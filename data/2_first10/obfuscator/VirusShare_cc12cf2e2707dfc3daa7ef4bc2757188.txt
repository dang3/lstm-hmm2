add
pusha
jmp
jg
iret
sbb
add
mulb
int
rolb
fisttpll
fcom
sub
push
inc
pop
sbb
shl
push
clc
pop
xor
add
movl
sub
psubsw
movb
sub
or
decl
push
xchg
pop
or
sub
and
and
and
rol
push
xchg
pop
sbb
movaps
xor
imul
jmp
and
push
inc
sub
xor
jmp
dec
hlt
or
push
cltd
pop
or
sub
pcmpgtd
xor
movl
jmp
sarl
sbb
rcrb
aam
out
add
repz
push
xchg
pop
unpckhps
jno
xor
jp
sbb
add
je
add
sbb
add
jnp
push
clc
pop
jb
movl
sub
jmp
in
add
push
lahf
pop
jnp
add
adc
or
xor
or
sub
push
clc
pop
pcmpgtd
jno
push
cwtl
pop
xor
jl
punpcklbw
jmp
sub
bound
pop
or
jmp
mov
fistpl
push
dec
pop
jb
psubb
jl
dec
movl
push
xchg
pop
jmp
cli
je
xor
shl
push
dec
pop
sub
dec
movl
jmp
jne
loope
cmc
adc
aaa
pop
xor
push
xchg
pop
sbb
sub
adc
jle
push
dec
pop
psrlq
push
inc
pop
or
sbb
push
dec
pop
and
push
inc
pop
movb
sub
jmp
adc
cmc
pop
jmp
lcall
sahf
rcr
and
cld
cmpl
jne
xor
push
ret
add
in
insl
xor
into
sub
mov
jp
push
adc
xchg
ror
pusha
les
subl
out
clc
inc
nop
cli
push
xchg
mov
stc
es
adc
enter
cmp
add
jns
xchg
adc
scas
aad
adc
rolb
out
inc
pop
adc
mov
jg
adc
rolb
mov
shr
clc
subl
adc
sahf
rcll
pop
push
hlt
or
cmp
jge
adc
out
or
sbbb
sub
das
add
xchg
adc
adc
and
adc
rorb
inc
jle
dec
idivl
shrb
xchg
gs
sub
push
cmp
fs
cmp
push
jle
fwait
sbb
dec
enter
adc
pusha
push
inc
jle
addr16
sarb
imul
push
outsl
jle
adc
push
out
jle
adc
data16
out
xlat
cmc
sub
pop
sub
sarl
scas
pop
fs
adc
pop
je
out
pop
rclb
pop
shr
inc
jle
lcall
pop
mov
divb
or
std
cmp
data16
out
clc
subl
sub
xchg
rclb
pop
jle
xchg
in
dec
pop
rolb
rclb
inc
jle
out
clc
scas
pop
test
pop
inc
mov
fstps
mov
test
nop
jns
dec
rclb
push
das
das
rorl
adc
mov
pop
jle
adc
push
rorl
cmc
rcrb
test
jne
dec
rclb
pop
cmc
nop
sbb
push
bound
lcall
rcrb
or
xorb
out
inc
adcl
out
inc
adcl
mov
daa
lcall
pop
insl
and
fsubs
lahf
pop
xchg
mov
cmc
pop
lcall
lcall
out
dec
pop
aam
test
hlt
adc
lds
lcall
fdivr
fiadds
insl
and
lcall
adc
add
rclb
pop
cmc
fcoms
cmpl
add
pop
dec
or
test
lcall
das
pop
sti
adc
cmc
or
fs
addl
jge,pt
xchg
cmp
sub
sub
or
lcall
movsb
sbb
subl
xor
push
roll
jns
add
rclb
pop
movsb
sbb
subl
pop
add
push
roll
and
xchg
or
cwtl
add
iret
xchg
push
push
pop
cmc
sbb
add
push
shrl
cmc
rclb
std
adc
push
std
adc
mov
rclb
cmc
add
jle
adc
lock
cmc
sti
lcall
jno
pop
jle
xchg
push
pop
adc
mov
jo
andl
mov
nop
adc
jbe
adc
cmc
sub
imul
pop
test
nop
adc
xor
pop
test
nop
adc
add
pop
test
push
pop
sub
aad
jle
cwtl
add
push
adc
inc
jle
stos
pop
jle
lcall
xchg
mov
js
xlat
add
adc
or
je
dec
loop
arpl
mov
gs
mov
adc
mov
push
imul
jb
xor
jae
pop
mov
je
mov
jne
sbb
jne
adc
jne
adc
pop
jae
mov
js
or
outsb
adc
popa
jb
xchg
je
or
jg
aas
rcrb
das
movsl
je
pop
cltd
jg
adc
jle
mov
bound
jle
adc
jle
adc
jle
adc
jle
adc
jle
out
and
push
pop
xor
adc
jle
adc
add
dec
leave
call
add
add
add
mov
add
add
add
mov
add
pop
add
add
adc
or
mov
add
cmc
stos
clc
or
cld
leave
in
jmp
repnz
dec
popa
sbb
xchg
stc
pop
xchg
mov
xlat
sbb
cmp
les
add
add
add
push
mov
sbb
mov
cs
add
inc
push
dec
add
push
add
push
sub
mov
and
lods
or
push
inc
pop
fcompl
inc
aad
or
pop
cld
add
pushf
out
ja
push
bound
ljmp
add
jnp
add
cmp
lods
add
fistpl
add
add
lods
add
iret
les
and
add
add
add
add
shrb
add
add
add
mov
add
xchg
add
add
sbb
add
add
add
add
add
add
add
and
add
add
add
add
jnp
add
add
dec
add
add
add
cmp
add
add
add
add
sbb
add
add
add
add
add
add
sbb
dec
add
add
les
pop
test
add
add
add
mov
add
add
fcmovnu
imul
add
push
fiadds
add
rol
add
add
add
addb
add
add
sub
insl
stos
add
add
jb
add
jo
add
roll
add
mov
add
push
add
adc
add
add
and
stos
and
repnz
addl
add
add
fld
sbb
in
add
dec
pop
lcall
inc
roll
xchg
nop
fisttps
fcmovnu
ljmp
aaa
xor
add
psadbw
cwtl
pop
pop
dec
insl
fidivrs
add
push
pushf
xlat
mov
adc
imul
sbb
mov
add
mov
pop
in
dec
inc
xchg
xchg
sbb
cmc
inc
push
pop
aaa
xchg
xor
or
cli
inc
scas
mov
add
inc
push
jmp
stc
xchg
sub
xchg
fdivl
or
xchg
incl
loope
orb
pop
jg
inc
out
shlb
into
push
xorl
xchg
cld
pop
xor
fcmove
in
mov
xchg
sbb
inc
lahf
les
xor
adc
test
push
jbe
push
mov
lds
cmp
test
push
xor
popf
repnz
icebp
xor
jl
loop
repz
pop
jmp
adc
mov
scas
push
mov
les
loope
and
or
movl
push
pop
push
lcall
lret
sub
adc
in
icebp
shrl
test
mov
push
lcall
jp
lcall
lds
fcoms
rorb
ret
push
outsb
ror
dec
inc
adc
roll
aaa
lret
mov
rcr
mov
mov
das
push
or
dec
xchg
add
pop
cmpsb
cmpsb
and
repz
vmovupd
subb
out
sbb
or
mov
xchg
into
pop
test
pop
mul
sub
pushf
std
stc
cmp
les
loope
sbb
test
mov
dec
and
mov
dec
mov
sub
aas
test
inc
or
fwait
out
testb
gs
lcall
add
adc
lret
sub
pop
push
sub
jmp
or
daa
mov
sti
into
addl
cld
adc
mov
xchg
lea
out
sbb
jnp
cli
and
std
adc
sbb
rorl
mov
pop
test
outsb
mov
lahf
xchg
js
jl
and
stos
icebp
lret
push
xchg
sub
rclb
adc
xorl
inc
xchg
mov
cmp
mov
mov
pop
cmpb
aas
je
xor
and
mov
fs
mov
xor
jmp
pop
push
jle
mov
pop
sub
fucomp
sub
mov
inc
les
pop
dec
std
mov
in
push
add
cld
sahf
cmp
outsb
inc
and
mov
dec
hlt
mov
lret
cmpsb
in
push
and
cli
sbb
outsl
rclb
icebp
mov
xor
mov
test
fdecstp
fs
fnstcw
rorl
adc
std
stos
int
and
pop
packssdw
in
xchg
pop
test
popf
xchg
pusha
mov
sbb
sbb
cs
or
pop
stos
pop
nop
jns
add
out
add
mov
fsubrl
cmpsb
dec
les
xor
adc
add
push
nop
add
mov
ficompl
arpl
repnz
pop
add
pop
push
lods
push
scas
adc
push
add
fwait
lods
cmp
and
sub
sbb
jmp
popf
inc
fidivl
pop
sbb
pop
push
cli
xchg
jg
mov
add
scas
das
ror
cmp
fsub
mov
ljmp
pop
daa
jnp,pt
and
cltd
jo
jmp
inc
and
ret
orl
sub
sbb
jne
imul
adc
shll
push
pop
mov
lods
ds
rolb
orl
push
pop
mov
rcl
mov
mov
test
jle
call
adc
shrb
sbb
mov
push
push
test
cltd
movsl
ret
mov
cmp
enter
sbb
sbb
ss
mov
xor
fcoml
xor
xor
ljmp
dec
xlat
inc
inc
add
sbb
mov
sarb
lods
cmp
adc
mov
or
cmpsl
arpl
hlt
mov
mov
xchg
xchg
loop
cmpsb
mov
mov
lds
mov
lea
pop
pop
fcmove
xchg
adc
xchg
int
mov
mov
push
imul
ja
out
adc
inc
fldenv
insl
pop
inc
sub
mov
notb
sbb
cwtl
outsb
scas
shl
adc
jae
mov
push
mov
adc
bound
sub
add
add
and
mov
test
inc
dec
dec
ret
lea
mov
jmp
sbb
jge
jb
call
rcrl
dec
add
xor
in
nop
xor
in
in
popa
hlt
pop
mov
adc
ds
jl
sub
mov
movb
mov
aam
ss
jcxz
lea
clc
scas
cmp
xor
cmp
xchg
clc
mov
jle
cmpsb
mov
push
fldt
ret
or
push
je
mov
inc
adc
mov
std
mov
int
pop
mov
bound
fwait
shl
or
mov
imul
mov
popa
adc
or
test
jg
icebp
aas
imul
add
es
lods
mov
aad
adc
mov
add
jl
cld
mov
lock
mov
insb
dec
sbb
lock
lret
jl
cmp
sub
push
add
jmp
inc
fbstp
add
les
in
movsl
scas
xchg
pop
inc
cmp
pop
push
test
mov
repnz
pushf
subl
ljmp
cmp
push
mov
cs
inc
jo
mov
js
jb
sub
pop
in
jae
clc
xchg
jp
insb
add
jmp
dec
push
dec
nop
rcll
push
movsl
mov
xor
xor
sbb
fwait
jnp
ja
mov
add
mov
jmp
addr16
mov
cmp
popf
jne
dec
in
fwait
iret
call
enter
daa
mov
aas
in
out
outsl
push
in
lock
addr16
jne
inc
fnsave
daa
cmpsl
mov
cmc
sbbl
shll
push
push
shlb
in
lcall
jmp
or
ret
loop
push
or
ja
out
jmp
push
hlt
fstpl
dec
frstor
cmpl
push
nop
fsts
cmp
mov
lock
lea
mov
leave
mov
dec
xchg
xor
cli
sub
dec
push
dec
mov
lret
adc
or
clc
js
imul
aam
into
xchg
outsb
notb
movsl
cmp
shl
pushf
cmp
push
lods
movsb
out
fsubrl
cli
mov
outsl
movsl
mov
push
jle
fs
js
jae
popl
lea
cmpsb
pusha
cmc
fs
out
sub
mov
cli
stc
dec
mov
lea
mov
iret
aam
or
sub
pop
mov
pushf
jmp
cmc
jo
fidivrl
shll
pop
mov
mov
adc
and
cmp
adcb
in
out
lea
test
ret
cs
add
mov
aas
stos
mov
rcr
dec
adc
sarl
mov
aad
cmpsl
out
sub
xor
jae
mov
and
in
repnz
les
fnsave
mov
sub
adc
sub
jae
fxam
and
adc
lods
and
roll
push
push
ds
fwait
jo
js
mov
int
mov
fwait
dec
push
lods
dec
lods
mov
mov
jecxz
loop
add
jb
jge
mov
add
xor
lret
xor
pop
pop
lds
xor
insb
jne
push
xchg
clc
cmc
jp
test
sbb
lds
icebp
pop
pop
fdivr
or
sti
vmovntps
in
arpl
test
cmp
xchg
pop
mov
inc
cmp
cmc
mov
in
cmpsl
inc
js
xchg
sbb
jg
push
jecxz
pop
sbbl
xor
mov
sub
dec
pop
es
cmp
in
xchg
mov
push
push
fs
stos
mov
test
adc
push
xor
call
sub
xchg
or
cmp
movsl
jl
loope
movsl
in
sbb
popf
xor
test
cmp
outsb
jns
into
jmp
sbbb
fisubrl
sub
sbb
lds
sti
mov
xorb
lock
xor
push
xor
imul
sbb
js
test
jns
shll
lods
pop
fcoml
fnstenv
xor
push
icebp
scas
ficomps
xchg
addl
pushf
and
cmp
cli
clc
cmp
mov
xlat
testl
dec
addr16
into
scas
and
mov
inc
jecxz
mov
bound
iret
or
push
data16
inc
and
rcrl
cmp
mov
add
jmp
sub
lret
jo
pop
sbb
int
dec
scas
mov
dec
xchg
sub
nop
movsl
repz
mov
and
cmp
jo
push
loopne
sub
add
daa
jge
in
lret
dec
int3
adc
enter
es
lcall
pop
cld
subl
add
push
mov
cmp
mov
dec
fadds
icebp
inc
test
pop
mov
pop
push
les
mov
xchg
ret
cmpb
je
cmpsl
fnsave
aaa
or
or
pop
ja
mov
or
imul
lods
fisubs
repnz
shl
stos
sub
mov
mov
ficoms
adcl
imul
leave
inc
mov
adc
repnz
dec
out
cmp
sub
cmp
mov
add
cmp
xchg
lcall
ret
sbbb
in
aam
repz
movsl
jae
fadd
sbb
cmpsl
mov
stos
lcall
movsb
or
fadds
int
push
inc
xchg
jb
jne
mov
les
cmp
sbb
mov
mov
movsb
ds
push
ss
in
cmp
jno
jns
add
xor
outsb
cmp
adc
loope
lock
sbb
add
inc
pop
add
adc
outsb
ds
mov
jle
je
adc
push
sahf
test
xor
mov
sti
test
mov
and
and
jae
movsb
jge
jbe
jle
inc
mov
daa
cltd
cmp
enter
pop
outsb
das
fisubrs
and
orb
mov
mov
out
cs
cmp
ds
imul
cwtl
lock
add
jge
sbb
cmpsb
pop
xchg
and
repnz
mov
in
outsl
subb
mov
into
and
jg
lcall
and
jo
inc
shlb
push
fsubs
inc
lret
shrb
in
leave
lods
pop
pop
test
jg
ret
or
jo
push
stc
aas
jae
int
mov
sbb
ljmp
adc
lds
cmpsb
iret
test
cmpsb
lods
std
inc
test
push
scas
nop
hlt
shlb
cld
xchg
xor
sub
or
ret
adc
in
mov
push
insl
fdivrp
xchg
fsubp
subl
fiadds
mov
cmpsl
inc
or
or
xchg
mov
cmpsl
int3
cld
push
jmp
dec
popf
ljmp
pop
sub
or
daa
and
pop
ficoml
sbb
imul
je
jb
xchg
mov
mov
lds
mov
mov
mov
dec
icebp
test
mov
mov
enter
push
sub
rol
push
nop
icebp
sbb
or
test
cmp
jno
fists
pop
xchg
pop
fidivs
inc
int3
iret
movsb
call
push
jle
repz
cmp
scas
dec
pop
adc
jge
mov
fdivl
pop
outsl
mov
add
inc
jnp
in
rorb
or
jmp
jns
sti
sbb
or
sub
pop
out
cmp
lock
movsb
xor
call
cmp
ss
in
pop
cmp
nop
fdivrs
shlb
ljmp
adc
push
add
repnz
cmp
out
push
fsubrs
mov
enter
pop
sub
xchg
sbbb
dec
cmc
test
xchg
cld
cmp
movsb
jmp
sahf
cmp
vfmsub213sd
mov
notl
pop
xchg
jg
lss
push
push
aas
outsl
outsb
test
pop
stos
imul
mov
mov
push
sbb
add
lock
jecxz
icebp
jecxz
mov
jmp
ds
jl
mov
lret
pop
addr16
sarl
pop
adc
pop
stos
cmp
mov
mov
cli
cwtl
sbb
xchg
fcmovnu
cmp
pop
jae
movsb
addr16
data16
inc
pop
les
push
adc
mov
inc
or
xor
cmp
dec
fs
adc
xor
mov
arpl
aad
mov
sub
ja
fdivl
add
lock
popa
rep
cmp
iret
ljmp
lret
in
xorb
or
sub
lret
jmp
cmpsb
lods
stos
ljmp
dec
loope
or
fsts
in
divl
int3
or
es
out
cmp
xor
pop
andl
mov
push
sbb
add
rcrl
xchg
cwtl
sbb
mov
pop
repnz
xor
mov
mov
std
pusha
inc
fstpt
push
jo
push
dec
dec
and
fimuls
ljmp
mov
push
dec
sbb
or
shrl
sbb
testl
sbb
mov
enter
dec
xor
in
sbb
lcall
orb
enter
lock
insb
inc
scas
fs
stos
and
inc
arpl
into
idiv
sub
jns
sub
mov
adc
mov
in
xlat
mov
dec
xor
adc
mov
cltd
push
jno
out
push
mov
test
outsb
stos
dec
in
xchg
testb
pop
aas
ret
popf
mov
out
and
mov
xorb
mov
es
pushf
mov
ret
xchg
call
pushf
cmpsb
sti
xor
mull
mov
cmp
les
push
xchg
icebp
cmpsb
mov
pusha
sub
out
roll
addl
jbe
shll
pop
repnz
push
testb
mov
xchg
jne
inc
push
add
xchg
ficomps
sub
inc
sarb
lret
sbb
es
pop
add
fs
int3
mov
insb
cs
xchg
lods
stos
loope
and
in
into
dec
mov
icebp
sub
pop
stc
push
mov
bound
jl
xchg
inc
lods
pop
lds
jo
loopne
mov
jo
push
test
jmp
xchg
pop
push
jmp
cwtl
in
test
and
push
add
and
sbb
inc
xchg
add
addr16
xchg
xchg
sub
scas
ret
lret
std
dec
sahf
sbb
iret
inc
adc
mov
lcall
in
mov
push
jmp
mov
dec
les
cmp
fdiv
lods
jne
adc
sarb
and
ret
dec
imul
jl
and
wbinvd
jno
cmp
push
mov
mov
add
in
push
rcrb
repz
rcrl
lods
jp
sar
xchg
movsb
or
or
xor
out
sar
mov
test
es
and
call
xor
xor
push
jle
push
imull
popf
fldl
xlat
stc
push
pop
cltd
xchg
cmp
mov
xchg
push
fs
adc
in
xor
cmp
inc
sbb
sahf
mov
push
xor
lods
arpl
inc
inc
inc
pop
sarb
int
push
je
sbb
xchg
rcpps
enter
add
fidivrs
sbb
push
cmp
add
and
add
lea
mov
fdivp
push
and
cmp
ficoml
push
test
loopne
sahf
dec
jb
add
outsl
and
dec
mov
clc
and
mov
mov
incl
pop
lods
xor
or
and
rep
movsl
into
scas
out
inc
frstor
daa
adc
ret
push
ret
push
xchg
pop
fcmovb
mov
das
outsb
sub
mov
fdivl
sbb
sbb
inc
insb
inc
loope
jle
dec
arpl
cmp
cmp
pop
into
insb
fdivs
cmpsl
add
push
mov
stos
sub
mov
mov
jge
lret
rclb
push
fidivrl
loop
pop
sub
jecxz
mov
inc
pop
mov
cltd
xchg
out
ss
jns
jecxz
lret
test
hlt
or
orl
sbb
add
idivl
xor
and
dec
lahf
mov
imul
scas
add
xor
dec
cmp
adc
idivl
push
int3
sbb
nop
xchg
cmpsb
sbbl
push
repz
lds
or
loop
push
dec
fldt
or
fdivr
jg
add
or
xchg
adc
fsubrl
cld
add
loop
inc
leave
mov
mov
jp
or
cmp
adc
xchg
jns
jb
out
dec
repnz
xchg
pop
pop
or
cmp
inc
and
movsb
jp
insl
imul
add
push
cmp
lods
ficoms
cwtl
repnz
mov
sub
sbb
pop
sbb
push
xor
jmp
es
out
in
int3
inc
in
mov
scas
out
mov
cltd
cld
hlt
push
push
push
mov
add
stc
ret
add
ficompl
lock
push
mov
scas
in
mov
filds
jle,pt
call
and
fists
mov
mov
fistps
fwait
cwtl
std
data16
pop
dec
push
xor
mov
mov
cmp
pushf
shl
inc
and
inc
add
outsb
dec
xchg
int3
or
cmpsl
and
cmp
cli
xchg
mov
add
and
inc
fildll
lock
dec
incb
stos
xchg
push
test
jecxz
shlb
push
pusha
testb
pop
pushw
adc
aam
jle
clc
xor
sbb
std
stc
inc
mov
push
xor
inc
dec
adcb
push
packuswb
inc
insl
fimuls
stos
in
addr16
fnstenv
test
or
pop
mov
stos
mov
rolb
int
sbb
sbb
call
cli
xchg
mov
cmp
mov
adc
cmpsl
sub
jns
cmc
movsl
fiaddl
test
lret
mov
mov
aaa
push
inc
mov
rcll
adc
repz
rcll
cmp
fcoms
iret
xchg
and
fwait
mov
jbe
mov
mov
xchg
sbb
shrl
push
cmp
dec
popf
push
gs
jg
pop
cli
push
orl
jo
lods
jne
jmp
xor
mov
pusha
push
pusha
adc
popf
mov
sbb
repz
fs
in
mov
and
out
push
loopne
lcall
adc
or
out
cmp
push
rorl
xor
pop
xor
aam
pop
insl
push
inc
fsubl
pop
lds
dec
sti
xchg
movsl
out
mov
das
adc
insb
in
mov
jo
xchg
add
xchg
clc
lcall
adc
mov
sub
xlat
pop
nop
fxch
call
xor
jbe
cmp
aad
enter
mov
xchg
lea
lods
out
cltd
mov
fists
and
and
or
aad
jg
lret
push
xor
lcall
insb
dec
sbb
add
sub
mov
push
les
jnp
mov
push
and
dec
sub
movq
jp
ret
rolb
add
inc
hlt
shrl
sti
pop
nop
aam
push
mov
les
cmp
pop
stc
out
arpl
push
mov
out
and
dec
and
leave
pcmpeqd
out
mov
outsl
js
data16
xor
mov
inc
rcll
movsb
insl
dec
inc
jge
add
xchg
mov
add
enter
loope
xor
insb
add
out
mov
xchg
pop
jle
lret
adc
lock
jbe
sub
int3
loope
rolb
fsubp
fwait
ds
sub
mov
or
cs
je
icebp
mov
or
aaa
movsb
sbbb
dec
fcomps
push
xchg
fistps
imul
jnp
pop
cmp
cmp
mov
ljmp
dec
rorb
fnsave
inc
dec
pop
fsub
scas
pop
cld
lret
mov
dec
loope
push
pushf
lcall
lods
add
cmp
mov
push
aam
int3
jnp
leave
push
pop
popf
outsl
push
xor
outsl
iret
mov
jno
cmp
pop
dec
bndstx
mov
add
test
mov
jle
xor
sbb
xor
repz
sub
pop
repnz
push
stos
fidivrs
into
stc
mov
enter
sub
add
mov
xchg
test
xchg
call
push
scas
or
and
out
add
add
sti
dec
and
push
adc
jb
pop
pop
pxor
fistpll
mov
shlb
mov
in
andb
mov
sbb
jp
std
adc
jp
add
mov
jge
and
sbb
jb
jno
cmp
loope
or
popa
pop
mov
pushf
mov
or
xor
sbb
lds
mov
pop
fimuls
push
stc
and
cltd
xor
mov
inc
lea
cmc
lret
jle
ror
and
adc
push
pop
xchg
rcrl
mov
cmp
inc
push
fdivr
mov
dec
loopne
lcall
jns
icebp
mov
adc
iret
popa
xchg
pop
pop
xchg
ror
push
lock
std
ds
jge
ficoms
cmp
add
xor
or
inc
push
repnz
xchg
mov
shr
inc
in
mov
sbb
arpl
loopne
pop
aaa
fwait
push
jp
dec
mov
mov
ljmp
or
pop
mov
adc
mov
pop
push
sbb
mov
dec
xor
pusha
mov
adc
cmpsb
movsl
adcl
frstor
push
daa
mov
aad
stos
lcall
pushf
mov
sub
ja
or
sahf
and
jae
out
push
jne
aas
mov
insl
add
outsl
xchg
jp
pop
xor
push
add
and
leave
or
adcb
dec
sub
dec
fcom
mov
sahf
pop
pusha
adcb
mov
js
push
pushf
cmp
xchg
push
int3
xor
mov
push
pop
and
jo
enter
xchg
add
ror
ficomps
sbb
pop
inc
scas
jnp
xor
mov
mov
add
jmp
in
inc
repnz
sub
das
dec
inc
ja
sub
lods
bound
jle
inc
enter
ss
mov
add
xor
fistps
cs
pop
mov
fcompl
rorb
push
cli
mov
mov
sbb
jne
jle
in
iret
push
icebp
cmc
push
repz
cmc
jl
mov
mov
fsubrl
jno
subb
push
and
dec
pop
lahf
adc
in
pop
adc
rorb
adc
mov
xor
mov
in
pop
movsl
sbb
inc
loop
in
rcl
pop
aam
sbb
fistpll
jo
ficoms
sub
sub
std
push
int
popf
jg
pop
push
jbe
xchg
lret
mov
sub
cmp
hlt
sub
xor
dec
inc
cltd
and
int3
fdivs
push
dec
push
stos
dec
and
fs
push
push
jecxz
sbb
insl
aam
jo
cs
mov
in
mov
xchg
shl
popf
daa
cmpsl
imul
fcmovu
sub
fsubs
ljmp
mov
aam
xlat
stc
and
dec
aam
out
pop
sbb
mov
sahf
pop
mov
xorl
inc
in
jmp
cmp
pop
aaa
fisubs
ror
mov
adc
iret
lahf
adc
out
push
jo
pusha
orl
test
les
cmc
icebp
push
push
xor
ds
pop
cltd
lods
sbb
rcll
pop
enter
jnp
or
cli
rcrl
imul
jmp
int3
mov
shlb
jl
dec
lock
mov
lock
xchg
sbb
inc
out
dec
mov
dec
lock
gs
testb
xchg
cmp
mov
fwait
or
popa
insb
mov
clc
xchg
cmp
popa
mov
sbb
dec
sahf
xchg
add
mov
dec
cmpb
xchg
leave
fisubrl
dec
push
iret
push
add
mov
xchg
pop
jae
das
sar
js
fldcw
repnz
pop
xor
fists
aad
jp
test
cmp
pop
or
shll
xchg
arpl
push
sbb
mov
leave
les
mov
push
xchg
xlat
testl
push
xor
xlat
add
rorl
fwait
inc
cld
mov
mov
es
dec
adc
imul
jb
test
fldenv
adc
cwtl
pop
out
loop
cli
in
aad
vmread
out
sti
out
gs
out
or
adc
and
sar
mov
mov
pop
push
cmpsl
adc
mov
pop
into
movsb
outsb
mov
sahf
sbbl
push
jp
sbb
jnp
push
movsb
mov
dec
cmp
repz
iret
dec
cmpsl
push
and
psraw
and
adc
shrb
lea
std
add
loopne
ss
icebp
and
sarb
cmpl
xor
pop
sub
in
push
rclb
ret
addr16
popf
xchg
rorl
js
ret
add
in
push
and
or
sub
fcoms
cld
push
mov
push
movl
mov
jle
sbb
mov
je
adc
mov
sub
das
test
xor
mov
mov
sub
or
add
lret
call
stos
ss
and
ja
pop
pop
jbe
xchg
adc
push
cld
mov
sub
pop
push
cmp
xchg
push
pop
clc
shll
hlt
cmp
push
jmp
xor
inc
inc
xchg
sbb
jmp
adc
pop
mov
icebp
sub
pop
inc
stos
push
lods
out
add
or
push
push
aas
adc
fwait
cmp
shlb
inc
xor
jno
fmuls
iret
or
fmull
mov
cltd
lods
arpl
scas
mov
mov
add
jge
dec
mov
test
push
mov
sbb
cmp
insl
pop
push
adc
cmp
lea
fsubl
das
inc
pop
cmpsb
mov
test
sub
loope
mov
xchg
pushf
jbe
xchg
clc
mov
mov
add
xor
mov
adc
sub
fistpl
jmp
call
push
xor
pop
jbe
bound
xchg
or
dec
nop
inc
stos
sub
jmp
mov
mov
popf
mov
push
sub
jmp
aaa
daa
sbb
jmp
out
cmp
js
pop
mov
push
stos
push
mov
dec
adc
or
js
lock
lods
xor
out
pop
fsubrp
sub
jae
roll
or
adc
aam
pop
shlb
xor
pusha
rcrl
adc
scas
cmp
and
ret
adc
and
lods
and
mov
xor
roll
hlt
arpl
cmpsl
mov
inc
pop
lret
test
lahf
rol
notb
popa
adc
add
lret
shlb
adc
mov
test
push
loopne
dec
out
sbb
dec
mov
mov
xchg
mov
cwtl
orb
es
pop
imul
mov
das
outsl
gs
xchg
pop
fimull
rolb
js
jle
mov
in
bound
inc
int
jle
push
imul
sbb
mov
jg
sbb
mov
in
arpl
fnstcw
adc
aad
rolb
popa
stos
xchg
pop
into
movsl
mov
mov
ds
pop
pop
fs
push
pop
nop
xlat
stos
push
inc
leave
mov
movsl
push
insl
mov
fwait
hlt
call
sub
insl
mov
mov
stos
fistpl
pop
dec
in
and
fisubrl
jne
call
pop
popa
out
push
fldcw
mov
sbb
mov
cmp
push
dec
pop
pop
xor
test
sti
or
push
mov
pop
and
mov
push
shl
adc
add
pushf
jmp
test
add
sbb
xchg
xchg
and
in
mov
pop
outsb
mov
data16
imul
iret
lcall
out
push
pop
mov
push
movl
adc
cwtl
test
ljmp
dec
dec
cmp
sbb
in
imul
loopne
and
inc
push
pop
call
jmp
jae
jo
loope
xor
cli
xor
out
aas
popf
inc
loop
cmc
int3
xchg
stos
adc
cmpsl
inc
pop
mov
inc
xlat
xor
sbb
test
mov
das
mov
in
mov
sbb
ret
cmc
ss
xchg
sbb
imul
xor
sub
xchg
push
mov
xor
jnp
repz
jns
sub
into
mov
arpl
test
xchg
push
aam
in
ret
add
and
addr16
mov
in
cmp
mov
push
sbb
mov
imul
cmp
mov
add
lahf
test
inc
xor
fisttpl
out
ljmp
negl
imul
rcll
arpl
call
cmpsl
imulb
adcl
lret
cmpsl
mov
dec
xchg
mov
out
cmp
adc
or
mov
dec
cmp
orl
add
xor
ss
jbe
test
or
dec
pop
sbb
stos
mov
push
iret
subb
adc
xor
stos
xchg
xchg
in
mov
sbbl
lds
pop
add
std
mov
mov
cld
inc
add
loope
cld
imul
ret
les
test
loopne
add
out
fdiv
mov
scas
cmp
pop
aaa
sub
test
push
mov
in
push
fcmovne
push
popl
sbb
movsb
lret
xorl
add
pop
ja
xchg
daa
lcall
push
jne
push
sub
jns
or
daa
add
fcmovne
mov
cmp
sbb
jecxz
decl
or
ret
cmpsb
and
jg
popa
lods
sub
push
jp
lahf
scas
das
cmpsl
test
shll
sbb
jp
and
mov
clc
push
dec
mov
push
fsubrl
out
in
jp
and
or
cmp
repnz
mov
push
cmp
jne
xchg
hlt
mov
sbb
insl
iret
sbb
mov
lods
mov
and
nop
dec
popa
negb
stos
push
ljmp
dec
cld
pusha
jmp
bound
xor
pop
mov
scas
popf
push
sti
mov
mov
stos
inc
mov
cmovs
insb
push
jg
jge
aas
xor
and
cs
loopne
into
push
jmp
sbb
xchg
sub
mov
popa
pushf
ficoms
sbb
cmp
ret
sbb
cbtw
xchg
push
clc
cltd
sub
or
cli
movsl
jae
lret
mov
hlt
mov
sub
sub
jecxz
jns
repz
jne
pushf
xor
mov
jne
addb
xor
mov
inc
pop
push
iret
subb
loopne
dec
or
mov
faddp
xchg
xchg
add
movsb
cwtl
sub
scas
cli
fdivl
adc
add
movsl
fnstenv
sub
and
mov
ss
sbb
cmp
inc
pop
pop
add
add
or
aaa
scas
movl
mov
js
pop
push
mov
inc
sub
adc
test
movsl
inc
insl
sub
sbb
out
outsb
fwait
cmp
repnz
fs
jae
fsubrl
pop
hlt
stc
or
inc
aas
call
lcall
and
pop
adc
push
mov
adc
mov
pop
test
lds
sub
adc
push
jns
insl
outsl
mov
lcall
pushf
lods
repz
movsb
sbb
ret
jl
sub
jl
fsts
fidivl
add
mov
aad
xor
xor
leave
or
push
sti
mov
cmp
mov
cmp
dec
jb
sub
or
cmp
or
push
adc
lret
cmpsb
mov
push
pop
adc
movsl
arpl
pushf
inc
or
cld
das
sbb
je
push
or
aas
mov
rcrb
outsl
cmpsb
in
incb
adc
mov
fdiv
lret
dec
pop
xor
mov
loopne
or
add
int3
sub
cld
aas
jo
stc
lret
jb
fwait
sbb
fisubs
xlat
add
dec
sbb
jmp
add
and
gs
xlat
aam
cmc
and
mov
jbe
cmp
clc
xor
mov
movb
xor
test
pop
sub
aas
sbb
lds
daa
pop
and
add
cmp
mov
push
mov
icebp
adc
icebp
add
mov
xchg
sub
jecxz
lret
mov
cmpsl
jo
mov
cld
out
daa
mov
cltd
adc
psllq
cmc
mov
inc
arpl
sbb
std
push
scas
enter
stos
orb
sub
roll
addr16
jb
mov
mov
int
xor
mov
push
aam
andb
fsubrl
pop
arpl
sbb
mov
xlat
xchg
add
outsb
pop
jo
add
cmp
fisttps
cmp
loop
mov
popf
xchg
push
subb
insl
insl
or
xor
stos
cli
cld
sub
pop
cs
dec
out
insb
mov
je
test
enter
je
in
and
push
mov
jno
pop
and
mov
enter
std
add
cmp
cmpsb
dec
push
aas
dec
xchg
and
lods
daa
sti
push
or
xor
mov
cmpsl
hlt
jns
cmc
jo
jnp
jbe
ds
rol
cmp
std
jb
mov
lea
add
mov
cs
jnp
push
push
sarb
mov
ds
lret
jns
mov
mov
hlt
jle
rcr
lahf
mov
js
lock
sbb
xchg
pop
xchg
xchg
xchg
aas
cmpsl
xchg
push
push
inc
sub
mov
and
xchg
shl
jb
dec
popa
insb
cld
jne
int
sub
inc
popa
js
pop
int3
xlat
mov
loopne
inc
int3
push
pop
inc
pop
dec
cld
mov
arpl
popa
roll
popl
jge
xor
inc
sub
lods
enter
fisubs
mov
fstl
arpl
cmpsl
and
bound
arpl
cmc
je
pop
sbb
gs
das
dec
repnz
add
bound
aam
imul
daa
jb
loop
fwait
test
repz
or
in
mov
out
xchg
fisubrl
lcall
sti
int3
cmp
mov
fsubs
jb
pop
movsb
icebp
fs
dec
jae
push
dec
add
xor
mov
ret
mov
fsubr
xlat
jns
pop
adc
or
jne
in
xlat
cltd
cli
sahf
fisubrs
out
rcrb
dec
mov
fstp
add
fdivrl
mov
scas
xchg
push
add
in
pushf
repz
push
adc
test
and
popf
imul
pop
add
pop
push
and
fiadds
fisubrs
inc
dec
push
dec
xor
insl
loope
push
mov
push
dec
cmpsl
shl
inc
mul
loope
push
mov
cmp
fldl
pop
sbb
aaa
mov
cmp
idivb
add
jbe
cmc
mov
jae
or
cltd
lods
loope
push
subl
arpl
mov
and
adc
nop
xchg
sarb
jne
sub
push
sbb
leave
ljmp
mov
dec
sub
xorl
insb
mov
cmpsb
push
in
inc
insb
pop
push
xchg
push
scas
loopne
shll
mov
mov
mov
repz
pop
push
stos
cs
xor
fnstsw
cli
pop
push
pop
or
test
or
mov
lret
movsl
cmp
fistpl
pop
into
into
pop
out
push
sbbl
cmp
cmp
cmp
xchg
fscale
jno
enter
negl
xchg
leave
ja
jb
punpcklwd
int
mov
mov
cmc
and
push
aad
inc
ret
lods
sti
xchg
mov
pop
imul
lret
pop
cmp
in
mov
jno
int
mov
test
jl
jo
push
mov
xor
pop
imul
nop
shl
test
and
inc
cmp
or
push
in
pop
ds
push
xorl
nop
lods
sbb
xor
pusha
fwait
jl
lahf
jns
jns
mov
fiadds
and
mov
cmpsl
pop
std
pop
test
out
xchg
xor
sbb
mov
cmp
push
mov
leave
aas
out
inc
xor
mov
sbb
sbb
ljmp
xchg
stc
push
inc
out
pop
xchg
sbb
mov
or
xchg
push
inc
pop
xchg
daa
jne
fs
xor
sub
xor
jne
push
cltd
dec
xchg
int3
xchg
call
cmp
arpl
and
rolb
dec
or
es
push
pop
lret
lods
cwtl
outsl
and
and
inc
mov
cmp
mov
sbb
sbb
lea
call
or
divb
and
into
arpl
add
aam
rcl
aam
inc
and
xchg
sbb
inc
dec
pop
pop
test
xor
cmpsl
mov
fcomps
sbb
aas
into
xchg
xor
iret
inc
add
loope
push
cmp
mov
or
mov
leave
pop
mov
or
push
pop
inc
push
mov
mov
jp
mov
movsl
mov
lcall
and
loope
jbe
cld
add
mov
mov
sub
loopne
leave
pop
in
push
jnp
push
lret
ss
xor
pop
inc
rcrl
fisubrl
jecxz
addr16
cs
data16
lcall
sbb
cmp
vmovaps
pop
data16
jno
fxch
leave
xchg
fisubrl
insb
loop,pt
sub
call
idivl
lea
adc
xor
push
add
and
pop
shlb
jl
xorb
ja
adc
addr16
mov
pop
popf
and
sub
and
adc
pushl
pop
fst
lahf
sbb
cmp
mov
push
xor
ret
sbb
jb
aaa
pushl
lods
jno
test
pop
push
xchg
inc
aaa
into
mov
xlat
pop
pop
lea
xchg
ss
hlt
dec
or
inc
adc
stc
xchg
or
stos
jg
dec
clc
gs
pop
nop
jns
sub
mov
jle
sbb
adc
cmp
test
stos
daa
sub
mov
out
xchg
and
daa
sbb
insb
stc
or
mov
adc
mov
test
daa
push
lret
mov
fisubl
leave
int
insl
aad
negl
push
bound
ds
stos
jb
jno
cmp
xor
clc
add
jbe
aam
outsl
pop
jb
lret
insl
sub
test
add
arpl
inc
cmc
loope
mov
mov
std
adc
jbe
pop
sbb
lret
in
add
lcall
or
fidivs
and
negl
mov
iret
inc
aam
xchg
xor
mov
jb
sub
addb
rclb
shrl
dec
adcl
push
xchg
push
xchg
ljmp
fadds
xorb
lcall
sub
push
lods
stos
adc
outsb
in
in
xor
adc
dec
add
push
jo
js
js
imul
mov
jmp
js
xchg
sub
xor
fimull
inc
fwait
push
stos
cmp
aam
mov
mov
xchg
cltd
sbb
ss
xor
mov
insl
dec
aas
mov
sarb
sub
sti
add
mov
shlb
jmp
cmp
mov
xor
lea
or
mov
nop
and
icebp
outsl
testl
addr16
xchg
shr
mov
aam
negl
lds
bound
in
add
mov
sbb
dec
aad
cmp
cmpb
cmp
inc
imul
lock
push
es
inc
dec
scas
fmuls
mov
sti
xchg
lods
jle
dec
jge
inc
aaa
out
mov
mov
dec
sub
out
pop
xorb
cmp
jns
movsb
lea
enter
and
cmc
std
xlat
push
xchg
pop
mov
ffree
pop
jmp
sub
mov
insb
xchg
rolb
sbb
out
cmp
xor
in
inc
jmp
cmc
mov
add
xchg
rcl
jp
dec
lret
bound
xchg
outsb
fisubrs
dec
lods
jae
add
movsl
push
pop
sub
bound
pop
push
leave
xor
subb
insl
fnsave
mov
popa
push
dec
and
lock
or
shlb
fstpt
sahf
test
adc
mov
xchg
adc
dec
sub
inc
repnz
jno
jb
cmc
cmp
adc
mov
jne
pop
jge
or
jnp
pop
jle
les
repz
add
cmp
int
mov
or
bound
jb,pt
ja
xchg
dec
in
lock
push
rcrb
shrb
mov
mov
adc
shll
out
cwtl
cmc
in
xor
mov
mul
pop
decb
inc
mov
test
scas
testl
lds
xchg
pop
lock
push
test
inc
jns
test
int3
aas
outsl
subb
pop
aaa
in
iret
or
imulb
mov
pop
mov
sub
sub
pop
cmp
daa
xor
jb
stc
shrl
sub
jno
rclb
cmpsb
push
imul
scas
sub
inc
dec
inc
xchg
jns
leave
cmp
mov
call
xchg
sub
adcl
iret
aas
mov
jge
pop
jo
jnp
adc
mov
cmp
and
jg
insb
push
stos
pop
adc
lds
test
rorl
xchg
lods
iret
scas
xchg
ret
jp
sbb
iret
test
dec
cmp
push
fnsave
mov
push
bound
fisttpl
and
test
xor
repz
mov
stos
jae
dec
pop
mov
mov
sbb
adc
in
mov
lret
mov
cmp
lock
xchg
pop
adc
out
push
or
pop
cli
inc
xchg
orb
fs
sub
mov
aaa
scas
jb
sub
mov
push
pop
fwait
aaa
adc
loope
fiaddl
push
data16
aad
add
cltd
aas
gs
mov
xchg
jle
in
insb
push
xchg
sub
lret
pop
das
ljmp
int
pop
jnp
sub
or
mov
sub
dec
jp
out
and
mov
and
lret
daa
sti
lret
aam
cmc
mov
iret
cmpsl
dec
xor
in
jle
sub
nop
push
sub
inc
pop
xchg
cmp
cmpsb
shll
in
incb
inc
lcall
mov
dec
push
mov
adcl
push
pop
mov
jg
mov
jp
ds
dec
insl
insb
jbe
sbb
cmp
jo
and
cmp
sbb
scas
xchg
lea
cmp
or
fnsave
pop
sbb
jno
add
jbe
pop
add
mov
test
gs
dec
inc
jae
mov
mov
aas
sti
scas
fwait
mov
jne
fs
aam
pop
pop
fbld
mov
cs
or
jl
movsb
pop
mov
xchg
divb
sub
xchg
jbe
add
loope
shrb
in
xchg
pop
ret
gs
and
sub
nop
or
or
mov
inc
in
push
dec
pop
popa
call
adc
int
clc
xchg
nop
sub
mov
and
in
adc
pop
test
and
sbb
xchg
cmpsb
cmp
and
js
lock
sbb
sbb
sub
fucom
ja
fwait
insl
std
mov
sub
leave
icebp
bnd
lret
fldenv
data16
pop
loope
test
test
inc
mov
popf
pop
in
jl
movl
mov
jg
clc
paddb
fs
cld
bound
jmp
insl
inc
lods
add
jp
and
xor
mov
xchg
jbe
insb
adc
movups
mov
gs
lock
mov
cwtl
dec
add
pop
enter
pop
adc
jle
jae
daa
loop
aad
push
out
add
lret
dec
pop
xor
sub
mov
lahf
lahf
mov
mov
pop
outsl
sub
data16
rolb
jo
icebp
iret
push
jp
mov
mov
jmp
lds
das
push
inc
xchg
xor
and
in
add
mov
repnz
mov
aaa
repnz
jecxz
mov
xchg
aad
mov
dec
push
sbb
pushf
and
pop
jne
mov
inc
cmp
lods
jmp
jae
fldt
mov
mov
pop
or
mov
or
mov
movsb
add
popl
xor
pushf
fsubr
data16
inc
ret
daa
mov
out
push
in
adc
xor
mov
cmp
or
orb
push
mov
int
insb
mov
scas
xor
push
inc
and
movsl
movsl
enter
jo
and
mov
inc
in
add
aam
adc
movsl
jo
rolb
test
ss
adc
sbb
daa
xchg
xchg
cmc
and
jmp
add
mov
out
fimuls
movsl
aam
popw
xor
insb
into
les
arpl
out
sbb
aam
cmpsb
adc
fcmovne
jmp
jns
mov
lock
or
pop
jno
loop
jne
adc
imul
mov
cwtl
les
or
mov
cmc
xor
and
loopne
cwtl
add
insl
mov
fidivs
cmpl
adcl
sub
sbb
mov
inc
add
bound
cmpsb
pushf
xor
lock
les
jbe
imul
dec
sub
int3
js
mov
test
data16
clc
jne
pop
adc
pop
mov
and
je
leave
popl
ret
push
lea
fs
xchg
movsl
cmp
dec
lds
jbe
stos
dec
dec
sub
aam
sbb
popf
dec
pop
and
cmc
das
inc
push
xor
imul
lds
add
dec
mov
adc
mov
sub
add
push
cmp
ljmp
mov
sub
or
jno
loop
aaa
pop
inc
cmp
mov
repnz
sti
stos
add
js
dec
test
cs
or
push
xor
psubq
jbe
inc
xchg
mov
sbb
ljmp
push
xor
sub
and
push
xor
xchg
sbb
fsub
push
dec
adc
mov
jbe
scas
or
int3
add
push
jae
clc
sub
sahf
xlat
es
pop
or
xchg
fstps
cs
inc
xchg
pop
jo
pop
pop
jns
mov
shl
mov
cmpl
out
loop
arpl
jno
push
out
out
mov
popf
cmc
and
push
xchg
dec
xchg
sub
mov
xor
push
mov
and
inc
inc
cmpsl
mov
lds
lahf
fstps
adcb
mov
xchg
dec
icebp
into
stos
cmpsb
mov
sbb
jb
inc
mov
pop
cmp
adc
in
and
imul
mov
nop
popf
add
push
push
out
into
sarl
std
jmp
outsb
xchg
xor
in
call
rcrb
outsb
aam
and
xor
sti
add
jecxz
mov
fs
test
adc
sbb
sub
lock
ljmp
cmp
sub
jno
out
jae
orb
scas
mov
dec
xchg
cltd
test
imul
dec
and
inc
sbbb
aam
dec
mov
lret
sub
push
fwait
push
lret
subl
mov
pop
mov
add
fdivs
or
pop
inc
call
add
mov
xor
pop
cmp
fs
test
das
push
add
outsb
push
decl
add
xchg
daa
pop
sbb
pop
or
cs
add
jge
jns
dec
jbe
add
and
pop
inc
mov
and
lahf
xchg
add
mov
fistpll
stos
mov
fistps
aam
push
adc
pop
jecxz
adc
xchg
and
stos
mov
daa
mov
mov
sbb
inc
inc
cwtl
cmp
cmp
shlb
or
insb
test
mov
mov
jg
adc
lahf
outsl
mov
bound
in
into
outsl
aad
xchg
mov
cwtl
popa
ffreep
sti
fimull
mov
mov
int3
xor
pushf
mov
sbb
mov
pop
dec
lods
cmpsl
iret
dec
and
pop
aad
jecxz
nop
mov
cmp
dec
gs
mov
adc
cmpsl
xor
sbb
push
repnz
addl
test
sub
jle
cmp
and
sbb
icebp
mov
mov
jns
jne
lods
es
pusha
dec
cwtl
inc
adc
push
fistpll
push
and
jne
adc
or
pop
dec
adc
cmp
inc
or
mov
sbb
pop
dec
mov
adc
pop
pop
lea
inc
sbb
iret
les
inc
nop
ds
push
pushf
pop
outsb
out
jl
testb
fwait
xor
aam
pop
push
and
test
mov
fstps
xor
jo
jp,pn
dec
js
arpl
sub
fmulp
ret
icebp
andl
push
and
in
push
stos
push
xchg
cmpsl
dec
cld
push
sub
inc
rcrl
jno
xchg
cmc
fcom
mov
pop
jecxz
aaa
mov
jno
stos
mov
push
movsl
fdivrs
or
popf
mov
mov
push
cs
jle
sbb
inc
dec
cmpsb
lods
adc
rorl
pop
cld
test
jnp
sbbl
sbb
imul
pop
xor
dec
sub
push
cmp
adc
xorl
fmull
into
push
pop
int3
push
inc
fwait
mov
push
in
faddp
xchg
mov
pop
fldt
and
outsb
mov
adc
movsl
aam
dec
out
xchg
imul
bound
or
in
pop
and
bnd
inc
inc
shl
cld
test
jae
ret
xor
stos
pushf
pop
add
cmp
out
dec
les
inc
push
xchg
xor
mov
shlb
jno
and
adc
jo
mov
stos
popa
mov
cmc
xchg
push
ljmp
outsb
jae
adc
stc
nop
movsb
xor
sub
jecxz
aaa
mov
or
mov
out
mov
dec
mov
xor
fincstp
ljmp
in
lds
mov
les
push
pusha
gs
ffreep
sbb
loope
out
sub
push
pop
pop
push
fiadds
scas
iret
mov
scas
mov
sahf
or
inc
fisubrl
sbb
addr16
lods
jge
add
out
push
push
jecxz
in
lock
lea
mov
cmp
pop
fcompl
jnp
dec
test
sub
rol
lods
sbb
xor
leave
rorl
sub
rorb
cli
fcompl
mov
jne
mov
mov
push
lds
mov
pop
ret
scas
or
in
sub
ficomps
sbb
inc
xchg
push
scas
fsubs
xchg
add
and
outsl
xchg
pop
pusha
and
in
jg
dec
fcmovbe
add
pushf
xchg
adc
sub
pop
sbb
movsl
fadd
popa
mov
fnstenv
sub
loopne
xchg
xchg
add
jns
pop
mulb
test
pop
mov
lret
lea
lret
adc
jae
dec
xchg
es
pop
xchg
fcompl
fstpt
rorb
dec
jno
mov
test
xchg
xchg
int
jb
add
jmp
popw
fstps
xchg
pop
ljmp
lds
pushf
inc
lds
out
adc
fcomps
gs
lods
pop
adc
rcrl
nop
cmp
and
jbe
aas
inc
insb
inc
inc
sbb
sti
and
or
gs
and
es
ret
sbb
add
sub
and
dec
enter
xchg
pop
nop
stos
pop
in
mov
sbb
sbb
jnp
mov
push
cmc
clc
adc
rcll
scas
pop
arpl
jo
push
inc
sbb
lret
or
clc
adc
xchg
insb
mov
aas
jns
pop
pop
inc
cmpsb
jl
js
and
pop
sub
xor
int
sbb
sbb
lock
mov
pop
mov
xchg
aam
push
pop
jo,pt
jg
add
sti
jle
leave
push
or
push
dec
mov
fisttpll
enter
push
fdivs
sbb
jp
xchg
dec
jg
cmp
pop
aad
subl
loop
into
pop
push
ljmp
dec
cmc
mov
out
mov
stos
cwtl
lret
inc
jg
xchg
lods
mov
shlb
cld
ljmp
faddl
mov
adc
into
insb
sbb
pop
adc
jge
sub
xlat
cwtl
adc
lock
add
cmp
pop
frstor
in
call
adc
mov
movsb
push
fcomp
cli
ja
mov
sbb
mov
jecxz
or
mov
or
arpl
push
std
rcrb
add
in
or
ret
orl
push
mov
add
push
ds
mov
lcall
xchg
loop
scas
je
movsl
xchg
adc
mov
fldenv
out
and
mov
mov
push
int
pop
or
clc
push
mov
or
fistpll
xchg
fiadds
cmc
xor
je
scas
adc
adc
ror
les
or
loopne
das
cltd
bound
inc
je
jge
inc
in
cmp
pushf
or
mov
and
rclb
push
add
aam
add
imul
movsb
cwtl
imul
adc
ds
pop
test
cmp
push
push
cmp
test
sbb
mov
mov
sbb
xorl
mov
jnp
fidivs
mov
sub
jle
mov
imul
sti
cmp
jge
inc
js
loope
aam
pop
sbb
arpl
sbb
or
jl
hlt
dec
mov
cmp
mov
mov
enter
int3
addr16
xchg
iret
sbb
leave
cwtl
inc
mov
push
setae
lods
mov
scas
jge
push
sub
sahf
sbb
movsl
test
inc
jns
sbb
cmp
enter
cli
and
loopne
dec
add
leave
leave
push
popf
ror
push
xor
les
jno
jg
sub
imul
dec
cmp
icebp
xchg
sarl
mov
push
mov
clc
out
lock
pop
xor
lods
mov
leave
aad
mov
sub
das
loope
sbb
test
cmp
fs
in
mov
jecxz
mov
stos
push
push
in
adc
out
cld
test
dec
mov
insl
and
mov
fcoms
add
push
push
or
pop
out
cld
repz
push
mov
sbb
sub
cmc
lret
mov
imul
inc
or
sbbl
jmp
fistps
xlat
das
std
insl
and
xor
mov
shl
pop
mov
test
jmp
xabort
imul
push
adc
mov
in
adc
xchg
loop
shl
sbb
repnz
dec
inc
fisubl
inc
lods
mov
inc
jmp
jge
addr16
loope
push
xor
mov
testl
fstpt
mov
repnz
rcrl
das
rolb
cmp
cld
mov
jg
call
push
dec
jp
or
jb
mov
push
mov
iret
or
lds
lods
cmpsb
testb
mov
jns
mov
xchg
loop
sub
out
sub
dec
ja
sub
out
call
lcall
sahf
mov
loope
in
insl
in
sub
add
dec
fstpl
repnz
loope
sbbl
push
or
mov
adc
mov
mov
push
sub
push
jae
cmpsl
inc
aam
sbb
mov
push
jge
rcrb
cmp
sbb
inc
lea
inc
dec
inc
xchg
test
ss
or
cltd
fwait
push
xor
in
inc
mov
jmp
mov
add
pop
dec
test
mov
in
push
sbb
cmp
pop
xchg
xor
movsb
sub
testl
pop
in
mov
mov
mov
jmp
or
xor
mov
aam
mov
testb
outsb
ljmp
ret
xchg
rorb
dec
mov
dec
clc
ret
ja
testl
stc
mov
les
xchg
inc
dec
dec
in
push
xor
cltd
pop
imul
mov
addb
lret
push
nop
push
sbbl
sti
cli
and
icebp
xor
popf
mov
mov
out
iret
jcxz
push
aas
dec
stos
fwait
enter
inc
inc
inc
jo
dec
dec
jge
fadd
mov
repnz
test
mov
xchg
shlb
outsb
xor
in
dec
lahf
fisttpl
aam
sub
mov
add
jno
in
insb
fistpl
shlb
call
imul
inc
pop
pushf
push
push
aaa
mov
into
cwtl
mov
aaa
xchg
push
push
aaa
add
and
pop
mov
testl
lret
push
inc
scas
mov
cli
mov
fiaddl
push
mov
je
das
pop
push
jb
fiadds
daa
shll
xlat
iret
scas
loop
xchg
lahf
and
xlat
outsl
xchg
jle
xchg
mov
insb
dec
leave
dec
cmp
sub
xchg
push
mov
jns
pop
andb
orb
jecxz
push
and
sti
push
icebp
adc
xlat
jge
pop
insb
mov
sbb
shll
add
mov
cmp
sbb
xchg
rcr
sub
out
add
int3
fbstp
stc
mov
push
jmp
xchg
dec
cmp
pop
shll
icebp
mov
in
xchg
cmp
push
pop
adcb
pop
lahf
or
or
icebp
aam
xchg
popa
cmc
int3
inc
sub
push
cs
add
lds
push
aaa
mov
idivb
cmc
mov
pop
rorl
dec
das
xchg
clc
mov
cmp
fwait
mov
pop
ljmp
out
push
mov
sub
jae
fiadds
pop
jb
mov
sub
out
pop
push
push
sub
mov
push
lods
orl
rcl
loopne
jmp
and
cmp
jb
or
jmp
dec
cmp
fidivs
mov
push
call
push
mov
and
mov
mov
add
pop
inc
sbb
mov
stc
mov
mov
push
int3
pushf
outsl
adc
arpl
outsl
jle
in
lret
lods
dec
inc
ret
sub
xor
mov
fistl
aaa
cs
pusha
sahf
adc
mov
ljmp
pop
pop
test
loop
mov
ficomps
inc
int
pop
adc
pop
jg
aam
sub
lahf
add
jne
add
mov
shl
pop
int3
and
xor
mov
adc
and
cmpsl
loop
sub
daa
and
xor
stos
adc
fs
mov
out
in
push
pushf
push
fwait
and
insb
lea
mov
push
outsb
movsb
in
pop
aad
cld
xor
mov
mov
roll
aam
lds
fistpl
in
push
push
ret
cmp
adcl
sub
dec
sbb
mov
daa
sbb
adc
and
insb
cmpsb
adc
repnz
cmp
ret
xlat
filds
out
mov
mov
lret
sub
addr16
dec
filds
rcr
mov
adc
inc
pop
movsl
jp
mov
ret
ret
adc
repz
adc
inc
adc
cmpsb
in
adc
aas
ds
les
mov
inc
pop
cltd
aad
adc
dec
into
dec
push
mov
cmpsl
dec
jae
daa
icebp
pusha
dec
ss
mov
movsl
jmp
shlb
sbb
jbe
push
out
pop
pushl
sti
push
enter
push
jp
sbb
push
cli
arpl
gs
push
test
add
and
or
and
dec
test
divl
xchg
aad
cmpsl
push
adc
int
lds
cwtl
daa
sub
mov
push
stos
inc
js
lret
mov
mov
inc
lret
aaa
lods
push
fsubrp
clc
push
mov
dec
les
dec
push
jb
cld
dec
in
call
loop
icebp
mov
cmp
xchg
pop
scas
inc
pop
int
mov
xchg
outsl
movsb
mov
sbbb
mull
mov
lods
sbb
mov
loop
lods
sahf
mov
fs
mov
gs
pop
repz
dec
adc
cld
test
inc
jnp
das
cmc
sbb
pushf
adc
xchg
add
into
jp
js
inc
push
int3
inc
fnstenv
xchg
push
mov
sbb
adc
test
pop
fcompl
arpl
mov
ss
dec
mov
pushf
xchg
inc
test
nop
sbb
aam
mov
fisubl
mov
leave
jg
jl
adc
in
cmp
outsl
dec
out
inc
mov
fisubs
adc
mov
sti
sbb
cmpsl
or
adc
or
sub
iret
ljmp
xor
ret
or
cmp
bound
rcl
mov
jmp
imul
dec
lcall
orb
data16
mov
mov
cmp
pusha
and
push
mov
dec
or
stc
dec
bnd
int3
leave
mov
insb
in
sub
xor
dec
loopne
lea
pop
push
cmp
mov
insl
jns
mov
or
pusha
out
sbb
leave
and
imul
or
and
jle
fdivl
flds
popf
movsb
sbb
mov
cltd
pop
mov
sbb
cvtps2pi
and
adc
aam
fstps
clc
loope
cmp
cmp
xchg
inc
in
inc
arpl
and
jae
ror
insl
jp
lret
popa
rorb
hlt
mov
xchg
add
lea
xor
push
and
xchg
fbstp
nop
fmul
inc
int3
inc
fs
test
dec
test
out
inc
jg
xchg
jo
adcl
repz
xor
lret
stos
mov
push
mov
shll
imul
ss
jns
sbb
in
inc
pushf
shll
xor
dec
pop
rolb
dec
sub
iret
das
inc
enter
mov
xchg
lahf
xchg
outsl
jecxz
and
aaa
enter
pop
popf
mov
push
movq
test
lock
sahf
or
lsl
out
push
mov
bound
loopne
jne
adc
lods
rolb
lods
mov
pop
das
loope
ja
jmp
inc
mov
shr
inc
or
data16
jle
push
pushf
or
push
cld
and
test
ss
fldpi
jo
mov
xchg
jmp
push
fdivl
ret
mov
in
repnz
out
adc
dec
adc
adc
sbb
nop
push
das
mov
int
mov
fwait
sub
es
mov
xchg
xor
jl
and
or
or
in
lahf
lahf
js
mov
pushl
cmp
jo
sub
push
aam
push
mov
pop
xchg
sbbb
movsb
push
insb
loop
xchg
mov
dec
clc
leave
cmp
cltd
xchg
mov
xchg
ljmp
int3
cmpsl
cmp
and
pop
jno
jae
push
inc
adc
sub
cmc
jo
repz
cmp
cmp
cmp
fistpll
and
repz
pop
movsl
jg
inc
call
mov
negb
loopne
popa
ret
test
adc
outsb
jp,pn
jnp
xchg
stos
aaa
nop
lcall
xor
jae
lret
jb
jle
aas
inc
mov
lock
jg
insl
jl
xlat
out
mov
sbb
int3
call
mov
in
dec
dec
or
sti
dec
aaa
addr16
push
popf
jno
jecxz
or
dec
mov
leave
lods
ja
dec
jnp
sti
add
and
jb
mov
jnp
loope
add
outsb
adc
or
cmpsb
xlat
pushf
jb
cs
mov
scas
daa
or
lea
mov
mov
xlat
push
mov
lret
cmp
mov
movsb
mov
fcoms
mulb
ljmp
mov
mov
int3
insb
fcoml
pop
das
jg
into
mov
xchg
cmp
loope
outsb
loopne
gs
inc
xor
and
mov
lods
scas
int3
cld
js
in
xor
adc
cld
xchg
lock
xchg
sub
sub
imul
repnz
fisubrl
pop
xor
pop
xor
dec
sti
push
mov
and
mov
loop
adc
lock
jae
pop
pusha
jle
insl
fs
std
xchg
push
mov
iret
pushf
mov
les
mov
mov
and
dec
iret
nop
loop
divl
ret
idivb
daa
outsb
jle
jmp
push
sub
mov
mov
sti
or
push
iret
mov
pop
and
xor
fwait
xchg
lock
sahf
in
mov
push
xchg
jg
jae
xor
loopne
mov
ja
xchg
lds
jge
mov
jbe
mov
mov
mov
outsl
mov
mov
mov
mov
sti
xchg
fisubl
dec
jmp
inc
adc
inc
xchg
out
fsubr
inc
mov
jg
hlt
xchg
cli
or
loope
pop
push
jb
xlat
cmpsb
xorl
scas
out
adc
jae
es
mov
es
shll
jmp
add
adc
or
lods
mov
mov
cmp
xchg
ja
xorb
jp
add
push
ja
jg
xchg
push
pop
xor
sahf
out
mov
mov
sbb
jl
fwait
imul
mov
outsl
sti
push
imul
div
stc
push
sub
fildll
aaa
pop
stc
icebp
mov
sbbl
in
sub
and
mov
adcl
int
ds
fcmovnb
push
sub
sti
std
cmp
jmp
outsb
push
mov
cld
add
call
mov
mov
mull
rorl
scas
pop
shrl
xor
mov
daa
sbb
iret
es
mov
cld
dec
mov
cld
rcl
shl
and
sbb
mov
popf
xchg
and
cli
jo
pop
adc
fisubrl
push
push
mov
push
es
sub
pop
push
jnp
xchg
push
pusha
cltd
std
ja
cld
mov
cmp
sub
mov
imul
sahf
pop
ret
mov
or
mov
push
jnp
adcb
inc
ds
loopne
cmc
push
inc
sub
cmp
movsl
add
sub
sub
test
cmpsl
jge
in
push
ret
jecxz
out
mov
es
sti
xchg
xchg
mov
in
ret
adc
sub
push
imul
lds
mov
xor
ds
mov
mov
inc
outsl
shlb
adc
stc
pop
push
push
pop
mov
lea
rclb
cmpsb
adc
inc
pop
mov
test
int3
inc
xor
xor
or
cltd
jle
mov
and
jge
mov
fnstenv
xchg
pop
dec
dec
dec
jmp
sub
mov
add
aam
dec
stc
aad
negb
xchg
lret
rol
icebp
xchg
lods
push
enter
xchg
inc
xchg
push
pop
dec
mov
pop
aam
daa
sbb
push
jbe
add
out
repz
sub
inc
and
insl
ret
cmpb
mov
mov
pop
push
push
or
cs
hlt
pop
mov
cmc
dec
divb
iret
lret
or
push
mov
repnz
fwait
stos
fstpl
ds
pop
fisubs
popa
xor
fidivrl
nop
xchg
mov
sub
aaa
mov
stos
adc
lods
jb
shlb
cmp
lock
jecxz
inc
rol
stos
aas
and
repz
push
aas
je
push
ficomps
inc
fs
mov
les
iret
pop
rcrl
repz
cmpl
ja
andb
lds
cmp
push
jmp
cmpsl
push
jo
dec
and
mov
mov
or
sub
sub
into
mov
lret
mov
loope
ret
sbb
movsb
test
in
lds
mov
pop
out
dec
lock
jnp
jmp
pop
leave
xor
push
daa
push
xchg
cmc
iret
xchg
das
outsb
and
lret
loopne
fmuls
add
or
out
lods
mov
add
insl
nop
adc
mov
jno
push
pop
xchg
sub
pop
fcompl
lcall
xor
andl
pop
dec
xchg
loopne
cmp
push
cmp
out
xor
pop
jp
int3
sub
imul
cmp
or
fcoml
test
mov
pop
xor
lret
cmpb
je
and
xchg
dec
adc
out
cltd
cmpsl
inc
insb
test
mov
pop
push
mov
mov
xor
out
jne
jb
shlb
mov
arpl
and
arpl
adc
hlt
dec
sub
mov
xchg
add
je
push
add
orl
mov
test
dec
test
push
lret
rclb
iret
adc
add
xor
adc
pop
mov
dec
loope
fmuls
daa
repz
jb
push
repz
incl
pop
xor
and
bound
mov
pop
jb
inc
sub
adc
dec
scas
sahf
fnstenv
clc
push
testb
popa
and
pushf
dec
jecxz
pop
and
scas
mov
or
adc
mov
fadds
mov
lds
jae
loopne
adc
sbb
popa
push
repz
sbb
or
jns,pn
loopne,pn
das
sub
stos
xor
pop
xchg
test
dec
push
push
or
inc
addr16
cld
aam
sbb
push
ss
mov
rclb
xchg
add
es
mov
aam
fs
stc
jecxz
mov
cmp
jb
add
pop
xchg
jp
pop
aaa
cli
aad
imul
mov
aam
outsl
sarb
jo
mov
popf
iret
or
fldl
xor
mov
lcall
cmpsb
jle
sbb
pushf
jle
ds
or
cmovo
outsb
sbb
lahf
out
mov
shl
enter
push
ja
mov
mov
or
mov
inc
sub
jno
pop
cmp
ret
mov
ror
dec
mov
adc
fidivrl
cmpsb
into
add
adc
jbe
pushf
aaa
jne
out
sbb
cmpl
daa
loop
cmpsl
subl
in
dec
xchg
adc
fs
repnz
pop
xor
sub
gs
in
shl
push
inc
mov
mov
subb
gs
xor
insb
mov
test
std
push
jne
jl
cmp
xor
push
ret
les
out
adc
hlt
shll
push
and
out
das
mulb
lea
pop
movsb
nop
pop
rorb
mov
pop
lea
popf
add
add
aad
fwait
dec
lcall
mov
pop
fsubl
sbb
movsl
fisubl
xchg
and
sbb
push
pop
iret
adc
in
inc
dec
lcall
pop
xchg
xchg
sti
mov
dec
and
xor
popf
sbb
xchg
mov
jle
xchg
push
test
js
enter
jb
int
leave
xchg
adc
ss
sbb
mov
pop
bswap
pop
or
lret
iret
xchg
mov
add
sub
mov
shrl
pop
sub
inc
arpl
les
inc
xchg
addr16
adc
adc
mov
pop
sbb
test
enter
jns
outsb
xor
mov
pushf
sub
sub
jne
jmp
movsb
loopne
por
mov
push
inc
test
pop
push
or
lock
xchg
mov
jg
xlat
dec
pop
popf
and
test
jmp
orb
stos
sub
sti
or
das
push
or
int3
xchg
jb
pop
daa
pop
jbe
mov
inc
dec
stos
pop
jo
mov
arpl
push
shl
in
jb
jb
or
clc
cld
shlb
xchg
cs
mov
cmp
dec
fwait
jmp
sbb
jno
movsb
test
scas
and
xchg
mov
scas
adc
std
mov
js
shrl
push
add
and
jmp
mov
clc
inc
sub
outsb
sahf
push
xchg
pop
cmp
test
mov
clc
mov
inc
bound
fdiv
js
pop
ret
xchg
rcl
pop
ja
fdivp
xchg
in
mov
popf
push
mov
jl
jnp
or
cmpsl
in
jae
test
inc
add
out
cmp
flds
and
lock
stos
or
adc
lods
mov
fisubrs
stos
jmp
icebp
adc
inc
loopne
jnp
cmp
int
std
cmpsb
push
les
mov
cwtl
push
inc
cmp
repnz
arpl
push
xchg
mov
leave
rclb
push
adc
ret
mov
lods
jg
cmp
mov
mov
inc
cmp
insl
sti
lods
cmp
lock
jno,pn
jge
loopne
fs
repnz
inc
or
add
sbb
mov
jge
add
jo
push
cmpsl
xor
shrb
pop
dec
popa
adc
lcall
mov
mov
sbb
adc
jl
hlt
cwtl
xor
inc
or
data16
xor
loop
sbb
dec
cmp
push
scas
aam
mov
add
loop
lcall
mov
popa
xchg
es
fistps
jge
push
ja
xchg
dec
testl
scas
mov
cwtl
cmpb
cli
sbbb
scas
js
xor
cld
mov
stos
lret
dec
cmp
pop
int
sbb
mov
dec
inc
cld
mov
mov
jmp
shr
pop
adc
mov
iret
adc
jp
dec
pop
mov
jmp
aad
or
in
or
cmpsl
add
into
cmp
loopne
aad
fisttps
mov
or
repz
push
sahf
xchg
nop
pop
stos
fidivrs
lret
test
sub
mov
sub
jl
scas
fs
fstps
dec
push
adc
ss
fdiv
rolb
fs
dec
pop
jp
adc
dec
pop
xchg
inc
insl
sub
jnp
sub
adc
mov
mov
rorb
sbb
frstor
push
add
pusha
sbb
in
arpl
add
xor
cmp
inc
xchg
jne
fsubrl
mulps
jl
xor
dec
or
hlt
add
ret
aad
std
dec
adc
enter
adc
fstl
sbb
pusha
jae
call
xor
ljmp
push
push
ret
lret
xor
test
loopne
xchg
dec
insb
loop
adc
daa
mov
cmc
adc
hlt
lods
or
arpl
outsb
adc
xchg
nop
jmp
das
mov
pop
pushf
xchg
inc
push
jmp
and
xor
xor
das
addb
fcomp
xor
stos
push
sbb
repnz
popf
dec
push
int3
mov
or
or
and
mov
sub
pop
pop
push
imul
xor
into
adc
pop
and
andl
mov
dec
add
loop
sub
lret
sahf
in
cli
sti
enter
ja
lds
lret
call
cs
lcall
add
out
in
xor
rcll
icebp
mov
sub
fisttpl
dec
cmp
jbe
sub
inc
jns
inc
cmpsl
jae
fldlg2
test
les
cwtl
data16
inc
enter
xor
sub
push
or
lods
jl
jp
or
and
mov
sarl
dec
in
ja
sti
ret
xchg
out
rclb
dec
fdivrl
stos
cwtl
test
adc
in
add
mov
adc
push
sarl
shrb
js
add
xchg
mov
mov
or
fidivrs
sub
fsts
and
aad
adc
lds
and
stos
mov
cmc
dec
lcall
mov
or
push
popa
mov
pop
cmpsb
cwtl
push
xchg
repnz
cmp
imul
bound
sbb
pop
insb
jne
mov
xchg
movb
in
add
lea
rcll
mov
in
xadd
mov
dec
push
push
imul
add
mov
cwtl
lods
test
scas
movsb
ja
aad
add
test
je
sti
lcall
push
adc
lret
in
push
mov
insl
test
xchg
loopne
fsts
ficomps
in
js
jo
jnp
sbb
sar
repnz
push
sbbb
pop
mov
inc
fyl2x
jmp
mov
push
jl
sbb
mov
dec
lcall
push
imul
mov
fnsave
jl
ljmp
xchg
and
push
push
adc
cmp
scas
xor
movb
or
add
mov
xchg
sti
imul
pushf
jne
or
sti
daa
mov
lods
mov
test
imul
jg
add
aam
pop
jle
std
out
in
sub
out
inc
push
sub
cmp
pop
mov
movq
pop
movsb
adc
dec
rclb
ljmp
fwait
push
cmp
out
sbb
in
jg
or
cmc
lahf
cvtps2pd
insl
xchg
jp
lea
adc
push
push
dec
xor
add
in
iret
or
mov
jnp
js
fimuls
mov
and
adc
and
or
jmp
push
ljmp
mov
pop
mov
mov
fisubrs
mov
fnstenv
int3
sub
xchg
pop
lds
adc
add
jae
test
adc
cmp
mov
mov
sbb
inc
push
insb
mov
mov
pop
je
fstpt
mov
xchg
popa
scas
ds
in
fwait
movsl
movsl
jbe
xchg
push
ljmp
daa
lcall
mov
adc
pop
into
hlt
into
push
scas
add
shrb
push
inc
sbb
ja
pop
push
jb
lds
mov
orl
andb
dec
popa
add
test
add
and
push
jl
lds
dec
out
sub
sbb
fstp
cmp
sti
cli
movsl
lret
sarl
or
out
stos
xchg
fucomip
mov
ljmp
push
xor
shl
mov
mov
mov
shlb
dec
xchg
pop
jb
jne
push
mov
xchg
mov
or
sahf
inc
dec
push
cmp
icebp
sbb
cmpsl
xchg
out
in
fwait
inc
mov
sbb
outsl
sbb
sahf
sub
dec
leave
lcall
gs
push
adc
nop
les
jmp
leave
ja
jno
xchg
aad
cmpl
mov
repnz
sbb
call
les
push
mov
push
ja
and
aas
rcll
rolb
pop
jp
pusha
daa
sub
fsubrl
push
add
in
or
jp
test
jecxz
sub
xchg
std
cwtl
test
test
loop
xchg
shrb
or
cltd
cmp
cmc
jb
mov
xchg
ffree
pop
xor
mov
xchg
scas
mov
ret
jno
push
sub
lcall
aas
add
jmp
mov
imul
inc
mov
lods
jne
pop
std
popa
imull
dec
pop
es
loopne
sbbl
int3
enter
and
mov
or
pop
cld
mov
dec
pop
mov
dec
dec
ds
int
jnp
popa
inc
int
sarb
sbb
mov
out
iret
jecxz
arpl
adc
imul
mov
sarl
lret
data16
bound
je
cmpsb
xchg
insb
ret
mov
lds
rcr
pop
xchg
imul
pusha
dec
stc
fcmovbe
stos
cmp
cmp
call
test
dec
mov
push
mov
jmp
lods
dec
enter
mov
in
cli
cmp
jns
mov
pushf
cmp
mov
push
ficoml
sub
pop
add
mov
jne
sarl
das
test
add
mov
mov
call
dec
adc
cmpsl
ljmp
fldl
pushf
insb
adc
push
rclb
negb
scas
mov
dec
cmc
mov
call
cld
ret
mov
bound
lods
xor
push
rol
cmp
pop
shll
mov
mov
push
inc
in
push
or
push
out
mov
adc
repz
out
incl
fimuls
inc
fmull
sbb
mov
in
das
sub
xor
dec
push
ss
xchg
xchg
cmpsb
push
inc
notl
in
lods
icebp
jae
cmpsb
rcr
or
cwtl
neg
mov
xchg
insl
loopne
fwait
int3
inc
xchg
xor
shll
fs
mov
roll
stos
leave
scas
push
arpl
xchg
push
adc
int3
push
aam
mov
repnz
mov
sbb
ret
clc
insb
scas
int
cmp
xor
cmpsl
pop
pushf
cwtl
leave
xchg
repnz
pop
int3
cmp
fwait
stos
dec
add
hlt
pop
sbb
stos
jl
push
daa
pushf
push
lret
add
dec
mov
icebp
mov
lods
lret
popa
cmp
mov
dec
xchg
fidivl
int3
adc
call
lods
sub
imul
adc
mov
inc
int
or
rcrb
xchg
cmpsl
fcmovnb
adc
sahf
int3
jo
xchg
mov
jmp
add
xchg
mov
mov
in
daa
mov
out
xchg
or
inc
xor
sbb
sub
pusha
push
sbbl
scas
aad
cmp
cmpsl
mov
ja
jle
stc
push
xchg
xor
das
and
push
pop
pop
mov
push
xchg
xor
out
xchg
sub
inc
data16
pop
or
and
cmp
jb
inc
mov
js
ret
loop
add
sbb
in
sahf
ror
pop
lret
push
pop
cmp
mov
leave
ficompl
add
arpl
mov
or
jbe
adc
sub
dec
repz
test
in
sahf
es
int3
sti
ret
leave
cmp
call
push
sub
fwait
iret
leave
loopne
pop
mov
mov
cmp
mov
xchg
in
addr16
stc
push
stc
xchg
push
loopne
imul
inc
jg
mov
out
imull
mov
jle
xchg
or
nop
test
inc
in
cmp
lahf
lods
js
add
bound
stos
fcomps
lods
shrb
push
into
imul
lret
adc
leave
push
mov
cmpsb
adc
add
sti
cmp
ss
and
xor
int3
mov
leave
rclb
push
push
lret
fnsave
cmp
cmpsb
jno
imul
mov
mov
jno
cmp
scas
push
sub
cwtl
lret
fsubrp
xchg
std
dec
inc
rcrb
xchg
ds
cwtl
dec
repnz
and
xchg
sbb
mov
std
push
jmp
inc
enter
xlat
out
add
mov
lret
jns
in
cmp
sbbl
fcoms
and
cmp
mov
add
pop
stos
pushf
ret
push
shrb
loope
jne
loopne
jb
cmp
shlb
pusha
xor
int
fwait
xor
dec
xor
outsl
movsb
pusha
pop
or
ss
je
cmpsl
push
cmp
mov
stos
fwait
ss
out
std
jp
rorb
add
push
xchg
and
xor
sbb
mov
int3
xabort
rclb
push
push
lret
fnsave
cmp
push
imul
pop
jo
add
mov
rcll
fisubrs
push
enter
fildll
mov
push
sbb
in
repnz
pop
movsl
push
nopl
mov
fmuls
mov
aas
icebp
jecxz
mov
push
imul
jmp
int
sub
mov
cmpsb
sub
out
pop
daa
loopne
push
jbe
jbe
mov
les
movsl
out
scas
sub
aad
cmpsb
add
nop
fs
stos
pushf
ret
outsl
int
pop
xchg
or
inc
or
outsb
lea
mov
sub
sub
movsb
lahf
or
stos
popa
enter
outsl
or
sti
je
inc
mov
insb
jne
in
enter
arpl
cmp
adc
push
imul
adc
iret
iret
pusha
cmpsl
bound
dec
ret
push
fistl
ja
push
xchg
push
sub
imul
mov
cmp
xchg
add
and
sbb
pop
cmp
and
and
lret
sub
cltd
in
xchg
cmp
xor
in
jno
or
movq
mov
scas
stos
jo
pop
xor
lcall
jo
add
push
aaa
repz
or
push
adc
ret
sahf
hlt
insl
stc
in
push
ret
mov
mov
jae
sbb
xchg
cld
push
es
in
adc
jno
pop
aad
and
cld
cmp
pusha
jne
cmp
aaa
negl
sbbl
sub
pop
push
sbb
or
ja
cld
xor
xchg
mov
or
filds
in
stos
ljmp
test
or
xchg
gs
enter
or
dec
out
cmpsb
lea
sub
clc
stc
or
ficomps
cmp
sahf
es
leave
add
fdivrs
sbb
fidivrl
out
dec
divl
xchg
mov
movsb
daa
loop
jbe
mov
add
out
movsl
dec
icebp
add
imul
inc
sub
dec
mov
rcrb
movsb
sarb
mov
stos
scas
orb
cmp
push
sub
jmp
adc
jae
out
movsl
les
subb
mov
push
shr
test
insb
test
xchg
mov
add
loope
push
sahf
inc
push
mov
dec
adc
sbb
int
jns
xchg
insb
push
or
nop
arpl
int
inc
stos
bound
push
sub
dec
inc
push
iret
pop
add
xchg
or
and
xchg
mov
addr16
cmp
ss
pop
shlb
xor
les
xor
decw
jb
shlb
ret
xor
addb
cmp
jp
cmp
cmpsb
pop
out
xor
xchg
aam
cmp
fnstenv
mov
std
mov
subl
mov
sub
push
sbb
and
mov
dec
testl
xor
inc
jecxz
jne
mov
pop
xor
lcall
pop
cli
mov
mov
es
repz
ret
push
pushf
xchg
cs
pusha
add
jmp
mov
jnp
sub
and
stc
loope
lods
das
sbb
and
push
lret
push
inc
lds
lcall
lds
sti
outsl
dec
xor
je
out
and
push
rcll
push
daa
mov
insb
stos
loopne
sbb
mov
pop
lock
loope
aam
pop
sbb
lods
and
stos
mov
lds
and
adcl
fstps
neg
push
outsl
or
sbb
je
or
dec
dec
inc
or
mov
stos
inc
mov
jne
lret
lret
push
loopne
or
jnp
cmpsb
sub
jle
sbb
repnz
fwait
xor
xlat
cmp
lea
mov
mov
out
jp
pop
pop
jns
and
and
dec
imul
jno
mov
scas
push
xchg
push
add
pushf
insb
mov
gs
sbb
lret
jb
and
sbb
push
outsb
mov
mov
stc
push
sbb
xor
push
add
nop
mov
mov
cmc
mov
aad
xchg
jb
rcrb
xchg
lret
mov
or
pop
xchg
sahf
sti
loop
scas
pushf
cmp
sub
aaa
sbb
add
push
and
mov
sbb
or
pop
rclb
std
lret
fsub
and
bound
adc
sub
mov
and
push
jnp
mov
pop
sub
pop
jne
pop
ja
and
inc
iret
pop
jae
arpl
cltd
outsb
js
jl
push
iret
bnd
sarb
push
and
sub
loop
cmovo
leave
ss
repnz
mov
add
lret
insl
pop
xor
inc
jp
pushf
and
popa
mov
in
jp
dec
xlat
stos
sbb
jo
sbb
sbb
insl
aad
cmp
jmp
mov
jne
and
jmp
call
cmp
loope
add
lcall
cltd
int
mov
xchg
mov
or
jne
xchg
inc
cmp
dec
out
rep
jecxz
rcl
sub
pushf
in
xlat
cmc
fxch
icebp
mov
xchg
xchg
arpl
repz
inc
mov
outsb
shll
mov
dec
call
sub
popf
outsb
xchg
movd
xchg
pop
daa
cmpl
mov
andl
add
lret
jp
and
xchg
pop
jno
movsl
pop
or
movsb
or
sbb
rdpmc
push
jbe
lahf
jg
and
out
test
fbld
jp
stos
push
mov
out
sub
dec
imul
ds
push
pusha
testl
push
xchg
xor
xchg
pop
es
roll
daa
sti
in
out
aam
bound
frndint
push
lds
clc
rolb
cmp
jno
or
cli
xor
pop
xchg
add
mov
bound
movsb
xlat
inc
aam
outsl
pop
jo
ja
sub
gs
loop
ljmp
cmpsb
sub
enter
in
popa
mov
sahf
mov
cmpl
lret
xchg
outsb
fidivs
mov
icebp
and
mov
out
jnp
dec
xorl
inc
sti
pop
mov
sar
xchg
cmp
jne
cmpsb
inc
cmp
mov
in
pop
xor
into
mov
jl
std
lods
cli
push
lods
mov
ret
jle
pop
gs
fstpt
int3
sub
add
xor
push
into
fcompl
lret
pop
aam
inc
out
imul
pop
xchg
lahf
or
call
and
movsb
lods
arpl
xchg
pop
enter
push
loope
jb
jmp
int3
pop
adc
cmpsb
pop
je
int3
sahf
sub
mov
repnz
push
leave
pop
repnz
pop
sub
xchg
mov
sub
insl
out
mov
and
xor
iret
lret
mov
sub
pop
and
aaa
int3
cmp
popf
mov
mov
std
sub
cmp
stos
out
popa
loope
jo
in
jbe
xor
int
mov
jmp
xchg
and
pop
jnp
mov
outsb
outsl
test
hlt
jle
testl
or
popl
test
mov
push
cmpl
jne
and
jmp
hlt
shlb
fcmovnb
mov
push
popf
test
xchg
xchg
mov
mov
mov
jnp
pop
aam
inc
out
insb
jmp
xchg
lahf
lea
jecxz
or
jno
out
lods
arpl
mov
push
push
sbb
leave
lock
jb
stos
add
cmp
test
jle
mov
mov
aaa
or
jb
movsb
jg
repz
jmp
ja
insl
pusha
sub
loopne
push
imul
lds
xor
adc
xor
adc
jecxz
imul
psllq
pushf
mov
mov
lret
mov
mov
fucomp
divb
arpl
xor
sub
cmpsb
into
sub
dec
sti
mov
sbb
movsb
pop
or
in
sarl
inc
leave
jle
lods
mov
add
or
cld
mov
daa
jecxz
into
in
roll
cwtl
pop
sub
ljmp
int3
fwait
hlt
mov
ljmp
sbb
movsl
icebp
cltd
pushf
jg
or
jl
int3
arpl
xor
es
or
push
mov
mov
sbb
movsl
pop
leave
mov
popa
pop
mov
popf
sub
test
mov
push
mov
in
cli
das
in
jge
mov
jne
mov
sub
inc
mov
mov
aam
jne
add
orl
arpl
adc
stc
xchg
xor
push
mov
fdivrs
pop
jle
push
mov
aad
sbb
pop
mov
fimull
test
inc
sbb
mulb
cmpsb
and
mov
out
data16
test
scas
mov
jae
popa
push
and
jo,pn
pop
pop
pop
sbb
or
inc
and
sbb
aas
jne
cld
lods
xchg
les
pop
sub
xlat
cmp
cmpsl
cmpl
jmp
into
xor
repz
mov
mov
test
xchg
add
and
mov
fstpl
jae
cld
pop
pushf
in
andl
clc
inc
mov
inc
cvtps2pd
ja
cmp
dec
xchg
lcall
stos
js
rolb
sbb
clc
sub
ret
push
fs
sub
add
cmp
nop
stos
cld
lds
push
scas
stos
cmp
hlt
insb
add
fcoms
jecxz
jmp
push
adc
jno
lret
addb
aad
mov
push
iret
dec
and
jns
call
cmp
jmp
pop
jns
or
add
scas
fdivl
sub
bswap
in
lret
cmp
repz
mov
pop
mov
inc
das
faddp
sbb
cmp
mov
xor
mov
hlt
out
movsb
xor
stc
scas
and
dec
mov
jnp
push
incb
out
cmp
rol
sbb
mov
aas
adc
lahf
out
mov
popa
stos
xchg
mov
pop
and
arpl
in
adc
pop
dec
arpl
ss
mov
and
negl
or
adcb
dec
insl
loopne
daa
addr16
jnp
ret
mov
cltd
dec
inc
fwait
cmp
or
test
addb
or
jnp
cmp
int3
mov
out
jecxz
mov
adc
push
xlat
push
push
push
or
icebp
movsl
iret
addr16
xor
push
loop
mov
lock
adc
sub
sub
jl
movsl
enter
adc
leave
test
fwait
xor
rorb
sti
fcoms
push
repnz
pusha
and
sub
jge
jb
cld
cmp
mov
ss
xchg
pop
inc
movsb
jl
lock
sti
xchg
push
movsl
arpl
sbb
clc
dec
or
loop
f2xm1
nop
sarl
jp
fucomp
ret
sbb
jae
testl
xor
and
push
pop
aam
std
xchg
mov
ljmp
mov
dec
test
loopne
sbb
add
in
mov
dec
jb
dec
cmp
cmp
rclb
push
dec
hlt
push
pop
popf
sbb
and
aad
dec
mull
imul
or
adcl
popf
nop
jmp
and
mov
faddl
pop
out
addr16
mov
push
jecxz
orl
add
pushl
pop
jae
in
fisubrs
lods
repnz
daa
rolb
or
es
mov
fwait
xor
sub
fisubs
add
fldenv
adc
jle
leave
mov
mov
cmp
or
mov
inc
adc
and
sbb
xchg
adc
sbb
jle
std
mov
pop
scas
add
daa
inc
pop
add
hlt
sub
pusha
ja
ror
aaa
rorl
shll
pop
ror
add
test
movsb
inc
outsb
jg
xlat
jb,pn
push
or
pusha
fxch
in
add
sub
add
push
dec
sub
jb
mov
inc
fadds
icebp
sub
scas
outsl
lods
pop
test
sub
out
lahf
sbb
jae
push
shl
imul
pop
xor
gs
xlat
hlt
sub
insl
fstp
out
inc
test
xor
xchg
out
into
adc
es
xor
jp
lahf
out
mov
fistps
pop
sbb
cmp
sarb
shll
add
mov
loope
rclb
xchg
mov
adc
out
jb
jno
xlat
das
inc
cmp
andb
inc
sahf
addr16
push
xchg
dec
cmp
repz
fldt
sti
mov
pusha
mov
rcl
adc
mov
aam
mov
mov
sub
sub
jmp
mov
inc
insb
lods
aaa
push
cmp
adc
test
cmp
fistl
dec
sub
mov
sbb
inc
test
sbb
or
dec
pop
push
mov
in
push
repnz
sbbb
push
push
fldenv
flds
imul
fcoml
mov
sub
push
sbb
cmc
ret
inc
dec
cmpsb
sub
packssdw
leave
lea
mov
push
mov
dec
fstl
inc
mov
dec
adc
jb
mov
dec
xor
xlat
out
shlb
mov
add
rorb
adc
add
pop
xlat
xchg
imul
mov
pop
clc
and
add
js
lods
je
sbb
in
daa
jecxz
mov
xchg
mov
fistl
xor
lret
pop
movsb
sub
je
pop
in
push
lods
les
icebp
mov
movsl
sahf
add
and
add
fmul
test
or
xor
repnz
or
std
test
aad
add
jl
cli
dec
aaa
cmp
xor
cs
lds
jae
mov
jbe
add
push
fdivs
mov
cs
push
lcall
arpl
mov
out
mov
into
xchg
lods
or
xlat
int
popa
in
mov
test
fistl
adc
mov
mov
cs
addr16
pop
sbb
inc
push
movsb
adc
pop
in
add
and
sbb
pushl
subl
aad
adc
dec
jns
adc
in
in
lea
pop
dec
ret
popf
and
mov
insb
or
inc
xchg
and
xchg
mov
pop
leave
fcmovbe
aad
and
decl
or
scas
shl
fstps
add
lock
jnp
sub
aaa
push
stc
lret
test
ljmp
mov
addr16
movzbl
lods
adc
incb
test
in
shrb
ss
fs
call
pop
stc
flds
jle
mov
rcll
call
cwtl
loop
rolb
cmc
pop
je
addr16
addr16
mov
cld
in
out
mov
pop
sbb
inc
sbb
lods
and
stos
xchg
inc
push
rorb
mov
test
out
xor
std
pop
inc
mov
outsb
cs
sub
pusha
mov
jmp
lods
andb
aad
shlb
out
xchg
imul
imul
dec
sub
xchg
neg
pop
sub
lock
lret
and
sub
rcrb
push
loop
xlat
or
cmp
cld
mov
or
mov
push
dec
sarb
jl
cmp
cltd
ja
mov
cmp
cmp
mov
jns
mov
in
and
es
pop
mov
pop
jmp
enter
xor
shlb
fstpl
inc
lods
pop
or
insl
pop
mov
mov
sub
mov
jno
add
fsubl
lret
adc
shrb
lahf
mov
sbb
cmp
jp
sub
jne
xchg
inc
mov
mov
push
mov
lret
pop
dec
sub
cmp
insb
sub
or
fmuls
mov
and
aad
sar
pop
cmp
adc
jne
jl
stc
pop
fidivrl
jmp
xor
pop
call
pop
imul
xor
scas
loope
mov
fmuls
mov
add
iret
ja
sub
lret
pop
test
cmp
add
lret
cmpsb
les
adc
ja
icebp
hlt
ljmp
mov
and
lock
jg
shr
cmp
push
lds
lret
mov
and
inc
pop
jge
add
pop
cs
mov
mov
sbb
jg
repnz
xlat
hlt
iret
imul
jbe
in
test
inc
inc
fmuls
arpl
or
jb
clc
mov
jbe
pop
test
popa
inc
sti
dec
sarl
pop
imul
js
ds
push
gs
push
cmp
cltd
test
mov
and
ss
mov
dec
int3
xchg
sbb
cmp
xor
or
push
jge
inc
add
mov
push
xchg
cmpsb
and
dec
and
aas
adc
and
adc
fidivl
mov
imul
dec
into
jae
dec
inc
pop
lcall
cmp
adc
push
mov
pop
push
shlb
faddl
mov
sub
popl
mov
scas
fistl
xchg
pop
xchg
cmpsb
int
repz
push
cmp
sub
mov
adc
out
mov
inc
cs
pop
ja
nop
shlb
cwtl
dec
mov
cmpsb
fiadds
bound
in
test
cmp
bnd
sub
mov
push
sub
nop
stos
jmp
decl
repnz
mov
movsl
mov
aas
jae
dec
adc
mov
sub
and
mov
inc
sbb
cmpsb
mov
jno
imul
mov
jg
pop
sarl
xor
mov
cmc
addr16
shlb
ja
add
daa
pop
lahf
mov
push
fistpl
js
les
dec
push
je
pop
int3
push
mov
add
movb
mov
testl
cltd
loope
inc
lret
daa
fwait
xor
mov
test
rclb
cmp
icebp
cmp
movsl
bound
loope
xor
das
loope
cltd
add
das
mov
jne
xor
and
mov
jns
cmp
inc
push
ret
xchg
mov
rcrl
pop
jl
mov
jl
inc
bound
jl
iret
ja
push
lret
mov
fstpt
out
rclb
xchg
xor
ljmp
jl
dec
in
inc
xchg
lods
ret
pop
mov
jp
mov
fsub
cmpsb
mov
dec
sbb
pop
pushf
push
lea
test
dec
push
pop
mov
adc
mov
and
fcmovb
mov
mov
das
ss
mov
ret
stc
cmp
push
cmc
out
mov
sub
iret
and
adc
fnstenv
sbbl
mov
sbb
cmp
loopne
aad
js
pop
push
ltr
xchg
leave
xchg
stos
jg
cwtl
aaa
xor
xor
xchg
push
jb
sbb
push
lahf
push
fsts
jp
loope
data16
testl
iret
aam
aaa
fdiv
sbb
jmp
dec
out
stos
push
cld
insl
scas
cmp
and
addr16
add
les
repnz
call
mov
mov
cmc
aad
in
dec
and
xchg
aad
jb
fistps
adc
ja
mov
mov
scas
shrl
sub
mov
ret
sub
push
pushf
fcoml
dec
in
stos
dec
xor
xor
mov
fisttpl
xchg
repnz
mov
outsb
fisttpll
and
sbbl
push
mov
add
pop
loope
push
es
mov
outsb
cmp
in
cwtl
stos
pushf
pushl
jae
ficompl
jmp
lds
jge
imul
sbb
stc
lods
push
mov
popa
dec
lods
repz
inc
mov
mov
mov
fwait
in
movsb
sbb
sbb
out
mov
jne
jb
out
pusha
ja
loop
sbb
cmp
xor
add
add
dec
dec
sbb
inc
jnp
hlt
pusha
sti
add
cmp
pop
and
scas
jae
dec
mov
test
cs
ret
stos
test
out
insb
push
or
loopne
jbe
sbb
push
push
shrl
out
or
cmpb
fcompl
push
mov
jmp
movsb
sti
je
push
or
inc
pop
add
push
mov
add
test
sub
divl
jg
ds
push
mov
cmpsl
add
mov
pop
rclb
and
mov
ret
ds
fistpl
push
mov
push
mov
mov
aad
inc
lcallw
cmp
cmp
jae
test
xchg
int3
in
mul
repz
xchg
cwtl
sbb
mov
adc
pop
mov
fidivrl
ficoms
aaa
and
jg
repz
fisubrl
or
push
sbb
xor
jp
pop
lock
sub
push
mov
xor
aaa
outsb
fwait
stos
inc
ss
stc
sub
fidivrs
jl
ficompl
lret
or
push
cwtl
add
aaa
jecxz
push
pusha
mov
mov
mov
mov
jbe
decl
loope
push
pop
test
xchg
sahf
sbb
lds
push
jp
push
mov
add
lea
mov
push
mov
push
pop
stc
adc
xchg
lcall
add
je
jge
jecxz
cmp
insb
imul
cmp
bound
inc
dec
pop
pop
or
mov
push
inc
repz
pop
pushf
test
lock
les
sahf
int
ss
pop
popf
hlt
in
and
ja
or
enter
adc
sti
cmpsb
mov
pop
je
pop
xchg
mov
insl
dec
xchg
jle
popf
push
cmpsl
shl
rclb
mov
sub
js
cmp
cli
mov
fsts
popa
lret
cwtl
ljmp
xchg
sbb
sub
rcl
inc
inc
fwait
add
inc
push
popf
cld
dec
sbb
jo
and
pop
sbb
xchg
sub
aaa
xchg
test
push
shll
jb
in
mov
add
add
fnstenv
shlb
nop
incb
xchg
out
jne
fucomip
outsb
pop
jg
pop
adc
push
lahf
xor
xchg
fadds
pop
inc
xchg
das
cmpsb
aad
sbb
outsl
imul
lahf
daa
xor
mov
push
inc
jl
ret
push
pop
mov
in
fwait
inc
add
push
add
cmpsb
rcrb
lds
in
sbb
jmp
pop
pop
fldt
aas
test
sub
pushf
or
addl
aad
xor
scas
sahf
push
jb
clc
and
dec
shll
ljmp
js
inc
and
fisubrs
ret
enter
loop
cmp
xlat
pop
ret
cmpsb
pop
or
inc
and
xor
mov
ds
sub
lcall
testl
mov
cmp
cmp
ss
lret
mov
ljmp
xorl
maxps
xchg
or
pop
daa
in
or
jle
push
pop
cwtl
sbb
lock
dec
xchg
inc
popa
lea
pushf
sub
out
adc
jbe
mov
pop
xchg
jg
dec
cmp
push
shll
and
push
cs
les
push
fwait
sbb
testl
cmc
push
mov
popf
jo
push
cmp
adc
adc
adc
push
lds
lods
mov
adc
or
in
xchg
mov
fs
add
cs
pop
decb
push
cmpsl
mov
add
out
sub
xor
data16
adc
jno
push
orl
in
leave
push
imul
popa
iret
adc
aaa
jne
ja
push
data16
jb
aaa
btr
mov
mov
aad
xor
or
aaa
mov
adc
mov
or
mov
or
add
and
je
push
or
mov
ret
sbb
pop
daa
aaa
psrad
leave
jnp
imul
scas
aad
andl
imul
fucomp
arpl
in
daa
sbb
outsb
pusha
sub
cwtl
in
imul
push
notl
ret
pushf
test
or
sahf
outsl
jmp
push
rcll
iret
iret
inc
push
iret
xorl
dec
ficoms
xchg
mov
aam
push
aas
xorl
push
jmp
lret
and
cmpsb
push
inc
ret
adc
sbb
aaa
icebp
mov
mov
or
xchg
out
int3
vsubss
mov
jb
inc
sti
outsl
in
inc
inc
fwait
cmpsb
mov
xchg
icebp
clc
jecxz
aam
cmp
mov
adc
mov
movsb
aaa
dec
sahf
sbb
cmp
adc
and
xchg
fsubs
xchg
jge
popa
push
dec
or
mov
rcr
icebp
popf
xchg
out
scas
adc
inc
call
add
mov
das
bound
cs
lret
cmpsl
jae
iret
int3
pop
fcoms
fdivrs
xor
repz
push
add
jle
xchg
dec
sbb
add
fwait
jl
inc
jns
xor
inc
mov
movsl
iret
pop
mov
test
insl
mov
cmp
roll
mov
std
dec
sub
mov
cltd
std
jbe
sbb
addb
adc
mov
aaa
jnp
icebp
dec
bound
mov
and
popf
jp
dec
movsl
cmp
rcr
outsb
push
cmpsl
repz
push
or
push
subl
add
push
leave
mov
fstpt
test
test
mov
in
jg
clts
adc
pop
sarb
xor
pop
inc
daa
fmull
popa
jns
ss
cmp
mov
push
xor
adc
push
dec
xchg
dec
sbb
icebp
mov
outsb
mov
push
dec
and
sbb
add
sub
shll
outsl
aas
fldenv
mov
repnz
mov
clc
mov
into
jae
in
and
add
and
adc
adcl
lea
mov
mov
or
js
js
movsl
push
lea
in
out
xchg
lock
cmp
out
jbe
add
enter
daa
adc
pop
xchg
fists
cmp
ficompl
stc
pop
push
fwait
cmp
adc
outsl
orb
pop
rcll
push
inc
inc
pushf
mov
stc
outsl
nop
shll
mov
ljmp
test
js
scas
lods
popf
popa
cmpsb
dec
mov
adc
pusha
xor
sarb
fadd
cltd
jl
mov
fbld
xchg
xor
lea
xchg
rorb
dec
add
shl
jb
inc
sub
cmpsb
fsubs
xor
dec
mov
and
jo
movsl
lock
xchg
mov
cmp
mov
jno
add
pop
sbb
stos
adcb
outsb
jnp
movsl
lds
in
test
in
adc
jbe
inc
inc
fbstp
cmp
adc
push
sahf
sbb
add
addr16
cmp
pop
mov
and
inc
mov
and
push
shrb
das
daa
inc
adc
pop
push
cmpl
push
cmc
bound
lea
xor
dec
nop
xor
sbb
push
inc
movsb
xor
xlat
cld
ljmp
cmp
mov
rclb
cmp
imul
sbb
out
testl
add
and
shlb
sub
pop
ret
xor
and
out
cmc
dec
cvtdq2ps
xor
dec
sub
jae
stc
fcomps
dec
popf
jb
out
outsl
jb
dec
adc
dec
cs
xchg
mov
jp
lcall
ss
cmp
movsb
lahf
mov
pop
out
fstl
and
cmp
test
xchg
add
xchg
in
pusha
lods
xlat
mov
and
mov
push
ret
or
mov
pop
xchg
cmp
jmp
jecxz
movnti
andl
movsl
sbb
out
push
adc
call
jmp
cmp
shlb
push
jp
mov
sub
imul
pushf
rcll
arpl
sti
jmp
or
rol
daa
mov
lahf
jp
int
jns
jae
lret
es
nop
fmul
add
pop
lods
scas
outsl
test
pop
js
add
push
dec
add
inc
sub
out
push
dec
xchg
cmp
push
jmp
das
hlt
scas
push
gs
pop
lret
dec
and
fwait
push
pop
repz
cmp
imul
cmc
push
stc
and
out
in
add
das
in
cwtl
xor
das
ficoms
daa
xchg
in
rorl
out
mov
pop
std
in
mov
adc
adcb
dec
pop
mov
inc
mov
cmc
idivl
into
mov
mov
and
sahf
inc
or
daa
ljmp
pop
sbb
push
push
stos
clc
ss
jl
mov
inc
iret
dec
ljmp
test
xor
jp
mov
es
xchg
or
adc
imul
scas
or
int
dec
xchg
push
xor
pop
sub
jmp
lods
jnp
xchg
sbb
gs
cltd
dec
xchg
js
jno
fldl
mov
push
pop
das
jmp
sub
ljmp
cld
mov
mov
adc
mov
divb
sub
stc
jb
mov
cmc
add
cmp
movsl
cwtl
add
xchg
shrb
jle
sub
mov
pop
inc
lds
push
and
aas
and
mov
adc
cmp
insl
repz
mov
sub
loop
mov
out
fs
mov
stc
mov
fisttpll
mov
lock
xchg
or
addl
or
push
fidivs
addr16
add
mov
dec
dec
xchg
ljmp
add
and
mov
cmp
lret
sbb
adc
add
cwtl
scas
adc
and
or
loopne
add
xor
or
cmpsb
fstl
or
stos
jge
and
sub
pop
add
clc
jmp
xchg
mov
xchg
aad
sub
add
adc
cld
adc
sbb
scas
shll
cmp
orb
sbb
test
add
ljmp
pop
into
jp
jle
dec
shlb
mov
mov
rcrl
jle
sbb
cmc
mov
and
push
push
cmc
cld
call
ja
es
daa
dec
jne
cmc
jns
cmc
push
bound
mov
mov
pusha
or
ret
mov
mov
ret
add
cmp
adc
vpbroadcastq
mov
mov
jl
push
cmpsb
pusha
in
clc
enter
cli
out
ret
cld
lret
adc
sarb
das
dec
mov
sbb
outsl
data16
inc
aas
arpl
mov
adc
cwtl
jo
sbb
popl
lods
sbb
mov
cld
into
push
xchg
xor
xor
das
push
add
je
push
in
insl
movsl
mov
fildll
popa
je
js
xor
cmp
std
shll
push
out
repnz
imul
cmp
cmc
jne
lret
jns
dec
mov
xchg
mov
jo
fldl
inc
pusha
scas
imul
ds
and
pusha
das
adcl
push
out
std
mov
nop
mul
scas
inc
aam
popa
sahf
sub
pop
cmp
arpl
mov
dec
xor
jne
adc
adc
jbe
xchg
in
test
xor
ljmp
aad
mov
mov
dec
dec
dec
sbb
mov
rolb
mov
dec
mov
sub
jmp
sub
adcl
aas
xor
aaa
jg
pop
xchg
cmp
cmp
sbb
ja
pop
xchg
add
lods
add
jmp
sbb
push
pop
repz
jmp
out
sbb
adc
inc
xchg
or
mov
dec
or
insl
jb
shr
push
inc
push
lret
in
jns
outsl
bsf
sbb
xchg
cmpsb
cs
jge
push
repz
dec
int3
pop
xor
mov
xor
jne
mov
lret
bound
clc
test
std
std
pop
dec
aad
mov
cmp
mov
in
rolb
push
iret
sub
out
xor
test
testl
lods
push
and
sbb
push
adcb
fistl
push
pop
xor
xchg
es
and
and
fdivrl
jmp
push
xchg
inc
mov
mov
out
add
lcall
and
repnz
push
jecxz
rcll
xor
fisubrl
fcmovbe
cmp
mov
out
lods
arpl
cmp
xchg
and
popf
std
gs
and
sti
addl
or
scas
push
inc
shrb
stos
pop
cmp
push
or
mov
and
xor
icebp
jp
repnz
das
rcr
aaa
and
inc
inc
dec
decb
pop
jae
popf
in
imul
push
les
movsl
push
xor
fildl
addr16
nop
add
int
iret
scas
push
iret
cmp
and
sbb
push
dec
addl
loope
icebp
xchg
sahf
push
jbe
jo
xor
fistpll
inc
mov
adcl
into
jge
jo
incl
shr
stc
cmp
adc
loope
inc
cmp
push
xor
mov
jl
pop
mov
icebp
xor
aaa
mov
adc
cmp
adc
cld
push
xor
pop
push
or
adc
adc
arpl
and
inc
repz
mov
xor
jne
int
popa
aas
mov
lods
pop
addr16
push
addr16
rcrl
mov
ss
mov
movsl
icebp
rclb
lods
xchg
sub
or
testl
roll
fidivrl
and
mov
sbb
sti
pop
xor
bound
fs
sar
cmpsb
xchg
push
mov
cmp
mov
cltd
xchg
xor
inc
jg
addr16
and
push
jb
inc
or
pop
jnp
push
jmp
xchg
pop
jb
and
leave
add
in
pop
jge
std
inc
jge
arpl
adc
in
fwait
jne
dec
cmp
cwtl
imul
nop
mov
movsb
stos
dec
sbb
pop
popa
mov
inc
mov
into
sub
leave
mov
mov
pop
sub
push
mov
ror
add
nop
aaa
inc
leave
cwtl
popl
pop
addr16
pop
inc
adc
cmpsl
imul
cltd
mov
sub
lods
jb
repz
pop
xchg
push
subb
lea
xor
add
cmpl
test
lahf
js
jl
jne
sti
lea
cwtl
pop
add
neg
xchg
sbb
dec
insb
pushf
repz
xchg
jnp
popf
push
jl
xor
xor
pop
ds
aas
ljmp
imul
fwait
ds
dec
outsl
mov
clc
pop
adc
mov
lds
dec
test
data16
jmp
xchg
pop
jge
mov
jmp
cli
mov
and
or
lahf
test
inc
movsb
popf
in
inc
jg
cmc
lock
pop
add
push
fwait
xchg
nop
jo
in
inc
mov
mov
pop
mov
sub
push
movsb
ret
aam
call
loopne
mov
lods
add
and
sbb
jnp
shl
push
loopne
xchg
and
add
mov
arpl
jmp
sar
aam
mov
insb
xor
insb
jnp
mov
jnp,pn
jo
mov
and
ficompl
imul
mov
sub
pop
xchg
nop
in
clc
push
push
mov
mov
in
int3
pop
movsb
xor
cwtl
loope
ja
leave
mov
xor
cmp
popf
in
cld
pop
or
inc
test
add
lods
lock
and
repz
arpl
and
pop
or
sbb
cmp
xor
cwtd
orl
sbb
jnp
push
lret
fcomps
jp
sub
aaa
xor
cmp
cmp
in
rcrl
mov
shll
jnp
rcrb
pop
fldcw
and
push
add
out
mov
or
jns
dec
fisttpll
push
jle
movsb
idivb
aaa
or
jmp
imul
pop
fisttps
lods
mov
arpl
or
adc
pop
push
sarb
enter
xor
sub
sbb
mov
subl
cmpl
test
call
cwtl
mov
xchg
dec
and
hlt
lock
rolb
dec
sbb
shll
push
or
xor
mov
cli
movsl
cli
jmp
jbe
and
fs
or
fs
loop
test
xor
xchg
imul
cmpsb
out
cs
jns
or
aam
or
dec
arpl
mov
pop
mov
das
inc
adc
movsl
push
inc
xchg
ficompl
test
fucomip
loop
stos
mov
loopne
or
dec
mov
jne
faddp
jne
repz
mov
outsl
jnp
stos
out
scas
and
les
lret
ljmp
out
stc
xchg
mov
ret
lods
incl
mov
mov
scas
icebp
testl
adc
cs
lea
aaa
xchg
mov
nop
popa
lods
xor
data16
sbb
outsb
into
add
ljmp
adc
loopne
add
sbb
dec
je
dec
call
aam
xor
sub
cs
int
dec
lods
cvtps2pd
jnp
mull
out
test
push
mov
ret
js
scas
in
sbb
mov
mov
lcall
cmp
loop
cmp
dec
cmp
mov
icebp
mov
jmp
push
addl
pop
stos
roll
dec
sub
dec
sbbb
scas
mov
xlat
leave
pusha
xchg
mov
cmpsl
pop
dec
scas
mov
or
mov
fstpt
fidivl
mov
xor
cmpsl
xor
ss
dec
pop
ret
ja
je
and
xlat
andb
aas
loope
xlat
sbb
aas
lret
mov
pop
test
arpl
loopne
scas
aad
jmp
out
dec
ljmp
mov
cltd
pop
cmpsl
nop
sub
loopne
jmp
add
dec
jnp
xor
inc
push
pop
mov
cmc
pushw
jae
xchg
lret
lock
aam
inc
cmp
aaa
cwtl
insb
jb
out
pop
iret
stc
movsl
sbb
out
adc
sti
imul
sub
mov
sbb
cmc
adc
sub
in
sub
imul
in
mov
dec
insb
test
imul
aam
pop
inc
jo
dec
mov
popf
push
cmp
mov
adc
and
xchg
sub
mov
push
adcl
aas
in
movsl
add
mov
push
orb
int
xlat
test
jmp
or
test
mov
repnz
sarl
fisttpll
rolb
sbb
testb
test
xor
pop
outsb
inc
sub
jle
lret
test
es
aam
jmp
cmp
imul
and
fst
shrb
fwait
dec
mov
sub
xor
dec
gs
push
data16
out
jmp
push
jae
adc
sub
mov
cmp
xchg
mov
call
xor
stos
in
std
adcl
loop
mov
nop
mov
mov
cmpl
mov
or
fisubrs
push
mov
lods
lock
add
xchg
lods
shl
xchg
xor
cmp
pop
shlb
mov
popf
xchg
mov
mov
jbe
add
xchg
call
jbe
mov
je
cld
mov
jp
dec
jge
jae
adc
jl
sub
xchg
fisttpll
inc
push
rolb
andb
inc
je
dec
test
leave
popa
sarb
mov
or
mov
push
inc
inc
div
mov
out
into
cmp
jmp
mov
pop
sub
mov
nop
push
or
or
xor
rolb
popf
jne
pop
adcl
sub
je
pop
push
adc
inc
inc
into
cli
call
shr
add
inc
mov
xchg
sub
push
push
out
or
xor
mov
xchg
jne
cmp
adc
subl
xchg
fcomps
scas
dec
pop
movsb
stos
cmp
fisubrs
orl
mov
fcoms
push
inc
mov
test
mov
jge
dec
out
hlt
outsl
inc
or
add
movntps
adc
push
mov
in
jg
xor
cmp
enter
rcrl
and
insb
pop
lods
test
jecxz
sbb
sbb
test
add
lret
mov
xchg
or
sub
popa
scas
xchg
mov
lret
insl
push
jo
sti
dec
mov
inc
mov
dec
add
repz
jge
mov
fiaddl
cmpsl
jle
xlat
or
cmpsl
xor
repnz
xchg
dec
in
fistps
repz
or
dec
inc
mov
ljmp
aad
cmp
mov
add
jo
xchg
popf
bound
dec
push
adcl
fldcw
or
in
sbb
push
or
pop
mov
jo
daa
movsl
xor
ja
mov
in
data16
outsl
push
jae
sub
sbb
xchg
cmpb
roll
mov
dec
adc
lret
dec
lret
fwait
jmp
inc
cmpsl
cld
sti
sub
js
cli
or
and
test
inc
inc
xor
aam
shll
clc
aam
cmpsb
imull
pop
xor
icebp
inc
mov
xchg
out
cwtl
dec
div
xor
and
stos
ljmp
fs
jp
mul
in
leave
jae
adc
lods
lret
enter
pop
adc
mov
lret
adc
push
and
repnz
adcl
cli
dec
jp
xor
jae
xor
xor
cmp
popa
xchg
aas
addr16
test
in
cmc
adc
mov
dec
sbb
pop
lret
xchg
mov
cli
and
scas
sub
push
mov
xor
xor
sbb
and
movsl
cld
movsb
test
inc
push
adc
xor
adc
cmp
adc
je
xchg
dec
scas
xor
inc
je
aaa
lock
ds
xchg
inc
rorl
add
out
adcl
rcl
adc
bswap
mov
push
or
mov
sbb
mov
inc
ds
jmp
mov
lods
arpl
lods
jp
mov
es
pop
jecxz
out
jl
lahf
cli
inc
push
insb
lret
out
nop
add
inc
or
xchg
mov
xlat
leave
add
stos
loopne
jmp
dec
add
nop
pop
in
push
mov
scas
pop
fcoms
jge
sub
test
cwtl
outsl
inc
lret
inc
call
pusha
lods
ljmp
js,pn
jecxz
push
jae
test
inc
jbe
mov
sub
mov
sbb
and
sbb
pop
in
mov
cmp
or
jb
cmc
mov
inc
ficoms
inc
flds
sub
xchg
dec
lods
or
stos
pop
out
or
sbb
pop
jg
orl
push
jo
pushf
imul
enter
xchg
testl
movsb
xchg
ja
adc
jbe
cld
xchg
repz
cmp
jle
jne
sbb
dec
mov
add
cld
icebp
xchg
test
inc
or
pop
jl
lret
push
jecxz
xchg
add
shrl
cmp
std
cmp
xor
push
fstps
mov
iret
shrb
data16
or
mov
or
loop
mov
jnp
pop
pop
sbb
and
xor
cmpsl
imulb
xor
clc
xor
int3
push
lods
push
rol
imul
je
dec
jecxz
mov
out
lea
or
mov
repnz
mov
and
test
repnz
test
cmp
ds
inc
cmc
xchg
and
jno
idivl
das
sub
lret
push
or
jp
and
out
imul
push
adc
pop
aad
mov
lock
incl
out
iret
lret
mov
daa
icebp
test
iret
rorb
hlt
divl
leave
jo
nop
cmp
cmpsl
xchg
pusha
adc
sti
movsb
jmp
add
cltd
in
hlt
loopne
xchg
dec
and
jge
fs
adc
jecxz
mov
rorb
jecxz
out
mov
or
mov
sarl
ss
cmp
sbb
push
arpl
pop
je
cmp
cmp
aam
das
jnp
movsl
push
mov
xor
jo
push
or
filds
sub
jno
xorl
xchg
pop
insl
pusha
cmc
loope
movsl
ret
imulb
and
push
enter
adc
lret
or
stc
push
repz
loop
and
pop
ficoms
pop
mov
mov
bound
mov
pop
xchg
xor
repz
mov
adc
rclb
and
in
pop
es
adc
subl
xor
adc
push
sub
orb
cmpsb
in
cmp
jecxz
scas
clc
add
xchg
xchg
ret
pusha
or
and
inc
jl
leave
xor
mov
inc
ss
movaps
jns
in
or
add
dec
orb
sub
jae
dec
insb
shlb
jbe
outsb
xchg
push
xor
xor
jp,pn
xchg
cmp
imul
jg
les
xchg
fisttpl
inc
adc
enter
push
rcrb
mov
fistps
xor
int3
rclb
pop
mov
mov
sub
stos
cmp
data16
dec
mov
bound
push
fsubrs
iret
pop
cmp
ds
mov
cmp
cs
jne
mov
mov
data16
repz
out
pusha
and
xchg
adc
lret
mov
lds
xor
jb
dec
push
mov
out
data16
sub
push
clc
fimull
cmp
add
cmp
sbb
jnp
pop
cmp
dec
out
xchg
stc
popa
popf
or
sub
cmpsb
jge
loope
mov
pusha
lods
in
call
ljmp
lcall
jns
loop
rcrb
jmp
in
push
sti
jbe
and
pop
mov
cmp
jbe
movsl
adc
xchg
add
pushf
mov
sub
pop
inc
aam
pusha
ficompl
outsl
xchg
ss
repz
mul
mov
or
in
addr16
sub
sub
xchg
jge
int3
fwait
adc
movsb
fsubr
add
push
mov
arpl
sti
add
xchg
inc
nop
lea
and
das
pusha
mov
adc
inc
xchg
pop
cli
dec
jmp
fincstp
pop
stc
fiaddl
mov
loopne
dec
addl
dec
mov
pushw
test
cmp
push
xlat
or
push
and
bound
loop
enter
sub
stos
push
inc
in
call
pop
xor
jae
adc
out
js
dec
leave
push
xor
dec
mov
pop
pop
into
hlt
pop
xor
ret
pusha
adc
out
xlat
inc
xchg
popa
int3
cmp
jne
das
sub
and
add
dec
pop
addr16
add
iret
das
inc
orl
stc
cmp
mov
subl
mov
jns
and
cmp
xor
ja
nop
test
jns
inc
pushf
pop
fwait
xor
fs
notl
sbb
inc
xchg
lea
ret
dec
mov
adc
mov
les
inc
aad
push
cmp
ds
dec
shrl
scas
add
adc
pop
shlb
jo
xchg
popa
mov
mov
fstpt
inc
pushw
jge
mov
cld
insl
leave
sub
repnz
loop
enter
or
mov
push
ja
fs
cmpsb
or
ret
cs
gs
out
xor
xor
shl
add
pop
std
daa
outsl
dec
cmp
jmp
es
jecxz
je
repz
out
addl
arpl
fistl
add
pop
pop
and
icebp
jge
pop
push
scas
xchg
xor
adc
js
inc
in
test
and
outsb
in
push
inc
inc
das
sub
push
sbb
call
out
adc
sub
xor
mov
jle
push
cwtl
in
sbb
cmp
out
xchg
sub
inc
push
lret
push
lods
xor
sub
xor
lea
call
outsl
mov
rcll
push
ss
jb
fimull
push
fisttps
push
insl
mov
cmp
mov
or
jb
add
xor
sbb
mov
mov
dec
pop
xor
push
out
pop
mov
arpl
cmp
gs
mov
jg
mov
addb
daa
push
pop
dec
add
popa
dec
stc
stc
call
in
jb
insb
mov
push
gs
xor
push
sub
out
xor
dec
in
mov
lcall
flds
ret
pop
push
sahf
jl
es
loopne
or
into
xor
xchg
popf
mov
sbb
mov
xor
call
sub
inc
stos
dec
adc
fidivrl
jle
lods
aam
xchg
inc
push
lods
inc
jg
pop
jge
mov
pop
jg
or
push
or
xchg
fwait
lahf
cltd
and
pop
dec
pop
fnstsw
icebp
jns
xchg
nop
test
pop
sub
mov
lods
mov
push
jnp
mov
hlt
dec
push
xchg
shl
enter
sahf
ror
js
cwtl
and
out
cmp
xor
stos
cmpsb
outsl
push
push
mull
pop
nop
pop
out
push
mov
dec
je
stos
xchg
cmpsl
xchg
pushf
js
loope
cmpsb
movd
syscall
shll
test
jne
mov
nop
mov
fcomps
pop
fs
add
hlt
movsb
test
lret
fstpt
dec
xchg
jl
xchg
adc
aas
lahf
pop
pop
lods
sbb
push
xchg
mov
pop
fiaddl
aaa
sub
test
pop
test
sub
gs
call
inc
mov
sbb
je
fimull
fstps
inc
pop
stos
shll
rclb
xchg
cmp
out
mov
nop
cmpsb
mov
repnz
mov
dec
sbb
jno
dec
xchg
sbb
pushf
test
inc
push
push
aam
lods
mov
lahf
xchg
ja
push
cmp
add
xor
jmp
pop
push
adc
pop
addr16
std
cmp
push
dec
js
popa
imul
xchg
mov
jnp
out
sbb
insb
inc
into
test
jmp
push
and
jg
jne
or
sub
push
sarb
mov
pop
movsb
dec
inc
mov
mov
dec
test
lcall
mov
aam
mov
idiv
mov
fsubl
in
mov
sbb
in
fadds
adc
and
sti
mov
push
sbb
fmuls
push
int3
pop
shrl
jle
int3
xchg
mov
pop
lret
xlat
call
dec
ds
daa
jbe
push
jl
mov
dec
push
imul
fwait
nop
daa
mov
negl
test
push
push
daa
push
cmp
mov
leave
movsl
stos
mov
sbb
pop
xor
and
jp
jmp
cmp
xchg
sub
mov
xchg
mov
into
mov
mov
and
imul
imul
bound
es
push
pop
mov
cmc
mov
test
ljmp
pop
retw
dec
mov
inc
fadds
adc
xor
push
loop
xor
mov
and
mov
adc
rcrl
mov
mulb
adc
dec
mov
aaa
xor
inc
fcmovne
into
inc
sbb
and
inc
pop
mov
dec
test
jbe
das
loopne
add
jb
push
inc
shrb
jns
mov
and
popf
stos
cmp
mov
or
jae
adc
out
xchg
jmp
lret
xchg
jns
xor
mov
mov
cld
das
fld
ja
mull
in
movsb
xchg
fbld
mov
fisubs
imul
lahf
popa
test
or
jmp
les
int
pop
sbb
les
sbb
shlb
lods
inc
fwait
adc
jle
xorb
rolb
cmp
shrb
mov
sbb
jle
xchg
rcrb
pop
lods
stos
repz
scas
pop
movsb
test
mov
inc
mov
movsb
sbb
mov
push
inc
sub
ja
xor
arpl
or
pop
cmc
mov
sbb
or
push
sbb
add
je
mov
xchg
loope
dec
repnz
jg
adc
cmp
add
mov
add
sbb
xor
mov
xor
add
cmpsb
scas
mov
aam
lea
mov
sub
cmp
cld
loop
loope
cld
sub
sbb
cmp
mov
or
aam
dec
jmp
or
cmp
dec
push
pop
cmpb
add
sub
jbe
mov
sub
pop
sbb
pop
add
addl
test
sub
add
ljmp
jecxz
stos
or
push
cwtl
inc
in
cli
imul
fsts
mov
pop
sbb
fwait
dec
stos
add
sysexit
outsb
mov
xlat
mov
cmpsl
lea
int
in
scas
lret
fists
loope
sbb
inc
insl
dec
adcl
lods
push
pop
dec
xchg
push
dec
movb
loopne
mov
dec
mov
or
pop
shll
setno
add
xchg
sbb
lea
jp
and
push
ljmp
mov
cmp
dec
inc
lods
push
fidivl
ja
xchg
sbb
inc
out
push
push
fwait
inc
aad
and
bound
shll
addl
inc
shll
mov
out
sbb
popa
xor
jno
ljmp
dec
lods
sub
sub
sbb
xchg
iret
dec
mov
leave
jo
pop
mov
sub
push
cmp
shlb
xor
rorb
cmp
sub
je
fldcw
push
js
xchg
lods
sbb
fidivrl
sbb
dec
fistl
sahf
adc
cli
adc
push
xchg
dec
xor
adc
or
outsl
mov
int
ret
cwtl
jnp
iret
adc
dec
xchg
inc
mov
repz
push
stc
mov
sbb
sbb
loopne
ljmp
ret
sbb
movsl
dec
mov
cmp
fmuls
cmp
lods
dec
push
xor
push
mov
inc
and
shrb
jbe
insb
adc
mov
cmp
sbb
cwtl
jne
push
xchg
pop
xchg
mov
mov
and
shrb
jmp
ret
push
fnstsw
jno
and
jo
dec
sub
lods
xchg
xlat
cs
push
rcrb
dec
clc
loope
lods
fs
inc
popa
cmp
mov
xchg
pop
mov
mov
lds
rorl
mov
or
sub
ret
xor
adc
cli
int3
and
mov
add
mov
into
in
out
test
fucom
imul
iret
adc
dec
xchg
addr16
in
orl
add
arpl
push
mov
repnz
pusha
xchg
mov
pop
lds
push
fstpl
push
jno
sar
mov
inc
insb
adcb
pop
jno
push
hlt
subb
data16
push
adc
bound
ja
aam
or
pop
cli
lahf
out
and
and
xchg
and
loope
adc
mov
push
mov
inc
fucom
jg
orb
pop
jecxz
dec
cmp
arpl
xor
dec
add
mov
cmp
or
mov
and
sti
lahf
fldt
pop
add
fimull
mov
outsl
daa
jl
lods
jp
and
sbb
fnstenv
imul
lret
mov
fcoms
fistpl
aad
test
jmp
and
or
stc
int
das
add
and
dec
orb
mov
pop
xchg
or
push
scas
subb
insb
jae
push
ret
clts
out
mov
jnp
and
insl
cmp
outsb
cwtl
dec
jbe
sbb
add
inc
into
sahf
cltd
repz
xchg
mov
shrl
lds
aam
adc
jp
jne
adc
pop
xchg
das
outsb
rcrl
and
setb
es
sbb
pop
mov
mov
cmp
or
sbbl
pop
mov
push
jp
aad
pop
and
xchg
pop
sbb
fwait
mov
add
mov
pop
outsb
push
int3
shll
aad
jl
daa
leave
test
push
sahf
inc
out
mov
push
lds
mov
push
dec
fisubl
add
dec
dec
cvttps2pi
mov
ret
add
test
pop
mov
andb
test
adc
cmpsb
xchg
rorb
adc
loope
clc
inc
xor
sar
loope
sbb
sub
mov
sub
jne
jp
repz
mov
xchg
ret
mov
xchg
ljmp
bound
outsb
xchg
mov
pushw
jge
fidivrl
and
jns
inc
lds
ficoml
mov
inc
xlat
inc
jp
std
stos
lahf
repz
scas
xor
lods
test
jbe
fimuls
pusha
insl
lahf
mov
sub
sbb
leave
test
in
cmp
ss
xchg
pusha
sub
xorl
inc
enter
mov
loope
push
ja
sbb
in
sbb
cli
xchg
sbb
add
gs
push
test
adc
or
lea
fwait
cld
adc
and
sti
aas
lods
pop
lock
shll
jb
and
es
mov
jne
pop
js
imul
inc
dec
shrb
jae
adc
adc
cmpb
icebp
fisubrs
in
inc
out
mov
imul
mov
inc
cld
jp
and
sbb
imul
icebp
lock
xor
push
inc
and
inc
push
mov
enter
lahf
push
js
divl
mov
out
das
jge
push
sbb
or
imul
ficomps
xchg
jecxz
push
imul
jp
adc
push
sti
mov
into
rcrb
adc
ds
mov
mov
fdivrl
dec
les
enter
pop
jle
insl
pop
lret
mov
jns
lret
mov
cmpsl
cmp
pop
int
adc
lods
clc
mov
not
mov
inc
inc
sahf
in
data16
jns
fwait
int
movsb
scas
stos
xor
imul
arpl
dec
add
dec
ljmp
cmp
ss
fwait
jbe
sbbb
push
cmp
sbb
in
pop
cli
stos
adc
jne
sbb
ljmp
xchg
jae
ja
push
lret
jne
or
or
sarb
cmc
call
ljmp
idivl
or
mov
stos
push
mov
rcrb
cmp
int
sbb
fwait
mov
cld
xor
and
xor
rcr
xchg
movsb
sub
lods
nop
leave
cld
adc
inc
sbb
pop
and
inc
dec
fildll
inc
pop
cmpsl
scas
adc
or
jge
std
pop
and
push
ss
inc
sbb
push
sbb
add
sub
add
inc
nop
aas
add
cmp
sbb
jae
nop
push
mov
adc
push
jle
or
mov
adc
add
enter
xchg
arpl
pop
mov
add
xchg
push
std
pop
and
jp
jae
inc
insb
repz
cwtl
mov
mov
dec
sub
inc
mov
addr16
outsb
js
ret
inc
scas
insl
and
cmp
dec
jmp
and
xchg
sub
dec
mov
mov
add
les
pop
or
mov
mov
xchg
fmul
adc
pop
mov
mov
mov
jl
xchg
shrb
negb
mov
and
int
adc
mov
or
pop
pusha
lods
push
test
lock
enter
adc
dec
test
sbb
mov
fstl
iret
aam
test
push
pop
mov
push
leave
repnz
in
js
popf
cwtl
jb
dec
dec
out
sbb
inc
jno
int
mov
rclb
mov
mov
inc
js
pop
insb
mov
push
xchg
popa
pop
outsb
jns
es
ljmp
sbb
fcmovbe
popa
or
jmp
mov
or
and
mov
cld
sub
inc
movsb
push
and
push
out
xchg
sub
pop
inc
sub
bound
insb
insb
push
pop
sbb
movsl
lea
idivl
fldl
jb
movsb
jmp
sahf
xchg
test
push
sbbb
fwait
adc
fucomip
mov
mov
mov
mov
jg
ret
inc
and
pop
mov
cmp
jb
lret
addr16
leave
std
je
icebp
jl
push
inc
jp
lods
pop
push
jg
shll
or
sub
xor
inc
dec
inc
pop
xchg
adc
shlb
mov
push
dec
add
cmpsw
jmp
lds
jl
nop
je
push
loopne
testb
xlat
addr16
addr16
dec
sbb
cmp
mov
bound
inc
and
jno
jns
sbb
cmc
test
adc
aam
or
jb
lcall
cmp
lds
pop
sarl
xorb
adc
cmp
mov
jmp
lret
push
adc
das
mov
sub
dec
xor
movsl
repnz
mov
sbb
cmp
or
jns
jnp
out
movsl
orl
jne
stos
xor
shll
xor
cmp
sbb
adc
inc
inc
push
xchg
addl
rorl
sub
movsb
dec
fsubp
repz
or
xor
sbb
ret
ljmp
je
fdivr
add
or
or
lock
sub
insb
scas
sbb
mov
mov
adc
out
aam
inc
xor
cli
mov
inc
das
sbb
scas
push
mov
sbb
cmp
jecxz
ds
inc
hlt
xor
dec
cmp
jge
or
push
roll
pop
or
jo
in
out
push
pop
jns
cmp
push
inc
mov
lock
pop
pop
out
fiaddl
xlat
lds
cli
pop
push
pop
das
cld
cmp
fstl
pop
push
jb
pop
pop
pop
das
in
xchg
or
jns
jnp
out
movsl
orl
jecxz
lea
fldenv
push
shr
or
test
add
mov
pop
into
nop
lods
mov
cmc
out
outsb
jl
aad
sub
sbb
push
sub
jecxz
jnp
clc
push
hlt
push
mov
xchg
sahf
arpl
dec
sbb
test
in
scas
lods
jp
mov
leave
sbb
jns
rorl
rorb
roll
inc
cld
cmp
jmp
imul
das
lods
lahf
and
mov
and
jns
addb
add
lea
dec
mov
outsb
ljmp
pop
lret
rdpmc
xor
mov
js
sbb
sub
js
mov
out
lock
loope
mov
loope
clc
xchg
loopne
loope
icebp
lea
repz
jmp
js
pop
xchg
testb
sub
fwait
push
data16
mov
dec
jns
test
mov
dec
shl
cmp
or
test
je
ret
inc
xor
aad
push
mov
shll
ds
mov
lock
repnz
lret
jnp
push
std
stc
push
imul
adc
add
jge
imul
inc
mov
xadd
or
sub
xchg
mov
xchg
outsb
jns
push
jecxz
repz
insb
dec
fisubl
xchg
adc
adc
lock
loope
jl
xchg
popf
xor
fisubrl
clc
test
hlt
daa
mov
aas
call
dec
pop
ljmp
movsl
mov
in
push
daa
and
cwtl
fmull
movsb
lds
outsl
sbb
pop
adc
in
xor
inc
nop
int
aad
mov
xchg
inc
fidivrl
lods
jb
es
jno
stos
mov
add
mov
cmp
fwait
out
loop
and
mov
or
add
fstpt
jo
sbb
imul
xlat
jge
xor
lods
addl
ret
jecxz
mov
jg
cmpb
cmpsl
mov
stc
sarl
cmp
sar
test
mov
popf
or
cmc
pusha
push
jo
dec
add
rorl
push
cmp
and
mov
mov
pusha
jg
mov
sahf
mov
xchg
and
sub
cmpsb
mov
add
lods
aas
push
dec
mov
test
xchg
xor
cmp
jnp
aad
pushl
mov
jp
je
pop
int3
cmp
fldl2e
loopne
mov
xor
sub
das
inc
lret
mov
jne
sbb
inc
aaa
xor
incl
pushf
into
fildl
testl
mov
cmc
pop
xchg
dec
test
cld
ret
test
jle
call
mov
sub
pop
mov
jg
shlb
and
jle
mov
inc
cmc
xor
call
mov
std
push
sbb
push
add
movsb
and
movsl
mov
dec
xchg
adc
and
push
std
xchg
outsb
lret
mov
orl
jnp
inc
dec
lods
cmp
das
cmc
pop
loopne
xor
loope
pop
jp
mov
mov
jp
or
or
push
addr16
sti
dec
rcl
jno
iret
xlat
mov
and
xchg
popa
sarl
push
lds
push
je
test
mov
xchg
or
movsb
pop
rol
xchg
push
es
outsb
xchg
add
mov
mov
xor
pop
fwait
inc
les
imul
sub
jp
roll
pop
inc
pop
cld
scas
les
jns
popw
inc
xchg
stos
mov
mov
shlb
pop
xchg
cmpl
test
push
push
pop
pop
hlt
enter
loop
dec
or
add
stos
data16
mov
cmp
push
movsb
and
or
das
adc
test
cwtl
out
push
rolb
roll
popl
add
popf
inc
sbb
hlt
int
and
jmp
mov
cmp
test
icebp
imull
pop
fucomip
imul
jo
stos
jnp
popf
jl
xacquire
mov
or
fisubrs
mov
adc
cmpsl
popa
pop
push
cmp
xlat
xchg
add
sbb
insb
dec
mov
jecxz
popf
adc
das
iret
fildll
or
cmpsb
or
aam
pop
loop
xor
or
std
jp
mov
inc
push
mov
clc
insl
push
sbb
mov
push
mov
int
repnz
int
push
sub
mov
xchg
mov
test
mov
enter
cs
in
pushf
mov
dec
push
or
shl
lods
subb
cmpb
in
test
jp
sbb
pop
stos
jmp
ret
lock
cwtl
ljmp
pop
rcrb
inc
jnp
nop
mov
sub
inc
inc
pop
je
push
mov
loop
jnp
or
mov
fbstp
out
xchg
xor
std
jbe
jle
std
stos
maskmovq
mull
mov
enter
fdivp
in
push
lcall
in
inc
shrb
mov
pushl
dec
jle
cmp
shrl
mov
movsb
in
mov
mov
mov
and
xor
mov
lds
loopne
and
pop
iret
add
sub
imul
outsb
cltd
adc
sbb
into
pop
add
adc
test
xor
jb
movsb
mov
jns
add
mov
scas
push
inc
mov
mov
lea
push
dec
dec
xchg
pop
pop
shlb
mov
mov
adc
int
std
jle
movsl
imul
pop
fmul
mov
and
cmpsb
lret
daa
aas
mov
mov
xchg
insl
mov
vorps
cmp
pop
loopne
shll
xchg
out
cwtl
pop
sub
clc
jae
popf
daa
jmp
mov
cmp
int3
cmpsl
outsb
notb
sbb
mov
inc
add
addl
or
pop
jp
dec
or
mov
sbb
pop
mov
adc
and
jg
mov
in
sub
mov
repz
mov
mov
gs
push
sub
pop
adc
mov
popf
in
push
test
sbb
ds
sub
pop
push
lods
adc
test
test
mov
or
movsb
inc
daa
sbb
sub
xor
cmc
pop
xor
aaa
add
jns
cli
pop
pop
push
sbb
lds
dec
enter
dec
mov
xchg
cmpsl
sbb
fisttpll
sbb
pop
addl
mov
inc
stos
dec
cli
nop
outsb
aad
rolb
popf
ret
xchg
jns
pop
sub
cwtl
add
push
push
lods
xor
inc
xor
adc
pushf
add
and
lea
push
pushf
mov
ret
sahf
inc
pop
movsb
ja
pop
mov
xor
inc
mov
sti
ja
es
mov
cmpb
add
call
repnz
and
pop
xor
mov
cmp
movsl
cwtl
ja
mov
sub
scas
pop
xchg
call
movsb
in
jbe
pop
repnz
add
mov
or
daa
adc
cmp
mov
xchg
ja
in
in
loopne
adc
fists
ljmp
insl
lahf
es
mov
aad
mov
cmpsb
add
mov
imul
fs
xchg
mov
mov
mov
test
bnd
addb
mov
out
xchg
mov
int
cmc
movsb
in
movsb
sub
mov
xlat
ja
lcall
lock
pop
xchg
inc
push
adc
rclb
lret
orb
mov
inc
push
dec
in
push
and
repz
pop
mov
xor
pushl
and
inc
roll
adc
lret
push
add
jbe
sub
inc
jecxz
cli
xchg
add
repz
add
addb
mov
scas
mov
xchg
add
and
jp
push
in
dec
out
stc
out
mov
push
out
divps
fdivs
ja
pop
test
cmpsb
jecxz
scas
lods
xchg
fidivs
jg
movsl
ret
loop
sarb
jp
leave
in
xchg
clc
mov
add
jl
pushw
lods
pusha
out
pop
add
xor
out
mov
rcrl
pop
in
cmp
icebp
repz
das
sub
rorb
jmp
fldcw
bound
push
ret
stos
pop
xchg
test
or
or
movsb
aad
dec
pop
je
mov
leave
jae
sub
stos
jnp
mov
sti
and
dec
add
add
adc
push
add
and
js
jae
hlt
jp
je
push
dec
sub
inc
lods
addl
xchg
pop
gs
xchg
inc
xor
repz
lds
shl
cmpsl
add
or
clc
hlt
movsl
fs
sub
fbstp
lods
push
sub
jbe
push
push
out
dec
out
jp
popf
mov
push
stos
movsb
dec
cmp
insb
repz
xchg
outsl
cmp
pop
xchg
in
and
shr
or
xchg
xor
bound
sub
outsb
cmp
arpl
adc
out
add
fmuls
ds
cld
int3
mov
pop
cli
mov
clc
push
lds
stos
out
push
insl
pop
pop
insb
addb
xor
xor
dec
mov
imul
pop
mov
lret
into
cmpsb
add
xor
jno
jno
or
mov
sbb
ds
fs
push
popf
inc
inc
dec
push
dec
fwait
outsb
inc
imul
mov
nop
mov
pop
fnstcw
or
xchg
cmp
ss
movsb
pop
sbb
xchg
lret
mov
mov
in
add
jb
xor
mov
fisttps
or
outsb
adc
push
mov
xor
mov
inc
push
mov
jne
or
mov
addb
lcall
lahf
push
ror
mov
and
cltd
in
cmpsb
out
shl
xchg
sub
pop
dec
shll
xchg
xor
sbb
inc
dec
dec
sbb
lahf
jbe
cmp
fidivrs
adc
std
cli
mov
push
adc
inc
mov
je
mov
lods
aad
dec
sub
sub
inc
jo
stos
cmpsl
ror
dec
jecxz
aas
adc
enter
into
repnz
test
and
inc
push
fs
das
cmpsl
dec
in
daa
cmc
jbe
or
adc
mov
cmp
dec
jg
inc
sub
mov
and
testl
int
or
mov
inc
sub
mov
mov
cwtl
cmc
clc
mov
leave
inc
mov
mov
xchg
xchg
int3
rclb
ret
cmovae
divl
push
pushf
lea
sub
lock
push
mov
jge
scas
mov
cmp
popf
leave
scas
mov
loopne
mov
out
ljmp
and
ret
push
inc
push
push
lret
jns
pop
add
push
push
push
or
imul
adc
fimull
fildl
shlb
xor
pop
in
cmpsb
push
push
divb
stos
mov
and
inc
stc
mov
ljmp
mov
jae
inc
je
addr16
jmp
fwait
dec
rcl
cmp
in
dec
jno
xchg
sub
or
mov
ds
in
in
mov
mov
and
cld
hlt
dec
out
push
cmpb
dec
add
and
mov
addr16
xor
cmc
popf
inc
stos
ja
pop
fcomip
stos
cmp
xchg
sub
pop
and
imul
sahf
cmp
sahf
dec
jns
mov
std
pop
fisubrl
jmp
in
fisubl
jbe
inc
insl
inc
lret
shl
cld
xchg
fidivl
jecxz
aaa
and
and
jno
daa
rorb
outsb
addr16
movsl
arpl
mov
ficoml
mov
std
and
jb
cltd
pop
cmpl
xlat
inc
pop
scas
stc
lret
push
ja
lret
loopne
outsb
sub
push
push
mov
pop
mov
fnsave
inc
iret
subl
loopne
mov
pop
xor
std
jmp
pop
mov
or
movsb
or
hlt
shrb
je
dec
xchg
into
ret
jmp
cmpsb
cmp
lahf
xchg
and
rcrb
dec
addr16
int
inc
or
aaa
mov
aad
dec
test
jg
cmp
mov
lods
inc
fwait
push
sar
popa
out
inc
add
inc
pop
push
mov
mov
add
fcmovnu
xchg
mov
cmp
daa
pop
pop
xorb
insl
and
mov
repz
xlat
pop
cmp
filds
mov
popf
cmp
add
lret
inc
sub
ds
push
xor
lcall
cld
mov
sbb
lret
rcrl
sub
jae
mov
dec
test
fstpl
inc
stc
mov
andl
xchg
daa
in
stos
sub
xchg
lea
sub
sbb
dec
xor
or
sbb
aas
dec
mov
xchg
neg
aaa
xchg
mov
in
or
dec
stc
xchg
inc
inc
shrl
push
in
inc
sbb
xor
mov
jge,pt
into
fists
arpl
aam
faddl
push
mov
push
add
aad
inc
das
inc
jae
mov
dec
scas
push
mov
std
les
xorl
jg
jle
sarb
mov
lods
data16
lahf
mov
or
loop
bound
ficoms
cs
or
push
sahf
pop
gs
enter
xchg
fs
mov
fwait
and
scas
daa
xchg
ds
sar
or
dec
adc
inc
sbb
adc
sbb
jns
and
int3
or
sub
clc
fbstp
pop
xchg
sbb
xor
push
sub
push
vmwrite
mov
imul
fs
mov
cmovge
xchg
dec
cmpsl
inc
lods
xor
daa
dec
enter
push
or
xchg
lock
lahf
int
sarl
push
push
outsl
inc
mov
stos
push
push
sarl
mov
push
xchg
sbb
mov
pop
mov
sbb
imul
scas
adc
add
pop
shr
out
push
lret
daa
out
stos
mov
into
ds
push
sbb
ss
push
pop
add
stos
cmpsl
hlt
ret
inc
ficompl
mov
sub
cld
sub
movsl
mov
pop
add
pop
aad
pop
aaa
xchg
int
and
add
ja
inc
xor
cmp
pop
push
test
mov
inc
mov
cwtl
fwait
pop
data16
loopne
ficompl
and
mov
sub
sahf
scas
push
fs
or
sbb
mov
cld
int3
icebp
push
mov
jno
pop
pusha
mov
cmp
cltd
aad
cmp
xor
orps
cmp
pop
fstps
xchg
dec
inc
adc
mov
xchg
add
push
jecxz
push
clc
stc
pop
mov
xchg
mov
movsb
cmp
jne
insl
pop
mov
sub
inc
jge
icebp
pop
pop
cmp
sbb
dec
or
inc
stos
lret
lea
xchg
xchg
add
outsl
inc
mov
jmp
cmp
jae
lods
test
inc
xor
push
jecxz
pop
in
mov
popf
mov
pop
mov
test
fyl2x
cs
cltd
mov
sahf
and
call
adc
fisubrl
ss
into
inc
andnps
mov
push
and
adc
sub
insl
sbb
movsl
shrb
out
mov
test
xchg
outsb
and
ljmp
lds
testl
push
aas
adc
xor
xchg
insb
stos
xor
inc
fisubrs
xchg
repnz
lds
into
mov
aam
or
sub
cli
aaa
cli
xchg
inc
test
imull
movsb
xchg
pop
aas
inc
es
or
mov
sbb
xor
add
stos
mov
les
pop
pusha
mov
dec
pop
jnp
cmp
and
push
subb
orb
add
xchg
lahf
push
push
addr16
lret
das
in
testb
or
mov
jmp
lds
dec
push
adc
movsb
jp
push
jl
add
jp
dec
fistpl
scas
xor
test
stc
cwtl
movsb
pop
in
adc
inc
cmp
or
sahf
mov
mov
mov
insl
hlt
ljmp
mov
jnp
push
std
movsb
rolb
icebp
inc
push
lock
in
imul
add
fimull
inc
mov
out
cld
call
addb
pop
ret
arpl
movsb
lods
jno
pop
add
dec
sbb
mov
push
cmc
rolb
mov
in
sub
out
scas
push
inc
xor
mov
std
inc
pop
inc
fwait
lahf
roll
es
rcrb
xchg
scas
mov
pop
push
adc
lods
ficompl
push
sub
xchg
mov
inc
inc
or
adcb
adc
mov
cmp
sbb
mov
inc
jne
imul
xchg
and
in
repnz
insb
mov
inc
out
pop
fistps
push
outsl
imul
push
add
rolb
push
movsb
mov
sub
bnd
jb
mov
mov
in
repnz
pushf
mov
mov
imul
pop
int
inc
int
adc
pop
out
xor
loop
add
xchg
lea
cmovp
xor
push
inc
rorl
push
adcl
add
jmp
ljmp
shl
aad
imul
shrl
in
jp
cli
dec
dec
jge
arpl
mov
dec
pop
aam
movsl
ja
nop
push
mov
aam
push
or
add
cmp
pushf
inc
aaa
sub
fldl
scas
pop
xor
cld
das
rcrb
add
cwtl
lahf
pop
and
sbb
fidivl
imul
mov
sub
out
jns
ljmp
shl
xchg
ret
shlb
and
sbb
inc
insl
arpl
stc
xchg
xchg
mov
test
xchg
clc
mov
sti
sub
or
gs
int
mov
cmp
ljmp
movsl
sub
mov
xor
rolb
push
ljmp
xor
sbb
mov
ss
cwtl
fcmovne
push
xlat
add
imul
bound
sub
cmc
inc
loope
cwtl
cwtl
sbb
inc
jl
inc
xchg
andl
pop
or
stos
mov
scas
inc
mov
sub
dec
inc
inc
inc
lea
mov
xor
data16
dec
pop
sbb
push
fwait
lret
sub
fsubrs
out
add
mov
es
dec
push
push
pop
cli
cmp
aad
push
test
cli
xor
movsl
jb
cli
xchg
adcb
add
cmp
loop
roll
fdivs
mov
jbe
addr16
add
rolb
addb
fucomp
addl
pop
pusha
xor
add
jb
repnz
dec
shrb
jle
mov
mov
es
add
hlt
push
shll
sub
shrb
mov
int
mov
out
cli
aaa
xchg
sub
sbb
bound
pop
fdivl
push
jbe
mov
fbld
or
mov
jb
jae
pop
out
lea
in
xlat
sub
sahf
out
leave
mov
movsb
in
cmp
lods
cli
pop
adc
idivl
inc
in
jbe
jno
adcl
xchg
mov
cmp
pop
enter
sub
cmp
push
jnp
pop
adc
xor
std
outsl
mov
sbb
fisubl
mov
xchg
push
insl
insb
iret
sub
push
test
inc
ret
cs
bnd
fisubrs
or
xlat
inc
dec
faddl
mov
and
mov
shlb
ja
mov
inc
xchg
mov
xchg
cmp
jae
jp
jo
pop
push
outsb
mov
mov
inc
in
mov
cmp
out
les
mov
xchg
inc
cmp
bound
pop
push
pushf
in
icebp
push
add
or
mov
and
ss
sbb
loope
cmp
adc
and
dec
out
stos
out
push
and
inc
out
sbb
or
inc
mov
sub
arpl
popa
xchg
cmp
lcall
or
push
push
in
jge
in
mov
jb
jbe
inc
push
je
cwtl
xchg
pop
mov
subl
sbb
nop
mov
sarb
scas
inc
inc
fsts
mov
aaa
mov
mov
mov
xor
decb
out
jno
jb,pn
dec
mov
add
mov
call
mov
mov
inc
mov
lock
sub
sarb
pop
rcrb
repz
in
pop
fildll
rcr
adc
lret
or
jae
sbb
shlb
add
sbb
ret
inc
mov
push
pop
mov
test
pop
dec
ret
push
hlt
sub
and
adc
dec
or
sbb
mov
mov
into
sbb
add
cmp
scas
lea
int3
mov
mov
inc
stc
xchg
inc
aam
lea
leave
or
or
inc
pop
xchg
jb
out
sbb
adc
ret
cli
adc
mov
mov
out
ds
xor
sub
enter
arpl
std
pusha
sub
sti
cmp
in
inc
scas
push
cld
mov
ss
jb
and
pop
imul
xchg
xchg
call
jmp
sub
fwait
mov
lcall
pushf
mov
js
xor
and
ret
xorb
stos
pminub
out
mov
xor
push
lods
xorb
addl
sbb
aas
jmp
out
mov
ret
rcrb
jecxz
out
jns
test
addb
ss
scas
inc
divb
stc
or
rorb
in
call
int
xorb
dec
movsl
fsubrs
int
int3
push
sub
rcrb
pop
pusha
rorb
lods
mov
aas
and
setge
fsubl
push
push
sub
lds
es
mov
loope
add
dec
xchg
loope
cld
mov
sub
pop
mov
jle
inc
loopne
gs
inc
dec
adc
push
arpl
jmp
jno
fidivrs
inc
mov
push
jnp
test
popf
mov
xchg
test
xchg
ja
dec
xor
xor
push
and
sarb
mov
aas
test
pusha
adc
in
push
ss
ret
pop
and
mov
xor
leave
mov
repz
xor
xchg
mov
fimull
cmp
notl
stos
push
pop
jno
adc
cmp
pop
enter
insl
push
xor
ljmp
lcall
mov
or
jno
fs
and
cmc
push
jbe
stc
dec
popf
lds
and
adc
mov
xor
jb
andb
rcrb
jne
mov
cmp
xor
cmpsb
push
mov
pop
aam
jns
pop
fadds
mov
repnz
roll
daa
sub
shll
cmc
mov
dec
push
imul
sub
push
push
lahf
jno
stos
ljmp
sahf
int3
or
ja
sub
add
add
test
les
jmp
xor
enter
test
inc
cmpb
repz
add
shlb
clc
xlat
xchg
jns
xchg
push
lret
pushf
xor
in
xlat
iret
loop
sarl
sbb
mov
ja
xchg
mov
push
hlt
mov
ss
lret
shrb
inc
popf
or
inc
stos
dec
pop
xor
push
mov
jbe
push
lahf
cwtl
inc
xor
and
imul
sti
aas
sub
divl
pop
loop
rolb
test
bound
xchg
ljmp
aas
push
jl
fidivl
sub
jno
pop
cmpsl
shrl
sbb
ret
push
sarb
ds
repnz
popl
jo
leave
clc
jecxz
mov
cli
sbb
imul
popf
popl
sarl
xchg
fs
hlt
add
inc
dec
scas
imul
mov
cs
and
je
icebp
xchg
cmpsb
jmp
inc
jmp
dec
lret
mov
mov
xor
and
pusha
mov
jge
mov
push
mov
jmp
divb
or
cmpsl
imul
sub
mov
ficoml
dec
or
push
push
push
push
outsb
fcompl
stc
sbb
sbb
das
cs
outsb
leave
pop
jne
xchg
sub
test
inc
loop
inc
cmp
jl
sti
dec
imul
add
jae
push
iret
pop
fcmovb
cli
pop
xchg
fsubs
jb
dec
and
and
aad
enter
mov
dec
int3
ret
push
mov
add
jmp
inc
sbb
mov
test
mov
cmp
inc
rcpps
cmp
xor
mov
cmp
lock
mov
add
mov
je
jo
pop
std
cmpsb
in
cmp
cmp
xor
or
sahf
icebp
mov
insb
inc
pop
mov
sbb
jmp
and
scas
movsb
and
inc
inc
push
loop
call
and
ss
in
xor
addr16
and
dec
fldl
in
push
mov
jne
pushf
push
mov
daa
mov
mov
push
fsubp
cmp
aas
jecxz
xor
stc
or
add
aas
pop
das
pop
cs
mov
dec
sar
repz
adc
mov
in
xchg
test
pop
push
pop
xchg
pop
test
adc
sub
mov
ljmp
sbb
std
mov
fidivrs
push
imul
adc
insb
mov
xorb
ja
xchg
mov
sbb
push
lahf
les
or
rorb
negb
aas
push
imul
pop
imul
out
in
push
addr16
dec
sub
insb
mul
inc
sbb
jae
popa
sub
jge
or
sarb
mov
and
jge
jbe
out
ljmp
mov
push
inc
gs
sub
xlat
adc
movsl
lahf
mov
jnp
inc
xchg
cmp
sub
push
shl
adc
add
filds
and
out
xlat
enter
or
enter
jnp
and
inc
jnp
xchg
xor
pusha
push
and
pop
pop
xchg
and
mov
push
fistpl
cwtl
mov
or
jg
xchg
and
aaa
xor
jbe
popf
adc
sub
pusha
add
cld
popf
xchg
xor
push
dec
sbb
out
push
loopne
pushf
mov
xor
add
push
cmp
mov
int
ret
movsb
cmp
sub
addb
adc
sub
decb
xchg
cmp
xchg
add
enter
outsl
scas
adcl
iret
pop
pusha
sahf
mov
sbb
inc
inc
xchg
inc
aas
shlb
jnp
repnz
jmp
xchg
dec
mov
out
push
pop
pop
adc
pusha
add
xlat
push
hlt
arpl
xor
stos
in
call
mov
mov
inc
push
mov
fsubrp
pop
adc
sbb
sbb
jge
mov
ss
xor
mov
push
and
sbb
pop
aad
int
cmc
push
call
dec
cld
fnstsw
or
mov
dec
clc
pop
add
add
ret
nop
aam
cltd
jae
ret
repnz
fsubrl
pop
jge
xchg
inc
arpl
mov
fwait
lret
fidivl
jb
scas
in
cmpsl
mov
add
out
pushf
rorb
int3
lret
dec
or
cmpsb
btc
fdivp
jle
or
dec
mov
adc
push
cmp
hlt
hlt
xchg
jnp
pop
into
or
loopne
jbe
jecxz
adc
out
enter
nop
mov
icebp
push
jg
pop
ret
mov
in
std
inc
sahf
cwtl
ds
sub
cmp
cmp
pusha
addl
scas
enter
sahf
outsl
repnz
mov
mul
push
push
popf
out
cmp
mov
cmp
fstl
mov
pop
movsb
jae
rol
aad
gs
fiadds
mov
or
pushf
or
notl
out
ljmp
push
mov
inc
cmc
pop
cmpsl
ret
sbb
push
inc
fmull
imul
add
mov
xchg
xor
je
mov
mov
jp
ljmp
inc
mov
test
call
std
mov
mov
inc
jecxz
mov
ret
idivb
adc
loope
sti
mov
addb
shll
pushf
or
bound
ret
cmpsl
mov
xchg
daa
cwtl
data16
sub
mov
and
rcll
add
cli
repnz
and
dec
jno
iret
add
inc
xor
fldl
aas
jnp
movsl
loope
xchg
pop
and
jns
push
in
mov
jns
jb
pop
andl
dec
inc
dec
mov
add
inc
call
clc
mov
stc
jo
xor
out
sbbl
insb
cmc
arpl
daa
stc
xlat
vorps
dec
sub
mov
dec
mov
pop
cli
aaa
push
jecxz
mov
inc
lahf
mov
cmc
mov
sbb
push
bound
popf
and
ljmp
lock
sub
or
jns
xor
pusha
insl
xchg
fucom
sbb
stos
inc
scas
incb
xlat
jnp
lock
cwtl
xchg
cmpsl
adc
inc
daa
fisttps
add
jg
xchg
add
inc
push
lods
ss
sbb
jns
or
cmp
jl
pop
pop
mov
inc
lret
add
int3
cmp
cmp
cmp
or
and
mov
test
push
data16
lods
pop
dec
icebp
mov
js
dec
xchg
sub
jg
test
popa
mov
mov
call
cmp
stos
repnz
push
mov
sbb
fstpt
jns
outsl
jle
movl
fistpl
mov
js
dec
sub
pop
mov
or
bound
xchg
imul
scas
or
mov
rolb
lret
daa
inc
call
add
sbb
insl
lret
push
dec
cmpsb
in
mov
mov
cmpsl
xor
push
stc
or
adc
xchg
sbb
mov
in
std
stos
scas
jle
scas
sub
aad
lock
push
pusha
cld
rclb
inc
pop
iret
push
cmp
fnstenv
sbb
xor
jecxz
arpl
jnp
push
ds
ja
and
ret
lret
fistpl
adc
gs
bound
push
push
mov
jp
nop
sbb
icebp
jbe
mov
pop
jbe
loopne,pn
out
loopne
push
or
imul
fstpt
iret
mov
movl
add
test
scas
jecxz
aam
push
sub
push
jmp
cltd
sub
aam
test
repnz
adc
push
js
xor
jecxz
or
loope
loop
arpl
xchg
ret
out
shlb
lea
or
sub
jecxz
pop
in
xor
cmp
add
repz
scas
ds
jle
out
movsb
arpl
idivl
ja
mov
dec
inc
mov
jae
dec
out
inc
rol
shll
adc
sub
std
xchg
std
mov
sub
mov
dec
aaa
int
lahf
sub
lds
aaa
jp
dec
push
mov
mov
or
out
mov
xchg
aam
push
in
loop
push
ret
cmpsl
mov
sbb
pop
fsubs
in
jbe
in
cs
js
in
mov
daa
dec
sub
mov
mov
pop
ja
pop
fldenv
xchg
sub
movsb
imul
aam
adc
pop
or
scas
pushf
sbb
and
inc
mov
sbb
xchg
push
inc
xor
jne
adc
sub
idiv
std
jg
sub
lock
gs
mov
fists
inc
sti
pop
sub
out
jecxz
or
sbb
cmp
or
push
pop
mov
sub
and
mov
std
jo
stc
push
sbb
sbb
or
mov
mov
mov
leave
or
cmp
rcrl
addr16
sbbb
xor
orl
popf
scas
push
stc
icebp
mov
and
imul
jo
cmpsl
pusha
jb
cmp
jbe
dec
xchg
or
in
ficoml
adc
jns
dec
pop
mov
in
xchg
add
mov
sub
fsts
loop
mov
lds
mov
xor
jl
dec
lock
xchg
outsb
repz
push
xchg
aaa
hlt
lds
mov
test
inc
outsb
add
sub
fs
mov
and
inc
sub
jb
sub
ds
cmp
xor
sub
les
and
aaa
stc
mov
bound
mov
cmpsl
loope
xor
dec
addr16
jae
js
les
and
pop
jb
fnstenv
inc
cwtl
push
jecxz
cmc
or
cmp
negl
inc
lret
mov
pop
jb
int
adc
insl
loope
fcoms
mov
push
call
cmc
sub
scas
cmp
dec
cmp
mov
fidivrs
lods
and
out
fdivs
lods
cs
or
aam
scas
adc
loope
mov
cmp
pop
sub
testb
incl
pop
xorl
jnp
scas
fildll
push
sub
mov
jmp
inc
icebp
std
mov
neg
push
fisttps
incb
in
ret
push
jae
sbb
test
fstp
ljmp
cmp
mov
push
pop
xchg
pop
adc
inc
enter
pop
and
pop
fnsave
scas
cmc
push
or
adc
xchg
imull
inc
jl
xlat
dec
mov
lea
mov
sbb
add
cmpsb
mov
ret
mov
cmp
fld
filds
pop
sbb
push
dec
out
mov
mov
and
adc
push
push
jl
mov
xor
jmp
mov
imul
rorb
inc
inc
mov
cli
movsb
insb
ja
mov
ret
ret
pop
fnstsw
push
mov
add
cld
pusha
push
repz
mov
movsb
cmpsl
xor
and
jge
pop
divl
pop
adc
push
xorl
jg
scas
cwtl
pop
popa
fwait
gs
andl
loope
outsb
iret
and
imull
repnz
or
sbb
mov
sub
jb
pushf
bound
sti
outsb
jl
loop
lret
push
cmp
scas
fwait
pop
fstpt
mov
mov
mov
pop
inc
inc
adc
icebp
popw
jle
sub
bound
jbe
je
add
sub
push
adc
inc
and
pop
adc
or
mov
lcall
xchg
sub
mov
mov
inc
movsl
enter
sub
mov
loope
mov
leave
lcall
out
add
or
int3
adc
addb
lret
push
jbe
pop
test
jb
adcl
sbb
shrl
cvtps2pd
imul
cmp
cmp
xchg
scas
sub
or
push
fisubl
sub
dec
mov
pushf
nop
sahf
addr16
sarb
pop
addr16
mulb
lret
xchg
mov
adc
adc
sti
popa
or
mov
and
push
add
jp
imul
rol
push
or
pusha
lcall
push
jge
and
loope
pop
mov
cmp
int3
ret
stos
push
lahf
or
mov
dec
sbb
mov
jne
add
fiaddl
test
inc
sbb
daa
xor
shl
outsb
xchg
mov
out
mov
test
add
lcall
xor
push
xor
in
jbe
mov
jmp
xor
mov
js
mov
jbe
dec
test
rcrb
and
in
mov
xor
inc
lcall
sbb
add
hlt
or
cmp
mov
cmp
mov
sbb
xlat
insb
push
adc
lods
dec
movsb
mov
icebp
ljmp
mov
adc
jge
add
pop
bound
inc
je
sub
fldcw
lcall
jb
jae
outsl
mov
bound
push
inc
mov
imul
sbb
fstpt
imull
mov
add
imul
xor
adc
and
mov
sub
push
mov
push
jg
dec
in
scas
idivb
xlat
jo
xchg
in
cmp
sub
imul
sub
scas
int3
fists
push
dec
fwait
dec
mov
mov
mov
pop
inc
mov
jae
push
mov
push
scas
push
bound
push
int3
dec
fsubs
lods
jbe
in
pushf
dec
shrl
fwait
inc
ds
pop
lahf
and
mov
dec
jo
mov
sbb
and
aas
mov
mov
add
sbb
dec
les
and
jne
leave
mov
scas
pop
divl
arpl
ficompl
mov
insb
std
sub
xchg
addb
lret
xchg
mov
adc
mov
jbe
cmp
mov
sahf
sub
pop
or
out
cmp
push
sti
inc
loop
pop
xor
pop
and
mov
xor
or
xor
test
out
mov
je
dec
add
in
cmpsb
inc
xchg
into
fists
mov
lock
outsb
cld
mov
cwtl
mov
imul
repz
xchg
clc
stc
imul
pop
mov
cmp
lret
inc
pushf
cltd
shrl
fwait
push
enter
jg
gs
dec
loope
nop
jnp
scas
cmpb
loop
and
fs
jg
mov
sub
fs
mov
mov
add
mov
popa
fcmovbe
inc
adc
adc
or
mov
divl
cmp
imul
push
pushf
mov
fs
movsb
push
sbb
adc
out
adc
pop
iret
rol
push
movsb
push
mov
xor
inc
mov
adc
insb
faddl
xorb
mov
enter
pop
mov
divb
inc
xor
jge
push
cmpsb
sub
sub
pop
aad
test
push
clc
cmp
and
or
loop
inc
add
stos
or
xchg
stos
out
insl
ficoml
mov
stc
out
adc
mul
push
mov
jo
push
mov
add
out
imul
xchg
xchg
les
adc
js
mov
iret
inc
jb
mov
jae
inc
gs
sub
cmp
ja
fs
in
push
shll
mov
mov
pop
push
jmp
mov
mov
xchg
adc
shr
jl
cmp
add
xor
test
shlb
test
push
jge
js
int3
sbb
jbe
mov
push
mov
xchg
push
clc
sub
push
or
mov
push
insb
xchg
pop
inc
hlt
dec
mov
xchg
push
push
addl
ret
xchg
add
mov
mov
xor
mov
scas
out
ret
adc
lods
test
jge
mov
adc
sub
stc
cltd
mov
inc
dec
fisttps
xor
dec
in
ja
sub
out
xor
cli
fwait
and
inc
sub
mov
mov
hlt
sbb
inc
xchg
scas
push
cs
sub
ds
enter
pop
adcl
call
es
cmp
push
and
popa
jecxz
iret
rcrb
icebp
das
cltd
sbb
jle
cmp
mov
aam
xchg
cwtl
add
rcrb
insl
sub
sbb
xorb
das
pop
jg
push
test
mov
cmpsl
clc
shll
mov
iret
pop
dec
shrl
cmp
cwtl
mov
mov
int3
or
fwait
add
das
jo
jne
fidivrl
pop
mov
negl
shll
add
outsb
jg
jbe
push
jne
add
xor
dec
sbb
jmp
popf
cmpsl
jmp
mov
and
jne
shll
adc
adc
idivb
jmp
mov
fldenv
nop
mov
dec
outsb
shrb
and
pop
js
imul
stos
adc
mov
loop
push
aas
iret
std
or
adc
xor
test
inc
loop
and
inc
add
and
sub
into
mov
ss
popa
repnz
ljmp
and
fcomi
sub
mov
gs
fcomi
fs
and
or
cmp
aam
xchg
aam
testl
in
pop
mov
mov
or
stc
shlb
scas
lods
das
mov
push
push
fnsave
cld
repz
jmp
mov
adc
and
mov
ret
out
push
das
iret
jge
add
ds
ljmp
cli
mov
lods
data16
jns
dec
xor
jecxz
sbb
loopne
aas
lahf
dec
inc
sub
pop
inc
inc
mov
inc
mov
aam
icebp
aaa
mov
xor
addr16
sbb
or
mov
clc
pop
mov
mov
icebp
xchg
rorb
or
in
movsb
testb
cmpsl
cmpsb
sbb
push
dec
data16
mov
roll
mov
cmpsb
jno
mov
ja
push
pop
fidivrl
out
hlt
cltd
dec
xlat
inc
mov
mov
inc
sub
inc
out
or
leave
cmp
pop
testl
jge
lock
mov
mov
rorl
out
lds
pop
in
icebp
out
shlb
mov
xor
sahf
in
jl
push
scas
xchg
dec
pop
cmovne
hlt
mov
cmp
cs
pop
ret
iret
inc
cld
pop
and
out
dec
xor
push
add
add
shrl
push
lcall
sarb
xchg
xor
xchg
sti
xchg
aam
sahf
out
mov
jp
xor
push
dec
in
inc
cmp
fnstsw
cwtl
push
dec
pop
enter
jne
mov
fldcw
or
jmp
cltd
pop
xchg
aas
sbb
rcrl
push
lret
out
cld
mov
ds
sbb
fbld
fdivrs
add
push
movsl
cwtl
imul
and
outsl
sarb
aaa
inc
mov
stos
mov
decb
mov
push
lret
movsl
lcall
adcb
mov
loope
push
cli
jbe
cmp
mov
xchg
dec
addb
sbb
in
push
aas
rol
pop
pop
mov
jg
jp
push
ljmp
in
dec
inc
xlat
ret
jp
xchg
mov
hlt
pop
mov
ds
mov
scas
sti
mov
xchg
andb
pop
xchg
xchg
push
xlat
and
push
fadds
mov
mov
in
pushf
and
xor
xor
inc
xchg
je
push
or
adc
pop
mov
lods
jno
mov
aam
test
pop
dec
daa
dec
pop
enter
add
jg
cmp
push
pop
push
push
dec
lds
or
mov
push
ljmp
or
xor
popa
ja
aad
outsb
es
mov
fisttps
lret
ret
adc
inc
not
movb
add
xlat
fiadds
jle
je
jne
stos
adc
mov
jl
cli
popf
push
inc
mov
xchg
gs
ds
pop
mov
pop
xorb
mov
aas
add
and
add
pop
dec
rcll
pop
inc
xlat
loop
scas
ficoml
into
xchg
stc
mov
decl
or
sbb
iret
mov
loope
lahf
xchg
aas
sub
push
inc
push
in
cmc
and
dec
pop
xor
nop
stos
call
cmpsl
test
add
adc
mov
mov
icebp
addr16
cmp
lea
cmp
scas
sub
lret
sahf
dec
push
test
pop
pop
stc
andl
aam
inc
shl
mov
and
mov
addb
or
call
mov
sbb
in
or
outsb
jo
call
jmp
aad
xlat
lock
mov
mov
xchg
stos
fstl
in
pop
or
loope
cltd
hlt
push
xchg
scas
sbb
fimull
pop
into
dec
out
jbe
imull
xchg
sbb
sahf
ja
add
sbb
sub
adc
mov
out
fdiv
push
sbb
pop
in
pop
push
sbb
pop
fwait
pop
pop
xor
sub
cmp
mov
nop
jecxz
ds
lret
sbb
nop
int
sbb
aam
jl
and
jle
stc
fsts
sarl
dec
add
arpl
sbbb
and
push
mov
lods
outsb
adc
sbb
sub
pushf
iret
dec
mov
sahf
xchg
add
je
lods
movl
lret
insb
sbb
gs
xor
sbb
jmp
push
loop
sarl
mov
mov
mov
mov
lret
mov
stos
pop
mov
std
ficoms
inc
mov
inc
mov
inc
jecxz
mov
sbb
rolb
imul
loopne
sub
cmp
test
xchg
push
sti
cmpsl
push
jg
xor
outsl
add
test
sbb
jmp
aam
mov
push
mov
cli
sbb
xchg
cmpsl
stos
mov
int3
rolb
in
sub
fst
rclb
dec
adc
aaa
popa
mov
cmp
push
fcoms
push
dec
sahf
int
insl
xor
mov
pop
inc
pop
ret
shrl
xor
push
cld
inc
xorl
rcrb
mov
test
stos
add
xchg
mov
jmp
sbb
test
cmc
mov
sti
dec
dec
shlb
jmp
mov
insb
pop
mov
std
aam
jge
sub
jns
dec
ret
push
in
push
cs
jae
test
sub
test
adc
xor
jmp
xchg
call
sub
dec
pop
sub
lahf
cltd
pop
cli
out
ja
mov
adc
push
fwait
and
dec
push
add
imul
or
addr16
aam
push
stos
mov
push
movsl
xchg
add
and
pop
xor
sti
push
shll
sbb
xorl
lods
std
mov
bound
data16
cmc
leave
pusha
sub
sub
sbb
lds
pop
jb
or
call
pusha
faddp
jge
dec
xor
mov
scas
adc
lahf
or
int3
cmp
enter
jnp
dec
loopne
sub
iret
xchg
rol
cmp
and
faddl
dec
ja
fcoms
inc
pop
xchg
rcl
outsb
jnp
sar
pop
inc
cwtl
mulb
cmp
adc
inc
in
stc
aam
adc
gs
push
cld
push
out
pop
addl
jge
dec
divl
jbe
sbb
outsl
sbb
addr16
movsb
xchg
shl
loopne
inc
mov
aam
and
xchg
sti
xor
or
inc
outsb
push
addl
leave
xchg
pop
adc
stos
mov
mov
push
cmp
add
mov
int
pushf
xor
repnz
stc
aad
test
je
jae
adc
dec
mov
mov
add
fcos
popf
mov
jbe
sub
and
push
pop
pop
and
in
cmpsl
stc
mov
pop
add
ret
dec
gs
fistl
sub
jp
adc
aad
cld
int3
adcb
xchg
inc
mov
xor
inc
sbb
xchg
xchg
xor
lret
xor
scas
lds
mov
push
jmp
das
mov
popf
pop
jns
add
pop
dec
stos
adc
jbe
inc
cwtl
daa
add
rclb
popf
xchg
test
jo
jno
ret
push
add
pop
popf
aad
popf
mov
pop
adc
into
mov
mov
jbe
cmp
nop
pop
test
inc
mov
mov
scas
data16
les
xor
sarl
rcrb
bound
push
mov
insl
xorb
push
sub
push
and
add
cltd
push
cmc
mov
inc
xchg
jbe
cmp
imul
out
push
daa
scas
add
push
outsl
rclb
push
lret
lret
xchg
outsb
cltd
xchg
ret
lds
inc
ljmp
cld
xchg
add
inc
jno
sarb
xchg
lret
jecxz
sub
cltd
mov
loop
sbb
cmp
mov
in
adc
and
in
mov
adc
mull
inc
imull
xchg
mov
sub
mov
das
adc
lret
rcrb
lods
in
add
xchg
or
adc
js
fwait
daa
inc
inc
ret
or
lcall
cmp
or
jns
mov
xchg
xchg
addl
pop
and
and
push
mov
iret
cmp
pop
int
aad
push
outsw
test
mov
int
push
shll
adc
jge
dec
int
rcll
call
mov
jl
or
cmp
std
shl
ss
outsl
xchg
dec
dec
dec
rolb
stos
xchg
dec
add
outsb
outsb
mov
rdpmc
jmp
out
inc
push
pop
notb
cmpsl
mov
push
pop
sar
push
pushf
ja
addr16
fsubs
xchg
js
clc
push
dec
dec
aas
leave
cwtl
jb
les
lds
lds
sub
push
or
push
negl
in
gs
push
jne
sub
jmp
mov
xor
inc
rcrb
sbb
popf
and
jns
push
rcl
cmp
jmp
add
adc
xchg
jne
pop
or
mov
lret
pop
js
and
ret
dec
add
mov
inc
or
mov
push
ret
and
sbb
xchg
sub
push
cld
push
mov
gs
mov
or
pop
inc
repz
cmp
ret
pop
or
jecxz
lahf
ljmp
or
adc
insb
mov
aaa
cmp
mov
sub
loop
gs
cmp
mov
sub
xlat
inc
xor
inc
mov
cmc
fadds
inc
out
lcall
pop
push
xchg
sbb
jo
xchg
xor
std
dec
shlb
jl
push
outsl
and
cmc
dec
cs
xor
xchg
or
xor
adc
push
int3
jbe
dec
test
imul
ror
cwtl
jns
jns
mov
xor
mov
jns
add
push
pop
rcl
and
xchg
jmp
fwait
in
mov
mov
in
push
shl
push
push
cmp
pop
sti
dec
cmpsb
mov
mov
hlt
fs
js
mov
js
fisttps
outsb
xchg
sub
stc
pminsw
std
or
push
lret
mov
stos
movsl
xchg
ficompl
dec
inc
loopne
in
leave
cld
orb
pop
mov
push
push
aaa
pushf
aam
mov
je
iret
mov
sub
cmp
adc
pop
add
push
inc
stc
mov
mov
sub
cmp
sbb
in
sahf
sti
adc
pusha
cmp
ds
cmpsl
push
pop
adc
pop
push
sahf
sahf
nop
ss
nop
push
cmp
lds
sbb
daa
daa
or
lcall
int3
mov
fldenv
lret
hlt
push
xchg
enter
inc
xlat
adc
adc
into
mov
lcall
sbb
roll
int3
cs
or
in
sbb
pushf
call
mov
decb
into
sahf
jb
into
lods
sub
popa
sub
movsl
sarl
xor
outsl
push
mov
fadds
pop
test
xchg
pop
cmc
mov
adc
adc
ja
cmp
dec
popa
fidivrs
imul
cmp
lds
and
fs
adc
je
dec
dec
mov
nop
aaa
or
mov
jbe
es
cmc
imul
in
and
icebp
push
adc
cmp
cltd
mov
popf
mov
std
mov
ja
out
nop
sub
scas
cwtl
jb
cmp
mov
or
mov
add
sbb
pop
and
push
popf
xor
xchg
cltd
imul
rcrb
xchg
inc
and
into
es
add
adc
ljmp
mov
in
or
inc
cld
hlt
sti
adc
mov
mov
hlt
test
repnz
inc
dec
aas
out
ret
int
jmp
add
sahf
into
add
cmc
fcoms
push
push
fsubl
je
cmp
in
push
sbb
mov
test
adc
jo
pop
jge
fsubl
sub
push
push
stos
ja
jg
push
loope
mov
cmp
xchg
mov
clc
xorb
jecxz
cmp
add
cmc
inc
dec
xchg
pushf
lahf
xor
scas
notl
dec
jbe
xchg
push
inc
jo
je
push
fucomi
nop
orl
push
loop
dec
push
or
xlat
movsl
mov
mov
in
sbb
sbb
and
fcomps
and
push
lret
js
out
in
dec
jle
cmc
sbb
test
mov
push
rcll
into
test
insl
fcompl
xchg
pop
mov
ds
push
cmp
out
in
cmp
push
addr16
popa
sbb
outsl
inc
frstor
popf
jmp
test
mov
stos
aad
movsb
insb
mov
mov
lock
shll
or
mov
ret
or
xor
lret
sub
push
adc
fisttps
xchg
fwait
aas
adc
jg
sha1rnds4
jne
adc
popa
in
sub
pop
sub
inc
daa
mov
lcall
repz
xchg
jne
cwtl
lcall
daa
cmp
mov
stos
lret
dec
inc
mov
outsb
jo
jns
xor
pop
cmp
imul
mov
ja
and
add
xchg
mov
inc
cmpsb
sub
push
cmp
and
jbe
test
shl
dec
pop
inc
aam
sbb
jae
or
add
setne
fs
insl
pop
js
inc
xor
xlat
jo
or
sti
out
hlt
sti
js
call
mov
sbb
inc
push
dec
sbb
jns
nop
out
ret
mov
mov
adc
ljmp
and
xchg
in
xchg
lcall
add
inc
sbb
inc
sbb
loopne
push
cmp
inc
lods
outsl
and
rol
xchg
stos
push
imul
add
push
lret
push
data16
fucomi
orl
cmp
sbb
jne
jnp
mov
mov
sub
gs
int3
push
sub
daa
iret
inc
and
je
aaa
pop
jle
popf
loope
mov
aas
insb
sahf
push
pop
inc
add
test
jae
mov
and
lcall
cmp
cmp
addr16
or
adc
daa
cmp
jno
cld
jmp
add
lcall
mov
mov
lcall
jg
ret
mov
mov
push
icebp
outsb
adcl
movhlps
sti
lds
add
push
lahf
outsl
xchg
testl
sub
jae
test
pop
inc
mov
and
sub
pop
add
mov
push
mov
jecxz
fs
jnp
pop
cli
rcrb
pop
into
roll
add
push
loope
in
fwait
push
fwait
xor
adc
sbb
addr16
hlt
push
das
add
ja
mov
push
or
je
int3
push
std
xchg
cmp
mov
lahf
mov
xor
dec
out
loope
jl
sbb
ds
test
stc
mov
push
sbb
jno
int
pop
mov
mov
in
xchg
int
adc
in
scas
or
out
lret
sub
xchg
bound
xor
aam
add
das
shll
fs
push
sbb
jno
sub
out
repnz
sahf
stc
dec
stc
lahf
mov
into
or
call
mul
sbb
stc
and
push
test
inc
mov
dec
je
incb
call
mov
sahf
fistps
mov
pop
aas
inc
inc
sarl
pusha
mov
sub
into
sub
push
add
fidivrs
icebp
dec
fistps
fcmovne
repz
out
mov
pop
hlt
add
sbb
adc
xor
jae
ret
ficompl
sbb
dec
xor
into
mov
cmp
nop
push
jb
adc
dec
dec
and
and
aad
mov
stos
sbb
cmpsb
lods
lret
call
add
mov
push
sbb
fsqrt
les
test
out
ljmp
test
popf
and
test
and
mov
out
push
fists
in
lahf
pusha
jg
out
cmc
arpl
xchg
in
pop
loopne
xchg
push
mov
jno
popa
jb
pop
adc
xor
inc
rorb
adc
sub
out
test
cmp
dec
mov
test
stos
add
and
dec
jae
pop
dec
and
cmp
inc
and
lahf
rcrb
ficompl
cmp
fsubrl
incb
pushf
push
dec
andb
roll
lret
mov
inc
outsl
sbb
xorl
mov
sub
je
fs
into
jecxz
dec
xor
fsubr
loope
mov
fs
mov
adc
sbb
sbb
xchg
leave
iret
out
dec
mov
pop
mov
filds
or
movsl
mov
inc
fstl
ja
push
jnp
dec
push
jns
fcomp
decb
test
adc
push
xlat
push
pusha
pop
pop
fwait
test
mov
daa
out
mov
enter
or
ds
and
push
jle
add
jmp
arpl
and
adc
pusha
cwtl
pop
mov
jp
mov
and
inc
sbb
aam
add
inc
xlat
sbb
aaa
push
das
jns
push
sub
popa
cmp
leave
add
adc
push
stc
and
adc
inc
cwtl
xchg
lcall
mov
pop
xchg
fstl
das
fucomip
xor
xchg
lret
lahf
out
xchg
fsubs
mov
or
cld
cmpsl
sub
mov
int3
jne
mov
mov
fcomps
sub
lods
and
push
mov
test
inc
sub
and
dec
es
push
pop
cmpsb
xchg
cmp
cmp
lcall
cmp
andl
mov
mov
cli
es
mov
mov
pusha
loope
es
push
sbb
sarb
outsb
sbb
stos
push
jg
enter
sbb
push
xchg
jmp
pop
jecxz
outsb
and
sub
js
and
pusha
mov
cmp
aas
es
mov
pop
fidivs
imul
pop
sub
pop
mov
in
mov
mov
xchg
mov
insb
adc
in
add
cmp
stc
and
dec
mov
mov
cs
add
cwtl
mov
int3
sbb
imul
cmp
test
imul
mov
daa
jne
adcb
sbb
adc
inc
and
insl
movsb
popa
xor
pop
sub
mov
lock
outsb
std
push
push
mov
stos
adc
cmp
inc
mov
pusha
mov
push
xlat
sub
lret
pusha
idiv
mov
xchg
leave
clc
or
out
sub
lods
cmp
mov
imul
pop
in
das
lea
cwtl
push
loop
pop
jle
xor
push
not
push
lea
test
mov
sbb
xor
fiadds
xor
in
cltd
shll
out
mov
push
ja
lahf
pop
ss
repz
mov
dec
sbb
adc
mov
test
shrl
jns
scas
mov
push
movsb
xchg
inc
test
ja
or
sub
and
dec
negl
mov
inc
and
outsb
push
out
sub
mov
test
xor
or
mov
jbe
iret
xor
mov
repz
fcoms
push
and
sbb
push
sahf
lahf
and
dec
les
dec
or
and
rcrl
mov
mov
repnz
push
push
test
int3
loopne
mov
dec
mov
xchg
jge
push
jb
aaa
mov
cmp
pop
ja
mov
inc
aaa
ret
int3
cmc
pop
aam
dec
mov
mov
nop
push
jl
std
ss
movsb
sbbb
pop
out
sbb
cli
lret
scas
test
dec
cli
pop
mov
out
dec
rol
aam
std
adc
jg
in
sub
in
mov
dec
addr16
inc
test
mov
sub
mov
and
cmp
sub
adc
mov
lcall
adcl
mov
ja
ds
in
test
int3
lock
push
ja
push
arpl
loop
sbb
movsl
adc
in
gs
movsb
lea
lcall
cmpsb
mov
add
test
popa
add
pushf
lcall
fdivs
xchg
sbb
insb
push
ds
push
addr16
pop
cmc
pop
push
mov
fwait
movswl
xchg
addb
rcrb
push
pop
cmp
shlb
loope
cmp
hlt
dec
aam
sub
loopne,pt
in
xchg
test
sti
mov
in
adc
popf
cmp
pop
or
jnp
loopne
push
cmpsb
fs
jb
lds
xor
pop
mov
jbe
mov
or
mov
mov
jae
sub
shrb
push
add
pop
sub
push
ret
pop
pop
es
xor
insb
out
cmp
cmp
pop
xor
dec
mov
pop
push
sbbl
push
inc
lods
jne
jecxz
imul
add
or
in
push
pop
sbb
pop
push
push
es
cwtl
in
or
es
adc
push
in
ljmp
pushf
and
in
mov
cs
jne
push
les
dec
pop
xchg
int3
mov
push
loope
xor
jle
out
sbb
add
or
or
jge
insb
in
pusha
pusha
es
jge
clc
pop
mov
mov
int
mov
xor
icebp
int3
push
lock
test
mov
jno
in
int
sbb
mov
sub
mov
jmp
add
push
sbb
iret
imulb
mov
lret
aad
subl
in
test
pop
inc
idivl
dec
mov
pop
ret
pop
pushf
cmpsl
cs
nop
fld
sbb
outsb
repz
ss
add
pop
jb
test
sbb
pop
stos
dec
fs
cmp
pop
test
adc
add
imulb
stos
lods
pmaxsw
out
mov
pop
push
cmp
rclb
xor
cmp
push
mov
cli
mov
pop
xchg
cmp
adc
lret
push
adc
cmc
jp
subl
sub
test
or
sub
inc
loop
cmpsb
xchg
in
pop
cs
push
push
pop
xor
sbb
mov
mov
repz
testl
insb
xor
or
pop
or
mov
stos
out
pop
lahf
cli
mov
xor
mov
stc
push
mov
outsl
adc
orb
mov
out
jo
cmp
and
popa
mov
mov
pop
adc
cmp
test
sahf
fst
scas
repnz
ja
fucomp
mov
jbe
push
iret
dec
push
scas
fistl
fadd
fidivs
in
das
mov
sbb
mov
cmp
xor
ret
scas
and
neg
dec
xchg
aaa
cmp
popf
pop
dec
jb
pop
inc
push
lahf
dec
cs
movsb
ret
ja
add
add
sub
lea
xchg
dec
xor
call
scas
adc
test
cmpb
in
popa
leave
mov
adc
mov
push
xchg
stos
mov
lea
dec
cmp
pop
notl
inc
lock
mov
sbb
loopne
mov
test
jo
jae
jmp
jg
lods
jnp
and
sbb
add
test
aas
je
or
test
sarb
inc
insl
push
repz
mov
fiadds
into
push
push
pop
inc
pop
add
ficomps
add
fistpll
cli
or
cmp
insb
cmp
in
sbb
dec
mov
dec
dec
push
pop
xor
push
adc
gs
std
mov
insb
fwait
sbb
stos
fimuls
fwait
add
mov
xor
sbb
clc
mov
cltd
and
mul
fs
shrb
fwait
dec
test
xchg
and
call
push
stos
jb
pop
push
repnz
adc
sarl
aad
inc
loope
adc
cwtl
into
mov
sub
dec
sbb
mov
jne
lret
xchg
jns
sbb
inc
mov
imul
es
loope
fidivl
lcall
je
xor
cmpsb
test
inc
add
xlat
and
ja
push
in
mov
lea
mov
xor
inc
roll
int3
dec
cwtl
in
mov
mov
adc
filds
xor
imull
mov
idivl
push
dec
and
inc
jmp
loope
lret
xchg
cmp
aam
sbb
add
jecxz
mov
cmp
cs
gs
mov
mov
mov
mov
pushf
cmc
sub
cmpsb
jnp
cmpsb
enter
movsb
jno
lods
adc
shrl
push
mov
jecxz
loope
mov
sub
or
fs
icebp
imul
les
stos
icebp
or
decl
xor
stos
or
sbb
push
push
rcrl
fbstp
orb
xor
xchg
dec
in
xchg
sahf
pop
das
pusha
push
pop
jb
scas
adc
outsb
mov
or
lahf
mov
mov
push
mov
pop
test
in
cmpsb
movsl
aam
pop
inc
xor
lahf
mov
mov
rorl
mov
xchg
popf
sub
faddl
enter
arpl
cltd
inc
sub
sub
sahf
bnd
in
cmpsb
insb
aas
mov
xchg
je
mov
ret
fstl
or
push
inc
or
out
in
fucomi
jbe
cmpsb
cmp
jle
fucom
loopne
rol
sahf
xor
mov
jno
cmc
cmp
jp
out
and
mov
fsubrs
cmc
cmp
cltd
push
mov
add
sub
sbb
pop
lods
sbbb
jnp
xorl
xor
mov
in
imul
xlat
inc
enter
fiadds
cmp
sub
cmp
jg
cmp
xchg
lods
fnstsw
inc
aad
mov
movb
lahf
repz
dec
jl
clc
inc
pop
sbb
je
in
ja
out
rcl
sbb
testl
shlb
pop
push
jle
inc
mov
mov
loopne
stc
or
push
pushf
fcmovnbe
enter
enter
and
rcr
cmpsb
dec
cli
adcb
mov
int
cmp
push
xchg
pextrw
pop
shr
aas
adc
xchg
rcll
cmpl
jbe
adcl
push
subl
sbb
inc
call
js
cltd
and
jne
shrb
mov
out
inc
and
xchg
mov
xchg
sbb
xlat
mov
stos
cmp
xchg
inc
pushf
sbb
inc
xor
add
sahf
ucomiss
test
mov
pop
hlt
push
push
jle
push
inc
sbb
mov
xlat
xor
inc
dec
pop
jbe
mov
mov
mov
pop
and
mov
outsb
inc
inc
jmp
outsb
into
mov
xlat
icebp
scas
or
push
imul
movsb
cmc
xor
lcall
inc
je
or
mov
inc
jecxz
aam
cwtl
and
ss
push
addr16
call
repnz
inc
shll
mov
cli
inc
sbb
pushl
push
stos
and
fildl
test
jecxz
pop
movsl
or
push
test
mov
out
mov
lcall
or
fnsave
dec
arpl
into
dec
stos
push
mov
daa
insl
stos
out
jg
and
lahf
int
push
push
movsb
and
sbb
mov
jns
mov
add
xchg
inc
test
cmp
rorl
fldcw
cwtl
stc
lock
sub
mov
pop
das
leave
dec
jne
mov
add
inc
in
test
fs
pop
ret
or
sbb
add
paddq
push
aam
mov
test
inc
mov
lds
xchg
das
cmp
inc
pop
or
les
inc
aad
adc
faddl
mov
popa
popa
jne
std
jne
sbb
jno
movsb
jl
gs
adc
mov
mov
or
rolb
jge
add
push
push
and
call
fs
dec
scas
xor
mov
jno
or
or
arpl
jns
dec
pop
ss
xchg
mov
fnstsw
jbe
popf
or
jo
popa
cs
dec
lret
jnp
popf
sbb
mov
adc
ss
out
lds
mov
pop
push
xchg
out
imul
push
xchg
pop
mov
add
xchg
and
sbb
fstpt
mov
shrl
dec
mov
fstpl
cmc
xchg
cmp
lahf
out
cwtl
push
dec
outsb
lret
xor
sbb
mov
inc
popa
mov
mov
test
cmp
push
jae
sbb
xor
jno
adc
sti
mov
leave
aas
movsb
mov
bound
pop
orl
cwtl
mul
xor
xor
mov
ss
outsb
push
cld
cmpb
jbe
push
stos
inc
jo
inc
aaa
jnp
daa
sbb
mov
push
xchg
fcmovb
sbbl
mov
xor
js
dec
mov
xor
xchg
clc
push
mov
jge
daa
and
mov
lods
mul
test
pop
loop
jb
fstl
cmp
imul
ds
pop
aad
sub
sbb
mov
xchg
inc
scas
adc
popf
aaa
aad
jae
fiadds
fsubrs
lcall
sub
repnz
dec
mov
and
fiaddl
sub
and
and
xchg
cmp
sub
test
push
std
pop
lods
hlt
pusha
add
jno
and
repz
jecxz
mov
sub
adcb
cli
test
sub
pop
sahf
repz
cltd
rolb
lods
dec
push
mov
jle
testl
cmp
mov
ret
fsubp
cmp
jne
imul
insl
test
jns
flds
outsb
pop
jecxz
or
loope
jno
and
aaa
fbstp
out
cwtl
jl
xchg
je
jge
fwait
push
dec
mov
inc
xchg
dec
pop
cmp
pop
lcall
repz
ss
push
and
subb
jae
pop
and
pop
cmpsl
mov
das
jno
cli
outsb
jnp
mov
outsb
mov
cmp
cltd
movsl
adc
fcoml
es
jne
jne
iret
inc
jge
xor
push
pushf
outsb
inc
jb
aas
add
iret
fidivrs
imul
mov
push
mov
fdivl
data16
fistl
inc
sbb
sub
jbe
pop
clc
xlat
or
loopne
ljmp
dec
insl
icebp
mov
sbb
insl
icebp
jbe
cmp
jo
aaa
pop
mov
or
out
inc
std
sarb
push
enter
outsb
xchg
insb
push
icebp
test
loope
sub
sub
push
fcoms
cmp
pop
and
jae
cmpb
jl
xor
out
adc
fldt
jne
push
cmp
cmp
push
push
adcl
lret
fucom
out
inc
sbb
push
daa
test
rcl
mov
and
imul
sbb
fsubrs
or
ljmp
sahf
jge
dec
aas
ret
xchg
mov
mov
xor
lret
ljmp
mov
negl
pushf
push
sbb
jno
push
test
jle
pushf
mov
dec
cs
insl
cld
loopne
popf
ds
lea
fs
orb
sbbb
iret
dec
push
ret
and
sahf
jns
push
test
ret
jo
movsl
fdiv
and
icebp
sbb
xchg
movsl
add
test
inc
loop
or
jbe
jo
outsb
push
sbb
lahf
or
jecxz
pop
out
loop
push
ficomps
mov
call
inc
call
pop
dec
aas
lret
daa
sub
xchg
das
outsb
mov
xor
enter
sbb
sbb
lods
xchg
dec
ljmp
add
popa
in
sbb
fldcw
rcll
out
lret
mov
cmp
pop
jae,pn
imul
jmp
nop
mov
inc
aas
inc
dec
sub
fdivrs
leave
ja
lock
pop
push
gs
fwait
add
pop
mov
xchg
mov
js
idivl
push
push
xchg
cmp
dec
lahf
push
push
cwtl
mov
addl
addr16
dec
mov
pop
cmp
push
repz
xchg
dec
fabs
ret
mov
cmp
add
int3
or
mov
jb
icebp
mov
dec
mov
cmpsl
xchg
cwtl
sbb
mov
push
jb
test
fsubr
pop
or
out
dec
aaa
mov
pop
inc
movsl
fmull
insl
sub
push
xlat
pop
ret
jmp
shl
mov
cmpsl
cmp
lods
loopne
jl
in
unpckhps
out
fsubp
clc
sti
rolb
jmp
mov
mov
pop
fmull
mov
loope
daa
xchg
std
xor
adcl
cmp
dec
push
aam
sub
cmpsb
test
add
mov
cmp
arpl
push
dec
dec
ret
and
ret
xorb
mov
jge
rcrl
mov
cmp
push
sub
aaa
ficomps
jb
inc
hlt
xchg
mov
jb
dec
pop
dec
int3
out
jp
pop
mov
xchg
adc
mov
adc
mov
outsl
daa
aaa
cmp
cmpsb
pop
das
adcb
inc
shll
sbb
or
mov
orl
mov
cli
mov
repz
outsl
pusha
repz
push
aad
jle
icebp
lock
fimuls
sub
es
pop
out
mov
pop
adc
les
add
jae
sar
push
pop
sub
pcmpeqw
xchg
mov
pop
mov
ja
push
jno
or
add
ret
jmp
movsl
stos
mov
xor
clc
or
xchg
cli
fimull
adc
jae
or
xor
or
jne
int3
rolb
dec
xchg
popa
push
jnp
xor
adc
push
dec
xchg
xchg
sahf
cmp
pop
and
and
rep
pop
inc
daa
pop
add
adc
push
add
sub
push
aad
xchg
push
aas
xchg
jne
mov
sbb
cld
jns
mov
push
iret
mov
scas
fmull
jo
cwtl
loopne
dec
insl
cmp
add
mov
add
xchg
test
lret
adcb
outsl
mov
addr16
ljmp
dec
insl
sbb
mov
daa
shll
pushf
stc
aas
push
sbb
pminsw
mov
insb
mov
loop
dec
not
loopne
xchg
inc
cwtl
cmp
loope
mov
mov
scas
lods
addl
or
jecxz
adc
in
mov
mov
dec
fstps
jns
xlat
pushf
or
pop
or
xor
sbb
enter
or
pop
repz
ja
incb
push
cwtl
xor
adcb
sti
adc
loop
ret
ss
add
jo
or
adcb
mov
mov
push
clc
ljmp
sbb
pop
sub
push
shll
add
xchg
pop
pop
mov
sti
jecxz
inc
pop
sub
je
xchg
dec
ret
xchg
lock
insl
xchg
in
mov
jae
and
cwtl
or
mov
cmp
ret
in
insl
in
jbe
mov
rclb
mov
addr16
mov
lcall
icebp
aaa
or
sbb
inc
inc
pop
xchg
sti
mov
mov
bnd
sbbb
inc
xchg
adc
sbb
ljmp
mov
mov
xchg
out
inc
push
push
jg
jne
jnp
rep
inc
ds
shr
inc
es
sbb
sar
xchg
imul
or
loop
ficoml
call
xchg
orl
jne
xchg
js
adc
mov
aas
push
movsb
dec
shlb
lret
imul
in
fsubs
xchg
xor
in
test
cmpsb
and
movsb
inc
sarl
loopne
outsl
inc
mov
in
sbb
pop
pop
ljmp
inc
pop
sub
test
bound
and
pusha
mov
mov
xchg
daa
lods
inc
push
aas
xchg
icebp
popa
ljmp
adc
stc
lret
les
or
inc
or
iret
insl
addr16
and
mov
cmp
pop
jne
xor
mov
adcb
out
je
scas
jae
pop
sti
inc
inc
lods
adc
sub
inc
rcll
sarb
and
fisttpl
mov
jp
lea
cmp
dec
insl
rorb
dec
mov
push
jo
or
cli
in
pop
popa
mov
push
xchg
repz
or
jno
mov
mov
jo
push
add
dec
pop
ss
mov
xchg
pop
and
mov
cmc
dec
mov
mov
testb
jae
inc
add
adc
jns
push
jmp
jnp
sub
pop
pop
es
jnp
inc
imul
jmp
add
cmp
push
push
loope
mov
call
mov
mov
sub
movsb
mov
jp
mov
imul
outsl
pusha
and
shll
push
call
or
scas
ja
cwtl
sti
push
mov
jp
inc
jnp
test
aaa
ret
std
imul
adc
nop
fs
push
mov
mov
jl
jns
push
das
xor
inc
fbstp
pop
mov
cmp
pop
loop
dec
push
sbb
mov
sbb
iret
sbb
popa
jp
mov
dec
sahf
loopne
mov
popa
jno
mov
imul
int3
mov
push
nopl
ja
lea
addb
fisubl
sbb
pop
es
xchg
xchg
out
adc
ljmp
jp
sbb
push
jmp
pop
pop
loopne
jo
dec
push
fldlg2
jg
add
jb
inc
inc
cmp
lahf
cli
pop
test
xchg
or
mov
stc
xlat
pop
xchg
fisttpll
mov
add
xchg
xchg
push
sbb
jns
inc
and
hlt
push
push
jle
rorb
mov
add
shlb
inc
adc
jb
mov
xchg
mov
or
popf
idivl
in
push
xchg
es
jecxz
xchg
xor
sti
mov
stos
push
es
sarl
xchg
mov
mov
xor
jae
mull
xor
and
and
movsb
add
in
shrb
mov
mov
sub
sbb
data16
xlat
je
fnsave
dec
outsl
cld
or
sahf
aam
mov
jl
push
add
cmc
mov
rcll
add
inc
scas
xor
sbb
lods
dec
in
fdivp
xchg
mov
push
dec
mov
mov
fwait
adc
test
mov
push
mov
jg
or
and
push
or
out
loop
sbb
cmp
data16
pop
mov
and
shlb
push
call
test
testl
or
leave
lahf
ficoms
xor
sbb
imul
loopne
imull
in
cltd
adc
mov
pop
lods
jnp
popf
inc
imul
cwtl
add
dec
rclb
xchg
js
test
push
adc
xchg
or
push
inc
lods
adc
mov
dec
fidivrl
daa
mov
dec
sahf
push
imul
dec
repnz
push
in
cmpsb
scas
or
adc
add
mov
stos
mov
mov
jae
xchg
mov
leave
mov
jecxz
jnp
fwait
out
inc
jbe
int3
xor
stc
jge
adc
push
mov
mov
pop
mov
cmc
fldl
andl
mov
add
dec
fisubrs
jae
mov
push
xlat
xor
sub
lea
adc
ja
push
jnp
mov
clc
popa
lods
aad
pop
pop
xor
dec
mov
inc
cwtl
xchg
jns
hlt
cmpsb
xor
sarl
add
adc
inc
fcoms
fiadds
sub
add
sbb
push
mov
mov
scas
outsl
pop
inc
add
rclb
stos
ficomps
orb
xchg
dec
xchg
jge
lods
cmp
sbb
dec
pop
dec
in
cld
dec
mov
les
movsl
and
loop
repz
movsl
mov
enter
andl
sub
push
aam
int
fsts
shrl
xor
mov
push
in
aas
or
mov
jmp
inc
faddl
jo
in
adc
pop
add
pop
iret
xor
js
into
mov
ret
cltd
orb
jecxz
xlat
dec
popa
es
insl
into
orb
jmp
or
fidivrl
dec
sarb
shl
fistpll
es
icebp
jmp
rcll
pop
fdivrs
push
pusha
adcl
aam
out
add
pop
roll
bound
pushf
jmp
imulb
cmp
outsl
fistl
push
sub
xchg
cld
pop
fbstp
in
loopne
insb
cmp
push
and
movsb
mov
xchg
je
cmp
shl
inc
or
jecxz
out
std
lds
adc
mov
insl
cli
popf
or
sub
pop
test
xchg
lahf
aam
ret
sbbb
add
lahf
addr16
les
mov
sahf
push
mov
dec
stc
in
add
mov
das
test
xchg
pushf
nop
test
inc
mov
loop
je
mov
jne
scas
dec
dec
out
mov
lret
sub
mov
cs
xchg
sbb
into
push
cmp
fwait
jg
xchg
pop
into
dec
and
push
fldl
fwait
rclb
add
mov
movsb
test
xchg
popa
repz
clc
repnz
daa
mov
xchg
mov
xchg
in
stc
frstor
sti
int
gs
leave
mov
sbb
out
xchg
push
fildl
rcll
and
mov
mov
mov
jmp
push
cli
sbb
adc
xor
fnstcw
lea
xor
movsbl
dec
into
inc
into
push
addl
push
ficoms
push
in
fbld
fwait
or
ret
mov
sub
std
rcll
fcompl
adc
mov
adc
das
outsb
jne
xchg
repnz
shr
add
pop
incb
pop
loope
scas
mov
clc
xor
sti
call
mov
xchg
sub
aaa
xorl
clc
ja
jmp
les
and
jl
out
cmp
adc
xor
dec
imul
adc
gs
pushf
lds
cmp
add
outsl
repnz
dec
lret
hlt
jns,pt
xor
mov
int3
stos
mov
test
inc
mov
or
or
push
das
lods
push
xchg
sbb
inc
lods
stos
popa
insl
mov
inc
push
shl
testl
push
mov
sub
cmc
scas
jge
sub
enter
mov
popf
mov
repz
popa
jns
loope
mov
dec
icebp
lods
jb
test
into
dec
mov
sub
int
or
pop
cmovge
cmc
cmpsb
aaa
add
and
mov
xchg
push
arpl
sub
jae
cmp
into
cmp
mov
pushf
jmp
dec
add
add
and
sahf
fs
leave
out
lock
filds
jle
pop
mov
pop
dec
sub
pop
pop
enter
adc
xchg
mov
pop
jl
push
mov
sbb
in
lea
pop
popa
loop
push
bound
xchg
jl
shlb
xlat
mov
push
add
aaa
mov
adc
or
cli
pop
or
pop
sub
stos
mov
int
push
lods
test
inc
sbb
jecxz
jmp
mov
adc
lods
jecxz
cmp
xchg
imul
and
and
xchg
insl
inc
cli
stc
lea
mov
test
test
xchg
mov
repz
dec
jmp
clc
ss
jecxz
adc
mov
add
mov
mov
sbb
and
out
std
jnp
cmpsl
jo
jnp
add
dec
xchg
mov
jo
xor
pop
dec
int
dec
xor
jmp
jo
andl
stc
fld
mov
push
add
sar
in
movsl
xchg
int3
subb
inc
inc
lcall
mov
je
jbe
cmpsb
jns
clc
push
sahf
mov
jnp
mov
jecxz
jmp
icebp
mov
and
mov
jl
push
arpl
rol
mov
jg
andl
or
sbb
cltd
imul
mov
push
push
xor
popa
aam
cmp
sbbb
push
pop
cmpsl
jp
push
int3
scas
and
or
dec
hlt
loop
adc
inc
mov
imul
push
test
xor
pop
icebp
cmpsb
js
or
cmp
jle
movsl
lods
add
mov
andb
daa
loope
mov
loopne
insl
scas
cli
xchg
cwtl
cmp
and
aad
js
adc
lds
dec
imul
es
sbb
js
dec
mov
adc
inc
xorb
adc
dec
les
ja
out
mov
bound
jae
stc
mov
xor
in
inc
dec
mov
rcll
insb
repz
in
call
out
stos
lcall
repnz
or
test
lods
sbb
popf
jl
dec
std
or
jl
scas
jno
mov
cmp
jmp
mov
mov
in
pop
adc
lds
test
bound
pop
ljmp
jmp
xor
test
mov
sub
ficoml
mov
iret
or
jl
mov
jl
cmpsl
shrl
dec
pop
sub
jmp
ret
stc
cmp
sub
push
or
jle
adc
call
pop
inc
xor
jecxz
jmp
or
xchg
dec
dec
cmpsl
adc
imul
out
cmpsb
xchg
test
add
js
xchg
ror
sub
push
scas
mov
xor
lcall
push
mov
push
xor
es
mov
add
dec
and
aam
add
stc
mov
in
jo
inc
repz
add
jg
repnz
cmpsb
mov
lock
fstpt
mov
xchg
or
push
xchg
aaa
cmc
xor
add
cmc
dec
xchg
pop
and
xchg
mov
in
in
pushf
sbb
repnz
movsb
movsl
jmp
pop
jbe
xchg
xor
loopne
jp
aas
adcl
mov
pop
aad
test
mov
pop
ror
adc
fwait
out
mov
jnp
imul
mov
inc
push
clc
mov
loopne
xor
mov
pop
inc
sbb
out
push
lock
insb
gs
out
jbe
aas
scas
xchg
test
in
jp
scas
and
lahf
fdivp
push
sti
out
mov
mov
push
out
cmpsb
loopne
add
outsb
pop
push
and
mov
mov
mov
cmpsb
mov
addr16
outsl
dec
cld
loop
outsb
sbb
setle
sub
aaa
jg
outsl
cli
jmp
mov
jb
mov
and
lcall
outsb
mov
dec
mov
and
inc
cmp
js
lea
jle
loop
outsb
jmp
es
inc
fisubrl
push
in
jecxz
xor
fcmovnb
dec
daa
adc
push
or
test
or
mov
cwtl
and
into
sub
push
or
roll
les
sub
or
xchg
inc
jbe
mov
jmp
or
cmp
ds
xor
addb
cwtl
js
adc
nop
push
inc
js
gs
cmp
rcl
pop
pop
xchg
rolb
scas
aad
ja
xorb
dec
jg
push
cmpsb
jp
fstp
lahf
into
dec
test
sub
dec
mov
imul
xchg
test
ljmp
cs
cld
add
inc
icebp
xchg
dec
pop
imul
sbb
add
mov
cmpb
stc
mov
ret
aad
repnz
cmp
pop
fwait
gs
es
nop
adc
mov
je
ss
add
mov
jae
inc
insb
in
mov
add
mov
cmp
popf
dec
addr16
and
repnz
rcrb
rclb
test
adcl
push
push
ljmp
lret
cmp
dec
std
and
add
xlat
sub
scas
mov
test
add
mov
mov
dec
or
or
mov
add
scas
mov
push
sub
hlt
pop
or
out
jnp
nop
pop
out
xor
shl
cmp
jbe
outsb
or
fldl
mov
das
es
bound
mov
in
or
ret
sub
pop
ss
lcall
dec
xor
jg
notb
mov
in
dec
lret
inc
cli
decb
xor
and
or
xor
mov
and
lods
test
loop
add
dec
int
setl
push
cmp
add
mov
push
movsl
popf
dec
cmp
push
imul
fsts
xchg
push
aas
adc
pushaw
xchg
cmpsb
cmc
and
adc
adc
into
ja
js
sbb
imul
adc
mov
xchg
popl
mov
jbe
sub
ljmp
testl
loopne
sbb
cmpsb
xor
pop
xchg
out
popf
daa
add
cmp
sub
pop
fldcw
lea
ret
fwait
adc
outsb
dec
mov
inc
inc
add
jne
stos
sub
jecxz
mov
dec
and
pushf
jne
outsb
aad
aas
push
mov
mov
xlat
inc
dec
sbb
mov
movsb
xor
pushf
arpl
imul
mov
icebp
pop
xor
pop
pop
in
pop
icebp
push
popf
adcb
cwtl
test
fcomp
add
cmp
jg
sub
push
sti
xor
out
push
mov
sbb
push
sub
sbb
adc
repz
inc
shrb
dec
shlb
test
in
mov
icebp
in
jno
int
test
xor
inc
out
fldln2
xchg
xor
xchg
or
ljmp
inc
mov
dec
inc
iret
xlat
das
add
repz
ret
xchg
divb
orb
pop
adc
push
mov
out
test
lea
lods
xchg
and
mov
loopne
pop
xor
pop
mov
jnp
mov
mov
dec
loopne
pop
xchg
int
icebp
ds
xor
or
or
dec
add
addr16
inc
pop
xchg
shll
or
inc
inc
imul
pop
lret
mov
push
mov
add
mov
scas
cmp
fdivrl
sbb
dec
clc
stc
mov
imul
xor
push
xchg
popf
mov
lds
sbb
adc
sub
fmul
in
es
lds
jmp
shlb
push
and
mov
sbb
outsb
xlat
loop
addr16
ss
mov
jmp
cmp
mov
fstpl
loop
mov
lea
lahf
add
in
sub
fisttpll
addl
das
add
jecxz
stos
in
dec
adc
adc
inc
imul
jb
sbb
loopne
adc
sub
cmpsl
xchg
hlt
mov
fimuls
repnz
jo
ficoms
dec
lret
stos
sahf
addr16
int3
mov
mov
adc
test
sub
inc
cmp
fwait
xor
xchg
add
mov
and
cmp
imul
test
ret
jns
loopne
into
sub
jbe
fdivrl
out
outsb
xor
jp
push
mov
repnz
aas
test
in
push
scas
mov
loopne
imul
loope
test
mov
and
push
add
lock
ficomps
mov
stos
adc
test
stc
push
fistpl
aas
push
and
and
and
fs
shl
adc
push
roll
mov
fildl
fildll
jle
jnp
sbb
mov
rorb
sbb
sbb
bound
sub
cld
jb
push
cmp
sbb
fisttps
adc
stc
repnz
fildll
into
mov
je
loope
outsb
dec
dec
sahf
inc
sarb
cmp
imul
jnp
pop
or
adc
inc
cmp
fwait
aam
fldl
xchg
cmp
mov
cwtl
mov
lcall
dec
cmp
cs
test
xchg
ja
xor
xchg
add
adc
pop
jl
fwait
sub
ds
arpl
xor
imul
inc
jl
cmp
mov
or
sub
sbb
mov
mov
sarl
jnp
pop
mov
xchg
insb
xlat
xchg
fmul
xor
dec
fucomip
inc
pushf
add
mov
sbb
fmuls
in
outsl
sub
dec
lods
push
jl
xor
xchg
xchg
xchg
mov
rclb
xchg
push
flds
int3
jb
push
push
and
inc
push
cwtl
inc
xor
mov
dec
outsb
inc
scas
imul
push
iret
test
jp
cmc
xor
repnz
xor
or
lahf
jecxz
imul
add
cwtl
test
mov
js
sub
addr16
jo
cmc
push
dec
cmpsl
inc
mov
stos
add
xorl
ds
push
pop
fistps
pop
cmp
pop
xlat
loopne
lret
je
dec
cwtl
adcb
pop
shlb
and
cli
lahf
dec
jns
aaa
mov
lea
stos
adc
cmp
pop
mov
lret
aas
stos
xchg
popa
sub
out
sub
in
sub
mov
mov
loope
imul
orb
addr16
lahf
fisttps
ja
fs
mov
inc
pop
js
pop
jp
orb
lods
mov
hlt
sub
pop
mov
xor
aaa
cs
sbb
clc
outsl
je
movsb
std
std
into
xlat
xor
push
int3
je
arpl
repnz
int3
mov
enter
ja
xchg
and
mov
pop
dec
inc
addb
push
xchg
cld
gs
dec
iret
in
lahf
jmp
mov
popf
mov
inc
jnp
leave
cmp
repnz
popf
add
std
inc
jp
lods
iret
cld
stc
jecxz
fisubrl
ret
iret
jge
leave
mov
mov
aam
mulb
cmpl
xchg
ljmp
dec
icebp
jb
in
repnz
dec
mov
outsb
inc
mov
bound
mov
xlat
pop
adc
movl
xorl
xor
mov
mov
and
dec
cmp
mov
or
fsubs
pop
aad
adc
push
sbb
in
xchg
mov
call
enter
sbb
mov
addr16
daa
mov
enter
rolb
fs
sub
roll
daa
rorl
pop
test
cld
mov
sti
xor
stos
loopne
add
cmp
sbb
xchg
add
add
or
add
pop
subb
add
aas
mov
jmp
sub
push
xor
cld
int3
icebp
fisubrl
push
or
add
pop
add
cmp
aaa
mov
adc
add
add
mov
out
add
xchg
dec
push
add
add
adc
add
add
pop
aaa
mov
pop
test
mov
add
push
adc
mov
movsl
pop
push
or
jmp
aaa
hlt
aam
cmp
lock
push
xchg
or
lret
add
add
dec
add
push
loope
add
push
jg
popa
xorl
add
imul
inc
xchg
lahf
call
cmp
add
pop
leave
sub
add
add
pop
sahf
outsl
notb
js
mov
add
insl
add
dec
push
das
add
inc
jb
inc
cltd
in
jae
incb
add
jp
lds
add
xor
inc
popl
fcmove
jnp
pop
push
cmp
rclb
add
lret
jb
lcall
add
arpl
add
mov
cmp
pop
std
insb
repz
pop
push
in
negl
lret
test
dec
cld
mov
add
sbb
mov
pusha
jne
pop
mov
test
add
loope
ja
lret
jle
les
xlat
leave
in
xlat
jmp
inc
add
jg
dec
out
fsub
sbb
and
scas
push
icebp
add
js
cmp
dec
sbb
mov
add
pop
mov
test
xchg
jae
and
loopne
add
add
xchg
dec
stos
add
decl
testl
add
std
iret
sbbb
add
xchg
inc
mov
popf
out
pop
mov
rolb
add
add
add
adc
xchg
mov
add
fnstcw
add
add
jg
bnd
ljmp
shlb
out
nop
add
mov
jg
lods
add
roll
cmp
cs
out
fdivl
dec
scas
xchg
jns
jle
std
mov
mov
pop
adcb
ss
add
rcl
mov
add
xchg
pop
push
sbb
inc
mov
fstp
add
je
pop
mov
jbe
cbtw
or
pop
push
daa
das
adc
adc
les
mov
jb
notb
icebp
add
pop
lea
aam
popa
ss
leave
jo
add
jnp
repz
jnp
adc
cmp
add
mov
sti
enter
lods
or
adc
jecxz
mov
fsubl
popf
mov
pop
mov
repz
bound
inc
push
aad
add
pop
iret
pop
or
add
xor
addl
add
mov
add
fisubrs
rcrl
sub
adc
into
lods
mov
dec
pushf
add
xor
pop
sbb
add
fldcw
clc
xchg
jnp
add
sub
add
arpl
in
inc
add
cli
clc
fmul
call
add
jno
add
add
add
leave
sbb
add
fsub
inc
js
inc
rorb
call
add
loopne
out
iret
xor
dec
insb
loopne
in
xchg
icebp
rorb
xlat
mov
fwait
pop
repnz
add
les
jne
or
add
fsubs
jbe
add
xchg
push
dec
jne
cmp
bound
add
add
popa
push
add
fnstenv
dec
mov
mov
dec
inc
filds
dec
mov
and
cmp
add
or
es
pop
dec
add
into
das
mov
adc
add
push
nop
cwtl
fsubl
popf
aas
aaa
push
test
add
add
orl
push
cmpb
in
jg
xchg
icebp
pusha
push
fldt
add
cmp
iret
add
xchg
or
pop
sbb
add
mov
lods
jecxz
ltr
add
cmp
dec
xchg
xlat
ffree
cli
dec
push
cmp
mov
pop
add
mov
mov
pop
outsl
cs
and
xchg
aad
lods
add
mov
stos
repz
add
xchg
ljmp
aas
imul
fwait
and
inc
dec
faddl
add
push
es
add
pop
xor
fldenv
add
mov
sbb
ds
cltd
add
dec
inc
dec
mov
add
jmp
push
add
jmp
ja
add
push
and
sbb
in
mov
xchg
in
loope
jle
imul
push
into
jno
xor
mov
mov
lcall
test
add
lods
int
gs
add
hlt
movsl
and
add
enter
test
dec
add
add
pop
popf
filds
add
rolb
jae
add
inc
sahf
ja
out
lods
outsl
add
shll
out
lret
add
jo
add
in
dec
in
sub
cmp
inc
push
jg
add
aas
hlt
jae
add
adc
add
add
cmc
xor
mov
add
loop
xchg
scas
cltd
out
cmp
push
add
call
and
repz
mov
gs
mov
add
cmp
data16
call
pop
add
mov
call
cwtl
mov
add
fwait
mov
mov
add
xchg
push
stos
sub
mov
mov
ss
in
sti
rcl
add
xchg
and
iret
cmc
rcrb
add
sub
xor
ja
inc
add
add
sbb
adc
ljmp
xchg
mov
rclb
sbb
and
jmp
add
test
add
in
dec
add
jae
movl
lret
cmp
addr16
add
cmc
repz
fnstenv
popf
jno
and
sahf
add
into
lcall
stos
mov
jge
mulb
repnz
jecxz
add
imul
ret
cmpl
add
jb
mov
mov
push
add
xchg
add
fsubs
jmp
ffreep
ficoml
lret
cmp
test
xor
in
jge
add
inc
into
bound
add
sbb
stos
add
or
jne
arpl
cmpsl
xor
sub
clc
inc
nop
int
jnp
iret
sbb
imul
mov
rolb
jg
mov
cmp
lcall
dec
addr16
pop
add
add
sub
iret
or
xchg
sub
add
cmpb
add
pop
xchg
mov
roll
inc
jbe
sbb
jb
and
add
or
fisubrl
incl
data16
xchg
mov
cmp
stos
fldl
stc
imul
pop
loopne
dec
testb
xchg
jl
add
les
clc
in
xor
push
pop
add
imul
inc
pop
add
add
cmpsb
dec
jecxz
add
aas
xchg
decb
add
add
xor
out
scas
and
roll
add
add
cmpb
push
out
add
add
add
push
add
aas
push
out
add
pmullw
int
pop
mov
popw
testl
fsubp
xor
dec
sbb
jo
lcall
add
lahf
clc
lods
inc
jmp
leave
loopne
xchg
lcall
stc
mov
test
or
add
loopne
loope
inc
add
ss
cld
add
xchg
add
inc
loopne
mov
xlat
adc
xchg
inc
addr16
mov
rclb
inc
dec
xchg
stos
outsl
push
dec
mov
test
aaa
adc
in
or
push
or
xor
pop
inc
sbb
add
arpl
jo
leave
add
stos
inc
inc
cmpsl
repnz
or
shlb
add
inc
xor
lcall
add
and
movsl
imul
shll
popa
das
xchg
es
fsts
mov
cld
add
push
adc
int
stos
call
out
test
add
popa
out
leave
mov
push
add
lods
imul
and
pop
fildl
add
fcoms
aam
push
pop
jno
int
js
add
sbb
add
jno
add
push
add
scas
push
mov
add
inc
scas
add
in
add
add
jecxz
repnz
int3
jl
outsl
xor
call
add
mov
mov
jno
jle
mov
push
lret
stos
jbe
dec
xor
add
add
dec
inc
call
pop
dec
xchg
xor
cmpsb
aas
ficoml
xchg
sub
popa
sbb
xchg
adc
movsb
insb
test
sub
jno
test
add
das
inc
ljmp
mov
lods
cmp
xor
xchg
pop
fdivrl
sub
cmp
jnp
jle
adc
gs
sub
xchg
pop
mov
pop
mov
add
add
mov
or
xchg
icebp
scas
mov
add
fs
sbb
add
leave
loopne
mov
fnstcw
es
xchg
pop
out
cwtl
std
push
dec
add
sbb
cmp
push
xchg
sub
cli
rep
add
notb
xor
nop
mov
scas
fbstp
rcrl
cmp
sbb
mov
mov
pop
lock
ret
sti
insl
nop
mov
dec
dec
cmp
xor
ret
push
add
enter
pop
pop
mov
mov
out
mov
cwtl
gs
lods
add
rcrl
cmp
fstl
es
aad
and
jne
faddp
cs
xchg
ret
add
and
pop
notb
cli
inc
and
insb
mov
jbe
adc
popa
push
add
das
add
adc
inc
loope
sbb
sbb
or
shll
aad
dec
nop
and
out
in
mov
sahf
nop
call
xor
add
fsubr
add
mov
rcl
add
cmp
mov
andl
jmp
divl
repz
dec
add
and
sbb
je
mov
stos
push
xor
push
mov
add
add
mov
int3
aad
fwait
dec
lds
scas
popa
fstpt
leave
popa
lea
ljmp
xor
cli
add
test
aas
jmp
push
mov
mov
sbb
orb
sbb
insb
stc
mov
lret
jo
dec
sub
fcmovbe
add
cmp
call
das
adc
sub
mov
lods
scas
filds
or
xor
sbb
es
jl
mov
call
movb
add
inc
mov
add
and
pop
push
xchg
and
aas
pop
ja
fwait
add
xor
out
ret
add
movsl
pop
mov
mov
mov
dec
flds
add
inc
cmp
out
push
roll
iret
adc
or
cmp
xor
das
loope
mov
xor
dec
cs
std
adc
sbb
movsb
sub
add
xchg
sub
sbb
push
fnstcw
jno
les
sbb
shll
pop
frstor
mov
jb
add
jmp
pushf
je
mov
pop
stc
fidivl
jns
inc
mov
leave
aaa
mov
sarl
mov
sub
cltd
sbb
and
fimuls
jl
or
adc
loope
jmp
dec
cmp
add
lret
mov
lahf
or
inc
pop
adc
dec
je
adc
add
pop
sbb
xchg
lret
add
adc
mov
out
cmp
add
jns
add
lea
je
mov
std
or
in
out
pop
cld
add
je
test
insb
test
icebp
repnz
add
orl
out
ret
pop
pushf
add
add
sbb
xchg
ljmp
add
out
aad
clc
add
xlat
cltd
in
shl
or
jle
cmpsl
shrb
lods
add
rcll
pushl
ljmp
and
nop
inc
add
add
push
add
out
dec
mov
aad
add
sahf
push
hlt
addr16
fiadds
add
mov
jne
es
inc
jmp
and
add
rolb
in
in
add
popf
jbe
stos
fdiv
sub
add
cli
adc
popa
cwtl
mov
sahf
xor
mov
cmp
xchg
shll
add
add
dec
stos
ret
add
pop
out
inc
inc
lret
xor
jo
outsl
cmp
xor
jae
add
jno
add
movsb
in
cs
xor
js
xchg
rolb
add
sub
mov
in
ret
adc
lods
testb
out
rcrl
bound
and
mov
add
sbb
fisttpll
leave
xchg
arpl
pop
fsub
jbe
fcoml
and
movsl
or
adc
mov
loop
ret
and
add
das
push
shrl
xchg
jge
pusha
add
add
jo
inc
sub
imul
sbb
mov
icebp
push
repz
pusha
addl
arpl
lret
sub
nop
sub
int3
xchg
lret
jno
cmp
push
pusha
adc
lods
fsubrp
push
mov
fcompl
arpl
sub
pushf
xlat
or
pop
cwtl
aad
cmpl
cmp
add
add
jb
test
call
rorl
add
pop
clc
movsl
sub
add
dec
in
addr16
in
ja
repnz
mov
sahf
push
add
cld
mov
add
cwtl
ljmp
sti
adc
test
xchg
pushf
orl
push
inc
add
mov
aad
in
pop
stos
add
jp
add
ffree
test
jl
adc
pop
cli
mov
mov
stc
xchg
enter
std
rolb
add
inc
inc
add
sbb
mov
stos
mul
xlat
jg
mov
push
push
and
push
dec
and
mov
mov
add
popa
mov
sub
scas
fstps
jl
fisubrl
xchg
repnz
mov
xchg
lods
sub
add
sbb
sbb
and
jp
sbb
out
add
pusha
test
mov
clc
imul
add
pop
add
addb
and
or
sahf
cs
inc
xchg
sub
sub
adc
out
and
lock
add
xchg
xchg
notl
imul
xchg
jmp
rclb
fs
add
inc
mov
add
bound
add
aaa
out
mov
enter
xchg
repz
pop
jns
cmp
add
pop
add
fisubl
ljmp
cli
mov
pop
dec
add
xchg
add
pop
pop
cwtl
mov
push
subl
mov
lea
aam
add
mov
jl
incb
mov
add
outsb
cmpsb
mov
jno
add
aam
popa
nop
push
adc
loopne
xor
cmc
icebp
mov
add
add
sub
cmp
pushf
jb
adc
add
outsl
lret
jae
loopne
add
daa
add
ret
roll
jmp
call
mov
pop
fmuls
adc
mov
pop
sarb
sbb
and
loope
cmpsl
pop
mov
mov
mov
xor
jl
jl
and
rolb
aas
jg
test
push
xchg
sbb
pop
aad
jle
mov
mov
add
aaa
mov
or
ljmp
cmp
mov
add
add
filds
dec
pop
adc
jnp
jne
add
and
or
orb
push
jg
dec
push
add
add
sbb
fcompl
movsb
loopne
push
add
loope
call
add
push
push
and
shr
jno
pop
shlb
push
add
cmp
mov
and
jmp
mov
add
lret
test
or
jnp
inc
mov
dec
pop
pusha
cmp
xchg
mov
sbb
push
add
jnp
add
fsubl
push
sbb
iret
pop
lods
inc
addl
mov
clc
mov
cmp
mov
pop
lret
cmp
push
cmpb
dec
sbb
stos
sti
pop
das
out
pop
sbb
mov
cmc
dec
add
add
push
xchg
jno,pn
pop
lods
fildll
jo
mov
add
add
jne
or
scas
adc
and
and
add
jae
sbb
mov
pop
dec
add
pusha
sbb
rcrl
fisubrl
inc
cmp
add
xchg
xor
add
pop
add
insl
filds
add
movsl
ss
cmp
xlat
push
mov
loopne
dec
add
loope
xor
add
rorl
sbb
rclb
pop
cmc
push
add
shlb
add
add
adc
cld
cmc
jb
add
xchg
fs
add
lahf
mov
add
add
sub
jnp
adc
push
push
add
nop
add
fsubp
add
faddl
lds
inc
add
adc
mov
add
add
add
or
add
dec
stos
xor
or
add
xor
push
mov
add
cmp
inc
inc
data16
ja
add
xchg
push
or
lahf
dec
inc
repnz
adc
out
mov
jmp
rorl
in
outsb
or
add
jle
mov
test
movsb
add
add
int3
lock
mov
mulb
add
cld
add
add
imul
leave
jecxz
fwait
add
sbb
mov
fwait
enter
add
push
js
js
add
filds
icebp
dec
daa
add
shrl
cmp
icebp
push
jl
ret
add
shll
add
lds
sub
push
imul
mov
cmp
add
mov
addr16
das
add
shlb
add
loop
int
pop
xchg
pop
mov
or
fisttpll
mov
sbb
ret
dec
add
in
push
and
mov
dec
pop
adc
adcl
arpl
call
into
or
rcll
pop
inc
add
rcr
mov
mov
push
incl
inc
inc
cmp
adc
or
mov
out
dec
sti
insb
movsl
add
mov
add
cmp
inc
testb
ss
movsl
sub
stos
push
add
push
add
out
jnp
add
mov
lcall
stos
mov
add
mov
sahf
aad
lret
sub
lods
insb
dec
iret
or
adc
test
cmc
loope
sub
mov
jnp
les
cwtl
in
push
jg
dec
add
sarl
jecxz
addr16
xor
hlt
lret
cli
cwtl
rcrb
add
add
adc
js
shll
adc
ss
aad
xchg
jnp
add
cmp
scas
ss
in
int
rcr
xchg
fucomp
hlt
les
mov
add
add
mov
jle
call
add
mov
out
addb
scas
outsl
rcrb
mov
sbb
lret
bound
mov
xchg
fcmovb
xor
jle
ret
das
loope
add
add
fiaddl
mov
adc
jno
jno
mov
add
pushf
cs
cvtpi2ps
cmp
mov
add
dec
and
movsl
add
data16
cmp
aas
jo
jecxz
or
sub
jo
cmp
jecxz
xor
sbb
scas
fs
outsl
cltd
flds
incb
xor
jl
jnp
xchg
out
mov
push
lea
pop
xor
jg
sbb
lock
fldenv
add
mov
mov
testb
dec
mov
clc
decl
or
addr16
push
ret
mov
xor
pop
sbb
add
add
cmp
sub
add
or
inc
xchg
out
mov
add
loope
jmp
daa
add
mov
adc
push
jnp
sub
call
add
cmp
jne
adc
bound
sub
rcrb
ja
andb
lcall
mov
hlt
and
push
sbb
sbb
pop
adc
add
fwait
pushf
mov
sub
arpl
sbb
dec
xchg
add
cwtl
je
xchg
test
sbb
add
sub
dec
addr16
push
stos
imul
add
adc
pushl
popa
jne
pop
mov
test
mov
add
mov
add
sbb
inc
add
adc
stos
sar
out
clc
test
cs
pop
xlat
ja
adc
push
push
int
out
inc
jle
mov
sub
push
in
fcomps
shll
roll
mov
int
cmpsl
lret
add
dec
jbe
rorb
adcl
pusha
inc
dec
pop
fwait
cld
push
outsb
jle
and
out
ss
add
fsubrl
add
jp
cmpl
rol
fs
mov
mov
cld
jne
cs
add
add
imul
push
push
inc
cmc
mov
add
sub
jle
test
add
jne
aas
shlb
jge
adcb
insl
push
add
das
in
mov
sub
sbb
lea
mov
add
inc
jno
jmp
sbb
add
or
pop
lods
aam
sbb
loop
sti
adc
push
mov
shrl
icebp
imul
or
fcomps
add
push
mov
dec
cmp
push
lcall
xor
add
daa
movl
dec
cmc
imul
add
aam
lea
roll
sub
in
fcmovnb
lea
push
cwtl
pop
jbe
imul
int3
repnz
in
inc
adc
add
add
xor
addl
fldl
sub
lds
push
cmc
ja
add
mov
fidivrs
test
and
lret
jno
or
rcl
mov
pop
adc
int
ja
cli
adc
aam
addr16
mov
fsubrs
dec
lcall
fildl
add
pop
sbb
or
add
sub
ss
dec
add
add
jle
mov
sarb
add
cltd
inc
gs
lock
and
lcall
add
mov
or
mov
aas
mov
sbbb
fs
push
popa
jne
fildl
add
push
lcall
mov
xor
adc
mov
mov
hlt
xchg
js
adc
inc
lret
cmp
lds
dec
js
xchg
mov
mov
hlt
jb
out
sbb
ficoms
cwtl
xor
xlat
addr16
hlt
lret
mov
pop
push
pop
mov
add
push
jp
sub
call
add
mov
inc
xlat
arpl
xchg
jp
add
add
xor
pop
in
push
dec
cmp
cmpsl
adc
lock
cs
jnp
cwtl
pop
gs
adcl
mov
and
mov
push
or
or
out
in
cli
daa
dec
mov
mov
sub
cmp
lds
inc
in
push
dec
mov
ljmp
pop
imul
jmp
mov
add
sbb
and
push
aaa
sub
jecxz
and
or
out
inc
cli
stc
add
mov
negb
add
arpl
into
pop
test
add
add
or
das
hlt
daa
pusha
add
in
push
mov
fwait
push
adc
xor
jbe
mov
sti
add
mov
daa
add
cmp
out
call
sub
ret
add
lret
mov
inc
add
jbe
loop
sub
iret
ret
add
test
inc
aam
repnz
xor
jmp
jecxz
ret
fiaddl
jecxz
xor
sub
pop
scas
data16
cmp
cmp
sub
cmp
jno
aam
or
imull
add
adc
inc
cmc
mov
or
popa
mov
or
and
aas
sarb
push
sbb
add
jns
aam
dec
inc
xor
pusha
xchg
dec
mov
cmpsb
nop
inc
xchg
add
and
dec
sub
in
cmp
jl
stos
dec
pushf
stos
lods
pop
sub
sbb
add
add
lock
and
in
aad
mov
adc
adc
loop
add
inc
stos
xor
cmp
es
andb
cld
adc
xor
add
push
fnstenv
cmpl
sti
xchg
or
and
sar
leave
stos
loope
push
stos
add
decl
loopne
pop
xchg
cltd
ss
ljmp
lcall
add
and
addb
sub
pop
dec
cmp
andb
add
ss
icebp
pushf
cmpsb
fnstsw
iret
push
aaa
add
fnop
cmp
xchg
sub
loopne
movsl
imul
jmp
aam
cmp
movsb
push
add
or
in
xchg
test
xchg
mov
clc
mov
inc
inc
je
add
dec
and
dec
in
jns
nop
and
xchg
pop
in
adc
fisubs
dec
loopw
fidivrl
dec
push
xlat
jecxz
add
das
and
cmp
in
and
and
popf
add
xor
push
mov
or
jbe
popa
and
sbb
add
inc
push
and
cmp
out
or
add
jmp
sti
fsts
and
in
mov
adc
sub
nop
aas
jno
stos
out
adc
xor
mov
in
out
push
scas
aas
add
stos
mov
mov
ss
ret
aad
das
lret
push
pushf
inc
loopne
mov
ds
ret
xchg
push
outsl
repz
mov
popf
sbbl
mov
ljmp
jle
or
cwtl
hlt
addr16
dec
add
xor
add
int
add
add
pop
rcr
xchg
pop
xchg
push
pop
cmp
pop
push
xchg
fcompl
pop
add
add
mov
clc
adc
add
adc
mov
xlat
mov
imul
add
out
xchg
pushf
dec
loopw
lods
push
add
test
pop
lcall
sub
or
add
add
inc
jge
mov
pusha
outsl
pop
add
mov
repz
cli
sbb
out
fisubrs
and
add
sbb
adcl
add
stc
xchg
push
mov
pop
clc
and
sbb
arpl
test
pop
dec
lods
call
stc
add
inc
push
adc
in
pusha
in
mov
fldcw
icebp
inc
push
jae
popf
into
mov
int3
xchg
loope
mov
test
int
test
xor
dec
and
cmp
adc
stos
sbb
loopne
add
nop
rcl
push
daa
sbb
pop
loop
nop
add
xor
gs
cmc
aam
sbb
into
fnstenv
push
mov
fldenv
es
aam
pop
xor
jno
jmp
mov
sbb
inc
push
idivb
jmp
les
cmp
into
sub
add
mov
ja
cwtl
xchg
add
xlat
addr16
mov
pushf
dec
cld
enter
pop
pop
fbstp
and
push
sub
iret
or
inc
lods
lods
popa
pop
les
in
add
cmp
xor
sbb
dec
clc
xchg
cmpsl
or
add
ljmp
pushf
aas
push
add
push
xor
call
add
mov
and
xchg
cmp
push
dec
or
shlb
add
push
cmp
inc
mov
or
mov
adc
add
outsb
pusha
hlt
cmp
inc
scas
lret
dec
pop
pop
jg
mov
cwtl
loope
mov
subl
bound
cld
out
dec
cmp
add
scas
enter
dec
test
in
xor
mov
stos
push
ljmp
sahf
dec
in
dec
sbb
cltd
push
loop
or
cli
add
aam
aam
loopne
inc
and
and
dec
sti
scas
add
add
std
in
hlt
sub
adc
mov
xor
ja
jle
cmp
arpl
cmpl
pop
add
js
pusha
xchg
adc
cmp
inc
shrl
jae
sbb
push
xchg
xchg
ror
lock
pop
pop
and
pop
stos
lahf
pop
outsl
in
aas
push
add
jge
inc
dec
stos
lock
add
into
sub
cwtl
ja
push
and
jl
xor
cs
es
enter
ss
jne
adc
xchg
add
je
cmc
push
mov
and
in
xor
cld
add
bound
add
push
shlb
loopne
scas
popf
andb
mov
and
sub
push
sbb
loop
int
lret
ror
adc
mov
cwtl
pop
das
popa
fsubrl
and
sbb
into
stc
adc
call
into
mov
std
pop
inc
add
inc
dec
lds
mov
or
push
jns
dec
mov
mov
adc
sub
loop
addr16
add
filds
add
int3
addr16
add
add
mov
add
push
push
lret
add
leave
rorb
mov
add
outsb
in
imul
flds
jmp
enter
add
fsts
les
inc
daa
mulb
add
sti
or
add
sub
leave
ret
mov
insl
mov
mov
add
jb
inc
test
pop
in
or
cltd
bound
mov
lods
xor
push
fisubs
push
cmpl
roll
sub
adc
add
and
outsl
aas
xchg
fwait
sbb
add
stc
das
add
cmp
add
jne
pop
int3
lcall
add
cmpsl
sahf
jne
xchg
fildl
aaa
cs
pushf
jne
cmpsl
aad
outsb
test
imul
test
cmc
xchg
mov
mov
aaa
mov
xorb
es
add
cmp
and
movsb
loope
add
test
inc
cwtl
sub
mov
mov
out
push
mov
movnti
adc
out
test
aaa
sbb
and
fs
fwait
push
mov
cmp
ret
aaa
pusha
sbb
out
testl
mov
mov
cli
loop
push
xchg
mov
das
test
iret
insb
ja
outsb
out
xor
popf
xor
xor
fiadds
mov
icebp
mov
xor
test
test
sbb
push
repz
mov
mov
dec
mov
xchg
xor
pop
fwait
cmp
cmc
xor
adc
pop
xchg
dec
inc
call
mov
rolb
cmp
mov
pusha
mov
mov
cltd
cli
sbb
lret
and
push
sbb
mov
or
sbb
icebp
xchg
std
mov
iret
and
mov
call
cwtl
imull
int3
fstps
or
sbb
loop
es
mov
cmpb
jmp
xchg
es
push
shl
nop
shr
movsb
inc
mov
cltd
ja
shl
fcmovnb
sub
in
mov
mov
mov
movsl
mov
lods
dec
sbb
jb
cmpsl
shlb
fstl
out
aaa
hlt
mov
pop
push
shll
push
pop
stos
out
adc
xor
mov
xor
cmpsb
fcompl
add
imul
or
xor
add
add
incb
dec
iret
out
add
add
mov
cld
rcll
or
pop
xor
mov
imul
pop
pop
shr
push
or
push
inc
test
add
add
filds
add
rolb
pop
sbb
leave
pushf
sub
inc
movsl
sub
icebp
call
pop
shrb
dec
mov
ljmp
daa
jae
loope
orb
mov
fwait
lahf
mov
dec
sbb
out
mov
pop
or
outsb
sti
ljmp
mov
lret
dec
cld
push
testl
xchg
ja
push
js
inc
lret
cmpsl
cmc
test
mov
mov
cwtl
push
icebp
lea
pop
sbb
inc
mov
fbstp
sbb
andb
push
stos
cltd
das
or
sti
std
adc
pop
mov
aad
mov
mov
bound
xor
pop
sbb
cmp
sub
xchg
jl
insl
ds
adc
add
aad
inc
mov
cld
aas
cli
lods
adc
inc
lea
inc
push
add
mov
rcrb
popa
dec
mov
add
or
push
add
nop
add
fucom
add
push
or
add
push
lods
orl
mov
dec
mov
or
jp
sub
rclb
jo
sub
inc
inc
fwait
xchg
mov
cmp
xchg
sub
adc
shl
mov
inc
pop
mov
jmpw
dec
push
mov
jmp
jnp
popa
jne
push
stc
and
push
sub
pop
pop
pop
in
mov
add
mov
and
add
or
jo
adc
js
cmp
push
adc
pop
sub
add
out
add
and
adc
div
es
ljmp
xlat
add
cld
fsubl
cmp
arpl
lret
sbb
mov
pop
add
pop
adc
adc
lock
popa
add
sarb
shrb
add
add
xchg
add
mov
mov
sub
mov
enter
add
ret
je
xor
add
pop
sahf
ljmp
push
add
or
jae
loopne
sbb
bound
ljmp
pop
stc
fidivl
scas
test
add
adcb
aam
mov
adc
add
add
add
jg
dec
mov
mov
adcb
mov
add
repz
outsl
sub
pop
imul
clc
imul
inc
add
xchg
test
xlat
add
add
sbb
sbb
push
pusha
jne
xchg
ja
jge
in
aaa
xchg
fs
xchg
out
inc
adc
dec
mov
add
shll
ss
stc
test
cmp
adc
es
xor
sbb
roll
add
or
sub
aad
add
mov
fldenv
cmp
add
stc
pop
mov
daa
mov
jp
dec
add
push
fs
xchg
lahf
js
gs
lcall
xlat
bound
sub
pop
xor
rolb
add
dec
jb
push
cld
in
cltd
dec
cmp
cmpsl
ret
cmpsl
xor
add
repnz
jp
fisttpl
add
push
add
shrb
push
notl
mov
int3
pop
scas
cmpsl
sbb
mov
or
pop
pop
inc
cltd
xchg
pop
loopne
jne
mov
icebp
jge
add
jae
cmpsb
xor
add
jno
ficoms
push
icebp
inc
add
adc
push
popf
pop
adc
test
sub
lock
stos
lods
pop
dec
cmp
insb
and
test
roll
add
subb
data16
add
test
out
outsb
fbstp
popf
cmp
mov
cli
in
adc
cmp
add
negb
adc
mov
jecxz
xchg
add
xchg
dec
add
and
inc
aaa
and
and
jae
sarb
lcall
lds
out
jl
and
push
cmp
or
lcall
arpl
cmp
mov
xchg
dec
adcl
push
mov
nop
rcr
push
and
jno
or
and
add
fs
mov
mov
sub
call
dec
outsl
inc
test
cmpsb
addr16
or
clc
xchg
ljmp
add
iret
dec
dec
sbb
dec
push
sbbb
pop
nop
push
add
ret
fimuls
sub
in
ret
out
add
movb
lret
push
add
add
mov
inc
lahf
mov
outsb
add
testw
add
add
add
imul
adc
sbb
or
add
add
add
or
shl
int3
or
and
pop
push
shll
aad
dec
nop
and
sbb
fbld
in
add
cli
subl
out
sarb
push
jecxz
mov
push
cmpb
shrb
xchg
cmp
pop
scas
add
scas
sbb
fistps
inc
add
add
mov
sti
mov
inc
aam
lret
add
sub
add
add
push
jmp
add
mov
mul
add
sub
sti
add
add
add
sub
icebp
sti
inc
rolb
lcall
or
add
jb
jge
clc
dec
cltd
test
pop
in
jo
out
add
add
inc
add
add
jl
test
push
add
add
adc
adc
add
imul
sub
int3
xor
rolb
icebp
aad
sub
jl
jp
jecxz
stc
lds
icebp
mov
stos
cld
dec
mov
add
mov
pop
or
mov
jbe
adc
daa
repz
adc
pop
xchg
lods
ret
mov
scas
add
aad
jg
aas
bound
clc
outsb
orl
add
add
push
jno
insl
ret
outsb
out
cld
dec
in
insb
mov
add
dec
pop
sbb
lods
ss
sbb
xor
cld
jecxz
ret
fiaddl
call
or
addr16
fs
lock
add
sbb
jo
or
add
add
imul
adc
test
insl
inc
dec
sbb
cli
mov
inc
mov
std
push
dec
stos
aam
inc
adc
mov
rclb
mov
mov
shr
dec
nop
jb
mov
mov
push
add
pop
paddusw
add
rcrb
mov
adc
jecxz
and
mov
lock
xor
imul
in
aaa
test
icebp
xor
mov
add
push
fidivs
add
fucom
push
mov
add
imul
add
cmpsb
imul
jmp
and
push
sub
lods
xchg
xor
add
ja
add
sbb
call
test
xlat
cmp
out
cmp
xor
pop
mov
or
aas
mov
js
inc
add
add
imul
add
rorl
add
imul
xchg
jnp
aam
add
pop
mov
add
int
ret
dec
add
and
repnz
ljmp
xor
and
scas
mov
fs
add
ficompl
xchg
dec
mov
mov
push
sbb
dec
add
stc
loope
and
and
add
ljmp
mov
add
xchg
inc
sub
dec
outsb
lea
dec
lea
inc
add
sub
sti
push
add
loopne
add
add
add
pop
xchg
shrb
jl
movsl
test
fs
sbb
add
jae
xchg
and
dec
adc
dec
inc
daa
inc
xchg
ret
dec
add
pushf
xorl
stos
xor
testl
sbb
outsb
jno
inc
loope
push
push
mov
add
mov
pop
lea
outsb
or
insl
add
add
pusha
sbb
lods
xchg
push
testl
add
cmpsl
and
add
jmp
lods
mov
mov
dec
stos
pop
add
call
jno
loopne
mov
dec
idivb
and
popf
rcl
repnz
mov
push
add
insl
lret
call
dec
jl
xor
mov
jge
dec
add
add
xchg
in
sub
xchg
test
cmp
push
clc
scas
mov
aas
inc
push
hlt
cmp
lcall
fs
cmc
mov
mov
scas
call
add
cmp
inc
sub
ror
clc
mov
fldl
add
add
adc
add
add
in
sub
jp
outsl
push
xor
add
sahf
or
adc
sahf
mov
pop
add
xor
xor
add
push
ret
sub
fadds
inc
out
mov
push
cwtl
in
and
cltd
push
pop
and
add
jae
lock
testl
mov
add
and
or
cmpb
insb
lahf
add
dec
xchg
fwait
loop
arpl
in
xchg
bound
repz
pop
adc
add
ja
xor
clc
arpl
call
add
mov
dec
jp
nop
sahf
cmpsl
popa
jne
lahf
aad
test
idivb
dec
xorb
shlb
imul
or
mov
cli
or
add
imul
jl
fnstsw
inc
test
mov
jmp
dec
outsb
popf
lock
add
fs
mov
xor
push
sub
lods
lahf
jmp
movsb
cld
cmpl
pop
rcrb
lcall
mov
scas
fiaddl
jge
xchg
mov
xor
sbb
mov
flds
js
mov
test
aad
jl
aas
data16
mov
loope
mov
xchg
push
orb
push
mov
xor
sub
aas
bound
push
lea
fdivrp
insl
inc
xor
mov
push
js
ljmp
lcall
sub
dec
std
daa
and
fwait
aad
xor
dec
add
push
jo
xchg
out
fsubs
sub
add
sbb
xchg
je
add
mov
stos
add
addb
cmp
add
scas
lods
cwtl
and
pop
dec
push
ret
incb
mov
cs
ficomps
cmc
lret
or
xor
std
pop
out
jmp
popf
inc
lcall
add
add
jnp
aad
mov
pop
add
lcall
add
or
add
jb
int3
addr16
sbb
les
test
mov
xor
or
xchg
lahf
xor
cld
inc
xor
mov
and
xor
sbb
rcll
aas
data16
mov
inc
jg
insl
pop
cmp
pop
pop
insb
addl
add
shlb
ds
mov
pop
lods
lret
stc
xor
decl
dec
jmp
pop
sub
fs
xor
add
out
xchg
mov
aas
mov
mov
inc
jg
inc
add
adc
arpl
jne
xchg
ret
pop
movsl
jbe
stos
jns
or
packuswb
mov
mov
test
jns
add
add
stc
lds
cltd
out
mov
sub
add
push
xor
cltd
mov
daa
addl
inc
pusha
fwait
std
adc
xchg
repnz
sub
cltd
sahf
inc
add
add
xor
ds
lods
arpl
fbld
or
xchg
xchg
add
data16
das
add
rol
push
flds
cmp
xchg
mov
mov
push
sub
icebp
dec
fiaddl
cmp
push
inc
inc
loopne
push
ret
fadds
dec
sub
cwtl
mov
push
and
and
xor
add
fistpl
xor
divl
add
xchg
sub
jno
sub
ret
add
addl
outsb
xchg
sub
xchg
dec
push
mov
sub
jg
in
cmp
imul
test
outsl
and
and
push
sub
mov
xchg
out
pusha
gs
inc
xchg
xor
push
adc
jns
mov
xchg
jns
mov
add
dec
icebp
xor
pop
add
das
int
add
sti
mov
les
xchg
mov
add
sti
ficoml
mov
loopw
mov
pop
fiadds
add
pop
mov
mov
xchg
daa
mov
rorb
ret
inc
push
jo
sub
add
lcall
or
scas
bound
add
add
das
sbbb
cmp
add
add
and
bound
adc
add
pop
add
add
out
push
scas
xor
roll
add
add
int3
jnp
cmpsl
mov
push
add
add
gs
and
fsubrl
add
add
das
mov
mov
test
cmp
add
add
mov
sub
add
xchg
fldl
add
pushf
jae
or
sub
push
xchg
cmp
mov
rolb
add
int
ss
sbb
jle
mov
ret
stos
push
outsb
mov
cmp
idivb
xlat
popa
rcrb
outsl
xor
or
nop
push
movsb
sbb
and
mov
call
mov
lahf
test
inc
loopne
dec
pushf
mov
mov
fucompp
push
stos
dec
out
add
add
inc
lds
add
out
imull
cmp
push
js
add
xor
lods
push
pop
cmp
roll
add
lods
dec
push
xchg
pop
cmpsb
cwtl
add
add
mov
inc
xchg
dec
add
outsb
aaa
out
addl
add
jmp
fs
fidivs
adcb
or
add
aas
dec
add
add
fimuls
xchg
mov
inc
out
sbb
add
add
pop
hlt
cwtl
clc
xchg
sub
or
ret
add
imul
push
add
add
xchg
mov
ret
add
insb
mov
mov
add
inc
stos
mov
jnp
mov
sbb
dec
add
add
aaa
test
dec
add
scas
sti
in
loop
mov
mov
and
xor
int
in
pop
push
mov
sti
mov
mov
jne
loopne
add
add
pop
add
add
jg
leave
xor
add
jle
mov
mov
xchg
jns
mov
fisubs
and
mov
mov
leave
call
inc
sbb
add
les
in
and
add
adc
ficomps
test
jl
lods
arpl
fbld
fsubrs
add
pop
add
ljmp
inc
fcoml
jecxz
add
jnp
out
stos
adc
and
mov
inc
ss
sub
push
push
or
aam
cld
add
cltd
lret
fldl
add
das
cmp
jg
adc
stos
inc
xor
add
and
add
test
mov
pop
lods
add
xor
pop
nop
mov
dec
add
fwait
ret
push
in
stos
test
lcall
iret
dec
aaa
cmpsl
pop
add
mov
dec
inc
in
outsb
test
daa
jle
add
add
add
and
nop
sar
push
push
add
cmp
mov
mov
ror
sub
mov
aad
les
jmp
cmp
mov
popf
enter
fiaddl
add
add
dec
and
lahf
mov
fidivrl
inc
pop
xor
and
clc
fs
subps
dec
push
pusha
mov
jb
stc
inc
shlb
add
add
enter
pop
sbb
jle
or
in
and
lods
mov
les
mov
mulb
pop
xor
push
pushf
daa
xchg
inc
add
stos
bound
push
xor
jp
or
add
cmpsb
in
jmp
xor
push
xor
or
inc
add
and
insl
adc
or
xor
rcrl
push
and
addr16
xchg
insl
clc
fisubs
or
ss
add
add
scas
enter
dec
inc
mov
mov
addr16
xchg
lret
add
mov
and
das
add
roll
add
xchg
sbb
into
jo
dec
jb
sbb
movsl
divb
jmp
cmp
fidivl
cwtl
in
mov
repnz
nop
xor
cltd
sbb
aad
add
fcom
sub
dec
sbb
lcall
sti
pop
loope
xor
adc
push
xchg
mov
cmpsl
mov
cmpsl
movb
jmp
cmp
mov
mov
add
dec
ja
int3
add
scas
shll
sbb
xchg
jecxz
jmp
clc
in
rcl
adc
push
mov
leave
add
add
jp
mov
fsubl
push
add
add
jp
jmp
std
lods
add
add
insb
mov
cwtl
lock
dec
iret
sub
add
add
in
or
and
add
add
add
pop
adc
add
add
and
xor
xor
fldt
jmp
imul
add
and
add
inc
add
call
roll
dec
sti
add
add
add
pop
mov
sub
adc
pop
sub
mov
mov
jns
add
leave
jns
roll
push
add
leave
sbb
push
xchg
jae
pop
jb
xchg
push
cwtl
xchg
add
mov
push
aaa
jo
addb
adc
rcll
jecxz
jecxz
cwtl
add
inc
rolb
lds
inc
xbegin
cmpsb
push
divps
leave
out
add
std
andb
cwtl
test
out
pop
cltd
add
mov
or
xlat
neg
leave
fwait
dec
push
pusha
add
cs
push
inc
cmp
mov
add
repnz
dec
into
add
das
mov
xchg
cmp
mov
lods
xchg
mov
and
mull
call
jno
pop
loopne
cmc
push
add
jmp
cmovae
out
jle
loope
mov
dec
push
jl
push
add
bound
add
rorl
add
cmp
je
add
dec
or
add
add
cld
add
roll
adcb
fsubrl
cmp
loopne
jle
push
test
add
mov
mov
adc
mov
jmp
mov
outsl
add
testb
nop
dec
stc
mov
std
xchg
test
call
pop
movsb
and
pop
cli
outsb
lcall
imul
add
push
insb
pushf
test
fdivrs
mov
or
add
jl
movsb
das
xor
add
mov
jnp
jns
push
rcl
add
or
add
add
or
add
inc
pop
xlat
stos
sub
dec
das
orb
pop
inc
mov
daa
cmp
lahf
cmpsb
add
idivl
add
enter
out
push
scas
es
mov
add
pusha
sub
daa
jne
push
add
lea
add
add
add
cmp
bound
add
ret
sub
test
sub
stc
into
rcrb
dec
mov
pop
call
add
outsb
xor
and
dec
call
scas
lahf
and
add
aas
dec
xchg
lahf
sti
pop
push
pop
push
lahf
test
inc
loopne
lcall
jge
inc
test
les
nop
not
fmuls
or
call
inc
mov
sbb
add
dec
push
data16
in
pop
push
movsb
fsubp
loopne
icebp
xchg
jecxz
add
jae
add
fiadds
mov
ja
add
popf
jo
mov
pop
imul
lahf
and
test
out
add
add
lret
mov
or
sub
stos
test
jno
xchg
insb
stc
and
stc
dec
mov
push
mov
sub
jns
push
xor
jb
fisubrs
cmc
jns
add
add
jmp
mov
xor
xor
lahf
stos
scas
aaa
pop
pop
add
inc
mov
mov
mov
call
cmp
fs
add
xchg
add
mov
jb
sub
call
jg
dec
push
ds
mov
mov
icebp
mov
sbb
rcll
adc
insb
in
or
jnp
test
adc
inc
sti
data16
dec
adc
lea
pop
lahf
sub
pop
cmp
adc
add
add
add
pop
adc
or
mov
add
add
add
pop
and
daa
push
sub
pop
in
xor
add
push
int
mov
insl
pop
hlt
xchg
es
push
cmp
sbb
outsl
xchg
or
into
ficoms
std
arpl
fmull
lahf
add
xchg
or
adc
daa
movsl
add
testb
push
sub
mov
fcompl
imull
out
shl
push
push
adc
sbb
aas
loopne
add
add
mov
add
shl
ds
push
insl
aaa
jmp
push
or
jg
add
add
faddl
ffreep
xlat
jne
movsb
push
cmp
mov
mov
adc
fchs
xchg
mov
add
insb
out
add
add
jg
mov
imulb
fmull
loope
arpl
outsb
into
mov
les
aaa
fdivs
adc
cmp
ror
les
cld
lods
push
movsb
mov
inc
adc
jmp
cmp
loope
push
pop
xchg
fdiv
rcrl
inc
pop
pop
clc
and
mov
aam
jmp
ss
xchg
in
jae
add
add
jb
insl
push
xchg
dec
jle
jns
cli
aad
stos
add
add
add
or
add
add
add
pop
mov
aam
aaa
arpl
or
sbb
push
cltd
ljmp
inc
shlb
lcall
sub
jns
xor
popa
cli
push
jb
cmpsb
add
xor
int
xlat
pop
xchg
mov
insb
scas
call
xor
cmp
xchg
jo
scas
testl
xchg
xor
jns
jmp
inc
incb
aad
cld
mov
mov
subl
lret
sbb
lods
add
lods
idiv
inc
in
pusha
xor
mov
add
jle
add
ud1
jae
sub
lods
add
lret
outsb
mov
sub
mov
sub
or
nop
sar
xor
or
mov
scas
mov
mov
jae
adc
scas
shl
out
cmp
jb
filds
add
fisubl
push
rcrb
cs
sub
add
push
fnsave
push
xor
pop
ds
push
and
add
add
adc
pushf
leave
jp
sub
adc
mull
js
and
cwtl
aad
mov
mov
add
dec
push
movsb
call
jae
dec
lods
mov
add
les
add
icebp
push
pop
and
inc
add
cs
and
pop
jmp
pop
ret
add
and
repz
mov
jns
inc
cli
outsb
pop
call
mov
sbb
and
add
jmp
pushf
sub
mov
loopne
add
add
mov
push
xor
in
stos
cmc
ja
pushf
pop
and
push
loope
fcmovnu
daa
xlat
bts
jecxz
add
pop
jecxz
cmp
xchg
adc
sub
add
jo
dec
ret
fnsave
inc
loopne
inc
lods
frstor
inc
mov
cmp
rcl
mov
add
inc
adc
xchg
pop
das
xlat
mov
dec
jno
add
ss
xchg
scas
shll
inc
ds
push
rorb
pusha
in
cmc
inc
push
mov
jl
adc
jp
bound
jecxz
push
test
stos
mov
stos
repz
popa
sbb
jg
add
add
lret
fidivs
add
test
and
add
inc
pop
mov
push
scas
shlb
add
add
icebp
es
add
int3
ret
cmp
cwtl
mov
sub
mov
dec
dec
or
xchg
popf
pushf
mov
mov
inc
cwtl
mov
dec
rcll
in
icebp
decb
lea
ret
loop
lahf
loopne
push
inc
add
xchg
dec
in
fldl
add
xchg
fwait
and
mov
dec
arpl
cltd
jno
repz
and
lods
call
mov
sub
lret
push
mov
add
add
hlt
xor
mov
loop
add
hlt
add
add
into
dec
sbbb
jmp
push
roll
mov
xchg
andl
out
js
sahf
xor
push
leave
enter
mov
xchg
stc
les
push
push
shrl
popf
add
cld
andl
insl
dec
add
add
dec
rcll
add
lret
ja
add
add
mov
inc
fisubs
cmp
add
xchg
sub
add
jns
std
imul
mov
pop
adc
loop
cmp
pop
out
fldcw
cmp
add
dec
sbb
mov
cmp
add
cmp
pop
divb
movsl
addr16
bound
pop
adcl
adc
pushf
ret
repnz
jo
xchg
test
ret
xchg
outsl
add
mov
add
pop
and
mov
sub
or
ss
add
mov
push
jbe
add
and
into
pop
mov
hlt
in
and
repz
pop
dec
iret
daa
int3
adc
sbbl
insb
mov
into
add
pop
inc
data16
add
sbb
mov
add
sbb
lret
insl
push
xor
stc
lock
std
pop
jae
pop
sbb
cltd
add
addl
add
add
cmp
xor
xchg
rcr
loope
mov
cmp
cmp
pop
mov
pop
push
jo
pop
mov
sub
push
addr16
and
cmpsl
mov
iret
popl
dec
push
popa
jl
xchg
jae
cli
movsl
aaa
cli
mov
mov
jns
and
dec
in
inc
aam
lock
std
xchg
add
arpl
sub
cmp
loope
push
sub
cld
into
xchg
mov
lods
arpl
add
add
sub
aaa
sub
jmp
and
or
pop
es
inc
xchg
cmp
cmp
sahf
dec
add
leave
jno
sub
rcll
mov
dec
jnp
jno
or
stos
xor
push
push
rorl
out
mov
mov
sub
jecxz
add
add
jno
stos
out
adc
xor
mov
in
dec
mov
adc
push
jg
sub
andb
jmp
addl
mov
inc
xchg
mov
into
nop
dec
add
add
dec
xor
in
sbb
imul
js
scas
ljmp
mov
mov
out
sub
jle
pop
popa
adc
mov
sbb
mov
cs
mov
sub
and
test
pop
out
add
loop
add
jo
cmpb
jns
dec
push
ds
dec
sbb
sub
add
dec
clc
push
repz
rcl
fwait
arpl
mov
movsl
pop
dec
filds
mov
cmpsl
mov
out
inc
repnz
dec
adc
xchg
incl
repz
mov
fisttps
or
out
sbb
add
and
add
cmc
lahf
hlt
push
inc
or
gs
add
xor
pop
stc
mov
push
jne
push
ret
push
adc
xchg
push
and
out
std
or
mov
sub
add
cmp
sahf
daa
shr
cmc
fisubs
jecxz
xor
sub
cmc
mov
rcrl
shll
jp
xlat
lods
jp
sbb
add
jae
repnz
or
add
pop
out
mov
mov
mov
dec
iret
sbb
adc
mov
xchg
inc
lods
or
add
popf
je
mov
incl
js
add
sbb
pop
xor
test
sub
cltd
add
pusha
xchg
mov
add
and
and
dec
pop
add
xchg
lds
mov
xlat
leave
cld
arpl
js
mov
orl
icebp
lret
cmpsl
add
add
xchg
sbbl
mov
mov
xchg
psllw
cld
push
mov
add
add
inc
cltd
loopne
mov
test
cld
sub
add
and
add
stc
js
xchg
mov
sbb
scas
push
pop
or
and
sbb
imul
sbb
add
out
cmp
pop
and
pop
sahf
pop
or
xor
in
cmp
push
add
add
push
repz
sbb
adc
insl
lret
lcall
aas
lret
aad
add
add
add
jo
sub
dec
push
dec
mov
add
jp
and
mov
add
add
cmpsl
mov
inc
in
jecxz
les
inc
cmp
iret
or
mov
xchg
xchg
in
sub
cmpsb
lahf
clc
cmp
dec
sub
insb
add
and
pop
int
add
insb
test
ljmp
add
pop
incb
pop
lret
add
stos
add
inc
ljmp
dec
jecxz
rcll
out
pop
add
lds
xor
sbb
sub
call
clc
shl
movsb
in
mov
fsubrl
fsubrl
leave
inc
mov
ret
add
iret
fsub
sub
out
sbb
xchg
lahf
sbb
jp
sbbb
orl
push
pop
push
mov
loopne
andl
dec
push
insl
cmp
ret
fsubrl
or
mov
cmp
add
mov
repnz
mov
in
in
cmpsl
add
add
push
pop
repnz
mov
mov
sbb
inc
add
inc
ss
test
int
xor
outsl
mov
or
lahf
int3
nop
call
sub
mov
shl
jp
add
add
jmp
mov
frstor
add
add
enter
daa
inc
push
fbstp
imul
sub
lods
je
add
add
xchg
ficoml
inc
cmp
lcall
fsts
lret
pop
cmpsl
and
and
dec
mov
scas
aaa
frstor
shrl
in
mov
fsubrl
fsubrl
leave
and
int3
add
popa
movl
jle
fwait
jb
pop
inc
sbb
aas
xor
mov
fidivrl
xchg
sub
mov
fidivs
aad
cmc
push
xor
and
cmp
jo
push
and
fisttpll
data16
rcl
push
outsl
xor
or
int
xlat
dec
aaa
dec
xor
faddl
mov
xor
add
sub
cmp
ljmp
aas
dec
icebp
mov
loopne
pop
je
aas
lahf
int3
mov
sub
into
mov
pop
ja
xchg
into
adc
ret
mov
fimull
dec
lds
xor
sub
aaa
pusha
adc
out
ja
adc
rcrb
xorb
and
pop
or
outsl
push
scas
popa
xor
jl
sub
fldl
ja
inc
sub
mov
scas
inc
ds
nop
add
adc
jmp
mov
add
xor
cwtl
lods
test
out
jp
in
inc
add
add
push
cmpsb
in
mov
mov
add
add
enter
mov
dec
mov
ljmp
add
push
idiv
and
ret
addr16
dec
mov
xchg
mov
add
or
cmpsl
mov
shll
pop
jns
cwtl
add
add
pop
xor
xchg
popa
scas
sbb
xchg
add
ficomps
add
sub
add
sub
icebp
imul
xchg
insl
ret
ret
sbb
xor
enter
adc
fs
jge
xor
inc
in
into
inc
fucomp
push
rolb
cmpsb
mov
push
add
adc
ss
cmp
lcall
fwait
cmp
mov
mov
and
mov
dec
push
aad
in
xchg
movsl
lods
cmp
mov
jle
adc
xchg
xor
add
inc
jp
dec
xor
movsl
pop
pop
mull
out
pop
pop
shrw
add
jae
lock
adc
lods
out
lcall
dec
xchg
pushf
je
xchg
jmp
addl
call
lea
inc
vandnps
scas
mov
adc
pop
pushf
ljmp
sarb
xchg
jle
jle
pop
xor
ja
pop
ds
sub
sbb
or
das
push
out
fsubrl
mov
sub
pop
jle
jmp
add
dec
jb
mov
push
int3
or
push
add
mov
std
add
fwait
inc
xchg
outsb
push
pop
add
in
pop
adc
adc
arpl
jmp
je
sub
add
stc
sub
xor
fs
jo
push
test
xor
mov
lods
cmp
fstps
pop
int3
pop
loopne
insb
testb
out
adc
add
xchg
pop
mov
inc
cmp
pop
push
ret
jg
add
in
stos
xor
in
out
cmp
jb
push
mov
int3
push
mov
jp
mov
or
inc
stos
mov
scas
push
shr
test
push
stos
sub
fdivrp
jl
fisubrl
jecxz
loopne
mov
jae
or
daa
rcrb
rcrl
mov
push
add
insb
sub
outsl
dec
xchg
adc
inc
inc
cmp
jl
in
imul
mov
test
mov
test
xchg
in
jno
rolb
add
add
and
loopne
mov
mov
add
jno
into
dec
push
call
mov
test
pop
cmp
loope
jbe
jbe
cld
xchg
test
add
sub
bound
rorb
and
add
xchg
sub
fs
dec
xor
outsl
jg
fsts
xor
aad
test
in
mov
xor
sbb
dec
inc
adc
cmp
sub
imul
fnsave
add
push
sbb
and
test
pop
scas
lret
je
insl
push
cmpb
add
xor
shlb
insl
inc
shrl
xor
pop
mov
xchg
clc
sbb
shll
cli
je
dec
add
sub
mov
lahf
push
or
cld
repnz
test
in
mov
push
ja
sub
cmpsl
sub
insl
js
lret
add
cmp
lds
xlat
dec
sti
xchg
dec
test
mov
ret
push
adc
add
mov
call
cmp
insb
xchg
in
or
mov
dec
pop
ljmp
pop
sbb
lods
jbe
jnp
jg
aaa
mov
icebp
push
sub
cmp
hlt
xchg
pop
test
add
stos
inc
subb
cmp
outsb
fildl
stc
add
or
pop
cld
pop
test
pop
jae
xor
lahf
mov
arpl
ret
xlat
add
add
add
cwtl
adc
inc
bound
pop
nop
or
cmp
adc
push
cltd
sbb
inc
jmp
scas
movsb
inc
xchg
fistl
shll
and
push
xor
pusha
ss
mull
rcrl
arpl
cmp
xchg
mov
lahf
dec
mov
cmp
sbb
push
mov
and
das
adc
aas
pop
sub
addr16
fnstsw
ja
ja
add
push
mov
add
inc
jbe
add
insb
lcall
fiaddl
mov
std
aam
out
push
mov
scas
out
sub
and
dec
sti
xchg
add
add
roll
outsl
sbb
push
push
mov
xlat
lahf
push
add
add
jae
and
inc
inc
or
scas
pop
or
sbb
add
add
movb
and
mov
gs
fisubs
sub
outsb
pop
fnsave
mov
ss
push
flds
shl
mov
stos
lea
stos
add
fwait
mov
jge
out
ds
cmp
loopne
cmc
push
add
cmp
cmp
sub
data16
imul
dec
cmp
ret
nop
mov
jnp
pop
inc
cmpsl
sahf
jmp
and
and
imul
xchg
adc
test
xchg
mov
and
push
or
add
inc
insb
jle
jecxz
xor
fisubs
xlat
adc
sarl
dec
cltd
scas
inc
and
cmp
int3
xchg
pushf
sbb
lock
or
jecxz
add
add
flds
or
loope
push
insb
sbb
fwait
mov
enter
repnz
jo
pop
adc
xchg
fnsetpm(287
sbb
out
mov
movsl
jbe
mov
sahf
in
ficompl
ret
sbb
jo
sti
mov
inc
add
insb
aad
add
inc
sbb
add
push
cmp
sub
sub
decb
loope
call
jne
sub
push
daa
dec
movsl
mov
hlt
add
xchg
and
dec
push
scas
aas
mov
xchg
test
cmp
mov
mov
mov
dec
jle
mov
fiadds
jmp
mov
adc
adc
add
jno
movsl
and
fldt
movsl
mov
ds
xor
and
push
jno
cwtl
hlt
dec
xorl
dec
mov
push
arpl
enter
adc
int3
jmp
nop
pushf
sub
jl
sbb
aad
mov
pop
dec
push
idivb
xchg
lods
pop
fcomp
shll
pusha
adc
mov
add
test
push
adc
sti
fwait
dec
dec
jbe
jle
ja
xlat
cld
clc
jae
cmp
cmp
sti
xor
sbb
add
add
ret
mov
orb
add
add
sub
addl
test
add
pop
lahf
push
add
or
loopne
add
mov
int3
loopne
xor
and
enter
in
mov
mov
mov
call
ljmp
xchg
inc
push
add
mov
scas
xchg
aam
pop
mov
mov
fisttpll
mov
sub
lahf
cli
sbb
js
jecxz
movsl
mov
imul
das
push
repnz
dec
movl
add
dec
out
xchg
mov
loope
xor
in
inc
icebp
adc
insb
xchg
in
cmp
dec
push
sbb
add
mov
mov
inc
jne
sub
mov
es
inc
lret
inc
frstor
lret
sahf
mov
popa
daa
into
pop
and
jnp
shrl
adc
std
and
scas
aad
pop
aaa
hlt
pop
movsl
cmp
aam
push
push
notb
dec
lahf
adc
inc
and
sbb
inc
and
mov
or
repz
jmp
xchg
push
or
in
lcall
mull
aas
fldcw
add
mov
xor
ret
push
jbe
clc
sbb
lret
jno
sahf
pop
jne
mov
mov
xlat
mov
or
scas
mov
int
inc
cmc
xor
sbb
lea
or
add
test
xor
and
movb
lahf
inc
addr16
sbb
ljmp
std
and
dec
cmp
add
add
cmc
dec
fstps
ds
add
add
cwtl
jmp
stos
in
add
add
adc
sbb
add
and
shl
fdivs
add
xor
sub
jge
lods
cwtl
add
add
add
add
mov
push
pop
adc
add
fnstenv
lock
add
push
lds
dec
xchg
jb
add
mov
lret
xchg
push
call
dec
sti
and
add
fstps
aas
jle
add
je
loopne
popl
fistl
xor
add
mov
iret
pop
lods
mov
cmpl
pop
fwait
and
cltd
cld
xchg
mov
inc
pop
push
or
cmpsl
xchg
lds
sub
test
add
pop
xor
cmp
mov
js
loop
aas
pusha
icebp
add
clc
adcl
stc
shlb
in
sti
add
popa
sbb
mov
or
outsb
scas
mov
nop
xlat
daa
out
out
mov
inc
and
adc
inc
push
fucomip
aas
out
mov
pop
pushf
roll
push
pop
add
jne
pop
mov
shlb
add
fwait
xor
inc
insb
push
aam
adc
sbb
dec
enter
sti
mov
mov
jecxz
jg
ds
sbb
xchg
push
adc
jno
add
jmp
cmp
and
aad
jnp
es
leave
orb
jno
stos
out
adc
xor
mov
mov
rorb
add
out
jecxz
test
jbe
xchg
rorl
add
mul
popa
es
ss
lahf
rclb
inc
sbb
push
sub
cmpsl
mov
lods
insb
je
adc
mov
leave
mov
out
les
mov
add
movsl
flds
popa
and
ljmp
or
sbb
add
push
insb
leave
xor
push
sti
repz
push
stos
popa
lods
insl
js
jo
lret
add
mov
lods
jne
fldt
repz
xchg
push
add
enter
dec
mov
push
lods
jb
insb
and
orb
inc
lods
leave
jae
inc
fstpl
push
push
in
jp
mov
lea
fbstp
lds
xchg
and
xor
mov
out
mov
movsb
movsl
add
pusha
mov
in
mov
nop
add
xor
repz
sub
and
ret
cmpl
das
lcall
addl
mulb
adc
in
dec
sbb
xchg
pop
shll
push
loopne
add
add
add
sahf
in
mov
jmp
cmp
add
add
pop
and
and
insl
xchg
push
sub
mov
add
add
insl
add
cld
mov
into
bound
or
sub
mov
mov
outsb
mov
or
and
add
push
add
sbb
jp
sarl
mov
jg
xchg
cmpsl
mov
inc
sbb
ljmp
lods
add
cmc
sbb
andl
les
xchg
pop
and
jge
mov
add
add
dec
add
movsb
add
cmpsl
cmp
ret
add
flds
push
nop
mov
add
sbb
add
mov
mov
xchg
xchg
adc
push
jle
pop
test
fisubl
das
movsl
leave
mov
mov
loopne
pop
or
jmp
mov
push
cmp
cld
push
test
flds
add
add
adc
sub
call
cmp
add
add
test
jno
cmp
add
lret
push
mov
and
or
nop
nop
imul
jmp
fs
ja
idivl
sub
mov
mov
in
in
in
mov
mov
xchg
pop
lret
mull
std
test
add
add
and
jmp
aaa
mul
cmp
xor
popf
adc
sahf
repz
add
arpl
xchg
or
add
mov
add
in
sarl
mov
cmpsl
cltd
add
rolb
and
mov
add
push
sbb
popa
mov
dec
aaa
test
sahf
js
cmp
add
repnz
push
adc
popf
push
dec
dec
jecxz
cmpsb
pushf
and
sub
lods
pop
push
adc
pop
jbe
faddl
push
cmp
xor
xor
sbbl
xor
xchg
stos
push
test
out
ja
lcall
aam
loop
mov
add
stos
or
add
dec
add
pop
arpl
stc
into
xchg
in
out
loop
arpl
mov
mov
xchg
cmp
mov
and
clc
popa
addr16
rorl
lahf
movsl
xor
cmp
jnp
push
or
push
in
nop
mov
add
add
aas
mov
sub
call
xor
pop
lock
lds
fnstcw
rolb
repz
mov
pop
adc
mov
out
dec
repz
lahf
fcomi
fists
xchg
dec
movsb
dec
jp
mov
les
mov
jmp
mov
enter
stc
or
push
icebp
lock
ds
aam
add
orb
lea
sub
add
ffree
hlt
rolb
pop
pop
int3
jnp
add
mov
jge
add
fistps
aaa
sbb
aam
adc
pusha
xor
xchg
sbb
leave
dec
pop
mov
sbb
pop
in
pop
hlt
fldl
cld
test
or
mov
add
fildll
jg
add
mov
add
xor
mov
pop
xchg
sub
loope
add
hlt
testb
repz
sub
add
add
bound
jge
add
or
sub
add
xchg
in
push
inc
stos
mov
aam
push
pop
jle
jg
sti
push
add
sub
xlat
jno
mov
push
push
lock
lock
scas
mov
sbb
add
fiadds
loopw
push
jmp
xchg
rcll
cmp
add
data16
test
jp
add
add
rcrl
add
out
mov
loopne
add
jecxz
mov
mov
ds
fdivl
add
add
push
add
add
icebp
dec
jo
pop
xchg
iret
jg
dec
mov
pop
mov
and
sbb
add
add
inc
add
mov
xor
iret
dec
cli
lret
add
push
pusha
add
sub
idiv
xchg
jmp
pop
add
add
dec
test
xor
cmpsb
sbb
add
add
jg
movsb
inc
pop
xor
aam
mov
or
sbb
pop
outsl
mov
sbb
shrl
jp
dec
pop
mov
movsb
loopne
mov
adc
add
add
imul
mov
push
cltd
add
add
push
es
add
fldcw
aad
fcoml
add
add
inc
cld
mov
fwait
xorl
nop
bound
adc
add
jns
pusha
jnp
pop
inc
add
hlt
xchg
insl
lea
cmp
cmp
cmc
add
add
les
stos
add
or
push
movsb
cmpl
add
lods
jns
ljmp
add
add
xlat
dec
mov
pop
xor
pop
popf
gs
stos
sahf
inc
pop
das
xchg
add
mov
lods
dec
add
add
and
das
mov
sbb
push
jl
movsl
push
mov
push
pop
pushf
xchg
mov
sbb
lret
idiv
loopne
stos
mov
scas
cmp
in
push
pop
leave
dec
fiaddl
xchg
mov
adc
dec
cmp
sbb
mov
iret
sub
xchg
push
loope
in
add
scas
dec
daa
mov
dec
mov
jns
jno
daa
sbb
int
adc
add
outsb
sub
insb
xor
pop
jmp
out
xor
insb
add
and
hlt
adc
push
inc
ljmp
dec
cltd
sub
popf
add
scas
xlat
icebp
fnstsw
push
inc
add
add
gs
ja
pop
out
sarl
jo
mov
cmp
add
jp
sti
mov
add
and
xchg
arpl
ret
cmp
fildl
cmpl
pushaw
repnz
xchg
lods
bound
rclb
inc
mov
lcall
aaa
add
lret
insb
daa
adc
imul
adc
adc
jg
or
pusha
push
test
mov
and
fsubl
cmp
aad
cltd
in
repnz
xchg
xor
in
or
push
out
add
mov
mov
adc
ret
dec
lock
sub
jns
aam
xchg
mov
mov
shrb
sti
pop
sub
add
push
in
and
mov
mov
cmp
jmp
add
cwtl
cmp
subb
arpl
adc
dec
js,pt
test
hlt
mov
or
adc
cmc
je
scas
dec
outsl
jne
mov
sub
lahf
xor
in
sub
xor
dec
lock
push
push
inc
sbb
pop
push
outsb
mov
add
sub
add
cmc
std
push
push
xchg
cmp
adc
mov
test
call
loope
enter
sbb
sbb
testl
add
add
ds
mov
aam
scas
sub
mov
jge
mov
pop
adc
dec
or
sub
xchg
push
sahf
shll
or
add
movsl
xor
mov
jge
lahf
sti
push
test
out
cmp
jg
add
xchg
sbb
insb
sti
xchg
dec
push
nop
insl
ret
ret
sbb
xor
push
ss
stos
hlt
mov
adc
sahf
mov
xchg
out
je
sub
lds
shl
push
ds
fldcw
jmp
pop
lods
dec
pop
sbb
out
repz
mov
cmpsb
push
js
lea
stc
mov
or
inc
in
mov
call
scas
mov
sub
mov
add
sub
mov
loopne
and
xor
jne
sti
adc
jns
into
lods
inc
scas
fcompl
xchg
movsl
xor
xchg
sbb
pop
pusha
stos
int
aad
lahf
cmp
test
xor
or
insb
bound
pusha
inc
mull
lds
mov
sub
xor
cmc
fisubs
mov
adc
mov
ljmp
pop
sarl
outsl
cs
xchg
dec
into
and
andl
mov
add
add
add
add
inc
pop
add
add
pop
xchg
aam
mov
push
imul
add
adc
pop
out
std
or
sub
pop
mov
sbb
mov
mov
push
cmp
data16
xchg
stos
push
pop
lret
add
int3
testb
testl
mov
mov
mov
lea
adc
sub
xor
out
rclb
inc
push
idivb
push
leave
icebp
lahf
pop
in
add
fidivs
sbb
outsb
xor
and
pop
movsb
mov
push
add
adcl
negl
aad
in
push
dec
xchg
mov
out
ud2
mov
pop
into
insb
add
add
mov
imul
xchg
fucomp
cld
sub
mov
add
sub
cmpsb
cmc
int
outsl
jb
les
jl
mov
push
jp
dec
mov
or
enter
adc
ja
mov
call
add
add
mov
jmp
add
sub
mov
cmp
adc
aam
pop
cmp
add
sub
or
ljmp
adc
and
aad
add
add
or
in
js
inc
sbb
call
mov
ja
jbe
outsl
cmp
add
add
into
sbb
inc
negl
repz
xlat
jb
and
jbe
fildl
add
std
cs
mov
and
sbb
or
inc
mov
int3
imul
call
int3
shll
fldt
inc
push
andl
or
aam
add
pushf
into
sub
xor
insb
xchg
add
adc
inc
jl
pop
mov
int3
jns
push
fnsave
fisttpl
mov
push
push
pop
cmp
int3
sub
notl
add
add
fadds
mov
pop
lcall
dec
addl
add
or
jl
cmp
push
push
xor
xchg
sbb
add
mov
sub
shlb
and
inc
dec
inc
xchg
dec
cmp
insl
out
mov
pushf
mov
add
add
add
add
fwait
push
popf
mov
repz
or
in
mov
sbb
scas
adc
pop
pop
sbb
mov
add
xchg
sub
jmp
and
cltd
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cltd
das
or
test
and
or
add
jmp
add
repnz
stc
scas
jl
pop
js
mov
iret
xchg
xchg
adc
jg
sahf
jle
push
iret
notl
pop
mov
in
cmpsb
xchg
mov
movsb
xchg
call
add
push
addr16
pop
ret
or
std
mov
xchg
lods
loopne
shrl
loope
es
or
jae
sub
or
in
xorb
inc
and
sti
leave
jmp
add
pushf
xor
stc
push
pop
bound
adc
push
out
testb
in
pop
jmp
aaa
mov
jne
adc
jmp
mov
fldl
mov
xchg
adc
jno
imul
stos
ljmp
inc
pop
sysenter
ss
in
scas
je
mov
xor
sub
jmp
inc
push
xchg
lods
into
lds
jg
jecxz
sbb
push
bnd
jg
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
loopne
dec
ret
fmuls
ret
mov
lods
es
movsb
or
paddsb
out
sub
push
jnp
insb
adc
mov
pushf
into
aas
jge
xchg
jp
movsb
scas
add
sub
cld
test
addb
mov
add
add
mov
jmp
push
cmp
jbe
mov
add
rolb
sub
pop
out
sub
mov
add
movsb
sub
pusha
psubd
jno
cwtl
mov
lcall
xor
cmp
jle
lcall
add
sbb
cmp
mov
jl
loope
dec
xor
popa
mov
iret
sbb
cltd
xchg
int
cld
in
test
dec
mov
sub
aaa
xor
mov
jnp
xor
push
fimull
adc
cmp
dec
inc
adc
sti
test
aas
add
cmp
inc
xchg
xchg
mov
xchg
rclb
pop
cmp
pusha
add
inc
inc
add
cmp
add
inc
add
add
push
mov
add
sbb
add
fiadds
loopne
jae
dec
push
or
pusha
repz
add
add
sarl
lods
xchg
loope
sbb
and
mov
add
pop
add
add
jae
add
mov
pop
push
imul
pop
loope
add
js
push
lock
add
orl
adc
add
push
dec
add
or
add
test
add
mov
inc
add
pop
lds
mov
repz
add
add
lret
add
jmp
add
push
cmp
add
add
lret
call
mov
add
movsb
je
add
inc
add
movl
add
jbe
lahf
scas
aad
jo
add
jns
sbb
add
out
add
cld
add
add
add
add
jmp
push
or
add
sbb
add
icebp
mov
pop
push
cs
add
add
ret
cld
or
pop
add
add
fistps
add
dec
inc
add
add
add
int3
nop
clc
cmp
pushf
fildl
test
fcomi
popa
lret
jo
mov
mov
add
enter
flds
mov
gs
dec
adc
gs
sbbl
push
lods
iret
inc
icebp
adc
ret
dec
or
mov
mov
gs
dec
inc
fwait
sbb
sbb
int3
sbb
xor
inc
push
sbb
ss
add
lret
mov
or
sub
enter
jns
xor
outsl
and
ds
int3
out
jbe
xor
ja
mov
fbstp
add
dec
lock
mov
into
addr16
lods
imul
in
push
popa
lret
mov
dec
and
cmc
stos
clc
sbb
loopne
repz
jp
sbb
lds
jae
sti
rorl
inc
adc
mov
lods
pop
enter
adc
mov
aam
scas
xor
jmp
call
sub
lret
into
jp
popf
leave
mov
dec
icebp
in
push
push
sarb
xlat
pop
idiv
xchg
insl
rorb
xlat
and
sbb
cltd
inc
inc
jle
loopne
mov
cmpsl
popl
dec
adc
iret
outsb
jp
push
inc
pushf
dec
or
stos
cmp
xchg
pop
dec
pop
or
dec
jg
sbb
mov
adc
sbbb
shlb
js
pop
aam
cmp
push
sbb
add
int
aam
sub
sahf
int3
adc
adc
jb
jbe
cmpsb
jbe
and
pop
les
fsin
jb
outsl
lds
dec
add
add
add
inc
pop
gs
lods
aam
push
mov
movsl
mov
dec
mov
jp
loop
int
mov
or
clc
inc
iret
aaa
push
mov
popa
aaa
cld
xlat
outsb
xchg
ficoms
cmp
rorb
sub
mov
outsl
test
lds
scas
push
dec
mov
cltd
push
sbb
data16
add
ds
flds
xchg
mov
gs
xchg
adc
jecxz
add
add
xchg
cltd
pop
pop
flds
out
mov
pop
add
fildll
inc
pop
pop
pop
out
popa
adc
and
add
add
inc
pop
add
mov
xlat
imul
sbbl
fisubs
enter
subl
jo
je
arpl
hlt
add
add
adc
loop
lahf
jo
dec
cltd
idivb
xchg
jbe
jl
cmpsl
jno
jno
sbb
mov
and
lret
imul
test
push
cmp
std
lods
mov
negb
add
mov
add
setb
lret
mov
add
loopne
test
fidivrs
add
add
dec
aas
scas
pop
dec
scas
jne
lret
testb
outsb
lret
fisttps
mov
leave
lock
push
mov
cmp
popa
mov
add
add
lahf
mov
or
pop
inc
jle
movsl
add
add
ret
inc
dec
cmp
lods
or
add
add
or
dec
xchg
mov
jl
and
ljmp
adc
test
fmul
add
add
ficoml
jp
lods
out
add
fs
lcall
test
dec
jns
xor
ljmp
dec
add
add
inc
in
cwtl
dec
int
xchg
mov
fistpll
mov
mov
loopne
mov
data16
lds
mov
jne
pop
add
lea
out
cli
movsb
mov
add
mov
mov
adc
mov
xor
out
das
and
mov
push
mov
cs
mov
jmp
imull
lods
sarl
fwait
sbb
and
push
cli
js
rorb
lret
sub
xchg
rolb
pop
loop
dec
std
sbb
leave
dec
sbb
mov
leave
insl
insb
dec
dec
dec
cltd
sbb
or
call
add
arpl
adc
je
jne
inc
inc
jns
adc
lahf
aad
loope
adc
sub
orl
xor
jle
cmp
cmpsb
repnz
icebp
lret
sub
add
cmp
xchg
sbb
pusha
mov
int3
pop
cmpsb
bswap
mov
xlat
jbe
mov
in
or
add
rorl
fimuls
loope
jno
arpl
test
jge
and
lods
test
mul
fidivrl
inc
pusha
adc
cmpb
add
jmp
push
mov
sub
xchg
lret
repz
and
adc
mov
push
mov
pop
movb
mov
imul
insb
pop
lock
into
mov
xchg
lret
add
jno
stos
mov
push
int3
sub
lret
stc
loopne
fidivrl
into
sbb
sarb
add
add
add
add
add
mov
add
add
std
add
xor
add
add
repz
roll
add
add
add
add
add
xor
add
add
add
add
add
ror
add
add
add
aas
add
out
add
add
add
add
add
adc
add
add
add
add
add
movl
add
xor
add
add
add
fs
inc
xchg
or
xor
ret
daa
add
add
add
aaa
add
add
push
add
add
add
test
cmp
add
add
imul
or
and
add
lods
dec
pxor
fiaddl
xorb
inc
int3
into
pop
and
mov
out
jo
je
and
imul
and
push
mov
stc
imul
fsubr
fs
fdivrs
jl
xchg
insl
xorl
mov
cmpl
rorl
add
cmc
mov
cmp
add
fcomip
fcmovbe
jmp
cmpsb
or
orb
add
in
decl
nop
inc
popl
cmpsl
lods
into
stos
push
shlb
cld
add
add
xchg
vpshaw
sbb
add
add
add
cmpsb
loop
dec
cwtl
mov
fisttpll
stos
mov
push
fucomi
movsl
jl
ret
insl
push
mov
adc
lock
sbb
inc
push
mov
fisttpll
xlat
int
pop
sub
push
xor
ljmp
addb
jbe
cmp
adc
or
pop
sbb
cmp
pop
inc
pop
xchg
mov
cmp
aam
popf
pop
add
mov
add
insb
add
add
add
adc
aam
in
jns
jmp
add
add
add
add
add
add
add
add
data16
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
xor
sbb
or
add
cmpsb
add
add
add
popf
add
add
add
cltd
add
add
add
add
add
outsl
add
add
add
add
add
add
add
dec
add
add
sub
arpl
pop
add
add
add
add
add
add
cltd
add
add
add
add
add
add
add
in
add
imul
call
add
add
add
mov
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
clc
add
mov
jne
add
xchg
add
add
rolb
stos
add
es
pop
push
dec
pop
iret
into
mov
and
imul
sbb
js
pop
pusha
sub
sub
jmp
rol
mov
dec
data16
cld
add
add
add
add
dec
xchg
test
or
xor
lds
lock
imul
ds
cmp
stos
jl
popa
mov
adc
loope
add
add
add
add
testb
add
add
add
add
add
add
xor
dec
add
jae
mov
add
mov
add
add
add
add
add
jle
cmc
add
add
out
mov
xchg
add
add
add
add
add
add
roll
add
dec
add
add
add
add
add
rcr
cmp
mov
fistl
loopne
dec
lahf
cmpsl
leave
or
nop
rolb
lods
stos
orl
fisubs
faddp
stc
jae
test
add
push
mov
mov
xchg
test
addr16
xor
hlt
xor
ret
mov
lods
es
pop
dec
fxch
int
add
and
stc
push
addr16
dec
sbb
imul
sub
ja
xor
mov
rorb
add
out
outsb
imul
pushf
daa
xor
push
les
cmp
sahf
icebp
mov
leave
xchg
jecxz
fwait
pop
lcall
insl
into
push
sub
movsl
xchg
pop
mov
sub
adc
jae
fldt
insl
daa
or
int
les
push
lods
inc
dec
je
push
adc
nop
lea
cmp
adc
cld
icebp
je
add
cmp
jg
adc
inc
and
pop
test
add
aam
xor
mov
stos
icebp
push
pop
lea
enter
mov
lahf
sub
cwtl
stc
inc
or
out
rcrl
xchg
push
mov
in
fdivl
btr
test
add
test
stos
pop
scas
aad
in
push
mov
push
sbb
mov
cld
pop
push
jle
inc
lcall
and
cmp
or
sub
pop
pop
jnp
push
push
dec
xchg
into
lods
mov
in
imul
dec
aam
cmpl
bound
pop
push
mov
idivb
cwtl
push
xchg
in
mov
jo
or
mov
stos
mov
pop
mov
das
adcb
jo
aam
leave
push
rclb
dec
add
mov
push
sub
scas
int3
jmp
mov
xor
ja
sbb
cmp
jo
adc
xlat
mov
sbb
push
mov
cmp
aam
or
pop
xchg
mov
dec
fsts
scas
add
iret
mov
sbb
xor
push
mov
mov
adc
fnstcw
stos
sub
lods
fisttpl
cmpsb
or
sti
dec
movsl
adc
mov
adc
rcr
sbb
repz
mov
jg
xchg
fcomp
sti
adc
sub
ja
bound
in
sub
or
adc
mov
in
fisttpll
out
mov
dec
je
out
and
push
rcll
push
cld
xchg
cltd
dec
repnz
lea
subb
std
daa
filds
cmp
xchg
test
std
rcll
dec
jmp
nop
in
push
push
inc
aas
or
daa
int3
into
mov
daa
scas
xchg
xor
lret
test
and
test
sarb
pop
push
mov
cmp
je
fiadds
aas
push
nop
mov
dec
fisubrl
test
mov
push
pop
je
mov
dec
ret
rcrl
and
aam
bound
aaa
mov
imul
aas
sti
test
adc
dec
mov
xchg
nop
push
adc
inc
loop
ret
push
sub
int3
mov
xchg
fcmovnbe
hlt
push
ror
adc
cltd
mov
rolb
add
add
and
repnz
insb
jne
xchg
sub
dec
lea
vmovntpd
insb
add
add
cmp
add
pop
xchg
add
mov
bound
add
add
fsubr
add
add
pop
add
jl
jbe
add
adc
add
pop
mov
add
in
enter
add
mov
outsl
data16
add
add
aas
add
add
mov
add
aad
cld
clc
mov
add
add
outsb
sbb
loope
pop
jne
add
mov
add
cmp
ret
lea
add
add
or
inc
xor
pop
add
xor
rcll
add
add
mov
add
adc
in
fildl
add
add
sarl
add
add
sub
mov
fnstcw
int
pop
add
in
and
add
popf
inc
add
je
add
repnz
sbb
hlt
xchg
lcall
dec
imul
scas
cmp
aam
jp
dec
add
add
out
ss
dec
dec
inc
test
inc
cwtl
pushl
add
int
lahf
inc
das
int3
jno
fdivl
fildll
add
add
add
add
add
add
dec
test
loope
mov
mov
cmp
test
push
add
add
add
add
add
add
inc
push
cmpb
xchg
flds
cmpsl
dec
lock
inc
in
into
mov
mov
add
adc
push
xor
add
add
jecxz
std
pop
add
add
dec
in
testl
cld
mov
add
stos
lods
arpl
add
add
daa
test
xchg
filds
sub
xchg
add
add
add
add
add
add
add
fs
add
add
and
xor
add
jbe
adc
adc
into
add
add
pop
test
add
xchg
adc
lds
add
add
mov
and
xor
add
add
mov
add
pop
aaa
hlt
aam
nop
add
jle
in
add
add
add
repnz
add
add
xor
inc
add
add
and
add
lret
mov
add
lea
leave
add
add
addb
add
add
es
add
push
aam
add
add
add
add
add
add
add
or
lcall
cli
add
add
add
arpl
add
xchg
mov
sub
add
mov
inc
add
add
add
faddp
fiaddl
add
add
xchg
fstpl
dec
cmp
add
je
add
add
add
sahf
roll
add
add
repnz
ror
adc
add
xchg
leave
add
add
add
add
add
adc
add
add
add
sbb
add
add
mov
push
inc
add
add
fidivrs
add
cmp
add
sub
inc
add
add
add
add
int
cli
mov
rolb
add
add
pop
dec
xchg
add
add
add
cmpb
add
add
add
add
add
add
add
add
pop
std
insb
add
add
lods
pop
sub
add
add
mov
add
add
out
add
add
add
pop
adc
add
add
cld
mov
ljmp
add
lods
cltd
add
add
add
add
dec
jne
sub
mov
lock
add
add
cwtl
add
add
add
add
add
in
inc
add
add
adc
xor
add
icebp
mov
add
add
cmp
out
push
add
cmp
std
add
xchg
add
loope
add
cmpsl
add
lods
sub
outsl
ja
add
add
pushf
mov
add
test
add
jae
in
or
xchg
mov
add
nop
mov
loopne
test
sahf
sarl
insb
cwtl
loope
out
cwtl
add
sub
add
push
add
jbe
mov
add
cmc
aad
shlb
push
or
add
push
imul
xor
sbb
lods
cld
sub
and
pop
add
test
add
ja
push
lcall
cmp
mov
add
and
test
test
out
mov
add
add
add
outsb
push
add
pop
mov
add
push
add
add
xor
add
inc
add
add
add
stc
int3
or
push
aad
sarl
addl
or
mov
shll
insl
in
clc
vpcmpgtb
jp
or
aaa
lock
lret
out
mov
push
sbb
fsub
bound
ficompl
inc
add
add
int
mov
ret
sbb
mov
inc
test
mov
inc
or
iret
mov
and
add
scas
xlat
jg
addr16
aam
add
sbb
sbbl
xor
add
push
ss
out
pop
add
sub
adc
or
add
stc
xor
mov
repz
dec
push
inc
mov
add
pop
enter
push
pop
jecxz
addps
xchg
pop
inc
push
cltd
add
rolb
or
test
cld
lret
xchg
cs
fnstsw
add
xchg
cmp
sbb
sbb
sub
mov
xor
adc
popa
add
jnp
jbe
insl
movsl
insb
in
aad
subb
mov
imul
mov
add
jmp
and
mul
shr
add
xchg
sub
sbb
orb
add
hlt
fistpl
pop
or
call
lods
pop
enter
xchg
arpl
fdivl
push
mov
lea
repnz
add
push
xchg
test
jnp
enter
into
data16
iret
mov
mov
pop
add
fstpl
out
mov
pop
out
insb
fcmovnb
or
sub
or
add
jecxz
push
adc
mov
xchg
pop
repz
pusha
or
xchg
cmp
pop
dec
dec
inc
cltd
or
add
add
ret
daa
inc
dec
pop
adc
cmp
dec
dec
jg
sbb
sahf
add
sub
rorl
adc
add
sub
das
sub
daa
add
and
popa
sldt
inc
push
cmp
bound
and
in
jns
aam
add
adc
insl
mov
lock
mov
add
fistpll
inc
rcrl
adc
ss
stos
xchg
push
add
xchg
jmp
aas
pop
push
cmp
jg
std
ljmp
data16
lcall
pop
les
push
rcrb
and
mov
add
mov
and
movsb
pop
dec
repnz
sub
lret
subb
xchg
fsubrl
fwait
pop
jae
add
fisubrl
sbb
stos
pop
pop
loopne
or
int3
add
sub
xchg
pop
add
movsb
cs
test
mov
add
mov
inc
lea
inc
gs
loope
sub
ret
cmp
sarl
inc
outsl
xchg
pop
pop
dec
stos
add
pop
rorl
push
int
nop
inc
aas
fldt
movsl
cmp
inc
int3
fnstcw
pop
lcall
push
jp
cmp
xchg
add
movsl
dec
mov
roll
sti
jl
add
add
mov
pop
lods
inc
ret
add
mov
mov
fdivrp
pop
shlb
mov
inc
pop
or
mov
sti
add
stos
enter
cmp
xor
mov
cltd
lret
call
sbb
fisttpl
leave
xor
lahf
xchg
xor
jmp
mov
cltd
add
pop
and
and
bnd
andl
movsb
or
out
out
jge
addr16
add
cmp
mov
dec
and
cmp
popl
enter
mov
inc
mov
inc
or
in
add
push
sar
call
outsb
or
lods
cmp
popl
add
outsb
push
mov
dec
add
mov
add
insb
jo
cmp
imul
popa
mov
add
add
add
push
stos
add
push
leave
add
add
out
add
jl
add
add
sub
add
add
add
add
add
xlat
jo
out
add
adc
addb
add
add
add
add
push
add
add
add
xchg
inc
add
add
les
add
lcall
add
add
add
or
inc
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
xchg
in
adc
add
xchg
daa
inc
add
add
add
test
add
add
push
add
add
add
add
add
add
test
cs
add
jne
sub
xchg
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
pop
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
test
add
add
add
add
add
fildl
add
add
add
xor
add
inc
add
add
add
add
add
add
add
rolb
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
enter
jmp
add
fadds
add
cmp
add
inc
add
add
add
add
add
add
add
add
add
add
add
fidivrl
add
add
add
data16
xor
add
inc
add
xchg
sub
mov
and
push
add
add
sbb
cli
mov
mov
ja
cld
cli
xor
add
add
add
mov
out
insb
xor
aam
jno
rolb
dec
ja
ljmp
add
mov
ja
xlat
ret
push
lods
or
ret
pusha
into
inc
mov
cltd
js
add
add
add
cmp
xchg
test
std
rcll
dec
jmp
nop
in
push
push
inc
aas
or
leave
enter
mov
pop
aas
pop
bound
leave
insl
out
xchg
push
or
add
add
fucomp
push
out
inc
jl
fmul
jmp
jbe
mov
das
je
repnz
sbb
add
inc
mov
das
and
int
inc
mov
fdivp
jp
push
add
add
add
mov
cltd
xorl
sbb
cmp
mov
icebp
xor
pop
imulb
add
jle
call
add
add
add
add
add
add
add
add
add
add
pop
dec
fildl
add
add
and
add
add
add
push
add
test
mov
add
add
add
add
gs
mov
aam
add
add
add
arpl
add
add
add
iret
lea
add
add
aam
xchg
mov
xor
add
add
add
xor
add
sbb
add
ss
pop
add
gs
add
lahf
leave
ja
repz
jae
jne
add
add
mov
add
add
add
add
add
add
add
add
push
add
pop
add
mov
add
dec
jns
add
test
add
add
add
add
add
cmp
sub
clc
add
mov
add
sti
add
mov
add
push
xchg
add
fsubs
ret
add
cld
mov
mov
add
add
fcomp
add
push
add
dec
add
movsb
add
fbstp
add
mov
mov
add
rcrb
add
add
xor
add
jl
add
pusha
add
lea
movsb
add
filds
cmp
add
test
roll
add
dec
pop
cld
add
gs
add
int
add
test
daa
add
fnsave
les
inc
mov
add
lret
stos
mov
add
into
sbb
fisttpll
add
add
add
add
add
jne
add
fwait
jl
loope
sub
out
lock
xchg
pop
add
push
add
and
call
test
add
xor
add
xor
fimuls
bound
jge
add
xchg
add
add
add
and
add
fidivrl
add
add
add
cmc
mov
popa
cmpsl
nop
add
test
add
cmp
ljmp
cli
mov
add
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
dec
add
add
add
add
add
and
add
lods
sbb
add
std
insb
xchg
add
add
add
add
add
js
add
add
add
add
or
movsl
add
mov
add
add
add
add
and
add
xor
cltd
add
add
add
jbe
mov
out
out
addr16
stc
jb
add
popa
jo
stc
push
mov
jl
adc
stos
cmp
movsb
or
jno
lahf
pop
adc
dec
jmp
mov
roll
jns
out
pop
js
push
leave
addr16
daa
imul
cmpsb
xchg
sbb
arpl
pushf
mov
adc
or
xchg
fistl
cmpsl
aas
test
test
xor
push
xor
xchg
cld
jo
loope
insl
int3
or
or
and
dec
movl
xchg
js
push
jns
int3
lret
add
and
cwtl
out
jae
cmp
cmc
xchg
mov
push
das
push
imul
add
push
xchg
mul
aaa
mov
pop
xor
inc
jmp
mov
mov
sti
jns
fs
test
jp
and
pmaxsw
out
mov
xor
repnz
addr16
stc
jb
add
popa
jo
stc
push
mov
jl
and
movsb
or
jno
lahf
pop
adc
dec
jmp
mov
mov
pop
adc
sbb
or
out
add
mov
lcall
pop
fiadds
mov
fs
mov
mov
xor
push
shlb
inc
xlat
lahf
scas
daa
mov
cli
lock
fadds
xchg
add
addr16
dec
pop
mov
jne
push
outsb
cmp
pop
mull
and
xchg
jg
push
js
int
and
pop
es
cmp
xchg
cmp
lock
sub
mov
jnp
jp
pop
fwait
hlt
loop
lea
test
xor
inc
out
inc
cbtw
inc
mov
mov
jnp
push
xchg
sbb
and
lods
scas
or
divb
lock
popa
pop
sti
jo
or
pop
out
mov
jb
daa
inc
lods
cmp
cmpsb
xor
lods
idivl
ja
popf
push
push
mov
popa
or
clc
sub
jl
popf
es
ds
rorb
aas
jns
mov
mov
test
push
or
loope
rorb
mov
bound
add
aad
imulb
subl
xor
popf
test
ss
clc
neg
ret
fiaddl
stc
push
popa
mov
dec
adc
ja
dec
jo
cmp
icebp
pusha
cmp
repz
fstl
or
push
pop
mov
mov
aas
xchg
icebp
addr16
mov
push
test
jnp
pop
cwtl
cmc
in
mov
jmp
inc
in
inc
imul
and
test
jp
imul
lods
fldt
xor
es
jmp
jmp
lods
int3
scas
icebp
ljmp
popf
xchg
adc
in
mov
jae
es
lods
cmp
cltd
xor
lods
lock
xchg
push
sbb
or
sti
sub
sub
mov
adc
push
cmp
mov
mov
test
push
or
dec
jb
mov
sahf
roll
cmp
sub
xchg
pop
aam
test
mov
push
ffreep
add
imul
mov
inc
adc
sahf
dec
jae
cmp
sub
test
subl
enter
subl
bound
cltd
mov
jno
shl
stc
lret
fwait
mov
pop
pop
mov
test
je
pop
cltd
repnz
xor
lret
in
in
dec
push
int
mov
and
jne
push
outsb
jae
sbb
es
jecxz
mov
int
mov
jmp
pop
cmc
jle
or
insb
pop
in
mov
jo
and
cmp
cwtl
xor
stos
icebp
cmp
sbb
ja
arpl
cmc
cli
sub
jle
jmp
arpl
dec
mov
bound
mov
sbb
push
lods
fwait
jnp
repnz
imul
mov
push
mov
imul
lret
mov
cltd
jg
test
push
sbb
or
or
jo
dec
movsb
arpl
or
pop
scas
jo
adc
and
push
sbb
mov
test
cmpsb
cwtl
pop
add
loop
dec
push
je
fwait
add
mov
inc
xor
sahf
pusha
cltd
jge
jae
lret
iret
sbb
or
jl
pusha
inc
mov
xchg
je
sbb
xchg
cli
stos
mov
clc
pushf
sub
xor
fcomp
adc
call
popf
push
dec
hlt
xchg
out
lock
mov
insl
fisubrl
shr
cmp
jge
outsb
xchg
in
subb
mov
and
pop
clc
inc
ja
sbb
addb
inc
add
pop
xlat
jns
adc
add
nop
dec
loope
mov
subb
jns
pop
sahf
xchg
dec
mov
pop
or
adc
mov
mov
pop
aam
fidivl
xor
jne
jle
out
push
xorb
push
push
movsb
jg
add
es
pop
filds
xchg
jae
sahf
xlat
stos
bound
ljmp
pop
loop
inc
or
xchg
mov
dec
xor
pop
fwait
arpl
jne
fxch
adc
pop
aad
jns
frstor
jl
mov
xchg
jbe
add
stos
xchg
cmp
das
xchg
outsb
dec
aas
mov
push
dec
dec
ljmp
dec
aam
nop
in
repnz
jp
push
ds
mov
adc
push
fsubrs
shr
es
pop
jle
loopne
popf
in
add
pop
adc
sub
adc
xor
pop
cwtl
lds
mov
push
dec
dec
adc
mov
jecxz
test
sbb
jle
in
adc
sahf
xchg
in
out
pusha
hlt
mov
adc
mov
xchg
sti
int
enter
pop
iret
jmp
push
sbb
cmp
cmp
idivb
mov
pop
push
movsl
hlt
pop
addb
movsl
les
xchg
test
stc
mov
mov
stos
jb
ljmp
fnclex
notb
jle
movsl
adcl
jl
or
xchg
fstpt
pop
fwait
jg
gs
inc
add
sub
cmc
jns
inc
enter
out
mov
ljmp
dec
sbb
xchg
push
ret
or
add
dec
shlb
sti
sarl
and
mov
xchg
push
ja
dec
sbb
jg
bound
int3
mov
pop
adc
cmp
out
pushf
push
outsl
sub
sbb
clc
inc
add
jl
jno
sarl
sbb
add
daa
cwtl
cwtl
dec
jmp
mov
ljmp
xchg
xchg
dec
mov
jecxz
xor
test
popa
leave
mov
nop
js
test
jge
fistps
fadd
mov
cmp
ja
inc
xchg
mov
pop
mov
cmp
inc
sbb
les
lahf
jbe
xchg
lods
test
aam
mov
push
pop
out
dec
or
xchg
cmpsl
not
pop
xor
or
push
and
dec
rcrb
push
aam
js
shlb
inc
scas
jbe
jnp
add
test
int
fwait
sub
dec
cmp
int3
lcall
out
push
add
add
mov
jp
push
add
sbb
ja
lret
out
aas
dec
pop
jno
loope
fwait
lret
cmp
cmp
mov
mov
lahf
inc
pop
xchg
sarb
jo
push
jl
or
inc
cmp
fstpt
push
ret
push
xchg
pushf
inc
cltd
xchg
pop
addl
loop
aam
pop
add
daa
adc
pop
ss
and
push
xlat
cmp
push
cmp
dec
and
adc
push
ds
rcrb
popf
cmp
inc
lcall
pop
pushf
imul
popa
dec
fcomi
lea
add
ljmp
push
lret
fbstp
enter
sub
movsb
pop
lahf
push
push
stc
mov
nop
jmp
data16
jmp
cmp
jle
push
daa
push
insl
les
xor
xchg
daa
or
popa
lods
cmp
inc
mov
add
or
in
push
lods
ljmp
mov
insl
jnp
hlt
mov
push
jae
test
stc
sub
sbb
cmp
add
xchg
pop
dec
jb
sar
dec
ror
sahf
aam
jae
popa
in
inc
lock
fwait
cmp
xchg
inc
inc
stc
fbld
sbb
push
popf
pop
inc
add
repnz
int
xchg
mov
xchg
and
mov
pop
xchg
sarb
pop
fisttpl
xchg
out
push
adc
dec
mov
cmp
dec
sbb
rorl
loop
and
test
mov
repz
inc
clc
cs
pop
jl
xchg
or
hlt
dec
or
mov
pop
nop
pop
in
jnp
rol
adc
or
lea
clc
adc
stos
add
adc
cmp
rorb
push
xor
adc
stos
out
enter
pop
xor
mov
aaa
cmove
ret
jb
cmpsb
in
bound
inc
inc
mov
xchg
ljmp
ja
xor
add
xchg
pop
dec
jno
rclb
jnp
mov
inc
testb
push
testb
pop
fidivl
and
int
hlt
scas
push
addr16
ss
jns
or
int
cli
rorl
lea
sub
inc
pop
push
pushf
or
arpl
lret
or
push
sbb
cmp
out
mov
loop
or
and
mov
fidivs
mov
pop
pop
pop
mov
cmp
or
mov
nop
jbe
mov
jno
lret
ss
add
jl
mov
inc
push
adc
dec
shlb
sarb
roll
xor
push
push
out
mov
negl
cwtl
movsl
sub
ds
push
popf
fld
xor
push
pop
sbb
mov
pop
idivl
jp
or
cld
dec
jg
mov
dec
or
dec
call
push
ss
xor
adc
mov
adc
ja
dec
push
imul
in
jle
call
outsl
lret
dec
and
xor
ret
rcl
sbbl
std
dec
add
xor
xorps
xor
testl
stos
push
in
mov
pop
cld
out
pop
adc
lods
std
or
xor
jge
arpl
mov
jge
iret
shrl
aad
gs
push
outsb
dec
mov
push
and
mov
push
dec
ficoms
xchg
and
xchg
xchg
iret
popa
cli
ret
inc
inc
out
in
xor
or
rorb
jg
push
sub
dec
pop
shlb
fcoms
add
mov
in
push
lods
enter
out
imul
xor
sbb
stos
pop
push
jo
arpl
inc
cmc
sub
and
pop
add
mov
ror
ja
insl
mov
insb
out
jnp
in
jnp
sbb
mov
ja
iret
push
rcl
andb
inc
sbb
dec
mov
jne
cwtl
cmp
or
mov
cmp
dec
adc
aam
cmp
and
movsb
mov
int3
lock
or
or
pop
adc
popf
scas
lcall
or
xor
mov
push
sub
into
les
jae
int3
push
pusha
sbb
imul
pusha
jg
mov
pop
dec
sub
imul
xchg
xchg
cmpb
jecxz
or
add
sub
mov
lret
xor
pop
xor
or
fstpl
dec
insl
scas
loop
repz
out
sbb
aas
sbb
enter
add
jbe
ret
dec
mov
inc
or
loopne
out
dec
xchg
mov
pop
pusha
add
cs
mov
test
sbb
xchg
nop
xchg
xchg
testl
jmp
or
lret
dec
dec
ja
addb
push
lret
jmp
sub
loopne
lods
loopne
mul
loop
mov
pop
adc
movaps
bound
in
sbb
pop
jp
xchg
xchg
stos
gs
cld
jmp
xor
shrb
pop
lret
mov
out
adc
sahf
movl
push
pop
ljmp
jae
xor
int3
lods
aas
cmp
popf
add
ljmp
scas
inc
sahf
inc
adcl
inc
ficoms
push
jg
xor
movsb
movsl
enter
xor
test
stc
sbb
pop
jge
dec
and
hlt
jge
xor
jb
out
sub
pop
in
in
ret
inc
shlb
mov
push
test
imul
in
filds
in
or
adc
mov
xchg
scas
adc
mov
pop
loope
mov
pop
inc
inc
and
mov
test
mov
int
sahf
movsl
rolb
les
cltd
mov
sub
push
and
dec
pop
push
mov
shrl
in
mov
bound
int
shrb
movsl
push
cli
cmp
jge
jg
dec
inc
icebp
orl
int3
aas
loopne
sbb
jmp
pop
add
fidivs
pop
mov
je
mov
inc
cmp
push
mov
inc
push
lea
decl
dec
jns
out
lock
sti
sbb
inc
push
aam
inc
jg
std
mov
int3
out
mov
mov
ret
int3
incl
and
loop
xchg
pop
movsb
lahf
xlat
orl
stc
jne
sub
mov
xor
mov
cmc
ret
out
shr
cwtl
or
imul
push
pop
clc
inc
push
pop
neg
pop
lret
dec
sub
imul
in
cmp
mov
lcall
ljmp
int
lcall
gs
jne
out
repz
sti
repnz
add
stos
test
mov
lds
sub
sahf
iret
cmp
xchg
ret
jns
jbe
int3
push
hlt
iret
aas
add
add
pop
fidivrs
dec
popf
ljmp
adc
inc
ja
into
nop
lods
xchg
mov
xchg
pop
or
gs
iret
inc
or
cwtl
cmp
mov
loopne
inc
inc
scas
mov
test
jg
push
and
enter
fstpl
mov
cs
in
mov
inc
ror
add
jo
cmpsb
repz
or
cwtl
fwait
pop
or
dec
mov
mov
stc
or
in
sarb
adc
orb
std
mov
mov
cmpsb
or
mull
push
ret
push
push
inc
or
mov
mov
or
out
cmp
jecxz
cli
fcoms
adcb
stos
push
loope
adc
jmp
je
loop
aad
js
push
xor
cli
cmp
mov
add
adc
cwtl
cli
push
scas
jae
and
out
push
fcom
incl
jl
add
sbb
ds
pop
sbb
mov
lcall
xchg
inc
dec
mov
xchg
xchg
scas
fld
pop
fadds
into
shrb
lcall
out
dec
icebp
xor
xabort
lret
xor
cmp
pushf
xchg
jno
xorl
div
scas
pusha
cmp
fildl
add
stc
lret
into
inc
out
xchg
pushf
nop
in
aas
sbb
and
imul
dec
loope
out
in
ret
jno
fwait
xchg
lahf
pop
fwait
das
inc
push
dec
cmp
mov
jp
fs
jns
scas
mov
std
scas
repnz
pop
addb
mov
mov
fisttpl
outsb
cmp
or
mov
ficoml
addr16
repz
outsl
insb
lret
je
xchg
shrl
jae
mov
mov
adc
and
lods
rorb
dec
int3
mov
push
icebp
push
jmp
pop
inc
xchg
movsl
cmp
dec
or
mov
mov
cmp
cmpsl
cld
in
adc
pop
sbb
mov
fcoml
sbb
repz
pop
fisttpl
popf
fdivp
loop
lock
inc
sbb
mov
add
cmp
cmpps
cmpsb
add
fucom
test
outsb
rclb
int
jne
xchg
out
cmp
xchg
jle
into
push
loopne
movsb
mov
jl
cli
out
adc
iret
push
xchg
or
jl
lret
mov
sub
repnz
das
stos
out
xlat
push
leave
push
inc
mov
push
dec
mov
lods
cmc
int3
jno
mov
loope
orl
mov
icebp
dec
sbb
push
scas
lods
wrmsr
jbe
enter
pop
push
mov
std
ss
dec
fstpt
rcl
sbb
cs
fwait
shrl
addr16
lahf
cmp
pop
jecxz
rdpmc
and
jp
faddl
mov
roll
call
and
xor
pop
push
mov
mov
stos
jg
icebp
push
cld
mov
mov
and
fidivrs
cli
or
fcmovnu
int
out
jo
inc
imul
jmp
jno
or
pop
leave
cli
dec
inc
outsb
fstl
insb
vcmpsd
fwait
jp
scas
jmp
cmp
lcall
or
in
mov
dec
mulb
cli
out
or
cs
test
mov
dec
lret
test
jecxz
xor
js
mov
xchg
mov
les
test
xchg
fimull
sbbl
jp
xor
sub
inc
scas
mov
iret
sbb
dec
xor
cmp
or
stos
in
dec
insl
sub
adc
pop
lock
in
adc
popa
xchg
mov
adc
pop
loop
scas
add
stos
sbb
mov
test
int
and
pop
ja
ret
lcall
int
push
hlt
add
mov
add
aaa
sbb
xchg
inc
lcall
icebp
out
xchg
pop
pop
fstps
fcmovbe
insb
stc
inc
xchg
xchg
in
adc
add
aas
jno
or
insb
add
mov
mov
popa
pop
fsubr
dec
lret
lds
mov
js
push
mov
call
lock
les
xchg
mov
mov
jne
mov
xchg
faddl
hlt
ficoml
dec
dec
imul
not
push
je
enter
add
icebp
scas
jnp
mov
xchg
or
outsb
xor
into
and
fwait
adc
and
lahf
cld
aaa
jnp
mov
cli
lods
mov
add
push
and
ja
cmp
mov
outsl
mov
flds
xorl
gs
cmp
xorl
xchg
dec
cmpsb
jmp
orl
dec
xlat
in
xchg
jne
loop
xchg
adc
mov
test
lds
shl
cli
add
scas
in
cmp
sti
addl
jmp
mov
lds
or
pop
lcall
xchg
mov
sbb
dec
cs
movsl
cli
push
jg
pop
mov
cmp
push
insb
rorl
scas
lock
movsl
sub
rorl
incl
jl
add
ja
outsb
call
pop
push
leave
aam
and
repz
cmc
cwtl
ret
aaa
test
jno
push
xchg
jmp
jns
popf
pop
pusha
repz
adc
pop
clc
loop
adc
mov
int3
push
and
movsl
pusha
or
adc
add
cmpsb
jo
test
andb
cmp
sub
out
xchg
rol
push
testl
jecxz
idivb
pop
lret
stos
dec
cmp
lret
sub
cmc
sbb
jl
cli
mov
lea
divb
xchg
test
push
call
testb
adc
mov
jo
jp
lds
in
sarb
xchg
adcl
push
push
adc
cmp
incb
push
stos
hlt
mov
jns
adc
mov
fs
mov
lret
mov
and
addr16
adc
mov
inc
aas
push
pushf
lret
adc
das
push
push
leave
xchg
idivl
jbe
and
mov
mov
mov
lcall
push
add
dec
shlb
in
imul
sbb
pop
add
sbb
jl
jne
mov
icebp
push
pushf
mov
addr16
and
mov
xor
fcmovu
mov
push
jo
aad
mov
or
fiaddl
data16
loope
ja
repz
pop
clc
test
test
inc
mov
push
dec
jmp
mov
rolb
shlb
clc
negb
jae
pushf
in
sbb
lds
out
in
movsb
pushf
mov
notb
mov
in
and
js
fs
mov
sarb
mov
fmull
xor
cmpl
inc
lods
adc
fsubs
in
lds
add
xchg
jbe
scas
out
and
fwait
jbe
jno
jmp
loopne
lock
and
sbb
mov
dec
jge
popf
inc
mov
adc
lcall
mov
or
lods
or
pop
cmp
inc
imul
pop
mov
nop
mov
cmovs
cld
dec
rcl
inc
pop
mov
inc
icebp
push
fisttpll
xlat
sub
xchg
adc
mov
imul
dec
push
inc
lret
mov
jae
fs
dec
mov
rorb
icebp
mov
loopne
adc
xor
popa
dec
rcrb
aam
adc
pop
or
leave
push
xor
pushf
mov
xchg
or
scas
int
pushf
pushf
popf
fimuls
movsb
hlt
out
daa
ret
sbbb
mov
mov
in
xor
flds
xchg
js
add
aas
sub
push
fdivs
sub
mov
scas
out
jno
dec
xchg
adc
mov
inc
cwtl
sbb
adc
sbb
jnp
adc
inc
add
int
mov
pop
mov
rcrl
leave
push
push
inc
fyl2x
push
sbb
movsb
xor
mov
stc
lods
out
jmp
mov
or
push
insl
aam
dec
cmp
lcall
sbb
hlt
cld
xchg
movsb
lds
lret
or
ja
popf
xor
inc
mov
mov
and
arpl
ds
pushl
aam
ljmp
data16
call
inc
cmp
fcomps
fs
jo
movsb
mov
xchg
fstpl
jnp
enter
nop
lea
test
push
in
pop
jns
xor
mov
xchg
mov
and
xchg
fimull
test
jne
mov
pop
fmuls
mov
insl
cs
mov
ds
push
test
shl
push
sub
pop
mov
jmp
bound
add
sbb
lock
pop
stos
call
push
adc
pop
pop
mov
pop
shlb
out
mov
inc
imull
data16
inc
pushf
imul
mov
outsb
leave
roll
repz
jge
jecxz
daa
pop
repz
jmp
popf
icebp
pop
add
mov
movb
inc
jne
sub
ds
jb
lahf
inc
jae
jmp
mov
adcl
insb
aad
fistl
sbb
shr
out
lcall
mov
imul
loope
cwtl
push
rclb
sbb
ret
into
push
adc
popf
jbe
pop
insb
or
lds
adc
jbe
loop
repz
lods
rol
out
mov
sti
cmp
leave
xchg
mov
out
inc
adc
out
jne
sub
lods
out
cld
mov
mov
mov
xchg
dec
inc
mov
les
mov
add
dec
sar
push
ffreep
cmp
mov
xor
dec
xor
idiv
mov
or
pop
mov
lret
push
mov
lea
sbb
adc
sbb
ret
cli
js
je
shl
jge
push
mov
jle
pop
les
sub
lahf
ja
xchg
cmp
das
lds
mov
push
int
in
jg
adc
cmp
add
jno
mov
in
cld
xor
shll
leave
out
in
divb
sbb
push
mov
push
stc
addr16
cmc
cmpsl
sbb
cli
add
dec
sub
sub
adc
xor
int
sub
cltd
stos
out
push
out
mov
mov
jns
roll
je
sar
loopne
lock
fcmove
jnp
push
loopne
decb
push
aad
mov
cmp
mov
fs
sbb
repnz
leave
lds
fmuls
es
mov
inc
inc
dec
mov
cmp
lret
sti
pop
mov
shrb
push
in
jo
fdivp
and
mov
ret
jns
movl
ficoms
lock
jnp
add
pop
or
int
jae
and
cli
push
repnz
adc
xchg
jmp
cwtl
stc
cmpsb
sbbl
inc
jne
xchg
jnp
adc
bound
jbe
in
dec
jp
aad
imul
adc
popa
jb
stos
push
pop
jge
out
sub
xchg
das
add
push
es
add
adc
cmp
inc
push
add
repz
mov
sbb
pop
jge
mov
clc
sub
jl
xadd
mov
dec
fisubs
sti
xchg
aad
xchg
mov
sbb
and
out
inc
insl
nop
jp
lret
das
sbb
psubd
push
or
mov
scas
leave
cmp
add
insb
cmp
icebp
add
pop
xor
inc
pop
das
call
push
add
xchg
lahf
sbb
or
and
adc
mov
pop
sbb
stc
mov
mov
mov
add
jae
addr16
je
dec
sahf
pop
mov
and
dec
cmc
jg
push
lds
cmp
mov
pop
pop
adcb
push
jecxz
rcrl
inc
ret
or
inc
inc
int3
rolb
xchg
jbe
push
sub
dec
adc
insl
lahf
lock
fsubl
adc
mov
or
pop
fisubrl
cmp
orb
aad
addr16
mov
xor
jbe
cmp
or
jecxz
add
cmp
ret
and
fmull
add
mov
cmpsl
jecxz
cmp
bsr
into
sti
mov
in
push
pop
outsl
cmpsl
adc
pop
pop
fidivs
and
cltd
mov
pop
mov
xor
xchg
jb
sbb
mov
pop
dec
mov
xchg
sub
and
xor
dec
bound
inc
out
sbb
cmp
aam
test
scas
outsl
and
adc
les
lret
sbb
mov
pop
push
test
pop
pop
loop
adc
and
and
mov
or
mul
mov
mov
mul
push
dec
shl
scas
lcall
adc
scas
push
add
shl
jg
hlt
in
inc
xor
daa
cli
sbb
scas
sub
cmp
rclb
or
into
or
hlt
js
cmpsb
add
addr16
jae
pop
xchg
enter
and
mov
punpcklbw
mov
mov
das
cld
mov
lods
std
out
int3
divb
fs
jg
add
fldl
fs
mov
daa
jb
mov
mov
stos
jge
jns
sub
and
xchg
lods
jmp
mov
dec
stos
pop
sub
ret
mov
shlb
andl
mov
cmp
jbe
jnp
aam
and
jl
mov
imul
jnp
cmpsl
mov
or
test
nop
cmp
stc
nopl
pop
mov
cwtl
jge
sbb
pushf
cmp
loope
ljmp
or
test
jge
sub
dec
or
mov
jns
aad
xchg
popf
cmp
movsl
mov
scas
aaa
sbb
ss
insl
or
pop
or
dec
push
xor
jns
cs
hlt
xor
or
inc
or
insl
mov
sub
sbb
hlt
adc
aas
inc
or
repz
imulb
fstl
and
add
int
dec
xchg
addr16
movsl
mov
push
cmp
inc
mov
faddp
adc
fisubrl
scas
les
pushf
in
lahf
in
xor
fcomps
cmpsl
fisubl
xchg
xchg
cltd
xchg
push
pop
cmp
nop
add
imul
xchg
aas
inc
ret
dec
jnp,pt
aas
mov
jnp
fs
loop
leave
and
mov
cld
cltd
popa
xchg
sti
ss
push
repz
xor
mov
test
sbb
insb
cmc
fsubl
insl
dec
test
mov
movsl
mov
and
push
aam
or
fsts
pop
sub
lea
dec
mov
mov
arpl
loopne
js
and
rcll
and
aas
jb
adc
sub
sub
or
pop
repnz
inc
pop
push
les
hlt
mov
mov
sbb
adc
jecxz
fdiv
add
jecxz
push
and
ss
dec
adc
mov
mov
loopne
aam
xchg
mov
out
sub
sbb
cmp
cwtl
sbb
add
test
add
aam
mov
bound
adcl
mov
mov
sub
out
fdivrs
or
aam
mov
icebp
xchg
add
adc
jg
jnp
mov
aad
shlb
sbb
pop
add
outsb
push
cmp
inc
jle
fcoms
lret
or
xchg
test
push
push
mov
mov
mov
jl
imull
adc
dec
or
mov
lea
lahf
or
adc
pop
jnp
lret
mov
jp
jmp
fldt
pop
and
lods
mov
pusha
repnz
sahf
mov
lret
sub
cmp
push
pop
cmp
sbbl
jmp
jg
movsl
insb
lcall
movl
lahf
or
push
pop
cltd
jnp
jno
repz
jp
nop
pop
mov
mov
sub
ljmp
adc
adc
cmp
cs
out
push
xchg
or
shl
repz
or
pop
dec
lret
cmp
testb
xchg
pop
sbb
pop
and
cmpsl
jne
push
repz
sbb
adc
mov
adc
jae
loopne
add
std
mov
mov
sub
imul
mov
mul
aam
dec
setb
sub
les
incb
inc
fisttps
xchg
out
mov
dec
pop
inc
negl
aad
stc
rcll
addr16
fcomp
jp
push
sbb
mov
jns
jo
push
dec
gs
scas
ljmp
cli
or
arpl
push
jbe
xor
mov
das
icebp
add
aas
xchg
imulb
pop
jge
xor
push
push
dec
mov
xchg
incb
inc
outsl
arpl
push
lcall
and
roll
xchg
scas
rcrb
pop
mov
pop
mov
loopne
inc
movsl
jecxz
add
stos
sahf
sub
inc
jo
xchg
and
add
sub
xlat
push
jb
lods
rcll
out
dec
push
adc
sub
mov
test
les
es
bound
fdivs
test
jnp
inc
icebp
xor
push
icebp
scas
push
push
leave
or
stos
push
and
inc
test
cmp
pop
shr
test
cwtl
cli
mov
adc
rolb
mov
rol
inc
addr16
adc
jle
out
iret
dec
mov
ficoms
add
jmp
ljmp
cmc
lret
popf
es
jne
inc
xor
int
and
imul
aas
fidivl
or
jb
and
sub
jle
loopne
nop
mov
jb
push
mov
fs
fstpt
lock
dec
sbb
mov
out
pusha
and
or
sub
out
cmp
enter
int3
cmp
icebp
mov
cs
cmp
xor
repz
jle
adc
and
add
or
insb
shrl
stc
std
into
pop
xor
dec
fs
mov
cmp
mov
call
fsubrs
fildl
or
mov
inc
stc
leave
scas
push
subb
or
fs
rcrb
jno
sub
popa
mov
and
and
mov
mov
leave
les
neg
jp
cmp
rorl
push
xchg
inc
cmc
pop
jecxz
cmpsl
add
jns
cmpl
jbe
outsl
cmp
test
cli
mov
jnp
push
or
iret
cmp
rolb
jp
xchg
jmp
mov
or
fwait
sub
sbb
cmp
xchg
repz
shrl
cmpsl
mov
std
jns
xchg
popa
or
stc
andl
popa
push
push
sub
out
dec
jb
int3
xlat
dec
mov
rorl
iret
les
sbb
rorl
rcll
pop
add
fsubrp
adcl
shll
cmp
sbb
out
pop
bswap
ljmp
iret
lods
or
mov
ret
push
mov
insl
sub
popf
xor
mov
or
mov
out
adc
sbb
jne
repz
inc
lret
dec
out
leave
loopne
cmc
jecxz
outsb
inc
adc
push
xchg
cltd
dec
xchg
ss
es
add
aad
mov
xor
pop
ficoms
sahf
push
or
push
and
adc
jbe
sbb
aam
push
sub
add
lcall
xlat
push
or
rcrb
rclb
jns
subl
fnstcw
mov
mov
inc
cli
not
gs
out
rcl
call
lret
rcrb
xchg
sub
popl
pop
mov
mov
push
fldenv
and
mov
ficompl
sbb
mov
iret
cmpsb
fistpl
add
cwtl
mov
outsl
sub
loop
mov
lea
fimull
dec
test
adc
xchg
movsl
test
xchg
sbb
cmp
cmp
out
xlat
addb
lret
arpl
loop
add
cld
xchg
lret
mov
jae
mov
test
iret
or
pushf
jp
scas
push
icebp
xorb
cwtl
insl
cmp
movsb
shll
sti
cmp
sbb
decb
popf
outsb
clc
sub
push
xor
sub
jne
ds
mov
insb
movb
xchg
in
leave
call
jo
pop
xor
aas
dec
or
jle
cltd
ja
lock
sbb
or
pusha
mov
push
add
and
and
mov
stos
std
mov
hlt
movsb
enter
dec
dec
das
mov
xchg
test
xchg
fstpl
repnz
ss
adc
mov
cwtl
xchg
ljmp
or
daa
fsubrs
aam
scas
sbb
cmp
pushw
xchg
push
ljmp
add
adc
lods
inc
sahf
adc
push
jg
sub
push
inc
or
movsb
sbb
nop
cmp
inc
aas
jb
mov
add
add
cmc
xchg
movb
dec
es
adc
cld
mov
aad
sbb
imull
movsb
adc
jne
add
ret
js
push
sub
aaa
jecxz
mov
dec
push
jns
popf
xorl
enter
test
and
aas
mov
cltd
js
xor
dec
sub
sbb
sahf
sub
scas
sbb
mov
xchg
lahf
or
arpl
xor
stos
xchg
lock
mov
push
xchg
sbb
adc
dec
enter
in
and
cmp
inc
test
inc
mov
test
int3
test
push
jno
call
or
pop
add
mov
dec
nop
arpl
rcrl
popf
cmp
aaa
stc
movsl
scas
push
adc
mov
ret
mov
dec
inc
mov
insl
mov
ljmp
daa
cltd
push
pmulhuw
repz
repnz
punpcklwd
adc
fwait
imul
mov
dec
adc
ljmp
xor
jmp
sub
mov
sub
addl
scas
push
ljmp
loop
das
divl
dec
add
enter
sub
outsb
dec
jbe
xchg
xchg
push
mov
cltd
or
mov
test
jg
in
cltd
int3
jg
sub
popf
cld
and
cmpl
inc
sbb
jne
test
dec
xor
adc
cmpsl
in
cwtl
imulb
dec
dec
jmp
sub
sub
xchg
mov
addr16
movsb
fs
lods
jl
rclb
sbb
jge
pop
test
sbb
inc
jbe
mov
nop
les
mov
pop
dec
or
or
lret
shrb
push
outsl
rcll
cltd
push
in
push
inc
js
cmc
jecxz
jge
data16
dec
pop
fstps
lret
daa
jnp
scas
mov
mov
mov
dec
pushw
sbb
jl
add
push
fwait
bound
jne
pusha
sub
dec
push
push
loop
mov
lahf
ror
xchg
ljmp
into
loop
repnz
subl
pop
scas
cltd
adc
dec
mov
pushf
inc
cmpsl
clc
cmpsl
out
icebp
sbb
add
rcrb
leave
and
pop
ljmp
and
sub
mov
mov
data16
xor
cld
gs
scas
inc
out
scas
andb
mov
push
or
sbb
push
scas
popf
inc
mov
jae
les
mov
test
jns
push
push
ret
sbb
cwtl
push
or
mov
das
sbbl
out
or
mov
adc
dec
mov
repnz
lahf
dec
out
movb
dec
test
outsb
push
in
cli
dec
fidivrs
sbb
or
mov
test
pop
push
cwtl
add
cmp
xor
cmp
ss
cmp
xor
sub
xchg
xor
push
xor
imul
and
in
push
push
or
sub
jbe
xor
cmp
jo
incb
dec
xor
je
inc
outsl
in
sub
lret
cli
mov
dec
and
cltd
xchg
out
adc
pop
out
push
mov
jo
mov
sbb
push
es
inc
cmp
lcall
ret
xchg
ds
sub
xchg
fstps
cmp
aaa
dec
outsl
in
fcmovu
loopne
cmp
and
popa
rolb
add
xchg
ss
insb
mov
rcll
cwtl
roll
outsl
scas
and
or
enter
inc
out
pushf
addr16
xor
lea
ret
push
xor
in
fs
lret
dec
mov
mov
mov
pushf
mov
mov
lods
andb
or
push
cmp
add
