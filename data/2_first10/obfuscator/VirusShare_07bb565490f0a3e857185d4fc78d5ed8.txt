add
push
add
add
add
add
mov
add
add
add
addb
add
add
orb
add
inc
pop
add
mov
add
gs
cmp
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
push
add
addb
add
js
add
gs
cmp
add
add
add
add
add
add
stc
push
add
add
gs
cmp
add
add
add
add
add
add
add
add
push
add
add
gs
cmp
add
add
add
add
add
add
add
add
push
add
add
gs
cmp
add
add
add
add
add
add
add
add
add
gs
cmp
add
add
add
add
add
add
add
enter
xor
add
gs
cmp
add
add
add
add
add
add
add
cld
incl
add
add
gs
cmp
add
add
add
add
add
add
add
add
add
gs
cmp
add
add
add
add
or
orb
add
xor
add
pop
add
cmpb
add
dec
or
subb
add
outsb
or
cmp
add
and
add
dec
add
adcb
add
cwtl
add
addb
add
gs
cmp
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
dec
add
add
pop
add
add
add
test
add
add
add
add
add
add
jo
add
sbb
pop
add
add
add
test
add
add
add
add
add
add
cwtl
add
add
pop
pop
add
add
add
test
add
add
add
add
add
add
rolb
add
add
add
test
add
add
add
add
add
add
call
or
add
add
add
test
add
add
add
add
add
add
adc
add
pop
or
add
gs
cmp
add
add
add
add
add
add
add
add
sysret
add
add
add
test
add
add
add
add
add
add
pusha
add
add
adc
add
add
add
test
add
add
add
add
add
add
mov
add
enter
rolb
add
gs
cmp
add
add
add
add
add
add
adc
add
add
add
test
add
add
add
add
mov
add
addb
add
gs
cmp
add
add
add
add
add
add
add
add
add
add
test
add
add
add
adc
lock
cwtl
add
xor
add
rolb
repnz
call
sldt
adc
add
cmp
add
pusha
add
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
push
add
js
add
mov
sldt
enter
decl
add
lock
add
sbb
add
gs
cmp
add
add
add
add
add
add
adc
add
gs
cmp
add
add
add
add
add
add
add
add
pop
pop
add
add
add
test
add
add
add
add
add
add
add
pop
add
add
add
test
add
add
add
add
add
add
sub
pop
add
add
gs
cmp
add
add
add
add
add
add
add
push
push
pop
add
add
gs
cmp
add
add
add
add
add
add
add
fcomps
pop
add
add
add
test
add
add
add
add
add
add
mov
and
add
add
add
test
add
add
add
add
add
add
enter
clc
and
add
add
add
test
add
add
add
add
add
add
lock
pop
add
add
gs
cmp
add
add
add
add
add
add
push
add
mov
pop
add
add
add
test
add
add
add
add
add
add
inc
push
add
xor
add
gs
cmp
add
add
add
add
add
add
add
test
pop
add
add
gs
cmp
add
add
add
add
add
add
xor
add
add
add
test
add
add
add
add
add
add
mov
xor
add
gs
cmp
add
add
add
add
add
add
push
add
nop
aaa
pop
add
add
add
test
add
add
add
add
add
add
or
add
je
pop
add
add
gs
cmp
add
add
add
add
add
add
pop
add
int3
ds
add
add
gs
cmp
add
add
add
add
or
andb
sbb
add
add
add
gs
cmp
add
add
add
add
add
add
add
addb
adc
add
gs
cmp
add
add
add
add
add
add
inc
pop
add
add
add
test
add
add
add
pop
add
jg
add
pop
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
add
add
test
add
add
add
add
add
add
adc
add
test
adc
add
gs
cmp
add
add
add
add
add
add
or
add
add
add
test
add
add
add
add
add
add
pusha
or
add
add
gs
cmp
add
add
add
add
add
add
inc
pop
add
add
gs
cmp
add
add
add
add
add
add
inc
pop
add
add
gs
cmp
add
add
add
add
add
add
or
add
inc
pop
add
add
gs
cmp
add
add
add
add
add
add
or
add
inc
pop
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
push
in
mov
dec
and
push
dec
stc
xor
testl
in
cmp
pop
icebp
popa
inc
stos
mov
pushf
mov
sbb
mov
jae
and
pushf
add
bound
adc
mov
mov
subl
dec
addr16
mov
rcrl
dec
inc
adc
cmp
into
xchg
mov
mov
cmp
add
inc
jge
push
sbb
imulb
hlt
andb
xchg
xor
arpl
cwtl
mulb
cmc
bound
out
and
xchg
ss
sbb
xchg
inc
inc
pushf
pop
fisubs
add
icebp
xchg
xchg
rcrl
jae
cmpsl
xor
cmc
dec
fwait
mov
fcompl
into
adc
push
test
sbb
adc
pop
cwtl
popa
call
mov
test
aam
and
fmuls
mov
add
dec
nop
andl
add
add
push
addr16
dec
mov
cmc
test
dec
dec
cmp
sbb
mov
adc
add
jmp
adc
cmpsb
stos
daa
dec
in
jo
and
js
mov
inc
movsb
sub
dec
addr16
clc
test
push
icebp
inc
mov
pushl
sub
mov
push
dec
xor
loope
testl
adc
bound
sbb
xchg
mov
enter
fldz
mov
mov
mov
add
and
test
push
dec
imul
dec
insl
cli
f2xm1
pop
mov
dec
xchg
fisttpl
das
rclb
popa
jl
imul
insl
jne
int
sub
out
mov
flds
jo
xchg
dec
aas
push
and
sarl
test
cltd
mov
sub
imul
aas
sti
jae
std
insl
adc
fwait
jmp
and
add
aaa
mull
or
sub
xchg
inc
dec
enter
gs
rep
lcall
scas
mov
in
insb
decb
divb
mov
and
aam
mov
dec
mov
inc
orl
hlt
sbb
xchg
jns
sub
add
icebp
jl
test
push
dec
lods
ret
mov
or
sbb
pusha
decl
ds
testb
icebp
fs
sbb
fwait
test
mov
jnp
cmc
lea
shll
pop
mov
push
mov
push
mov
pop
mov
xchg
mov
fsubrl
dec
push
xor
or
push
fcmovnbe
lcall
dec
dec
sub
or
scas
cmc
push
pushf
popa
je
popa
inc
mov
gs
dec
sub
sahf
inc
mov
dec
and
xchg
fstpl
sub
cmp
mov
and
push
ficompl
cmp
add
dec
push
pop
fsubrl
repz
ss
sbb
xor
push
lods
loopne
sar
add
jo
push
ja
lcall
pushf
ja
das
pusha
add
insl
shlb
add
cwtl
dec
adc
mov
mov
int
sub
ljmp
dec
fnstsw
fldcw
imul
cli
mov
fbld
jle
xor
and
idivb
insb
faddl
mov
das
rclb
inc
jle
inc
iret
cmp
add
popa
pop
xchg
mov
adc
mov
jno
sub
jl
cld
inc
dec
ja
sarb
add
push
sub
test
pop
insl
push
dec
push
sbb
daa
cmp
jo
sbb
push
cltd
dec
xchg
cltd
mov
sub
inc
and
or
div
add
rcll
mov
outsl
push
nop
les
cmp
and
mov
movsl
mov
xchg
xor
cmp
in
adc
das
lcall
fnstenv
mov
loopne
nop
test
or
mov
movsl
cltd
shrl
xchg
iret
sub
sbb
cmp
mov
mov
addb
add
jle
lret
inc
arpl
pop
xor
mov
rcll
mov
add
mov
aam
inc
rclb
sub
jo
mov
push
pop
shlb
mov
xchg
and
cmovg
cmpl
lahf
mov
or
popf
or
orb
xor
push
xchg
jno
jge
xchg
push
call
push
ret
jo
sub
sub
mov
movsb
icebp
jmp
push
dec
mov
mov
and
outsb
or
scas
cmc
lcall
and
iret
notb
jge
adc
mov
mov
hlt
push
jnp
jb
xchg
in
mov
pop
push
lret
dec
xchg
inc
sub
dec
lds
subl
push
push
and
mov
adc
push
sub
add
push
mov
jle
add
incb
inc
mov
inc
ret
aad
das
mov
test
in
ja
leave
mov
insl
mov
lock
sub
insb
arpl
mov
ret
jle
ja
mov
jge
testb
lret
sub
iret
mov
jb
fistpll
fildll
repnz
pop
in
cmp
cmp
and
out
sbb
loop
xor
inc
cmp
std
jecxz
cmpsb
out
xchg
lods
mov
jb
int3
cmp
sbb
stos
stos
je
scas
or
dec
int
rolb
sahf
ret
std
test
jns
sub
outsb
pop
sub
dec
pop
jo
jnp
add
inc
mov
repnz
rcrl
pop
jb
ret
push
pusha
mov
out
rcrb
ja
add
pop
xor
inc
repnz
sbb
sbb
push
or
sti
sub
cmp
xchg
lret
shlb
sbb
cwtl
jae,pn
test
movsl
orl
insb
xlat
rorl
aad
adc
xor
adc
sbb
test
mov
div
clc
cmp
sbb
and
fistpll
js
mov
sub
fidivrs
js
adc
sbb
out
sbb
cmp
dec
xor
loopne
push
pop
mov
push
jne
mov
gs
lds
add
pop
nop
test
fadds
lea
xchg
inc
out
int3
sub
mov
mov
lret
dec
ret
cmc
loope
dec
sbb
xlat
cmc
dec
dec
mov
or
push
js
imulb
stc
data16
inc
cmc
xchg
cs
test
outsb
test
repnz
imul
push
mov
xlat
mov
jb
stos
jnp
pop
add
pop
ret
cltd
je
call
mov
stos
outsb
orb
repz
mov
mov
cmp
jl
ss
cmp
lret
jo
shlb
xor
xchg
mov
xor
push
xor
push
cmpsb
fcomp
setne
ficomps
call
lds
sbb
pop
mov
sar
outsb
stos
add
dec
dec
pushl
outsb
mov
cld
and
lcall
into
mov
xchg
shrl
xchg
add
leave
gs
adc
jo
add
and
push
push
loopne
inc
mov
cmp
enter
push
pop
movsl
jb
push
lret
dec
stos
adc
cmp
enter
les
mov
popa
and
lcall
pop
mov
mov
insb
mov
sbb
inc
inc
mov
ficoms
add
xchg
shlb
shrb
ret
in
mov
sub
jge
jbe
jno
ret
clc
pop
lret
sbb
mov
add
and
jae
les
sti
dec
stos
fisttps
push
push
cmp
pop
inc
scas
lock
call
mov
std
testb
stos
lret
cld
dec
push
sti
push
mov
jmp
and
xchg
inc
pop
dec
hlt
mov
jno
push
push
mov
inc
out
cltd
push
test
es
orb
push
out
inc
hlt
mov
test
scas
mov
clc
addb
adc
fwait
in
jg
outsl
aad
sbb
or
std
dec
cmpsb
outsb
add
pop
sar
roll
inc
inc
and
mov
sbb
roll
orl
xorl
addb
cmpl
pusha
aam
mov
adc
pop
arpl
cmpsb
or
dec
lea
push
jmp
xor
add
mov
fstpl
mov
insl
pop
sbb
scas
mov
setle
popa
sub
push
xchg
pop
push
jge
insl
inc
push
cli
imul
push
pop
jbe
sub
enter
cmp
aaa
mov
inc
inc
inc
out
movsb
cmp
inc
stc
xor
pop
push
sbb
xor
cmp
stos
inc
ljmp
and
xchg
clc
sbb
sbb
adc
aas
shll
rcl
cli
dec
aad
cmp
imulb
enter
data16
popa
stc
xchg
adc
movsb
mov
addr16
inc
sahf
out
sti
repz
mov
xchg
aad
push
sub
inc
int3
mov
push
cld
jnp
sti
xchg
xchg
push
inc
icebp
cmc
dec
ss
out
or
or
or
mov
divb
xchg
xchg
shlb
lods
popf
adc
push
fnsave
push
adc
decb
movb
sbb
dec
xlat
pop
movsl
jle
aaa
pop
rolb
xlat
mov
and
cmpsl
das
ja
arpl
add
pop
in
nop
jo
dec
in
subb
inc
xchg
xor
in
mov
pop
jo
pop
movsb
ljmp
pop
dec
lret
cmp
pop
xchg
mov
aas
popa
lret
fwait
sub
xchg
enter
aas
int3
sbb
cli
cmp
rcrl
out
mov
xchg
jge
push
xchg
lret
dec
sbb
lret
mov
imul
scas
in
out
dec
inc
push
ror
sub
cmc
xchg
fnstcw
xchg
sub
inc
lahf
andb
mov
sbb
sub
push
xchg
mov
push
outsb
add
lock
push
cld
jae
in
insl
xor
inc
mov
cmp
push
xchg
mov
pop
pushf
rcl
in
lods
inc
subl
inc
xor
ficomps
pop
lcall
pop
adc
inc
or
jg
pop
lret
out
push
cltd
int
mov
ret
adc
enter
mov
jo
outsb
sbb
mov
push
in
sbb
ljmp
outsl
jae
dec
aaa
out
dec
in
sbb
xor
add
ror
or
pop
jnp
sbb
add
inc
pop
pop
sub
mov
sarl
movsb
aaa
cmp
call
sub
xor
ljmp
pop
pop
fldenv
test
inc
out
jnp
js
xor
cmp
loop
repnz
je
sti
push
lds
lcall
mov
and
dec
sbb
lahf
jmp
scas
cltd
enter
mov
pop
fcoml
xchg
inc
stos
leave
dec
lcall
sbb
leave
add
mov
sub
cs
adc
mov
or
mov
jno
dec
fistl
dec
dec
in
dec
fstpt
push
outsb
add
je
andb
push
ret
ss
mov
lods
outsb
fyl2xp1
pop
js
cmp
jae
popl
add
and
xchg
and
icebp
repnz
push
add
cld
fdivs
dec
adc
insb
cmp
mov
test
cmpsb
sub
lret
loopne
and
jbe
imul
inc
dec
sbb
and
out
rorb
addb
ret
sub
ret
xchg
pop
inc
xchg
adc
pop
subb
sub
sbbl
outsl
pop
jne,pt
decl
jnp
jo
dec
or
adc
mov
pop
jge
inc
or
fimull
loop
scas
sbb
add
cmp
adc
out
xorb
pop
jae
push
jmp
xchg
aad
aaa
wrmsr
lret
lods
ret
imul
mov
sbb
popf
int3
mov
push
add
jno
incb
pop
fiadds
or
xchg
jo
add
fmull
sub
fmulp
adc
inc
sub
ret
test
xlat
inc
pop
and
adc
mov
out
xchg
adc
or
shl
std
xor
jnp
sbb
movsb
fisttpl
pop
push
jne,pt
mov
mov
push
pusha
aad
add
sbb
xor
push
in
cmc
add
mov
bound
mov
movsl
dec
sub
addr16
fdivs
mov
cld
dec
out
or
push
jl
stos
repnz
xchg
xchg
fnsave
mov
test
dec
int
jmp
cmp
outsl
mov
xchg
es
aam
push
out
repnz
setge
pmaxub
sub
dec
lret
inc
cmp
leave
mov
loop
mov
bound
push
fucom
sti
loop
dec
and
enter
mov
pop
shll
push
and
test
leave
pop
repnz
sarl
xor
int
lcall
rolb
test
and
scas
in
pop
mov
dec
inc
pusha
mov
enter
mov
negl
icebp
gs
jbe
cmpl
aaa
dec
dec
pop
and
neg
ss
cs
in
test
ja
push
bound
addr16
mov
mov
int3
or
imul
dec
add
ds
adc
out
iret
inc
mov
in
mov
fdivrs
sti
push
pushf
xor
jle
lcall
adc
pop
lds
fdivrs
fwait
mov
mov
adc
xor
ret
ret
xor
jp
mov
sub
jp
cld
inc
xchg
in
outsl
sub
jmp
cmp
and
int3
mov
imul
sbb
out
je
mov
divl
test
hlt
inc
mov
adc
dec
rcll
js
push
push
pop
or
mov
sbb
call
add
mov
mov
jmp
repz
js
loop
sbb
cli
cltd
xchg
push
sbb
add
shrb
cli
movsl
inc
out
clc
incl
jecxz
and
aad
and
add
pop
pop
or
jno
mov
push
cmp
xchg
repz
fmull
sbbl
inc
cld
jae
jne
cmp
xchg
sub
mov
mov
cltd
pop
push
inc
mov
pop
sub
es
or
dec
mov
xchg
or
outsl
cs
orl
jmp
sbb
xchg
mov
add
mov
jnp
adc
cmp
sbb
dec
mov
adc
dec
repz
or
jne
sub
adc
mov
lret
and
loope
cltd
mov
fisttpll
ja
pop
pop
push
or
add
es
rolb
pushf
jbe
fmuls
out
loopne
or
dec
ret
push
push
ret
cmp
or
inc
push
jl
aad
xor
adcl
leave
ficoml
into
les
mov
hlt
out
mov
cli
cli
out
insl
jae
add
aaa
outsl
std
cmpsb
aad
push
imul
out
fs
mov
xor
xchg
daa
mov
rcrl
imul
ds
in
movsb
mov
test
xchg
mov
cmc
push
cli
sbb
inc
pop
stos
incb
mov
adc
movsb
cmp
int3
shlb
dec
inc
fsubs
test
in
lods
rorb
sub
mov
test
push
into
out
addl
imul
dec
in
outsl
in
pushf
ret
shll
je
add
jecxz
pop
loop
xor
adc
inc
pop
outsb
jl
and
push
inc
fisubrl
sub
rcrb
mov
pop
pop
and
push
movsb
popa
mov
mov
pop
pop
lock
inc
rolb
sbb
xchg
das
inc
sbb
loopne
mov
stc
pusha
mov
dec
jp
mov
ret
pop
jmp
push
pop
pop
inc
int3
fistps
punpcklwd
push
inc
notl
adc
popf
lods
pushl
leave
mov
sbb
push
jge
xor
in
sub
mov
out
rcr
and
pop
xchg
dec
xchg
inc
nop
subl
mov
and
movsb
sahf
ret
push
lods
xor
sbb
mov
sahf
or
das
cmc
adc
jl
push
xor
or
ja
mov
arpl
mull
into
imul
push
xor
add
dec
mov
sub
and
dec
out
mov
mov
lahf
pop
cmp
faddl
adc
and
je
mov
dec
pushf
lcall
mov
ret
dec
jmp
xchg
pushf
sbb
fstpt
stos
inc
addb
fwait
or
scas
xor
push
loope
leave
push
push
scas
push
and
outsl
repnz
and
mov
sahf
and
jne
sub
xchg
mov
insl
lods
sub
fcoml
incl
pop
popf
jp
in
mov
sar
cmp
inc
ret
jg
addr16
jp
movsb
mov
lcall
cmp
cmp
adc
mov
repz
xlat
daa
rcrb
mov
in
arpl
imul
xchg
rcl
xor
push
dec
movsb
push
js
inc
jns
sub
pop
sub
shrb
arpl
out
xchg
mov
mov
mov
mov
inc
insl
sub
and
loopne
test
xor
inc
cli
ret
mov
mov
cs
or
cmp
pop
clc
sbb
fcompl
xchg
xchg
pop
dec
pop
insl
inc
mov
cmp
sarl
div
leave
and
popa
out
inc
repz
lret
xor
push
insb
and
mov
pushf
ficompl
std
jb
inc
add
clc
push
lods
mov
iret
dec
and
out
rorb
js
push
and
cwtl
gs
ja
adc
adc
xchg
mov
fmull
cld
pmaxub
push
xchg
cmpsb
push
icebp
mov
pop
pop
jge
sbb
pop
mov
jmp
jbe
mov
fldcw
lret
stc
cmp
push
cs
jmp
sub
add
sbb
sub
adc
xchg
loope
or
pop
and
lds
sub
mov
je
mov
mov
sub
dec
pop
fsts
mov
xor
pop
inc
xor
sahf
adc
mov
sub
sbb
mov
pop
aam
pop
dec
fdivrp
lods
aas
mov
push
push
mov
lea
lahf
mov
test
and
icebp
xor
jmp
sbb
sbb
sbb
pop
pop
or
push
div
jno
xchg
sbb
mov
xor
sbb
jne
pop
mov
mov
xor
cmp
mov
or
cmpb
xorl
inc
jg,pn
xchg
popf
jb
hlt
cmp
lret
mov
iret
jnp
xchg
ljmp
and
out
aam
mov
xchg
jg
add
cmpsb
ds
lcall
jno
xchg
or
jnp
ret
push
lahf
push
aaa
add
xlat
out
cmp
popa
repz
xchg
xchg
pop
adc
testb
insb
cmpsl
dec
pop
cld
mov
xor
fnstsw
ss
pop
aas
mov
dec
mov
push
jl
sarl
mov
adc
mov
out
add
jecxz
sub
outsl
and
in
xchg
adc
cmp
loopne
setno
fcomip
mov
pusha
cltd
enter
ret
jne
movsb
push
repz
mov
scas
mov
push
pusha
ljmp
popf
imul
in
cli
orl
andl
lods
fwait
or
cmp
das
idivl
shlb
jl
outsl
lret
sub
or
pop
dec
or
imul
mov
sub
xchg
daa
sbb
jns
mov
ret
sbb
sbb
sbbb
insl
fst
or
mov
cld
les
add
sbb
fisubrs
or
cmp
mov
adc
dec
push
xchg
gs
cwtl
dec
pop
add
lods
push
or
pop
inc
mov
mov
xchg
dec
addr16
xlat
nop
scas
mov
cmp
aam
pop
test
jnp
mov
cmp
mov
mov
and
pop
or
call
push
fnstenv
and
test
push
cld
jnp
js
imul
out
push
inc
lret
adc
dec
lea
sarb
push
sarl
mov
push
repnz
push
popf
cmp
lahf
aam
pop
test
stos
mov
xor
out
in
mov
xchg
call
into
mov
jp
sahf
pop
lret
cmc
loope
mov
pop
test
ljmp
adc
sub
mov
data16
int3
das
aam
daa
jp
jmp
dec
add
dec
addr16
pop
cmp
inc
fcompp
call
xor
xchg
data16
cltd
nop
bound
pop
xor
push
imul
out
in
push
adc
cld
jo
ret
add
push
fcmovnbe
icebp
cwtl
mov
jo
lea
adc
sarl
xchg
imul
lods
rcll
push
add
mov
xor
hlt
flds
cmpsl
jmp
ret
dec
or
out
mov
cmp
les
inc
arpl
outsb
sub
outsb
or
popa
sbb
pop
scas
daa
sahf
in
lcall
push
jl
or
jp
sbb
or
jle
call
ret
aaa
mov
jecxz
mov
repnz
in
mov
jle
mov
xor
push
mov
mov
and
fs
pusha
or
xchg
data16
jle
in
stos
mov
mov
mov
iret
aaa
ljmp
xchg
mov
pop
pop
xlat
stos
js
sbb
test
add
adc
scas
and
mov
sub
push
xchg
cs
ror
cli
xchg
mov
push
loop
shl
fcomps
adc
pop
lret
scas
cmc
mov
mov
lods
rcll
lcall
sub
enter
lret
daa
or
jae
push
sti
pop
mov
or
fsubl
jnp
or
outsb
or
sti
push
sahf
ficompl
in
aad
pusha
cmp
mov
push
loope
xor
decb
loope
mov
sti
jg
push
mov
pop
mov
maxps
mov
in
pop
sbb
jo
sbb
rclb
xchg
push
fcomps
popa
xor
lret
movsl
imul
push
fistps
mov
dec
mov
push
pop
mov
dec
mov
and
lret
pop
movsl
std
icebp
icebp
jge
mov
cmp
pop
add
xor
in
out
jae
or
jae
sbb
imul
sbb
and
inc
mov
iret
mov
in
pop
shrb
in
dec
xchg
test
jecxz
mov
insl
jb
mov
aad
lret
mov
add
xor
jmp
add
idivb
push
push
int
ljmp
cld
fdivl
and
mov
test
out
ds
shl
movsl
loopne
scas
push
xor
push
sbb
mov
in
fldl
inc
inc
sub
xlat
jbe
je
bound
je
inc
iret
mov
roll
mov
jp
sub
fildll
mov
iret
stos
cltd
mov
in
or
or
xor
add
mov
clc
pop
jno
and
imul
pop
je
xor
push
xchg
xchg
stc
mov
iret
ljmp
pop
adc
enter
mov
ret
sbb
dec
ja
jno
push
or
xacquire
xchg
icebp
mov
mov
shlb
dec
push
daa
aad
ljmp
fcmovu
test
out
mov
and
cmpsb
leave
pop
and
cmp
pop
dec
cmp
mov
lcall
mov
cli
or
arpl
out
in
scas
xor
pop
cmp
adc
in
mulb
lock
adcl
rorb
sbb
add
rolb
pop
push
sti
adc
shl
imul
sbb
inc
popf
jo
dec
in
add
pop
fdivl
pushf
enter
xchg
xchg
pop
sti
shll
inc
lcall
sarl
fbstp
inc
sbb
repnz
les
stos
out
or
push
mov
aam
fildl
idivl
mov
sahf
xor
adc
cltd
std
mov
test
pop
out
mov
aad
pop
lret
mov
scas
push
rcr
and
stc
rcll
add
dec
shr
inc
xchg
dec
mov
lret
lahf
push
and
test
jle
insl
cltd
dec
xor
rcrb
cmp
push
ljmp
in
sbb
outsb
icebp
repz
jp
mov
mov
das
or
mov
gs
jl
xchg
push
shll
cwtl
inc
enter
and
sub
jno
std
pop
fistpll
int
pop
fwait
lcall
adc
push
inc
mov
fs
mov
nop
cli
fnsave
dec
sti
add
cmp
gs
and
sahf
sbbl
ljmp
orb
inc
dec
mov
repnz
or
inc
fsubs
arpl
and
add
pusha
mov
loopne
dec
arpl
mov
stos
int3
sbb
cmp
ljmp
push
out
mov
in
push
xchg
sti
adcb
push
mov
stc
loope
aas
xchg
fnstcw
outsl
stc
cmpb
jne
jno
pusha
or
mov
inc
jnp
cli
and
orb
xorb
adc
int3
incl
xchg
shl
mov
dec
jle
cmpsl
mov
dec
xchg
sbb
jns
dec
add
mov
xchg
int3
cmpsb
adc
out
fs
js
out
xchg
sahf
js
inc
stos
cmp
repnz
mov
xorb
xor
arpl
insb
in
pusha
test
in
lds
cmp
fwait
or
mov
ret
loopne
cmpsl
mov
push
xor
sbbb
adc
fdivrl
fisubrl
push
dec
sar
repz
fdivr
aas
or
sub
jl
add
cmpsb
jp
add
out
xlat
fwait
rorb
or
add
lret
sub
bnd
aaa
dec
and
idivl
sub
jecxz
js
push
add
cld
mov
je
test
or
push
and
gs
jbe
sub
jge
jmp
adc
ret
xlat
fnstcw
jno
filds
into
and
lret
fnsave
xor
js
xor
cmpsl
call
insl
push
shr
pusha
add
mov
adc
or
mov
inc
adc
lods
sbb
sahf
inc
push
mov
arpl
scas
xchg
sub
jmp
addr16
dec
adc
push
jecxz
into
test
add
dec
pop
insb
movb
test
sbb
mov
mov
sbb
pop
lods
and
mov
std
mov
jge
mov
jno
mov
cmpsl
scas
int
and
mov
push
aad
jecxz
mov
adc
push
pushf
cmp
adc
ljmp
out
add
or
xor
loopne
mov
jecxz
rcr
in
xor
jae
pop
push
lods
loope
mov
rcrb
inc
push
jnp
clc
jecxz
orl
push
mov
mov
cmp
mov
dec
sbb
and
lret
pop
jg
jp
orl
jecxz
lret
cltd
sub
fnsave
repnz
xchg
into
mov
cmpl
push
sbb
sbbl
jo
fs
nop
bound
dec
loope
adc
imul
imul
outsb
fsubrp
je
mov
adc
cpuid
dec
inc
sbb
sbb
sbb
ret
sahf
pop
mov
push
loope
inc
jb
cmc
outsb
out
addl
rcrl
das
xchg
insl
cmp
or
adc
loop
fimuls
ljmp
ss
sbb
fists
mov
dec
stos
mov
fnstenv
je
xor
stc
insb
jecxz
cmpsl
loop
test
jmp
push
sub
dec
jno
mov
mov
dec
popf
ja
lds
fchs
xchg
shlb
add
stos
inc
nop
es
dec
outsl
push
cs
aas
outsb
aaa
xchg
out
add
sti
sub
mov
jbe
or
push
cli
in
xor
mov
or
pop
in
xchg
sbb
push
lret
stos
daa
sub
add
adc
jl
cmpsl
fs
sub
cmpsb
or
push
push
popf
push
pop
jg
lcall
aad
sub
cmp
out
xchg
and
push
lahf
test
adc
fisttps
dec
sbb
ficoml
xor
mov
aam
icebp
es
and
out
push
jns
arpl
cmp
push
wbinvd
movsl
cltd
mov
or
std
xlat
arpl
xor
xor
mov
inc
in
test
ffree
movsb
push
lods
or
mov
mov
mov
mov
repz
rcll
mov
popf
or
xor
jns
mov
jo
ret
xchg
push
or
sbb
test
inc
hlt
clc
fs
jnp
add
fsubrl
dec
out
cmp
jg
ljmp
sub
mov
mov
xchg
imul
sahf
xor
xor
dec
pop
lret
cmpb
imulb
add
add
dec
and
xchg
aas
fistl
mov
mov
xchg
insl
das
rcrl
pop
dec
and
xor
xchg
lock
andb
std
addb
out
jns
add
clc
outsb
xchg
cmp
push
jb
rcrb
dec
mov
xchg
aad
out
dec
adc
push
sbb
outsl
add
inc
sbb
test
out
arpl
das
icebp
xchg
gs
push
popf
adc
insb
dec
adc
insl
out
adc
cli
outsl
mov
mov
xor
aam
adc
mov
xchg
ss
adc
ret
shlb
daa
int3
jg
or
call
fs
mov
add
jbe
sbb
mov
loop
mov
adc
xor
xor
daa
pop
in
in
into
cmp
pop
sub
mov
jmp
xchg
rorb
into
loopne
jo
cmp
int3
hlt
xchg
jp
sub
aad
adc
adc
adc
or
xor
xor
dec
cmp
jns
jl
pop
adc
neg
pop
push
push
cmp
mov
inc
nop
das
xlat
movsl
xor
push
dec
cwtl
inc
mov
xchg
ret
movsb
xchg
xor
adc
xor
imul
movsb
shrl
xlat
or
push
jne
xchg
hlt
pop
daa
pop
adc
push
mov
hlt
pop
cld
push
jl
or
mov
mov
xlat
jne
data16
dec
cmc
insl
shrl
cmp
pop
dec
pop
sbb
xor
int
fiaddl
fs
ds
inc
pop
movsl
push
ljmp
jmp
jbe
cmpsb
mov
xchg
xchg
loopne
divl
out
or
sarb
inc
sbb
dec
lock
fcmovne
mov
sbb
fsubl
into
push
sub
pushf
xor
push
jno
add
dec
rcrb
dec
or
sbb
mov
pop
cltd
mov
mov
lods
sbb
lret
pushf
inc
sub
lahf
cmp
cmp
ljmp
dec
mov
ret
out
cmpl
ret
rclb
mulb
cwtl
in
popw
fcmovne
mov
adc
decl
and
add
jle
icebp
xor
call
inc
mov
bound
xor
or
dec
test
aad
insb
mov
xchg
mov
adc
and
pop
fsubs
pop
ds
push
push
lea
mov
in
xorl
dec
in
call
and
add
mov
dec
lret
inc
jecxz
adc
mov
pop
arpl
push
daa
lods
aad
cmp
test
sbb
in
mov
or
fmulp
and
and
mov
int3
mov
inc
or
inc
push
cwtl
ljmp
gs
mov
mov
cmp
in
mov
sub
in
pop
mov
xor
inc
popf
insb
adc
xor
into
ret
mov
push
or
xlat
sub
pushl
repnz
pop
in
add
ja
pusha
scas
hlt
jo
adc
popa
outsl
mov
loopne
testb
xchg
pushf
ja
jmp
sbbb
adc
push
xchg
dec
cmp
jnp
sub
xchg
pop
add
jmp
push
inc
xlat
pusha
ficoml
lahf
outsl
enter
dec
inc
dec
inc
xchg
adc
xor
popl
sub
xor
add
sbb
call
jae
jo
movsb
loopne
je
sbb
aas
and
pop
ror
nop
jmp
dec
or
inc
add
adc
lret
fbld
dec
jno
xchg
std
mov
fucom
fnstcw
jnp
pop
mov
pop
outsl
mov
adc
cmpl
cli
mov
adc
add
dec
push
xchg
mov
push
xchg
idiv
aam
ss
sub
add
mov
sahf
mov
cmova
add
ret
mov
lahf
imul
cld
mov
cmpsl
daa
mov
loope
out
jne
outsb
dec
pop
cmp
push
in
cmpsb
xor
xor
jge
pop
jne
add
aam
pop
ja
mov
xorl
shlb
or
inc
dec
mov
fildll
sbbb
mov
outsb
xchg
add
outsb
fisttpll
stos
inc
in
pop
cmp
add
jno
sbbb
insl
not
or
repnz
add
sub
sbbb
cmpsl
mov
mov
xchg
or
bound
je
add
add
std
or
adc
movsl
call
xlat
nop
lret
pop
orl
mov
mov
scas
lods
and
stos
pop
stc
hlt
jg
xchg
sub
fildl
sbb
push
shll
xchg
pusha
xchg
lods
ret
fsubr
xchg
push
xchg
out
xchg
push
loop
dec
pop
adc
jl
mov
mov
cmp
pop
sbb
mov
jnp
jmp
out
push
cwtl
sub
dec
arpl
stc
out
out
push
sqrtps
jno
sahf
in
pop
pop
nop
push
mov
rcll
int3
data16
mov
loopne
sbb
dec
out
lcall
or
xchg
test
stos
sub
jg
movsb
and
loope
repnz
std
ret
add
mov
ret
pop
pusha
imul
jnp
mov
js
inc
pop
push
push
mov
xchg
jecxz
mov
xchg
jecxz
inc
sarb
xor
sahf
rclb
xor
pop
sbb
mov
getsec
fwait
mov
mov
les
insb
mov
test
decb
jmp
xor
lcall
sbb
adc
rcrl
insl
fs
xchg
or
test
mov
dec
mov
inc
sub
leave
adc
push
mov
xchg
popa
mov
inc
jno
mov
add
aam
xchg
jge
dec
dec
inc
cwtl
outsb
imul
mov
mov
mov
and
mov
adc
sti
jmp
repz
mov
pop
bound
outsb
arpl
xor
cmp
inc
icebp
cmp
and
mov
ss
into
jo
addr16
enter
xchg
mov
sub
push
push
stc
jp
pop
ret
das
loopne
push
cmp
inc
test
icebp
out
xlat
jnp
popa
sbb
xlat
jp
rol
and
jns
and
or
jbe
sbb
push
sbb
push
mov
jg
enter
shlb
movsl
jle
xchg
in
pop
setnp
movsl
hlt
xchg
push
aaa
in
xor
fsubp
movsl
fstl
jns
mov
mov
out
notl
mov
xlat
hlt
and
scas
dec
add
cmp
sub
pop
fnstenv
mov
and
mov
sub
sbb
sbb
dec
dec
test
sarl
jle
mov
in
mov
or
cmp
addl
call
push
cmp
sti
in
mov
aad
and
jae
movsl
add
daa
dec
push
aas
lret
add
das
and
mov
pop
pusha
sti
jae
fistpl
xchg
add
je
inc
frstor
dec
sbb
pop
rcrb
mov
fsts
into
mov
cltd
xor
test
sti
loopne
adc
add
pop
fwait
cmp
sub
pop
icebp
add
popa
mov
xchg
mov
push
out
inc
fwait
jp
lods
test
lock
pop
dec
mov
shrb
js
es
xor
jp
sbb
out
mull
sbb
outsl
add
mov
pop
push
fiadds
mov
dec
or
into
sub
mov
xchg
or
ds
cmpsb
fcoml
jmp
lret
movsb
pop
std
push
xor
out
jb
pop
ret
adc
je
lcall
movsb
mov
adc
jmp
loop,pt
pop
push
shlb
rol
stos
daa
repz
add
dec
mov
xlat
fwait
mov
mov
rorl
mov
pop
ret
mov
in
mov
sbbl
out
adc
xchg
sbb
push
xor
and
sbb
sub
sbb
stos
or
notb
jb
sbb
xchg
push
sahf
jb
aam
xlat
into
pop
in
lcall
cwtl
sbb
jmp
pop
mov
sub
mov
es
or
mov
lret
push
xor
call
xchg
divl
xchg
sbb
dec
mov
adc
enter
adc
sbb
mov
test
xor
or
sbb
repnz
mov
out
lcall
inc
jb
movsb
jge
outsb
iret
mov
scas
sub
xchg
mov
pop
insl
sbb
pxor
or
and
movsl
loop
sbb
loop
sbb
pop
jmp
jns
xchg
shr
ret
xchg
cli
mov
mov
jmp
mov
adc
jbe
xor
aam
idivb
jb
mov
sub
int3
cmp
imul
push
sbb
xor
in
int3
jns
popa
push
mov
mov
fdiv
add
add
dec
pushf
lods
mov
push
in
loopne
sub
sub
jb
xchg
dec
pop
out
loopne
push
pop
jae
push
and
fnsave
xor
rorb
icebp
pop
pop
ret
push
cmc
loope
mov
arpl
fcompl
pop
mov
sub
outsb
push
or
sub
dec
push
cmp
ret
adc
push
mov
sub
cwtl
push
mov
mov
fistps
ja
adc
enter
call
arpl
lds
stos
mov
mov
pop
sbb
scas
mov
mov
fimuls
shlb
jns
fistpl
cmp
in
std
and
cltd
push
mov
fdivs
xor
fwait
xchg
xchg
sbb
loopne
hlt
add
aad
clc
test
leave
push
mov
inc
aaa
pop
ret
xchg
push
or
loopne
imul
ja
or
mov
push
aam
xchg
cmp
imul
jmp
movsb
loop
enter
lock
lods
imul
mov
mov
inc
sbb
cmp
pop
jp
mov
jge
inc
pusha
in
pusha
idivl
orb
fwait
jb
pop
and
addr16
imul
mov
adc
sub
mov
and
fnsave
sbb
xor
test
lea
iret
filds
sbb
adc
mov
loop
incl
ja
jp
out
lods
jb
addl
mov
lods
in
push
ja
cwtl
inc
hlt
popfw
cmp
or
sbb
pushl
lahf
sub
or
mov
xchg
repz
mov
dec
jg
mov
inc
jae
bound
xlat
xchg
and
xchg
adc
pop
jl
mov
xlat
outsl
enter
fsubr
sub
xor
or
test
xor
pop
push
lcall
xchg
mov
aaa
mov
xlat
rcrl
leave
or
rcrb
stos
loop
sub
dec
sub
dec
inc
dec
movsl
xchg
int
xor
xor
and
fwait
ljmp
pop
mov
loop
inc
pop
daa
mov
lods
dec
or
stc
jecxz
and
sub
xchg
mov
dec
fistpll
cwtl
mov
fidivrl
andl
popf
cmp
movsb
imul
jmp
cwtl
test
inc
gs
lods
mov
mov
xchg
iret
shlb
jb
mov
out
push
lock
or
aam
int3
mov
push
lahf
aas
stc
push
sbb
rclb
fildll
lea
mov
jo
gs
into
in
iret
aad
int3
lahf
dec
ljmp
cmpsb
fcmovnu
sub
and
push
lcall
push
inc
arpl
cmp
sti
lods
pop
pop
fnsave
in
cmp
xchg
xor
enter
adc
and
inc
push
pop
ja
scas
cs
xor
sub
fistpll
xor
cmp
pop
ljmp
insb
mov
inc
or
push
fwait
loop
rcrb
ficoms
and
aam
push
add
loopne
push
sub
pop
movsb
test
adc
addl
mov
xchg
mov
repnz
jne
pop
int3
push
loop
mov
cmc
push
pop
pop
pop
cmp
aaa
outsl
push
pushf
mov
mov
and
sub
lret
std
call
xor
push
ljmp
iret
or
dec
cltd
fs
sbb
in
xchg
ret
outsl
call
pop
les
sbb
or
adc
outsl
rcr
mov
jb
push
push
cmp
out
pop
paddsb
in
add
jb
shr
popa
push
repnz
popf
dec
loop
loope
lcall
add
mov
test
mov
clc
adc
out
xchg
pop
outsl
in
hlt
push
and
pop
cmp
add
pop
pop
mov
push
je
into
into
mov
or
rcrl
xchg
jmp
dec
lcall
ljmp
repnz
mov
leave
adc
loope
inc
push
push
sub
pushf
xchg
sahf
ljmp
scas
mov
xor
aas
out
test
mov
sbb
adc
xchg
test
cmp
aaa
xchg
loopne
inc
aaa
ljmp
inc
inc
jo
jnp
sti
jo
rcrb
pop
mov
dec
jecxz
sahf
xor
scas
xchg
enter
sahf
test
cwtl
push
lahf
mov
or
push
pop
jo
dec
lock
push
xchg
xor
lds
shlb
into
lcall
and
ret
mov
in
xchg
push
ret
pop
pusha
and
dec
or
lods
push
or
add
push
mov
or
enter
mov
movsl
or
outsl
inc
sbb
add
push
mov
enter
push
push
shlb
test
dec
in
xchg
push
outsl
inc
mov
push
dec
mov
xchg
in
aad
outsb
call
mov
fwait
lret
add
scas
mov
jne
mov
popf
adc
push
adc
push
cltd
sub
divl
mov
rdpmc
adc
adc
cli
outsl
cmovp
rolb
add
scas
sub
ret
and
xchg
jno
dec
cmc
fwait
add
sub
cwtl
lsl
jne
jp
sub
js
inc
popa
dec
fwait
mov
mov
stos
push
mov
out
add
out
fucomp
cmp
arpl
jmp
pop
enter
scas
jmp
add
ret
mov
leave
cmc
test
xchg
cmpxchg
jecxz
sub
pop
movsb
ds
mov
dec
mov
test
pushf
punpckhdq
pop
imul
insl
push
dec
lods
mov
xor
mov
sbb
les
fwait
ss
pop
mov
mov
push
inc
sub
pop
mov
leave
test
adc
mov
mov
in
ficoms
into
movsl
sti
es
sub
dec
bound
sahf
cmpsb
xchg
mov
test
pushf
xchg
adc
push
shr
fwait
mov
mov
add
dec
dec
scas
dec
outsb
aas
icebp
dec
adc
inc
cmp
pop
mov
jle
mov
adc
mov
inc
and
jae
out
adc
pop
and
je
aad
pop
ret
cld
sti
push
lock
movsl
xchg
hlt
cltd
jb
cmp
add
jo
lea
adc
idivb
mov
lods
arpl
fwait
out
pop
xchg
aas
cmp
js
push
jecxz
mov
repnz
push
inc
mov
mov
mov
add
push
insl
int
ljmp
iret
and
adc
mov
enter
insl
push
sub
xchg
xchg
push
cld
out
jge
dec
bound
pop
xor
xchg
mov
inc
push
cmp
inc
out
lret
mov
jne
clc
push
ja
jg
inc
pop
push
inc
aaa
addb
call
push
fucomp
jecxz
jb
xchg
pop
adc
test
pop
lcall
add
dec
push
shll
jmp
lock
fisubl
sub
adc
cmp
adc
dec
fcom
and
and
jb
xchg
orb
cmp
push
pcmpeqd
push
mov
lea
xor
adc
mov
push
sub
xchg
sbb
vaddsd
sub
xchg
lcall
and
pop
adc
pop
jbe
cltd
pop
les
test
inc
loopew
cmp
movntq
out
mov
push
ds
or
sbb
mov
lret
sub
mov
sub
cmpsb
call
pop
mov
cmpsl
push
pop
add
sbb
rcrl
jg
and
insb
mov
adc
cmp
cs
and
mov
mov
ret
mov
aas
fisttpl
into
dec
jge
nop
add
cmc
xchg
packuswb
pop
andl
popf
rcrl
mov
dec
jb
mov
inc
sbbl
lahf
addr16
es
push
sbb
mov
sbb
repz
test
jb
sahf
scas
jmp
les
stos
push
pusha
xchg
fnstcw
mov
xchg
push
add
mov
jg
rcrb
mov
icebp
jl
mov
fucomp
or
negb
and
add
ret
mov
mov
les
jecxz
jae
dec
push
dec
cmp
daa
push
sbb
lret
addr16
or
push
cmpsb
mov
dec
loopne
les
dec
inc
cmpsl
mov
nop
sub
cmp
hlt
add
jno
loopne
mov
aas
testb
cmp
loopne
sahf
test
lods
push
fcoms
sub
hlt
adc
jmp
xor
mov
add
in
dec
mov
or
testl
shlb
pop
jb
cmp
push
ds
adc
push
cs
xchg
lods
enter
xchg
dec
outsb
loop
sub
ss
mov
dec
push
in
enter
cmpsl
repz
xorb
inc
test
outsl
shlb
jg
das
scas
sarl
mov
jne
push
push
lcall
in
and
cmp
or
cmpl
push
insb
out
rorb
fcos
inc
dec
xor
push
fsub
in
into
pop
cmpl
and
xchg
out
mov
test
xor
sbb
add
push
cmp
mov
cmp
sub
cmpsb
cmp
icebp
test
je
mov
cmp
jne
push
fdivs
or
adc
push
xor
push
lods
mov
mov
push
popf
std
jo
out
scas
mov
shlb
xchg
and
cld
sti
push
sbb
adc
mov
inc
adc
xor
mov
into
xchg
xchg
dec
call
xor
xor
shlb
test
mov
test
test
dec
xor
fs
sbb
mov
ret
popa
add
icebp
mov
cld
xchg
xchg
jne
inc
fistpll
nop
out
ljmp
jo
call
sub
sti
add
je
cmp
aas
in
jno
shll
mov
out
popa
mov
cli
movsl
dec
lret
mov
jl
popa
push
ja
lds
or
cmp
mulb
lahf
dec
inc
push
int
lret
jecxz
rcll
jmp
and
dec
and
mov
rorl
addr16
sbb
push
popf
pop
sub
test
in
dec
arpl
xor
clc
sub
repz
sub
sahf
mov
in
inc
or
cmpsb
addr16
mov
xchg
jecxz
jns
fsubrl
orl
or
jle
adc
ss
jl
xchg
or
daa
xchg
pop
push
pop
insl
mov
vmread
pop
insl
and
sbb
fildll
lahf
aam
ret
imul
lret
adc
cmp
and
lahf
mov
rcll
shrl
jmp
or
clc
imul
lds
or
jp
xor
fwait
mov
inc
in
lret
aam
xchg
ja
cmp
lea
mov
cltd
in
cmp
test
sbbb
fcmovnbe
push
ljmp
sbb
push
pushf
movsl
js
int3
pop
in
mov
mov
jl
xor
andb
imull
hlt
mov
mov
inc
cmc
inc
mov
pop
es
mov
aad
bound
mov
sbb
out
mov
xor
xchg
cmpsl
xchg
cmc
push
in
cmpsb
xchg
sbb
jmp
mov
inc
popa
in
in
jge
inc
hlt
push
push
jbe
xchg
test
cmp
sub
push
mov
mov
xchg
pop
xchg
out
or
arpl
cmc
scas
mov
ret
cmp
jecxz
dec
roll
jb
cs
decl
rorb
or
adc
stos
fcomp
mov
ror
gs
popl
pop
xchg
pop
adc
addr16
xchg
pop
call
xchg
mov
repnz
adc
lock
mov
xchg
cmc
inc
inc
and
clc
inc
and
jmp
lea
shl
test
add
add
jns
dec
dec
add
and
stos
xchg
pusha
inc
mov
test
fcmovnb
cmp
mov
out
mov
push
mov
and
mov
decl
xlat
test
cwtl
xlat
leave
sbb
fldenv
out
mov
push
iret
cmp
or
mov
les
and
mov
push
cli
adc
push
imul
cmp
shll
das
pop
xor
jmp
lret
adc
and
movsb
mov
lea
xor
sub
jb
inc
pop
repnz
adc
leave
outsl
inc
add
add
leave
pusha
dec
out
sbb
jp
ss
mov
sti
jnp
cmp
loopne
in
mov
nop
push
mov
mov
pop
leave
and
out
inc
cwtl
fdivl
outsl
add
movsl
pop
xor
test
mov
xchg
data16
jmp
shlb
mov
xchg
lcall
cmp
out
add
xchg
daa
xorl
stc
sub
adc
int3
push
pop
fwait
push
adc
aad
mov
movsb
aam
mov
gs
incb
cmc
lea
mov
orl
push
sub
ja
push
aam
add
mov
lds
mov
mov
flds
test
ljmp
cmpsl
add
imul
insb
nop
push
imul
mov
inc
push
das
ja
dec
scas
xor
arpl
jle
out
les
andl
or
dec
xchg
lds
pushf
lret
mov
adc
ja
inc
fmul
pop
xchg
in
nop
mov
mov
sub
cmc
jno
xchg
jp
fistpl
aam
adc
pop
arpl
lds
lds
xlat
insl
int3
pop
rclb
dec
popf
xor
add
jle
mov
int3
fnstcw
and
jb
and
out
jbe
nop
test
mov
jge
or
cmp
test
leave
and
mov
ds
cmp
dec
pop
sbb
or
insb
xor
or
mov
lret
adc
fidivrs
mov
pop
movsb
push
mov
dec
jmp
adc
push
or
insl
das
mov
stc
push
fdivrp
jmp
adc
std
daa
dec
cld
push
and
movsb
jns
andb
jl
jp
icebp
clc
aam
in
cmpsl
sbb
push
lret
push
dec
and
faddl
mov
sbb
sbb
xchg
cwtl
adc
mov
fwait
sub
sub
nop
std
stos
mov
testl
lods
dec
cltd
stos
xchg
jbe
imul
pop
adc
jp
imul
inc
fmuls
outsl
or
add
xchg
jae
mov
jns
je
cmp
jl
xchg
sub
fnstsw
lret
mov
dec
cli
mov
jb
xchg
pop
and
aad
aaa
or
mov
andb
mov
stos
dec
mov
inc
mov
pop
and
fidivl
cmpsl
rcrb
leave
test
pop
lcall
stos
sub
add
and
ror
jecxz
mull
aaa
sti
clc
jmp
ds
pop
mov
xor
test
mov
inc
xor
push
repnz
push
gs
adc
in
or
mov
outsb
adc
lods
in
adc
xor
cmpsl
mov
out
push
ds
mov
shll
adc
mov
push
sub
fcoml
fwait
mov
nop
cmc
stos
mov
icebp
sub
and
and
aam
cmp
in
inc
imul
mov
pop
pop
and
incb
repz
jae
fldcw
stc
push
push
push
adc
sub
mov
bound
or
mov
mov
xor
inc
test
mov
ds
pop
add
sbbb
inc
loopne
xor
cmp
pop
inc
inc
js
push
insb
int3
test
mov
push
arpl
or
daa
or
popf
in
imul
jno
fbld
test
cmpb
aaa
push
fmull
add
movsl
cmp
test
dec
lods
sarl
fnsave
inc
mov
out
hlt
add
rorl
popf
mov
test
push
or
insb
sub
lcall
sarl
add
ds
loope
iret
repz
jb
lea
mov
dec
addr16
je
push
sbbl
xor
adc
cmp
xchg
roll
mov
mov
pushf
cs
jle
and
aad
clc
cli
mov
fidivl
negb
aad
jg
push
and
bound
sub
repz
adc
and
pop
xor
rolb
arpl
adc
mov
in
loopne
icebp
loopne
push
pop
imul
scas
pop
sub
scas
push
fs
ljmp
arpl
adc
inc
mov
dec
inc
cmp
aaa
fldt
rorl
jbe
icebp
mov
jae
inc
sub
cmpsl
push
jo
push
sarb
mov
or
adc
dec
lahf
cmpsl
fldcw
or
adc
and
lcall
icebp
ret
into
lods
jge
or
lret
in
push
add
iret
popf
lods
movsb
fcoms
jl
and
rcrl
xor
xchg
std
adc
mov
add
iret
mov
scas
int
repz
je
mov
adc
sbbb
and
add
loopne
dec
add
test
mov
jmp
ss
pushl
pop
dec
mov
or
nop
push
jne
mov
push
cmp
xor
mov
bound
xor
add
lcall
adc
fxch
mov
insl
iret
pop
sbb
push
bound
mov
mov
clc
pusha
js
dec
push
rorl
movl
inc
add
lea
out
jnp
lods
sarb
loope
into
mov
lds
jle
add
or
mov
mov
sbb
jae
inc
scas
in
shrb
sub
push
mov
sbb
ret
lods
cs
cmc
pop
xchg
push
sub
test
jp
or
push
push
dec
ljmp
jae
push
shl
test
xor
ss
in
outsb
jecxz
insb
mov
scas
push
mov
fucom
dec
in
std
mov
pop
add
arpl
psubusb
shlb
ss
lock
xlat
pop
jns
push
mov
in
xchg
fidivrl
bound
int
mov
fldl
insb
pop
mov
fsubrs
add
sub
repnz
in
xchg
inc
push
add
arpl
pushf
add
cmp
xchg
pop
add
jno
pop
xchg
js
pop
mov
lcall
rcll
ja
cmp
push
pop
dec
add
js
lret
inc
cwtl
sahf
cltd
and
je
movsb
and
lahf
mov
dec
xor
sbb
adc
jne
sar
imul
mov
jae
cmp
adc
stos
inc
and
cltd
xchg
idivl
das
fs
cmp
in
iret
scas
inc
out
pop
jge
jecxz
and
insl
ret
xor
cwtl
pop
nop
loopne
mov
cmp
xchg
rorb
mov
loope
adc
in
repz
mov
jbe
out
push
xchg
loopne
ret
subb
popa
xchg
out
push
add
mov
outsl
pop
das
pop
jo
lods
xor
mov
xchg
lods
jge
dec
push
ja
and
push
dec
push
xor
mov
cmpsb
inc
inc
loopne
gs
inc
addr16
jnp
call
fadd
in
mov
loop
pop
push
sarb
and
inc
aaa
mov
mov
mov
cld
pop
xchg
sbb
ret
je
loope
xchg
sbb
out
mov
lret
jmp
xchg
mov
mov
or
insl
dec
inc
xchg
sub
aaa
js
jg
sub
fisubrs
sti
fmul
lea
sub
jns
push
rcr
push
push
popf
xchg
jne
jnp
aas
or
loop
scas
fsts
xlat
adc
cmpsl
leave
ja
into
sbb
mov
mov
jbe
jge
enter
outsl
inc
pop
ficompl
es
mov
mov
mov
jmp
repnz
sarl
test
push
xchg
mov
xchg
je
test
lods
add
add
mov
xchg
xchg
leave
outsb
ss
push
sbb
mov
cmp
clc
aad
and
lock
jne
popf
dec
mov
dec
inc
or
out
jb
lods
push
in
fimuls
int
test
cwtl
maskmovq
notl
mov
loopne
int3
dec
out
scas
adcl
sub
adc
loopne
out
ret
icebp
jmp
cli
sarb
imul
mov
or
aaa
lds
shrb
mov
ds
adc
out
lret
pop
dec
aam
lock
mov
test
iret
mov
inc
adc
inc
or
nop
and
xor
sbb
in
insb
mov
push
sbb
add
int3
or
mov
jl
inc
sarb
mov
add
cmpl
inc
and
add
push
cmp
sahf
testl
pop
mov
lods
jbe
push
in
mov
adc
push
xor
stc
cwtl
add
fsubl
sarl
xchg
mov
pop
push
lock
jno
aaa
in
stc
xchg
inc
xchg
les
sbb
in
gs
cli
inc
sub
sbb
les
sub
mov
fdivs
mov
jg
dec
jns
push
cmp
mulb
cmc
mov
out
fisttps
mov
jge
dec
mov
mov
xor
or
jo
lret
pop
subb
inc
in
imul
or
popaw
inc
jbe
push
pop
xchg
inc
add
leave
scas
mov
pop
jmp
roll
repz
add
cs
call
or
and
stc
mov
cmp
pusha
clc
xchg
cmpsl
jnp
in
adc
in
movl
jno
hlt
jge
inc
popa
nop
cmp
or
test
jmp
xchg
adc
mov
inc
adcb
sbb
clc
jnp
in
jnp
xor
je
dec
roll
push
cwtl
xchg
adc
push
push
mov
lret
hlt
jmp
scas
push
loope
lea
mov
pop
je
mov
mov
ds
dec
test
mov
faddl
adc
jbe
shrb
popf
xchg
or
mov
int3
add
sbb
sub
subl
or
add
insb
ja
jo
sbb
pop
lock
dec
lcall
inc
sti
or
xor
push
adc
add
jle
sub
scas
cmp
xlat
mov
std
out
xor
xor
pop
repz
xchg
mov
iret
inc
je
push
mov
movsb
lock
es
dec
dec
es
inc
addb
test
mov
mov
test
fs
add
scas
sub
jg
hlt
xor
xor
xor
pop
ja
add
inc
xchg
js
or
test
pop
call
aam
jge
mov
out
push
dec
and
and
cmc
mov
sbb
xlat
lahf
js
rcrb
sbbb
lahf
push
lahf
call
movsb
stos
insl
movsb
xor
lcall
and
sbb
pop
pop
dec
repz
push
xor
cwtl
pushw
addl
mov
lock
or
mov
insl
mov
jno
jo
lahf
mov
xor
push
cli
mov
push
sbb
push
insl
out
push
adc
xor
xchg
pop
pusha
aam
fwait
xor
cmp
scas
int
jbe
das
ret
fdivrs
adc
add
fcompl
or
xchg
nop
sub
or
jno
add
lds
sub
mov
mov
xchg
in
cmpsl
jmp
sub
repnz
sub
push
and
aad
shlb
dec
jnp
in
xor
fstps
or
push
movswl
icebp
hlt
imul
add
pop
imul
shr
insb
test
cld
scas
xchg
les
jmp
aaa
mov
cmp
jmp
and
repnz
push
cmpsb
mov
mov
ret
push
outsb
jbe
fisubrl
mov
movsl
mov
mov
pop
xchg
stos
xchg
add
mov
inc
mul
in
dec
sub
lahf
int3
lret
push
xor
cli
sub
pop
shl
fucom
xchg
repz
jmp
out
je
sub
enter
jmp
test
ja
mov
sub
daa
sub
jle
aam
aad
xchg
pop
mov
clc
mov
ret
pop
inc
test
jmp
jecxz
or
fcmovnu
nop
movsb
negl
fstps
jo
rorb
inc
push
dec
or
adc
test
movsl
push
mov
pop
fisttpl
fs
aam
inc
xchg
xchg
cmp
lret
inc
js
sbb
dec
push
movb
push
sub
pop
inc
cmp
mull
test
mov
jnp
xor
cmc
cmpsb
mov
out
adc
outsb
add
fistps
dec
test
jb
std
adc
dec
fistpl
and
mov
xor
lahf
or
test
push
das
mov
lods
cld
test
sahf
je
mov
xchg
jl
ja
jns
ja
xchg
sbbl
dec
mov
shrb
adc
pop
aad
adc
lods
mov
cmp
ret
mov
and
call
cmp
xlat
and
xor
xor
mov
inc
hlt
ficoms
in
mov
jno
daa
dec
fs
into
mov
jecxz
pop
xorl
cs
pusha
loope
xchg
pop
fwait
scas
mov
ljmp
jecxz
xchg
jne
fadds
es
mov
arpl
sub
inc
insb
sbb
jns
in
cwtl
outsb
mov
adc
js
cmp
jno
pop
lret
adc
pop
hlt
in
cmp
mov
adc
cld
xchg
and
sbb
dec
aam
aad
hlt
movsb
rcr
sub
sub
and
sbb
insl
inc
std
mov
xchg
push
push
pop
add
mov
lods
mov
in
dec
das
jns
rorb
jp
cs
add
mov
addb
add
rorb
adc
lods
in
push
das
fisttps
adc
adc
cltd
xchg
mov
jecxz
jbe
adc
lcall
jo
lods
jle
in
ret
push
push
out
cmpsl
mov
pop
and
loopne
xor
jne
insl
idiv
jle
sbb
test
pop
or
mov
in
sbb
adc
test
aaa
and
sbb
ss
cli
jbe
les
or
pop
cmp
pop
iret
mov
cmp
cmpsb
push
loopne
popa
jl
pop
push
push
mov
mov
sub
repnz
add
mov
push
out
andb
pop
inc
pop
imul
pop
push
fnstcw
jmp
ljmp
and
push
pop
add
cmpsb
or
cwtl
dec
push
xchg
fstpl
dec
leave
or
jb
repz
push
jmp
test
rcll
lret
push
in
pop
jp
clc
xchg
jne
and
mov
dec
push
daa
mov
xchg
pop
push
pop
cltd
sub
add
mov
jbe
mov
out
push
and
or
cmpsl
dec
test
out
push
loop
dec
data16
cmp
jno
dec
jg
push
jns
mov
dec
or
jns
in
gs
andb
push
push
popl
je
cmp
hlt
adc
rcrb
inc
in
test
push
push
ret
pop
cmc
mov
xor
fidivs
cld
js
sbb
hlt
js
clc
sbb
pop
and
xchg
dec
mov
xchg
or
out
lret
rolb
out
and
push
pop
sbb
add
jp
xchg
xor
mov
mov
int3
aam
sbb
lret
jbe
sub
dec
stc
lret
aas
fisttpl
rolb
mov
dec
xchg
dec
xchg
repz
jbe
andb
and
scas
into
mov
jns
xor
xchg
dec
lret
imul
mov
enter
fcomps
jb
xlat
jns
mov
notl
or
push
push
push
call
rorb
pop
cmp
cs
pop
imull
out
cwtl
in
ficoml
cmpsl
cmpb
push
cwtl
fcom
loope
aad
cmp
adc
sbb
ljmp
dec
out
out
xchg
in
shrb
push
sbb
int
aas
xlat
jnp
insb
inc
adc
jnp
jmp
je
fs
sbb
rcr
cli
inc
cmp
aam
sub
into
lea
jbe
fstpl
dec
lahf
pop
sub
mov
cld
add
movsb
out
inc
cmp
mov
wbinvd
es
xchg
ds
mov
leave
pop
adc
jge
inc
popa
fsubrl
ret
movsb
daa
bound
in
mov
stos
movsb
push
shl
pop
fsubs
xor
mov
sarb
les
int
negl
jg
lods
cs
stc
mov
lahf
jb
add
inc
push
stc
icebp
mov
and
jb
adc
stos
mov
test
mov
inc
or
int
mov
pop
int
and
add
mov
dec
xchg
das
adc
jno
pop
push
cltd
sbb
inc
and
mov
push
pushf
iret
adc
mov
cld
lods
inc
gs
mov
insl
enter
gs
sbb
mov
mov
inc
inc
fst
sub
dec
mov
js
or
cld
popf
mov
dec
dec
jnp
insb
cmp
jle
inc
mov
jno
je
sbb
xor
xchg
mov
loope
dec
bound
test
mov
jmp
ds
adc
mov
aad
push
sub
sbb
ret
stos
or
enter
stos
push
mov
mov
and
mov
aam
or
dec
arpl
fdiv
push
cmc
xchg
lcall
push
adc
data16
inc
negl
adc
mov
jge
add
sbb
imul
cmpsl
mov
sub
adc
mov
mov
stos
test
mov
add
xor
imul
daa
pop
mov
dec
dec
xchg
movsl
push
or
xor
pop
movsb
stos
mov
aas
cltd
or
xlat
xor
and
jns
cmp
adc
cmp
or
mov
jno
icebp
add
cwtl
jl
xor
fisubrl
and
push
xchg
mov
mov
insl
add
jo
imul
ds
arpl
int
dec
lret
stc
xchg
nop
xchg
jmp
inc
jae
aad
push
add
psubsb
mov
loopne
in
ret
cltd
mov
psubsb
fwait
mov
mov
jl
dec
enter
pop
movsb
push
inc
sti
jbe
cwtl
insb
es
dec
and
lret
lcall
cli
call
dec
jns
testl
data16
stos
loop
or
mov
jp
pop
cld
cmp
dec
and
inc
sub
dec
jge
pop
sbb
mov
je
dec
sarb
std
in
fstl
xor
test
rorb
xor
lods
mov
dec
cmpsb
ljmp
icebp
cmpsb
hlt
adc
mov
ret
add
cli
sahf
xlat
jmp
js
imul
cli
xchg
popa
inc
sbb
rorb
xchg
mov
dec
push
repz
mov
jb
or
in
lea
mov
popl
cmp
cmp
inc
dec
loopne
fsubrl
xchg
push
xchg
mov
ja
outsb
mov
cwtl
lret
in
xchg
xchg
mov
jge
gs
add
cmp
sbb
leave
fmuls
or
int3
cmpsl
pop
mov
jecxz
mov
in
add
nop
mov
push
sub
pusha
test
mov
imul
andb
scas
push
in
mov
push
les
mov
lahf
das
fsubs
gs
and
mov
jne
pop
addr16
push
push
mov
push
decl
mov
popf
dec
push
sub
jns,pn
test
jnp
cmc
andb
in
in
xor
pop
mov
aad
mov
and
jle
std
stos
pushf
push
lea
sbb
lahf
es
mov
lds
or
mov
scas
push
out
mov
lods
xchg
imul
outsl
xchg
and
and
jo
cmp
sbb
xchg
enter
mov
pusha
add
orl
addr16
lret
jg
subb
out
repz
or
stos
mov
das
pop
fwait
xchg
xor
add
adc
xchg
idivl
cmp
or
push
jge
mov
or
cmpsb
sbb
jmp
mov
rcrb
pop
scas
lods
sub
mov
or
or
add
arpl
or
mov
jmp
dec
nop
std
je
mov
dec
dec
inc
dec
pop
jae
lock
or
pop
shlb
ret
push
or
incl
push
add
dec
mov
fs
fcmovbe
aad
mov
pop
push
jo
icebp
dec
sbb
jp
in
out
xchg
rorl
mov
adc
cmp
ret
aaa
cmpsl
xchg
dec
mov
ljmp
and
cld
cmp
push
add
xchg
cmpsl
mov
mov
mov
mov
dec
in
out
imulb
popa
js
fucomi
movsl
inc
jle
adc
into
loopne
insb
mov
jno
mov
aaa
popf
arpl
mov
aaa
outsl
mov
loope
fists
int
repnz
mov
inc
xor
loope
mov
lea
pop
jo
xchg
xchg
jge
test
inc
pop
insb
mov
cmp
xor
jge
lds
aam
std
push
sbb
fistpll
dec
inc
add
pop
dec
mov
ret
repz
arpl
clc
mov
mov
cmpsl
dec
jns
or
sub
fisttpl
inc
cltd
pop
xchg
xchg
mov
scas
or
lcall
xor
jl
cmp
mov
addr16
lock
sub
mov
mov
mov
out
adc
sti
addb
jne
popa
fstp
lret
mov
fcmovu
into
or
xor
add
mov
imul
add
sti
add
mov
dec
pavgw
dec
ja
cs
mul
popa
clc
xchg
popa
out
push
mov
outsl
dec
lds
cmpsb
mov
hlt
xchg
rcll
adc
dec
mov
popa
imul
fdivrl
jne
inc
lods
dec
sub
and
sub
fisubrl
sub
and
popf
frstor
aam
int
jl
repz
or
jge
push
repnz
jl
mov
divb
add
dec
cs
or
jecxz
jl
pop
aas
mov
and
out
sbb
dec
jp
or
push
hlt
or
push
cmp
jbe
mov
sub
sub
and
xor
inc
sahf
cli
push
jmp
jecxz
xchg
mov
mov
lret
scas
mov
out
pushf
push
clc
rorb
sbb
mov
jo
enter
cld
bound
xor
jns
ja
xor
iret
mov
enter
or
and
clc
fcomps
mov
mov
pop
pop
inc
jmp
or
sarb
gs
rorb
jne
jb
xchg
mov
loopne
cwtl
rolb
stos
stc
jecxz
inc
sbb
jge
enter
jl
add
add
outsl
nop
in
insb
lret
ljmp
mov
std
sbb
loop
and
mov
pop
mov
mov
movsl
loop
mov
sub
xor
mov
xchg
cli
in
fwait
push
cmp
hlt
add
ret
mov
dec
dec
pop
push
lods
jb
push
push
jo
mov
jle
inc
enter
add
dec
nopl
sub
mov
pop
add
int
inc
push
fmull
popf
das
mov
lahf
mov
jle
add
out
jecxz
jnp
cltd
sub
or
aas
repnz
push
sub
xchg
ds
bound
sub
call
inc
or
sub
cli
enter
pop
fisubrl
inc
xor
inc
sar
push
push
in
cmp
jl
int3
inc
movsl
insb
xlat
mov
or
in
ret
sbb
cmpsb
sbb
leave
xchg
push
shlb
dec
add
mov
mov
sbb
mov
dec
mov
arpl
hlt
inc
mov
mov
addl
sub
insb
ret
sahf
inc
in
cwtl
mov
bound
dec
lods
pop
push
xchg
mov
lahf
jb
cmp
out
pop
mov
mov
jno
aaa
out
pop
sub
lahf
roll
cmp
jb
jne
inc
jae
outsl
xchg
push
cmp
add
shll
mov
icebp
add
mov
loope
dec
aas
je
test
lret
dec
cvtps2pd
cmp
and
inc
addr16
or
insb
repz
popa
jnp
jl
inc
dec
bound
jbe
gs
ret
add
hlt
ret
sub
pop
dec
sub
inc
push
test
adc
mov
mov
leave
pop
movsb
std
lods
bound
xor
cmpsb
rolb
int3
shrl
sbb
cmp
mov
push
stc
mov
mov
repnz
leave
jle
mov
cmp
movsl
xchg
cmp
adc
cli
ret
ja
cmp
inc
jnp
xlat
pop
push
xchg
pop
fidivl
lret
pushl
repz
call
addr16
sub
lds
std
mov
pop
inc
pushf
sub
fildll
test
fwait
jb
sub
jb
push
insb
push
mov
outsl
mov
pusha
mov
mov
cmp
pop
and
mov
fnstcw
or
jnp
mov
pop
sahf
rorl
xchg
arpl
jg
jo
adc
jmp
lret
adc
shr
loop
bnd
dec
test
and
add
mov
test
lods
add
push
or
filds
es
mov
pusha
xorl
rol
aam
mov
hlt
pop
idivb
xor
or
mov
leave
aaa
mov
jmp
cmp
movsb
outsb
mov
test
movsb
dec
scas
xor
icebp
in
repz
mov
fsubr
mov
rcrl
out
mov
lret
adc
dec
insb
jge
in
fistps
lcall
les
bswap
jb
lods
xchg
leave
mov
jl
xchg
mov
cmp
lahf
movsl
cmp
insb
inc
int
add
inc
sub
sbb
scas
js
pop
mov
pushl
fldcw
pop
cmpsl
cltd
add
mov
or
stc
cmp
int3
movsl
ja
enter
ja
in
test
nop
jb
push
call
movsl
repz
add
jg
xchg
aam
push
sub
xor
jg
je
pop
xchg
push
jbe
inc
data16
adc
pushf
xor
hlt
leave
or
nop
out
mov
mov
push
and
lods
daa
ja
add
cmp
mov
fwait
ss
ficoms
add
add
sbb
inc
pop
sub
pop
loopne
adc
aaa
out
add
sub
loop
mov
sbb
push
in
rclb
mov
stos
and
and
lahf
xor
mov
cmp
sub
hlt
lret
xchg
stos
cmp
rolb
lret
cmpsl
xchg
sbb
jge
mov
jns
mov
jg
out
imul
loopne
pushf
adc
inc
daa
mov
push
outsl
dec
add
sbb
ljmp
pop
push
mov
testb
iret
mov
mov
fsubl
mov
pop
add
push
jg
mov
sbb
iret
dec
adc
pop
push
addr16
mov
xchg
js
int
or
in
dec
cmp
aad
int3
add
sub
pop
lret
jmp
shrb
pop
mov
nop
dec
fidivs
push
cmp
int3
xchg
pop
cli
sarl
xor
pop
insb
sub
add
stc
int
clc
adc
push
mov
lret
out
adc
and
shl
out
adc
dec
add
sub
adc
cwtl
inc
pop
push
loopne
inc
or
add
inc
jbe
sub
insl
pop
mov
call
pop
push
sub
xor
in
lods
loope
fmulp
in
xor
fisttps
js
adc
sub
dec
pop
sub
out
xchg
rcr
dec
pop
and
dec
pushf
imul
in
add
pop
jns
inc
cs
mov
xlat
ja
frstpm(287
fsubs
add
lret
xorl
mov
add
repnz
sub
xchg
mov
mov
add
popf
dec
mov
pop
mov
cs
addl
jbe
repz
xchg
iret
and
int3
adc
addr16
fstpt
in
repz
adc
add
ds
adc
daa
inc
ss
push
stos
mov
lods
mov
xor
outsb
shl
cmp
push
or
dec
adc
xchg
sub
int3
jne
and
int3
mov
mov
mov
pop
add
mov
jmp
mov
test
rolb
stos
mov
jmp
pop
shll
in
and
scas
or
arpl
mov
fdivrs
scas
les
ds
mov
cld
loop
int3
sbb
shl
out
jmp
int
and
fistpl
in
shll
or
lea
movl
cmp
mov
adc
insl
push
cmp
or
es
sbb
push
dec
jle
xchg
ret
jle
jle
pop
sub
fcmovbe
repz
cmpsb
subl
cmpsl
xchg
in
int3
pop
and
jb
push
push
mov
or
in
jle
ds
pop
xlat
shlb
add
cmovne
mov
xlat
data16
sub
scas
add
add
test
fnstenv
push
roll
test
mov
icebp
or
popf
mov
out
mov
insb
inc
cli
mov
stos
cmp
pop
or
insb
jae
mov
mull
sbb
lds
dec
lods
loop
jne
sub
jecxz
pop
sbbl
or
fnstenv
mov
cwtl
jp
lret
clc
inc
pop
pop
scas
pop
push
mov
das
cmpsl
pop
jo
add
and
xor
inc
jae
adc
dec
xorl
mov
inc
cmp
jnp
enter
jg
jle
es
testl
sub
mull
cltd
int
test
sub
sub
stos
xchg
xor
cmp
push
test
jg
sbb
pop
jp
add
and
or
push
ror
repz
adc
inc
pop
clc
xor
mov
pop
dec
sub
lret
stos
dec
sarl
push
cmc
lds
mov
mov
xchg
xor
rolb
pop
lock
popa
jge
push
cmp
add
jnp
xorl
push
pushf
push
sub
xchg
inc
or
and
in
pop
or
xchg
std
inc
push
lds
pop
mov
mov
test
pshufw
adc
adc
xor
mov
adc
inc
daa
roll
fildll
arpl
push
fisttps
test
jmp
lods
jl
enter
lcall
inc
xchg
gs
adc
imul
adc
push
jnp
mov
mov
out
or
cs
mov
popf
orb
mov
push
mov
jl
xor
sbb
sub
sbb
jge
push
stos
adc
shll
jge
jbe
sbb
xor
loop
hlt
cmc
lods
and
bound
sbb
pop
push
rol
loop
shl
adc
xchg
push
not
push
xchg
jl
loopne
pop
or
sub
jg
pop
insb
cwtl
scas
jmp
lods
out
pop
lret
pusha
add
rcll
jns
or
imul
dec
imul
pushf
lods
pop
xchg
or
mov
dec
pop
fdivrs
ljmp
cmp
or
pushf
mov
inc
faddp
pop
dec
push
daa
das
test
test
xchg
xor
addr16
rcrb
lock
fs
sub
jae
insb
sub
test
in
shl
mov
push
add
adc
daa
and
mov
imul
push
decl
inc
packsswb
out
inc
aam
ljmp
insl
subl
cmp
sub
and
xor
idivl
out
cmpsb
xchg
and
aaa
mov
jae,pn
add
pop
jecxz
movsl
sub
sbbb
add
jecxz
seto
mov
fisubrs
sbb
push
jecxz
mov
or
add
pop
xchg
jbe
mov
xchg
mov
xchg
add
aas
sahf
pop
push
lock
mov
push
mov
repnz
and
in
jb
out
mov
jge
stos
test
std
lds
adc
ficompl
test
dec
mov
out
icebp
xchg
es
jl
int3
push
xor
or
leave
xor
js
incb
dec
imul
lods
mov
push
inc
sbb
std
sti
xor
push
pop
pop
stos
adc
add
sbb
dec
xor
mov
push
sub
sub
xchg
cltd
fnstenv
out
jns
pop
xchg
push
cmp
or
jp
iret
xor
call
lock
push
inc
or
add
mov
push
xor
xor
xor
adc
fnsave
movsl
pop
cmp
jmp
cmpsb
outsb
and
add
mov
xchg
dec
addr16
and
sub
mov
int
mov
clc
jbe
xchg
inc
mov
out
sbb
lods
jbe
cmp
sbb
aam
xchg
cs
inc
jae
aad
push
push
push
xlat
mov
sub
clc
xlat
jge
inc
pop
cltd
outsb
dec
movsb
dec
fisttpl
mov
pushf
xchg
jp
sbb
mov
jg
inc
out
xlat
mov
sub
dec
es
sbbl
ds
ja
inc
daa
inc
dec
movsl
in
imul
mov
xchg
in
je
sub
std
ljmp
xor
xchg
or
and
daa
lret
out
div
add
jg
ljmp
inc
mov
adc
int
popa
push
pop
arpl
xchg
scas
dec
pop
mov
adc
leave
pop
lds
or
xchg
xor
sarl
push
es
lods
andb
dec
adcl
cmp
add
mov
mov
mov
in
add
ret
aam
pop
xor
lock
aad
sbb
jp
pushf
sbb
aad
dec
dec
xor
fs
scas
add
repnz
cli
mov
imul
leave
daa
pop
ja
xor
cmpsb
dec
add
sbb
lahf
xor
cmp
inc
or
push
cmpsb
in
out
inc
int3
inc
add
insb
pushf
les
sub
fwait
jmp
pop
xchg
loop
sbb
xchg
pop
xchg
jp
mov
cmpsb
and
push
test
pop
add
iret
mov
mov
jnp
jge
mov
xchg
mov
jns,pt
fsubrl
ss
adc
mov
dec
pop
sahf
dec
lret
lds
push
jmp
pop
adc
jg
jo
sub
cwtl
shl
sbb
mov
add
enter
push
cwtl
in
test
dec
push
xchg
push
neg
nop
nop
mov
dec
push
xchg
push
fidivl
loopne
add
sub
sub
pop
out
mov
pop
comiss
je
movsb
sbb
mov
cmc
insl
ljmp
std
in
inc
cmp
out
clc
ljmp
push
cld
gs
push
and
xchg
es
cmpsl
push
out
mov
clc
aad
cli
jmp
nop
sub
ret
add
fs
popf
into
pop
and
xor
shll
outsb
jmp
push
xor
sub
mov
out
cwtl
cwtl
sub
mov
negl
rcrb
pop
adc
inc
clc
pop
divb
push
dec
imulb
sub
mov
repnz
jae
pop
adcb
jbe
adc
pop
rcrl
shrb
icebp
or
outsb
push
mov
xchg
pop
mov
mov
sbb
cltd
inc
stc
lds
mov
mov
fiadds
xor
fsubrs
out
sub
ret
pop
or
mov
test
add
and
int
dec
fsubr
xor
add
pop
icebp
dec
addb
adc
mov
push
repz
cmpsb
xor
hlt
sti
adc
inc
inc
and
fnstenv
out
stos
add
mov
pop
iret
loop
scas
cmp
dec
fstpt
add
cmp
mov
jb
xorb
nop
and
insl
stos
xorl
or
popf
movhps
ljmp
orb
fistps
iret
adc
outsb
push
dec
mov
in
xchg
inc
testl
les
test
imul
lret
pop
int3
mov
mov
enter
jbe
push
push
cli
xor
pop
push
mov
push
pusha
pusha
inc
or
nop
test
mov
jp
dec
bound
xchg
shr
inc
cs
mov
xchg
mov
loopne
mov
jno
sbb
pop
js
xchg
pop
repnz
jge
jae
test
sub
jp
cmpl
sbb
bound
stos
inc
dec
adc
movsb
push
jno
lods
fwait
and
sub
sub
ja
mov
shl
adc
push
mov
jno
es
mov
fucomi
push
push
popa
repnz
xlat
xchg
fnsave
stos
xchg
xor
je
xchg
aam
fneni(8087
adc
cwtl
push
test
mov
adc
mov
pushf
mov
test
push
out
mov
add
andb
inc
jns
or
mov
ljmp
cmp
jne
jl
out
pop
arpl
inc
add
shll
push
mov
jmp
cltd
inc
imul
bound
push
lea
in
inc
sbb
andb
push
insb
add
outsb
cmp
js
xchg
mov
cmpsl
repz
scas
lret
xchg
xchg
sub
jl
dec
mov
jmp
dec
arpl
mov
js
xchg
ja
and
cltd
xchg
in
ss
call
push
insb
sbb
cmpsb
xchg
dec
outsb
arpl
pushf
xor
test
cli
lret
sbb
andb
pop
or
mov
mov
subl
fisubrs
ja
adcl
jp
inc
leave
sub
lods
call
mov
dec
push
cmp
lret
push
mov
jb
andb
jmp
jnp
jl
pop
mov
aaa
jno
xlat
cmp
fsubs
mov
cwtl
push
cmp
jne
xchg
aas
fs
add
aam
adc
push
sbb
pusha
mov
mov
sahf
das
or
xor
movsb
stc
out
lods
or
dec
push
das
jnp
out
stc
and
lods
fisttpl
cltd
daa
pop
or
arpl
lahf
xacquire
jb
xchg
push
scas
stos
fmuls
cmpl
in
cmp
fs
xchg
ja
cmc
sahf
lock
and
sarl
jl
sbb
jns
sbb
rorb
xchg
stc
addl
cmp
jne
aam
sbb
dec
mov
mov
in
lock
mov
ret
adc
cmp
icebp
or
push
sbb
jp
call
inc
ds
icebp
test
push
xor
sbb
ss
insl
push
push
jp
pop
shlb
sub
pop
inc
shrb
push
inc
cli
mov
or
in
mov
push
pusha
ds
rorb
fsubrl
xor
pop
push
std
xchg
cmc
stos
dec
out
ficompl
or
xor
std
gs
insb
out
je
lods
out
test
mov
popf
or
mov
popf
push
cmp
jmp
mov
jecxz
cvtpi2ps
xor
pop
cmp
cltd
sub
cmp
mov
sbb
inc
add
sub
mov
sahf
fsubr
dec
jl
sbb
adc
jbe
sub
sbb
mov
mov
mov
lock
push
sbbb
xor
push
xor
leave
inc
divb
add
push
inc
or
mov
jmp
mov
nop
mov
test
fcmovnu
push
in
xor
in
xchg
stos
stc
mov
lds
lea
push
imul
xchg
pop
add
mov
imul
sbb
mov
mov
or
pop
mov
loop
add
nop
and
mov
outsl
int
sub
cltd
cwtl
test
jo
iret
sub
inc
addr16
mov
push
in
pop
sbb
sti
cmc
das
pop
add
cmp
out
pop
leave
mov
mov
lahf
lods
cltd
add
xchg
adc
fisubs
scas
jbe
push
icebp
mov
sub
xor
fs
enter
jae
out
lret
jmp
sti
loopne
icebp
or
pop
je
push
nop
icebp
frstor
dec
testl
aam
add
cmp
cwtl
sub
pushf
inc
adc
scas
les
or
jne
out
rcll
push
test
pop
jmp
jo
jns
stc
mov
popa
jns
jae
and
mov
es
inc
mov
jno
je
and
imul
mov
loopne
push
jl
pop
stc
cld
repnz
push
mov
mov
mov
mov
enter
inc
add
lods
xchg
pop
dec
xchg
and
or
pop
je
inc
bswap
frstor
push
dec
lea
add
ja
adc
je
rcrb
jmp
repz
nop
out
mov
push
add
lahf
das
iret
inc
sbb
mov
sub
scas
sbb
jno
xor
ret
mov
addr16
insl
and
lds
int
and
mov
call
or
sbb
fimuls
insl
into
int3
pop
push
and
jae
adc
repnz
push
inc
xchg
inc
roll
adc
cltd
lea
mov
fcoms
in
mov
call
pop
movsl
notb
adc
cmp
push
sbb
dec
call
xorb
out
mull
stos
icebp
push
je
jns
mov
mov
xchg
enter
xlat
clc
cmp
pop
adc
jbe
and
mov
adc
mov
pop
lods
mov
outsl
adc
ds
in
mov
or
imul
ret
scas
mov
jb
fistl
test
xchg
out
stos
mov
stc
fisubrl
fldt
popl
push
aam
adc
fisttpll
lock
stc
mov
stos
mov
mov
mov
push
loope
aam
jl
mov
lds
in
clc
inc
and
mov
movsl
dec
pop
cmp
xchg
lds
test
outsb
push
test
cmp
fisttpl
testl
or
push
push
dec
repnz
xor
outsl
mov
test
dec
scas
sub
pop
or
lea
mov
lcall
xchg
pop
stos
fmul
or
add
in
pushf
inc
cmp
and
test
sub
adc
jmp
pop
mov
fidivs
arpl
pop
leave
jp
ds
aad
test
xchg
gs
xor
repnz
imul
je
xchg
sbb
or
or
ja
dec
inc
pusha
adc
cmp
insl
arpl
popf
lods
mov
test
or
shrl
lret
jecxz
in
cwtl
adc
push
sbb
push
dec
insl
aam
es
pop
insb
mov
mov
mov
fucomi
out
fcmovnu
cli
int3
das
adc
pop
xorb
add
dec
movl
test
out
inc
cmp
mov
or
cmp
fidivrs
aad
and
adc
xor
aas
sbb
push
mov
es
mov
fst
xchg
and
cmpsl
aaa
jbe
pop
scas
pushf
hlt
pop
sarl
xor
or
adc
jae
and
mov
mov
fbld
add
cwtl
loope
adc
push
lods
lret
xchg
mov
lahf
outsb
std
int
dec
test
std
in
push
and
mov
clc
ret
xor
xchg
ds
js
dec
imul
push
push
test
jl
ss
es
mov
jns
mov
mov
cmpl
js
mov
push
mov
jg
pop
add
dec
sbb
adc
cli
add
or
cld
mov
xor
ret
sbb
std
aad
pop
push
jb
lea
lret
inc
pop
and
adc
mov
int
mov
jg
sub
inc
stc
loopne
gs
mov
fisttpll
add
ret
mov
and
pusha
xor
fisubrs
aas
rorl
loopne
shl
lods
dec
dec
pushaw
shll
cwtl
push
arpl
inc
cmpsb
negb
cmp
sbb
xchg
dec
leave
movsb
loopne
lret
ja
gs
xor
dec
xor
mov
mov
pop
inc
sbb
or
pop
out
into
aas
int3
addr16
pop
jmp
jg
in
fwait
or
fmull
inc
pop
mov
fstpl
outsl
fcomps
add
jo
add
ret
adc
mov
push
imul
outsl
cld
jp
push
pop
leave
cmpsb
jmp
adc
push
pop
sbb
mov
mov
fadds
mov
or
or
sub
addb
ret
sbb
pop
pushl
push
pusha
push
adc
inc
jecxz
mov
shll
cmpsl
xchg
stc
getsec
flds
leave
loopne
dec
jp
adc
out
ljmp
outsb
lcall
mov
movsb
pop
test
or
xchg
adc
popa
push
or
fucom
int3
fisubl
add
icebp
ds
lret
pop
pop
mov
adc
call
cmp
and
sbb
lret
nop
enter
idiv
and
mov
xor
es
leave
sbb
push
and
cmc
mov
jle
pop
sbb
or
mov
bound
mov
pop
dec
fiaddl
sbb
rorl
mov
cmp
mov
jmp
imul
jle
xchg
mov
cmc
inc
mov
int3
loopne
lds
movl
inc
adcb
add
fstps
xchg
ja
fwait
repz
mov
ja
cltd
fbld
dec
shlb
cmpsl
pop
mov
lret
dec
jae
pop
dec
push
je
out
sti
or
mov
int3
shll
mov
jbe
out
jmp
sub
inc
inc
xchg
fs
cmpsl
xchg
dec
and
test
cmp
lods
loop
jl
jmp
fwait
lret
sbb
pop
lea
adc
js
ss
cmp
out
jmp
test
movsb
mov
lea
mov
xor
add
jg
into
shlb
mov
adcl
imul
xchg
xor
push
int3
adc
mov
or
cs
in
ret
repnz
adc
ret
cwtl
aas
add
aad
cmpsl
cld
dec
or
cmp
mov
or
inc
pop
in
xchg
mov
mov
adc
repnz
mov
lcall
jnp
faddl
loop
sub
fimull
pop
fsubrs
nop
adc
xchg
sbb
cmp
imul
sbbb
mov
dec
add
inc
inc
rcl
aam
and
test
clc
lret
pop
add
lea
fwait
pop
jecxz
stos
and
popf
xchg
rolb
xor
dec
and
pop
mov
in
push
gs
mov
aaa
aas
jb
or
fwait
pusha
imul
push
sbb
in
sub
mov
ret
and
sub
adc
stos
mov
jbe
or
cmpsl
sub
lahf
fisubrl
das
lea
in
mov
mov
push
push
ss
and
bound
push
shr
data16
arpl
mov
and
iret
sahf
xchg
shlb
movntq
push
push
dec
in
xchg
pushf
int
sub
call
movb
sbb
into
adc
xlat
outsb
push
jnp
adc
aad
mov
int3
test
rol
test
rcrb
push
or
ss
lahf
ljmp
dec
cli
jle
loop
shll
mov
mov
lods
stos
daa
mov
in
xchg
pop
pop
fildl
leave
popf
jne
sbb
aad
in
xchg
jge,pn
xorb
scas
and
xor
xchg
xchg
inc
movsb
aaa
test
adc
sbb
cwtl
jne
hlt
jae
icebp
pop
decl
nop
shrl
xor
lahf
fucom
push
into
into
mov
sbb
scas
rolw
fbstp
lret
cmpsl
push
movsl
lock
movsl
movsb
aaa
test
add
fsubrl
in
xor
inc
sub
testb
mov
push
xor
dec
adc
enter
btc
jmp
xchg
pushf
and
pop
mov
mov
sub
call
clc
insb
int
sub
cltd
cmp
cld
daa
sbb
out
sbb
mov
inc
js,pn
dec
pop
inc
xor
repz
stos
mov
shr
pusha
sub
in
jg
jge
mov
xorb
mov
inc
jmp
or
jbe
lods
test
arpl
xchg
into
or
mov
lret
ret
cmpsb
rcll
fs
jmp
sbbb
dec
cmc
or
or
cmc
xchg
subl
adc
mov
movsb
dec
cmp
cmp
push
and
xchg
mov
out
shrl
mov
add
and
and
mov
mov
xlat
mov
xchg
repnz
push
mov
mov
jo
jae
scas
fnstcw
sbb
cmp
incl
clc
mov
test
lahf
and
sub
in
outsb
mov
leave
push
or
repz
pop
imul
push
inc
mov
sbb
push
xchg
loopne
adcb
lahf
push
call
cmp
sbb
or
push
xor
cltd
out
out
xor
cmp
push
xor
push
sbb
xchg
je
ds
ljmp
xor
jbe
fistpl
and
xchg
jo
testl
push
sub
rep
mov
push
rorb
jo
pushf
mov
jns
inc
lcall
sti
push
adc
push
push
dec
outsl
test
inc
pop
shr
aas
adc
sub
loop
hlt
pushf
clc
rep
xchg
stc
or
or
mov
mov
shlb
push
jmp
arpl
adc
pop
inc
rcr
sti
pop
sarl
xchg
sbb
fwait
mov
and
cmp
push
and
adc
jge
adc
push
out
xchg
mov
push
shll
ds
inc
addr16
mov
mov
nop
inc
sbb
xor
insb
cmp
popf
shlb
adc
and
xchg
mov
pushw
fdivs
mov
ss
or
ja
out
push
es
mov
daa
popw
xchg
xchg
mov
xchg
jo
jns
aaa
inc
inc
sahf
pop
pushf
call
seta
les
int
and
pop
inc
cwtl
xor
fcoml
data16
ds
mov
adc
inc
imul
xchg
push
pop
loop
dec
pop
out
cmp
ror
xor
or
mov
leave
sbb
pop
lods
fisttpll
ret
sbb
fsubrl
mov
test
mov
jns
fcomps
dec
mov
dec
out
loope
mov
fnsave
push
nop
sbb
push
cmpb
sahf
xor
negb
mov
xor
into
push
movsl
js
push
sub
shrb
lahf
aas
pop
rol
stc
iret
or
push
xchg
imul
add
mov
xlat
xor
subl
mov
out
and
xor
push
mov
popf
lret
add
push
or
pop
jl
xor
jmp
ret
mov
mov
mov
mov
dec
nop
ret
push
push
subl
adc
or
fwait
pop
inc
loopne
rorl
add
and
lods
fstl
push
icebp
icebp
out
xor
outsl
jnp
out
das
iret
add
xor
pop
in
mov
dec
jno
repnz
fwait
xchg
inc
mov
add
std
pushf
dec
cs
fisubrl
sbb
mov
outsb
cwtl
push
sub
outsb
pop
mov
dec
scas
cmp
test
sbb
xor
mov
pop
insl
rcrb
jo
xor
mov
pop
pop
push
mov
std
pop
add
push
je
in
lret
cli
cmp
test
add
inc
xor
adcl
in
imulb
adc
and
cmpsb
inc
pop
dec
rolb
scas
inc
push
lret
adcl
test
jno
ficomps
leave
mov
inc
xchg
push
sbbb
xchg
jo
add
in
cmp
pop
and
jg
stos
dec
push
pop
bound
dec
adc
test
sub
test
mov
mov
call
test
psubd
lret
xchg
add
not
rcrl
jno
jp
insb
cwtl
jbe
out
lods
xor
jl
add
jp
or
loop
cs
add
adc
je
dec
or
sub
xchg
bound
mulb
pop
lahf
sahf
fwait
out
mov
aaa
daa
pop
pop
pusha
loope
add
cmp
pop
test
inc
mov
stc
mov
fiaddl
mov
mov
rorb
or
call
pop
aam
and
mov
and
movsb
in
loope
pop
jne
sarl
xchg
xchg
push
cwtl
inc
in
into
repz
in
dec
psubq
inc
mov
repz
push
stc
sub
jne
xchg
push
xor
inc
pop
orl
fiadds
sub
out
sbb
mov
daa
inc
push
fldt
sub
pop
fistps
div
adc
int3
daa
jmp
sub
daa
mov
or
addr16
fs
fistps
enter
cmc
mov
xor
jnp
dec
dec
push
and
mov
lea
adc
aam
fcom
sbb
ss
xor
push
fstpl
xchg
pushf
inc
mov
or
les
sti
daa
jg
dec
fidivrl
jb
inc
xchg
rorb
xchg
or
mov
testl
inc
enter
addr16
and
mov
lods
jae
sub
add
adc
inc
push
jns
xor
jl
call
fnop
add
addr16
xlat
cmpsb
mov
jne
cmpsl
out
fidivl
push
cmp
adc
and
movsl
mov
and
ds
inc
scas
into
arpl
arpl
call
sub
out
mov
in
inc
sbb
mov
int3
mov
je
jnp
lcall
cmpsl
jle
mov
fnstenv
int
pop
jbe
add
mov
xor
inc
adc
je
or
cmpsb
sub
and
aas
adc
insl
mov
out
subb
sub
mov
mov
gs
xchg
and
test
push
mov
jp
outsl
pop
push
shll
dec
mov
fs
movzwl
pop
jmp
jp
push
int
dec
ret
add
xor
inc
inc
pop
stos
rol
adc
mov
stc
push
jb
loop
out
mov
pop
mov
push
jbe
pop
lea
xorb
popf
loope
in
sub
sub
xchg
sub
out
pop
push
xchg
fdivl
fsub
into
enter
fs
aam
js
cmp
rolb
mov
mov
aam
lods
mov
cmp
cmp
cmp
imul
sahf
add
mov
xor
dec
fsubl
pop
mov
scas
cmpsb
push
xchg
adc
push
lods
inc
sub
fdivr
dec
and
cmp
dec
insl
leave
dec
lret
arpl
push
test
jmp
test
jle
inc
lcall
jg
test
jmp
mov
inc
leave
xchg
fcmovb
movsb
je
mov
insl
bound
push
jmp
and
js
mov
fldl
dec
adc
sbb
push
scas
jecxz
stos
scas
mov
mov
rorb
pop
in
jp
addr16
into
mov
outsb
out
xlat
mov
rorb
pushf
mov
nop
lret
scas
mov
mov
int
shrl
inc
push
mov
popf
mov
mov
insb
inc
add
pop
fwait
push
adc
jmp
mov
adc
movsl
imul
pop
stc
into
popa
iret
sbb
sub
fisubrl
add
aaa
lods
adc
lcall
mov
pop
imul
mov
bound
std
xchg
mov
and
mov
ss
mov
iret
clc
lods
cmp
sub
mov
xchg
addr16
lret
pop
int
and
sub
shrb
inc
jp
in
xor
stos
jnp
test
out
movsl
int3
sti
ficoms
outsl
outsb
adc
out
mov
lcall
mov
popa
cmp
xor
sbb
cwtl
push
sub
jl
aad
imul
out
jne
wbinvd
shrb
test
mov
into
filds
push
in
ljmp
push
shrb
inc
mov
pop
jb
inc
ljmp
xchg
jne
pop
clc
std
jl
in
sbb
int
mov
mov
popa
test
inc
cmp
xlat
jo
ja
movsb
lret
cld
mov
dec
out
or
inc
ja
adc
sbb
sbb
cmpsb
adc
int
push
xchg
sbbb
ljmp
popa
push
scas
push
insb
arpl
inc
aad
pop
pop
add
iret
cli
cmpsb
int3
jb
mov
cs
int
stos
arpl
pushf
mov
mov
pusha
mov
out
lahf
es
lods
cmp
jecxz
pop
lcall
jne
lock
pop
jns
and
fimuls
mov
fnstenv
sub
push
test
std
dec
lea
into
pop
sahf
test
cmpsb
daa
and
and
xor
out
jle
xchg
adc
and
loopne
mov
into
lahf
add
in
jg
mov
push
xchg
sbb
jnp
mov
das
mov
jns
mov
divl
pop
lods
cmpsl
test
lret
mov
sub
and
fsubrs
dec
pop
sbb
inc
fcompl
jne
lods
push
jecxz
into
repz
loopne,pn
aad
jl
sbb
pop
sarb
icebp
mov
std
pop
stc
cmpb
or
adc
fwait
cs
dec
movsb
arpl
outsb
cmpsl
xchg
repz
pop
push
jp
dec
add
mov
cmp
add
xchg
ret
sub
mov
or
fsubrl
fiaddl
sar
jge
call
enter
dec
rorb
xchg
add
in
xchg
sub
jle
rclb
or
into
inc
fstp
jmp
cmc
and
aad
dec
dec
out
xor
popl
outsb
ss
movsb
xchg
sbb
scas
dec
jae
xchg
ljmp
jp
add
xor
insl
xchg
mov
jne
stos
loop
sarl
push
in
jp
sub
sti
xor
int3
test
insb
mov
mov
cs
sub
sbb
ja
nop
sbb
lds
lds
pushf
pop
jne
cmpsb
jae
das
mov
jnp
outsb
fsubrl
jo
ss
jne
clc
lcall
inc
imul
fldt
lds
mov
add
adc
enter
std
leave
mov
mov
push
add
xor
pop
subl
lret
adcl
jle
sbb
xchg
outsl
ficoms
cltd
aaa
add
mov
jns
xchg
pop
sahf
andl
in
icebp
pop
cmp
sbb
movsb
pop
mov
sbb
xorb
and
fwait
mov
int3
lock
rclb
mov
dec
and
or
inc
xchg
aas
aaa
xor
int3
or
incb
jl
xor
cmp
xchg
adc
pop
dec
cmc
xchg
mov
or
dec
sahf
push
roll
shlb
adc
inc
ficompl
adc
sarb
mov
pop
std
pop
pushf
lea
dec
dec
setae
xor
pushf
js
xlat
jnp
mov
sar
outsl
or
popf
sbb
sbb
scas
mov
out
cs
test
mov
icebp
pop
inc
cmp
test
adc
cmp
movsl
push
lcall
test
loope
jmp
pop
je
pop
add
pop
enter
scas
or
mov
cmp
in
dec
dec
lret
dec
jae
sbb
pop
fisubrs
mov
sub
and
pushf
sti
out
pusha
icebp
inc
dec
inc
notl
repnz
insb
ljmp
shrl
sbb
ret
shlb
mov
xorb
jp
sub
imul
in
out
aam
divb
xchg
lods
lret
lahf
in
cltd
fldt
or
popf
nop
xor
and
sbb
mov
jno
inc
sbb
fisttpll
into
aas
pop
cmp
fcomps
test
mov
push
xchg
out
jo
sbb
jae
inc
mov
insl
mov
mov
mov
adc
aam
test
sub
inc
mov
adc
lock
faddl
arpl
clc
stc
mov
ss
push
movl
jecxz
jl
cmp
test
cmc
add
das
dec
cmp
xchg
and
pusha
mov
mov
mov
stc
pop
push
arpl
fbstp
mov
enter
mov
push
cmp
popa
test
out
jg
adc
mov
add
adc
inc
repnz
adc
jbe
data16
orl
loope
aad
cmpsb
pavgb
push
push
push
aad
pop
jle
fstpt
loope
xacquire
or
mov
lahf
ds
mov
clc
lret
xchg
rclb
lods
push
loope
sbb
outsl
nop
fs
sub
insb
ss
fisubl
imul
jmp
xchg
mov
and
cmc
mov
sub
call
ja
cmp
test
cmp
or
dec
ret
jne
int3
test
and
rcll
dec
mov
ss
in
lock
dec
push
inc
dec
sbb
imul
mov
rcrl
mov
mov
or
repnz
jae
outsl
sti
xlat
dec
push
lret
mov
testl
adc
pop
in
daa
sbb
dec
adc
mov
imul
sbb
hlt
adc
xchg
cwtl
mov
sbb
xor
cmp
loope
or
push
inc
test
fstl
sbb
out
out
mov
lea
jo
imul
jb
jecxz
loope
dec
push
cmpsb
push
aaa
loope
dec
sub
in
es
sti
dec
mov
dec
mov
jo
push
jns
xchg
fidivrs
mov
mov
lret
sti
fs
fildl
push
jo
mov
flds
enter
ljmp
push
xchg
cmp
push
jp
rolb
adc
pop
mov
lahf
mov
mov
jge
daa
jge
dec
or
data16
push
ret
repnz
std
out
popf
xor
bound
aam
je
jbe
lret
mov
push
and
xor
aad
jmp
aaa
addr16
ljmp
inc
outsb
std
push
test
jmp
cmp
mov
dec
xchg
insl
cmpl
aaa
mov
jle
and
push
popa
int
arpl
outsl
pop
test
pop
adc
adc
add
jp,pn
adc
lods
push
sbb
jp
aam
push
aas
movsb
mov
inc
cltd
sub
arpl
aaa
nop
mov
daa
dec
arpl
nop
movsb
mov
rorb
cmp
orl
add
repz
jle
scas
jno
test
lahf
xor
imul
outsl
mov
xor
cli
int
or
mov
call
mov
push
cmp
imul
pop
test
pop
scas
out
xor
lret
sbb
insb
xor
xchg
sbb
sbb
fcmovnu
out
sbb
add
dec
jns
add
shlb
fistpl
orl
pop
mov
das
and
cmp
ja
imul
ficompl
adc
or
mov
cli
cltd
aaa
inc
jne
or
aas
stos
pop
xor
push
inc
push
and
pusha
ficompl
idivb
mov
cmp
imulb
out
cmpl
dec
push
push
mov
mov
enter
sbb
js
push
int3
std
or
push
jbe
jl
int
dec
je
in
adc
repnz
lret
xchg
aam
ljmp
je
and
mov
xchg
pop
fcoml
stc
push
push
lahf
cmp
arpl
or
jmp
addr16
mov
sbb
test
jo
iret
pop
sti
rolb
pop
adc
xchg
nop
fcomip
ds
mov
mov
repnz
ficoml
out
push
mov
clc
xchg
push
and
ret
andl
int
gs
addr16
mov
or
add
ja
jmp
mov
icebp
in
arpl
dec
lahf
fcmovu
jmp
test
dec
jb
mov
int
pop
insl
push
mov
fbld
lock
cmp
aas
jg
js
add
dec
repz
push
adc
test
pop
stos
add
and
mov
sub
fmul
jle
insb
test
jecxz
lcall
jb
pop
test
xor
ja
fsubl
daa
push
arpl
fnstsw
mov
adc
xor
mov
gs
add
pop
lods
adc
decl
dec
push
mov
hlt
invd
aaa
stos
and
cmp
adc
gs
dec
pop
jbe
add
int3
in
iret
ds
lret
adc
mov
xchg
out
sub
inc
stc
fisubl
and
loopne
push
lahf
pop
ss
outsl
push
push
cmp
adc
cmp
ret
mov
dec
lock
jbe
pushf
inc
cmp
jp
xchg
inc
ficoml
cmc
inc
icebp
lret
call
add
sub
pop
sbb
arpl
jne
jns
lea
dec
test
bnd
pop
sahf
jmp
test
jmp
pop
xor
js
mov
cmpb
pushf
mov
lcall
xor
cmp
pushf
push
out
clc
stos
jmp
fists
rol
fmull
mov
outsl
dec
cmp
pop
dec
mov
test
iret
pop
clc
insb
adc
test
jecxz
sub
inc
int3
insb
mov
xor
or
adc
lods
sbb
xchg
pop
stos
ja
divl
xchg
dec
call
in
or
cld
push
arpl
cwtl
lret
into
xor
nop
sbb
dec
mov
scas
and
sahf
adc
das
arpl
cmp
add
cltd
sub
imul
pop
icebp
inc
shrl
mov
xor
mov
cld
ret
lea
stos
or
pop
inc
hlt
pushf
inc
pop
pop
mov
rcrb
test
mov
jns
xchg
sbb
xor
mov
dec
shlb
std
les
inc
enter
fstpt
or
mov
aaa
fs
cmpl
xor
lds
pop
pop
and
or
cmp
mov
loop
lock
push
shlb
or
mov
sbb
inc
pop
and
pop
pop
repz
dec
pop
je
add
call
adc
sbb
sub
stc
test
pop
call
add
bound
cld
aaa
mov
enter
fsub
aad
push
mov
cwtl
aaa
jae
mov
mulb
test
cmp
jo
das
shl
jmp
pusha
ss
movsb
xor
sub
icebp
lret
or
stc
mull
shll
add
push
mov
int
pushl
bound
sar
push
repnz
sbb
xchg
bound
or
nop
inc
daa
cltd
aas
clc
mov
mov
pop
jle
mov
jl
jbe
mov
out
lret
mov
xor
dec
pusha
jmp
nop
jno
jno
cmp
cli
xchg
mov
mov
jnp
movsl
push
xchg
adc
mov
incl
or
test
adc
xor
xchg
xor
cmp
mov
pop
and
mov
aam
fnop
add
popf
decb
xchg
stc
hlt
aad
push
lods
mov
lock
mov
sub
cmp
sbb
jle
push
lds
jle
mov
popf
mov
ret
loopne
and
lea
fldenv
scas
mov
ret
test
lods
push
jecxz
lods
repnz
sbbl
or
mov
hlt
mov
nop
cmp
negl
lret
mov
xchg
mov
lea
in
inc
sbb
outsl
repz
sarb
sub
lahf
pop
or
lret
adc
ret
sub
nop
pop
pop
mov
xchg
jb
ss
out
jg
repnz
xchg
lcall
xchg
icebp
jb
push
das
ljmp
pop
xor
push
arpl
xor
sbb
cmpsb
sti
mov
out
cld
cmp
cmc
lods
les
pop
cmpsb
into
or
cmc
add
ja
jle
stos
cmpsb
jo
call
mov
xor
ds
lret
outsb
ret
icebp
pop
int3
and
push
fs
sub
daa
cwtl
inc
push
adc
and
daa
rcll
pop
pop
pop
cmp
mov
or
push
js
sbb
lcall
popf
fidivrs
outsl
sub
xor
lret
cmpsl
fisubl
xchg
or
jge
gs
adc
mov
stos
jmp
lret
lret
jns
int
pop
mov
sbb
bound
xor
lret
inc
stc
push
jmp
dec
cmc
rcr
clc
add
rorl
inc
sub
push
movsb
popa
imul
xchg
movsb
mov
xor
xchg
mov
enter
cltd
lahf
out
mov
xor
insl
add
xchg
add
cmp
sbb
and
fildll
outsb
adc
in
aad
mov
pop
dec
test
push
mov
sbb
dec
xor
xchg
inc
sarb
dec
sub
popa
aam
loop
inc
jg
push
mov
dec
adcl
pop
sub
sarb
and
pop
jecxz
repz
add
add
xlat
jg
cmpl
lcall
aaa
xorl
jae
adc
mov
or
into
cmpb
add
orl
popf
js
or
sbb
xchg
and
leave
lret
mov
push
mov
fidivrs
testb
ss
mov
pop
cmp
sbb
insl
xor
and
inc
std
loopne
pop
pop
aam
inc
scas
xchg
iret
mov
notl
iret
add
jge
dec
mov
mov
sbb
test
mov
mov
inc
push
mov
fcomps
lods
stos
add
iret
ss
sbb
repz
adc
and
movsb
xor
pop
and
jns
out
aaa
sahf
xorl
les
mov
mov
xor
je,pn
sarl
xchg
out
and
mov
orl
outsl
mov
pop
mov
popa
cmp
sbb
daa
jmp
push
push
push
lret
ret
loop
mov
movsl
inc
jns
ljmp
sub
sahf
cmp
in
xor
dec
and
or
divl
and
xor
pop
cmp
mov
mov
push
push
cmp
imul
insb
shlb
shlb
lcall
mov
add
movsl
mov
and
mov
out
push
fadds
adc
xor
cmp
das
pop
mov
dec
sarb
mov
push
mov
jns
scas
pop
cmp
arpl
ss
mov
adc
out
jecxz
and
pushf
loopne
into
adc
stos
jge
inc
push
mov
lret
cmpsl
mov
sbb
enter
mov
pop
fldt
pusha
xor
or
pusha
or
dec
in
cmp
mov
inc
mov
xor
xchg
jl
xchg
xchg
jle
cs
lret
ficomps
hlt
xchg
or
adc
cmp
inc
flds
enter
cs
testl
adc
loop
test
test
mov
mov
adc
scas
mov
pusha
dec
sbb
insl
pop
pop
cmp
fistl
mov
arpl
add
push
shll
in
and
lock
repz
xlat
cli
xlat
cmp
mov
xchg
mov
popf
sahf
fbld
outsl
add
inc
cwtl
jecxz
ret
icebp
mov
movsb
adc
sti
mov
out
inc
push
movsb
int3
dec
dec
mov
mov
xor
push
adc
mov
jae
jl
mov
nop
sub
in
es
in
and
cmp
cmp
dec
popl
mov
in
jle
orl
jbe
mov
ja
fs
aam
pop
pop
jae
imul
inc
adc
fcmovb
aaa
jmp
in
pop
mov
test
clc
push
aaa
sub
daa
jno
jmp
add
push
enter
scas
mov
lret
adc
inc
mov
aad
sub
out
jg
pop
stos
cli
push
sbb
outsl
int3
inc
repnz
xor
inc
pop
sub
lock
loope
push
lods
add
dec
add
jne
lods
mov
dec
orl
loop
divl
add
jns
leave
inc
jo
xor
push
mov
fdivrs
mov
out
xor
test
lods
or
dec
xor
adc
sti
cmpsb
mov
scas
jb
scas
mov
add
test
pusha
pop
addb
dec
push
scas
mov
push
push
or
lcall
lods
shl
mov
fisubs
cmp
cmpl
iret
push
sti
out
clc
cmp
add
sti
cmp
sub
fdivs
or
sub
xor
stos
dec
cltd
mov
push
mov
mov
adc
inc
mov
ds
out
add
lcall
jno
sbb
add
xchg
jnp
cwtl
pop
and
scas
dec
mov
popa
stos
pop
mov
lea
jecxz
fnstcw
jae
stos
stos
iret
leave
shll
add
jge
xor
sub
outsb
sub
add
and
leave
xor
pusha
jmp
xor
repz
mov
push
int3
scas
out
cmp
sub
cs
or
mov
cli
or
fs
mov
lahf
loope
adc
mov
enter
mov
clc
pop
arpl
test
push
clc
pop
filds
mov
mov
mov
icebp
stc
js
add
and
mov
aad
js
test
mov
mov
xor
and
fisttps
and
add
xchg
mov
jg
xor
push
into
dec
in
cs
gs
inc
shrb
out
and
fsts
cs
add
mov
int
pop
sbb
mov
jno
push
fbld
cld
add
mov
out
mov
addr16
pusha
leave
out
out
repz
jg
jae
dec
test
loope
xor
sahf
sbb
mov
add
dec
lcall
mov
push
in
cld
push
hlt
lret
inc
jle
stos
fdivs
cltd
cmpsl
push
xor
mov
popa
add
pop
jae
mov
imul
add
je
pop
cmp
cmpsl
mov
scas
inc
push
pushf
cmp
push
mov
mov
ss
push
int
pop
sbb
icebp
mov
lahf
cld
dec
loopne
pop
jbe
fmulp
imul
jmp
nop
sbb
dec
push
mov
out
dec
pop
negb
insl
xchg
xor
shrl
mov
movl
shr
arpl
xor
jnp
and
sbb
or
pop
lahf
fcoml
loope
dec
gs
movsb
shrb
aaa
ret
dec
mov
xor
xor
insl
repz
popa
jecxz
push
clc
pop
pop
and
cmp
mov
sarl
sbb
jne
enter
ss
mov
sub
or
gs
int3
jg
push
sub
or
in
das
xchg
cmp
adc
mov
out
push
inc
ds
lret
xlat
pusha
fsubl
xchg
mov
loop
je
push
jg
dec
adc
and
in
xchg
stc
loope
fldcw
andl
pop
xchg
jbe
sub
jnp
pop
pushf
push
or
popa
dec
clc
push
inc
decb
pop
sahf
lds
std
mov
lea
aas
inc
gs
fcmovnu
mov
jbe
inc
lea
jne
cltd
lahf
ds
out
sti
or
jbe
adc
sub
fcomip
jo
cmp
rorb
sbb
call
aad
fnstsw
cmp
jle
dec
mov
andb
mov
xor
push
sbb
lret
loope
in
fstpl
icebp
cmp
ret
clc
popf
test
add
stos
aaa
fxam
outsb
mov
stos
test
or
data16
jne
inc
data16
mov
enter
scas
jg
aam
movsl
outsb
daa
mov
mov
fwait
jle
fsts
xor
scas
fadd
add
adc
decl
mov
vandps
or
leave
jbe
mov
out
aas
push
ja
inc
lods
out
xchg
inc
pop
xor
jbe
dec
lods
mov
or
cmp
and
out
sbb
xchg
pop
repnz
mov
call
out
out
loopne
xor
loopne
mov
std
cmp
lret
jnp
das
mov
pop
shrl
fcoms
jne
fs
dec
lock
dec
popf
adc
xchg
xor
mov
xor
leave
jne
shlb
cltd
gs
ss
ja
sub
jo
pop
dec
mov
in
sub
lret
cmp
std
mov
lret
jne
inc
imul
mov
jno
jbe
cld
aam
iret
xor
push
fsts
addb
lea
subl
movsb
or
ja
and
or
xchg
push
mov
movsb
fnstenv
mov
push
loope
sbb
pop
push
notl
stos
xchg
dec
mov
cld
and
dec
or
outsb
shrb
or
pop
or
repnz
imul
and
rcr
cld
and
xor
into
sub
push
cmp
call
and
lods
mov
xor
hlt
cs
cmpsl
in
into
leave
cltd
and
dec
xchg
rcrb
push
icebp
imul
mov
and
out
addl
in
sub
jnp
push
jo
jge
inc
jl
loop
pop
push
sar
jnp
xor
cld
mov
push
movsb
xor
sahf
sub
dec
adc
das
dec
movsl
pop
aaa
popa
jae
mov
mov
adcb
pop
js
jmp
pop
pop
test
pop
out
mov
sbb
mov
pop
mov
in
dec
inc
sbb
and
jne
lahf
sbb
sar
repz
fbstp
imul
ljmp
in
jl
sub
lahf
vmread
iret
in
pop
pop
stos
cmc
ret
sub
js
inc
jnp
push
leave
sub
sub
cmp
and
mov
mov
mov
out
popa
inc
nop
dec
jo
mov
std
repnz
dec
aad
cmp
addb
inc
or
in
pop
les
pop
fmull
push
loope
add
adc
sub
or
sub
mov
test
ja
and
mov
imul
fwait
data16
in
and
mov
sbb
ret
aad
sbb
cmp
movsb
ja
mov
fldenv
pop
mov
lds
xor
cwtl
mov
mov
aaa
hlt
scas
lds
push
pop
xor
or
lcall
stos
push
cmc
pushf
jmp
jno
aas
pop
sti
mov
inc
repz
sub
push
popf
inc
jae
dec
push
adc
xorb
dec
jg
mov
cmp
xchg
or
out
inc
into
daa
jno
rolb
imul
mov
xchg
dec
in
jne
or
subl
inc
out
jg
inc
adc
sbb
dec
inc
push
add
psrld
cmpsb
inc
movsb
fwait
shrl
lea
iret
popf
popa
xlat
push
bound
jle
jmp
arpl
pop
fdivs
cmpsb
and
iret
lea
pop
repz
push
sbb
cmpsl
xor
pop
mov
in
pusha
cmc
xor
les
xchg
push
and
push
lret
cmc
mov
fwait
xchg
lock
stos
dec
ficoms
and
inc
lock
dec
push
scas
cwtl
jge
adc
cmp
and
icebp
popf
leave
sbb
mov
mov
mov
js
inc
das
or
mov
pop
call
mov
es
push
mov
loop
mov
adc
lds
leave
pop
push
out
mov
or
fistl
fisubl
into
loopne
push
or
jb
lahf
add
fsts
add
ret
push
psubq
sub
movsl
cmc
inc
pop
loopne
pushf
shll
and
andb
inc
sbb
fwait
dec
adc
pop
loopne
dec
call
in
mov
adc
ret
fs
sub
mov
popa
pop
repz
imul
lret
mov
and
pop
out
ljmp
adcl
bound
cmp
mov
or
in
mov
cmpsb
mov
inc
divb
ss
clc
sti
jo
dec
cmp
fcomps
jge
push
cmp
push
and
movsb
jnp
cmpsl
or
je
ss
mov
or
cmc
jmp
push
mov
xchg
loop
xor
mov
sti
jns
push
mov
inc
loop
adc
test
in
sub
inc
mov
js
les
add
mov
xor
pop
jnp
fs
jmp
pusha
jbe
xchg
push
ror
push
sbb
mov
jg
jnp
pop
cmp
mov
adc
jl
out
ljmp
or
out
mov
cld
pop
rcrb
xchg
or
dec
notl
mov
clc
pop
add
push
loope
inc
adc
test
out
mov
xor
push
imul
add
mov
je
jo
push
push
dec
fsub
aas
repz
enter
pop
add
cli
rclb
xchg
mov
add
arpl
mov
test
filds
in
jb
inc
data16
mov
insl
push
mov
repnz
sub
xor
movsb
sbbl
mov
and
mov
fnstenv
xor
push
daa
cwtl
pop
rcr
cmpsl
cli
adc
in
lock
jl
ja
mov
push
xor
pusha
insb
les
lods
mov
out
mov
xchg
push
rorb
in
sti
ret
push
or
xor
sbb
lods
xchg
pop
ret
or
pushf
xchg
cmc
or
push
xor
dec
adc
cli
push
cmc
hlt
mov
push
icebp
popf
aaa
outsb
xchg
mov
loopne
sbb
pop
js
jp
cmc
inc
shll
pop
jns
cmpsl
push
cmp
jne
mov
movsb
pop
in
cmp
rcr
fnstenv
dec
pop
popa
add
xchg
mov
inc
lcall
lods
or
and
cld
mov
push
xor
xor
dec
testl
push
call
outsb
xor
push
and
mov
push
inc
xor
sub
mov
movsl
push
cmpsl
cmp
jnp
imul
mov
out
jp
xchg
and
test
scas
xchg
ss
mov
add
je
xchg
inc
sub
cmpb
sbb
and
add
lret
or
call
mov
pop
call
inc
je
mov
or
test
test
pop
in
adc
ljmp
xlat
clc
mov
and
xchg
xchg
jp
xchg
out
clc
test
stos
mov
push
mov
insl
leave
or
xchg
mov
push
push
sub
js
iret
insl
sub
mov
mov
sbb
sti
je
bound
sub
and
repnz
mov
push
mov
loop
popa
in
out
movsb
fnstenv
sahf
and
mov
idivl
pop
cmp
enter
sub
push
mov
fidivs
and
ficomps
pusha
xchg
int3
adc
gs
loopne
mov
fsubl
push
das
pusha
mov
jmp
in
jns
out
fs
arpl
into
mov
jmp
push
addr16
es
add
jle
cmp
mov
test
rcrl
xchg
jl
fldenv
xchg
mov
push
pop
ret
sbb
call
pop
fisubl
mov
jp
push
aaa
and
shrl
rorb
and
inc
je
seto
in
sbb
push
nop
or
push
xor
adc
fldenv
test
mov
pushf
test
push
mov
test
or
out
loop
and
mov
cmp
sahf
and
leave
scas
imulb
mov
push
inc
ss
loop
cltd
js
jl
repnz
sub
repnz
xor
mov
mov
lods
fwait
sbb
mov
jae
xlat
adc
lret
rcll
push
cmc
aam
ss
mov
or
cmpsl
xlat
pop
xchg
iret
add
mov
push
sub
add
loopne,pt
leave
sbb
insl
in
or
pop
out
rol
xchg
insl
roll
dec
jge
and
loopne
and
sub
mov
call
pusha
mov
inc
lret
je
and
std
mov
xor
test
out
addr16
lret
fnsave
push
cmp
ret
mov
into
sub
pop
mov
mov
sbb
push
lret
or
cmpsb
hlt
sub
mov
or
test
add
mov
mov
out
dec
es
pop
or
jb
bound
js
into
sbb
js
out
sbb
xchg
fmull
loop
add
adc
repnz
push
jo
jbe
add
push
sbb
cwtl
push
xchg
test
repnz
gs
mov
in
shlb
jge
nop
test
outsb
outsl
jns
xor
cmp
sbb
push
lahf
mov
jae
fimull
gs
add
mov
xor
and
fadd
rolb
nop
jge
sbb
sub
pop
adc
cmp
insb
roll
mov
adc
popf
jg
sub
fdivl
jno
leave
lock
jne
scas
jecxz
ljmp
mov
lods
test
cmp
mov
les
repz
cmp
test
es
dec
jbe
pop
outsl
lods
repnz
adcb
mov
into
inc
test
nop
repnz
and
sub
mov
repnz
les
xlat
xor
orl
sti
sub
inc
es
push
xor
lods
jae
std
out
inc
sahf
mov
jge
rclb
test
pop
sbb
push
gs
mov
out
cmp
inc
pop
icebp
mov
adc
movsl
and
insl
inc
call
enter
lods
xchg
sub
cltd
stos
pop
adc
imul
jo
imul
out
test
xchg
fs
add
jmp
adc
add
sbb
test
lods
sbb
jb
jecxz
outsl
aaa
mov
inc
sbbl
enter
in
jge
sub
call
cs
xor
inc
dec
jl
jecxz
push
inc
scas
leave
sbb
sbb
lret
xchg
dec
mov
xor
aaa
xchg
aam
dec
fcoml
lret
push
mov
mov
push
xor
adc
or
das
push
jecxz
outsb
sub
hlt
bound
arpl
in
dec
xchg
xchg
inc
jecxz
or
mov
add
mov
lcall
push
ds
sub
test
jae
movsb
mov
pop
ds
cmp
mov
sahf
xchg
ja
outsl
mov
adcl
sbb
sbb
xchg
jns
jg
inc
sub
inc
and
or
mov
lret
int
and
pop
stos
cs
push
cmp
shr
push
fnstenv
jbe
pushl
into
sbb
xor
push
cmp
ret
enter
jg
lock
int3
ret
inc
jne
or
xor
pop
mov
jb
jmp
cld
imul
insl
jecxz
aad
sbb
mov
pop
inc
insb
xor
pusha
mov
and
imul
and
add
es
popf
push
xchg
push
and
std
mov
es
fadds
adc
lods
enter
pop
cmp
xor
add
and
cmp
mov
icebp
rolb
gs
and
pop
push
jg
mov
aas
out
cmp
jle
repnz
mov
push
and
ljmp
cli
popw
sbb
cmpsb
jne
inc
mov
jo
jl
dec
jp
arpl
fwait
dec
decl
pop
xchg
test
push
aad
test
pop
pop
jnp
lods
jbe
lods
xor
sbb
sub
and
adc
push
repnz
test
and
push
je
rorb
mov
xor
mov
rorl
daa
stos
pop
cmp
dec
pop
inc
push
jmp
push
mov
cmpsb
mov
xchg
jnp
jnp
jp
adc
add
lods
fiaddl
cmc
mov
ja
mov
ror
mov
pop
push
push
std
imul
dec
fs
in
xchg
push
lret
and
mov
and
sbb
repnz
fwait
dec
loop
repnz
call
jnp
lret
mov
cmp
pop
iret
je
pop
bound
stos
adc
aaa
lahf
mov
imul
test
inc
xchg
push
mov
pop
mov
in
stc
test
mov
pslld
pushf
push
inc
jo
xor
les
push
arpl
sbb
jle
dec
jecxz
jp
sub
push
lods
ficoms
sub
jmp
xlat
int
xchg
push
ret
out
inc
xchg
out
sub
sti
stc
sti
in
lods
cmp
sbb
cli
mov
pusha
mov
pop
xchg
ja
and
nop
push
testl
dec
and
sub
stos
push
movsl
arpl
aad
js
fisubrs
xchg
mov
and
jle
jle
aaa
loop
leave
mov
xor
push
mov
xchg
lret
pusha
push
or
fildl
cld
je
enter
ja
or
cmp
jae,pn
nop
call
push
adc
adc
iret
inc
sbb
add
jae
mov
gs
adc
cmp
bound
push
jb
mov
clc
outsb
nop
push
in
xchg
add
rolb
or
pop
movsl
insl
fdivrs
aam
mov
scas
pop
lock
inc
icebp
test
dec
mov
popf
je
test
or
psrad
adc
outsl
sbb
adc
mov
popa
pusha
das
mov
xor
sub
push
pop
cli
loop
push
sbb
fcmovnbe
mov
ljmp
hlt
jbe
daa
push
popf
mov
imul
xchg
gs
mov
pop
sbb
inc
test
lret
add
ss
mov
mov
out
jmp
in
push
mov
inc
add
daa
cmp
ljmp
pop
lahf
pop
out
divb
adc
jno
scas
jno
dec
cli
inc
inc
add
xchg
enter
scas
jae
xor
mov
push
inc
inc
ja
imull
push
movsb
add
test
test
rolb
call
test
mov
ds
movsl
orl
pop
ljmp
xlat
adc
xchg
adc
xor
adc
out
ss
ret
insb
cltd
dec
inc
mull
das
mov
pop
mov
lahf
add
mov
mov
lods
iret
repz
cwtl
mov
or
movl
add
mov
sub
fldcw
aas
fdivs
cmc
sbb
cmp
aaa
mov
xor
cmp
popf
lods
in
mov
mov
sbb
dec
push
ret
sti
jg
loop
xchg
or
pop
mov
neg
mov
mov
js
lcall
pusha
add
xchg
scas
lahf
ret
mov
lods
sub
in
call
mov
cmp
dec
sbb
addr16
loope
cmp
movsl
push
cmp
xchg
and
lods
or
xorb
pop
jne
and
xor
jne
adc
mov
add
sahf
es
repz
xchg
or
dec
and
aaa
int3
jmp
scas
add
scas
mov
js
xor
pop
ret
pop
add
mov
jecxz
iret
and
lret
pop
andb
sub
cs
std
aad
jno
fistpll
push
aad
adc
aam
movsb
add
aas
xchg
sub
mov
xchg
adc
int
cld
or
xor
out
cwtl
mov
adc
in
sub
mov
pop
cmp
call
aad
xchg
nop
sub
or
lret
cld
mov
or
push
les
movsb
icebp
fsubrl
xchg
push
les
add
mov
fimuls
mov
and
pop
xchg
xor
inc
cltd
and
sub
cmp
loope
jle
cmp
sti
pop
mov
mov
pop
dec
or
mov
inc
mov
jge
lret
popa
xchg
cmp
js
in
xor
cmpsb
stc
inc
and
xchg
int
sub
jp
push
or
insl
push
push
aas
adc
out
mov
aaa
adcl
mov
push
fnstsw
push
sub
xchg
repz
rorl
and
loope
jecxz
pop
mov
dec
cmp
xchg
cmp
inc
aas
add
call
inc
sub
or
aad
and
ja
shr
and
in
lods
pop
jae
daa
stos
and
inc
test
ss
sub
iretw
add
inc
and
data16
test
fcom
sbb
jo
call
inc
dec
push
cmp
ss
mov
not
add
mov
ss
pop
or
sahf
inc
repz
mov
and
loop
lret
fadds
repnz
andb
ja
mov
and
sbb
push
leave
xor
inc
out
xchg
sub
pop
cli
aaa
mov
pop
mov
push
inc
imul
daa
insb
mov
in
in
xor
out
adc
pop
adc
xchg
rol
lock
insl
xor
in
call
push
data16
cmp
loopne
mov
jb
xchg
push
xchg
sub
test
jge
repz
mov
push
popf
jg
flds
mov
gs
imul
lods
lret
into
nop
orl
cmpsb
lcall
arpl
lods
adc
jb
or
mov
pop
bound
dec
daa
or
push
lods
adc
xor
shl
outsb
lcall
add
inc
movsb
add
pop
inc
sbb
cmp
xchg
data16
and
test
pop
stc
pop
test
loope
movsb
xorl
ret
adc
dec
rcr
mov
inc
xlat
fwait
lods
aam
inc
jns
add
mov
mov
mov
push
xabort
cld
inc
pop
jbe
jecxz
cmp
shrb
jne
pop
and
jl
pop
repnz
inc
inc
lods
inc
arpl
add
or
fmull
int3
fs
cmp
insl
in
pushf
daa
mov
jo
int3
add
adc
sbb
xchg
lods
addr16
add
dec
out
or
dec
andl
add
repnz
daa
test
push
movsb
jbe
sub
add
mov
repz
ret
scas
jb
loopne
fnstsw
xor
daa
ret
or
mov
stc
xchg
cltd
shlb
jmp
test
sarb
cli
int3
mov
jbe
popa
dec
rclb
adc
fnstenv
ja
xlat
and
cmp
cmp
sub
mov
movsb
fs
lea
jno
loop
mov
xchg
mov
testl
sub
loope
jge
cmc
out
adc
jp
dec
mov
inc
sarl
adc
cmc
sbb
jnp
jl
sahf
cmpsl
sahf
cmp
dec
xchg
sbb
imul
cmp
in
cltd
xchg
add
and
dec
or
jns
adcb
aam
out
sbb
mov
jae
adc
int3
push
mov
dec
sub
pop
mov
lret
sbb
push
pop
xchg
or
mov
adc
xchg
push
fldcw
mov
add
sbb
ja
mov
adc
lock
xlat
mov
ss
in
out
dec
lock
push
aad
imul
scas
aad
xor
jbe
dec
jbe
pushf
enter
int
adc
cmp
shrl
inc
jnp
add
data16
aam
sub
mov
and
ds
xchg
pop
and
fistpll
mov
jp
sbb
xchg
sbb
fsubrl
push
mov
fmuls
lock
lea
loop
out
jmp
mov
xchg
adc
cld
adc
cmp
enter
hlt
popa
and
cmpsl
mov
inc
in
push
addr16
aam
lock
push
pop
add
mov
xlat
negl
je
dec
testl
sub
push
fwait
das
xor
out
jae
imul
dec
pop
call
mov
stos
cmpsl
mov
addr16
lods
sbb
repz
imul
stos
pop
clc
adc
push
imul
mov
es
add
dec
sub
mov
cld
mov
popa
lcall
loope
or
adc
mov
inc
les
rorl
testl
repnz
or
clc
mov
sbb
push
jmp
xorl
pop
xchg
jl
mov
and
and
stos
outsb
dec
or
xchg
sbb
mov
push
xchg
ret
add
dec
dec
stos
sbb
dec
sarl
mov
xchg
sbb
scas
and
into
stc
jno
lock
mov
mov
sub
outsl
pop
cmp
mov
sbb
out
push
insl
push
inc
mov
dec
jnp
fmull
insb
dec
inc
js
xlat
fnstsw
cmp
jl
push
fdiv
fsubrs
and
cltd
xor
mov
push
lds
dec
sbb
outsb
shr
push
inc
call
pushf
xor
mov
lahf
add
cli
push
adcb
clc
ds
pop
add
adc
imul
jge
les
add
loopne
sub
add
lcall
or
push
lahf
adc
in
xchg
call
int3
xchg
xchg
jno
adc
mov
push
or
add
xchg
pop
rclb
aad
out
incb
sub
mov
lds
stc
sub
ret
inc
xchg
clc
mov
insl
ret
hlt
cmc
inc
add
movl
sbb
push
popf
fmuls
mov
pop
ja
xor
pop
lock
xor
jmp
push
or
jae
sti
shll
lods
bound
xchg
arpl
xchg
sub
cmpsl
psadbw
imul
ljmp
cmp
ror
dec
repz
leave
or
dec
cmc
mov
and
jb
icebp
dec
fsubs
adc
pop
sbb
shll
hlt
movsb
xor
push
repz
mov
pop
pop
jp
sub
pop
mov
out
jl
and
data16
cmp
push
sub
ret
xlat
je
mov
sbb
xchg
std
or
test
inc
imul
repnz
stos
sarl
jns
mov
repz
xor
imul
jnp
push
jge
inc
xor
adcl
lahf
test
push
pop
adc
daa
aad
lds
push
ss
iret
pop
lods
imul
pop
subb
push
mov
shll
nop
sub
cld
cltd
xchg
andb
and
fs
testl
shlb
xchg
add
or
xor
mov
scas
jbe
icebp
rorl
imul
dec
xchg
je
aas
add
mov
pop
xchg
bound
sbb
lods
inc
and
jne
xchg
lea
inc
je
add
nop
mov
jl
iret
jnp
leave
push
cmp
push
gs
mov
push
clc
xor
adc
mov
xchg
lcall
cwtl
lock
push
push
fadds
adc
lods
ret
add
mov
icebp
jmp
imul
dec
push
in
iret
mov
mov
divl
mov
mov
fists
pop
addr16
bound
sub
insb
dec
inc
and
mov
dec
sbb
dec
mov
fwait
push
push
mull
pop
daa
test
mov
inc
pop
int3
cmp
mov
lret
add
lret
xchg
and
pop
mov
xor
mov
dec
xor
ss
push
mov
sub
ja
aad
out
iret
or
out
fsubrp
sub
xchg
xchg
dec
pop
dec
ret
cmpsl
lods
repz
push
cltd
mov
into
add
loopne
lcall
shlb
and
sub
fs
imul
pop
int3
dec
inc
jmp
jp
popa
arpl
jns
fcmovb
mov
nop
cld
push
pop
push
or
dec
addr16
arpl
dec
scas
mov
loop
imul
or
repnz
cmp
jnp
aas
rorl
xlat
xchg
mov
xor
mov
call
insb
jne
test
testb
das
xor
icebp
jbe
mov
mov
add
xchg
test
push
out
pop
enter
and
aam
outsb
mov
fnsave
mov
pop
or
loop
mov
lret
data16
insb
movsl
jmp
push
lcall
in
pop
int
test
and
mov
ja
ljmp
vpsubw
cwtl
in
ljmp
ja
es
in
arpl
push
nop
pop
dec
mov
cmp
into
mov
lods
js
pop
mov
jae
aaa
int
mov
jecxz
sti
js
mov
mov
sub
inc
lret
scas
mov
mov
pusha
dec
fldcw
mov
jg
in
test
cmp
call
js
mov
mov
mov
insb
mov
mov
ret
inc
insb
movzbl
insb
mov
fidivl
adc
cmpsb
test
lds
sub
add
cmc
and
mov
add
mov
cwtl
shrb
xchg
xor
stos
fbstp
push
and
test
jns
ljmp
bound
clc
cmpsb
into
pop
cmp
nop
add
and
mov
jns
pop
push
addb
jbe
pop
inc
dec
push
jp
mov
lret
enter
popa
mov
in
mov
mov
ds
mov
mov
cli
ljmp
cmc
xor
mov
in
inc
cltd
jb
fdivl
jl
mov
rorb
mov
jl
movl
sbb
xchg
and
inc
hlt
or
out
repnz
mov
mov
inc
inc
dec
add
mov
cmc
inc
ret
loopne
test
mov
jne
sbb
push
orl
xor
rorb
or
and
pavgb
imul
cli
aas
jae
push
xorb
mov
mov
inc
dec
ss
pop
mov
inc
cmc
out
or
lret
add
sbb
data16
popa
xor
mov
sti
lret
sub
sub
lods
cmp
xor
pop
xchg
add
loop
xchg
fucomip
adc
inc
or
rcrb
aad
lret
fstp
fcomps
imul
test
in
movsb
sbb
popf
out
data16
jp
lea
cmp
adc
cltd
rcrb
jno
fwait
push
or
outsl
xor
or
js
inc
lcall
and
daa
std
insl
cld
xchg
bound
mov
inc
inc
xchg
mov
in
jle
lods
loop
lret
sub
aam
pushf
adc
xor
cmc
dec
dec
stos
mov
callw
mov
ret
jae
int3
jmp
in
push
or
mov
sub
cmp
lea
insl
aaa
mov
push
sbb
dec
dec
pop
repnz
mov
sub
cmp
dec
lahf
dec
jp
jmp
andl
in
push
aad
sbb
fnstsw
jbe
mov
ret
mov
sbb
sti
push
lret
sbb
pop
pusha
adc
adc
xchg
mov
cmp
xlat
jae
test
test
xchg
jg
xchg
fs
push
pop
loopne
xchg
in
loopne
or
lea
sbb
fstpt
or
je
jne
sbb
and
inc
stos
nop
popa
mov
divl
lods
mov
push
mov
jne
jg
push
adc
xor
push
xor
lcall
movsb
xor
inc
push
aaa
into
les
icebp
xchg
divl
or
lcall
cmp
sub
lods
scas
mov
xor
ds
sub
lock
insb
int
loop
into
cmp
add
sub
popa
into
aad
shlb
push
and
shl
ljmp
xchg
mov
jle
imul
aaa
sub
jns
daa
mov
mov
mov
push
dec
dec
scas
aad
loopne
mov
lea
push
inc
sbb
inc
lahf
in
test
xor
xor
push
aaa
add
iret
add
mov
repz
sbb
ret
je
popa
inc
xchg
xchg
or
mov
adc
push
imull
sti
pop
outsl
mov
push
adc
xor
lahf
add
mov
push
rcrl
cld
fcmovnbe
xchg
dec
mov
dec
in
out
fstpt
fidivl
jbe
adc
test
shr
outsb
jecxz
xchg
add
stos
fsubrl
adc
inc
ret
add
js
stos
jmp
ja
or
xchg
dec
outsb
imul
and
jno
add
int3
out
mov
dec
scas
hlt
and
pop
inc
imul
pushf
std
gs
movsl
fimull
add
cmp
call
cmp
mov
imul
je
aaa
cmp
pop
jns
mov
mov
mov
data16
ret
das
or
sbb
or
mov
mov
stos
jmp
sub
push
clc
and
xor
fldt
cwtl
mov
inc
mov
rorb
pop
and
xor
fisttpll
cld
cld
outsl
inc
aas
mov
push
lahf
pop
cmp
inc
pushf
lods
mov
aad
jbe
les
sbb
pop
cmp
sbb
pop
mov
rclb
inc
push
rolb
popf
or
outsb
add
lea
sahf
add
js
add
add
mov
popf
mov
cli
add
sbb
rorl
cld
test
scas
fildll
add
pop
xchg
add
push
cmp
loope
sbbl
pop
divb
mov
dec
sti
mov
mov
addr16
in
mul
stos
jmp
mov
jbe
rcrb
jl
inc
or
xor
adc
shlb
xorl
hlt
pop
sbbl
dec
dec
pop
or
push
in
mov
data16
inc
loope
pop
dec
pop
into
stos
gs
mov
stos
mov
cmc
int
pop
loopne
xchg
mov
fsubrl
jle
adc
mov
out
popa
mov
cmp
xor
unpcklps
scas
outsl
stc
push
movsl
dec
cmp
pop
jp
js
pushf
push
mov
xor
and
ljmp
sub
inc
adc
xor
fildl
lret
outsl
lock
inc
or
fs
aam
sub
icebp
int3
push
hlt
seta
xchg
dec
mov
mov
mov
lea
push
cmp
inc
dec
fadds
sarb
fwait
test
sub
cmpsb
clc
stos
push
jne
incb
loope
pusha
sbb
xchg
repz
fisttps
lcall
nop
movsb
ret
jg
int3
mov
adc
sub
cld
scas
bound
and
jbe
cmp
daa
fsubrs
xorl
pop
into
jmp
in
mov
fistl
push
jmp
in
cmp
cmp
clc
and
jle
decl
push
jg
cmp
dec
hlt
stos
test
cli
movsb
dec
push
dec
sbb
aaa
jecxz
addr16
or
shrl
out
and
jecxz
or
push
mov
and
add
mov
jecxz
jo
stos
into
pop
ficomps
test
movsb
push
addr16
xchg
xchg
and
cmp
shr
xchg
push
icebp
shl
add
push
lahf
sbb
shll
xchg
orl
or
mov
push
push
sub
xor
sub
or
sahf
inc
lock
jle
sub
arpl
pop
bound
mul
push
push
lds
test
lret
ret
ja
jp
ret
pop
mov
sbb
and
enter
leave
inc
and
push
mov
jl
imul
leave
cltd
sub
mov
fwait
inc
inc
pop
pusha
push
adc
fildll
inc
fcomps
ss
enter
cmp
aaa
les
mov
pop
iret
mov
cmc
ret
jecxz
or
inc
cmp
mov
mov
cmp
aam
lcall
rclb
or
adc
fs
or
dec
orb
aaa
out
ret
notl
or
sub
push
xor
mov
les
push
mov
aad
aam
ror
lret
inc
cli
mov
imul
pop
ds
sbb
jo
add
addr16
or
fisubs
clc
jb
sbb
jns
gs
and
pop
int3
mov
pop
daa
in
mov
cmc
in
aaa
pop
ret
outsl
or
sbb
mov
sbb
fildl
inc
sbb
mov
add
jns
flds
ficomps
outsl
test
or
mov
bnd
stc
sbb
push
mov
sti
push
mov
mov
pop
xchg
pop
or
add
jno
shlb
push
clc
loop
cmc
jg
ret
pop
gs
push
push
push
mov
shl
in
jp
mov
sub
jo
fwait
mov
sub
jns
mov
cmp
dec
inc
imul
es
nop
adc
sbb
andl
mov
jnp
fcoml
push
out
hlt
xchg
data16
push
mov
aad
pop
sub
das
js
test
out
push
bound
or
cmpsl
icebp
mov
arpl
jae
movsl
mov
push
jae
jp
cld
or
data16
iret
int
jg
and
cmp
mov
push
packuswb
out
push
mov
call
mov
stc
ret
mov
outsl
call
mov
sbb
sub
xchg
mov
loop
inc
sub
xor
sub
dec
push
into
mov
lds
sub
dec
adc
push
xor
push
inc
adc
cmp
jb
inc
mov
push
outsl
sbb
mov
iret
sub
adc
pop
add
out
inc
cmpsb
mov
ja
repnz
adc
mov
inc
daa
in
aaa
push
rcll
fdivp
and
or
add
insl
mov
jnp
daa
push
sbb
or
pop
mov
aas
or
popf
cmp
xchg
and
cwtl
xchg
lcall
and
ret
dec
sbb
adc
cmovo
mov
insl
icebp
and
out
cltd
inc
pop
in
pop
push
aaa
imul
ss
cwtl
sub
cmpsb
xchg
dec
inc
mov
and
or
mov
jp
sbb
daa
push
sub
mov
popf
loopne
arpl
pop
sub
mov
cmp
fdivs
dec
pop
aam
xchg
ja
xor
sbb
xchg
lea
adc
jne
sub
rcrb
add
and
push
and
cmp
xor
push
stos
nop
out
push
outsl
push
daa
push
jmp
addr16
push
add
sbb
xchg
xor
dec
sbb
cld
jle
jo
lock
js
jmp
mov
fdivrs
in
xor
repz
adc
cmpsl
movsl
inc
cmp
sbb
and
mov
lds
add
or
stos
dec
dec
loop
add
jp
mov
cli
push
xor
leave
mov
mov
mov
push
dec
fildll
push
cmp
lret
push
ds
lods
lds
cld
inc
fsts
jl
add
cs
pushf
mov
sahf
les
test
xchg
inc
or
cmc
loopne
lret
aam
xlat
js
or
adc
sbb
hlt
jno
ret
mov
push
loope
stc
add
xor
iret
and
enter
jmp
gs
sbb
pop
rcrb
and
lret
lret
add
mov
fcompl
sub
jle
lock
pop
add
add
push
mov
sub
ljmp
jge
dec
subl
test
push
lods
jns
fidivs
sub
imul
leave
jo
clc
test
ret
out
pop
mov
das
scas
push
in
arpl
lods
xchg
mov
rolb
movsl
xlat
int
scas
fdivs
dec
push
repnz
mov
xor
pop
mov
push
pop
lock
leave
fimull
or
icebp
sbb
mov
fiaddl
dec
adc
aas
jge
xor
out
xlat
leave
leave
mov
insb
mov
hlt
sub
dec
cmc
jp
loope
dec
cld
xor
fwait
sbb
push
pop
testl
enter
sbb
add
popf
pop
cmp
or
loop
popa
into
gs
in
insb
out
rclb
cmc
mov
pop
insl
push
cmpsl
dec
jle
cwtl
sub
sub
cmp
push
es
lds
and
clc
cmp
mov
in
or
cmp
stc
scas
and
daa
icebp
insb
cmc
aas
addl
pop
mov
add
xorl
add
and
sub
scas
and
ljmp
cmp
arpl
push
push
push
adc
jbe
imul
push
cmc
lds
sets
sub
insl
or
adc
ficoms
pop
daa
mov
mov
sbb
xor
cmpsb
subl
mov
and
insl
into
cmp
xor
fdivl
imul
data16
inc
shll
inc
outsb
add
in
jmp
jns
dec
ss
ficoms
ret
pop
clc
adc
cmpb
mov
js
call
cmpsb
enter
and
cmpsb
mov
and
inc
push
mov
test
mov
xchg
shlb
jno
xor
and
mov
in
in
and
adc
xlat
test
cld
clc
fbstp
fsts
mov
pop
dec
ja
addr16
xchg
cmp
rcll
ljmp
jae
jg
xchg
ja
insb
dec
add
ror
xor
pop
arpl
xor
shll
mov
adc
mov
loopne
js
cmp
ds
insl
dec
repnz
pop
inc
fwait
cmp
fiaddl
je
cltd
pop
cmp
xchg
aaa
adc
jo
rclb
fisttpll
popf
cmp
sub
fld
loop
sub
jmp
mov
dec
fiaddl
fwait
xor
imul
addr16
and
sbb
mov
lea
push
je
add
jae
test
lea
pop
adcl
pop
stos
cmc
add
mov
clc
fwait
jbe
fwait
mov
dec
jnp
sti
mov
out
xchg
and
push
push
mov
subb
lock
mov
push
xchg
mov
cmp
out
add
cmpb
in
mov
lret
lea
adc
pop
inc
lock
jg
pop
scas
pop
xorl
xor
mov
lds
pop
cmpsl
pop
and
mov
mov
jle
cs
jo
and
aad
cmp
out
ja,pt
pop
ror
ret
mov
jge
push
xchg
push
add
or
cltd
lods
aam
xchg
lahf
orb
add
dec
data16
shlb
lds
scas
das
inc
test
jl
add
sub
pop
das
cmp
xchg
sahf
sub
ja
lea
add
dec
es
xchg
scas
cltd
or
daa
cwtl
and
adc
cmp
xor
xchg
xchg
cmp
jnp
add
mov
xor
mov
xor
cmp
mov
fs
push
xlat
xchg
outsb
pusha
aaa
mov
shrb
aaa
fbstp
das
outsl
mov
gs
push
adc
sub
pop
out
dec
test
sbb
movsl
sarl
sar
popf
or
add
xchg
fisttpll
sbb
mov
insl
pop
mov
dec
or
pop
loopne
sub
push
out
pop
in
or
xor
adc
in
adc
jp
dec
cmp
sbb
outsb
push
gs
insb
xchg
fldcw
inc
adc
push
jmp
push
cmpsb
lea
dec
lret
lcall
or
inc
shl
mov
ret
sub
lahf
cli
int3
call
mov
and
lods
dec
test
lods
mov
ficoms
pushf
or
repnz
or
push
outsl
dec
xchg
jno
xchg
insl
pop
cmpsb
sub
lcall
lahf
dec
inc
xor
mov
add
sbb
xchg
and
popa
adc
lds
inc
cltd
jl
mov
mulb
mov
fcomps
push
xchg
push
ficomps
ljmp
xchg
jl
je
jno
outsl
jge
in
or
imul
mov
mov
mov
push
jmp
dec
cmc
xor
mov
inc
aaa
mov
nop
fistl
mov
pop
imul
xchg
push
add
sub
jge
and
aad
loop
mov
testb
lcall
stos
out
push
cmpsl
dec
jge
sbb
xor
rolb
inc
rclb
jo
lods
cmp
out
out
fistps
mov
popa
jnp
cmp
xchg
mov
aam
inc
iret
pop
push
jnp
test
and
aad
out
inc
add
push
hlt
scas
lea
cld
inc
push
adc
fidivs
xchg
jb
cmp
xor
xor
gs
mov
fcompl
mov
call
ficompl
ljmp
adc
mov
xchg
das
in
xchg
xor
mov
fmul
int3
mov
sbb
adc
dec
pop
cwtl
add
add
adc
push
mov
lret
inc
xor
sbb
pop
in
fisubl
or
jnp
pop
sub
sti
or
in
sub
pop
cmpsb
addr16
fdivrl
or
pop
das
jbe
cmp
stos
fisttpl
mov
iret
pop
jecxz
pop
jnp
push
rclb
xor
pop
movsl
pop
int3
or
and
push
testb
cmp
mov
lock
add
jno
outsl
and
dec
add
cltd
cmp
fs
jnp
out
dec
lods
or
call
mov
insl
xchg
push
mov
das
cmp
inc
cmp
cmp
inc
loope
sub
and
sub
fmul
and
inc
sub
roll
lds
jae
call
xchg
pop
push
add
loope
movsb
popa
pushf
xor
lds
nop
adc
mov
in
mov
scas
rorl
or
flds
dec
pop
dec
gs
xor
addl
scas
subl
pop
jno
and
out
push
cmp
mov
call
mov
outsl
xchg
inc
aam
xorl
cmp
js
lret
imulb
inc
scas
jno
ljmp
mov
cmp
xchg
sbb
mov
dec
movsb
dec
cltd
inc
push
dec
sbb
pop
out
icebp
cld
jl
mov
in
adc
ja
mov
dec
ljmp
or
test
lret
mov
cmp
lahf
inc
outsl
outsl
add
pop
rorb
mov
stos
and
xor
dec
addr16
mov
dec
arpl
out
mov
test
repz
daa
test
sahf
and
test
rcl
cmpl
scas
addr16
out
inc
ss
and
mov
rcll
ss
mov
out
inc
pop
loopne
mov
mov
fdivl
xchg
aas
xchg
call
std
aaa
lcall
ret
push
je
arpl
jne
dec
xchg
mov
ret
andb
inc
xor
shlb
add
xchg
scas
add
add
lret
notl
jae
xchg
ja
sub
sbb
stos
enter
cmp
test
divb
loope
into
popf
std
xchg
les
pop
sbb
sub
mov
add
mov
push
jb
mov
jo
mov
iret
xchg
jecxz
sarl
cmp
fwait
adc
fcmovnbe
bound
rclb
popa
adc
cmp
repnz
adc
mov
pushf
jmp
mov
mov
lea
dec
cld
aad
ss
sarb
loop
jb
jmp
fwait
rclb
iret
xchg
pop
mov
push
rolb
mov
je
fwait
cmp
jl
in
fcompl
loopne
cltd
lcall
imul
movsb
testl
dec
bound
and
outsb
push
loopne
cmp
push
add
or
xchg
push
sbb
push
outsl
sub
pop
js
add
push
and
mov
xchg
inc
in
lea
sub
and
aam
test
and
mov
inc
fnstenv
sti
mov
inc
sub
push
pop
pop
sbb
loope
jge
mov
cld
xchg
xchg
xchg
ds
popa
daa
int3
push
or
insb
clc
icebp
xchg
cwtl
push
ficoms
mov
fldenv
mov
push
insl
loop
sti
xchg
mov
sub
add
mov
inc
movsl
cmpsb
and
iret
outsb
mov
mov
mov
dec
lea
gs
push
mov
mov
sbb
scas
lds
mov
fcomip
outsl
mov
sbb
push
fdivrl
push
lods
iret
call
xlat
fcmovne
pop
inc
and
and
cli
inc
call
xor
sahf
cmp
or
lods
les
mov
movsl
lods
xchg
imul
and
sti
shll
dec
scas
mov
movsb
adc
dec
aam
inc
jbe
ljmp
outsb
fs
dec
cmp
fistpl
loopne
jg
sbb
lret
test
adcl
and
inc
push
inc
insl
ss
enter
jle
mov
or
push
mov
daa
xchg
test
mov
sub
fcmovne
ficomps
ret
fdivl
pop
and
and
subl
andb
add
sbb
les
mov
xchg
mov
add
and
std
cmc
iret
divb
jmpw
or
repnz
xchg
hlt
or
es
add
and
xlat
sub
arpl
mov
shr
nop
jae
cmp
sbb
pop
stos
xorb
nop
ds
mov
fldln2
jnp
test
pushf
std
movsb
in
add
mov
test
adc
mov
comiss
dec
jb
andb
dec
addr16
push
shlb
loope
aad
std
xorl
iret
sti
fs
mov
mov
cld
sub
pop
imul
add
cwtl
mov
call
mov
leave
add
lahf
andb
mov
loop
dec
sarb
pop
mov
fwait
xchg
outsb
xchg
scas
repnz
hlt
mov
mov
xchg
xchg
pop
outsb
sbb
inc
add
repnz
fadds
pop
or
test
mov
fldl
xchg
push
push
dec
xlat
xorl
sahf
jne
fcomps
xor
push
das
xchg
inc
and
fcmovu
add
mov
xchg
fs
cmp
cwtl
dec
cmp
in
mov
iret
adc
das
mov
mov
ret
adc
pop
outsb
cmp
mov
shrb
xlat
xchg
iret
stos
mov
lahf
movsb
rclb
add
imul
mov
mov
scas
mov
add
hlt
inc
fs
push
adc
pop
stos
mov
rcr
dec
xchg
scas
xchg
pop
jmp
mov
sbb
scas
repz
xchg
daa
jle
bound
dec
into
aad
sti
testl
stos
repz
loop
jbe
sbb
outsl
sub
cmp
push
outsb
enter
xchg
shll
xchg
ljmp
adc
adc
lds
test
push
adc
divl
subl
fcoms
add
ret
or
movsb
jle
push
aad
movsl
pop
xchg
jl
mov
sbbb
jns
push
inc
cmpsb
insl
push
ja
or
dec
imul
sub
dec
in
push
push
jle
bound
push
bound
jg
inc
div
gs
pop
xchg
and
cmp
das
outsb
dec
xchg
mov
jge
ljmp
adc
xchg
lods
pop
mov
test
xlat
cmp
or
mov
mov
cs
aaa
ficoml
pop
insb
stos
ja
adc
xchg
sub
imul
cld
fidivrl
daa
cmp
je
mov
sub
popf
fcom
or
inc
mov
jnp
jno
push
mov
std
inc
imul
jp
inc
scas
fdiv
fisubrs
adc
pop
dec
dec
jg
repz
and
hlt
sub
push
jns
sbb
ret
andb
rol
fxtract
fs
push
cli
lahf
daa
enter
sbb
mov
das
pop
test
ja
or
push
jno
push
adc
dec
sbb
push
inc
xor
sbb
add
sub
xor
push
sub
mov
cmpsb
adc
loopne
mov
inc
inc
pop
dec
lods
dec
push
sbb
inc
sub
dec
add
icebp
or
cs
mov
fwait
das
jnp
dec
push
jecxz
push
ljmp
ljmp
and
cmc
rclb
stos
mov
and
testl
in
inc
jnp
mov
lds
popa
jge
jno
je
jl
insl
popa
pop
clc
sarl
scas
mov
cli
lahf
xor
cmpb
jno
pusha
push
inc
dec
and
add
lret
push
imul
mov
xor
scas
mov
inc
pusha
ss
ljmp
movsl
imul
cli
jno
sub
enter
fisttps
pop
inc
cmc
mov
test
sub
mov
fidivrs
negl
adc
mov
dec
mov
mov
cs
adcb
or
cmp
leave
out
mov
pop
fs
push
ret
sti
sub
imul
xor
jae
push
cmp
add
xchg
jae
lods
adc
mov
addr16
fs
mov
mov
pop
cs
jle
mov
inc
mov
test
lods
dec
xchg
sbb
fld
int3
pop
vmwrite
cmp
fistpl
add
lahf
fisttpll
inc
add
jne
into
fs
inc
scas
outsb
std
stc
in
std
iret
jb
or
jne
push
push
mov
dec
enter
xchg
test
inc
fisubl
call
add
push
dec
pop
mov
jo
dec
push
mov
out
dec
inc
pop
push
mov
loopne
xor
push
outsl
mov
push
in
outsb
sbb
jae
stc
inc
repnz
push
inc
das
jp
lds
lods
movsl
push
ljmp
scas
mov
sahf
out
in
adc
add
sub
sbb
sub
mov
inc
and
xor
pop
into
mov
rclb
testb
pop
mov
popf
lret
or
in
rorl
mov
in
in
push
sldt
push
pop
into
insb
fistpll
push
jle
icebp
jne
xchg
pop
cld
inc
push
insl
xchg
fs
and
xor
out
in
adcl
cmp
enter
js
mov
or
andb
mov
roll
call
les
xor
sbb
lcall
popf
dec
es
add
daa
fldenv
inc
lahf
jae
xchg
xor
sbb
lods
mov
out
add
movsb
adc
and
test
sbb
cld
xchg
mov
mov
nop
xchg
mov
push
lods
push
std
fildll
or
push
jb
ds
hlt
lods
paddusw
sbb
cmp
cld
lahf
cmc
inc
out
hlt
add
sub
aad
mov
jge
push
pop
and
rcl
mov
add
or
or
or
lods
lods
push
ss
or
ret
in
scas
xlat
sbb
insb
xlat
fidivs
mov
mov
xchg
je
xchg
lock
dec
out
jecxz
in
sahf
fs
add
les
inc
andl
arpl
xor
js
mov
test
pusha
inc
pop
pop
dec
xchg
sbb
leave
xchg
push
inc
jae
push
mov
pop
std
rclb
mov
inc
imull
adc
xchg
push
fmulp
sbb
xchg
and
xchg
mov
or
cld
ret
fdivs
cmp
stc
add
call
les
into
aad
ljmp
pop
jbe
sub
dec
shll
ds
inc
inc
and
cmc
dec
mov
xchg
push
xchg
aaa
sbb
cmp
xchg
sahf
cld
or
icebp
pushf
cld
or
pop
sbb
popf
data16
and
sbbl
sbb
hlt
data16
inc
inc
adc
xchg
xor
xor
jo
imul
jge
shlb
jnp
lret
push
xor
jge
sub
push
ret
add
in
roll
loopne
jl
aam
and
cwtl
adc
repz
mov
jne
sbb
cltd
ret
pusha
daa
pop
test
cmp
jge
mov
icebp
jp
frstors
ret
inc
jecxz
dec
push
push
or
es
rcll
and
enter
mov
push
in
mov
push
mov
sbb
aam
push
mov
jb
pusha
rclb
dec
mov
out
mov
pop
mov
dec
cmp
sub
testb
loop
sub
lds
xchg
and
ret
and
push
push
lods
dec
mov
push
aas
popa
shll
adc
cs
jb
sti
inc
pop
divb
adc
addr16
jne
lds
popf
arpl
cmc
adc
loopne
jnp
stos
mov
sti
fwait
mov
push
lret
add
xchg
adc
sub
lret
xor
sbb
leave
pop
test
mov
ja
inc
sahf
adc
sub
xchg
mov
out
push
cmpsl
cmc
mov
outsl
popa
loope
jns
test
sub
adc
push
rcl
je,pt
data16
jns
shlb
movsl
fdivl
dec
sbb
mov
insl
iret
xchg
xchg
pop
js
loope
into
push
loop
pop
and
jns
leave
mov
movsb
imul
sbb
pop
lds
xchg
imul
add
aad
pop
push
adc
or
stos
jne
iret
cmp
shrb
dec
and
push
jmp
jne
out
xchg
push
repz
rcrl
mulb
mov
pop
icebp
jne
addl
loope
xchg
sub
bswap
leave
sbb
xchg
add
jle
xchg
std
incl
lret
add
jb
ret
daa
adc
pop
mov
test
mov
aaa
adc
outsb
cltd
adcb
dec
dec
pop
push
and
jle
pusha
pop
lock
roll
adc
and
mov
cmc
add
push
test
enter
mov
mov
adc
mov
mov
mov
sbb
loopne
mov
mov
in
out
arpl
push
add
adc
in
pop
fisubl
cmp
jb
stos
jmp
fsubrl
in
outsb
shrl
popf
pusha
dec
cmp
fildll
cmp
dec
mov
outsb
xor
dec
mov
adc
leave
je
lcall
adc
movsb
pop
mov
xor
mov
xor
cmp
and
sbb
mov
push
xchg
rcrb
add
shrl
outsl
push
out
push
lds
lods
sbb
add
pop
adc
loope
mov
int
sahf
loopne
ds
pushf
adc
outsl
stos
push
mov
push
decb
mov
fld
stos
hlt
inc
in
insb
sti
out
mov
movsl
cli
push
sbb
nop
push
nop
js
mov
dec
repz
sahf
clc
cmc
cs
xor
adc
sbb
fwait
in
sbbb
out
pop
outsb
inc
out
cmp
enter
push
sub
popf
mov
sbb
xor
es
sbb
sub
sub
push
pop
cmc
xor
test
aam
adc
push
inc
pop
sbb
mov
and
cmp
adc
dec
sbb
jb
popa
sbb
push
in
sub
jge
mov
roll
or
clc
rcrl
leave
sbb
ljmp
push
aad
or
mov
jnp
pop
jecxz
cmp
and
je
mov
xchg
sub
outsl
xor
cmp
ds
test
mov
cmp
mov
jge
lcall
add
xchg
mov
rolb
xor
leave
cmp
jbe
scas
insb
js
push
mov
imul
xor
sub
cmp
cmp
mov
push
lret
and
cmp
scas
jo
fmuls
push
mov
pop
pop
pop
out
mov
aas
push
mov
int
pop
dec
int3
lcall
xor
ficompl
adc
and
inc
repz
int3
cmpsl
repnz
fcom
lods
imul
in
das
outsl
push
cmp
adc
sbbb
mov
int3
shr
rcrb
mov
outsl
push
rcl
push
xor
dec
andb
sub
daa
dec
mov
ss
push
and
repz
cmp
inc
ljmp
pop
out
sbb
int
xchg
mov
fistpl
pop
std
xorl
in
push
add
mov
xchg
call
ja
aad
popf
sar
jp
or
push
and
into
sbb
sub
mov
or
cmpsl
push
add
push
xchg
add
or
inc
sub
or
ja
shll
cld
in
and
xchg
mov
inc
insb
inc
xchg
xchg
je
and
gs
inc
enter
pop
lcall
iret
scas
nop
or
stc
ljmp
add
inc
stc
and
xchg
fidivs
cmp
insl
mulb
adc
mov
cmp
jbe
and
icebp
jmp
and
lcall
shlb
dec
add
add
pop
ss
mov
or
ja
xchg
stc
movsb
mov
test
cmp
xchg
ss
das
pop
mov
mov
fistps
xor
orb
ret
sub
jmp
cmp
xchg
ret
std
fadds
cvtps2pi
jne
mov
movsb
jno
xchg
mov
icebp
dec
cmp
mov
cmp
outsb
out
adc
cmpsl
in
mov
outsb
inc
test
mov
lret
addr16
ds
loope
xor
ljmp
dec
leave
mov
outsb
fmull
xchg
mov
ljmp
pop
int3
or
jmp
cmc
mov
mov
shrl
popa
xor
xchg
stos
xlat
sbb
xchg
test
notb
mov
fs
mov
fsubrs
jo
push
inc
iret
int
cmp
mov
call
ret
ret
cmp
pop
sbb
adcl
adc
pushf
sub
pop
ja
mov
das
mov
xor
xchg
mov
xor
inc
pop
loope
cli
shl
and
fdivs
inc
popf
lcall
dec
sub
and
xchg
stc
jnp
pop
inc
insb
repz
shrl
xchg
jl
fidivl
jecxz
shrb
sbb
pusha
adc
pop
adcl
jbe
xchg
push
ljmp
cmpsb
jmp
xor
cmp
cmc
in
data16
push
push
icebp
pushf
fwait
cmp
icebp
cmp
adc
inc
cmp
data16
fdivrl
imul
and
push
sub
inc
aas
cld
dec
movsl
inc
and
clc
add
ja
test
mov
pop
adc
sbb
cmp
xchg
scas
in
or
push
loope
add
pusha
mov
jae
dec
pop
ja
stos
or
nop
out
sbb
mov
iret
jbe
xor
sbbb
xchg
dec
add
pop
mov
jge
lods
enter
jns
adc
mov
mov
mov
sbb
fidivs
test
fldt
pop
push
adc
ror
adc
pop
cmpl
mov
inc
mov
adc
jg
das
stos
fnsave
cmp
mov
mul
cmc
outsb
pop
fistpll
popf
mov
push
or
andl
mov
negl
cld
int3
mov
mov
cmp
inc
jns
push
data16
pop
cmp
stos
iret
fisttps
jno
mov
scas
inc
test
ret
mov
dec
fdivl
sub
jno
push
jmp
in
and
arpl
xor
dec
mov
pop
adc
jne
frstor
xor
jl
dec
loope
stc
mov
sbb
lock
inc
sub
sti
cmpsb
out
loope
sbb
jb
xchg
shrb
cwtl
jecxz
aam
imul
test
push
loopne
fdivl
hlt
cwtl
mov
jecxz
or
fwait
or
mov
sub
sbb
lahf
xor
xor
and
imul
sbb
cltd
out
xchg
imul
adc
fldt
syscall
pop
sub
push
adc
pop
lahf
add
leave
cmp
mov
sbb
hlt
sub
jg
sub
push
cwtl
xor
mov
push
aas
or
add
popa
jmp
roll
push
ds
ds
insb
and
sbb
sub
sbb
call
jmp
sub
mov
mov
leave
pop
pop
or
push
mov
cli
push
hlt
adc
and
test
sbbb
test
aaa
int3
addl
lret
inc
or
mov
xchg
cli
push
cmpb
jno
pop
les
roll
pop
jns
and
push
adc
data16
stos
dec
pop
jb
pop
lods
add
and
rorb
push
xor
in
cmp
adc
or
dec
pop
adc
js
push
add
pop
xchg
negl
test
in
jns
xchg
fdivs
adc
cmpsb
adc
iret
mov
roll
jno
ret
inc
stc
push
jl
cli
sbb
idivl
mov
dec
scas
mov
lahf
scas
xchg
inc
cwtl
xchg
mov
pop
int3
lret
xor
xchg
scas
dec
movsb
test
popf
outsb
bound
inc
cmp
pusha
pushf
in
xchg
fwait
sbb
jp
push
mov
fdivp
adc
pop
or
inc
sub
push
daa
add
call
loope
arpl
orb
xchg
arpl
pusha
and
lods
inc
cli
and
add
jnp
xchg
dec
cmp
test
push
jg
cld
add
cmp
pop
test
mov
and
shll
out
inc
outsb
adc
sbb
jb
nop
mov
inc
mov
rorl
xor
pusha
mov
aad
aas
loopne
sbb
push
or
sub
push
and
in
popf
js
lret
dec
jb
rcrb
mov
xor
daa
popa
sahf
pop
mov
out
ss
mov
inc
imul
mov
out
arpl
jb
mov
aas
out
cmp
pop
out
jecxz
mov
xor
mulb
cld
dec
xchg
dec
mov
outsl
inc
out
jae
dec
jl
imul
addr16
jae
xor
xchg
sub
testb
divl
cmpsl
fistl
or
stos
and
das
jmp
mov
fisttpl
cmpsl
mov
dec
xor
and
andl
and
xor
shll
scas
rcll
rorl
rcrb
movsl
inc
dec
mov
pusha
into
mov
andl
fdivrs
sub
mov
xor
mov
stos
repz
lret
adc
in
cmp
aaa
sub
and
adc
mov
push
inc
stos
xlat
into
ss
sub
xor
jo
jb
dec
sbb
mov
addr16
sbb
mov
loope
aaa
jle
lds
arpl
test
and
cld
mov
ret
mov
in
iret
push
dec
xchg
dec
mov
dec
scas
out
inc
emms
inc
es
push
xor
mov
aad
std
sbb
jg
int3
jb
lret
dec
xchg
fucomi
mov
cmc
cmp
popa
pop
adc
pop
loopne
loop
lock
ffreep
cmp
xor
ret
jb
push
ljmp
push
xchg
dec
stos
pop
shll
in
imul
les
iret
pop
and
fstl
mov
divb
dec
cmpsb
lock
jns
or
scas
adc
sarl
cli
mov
clc
push
mov
cmp
in
scas
mov
dec
enter
imul
jg
dec
out
xchg
aas
add
je
jle
js
inc
iret
sarb
fwait
imul
clc
dec
xor
adc
and
stos
mov
adc
jle
call
cmp
test
daa
jmp
lods
test
push
enter
adc
mov
outsl
adc
mov
in
fstp
enter
sub
jle
mov
push
addr16
or
xchg
cmp
loope
mov
in
xor
pop
rclb
js
arpl
pop
inc
and
jge
nop
lea
cmovae
or
stos
stos
push
mov
inc
scas
pusha
sahf
mov
scas
sub
cmpsl
repz
roll
mov
sbb
loop
test
add
xor
mov
cmp
clc
leave
popf
in
mov
sti
dec
out
clc
jae
push
adc
mov
insl
sub
inc
cmp
mov
xchg
js
xchg
inc
jecxz
int
adc
and
pop
xor
cs
sti
in
aam
jo
jle
ljmp
imulb
cs
xchg
and
jmp
roll
push
sub
mov
xor
push
mov
pop
fidivrl
out
mov
outsl
pop
lahf
jle
shl
shrb
fcoml
adc
mov
and
dec
das
inc
cmc
lret
jns
int
icebp
cmp
adc
mov
cli
inc
call
pushl
push
mov
push
pshufw
jbe
add
je
sbb
xchg
fdivl
mov
or
sbb
testl
hlt
arpl
push
rclb
cmpsb
xchg
mov
lahf
test
cmp
ret
in
lea
xchg
cltd
pushf
sbbb
test
out
mov
stc
push
sti
dec
mov
push
nop
mov
pop
push
cmpsb
arpl
stos
lods
and
and
add
arpl
inc
adc
mov
inc
addr16
fimuls
xor
ljmp
fwait
adc
fisttpl
js
and
insl
adc
xchg
adc
mov
pop
lret
fdivrl
enter
sub
lods
cmp
push
arpl
inc
and
js
pop
sub
adc
popf
cmp
pop
aad
xlat
mov
push
push
stos
movsb
add
lret
pop
in
mov
jmp
cmp
inc
jb
push
js
jecxz
loop
aam
dec
test
leave
insl
sbb
adc
or
xor
adc
loop
fisubrl
jno
mov
sti
push
imul
jge
loope
push
mov
rorl
cmp
shrl
mov
js
insb
xchg
pop
aaa
push
dec
nop
sbb
pop
xor
inc
sub
jmp
mov
add
xor
imul
jo
dec
cmp
scas
and
mov
and
scas
aad
divl
aaa
dec
sub
imul
inc
mov
sub
stos
xorb
fidivs
in
push
notl
mov
mov
cmp
lea
in
push
nop
or
in
xchg
shl
pop
jp
xor
mov
ret
mov
cmc
dec
jle
add
ja
js
lock
dec
mov
bound
pop
xchg
clc
and
xor
jecxz
in
mov
mov
xchg
push
push
lahf
invd
in
push
mov
hlt
iret
push
dec
cmpsb
arpl
sub
lods
popf
lahf
roll
or
jbe
add
outsl
pop
in
testb
mov
add
inc
daa
xor
adc
in
push
lahf
and
and
jecxz
out
cmp
adc
rcr
fadd
in
mov
mov
data16
enter
scas
cmc
aad
push
dec
lds
jmp
daa
ss
xchg
jno
fs
mov
frstor
and
mov
and
xor
popa
mov
mov
lods
pop
inc
fdivs
fnsave
sub
add
ret
or
iret
jno
xchg
test
repz
lods
cmp
in
out
pushf
sti
test
sbb
std
inc
hlt
in
fcompl
cltd
sbb
jl
mov
sar
daa
scas
dec
push
and
xlat
iret
inc
jno
xor
adc
dec
in
jmp
dec
adc
dec
bnd
aaa
rcl
xchg
push
xor
test
adc
xchg
lea
cmp
xor
insl
or
addl
sub
sbb
jne
je
dec
lock
icebp
nop
sub
loope
pop
push
sbb
mov
mov
les
pusha
sarl
xchg
sub
pop
test
jp
popa
jecxz
inc
adcb
mov
adc
or
xor
into
push
icebp
enter
outsb
push
scas
mov
lcall
mov
mov
add
dec
cmp
rolb
jbe
mov
adc
inc
cmp
xor
cs
mov
cmc
adc
lock
jno
add
sbb
xor
ss
movsb
mov
add
add
jne
cltd
nop
mov
js
scas
lcall
imul
enter
test
lea
pop
shrl
pop
das
xchg
sbb
lock
rorl
stos
xchg
xchg
bound
add
cmp
pushf
test
dec
dec
shl
push
jmp
testb
loopne
movl
repz
sbb
or
cltd
fnstsw
xor
pop
idivb
inc
fwait
dec
int3
xchg
push
xor
jle
stos
pusha
loope
ja
scas
or
mov
cli
dec
into
mov
hlt
cmp
ljmp
cmp
or
inc
push
mov
bound
mov
mov
shll
daa
jge
add
pop
mov
add
cwtl
adc
sahf
mov
ficoml
sub
pop
xchg
inc
xchg
ret
sub
add
aas
adc
sbb
add
fs
mov
inc
adc
fstps
jno
fildll
cmp
sbb
pop
cld
cwtl
call
jp
inc
mov
into
xchg
das
xchg
mov
push
lock
inc
sbb
jp
loopne
and
addr16
dec
js
sub
dec
dec
xchg
add
jnp
orb
dec
cmp
nop
shll
xor
loope
pop
insl
push
cld
mov
add
lret
mov
xor
xchg
cld
or
daa
pop
inc
jg
inc
xor
int3
cld
cli
jae
mov
sub
xor
stos
mov
and
and
in
stc
add
push
cmp
fsubs
pop
fcmovnu
jnp
xor
dec
int
xlat
dec
clc
fmull
outsl
push
stos
xor
ret
aaa
mov
imul
adc
pop
xchg
std
mov
jo
jp
sbb
ds
ljmp
mov
pop
cmp
icebp
xchg
pop
ret
and
or
test
pop
cli
mov
lock
cmp
inc
dec
mov
push
stos
sbb
scas
lds
jnp
insb
mov
jb
pop
push
mov
andnps
push
ret
shlb
jl
outsb
sahf
inc
mov
adc
xor
push
popa
cltd
adc
sub
rcl
adc
xor
lock
xor
fsts
mov
mov
test
aas
xchg
pop
les
stc
cli
clc
popf
pop
rcrl
xchg
int3
es
popa
aaa
push
repnz
ss
pushf
sub
enter
lods
sti
sti
cmpsl
daa
xor
les
jae
cmp
filds
mov
ljmp
xor
add
outsl
lea
cmp
jb
fcoms
push
in
ja
clc
aam
dec
ja
icebp
cmp
outsl
cmpsl
les
insl
ja
jbe
cli
out
mov
fidivrl
insl
ds
inc
cmp
add
pusha
mov
sbb
lock
sbb
ret
and
push
pop
enter
jecxz
jnp
inc
pop
cmpsl
mov
test
adc
sub
aad
lcall
loope
mov
mov
xorl
sar
mov
or
inc
out
xlat
dec
mov
inc
movsl
aaa
inc
sbb
idivl
cmp
icebp
adc
mov
jp
and
sbb
out
shrb
jno
xchg
or
xchg
mov
dec
sarb
lahf
stc
mov
stos
adc
jnp
je
sbb
mov
test
and
jecxz
aaa
or
mov
pop
in
push
insl
icebp
in
or
fldt
mov
add
dec
jg
cmpsb
lods
xchg
or
push
xchg
dec
pop
xor
pop
test
repnz
or
xchg
mov
fsubl
sbb
add
push
iret
lods
scas
outsl
fcmovnbe
and
outsb
jo
push
outsl
loop
mov
pop
mov
push
cmp
xor
test
dec
inc
xorl
adc
xchg
add
dec
inc
insb
stc
daa
xor
or
call
mov
addl
lds
mov
sub
add
in
or
and
sbb
into
push
sti
jg
int3
in
jecxz
pop
jg
mov
or
adc
sub
shlb
or
xchg
mov
and
pop
xchg
push
inc
and
ret
mov
inc
stos
cwtl
lcall
add
dec
daa
in
shl
mov
aam
out
mov
in
inc
sti
in
repz
das
mov
lods
imul
sbb
mov
es
inc
ds
pop
push
inc
mov
mov
xchg
imul
add
or
outsl
scas
stos
aas
xlat
xchg
test
in
fiadds
sub
sar
fsubr
push
shll
xchg
test
mov
xlat
lods
jb
inc
stos
nop
xor
psrad
inc
cmc
fistpl
adc
aad
inc
inc
add
mov
fimull
arpl
rcrl
jbe
xchg
outsl
lret
mov
sub
inc
jecxz
out
mov
and
sub
mov
insl
insl
inc
lret
sarl
sub
mov
pop
mov
jbe
mov
pop
cmp
lret
mov
popf
or
pop
cmp
int3
iret
lds
test
in
xor
inc
cmc
pop
xor
mov
arpl
jo
adc
inc
loop
scas
add
lds
pop
or
sbb
add
enter
mov
and
inc
sbb
adc
pop
jb
adc
and
imul
sub
adc
xchg
imul
jg
pop
fadds
scas
movsb
add
jge
insl
and
scas
jae
mov
popf
push
cwtl
andl
push
aas
sbb
and
enter
adc
icebp
in
stos
adc
data16
iret
adc
cli
fwait
xchg
data16
addr16
adc
je
pop
jg
or
mov
int3
push
or
sbb
mov
cli
jg
ret
aam
mov
xor
xchg
outsl
inc
lods
pop
mov
addr16
icebp
lea
lea
into
test
pushf
mov
testb
lcall
mov
test
mov
stos
lock
andl
xor
int
mov
fs
push
call
or
cmpsl
jbe
adc
inc
mov
mov
arpl
inc
sub
mov
aam
mov
scas
mov
outsb
stc
fadd
aam
inc
pop
mov
push
sub
pushf
push
out
push
popa
or
cwtl
cmp
fstp
rcl
adc
fsubr
out
push
and
jns
stos
push
insb
cmp
dec
inc
mov
lahf
stc
pop
sbb
lahf
dec
js
loope
mov
mov
push
sahf
shl
insb
ret
or
adc
dec
push
rolb
rcrl
dec
ja
sub
inc
jecxz
adc
loop
js
pop
hlt
inc
inc
lahf
dec
rorl
xchg
jo
xchg
sarb
sub
mov
fwait
mov
jae
jb
adc
cld
pushl
pmullw
inc
xchg
sub
fdiv
mov
jl
fs
mov
jp
mov
and
lds
cmpsl
fcomps
sbb
test
and
dec
test
rol
cmpsl
xchg
shll
sbb
orb
aas
pop
mov
aas
jg
in
cmpsl
popa
jp
movsb
icebp
or
or
pop
mov
adc
in
lea
push
lods
mov
pop
and
fldt
xchg
pop
ficoml
int
inc
sbb
dec
sets
ss
popf
push
mov
mulb
jnp
or
in
rorb
jmp
adc
or
cmc
ljmp
jle
rolb
rcll
sbb
add
lods
push
lods
cltd
je
and
sub
incl
cmp
inc
push
lods
out
aam
inc
mov
pop
pop
into
add
cmp
mov
pop
mov
mov
in
adc
sti
cmp
mov
dec
cmp
jp
cmpsl
fs
fidivrs
pop
mov
cmp
jp
andl
orb
push
or
mov
add
inc
mov
pop
or
mov
insb
mov
push
lret
lcall
xor
sub
ret
fdivs
pop
mov
movsl
loopne
cli
xor
jp
scas
cmpsl
inc
or
and
or
dec
pushf
cltd
adcl
mov
push
cmp
adc
dec
clc
vpmacssdqh
jle
inc
xor
mov
mov
dec
pop
pop
push
cmpsb
push
pop
cmp
adc
scas
and
xchg
inc
ljmp
mov
xchg
xchg
fnsave
adc
dec
jle
push
adc
notb
insl
jle
in
in
and
push
mov
and
jae
add
mov
rcll
in
push
test
jb
sbb
bound
jbe
mov
jmp
les
mov
lods
mov
mov
or
sub
jp,pt
cmp
sbb
lods
mov
pop
mov
scas
addb
or
lods
orb
sub
aam
mov
fcomi
adc
cmp
addr16
sahf
jbe
mov
enter
xlat
and
lret
imul
ret
pop
dec
mov
inc
fldcw
sbbb
or
test
inc
jecxz
and
push
stc
sbb
cmp
xchg
jmp
adc
ljmp
or
js
pop
addr16
add
xlat
mov
stos
ror
jl
jecxz
lock
cmpsb
stos
cmp
pop
flds
mov
xchg
cmpsb
dec
pop
push
lcall
ret
inc
push
push
mov
xchg
pop
int3
lds
ret
add
sub
dec
loop
mov
test
nop
ret
xor
push
xchg
imul
xor
xchg
lahf
shrb
xor
outsl
and
mov
mov
or
mov
fidivs
xchg
pop
dec
loop
inc
sahf
and
push
loopne
movsb
xor
in
pop
jg
pop
mov
mov
cmpsb
and
fcomi
in
repz
jg
push
clc
sbb
mov
and
jne
popa
xor
sub
push
pusha
orl
and
std
pop
pushf
pop
andl
cmp
cmp
int
fldl
je
push
xchg
repz
fildl
inc
roll
xchg
push
ret
lds
test
xchg
jbe
loope
or
out
or
fldenv
cmp
jae
cmc
pushf
jmp
jnp
inc
jp
mov
stos
mov
out
test
push
sub
movsl
ret
ja
or
movsb
pop
test
xchg
xchg
cmp
out
faddl
imul
jns
mov
inc
mov
lahf
cmpsl
hlt
imul
or
test
cli
aam
mov
les
pop
repnz
cmp
pop
das
and
jbe
lock
imul
mov
xchg
shlb
push
clc
xchg
adc
xor
xor
mov
loop
cwtl
jle
pop
stos
pop
push
js
lahf
mov
cli
dec
push
mov
loopne
stos
fmuls
mov
lret
adc
dec
pop
jns
loopne
jecxz
lret
fwait
or
push
adc
mov
out
call
sbb
push
jno
mov
js
stos
std
dec
mov
jnp
mov
xor
loopne
test
inc
mov
mov
imul
mov
xor
jl
xor
cmp
xchg
mov
sbb
pushf
lods
mov
orl
in
cli
and
std
add
or
and
pop
adc
pop
adc
dec
or
sahf
xchg
dec
js
aad
dec
sbb
testb
fsubr
adc
fsts
iret
push
loope
loopne
shlb
leave
out
push
pop
sarl
jbe
pop
sti
aam
cmp
mov
out
and
dec
jno
or
pop
mov
insl
sbb
imul
lods
push
mov
aad
js
mov
xchg
test
faddp
movsb
rol
lods
inc
pop
xchg
cmc
add
xchg
fadd
adc
adc
and
xor
dec
cld
jae
in
push
pop
push
jp
je
test
addr16
cmp
cs
mov
and
xchg
adc
inc
add
sti
cmpsl
jecxz
loopne
gs
jl
lock
fdivrs
jecxz
mov
insb
mov
fwait
ja
out
jno
rcrb
ret
or
and
ljmp
imul
jno
sbb
push
jmp
mov
dec
rolb
int
ja
fmull
jge
data16
fsub
cli
pop
mov
in
push
sub
mov
inc
rol
mov
out
fldcw
int
imul
jl
jmp
dec
sub
sub
hlt
push
add
cmp
ljmp
mov
test
push
sbb
and
inc
sbb
pop
and
fcomi
and
mov
cmp
adc
test
pop
stos
popa
fs
mov
dec
hlt
into
test
pop
jecxz
out
addb
stos
mov
cltd
repnz
xor
jge
xor
out
fucomi
inc
cli
cmpsl
nop
popa
mov
or
aam
shlb
mov
sbb
push
mov
jne
xlat
shrl
cmp
nop
movsb
sbb
cmpsl
mov
inc
das
xchg
outsb
inc
orb
mov
ret
xlat
fs
leave
dec
cmpsl
mov
shll
das
in
test
fbld
push
mov
scas
lret
xor
mov
xor
insb
movsl
popa
cmpsl
das
cmp
and
push
divb
leave
mov
sbb
imul
in
leave
ffreep
inc
push
sahf
cmpsl
adc
loopne
mov
cmp
or
mov
push
xor
cmpsb
imul
pop
in
push
sub
in
push
mov
lods
insl
rcll
dec
dec
cmp
inc
or
shl
test
adc
cmpsb
sar
aam
outsb
ror
push
jb
incl
xlat
push
or
mov
mov
mov
dec
aad
mov
cmp
mov
icebp
xor
mov
cmp
cmp
dec
ljmp
loopne
daa
mov
ret
push
inc
xchg
sbb
or
outsb
cmpsl
int3
jge
pop
fidivs
aam
dec
jne
inc
or
loopne
sbb
dec
int
xlat
ror
int3
cmpsl
adc
mov
add
add
or
les
jmp
mov
mov
jg
cs
push
gs
icebp
stos
push
stos
sub
adc
or
cmp
stc
adc
in
std
mov
and
cli
mov
lds
pop
fisttpll
adc
inc
ja
jb
jns
dec
xor
and
sub
out
fstpl
lock
mov
push
dec
in
inc
fcmovbe
and
cld
mov
xlat
ds
pop
pop
or
push
pop
xchg
aaa
push
sub
cld
loope
inc
cmpsb
jp
add
jno
les
mov
in
in
sub
outsl
push
mov
insl
loop
sarl
pop
iret
frstor
js
mov
and
cmpsl
hlt
or
mov
test
cmpsb
pusha
int
dec
jle
ss
gs
mov
movsb
push
add
mov
mov
stos
imul
or
in
pop
add
push
outsb
lahf
mov
jge
inc
in
mov
lds
push
sub
loopne
loope
js
jg
sbb
xor
mov
ja
adc
lods
mov
pop
dec
dec
insb
pop
push
pushf
mov
lret
ret
pop
mov
loope
and
call
or
lcall
mov
and
lret
mov
jl
jno
adc
adc
mov
push
and
or
mov
dec
es
ret
jns
gs
adc
cmp
stos
sub
pop
push
es
mov
pop
arpl
jle
jnp
dec
or
sbb
stos
inc
and
fucomp
xor
sub
fisttps
xor
loope
pop
pop
sbb
out
lods
jae
in
add
pop
mov
fisubs
je
mov
adc
and
and
pop
push
icebp
xor
and
fidivrl
or
loop
adcl
cmp
xchg
mov
cmp
sub
lods
lahf
inc
les
rolb
adc
icebp
aad
sub
or
mov
pop
divb
mov
jnp
aam
jmp
jb
lods
call
and
add
js
faddp
dec
cmp
rcll
and
aad
iret
mov
mov
in
test
add
or
sub
test
lods
pop
jge
pusha
push
push
into
xor
cld
and
sbb
test
pop
inc
js
ds
testb
jecxz
push
cmc
mov
popf
push
loop
subl
push
mov
dec
shll
or
push
add
int
jne
call
xor
xchg
mov
push
mov
xchg
cmp
in
sti
sub
fst
sar
mov
sbb
repz
inc
xchg
pop
add
faddl
sbbl
cmp
mov
push
pusha
nop
pop
jb
aad
mov
scas
out
movsl
lods
jg
hlt
mov
jecxz
sti
sub
xchg
mov
inc
push
mov
cs
into
imul
scas
or
popa
mov
insl
push
cmp
pushf
adc
out
aaa
jo
sub
pushf
mov
inc
mov
inc
xchg
pop
sahf
cltd
sbb
fsubs
call
rol
cmp
sbb
in
sbb
fists
dec
repnz
mov
xlat
fimuls
inc
pop
xor
test
xlat
push
xor
mov
pusha
mov
pop
scas
mov
mov
dec
cmp
dec
jecxz
cmp
das
jbe
cwtl
adc
lods
xor
cli
xchg
sub
nop
inc
xor
xor
sbb
ljmp
aaa
stos
and
cwtl
mov
movsb
jns
imul
jmp
in
adc
leave
sub
test
mov
cmp
divb
xchg
jp
pop
jmp
movl
in
int3
test
push
xorb
add
jbe
outsb
mov
adcb
sbb
sbb
aam
inc
pop
add
enter
pop
inc
xor
lock
push
cmpsb
mov
lret
adc
and
pop
jo
xchg
test
iret
xchg
clc
push
hlt
aad
adc
and
gs
les
mov
fimuls
rolb
fsubrs
iret
add
xchg
pusha
xchg
jg
cs
in
jl
mov
fiadds
add
hlt
pop
push
inc
mov
ja
int
out
pop
div
mov
push
mov
or
pop
in
pop
fldt
in
and
cmp
sarl
push
adc
xor
out
mov
xchg
je
cmc
std
rcrb
jle
cld
cmpsb
shr
push
std
fidivs
sub
bound
stc
or
out
mov
mov
dec
out
out
jge
loop
lds
popf
dec
mov
sbb
mov
repz
or
rcl
mov
inc
aad
aaa
mov
xchg
xor
fsubrs
scas
cmpsl
hlt
inc
ds
out
pop
mov
add
mov
inc
lret
pop
cmp
mov
sarl
dec
pushf
ja
jecxz
loopne
cmpsl
adc
rclb
jp
xor
cmp
pop
jge
push
ret
xor
or
and
mul
mov
sub
dec
sbb
pop
imul
sarb
mov
jb
gs
push
movsb
dec
mov
push
fidivrl
inc
push
push
insb
cmp
jge
and
mov
dec
mov
movsb
add
inc
push
adc
inc
test
cs
sarl
out
es
sub
inc
sahf
add
in
lock
sbb
pop
hlt
or
xchg
ja
mov
sub
pushf
xor
lods
pop
jno
pop
cmp
mov
jl
lods
adc
and
or
in
xchg
call
int3
push
in
add
in
jle
adc
push
inc
xchg
les
mov
int
lahf
or
add
out
push
push
lcall
or
dec
fdivrp
push
or
pushaw
iret
insb
xor
mov
xor
fisubrl
aad
mov
push
lcall
nop
add
movsl
idiv
cmp
pop
pop
pusha
aam
dec
or
mov
js
int3
jne
outsb
push
lahf
jne
or
mov
sub
mov
jmp
push
sti
push
sub
push
push
mov
push
out
test
lods
sub
loopne
adc
xchg
sub
pusha
pop
push
arpl
xchg
cmp
ss
xchg
pop
pop
mov
xchg
loop
mov
push
sub
push
in
fiaddl
cmp
add
pop
mov
aas
lcall
imul
shl
notl
in
stos
push
and
cmp
mov
loop
loop
push
popf
fwait
outsb
xor
nop
pop
pop
mov
push
aad
add
pop
in
cmp
jne
push
in
mov
daa
push
jno
or
jno
jle
insb
insb
dec
jmp
push
negb
push
cmc
mov
iret
push
mov
xor
push
sub
mov
in
in
mov
icebp
lcall
add
ljmp
pop
inc
adc
fstpt
jb
testl
mov
dec
insl
mov
pop
repnz
scas
pop
sbb
or
cmpsl
scas
xchg
xchg
negl
cmpsb
cmpsb
out
add
insb
inc
dec
push
inc
mov
or
outsl
xchg
inc
jp
movsl
mov
inc
add
jnp
jge
adcl
lods
in
or
mov
insb
jo
dec
mov
test
mov
inc
push
sbb
and
cli
fistpl
cs
adc
dec
cmp
inc
mov
pop
cmp
rcr
out
pop
cwtl
pop
mov
cltd
cmpsb
jae
rorl
push
sti
xchg
pop
fistps
push
sbb
divb
mov
ret
pushf
pop
cld
mov
mov
clc
and
iret
mov
bound
xchg
xor
bound
fsave
daa
inc
test
push
mov
cmpsl
bound
push
testb
enter
daa
popa
xchg
mov
pop
in
lret
xchg
inc
mov
xor
popa
out
pop
jp
xor
push
lahf
mov
jl
cmpsb
add
cld
push
mov
mov
hlt
outsb
enter
das
in
test
xchg
jae
pop
rcll
inc
out
aad
or
push
std
or
xchg
sub
hlt
shr
movsl
push
stos
std
mov
or
les
pushf
fisubrs
sub
push
in
or
out
inc
mov
and
sahf
mov
sbb
pushf
addl
pop
adc
add
inc
mov
mov
outsl
scas
xor
xor
dec
ret
imul
push
push
inc
or
cmp
inc
int3
mov
mov
xchg
or
pop
dec
cli
push
mov
inc
or
pop
int
mov
cmpsb
es
movsb
std
and
ret
pop
lahf
int
ficoml
and
xor
or
ja
fs
aam
inc
pop
cmpsb
mov
loopne
or
push
lds
mov
sbb
repz
gs
lcall
mov
test
dec
xchg
adc
xor
fcmovnb
sahf
lcall
outsb
lods
sbbl
xor
ret
inc
daa
sahf
xchg
outsl
jp
adc
lods
movsl
ljmp
sbb
in
loop
int
mov
cld
mov
scas
xchg
arpl
pminub
push
push
push
cmpsb
mov
add
ret
inc
inc
push
jae
dec
lds
cwtl
cmp
mov
or
push
jo
aad
jae
xlat
out
sbb
jl
es
mov
lea
and
mov
js
in
jns
adc
mov
pushf
adc
xchg
add
pop
into
in
cmp
mov
cmp
mov
pop
dec
sub
aaa
dec
iret
jns
adc
mov
pop
popl
lcall
pushl
cli
mov
ja
fnstcw
lret
js
cmp
sub
inc
or
mov
rclb
mov
jmp
inc
ret
xor
mov
jl
sbb
shll
stos
add
and
xor
and
inc
scas
xchg
push
test
leave
and
into
dec
jb
frstor
ret
and
lock
sbb
xchg
dec
xchg
lds
nop
dec
addb
jne
rolb
cs
xor
mov
sub
or
add
adc
adc
les
dec
or
sbb
pop
cld
sar
ret
mov
inc
adc
imul
movsl
sbbl
lds
jbe
lahf
push
inc
leave
pushf
inc
movsb
xchg
jp
sub
adc
cmp
addr16
imul
js
sbb
cmp
leave
dec
icebp
sbb
mov
jmp
loopne
sbb
hlt
mov
xchg
xor
pop
jnp
jmp
js
lods
mov
xchg
mov
xor
call
mov
push
mov
mov
rorb
dec
sbb
cli
mov
mov
rcrl
in
dec
xor
popf
cmpb
pop
movsl
inc
je
xchg
xchg
inc
mov
outsl
testb
mov
lea
daa
push
ja
loope
xchg
inc
insb
pop
por
cmp
and
fs
mov
or
repz
inc
stos
dec
rclb
or
adc
adc
test
cmp
aam
decb
jmp
mov
pop
nop
cmc
add
repnz
subb
gs
mov
dec
jo
stc
aad
sbb
aad
adc
scas
sbb
lea
call
cmp
iret
xor
out
enter
mov
and
pop
cmpsb
mov
add
iret
incb
and
or
repnz
imul
popf
mov
mov
jle
loopne
adc
inc
jne
xor
push
mov
rol
dec
sbb
fbstp
outsl
xchg
scas
xor
push
movb
cmp
push
test
je
shr
fs
and
sahf
and
mov
dec
xor
jae
jne
cmp
mov
popf
jle
dec
sbb
enter
adc
dec
mov
in
dec
inc
jp
out
xchg
sahf
test
sbb
pop
pop
aaa
sti
sub
add
mov
xchg
inc
sub
mov
push
dec
loopne
cmp
sub
sbb
mov
add
das
das
mov
jl
dec
leave
adc
xchg
xor
inc
lret
or
pushf
lds
dec
fldt
xor
inc
ss
ficoms
loop
inc
into
push
xorb
mov
sbb
mov
roll
push
mov
lds
ljmp
arpl
or
loopne
and
sbb
mov
lds
and
xchg
inc
imul
daa
xchg
mov
dec
rcr
aad
arpl
dec
jae
mov
shlb
sub
push
cld
pop
sbb
sti
lds
mov
push
andb
in
addl
add
arpl
or
inc
mov
push
imul
popf
test
sti
adc
add
mov
inc
jg
mov
jbe
mov
rclb
fisubrl
inc
cltd
push
pop
pushf
mov
fimuls
or
lcall
xor
push
pop
movsb
testl
mov
pop
sub
mov
outsl
in
sahf
clc
icebp
adc
clc
add
jge
and
aad
jno
mov
or
std
rorl
fidivl
pop
jmp
inc
dec
jb
hlt
push
jge
lods
xorl
loopne
push
stos
popf
and
and
add
scas
mov
mov
add
addr16
out
pop
and
jl
push
clc
xchg
insb
repz
jle
mov
mov
fstpl
insl
sub
xchg
and
lret
cmpsl
test
cmp
inc
push
inc
movsb
stc
fwait
mov
ret
mov
or
inc
fs
loop
xor
in
cli
and
mov
mov
and
sti
sarl
ffree
cmpsb
adc
lods
push
insl
std
pop
pop
mov
stc
pusha
ret
adc
push
inc
mov
and
stos
push
jbe
adc
rcll
push
push
mov
pop
test
lods
and
or
xor
loop
inc
xchg
mov
sub
pushf
push
fsubs
ljmp
inc
shl
jb
pop
mov
aaa
xor
jb
push
pop
in
ret
in
jb
aaa
xchg
cli
out
dec
xchg
xchg
lahf
jg
add
mov
add
loope
int3
push
push
jg
mov
cmp
jb
sbb
fadds
addr16
lods
imul
or
sub
enter
push
and
jae
icebp
enter
shlb
sbb
adc
dec
xor
add
pop
jb
out
and
sub
or
pop
cld
outsl
pop
mov
test
jp
arpl
adc
mov
sub
mov
adc
arpl
mov
xor
scas
cwtl
nop
pop
imul
ret
jmp
lea
das
popf
sbb
jp,pt
arpl
jo
sbb
lods
xor
stos
insb
bnd
adcb
xor
arpl
push
inc
inc
cs
or
cmc
sbb
lret
pop
aad
xchg
jo
sub
add
jns
add
test
pop
ljmp
pop
adc
outsb
jmp
push
adc
fwait
or
push
mov
mov
sub
stos
xor
pop
xor
cmp
mul
fsubs
xchg
fldl
in
xor
pop
ficoml
cli
cmp
sub
jmp
mov
jmp
xor
je
out
js
cld
scas
ja
mov
push
daa
ljmp
add
mov
mov
addl
ds
nop
mov
cmp
inc
sbb
cltd
mov
es
cmc
aam
imul
out
inc
negb
mov
xchg
lods
add
pop
inc
in
jb
aaa
sbb
rorl
decl
pushf
js
xor
mov
mov
in
out
push
data16
xor
push
syscall
cwtl
adc
jo
jno
call
cpuid
in
std
insb
xor
dec
pop
dec
mov
mov
pop
mov
mov
and
inc
cwtl
or
mov
jmp
xchg
into
jecxz
cmp
ret
xchg
lds
add
loop
cmp
mov
push
jp
cli
repnz
incb
dec
ret
mov
cli
imul
jno
test
call
jp
stos
mov
jno
fldt
int
loopne
outsl
mov
jl
cmp
or
xchg
or
cmp
leave
mov
pop
xchg
adc
lret
push
orb
and
cmp
xchg
jl
adc
pop
or
cltd
and
mov
xchg
ds
sub
je
push
or
xchg
pusha
nop
imul
pop
xor
fidivl
mov
xlat
cmc
scas
sub
add
or
mov
mov
sbbl
lret
lods
xor
push
inc
icebp
imul
cmp
pop
imul
test
mov
pop
pop
test
ja
mov
dec
cmp
cmp
subl
ret
cmp
xchg
mov
arpl
popf
push
mov
mov
inc
push
xchg
popa
nop
int
pusha
inc
inc
xor
ljmp
andl
repnz
nop
xor
dec
xchg
adcb
test
adc
sti
or
inc
rolb
mov
aad
sbb
mov
out
fsubs
xor
cmc
jg
mov
fiadds
mov
and
hlt
adc
daa
mov
xchg
es
inc
push
fs
push
int3
daa
pop
fmuls
das
out
push
shlb
adc
aam
xchg
nop
out
cmp
mov
push
sbb
or
test
sub
pop
cmp
push
cwtl
das
xchg
cmpb
js
mov
cmpsl
sbb
mov
mov
dec
inc
ljmp
aad
dec
xor
lret
sbb
and
push
imul
xchg
sarl
orl
pop
shl
xorb
push
add
sub
xlat
sbb
push
repnz
icebp
mov
mov
scas
xchg
push
mov
scas
orb
jne
mov
cmp
mov
sbb
test
les
aas
dec
ds
lea
std
add
cmp
xor
repnz
shlb
inc
fnstcw
iret
or
mov
and
outsb
mov
in
add
repnz
xor
lods
pop
lahf
lret
adc
repnz
fisubs
push
popa
xchg
add
inc
icebp
roll
lcall
addr16
push
mulb
dec
loope
repz
inc
and
jno
outsl
dec
pop
jo
inc
add
add
cmpsl
addb
or
popf
push
and
insb
and
lahf
scas
jl
and
xchg
mov
pop
addr16
inc
cmp
dec
push
xchg
pop
cs
popf
or
jp
inc
lret
cs
xlat
cmp
mov
lods
pop
dec
mov
dec
insl
or
insb
and
inc
sbb
mov
jge,pt
int
add
adc
sbb
cmpsb
rorb
push
and
repnz
dec
pop
jg
and
push
pushf
insl
mov
loope
sbb
dec
mov
in
notl
xor
pop
dec
mov
inc
filds
setne
decb
mov
fs
shll
mov
mov
push
pop
sub
push
lret
cmp
mov
imul
adc
xchg
pcmpgtb
lahf
xor
cmp
cmp
xchg
dec
push
sbb
bound
xor
leave
mov
enter
pop
push
xor
out
das
mov
aam
cmp
fdivs
out
test
int
push
lea
xor
xchg
xchg
jg
adc
dec
xchg
add
sahf
cmpsl
leave
lcall
xor
out
pushf
mov
push
stos
enter
add
lret
std
dec
xchg
insb
xchg
jo
mov
in
aam
out
adc
mov
inc
cmc
in
cld
ss
cmpsb
dec
inc
add
call
push
mov
ficompl
scas
sar
or
dec
ljmp
xor
bound
movsb
dec
mov
das
cmp
test
and
inc
jecxz
ljmp
sub
mov
jns
jnp
data16
cmpsl
mov
or
aam
sub
dec
test
adc
push
in
repz
pop
adcb
inc
inc
push
out
jb
xchg
mov
fsubs
icebp
mov
add
cs
lock
adc
push
rclb
mov
mov
les
adc
sub
mov
out
clc
lds
xchg
xchg
or
movsb
lret
dec
cmp
dec
icebp
jmp
mov
and
ss
rorb
mov
push
daa
testl
mov
and
push
in
cmp
lahf
in
push
sub
mov
roll
jecxz
hlt
negb
insb
iret
stc
insb
xlat
sbb
cmp
daa
nop
jb
roll
iret
or
mull
or
push
pop
mov
push
sub
lea
loopne
lea
adc
pushf
adc
inc
shl
push
pusha
xchg
add
push
jle
lods
enter
cmp
sbb
xor
adc
aas
wbinvd
out
mov
dec
mov
idivb
stc
cmp
xchg
push
scas
rorl
repz
mov
icebp
js
xor
sarb
out
or
jp
pop
mov
adc
pop
inc
add
decb
bound
pop
popa
enter
pop
mov
outsb
sub
push
dec
pop
adc
lcall
aam
push
push
out
xchg
or
in
cmpsb
movsl
lock
add
ret
sbb
into
mov
mov
fildll
pop
nop
push
pop
pushf
ss
das
dec
fbstp
xor
aas
dec
inc
mov
sbb
xchg
stc
enter
push
stos
call
xorb
sub
imul
fs
add
xlat
sub
dec
xor
mov
xor
cmp
push
hlt
popa
cmp
inc
nop
leave
jp
mov
mov
adc
jl
fs
xchg
add
call
pop
inc
fnstsw
push
push
xor
add
push
add
inc
clc
rorl
add
shrb
out
sub
and
roll
cmpsl
sub
ds
fnsave
mov
fsub
inc
and
cltd
adc
leave
mov
push
into
cmp
mov
dec
or
pop
mov
push
fiaddl
cwtl
hlt
subl
mov
pushf
adc
mov
push
test
or
xchg
rorb
inc
cmp
imul
cmp
jg
mov
popf
push
add
jae
mov
push
xorl
iret
mov
push
jg
pusha
dec
sub
hlt
push
and
clc
aas
lret
out
push
pop
mov
test
xor
cmp
or
dec
xchg
les
sbb
repnz
xchg
or
test
add
das
xor
mov
hlt
test
ja
out
sbb
fnstsw
xchg
sti
xchg
repz
add
std
sahf
cmp
sbb
dec
xchg
sub
adc
and
mov
mov
and
cmp
mov
pop
inc
lret
cld
lret
mov
out
cld
loopne
mov
or
bnd
push
test
xchg
int
in
pop
inc
push
pushl
arpl
aam
movsl
mov
pop
pop
pusha
stos
std
mov
mov
idivb
nop
popa
pop
lahf
sub
cmpsb
stos
and
out
shlb
pop
cmpsb
add
and
fldenv
pop
ja
divl
lock
mov
inc
in
and
add
jl
aam
clc
mov
mov
rol
xor
xchg
jns
xor
lds
or
test
pop
mov
sub
mov
cs
test
in
sub
push
and
pop
fsubs
adc
lsl
xchg
test
add
xlat
int3
lds
ret
jp
pushf
mov
push
dec
rcrb
xchg
dec
shll
fcmove
movsl
xchg
mov
lret
mov
xor
lds
inc
mov
xchg
push
dec
and
pop
sub
mov
js
sbb
das
fsubrs
fistps
lcall
cmp
fists
je
popa
dec
in
out
mov
dec
mov
mov
in
sbb
movsl
jo
rcl
xchg
out
mov
jmp
shll
mov
testl
js
test
ret
aas
fldpi
fistps
repz
add
test
cld
xchg
pop
stos
subb
and
mov
das
jnp
push
jns
and
mov
mov
aas
scas
and
jno
hlt
cwtl
out
repnz
gs
aaa
push
lret
out
jp
repnz
mov
ror
insl
loopne
pop
cmp
lods
sbb
ret
inc
pop
jno
movsl
jge
push
sub
mov
lahf
enter
xchg
adc
xlat
push
cmpsb
xchg
mov
aam
mov
or
xlat
sub
cmp
cmpsb
lcall
mov
pop
leave
mov
xlat
push
cmpsb
stc
mov
les
lcall
outsl
mov
jno
andl
mov
xchg
adc
xchg
test
mov
and
lret
pushf
lcall
mov
paddsb
mov
mov
mov
mov
xor
scas
xchg
mov
xor
loop
add
sub
jns
pop
xchg
sbb
add
adc
outsb
in
jmp
lcall
test
rcl
inc
push
mov
push
pop
mov
dec
into
pop
nop
mov
jae
add
inc
adc
loope
pushf
rolb
outsb
int3
inc
ret
xor
pop
icebp
pop
movsl
xchg
xlat
lret
adcl
add
jnp
jge
xchg
push
ret
jcxz
xchg
pushl
sub
push
jne
in
fstps
xchg
and
sbb
sbb
push
leave
lds
loopne
fistl
int3
fisubrs
inc
out
sbb
add
mov
lock
add
xor
sub
jno
cmp
fstl
jp
inc
hlt
adc
stc
inc
push
add
lret
jbe
sbb
xchg
dec
xchg
cs
mov
sbb
and
jmp
setl
push
repnz
push
and
out
push
insb
mov
ret
xchg
add
repnz
sbb
imul
sahf
xlat
negl
add
clc
dec
bound
push
mov
cltd
das
movsb
push
push
push
xchg
movsb
cmc
xor
mov
push
xor
shl
out
xchg
mov
lds
shrb
or
inc
xchg
inc
aam
aaa
dec
dec
leave
popa
mov
and
movsb
jne
jle
dec
lods
repnz
mov
loop
or
std
mov
lahf
and
xchg
lcall
bound
in
inc
add
push
cmp
jecxz
mov
mov
or
dec
cmp
inc
mov
aas
das
or
std
inc
int
xchg
mov
push
sahf
sub
rcrb
pop
cwtl
sub
in
jne
hlt
mov
shrl
ss
pop
stos
and
imul
push
xor
jnp
cmpl
cmp
xchg
mov
into
fiaddl
ret
dec
push
call
ds
jb
push
cmp
out
mov
sub
jae
cmp
xchg
popf
push
lods
stos
ja
lret
sub
jns
shlb
mov
insl
xlat
idivl
testl
fs
cli
divb
xlat
add
mov
jl
pushf
clc
ret
movsb
jne
clc
js
insb
dec
mov
jne
insb
push
push
jb
incb
mov
lea
addl
add
mov
je
pop
imul
lret
push
push
jne
movsb
bound
popf
ret
add
mov
cmp
mov
dec
cmp
outsb
mov
push
mov
xchg
incb
cmc
enter
add
sbb
mov
scas
out
add
scas
es
sub
push
outsb
in
aaa
pushf
lods
cmc
mov
push
je
jnp
inc
rolb
and
inc
lock
jns
mov
sub
dec
dec
mov
cwtl
test
push
and
pop
loopne
cmp
fnsave
aad
dec
mov
and
push
jmp
inc
pop
icebp
insl
pusha
imul
adc
arpl
mov
imul
xor
and
xorl
push
xchg
adcl
sbb
or
mov
lret
fcoms
popa
xchg
jo
xor
rcrl
out
xchg
loope
addl
or
lds
nop
adc
and
push
push
scas
sub
or
aaa
or
rorl
lea
inc
js
jne
pop
arpl
int
add
push
cmp
aad
mov
and
cwtl
mov
xor
adc
rolb
sub
jg
mov
lret
jg
aas
mov
jne
sub
ja
stc
loopne
out
not
out
adc
jecxz
movsl
out
mov
mov
aam
pop
in
mov
or
cmpsb
ss
lds
aad
pusha
mov
mov
sub
xor
inc
sbb
filds
nop
int3
cli
ffreep
addr16
mov
scas
es
and
sub
inc
fisubl
lea
or
out
xchg
push
jge
faddl
mov
scas
das
mov
sub
mov
in
popf
mov
xor
push
enter
lret
popf
movsb
and
cltd
jno
clc
pop
and
dec
mov
icebp
int3
scas
adc
scas
out
fwait
lea
mov
aas
leave
mov
sahf
jp
push
xchg
mov
or
mov
stc
outsb
jecxz
fisttpl
mull
dec
enter
xchg
pop
rcrb
add
push
add
lock
lea
enter
mov
pop
aas
sarb
fwait
in
addr16
repz
adc
pop
adc
xchg
adc
or
test
mov
xchg
add
lods
sbbb
xor
ss
hlt
arpl
xchg
cmpsl
jnp
adc
fnstcw
andb
shrb
xlat
or
pop
and
ljmp
sahf
jecxz
xchg
shrl
sbb
out
mov
dec
mov
sarb
xchg
mov
pop
or
pop
mov
and
and
jnp
push
fstl
cmp
and
dec
mov
js
jg
push
inc
xor
pop
or
fldenv
pop
cmpsl
add
sbb
popf
pop
scas
xor
iret
in
xor
imul
mov
push
xor
jle
ljmp
push
mov
gs
sub
fwait
ja
or
sbb
and
sub
nop
mov
cld
and
fsubrl
fimuls
mov
in
stc
push
mov
mov
pop
xor
or
iret
psubusw
jl
loop
outsb
or
test
rcrb
imull
test
aaa
inc
or
xchg
fbld
mov
aad
mov
push
or
ljmp
and
in
cmc
fsts
aaa
into
adc
or
popf
call
xor
loope
xchg
mov
sbb
mov
jmp
mov
jns
mov
scas
mov
cmp
outsl
cs
mov
cmp
leave
ret
cmp
push
and
test
popa
jbe
adc
popf
icebp
cmp
aas
test
fstps
shl
sbb
add
les
dec
add
lahf
add
rol
js
js
inc
and
cli
mov
movsl
insl
push
es
lcall
xor
cmpps
sbb
test
lret
fsubrl
es
test
cli
fstl
roll
cmp
or
xchg
int
fcoml
sbbl
cmp
ret
sub
movsl
test
sub
adc
lcall
sahf
cmpsl
insl
push
add
mov
in
dec
es
pop
out
insb
scas
imul
orb
test
gs
test
lea
cwtl
inc
ja
sbb
sub
dec
lret
mov
addr16
sbb
adc
cmp
sbb
mov
mov
es
adcl
jl
cmp
cmp
sbb
shrl
jg
add
pop
jne
rcrb
clc
scas
movsb
roll
test
jbe
testl
xchg
pop
sahf
arpl
push
pushf
cmp
sub
inc
push
adc
in
jbe
xor
add
in
enter
ss
fsts
mov
add
fisubrl
sbb
adc
adc
ret
pcmpeqd
imul
jno
adc
ljmp
insb
push
cmp
mov
and
insb
mov
lahf
cwtl
stos
xchg
lret
push
push
dec
mov
ljmp
popa
lds
fwait
jmp
and
call
popf
pushf
stos
push
cli
sbb
cld
into
xchg
js
mov
push
mov
jns
dec
rcrb
movsl
cmp
movsb
test
sub
push
pop
mov
adc
out
lahf
lret
add
cli
lret
lods
aam
mov
loop
fldl
mov
inc
cld
enter
lds
pop
and
stc
cmpl
daa
pop
mov
gs
out
add
addr16
lahf
outsl
push
call
test
in
sub
out
shlb
psubb
xchg
repnz
dec
jmp
and
sub
xlat
aam
xor
jnp
sub
gs
int
cmp
push
pop
ss
rolb
push
rorl
wrmsr
fidivl
rcll
jge
pop
je
sub
inc
mov
out
lea
fwait
jp
out
insl
movsl
jge
nop
test
ret
or
jl
fsubrs
mov
push
sbb
or
push
lahf
lret
pop
lea
leave
push
fnsave
mov
jnp
push
aaa
bound
fwait
rol
jo
frstor
leave
icebp
call
es
pop
gs
iret
cmp
stc
imul
shlb
rclb
leave
gs
lcall
push
push
jo
fbstp
jmp
ss
push
sahf
popf
fisubrl
or
mov
gs
gs
mov
push
cltd
sub
add
xchg
aaa
test
xor
lret
and
js
sbb
bound
mov
int
div
cmp
movsl
stos
fiadds
jmp
mov
pushf
inc
cmp
pop
jno
jge
mov
cli
pop
push
sub
cltd
jge
or
inc
inc
test
ljmp
inc
cmp
jns
xor
or
std
cmp
iret
mov
data16
cmp
mov
push
jp
adc
repz
popa
adc
push
lcall
test
loope
out
cmp
jns
mov
mov
into
or
xchg
pop
mov
mov
pop
ret
mov
fs
cmp
das
mov
cmp
lret
pop
hlt
test
rorl
hlt
xchg
cwtl
jg
pop
mov
mov
rcl
sub
mov
popf
out
xchg
push
push
fcompl
into
lret
rorl
insb
mov
je
sub
xchg
stc
cmpsb
cwtl
sbb
outsl
dec
imul
add
cmc
sarb
negb
lods
xor
xchg
mov
mov
push
xor
mov
ds
cs
mov
dec
subl
mov
mov
dec
fxam
cmp
push
pop
jne
repz
movb
adc
imul
pop
je
data16
bound
push
sbb
or
mov
xchg
pop
add
adc
sbb
rcl
loope
imul
cmpsl
into
aad
mov
jne
out
sbb
push
xchg
fldcw
lahf
cs
xchg
jae
mov
movsb
lds
xchg
push
push
or
sarb
inc
inc
xchg
mov
stos
jns
lods
es
inc
fwait
adc
xchg
aas
sub
xchg
jne
fildll
mov
loopne
or
divb
dec
mov
sub
cmp
cmp
dec
stc
insb
jb
mov
inc
jbe
sub
jne
aad
cmp
jns
gs
int
enter
push
dec
and
adc
xorb
xchg
pop
jno
xchg
das
in
in
jns
in
mov
js
test
push
pop
lods
push
xor
out
aaa
stc
les
mov
aad
mov
cwtl
sbb
inc
jg
sahf
mov
daa
inc
sub
add
shlb
sub
dec
or
fcoml
test
sub
ret
mov
movsl
std
daa
push
lods
cld
ret
lds
scas
inc
shlb
mov
iret
lahf
inc
jnp
sbb
sbb
daa
nopl
push
pushf
bnd
sbb
mov
lds
pop
mov
xchg
jns
ror
hlt
call
inc
outsl
xchg
add
push
and
or
outsb
loope
scas
mov
add
dec
sahf
add
adc
xor
pop
dec
push
outsl
mov
xchg
vcvtps2dq
js
jo
loope
mov
dec
ret
mov
mov
jmp
test
notl
add
add
jecxz
mov
decb
fdivr
jae,pn
mov
mov
jp
add
inc
dec
pop
shll
pop
push
mov
inc
movsb
lret
fwait
cmp
loop
pop
pop
add
pop
add
pop
dec
out
mov
in
push
push
pop
sub
iret
cmp
and
int
aas
mov
jbe
int
lods
cmp
stos
fists
jno
jmp
aam
movsl
cmp
jge
mov
scas
mov
jns
sbb
stos
mov
xchg
test
mov
dec
es
dec
pop
mov
dec
push
sar
sbb
test
or
lret
outsl
mov
cmp
or
sahf
test
mov
rorl
adc
out
dec
push
and
aas
jmp
mov
cmp
add
loope
in
dec
popa
mov
pushf
paddsw
outsl
mov
stos
jge
ret
daa
sbb
dec
pushf
out
cmp
cltd
fcom
fsub
or
nop
cmp
stc
add
rcrl
lock
iret
inc
sbb
jmp
adc
xchg
lcall
xchg
sti
push
dec
pushf
pushf
rorb
jg
outsl
or
and
cmp
test
mov
mov
sbb
mov
sbb
andb
xchg
js
push
in
lea
ret
and
fistpl
jl
cmpsl
repz
jns
cmp
scas
test
mov
in
insb
push
pop
andb
push
sub
cmp
sbbl
and
mov
sub
cltd
movsl
mov
or
shrb
xchg
and
push
daa
xchg
cltd
dec
sbbl
inc
mov
add
std
mov
dec
dec
lock
or
movsl
outsb
adc
push
mov
pop
lea
into
or
push
push
fcmovbe
sub
jg
sbb
negb
mov
xchg
mov
lea
adc
cmp
mov
and
mov
xlat
cmp
fidivs
pop
mov
jmp
xchg
sub
shll
adc
push
sub
cld
jp
adcb
cltd
pop
sarl
push
dec
sarl
xchg
pop
pause
test
mov
ret
inc
dec
das
test
mov
push
push
mov
pop
xor
xor
andl
mov
mov
sub
imul
push
or
jmp
scas
dec
cmp
movsb
lds
and
sub
popa
mov
fisttpll
add
aas
pop
iret
adc
or
mov
xchg
inc
add
addr16
inc
std
sub
jae
pop
or
jg
mov
xchg
mov
inc
cmp
adc
mov
std
pusha
sbb
xchg
arpl
jle
mov
add
pop
fnstsw
cmc
push
xor
mov
daa
dec
test
xchg
int3
ljmp
mov
or
ja
pop
mov
cmpl
inc
lea
or
mov
std
xor
mov
cmpsb
push
push
and
mov
jb
push
pop
fs
xor
inc
pusha
adcb
dec
repnz
mov
mov
sbb
test
cmp
mov
sbb
pop
mov
xchg
divl
jge
lahf
push
jmp
ss
test
pop
dec
femms
xchg
rolb
mov
loopne
lret
jge
lea
mov
adc
inc
add
sub
push
loop
dec
jbe
sub
in
aad
cmp
cmp
in
iret
push
inc
xor
aad
xchg
and
scas
xchg
int3
pusha
pusha
mov
sti
clc
lret
insl
leave
jecxz
jne
push
jnp
xor
lahf
lods
repz
sub
dec
int
mov
scas
cltd
mov
insl
dec
push
inc
pop
out
ljmp
push
sahf
out
jp
and
mov
imulb
inc
mov
pop
dec
sbbl
movsl
and
fstp
test
fstpl
jp
cwtl
and
inc
jno
aam
std
iret
pop
mov
mov
lods
push
insl
dec
es
test
rorb
lret
mov
xor
cltd
and
call
pop
dec
arpl
push
or
dec
add
sbb
add
mov
movsl
fwait
lods
xor
shl
cmpsb
adcb
pusha
dec
aad
mov
aaa
add
fidivrs
add
stos
icebp
or
loopne,pt
mov
and
fwait
scas
outsb
imul
xlat
jmp
movsl
xchg
lods
xchg
jnp
test
pusha
imul
sbb
hlt
out
mov
stos
adc
jp
jae
mov
popa
fisttpl
loop
xchg
fldt
iret
iret
test
test
iret
fidivl
xor
scas
mov
push
mov
add
or
mov
push
push
push
je
test
xchg
outsb
push
jle
push
hlt
lock
scas
iret
push
and
sub
mov
dec
filds
sarl
push
mov
sbb
push
sub
divl
xchg
andb
aaa
es
sub
pusha
sub
or
dec
nop
fsts
scas
lret
jb
cmp
loope
push
push
cmp
xchg
enter
addl
mov
push
movsb
lret
ljmp
adc
arpl
inc
aaa
dec
push
or
stos
add
pop
jecxz
ljmp
addr16
enter
xorb
push
sub
ret
adc
jae
cwtl
mov
in
test
xor
pop
ret
xor
pop
sub
js
fsubrs
xorb
mov
dec
lahf
and
jno
mov
lret
mov
push
mov
add
cmp
sbb
ffree
or
test
cmpsl
testl
push
cmp
and
xchg
jb
mov
xor
xchg
lahf
int
adc
fidivl
xchg
sahf
imul
push
push
cli
or
and
jmp
gs
sub
sub
and
inc
adc
scas
std
or
rorb
dec
add
cli
jmp
push
jmp
cmp
mov
lods
sub
pop
ss
mov
xor
pop
popf
push
adc
push
stos
mov
lahf
sub
pop
add
pusha
sarl
pop
xor
cmp
aad
push
push
stos
divb
mov
ljmp
dec
mov
adc
rclb
xor
cld
mov
dec
xchg
push
into
test
lret
int3
inc
enter
sbb
movl
mov
insb
sub
or
mov
fldt
jg
out
xlat
mov
dec
pop
mov
adc
jge
enter
cltd
addr16
xchg
cmp
rcrb
or
test
lods
in
pop
mov
jmp
dec
mov
jae
push
sub
loop
mov
jns
or
idivl
test
xchg
mov
mov
sarb
fnstcw
in
jnp
xchg
xchg
xchg
push
loope
mull
add
cmp
fdivl
stos
aad
jp
cs
rcrl
aam
ret
pusha
inc
push
ficoml
xor
cld
shr
ret
sub
mov
pop
repnz
rcrb
push
cs
dec
pop
xchg
outsb
outsl
jl
inc
push
into
popa
in
stc
mov
or
sbb
jl
loop,pt
repnz
mov
mov
std
scas
mov
in
sahf
andl
xor
lds
jg
or
or
jmp
sub
fisubrl
sbb
xchg
sti
loop
push
fimull
jp
xor
push
fisubl
sbb
push
adc
pop
std
mov
xchg
cmp
jne
push
xchg
push
lods
sbb
push
add
mov
movsl
jl
sti
repz
fsubl
in
xor
cmp
inc
mov
js
fwait
stos
push
lahf
loopne
sbb
dec
clc
popf
ror
fildl
test
ret
xchg
sub
not
xor
test
push
sub
stc
xchg
cmp
daa
add
stos
into
inc
pusha
adc
add
popa
or
xor
and
in
aam
fmull
in
mov
mov
cmp
inc
mov
mov
arpl
adc
sub
mov
out
sbb
and
loope
call
sbb
jmp
jp
jnp
ds
push
and
mov
add
scas
sub
sub
out
jge
fwait
xchg
mov
inc
cmp
add
lods
movsl
and
cmpsl
or
ja
push
faddp
xchg
jl,pt
out
push
faddl
sahf
popf
lahf
imul
sarb
pushf
xchg
inc
ja
adc
xchg
xchg
lcall
repz
mov
int3
insl
lea
and
sbb
xor
push
sub
les
or
dec
test
sub
add
lret
in
lods
push
into
jnp
out
les
lds
push
sbb
mov
xchg
xchg
les
cltd
test
push
xchg
stos
outsb
gs
jle
cmp
test
enter
rclb
je
imul
adc
mov
mov
fcmovnbe
jb
std
push
xor
jb
hlt
sub
jp
push
dec
ja
idivb
es
cmp
adc
cmp
inc
cltd
mov
ds
aas
mov
lahf
loopne
or
insl
negb
sub
cld
mov
mul
and
fidivs
stos
push
fstpl
or
in
scas
mov
mov
inc
stos
jae
xchg
hlt
in
movsl
lret
std
fadds
inc
sbb
inc
imul
out
adc
mov
push
and
outsl
pop
insl
stc
mov
out
cmp
adc
mov
push
inc
jbe
cmp
jns
in
in
cmpsl
jmp
sbbl
push
cmp
js
std
sub
sbb
mov
dec
or
sub
and
mov
and
in
push
es
sub
pop
dec
push
roll
adc
xor
mov
mov
imul
pop
or
loope
or
lds
push
lret
adc
inc
loopne
jle
mov
mov
dec
int
pop
and
and
into
loope
xlat
push
fists
cs
mov
cmp
and
push
push
pop
ret
mov
sub
cmpl
jno
cli
mov
mov
cmp
mov
popf
outsl
pop
pusha
sub
lock
out
cmpb
test
mov
mov
pop
jo
sub
xchg
dec
js
mov
sbb
out
inc
repnz
xor
ret
aas
xchg
push
dec
adc
out
xor
and
push
pop
and
stc
and
xchg
popf
push
mov
mov
cmc
stos
bswap
jmp
lahf
lods
ja
fldenv
inc
add
aaa
cmc
addb
addr16
mov
std
int
call
stos
stos
inc
add
insl
cltd
into
imul
sbb
imul
dec
mov
mov
mov
sti
mov
adc
cmpsl
jne
jl
push
fucomip
ficompl
and
push
lods
jae
sbb
dec
loopne
xor
pop
ret
imul
imulb
pushf
pop
mov
adc
or
mov
fists
xchg
stos
iret
lock
loopne
repz
insl
mov
sbb
push
loop
lret
xor
rcrl
pop
mov
cmc
lcall
inc
xchg
mov
adc
add
ficompl
nop
sbb
and
add
clc
jo
cs
and
shlb
mov
out
jbe
mov
mov
mov
cli
cmp
shlb
inc
or
xor
add
xorl
lahf
or
repnz
movsb
pop
xor
xchg
in
subl
cmp
pop
popa
stc
rcrl
call
scas
jecxz
xchg
mov
xor
mov
mov
scas
cmp
cmp
xor
cli
stos
xor
sbb
dec
xor
js
xor
test
adc
dec
sahf
push
jle
inc
and
sub
xchg
test
shl
lret
pop
cmp
outsl
shlb
cmc
mov
and
xchg
and
lret
repnz
push
movsb
adcl
mov
cld
stos
cmc
sbb
cltd
int
dec
jo
iret
mov
push
push
xchg
adc
std
lret
jg
push
fisttps
sbb
cmp
mov
ja
xchg
aam
mov
dec
cmpsl
dec
and
mov
daa
pop
lods
jmp
int
iret
cmpsb
adc
or
cmp
sub
inc
out
int
mov
jb
push
cmc
flds
data16
aad
xchg
jle
jge
daa
fstl
dec
repnz
movsb
inc
call
xor
mov
inc
notl
movsl
pop
jne
dec
cmpsl
pop
iret
xlat
pop
insl
mov
int
jp
stos
icebp
xchg
jp
lea
xchg
aam
mov
das
fimull
mov
mov
pop
inc
inc
lcall
pop
push
loope
push
mov
rolb
aam
dec
pop
loop
mov
mov
jbe
adc
xor
fdivp
cmpsl
enter
sub
dec
popf
cmp
pusha
ret
in
xchg
jmp
mov
clc
inc
mov
sub
outsl
orl
push
fwait
xchg
dec
inc
bound
inc
imul
cmp
add
pop
cmp
pusha
popf
in
les
adc
fildll
adc
sbb
sbb
clc
inc
inc
sti
cmc
fwait
stc
jns
movsl
and
adc
les
sub
fistps
xor
rcr
incl
sbbb
ss
hlt
cmc
pop
lods
test
ljmp
mov
repz
fsts
cwtl
jno
push
cld
jbe
pushl
fadd
in
cli
jne
daa
in
jecxz
or
movsb
jo
shl
jne
push
in
sub
mov
andb
lcall
pop
and
push
and
stos
cmpsl
xchg
jge
jns,pn
mov
cmpsl
mov
movsb
stos
cli
or
movsb
push
jb
cmp
mov
vcvttss2si
adc
aas
cmpsb
data16
dec
addr16
repz
shrb
fdivrp
stos
pop
cld
rcl
mov
addr16
lcall
push
cmp
jne
out
scas
jg
inc
or
push
fs
and
inc
mov
subl
sbb
xor
scas
mov
scas
inc
pusha
push
xchg
cld
flds
mov
jo
fsubs
arpl
ljmp
jno
lds
cmp
in
mov
cltd
xorl
adc
jbe
pop
ret
or
sub
out
inc
push
stc
adc
jge
sub
sub
leave
add
aam
jle
mov
out
inc
cmpsl
inc
repnz
xchg
pop
xor
mov
mov
cmp
pop
imul
lret
inc
inc
inc
push
push
sub
inc
fsubs
in
lods
shlb
fadd
ss
ss
sbb
inc
jg
mov
inc
xor
mov
inc
addb
mov
sbb
jns
sub
mov
data16
out
dec
jbe
cs
daa
ljmp
ret
ja
mov
lea
outsb
loope
jl
loopne
mov
fists
out
mov
scas
xchg
add
jbe
ds
mov
cld
mov
gs
adc
xchg
adcl
out
and
dec
insl
jecxz
stc
mov
xor
and
jmp
pop
insb
or
xchg
decl
in
jb
rolb
inc
xor
outsl
push
std
ss
aam
movsb
adc
test
mov
test
inc
ficomps
push
imulb
call
pop
pop
es
je
jno
outsl
imul
enter
movsb
or
xor
inc
imul
pop
add
xor
icebp
sbb
test
movsl
and
cmp
xor
dec
mov
das
dec
push
fadd
mov
dec
push
push
bound
sahf
mov
testb
shlb
push
pushf
dec
out
cmp
outsb
add
jp
pop
in
fs
outsb
sbb
mov
loop
jecxz
sub
xchg
mov
pop
roll
rcrb
lcall
ret
dec
outsl
test
push
fs
mov
cmp
mov
jecxz
sahf
in
sub
jp
jae
sub
mov
ds
outsl
aas
inc
orb
dec
mov
ja
ja
or
xchg
sub
jg
mov
push
jne
in
mov
jecxz
loopne
add
cmp
es
mov
mov
sbb
lahf
adc
mov
jg
iret
push
push
mov
and
int3
and
dec
addr16
pop
jae
not
dec
xchg
out
jb
mov
or
lahf
mov
push
sub
fildl
fsubl
xor
jmp
inc
sub
pop
adc
or
jb
out
pop
ljmp
fsubrs
scas
mov
inc
imul
sbb
sub
push
adc
xchg
out
fs
or
push
pop
hlt
cs
mov
lock
xor
gs
push
mov
add
dec
call
inc
push
xor
xor
popa
cmpsl
addr16
mov
push
jo
pusha
mov
iret
rclb
orb
mov
cmc
cld
enter
mov
cmp
jbe
ret
xor
cwtl
pminub
dec
fsubrp
jne
aaa
jmp
add
shrb
sbb
cmp
ljmp
jp
jbe
mov
mov
and
scas
repnz
inc
pusha
mov
lea
dec
mov
jbe
mov
xor
ror
sbb
mov
je
test
addr16
testl
ret
xor
fwait
or
xchg
fisubrl
aad
pop
mov
lahf
in
dec
mov
jle
lea
pushf
movsb
out
mov
lcall
in
cwtl
or
mov
fidivl
jp
xor
dec
stos
scas
mov
into
push
scas
add
les
incl
push
adc
mov
mov
insb
sub
pushf
push
pop
rorb
jne
stos
pop
or
shll
movsl
stc
testl
cmp
inc
js
je
test
cmp
in
cmp
push
sbb
int3
enter
pop
jge
stc
test
cld
push
push
stos
mov
sub
sbb
and
rolb
sub
loopne
fisubl
or
stc
mov
mov
ret
ljmp
mov
or
pop
push
lods
pop
es
push
mov
sbb
mov
pop
test
adc
imul
jno
int3
in
mov
mov
sub
pop
pushl
and
mov
pop
cmc
fwait
sub
movsl
pop
add
push
divb
or
push
arpl
arpl
push
aam
dec
adc
cmp
xchg
fidivl
add
cmp
jno
test
xor
dec
insb
adc
push
push
mov
loope
push
sub
movsl
inc
roll
clc
cmpsb
inc
mov
push
jl
or
mov
and
xor
xor
icebp
insl
add
dec
imul
loop
or
out
xlat
xchg
push
jmp
jge
cld
jae
imul
mov
pop
rcrl
sub
lds
pop
ficoms
dec
notl
hlt
in
xchg
insl
repnz
pop
in
push
pop
jg
push
inc
pop
mov
stos
outsb
add
adc
mov
xor
cmp
in
gs
lahf
cmp
inc
lock
mov
push
into
dec
sub
ja
jle
enter
add
push
into
mov
pop
inc
lea
dec
or
jle
in
notl
inc
icebp
add
cmc
lds
jmp
dec
imul
pop
nop
imul
or
jae
sti
dec
and
or
pop
pmulhuw
pop
hlt
or
inc
xorb
inc
jb
sbb
jmp
lds
loope
sarl
rol
popl
xor
jg
in
xor
aas
or
sbb
jp
adc
ret
cld
rolb
jecxz
nop
sbb
sbb
mov
pop
lods
sti
ret
xchg
dec
or
add
add
pop
push
gs
xchg
sub
faddl
adc
mov
fcmovu
js
jle
cltd
and
pop
es
in
push
ret
arpl
xor
push
xchg
xlat
lods
test
push
jecxz
in
or
push
ret
loope
in
xor
cmp
xchg
jbe
inc
sbb
sub
loopne
xor
daa
pop
stc
xor
sub
clc
out
icebp
cld
pop
jg
mov
xchg
push
mov
imul
clc
flds
icebp
sbb
addr16
shll
dec
mov
out
add
movsb
iret
xor
mov
ja
inc
jns
sub
aas
sbb
xchg
pop
inc
pop
or
pop
or
into
sub
test
fidivrl
push
push
icebp
or
std
add
xor
sub
jp
mov
stos
cs
sub
pop
ror
iret
sbb
xor
popa
arpl
mov
lods
sbb
scas
push
in
jle
cmpsl
dec
pop
mov
mov
pop
adc
jl
leave
xor
mov
fidivrl
sbb
jae
and
mov
pop
popf
push
adc
pop
inc
hlt
gs
and
sbb
xor
sbb
dec
testl
sub
push
ss
jle
data16
cmp
push
xor
lahf
mov
pop
push
imul
cmp
cmpsl
mov
xchg
sub
push
cltd
inc
divb
ficompl
bound
fs
cs
or
cltd
sbb
xchg
sbb
jg
dec
aam
sbb
add
adc
shlb
data16
jae
mov
test
out
push
xor
or
inc
xor
or
enter
push
orb
ret
pop
inc
mov
aas
push
and
test
insb
lcall
ret
shll
or
fsts
dec
cmp
int
lret
xor
adc
sub
xor
push
add
loope
and
div
push
cmp
in
imulb
js
out
arpl
or
inc
xor
adc
orb
inc
dec
gs
out
sbb
out
pop
xchg
cmpb
jae
mov
je
and
data16
loop
loope
outsb
inc
pop
lods
push
in
cmp
sub
ja
and
pop
or
das
lods
pop
xchg
sub
mov
fs
inc
pop
inc
pop
les
push
cmp
pop
out
fstpt
mov
jb
mov
mov
dec
xor
jge
xchg
pop
in
xchg
cmpsb
int3
decb
sub
mov
lcall
mov
adc
lret
movups
test
cmp
push
sahf
xchg
ss
out
faddl
inc
mov
dec
cmc
mov
fwait
xor
rcrb
in
jecxz
inc
loope
mov
mov
leave
pusha
inc
clc
pop
aad
es
push
inc
or
ret
sub
mov
mov
insb
pop
jg
lcall
sub
loope
jmp
push
es
mov
mov
sub
sbb
aaa
and
jle
pop
pop
iret
test
icebp
dec
pop
lock
push
cwtl
rcl
in
jo
push
rorl
push
pop
aaa
fwait
enter
adc
jecxz
push
insb
adc
lds
cmpxchg
mov
mov
jbe
lods
add
cmp
push
push
jmp
add
aaa
sbb
lods
icebp
push
sbb
ret
adc
data16
lea
adc
lods
loopne
imul
test
testb
jg
and
push
push
aaa
fsubrp
cmpl
adc
int
jg
or
sbbb
and
mov
push
imul
or
sub
std
xor
sahf
push
or
clc
jae
shl
mov
push
adc
xchg
test
or
dec
clc
aad
aas
push
xlat
out
push
add
push
or
mov
lcall
jle
sub
jbe
cmp
movsb
fdivrs
out
out
stos
ds
mov
imulb
mov
cmp
clc
push
jnp
mov
push
add
push
sub
sarl
mov
je
cli
arpl
xchg
adc
scas
adc
lock
shr
insb
xchg
or
and
cltd
clc
push
push
shlb
lret
pusha
add
icebp
das
stos
roll
sbb
xchg
orb
mov
xor
cmp
jle
push
fwait
lahf
cltd
mov
out
cltd
sbb
xchg
and
popf
dec
adc
xor
mov
insl
mov
xchg
xor
int
dec
ret
ds
ljmp
adc
and
pusha
adc
mov
data16
lcall
adc
push
cli
xor
outsb
dec
pushf
and
addr16
jmp
xchg
mov
pop
add
xchg
pop
aas
mov
jp
insb
mov
mov
es
xchg
shrl
inc
xchg
xor
inc
dec
js
mov
ds
ret
or
in
popf
sub
adc
fsubp
mov
mov
aas
jo
ficomps
sti
add
jno
loop
xor
ds
mov
pop
xchg
sbb
sbb
scas
in
push
pop
xchg
arpl
out
jae
stos
or
sub
sbb
or
hlt
adc
pop
mov
xchg
push
pop
aad
sbb
dec
sti
mov
loopne
pop
xlat
test
nop
xchg
xchg
lods
cmc
dec
jne
jo
nop
xor
mov
mov
fmuls
movsl
mov
jp
add
xor
dec
jno
mov
cmc
pushf
dec
push
push
push
lods
sahf
imul
pop
add
sti
aam
dec
mov
mov
and
xchg
push
out
imul
scas
les
loopne
arpl
or
adc
xchg
cmp
xlat
xchg
inc
push
aad
es
push
mov
and
call
jl
andl
pop
in
push
xchg
xchg
inc
fcomip
in
call
mov
cmp
jmp
add
insb
sti
jecxz
int3
enter
ljmp
xor
and
mov
fildll
outsb
pop
lret
push
cli
cmp
out
sbb
cmp
mov
imul
and
mov
adc
mov
jo
push
mov
dec
dec
test
gs
push
jbe
mov
jmp
xor
sub
out
insl
pop
cmp
pop
aas
cmc
pop
pushf
and
ja
xchg
xchg
mov
pop
pushf
jl
inc
shrl
xlat
imul
shlb
das
bound
movsb
call
imull
push
js
lret
push
fldt
xchg
mov
cli
adc
or
enter
mov
neg
pop
dec
jg
hlt
icebp
jbe
ficompl
pop
ret
std
bound
xchg
add
inc
xchg
addb
pop
sbb
es
lahf
leave
xor
call
mov
cmp
sub
jo
stos
clc
lods
outsb
inc
add
mov
push
fildll
inc
push
pusha
loop
push
xchg
mov
roll
out
dec
dec
and
lock
dec
addb
arpl
adc
out
xor
in
pop
dec
std
addb
jno
or
pop
int3
push
jge
sbb
jae
cmpsb
jae
negl
mov
xlat
sub
loopne
pop
xor
daa
push
sub
loope
cltd
jl
mov
inc
cmp
add
fiaddl
call
sub
movsb
push
jl
add
sbb
in
rclb
xchg
adc
mov
lea
adc
cwtl
in
jp
stc
and
out
push
popf
jno
roll
imul
ret
push
data16
sti
xor
stos
test
and
stc
arpl
mov
push
mov
pop
push
scas
jg
jl
xor
xor
fucom
movsb
push
fs
add
mov
scas
mov
or
loopne
ss
aas
cli
pusha
iret
fucomi
pusha
repz
sub
push
xchg
std
dec
or
incl
jl
pop
subl
xchg
mov
test
jg
or
ficoml
mov
jle
or
les
push
jo
mov
lock
pop
stc
inc
lret
xlat
dec
daa
add
cmp
enter
adc
mov
sub
lahf
sbb
aaa
xchg
lods
jp
lcall
je
nop
outsl
xor
das
push
adc
pop
aaa
adc
sub
xchg
rorl
and
and
and
push
mov
mov
mov
loopne
mov
cmp
or
shll
pop
pop
hlt
addps
mov
push
inc
or
stos
jb
xchg
and
adc
data16
sbbl
push
outsl
insl
rorb
inc
adc
or
mov
mov
xchg
and
and
es
test
pop
dec
push
or
outsb
repnz
and
cmp
mov
dec
sbb
mov
mov
cltd
ret
lods
xchg
or
push
out
xor
sub
enter
and
outsl
ds
lret
das
jp
fimuls
xchg
loop
mov
les
lcall
lods
adc
mov
push
jbe
mov
gs
jns
scas
cli
pop
jmp
pushl
popa
int3
stos
pushl
test
xchg
clc
mov
mov
mov
aad
les
daa
jbe
rorl
ret
je
into
cs
out
push
adc
insb
lret
and
push
jbe
mov
inc
sahf
dec
mov
cmp
jno
adcl
sbb
push
or
mov
cmp
cltd
jp
lds
sub
xchg
mov
mov
and
and
push
negb
outsl
pop
xor
xorl
test
mov
push
cmp
jb
xlat
cwtl
int3
cmp
fiadds
dec
ds
mov
inc
xor
sbb
out
out
jmp
or
lods
or
sbbl
pop
jbe
add
aam
push
out
pusha
test
mov
pop
lods
and
clc
imul
add
cli
push
fsubp
fwait
cmp
push
shlb
cli
jne
xor
mov
cmpsb
xrelease
cmp
gs
out
orl
loopne
jmp
cmpb
pusha
scas
push
nop
xchg
rcrl
pushf
pop
iret
js
cmp
cmpsl
push
pop
es
jo
leave
in
jb
sub
int3
xor
fiaddl
adc
pop
sbb
enter
push
fsubl
sbbl
and
out
xchg
cmp
xchg
mov
pop
loopne
lahf
or
fstpt
mov
insl
or
addr16
add
adc
and
cmp
lods
pop
sub
cli
xchg
pop
xor
ds
pop
shrb
pop
cmpsb
pop
movsl
and
mov
in
ret
dec
test
mov
lcall
mov
add
aam
push
out
xchg
ret
std
jbe
scas
aad
lret
stos
and
adc
jl
divb
pop
loop
xor
sarb
dec
mov
sub
repnz
and
inc
call
xlat
cmpsb
sub
inc
mov
subl
fldenv
in
cmp
js
test
lcall
ret
jle
mov
mov
push
data16
xchg
les
jmp
cs
fisttps
lods
popf
sbb
lods
aas
lret
ret
fiadds
pop
frstor
jmp
scas
in
inc
mov
out
cmp
xor
lret
les
out
lods
adc
dec
push
push
sub
arpl
jge
in
pop
adc
mov
adcb
fdivrs
aad
mov
shrl
push
cmpsl
cs
in
and
xchg
cmp
mov
andl
cmp
xchg
ret
xchg
inc
stos
iret
bnd
adc
and
imul
mov
inc
les
sbb
into
stc
push
push
sub
mov
shl
and
sub
xor
add
les
push
js
adc
movsl
sbb
mov
js
ret
aad
pop
js
mov
xor
mov
repz
aad
bound
fidivrl
stos
subb
enter
bound
roll
sbbl
cmp
ss
inc
sbb
jge
sbb
jge
and
adc
jae
fbstp
scas
or
xchg
adc
nop
or
cmp
ret
cs
xor
loope
add
mov
mov
imul
mov
sub
jns
add
shll
scas
addl
mov
pop
xor
pusha
pop
enter
pop
mov
mov
jge
insl
mov
aaa
push
push
push
inc
test
jnp
cli
push
ljmp
imul
leave
sbb
xchg
mov
clc
ds
std
andb
sahf
xor
push
push
inc
inc
pusha
test
jnp
fcmovb
movl
out
jg
aaa
dec
out
mov
lcall
add
scas
dec
aad
clc
and
adc
sbb
cld
xor
imul
adc
mov
push
xor
orb
jb
jg
cmp
mov
xchg
movsl
icebp
push
push
push
xchg
or
mov
ljmp
sub
push
mov
stos
pop
push
mov
adc
out
push
xchg
js
sub
icebp
test
mov
mov
in
jb
add
fsub
sub
adc
in
data16
sahf
enter
test
lods
dec
push
cmp
cmp
cmc
mov
outsl
gs
push
lea
lods
testl
jne
xchg
pop
mov
jns
jmp
xchg
out
sti
fxch
mov
mov
dec
sub
sbb
xchg
rclb
out
out
xchg
push
xchg
in
lods
push
rclb
push
in
pop
enter
mov
xchg
mov
shrl
pop
out
sub
fsub
dec
jl
fcomps
mov
push
lcall
es
mov
imul
out
test
add
fidivs
mov
aam
test
cmp
arpl
lea
leave
jne
xor
pusha
rcrl
push
pop
pop
stos
aas
pop
pop
insl
sub
push
cmpsb
pop
call
stos
das
loop
dec
mov
movsb
push
xor
push
sete
stos
xor
sub
daa
sbbb
sub
movsb
xchg
mov
xchg
mov
adc
and
cltd
mov
sub
pop
cmc
mov
mov
mov
push
xchg
ficomps
sbb
pop
xchg
pop
aad
push
mov
and
pop
out
out
cmpsl
adc
ror
cmp
adc
je
or
aas
jnp
mov
lahf
imul
pop
sbb
jle
dec
mov
xor
push
out
cwtl
sub
shrl
lahf
inc
sbb
sbb
movsb
sahf
mov
sbb
xor
fs
mov
sbb
ljmp
clc
jge
jp
dec
cwtl
or
lods
enter
sbb
or
js
rol
aam
sar
lods
clc
jl
add
cmp
daa
mov
in
fsubrs
jp
pushf
dec
pop
gs
and
mov
shl
jecxz
or
rorl
pop
test
jle
jbe
or
mov
pop
mov
out
or
jae
adc
scas
lret
push
sbb
mov
xor
adc
insb
add
outsb
xchg
jae
pop
and
pop
mov
jg
cmp
jbe
jg
stos
shlb
aaa
pusha
dec
pop
mov
lret
add
out
dec
fstps
jno
dec
repz
mov
rep
shrl
mov
push
jle
insl
xchg
add
stos
fs
rorb
pushf
insb
adc
outsl
mov
jge
pop
or
in
push
dec
dec
shll
xchg
repz
repnz
jb
push
cld
push
daa
cmpsl
loopne
ja
repz
fdivrs
lds
mov
xor
and
cmp
cltd
jo
add
inc
in
adc
mov
jl
arpl
clc
add
sti
iret
sub
pop
inc
test
mov
dec
iret
sbb
add
or
sarb
in
jae
cmpsb
mov
ficoms
das
testl
push
add
jno
adc
out
aaa
xlat
inc
iret
cli
imul
data16
ljmp
xchg
sahf
shrb
xchg
dec
jne
jge
dec
lods
inc
sbb
adc
cmpsl
pop
mov
cmp
test
stos
push
cmp
sub
sub
sar
or
xchg
fnstsw
pop
test
in
sarl
test
cmc
mov
mov
in
lods
inc
adc
mov
jbe
cltd
add
and
xchg
shlb
mov
push
sti
lds
sub
push
or
call
mov
push
pop
int3
dec
sub
cmp
movsb
mov
mov
jno
mov
xor
dec
mov
sarl
xchg
lods
mov
xchg
mov
jnp
ret
rorl
dec
aaa
cmp
cld
push
or
jmp
outsb
cmc
xchg
push
fisttpl
sar
sub
push
jg
lret
popf
daa
js
mov
mov
push
jae
lcall
add
jmp
out
ret
inc
or
fucomip
mov
inc
cmpb
aam
lret
mov
mov
ja
imul
xor
stos
xchg
and
push
rcrb
scas
adc
dec
daa
dec
mov
daa
sub
pop
lods
push
out
shll
push
lret
aas
fmuls
xchg
fidivl
cmp
adc
ds
cwtl
notb
mov
sbb
mov
and
cmp
inc
dec
or
mov
ljmp
pop
jecxz
jno
imul
or
inc
jb
push
and
inc
jl
clc
mov
push
fwait
mov
xchg
lahf
add
push
mov
jbe
xlat
ror
or
jle
sbb
cmpsl
in
xchg
cmp
jnp
adc
out
push
inc
push
loop
or
xor
inc
aam
stos
cmpsl
lret
mov
inc
ds
sbbb
cmp
and
repnz
sub
mov
lret
push
in
jbe
or
add
pop
aas
xor
jp
sarb
sahf
sbb
push
ja
pop
out
fadd
pop
xor
dec
xor
jns
arpl
pusha
push
jo
mov
lret
mov
andl
jno
add
mov
xor
inc
inc
aaa
xor
cmp
int3
arpl
dec
xchg
pop
or
or
loop
pop
aas
hlt
lahf
jb
imul
lahf
pop
aam
or
push
mov
add
push
das
repnz
lods
or
lock
mov
push
shlb
andb
mov
xchg
push
lret
cmc
les
popf
addr16
mov
add
xchg
jno
dec
popa
push
push
pop
xlat
mov
js
xchg
mull
repz
jl
xchg
adc
inc
hlt
dec
out
inc
inc
imul
push
xor
sbb
imul
xlat
data16
and
or
push
sbb
pop
dec
ficoml
and
inc
add
in
lret
addr16
scas
and
dec
iret
aam
mov
das
xchg
cli
aas
orb
mov
xor
incb
push
xchg
jbe
lods
jecxz
push
sbbl
int
pop
jne
sub
fisttpll
outsl
lods
pop
and
push
add
pop
data16
mov
jo
loope
inc
je
inc
and
pop
sbb
stos
dec
jg
cmp
inc
scas
and
sbb
out
int3
pusha
test
scas
icebp
icebp
xor
push
mov
mov
das
loope
enter
sbb
sub
fisttpl
popf
gs
dec
or
cmp
xor
xchg
jge
add
mov
movsb
jbe
fst
push
cmp
scas
clc
push
fldl
add
push
mov
fwait
sub
test
movsb
inc
cmp
push
push
lret
xrelease
xchg
and
stc
push
sbbb
scas
pushf
xor
xchg
gs
mov
adc
mov
les
decl
dec
sub
xchg
into
jae
xor
push
sahf
shlb
inc
pushf
add
xchg
testb
ljmp
jle
cltd
mov
imul
mov
mov
sti
mov
dec
js
mov
cwtl
jnp
push
inc
repz
jmp
imul
out
dec
cs
test
mov
sbb
mov
sti
inc
frstor
dec
ret
sti
pop
jge
iret
mov
in
rcl
fs
lahf
es
mov
lret
cmp
imul
xor
xchg
popf
xor
dec
xor
les
cmp
push
cmc
dec
or
xor
aaa
arpl
push
cld
mov
push
mov
lods
jo
mov
push
push
sub
aam
push
mov
mov
fwait
pop
repz
sbb
sarb
jae
and
cltd
fildll
lret
cs
test
das
add
push
pop
in
js
into
inc
loope
cmp
or
mov
ficomps
adc
add
dec
ret
shrl
xchg
negl
push
xor
pop
push
les
push
pop
outsb
adc
test
rcl
push
or
negb
cmp
enter
pop
inc
fstl
movsl
dec
movsb
jmp
roll
mov
je
xchg
pop
jae
arpl
cmc
mov
aaa
cltd
pop
jo
stc
xor
mov
lret
cmp
test
mov
test
jp
mov
int3
scas
mov
mov
jns
lock
jnp
xlat
or
int3
push
andl
mov
popa
mov
mov
or
fdivl
sbb
or
lahf
xchg
mov
push
cs
mov
inc
adc
push
mov
test
bound
dec
test
inc
mov
movsl
bound
add
bound
insl
xor
and
adcb
std
mov
add
mov
mov
cmp
lret
aaa
pop
pop
out
lahf
fnstsw
int3
sub
pop
pand
in
and
int
dec
fmull
xor
lret
fmuls
in
pushf
jmp
test
and
wbinvd
sbb
pop
out
out
lea
jmp
addr16
addr16
xor
mov
or
mov
psraw
xchg
push
aas
cmp
enter
or
jbe
movsb
add
pop
ja
pop
es
xchg
loopne
int3
xor
sbb
mov
push
test
and
xchg
dec
incb
sub
fisttpll
std
out
inc
mov
push
call
pusha
sub
inc
adc
xchg
loope
pop
xor
mov
pop
inc
dec
adc
dec
mov
fsubl
scas
cmp
mov
xchg
mov
pop
xor
dec
out
aaa
dec
or
adc
jns
std
xor
stos
fwait
mov
add
xchg
xchg
add
adc
and
adc
jle
xor
out
rcr
xchg
loop
mov
lret
mov
sbb
fisubrl
fs
clc
inc
jecxz
cmovno
push
mov
aam
mov
mov
cmp
ret
loop
lahf
inc
filds
stos
push
inc
jnp
jnp
pop
and
sub
and
lods
popf
and
lcall
fwait
mov
imul
in
xor
negl
cmp
out
and
mov
lea
mov
push
push
jbe
dec
adc
bound
sub
and
fnstenv
leave
xchg
outsb
out
in
inc
add
dec
jecxz
xor
negl
pop
fmuls
sti
push
ds
sub
xor
xchg
mov
mov
lret
jp
jp
lret
jne
int
mov
into
aas
lods
loop
ljmp
push
int3
adc
dec
xchg
push
loopne
pop
and
and
mov
xor
int3
xchg
daa
enter
push
sub
nop
sbb
ja
add
pop
sub
pop
lcall
sub
mov
scas
sub
push
add
nop
cli
popa
push
jns
pop
jg
lods
lods
scas
sub
push
in
mov
pop
les
cltd
cli
xchg
icebp
std
scas
mov
outsl
stos
or
inc
or
roll
and
mov
lock
mov
mov
jo
outsb
push
loop
add
mov
pop
dec
mov
cli
mov
lcall
add
jl
mov
xchg
addr16
ljmp
jecxz
shlb
dec
push
lea
stc
mov
call
addl
mov
ret
mov
xor
inc
cmp
lcall
cmp
and
aad
jg
mov
lods
jl
out
adc
cli
pop
xchg
aam
sbb
pop
popf
das
cmp
xor
cmp
mov
and
inc
lods
pop
inc
add
inc
cmp
ret
inc
push
mov
mov
mov
movsb
ljmp
inc
aam
adc
notb
arpl
inc
outsb
cmpsl
and
mov
dec
mov
sbb
in
push
sub
mov
fistpl
daa
xchg
lahf
sbb
orl
in
xor
and
pop
std
push
js
adc
cs
outsb
xchg
add
pop
lahf
in
jp
in
andl
or
xchg
cld
xor
ljmp
cli
fsubs
mov
and
sub
lods
cmc
mov
jg
imul
pop
loop
adc
push
in
dec
jb
mov
test
shll
out
cmpsl
insb
ljmp
pop
cmp
or
add
push
mov
push
mov
stos
xchg
mov
dec
xor
mov
shl
fdivr
jae
lar
push
lods
aad
jno
push
mov
jp
flds
mov
cmc
lcall
cltd
nop
sbb
popf
pop
adc
fldl
callw
jae
mov
mov
mov
test
push
in
cmp
sub
mov
orb
dec
sbb
leave
xor
cmp
push
dec
lcall
lds
push
into
adc
pop
ss
or
std
aaa
insl
jle
mov
popf
stos
cs
int
sub
les
and
js
fldenv
arpl
iret
push
mov
lock
in
rclb
cmp
sbb
dec
sahf
cmp
scas
clc
loope
mov
shlb
cs
xlat
pop
dec
mov
leave
or
lcall
mov
adc
int3
clc
sub
xchg
and
adc
stos
xchg
dec
push
dec
xchg
mov
scas
sarb
inc
mov
dec
enter
enter
mov
jns
sbbb
fildl
mov
push
or
aad
fistpll
orl
and
in
cmp
in
lds
iret
dec
dec
sub
xchg
adc
jns
les
jecxz
out
rcrb
mov
int3
push
mov
imul
sub
inc
mov
mov
cmp
ljmp
popa
jmp
dec
test
push
ds
test
fs
inc
out
inc
stos
jne
insb
in
shlb
ds
adc
lcall
call
daa
mov
or
adcl
loop
fsubrp
dec
pusha
and
mov
sub
jb
xchg
mov
xchg
das
inc
loop
pop
mov
jecxz
adc
andb
adc
jns
sahf
leave
fidivrs
xor
leave
push
mov
jle
imul
xor
mov
mov
jbe
mov
xchg
test
sarl
xor
out
jbe
and
je
adc
pop
push
dec
jb
xlat
scas
in
pop
popf
ljmp
xchg
cmc
loop
jmp
adc
cli
and
orps
jmp
stc
xor
mov
aas
out
imul
stc
inc
adc
or
adc
jle
jo
cs
fsubs
inc
jne
shlb
js
xchg
dec
lret
push
lock
cmpsl
cld
es
mov
cmp
aam
aaa
jnp
mov
jl
jae
mov
jo
adc
or
call
in
xchg
scas
push
push
fstpl
js
idivb
orb
mov
push
movsl
xacquire
and
int3
pusha
nop
sbb
les
mov
xlat
add
inc
mov
shr
cmp
cmp
inc
adc
xchg
cmp
push
jge
movsl
or
push
xchg
mov
xor
in
dec
mov
xor
dec
cmp
icebp
xor
les
xor
in
lea
test
adc
ss
jno
sbb
mov
inc
pop
push
sbb
xor
inc
mov
mov
add
dec
cmp
xchg
pop
sbb
in
sbb
sub
pop
mov
xchg
xchg
sbb
mov
ds
sub
into
ljmp
push
sbb
sub
outsl
out
lret
dec
cmp
xor
loope
out
jp
cld
mov
ret
lods
outsl
shll
insl
popf
mov
cwtl
outsl
sahf
test
sub
arpl
xchg
movl
sbb
dec
lahf
jno
push
cwtl
inc
orl
mov
mov
and
cmpb
sbb
enter
pop
add
xchg
mov
es
or
sbb
jno
lods
cmp
dec
lea
enter
arpl
xchg
mov
cmp
xchg
add
lods
add
pop
andb
popa
xchg
mov
in
sti
push
out
test
popa
jbe
add
lcall
dec
sub
insl
inc
movsb
idivl
test
pop
jnp
shll
sbb
inc
xor
sub
cmpsb
fsubs
addl
lcall
pop
fsubl
xorb
sbb
jmp
outsb
es
ret
aas
in
mov
shll
mov
jp
adc
out
sub
frstor
mov
sub
das
aam
inc
add
xor
jg
inc
fcmovbe
adc
movsl
xor
out
ret
sbb
push
lret
int3
mov
and
mov
and
pop
adc
sub
out
aad
push
es
repz
inc
clc
sub
int
mov
stc
mov
aam
add
ljmp
cmp
por
cmp
push
mov
xlat
mov
gs
push
cltd
xor
xchg
push
outsl
inc
push
push
dec
std
xchg
lds
out
cmpsl
mov
jne
test
mov
bound
imul
xchg
out
clc
add
inc
cmpsb
icebp
pop
jbe
and
ljmp
or
mov
push
dec
ss
rcrl
lret
les
scas
mov
loope
test
add
xchg
dec
and
in
in
enter
outsb
push
adc
dec
outsl
jl
or
or
leave
cli
imul
out
cltd
popf
test
mov
mov
scas
fmuls
inc
xchg
jle
inc
inc
stos
addl
xor
mov
cmp
fldcw
lock
aam
pop
jns
daa
sbb
sub
fs
int
repnz
iret
xor
and
lahf
cltd
fldenv
popf
repnz
dec
into
icebp
loopne
movsl
and
dec
out
ret
shlb
jno
xchg
xor
std
add
jg
jns
das
icebp
outsl
packuswb
mov
and
fcomps
mov
outsl
int
mov
jo
mov
push
imul
cmc
adc
in
lds
xor
inc
lahf
repnz
or
clc
cmc
lods
addr16
inc
repz
dec
inc
dec
sbb
mov
sbb
hlt
mov
imulb
std
xor
cmc
mov
movsb
in
imulb
push
xor
mov
imul
jl
or
or
sbb
add
sbb
lds
cmp
divl
cmp
pop
jno
in
in
fcmovbe
inc
nop
pop
push
pushl
sbb
jno
aam
lret
lret
pop
push
lock
loope
pop
add
call
push
cmp
adc
loope
mov
shll
ret
or
je
int3
push
sub
mov
push
pop
push
inc
inc
cmp
stos
in
adc
movsl
xor
sub
aad
insl
pop
push
imul
in
imul
and
sti
inc
sti
icebp
push
loopne
jge
cmp
mov
sbb
lock
hlt
push
adc
pop
fst
icebp
sbb
xor
xor
std
lods
imul
sar
or
cmp
js
pushf
int3
cmpsl
fstp
inc
div
ss
mov
mov
and
adc
hlt
fcomps
mov
push
insl
adc
xor
add
test
sti
pop
mov
jno
js
hlt
dec
or
fsts
dec
push
fidivs
sub
lahf
xchg
loope
call
push
ljmp
shlb
jp
xchg
pop
data16
icebp
fists
movsl
pop
sarl
fbld
clc
xchg
ret
mov
fwait
add
in
mov
cltd
lods
dec
popa
cld
fwait
out
add
stc
cmp
lcall
xor
fneni(8087
add
lods
orb
sub
ja
fldcw
mov
je
int3
cmp
in
xorb
fsubr
push
sub
mov
js
inc
jne
int
or
ret
or
mov
inc
out
imul
ss
and
add
repz
cmpsl
hlt
aas
fidivrs
into
fwait
roll
dec
in
fdivrl
call
mov
adc
imul
rolb
imul
lods
adc
inc
pop
and
shl
arpl
push
dec
pop
xchg
hlt
faddl
pop
lock
sbb
adc
pop
mov
mov
sub
daa
pop
lods
pop
jbe
pop
jae
stos
mov
rorl
cmc
test
mov
jae
jg
adc
sub
mov
dec
lods
ss
imul
lret
and
int3
dec
jmp
push
mov
jb
push
sub
fldt
and
lea
sbb
sub
repnz
das
das
jmp
inc
ret
or
std
lods
jns
adcl
insb
out
mov
mov
mov
shr
cmp
push
notl
mov
lock
shrb
xor
popa
inc
and
pop
adc
out
mov
lahf
inc
push
bound
cmc
hlt
es
xchg
xchg
xlat
call
cmp
lds
xor
aas
inc
sub
mov
je
js
dec
pop
pop
sub
lahf
gs
scas
xlat
ljmp
push
push
pop
sub
inc
jg
lcall
push
jnp
imul
add
and
push
mov
orb
faddl
cmp
dec
iret
pusha
int
xor
push
insb
xchg
je
sbb
dec
mov
imul
mov
pop
mov
sti
xchg
cli
imul
imul
ret
test
stos
out
rcr
xchg
cld
push
lret
lea
sbb
sahf
inc
in
jp
fidivrs
fsubp
out
fnstenv
xchg
lret
push
cli
jl
mov
stos
js
push
gs
sbb
popf
mov
sbb
pop
hlt
jmp
and
mov
fisubl
inc
outsl
inc
sbb
sub
mov
shrl
mov
movsb
xor
sub
loop
xchg
mul
stos
shrl
dec
pop
xor
in
pop
lods
or
mov
cmp
and
jmp
pop
or
in
mov
xchg
jecxz
add
daa
pop
sarl
mov
sbb
jo
das
mov
repnz
adc
inc
pop
lret
mov
outsl
lea
sbb
jbe
subb
push
dec
lds
and
or
subl
rolb
xchg
inc
les
cs
pop
push
add
shlb
in
push
jb
int3
cmpsl
jb
shr
cltd
dec
jnp
out
sub
fbld
jl
hlt
test
push
mov
dec
shll
cmp
jg
clc
ret
stos
int
pusha
call
mov
or
sub
lea
dec
outsb
push
cltd
or
mov
insl
sbb
xchg
outsb
add
inc
jmp
jo
repz
inc
aam
xchg
push
movsb
mov
ljmp
cmp
je
mov
mov
loopne
leave
mov
lock
xor
pusha
sbb
sbb
push
dec
fyl2x
xor
mov
out
jecxz
inc
pop
ja
sbb
es
mov
in
test
insb
adc
add
stc
dec
jmp
add
cmp
lods
xchg
cmpl
mov
adc
fdivrs
mov
or
xchg
inc
adc
or
hlt
add
or
xor
adc
imul
movsl
jl
mov
push
fnstcw
dec
mov
jae
gs
fldl
inc
mov
mull
hlt
lahf
ss
cltd
push
xor
and
inc
jb
inc
cmpsl
pushw
jecxz
xchg
iret
mov
lea
fsts
add
stc
xchg
xchg
repz
mov
mov
adc
loopne
cmp
inc
xchg
bound
loope
stc
jns
inc
lret
pop
out
push
push
out
pushf
call
mov
add
cwtl
pop
test
pop
sub
xchg
scas
scas
mov
cmp
enter
out
cmp
loop
nop
lcall
add
mov
jo
mov
cs
out
add
aad
cli
aam
sti
mov
mov
test
je
push
inc
lods
jbe
and
test
sar
imul
inc
push
js
xchg
mov
popf
pop
push
in
shr
sbb
xchg
js
outsb
aas
cld
push
outsl
inc
and
lret
rcrl
nop
repz
or
aam
jecxz
inc
out
push
out
sbb
test
jecxz
jp
xlat
mov
outsl
fcoms
std
nop
ss
pop
mov
rcr
cmc
xchg
push
mov
sarl
or
out
scas
xor
cmpsl
mov
pusha
xchg
sub
aad
xchg
fidivs
inc
fmul
outsl
mov
jl
xor
mov
mov
lds
loopne
add
cmpsb
ljmp
mov
pop
sbb
or
notl
mov
mov
pop
jns
inc
sbb
shlb
mov
bnd
in
dec
lods
jecxz
and
push
ds
inc
popa
mov
int
out
test
and
test
popf
and
mov
mov
fdiv
jmp
test
adc
xchg
jl
sub
imul
cmpsb
fs
int3
push
adc
leave
scas
jae
inc
in
jg
push
jmp
xor
and
mov
lods
int3
jns
add
mov
lret
inc
ret
imul
dec
mov
push
lock
mov
sbb
adc
mov
pop
mov
inc
shrb
shlw
in
mov
jge
and
sub
dec
hlt
or
shlb
orb
hlt
push
sbb
mov
pop
pop
jo
imulb
mov
rep
mov
cli
sub
pushf
popf
ret
popa
call
xchg
in
jmp
push
mov
and
adc
scas
add
or
bound
test
dec
push
testl
push
popf
bound
lods
sbb
cmc
mov
gs
popf
xor
sarl
xor
jnp
mov
repz
imul
pop
xchg
out
stc
mov
push
out
push
clc
mov
lcall
xchg
sbb
push
jb
pop
loope
cltd
pop
xchg
imul
jno
and
aam
jo
xlat
nop
jo
sub
inc
dec
jecxz
imul
cmpxchg
pop
insl
jp
push
dec
sub
pusha
xchg
rclb
and
outsb
push
imul
xor
pushf
adc
mov
inc
lret
mov
popl
jp
mov
mov
inc
enter
inc
cli
lods
xlat
mov
push
pop
jb
cmpsb
mov
loope
adc
idiv
fdiv
in
sbb
pop
leave
mov
fs
xorb
cli
in
rcrb
sub
inc
jmp
pop
sti
testb
mov
mov
dec
add
jp
inc
mov
adc
xchg
out
mov
lea
insb
imul
lahf
repnz
cmp
es
lock
leave
int3
movsl
js
daa
mov
xchg
lret
jmp
dec
loop
push
add
ja
sub
jmp
add
pop
xor
xchg
pop
int
pop
scas
add
xor
fiaddl
push
add
jg
push
push
cwtl
repz
cli
in
inc
loop
or
xchg
aad
mov
fadd
lods
lea
fwait
and
ret
mov
mov
mov
xlat
repz
mov
and
arpl
addr16
icebp
aaa
ds
xchg
out
mov
pop
inc
out
sbb
sbbl
popa
mov
rcl
add
push
add
leave
dec
add
mov
dec
adc
cwtl
jb
test
mov
adc
jmp
popa
ret
sti
sbb
aas
je
pop
popf
xor
jle
cld
lahf
enter
fcmovnb
mov
push
pop
test
push
jne
mov
sbb
sti
daa
jnp
sub
fistl
xor
pop
imul
lret
lcall
sub
rcll
mov
pop
lods
mov
jns
mov
popf
and
jbe
add
push
sbb
ss
outsb
pop
shrb
mov
mov
xchg
and
xchg
rcll
stos
pushfw
sar
or
inc
and
stos
inc
fnsave
dec
stos
push
mov
clc
popf
xchg
outsl
sbb
lcall
mov
adc
sub
outsb
popf
imul
jp
sbb
push
mov
jp
mov
jge
cltd
insb
fs
adc
mov
int3
out
fldenv
xchg
les
aaa
jle
mov
xor
lea
cmp
sbb
into
ret
jl
dec
mov
je
jg
fsubr
push
daa
mov
leave
push
lcall
pop
mov
fucomi
mov
imul
push
sub
dec
dec
mov
fs
shr
cli
out
daa
mov
popa
arpl
push
fnstenv
push
icebp
mov
xchg
mov
xchg
inc
arpl
fcomps
dec
xchg
outsl
hlt
into
jmp
cld
jmp
add
sbb
andl
jns
or
jmp
out
jb
into
mov
ret
in
clc
pushf
out
filds
leave
outsl
push
push
jne
add
nop
pop
push
dec
pop
out
push
out
ljmp
in
mov
test
xchg
jmp
jae
xor
pop
pushf
jno
mov
or
mov
lods
fwait
xor
sub
and
pop
pushl
mov
jne
sub
je
gs
negb
mov
int
outsl
fistl
and
and
sbb
lcall
popa
movsl
stc
test
lea
or
cwtl
je
ja
mov
fstl
or
pop
or
mov
stc
cltd
mov
mov
mov
ja
add
ds
dec
fnsave
xchg
testb
loopne
es
xchg
jb
int
movsb
stos
test
and
hlt
movsl
sub
pop
aad
push
jbe
and
cmp
popf
stc
cmp
inc
sahf
aam
pushf
in
test
test
mov
je
imul
clc
cmp
mov
shlb
rol
into
or
and
sub
sbb
gs
adc
dec
jecxz
jecxz
fnstsw
inc
cltd
aam
dec
popf
popf
roll
lock
lahf
push
sbb
adc
push
mov
adc
inc
ljmp
xchg
sbb
push
xchg
sub
lret
out
xor
rcl
mov
insb
outsb
push
popa
xchg
scas
mov
inc
sub
cmc
sub
std
movsb
jge
mov
pop
movsl
pop
ss
loope
cmp
sbb
xchg
mov
test
lahf
fdivs
popa
test
stos
cmp
repnz
or
add
and
orl
das
xchg
addr16
out
sbb
test
mov
outsb
lahf
aaa
les
sbb
inc
push
mov
rorl
or
bound
dec
lods
fadds
sbb
and
lock
cs
insl
in
es
pop
push
call
adc
add
cmp
repz
push
gs
addr16
mov
pop
and
dec
jns
es
lcall
add
mov
mov
pop
pop
mov
cmc
mov
call
aam
add
mov
adc
mov
dec
xchg
insb
push
fildll
cli
mov
ss
lods
rorl
aam
add
push
clc
sbb
pop
aas
data16
sub
pop
adc
enter
sar
cmp
rorl
add
inc
jp
or
scas
ss
pop
jbe
loopne
sbb
inc
and
sub
lcall
inc
push
jo
mov
sub
jno
mov
push
mov
mov
mov
arpl
jge
repnz
jge
mov
jmp
adc
xchg
mov
popfw
push
mov
pop
mov
adc
int
xchg
into
into
dec
pop
mov
lea
cmpl
inc
mov
add
orl
les
sbb
loopne
test
hlt
sub
add
dec
xor
hlt
adc
xor
xchg
in
sti
test
or
pushf
push
sub
push
or
push
push
mov
mov
ja
popf
xchg
and
outsl
inc
cmc
cli
jle
daa
cmp
dec
arpl
mov
cmc
add
jmp
adc
mov
test
sub
push
jle
xchg
and
pop
stos
cmp
and
push
sahf
sub
xor
xchg
stos
or
fsts
add
xor
pop
xor
pop
and
cmc
cmp
push
sbb
fwait
out
ret
push
hlt
js
mov
clc
xlat
enter
fbld
das
out
sub
cmovae
clc
addr16
ljmp
and
inc
pop
addr16
fildll
rcr
repz
sbb
cltd
pop
fiadds
nop
inc
sub
outsb
imul
cmc
call
jle
test
xor
sub
mov
mov
js
data16
jb
mov
outsl
lea
mov
jne
std
out
inc
shrb
adc
sub
mov
jge
push
pop
into
adc
dec
rcll
add
push
cmp
shl
jle
out
pop
mov
lock
cld
sbb
in
mov
lds
xor
mov
dec
pop
icebp
imul
sbb
cmp
into
dec
push
sar
xchg
push
mov
xchg
daa
inc
cmp
das
ss
aad
mov
cmp
push
xchg
fbstp
repz
gs
add
mov
test
xor
test
mov
push
sub
mov
loop
cmp
jbe
mov
mov
cld
or
adc
or
xor
enter
jo
insb
mov
mov
fcmovnu
add
incl
cltd
ds
jecxz
xor
mov
cmp
pop
mov
dec
xchg
sub
sub
clc
ret
mov
stos
push
sub
mov
inc
xchg
pcmpgtb
mov
adc
add
mov
jo
or
adc
jns
pop
push
xor
mov
inc
inc
cli
lret
or
leave
adc
push
movsl
cmpsb
outsb
mov
insl
lea
enter
sub
mov
jge
and
repz
mov
sbb
mov
pop
test
out
cs
and
clc
push
imul
cli
lea
xor
dec
cmp
daa
push
dec
mov
pop
icebp
scas
aad
push
daa
xlat
roll
js
fmuls
test
iret
repnz
ss
cltd
sti
int3
jne
add
out
out
push
mov
mov
or
cli
inc
and
fwait
adc
stc
and
data16
aam
movsl
call
mov
pop
rorl
jge
or
insl
test
sahf
fs
cmp
jno
dec
mulb
sbb
sahf
jns
es
dec
popa
imul
mov
jne
cwtl
aam
jp
mov
flds
sub
adc
mov
pushf
push
rcl
sbb
mov
js
les
dec
fisttps
adc
jbe
call
sarl
sub
sti
cmp
pop
add
or
jecxz
pop
push
mov
cwtl
mov
dec
fcompl
fmul
loop
push
jge
ja
mov
cmp
in
cmp
xor
rcll
enter
xor
add
pusha
in
add
dec
mov
popa
int3
fsubrl
or
push
dec
mov
mov
scas
test
inc
out
int3
int3
push
nop
imul
pusha
shll
mov
aaa
add
and
js
leave
jnp
jns
add
cld
inc
int
dec
sub
xchg
adc
sub
dec
arpl
push
mov
aam
out
adc
xor
jp
mov
testl
pop
mov
loopne
cmp
lods
call
cmp
fs
repz
xor
mov
daa
call
jno
adc
sub
lods
xor
lods
ja
xchg
outsb
jno
or
adc
pop
cwtl
fdivl
insb
dec
cmp
popf
jmp
lahf
es
add
aad
mov
or
lods
movsl
data16
iret
pop
out
fs
out
lcall
xor
out
aaa
or
dec
xlat
in
movsb
mov
and
jp
aam
pusha
inc
mov
jg
cmp
data16
push
mov
stos
xchg
sbb
lea
add
push
pop
or
imulb
iret
jl
pushf
and
aaa
mov
mov
bswap
xor
xchg
je
adc
cmp
xchg
leave
je
or
sahf
test
outsb
mov
mov
aam
mov
cmpsb
mov
call
xor
jp
push
loop
std
xchg
out
cmp
insb
vmovsd
cs
dec
dec
xchg
rcrl
dec
mov
jne
jp
loope
cmp
lods
into
jl
push
insl
cmp
mov
pop
push
imul
jmp
fwait
push
jb
mov
inc
adc
insb
push
sbb
addr16
push
lds
or
fldl
push
out
nop
jp
jno
add
sub
clc
xlat
and
fwait
sbb
popf
or
stos
and
test
add
movb
jno
pop
push
rorl
icebp
xor
leave
xor
rorl
fbstp
cs
sub
add
adc
loop
xor
dec
sbb
add
push
dec
ror
repnz
push
ss
inc
lret
xchg
xor
cwtl
ja
int
xor
push
mov
aad
xchg
lods
dec
inc
ljmpw
sub
adc
sahf
ss
sub
faddl
or
out
incl
mov
mov
xchg
in
mov
aam
jmp
data16
mov
jl
flds
push
cmp
enter
jge
sbb
cmp
fimuls
out
shl
fiaddl
scas
ja
aaa
lock
xchg
jno
lea
jnp
sub
sub
jp
jo
js
xchg
lcall
push
fnstcw
pusha
in
or
aas
and
pop
add
lcall
rcll
inc
jg
imul
insb
test
jp
mov
daa
or
push
add
aam
scas
add
repnz
sti
pop
loope
rcrl
cmpsl
mov
outsl
ja
pop
xlat
adc
out
xor
cmc
add
mov
xchg
jecxz
push
add
sbb
mov
jmp
xchg
loop
fs
adc
and
xor
push
jo
ds
inc
and
sub
xchg
mov
cmp
aam
cli
mov
es
push
adc
cmpb
sub
cmpsl
xor
lea
push
insl
mov
mov
adc
dec
inc
fnstcw
icebp
hlt
lahf
lods
addl
clc
jge
add
mov
mov
xor
rcrl
es
sbbl
jmp
mov
xor
mov
mov
cltd
xor
daa
sub
and
cld
xchg
pop
jmp
and
stc
mov
out
xchg
dec
stos
jle
sbb
pop
pop
adc
lock
mov
inc
int3
push
js
xchg
sahf
loopne
jmp
aam
xchg
and
pop
cmp
xor
sbb
pop
sub
loop
pop
test
add
mov
mov
push
push
xor
loop
stos
icebp
sub
subl
and
mov
mov
clc
dec
dec
daa
add
push
bound
cmpl
dec
mov
dec
fs
lret
psubusw
insl
pop
das
scas
in
push
push
mov
shr
dec
rcrb
bound
movsb
ss
push
out
inc
adc
inc
jno
in
dec
adc
mov
sub
dec
call
push
faddl
jge
mov
gs
dec
shlb
imul
sti
mov
std
mov
aam
aam
pusha
jmp
insl
notl
and
jl
xor
aaa
lea
rolb
or
in
shl
lock
iret
xchg
mov
frstor
pop
jne
jmp
lahf
mov
es
jae
sub
dec
outsl
add
adc
jo
dec
scas
ljmp
push
pop
lret
push
adc
mov
sbb
arpl
xor
lods
cli
fwait
jp
inc
ds
jp
fwait
push
cmpxchg
in
test
and
je
push
dec
dec
sub
nop
into
movsl
fimuls
popf
ljmp
and
in
sahf
ja
std
add
pop
addr16
das
xchg
ljmp
xlat
inc
xchg
leave
in
enter
test
mov
testl
xchg
xor
cwtl
test
in
loopne
ficomps
mov
cmpsb
loopne
jge
ljmp
xchg
mov
jl
sub
mov
jg
loope
jecxz
pop
out
not
adcl
lea
sarb
sub
mov
mov
in
fs
mov
lods
rorl
xchg
bound
inc
mov
pop
in
pop
jl
mov
sub
inc
sbb
lods
mov
sbb
ljmp
enter
inc
cmc
mov
popf
xor
cli
int
js
pusha
add
cli
mov
pop
jnp
push
xchg
push
in
jno
shlb
push
jle
in
sarl
sahf
test
in
dec
lds
test
jecxz
xchg
xchg
in
fcompl
mov
or
and
and
sbb
cmp
fnstcw
cs
mov
cmc
aaa
mov
add
sbb
mov
jp
lcall
out
ffreep
xchg
arpl
sub
lods
xchg
mov
mov
dec
dec
enter
inc
mov
or
sbbb
in
repz
jp
ret
pop
test
call
pop
push
pop
popf
sub
cmp
out
pop
andb
repnz
pop
ret
fisttpll
lock
add
xchg
pushf
dec
inc
sub
xor
hlt
jle
pop
adc
jbe
jb
insb
cwtl
sub
xchg
cmp
xchg
loope
sti
xchg
jae
movsl
xor
add
or
data16
dec
or
mov
sub
dec
push
mov
push
inc
xchg
and
movsb
mov
fwait
lock
add
sub
lds
movsb
popf
jmp
in
add
add
repz
jns
sahf
cli
sarb
fbstp
xorl
push
imul
dec
jb
pop
or
out
orb
push
ret
lret
cli
xchg
mov
sti
cli
mov
dec
xor
mov
sbb
inc
mov
hlt
push
out
add
xchg
out
dec
cmp
mov
stos
test
xchg
jb
mov
or
ljmp
in
sti
dec
lcall
mov
je
sarl
and
xchg
dec
sahf
mov
mov
orb
jg
enter
dec
dec
mov
jno
enter
cmpsb
or
mov
aas
jbe
stos
mov
subl
pusha
cmpsb
push
jbe
mov
cmp
add
lret
sub
pop
inc
fstl
xchg
add
and
add
mov
sub
sub
gs
push
cmp
dec
stos
inc
mov
cwtl
gs
ret
add
push
lea
aam
cmp
insb
inc
jne
inc
jae
fcmovb
inc
cltd
xor
lret
xchg
jge
pushw
lret
push
pop
loop
jb
movsb
mov
fwait
pop
xor
addr16
loopne
shrl
insl
ret
movsb
rcll
rcll
pop
das
scas
jecxz
es
cmp
sbb
cli
mov
push
push
outsb
les
or
popf
in
das
xchg
std
or
cmp
pop
aas
jno
inc
fsubrl
sarl
xchg
insl
mov
pushf
and
incl
rcrb
mov
or
add
xchg
addr16
push
mov
mov
sub
jne
scas
gs
movsb
aaa
movsl
and
mov
mov
sar
adc
inc
jecxz
xor
es
movl
arpl
ds
xchg
lods
cmc
repz
cli
mov
adc
je
int
idivl
sbb
jbe
sub
dec
addr16
push
mov
inc
cltd
fwait
ds
cmp
sbb
mov
xchg
xchg
sbb
mov
outsl
mov
clc
out
add
imul
dec
cltd
pop
iret
gs
aam
cltd
jnp
jecxz
adcb
jge
int3
sub
dec
dec
jno
jo
in
mov
dec
push
imul
loop
cwtl
lcall
gs
fcmovnbe
hlt
test
movl
shlb
pushf
pop
or
stc
dec
mov
adc
fisubl
mov
lods
or
pushf
mov
sahf
dec
bound
pop
cmp
and
hlt
sbb
dec
stos
lock
shr
xor
adc
movsl
out
or
jp
loop
lret
out
or
push
gs
cltd
mov
push
mov
mov
xor
add
adc
add
push
leave
cli
push
jno
mov
pushl
mov
pop
pop
fsubrp
inc
pop
pop
mov
push
sub
cmpl
in
loopne
aas
inc
push
cli
inc
adc
xor
arpl
push
xchg
mov
cwtl
negl
fs
shrl
mov
and
fldl
or
addr16
mov
mov
push
xchg
pop
mov
jno
lahf
ss
aaa
nop
sahf
iret
je
outsl
mov
clc
inc
xchg
push
jbe
icebp
les
pop
and
fmul
cmc
pop
je
or
rolb
scas
mov
dec
xor
cmpb
push
xchg
ror
loope
xlat
mov
aaa
test
call
xchg
or
pop
aas
cmc
into
pop
lret
sbb
pushf
or
push
ja
rcrb
mov
xchg
sub
or
movsl
std
je
sub
jp
rorl
repz
les
daa
je
imul
adc
mov
push
enterw
movsl
pop
xchg
fs
push
loop
push
sbb
xlat
mov
int3
jne
jp
push
enter
stos
stc
imul
fldcw
cmp
pop
jl
pop
daa
insb
fucomip
mov
in
in
out
mov
mov
fwait
sub
in
bound
les
sbb
or
lods
sub
xchg
lods
pop
mov
sbbb
pushf
mov
les
or
push
les
sbb
mov
xchg
imul
mov
lds
out
jbe
mov
loopne
lods
testb
aam
hlt
cmp
daa
and
aam
xor
lods
mov
mov
test
outsb
cs
xlat
sbb
inc
push
es
idivb
idivl
cld
das
push
sub
stc
pop
push
lretw
sub
pop
xchg
rorb
into
dec
ljmp
xchg
dec
insl
je
jmp
xchg
sbb
ja
repz
add
movsb
mov
lods
push
dec
push
sbb
shll
mov
fcmovne
lret
bound
out
repnz
call
adc
mov
imul
xor
add
jo
out
jae
push
or
push
mov
mov
mov
or
aam
add
scas
add
fstpl
mov
pusha
push
sbb
mov
inc
sbb
push
add
jno
cs
mov
mov
pop
mov
inc
test
cmp
jno
mov
sbb
jg
pop
bound
outsl
xchg
ret
push
mov
mov
xor
lahf
out
out
loopne
cmp
cmp
and
aad
jmp
jecxz
scas
scas
push
fistpl
mov
sbb
int
and
scas
cmpsb
out
pop
inc
pop
mov
mov
das
js
lock
lock
xchg
mov
mov
dec
arpl
aaa
je
adc
lret
imul
pop
push
dec
xchg
sbb
lods
pop
fisttpl
adc
setge
repz
insb
ret
dec
scas
mov
cltd
mov
movsb
outsl
testb
dec
filds
mov
and
sbb
cmc
jp
jnp
jmp
xchg
cld
sarl
jae
test
pop
imul
fisubs
inc
mov
fiaddl
aam
push
lcall
mov
push
cmpsb
iret
dec
lods
fstpl
sti
xor
fbld
pop
addb
cld
int
aam
xchg
mov
test
lock
sub
and
scas
mov
add
ss
mov
mov
push
jle
pop
ss
pop
mov
imul
jno
and
mov
fisubrs
ret
push
jl
fldz
int3
or
call
das
and
stos
rclb
mov
jp
jne
inc
xor
sub
es
inc
scas
push
push
adc
adc
lods
push
xlat
ds
mov
ljmp
push
sub
test
xchg
icebp
adc
jp
add
inc
mov
jno
popf
xchg
jecxz
pop
inc
and
lea
test
or
mov
inc
cltd
sbb
aam
push
int3
xchg
jns
lods
test
xlat
in
push
enter
adc
orb
loopne
adc
mov
cmp
pop
xor
lock
lods
movsl
imul
jmp
mov
gs
sti
sbb
adc
mov
sbb
loope
sbb
pop
sbb
int
xor
jge
inc
or
popf
inc
scas
out
adc
out
ljmp
jecxz
pop
ljmp
mov
dec
loop
push
lcall
xor
add
sub
ds
pop
andb
dec
pop
cmp
cwtl
inc
lods
inc
xchg
imull
adc
leave
adc
mov
sub
insb
sub
jl
lret
pop
in
ss
data16
push
aaa
scas
stc
clc
pop
push
xor
mov
push
cld
popa
xor
pusha
push
lock
scas
jmp
jno
sbb
add
out
lahf
inc
insb
mov
js
outsl
xor
xchg
or
dec
setbe
xor
xchg
daa
pop
loop
xchg
lds
mov
pop
cmp
or
iret
inc
mov
cmp
jo
or
xchg
inc
iret
cld
int3
ret
ss
int3
mov
mov
inc
mov
enter
addr16
call
jae
lcall
mov
jnp
fwait
in
inc
mov
iret
mov
repz
mov
in
xchg
push
xchg
out
or
addr16
call
mov
inc
dec
cmp
ret
cltd
inc
or
or
pop
sbb
mov
sbb
pop
jle
push
push
sbb
sbb
pop
test
jne
cltd
pop
stos
lret
cmpb
notb
or
inc
cmc
test
push
pop
in
xchg
sar
pop
sub
out
dec
scas
dec
push
js
push
lret
stc
push
inc
inc
js
xor
aaa
and
in
out
jmp
cmp
dec
and
mov
pushf
or
mov
cltd
loope
jns
je
xlat
ljmp
lea
aad
scas
pushf
movb
adc
xor
dec
jb
lret
sahf
mov
mov
jmp
rolb
adc
ja
repz
dec
pop
push
cmp
jns
cmp
dec
test
jecxz
xchg
push
aaa
sub
clc
sbb
loop
inc
xor
fisubrl
xlat
xchg
pop
and
xchg
xchg
pop
rorl
or
add
outsl
daa
mov
loope
push
cmp
adc
push
cld
sbb
lcall
push
xor
xor
lock
aad
push
aas
arpl
test
addb
packssdw
xchg
pop
mov
test
js
imul
push
subb
insb
push
das
push
inc
pop
mov
xor
cmp
insl
and
push
mov
cmp
je
lret
mov
mov
stos
sti
cmp
mov
std
cwtl
dec
and
mov
lds
int3
sbb
push
scas
jae
push
lret
pop
pushf
andb
andl
xchg
test
cmpb
sahf
xchg
clc
scas
les
nop
daa
int
in
push
movzbl
pop
mov
ret
inc
jg
nop
jbe
inc
icebp
and
pop
cmp
dec
loope
fisttps
or
mov
sbb
icebp
push
jne
cmp
and
xor
jo
ret
or
iret
fimuls
jbe
dec
js
mov
cmc
sub
xor
inc
fistpll
xlat
adc
and
lret
outsl
mov
mov
int3
dec
xchg
pop
lds
imul
gs
mov
nop
bound
jnp
repz
pop
mov
in
sbb
fstps
rcl
cwtl
int
aaa
sbb
lcall
xor
insb
and
shll
popa
xchg
push
xlat
pop
loope
or
jp
movl
or
outsb
decl
and
fcompl
push
xlat
hlt
pop
jecxz
pop
lahf
push
mov
pop
xchg
and
pop
movsb
jge
mov
dec
subl
dec
mov
addb
cmp
add
add
jb
cld
push
adc
mov
movsl
stos
cmpsl
dec
pop
mov
ljmp
repz
loope
mov
cmp
loopne
xchg
ss
xchg
fldcw
ret
inc
sbb
cmp
jnp
dec
dec
stos
push
lds
clc
addr16
or
out
jne
loopne
or
mov
out
clc
cmp
mov
cli
xchg
fsubp
fs
ficomps
xor
pop
push
lea
xchg
pop
std
jnp
and
ret
pop
lods
xor
fwait
mov
mov
shrl
js
out
aam
push
mov
sar
in
dec
in
push
sbb
add
repnz
xor
jae
push
addr16
lods
pop
js
gs
sarl
test
pop
or
cmp
shll
sub
pop
cwtl
jmp
fs
and
cmpsb
adc
mov
or
ds
push
push
testl
mov
mull
or
das
test
rcrl
or
xorb
dec
into
push
ljmp
add
sbb
inc
sub
inc
push
push
jns
cltd
int
ret
push
fisttps
mov
jmp
mov
or
add
push
and
sub
add
ss
daa
xchg
mov
pop
xor
scas
jg
cmpsb
sub
push
sbb
pop
clc
inc
adc
or
adc
push
imul
and
adc
xchg
icebp
ss
dec
xor
call
jle
xor
hlt
pushl
ds
mov
iret
sub
mov
fisubl
ret
negb
fsubp
sub
xchg
adc
fildl
push
inc
jns
rclb
mov
xor
push
loopne
imul
jne
pop
mov
mov
sbb
mov
dec
fildl
js
adc
int3
mov
and
or
loop
pop
inc
add
push
mov
sub
cmc
lods
test
cld
std
sbb
int
in
cmp
rcll
lahf
loop
cmp
negl
mov
out
push
sbbb
cltd
push
pop
repz
popf
std
pop
cmpsb
adc
loope
outsl
sti
or
test
add
cmc
sarl
sahf
mov
js
loope
addr16
jp
add
ret
negl
mov
dec
inc
jbe
push
repnz
push
push
push
mov
mov
sahf
test
xor
popf
pop
mov
sub
xor
cmpsb
jp
xchg
out
inc
cltd
add
in
and
std
imull
lock
adc
dec
pop
mov
jg
jmp
inc
lret
mov
inc
pop
cmp
mov
dec
pop
pusha
test
mov
jne
fildl
adc
jmp
das
call
and
mov
stc
repnz
nop
das
lds
lcall
inc
push
push
cmpsb
or
in
outsl
jg
push
in
push
movsb
push
pop
mov
push
out
mov
jl
push
popa
pop
out
lcall
push
mov
push
push
shll
cmp
sbb
fcompl
dec
js
in
inc
and
xor
test
or
lds
rcl
and
cs
cmp
sub
dec
test
ss
mov
xor
or
push
cmp
push
out
daa
iret
mov
loopne
mov
lods
jmp
fwait
jmp
cwtl
iret
xchg
popa
inc
rclb
mov
and
inc
into
sar
mov
jge
jge
je
mov
andb
or
js
sub
adc
clc
in
add
xor
out
sbb
stc
test
inc
jo
imul
in
mov
xchg
xor
and
shrb
packsswb
stos
inc
stos
rcr
jo
mov
pop
out
cmpsl
enter
pushf
push
xor
addr16
mov
adcb
je
mov
push
pushf
jae
lret
jecxz
xor
cmpsl
jle
adc
push
xchg
cmp
out
sbb
js
test
movsb
dec
xchg
mov
mov
sbb
xchg
hlt
or
and
out
and
pop
add
out
lret
imul
cld
sub
cs
sub
adc
divb
xor
mov
or
outsb
sbb
fldl
jbe
jae
loope
mov
pushf
jne
in
nop
pop
xor
mov
ret
xor
and
ss
pop
insb
test
insl
inc
lods
sarl
dec
aas
inc
dec
mov
xchg
lods
mov
mov
pushf
jge
xchg
inc
jge
pop
add
lock
pop
adc
mov
cli
sti
dec
jmp
mov
xor
aas
jge
shll
in
sti
lods
inc
fisttps
cli
or
leave
sti
xlat
cmp
nop
mov
xchg
loope
popa
pop
xor
jne
out
movsl
push
xchg
pop
mov
mov
popl
dec
xor
or
icebp
nop
sahf
mov
cmp
mov
cmpsb
fnstcw
add
or
int
or
pop
mov
lods
jae
lcall
push
cmp
fldt
or
jb
fistl
ds
scas
mov
xchg
cld
push
pop
sbb
mov
or
xor
es
fdivrl
dec
outsl
inc
push
jne
adc
mov
es
arpl
or
mov
mov
and
lea
mov
and
fldenv
ret
push
dec
inc
cmp
jle
dec
test
leave
addr16
andl
xorl
jmp
lahf
in
sbb
jne
push
mov
fld
daa
cltd
and
or
pop
loop
insb
stos
mov
jecxz
add
rcr
mov
push
xchg
fcomps
into
cmp
enter
rorb
push
lods
adc
xchg
and
ficoml
xlat
fidivs
imull
sbb
pop
lods
cmpb
xchg
jmp
cmp
inc
movsl
outsl
out
mov
arpl
imul
pop
jmp
xchg
insb
rcrl
push
and
xor
nop
pop
or
and
fst
in
cwtl
insb
jae
ss
aaa
inc
xor
aam
inc
sahf
fistpll
xor
pop
mov
ljmp
std
int
daa
jle
xchg
cmp
add
jnp
adc
cmp
out
mov
jl
sub
mov
push
push
mov
jp
adc
into
dec
mul
sbb
pop
cmp
add
test
inc
add
mov
dec
pop
popa
push
negl
push
shlb
mov
mov
or
sahf
mov
cs
inc
xchg
xor
add
jp
xchg
lcall
mov
jno
fwait
adc
cli
test
xchg
xchg
dec
lods
add
xchg
ficoms
stc
xor
mov
test
xchg
iret
sub
inc
ja
sub
adcb
jge
hlt
and
stos
fwait
jnp
adc
and
mov
into
cmpsb
shl
xor
sbb
mov
hlt
add
outsb
sahf
into
int
mov
in
mov
mov
add
outsb
inc
imul
mov
cli
cwtl
movsb
divl
push
dec
ds
maxps
push
pop
call
sbb
out
jae
negb
mov
icebp
aaa
out
popa
adc
notb
fptan
add
enter
imul
dec
inc
jl
imul
pop
mov
sbbb
cwtl
jl
mov
mov
or
cld
mov
inc
loope
sbb
jns
pusha
jecxz
std
idivl
mov
rcrl
test
fs
adc
xor
mov
push
mov
bnd
inc
frstor
jmp
aad
mov
mov
fsubrs
iret
stos
xor
pusha
jge
inc
xor
scas
shlb
inc
ret
dec
xor
aaa
fsubr
dec
movsl
hlt
fnstsw
addr16
cmp
and
pushf
inc
jl
cs
sti
loopne
adc
pop
mov
out
ror
adc
hlt
jb
nop
fstpt
movsb
fsubs
lds
and
imul
lods
push
in
cmp
xchg
inc
adc
stos
repnz
pushf
adc
popf
pushf
mov
mov
loop
mov
ss
in
mov
xor
cmpsl
jge
nop
sub
mov
fisubs
inc
cmp
rorl
leave
mov
in
gs
scas
cs
cwtl
std
mov
adc
inc
adc
mov
mov
mov
scas
mov
xchg
jecxz
push
stos
jg
xchg
insb
jle
aas
fstpl
jbe
aaa
les
int
push
push
out
outsb
or
jmp
movsl
ret
inc
repnz
mov
int
lcall
mov
mov
dec
fdivrp
lods
imull
mov
xchg
ss
or
or
xor
inc
pop
cmp
in
movsl
les
rorl
fwait
cld
arpl
mov
decl
jnp
insl
das
out
pop
cld
lods
dec
scas
pop
popa
pop
cmp
jb
outsl
hlt
sbb
loope
sbb
xor
push
sarb
dec
mov
pop
add
nop
xchg
adc
sbb
xchg
jb
ja
jge
pop
pop
out
xor
pop
enter
loopne
jnp
jbe
lcall
sti
lret
cld
outsl
jle
fbstp
mov
mov
aad
mov
shr
pushf
jo
push
shr
orl
lahf
cmc
jnp
lods
in
fsubs
fsubrs
or
push
lahf
lods
add
sub
insb
or
mov
mov
mov
shrb
aaa
dec
mov
mov
out
inc
add
mov
in
jbe
or
mov
mov
out
call
out
imul
sbb
push
pop
cmpsb
imul
pop
or
push
ret
ljmp
xchg
movsl
xor
aaa
push
push
cmpsl
cmp
aam
cwtl
adc
cs
sbb
mov
dec
in
pop
adc
pop
es
stos
mov
adc
stos
dec
sub
cmp
rolb
push
sbbl
xlat
xchg
gs
and
mov
cs
mov
add
les
sbb
fcoml
call
xchg
cmp
and
xchg
adc
adc
scas
mov
in
daa
jb
call
pop
add
push
jg
leave
inc
insl
pop
cmp
pop
out
pop
fdivrs
inc
push
inc
imul
add
ret
mov
lcall
add
mov
popf
icebp
movsl
shrb
jle
enter
sbb
jge
mov
jle
jmp
mov
ljmp
cmp
out
xchg
test
sti
int3
or
mov
dec
mov
clc
push
mov
dec
adc
fchs
pop
sahf
mov
movsb
pop
push
push
jl
lds
and
dec
insb
sarl
loopne
adc
mov
inc
pusha
in
shrb
xlat
cmp
dec
stos
mov
mov
or
cmc
jns
jno
push
and
or
inc
dec
dec
fstpl
lcall
sbb
fs
les
jl
jg
jnp
les
push
lret
and
adc
fcmovu
adc
mov
lret
fisubs
xchg
pop
fisubrl
mov
lahf
jle
repnz
aas
out
loop
repz
sub
inc
or
mov
adc
xchg
jne
addr16
inc
into
sub
mov
mov
mov
or
cli
lahf
xor
dec
jnp
add
outsb
divl
stos
cmp
sbb
je
push
mov
out
rol
xor
out
shll
pop
cmp
mov
cmp
fldcw
and
sbbb
xchg
shl
ret
sbb
mov
add
mulb
data16
xchg
ja
sub
mov
stos
ficomps
lds
mov
pop
adc
sub
imulb
rorb
push
adc
gs
scas
aaa
and
dec
jecxz
push
cmp
pop
stos
out
lods
in
pop
in
xchg
int
xor
jecxz
pop
cmp
push
pop
ret
or
mov
test
in
in
outsb
sbb
push
and
push
jo
shr
pop
jno
fnsave
pop
movd
popa
sub
lods
pop
outsb
cmp
rcr
js
push
mov
mov
loopne
ja
lcall
gs
iret
mov
jne
jae
out
sub
jg
cmpl
and
fstps
mov
icebp
pop
gs
jp
ret
jno
movsl
aam
lahf
fildl
loope
dec
loope
mov
cmp
js
xchg
pop
mov
or
pop
pop
in
addr16
inc
inc
xchg
out
daa
addl
fisubs
dec
mov
or
testl
aad
es
sbbb
lock
dec
xchg
push
inc
fcmove
call
xor
jmp
xor
dec
jle
dec
and
jge
hlt
and
xchg
loopne
sbb
cmpsb
fbld
lret
sub
sbb
int3
leave
lods
lret
nop
mull
lcall
or
sub
ljmp
sub
mov
xchg
into
fcmovne
mov
mov
mov
mov
xchg
into
in
jbe
out
xor
stos
out
addl
and
push
xchg
stos
push
pop
js
sub
lea
cltd
dec
add
adc
xchg
int
jp
cmpsb
xchg
mov
xlat
mov
sbb
xor
outsb
int
ljmp
shrl
mov
mov
push
cwtl
pop
into
insl
imul
push
or
stos
mov
sub
mov
in
mov
fldcw
shufps
movsb
adc
jg
cmp
or
sub
or
jmp
rcrb
shlb
imul
imul
push
push
pop
add
adc
mov
ficoml
cmpsl
push
jo
sbb
leave
rorb
and
outsl
mov
dec
dec
pop
aad
sti
sbbb
push
add
scas
cli
insb
mov
ljmp
mov
or
jmp
mov
sub
adc
xor
xchg
or
sub
mov
cmp
cmpsb
adc
lret
rcl
aad
dec
movsl
sub
push
mov
inc
rcll
add
cmpsb
adc
xchg
dec
dec
fldt
stos
or
loope
pop
ret
inc
mov
mov
outsl
insl
pop
mov
and
jl
mov
dec
pop
lret
int
ja
loopne
xor
mov
loop
xor
push
inc
jle
mov
mov
adc
test
aad
hlt
inc
fcmovnbe
pusha
ds
popf
xchg
mov
xor
inc
xor
rol
lea
call
cmpsb
fbstp
outsl
subb
stc
push
mov
jns
add
mov
xor
das
jb
mov
sbb
je
bound
jbe
nop
shr
sbb
insb
push
rcr
pop
frstor
push
cmp
fldl
aaa
mov
sbb
pop
es
xor
mov
and
sub
and
test
out
lret
mov
mov
jnp
jmp
or
addr16
sub
jge
sbb
push
xor
mov
in
pop
call
popa
add
popf
mov
or
stc
xchg
jno
and
and
insb
adc
mov
mov
cmp
jnp
into
pop
xchg
int3
pushf
insl
or
adc
fildll
mov
dec
jo
mov
cmpb
mov
inc
mov
dec
addl
cmp
cmc
push
mov
dec
inc
mov
push
repz
pushf
or
repnz
cmpsb
xor
movl
sub
in
call
jns
push
sahf
xchg
lods
inc
nop
cs
inc
iret
jne
xchg
arpl
sarb
mov
imul
cmp
mov
orb
adc
not
insb
push
mov
cltd
xchg
aaa
dec
mov
inc
cmp
loop
mov
cmp
les
cmp
adc
push
aas
mov
adc
and
xor
repnz
pushf
push
cmp
aad
mov
xlat
cmp
cmp
adc
out
icebp
pop
push
lret
mov
push
jo
jns
aaa
sbb
pushf
xor
cwtl
stos
sbb
xchg
adcb
stos
xchg
jb
push
shlb
push
cli
fldt
adc
cmp
lret
movsb
out
pop
roll
jle
sub
enter
cmp
fwait
push
inc
into
in
mov
and
cmp
sub
stos
inc
xchg
dec
dec
lods
fistpll
test
jno
out
mulb
mov
xor
xchg
pop
sub
filds
xlat
xchg
out
shlb
cmp
rcrl
fcmove
sahf
inc
sbb
rcr
sbb
leave
jo
imul
jecxz
mov
das
lds
pop
je
jno
fists
das
rorb
imul
inc
adcb
testb
sbb
imul
push
dec
in
insl
xchg
pop
xlat
cltd
add
inc
xchg
pop
pop
fsubr
sub
cmp
setp
outsb
insb
outsb
fisttpll
cmp
pop
sbb
mov
cmpsb
out
adc
cltd
aas
xor
out
stos
dec
dec
adc
mov
clc
inc
add
fnstcw
jo
imul
push
fwait
movsb
cmp
ja
test
popf
sub
fwait
mov
and
stos
mov
dec
fidivrl
jo
fsts
mov
inc
imul
sbb
jbe
repz
xor
out
xchg
mov
andl
cld
movsb
cmpsb
nop
imul
mov
or
pusha
popa
lret
sbb
rcrl
rorb
imulb
test
inc
aad
faddl
cmp
repz
sub
mov
adc
stc
jp
and
xor
dec
cmp
mov
and
add
and
xchg
ja
lds
dec
sbb
out
pop
push
add
xlat
or
fldcw
cltd
nop
inc
mov
loopne
out
lcall
jge
nop
cmc
subb
mov
jl
cmp
leave
sub
pop
out
jge
jmp
fdecstp
shrb
nop
jb
or
shrl
lahf
add
push
sub
das
in
dec
lea
pushf
std
ret
iret
push
mov
dec
dec
and
aad
pop
orps
stc
rcrl
imul
jnp
movb
push
lods
and
sbb
mov
mov
gs
jbe
and
inc
aaa
mov
insl
mov
jecxz
push
mov
inc
mov
jp
jle
rorl
test
bound
or
call
outsl
jo
js
fxch
and
xor
clc
stc
ss
inc
and
push
push
outsb
out
pop
outsl
mov
gs
movsb
lret
cmp
cltd
mov
fwait
push
test
fwait
je
mov
sbb
xchg
xchg
adc
outsb
jno
sub
mov
xor
xchg
das
into
or
cmp
push
arpl
cmp
cmpsl
add
adc
push
pop
fstpt
in
shrb
shrl
lahf
push
inc
mov
test
mov
dec
pop
es
mov
ja
gs
mov
sbb
ss
shrl
xchg
xchg
pop
loop
jne
adc
adc
outsb
add
sub
je
adc
addr16
mov
lods
ja
mov
pop
mov
lahf
pop
jge
inc
test
dec
test
nop
shll
and
cs
js
sbb
cmp
aas
cmpsl
jmp
mov
les
and
fs
lcall
xlat
and
int
cmp
push
enter
and
call
stc
cmpsl
ljmp
cmc
stc
pop
lock
test
mov
loope
mov
fwait
sbb
push
mov
stos
cmp
rcrl
fildl
add
enter
dec
testb
stos
pop
pop
je
pop
dec
xchg
inc
jl
fsubr
pusha
idiv
and
fldl
cmp
and
repnz
push
ficoml
jmp
outsl
dec
je
or
dec
cwtl
sbb
lock
jle
das
xchg
mov
pop
testl
lea
out
aaa
jne
pop
loopne
mov
cmp
jae
dec
xor
std
loope
aam
push
jl
int
xchg
enter
loop
add
leave
popl
ret
jbe
xor
pop
addr16
mov
mov
push
ja
xor
jg
mov
test
call
pushf
xchg
movl
dec
push
es
iret
rclb
subb
stc
jns
xchg
aam
mov
lea
mov
int
adc
scas
fxch
ret
push
push
scas
mov
jae
scas
sbb
sbb
and
xchg
addr16
dec
mov
outsl
nop
add
and
pop
enter
inc
cmovle
cmpsb
xor
and
es
xchg
xor
jae
sub
push
or
or
gs
insl
add
jb
ss
or
adc
mov
addr16
lret
jp
push
push
fsubs
stc
sbb
outsb
mov
mov
push
psrlw
sub
jg
xor
fisubrl
scas
cmp
cmpsl
push
xchg
insl
and
pop
lret
or
mov
mov
shr
lahf
sbb
mov
call
mov
add
sub
adc
xor
pop
inc
adc
ja
lods
stos
jns
mov
repz
dec
outsl
aaa
mov
test
imul
test
and
xor
leave
ret
fmulp
push
adc
xor
mov
or
jb
imul
icebp
pop
frstor
rorl
cmc
xchg
sbb
popa
sbb
in
mov
cmp
cli
sbb
rcr
or
in
sarl
test
in
aad
mov
rcll
xchg
pop
pop
orb
in
xorl
int
cli
leave
cmp
stos
inc
xchg
jo
dec
test
adc
in
std
sub
sbb
scas
sti
push
repz
jl
mov
mov
xor
jmp
fcoml
repz
ja
push
adc
mov
lret
out
outsb
add
jo
mov
xor
cmpsl
mov
xor
fwait
sbb
jno
sbbl
movsb
test
cmpsl
jge
sbb
xlat
add
cmp
sti
cmp
mov
or
mov
sarb
sub
scas
add
jns
jns
add
push
jecxz
push
ja
xchg
dec
cmp
inc
add
xor
mov
adcb
hlt
mull
sub
push
add
jo
outsb
add
adc
fld
dec
fs
mul
mov
loope
shrl
les
push
xor
dec
cli
add
nop
out
cltd
std
lahf
and
movsb
or
ja
daa
xchg
xchg
pop
mov
sahf
rclb
xor
pop
xchg
pushf
mov
or
jne
sbb
xchg
mov
sbb
dec
lock
xchg
mov
adc
push
push
test
shl
xchg
aam
add
inc
dec
cwtl
mov
jne
sub
roll
mov
mov
push
mov
bound
mov
aas
scas
pop
in
daa
mov
filds
push
out
mov
sbb
add
mov
pop
lods
pusha
enter
jge
jg
rcrl
mov
or
into
xchg
dec
ds
pusha
adc
xor
sarl
jmp
jnp
pop
test
sahf
jp
dec
repnz
call
push
insl
pop
das
inc
xor
xchg
mov
or
jns
xor
cmp
insb
pusha
out
push
mov
imul
iret
push
inc
fists
lods
xor
adc
mov
cltd
and
iret
loope
inc
fwait
cltd
fs
adc
es
mov
push
mov
aam
mov
mov
rol
add
sbb
xor
stos
popa
out
pop
sub
xchg
inc
jmp
jmp
mov
pop
cmp
insb
xor
mov
mov
les
jnp
subl
sbbb
and
jo
flds
dec
fwait
sub
iret
sub
xor
call
test
aam
mov
mov
sbb
rcr
jne
int3
sub
ror
mov
hlt
cs
push
outsb
shrl
xchg
xchg
cmp
int
jno
sbb
fdivp
mov
xor
sub
add
adc
xchg
aam
pop
add
or
stos
cmp
cmp
jmp
and
orl
xor
call
jbe
mov
aad
fistl
xor
and
xchg
hlt
stc
lods
repnz
movsl
ficompl
jne
fistps
loopne
iret
jnp
sbb
mov
adc
fcompl
fidivrs
dec
cmpsl
inc
std
into
test
push
xorl
dec
xchg
loop
add
data16
add
scas
mov
xchg
push
lcall
inc
je
daa
enter
and
pop
pop
add
pop
movsl
mov
decb
push
scas
repnz
mov
fildll
popa
pop
dec
cmp
jo
insl
fwait
and
mov
and
cld
push
lea
data16
mov
or
pop
loope
dec
or
int
adc
mov
daa
xor
loopne
ja
or
out
fidivrl
ss
push
lahf
jg
fiaddl
std
cmpsl
sti
mov
push
xchg
in
ds
dec
jbe
dec
daa
mov
ret
cmc
out
pop
mov
jb
nop
sahf
loopne
mov
xrelease
lret
bound
in
mov
add
mov
ror
ret
cmp
adc
mov
adc
not
jle
scas
ret
and
mov
xchg
pop
imul
sub
shrb
add
icebp
cmp
add
pop
fcomps
int
sbb
sbb
insb
mov
dec
inc
aad
test
cmpb
test
out
xchg
imul
mov
sbb
xchg
sarl
test
jecxz
mov
jae
mov
push
mov
adc
aas
lahf
sub
and
rolb
xor
and
imul
pop
pop
sti
dec
or
mov
adc
cwtl
inc
inc
rolb
ds
sub
and
incl
xchg
rcrl
xchg
push
jge
add
mov
fwait
pop
jmp
jae
jb
or
fs
sub
xchg
cmp
xor
pop
jle
stos
mov
in
daa
cwtl
xchg
cmc
data16
call
fwait
mov
xchg
insl
dec
sub
sbb
jecxz
popf
insb
and
les
and
rorl
outsl
das
xor
sbb
outsb
pmulhw
in
jbe
les
push
aas
jle
je
xchg
push
cmpl
out
incw
fstl
shlb
dec
inc
sub
outsb
xor
pop
shrl
das
pop
aam
fwait
orl
imul
sub
fxam
stos
or
cltd
xchg
add
dec
sub
mov
gs
pusha
or
lea
push
outsl
mov
subb
jecxz
imul
out
nop
xlat
dec
pop
outsl
rcl
pop
sub
jp
mov
add
mov
pusha
decl
cwtl
push
pop
and
push
repnz
jge
and
mov
fs
dec
add
sahf
inc
lock
rcrl
or
lret
ficompl
jp
test
mov
add
imul
inc
adc
sbb
out
lret
jl
test
xchg
push
push
mov
jb
data16
pop
xchg
sub
cltd
repnz
call
fisubrs
test
push
dec
ss
pop
push
scas
mov
jae
pushf
push
jmp
ss
mov
xor
jecxz
aad
addb
js
repnz
xor
out
ds
lds
in
xchg
add
or
nop
mov
sbb
mov
in
sti
jmp
or
cmp
je
push
leave
xchg
jnp
pop
mov
mov
test
adc
push
icebp
rorl
data16
push
js
jp
push
lock
movsl
pop
mov
jl
popa
fsubrl
inc
and
fnsave
ss
mov
xlat
inc
mov
daa
daa
or
cmp
pop
cmpsl
jmp
mov
mov
rcl
lea
xorl
test
jl
std
mov
jecxz
shll
xor
je
scas
mov
push
cbtw
inc
sbb
loop
add
out
in
into
dec
inc
xchg
cwtl
mov
daa
push
dec
push
icebp
inc
mov
popf
scas
pop
popf
lahf
jg
push
gs
sub
mov
sbb
mov
pop
fisubrs
xchg
stos
ss
sti
jne
inc
sbb
jo
rorl
xchg
test
mov
xchg
orb
fwait
popl
fdivrs
mov
imul
adc
sbbb
das
movsl
and
xor
fsubrl
mov
orb
into
sti
gs
sbb
dec
add
cmp
dec
cmp
jae
dec
jnp
dec
scas
mov
scas
inc
jno
imul
pop
loop
dec
push
outsb
test
mov
mov
inc
xchg
lcall
xchg
push
sub
xor
test
ret
jbe
inc
inc
xchg
pusha
xchg
rclb
jae
cmpsb
jg
aad
cmp
ljmp
jmp
inc
adc
aaa
jl
jmp
pop
pop
and
cmp
nop
xchg
jecxz
sbb
dec
lock
cld
jo
mov
jmp
ja
call
pop
xorb
les
sbbb
rcrb
out
shlb
test
leave
out
in
sbb
test
push
sub
and
inc
xor
and
sbbb
popf
xor
inc
pop
mov
inc
add
add
inc
mov
adc
mov
push
jnp
mov
xchg
mov
pop
adc
xchg
out
pushl
icebp
subl
jmp
inc
andb
pushf
or
iret
jae
push
cmp
adc
arpl
mov
adc
dec
mov
or
pop
fsub
push
std
mov
dec
je
xchg
jl
icebp
mov
cld
aad
push
mov
jmp
rorb
pop
dec
cmp
testl
imul
mov
adc
iret
ljmp
iret
ja
lea
leave
lods
sbb
xor
and
subb
xchg
jbe
jle
fsubrs
out
xchg
int3
test
sarl
and
push
push
jnp
arpl
and
mov
in
mov
in
and
pop
adc
mov
xor
ljmp
jmp
cwtl
sub
mov
fisttps
push
sbb
xchg
jg
sbb
repz
push
addr16
mov
sub
aaa
movsl
enter
jb
aaa
mov
inc
sub
sbb
lahf
xchg
sub
rorb
jne
sahf
test
xlat
repnz
xchg
hlt
pop
sbbb
addb
ss
cltd
or
test
inc
jno
or
sub
pop
pop
jp
mov
pop
nop
rorb
mov
pop
rcrb
andl
or
push
jnp
fdivr
movsl
push
stc
xor
mov
xor
shlb
xor
cld
nop
sub
lcall
lods
std
mov
rorb
sbb
xor
sahf
or
sbb
in
test
insl
lcall
or
mov
mov
sbb
push
test
and
push
jp
mov
and
add
jns
mov
mov
nop
lea
push
in
add
push
les
aas
dec
xchg
mov
repz
ljmp
pop
pop
jbe
fnstsw
jo
ror
cli
cld
bound
out
jnp
scas
outsl
dec
popa
shll
jo
and
addr16
pop
int
mov
jae
mov
ljmp
mov
mov
and
cmc
fbld
xchg
mov
ds
mov
pop
je
js
or
sbb
icebp
fldcw
les
or
lods
inc
add
pop
js
movsl
xlat
jl
mov
or
push
call
shrb
fidivrs
mov
popf
ss
sub
sub
push
cmp
aam
imul
xchg
xchg
xchg
rcrl
xchg
xorl
push
mov
mov
jns
stc
lahf
es
sarl
or
scas
movsb
sub
aas
jp
mov
push
ficoml
es
jmp
adc
and
lods
jp
js
cmp
jne
pop
es
and
pop
inc
pop
subl
orl
xor
xor
stc
push
pop
dec
xchg
imul
xor
push
idivl
dec
loopne
out
dec
bound
add
xchg
sub
and
in
in
mov
push
mov
mov
xchg
push
push
cmp
jne
rcll
inc
and
test
adc
mov
sti
leave
jns
nop
cltd
cmp
or
stc
js
mov
repz
and
loopne
pop
pop
leave
cmpsl
in
aaa
mov
ficoml
cmp
push
dec
or
xchg
mov
and
mulb
lods
movsl
lret
daa
lds
pop
in
icebp
popf
lods
std
lahf
pusha
mov
cmpsb
mov
ss
and
push
add
xor
pop
mov
cltd
sub
mov
sub
in
jecxz
pusha
hlt
xor
cmp
test
movsb
ljmp
push
mov
pop
push
add
ljmp
mov
add
add
add
fmulp
mov
sub
and
mov
and
sub
jo
push
xor
mov
leave
cmp
cli
jmp
adc
xor
sub
dec
aaa
sbb
dec
mov
push
enter
mov
push
aas
movsb
test
push
les
add
sbb
xchg
idivl
xor
jae
xchg
sti
pop
xchg
cld
and
por
pushf
add
aad
push
pop
pop
jge
int3
scas
fmull
pcmpeqw
into
pop
sahf
aam
or
adc
dec
fisttps
adc
jecxz
mov
in
out
repnz
lret
into
stos
adc
mov
decl
into
or
ds
in
bnd
mov
pop
ficoms
sbb
andb
adc
lcall
add
les
xchg
mov
ud2
aam
sub
lea
out
cltd
cmpsb
jbe
xchg
push
sar
mov
call
jmp
ljmp
cmp
mov
xchg
inc
mov
adc
sub
icebp
daa
xchg
jecxz
jnp
add
stos
mov
jns
xchg
push
lea
xor
pop
jbe
or
out
inc
or
mov
adc
dec
mov
xor
lds
xchg
or
mov
xchg
aad
test
add
or
pushf
clc
jle
pop
cmp
addr16
sbb
fbld
push
add
cld
adc
pop
mov
mov
mov
test
add
in
cmpl
sbb
and
enter
loopne
mov
cmc
mov
enter
xlat
and
lds
sub
pop
js
bound
lock
out
outsl
mov
int3
lods
lods
mov
mov
test
mov
jle
add
adc
dec
inc
pushf
xor
ljmp
add
push
mov
push
push
dec
gs
sbbl
scas
movsl
pop
out
xchg
movsl
int3
xor
sub
test
ficompl
rcr
cld
aad
push
lods
add
mov
push
xchg
add
lods
lods
std
adc
mov
ljmp
cltd
arpl
addr16
aaa
inc
cmp
mov
outsl
xor
or
jmp
and
or
and
lret
cmp
iret
add
push
push
ja
fisubl
rcrl
je
lock
jl
addb
adc
sbbb
xchg
add
xlat
mov
std
addr16
and
cmpb
jne
pop
inc
ja
mov
pushf
fnstsw
out
sbb
adc
imul
addb
jns
xchg
sub
jmp
adc
sub
lock
add
add
mov
out
jo
mov
dec
push
test
pop
lock
test
or
inc
adc
cmpsb
fbstp
rorb
scas
pop
int
pop
sbb
icebp
les
decb
cmc
fwait
aas
test
jnp
mov
dec
mov
push
mov
shrl
and
adc
cmp
xchg
mov
fmul
mov
ret
ret
mov
scas
xlat
pop
add
stos
and
pusha
add
cmp
out
js
inc
shll
cs
jbe
lods
aas
into
movsb
and
mov
inc
xlat
mov
adc
mov
arpl
hlt
inc
sbb
testb
mov
movsl
mov
js
mov
push
xor
adc
in
sub
mov
cmc
or
dec
or
and
into
jne
jmp
test
loop
push
gs
outsb
sti
cmp
jle
test
pop
xor
mov
sbb
gs
cmpsb
loopne
jmp
mov
in
cmpsl
and
imul
push
mov
lahf
mov
loopne
inc
ret
out
ja
push
enter
in
xor
mov
rorb
inc
and
shrl
aas
cli
dec
inc
mov
jnp
mov
dec
dec
adc
cmp
movsl
mov
and
jmp
push
imul
push
jmp
xchg
pop
rep
add
sbb
jge
dec
fistpll
nop
in
ss
xchg
cmc
xchg
xor
and
scas
test
clc
sbb
cwtl
push
cmp
fucomp
adc
sbb
dec
xorl
jmp
leave
fildl
xor
sbb
pop
repz
mov
fsts
mov
cli
mov
loop
sbb
jge
insb
mov
push
call
mov
xchg
dec
fwait
imul
xor
sbb
cwtl
cmp
in
imul
add
push
inc
xchg
ret
pushf
sbb
dec
addr16
int3
pop
in
cwtl
dec
testl
xchg
aas
xchg
push
or
xor
xor
shrl
aad
pop
push
fwait
lods
cs
inc
dec
ret
add
shl
sub
daa
xchg
mov
out
pop
pop
sub
stos
jo
sub
cmp
scas
xor
mov
cmp
sub
jecxz
push
icebp
cltd
dec
cmc
add
outsb
fistpl
jbe
sub
icebp
call
adc
lods
xchg
xor
mov
in
pop
xor
dec
jp
test
lret
push
pushl
int
loop
sub
insl
daa
lds
lock
xlat
sub
cmpl
roll
xor
les
push
int3
fmul
push
xchg
rcll
or
mov
repnz
insb
and
shrl
xor
add
cwtl
mov
mov
rorl
in
jecxz
int
sub
push
test
sbb
mov
jp
mov
sbbl
scas
push
in
mov
mov
and
push
sub
sahf
es
push
inc
scas
adc
cmc
or
xor
rcll
jecxz
mov
add
sti
xchg
out
jo
aam
loopne
cmp
mov
fwait
mov
iret
xor
xchg
jecxz
xchg
add
adc
push
mov
mov
and
cmp
sub
pop
pop
push
lods
mov
insb
jmp
das
jle
jle
sbb
sub
jno
lcall
cmp
cmp
mov
fwait
scas
fwait
add
in
fnstsw
xor
pusha
dec
mov
jge
fisubl
inc
or
pop
inc
dec
pop
dec
imul
xchg
jl
setl
cvtpi2ps
lods
sbb
sbb
stos
inc
cli
fs
sub
mov
insl
frstor
aad
popf
xchg
xchg
ja
mov
cld
jp
cmp
mov
je
pop
fs
lods
popf
cmp
pop
add
push
jnp
ret
in
jg
ja
frstor
dec
or
sub
nop
cwtl
fldcw
pushf
movsb
xchg
cli
subl
cmp
in
sti
loopne
dec
scas
and
sbb
nop
jle
outsl
cwtl
aam
push
sub
ss
mov
mov
leave
ds
fldl
push
sbb
out
push
mov
out
xchg
sub
movsl
addb
xchg
lret
fisubs
mov
xor
sub
test
daa
jnp
fs
outsb
jmp
scas
fcoml
sahf
mov
xchg
xchg
push
add
roll
xchg
cmpsl
mov
lock
cmp
xlat
int3
xchg
mov
jae
mov
js
dec
adc
int
cmp
stc
jle
iret
test
rep
jbe
pop
pop
push
xchg
movsl
jnp
xor
jge
fwait
loop
in
fsubl
movsl
push
push
addr16
pop
cmp
xor
in
add
add
icebp
or
icebp
add
inc
out
and
cltd
mov
push
dec
shlb
lcall
jno
imull
xor
aaa
std
lea
test
test
jge
jle
sti
or
aad
lea
stc
jp
aaa
xor
or
cmp
adc
shr
pop
jae
lock
xor
pop
insb
lahf
lock
dec
mov
push
mov
xor
fidivs
fwait
daa
and
push
jp
mov
cwtl
leave
xchg
mov
leave
cmp
jns
pop
mov
xchg
or
add
call
xchg
mov
mov
lea
out
popf
in
push
sub
or
xchg
aas
je
repnz
pop
out
in
hlt
mov
cmp
push
push
jb
in
call
pop
adc
fsub
dec
fwait
mov
sbb
jno
pop
in
pop
fdiv
enter
ja
bound
es
outsl
xchg
mov
sbb
sbb
arpl
in
fucomip
push
mov
adc
test
cmpsl
mov
mov
pop
sbb
cli
mov
mov
pop
aaa
stos
outsb
loopne
out
js
decl
xchg
lods
pop
or
sbb
mov
stc
enter
test
sub
jmp
add
pop
mov
shll
fwait
jo
jno
mov
or
out
jecxz
loope
scas
dec
adc
loopne
xorb
push
jle
mov
je
cmp
iret
scas
stc
jmp
mov
adcb
sbb
test
pop
push
jns
mov
fistpll
pop
inc
push
dec
sub
iret
icebp
jne
out
jo
and
sub
inc
js
adc
out
mov
dec
pushf
fadd
mov
xchg
jg
cmc
imul
stc
mov
xor
adc
cmp
cmp
dec
or
or
or
cltd
iret
fwait
adc
xor
lds
add
hlt
push
jb
cmc
cmpsl
jle
aas
mov
repnz
in
ss
cmp
sub
out
in
cvtps2pd
adc
mov
mov
nop
lea
mov
loop
push
push
jbe
scas
sbb
jp
jno
sub
inc
xchg
inc
cmp
stos
mov
cmpb
xchg
ljmp
push
arpl
rcrb
fisttps
fucomi
nop
into
rcr
in
loope,pn
scas
mov
cmp
mov
jo
mov
cmpsb
xor
ljmp
mov
aas
inc
in
adc
mov
fcoms
push
xor
adc
stos
lret
push
pop
mov
mov
mov
jle
jmp
xlat
xor
xchg
dec
aas
adc
dec
sbb
aaa
fistpl
mov
sbb
xlat
lods
mov
sarl
adc
fistpl
ret
aas
sub
repz
dec
mov
sarl
test
or
hlt
mov
ja
in
js
jp
xor
std
aam
jno
xchg
test
and
test
push
aad
out
cmp
je
cld
mov
pop
jge
outsb
sub
pop
and
xchg
mov
mov
into
pop
push
mov
jmp
xchg
sub
out
fs
sti
cmp
ret
inc
inc
in
push
jle
or
push
jnp
call
adc
xchg
mov
and
sbb
adc
out
push
sbb
dec
mov
sbb
mov
hlt
push
fldln2
sbb
inc
xor
scas
out
mov
das
ret
scas
stos
adc
inc
xorb
pop
ficomps
mov
stos
cs
inc
jp
xor
daa
pop
jmp
lods
pop
push
or
add
das
inc
mov
pop
lods
adc
aam
push
loop
inc
mov
jecxz
pushf
mov
stos
neg
adc
outsl
and
jne
push
insl
negl
dec
repnz
fstpt
sahf
jo
mov
or
nop
mov
inc
push
sub
inc
jnp
outsl
out
fists
push
int3
push
adc
fwait
and
and
lret
mov
lock
jecxz
ljmp
pop
push
test
es
cmp
in
test
out
xor
push
loope
cmc
xor
push
outsb
cmpsl
inc
cltd
rclb
aas
push
dec
xor
sbb
mov
xchg
mov
push
mov
pop
push
scas
cmp
or
push
pop
jg
icebp
ret
insl
out
out
xchg
xchg
out
in
xlat
mov
loopne
pop
cmpsb
bound
lock
pop
iret
jmp
ja
cs
mov
or
xchg
das
enter
addr16
xor
dec
cmp
pop
mov
sub
sbb
cmp
cmp
imul
popl
mov
ret
adc
fcomip
pop
adc
sub
lods
or
imul
push
sub
ss
and
xchg
inc
jnp
cmp
in
repz
fucomp
jb
jmp
loop
and
xor
bound
cli
scas
imul
xor
aas
sbb
es
outsb
dec
jecxz
push
ss
push
sub
aaa
iret
imul
jge
xor
roll
push
push
rorb
repnz
pop
pop
dec
xor
rcrl
pusha
mov
into
das
push
loopne
fisubrl
fildl
lret
call
stos
xchg
xor
stc
ffree
cltd
int3
mov
inc
lret
pushf
push
pop
mov
call
cmp
and
jl
inc
addr16
mov
dec
sub
gs
pusha
es
mov
jecxz
push
mov
fstl
add
into
les
push
int
mov
mov
xchg
repz
insb
xor
jne
es
call
pop
cmp
sbb
inc
loop,pn
iret
xor
xchg
add
push
push
mov
cs
ljmp
js
cs
push
movsb
pop
popf
sub
mov
xchg
pop
push
pop
pop
scas
pop
pusha
xor
mov
mov
sub
int
shlb
into
inc
repz
push
jg
mov
inc
or
out
mov
mov
push
scas
shlb
cltd
xor
test
ljmp
pop
pop
lcall
aaa
outsb
mov
pop
cmc
or
push
int3
test
jmp
sub
insb
shlb
orb
push
xchg
xor
and
test
in
aam
hlt
cmp
and
pushw
bound
cmp
push
les
mov
xchg
pop
sahf
outsb
fistpl
lods
dec
outsb
ret
popa
outsb
in
jecxz
mov
push
cmc
cmpsl
fidivl
dec
into
ret
xor
xor
mov
xchg
shlb
sarb
hlt
std
gs
inc
dec
fmuls
fcomps
cwtl
or
jp
repnz
outsb
sbb
inc
jae
pop
and
int
xchg
into
dec
mov
aaa
dec
mov
jo
or
mov
aam
sub
mov
mov
outsl
andb
xchg
jge
aas
pushf
push
jecxz
sbb
jb
insl
cmp
sub
jp
pop
jbe
push
out
push
scas
xchg
imul
inc
cmpsb
je
adc
shlb
pop
insl
jb
insl
aam
outsb
sub
pusha
mov
int3
mov
fnstenv
dec
mov
xchg
out
xor
daa
push
out
iret
lods
cmp
leave
in
ja
xor
call
push
adc
fsubs
mov
rolb
add
or
xor
pop
mov
jns
cmp
int3
sub
xchg
out
das
aas
push
add
or
pop
gs
xchg
xchg
push
mov
pop
pusha
cmp
adc
push
jne
movsl
popa
dec
std
data16
push
pop
xor
cmpsb
push
shrl
aaa
mov
outsl
xor
pop
sub
mov
sub
xchg
pop
lds
sbb
push
movsb
pop
scas
add
jecxz
fs
pop
lret
js
loopne
std
mov
sbb
dec
mov
rorl
clc
adc
lds
mov
nop
inc
inc
push
and
das
sbb
pop
jo
sub
xchg
or
jne
cli
jno
fxch
fnstsw
loope
lret
pop
push
je
test
or
in
add
sub
int
xchg
mov
cli
push
repnz
mov
in
iret
outsl
pop
mov
ljmp
mov
dec
push
dec
sub
out
movsl
stos
jp
test
shl
mov
enter
and
cmp
lods
insl
push
push
inc
push
dec
cmp
lock
mov
pusha
arpl
sub
shlb
lret
mov
ret
adc
and
push
shr
in
pop
scas
xchg
mov
out
push
es
inc
jbe
ret
sub
in
xlat
mov
aaa
sub
cmc
cmp
or
into
push
test
cmpsb
fdivl
rcrl
or
adc
sub
dec
cli
mov
addl
jmp
push
jae
sarb
sub
movsl
adc
push
xchg
push
cmc
fisubrl
sub
loop
mov
pop
fimuls
xchg
push
loopne
outsl
hlt
sub
cmp
insl
lods
das
sbb
mov
add
adc
xor
pop
in
cmpl
adc
lods
or
lds
cmp
dec
mov
inc
pop
sbb
out
lods
imul
jecxz
xchg
mov
notb
mov
add
dec
mov
adc
mov
pop
shll
push
pop
mov
pop
mov
push
shll
xor
mov
ja
repnz
fiadds
int3
pop
pop
sbb
or
mov
add
or
andl
add
lods
jmp
fcmovne
movsl
iret
adc
xchg
repz
add
sub
dec
aas
cmp
insb
add
fnstcw
mov
call
jge
loopne
or
sbb
sub
dec
lock
test
lods
xchg
and
xchg
stos
adc
xchg
pop
cmp
je
test
psllq
add
cmc
sbb
lahf
out
add
sarl
ja
cmc
add
imul
sbb
dec
popa
xchg
out
mov
loope
gs
adcl
xchg
jae
or
mov
pop
lea
dec
lahf
ret
bound
cmpsl
and
xor
rorb
gs
dec
mov
pop
lret
imul
sbb
mov
add
sub
or
flds
hlt
sub
ds
sub
mov
mov
bound
ret
add
push
les
dec
and
movb
cwtl
dec
mov
push
cs
xor
clc
movsb
fcoms
jae
mov
pop
mov
add
cwtl
push
imul
jb
sarl
outsl
adc
dec
push
popf
sub
cltd
mov
das
or
or
ljmp
cs
and
mov
shrl
stc
int
fistps
rolb
jle
add
inc
cmp
test
inc
mov
sub
das
orl
xchg
xor
push
addr16
add
hlt
ja
dec
jmp
sub
lods
stos
cmpsl
leave
sahf
xchg
subl
sub
js
loop
mov
jo
or
pop
push
sti
jo
fmuls
cmp
and
scas
mov
push
xchg
in
or
shr
mov
push
jl
iret
cmpsb
add
data16
enter
ss
xor
inc
fwait
add
daa
clc
dec
pop
add
mov
adc
pop
sub
testb
imul
mov
aam
int3
nop
pop
add
lds
xor
test
xchg
jne
sub
pop
daa
in
lcall
in
int
scas
adc
fwait
mov
call
sbb
lea
push
xchg
lock
or
cmp
fisttpl
mov
push
xlat
jo
push
add
ret
pop
sahf
into
in
gs
jmp
push
cli
in
out
xor
push
add
push
pop
xchg
and
mov
ja
dec
push
enter
leave
mov
push
mov
loope
pusha
mov
lock
mov
leave
fwait
lret
cmc
movsb
inc
call
cmp
xor
imull
test
jle
idiv
jns
mov
loope
das
add
inc
mov
jg
idivl
sbb
cmp
adc
jne
movsb
stc
lahf
mov
test
cmc
xchg
jle
addr16
mov
inc
iret
jle
mov
sub
pop
sti
cmpsb
call
pop
scas
xchg
in
fldt
xor
jno
sub
aam
dec
ret
adc
insl
ds
lcall
pop
shll
mull
cmp
hlt
int
and
lcall
stos
shll
fiadds
inc
sub
dec
pop
xor
pop
sub
sbb
sbb
add
pop
xchg
sbb
inc
mov
scas
fucomi
adc
icebp
inc
pop
jmp
mov
xlat
mov
jge
cwtl
lods
and
test
jecxz
add
mov
sarb
iret
dec
jecxz
jl
loopne
mov
int3
inc
test
stos
call
mov
pusha
mov
xchg
out
pusha
jg
int
jbe
and
xchg
dec
xor
mov
cld
enter
fisubrs
stos
and
cmp
mov
popa
movsl
pop
push
sbb
repnz
es
push
mov
push
aam
jge
cwtl
mov
fwait
lret
push
fisttps
fwait
cmc
sbb
cmp
lods
ja
inc
fsubrl
adc
mov
sar
mov
adc
and
push
xchg
and
mov
jle
ret
xor
mov
clc
dec
push
icebp
dec
hlt
xchg
loopne
outsb
shll
mov
rep
mov
into
or
sub
sahf
sbb
ljmp
inc
jge
out
xchg
ss
jns
dec
cld
test
or
jbe
cmpsl
aam
sbb
test
dec
pop
pop
push
push
sbbl
push
testl
mov
dec
cmpsl
repnz
push
shll
push
addl
loope
mov
lock
stos
jne
dec
das
inc
cmp
into
orb
lcall
dec
xor
fnstsw
mov
mov
or
and
xchg
xlat
jge
pop
shlb
fstpl
outsb
popa
push
aam
lea
stos
mov
sti
cmpsl
xchg
dec
mov
inc
jb
and
push
sbb
je
pop
or
negl
imul
add
rolb
ja
push
filds
cs
and
pop
ret
sbb
insb
mov
lret
shll
sbb
mov
jp
xlat
cmp
lock
mov
cltd
in
mov
rcll
add
popa
jp
xchg
or
push
mov
xor
enter
dec
xor
mov
pop
push
jmp
sbb
cmpsl
int3
enter
insb
fisubrl
xor
fwait
into
pop
fs
inc
dec
xchg
mov
aas
mov
xor
pop
inc
xlat
adc
adc
mov
in
fwait
pop
dec
mov
sbb
sub
dec
xchg
dec
pop
push
sub
jb
mov
push
push
mov
fwait
jo
jbe
mov
and
push
mov
mov
pushf
shll
xchg
xor
pop
dec
scas
and
mov
movsb
adc
mov
adc
loope
gs
mov
add
dec
mov
mov
inc
clc
and
movsl
lret
pop
pop
jg
stos
dec
jno
push
int3
out
jle
push
and
jb
pop
sub
cmpl
inc
movsb
or
xor
sub
sarb
into
xchg
adc
mov
ljmp
add
mov
or
xor
jg
inc
iret
loope
icebp
jbe
push
rol
pop
and
mov
pop
push
in
mov
jo
ljmp
loop
mov
mov
insl
out
cmp
stc
jmp
jmp
dec
push
mov
lods
jecxz
xlat
mov
loop
daa
push
cmpsb
jmp
sbb
or
ljmp
aam
fnsave
jle
rcll
adc
cmp
sub
dec
insb
push
fst
aaa
dec
push
out
in
add
cmp
jmp
pop
push
or
dec
rep
push
jg
push
pop
dec
mov
add
sub
xor
adc
jb
out
nop
or
mov
fldcw
mov
or
push
aaa
xchg
push
iret
push
xor
push
jnp
gs
int
mov
xor
imul
arpl
test
insb
ffree
push
mov
inc
addb
inc
inc
test
movsb
mov
sub
adc
adc
in
mov
pop
mov
xlat
jo
mov
xor
mov
cmp
pop
int
jg
add
and
decb
divl
jns
popa
jns
inc
rep
push
jbe
daa
pop
pop
nop
sbb
into
lds
jnp
pop
mov
repnz
popf
int
xchg
inc
inc
stos
xchg
push
jbe
and
and
add
inc
push
ljmp
pop
pop
jmp
ljmp
in
pop
or
aad
pop
jae
popl
or
sub
lods
sahf
es
mov
or
xchg
pop
pop
fisubl
jecxz
out
inc
or
mov
xchg
lds
adc
arpl
push
mov
mov
xchg
xchg
lret
mov
add
xchg
sub
ret
push
mov
cmp
sub
ss
xor
or
addr16
pop
mov
dec
xchg
pop
mov
dec
daa
cmc
pop
lret
cmp
ret
dec
lahf
dec
pop
fwait
scas
mov
pop
add
ss
mov
mov
movsl
xchg
xor
out
icebp
xchg
add
pop
add
sub
dec
mov
sub
lcall
xchg
insl
aam
and
mov
inc
fdivl
popa
sub
in
aad
inc
dec
push
aad
jp
mov
js
pushf
addr16
jle
lcall
xchg
mov
jb
std
fwait
pop
inc
push
cmpsb
or
xorb
cld
std
insb
js
repz
fnsave
or
push
xchg
in
dec
pcmpeqw
sbb
outsl
dec
neg
fld
add
jo
sbb
push
repz
dec
push
pop
mov
ds
xor
sahf
sbb
mov
je
xchg
inc
popf
loope
xchg
in
call
jg
xchg
pop
pop
push
dec
push
mov
std
pop
sti
xchg
pusha
xchg
mov
shrl
iret
pop
push
idivb
clc
fsubrl
mov
sbb
fdivrl
cmpsl
push
pusha
fisubrl
mov
cmpsb
cmp
inc
aad
imul
mov
sahf
jns
dec
sbb
jl
shrb
addr16
push
loopne
outsl
cmp
cltd
shlb
sbb
popf
inc
and
sarb
inc
mov
jl
ret
std
lahf
shl
jmp
jle
xor
push
mov
int
lds
imul
sbb
lock
js
pop
mov
xor
xchg
jg
xor
lds
jp
jae
loop
imul
xor
sub
out
push
lahf
cmpsb
inc
call
js
pop
loopne
push
lods
popa
leave
xor
or
mov
mov
cmp
mov
xchg
jo
push
push
mov
or
sub
testb
xchg
outsl
adc
mov
scas
mov
out
or
add
mov
mov
and
add
js
adc
call
dec
xchg
mov
ja
in
xchg
cmc
arpl
fisubl
shrb
push
mov
adc
andb
outsl
adc
mov
pop
pushf
inc
inc
push
enter
icebp
adcb
push
std
cmpsb
xchg
jno
jmp
fs
ja
dec
mov
and
cwtl
test
ror
in
cmpsl
ja
dec
insl
and
popa
std
add
andb
fistps
das
das
xor
sbb
mov
and
jae
adc
pop
and
or
ljmp
out
xchg
dec
int
cli
les
and
in
jecxz
mov
push
jns
pushf
inc
sahf
adc
xor
sub
mov
fucomi
adc
pop
fcomps
jo
cmp
fisubrl
mov
aaa
outsb
adc
or
inc
lahf
repz
cmc
test
and
xor
in
movsl
lret
sbb
push
cmp
xchg
or
inc
fs
sub
cmpsb
ret
or
inc
das
sbb
cmp
xchg
push
lock
dec
pop
dec
fiadds
aad
mov
mov
mov
cltd
lock
rclb
movl
out
dec
and
mov
or
xchg
lock
xor
inc
push
push
lods
lods
adc
pop
int3
xchg
mov
mov
jle
pop
inc
dec
cmp
xchg
sub
aaa
dec
cmp
jo
jge
lea
fisttpll
cmc
dec
call
xor
insb
movsb
push
adcl
lods
enter
insb
xchg
test
hlt
or
jno
call
les
cmc
sti
push
data16
pop
mov
fucom
mov
sbb
repz
pop
nop
inc
sub
call
pop
adc
ret
and
push
test
loope
push
mov
lock
adc
ds
out
fstps
arpl
xor
cld
mov
idiv
imul
arpl
sahf
jl
je
movsl
loope
and
sbb
cmp
jnp
mov
mov
cltd
sub
rcl
inc
data16
mov
jns
mull
les
add
nop
shrl
outsb
out
inc
lock
hlt
mov
fbstp
mov
in
dec
mov
shll
pop
ljmp
or
addr16
dec
add
leave
jp
in
testb
in
add
cmp
scas
rorl
mov
pop
in
sarb
jo
fiadds
pop
inc
sbb
lods
pop
or
dec
lock
jnp
shrb
ret
scas
test
enter
mov
dec
lahf
stos
mov
ja
mov
out
cmp
ja
sbb
dec
push
dec
icebp
mov
xchg
xor
xchg
test
sbb
push
sub
repz
add
in
pop
in
mov
mov
xor
xor
jns
inc
inc
inc
popf
into
jge
adc
sbb
mov
pop
lret
jns
mov
js
je
repnz
in
mov
inc
stc
dec
cmp
push
jne
aas
push
push
pusha
push
sbb
and
into
or
popa
std
test
pop
pusha
or
into
leave
sub
lock
push
cmp
es
jne
popa
xchg
mul
lahf
push
or
dec
bound
and
inc
mov
movsl
or
push
mov
push
ficomps
popa
js
movsb
push
xchg
inc
jbe
cmp
aad
mov
xlat
mov
pop
in
sbb
scas
iret
inc
xchg
cwtl
mov
mov
sub
pop
jno
jne
call
call
pop
mov
lds
fcoml
popf
cmpsb
cli
pop
fcoml
push
cmpsb
or
mov
mov
jle
and
xor
jmp
mov
jae
jae
mov
mov
popf
inc
jl
xchg
mov
push
and
mov
inc
aam
jne
sti
outsb
jl
pop
push
and
lock
fcomip
jl
sar
aaa
add
sub
inc
adc
jb
out
jle
aad
out
push
movsl
dec
mov
mov
xchg
push
xorl
test
outsl
xchg
sbb
iret
addr16
lods
sbb
xchg
jmp
jnp
jne
mov
adc
xchg
sbb
and
out
daa
xchg
push
or
xor
xor
mov
mov
jecxz
leave
in
cmp
push
pop
iret
jae
pop
bound
test
sbb
iret
or
jnp
inc
mov
mov
ljmp
mov
mov
in
rclb
gs
aam
rorl
mov
push
mov
pop
nop
fsts
mov
js
mov
inc
rcll
cmp
jns
mov
push
pushf
adc
mov
pop
push
test
cmpsb
cmp
cld
jle
out
or
sahf
repnz
pop
push
shrb
iret
ds
test
clc
pop
cs
adc
fidivrl
and
and
add
xchg
imull
pop
lods
outsb
jae
cmp
xor
fimuls
push
imulb
enter
loopne
fidivrl
mov
out
es
push
push
das
inc
pop
fsubs
fucomip
push
or
push
arpl
pop
dec
repz
stos
mov
mov
shlb
sahf
xlat
add
xchg
and
nop
aam
cmp
mov
and
popf
rolb
movb
jmp
mov
js
inc
sarb
push
push
push
adc
int
pop
pop
cmpsl
insl
loop
sbb
pushf
mov
jae
sbb
push
add
jb
lods
repz
ret
xor
lock
sbb
and
sarb
call
mov
rorl
std
xor
loopne
mov
pop
jae
xchg
movsb
xchg
gs
pop
jnp
xchg
mov
mov
std
shll
lret
push
xor
adc
and
xchg
stc
and
adc
inc
out
rorl
imull
cmpsl
cmp
out
sbb
jbe
xor
and
mov
push
test
ja
lock
aas
sub
movsl
ret
out
xchg
jo
imul
je
xchg
pushf
sbb
out
sbb
fptan
lods
leave
push
mov
add
mov
pop
aam
repz
mov
daa
sbb
sbb
jmp
or
push
push
div
out
out
inc
push
dec
inc
rcr
or
pop
adc
aad
imull
jl
dec
fisttpl
lcall
xchg
mov
popa
dec
orl
mov
neg
movsl
mov
les
inc
mov
mov
ret
inc
roll
cwtl
xchg
ja
addr16
mov
sub
add
mov
test
es
fs
out
popf
in
sbb
cmovp
mov
push
lea
mov
mov
out
push
jge
lret
mov
adc
subb
fstpl
xchg
push
icebp
push
inc
push
jne
les
and
les
cmp
push
jbe
dec
popl
xchg
lahf
mov
cwtl
pop
inc
mov
jle
fimull
fidivrs
or
jmp
mov
sbb
rcrl
ss
xchg
dec
inc
sbb
rolb
out
je
xor
mov
jnp,pt
or
clc
aaa
out
and
pusha
cmpsl
and
loope
cmp
repnz
in
xchg
mov
mov
sbb
xor
lea
mov
sbbb
scas
je
cwtl
xchg
xchg
mov
push
jbe
pop
add
sahf
inc
mov
lret
sahf
mov
sub
mov
mov
or
mov
cli
sbb
pop
outsb
xchg
cmp
xchg
flds
cmp
mov
jo
sbb
and
jge
enter
iret
jecxz
xlat
mov
out
rcll
push
mov
push
ret
jle
or
daa
repz
xchg
cmp
mov
in
mov
cmp
loopne
dec
out
sbb
mov
fsubp
cli
scas
jmp
test
jl
cmpsl
sbbb
push
xorb
jno
xor
or
mov
pusha
subl
sbb
mov
jne
xchg
push
or
xchg
mov
sbb
dec
lret
sub
pop
xor
pop
push
or
fdivrs
dec
dec
pop
jnp
cs
push
jns
mov
push
gs
loop
lea
or
aam
outsl
mov
sbb
mov
pop
test
out
xchg
mov
dec
push
movsl
jno
iret
jg
cmp
call
push
adc
push
aam
ss
lds
adcl
nop
cs
dec
fucomip
enter
jg
imul
pop
push
popa
pop
ljmp
dec
mov
sbb
je
fsubs
mov
fnstcw
imul
push
mov
ficoms
inc
shll
out
aaa
in
enter
jae
call
test
sub
lods
cmc
xchg
mov
scas
xor
mov
iret
int3
push
or
jb
dec
add
push
not
das
add
mov
int
sbb
or
jge
dec
inc
jp
cs
repz
push
out
xor
mov
xchg
add
in
insl
sub
std
sti
pop
mov
mov
push
jp
cmp
ss
sahf
inc
inc
mul
mov
flds
push
and
push
dec
mov
clc
lret
fld
fucomp
fcomi
addl
cwtl
xchg
sbbb
nop
add
jle
jbe
add
inc
push
fwait
mov
lds
mov
cmp
shl
inc
xchg
mov
clc
insl
lahf
outsb
inc
faddl
sub
or
push
mov
mov
xor
sahf
andb
cmp
adc
fldt
test
add
fsubl
stos
dec
insb
lret
int
mov
xor
int
sbb
dec
dec
dec
ret
popf
xor
dec
xchg
cs
push
subl
cli
lea
iret
insb
mov
mov
cmp
into
test
das
aaa
clc
mov
cmc
xchg
psrlw
mov
pop
mov
out
cli
loopne
or
pusha
dec
xlat
or
ret
mov
xchg
push
rorl
sbb
mov
das
int3
mov
cmp
sbb
push
rcrb
call
mov
dec
jge
jg
test
into
xchg
push
mov
mov
fbstp
xchg
ss
pop
mov
sbb
mov
or
sbb
jl
cmc
cs
cmc
addr16
cld
dec
insl
mov
pushf
and
push
int
mov
pop
btr
mov
aaa
mov
mov
lret
aam
aad
outsl
jge
cmp
popf
xchg
dec
lret
push
cltd
pusha
in
xchg
mov
or
ja
mov
lcall
sbb
add
fldcw
and
cmpsb
repnz
imul
lods
fwait
jmp
dec
jb
lea
jg
lea
cmp
add
mov
fldcw
jmp
call
lret
jle
nop
mov
mov
mov
sti
cmpsb
addl
sub
add
aas
push
mov
shlb
incl
jg
fwait
lret
mov
ja
xchg
xor
pop
xor
push
push
jg
daa
mov
enter
lods
fstp
push
sahf
pushf
inc
das
stos
adc
mov
jae
cld
sti
pop
mov
scas
mov
xchg
in
mov
xor
in
push
aas
daa
xchg
insl
mov
dec
jp
orb
push
bound
push
repz
or
aaa
cmp
es
std
xor
cmp
mov
stos
jae
mov
mov
push
stc
mov
pop
leave
pop
mov
xor
stos
push
daa
std
pop
lds
adc
add
out
xor
add
inc
xchg
jp
inc
sti
lret
push
and
push
scas
fdivl
rorl
jno
repz
sarl
repz
or
xor
cmp
sbb
xchg
cmp
stos
pop
cmp
jb
insb
imul
mov
and
idiv
pop
jge
int3
popa
adc
mov
mov
sub
add
push
xchg
cmp
push
xchg
xlat
sbb
cmc
pop
ret
lock
sarl
call
bound
dec
int
cmp
negl
ljmp
mov
mov
sub
cmp
xor
test
xor
push
xchg
or
inc
stos
outsb
aam
nop
mov
ret
jmp
shlb
sub
repnz
push
or
cli
xchg
daa
jecxz
pop
mov
int
add
test
dec
xchg
jae
dec
sahf
and
xor
xchg
aaa
test
shll
movb
lret
orb
mov
dec
popa
lods
adc
jle
add
mov
sti
dec
pusha
jbe
out
jae,pt
cmp
arpl
pusha
lret
in
xchg
jl
js
loope
lahf
popa
xchg
retw
pop
shl
loope
xchg
push
pop
and
pop
xchg
test
inc
pusha
bnd
enter
dec
loopne
das
pop
jne
fistpl
cmp
adc
sbb
cwtl
xor
fimull
inc
aas
movsb
inc
sbb
push
mov
mulps
cmpsl
test
mov
test
lahf
js
dec
icebp
ret
adc
fstl
cli
mov
cwtl
mov
and
repnz
mov
pop
int
sbb
out
jno
repz
idivb
insb
cmpl
sti
enter
out
mov
int
xchg
xchg
and
jg
cmc
loope
push
fcomi
es
mov
add
in
dec
cmpsb
or
lcall
test
je
pop
fidivs
insb
cld
dec
jae
stc
cltd
int
in
test
mov
icebp
add
loopne
and
cmpsb
add
iret
imul
insl
xchg
inc
mov
adc
push
xchg
fcomp
and
cmc
lods
test
dec
test
jns
cwtl
cmp
sbbb
lods
push
loope
push
and
stc
add
int3
mov
test
pop
lods
leave
dec
in
test
mov
outsl
push
ret
pop
xchg
inc
lret
js
cmpsl
mov
pushf
enter
nop
clc
xor
mov
jp
cmpsb
rcll
sarb
push
adcb
pop
rol
push
push
in
pop
pop
sbb
div
cmp
or
ss
dec
mov
mov
push
inc
sbb
or
addr16
xor
xchg
sub
add
mov
xchg
sbb
xor
sub
arpl
stos
or
adc
scas
rorb
pusha
dec
daa
repz
call
xor
mov
dec
stc
test
shlb
dec
enter
sub
popa
cmp
inc
cs
pop
cmpl
decb
mov
mov
pop
test
sbbb
dec
pop
subl
mov
out
cmpsl
stos
jbe
loopw
enter
jle
adc
xchg
cwtl
mov
inc
mov
sub
xor
fidivrs
and
inc
sub
and
repnz
mov
scas
cmp
mov
ret
cmpsl
inc
into
or
mov
mov
xchg
roll
leave
outsb
mov
out
inc
pop
pop
andl
xlat
and
adc
sub
cmc
int3
movsb
ret
iret
clc
mov
movsb
jl
dec
jge
roll
pop
inc
filds
pop
fnstcw
push
mov
sub
leave
inc
dec
pop
push
pop
push
mov
cld
sub
leave
lcall
scas
pop
mov
sub
dec
insl
inc
dec
lahf
mov
jbe
leave
cmp
or
stos
cli
add
popa
sub
mov
adc
jae
push
inc
call
pop
sub
sti
pop
and
call
or
iret
push
pop
mov
cmp
sti
lret
fwait
imul
cmc
dec
mov
int
notl
push
or
push
mov
jecxz
icebp
mov
sahf
sti
mov
loopne
enter
mov
mov
stc
sub
sub
xchg
insl
mov
bound
add
push
sbb
xor
adc
outsl
stc
test
inc
xor
cmpb
cltd
jno
out
inc
jp
clc
lret
sub
mov
scas
jge
lret
hlt
or
imul
push
hlt
shrb
inc
mov
jge
push
jmp
pop
cmp
std
xor
in
jae
jnp
and
insb
jecxz
jns
dec
push
bound
shlb
mov
cld
scas
push
in
xor
jae
dec
xchg
addb
or
adc
jae
cwtl
sbb
push
push
and
jl
cmpsb
pop
shll
pop
popf
mulb
repz
dec
insb
pop
xor
lds
adc
nop
pop
add
mov
outsl
lahf
mov
mov
lods
add
mov
xchg
add
mov
mov
imul
fld
int
addps
jmp
popf
pop
sbb
outsb
ret
mov
mov
cmp
stos
inc
and
pop
or
outsb
ds
inc
out
roll
pop
stos
daa
or
das
fimuls
jne
add
mov
cmp
jne
cs
dec
add
mov
fsubl
push
xchg
dec
cs
add
mov
les
in
fnstenv
ss
enter
fisubrs
jnp
jge
xor
push
test
and
in
mov
mov
dec
adc
push
or
out
in
and
cmc
inc
das
jne
or
and
mov
ljmp
cmp
jmp
xor
sbb
cmpl
fcmovne
aad
ret
xchg
mov
push
in
loope
cmp
scas
xor
nop
mov
scas
ficompl
jl
cs
rol
sub
cmp
push
inc
sahf
lods
ljmp
mov
add
stos
lret
clc
test
scas
and
sbb
insb
xorb
sbb
cld
shll
dec
xlat
push
dec
aad
mov
idivl
sbb
mov
out
sub
jne
xor
xlat
add
sbb
lret
test
adc
jo
add
movsb
cltd
in
lcall
cmpb
clc
sub
pop
sarl
aas
sbb
test
pop
and
rcr
jmp
mov
push
inc
jl
stos
and
js
clc
cmc
xor
xchg
cmpsl
idivb
or
mov
xor
mov
add
xchg
pop
cli
sbb
rcl
nop
xor
in
push
mov
stos
rcll
sub
and
sbb
sub
mov
dec
push
xchg
cmpsl
ret
push
xchg
pop
ret
jno
and
or
mov
addr16
and
lds
cmp
out
stc
icebp
jns
xor
cmp
mov
mov
fsubrl
sbb
jle
repz
adc
mov
sub
add
pop
add
dec
inc
dec
scas
das
lods
add
lds
xchg
sti
xchg
mov
in
fmuls
inc
hlt
fistpl
xchg
xor
out
mov
mov
roll
sahf
int3
aam
rorl
outsl
jecxz
cmp
xlat
push
jp
push
xor
flds
xchg
aad
iret
cmp
or
dec
push
repz
cmp
sti
ret
mov
xor
xor
arpl
xchg
inc
ja
mov
sub
scas
xchg
sti
push
ds
nop
enter
xchg
mov
outsl
test
fisubs
add
out
push
cmpsl
test
popa
cmpsl
popa
xchg
cmpsb
mov
lock
dec
push
sbb
jmp
in
mov
dec
sarb
cld
jno
aad
lock
inc
stos
es
sub
sub
ljmp
dec
rclb
inc
mov
mov
dec
add
movsl
jmp
adcb
enter
repnz
jne
sub
inc
test
adcl
subb
aad
mov
mov
lret
dec
jp
imul
icebp
mov
fdiv
rcll
dec
xor
mov
ja
and
sub
cmp
jo
inc
push
ja
pop
mov
imul
je
adc
jb
fwait
stc
push
cld
fsubs
inc
push
cmp
lahf
js
adc
jp
lahf
cli
sub
cmpsl
mov
inc
scas
outsl
cmp
loop
ss
push
pop
xlat
out
rclb
scas
mov
fcmovbe
outsl
mov
stos
sub
in
cltd
fisttps
aaa
dec
data16
loop
lret
fwait
dec
ja
out
mov
sub
call
inc
fwait
sti
push
mov
fbld
popa
adc
pop
sar
inc
sbb
push
jb
cmp
lods
mov
inc
push
xchg
inc
pop
or
ja
inc
inc
add
cmp
cmp
or
lock
mov
imul
in
sub
sbb
dec
mov
jp
sub
nop
xor
adc
incb
stc
sbb
test
or
out
insl
ljmp
aaa
xlat
stc
rorl
cmp
loopne
dec
sub
mov
cmp
popa
sbb
lahf
lret
cs
xchg
nop
lods
dec
xchg
xor
sbb
daa
xchg
cmc
iret
call
xlat
imul
aaa
lahf
push
movsl
rorl
stc
pop
lahf
push
cmp
cltd
icebp
outsl
xchg
cmp
in
test
jbe
adc
jmp
add
out
and
lret
push
arpl
fcoml
inc
lret
lret
xlat
shlb
insl
xchg
das
cmp
inc
mov
xor
and
cli
mov
xchg
pop
sbb
dec
rorb
dec
mov
ss
push
dec
enter
outsl
and
add
sbb
mov
es
push
jb
adc
cmp
push
jmp
push
or
and
xchg
test
pushf
arpl
les
enter
push
and
pop
sarb
xor
xchg
push
mov
rclb
pop
cmc
test
push
iret
cwtl
mov
outsb
push
or
dec
sti
add
cltd
or
mov
jg
cld
or
sarl
fistpl
ss
mov
mov
shl
jae
push
inc
roll
dec
xor
dec
cmpb
shrl
lds
out
add
add
mov
sub
les
inc
sub
cld
das
mov
or
fs
out
outsb
xor
jmp
xor
and
ud0
sarl
cmp
scas
inc
jecxz
sub
outsb
mov
xchg
mov
mov
push
test
aad
add
nop
loope
or
call
scas
ftst
push
cmpsl
aas
out
loope
push
jmp
and
loop
xchg
cwtl
and
sbb
ds
sbbb
popf
cltd
mov
outsb
xchg
push
cmp
ret
sbb
cmp
lods
lcall
dec
pop
out
and
bnd
adc
in
lahf
push
dec
test
je
es
pop
add
imul
xor
stos
mov
inc
aaa
mov
inc
mov
push
cmp
inc
mov
repz
inc
jbe
add
das
pop
pop
in
insb
gs
push
xchg
fs
movsb
jns
lods
fnstenv
stos
lret
sub
loope
adc
push
aaa
xor
pop
jno
inc
pop
in
mov
cmp
test
stc
adc
push
sbb
xchg
loopne
sub
mov
push
fldl
adc
add
or
mov
mov
out
jo
mov
test
int
fldl
inc
pushw
pushf
js
push
push
ret
scas
add
fisubrs
xor
popf
or
mov
lock
rcrb
in
xchg
sti
lods
sub
push
sub
shll
xchg
aas
push
xchg
testl
lods
cmp
fcomi
add
or
and
je
push
ljmp
mov
push
hlt
sub
jge
mov
aas
and
mov
adc
mov
jbe
jl
mov
in
inc
lods
mov
dec
aas
data16
mov
imul
stc
shll
pop
adc
insb
std
and
bnd
push
dec
pop
outsl
ret
mov
enter
dec
orl
mov
fildll
orl
pop
xchg
fmuls
dec
jg
pop
push
add
pop
pop
enter
cmp
push
push
movsb
int
inc
pusha
insb
mov
dec
pushf
adc
jo
inc
xor
loop
pushf
aaa
mov
mov
lock
sarl
push
movb
stos
arpl
mov
mov
sbb
shll
loope
sub
inc
orl
xchg
test
mov
hlt
imul
xchg
jl
xchg
jne
stos
cmovnp
adc
jnp
jnp
mov
dec
lods
int
or
in
stc
lea
insl
xchg
push
mov
std
xchg
mov
mov
fwait
jp
lds
sahf
movsl
or
in
stos
adc
insl
test
ds
dec
dec
push
jnp
imul
xor
test
jns
lret
and
enter
lock
add
ja
dec
pop
mov
sbb
shlb
insl
dec
shlb
pusha
adc
mov
inc
rcr
inc
ret
lahf
icebp
bound
lret
leave
pop
cs
jnp
or
push
sahf
pop
outsl
cmp
fldcw
jns
rolb
rorb
loopne
cmp
adc
lods
fs
sar
dec
lods
imul
dec
lret
fadds
movsl
lock
adc
xchg
push
std
push
jo
sarl
adc
dec
xchg
or
test
mov
scas
std
sub
scas
shrl
jecxz
jmp
push
cmp
cmp
jmp
cwtl
push
popf
push
pop
enter
dec
mov
pop
xor
int3
jl
add
pop
inc
sbb
movsl
out
sub
mov
lock
test
adc
jo
ja
loop
xchg
dec
xchg
jl
add
sbb
ds
ja
and
xor
xlat
aad
mov
ror
std
test
sbb
je
enter
ljmp
sbbl
jl
hlt
sbb
inc
jnp,pn
xor
out
jo
adc
in
fmul
adcb
xor
and
adc
inc
pop
rcrb
mov
hlt
pop
ficomps
sub
fbstp
sete
and
xchg
jbe
lods
sub
pop
push
pop
dec
xor
mov
testl
xchg
mov
arpl
push
add
loop
pop
cli
test
jmp
or
call
xchg
adc
fbstp
ljmp
loop
repnz
jl
bound
es
sti
cmp
sub
shll
jecxz
std
pusha
push
clc
mov
xor
cld
xchg
cmc
xor
jecxz
cmp
cld
fs
iret
add
dec
insb
add
pop
ret
mov
xor
pop
add
rorl
fldenv
sbb
dec
push
repz
dec
sub
push
cltd
push
fstpt
in
adc
inc
jbe
jl
movsl
gs
lods
imul
adc
icebp
pop
push
mov
aam
pop
push
pop
hlt
shl
pop
gs
dec
xchg
push
lahf
scas
fs
add
dec
dec
xchg
xchg
sti
shll
and
or
jno
loopne
imul
enter
mov
dec
in
inc
inc
push
cmc
mov
sub
xor
jge
mov
inc
loopne
fs
mov
sbb
test
push
jl
or
stos
movsl
sahf
das
push
in
xchg
cmp
lods
loopne
xchg
mov
nop
imul
inc
add
dec
mov
push
loopne
scas
out
xor
test
nop
daa
mov
push
fnstcw
cltd
sahf
jbe
inc
mov
pop
lock
iret
pop
in
mov
pop
jb
test
push
pop
icebp
fnstenv
pusha
jne
sub
imul
add
inc
dec
cmp
push
xor
enter
dec
mov
push
leave
jae
enter
je
test
jge
inc
jb
sbb
pusha
sbb
int3
adc
fists
movsb
adc
mov
out
out
xchg
popa
je
sti
cmp
lahf
add
stos
bound
add
mov
and
jmp
stos
dec
push
in
cld
bound
inc
inc
dec
aaa
sub
push
shlb
push
and
xchg
push
orl
notb
in
sub
and
dec
and
pop
cmp
mov
mov
movsb
jl
pop
repnz
mov
adc
dec
popa
test
stc
fs
or
xchg
loopne
ljmp
jno
cld
mov
arpl
sbb
stos
mov
inc
xlat
sti
xchg
push
lcall
enter
mov
xor
andl
es
push
or
repnz
dec
mov
xor
cmp
test
push
xchg
sub
negl
lds
inc
adc
or
clc
iret
xchg
jae
sbb
ret
loopne
outsb
lcall
inc
scas
and
cmp
fwait
jnp
daa
cmpsb
popf
sbb
fwait
or
cltd
or
mov
xchg
jne
xchg
ret
ja
cs
sub
dec
jne
mov
or
push
or
rcll
mov
pop
fisubl
movsl
sbb
mov
das
mov
inc
sbb
sub
mov
andl
sub
std
fldenv
fincstp
sub
dec
push
sbb
mov
cmpsl
hlt
and
cmp
inc
inc
mov
sbb
aad
sub
aaa
pushf
stc
push
inc
loope
push
lcall
movsb
mov
stos
jns
cs
push
hlt
cmp
test
cmpsb
cs
mov
in
jnp
push
pop
push
lahf
sub
add
cwtl
mov
pop
adc
push
add
loopne
push
test
ret
sahf
jno
add
jo
xchg
xlat
mov
cmp
ja
xchg
clc
out
fistl
mov
test
out
add
std
xor
rolb
mov
mov
sub
into
test
inc
lahf
rclb
subl
jno
mov
das
iret
ret
jg
lret
push
insl
lcall
shll
jno
mov
dec
pop
lds
pop
pop
lea
jl
fsubrp
pop
pop
xchg
dec
addl
in
push
adc
cmp
xor
inc
out
add
mov
push
or
js
sbb
rolb
imul
xor
dec
repz
pusha
fildl
or
and
sub
addr16
fistpll
lods
in
mov
pusha
test
adc
inc
clc
mov
daa
mov
test
pop
mov
push
xchg
dec
sub
push
push
inc
stc
add
mov
and
and
test
sub
mov
add
pop
mull
push
pop
repz
sub
imul
and
lret
cmc
out
inc
aaa
int3
mov
aam
push
jne
ss
and
in
push
xchg
xchg
out
hlt
mov
icebp
cld
scas
or
inc
adc
gs
mov
addb
hlt
push
imul
xchg
cmp
or
movsb
ljmp
jne
mov
repnz
icebp
lods
sub
jg
mov
push
fstpl
add
or
mov
insb
or
sti
sbb
adc
subl
rcll
ret
pop
add
enter
je
mov
pop
js
mov
jmp
and
add
xor
jb
or
push
push
sub
inc
push
mov
in
xchg
dec
inc
test
popf
pop
jo
xor
mov
imul
push
aam
push
sub
adc
in
dec
fmuls
inc
stc
inc
mov
mov
or
imul
push
pop
and
jl
testb
into
jmp
ret
xchg
jno
xor
xor
imul
cmc
push
jg
mov
mov
add
lret
subb
sti
stos
cmp
cmc
lds
mov
or
mov
jo
lahf
xor
movsl
not
jp
push
cmp
sbb
or
movsl
lret
adc
inc
movl
notl
scas
mov
adc
pop
daa
ja
popa
dec
js
jge
push
pop
ret
test
out
push
stos
or
mov
push
inc
adc
push
push
aaa
inc
test
xchg
cld
cld
dec
and
pop
pop
in
xchg
jp
mov
mov
pop
movsb
faddl
cmp
fst
mov
pop
mov
clc
mov
xor
sub
pop
inc
ds
cmp
cmp
push
push
mov
and
das
push
sbb
jns
rolb
lods
addl
push
hlt
inc
mov
shll
add
mov
cltd
notl
xor
mov
sbb
inc
pop
cltd
fstps
cmp
xor
icebp
mov
pop
sbb
jmp
jp
ss
add
and
movsb
bound
mov
or
sbb
sub
cmpb
sub
icebp
mov
push
sub
adc
push
cmp
out
push
mov
inc
shr
lret
xchg
cmp
inc
aaa
jo
pop
inc
push
inc
out
push
jge
jbe
jge
jmp
xchg
sbb
mov
adc
cmp
out
mov
test
xor
mov
ret
inc
stc
scas
cmp
and
xchg
inc
mov
and
loopne
push
cmp
fldl
push
adc
cld
pop
sbb
loopne
js
sub
daa
xor
push
xor
sahf
sbb
aam
xchg
pop
cmp
neg
pop
or
mov
popf
stos
mov
pop
addb
xchg
push
jecxz
rcl
jmp
loope
popf
out
inc
adc
pop
fidivrs
and
mov
je
aas
clc
xchg
push
in
movl
fsubl
out
in
cmc
dec
mov
dec
lret
faddl
enter
push
xor
inc
rorl
divl
cli
xchg
jg
js
and
sahf
sub
or
fwait
cmpsl
jae
xchg
add
rorb
outsl
popa
mov
cmp
in
sub
hlt
inc
sub
inc
mov
int
add
out
shlb
into
cmpl
mov
sub
or
cmp
xchg
mov
repz
ret
mov
dec
mov
cmp
scas
fdivrl
sbb
pop
sbb
xlat
gs
es
push
xchg
nop
add
adc
rep
stos
fcom
or
adc
frstor
cmp
xchg
or
jno
cmpsb
nop
aas
xchg
pop
ljmp
jg
sub
fcoml
addr16
add
jb
xor
inc
xorb
movsb
mov
add
sbb
xor
sub
sahf
sahf
lcall
sbb
in
iret
xor
filds
insl
or
les
enter
nop
fmulp
push
adc
stos
sbb
lret
push
and
fmuls
lcall
pop
sbb
rclb
adc
fisubrl
movsb
mov
repz
sub
mov
scas
mov
jle
push
adc
dec
pop
test
dec
add
mov
mov
jl
movsb
aaa
shl
es
cmp
fcoms
mov
lds
lahf
mov
imul
dec
arpl
jnp
mov
sub
add
mov
lock
xchg
xchg
int3
aam
adc
nop
adc
cmp
icebp
movsl
adc
pop
ljmp
cld
jg
dec
inc
ds
inc
or
push
sbb
rorl
sti
jmp
mov
jmp
iret
shll
subb
lock
enter
xchg
es
xor
std
clc
pop
xchg
and
js
pop
fwait
dec
out
icebp
xor
push
push
cmp
rol
mov
add
and
imul
insl
add
fldenv
mov
cmp
test
or
sub
jmp
dec
lret
rolb
mov
ret
ffree
int
enter
ja
cmp
and
cmpsl
xchg
pop
call
or
and
clc
pop
jbe
mov
mov
or
shll
decl
inc
sub
fisttpl
ljmp
std
idiv
mov
cwtl
mov
sbbl
cwtl
adc
jl
in
xchg
jp
jecxz
mov
shr
lahf
mov
cmp
loopne
std
test
cmp
push
in
cmc
inc
fwait
ja
sbb
cmc
push
mov
and
mov
xchg
setg
ret
jg
and
xchg
imul
adc
das
sub
xor
mov
push
mov
pop
testb
mov
mov
idivl
pusha
sahf
cmc
sub
sub
in
jo
push
mov
fmul
imull
adc
dec
xlat
fnstenv
add
jge
push
jno
flds
xor
pop
aaa
or
or
dec
mov
dec
repz
imul
inc
push
cmc
jge
pusha
cmp
sbb
div
loopne
ljmp
mov
or
hlt
or
jle
das
test
xor
mov
xor
fiaddl
adcl
test
gs
pop
cmp
int3
xor
and
push
or
mov
in
out
and
fs
xor
js
std
andl
or
out
idivb
adc
mov
push
mov
cmp
lods
ficompl
push
xor
les
in
lret
xor
dec
test
xor
or
inc
sbb
xor
jnp
adc
pop
sub
pop
scas
inc
mov
ret
not
pop
aas
xchg
and
and
adc
lahf
dec
xchg
add
add
in
out
rcll
and
pop
pop
test
inc
loope
stos
cmp
data16
push
dec
push
xchg
lods
fnstcw
inc
jle
in
push
std
popa
dec
insb
fdivrs
mov
lods
movsb
add
ss
xchg
ret
dec
cmpsl
nop
fidivs
rorb
inc
pop
add
sbb
jb
xlat
pop
lea
sbb
xchg
fwait
loopne
xchg
out
push
shrl
pop
sbb
int
or
add
outsl
fsub
push
dec
arpl
push
leave
mov
orb
lods
jmp
jb
sub
push
xchg
cmp
mov
int
lret
cmp
mov
pusha
inc
inc
cld
push
test
adc
xor
add
rolb
and
dec
movsl
adc
pop
cmpsb
push
fmulp
stos
shll
jo
push
jb
jno
pop
push
jae
mov
inc
cs
arpl
mov
bound
loop
dec
data16
mov
cmp
mov
movl
xor
jmp
ljmp
stos
inc
dec
out
mov
mov
jge
movsb
pop
push
xor
pop
mov
mov
fistpl
out
mov
dec
inc
sub
cmpsb
into
ljmp
pop
xchg
xor
add
test
mov
call
not
pop
sub
loopne
xor
mov
lock
cmp
mov
push
mov
pop
add
int
adc
sbb
dec
push
pop
push
fiaddl
es
fdivrs
jns
adc
leave
rcrb
fiaddl
push
inc
iret
nop
fsubs
sysret
push
mov
ja
insb
sub
std
jb
mov
dec
fsubp
mov
pushf
cmc
lahf
sub
mul
inc
cmp
daa
shrb
adc
xchg
pop
ror
imul
and
data16
inc
xchg
xor
jb
xor
pop
sbb
arpl
xor
pop
pop
test
insb
cli
stc
movb
dec
mov
cmp
and
sbb
push
pop
jmp
shlb
insl
inc
mov
dec
insl
arpl
iret
dec
icebp
lods
test
jmp
scas
out
dec
dec
out
mov
jle
pushw
subb
in
jl
in
rorb
sub
pop
dec
mov
cmpsl
incl
faddl
push
or
out
inc
insl
test
or
mov
and
cmpsl
lods
inc
jecxz
cmpsb
mov
mov
inc
mov
pop
sbb
loope
cmpsb
test
xchg
jp
cmpsb
inc
mov
fcomps
or
lock
scas
fsubp
sbb
jg
mov
sbb
jbe
aas
jne
sub
orb
jne
inc
jb
bound
aas
out
ret
mov
movsl
mov
fldt
mov
pop
ljmp
sbb
stos
lcall
xchg
adc
pop
div
insb
mov
pop
cmpsl
jno
inc
dec
sti
push
cmp
imul
sbb
lods
jp
adc
cmp
shrl
sbb
or
les
scas
xchg
push
sbb
inc
scas
sub
lahf
loopne
push
and
mov
or
imul
pop
pop
mov
out
aaa
and
fsub
ja
push
movsl
jl
shll
arpl
fs
out
fwait
mov
cmp
or
je
xor
inc
sbbb
dec
mov
xor
bound
push
mov
add
adc
xorl
and
sub
push
mov
clc
pop
jns
xor
cmp
mov
in
jne
xchg
out
dec
jmp
cmp
jne
sub
cmp
test
pop
andb
mov
or
xor
inc
dec
cs
aam
in
daa
sbbl
or
jae
mov
jne
js
jb
ret
pop
mull
push
stos
and
mov
inc
out
cmp
sbb
sbb
lock
call
popf
insb
into
repz
or
mov
cmp
jge
push
xchg
xchg
test
mov
inc
xchg
and
dec
push
and
dec
push
out
pop
xchg
pop
in
aas
imul
push
add
cmp
or
fistl
inc
mov
lock
dec
inc
mov
add
mov
lea
push
jae
xchg
add
xchg
add
mov
jnp
dec
mov
mov
ljmp
in
imul
out
sbb
imul
std
and
xchg
mov
mov
dec
ss
adc
mov
lea
inc
pop
inc
push
shrb
push
sbb
fadds
mov
shll
sahf
rolb
cmc
xchg
add
jg
xchg
test
aaa
xchg
loop
mov
push
cmpsb
insl
mov
mov
push
sahf
lcall
ret
int3
daa
xor
lcall
mov
out
xor
pop
mov
jae
int3
std
xchg
test
ficoms
dec
dec
popf
mov
pop
lock
es
jne,pn
mov
lods
fisubrl
out
pushf
xchg
mov
mov
dec
xlat
jo
aad
test
lods
insl
xchg
in
aaa
push
into
repz
mov
pop
mov
lahf
ss
orb
inc
bound
in
xchg
jns
jmp
push
add
sub
xchg
shrb
mov
cmp
roll
sbb
xchg
fucomip
jae
mov
lahf
je
jno
stos
push
cmp
mov
fstl
mov
push
lret
lahf
or
mov
sbb
mov
dec
aaa
fwait
and
hlt
inc
sbb
mov
inc
cwtl
pop
jl
out
js
and
add
aas
jmp
push
add
adc
lahf
lock
insb
xchg
mov
fucom
inc
adc
mov
jg
decb
xchg
push
mov
in
pop
sbb
jns
movsl
inc
and
lods
jp
jp
cmpsl
dec
and
dec
inc
leave
dec
andb
mov
outsb
mov
lret
ljmp
mov
and
xchg
setle
mov
arpl
mov
aad
loopne
sub
or
sti
lret
aad
test
mov
fstpt
push
mov
mov
into
leave
data16
int3
inc
js
test
xor
rorb
sbb
jmp
scas
test
ffree
loopne
ljmp
in
dec
pop
popaw
mov
pcmpgtw
xchg
loope
pop
cmp
addr16
mov
sub
jmp
xchg
lds
mov
test
mov
jl
xchg
das
push
mov
pop
jae
cmp
cld
sbb
push
shrb
xor
jl
push
dec
pop
cmc
sub
mov
add
add
dec
pop
jmp
push
sbb
jns
pop
iret
into
jg
cmp
dec
xor
dec
xorb
shl
repz
jne
test
cmpsl
mov
lea
sub
lret
cmp
gs
adc
push
sahf
sbb
test
std
out
and
sub
sub
fistpl
mov
ds
movsb
mov
test
jge
insb
pop
mov
ljmp
and
sub
rorb
push
fyl2x
fwait
pop
lds
lret
lcall
aad
and
jne
fadds
ja
movsl
mov
cmp
xchg
add
rclb
stc
pop
jge
shrl
int
and
add
and
fdiv
stos
dec
stc
fdivrp
mov
adc
aas
cmp
test
jle
ffree
adc
sbb
xchg
repz
xor
sti
mov
jae
add
negb
inc
outsb
xchg
push
ret
mov
inc
outsl
push
inc
fs
jno
shrl
sub
inc
jne
cmpl
mov
mov
das
mov
js
and
imul
into
pop
call
push
dec
and
pmaddwd
sti
add
mov
ss
icebp
add
add
jae
imul
push
mov
jmp
mov
sbb
pop
outsb
or
jo
adc
dec
and
jne
stos
inc
xchg
push
fisubl
ljmp
inc
imul
pop
pop
mov
fcomip
in
jp
mov
loopne
jmp
mov
mov
add
push
xor
aaa
dec
xchg
cli
jne
cs
add
or
xchg
dec
ret
test
pop
out
filds
push
lea
sbb
cmp
lret
jae
cmp
xchg
or
sbb
push
and
add
jns
jle
les
xor
cmp
jae
insb
ret
repnz
mov
int
adc
mov
test
lret
dec
or
fwait
and
fildl
sbb
sub
mull
test
ret
rcll
add
ja
jle
ljmp
ficomps
int
ljmp
imul
lea
in
push
inc
mov
rcrl
std
scas
rcr
js
hlt
and
addb
roll
adc
filds
int3
rorb
insl
out
xor
out
clc
icebp
pop
xor
pop
test
imull
push
movsl
jae
xor
inc
cmpsb
sbb
xchg
dec
pusha
dec
add
add
pop
inc
pop
sbb
orb
push
ja
jnp
gs
inc
jp
jle
lods
mov
shll
shrb
test
ds
je
lea
or
lds
inc
ss
mov
xchg
iret
xor
adc
mov
pop
adc
pop
adc
jmp
shr
jae
jnp
pusha
popf
xor
icebp
je
popf
or
jne
dec
adc
pop
mov
mov
push
testl
adcl
sub
mov
fs
sub
iret
std
sub
data16
xlat
add
mov
iret
sub
xor
clc
and
fistpll
cmp
ficomps
adc
jl
popf
dec
xor
aaa
out
je
das
xchg
mov
inc
daa
aaa
out
or
cwtl
mov
inc
or
in
test
in
sub
in
add
or
dec
ljmp
cmp
mov
mov
jl
fwait
xchg
arpl
scas
jb
int3
push
or
sub
std
js
pop
dec
lret
pop
lock
cmp
pop
adc
ds
xor
sub
in
mov
js
cs
movsb
cmp
fs
cs
sbb
jo
arpl
data16
ret
icebp
dec
xchg
push
mov
pop
lahf
scas
jge
daa
inc
add
mov
add
pop
mov
sub
test
mul
mov
out
clc
leave
dec
dec
iret
pop
mov
stos
or
es
pop
int
pop
push
fcomip
loope
es
add
dec
xor
xchg
mov
pusha
inc
sbb
jne
mov
sub
out
push
mov
mov
inc
test
sbb
ss
ficoms
jmp
je
cltd
out
test
out
popa
roll
mov
mov
dec
jg
adc
popf
jae
inc
cltd
dec
aas
sub
fcoml
xchg
and
mov
pop
inc
mov
in
jecxz
push
out
pop
adc
sub
lock
icebp
cmpb
jge
xorb
testb
sti
sbb
pop
mov
pop
or
xchg
add
or
pop
ret
jo
clc
aad
push
mov
mov
shrl
add
pop
add
or
movsl
push
out
fdiv
lock
and
lahf
fdivs
movnti
in
sti
mov
cmove
cld
inc
pushf
packssdw
fisubl
icebp
hlt
pop
add
dec
and
aas
nop
mov
outsb
outsb
mov
mov
sub
nop
mov
sbbl
mov
mov
pop
jo
push
sbb
bound
lcall
inc
data16
imul
mov
out
push
cld
pop
out
inc
jecxz
popa
sub
mov
iret
mov
cmp
fs
leave
pop
imul
and
repz
add
loop
jmp
aad
insb
repz
loope
dec
imul
in
pop
dec
fisttps
xchg
sbb
lcall
dec
data16
addl
pop
inc
xchg
cmc
push
jg
cmp
dec
mov
and
sub
scas
movsb
mov
in
icebp
stos
popf
fnstcw
xor
adc
jno
clc
mov
pop
jne
xchg
sub
ds
out
in
mov
and
push
stc
mov
out
cs
iret
jecxz
ds
mov
mov
or
clc
popa
scas
gs
inc
out
mov
out
fdivs
inc
jg
leave
sub
std
movsb
ja
mov
or
into
mov
outsb
mov
imul
add
in
jnp
pop
rolb
and
lods
adc
pop
sbb
adc
cld
push
pusha
mov
adc
cwtl
mov
inc
pop
jl
cmpsb
jns
mov
int3
ljmp
aad
test
jp
lret
loope
aam
daa
jnp
pusha
add
stos
xor
fisttpl
and
les
xor
icebp
fnstcw
insb
push
push
fsubr
repz
loope
sub
fcmovb
mov
push
lods
jno
lods
cmpsb
subb
mov
mov
jl
lods
cli
mov
sbb
mov
lods
fs
cmpsb
or
aad
lods
popa
or
dec
nop
mov
outsl
mov
into
rdtsc
sub
rorl
cmpsb
scas
push
aaa
mov
mov
hlt
dec
mov
sbb
push
cld
insl
les
in
and
xor
cmp
push
dec
mov
stc
shll
iret
das
call
jne
imul
mov
stos
jae
xor
jecxz
jb
dec
sti
push
sahf
test
pop
and
xchg
or
push
mov
and
paddd
mov
inc
adc
cmp
xchg
inc
dec
cmpsb
mov
push
xchg
xor
mov
and
and
jmp
inc
xorb
sarl
gs
iret
or
xor
mov
pop
fsubr
test
mov
jg
xchg
xor
add
mov
ret
cmc
fcomps
fdivr
sarb
xor
shrl
inc
dec
mov
jb
test
fistpl
mov
mov
inc
cmpsl
imul
rorl
cli
cld
jg
mov
js
or
xchg
insl
xchg
loope
mov
mov
xchg
mov
cmpsb
notl
cltd
mov
ficomps
call
push
mov
jecxz
lret
inc
push
lret
jno
popa
loope
je
inc
scas
mov
inc
data16
jl
adc
dec
clc
pop
ror
mov
iret
pop
sub
andl
lret
in
scas
lcall
jge
inc
rcll
jo
outsl
jb
sub
push
xor
fldl
mov
push
inc
sub
in
jp
in
fs
add
or
jl
cmc
inc
arpl
dec
mov
daa
xor
jp
into
mov
mov
or
pushf
ret
mov
xchg
and
or
sub
xchg
sbb
sbb
pop
leave
leave
mov
xor
std
je
mov
xor
mov
ds
or
movnti
int
jle
daa
fs
bound
icebp
test
sub
mov
cmpsb
jge
and
inc
xor
movsl
out
mov
jmp
ja
popa
xchg
sbb
inc
lcall
dec
out
adc
test
mov
inc
push
andl
push
subb
lcall
push
mov
push
and
dec
mov
andl
xchg
aaa
dec
inc
mov
aaa
push
scas
lock
push
int
mov
mov
or
inc
and
or
cmpsb
nop
mov
and
mov
sbb
out
subl
adc
test
sti
test
xchg
adc
lcall
xchg
jne
mov
dec
and
pop
scas
cmp
mov
add
or
or
mov
ds
mov
fcompl
and
cs
test
fcompl
test
push
sbb
ss
mov
xchg
popf
scas
loope
fidivl
jmp
inc
dec
xor
ret
cmp
xchg
cltd
mov
cmp
sub
out
in
pop
lock
shll
pop
and
mov
xchg
xor
clc
stos
inc
adc
movsl
mov
nop
lock
jmp
addr16
lods
push
jbe
imul
nop
cmp
mov
xor
lods
mov
sbb
out
pop
add
in
mov
mov
pop
push
and
mov
dec
mov
xchg
pop
inc
adc
mov
mov
jmp
mov
xchg
and
or
scas
push
mov
js
xor
mov
fldenv
mov
in
loopne
aas
jno
fistpll
test
jbe
pop
lret
cmpsb
lock
ds
out
sti
dec
jmp
fisubrl
pop
out
and
sbb
jle
pop
mov
or
insl
loop
jb
cmp
out
push
inc
mov
subb
lea
fisubl
xor
lock
bound
mov
jbe
sub
lods
cmc
lret
ljmp
mov
js
xchg
into
jnp,pt
lods
popa
sbb
fisubl
mov
jecxz
xchg
dec
sahf
insb
pop
jle
ljmp
dec
inc
out
xchg
das
lcall
mov
jb
inc
repnz
sub
aad
mov
dec
in
call
loop
dec
int3
test
push
mov
sbb
imul
ror
adc
and
neg
and
aad
sbb
xor
xor
jns
mov
cmpsb
push
xchg
cltd
pop
das
or
fucomip
cmp
push
test
xchg
push
loopne
pop
sbb
sbb
pop
pushl
es
pop
jne
mov
std
inc
movsb
sbb
cmp
jl
call
shr
mov
push
in
sbb
mov
push
cmp
adc
mov
push
cltd
xchg
or
jecxz
lret
shll
insl
stos
test
jns
mov
lret
sbb
cmp
imul
push
xor
mov
sub
loope
mov
aam
push
jecxz
pop
lret
pushf
dec
loopne
stos
xlat
jle
or
mov
es
pop
test
mov
pop
xor
mov
mov
sub
push
scas
dec
or
int
call
sbb
outsb
jnp
cmc
add
push
xchg
hlt
fdivl
jecxz
std
ror
leave
sti
or
xor
bound
lea
jns
sub
fcoml
push
mov
xchg
xchg
adc
and
mov
dec
jg
dec
xchg
ret
sbb
dec
andl
jg
mov
out
out
adc
cmp
ror
add
in
dec
ret
lret
lods
adc
mov
pop
stc
dec
xor
popf
das
dec
sub
mov
int
ret
mov
cltd
push
jg
ds
movsl
mov
inc
inc
mov
iret
lock
dec
xor
add
out
inc
jp
adc
leave
cmp
outsl
xor
or
or
or
je
xchg
push
imul
int3
sub
ret
aas
pcmpeqw
dec
mov
or
clc
inc
stos
pop
sub
sub
loop
leave
out
jbe,pn
xor
lret
lods
stos
push
mov
jbe
mov
xchg
lea
aaa
jnp
fildll
xchg
dec
stos
es
mov
mov
shll
push
inc
push
cld
bound
inc
cld
out
rolb
stos
mov
sbb
daa
jl
inc
mov
jl
adcl
sbb
into
cmp
dec
xor
mov
cwtl
mov
adc
push
aam
mov
cmp
es
int
mov
inc
int
xchg
cs
std
sub
mov
call
pop
dec
sub
jnp
pop
sbb
xchg
add
mov
sub
clc
loopne
in
add
mov
add
rcrl
jo
popf
adc
add
pushf
lds
push
fwait
lods
dec
inc
xlat
rcl
xor
mov
xchg
push
dec
adc
jmp
jmp
imul
std
dec
push
cltd
cld
mov
add
cmp
add
xchg
pop
rorl
addr16
movsb
adc
dec
in
dec
call
and
daa
repnz
mov
movsl
cmp
and
lahf
shll
fnsave
and
jle
js
rolb
xchg
jne
shrl
push
les
and
mov
mov
int
arpl
sub
shlb
inc
movsb
adc
je
jl
clc
cmp
fistl
and
push
adc
rclb
cmp
jbe
and
test
hlt
adc
push
addr16
cwtl
repz
test
in
jle
push
mov
add
in
outsb
jbe
cmp
aad
mov
dec
insl
xchg
push
push
and
and
mov
jmp
rcl
lds
out
movsb
fs
inc
mov
rorb
mov
aad
push
and
sti
cmpsb
addr16
dec
mov
mov
cmp
xor
call
push
fiaddl
jnp
jnp
pop
jmp
hlt
mov
mov
sub
ja
inc
sub
xchg
idivl
insb
cmp
pushf
pop
sub
cmp
mov
mov
mov
xor
testl
ret
dec
pop
and
movsl
push
cwtl
adc
test
xchg
repnz
jmp
and
add
popa
cwtl
add
enter
repnz
push
and
sbb
dec
fcompl
inc
inc
dec
insb
jne
ds
lods
dec
fimull
xor
jb
jns
test
js
stos
xchg
lcall
cmp
pop
add
adc
push
fiaddl
xchg
arpl
xorl
cmp
xor
jae
or
das
xor
mov
cmp
cmp
lcall
cmpsl
pop
cmp
orb
and
adc
adc
pushf
and
data16
repnz
movq
bnd
dec
sub
inc
nop
stc
xchg
add
sbb
sub
ljmp
dec
fdivs
dec
mov
into
into
daa
and
out
xor
enter
jae
xchg
popf
fwait
push
dec
add
jno
sub
pop
out
mov
lods
insb
pushf
test
adc
cmp
mov
xchg
leave
xchg
mov
icebp
jmp
mov
sub
add
and
imul
mov
xchg
dec
sbb
loope
jb
test
div
sub
dec
repz
inc
in
mov
and
cs
mov
insb
sbb
ljmp
mov
enter
jmp
pop
xchg
jmp
test
fisttps
push
sarl
adcl
mov
add
mov
pop
call
mov
inc
rcl
sbb
stc
push
outsl
into
popl
sbb
fdivrl
insl
mov
test
inc
test
sub
mov
jns
scas
jmp
or
insb
push
incl
loope
mov
shlb
sahf
mov
xor
xor
aam
addl
lret
fimuls
jo
or
push
cld
pop
dec
pop
add
fstpl
aam
sbb
push
pop
aam
ljmp
stc
add
jecxz
inc
sub
in
lds
or
push
enter
add
stos
ljmp
cwtl
jne
in
cld
xor
pop
test
jns
mov
jo
xor
or
mov
mov
mov
call
sbb
fs
aam
rcrb
cmp
shl
xchg
inc
mov
lods
pushf
inc
sub
ja,pt
cmp
add
push
sbbb
pop
xchg
sahf
data16
mov
testb
sbb
fdiv
push
xchg
sbbb
cmpb
add
enter
lahf
mov
pop
ds
lock
adcl
xor
push
ret
pop
pop
rcrb
xchg
push
fdivrl
fimuls
js
adc
push
cli
lret
ret
nop
lds
leave
jo
cltd
jb
jle
pop
js
and
dec
jecxz
in
movsb
sti
mov
jp
pop
push
out
push
sbb
shlb
xchg
test
pop
xor
mov
jge
out
pushf
cs
push
je
or
sub
cs
testb
sub
fists
or
lret
mov
test
xchg
sbb
sub
inc
test
int
add
inc
ficoms
mov
insb
das
fimull
ja
cmp
rolb
pop
lods
push
cmp
insb
push
inc
loope
mov
xchg
sub
dec
sbbl
mov
rcl
lcall
and
sbb
jo
jmp
add
vcmppd
push
cmp
out
popa
mov
mov
mov
mov
test
js
jbe
mov
pop
xor
cmp
mov
aad
push
insb
or
add
and
jbe
xor
jmp
pop
sti
push
mov
mov
sbb
push
sub
dec
je
push
sub
xor
lods
frstor
aaa
bound
std
stc
dec
bnd
cmp
cwtl
test
mov
lds
xor
cmp
xchg
pop
dec
cli
aas
jns
pop
shll
rorb
pop
mov
mov
ja
push
mov
jne
and
sbb
mov
and
xor
mov
aam
jle
addr16
stos
andl
jmp
xchg
add
in
xor
mov
adc
dec
and
jb
jns
movsl
xor
jl
ds
xchg
push
repnz
cltd
call
fistpll
xlat
es
dec
inc
ss
test
jns
mov
mov
xor
add
loope
adc
test
out
icebp
jecxz
int
xlat
ret
and
adc
pop
cmpsl
rorl
jns
clc
shrl
mov
sbb
rclb
cmpb
sbb
xchg
fwait
or
iret
cmp
push
jg
push
out
mov
xchg
and
nop
pop
mov
mov
jp
jno
lret
push
roll
mov
in
add
jnp
mov
les
js
push
iret
test
stos
int
xor
lods
imul
lods
lock
add
push
xchg
pushl
and
add
pop
fs
jge
lds
sub
mov
xchg
adc
cmp
mov
mov
cmpsl
pop
les
pop
icebp
pop
push
mov
popl
sbb
jb
push
in
xor
test
cltd
mov
adc
test
loop
pop
movsb
sub
andl
data16
or
and
into
sub
mov
xchg
in
inc
inc
lcall
dec
add
mov
popf
ja
pushf
jp
sbb
into
iret
in
iret
add
adc
or
inc
mov
and
or
cmpsb
lock
xchg
mov
pop
sarb
notl
mov
push
cmpsb
stc
sbb
mov
dec
sahf
fdiv
sbb
aad
jno
out
xchg
je
out
or
out
mov
outsb
sbb
adc
pop
cmp
int3
cmp
jg
push
inc
lret
jae
cs
adc
stc
push
in
and
mov
jbe
out
cmpsl
fimull
fcmovnb
xor
push
loopne
jae
xchg
inc
inc
adc
inc
or
mov
das
mov
xor
mov
js
pop
xlat
mov
cmp
push
xorb
push
mov
or
xchg
sbbl
mov
jl
idiv
xor
pop
or
cmpsb
mov
cmpsl
aas
mov
lret
cmpb
das
inc
ja
test
stos
jb
int3
bound
cmp
push
jp
in
mov
dec
mov
mov
test
bound
mov
clc
add
in
fcmovnbe
mov
adc
push
inc
cmp
scas
or
push
movsl
ljmp
in
mov
into
xchg
sbb
shll
call
add
daa
jno
push
les
mov
pop
mov
in
call
xor
adc
stos
icebp
loop
bnd
jl
xor
fstps
movb
mov
cmp
inc
js
ja
je
arpl
cmc
sti
stos
xchg
push
add
shrb
jb
jnp
fstpt
sarl
push
sahf
xchg
xchg
inc
cltd
sbb
cmp
adc
dec
nop
jle
push
sbbl
mov
sti
ss
movsb
push
pop
mov
repz
out
adc
stos
shl
jge
das
scas
inc
mov
jb
scas
ficomps
xchg
jb
xlat
nop
add
xor
jp
dec
std
inc
outsb
mov
push
adc
push
pop
lds
dec
inc
add
adcl
mov
fidivrs
repnz
jns
inc
lret
push
data16
and
int3
jecxz
push
sbb
cld
addr16
adc
mov
test
mov
sub
fwait
push
cmp
xchg
pop
lahf
cmpsl
dec
xor
cs
sub
shlb
addr16
pop
mov
jp
xor
cmp
and
push
leave
push
cmp
mov
mov
je
fildl
add
push
outsb
jecxz
in
jnp
popf
mov
lahf
int
aad
push
inc
outsl
adc
sbb
inc
xlat
xchg
scas
cmp
cmp
push
xor
inc
aad
push
jb
adc
in
inc
pop
lahf
adc
push
dec
scas
jae
inc
rcl
cmp
mov
sbb
mov
pop
clc
sbb
sahf
ljmp
mov
or
es
and
iret
cmpsl
xchg
push
or
dec
test
inc
and
clc
cmpsl
cmpsl
inc
cmpsl
scas
sub
push
fdivl
lret
clc
into
dec
push
mov
cmp
xlat
bound
scas
fstp
fwait
std
clc
or
adc
adc
arpl
pop
xchg
test
insb
jnp
ficoms
into
push
jp
loope
fdiv
jmp
push
inc
popf
sbb
jns
daa
sahf
in
addr16
mov
sahf
in
pop
xchg
jns
or
xchg
dec
push
popf
inc
dec
mov
incb
pop
out
dec
in
mov
cmp
jp
inc
add
add
scas
sbb
ljmp
in
xlat
adc
adcl
cmp
adc
sti
or
xchg
sbb
mov
hlt
sahf
jno
int3
test
iret
clc
add
cld
test
pusha
mov
mov
pop
cmc
push
or
in
lds
fstps
insb
lea
rolb
or
adc
lahf
mov
inc
in
es
out
xlat
je
xchg
cli
dec
push
sbb
lds
and
insb
push
outsl
jnp
xchg
pop
sahf
scas
lods
jne
xchg
repnz
mov
sub
push
rorb
xchg
xchg
mov
repz
out
xor
xchg
jmp
fmul
jno
cmp
add
xchg
out
jne
insl
push
pop
aam
dec
mov
jmp
mov
cmp
sbb
xor
fwait
shrl
stos
int
out
mov
andb
jmp
cmp
mov
sbb
enter
xlat
add
push
les
pop
or
outsl
fcmovu
das
lods
inc
inc
adc
dec
add
xor
sar
push
adc
hlt
mov
mov
mov
lock
enter
test
stos
xchg
push
push
rcr
pop
mov
dec
out
popf
push
push
mov
mov
fidivrl
in
jb
add
pop
add
add
fidivrs
adc
cmp
idivb
enter
outsb
sar
add
mov
movsb
mov
xchg
inc
adc
lcall
aas
dec
aaa
inc
loop
and
sahf
mov
cs
inc
scas
push
push
xchg
xor
and
mov
sub
mov
cltd
aaa
in
push
dec
in
adc
cmpsl
ljmp
leave
mov
jno
clc
pop
cmpsb
int3
jae
sub
js
xchg
pop
xchg
jle
jnp
inc
mov
mov
mov
lret
mov
xchg
fnstsw
push
ret
sbb
cmpsl
ljmp
std
es
sbb
mov
out
pop
lock
inc
sub
pop
mov
into
mov
aas
pop
mov
push
or
das
imul
pop
lsl
jmp
ficompl
dec
enter
mov
fwait
rcl
pop
push
out
dec
jp
ljmp
mov
inc
std
mov
addr16
push
mov
shlb
shrl
push
dec
nop
adc
subl
mov
sub
cmp
les
xchg
push
dec
push
xlat
loopne
jno
outsb
xchg
scas
repnz
addr16
cmpsl
fbld
xlat
aam
or
jno
push
pushf
adc
jl
pop
enter
jbe
pusha
into
sbb
cmp
cmp
addr16
fs
pop
xchg
shll
divb
in
outsl
inc
unpcklps
fisttpll
insb
pop
das
in
mov
sub
int3
clc
lods
mov
xchg
pop
sbb
jle
cmp
dec
sub
lods
fcomp
loope
xor
push
out
lret
push
push
repz
aam
insb
push
fs
and
fldcw
aas
fsubrl
call
mov
xchg
push
rorl
gs
mov
test
xchg
imul
xchg
pop
fs
xor
xchg
jb
aas
imul
in
test
ror
adc
mov
pop
pop
or
sbb
in
cmp
lds
xchg
xor
dec
dec
lret
aam
out
fwait
out
std
mov
mov
cmc
repz
add
and
je
jmp
add
dec
nop
mov
daa
out
jecxz
push
lahf
xor
repnz
inc
cmp
shlb
test
mov
ret
bound
pop
xor
jge
push
mov
fmull
movsl
stos
lods
dec
rclb
dec
shrl
movsb
mov
xlat
mov
cmpsb
loopne
mov
out
nop
shlb
jns
icebp
pop
cmp
cltd
push
sbbl
push
repz
jno
sub
dec
fwait
push
push
xor
scas
test
xchg
dec
sbb
ss
or
cmp
addr16
xlat
xchg
mov
inc
or
adc
stos
sbb
scas
mov
cmp
fwait
xorl
hlt
or
inc
outsb
cld
fcomip
lock
out
icebp
mov
ss
fxtract
jno
std
fwait
sub
push
rcrb
xchg
jmp
or
fwait
dec
add
not
and
sti
lcall
scas
jnp
dec
mov
out
push
je
push
ja
jnp
adc
pop
subb
xor
add
mov
jecxz
ret
mov
jp
addr16
jnp
gs
ss
mov
hlt
popa
das
sbb
in
pop
xchg
ficoms
orb
xor
push
and
or
in
add
and
mov
cwtl
jno
imul
stc
push
sbb
movsb
fisttpl
mov
pop
push
outsb
add
pop
xchg
push
out
push
push
insb
sbb
or
repz
jle
test
mov
rcr
sub
lahf
xor
lcall
sbb
repz
fldenv
orl
add
push
neg
cmp
lcall
js
mov
push
jmp
pop
push
xlat
scas
inc
xchg
in
sub
sbb
adc
sub
notb
mov
std
jae
insl
sbb
or
xor
and
push
pop
mov
insb
cmp
adc
xchg
push
inc
jae
rorl
pop
mov
mov
add
je
mov
mov
mov
shll
cmp
std
sarl
mov
xchg
test
cmp
ljmp
dec
mov
push
push
adc
xor
cmp
xchg
leave
ljmp
adc
test
int3
xchg
dec
cmp
adc
sarl
dec
call
mov
scas
shlb
add
xor
repz
inc
jp
add
jmp
jo
mov
jne
fwait
inc
shrl
mov
and
mov
sbb
in
psubb
in
or
sub
and
cld
sub
std
adc
inc
clc
cli
shll
jo
xor
movsl
sbb
push
jns
dec
mov
xor
movsl
pushf
push
mov
and
stos
jmp
inc
testb
popa
arpl
out
stos
xor
pusha
pop
shl
cmp
mov
dec
jecxz
push
rcrb
test
and
mov
xor
mov
jmp
dec
fbld
adc
int3
leave
mov
decb
pop
mov
mov
pop
mov
bound
push
xor
adc
les
out
lahf
mov
and
test
jmp
xchg
addb
mov
jnp
or
cs
push
push
testb
test
xchg
xchg
das
pop
and
loop
jnp
fdivl
test
add
icebp
jecxz
xor
movsl
pushf
dec
lea
pop
mov
outsb
outsl
frstor
in
mov
mov
xchg
mov
adc
mov
mov
testb
insb
jnp
adc
push
jl
pop
pop
xor
pop
mov
arpl
insb
lods
jo
cli
lret
add
pop
fldt
out
je
or
mov
test
sahf
repnz
addr16
scas
sti
pop
stos
add
sahf
lret
je
mov
sub
rorb
dec
lods
cmp
push
push
mov
es
mov
pop
aaa
pusha
pop
inc
xchg
addr16
lahf
jns
or
xlat
pop
add
mov
in
sub
fstpl
inc
aam
or
pushf
aas
cmpsl
jb
clc
sub
pop
xor
test
ret
push
out
gs
jno
mov
xchg
mov
sbb
mov
fsubr
ljmp
xor
mov
xchg
xchg
or
insl
sub
popa
jp
es
cmp
add
sub
jp
ljmp
es
mov
repnz
mov
cmpsb
mov
aas
jae
test
pop
lea
mov
and
notb
movsb
adc
pop
mov
ja
jl
out
jge
xchg
cmp
clc
aam
int
add
cli
outsb
sahf
ret
adc
xchg
pop
mov
shlb
shl
addl
inc
sub
gs
mov
sarl
mov
ret
jl
je
mov
in
sbb
xchg
or
rcll
nop
dec
clc
or
cmp
fnsave
push
jb
clc
jp
imul
mov
scas
adc
lret
popf
mov
jecxz
stos
or
cli
and
repz
jo
add
adc
push
jle
adc
cltd
sbb
repnz
mov
push
iret
dec
mov
push
setb
adcl
push
mov
cmpsl
lcall
imul
xor
sub
lds
idivb
lcall
mov
out
call
dec
adc
lret
daa
int
mov
out
xor
xchg
jg
in
sub
sbb
cmpsb
loop
pop
data16
icebp
and
dec
dec
jns
pop
xlat
push
or
pop
pop
das
and
imul
mov
cli
dec
pop
pop
pop
aas
cwtl
xchg
and
je
lcall
mov
mov
add
dec
xchg
arpl
mov
call
es
in
insb
lahf
fsubrs
push
xchg
cmp
push
daa
sbb
and
stos
cmp
mov
dec
mov
xor
out
sahf
lods
in
or
adc
xor
sub
hlt
push
xor
neg
push
inc
mov
mov
cld
nop
xchg
shlb
inc
sbb
ret
pop
jle
push
inc
jo
and
jmp
sub
pop
es
jnp
cwtl
xchg
hlt
test
ljmp
xor
cwtl
movsb
je
fsubrl
in
xor
mov
hlt
stc
flds
jne
and
je
rcll
xchg
into
xchg
fbld
fwait
pop
jecxz
dec
jmp
mov
sub
lods
add
jecxz
enter
mov
js
pop
inc
inc
dec
mov
mov
ds
or
inc
xchg
and
mov
jae
sar
hlt
mov
add
dec
jp
xchg
ret
leave
push
icebp
sbb
cmp
lods
movsb
test
inc
xchg
mov
sbb
push
mov
or
stos
sti
pop
fwait
or
mov
sti
pop
sbb
xchg
aam
or
push
lahf
cld
iret
or
test
icebp
dec
ds
jmp
add
ja
mov
lock
jo
cmp
xchg
cli
add
sub
ja
insl
push
jg
mov
sub
jecxz
ret
lock
scas
negl
shrb
cmp
push
arpl
pop
or
push
push
mov
es
divb
add
push
add
push
push
and
inc
cs
xchg
push
xchg
in
outsl
cli
cmpsb
pop
lods
or
sub
push
jnp
mov
pop
xor
mov
xorb
into
ds
push
mov
mov
jns
mov
stos
in
fmul
fdiv
fsubs
xchg
daa
mov
imul
inc
out
frstor
pop
bound
push
scas
lea
cmp
lea
out
repnz
ret
pop
pop
sbbl
das
daa
add
cmp
or
sbb
push
push
stos
inc
adc
fdivr
insb
lret
stos
dec
rcrb
test
sub
mov
add
sbb
push
sbb
jmp
mov
lock
inc
cmp
pop
jmp
and
fwait
or
rorl
adc
outsl
add
inc
jo
xchg
pushf
lea
sub
dec
cltd
sbb
or
cli
jmp
out
sti
and
push
inc
sbb
jg
xchg
xor
jne
test
pusha
dec
cmp
jo
repnz
dec
cwtl
dec
test
cs
test
and
sub
imul
out
pop
repz
mov
jmp
add
lcall
aam
lret
xchg
sti
inc
mov
xor
ret
test
adc
mov
or
jbe
roll
shll
mov
sub
push
arpl
inc
jmp
xor
xchg
push
push
sbb
jg
loopne
pop
add
xor
jbe
lods
dec
jb
cmp
std
dec
jp
pop
xor
xor
rol
sbb
lcall
rcrl
lret
adc
movsb
jmp
dec
sahf
sbb
xchg
popf
sub
call
jbe
sbb
repnz
cmc
mov
into
inc
inc
push
mov
xor
inc
repnz
mov
xor
dec
call
roll
test
add
mov
add
sbb
jb
and
dec
gs
mov
lret
pop
add
push
and
or
es
and
jecxz
inc
outsb
les
sub
dec
pop
lock
xor
xchg
loopne
inc
mov
push
dec
mov
out
cli
push
orb
pop
sbb
enter
mov
mov
fsqrt
int
jmp
mov
or
mov
mov
push
push
inc
sti
popa
add
mov
mov
xchg
adcb
sbb
mov
mov
rcrb
fsubs
cli
out
cld
add
inc
movq
adc
mov
nop
daa
divl
std
jp
gs
out
xchg
sub
mov
add
dec
lods
call
in
jecxz
or
jnp
push
sub
pop
push
and
rorl
rcrb
test
stos
setg
sub
cmpsb
jl
std
std
add
dec
push
mov
push
add
xchg
pop
popf
xlat
jo
sbb
out
fstpl
aad
addr16
lock
push
lods
test
and
xchg
iret
addl
cmpsb
cmpsl
dec
cs
push
xchg
or
mov
pop
mov
shlb
xchg
push
add
mov
into
cmpsl
pop
dec
add
push
pop
das
push
shlb
xchg
xchg
sbb
je
cld
loop
xlat
lahf
repnz
xor
add
mov
mov
and
adc
pop
and
stc
mov
push
mov
or
aam
dec
xor
add
out
xchg
xchg
fildll
pop
mov
ss
mov
mov
xor
or
xchg
adc
loope
lods
cmc
xchg
stos
jno
cs
cwtl
lods
mov
mull
loope
cli
cmp
std
imul
rcrl
cltd
popa
in
xchg
aad
sahf
dec
sahf
lret
test
and
inc
mov
test
test
rcr
test
addb
inc
imul
in
fisubrs
mov
dec
sbb
inc
hlt
into
stos
fnsave
xlat
js
rcrl
addr16
mov
xor
pop
or
push
out
lock
xor
mov
fistpl
pop
mov
push
fildll
mov
fcoms
out
xlat
cli
cmp
stos
sbb
sbb
sub
clc
add
aad
mov
jl
fisttpll
testb
fcomp
push
push
xchg
mov
sbb
or
or
jbe
stos
mov
clc
movsl
in
push
repnz
pop
jns
ds
lcall
sbbb
mov
adc
or
stos
xchg
mov
push
in
in
or
cmpsb
rcll
jle
cmpsb
cmp
xchg
sub
shlb
arpl
mov
imul
add
xchg
lahf
cli
ljmp
test
push
sbb
insb
gs
pusha
hlt
lcall
rcll
or
sub
lock
push
bound
inc
sbb
push
js
dec
mov
and
xor
popa
bound
pop
imul
add
add
adc
jae
xchg
out
daa
decl
mov
mov
dec
cli
xchg
xlat
inc
subb
shll
add
addr16
jns
les
xchg
movsb
dec
or
xchg
xchg
bound
jecxz
jle
adc
jmp
out
push
in
adc
popf
jle
rcrl
nop
xor
or
sub
pop
cmpl
fst
test
dec
mov
shl
lods
dec
data16
adc
add
adc
mov
cmp
movsl
or
inc
lods
xchg
inc
mov
cmp
out
sub
test
call
js
movsb
and
test
int
push
shr
aas
cmpsl
cmpsb
dec
dec
dec
or
fwait
mov
sarb
scas
sbb
push
mov
and
fsubrs
in
jbe
sub
les
loope
add
mov
out
out
mov
cmp
pop
cmp
rorl
mov
lret
lahf
jp
lds
push
cmpsl
inc
mov
mov
cs
mov
add
dec
test
gs
outsl
add
mov
mov
ljmp
adc
ljmp
mov
xchg
cld
test
cld
cld
and
xor
aaa
dec
push
fbld
pop
lcall
stc
mov
pop
jle
pop
mov
pop
dec
mov
sahf
fs
adc
enter
mov
jl
dec
mov
pop
add
js
mov
repz
loopne
mov
movsb
mov
outsb
lods
and
push
nop
mov
push
les
mov
outsb
cmp
mov
pop
cmpsb
into
shrb
mov
popf
inc
pop
ljmp
push
lcall
cmp
int
outsl
cmp
add
mov
pushf
aas
jecxz
sbb
push
add
xor
ja
decb
adc
mov
roll
out
xlat
sbb
cmpl
mov
cwtl
add
xchg
sbb
sarb
rcrb
add
enter
fsub
inc
sbb
add
lcall
sbb
inc
inc
cli
cmpsb
push
dec
scas
push
js
push
sub
mov
mov
mov
mov
xchg
loopne,pn
push
je
das
ret
into
xor
add
xchg
push
cmp
xchg
push
popa
jge
xor
and
mov
andb
jbe
inc
push
push
push
lods
xor
hlt
das
enter
dec
xor
mov
jmp
jle
es
fisttpll
movb
loope
mov
stos
sahf
and
lea
loope
xchg
roll
fs
mov
xor
add
leave
lods
pop
std
push
jbe
loope
jbe
adcb
sbb
or
add
ljmp
and
out
sbb
dec
scas
dec
sbb
or
push
jae
les
cmp
insb
xchg
mov
inc
xor
adc
add
adc
jne
cmp
test
shrl
test
cltd
xorb
test
loope
out
mov
push
inc
push
push
or
addr16
stos
add
mov
cmp
nop
xor
adc
xchg
push
cmp
sbb
fstps
xchg
add
es
and
xchg
test
test
movsl
xor
jle
orl
movsb
xor
clc
mov
outsb
sub
push
sbb
xchg
xchg
daa
mov
jp
andb
adc
cltd
adc
imul
pusha
jge
ljmp
inc
ljmp
and
iret
xchg
push
movsl
js
xchg
lods
sub
mov
pop
jbe
pop
fisubrl
mov
lods
add
ja
pop
ja
and
enter
jecxz
sbb
dec
aas
mov
andb
negl
inc
fisubrl
fnstenv
lock
sub
add
xor
out
lcall
jnp
jae
jb
push
and
inc
pusha
inc
cmpl
enter
mov
daa
sub
jo
into
daa
out
pop
jae
mov
popa
test
sbb
push
imul
clc
loope
cmpsb
int3
jp
js
inc
pmuludq
clc
mov
insl
jg
fwait
pop
cld
adc
imul
inc
flds
test
xchg
xchg
sbb
sub
in
push
sbb
jne
pop
lods
into
or
andl
jecxz
or
fstpl
jo
mov
scas
daa
mov
jno
mov
icebp
ror
repz
jmp
movsb
mov
sbb
addb
aaa
sub
dec
int
mov
lds
in
dec
jo
cltd
sub
arpl
hlt
dec
jae
fs
sub
push
push
sbb
mov
mov
lret
icebp
dec
dec
xor
mov
aam
test
test
sub
dec
mov
push
in
fstl
jecxz
ss
lahf
pop
dec
std
xchg
sbbb
inc
inc
fidivs
incl
lock
pop
mov
push
ficoms
loope
or
arpl
jno
popa
data16
test
push
stc
cli
loop
dec
icebp
adc
pop
cld
inc
push
aad
idivl
dec
jecxz
mov
pop
cmp
push
cmp
in
xchg
add
cmp
dec
mov
aas
xorb
orb
je
test
incl
push
add
rolb
sbb
pusha
push
fisubl
outsb
add
xchg
pop
dec
lcall
add
pop
and
out
push
sbb
jg
sub
and
dec
jge
pop
cmpsl
in
int3
xor
int
inc
jmp
clc
ja
movsb
mov
std
repz
sti
loope
daa
les
cmp
add
xor
icebp
outsl
jg
jo
jecxz
lret
mov
ret
jecxz
movsl
jmp
adc
lods
mov
mov
bound
push
mov
sbb
in
adc
mov
sub
xor
testb
push
inc
imul
popa
in
jae
cltd
push
xor
mov
push
into
jle
pushf
outsb
imul
xor
test
xor
mov
jno
or
cmp
xlat
mov
daa
call
cmp
test
fadd
scas
and
aaa
test
arpl
adc
ss
cmp
mov
in
pop
rcrb
rcl
les
das
test
mov
mov
xor
jge
and
subb
sbb
clc
sar
sub
xchg
setl
sub
rcr
loop
imul
scas
cmpsl
pop
stos
xor
movsl
cli
mov
fs
lret
inc
mov
xchg
and
xchg
push
cmc
and
jo
outsb
ret
pop
lcall
je
sbb
mov
jae
sbb
repnz
xor
loop
ret
dec
dec
sbb
and
mov
jmp
mov
ret
addr16
addr16
mov
fldl
repnz
mov
subl
mov
push
inc
mov
mov
jo
xlat
cwtl
shll
sub
out
enter
xlat
xor
mov
inc
aam
filds
nop
cmc
lock
or
mov
fst
lea
sahf
xor
test
mov
repnz
daa
rclb
inc
scas
mov
es
imul
in
sub
sbbb
jmp
lret
nop
xor
leave
cmp
cld
jbe
pop
fsubrl
mov
bound
icebp
arpl
int3
hlt
icebp
fstps
iret
int3
ljmp
add
cmc
addr16
pop
sbb
and
div
lcall
dec
xor
push
out
ret
lret
shl
dec
ss
call
adc
cmc
inc
and
inc
mov
dec
add
rcrl
push
orl
dec
dec
call
divb
mov
push
jecxz
mov
xlat
mov
mov
in
ja
outsl
cmp
int3
inc
clc
pop
pop
je
or
fdiv
or
inc
cli
and
in
test
ficoml
mov
cwtl
pop
jnp
sbb
sub
and
jno
sub
dec
movsl
xchg
push
push
daa
xchg
test
ds
jge
mov
pop
lods
pop
fisubrl
lea
pusha
and
divl
mov
push
xchg
int
out
or
adc
mov
cwtl
fstpl
mov
lret
in
mov
aas
adc
sar
cmc
shrb
inc
push
cmp
in
shlb
mov
mov
or
jl
ss
mov
mov
xchg
stos
push
adcb
fisubrs
dec
test
cltd
ret
ss
sahf
cwtl
jo
movsb
loop
in
xchg
inc
jg
pop
xlat
fstps
or
movsl
mov
inc
xlat
jle
xchg
xchg
test
jae
pop
cmp
jne
shlb
sbb
fmuls
dec
cmpsl
fwait
inc
adc
aad
xchg
jp
xor
ljmp
das
shr
jle
push
sub
adc
popa
pop
aad
fimuls
inc
ja
mov
popa
addr16
mov
fwait
dec
cmc
sahf
das
bound
ret
int3
sub
dec
cmp
popa
push
or
jns
mov
std
fmul
sbb
lods
add
xor
subb
sub
dec
inc
pop
dec
fldenv
cmp
hlt
xchg
inc
stos
aas
mov
into
lock
mov
cltd
jns
cmp
or
loop
fnstcw
adc
inc
cli
movsl
mov
or
add
jg
in
lret
test
je
loopne
sub
push
xor
test
shlb
fwait
int3
lock
fdivrs
mov
mov
mov
sahf
sbb
fcmovnu
mov
push
inc
jecxz
adcb
jge
scas
imul
cmp
fadds
or
inc
dec
int
test
nop
inc
sbbb
sbb
bound
out
cli
aam
loop
sbb
mov
cmp
cwtl
test
lahf
pop
insl
dec
cmp
pop
mov
cmc
xchg
fsub
repnz
or
fdivs
in
sub
or
lcall
adc
add
loopne
dec
rol
in
jbe
xor
pop
enter
aaa
lods
cld
popf
xor
arpl
xchg
push
push
or
sbbl
das
sub
in
push
iret
ret
jo
imul
adc
pop
dec
push
out
jae
cmpsl
pop
jns
dec
jmp
jnp
mov
aaa
fnstcw
jae
adc
shll
inc
frstor
mov
in
cltd
popa
jb
cmc
into
ljmp
stc
inc
outsl
adc
arpl
jb
cmpsb
cmp
lods
push
dec
rcrl
test
dec
mov
sbb
jne
inc
pop
pusha
jbe
cli
jno
jb
ss
xor
push
aaa
dec
pop
cmpsl
or
mov
dec
or
mov
loop
push
mov
ret
mov
ds
aas
mov
scas
adc
jb
push
cmp
loop
lcall
adc
inc
jecxz
dec
sub
inc
sbb
int
or
in
test
inc
hlt
jno
outsb
adc
shr
jl
inc
pop
subb
cmp
mov
push
jnp
aas
or
adc
push
popa
sub
outsl
leave
jae
ljmp
jecxz
popf
out
fstl
xor
leave
cmc
and
mov
inc
push
outsb
andl
mull
and
mov
outsb
pop
jg
sub
lahf
and
adc
dec
ret
lds
call
xacquire
js
mov
sub
add
push
pop
aas
push
dec
pop
sub
add
or
les
mov
shll
sub
lret
or
mov
aas
mov
mov
cli
mov
fsubrl
pop
xchg
push
cltd
sbb
ss
push
std
pushf
mov
loop
incl
xchg
add
out
jnp
cmc
adc
xchg
or
shll
pop
pop
fstpt
add
mov
cltd
pop
stos
mov
xchg
mov
sbb
mov
push
inc
es
sbb
ja
pop
mov
lahf
pop
lret
or
cmp
xor
out
sbb
or
icebp
outsb
sbb
shlb
in
and
adc
imul
sahf
jae
test
stos
popa
dec
js
je
gs
sbbb
iret
add
add
jp
dec
mov
mov
pop
lahf
std
sbb
decl
mov
push
mov
je
pop
add
cltd
xchg
das
cmp
stos
rorb
lock
mov
cwtl
pop
sub
pop
rcll
hlt
or
xchg
pop
test
sub
out
stos
mov
sub
mov
xorl
arpl
ret
mov
je
cmp
mov
push
lods
push
stos
xor
aaa
es
test
pop
in
and
inc
push
add
int
loopne
xchg
mov
xlat
pop
scas
mov
jle
adc
push
mov
enter
mov
out
dec
jb
and
sbb
int
fdivrl
pop
push
cltd
stos
ds
cmp
or
inc
les
mov
mov
sarb
mov
inc
and
loopne
test
sub
and
inc
add
jnp
jge
inc
leave
movsl
and
cli
pop
add
mov
mov
push
cwtl
insl
icebp
mov
into
cmpsb
imul
xchg
roll
mov
xor
mov
xchg
popa
fsubp
push
inc
pop
andl
ss
sbb
rcrl
push
out
xchg
adc
leave
cli
cmp
aas
aaa
mov
jle
pop
ret
xchg
jo
pusha
mov
popf
dec
xor
jnp
cwtl
xchg
or
push
mov
fcom
and
push
in
cld
inc
ret
rorb
iret
xchg
adc
ds
sti
mov
xor
addr16
sub
fdivrl
jns
ret
or
jbe
aas
and
iret
xor
stos
test
pop
dec
cmp
test
jne
addb
fnsave
or
imul
xor
sub
sahf
inc
dec
testb
dec
and
in
pop
adc
lret
leave
shrl
cltd
xlat
cmp
sbb
clc
pmaxsw
mov
je
mov
sub
adc
xor
shrl
loope
bound
mov
or
fistpl
shl
mov
test
inc
aad
test
add
ret
lret
call
fbld
pop
mov
jmp
pop
aad
out
ljmp
daa
xor
mov
sti
scas
dec
mov
push
enter
imul
inc
inc
push
pop
mov
in
jne
push
pushl
fldl
cmp
inc
ficompl
std
add
mov
sti
in
stos
addr16
js
mov
xchg
cmp
or
ds
add
imul
dec
cld
mov
sbb
stos
aam
mov
push
gs
dec
arpl
or
hlt
int3
stos
bound
lahf
andl
mov
idivb
insl
push
pop
mov
aad
adc
das
loopne
movsl
ret
adc
push
repnz
clc
cld
push
jmp
inc
jno
xchg
stc
or
and
pop
and
jmp
dec
mov
xor
mov
mov
lock
test
mov
enter
call
icebp
sti
aaa
inc
ljmp
jb
or
bound
xor
nop
dec
nop
insb
sbb
out
sti
xchg
out
pop
mov
cmp
dec
pop
jnp
and
es
or
inc
add
in
in
clc
mov
test
jg
mov
xchg
popa
xlat
xchg
adc
clc
inc
in
fnstcw
call
lcall
sub
ja
addr16
mov
in
inc
jns
shll
fisubl
in
lods
mov
cmc
lods
xchg
xor
sahf
outsb
pop
out
leave
nop
das
cmc
divb
out
push
das
cmpsl
xor
jo
cmp
mov
adc
pop
and
dec
and
ret
lds
inc
adc
cltd
pop
mov
fstl
xchg
arpl
jno
and
xor
xchg
mov
pop
pop
scas
jl
or
test
pusha
adc
call
cmp
sbb
imul
das
data16
mov
or
jp
fistpll
and
ja
sub
adc
mov
out
fidivrl
xor
pop
xchg
pop
mov
mov
addr16
dec
sub
or
jo
mov
adc
xchg
in
pop
std
clc
adc
fldcw
lcall
sub
push
imul
jo
push
outsb
hlt
xor
popl
sub
out
ret
cmp
jne
mov
dec
fdivrl
in
repnz
shlb
sti
push
iret
add
and
ja
imul
shrb
add
sub
adc
ret
sub
das
faddl
pop
aas
push
or
jnp
push
aad
shll
push
inc
in
xchg
dec
les
adc
pop
fnstcw
in
mov
shlb
jnp
xor
sbb
sbb
pop
sub
ret
hlt
data16
push
adc
jle
lods
and
imul
inc
add
add
and
and
shrl
dec
jl
mov
arpl
sbb
inc
int3
repz
popf
scas
add
int3
leave
jns
cmc
and
popf
dec
pop
cmc
xor
test
in
addl
divl
sub
outsb
sbb
leave
loop
loope
mov
inc
and
mov
xchg
xor
int3
pop
mov
push
mov
or
adc
cmpsb
xor
pop
lret
xchg
lret
bound
stos
jp
out
dec
rolb
dec
stc
ficoms
mov
xchg
pop
in
pop
inc
addl
and
jne
add
jl
jo
scas
mov
sub
imul
and
clc
popf
cwtl
cli
movsb
int3
repz
pop
mov
and
inc
fidivrs
and
daa
scas
cmp
jmp
lcall
cmp
adc
fildl
mov
daa
adc
pop
aam
pushf
test
xchg
cmp
call
inc
dec
popa
jns
hlt
icebp
nop
jp
mov
mov
xchg
aad
or
iret
rclb
scas
loope
fs
test
xlat
test
mov
jp
ds
lcall
cmp
jae
cmp
dec
dec
pop
mov
mov
and
xchg
adc
mov
pop
or
cmp
jbe
outsl
pushf
shlb
cltd
inc
adc
stos
bound
cmpsb
in
mov
add
mov
sbb
sti
test
aas
mov
or
and
or
popa
stos
dec
mov
rclb
outsb
add
sahf
sub
xor
mov
sahf
jb
idivb
mov
and
cmp
out
mov
push
movsl
nop
lret
mov
adc
mov
lea
lock
shlb
and
xlat
jne
insb
push
pushf
rolb
xor
and
filds
negb
inc
mov
aam
mov
lock
inc
sbb
and
clc
lds
ret
push
test
jno
inc
insb
mov
pop
xchg
jecxz
cmp
adc
lods
aas
in
in
fistl
cmp
sbb
mov
pop
das
stos
xchg
pop
insl
sbb
cmp
pop
loopne
push
lahf
add
lods
mov
mov
mov
sbbl
add
mov
mov
mov
ret
add
xchg
fists
xlat
push
push
xor
add
inc
jp
outsl
rcr
mov
out
pop
adc
and
lds
hlt
ljmp
mov
dec
shlb
data16
and
sub
in
pop
push
js
cmp
out
popa
cmp
pop
mov
addr16
cmp
dec
test
andl
ss
scas
cmpsl
psubq
test
cli
sub
outsb
push
dec
aaa
xor
or
fldcw
jo
js
sbb
and
xorb
pop
or
push
sbb
inc
cmpsb
sbb
fisubrl
push
cltd
xchg
leave
sbb
add
aas
xlat
hlt
mov
xor
fcoms
loope
dec
mov
xor
out
int
in
xor
mov
push
dec
lret
mov
cmp
popf
pop
push
das
lahf
nop
xor
out
sbb
icebp
iret
pop
mov
ss
clc
sbb
xor
pop
mov
push
push
sbb
jo
aaa
mov
stos
scas
loop
lods
js
inc
stc
lcall
sar
xchg
push
aaa
inc
lcall
fwait
call
mov
xchg
pop
pop
fldl2t
or
js
sbb
lret
push
aaa
xchg
shrb
pusha
test
pop
xor
sub
mulb
arpl
pop
xadd
ss
and
sub
and
pop
out
mov
lock
push
addr16
pop
movsb
ret
jo
xchg
mov
roll
jne
es
xchg
cwtl
pop
xorb
imull
nop
sbb
jecxz
cltd
sbb
lds
test
mov
fwait
aaa
cs
into
adc
mov
add
mov
pop
jp
jbe
or
andnps
aaa
loope
pop
mov
add
jo
jns
outsb
scas
inc
add
mov
out
dec
sarb
movsb
in
xor
jo
pop
inc
push
cwtl
sahf
loop
xor
push
jle
mov
pusha
inc
and
outsb
fildll
xchg
ret
in
mov
mov
mov
pop
jp
jle
nop
jae
mov
cmp
pop
pop
movsb
mov
cmp
addl
push
mov
test
test
xchg
cmp
pop
js
jae
hlt
ljmp
mov
inc
cmc
ljmp
mov
mov
testl
mov
fwait
jno
mov
mov
inc
aaa
cs
loopne
and
ss
and
or
jp
sub
xor
xlat
fs
or
pop
cmp
fwait
push
out
jmp
xor
enter
jae
xor
adc
sbb
cwtl
outsl
xor
mov
fildll
adc
cwtl
lret
ss
mov
lea
mov
loop
xchg
icebp
cmp
inc
call
sub
dec
xor
mov
push
cmc
int
scas
push
sub
mov
aad
inc
scas
or
lods
sti
push
les
movsb
jae
add
mov
add
pop
fcmovb
int3
or
pusha
fidivrl
sbb
into
push
mov
jo
lds
cmp
cmpsb
cmp
mov
mov
mov
ret
sbb
mov
sub
xlat
das
sti
fmull
add
test
inc
xchg
push
aas
or
nop
loop
or
xchg
mov
cmpsl
pusha
adc
dec
cmpsl
pushf
lds
inc
pop
scas
jns
and
push
xor
mov
jb
cmp
jge
push
mov
roll
imul
dec
out
shlb
xchg
scas
scas
or
mov
sub
ja
rclb
mov
jmp
push
add
divl
mov
sarl
or
incb
ljmp
loope
aas
int
push
inc
mov
lret
pshufw
add
jp
or
ja
cmpsl
push
mov
pushf
pop
mov
sahf
adc
loopne
xor
inc
adc
imul
inc
jg
mov
movsl
lods
hlt
mov
and
outsl
push
or
cmc
mov
or
fdecstp
lret
jbe
in
jg
mov
cwtl
adc
lods
mov
inc
lret
mov
das
sbb
hlt
ss
xor
mov
data16
xchg
pusha
sbb
lods
inc
xchg
xor
jo
and
adc
adc
je
insl
pop
icebp
xor
jno
or
jle
int3
inc
arpl
sbb
jns
and
cmpsl
out
jp
xchg
scas
xor
outsl
leave
jns
out
add
pop
sbb
aad
dec
add
lods
sti
inc
jge
test
add
outsl
sbb
lahf
sbb
cmpsb
push
xor
sahf
jl
js
outsb
inc
cli
lock
mov
outsl
ss
repz
dec
in
sbb
pop
cmp
add
dec
std
mov
inc
daa
enter
fistl
test
xbegin
and
loopne
add
adc
out
scas
loop
xor
fnop
imul
sub
and
push
push
test
push
and
and
xor
pop
push
les
inc
jecxz
ja
mov
or
lods
pop
xor
add
rdmsr
scas
mov
fistl
and
push
out
or
push
push
xor
sub
ljmp
sarb
mov
push
test
inc
xlat
sub
fldz
mov
push
test
mov
jbe
sub
cmc
icebp
dec
pop
xor
out
push
insb
sbb
ret
div
je
rcrb
sbb
sbb
fs
imull
sub
es
pop
rcr
inc
push
in
gs
mov
aam
test
clc
jle
icebp
or
ljmp
inc
jne
sarl
call
cmp
insb
or
sbb
ret
dec
pop
insb
dec
dec
lods
push
lea
push
jo
stos
in
int
push
mov
in
sbb
ss
rclb
add
rolb
cmp
xor
sub
jae
hlt
xchg
sub
sub
pop
cmp
xchg
mov
adc
bound
in
inc
sbbb
adc
cmp
lret
repnz
fs
sub
stc
lret
int3
outsl
aad
push
sbb
add
jl
lea
sub
xchg
dec
push
leave
iret
jne
jmp
xor
aad
fcoml
out
push
jp
loope
cmp
ss
shrl
ss
fisubrl
dec
aam
jno
xor
mov
js
insl
adcl
pop
inc
xor
adc
ljmp
mov
cmc
repnz
pushf
call
bnd
cmpsl
and
pop
cmpsb
dec
xor
dec
jo
add
inc
imul
xchg
or
fwait
cmp
mov
ss
pushf
or
mov
ja
loop
inc
icebp
cmp
test
scas
fs
mov
into
sub
push
cld
insb
stos
rcr
dec
cmpsl
gs
nop
adc
jmp
sbb
jne
mov
inc
jb
mov
cmp
add
shl
insb
mov
mov
insl
jns
ja
imul
jae
aam
xor
fnstcw
pop
daa
cmove
arpl
cmpsl
push
pop
lds
cmp
push
push
pop
dec
fnstcw
cmpsl
add
xchg
mov
pop
ss
ret
testl
mov
and
inc
js
cld
or
test
jg
cs
adc
scas
movsb
arpl
out
xchg
cmc
arpl
pop
scas
mov
stc
call
imul
test
je
cmp
mov
cmp
lea
push
call
add
ret
in
push
test
les
mov
int3
pop
lock
and
sbb
mov
or
inc
test
out
mov
add
push
or
ja
movb
faddl
icebp
rorl
aaa
add
push
fisttps
mov
dec
mov
inc
int
fistl
hlt
cmp
dec
mov
pop
adc
scas
mov
cmp
loopne
push
shl
push
or
fiaddl
mov
leave
pushl
sahf
popa
addr16
pusha
jae
popa
into
dec
jmp
sbb
jb
std
std
insl
jle
adc
and
dec
push
into
jno
bound
mov
inc
test
dec
or
sbb
mov
mov
rorb
sbb
jmp
lea
mov
aad
scas
sbb
in
clc
and
sbb
pop
lahf
lods
add
lcall
outsb
xchg
mov
aaa
cli
pusha
and
movsl
ficompl
loope
mov
xor
xchg
cmp
and
cmp
cld
testb
push
mov
ss
xchg
jp
ficoml
jns
or
cmc
int3
orl
shlb
bound
sub
xchg
addr16
jmp
fsubl
cmpsl
jge
pop
cmp
and
stos
jae
adc
out
ret
ja
ret
sbb
mov
or
pop
inc
sbb
lock
stc
fs
nop
inc
test
adc
out
or
subl
negb
pushf
adc
inc
push
nop
push
sbb
loopne
pop
jmp
or
pop
frstor
push
fs
addr16
es
pop
in
sbb
out
imul
fistps
mov
pop
push
or
jbe
outsb
xor
cmpsb
mov
dec
mov
mov
cs
shrl
test
es
push
in
push
lret
ficomps
pop
or
add
cli
or
sbb
inc
adc
mov
xchg
or
into
int
adc
and
ret
jnp
ja
and
mov
cs
jmp
jmp
pop
push
push
pop
xchg
mov
test
lds
les
ss
mov
insb
fsts
int
sbb
mov
jg
fwait
sub
sbb
cmp
mov
shr
sbb
or
scas
fdivrl
mov
out
pop
xor
jmp
std
out
or
inc
cmp
lret
mov
sbb
pop
fisubs
add
aas
pop
aad
mull
sti
push
xor
outsb
shlb
pop
jo
icebp
xchg
add
in
cmpsl
push
push
mov
mov
bnd
movsl
rorb
xor
ljmp
adc
push
push
add
aam
lret
xchg
bound
inc
inc
or
pop
out
jb
and
push
sub
leave
jo
xchg
int3
sbb
mov
ficompl
sbb
ror
mov
imul
pop
xor
or
bswap
aas
ja
lahf
jns
mov
lret
dec
adc
cmpsl
in
xchg
or
test
into
mov
das
sub
sub
pop
mov
cmc
mov
xchg
sti
jno
stos
mov
rcrl
xchg
pop
mov
cmp
xorb
sub
cwtl
jecxz
and
mov
xor
jae
dec
hlt
cmpsb
mov
sbb
inc
ret
mov
sub
and
mov
jae
xlat
test
mov
push
xor
inc
xor
test
push
pop
jle
lahf
jmp
jo
aas
dec
dec
xor
fs
cmp
mov
jp
popf
aaa
push
push
test
in
mov
mov
or
pop
xchg
movsl
notb
jle
cmp
inc
pop
add
xchg
mov
push
outsl
out
cmp
frstor
adc
sbb
scas
push
sarb
fmull
and
adc
or
or
sbb
mov
out
enter
push
add
adc
insl
sbb
adcl
rolb
jno
push
cld
hlt
stos
ss
add
sub
mov
popa
call
mull
xor
ljmp
aaa
pop
leave
sub
out
shr
xlat
add
adc
cli
jae
mov
push
dec
jle
mov
push
insb
inc
cltd
inc
and
dec
pusha
cmp
decl
and
insl
xor
mov
out
and
pop
mov
mov
jmp
lahf
ret
in
pop
inc
imul
cld
mov
je
xor
fldenv
imul
pop
lock
lock
notl
dec
popf
lods
push
ret
add
push
inc
cltd
mov
add
sbb
jecxz
and
shrl
dec
cmp
test
test
dec
pop
mov
lds
cwtl
loop
fisubrs
sbb
movsb
dec
data16
divb
mov
addb
jae
test
push
loope
jle
sbb
popf
shrl
xchg
int3
jecxz
jp
mov
ret
popf
pop
push
aad
and
inc
inc
rcrb
jns
or
insb
in
or
sub
jmp
out
repnz
cmpsb
add
xor
xchg
imul
ffreep
adcb
push
call
into
out
dec
mov
fisttps
ds
dec
sub
les
mov
loop
addr16
mov
fisubrs
popf
in
ljmp
lods
mov
adc
ljmp
lret
leave
test
sub
mov
call
jmp
xor
aaa
ret
adc
sbb
enter
daa
or
ret
mov
xlat
ja
xchg
push
out
mov
inc
cmpsl
push
ja
lock
cltd
fwait
aam
imul
stos
mov
push
cmp
gs
rcr
fdiv
xor
jns
ret
cmpsl
push
pop
cmc
jecxz
mov
cmpsl
or
sbb
jmp
push
sub
pop
out
mov
xchg
jo
scas
out
test
fmul
ss
add
pop
push
cs
sub
sarb
sbb
cmpsb
sub
js
call
test
cli
aam
xchg
popa
sub
jnp
fadds
lret
push
add
mov
push
sbb
popf
mov
in
popa
mov
mov
cmpsb
pop
les
testl
fwait
xchg
les
test
lods
xchg
jp
arpl
inc
dec
add
in
xchg
imul
aas
fmull
xor
cmp
rol
je
jne
nop
and
add
add
mov
push
jl
imull
jne
pop
pop
xchg
add
lret
addr16
cmp
stos
cmp
jecxz
push
mov
cmpb
sahf
adcl
outsb
mov
popa
xor
jg
cmp
bound
in
or
or
inc
ror
jo
ja
out
jmp
jecxz
out
mov
clc
xor
sub
in
jo
push
cmove
rorl
cmp
lods
iret
inc
fwait
mov
orb
push
sbb
aas
nop
enter
pop
mov
jbe
add
frstor
ret
pop
or
add
ss
pushf
dec
pop
stos
fistpl
pushf
fisubl
pop
cmpl
jecxz
dec
rolb
dec
aad
outsb
addb
scas
pop
inc
or
mov
cltd
dec
xor
das
lahf
mov
jbe
mov
sub
pop
and
test
adc
push
sub
data16
lods
push
mov
movsl
jecxz
cmp
pop
lds
xor
mov
ret
xchg
mov
mov
dec
cwtl
mov
inc
and
mov
pop
xadd
jecxz
xor
cmp
stc
push
shll
pop
or
mov
adc
jns
jl
dec
mov
mulb
adc
push
adcb
sbb
jne
inc
sbb
lahf
cmp
pop
cli
pmaxub
test
dec
lods
pop
dec
jnp
dec
jnp
pop
and
decl
inc
pop
cmc
lock
repz
mov
mov
cltd
daa
cmpsl
sbb
out
and
dec
lock
sub
gs
adc
xor
add
cmp
leave
fwait
dec
cmp
adc
ja
jne
scas
icebp
outsl
pop
and
insl
out
jle
inc
and
push
dec
inc
mov
push
jmp
mov
cli
jle
ret
inc
dec
sub
xorb
jmp
scas
std
neg
inc
clc
adc
mov
insb
arpl
call
lcall
xchg
fldcw
add
jne
lret
dec
imul
pop
fistps
mov
movsb
test
sahf
stos
jne
and
mov
jl
jg
inc
sbb
pop
sub
dec
aaa
outsb
out
jmp
push
pop
cld
pusha
outsb
into
adc
scas
cs
sub
fwait
mov
and
jno
in
push
xchg
xor
adc
lahf
mov
sbb
and
mov
pop
push
sub
call
imul
loope
push
outsb
cmc
int3
adc
pusha
or
pop
stc
icebp
insl
and
imul
add
cld
scas
fucom
mov
inc
xchg
or
sbb
dec
jl
out
lea
loopne
bound
mov
xor
pop
mov
dec
inc
sub
rcr
push
cmpsb
jo
repnz
push
in
jg
mov
outsl
cmpsb
aam
pushf
xor
or
and
push
or
sub
sub
mov
mov
dec
pop
sub
int
insb
imul
mov
notb
icebp
mov
mov
sub
jle
xchg
mov
inc
jne
mov
fistpll
cmp
loopne
jecxz
in
fwait
mov
sub
add
sbb
lcall
aam
in
enter
pop
lret
add
or
inc
and
pushf
xor
int3
push
lock
pop
ja
sub
xor
shlb
pushf
cmp
loop
mov
push
lret
enter
mov
dec
push
jae
inc
cmp
lods
sbb
or
bound
mov
testb
lret
xchg
pop
out
mov
pop
notb
and
out
leave
loope
pushf
add
out
imul
xchg
ss
xchg
call
aam
test
sbb
xchg
in
xchg
out
cmp
fists
sub
daa
scas
shll
mov
ds
lret
cmp
shl
and
ja
jb
add
push
mov
add
xor
fcomi
popf
xchg
enter
fs
and
cmp
mov
pop
fnsave
in
pushf
dec
sbb
pushf
popf
lea
adc
dec
and
out
mov
outsb
fcoml
int3
sarb
rcr
xor
xor
roll
lcall
sahf
and
pop
sub
outsl
sbb
jnp
das
jo
push
movsl
js
aas
sbb
insl
or
add
pop
lods
inc
lret
xorb
lea
fidivl
xor
cs
mov
xchg
sbb
mov
ljmp
std
inc
jo
imul
mov
fninit
imul
xchg
lret
dec
bound
shrl
cld
inc
das
lock
inc
pop
mov
adc
cmpl
mov
movsl
push
out
nop
loopne
push
ds
lahf
insl
inc
jmp
scas
mov
cmpsl
mov
fisubrl
data16
push
xlat
adc
jbe
mov
enter
je
idivb
lods
push
push
fnstcw
aad
adc
jbe
xchg
mov
icebp
ljmp
fidivs
mov
ret
std
xorl
inc
sti
push
popf
push
fnstsw
xchg
fnsave
out
nop
pusha
stc
adc
xchg
inc
and
aas
insl
cwtl
int3
cmp
dec
dec
push
pop
cs
mov
and
shr
adc
xchg
inc
je
mov
push
jae
xchg
lods
mov
add
sbb
ja
dec
sub
adc
scas
sbb
insl
pop
push
push
push
fildll
int3
adc
pop
xchg
loope
and
pop
fmuls
outsl
xchg
sbb
sbb
ljmp
popf
adc
inc
mov
sbb
pusha
and
jns
lret
xchg
repnz
and
inc
jl
xchg
les
add
lcall
ss
cmpsb
lods
mov
inc
loopne
jecxz
es
or
adc
push
pop
push
mov
stos
jl
inc
push
mov
cmp
dec
sti
adcb
xor
test
gs
clc
xor
pop
orb
call
cmpsb
cmp
in
mov
pop
rcrl
cmpsb
test
sbb
fidivs
inc
push
fmull
xchg
push
bound
and
push
mov
or
and
adc
andb
cmp
sub
ret
cwtl
mov
and
insl
loop
push
bound
cs
push
adc
jmp
mov
adc
data16
mov
or
cmc
fcmovb
popl
push
mov
sbb
jle
sub
packsswb
mov
sbb
out
cmp
arpl
lahf
mov
jno
cmpsl
sbb
hlt
ss
pop
jg
mov
test
dec
cmp
mov
sub
lds
adc
mov
insw
fldl
clc
mov
dec
mov
enter
ret
sbb
xchg
inc
stos
mov
pop
stos
xlat
inc
xor
fcmovnbe
xor
jg
push
orl
call
ss
aaa
addr16
mov
addl
aas
cmpsl
mov
lea
xlat
shlb
jae
xor
pop
shll
sbb
or
in
icebp
das
and
stos
xchg
cmp
xchg
repnz
int3
xchg
mov
mov
mov
or
sub
aaa
pop
add
sub
cwtl
cmc
ljmp
test
fsubrs
mov
orl
cli
jecxz
fnstcw
inc
pop
mov
inc
fdivrs
dec
out
test
cmp
pop
cmp
ljmp
shlb
in
dec
scas
je
lret
enter
adc
and
push
adc
push
push
cmp
xor
nop
in
in
out
jmp
or
repz
mov
insl
arpl
test
mov
shll
rorl
arpl
lahf
dec
in
pop
or
es
add
push
sbb
jmp
push
inc
loopne
std
stos
aas
add
mov
jmp
fstpt
jae
mov
sbb
cmpb
xorl
rcrl
scas
pcmpgtw
jb
fisubrs
popf
insl
aas
adc
sahf
aam
and
mov
xchg
add
das
add
mov
xchg
push
in
fldt
push
js
popl
insb
bnd
xor
cwtl
fbld
and
arpl
jp
and
shll
jo
dec
arpl
repz
inc
xchg
dec
mov
inc
fsubs
cmpsl
mov
adc
adc
aas
repnz
or
jl
sub
dec
mov
int
clc
cmpl
clc
pop
lea
leave
adc
dec
and
in
cmp
mov
mov
sbb
in
das
scas
sub
mov
adc
jns
add
dec
push
cmpsl
add
lock
popl
jo
mulb
cwtl
add
rcll
ja
pop
xchg
fxch
mov
pop
dec
mov
pop
pop
inc
add
mov
push
dec
aam
pushf
test
mov
out
cwtl
push
push
sub
mov
inc
sbb
dec
sbb
jne
jns
push
fdiv
jl
rcll
jmp
dec
dec
sbb
ja
dec
and
pop
pushl
jb
mov
mov
xchg
cld
xor
dec
in
push
sbb
or
sti
je
inc
push
in
iret
repz
pusha
dec
popa
imul
ret
fsubl
pop
test
rcrl
bound
pop
sti
sarb
bound
mov
lock
dec
test
mov
jle
jmp
sbb
daa
leave
sbb
dec
push
idiv
push
pop
jbe
lret
sub
fidivrs
sub
add
fdiv
mov
loopne
out
repnz
push
cmp
add
negl
dec
clc
cmp
mov
shrb
or
or
jg
jge
mov
loop
pop
loop
sub
mov
sar
mov
push
in
out
bound
sub
push
imul
loope
inc
cmp
adc
dec
out
and
cltd
jbe
orl
dec
out
stc
aaa
imul
sbb
shrb
sahf
jl
push
mov
adc
sbb
ficoms
clc
or
fcoml
mov
das
mov
sarb
mov
xlat
dec
std
mov
and
in
gs
adc
pop
cmovnp
and
pop
movsb
push
fmuls
test
pop
jns
xchg
shll
jecxz
je
mov
and
pop
rorb
repnz
xchg
push
pop
lret
fcmovb
add
icebp
mov
xor
jno
movsb
dec
dec
xchg
xchg
das
dec
jb
push
adc
mov
xchg
pop
adc
stc
repnz
sbbb
sub
leave
add
negl
sbb
cmpsl
lea
fisubrl
fldl
jns
imul
test
sarl
fs
aad
test
push
add
pop
xchg
imul
push
mov
mov
sub
outsb
mov
gs
lods
inc
mov
or
inc
pop
test
sti
lcall
jge
lret
ds
les
hlt
xchg
cld
add
movsb
push
jno
pushf
add
cs
and
loopne
iret
mov
cmp
push
pop
xor
mov
ja,pn
push
or
repz
rolb
adc
repz
rcrl
je
mov
cltd
pop
ja
xchg
shr
lcall
pop
xchg
pop
or
enter
sub
push
bound
repz
fwait
cmpb
sub
fwait
dec
into
in
sbb
push
int3
movsl
xchg
jae
adcl
jne
lcall
sub
fsubl
out
cmp
xchg
jmp
lcall
push
inc
lods
movsb
cwtl
into
dec
test
loope
stc
jge
pop
mov
test
lahf
and
xchg
sub
aaa
fisubrl
mov
xor
mov
or
je
and
xor
mov
fidivs
in
cli
pop
fists
sbb
mov
mov
sahf
dec
xor
mov
and
icebp
insb
cmp
fcomps
dec
addr16
jecxz
mov
mov
loopne
pop
movsb
inc
out
loop
dec
scas
add
push
push
gs
cmp
sub
lods
mov
insb
inc
sub
rorb
aas
hlt
data16
mov
push
jmp
aas
ficoml
dec
add
jne
lods
in
jnp
lock
sbb
pop
mov
jbe
and
movsb
jb
stos
xor
dec
or
mov
out
xchg
rclb
xchg
popf
jb
fistpll
push
loopne
push
and
sub
xchg
ljmp
or
xchg
aam
fmull
push
inc
notb
daa
addr16
lds
test
scas
lea
dec
xchg
jne
mov
and
xor
add
push
xchg
cmp
fstl
test
pop
hlt
or
mov
mov
in
push
jmp
mov
adc
mov
or
in
rcr
cmp
cmp
push
aaa
dec
gs
dec
cmp
and
mov
and
jle
mov
int
and
jae
mov
in
hlt
or
mov
mov
daa
out
pop
out
mov
into
dec
adc
mov
fsubr
inc
or
aad
mov
push
jne
push
popf
nop
ss
ja
sbb
pop
push
out
mov
aaa
mov
shll
dec
icebp
es
shl
pop
es
and
hlt
and
fwait
imul
lahf
stos
aas
cmp
fldt
mov
mov
addr16
push
sbb
in
shrb
pop
push
adc
bound
mov
test
loop
mov
adc
xchg
add
aas
popa
outsl
sbb
push
hlt
scas
pop
or
adc
dec
lahf
xchg
adc
sbb
push
js
mov
xor
jp
mov
cmp
js
icebp
lds
imul
shrb
loope
and
inc
mov
xchg
mov
push
movsl
movsb
lock
in
sub
adc
lcall
ja
fcomps
add
std
mov
adc
ret
into
inc
rcrb
sbb
mov
into
add
mov
cwtl
rclb
outsl
fidivs
cmp
mov
cli
clc
mov
lods
pop
sub
xor
int3
push
jecxz
popf
pop
push
fimull
jbe
cmp
call
cmp
add
adc
mov
popf
sub
mov
xchg
pop
mov
sbb
xchg
call
xchg
ljmp
sbb
aas
add
push
or
and
movsb
lock
mul
lahf
jnp
pop
add
pop
addr16
mov
inc
inc
icebp
incb
out
clc
lahf
ss
fwait
sbb
push
mov
xchg
or
into
mov
shlb
repnz
insb
mov
cmp
stos
push
aam
or
in
sbb
mov
std
adcb
add
xor
lea
xorl
mov
enter
inc
clc
xchg
push
lods
xchg
lds
push
lods
xchg
or
mov
lcall
movsb
push
or
inc
cmp
and
into
push
add
pop
scas
insl
out
sbb
sarb
xchg
stos
je
bound
jp
jno
jmp
js
add
mov
insl
fucomp
imul
xchg
inc
out
cmpsl
dec
adc
mov
int
fprem1
pop
sbb
pop
inc
shlb
xor
mov
inc
jecxz
mov
nop
sbb
adc
xchg
mov
xor
setne
mov
sbb
add
int
xor
lahf
jns
inc
dec
sub
mov
popf
and
jge
add
push
mov
cld
pop
lock
mov
dec
inc
nop
pop
pusha
loopne
int3
fistpll
and
adc
in
lret
insl
mov
inc
jb
mov
xor
into
mov
mov
js,pn
xchg
jbe
xor
sti
or
dec
mov
pop
repnz
and
lds
aad
fs
popf
jns
into
inc
adc
hlt
lea
pop
xchg
imull
xchg
jno
fmuls
mov
xor
xchg
lret
xchg
cmp
mov
mov
mov
sub
or
mov
add
mov
inc
dec
mov
clc
iret
pop
insb
mov
repz
push
sbb
daa
sbb
fisubrs
xorl
lret
sbb
inc
shlb
or
pop
out
add
mov
push
outsb
in
aam
call
int3
in
pop
pop
hlt
int
iret
sbb
mov
xchg
jmp
mov
mov
int3
add
xchg
movsb
xor
test
mov
shlb
mov
and
bound
sbbb
or
outsb
rcrb
repnz
cltd
rorb
js
shlb
pop
mov
xchg
mov
notb
dec
pop
nop
and
inc
or
movsb
push
or
ret
push
add
mov
dec
xchg
inc
mov
addb
in
inc
or
cmp
sub
cltd
lret
or
cld
mov
pop
mov
mov
xchg
push
aam
mov
stos
into
mov
clc
cmp
push
jno
jnp
mov
and
and
jg
sbb
ficoml
jae
daa
aas
jmp
in
sub
sub
inc
addl
cmp
jns
dec
data16
pop
scas
pop
mov
shll
pushf
inc
ljmp
adc
and
sub
fst
ret
mov
pop
fdivrs
add
das
cmpsb
inc
scas
adc
dec
mov
int
lds
pop
inc
mov
dec
mov
xor
outsl
add
mov
test
loopne
adc
out
cmpb
xchg
add
xlat
add
jge
aaa
mov
xlat
adc
stc
inc
pop
movsb
fst
pop
fwait
cmp
hlt
mov
rcrl
loop
movntq
shl
outsb
lahf
arpl
mov
cltd
mov
pxor
xchg
cs
rclb
mov
test
je
or
test
adc
rolb
ret
sub
jno
xchg
pop
das
jae
call
mov
pop
mov
cmpsl
shlb
ss
mov
or
mov
and
or
add
cmp
popf
stos
xchg
gs
fildl
cmc
out
mov
in
aaa
xor
dec
std
cmpsl
lret
xor
sub
popa
push
push
xor
scas
or
and
faddl
sbb
mov
push
and
sub
sub
jle
xchg
xchg
jge
and
mov
insl
dec
push
or
loopne
cli
jb
dec
push
cmp
rcrb
xchg
adc
aaa
xchg
lods
xchg
frstor
out
and
and
jbe
xchg
push
aas
ljmp
sub
popf
test
clc
ret
or
jmp
aas
inc
inc
hlt
icebp
hlt
inc
mov
cmpsl
xchg
cmc
sbb
sbb
push
push
fdivrs
ds
mov
xchg
pusha
add
add
push
add
pop
stos
jmp
and
add
sbb
adc
decb
add
pop
mov
mov
mov
lods
adc
dec
addr16
ja
xchg
or
or
push
fldt
adc
and
adcb
push
fisubl
inc
popf
dec
out
push
dec
cmpl
push
add
das
fs
jne
out
mov
mov
clc
pop
cs
std
and
jns
adc
push
inc
ljmp
pushl
sbb
adcl
fisubs
cltd
sbb
adc
psraw
cmp
mov
sub
inc
or
int
out
and
mov
out
adc
mov
jo
sbb
sahf
jbe
mov
or
and
shlb
push
xor
loope
push
pop
fs
mov
and
aam
cltd
fs
and
jo
xor
add
lods
mov
out
push
pop
push
cmp
mov
in
ficoms
popl
jl
dec
push
daa
nop
scas
xchg
hlt
pop
cld
add
adc
and
lods
add
mov
mov
push
in
ret
fwait
push
test
mov
out
jp
push
jb
cmc
mov
imul
sarb
jp
mov
cmpsl
in
dec
push
fidivs
enter
clc
add
cmpsl
adc
xorl
fsubs
cmpl
div
sbb
lcall
or
or
cmp
xor
xchg
push
dec
into
ds
inc
or
or
sub
cmp
out
sub
dec
insl
cmp
jmp
adcb
test
xor
cmp
outsl
xchg
stos
dec
inc
push
add
in
cs
mov
insl
sahf
sbb
or
outsb
mov
cmp
jns
xor
jnp
daa
cmp
stos
fidivrl
push
shrb
cmp
scas
jbe
fbld
xor
and
jae
xlat
pop
inc
in
popa
test
xor
insb
fcomps
lcall
xlat
test
pusha
leave
xchg
dec
pop
call
xchg
imul
int3
sub
js
mov
pop
xor
jbe
lcall
fsubr
call
xor
or
pop
int3
inc
test
sbb
roll
cmpb
call
xchg
dec
mov
sub
mov
or
mov
arpl
pop
inc
xchg
insl
fisttpll
pop
xchg
xlat
jle
imul
lods
sub
and
data16
or
cmpsl
jbe
lret
out
cmp
dec
mov
sarl
outsl
dec
in
cmp
out
xchg
and
inc
imul
lock
xchg
fildll
xchg
mov
adc
inc
shrl
jecxz
push
call
xor
xor
addr16
mov
mov
ret
mov
dec
fildl
jae
test
xchg
and
push
sti
push
js
aam
shlb
xor
or
scas
and
xchg
mov
decb
and
or
repz
data16
inc
popf
push
insb
pop
mov
push
repz
outsb
sarb
addr16
das
es
pop
and
inc
pop
movsl
cmpsb
xor
pop
lahf
dec
jne
movsl
push
xchg
mov
movsl
inc
test
jp
jmp
fimuls
loopne
xchg
fwait
jecxz
xorl
mov
push
dec
sub
inc
adc
enter
loopne
outsb
inc
sarl
sub
xor
mov
leave
aam
jle
fsubl
insl
fbld
test
pop
das
mov
fsts
cmpb
cmp
sub
addr16
cmpsb
cmp
cmp
push
cmp
xor
test
cwtl
xor
lock
add
enter
push
xchg
cmpsl
pop
lea
je
push
or
arpl
pop
pop
pop
inc
pop
sub
insl
add
sarl
loope
into
xor
lods
sti
pop
sub
mov
xor
inc
mov
adcb
mov
pusha
dec
xchg
lods
hlt
gs
cmpl
cmpsb
loopne
data16
aad
sarl
insl
add
repz
mov
std
rol
aas
in
cmp
aaa
mov
ret
in
repz
pop
inc
xor
movsb
and
push
cli
andl
ret
cltd
add
inc
aaa
into
xor
xlat
inc
cmp
pop
fs
rcrl
mov
rcr
adc
mov
mov
out
jnp
pop
repz
jb
stos
inc
cmp
mov
mov
test
or
sub
aad
inc
adc
cmp
lods
and
push
or
sbb
fildl
dec
or
xchg
pop
cs
lret
jle
fstps
dec
pop
push
push
mov
mov
pop
push
dec
out
movsl
cmp
mov
cmp
adc
jbe
icebp
ss
and
jecxz
loop
xchg
cltd
xor
sub
jmp
xchg
arpl
push
cltd
xor
add
pop
or
fiaddl
jns
add
add
ffree
push
sbb
adcl
or
and
dec
xor
jae
push
mov
sub
nop
sub
dec
add
xor
loope
test
jecxz
add
das
movsl
ljmp
icebp
mov
call
cmp
mov
jge
cli
das
cmpsl
mov
jbe
mov
jg
ja
lcall
pop
mov
cld
in
xor
int3
call
inc
mov
mov
mov
hlt
pop
daa
xlat
imul
sbbl
fwait
divl
lahf
dec
adc
out
adc
leave
mov
dec
sbb
hlt
mov
push
icebp
dec
push
xchg
int
cmp
test
ja
jo
movsb
dec
outsl
je
dec
xchg
lret
aaa
jns
adc
lds
lcall
add
sahf
sub
cmp
lcall
fwait
cli
pop
jle
out
pop
imul
mov
fld
test
cmpb
int3
pop
icebp
loope
adc
sbb
add
mov
dec
adc
cld
sbbb
sbb
inc
test
and
ljmp
mov
jecxz
pop
scas
fwait
xlat
push
xor
xor
adc
addr16
fdivl
dec
cmp
insl
adc
inc
stos
int3
or
xchg
out
jl
jne
cmpsb
iret
cli
enter
and
push
lret
pusha
lods
cmp
insl
scas
inc
sub
xchg
ds
fimull
fiadds
enter
and
sub
mov
popf
jmp
loope
popf
insl
cld
mov
mov
aaa
dec
int
lahf
imul
idivl
aas
sub
xlat
aas
add
dec
int
push
push
cwtl
push
inc
je
xchg
xchg
push
mov
loopne
jno
outsl
sbb
adc
jp
and
pop
mov
cli
testb
fisubl
adc
mov
cmpsb
xor
xor
mov
inc
aad
into
out
mov
repnz
imull
jae
xor
sbb
cmpsl
or
stos
or
sbb
out
mov
xor
imul
jge
loopne
adc
insb
add
loopne
jo
push
adc
xchg
and
div
or
cmp
jmp
pop
pop
pop
inc
lea
add
aas
push
in
popa
fisttpll
cwtl
and
fdivrp
mov
xchg
addr16
jge
fucomi
and
xchg
fimull
pop
daa
aad
xchg
add
stos
lahf
movsb
xchg
movsl
aas
aad
ret
jns
mov
or
push
mov
sbb
cmp
cmp
jno
inc
stos
mov
call
int
outsb
inc
out
jb
out
loopne
pop
cltd
push
push
leave
xlat
push
xchg
sub
cmp
int3
xchg
jmp
jbe
and
mov
test
sti
fstl
jl
jae
push
out
pop
lods
mov
inc
inc
clc
mov
mov
mov
imul
fstps
pop
push
lret
enter
inc
mov
sub
mov
jnp
pop
xor
stc
jbe
je
xchg
adc
test
pop
js
sahf
daa
js
cmc
subl
xchg
ds
jno
sub
hlt
mov
aas
pop
mov
xlat
mov
xor
mov
test
mov
xchg
push
and
jne
or
nop
pop
dec
or
adc
adc
mov
daa
mov
stos
ds
push
mov
or
loopne
les
jno
xchg
mov
jg
dec
stos
stos
add
mov
mov
pop
aas
pop
ficomps
and
lahf
xor
push
jne
test
outsl
cmp
mov
or
leave
cs
aad
shl
popa
clc
aaa
data16
pop
dec
cmpsb
or
add
xchg
sub
jns
pop
xchg
outsl
pop
in
push
pop
in
loopne
outsb
or
test
xchg
aaa
lods
test
xor
sti
push
cltd
dec
in
outsb
fistl
fistpll
cmpsl
test
notb
mov
xor
les
loope
loope
pop
mov
int3
loop
in
ljmp
popf
nop
sbb
insl
inc
cli
cmp
xchg
movsl
push
jg
push
pop
out
and
jcxz
cwtl
inc
leave
mov
in
or
sbb
shrl
ficoms
xor
incl
add
mov
mov
imul
mov
inc
ds
pop
sbbb
daa
jg
add
ja
stc
into
cmpxchg8b
enter
cmp
clc
push
sbb
or
jb
lods
cmpsl
lds
and
xor
rcr
les
imul
adc
test
push
or
mov
jecxz
mov
add
adc
leave
je
pushf
subl
xchg
pop
push
rcl
lods
scas
sbb
pop
in
pop
stos
in
xor
xor
push
or
sub
pop
cmc
jmp
data16
xchg
leave
insb
mov
je
mov
int
pop
pushf
jg
cld
notb
in
add
xchg
movsl
nop
push
scas
pop
pop
lea
pop
in
adc
subb
push
jle
mov
hlt
sub
pop
cmp
mov
mov
out
mov
mov
lea
pop
sbb
inc
mov
dec
lret
and
mov
pop
pop
xchg
scas
data16
xorb
mov
jnp
ja
dec
or
push
icebp
lahf
mov
sub
sti
push
dec
ljmp
pop
lret
cmp
ds
jb
mov
inc
sbb
cwtl
sub
cmp
scas
bound
in
imull
adc
test
stos
and
cs
xor
roll
mov
aaa
jae
ret
inc
dec
ljmp
pop
lahf
imul
outsl
loop
mov
inc
ds
lock
lea
xchg
out
push
nop
int3
dec
dec
movsl
popa
add
or
cwtl
mov
xor
ss
jp
push
cld
test
mov
mov
ljmp
mov
std
rorl
in
ss
imul
sbb
test
lods
sub
mov
mov
je
shl
push
clc
mov
fisttpl
adc
ds
mov
lds
dec
inc
cmp
xor
in
push
mov
mov
adc
lds
outsb
pop
cmp
push
outsb
outsb
xor
xchg
insb
dec
rcrl
xchg
xchg
cmp
in
in
rol
out
mov
mov
movsb
push
push
cmp
mov
insb
adc
and
dec
and
xlat
sbb
dec
repnz
sahf
mov
jmp
or
mov
je
das
and
jne
ficoms
les
test
fiadds
stc
test
imul
xchg
xchg
or
add
inc
shl
rcl
imul
sbbl
mov
ficoml
out
add
sub
pushf
insl
les
aad
mov
in
out
aaa
dec
jae
lret
lds
data16
mov
jbe
rorb
mov
fwait
out
cmpsb
mov
or
or
cld
push
scas
pop
dec
or
mov
repz
fmulp
or
cli
inc
mov
lods
ja
data16
out
xor
mov
xlat
xchg
fsubr
cmpb
xrelease
lods
enter
dec
lods
lahf
pop
scas
lods
sub
jmp
sub
add
into
pushf
pop
cmp
pop
mov
adc
cmp
xor
jl
push
roll
in
lods
aas
shrl
add
add
repz
inc
push
pop
mov
es
stos
adcb
and
sbb
add
cmp
adc
dec
xchg
aad
jg
cmc
mov
cld
pop
bound
icebp
push
insl
int3
xor
test
fcomp
outsb
push
in
fbstp
jmp
dec
test
mov
iret
or
pop
add
dec
popf
pop
sub
enter
rorb
ficomps
pushf
jo
xchg
or
movsl
dec
xchg
jecxz
fstps
std
jl
insb
inc
hlt
fs
cmc
fs
pop
test
adc
adc
in
xchg
in
dec
add
test
add
lods
sti
dec
aam
addb
js
xchg
das
ds
add
fildll
pop
push
and
push
xchg
mov
test
mov
cmc
inc
push
or
lods
jnp
add
in
shlb
mov
loopne
pop
test
inc
popa
je
add
movsl
loopne
xor
sbb
pop
inc
popa
push
int
xchg
mov
push
xlat
xor
add
jmp
loop
push
xchg
xchg
movb
mov
dec
jo
lock
enter
dec
mov
rcr
mov
out
xlat
out
lods
mov
aad
jbe
push
mov
das
mov
test
repnz
xlat
sbbb
mov
sub
or
adc
loop
lcall
das
cwtl
test
dec
lods
push
shll
mov
imul
idivl
xlat
popf
and
cmp
and
inc
dec
test
filds
fwait
mov
cmp
aad
sar
and
icebp
cmp
mov
aaa
add
adc
in
push
insl
in
imul
or
mov
push
out
xchg
data16
lahf
sub
mov
imul
out
adc
mov
cmpsb
jbe
and
in
fistpl
xchg
mov
mov
jne
add
adc
inc
lea
xchg
xchg
test
xchg
add
je
fs
sarb
push
ja
roll
inc
daa
daa
shll
pusha
jmp
push
jns
push
pusha
xor
rclb
dec
xrelease
sahf
imul
out
mov
lock
arpl
jo
into
or
pop
and
lods
or
jae
mov
aam
and
xchg
loop
xchg
mov
inc
or
iret
fstps
xor
add
mov
or
add
aaa
sti
test
sahf
inc
adc
sti
fimull
test
push
dec
inc
cmp
insb
pushf
and
dec
cmp
push
mov
jl
adc
jns
enter
pop
add
dec
stc
mov
jmp
push
test
sbb
pushf
jno
das
rcrb
mov
sbb
loope
inc
push
inc
sbb
sbb
cli
inc
je
fsubrs
xchg
push
lret
leave
jbe
jne
jmp
int3
jnp
mov
jno
mov
rorl
mov
xchg
icebp
push
add
dec
jne
fldln2
mov
jns
sub
inc
nop
jne
imul
lock
std
inc
mov
xchg
stc
add
addr16
popa
paddusw
dec
arpl
ret
jp
jmp
clc
imul
mov
lret
imul
sub
pop
and
or
adc
fyl2xp1
add
lock
loopne
cmp
out
aam
pop
xchg
frstor
adc
push
and
sub
dec
cmp
pop
push
adc
cmc
adc
scas
insl
or
inc
pop
les
push
out
sub
mov
dec
lcall
decl
mov
pushf
pop
add
pop
xchg
or
sti
ret
sti
shll
jp
and
pop
mov
ljmp
sub
xor
cld
cmpsl
push
adc
mov
mov
pop
pusha
imul
jo
inc
push
mov
xlat
xchg
cmp
inc
and
cld
ret
xlat
mov
fiadds
pushf
cmp
scas
or
scas
ljmp
cld
mov
inc
xor
scas
cmpps
cs
or
xchg
sub
pop
pop
mov
stos
je
lock
lds
jb
push
and
outsl
ret
enter
fistps
adc
add
fildl
xor
fwait
xchg
sub
rorb
xor
enter
inc
lods
gs
ljmp
dec
push
dec
push
fldt
repz
enter
loop,pt
sub
lret
sub
or
pop
mov
mov
lahf
ja
repz
mov
out
pop
in
pusha
add
add
pop
imul
and
int
jno
into
inc
mov
data16
cmpsl
push
pop
mov
inc
mov
scas
loop
ret
pushf
mov
iret
cwtl
and
icebp
push
aad
fnstcw
and
aad
cmp
fadds
mov
in
hlt
inc
ljmp
mov
mov
pop
add
aam
dec
cmp
push
mov
ljmp
add
cs
lcall
aad
popa
adc
hlt
inc
mov
scas
icebp
cmp
dec
jmp
in
pop
scas
dec
ret
outsl
notb
push
popa
rcll
fwait
mov
adc
pusha
push
and
out
stos
insb
xorl
push
out
sbb
cmp
in
jge
pushf
mov
addb
lock
pop
test
xchg
inc
add
xchg
push
inc
jo
add
xlat
ljmp
cmc
inc
addr16
xchg
outsb
in
lea
xchg
out
pop
xchg
ss
lods
sbb
test
cmp
rclb
pop
pop
jns
dec
mov
lret
popa
jl
addr16
mov
cmp
adc
inc
loopne
mov
inc
add
mov
xor
outsl
xchg
cld
rcll
add
and
sub
out
pushf
xchg
jg
adc
aaa
shlb
add
cmp
cwtl
add
hlt
mov
orb
sbb
jae
das
fnstsw
test
xor
vpextrw
lds
cmp
int3
or
cs
das
adc
sbb
jnp
loop
dec
mov
outsl
out
xchg
in
inc
addr16
les
inc
sub
and
fbld
lcall
fwait
push
outsl
fsub
add
xchg
inc
sub
push
jl
pop
ljmp
mov
and
ret
lret
dec
jmp
data16
inc
incl
inc
mov
ja
xor
mov
sub
jne
je
icebp
push
dec
and
jl
les
daa
add
scas
dec
js
xchg
test
in
add
dec
popf
out
adc
mov
sub
pop
ja
mov
sub
cmpsl
sbb
inc
add
mov
cmp
js
dec
ljmp
icebp
into
out
addr16
fsubrl
or
push
out
and
sub
sub
xor
mov
imul
inc
mov
and
icebp
pushf
mov
cmp
jae
jge
mov
mov
in
or
fcmovne
movl
or
shrl
es
jne
push
mov
xchg
push
push
jecxz
inc
lcall
movsb
roll
lret
or
and
mov
shl
push
ret
adc
add
jp
pop
ret
mov
xchg
sbbl
iret
iret
into
mov
icebp
push
std
push
dec
lret
jle
pushf
movsl
leave
cli
pop
jo
dec
or
dec
clc
pop
adc
jg
sbb
adc
mov
mov
dec
xchg
out
lock
xchg
or
in
mov
ret
sar
scas
pop
in
mov
mov
jle
test
push
mov
pop
cmp
cwtl
push
cmp
cmpl
jne
mov
pop
mov
sub
push
into
jo
mov
sti
rol
xchg
les
push
mov
outsb
jne
push
mov
in
stc
out
push
outsl
test
stc
jno
mov
nop
sub
mov
lds
jbe
cld
pop
jp
jns
xor
mov
rol
mov
sub
ret
scas
cli
dec
sub
push
fildl
xchg
repz
jge
shrl
arpl
outsb
jbe
xlat
ror
jg
ret
push
stc
adc
popa
lock
mov
aam
popa
or
jae
push
add
movsl
jge
add
insl
mov
adc
ficomps
addb
test
cmpsb
ds
xlat
xor
inc
sbb
das
push
xor
cmp
jg
pop
pop
inc
push
lods
lret
fcmovbe
lock
mov
jmp
sub
mov
adc
and
subb
xor
sarl
sub
pop
mov
addb
xor
in
adcl
in
nop
add
cmp
xchg
mov
inc
imul
das
mov
pop
sub
gs
mov
jns
add
shlb
mov
jmp
das
or
push
xor
addr16
testb
and
push
ljmp
sbb
inc
push
jmp
pop
js
push
xchg
decb
js
mov
fsubrl
lret
xor
or
fdivrs
adc
aam
adc
inc
std
jmp
dec
cltd
push
adc
or
xor
roll
adc
push
push
mov
ret
mov
rdpmc
mov
lods
scas
stos
jle
and
scas
xchg
push
in
out
mov
lret
sarl
xchg
pop
add
sbb
outsb
xor
add
lcall
test
fwait
push
imul
fisttps
push
or
pop
cmp
xchg
iret
rcr
rcr
dec
sbbb
rcr
add
adc
jns
or
pop
mov
iret
jp
inc
rolb
in
in
lret
cmc
sbb
dec
subb
mov
jp
lods
rcrl
mov
dec
push
sbb
jmp
dec
sti
clc
sub
out
adc
jne
xor
fsincos
movsb
loope
cmp
call
stos
xor
movsl
add
fldcw
out
data16
cmp
xor
dec
pop
das
jg
std
test
sarb
and
in
pop
mov
or
movsb
lods
hlt
imul
pop
test
jp
loop
pop
pushl
in
shll
cmpsl
inc
mov
ljmp
popa
dec
scas
sti
popf
dec
pop
xor
aam
xor
mov
das
je
mov
scas
mov
pop
xchg
cmpsb
xchg
ret
mov
insb
dec
aas
das
ffree
popf
popf
hlt
jmp
les
xor
loop
xchg
push
xchg
insb
std
out
adc
jle
lds
adc
pop
and
jb
adc
data16
lcall
inc
clc
pop
fstpt
sub
jmp
or
ret
ret
cmp
call
cmp
loope
test
mov
in
repz
mov
or
pushf
cwtl
push
shlb
sub
inc
stos
stos
std
pop
xor
lret
sub
stos
mov
mov
push
popa
fs
fcoms
insb
xor
jp
push
subb
test
stos
mov
int
cmpl
fildll
lcall
dec
xor
clc
in
mov
add
inc
loopne
or
fwait
stc
addl
dec
ficoms
xchg
lods
sbb
inc
aad
shlb
sub
pop
add
notb
out
mov
pop
imul
into
orb
iret
mov
adc
dec
test
inc
pusha
cmc
mov
add
jmp
mov
add
aas
cs
adc
xor
inc
imul
xor
iret
jae
icebp
js
mov
xorb
sti
enter
test
insb
mov
mov
lret
in
js
fidivl
in
cmpxchg
pop
ljmp
sub
loopne
repnz
andb
shlb
ljmp
aas
mov
push
jb
push
cmc
je
push
jae
jp
add
push
push
loope
dec
sub
xor
push
rcrl
mov
std
bound
je
lret
sbb
mov
xor
call
lock
push
fisttps
lods
jg
in
pushl
je
pop
xchg
lea
fistpll
pusha
das
adc
mov
xchg
fs
xchg
sub
xor
jnp
dec
and
sbb
jg
sub
xlat
fimull
add
sbb
dec
or
mov
das
push
test
addl
push
cmp
pop
in
call
adc
push
ljmp
js
fcmovnu
dec
dec
pop
pushf
sub
jp
dec
lahf
lret
jb
sbb
xchg
jae
insl
push
add
cmp
xor
jne
lret
inc
ja
xlat
pop
mov
aas
test
int
mov
adc
nop
mov
adc
sbb
incl
repnz
ret
subl
in
xor
pop
sub
add
imul
pop
sahf
loop
fs
pop
fucomi
fs
aam
scas
sbb
adc
in
icebp
jp
out
popa
out
push
dec
ret
lahf
sub
dec
mov
lock
das
cmc
sbb
sub
mov
mov
cmp
sub
stc
jne
push
ss
pop
cmpsb
out
mov
fisubrs
xchg
inc
sub
pop
or
cmp
int3
aam
ret
sar
jp
mov
nop
sub
sbbb
and
push
loope
mov
adc
test
mov
loopne
pusha
sbb
cmpsl
dec
mov
jl
push
aam
cld
sarb
push
test
stos
or
arpl
mov
add
fsubrp
jbe
dec
xor
mov
cmp
xchg
cmp
lock
mov
mov
push
lock
mov
outsl
insb
mov
adc
push
sbb
push
lret
mov
fs
add
imul
jae
outsb
rcl
adc
daa
push
ljmp
ss
push
lcall
outsb
cmp
xchg
mov
roll
push
js
adc
movsl
inc
pushf
jg
fisttps
jecxz
adc
xor
cmpsb
loope
sahf
sbb
xlat
lods
test
and
jmp
pushl
jb
xchg
push
arpl
fiaddl
and
cmp
call
dec
lock
stos
outsb
popl
xor
call
and
inc
cmp
repz
out
jbe
adc
loop
sub
lds
jae
dec
jmp
add
mov
int
sub
adc
fildl
loop
jecxz
mov
xor
cmp
fcmovnb
subb
mov
mov
cltd
push
lods
inc
enter
add
rorb
data16
ret
xor
sub
sub
push
xchg
push
shlb
add
pop
pop
ja
nop
mov
inc
ljmp
daa
sub
lret
and
inc
xchg
sbb
int3
xchg
mov
cmp
idiv
push
mov
lret
xchg
js
mov
fcmovne
jnp
mov
popf
loopne
xor
stc
push
jbe
push
std
push
lahf
adc
mov
daa
xlat
lea
das
jae
nop
adc
adc
aas
call
jns
rcrb
xchg
insb
cmp
inc
add
or
cmp
aas
sub
ret
jnp
lahf
lcall
mov
xchg
push
jmp
andl
inc
fcomps
sbb
pop
or
pop
adc
mov
sub
cmpb
hlt
cmp
adc
push
es
fdivrs
mov
mov
or
rclb
mov
mov
fwait
pop
xchg
push
mov
stos
cwtl
stos
inc
in
ljmp
and
arpl
popa
popa
sbb
mov
ja
lcall
out
lahf
or
xchg
pop
jnp
cmpsb
and
cmp
aas
lret
mov
sub
insl
inc
jb
inc
lea
or
ret
es
fidivrl
jecxz
aam
data16
nop
xchg
mov
movsl
push
iret
scas
outsb
inc
dec
fimull
ret
pop
jno
adc
scas
and
cmp
dec
xor
movsl
xor
adc
mov
adc
mov
and
push
dec
sub
jg
mov
sbb
mov
pop
shll
adc
mov
or
mov
test
out
ss
pop
hlt
cmp
and
loopne
jae
insb
gs
mov
loope
gs
mov
sbb
fs
sbb
icebp
dec
xor
sti
cmp
repnz
je
cwtl
jbe
cwtl
or
sub
in
push
or
jns
lret
pop
jecxz
sub
ret
inc
in
xor
mov
xchg
mov
scas
mov
jp
adc
push
mov
or
sarb
ret
adc
daa
cwtl
inc
decb
test
in
sub
dec
push
mov
movl
xchg
jbe
push
mov
push
adc
loop
fnsave
or
jle
mov
xchg
xchg
and
popf
test
sbb
jle
mov
xor
in
sahf
dec
mulb
jb
or
cmc
stc
inc
or
imul
insb
push
push
push
imul
and
jae
mov
jle
sub
xchg
mov
xor
popf
movsl
lcall
jns
inc
aam
enter
test
lea
leave
jle
sub
or
mov
in
in
mov
fs
adc
rorb
aaa
insb
in
mov
and
push
xor
jmp
push
repnz
mov
iret
in
addb
xchg
adc
sub
mov
pop
add
add
icebp
mov
iret
mov
push
std
pusha
add
jp
cvtpi2ps
pop
lret
pop
adc
dec
sub
xchg
jp
popa
insl
add
dec
ja
xchg
mov
loopne
fsubl
mov
rcr
outsl
out
les
nop
add
and
aaa
jnp
xor
adc
mov
push
movsl
cltd
test
jae
repz
mov
int3
out
cld
mov
imul
cmpsb
pusha
sub
insl
dec
push
xor
pop
inc
movsb
ret
imul
jp
out
lcall
iret
shrb
enter
xchg
ds
outsb
out
dec
iret
rolb
jg
and
lahf
xchg
mov
jnp
cmc
xchg
xor
pushf
stos
iret
xor
outsl
cltd
mov
dec
jae
dec
and
insl
pop
jmp
push
or
into
fwait
mov
aam
pushf
in
dec
mov
sahf
sub
inc
mov
jb
jmp
dec
mov
out
xchg
mov
push
int
dec
sub
dec
popa
push
movsl
inc
roll
aaa
adc
and
mulb
cmp
lock
jnp
in
lds
dec
or
repz
adc
fucom
ss
mov
lods
xor
sub
sbb
push
das
sbb
test
xor
mull
adc
xchg
mov
fs
pop
int3
rclb
mov
sub
mov
fbstp
insb
adc
xor
movsl
int3
mov
push
in
mov
in
repz
mov
jns
rcrl
lods
inc
push
xor
shlb
lcall
mov
mov
inc
stc
mov
push
xchg
jns
loopne
lret
jns
cmpsl
sahf
es
push
adc
or
mov
ds
mov
adc
sbb
popf
xchg
lods
mov
test
pop
jns
in
repnz
flds
jl
mov
shrl
pop
sahf
inc
cmp
jb
sbb
in
stc
int
push
aad
loopne
sub
es
mov
call
inc
adc
cmpl
mov
es
mov
pop
mov
jp
xchg
fiaddl
rclb
int3
jmp
cmp
sbb
vmovaps
aaa
xor
cmp
mov
sub
pop
shlb
jecxz
jecxz
stc
rcrb
into
cmpsl
push
aam
int3
insb
sti
cmc
movsl
outsl
daa
or
call
and
lods
lret
mov
mov
or
dec
sbb
inc
cmpsb
mov
mov
in
out
add
lods
xchg
repnz
cmp
inc
insl
mov
inc
jecxz
push
add
mov
outsl
mov
lock
jge
inc
in
movsb
dec
or
pop
out
test
mov
cmp
js
into
dec
mov
jae
mov
jge
mov
jb
movsb
bound
dec
jae
cmpsl
daa
adc
mov
jne
cmp
cmp
jne
fisubrl
push
lods
mulb
fwait
pop
mov
jg
aad
repnz
leave
shlb
in
loope
movsl
stc
mov
cmp
adc
insb
cmp
jb
scas
std
jmp
ret
or
adc
mov
push
mov
sbb
cmp
das
pop
mov
popf
cld
xchg
movsl
push
xlat
and
rcll
loopne
mov
out
xchg
rolb
inc
jnp
in
jg
adc
push
std
dec
fidivrl
xchg
jge
xchg
movsl
and
dec
mov
out
cmp
or
mov
mov
pop
push
or
out
add
add
mov
popf
les
push
fcmovb
test
aas
or
insb
inc
pop
filds
inc
mov
in
sbb
inc
xchg
sub
loope
add
and
xchg
jge
popa
clc
movsl
xchg
fmull
push
insl
aaa
ret
aas
imul
pop
fisubrl
rclb
adc
out
mov
incb
pop
shrb
addr16
inc
push
pop
std
jmp
stc
jmp
dec
das
mov
pop
inc
add
les
adc
dec
mov
lahf
cltd
mov
in
aas
mov
add
gs
icebp
mov
lret
sbb
ficomps
nop
sbb
xchg
into
pop
movsl
fisubs
xchg
push
ret
push
push
out
hlt
jl
pop
lock
int3
xlat
lods
xchg
insb
arpl
inc
push
lret
adc
loop
fs
jg
or
cmp
test
fucom
outsb
mov
lret
sbbl
mov
add
xor
pop
mov
adc
mov
pushf
je
dec
xor
cmp
mov
divb
xor
xchg
xor
mov
clc
cmpl
jecxz
pop
jg
xchg
adc
dec
mov
cs
sarl
push
xor
jmp
pop
pop
ds
mov
fistpll
ss
jo
in
shlb
imul
fidivl
addr16
rolb
inc
dec
aad
shlb
gs
out
fsubl
popa
int
adc
pop
in
movsl
xlat
mov
test
push
divb
cmp
sub
xchg
in
iret
clc
ret
push
cltd
ret
or
leave
sbb
and
pop
outsb
sub
gs
mov
jb
dec
mov
imul
pop
lahf
sub
fsubrs
popa
fisubrs
push
data16
lahf
sbb
dec
lock
cmpsl
out
pop
sub
jbe
sub
mov
push
std
movsb
mov
bound
lahf
or
test
jno
dec
push
jle
sbb
sbb
out
sub
pop
and
stos
jb
sub
add
ss
cmp
arpl
idiv
imul
dec
ret
cmp
popa
stos
repnz
movb
js
pop
fwait
mov
add
imul
icebp
lret
aam
xor
cltd
add
and
fs
sti
xor
inc
subb
fiadds
mov
xor
or
and
pop
int
cmp
int3
stc
jno
mov
movsl
inc
mov
clc
call
and
jge
fdivl
add
insl
out
test
xchg
lds
js
in
lds
jno
xor
sub
stc
push
cwtl
cli
jecxz
sub
or
jbe
out
sbb
xchg
sub
and
or
pushf
inc
adcb
mov
aad
cltd
shll
inc
icebp
ljmp
js
stc
sub
or
shrl
jnp
adc
mov
xor
and
sahf
stos
sbb
es
std
ret
xchg
out
dec
sbb
jne
aad
sbb
stc
das
dec
jge
mov
ds
adc
or
push
js
and
mov
mov
pop
outsb
add
clc
sarb
mul
xor
xor
mov
sub
xlat
fildl
test
xchg
add
mov
mov
inc
fs
ja
sarb
test
xchg
xchg
stc
movsb
enter
jb
cmpsl
lahf
fisubl
js
popf
repz
stc
jae
add
sbb
sub
ss
xchg
lret
jmp
outsl
imul
cmpsb
into
push
into
dec
int
fistps
pushf
adc
vpmacsdd
add
push
push
xchg
lret
pushf
ss
xorl
lret
sub
out
mov
clc
andl
sub
xor
aad
pop
add
fnstsw
out
shr
lds
mov
cwtl
push
frstor
loope
insl
pop
push
pop
xor
cmp
clc
xlat
jne
fnstcw
jae
sbb
jb
enter
mov
shrw
xchg
jl
shrb
iret
push
dec
fimuls
xchg
pop
add
xchg
push
jno
mov
jecxz
jns
lock
movsb
popf
daa
daa
stc
arpl
inc
mov
das
mov
ss
ds
fisttps
inc
jecxz
jl
out
push
adc
rcrb
cld
xchg
sub
jne
mov
xchg
push
jmp
mov
inc
push
addr16
fcomi
and
pushf
icebp
cmp
loopne
add
dec
sti
out
jns
inc
out
push
inc
lds
push
sti
pop
negl
movsl
pop
add
mov
jne
cmpxchg
fcoml
movsl
pop
lods
mov
push
flds
xchg
int
jbe
into
xchg
add
xchg
pop
gs
mov
daa
xchg
lods
sub
fidivl
adc
xchg
fadd
ja
out
lahf
idiv
test
imul
xor
in
test
jbe
adc
and
inc
test
aam
out
ljmp
inc
cmp
sbb
pop
mov
imul
pop
mov
call
dec
cmp
sub
pop
dec
jno
fwait
cmp
jl
cmpsb
stc
lea
jmp
mov
frstor
and
ja
enter
mov
push
lock
jb
out
frstor
std
hlt
pop
xor
lahf
add
stos
mov
addr16
jmp
hlt
cmpsb
icebp
dec
jmp
jno
pop
xchg
sbb
or
icebp
mov
les
movsl
out
jle
aas
ss
bound
add
xchg
adc
dec
push
mov
lcall
cmp
add
repz
es
das
dec
xchg
or
lds
jg
int
lret
sahf
sbb
fists
push
dec
push
cltd
sub
sar
mov
inc
sbb
arpl
push
sahf
xchg
push
sbb
sbb
lcall
pusha
pop
push
insl
cmp
xor
sbb
inc
mov
push
insl
add
or
add
jbe
or
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
in
cmp
or
cld
cmp
add
sbb
add
hlt
test
add
add
add
add
adc
or
and
or
ss
dec
or
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
