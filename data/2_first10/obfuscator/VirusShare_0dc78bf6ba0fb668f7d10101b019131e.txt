inc
mov
std
sub
out
subl
mov
lcall
test
mov
mov
sub
adc
inc
test
pop
or
jg
scas
add
xchg
lcall
xor
popa
mov
hlt
arpl
movsl
xchg
ja
sbb
fld
lods
movsl
xor
fwait
jae
fisubrl
cmp
xchg
push
sbb
and
mov
xlat
xchg
cmc
cmp
movsl
jo
les
or
jae
mov
or
dec
jge
aam
mov
loopne
xorl
into
push
pop
inc
mov
xchg
mov
outsb
mov
dec
xchg
shrb
cmp
xchg
mov
cmp
mov
jae
cmpsb
mov
adc
insb
xchg
mov
out
pop
xchg
mov
cmp
imulb
mov
outsl
or
iret
lods
sbb
ret
or
mov
call
insl
lahf
pop
mov
cld
insl
call
test
pop
push
sahf
lahf
xchg
sub
pushf
outsl
testb
push
pop
cld
xlat
cmpb
mov
and
add
pusha
fidivrs
inc
inc
mov
jae
adcb
fsubr
jge
inc
inc
jno
jmp
insl
outsl
push
fadds
mov
push
or
arpl
add
divl
ss
sarb
popf
push
and
lods
addr16
pop
jb
or
rorl
ss
ret
mov
mov
fmull
loop
das
aaa
cmp
add
push
cmp
or
mov
sbb
leave
pop
ljmp
popf
lahf
xchg
or
add
mov
add
push
inc
xchg
cmp
int
pusha
dec
es
test
push
sbb
jns
xor
outsl
mov
imul
fcom
into
popa
jne
cmp
les
mov
loope
inc
outsl
mov
push
aas
xchg
mov
fs
lods
jnp
mov
dec
lea
xor
je
stos
inc
inc
lods
xor
out
mov
and
mov
das
sahf
scas
jno
xchg
mov
push
inc
push
add
movsl
dec
ds
push
pop
cmp
stos
push
insl
sub
adc
jle
aaa
mov
repz
ret
push
loopne
fxch
mov
cli
push
mov
lods
jno
rol
mov
sub
add
stc
aad
rcr
sub
int3
fdivs
push
pop
xor
mov
or
cmp
js
outsl
inc
xor
ljmp
bswap
add
divl
or
mov
and
xchg
push
sub
adc
push
flds
push
jecxz
mov
push
mov
ss
and
jnp
jge
cltd
arpl
icebp
mov
movsl
lods
clc
scas
adc
jnp
imul
jbe
popa
lock
dec
rorl
stc
cmp
mov
pop
nop
pop
dec
mov
mov
or
test
aam
mov
lea
cmp
push
testb
sbb
fsts
nop
xchg
adc
scas
fidivrl
aaa
xlat
ret
jg
lds
bound
sbb
cs
and
pop
jae
pop
xor
pushf
or
movsl
lea
or
sbb
mov
imul
frstor
rcrl
pop
sbb
lock
and
push
mov
and
dec
lahf
mov
mov
lock
pop
loope
fwait
xchg
sub
dec
mov
xchg
mov
les
jecxz
xlat
movsb
orl
int3
mov
fisttpl
cmp
repnz
and
pop
inc
arpl
in
xorl
pop
mov
xchg
out
xchg
rcrb
leave
jno
cmpsl
cmp
and
jg
sahf
jno
lret
push
push
jmp
loope
mov
lea
pop
pop
mov
jnp
in
sbb
lahf
pop
xor
stos
mov
xchg
pop
xchg
and
mov
rclb
mov
gs
mov
push
inc
adc
call
mov
mov
adc
out
subl
movsl
push
cld
cld
leave
push
andl
xor
adc
subb
ja
push
pop
sub
sub
push
cmp
jns
lods
test
adc
dec
inc
sbb
cld
das
loope
imul
lahf
shl
add
xlat
popf
xchg
inc
push
rcr
jge
pop
jo
mov
add
addr16
and
repz
out
xor
aaa
bts
or
pop
push
ja
popf
xchg
lock
fidivs
sbb
mov
int3
mov
icebp
push
in
lcall
sub
lahf
dec
lods
and
roll
push
pushf
cwtl
icebp
xchg
lahf
femms
outsb
mov
jns
add
es
or
faddl
push
fdivs
hlt
push
jno
dec
popa
jbe
mov
dec
and
cltd
pop
fcoml
std
push
aaa
jno
dec
adc
pop
jl
mov
push
pop
mov
mov
xor
and
xor
int3
aam
and
bnd
lea
push
push
mov
push
xor
or
scas
pop
nop
pushf
xor
test
gs
and
fwait
and
and
inc
les
fisubl
icebp
xchg
cmp
mov
mov
test
dec
ret
ja
or
stos
mov
add
adc
int3
jb
xor
pop
popf
cpuid
jge
or
loopne
lea
and
insb
loopne
mov
clc
add
in
pop
repnz
and
jl
mov
sbb
jns
pop
daa
sbb
mov
fcomp
dec
ds
sbb
gs
ss
sbb
sbb
jae
movsb
xor
or
jne
or
lcall
int3
outsb
dec
pusha
ret
int3
aad
aam
arpl
and
lods
mov
out
mov
dec
in
bnd
xlat
adc
xchg
lahf
push
cmp
aad
mov
in
mov
in
clc
dec
sub
mov
shrb
xor
xchg
movsb
cmpsb
insb
std
cmp
adc
or
jle
xlat
dec
in
add
cmp
in
pop
imul
push
pop
les
rcrl
and
and
adcb
dec
dec
scas
out
cmp
xor
in
dec
or
rep
mov
mov
xchg
sahf
ret
repz
pop
popa
push
adc
fs
xor
sahf
pop
add
mov
aas
js
or
aad
xchg
lds
aas
cmpsb
or
xlat
andb
addr16
ret
pop
fs
jns
stos
cli
sarl
into
dec
or
in
test
dec
sbb
inc
jo
hlt
int
jo
popa
cwtl
xchg
mov
mov
mov
mul
stos
shrb
shufps
shrb
xor
nop
loop
sar
add
sahf
sti
lea
dec
adc
insl
aas
mov
popf
in
out
xlat
into
aaa
stos
push
sbb
and
popf
aam
dec
sbb
popf
fidivrl
js
add
cli
ret
jg
mov
aam
test
int3
jns
jle
jecxz
pop
mov
sti
ljmp
xlat
or
inc
xchg
push
mov
test
dec
inc
into
sbb
out
jle
movsl
ja
cli
mov
lock
cmp
stos
arpl
inc
mov
movsb
stos
lahf
dec
je
fdivs
fwait
pop
xchg
cmp
pop
outsl
leave
sahf
shll
je
fistl
or
mov
outsb
sarl
mov
dec
jno
fsubr
pop
pushf
stos
pop
cmp
xor
fcmovnbe
rorb
sbb
or
xor
jns
inc
mov
iret
xchg
lock
mov
das
fcoms
pop
cmp
rorl
sbb
outsl
sub
jns
jg
mov
popf
mov
out
mov
dec
sbb
cmc
mov
sub
mov
dec
ffree
sahf
ljmp
pop
add
fbld
shlb
bts
dec
xchg
xchg
movsb
cld
push
dec
in
push
pop
sarl
in
sub
ucomiss
movsb
pop
and
mov
or
pop
aad
inc
aaa
stc
dec
push
clc
dec
dec
push
dec
inc
loopne
int
call
jecxz
mov
out
pop
insl
sub
scas
rorl
mov
push
mov
dec
inc
or
jne
push
fidivl
mov
sub
sub
fnstcw
imul
adc
xchg
xlat
inc
arpl
and
cmp
repnz
push
movsl
mov
add
mov
outsb
jo
mov
ljmp
test
cmpsb
adc
cmc
ja
mulb
xchg
loope
xor
cmp
jno
pop
imul
roll
adc
dec
cmp
sti
sbb
xor
and
cmpsb
jl
jp,pt
nop
rclb
xor
dec
bound
daa
scas
test
aaa
dec
and
aam
aaa
mov
push
cld
jnp
call
adc
aad
jecxz
sub
pop
or
stc
decb
or
push
dec
sarb
adc
jmp
lahf
or
sarb
mov
es
jnp
aaa
push
inc
bswap
nop
nop
cmpb
jae
mov
mov
mov
cmpsb
arpl
sbb
ss
inc
mov
outsb
mov
mulb
pop
cld
mov
add
or
loopne
jge
cmovno
adc
cli
test
mov
dec
shr
sbb
into
enter
sarl
adc
cmovp
fsts
cmp
dec
mov
loop
lea
xor
jb
pop
aaa
maskmovq
divl
and
push
adc
ds
cld
cmp
in
xchg
movsb
pop
in
xchg
loope
sbb
test
inc
push
outsb
dec
adc
push
push
int
mov
inc
xor
pop
mov
stos
dec
out
mov
xchg
cltd
jns
fildl
std
inc
push
or
popf
add
insl
dec
lret
add
dec
jp
popf
xchg
push
sub
test
xor
sbb
cmpb
cwtl
xchg
pop
and
and
adc
fwait
ret
dec
jmp
cmp
lcall
sub
fisttps
inc
pop
fidivrs
dec
push
push
in
adc
pop
cli
icebp
cs
xor
out
push
movsl
sbb
out
jecxz
dec
cmc
test
lea
cld
icebp
shll
lcall
dec
mov
aaa
pop
test
hlt
sbb
fs
je
cmp
sbb
push
sti
mov
jnp
adc
int
fldt
mov
repz
pusha
mov
sahf
xchg
adc
jne
xor
or
xor
cwtl
lahf
dec
arpl
js
xchg
sbb
ficomps
fwait
subb
testl
dec
aam
adc
mov
mov
clc
dec
inc
cld
in
lock
pop
inc
mov
jmp
out
cmp
addr16
addb
push
sbb
mov
mov
pop
out
inc
add
ret
rclb
in
lcall
pop
lcall
push
jnp
fistl
mov
lahf
ret
dec
arpl
fimull
and
and
fdiv
push
or
outsb
sbb
insl
mov
out
mov
mov
xlat
jbe
ja
ret
mov
sahf
inc
xor
xchg
sbb
inc
xchg
repnz
icebp
push
ficoml
jae
imul
pop
cmp
mov
lahf
mov
vmaxpd
cmp
loop
jb
add
add
add
sbb
fadds
std
xchg
mov
fmull
sahf
outsb
cmp
inc
in
outsl
repnz
push
add
mov
mov
pop
jmp
cltd
mov
push
es
or
xor
mov
inc
dec
cmp
das
mov
cmp
hlt
dec
lds
mov
pop
xor
sti
scas
mov
loop
jp
rcl
mov
test
xlat
into
dec
mov
movsl
aam
in
xchg
jp
cmp
popf
mov
sti
mull
gs
inc
in
cli
sub
lods
dec
incb
testb
lea
push
popf
rcrb
or
inc
daa
out
cmp
mov
fcmovu
sbb
dec
mov
fidivrl
repz
cmp
data16
mov
push
sub
test
mov
jnp
jecxz
outsl
push
xchg
jg
push
dec
loop
lds
jns
and
sbb
push
mov
add
lods
and
imul
pop
arpl
cmpsl
paddusw
seto
mov
mov
push
aas
and
in
hlt
data16
stos
mov
fbstp
shrl
rcrl
and
insb
leave
inc
push
add
inc
xchg
pop
cwtl
repz
xchg
and
pop
insb
dec
cltd
jno,pt
sahf
sar
cmpsl
gs
hlt
lcall
popa
enter
push
and
ljmp
lcall
jecxz
scas
les
xorb
jl
cmp
mov
ss
scas
inc
loope
push
daa
out
and
cmp
pop
repnz
inc
mov
gs
vphaddubd
mov
hlt
adc
xchg
or
lods
ds
dec
cld
aad
sub
out
fisttpll
nop
sti
lock
or
imul
pminsw
xor
out
sti
leave
js
jg
jns
imul
popf
dec
xchg
fdivl
inc
sbb
cmp
leave
insl
std
sub
in
mov
or
xchg
xor
jae
popa
xlat
movsl
push
dec
sbb
mov
inc
sbb
jl
xchg
inc
adc
stos
mov
cmp
jbe
xchg
mov
mov
mov
mov
les
push
and
lock
push
sahf
and
push
addl
lcall
ret
mov
push
pop
jp
mov
mov
push
int3
cmpsb
pop
pop
push
add
leave
ja
pushf
xchg
mulb
dec
push
stos
mov
mull
push
testl
cmp
repnz
mov
add
rorl
cmp
int3
test
mov
push
mov
xor
sbb
stos
push
mov
jb
imul
mov
inc
icebp
mov
addr16
aad
mov
adc
clc
sbb
pop
inc
sbb
sahf
cmp
out
paddw
add
push
push
mov
push
or
push
pop
fistps
ds
mov
xchg
loopne
sbb
push
sbbb
jmp
mov
fwait
popa
mov
jo
jno
jle
in
mov
jecxz
push
lahf
add
shrb
xchg
mov
scas
push
push
lods
mov
sub
inc
sbb
cmp
aaa
xchg
loop
sub
mov
idivb
nop
in
cwtl
xchg
mov
jp
lock
cwtl
jbe
fsubrl
sbb
and
pop
call
loope
dec
cmp
push
aam
jb
pop
pop
push
lods
sbb
push
mov
mov
mov
mov
add
stc
or
lods
sbb
je
jle
sub
push
lock
loop
adc
xchg
jle
cld
push
out
ja
jbe
test
insb
sbb
push
int
stos
fs
scas
lea
xchg
and
sbb
mov
cld
sub
fsubrp
js
shrl
dec
dec
and
test
fsubrs
aam
cmpsb
add
sub
pushf
mov
es
mov
cmp
fs
loopne
test
shl
or
rdmsr
inc
je
cmp
pop
js
mov
dec
orb
gs
fildll
inc
imull
lods
sub
xor
in
ror
sub
pop
cmc
pusha
add
xchg
push
jle
daa
pop
push
sbb
xor
arpl
mov
mov
clc
pushf
stos
mov
mov
enter
xor
or
or
cld
sub
dec
xor
mov
addr16
arpl
movsl
xor
das
jecxz
das
mov
sahf
push
sbb
pop
test
out
loop
movsb
les
cwtl
cmp
test
jne
adc
fdiv
insl
aas
mov
repnz
or
push
sarl
lods
xchg
cmpsl
jns
adc
imul
leave
in
dec
icebp
jbe
jnp
test
and
fldenv
xchg
sbb
or
fnstenv
mov
rorb
fldt
sub
mov
icebp
gs
in
dec
aas
stc
pop
loope
inc
add
mov
sbb
cmpsb
xchg
pop
cs
repnz
roll
inc
fs
mov
lret
push
mov
sbb
dec
xchg
adc
ds
fnstcw
pushl
in
xchg
mov
je
movsb
or
pop
mov
mov
add
mov
dec
xchg
mov
out
shrb
jno
jle
push
rcrb
or
pop
scas
stos
in
and
je
loopne
shlb
ss
or
or
icebp
xchg
dec
gs
jp
cmp
pop
cmp
popa
pusha
jne
cmpsb
mov
xor
popa
loopne
mov
not
fcomi
icebp
inc
sbb
enter
jmp
add
pop
fstpt
roll
rcl
xchg
push
push
outsl
xchg
adc
js
loope
dec
push
scas
insl
xor
sahf
int3
test
daa
jno
xchg
inc
in
jge
xchg
jle
sahf
stos
lret
sbb
add
sbb
jmp
sahf
push
jns
cmp
fnstenv
ret
jne
ret
and
pop
xor
dec
dec
inc
rolb
jmp
shll
js
lock
sbb
mov
xchg
add
push
cwtl
adc
cmp
dec
sarl
test
push
out
divb
ret
sub
adc
rorb
je
dec
sub
outsb
dec
loop
test
int3
jnp
or
mulb
fstl
mov
xor
mov
push
jo
jne
aam
popa
dec
push
or
sub
lds
rcll
outsl
sub
fs
inc
pop
mov
or
stos
je,pt
notb
sub
mov
fiadds
add
inc
xchg
lds
jmp
mov
add
jbe
shrl
pop
test
push
and
es
mov
clc
xor
cli
frstor
cwtl
mov
cltd
cmp
cmpsl
cmc
inc
arpl
mov
add
js
mov
mov
sub
jns
btc
cmpsl
push
fstpl
mov
loop
lahf
xor
call
sahf
repnz
into
jb
pop
daa
jl
adc
push
scas
sbb
or
or
adc
xor
imul
mov
cmp
js
or
and
dec
test
hlt
sub
xlat
in
and
jl
jge
rorl
lcall
in
leave
test
cmc
outsb
and
pop
inc
push
mov
aam
xor
shr
jne
ss
int
mov
xor
dec
in
xchg
movsb
mov
jns
out
inc
sbb
jge
pop
pop
mov
push
out
inc
cmp
push
xchg
stc
enter
cmp
fwait
outsb
fadd
int
lahf
adc
in
sarb
subb
into
jmp
jge
test
dec
lock
sub
shl
popa
inc
add
and
inc
in
push
push
add
in
mov
mov
cwtl
inc
inc
fmuls
and
xchg
movl
ror
cmp
sub
pop
orl
add
notb
cmp
jb
scas
ljmp
xor
jge
mov
pop
push
push
mov
jns
rorl
xchg
mov
mov
push
sub
sub
sbb
decb
fmull
push
ret
xchg
pop
pop
xor
mov
sbb
pop
rolb
xchg
and
dec
mov
inc
pop
sub
push
sbb
fidivs
dec
add
mov
mov
cmp
or
jmp
xorb
int3
int3
mov
fstp
pushf
fwait
out
push
inc
jnp
lcall
cli
and
add
roll
inc
and
inc
insl
adc
les
int
int
iret
push
iret
repnz
scas
adc
push
inc
and
dec
cli
pop
jns
aad
in
or
and
dec
push
jo
or
icebp
mov
sub
sub
jl
loope
test
lds
shlb
iret
mov
lret
xchg
addr16
cli
loopne
movb
and
inc
arpl
cmp
ja
in
push
sahf
add
xchg
sub
in
pop
add
jmp
cli
hlt
xchg
mov
lret
ret
es
decl
notb
xchg
movsl
cmpb
push
pop
mov
lock
mov
sbb
jge
pop
jno
or
popf
les
jmp
fs
adc
mov
pop
lock
in
mov
andl
out
lret
fsub
cmp
jne
xchg
fcomi
icebp
lret
push
mov
adc
sti
dec
outsb
adc
fcmovnb
mov
mov
daa
js
mov
mov
xchg
or
insl
icebp
sbb
je
arpl
das
iret
cli
les
ret
sub
jnp
aaa
and
call
mov
xchg
frstor
loop,pn
in
xor
cmp
lods
dec
movd
dec
jnp
push
inc
sub
mov
xchg
sub
clc
cmp
mov
sub
daa
adc
lret
ret
inc
pop
sbb
andps
cs
adc
cmp
ret
inc
jbe
and
cmp
insb
push
loope
imul
mov
loopne
scas
mov
das
adc
pop
pop
jge
out
push
or
sbb
cmp
mov
add
inc
lahf
cld
pop
sbb
mov
xor
inc
gs
jl
jns
sub
andb
or
cwtl
les
mov
shll
cmpsl
mov
fldcw
bound
mov
data16
in
stc
js
lea
pop
fisubs
stc
fs
notb
dec
cmp
jne
fst
and
mov
and
push
shll
and
jo
aam
dec
mov
sbb
mov
xadd
mov
adc
repz
push
sub
mov
in
adc
cld
js
es
js
push
out
cs
mov
sub
nop
inc
jl
push
ret
mov
inc
es
out
dec
mov
shlb
lods
lcall
push
fisttpl
jns
lock
push
pop
stos
jb
xchg
jle
mov
sbb
cmpsb
or
and
dec
in
inc
xchg
or
and
dec
data16
xor
xchg
and
fs
and
adc
cmpsb
outsl
imull
sub
sub
inc
out
cmp
and
std
pop
sub
imul
in
out
pop
fisubl
mov
adc
mov
icebp
int3
or
mov
ja
xchg
mov
or
repz
int3
jb
cmpsl
cmpsb
es
pushf
int
pusha
out
adc
adc
adc
test
cli
js
sub
inc
add
xor
add
dec
jge
xor
test
pop
sub
out
lahf
frstor
pushf
dec
bound
mov
sbb
pop
push
fs
es
fnsave
ret
sbb
sbb
fldt
jnp
sub
negl
mov
in
das
pusha
mov
loopne
gs
sub
rolb
movsb
push
fsubrs
sbb
divb
orb
inc
pusha
cmpsl
fwait
pop
cltd
push
jg
mov
mov
ds
pusha
icebp
aaa
mov
dec
mov
dec
and
pop
imul
cmp
std
lods
iret
vandps
cmpsl
aaa
hlt
imul
shll
xchg
mov
lock
jecxz
sub
fstpt
rcrl
or
sub
cmpsl
xchg
push
adc
cmpsb
sub
pop
push
xor
roll
add
imul
idiv
push
push
adc
mov
jp
sbb
std
lock
test
push
and
pop
cmp
push
mov
jmp
aas
lcall
sti
push
and
sahf
hlt
push
mov
dec
xor
loope
and
cltd
clc
sti
dec
sbb
outsb
aam
fstp
fistps
repz
add
test
lahf
or
imul
test
arpl
jmp
add
inc
and
jo
mov
push
xchg
push
ljmp
inc
sti
sbb
arpl
dec
jo
sub
mov
notl
inc
adc
mov
inc
mov
in
sbb
xchg
and
js
movsb
xor
in
xlat
cli
fistpl
mov
mov
test
in
sub
mov
mov
repz
add
mov
inc
out
sahf
pop
cmp
out
rcr
sub
pop
xchg
lret
rolb
pop
jecxz
or
mov
sbb
test
jmp
sub
and
jmp
xchg
je
test
inc
mov
pop
bound
test
loop
mov
cli
cmc
mov
push
xor
or
dec
js
cli
test
cwtl
fildll
mov
lock
xor
dec
daa
xchg
nop
into
shrb
or
addl
leave
xchg
scas
mov
mov
mov
sbb
int3
adc
inc
int
sti
mov
in
dec
sub
mov
mov
insb
nop
pop
in
mov
sbb
mov
xor
rcrb
push
xchg
dec
int3
inc
add
adc
jg
pop
mov
es
pop
xchg
dec
int
or
int3
and
out
sti
out
cmpsb
jp
outsl
xchg
or
xchg
jle
es
loop
popa
mov
mov
jno
shlb
mov
sbb
in
je
push
loope
movsl
xchg
lret
ret
scas
movsb
jo
and
inc
mov
mov
test
gs
andl
adc
mov
lahf
xchg
sahf
mov
out
mov
dec
mov
add
xchg
int3
imul
loop
negl
sbb
xchg
jge
in
or
mov
setno
inc
or
jne
xchg
das
cmpsl
imul
push
dec
std
mov
jne
mov
cld
push
or
lret
mov
mov
out
jns
pop
add
add
jb
adc
pop
lods
xchg
push
and
loop
sahf
adc
fwait
adcl
push
fcoml
stos
ret
xchg
ret
mov
mov
and
dec
adc
pop
lret
mov
xor
add
scas
jmp
mov
mov
add
dec
sbb
cmp
loopne
xor
pop
xor
jb
sbb
add
jmp
shlb
pushf
add
hlt
mov
out
jno
dec
lret
sub
ret
test
add
in
pop
repz
inc
cmp
fistps
dec
dec
notl
cmp
inc
fldcw
xchg
mov
mov
fisubs
rcrl
sub
das
addr16
xchg
sbb
testb
sub
inc
mov
jno
jno
movsb
dec
cmp
aad
stos
lret
cwtl
pop
xor
cmpsb
jge
aam
dec
xchg
mov
push
xchg
sub
xchg
jno
xlat
out
cli
imul
sbb
div
mov
sahf
es
jne
scas
mov
sti
lcall
shlb
data16
mov
scas
mov
push
mov
nop
jns
push
sub
popa
out
push
jmp
xor
into
push
inc
lock
xor
leave
ret
mov
leave
cmpsb
xor
inc
jecxz
mov
mov
xor
test
jne
pop
inc
jge
out
mov
les
cltd
dec
mov
shll
inc
pop
popa
mov
pop
aas
mov
mov
sub
jecxz
loopne
jae
fidivl
cmpsb
into
repz
xchg
pop
enter
pop
addr16
sbbl
jmp
xor
sbb
sbb
sahf
inc
sbb
push
mov
xor
mov
pop
adcb
jl
cmp
xchg
lret
push
adc
push
dec
mov
push
test
stos
push
xchg
int3
outsb
dec
ret
xor
insl
mov
aas
daa
ficoml
push
scas
in
fdivrl
sub
and
jo
xchg
push
cli
push
cmp
mov
mov
add
aad
dec
lods
jne
mov
ficoms
jne
xor
loopne
dec
mov
push
out
lock
lea
and
rcll
dec
iret
push
adc
jecxz
mov
inc
stos
test
push
sahf
mov
xchg
mov
outsl
fs
mov
pop
test
adc
or
cmp
cmc
xchg
and
push
and
jbe
leave
and
xchg
cmp
dec
sbb
pusha
mov
add
cli
or
sbb
loope
sub
les
or
clc
hlt
sbb
mov
lret
jmp
int
jl
jne
xor
dec
into
xchg
add
js
xorl
xor
scas
sub
mov
das
pusha
shl
in
ss
sbb
lret
jmp
loope
xor
or
mov
sub
and
cmp
push
cmp
mov
dec
ret
in
test
jecxz
mov
push
mov
jp
icebp
inc
sub
cmp
nop
xor
dec
pusha
mov
adc
lea
loope
inc
insl
xchg
movsl
out
xchg
add
and
mov
test
xor
dec
jno
push
push
xlat
pop
popa
sbb
jo
repz
xchg
xor
repnz
fs
popf
lock
mov
fwait
adc
dec
ss
pushf
or
cld
xlat
sbb
cmp
mov
leave
and
xlat
sti
inc
icebp
sub
push
sbb
aas
jne
mov
mov
xchg
jl
rorl
adc
cmp
ret
int
scas
cltd
or
into
mov
mov
cmp
lcall
repz
lea
cmp
js
and
shlb
pop
xchg
cmp
decb
add
fistpl
jg
pop
ret
std
out
mov
jp
and
mov
mov
addl
sub
xor
cltd
dec
test
jns
insl
xchg
xchg
lea
enter
rcrb
push
jecxz
push
mov
and
into
xor
jne
out
push
cmc
xor
dec
repnz
sub
adc
mov
pop
add
and
add
xchg
cmpb
xchg
lcall
dec
fsubrp
dec
aas
inc
loop
push
ret
add
cmp
xchg
popf
test
xchg
andb
movsl
fisubrs
dec
les
dec
dec
mov
pop
mov
lret
cmp
adc
daa
or
xlat
test
cmp
mov
add
jmp
pop
dec
pop
xchg
push
mov
or
repnz
sti
cmp
and
jmp
dec
aad
scas
mov
jbe
leave
jg
push
mov
outsl
sbb
jno
std
mov
test
inc
pop
aas
xchg
std
cmpsl
cmp
cmpsb
sarl
adc
outsl
outsl
sbb
in
ss
sbb
and
addr16
sarb
pop
mov
sub
jg
sbb
shl
fbld
fstl
out
mov
mov
rep
test
or
inc
push
test
leave
psubusw
movsl
adc
in
js
cmp
lds
sub
cmp
out
adc
mov
outsb
or
xchg
xchg
sub
in
jg
mov
dec
lock
push
cltd
test
xor
sahf
xchg
test
push
test
sahf
mov
in
sub
aad
mov
aas
aad
ljmp
repz
push
pop
das
and
cmp
add
push
cmp
and
mov
lahf
inc
ljmp
add
out
push
clc
pop
out
stos
adc
and
mov
lahf
ss
fnstenv
jae
dec
xchg
inc
sub
mov
outsb
loop
fsubrp
dec
ja
jno
or
fwait
cwtl
ficoms
or
cwtl
mov
pop
jge
movb
cld
push
mov
rdtsc
or
outsl
test
or
sbb
imul
mov
jne
push
cmpsb
loop
sbb
pop
sbb
and
icebp
pop
lods
mov
in
fcmove
int3
out
in
jns
push
pop
adc
das
adc
sbb
mov
lcall
sbb
push
adc
clc
xchg
jle
in
or
neg
pop
push
or
orl
sahf
loopne
sbb
out
cmpsl
push
scas
sbb
mov
test
hlt
repz
lds
xchg
jg
and
adc
fcomp
test
jmp
pop
mov
add
aam
push
jb
cld
jle
cmp
pop
insb
popa
or
push
clc
bswap
lret
repz
push
aam
pop
or
dec
icebp
call
les
not
xor
xor
inc
mov
sub
or
push
jle
mov
decl
lock
mov
push
and
or
sub
xchg
and
daa
fistl
adc
rcll
sub
popf
into
es
jge
cmc
test
push
add
xor
scas
orl
stc
sub
fisttpll
push
jecxz
sub
cmp
ljmp
fcompl
mov
jbe
add
push
mov
dec
add
les
out
sbb
or
enter
ror
or
inc
jno
lret
pop
xchg
add
inc
sti
cli
sbb
cmp
out
das
test
pop
je
xchg
sbb
mov
aam
jb
pop
inc
in
dec
in
imul
jge
inc
aas
cmp
in
xor
mov
int
sti
and
xor
pop
dec
data16
out
mov
int
into
and
mov
gs
outsl
xchg
mov
mov
mov
js
std
xchg
dec
sub
adc
cltd
mov
rorl
repnz
cld
add
adc
popf
out
shlb
push
aaa
jbe
adc
hlt
arpl
sar
in
outsl
and
mov
into
cmc
ds
hlt
scas
filds
sbb
xchg
push
fnstcw
lahf
cli
movsb
sub
idivl
push
sbb
xor
pop
mov
jne
sub
mov
subb
cmpsl
jecxz
sub
lds
pop
inc
out
testb
sti
dec
adc
neg
lret
popa
iret
push
fdivrl
test
adc
lods
push
andb
sub
ljmp
dec
scas
lock
sahf
incb
mov
mov
cmpsl
into
sub
sub
cmc
addr16
std
orl
lods
pop
orb
stos
sub
xchg
repnz
shll
xchg
push
jbe
push
mov
or
icebp
xlat
scas
hlt
mov
sbb
loop
pop
sbb
adc
sub
mov
lods
dec
pop
and
mov
xor
repnz
imul
lret
jbe
incb
pushf
sub
cmpsl
xor
fcomps
mov
cwtl
aad
cmp
imul
mov
push
cs
or
sub
mov
shrb
mov
mov
call
out
cmc
push
cs
xlat
mov
daa
sbb
xor
lods
imul
subl
mov
insl
data16
cld
test
adc
dec
test
jge
add
sub
push
fcoms
and
sbb
lods
add
pushf
fcoml
add
inc
adc
xor
mov
sub
test
push
add
mov
dec
ljmp
cmc
cmp
push
mov
out
mov
mov
nop
inc
testl
mov
jp
or
add
fists
pop
popa
and
scas
mov
pop
mov
popf
lret
xchg
je
pusha
adc
and
rcrl
sbbb
idivl
cmpsl
push
xlat
les
cmp
inc
stos
bound
lea
or
mov
fidivl
ds
lock
pushf
test
inc
lods
stc
jae
test
jecxz
les
xor
psubd
cmp
inc
out
ja
shlb
mov
dec
inc
pushf
jg
stos
out
pusha
or
push
loopne
mul
lea
mov
pop
xor
test
scas
xor
mov
stos
jp
mov
adc
enter
in
les
rclb
jo
pop
inc
push
or
lcall
ljmp
jnp
xchg
shll
sub
sub
icebp
repnz
sbb
es
loope
sarb
cmp
aaa
gs
sub
ret
bound
iret
cmp
or
jle
pop
jno
sbb
addb
xor
ret
pushf
add
xor
push
sub
or
imul
xchg
sbb
cmp
dec
outsl
xor
loopne
ds
adc
lea
ret
cmc
jp
sbb
arpl
and
inc
ret
sar
insb
nop
push
cwtl
jmp
xor
test
incl
inc
xor
cmp
pop
or
shrl
cmp
adc
popa
lret
into
lahf
js
xchg
push
jl
xchg
push
push
in
insb
jo
ljmp
sub
push
icebp
sahf
pop
in
sti
scas
mov
lock
adc
shll
cmp
and
dec
dec
out
js
add
outsb
cmpsb
adc
aas
mov
js
xor
pop
les
jge
sarb
jo
lcall
cmp
mov
dec
inc
popa
inc
out
jns
xor
in
mov
cmp
icebp
outsb
cld
sahf
mov
and
scas
or
int
fildl
lcall
add
mov
stos
lea
mov
dec
ss
cmp
repnz
mov
shrl
xchg
clc
jle
jecxz
hlt
or
fsubrl
lock
lods
inc
jae
mov
or
loop
fdivrl
mov
mov
mov
repz
or
test
xor
sub
aas
sub
sbb
add
cmp
adc
or
les
cmp
push
rcl
fwait
daa
bnd
aam
cmc
mov
jge
mov
xchg
jb
test
adc
pop
mov
addr16
jne
leave
mov
and
paddsb
mov
sbb
sub
ja
lcall
scas
mov
cmp
pop
test
out
cmc
mov
mov
movsl
cmp
inc
ja
add
in
mov
scas
orb
mov
push
xchg
mov
in
adc
loopne
and
out
dec
lds
adc
fwait
mov
jmp
pop
mov
and
call
sub
imul
lret
sbb
pop
out
repnz
cmpb
stc
leave
xchg
inc
cmp
xchg
neg
cmc
xor
lods
push
sbbb
pusha
or
push
cmpsb
push
push
xchg
fisubrs
xchg
test
int
mov
inc
push
in
jno
js
add
add
ffree
jae
or
cwtl
lret
sub
aam
int
mov
mov
clc
sub
fisttpll
stos
or
jle
mov
jmp
pusha
repnz
loopne
jnp
jnp
mov
or
jg
pop
jmp
cmc
mov
add
scas
nop
inc
repnz
cld
pop
push
cmp
pop
mov
in
out
fldl
mov
mov
rolb
sub
push
dec
or
je
cmp
pop
pop
mov
hlt
pop
inc
sbb
mov
call
and
dec
test
dec
cmp
and
sub
sahf
sub
xchg
pop
fstpt
mov
sbb
mov
lcall
adc
mov
leave
nop
sub
iret
nopl
fidivl
jl
pushf
or
cs
ficoms
stos
rcrb
xchg
push
nop
and
adc
scas
lods
lods
clc
mov
push
push
and
mov
cmc
fcmovu
xchg
movb
pop
lret
dec
sub
mov
repnz
leave
mov
ret
mov
jno
dec
movsl
add
int3
loop
pop
mov
mov
jb
jo
dec
subb
mov
mov
fcmovbe
push
loopne
inc
adc
push
and
ja
loope
mov
mov
inc
sub
jns
repnz
or
loop
outsl
cmp
pop
int
int
xchg
lods
adc
nop
xchg
inc
xor
lcall
lahf
out
inc
ficompl
loopne
mov
int3
es
add
jg
jbe
imul
ljmp
in
popa
call
shrl
push
push
out
mov
cmp
cmp
push
xor
mov
addr16
mov
in
sub
cmp
cmp
fnstenv
dec
jne
cs
stos
out
xchg
test
aas
loope
mov
mov
jnp
insb
jno
popf
adc
cld
sub
and
dec
mov
jle
shl
loop
cmp
movq
fs
stc
inc
cmp
popa
enter
lods
daa
pop
int3
pusha
dec
inc
dec
jmp
fildll
mov
and
add
mov
in
sbb
dec
jmp
loopne
mov
popf
out
lods
idiv
jg
pop
and
xchg
or
ret
sbb
out
pushf
jmpw
stos
push
pop
out
mov
and
xor
sbb
xor
jecxz
xor
and
enter
sub
push
dec
xchg
mov
aad
xchg
jno
pop
into
in
adc
in
andl
mov
jl
adc
adc
cmp
sbb
mov
loope
or
sbb
gs
leave
mov
fistpll
mov
adc
or
mov
inc
mov
cld
pop
push
pop
pusha
sub
fsubr
bound
xchg
or
push
mov
xor
cltd
sbb
lahf
xchg
push
in
jo
cwtl
pop
cmc
jns
stc
push
insb
jae
or
pop
test
inc
and
popf
in
sbb
mov
pop
js
cmc
stos
in
xchg
lret
enter
das
mov
jbe
xor
jmp
mov
loopne
stos
popa
inc
test
inc
xacquire
mov
push
cli
adc
mov
in
sbb
dec
ret
xchg
push
mov
cmpsb
test
xor
adc
or
pop
pop
adc
mov
jp
pop
inc
inc
xor
mov
xchg
cli
fcomps
into
call
add
push
or
dec
daa
in
and
ret
bound
in
dec
cltd
adc
orl
mov
mov
in
mov
push
sub
fcoml
mov
cmp
dec
jp
xor
or
sarl
inc
gs
push
gs
jo
in
cmp
sarb
outsl
lret
popf
repnz
cwtl
ret
inc
and
fadd
push
mov
jg
fists
adc
mov
dec
and
push
inc
mov
xchg
ds
test
and
ficoms
pop
fcmovbe
out
in
pop
pusha
cmp
scas
push
inc
mov
cs
in
test
enter
push
pop
sti
jp
inc
insb
inc
lock
out
cld
hlt
cltd
insb
hlt
int
rcr
sub
lock
cmp
mov
jmp
les
jae
cmp
or
or
mov
call
adc
mov
xchg
pusha
in
iret
test
orb
and
iret
aaa
cli
push
dec
pop
cmp
das
xchg
push
cs
out
cltd
push
or
clc
ret
fxam
or
sub
jp
shlb
movsl
outsb
scas
sub
call
jp
outsl
pop
loopne
int
insl
lea
in
outsb
sbb
cmpsl
mov
sub
cmp
popa
stos
mov
xchg
scas
sbb
adc
notb
jle
sbb
ror
mov
pop
ja
stos
std
cld
iret
int
xor
mov
mov
int
in
mov
mov
test
pop
xor
orl
jne
fdivr
mov
rcll
mov
xor
jl
sbb
sahf
adc
mov
pop
movsl
rcrl
jle
cmc
out
cmp
and
mov
xchg
shlb
into
mov
jns
xchg
xor
mov
mov
dec
push
mov
push
movsl
pop
into
inc
clc
outsb
cmp
jecxz
push
ljmp
in
pop
dec
out
ljmp
insl
adc
adc
pushf
decb
lods
out
mov
popf
arpl
aaa
xchg
stos
pushf
and
rolb
sub
stos
icebp
or
das
fistl
cmp
das
or
push
cli
test
xor
test
cs
mov
inc
or
imul
outsb
int3
mov
imul
in
out
lods
add
lock
stos
mov
clc
nop
sti
pop
mov
subl
rorl
fwait
lahf
lods
add
pop
je
inc
cmp
loopne
xchg
sbb
dec
imul
xchg
outsl
adc
mov
cmp
push
mov
add
in
rcll
jp
dec
loop
test
mov
ret
ljmp
pushf
pusha
and
in
bound
jae
add
mov
scas
sti
fistpll
outsb
pop
and
xlat
ret
dec
cmp
push
cmp
sub
movsb
leave
lret
jl
outsb
jb
push
inc
daa
sbb
sbb
dec
mov
jecxz
pop
jo
mov
or
data16
lea
leave
lret
sub
ret
push
mov
in
psraw
lcall
pusha
sub
popa
sar
fstpl
jbe
ret
xor
repnz
jg
loope
cmp
ja
push
pop
imul
and
sub
fnstsw
and
in
enter
xor
or
aas
in
mov
adc
or
popa
pop
test
xchg
pop
dec
dec
and
or
imul
mov
vmwrite
mov
test
jbe
into
fstps
or
pop
push
add
gs
jne
mov
and
fs
pop
cld
push
cwtl
sbb
leave
and
movsb
jl
dec
jp
ljmp
iret
daa
inc
pop
dec
adc
outsb
popa
sahf
insl
test
clc
ds
xor
ss
cwtl
rolb
mov
rol
mov
mov
out
sbb
nop
mov
movsb
adc
in
cwtl
mov
test
scas
int
mov
cmp
fmuls
outsl
push
push
test
mov
incl
loope
pop
pusha
jb
sti
out
push
cmpsb
pusha
adc
in
test
neg
jo
jecxz
add
test
mov
fmull
popl
cmp
pop
add
shlb
lahf
mov
test
or
or
popf
pop
push
xchg
test
aas
pop
leave
lcall
dec
iret
sbb
sub
xor
nop
dec
or
popf
ret
xor
jb
jmp
jg
sub
cs
mov
js
dec
pusha
dec
jns
loope
dec
bound
mov
shl
xor
cmpb
sub
outsb
mov
adc
xor
sbb
inc
push
jno
sarb
jb
push
fmuls
cmp
push
jmp
xchg
lcall
sbb
aaa
jo
mov
lcall
lret
out
nop
sub
jg
push
cmp
inc
in
xchg
cmp
cld
lock
add
cmp
daa
mov
lock
test
cs
mov
rorl
sub
rcll
adc
add
add
shlb
xchg
and
sbb
into
repz
imul
sbb
cmp
sbb
ror
pop
fmuls
and
je
lds
jle
cmpsb
xchg
sbb
jae
out
pusha
lret
repnz
fwait
lock
andl
nop
mov
lods
lahf
sub
dec
xchg
nop
jne
outsb
add
dec
lock
scas
mov
push
pusha
pop
es
insl
jo
nop
jae
hlt
rclb
movaps
sarb
pop
imul
and
orb
xlat
cmpsl
dec
jb
xor
insb
mov
imul
nop
fdivrl
addb
ret
adc
sti
pop
and
outsl
xchg
das
push
or
stos
shlb
adcl
xor
xchg
inc
push
pop
enter
or
cmp
jne
xor
lahf
dec
shl
inc
cmp
and
movsl
sub
test
out
mov
and
sti
fcompl
pop
pop
shlw
out
ljmp
ret
xchg
mov
push
aas
xor
pop
and
adc
mov
jle
inc
sub
push
mov
orb
ret
fldt
pop
cmp
popa
push
sub
mov
and
cld
cmpsb
and
js
ret
loop
imul
and
cmp
ret
fwait
into
lods
pushf
xchg
repnz
dec
test
mov
iret
andb
nop
sub
stc
jae
cmp
nop
ss
mov
sub
cmp
cmp
mov
xchg
add
scas
add
dec
out
jns
inc
xlat
xor
fsubrl
sbb
mulb
or
jb
cmp
int
in
fisttpl
lock
sub
int3
lea
es
add
mov
xchg
fidivs
jge
jne
std
movsl
xchg
pushf
testb
and
out
rorl
sbb
xor
loop
adcl
mov
cmp
stc
xchg
pop
add
icebp
popa
scas
fdivs
insl
test
push
dec
inc
mov
xchg
jp
je
fnstsw
push
je
xchg
and
icebp
inc
stos
lods
faddl
ja
rcrl
cwtl
xor
aas
cmc
or
add
insl
dec
adc
loope
lret
cwtl
jg
and
scas
sbb
scas
xor
xor
mov
cld
mov
dec
mov
adc
add
cwtl
cltd
aad
fmul
mov
pop
fs
ret
aam
loopne
fistps
fucom
ret
sbb
addb
push
test
sbb
mov
push
push
sbb
sub
adc
dec
out
dec
lea
or
sahf
mov
mov
insl
mov
and
dec
dec
insb
loope
adc
mov
mov
inc
jno
or
pop
fnstsw
jl
in
mov
jo
mov
push
jge
cltd
dec
clc
and
sbb
fwait
aam
cmp
fwait
lods
mov
cmp
xor
mov
lcall
sub
inc
fs
cli
mov
sbb
push
inc
inc
in
inc
fistl
les
push
loope
ret
and
sahf
jo
dec
jne
pop
jo
adc
dec
insb
pop
lahf
inc
insl
dec
add
or
scas
jnp
mov
pop
lea
or
out
push
je
in
inc
popf
mov
shlb
fisubl
push
imul
jbe
push
popf
dec
loop
iret
scas
sar
mov
push
fnstcw
sub
push
sbb
and
adc
dec
jae
or
jb
jmp
mov
xlat
movsl
shlb
jns
lahf
lret
sub
push
sbb
test
cmp
mov
push
push
scas
orl
adc
mov
xor
js
clc
rorl
adc
fsubs
lods
cmp
xlat
push
shl
push
cltd
inc
into
loope
and
ja
jecxz
sbb
sub
cli
in
gs
jns
add
lock
stos
shrb
aam
sbbl
push
pop
outsl
sub
push
mov
sbb
call
hlt
sbb
mov
and
or
add
fwait
in
ss
ljmp
cmpb
push
inc
xor
popa
mov
fldt
test
push
rcll
in
repnz
jns
push
and
stc
jecxz
das
addw
mov
filds
popa
and
lods
mov
dec
pop
mov
js
push
out
inc
adc
sbb
repnz
popa
das
mov
sub
nop
out
pushf
ret
jmp
fldcw
iret
inc
stc
mov
push
xchg
rol
add
adc
push
ss
mov
rorl
sbb
push
nop
es
mov
mov
lods
subl
dec
outsb
gs
aam
lret
mov
inc
call
jno
push
xchg
mov
cwtl
sub
sbb
in
test
pop
xor
xor
add
pop
mov
cmp
roll
fmuls
mov
xor
andl
dec
bound
xor
mov
dec
push
inc
gs
pop
fidivrs
cmpl
cli
sbb
in
add
push
cmpb
aam
pop
loop
jne
jl
test
jp
mov
popl
dec
in
in
jae
add
dec
dec
scas
push
mov
mov
push
fs
pop
test
inc
iret
enter
out
fcoms
mov
sbb
dec
sbb
outsl
push
mov
cmc
shll
pop
imul
dec
dec
cs
push
push
adc
dec
push
jae
in
popa
jne
inc
shr
inc
ret
mov
cmc
adc
jecxz
shrb
inc
adc
aam
aas
and
addr16
cmp
or
adcb
lods
lds
and
xchg
js
dec
jle
inc
enter
leave
adc
test
out
sahf
hlt
mov
aad
sbb
sbb
mov
scas
xchg
fiaddl
addr16
das
jae
xlat
mov
sti
je
cmc
push
aas
cmpl
dec
mov
adc
jg
jnp
and
ffreep
cld
in
mov
dec
jmp
clc
addr16
addr16
addb
rcll
mov
dec
pop
out
addr16
cmp
mov
mov
xchg
imul
and
insb
mov
in
jle
scas
dec
into
cld
out
push
fdecstp
mov
leavew
lcall
scas
push
shrl
mov
aam
cmp
ds
fsubr
fstps
lods
sarb
movsb
inc
jmp
int3
mov
lods
mov
mov
sbb
cmp
mov
repz
mov
or
mov
enter
repz
out
or
mov
or
lea
sbb
js
sub
jne
xchg
cmp
mov
mov
mov
cli
sahf
mov
push
sar
pop
test
jne
call
jecxz
testl
sahf
and
sbb
xchg
add
add
hlt
push
pop
lret
mov
mov
mov
cld
stos
mov
and
sbb
or
scas
aaa
test
fdivrl
ret
and
add
aas
out
sub
repz
insl
icebp
gs
jle
sbb
pop
push
mov
push
xchg
inc
ficompl
test
or
shlb
xor
dec
pusha
addr16
rolb
cmp
mov
mov
mov
mov
cld
xor
add
in
mov
dec
ja
lds
out
cmc
das
mov
fsts
loopne
mov
aam
sub
pushf
cli
push
ja
int3
imul
pop
add
roll
push
sub
pop
sub
mov
inc
imulb
arpl
lcall
cltd
add
mov
push
adc
bound
push
les
fsubrs
gs
test
or
lock
push
js
mov
pop
movsl
sarb
adc
sub
orb
sub
fcmovne
testb
add
xorl
xchg
js
xorb
dec
mov
call
addl
mov
mov
out
test
movsb
jmp
fcmovne
add
ja
pop
mov
imul
push
daa
push
movsl
xor
pop
pop
sti
jl
xchg
pop
data16
aaa
pop
lret
lds
or
xchg
cmp
jae
dec
in
and
dec
pushf
fnsave
leave
push
adc
testl
mov
pop
aaa
mov
dec
inc
dec
push
mov
add
int
repnz
loope
jo
mov
cmp
leave
out
iret
cmp
cmpsl
pop
leave
push
mov
mov
lret
cmc
cwtl
push
popa
insl
dec
sbb
sbb
xor
cmc
xor
mov
adc
daa
out
cmpsl
pop
push
xchg
rcr
xchg
pop
mov
mov
in
test
lds
adc
inc
xor
jmp
call
addr16
movsl
inc
or
mov
dec
lret
cli
pop
jo
test
inc
sbb
sub
push
pop
or
mov
stos
enter
lods
hlt
andl
dec
iret
loope
add
and
clc
subl
mov
cmp
pop
inc
jp
push
xor
enter
add
cli
push
push
ss
xlat
xor
add
mov
cmp
add
scas
xchg
pop
je
leave
test
imul
cmp
push
int3
fmull
ficompl
push
scas
sbbb
dec
jbe
mov
add
jp
scas
sub
into
mov
ja
fs
shr
inc
mov
and
dec
out
dec
stc
in
jbe
sbb
mov
pop
jl
hlt
rol
aas
gs
pop
pop
jl
sub
sbb
jecxz
cmp
test
call
ret
mov
adc
mov
ret
jle
dec
xchg
and
enter
fwait
imul
leave
test
lods
jp
adc
inc
mov
sub
sar
movsb
pop
cli
inc
iret
in
xchg
jmp
cmp
outsl
int
aaa
jnp
dec
lock
sbb
mov
mov
xchg
lock
sub
push
sbb
push
aam
sub
jecxz
jge
sub
jl
mov
cmpsb
out
mov
rcrb
sbb
cs
mov
jp
mov
dec
dec
pushf
pop
dec
fadds
inc
cwtl
push
rcll
mov
sahf
leave
test
push
lods
scas
ret
sub
cmp
dec
ljmp
das
push
hlt
xchg
dec
add
push
dec
insb
shlb
rcrb
push
ss
adc
shll
aam
xchg
xor
cmp
lds
dec
nop
xor
pusha
jl
sub
ja
xlat
sahf
ret
popa
ret
loop
push
push
mov
ljmp
mov
bound
push
lea
pop
call
scas
imul
sub
mov
fisubrs
adc
aas
inc
pushf
jne
test
daa
sbb
push
dec
xchg
cmp
insb
mov
or
sbb
adc
jmp
loopne
mov
push
jne
in
clc
mov
cld
dec
xor
dec
push
or
sbb
inc
add
mov
mov
mov
js
repz
adc
shl
decl
dec
aaa
dec
pop
fbstp
cmc
mov
mov
test
popa
mov
ss
imul
pop
adcl
mov
xchg
repnz
and
xor
adc
fwait
pusha
hlt
pop
add
inc
clc
or
adc
scas
imul
and
outsl
xchg
enter
fwait
in
aad
shlb
xchg
fwait
pop
in
or
les
lods
mov
jg
repnz
xchg
enter
lods
pop
rcl
mov
xchg
mov
mov
jl
and
loope
loop
icebp
xchg
cmp
int3
add
xchg
ds
bound
mov
stos
jmp
pop
xlat
fcmovb
pushl
fstl
mov
movsb
mov
mov
push
cmp
out
pushf
sbb
adc
mov
add
xchg
enter
mov
cmp
mov
sub
mov
cmpsl
mul
lea
shr
test
push
sbb
inc
push
ret
mov
repz
mov
rolb
sarl
mov
fldenv
mov
aad
cwtl
pushf
out
mov
cmpsb
iret
xchg
std
pusha
roll
addr16
xchg
popa
jecxz
mov
mov
fiadds
daa
or
gs
filds
mov
je
fwait
test
jo
sbb
lcall
stos
mov
jmp
sti
adc
leave
jecxz
subb
test
push
test
mov
nop
bound
rclb
mov
loope
fldenv
push
popa
gs
add
enter
ret
jb
mov
outsb
inc
loop
aad
sbb
data16
push
fwait
push
dec
test
push
lret
mov
mov
mov
ja
aas
imul
xchg
mov
pop
push
add
hlt
in
jnp
leave
pop
jae
pop
push
mov
in
aas
roll
out
psrlw
jge
out
ret
adc
mov
das
fistpl
sub
xor
push
and
mov
and
loope
aas
pushf
bound
in
mov
lds
sbb
fwait
cmpsb
out
push
xchg
out
mov
inc
mov
mov
mov
pop
test
cmc
adc
fcomi
insb
aas
out
fisttpl
pop
int3
mov
fwait
das
inc
push
xchg
jbe
adc
and
push
es
loope
and
mov
adc
jbe
movsl
or
stc
enter
pusha
push
scas
xchg
cld
cmc
push
test
push
and
cmp
movsl
jmp
pop
mov
pop
sub
add
push
dec
lock
hlt
cltd
push
dec
ds
xor
clc
sti
ret
mov
lds
cs
adc
adc
push
push
scas
scas
pushf
pop
in
sub
mov
pop
test
cltd
jb
cmp
mov
jb
ss
das
and
pop
sub
sarl
lds
stos
sub
cs
shlb
rclb
pop
cwtl
fdivl
leave
pop
add
adc
test
je
dec
aaa
out
int
out
push
adcb
arpl
jp
out
bound
push
lods
xor
sub
aas
xchg
rcll
cs
sub
es
push
adc
aas
jecxz
dec
int3
add
cs
lcall
xchg
add
xchg
jl
fwait
sub
dec
xlat
mov
mov
test
daa
int
mov
pop
add
pop
fnstsw
es
pop
in
movsl
shlb
jmp
mov
xor
and
inc
fisttps
lods
mov
test
cmp
enter
pop
push
push
ja
int3
mov
adc
jecxz
arpl
sub
dec
addr16
push
xor
jns
clc
sub
fbstp
ret
dec
xchg
mov
jnp
xor
mov
enter
and
jnp
inc
adc
cld
pop
scas
iret
in
addl
mov
fnstsw
dec
cmp
add
outsb
roll
outsb
stos
out
ret
lock
and
mov
gs
cmpsb
jecxz
enter
push
aaa
xlat
popf
nop
push
pop
xchg
mov
cwtl
push
add
std
fsts
sarl
fwait
scas
ljmp
out
test
cmp
clc
lret
enter
jae
xlat
daa
outsl
addb
mov
popa
sahf
pop
les
es
add
push
jae
adc
and
xchg
fmul
sbb
mov
movsb
cltd
pop
xchg
mov
fisttpll
pop
testb
pop
bound
sbbb
add
shrl
cltd
xchg
pop
xor
sub
loop
stos
push
inc
call
lods
sub
int3
insb
xchg
ljmp
mul
adc
mov
in
add
sub
dec
aaa
incl
pop
into
dec
mov
mov
fwait
and
adcb
int
add
lods
std
test
jae
cwtl
mov
lahf
fbld
rcl
lods
add
jl
xchg
mov
sahf
out
je
pop
out
and
cld
xor
mov
adc
dec
es
dec
das
and
or
fptan
ret
popf
pusha
sub
cmc
sbb
out
dec
popa
pop
xchg
loopne
fisttpll
rol
xchg
mov
xor
mov
inc
lds
jns
pushf
pushf
sbb
sub
or
loopne
sub
add
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
imul
add
add
add
add
add
insb
add
dec
insb
add
push
and
add
loopne
add
loopne
add
pusha
and
add
add
add
add
insb
add
outsl
insb
add
jle
add
mov
cltd
insb
add
dec
outsb
jae
popa
insb
insb
add
jb
imul
insb
gs
push
gs
imul
add
gs
fs
gs
dec
outsb
outsw
add
fs
je
