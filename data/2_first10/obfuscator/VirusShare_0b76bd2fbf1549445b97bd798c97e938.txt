sub
pusha
bt
call
push
call
jl
test
jmp
push
call
mov
mov
sahf
cmp
dec
cmp
dec
sub
xor
cmpb
daa
sub
push
clc
adcl
mov
shl
sub
jg
rcll
out
roll
jne
mov
rcl
ja
push
mov
ljmp
dec
adc
call
push
lods
dec
lret
mov
xchg
lahf
dec
pop
movsl
insl
mov
jmp
mov
rorb
cmp
and
cwtl
mov
and
bound
pop
cmp
aas
mov
cmp
popf
movsl
das
adc
xor
xor
cltd
shr
fistl
add
adc
adc
cmp
jae
dec
sub
jnp
mov
mov
xchg
mov
push
cmp
in
daa
add
out
xchg
rcrl
rcrl
dec
and
lret
xchg
sub
je
adc
xchg
add
pusha
sub
call
add
shll
movsl
jp
jno
repnz
call
push
imul
cmpsl
hlt
mov
jmp
jns
mov
loop
test
jg
add
popa
fists
jb
lods
push
in
out
or
mov
push
mov
ljmp
mov
push
ljmp
push
mov
sbb
dec
sbb
sbb
mov
ret
loope
leave
cmpsl
fimuls
repz
les
dec
pop
pop
ljmp
stos
aaa
pop
call
call
out
call
lds
xchg
pop
vmwrite
in
sub
out
pushf
adc
lcall
add
sbb
arpl
cmpsl
fdivl
cmpsl
scas
and
test
int3
inc
mov
push
and
sub
cwtl
and
xchg
into
test
das
cs
xchg
xor
xchg
out
mov
dec
pop
mov
shl
fisttpll
xor
jbe
add
jns
jb
lahf
jle
pusha
xor
lds
mov
or
pusha
orl
movsb
imul
cmp
pop
mov
int
push
mov
xor
pop
out
mov
adc
jmp
cmp
push
cmp
pop
adc
add
popa
rclb
negb
out
mov
movsb
fisttpl
or
sbb
imul
jecxz
sti
jns
lret
insl
in
aaa
pop
gs
add
test
xchg
pop
outsb
fcoml
dec
mov
mov
inc
fs
and
pop
ss
dec
xor
js
in
jno
into
pop
lock
adc
stos
inc
pop
test
mov
scas
frstor
mov
mov
fsubr
cmp
iret
insl
in
or
jle
inc
or
ss
popa
lods
inc
cmp
sub
jns
call
push
or
add
imul
jae
push
mov
push
call
aad
xor
addr16
leave
pop
std
mov
xlat
movsl
stc
mov
pop
mov
sbb
into
pusha
add
cltd
fmul
fiadds
cltd
clc
ja
sub
fldcw
movsb
mov
sbbb
dec
mov
xor
std
mov
sti
lret
fs
cmpsb
push
push
in
test
push
inc
push
add
aas
call
push
sahf
and
addl
xchg
pop
jg
push
pop
dec
pop
xor
sarb
test
mov
mov
inc
cmp
cmpsb
ss
pushf
mov
lea
lea
push
call
pusha
lea
jne
sbb
sub
xor
mov
pusha
add
sar
rcr
mov
jmp
push
fcoms
add
add
add
add
add
add
add
icebp
adc
add
add
xchg
sbb
add
add
add
and
add
mov
push
add
add
add
mov
add
push
lds
add
add
add
pop
pop
add
add
add
add
add
adc
call
mov
push
add
adc
jno
adc
add
add
xchg
add
xorb
add
incl
pushf
pushf
push
lea
jne
lea
ror
mov
clc
test
pusha
add
clc
cmc
movzwl
pop
mov
cmp
cmp
stc
add
pushf
mov
lea
jmp
pushl
lea
ja
pusha
pushf
call
repnz
pushl
jmp
jmp
push
call
jno
dec
pop
subb
das
shr
sub
add
js,pn
push
mov
repnz
pop
test
sbb
ss
mov
aam
add
pop
mov
imul
repnz
loope
push
aad
mov
fsts
sbb
daa
cltd
mov
sbb
imul
arpl
push
and
mov
int
cmc
loop
push
shrb
xchg
cmp
outsb
adc
dec
sbb
dec
addl
pop
push
out
jnp
or
lea
ja
bt
rcr
sar
add
sub
or
jmp
cmp
jmp
pushf
test
or
bt
mov
cmc
cmc
bt
clc
cmpb
call
movl
lea
je
cmc
add
push
lea
jmp
mov
xchg
cmc
cmpsl
sahf
cmp
pushf
in
leave
mov
xchg
fistpll
pop
cltd
aas
mov
add
rorb
and
mov
sbb
sbb
jae
xor
mov
mov
mov
sub
mov
js
dec
dec
xchg
push
orl
pop
xchg
xor
outsl
and
jae
jo
sti
jle
mov
ds
cwtl
stc
pop
outsl
xor
jmp
inc
cmp
pop
loopne
adc
lea
push
pusha
movb
stc
add
pushf
pushl
jmp
lea
jb
bt
push
bt
pusha
cmp
pushf
call
pushf
pushl
pushf
test
push
pusha
jmp
pusha
mov
ud1
sub
daa
jg
jne
jo
mov
mov
add
mov
arpl
cli
inc
cld
call
sub
inc
cmpsl
sub
lods
sub
scas
mov
pop
icebp
jge
les
fchs
insl
pop
imul
cmp
inc
cmp
and
mov
arpl
jbe
jns
pushf
in
testb
xor
aad
xchg
enter
add
popf
arpl
sub
dec
xor
cmp
mov
lods
stc
pop
ds
or
push
mov
fxch
test
xchg
mov
dec
jmp
aas
cli
test
push
je
and
outsb
jmp
push
insl
dec
add
inc
imul
lods
leave
stos
mov
into
cmp
mov
jp
dec
adc
or
push
int3
xchg
daa
push
mov
sbb
cltd
push
int3
push
cmp
mov
dec
mov
mov
cwtl
aas
mov
inc
mov
add
idivb
mov
pop
add
inc
cmp
arpl
inc
xor
imul
adc
or
push
cli
sub
cltd
in
mov
clc
sub
jl
cmpl
sbb
dec
leave
adc
push
cwtl
and
aaa
or
out
xchg
xchg
pop
mov
cwtl
inc
cmp
pop
fisubrs
scas
inc
shr
fnstsw
or
push
adc
pop
dec
orb
enter
fidivl
and
arpl
jmp
das
out
push
gs
mov
mov
cld
shlb
in
inc
add
lcall
sub
cmp
inc
sub
push
mov
pop
xchg
xchg
jp
jmp
mov
ret
test
adc
pushl
jp
and
sbb
jp
cs
xor
push
jns
insl
xor
inc
cmp
and
mov
fstps
call
mov
dec
xchg
pop
sub
jge
addr16
inc
push
xor
cli
xchg
lret
push
mov
mov
dec
shlb
jne
sub
and
jae
mov
jo,pt
aaa
fdivp
and
add
cmp
divb
xor
fs
out
iret
scas
enter
or
inc
cmp
ja
push
lea
jne
shl
bsf
xchg
pusha
mov
bswap
pushf
sub
or
pushf
or
shrd
lea
test
bt
stc
bt
sub
cmc
jmp
pop
aam
push
nop
xchg
dec
sub
sbb
sub
cmp
sub
out
mov
enter
data16
fistps
mov
sbb
roll
ret
jo
dec
mov
stos
adc
inc
sti
jns
jp
in
inc
fdivrp
mov
imul
mov
scas
adc
cmp
xor
loope
mov
mov
mov
movsl
loope
mov
push
jmp
loopne
je
outsl
out
cmc
lcall
inc
cmp
mov
insb
call
gs
sarb
mov
movsl
rorl
xchg
add
pop
sahf
dec
push
adc
jnp
xor
cmc
inc
xchg
fiaddl
bnd
stos
scas
mov
outsb
add
ret
movsl
cmp
push
sbb
mov
sahf
lret
inc
test
aad
and
sub
push
rclb
test
into
ja
push
in
mov
sbb
shrb
dec
sub
and
aad
cwtl
loopne
sub
mov
outsb
stos
sbb
xchg
pop
jbe
mov
repnz
inc
ds
test
mov
jecxz
inc
cmp
or
test
and
add
sub
test
cmp
add
mov
movl
bsf
inc
mov
cmp
test
pushf
jmp
inc
out
mov
add
lods
push
stos
mov
hlt
xchg
cmc
test
mov
repz
fldcw
sub
pop
xchg
inc
mov
inc
or
loopw
cld
xchg
ret
sarl
test
es
insb
jmp
sbb
xchg
int3
out
jp
mov
mov
int3
out
or
fs
incl
xchg
xor
sub
dec
jp
icebp
xor
cmp
jecxz
rcrb
leave
lods
jecxz
je
cmp
pop
or
xor
inc
testl
push
js
push
xor
pop
cltd
mov
lock
sbb
inc
inc
shl
test
es
mul
push
loopne
movsl
outsb
adc
imul
push
lcall
mov
push
add
push
fdiv
getsec
pop
xchg
mov
push
in
xor
bound
mov
aaa
inc
sub
outsl
pop
fs
push
movsb
stos
ret
xchg
mov
iret
cltd
in
sub
lock
mov
cmp
inc
dec
adc
shr
and
add
cmc
jns
les
jle
push
mov
lret
mov
mov
inc
cs
sbb
iret
in
mov
or
jae
movsl
pop
int3
in
xor
aaa
pop
cmp
xchg
pop
out
idiv
fildl
call
inc
xor
repnz
inc
mov
pop
out
sbb
lods
ljmp
mov
mov
mov
pop
test
sub
xchg
mov
pop
jne,pn
jp
insl
cmp
roll
sbb
push
cmp
call
cmpsb
and
movsb
loope
repz
rclb
add
add
js
stc
jne
and
sub
inc
push
jg
loop
pop
cltd
xchg
movb
cld
pop
adc
test
pop
inc
or
mov
cmp
pusha
fiadds
inc
sub
mov
sti
xor
xor
popa
adc
dec
cmp
adc
inc
mov
adcl
aam
jmp
cmp
pop
sub
dec
push
sub
aad
insb
dec
subb
dec
sti
aas
sbb
fildll
inc
out
shll
fcom
ficoml
fcoml
push
or
repnz
and
and
movsl
adc
sub
sahf
push
mov
adc
ret
rcrb
imul
addr16
pop
jns
js
fldl
das
outsl
and
push
push
inc
cmp
in
inc
movl
pusha
lea
jmp
jmp
cmpsl
mov
mov
xor
rcrl
ret
arpl
movsl
test
and
sub
jbe
aas
mov
push
adcl
pop
fimuls
bound
inc
lea
pop
sub
je
inc
cmp
xor
push
call
mov
pop
and
and
movsl
pop
mov
and
ds
and
fdivrl
or
xchg
stos
dec
les
push
jne
mov
mov
repz
cmp
or
nop
xchg
int
notl
add
rolb
movsb
or
dec
push
ror
sub
bsf
call
lds
repnz
test
ret
mov
and
push
and
dec
sub
push
int
test
aad
adc
aad
aam
loope
ret
sbb
jmp
out
jns
cmpl
pop
cmp
lea
arpl
outsl
in
popf
jns
ja
jo
or
idivb
or
pop
sbb
aas
iret
repz
pop
hlt
fisubl
pop
and
push
or
sbb
xchg
inc
cmp
in
pusha
pusha
inc
pushf
cmpb
movw
pushf
jmp
mov
push
jae
jge
stos
mov
adc
push
repz
jno
jg
pop
or
push
scas
cli
dec
icebp
jns
xchg
fs
addr16
jmp
scas
inc
js
fwait
inc
iret
lcall
cmp
inc
repnz
jecxz
flds
dec
sbb
out
pop
jbe
mov
icebp
cmc
sbb
cmpsb
lret
jle
cltd
test
add
arpl
xor
dec
movsl
cltd
sub
mov
aaa
xchg
sbb
out
dec
and
arpl
gs
inc
cli
inc
cmp
add
xor
add
gs
outsl
fs
gs
popa
outsb
fs
gs
add
stos
test
mov
mov
adc
jmp
cwtl
sbb
jb
inc
push
outsb
xchg
shll
insb
jg
cmpsl
xchg
cmc
repz
notb
inc
mov
notb
rcrb
push
adc
test
imul
imul
shll
cltd
ljmp
cmp
nop
push
mov
loop
xchg
push
push
sbbl
js
loopne
or
imul
mov
imul
cwtl
icebp
loop
ds
in
cmp
cmp
jnp
sub
jo
pop
xor
cs
xor
jg
call
mov
cmp
fistl
loope
gs
inc
sub
hlt
mov
mov
inc
fisubrs
adc
loope
pop
dec
sbb
pushf
test
stc
push
in
std
jg
jl
icebp
test
shlb
out
inc
inc
jmp
or
adc
jae
gs
cmp
repnz
push
jmp
jl
imull
loopne
mov
insl
lcall
inc
add
popa
scas
leave
dec
xchg
xchg
fnstsw
int3
dec
jnp
cmp
fisubs
call
jl
push
fdivl
xchg
loop
or
xchg
sahf
testb
fnstenv
lcall
or
jmp
test
jecxz
test
int
sbb
cmpl
es
subl
sub
push
adc
movsl
cld
test
inc
cmp
scas
inc
lcall
movzwl
pusha
call
rclb
aad
orb
mov
lds
mov
push
iret
je
cwtl
test
int
aad
adc
js
shrl
sbb
out
ljmp
add
test
test
jge
push
data16
out
cltd
dec
xor
and
mov
mov
mov
push
sub
movsb
fndisi(8087
js
inc
lret
pushf
cli
mov
movsl
cli
stos
loope
jle
cmp
rcl
cwtl
cmc
aam
nop
jnp
in
fldt
sub
jle
or
fbstp
jnp
insb
ficoml
jp
inc
frstpm(287
lds
pop
push
add
addr16
in
jo
icebp
das
sub
int3
inc
mov
xchg
fdivs
jg
js
and
stos
aas
test
aad
aad
or
dec
xorb
or
xor
pop
not
dec
push
pop
cmpsb
mov
jp
cmp
or
xor
push
pop
and
cmp
movl
inc
lea
pusha
jmp
push
call
xor
push
mov
mov
not
push
call
sub
cmpsb
into
xchg
les
adc
mov
and
bound
mov
int3
inc
cmp
imul
int
lea
std
xchg
push
inc
cmp
gs
data16
fs
insb
add
inc
and
push
lea
call
call
push
call
lock
push
call
mov
add
push
pop
or
std
in
movsbl
sub
sub
bt
movzbw
shrd
mov
jmp
mov
jbe
test
aas
jmp
shll
and
daa
test
in
and
jns
adc
mov
jecxz
out
xor
out
jnp
addb
insb
hlt
dec
jecxz
sbb
and
loope
mov
sbb
push
fdivrl
dec
icebp
bound
sbbl
comiss
es
bound
xchg
xchg
cmpsb
lds
sarb
out
test
cmpsb
xor
jb
and
test
cmpsb
jle
or
daa
inc
daa
jne
push
sbb
sahf
es
cmp
add
sbb
add
in
push
fwait
inc
sub
data16
js
outsl
add
cmp
mov
or
jp
mov
rcll
jb
shll
jmp
push
iret
xchg
mov
sbb
in
xor
sub
cltd
mov
je
loop
out
fwait
ja
ljmp
nop
loop
inc
cmp
mov
sbb
push
add
icebp
sub
pop
mov
cmp
enter
out
add
inc
cmp
add
xor
add
add
sbb
jbe
push
call
push
pop
xchg
add
mov
dec
std
daa
fldenv
inc
xor
mov
and
pop
mov
std
mov
xchg
movsl
shrl
pop
movsl
mov
xchg
or
lods
adc
mov
jae
bound
rorb
mov
fildll
fldl
ret
inc
dec
mov
sbb
pop
mov
sub
call
cmp
xor
xchg
mov
or
inc
xchg
repnz
int3
test
arpl
inc
xor
hlt
mov
mov
mov
adc
jl
pop
jne
mov
roll
push
sub
mov
pop
xchg
jb
pushf
cmp
stos
in
mov
lret
fwait
add
xchg
test
mov
and
dec
sub
push
ret
mov
movsl
adc
or
push
into
xchg
dec
xchg
inc
or
sbb
sbb
cmp
mov
mov
cwtl
shrb
aad
inc
cmp
add
sub
add
into
ret
jecxz
push
cld
xor
xchg
jmp
jo
pop
leave
mov
popa
cmpsb
push
mov
xchg
bound
loop
pop
fistl
pop
insb
idivb
dec
xchg
inc
sub
dec
lcall
adc
sbb
xor
mov
dec
test
cmpsl
xchg
add
mov
cmp
and
in
xchg
pop
and
notb
push
fisubrs
lahf
cli
ret
dec
dec
sbb
adc
dec
adc
push
iret
stos
rcrb
jne
into
and
pop
mov
leave
add
mov
mov
pushf
mov
jae
call
jae
cmp
cmp
jmp
cli
xchg
push
dec
and
jmp
test
cmp
jecxz
xchg
outsl
int3
add
je
dec
paddb
call
or
push
mov
sub
or
test
mov
fs
jae
ja
test
cmp
stc
cmp
jmp
adc
mov
ss
mov
jg
inc
add
dec
sub
fdivrs
sbb
adc
dec
test
addr16
lods
out
cli
cltd
aam
add
test
pusha
ret
dec
scas
shll
insl
mov
mov
xchg
mov
and
cmp
push
adc
jg
mov
ficoml
dec
stos
pop
jns
or
dec
sub
jae
jne
jbe
inc
cmp
xor
add
mul
call
imul
andb
jo
push
std
xchg
loope
jg
pop
jge
dec
xor
pushf
mov
mov
jp
sub
xor
out
mov
jp
jg
adc
sbbl
je
sub
loope
mov
enter
imul
test
mov
outsb
test
lahf
test
pop
and
bound
push
lock
cmp
mulb
mov
mov
xchg
xchg
nop
lock
jmp
lret
ret
push
popa
sti
and
inc
outsl
fabs
pop
fcomp
inc
les
add
sahf
add
shlb
sub
lds
fwait
add
dec
test
subl
dec
push
sbb
xchg
in
ret
mov
cwtl
inc
cmp
inc
add
add
inc
and
mov
push
inc
add
jmp
seto
shl
add
ror
test
test
adc
mov
push
shl
lea
ror
add
bswap
adc
call
pushf
rol
bt
pushf
mov
jmp
shlb
xlat
pop
cmc
adc
cmp
xchg
into
mov
mov
adc
mov
es
inc
outsl
pop
aaa
mov
shll
add
test
out
mov
mov
scas
mov
fdivrl
stos
popf
xor
movsl
out
fwait
lds
inc
scas
sub
adc
pushl
xchg
into
lods
mov
xchg
popa
cmp
addb
or
clc
mov
or
imull
movsb
cli
cld
mov
popa
aas
mov
jne
fiaddl
adc
test
cmc
or
pusha
or
dec
xorps
pop
es
jnp
mov
and
ret
xorl
lret
mov
pop
imul
loope
cld
mov
inc
cmp
fisubrs
in
adc
out
shlb
adc
xchg
xchg
jp
xchg
xchg
popf
adc
mov
rolb
push
je
pop
mov
mov
js
fsubrs
ljmp
int3
bound
cmpsb
pop
stos
out
add
out
sbb
pop
clc
fcmove
and
mov
les
enter
inc
mov
sub
push
bnd
pop
hlt
mov
sti
mov
adc
push
pop
in
mov
into
xchg
jmp
lret
xchg
pop
inc
cmp
add
sub
add
xchg
bt
add
pushf
lea
jne
setae
setnp
pushfw
pushf
setl
rol
ror
mov
bt
pushf
rol
clc
call
bt
cmp
call
jg
andb
push
sub
orl
cmp
mov
fwait
sub
add
out
jb
in
cltd
fsubl
mov
fistl
mov
aaa
popf
sbb
and
xlat
sbb
es
cmpl
xchg
mov
rcrl
cmp
aad
mov
jb
call
pop
xchg
inc
jo
jecxz
cmp
mov
data16
scas
jo
call
sub
call
cmp
inc
scas
sbb
fstps
jbe
xchg
into
scas
iret
mov
mov
xchg
negb
dec
jmp
loope
mov
cld
push
xlat
pusha
dec
and
lret
inc
adc
les
shlb
dec
fnstenv
xchg
add
adc
dec
nop
mov
ja
xor
mov
inc
and
and
mov
shll
mov
and
enter
add
sbb
jg
insl
ss
inc
cmp
add
adc
add
nop
mov
movzbw
not
pusha
mov
movb
pusha
pushl
ret
sbb
adcb
inc
sbb
fadds
mov
dec
pop
jno
test
into
mov
scas
or
xor
cwtl
pop
jecxz
sbb
push
xor
adc
adc
sbb
xchg
sbb
aad
xorb
inc
push
pop
mov
popf
rorl
cmc
fbstp
mov
mov
call
shrb
mov
icebp
lret
cmp
fidivs
mov
bound
dec
lret
sahf
sti
xchg
int3
mov
cmp
xchg
add
not
jmp
push
call
adc
lcall
ljmp
push
xor
gs
aam
inc
mov
dec
or
add
insb
add
inc
cmp
mov
outsb
mov
push
cs
jns
outsb
sbb
jns
or
in
xorb
xorl
nop
fs
xchg
and
or
inc
ror
jge
xchg
lcall
out
mov
ds
mov
mov
repz
mov
mov
mov
or
bound
dec
aas
push
sbb
dec
sub
cmp
fldenv
mov
pop
xchg
icebp
mov
mov
addb
mov
cmpsb
sub
stos
push
test
cld
adc
add
movsb
insb
popa
mov
pop
xchg
xchg
mull
in
jmp
mov
adc
push
add
das
or
outsl
sub
jns
mov
add
cmp
dec
std
push
mov
mov
xchg
lret
dec
xor
push
stos
xor
inc
dec
call
add
cmp
push
test
and
rcrl
or
jbe
mov
adc
push
add
rolb
mov
push
ret
test
add
push
lea
jmp
jns
clc
add
jp
cmp
test
out
sahf
hlt
es
jmp
xor
test
mov
inc
dec
jmp
fistl
int3
inc
mov
das
dec
int
mov
scas
adc
pop
ss
mov
sub
pop
pushf
sbb
xchg
pop
fimull
cmp
or
xchg
das
mov
inc
int
dec
fisttps
repnz
adc
movsl
inc
cmp
cmc
xchg
ja
xchg
cmp
das
dec
adc
popa
pop
cltd
pop
add
mov
mov
rolb
xchg
je
test
or
mov
xor
xchg
loop
loope
sti
cltd
in
inc
cmp
lcall
sti
dec
insb
inc
lock
xlat
mov
outsb
sbb
inc
adc
push
mov
stc
testl
xor
clc
jmp
jge
movsl
icebp
push
or
mul
cmp
je
pop
xor
es
and
es
cmp
or
sbb
adc
adc
mov
mov
mov
test
mov
sbb
sub
pop
jg
add
call
add
push
imul
pop
jbe
pop
call
fildll
stos
inc
pop
call
pusha
cmpb
pop
call
pusha
lea
jae
pusha
jmp
push
call
loope
push
call
aam
ljmp
mov
and
arpl
pusha
lea
je
cmp
call
mov
je
push
icebp
stos
arpl
adc
push
pop
push
sub
and
shll
cltd
fs
adc
cmpsl
je
sub
mov
in
js
sbb
fwait
jecxz
dec
sar
aad
mov
cmp
sub
push
push
cld
inc
xchg
js
push
ds
push
adc
lods
fadds
xorb
fistl
mov
push
cmpsb
xchg
mov
jb
mov
cmp
inc
sub
imul
imul
push
call
cmovnp
test
sbb
add
inc
loop
mov
inc
xchg
int3
movsb
bound
dec
adc
jns
dec
mov
fwait
mov
je
xor
add
mov
pop
push
or
cmp
xlat
mov
push
add
pop
insb
push
jb
out
pop
jl
leave
cwtl
shrl
pushf
adc
divl
scas
lea
mov
stos
push
pop
cli
jne
mov
xor
repz
jmp
push
cmp
test
imul
sub
add
pop
adc
imul
cwtl
pop
sub
rorb
mov
nop
icebp
mov
pop
cmp
fldenv
inc
cmp
jns
loopne
jmp
mov
subl
sbb
addl
sbb
pushf
lret
loopne
js,pn
adc
imul
adc
popl
push
mov
mov
cmp
xlat
sub
pushf
or
into
mov
cld
flds
fwait
xchg
sbb
cmpsl
ret
jg
cmp
push
hlt
xor
sub
jae
and
arpl
dec
add
faddl
xor
jp
iret
inc
js
lcall
mov
into
add
pop
or
daa
xor
dec
cltd
or
mov
aad
jbe
sbb
mov
jl
jns
and
adc
dec
cmp
ficomps
movsb
adc
mov
imul
mov
call
inc
inc
cmp
xor
lea
jb
push
pusha
cmp
push
pushl
call
pushf
pushf
lea
ja
call
jmp
dec
stc
cwtl
imul
popa
cmp
rorb
les
mov
and
int
pop
loop
mov
add
out
adc
stos
dec
jmp
push
addr16
daa
cmpsb
push
movsb
or
shll
add
inc
cmp
nop
mov
repnz
ljmp
add
xorl
cwtl
testb
pop
dec
outsl
std
incb
jp
pop
fnsave
enter
inc
cmp
leave
push
pusha
lea
jne
bt
cld
popf
pushf
mov
lea
jmp
push
call
mov
adc
outsb
push
out
inc
ds
xor
sbb
ret
jg
pusha
sahf
and
inc
insl
inc
out
push
jp
push
sub
pushf
faddl
mov
icebp
jae
push
out
call
shll
mov
sar
scas
shrl
sbb
push
jg
stos
pusha
rolb
cs
lds
push
push
mov
xor
push
jle
mov
fcoml
jne
ja
pop
das
pop
or
popf
inc
cmp
rcrb
add
jmp
pop
lahf
idiv
ds
cmc
and
hlt
mov
scas
rolb
lock
pop
idivl
ds
push
xchg
les
cli
clc
xor
js
push
jg
xchg
cmp
pop
push
sarl
xchg
enter
sub
shlb
dec
mov
imul
and
es
cmp
add
mov
and
test
mov
pop
fcom
in
sbb
jmp
scas
fisttpl
inc
cmp
add
adc
xorb
call
je
add
or
push
call
insl
push
call
pop
mov
or
testl
pushf
mov
push
stc
rol
mov
mov
dec
shll
call
sahf
stc
mov
xchg
inc
or
lods
arpl
addb
stos
loop
sbb
push
fisubs
jg
cld
and
push
add
jg
mov
in
fnstcw
stc
push
flds
jne
jne
push
pushf
lds
cmp
cmp
jle
mov
lcall
lods
rcll
sub
cmp
jo
mov
in
inc
int
xchg
mov
push
cmpsl
sbb
adc
mov
adc
shlb
add
mov
into
push
out
aas
pop
jne,pn
fsub
insl
push
aas
xor
mov
loope
xchg
pop
mov
roll
or
jno
lds
cmp
jnp
mov
movsb
loopne
push
inc
cmp
ss
stos
imul
jle
add
hlt
mov
xchg
sub
pushf
and
cmp
mov
pop
lahf
rcrl
aad
mov
inc
add
or
or
arpl
pop
test
pop
jp
and
dec
sub
scas
sbb
fs
cmp
jne
das
addl
xor
lock
pop
fwait
dec
es
push
pop
mov
ss
sub
test
sbb
pop
xlat
mov
inc
cmp
in
stc
test
pusha
pushf
lea
je
bt
pusha
pusha
movw
sub
bt
clc
add
jl
cmp
pusha
call
xor
fsubp
mov
push
and
sarb
rclb
sbb
xor
sbb
lret
es
cmp
xchg
jp
inc
cmp
movntq
xor
push
mov
dec
les
cmp
enter
test
sbb
add
cmp
bound
fisttps
stos
adc
jg
fcoms
pop
pop
push
jg
mov
adc
cwtl
sarl
dec
mov
cmp
add
add
add
add
frstor
int3
push
cmp
fs
nop
dec
xchg
leave
pop
ret
jecxz
out
int
jno
inc
sub
test
and
jne
or
int3
loopne
in
jle
divb
into
fsubs
add
daa
or
fdivp
xchg
mov
ficompl
mov
push
jno
adc
mov
and
icebp
cmc
imul
mov
or
dec
and
inc
cmp
cmp
mov
add
fnstcw
cmp
push
cltd
ljmp
pop
sbbb
loopne
movsb
aad
int
lods
adc
add
popa
mov
adc
arpl
and
jp
push
mov
mov
jp
push
push
divb
mov
es
jle
pop
bound
pop
mov
mov
mov
mov
jle
push
adc
push
leave
xchg
notb
sub
aas
pusha
cmp
int
fs
je
bt
pusha
cmp
jmp
push
call
add
and
fs
ja
mov
bt
push
rol
sub
neg
sbb
sub
add
movzbw
mov
setl
mov
cmc
call
pushf
pushf
test
add
pushf
pushl
lea
jmp
lea
ja
mov
sar
shl
mov
sub
cmc
btr
add
stc
mov
xor
dec
mov
pusha
repnz
pushf
pushl
jmp
push
call
out
and
dec
push
jb
out
sub
mov
mov
mov
mov
and
cmpsl
sbb
lret
mov
popa
cmp
loopne
cmpsl
add
fnstcw
fisubl
lret
das
insl
insb
or
pop
adc
hlt
addl
test
lods
inc
aas
lret
xor
mov
add
dec
adc
js
test
cmp
cmpsl
dec
inc
bnd
push
call
mov
mov
jno
sub
pop
dec
clc
movl
repz
inc
sub
out
movsl
xchg
idivl
push
jb
out
dec
fbstp
cli
dec
sbb
mov
mov
dec
mov
mov
lahf
sbb
pop
mov
daa
dec
or
les
jmp
xchg
subl
repnz
lock
into
xchg
push
orl
pop
test
sbb
movsl
cwtl
inc
cmovo
mov
push
inc
cmp
stos
sub
add
jne
ss
adc
orb
rcll
cmp
pop
sub
jbe
nop
in
std
data16
jnp
and
roll
rcl
dec
arpl
pusha
out
scas
faddl
dec
bound
js
decb
mov
mov
adc
xor
jae
nop
repz
pop
and
adc
inc
lcall
adc
add
dec
pop
push
or
movsl
pop
pop
xor
xor
movb
lea
jne
shr
bsr
call
push
call
pop
jp
int
push
push
shl
jge
xor
dec
jne
mov
cmpl
xorb
pop
sub
and
cli
in
std
imul
and
insl
lahf
jecxz
xchg
adc
mov
mov
outsl
enter
lods
cwtl
inc
loop
in
sub
xchg
repnz
out
loopne
stos
push
cltd
sub
out
mov
loop
inc
xchg
roll
jbe
outsl
sub
jne
push
xor
jns
cli
inc
cmp
add
push
or
js
add
add
add
jmp
jmp
cmpsb
fiaddl
jp
jb
mov
xchg
add
cmpb
data16
xlat
push
push
leave
sahf
pop
jno
sbb
mov
out
imul
arpl
xchg
stos
lods
jb
scas
pop
cmc
fldcw
inc
lds
fcoml
and
in
pop
mov
adcb
cmp
stos
jecxz
mov
mov
outsb
push
lock
fstpt
stos
incl
imulb
cmp
add
jae
popa
addr16
outsl
js
add
inc
and
xor
push
add
push
call
adc
scas
inc
mov
pusha
add
add
add
add
add
sar
adc
lahf
out
mov
xor
in
jl
outsb
test
mov
mov
adc
mov
and
jecxz
xchg
mov
rclb
pop
ljmp
insl
lds
pop
aam
in
test
es
mov
fwait
cld
cmpsb
cmc
nop
pop
inc
cmp
fs
jne
push
movb
movl
not
lahf
mov
pusha
movb
push
lea
push
movl
pushf
pushf
pushl
mov
push
pushl
ret
lea
je
pusha
pusha
lea
jmp
mov
push
lea
jb
pushf
pushl
mov
lea
jb
push
pusha
movb
mov
jmp
push
call
mov
aas
and
pushf
pushf
lea
jne
call
mov
lea
push
pop
pop
movsbw
lea
pop
jmp
cmpsb
pop
pop
push
xlat
repz
mov
cwtl
push
testb
sbb
pop
stc
push
mov
jo
push
adc
xchg
sub
jb
jo
jg
jmp
add
xchg
incb
cmp
jp
xor
dec
push
enter
mov
push
test
lcall
cmp
jb
test
or
mov
rcrb
sbb
xchg
inc
pop
fistpl
or
jl
push
fdivl
mov
mov
mov
inc
cmp
add
add
push
rcr
shld
movsbw
daa
mov
das
neg
xor
sub
sar
rcl
push
adc
sbb
push
add
aad
cmp
sub
movzbw
not
movsbl
pusha
lea
push
jmp
repnz
sub
out
js
insb
aaa
inc
cmp
inc
and
shll
hlt
addl
inc
data16
mov
mov
ss
add
in
stos
faddp
insl
mov
les
stos
add
lock
xchg
jne
jb
sub
std
js
test
xchg
rcrl
std
das
enter
pop
mov
arpl
inc
sbb
jns
pop
add
cmp
add
push
or
call
mov
std
popa
adc
jae
mov
les
outsb
incl
dec
hlt
movsb
inc
rolb
jp
imul
test
pop
xor
bound
push
popf
xor
mov
icebp
mov
lods
pop
ss
mov
lea
popf
hlt
out
cmp
inc
inc
repnz
add
xor
repnz
sbbl
in
rorb
shlb
outsb
sti
add
mov
mov
bts
neg
xor
mov
bt
clc
cmp
call
push
call
out
push
call
stos
pusha
movl
mov
jmp
push
mov
mov
inc
movb
pusha
inc
bt
cmpb
jmp
mov
lcall
sbb
push
or
jle
fiadds
push
insb
sbb
scas
sub
sbb
ljmp
imul
pop
lock
push
mov
adc
adc
pop
stos
insb
or
lcall
mov
mov
xchg
dec
mov
std
inc
outsl
mov
jno
push
lret
inc
add
scas
sbb
pusha
push
mov
pop
dec
test
cmp
scas
push
outsb
add
imul
les
cmp
leave
mov
call
add
push
imul
insb
insb
outsl
arpl
jmp
push
call
jge
pushf
pushf
mov
pushf
not
xchg
pop
mov
movsbl
movzbw
mov
pushl
lea
jb
movzbw
lea
pop
pusha
pushf
pushl
ret
lea
jne
cwtl
setl
movzbw
movb
movzbw
bswap
mov
call
fnsave
mov
mov
xchg
inc
aaa
arpl
push
and
cmc
xchg
mov
in
cmp
adc
popf
mov
in
cld
int3
sar
fldl
roll
fists
fsubs
push
jo
push
lock
xchg
test
icebp
lds
mov
xlat
inc
cmpsb
fsubs
imul
sbb
stc
popa
aas
pop
iret
mov
stos
sbb
xlat
and
inc
cli
aaa
inc
xchg
mov
cmpsl
lret
mov
leave
inc
pop
jb
imul
cmp
pop
push
loopne
xchg
jp
into
les
nop
leave
mov
xchg
pop
and
setae
cltd
insl
push
pop
jns
inc
xor
lcall
inc
pop
mov
cmp
jb
cmp
lock
adc
outsl
add
dec
insb
in
fucom
rolb
jecxz
mov
enter
xor
jbe
lods
and
inc
jbe
leave
inc
xchg
sub
and
pop
rep
in
push
cltd
push
adc
mov
mov
add
shlb
arpl
cmp
push
jge
push
add
dec
pushf
inc
cmp
testl
push
push
inc
int3
fidivrl
std
jp
xor
and
jg
test
mov
cs
adc
jae
dec
cmp
dec
mov
ja
into
pop
mov
pushf
popf
mov
inc
mov
mov
sbb
xor
movsl
mov
rcll
lock
fcmove
shlb
movsb
test
add
jmp
stos
rcr
sub
jbe
lcall
lock
inc
cmp
out
pop
xchg
cmpsb
out
fstl
fld
mov
cmc
test
pop
or
mov
inc
jecxz
and
push
jb
nop
push
adc
add
mov
sbb
pop
sahf
ret
lock
mov
jl
cmp
push
insb
imul
rcrl
push
mov
push
sbb
addl
popf
inc
outsl
insl
sbb
adc
or
inc
sbb
lock
cmp
aas
dec
mov
mul
lods
loop
sub
pop
and
pop
and
jp
in
leave
push
ja
add
das
les
out
pop
cmpsb
inc
es
bound
jmp
inc
std
adc
or
xor
int
fisubrl
push
pop
push
sbb
sbb
lods
out
pop
xchg
add
jl
out
addr16
rorb
out
addl
inc
outsb
mov
lock
and
fwait
inc
cmp
add
or
add
pushf
jle
lea
jne
mov
not
lahf
not
mov
push
movw
pushl
pusha
lea
jmp
repz
push
call
push
sub
enter
testb
jno
mov
popf
push
cltd
das
and
out
mov
std
mov
inc
inc
sub
push
cmpsl
repnz
out
cltd
mov
pop
enter
sub
popw
mov
xor
push
imul
sub
dec
push
test
or
jge
xchg
mov
popf
in
into
fsincos
inc
das
call
add
shlb
sub
ficompl
mov
or
inc
xor
jbe
pop
lcall
mov
push
sub
jmp
mov
nop
fbld
movsb
and
gs
arpl
iret
push
mov
xchg
add
cmp
xor
test
push
jae
mov
fmul
xchg
cmpsl
mov
stos
inc
cmp
sbb
out
mov
mov
jb
push
ss
sub
dec
push
pushf
push
call
mov
test
mov
sub
or
or
stos
test
mov
mov
lea
je
bt
stc
sub
pusha
pusha
test
cmp
jmp
andl
mov
inc
fs
or
dec
std
fists
stos
push
ja
adc
test
push
and
loop
xchg
push
and
inc
or
push
xor
add
mov
inc
mov
insb
mov
pop
xor
loopne
lret
push
cmpsl
pop
pop
popa
mov
shr
js
cmpsb
ja
out
ljmp
fisubrl
inc
notb
xchg
sbb
cmp
adc
and
ljmp
lret
mov
xchg
pushf
lret
xchg
sbb
gs
movsb
inc
cmp
add
or
add
scas
sub
or
out
stc
aad
push
call
imul
cltd
roll
not
and
rorl
cmp
inc
int3
call
xchg
xchg
sub
mov
inc
cli
inc
jne
adc
out
jecxz
add
jl
pop
jge
mov
into
ret
rcll
stos
insb
pop
jns
rol
loope
jne
add
mov
xchg
pop
out
rol
cs
imul
test
in
sbb
add
push
jge
pop
push
addr16
insl
test
jae
jno
popl
inc
pop
inc
and
dec
sbb
shrb
sbb
push
loop
inc
xor
or
jmp
stos
int3
pop
or
test
lcall
aad
mov
test
sub
inc
jmp
ret
adc
jno
pop
dec
shrb
push
pop
jge
xchg
aam
sub
ja
push
push
jo
sub
xchg
in
in
mov
xchg
stos
xor
jne
mov
out
mov
aad
add
cltd
cmp
test
or
add
lea
ja
pushf
stc
cmp
add
add
pusha
call
push
call
add
adc
lods
push
lds
pop
mov
push
ja
or
adc
insb
jl
rcrl
pop
and
jne
push
pop
lcall
jbe
add
mov
addr16
dec
int3
nop
ficoms
mov
sbb
scas
push
loop
inc
imul
mov
sub
pushf
repz
cld
or
dec
mov
cmp
mov
xchg
mov
mov
xor
lret
jb
cmp
add
sti
or
cmc
popf
scas
out
insb
aas
rcll
jbe
lcall
push
inc
lret
sahf
cli
cmp
rorl
jecxz
out
push
mov
je
daa
rorb
or
jno
sbb
aas
cmc
cmp
sbb
adc
cs
loop
out
divl
xchg
inc
xchg
jo
pop
dec
into
push
cmpsl
dec
lock
call
sbb
pop
xchg
sahf
mull
inc
mov
fs
adc
pop
imul
inc
mull
lds
enter
hlt
jbe
dec
sbb
xchg
or
dec
faddl
push
call
scas
sub
fbld
fiaddl
cmp
stos
mov
ds
pop
dec
push
inc
rcrl
fs
in
sub
or
aas
cld
scas
sarb
push
xlat
sbb
push
xor
inc
mov
mov
addl
das
inc
outsl
add
and
or
js
jne
xlat
inc
cmp
add
icebp
or
jnp
dec
pop
jmp
std
call
push
push
call
iret
push
mov
cmpsb
out
jns
bts
fs
pop
sub
pop
outsl
dec
aaa
jp
push
mov
cmpsb
and
mov
aam
dec
arpl
inc
adc
jne
jo
cmc
out
adc
aam
push
out
inc
lret
xchg
jge
mov
dec
into
push
mov
xchg
sbb
les
popl
inc
loope
mov
stos
mov
inc
daa
mov
mov
inc
fildll
in
outsl
mov
jmp
push
dec
adc
dec
add
negb
add
or
add
call
je
sub
sar
or
call
push
call
mov
insl
clc
call
into
fsubp
cmp
dec
movw
pushf
movb
mov
pushl
ret
mov
repz
insl
mov
test
xchg
add
popf
in
pop
mov
insl
mov
lcall
mov
jmp
adc
pop
js
xchg
aad
stos
push
mov
fisttpll
inc
idivl
cmp
stc
jbe
ret
push
cmc
sbb
lret
insl
xlat
pop
push
ret
dec
add
insb
or
std
repz
daa
add
enter
push
ss
push
pop
cmp
dec
jg
out
push
std
adc
cmc
and
addl
pop
aaa
fisttpl
jns
cmp
add
or
add
cmp
or
add
jae
pop
add
jno
jne
fstpl
xor
std
fimull
and
mov
push
mov
mov
in
sarl
gs
outsb
pop
xor
gs
cmpsb
lods
pop
xchg
push
pop
andl
xchg
jb
lcall
sub
scas
add
xchg
lcall
mov
adc
test
mov
mov
rolb
cmp
add
repz
xor
inc
and
inc
lea
ja
push
sub
rcl
clc
sub
lea
add
or
dec
cmc
mov
sar
ror
mov
cmp
stc
push
repnz
call
push
call
jmp
jmp
push
call
out
shlb
add
pop
test
and
lea
call
jge
pusha
pusha
mov
lea
jne
call
push
call
jp
push
add
std
or
ljmp
cmp
setp
lret
xchg
ljmp
cmp
and
insl
insb
orb
lret
sbb
xor
lds
popl
dec
inc
popa
mov
mov
xchg
sub
jmp
push
test
call
push
pop
sbb
pop
mov
cld
sbb
aas
and
xchg
inc
jo
hlt
push
xchg
stos
cld
dec
adc
push
stos
fisubrs
add
sbb
aam
out
sub
adc
cmp
mov
add
popa
xor
sbb
dec
ss
xchg
in
mov
outsb
or
dec
into
hlt
xchg
psllw
dec
sbb
cmp
popa
add
xorl
in
jnp
push
aam
int
arpl
cmp
mov
fcoml
cmp
lahf
mov
ret
js
scas
ljmp
sub
cwtl
int3
mov
mov
mov
xchg
push
or
jnp
jae
popf
pop
scas
and
imul
scas
lret
inc
addb
call
andb
mov
xchg
push
push
push
push
inc
and
sub
pop
cmp
call
push
xchg
arpl
orb
xor
sbbb
jo
repnz
mov
push
mov
pop
jl
int
jo
add
inc
pop
cmp
test
push
cld
mov
test
insb
mov
jb
push
jb
add
in
inc
inc
cmp
add
icebp
or
mov
jmp
pushf
clc
xor
test
clc
clc
clc
repnz
jmp
mov
jp
xor
outsl
sub
iret
test
inc
cmp
popa
in
dec
test
and
aas
mov
dec
outsb
mov
cli
mov
aas
jge
dec
das
inc
fstpl
mov
jne
xor
jb
outsl
sub
mov
xchg
daa
fwait
jo
sub
insl
outsb
dec
cwtl
push
pop
mov
loop
shlb
icebp
and
or
jo
sub
adc
push
jp
in
mulb
mov
fistps
decl
test
imul
leave
xchg
rclb
push
mov
dec
adc
clc
sub
ljmp
sbb
and
not
cmc
pusha
pushl
bt
xor
std
mov
pushf
call
pushf
movl
pushf
pushl
popl
pushf
push
movl
pushl
ret
cmp
jmp
push
call
and
adc
inc
jno
in
repnz
mov
xchg
leave
add
mov
lcall
sarl
pop
xchg
adc
in
outsb
xlat
cs
pop
int3
out
in
push
xor
fisubs
cwtl
out
inc
in
pop
push
push
adc
addb
jnp
out
lea
push
adcb
in
loope
fmuls
sbb
addr16
dec
repnz
fmul
jg
adc
mov
inc
push
je
xchg
stc
lods
fildl
sub
in
inc
cmp
add
in
add
in
push
call
mov
add
pop
or
lcall
mov
mov
lea
daa
cmpl
pop
xor
data16
cli
dec
in
push
enter
aaa
mov
loop
adc
mov
inc
movsb
dec
dec
push
sub
das
adc
ret
mov
and
notl
or
or
std
adc
or
xor
scas
xchg
call
nop
jge
inc
sbb
pop
enter
leave
mov
xor
das
push
test
mov
sbb
movsb
cs
mov
mov
and
add
pusha
test
sub
lock
in
test
or
pop
pop
xor
sarb
push
jae
jg
les
push
shlb
cmp
lods
mov
daa
addb
and
cmp
sarl
sub
sbb
push
fnsave
in
xchg
insl
repnz
mov
pusha
sbb
push
inc
dec
sub
imul
insb
jo
xor
stos
jecxz
fnstcw
ss
das
fwait
inc
cmp
movsl
sarb
xor
ds
scas
mov
imul
aas
jbe
les
jno
rolb
sub
adc
push
outsl
sbb
pop
sar
jecxz
mov
mov
mov
pop
jl
inc
or
pop
stos
push
fimuls
mov
mov
movsl
jne
pop
lcall
shr
mov
jae
nop
cwtl
pop
loopne
and
rcrb
rep
int
repz
dec
inc
cmp
call
push
call
dec
cmp
gs
xor
fs
insb
add
stos
add
add
inc
xchg
out
lahf
pop
stc
push
xchg
cmp
mov
nop
clc
cltd
xchg
popf
lods
cmp
stos
cs
jno
xchg
and
inc
add
test
pop
or
lea
jl
std
push
fstpl
mov
jb
cmp
inc
ljmp
lret
mov
pop
cmp
or
jmp
jbe
pop
and
test
lcall
addr16
call
mov
test
fisttps
add
push
jmp
call
in
push
call
mov
add
sahf
sub
repz
sar
adc
test
xchg
xchg
test
rcrl
loopne
call
inc
mov
ret
lods
mov
sbb
sarl
call
pop
push
jb
popa
iret
leave
arpl
push
js
pop
and
or
iret
cld
shl
mov
add
add
aaa
repz
outsb
sub
add
sahf
les
mov
mov
add
inc
aas
push
add
ret
lea
stos
pop
cli
call
cs
enter
sbb
cmpsl
cmpsb
les
push
dec
sub
in
dec
mov
mov
sahf
fs
pop
jmp
aam
sbb
pop
cmpsl
push
adc
jmp
or
pop
mov
into
pop
xor
sub
test
movsb
dec
enter
fisttpll
push
lret
xor
sbb
insb
xchg
ljmp
mov
js
jge
inc
sub
cmp
mov
pop
stc
pop
sarb
fimull
or
mov
sub
push
and
lods
push
sbb
sbb
xlat
dec
cltd
loop
out
aas
push
add
ficomps
mov
lretw
or
fimuls
add
cmp
lods
sub
out
cli
jmp
dec
jge
int
pop
cwtl
das
jno
xchg
sti
mov
das
sbb
in
mov
fwait
js
and
dec
adc
inc
or
icebp
inc
cmp
add
add
add
movsb
push
call
mov
cmp
call
jo
dec
pop
sub
jg
cmpb
pusha
pushf
lea
jne
rcr
rcr
mov
lea
mov
cmp
cmp
bt
add
bt
pusha
test
movzwl
lea
shl
mov
push
cmp
mov
cmc
add
sub
clc
mov
pusha
jmp
pop
mov
or
fnstcw
cmp
inc
adc
inc
xor
xchg
pop
push
jae
or
inc
push
cmc
cmp
xchg
push
cmp
leave
sbb
jne
cmp
lret
adc
fdivl
add
out
cmpsb
sub
sbb
or
fiadds
sarl
fdiv
mov
ficoms
push
push
inc
mov
or
ficomps
mov
or
pop
sbb
and
cmp
xchg
pushf
lea
jnp
lea
pusha
lea
lea
jmp
dec
incl
pop
cmp
es
sahf
fidivrl
dec
fldt
pop
lret
add
mov
pshufw
and
shl
cltd
jl
aad
pop
sub
ret
into
aaa
cmp
inc
mov
popf
sub
push
pop
ret
outsb
stos
fcmove
pop
mov
push
stos
pop
decb
xchg
sub
stos
cmc
add
jb
fstpt
sub
stos
sbb
out
sarl
jp
imul
daa
imul
int
fldenv
cmp
push
xor
fs
insb
add
dec
adc
cmp
es
push
xchg
aaa
or
int3
sbb
loope
loope
jl
add
mov
arpl
sbb
sbb
je
jns
xor
or
xlat
dec
pop
pushf
pop
push
out
xchg
cld
mov
sub
inc
mov
std
daa
or
fcmovb
sbb
sub
adc
rcrb
mov
xor
mov
dec
xchg
test
repz
mov
jae
pop
aas
inc
add
fdivl
xor
lods
js
fwait
dec
andl
push
ds
cmp
mov
sbb
xor
cld
and
std
and
lods
test
jmp
or
dec
es
adcl
jb
in
push
cs
cmc
jae
and
and
sub
faddl
test
dec
and
xor
sbb
pop
xchg
mov
aaa
mov
mov
negl
mov
push
jbe
inc
pop
je
dec
es
push
lds
mov
pop
dec
mov
inc
mov
push
add
dec
or
inc
into
movsb
pop
sub
dec
inc
data16
or
xorb
xchg
fstl
call
mov
sbb
and
popf
xor
xor
addr16
mov
cmp
addr16
popf
popa
into
and
loopne
push
or
bound
or
aam
pop
jmp
leave
divb
dec
mov
clc
aas
pop
mov
xchg
in
mov
cmp
js
dec
mov
mov
sti
jg
inc
lods
in
or
in
mov
sub
xchg
movsl
fimuls
xlat
cmpsb
lock
test
aad
jl
jg
divl
mov
pushl
cmpsl
into
int3
jne
and
or
sub
shlb
clc
outsl
aam
movsl
mov
jno,pn
jmp
mov
push
rcr
push
xor
jmp
push
lea
lcall
xchg
repz
jg
and
jbe
and
mov
popf
cltd
sti
add
sbb
loope
dec
add
push
movsl
and
clc
out
insb
push
mulb
test
ret
movsl
subb
mov
iret
inc
sub
fbstp
pop
stos
outsb
sub
fmull
push
jmp
and
sub
mov
mov
jecxz
and
loope
pop
sub
out
lods
leave
mov
dec
inc
cmp
ret
test
add
xchg
cmc
test
mov
adc
or
jns
jmp
popf
stc
push
stos
test
mov
cli
jle
testb
test
loop
imul
lea
xchg
sbb
je
neg
scas
jno
inc
add
mov
rcrb
lea
xchg
xor
mov
jae
mov
dec
or
jmp
inc
cmp
popf
push
call
dec
aas
outsb
cmp
js
pop
xlat
cmc
add
sarb
xchg
lret
or
into
inc
xchg
sbb
mov
sub
push
cmpsb
nop
adc
mov
out
lods
mov
inc
addl
shll
scas
adc
int
movl
cmp
or
xor
xor
inc
ljmp
jmp
push
enter
mov
insb
cmp
lret
push
xor
jnp
push
es
insl
sbb
cmp
stos
je
call
mov
movsl
je
call
cmp
dec
pop
ss
pop
mov
jecxz
jno
cmc
cmpsb
lret
xchg
xchg
stc
popf
in
test
xchg
mov
movsb
cmp
cmp
sub
jo
jecxz
into
lods
stos
mull
aas
dec
push
inc
es
inc
xor
inc
cmp
scas
je
lock
orl
sbb
jne
mov
add
mov
push
xlat
xchg
or
sub
inc
ds
in
out
push
ja
mov
movb
out
movsb
dec
clc
jae
std
sbb
sahf
into
or
rcl
aad
mov
sbb
lret
ja
mov
mov
mov
in
je
pop
je
in
mov
outsl
stc
pop
cmp
orps
jbe
clc
cmp
cmp
bt
sub
cmc
test
test
bt
shr
add
clc
jmp
pushf
jmp
or
pop
pop
mov
pop
xchg
in
fisttpl
push
adc
adc
or
loopne
add
imul
or
aad
outsl
cs
mov
inc
jns
pop
xchg
push
clc
jl
in
popf
imull
scas
and
insb
popa
shl
xchg
add
dec
dec
xchg
jbe
xor
push
cwtl
and
lods
mov
xor
jne
in
jbe
cltd
into
dec
mov
dec
jge
jg
mov
insl
or
inc
jl
xlat
stos
cmpsb
pusha
fadd
xchg
dec
bound
push
ds
pop
add
push
inc
push
jp
cld
out
sbbb
inc
mov
push
mov
fsubrs
cmp
add
or
insb
push
mov
lahf
sbb
dec
adc
inc
sbb
mov
stos
push
sub
sbb
popf
inc
sub
sub
or
inc
and
fdivs
addr16
cmpsb
mov
popa
lods
lods
jl
push
and
into
das
xchg
out
outsb
pop
inc
cli
and
pop
mov
orb
or
and
rolb
in
mov
xchg
int3
xchg
flds
cmp
notl
ja
xor
aam
loop
xor
pop
add
test
or
roll
ret
js
mov
push
data16
rcrb
xor
cltd
repz
mov
ds
cmpb
inc
dec
inc
adc
sbb
or
lds
in
test
mov
andb
les
stos
mov
loop
add
add
dec
outsl
popa
fs
imul
add
scas
outsl
call
sub
add
je
or
lock
add
lock
mov
pop
jg
dec
into
fwait
call
lods
rclb
jnp
imul
and
enter
mov
test
dec
xlat
jnp
fwait
mov
movsl
pusha
gs
dec
int3
xchg
or
sub
leave
xor
fs
or
insb
movsb
mov
ja
outsl
xor
cmpsb
dec
or
ljmp
lods
cli
lods
and
dec
es
cmp
daa
shrd
push
xor
push
clc
sar
xchg
push
test
daa
xchg
push
shr
not
sbb
shrd
push
movsbl
push
btr
bsf
xchg
lea
cmc
cwtl
shrd
movsbw
mov
pushf
cmp
mov
test
call
ljmpw
mov
xor
jle
popa
xchg
sub
ret
nop
mov
mov
fstpt
mov
addl
xor
jns
aam
enter
add
sbb
jecxz
and
outsl
fstpl
sahf
sbb
ret
pop
xchg
inc
mov
sub
push
pop
or
out
and
lds
fistpll
mov
mov
das
lret
hlt
scas
out
repnz
mov
xorb
push
jne
push
pushl
ret
pushf
lea
call
pushf
call
push
call
dec
fimuls
out
add
dec
mov
push
or
ret
test
movsb
pop
xor
sarl
jae
in
sti
pop
cmp
sub
repz
hlt
test
xor
mov
rep
pmulhuw
and
mov
add
es
lea
mov
lds
lds
jae
pop
cmp
fxch
out
mov
out
lds
lcall
cli
lods
shlb
sub
inc
cmp
pushl
rep
not
push
mov
mov
movb
movb
lea
jmp
mov
out
xor
mov
rcll
mov
xchg
nop
ficompl
mov
pop
ds
xchg
jae
lcall
jmp
inc
mov
xor
or
mov
int
pop
dec
xor
out
sub
mov
xchg
mov
mov
lock
jle
sub
pushf
mov
cmp
and
push
jg
call
popa
sub
mov
data16
pop
pop
and
sbb
pusha
sbb
inc
cmp
in
pusha
pusha
call
mov
lea
jne
dec
bsf
shl
dec
mov
pushf
stc
call
push
call
inc
in
mov
stos
or
add
cmp
fwait
xor
xchg
subb
packssdw
ja
js
dec
sbb
mov
sbb
test
cli
je
and
adc
and
shll
mov
and
ljmp
or
ja
jb
inc
mov
cli
cs
mov
test
inc
aas
jmp
cmp
pop
xchg
repnz
jne
push
cmc
pop
cmp
test
aas
std
cmc
or
xchg
shll
and
add
test
sbb
inc
and
roll
sbb
push
call
inc
popf
loop
imul
jle
dec
mov
es
sbb
push
and
xchg
in
loope
sbb
mov
dec
xor
adc
xchg
pop
insb
stc
jb
or
outsb
mov
mov
xor
jnp
shlb
loop
test
ja
pop
mov
ficompl
or
andl
inc
sbbb
and
push
les
out
dec
cmp
add
pushf
xchg
out
add
sub
in
add
loop
in
mov
mov
jp
inc
test
jl
stos
jge
pop
xchg
rcl
pop
ficomps
int
loopne
jns
cwtl
push
xchg
adc
and
pop
mov
xchg
cwtl
lret
adc
or
xchg
sub
mov
lods
aaa
out
test
or
lea
and
in
aas
ret
xor
mov
cli
sub
pop
int3
shll
ret
test
js
jne
fistpll
mov
dec
loope
pop
dec
stos
sbb
leave
iret
mov
sarb
jle
ficoms
push
pusha
sub
loope
mov
sbb
lock
notl
push
and
sbb
xchg
lahf
aad
or
mov
lods
pop
fistps
push
dec
cmc
xchg
sub
test
arpl
lahf
aad
popa
ss
dec
fildl
xchg
fistpll
in
xchg
leave
test
mov
fldenv
scas
js
cmpsb
xor
xchg
rcll
add
inc
call
das
mov
int
outsb
mov
cmpsl
xchg
mov
push
repnz
or
and
test
push
push
lahf
jne
lock
jge
adc
bound
push
xor
and
int
aaa
es
xlat
jns
repz
pushf
arpl
dec
shlb
add
clc
push
in
or
scas
xchg
dec
sub
cld
or
imul
imul
add
push
jp
push
dec
test
cmpsl
out
sbb
pusha
xchg
int
lock
frstor
enter
ficompl
xchg
inc
cmp
stos
mov
ficoms
fwait
mov
aaa
inc
aas
push
sub
in
mov
aaa
mov
jae
mov
fcoms
inc
sub
aad
lods
sub
xor
sti
inc
sbb
xchg
mov
bound
pop
mov
push
movsl
pop
ret
sub
add
xor
dec
fisubl
testl
push
dec
mov
cltd
pop
jnp
sub
test
or
xor
pop
inc
cmp
pusha
cmp
xchg
call
mov
mov
rorb
cltd
lds
sarl
fstps
ds
orb
loope
adc
mov
movl
push
out
or
mov
stc
decl
loope
pop
sub
pop
sti
push
sbb
mov
loop
iret
enter
adc
xchg
popa
adc
adc
mov
shrb
fmull
xor
add
sub
xor
icebp
pop
adc
inc
cmp
cld
cmc
imul
push
repz
mov
cltd
xor
sbb
or
out
jb
add
lret
arpl
out
icebp
or
add
xor
addr16
push
or
push
push
and
scas
cli
cld
sub
sub
lcall
sub
test
jle
pop
mov
das
mov
xor
inc
inc
push
adc
pop
push
and
push
cmp
sbb
dec
pop
cwtl
stos
sub
jbe
out
cmovb
push
push
mov
sub
cmp
cmc
add
roll
inc
cmp
fiaddl
gs
add
add
add
jo
fisubrs
ds
jns
jne
jge
push
pusha
cmp
jmp
mov
out
mov
sti
enter
stos
out
mov
rcll
addr16
and
jl
into
dec
jae
add
or
dec
js
push
and
cwtl
and
hlt
jbe
xor
pop
into
scas
mov
inc
stc
xchg
rcrb
sub
repnz
cwtl
sub
arpl
ficomps
jb
leave
or
cli
cmpsl
fisttpll
or
sti
jns
shrl
stos
es
call
xor
push
call
mulb
xchg
push
pop
fisubl
cmc
inc
xchg
mov
jp
xor
sub
xchg
push
cmp
repz
lock
pop
cmp
mov
orl
sbb
pushf
pop
aam
jb
sub
push
pop
mov
dec
ret
add
sbb
cmp
test
sbb
jp
jmp
subl
fsub
xchg
adc
add
mov
test
mov
lahf
idivb
bound
icebp
jne
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
jp
fwait
dec
fwait
sub
call
scas
bnd
jno
imul
and
fstpl
call
das
cli
ss
js
les
je
adc
xor
pop
inc
imul
je
loope
fsubrl
aad
push
js
sub
cmp
jbe
mov
mov
dec
inc
cmp
shll
ffree
sbb
outsb
iret
pop
loop
adc
popa
or
inc
and
or
inc
cmp
xchg
fwait
and
scas
dec
mov
add
call
sbb
mov
or
ds
call
jae
out
jbe
leave
add
in
fsubrs
adc
clc
xor
push
rorb
pushf
jmp
inc
in
mov
loopne
cmpb
iret
andb
aaa
inc
aas
push
ss
aas
mov
es
adc
mov
xor
jg
mov
shll
outsl
loope
dec
push
push
inc
dec
mov
jb
push
cmpsl
cmc
dec
into
add
inc
iret
mov
repnz
fstpl
sbb
pop
mov
mov
inc
xor
std
test
outsl
add
fcoml
ret
xor
std
jecxz
movsl
jecxz
push
cmp
lods
jge
fdivr
adc
mov
cmp
mov
jns
push
lea
cmpsl
xchg
divb
imul
inc
xorb
mov
sbb
or
jno
ja
aas
inc
cmpb
cltd
pop
adc
jmp
orb
jbe
pop
pop
xchg
fildl
and
imul
idivb
popf
stos
not
call
xor
lea
js
pushf
mov
pusha
lea
call
test
pusha
cmp
pushf
lea
jae
jmp
push
call
pop
iret
stc
ds
popf
ret
xor
mov
jno
jg
jl
pop
sbb
xorb
repz
add
adc
dec
fisubl
mov
loope
xlat
push
cmp
dec
lret
or
aam
mov
orl
loope
mov
data16
cmp
scas
push
shll
lahf
xchg
clc
mov
add
lahf
fistpll
out
pop
and
fisttpll
repnz
cmp
lcall
or
jns
or
cmp
ja
cmpl
pusha
jmp
test
sub
jbe
cmpsb
fimuls
pop
adc
arpl
xor
data16
loopne
push
stc
fidivrs
mov
test
mov
xchg
sarb
scas
pushf
fildll
fs
pop
xor
mov
mov
shll
movsb
jbe
mov
cld
dec
mov
idivl
jmp
stos
gs
inc
outsl
adc
xchg
pop
sbb
mov
cltd
mov
cmp
test
sti
popa
sahf
into
das
call
int3
add
and
pusha
or
xor
or
pop
pop
mov
or
mov
mov
call
xor
lea
aad
fs
jecxz
push
mov
cmc
inc
mov
xor
dec
mov
push
xchg
lock
mov
ret
lods
push
fbld
inc
sbb
ret
sahf
clc
mov
cmp
hlt
pop
pop
jg
add
in
add
fscale
xchg
lea
je
clc
cmc
clc
add
push
lea
jmp
xor
lea
shl
lods
hlt
mov
add
push
cmpsl
lock
cmp
push
xor
lcall
or
jnp
pop
push
xor
jnp
adc
in
jno
imulb
inc
rclb
mov
ds
and
jne
pop
test
mov
mov
jo
mov
mov
cmp
icebp
or
cli
jb
adc
mov
mov
stos
inc
cmp
jo
ds
mov
sbb
or
out
push
jns
mov
push
cmp
dec
or
add
fsubl
ret
xor
enter
stos
fnsave
jno
xor
cmp
stc
cmp
fwait
cwtl
nop
inc
cmp
arpl
cmpsl
stc
rcrb
xchg
xor
cmpsl
aas
inc
push
xchg
mov
push
dec
loopne
add
ja
mov
mov
inc
les
loopne
stc
lahf
clc
stos
lret
xchg
sub
cmc
pop
add
out
ljmp
jnp
sbb
jg
push
pop
inc
mov
loopne
mov
shrl
insl
dec
jns
mov
add
jno
adc
xchg
xchg
and
clc
jne
sbb
mov
fwait
mov
xchg
pop
push
imul
icebp
mov
fistpll
mov
pop
mov
adc
pop
rcll
outsl
adc
inc
add
repnz
mov
insb
fsubr
pop
jmp
add
and
jbe
push
push
push
pop
sub
arpl
dec
xor
pop
mov
outsb
mov
mov
dec
xor
aad
fsts
or
jl
outsl
add
idivl
decb
cmp
xchg
int3
lcall
mov
or
out
add
cli
mov
call
test
or
inc
cmp
js
jns
imulb
ds
mov
or
inc
mov
popf
pop
jl
sub
dec
lods
es
and
inc
lret
jns
cltd
and
fwait
push
cmp
vcvtpd2dqy
lret
loope
xor
popl
jmp
fcoms
sbb
cwtl
inc
mov
sub
sub
sbb
fstpl
sarl
scas
and
std
les
lea
mov
mov
inc
cmp
in
mov
push
call
lock
call
pop
testl
les
int3
mov
mov
loope
inc
push
ss
ja
or
ds
push
pop
das
sbb
pop
hlt
xor
jno
ss
ss
push
pushf
inc
gs
or
push
mov
jg
add
push
add
jl
fsubs
jp
negl
mov
fistps
ficomps
jo
test
fwait
sbb
dec
int
popa
pop
pop
or
dec
cmp
and
repz
inc
rcrb
inc
and
or
mov
add
push
call
cmp
sti
push
bswap
bswap
rol
mov
cmp
test
sub
call
push
call
jno
loopne
enter
and
add
cld
in
sbb
fs
call
call
push
call
push
push
call
and
pop
xor
cmpl
test
in
nop
aad
fistpll
in
test
fidivrs
in
data16
dec
and
xor
fisubrl
in
jno
loop
aam
jae
or
sub
jno
jecxz
in
mov
bound
cmc
mov
sub
and
mov
sbb
cmp
aas
repz
sbb
inc
rcll
aaa
pop
add
or
lock
int
lea
ja
push
imul
push
push
add
lea
push
call
push
call
jmp
or
cwtl
popa
aad
mov
scas
shlb
push
bound
pop
iret
leave
pop
ffreep
scas
aas
inc
mov
leave
cmpsl
fcomps
scas
and
mov
or
ljmp
add
es
sahf
and
cmp
and
xchg
push
xor
add
xor
mov
mov
lods
gs
and
cmp
mov
into
jae
cmp
dec
pop
mov
cmp
pushf
inc
jmp
in
xor
push
push
add
adc
mov
mov
sti
push
shll
inc
xor
push
lods
adc
mov
xchg
lret
cmp
pop
inc
xlat
sub
lret
cmp
sbb
fsubl
fiadds
xor
imul
ljmp
mov
addr16
repz
and
out
sub
ja
add
cmc
icebp
cmp
fwait
ljmp
popa
add
mov
movsl
lods
xor
add
xchg
mov
cltd
mov
mov
xor
xor
movsl
clc
jle
cmp
pop
sti
out
mov
fdivr
adc
enter
movsb
fidivrl
xchg
mov
and
jmp
sahf
xchg
int
aas
mov
pop
lcall
cmp
pop
pushf
daa
call
jae
out
sub
insb
ss
rorb
orl
jae
xchg
pop
andb
imul
or
flds
out
add
push
cld
mov
daa
jge
inc
adc
add
cmp
fldt
jge
mov
push
xor
mov
push
cmpl
xchg
fnsave
cmp
out
add
push
cli
xor
jo
out
js
mov
cmpsb
pop
adc
scas
in
jo
ja
aam
lret
nop
pop
sbb
pop
insl
lahf
call
fisubrs
pop
outsl
lods
mov
jl
or
and
push
test
gs
cmp
adc
jo
xor
rorb
out
out
xchg
dec
adc
sarl
gs
cmp
gs
sarb
dec
icebp
dec
mov
push
inc
stos
in
mov
clc
bound
mov
jnp
adc
dec
pop
stos
jmp
icebp
mov
push
mov
dec
or
mov
insl
loopne
mov
fsubs
jmp
aaa
xor
xchg
or
fsubrl
mov
insl
cltd
mov
popf
xor
mov
pop
push
sub
adc
imulb
add
decl
int3
xchg
ds
push
loope
cmpsl
fcomps
pop
cmp
pop
or
lock
scas
fwait
add
xor
sub
pop
inc
hlt
cmpsl
test
sbbb
push
xchg
and
sbb
int
push
pop
sbb
sub
je
xor
iret
jg
xor
xchg
mov
add
mov
adc
jnp
jge
mov
and
outsb
call
test
gs
call
mov
rcrb
mov
decb
adc
addr16
add
xchg
push
fimull
pop
mov
mov
sar
or
je
pop
push
ljmp
xchg
mov
pusha
aas
addr16
pusha
xor
inc
cmp
xchg
cli
push
call
call
push
call
es
imul
push
push
jb
mov
push
cmpb
push
and
pop
negl
xor
pop
repz
pop
call
xchg
ret
mov
ja
aas
xchg
pop
mov
ds
insb
int
gs
jnp
shrb
jg
or
or
cmp
das
mov
push
mov
movsb
push
pop
xchg
dec
mov
sti
jg
fndisi(8087
ds
cwtl
shlb
mov
ss
cmp
in
add
pushf
pop
insb
mov
xchg
std
addb
jge
sub
sar
mov
into
fcmovbe
lock
enter
jae
scas
xor
stc
arpl
or
push
lret
mov
mov
negl
fxam
xchg
stos
pushf
ljmp
xchg
mov
outsl
mov
fdivl
rcrb
loopne
test
add
inc
push
or
dec
and
cmpsl
cmp
fmuls
cmp
shl
mov
lea
je
pushf
pushf
pusha
mov
jmp
mov
pushl
call
jmp
push
call
dec
sbb
out
push
sbb
sbb
shrb
xchg
xor
ds
insl
pop
ja
push
les
stc
and
or
cmp
sbb
insb
xor
js
divb
arpl
add
scas
sub
sbb
pushf
test
pop
outsb
cmp
pop
cmp
dec
pop
fucompp
xchg
or
sub
push
ficoml
add
mov
sub
mov
imul
and
imul
cmp
filds
cmp
leave
movsl
int3
daa
ror
test
lcall
ss
and
mov
sub
xchg
cwtl
test
repz
inc
ret
leave
cmc
mov
call
addr16
pushf
insl
push
out
sub
adc
das
xor
sub
push
loopne
out
push
pop
das
push
ds
jne
or
cli
sbb
inc
pop
push
sub
mov
xor
call
push
out
jb
xchg
in
test
out
mov
jmp
sbb
popf
sub
inc
jecxz
xchg
std
movsl
sarb
pop
push
shrl
pop
mov
shlb
icebp
bound
iret
pop
jecxz
mov
addl
mov
outsl
and
add
nop
or
lcall
push
data16
dec
loope
fcoml
add
enter
pushf
mov
lds
repz
cmc
xchg
jmp
aaa
jno
xor
and
and
scas
ds
movsb
rclb
add
mov
test
lret
insl
cvtpi2ps
cmpsb
or
daa
dec
mov
jmp
adc
leave
ds
pop
push
in
lret
sarl
lods
addb
into
mov
inc
clc
or
fistl
jg
cli
scas
pushl
setns
cmp
mov
iret
lods
gs
sarl
jns
pop
xor
inc
cmp
into
inc
cmp
adc
mov
pusha
pushl
lea
ja
rcr
bt
push
cmp
add
lea
sar
or
mov
cmp
jmp
xchg
cmp
xorl
shrb
mov
mov
adc
in
std
test
test
scas
add
or
ljmp
fildll
adc
das
xchg
mov
pop
cmp
sbb
aad
fistpll
sarb
cmp
pushl
pop
scas
int
dec
adc
sti
lcall
jmp
add
fmull
add
inc
js
xchg
stos
das
lret
int3
or
adc
call
push
popf
into
cltd
stc
stos
lret
mov
mov
mov
fstps
out
mov
xchg
int3
sub
mov
in
mov
push
or
push
ljmp
std
mov
cli
mov
push
in
inc
pop
vmread
xchg
je
rep
into
es
stc
inc
cmp
and
sub
je
push
add
pushf
pushf
push
pushf
lea
jmp
lea
jae
jbe
adc
shld
shl
mov
clc
sets
btr
xchg
mov
bts
sub
mov
jmp
lea
call
pushf
pusha
push
call
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
push
call
mov
push
scas
sub
xor
mov
cmc
mov
mov
stc
sub
cmp
push
pop
cld
stos
and
in
cltd
imul
mov
sub
mov
xchg
fisubs
push
test
popf
inc
or
outsb
pop
inc
enter
std
pushf
and
pop
ret
stos
cmpsl
call
mov
add
add
lea
je
shrd
shl
bswap
mov
cmc
shld
shld
add
xor
mov
jmp
push
call
test
jmp
mov
add
ret
push
call
push
call
loope
stc
cmp
pusha
pushf
push
jmp
push
call
jb
pushf
lea
jne
pusha
push
cmp
pushl
popf
pushf
lea
jmp
sbb
push
pop
pushf
cmp
dec
pop
pop
and
dec
divps
in
loope
mov
cs
int
scas
in
fmull
jnp
movsb
je
das
addr16
clc
mov
das
jecxz
and
mov
sbb
insl
jg
sahf
mov
clc
popa
dec
aam
ds
push
pop
dec
imul
jmp
pop
nop
pop
fidivs
mov
push
xor
inc
sub
inc
cmp
jnp
sbb
jne
incb
test
mov
push
inc
push
dec
adc
mov
dec
fcoml
dec
mov
mov
mov
adc
mov
mov
xchg
xlat
movsl
inc
pop
lea
les
cmp
xor
inc
or
cmpsb
xor
xchg
daa
js
hlt
jecxz
daa
loop
sub
ffree
pop
add
sub
push
xchg
andl
xlat
cmpsl
aam
lret
lea
cmp
pop
push
sahf
jnp
fwait
pusha
shlb
xor
in
dec
dec
and
dec
adc
pop
xchg
lret
lea
test
push
lret
int3
xor
and
icebp
jp
cmp
outsl
aam
mov
mov
jle
jbe
repz
dec
cld
stos
add
jg
xchg
ret
jl
push
jle
mov
dec
jbe
mulb
mov
pop
mov
push
insb
add
imul
sbb
in
test
push
call
enter
ret
daa
repnz
ljmp
xchg
in
repz
rorb
mov
fmul
pusha
jecxz
cmp
repz
ss
xchg
lock
and
outsb
orl
insb
and
and
shlb
imul
inc
aas
daa
and
mov
push
pop
pusha
or
and
mov
les
movlps
aad
dec
adc
inc
ret
mov
addb
push
xchg
pop
mov
outsb
cmp
pushl
neg
adc
cmpsl
pop
into
dec
ljmp
or
rorb
sbb
cmpsl
shll
pop
dec
or
mov
xlat
cltd
std
outsb
mov
or
mov
pop
mov
fwait
iret
mov
popf
enter
fisubrs
add
incb
loop
lcall
push
call
out
dec
ljmp
adc
movsl
cmc
mov
pushf
iret
scas
fimull
jle
leave
dec
push
xchg
xlat
jle
xchg
xchg
std
stos
adc
ret
stos
sub
jp
and
push
dec
jle
shlb
add
stc
imul
dec
and
scas
cmpsb
push
mov
mov
xchg
sbb
and
cmp
imul
mov
stos
mov
mov
sarb
pop
adc
fbld
sub
js
sbb
inc
test
loop
add
clc
mov
movl
push
pushf
lea
jmp
not
cmp
movl
call
data16
dec
or
add
inc
or
stos
fdivl
pushl
cltd
and
xor
cltd
mov
insl
dec
add
inc
pop
in
sahf
hlt
xchg
push
ret
cmovnp
push
or
sub
loop
or
pop
mov
push
in
xchg
sbb
dec
mov
push
dec
pop
pop
xor
pop
jns
mov
mov
cmp
push
clc
cmp
shrb
adc
mov
loope
packuswb
or
pop
ss
push
dec
mov
dec
int3
es
cli
push
sbb
out
les
cmp
inc
sbb
sub
call
sbb
lods
mov
es
cli
insl
and
sbb
fistpll
jecxz
push
clc
adcl
inc
and
nop
in
cmpb
mov
movb
mov
call
pop
xor
loopne
pushf
adc
or
bound
fdivp
into
mov
fwait
inc
ror
mov
aaa
push
loopne
aas
mov
push
add
inc
sub
loopne
popa
mov
cmpsb
fldt
push
mov
jecxz
pop
popf
inc
mov
mov
jo
inc
pop
adc
sub
push
inc
cmp
add
fisttpl
cmpsb
lret
outsb
cmova
pop
mov
push
xchg
sub
and
icebp
rorl
andb
mov
add
insb
cmp
push
cmp
es
ds
pop
mov
movl
pop
inc
xchg
push
stos
jns
mov
aas
pop
iret
add
in
fildl
outsb
sti
mov
sbb
mov
mov
xchg
in
add
out
mov
mov
lcall
fsubs
cmp
pop
push
repz
call
outsb
pop
fsubrs
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
gs
outsl
fs
gs
imul
add
stos
imul
les
add
jl
push
call
add
mov
pop
lret
adc
stos
xchg
aaa
and
jns
pop
cmp
add
xchg
xchg
jb
cltd
out
lods
fistps
push
mov
mov
lea
sub
iret
adc
inc
ljmp
cs
ss
sbb
or
xchg
data16
inc
das
jecxz
sti
inc
hlt
aaa
xchg
dec
mov
fs
inc
adcl
int3
ret
lock
xchg
clc
inc
lods
xchg
cmp
mov
adc
in
sarb
cmp
call
lcall
jg
loope
stc
test
mov
xchg
mov
sub
mov
lock
and
or
dec
outsl
cmc
out
dec
js
movsl
rorl
out
outsb
cmp
inc
in
insb
cltd
or
adc
jnp
cmc
aaa
mov
cmp
popf
sbb
adcb
jl
sub
mov
lcall
test
movl
xor
loope
jecxz
sbb
clts
cwtl
sub
mov
popa
mov
sbb
jo
arpl
outsb
out
xchg
rcrb
aam
sahf
fnstsw
inc
adc
clc
jns
mov
and
std
mov
mov
xor
bound
sbb
test
and
push
jmp
push
call
lods
push
dec
xchg
push
call
pop
pusha
test
add
jmp
xchg
push
mov
pop
addr16
lods
or
jne
push
and
jge
push
add
push
adc
test
sub
xor
dec
xorb
pop
into
mov
aam
dec
add
xchg
mov
mov
fstpl
and
clc
xchg
clc
repnz
pop
daa
xchg
out
xchg
ljmp
rorl
sahf
xchg
mov
inc
and
xor
fidivl
outsb
inc
cmp
push
or
cmp
mov
xchg
mov
leave
out
shl
std
fwait
jl
fstp
sbb
pop
in
ret
mov
icebp
dec
adc
cwtl
add
test
lods
repz
shlb
aas
xchg
leave
and
push
pop
in
cmp
mov
lds
std
nop
sub
les
mov
test
jnp
fdivr
mov
fmuls
loop
xor
addr16
daa
pop
sub
xor
mov
mov
inc
cmp
into
xchg
add
fidivs
popf
inc
sti
rorb
fisttpl
int3
xchg
out
rclb
cmp
mov
dec
mov
cmc
cmpsl
dec
movsb
cwtl
es
mov
pop
pop
xor
push
mov
mov
je
jecxz
dec
dec
add
dec
mov
adcl
mov
stc
mov
or
pop
pop
pop
fdivs
jae
mov
sahf
mov
pop
movsb
or
pop
jnp
inc
imul
inc
push
imul
add
cmp
fmull
mov
rorl
add
and
pop
mov
add
sbb
aam
add
mov
mov
comiss
out
jmp
sbb
test
inc
adc
dec
dec
or
lcall
scas
inc
add
lcall
icebp
adc
iret
repz
stc
fnstsw
sbb
inc
pop
xor
xor
sbb
lret
daa
rcr
es
in
test
dec
outsl
mov
mov
cwtl
cmpsl
xor
cmp
cmp
adc
iret
xchg
pop
scas
nop
pop
xchg
add
scas
cmc
mov
mov
cmp
lcall
inc
call
and
pusha
aam
insl
or
aas
xor
dec
mov
popa
push
dec
xor
outsl
ss
sbb
fnsave
lret
mov
xchg
xor
mov
xor
adc
push
cltd
fcompl
es
addr16
inc
daa
dec
cmp
jmp
imul
jne
pusha
pushf
pushl
lea
jno
inc
call
movb
mov
call
push
call
dec
mov
stos
jg
push
fcmovne
sahf
mov
shll
fildll
aaa
ljmp
mov
cwtl
dec
roll
sbb
mov
and
pop
dec
pop
xor
arpl
cmp
cmp
arpl
jg
cmpsl
arpl
test
lea
mov
xor
mov
pop
dec
cltd
xchg
leave
and
lds
and
xlat
cmp
fs
cmp
adc
inc
or
dec
addb
pop
add
bound
or
test
in
loopne
xchg
sarb
iret
movsb
push
cmc
adc
aas
push
add
fs
inc
cmp
enter
jae
xor
mov
cmpsb
or
sbb
xchg
rcll
sti
inc
add
cmpsl
push
stos
inc
bound
jg
jb
mov
push
add
jmp
ss
popa
sbb
data16
or
inc
cmp
loope
add
cmpl
ret
inc
add
shlb
mov
add
and
mov
arpl
bound
dec
sub
popl
in
push
inc
cmp
xchg
jnp
mov
xchg
adc
push
sahf
cld
add
add
jge
cs
arpl
push
xlat
call
xchg
hlt
lods
jge
pop
lahf
addl
mov
lret
add
add
xchg
cmpsb
lret
scas
movsl
xchg
pop
jo
mov
mov
in
shlb
dec
das
push
pop
jno
data16
or
add
sbb
sub
test
add
cmp
dec
inc
sti
pusha
mov
not
pushf
cwtl
lea
mov
mov
lea
lea
movl
pushf
movb
jmp
sbb
sbb
or
pop
push
adc
add
jns
shrl
fsts
jbe
pop
add
pop
xor
mov
add
inc
push
test
add
loopne
fidivrl
mov
lcall
loope
adc
scas
sub
mov
insb
mov
ficoms
movsb
lahf
push
jnp
div
stos
in
mov
mov
mov
xchg
fsubl
fsubs
xchg
call
sar
mov
mov
and
clc
pusha
stc
call
mov
jbe
jg
out
mov
mov
mov
jo
pop
or
xchg
ret
cmp
sbb
insb
push
push
mov
mov
jns
sti
pop
lcall
push
inc
mov
shll
mov
icebp
cmp
adc
sti
jg
cmp
cmp
addb
jl
movsb
inc
das
jns
cmpsl
test
testl
pop
lahf
clc
fildl
enter
ljmp
scas
sbb
ds
repnz
mull
shlb
jbe
pushf
dec
xchg
adc
mov
in
dec
sbb
xchg
popf
push
ja
inc
pop
sub
jb
data16
mov
cs
fs
lock
jg
cmc
js
jp
or
mov
sub
add
or
pop
cmp
sub
xchg
fstps
inc
int3
xchg
outsb
fsts
adc
inc
es
aas
data16
push
testb
popa
or
xchg
clc
out
in
sbb
pusha
fadds
dec
pop
adc
cmpsl
mov
xchg
aas
mov
xor
push
jecxz
ror
jb
hlt
add
int
pushf
mov
mov
ror
repnz
sbb
jg
iret
pop
mov
out
cmpsl
push
insb
sbb
in
ljmp
push
dec
loope
test
mov
test
inc
inc
cmp
sahf
les
cmp
clc
cmc
test
pusha
lea
je
bt
add
stc
pusha
cmp
pusha
mov
movb
lea
jb
bt
push
pusha
cmp
jmp
mov
mov
sahf
mov
cmpsb
fdivl
gs
dec
fisubrs
mov
sbb
scas
cs
fdivrl
lock
xor
pop
cltd
jne
fst
outsb
std
mov
nop
add
mov
xchg
cltd
negl
and
ss
cltd
sbb
in
push
push
and
es
mov
add
push
dec
ds
pop
and
pop
cs
add
jns
jae
fldl
xlat
pop
pop
or
scas
fs
xor
str
push
call
mov
scas
jae
call
pop
adc
jns
xor
mov
mov
dec
arpl
sarl
pop
popa
pop
pop
jb
sarl
imul
mov
and
cmp
decb
nop
loop
fisubs
push
and
js
les
mov
sbb
ds
stc
sub
and
push
test
cltd
fdivs
ja
es
mov
and
jae
pop
repz
mov
and
outsb
sbb
inc
cmp
pop
pop
fidivs
push
ret
fldt
cmp
cmp
repz
pop
rcll
sbb
mov
aas
out
test
aaa
jecxz
push
ljmp
push
jns
add
gs
push
stos
add
cld
jmp
xor
push
cltd
mov
incb
cmp
mov
sub
push
pop
cmpsb
stos
jp
pop
sub
mov
fmuls
popf
movl
outsb
movsb
add
jbe
dec
jecxz
out
mov
mov
push
inc
sbb
sbb
arpl
inc
or
push
dec
das
popa
test
add
sub
bound
cmpsl
sub
cmp
movsb
stos
decb
cmpsb
stos
pop
inc
push
insb
xor
or
dec
das
xlat
stos
and
sbb
rcrl
sbb
out
push
push
mov
loop
xlat
mov
dec
sub
imul
enter
rcrl
inc
lahf
push
cmp
ret
and
popf
loope
dec
push
push
adc
mov
mov
aam
inc
jecxz
pushw
out
sub
jp
outsl
out
and
fwait
leave
adc
fldcw
ja
dec
xor
xchg
iret
lcall
cld
ja
test
lea
inc
int
dec
add
add
repnz
addr16
dec
addr16
in
cmp
aad
or
mov
push
loop
cmc
mov
or
lds
inc
mov
out
incl
mov
cmp
pushf
popa
cmc
call
mov
push
loopne
xchg
dec
mov
adc
ds
adc
mulb
dec
shll
mov
push
mov
pusha
stos
int3
mov
loope
push
lea
call
sub
mov
push
ret
stos
mov
into
adc
push
dec
outsb
jge
xchg
pop
mov
or
outsw
xor
pop
mov
sub
mov
jg
adc
pop
test
sbb
fs
js
std
cmp
arpl
xchg
pop
repnz
inc
stos
sub
pop
stos
mov
sbb
notl
cmp
inc
cmp
fadds
repz
jmp
lds
cbtw
push
ds
lcall
jo
test
mov
jp
loopne
enter
pop
shll
push
mov
jnp
adc
clc
or
adc
push
popa
pop
jo
sbb
dec
xor
push
pushf
rcll
sub
mov
sub
and
dec
xor
daa
jns
outsl
inc
cmp
addr16
adc
add
stos
pop
outsb
call
and
jg
out
mov
pop
push
fcom
jno
int3
mov
popf
std
mov
jl
lods
add
push
push
in
and
roll
push
and
push
pop
iret
std
insl
inc
add
push
pop
cs
cmp
mov
pusha
sub
xor
xorb
sbbb
cmp
in
cs
insl
scas
iret
mov
xlat
lret
test
repz
ljmp
mov
mov
fucomip
aad
pop
xrelease
pop
aaa
jmp
fst
out
pop
xorl
sahf
and
cmp
push
into
imul
lcall
mov
imul
fsubl
mov
dec
pop
ffree
inc
mov
jmp
roll
mov
imul
icebp
aad
adc
in
add
enter
pop
repnz
jg
in
repnz
out
shll
add
mov
jb
shll
add
in
loopnew
rorl
or
in
dec
add
fs
addr16
push
pop
mov
stc
stc
or
or
movsl
jmp
out
pop
pop
jge
popf
out
cmp
mov
lahf
out
jb
out
stos
sarb
and
lods
lret
rclb
rcrb
mov
push
inc
mov
mov
adc
out
xchg
mov
movsl
ljmp
outsb
movsl
aad
adc
adc
lret
push
roll
cmc
outsb
xchg
aas
jecxz
or
daa
popa
je
adc
iret
fidivs
pushf
stos
test
cld
pusha
out
mov
dec
jo
push
stc
out
scas
cmpsl
roll
push
dec
push
stc
mov
jmp
mov
inc
dec
or
fldl
iret
inc
push
pop
xlat
add
pop
sbb
cmp
xchg
in
pop
inc
stc
mov
cmp
push
adc
mov
test
pop
or
mov
addr16
pop
js
js
pop
add
mov
inc
xchg
imul
fimuls
push
idiv
test
in
shll
xchg
popf
lods
in
sbb
aas
push
adc
dec
xchg
xlat
adc
xor
dec
rorl
dec
cmp
sbb
cmc
outsb
call
dec
cmc
pop
inc
lods
popa
dec
pop
xlat
pop
das
call
inc
jp
data16
repnz
mov
std
data16
xchg
std
dec
adc
inc
cmp
lea
out
dec
nop
leave
cmp
fsubrl
jo
mov
cmc
fs
sbb
aaa
aam
or
cmp
sub
lods
push
dec
push
sbb
out
test
fst
cmp
pop
sbb
jo
adc
push
or
test
sbb
cmc
pushf
adc
pop
nop
inc
cmc
addl
add
mov
shrb
add
cmc
inc
icebp
mov
loop
sbb
cmc
out
insb
cmp
dec
jl
push
jnp
clc
aaa
xchg
fisubs
mov
push
ds
int
leave
dec
or
or
mov
push
pushl
pushf
mov
push
push
pushl
lea
jmp
pop
xchg
repz
mov
int
outsl
or
outsl
add
adc
pop
test
dec
icebp
cli
mov
inc
stos
sub
push
mov
cs
pop
fcomp
nopl
jbe
mov
mov
lea
xor
xchg
adc
test
inc
or
int
jnp
push
pop
jno
popa
push
inc
push
inc
adc
inc
cmp
arpl
fwait
call
push
call
xor
add
mov
add
or
mov
clc
cli
test
insl
sbb
push
lds
xchg
add
fistps
mov
cmp
mov
divl
cmpsl
sbb
add
jp
test
into
mov
xlat
es
ret
dec
cmp
daa
inc
adc
mov
jno
clc
inc
cwtl
leave
sub
loop
push
mov
jne
aas
mov
push
mov
add
pop
mov
inc
mov
jmp
rorl
ss
in
pushf
push
dec
sub
adc
dec
jo
js
push
fs
mov
mov
sbb
pop
jns
cmp
mov
jae
cmp
mov
push
lods
sbb
iret
mov
lret
mov
xor
inc
cmp
sub
popf
push
call
push
in
sub
movb
clc
movb
stc
repnz
pushf
lea
jne
xchg
not
xchg
adc
mov
xor
btr
shr
sub
cmp
mov
clc
jmp
add
push
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
stos
jne
call
cmp
add
lret
push
das
cld
inc
mov
ret
jmp
xor
fs
xchg
push
cli
je
push
jmp
js
fdivl
jg
fimuls
dec
addl
sbb
dec
xchg
adc
dec
or
dec
sbb
cmp
xchg
jne
mov
aam
idivb
pop
adc
push
pop
jg
enter
sbb
shl
aaa
dec
xor
jg
pusha
add
scas
repnz
inc
cmp
cmp
jbe
cmp
cmp
jmp
and
or
mov
enter
push
fimuls
sahf
push
cmp
pop
movsl
pop
loope
repz
jb
into
jb
dec
xor
ret
add
pop
cmp
xchg
cmpsl
or
shl
aam
sahf
rcrl
enter
nop
or
mov
mov
cmpsl
nop
pop
iret
and
rcll
nop
mulb
out
cmc
movsl
cld
stos
addr16
cmp
mov
cmp
add
or
fidivrs
sub
add
bound
ret
popf
sbb
insl
pop
mov
scas
and
data16
pop
jae
mov
sbb
dec
pop
and
ret
push
xchg
movsb
mov
or
sahf
adc
das
loopne
push
outsl
sub
or
mov
int
data16
es
xchg
sbb
sbb
clc
repz
mov
xor
sbb
ss
inc
cmp
jae
xchg
cmp
stc
cmp
call
arpl
push
and
push
or
push
loopne
push
jnp
inc
lds
gs
and
fnstsw
pop
sbb
in
jle
cld
test
stos
incl
cmp
push
pop
push
call
jp
add
mov
cmp
or
push
ss
mov
xchg
mov
mov
add
mov
xchg
xchg
pusha
and
or
xchg
pop
stc
mov
shrl
xor
or
pop
int3
inc
bound
sbb
mov
test
sti
inc
mov
mov
xor
je
mov
mov
mov
push
sub
shlb
inc
sbb
jle
inc
int3
mov
lahf
cs
cmp
adc
or
add
call
push
call
lret
jnp
or
clc
sbb
fucom
mov
test
mov
or
push
mov
sub
adc
push
add
into
fcomi
cmp
push
rolb
xor
cld
ss
int
icebp
xor
sbb
xor
lahf
fsubrs
or
sti
stos
adc
iret
pop
ret
jno
lods
jnp
std
loopne
out
inc
in
mov
mov
cmp
subb
add
ds
and
mov
aas
or
je
add
xchg
sahf
cli
lods
aam
in
mov
xchg
sarb
fnstsw
test
clc
ja
or
sbb
mov
out
push
out
data16
scas
mov
mov
cli
push
xchg
or
and
mov
and
sub
jne
arpl
fmuls
pop
aad
pop
push
xlat
repnz
add
test
dec
lea
mov
and
jmp
mov
jmp
cld
test
mov
mov
lcall
lfence
pop
or
pop
cmc
lods
test
xchg
jmp
in
lcall
insl
cmp
scas
sti
or
cld
repz
cmp
sbb
mov
adc
pop
sti
mov
lock
add
pop
mov
sub
mov
adc
mov
push
dec
js
je
outsl
stc
ss
fwait
cmpsb
in
pop
js
cli
pop
cmp
leave
movsb
insl
js
lcall
les
daa
ja
inc
clc
inc
cmp
mov
push
gs
ss
fldcw
sub
in
push
jg
inc
push
imul
xrelease
dec
testb
aam
mov
xor
mov
sub
jns
es
adc
scas
add
imul
lods
lods
add
js
or
scas
cli
xchg
push
addb
sbbl
xor
lods
outsl
or
outsb
add
lods
int3
mov
popf
das
inc
cmp
adc
push
call
in
ror
loopne
inc
xchg
gs
es
insb
cmp
push
add
iret
xor
lret
je
add
dec
hlt
test
cmp
call
push
iret
in
xor
inc
and
inc
andl
pop
lcall
pop
je
aam
pop
adc
sbb
push
and
pop
js
push
jge
dec
jecxz
sbb
arpl
jmp
std
mov
pop
int
leave
gs
test
mov
lods
fdivs
movsb
je
loopne
cltd
pop
push
pop
icebp
xchg
cli
fwait
mov
cltd
lock
xor
push
stos
orl
xor
mov
sub
ljmp
fwait
and
sbb
jns
mov
mov
or
enter
ds
test
cmp
jmp
or
jp
jecxz
orb
inc
add
add
out
aaa
filds
inc
xor
xor
movsb
inc
js
sub
sahf
rorb
stos
ret
test
leave
out
mov
push
call
fsts
lea
jne
pusha
jmp
cmp
scas
je
mov
mov
xchg
loopne,pn
or
xlat
push
pop
aas
ja
mov
adc
scas
sbb
sbb
enterw
fldenv
or
rorl
loopne
gs
lea
outsb
pop
mov
mov
lds
stos
push
push
clc
inc
cmp
ss
cmp
xchg
and
repz
dec
or
xor
push
cmp
adc
lret
mov
push
xchg
xor
ja
popa
andps
addr16
mov
push
test
mov
xor
cmpsb
push
loopne
jo
nop
addr16
lret
sbb
fsubl
push
sbb
mov
add
dec
cmp
outsl
sarl
sbb
cltd
inc
mov
cmp
push
mov
cmovs
sub
dec
data16
movsb
and
inc
cmp
mov
pop
cmp
mov
fnsave
repz
dec
daa
pop
call
mov
push
call
add
jbe
jns
add
mov
mov
xor
rorb
in
fldcw
jns
iret
lcall
rorl
mov
mov
inc
mov
in
aas
cmp
cmpsl
shll
nop
and
fadds
sub
sbb
inc
mov
dec
cs
and
sub
addl
cmp
or
push
or
iret
mov
jmp
testl
movl
test
mov
push
pop
scas
push
call
shr
leave
cltd
insb
fdivs
lods
xchg
out
jge
mov
nop
cld
sahf
stc
ficoms
mov
mov
bound
add
in
or
jns
inc
fldl
std
popf
popf
cmpxchg
repnz
outsb
ret
xor
push
cmpsl
das
mov
into
jno
add
sahf
inc
insb
ficoms
cmp
enter
es
and
cwtl
cmc
stos
addr16
cmp
mov
movsl
je
call
arpl
inc
lds
push
xor
and
push
cltd
mov
xchg
lret
sub
loopne
inc
mov
nop
loopne
adc
aam
and
fdivp
jns
xlat
bound
out
movsl
or
mov
gs
xchg
roll
leave
outsl
fdivrs
dec
jb
insb
jb
pop
sbb
nop
xchg
inc
cmp
adc
xchg
mov
mov
cwtl
js
mov
testl
push
ds
mov
inc
cmp
icebp
stos
adc
fsts
mov
dec
or
test
adc
insl
dec
mov
lret
jp
cmp
mov
adc
sub
popf
out
mov
aas
movsl
and
push
fnstsw
xchg
hlt
inc
lea
jne
fistpll
cmp
out
cmp
adc
into
andb
repz
mov
jl
rcll
cltd
sub
dec
adc
sub
das
cmpsl
add
les
mov
sub
gs
jle
outsl
xlat
inc
cmp
jmp
loope
sub
aaa
sbb
jo
inc
sbb
cmp
outsl
pushl
hlt
test
mov
jle
cmp
jl
sub
sarl
mov
ficompl
dec
xchg
leave
mov
and
mul
xor
jo
xchg
xor
pop
xor
add
dec
sbb
ljmp
mov
mov
jge
aaa
into
insb
arpl
push
movsl
xchg
cmp
jo
in
inc
call
stos
jg
sbb
lret
aaa
mov
push
rcr
adc
es
dec
sub
fcmovnu
out
es
test
out
and
testb
adc
and
bound
int3
add
ss
inc
das
imul
in
cmp
pop
cmp
iret
lcall
iret
movsb
loope
inc
inc
cmp
cltd
ret
xchg
je
xchg
cwtl
sub
jecxz
pop
std
fstpl
lds
sub
mov
push
out
fsubl
jns
popa
lret
xchg
or
std
test
fwait
add
pop
int
lds
inc
xor
inc
cli
xor
xor
add
add
les
imul
ret
lds
pop
inc
xchg
cmpsb
and
push
mov
pop
incl
xor
test
iret
add
stos
movl
add
addl
and
jmp
imul
sub
cmp
fadds
mov
jno
jb
cmp
pop
lret
mov
fcoms
mov
jle
out
mov
aas
popa
js,pt
test
loop
mov
addr16
stos
jbe
pop
jp
inc
mov
push
inc
cmp
mov
outsb
nop
jp
sub
push
imul
mov
js
or
bnd
arpl
cmc
cs
faddl
inc
cmp
sub
in
xchg
out
push
adc
js
lods
hlt
xchg
jmp
in
imul
repnz
mov
stos
pop
xchg
sub
push
sbb
dec
and
sbb
inc
cmp
add
push
call
in
inc
cld
test
mov
xchg
out
mov
sahf
lret
fcmovnu
jnp
jp
jge
mov
stos
frstor
lahf
rorb
inc
xor
stc
lret
leave
xchg
mov
flds
imul
rcrb
fldl
and
mov
lds
inc
dec
das
mov
scas
fadds
lds
cmp
lahf
lds
or
adc
xchg
xor
inc
es
xor
jb
pop
add
mov
fs
mov
dec
dec
xor
push
loope
stos
jg
iret
sub
sbb
mov
out
in
add
lret
inc
xchg
pop
adc
jb
xlat
push
mov
mov
jns
test
test
mov
test
mov
in
inc
jns
rcll
andl
ret
cmpsb
loope
xlat
stos
aam
ret
nop
push
inc
cmp
lea
fs
mov
movsb
popf
enter
icebp
test
call
dec
lret
lcall
add
sub
push
cmp
cmp
mov
fistps
cmp
push
push
add
scas
cmpsl
call
imul
call
push
gs
call
data16
not
inc
mov
push
inc
lea
dec
clc
and
clc
xchg
xadd
lahf
shrd
jmp
lea
call
pusha
push
lea
jmp
push
call
jp
jae
adc
sahf
jl
loop
rcrl
test
xor
jns
add
in
jmp
scas
aam
mov
je
popf
cmpsb
rcl
push
or
mov
pop
and
out
push
and
inc
subb
cmp
shr
mov
jge
addr16
je
add
lods
jecxz
js
mov
dec
mov
shrl
dec
and
movsl
inc
inc
cmpsl
popf
pop
dec
push
js
pop
or
dec
addb
pop
pop
or
scas
adcb
mov
add
aam
jne
add
es
jnp
xor
and
faddl
ret
bound
in
shl
xor
test
adc
adc
add
inc
cld
sub
xchg
ret
fbld
mov
mov
jb
sub
das
repz
pop
aas
lods
fldt
xor
cmp
fadd
in
pop
incl
xchg
cmpsb
sarb
xchg
sub
stos
mov
pop
cmp
mov
jg
and
pop
dec
aam
push
out
sub
cmp
lods
das
insb
ss
aaa
pop
or
jbe
loop
cmp
cmp
pusha
cmc
jmp
lea
je
stc
cmc
sub
pushf
call
xor
jo
scas
or
dec
sub
pop
fistps
jle
push
mov
inc
push
inc
int
sbb
loope
shrl
lods
jge
mov
xor
test
lret
loope
shl
add
sbb
pop
rcrb
inc
iret
inc
arpl
stos
int
in
and
mov
sbb
clc
stc
or
movsb
je
and
mov
or
iret
stos
lock
push
push
fadds
aas
add
pusha
inc
add
stc
shlb
cmpsl
out
divb
enter
test
mov
cld
push
xchg
sub
xchg
repnz
xor
adc
push
jle
cmpb
push
je
cvtps2pi
loop
test
push
mov
jbe
inc
jge
mov
insl
push
mov
sbb
mov
fistl
dec
cwtl
scas
sbb
mov
push
xchg
out
repz
sbb
mov
cmp
imul
call
and
cltd
lcall
fisubrl
and
cltd
loope
push
xchg
or
es
test
lcall
shrb
aad
sbb
push
loope
ret
bound
add
ror
loopne
push
xchg
cwtl
fs
fnclex
loope
sbb
and
in
lcall
loopne
inc
leave
std
mov
sbb
rclb
mov
fs
push
aad
push
sbb
xlat
sahf
inc
movsl
mov
mov
mov
rcl
repnz
ret
mov
sbb
ljmp
sar
push
mov
fwait
and
mov
lea
hlt
sbb
mov
push
jmp
repz
jmp
lods
adc
fs
test
andb
push
mov
pop
adc
inc
cmpsb
in
mul
pop
mov
ljmp
test
shlb
cmp
stc
call
adcb
sbb
repnz
das
pop
mov
hlt
divb
scas
mov
and
dec
push
xchg
jecxz
push
andb
pop
push
in
hlt
sbb
cmp
ja
pop
xchg
mov
into
stc
popa
sbb
imul
cmp
and
jb
mov
in
out
mov
push
faddp
pop
leave
and
stos
fmul
adc
rcl
adc
ljmp
and
and
push
stc
push
fisubrl
aam
sub
cmc
in
subl
rcl
pop
push
aaa
adc
ret
data16
fidivl
in
in
aam
fs
int3
outsl
into
out
or
fs
inc
jae
into
pop
gs
faddp
test
mov
sub
popa
ret
dec
out
out
loopne
dec
dec
les
add
or
int
popw
adc
jne
pusha
jmp
into
aad
add
add
call
mull
mov
punpckhbw
sbb
insb
dec
cmc
idivb
fcomps
leave
cmp
dec
jecxz
dec
inc
push
into
rcll
push
pop
mov
inc
hlt
xorl
rcll
test
outsb
add
jb
repnz
loope
pop
test
hlt
popa
push
and
js
xchg
sti
xor
aas
fiadds
lahf
int
loope
sar
jbe
lock
mov
xchg
addb
loope
jecxz
sbb
cwtl
pop
rol
fstl
and
into
mov
in
repz
leave
mov
loopne
decb
mov
fucomp
dec
cld
jl
cmp
scas
adc
adc
and
and
jecxz
pop
xchg
fstl
and
lret
repnz
push
loope
out
into
shlb
sub
xchg
mov
loopne
das
sub
mov
push
je
ror
loope
pop
push
jge
aad
in
clc
pop
stc
cmp
data16
sub
push
fcomi
jae
sbb
dec
sbb
loopne
adc
cmp
mov
dec
test
sbb
xchg
shll
fs
adc
xor
cmp
mov
addl
pop
addr16
scas
mov
ja
push
cmp
adc
sub
addb
int3
incb
stc
imulb
bound
inc
andl
mov
lods
cmpsb
push
push
jns
stos
test
loope
mov
loopne
repnz
sub
cs
cld
dec
fcmovnu
pushw
push
ret
imul
push
mov
inc
cld
xor
loope
lcall
ljmp
xchg
pop
dec
cwtl
push
ret
jno
pushf
hlt
dec
xor
sub
mov
sbbl
sti
ja
push
mov
xor
cmp
std
cmp
pop
addr16
int
insb
jbe
cmp
mov
jg
fsubrp
lahf
adc
mov
adc
adc
ja
out
pop
add
test
mov
jl
xchg
ficompl
test
fnstsw
mov
adcl
add
cmpb
nop
xchg
or
lcall
fst
mov
in
mov
jecxz
push
cmp
lret
fstl
inc
incb
mov
cwtl
pusha
adc
call
test
mov
sub
push
das
int
xor
out
dec
out
push
jecxz
cmp
push
bound
scas
fwait
clc
ja
dec
pusha
mov
rcl
rcr
sub
or
in
shll
cmpsb
and
dec
mov
xchg
jle
aad
jmp
inc
jmp
jns
in
in
and
mov
xor
push
subl
idivb
cmp
mov
add
subb
les
je
icebp
jmp
call
xchg
inc
and
or
cmp
mov
in
es
and
jmp
push
clc
sub
dec
jle
adc
push
and
cmp
mov
dec
fs
xor
mov
xor
add
jmp
jecxz
cld
xchg
xor
and
iret
sbb
jp
jb
lahf
ds
bound
aad
imul
and
cli
jle
into
jo
jmp
or
jle
lods
cld
xor
imul
daa
addb
push
fstl
cmp
fwait
dec
lret
popf
mov
lret
push
adc
pop
push
pop
inc
and
adc
jo
sbb
je
fcmovu
mov
aam
xchg
std
lahf
shl
sub
adc
call
adc
les
test
xchg
push
test
sub
add
shll
cmp
cmpsl
and
int3
jns
and
outsl
push
adc
in
xorb
or
xlat
or
iret
ljmp
inc
push
imul
adc
pop
jne
jle
sahf
out
pop
cmp
pop
lea
inc
movsb
sbb
sti
or
int3
fsubrl
jg
arpl
sbb
in
ret
cmpsl
xchg
fcmovnbe
pop
push
fs
push
ljmp
mov
fs
sahf
fsubs
cmpsb
mov
or
inc
stos
add
enter
add
arpl
mov
repnz
cmc
shlb
xchg
sti
enter
inc
push
hlt
pop
ret
mov
arpl
in
fs
movsl
cmp
scas
arpl
xor
mov
icebp
and
mov
in
pop
push
fistpll
dec
fcompl
mov
jnp
jo
jns
nop
cmc
mov
push
out
lods
sub
test
test
jns
and
test
or
in
in
xchg
outsb
popf
mov
out
aad
sbb
dec
push
xchg
dec
mov
sub
xchg
aaa
in
mov
xchg
mov
cli
push
sub
mov
push
add
aam
cmpb
repnz
sbb
and
mov
xchg
mov
mov
cmc
cmp
jmp
loopne
jmp
cmc
sbb
outsl
in
icebp
dec
xchg
movsb
mov
ds
test
mov
and
jnp
xor
pop
jb
cmpb
xchg
cld
sti
adcl
add
js
popa
xlat
and
and
data16
add
cld
mov
loope
jecxz
push
xorb
and
aaa
mov
out
add
xchg
jp
out
sbb
imul
mov
pop
jecxz
arpl
bound
mov
sahf
push
stos
repnz
ljmp
es
popa
aad
insb
push
loope
jo
ljmp
sahf
xor
sbb
rolb
mov
rorb
push
and
sub
sub
push
pop
icebp
popa
push
cld
inc
lcall
push
mov
fimull
sbb
or
clc
cmp
and
int3
bound
fnop
pop
cltd
in
push
in
add
pop
adc
jmp
clc
std
movsb
inc
xchg
inc
push
rcrb
shlb
nop
out
sbb
adcl
pop
add
mov
cmp
sbb
jle
pop
cs
cmp
das
test
push
frstor
jb
js
xchg
insl
mov
sbb
in
mov
or
ret
push
sbbl
shll
cmp
mov
lods
out
sbb
test
jno
cld
xchg
movsl
xchg
mov
cmpsb
and
movsl
jb
js
rcl
xchg
push
cmc
push
fisubs
imul
push
pop
push
add
pop
repz
out
xlat
mov
or
fs
lahf
in
stos
imul
push
dec
movsb
aam
test
add
and
fldl
hlt
mov
popf
les
mov
and
in
sbb
sbb
and
jmp
cld
lret
cli
sub
mov
movsl
in
sub
and
lock
imul
and
ss
jno
sbb
sbb
adc
jp
fsts
nop
movsl
and
add
ja
ficoms
in
out
mov
pop
iret
jmp
pushf
and
icebp
jl
mov
push
cmp
roll
jecxz
pop
inc
icebp
dec
repz
cmpsb
adc
fidivrl
fldl
lea
mov
cmp
pop
or
int
decb
xchg
in
dec
jl
mov
pop
inc
addl
and
in
add
icebp
fldt
sbb
sub
add
pop
aad
cld
cmp
sbb
mov
jmp
sub
loopne
fisubs
mov
cmp
aam
lods
add
mov
pop
call
mov
xchg
jnp
shr
cmp
shll
ljmp
out
and
cld
int
sbb
ficompl
mov
orb
push
test
lea
push
sbb
std
mov
xchg
idivl
lea
imul
and
xchg
push
mov
xchg
outsb
mov
orb
and
ds
mov
rcll
jmp
jno
xor
push
ror
out
xchg
push
pusha
insb
hlt
mov
xlat
xor
jg
xor
aas
stos
cmpsl
dec
ljmp
sbb
adc
adc
pushf
cmp
or
cmp
lahf
jmp
jmp
lahf
sarl
in
int
mov
push
xchg
jecxz
mov
mov
inc
mov
xchg
in
enter
fs
xor
rorb
xor
mov
dec
data16
int
mov
out
js
inc
std
and
cld
inc
xor
in
insl
push
ret
lcall
test
ss
xor
and
shll
aaa
mov
leave
ds
test
mov
mov
sbb
repz
stos
fs
inc
lcall
loopne
jg
and
jecxz
cld
aad
mov
jp,pt
jp
cmpsl
rcl
jmp
dec
sahf
shrl
xor
and
mov
mov
pop
ds
jb
aad
repz
loope
mov
and
adc
inc
and
pop
popa
pop
in
or
mov
cld
cmp
test
js
mov
out
fwait
jmp
fisubrs
inc
nop
inc
xchg
shll
ljmp
add
leave
mov
enter
and
shl
sub
and
add
and
sub
sbb
call
jnp
push
mov
and
pop
mov
xor
lock
jne
bound
jg
jns
mov
int3
jg
and
and
enter
sub
test
mov
xchg
mov
add
pop
jl
rcrl
imul
sub
push
cwtl
jb
fcompl
je
in
mov
and
movsl
pop
mov
jmp
lahf
mov
data16
and
test
dec
scas
cld
mov
mov
xchg
fdivs
pop
dec
nop
stc
popa
sub
inc
pop
xchg
arpl
cli
inc
mov
sbb
out
jmp
rol
xor
les
add
int
add
stos
in
jecxz
lock
lret
sbb
movsb
xchg
adc
mov
or
push
jbe
negl
repz
mov
inc
sbb
insl
add
adc
idivl
call
mov
notb
clc
sahf
insb
loop
xor
cld
pop
mov
cmp
test
sub
int
ficomps
call
aaa
popf
fucomip
jmp
frstor
push
inc
out
sahf
loopne
jecxz
les
adc
add
xorl
push
shr
nop
xor
push
push
push
nop
cltd
fisubs
out
adc
ret
int
xor
mov
out
mov
xor
push
aaa
scas
aam
insb
ret
jmp
test
sub
imul
mov
aad
loop
jae
lock
jo
and
cmp
into
pop
dec
mov
aad
inc
or
int
inc
cmpsb
sub
mov
into
cld
jno
lea
shl
ret
pop
and
pop
jno
and
les
pop
hlt
mov
addr16
jno
sub
pop
push
aad
repnz
fsubrs
mov
add
mov
out
aad
idiv
xlat
aad
lret
mov
pusha
sarb
popa
xor
jmp
jg
into
ljmp
and
mov
arpl
push
and
sbb
xor
jns
adc
fbld
adc
and
push
aam
test
mov
test
pop
dec
in
add
push
ret
mov
adc
mov
fisttpll
fwait
cmp
pop
fcoml
jmp
into
xchg
lock
push
popa
adc
lahf
pop
mov
clc
jbe
lds
pushf
fdivr
push
std
mov
std
cmp
sbb
jno
fsubp
popa
ret
push
in
pop
pop
adc
mov
push
sti
shrb
push
fs
push
jecxz
cmpsl
loopne
sbb
jnp
movsb
enter
test
icebp
xor
insl
stos
pushf
lock
push
cli
out
and
call
scas
cld
sbb
mov
hlt
insb
and
xor
jecxz
mov
inc
pop
fcoml
mov
and
sub
bound
push
les
push
adc
and
pop
xor
lods
out
adc
dec
mov
jb
imul
mov
rcll
sbb
and
movntq
and
mov
stc
jp
fldenv
loope
das
push
mov
and
filds
and
xchg
sub
push
mov
mov
jmp
bound
xor
push
call
mov
jecxz
sub
aaa
cmp
lahf
bound
fnsave
jnp
daa
in
pusha
push
push
rcl
push
rcr
add
test
mov
mov
add
jns
gs
in
in
xchg
out
aam
push
sbb
mov
mov
outsb
push
jns
xchg
sub
mov
push
jecxz
push
mov
push
pop
dec
orps
into
mov
push
jmp
ret
inc
pop
mov
aad
test
sub
push
pushf
fs
pop
loope
sub
js
and
cmc
iret
and
les
inc
jmp
shrb
cmp
mov
and
movsb
adc
in
and
stos
fidivs
jns
iret
mov
xlat
pop
nop
cmpsb
pop
jne
pushw
push
ret
lock
mulb
outsl
jno
ja
mov
xchg
pop
sbb
in
das
jle
pop
and
and
sahf
ret
xchg
out
data16
subl
mov
xor
xchg
or
mov
in
ja
xchg
jbe
stos
mov
into
cmpb
mov
and
out
popa
aam
xchg
xchg
lea
sub
in
pop
aaa
add
and
arpl
test
xchg
mov
and
loop
das
mov
and
sub
aaa
ret
stos
aam
mov
movsb
mov
repnz
scas
jne
push
jecxz
sbb
into
lods
loope
xchg
popa
ljmp
and
shl
sbb
popa
hlt
int3
push
jmp
xor
add
jne
pop
add
and
daa
dec
std
pop
in
lods
jb
mov
dec
inc
add
mov
or
pop
and
adc
clc
andl
into
pop
pop
inc
fsub
jne
push
inc
data16
mov
out
popf
stos
fnstenv
out
test
mov
into
in
jge
pushf
rcl
add
add
jne
arpl
imul
xor
cmp
inc
xchg
xor
clc
mov
cmp
clc
and
jb
or
xor
push
adc
or
iret
push
sbb
lcall
xor
fcompl
push
into
and
dec
lret
cltd
std
xchg
xorb
add
in
fs
pushf
sbb
cld
in
cs
xchg
movsl
push
movsb
cli
jp
add
rcrb
divl
aad
out
data16
pop
ret
pop
loope
dec
jbe
lock
push
mov
shl
into
pusha
lock
adc
push
mov
sbb
jo
mov
gs
dec
dec
and
jl
xor
test
mov
out
mov
xchg
int
ljmp
mov
int
shl
jecxz
xor
or
push
and
and
dec
loope
mov
cli
fidivl
lock
imul
nop
loopne
test
stc
jp
jmp
fcmove
mov
ja
psrad
in
negb
fnstenv
fists
jb
jne
aad
sbb
test
call
sub
add
aaa
aaa
push
int
in
loop
and
pop
mov
in
push
stos
mov
mov
sahf
mov
sti
xor
aad
int
test
imull
push
sub
add
sub
push
mov
daa
insb
adc
je
popa
and
test
cmc
movsb
push
loopne
clc
add
enter
add
pop
push
dec
movsl
jecxz
inc
and
arpl
test
add
dec
adc
fidivrs
jle
popf
cld
cmp
mov
leave
test
mov
jns
dec
ret
fnstcw
xchg
lods
and
sub
andl
push
jnp
mov
pushf
fidivrs
inc
ljmp
arpl
out
gs
jns
xor
int
test
xchg
ret
in
icebp
mov
pop
test
scas
sub
xchg
in
loop
fs
repnz
fldz
lds
ret
xor
jbe
or
dec
int3
sbb
ror
add
lods
hlt
and
adc
push
sub
mov
cld
xor
nop
add
mov
test
cs
dec
and
adc
sub
jle
jmp
jle
fadd
xchg
lret
mov
add
pusha
inc
movsb
add
test
je
bnd
into
mov
jmp
mov
mov
sbb
neg
inc
mov
fs
lahf
push
repz
push
addr16
add
inc
push
popa
call
mov
mov
in
ret
pop
loopne
dec
test
data16
test
out
push
bound
int
int3
in
into
push
lock
and
mov
push
scas
fs
mov
vpor
into
mov
hlt
pop
fldl
jg
frstor
inc
sub
mov
or
mov
out
ror
dec
mov
push
imul
cmpsb
ss
jmp
filds
xchg
loope
aam
sub
jnp
rorb
adc
addr16
hlt
jmp
xchg
jecxz
scas
mov
or
push
rclb
dec
in
loope
mull
clc
mov
add
stc
rclb
xor
push
pop
and
ret
lret
push
ficomps
cmp
das
js
arpl
jmp
loopne
into
pop
int
fldenv
stc
stos
cmpsl
mov
jle
int
lcall
pop
loope
into
mov
and
push
stc
mov
test
inc
rcr
cmp
ret
inc
jecxz
push
inc
repnz
adc
push
mov
stos
dec
mov
sbb
aam
mov
xchg
nop
xchg
push
fs
fstpl
xchg
push
and
jo
push
cmpsb
pop
and
pop
cmp
clc
mov
jecxz
rolb
xor
and
cmpsb
call
fcmovbe
aam
fst
pop
idiv
sbb
int
popf
jecxz
pop
outsb
and
imulb
mov
sbb
push
jns
add
mov
test
js
arpl
and
fsqrt
jecxz
movsb
push
lods
test
adc
call
jl
add
and
test
out
jecxz
out
and
sub
popf
adc
pop
pop
cld
ja
ficoml
fimuls
aad
cli
aam
adc
pop
loope
pusha
ljmp
in
add
push
or
inc
scas
cs
ja
xlat
jmp
mov
popa
add
in
leave
fbstp
adc
xor
cld
sbb
adc
xor
adc
sub
in
xchg
in
cmpsb
dec
ja
daa
mov
pop
jmp
xchg
mov
mov
pushf
adc
sahf
jmp
addr16
nop
mov
test
adc
adc
daa
leave
imul
lock
adcb
or
movsb
add
cld
mov
ret
pop
out
pop
pushf
stos
xchg
out
add
adc
repnz
mov
fstp
enter
inc
lock
mov
push
call
pop
sarl
ffree
xchg
sub
cmp
addl
mov
push
jecxz
lcall
mov
push
sbb
repz
cmc
xchg
jmp
sub
ret
int3
ret
xor
push
movsl
or
push
jmp
in
inc
cld
inc
dec
pop
scas
jmp
in
push
int
pop
or
and
sbb
loopne
xor
sub
xor
lock
cmp
popf
test
push
jecxz
xchg
mov
mov
pop
bound
mulb
repnz
ficoms
sahf
sbb
mov
dec
add
cwtl
push
iret
flds
aad
pusha
repnz
pop
jp
adc
pop
inc
mov
lret
jecxz
enter
int3
push
loope
hlt
push
mov
jle
and
pop
jmp
iret
mov
push
stos
mov
pop
xor
aam
push
cmp
mov
add
bound
mul
testl
sahf
call
imul
popa
jmp
adc
sub
into
cmpsl
daa
imul
add
push
xor
pop
stos
pusha
cmp
cmp
lock
jo
cmp
insl
ss
test
iret
jecxz
shll
jmp
loope
jbe
ss
shlb
push
hlt
sar
imul
test
xor
gs
fwait
and
mov
sub
out
push
rolb
adc
aad
incl
cmp
sbb
sarl
sbb
pusha
popa
or
fdivrp
enter
jmp
sub
fs
insb
fcmovb
jp
dec
xchg
adc
sbb
pop
fdiv
mov
int
shlb
test
jg
call
rolb
out
addr16
test
xchg
mov
push
test
ror
add
lret
pop
in
icebp
aam
or
aad
les
into
xorl
mulb
shrl
out
xchg
cmp
jnp
fidivs
aad
cld
aad
icebp
and
mov
jae
orl
pop
es
mul
es
fmuls
ss
bound
das
cli
addr16
lret
leave
sub
mov
pop
sti
mov
stos
into
rcrl
push
pop
inc
mov
adc
popa
mov
out
popf
jle
sbb
ficomps
rcrb
insl
adc
jle
push
mov
sbb
loopne
popa
push
popa
adc
ds
in
cmpb
shl
fists
in
mov
jecxz
sti
ss
into
push
in
cmp
mov
or
cltd
loop
mov
jb
les
adc
ljmp
ja
mov
jle
out
or
nop
loop
add
inc
test
cld
sbb
ret
rclb
into
enter
lds
es
and
ss
jp
insb
add
pop
xor
mov
test
call
pop
call
inc
imul
adc
lea
outsl
popa
cld
aaa
lods
sub
cmp
cld
mov
shll
pop
dec
in
ret
fs
les
test
cmp
les
ljmp
dec
popf
scas
imul
or
push
lds
jb
test
jecxz
vcvttsd2si
out
stos
adc
or
mov
ja
ja
jns
jmp
popa
and
repz
sbb
push
in
push
aad
xor
in
lret
popa
dec
in
stos
out
and
icebp
cmp
loope
dec
cmp
into
sbb
aad
and
ljmp
sbb
xor
clc
cmpsb
test
call
mov
pushf
fs
sbb
mov
jge
in
mov
fbstp
addr16
push
push
and
xchg
xlat
fdivp
aaa
shlb
into
adcl
and
rcl
sbb
mov
rorl
inc
into
in
jns
cmp
jae
push
in
jo
repz
xchg
xchg
stos
pop
pusha
mov
iret
nop
adc
and
cmpsl
or
cmp
xor
or
dec
rcll
sub
insb
nop
movsb
fcomi
adcb
add
movsb
cld
dec
adc
xchg
pop
in
test
movsb
cmp
aam
jno
mov
xchg
out
dec
mov
ret
jb
repz
aaa
mov
mov
imulb
mov
stc
adc
xchg
in
mov
mov
int
loopne
adc
test
xchg
jmp
push
push
movsb
in
out
jecxz
push
lea
jmp
push
mov
jecxz
cld
subb
adc
gs
inc
imul
out
xchg
pop
daa
dec
sub
push
and
arpl
enter
test
mov
inc
cmc
cmpsb
mov
pop
stos
dec
push
push
mov
lret
and
ret
cld
push
mov
test
jbe
les
jecxz
dec
pop
sub
mov
adc
arpl
cmp
je
bound
aam
add
out
fs
push
into
dec
arpl
push
or
jbe
dec
xchg
bound
jns
in
mov
mov
xchg
bnd
sub
mov
sahf
test
xlat
out
in
sarb
mov
subb
lods
mov
fcoml
and
shl
testl
mov
cwtl
idivl
mov
or
cld
popa
int
lret
rol
pop
imul
jl
xor
jmp
and
in
rcr
lcall
push
jg
pusha
fwait
pop
rclb
mov
cs
jae
into
add
and
movsl
and
fildll
sbb
push
hlt
pop
pop
inc
shr
int
daa
cwtl
rcll
movsl
mov
addb
aas
or
sub
dec
into
into
dec
sahf
add
sar
fiadds
iret
push
ss
pushf
adc
out
add
fldl
not
mov
adc
xchg
dec
inc
jmp
lret
push
ret
add
mov
mov
sub
cld
addr16
ret
test
and
add
decb
int
inc
sbb
add
mov
jae
ror
rol
adc
into
push
call
push
jecxz
push
cmp
popa
push
adc
jb
sub
mov
xor
aam
lcall
sbb
jecxz
mov
daa
mov
dec
aam
and
test
aaa
or
push
push
ror
shll
sub
std
movsb
adc
stos
imul
xlat
and
jo
pop
lods
adc
pop
sahf
add
rcl
shr
cmp
cmpsb
aad
sarl
push
cmpsl
cmp
fdivrs
shlb
cli
lds
or
notl
xlat
insb
cmpsl
movsb
xchg
imul
mov
xor
bound
loop
mov
insb
cld
addr16
mov
dec
shl
add
int3
or
dec
orb
dec
and
mov
aaa
test
dec
add
sbb
test
xchg
sbb
jmp
add
xchg
popa
sbb
int
icebp
and
loop
push
into
adc
xor
insl
and
icebp
data16
aas
cmpsb
push
stc
pop
add
imull
ret
and
mov
push
fiadds
dec
pop
aad
jecxz
sti
rcll
xchg
in
fdivrs
jge
mov
mov
ljmp
or
imul
cmp
lahf
xor
shrb
movsb
fsubrs
cmc
fidivrs
shlb
and
loope
divl
fs
cmp
ljmp
aam
add
test
imul
int
push
loop
mov
xor
popa
bound
test
iret
stos
pop
data16
arpl
cld
add
std
mov
bound
jecxz
jmp
mov
mov
enter
aaa
shrb
pop
xchg
sbb
and
jl
pop
into
iret
fdivrs
in
fcoml
arpl
bound
sti
pop
cmp
adc
jno
out
fstpt
rcl
sbb
lcall
mov
push
fisubl
cld
dec
call
ret
je
sub
rolb
nop
cld
ljmp
push
and
lods
fisubrs
cmc
mov
xor
in
aam
out
jo
xor
push
push
jno
stc
hlt
sub
mov
cs
mov
mov
testb
push
shll
imul
std
js
xchg
inc
pop
cld
lret
xchg
adc
sti
push
adc
ret
aad
ds
cmpsb
fs
mov
cmc
adc
and
lret
int3
mov
stc
mov
mov
inc
clc
cmp
xlat
fstpl
hlt
popa
in
jecxz
fsubp
cmp
stos
loope
add
imul
iret
jo
popa
push
ret
lds
idivb
mov
dec
push
pop
adc
inc
call
mov
pop
rep
cmc
fwait
jle
push
shrb
movsb
in
jnp
push
in
rcll
sbb
pop
les
xor
inc
cmpsb
mov
lret
cmp
repz
pop
sbb
mov
test
cmp
pusha
push
push
jecxz
mov
pop
je
stos
movsb
pusha
lcall
push
and
ss
dec
inc
loop
rorb
inc
cmp
adc
cld
jno
cmpsb
and
pop
out
sahf
andb
fucomp
mov
jns
nop
les
mov
mov
and
loope
mov
jge
fwait
movb
mov
mov
rol
inc
fs
and
and
fs
and
dec
and
movsb
js
int
adc
dec
mov
popa
mov
sub
ljmp
sub
int
inc
enter
adc
scas
in
movsb
movsb
ja
test
lcall
xchg
in
jmp
dec
cld
cmp
mov
iret
adc
lds
jecxz
mov
in
xor
and
jl
in
inc
and
cld
add
aas
xor
imul
fucomi
fldl
xor
push
sahf
xchg
jecxz
sbb
in
mov
xchg
mov
xchg
jnp
fldlg2
les
cmp
fimuls
imul
call
adc
and
lahf
std
loope
aaa
adc
push
and
ds
ljmp
ja
adc
rcrb
and
aad
push
pop
sub
jp
fstpl
pop
lods
dec
and
xchg
sti
jmp
enter
cli
inc
mov
call
pop
je
mov
fsqrt
mov
sbb
shlb
inc
repnz
cmc
inc
push
icebp
sti
rclb
imul
inc
out
and
clc
mov
cmc
inc
inc
ljmp
xchg
aas
mov
push
mov
inc
inc
sbb
jnp
sahf
std
push
pop
and
push
imul
test
ret
xchg
xor
out
iret
in
xor
ret
aad
cld
jns
cmpsb
mov
imul
stc
push
cmpsl
dec
fldcw
jnp
dec
add
shll
xor
dec
mov
push
push
dec
pop
mov
stc
push
jg
std
or
xchg
xor
testb
and
and
fs
pop
add
xor
xchg
in
add
lahf
push
sub
aad
ret
aaa
test
arpl
cltd
pusha
mov
mov
xchg
int
outsb
mov
stos
pop
add
add
insb
into
dec
add
jne
rcll
pop
cs
jne
cmp
aaa
popf
aam
cmpsb
in
cld
push
sahf
push
sarb
fisubrl
push
sahf
lock
daa
xor
aam
xchg
jecxz
xor
xchg
push
xchg
sub
icebp
adc
inc
sti
fnstsw
movsb
push
stos
aam
adc
xor
in
sarl
dec
ret
jo
movsb
repnz
pusha
fistps
pop
mov
mov
lret
dec
test
xchg
ficompl
mov
stos
rcll
sub
addr16
jne
adc
movsb
mov
mov
mov
rolb
cmc
cmc
push
xor
cmp
mov
jle
add
jp
sub
hlt
push
sarl
jmp
scas
xor
adc
je
outsb
dec
dec
fsubl
jecxz
shrb
ss
push
jbe
mov
push
loopne
data16
jae
clc
dec
adc
jecxz
mul
lods
cmp
push
mov
mov
loopne
je
mov
cmp
adc
push
hlt
aam
test
lods
arpl
dec
adc
cmp
in
imul
lock
cld
in
mov
mov
push
sub
pushf
push
mov
sub
out
cmp
mov
sub
lock
mov
adc
jae
push
cmpsl
leave
imul
aaa
jmp
sub
fidivs
rol
xor
mov
mov
out
lret
jl
xchg
push
repnz
outsb
repz
add
pushf
clc
repz
cmp
dec
sbb
lods
ja
in
adc
cld
jno
cltd
in
not
xchg
in
ret
lahf
insb
rcrl
mov
mov
stos
sahf
pop
mov
lret
popa
pop
stos
and
jmp
mov
pop
jo
aas
pop
out
add
rclb
and
in
inc
add
fdivl
pop
movsl
and
scas
sbb
fiaddl
outsb
jmp
aad
adc
sahf
add
ror
loope
pop
mov
push
lret
stos
loope
mov
sub
push
mov
mov
adc
inc
or
je
es
movsb
ja
or
mov
das
fildl
bound
cmp
cmp
add
daa
mov
lods
pop
mov
push
lahf
and
fcmovnu
sbb
dec
cli
mov
insl
pusha
xchg
jnp
jg
and
pop
xlat
xchg
stos
sub
pop
cmc
dec
in
dec
mov
cmp
pop
popf
test
fiaddl
movsb
in
sbb
cmp
cmp
loopne
mov
mov
jo
adc
add
cmpsb
repnz
sbb
lds
inc
cmp
fsubl
gs
faddl
fldenv
ret
loope
mov
scas
push
dec
push
loope
ss
aad
mov
push
aaa
mov
pop
push
rclb
mov
push
fdivl
cld
iret
xor
outsl
mov
inc
push
popf
test
cwtl
push
dec
std
jmp
jmp
arpl
sti
das
push
pop
cmp
add
lret
jae
es
adc
adc
cmp
popa
stc
ljmp
adcl
lea
cmp
ja
test
sub
outsb
cli
dec
add
mov
cltd
pop
test
lea
shlb
mov
pop
cmc
jg
xchg
cli
cld
sub
push
scas
jns
add
push
test
test
ja
dec
test
out
sahf
push
push
jecxz
ljmp
imul
fstl
inc
ret
je
popa
in
dec
loopne
jb
sahf
aaa
jmp
dec
test
adc
push
sub
frndint
jns
and
pop
mov
dec
movsb
adc
fwait
aam
mov
dec
mov
push
push
mov
jbe
bound
clc
or
jb
mull
jmp
mov
fldt
das
cli
push
les
out
hlt
in
jg
jmp
sbb
xchg
or
add
mov
xchg
cmp
mov
aam
xor
jecxz
mov
loope
call
cld
adc
es
dec
out
and
nop
loopne
sbb
movsb
xor
push
mov
fldcw
add
jne
xchg
ljmp
xchg
cld
inc
push
rcl
ret
shll
mov
sub
mov
testb
lret
aam
call
lcall
and
add
pusha
ret
and
loope
shrl
icebp
or
imulb
pop
and
stos
mov
sahf
in
inc
push
ljmp
ljmp
out
mov
jne
xor
stc
push
inc
pop
andb
out
inc
or
jmp
test
xchg
movsl
lcall
lahf
mov
into
stc
inc
loop
and
cld
and
xchg
mov
cmpsl
ffree
aas
iret
stc
aam
add
fidivrl
jo
mov
jle
xchg
insl
sti
les
je
ds
insb
dec
mov
adc
lahf
rcl
push
mov
into
push
cwtl
std
pop
sbb
cld
sub
hlt
aad
subb
ficoms
jmp
and
test
and
sub
test
and
arpl
rcr
add
imul
aam
and
push
jp
xchg
dec
shr
xor
loope
insb
jb
xor
xor
ljmp
loopne
out
or
jno
int
add
into
popf
pop
xchg
ja
shl
cmp
xchg
clc
lds
xor
fs
mov
sub
loope
mov
mov
cli
imul
orb
loop
or
jle
dec
push
fstp
cltd
adc
arpl
adc
mov
xor
push
and
rcll
filds
pslld
sbbb
adc
mov
lods
add
movsb
mov
cs
add
out
popf
fucomp
pop
insb
sahf
jmp
sub
dec
fs
in
mov
pop
lcall
cmp
outsl
pop
jecxz
ljmp
iret
imul
pop
fsts
fdivp
xor
ror
ja
loope
mov
inc
and
and
jecxz
lods
adc
adc
push
aad
sti
in
addl
mov
popf
jmp
cld
lret
mov
ret
jae
in
mov
jle
cmpl
ret
push
sahf
jl
adcl
cld
int
push
xchg
sub
js
xor
ss
roll
mov
mov
and
hlt
shrb
sub
push
and
and
roll
fs
ror
push
adc
jno
pop
enter
les
or
pop
or
movsb
fs
mov
data16
in
pop
hlt
nop
dec
mov
lret
aam
jno
movsl
es
adc
repnz
arpl
and
shlb
testb
xor
pusha
jmp
mov
out
cltd
test
pop
add
es
pushf
mov
sub
mov
adc
addr16
int3
xchg
fisttpll
stos
cli
ja
or
mov
sbb
or
mov
jnp
inc
neg
daa
sub
dec
shl
fs
ret
pop
add
sub
aam
sahf
sbb
cs
ljmp
or
movsb
mov
mov
stos
sbb
mov
clc
bound
pusha
call
push
pop
sub
cwtl
sub
rcrb
mov
and
cmp
ss
scas
leave
pop
sbb
push
imul
mov
ret
xchg
fs
js
shlb
mov
push
aas
ret
addr16
and
adc
xchg
imul
sub
mov
cmpsl
in
fisttps
std
cmp
mov
or
or
xchg
push
pushf
aam
push
add
and
or
fdivp
ljmp
pop
pop
arpl
jae
pop
push
mov
imul
aad
lcall
outsl
daa
sbb
sub
mov
push
sar
or
in
fsubr
jge
cld
add
ljmp
fs
in
addl
lods
in
and
push
repnz
cmp
sub
mov
int3
iret
out
ffree
outsl
mov
xchg
movsl
cmpsb
rcrl
in
fimull
shrb
hlt
nop
lret
es
fldlg2
shrw
in
add
mov
loope
loope
in
andl
outsl
test
test
xor
repz
or
lock
outsb
xor
mov
mul
cld
xchg
aad
ficoml
sub
jmp
mov
mov
and
repnz
fisubrs
notl
into
inc
in
sbb
or
fmul
jnp
notl
cmp
aad
icebp
sbb
push
loope
xchg
insb
push
xchg
shlb
sti
inc
mov
jp
cmp
pop
aaa
adc
mov
int3
pop
sbb
inc
jecxz
andb
push
adc
mov
sar
push
sbb
mov
adc
rcrl
loopne
mov
out
es
sbb
daa
cld
sub
and
call
loope
dec
lods
fucomp
sub
fidivrs
xor
xchg
insl
or
mov
ret
iret
and
add
inc
movsb
push
icebp
roll
adc
cmp
movsb
inc
iret
ret
ljmp
add
test
inc
fisubs
jecxz
andl
jmp
fstpl
push
mov
test
cmp
cmp
cmp
push
pusha
and
aas
inc
mov
xchg
mov
lds
mov
fdivrl
cmp
shr
lods
shrb
mov
gs
inc
dec
xchg
or
insl
popa
add
xor
ljmp
mov
out
push
test
push
nop
mov
loopne
sahf
fnstsw
sahf
lods
repnz
stc
and
inc
push
in
ret
aam
dec
lret
outsl
inc
jns
mov
iret
dec
enter
pop
bound
sbb
cmp
test
push
insb
loope
add
sbbl
jnp
jl
xor
shll
push
and
dec
lods
into
test
mov
fiadds
leave
xchg
in
xchg
lcall
adc
ret
pop
push
aam
add
cvtdq2ps
sub
ffree
popa
lahf
jmp
cmp
hlt
push
sub
jb
stos
ljmp
xor
jle
popf
cmp
jno
in
mov
pop
jne
mov
jae
vmovapd
movb
sbbb
out
bound
pop
stc
out
xor
jecxz
jmp
mov
xor
xor
in
in
xchg
arpl
je
stc
pop
popa
fisubs
loopne
aas
fstp
fbld
movsb
jmp
jbe
test
add
clc
mov
enter
and
in
xchg
dec
sti
cmpb
divl
push
test
mov
ljmp
test
add
rorl
insb
jl
pusha
arpl
mov
int
and
lods
add
push
push
movb
imul
mulb
pop
pop
leave
out
lahf
bound
aam
es
pop
xchg
add
push
and
out
push
jecxz
in
push
int3
jecxz
repnz
or
or
jbe
ret
arpl
inc
lret
ficomps
jb
mov
mov
pushw
in
mov
add
lods
pop
cmc
xchg
fldl
mov
in
adc
mov
loope
lods
outsb
shl
mov
int3
mov
sub
mov
popf
mov
lret
push
cmpb
lods
cli
imul
shrb
add
sahf
aad
sub
xchg
pop
aam
push
sti
jno
dec
adc
fnstcw
in
push
enter
cmp
mov
sub
adc
and
cmp
add
adc
add
fwait
pop
add
sub
adc
out
jnp
fucomp
push
fbstp
popl
inc
inc
jmp
add
or
mov
jle
xchg
push
and
sub
andb
jmp
cmp
lahf
xchg
mov
pop
pop
lods
jno
inc
add
xor
and
stos
hlt
fsts
scas
jecxz
std
jl
out
aam
mov
mulb
xchg
ljmp
mov
and
mov
cld
mov
sbb
rorl
mov
repz
imul
rorb
mov
testb
pop
sbb
orl
cmp
jmp
in
in
std
sbbb
cmpsb
pop
xchg
imul
frstor
jbe
sub
sub
repnz
arpl
lret
inc
aad
ss
mov
cmp
jo
dec
stos
cwtl
push
pop
cmpsl
mov
pop
xchg
fisttpll
rclb
xchg
mov
add
and
insl
dec
mov
mov
inc
dec
enter
movsb
mov
test
imul
jp
inc
xchg
mov
jmp
rcr
xor
pusha
outsb
es
in
orl
pop
jne
pusha
sub
push
and
sbb
out
shlb
fsts
push
lret
jne
nop
iret
movsb
mov
xor
pop
movb
movsb
and
shlb
in
push
popf
jp
inc
pop
je
stos
mov
mov
mov
mov
insw
ret
dec
orl
adc
cmp
leave
jmp
subb
ret
xor
push
sub
mov
mov
sub
nop
sbb
sub
push
stos
into
push
mov
in
and
push
lock
mov
and
cmp
das
ds
push
mov
testb
out
mov
arpl
jmp
adc
bound
outsb
test
sub
pusha
lods
aam
popa
stc
cmp
gs
popf
add
or
dec
lds
icebp
mov
adc
gs
shlb
and
loope
jl
repz
and
das
dec
ret
xor
sbb
ja
mov
in
in
cwtl
jb
cli
cli
and
imulb
shr
jl
fcmovbe
aam
call
ljmp
out
and
xor
into
outsl
mov
xchg
in
aad
pop
shlb
or
sahf
jbe
and
scas
ret
les
rcrl
xchg
push
sarl
sahf
cli
and
mov
pop
xor
push
out
cltd
mov
ret
mov
lret
rol
hlt
mov
jnp
adc
in
xor
mov
ret
rcrb
movl
jnp
jge
loop
ljmp
sub
fimuls
fs
lahf
cmp
mov
ljmp
cmpsb
mov
cmp
fsubp
pop
in
and
shlb
xchg
sbb
outsl
mov
sub
inc
les
loope
cmp
mov
add
shl
dec
pop
data16
rcl
lds
fmull
and
jb
push
mov
rcr
lcall
hlt
mov
sbb
cmc
and
add
ror
shll
or
mov
sub
lret
sbb
fbstp
and
adcb
cltd
loop
test
sub
mov
lods
dec
xor
xchg
pop
fadds
add
cmp
ret
adc
int3
rorb
pop
sub
mov
pop
push
sbb
sub
test
xor
out
out
cmp
jge
inc
cmp
sarb
cmp
cmp
dec
mov
ret
sub
mov
out
push
cmp
daa
jbe
pop
roll
mov
xor
sbb
fidivrs
mov
js
nop
inc
push
jbe
xchg
in
ss
pop
mov
in
and
loop
addr16
mov
lret
or
sbb
inc
ret
aam
stc
or
loop
sub
mov
mov
add
jle
dec
testb
ret
and
lock
xor
clc
sub
dec
sbb
loop
ret
cmp
dec
test
negl
sahf
movsl
dec
je
inc
fimull
mov
pop
sbbb
into
and
cmp
in
test
stos
cli
adc
xchg
adc
loopne
xor
out
adc
scas
and
lods
and
fildll
pshufw
inc
call
mov
jle
insl
sub
aam
das
fstpl
push
mov
roll
fbstp
push
loope
fnstcw
sbb
fstpl
jl
call
in
sub
lea
enter
and
and
xchg
in
pop
repz
shlb
out
ficomps
pop
push
xor
add
shll
xchg
and
scas
cli
sub
insl
fisubrl
and
loope
ss
and
cmp
xor
ficomps
xor
cmp
push
stc
arpl
outsb
cmp
dec
add
cmp
sub
xchg
xchg
sahf
and
and
subb
aam
aam
jo
and
into
xchg
sub
repnz
or
stc
sub
cld
add
add
mov
mov
pop
nop
popf
mov
jbe
cmc
push
jle
mov
mov
push
nop
jbe
jmp
inc
pusha
ret
mov
fs
in
stc
add
out
jp,pn
and
dec
fbld
popa
mov
pop
add
push
push
call
or
loopne
arpl
cld
mov
jl
test
sbb
jl
push
in
mov
rcl
mov
adc
jecxz
add
pop
addr16
pop
popf
faddp
dec
push
notb
jmp
inc
mov
imul
std
in
add
pop
mov
mov
aas
jnp
das
and
jno
imul
push
pop
and
cld
push
mov
fdivrp
fs
imul
stc
and
pop
adc
fs
rcr
ret
push
icebp
cld
adc
push
push
mov
mov
fs
ja
or
mov
sub
or
adc
jg
cmpsl
insb
in
fs
mov
ljmp
lcall
sbb
adc
repz
inc
push
negb
cli
pop
jae
in
xchg
imul
dec
jge
in
add
popa
fs
cld
push
outsb
lret
fistps
test
and
dec
xchg
dec
jecxz
push
xlat
cmp
push
mov
xor
js
stc
cli
or
jmp
mov
mov
sbb
fsincos
popf
jmp
sbb
movsl
lret
test
xchg
aas
mov
push
push
arpl
ss
enter
lock
lea
arpl
jns
cmp
sbb
stc
int3
stos
push
call
or
outsl
cld
shld
or
pusha
mov
dec
shlb
dec
test
mov
xor
arpl
push
cld
inc
mov
in
push
cmp
imul
push
pushf
sahf
insl
xor
ficoml
hlt
or
push
mov
push
cld
lods
xorl
adc
inc
stc
or
pop
inc
int3
iret
pop
dec
ljmp
bswap
mov
ret
fmulp
adc
jecxz
or
pop
ficomps
jmp
lret
out
dec
into
imul
adc
add
bnd
inc
cmp
popf
pop
cltd
and
popf
push
xchg
fsubl
mov
ja
loopne
loope
jecxz
es
push
lods
jnp
fnstsw
mov
adc
mov
jle
dec
out
fadd
les
xor
arpl
out
push
xchg
insb
incb
xchg
jp
jmp
rclb
dec
cld
jnp
int3
ljmp
inc
xor
ficoms
lret
ljmp
jmp
and
lea
sbb
mov
push
jns
dec
push
in
aas
mov
shl
fstl
sbb
sub
enter
dec
xchg
jecxz
inc
test
push
push
fisubrs
cli
out
idivl
and
dec
and
movsb
test
and
shlb
lock
or
ljmp
mov
adc
in
jb
xor
stos
incb
pop
inc
fdivrp
mov
hlt
mov
int
into
stos
push
fucomip
lahf
outsl
rcrl
cmpsb
and
rol
test
les
inc
inc
aam
mov
shrb
mov
out
fsts
and
mov
fcmovu
or
mov
sarb
sbb
mov
dec
adc
fidivrs
lret
ret
daa
shlb
in
push
mov
push
fsubrl
dec
rcrb
adc
out
leave
stos
mov
xor
in
adc
into
loopne
inc
ret
xchg
fiadds
add
aam
xor
mov
jmp
hlt
arpl
mov
aam
cwtl
dec
popf
call
push
int3
mov
xor
lods
mov
call
rcr
xor
aas
mov
mov
faddl
enter
and
hlt
mov
insl
arpl
inc
or
shrb
aam
push
imul
push
negb
and
hlt
inc
jne
aam
out
imulb
sbb
frstor
cmp
in
fbld
inc
sub
and
arpl
shr
pop
add
sarb
aam
stos
pop
mov
stos
in
mov
rol
sbb
and
fsubrs
rolb
pop
xchg
and
xor
lcall
fdivs
shlb
int3
and
loopne
fadd
add
lret
lods
loopne
shll
ljmp
pop
mov
jecxz
push
or
sub
cs
test
hlt
mov
adc
mov
into
adcl
out
lret
arpl
into
loope
enter
movsb
nop
mov
stos
fmull
in
push
out
fs
dec
xchg
repz
fisubrs
out
mov
xchg
scas
stos
mov
jb
xor
shlb
rorb
ror
nop
sbb
icebp
mov
or
fsubp
stos
sar
inc
shll
sbb
sarl
out
notb
clc
addl
and
int3
ficoms
dec
and
cmpsl
lcall
icebp
mov
ror
push
jo
cli
insb
fs
lcall
imul
mov
in
aas
and
out
mov
sub
mov
pop
cmpsb
call
and
popa
lcall
dec
mov
in
dec
mov
fiaddl
cmpsb
addr16
movsl
dec
lcall
mov
aam
ljmp
or
mov
mov
jmp
cmp
jb
jecxz
movb
loopne
or
jb
ret
leave
pop
in
and
call
mov
xchg
cltd
rolb
xchg
cltd
lock
arpl
es
xor
jno
call
jmp
cmp
jp
sbb
loopne
mov
fidivs
sar
out
stos
jnp
inc
mov
jb
sub
fsubrl
data16
jp
iret
repz
jo
jecxz
test
repz
lods
sub
ljmp
test
test
leave
loopne
aad
enter
push
lcall
mov
stos
loope
shlb
inc
loope
fsubp
dec
inc
ja
mov
in
sbb
mov
stos
ror
mov
div
xor
shl
pop
test
hlt
in
push
push
fstl
lods
in
sbb
int
fcompl
jo
fstl
ljmp
aad
sub
mov
adc
loopne
sbb
imul
enter
lods
push
mov
mov
adc
fldl
enter
jecxz
notb
in
add
and
clc
xor
or
inc
rcrl
jmp
iret
cld
jb
or
cltd
ljmp
mov
call
stos
push
lcall
add
dec
clc
push
notl
pop
xchg
ret
push
div
gs
pusha
adc
cmpsb
hlt
enter
xorl
out
pop
je
adc
xchg
push
ljmp
cmpb
fcmovu
repnz
loope
add
stos
pop
int3
jb
icebp
dec
rcl
sub
in
ja
push
cmpb
mov
in
or
add
ficomps
stos
arpl
and
pop
das
arpl
xchg
xor
adc
jecxz
pop
sub
xchg
adc
inc
arpl
pop
hlt
jno
mov
sub
enter
fidivrs
xor
arpl
filds
xor
adcb
fisubrl
outsb
inc
scas
leave
push
mov
out
mov
in
bound
pop
pusha
push
in
ud2
sub
fnsave
fisubrs
xchg
cld
and
jge
movsb
shl
fiadds
aam
aas
jmp
cmpl
xchg
mov
push
mov
ljmp
cld
xchg
lods
lret
pop
add
fucom
jecxz
cmp
pop
into
shll
cmp
push
addr16
in
ficomps
mov
adc
mov
mov
into
arpl
or
leave
push
ja
and
pop
icebp
and
daa
jmp
jg
aam
movsb
adc
imul
push
insl
inc
xchg
lcall
ljmp
shll
fstpl
xchg
push
cltd
fcoml
push
lcall
sbb
stos
aaa
insb
pop
clc
xchg
pop
adc
aad
adc
cmpsb
outsb
adc
divl
xchg
push
xchg
jl
xor
imulb
fmul
push
push
fidivrs
jp
pusha
mov
cld
sar
dec
pop
adc
sete
imul
jne
sahf
mov
jbe
ss
cmc
test
fbstp
adc
hlt
js
cmp
test
fbstp
aaa
inc
adc
hlt
stc
stc
mov
inc
adc
sti
stc
mov
fucomip
inc
adc
hlt
in
stc
lods
push
insl
test
lahf
jbe
mov
jo
adc
sub
mov
das
push
repnz
fbstp
adc
sub
mov
xor
test
fbstp
xor
repz
xor
test
filds
adc
sub
mov
add
fisttps
adc
sub
mov
pop
push
lret
fisttps
push
out
stos
mov
push
cwtl
fisubrs
jp
and
mov
pushf
fistpl
out
add
xor
dec
mov
mov
hlt
call
fwait
loopne
jp
xchg
jne
insl
cmp
jmp
pusha
jne
ret
fcomps
cltd
mov
pop
cmc
ret
jne
lret
sti
cwtl
dec
loope
xchg
xchg
pop
or
cmc
cmc
dec
int
ljmp
jp
aam
sub
adc
fs
sbb
cmc
sub
sbb
int3
pop
or
xchg
aad
pop
xchg
in
cltd
fwait
inc
adc
fs
iret
jne
lret
dec
jecxz
and
xchg
xchg
pop
xchg
push
inc
enter
shr
loope
add
dec
jecxz
cmc
loop
jne
jmp
sti
iret
inc
stos
enter
pop
in
fstpt
xchg
inc
cmp
movsb
fimuls
ljmp
xchg
ret
stos
xlat
iret
loop
xchg
rcrl
or
decb
lahf
jl
mov
cltd
jecxz
or
fyl2x
sub
lret
fldt
adc
imul
rcr
jnp
jecxz
aas
push
pop
loopne
fmuls
rcr
fcoms
movsb
lds
mov
enter
fldz
sub
repnz
cld
in
adc
mov
fldt
shlb
in
pop
fsin
nop
lock
f2xm1
xchg
add
dec
and
jg
addl
push
xor
dec
push
aad
decb
hlt
adc
sbb
inc
sti
iret
jne
sti
sub
int3
ficomps
les
sub
inc
test
lcall
add
into
xchg
push
cwtl
sub
aad
fs
shlb
leave
arpl
push
aad
sbb
sbb
arpl
sahf
sti
inc
std
rcll
sbb
fcomi
fldt
shlb
rorl
mov
lds
pop
dec
hlt
mov
sub
sbb
mov
inc
rcrb
pop
shll
dec
iret
hlt
xchg
dec
lret
pop
pop
into
test
hlt
repz
repz
sti
fs
inc
jmp
rol
jnp
pop
ret
pop
cltd
dec
pop
hlt
jae
dec
jle
mov
jb
sahf
pop
int
aam
or
lcall
in
shr
lds
incb
pushl
jno
lods
call
xchg
and
int
xchg
frstpm(287
testl
push
test
or
push
cwtl
pop
cmc
mov
cmp
cmp
xor
mov
inc
cld
adc
cmp
leave
pop
pop
mov
stos
or
orl
daa
adc
outsb
and
xchg
push
sub
mov
sbb
test
mov
lock
nop
push
popl
cmpsb
lock
xchg
popl
jl
mov
xor
mov
stos
xchg
mov
sbb
gs
mov
icebp
shl
dec
les
xchg
adc
in
push
adc
lods
cmpsb
mov
jg
add
pop
in
pop
or
mov
fst
into
js
cld
push
add
fldenv
or
insl
jl
dec
pop
bound
xchg
pop
adc
adc
xchg
push
cmp
fmul
out
fists
sbb
xchg
push
stos
loope
lods
shl
push
je
push
popa
jp
scas
mov
xchg
and
sarb
nop
rorb
sbb
mov
aaa
daa
cs
xchg
pop
cmp
inc
pop
mov
push
adc
call
inc
fidivl
popa
sub
int
xchg
shlb
mov
xchg
jecxz
cld
ds
jg
scas
movsb
inc
xchg
dec
fucomip
in
pop
inc
inc
icebp
pop
lods
enter
ds
loopne
adc
push
push
movsb
push
mov
cmc
icebp
ja
arpl
in
push
inc
and
lahf
adc
dec
insb
and
pop
into
sahf
xor
test
sbb
lods
leave
or
jmp
pusha
lock
call
aaa
filds
inc
adc
sub
adc
hlt
adc
divl
bound
std
repnz
mov
pop
ret
sub
fld1
ficoms
adc
jg
scas
mov
movsl
mov
and
es
cld
push
jl
ss
ret
fs
fs
mov
push
and
mov
fs
pop
adc
pop
loopne
clc
aad
rorl
iret
out
call
mov
adc
jecxz
out
lods
cld
inc
nop
inc
sub
pop
mov
xor
and
lods
or
sbb
addb
out
mov
cmp
cwtl
jno
adc
orb
and
fldcw
out
pop
jecxz
int
dec
jp
stos
popf
inc
loope
and
inc
popa
cltd
mov
movsb
mulb
xor
jle
adc
jno
loope
jmp
push
fs
ja
fldcw
and
sub
pop
iret
or
xlat
fnsave
inc
push
popf
ficoms
fs
in
ja
push
popa
adc
test
mov
mov
mov
jno
in
or
sbb
test
ficoms
adc
cld
push
fildll
repz
cmpl
jg
jno
xchg
ficoms
xchg
mov
stos
sub
ds
inc
pop
not
dec
test
dec
fxtract
xor
jle
movl
fs
fidivs
call
insb
fsubr
jecxz
out
daa
push
insl
inc
jnp
fcomip
int3
dec
in
in
and
xor
sarb
xchg
shl
or
xchg
dec
mov
stos
cmc
xchg
xchg
mov
and
hlt
clc
mov
dec
call
es
jno
pop
jecxz
cmp
cld
test
cmp
push
bound
push
fcomi
cmpsb
idivb
sti
ss
mov
out
aaa
push
sbb
cmp
add
and
push
mov
dec
fldl2e
pop
cmpsl
bound
repnz
sub
pusha
ficomps
testl
bound
cld
fldl
and
fstl
adc
sub
in
gs
aas
stc
dec
and
je
jecxz
shl
sbb
lds
mov
mov
sbbl
and
cmc
sbb
pop
sbb
mov
adc
cld
mov
and
ja
loopne
insb
stos
xlat
arpl
mov
in
sbb
inc
test
sub
pop
fsubp
cmp
add
cld
fnsave
int3
xchg
cmpsb
aam
sti
cmp
inc
in
loopne
fdiv
cli
int
push
jmp
push
repz
push
frstor
push
cmp
sub
xor
sub
int
gs
sbb
in
cmpsb
push
rorl
cmp
mov
pop
xchg
out
and
test
sbb
cld
jp
dec
insl
iret
xchg
push
cmpsl
aad
pop
add
scas
or
lret
fisubs
pop
test
add
xchg
iret
into
push
mov
scas
icebp
xchg
or
pop
mov
xor
inc
xchg
inc
dec
iret
hlt
adc
repnz
in
negb
inc
adc
sarl
aad
sti
pushf
adc
arpl
subl
cltd
ffreep
test
bound
inc
jle
xor
fsub
dec
mov
jecxz
aaa
inc
push
sbb
loope
les
mov
mov
mov
arpl
xchg
add
pop
xor
xor
cs
cld
mov
jae
mov
jg
xchg
into
iret
push
repz
popf
pop
sbb
pop
fcompl
insl
enter
xchg
cmpsb
aaa
shlb
push
push
ret
xchg
sahf
or
xchg
addl
and
imul
fstl
mov
testb
cmc
push
xchg
idiv
sbb
xchg
ret
fwait
clc
cmp
mov
repz
sti
add
cmc
pop
sbb
arpl
pusha
adc
insl
sarb
dec
sbb
jl
fldenv
jnp
in
ret
rdmsr
jbe
pushf
inc
push
ret
pop
dec
int
pop
sbb
sbb
in
jge
jnp
cmpsb
mov
out
pop
push
fmuls
xchg
xor
out
popa
std
enter
popf
hlt
test
jl
fnsave
stos
je
mov
ret
pop
scas
add
es
mov
push
jnp
adc
shl
test
cmp
add
jg
push
je
clc
adc
jle
xor
pop
add
mov
lret
mov
adc
pushf
adc
cld
test
ffree
enter
stos
push
jno
cmp
sub
fmuls
ret
pop
mov
rorl
dec
std
jl
lret
xor
outsb
ss
inc
push
aaa
decl
and
out
incl
jecxz
shll
xorb
pop
dec
movl
faddp
inc
jl
les
into
pop
iret
jb
pinsrw
sbb
aam
pop
clc
aam
loope
push
roll
shrl
fildll
jae
das
fidivs
add
dec
mov
insl
lret
sub
icebp
hlt
inc
or
mov
mov
fisttpll
movsl
mov
pop
mov
push
push
sub
popa
adc
test
xchg
sbb
sub
aaa
sub
push
push
xchg
push
jb
imul
mov
fs
ficomps
jge
inc
cmc
cli
sbb
pop
push
mov
jecxz
push
xchg
ficoml
mov
adc
icebp
jge
popa
dec
cld
leave
add
jno
idiv
aad
add
popa
sarb
mul
xchg
or
add
in
std
fdivs
hlt
sahf
jg
mov
push
test
test
or
and
test
xor
nop
arpl
test
aam
lret
test
adc
sub
xlat
mov
cmpsb
adc
and
dec
ja
sti
les
cmp
stos
adc
movsb
cmpsb
jo
cld
xor
daa
pop
push
test
das
or
jecxz
push
push
imul
xchg
out
push
and
push
jmp
push
inc
popa
xor
xchg
cmp
xlat
xlat
je
pop
xchg
scas
call
jecxz
ljmp
mov
dec
add
cld
pop
push
nop
add
mov
clc
loopne
aad
fs
shl
test
adc
xor
out
and
mov
lret
shrb
clc
sub
push
cmpsl
adc
sbb
neg
jl
or
pop
adc
lret
mov
das
les
mov
sub
dec
iret
ljmp
movsl
popa
incl
mov
jle
popa
je
ds
shll
lcall
ds
push
stos
mov
push
fbld
sahf
imul
push
bound
hlt
insl
xchg
out
lods
scas
leave
outsl
jbe
orl
out
fdivrp
push
mov
mov
fs
into
insb
loope
xchg
out
mov
sub
ret
stc
and
out
aam
pop
adc
cld
and
stos
loope
push
les
ja
sub
sub
add
ja
outsb
loope
jle
icebp
push
and
push
dec
pop
pop
roll
movsb
out
mov
or
addr16
cli
mov
notl
test
fmul
fs
out
xchg
and
mov
les
cmpl
cwtl
arpl
aas
jne
hlt
sbb
mov
aas
pop
ret
push
dec
cli
shll
inc
sahf
and
or
ret
test
mov
and
mov
cmp
lods
cmpsb
mov
sahf
rolb
hlt
cmp
inc
out
out
xchg
adc
arpl
testb
xchg
pop
mov
cmp
mov
jne
adc
mov
adc
push
fisubl
insb
xor
test
adc
ljmp
xchg
cli
dec
test
sbb
cmp
or
pop
push
xor
adc
daa
pop
mull
jnp
mull
push
mov
push
jne
rclb
adc
lea
push
test
test
and
and
clc
mov
dec
add
inc
dec
ds
add
or
enter
into
fdivrl
test
jbe
xor
sub
mov
pop
insb
xor
mov
inc
cmp
ja
pusha
dec
mov
sbb
jmp
test
pop
mov
xor
pop
cld
imul
movsl
ja,pt
in
mov
js
in
push
pop
jecxz
sbb
push
in
in
adc
loope
add
scas
ljmp
leave
or
push
add
or
xor
pop
xchg
jle
mov
cli
xchg
jmp
cmp
xchg
out
pop
cs
sbbl
pop
xor
loopne
gs
call
adc
and
inc
leave
stos
dec
out
stos
stos
dec
jle
mov
out
cld
sahf
jmp
pop
xchg
mov
xor
divb
mov
scas
jmp
outsb
mov
stos
add
and
sub
je
pop
dec
pop
xchg
hlt
hlt
pop
fwait
mull
ret
hlt
sub
add
lock
fstpl
rolb
mov
sub
jne
out
fstpl
mov
jge
pushf
or
fldt
fists
out
dec
mov
dec
pop
sbb
inc
mov
xchg
ja
and
test
outsl
pop
inc
sub
mov
mov
sbb
divl
imulb
iret
push
ja
adc
push
arpl
loop
and
push
ja
aam
sbb
add
ror
xorb
daa
add
adc
not
mov
inc
pop
pop
xor
jnp
mov
clc
xor
and
dec
popf
scas
loopne
or
inc
in
jno
mov
pop
cmc
js
in
mov
pop
int
fst
cmpl
scas
faddp
and
shrl
fldt
mov
sti
sub
ja
push
rcrb
dec
loop
mov
ja
or
out
jp
repz
dec
xchg
or
in
xor
fs
fs
cmp
cmp
loopne
sbb
inc
aaa
jmp
out
jmp
pusha
in
loopne
imul
and
andb
loope
ret
out
jbe
mov
sub
movsb
and
or
rcr
sti
push
mov
in
fcoms
mov
inc
test
arpl
xchg
cmpsb
fcmovu
xchg
fs
icebp
test
icebp
or
imul
pop
bound
or
bound
inc
xchg
mov
dec
fcoml
sbb
pusha
mov
add
mov
xchg
fs
jmp
cmp
pop
mov
push
mov
add
jge
or
cld
cmp
adc
pop
or
data16
dec
out
and
pop
and
dec
pusha
mov
push
cmpsl
dec
add
adc
aam
cwtl
cmp
cmc
push
pop
mov
sub
imulb
dec
mov
mulb
add
mov
fadd
xchg
std
rorl
and
sarl
cmp
fisubrs
in
add
cld
in
push
sti
cmp
int3
fsubrp
imulb
adc
icebp
cmp
lret
imul
sti
mov
push
xchg
ljmp
shrl
push
es
dec
cmp
cs
dec
loopne
jge
mov
shl
jb
stos
fs
shlb
lock
out
jle
sbb
repnz
std
nop
jg
add
out
jmp
shr
aaa
add
test
push
add
loope
pop
inc
adc
add
scas
lret
inc
data16
dec
push
pop
xchg
ret
lds
fwait
lcall
jecxz
in
dec
insb
and
jbe
shll
outsb
sub
out
mov
andb
out
loope
stos
mov
fadd
adc
mov
aas
pop
pop
hlt
addb
nop
in
dec
loope
xchg
loopne
pop
and
adc
arpl
shr
pop
orl
faddp
add
dec
jno
inc
test
les
mov
dec
push
jo
fisttpll
mov
mov
loope
mov
negl
sahf
loopne
and
inc
cmpsl
test
xchg
or
mov
bound
cltd
pop
inc
and
loop
inc
rcrl
cmpsl
jmp
push
pop
inc
dec
stc
out
cld
idivb
xchg
aas
jno,pt
push
sub
push
outsb
lods
mov
mov
jl
xchg
sub
stos
bound
dec
push
xchg
cmc
jmp
ds
cmc
repnz
jb
lret
cmpsb
ret
and
dec
cli
jg
xchg
into
push
fdivrs
push
adcb
ret
rcrl
mov
daa
cmp
pop
fildll
push
aad
in
movsb
jb
out
cmp
ljmp
in
mov
mov
movsb
jbe
mov
cmpsb
xchg
and
pop
lret
and
xchg
pop
and
mov
sbb
mov
and
cli
and
iret
iret
adc
jmp
cld
adc
push
push
mov
mov
icebp
ret
loopne
imul
xchg
mov
add
int3
jp
sti
test
jmp
push
cli
jle
lcall
and
test
jb
mov
add
in
and
push
xchg
sub
fildll
sub
xor
pop
sar
fs
sub
es
imull
xchg
inc
iret
cld
mov
in
out
pop
push
ljmp
push
aas
or
mov
mov
xchg
test
stos
jl
jg
and
xor
dec
mov
int
lods
pusha
pop
clc
or
jb
mov
push
inc
mov
aas
fidivrs
and
jl
mov
mov
popa
push
andb
cmp
sub
loope
imul
pop
popa
xchg
adc
outsb
enter
adc
mov
xchg
fpatan
push
or
pop
ret
leave
inc
inc
inc
jg
add
mov
sbb
mov
movsb
push
xor
shr
loopne
cld
fnstenv
mov
stc
arpl
call
push
shlb
movl
fimuls
cmp
pop
sarb
pop
xlat
and
inc
test
aas
sbb
xchg
andb
out
sti
pop
andb
scas
dec
push
imul
mov
adcl
inc
xor
inc
stos
xor
maxps
mov
mov
cs
loopne
int3
or
mov
mov
in
data16
das
adc
divl
mov
inc
sbb
and
cmp
rcll
add
jle
pop
sbb
xor
test
xchg
scas
inc
xchg
sub
pushf
lock
hlt
or
adc
xor
lods
data16
cld
sbbb
lods
xchg
jae
or
enter
add
fdivrs
adc
loopne
fimuls
arpl
cli
daa
in
xor
xor
cli
subl
movsb
movsb
sub
scas
aam
jns
mov
arpl
rcll
loope
ficompl
xchg
sahf
lret
lahf
test
imul
int
xor
les
jecxz
push
sub
lods
inc
fisubs
cltd
push
xorb
lods
out
push
es
popa
and
add
push
fidivrs
mov
rclb
stos
cmp
popa
loope
fdivrl
pop
push
adc
xor
std
mov
cmp
xchg
mov
push
jle
sbb
adc
mull
xchg
or
sub
push
cmp
cs
pushf
rolb
aas
test
xor
lds
repnz
stc
jno
xchg
pop
out
xchg
sti
hlt
arpl
in
cmc
pop
clc
xchg
ret
loopne
out
mov
sub
rcll
shll
ds
cli
cld
sub
out
sahf
mov
lcall
fwait
bound
cld
out
mov
out
add
mov
mov
repnz
aam
hlt
and
std
pop
hlt
inc
push
mov
pop
and
adc
loopne
ret
xchg
out
cmp
pop
aam
push
push
dec
adc
out
cmp
ret
push
test
and
gs
shlb
in
movsb
in
fsubp
ljmp
fists
dec
xchg
ja
pop
hlt
add
adc
stos
in
insb
leave
mov
push
shl
mov
int3
xchg
and
test
aam
jbe
pop
push
loopne
pop
pop
mulb
adcb
push
adcb
addl
xor
sarl
cmc
cltd
dec
ffree
jge
add
test
addl
inc
mov
test
out
cmp
lds
or
repnz
push
stos
repz
in
or
fldenv
lret
xchg
mov
push
gs
adcl
xchg
notl
cmp
jge
std
fld
jmp
lret
mov
shlb
shrl
stos
jo
fdivrp
xor
push
dec
dec
inc
test
push
in
enter
outsl
std
fildl
roll
xchg
lods
daa
xor
jge
popf
cmp
incl
sub
or
pop
sbb
add
repnz
push
mov
fs
push
clc
scas
mov
lea
push
nop
sbb
dec
dec
aad
not
ret
push
gs
and
xlat
out
adc
lock
les
stos
pop
int
das
imul
test
stos
imul
idiv
jae
stc
fiaddl
mov
aad
mov
ljmp
or
cmc
std
loope
stos
int3
lods
push
sahf
ret
dec
mov
sarl
cwtl
or
mov
test
movsl
and
rol
pop
aam
adc
sti
js
fisubrs
lret
dec
add
mov
or
out
mov
xchg
cli
lret
leave
test
mov
int
sahf
out
dec
test
test
mov
mov
in
int3
jae
adc
addl
xor
insb
jecxz
movsb
pop
mov
push
movsl
icebp
ret
bound
add
loopne
fsubl
in
xchg
out
mov
fistl
std
inc
inc
int
add
icebp
add
and
loopne
xchg
in
insb
fbld
jecxz
hlt
or
and
inc
fisttpll
std
mov
int
jae
icebp
cmp
jb
fiaddl
jb
stos
rcl
ret
aam
push
and
jecxz
cmpb
push
mov
imul
setb
pop
mov
push
inc
mov
adc
and
jb
dec
cwtl
repz
popf
movsb
ret
or
mov
sbb
es
pop
and
out
hlt
sub
mov
out
sbb
pop
fstl
out
iret
add
icebp
out
pop
aas
xorb
dec
test
in
wrmsr
xor
adc
pop
punpckhdq
lret
fstpt
popf
cmpsb
add
stc
loopne
inc
jo
and
push
call
inc
mov
pop
and
cmp
test
pop
push
adc
aaa
push
sub
mov
mov
in
jae
fwait
sbb
adc
cmpsl
xor
cli
jge
mov
adc
xchg
ret
lahf
les
cltd
xchg
dec
adc
stos
xchg
add
cmp
add
pushf
rcr
dec
mov
push
jecxz
push
test
ret
sub
adc
xchg
push
push
movsb
das
sub
jl
jecxz
jl
movsb
setb
ret
sub
sub
xchg
aam
push
les
add
popf
inc
ficompl
sub
mov
fsts
cmp
pop
lcall
test
cmpsl
cmp
sub
adc
movsb
cmp
dec
xchg
jno
pusha
push
sub
lahf
les
push
test
push
testb
cs
lahf
push
fdivp
shrl
shrb
jno
hlt
push
test
rorl
sub
loop
mov
shrl
adc
fst
jmp
push
fnstsw
lea
loope
inc
movb
sub
push
clc
or
ret
ret
xchg
mov
pop
outsb
and
out
jbe
xchg
and
sub
xchg
jge
pop
push
popa
mov
arpl
mov
movsb
mov
notl
xchg
and
xor
int
mov
test
ljmp
test
or
lret
lock
push
pop
adc
and
inc
popa
jp
and
pop
pop
xor
jnp
jb
or
insb
sub
mull
fucom
test
xchg
xchg
mov
sbb
push
cld
std
sub
inc
mov
lock
xchg
push
sub
fimull
sbb
push
enter
roll
shll
pop
ret
and
insb
cli
cld
scas
ret
cs
mov
jmp
adc
les
lahf
sahf
jo
dec
jne
in
dec
arpl
xor
leave
push
stc
push
mov
les
out
test
in
sub
fdivrp
inc
mov
ret
sahf
pop
les
xchg
test
neg
pop
add
fdivrp
ljmp
push
lock
sub
rcll
pop
imul
out
in
shr
pop
xchg
rorb
movsl
loopne
pop
repz
push
cmpsb
add
enter
jne
cmp
jmp
or
fstpl
xor
push
testl
lcall
sbb
adc
push
enter
shrl
mov
mov
shl
stc
push
test
mov
in
inc
sbb
jnp
mov
ljmp
mov
adc
fdivrp
fucomp
xor
jecxz
mov
xchg
test
pop
sub
dec
leave
bsf
jns
cmp
rol
popa
add
aad
rcrb
jmp
aad
cwtl
bound
sub
lret
fsubr
das
addr16
mov
into
iret
lods
and
ljmp
pop
shrl
out
push
sbb
fildll
xchg
lret
mov
cld
pop
call
pop
xchg
subl
push
shlb
dec
sbb
cmc
xlat
inc
rol
shl
negb
in
and
test
jecxz
dec
sbb
sti
cld
push
inc
fidivrs
iret
mov
sarb
jb
lahf
out
bound
pop
adc
ljmp
or
mov
cld
out
xchg
pop
jle
xlat
fsub
xchg
test
nop
out
shlb
push
cld
adc
int3
sub
ret
add
fs
jmp
ja
cld
mov
push
push
cmp
push
lcall
ret
dec
imul
or
inc
mov
ljmp
arpl
orl
rolb
dec
in
jne
push
add
pop
dec
jo
adc
jle
mov
sub
mov
ret
jno
jmp
fildl
pop
lret
ret
mull
dec
insl
xchg
mov
add
std
push
and
mov
cmp
out
add
jmp
aad
rol
cld
imul
sub
push
sbb
shl
fs
push
cmc
sub
idivb
in
dec
xchg
stc
paddb
jb
ret
xchg
in
data16
inc
dec
sub
test
jmp
and
jns
aaa
adc
and
pop
ljmp
mov
in
aaa
loopne
shll
aam
add
movl
test
pusha
jno
int3
xchg
stc
insl
ljmp
int
movsb
jb
push
rclb
adc
dec
inc
test
mov
in
push
into
mov
into
ja
fiadds
ret
xor
inc
jecxz
psubb
xor
fwait
ja
pop
adc
pusha
shll
xchg
sahf
test
sub
ret
or
pop
xchg
jecxz
jmp
filds
pushf
fstpl
sahf
enter
out
and
int
cmc
sbbb
lret
stos
stc
sbb
in
pop
in
jmp
jmp
loopne
mov
es
sahf
imull
leave
sar
incl
cmpsb
ret
pop
out
rorl
rcl
les
sahf
fcmovnu
clc
mov
rcl
mov
test
dec
ror
ljmp
ds
in
loope
jecxz
shlb
out
fisubrl
loopne
in
and
jecxz
jmp
imul
fldlg2
push
call
loopne
hlt
ljmp
jmp
stc
fstl
aam
stc
jecxz
jmp
repz
loope
lret
sahf
lods
jmp
imull
mov
cmc
mov
test
jmp
clc
push
stc
test
pop
lods
iret
jmp
push
aam
in
mov
shl
mov
lock
icebp
std
repnz
adc
push
push
fucomp
push
push
cld
fisubrl
push
fneni(8087
push
adc
push
push
ret
aam
movsb
fldcw
and
fisubrs
add
push
xchg
push
push
sub
fists
enter
ret
add
lcall
repz
leave
rcl
jecxz
jbe
repnz
push
push
and
cld
adc
jno
xchg
mull
add
pop
cmpsb
jecxz
push
inc
hlt
mov
xchg
jmp
adc
divl
leave
cmp
and
cmp
inc
faddp
cmp
mov
movsb
testl
push
imul
popa
fnstsw
insb
inc
ret
xchg
movsb
movsl
dec
stc
pop
js
iretw
add
enter
test
cmp
push
into
xor
jns
stc
mov
stos
dec
fidivs
add
sub
jecxz
pop
add
mov
mov
fildll
push
dec
dec
stos
ror
outsb
inc
xor
test
rol
sbb
aad
mov
clc
shl
popf
inc
cli
int3
sub
mov
std
aam
insb
push
enter
addr16
daa
data16
add
and
test
outsb
jns
sub
lds
lcall
push
xchg
inc
pop
jns
stc
push
mov
loope
jle
clc
xchg
popa
lret
jo
xor
ret
icebp
dec
jle
into
add
xor
fisubrs
insb
mov
popf
mov
pop
pop
dec
sub
pop
clc
sti
sbb
aas
loop
add
push
jmp
jp
xchg
jne
insl
cmp
xor
loop
aam
and
and
out
adc
pminsw
dec
xchg
aad
and
xchg
cmc
lret
jns
insb
cmp
mov
pusha
aaa
mov
clc
jecxz
fs
mov
cwtl
cmpsb
xor
fcomps
data16
mov
and
ret
daa
push
cmc
jns
movsb
cmp
jg
sbb
pop
and
aad
mov
sti
jmp
dec
andb
cld
aad
or
nop
adc
sbb
jne
loope
push
idivl
adc
jmp
push
outsl
and
ljmp
lods
mov
adc
in
mov
aam
add
lods
or
and
push
fsubr
push
mov
es
mov
sub
mov
mov
jmp
and
adc
movsb
sub
inc
mov
pop
cmp
sbb
in
or
xor
ret
or
push
and
out
aam
and
add
pusha
bound
jmp
dec
cld
pop
pop
push
add
inc
cmpsl
push
in
sbb
sahf
scas
gs
ljmp
adc
push
xor
stc
adc
mov
ja
in
xor
adc
xchg
push
jo
mov
xlat
jl
xchg
sahf
xchg
cmp
cmp
in
in
and
jmp
pushf
jge
and
jp
inc
popa
push
loope
and
mov
repnz
push
and
jmp
or
xchg
movsb
inc
and
and
pop
clc
popa
cmc
lret
aad
lahf
out
test
test
fldenv
mov
adc
add
push
add
inc
shrl
mov
out
jo
add
add
ret
xchg
mov
lea
pushf
testb
stos
or
ds
mov
call
cmp
mov
sub
cmpl
out
adc
insb
std
rorl
cmpl
mov
and
push
inc
gs
push
cltd
out
ret
jl
or
orl
divl
mov
sub
push
shll
test
pop
push
and
xchg
in
lret
add
daa
cmc
popa
imul
fs
xchg
out
data16
aas
fldcw
leavew
mov
inc
sbb
sub
adc
leave
je
outsl
ret
push
and
in
fldl
aaa
xchg
mov
xchg
ror
fiadds
and
push
pop
or
loope
adc
pop
cli
push
cmpsb
push
outsl
pop
enter
fldt
pop
jg
xlat
leave
inc
sbb
push
and
inc
mov
jbe
jbe
nop
popa
pop
inc
dec
pop
xchg
push
cs
pusha
cmp
mov
data16
movsb
sbb
in
adcl
dec
test
frstor
pop
xor
sahf
out
addr16
movsb
adcb
repz
jno
out
jecxz
jb
xor
imul
fidivrs
rcr
xchg
aam
out
cli
xchg
movsb
mov
cld
xor
fwait
sub
xor
adc
lock
xchg
int3
and
xchg
aad
jo
lret
clc
das
xchg
jns
sbb
dec
leave
andl
loop
repnz
loope
stc
arpl
pop
mov
pop
loope
repnz
add
and
in
mov
clc
jecxz
out
add
pop
push
push
add
aaa
add
arpl
sahf
loop
test
mov
xor
cmpsb
pop
aam
lods
pop
ds
test
mov
push
insl
test
les
imul
popa
imul
and
imull
cwtl
out
fidivrs
aaa
inc
cwtl
mov
pop
pop
shll
out
stos
in
or
cli
mov
mov
pop
or
fdiv
das
rcrb
sub
jb
mov
mov
bound
loope
mov
icebp
jmp
xchg
add
cmp
lcall
fsubrl
stos
gs
sarl
adc
and
lods
ret
scas
xor
add
xor
xchg
outsb
les
hlt
popa
xchg
div
scas
add
xchg
mov
cmp
idivb
lret
ret
mov
pop
push
pop
xor
sbb
inc
bound
mov
pusha
push
cld
fwait
test
aad
mov
jmp
in
push
dec
cld
cmp
sub
and
add
cmp
jb
rolb
into
bound
loope
daa
cmp
xor
aaa
inc
pop
mov
jg
aad
and
scas
into
mov
imul
push
dec
icebp
adc
jmp
cli
fs
and
mov
xchg
popa
inc
push
jl
filds
je
push
cmp
loope
adc
sbb
pop
loope
js
scas
das
push
jl
fbld
test
or
add
clc
xchg
popa
and
in
dec
les
mov
sub
arpl
popf
ret
dec
jl
leave
shrl
adc
stos
jecxz
pushf
add
aam
add
xchg
adc
push
xchg
std
fistpl
je
dec
lret
jecxz
and
loopne
jne
add
add
rol
push
fimuls
push
out
in
imul
cld
fldl
fdivp
in
in
stos
push
pop
jmp
mov
pop
popf
fisubl
inc
repnz
add
clc
xchg
add
ror
test
fcoms
lds
cmpsl
mov
xchg
rcr
dec
sbb
fwait
cld
jl
xchg
sti
push
sub
xchg
inc
imul
push
add
and
fsubp
fcomps
cld
mov
in
push
les
test
xchg
rcrl
cmp
hlt
leave
stc
mov
test
inc
adc
lret
stc
mov
test
inc
adc
hlt
std
stc
mov
ffreep
inc
adc
hlt
stc
mov
ffreep
inc
adc
hlt
sar
push
inc
test
ffreep
inc
adc
ret
stc
adcl
add
inc
adc
hlt
aad
xchg
push
push
test
inc
adc
hlt
xlat
stc
xchg
push
push
test
inc
adc
hlt
fyl2xp1
cltd
push
pop
test
inc
adc
fwait
push
pop
test
inc
adc
hlt
int
lea
dec
test
inc
adc
hlt
iret
stc
push
dec
test
inc
adc
outsl
cmp
adc
sub
push
push
test
inc
adc
hlt
out
cmpsb
push
data16
inc
adc
hlt
call
test
inc
adc
mov
pop
pop
shrl
push
pop
stos
cmc
icebp
in
jecxz
sarl
fstl
loope
int
xchg
in
iret
hlt
imul
loop
adc
bound
fnstenv
ret
pop
notl
add
movsl
movsb
rorb
xor
inc
cs
mov
xchg
mov
fbld
sar
mov
sbb
cmp
xchg
cmp
ret
testb
jb
test
cmp
cwtl
jno
xlat
xor
shlb
add
shlb
mov
lret
adc
test
loop
inc
popa
shl
mov
cmc
aas
rcrl
adc
test
les
lea
sub
dec
loop
or
shl
filds
xorl
and
push
dec
push
cli
iret
fs
data16
jne
xor
pop
mov
nop
out
or
test
push
scas
add
mov
call
cld
repz
xor
cs
popa
test
inc
in
dec
in
das
and
loopne
bound
xlat
pop
and
pop
cmp
out
adc
mov
ret
daa
test
not
add
and
lods
adcl
ret
mov
jp
out
fldt
jne
lret
adc
idivb
jno
mov
sub
arpl
or
push
sub
mov
rcrb
xlat
loopne
pusha
pavgb
adc
out
mov
jo
add
and
aam
and
push
inc
add
mov
int
push
jecxz
mov
data16
and
dec
fisubs
stc
lret
into
sahf
cld
scas
jns
xchg
mov
hlt
pop
jmp
daa
push
loope
ret
aad
dec
mov
mov
pop
and
and
mov
push
pop
mov
jns
movsl
cmp
pusha
and
and
out
arpl
and
inc
enter
adc
adc
pushaw
mov
mov
ljmp
addr16
fcmovu
dec
cmp
or
pushf
ret
test
in
pop
and
sti
and
adcb
fidivl
pop
jns
test
in
test
pushf
arpl
in
shl
and
shll
inc
cmp
add
lret
fcoml
hlt
jl
fistpl
and
movsl
sbb
and
int
adc
lret
call
jge
shl
lret
in
call
dec
mov
sub
test
aad
cld
mov
mov
test
pusha
insb
scas
add
mov
data16
sub
adc
adc
out
mov
mov
scas
icebp
or
insl
fidivrs
bound
out
hlt
xor
fwait
sbb
cmp
rcl
loop
enter
std
mov
fucomip
add
loope
jle
in
or
adc
push
jge
xorb
push
in
pop
adc
std
rorl
cmp
add
je
jg
pop
sub
enter
aad
inc
cmp
mov
mov
fbld
icebp
sbbl
push
cmp
aad
in
mov
aam
pop
pop
ja
insb
icebp
gs
mov
data16
daa
pusha
jmp
inc
inc
ret
cmpsb
and
ja
mov
cld
leave
out
test
jle
fstpt
adc
cmpsb
cmp
outsl
xchg
jecxz
sahf
push
add
mov
cld
xor
xor
dec
hlt
movsb
mov
mov
xor
das
in
test
call
push
jns
ret
movsl
mov
in
cmpsb
mov
cld
nop
inc
mov
cmp
mov
notb
pop
les
repz
test
loope
fsubl
xchg
movsb
je
push
push
rorl
mov
in
loope
movsb
adc
dec
mov
dec
push
andb
lods
lock
dec
and
leave
pop
dec
xchg
das
dec
rcll
pop
subl
fcom
dec
shl
and
xor
loopne
push
int3
shrb
and
cmp
mov
ljmp
cmp
sub
pop
push
pop
lea
loope
in
aam
call
push
sahf
xchg
nop
push
mov
jmp
sub
sbb
int
jge
int
scas
into
mov
aam
lret
fs
jecxz
jnp
or
sbb
clc
mov
xchg
jecxz
aam
sbb
test
insb
jae
fildll
movsb
xchg
pop
enter
mov
lods
jl
lret
push
push
loope
push
cmpsb
cs
loope
sbb
and
mov
loop
int
fistpl
push
aad
in
in
rcrl
out
mov
pop
jl
out
push
or
mov
in
adc
mov
loope
dec
stos
dec
mov
ljmp
pushf
shl
xchg
sbb
pop
shll
lret
pop
into
fld1
int
sbb
lahf
in
pop
popf
lods
frstor
push
pop
mov
mov
pop
mov
repz
xor
mov
mov
sub
loope
mov
push
in
ffreep
movsb
push
fsubrl
add
mov
shlb
cs
xchg
push
lret
scas
push
in
popa
push
fisubs
push
int3
shrb
mov
fwait
push
lcall
sarl
mov
push
adc
fildl
loopne,pt
cmc
adc
mov
clc
xor
push
aad
int3
fwait
pop
les
cmc
sub
out
in
xor
adc
jae
ja
mov
sbb
stos
lret
outsl
shlb
aam
rcl
push
loope
scas
rorb
jl
push
push
leave
ror
pop
sub
enter
fs
jle
push
inc
xchg
inc
cmp
iret
pop
jecxz
outsb
rorb
arpl
push
pop
out
call
xchg
mov
iret
sub
leave
aad
in
jecxz
push
jle
or
lahf
jl
out
add
adcb
daa
aad
jmp
ret
pop
inc
nop
orl
fidivl
xchg
aad
enter
leave
cvttps2pi
in
iret
outsb
loope
loope
cmp
cmp
push
sbb
or
in
enter
cmp
frstor
rcl
sub
fidivl
cmp
mov
jnp
jmp
stos
fisubs
int
inc
hlt
clc
lods
add
ljmp
mov
push
int3
or
fxch
aam
or
xchg
pop
ret
loope
not
in
dec
insl
faddp
in
pop
je
loope
cli
mov
divb
clc
test
pop
shrb
ja
lret
xor
pop
into
fs
push
xor
adc
cld
fldenv
push
push
fiadds
and
data16
idiv
lret
inc
shrb
lock
shll
lods
add
xor
xchg
mov
xor
lahf
xlat
movsl
and
sarb
imul
fdivp
mov
jmp
shrl
leave
fcompp
pop
aam
std
loopne
or
adc
shlb
rep
mov
out
mov
test
imull
pop
rcll
incb
lods
and
fstl
ficomps
mov
mov
mov
int
adc
stc
sahf
rcl
and
sub
xlat
ljmp
movsb
push
and
fstps
sahf
repnz
sub
push
sti
cmpsl
dec
out
jg
mov
jo
lods
clc
in
jp
mov
les
pop
mov
fcmovbe
sub
aaa
and
mov
in
pop
lods
loopne
and
loope
in
and
push
shlb
jmp
cmc
bound
aam
in
popa
iret
outsl
movsb
es
sti
jecxz
movsb
les
fdivs
adcb
or
adc
jno,pt
xchg
sub
leave
out
adc
lahf
pop
mov
out
dec
lret
fdivp
mov
push
ljmp
mov
icebp
push
leave
ljmp
in
shr
pop
fistpl
mov
xor
shll
arpl
aas
sub
pop
jmp
leave
movsb
cmp
push
and
mov
in
fbstp
adc
pop
jmp
mov
push
std
incb
sti
sub
int
call
mov
dec
push
rcrb
movsb
jmp
int
jp
pop
sub
shl
adc
cmc
es
icebp
push
in
fstl
pushf
lret
pop
jne
or
push
fsts
aam
aam
fldl
ret
mov
divb
popf
out
icebp
ja
lock
mov
popf
leave
fdiv
mov
aam
pop
std
aam
in
clc
shll
rcrl
je
push
and
and
sti
sti
add
and
aaa
lods
arpl
jecxz
fiadds
gs
fcomip
ljmp
lods
adc
icebp
mov
les
repz
clc
fisubs
cli
push
rcrl
xchg
test
pop
sub
aam
mov
mov
repnz
and
std
test
rol
lds
xchg
mov
outsl
imul
outsl
movb
mov
lds
cltd
arpl
sbb
pop
out
adc
push
out
das
in
rcll
xchg
out
negl
popa
xchg
inc
hlt
lret
hlt
push
jo
lods
fsubrs
outsl
fldz
rcrb
pop
stos
fistps
out
loope
iret
fisubs
cld
mov
dec
pop
dec
mov
add
rorl
cmp
lods
aam
aad
mov
sahf
clc
rep
in
fimull
pushf
mov
mov
mov
mov
fsubrs
test
mov
jmp
ret
xchg
mov
cmp
adc
sbb
std
xor
jmp
gs
ds
ficoml
lret
sti
js
inc
ljmp
fdivp
adc
and
es
fbld
mov
pop
ret
pop
and
repz
mov
divl
mov
cmc
ja
lds
jbe
mov
lds
push
shr
stc
test
pop
cmc
imul
jb
push
fucomip
stos
fs
xchg
adc
and
pop
fldenv
jl
jge
aaa
shr
ja
mov
rcrl
stos
out
sahf
sbb
std
pop
les
sbb
jmp
fstp
or
fldenv
ljmp
jmp
push
inc
and
inc
sbb
ret
in
cmp
ret
loopne
ljmp
cli
out
clc
int3
adc
ret
pop
in
call
movsb
clc
test
subb
sahf
jecxz
aam
stos
std
and
xchg
dec
bound
cmp
fldl2t
lds
jecxz
cwtl
lea
out
or
aaa
push
xor
jl
xchg
sbb
in
dec
xchg
mov
jl
shrl
xor
inc
jecxz
jp
psubw
fistpll
push
hlt
cmpsl
jbe
add
xchg
shl
pop
or
sub
in
roll
lods
mov
sbb
xchg
mov
insb
rcll
xchg
cmp
addb
and
mov
xchg
daa
mov
js
ljmp
mov
jge
or
push
jo
mov
mov
fcoml
into
lods
push
es
xor
pop
push
and
pop
test
jecxz
sub
xor
aad
adc
jo
mov
into
sbb
push
pop
inc
loopne
mov
dec
or
repz
scas
mov
mov
test
mov
jge
add
pop
pop
shlb
lods
lea
mov
cld
pusha
xor
sub
test
cld
mov
test
out
jl
cmp
xchg
js
adc
xor
xchg
and
pop
adc
int3
xchg
adc
mov
mov
into
jne
loope
jmp
jge
test
mov
clc
out
imul
fstps
sub
into
add
aam
in
mov
in
lea
adc
rep
cmc
leave
jecxz
negl
insb
fiadds
push
cmp
xchg
cmp
int3
pop
mul
pop
cld
adc
out
arpl
adc
lret
lea
and
into
sbb
clc
outsb
mov
adc
jl
jl
out
sahf
ja
and
adc
xchg
mov
aad
mov
sahf
pusha
jb
loop
aad
mov
enter
stos
mov
pop
stc
lods
into
jge
sub
les
ja
dec
out
je
mov
fdivrs
ffreep
xchg
rcrl
or
ficoms
mov
cld
cli
ja
cmp
ss
imul
sarl
cmp
pmulhuw
add
lock
stos
or
stc
jmp
scas
or
sub
sub
loopne
and
or
mull
es
inc
lods
pop
rcll
fisttps
and
std
mov
xchg
cmp
aas
out
jecxz
pop
xchg
jmp
jmp
fsts
stos
movsb
mov
ljmp
mov
mov
sbb
lock
cmp
jecxz
and
xchg
int3
lret
adcb
sbb
sarl
xlat
out
dec
in
jno
or
pop
push
bsf
mov
in
mov
outsb
and
mov
inc
xchg
and
adc
jne
hlt
lret
lods
and
xchg
into
loope
lret
ja
sbb
cwtl
fsubl
lea
out
and
mov
push
lret
rorl
sub
shr
sbbl
js
popf
incb
xchg
adc
mov
pop
inc
sarb
xchg
in
mov
mov
ljmp
jecxz
mov
loope
fs
mov
mov
jge
push
clc
movl
mov
jno
xchg
cmp
xchg
pushf
fsts
cmpsl
pop
jns
mov
sub
inc
mov
popa
push
lahf
jp
insb
fs
sti
xchg
jecxz
xchg
or
cld
out
inc
sub
test
jl
iret
pop
cmpsl
inc
in
sub
add
daa
sbb
shll
jmp
sar
pop
push
inc
dec
bswap
stos
sbb
in
inc
cmpsl
nop
adc
or
test
sarb
xchg
test
inc
dec
jecxz
sbb
sahf
push
les
jb
xchg
sahf
in
dec
stos
jecxz
push
sub
inc
fidivs
stc
popf
lods
scas
loope
outsb
inc
jecxz
pop
jnp
cmp
popf
cld
inc
pushf
outsl
xor
push
mov
ds
pop
lcall
inc
mov
xchg
sahf
add
int3
flds
data16
sub
andl
in
sub
push
dec
out
ljmp
addr16
sti
aas
xorl
aad
mov
xchg
in
clc
pusha
push
sahf
cld
xor
mov
insb
push
or
mov
imul
loopne
addb
fidivs
rclb
add
sahf
add
nop
stc
add
mov
clc
leave
jecxz
stos
insl
mov
cld
or
push
out
sub
pop
in
popf
fisubs
loop
out
and
xchg
jne
xchg
cmp
movsb
dec
ja
stos
das
sbb
fwait
cld
jb
push
aas
mov
test
std
xor
jae
in
lcall
int3
aam
mov
loopne
add
stos
test
inc
in
mov
xor
imulb
sbb
das
push
pop
insb
jmp
rsqrtps
push
adc
mov
fsubrp
aam
pop
mov
xchg
stos
xchg
jle
lcall
fisubs
xchg
outsl
push
jbe
xor
sub
subl
sahf
jle
in
push
pop
loopne
les
out
test
or
fstpt
pop
das
movsl
or
hlt
cmc
rcll
call
mov
shrl
lock
jg
sub
pop
fidivs
hlt
lret
xor
test
pop
mov
dec
rolb
neg
call
push
fcmovne
mov
lahf
and
lret
bnd
subl
dec
pop
adc
push
lods
test
jecxz
xorb
pop
pop
int3
mov
iret
scas
xlat
stos
aad
out
mov
sub
aaa
jno
lret
popf
jmp
shll
pop
sub
in
and
sti
jae
adc
sub
pop
or
push
out
sub
xchg
in
mov
mov
bound
popa
push
sar
mov
sbb
add
shrl
jnp
sbb
test
add
out
iret
ffreep
fsubrs
xchg
mov
push
out
into
mov
cmp
dec
xchg
in
cmp
cmp
loopne
stos
faddl
popf
jae
icebp
jge
out
sub
adc
add
dec
mov
and
fucomip
mov
cld
jl
insb
lret
and
fcompl
mov
call
popa
mov
push
arpl
mov
jle
in
mov
pop
inc
out
and
scas
cld
fisubl
add
xchg
xchg
jp
add
xor
mov
xlat
mov
pushf
mov
mov
stos
pop
mov
movsb
and
inc
inc
int
in
dec
and
pushf
aaa
movsb
sbb
and
cld
and
daa
inc
addr16
aad
push
outsl
or
movsb
pop
sub
enter
mov
push
lods
xchg
sub
inc
test
scas
mov
adc
pop
push
jle
stc
inc
or
test
out
fs
dec
loope
dec
add
lock
adc
jle
sar
cltd
push
pop
adcb
inc
pushf
inc
mov
jmp
fisubs
andl
int
cmp
push
jmp
add
cmpsb
push
aam
cmp
notb
pop
dec
mov
sbb
fiaddl
jle
nop
mov
cmp
imull
mov
arpl
imul
shl
xchg
adc
loopne
dec
stc
or
jecxz
adc
xchg
sub
mov
aas
or
pop
sub
push
out
ljmp
popf
or
lret
movsb
sub
jp
xchg
xchg
jbe
in
xchg
hlt
addr16
adc
test
pop
inc
es
mov
ret
jmp
push
or
xchg
push
xor
mov
lds
cli
add
ret
adcb
push
mov
ljmp
fadd
push
fadds
jp
pop
push
pop
xor
sbb
mov
and
fisubrs
cmp
xchg
popf
ss
test
jmp
jbe
test
lret
test
icebp
cld
dec
das
push
pop
or
incl
pop
push
cmc
cwtl
sahf
sahf
add
pusha
cmc
les
aad
stos
out
fisubs
mov
andb
pop
shr
sbb
mov
fisubrs
jb
lahf
adc
sub
jne
jmp
sbb
mov
popa
loope
roll
fsts
ljmp
push
pop
and
test
mov
pop
cmp
into
mov
aad
dec
aaa
xchg
mov
lret
cmp
or
pushf
popa
adc
outsl
cmp
cmp
rolb
ja
fcmovu
mov
push
cmc
sub
je
lods
fs
pushw
fildl
ja
xor
into
das
lods
and
lret
xor
in
ja
repz
and
mov
mov
hlt
shl
cmp
xor
pop
fiaddl
cli
mov
add
lock
inc
sbb
or
es
shl
out
mov
dec
sub
aad
add
in
in
jmp
mov
popa
sbb
jp
pop
sub
mov
daa
jmp
mov
loopne
pop
cmp
loop
out
xchg
lods
push
aaa
jecxz
jmp
or
int
mov
inc
mov
filds
pop
call
lods
add
dec
ret
and
fsubrs
notl
call
test
nop
andb
and
jnp
xor
jne
fcomip
cmp
orl
stos
test
gs
pushf
andl
mov
rol
les
jg
sub
rol
test
mov
cld
into
pop
pushf
fistl
jle
repz
adc
fildll
notl
mov
and
gs
jle
das
mov
pop
int
shl
call
and
loopne
in
add
xchg
ds
push
jnp
push
int3
xor
ss
fisttpll
xor
jne
cmpsl
or
xchg
pop
inc
ret
enter
dec
test
cld
scas
test
test
jmp
pop
stos
call
pop
sub
loope
jo
add
das
mov
inc
adc
scas
sbb
xchg
int
pop
daa
mov
loope
jecxz
dec
ss
fistl
adc
jbe
lahf
push
out
mov
pop
pop
dec
rorl
test
and
ja
rcrb
xchg
push
dec
pop
push
and
and
and
mov
jl
fcomip
mov
mov
bound
cld
mov
inc
test
shll
inc
in
jno
lahf
shl
ret
mov
xchg
stos
push
out
les
test
int
jge
jnp
out
repnz
sub
aad
loopne
xchg
popf
cs
ret
dec
pop
push
movsb
hlt
xor
push
test
sti
inc
xlat
and
test
aam
sub
daa
xchg
les
stc
push
je
out
push
push
loope
stos
adc
in
ds
mov
mov
push
jecxz
xchg
fists
mov
push
and
mov
push
mov
pop
stos
dec
and
aam
dec
pop
pop
loopne
add
push
dec
dec
movsb
loop
push
rol
cld
sbb
pop
mov
in
mov
movsb
dec
js
pop
jns
xchg
fstpt
int3
arpl
lock
push
pop
adc
into
add
xchg
hlt
push
data16
movsb
adc
push
mov
test
into
insl
cmpsb
nop
dec
lret
lods
std
icebp
xor
fadds
shll
cs
insl
fld
pop
lret
xorl
sub
into
push
xchg
fmull
insb
push
cmp
cmp
mov
dec
jmp
shl
ficompl
fs
cld
shlb
scas
xlat
rcl
shl
or
rol
jno
mov
stos
dec
daa
cmc
out
xor
je
lock
in
mov
test
inc
ljmp
adc
cwtl
ja
jo
mov
sbb
cmp
cmpsb
addr16
aam
xchg
pop
pop
add
pop
sub
sub
pop
dec
fldl2e
mov
adc
call
push
sahf
push
pop
dec
fs
addr16
xchg
test
cltd
fnstenv
lret
xor
and
pop
movsl
mov
addr16
fwait
inc
cmp
push
imulb
test
fnsave
das
mov
shr
mov
pop
jae
adc
push
inc
or
dec
adc
add
mov
pop
enter
add
pop
push
xchg
out
lret
out
inc
idiv
mov
aam
lret
cmc
gs
aad
repnz
and
scas
mul
rcrb
pop
ret
in
xchg
stos
and
shlb
sub
xchg
adc
ljmp
int
adc
xchg
repz
iret
adc
ret
popa
out
push
lods
fisubs
mov
outsl
into
in
test
repnz
ds
sub
aad
insb
popf
xchg
or
xchg
jle
xchg
inc
pop
mov
int3
cli
push
cmpsb
loopne
jne
push
ljmp
into
fdiv
outsb
mov
xchg
popa
fucomp
sub
sub
mov
mov
aad
pop
push
jl
sub
mov
or
adc
cld
fst
addb
pop
adc
jecxz
xor
sub
jecxz
mov
out
out
ja
imul
xchg
adc
rorl
ljmp
test
test
push
fldl
test
ficoms
stos
xor
imull
sbb
test
pop
sub
adc
mov
or
stos
mov
jmp
insl
cmp
mov
data16
shr
jge
xchg
cmp
push
mov
out
cmp
into
stc
push
cld
xchg
inc
fcmovu
clc
movsb
mov
xchg
dec
test
imul
jns
adc
enter
or
sbb
call
mov
or
fsubrp
test
pause
stos
push
mov
aam
sbb
xchg
std
add
ja
leave
inc
push
pop
nop
clc
xchg
pop
sbb
mov
aad
push
push
loope
or
arpl
xor
push
or
insl
mov
movlps
dec
sar
cmpsl
movsl
mov
sub
ljmp
lds
cld
sub
xchg
orl
push
imull
shl
push
sarl
pop
sub
add
in
stos
in
in
sub
fmuls
jb
test
mov
das
adc
xchg
jecxz
dec
inc
repz
imul
in
clc
cmp
dec
or
mov
movsl
push
ds
aas
adc
mov
enter
dec
stc
popa
ror
sti
xchg
movsb
jmp
scas
jo
aam
nop
daa
dec
push
mov
nop
add
mov
repz
mov
aam
add
jae
cmp
mov
cmp
js
fstpl
xchg
xor
aad
leave
sti
jns
divl
mov
jmp
xor
sti
es
lea
cld
iret
out
pop
jmp
or
scas
out
push
cmpsb
and
call
adc
sti
fldl
sahf
in
cs
pop
jg
imul
cmp
idiv
jns,pn
sbb
cmp
xor
in
bound
or
inc
notl
pop
jbe
pushf
popa
in
decl
add
and
call
rorb
push
sub
ret
insb
mov
pop
or
jp
sub
jmp
das
push
clc
mov
xchg
add
push
scas
cmpsb
mov
les
and
test
xchg
push
and
inc
aad
bnd
jl
rcrb
mov
rcll
push
loope
data16
inc
sbb
sub
or
dec
jo
pop
in
lcall
add
or
test
or
icebp
fistpl
nop
mov
mov
xchg
sbb
push
xchg
mov
inc
sbbl
mov
cli
leave
movsl
repnz
bound
lock
roll
das
fld
dec
xor
aam
pushf
out
std
loopne
push
hlt
rclb
cld
jg
cwtl
pop
pop
arpl
out
xor
aam
jmp
andb
nop
hlt
cmp
mov
lods
popa
jns
aad
xchg
mov
dec
mov
ljmp
jne
inc
mov
call
xchg
and
xchg
movsb
cli
add
loop
mov
movsl
fidivs
jle
scas
push
jmp
cmp
mov
fcmovne
mov
dec
mov
pop
xor
inc
and
cwtl
std
bndstx
mov
mov
insl
repz
xor
je
lret
cld
ds
xchg
mov
popa
jge
js
mov
pop
push
or
sub
and
xor
cmp
mov
js
pusha
pop
aaa
loopne
mov
xor
adc
sub
push
movsl
imul
jmp
nop
stc
fcomip
push
js
dec
imul
mov
cmp
int3
lret
outsb
das
xchg
aam
sahf
mov
andl
adc
push
jb
and
popf
fdivrp
mov
rcl
or
sbb
ds
and
stos
mov
inc
imul
dec
movsb
aaa
xchg
mov
sbb
scas
mov
repz
stos
in
insl
movsl
jmp
lret
stc
sub
addr16
inc
adc
dec
jle
pop
pop
inc
mov
xchg
pop
jmp
push
dec
mov
das
push
ret
sub
fbld
jb
data16
repnz
aam
cmp
fidivrs
in
faddl
push
test
cmp
lods
icebp
xchg
movsb
or
add
jle
pushf
test
in
icebp
aam
or
faddp
cmpsb
adcl
std
cwtl
std
sub
pop
adc
and
insl
cld
mov
inc
pusha
push
adc
std
dec
xor
xchg
xchg
cmp
lods
jg
jnp
outsb
inc
stc
insb
cmpsb
sub
aam
leave
outsl
sbb
pop
outsb
sbb
sbb
cs
lods
stc
sub
aad
dec
mov
out
sbb
cli
in
mov
aas
dec
cmp
sub
fs
leave
icebp
push
fs
push
xor
cmp
push
ficomps
cmpl
gs
rcll
jae
test
inc
mov
xchg
int
imul
mov
fildl
cmp
and
insb
sbb
idiv
mov
lock
shr
std
popa
jmp
jmp
das
mov
fidivs
imul
int3
cmp
call
outsb
fildl
paddsb
push
les
ret
loopne
push
sub
scas
loope
sub
mov
in
fadds
and
inc
adc
ja
pop
mov
leave
and
xor
jne
mov
loopne
icebp
xchg
aam
jge
imul
pop
lock
fcomps
insb
and
jmp
in
adc
stos
mov
cmp
in
adc
in
popf
aam
cld
lods
sbb
xor
imul
fisubs
rolb
xchg
sahf
and
icebp
fs
xchg
into
and
add
mov
and
sub
push
sbb
cs
sbbl
pop
sbb
jae
mov
mov
mov
jg
out
xchg
loopne
pusha
test
sbb
inc
push
popa
adc
cmp
loop
inc
xchg
adc
ja
in
fbld
xchg
jmp
loope
lods
add
pop
stc
jns
loope
adcl
cmp
mov
xchg
mov
jl
ljmp
repz
in
out
inc
sub
cmp
inc
lret
jae
xchg
jbe
inc
sahf
push
repnz
ficomps
shr
test
je
loope
icebp
push
into
fisttpll
jbe
push
add
xorb
ret
cmp
jns
mov
arpl
adc
cmp
add
mov
push
xchg
call
or
mov
xchg
insb
loopne
adc
add
xchg
in
add
loopne
and
adc
arpl
push
loop
cli
and
cld
push
cwtl
addb
popa
and
jno
push
shr
jo
push
adc
sub
rclb
orl
cli
add
xchg
jp
or
or
test
ss
dec
mov
xchg
xor
and
sbb
aaa
in
pcmpgtd
addr16
popa
sub
xlat
ljmp
loop
notb
int
adc
insl
pop
cmpsb
adc
xchg
add
sahf
ja
adc
out
adc
aad
outsl
pop
pop
cmc
dec
addl
andl
cld
mov
fstl
push
mov
sub
cld
loopne
arpl
cmpsb
in
xlat
lret
dec
mov
xlat
pop
stc
xor
push
cmpsb
jb
bound
sti
dec
xlat
sub
xchg
pop
cmc
adc
std
pushf
lock
ret
pop
push
mov
out
rcll
ja
leave
push
pop
outsl
fs
jle
jecxz
out
clc
mov
jecxz
decb
lock
hlt
pop
bound
cmp
push
cmp
ljmp
inc
outsl
mov
pop
bound
mov
push
fisubrs
cltd
jle
prefetch
in
out
adc
stos
jg
stos
dec
dec
stc
push
dec
xlat
negl
xchg
fisttpll
mov
imul
push
lock
cmpb
divb
ret
xor
push
adc
or
xor
sub
dec
les
mov
je
sti
cmp
loopne
jecxz
not
sub
sub
test
pusha
test
push
cld
jns
mov
mov
test
jecxz
js
adc
stos
int
in
mov
pop
xchg
add
mov
xchg
std
or
pop
cmpsb
andl
lcall
mov
roll
cli
xchg
push
mov
stc
push
pop
loope
pop
push
in
pop
testl
sub
push
addb
xlat
dec
pushf
iret
data16
adc
or
cmp
fdivp
fsubs
add
dec
fadd
out
lock
std
xchg
adc
std
and
xlat
sarb
push
lahf
push
mov
lea
pop
aaa
mov
cmp
stc
adc
pop
test
sti
sahf
pop
xchg
pop
add
das
and
bound
icebp
test
pop
test
test
and
test
jp
push
fldt
stos
push
mov
mov
jnp
and
lahf
push
scas
out
xor
xchg
mov
repnz
lods
adc
lahf
add
inc
test
scas
sbb
incl
lahf
jmp
push
in
xor
sbb
std
or
and
jb
mov
or
fidivs
pop
add
mov
jecxz
aaa
mov
fs
jg
fs
add
xchg
in
cltd
fbld
ret
fprem
pusha
or
push
push
push
mov
pop
push
mul
rorl
or
add
mov
movsb
add
adc
and
adc
mov
jbe
out
ficoms
lret
mov
je
inc
xorl
xor
test
push
xorb
cli
cli
das
jns
iret
push
cmp
leave
adc
shld
push
push
into
push
mov
push
add
hlt
popa
pop
cld
sub
cmp
insb
dec
mov
adc
xchg
stos
push
xchg
mov
jecxz
sub
mov
jl
jle
xchg
or
lcall
ja
and
sub
in
sahf
cmpsl
fisubrs
clc
ja
test
sbb
push
imul
loopne
jle
adc
scas
call
and
je
sarb
ja
pushf
sbb
jecxz
cmp
insb
sub
push
sub
sbb
xchg
and
enter
fadds
push
xchg
cs
pop
data16
scas
jge
push
call
fildll
in
les
pop
fsubrs
adc
pop
mov
jo
dec
loop
int3
xor
and
sbb
loop
and
inc
ret
mov
push
stos
mov
mov
lods
xor
inc
hlt
xchg
icebp
movsl
movsl
jecxz
push
cmpsl
nop
sub
movsb
push
sbb
push
or
jmp
fldl
mov
fisubl
pop
xchg
push
aam
xor
dec
xor
clc
jno
dec
adc
loope
orb
adc
mull
call
push
and
fmul
into
cmc
and
pushf
add
loopne
int
sahf
fsubl
sbbl
add
xor
and
loop
int
push
sbb
push
pushf
push
xlat
fisubrs
loopne
loope
xchg
fisttpll
jp
shlb
lea
mov
and
jle
xchg
and
fisttps
pop
outsl
mov
imul
push
lahf
cmp
jnp
mov
adc
lock
xlat
cltd
xchg
pusha
fnsave
repz
shrb
mov
and
add
push
mov
pop
out
jb
xchg
inc
outsb
fcomip
std
aad
sbb
cmp
enter
ret
jo,pn
push
mov
lods
jmp
push
out
xchg
xchg
rcrl
loope
dec
out
mov
fwait
jbe
bound
sub
fisttps
int
popa
addr16
dec
outsb
into
lret
in
jb
mov
stos
fidivs
fildll
mov
ret
xchg
sbb
cld
lcall
repz
inc
sub
mov
stos
jb
gs
pop
aad
mov
dec
imull
xchg
and
xchg
mov
xchg
cmp
pop
jb
loopne
iret
stos
inc
jmp
enter
icebp
and
in
mov
jmp
ljmp
mulb
in
add
pop
in
inc
dec
xchg
dec
hlt
dec
scas
dec
sub
lahf
adc
or
jle
and
add
mov
jb
push
push
xor
ror
dec
lret
in
test
mov
jle
cmp
mov
ljmp
adc
int3
lods
push
in
cs
ret
pop
mov
dec
rclb
adc
xchg
and
clc
pop
dec
adc
sbb
dec
adc
lods
cld
dec
mov
dec
ja
jb
push
out
sbbb
pop
mov
dec
lock
je
iret
dec
test
cs
push
xor
cmpsb
lock
push
cmp
fucomip
inc
test
notl
hlt
std
jb
jmp
inc
push
or
mov
sarb
mov
jl
and
shl
push
testb
in
mov
push
test
dec
aam
and
adc
and
dec
outsb
lret
jmp
add
jge
push
jb
aad
inc
lret
repz
scas
out
or
sub
insl
std
or
jecxz
push
outsb
push
fidivrs
and
push
sub
outsl
push
insl
stos
rcr
add
scas
test
push
fnstsw
xchg
fisubrl
mov
outsb
repz
in
int3
je
lock
pop
mov
insl
inc
lock
test
add
aaa
cmp
dec
fsts
pusha
js
imul
shl
cmp
lock
sbb
aaa
push
icebp
fistpll
dec
ja
dec
push
and
icebp
test
fadd
inc
sbb
pop
leave
mov
testl
nop
inc
nop
pop
hlt
aas
push
dec
test
add
sahf
sahf
xchg
sbb
out
aad
mov
pop
popf
pop
fbld
jno
aad
aaa
xor
push
and
cmp
cmc
mov
dec
adc
lods
and
fwait
sar
sahf
dec
and
shll
jmp
cltd
enter
nop
pop
fwait
mov
pop
xchg
add
xchg
lock
sub
pop
out
mov
dec
in
and
pop
pop
test
mov
loope
shrl
mov
stc
imul
rolb
subl
int3
mov
sar
or
push
mov
lahf
sbbl
stos
and
sahf
aad
xchg
cmc
xlat
inc
inc
push
mov
lret
fs
sub
lcall
outsb
add
adc
xchg
sbb
repnz
push
clc
pop
aad
stc
loopne
imulb
fucomp
in
add
dec
jne
dec
ss
movsl
out
xchg
jl
orb
jecxz
repnz
daa
cmp
pop
jne
jae
das
lcall
in
in
popf
cmp
outsb
int3
addb
sbb
jmp
rcrl
movsl
push
inc
xor
imul
lock
dec
mov
push
es
adc
add
inc
mov
hlt
into
dec
ds
cld
xchg
xchg
movsl
dec
push
loopne
data16
sub
adc
mov
test
mull
in
dec
fists
cmpsl
loope
sbb
push
stos
push
push
or
std
push
out
sub
mov
fwait
imul
out
dec
xchg
mov
cmp
sub
and
xlat
in
shll
sub
sub
mov
push
insl
sbb
jmp
rorb
adc
xchg
mov
addr16
scas
repz
stos
insb
jmp
sub
fs
jb
xchg
mov
sbb
inc
and
fcoml
in
dec
div
xor
jno
cmp
add
fsub
mov
push
fs
cld
lretw
test
aas
out
icebp
cld
dec
test
and
fisubs
je
mov
cs
movsb
xor
xchg
jno
cmp
dec
cmpsl
outsb
mov
push
pop
jb
sarl
xchg
push
push
aad
dec
jp
je
leave
add
movsb
sub
outsl
out
pop
push
push
add
and
sarl
arpl
filds
cmpsb
out
aad
dec
mov
out
popf
cmp
or
in
stc
in
xor
mov
loopne
mov
pop
jne
push
fwait
in
pop
mov
sub
and
inc
sti
add
mov
roll
mov
les
ja
loope
jmp
push
mov
sbb
outsb
insl
sbb
js
mov
test
push
fs
aad
sbb
mov
sbb
push
add
clc
enter
sahf
sub
jne
aaa
das
dec
sarl
fndisi(8087
pop
data16
push
mov
and
cld
pop
insl
fsubrs
and
sbb
sbb
lods
dec
mov
lret
xlat
popa
jmp
test
cld
andl
jmp
lock
mov
fst
leave
pop
test
inc
into
sti
sub
mov
cs
into
negb
fs
xchg
repnz
fst
cmc
dec
movsl
jecxz
adc
fdivl
mulb
daa
stos
lea
test
cld
mov
xchg
cli
fst
ljmp
bound
push
aam
sub
je
aaa
mov
cmp
mov
add
outsb
aas
adc
popl
sahf
sub
cld
dec
ja
in
fs
call
fmulp
push
dec
scas
add
into
jmp
pop
or
mov
aam
mov
sbb
leave
call
aam
sub
mov
pop
lret
les
sbb
and
adc
inc
mov
loopne
gs
sub
add
mov
loope
je
inc
add
imul
sub
push
jmp
fadd
jecxz
les
test
mov
in
mov
mov
push
sub
jns
fisubrs
stc
inc
das
out
jge
xor
dec
mov
sahf
or
sub
sbb
mov
adc
imul
pop
jne
loop
shll
cmp
mov
scas
sbb
jnp
pop
shrl
imul
fisubs
mov
cld
test
addr16
ljmp
adc
data16
bound
int
push
fisubl
mov
int
popf
dec
push
or
into
lcall
test
push
xor
movsb
adc
or
push
inc
or
mov
fimuls
push
mov
repnz
cmp
in
cmc
daa
popa
jle
cmpsb
jnp
and
arpl
jne
in
pop
jmp
movsb
out
sub
loope
mov
in
cmp
pop
push
push
mov
in
inc
xlat
shrl
ljmp
push
mov
imul
pop
fwait
rcrb
sarb
xor
insb
inc
into
clc
pop
cli
push
jecxz
insl
insl
mov
mov
fs
cmpsb
call
insb
push
jne
mov
and
stos
cmp
imul
sarb
mov
jmp
push
lods
adc
daa
imull
jp
movb
loopne
or
cmpsb
in
icebp
cld
outsb
push
pop
shll
inc
mov
test
sub
sbb
sub
dec
fisttpl
test
test
mov
data16
clc
mov
bound
sarb
add
loope
scas
loop
sarl
inc
sar
hlt
loope
mov
push
cld
mov
fildll
sub
inc
ffreep
push
sar
pinsrw
in
mov
xchg
in
lock
lea
inc
outsb
sahf
jecxz
mov
jb
add
iret
rcrl
rcll
pop
cwtl
popf
adc
adc
push
icebp
adc
pop
clc
jbe
popa
clc
mov
loopne
ret
aaa
jmp
mov
bound
jecxz
loope
sub
mov
imul
pushf
clc
jae
push
jne
mov
jecxz
xchg
push
loope
xor
int3
cmp
sbb
pop
push
sbb
xchg
imul
das
adc
pop
rcl
rol
in
push
push
sahf
js
sar
sub
popl
push
ret
adc
cmp
sar
xor
cmp
push
repz
mov
fs
movsb
gs
not
loope
out
sahf
sahf
pop
and
xchg
push
mov
popa
mov
xor
popa
test
mov
inc
jle
call
push
xchg
sbb
incl
into
dec
movsl
and
push
cmc
out
out
mov
pop
cmc
and
adcl
mov
push
lcall
lds
xchg
add
notb
xchg
mov
addr16
and
jne
mov
pop
ljmp
mov
icebp
out
ja
insb
push
xchg
incl
pop
loope
movsl
arpl
sbb
inc
pushf
sahf
sub
in
pop
arpl
lret
mov
stos
jl
pop
imul
or
jecxz
insl
push
out
data16
fimuls
inc
in
adc
stos
cld
push
dec
clc
inc
xor
mov
out
and
jmp
stos
push
push
imul
cmp
mov
fisttpll
xchg
mov
addr16
adc
sub
enter
fsubrs
movlps
pop
jle
fs
cltd
popa
push
mov
lods
movsb
pop
and
mov
mov
cmp
cld
and
xlat
sbb
aaa
imul
adc
xor
and
sbb
mov
test
push
in
cwtl
fidivl
fistl
int3
outsb
adc
or
in
mov
cld
xchg
pop
and
out
cmp
ja
nop
int3
cmp
mov
sbb
sahf
or
pop
jle,pt
out
call
bnd
add
lods
loope
aam
inc
fcom
pop
pushf
std
test
jbe
cmpsb
bound
shrb
or
sbb
pop
leave
rclb
lcall
cmpsb
test
add
dec
out
inc
mov
addr16
stos
cmc
add
outsb
lret
add
sbb
xchg
push
and
and
mov
xchg
popa
stos
outsb
add
adc
pusha
mov
cs
outsl
and
into
lahf
rolb
sub
cmp
xor
into
dec
pop
rorl
adc
shll
out
add
int3
adcb
outsb
js
ret
sbb
out
lock
xor
dec
mov
out
cmp
jno
sahf
mov
mov
mov
loope
fists
in
mov
xchg
cltd
jecxz
insl
dec
ret
mov
test
or
ret
gs
add
sub
pop
xor
ffree
pop
lods
mov
push
pop
test
push
adc
scas
xchg
add
mov
test
sahf
mov
das
xchg
fnstsw
sahf
mov
mov
fisttpl
adc
push
filds
cmp
icebp
push
data16
sahf
cmpsb
shl
mov
jne
and
cmp
fmuls
rcl
push
push
loope
pop
pop
cwtl
add
or
not
adc
mov
push
les
xchg
inc
pushf
push
sti
test
pop
outsl
lahf
movsb
bound
ret
and
cli
pop
inc
jmp
ret
or
out
cli
loope
movsb
cld
out
cwtl
out
std
in
imul
fs
incb
cmp
aaa
jmp
lret
in
fsubp
and
cltd
roll
cwtl
xchg
mov
sahf
mov
out
adc
jmp
jmp
adc
fldcw
fisubs
cmp
daa
pop
pop
gs
pop
movsl
lock
loope
dec
mull
dec
mov
clc
cmc
fsubl
dec
std
adc
in
test
rcll
rcl
xor
pop
dec
jl
hlt
xchg
xchg
xchg
int
loope
das
cmpsl
xlat
adc
sahf
jle
insb
insb
push
push
cli
mov
jnp
pop
out
cmp
pop
stos
cmpsl
les
test
sub
jmp
aad
popa
cld
fistpll
inc
pop
lods
ds
dec
mov
inc
stos
or
nop
ds
subb
mov
test
xchg
test
das
cmp
nop
mov
mov
jecxz
fwait
mov
loopne
stos
rolb
lock
pusha
and
into
loopne
cltd
mov
jbe
jno
inc
pop
adc
and
imul
sti
xlat
cmp
rcrb
or
mov
xor
ljmp
in
lock
pushf
insb
movsb
cld
andl
push
lods
or
xorl
add
dec
mov
test
push
test
xchg
aaa
inc
mov
fdivrp
ficompl
and
fistl
jle
pop
xor
mov
fdivs
je
or
into
sbb
in
and
and
repz
xlat
or
sub
test
xchg
mov
cmp
sub
movsl
push
mov
mov
sbb
add
leave
or
jnp
add
xchg
push
pop
loopne
rolb
xchg
add
pop
pop
fbstp
xor
mov
insl
lods
push
cmc
aad
hlt
in
bound
in
dec
cmpsb
or
ja
push
sub
call
dec
data16
pop
push
pop
icebp
mov
cmp
ja
in
pop
or
fsubrs
xor
sub
sub
es
cld
mov
sahf
jg
enter
dec
mov
sub
push
inc
adc
mov
loope
dec
fstl
push
sub
test
push
imul
sub
imul
cmpsb
std
push
push
and
cld
fs
mov
cmp
sbb
stos
cmp
popa
sub
mov
in
jp
and
out
mov
in
jae
sbb
fisubs
out
mov
daa
bound
dec
popa
ficoms
mov
adc
sbb
rorb
cwtl
cmpsb
mov
lret
roll
movhps
flds
out
xor
pop
jnp
push
fnsave
add
mov
xor
addr16
fnsave
push
or
ljmp
sti
mov
cli
cltd
adc
cmpsb
jns
in
outsb
and
mov
inc
sbb
subb
mov
mov
stc
movsb
push
xor
testl
mov
inc
popa
andl
mov
mov
add
popa
aad
movsb
fstpl
ljmp
pop
test
adc
fcmovne
xor
bound
push
dec
dec
cmc
fstps
push
pop
aam
inc
test
pop
pop
mov
in
popf
les
mov
cmp
mov
movsl
cld
adc
mov
leave
fdiv
test
cld
or
jmp
xor
into
test
pop
cmp
mov
mulb
imull
and
fs
mov
shll
push
mov
sbb
cli
jl
fists
cltd
push
daa
cmp
pop
dec
in
jp
in
mov
mov
cmp
fisubs
or
cmp
xor
pop
mov
mov
cmpsl
sarb
dec
sbb
notb
stos
stos
cmp
scas
test
enter
shll
cmpsb
mov
mov
xor
sbb
lods
arpl
pop
sahf
add
jmp
movsl
out
fxch
ja
jp
ljmp
sub
es
push
adc
lret
fistps
push
out
or
fldl
movsb
jnp
negl
lods
push
movsb
test
scas
mov
shl
pop
lods
or
jg
bound
push
loope
pavgw
fbld
mov
xchg
lret
cmp
test
dec
add
shll
aam
pop
add
mov
and
sub
stos
mov
mov
jecxz
sbb
push
out
shrb
mov
pushf
pop
lds
xchg
out
in
sbb
sbb
mov
shl
test
leave
aam
data16
cld
sub
xor
clc
fcomi
ljmp
mov
sbb
push
jno
pop
lret
aam
in
cmp
imul
xor
imul
sub
imul
and
mov
sti
test
cmpsl
or
inc
mov
clc
lds
fiadds
or
enter
add
adc
mov
fistpll
icebp
push
ljmp
mov
or
rcll
adc
mov
dec
lahf
sub
pushf
je
or
cld
and
sbb
mov
out
cmpsl
pop
ljmp
pushw
test
push
jecxz
je
push
cmc
rcl
aam
push
jecxz
sbb
mov
daa
and
shll
or
pop
nop
jle
dec
loopne
ret
std
cs
xchg
and
fistps
in
shrl
jp
mov
jns
sbb
es
push
cld
test
mov
push
mov
test
or
in
ss
call
jb
mov
fidivrs
jbe
outsb
lret
ud2
jl
cld
incb
mov
pop
pop
js
fs
jno
push
jecxz
arpl
mov
push
and
xchg
fistps
nop
pushf
and
sub
jb
scas
and
add
pushf
cmc
sub
push
sar
push
and
jno
movsb
mov
fisubs
out
stc
jbe
mov
aam
insl
mov
fstl
jp
or
add
push
fcmovu
cmc
xor
enter
les
jecxz
sub
lock
test
or
in
jns
fwait
mov
enter
cmp
jle
mov
sub
outsb
rcrb
loopne
mov
ljmp
pop
aaa
pusha
dec
or
push
dec
or
sbb
mov
cs
mov
rcr
cld
test
stos
xchg
jecxz
jl
cld
mov
mov
mov
dec
jnp
pushf
xor
sbb
loope
sarb
mov
insb
clc
stos
pop
sbb
rol
dec
imul
into
xchg
and
inc
add
mov
xlat
insb
rcrl
ret
clc
sub
dec
cmp
pop
movsb
pop
dec
imul
mov
or
add
mov
sbb
pop
in
cmp
jp
lret
inc
mov
in
push
lret
xchg
mov
cmp
aas
sti
aaa
mov
nop
into
shr
add
stos
dec
push
xchg
and
adc
loope
fidivrl
cmpsl
push
adc
inc
sbb
inc
push
daa
insb
jp
test
lds
sbb
psrld
repnz
in
arpl
shll
ljmp
xchg
sbb
stos
cwtl
mov
sbb
in
ljmp
add
and
icebp
in
mov
mov
movsb
xor
sub
ja
clc
adc
cld
jp
cld
sub
pop
in
sarb
and
adc
xor
insb
jecxz
loope
push
fisubrs
lock
add
cmpsb
ret
into
mov
lret
test
inc
xor
xchg
ljmp
std
and
popa
ret
mov
loope
mov
rcr
rclb
out
xchg
cmpsb
mov
in
imul
in
ficoml
push
sub
ret
in
pop
call
pop
inc
mov
cli
dec
in
ficoms
dec
mov
mov
out
cmp
test
xor
cmp
test
sub
sbb
mov
ljmp
aaa
rcl
jecxz
add
shlb
add
cld
movsb
call
je
cltd
xchg
fsubrp
add
inc
inc
cmovg
mov
shr
ret
div
adcl
je
sub
ret
cmp
push
and
jecxz
adc
test
sub
into
fdiv
addr16
push
outsb
in
fcomi
jmp
lret
movsl
sub
movsb
cmpb
xchg
push
pop
int
stos
fldl
inc
or
bound
pop
imulb
call
je
cld
mov
pop
stc
lret
ja
test
adc
call
clc
bound
push
and
clc
ljmp
mov
xchg
lahf
xchg
lahf
mov
add
sub
adc
pusha
rcpps
in
cmp
lds
ret
popa
test
popa
shrb
loopne
fcomip
hlt
ds
cmp
jae
push
ficomps
xor
loopne
mov
mov
in
adc
inc
mov
sti
xchg
and
push
loope
pop
mov
cmpsb
inc
mov
and
sahf
adc
enter
sarl
not
shll
and
inc
xchg
test
push
imul
inc
shll
dec
in
and
aam
xchg
stos
dec
call
sahf
inc
mov
mov
sbb
fimuls
sbb
pop
or
in
jecxz
xlat
ljmp
mov
loopne
push
call
sbb
stc
adc
pop
push
mov
inc
pop
and
bound
sbb
cs
nop
mov
jecxz
cmp
add
cmpsl
ret
test
sub
adc
fcomps
cmp
mov
int
cmp
loopne
push
sbb
pop
inc
xor
lcall
fildll
mov
imul
test
in
rorb
and
test
adc
clc
fdivrl
jne
data16
aaa
cmp
outsb
sub
xlat
pop
xchg
mov
push
inc
inc
addl
ja
mul
movsb
xchg
xchg
push
loope
add
hlt
sub
push
xchg
push
cmc
aam
jmp
iret
clc
dec
sbb
pop
push
mov
push
mull
out
pushl
xchg
jne
adc
inc
xchg
aas
shr
jno
cld
fistpll
sti
fdivrl
sbb
and
push
movsl
insl
hlt
fsub
add
pop
sbb
cld
test
pop
leave
pop
pop
loopne
sub
loopne
mov
nop
or
push
enter
into
and
pop
pusha
cld
shr
mov
in
lret
mov
cmpsl
mov
xor
lea
out
jge
ret
and
inc
and
fstps
cld
sti
je
rolb
cld
adc
cmc
xor
jno
pusha
subl
idivl
or
mov
cmp
xchg
in
xchg
sahf
jmp
in
push
jb
negb
cwtl
ret
pusha
out
notl
enter
ljmp
sub
fldcw
xchg
lock
mov
test
insl
xor
fldl
pop
hlt
cmpsl
sbb
jl
jnp
jmp
push
adc
jb
cld
orl
mov
mov
cld
cmp
cmpsl
shrb
cmp
pop
aas
cs
inc
mov
nop
rorl
in
mov
xchg
mov
pop
lcall
adc
out
pop
std
mov
leave
sahf
add
pop
outsb
in
jl
arpl
sbb
dec
fcomp
mov
imul
adc
cli
jl
out
adc
jae
xchg
mov
pop
lea
xchg
sbb
push
mov
pop
filds
fwait
arpl
jmp
inc
sub
or
dec
mov
imul
test
pusha
jmp
imul
in
sbb
ja
cmp
movsb
xor
popl
push
mov
rcll
adc
cwtl
shll
test
ret
adc
push
pop
push
xor
testb
mov
pop
lahf
scas
xchg
call
mov
xchg
testb
pusha
add
ljmp
sbb
testb
mov
in
leave
mov
ret
xchg
hlt
mov
xchg
and
clc
leave
jge
adc
das
loope
push
hlt
jg
cmp
mov
leave
enter
and
xchg
leave
jae
rcrb
mov
jmp
mov
out
jns
xlat
jmp
xlat
xor
loop
xor
dec
or
mov
cmp
enter
cmp
adc
jmp
jb
push
pop
scas
stc
out
push
adc
adc
imul
je
sbb
xchg
cmpsb
xor
cmc
cmp
sahf
push
js
fldt
xlat
imul
xchg
stc
ror
inc
rcll
mull
in
xchg
mov
hlt
out
ljmp
into
or
inc
pushf
or
popf
shrb
mov
test
insb
je
push
rcll
push
loope
jecxz
pop
mov
pop
pop
aam
sub
xor
adc
xor
or
pop
add
fldcw
mov
outsl
xchg
pop
push
lds
add
pop
or
cli
insl
mov
out
cmpsl
adc
fisubrs
lds
or
push
sti
push
js
in
jbe
lahf
push
leave
inc
imul
push
stos
push
mov
add
sub
fisubrs
mov
mov
mov
das
ja
and
pop
stos
cmp
inc
fsts
jmp
and
xchg
shr
jne
or
std
push
sub
pop
cmp
clc
sbb
xchg
sub
call
outsl
mov
data16
imul
push
int
cmp
lods
push
adcl
mov
sub
lahf
pop
cmc
xor
sahf
adc
mov
into
cld
mov
les
cmp
sub
fsubr
mov
xchg
int3
mov
xor
dec
xchg
inc
push
dec
cld
imul
push
xor
dec
jge
push
shl
cld
nop
mov
push
xor
mov
sbb
push
xchg
xchg
mov
cmp
sub
mov
jne
jne
dec
push
xlat
push
pop
jmp
clc
sub
aad
and
outsb
testb
xchg
mov
cli
mov
xchg
pop
inc
aad
sti
push
cmp
shll
cmc
inc
push
sub
pop
int
sbb
xchg
add
arpl
pop
mov
cmc
xchg
jge
rol
popa
movsb
enter
push
cmc
sbb
mov
nop
add
out
femms
ss
aas
cmp
cmpsb
jp
imull
push
dec
mov
jo
lret
mov
adc
mov
cmp
cmpsb
nop
fidivrs
in
lret
aam
mov
gs
imul
adc
mov
adc
ja,pn
lcall
rolb
ret
rcrb
int
cmc
add
ljmp
xchg
mov
mov
stos
aas
test
popa
pop
imul
xchg
mov
add
fnstenv
shrl
shr
sbb
into
and
fstps
mov
aam
push
sahf
cld
fldt
adc
andb
mov
test
mov
frstor
cmp
or
inc
mov
aam
shll
dec
pusha
imul
pusha
sahf
int3
movsb
add
div
into
mov
les
mov
cmc
xor
and
sbb
add
das
fists
sub
mov
jmp
les
lret
mov
or
into
movsb
cld
push
bound
lcall
dec
cld
loopne
fs
stc
mov
out
xchg
je
call
mov
dec
mov
xchg
das
dec
cld
jae
xchg
gs
or
movsb
xlat
pushf
add
les
lcall
test
lds
shl
das
cmp
orl
cld
pushl
adc
mov
and
mov
loope
dec
or
or
movsb
not
mov
sbb
hlt
adc
xchg
or
pop
scas
mov
sub
push
xor
push
clc
ljmp
pop
testl
cmp
jb
or
push
jmp
pop
jns
inc
sub
jno
cwtl
or
sub
jecxz
insb
lods
aaa
imul
hlt
mov
mov
insl
mov
mov
js
iret
movsb
cwtl
nop
jns
lcall
dec
sub
dec
stc
xchg
std
xchg
inc
aam
pop
mov
or
adc
adc
scas
pop
push
sbb
iret
dec
fs
inc
pop
stos
push
jmp
mov
cltd
push
movsb
clc
xor
out
cmp
cld
jecxz
pop
lods
add
fs
mov
jmp
loope
push
shll
xchg
ja
xchg
loope
adc
xchg
sub
cmp
jg
dec
je
in
lock
adc
inc
jmp
or
cmp
adc
arpl
ja
xlat
pop
pop
xchg
push
mov
xchg
cs
jmp
in
popa
daa
jb
mov
imul
xchg
ffree
add
mov
popa
pop
mov
inc
dec
pop
nop
mov
out
pop
mov
and
adc
mov
insl
lret
aas
lcall
adc
mov
gs
pop
xchg
and
mov
ret
jge
or
push
leave
mov
enter
adcb
mov
cld
add
loopne
push
loopne
or
frstor
and
cld
gs
pusha
subb
repnz
faddp
jp
cs
fisubs
sti
adcb
fucomi
and
push
into
sbb
sahf
xchg
mov
xchg
std
dec
sbbl
lods
jle
add
pushf
fidivs
inc
ljmp
dec
push
cmp
xchg
jne
pop
movsb
insl
and
les
test
pop
add
xor
fldenv
and
push
adc
fstpt
jmp
testb
add
xchg
pop
pop
mov
pop
fsub
sti
sub
push
ljmp
out
xchg
and
sbb
ds
xchg
xor
xchg
dec
fsubp
adc
add
sar
lock
insb
mov
aad
xchg
pop
js
xor
and
sbb
sbb
inc
pavgb
push
mov
push
outsb
jp
mov
aaa
loop
or
push
les
test
int
adc
mov
lret
xor
xor
ficomps
int
cmp
insb
test
ror
jns
dec
push
xor
adc
notl
add
jbe
xchg
sbb
and
jecxz
int
aam
mov
in
and
mov
cld
sub
in
push
xchg
ja
in
sub
cmp
push
not
stc
or
int
sbb
adc
xchg
jecxz
idivb
ja
jecxz
push
int3
mov
jl
jl
adc
je
mov
ja
loope
push
add
addr16
push
cltd
icebp
xchg
pop
outsb
psrlw
pop
fidivs
sub
loope
cmpsb
sbb
out
fisttpll
rol
sarl
adc
mov
push
jo
inc
cmp
xchg
jno
xlat
adc
jae
smsw
mov
out
mov
adc
insl
cmp
clc
mov
pop
dec
sub
push
mov
lcall
in
push
in
ljmp
repz
dec
andb
cli
insl
aad
rorb
mov
gs
in
mov
pop
call
ficomps
and
pop
cmp
test
pop
or
adc
mov
outsb
push
pop
pop
js
out
add
int3
jno
in
push
fstps
mov
jno
aaa
and
pop
loope
push
into
dec
mov
and
push
lea
cld
mov
fmulp
dec
fcmovnu
nop
push
cmpsb
stc
push
pop
xor
or
cmp
and
jb
sub
xchg
dec
adcl
adc
insb
ret
jecxz
cwtl
mov
aam
jae
cmp
arpl
aad
mov
jmp
pop
push
sti
mov
xchg
sbb
xor
lea
push
movsb
adc
cmc
adc
shll
push
adc
dec
icebp
sarb
ja
ret
addr16
scas
pop
jno
jecxz
fidivrl
mov
xchg
lret
cmp
sbb
inc
pop
popf
arpl
pop
les
notl
insl
and
fistpll
ds
pop
out
ja
mov
pop
lods
jecxz
seta
stos
xchg
jecxz
xchg
repz
iret
or
pop
mov
jae
insb
jnp
lret
sahf
and
adc
into
push
mov
xchg
nop
out
jb
out
fnstsw
mov
adc
scas
mov
rep
sbb
loope
mov
ret
out
and
adc
push
es
es
out
int
dec
sub
fs
ljmp
shll
fdivp
insb
cmp
mov
sbb
fisttpll
pop
xor
in
cmp
adc
call
adc
leave
pop
roll
ja
adc
xchg
shl
push
imul
sub
or
imul
movsl
sub
cmp
fidivrs
sbbb
mov
and
cld
xchg
or
jae
std
divl
frstor
leave
in
movsb
arpl
fxam
fs
jmp
in
push
call
jnp
sub
out
push
stc
filds
push
sub
xorl
test
jl
decb
test
outsb
in
pusha
lea
push
jmp
test
mov
cmp
xchg
aaa
je
sub
fcmovnu
imul
out
mov
test
aam
mov
adc
sti
scas
or
aam
ret
rcrl
push
fidivrs
je
sti
push
in
inc
mov
les
ficoms
outsb
cmp
idivb
ret
mov
jecxz
fwait
das
cmpb
fstl
les
jae
in
cmp
je
fisttps
sbb
and
movsb
cli
and
subb
jmp
ret
xor
orl
loopne
outsb
dec
or
pop
rcrb
xchg
sub
xorl
fldt
fldl
inc
sahf
les
repnz
push
jo
pusha
jmp
push
hlt
pop
jp
push
fcmovb
mov
outsl
inc
mov
call
sub
scas
fdivr
ffree
push
mov
inc
popl
popf
imul
subb
adc
inc
pop
in
mov
mov
insl
mov
pop
shl
cld
in
std
pop
jecxz
jae
mov
sbb
fdivr
sub
clc
cli
icebp
sti
pop
pop
inc
cmp
shll
ret
push
cli
stos
stc
ljmp
mov
in
jbe
popa
push
mov
mov
pop
mov
dec
jp
loope
xlat
mov
or
popa
lds
in
inc
mov
out
jp
and
and
and
sbb
adc
add
lret
adc
cs
mov
sub
pop
andb
sti
jl
pop
leave
out
sahf
addl
push
xchg
icebp
xchg
xchg
jecxz
aaa
mov
imul
lock
out
dec
cli
mov
arpl
pop
jne
push
add
jl
xchg
out
sub
sub
les
xchg
lods
movsb
in
mov
jecxz
call
es
sti
push
push
pushw
push
clc
cld
add
ja
cmp
mov
pop
sub
loopne
popf
in
sar
push
xor
mov
arpl
inc
insb
lret
dec
xor
ss
rorl
inc
mov
add
mov
loopne
push
filds
ret
enter
pop
ss
xor
insb
aam
in
nop
imul
inc
add
movsb
dec
repz
adc
sub
out
push
cmp
mov
mov
mov
in
jmp
sarl
shlb
inc
pop
jae
jno
lea
popf
mov
and
fstp
mov
mov
mov
lahf
je
pop
mov
jnp
aam
sub
sub
enter
push
lcall
pop
shll
mov
xchg
mov
mov
and
fisttps
jae
xchg
popf
pusha
mov
cmp
cmp
pop
ljmp
fs
inc
mov
push
hlt
sub
sarl
nop
push
push
jecxz
rorl
xlat
sub
dec
cmp
fwait
imul
shrl
leave
adc
jb
andb
cmp
push
cmp
test
sahf
aas
rep
clc
sub
or
daa
std
push
mov
xchg
jnp
sahf
sub
loope
iret
sub
lods
les
test
loopne
shll
dec
jmp
in
jmp
and
xchg
jmp
in
pushf
test
mov
std
cmp
sub
xchg
ret
repz
and
clc
insl
cmp
push
xchg
fsubr
sbb
or
pop
arpl
addr16
rcl
and
push
pusha
aad
pushf
jns
adc
aaa
push
in
arpl
movsb
pop
jnp
ret
fcmovnbe
fs
pop
mov
and
pop
aad
sub
shl
rcll
movsb
dec
out
push
icebp
pop
std
stos
mov
xor
push
cltd
cwtl
das
mov
xchg
in
fmull
stc
cwtl
adc
aaa
in
mov
pop
push
push
ljmp
aad
int3
sbb
pop
cmp
push
pop
add
cmc
sbb
adc
xchg
popa
and
aam
mov
sbb
mov
cltd
pop
cmovp
jecxz
and
inc
sbb
popa
fisubs
mov
xchg
mov
and
xchg
sbb
sbb
xor
repnz
ja
xor
insb
movsb
fisttpl
out
push
pop
lcall
aad
outsl
repnz
mov
adc
mov
xchg
mov
cmp
ds
sbb
fbstp
leave
mov
sub
sahf
mov
dec
aam
and
jmp
fs
out
in
fmulp
push
jmp
rcr
and
outsl
call
jbe
pop
pop
faddp
jbe
jecxz
aam
jmp
rcrl
dec
repz
pop
push
rcl
in
out
jecxz
dec
and
push
jg
aad
sahf
push
jecxz
in
cli
xchg
fcmovne
mov
es
test
adc
pop
sub
outsb
js
stc
rorb
mov
aaa
stc
pop
fsubs
int
mov
push
dec
test
fisubl
popf
roll
in
in
jecxz
in
and
inc
call
pop
pop
xor
bound
shr
fldcw
jg
cltd
repnz
test
jmp
in
lcall
add
jae
data16
ljmp
mov
and
and
and
outsb
mov
decb
js
add
leave
push
mov
push
ret
es
aaa
je
lds
loopne
inc
jae
testb
int
call
fisubl
or
sarl
or
push
push
fisubrl
pop
fstl
rcl
push
pop
mov
pop
shl
cld
popa
inc
push
int3
xlat
out
add
mov
fcmovnu
out
fildll
ficoms
les
fdiv
into
mov
sbb
jns
leave
xchg
data16
sarl
inc
jp
push
mov
push
in
rclb
shlb
sub
mov
test
adc
shl
and
or
lds
mov
loopne
loop
notl
inc
shr
and
xchg
add
bound
icebp
fcmovb
pop
dec
adc
loop
bound
push
xlat
orl
call
inc
loopne
fisubrs
fstp
xlat
inc
push
xchg
jno
jge
pop
lret
movsb
cli
mov
lcall
lret
mov
fldt
shll
std
mov
shll
ljmp
repz
nop
in
mov
sub
xchg
pop
aaa
insb
and
rcl
mov
mov
pop
faddl
in
ja
adc
sbbb
fisubs
aam
lcall
cli
and
inc
nop
cltd
mov
enter
in
fldcw
adc
ficoml
and
and
gs
notb
cmc
jmp
out
repz
call
cmpsb
out
dec
test
lods
fucomp
in
loope
fisttpll
ffree
in
test
ficomps
test
in
not
test
push
aam
and
mov
in
xchg
mov
jmp
or
das
movsb
fmulp
pop
out
aas
lret
push
shll
stc
shlb
rolb
xchg
int3
pop
aad
dec
sahf
in
int3
aad
aad
cli
jne
jecxz
in
add
mov
push
std
ss
je
rcll
fildl
cmpsl
test
mov
xchg
rcrl
sahf
cvtps2pd
call
in
mov
fcmovb
lock
ror
in
icebp
in
mov
sar
mov
hlt
in
mov
in
mov
xchg
xchg
repnz
mov
iret
movsb
lds
rcr
icebp
pop
es
xchg
into
and
movsb
movsb
pushf
and
or
mov
neg
int3
xchg
aad
out
lret
test
pushf
aad
std
ljmp
loope
mov
fcmovnu
test
push
mov
mov
insl
push
leave
out
mov
loopne
aad
ret
sbb
sahf
outsl
ljmp
jecxz
cld
in
inc
cltd
les
out
cmpb
mov
test
push
stc
push
call
mov
push
dec
lret
push
shll
sub
icebp
jecxz
movsb
fs
jbe
xlat
rcll
fxch
xchg
jmp
sarb
sti
fistps
cld
mov
aam
ret
pop
les
sbb
xor
xor
div
pop
fstps
hlt
jecxz
cmp
ret
lret
movsb
repnz
push
and
fs
dec
cmp
shrl
mov
fsubrl
clc
jmp
aas
roll
xchg
scas
out
dec
fsin
mov
pop
add
pop
sub
hlt
ljmp
repnz
mov
mov
stos
xchg
jne
test
mov
pop
test
mov
test
dec
jne
pop
stos
mov
movsl
xchg
movsl
sahf
cmpsb
fimull
mov
jbe
ficomps
pusha
movsl
adc
cmp
sub
aam
and
nop
aaa
sub
pop
mov
pop
lret
cmp
inc
lock
clc
cmp
in
inc
mov
aad
lahf
pop
sub
xchg
mov
gs
cmp
sub
mov
pop
fst
ljmp
btc
xlat
outsb
xor
push
fs
loop
mov
dec
push
stos
and
dec
mov
or
loope
mov
loop
roll
loop
ja
clc
cmp
pop
dec
adcl
addr16
pop
outsb
in
aas
dec
cmc
and
mulb
sahf
adc
imul
push
sub
js
ret
inc
add
xor
jb
push
sub
xchg
xor
mov
cmp
inc
ja
into
fcoml
loopne
test
jns
adc
and
icebp
cs
lret
cmp
jo
shlb
mov
xchg
jb
push
fisubrs
test
mov
xor
int3
test
test
push
sti
dec
xor
sub
jle
clc
mov
inc
dec
ja
cmp
jle
jbe
mov
lcall
xlat
and
adc
das
cmpsb
sbb
lds
push
sub
cmpsb
and
orl
sbb
in
orb
push
test
mov
gs
ss
sahf
add
push
fstpl
and
imul
aam
cmpsb
and
xchg
cli
iret
sbb
pop
imul
mov
mov
sub
inc
cmpsl
ficoms
sub
nop
mov
aad
ss
icebp
adc
add
ret
mov
lds
inc
ljmp
and
fs
stos
or
icebp
int
rorl
pop
cmpsb
mov
push
and
sbb
mov
dec
push
sti
or
hlt
jp
fisttpl
push
fstp
stos
in
shlb
sbb
jmp
pop
mov
call
rcrl
ljmp
inc
into
mov
in
leave
jmp
lcall
in
push
pushf
cmp
push
movsb
scas
insl
in
sarl
rcr
pushf
fwait
cltd
in
nop
xor
pushf
fsubl
xchg
sub
jecxz
aaa
out
fcoml
sub
lcall
fisubs
push
cmp
pop
fs
scas
testb
sbb
pop
fnop
and
outsl
adc
lcall
sahf
addr16
mov
xchg
ljmp
pushf
lret
arpl
lods
mov
stos
loopne
fs
rcrl
jmp
in
shrl
xlat
pusha
mov
lds
sbb
loopne
ficomps
in
inc
or
push
mov
fcom
cmp
movsb
aad
fstpl
ret
push
js
mov
arpl
sbb
push
xor
aaa
stc
pop
rcr
add
sub
mov
stc
popf
inc
fsin
cld
mov
fsubs
sarl
push
mov
or
std
movsb
loopne
pusha
pop
or
pop
sbb
ret
in
sbb
notb
xchg
pop
lcall
rclb
popa
pop
lods
mov
sub
cwtl
jecxz
je
out
pushf
ret
mov
rorb
and
cld
mov
icebp
out
mov
lret
push
arpl
stc
xchg
int
std
daa
roll
xchg
ror
dec
and
fdivrp
nop
fs
push
adc
dec
std
rcr
xchg
adc
jbe
xchg
push
push
aad
cmp
shr
adc
xchg
jb
cwtl
mov
push
cmpsb
adc
test
cmpsb
xor
push
push
push
xchg
jae
push
mov
movsl
xlat
rcll
mov
jbe
addr16
cli
lea
mov
push
out
das
jne
fsin
loopne
pop
ds
adc
int
push
xchg
stos
sub
hlt
fisubl
daa
hlt
lea
jecxz
mov
fistl
push
int
jecxz
out
into
hlt
ror
adc
addl
fmull
loopne
lds
ret
cmp
dec
adc
cmp
sub
insl
nop
xor
lcall
out
cld
jae
jecxz
adc
xlat
int3
sbb
xchg
xor
aaa
cli
ret
mov
int
and
bound
pop
test
in
clc
cs
sbb
arpl
out
imul
and
mov
ficompl
pop
testl
hlt
aas
push
lock
in
cmp
sub
fldl
in
pushf
shl
inc
dec
cltd
ss
or
dec
mov
lret
xchg
jne
movsb
xor
mov
lods
jge
fcomip
sbb
push
dec
inc
int3
lods
cld
scas
xchg
dec
sbb
shrl
sbb
call
inc
mull
test
jo
jecxz
inc
fistl
pop
jo
popf
fdivl
mov
cmp
shll
les
add
clc
je
xchg
loopne
insl
call
testl
pop
out
aaa
xchg
mov
repz
adc
out
and
int
neg
mov
shll
xor
ja
sbb
test
pop
lahf
std
inc
jg
jb
push
movsb
fcmovnb
jg
rol
scas
loopne
ret
loope
xor
int
jb
lcall
dec
cltd
mov
dec
push
stos
lret
pop
cs
mov
sub
mov
fs
inc
inc
or
mov
loope
lds
xchg
popa
enter
cltd
icebp
sahf
inc
lods
imul
aaa
mov
andl
mov
mov
cmp
fstl
outsb
es
icebp
mov
cmpsb
jne
mov
jle
inc
inc
out
sub
cmp
adc
pop
scas
std
in
mov
pop
in
insl
push
inc
cmp
pop
pop
sub
loop
jb
cld
xor
inc
dec
in
test
push
pusha
movsb
addr16
add
out
cmp
mov
inc
roll
and
adc
jo
in
pop
mov
test
shrl
movsb
in
cmp
insb
xor
fs
mov
repnz
repnz
cld
dec
push
dec
and
in
push
testb
faddp
jg
test
push
pop
adc
add
loopne
in
add
jnp
jge
xchg
and
cltd
icebp
aaa
vpaddsw
sub
jge
push
orb
fisttpl
out
xchg
ficoms
push
jmp
push
jg
or
cmp
mov
out
mov
mov
test
test
das
cmp
mov
push
and
mov
jns
push
leave
xor
jmp
call
ja
jmp
inc
fwait
daa
stc
dec
insl
dec
push
xchg
or
xor
push
lret
pop
aam
shll
and
movsb
xor
xchg
gs
fisubrl
jmp
arpl
ret
xor
outsl
pop
fdivr
and
cltd
jb
and
out
dec
adc
mov
mull
inc
addr16
mull
sub
std
and
loopne
push
push
shl
inc
xchg
iret
jmp
cmp
aam
mov
cmp
icebp
fs
jle
out
jge
stos
cmp
jne
test
fcmove
mov
ja
pop
test
les
mov
rorl
pop
add
push
xor
data16
fisttps
jbe
inc
or
mov
rcll
stos
mov
and
lahf
inc
insl
xchg
stc
sub
sub
in
test
jg
mov
pop
ljmp
stos
push
loope
div
push
aaa
cmpsl
cmp
push
or
stc
mov
mov
inc
cmp
ret
xchg
call
rcr
and
loope
mov
pop
repz
js
repz
jp
xor
xor
pop
lods
push
jnp
and
or
test
cmc
sub
testb
ja
or
fs
cld
xor
inc
pushf
mov
rcll
out
les
mov
push
fildll
mov
sub
in
out
loopne
lods
dec
imul
push
ja
in
in
in
fcomip
sub
out
lret
mov
mov
divb
jnp
sarb
rcrl
push
pop
mov
sbb
cld
lods
mov
cmp
fwait
or
jg
scas
push
cmc
shrl
mov
add
lea
cs
push
scas
sub
ds
sub
pop
movsb
imul
dec
cmp
js
movsb
cmpsb
ret
stc
inc
inc
stos
xchg
jnp
call
rcll
aam
jle
fucomip
gs
mov
ret
lahf
and
dec
lahf
fsubrl
jno
arpl
fnstsw
or
mov
push
pop
stos
pushf
cmpl
mov
addr16
les
mov
sub
mov
mov
movsb
mov
or
or
fisubl
movsb
cmp
pop
lahf
divb
ljmp
jg
cltd
testl
sahf
cmc
mulb
rcl
into
mov
rorb
and
shl
jmp
rclb
ljmp
or
imul
jae
pusha
mov
imul
fldl
sub
and
dec
push
fwait
xchg
and
lock
jns
jns
mov
in
inc
xchg
js
fstl
incb
push
fisubrs
repz
sarl
sti
and
sti
ljmp
pop
std
jle
mov
mov
add
fnstenv
or
ret
or
push
cmpsl
cltd
shr
les
and
sarb
adc
in
fcomps
pop
sarb
add
ficomps
dec
movsl
cli
cmp
push
xchg
in
pop
in
xchg
mov
leave
lea
mov
pusha
iret
movsb
jmp
push
ljmp
mov
and
scas
sbb
arpl
xor
dec
cmp
out
jo
loopne
insl
adc
inc
dec
add
xor
dec
xchg
xchg
sub
int3
mov
rcl
fwait
push
mov
dec
fs
adc
inc
cmpsb
jg
daa
adc
out
aas
push
mov
sub
jecxz
sub
xchg
push
leave
and
adc
and
push
and
jmp
hlt
and
sbb
push
rorl
mov
insb
mov
fisttpll
xor
repz
cmp
nop
out
pop
test
pop
js
arpl
movsb
in
fadd
sub
mov
into
cmpsl
loope
jno
pushf
fs
xchg
ja
and
nop
push
xchg
fsubrp
daa
jbe
cmpsb
sbb
and
xorb
mov
fstps
mov
aaa
adc
leave
mov
xorl
lea
lds
test
mov
loope
int
ret
push
dec
fsubs
fisubrs
popf
xor
leave
dec
ret
or
ret
xchg
call
inc
sbb
dec
push
fdivp
pop
fs
or
jecxz
mov
inc
fldcw
neg
push
test
sbb
and
pop
lods
cmp
jne
int
ret
jmp
test
ficomps
inc
movsl
push
mov
jg
xchg
je
int
lds
cmp
aad
imul
lret
or
shrl
push
and
pop
scas
test
inc
dec
into
sahf
push
lret
mov
adc
aaa
les
dec
das
filds
xchg
movsb
stc
out
and
push
xchg
cmc
and
sarb
lds
jecxz,pt
shl
int
xor
mov
scas
js
mov
pop
and
xor
jl
pop
loopne
ss
test
jo
stos
inc
les
mov
pop
std
fucom
mov
enter
mov
dec
loop
rolb
aam
push
les
xorb
mov
adc
inc
fldt
icebp
and
xchg
stos
push
js
std
int3
lods
fadds
faddp
jle
out
lahf
xor
xchg
divb
mov
lea
std
lret
mov
pmaxub
aaa
and
test
cwtl
sub
inc
ret
mov
test
mov
imul
push
fnsave
adc
mov
mov
shll
push
jecxz
xchg
mov
pushf
cld
out
mov
sbb
jecxz
lods
int3
std
loopne
mov
xchg
cmc
jo
stos
and
or
xorl
mov
sbb
pop
cld
int
vmovapd
mov
inc
pop
addr16
mov
jecxz
xlat
push
stos
out
ljmp
std
xchg
sub
into
sahf
enter
sub
mov
arpl
jge
push
ret
xchg
lds
mov
cmp
jecxz
lret
xor
in
push
add
aad
mov
lret
int
iret
mov
lods
add
iret
pop
in
sub
addr16
shll
pop
cli
push
daa
inc
mov
cld
scas
aaa
imul
loope
loopne
lods
es
ret
int
ds
notb
mov
push
pop
imul
je
testb
cs
cmc
lret
jge
push
jne
cmp
nop
add
add
sub
in
call
push
fs
push
mov
mov
push
hlt
loopne
fstps
in
jle
fs
les
mov
add
push
hlt
out
jecxz
jmp
testb
call
xor
jmp
mov
pushf
inc
jecxz
fmulp
or
in
inc
sub
and
jmp
mov
outsb
je
jmp
fisttps
push
popf
sub
mov
xchg
push
xchg
jmp
arpl
jp
mov
outsb
std
dec
push
shr
lods
rcll
int
pop
mov
mov
icebp
jne
loope
aad
jle
mov
ja
add
xchg
loope
cmp
repz
jecxz
adcb
ljmp
ficomps
movsb
xchg
test
cmpsb
loopne
in
shl
inc
inc
xor
and
sti
aas
jecxz
test
jno
cmp
rcrb
fucomp
imul
ja
jns
push
cs
out
pop
rcrl
dec
fisubrs
push
jl
enter
andl
lods
xchg
cmpsl
dec
mov
push
pop
aaa
dec
add
xchg
aaa
sub
inc
inc
icebp
jg
insl
cld
inc
sub
cltd
mov
cld
and
mov
dec
xchg
sahf
std
aam
mov
mov
mov
mov
mov
adc
dec
lds
repz
test
sbb
adc
ffree
push
adc
arpl
mov
dec
cmp
cld
ret
mov
outsb
dec
pusha
scas
orb
les
mov
imul
cltd
outsb
xchg
aas
jecxz
scas
ds
mov
inc
in
pop
fs
xchg
test
aad
ljmp
out
jmp
loope
mov
add
loope
aad
inc
mov
inc
addl
ja
pop
in
call
int
faddl
push
ljmp
inc
sub
fcomps
nop
adc
fs
push
xchg
movsl
push
aad
pop
testl
mov
lcall
js
fldt
loop
cmp
dec
bound
jecxz
pop
jl
mov
add
loope
sbbl
arpl
scas
sub
jnp
ret
ja
xchg
bound
dec
xchg
xor
pop
jno
xor
loop
add
bound
out
xchg
sub
push
xchg
in
loope
lea
inc
jmp
push
aad
sarl
fisubrs
int3
and
cwtl
add
pusha
adc
lods
add
sbb
shll
push
data16
jle
aad
imulb
pop
xor
call
dec
pushf
mov
shr
jle
or
das
dec
jno
out
adc
shlb
fs
mov
das
call
fs
push
pop
lcall
pop
jbe
mov
std
test
mov
std
int
fists
push
orl
aaa
popf
lcall
cmp
ret
cmpsl
jb
scas
aas
fs
sub
and
aam
test
xor
fbld
lahf
in
adc
jecxz
in
and
movsl
test
and
mov
xchg
mov
test
fistpll
and
cli
pushl
les
gs
fcoml
pop
mov
mov
fstpl
mov
push
dec
and
andb
pop
push
xor
jle
cmp
and
dec
pop
call
cmp
xchg
in
inc
mov
aaa
call
push
repnz
ja
scas
js
test
cmp
arpl
rcrb
add
mov
push
add
outsl
xor
repz
je
adc
or
cmp
aad
or
cmpsl
adc
pusha
cld
shr
jae
les
xchg
popa
and
push
mov
js
push
adc
call
in
sbb
fiadds
rorb
mov
popa
jmp
ret
ja
stos
adc
test
pop
xor
cld
ja
out
cmp
in
es
ds
pop
inc
and
mov
cld
in
ficoms
push
cmpsb
xor
sub
xor
or
out
xor
cmp
clc
cmp
in
and
js
fiadds
mov
hlt
dec
fdivrl
test
jecxz
std
or
fiadds
dec
test
pop
fmuls
jp
popa
fisubs
ret
inc
sbb
addl
pop
daa
dec
or
out
addb
shlb
dec
fs
out
jmp
popf
and
lods
cli
shlb
add
push
pop
inc
and
mov
fsub
ffree
or
fnstcw
pop
in
out
ftst
fistpll
and
mov
aas
pop
idiv
inc
fninit
les
rorl
mov
push
in
or
jg
cmpsl
jmp
sub
aam
add
jno
stos
push
clc
loope
divps
mov
mov
loope
je
mov
shrb
add
push
or
pop
xchg
lret
in
push
stos
xchg
or
push
icebp
hlt
push
cmp
xchg
and
push
aad
out
mov
push
jle
rcl
stos
push
clc
dec
dec
mov
in
pop
aas
loope
mov
sub
jecxz
lods
ljmp
mov
pop
mov
pop
or
outsl
xchg
xchg
xlat
lret
int
in
cmp
cld
cmp
pop
mov
std
into
bound
data16
push
std
loope
jnp
shll
add
adc
and
pop
ret
jns
cmp
sub
sub
push
dec
push
into
dec
mov
inc
scas
pop
lods
push
mov
push
stos
sbb
or
stc
lcall
dec
push
arpl
pushf
push
push
movsb
and
push
pop
lahf
movsb
test
mov
fs
arpl
shl
idivb
push
dec
pop
and
mov
dec
jl
pop
rclb
aas
dec
out
ret
and
sti
xorb
test
sbb
imul
mov
xchg
mov
fwait
sbb
and
xchg
xor
cmp
test
daa
mov
dec
adc
icebp
jle
sarb
mov
mov
xor
ljmp
jmp
push
or
out
les
outsl
mov
inc
jecxz
jno
inc
out
in
xchg
jmp
frstor
inc
sub
arpl
stos
xor
ss
push
jle
inc
js
mov
mov
xchg
ja
jo
push
lock
jae
sub
cmp
jp
mov
jns
xchg
cld
push
lods
and
pop
sub
xchg
mov
jb
jg
popf
jno
out
adcb
xorl
fucomip
hlt
rorl
movsb
pop
mov
cli
clc
cmp
jne
sub
scas
sti
mov
arpl
aaa
les
decl
cld
dec
mov
outsb
imul
and
xchg
mov
test
sbb
lock
pop
call
adc
xor
jb
mov
movsb
or
sub
push
aas
lret
into
stc
in
test
xor
push
shrl
cmc
fiadds
loope
aad
faddl
mov
and
sub
cld
dec
cltd
movsb
in
iret
int
stc
stos
lea
faddl
mov
lock
shll
imul
dec
imul
cli
shlb
inc
out
and
or
mov
push
fstp
ret
stc
pop
sub
cli
fst
imul
sbb
cld
sub
popa
test
adc
mov
xchg
pop
in
popa
repnz
mov
mov
cld
daa
cli
rcrl
shr
add
push
dec
stos
mov
sti
and
fisubrs
pop
mov
jecxz
pusha
aam
into
in
jbe
xchg
inc
or
repz
repz
and
dec
push
hlt
mov
jp
int3
and
repz
mov
add
lret
lock
enter
add
push
pop
stos
and
aad
push
push
fsubrs
inc
shr
push
fildll
out
aas
test
and
or
jae
add
sbb
psubq
movsb
sahf
in
jecxz
xchg
das
mov
mov
enter
loope
enter
into
push
mov
dec
jle
pop
xchg
jbe
loop
mov
cwtl
stos
lahf
out
movsb
lods
ret
pop
add
adc
dec
int
in
in
cld
int
sub
rcll
inc
adc
sti
push
mov
sahf
ljmp
imul
cmp
cmp
pop
mov
cmc
xlat
jne
pop
push
stc
lret
ja
outsb
xchg
cwtl
loopne
pop
push
movsb
mov
out
dec
mov
ret
daa
rolb
xlat
loopne
imul
jne
aad
jb
fs
xor
cld
mov
and
shrl
cmp
inc
mov
jecxz
and
jecxz
jno
stos
notb
pop
pop
xor
mov
in
adc
test
ljmp
ja
cwtl
pop
mov
push
shll
sub
push
int3
cli
test
insb
push
rcrl
shl
pop
in
sahf
int3
jne
test
adc
jo
int
iret
lock
leave
add
push
pop
hlt
xchg
jns
pop
sahf
xchg
cmpsb
fidivrs
xchg
jecxz
mov
push
pop
cwtl
insl
movsb
imul
test
aas
out
xor
jecxz
dec
xchg
push
popa
push
and
mov
mov
into
cmp
jle
nop
mov
pop
out
mov
das
jecxz
lods
mov
cmpl
shll
pop
add
mov
imul
cmpsb
or
mov
movb
push
shrb
pop
and
mov
add
mov
lods
sar
in
xchg
mov
aaa
push
mov
int3
push
pop
in
jmp
les
fwait
insl
cmc
xchg
dec
mov
fisubrs
neg
and
add
dec
fs
xor
hlt
cld
cltd
aam
pop
fdivp
ljmp
leave
jmp
stc
fdivrp
inc
out
push
fimuls
test
hlt
fbstp
cs
in
inc
jnp
dec
and
outsb
sub
leave
in
jae
and
xchg
xchg
pop
stc
inc
leavew
outsb
rcll
hlt
imul
mov
inc
sub
negb
std
jae
roll
xchg
push
in
inc
xchg
lock
fisubrs
popa
mov
jno
into
loope
lret
pop
jecxz
mov
xlat
rolb
int
enter
sahf
lret
mov
jle
pop
or
mov
sub
cmc
lea
out
mov
sti
mov
xchg
lahf
pop
jmp
dec
xchg
dec
addr16
aam
cli
cld
aas
xlat
js
ret
out
jne
mov
push
out
insb
test
idiv
enter
ja
cli
inc
sub
xchg
lods
jge
je
pusha
fists
mov
inc
mov
ljmp
mov
xchg
xorl
cld
loopne
mov
jg
stos
and
out
xchg
mov
mov
sbb
in
mov
adc
fs
jle
adc
in
fdivrp
cmp
push
out
fs
mov
imul
or
in
xchg
pop
jmp
notl
xor
orl
nop
add
sub
dec
push
pop
in
inc
aad
jmp
xchg
movsl
mov
and
lods
nop
mov
fs
mov
clc
cmovo
cmpsb
sub
jecxz
shrl
jno
hlt
sub
push
fnstenv
xchg
sbb
dec
mov
pop
in
mov
push
fidivrs
xchg
jb
xorb
stos
mov
inc
lret
rclb
fucomi
pop
inc
shlb
add
sbb
loopne
into
ret
inc
mov
push
rcrb
pop
inc
sbb
mov
ficoms
cwtl
sub
in
push
into
lock
cmpsb
int
xor
int3
in
dec
dec
cltd
add
cmp
push
int
jne
cmpsb
rolb
adc
loope
into
mov
fs
sub
int
ljmp
test
fwait
pop
test
adc
push
mov
std
dec
cmp
fcompl
mov
in
cmp
sti
or
cmp
int3
fimuls
add
cmp
testl
adc
pop
mov
ss
pop
loope
jbe
xlat
aad
stos
aam
lock
gs
icebp
nop
xchg
pop
jo
sub
and
dec
out
icebp
popa
lcall
rcll
xchg
sub
fistpll
enter
std
jmp
fwait
and
repz
inc
xchg
cmp
decl
xchg
cwtl
or
roll
jbe
fmul
mov
inc
popf
sub
xchg
and
adc
adc
pop
push
pop
fwait
or
enter
mov
in
leave
mov
sahf
cmp
mov
sahf
jge
push
xchg
xchg
mov
add
cmp
jns
xchg
cmp
mov
sub
leave
sbb
ror
jp
in
mov
outsl
xchg
out
andl
lea
jg
inc
push
sbb
xor
push
inc
or
ss
cmp
or
inc
shl
mov
repz
out
std
mov
xor
addr16
daa
int3
xchg
in
cmp
mov
mov
jae
push
sub
aad
sti
xchg
aam
out
add
mov
leave
add
cmpsl
sbb
pop
aam
int3
xchg
loope
adc
ja
loop
out
into
loop
int
fistpl
push
fsts
dec
push
pop
push
mov
icebp
push
push
xchg
push
mov
scas
push
pop
dec
and
sbb
sahf
icebp
arpl
loopne
xchg
rcll
xchg
jmp
mov
lret
fldl
scas
sbb
mov
or
mov
ja
out
enter
jo
lcall
lret
inc
leave
mov
lock
sub
xchg
xor
scas
cwtl
push
ffreep
mov
repz
and
jnp
imul
aam
fs
xchg
jecxz
ljmp
outsb
lret
insb
adc
int
mov
xchg
sahf
call
cmp
fnsave
jb
push
xchg
ja
movsb
jb
sub
call
ljmp
mov
jp
push
popf
jle
ror
test
call
sarb
push
mov
adc
cld
inc
or
lea
sbb
adcb
mov
xor
jo
test
into
out
ljmp
xchg
adc
sub
mov
pop
mov
push
mov
fidivs
push
faddp
sub
shrl
fucomp
notl
jp
test
dec
stos
shrd
iret
rcrl
jo
xchg
mov
mov
loopne
pop
xchg
xor
or
lods
fcomp
ret
xchg
inc
or
sub
fs
jecxz
jge
into
js
rolb
shlb
fdivrp
adc
test
cwtl
add
enter
ja
imul
fcompl
jno
and
xor
cmp
scas
push
ja
fildll
fs
ret
jp
and
push
stos
icebp
jp
in
dec
xor
or
test
push
mov
pop
fs
lock
insl
adc
sarb
adc
aam
popf
aad
jle
sub
cs
fadd
xchg
clc
xchg
pop
pusha
pop
stc
xchg
pusha
sbb
lock
jmp
loope
mov
sti
fcmovb
iret
ud2
sti
leave
js
in
out
inc
cs
mov
mov
mov
jecxz
cld
pop
movsl
ja
pop
lock
fstl
cwtl
retw
jecxz
ss
inc
insb
lods
in
lahf
push
and
sub
movsb
and
fsubs
cmp
repz
sbb
inc
inc
mov
ret
mov
arpl
test
shll
loopne
cwtl
enter
popf
fadds
add
push
mov
or
roll
in
xchg
test
repnz
cld
cmp
aad
adc
fs
lahf
orl
leave
dec
loope
fwait
stos
push
das
fnstenv
pop
sbb
nop
in
push
les
jb
lret
mov
out
cmp
push
fdivr
dec
push
fdivr
cmp
xchg
fidivs
or
fs
call
aas
out
rcrl
xchg
repnz
fstps
cmp
jne
and
and
xchg
mov
xchg
jle
loope
shl
test
mov
pop
and
lods
pop
mov
shrb
aas
insl
shrb
icebp
in
adc
outsl
mov
dec
loopne
dec
aad
dec
arpl
ja
sub
mov
inc
dec
mov
test
lea
or
push
jp
inc
call
divps
mov
push
call
jo
aam
xchg
mov
jg
mov
int
out
scas
clc
or
fldl2e
lods
icebp
xchg
push
fdivrs
fcmovu
and
mov
in
scas
lret
ja
in
fcomps
adc
dec
in
lock
jge
xchg
cmpsb
sub
mov
dec
into
jae
lock
push
adc
adc
sub
mov
dec
adc
data16
xchg
rcll
dec
ljmp
gs
xchg
rcr
into
fucomip
test
mov
shr
les
repz
fstp
fbld
test
and
loopne
xchg
push
xchg
pop
jmp
and
addl
inc
push
cmpsl
insb
xchg
lret
lret
out
xchg
test
hlt
rcll
mov
pop
jbe
sub
jo
lahf
cmp
jns
adc
in
cmp
jmp
testb
jno
aaa
shll
movsb
fidivs
mov
or
outsl
fld
aam
lcall
push
std
push
sub
or
sub
std
sub
jmp
adc
sub
lret
in
shl
cmp
int
fnstenv
add
adc
fcomip
mov
dec
arpl
cmp
fsubl
jmp
push
adc
add
mov
push
pushf
sbb
not
push
or
cld
in
cmp
std
cwtl
add
push
xorb
inc
push
popa
test
outsl
push
push
stc
fcomp
xchg
add
test
cld
imul
mov
xor
inc
aaa
jne
jo
not
mov
xchg
call
rcrl
bound
loope
stos
mov
mov
out
mov
mov
and
or
push
int
hlt
rcrl
sahf
nop
sub
dec
lahf
pop
mov
adcb
xchg
std
fcomps
xchg
ret
adc
cmp
fisttpl
xor
smsw
pop
and
sbb
mov
shl
jbe
sahf
and
leave
add
adc
rcrb
ja
push
add
lret
rorb
mov
xchg
repnz
or
jo
mov
insb
mov
sbb
shrl
inc
stos
fidivrl
dec
xchg
out
aam
bound
hlt
add
push
jb
add
hlt
bound
pop
iret
rorl
inc
lea
cmp
enter
cmp
xchg
lds
sub
lea
push
inc
cmpsb
hlt
add
mov
push
xchg
stos
push
adc
out
fdivl
sarl
xorb
dec
mov
loope
mov
inc
xchg
arpl
lds
mov
mov
mov
cmpsl
das
in
mov
push
jl
push
pop
jns
cs
jnp
in
loope
insl
sbb
sti
adc
adc
mov
mov
insb
jno
jecxz
into
pop
outsl
jle
or
pop
stc
in
sub
js
lods
enter
lahf
sarl
sahf
pop
js
cmpsb
ficoms
in
sti
gs
outsb
push
into
insl
mov
sbb
dec
mull
clc
loope
nop
and
adc
pop
orl
vpaddb
xlat
out
stos
xchg
push
fiaddl
jecxz
fsts
stos
sarb
popf
int
pop
hlt
arpl
test
sarl
pop
aas
sbb
sbb
pop
in
xchg
add
mov
xchg
data16
xchg
filds
jmp
cmp
loope
iret
jl
dec
aam
push
js
adcb
adc
test
mov
std
cmc
in
cmp
push
lea
ret
adc
pusha
xchg
pop
aaa
sub
sub
cli
and
cltd
jge
adc
testl
cmpsb
dec
ljmp
daa
rorb
or
nop
shr
shl
dec
cld
lods
pop
and
mov
mov
pusha
inc
aam
out
in
repz
scas
nop
push
xcrypt-ofb
cmpsl
jmp
cmp
inc
xchg
popa
sub
pop
lods
test
pop
jnp
test
out
adc
jae
sahf
das
cmp
not
stos
pop
cmp
mull
aam
int
data16
mov
xchg
test
push
in
and
lea
xchg
cmpsb
jo
popf
adc
subb
add
fsts
das
mov
mov
ljmp
adc
test
sub
sub
xor
mov
mov
dec
std
stc
mov
negb
add
pop
out
push
pop
mov
mov
push
test
sub
push
testl
jmp
pushf
pop
fldl
fstp
fistpll
and
sar
popa
mov
push
mov
shrd
mov
add
fistpl
stos
cmc
cwtl
pop
scas
ror
ljmp
and
sti
fcompl
adc
fcompl
sbb
jmp
pop
mov
pop
outsl
rclb
ja
leave
adc
aad
jp
inc
sub
arpl
cltd
xchg
sahf
push
movsb
cld
or
or
xor
inc
test
hlt
aas
mov
cwtl
xor
xchg
mov
adc
orb
shr
inc
sub
xor
and
ror
jge
test
push
cmpsb
sarl
xchg
jp
popf
dec
pop
test
cmp
fsubrs
sbb
ficomps
mov
mov
jb
jbe
pcmpeqd
push
jle
and
pop
cmp
push
adc
popf
adc
ss
push
mov
pop
inc
das
inc
sub
popf
and
aam
mov
in
jmp
stc
enter
mov
sub
jg
icebp
jns
jmp
push
pop
pop
int3
mov
mov
movsb
lret
mov
inc
aas
aad
nop
jmp
jp
pop
arpl
ja
cld
xchg
clc
adcl
outsb
cmp
clc
shll
inc
leave
mov
decl
jmp
jb
shr
xor
inc
repnz
enter
fdivl
sub
loopne
scas
add
xor
outsb
loopne
pop
bound
mov
xlat
out
jl
pop
addr16
stos
and
xchg
enter
aas
push
out
hlt
fidivs
jecxz
int
jne
icebp
xor
fists
hlt
push
mov
cmpsb
popf
add
push
fldenv
lds
xchg
insl
mov
cmc
jp
in
gs
stos
mov
push
ja
lea
aam
add
hlt
test
lods
mov
mull
mov
in
insl
sbb
in
nop
fistpll
jno
movsl
insb
sbb
loope
xchg
notb
mov
or
dec
imul
fxch
test
push
xlat
setnp
mov
add
in
pop
cmp
scas
push
xlat
xor
cmp
sbb
test
rcrl
outsb
mov
fisubrs
icebp
pop
xchg
mov
fisubrl
push
pop
push
icebp
mov
push
pusha
dec
pushf
or
cld
fsubrs
adc
cmc
adc
cmc
push
mov
loope
push
dec
jno
cld
mov
iret
pop
inc
addl
aaa
stos
ljmp
and
cmp
mul
rcll
dec
iret
cld
jo
into
dec
and
mov
jb
jecxz
sub
jb
mov
mov
sahf
in
mov
push
ret
shrl
mov
ss
shrb
ss
repz
test
xor
shll
dec
push
jle
lods
shll
shrb
push
hlt
pop
repz
adc
out
push
mov
mov
cwtl
jecxz
mov
fdivr
jne
mov
in
adc
dec
loope
in
fucom
test
test
lods
lods
jmp
fiadds
jge
sbb
push
daa
sar
sub
jle
cld
and
fidivs
lods
mov
mov
je
in
push
fcmovne
repz
dec
cmpsb
jmp
daa
mov
rorb
xor
test
dec
xchg
fistps
cld
lea
fadd
jl
cmp
or
les
pop
orl
repz
ja
pop
out
shll
adc
int
sub
out
jbe
negl
hlt
lcall
pop
cmp
je
pop
sbb
push
out
mov
comiss
cmp
loop
cmc
mov
add
ds
sbb
mov
out
jp
insl
aaa
repz
mov
aad
jle
faddp
jecxz
or
push
mov
aad
mov
je
in
addl
sar
mov
xor
je
insb
test
fnstsw
fiadds
jne
cmp
or
popl
sbb
cmp
and
push
rcrb
xchg
out
xchg
mov
fdivrp
sbb
mov
cli
and
aam
pop
ret
jb
ljmp
add
fsubrl
test
xchg
jnp
mov
mov
movsb
jo
popa
shl
ljmp
push
sub
mov
mov
ror
or
jns
aam
arpl
fdiv
pop
fmul
test
movsb
repnz
dec
sbb
orb
xor
xchg
mov
imul
fsubl
stc
jbe
shrb
push
dec
dec
pop
stc
dec
lea
and
pop
ret
mov
aad
jecxz
cmpsb
mov
lock
sub
push
jnp
dec
xor
mov
jmp
dec
movsb
cld
inc
push
movsb
inc
push
push
dec
jae
aam
xchg
xchg
inc
jb
xchg
pop
pop
insb
jmp
imul
int3
into
icebp
jo
decl
mov
cwtl
lock
test
into
imul
loopne
js
cmp
inc
cltd
fisttps
je
cs
ljmp
in
out
fstps
int
insl
out
fiaddl
sahf
sub
popa
adc
jnp
dec
and
push
loopne
subl
jae
cld
leave
shrb
mov
jle
dec
inc
add
push
ss
fs
test
rclb
lret
add
gs
ret
xchg
mov
jne
and
fnclex
xor
les
movsb
cmp
inc
aam
clc
fisubs
movsb
add
decb
pushf
sub
push
cld
popf
int3
call
not
dec
lds
adc
jnp
mov
ds
test
xchg
xorl
int
mov
xchg
xchg
mov
or
into
push
in
adc
dec
icebp
mov
inc
and
scas
and
mov
mov
loope
cld
add
ja
mov
cmpsb
or
mov
push
add
xchg
adc
cmp
aaa
call
repz
xor
adc
mov
lock
loope
gs
adc
dec
push
test
sbb
sub
dec
outsl
lcall
fists
fucom
pop
hlt
mov
test
push
loopne
adc
loopne
popf
icebp
fs
jp
lahf
lea
and
inc
pop
fisubl
or
out
andb
ss
or
in
dec
or
bound
adc
rol
loop
ljmp
cmp
cwtl
into
jmp
hlt
jbe
jnp
jl
fs
mov
cli
shl
sub
out
inc
dec
pop
cli
push
xchg
mov
insb
div
mov
mov
push
lods
cmp
popa
sbb
or
leave
frstor
jp
int3
or
jb
or
push
je
inc
push
or
jmp
movsb
ffree
cmp
mov
daa
xchg
les
fs
arpl
ja
push
hlt
call
pop
and
testl
ljmp
mov
jmp
sub
sbb
cmpl
xchg
adc
or
loopne
inc
lcall
mov
add
daa
or
aas
push
les
movsb
mov
pusha
push
cli
decl
dec
les
pop
jecxz
jb
shlb
stos
inc
cmp
push
xor
cli
jle
adc
clc
nop
and
jne
call
iret
inc
xchg
sbb
inc
test
or
in
ja
pop
rclb
popa
or
sub
and
sbb
icebp
in
or
add
xchg
mov
or
jns
movsb
test
add
scas
push
outsb
decl
cmc
jne
mov
stos
dec
shll
dec
iret
mov
test
cli
jno
push
lea
aam
std
mov
ret
movsb
sbb
outsb
jo
iret
dec
add
xorb
and
xchg
fistps
in
fstpl
mov
xor
sbb
mov
jmp
jo,pn
leave
addr16
xchg
cmp
lods
int3
lods
inc
fdivl
scas
fstps
loope
mov
out
add
stos
and
insb
mov
jecxz
lea
mov
popf
daa
inc
out
fs
out
or
mov
jg
xchg
cmc
pop
test
and
pop
jl
ret
sub
mov
ret
inc
aad
popa
aad
cmp
dec
mov
inc
dec
mov
sub
pop
stc
inc
mov
sbb
rcr
int
ffreep
cmp
repz
and
fnsave
xlat
rcl
inc
inc
gs
adc
fnstcw
out
dec
sti
adc
xor
xchg
sahf
xchg
jno
test
cmpsl
repz
outsl
in
mov
into
sti
xchg
push
icebp
inc
popa
or
cmc
or
nop
cltd
jno
imul
out
fsin
int3
aaa
xor
popf
popf
jbe
mov
jno
aaa
data16
sub
mov
fisubl
mov
add
rcrl
test
fadd
jnp
xor
push
les
jecxz
jmp
mov
cmp
sbb
dec
sbb
movsl
pop
gs
inc
mov
jp
pop
lods
sahf
add
push
aad
fwait
scas
fisubrl
and
pop
rorl
push
jns
ljmp
leave
fisttpll
mov
mov
mov
aam
pop
adc
xchg
enter
andl
cmovno
add
pop
lock
leave
mov
scas
fsts
cli
call
mov
push
stos
xchg
test
imul
jne
imul
lahf
stos
movsb
incb
sar
loope
ret
xor
xor
mov
mov
fsubl
lahf
mov
cmp
push
jno
lods
pop
adc
out
iret
loope
jae
mov
dec
dec
mov
mov
or
mov
std
flds
cld
or
repz
and
add
pop
shrl
enter
xchg
fdivr
and
das
inc
arpl
ds
jecxz
sub
add
and
and
into
mov
cmp
add
push
in
jmp
xlat
pop
mov
shr
or
inc
xchg
fnstcw
jg
pop
sub
and
xchg
jb
pop
imul
bound
fs
ficomps
adc
xchg
adc
sti
and
dec
mov
push
sbb
mov
rclb
int3
cwtl
mov
push
inc
bound
scas
decb
in
inc
push
hlt
loop
sub
mov
push
jecxz
and
adc
clc
adc
in
and
push
jecxz
inc
or
dec
lods
cltd
mov
ljmp
popf
sbb
jb
test
scas
mov
cmpsb
pop
push
int
rclb
ja
push
and
mov
push
test
es
rcr
add
rorb
hlt
push
mov
arpl
stos
int
rcrl
cli
clc
dec
test
gs
and
cli
dec
cmp
fninit
inc
subb
push
pop
outsb
xor
xchg
sub
add
loope
dec
mov
mov
test
push
notl
pushf
nop
xchg
fisubrs
xor
or
and
xorl
shlb
mov
popa
fsubrl
ret
and
xor
cmpsb
aas
insl
fdiv
jbe
je
sub
mov
icebp
mov
mov
jmp
and
pop
in
add
mov
in
sbb
ret
jle
mov
cs
cltd
fsub
or
pop
add
adc
sbb
jnp
int3
loope
cmpl
sahf
cmp
jmp
pop
push
mov
into
dec
enter
fcoms
loope
jae
pop
cmc
scas
leave
pop
out
fstl
je
pop
jmp
cs
aaa
mov
cmc
enter
push
pop
lcall
mov
imulb
mov
inc
bound
pop
mov
mov
fwait
stos
cltd
mov
popa
paddb
scas
pop
scas
adc
sbb
loopne
into
push
jae
pop
nop
push
test
ror
xor
dec
mov
lret
mov
mov
mov
push
sub
fidivrs
pop
push
inc
cld
sub
out
push
repnz
into
jmp
jb
inc
sti
mov
data16
xchg
in
and
jecxz
imul
push
aad
pop
mov
xor
mov
je
and
ja
pop
mov
sti
xchg
jne
push
jno
insb
sbb
scas
iret
pushf
jne
mov
je
or
popf
adc
ret
cmp
sub
inc
inc
fsubr
cmp
and
addr16
mov
loope
cld
mov
mov
push
mov
loopne
fs
dec
popf
pop
data16
sub
jecxz
arpl
fisttpll
sbb
in
xor
jnp
xor
movsb
mov
mov
add
dec
lea
jg
xchg
mov
jge
rolb
lret
and
icebp
cmp
stos
xorl
or
dec
js
inc
scas
test
pop
dec
xchg
push
shll
push
shrl
mov
sbb
push
sahf
cmp
shrb
pusha
insl
dec
xchg
push
bound
cmp
mov
adc
out
push
ss
aam
jg
sub
add
mov
add
call
scas
add
add
adc
jg
sub
cmc
push
ja
jmp
loope
roll
stos
into
scas
addr16
xor
into
in
xchg
ficomps
push
testb
cmpsb
inc
ret
into
outsb
push
movsb
shr
push
test
rorl
adc
cltd
pop
popf
dec
stos
push
lods
mov
fstl
push
inc
shr
push
sbb
into
mov
or
or
mov
out
dec
cmp
and
ljmp
fwait
add
icebp
dec
outsl
xor
shl
xchg
arpl
jle
push
repnz
push
mov
push
pusha
icebp
xchg
in
jmp
jno
dec
sub
adc
pop
xor
rcrl
cli
jecxz
out
das
add
adc
daa
or
cmp
xor
cld
fisttps
dec
sbb
rol
mov
arpl
in
rcll
repnz
fisttpll
icebp
xor
adc
fists
imul
and
fs
pop
lahf
repnz
jmp
jnp
cmp
pop
roll
lahf
cld
aas
ret
push
and
rcr
add
and
push
dec
ljmp
push
outsl
xor
xchg
mov
aas
sar
outsb
cmpsb
fstl
or
cmpsb
jecxz
sahf
std
jo
inc
and
jbe
mov
testb
idivb
inc
andb
stos
pop
movsb
fisubs
call
and
pop
sbb
jecxz
add
and
jae
mov
out
es
test
ja
adc
and
cmpsb
mov
mov
mov
test
fs
cmp
sub
outsl
test
rcr
inc
arpl
push
bound
mov
inc
push
sub
cmp
mov
enter
outsb
push
or
or
dec
xchg
mov
shrl
adc
push
push
ja
imul
sbb
inc
cmp
dec
insl
sbb
daa
test
sub
call
sahf
fldenv
sub
ja
repz
mov
sub
mov
out
dec
cli
cmp
out
call
andl
jle
fstps
orl
push
arpl
add
lcall
sbb
cmpsl
cli
inc
add
repz
jb
movsb
adcb
jecxz
es
call
jecxz
push
cmpsl
scas
cmc
decl
pop
out
enter
mov
aas
jle
dec
push
jmp
xchg
movsb
jmp
mov
dec
mov
jg
push
cmpsb
jle
mov
loopne
adc
jns
push
jp
movl
loopne
into
sub
fimuls
cmp
push
inc
jp
in
sub
jecxz
lock
insb
adc
in
test
mov
push
pop
sbb
jbe
inc
fwait
xchg
or
adc
dec
clc
xchg
adc
mov
outsb
arpl
ret
xor
je
std
movsb
fildll
jmp
stos
aas
adc
cmpsl
dec
push
lea
mov
jp
sar
jmp
imul
cmp
dec
xchg
xor
xchg
out
cwtl
mov
adc
adc
sbb
pop
lods
icebp
sub
out
xchg
jl
xchg
xor
imul
fisubs
adc
lods
in
xchg
stos
arpl
js
pop
and
push
xchg
aad
call
jb
arpl
js
jp
or
jbe
sub
push
in
into
dec
or
mov
push
movsb
dec
sti
pop
jecxz
and
or
xchg
or
sbb
cmp
adc
clc
mov
cmp
and
jmp
add
insl
lret
mov
sbb
push
pop
divl
test
sub
jl
and
mov
cmc
rcrl
jne
test
lock
mov
add
in
add
fucom
and
cmp
adc
push
ficoms
and
xor
sub
and
push
push
inc
mov
hlt
add
sbb
std
imul
or
lahf
in
xorl
dec
inc
xor
mov
out
or
inc
jb
adcl
fisubl
cmp
mov
imul
xchg
cltd
sub
push
popa
in
mov
ds
in
popf
cld
dec
int3
cmp
loopne
and
mov
adc
test
int3
push
subb
test
mov
cli
in
pop
dec
int
hlt
pushf
or
jmp
jmp
push
mov
mov
mov
call
incb
add
and
mov
adc
inc
mov
adc
rcll
fnstenv
jecxz
push
cmpsl
mov
push
in
mov
pop
stc
fnstenv
push
into
mov
lods
pop
ret
sub
jns
ret
icebp
adc
fcomp
in
shl
mov
shll
and
cld
push
adc
ja
or
mov
cmc
pop
arpl
ds
int3
stos
jle
dec
adc
ja
xorb
in
inc
push
rcll
xor
into
adc
test
push
rcll
scas
and
movsb
adc
das
ljmp
fnstenv
pusha
mov
loope
aad
loope
aad
cmpb
shll
rorb
loopne
mov
icebp
mov
das
mov
fstpl
push
ret
icebp
or
mov
push
clc
stos
ffreep
sbb
filds
in
mov
xor
lods
mov
imul
xchg
arpl
push
and
enter
push
out
xlat
andl
add
arpl
jmp
cmpsl
jecxz
mov
sbbl
xchg
fucomp
or
mov
shll
test
xchg
ffree
xor
rcrl
dec
jl
cmpsb
rorl
ret
popf
aad
mov
pop
dec
push
addr16
dec
lods
adc
xchg
movsb
dec
leave
cli
subl
xchg
push
fdivrp
fcomip
push
clc
lcall
aaa
jnp
movsb
xor
cwtl
add
or
push
jecxz
insb
ja
dec
loopne
sub
scas
jecxz
cmp
clc
outsb
push
aaa
out
fcomps
sub
inc
loope
cmpsl
add
arpl
inc
aad
insb
push
insb
dec
in
cmp
popf
clc
inc
fucomi
loope
popa
xchg
addr16
arpl
xor
pop
movsl
mov
sbb
sbb
sub
mov
mov
aam
popa
loopne
xchg
jmp
dec
mov
and
push
mov
out
fists
out
pop
xchg
pop
iret
inc
into
inc
mov
push
in
leave
push
pop
shlb
scas
in
adc
ret
mov
stos
mov
ret
cld
ljmp
les
out
in
mov
mov
shlb
aad
call
psubusw
adc
out
les
fsubrp
mov
loope
hlt
sub
sbb
shll
movsl
inc
adc
jl
adc
cmp
cld
jne
mov
lahf
cmp
xchg
fdivl
or
fs
outsl
cld
mov
mov
das
pop
icebp
adc
lds
test
jbe
ret
stc
push
dec
dec
rcrl
insl
dec
cmp
jl
push
dec
pop
push
fidivrs
add
or
jb
cmp
sub
jmp
cmp
movsb
pop
in
pop
mov
push
js
push
mov
lods
fcompl
lods
xchg
sub
add
xchg
mov
rorl
xchg
pop
jmp
mov
push
adc
cmc
mov
jp
push
mov
xchg
leave
jno
mov
call
and
adc
xchg
pop
cli
out
lods
cltd
xchg
in
xchg
iret
mov
cld
mov
test
out
cmp
jo
or
mov
jp
xor
adc
cli
out
sub
add
stc
adc
inc
pop
sarl
pop
shl
test
push
and
push
jge
ds
jmp
js
xchg
xor
loopne
daa
cmp
icebp
sarl
sub
mov
movb
xor
xchg
mov
jmp
jecxz
pusha
fisubrl
hlt
cmc
ffree
xchg
mov
mov
fstp
inc
call
push
adc
lret
cs
in
nop
xor
cld
jnp
cmp
popa
push
pop
insb
xchg
sub
bound
test
mov
dec
mov
cmpl
into
xchg
jne
and
add
fstp
movsl
sub
sti
and
rep
dec
jg
cs
aam
fmull
arpl
mov
mov
je
fidivrs
fyl2xp1
xchg
sub
shrl
mov
jne
xchg
push
push
pop
mov
cld
dec
hlt
cmpsb
cmp
lcall
popf
pop
movsb
dec
jo
sahf
jbe
andl
mov
adc
fninit
xor
jbe
xchg
in
xor
lods
cmp
stos
scas
add
sbbl
sbb
jno
hlt
push
je
push
dec
stos
std
aam
clc
sbb
bound
mov
neg
dec
jge
icebp
loope
inc
out
push
addr16
and
cli
dec
clc
cld
lds
enter
or
call
inc
in
jmp
cs
cmpsb
pop
in
ss
lahf
sti
fistpll
iret
mov
outsl
pusha
nop
fiadds
sub
fdivrs
aaa
call
jmp
dec
cmp
aam
icebp
mov
or
clc
mov
xchg
cld
daa
jmp
inc
push
orl
xchg
fbstp
mov
push
fcoms
dec
jl
pop
inc
sub
repnz
push
fnstsw
ror
push
daa
fistpll
xchg
mov
pop
xchg
push
and
or
test
sbb
enter
lods
jo
ja
cltd
mov
test
hlt
push
mov
and
mov
sub
sbb
jbe
loopne
int
lods
ss
jecxz
loope
iret
jmp
lret
data16
lods
lcall
jno
mul
loopne
jl
sub
cmc
push
push
or
rcr
mov
ret
stos
inc
lds
wrmsr
popa
fs
stc
movsb
mov
mov
shlb
in
dec
jecxz
shlb
push
ljmp
lahf
pop
rcll
or
fsubr
ljmp
fmull
aad
cltd
push
pop
pop
dec
cmp
cs
push
loope
rclb
push
daa
fwait
adc
mov
sub
loopw
pop
fsubs
lret
push
jbe
sbb
out
mov
push
fs
cmp
leave
mov
outsb
jb
ss
gs
cwtl
xor
in
xchg
jl
pop
fdivs
pop
mov
sbb
mov
daa
dec
and
sbb
sub
cltd
adc
pop
mov
push
pop
lods
loop
mov
bswap
cld
mov
aaa
or
aad
vpshufd
enter
aas
mov
mov
aad
outsb
daa
sar
mov
cmp
inc
aaa
sub
roll
les
cmpsl
pop
test
xchg
dec
data16
ljmp
mov
inc
cld
mov
cmp
sbb
push
cld
or
xor
or
and
add
ja
fldl
jp
add
jp
sub
dec
mov
fdivrl
lret
add
cmp
jecxz
jb
pop
sbb
push
fmulp
shrb
dec
insb
data16
xchg
and
stos
test
cmc
iret
lock
cld
imulb
divl
out
loopne
test
add
push
scas
ja
push
adc
sahf
dec
cmc
shll
sti
shlb
into
pop
ret
lods
test
movsb
sbb
imul
ja
adc
int3
mov
insl
inc
out
mov
out
into
mov
in
or
jle
ret
icebp
mov
mov
into
fnstcw
int3
out
xchg
mov
cmp
popf
faddp
mov
inc
ljmp
xchg
mov
sub
adcb
lcall
push
dec
push
cmp
add
push
jecxz
adc
ljmp
popf
rclb
loope
jne
mov
insb
mov
je
xchg
imul
cmp
in
idivb
js
jns
sbb
mov
cli
inc
sahf
cmc
or
xlat
dec
and
iret
movntq
out
mov
ficompl
faddl
lods
repz
hlt
sub
xchg
mov
jmp
sar
rcll
or
insb
xor
sub
stc
jns
lret
icebp
xchg
mov
cmp
mov
lcall
sahf
dec
xor
or
pop
dec
in
jecxz
mov
pushf
adc
mov
cmpb
pop
xchg
inc
ljmp
pop
in
xor
sti
xor
clc
and
jecxz
adc
outsl
ret
sbb
sub
add
jne
or
into
clc
stos
fisubl
push
aad
lock
loope
lock
nop
mov
test
clc
cmp
mov
xor
cmp
test
xor
fisubrs
hlt
into
dec
test
sub
outsl
cli
in
cld
movsl
out
xor
cwtl
leave
jg
in
adc
xchg
ret
jne
aaa
mov
js
aam
pop
cwtl
rcrl
lret
xor
clc
xchg
push
popa
cmpsl
ja
adc
push
inc
inc
ss
cmpsl
xchg
stos
cmpsb
fsubr
cld
in
push
pop
loopne
aad
push
stc
xchg
mov
leave
or
push
xor
sbb
fwait
inc
aad
out
lret
pop
pop
pushf
pop
adc
out
sbb
push
or
push
and
xchg
fsubs
mov
nop
pop
and
int
fs
int3
or
fstl
cld
hlt
and
push
dec
aad
repz
faddp
pusha
push
and
or
and
test
sahf
dec
lock
sbb
lret
mov
cli
in
addr16
mov
shrb
mov
sub
je
daa
rclb
dec
pusha
in
mov
cs
stos
stos
xchg
iret
jg
roll
aad
rcrl
sub
fisubs
insb
push
mov
shl
pop
push
adc
call
mov
mov
cmpsl
inc
and
mov
jns
sub
loope
sub
out
std
insb
xor
push
mov
lahf
loopne
popa
inc
sahf
pop
iret
and
and
push
ret
imul
mov
or
arpl
movsb
pop
lcall
mov
testb
pop
jecxz
lds
mov
mov
lods
xchg
jae
xchg
icebp
fldl
pop
push
mov
arpl
pop
sbb
jae
test
js
mov
insb
pop
xchg
fimuls
arpl
jmp
loopne
fwait
adc
ja
ret
in
pop
inc
sahf
cwtl
data16
loopne
clc
les
cmpb
and
adc
in
inc
mov
ror
fs
call
mulb
dec
jmp
pop
icebp
mov
stos
inc
popf
stos
popa
mov
jmp
lock
pop
aaa
mov
inc
in
mov
add
stos
lods
fcomps
jecxz
dec
dec
fidivrl
clc
clc
cmc
cmp
rdtsc
add
lret
leave
pop
sub
ljmp
in
jmp
mov
jb
int3
xor
adc
xchg
lock
pop
jmp
ljmp
jecxz
mov
out
add
scas
ficompl
pop
mov
mov
cmc
sub
aam
add
icebp
imul
popf
arpl
sub
jae
xchg
push
shll
je
inc
lcall
jmp
and
adc
ljmp
in
fisttpll
jb
mov
fisubrs
jb
out
sbb
jle
xlat
cli
adc
mov
fs
stos
aam
dec
xchg
or
in
ja
pusha
ja
gs
ss
rolb
subb
dec
loope
xor
enter
loope
add
xchg
rcl
cmpsb
ret
int3
pop
in
mov
in
inc
lahf
loope
imul
jecxz
ljmp
mov
xor
mov
repnz
idivb
bound
pop
loope
xor
and
rorl
jnp
je
insb
scas
xchg
in
sub
outsb
sub
gs
dec
lock
pop
mov
ror
xchg
scas
push
insb
enter
insl
cld
add
mov
ljmp
jmp
or
jecxz
mov
push
cmp
add
lahf
ret
lds
add
jns
cmp
push
cmp
faddl
in
xor
or
dec
ja
xlat
clc
and
and
add
add
cwtl
push
push
jno
xchg
pop
orps
mov
jecxz
cmpl
mov
int
push
icebp
bound
mov
pop
movsl
jmp
loope
cli
and
movsb
xchg
test
jmp
pop
jb
xchg
and
pop
clc
mov
loope
mov
sbb
loopne
mov
rclb
in
jle
xchg
mov
cld
hlt
repnz
jecxz
into
inc
fldl
push
xchg
in
pushf
loop
insb
dec
cld
rorb
sahf
inc
jecxz
test
fistpll
mov
aas
in
adc
ja
xor
stos
les
std
cmc
or
movsb
dec
in
inc
fidivrs
push
cmp
jmp
rcll
xchg
nop
out
daa
lea
push
cmp
cmp
or
notb
jmp
js
or
pusha
in
cwtl
mov
fadd
cwtl
into
jnp
adcb
add
cltd
enter
in
mov
push
repz
jecxz
into
outsb
inc
xor
and
sbb
xchg
mov
dec
pop
inc
or
aad
daa
cltd
adc
mov
bound
pop
jecxz
mov
adcl
xchg
negb
mov
jmp
rcll
mov
adcl
fsubrl
and
int
push
fwait
loopne
rcll
nop
adc
les
and
cld
jae
xlat
inc
mov
sbb
out
rcll
out
adc
call
icebp
jne
aad
lock
insb
xchg
loope
sub
fs
sub
test
imul
call
and
pop
js
and
scas
in
push
mov
ffreep
cli
mov
push
jp
push
roll
leave
stos
mov
sti
and
aas
test
pop
es
push
clc
imul
mov
clc
test
push
lahf
dec
push
xchg
in
mov
imul
or
mov
xchg
out
xchg
sub
mov
cmp
xchg
pop
add
pop
daa
jecxz
loope
movsl
lret
int3
popf
dec
fdivrl
fiadds
push
das
test
xchg
pop
xchg
fwait
rcrl
cwtl
adc
lret
loopne
popa
lds
sahf
cli
daa
xor
mov
repnz
flds
jmp
mov
repz
mov
in
and
lock
mov
dec
xlat
insl
rcr
push
dec
scas
stos
mov
stc
ja
les
fsubrp
jle
and
dec
lods
push
popa
fists
shr
push
pop
push
negb
sub
pop
jl
std
ret
xlat
mov
cltd
jbe
in
fldt
fst
call
dec
leave
loopne
imul
jno
mov
into
int
imul
loopne
dec
rorl
push
idivl
cmpsl
in
adc
fisubl
test
mov
add
xchg
mov
cmpsl
jmp
lods
arpl
addr16
js
popa
ror
mov
clc
aam
ret
jb
push
cld
addr16
or
fmul
lock
jmp
push
out
sti
roll
jmp
or
xchg
in
xchg
fists
arpl
or
testb
enter
rclb
push
loopne
mov
and
loope
push
jp
fsub
ftst
in
ficoml
jecxz
push
es
sbb
xlat
mov
xor
mov
stos
js
jecxz
stos
add
mov
push
sbb
cmp
loopne
sbb
jb
out
mov
ljmp
cli
jnp
lcall
ja
push
push
icebp
shrl
in
outsb
es
fs
xor
sarb
push
test
out
fcompl
adc
test
loopne
mov
sbb
cmp
sarb
dec
xchg
jmp
mov
sbb
out
fisubs
sub
lret
fbstp
mov
fimull
and
ficomps
mov
insl
pop
shlb
xor
shr
adc
enter
lock
in
push
push
mov
fidivs
ret
fdivr
pop
jmp
adc
pavgb
out
sbb
in
mov
pop
pop
xlat
movsb
in
mov
cmc
cmpsb
call
lret
sbb
incb
mov
mov
hlt
and
xchg
fsubs
out
xchg
shrb
shlb
sbb
loopne
movsl
ljmp
movsb
es
lcall
mov
je
pop
mov
scas
mov
lock
sbb
aam
push
fcoms
neg
ror
ljmp
iret
xor
fisubl
jns
adc
pop
push
in
and
gs
jecxz
rcl
int
rcr
sbb
movsb
aam
out
shl
lods
sahf
aam
shll
lods
sbb
sbb
pop
jbe
movsb
pop
js
es
add
div
mov
pop
ljmp
pop
sbb
repnz
jae
push
adc
dec
jae
push
aad
push
in
inc
push
lretw
add
dec
mov
movsb
lods
jecxz
sub
inc
inc
or
jmp
add
jle
aad
leave
push
mov
cltd
leave
testb
jo
in
jne
sbb
arpl
fbld
lcall
pop
call
xchg
loopne
mov
pusha
and
ljmp
xchg
fsubp
or
sbb
sbb
enter
into
fidivrs
cmp
pop
shll
xchg
mov
inc
fmull
inc
jmp
loope
adc
mov
jmp
push
mov
shl
daa
iret
movsb
jmp
pop
lret
fstpl
sbb
xchg
dec
cwtl
dec
mov
adc
loope
into
sbbb
ret
lcall
bound
call
shrl
ret
add
loopne
in
rcll
aam
stos
push
imul
xchg
inc
pusha
std
inc
dec
cli
xchg
aam
pop
repz
nop
testb
jb
jle
imul
icebp
add
add
filds
xchg
std
test
hlt
cmpsl
or
push
push
out
dec
aam
popf
aad
stos
cli
cld
mov
adc
sahf
shr
push
xor
out
jmp
ljmp
mov
in
test
imul
adc
jb
rclb
fiaddl
mov
loopne
leave
in
mov
push
mov
mov
mov
adc
sub
fldcw
adc
shl
push
cmc
dec
fucomip
ljmp
test
repz
loop
les
inc
jle
ret
movl
push
sub
das
lock
jne
pop
notb
mov
inc
aam
enter
add
inc
lods
mov
jmp
shrb
lods
inc
and
aad
subb
aam
insb
mov
pop
fdiv
mov
xchg
jae
dec
adc
in
test
fsubr
fimull
aad
pop
imul
ljmp
mov
aad
stos
inc
fs
loop
shl
loope
cmc
jle
pop
cld
xchg
mov
push
out
add
push
mov
clc
xchg
push
imul
mov
cmpsb
ret
test
lea
pop
aam
and
lcall
ret
fsubl
int
in
jecxz
clc
pop
sbbb
aaa
sti
cli
xchg
add
repnz
pop
add
ffree
push
fimuls
xlat
mov
sub
inc
out
ficomps
lret
push
mov
ficomps
in
sbb
fdivs
sbb
arpl
and
movsb
push
and
out
sahf
jb
mov
shll
jecxz
les
pop
out
jno
popa
and
fmul
repnz
call
ljmp
xchg
jecxz
push
ret
cltd
fildl
and
je
mov
ljmp
push
ljmp
xchg
popa
int
mov
and
xchg
fildll
pop
movsl
sub
ds
push
jmp
les
pop
xchg
lea
scas
mov
fisubs
adcl
das
call
push
sbb
mov
xlat
jbe
popf
icebp
mov
push
and
add
sahf
dec
stos
pop
iret
push
push
icebp
out
hlt
lods
pop
shrl
out
add
imul
stc
sub
lret
fidivl
loopne
les
out
push
and
and
mov
sarb
pop
hlt
sub
dec
fstpl
jmp
sub
rorb
in
jp
mov
push
sub
lret
mov
xchg
rcr
sub
aas
add
stos
or
push
push
sub
jmp
test
adc
outsb
xor
in
lods
or
sti
jmp
add
fbld
into
and
aad
push
push
inc
es
in
sbb
cmc
fistpl
mov
push
rcl
in
jmp
adc
fcmovnu
enter
movl
cltd
les
pop
out
push
sti
sti
in
adc
inc
adc
lock
lcall
leave
sti
int3
mov
loopne
daa
add
xlat
pushf
jecxz
sbb
aad
out
lcall
fistpl
jmp
cli
loope
xchg
pop
rolb
adc
movsb
repnz
ror
test
test
std
mov
sahf
push
jle
mov
push
mov
and
movsb
mov
out
sub
lahf
lret
pusha
push
clc
mov
in
lahf
frstor
mov
jmp
call
hlt
clc
lret
sub
fistl
fdivs
xor
mov
out
fsubr
cli
cmc
hlt
add
iret
inc
sub
dec
xorb
cmp
and
jle
cmp
push
neg
add
sahf
cmp
pop
or
ds
push
dec
stos
push
popf
enter
repz
cld
adc
loopne
mov
jno
add
int
xchg
pop
jnp
and
cltd
incb
icebp
hlt
rcl
dec
adc
shlb
push
ja
jno
cmpsl
xchg
testl
cltd
pop
sbb
xchg
jmp
add
mov
xchg
xchg
test
pop
stos
stos
lahf
aad
loopne
cwtl
orb
sti
ljmp
push
mov
mov
lcall
dec
sub
jbe
shll
dec
sbb
test
test
lods
fsubrs
scas
movsb
jecxz
pushf
stc
test
imul
call
mov
imul
jo
test
jl,pn
in
in
cmp
hlt
in
das
pop
mov
inc
sub
shr
imul
fisubrs
stos
sub
out
xor
popf
fldenv
fisttpll
stos
je
sbb
xor
hlt
xchg
enter
in
fs
push
leave
icebp
mov
xchg
repnz
adc
in
pop
mov
mov
sbb
test
mov
sahf
jecxz
sbb
xorl
ret
shll
push
repnz
jecxz
xor
pushf
daa
fdivs
cli
jmp
ret
enter
movsb
fnstsw
mov
push
jne
in
or
adc
ljmp
inc
movsb
inc
aaa
xor
lahf
cwtl
in
adc
jge
insb
push
or
inc
and
push
test
xor
sahf
int
mov
jmp
loopne
mov
cmp
mov
xchg
sub
sbb
cmpsl
push
jp
push
sbb
adc
and
cwtl
jecxz
insb
in
jge
jecxz
ss
fimuls
sub
push
popf
icebp
popf
lea
mov
pop
ljmp
fcomps
and
ror
cmp
outsl
jg
push
push
push
sub
test
push
repnz
mov
dec
push
xor
wbinvd
aas
cld
sub
inc
and
cmpsl
fisttpll
jae
out
and
in
mov
loope
imul
sub
mov
stos
jmp
adc
sub
out
shll
es
in
push
movsl
subl
hlt
push
sub
jp
imul
pop
ljmp
sub
push
mov
pop
pop
push
pushf
fwait
jbe
arpl
fldl
pop
lea
js
dec
push
sahf
insl
or
sub
pop
jnp
pop
adc
ljmp
inc
and
test
and
andb
addr16
enter
scas
mov
push
aad
jmp
mov
mov
in
jg
daa
lret
push
inc
push
pop
mov
fiadds
mov
arpl
into
int3
fidivrl
stos
xchg
push
jne
in
idiv
inc
mov
out
not
xor
pop
stos
add
ret
icebp
add
out
test
sahf
int3
inc
ret
sbb
mov
outsb
ret
testl
push
jmp
mov
stos
fsub
arpl
test
rcl
jecxz
movsb
clc
out
fcmovb
xchg
sahf
movsb
data16
movsb
repz
icebp
xchg
rol
cmp
loop
ds
loop
cmpsb
cld
sbb
std
out
out
cmpsb
add
lds
leave
ds
in
sub
data16
sahf
dec
mov
call
sbb
add
pop
adc
push
push
and
jecxz
sub
arpl
shl
loope
xor
in
xlat
shll
xchg
dec
lds
gs
in
pop
scas
sti
pop
cmp
pop
gs
add
or
add
push
cmpsb
mov
push
pushf
cld
inc
mov
pop
stc
pusha
push
fisttps
stos
lahf
aad
pop
int3
pop
mov
insb
xor
xchg
mov
addr16
in
popa
push
mov
cmp
push
mov
jmp
mov
popf
fldcw
push
lods
dec
sub
sub
popf
pop
in
cmp
push
std
gs
inc
dec
or
adc
stc
stos
sub
imul
int
cmpsb
subw
aam
sbb
sbb
mov
leave
mull
pop
shll
mov
sbb
jmp
fsubrl
jmp
loopne
icebp
cmp
ret
push
inc
out
adc
jbe
sbb
mulb
ljmp
stos
adc
les
movsb
std
andb
jecxz
add
in
jmp
fiadds
and
cmpsb
movsb
into
mov
sahf
int
xchg
out
push
push
pop
inc
jp
icebp
pop
adc
int
in
fsubp
repz
mov
jmp
sahf
in
ja
xlat
inc
adc
jae
rol
call
leave
movsb
nop
and
aaa
outsl
test
xchg
arpl
push
adc
loopne
and
and
movsb
stc
loopne
nop
hlt
sub
int
repnz
cltd
les
movsb
in
push
inc
or
ret
add
hlt
pop
stos
dec
cltd
loope
and
imul
fs
leave
aaa
jae
cmc
add
fsin
jmp
movsb
cli
mov
mov
mov
sete
jbe
mov
movsb
imul
mul
cmp
scas
xlat
jae
fidivs
popa
fldt
jge
jnp
cwtl
shlb
lret
popa
adc
enter
push
rolb
iret
inc
mov
cs
jp
mov
in
fucom
fcoml
aam
aaa
and
and
mov
fisttpl
push
shrl
addr16
sbb
stos
mov
sub
popf
icebp
fildll
xchg
mov
push
pop
lret
pop
adcl
dec
push
push
sub
test
hlt
sub
lods
push
push
insb
sti
sub
cwtl
jmp
inc
stos
gs
std
movsb
fstl
sbb
pop
sub
lcall
sub
pop
lea
rcrl
xor
fs
adc
pop
pop
call
in
faddp
adc
iret
in
inc
movsb
icebp
mov
in
or
sarl
lcall
into
je
out
jmp
mov
sahf
xchg
int3
int3
es
into
push
rcl
cmc
fcomip
xchg
or
add
sahf
in
dec
sbb
cli
cld
into
ja
jmp
jp
inc
ficoms
ljmp
jb
int
fldcw
push
std
xchg
adc
insb
mov
mov
out
mov
cmc
jns
push
and
aam
and
and
mov
adc
and
add
add
jb
out
adcl
pushf
dec
mov
sub
pop
sbb
fst
push
popf
enter
sbb
pop
mov
arpl
push
push
fisubs
or
int3
pop
sbbl
fnstcw
xor
add
stc
push
mov
jmp
adc
push
js
mov
jmp
shrl
sub
stos
out
push
cmpsb
sti
cmp
add
je
notl
scas
bound
pop
int3
pop
out
pop
jo
pop
notl
neg
pop
sbbl
shll
int
dec
sub
inc
add
les
adc
aas
ret
cwtl
rolb
sti
leave
loope
lret
mov
push
ficomps
pop
testb
clc
in
xchg
fldenv
mov
cmc
mov
push
push
ja
push
int3
shl
out
add
test
scas
mov
rcr
je
sbb
adc
xchg
mov
push
ljmp
das
mul
int
fidivl
push
in
sahf
jl
adc
mov
cmp
sub
xor
icebp
mov
arpl
sbb
add
xchg
fwait
pop
push
push
inc
mov
leave
dec
fcoml
in
fcom
and
sbb
cmp
mov
ret
shll
sbbl
in
bound
leave
mov
xchg
and
scas
mov
adc
filds
pop
popa
sahf
fistpll
xchg
lock
cs
xor
mov
push
push
pop
sti
ljmp
lahf
shrl
sub
jmp
ret
fisubrs
loope
adc
stc
imul
sub
shl
xchg
jecxz
jb
in
xchg
pop
mov
stos
lods
dec
test
jne
ljmp
pop
pop
loop
sbb
out
jbe
popf
stc
data16
hlt
es
fsubp
or
inc
xor
mov
in
cmp
pop
rcl
ljmp
push
or
dec
or
adc
lods
and
jecxz
mov
push
push
jmp
inc
hlt
lods
loopne
ficoms
test
popa
stos
and
mov
lods
add
dec
cmc
stc
lods
icebp
dec
ss
iret
or
inc
popa
add
popf
ds
adc
or
int
movsb
jmp
in
test
mov
cltd
and
int
sub
imul
mul
xorl
stos
fmulp
push
sahf
je
test
test
push
in
loope
pop
enter
arpl
mov
jp
loope
roll
fnstcw
repz
int3
jns
and
jo
pop
jae
dec
mov
sbbl
mov
mov
mov
negl
or
pop
sbb
mov
push
shl
ret
or
clc
sub
jbe
sbb
loopne
sub
hlt
lahf
pop
push
dec
fildll
cs
pop
sub
pop
scas
scas
int
ljmp
stc
mov
adc
add
daa
ret
sub
xchg
outsb
cwtl
test
stc
sub
fisubrs
sub
adc
jle
int3
in
jns
std
jbe
push
stos
sti
imul
negb
sbb
fsubl
lods
cli
dec
jb
test
sub
int
fiadds
lock
cmpsl
hlt
add
aaa
das
ljmp
rclb
out
and
in
stc
push
rcll
and
movsb
in
fisubrl
xchg
fcos
movsb
repnz
stos
iret
jno
cmc
sbb
pushf
jmp
ljmp
xor
movsb
les
test
nop
and
pop
pop
inc
lods
adc
std
and
mov
setae
popf
lock
mov
dec
push
fisubrs
xor
fstps
int3
movsb
out
loopne
or
ljmp
loope
loopne
shr
cmc
nop
fdivrl
xor
xlat
popf
loopne
pop
cmc
enter
or
in
mov
aad
in
sti
mov
paddusb
roll
push
ljmp
sub
jecxz
mov
neg
in
fdivp
mov
repz
cld
in
neg
push
roll
mov
push
pusha
jp
and
xchg
mov
jae
and
scas
mov
pop
lock
and
jecxz
lock
dec
mov
lods
xchg
andb
aam
lcall
scas
mov
inc
sbb
inc
into
loopne
mov
push
shl
add
sbb
in
fistps
in
loopne
push
es
push
loope
mov
sbb
orb
enter
fs
aas
insl
rorl
xchg
cmp
cli
data16
push
lret
cld
outsb
jb
sbb
imull
or
xor
out
loope
movsb
cld
xor
pop
push
mov
inc
lahf
adc
xor
xor
mov
iret
jge
cmp
xor
cwtl
and
je
jne
inc
cld
cmp
popf
aaa
ret
add
testb
int
push
add
orl
stos
enter
out
insb
aam
movsl
lods
fsubrp
mov
in
popa
and
stc
push
dec
dec
int3
lret
aas
ret
mov
and
aam
pop
jb
or
mov
or
movsl
cmpb
push
dec
imull
cmp
loopne
lock
jnp
add
cmpsb
iret
sub
into
and
push
sub
add
push
lods
adcl
cmp
cmp
sahf
es
mov
movsl
pop
hlt
lret
out
sbb
pop
xor
hlt
sub
loope
sahf
scas
shll
sbb
sub
xchg
adc
aam
add
insb
push
leave
adc
hlt
in
push
jg
not
ret
shl
mov
push
sub
mov
mov
adc
dec
mov
add
mov
jecxz,pn
cmp
pushf
ljmp
mov
je
jl
dec
jg
rcrl
or
mov
sbb
lea
pop
aad
push
bound
loopne
pop
loope
xor
mov
lea
xlat
in
cmc
jb
add
scas
imul
xchg
testb
leave
sub
ja
mov
adc
sbb
mov
andl
les
cmp
rorl
mov
inc
ficoms
mov
and
movsb
mov
sarl
mov
enter
pop
pop
mov
sbb
shrl
lock
mov
push
lock
push
in
mov
jno
stos
test
andb
out
pop
movsl
cmp
xchg
pop
in
fsubrs
mov
cltd
aad
inc
mov
fbld
jae
add
inc
or
testb
out
pop
push
shrl
addl
or
and
jmp
cmpsb
sar
cmp
fucomip
xchg
movsb
stos
sub
xor
leave
notrack
shll
stc
push
pop
shll
mov
cmp
push
push
fstl
pop
hlt
inc
lcall
mov
stos
mov
inc
ljmp
loop
dec
cmp
stc
add
sub
les
in
sub
ljmp
in
ljmp
imulb
inc
mov
push
in
pop
rolb
inc
in
sub
ret
xchg
fsubl
xor
jmp
and
fisubrl
add
jl
aad
aad
iret
loopne
movb
aam
cmp
ljmp
xchg
bound
push
out
shr
into
insb
cmp
ret
jae
mov
and
pop
scas
push
clc
arpl
out
popf
lahf
icebp
push
test
fs
into
xor
ror
jmp
add
ret
inc
adc
sti
rcr
jne
push
ljmp
lods
leave
inc
aaa
pop
das
sub
shll
in
ja
mov
pop
xlat
sub
jecxz
push
fcmovnbe
scas
rorb
test
test
in
aam
jb
rorl
imul
jmp
mov
clc
fnop
or
pop
sbb
aam
adc
push
mul
and
repz
push
in
or
repnz
xchg
popf
aad
in
jnp
xor
insb
push
stos
ljmp
hlt
push
pusha
fidivl
bound
rolb
mov
in
dec
daa
cmp
sub
cld
shlb
push
cld
cltd
push
out
into
les
outsl
shl
out
lcall
rorl
out
sub
pop
pop
xchg
jge
xchg
jmp
jge,pt
int3
adc
andl
jge
inc
loopne
les
daa
inc
fstl
mov
jbe
js
repz
out
roll
cmp
stos
fstp
sub
mov
cmc
mov
xor
cmc
adc
stos
xchg
or
xor
std
inc
push
mov
loope
or
repz
int
test
sbb
std
ds
rolb
xchg
mov
cmp
sbb
push
in
mov
sub
lods
sahf
lods
cmpl
lods
popa
cs
repz
daa
jb
ds
fiadds
cmpsb
mov
xlat
call
js
xchg
pushf
lds
cmp
outsb
fdivr
fs
cwtl
std
xchg
add
inc
mov
loopne
push
lds
push
daa
orb
cmc
lods
xor
mov
int3
popa
inc
mov
int3
dec
or
cmp
mov
mov
pop
loopne
sub
ror
arpl
mov
int3
xor
popf
jmp
push
ffree
shl
sbb
mov
jge
jmp
popa
in
xchg
cmpsb
fnstenv
in
mov
jmp
test
lahf
test
ficoms
addl
push
mov
adc
rorl
shl
testb
out
punpckhbw
aaa
push
enter
adc
adc
dec
mov
sub
ljmp
fdiv
mov
jae
and
les
adc
xchg
out
stos
sbb
in
push
push
mov
xchg
mov
lods
int
dec
call
jle
repz
je
xchg
add
mov
in
push
or
fdiv
in
lcall
xchg
pop
xchg
cli
jb
jg
inc
fsubrs
in
std
fadds
mov
loopne
int3
aad
push
jecxz
lret
repnz
add
push
lret
mov
idivb
push
push
mov
fcmove
and
add
and
xchg
clc
fst
out
cli
push
mov
shlb
iret
jp
mov
loope
rorl
dec
and
test
push
ret
push
int
sub
cltd
add
dec
and
leave
sub
fcmovne
push
and
out
add
call
sub
jmp
xchg
or
cmp
rcll
stc
les
test
xchg
enter
les
fdivrl
lahf
rolb
sub
fwait
push
dec
push
pop
adc
cmp
sub
test
jecxz
and
dec
adc
into
push
jae
in
and
cs
mov
hlt
sub
cmp
xor
js
aam
mov
dec
xor
xchg
lds
out
das
loopne
cmp
jle
int3
adc
neg
je
add
mov
mov
jb
sbb
dec
mov
icebp
scas
es
xor
into
mov
ret
pop
push
push
cmp
call
lods
push
sbb
and
mov
ret
icebp
outsb
js
mov
fucom
sub
fsubs
cmp
adc
sub
std
movsl
test
test
sbb
xchg
arpl
pop
cmp
push
in
bound
xchg
int
or
push
xor
outsb
stos
lock
jns
pop
and
cltd
and
sub
jmp
cmpsb
jae
jno
mov
xchg
stos
das
jle
pop
inc
decb
mov
and
ret
mov
mov
rdtsc
jno
pop
call
adc
in
cwtl
icebp
fstpl
enter
lret
or
mulb
jb
inc
mov
movsb
push
cmp
aam
enter
pop
pop
sbbb
ret
lock
pop
jbe
lret
ljmp
stos
nop
dec
inc
flds
js
sbb
stc
mov
gs
jl
popf
xor
into
fisttpll
and
rolb
xchg
fucomp
ret
in
bound
icebp
push
repnz
pop
mov
push
cwtl
sub
ror
mov
pop
repz
and
leave
and
jnp
lea
push
xor
add
test
and
je
mov
dec
popa
mov
jmp
out
enter
fildll
cmp
sub
bound
jg
cli
clc
adcl
push
jg
or
mov
inc
loope
sbb
stc
and
loop
push
xchg
test
or
add
add
aam
loope
aaa
ds
lock
cld
and
fildll
jl
pop
pop
ja
adcb
adc
xchg
aaa
icebp
clc
xor
rep
rcl
test
cmc
jnp
xor
lods
pop
inc
sub
ds
stos
ret
or
stc
int3
loope
xchg
pop
adc
and
cs
scas
int
pusha
add
push
dec
dec
or
adc
aam
stc
dec
inc
dec
insl
enter
mov
pop
in
jns
inc
inc
mov
lahf
jne
adc
cmc
sahf
popa
mov
pop
and
insb
out
mov
sbbb
and
xchg
and
pop
sub
inc
and
inc
mov
js
leave
mov
clc
gs
inc
shll
xchg
cmp
or
xchg
loope
ror
mov
loopne
aad
mov
jmp
inc
push
js
adcb
packsswb
push
popa
push
lock
call
jmp
jecxz
pop
aam
xchg
std
xor
dec
in
sub
dec
out
andb
shrb
or
or
sbb
jecxz
aam
dec
icebp
mov
ds
loope
pushf
js
push
je
es
xor
ficoms
arpl
sbbb
call
add
in
xor
sub
ficomps
addb
movsl
mov
sub
and
xlat
push
push
test
je
ffreep
jno
movsb
add
adc
popf
fcom
scas
pop
hlt
and
and
sbb
push
ja
in
js
ljmp
sub
in
cmp
xchg
inc
dec
or
lods
pop
mov
lret
movsl
sub
pop
dec
clc
mov
popa
push
cld
mov
iret
adc
push
js
fidivrs
xchg
push
punpckhbw
les
dec
iret
jl
loop
xchg
and
cmp
inc
push
cld
jae
stos
push
mov
pop
popa
mov
shll
inc
cmpsl
mov
fs
push
lcall
arpl
mov
xchg
mov
mov
pop
out
cld
inc
adc
xchg
arpl
push
rcrb
adc
pop
imul
subb
in
or
or
sti
rorl
loope
incl
in
and
mov
repz
jno
jge
sahf
repz
push
dec
cmp
xchg
push
mov
and
loopne
dec
push
sahf
lock
ret
shll
lock
mov
jle
lcall
xchg
sub
cmpsl
lock
fdivr
add
mov
call
gs
mov
inc
fnstcw
loope
aas
inc
and
push
xchg
loopne
into
clc
and
sarb
scas
jg
and
rcll
mov
jl
mov
fprem1
mov
sub
int
idivl
push
push
loope
insb
ja
push
pop
in
mov
cwtl
pop
inc
sbb
imul
cmc
out
icebp
aas
insb
cmp
popf
insl
in
jns
sahf
lret
pop
test
insb
mov
adc
les
fadd
jbe
and
mov
ljmp
xchg
sahf
stos
sub
loop
add
bound
and
in
iret
push
movsb
fwait
add
pop
in
icebp
dec
jecxz
mov
mov
aas
dec
out
cld
mov
xchg
inc
pop
data16
push
lea
xor
lret
fildll
subl
shll
cli
jne
mov
mov
out
outsl
test
jge
aas
add
mov
leave
or
jecxz
xor
xor
fs
and
imul
pmulhw
push
incb
jne
pop
rclb
shrb
pop
pop
fbld
loopne
fst
fidivrs
sub
fsubrs
clc
movsb
aas
dec
inc
dec
mov
lods
loop
xchg
in
lods
or
lods
out
lea
push
pop
rep
bound
inc
shr
mov
sbb
or
int3
leave
dec
loope
sub
mov
push
mov
fisubs
add
mov
pop
cmovno
inc
movsb
jge
xchg
sahf
aaa
fmull
aas
mov
movsl
inc
shrb
pop
pop
adc
test
enter
jge
jb
incb
cld
test
inc
adc
testb
push
aam
mov
fldlg2
arpl
inc
fisubrs
test
or
shll
sbb
cmp
push
pop
push
mov
imul
cmp
lcall
cld
adc
cwtl
lret
xchg
bnd
jecxz
imul
popa
dec
add
pop
push
mov
sub
or
lret
dec
lods
adc
arpl
push
rcpps
mov
xor
pop
shll
aad
into
dec
xchg
stos
jp
mov
sub
ja
jg
xchg
pop
mov
hlt
fdivrp
xchg
scas
fstps
xor
mov
les
popf
pop
mov
shrl
decl
mul
cwtl
mov
pop
xlat
inc
popf
enter
mov
add
aad
icebp
lea
and
jecxz
adc
cmpsb
dec
xchg
stos
aam
call
and
mov
ja
stos
or
loopnew
dec
inc
ss
std
inc
pop
decl
lods
jmp
sahf
xchg
icebp
shlb
inc
stos
dec
jns
inc
jb
mov
out
inc
int
aas
dec
add
push
sbb
pop
sahf
shll
repz
mov
leave
test
cmp
jge
sbb
or
nop
push
adc
stos
pusha
test
rcll
ret
sub
mov
mov
out
std
out
clc
jb
shll
xor
in
adc
xchg
sub
test
adc
dec
rorb
add
arpl
dec
jecxz
dec
loop
test
xrelease
in
push
xchg
push
adc
arpl
xlat
aas
sub
aad
push
adc
xchg
and
rcrb
ret
in
test
mov
test
add
pushf
mov
mov
push
or
jecxz
inc
and
sar
subb
jmp
xor
dec
nop
mov
in
fnstsw
mov
and
dec
push
push
jle
into
fsubrs
mov
pop
cmp
int3
ljmp
mov
sub
imul
aad
es
aam
xchg
rorl
pop
jae
cwtl
rclb
lahf
mov
push
pop
ret
mov
and
mov
mov
ss
pop
icebp
adc
push
movsb
arpl
decb
cmp
push
loopne
pop
mov
fisttpl
cmpsb
mov
shll
aam
sub
imul
sub
daa
mul
stc
dec
lret
nop
mov
dec
lret
imul
xchg
loopne
inc
stos
adc
mov
push
idiv
js
jmp
in
ret
and
cld
push
inc
lods
insl
xchg
in
enter
jb
decb
jb
xchg
in
jg
sbb
sahf
inc
int
in
mov
and
dec
pusha
cld
xchg
adc
adc
or
shrl
aad
jb
inc
out
bound
add
sub
xchg
imul
adc
xchg
push
xor
loope
push
lds
pop
into
in
lods
aaa
push
mov
scas
push
jle
aad
popf
faddl
pop
sub
adc
enter
mov
sarb
outsl
lcall
sub
push
stos
test
mov
xor
adcl
xchg
and
into
in
loope
jecxz
inc
mov
mov
mov
out
pop
mov
pushf
ret
imul
test
or
jg
fildll
outsl
insb
pop
int
aad
out
mov
repnz
movsl
adc
fsubrp
ds
loopne
fsubrp
in
ljmp
add
es
popf
cmp
fists
movsb
pop
ud2
mov
arpl
mov
adc
divl
inc
fldenv
mov
push
jmp
out
rcrl
mov
rol
cmp
push
xor
mov
adc
push
test
dec
lea
push
rorb
push
std
arpl
xchg
xchg
cmp
imul
repz
push
xor
cld
pusha
int3
out
xor
push
aad
mov
mov
int
sub
push
cwtl
sti
pop
dec
dec
xchg
dec
adc
outsb
repz
sub
arpl
adc
xor
hlt
mov
in
xchg
test
enter
sti
lret
lcall
add
lahf
xchg
fmulp
inc
cs
push
lret
sub
jl
lret
sub
stos
push
andb
mov
test
popf
fbld
cmpsl
cmpsb
sub
scas
in
and
xor
adc
pop
jl
rolb
or
adc
imul
mov
rcl
add
out
and
mov
ret
cmp
pop
int
push
jecxz
xchg
orl
ja
fcomps
test
mov
decb
icebp
cld
insb
adc
dec
imul
sub
xchg
xchg
pop
push
outsb
cmpsl
push
jecxz
rclb
fidivrl
push
lret
sub
fsubrl
cld
sub
cmp
dec
stos
shll
inc
addl
sarl
add
jmp
repz
inc
sub
pop
jbe
fldl2e
xlat
push
stc
bound
push
std
ljmp
in
lahf
mov
xchg
shrb
stos
mov
and
shrl
pop
imul
scas
mov
inc
sbb
sub
movsb
sahf
lret
or
xchg
icebp
js
add
push
add
in
push
mov
les
cs
jne
shr
lods
dec
pop
pusha
icebp
mov
fld1
dec
dec
dec
jbe
popf
lds
add
jp
xor
aad
dec
and
pop
lahf
add
loope
add
mov
and
xchg
dec
or
lret
clc
scas
flds
cmc
jg
xchg
das
mov
or
mov
je
xchg
xor
out
shl
mov
test
pop
cld
lahf
mov
inc
sub
sub
iret
rol
popl
hlt
and
pop
mov
jmp
repnz
adc
or
aad
fildl
pop
mov
fcmovne
mov
jne
and
push
mov
loope
incb
sub
fsubrl
shl
cmp
mov
cli
xchg
or
pop
push
ret
loopne
aad
addr16
or
jb
pop
or
std
push
pop
mov
out
nop
xchg
dec
sub
mov
push
shrl
xchg
outsb
loopnew
aaa
mov
ficomps
test
loope
out
mov
ret
or
jns
imul
rcrb
lret
jb
and
rcll
loopne
in
lret
mov
dec
loope
push
mov
inc
cmp
cltd
fstp
push
mov
bound
icebp
loopne
ret
jmp
mov
in
loopne
cld
xabort
aaa
or
jecxz
mov
insb
add
mov
dec
jge
mov
push
int3
insb
cmp
mov
adc
or
mov
out
ret
mov
push
popa
loopne
pop
and
jge
sbb
and
jns
inc
mov
lea
outsb
jb
push
push
lock
and
mov
and
dec
js
je
test
fnsave
add
inc
jbe
insl
mov
push
out
sub
and
cwtl
pop
pop
or
adc
sub
jge
inc
nop
dec
out
jne
push
mov
pop
not
fsub
test
adc
mov
mov
mul
icebp
lret
and
icebp
iret
clc
mov
add
mov
add
inc
repz
test
dec
mov
std
xor
imul
push
adc
fiadds
sub
stos
bound
stos
pop
outsl
scas
fsubrs
push
ret
pop
popa
sub
pop
pop
movsl
lods
inc
lock
movsb
or
inc
ljmp
xor
cmc
xor
cmp
pop
pop
stc
scas
jb
adcl
mov
pop
fs
adc
add
lret
fstpl
push
mov
adc
push
fidivrs
insb
pushf
nop
or
in
pop
lea
mov
and
push
scas
loope
data16
mov
lods
fistps
ja
mov
xchg
fistpl
inc
orl
mov
mov
and
cmc
test
sub
jae
iret
rcr
rcl
cmp
orl
pop
jne
adc
fadds
inc
daa
add
add
cmc
cmpsb
in
je
sub
loop
rcll
ret
rcll
lret
es
push
inc
fmulp
push
push
jbe
or
inc
xchg
push
loopne
mov
sub
shl
aam
mov
loopne
push
jecxz
pop
rorl
push
xor
mov
fnsave
ljmp
dec
loopne
add
jp
rol
arpl
test
in
flds
adc
mov
push
imul
dec
mov
scas
pop
push
inc
jecxz
arpl
lods
mov
push
lea
inc
jge
mov
cmpl
jae
jecxz
faddp
mov
loopne,pt
sbb
shll
stos
mov
push
sarl
pop
incb
ret
pop
test
rcrb
adc
sub
lahf
cmpsl
cmc
sub
jle
stos
mov
inc
push
loope
call
sub
push
xchg
mov
push
in
orb
out
add
ss
inc
push
and
shr
loope
sub
mov
mov
psrld
inc
xor
es
and
xor
sub
add
fdivrp
jmp
mov
dec
add
dec
lahf
test
ds
and
test
mov
test
or
sahf
inc
in
sbb
rorb
push
repnz
mov
rol
dec
jmp
test
jno
cmpsl
cmp
jb
mov
subb
test
sub
adc
inc
mov
cltd
subl
mov
arpl
jns
sahf
push
imul
xchg
and
test
push
stos
push
leave
adc
xor
andb
dec
and
pop
xorb
xchg
fs
xchg
mov
fnsave
fldcw
add
lods
jno
stc
push
push
iret
scas
mov
or
jle
cmp
jp
jge
and
push
arpl
mov
stc
cmp
mov
jne
cli
pop
rorl
mov
pop
int3
movsl
xor
jne
ficoms
cs
mov
fnstsw
movsb
aad
cmp
les
ds
clc
xchg
cmp
pop
jns
cmpsl
shll
loope
sub
inc
mov
mov
call
aam
mov
xlat
mov
jae
xchg
in
roll
xor
out
imul
lods
mov
movb
pop
inc
outsb
fidivrl
in
testb
cmp
jmp
cli
and
xlat
fs
or
daa
pushf
add
jecxz
pushf
paddw
adc
sarl
aam
push
pop
sbb
push
lret
stos
rorl
pop
sahf
and
sub
lods
andnps
fsubrs
repnz
mov
loop
div
mov
mov
add
int
adc
sti
in
or
push
iret
add
js
push
rolb
lret
mov
out
pop
loope
inc
pause
mov
cld
fidivrs
movsl
add
in
cld
xchg
loopne
popf
in
test
jg
aam
inc
jne
mov
aaa
fisttpl
rcrl
jcxz
jo
jb
fildll
sahf
cltd
jp
popf
mov
mov
and
leave
pop
xor
push
and
inc
popf
imul
sbb
iret
aas
mov
cwtl
out
cmp
ds
cwtl
mov
nop
mov
ljmp
pushf
stos
pusha
lret
cmp
lcall
lahf
sbb
outsb
mov
jnp
xchg
int3
sub
sbb
neg
push
xchg
repnz
xchg
mov
rclb
or
negb
jl
push
in
ljmp
lods
leave
enter
inc
bound
sbb
push
xor
push
fs
data16
rcrl
fucom
stos
fs
jge
andb
add
jge
loopne
push
jp
popf
mov
lods
add
enter
aas
in
sbb
sub
hlt
mov
lahf
xor
sbb
or
and
xor
aaa
or
ret
loop
sarb
mov
lret
mov
jg
lds
std
sub
jno
stos
clc
mov
and
jb
test
int3
xchg
aam
inc
push
sbb
inc
pop
stos
jae
lock
outsl
test
inc
inc
or
andl
sahf
jns
mov
cli
mov
sub
jmp
or
int3
pop
push
scas
sbb
mov
loopne,pt
push
or
mov
insl
pop
push
in
xchg
xor
sbb
cmp
pushl
ror
xchg
or
pushf
cmp
jo
inc
std
andl
into
or
push
dec
inc
sbb
jnp
pop
cmpl
push
xor
sub
sub
inc
rclb
and
cld
daa
or
test
dec
aam
scas
ror
mov
inc
fldt
lret
out
mov
add
mov
cmp
jb
push
rolb
jmp
cs
cltd
lret
add
pop
fstl
rorb
jge
and
pop
hlt
inc
in
inc
sub
mov
fst
test
push
loope
ror
stos
movsl
shll
inc
dec
mov
mov
inc
lods
rcrb
xor
jmp
push
push
push
cmovns
cmp
adc
icebp
into
mov
jp
ret
xor
push
mov
sahf
xor
aas
ret
out
push
jge
dec
leave
rcl
insb
roll
out
adc
sub
xor
inc
adc
imul
movsb
test
pusha
sub
gs
jg
shll
addb
cltd
popa
cmc
push
mov
rcrl
out
outsb
fcompl
mov
scas
fnstsw
insl
ret
cld
jno
rclb
stos
or
mov
rorb
hlt
xchg
dec
test
orl
sub
sub
fldenv
and
int
iret
mov
cmp
pop
push
fdivrp
xchg
adc
mov
shrb
stos
ds
push
loop
dec
jne
and
mov
xchg
mov
push
rorb
addl
cmp
iret
jp
mov
ret
pusha
fisubs
loopne
inc
int
and
push
cmp
cwtl
push
addb
ja
sbb
xor
inc
sub
setae
fidivrs
or
add
jge
push
imul
inc
mov
jge
jns
mov
les
cmp
ret
loope
cld
xlat
mov
sbb
incl
push
push
decb
scas
scas
cmp
rclb
add
mov
cwtl
jb
psubsw
cmp
les
std
sti
or
sbb
jmp
xchg
cmp
mov
sub
int
push
inc
cmp
out
inc
cld
cltd
cmp
stc
icebp
mov
fsts
cmp
ds
fstpl
shll
inc
ja
jb
cmp
icebp
xorb
sbb
int
mov
inc
mov
sub
mov
adc
adc
jns
cmp
mov
fiadds
jb
ljmp
pop
les
sub
incb
sub
pop
fidivl
les
add
arpl
jmp
cmp
and
xor
sti
dec
stos
inc
ljmp
setno
mov
sub
test
in
mov
in
pop
loope
outsb
xor
fimuls
add
cli
hlt
dec
int
in
enter
adc
icebp
popa
bound
orb
in
clc
and
loopne
les
mov
add
xchg
push
jg
int
cmpsb
je
cmc
movsb
pop
lock
inc
pop
shl
lcall
bound
xor
les
loopne
dec
in
sub
inc
nop
pop
lods
imul
clc
xor
push
xchg
mov
push
rcl
dec
ficoml
and
jmp
je
push
xchg
jmp
shll
out
rcrl
aas
ljmp
pop
les
imulb
stos
movsl
mov
aam
sti
sahf
add
fcomi
ljmp
mov
cmpsb
test
fcom
outsb
imul
and
adc
lret
enter
xor
lahf
jp
scas
addb
loope
push
stos
xchg
fmuls
in
stos
cmc
fs
add
adc
lret
jp
cmpsb
into
cmpsl
rclb
test
cli
lock
js
pop
mov
addr16
ror
loope
xor
rcrl
inc
in
mov
cs
inc
insl
mov
clc
sub
push
imul
xchg
mov
jg
shl
push
xor
fiadds
lea
jecxz
icebp
iret
pop
outsb
call
mov
ret
movaps
loopne
fmuls
sti
jns
mov
pop
ret
mov
lahf
fldt
and
je
ja
sub
xor
ljmp
filds
popa
sub
pop
add
mov
movsl
add
sbb
pop
mov
out
hlt
lods
out
sub
imul
test
ss
in
sbb
adc
dec
lcall
rcrl
out
stos
adc
jmp
push
push
int
and
jecxz
xchg
call
repz
fisttpll
in
in
leave
stc
sar
mov
leave
arpl
or
pop
fnstenv
movsb
imul
jecxz
mov
push
sti
or
push
fnstenv
mov
xchg
dec
loopne
in
cmpsb
push
add
xlat
test
mov
jae
mov
iret
sub
andl
test
add
sahf
rcr
pusha
fcmovnu
cmp
push
sbb
scas
sar
xchg
sub
and
jmp
imul
pop
mov
test
in
inc
cld
jle
dec
repz
ficoms
ret
fmuls
add
daa
jmp
mov
jne
js
dec
cmpsl
fs
gs
outsb
pop
insb
cmp
jo
xchg
fnstenv
dec
xchg
addr16
lods
pop
scas
or
out
cmpsl
xchg
cltd
imul
rclb
andl
leave
or
shl
push
add
sar
push
aad
fs
hlt
aad
mov
xchg
in
push
mov
rcll
jmp
push
test
call
xor
int3
cmp
cmpl
or
cld
mov
cltd
sti
imul
andl
je
xor
testl
popf
repz
shl
fucomi
mov
out
int3
mov
jb
sbb
std
data16
adc
in
lock
into
dec
or
lods
ljmp
lock
pop
in
pop
call
xchg
pop
sahf
cs
dec
mov
loopne
leave
js
push
decl
fsts
sub
pop
aaa
inc
pop
and
xor
lret
movsb
addl
iret
insl
cmp
dec
shrb
push
in
test
int3
iret
dec
pop
adc
mov
insb
inc
lods
movsb
aas
mov
mov
outsl
and
ret
fdivrs
sbb
nop
cmp
int
icebp
add
add
xchg
sub
aam
adc
cmp
sar
imul
push
int
shrb
loopne
aam
xor
movb
lret
aam
fidivs
mov
rorl
mov
bound
in
push
adc
dec
ljmp
loope
mov
xor
push
je
stos
leave
xchg
pop
jb
push
aad
xchg
loop,pn
fadds
aaa
jge
or
sub
or
jbe
inc
lret
sub
clc
xchg
push
dec
inc
imul
sbb
mov
or
scas
pop
fwait
cmc
jo
jae
cld
xchg
cmp
mov
xor
sub
stc
jns
int
inc
xlat
pop
or
and
mov
push
jecxz
cmp
leave
push
mov
push
mov
filds
rcll
insb
hlt
jmp
in
call
sbb
mov
pop
xchg
sub
sub
scas
inc
icebp
ret
sub
dec
pop
xor
inc
clc
lret
ja
inc
clc
andl
sbb
imul
or
dec
add
stos
push
in
jl
push
imul
jecxz
in
sub
and
jmp
jge
cltd
into
sti
sub
sub
test
cld
fiadds
into
adc
inc
jmp
xchg
std
addr16
call
pop
jnp
ljmp
nop
inc
or
ljmp
xchg
or
mov
xchg
in
clc
adc
mov
mov
pop
pop
or
rorl
bound
in
sub
call
into
or
pop
dec
mov
or
adc
xchg
mov
xchg
adc
jno
jecxz
jae
xor
in
pop
dec
mov
jecxz
aaa
stos
repz
shrl
push
xchg
pop
rcll
mov
mov
push
pop
bound
es
popf
xchg
push
filds
mov
lds
imull
mov
stc
xchg
dec
push
sbbl
pop
inc
add
enter
rcll
mov
cmp
mov
push
inc
repnz
fwait
xchg
jecxz
sub
nop
les
dec
mov
mov
mov
or
rcll
ljmp
mov
leave
popf
add
out
inc
loopne
in
in
push
dec
out
sub
mov
stc
mov
cmpsl
sub
in
dec
mov
fsubrl
shr
sahf
das
xor
bound
ja
add
and
push
fs
jp
and
outsb
mov
lret
out
push
inc
or
add
inc
push
mov
and
cmp
push
or
arpl
mov
aad
test
sub
leave
mov
hlt
dec
nop
jp
mov
movsl
pusha
sub
cmp
push
ret
sub
jmp
inc
imul
fdivrs
insl
push
les
mov
clc
cld
lea
rcl
mov
sub
aad
push
cwtl
adcl
cmc
lods
gs
es
add
lock
repz
or
sub
hlt
add
movsb
aad
sbb
je
movsl
in
rcrl
call
pop
outsb
pop
mov
bound
sub
jecxz
inc
dec
iret
adc
loopne
in
jbe
ds
xchg
les
mov
mov
movsb
mov
outsb
push
adc
fisubs
or
sub
add
jl
lock
gs
and
fs
fnstsw
sahf
jne
aam
sub
filds
lods
imul
cmp
in
iret
loopne
scas
testl
xor
cmpb
push
fcomp
popa
fdivp
inc
popa
ds
insb
ret
imul
jl
inc
test
in
rol
jmp
jmp
adc
std
mov
mov
outsb
fcmovnu
xor
dec
dec
pop
imul
and
mov
xlat
or
add
in
cmc
mov
in
test
lret
lods
fildl
fidivrs
rorl
sarb
cmc
fimuls
fs
int3
decb
rcl
jmp
and
test
fnsave
jmp
cld
adc
jmp
lret
in
cld
pop
arpl
mov
div
mov
mov
testb
inc
sahf
ret
mov
movsb
cld
dec
rolb
jno
cmp
xchg
pop
repnz
int3
sub
mov
or
jmp
adc
pop
scas
in
jmp
pop
push
fsubr
mov
gs
dec
shrb
adc
jecxz
sbb
and
cwtl
fidivs
les
loope
xor
sbb
push
ret
mov
aad
cmp
or
sbb
pop
clc
cmp
jg
jb
pop
mov
shll
test
js
push
mov
pop
inc
sbb
hlt
mov
int
push
pop
cmpl
les
movsb
pop
adc
or
dec
cmp
mov
or
inc
js
jns
adc
sbb
push
xor
aas
mov
xchg
loop
pop
in
hlt
sar
aaa
push
mov
xor
repnz
fs
pop
movsb
in
jb
cmp
hlt
popa
push
shrl
xchg
movsb
xchg
or
call
sahf
out
adc
push
cmp
scas
inc
mov
pop
cmpsl
fisubl
stos
rcr
repnz
lret
and
movsb
sub
test
pop
dec
bound
sub
jp
or
scas
mov
adc
lods
jbe
sbb
xchg
or
and
cld
outsl
shlb
lret
jecxz
into
cltd
pop
negl
cltd
xlat
stc
pusha
cmc
into
push
push
filds
outsl
call
mov
aaa
xchg
in
xchg
xor
call
int
xlat
aad
in
filds
adc
stos
adc
sti
loope
fstps
mov
in
lcall
pop
mov
imulb
dec
lahf
xchg
clc
xor
jne
lock
adc
or
dec
mov
outsl
pop
push
dec
cmp
sti
xor
call
cmp
aam
cwtl
les
mov
mov
in
xor
mov
sub
mov
outsb
inc
stos
mov
out
push
ret
mov
sub
shll
cmpsl
rclb
lea
mov
or
loop
xlat
mov
rclb
add
and
in
xchg
shl
xchg
fs
pop
cld
mov
xlat
cmp
rcl
lret
jne
add
lret
out
jecxz
sub
out
movsl
cld
in
cmpsb
cltd
mov
pop
or
sub
cli
lret
jnp
fs
pushf
mul
rcrl
ljmp
adc
pop
mov
stc
fisubrl
rolb
leave
jbe
movsb
xlat
aaa
popf
fcomp
push
repz
movsb
in
push
iret
or
icebp
mov
mov
mov
testl
out
xchg
pop
rcr
movsb
cmc
lcall
or
shlb
in
push
and
sahf
rcl
lret
push
loope
test
shrl
out
cld
aaa
les
or
inc
push
ss
into
enter
mov
jp
push
fists
cmpsl
shlb
inc
rcrl
cmpsb
sti
and
bound
sarl
mov
rcr
shll
and
pop
sub
lcall
or
bound
or
js
ja
arpl
fdivl
jge
insb
pop
sbb
sbb
mov
lds
nop
push
movsb
iret
shlb
in
fisubrs
outsl
jecxz
lea
aad
lds
out
movb
lret
les
mov
call
movsb
fldl
pop
int
lcall
xchg
ret
add
decb
push
shl
lds
movsb
in
push
ret
cli
jnp
jo
pop
int
icebp
les
push
push
mov
loope
out
lds
jb
xor
cmpsb
pop
iret
sahf
out
movsb
shl
fidivs
rcrb
inc
or
popf
aam
inc
in
mov
jecxz
jmp
into
pop
cmpsb
arpl
xchg
in
inc
clc
in
popf
scas
les
dec
fldenv
cmc
xchg
inc
in
ljmp
cmp
xor
fs
inc
adc
rolb
and
xor
fdivrp
pop
mov
call
push
int
cmc
cs
jecxz
in
in
fstps
popa
and
adc
mov
frstpm(287
push
adc
or
pop
popa
mov
mov
jmp
lods
mov
sbb
jno
push
lcall
dec
repz
into
cmpsb
jmp
mov
stc
and
push
lcall
imul
imull
push
out
push
mov
enter
pop
jp
insl
or
jecxz
mov
fmul
mov
adc
les
cmp
ror
mov
lret
fmulp
rcll
aam
fsubl
inc
mov
leave
pop
sbb
std
clc
push
push
mov
mov
or
sbb
push
ficomps
xchg
xchg
pop
fabs
sub
out
inc
mov
add
in
adc
add
aam
xchg
mov
in
leave
sub
xor
mov
jb
jecxz
mov
aam
inc
and
dec
psrlq
rolb
nop
mov
shll
pop
fs
push
fsubrl
xor
dec
aam
ret
ficoms
cmp
fldenv
test
dec
xchg
fs
fs
rcl
fisubs
into
sub
push
mov
out
lea
xchg
out
repz
cs
or
xlat
and
adc
test
add
dec
push
test
mov
shlb
adc
clc
lods
dec
in
lods
sub
push
rorl
push
xlat
test
sub
fdivr
ror
mov
andl
outsl
jo
add
out
dec
or
nop
xchg
push
lock
jmp
or
mov
test
test
shll
je
jns
mov
leave
outsb
and
sub
mov
add
sub
clc
sub
jo
mov
loopne
out
test
push
sbb
in
les
clc
sahf
mov
imul
into
sub
stc
jecxz
pop
add
imul
sbbl
shll
push
xchg
jmp
xchg
adc
push
rcl
pcmpgtd
inc
mov
fcos
fsts
mov
or
subl
xlat
faddp
icebp
or
in
stos
mov
mov
fs
xor
dec
dec
shll
mov
rcrl
inc
pop
test
mov
xchg
mov
xchg
dec
fstps
test
stos
xchg
int
clc
pop
pop
ljmp
roll
in
ljmp
jns
neg
ss
orl
lock
jbe
jbe
ja
dec
clc
repz
insb
push
rcr
jmp
sub
out
cmpsl
popa
movsb
mov
bound
fists
mov
sbbl
sub
push
fs
push
push
fstl
push
push
sbb
divb
cmp
sti
pop
cmp
jl
mov
aas
jns
mov
aas
jp
mov
aas
outsl
aas
scas
aas
out
aas
xor
jo
mov
lock
sub
aas
in
aas
mov
aas
scas
aas
out
aas
xor
ss
jbe
jae
std
loopne
movsb
negb
testl
sbb
loopne
in
faddl
mov
aam
mov
rcrb
ljmp
movsb
int3
subb
sti
stos
lret
pop
xrelease
mov
clc
icebp
movsb
lock
in
adc
pushf
ret
sahf
aam
call
mov
icebp
movsb
xlat
in
iret
or
mov
ljmp
into
icebp
int
repnz
fldenv
movsb
out
rcrb
inc
es
lret
sbb
mov
push
fmuls
inc
lret
push
in
les
inc
scas
ljmp
scas
sbb
push
mov
lock
mov
mov
xlat
loope
scas
inc
outsb
arpl
mov
mov
xchg
imul
mov
rclb
adcb
aaa
loope
xchg
out
fnstenv
xchg
int3
sti
hlt
hlt
xchg
jmp
je
lret
adc
shl
stos
add
push
adc
test
sub
enter
int3
mov
mov
les
cli
sub
xchg
cmp
sub
adc
fcomp
pop
popa
ficoms
mov
mov
in
pop
push
xchg
lock
xor
adc
push
and
adc
aad
and
adc
cli
fistpl
add
fldt
cli
pop
fs
in
lcall
sub
int
repnz
insl
sbb
pushf
jecxz
shrb
push
push
sbb
std
icebp
push
pop
push
leave
sub
ds
fstp
dec
lcall
mov
dec
lock
and
aam
adc
and
xchg
decl
scas
pusha
jp
insl
xchg
cwtl
mov
inc
xorb
jmp
adc
cld
dec
test
pop
mov
mov
cli
hlt
fimuls
sti
xor
lret
pop
iret
rorl
jb
adc
iret
packsswb
bound
out
xorl
pop
sahf
push
push
ficoms
push
mov
mov
push
jbe
enter
jb
and
inc
mov
sbb
pop
leave
sub
inc
push
imul
jecxz
fsubs
push
sahf
pusha
lahf
pop
and
mov
bound
ret
imul
jbe
xchg
cmc
sub
sahf
mov
pusha
mov
jmp
imul
and
loope
popa
add
cmp
cmp
adc
fldcw
adc
fidivrs
xor
je
mov
hlt
xor
jno
mov
icebp
xor
shlb
push
mov
repnz
pop
adc
and
mov
lcall
mov
add
dec
test
in
aam
mov
loopne
shl
fiaddl
rol
xchg
loope
push
in
mov
push
ljmp
into
mov
pop
jbe
shr
push
repz
mov
sahf
cmc
movsb
iret
rcrb
xlat
rorb
mov
movsb
hlt
sahf
rcll
inc
mov
sar
cmp
xchg
lret
rorb
hlt
movsb
in
mov
sti
rcl
or
out
and
push
ficompl
movsb
fbld
mov
ret
movsb
cli
cmpsb
nop
cld
ret
jmp
clc
add
stos
gs
rol
cmc
test
les
call
adcb
mov
rcr
orb
movsb
jmp
lds
mov
rorb
andb
cwtl
aam
popa
stc
mov
in
xchg
pop
test
punpcklwd
mov
stos
es
lcall
jne
enter
and
in
xchg
xor
lret
fstpt
dec
aam
and
add
cld
mov
ss
je
div
test
stos
jmp
cmp
push
sbb
clc
into
push
adc
or
std
push
std
and
inc
sti
push
repnz
je
or
and
out
arpl
mov
jp
fistps
shll
loopne
enter
iret
sbb
fbstp
xlat
lds
aam
cld
sbb
ja
and
ljmp
test
cmp
jecxz
fsub
in
adc
repnz
fdivrp
repz
aad
xchg
pop
rclb
aam
inc
mov
data16
adc
ficoml
pop
out
test
movsb
repz
xchg
scas
in
sbb
xor
jmp
add
lea
ds
push
out
out
ret
fstpt
outsl
div
fmull
int3
hlt
popa
out
in
cld
xor
sahf
loope
lods
iret
into
hlt
mov
jecxz
ret
ret
cs
push
push
js
ret
mov
push
lret
iretw
xchg
bound
ljmp
push
fisubrs
rcr
stc
fdiv
or
jne
fs
jb
jae
sahf
push
sahf
leave
xlat
std
movsb
jecxz
cmp
pushf
inc
jae,pt
add
das
into
pop
mov
jb
aaa
jl
bound
mov
jo
loopne
and
push
sbb
iret
inc
jns
add
in
and
scas
sbb
aam
inc
dec
stos
int
mov
shrl
pop
imul
adc
arpl
fiadds
mov
adc
and
movsb
fldenv
icebp
or
pop
mov
and
daa
push
in
inc
dec
repnz
adc
or
rcl
gs
fcoml
push
push
cltd
fwait
std
push
or
in
mov
jecxz
jecxz
cmp
jo
ljmp
icebp
cmp
push
mov
repz
ret
mov
in
push
cmp
xlat
jge
in
loope
xor
mov
dec
fucom
push
loopne
ljmp
mov
pop
mov
icebp
fs
fs
fs
insb
repz
fnstcw
int3
aam
mov
cmpsb
test
pop
shr
cltd
aam
mov
daa
inc
cld
mov
sub
shrb
into
add
scas
out
enter
in
rcrb
hlt
jb
inc
fadds
add
rol
lret
faddp
rolb
rcl
mov
rol
sti
sarb
xchg
add
dec
fsubr
scas
adc
hlt
ljmp
dec
push
popa
repz
sub
stc
xor
or
repnz
in
in
adc
mov
ret
sub
fistps
mov
xor
dec
and
xchg
lcall
pop
pop
cmc
mov
popf
daa
jbe
in
and
arpl
jle
or
ficomps
fmulp
xchg
stos
aaa
and
adc
mov
mov
ret
imul
xchg
jmp
adc
inc
andb
push
xchg
dec
pop
shrl
push
fstps
cli
push
jmp
mov
mov
sahf
dec
cld
movsl
pop
lods
out
pop
jne
sub
adc
pop
mov
jb
in
int3
into
push
xchg
mov
fiadds
jge
loope
push
cltd
lcall
jne
inc
push
xchg
jae
push
or
fnstsw
in
mov
or
orl
cmp
dec
popf
adc
lcall
stos
push
sbb
aam
fistpl
pop
fimull
ffreep
mov
lcall
add
arpl
or
mov
movsl
jo
mov
scas
pop
xor
inc
clc
cmp
fstp
movsb
pop
popf
mov
sub
cld
shlb
fdivp
push
fstl
xor
jecxz
push
imul
xchg
xchg
inc
jne
in
ja
sbb
cmp
and
xor
dec
dec
imul
call
in
mov
orl
mov
int
jecxz
les
arpl
sbb
aaa
loope
add
dec
jb
popf
ret
push
jmp
fs
outsb
lds
dec
stos
cmp
scas
ss
push
lret
flds
and
sbb
ficomps
lahf
add
repz
sub
outsb
cmp
sbb
imulb
insl
push
out
iret
or
icebp
insl
push
inc
xlat
add
insl
out
ja
mov
add
cmp
je
ja
insl
mov
loope
rcll
movsb
fwait
and
in
xlat
stc
lods
xchg
cld
mov
stc
cmp
test
in
xchg
jge
popf
xor
ja
clc
outsb
or
pop
ret
into
imul
bound
loope
pop
test
sbbl
clc
stos
mov
test
jp
sbb
sub
movsb
push
pmulhuw
dec
xlat
pusha
adc
es
pop
insb
cmpsl
push
mov
jp
call
sbb
es
inc
xchg
xchg
aam
mov
pop
loopne
cmp
cmp
hlt
mov
and
mov
test
imul
pop
loope
cmp
adc
in
movsb
cmp
inc
adc
mov
jns
xchg
jecxz
loope
xchg
fnsave
loopne
cli
xchg
ljmp
in
jae
jmp
mov
clc
sub
xchg
test
lods
mov
mov
sub
pop
or
lea
mov
hlt
addr16
fildl
jo
adc
cwtl
jnp
outsb
cmp
or
lock
pop
and
loopne
call
mov
adc
cmpsl
addr16
xchg
into
aam
negl
or
mov
cld
cs
sti
es
into
mov
dec
jle
ss
and
sub
out
and
push
mov
xchg
cli
cltd
sahf
mov
adc
repnz
cld
xchg
sub
aad
mov
or
mov
shlb
test
sarb
jmp
fst
dec
push
in
adc
daa
xchg
xlat
sub
pushf
dec
fs
jmp
push
enter
data16
ss
test
sarl
mov
cmp
sub
sti
dec
int
dec
ret
pop
hlt
icebp
dec
inc
xchg
sub
mov
push
adc
das
dec
shrb
jp
faddp
dec
outsb
or
xor
xchg
in
xchg
arpl
sub
adc
repz
or
xchg
aam
mov
mov
in
push
cs
push
std
cmp
movsb
and
cld
mov
mov
xchg
aad
cld
ljmp
shl
or
call
sti
ljmp
int3
jmp
out
stos
rolb
mov
or
xchg
or
mov
pop
cwtl
mov
arpl
xchg
mov
shrl
int
cmpsl
pop
push
into
xor
push
outsl
sub
loopne
fbstp
dec
adc
add
mov
pop
iret
fistpll
cmp
inc
in
pop
jae
jl
sarl
mov
jecxz
sub
or
pop
mov
sub
mov
gs
int3
adc
pop
fwait
xchg
jecxz
sub
jb
pop
aad
and
push
pushf
sub
sub
fidivrs
jp
adc
or
jb
pop
push
fsubp
sub
push
adc
ret
xchg
cmpb
ljmp
outsl
lret
rol
pop
push
rcrb
imul
in
or
xchg
lahf
and
ljmp
mov
addr16
hlt
notb
sbb
idivb
sub
add
mov
movsl
ljmp
jp
adc
fidivrs
adc
push
sti
pop
jno
push
frstor
mov
add
out
mov
test
and
andnps
jb
divb
jp
mov
ret
cld
jl
jge
or
mov
pop
loope
cmp
sub
bound
orb
adcb
mov
jno
mov
push
push
lods
dec
test
inc
push
loope
push
or
and
lods
xchg
add
fsubrl
cwtl
xchg
fldt
push
shll
sar
jle
or
adc
iret
xchg
stc
cmp
inc
lods
nop
mov
cmovle
popf
mov
test
pop
cmp
xor
mov
or
outsl
outsl
adc
out
icebp
xchg
xchg
lds
jecxz
mov
insb
clc
dec
dec
mov
in
into
shlb
imul
mov
xchg
aam
mov
mov
mov
sarl
push
jmp
mov
jle
cmpb
decb
push
popf
loopne
out
ret
repnz
sub
mov
out
aam
mov
dec
fs
aad
xchg
test
xchg
cmp
adc
lcall
pushf
pop
sub
lods
cmp
insb
out
mov
sub
dec
xchg
cld
pop
sahf
jns
aam
in
fstpl
mov
mov
sub
std
jb
sub
rcll
pop
and
push
push
mulb
ret
leave
icebp
push
cli
inc
sub
sahf
ja
popl
loope
idivb
mov
jno
enter
mov
out
sti
push
add
cld
pop
inc
leave
dec
sub
fmull
pop
push
sub
pop
mov
push
rcr
std
aas
pop
or
ljmp
push
jmp
sbb
xor
call
mov
sti
mov
cld
mov
push
sub
pop
dec
mov
rcl
lea
push
dec
scas
movsb
push
lea
mov
mov
test
jmp
call
out
mov
out
roll
insb
ja
lahf
push
cwtl
fisubs
xchg
pop
push
dec
arpl
addl
lret
test
leave
push
xchg
cmp
jmp
shll
int3
adc
ja
out
sbb
nop
loope
add
jecxz
in
jecxz
loop
ret
fcomps
les
mov
fisubl
adc
dec
pusha
cmp
push
les
mov
sbb
pusha
sub
aaa
aaa
out
cld
aas
add
xchg
jge
hlt
mov
cmp
mov
dec
loop
cmpsb
pop
shll
mov
shll
inc
fisubrs
or
mov
insb
aad
movsb
ja
int
repz
int
jmp
push
mov
ljmp
call
in
push
sub
push
mov
fsts
push
test
xchg
mov
add
rol
call
ret
nopl
loopne
icebp
rol
ljmp
popf
call
sar
push
movsb
push
mov
sub
int3
aam
mov
ds
cmp
inc
pushw
mov
insl
ja
fists
aad
ret
mov
icebp
sahf
sub
push
or
mov
in
mov
paddsb
mov
into
dec
popa
inc
imulb
pop
xor
movsb
cld
inc
mov
lock
imul
aad
xchg
into
xor
add
push
sbb
andb
nop
cmp
add
ficoms
cmpsl
mov
cmp
adc
xorl
in
bound
daa
sub
jge
adc
stos
cltd
fnstcw
repz
jmp
mov
sbb
fucomp
inc
into
in
and
leave
fucomp
movsb
dec
loope
dec
jnp
cld
imul
dec
sbb
stos
imul
loope
cld
or
es
fucomp
and
dec
loopne
inc
movsb
cld
lods
mov
outsb
dec
arpl
or
clc
xchg
popa
pop
pop
or
xchg
ljmp
pop
jge
mov
xchg
loope
pop
pop
ret
test
call
push
pop
stos
sahf
and
adc
rol
xor
pop
sarb
cltd
shld
popf
ficoms
xor
arpl
je
pushf
push
in
pusha
cmp
dec
or
into
call
mov
adc
jmp
sar
test
jmp
std
movsb
hlt
iret
scas
in
adc
xor
push
int
xchg
test
data16
jne
sbb
aam
popf
add
push
daa
push
xor
aaa
leave
cmpsb
cld
adc
lret
addr16
ret
insb
fs
sbb
orb
or
fadd
mov
fnstenv
test
sub
lret
adc
cld
outsl
hlt
mov
ficoms
fdivrp
cmp
push
rcrl
mov
lret
mov
into
cmpsl
cmp
fst
stos
ds
test
insl
adcl
fdivrs
test
sub
and
push
ljmp
out
xor
aas
inc
aam
mov
mov
dec
outsl
mov
add
cmp
jno
jo
mulb
sub
setb
cwtl
fidivrs
mov
iret
and
repnz
popa
jmp
mov
fisubs
inc
cmp
ficoms
nop
movsb
loopne
js
dec
pop
mov
push
insb
add
push
or
clc
je
inc
into
imul
ss
aam
or
ret
dec
aam
shrl
jl
out
push
inc
ds
mov
aad
or
cmp
dec
lret
rolb
push
xor
push
or
or
add
sub
sub
or
sub
ds
add
std
adc
sub
mov
fists
xor
ss
adc
call
aam
es
sub
dec
shll
push
xchg
xor
lcall
sub
gs
pusha
pop
push
scas
cmp
stos
pop
ljmp
shl
cmc
loop
cmp
adcl
sub
mov
add
add
pop
lea
sti
mov
mov
and
call
arpl
xor
popl
scas
jbe
or
add
inc
shrb
div
test
sahf
cltd
inc
jle
or
and
iret
push
mov
and
test
mov
dec
adc
mov
push
xchg
into
mov
cmpsl
pop
mov
sub
into
xor
pop
sub
test
jb
pop
sbb
mov
add
call
xor
xchg
fdivs
call
out
aas
lods
cli
mov
dec
repz
adc
pop
popa
jno
out
js
pop
mov
imul
mov
jp
push
inc
inc
jno
pop
pop
scas
xchg
fsubrl
adc
std
xor
rcrb
test
fnstsw
push
push
imul
ret
push
sahf
push
stos
jecxz
fmulp
dec
dec
mov
rclb
fldl
or
lret
jge
in
lahf
pop
clc
aas
dec
xor
or
call
push
cld
push
js
mov
out
sub
call
mov
sti
pop
mov
push
add
les
cmp
fnsave
aam
sub
and
mov
cmp
pop
mov
xor
and
test
jecxz
in
scas
jp
shlb
mov
jecxz
fists
jle
xor
xchg
aas
stos
rorb
rcll
subb
fsubrl
and
imul
mov
add
movsb
loopne
push
mov
lds
dec
or
ret
aad
sbb
fildl
stc
rcll
out
test
mov
jmp
stos
loopne
inc
fwait
xchg
mov
xor
jbe
cmp
in
ds
xchg
rolb
cmp
jns
sbb
mov
jo
aaa
sqrtps
addr16
mov
adc
lret
mov
xchg
push
sahf
sbb
xor
and
push
and
dec
inc
adc
clc
sub
sub
pop
add
push
ret
sbb
insl
add
ljmp
ljmp
pop
or
mov
sarl
add
xchg
xchg
and
out
pop
movsb
adc
testb
and
fldt
iret
ljmp
cmc
xor
icebp
sub
ja
mov
test
inc
xchg
inc
aad
pop
addr16
fdivrs
dec
ret
and
sarl
subb
xchg
add
mov
sub
aas
test
push
hlt
push
and
jnp
jp
inc
cmc
lahf
xchg
in
pop
adc
jb
and
cmpsl
pop
or
jnp
push
pop
cmp
in
sti
push
cltd
adc
mov
xlat
loopne
dec
mov
xchg
aam
call
push
out
sbb
jb
loope
aas
jb
mov
stos
sbb
mov
sub
xchg
cld
adc
mov
jb
pop
iret
fs
fistl
popa
movsb
jo
rolb
mov
icebp
movsb
or
xchg
mov
xchg
xchg
jbe
mov
movsb
xor
pop
icebp
shll
inc
out
gs
lods
into
iret
sbb
mov
push
jp
pushf
jge
sub
in
iret
sbb
fs
mov
fidivrl
jne
pop
jnp
shll
push
rcl
fs
pushf
cs
loope
ja
and
push
movsb
adcb
ret
and
rcrb
add
imul
pop
pop
daa
test
fucomip
push
adc
jmp
dec
cld
push
shrb
add
arpl
jecxz
fdivr
fimuls
sahf
push
mov
test
and
mov
add
mov
lcall
sub
shrl
test
mov
cmp
ficoms
and
test
daa
les
jecxz
pop
arpl
push
fstl
hlt
test
mov
call
push
and
cmpsl
xor
fists
jmp
push
adc
cmp
loopne
inc
shrb
test
adc
dec
pop
out
mov
mov
fmull
fsts
aas
aam
push
xor
push
cmp
mov
pop
dec
mov
fcomps
in
fcompl
push
pop
sarl
and
lret
sti
and
stc
rcrl
inc
dec
fdivl
pop
dec
shl
data16
jle
aaa
leave
nop
enter
pushf
xchg
aaa
movsb
push
push
xchg
add
push
in
jae
gs
jg
stc
call
dec
leave
sahf
jb
not
inc
push
xor
pxor
test
in
jb
adc
les
mov
aam
add
jl
adc
mov
push
clc
gs
sbb
xchg
outsb
pop
ja
push
incb
jmp
dec
xchg
les
sarl
nop
ret
sub
nop
and
push
test
mov
in
push
pop
pop
std
sub
rolb
ficoml
inc
inc
stos
movsl
aam
rcll
jecxz
daa
rcrb
fs
push
sbb
ficoms
jbe
mov
fisubrs
push
out
adc
movsl
ljmp
les
arpl
leave
test
in
ljmp
ror
ja
icebp
adc
loopne
push
ret
rcl
aam
hlt
sar
out
cld
lods
xchg
mov
shl
in
popf
mov
add
adc
out
adc
sahf
inc
addr16
stc
dec
pop
movsb
test
movd
rcr
mov
in
mov
ss
and
inc
fidivl
add
mov
xor
es
icebp
xor
adc
jb
cmp
leave
test
loopne
arpl
add
jno
adc
test
inc
xor
sbb
ficompl
pop
cmc
aaa
mov
int3
push
sar
add
insl
movsl
jp
rcll
aas
or
cmp
hlt
push
and
imulb
mov
ss
mov
pop
adc
xchg
cmpsl
dec
xchg
cmc
test
cld
jo
mov
icebp
fidivrl
stc
lret
je
shrl
adc
out
xlat
iret
cld
xchg
lea
push
frstor
jl
stos
fsubrp
mov
dec
in
mov
jmp
xor
xor
pop
xchg
out
jmp
sarl
test
dec
fcomps
pushf
addr16
xchg
or
lods
negb
mov
sahf
aad
inc
mov
cs
clc
cmc
outsb
mov
loop
ret
jmp
adc
sbb
nop
rcll
lret
sbb
pop
int
or
push
cld
mov
mov
adc
int3
adc
dec
test
mov
jecxz
push
dec
pop
negb
and
lcall
mov
push
fsubrp
pop
std
icebp
js
add
and
jb
sahf
jmp
fcoms
cltd
iret
mov
sahf
movsb
test
sbbb
jno
cwtl
dec
cwtl
push
mov
pushl
fstpl
pop
push
into
fisttpll
push
dec
outsb
xor
out
sar
cli
rcr
jne
adc
mov
adcb
inc
test
sbb
iret
xor
inc
adc
ret
icebp
ss
lret
fsubl
scas
jmp
sub
test
mov
stc
fiadds
fimuls
adc
cwtl
in
push
jmp
xchg
lret
fildll
bound
or
movsb
dec
sbb
xor
cmp
loopne
xchg
movb
fsubp
cmpsb
adc
sub
fisubrs
dec
movsl
cmpsb
sub
sub
outsl
stc
cwtl
js
neg
or
mov
rol
jmp
dec
and
push
cld
mov
push
pop
shll
or
xor
jg
outsl
fcoml
inc
push
adc
lock
xchg
les
cmpsl
dec
xchg
movsl
test
jmp
and
add
ficoms
les
aam
inc
int3
jle
jp
mov
loop
pop
outsl
push
or
dec
ljmp
pop
sbb
je
push
out
dec
out
inc
cmpsl
push
fsub
jae
pop
cs
lods
pushf
hlt
sbb
aam
add
jno
test
push
sub
in
mov
push
xor
inc
fcomp
out
aam
jmp
lea
jne
xchg
ss
xchg
aaa
popa
es
lods
dec
mov
jo
lcall
jg
in
push
mov
call
dec
fcmovnu
inc
sbb
ffree
ljmp
orb
xor
bnd
scas
popf
mov
call
mov
out
in
stos
or
xchg
aad
pop
in
push
in
push
ljmp
in
out
bound
dec
insl
cmpb
or
mov
fs
aam
pop
das
xchg
int
rcl
add
inc
popf
jecxz
ror
pop
out
call
out
pusha
clc
mov
push
dec
mov
into
dec
les
in
sti
adcb
sbb
test
in
ja
cwtl
je
daa
push
out
nop
bound
lods
xchg
and
loope
cltd
dec
sub
sbb
fldt
jne
jle
lcall
aad
sbb
lcall
imul
filds
jno
xchg
push
inc
les
cmp
add
rcrl
cmc
sbb
sub
or
jns
call
cmp
imul
mov
test
gs
lods
mov
mov
adcb
mov
repz
dec
into
arpl
xor
fmull
adc
aaa
cmp
mov
cmp
lret
jmp
js
xchg
insl
lcall
jecxz
ljmp
dec
jmp
and
aas
add
pop
xchg
push
add
popf
mov
fld
idiv
jbe
jns
cmp
nop
lock
jmp
mov
xlat
mov
mov
pop
ljmp
add
rcr
leave
pop
pop
loope
xor
test
mov
in
in
push
daa
xchg
xchg
insb
push
out
mov
lret
dec
mov
adc
scas
mov
add
repz
stos
cmp
sbbb
stc
rorl
lds
hlt
jecxz
adc
insl
rol
insl
sub
cmp
dec
leave
dec
add
cmp
or
aas
pop
add
stos
push
mull
leave
adc
xor
pop
jl
dec
xor
push
leave
cli
test
adc
add
ret
mov
leave
push
loope
cmc
xchg
mov
jle
sti
addr16
arpl
push
test
setbe
stc
clc
mov
inc
popa
and
jmp
les
cmp
add
fldcw
jmp
inc
shl
push
mov
movntq
out
cwtl
dec
les
pushf
das
iret
iret
lret
pop
int
icebp
push
out
cmp
mov
sbb
xchg
push
pop
sub
ljmp
xchg
stos
test
xchg
mulb
push
into
leave
movsl
aas
or
in
sbb
push
arpl
xchg
cmpsl
push
movsb
movsb
scas
push
adcl
adc
push
sbb
and
out
loope
pop
or
inc
jg
sub
cmp
popa
lahf
xlat
ja
dec
paddsb
mov
into
or
fisubs
push
addr16
inc
pop
je
adc
pusha
fxam
popa
pop
add
add
and
sbb
dec
xchg
frstor
mov
iret
xlat
addr16
out
mov
in
and
icebp
stos
mov
test
adc
shll
push
shll
lret
cwtl
hlt
jmp
loope
fisubs
jb
adc
int3
test
sbb
inc
adc
aaa
xlat
ret
ficoml
shlb
dec
movsb
clc
xor
xchg
sti
mov
ret
xor
cmp
hlt
test
ds
mov
lock
popa
lahf
les
test
inc
lea
xchg
out
sub
aaa
push
fbstp
adc
pop
aad
lcall
mov
adc
dec
ret
int
fstl
ss
movsl
int3
shl
mov
lret
push
jnp
mov
arpl
out
sbb
inc
xchg
mov
sub
gs
scas
mov
jmp
lock
mov
xchg
mov
je
dec
xorl
loopne
cmc
push
jnp
add
in
push
push
shr
sub
fadds
cmp
push
cs
das
addl
loope
aaa
xchg
push
int3
lds
push
shrb
sahf
lea
mov
or
sub
mov
dec
and
ss
sbb
je
push
sti
sub
out
push
les
les
push
adc
enter
shrl
xchg
dec
into
mov
add
shlb
jb
test
std
or
fucomp
sti
cli
test
fisttpl
div
les
leave
fmull
lods
in
movsb
psrlq
mov
jl
stos
test
mov
lcall
lcall
jo
sbb
leave
xchg
xor
imul
mov
mov
xchg
insl
cmc
sbb
les
cmp
std
mov
adc
fmulp
test
addr16
add
into
call
jl
xor
pop
incb
cld
test
push
mov
inc
cld
mov
adc
sub
push
and
push
xchg
test
mov
dec
int3
cld
push
rolb
ret
ret
jecxz
insl
xlat
mov
mov
mov
cmp
lcall
jbe
scas
dec
xor
mov
pusha
incb
in
int3
push
mov
push
ret
sub
inc
rcll
sub
push
mov
mov
clc
push
cmpsb
mov
loope
push
adc
movsb
fdivp
mov
ljmp
pop
je
adc
repz
lds
outsb
xlat
out
xchg
xor
sub
fldl
xchg
cmp
xchg
adc
sbb
clc
fisubrs
and
jmp
jne
push
into
jbe
out
aad
jne
iret
in
loope,pt
test
xlat
adc
or
ror
dec
fisttpll
mov
fsts
jno
addr16
jmp
cmp
fsubrl
fs
push
icebp
ret
cs
ficoml
jne
shl
enter
insl
bound
out
ret
aam
mov
aad
and
sahf
lods
mov
push
pop
cli
inc
inc
movsb
fildll
mov
mov
fidivrs
dec
push
arpl
out
push
add
incl
lds
sub
cld
inc
lret
aaa
sub
out
jmp
mov
fwait
mov
shll
fwait
out
jp
mov
stos
pop
popa
jae
in
cmpsb
xchg
into
lods
pushf
jmp
dec
call
pop
cmovp
mov
scas
iret
sub
call
cltd
data16
out
jmp
cwtl
pop
lcall
jbe
roll
or
add
in
lea
pop
inc
mov
mov
inc
les
arpl
cmpsl
pushf
into
movsb
xchg
loope
xchg
fisubrl
xlat
stos
or
sub
movsbl
pop
mov
pop
test
ret
cmp
xchg
sbb
clc
and
cld
adc
aad
nop
push
fxch
inc
mov
jmp
add
xchg
call
into
adc
cltd
cs
add
ret
mov
push
fadds
dec
in
xor
adc
and
sahf
add
adc
jno
sbb
testl
dec
stos
sbb
or
leave
jg
adc
outsl
fnstenv
dec
cmp
sbb
pop
bound
adc
mov
cmpsb
out
hlt
adc
call
mov
add
fs
clc
push
cld
dec
test
push
mov
mov
push
movsb
cli
and
sub
aad
lods
mov
sarb
mov
jmp
push
mov
movsb
nop
jl
adc
xchg
lahf
mov
ret
adc
in
call
pop
sahf
movsb
inc
lcall
inc
pop
and
inc
ficomps
mov
ret
lds
lock
imul
and
jo
or
lret
xchg
aaa
xchg
cltd
pop
sbb
shll
or
dec
rcr
cmc
xchg
aaa
mov
rcrl
xchg
test
sub
mov
xchg
sub
xor
outsl
test
shr
mov
mov
imul
push
jo
fstps
pusha
mov
scas
inc
scas
jecxz
dec
pop
or
out
push
xchg
outsb
mov
out
sbb
es
stos
stos
in
icebp
adc
adc
div
clc
cltd
cmpsb
shll
and
loope
sub
mov
sub
jae
jecxz
bound
enter
xchg
fwait
or
or
pop
push
movb
push
out
adc
out
adc
and
scas
filds
test
xchg
in
and
jle
mov
sarl
pushf
cld
xchg
dec
ljmp
test
and
inc
inc
or
dec
pop
cmpsl
ss
orl
push
repz
in
cmp
mov
lcall
sbb
in
add
aad
mov
inc
push
int
sbb
add
or
jl
outsb
jl
jmp
testl
imul
jbe
iret
cmc
rcll
sti
stos
cld
pushf
push
repnz
push
in
into
rorl
and
subl
enter
hlt
sub
fdivr
ljmp
jecxz
adc
jmp
pop
mov
cld
mov
cmpsb
stc
mov
push
shlb
cld
inc
ja
adc
mov
jb
push
les
rcrb
cli
sub
shlb
xchg
stc
into
or
imul
sub
daa
push
dec
mov
cld
js
push
inc
push
rclb
loopne
mov
aaa
dec
jecxz
in
stc
push
lods
or
sub
test
adc
mov
cld
fadds
xchg
jb
roll
loope
jmp
mov
pusha
ret
imul
gs
das
adc
xchg
sbbb
ret
aam
push
call
inc
pushf
imul
js
jmp
push
and
iret
stos
mov
mov
cmpb
test
addl
mov
mov
xchg
xor
fnstcw
adc
xor
push
xchg
jecxz
cmp
mov
xchg
push
out
fstp
loopne
jns
hlt
in
movsb
js
scas
shr
jg
jge
adc
inc
int
mov
std
pop
and
and
aaa
adc
imul
jmp
mov
jbe
in
cld
rorb
and
loopne
push
dec
in
hlt
cld
jbe
insl
sub
hlt
jecxz
push
cld
sub
bound
cld
jle
aaa
vmovshdup
cmp
repz
aas
std
and
jo
dec
adcl
xchg
xchg
mov
les
adc
inc
and
inc
iret
imul
scas
jnp
adc
cmp
cmpsb
shrl
adcl
icebp
mov
jb
mov
and
lock
es
ret
mov
inc
pop
imul
add
test
loope
mov
into
int
push
push
jns
shlb
or
xchg
stc
inc
fisttpll
pop
mov
div
push
outsl
andb
mov
lea
xor
call
xor
outsb
subb
adc
leave
cli
out
mov
sub
jns
inc
lock
nop
shlb
xchg
stos
ffree
xor
int
jle
jmp
adc
xor
mov
mov
jl
dec
jb
mov
in
lods
leave
inc
or
cmp
cmp
xchg
push
insb
fidivrs
push
xchg
iret
and
push
sub
mov
stos
mov
push
aas
loopne
cmpsl
cmp
and
lret
fxch
nop
add
enter
test
push
adc
aad
xor
out
cld
lahf
jle
notl
iret
lds
jnp
in
dec
adc
dec
shll
mov
inc
jecxz
into
sub
test
arpl
jnp
and
inc
out
mov
jnp
fsub
test
mov
jecxz
pop
cld
and
nop
loope
je
inc
mov
xchg
mul
in
cmc
scas
mov
lds
or
nop
out
xchg
mov
and
fnstenv
push
mov
out
and
mov
aas
cmp
lret
test
inc
mov
js
jecxz
shll
lods
and
xlat
pop
inc
push
mov
inc
jnp
jmp
cmp
add
pop
jecxz
push
movsb
xchg
mov
push
jecxz
popa
xor
hlt
sub
fisubs
xchg
dec
aaa
mov
jp
xchg
add
xor
jne
jbe
mov
subl
shr
fistpl
insb
call
out
add
cmp
dec
jnp
push
lock
ret
jg
push
testl
adc
jne
push
and
push
lods
cmp
push
mov
cltd
mov
movsb
aam
lcall
sbb
out
push
in
sub
shr
jecxz
push
sahf
out
les
mov
sub
cmc
mov
push
rorl
mov
call
cli
xchg
and
test
pop
mov
push
mov
cmp
sbb
stos
mov
cmpsl
pop
fnstenv
push
cmp
jge
adc
push
adc
lcall
stos
and
shl
mov
imul
stos
push
pop
mov
popa
cmpsb
loop
cmp
mov
cld
cmpsb
sub
jns
call
mov
fdivp
lahf
sbb
mov
sub
sbb
xchg
mov
mov
shr
aaa
cmp
dec
aad
ja
loopne
mov
cld
jecxz
push
shr
popa
insb
cmp
sbb
pop
sub
xor
int3
cwtl
pop
xchg
xchg
cmpsb
test
out
nop
sbb
jmp
add
push
into
ss
fsubrp
repnz
sbb
test
mov
jmp
sub
sub
cmp
fisubl
pusha
les
push
movsl
iret
std
sub
cld
sbb
push
jg
ljmp
daa
mov
push
jns
daa
fs
xor
in
cmc
fmul
sahf
sti
pop
adc
pop
push
pop
adc
ret
fsubp
mov
int
xchg
aaa
inc
cld
lea
or
stos
jmp
push
les
sbb
sub
fstps
mov
mov
fsubp
test
jle
test
jl
stos
fnstsw
cmp
mov
rcrb
or
rcr
or
sti
movsl
or
adc
adc
shlb
mov
dec
add
jne
mov
and
and
aam
std
sbb
adc
ficomps
popf
aam
hlt
xor
int3
push
les
push
and
cmp
clc
mov
cmp
jns
mov
je
movsb
sti
insl
inc
test
in
rcr
add
addr16
pushf
into
dec
jbe
sub
cwtl
nop
fwait
or
sahf
mov
lea
les
mov
add
mov
sub
pop
icebp
cs
lret
rcrl
nop
shll
cltd
sahf
rclb
add
std
mov
pop
and
xchg
out
cs
sarl
push
out
mov
in
test
push
inc
sahf
movsb
jecxz
push
shl
sbb
inc
inc
mov
out
in
push
pop
adc
pop
jecxz
fs
jecxz
xchg
inc
aad
imul
push
mov
add
cmc
push
cmc
icebp
mov
cmpsl
lret
adc
movsb
lret
loopne
xchg
sub
icebp
out
loopne
push
shlb
test
sbb
lods
ret
in
fxtract
push
shrb
push
jp
addb
ljmp
loope
cld
pop
dec
or
int3
xchg
shr
ljmp
push
push
mov
stc
les
rep
hlt
sti
mov
jmp
stos
in
pop
inc
gs
shl
aas
shl
push
mov
in
add
leave
pop
mov
pop
shll
or
and
incl
ficoms
jg
popa
movsl
lods
sarb
ret
mov
xchg
and
les
pop
lds
sub
cmp
jl
lds
inc
outsb
mulb
sub
jmp
jmp
jno
outsl
mov
fisubs
enter
cmp
mov
mov
and
test
pop
mov
stos
push
popa
pop
jne
in
imul
fisubs
imull
mov
in
mov
lahf
loope
mov
ficompl
add
fidivs
mov
hlt
cld
mov
aad
clc
pop
test
push
sti
mov
in
outsb
pop
mov
sub
and
cld
push
push
test
movl
leave
push
bound
add
adc
test
das
sarb
mov
mov
dec
adc
out
into
popf
test
push
fs
clc
adc
sub
fmul
xchg
shrb
mov
and
push
xchg
mov
or
fwait
adc
dec
jecxz
mov
inc
insb
mov
mov
xchg
xlat
decb
push
cmp
sarb
lret
xchg
jp
sub
fcomi
rcr
test
push
les
push
adc
test
sub
shlb
in
jb
dec
push
mov
insb
pop
pop
mov
fsub
jbe
sahf
pop
mov
into
push
lret
ffreep
es
jne
sub
add
clc
push
cmp
and
test
mov
mov
loopne
outsl
mov
jns
pusha
cli
scas
popf
pushf
push
sub
arpl
es
push
add
cld
xchg
cli
pop
dec
stos
inc
adcl
in
shl
cld
adc
mov
clc
add
xor
rcl
push
loope
push
jmp
jl
pop
lock
cli
adc
clc
and
push
call
sub
in
push
loope
imull
or
or
das
push
jbe
lds
pop
ror
adc
adc
or
cltd
in
aaa
xchg
out
out
or
jb
cld
ja
xchg
xchg
sbb
movsl
insl
jle
and
dec
ljmp
jp
mov
ja
mov
add
xor
sbb
hlt
cmp
dec
jbe
push
push
stc
dec
ret
mov
ljmp
mov
push
lret
fxch
sub
nop
sbb
sub
push
shl
mov
nop
sti
sub
mov
fcmovu
cld
jno
pop
mov
push
popa
mov
push
lods
pop
fiadds
out
inc
mov
sbb
mov
out
inc
in
mov
lea
mov
pop
sub
aas
aam
pop
mov
inc
loopne
ds
inc
sub
mov
inc
in
mov
mov
or
out
add
ljmp
out
hlt
in
dec
push
jecxz
daa
ja
and
sub
sbb
cmp
out
scas
jmp
mov
inc
fsub
jbe
jmp
jno
adcb
aad
sbb
cwtl
inc
dec
ja
pop
add
popf
xchg
cmp
jp
popf
icebp
in
mov
sbb
adc
and
push
fstps
push
push
in
cmpsb
test
push
or
icebp
pop
adc
mov
out
lods
idivl
xor
mov
sbb
shlb
fcomip
das
cli
cmpsb
jg
pop
outsl
push
inc
sub
std
scas
hlt
sub
cmpb
and
loop
pop
and
and
xchg
jbe
cmp
cmpsb
adc
mov
sub
cltd
add
pop
sub
test
pusha
divb
mov
add
loopne
and
xchg
out
jmp
in
xchg
cmp
mov
and
mov
jecxz
lock
dec
cmc
push
repz
bound
jae
call
sarb
rolb
jecxz
test
add
leave
pushf
sub
lcall
add
test
stc
shll
pop
cwtl
inc
popf
imul
cmp
mov
jg
mov
and
and
jae
mov
inc
mov
dec
jns
call
bound
iret
cmp
shll
dec
jb
or
cwtl
call
inc
adc
call
add
push
xchg
in
movsb
scas
pop
pop
jno
pop
mov
sti
inc
xchg
mov
hlt
push
xchg
sahf
arpl
cmp
mov
xor
pushf
mov
xor
inc
xchg
mov
xchg
idivb
inc
add
cs
fdivrp
pop
popf
and
push
cmpsb
ret
xchg
sbb
xor
push
mov
ret
sbb
insb
jp
out
cmp
pusha
xorb
hlt
sahf
adc
dec
cs
cmp
jne
mov
icebp
repnz
cmp
mov
movsb
stos
std
push
and
aaa
inc
repz
insl
call
xchg
out
jbe
pop
add
dec
subl
stc
pop
mov
mov
jp
mov
mov
cmp
mov
call
ror
fidivl
sub
mov
in
cwtl
jmp
movsb
mov
imul
xor
mov
fs
push
ficomps
mov
adcb
sarb
fdiv
sbb
mov
iret
inc
test
add
orb
imul
loope
fidivrl
jmp
pop
xor
jbe
mov
and
jle
scas
movsb
push
xchg
and
orl
pop
sub
xchg
jle
lahf
rolb
adc
lret
jns
pop
mov
iret
fs
aas
les
push
sbb
test
arpl
sbb
in
or
sub
loope
cld
cmp
pop
je
fidivrs
mov
push
and
rorb
jno
leave
pop
cli
call
adc
orl
movsb
dec
fucomp
adc
orb
mov
rolb
xor
cs
pop
and
or
or
push
fisubrl
xchg
sub
les
rcrb
lahf
insb
dec
dec
test
add
outsb
fcomps
dec
lods
xchg
sub
shll
iret
sbb
push
fldl
lcall
cmp
pusha
push
xchg
stos
push
pop
notb
aaa
incl
adc
int3
push
hlt
or
out
les
dec
jmp
lcall
clc
aas
xadd
inc
mov
inc
push
call
movsb
fildll
xor
push
ror
jecxz
and
ficoml
in
repz
jb
cs
in
mov
jne
pop
inc
addr16
pop
xchg
cmp
nop
mov
push
fisubrs
push
lods
in
xchg
xor
lret
and
sbb
test
mov
fbstp
fsubrl
popf
and
ficoms
push
sbb
inc
sahf
cmp
pop
pusha
out
cmp
push
loopne
fscale
int3
fnstenv
push
xor
arpl
cmp
push
into
pop
and
mov
sub
out
and
xor
pop
xchg
add
je
jg
imul
les
cmc
lahf
mov
pop
rcll
push
mov
dec
mov
sbb
mov
jmp
movsb
push
pushf
or
call
cmpsl
push
sub
std
shl
popa
in
dec
jb
cmc
or
jmp
pop
orl
mov
js
sti
cmp
or
fsubr
or
ds
xchg
cmp
adc
out
jno
arpl
fsub
cld
mov
sub
stos
cmp
adc
cmp
cmpsb
call
cmp
fadds
imul
push
dec
rcr
cmpsb
xchg
in
push
bound
push
sti
sub
mov
push
icebp
bound
cmpsb
sti
loopne
ret
shlb
mov
xlat
les
adc
or
ret
sub
test
negl
fdiv
jle
gs
jle
jnp
test
enter
xorl
aam
pop
bound
add
xlat
xchg
movsb
das
push
orb
push
jmp
jecxz
push
loope
cld
out
push
cli
aaa
pop
aam
jmp
je
push
shl
and
in
popa
push
loope
imul
jmp
fisttpll
pop
and
push
arpl
cmp
rcrb
or
mov
sbb
sbbb
aas
in
push
stos
dec
in
jp
jecxz
cmpsb
cmp
mov
andl
std
rcr
roll
add
jno
inc
lahf
jecxz
jmp
pop
lods
in
sahf
shll
mov
push
sub
fimull
mov
push
ffree
pop
mov
shll
and
push
addr16
ljmp
ljmp
in
sbb
loope
cmc
and
mov
mov
out
xchg
loopne
jecxz
cwtl
inc
in
jecxz
xlat
inc
fstp
jecxz
push
vmwrite
rcll
dec
cmp
aaa
loope
and
mov
test
cmp
pop
mov
out
popa
lahf
clc
push
fsub
ret
pop
pop
mov
insb
and
popf
movsb
mov
jne
gs
jecxz
rcll
sub
mov
mov
sti
xchg
or
cld
mov
push
xor
rcll
jmp
icebp
cmpsl
pusha
jno
dec
sub
and
push
push
xlat
stos
mov
into
lahf
rorl
jmp
rcll
loope
adc
mov
daa
addb
jbe
mov
push
js
lcall
sub
and
cmp
ljmp
in
push
aaa
cvtps2pi
dec
stc
testb
pop
sub
ds
xor
cld
mov
in
mov
subb
mov
ja
orb
jmp
mov
sahf
je
adc
test
mov
jg
bound
icebp
xor
std
or
mov
fmuls
icebp
scas
sub
add
mov
xchg
fsubl
rcrl
dec
aaa
cmp
adc
lret
call
insl
xchg
lcall
ds
je
mov
loope
arpl
int
ret
push
lret
sahf
insl
repz
xchg
xor
les
mov
fcmovbe
cmp
mov
adc
in
pop
outsb
ret
test
les
jle
jne
mov
pop
xchg
cmpsl
outsb
or
int
out
mov
push
jne
cwtl
stos
adc
pop
pop
pop
mov
jmp
cmpsb
add
lea
push
xchg
out
and
jmp
sub
jne
push
mov
out
cmpsl
dec
sbb
add
jl
add
popa
sbb
in
pop
test
leave
les
pcmpgtb
jmp
ret
es
shrl
lds
je
push
shrl
in
push
shll
in
mov
jno
enter
imul
mov
adc
adc
or
fnstsw
cli
add
loop
adc
jmp
loope
mov
iret
mov
push
insb
fidivs
and
aad
mov
jge
push
cmpsl
mov
push
test
into
pusha
pop
mov
in
aaa
testl
mov
and
outsl
jbe
push
mov
movsl
nop
aam
jns
call
jne
mov
insb
dec
lahf
sarl
sbb
lret
push
or
mov
push
lret
sti
idivl
movaps
pusha
pop
add
jbe
push
test
outsl
sub
mov
cmp
fldt
push
sub
sub
sahf
loope
test
jmp
aam
xchg
out
sub
in
xchg
lea
or
aam
stc
pop
mov
mov
clc
imul
jne
fxch
xchg
lret
jmp
pop
leave
andb
call
cwtl
in
addl
dec
adc
mov
cmp
add
cmpsb
adc
inc
push
lods
mov
mov
outsl
stos
push
dec
jmp
cmp
xor
push
in
and
testl
mov
mov
pop
lea
repz
xor
ljmp
mov
jae
cmp
mov
push
jge
arpl
sbb
sbb
xchg
xchg
cs
orl
out
das
add
arpl
xchg
notb
jle
or
fwait
imul
mov
xor
das
outsb
inc
pushf
jle
std
pop
sub
jmp
fildll
cmpsl
xor
int3
gs
xchg
and
in
ret
jb
pop
jbe
mov
xchg
fdivl
xchg
stos
push
add
adc
sahf
sbb
jp
dec
fiaddl
std
or
in
aam
in
jecxz
in
cld
dec
jg
repnz
mov
fwait
pop
iret
rcrl
in
mov
into
dec
daa
cld
mov
adc
cmp
mov
loopne
stc
adc
jge
shrl
pop
adc
mov
inc
test
jge
mov
xor
and
push
cmovl
in
imul
filds
iret
xchg
sahf
adc
or
mov
lods
and
xor
xchg
fsubrp
fcompl
and
sbb
imul
test
sti
add
test
xchg
xor
imul
adc
xor
sub
orl
inc
mov
loop
shlb
adc
aaa
sub
flds
loope
ret
inc
insl
push
ficomps
jecxz
sbb
sub
cmc
or
pop
loopne
push
push
xchg
or
popa
xor
imul
push
clc
hlt
popf
inc
fldenv
fisubl
enter
mov
in
lods
push
ljmp
out
test
and
into
fdivrp
mov
popa
cld
sahf
js
inc
mov
xchg
movsb
in
fcmovne
ret
shll
push
adc
sbb
mov
cmpsb
mov
adc
test
shr
rclb
xchg
pop
in
mov
sub
jle
fs
xchg
and
xchg
push
jne
sbb
stos
rclb
and
loope
cmp
ja
add
lahf
jmp
leave
adc
sub
mov
stos
into
das
xchg
cmp
rolb
in
adc
aam
and
lea
push
cmp
sbb
jae
push
fistl
pop
test
nop
stos
push
shll
int3
rclb
pop
clc
jecxz
pop
fistpll
daa
mov
and
mov
sbbl
cmp
ljmp
jmp
or
pop
stc
push
sbb
test
pusha
cmc
stos
std
movsb
inc
sar
and
outsb
push
test
sbb
sub
sub
jmp
cld
mov
hlt
dec
out
repz
aas
movsb
jp
push
adc
adc
call
or
mov
adc
jne
cmp
cmc
les
lea
jo
fsubrs
lock
mov
out
lret
je
xchg
pop
rcrb
cmp
or
mov
pop
adcl
popa
mov
dec
filds
mov
in
arpl
pmuludq
and
inc
push
fs
adc
cmp
rclb
les
ljmp
mov
notb
push
in
out
movsl
movsb
fs
jg
sbb
dec
jne
mov
or
imul
incb
clc
je
adc
inc
notb
pushf
cli
lahf
sub
mov
insl
cld
orl
popa
fsubl
mov
mov
enter
hlt
rolb
aam
lret
inc
push
sarb
dec
notl
popfw
sub
shlb
adc
or
mov
call
fs
push
les
icebp
iret
xlat
popf
cmp
mov
adc
adc
lods
enter
aad
mov
call
sbbl
jle
mov
mov
xchg
lret
incb
enter
and
push
cmc
ljmp
xor
xchg
add
add
xchg
popf
in
cmp
aas
nop
call
cmpsl
fcompl
pop
sub
aad
xor
movsb
movsb
shl
aad
je
ja
in
xchg
jge
and
adcb
pop
sub
jb
orb
jno
add
mov
aam
aad
push
ret
sbb
je
arpl
mov
movsl
icebp
inc
call
mov
jae
and
mov
inc
pmulhw
ret
into
inc
out
adc
lahf
out
test
lcall
fmul
or
je
in
jne
int3
loop
inc
fldenv
emms
add
jmp
push
shrl
and
mov
sub
push
test
jns
inc
in
in
add
pop
shl
pop
jnp
mov
lcall
or
pusha
xor
dec
mov
cltd
cld
enter
mov
sar
movsb
loope
push
in
call
cld
jp
cmp
jnp
aas
jns
ret
aaa
pop
popa
xor
adc
jnp
push
mov
hlt
int3
test
xchg
jecxz
shrl
pop
enter
xlat
test
mov
cmp
jne
mov
adc
push
push
sahf
fs
aam
ficoms
xor
push
stc
xchg
sti
inc
in
dec
les
pushf
push
lock
push
or
gs
ljmp
fcmovbe
pop
std
pop
cs
inc
cld
cmp
daa
jns
and
jp
in
fstps
stos
inc
cmc
xchg
sub
ficoml
ja
cs
mov
stc
lds
mov
lock
mov
sub
call
in
fsubs
lahf
pop
and
sbb
je
ficoml
in
or
jno
lea
loopne
dec
adc
pop
pop
out
or
lock
fs
add
push
sbb
in
lods
loope
push
jecxz
jmp
cli
xor
dec
movsb
popa
cmpsl
pop
bound
add
and
mov
pop
sbb
mov
jb
data16
int
and
cmp
repz
cmp
sbb
cs
out
or
mov
rcll
ljmp
jle
push
loopne
push
subl
push
add
add
push
adc
stos
and
in
int
pop
testb
inc
inc
mov
pop
sub
push
mov
sub
ficoms
mov
mov
stos
mov
jmp
or
fstp
cmpsb
xchg
outsl
sub
movsl
les
pop
loopne
add
test
jecxz
hlt
jle,pn
adc
jbe
aam
ljmp
filds
mov
sub
xchg
cmpsl
addl
mov
mov
sahf
sar
fisubl
les
mov
jne
cmc
jbe
pop
mov
loopne
add
mov
test
rcll
loop
pop
pop
sub
aaa
sbb
pop
aas
pop
xchg
sbb
dec
or
inc
loope
jecxz
mov
sub
popf
mov
push
push
jecxz
out
or
bound
add
in
pop
insb
call
into
repz
xlat
pop
mov
sarl
mov
call
add
stos
cli
lret
insb
ljmp
mov
adc
or
or
imul
jecxz
adc
ds
jbe
adc
dec
add
or
xor
mov
ficoml
aaa
js
or
imul
push
pmaddwd
mov
mov
pop
into
add
push
xor
adc
xor
daa
pop
pop
add
in
aaa
add
xchg
jno
sbb
pop
mov
cld
inc
fadds
roll
xor
bound
add
cmp
push
roll
jecxz
pop
push
cmpsb
fildll
adc
jp
cmc
xchg
cltd
dec
cld
push
xor
jne
sbb
cmp
icebp
mov
mov
pop
or
xorl
int
dec
movsb
inc
lret
jp
push
js
add
sarl
cmc
in
push
jbe
movsb
xor
sbb
test
add
inc
mov
cli
cli
mov
ret
aas
orb
cwtl
ljmp
or
or
aam
push
adc
test
lds
int3
out
xchg
out
imul
inc
dec
mov
lea
or
push
push
pop
pop
sub
xchg
leave
outsl
fiadds
leave
xchg
addr16
outsb
xor
push
jns
mov
cs
or
stos
fmulp
shrb
pop
dec
testb
adcb
jmp
call
sbb
push
mov
cld
ss
aaa
and
js
fisubl
add
dec
and
call
xchg
mov
sbb
pop
aaa
adc
je
or
test
aad
in
icebp
lahf
mov
jecxz
in
shrl
dec
cmpsb
or
pop
outsb
lods
inc
cs
cmpl
enter
cld
push
addr16
add
push
push
jnp
leave
popa
xchg
loopne
jmp
cld
test
call
cld
dec
and
in
imul
xchg
sub
jae
hlt
and
aas
ss
dec
adc
negl
mov
in
xlat
std
jge
hlt
cmp
cld
jle
test
jecxz
shrl
pop
xchg
out
test
mov
pop
pop
out
aam
xchg
idivl
and
dec
or
shr
dec
scas
outsl
test
inc
jp
xchg
scas
les
pmaxsw
and
xchg
decb
xchg
jp
adc
shrb
shrl
ss
scas
stos
adc
fucom
jne
mov
dec
imul
fucomip
fsubr
sub
mov
inc
into
dec
jmp
nop
jecxz
xchg
and
mov
filds
cmpsl
adc
sub
mov
pop
lret
les
in
mov
mov
in
jbe
movsb
mov
adc
xchg
or
in
js
mov
data16
jno
dec
pushf
pop
ljmp
outsb
mov
ja
cmp
mov
lcall
in
dec
test
sub
lods
in
imul
dec
in
std
rolb
mov
pop
lds
mov
sub
jmp
test
int3
cli
insl
in
cld
fisttpl
cmpsb
loope
pop
xchg
test
adc
lods
cltd
add
sahf
dec
push
sbb
pushf
xor
ret
mov
lock
adc
mov
in
sub
cltd
ss
jb
add
sbbb
sbb
and
pop
add
and
jo
les
ret
fiadds
sub
mov
adc
xchg
lret
mov
sbb
pop
mov
mov
xchg
push
add
leave
ficoms
lock
mov
xchg
pop
inc
rcl
push
push
adc
mov
and
dec
fisubrs
test
lahf
add
imul
mulb
xlat
loopne
jmp
or
mov
fbld
js
aas
push
cmp
and
mov
pop
push
xchg
dec
xor
std
sub
pop
jmp
add
or
frstor
dec
pushf
push
mov
addr16
call
int
cld
mov
fnstenv
push
jno
test
mov
hlt
fiadds
pop
ja
cmp
sbb
shl
adc
sbb
stos
rcrl
inc
shll
cli
cmp
pop
adcb
ljmp
mov
mov
iret
imul
inc
xchg
lea
aam
aad
dec
and
add
jge
dec
jo
int
daa
mov
sbb
mov
mov
push
adc
fsubrl
jnp
aas
incb
or
xchg
lods
divl
jbe
cmp
daa
mov
pop
rcrb
xchg
sbb
lret
push
adc
out
or
int
je
in
icebp
cmp
cmp
xlat
dec
popf
lahf
stos
pop
das
cli
dec
cld
inc
dec
test
sbb
mov
push
jne
push
dec
call
repz
jecxz
mov
inc
ja
lret
out
mov
xchg
push
jl
aad
adc
jp
push
xlat
shll
dec
fdivs
popf
lods
insl
js
mov
shll
cmp
stos
cmp
push
icebp
mov
push
ficoml
lods
push
rcrl
mov
dec
sbb
insl
or
adc
loope
pop
aad
dec
sub
insl
jae
call
jno
andl
or
mov
popf
cmp
movsl
push
rcl
inc
loop
or
xchg
mov
dec
add
dec
sbbl
bound
fmulp
inc
jl
and
xchg
push
je
mov
inc
in
out
jb
sti
les
test
aam
stc
inc
xchg
cli
pop
les
push
int
mov
test
inc
popa
pop
sub
insl
dec
xchg
push
push
shll
lock
pop
mov
test
loope
add
jnp
call
pop
mov
and
dec
ds
adc
sbb
jb
rcrb
sbb
add
scas
icebp
mov
dec
aam
pop
xchg
in
xchg
movsb
push
outsb
loope
repnz
xchg
mov
and
lock
lret
jle
sbb
rorl
mov
ja
cmp
dec
add
push
xchg
adc
hlt
hlt
jns
clc
mov
aam
xchg
out
jnp
fldcw
pop
xlat
pop
xchg
stc
or
cmp
jmp
mov
mov
add
popf
cmp
sub
jne
push
inc
jbe
sub
subl
js
ljmp
subl
les
cwtl
out
fiadds
push
enter
jno
mov
mov
mulb
cmp
jnp
lds
in
lea
in
lea
mov
shrl
jge
fimull
mov
clc
jp
push
out
test
mov
xor
sub
jl
loope
shrl
icebp
sarb
dec
xor
lea
sahf
lds
das
or
add
daa
insl
popa
pop
mov
push
int3
pop
inc
mov
xchg
mov
out
into
rorb
cmc
inc
gs
mov
repz
cmp
mov
jecxz
fsubr
cmp
imul
mov
test
subl
insl
or
add
sbb
dec
in
pop
inc
add
in
out
xor
in
int
sub
jo,pn
and
mov
cmp
fcmovb
adc
sarl
into
cmc
ss
popa
mov
sahf
pop
in
cld
cmp
leave
xchg
cmp
push
sub
aad
pop
bound
inc
pusha
lea
adc
fistl
xchg
lea
mov
ljmp
sbb
inc
scas
lods
mov
push
xchg
arpl
sbb
xor
aam
repnz
mov
xor
jns
jbe
xchg
sti
lds
pushf
lahf
or
jb
icebp
inc
adc
xchg
mov
cmp
dec
lods
pop
hlt
rol
enterw
hlt
fidivs
inc
jle
pop
pop
pop
mov
call
mov
aad
int
mov
mov
arpl
fidivrs
or
sub
adc
int
pop
mov
loope
aam
jno
shrb
imull
cs
lahf
add
jmp
loopne
dec
adc
pop
mov
push
add
nop
inc
rolb
xlat
stos
into
xchg
loopne
adc
push
dec
add
cmp
out
sbbb
rolb
mov
in
xor
push
fadds
jle
subl
outsl
push
and
xchg
rorl
mov
adc
pop
push
arpl
adc
ja
std
push
mov
fcoms
mov
fildl
xchg
rolb
pusha
push
scas
adc
outsb
aaa
in
loop
mov
jge
mov
xchg
ja
fcmovu
mov
sbb
mov
push
cmp
lea
push
inc
in
std
fidivrs
xor
mov
fs
les
fisttpll
jl
das
std
inc
out
mov
cmp
cmp
mov
bswap
shlb
mov
enter
xor
sub
sbb
in
test
and
dec
adc
jecxz
out
adc
out
pop
jb
sti
ljmp
mov
in
adc
cld
fildll
popa
mov
scas
inc
xchg
push
adc
mov
arpl
push
mov
mov
push
fs
xchg
xorb
jecxz
push
xchg
daa
stos
mov
out
fstps
daa
fstpt
pop
pop
popa
mov
and
add
cld
pop
scas
lret
divl
loope
adc
add
cmpsl
add
test
ljmp
paddq
outsb
xchg
push
mov
inc
bound
movsb
sbb
insb
shr
xchg
jbe
movsb
scas
aas
pop
inc
div
cmc
sbb
and
mov
cs
sub
dec
dec
push
movsb
dec
push
rcrb
mov
clc
adcb
xchg
in
andl
shl
int
std
and
xor
push
dec
and
inc
jae
cltd
cmc
test
lcall
in
int
pusha
cmp
fadd
int3
std
leave
mov
push
movsb
mov
xor
push
xchg
ret
cs
stos
cmpsl
clc
inc
inc
and
cld
test
add
pop
xor
sub
aas
rcll
push
xchg
sub
xor
out
push
dec
jo
mov
das
nop
movsb
xchg
in
push
sub
mov
ljmp
xor
pop
dec
imul
fwait
shl
call
outsl
bswap
divl
dec
std
aad
mov
and
xchg
shlb
icebp
fsts
pop
pop
push
pop
add
dec
shll
mov
pop
imul
pop
mov
cld
mov
mov
incb
cmp
imul
stc
cld
xor
dec
mov
aas
push
xchg
mov
inc
mov
orb
hlt
bound
ffreep
test
js
dec
mov
in
sub
sbb
aad
dec
in
sti
call
sub
jo
push
int
data16
xchg
xchg
or
test
push
xlat
xor
sub
sub
inc
push
inc
lea
rcrb
lea
jb
dec
scas
nop
cmp
dec
addr16
and
fcmovnu
push
in
shlb
aam
add
lods
xchg
loopne
or
pop
out
fs
mov
mov
icebp
jmp
movsb
test
jge
insb
inc
mov
stos
cmp
mov
call
out
inc
call
shl
push
or
call
stos
xor
scas
lods
fnsave
icebp
or
lods
sub
inc
jo
ljmp
popf
clc
std
sbb
inc
mov
push
imul
sbb
jp
adc
push
in
push
scas
into
aad
sub
mov
pop
sub
lods
gs
cli
adc
push
jle
sub
rcrl
jo
rcll
sbb
leave
jno
pop
fimuls
clc
call
test
out
imul
in
test
mov
scas
mov
loope
hlt
push
popa
add
dec
push
xchg
test
cmpsb
mov
iret
cmp
pop
inc
popf
stc
push
jmp
inc
rclb
jp
add
lods
inc
mov
stc
xchg
addb
sub
test
sbb
lret
inc
test
mov
in
mov
cmp
dec
into
insl
testl
or
and
testb
shlb
push
invd
scas
movsb
pop
cld
cmc
and
aaa
add
pop
or
test
loop
loope
pop
test
repnz
adc
adc
and
xchg
sarb
adcb
or
push
add
push
adc
in
imul
ret
push
data16
loope
clc
and
push
test
lods
sub
dec
lods
ret
cmp
clc
repnz
xor
fidivs
adc
dec
fcomps
mov
add
cld
mov
dec
pop
ret
stos
hlt
test
add
lds
fninit
rcrb
dec
mov
cmp
xor
adc
fcmovbe
scas
testb
xor
icebp
pop
push
sahf
fucom
and
cmp
mov
add
xor
pop
or
jle
aad
fmull
sahf
int3
ret
push
dec
popa
fdivp
lds
mov
dec
lds
lds
aam
push
push
mov
push
fdiv
stos
int3
jp
pop
shlb
not
push
fildll
jno
std
dec
in
lea
out
out
mov
ficoms
insl
ljmp
sahf
in
mov
jns
fisttpll
jno
pop
fistps
cmp
test
and
jg
sbb
adc
cmp
dec
xchg
jecxz
hlt
ds
xor
jmp
fldcw
fs
icebp
adc
bound
jg
mov
movsb
pop
mov
inc
aam
enter
testl
mov
xor
mov
cs
mov
inc
mov
mov
imul
jae
or
aad
into
sub
mov
adc
mov
jmp
aas
sbb
sahf
leave
popl
mov
mov
stc
mov
push
int3
shrb
sub
stos
mov
inc
ret
mulb
mov
sub
jns
movsb
inc
scas
mov
cmp
aam
cld
xor
inc
sub
scas
mov
or
and
adc
add
cmpsb
rcrl
insb
jge
fnstcw
shll
fmuls
adc
imul
push
and
xchg
mov
cli
or
in
jns
xchg
jnp
aas
push
mov
lret
in
or
ja
sub
in
and
ds
add
xlat
call
push
daa
cmp
push
shl
ja
mov
mov
add
jns
xchg
andl
dec
jb
xchg
and
jns
into
out
int3
inc
inc
pop
aam
mulb
iret
sub
xchg
sahf
orl
fiadds
mov
fsubs
lea
push
test
push
fisttpll
fmulp
add
scas
sahf
inc
mov
mov
int
sbb
xchg
mov
lods
push
jp
jne
sti
adc
pop
je
scas
cld
mov
enter
jnp
jb
fisttpll
outsb
mov
inc
xor
mov
insl
add
pop
pop
std
hlt
mov
dec
add
pop
loope
cmp
pop
dec
loopne
lods
adc
cmpsb
pop
in
test
stc
shrl
pusha
rcll
sbb
xchg
mov
push
in
push
fistpl
sbb
sbb
jmp
fldl
mov
push
pop
sub
sbb
adc
test
fldl
push
int3
jp
mov
movsb
push
call
lret
lahf
mov
jo
push
mov
dec
push
xchg
loope
scas
jp
cmp
sub
fstl
test
pop
mov
dec
mov
push
ljmp
stos
pop
mov
sbb
adc
dec
or
addl
test
xchg
in
jnp
call
add
cli
mov
or
hlt
jmp
fildll
movsb
sub
lea
jmp
add
aad
or
inc
in
daa
outsb
mov
xchg
or
fprem
add
jge
and
push
cld
movb
pop
mov
jae
lcall
add
ja
and
mov
inc
push
loope
xchg
in
popa
sub
xlat
jbe
lods
push
movsb
and
test
jns
cwtl
fsub
in
and
test
xchg
mov
jo
sbb
push
xchg
mov
lret
dec
insl
add
sbb
pop
sahf
push
test
in
pop
adc
push
sahf
outsb
in
mov
les
imul
in
sub
icebp
cli
stos
fldl
cmc
mov
stos
sti
call
sub
cmc
in
faddp
into
pushf
sub
in
ds
push
and
sahf
fisubrs
push
fidivrs
lock
cmc
icebp
clc
ret
dec
hlt
fiaddl
dec
hlt
div
inc
lea
int
mov
sub
repnz
sti
addr16
cmc
adc
int3
data16
in
pop
jae
push
scas
adc
int3
cmc
xchg
dec
push
sub
xor
pushf
enter
dec
xchg
mov
outsb
test
add
jg
jb
rol
in
call
sub
test
jp
out
test
and
mov
lahf
mov
in
dec
cmpsl
sbb
adc
add
adc
dec
leave
push
fyl2x
jge
stos
sub
cmp
aad
ja
iret
out
inc
adc
dec
ss
xchg
or
cld
ss
adc
adc
push
add
mov
sub
xor
movsl
sahf
je
push
mov
icebp
stos
or
sub
mov
sbb
pusha
inc
mov
cmp
pop
clc
rcrb
in
and
dec
or
movsb
xorl
inc
push
push
adc
sub
push
pop
jecxz
popf
push
hlt
test
or
call
fisttpl
lods
sbb
cmpsb
push
in
push
pusha
sub
pop
jbe
sub
jne
add
lods
mov
ljmp
push
in
xor
adc
jb
xchg
cmp
push
mov
pop
xchg
cmp
xor
adc
addr16
mov
popa
loopne
rorl
sahf
jbe
es
lea
adc
xchg
sbb
adc
mov
mov
cmp
push
and
repnz
jne
and
adc
popa
sub
xor
test
out
mov
aad
push
jecxz
movsb
mov
sbb
lcall
rcr
adc
sub
dec
mov
sub
cltd
pop
mov
sbb
xor
mov
imul
int
dec
adc
aad
add
aaa
push
idiv
cmovbe
pop
adc
push
mov
adc
sub
push
and
int3
sbb
jmp
stc
mov
sub
cmpsb
mov
mov
xchg
mov
ficomps
shlb
loope
sub
pop
pop
xchg
jecxz
mov
aad
movsl
ret
mov
out
mov
bound
jne
adc
ret
lret
pop
sub
adc
stos
movsb
les
sbb
dec
fiadds
add
mov
jne
ss
adc
xchg
fnsave
mov
jecxz
mov
test
jmp
cmpsl
push
sub
movsl
xchg
push
push
xor
xor
js
dec
out
icebp
cmp
call
in
lret
sti
inc
cmp
ja
pop
mov
jns
sub
inc
pop
mov
lret
enter
dec
shrl
xor
in
jecxz
and
push
and
int3
sub
mov
pop
jle
dec
repnz
lret
mov
leave
mov
nop
scas
jecxz
push
push
inc
call
cmp
idiv
dec
fidivs
lahf
jp
sti
sub
cmp
ljmp
fistl
out
sahf
out
in
rcll
hlt
fsubrp
inc
icebp
xor
jae
sub
cmp
repz
adc
testl
or
rcrb
test
cli
xchg
enter
repnz
out
dec
clc
and
jmp
push
pop
adc
popa
in
popf
mov
shlb
ficoml
jmp
mov
popa
push
pop
lcall
jmp
dec
jecxz
cmp
insb
sub
and
in
pop
cmpsb
insb
jno
fs
pop
add
ja
in
aad
repz
repz
out
scas
inc
imul
push
enter
test
push
sbb
jecxz
test
insb
lds
sbb
cmpsb
insb
lock
inc
xchg
repnz
push
push
in
ret
pop
rorb
stos
jmp
movsb
cmp
fs
or
cli
rol
fists
es
jecxz
xor
xchg
jno
inc
pop
popf
out
push
push
fistps
int
clc
inc
aam
addr16
popa
repz
dec
fcoml
clc
jb
xchg
outsl
out
mov
ficomps
lock
into
mov
xor
jbe
add
pop
out
push
jecxz
mov
pop
inc
in
out
insb
fistpll
mov
icebp
aaa
inc
cli
adc
xor
push
dec
int
or
xchg
bound
stc
out
movsb
ljmp
repz
mov
rcll
hlt
clc
pushaw
mov
shl
cmp
ljmp
shr
into
stos
fcmovnb
add
shll
mov
mov
enter
movsb
mov
push
push
pop
cs
adc
mov
mov
pop
xlat
insb
jmp
push
mov
cld
mov
or
jno
ficomps
xor
les
movsb
add
into
mov
push
add
das
rorl
lret
inc
jmp
mov
mov
adc
xlat
adc
sarl
push
into
cmpsb
fs
imul
push
icebp
xchg
inc
mov
xor
adc
pop
adc
mov
push
xor
mov
test
repz
adc
scas
dec
rolb
xchg
pop
pop
push
in
pop
adc
pop
and
xor
imul
adc
xchg
stos
fildl
in
inc
push
dec
mov
add
arpl
int
fidivrl
rclb
out
cmp
mov
in
in
dec
je
je
sub
out
push
push
xchg
sub
in
pop
mov
sbb
xor
ret
inc
into
outsl
jb
mov
or
jmp
subb
in
sub
repz
mov
rclb
js
or
jecxz
mov
and
ret
xchg
in
jmp
adc
cld
cli
cmp
out
stos
cmc
fisubs
mov
cmpl
mov
fadds
inc
mov
add
aam
jo
ja
cld
xor
push
aad
or
popa
and
ds
sub
xchg
add
jne
jbe
sbb
aad
lods
popa
and
cmp
clc
imul
in
jecxz
jb
jo
xchg
cmp
add
add
mov
loope
adc
lock
pcmpeqd
out
fnstenv
in
dec
lock
xor
xchg
jge
imul
pop
lods
icebp
jmp
lock
sub
fstp
out
aas
clc
fsubs
lock
test
cld
push
cs
dec
jmp
hlt
adc
cmc
data16
jb
adcl
cmp
into
leave
push
out
in
hlt
scas
mov
xor
mov
movsl
jp
jmp
testb
lods
ror
fsubrp
jne
sbb
in
and
bound
pop
xchg
loope
js
das
into
ja
ljmp
call
mov
push
in
cli
les
inc
int
insl
and
bound
mov
sahf
call
lret
shll
fs
in
in
stc
jmp
sbbb
push
cmpsl
mov
push
shr
lock
loopne
mov
xchg
icebp
outsb
lds
loop
cmpsl
and
pop
je
out
aaa
pusha
push
ja
or
mov
dec
dec
dec
xchg
loop
in
pushf
out
sti
add
call
call
testb
lcall
dec
xor
int
and
adc
pusha
and
sub
enter
hlt
sbb
jl
outsb
lea
fdivrp
push
jg
mov
cmpsb
in
loopne
mov
dec
out
push
lea
mull
pusha
jmp
into
das
push
sbb
out
icebp
ljmp
add
notl
mul
cld
mov
movsl
pop
lods
fs
pop
cld
inc
pop
je
inc
aam
test
or
xchg
jnp
adc
in
inc
imul
jle
or
inc
cmp
dec
cmpsl
stos
jp
aaa
fdivrp
add
adc
adc
loop
pop
add
xor
call
ss
push
adc
dec
xor
sub
inc
pusha
lahf
cld
inc
int3
sub
in
pextrw
jno
idivl
mov
pusha
mov
jg
aad
ret
adc
adc
dec
push
cmp
cld
lret
stos
icebp
mov
mov
pop
lret
movsb
or
adcb
pop
in
cmpsl
rorl
cmp
lea
sub
shrb
add
sti
xor
mov
enter
cmpsb
xchg
shl
into
sub
sti
xchg
shll
pop
and
pop
fsubrs
cld
inc
mov
test
cld
loope
adc
es
sub
repnz
jne
outsb
or
and
xchg
mov
add
in
cmc
add
jecxz
sbb
jbe
leave
jmp
testl
aad
aas
andl
or
int
push
jb
into
ds
imul
fs
movsb
mov
inc
das
pop
adcl
mov
add
movsl
test
lret
loope
mov
and
je
mov
jo
push
mov
loope
movsb
sahf
data16
sbb
mov
iret
ja
bound
in
fisubs
test
lret
and
cld
push
mov
cmc
dec
mov
or
xchg
divps
lcall
adc
outsb
lcall
jb
popa
movsl
stc
inc
movsb
xor
jmp
loope
cli
int
xchg
daa
or
jb
imull
out
nop
js
hlt
jae
and
test
add
inc
loop
pop
insl
rcrl
ret
or
cwtl
xchg
dec
adc
cld
int
roll
dec
loope
out
sbb
jb
add
dec
out
sarb
jb
xchg
fisubrs
nop
mov
jmp
fisubl
xchg
sti
outsl
imul
mov
pop
data16
and
and
pop
test
call
sub
jge
pushf
jl
add
mov
lahf
in
fsubr
add
dec
les
jle
js
clc
idivb
ffreep
push
outsb
dec
add
xor
adc
dec
adc
xor
xchg
mov
inc
dec
jge
int3
fnstenv
jecxz
lret
shrb
xchg
iret
pop
xchg
inc
jmp
add
jecxz
int
pushf
nop
cltd
cld
jp
push
xchg
in
je
hlt
mov
cld
fisttps
imul
rcr
cmpsb
adc
push
lret
pusha
test
fimuls
mov
fs
push
iret
jmp
into
xchg
mov
lods
cltd
out
push
out
enter
pop
push
dec
xchg
sti
bound
arpl
xchg
mov
nop
sbb
dec
lcall
pop
push
fimull
xor
das
dec
ret
fbld
data16
ret
or
xor
pop
stos
stos
adc
loope
rcrl
repnz
sub
mov
rorl
sbb
xchg
cmp
fdivrl
and
push
mov
and
push
sbbb
pop
sub
mov
ljmp
mov
sti
inc
pop
adc
cmpl
sub
test
jecxz
into
and
xchg
push
jns
icebp
mov
dec
stos
push
jl
jecxz
cmpsb
ret
in
mov
cmpsb
pop
jmp
aaa
push
inc
xchg
loope
subb
push
cmp
cmp
push
push
dec
pop
sbb
cld
sbb
jg
les
or
jo
clc
or
mov
fdivrp
pop
subb
stos
into
shrb
test
aam
inc
dec
dec
enter
lock
cmp
aas
mov
fldenv
shlb
xor
hlt
fs
popa
rcr
jb
fsts
dec
mov
sub
ds
out
dec
inc
call
inc
test
jno
cld
shll
mov
clc
test
je
push
nop
push
pop
sbb
fnstsw
cmp
aaa
std
jp
mov
push
and
xlat
or
aam
sub
sub
scas
dec
insb
test
mov
jno
pop
gs
mov
inc
js
add
ficomps
hlt
add
test
jecxz
leave
dec
out
ret
cmp
push
mov
inc
and
mov
dec
adc
mov
push
or
sub
push
sub
pop
cmp
push
jne
or
call
out
fnstsw
sub
xchg
ret
mov
aam
in
dec
jne
sub
push
inc
xlat
test
loopne
push
mov
mov
test
sub
rclb
call
notl
fbld
xlat
orl
mov
aad
arpl
push
ficoms
pop
into
fildll
pop
fnstcw
and
frstor
mov
sub
xor
ljmp
cmp
adc
pop
inc
mov
and
hlt
ds
push
push
mov
cmp
nop
lods
jge
loop
arpl
call
push
jb
ljmp
sbb
mov
pop
xor
fnsave
fsubl
xor
mov
add
jle
cmp
push
xchg
jle
mov
test
sbb
jg
icebp
and
sahf
cmp
xor
push
fstl
aad
mov
xchg
sbb
jl
adc
mov
mov
mov
dec
cmpsl
xchg
into
inc
adc
jno
filds
ret
sub
ljmp
inc
cwtl
pop
jp
out
les
into
mov
jmp
xchg
sarl
inc
repz
inc
adc
popa
movsb
pop
cmp
stos
rcr
xchg
icebp
test
loopne
cmp
rol
ficoms
lods
cwtl
into
btc
lahf
and
add
mov
mov
test
sbb
mov
test
dec
push
adc
hlt
out
mov
ja
push
or
pop
in
xchg
mov
sub
shll
inc
lcall
or
and
sub
call
das
stos
adc
sahf
cmp
dec
in
mov
stc
or
addr16
jle
das
jecxz
insl
in
outsb
adc
pop
or
adc
adc
xchg
xor
test
call
pop
jle
scas
pop
sub
out
cld
ret
lds
xchg
cli
mov
sbb
in
test
push
in
call
mov
sahf
mov
push
aas
fcmovbe
cmp
int3
sahf
xchg
cmp
pop
jg
pop
jae
stos
shl
mov
sub
clc
sub
pop
fcmovne
mov
mov
fisubrs
lret
jge
frndint
jle
jge
ja
dec
and
pop
testb
ret
fstpl
fcomp
mov
jecxz
fildll
jecxz
movsb
shll
test
jns
add
push
rcll
lcall
sahf
push
inc
dec
fsubrp
pop
rcr
adc
adc
and
ljmp
sub
inc
inc
fiadds
mov
popa
rcll
aad
mov
cmp
and
dec
aaa
in
test
in
jo
shl
adc
adc
mov
mov
pushf
into
loope
ret
loopne
adc
mov
add
dec
testl
cmc
mov
fiadds
lret
add
push
loope
fnstcw
lret
mov
lds
xchg
fs
push
lahf
cmc
outsl
pop
adc
orb
sar
les
pop
repnz
sub
js
outsl
test
sahf
jae
out
add
mov
push
ja
ljmp
shll
adc
or
and
dec
xor
xlat
sti
cwtl
mov
pop
out
xchg
leave
mov
mov
out
frndint
push
adc
mov
aaa
sbb
jnp
jo
in
adc
stos
out
in
mov
pop
into
mov
mov
fdivrs
xchg
mov
bound
cld
arpl
push
ficoms
cld
sub
push
sbb
nop
sub
or
inc
push
repz
cmp
sub
pushf
adc
cli
imul
nop
pop
ss
in
or
dec
aam
sub
add
cmp
aaa
rcr
in
aam
fdivrs
repnz
xchg
jge
mov
adc
cwtl
in
dec
nop
pop
sub
psllw
ljmp
add
xor
push
stc
pop
stos
aad
sahf
xlat
adc
in
dec
nop
fildll
sbb
or
adc
mov
add
sahf
xchg
fimuls
pop
add
mov
push
clc
mov
cmpsb
ret
adc
fcoms
pop
sub
push
mov
repnz
sahf
jecxz
dec
aas
int
mov
outsb
xchg
jmp
out
fnsave
inc
sub
or
sub
xchg
les
dec
jle
nop
push
imul
ret
jbe
push
insb
inc
jmp
pop
movsb
loopne
movsb
inc
adc
mov
xlat
push
test
sub
or
popa
iret
pop
xchg
loope
sarl
push
cmp
out
aaa
cltd
hlt
pop
lock
testb
mov
mov
push
fildl
fnstsw
lret
repnz
adc
mov
and
xchg
cld
sub
cli
mov
addr16
test
shl
inc
mov
or
bound
idivb
imul
popf
outsb
cli
and
add
cmp
cld
push
cmovg
faddl
sbb
lret
xchg
ds
sbb
xchg
xor
xor
std
push
xor
in
ror
mov
adc
mov
pop
aad
fldenv
or
pop
test
mov
sti
dec
mov
adc
lea
pop
les
sub
aam
add
jno
adc
mov
cmp
sbb
add
inc
sub
pop
pusha
ljmp
cmp
cmp
into
inc
pop
or
lods
pop
in
stos
jae
pop
jne
sub
mov
popa
adc
cmp
push
push
dec
bound
jle
test
lock
xor
fnstsw
pop
in
clc
jae
mov
in
inc
sti
mov
movsb
jecxz
adc
int
test
xor
sub
imul
push
ss
clc
aam
xor
cmp
cmc
int3
aas
pop
cli
daa
fwait
andl
push
mov
lds
test
in
sub
int3
mov
hlt
jge
inc
push
dec
in
idivb
dec
gs
loopne
jecxz
fnstcw
fldcw
push
inc
les
push
ljmp
push
xchg
fwait
xchg
mov
xchg
xor
repnz
loopne
jecxz
ja
fcmovnbe
sti
xor
mov
sub
xchg
sbb
cmp
cld
pop
mov
adc
lock
or
mov
mov
mov
xchg
std
mov
cltd
dec
inc
xor
testb
mov
rolb
sub
mov
bound
inc
xchg
xor
js
jno
push
loopne
scas
pop
mov
insb
pop
xchg
mov
cmpsl
mov
es
pop
pushf
imul
ror
loopne
cld
cmc
jle
aam
clc
stc
jnp
sub
mov
call
hlt
loope
lds
pushf
pop
xchg
loope
popa
clc
sub
mov
xlat
sbb
mov
xchg
jecxz
mov
adc
adc
cmpsl
popf
int3
daa
mov
popf
pop
mov
jp
jp
sub
clc
cmpsl
push
enter
je
push
jmp
add
fbstp
and
sub
in
add
out
lods
lea
ljmp
mov
out
mov
shr
fisubrs
xchg
mov
ret
cwtl
lret
xchg
jmp
cmpsb
les
xor
push
mov
push
xchg
bound
test
xlat
gs
push
or
sub
mov
arpl
fnstsw
sbb
dec
clc
sub
popf
fucom
and
mulb
mov
dec
xlat
dec
cmpsl
fstl
popa
fstpl
dec
dec
addl
jmp
mov
clc
push
mov
jecxz
mov
jle
or
and
xchg
mov
or
aad
imul
popa
xchg
movsb
pop
jns
sub
or
cli
xchg
mul
cs
jecxz
negl
leave
cmp
push
pextrw
mov
stos
jne
xchg
cmovno
stos
test
push
or
push
fldcw
xlat
fsubl
xchg
xor
shr
flds
xchg
push
jecxz
int
aad
mov
aam
fnsave
jg
jp
mov
or
jle
mov
popf
movsb
lods
clc
cmp
lret
adc
and
pusha
dec
mov
test
outsb
push
push
jb
xchg
mov
call
mov
inc
mov
faddl
into
xchg
pop
imul
in
out
jne
cmpsb
sbb
andl
mov
out
lret
ljmp
outsb
jns
jmp
xchg
inc
stc
rcll
and
out
arpl
jmp
sub
fildll
and
add
mulps
adc
pop
jmp
push
xchg
push
stos
or
in
addb
jne
dec
out
mov
jge
imul
cmp
push
fimuls
jl
xor
cmpsb
push
ret
add
sbb
movsb
jbe
fcomi
mov
jb
lret
mov
add
push
xchg
arpl
adcb
fnstsw
pop
std
jbe
jmp
fldl2e
out
xchg
in
sub
dec
xchg
jnp
pop
fldcw
push
fsubrp
stos
inc
pop
sbb
jg
rcll
movsb
pop
lcall
mov
jb
sbbl
addr16
xor
call
adc
mov
lret
fincstp
sub
xor
pop
cmp
pop
mov
cli
xor
jno
pop
stos
stc
out
popf
xor
cwtl
repnz
in
sbb
jge
lds
dec
sti
ja,pt
sub
push
jle
cmp
pusha
mov
xlat
pusha
push
lods
mov
push
bound
and
sub
in
stos
mov
les
gs
into
out
sub
xchg
push
fldl2e
repnz
cmp
psubq
jp
sarl
cmp
lahf
push
pop
and
mov
jecxz
pusha
jl
dec
sub
sub
mov
loopne
xor
mov
mov
jne
pushl
push
push
in
popa
push
cmp
aam
sbb
loopne
dec
inc
adc
adc
push
loopne
xchg
gs
repz
dec
xchg
out
shrl
icebp
push
stc
dec
in
mov
popf
aaa
mov
mov
push
dec
out
pop
cld
and
mov
ljmp
popf
mov
mov
pushf
mov
xchg
cmp
inc
inc
pop
jns
add
test
leave
cld
pop
push
lret
pop
mov
xor
adc
rcll
jno
gs
pusha
and
lods
fimuls
and
dec
mov
push
pop
mov
jl
out
negb
pop
fbstp
xor
xchg
inc
jge
arpl
sub
sbb
sub
sbb
loope
rorl
leave
cmp
xchg
inc
jmp
notb
incl
fxtract
mov
arpl
xor
pop
insb
push
jle
repnz
orl
mov
xor
add
and
push
fistps
dec
movsb
mov
jle
jno
ret
jg
shl
inc
jbe
out
xchg
mov
and
jo
lods
out
mov
outsb
mov
bound
xchg
push
lods
mov
cmp
out
add
lods
bound
inc
test
xchg
mov
dec
clc
shl
and
scas
movsb
aaa
cwtl
pusha
add
cmp
mov
push
out
cmp
fs
in
dec
and
and
xchg
not
fistps
imul
sub
sub
lret
testl
mov
or
add
lret
fcoms
stos
jl
mov
jmp
notl
sbb
xor
and
inc
mov
je
aaa
push
push
lods
mov
sub
popa
and
leave
cltd
hlt
and
test
sub
out
adc
test
inc
inc
je
in
lock
idivb
jle
and
movsb
std
lock
ret
sub
das
test
ret
pushf
mov
dec
or
sbb
sub
shr
cld
and
sub
data16
sub
insb
push
jg
adc
and
rcrl
mov
xchg
sahf
cmc
sar
sub
inc
testb
push
sti
in
fprem1
in
push
rcll
aaa
sarb
xchg
in
rcl
fisubrs
mov
mov
subl
out
sub
jecxz
fs
or
sub
xlat
push
xchg
test
mov
fcomps
or
mov
cmp
fisttpll
out
sbb
inc
mov
adc
shl
xchg
fwait
xchg
rcll
push
popa
dec
push
pushf
jne
mov
pop
aad
movsb
cmpsl
pop
cli
dec
mov
fimull
xchg
or
nopl
add
and
mov
jecxz
movsl
popf
xchg
jnp
aam
and
mov
dec
jnp
fdivs
cmc
sarb
hlt
pop
test
cmp
pushw
mov
loopne
in
cmp
pop
xlat
inc
mov
lds
pusha
arpl
pop
cld
mov
std
aam
aam
pop
pushf
sar
mov
rorb
inc
cld
sub
aas
cmp
das
in
xchg
push
adc
xchg
fldenv
push
lds
hlt
sub
in
jg
xchg
loop
push
dec
daa
mov
orl
mov
pusha
div
push
cmovg
loope
xor
mov
inc
into
pop
fidivs
loopne
movsb
mov
jle
mov
jbe
adcl
scas
add
imul
push
pop
cmp
int3
jle
insb
shrl
fmulp
in
cmp
shrl
fiaddl
aam
jo
lock
maskmovq
in
leave
dec
shll
cld
push
movl
out
rcl
dec
roll
rcrb
dec
cmp
shll
jae
aaa
movsb
jnp
inc
les
rol
jge
or
dec
fists
movhps
lock
inc
push
pop
jge
mov
mov
insl
stos
jmp
cmp
xlat
adc
mov
xlat
popf
shl
aam
jl
pop
aaa
aaa
out
push
ror
jb
dec
imull
mov
xchg
xchg
jmp
lcall
mov
mov
pop
ds
fimuls
out
dec
sub
iret
stc
stos
dec
lock
in
cld
jmp
or
sahf
push
sbb
sbb
pop
mov
insl
pop
push
cmp
lea
adc
into
sahf
pop
sub
cwtl
int3
adc
dec
adcl
lahf
idiv
sahf
lahf
mov
cmp
push
push
sub
sub
out
pop
sub
std
into
mov
push
int
xchg
push
sti
cwtl
test
adc
lcall
popa
xchg
arpl
nop
mov
sub
fildll
aam
outsb
stc
push
mov
or
cmp
cltd
dec
into
xchg
jb
dec
loope
ficompl
mov
stos
or
pop
sub
push
xchg
push
inc
shll
lds
ja
testb
or
push
movsb
std
sbb
fs
fucom
testb
push
add
add
jl
and
mov
push
andnps
dec
les
mov
jmp
inc
add
lret
adc
adc
mov
movsb
sbb
cld
jb
ret
arpl
shll
cld
sub
cmpsl
imul
inc
cmp
pop
xchg
into
mov
push
pusha
push
cmpsb
push
cmp
xorb
lret
loope
fcmovnu
and
aas
sbb
push
push
aad
or
lds
adc
mov
adc
dec
and
fiaddl
lds
adc
mov
jno
sahf
jp
js
jmp
xchg
fsubr
or
test
test
push
adc
and
loope
xchg
sbb
jp
push
jmp
mov
shrl
mov
fldenv
inc
ljmp
fstpt
push
scas
fmuls
mov
insb
lret
std
inc
push
je
leave
and
adc
pop
dec
in
push
loope
xchg
pop
dec
mov
imul
ljmp
repz
les
push
not
xchg
das
jge
loop
sbb
jb
movsl
cltd
cs
sub
xchg
sub
mov
lea
push
jle
cld
movl
fsubr
add
mov
stos
enter
xchg
in
sub
sarb
enter
out
and
fadds
xchg
xor
pop
cli
aaa
pop
push
xchg
shr
push
fcmove
fdivs
xlat
cld
test
mov
repz
pop
mov
gs
jecxz
faddp
xchg
pop
loope
mov
cli
mov
fucom
call
and
stc
inc
loopne
enter
pop
dec
test
ret
jbe
or
pop
adc
inc
andl
or
cld
sub
mov
es
repz
loope
shl
shll
push
inc
leave
mov
hlt
jl
fnsetpm(287
not
or
and
prefetch
ret
in
jno
lods
popa
rclb
fcomp
outsb
repnz
gs
ret
repz
xchg
shrb
and
xor
and
xlat
je
test
arpl
add
pop
jcxz
pop
and
and
es
in
dec
addl
ds
out
adc
sbb
add
dec
shlb
cmpsl
pop
bound
add
ljmp
lahf
rcrl
outsb
inc
fldenv
sub
loopne
cwtl
cmp
cmpl
sub
cmpsb
mov
loope
aam
ja
lods
sahf
pop
inc
fnstsw
repz
cld
data16
mov
xchg
loopne
lods
mov
test
inc
jecxz
repnz
cld
adc
mov
stc
scas
mov
mov
cmp
mov
mov
mov
add
cli
imul
pop
push
pop
mov
sbbb
aas
mov
imul
rcrb
mov
in
jp
cld
sbb
adc
lcall
into
pop
mov
mov
mov
jb
enter
lahf
cmp
popf
addb
pushf
and
or
aaa
jbe
push
mov
stos
xchg
mov
aaa
pop
ret
int
popa
cld
jp
cmp
idivb
enter
and
jl
mov
or
pop
push
cmp
into
and
push
add
fsubrp
mov
sbb
sub
and
or
inc
movsb
add
movl
outsl
cs
or
sbb
xchg
insb
in
aad
mov
and
lret
sub
out
inc
negb
int3
pop
test
ficomps
js
in
je
lods
mov
aad
aaa
sub
adc
jle
std
adc
mov
lock
stos
jecxz
xchg
hlt
push
movsb
in
dec
out
sti
push
xor
into
in
ret
add
jae
and
call
pop
mov
jle
inc
cltd
xorb
nop
sbb
cwtl
push
outsl
ljmp
cmc
sub
cld
movsb
cli
scas
insb
xchg
ljmp
enter
xor
inc
fimuls
fsub
jns
pop
enter
mov
push
out
cld
push
into
dec
fmulp
cld
stos
lret
shl
outsb
xchg
pop
clc
stos
popa
add
pusha
jo
nop
mov
mov
pop
fs
mulb
jmp
insl
sbbb
pop
loopne
fimuls
xchg
pop
xchg
jl
mov
lcall
inc
cld
scas
inc
jg
adc
jl
jno
ss
cmpsl
mov
sbb
adc
mov
fnstcw
jb
lahf
sbb
dec
inc
aaa
jb
xchg
ljmp
adc
mov
mov
test
sub
imul
test
aad
ficomps
into
jecxz
fdivr
cmp
loopne
inc
int
pop
adc
adc
pop
lret
jmp
mov
outsb
or
sbb
out
popa
mov
push
scas
adc
sahf
sbb
pop
xor
arpl
inc
in
inc
jecxz
and
aad
cmp
sbb
aaa
push
popf
shll
push
int
pop
out
lcall
jg
fisttps
mov
cmp
fstpl
loopne
mov
je
loope
fidivrs
stos
in
daa
cmp
fsub
fnstenv
adc
jp
sarl
add
cmpsl
ret
adc
leave
inc
lods
cld
and
and
dec
cmp
std
pop
or
pop
push
xlat
in
lods
loope
jnp
fadd
popa
lods
add
fmull
jmp
dec
push
push
loope
hlt
push
mov
jae
sar
inc
xchg
fdiv
popf
into
mov
rcll
inc
cmp
lea
fsubp
dec
movb
fisttps
mov
arpl
aam
mov
fidivl
lret
sahf
xlat
arpl
ffree
pushf
push
cmpsb
sub
lds
mov
push
loope
cmpsl
shll
rol
lea
xchg
dec
es
rorl
loopne
cmp
xor
arpl
rcl
sub
aad
ja
adc
push
lcall
lahf
push
inc
push
push
pushf
arpl
pop
loopne
and
adc
push
pop
cld
jmp
dec
xchg
ja
sbb
stc
pop
and
xchg
aad
loopne
dec
inc
and
mov
jecxz
push
sbb
pop
cwtl
xchg
fisubrs
test
aad
jne
and
aaa
popf
and
sahf
insb
not
add
and
shlb
mov
or
aas
adc
or
mov
test
inc
push
xlat
maskmovq
mull
or
xor
push
mov
cmp
lcall
sub
and
out
out
aaa
testb
pop
inc
mov
insb
push
and
jb
notl
pop
dec
hlt
adc
or
inc
std
inc
mov
aam
jp
in
ss
xchg
or
adc
mov
sbb
cmpsb
push
int
je
or
sub
sub
dec
sbb
imul
int
cltd
cmp
mov
icebp
hlt
ss
mov
dec
jno
in
dec
testl
daa
mov
addr16
dec
push
add
das
and
out
fdivrs
movsb
shl
aam
xchg
jmp
fisubs
les
inc
movsb
loope
fsubr
sbb
fnsave
mov
scas
pop
xchg
clc
inc
mov
fsts
pop
inc
pop
fdiv
dec
popf
jne
test
sahf
decl
std
imul
in
xor
mov
daa
inc
gs
in
jmp
dec
lret
into
push
jno
pushf
daa
out
ret
xor
out
jmp
rorb
pop
or
fisubrs
in
mov
nop
into
sahf
xchg
jmp
mov
shlb
enter
test
popf
sarb
mov
sub
call
loope
loopne
adc
bound
mov
lret
jecxz
aaa
sbb
mov
mov
adc
enter
mov
loopne
dec
faddp
push
mov
sarl
add
icebp
rorl
mov
int3
cmp
dec
stc
sub
fstps
lds
sahf
loope
lret
js
rorl
movsb
std
xchg
movsb
fmulp
rcll
notl
cli
mov
push
jl
out
add
hlt
pop
sub
lcall
bound
pop
add
cwtl
out
jecxz
or
push
mov
shlb
pop
int3
cli
adc
jb
or
jl
loopne
negl
rclb
mov
loopne
fisubl
sahf
xchg
mov
out
loopne
inc
and
cltd
mov
std
ja
hlt
mov
lret
and
mov
ficoms
int
ret
mov
scas
leave
xchg
addr16
shl
ja
bound
imul
int3
inc
movsb
mov
sahf
and
push
das
imul
or
push
mov
loopne
shl
testb
aad
mov
mov
gs
inc
adc
shll
aad
cld
movsb
imull
push
sahf
loope
in
jecxz
xchg
ret
loopne
and
int
lods
pop
fmul
sahf
add
movsb
push
rorl
and
fisubs
lds
dec
mov
loop
dec
jmp
push
addr16
lods
imul
fistpll
cmpsl
or
and
xor
aaa
mov
or
loop
aam
daa
lret
cli
mov
dec
push
or
xor
push
cli
inc
das
stc
inc
syscall
xlat
in
sbb
jbe
cmpsb
testl
jmp
sbb
shrl
dec
cmpl
xlat
aam
shl
lock
cmpsl
adcl
adc
ret
std
out
test
imul
push
jmp
jmp
lds
loopne
cmpsb
icebp
cmp
cmp
mov
mov
inc
lods
cwtl
shlb
push
cltd
cmc
sahf
dec
ret
dec
cmc
andb
jmp
data16
clc
dec
mov
ljmp
popf
xchg
fdivs
enter
cld
in
cltd
sub
aam
out
rorl
shl
mov
cmp
insb
fisubrs
and
sbb
loope
js
lret
mov
cmp
push
ret
adc
pop
icebp
inc
push
ja
cs
cmc
movsl
in
aas
ja
push
icebp
and
sahf
into
mov
int3
rcl
xorl
into
add
or
rolb
jbe
inc
adc
pop
cmp
addr16
cmpsb
jg,pt
xor
mov
insl
addl
orl
jnp
mov
int3
sub
jbe
jbe
fldl
mov
fstp
cmp
mov
call
jno
mov
xor
pop
adc
int3
add
mov
or
sahf
pop
in
rcrl
xchg
push
repnz
sbb
into
jp
fistl
loopne
jg
xchg
cs
ret
nop
insb
sub
pop
scas
je
scas
sbb
push
pop
data16
test
inc
fsubs
mov
xor
mov
in
dec
sub
mov
in
test
xor
xchg
movsl
lds
mov
lds
add
mov
pop
mov
roll
sub
inc
or
mov
bound
das
pop
in
mov
and
fisttpll
mov
or
dec
adc
ljmp
movsb
cmp
xchg
fadd
add
cmpsl
aas
push
sub
notl
test
sub
xchg
sub
fsubrs
dec
aam
cmp
call
dec
push
pop
rcl
rolb
in
dec
jp
andl
sub
cmp
enter
sub
jl
shll
ror
stc
icebp
ror
sub
into
cmp
in
dec
hlt
pop
fldenv
pop
pop
pop
cmp
sbbl
test
not
testb
mov
or
cltd
jno
add
adc
cltd
int
in
aas
adc
inc
ss
popf
adc
nop
mov
hlt
popf
dec
aam
aam
sbbb
sahf
adc
push
es
sub
mov
push
mov
clc
lds
jl
cmp
mov
aad
xchg
cmpsb
sahf
insl
lret
stos
loop
sub
lret
aas
mov
sarl
test
mov
outsb
addl
mov
pop
cld
shlb
cld
push
xchg
lcall
pop
stos
es
cs
lret
lods
push
shrb
pop
push
push
jns
in
aam
push
nop
test
loopne
sbb
push
sahf
dec
or
rclb
roll
sahf
rol
sbb
in
mov
out
leave
in
dec
aam
sarl
into
pop
fisubrl
sbbl
je
lcall
repnz
lcall
les
sub
stos
xchg
fnop
sub
in
adc
adc
out
fdivrs
repz
pusha
test
push
iret
sub
insb
cmp
stc
push
rolb
xchg
push
mov
test
jle
and
dec
dec
sub
icebp
mov
jge
sti
jno
shrl
push
fucom
mov
gs
lods
movsb
rol
sbb
aad
mov
incb
fiadds
jmp
xor
aad
enter
mov
and
movsb
xor
dec
das
in
icebp
out
pop
fisubrs
and
sbb
dec
jge
cli
in
and
and
sub
test
fsts
push
sbb
xchg
xchg
fldenv
sti
aad
xchg
aad
in
pop
push
sbb
lcall
pop
not
aas
int3
mov
fs
int
aad
dec
xchg
aad
sbb
fisubrs
sub
pop
frndint
fcomps
jp
sbb
ficoms
movsb
fisubrl
cmp
in
sub
divb
idivl
sbb
std
sub
mov
cmp
cmp
pop
loope
sub
or
subb
pop
aad
push
push
enter
mov
enter
jge
and
dec
sub
pop
and
dec
insb
jmp
shl
adc
jg
xor
push
in
ja
arpl
sarl
and
push
dec
stos
mov
push
adc
push
push
data16
clc
jne
xchg
xor
pushf
orl
ds
push
out
xor
mov
fstps
inc
clc
cmp
push
gs
aas
xchg
adc
cmp
pop
out
imul
outsb
pop
mov
pop
xor
aam
out
fcmovnb
xchg
mov
inc
rcr
orb
add
add
inc
jmp
mov
pop
popa
xor
in
sti
dec
testl
repz
sti
mov
loope
mov
ljmp
jb
mov
std
arpl
call
out
sbb
xchg
rclb
sub
iret
popa
fadd
or
pop
in
pop
mov
fsub
insl
mov
in
xchg
cld
sub
cmp
dec
fiaddl
cmpsl
test
mov
dec
shll
into
leave
and
dec
cmp
aam
xor
lods
mov
in
in
cmpsb
and
push
bound
sbb
mov
sbb
inc
xchg
jecxz
jne
jb
sub
pop
adc
pop
sbb
loopne
in
enter
xchg
setle
cltd
fstl
leave
and
rcrl
lret
push
xchg
mov
aam
sti
sbb
pop
aad
xchg
in
or
mov
lret
aas
xchg
daa
mov
jecxz
stos
pushf
test
and
push
cmp
jle
out
clc
xor
sub
in
aad
pushf
test
scas
ja
in
xor
dec
data16
movsb
out
jbe
mov
popa
in
and
test
sti
test
sarl
lahf
loope
test
push
cmpsb
inc
arpl
cmp
mov
or
or
imul
rcrl
sub
mov
daa
jns
in
insb
int
adc
cvtdq2ps
cmp
and
out
sub
pandn
mov
ret
inc
fidivrl
das
push
test
movsb
fadds
and
cmp
lds
push
pop
ret
js
mov
xorb
pop
test
shr
mov
test
push
add
in
add
push
jmp
push
imul
xchg
xchg
and
pop
addl
sbb
jb
sbb
stos
shrl
icebp
shrb
and
jp
xchg
sbb
js
mov
mov
inc
lcall
inc
jecxz
dec
cwtl
or
popf
jnp
mov
adc
add
lahf
into
inc
push
imulb
add
mov
aas
dec
push
or
stos
mov
mov
mov
mov
iret
mov
cmp
pop
and
in
push
push
inc
sahf
inc
push
lahf
inc
cmc
cld
jl
sahf
shll
inc
mov
cli
mov
jmp
mov
fsubs
add
push
cmp
inc
jp
stos
test
sarb
in
jmp
sub
mov
icebp
ret
sahf
sbb
cmp
xchg
out
imul
dec
jecxz
jg
sbb
jecxz
icebp
pop
xchg
sub
out
sub
movsb
bound
adc
fbstp
fwait
sahf
in
xchg
mov
pusha
push
aaa
mov
inc
pop
sbb
xorb
push
in
decb
push
push
push
and
loopne
adc
test
fs
fwait
mov
mov
dec
in
ljmp
add
mov
movsb
xchg
cwtl
hlt
adc
out
lods
adc
pop
addr16
fscale
jl
push
and
fwait
in
push
adc
mov
xchg
insl
mov
les
push
movsb
leave
or
shlb
jb
int3
xchg
pop
stc
xchg
jb
push
jmp
xchg
mov
arpl
in
sub
test
shl
xchg
adc
mov
jmp
add
add
or
xchg
int
inc
cs
ss
cmp
rcr
imul
arpl
rcr
lods
sub
movsb
fisttpll
stos
stos
insb
roll
mov
mov
and
add
in
loopne
outsl
ret
xchg
loop
push
jb
jb
sbb
ficoms
push
mov
jb
orb
out
movsb
clc
or
cs
mov
inc
cmp
scas
push
outsb
adc
push
ljmp
hlt
adc
in
pop
fcomps
push
rcll
cs
fdivrp
mov
sub
xlat
cmpb
xchg
xchg
ds
push
cmp
ficomps
shr
clc
addb
dec
mov
add
adc
inc
fsubrl
fs
adc
mov
loope
add
mov
pop
inc
cs
xor
xchg
adc
sub
jle
sbb
push
call
in
ljmp
sbb
movsl
ds
call
lds
mov
icebp
cld
pushf
js
mov
inc
aaa
sahf
push
shll
outsl
push
adc
sahf
in
cwtl
sbb
aas
fsubrs
mov
addr16
test
dec
sub
in
xor
popa
scas
orb
test
mov
ja
jbe
filds
sbb
movsb
xchg
imul
stos
mov
aam
leave
sub
in
pop
sti
arpl
fucomp
jno
cld
call
dec
cmp
pop
dec
xor
mov
cli
adc
jg
push
jb
sahf
lock
adc
dec
push
shr
xor
sbb
pop
bound
test
fs
out
leave
xchg
dec
jecxz
lods
mov
nop
push
ret
xor
ficomps
push
push
into
les
mov
xchg
adc
xor
mov
fmull
dec
sbbl
cmp
loop
fcoml
jp
mov
pop
lods
shlb
fnstsw
push
push
stos
fsubp
mov
pop
jb
pop
dec
aas
sahf
push
ss
lock
adc
insb
test
mov
test
imul
int3
stc
enter
add
push
lock
push
out
xor
lret
cmp
cld
mov
sbb
sub
fs
fmulp
xor
xor
fsubl
sahf
mov
inc
xor
jecxz
xor
or
pop
sbb
xchg
insb
dec
loope
mov
scas
test
jmp
push
sbb
dec
jge
push
bound
fdivrp
mov
mov
xchg
in
push
pop
out
movsb
clc
dec
sarb
xchg
or
movsb
pop
and
lahf
sti
fwait
mov
mov
aam
xor
sti
test
or
add
addr16
dec
rol
xor
xor
in
nop
call
sbb
jns
int
pop
cld
cmp
inc
push
movsl
cmp
out
and
in
stos
dec
mov
arpl
ljmp
sti
sti
or
sbb
add
adc
lcall
sti
mov
inc
lods
mov
pop
jmp
sbb
aas
out
pop
stos
add
xchg
inc
mov
sbb
fmull
js
ja
inc
push
fdivl
ror
jbe
jg
cmp
xchg
out
repnz
stos
imul
idivb
mov
rcrl
dec
add
push
fcom
icebp
push
mov
or
test
orb
lock
jecxz
shr
movsb
in
nop
pop
jb
inc
gs
insl
adc
out
xor
mov
cmpsb
xchg
sbb
or
in
aad
push
vhaddpd
repz
mov
mov
divb
and
mov
pop
call
lods
sbb
enter
cld
in
test
ljmp
mov
into
out
mull
iret
aaa
dec
rorb
icebp
std
adc
sub
imul
sti
xchg
push
sahf
mov
loope
in
jmp
imul
sti
xor
mov
stos
loope
cld
aaa
jl
inc
jae
into
pushf
push
push
push
notl
pop
es
sub
add
jmp
adc
cmc
orl
divl
jmp
movswl
scas
or
and
mov
push
sbb
jns
aad
sub
test
scas
mov
and
pop
mov
lcall
idivl
xor
push
dec
je
loope
mov
jecxz
rcll
repz
add
imul
icebp
inc
das
sbb
inc
pop
in
push
pushf
je
lahf
inc
pop
fwait
or
pop
mov
test
cmpsl
add
jecxz
xlat
rolb
loopne
pusha
cs
pop
jg
insl
andl
sub
loopne
dec
cmc
pop
sahf
push
jae
mov
xor
out
scas
dec
pop
cld
cli
add
pushl
aas
outsl
aaa
pop
jmp
stos
repz
cmp
jmp
popa
mov
fwait
lcall
adc
ds
mov
imul
aaa
in
and
fmuls
jecxz
xchg
into
movsb
xor
leave
push
inc
xchg
mov
or
and
adc
mov
jecxz
shrl
into
lcall
ret
jo
int3
fsubrl
jae
sti
push
ret
cmp
sahf
mov
sbb
inc
adc
call
pop
pop
and
and
jae
stos
pop
icebp
es
push
sub
outsl
sub
cli
es
inc
dec
call
insb
adc
push
std
jnp
rolb
into
jbe
lods
fmull
lahf
loopne
and
pusha
aaa
int3
pop
data16
inc
popf
mov
push
and
xlat
cld
adc
out
nop
push
dec
stos
aam
div
fstpl
fimuls
xchg
sti
jns
xchg
divb
idiv
adc
and
loopne
fstpl
or
pop
dec
seto
pop
dec
in
sub
sub
stos
hlt
fstpt
mov
push
mov
jmp
xor
jbe
bound
outsl
rclb
lea
adc
add
sti
jnp
sub
clc
xchg
jb
mov
jns
mov
test
fisubrs
pop
push
pop
call
cmpsb
mov
dec
aam
jne
cltd
scas
ficomps
testl
xchg
pop
sti
scas
add
cmpsb
pop
xor
rclb
mov
arpl
and
ret
pop
xlat
push
push
scas
or
int
les
shl
stos
aaa
dec
xchg
cmp
shrl
mov
mov
or
mov
and
mov
bound
icebp
dec
ljmp
call
out
rcll
out
faddp
pop
jbe
lods
cmc
ror
aas
add
fmuls
push
and
int3
mov
shll
adc
mov
jg
test
loope
pop
ret
stc
cmp
push
shl
cltd
jl
shlb
pop
into
shrb
jecxz
push
aaa
jae
in
scas
adc
scas
adc
out
testl
cmp
fsubr
sahf
jecxz
sti
cwtl
or
int3
and
or
dec
adc
push
scas
rcrl
add
movsb
es
fwait
pop
into
mov
add
inc
and
out
daa
in
fsubrp
sbb
mov
cld
push
mov
movsb
or
aad
fwait
andb
mov
mov
in
outsb
adc
stos
dec
std
loope
test
std
xchg
or
aaa
inc
push
in
mov
mov
or
in
ror
ror
and
xchg
fsts
lahf
inc
mov
lea
and
pop
xchg
fcoml
fdivrp
sti
push
fcompl
fdivl
out
sbb
mov
xor
test
cs
push
ja
cmp
lcall
xchg
and
lcall
or
into
pop
cmpsb
push
shll
mov
in
loope
mul
inc
fsubrs
cmp
xor
cld
les
jns
jbe
aam
mov
into
push
int3
shl
cld
test
sbbb
jmp
mov
jmp
loopne
mov
mov
movsb
lret
enter
lock
jnp
jbe
fdivrp
mov
ss
mov
mov
repnz
ror
mov
fcom
and
pop
movsb
in
movsb
out
repz
test
sub
push
aam
insl
sub
mov
in
in
mov
loope
int
inc
sbb
out
frstor
and
sbb
sbb
push
popf
mov
loopne
add
jecxz
or
imul
aaa
enter
stos
lret
pop
call
rcrb
cwtl
push
mov
sahf
in
mov
sahf
insb
sbb
cltd
and
andnps
das
dec
leave
push
hlt
mov
rcrl
add
popa
jg
out
addr16
rclb
and
fcoml
xchg
mov
je
dec
sbbl
lock
aam
adc
jmp
fcoml
mov
sahf
rcr
aad
movsb
movsb
mov
out
in
mov
ljmp
insb
or
xchg
shrl
dec
fildl
cwtl
ffree
fxch
xchg
es
fucomp
shl
mov
adc
cmp
xchg
in
aas
jns
ret
and
push
pop
mov
push
arpl
and
arpl
push
decl
sub
adc
outsl
in
mov
sahf
cmpsb
popf
xlat
mov
call
addr16
inc
jmp
in
fdivrs
push
sahf
loop
fcompl
push
aad
push
xchg
clc
push
adc
aad
adc
and
push
insb
mov
fs
loope
enter
mov
aaa
les
in
out
scas
fstl
rorl
xchg
pop
fsts
insl
sub
stos
cld
jmp
pop
inc
xchg
push
mov
mov
in
jge
call
fbstp
pop
fnsave
sub
jb
pusha
shll
ljmp
idivl
mov
roll
fimuls
icebp
out
and
inc
xchg
inc
neg
xchg
pop
les
mov
leave
and
and
pop
fcomi
adc
cltd
inc
aam
mov
and
xchg
push
shl
leave
mov
lret
je
fidivs
cmc
push
ljmp
sbb
fsubrl
rcll
loopne
movsb
and
mov
shrb
fcoml
shrb
test
pop
rolb
mov
shr
add
jmp
jae
pop
in
test
mov
in
or
mov
lcall
test
popa
cmp
in
repnz
test
cmc
scas
or
inc
arpl
inc
push
pop
fdivp
scas
push
mov
or
out
rcl
and
or
lods
fwait
adc
in
jnp
jb
popa
lcall
pop
jmp
in
adc
inc
add
fsubs
out
int
std
imul
and
data16
jecxz
filds
and
test
pop
adc
jmp
jle
andb
daa
fwait
dec
fmul
sbb
lret
mov
pop
mov
icebp
loope
lahf
movsb
add
stos
popa
fisttps
xchg
out
mov
mov
mov
repnz
data16
icebp
mov
mov
ret
clc
stos
shrb
add
inc
and
mov
rorb
aaa
jmp
movsb
push
cs
mov
mov
sub
fsubrl
push
mov
in
adc
jle
mov
or
fstl
add
movsb
fs
adc
aas
loope
outsl
jmp
push
shll
hlt
jecxz
jbe
inc
or
xchg
dec
and
cwtl
shll
lods
cmp
fidivrl
cmp
pushf
inc
jmp
mov
mov
jae
cmp
cmp
pop
out
sub
loope
dec
fcomi
sarb
jne
sti
ljmp
stos
arpl
adc
repnz
ljmp
cmpsb
data16
movsl
gs
loop
adc
xchg
push
adc
xchg
loop
adc
xchg
push
adc
mov
dec
push
int
dec
or
fdivs
paddusw
insl
jp
pop
negl
popf
pop
and
cld
and
cld
sub
mov
pop
bound
outsb
or
aaa
lock
mov
into
mov
mov
movsb
xchg
pusha
mov
jae
xlat
les
mov
test
lds
push
add
loopne
mov
shll
ljmp
cltd
ret
xor
dec
xor
out
pop
pop
lret
cli
jne
pop
ljmp
rol
xchg
loope
sahf
bound
or
outsl
int
xchg
roll
mov
push
into
cmc
xor
cli
fimuls
fdivrl
add
dec
data16
add
and
mov
cld
movsl
iret
xchg
mul
dec
and
push
lret
movsb
fsubrl
inc
add
sbb
repnz
push
fadd
and
fstps
arpl
pmulhuw
ret
sahf
mov
xchg
xchg
and
mov
sahf
aas
popf
mov
shlb
lret
cmpsl
je
dec
jecxz
js
loopne
inc
mov
add
cmc
in
add
mov
nop
jmp
fldl
fimuls
dec
out
sahf
icebp
in
ret
ffree
xor
xchg
hlt
int
mov
xchg
mov
inc
cmp
pushf
xchg
arpl
jl
pop
jb
cld
jmp
lods
lea
cld
push
cmpsl
push
je
in
ficomps
stos
and
sbb
or
test
xchg
dec
mov
xchg
cld
cltd
adc
adc
in
mov
sub
push
bnd
in
jl
in
pusha
push
shlb
and
inc
mov
lods
mov
push
dec
push
shlb
push
ret
sahf
mov
and
mov
jae
data16
adc
cmc
or
shrl
aad
mov
cmp
test
cld
fldt
mov
fstps
test
mov
iret
ret
in
jecxz
sahf
out
mov
adc
mov
add
dec
negl
xchg
or
outsb
aaa
mov
pop
rcrb
stc
andl
icebp
or
stc
jnp
and
and
ljmp
or
rcl
xor
cwtl
inc
jecxz
rcll
jb
cmp
lods
stc
call
in
imull
xor
push
ss
fnstsw
loop
pop
and
cmp
adc
mov
gs
int
jl
shrl
iret
dec
pop
int
imull
sahf
inc
mov
xchg
and
sahf
rol
xchg
xor
xorl
xchg
jb
push
xchg
scas
pop
mov
jmp
shlb
lret
push
jmp
data16
xchg
jnp
mov
mov
sub
pop
jb
cs
call
jb
push
adc
sti
cld
in
fildl
fwait
sbb
inc
mov
test
aam
push
stos
testb
pop
popa
scas
in
cmp
sub
cmp
cltd
cld
xchg
std
inc
imull
sti
push
sahf
push
pop
push
cmp
pushw
nop
sub
mov
call
sti
jmp
shll
and
sbb
fstl
fucomip
sti
fistl
push
lods
pop
lahf
sarl
pop
xchg
and
add
xor
adc
jl
lret
dec
ljmp
xchg
mull
or
ficomps
xor
xlat
push
nop
movb
pop
into
int
sub
mov
xchg
pop
inc
mov
adc
pop
aam
jmp
or
fsts
popa
lret
loopne
mov
iret
fisubrs
push
aam
pop
jl
mov
divl
shlb
rcrl
dec
or
or
in
aam
fldenv
popf
mov
cmc
rcrl
faddl
fsts
cwtl
repnz
into
sub
sti
push
data16
jb
mov
call
mov
sbb
mov
shrb
add
pop
arpl
lret
jmp
popa
fiadds
insl
rcl
popa
stos
push
imull
in
lret
ficoml
xchg
xchg
call
pop
call
sarl
pop
pop
lret
sbb
mov
sub
out
cld
mov
insb
pop
xor
xchg
sub
fdivp
mov
in
cld
xchg
aam
ret
jno
inc
xchg
fs
push
dec
dec
test
aaa
loope
stos
sbb
cmp
and
in
pop
data16
jmp
pop
jecxz
add
hlt
pop
int3
pop
hlt
and
xchg
sbbb
ficoms
call
out
push
sbb
rcl
mov
jp
pop
out
es
xchg
scas
and
or
scas
mov
jmp
xor
adc
sub
in
loopne
mov
and
xchg
roll
icebp
mov
sbb
loope
mov
push
test
sub
lahf
incb
psraw
xor
sub
fdivs
ja
xchg
and
push
sbb
mov
mov
xchg
jmp
fdivs
jb
int
fnstenv
xchg
xchg
mov
into
std
movsl
dec
in
cli
jmp
in
pop
mov
fbstp
xchg
jmp
and
test
push
jno
jecxz
ret
insl
stos
mov
mul
sub
pop
in
shr
call
subb
push
imull
jmp
cld
xlat
scas
and
push
repnz
les
lods
or
and
mov
adc
and
inc
xor
pop
adc
sub
mov
xor
xchg
stos
and
pop
int
sub
orl
stos
jge
xor
mov
pop
int
xchg
push
fnstsw
push
fs
int3
fisttpll
negl
or
in
xor
pop
mov
sub
sub
rcr
or
jmp
pop
stc
addr16
mov
or
test
in
mov
jae
into
dec
push
mov
jbe
sar
divb
push
test
call
pop
xchg
sar
push
insl
adcb
sahf
xchg
xlat
push
pmullw
jp
inc
movsb
jecxz
stos
fdivr
cs
xor
xchg
jnp
pop
in
cld
cltd
or
das
pop
push
ret
pop
pushf
not
flds
pop
test
das
push
in
adc
clc
out
jno
imul
inc
sub
and
push
push
mov
jl
in
out
pop
and
iret
enter
sbb
outsl
test
dec
sub
test
popf
jne
in
pusha
test
sub
cmp
cmp
shl
iret
sub
mov
imul
dec
jmp
xchg
sar
mov
in
sbb
dec
stc
pop
sub
ror
xor
mov
ja
sbb
enter
adc
popa
mov
sbb
insl
fidivl
out
jmp
setl
lret
pushf
push
mov
mov
lds
xchg
pushw
fsts
stos
xlat
xchg
jge
mov
sub
cmc
mov
jg
sub
mov
cwtl
lret
iret
xchg
mov
ret
movsb
jmp
xchg
pusha
bsf
shlb
push
imul
cmp
pusha
sbb
insb
push
jecxz
rcrl
test
int
push
aas
in
loope
in
in
out
les
add
jecxz
mov
std
dec
fs
insb
fs
push
sbb
in
xchg
in
adc
mov
inc
mov
dec
out
cmp
jno
sahf
xor
out
jecxz
push
mov
mov
cmc
cmp
mov
sub
mov
adc
pushf
inc
imul
mov
sub
inc
dec
cmp
xor
jl
pop
fwait
sub
jmp
popa
pop
sbb
hlt
cmc
das
adc
jne
pop
loope
jmp
ret
imul
mov
dec
sarb
stos
jl
inc
mov
and
dec
cs
sub
frstor
test
bound
push
mov
mov
into
jle
mov
xchg
pusha
adc
filds
fsub
dec
mov
jge
stos
pop
fs
into
inc
mov
mov
shll
push
cs
sbb
adc
movsb
rcl
jecxz
and
push
jne
sbb
cs
aaa
jo
les
inc
in
leave
push
xor
jp
icebp
jbe
push
pop
sub
into
aad
enter
js
inc
mov
js
andl
xchg
pop
push
pop
push
dec
into
pusha
pop
test
sbb
loopne
rcl
jecxz
mov
aam
xchg
fidivs
add
jecxz
sahf
mov
imul
lret
enter
xor
pusha
or
and
call
cmc
cmp
scas
mov
xchg
sahf
adc
in
fisubrs
out
push
or
out
mov
fdivrs
mov
insb
mov
test
lahf
in
jmp
sahf
popf
filds
ret
push
cs
icebp
inc
sub
test
mov
pop
repz
aam
aam
js
into
shll
fidivrs
shrb
xor
clc
push
bound
mov
ds
mov
inc
icebp
mov
shl
mov
aaa
push
test
icebp
xor
jae
pop
sub
xlat
sub
ljmp
aad
push
push
push
jno
xor
sub
push
subb
iret
ret
fidivl
and
push
jbe
inc
in
rorb
pop
std
mov
inc
adc
ljmp
mov
popf
stos
cmc
shr
out
cmp
leave
jmp
add
fisubrs
pop
and
decl
ljmp
xchg
lock
push
ret
mov
mov
pop
jne
add
les
push
icebp
movsl
enter
add
test
adc
lcall
dec
gs
in
and
into
adc
pop
mov
xchg
cmc
pop
out
repnz
in
mov
fildll
and
lahf
fucom
outsb
fs
stos
fs
lock
scas
and
push
bound
rorb
dec
sti
mov
cli
ficomps
ficompl
fcoml
dec
ljmp
loope
enter
aad
icebp
popa
loopne
adc
pop
dec
pop
stos
loop
add
test
sub
xchg
jecxz
fcomip
sub
ds
cmp
xchg
cmp
push
dec
mov
nop
imulb
addl
push
sbb
nop
jge
inc
push
int
jecxz
add
lods
adcb
test
lahf
lods
js
lods
in
mov
neg
pop
int3
or
fs
push
aad
push
movsb
sub
lea
mov
add
mov
out
inc
mov
sbb
or
and
std
cmc
or
mov
fsubrl
negl
pop
out
jmp
cmc
mov
out
push
add
ljmp
sbb
aaa
aam
int
jb
mov
jne
imul
out
sub
push
rorb
mulb
test
fimull
movsb
fistpll
push
add
lods
pop
and
sub
dec
aam
ret
std
into
test
repnz
test
fcoml
adc
cmpsb
shll
mov
push
cli
leave
pop
or
push
xor
std
sub
dec
lock
stos
fs
daa
mov
pop
sbb
dec
mov
repnz
in
ret
inc
push
mov
pusha
imul
adc
loope
adc
or
mov
sbb
fs
adc
out
std
into
push
mov
sub
pop
cmc
sarl
and
lods
int
daa
aas
je
push
add
mov
adc
imul
test
aad
pop
cltd
addr16
popf
adc
fbstp
adc
mov
mov
ret
idiv
adc
jne
fbstp
mov
sub
lret
data16
pop
mov
xor
into
mov
test
lahf
ja
push
popa
jmp
sbb
shrl
call
leave
daa
inc
sahf
mov
outsl
stc
insb
arpl
int
jb
lea
cld
pop
iret
xor
fsub
add
xchg
gs
lret
xor
or
js
add
sub
push
push
xchg
icebp
outsb
xchg
ret
mov
sub
cld
aam
or
ret
mov
pop
push
add
bound
jle,pt
clc
sbb
mov
push
inc
dec
clc
cmpsb
sub
testb
out
jle
fisubrs
jg
rcl
insb
ficomps
in
cmp
in
clc
mov
loope
add
xor
imul
sub
adc
push
hlt
adc
cmp
pop
jb
pop
jecxz
stos
cmp
sub
or
stos
jg
cmp
addr16
sub
and
test
cwtl
fwait
push
and
shrb
push
pop
test
data16
dec
jmp
adc
test
adcl
in
test
incl
popa
pop
jp
std
fidivs
pop
adc
jp
mov
test
sti
movsl
sub
jecxz
pop
repz
mov
jb
cmp
jno
mov
push
pop
push
ljmp
cwtl
push
push
or
test
mov
aam
ret
adc
add
cli
jae
out
pop
stc
mov
push
push
sti
jae
in
pop
dec
call
test
push
cli
call
fistl
dec
mov
jl
pop
icebp
jne
jecxz
or
or
pop
push
xchg
or
orb
sarl
notl
push
pop
shl
popa
hlt
pop
icebp
pusha
nop
scas
pop
fdivrs
jne
cmp
into
aad
lret
sub
std
pop
jmp
aad
push
mov
push
mov
fstl
sbb
xor
pop
mov
popf
push
cld
mov
mov
movsb
lea
aam
nop
cmp
and
jne
sub
xor
sarb
sbb
lret
dec
icebp
loope,pt
pop
jecxz
popf
mov
cmp
cld
xchg
movsb
insl
nop
shll
pop
jb
jne
mov
icebp
lret
pop
mov
popa
int
stc
cmpsb
inc
jecxz
fcomi
lods
cld
je
mov
dec
fbstp
pop
mov
xchg
arpl
aam
dec
mov
lds
notb
xchg
push
clc
pop
lods
in
popa
sarl
je
ss
xchg
sub
sbb
mov
test
outsl
leave
and
xchg
imul
pusha
jmp
shrl
adc
inc
mov
fldl
xchg
cmp
pop
sub
in
xchg
ja
mov
rcr
pop
add
xchg
shr
pop
mov
pop
and
test
and
imul
or
test
and
insb
mov
xchg
popa
jae
add
shl
movsb
and
inc
test
into
or
stos
fisubrs
bswap
stc
push
mov
push
rcr
push
pusha
and
out
aam
adc
je
push
cmc
adc
jmp
jl
pop
lock
movsb
push
fmul
in
sar
sbb
out
ljmp
cli
les
push
xchg
testb
inc
nop
mov
dec
sbbb
loop
bound
inc
inc
push
sbb
sub
aaa
xor
int
roll
sub
test
fsubs
fdivrp
xor
xchg
sarl
mov
scas
sub
loope
xchg
hlt
icebp
push
in
fs
adc
popf
jae
jecxz
fs
and
icebp
aas
adc
js
out
and
mov
mul
xchg
jmp
xchg
push
and
lods
sub
movsb
in
push
cmpsb
loop
and
push
dec
out
mov
mov
jmp
push
pop
les
leave
cld
dec
sub
mov
bound
es
fists
push
push
mov
cmp
outsl
jb
jmp
in
ret
cmpsb
ret
pop
adc
cmp
hlt
in
stos
ljmp
cld
addl
mov
push
fimull
rcr
adc
xlat
ljmp
cmp
sub
scas
dec
loope
fsubs
aad
aam
fnstsw
mov
pop
ss
jns
ds
or
dec
cmp
icebp
call
mov
xchg
xorl
into
and
push
adc
aaa
in
std
sbb
mov
jl
pop
outsl
into
adc
push
cmp
out
pop
sub
int
push
pop
test
outsl
push
into
mulb
cmp
pop
push
in
scas
rcrl
inc
aam
fdivl
pop
jb
in
fdivr
rclb
outsl
enter
ljmp
negl
adc
sti
ss
and
xor
bound
add
out
jl
into
inc
add
call
xchg
mov
jle
or
je
lret
adc
mov
xchg
jge
daa
push
cs
fcmovbe
imul
inc
loopne
or
rol
mov
mov
test
in
xchg
shr
dec
arpl
push
ljmp
outsl
les
arpl
inc
into
mov
or
test
inc
into
xor
call
push
and
jmp
xchg
cmpl
xchg
imul
fsubl
push
cltd
push
pop
push
pop
mov
cmpsl
in
fnsave
mov
mov
sbb
dec
shl
popa
xlat
xor
lds
or
mull
and
add
aad
stc
js
lret
scas
sahf
jle
ja
ror
or
dec
lods
mov
mov
jecxz
stc
push
mov
push
push
and
ret
imul
repnz
inc
sbb
mov
jnp
imul
arpl
imul
call
xchg
arpl
ss
jg
into
aaa
test
jb
hlt
jb
dec
xchg
cltd
fiadds
pop
int3
out
decb
adc
xorl
push
mov
sahf
leave
in
mov
jle
imulb
pusha
les
f2xm1
push
jmp
jns
inc
push
pop
ds
push
fidivrl
dec
dec
fmul
out
stc
cmp
cmp
jle
ja
push
popa
jecxz
fcmovbe
shll
cmpsb
adc
cs
cmpl
mov
jmp
rorl
jmp
mul
sub
movsb
pushf
adc
cmp
test
dec
fistps
sahf
mov
and
in
mov
jns
pop
xchg
pop
xchg
popf
cmp
xchg
mov
pop
call
mov
arpl
fs
sub
out
sarl
fadds
pusha
add
xlat
imul
pop
xchg
cmp
inc
fistpll
in
and
ret
hlt
imul
jl
pushf
jmp
xchg
push
shrb
jge
cmp
xchg
cltd
cmpb
ficomps
push
jae
in
daa
mov
push
lahf
test
pop
push
out
in
jb
fistl
pop
sub
push
pushf
les
ds
in
mov
jmp
leave
or
out
xchg
cmpsb
or
lods
jle
mov
dec
fsubrp
ud2
cmpsb
add
clc
jecxz
jge
in
inc
or
fisubrs
test
add
add
iret
shlb
aam
rol
and
cmp
jmp
stos
imull
sahf
loopne
mov
dec
int3
int
cmp
mov
push
in
stos
outsl
mov
cwtl
in
inc
call
aaa
jae
push
jns
push
pushf
sub
push
mov
or
ljmp
sbb
out
ljmp
out
stc
jmp
sub
cmp
pop
sub
mov
enter
push
clc
bound
mov
movsb
out
leave
or
repz
insb
push
mov
adc
push
adc
jmp
fsubl
push
xchg
dec
mov
in
ljmp
adc
push
shrl
jbe
lods
jno
into
fstp
xor
cmp
jmp
add
ljmp
fcmovu
cld
push
mov
fldcw
sub
rclb
cs
sarl
loopne
into
in
xchg
mov
out
es
push
repz
iret
cld
sub
or
inc
into
mov
sbb
dec
dec
push
xchg
add
or
or
lahf
cld
mov
mov
add
add
and
push
push
imul
or
pusha
inc
dec
mov
or
sti
sahf
xchg
push
in
cmpsb
xor
loopne
cmpsl
arpl
nop
insb
dec
dec
xlat
js
sub
push
lock
sbb
idivb
test
insb
mov
mov
sub
jmp
fldl
je
add
inc
int
ret
jge
and
or
sahf
push
push
scas
dec
mov
sbb
inc
test
push
xchg
adc
and
xchg
mov
cld
adc
mov
addr16
pusha
xchg
add
and
jmp
ljmp
dec
pop
pop
loopne
xor
fsubl
dec
jl
mov
pusha
divl
or
out
push
dec
sbb
sub
stos
xchg
mov
dec
xchg
shll
std
xor
imul
or
rcrl
bound
or
leave
and
dec
in
mov
jecxz
cmp
int
pop
mov
add
adc
movsb
jno
cmp
adc
mov
loope
dec
fsubl
push
dec
jge
mov
lods
sarb
lahf
or
andb
lret
and
push
stos
sti
rcrl
data16
fstl
int
dec
jae
outsb
notl
mov
mov
cmc
or
push
and
mov
inc
cmpsb
pop
ret
or
rcrb
ljmp
les
insb
callw
xchg
loope
dec
push
xchg
push
mov
int3
sub
push
lods
xchg
jno
shr
jmp
xchg
jnp
cs
int
test
fs
out
push
mov
xchg
mov
fmuls
mov
sarl
shll
push
call
lods
jmp
add
fstps
nop
stc
mov
push
mov
push
fisttpl
rcrl
out
pop
jmp
push
in
outsb
pop
movb
pop
sub
mov
fs
in
shr
mov
mov
test
lods
xor
filds
ja
fucomi
ljmp
cmp
add
inc
shl
incl
xchg
bound
and
adc
jno
into
mov
in
push
cld
popf
insb
leave
add
icebp
cmpsl
rcll
and
into
cmp
jp
and
out
xor
xchg
mov
sahf
enter
push
inc
add
sub
cmc
sahf
call
cmp
adc
aas
sub
sub
icebp
inc
pop
in
out
xchg
cli
out
push
mov
pop
sti
mov
push
jge
jg
shll
pop
out
rcrl
adc
push
and
xchg
lods
sub
ficoml
fmulp
ja
or
call
adc
pop
and
pusha
lods
lahf
leave
orb
clc
movsl
call
es
jo
scas
mov
push
test
pop
daa
jns
aaa
mov
push
jmp
jg
in
lea
test
fsubrs
outsl
in
dec
sub
out
xchg
xlat
mov
cld
cmpsb
mov
adc
sbb
jne
test
jg
fidivrs
cmc
in
lret
xchg
in
pop
mov
dec
lret
ds
int3
sub
add
mov
mov
push
lahf
jmp
xor
cmp
lret
int3
out
push
rorb
dec
cld
dec
mov
das
lods
ja
shlb
jmp
icebp
push
stos
frstor
xchg
add
fwait
jnp
jmp
scas
fsubl
cmp
pop
xlat
daa
adc
lods
in
cmp
adc
dec
aaa
mov
pop
push
add
rcr
push
lods
mov
add
jb
mov
pop
push
mov
jl
leave
push
lahf
mov
jno
jmp
jne
cmp
mov
pop
in
mov
xorb
adc
xlat
jmp
adc
mov
sahf
sbb
push
popf
divps
jnp
cli
adc
xchg
in
inc
fimuls
mov
std
stos
out
xor
inc
adc
out
sub
cmp
lds
int3
daa
repnz
inc
ret
jne
movsb
out
pop
adc
or
cli
push
cmp
jnp
inc
lock
sarl
fbstp
xor
mov
pop
flds
fstpl
push
mov
pop
add
cld
mov
sub
cmp
fildll
lock
sbb
loope
cld
mov
in
clc
mov
push
mov
sub
addr16
pop
or
xchg
add
jl
jne
cmpl
sbb
int3
pop
test
lods
out
popa
nop
rcl
js
add
xlat
in
out
call
shll
out
push
testb
and
push
iret
pop
jb
int
in
mov
rcrl
clc
in
add
or
or
push
shrl
jb
inc
sbb
mov
dec
sbb
dec
sub
int
jecxz
test
cmc
outsb
andb
xlat
lds
sti
jl
mov
add
add
imul
inc
test
jnp
cmc
pop
das
mov
test
push
in
jp
cmc
jnp
orl
cltd
in
pop
lea
in
push
mov
adc
push
in
push
cltd
pop
jne
push
sub
jbe
fsubrp
pop
rcr
xchg
test
xor
lods
pop
jl
out
es
sub
aam
popf
enter
xorb
push
cmc
push
outsb
pop
gs
lret
loop
or
lret
inc
cli
pop
mov
in
cwtl
cmc
test
test
ja
dec
mov
test
shl
jns
mov
cmp
pop
push
cmp
fs
fwait
les
mov
push
ret
push
icebp
hlt
pop
icebp
in
sbb
jge
into
jge
iret
in
movsb
dec
push
out
inc
jp
decb
out
push
adc
and
xor
in
fmulp
jns
cmp
into
orl
outsb
shrb
inc
inc
mov
jmp
hlt
fisubs
loope
jne
push
std
lock
sub
int
xchg
push
jl
js
mov
and
into
outsl
cmpsb
cmp
daa
pop
lods
xor
gs
insb
and
mov
mov
sub
jmp
pusha
addl
ljmp
btc
mov
and
cld
imul
mov
bound
iret
inc
push
xchg
cs
jns
and
jp
jno
ret
ljmp
mov
dec
xor
or
jo
mov
and
lods
cli
stos
js
and
cld
dec
lcall
sub
loop
pop
sahf
cld
hlt
lods
dec
in
repnz
and
dec
aad
retw
add
add
lds
cmp
xchg
clc
roll
mov
stos
clc
inc
pop
xlat
lcall
stos
lcall
dec
mov
xor
bound
mov
jnp
enter
mov
sbb
jo
in
shlb
mov
in
test
add
sbb
pusha
stc
mov
inc
shr
xor
and
lcall
out
in
les
mov
loope
cld
daa
fbstp
test
jge
xor
out
int
in
cmpb
cmp
in
dec
shl
and
mov
mov
jmp
and
das
mov
stos
dec
rorl
lcall
mov
test
insl
fucom
enter
cmp
cmp
rcrb
cmp
adc
jne
and
sub
into
pop
sarl
mov
jp
jecxz
into
mov
pop
jle
lock
repz
int3
shrb
jmp
shrb
stos
mov
sub
and
sbbb
sti
clc
sub
push
fcompl
mov
mov
and
sbb
jo
and
aam
pop
leave
mov
cld
mov
int3
xchg
or
test
cmpl
push
and
and
out
pusha
mov
cld
test
aas
xchg
clc
jge
neg
in
cld
push
xor
pop
lods
aad
jbe
bndldx
stos
jmp
pop
dec
movsl
repz
cmc
push
rclb
cmp
mov
mov
repz
jb
push
call
inc
lea
shl
sbbl
movsl
inc
sahf
adc
test
roll
sbb
xchg
jp
scas
into
ret
movsl
mov
in
test
pop
mov
sbb
sub
scas
pop
pop
inc
push
cmovp
rcll
cmp
pop
ja
les
pop
mov
pop
shlb
sti
xor
test
jns
outsb
bound
repnz
sub
out
out
je
pop
icebp
sub
out
fsub
call
out
push
pop
and
and
push
mov
cld
ljmp
arpl
mov
aaa
ret
mov
jmp
or
inc
jb
aad
mov
inc
outsl
or
and
mov
and
lock
mov
in
rorb
add
fidivrs
ret
jecxz
dec
inc
mov
mov
jmp
jge
cld
sar
or
jns
mov
lea
mov
mov
ja
mov
sahf
mov
dec
insb
pop
les
adc
mov
loop
notb
out
jne
pusha
push
sbb
scas
adc
loope
ficompl
cld
sti
mov
into
jbe
bound
jmp
or
fnstenv
test
insl
fwait
movsb
repz
pop
xor
shll
lds
dec
xor
and
push
sahf
sbb
aad
outsb
lea
xchg
pop
call
xor
jne
arpl
cmpsb
sti
movsb
push
mov
xchg
clc
arpl
int
adc
push
sahf
lret
xchg
adc
xchg
mov
lock
mov
bound
gs
int
and
iret
test
in
testb
shlb
hlt
push
and
ret
in
icebp
movsb
aam
xlat
fldenv
pop
sti
int3
dec
sub
and
mov
push
jb
lret
adc
sbbl
pop
movsb
rclb
mov
jecxz
push
test
mov
test
and
shlb
imul
test
test
bnd
and
rorl
inc
sbb
or
cltd
rcrl
dec
mov
aam
push
stos
sub
mov
mov
aam
xchg
jecxz
shrl
dec
outsl
push
mov
sub
mov
jecxz
cld
jns
mov
xchg
jecxz
mov
or
fsubrl
fs
jae
sbb
aad
les
rclb
dec
jmp
in
outsl
call
inc
decl
pusha
mov
xchg
xchg
arpl
sbbb
ss
mov
xchg
fstl
sub
or
inc
shrb
inc
ret
xchg
lret
jp
pop
gs
mov
xor
out
inc
out
leave
pop
shll
test
mov
jmp
incl
popf
mov
setno
or
mov
xchg
adc
mov
sbb
fs
pop
cmp
dec
in
ljmp
jb
jnp
lcall
or
xor
ret
loop
outsb
outsl
lahf
in
push
and
test
jbe
loop
iret
sub
dec
and
decb
aaa
mov
arpl
inc
rcr
add
mov
cli
mov
mov
mov
fdivl
fiadds
dec
pop
shrb
mov
arpl
adc
mov
out
sub
shrb
or
mov
lea
cmpsl
xchg
lock
cwtl
pop
loop
gs
sub
shrl
pop
aam
sub
jecxz
sub
push
sub
stos
sbb
insb
in
adc
mov
lea
movsb
and
adc
adc
xor
add
test
ljmp
popf
mov
dec
in
fsubs
leave
test
loopne
push
out
out
jne
popa
add
mov
jno
rcll
xlat
aad
div
mov
icebp
cmp
and
mov
hlt
cli
cmp
sbb
fs
mov
mov
push
loope
sahf
fninit
fiadds
pop
xchg
push
cwtl
test
push
aad
daa
xchg
sub
arpl
and
jp
ja
xor
jb
mov
add
mov
inc
cli
xor
sbb
add
mov
cli
push
sub
fidivrs
sbb
test
lcall
aam
aad
add
inc
rcll
into
mov
pop
cmp
xor
movsl
xchg
daa
testb
outsb
and
push
cli
dec
fisubl
faddl
incb
and
mov
daa
mov
in
mov
fisubs
das
pusha
sub
add
enter
adcl
adc
imul
sub
sti
jmp
add
cwtl
fadds
mov
out
dec
test
pop
inc
ucomiss
cmpsb
sbb
sti
sub
sub
negl
shl
shrb
stos
mov
lahf
pop
fcmovne
adc
xchg
stos
sbb
aas
out
loope
xlat
adc
pushf
pusha
xchg
clc
popa
out
into
sahf
adc
cmp
out
pushf
lahf
cmpb
fisubrl
pop
mov
test
xchg
shll
sub
cmp
ret
incl
int
jmp
stos
inc
mov
xchg
mov
push
lock
jbe
aaa
push
out
aam
stc
shrl
jecxz
add
test
ja
cmpsb
pusha
aas
int
mov
pop
inc
pop
rcr
ljmp
repnz
ss
cmp
call
mov
fnsave
adc
shlb
cmp
mov
and
das
mov
inc
pop
dec
call
jb
mov
xlat
mov
cmpsl
jmp
mov
addr16
icebp
fidivl
push
mov
mov
push
call
test
hlt
shl
insl
lret
jne
add
test
inc
push
mov
imul
pop
loope
decb
mov
inc
jo
adc
imul
in
arpl
cld
xorl
bound
push
xchg
xchg
push
in
mov
lods
iret
jmp
cmp
loopne
arpl
das
in
stos
arpl
cmp
sarl
and
xadd
mov
sbb
push
jmp
jns
lret
mov
mov
sbb
loope
pop
cld
cld
mov
nop
movsb
sub
aad
in
loop
es
inc
repz
aam
icebp
sahf
test
dec
cmp
jecxz
and
add
xchg
cmp
cmp
push
pop
imul
add
hlt
int3
and
gs
lods
rolb
or
push
pop
shlb
sbb
dec
shrb
cmp
jle
scas
scas
loope
clc
mov
repz
test
sbb
addr16
mov
adc
shrb
mov
faddp
adc
cld
dec
stos
fimuls
fs
into
push
ret
inc
add
shl
mov
stos
lea
mov
push
mov
stos
in
test
ds
int3
movsb
stos
and
frstor
andl
cli
andl
test
loope
sub
pop
add
sub
nop
push
aaa
xchg
std
mov
xchg
sub
shl
xchg
xor
icebp
push
push
in
jge
xor
cmpsl
push
pop
loop
mov
roll
in
jp
or
clc
mov
push
test
movsl
mov
xor
js
fistps
loopne
in
push
fnsave
arpl
bound
add
or
hlt
dec
loope
cmp
jmp
pop
pusha
mov
das
in
inc
shrl
pushf
inc
clc
ja
test
sbb
call
sahf
adcl
sbb
ret
jle
ror
pop
out
imul
push
pushf
cmpsb
fld
in
jecxz
sub
mov
xchg
ret
ja
popf
pusha
movsb
pop
mov
push
mov
cld
mov
xor
cld
subb
sub
push
add
mov
andb
xchg
scas
mov
mov
incl
aaa
sub
xchg
fmulp
jg
stos
outsl
jmp
inc
pop
aam
push
adc
adc
ret
mov
jp
pop
pop
xchg
xor
negb
ss
movsb
shlw
das
ja
adc
fisubrs
stc
sbb
pop
scas
rcrb
xchg
pop
push
jo
movsb
ficoms
mov
inc
pop
es
xchg
push
frstpm(287
call
rcr
shlb
test
pop
in
repz
loope
clc
stos
jb
ret
imul
popa
cmc
lcall
data16
shr
not
int3
cmpsb
sti
test
pop
cld
imul
stos
sar
fxtract
sahf
out
or
lock
hlt
push
in
ljmp
fmulp
roll
push
cmpsl
push
pop
pop
cmp
repz
push
repz
enter
jmp
scas
mov
jl
repnz
sub
jbe
cwtl
daa
jno
xchg
and
shll
add
adc
xchg
loopne
mov
sbb
sub
cmp
iret
lods
sahf
or
std
out
or
lcall
sahf
repnz
shrl
movsl
ljmp
out
cmp
arpl
and
sbb
loop
adc
pop
fnstcw
cwtl
fs
xlat
sub
jecxz
pop
aam
push
pushf
pop
mov
fs
dec
xchg
cltd
ss
pop
daa
mov
xchg
pop
stos
and
aaa
pop
shrb
inc
shll
xor
cltd
sbb
fstpl
arpl
mov
add
hlt
in
in
call
mov
lods
in
shlb
cli
mov
divb
clc
movsb
fimuls
pop
fcompl
and
fdiv
iret
frstor
mov
sbb
pop
bound
mov
push
fidivrs
cmp
add
bound
cmpsl
push
shr
cltd
fdivr
xchg
aas
mov
fs
test
loopne
adc
jle
dec
mul
xchg
inc
loope
jle
inc
aam
mov
push
push
cltd
xchg
mov
pusha
aad
cwtl
jmp
sbbb
test
xchg
fwait
mov
lods
push
and
in
cmp
add
shll
enter
push
enter
mov
dec
pop
cwtl
dec
addr16
push
aad
or
movsb
push
fwait
sbb
out
jmp
mov
loope
arpl
jl
in
xlat
movsb
outsb
repnz
in
call
and
int
xchg
fwait
pop
adc
in
je
imul
shrl
adc
push
cmp
xchg
xchg
xchg
gs
mov
imul
jge
jmp
fsubl
out
and
xchg
out
aam
cltd
xor
fcomps
jge
fcmovu
or
mov
mov
mov
adc
fcmovnbe
pop
lock
ljmp
lahf
add
ret
fdivr
pop
jmp
mov
fcomps
lcall
in
ljmp
mov
cmc
cmpsb
movsb
fcomps
lret
sbb
aaa
fdivrp
shlb
sbb
mov
rcr
xor
les
stc
fimuls
sahf
out
enter
ret
rcrb
fisttpl
mov
lds
fldl2e
ret
popf
stc
out
mov
test
sahf
rorl
fnstsw
dec
dec
mov
lcall
pop
pop
out
hlt
mov
sbb
into
xchg
ret
aam
or
fisttpl
jge
stos
mov
cmc
jmp
icebp
inc
inc
in
ljmp
dec
push
mov
fstps
xor
mov
pop
cltd
in
arpl
mov
movsb
aaa
sub
cmp
sbbb
jecxz
int
leave
ds
mov
loope
in
call
xchg
inc
push
out
fcom
fists
push
cs
stc
test
xlat
gs
sub
in
jno
aam
cmpb
ret
ret
fwait
cli
mov
fs
cmpsb
cld
fadd
dec
loopne
and
in
call
ds
jge
fs
push
xor
mov
pop
dec
shll
mov
ret
outsb
test
and
popa
xchg
pop
sbb
inc
test
and
fcmovnb
test
mov
movsb
xlat
pop
cmp
shll
aaa
rcr
test
push
pop
fsub
ja
push
jmp
xor
sub
mov
test
aaa
icebp
push
push
sbb
fimuls
mov
xlat
hlt
scas
imul
test
dec
push
rcrl
inc
pop
loop
sbb
sbb
mov
into
jmp
stos
xchg
sbb
mov
inc
xchg
and
fsubrl
adc
fstl
in
xchg
jmp
popf
mov
ja
iret
movsb
jmp
sub
pop
xchg
pushf
popf
ficompl
sbb
aaa
xchg
fistps
push
sbb
call
fs
ljmp
sar
fstps
mov
mov
sub
into
shll
pusha
lods
sbb
lret
push
aad
rcr
push
and
inc
jmp
fucomip
std
imul
stos
imul
push
inc
adc
mov
adc
out
sahf
fucomi
xlat
xchg
outsb
add
or
xchg
rclb
in
adc
ljmp
dec
popf
add
push
cmp
stos
push
int
inc
adc
outsl
aad
cli
pop
andb
and
scas
out
inc
mov
fucomi
jbe
xchg
push
adc
xchg
inc
dec
xchg
jmp
jns
cltd
cltd
push
pop
or
lods
in
lods
loope
ret
lahf
jp
scas
cltd
fucom
jecxz
inc
add
xlat
imul
jmp
mov
in
aam
xchg
xchg
imul
stos
bound
inc
in
scas
fstps
repnz
repz
adc
push
leave
das
cmpsb
shr
mov
insb
or
push
orb
call
mov
xchg
test
adc
dec
adc
jmp
and
and
mov
cmpsb
popa
dec
push
rcr
fsts
jmp
xlat
ds
in
andb
sub
pop
in
aad
in
lret
jae
in
cmp
sahf
cmp
cli
mov
aad
add
dec
enter
out
data16
aad
push
cltd
add
xchg
repnz
addr16
es
hlt
aad
jmp
sahf
movsb
mov
les
xchg
mov
sahf
jecxz
or
notl
xchg
out
outsb
shll
adc
sub
lock
arpl
repz
xlat
aas
call
or
cmc
pop
cld
daa
mov
cld
out
aad
push
mov
clc
xchg
push
imul
pop
mov
into
sub
lea
xchg
push
and
movsb
xchg
jns
sub
pop
cmpl
int
scas
sahf
aas
test
ljmp
fistl
lret
xchg
rclb
pop
rcrb
mov
bound
hlt
jg
idiv
shlb
push
cmp
fwait
std
mov
in
jns
out
mov
xchg
adc
enter
and
out
dec
fnsave
mov
dec
cli
aam
xchg
sbb
mov
jmp
cwtl
stc
and
fwait
mov
or
popa
push
pop
mov
iret
jo
jge
in
push
mov
cmpsb
and
and
out
cmpsb
fs
sbb
in
and
jne
xchg
ficoms
pushf
add
mov
hlt
rcrb
inc
sar
xor
stos
and
ficomps
adc
sahf
xchg
sbbl
add
lock
and
dec
push
xchg
add
lods
ret
pop
in
cmpsl
frstor
into
push
dec
mov
push
fstl
movsl
jecxz
pop
outsb
std
push
push
lret
icebp
lret
adc
mov
movsb
mov
jmp
pushf
push
xchg
mov
lret
and
aam
pop
popf
out
les
xchg
loop
lea
leave
call
cmc
mov
inc
and
fildl
bound
test
mov
ret
data16
pop
in
pop
or
test
cmp
mov
sahf
and
int
daa
adc
cwtl
mov
aad
sar
fmuls
jmp
rcl
xchg
testb
les
outsl
sub
cmpsb
rcl
out
jbe
out
jmp
push
add
sbb
pop
into
inc
cli
ret
icebp
movsb
rcrb
addb
mov
push
push
shll
pop
shll
ret
dec
cmp
jbe
ret
ds
jge
in
mov
out
in
jg
add
inc
fiadds
adc
flds
sahf
cld
incb
in
push
test
add
icebp
jmp
es
inc
adc
sub
jl
mov
in
sahf
test
sbb
jl
and
loopne
push
in
push
xlat
xor
push
ret
daa
mov
out
mov
fidivs
arpl
popf
mov
ss
lods
cmpsl
ss
inc
aaa
test
mov
mov
xchg
insl
mov
jns
outsb
mov
add
ret
repz
sahf
into
fimull
std
les
enter
mov
movsb
ljmp
dec
lock
movsb
fimuls
and
shrb
and
inc
lods
mov
int3
shlb
hlt
shlb
xlat
pop
icebp
jmp
and
mov
lcall
inc
sti
xlat
xor
movsb
fsubrl
mov
pop
mov
es
test
ljmp
and
in
lock
idivb
bound
lcall
scas
lods
fldenv
sub
ljmp
mov
lea
xchg
aam
pop
mov
sbb
dec
cmp
cli
mov
iret
call
mov
shrb
jecxz
mov
jle
jbe
daa
arpl
loope
push
cmp
iret
adc
fisubrs
lret
jmp
test
xchg
std
xor
jge
fdiv
fs
add
pop
mov
cmp
leave
aaa
icebp
cs
cmc
dec
in
xor
das
shl
fcmovnu
cmp
leave
scas
es
push
push
pop
stos
stos
test
push
loop
push
lods
subb
sbb
outsl
sub
mov
outsb
push
adc
mov
mov
push
mov
xchg
cltd
cmp
insl
adc
cmp
xchg
sub
leave
push
stc
lods
mov
insb
ja
nop
fisttps
dec
and
stc
lret
shl
adcl
lret
stos
xor
push
xor
pop
sbb
cmpsl
jo
imul
daa
dec
scas
aad
add
mov
scas
pop
into
and
jbe
dec
jno
in
mov
push
aaa
push
pushf
les
pop
and
flds
xchg
adc
sar
xchg
fucomi
inc
test
sahf
ss
lret
orl
imul
mov
push
mov
andb
frstpm(287
sub
mov
dec
paddsb
pop
pop
iret
inc
fisttpl
dec
aad
adc
aam
lods
or
loopne
xchg
jbe
xor
insb
insb
push
es
mov
into
pushf
fsubs
sub
pop
cmp
jg
add
jmp
into
jge
test
inc
gs
stos
add
add
push
xchg
imul
lds
loope
adc
mov
shr
fnstcw
stc
divl
movsl
mov
fsubrp
ret
and
cmpsb
mov
inc
add
add
xor
mov
and
cli
decb
jne
push
xchg
and
dec
rcrb
mov
imul
shrl
in
adc
push
adc
dec
fildll
gs
jmp
roll
aad
fwait
std
and
pop
xchg
add
xlat
call
or
inc
push
mov
mov
sub
out
ror
pop
repnz
mov
in
sbb
addr16
addr16
jecxz
lcall
and
shlb
cld
cmp
xchg
cmp
xlat
hlt
sarl
cmp
bound
mov
dec
jmp
mov
adc
mov
fisttpll
jle
adc
jp
dec
ljmp
mov
in
cmp
repnz
mov
push
push
inc
lods
leave
call
lods
stos
imul
stos
xchg
xlat
adc
adc
push
lret
jle
ror
and
lret
mov
push
sub
aam
int3
dec
xchg
ss
inc
movsb
adc
adc
popa
leave
test
int
or
sbb
call
push
xor
fucomp
fimuls
jecxz
mov
add
dec
pop
iret
pushf
movsb
fcmovnbe
dec
fucomip
push
mov
repz
xor
mov
lret
stc
movsb
out
xchg
fildl
mov
loope
test
and
addr16
fldcw
popf
je
sub
mov
add
mov
test
jmp
scas
sub
iret
fimuls
shlb
sbb
dec
mov
ss
adc
push
jecxz
aam
dec
jg
cmpsb
jmp
and
addr16
rol
les
mov
fistpl
int
inc
mov
cld
out
loopne
or
mov
inc
stos
fisubs
out
pop
in
xor
fxam
pop
in
mov
jecxz
xchg
ret
mov
lods
dec
frstor
push
jbe
xchg
mov
and
cmpsl
pop
sti
xchg
jmp
mov
xchg
movsl
jmp
adc
mov
or
push
into
sub
fisubrs
fcomi
jmp
cwtl
int
mov
outsl
pushf
xchg
jmp
into
cld
imul
outsb
pop
inc
pusha
hlt
inc
fisubs
out
jge
shl
pop
jl
clc
popa
in
lahf
enter
aad
push
enter
add
in
fstl
fs
push
fstl
das
jae
lahf
sbb
xchg
test
shl
or
fldcw
add
pop
push
hlt
aaa
mov
clc
mov
div
pop
enter
push
mov
daa
mov
fidivs
ror
in
adc
cld
lods
mov
scas
and
jb
push
xchg
testl
cmp
icebp
fimuls
mov
clc
sahf
rcl
insb
cmc
pop
je
clc
xchg
add
mov
cmp
js
push
jmp
outsl
mov
mov
insb
pop
aaa
and
out
jnp
fsubs
dec
dec
in
sbb
divb
in
jnp
ret
out
push
mov
jmp
mov
into
les
mov
insb
aas
jmp
sahf
add
fstpl
cmp
push
jecxz
add
int
mov
out
inc
mov
push
push
pop
fsub
nop
push
and
jb
sub
push
adc
into
fs
mov
lahf
xor
imul
vcvtss2si
imul
cmpsb
dec
shlb
fisttpll
xchg
jecxz
outsb
add
hlt
in
mov
ret
xchg
loope
ja
dec
pop
xchg
sbb
cmpsl
rorb
ret
into
in
fdiv
pop
sar
fstps
insb
or
insb
jnp
idiv
mov
or
rcrl
pop
test
lods
popa
enter
stos
push
testl
mov
cld
push
jo
popf
pop
sbb
les
fcom
sbb
shl
repz
popa
stos
cli
sub
lds
and
fucomp
popa
fisubs
jp
repz
aam
cmpsl
icebp
popa
rorb
repnz
mov
xchg
sbb
cli
pop
mov
daa
mov
fsubrl
les
mov
and
testb
orl
enter
mov
insb
push
ja
xchg
ja
scas
push
addr16
mov
test
rorl
addr16
mov
push
aam
shlb
and
pop
add
fisubl
neg
and
xor
mov
je
push
fsubrp
jecxz
shld
or
mov
into
mov
pop
int
lea
mov
lock
inc
xchg
fisttpl
out
dec
cmpb
jns
push
mov
ficomps
enter
dec
fsubr
sbb
cmpsl
out
popw
lahf
sahf
jle
fisubrs
cld
lret
rcl
sbb
sbb
int3
mov
cmp
dec
fcmove
mulb
adc
lock
jg
iret
js
cli
xchg
movsb
fisttpll
aas
cwtl
in
push
mull
imul
sbb
dec
mov
ret
mov
lock
pop
mov
cmpb
cmpb
getsec
inc
int
into
inc
lahf
das
pop
xor
and
xor
popf
in
loope
adc
adc
fidivrs
inc
test
rcrl
bound
cmpsb
int3
loopne
loope
ret
cmp
sahf
sub
mov
add
jle
adc
aad
lret
fld
jne
lods
faddp
add
sahf
mov
bound
mov
fsubp
loope
ljmp
enter
add
pop
jnp,pn
sbb
mov
out
in
sub
mov
cmp
push
push
cmp
mov
adc
or
enter
xor
xchg
lret
pop
jbe
test
or
pop
repz
cmp
cmp
sub
mov
push
shl
pushf
push
sub
or
cmc
cld
lods
shr
ficomps
testb
jge
test
fdivs
cmp
cltd
push
adc
pop
sbb
lret
mov
mov
xor
jp
fs
sarb
xor
in
rcr
xor
or
fisubs
loope
out
cmpsb
in
frstor
ret
jmp
in
outsb
xchg
mov
cmp
inc
rcrb
in
mov
sti
je
in
in
ret
insb
divb
or
leave
insl
xlat
cmc
fdivp
popf
pop
shr
and
pop
aad
rolb
mov
xchg
cmc
iret
xchg
loopne
jno
sub
int3
enter
stos
xchg
ja
mov
jle
data16
popa
mov
or
iret
dec
inc
gs
mov
jg
scas
bound
xchg
imul
pop
lret
jb
js
call
pop
push
mov
out
popa
call
mov
xor
data16
xor
mov
fcomi
push
ljmp
mov
fcoml
cmp
add
cmpxchg
jp
hlt
clc
popaw
shlb
shll
inc
jle
lds
cmp
sub
sub
sub
stos
push
jmp
pop
into
xchg
cld
pop
pop
adc
ja
inc
cmp
pop
into
divl
test
jae
xchg
mov
fidivs
dec
and
movsb
push
cld
add
sub
push
add
inc
push
jne
inc
mov
ljmp
shl
fadds
ret
push
xchg
cld
fdivrs
call
jnp
pop
sbb
jmp
call
push
mov
iret
rcrl
mov
in
in
cmp
cli
lods
aaa
scas
shld
adc
or
into
dec
scas
fstps
mov
loop
shl
xor
data16
aad
sub
mov
imul
js
stc
inc
ror
mov
add
leave
jecxz
mov
filds
mov
in
pop
xor
popf
out
addr16
lret
and
and
xor
rclb
sub
push
push
rorb
sbb
push
bound
jl
scas
scas
adc
xchg
dec
fcomip
repz
pushf
fisubs
sub
inc
jle
pop
pop
shr
pop
push
xchg
pop
insl
int
mov
jnp
lret
xor
xchg
data16
mov
inc
fcomps
scas
inc
jg
fldl
and
into
xorl
or
popa
mov
adc
mov
pop
ror
pop
aas
int3
in
shrb
popf
mov
data16
pop
shlb
lods
aam
lods
inc
lahf
fwait
pop
mov
pop
repz
jl
scas
fcoml
movsb
and
adc
inc
sahf
ja
xorl
dec
ljmp
cld
in
fimull
cmp
aad
jp
mov
sub
dec
fcmovnu
add
inc
push
std
and
push
push
jg
push
fisubrl
sahf
cltd
xchg
or
and
xchg
int
add
xlat
cltd
mov
xchg
dec
sbb
aad
sahf
gs
push
mov
sbb
sahf
mov
sub
cmp
scas
ficoms
rcll
lea
sti
setg
repz
stos
aaa
jl
and
mov
push
sbb
into
xchg
mov
push
fadd
fdivrl
jecxz
rcll
and
sub
xchg
cmpsl
jo
leave
adc
push
roll
fs
stos
add
dec
sbb
adcb
cld
sub
jp
sub
pop
cmpsb
sub
dec
dec
out
in
dec
popa
sahf
push
sub
lahf
mov
pusha
test
jl
hlt
or
sub
jg
push
pusha
test
arpl
hlt
fnstsw
cld
jnp
xchg
or
fistps
lahf
mov
mov
lret
inc
outsl
loope
cmc
mov
add
push
fiaddl
mov
popa
adc
cmp
dec
cmp
aad
aad
cmp
fs
jmp
in
xchg
rcl
inc
loop
push
sahf
les
fs
mov
or
sub
aas
out
xor
aad
js
mov
pop
cmpb
cli
cmp
subl
jmp
loope
fnstsw
dec
inc
mov
aad
adc
fisubrs
mov
sbb
mov
sarl
lahf
pop
in
mov
aad
mov
mov
ljmp
push
cmp
adc
js
pop
dec
jbe
sub
aad
int
or
adc
jnp
aad
out
popf
fdivp
lret
out
in
mov
leave
and
sub
mov
out
cmpsb
loopne
lahf
pop
leave
sub
adcb
in
popa
xchg
xor
dec
jno
xchg
fstps
cld
lods
push
pop
cmpsl
inc
ret
xor
fildll
fildll
xor
repnz
into
insb
notb
insb
inc
sub
xorl
xchg
sub
ret
mov
cmp
popa
das
mov
push
lods
pop
jb
pusha
int
jbe
fists
fldcw
jg
call
arpl
out
in
fcmovnu
add
hlt
out
lods
pop
in
mov
imul
arpl
adc
lods
rclb
popa
rcll
fisttpll
inc
cwtl
or
jmp
ffreep
sbb
add
mov
cmpl
rorb
ror
dec
jns
ljmp
ljmp
push
push
add
push
jnp
jecxz
jbe
popa
jne
xlat
aam
cmp
cld
mov
pop
xchg
jno
lcall
popf
xor
lcall
ja
inc
icebp
jge
negl
inc
pop
pop
cmpsb
mov
sbb
fcmove
mov
pop
pop
test
mov
ficomps
movsl
pop
mov
pop
in
in
xchg
lret
into
push
xor
cmp
enter
cltd
jae
mov
mov
push
mov
push
sub
sub
xlat
js,pt
in
stos
xor
cwtl
nop
or
ffreep
in
xor
dec
cmpsl
jo
pop
aaa
fldl
or
ja
loopne
cmp
add
daa
fwait
cs
jno
data16
jmp
mov
hlt
ja
dec
pop
cs
mov
jne
les
cmp
pop
add
mov
push
sub
repnz
ja
leave
pop
rcl
pop
mov
ja
mov
jmp
xchg
int
into
bnd
cmp
shr
fcmovnbe
subl
je
stc
shrl
mov
imul
cwtl
add
and
sbb
pop
icebp
sub
mov
and
bound
adc
andl
lods
nop
aas
cmp
ret
pmulhw
pop
repz
pop
lcall
icebp
iret
rcrl
dec
aas
popf
inc
leave
insb
lods
stc
cmpl
test
jns
out
test
mov
adc
setb
mul
pop
add
and
push
insb
int3
pop
push
aad
in
sbb
movsb
jl
repnz
std
inc
aam
push
stos
inc
das
jl
push
ds
lods
in
addr16
or
cmc
mov
mov
push
push
sub
lcall
jb
xor
insl
xor
loope,pt
or
imul
imul
mov
cs
frndint
or
push
daa
call
fs
not
add
jge
hlt
xchg
sbb
adc
fimuls
mov
cli
shll
jnp
pusha
out
shlb
ljmp
mov
jl
loopne
jl
mull
sub
pop
jbe
out
and
adc
aaa
or
and
loope
aaa
cli
and
dec
jmp
iret
inc
and
pusha
outsb
sub
adc
test
jae
fnsave
arpl
testl
into
and
cwtl
adc
xor
adc
ret
rcrb
in
mov
fldenv
jnp
shl
mov
push
push
sbb
dec
ret
mov
test
mov
cmc
cmp
std
hlt
jecxz
gs
inc
shll
stos
jmp
rcrl
jae
push
fiadds
icebp
ljmp
and
ja
xchg
lea
fcomp
aaa
fs
pop
je
push
xor
cmpsb
mov
rol
rcrb
test
lock
xchg
push
xor
mov
ljmp
push
xor
fiadds
out
xorb
pushf
mov
in
rcl
jle
rcr
dec
lods
pop
fidivrs
stos
push
loope
mov
fs
ljmp
jle
dec
mov
push
cmpsb
aaa
rorl
or
fldt
push
mov
pop
jnp
call
add
jbe
xchg
jge
jge
add
and
jge
xchg
in
xchg
js
push
int
add
add
mov
les
cbtw
xchg
jecxz
leave
ljmp
add
mov
stos
mov
xchg
adc
and
ds
dec
push
ficomps
mov
les
rorl
dec
repz
xchg
std
mov
xor
lock
xchg
push
stos
push
shlb
adc
push
dec
dec
sub
fidivrs
shrl
mov
xchg
data16
popf
imul
aaa
dec
lret
xchg
ret
xchg
fs
xor
adc
stc
ja
mov
xchg
push
cmpsb
out
dec
into
loope
into
dec
cmp
add
cld
jbe
dec
lret
cmp
adc
cmpsb
aad
js
bound
loope
pop
cmp
lods
shlb
inc
or
ss
adc
lods
jecxz
mov
dec
push
in
xor
ficomps
pop
lret
or
jb
mov
jb
clc
fldenv
inc
add
xchg
and
xlat
jb
popl
aad
pmullw
ficoms
pop
loope
pop
aas
push
push
in
bound
fistps
movsb
cld
xor
hlt
sahf
negb
inc
out
mov
xor
cwtl
push
inc
sbb
icebp
xor
mov
in
push
inc
test
rcl
in
mov
ret
cld
mulb
iret
das
xchg
into
aad
aad
mov
mov
repz
mov
rorl
dec
pextrw
push
orl
sub
loopne
stos
pop
cld
daa
jg
ja
ret
cmpl
cmc
inc
pushf
mov
mov
sub
jno
test
jnp
aas
mov
mov
int
inc
in
bound
test
repnz
fildll
test
sbb
mov
mov
aad
sbb
lret
ja
sbb
enter
xor
fldcw
or
test
and
adc
lahf
cld
jno,pt
rcrl
dec
xor
daa
xchg
jbe
ret
ret
pop
jmp
lods
jne
aas
popa
ljmp
inc
int3
xchg
insl
dec
sbb
cli
inc
cmp
ds
or
insb
adc
sahf
push
add
jae
dec
sarb
cltd
jns
jecxz
fidivs
xor
rolb
and
dec
mov
les
fimuls
mov
lahf
mov
clc
push
rclb
mul
test
in
sub
cmpsb
mov
jb
data16
fstpl
in
pop
test
js
gs
xchg
mov
je
fnstsw
sbb
divl
mov
jmp
in
add
cmpb
push
adc
in
sub
jmp
mull
or
ljmp
out
testb
fs
leave
and
sbb
stos
jb
rcrl
shrl
subb
inc
sbb
out
fucomp
in
jns
rcll
cld
lods
dec
inc
xchg
outsl
pop
mov
jecxz
push
sub
pop
adc
int
icebp
adc
sbb
rorl
dec
mov
cmp
sub
jmp
jbe
push
lods
cwtl
dec
std
in
arpl
adc
mov
mov
cltd
or
cmp
pushf
adc
sub
test
push
jge
push
adc
fdivrl
push
inc
hlt
xchg
dec
dec
or
lods
stos
xchg
add
sub
aam
sbb
xchg
movsb
cmp
mov
shr
stos
scas
dec
fiaddl
or
xchg
test
aad
push
ljmp
sbb
mov
stc
jb
cmpsb
push
fmuls
mov
dec
jbe
fdivrp
xchg
xchg
in
mov
stc
into
mov
test
clc
je
test
xchg
jns
aam
iret
push
cmp
xchg
mov
jb
cwtl
fldt
in
lea
push
xchg
push
add
jmp
inc
adc
js
pop
mov
add
sar
cmp
in
test
in
add
cld
mov
adc
jbe
hlt
pop
out
pop
sub
cmp
mov
sbb
fsts
cmp
nop
mov
rcrl
fisttps
push
fwait
data16
mov
cld
ret
sub
clc
fildl
hlt
aam
sbb
xchg
les
cltd
add
mov
out
mov
fstpt
cld
mov
test
sbb
ds
adcl
fdivrp
and
int
rcrb
insb
shrl
es
fidivrs
cmp
roll
dec
and
inc
jne
leave
push
loopne
push
rclb
and
jmp
aaa
test
sub
fnstsw
mov
sbb
sbb
and
icebp
out
adc
mov
push
inc
test
or
push
mov
test
sbb
pop
mov
mov
fimull
ja
dec
ror
icebp
dec
jp
fcmovb
loope
sub
insb
into
dec
and
movsb
xchg
mov
sbb
iret
adc
sahf
xor
cmp
xlat
mov
jl
sub
push
loope
popf
leave
mov
sbb
push
jmp
ja
test
xchg
ss
pop
movsb
ds
fwait
sub
aas
sbb
gs
mov
dec
cmpl
pop
push
in
sarl
lret
xlat
ret
adc
ret
movsl
dec
loopne
cmp
xchg
or
nop
jecxz
push
pop
sub
rcl
dec
pop
cmpl
das
enter
mov
mov
mov
leave
loopne
fs
cltd
fdivs
in
stos
fstpl
pop
sbb
or
sbbb
mov
sbb
jmp
xorl
rcrb
or
add
cmp
pusha
cld
sub
rcll
in
call
pop
stc
shll
lods
in
pop
adc
jb
adc
dec
or
inc
push
and
das
mov
fbld
sbb
or
xchg
sub
mov
int3
mov
mov
fdiv
fs
adc
outsl
xor
rorb
aas
movsb
icebp
and
pushf
lret
pop
les
aam
movsb
jmp
flds
push
daa
ret
and
lods
ljmp
ret
mov
stc
and
repnz
adc
bswap
cmp
movsb
jp
and
mov
or
cs
loopne
or
repz
and
rcrl
fimuls
pop
fsubrs
testl
dec
push
mov
mov
sub
lahf
xchg
push
and
xchg
inc
push
cmp
outsb
inc
out
pusha
bswap
fidivrl
xlat
ja
push
xchg
cmovge
pop
inc
xchg
cmp
pop
shlb
ljmp
mov
sarl
add
nop
js
mov
sti
adc
shll
or
int
push
mulb
adc
in
or
cmpsb
pop
sub
ds
out
push
jecxz
jnp
sub
fstpl
cwtl
popa
leave
dec
addr16
rol
outsb
sub
adc
cmp
out
pop
and
mov
pop
cmp
and
ss
push
sbb
ja
inc
xlat
gs
in
stc
or
in
adc
les
xchg
cmp
cmpl
mov
popf
les
xor
xor
and
cmp
cld
cmp
sarl
aas
fisubs
fscale
inc
ret
fnstcw
shlb
jecxz
xor
in
mov
idivl
jge
cmp
addl
or
pusha
mov
int3
adc
jo
mov
mov
repz
mov
push
lahf
inc
subl
xchg
iret
fdivp
mov
pop
sti
cli
test
dec
pop
xchg
lret
jmp
add
xchg
dec
lea
cmp
or
push
inc
into
insl
out
int
out
arpl
add
test
mov
clc
ret
fisubs
sub
xchg
mov
sub
push
mov
jb
push
adc
push
pop
dec
pop
ficoms
dec
mov
or
mov
rcrl
pop
ficomps
adc
rorl
popf
mov
mov
rcll
outsl
outsb
dec
aaa
in
loope
ret
inc
cmp
mov
add
shl
dec
negl
xchg
stos
call
add
aas
or
call
pop
popa
loop
push
pop
sub
rcrl
push
pop
in
fs
ljmp
add
fwait
cmp
stos
pusha
cmc
movsl
or
mov
aad
mov
bound
xchg
add
mov
add
stc
adc
and
pusha
dec
rclb
out
lahf
mov
pusha
xchg
insb
in
cli
dec
mov
stos
xchg
lock
call
lret
pusha
test
mov
and
cld
sbb
jno
jl
jne
call
out
fidivrs
mov
in
mov
stos
mov
fs
pop
in
or
sub
mov
pop
popf
lds
fs
add
inc
mov
jo
push
xor
push
xchg
in
call
call
sub
stc
fistl
shll
cmpsb
mov
movsl
sti
into
inc
call
int3
mov
mov
addr16
in
and
pop
adcb
cmp
sarb
mov
movsb
mov
rcll
pop
xchg
hlt
je
sbb
cmp
push
jg
aas
pop
sub
sub
xlat
fsubrp
dec
fisubrs
cmpsl
cmp
test
cltd
cmc
mov
or
outsl
lea
ds
sub
or
pop
mov
addr16
lahf
test
xchg
cmc
call
icebp
push
jb
hlt
js
push
xchg
dec
fs
mov
fisubrs
mov
jge,pn
push
jbe
shrb
pop
in
cs
movsb
jge
mov
insb
jmp
sbb
sub
dec
lods
pusha
sub
cld
jmp
shll
inc
mov
add
lcall
addl
jmp
movsl
jmp
stos
inc
int3
in
push
stos
mov
stos
test
jecxz
push
or
jns
mov
sbb
lds
mov
icebp
loope
jb
movsb
leave
push
out
mov
stc
stos
fs
idiv
lcall
leave
xchg
jmp
dec
int3
inc
test
pushl
xchg
xchg
mov
loope
push
in
movb
inc
ja
xchg
cld
daa
stos
repnz
mov
jmp
aas
cmp
add
fsub
ja
test
sub
in
mov
or
dec
xlat
push
pop
fmull
mov
mov
shrl
hlt
in
xor
pop
and
stos
dec
loope
mov
jecxz
cs
lock
mov
rclb
daa
imulb
push
cmp
pop
fnsave
xor
push
pop
push
pop
je
or
mov
fcmovne
adc
xchg
arpl
scas
fdiv
test
jo
cmp
cmp
pop
xchg
push
in
adc
inc
dec
jge
popf
into
imul
es
idivl
pop
imul
cmp
mov
jg
push
adc
ret
jmp
xchg
pop
jmp
fdivr
pop
mov
fmul
js
stc
xchg
lcall
mov
ret
xor
cmp
stos
pusha
adc
fs
sete
sbb
mov
sub
xchg
push
lock
movsb
mov
aad
sbb
cmp
dec
push
push
or
aam
push
insb
xorl
xor
lret
insb
jne
test
pusha
add
push
int3
std
adc
sbb
push
push
bound
icebp
mov
pop
jnp
dec
sub
jne
dec
lea
and
rorb
inc
dec
stos
shrl
in
push
sarb
ror
ds
test
inc
add
mov
cmp
and
jbe
jle
cltd
icebp
stc
cltd
dec
mov
push
sub
mov
pusha
int
xchg
rcr
rolb
dec
and
sbb
les
mov
mov
and
imul
mov
and
les
adc
xchg
int
hlt
in
cltd
js
shrl
fstl
stos
add
stos
out
add
mov
jne
add
xchg
cmp
ja
push
loope
push
mov
shrb
sub
or
loopne
lock
inc
mov
sub
mov
aas
dec
ss
hlt
cmpsb
jge
gs
subl
sub
loope
stos
and
or
fnstsw
xor
pushf
jmp
mov
cltd
fstps
je
jl
pushf
mov
inc
ljmp
rorl
dec
add
je
rcll
sub
mov
addr16
push
in
xchg
js
and
push
in
std
call
inc
leave
push
in
adc
or
sub
pop
lds
xchg
aad
das
xchg
mov
inc
loopne
xchg
movsb
data16
into
inc
mov
bound
jmp
adc
out
or
pusha
cmpsb
mov
fdivp
adc
and
ja
call
pop
cmpsb
dec
mov
sbb
insl
repz
ret
stos
cltd
add
iret
jmp
or
push
mov
imul
pop
je
notb
adc
scas
sbbl
dec
fmull
and
vmread
lock
fldenv
fsubp
mov
fldl
pop
repz
jo
repz
loop
sub
push
rcl
insb
test
push
xor
xchg
dec
nop
jae
sub
ds
stc
test
sub
jp
inc
fldl
xchg
cmp
inc
in
outsb
xor
cwtl
sbb
sub
xabort
inc
xchg
adc
and
cmp
fcomp
testb
sarl
sahf
adc
ficoms
sub
xchg
add
jge,pt
and
out
xor
mov
or
dec
mov
hlt
imul
xchg
jns
cwtl
into
popa
in
aad
sar
das
stos
insl
ja
inc
insb
xchg
clc
test
mov
enter
lods
aad
pop
sbb
jae
dec
lahf
lods
xchg
mov
je
aas
add
daa
push
mov
jne
into
pop
in
xchg
int3
movsl
jmp
push
fs
std
pop
pop
ffreep
and
nop
out
mov
pop
in
cld
mov
pop
and
mov
xchg
in
inc
test
lret
cmp
fsts
sbbl
stos
in
dec
xchg
xor
pop
pop
arpl
mov
adc
cltd
or
xchg
push
popa
and
and
rcrl
inc
pop
lret
pop
mov
and
jl
in
cmp
pusha
in
mov
adc
arpl
shl
in
push
xchg
hlt
es
add
sbb
stos
rcr
mov
mov
mov
pusha
aaa
mov
ret
das
daa
in
lahf
rorl
jo
cmp
adc
xchg
sub
and
arpl
movsl
jae
jmp
pop
pushf
inc
and
xor
test
loope
mov
leave
xor
jmp
pusha
mov
push
add
sbb
adc
daa
jle
jmp
ret
dec
rclb
push
scas
push
arpl
lret
jbe
repz
icebp
inc
xchg
rcll
jmp
adc
call
stos
into
mov
cmp
call
add
loope
adc
and
iret
pop
idivb
pop
xchg
cld
repnz
pop
out
mov
lret
lods
loopne
outsb
lods
add
pop
jge
ja
pop
call
bound
out
jge
dec
pop
push
adcl
lret
fcompl
jmp
into
in
rolb
scas
cmp
xor
stos
inc
xchg
and
push
loopne
sub
sub
mov
and
mov
pop
pop
stc
sahf
setle
imul
jae
xchg
shrl
les
rcll
sub
mov
lods
js
nop
mov
mov
popa
enter
pusha
les
adc
dec
jmp
call
nop
test
sahf
sbb
daa
and
mov
push
adc
push
xchg
out
inc
in
xor
inc
fnstsw
sub
inc
sahf
mov
push
xchg
dec
loop
sub
call
stos
in
sbb
sub
ficoms
sahf
cmp
jecxz
sub
stos
mov
aam
xor
ror
je
out
stos
dec
lods
sahf
hlt
push
cmpsb
stos
sbb
push
out
mov
gs
in
rcl
adc
jmp
mov
push
mov
sbb
inc
daa
fisttpll
ja
ficoms
and
mov
pop
out
clc
push
and
pop
fstps
stc
test
and
pop
xor
aad
int3
imul
adc
cmp
popa
mov
add
pop
arpl
jecxz
fld
arpl
stos
inc
aas
cwtl
cwtl
fldenv
xchg
les
ret
push
cmp
stos
cmpsb
jb
xor
dec
pop
push
fisubrl
add
mov
fwait
or
pushf
data16
jecxz
movsb
faddl
test
ficoms
and
lods
lahf
std
mov
shll
repnz
inc
or
mov
push
cmp
in
adc
mov
mov
pop
cmp
or
nop
mov
jo
pop
sub
mov
enter
lret
mov
rcr
xchg
in
sbb
bound
test
push
les
fwait
adc
popa
inc
mov
loopne
cmp
mov
insb
loopne
je
mov
movsb
jp
ljmp
mov
or
xlat
sbb
in
incb
pop
into
lahf
or
dec
sarb
push
in
popf
sbb
xchg
push
movq
movsb
mov
jle
fnstsw
mov
insb
mov
lods
aaa
adc
pop
aad
xor
mul
pop
scas
xor
test
in
loopne
inc
ljmp
jae
sub
pop
sbb
ja
mov
cmpl
aaa
cmpl
sarb
push
fs
xlat
ror
inc
add
jne
sti
xchg
cltd
lcall
mov
pop
dec
and
jge
imul
lock
roll
xchg
sbb
aas
add
pop
sub
and
dec
dec
and
test
pusha
into
std
and
lods
adc
lds
mov
push
pop
fistl
cs
int
mov
mov
insl
repz
push
cmp
mov
movsb
test
add
or
jnp
or
cld
lock
mov
test
or
cmp
shl
push
sbb
sbb
shll
cli
mov
mov
cld
ljmp
loopne
cmc
in
fdivrp
ljmp
jmp
pop
fmuls
test
cld
inc
cmpsb
in
in
aam
ret
mov
jnp
mov
fidivrs
scas
push
push
mov
fdivp
cld
stos
sub
in
mov
jne
int3
addr16
mov
inc
fsubrl
andl
cmp
int3
mov
mov
xor
and
xchg
lahf
das
ss
andl
lods
cmp
lahf
je
repz
push
inc
ficoms
int
jge
mov
jp
pop
push
mov
adcb
xorl
pop
push
mov
clc
xchg
popf
mov
out
out
sti
push
stos
push
mov
cmp
scas
in
test
out
ret
jg
xchg
arpl
rolb
pop
sahf
and
sub
orl
out
mov
cmp
movsb
cld
pop
mov
fnstsw
lahf
sub
in
xor
testb
test
test
dec
sub
jbe
xor
mov
call
sub
cli
loope
cmp
int3
fcompl
pop
mov
rorb
and
iret
rcll
pop
mov
xor
cli
push
dec
jnp
inc
add
test
fcmove
icebp
rolb
daa
xor
insb
cmp
push
test
shr
mov
sbb
and
call
enter
or
clc
dec
mov
stos
int
mov
mov
pop
dec
mov
sub
xchg
repnz
dec
add
dec
jp
jg
push
mov
fsubr
into
pop
lea
push
int
stos
jecxz
popa
test
fcmovbe
jne
imulb
lret
push
mov
cltd
dec
and
sbb
inc
push
sub
mov
sbb
push
les
push
aam
outsl
jb
cmp
xor
ds
test
mov
iret
lcall
fnstsw
xchg
pop
scas
into
mov
popf
xchg
hlt
push
cld
cmc
aam
add
mov
xchg
enter
sti
xor
test
mov
mov
mov
jnp
xchg
jne
call
mov
call
sub
into
pop
fisubs
arpl
sti
sbb
test
bound
mov
test
add
in
data16
loope
add
idiv
lds
mov
cmc
sbb
pop
xchg
mov
pop
arpl
sub
mov
cmp
xor
cmpsb
fs
jb
jmp
xor
dec
sub
in
nop
scas
fwait
and
out
pop
jbe
test
lret
hlt
mov
inc
iret
xor
push
cmp
dec
adc
cmp
and
add
leave
mov
sahf
cld
lcall
mov
sti
cmp
dec
subl
mov
pop
in
sarb
cmp
cwtl
push
or
add
out
faddl
call
fidivl
imul
push
test
dec
jmp
push
lret
cwtl
cmp
add
out
xor
popf
or
sbb
jg
test
and
xchg
shrl
push
into
mov
movsb
gs
inc
test
jle
sarb
sub
lea
sub
loope
int3
mov
lods
enter
jmp
in
push
pushf
adc
sahf
test
out
mov
arpl
rolb
in
leave
stos
lret
jge
scas
push
xlat
shll
cmpsb
inc
adc
imul
cmp
push
fistps
aam
dec
subl
or
out
xchg
shr
cmp
jecxz
push
mov
jge
xchg
cltd
or
add
ficoml
jge
mov
enter
popa
pop
jl
xor
lods
in
mov
mov
mov
add
out
in
and
inc
test
lahf
inc
ds
gs
les
xchg
xchg
outsb
pop
cmpsb
imul
xchg
cmc
jge
adc
and
hlt
xchg
js
imulb
aad
xlat
int3
pop
adc
jno
loope
xchg
cmc
dec
xor
xchg
adc
arpl
jbe
ja
sbb
sti
jae
add
shll
dec
out
pop
lods
pop
mov
mov
push
jge
push
sbb
out
jp
fisubs
movsl
cmpsb
adc
sub
dec
mov
sub
inc
mov
cmpsb
adc
jp
ss
sbb
push
xor
mov
pop
movsb
movsl
xlat
and
fimull
cld
cmp
mov
and
cld
aam
jecxz
add
jb
repnz
fs
scas
xchg
jecxz
xor
or
dec
xor
ret
or
enter
sub
js
roll
das
inc
sub
loope
mov
scas
sti
imul
adc
adc
and
out
iret
pusha
add
push
in
xor
pusha
sti
vorps
sub
testb
and
mov
jecxz
mov
pusha
rcll
adc
inc
xor
lds
jns
frstor
fs
in
xor
cmpsb
shlb
ret
shl
push
out
bound
iret
jb
or
pushw
ja
dec
aam
add
loope
popw
insl
call
pop
mov
stos
inc
loope
jge
xchg
xchg
lea
mov
push
inc
add
ja
xor
out
fs
add
cs
movsb
ret
jo
cmc
adc
inc
or
mov
xlat
inc
lea
pop
cmpsb
pop
sub
xchg
aad
test
jle
adc
mov
sbb
xchg
test
jecxz
xchg
stos
loope
mov
push
push
aaa
je
loopne
fcmovnu
mov
add
or
pop
insl
adc
into
mov
or
mov
cs
icebp
popf
add
xchg
addr16
pop
or
subl
ret
pop
sbbb
std
dec
fdivrs
dec
imulb
pop
cli
aas
jecxz
push
mov
movsb
cld
or
or
dec
mov
or
vsqrtpd
sar
inc
out
aaa
jmp
mov
jecxz
mov
push
ss
push
fimuls
sar
test
push
adc
lods
aad
ret
ret
jb
icebp
xor
jbe
movsb
popa
les
test
ret
sbb
and
les
inc
dec
jle
inc
lods
negb
das
enter
fmul
jle
out
movsb
mov
pop
push
dec
jle
push
in
xor
add
imul
popf
push
cmp
ret
loopne
notb
in
rcrb
push
xor
movsb
cld
aam
lea
test
out
push
mov
jo
cli
cmp
cmp
dec
shlb
shl
cmp
stos
sub
sub
adc
adc
stos
push
pusha
shrl
int
jl
fdivrp
xchg
sbb
and
pavgb
test
in
dec
insb
inc
and
xchg
cmp
push
sbbb
lods
cltd
mov
movsb
jno
movsl
fisubl
and
stos
movsb
push
mov
fstl
xchg
push
test
gs
adc
mov
fdivrp
test
imul
inc
mov
icebp
dec
rcrl
in
test
loop
cld
int3
mov
aaa
xchg
data16
pop
push
mov
arpl
inc
mov
les
dec
mov
fdivl
push
shlb
dec
ret
idiv
push
clc
add
and
mov
mov
cmp
cld
lret
pop
fildl
mov
dec
mov
loope
notb
das
dec
and
mov
in
push
icebp
jmp
jecxz
es
pop
adc
cmp
lret
xlat
jnp
or
or
push
clc
icebp
test
repz
add
fsub
xor
jb
insb
xchg
sahf
push
and
adc
insl
mov
mov
mov
dec
pop
leave
fistl
test
or
fsubs
int
outsl
add
pop
mov
lea
adc
inc
jb
movsl
imulb
xchg
jecxz
push
dec
test
push
push
xchg
push
mov
loopne
inc
cltd
fiadds
clc
dec
push
mov
ror
inc
xor
in
push
jg
pop
dec
jmp
mov
shll
out
roll
divl
push
add
mov
test
and
add
into
ljmp
pop
push
out
or
xchg
push
ds
or
icebp
cs
popf
rorl
jmp
lret
sub
xor
fistps
dec
and
pop
or
sub
jge
pop
fnsave
inc
test
mov
in
pop
test
or
roll
jno
xchg
mov
pop
jnp
fcompl
mov
pop
ret
rolb
xchg
inc
loope
cld
mov
ljmp
in
jg
dec
psubd
dec
push
movsb
call
jnp
cld
cmc
cmp
stc
inc
push
rcll
sbb
lret
aaa
jecxz
push
adc
dec
fdivp
lods
inc
jecxz
arpl
mov
mov
xor
or
pop
roll
ret
mov
mov
xchg
into
jmp
movsl
jge
mov
fsts
mov
dec
or
stos
mov
shl
js
push
clc
mov
push
jne
daa
lret
cmp
inc
imul
or
push
in
adc
push
idivb
enter
loope
das
cwtl
ljmp
out
add
xchg
adc
and
adc
icebp
dec
test
mov
orb
iret
jecxz
jae
hlt
sahf
jns,pn
fmuls
fiadds
adc
sarb
cs
fcomip
enter
out
jne
pop
and
xchg
lea
mov
xchg
and
outsb
xchg
mov
test
das
sahf
das
jae
cs
jns
lods
xlat
jg
fcoms
jmp
jb
arpl
jb
pop
scas
adc
and
adc
add
in
sub
call
xchg
and
mov
insb
cmpsb
lcall
loope
pusha
pop
insb
fs
call
out
test
xor
icebp
pop
in
jns
adc
mov
frstor
mov
dec
icebp
and
mov
in
xchg
out
sub
shrb
push
add
push
cmpsl
xor
sub
jle
dec
test
frstor
xor
stos
sub
inc
insl
sub
jmp
lret
mov
cmp
sub
stos
cmp
bound
shr
jg
xchg
sbb
jle
pop
and
jge
js
test
jb
inc
into
mov
out
lock
stos
ror
enter
ret
out
imul
mov
push
mov
xor
inc
bound
add
movsl
push
add
pop
sub
cmp
mov
std
mov
jp
ja
lret
push
shl
aad
pop
fmull
cmpsb
mov
inc
aam
rcll
mov
adc
cld
lcall
push
or
xchg
and
pop
dec
or
nop
lret
pop
inc
sar
fmull
xchg
lods
jmp
stos
ja
in
adc
or
push
sub
adc
jo
stos
jge
push
lods
scas
rorb
fldenv
xchg
jg
and
sub
fsubl
rorb
mov
stc
lahf
inc
cmp
mov
pop
scas
lret
sbb
aad
mov
adc
repz
cmp
ret
fwait
xchg
ret
test
outsl
movb
and
sbb
jb
xchg
cmp
shll
mov
and
and
inc
lret
sarl
fstl
dec
popf
cwtl
jno
pop
push
loope
and
mov
sub
jb
pop
cmp
cmpsl
mov
imul
and
adc
stos
mov
js
push
jge
pushf
outsl
mov
es
or
mov
inc
imul
movups
aas
xchg
sub
fucomp
inc
push
xchg
add
pop
sti
add
or
add
scas
cmp
xchg
jecxz
or
aam
push
push
inc
jl,pt
insb
push
shlb
cld
or
cmp
mov
push
inc
push
shr
mov
sub
xchg
sbb
and
xor
sahf
mov
ds
data16
inc
test
mov
inc
pop
arpl
jmp
into
ja
sbb
sub
stos
insb
push
icebp
pop
iret
imul
sbb
cmp
das
leave
fcmovnu
pop
mov
xchg
jmp
sub
fisubs
xor
stos
rorl
outsb
jnp
stc
stos
insl
mov
pushf
dec
movsb
mov
pop
je
sub
in
int
jbe
outsl
lret
inc
pop
stc
test
pusha
cld
in
pop
push
cwtl
pop
xchg
cmp
pusha
mov
aam
sar
cmc
xchg
xchg
mov
call
in
or
sti
js
andb
pop
iret
sahf
adc
pop
jns
xlat
pop
ret
fisubrl
mov
aas
in
popa
outsl
aaa
jge
lret
sbb
mov
jns
pop
add
fisttpl
xchg
adc
cld
test
test
mov
push
outsl
or
shl
or
aaa
mov
icebp
test
pop
loope
sub
mov
out
sbb
mov
dec
xchg
pop
bound
cld
leave
stos
inc
and
ret
sub
mov
fisttpll
pop
inc
mov
adc
xor
jp
jmp
lret
in
insb
clc
and
daa
inc
stos
ljmp
mov
push
mov
test
xchg
pop
push
aaa
stos
fld
push
lds
test
mov
fsubrp
pusha
lea
jne
shll
inc
lods
mov
or
sub
rcl
add
adc
push
adc
negl
pop
test
fstpt
in
push
cld
sub
mov
fildl
xchg
stc
xchg
js
mov
jecxz
testb
mov
xchg
pop
lods
pushf
jae
dec
les
add
shrb
push
inc
scas
jne
aad
mulb
xor
adc
pop
in
pop
ja
jne
xchg
ret
xchg
mov
ss
ror
cmp
xchg
push
cmp
mov
cmpxchg
fwait
das
sub
push
int
neg
mov
fsts
cmp
mov
loope
mov
dec
jmp
mov
notl
pop
mov
mov
xor
imul
fistpll
movb
popf
cmpsb
addr16
addr16
inc
dec
inc
sti
jno
ret
imul
dec
mov
in
cld
js,pt
test
imull
cmc
push
scas
fdivrs
push
bound
dec
push
fidivs
or
rclb
rorl
fisubrs
aaa
sub
sub
aad
stos
hlt
inc
mov
dec
jmp
decl
fildll
lea
pop
inc
sub
lods
push
mov
xchg
mov
pop
adcb
loop
mov
adc
push
fdivr
adc
jmp
hlt
cltd
push
mov
ljmp
pop
xchg
clc
adc
gs
aaa
mov
xchg
dec
jle
mov
sub
icebp
lds
int
xor
andl
les
jp
in
sbb
test
loopne
sub
rcll
rcll
jp
sub
xchg
xor
stos
fcoms
loop
in
out
roll
and
iret
in
sub
int3
and
not
and
adc
jge
jns
push
shl
sub
fadds
mov
mov
and
cld
xchg
mov
sahf
dec
xchg
repnz
sbb
movl
mov
ljmp
push
inc
fsubp
dec
adc
addr16
sub
jge
or
enter
lcall
mov
pop
jecxz
cld
cmc
popa
mov
mov
shll
xchg
and
call
pop
std
incb
adc
or
jg
jecxz
add
aam
xchg
add
hlt
xchg
addl
sub
or
sub
sbb
fildll
repnz
pusha
and
mov
mov
lret
add
dec
sub
add
shlb
outsl
mov
arpl
sbb
xchg
pop
ret
test
xchg
cmpl
stc
mov
test
stos
mov
mov
test
pop
aam
inc
cwtl
sarl
inc
mov
mov
rcl
pop
lret
jns
int3
jmp
notb
cmp
xchg
emms
lock
cmp
or
pop
data16
or
sub
out
scas
ret
ret
in
xchg
scas
in
aaa
adc
xchg
cmp
leave
cltd
and
adcl
push
xchg
xchg
cmpsb
fbld
std
sub
stc
adc
les
cmp
jg
mov
bound
iret
cmc
loope
xchg
cmp
pop
les
shrl
mov
dec
xchg
and
outsb
in
jg
mov
enter
ljmp
dec
movsl
lret
ds
jecxz
fwait
cmp
xor
push
cmpxchg
ljmp
mov
gs
mov
out
push
sub
xchg
cmpsb
aas
incb
ljmp
pop
test
dec
push
ljmp
shrl
fldenv
idivl
popl
sub
sbb
push
adc
aad
stos
mov
icebp
fnsave
adc
adc
sbb
push
stos
lret
les
xchg
adc
adcb
pop
out
mov
push
push
imul
roll
cmp
mov
repz
inc
nop
fcmovnb
rcl
insb
adc
or
ret
pop
add
adc
in
je
aam
mov
sahf
in
pop
imul
cmp
xor
inc
push
adc
loope
cmp
push
loope
int
int
mov
sbb
call
fisubrs
sahf
shr
mov
sub
fdivrl
pop
pop
push
cmp
fsubr
adc
and
stos
jnp
arpl
xchg
pop
and
mov
aam
push
mov
rcl
sbb
inc
insl
pop
testb
call
in
sahf
sub
add
add
or
adc
and
inc
data16
fstl
pop
insb
aad
imul
xchg
mov
pusha
xlat
dec
aad
or
xchg
lahf
cld
aad
dec
dec
add
addr16
or
aas
mov
fdivrs
add
rcll
add
rol
test
jmp
in
jb
mov
sar
or
pop
dec
jns
shr
and
adc
into
mov
mov
xor
gs
sub
cmp
pop
lret
cmp
test
push
aaa
jae
jecxz
xchg
pop
adc
hlt
adc
push
adc
ret
imul
notl
push
push
and
insb
lods
jb
int3
leave
rcrl
ficomps
out
andb
or
or
stc
pop
fists
iret
sub
imul
pop
clc
nop
mov
adcb
fstps
lret
aam
push
scas
xchg
rcll
jmp
dec
xchg
jle
fwait
pushf
jg
aas
icebp
lcall
insb
test
sub
sub
fs
lods
inc
adc
fsub
pop
push
out
pop
push
aad
mov
jmp
idivb
fs
faddl
jl
mov
sbb
cmp
push
pop
cmp
mov
cmpsl
daa
cmp
mov
into
or
push
mov
in
ds
std
adc
jno
loope
aaa
xchg
je
inc
stos
repz
or
je
push
cmp
mov
lds
stc
lcall
stos
icebp
cmp
cs
mov
mov
or
addr16
dec
test
and
dec
repnz
iret
aaa
sub
sub
mov
cmpsl
sub
xchg
or
jne
test
and
popa
fld
cmp
pop
rol
mov
fbld
into
sbb
adc
out
scas
ja
out
subb
lret
ret
pushf
mov
sbb
in
jge
in
mov
loope
test
loopne
push
into
in
pop
repnz
jmp
cmp
sub
mov
lcall
add
mov
xchg
or
std
cmp
jl
neg
mov
shlb
or
int3
xor
dec
fcoms
sbb
insl
fnstcw
and
push
xor
or
push
xchg
frstor
mov
fadd
inc
adc
cmp
adc
inc
xchg
xor
jns
popf
mov
xor
and
subl
mov
shll
mov
out
pop
fprem
call
aaa
push
out
lret
sub
or
cmp
add
inc
loope
xchg
test
jne
sbb
inc
jno
mov
adc
dec
sahf
shr
mov
fstp
jg
inc
xchg
jmp
rcl
rcrl
fstps
movsb
iret
adc
cmp
std
iret
and
sub
add
add
ljmp
push
iret
test
int
arpl
cmp
fisttpl
push
xchg
je
jno
out
pop
dec
jmp
push
jb
jmp
aam
imul
out
mov
test
daa
sarl
push
dec
inc
decb
test
int
jb
xchg
xchg
xchg
mov
in
clc
ret
sub
call
pop
jecxz
out
imul
mov
jmp
mov
movsb
sbb
cmp
xchg
movsb
inc
test
adc
out
sub
mov
icebp
mov
dec
cmp
shr
xchg
js
jecxz
leave
dec
int
xor
lcall
imul
cmp
and
rcrl
push
aaa
sub
cwtl
dec
test
call
pop
pusha
out
add
fnstsw
mov
shrb
dec
push
sbb
fs
dec
inc
loopne
dec
mov
jge
sar
pop
std
aaa
mov
ja
pop
push
dec
sbb
daa
push
pop
pop
int
out
test
sub
lods
jno
fldenv
sahf
pop
mov
push
sti
imul
cmpsb
fstl
inc
ljmp
out
shr
and
leave
es
jns
mov
sub
mov
fs
mov
or
fcoml
lods
cmp
sub
fstpl
mov
xchg
jno
xlat
pop
xchg
xchg
faddp
jmp
ficoms
mov
fisubs
ljmp
pop
loope
scas
push
jns
stc
mov
xchg
jecxz
xor
arpl
cmp
and
in
into
cmpsb
and
mov
sub
out
jl
jo
and
repz
push
and
sub
scas
pop
jecxz
pop
das
push
nop
scas
adc
or
sub
push
push
cmp
cmp
aaa
das
jo
dec
jns
mov
cmp
sub
lea
adc
xchg
popa
inc
cmc
out
call
loope
xchg
jmp
clc
xchg
test
and
jecxz
pop
cmpsl
cmp
idivb
jp
repz
insl
aas
lret
hlt
movsb
loopne
imul
stos
fimull
loope
test
daa
lods
lods
jecxz
fistl
pop
mov
add
scas
dec
sub
or
xor
mov
movsb
sub
inc
in
lods
rcr
lret
in
xchg
jge
pop
push
loopne
jb
push
xchg
dec
sbb
mov
mov
jnp
movsb
subb
or
test
pop
add
pop
ljmp
mov
es
sub
jecxz
mov
mov
or
sub
ljmp
pushf
aad
push
cmc
mov
sbb
push
push
pop
xor
lods
push
xchg
imul
inc
mov
xchg
ljmp
aad
aaa
or
cmp
jmp
jne
adc
add
adc
sub
js
notb
stos
lock
int
iret
nop
mov
push
xchg
clts
insl
xor
and
sub
cmc
movsb
out
sbb
xchg
jbe
lahf
iret
xor
cld
fildll
xchg
dec
xchg
or
dec
lahf
fnstenv
cwtl
iret
notl
xchg
add
mov
adc
lods
into
pusha
dec
cmp
or
push
mov
pop
nop
and
sub
mov
out
and
insl
mov
xchg
sub
xchg
and
xchg
adc
and
movsb
push
es
movsb
sub
sarb
hlt
cmpsl
cmc
inc
and
cld
push
ds
sbb
jp
pop
lods
xchg
loopne
pop
repz
ljmp
and
and
pop
shll
cmp
popa
sbb
xchg
pushf
insl
xchg
pop
jmp
pop
inc
dec
rcr
mov
mov
cmp
test
js
icebp
lods
addb
xchg
sti
cmp
mov
sub
cltd
ljmp
stos
or
cmp
in
mov
xchg
mov
bnd
int3
out
stc
notb
mov
mov
cld
xchg
pop
fucomi
xchg
sbb
push
and
cmp
mov
lahf
mov
roll
outsl
xchg
adc
cmp
rorl
push
mov
jmp
mov
stos
sti
jno
pusha
mov
test
in
dec
xchg
sbb
jno
scas
lods
nop
in
xchg
or
pop
pop
jo
orb
add
and
jmp
insl
movsb
pop
hlt
mov
and
sub
rorl
pop
sbb
and
inc
xor
adc
xchg
sub
jecxz
into
insb
mov
sub
mov
xlat
dec
popf
mov
jecxz
cmpsb
jp
push
and
cmpsb
mov
int3
outsl
rorl
mov
adc
dec
rol
xchg
enter
sahf
ret
popf
sub
adc
pop
push
fnstenv
into
cmp
and
loopne
int
lret
push
iret
adc
jbe
in
pop
pop
push
cltd
mov
and
or
data16
insl
out
dec
push
mov
and
jl
popa
mov
call
aaa
mov
mov
js
push
loopne
jl
mov
xor
fwait
lret
int3
push
jge
cmp
aam
jle
movsb
in
in
xlat
jmp
addl
out
cmp
sub
mulb
xchg
xchg
cmp
xchg
jl
cmp
jecxz
cld
jb
inc
lret
pop
and
fidivs
mov
inc
divb
js
icebp
outsb
jp
shll
jno
adc
shrb
or
mov
pop
mov
rorb
in
mov
shl
ja
movsl
insl
fmull
sub
fistpl
fs
movsb
fsubp
fsub
add
dec
push
push
fwait
pop
push
sub
les
sub
and
sbbl
adc
fstsw
mov
shl
xorl
inc
xor
and
shrb
iret
xor
das
fisubrs
fstpl
adc
imul
and
jno
ret
pop
jecxz
adc
jo
ljmp
mov
gs
cmp
pop
lods
lods
jl
xchg
inc
in
jmp
jmp
sub
mov
fsubs
xchg
xchg
push
adc
adc
adc
mov
out
daa
bound
clc
ljmp
and
pop
push
jmp
inc
iret
stos
xor
paddb
arpl
adc
js
repz
sti
inc
or
stos
sbb
dec
sbb
inc
add
lods
rcll
es
push
jmp
int
xchg
cmpsl
pop
les
andb
pop
js
pusha
mov
data16
in
mov
pop
jmp
adc
jmp
fisttpl
scas
jns
dec
enter
lahf
pop
mov
adc
incb
and
test
sbb
or
daa
fisubrs
cld
in
cld
cld
xchg
bswap
fcmovb
out
insb
call
and
push
movsl
fmul
shll
out
jmp
in
mov
and
lock
stc
les
test
test
mov
sbb
pop
fndisi(8087
mov
pop
sbbb
sub
das
fisubrs
stc
sti
cltd
mov
movsl
out
mov
mov
sub
push
pop
lea
stos
ljmp
adc
insb
jbe
daa
push
mov
xor
sbb
and
cmp
aad
rcl
cmp
iret
ret
mov
aaa
xchg
lods
cltd
and
aad
rcl
in
cld
les
cmp
pusha
pop
mov
mov
dec
xchg
cmp
ja
lods
out
sub
cld
add
push
xchg
jbe
divl
push
aaa
adc
jbe
es
and
sbbl
lret
arpl
inc
push
cmp
cs
dec
jmp
jae
in
loope
pop
pusha
lcall
jmp
out
iret
jle
pop
int3
push
in
in
add
call
jecxz
cmc
loope
iret
fldenv
and
lock
pop
ljmp
leave
xchg
push
inc
xchg
jecxz
loopne
js
sub
adc
test
jo
or
cs
inc
fisubrl
adc
mov
out
shrl
cmpsb
mov
push
mov
mov
out
ret
mov
mov
pop
js
lods
dec
cmpsb
leave
jle
or
xchg
lock
jg
shr
dec
xor
fsts
test
imull
fdivrs
jmp
xlat
frstor
or
out
aad
or
insl
mov
repnz
mov
inc
loopne
mov
in
fsubs
adc
adc
fsub
in
orl
mov
aam
inc
push
xchg
cmpsl
int3
imul
rcl
sub
sbb
push
and
daa
pushf
mov
into
xor
fsubrs
sti
cmpsl
adc
push
enter
adc
sub
call
movsb
mov
jecxz
mov
in
adcl
out
movsb
mov
popa
and
dec
das
movsb
cltd
push
push
sub
cmpsb
inc
xchg
out
rclb
jle
pop
fdivp
out
dec
pop
sar
xor
jecxz
xor
shl
jp
lods
push
rorb
inc
insl
cld
sub
shll
loope
sbb
into
mov
rolb
cli
pop
and
popa
imul
jl
pop
cwtl
ja
add
pop
pop
mov
pop
repz
repnz
test
push
stos
sub
or
loope
mov
jecxz
loope
pop
xchg
push
outsb
inc
inc
lahf
pop
adc
jl
insb
pop
ljmp
mov
xchg
pop
pop
push
cmpsb
pushf
aaa
mov
jl
pop
pop
aam
and
mov
push
jae
jno
and
inc
pushl
stos
jb
and
xchg
mov
stos
pop
into
fidivs
std
sbb
pop
xor
ljmp
jbe
fldl
sbb
dec
sub
sbb
push
inc
adc
clc
in
shll
or
pusha
ds
ret
out
mov
aad
test
sar
jno
data16
iret
loopne
mov
leave
ret
jecxz
fadd
cltd
rcl
rcr
fxam
cmpsb
clc
xor
push
popw
sbbb
in
flds
insb
fdivr
in
adcl
and
rcrb
jmp
arpl
cmpl
pop
in
in
int
test
test
leave
and
cmp
dec
push
outsl
jnp
stos
inc
mov
pop
test
pushl
ror
mov
pop
aaa
adc
incb
sbb
hlt
pushf
xlat
xor
ljmp
xchg
fisttpll
cld
cs
inc
jp
in
imul
push
fldl
push
notb
add
add
popf
loope
cld
jbe
and
jmp
in
add
xor
add
mov
mov
int
push
outsl
and
ret
fstps
dec
cmp
arpl
mov
notb
cmp
cmp
rolb
ret
mov
push
fisubrs
in
sub
adc
mov
sub
aad
lock
aaa
sub
mov
test
dec
insb
ret
test
int
mov
in
push
int3
xchg
roll
scas
mov
pop
iret
mov
adc
popa
sub
add
stc
mov
mov
inc
xor
mov
test
inc
push
push
mov
call
js
ret
mov
mov
jno
addr16
mov
movsb
push
xrelease
cmp
dec
loope
dec
pop
push
ficomps
mov
push
out
rorb
jl
shrl
xchg
sti
fiadds
inc
jp
and
stos
stc
cli
inc
pop
adc
fs
mov
fwait
lock
lds
movsb
ret
mov
or
jg
in
ror
ret
inc
aam
or
mov
inc
dec
loope
cmp
jnp
lahf
mov
xchg
popf
cmp
aaa
jae
out
in
popa
fs
popf
mov
in
leave
es
mov
lret
jb
push
pop
pop
mov
cmp
cmp
sbb
mov
adc
lret
ret
cli
js
add
pop
sub
mov
xlat
pop
icebp
ljmp
cmp
and
fcmovnbe
cltd
push
cmpsb
es
jae
cli
dec
js
xchg
pushf
lods
push
insb
js
xorb
cld
sbb
les
mov
fs
jmp
fisubs
adc
scas
pop
ds
xchg
loopne
dec
xlat
cmpsl
ficomps
call
and
scas
cmp
pop
rol
aas
sub
gs
in
in
add
call
les
leave
pmulhuw
jge
shr
jg
out
mov
popa
push
dec
pop
test
adc
nop
cmc
jb
negb
jae
push
lret
lea
insl
xor
sbb
cmpb
neg
aad
mov
movsb
mov
stos
xchg
sub
rcll
sub
push
pop
out
jp
or
ljmp
in
sahf
jnp
into
jne
push
inc
cli
js
les
lret
notb
js
neg
clc
xchg
shlb
cmp
add
lahf
sub
jmp
xor
cmpsb
or
test
mov
je
filds
out
push
inc
fidivs
ljmp
mov
hlt
xlat
fldl
sbb
cmp
sub
insb
sti
pop
xchg
or
dec
aaa
xchg
aam
pop
pop
pop
insl
push
fs
popa
ljmp
or
rcrl
push
and
dec
mov
adc
mov
sbb
movsb
icebp
das
ja
pop
call
test
aam
or
push
into
push
xchg
xchg
dec
ljmp
xchg
cmc
aam
stos
sub
and
xchg
jae
fidivrl
movsb
jecxz
add
ret
jns
cltd
push
pop
inc
dec
out
dec
push
in
push
mov
int
xor
loope
les
cmp
inc
push
movsb
mov
insb
shll
movsb
mov
rcll
pop
mov
fstpl
out
inc
xchg
pop
cmp
xorl
jbe
fsub
repz
jecxz
mov
mov
and
iret
xor
mov
repnz
push
mov
js
rcrl
hlt
sub
lahf
sub
mov
add
jne
mov
cli
enter
or
scas
shr
icebp
test
mov
icebp
inc
in
js
bnd
cmc
push
bound
and
and
jge
mov
sub
out
cmp
xchg
sub
jno
fs
push
pusha
pop
nop
fidivl
or
or
loop
push
scas
into
jns
int3
test
adc
pop
mov
arpl
or
adc
xchg
mov
add
loope
sbbl
sub
repnz
loope
mov
std
dec
int
ja
mov
sub
push
leave
pusha
lcall
mov
cmp
push
jecxz
jmp
stc
pop
ds
push
xor
iret
push
ss
xchg
mov
xchg
mov
push
fisttps
pop
xchg
pusha
repz
rcl
loopne
in
jmp
int3
sub
fs
mov
mov
stos
cwtl
pop
rcrl
divl
out
pushw
lea
aaa
sbb
dec
add
hlt
mov
bound
jl
out
orl
cmp
jno
xchg
stos
cs
inc
mov
adc
mov
xor
mov
mov
dec
aaa
adc
cmp
and
mov
pop
add
ljmp
popa
cmc
scas
call
jge
fs
add
lret
and
cmpsl
jmp
je
pop
mov
sub
mov
lods
les
loope
xor
inc
mov
outsl
fcompl
shlb
mov
ret
aaa
out
inc
stc
andl
or
outsb
adc
dec
jecxz
repnz
jl
cmp
into
mov
enter
enter
xchg
add
movsl
out
sub
cmp
je
mov
push
incl
jns
mov
push
inc
pop
dec
enter
inc
mov
pushf
dec
shld
sub
rep
sub
bound
cld
adc
hlt
and
mov
mov
push
cmp
or
push
push
daa
push
je
dec
pop
sub
icebp
xchg
adc
xchg
dec
inc
rcrl
mov
adc
xchg
mov
push
insb
rcrl
mov
cmpsb
sub
mov
mov
mov
mov
or
rcrb
xchg
aas
mov
fucomi
sti
sarl
popf
nop
cld
sub
outsb
aad
xor
mov
icebp
sti
cmp
dec
aas
push
fwait
call
test
dec
xchg
pop
into
xchg
add
scas
mov
adc
mov
xor
icebp
scas
jae
mov
clc
into
insl
aam
and
das
sbb
or
negl
add
mov
int
ds
jns
cmpsb
loop
push
or
imul
xlat
adc
xchg
push
test
adc
enter
mov
divb
out
push
ljmp
push
ja
sub
pusha
bound
mov
pop
push
stos
adc
push
addl
dec
loope
fmulp
push
or
scas
push
and
or
dec
bound
dec
into
sbb
pop
fptan
push
sbb
in
dec
and
mov
pushf
enter
jne
test
lock
nop
sbb
ret
push
pop
or
gs
push
mov
faddl
jae
rcll
mov
imul
aad
lods
sub
xchg
xchg
pop
insb
inc
repz
xor
jo
mov
iret
jb
in
fiaddl
pop
jle
bound
andl
icebp
std
sub
cmp
loopne
imul
filds
inc
inc
repz
fistpll
stos
mov
cmp
or
xlat
lret
inc
ret
test
jmp
mov
jmp
and
lahf
pop
cld
test
in
lods
test
nop
mov
movsl
std
dec
pop
imul
and
sbb
bound
cld
jl
mov
imul
fstpt
jle
ret
cmp
and
push
xor
mov
inc
fnsave
stc
loope
mov
mov
push
dec
popa
int
shrl
scas
xor
rorb
mov
push
xchg
adc
dec
sub
push
lret
inc
notl
jmp
arpl
xchg
cmp
aad
call
cmpsb
jge
xor
adc
lock
adc
or
sbb
sbb
mov
sbb
sbb
icebp
ret
in
hlt
sub
sbb
std
test
inc
adc
iret
adc
movsb
int
cld
mov
popf
fistpll
fs
shll
pop
out
xchg
sarl
mov
out
adc
xchg
sbb
movsb
jno
pop
sub
xchg
mov
push
adc
cld
sub
fmuls
sub
push
adc
nop
push
mov
shl
js
repnz
mov
stos
xchg
mul
xor
sub
jmp
cmp
enter
sub
fisttps
loope
test
jp
xchg
xchg
nop
pusha
cmc
sti
mov
or
pmaxub
into
call
pop
in
ret
outsb
int
fidivs
mov
lock
mov
ficompl
repnz
adc
pop
loope
hlt
sbb
adc
sub
mov
imulb
mov
lahf
repnz
mov
jecxz
in
sub
pop
pop
pop
xchg
mov
xchg
jle
stos
stos
cld
adc
stos
sbb
push
push
sti
adcl
cmpsb
cmp
push
mov
and
jno
fldt
jb
cmp
icebp
mov
jo
mov
xchg
test
inc
cmp
dec
loop
push
or
adc
push
outsb
cltd
out
cli
mov
inc
shr
cmp
dec
divb
stos
fbstp
or
icebp
or
pushf
imul
sarl
shlb
sti
insl
jo
out
cmp
cmc
ss
adc
and
sub
call
cli
sbbb
in
lahf
push
in
fmuls
inc
xor
and
xchg
stc
mov
out
add
int
dec
test
sbb
roll
pop
lods
les
push
aaa
out
movsl
and
mov
mov
les
rcr
into
mov
cmp
les
xchg
je
imull
xchg
inc
daa
xchg
stos
sub
jbe
mov
in
mov
pop
out
adc
pop
test
movsb
pop
les
cwtl
and
sbb
xchg
cmp
fcomi
aam
dec
push
mov
lahf
ret
xor
push
cli
or
shlb
push
std
pop
add
or
stos
fld
xrelease
xchg
or
fiadds
fsubrl
insb
dec
aaa
adc
dec
test
aad
imul
xchg
xchg
out
adc
out
subb
fldl
ljmp
xlat
inc
dec
aam
jno
loope
dec
in
adc
lea
popa
ficoms
divl
lcall
dec
pop
xchg
push
insb
sub
add
stos
inc
adc
cmc
std
sbb
sbb
dec
cmp
lahf
nop
cs
dec
dec
mov
leave
ja
jp
test
xor
sub
adc
jecxz
stos
sbb
int
adc
in
xlat
push
push
lcall
imul
push
push
pop
pop
arpl
ljmp
fs
int
test
jbe
rcr
lds
jnp
pop
aam
lret
sub
sahf
mov
fisttps
and
shlb
dec
xor
jo
jne
rcrb
std
mov
nop
loopne,pt
enter
and
pop
roll
ljmp
mov
insl
arpl
stc
pop
cld
inc
enter
and
loope
push
inc
mov
pop
push
leave
sub
push
xor
leave
lahf
xchg
mov
jae
loope
rorl
loopne
ficompl
fwait
cmp
or
scas
add
pop
and
cli
subl
js
test
sti
dec
es
inc
ret
loope
sub
mov
int3
das
out
lods
cmpsl
imul
in
xchg
sarl
out
push
and
loopne
xlat
fsubrp
sub
jle
push
xchg
xorb
cmp
pop
dec
leave
push
push
test
and
and
test
push
mov
outsb
push
lds
shl
mov
cs
or
test
lods
adc
jge
push
dec
shll
mov
adc
out
pop
mov
into
out
dec
xcrypt-cbc
cmpsl
nop
test
aam
mov
xchg
jmp
jmp
inc
roll
mov
fnsave
aad
mov
js
call
mov
iret
into
pop
dec
cmpb
inc
mov
popa
jno
push
aam
iret
sub
loopne
clc
into
test
fdivrp
pop
pushf
cmp
inc
and
cmc
hlt
mov
mov
adc
jno
es
xor
cmp
lret
cmp
xchg
into
sbb
fsubp
add
std
lods
ljmp
in
cld
pop
movsb
xchg
and
or
and
call
mov
adcl
push
jecxz
stc
lods
mov
ret
cmp
cmpsb
rolb
enter
inc
push
mov
jle
into
rcr
pop
ljmp
stc
or
xlat
out
icebp
imul
gs
cmc
cmp
sbb
pop
xlat
loopne
subl
shrl
xor
aad
cld
xlat
jp
mov
notl
sub
mov
jecxz
in
lds
out
jmp
leave
shl
cld
stos
and
fwait
and
xchg
cmp
xchg
test
loope
popa
jb
xorb
stos
jb
cmp
and
je
test
jo,pt
add
repz
adc
push
xchg
test
dec
adc
mov
inc
jmp
lret
add
xchg
in
in
aad
dec
rclb
mov
pop
xchg
jmp
loopne
dec
cmpsb
push
jb
stos
int
pop
cld
fists
movsb
insb
jmp
jp
mov
insb
xchg
fcoml
and
lret
add
mov
inc
push
fst
rcrb
out
in
jmp
sti
int
xlat
inc
dec
shrb
sub
sahf
dec
inc
iret
fisttpll
sbb
arpl
cltd
aad
push
push
lods
rol
dec
add
and
jmp
mov
mov
test
mov
and
lds
jnp
adc
push
mov
push
cmp
cltd
and
adc
stos
adc
test
aaa
stos
rcrl
pop
adc
idiv
cmp
ficompl
dec
mov
loop
movsb
aam
xchg
arpl
sub
std
mov
mulb
xchg
xor
mov
clc
sub
push
lea
adc
push
loopne
push
cld
in
bnd
add
cs
dec
mov
push
cmc
daa
stos
lret
sahf
ror
aad
in
pop
in
inc
in
lds
sar
pop
les
cmp
xorl
adc
cltd
sbb
mov
jbe
and
pop
ret
sbb
jno
push
lock
push
popf
enter
cld
xchg
fiaddl
pusha
xor
push
inc
cmp
lcall
xor
dec
rcll
mov
xchg
mov
fimull
call
call
clc
out
jmp
scas
cmp
jbe
in
iret
stos
data16
neg
addl
outsb
sub
addr16
aam
stos
mov
loope
repz
adc
loope
cld
cmp
fs
repz
fisttps
in
shl
push
pop
adc
push
fnstenv
in
fimuls
sti
data16
movsb
rcr
sahf
in
mov
dec
int
pop
add
lret
stc
lahf
sbb
sti
jecxz
lcall
xlat
hlt
jecxz
cmp
fidivs
inc
in
sti
sahf
ret
ljmp
xor
push
fmulp
shl
out
aaa
mov
out
jle
sahf
in
mov
rorb
push
and
push
clc
mov
add
xchg
fcom
adc
push
fistl
push
pop
dec
daa
cmp
in
movsb
and
or
dec
stos
fs
sub
test
loope
pop
xchg
dec
xchg
mov
push
sahf
jecxz
aaa
sbb
sbb
and
cmp
scas
in
or
ret
rcrl
pop
mov
mov
fs
xor
in
pop
mov
insb
jae
push
test
pushf
sbb
jp
cltd
aaa
aas
scas
or
aas
xchg
fdivrs
ss
and
aad
inc
xor
push
mov
and
aad
push
pop
mov
mov
imul
jb
clc
dec
enter
xchg
aas
and
pusha
aaa
xor
jp
in
mull
push
lahf
subl
xlat
push
ljmp
push
enter
out
or
xchg
into
movsb
ja
das
pop
nop
adc
daa
clc
dec
or
test
idivl
jne
xchg
cltd
and
fisttpl
movsb
pop
push
into
sarl
jno
ftst
fst
dec
repz
mov
dec
push
in
fcompl
lret
popa
push
sbb
and
pushf
push
jb
roll
rorl
imul
mov
pop
jl
and
jecxz
rorl
aas
out
jp
into
mov
sti
mov
adc
push
push
jmp
sti
add
push
hlt
xchg
jg
sbb
fdivrp
popf
jmp
push
and
and
sub
arpl
mov
mov
outsl
les
mov
push
jecxz
mov
mov
in
jmp
outsl
mov
and
fnstenv
add
mov
jmp
std
repz
out
aas
xlat
jb
loopne
pop
pop
aad
ret
aaa
jmp
jmp
xlat
and
mov
push
mov
sti
push
jmp
jmp
dec
xlat
sub
pusha
push
cld
xchg
popa
in
test
movsb
push
lcall
fcomip
movsb
loope
push
add
xlat
fsub
xchg
add
fst
mov
mov
cld
stos
shlb
shll
sbb
cmp
aam
xchg
sbb
ljmp
lret
in
gs
mov
movsl
hlt
xchg
es
xchg
jmp
stos
in
xor
fildll
aam
push
sahf
fistps
ficomps
call
and
xlat
jmp
jecxz
mov
mov
cli
mov
sub
lods
and
notb
mov
cli
mov
rcl
jmp
jp
insl
cmp
dec
imull
stc
movsb
daa
inc
imul
insl
adc
and
fadds
test
lret
stc
in
adc
repnz
icebp
xor
mov
out
cwtl
imul
fsub
shrb
inc
lods
arpl
push
in
shl
add
aas
hlt
test
pop
scas
xorl
ret
movd
sahf
mov
test
out
call
int3
inc
imul
daa
cld
bt
jp
aad
aaa
push
cmc
pop
iret
adc
jmp
dec
popf
popf
fsub
push
pop
ja
pop
out
in
sbb
outsl
mov
insb
dec
les
stos
and
pandn
sub
xchg
bound
andb
fcomi
dec
cltd
aam
ljmp
xchg
ffree
fwait
popa
add
pop
mov
jmp
mov
clc
ljmp
push
stos
js
mov
push
sub
jmp
imul
insb
hlt
insb
sub
stos
jmp
push
stos
leave
ja
mov
sbb
adc
cmpsb
and
sbb
sub
in
xchg
mov
popf
shll
test
stos
push
icebp
sub
out
cmpsl
or
aad
ret
test
or
pop
dec
fwait
pop
xchg
lcall
subl
push
xor
je
add
xchg
sbb
mov
mov
lock
xchg
test
scas
in
add
popa
push
adc
test
int3
arpl
fsin
mov
arpl
pushf
xchg
jecxz
fisubs
imulb
cltd
cmc
ljmp
inc
sub
in
in
jmp
aaa
mov
sub
cmpsb
in
shrb
xchg
shrl
push
aaa
inc
and
repnz
dec
sbb
xchg
jecxz
hlt
and
push
mov
sub
pop
lcall
or
fistps
and
mov
adc
jecxz
jle
pop
aam
std
add
pop
imul
dec
stc
arpl
test
aam
push
cmc
or
jbe
pop
fld
mov
mov
fadds
fldt
mov
pop
push
mov
dec
mov
test
lock
pusha
jo
rcll
loope
loopne
xchg
mov
jae
sbb
mov
insb
in
jo
and
lock
insb
cli
gs
mov
aas
sbb
jp
testl
jmp
fstps
xchg
pop
imul
xchg
inc
rcrl
mov
icebp
lret
fadd
cmc
adc
mov
push
in
mov
dec
mov
pop
in
jecxz
popa
cmpps
adc
test
cmp
aaa
ret
fisubs
into
cmp
rorb
push
in
mov
inc
call
pop
sub
sbb
pop
mov
mov
push
xchg
popa
movsb
leave
mov
inc
pop
push
sbb
popf
fistps
dec
pop
and
xchg
inc
mov
loopne
pushf
pop
repz
push
mov
push
pop
pop
nop
jl
mov
cld
test
add
push
pop
sub
lods
mov
fidivrs
stos
scas
mov
les
add
mov
mov
insb
or
dec
lds
xchg
clc
call
out
rolb
insb
test
stos
popf
add
dec
mov
repnz
loopne
int3
in
sbb
push
mov
cs
fs
mov
je
sub
lea
pop
push
mov
push
cmp
mov
out
adc
sub
cltd
fstpl
or
mov
ret
inc
mov
push
jno
jecxz
or
cmpsl
sahf
imull
sbb
dec
in
call
ret
xchg
aam
loope
mov
sbb
adc
dec
xor
sub
nop
aad
lea
push
orl
adc
cwtl
jne
xor
push
addl
lea
pop
popa
pushf
push
push
cld
inc
xchg
roll
in
adc
adc
pop
sub
add
and
mov
bound
jg
pop
jp
sahf
and
lcall
pop
movl
inc
push
pop
std
mov
push
test
jle
xlat
jle
inc
insl
aam
and
push
mov
stos
adc
xchg
sbb
jl
mov
push
aas
xchg
push
data16
pop
pop
inc
xchg
sbb
hlt
cltd
in
xor
in
mov
jle
pop
out
push
mov
fdivr
push
js
pop
pop
repz
fcomip
into
call
repz
inc
mov
and
cmp
in
out
push
sbb
in
and
loopne
inc
rcll
mov
sbb
incl
sbb
mov
popf
xlat
aad
out
mov
pop
xchg
sahf
clc
push
pop
ret
inc
push
ds
lods
jno
pop
out
xor
adc
mov
mov
out
mov
movsl
xchg
cmp
mov
and
pcmpeqb
ret
push
mov
push
in
inc
push
xchg
and
dec
mov
inc
jl
xchg
push
cmc
cld
adc
enter
mov
hlt
shl
sub
mov
popa
pop
sahf
test
test
mov
jmp
push
arpl
fstp
rcl
adc
cmp
ffree
gs
out
ljmp
xchg
push
mov
hlt
arpl
jle
stc
cmp
jecxz
inc
xchg
scas
pop
les
push
push
in
in
shll
stos
stos
cmp
out
lods
sbb
repz
mov
gs
mov
push
fisubs
icebp
loope
xchg
cli
inc
clc
dec
xchg
and
add
sar
push
and
loope
es
inc
jo
in
es
jecxz
stos
data16
bound
in
iret
or
sub
jge
bound
jb
xlat
adc
sbb
pop
enter
and
sbb
mov
pop
fidivrs
sbb
iret
cs
and
dec
in
inc
fcmovnb
adc
add
push
inc
xchg
shrl
xchg
jmp
jecxz
in
lcall
jb
cltd
in
stos
lock
or
imul
cmpb
fstl
addr16
arpl
jae
mov
inc
mov
mov
adc
pop
sub
mov
filds
and
gs
loope
fs
frstor
fs
xor
pop
lcall
xchg
push
int3
out
aad
fidivs
cmp
stos
jno
sbb
mov
lret
cmp
pop
inc
jge
movsb
ljmp
aaa
sahf
data16
lea
cmpl
mov
incb
lods
push
mov
push
adcl
cmpb
enter
adc
sbb
aaa
cmp
fxam
adc
mov
stc
and
mov
mov
mov
jne
hlt
sbb
pushf
pusha
pop
cmc
sahf
shll
mov
mov
daa
lods
hlt
addr16
mov
pop
xchg
aam
lahf
incb
add
lea
cmpsl
daa
fwait
cmp
push
mov
out
scas
pop
ror
out
out
lret
adc
push
pop
sub
lahf
rcl
daa
sarl
idivb
jge
pop
jb
and
mov
jne
pop
fdivrl
mov
adc
in
sahf
mov
cld
mov
fldenv
pop
mov
mov
jo
stos
xor
mov
psllw
xorb
test
mov
in
pop
xchg
cmp
mov
jae
and
out
dec
mov
loopne
lret
loope
sbb
push
in
ret
xchg
fs
mov
iret
in
lock
lods
data16
aaa
pop
std
sub
ret
adc
jbe
xchg
cltd
es
dec
cmpsb
push
daa
cmp
shrl
push
addr16
ror
inc
xchg
cmp
call
xor
lret
les
push
shlb
fnsave
push
leave
lds
scas
sub
sub
jmp
cld
or
imul
pop
sub
pop
sub
in
cmc
aam
sahf
fsubrs
testl
in
sbb
ljmp
in
inc
push
mov
push
in
cmp
mov
outsb
ljmp
xchg
scas
mov
mull
imul
movlps
ja
push
stos
xor
or
xor
fiadds
loope
cld
or
hlt
loope
push
add
out
jecxz
in
out
push
mov
roll
enter
cmc
and
out
repnz
popa
push
or
and
jae
push
ss
out
ret
xchg
orl
jne
mov
sbb
in
or
mov
imul
pop
popa
and
fsubl
push
js
loope
push
flds
call
push
adc
stos
daa
mov
aam
pop
negb
nop
into
mov
jbe
pandn
in
jmp
ret
xchg
idivb
and
nop
les
shrb
mov
sti
cld
xchg
push
pop
pop
and
aad
sahf
fdivp
fstl
mov
arpl
in
fs
clc
mov
shr
popa
int3
filds
lods
mov
rcrl
cltd
sti
fnsave
popa
xor
sub
jle
lods
xchg
imull
imul
pusha
fidivrl
ds
dec
sbb
jmp
mov
adc
mov
and
push
fidivl
rcr
call
pushf
push
jb
push
xchg
adc
addr16
shrb
lret
mov
cmc
and
mov
pop
push
jb
test
js
movsb
add
xor
rol
fdivl
mov
out
mov
sub
mov
adc
aaa
into
or
sbb
nop
loope
pop
xchg
adc
mov
in
repz
jns
xlat
lods
add
stc
ds
aas
pop
mov
call
cli
test
test
bound
addr16
aam
pusha
loop
in
mov
andl
jnp
out
in
popa
je
add
movsb
xor
jo
dec
shl
cltd
xchg
mulb
and
dec
and
pop
cmp
jmp
stos
cmp
inc
or
aaa
jge
rcl
and
loope
clc
data16
bound
sahf
bound
lock
mov
xchg
movsb
fwait
xor
adc
xchg
mov
movsb
stos
push
jle
pop
sub
andl
lret
les
mov
lods
cmp
lahf
fistpl
clc
cld
call
in
imul
jp
push
mov
mov
loope
daa
push
xchg
hlt
sub
sub
hlt
push
mov
nop
aam
jne
pop
sub
adc
cmp
jmp
cmpsl
dec
cmp
mov
bound
data16
int
push
fcomps
xchg
sub
and
movsb
add
ja
push
inc
pushf
xor
in
mov
jmp
pop
inc
and
out
rcll
sbb
inc
cltd
aam
pop
jbe
push
fldenv
push
adc
xor
fidivrs
insb
pop
mov
scas
inc
xchg
mov
cmp
jmp
jge
mov
add
in
or
adc
cmp
iret
shr
inc
in
out
test
jns
fcompl
ds
dec
icebp
pop
data16
push
sub
xchg
sub
pushf
pop
pop
sbbb
std
push
lods
sbb
or
insb
push
add
test
add
fs
xlat
rcrl
in
in
add
push
cmp
adc
in
dec
mov
aas
shrb
inc
mov
arpl
hlt
xchg
fistpl
jbe
sub
in
clc
sahf
iret
fsubrl
push
or
lods
push
mov
mov
inc
test
cwtl
dec
mov
pop
jmp
jecxz
ja
pop
daa
add
and
jl
stos
jmp
repnz
mov
pop
sahf
adc
aaa
jmp
rclb
shll
ljmp
jecxz
loopne
push
call
pop
add
and
push
out
mov
fs
cmpsb
add
mov
out
sub
lods
mov
or
sbb
pop
sub
stc
xchg
popf
mov
add
and
adc
jnp
faddl
jl
leave
fsubs
shlb
ret
addb
fdivrs
sub
enter
jbe
ljmp
in
mov
push
adc
mov
fldenv
push
cwtl
xchg
lcall
pop
dec
ljmp
faddl
and
ljmp
stos
inc
mov
mov
mov
mov
mov
rclb
jmp
or
push
aaa
and
enter
xchg
jge
inc
jbe
fs
testb
fcompl
mov
stos
fstl
ja
fisubs
faddp
adc
in
xchg
and
adc
push
and
sub
das
sbb
or
mull
pop
arpl
push
test
xor
jo
outsl
leave
lods
push
subl
dec
or
jmp
frstor
mov
pop
push
out
pop
daa
test
sbb
stc
jmpw
xchg
fsubrp
jle
orb
add
push
mov
loopne
enter
push
int
insl
insl
xor
jno
test
stc
les
ds
stos
or
inc
jnp
cld
jo
adcl
loop
pop
sahf
in
adcl
cld
mov
inc
mov
mov
and
in
jo
lods
xor
ficomps
lods
mov
sub
jmp
rcr
nop
adc
imul
les
adc
jb
fwait
jl
js
add
lods
out
xor
sub
cmpsb
sub
fs
push
or
fs
test
ret
mov
push
aaa
idiv
pop
and
in
pop
lret
addb
xlat
shlb
pop
sub
rcrb
ret
out
sub
fcoml
or
xchg
clc
jl
loopne
lret
js
into
xchg
test
lods
popf
fs
mov
inc
dec
cli
add
insb
in
leave
mov
movsb
sub
test
sar
scas
sbbb
cmp
jo
mov
adc
mov
stos
sub
into
call
mov
cld
fcoml
push
dec
les
std
fsubrl
ljmp
mov
push
cs
fsubp
in
out
add
cld
fsubr
push
adc
adc
stos
mov
jne
and
cltd
les
mov
mov
inc
or
jb
push
test
mov
mov
out
out
pop
mov
pop
imul
push
cmp
pop
sub
cmp
sub
sbb
ficoms
movsb
rolb
xchg
fs
inc
cli
lcall
ficoms
fadds
sub
aad
dec
outsb
lret
mov
sub
cli
imul
dec
mov
test
sarb
loopne
xor
push
adc
mov
and
in
pop
jae
popa
out
ret
cmc
in
aad
lods
cmp
orl
mov
sbb
clc
sti
mov
imul
leave
jmp
push
repz
data16
push
popa
outsb
jno
and
fisubrl
sti
pop
adc
notb
xor
inc
fidivrl
sub
roll
xchg
ret
sbb
push
negl
cs
mov
fisttpl
lret
test
xchg
mov
cmp
mov
inc
push
push
dec
fiadds
std
iret
sahf
aaa
jge
cli
push
jnp
ret
stos
test
dec
stos
inc
xchg
insl
popf
shll
dec
push
iret
pop
sub
push
aad
ljmp
loopne
iret
push
insl
pop
jmp
add
sub
inc
jecxz
sahf
ljmp
jecxz
jg
dec
mov
hlt
fisubrs
fdivp
sub
fcmovne
jmp
inc
stos
into
pop
aas
shl
loope
xchg
jmp
adc
aaa
es
sub
lods
js
pop
cli
mov
cmp
lret
mov
in
and
pop
sbb
xor
sahf
lret
and
push
xor
stc
add
data16
add
jb
pop
ficoml
cmp
xor
xchg
in
in
add
jle
je
jl
loop
loope
push
pop
push
out
add
push
js
adc
push
in
or
iret
out
aas
cltd
mov
cmp
jge
push
movsb
out
loop
sbb
cltd
lcall
inc
push
aam
push
xchg
arpl
pop
xchg
push
jae
dec
xchg
aam
pusha
push
xchg
in
mov
mov
pop
xor
int
arpl
adc
imul
xor
je
loopne
and
sbb
push
push
push
push
inc
iret
inc
fisubrs
aaa
mov
loopne
jecxz
sbb
in
adc
fnstsw
fmuls
xchg
in
sahf
or
jge
fcoms
adc
jb
sub
sbb
mov
call
add
into
jg
xor
es
lret
pushf
popf
insb
out
mov
xchg
arpl
shrl
pop
mov
imul
out
notb
mov
int
in
mov
in
fldenv
pop
and
push
push
cmp
mov
mov
push
lock
fildll
add
std
push
pop
test
sahf
fldcw
xor
pop
lds
imul
in
inc
int3
cmpsl
in
std
out
out
loope
rcl
in
inc
adc
stos
fcmovnu
cwtl
insb
jmp
outsl
push
sbb
jl
fidivs
push
pushf
repnz
cltd
iret
in
sub
ljmp
jecxz
add
cs
jbe
push
xchg
pushf
in
fwait
ret
push
inc
test
push
aam
inc
mov
cld
in
xor
adc
jmp
xor
stos
cmp
aaa
into
int
adc
pop
push
rcrb
lods
inc
mov
adc
jge
loope
in
test
jae
jle
inc
int3
mov
cmp
push
sub
dec
adc
iret
lcall
arpl
int
or
mov
xchg
das
sbb
stos
lods
xor
loope
push
flds
cmp
mov
ret
dec
shrl
into
cmp
add
fldt
sahf
mov
or
out
adc
mov
insb
inc
lods
jp
cmc
xchg
and
cli
push
sarb
fimuls
inc
pop
jno
stos
lock
popf
sbb
mov
mov
push
loopne
inc
in
mov
mov
cmpsb
clc
or
sub
add
roll
jmp
not
mov
mov
push
xorb
shl
aam
adc
and
test
out
in
shl
add
arpl
fs
pusha
or
test
fisttpll
jbe
sub
jmp
mov
insb
or
mov
clc
mov
stc
pushl
js
test
jmp
out
xchg
mov
sub
aas
jmp
js
aaa
js
test
popf
and
in
scas
scas
pop
stos
imul
xor
cwtl
movsb
pop
sub
mov
push
or
mov
cld
addl
mov
cmp
pop
sbb
js
add
cld
xchg
cmc
push
push
movsl
push
push
jbe
jb
mov
pusha
aaa
fwait
loop
sub
jns
jg
cmp
pop
xchg
test
test
inc
cmp
push
or
pop
test
les
sub
push
es
popf
pop
out
ss
sub
push
cld
lods
pop
cmp
es
push
jmp
push
add
in
jge
inc
xchg
xor
ret
into
ja
cltd
subl
sub
adc
jp
fwait
ja
adc
push
lret
dec
out
jle
dec
sti
cld
add
jo
aam
sbb
fdiv
sahf
cmp
or
fchs
xchg
fstp
push
inc
shll
xchg
fstl
push
mov
cmpb
rolb
repz
leave
ret
cltd
and
repz
or
mov
sbb
push
fs
add
push
bound
or
sbb
cmpsb
pop
clc
pop
fsts
xor
ds
or
mov
divl
mov
push
or
cmc
sub
js
push
pusha
sbb
int
sbb
xor
popf
fcomps
and
jl
fsub
sahf
testl
cs
fidivs
insl
cmp
pop
cmc
mov
or
iret
sarb
pop
js
lock
xor
ss
pop
in
in
jb
cmpsl
push
xchg
and
dec
bound
shrl
sbbl
mov
and
add
shlb
outsl
movsb
shll
fadd
bound
mov
xor
adc
jp
pushf
xor
arpl
push
jnp
lcall
mov
fdivrp
stos
adc
daa
add
cmc
fcmovbe
in
test
cmp
jmp
jmp
pop
or
lock
into
out
pop
jl
arpl
cmp
scas
in
insl
int3
test
mov
rcrl
lock
rorb
inc
data16
imull
std
inc
ljmp
sub
das
jge
mov
xchg
stos
je
adc
mov
test
jb
and
sahf
xchg
jae
imul
mov
in
push
dec
xor
test
lahf
xchg
aad
out
test
xorl
pop
sub
flds
insb
pop
cmp
popa
pop
inc
xlat
sbbl
xchg
in
repz
shrb
mov
pop
stos
out
sub
dec
loope
jbe
push
int3
jle
divl
test
inc
mov
rcll
xor
jecxz
cwtl
sarb
stc
data16
mov
fnstenv
xchg
or
es
imul
out
jne
int
aad
icebp
out
fdivrl
adc
hlt
jo
jnp
out
bound
cld
xchg
cmp
ret
repnz
and
pop
and
cld
mov
sub
inc
fistpll
xchg
icebp
dec
bnd
rorb
jmp
fabs
loop
ret
insb
xchg
jle
popf
fs
outsl
out
cmp
inc
iret
frndint
cmp
fsub
lret
in
jl
ljmp
hlt
dec
out
loop
js
adc
pop
and
push
loop
mov
daa
lock
pop
loope
fstl
movsb
xchg
adcb
loop
push
cmp
xor
push
mov
sub
xchg
jo
ds
dec
fidivrs
pusha
xchg
lods
mov
cld
sti
mov
mov
inc
jmp
imul
cmpsb
outsl
adc
in
ja
or
mov
ja
adc
int3
adcl
dec
out
push
mov
gs
imul
ret
fs
push
add
sbb
in
aad
add
lahf
cmp
xchg
add
jle
iret
mov
fldcw
or
jae,pn
in
mov
jno
imull
xlat
in
xor
in
into
dec
addb
add
fisttpll
mov
movsb
sub
xor
jae
loopne
adc
mov
inc
shr
pop
push
cmp
jno
in
daa
cmp
jle
inc
inc
loope
clc
aam
mov
into
movsl
push
xchg
adc
test
in
unpckhps
idivb
je
adc
aad
hlt
int
jb
cld
es
clc
popf
stos
jno
cld
and
push
pop
popf
movsb
fsubs
shlb
addl
jns
cld
push
sbb
pop
push
inc
add
ja
or
icebp
hlt
sub
shlb
js
jno
scas
push
int3
mov
jmp
aad
cmc
push
mov
imul
dec
fldl
jne
mov
sbb
data16
ljmp
clc
jle
and
pop
fnstcw
test
loope
add
mov
js
dec
les
into
pushw
add
adc
dec
adc
xor
inc
out
xor
pop
xchg
xchg
jno
sahf
imulb
aad
jbe
mov
xorb
loop
or
xchg
std
pop
sub
dec
lock
test
inc
sbb
movsb
add
cmp
and
cld
push
dec
mov
int
mov
mov
jg
stos
add
lods
add
adcl
in
mov
dec
jecxz
pop
icebp
xor
push
lea
mov
jge
mov
add
adcl
scas
iret
pop
mov
hlt
clc
arpl
pop
push
jmp
adc
les
pand
dec
push
enter
call
mov
pushf
into
out
mov
je
mov
std
mov
xchg
arpl
xchg
jge
dec
mov
pop
inc
pop
ljmp
test
out
xlat
bound
ljmp
cmp
adc
movsb
les
inc
aas
pusha
xchg
out
mov
and
movsb
push
pop
in
inc
bound
or
fwait
mov
xlat
test
std
scas
cmpsb
clc
shll
in
fmuls
faddp
fld
out
bound
adc
jecxz
xchg
or
mov
aam
push
jmp
and
aam
int
mov
call
std
lds
dec
pop
lret
icebp
arpl
int
jmp
fldl2t
das
imul
adc
mov
lcall
aad
dec
imul
int3
cmp
cmp
fstl
les
mov
les
fcmove
sbb
pop
xchg
into
pop
cmp
mov
xor
jb
out
xlat
rcll
fldcw
xchg
fxch
insb
fidivs
sahf
data16
lods
jo
fmull
ffree
mov
lcall
xchg
mov
and
filds
mov
sub
xchg
bound
jnp
je
pusha
mov
mov
pop
adc
sub
js
dec
push
push
hlt
sub
mov
std
testb
pop
or
dec
and
leave
outsl
mov
mov
stos
scas
andl
shlb
les
sub
cli
cmpsb
dec
and
pusha
out
sahf
data16
repz
fs
ljmp
lret
pop
xchg
push
xor
and
cli
ljmp
cli
xchg
xchg
nop
jbe
lret
and
mov
lock
ljmp
in
mov
jp
or
js
lret
inc
rcll
lret
add
push
ljmp
int3
fisubrl
add
in
sbb
sub
ret
int3
adcl
cli
or
cmp
and
dec
sub
mov
xchg
testb
cld
test
inc
in
mov
movsb
cld
mov
out
std
imul
add
push
dec
iret
lret
jae
ljmp
aad
lea
sarb
or
mov
aam
xchg
mov
inc
pop
ret
sbb
mov
jecxz
hlt
mov
popa
dec
ljmp
cmp
outsl
push
lds
ljmp
movsb
xchg
mov
adc
loop
or
aam
fwait
out
and
cmp
fisttpll
and
hlt
aaa
gs
popa
cltd
out
push
pop
loopne
in
cmp
mov
enter
inc
jg
cmc
popf
shr
js
sub
push
test
sub
fsts
cmp
rolb
mov
sub
jle
out
in
test
cmp
push
std
imul
ja
lea
sub
fidivrs
stos
lcall
mov
inc
pop
shll
lahf
cld
xor
push
out
push
push
cmpsb
sbb
push
loope
stc
jnp
addr16
jmp
push
push
mov
clc
dec
call
mov
pop
loopne
push
sub
div
popf
ret
fimuls
popf
pop
inc
lret
mov
xchg
fcoml
and
fwait
jno
repnz
pushl
push
cmp
cmp
sub
je
inc
lcall
outsb
dec
push
popf
lret
std
jle
mov
xchg
lods
popa
jno
pop
bound
fisubs
loope
fldenv
and
bound
jp
push
add
aas
sti
jb
shrb
rol
inc
xchg
cmpsb
loopne
lock
adc
add
sahf
movsl
xchg
popa
aad
enter
fs
in
and
fimull
add
pop
push
pop
outsl
sub
orb
mov
xchg
test
push
ret
pop
xchg
fs
adc
inc
loopne
jno
fstpt
cmc
in
ffree
ret
popa
out
std
icebp
fistpl
push
out
movsb
jbe
xorb
xchg
pop
push
pop
jbe
test
jecxz
xor
jg
test
shlb
in
mov
jb
pop
scas
fdivrs
push
outsb
add
cld
fs
les
pop
cmp
mov
je
push
flds
ja
pop
in
sbb
mov
cld
lods
or
out
int3
mov
sbb
ret
in
add
into
jmp
cld
into
dec
mov
xchg
sub
adc
pusha
cld
sub
decb
adc
xchg
out
push
inc
scas
xlat
loopne
jmp
cmpsl
cld
push
mov
fs
stos
div
nop
xchg
data16
insl
sahf
jl
xchg
pop
arpl
jle
loope
call
aam
lock
clc
pop
adc
repz
movsb
aam
popf
rcrl
dec
cmp
rcrb
clc
roll
mov
and
fld
out
dec
mov
leave
xchg
rcrb
call
in
adc
out
pop
ja
clc
into
adc
lods
lods
loopne
add
lret
pop
sub
add
push
mov
adc
jg
subb
jnp
xlat
mov
dec
sbb
enter
cs
arpl
loope
fadd
cld
or
movsb
and
aaa
stos
out
call
sti
xor
cld
sub
adcl
ja
xor
ss
sti
pusha
fcomi
xor
mov
lret
popa
pop
cwtl
adc
push
mov
lcall
sbb
mov
push
das
mov
stos
lock
das
jecxz
out
cld
push
loopne
cmpsl
push
in
pop
and
imul
in
shl
push
dec
or
stos
or
mov
subb
adc
insb
push
orl
rcrl
jle
test
ret
jecxz
popa
and
dec
sbbb
std
inc
xorb
cltd
out
mov
cli
bound
jmp
in
cmp
in
dec
xchg
add
pop
and
gs
jbe
cli
push
pop
sbb
jp
push
popa
mov
fstpl
lock
in
inc
cmp
jno
scas
lahf
and
push
and
mov
cmp
xchg
mov
out
lods
inc
pushf
popf
into
dec
push
xchg
pop
aaa
xchg
cwtl
mov
popa
pushf
push
cld
stos
mov
cmp
fistps
mov
divb
es
insl
sti
push
add
nop
jge
insl
idivl
cld
mov
ljmp
hlt
and
and
mov
jmp
push
loopne
shll
out
shll
sbb
loope
cwtl
sub
jecxz
or
pop
or
decb
out
cld
sbb
sbb
pop
pop
and
faddp
push
pushf
pop
mov
adc
pop
mov
cmp
aad
test
loope
into
and
ljmp
fisubs
repz
dec
loopne
hlt
sub
icebp
lods
jmp
repz
loopne
enter
vpsubd
hlt
mov
aad
hlt
fld
fbld
aam
iret
push
in
fnop
rol
call
js
arpl
loope
sub
add
jecxz
mov
sbb
stos
xor
mov
push
cmp
cmc
test
ljmp
lods
iret
mov
adc
push
and
idivb
out
call
cld
fsub
xchg
rcll
out
or
push
aad
aam
rcrl
cmpsb
mov
sbb
dec
add
rcl
les
pushf
mov
and
mov
ficoms
push
mov
inc
push
mov
int
outsb
inc
jns
inc
lret
push
mov
jne
cmpsl
movsb
jae
adc
out
dec
push
ficoms
fisubs
movsb
push
dec
test
out
stc
addr16
adc
stc
pop
inc
into
pop
fsubs
lock
daa
add
fbld
enter
into
jecxz
out
movsb
in
rorb
inc
test
lods
loopne
and
mov
sub
aas
and
mov
push
ds
jb
adc
pop
fisubl
rcrb
cld
fmull
div
fmulp
dec
xchg
inc
jae
lahf
sbb
pop
mov
jecxz
mov
mov
lods
mov
sbb
into
inc
and
outsb
push
fisttps
xchg
aad
dec
mov
or
jle
les
sbb
pop
iret
cmp
mov
and
addr16
sbb
ljmp
sahf
mov
jg
shll
jbe
mov
mov
lahf
lock
mov
rcrb
jnp
inc
cmpsl
ja
scas
sahf
inc
mov
lods
sarb
mov
or
aaa
pop
int
and
xchg
pop
and
push
loope
mov
in
rcll
jp
fidivs
pop
int
lock
adc
jge
or
mov
andl
lret
pop
mov
mov
pop
int
sahf
ret
cmpsb
mov
icebp
cmp
jae
xchg
and
and
cmc
mov
and
clc
fs
and
push
push
in
movsl
cld
es
lea
or
jmp
mov
push
mov
loope
mov
jbe
faddp
std
adc
addr16
fs
jecxz
sbb
lds
dec
xor
dec
push
sub
mov
loope
inc
ja
dec
and
scas
or
cmp
jns
mov
fldt
mov
pop
stos
mov
cmpsb
pop
popa
ljmp
and
sarl
pop
addr16
aas
enter
xchg
js
adc
push
shrb
jo
adcb
ret
loop
test
push
mov
fisubs
orl
int3
faddp
push
ret
jge
sbb
gs
fdivrp
dec
push
and
call
mov
rcl
daa
jl
repz
xchg
inc
mov
aam
pop
and
out
pop
es
lock
pop
inc
and
out
fisubs
es
xor
bound
out
in
inc
xchg
mov
popf
gs
push
shr
sub
sub
inc
icebp
cmp
pop
mov
ret
xchg
add
xchg
testb
pop
add
in
popa
into
out
dec
pop
mov
ja
inc
xchg
mov
jp
jnp
sub
dec
sub
out
sti
cmc
pop
out
clc
sub
data16
and
add
and
pop
add
pop
aaa
mov
adc
js
mov
sbb
sub
sbb
pop
loop
sarb
push
negl
js
xchg
xor
les
push
fadds
mov
pop
or
mov
scas
std
xor
mov
ljmp
cld
pushf
adc
mov
addr16
in
test
mov
or
adc
push
xchg
mov
lahf
ljmp
stos
mov
jno
stos
outsl
dec
scas
sahf
adcl
sub
adc
jo
jmp
lcall
mov
xor
es
movsl
dec
push
jb
xor
les
pop
loopne
sub
xchg
and
cmp
fstps
fs
mov
and
daa
js
mov
stos
push
addr16
sub
and
aas
xlat
neg
jno
mov
hlt
push
loope
test
jne
mov
fisubs
and
and
outsb
and
mov
cld
ficoml
clc
movsb
dec
mov
shlb
int
out
add
inc
gs
imul
fsub
push
push
cmp
xorl
ficoms
in
ffreep
sahf
shlb
jno
jb
out
jmp
mov
fxch
fdiv
push
dec
fiadds
jp
pusha
jbe
fsubrl
adc
fisubs
stos
ljmp
out
cmpsb
and
xchg
cmp
mov
xchg
popa
push
pop
mov
and
arpl
mov
call
inc
pop
insb
fld1
adc
pop
movsb
arpl
add
mov
ret
cwtl
ficompl
shlb
out
xchg
ret
stos
fistps
pop
call
jp
inc
rol
jmp
mov
ljmp
pop
test
jg
roll
mov
push
mov
in
cmp
push
ffree
mov
fwait
dec
sub
out
ss
popf
xchg
movl
mov
pop
pop
cmc
dec
cmp
cld
bound
mov
and
xchg
xor
cmp
mov
adc
or
ror
xor
popl
dec
jl
lds
push
popa
inc
mov
xchg
lret
sub
inc
hlt
ficoms
jmp
idiv
mov
sahf
ja
xlat
sarb
shl
and
stos
mov
ret
and
popf
sarl
lret
test
inc
pop
imulb
inc
imul
fs
jp
mov
pop
loope
dec
mov
stos
mov
push
push
cld
push
rclb
enter
push
ror
ficoms
rol
faddl
xchg
add
lret
inc
or
leave
push
xchg
xor
jmp
push
jmp
push
test
ljmp
inc
test
jno
ljmp
aam
cmp
sahf
data16
movsb
lds
lods
pop
repz
sahf
pop
enter
push
lods
and
or
mov
mov
shll
fsubp
push
sti
mov
mov
push
lods
xchg
cwtl
cmp
aas
xchg
dec
mov
add
les
xchg
xor
mov
stos
push
sahf
enter
push
and
lret
dec
imul
xchg
cmpl
dec
ficoml
jp
push
mov
stc
aas
nop
repz
popf
mov
cmp
pusha
lahf
shll
sub
fisttps
inc
inc
shl
jecxz
test
push
pushf
fwait
stos
fistl
aaa
fldl
scas
pop
rorl
test
adc
xchg
pop
scas
sub
dec
shrl
shl
cwtl
ficoml
cmp
stos
xlat
out
insl
push
stos
lret
push
nop
sub
jmp
les
fisubrs
or
in
out
nop
mul
bound
or
mov
sub
jmp
daa
and
sti
jmp
ds
std
jge
subl
stos
pop
push
je
adc
movsl
imull
xchg
sub
out
out
shll
fbld
mov
mov
lcall
shll
outsb
and
and
inc
imul
int
push
mov
popa
push
adc
mov
ret
cmc
aam
loopne
xchg
jecxz
cmp
and
add
aam
or
inc
sbb
scas
test
loopne
rolb
iret
fdivrp
inc
xchg
xor
pop
les
hlt
add
lret
jecxz
daa
push
adc
loop
and
push
lods
fists
push
dec
adc
pop
stos
fs
adc
stc
and
in
cs
subl
aad
out
add
imul
cwtl
and
cs
fiadds
mov
int3
inc
sahf
lcall
fcomip
adc
hlt
pop
test
hlt
or
jb
ficomps
aam
cmc
or
jbe
lahf
rcrl
dec
mov
pop
cmp
mov
lret
sbb
xor
xchg
loopne
fisubl
and
pusha
dec
stos
and
fildll
hlt
lahf
int
sbb
push
pop
cld
pop
subl
push
inc
sub
std
adcl
sti
test
push
daa
shrl
cmp
mov
loope
jnp
sarb
pushf
int3
hlt
test
or
pop
in
andb
sahf
add
jecxz
mov
into
mov
and
adc
push
pushf
pop
mov
push
cmpsb
imul
dec
ficoms
jnp
dec
pop
int
rol
popa
jecxz
out
push
mov
int
mov
dec
push
movsb
cltd
cwtl
adc
in
push
sbb
jmp
xor
pop
push
fs
sub
stos
mov
fidivrs
lods
mov
cld
inc
ljmp
fldenv
fisubrs
rcll
xor
xchg
out
fadds
add
sbb
popf
and
imul
test
addr16
sub
sbb
rcr
int
add
pushf
les
lahf
stos
clc
addr16
mov
movsb
pop
adc
sub
xchg
cmp
cmp
fldenv
add
xor
cmp
stc
mov
push
je
add
arpl
pushf
fs
std
cmc
lret
insl
xor
pop
ret
pop
data16
jmp
shrb
movsb
negl
pop
xchg
xor
push
lret
inc
dec
sub
popf
or
popf
push
pop
test
inc
sbb
adc
jmp
mov
dec
and
lahf
cwtl
leave
int3
sti
loopne
popa
int
sahf
push
leave
jmp
mov
arpl
mov
data16
adc
inc
fdivs
xchg
inc
mov
in
shl
out
xchg
mov
rcr
lock
push
les
out
es
fwait
pop
in
add
fmuls
and
incb
add
xor
je
shll
mov
and
ret
mov
mov
enter
ficoms
pushw
fs
pop
jb
fyl2x
xchg
lret
outsb
mov
inc
pop
xchg
loope
pushf
push
sbb
sub
test
pop
push
mov
sub
fidivrs
repnz
out
in
xchg
insb
int3
or
out
movsb
in
into
pop
push
adc
shlb
outsl
fistl
repz
mov
in
repz
mov
jecxz
or
and
inc
jle
es
xchg
decb
xchg
rol
mov
inc
stos
jmp
pop
cmp
imul
outsb
push
xchg
icebp
lret
insl
je
jmp
into
in
lods
and
rcr
xchg
jmp
mov
fcompp
fimuls
fcomi
jmp
insb
lret
shlb
fs
adc
and
fdivr
test
sar
adc
lretw
mov
inc
jmp
fdivr
out
mov
or
aas
sahf
shr
int
fildll
xchg
jl
loop
lods
and
sar
push
in
or
aad
or
popf
inc
int
dec
push
hlt
sbb
outsl
fidivs
fs
dec
shll
in
rcl
lock
ret
repnz
and
int
sbb
icebp
out
into
lcall
mov
les
push
mov
in
jecxz
push
sub
jp
inc
ficoms
or
leave
je
loope
add
push
push
and
adc
jg
lret
out
jp
mov
les
movsb
sarb
and
in
in
fs
xor
or
mov
inc
mov
notl
enter
push
xchg
arpl
push
mov
fldt
push
in
aas
push
pop
push
shrb
out
pushf
lods
push
mov
clc
adc
and
push
sbb
repz
and
lea
cltd
jnp
loopne
pop
dec
arpl
lock
into
int
mov
rclb
rcrl
inc
cld
or
in
loope
ds
call
insl
sbb
fstl
call
jmp
jbe
inc
not
sahf
arpl
add
mov
jns
mov
or
ficomps
fisubs
inc
in
xlat
rcll
mov
loope
push
xor
aam
dec
xchg
cli
push
fstps
pop
stc
jp
jle
test
frstor
jle
je
ljmp
xchg
inc
and
push
ret
adc
inc
pop
lcall
mov
sahf
sahf
data16
ja
aaa
jns
into
out
lock
sbb
sbb
mov
outsb
cmp
in
es
stos
into
iret
fdivrs
cli
mov
push
push
loope
cmp
or
adc
fimuls
push
int3
int3
mulb
mov
push
repnz
mov
inc
mov
mov
or
xchg
xchg
test
enter
lods
pop
int
inc
sub
adcl
inc
rcl
fisttpl
cmc
pop
mov
and
leave
fs
pop
les
pop
jmp
push
mov
pop
outsb
insb
shrb
sbb
xlat
into
rcl
add
stos
idivb
ds
lahf
or
fldenv
lds
int3
repnz
push
xor
mov
loop
out
in
jp
push
push
fisubs
movsb
mov
ljmp
popf
pushf
rcr
in
pop
jecxz
test
jae
out
icebp
popf
ror
scas
mov
stc
add
pop
es
add
mov
fcompl
fnsave
mov
xlat
mov
xor
cld
pop
dec
push
in
push
out
data16
cmp
cwtl
mov
mov
mov
dec
and
push
jmp
lds
call
sub
pop
aam
int3
mov
fnstsw
cli
push
jge
repz
cmp
out
cmp
inc
push
xor
pop
loopne
std
fisubs
fistl
loopne
pop
stos
aam
dec
in
stos
mov
xchg
pusha
icebp
jmp
pop
imul
into
ret
push
lret
in
jns
add
mov
xor
shr
shl
test
and
pop
sahf
lock
in
sarl
adc
add
or
push
mov
dec
and
jo
sub
out
sbb
sub
sub
jp
mov
or
fnsave
in
pop
movsb
lret
mov
loopne
lods
loopne
cli
pusha
loopne
popf
hlt
in
ljmp
add
push
aam
fbld
inc
test
add
cltd
stc
mov
popa
pop
insb
pop
dec
repnz
popf
je
sub
ret
ret
fadds
stos
not
push
jp
jne
daa
mov
and
movsb
sbb
inc
sub
sahf
bnd
dec
movsl
mov
mov
lea
mov
call
sub
fldenv
sub
mov
out
negb
mov
ret
pop
sbb
enter
cmp
clc
mov
test
icebp
and
or
sub
in
aas
popa
jle
dec
je
jbe
push
popf
dec
stos
pop
iret
push
sbb
push
xchg
sub
vpmaxuw
mov
or
push
fistpl
es
sahf
push
in
jp
xor
xchg
push
mov
sub
rcr
fbstp
sti
push
mov
pop
adc
push
mov
les
lahf
jecxz
aam
cltd
mov
sahf
shrb
rcrl
lahf
mov
mov
adc
mov
or
fwait
pop
jmp
inc
inc
xlat
aaa
outsb
lea
xchg
add
mov
jge
add
lock
jp
iret
jns
fists
jecxz
inc
jmp
pop
push
fiadds
adc
push
fldt
mov
shll
sbb
mov
mov
cmpsb
push
loope
jmp
test
jmp
hlt
imul
dec
std
icebp
jo
sub
xchg
jae
subb
mov
mov
add
xor
mov
outsl
rorb
insb
or
in
mov
arpl
addr16
mov
imul
aam
pop
cmc
out
aad
popf
in
push
icebp
inc
sub
movsb
jmp
enter
push
dec
mov
cmc
stc
cmpsb
push
or
aam
outsb
mov
cmpsb
movsb
cmp
and
in
jle
aad
fists
aad
es
pop
pop
xchg
cmc
push
push
in
movsl
orl
xchg
loope
ficoms
pop
daa
subb
sub
aad
dec
dec
jo
mov
pxor
pusha
loopne
int
push
pop
fstpl
xchg
ja
shll
cmp
pop
pop
or
or
cs
fcoms
mov
imul
sub
hlt
cmpsl
nop
out
mov
xchg
out
addr16
and
adc
in
cmp
inc
and
dec
fcmovb
rcr
test
outsb
add
pop
inc
insb
aaa
jle
sub
add
mov
movsb
push
notl
adc
ret
inc
hlt
add
xchg
out
pop
dec
ficomps
aaa
sub
sbb
loope
pushf
aam
shl
lock
adc
jmp
adc
pop
inc
lret
rcrb
cli
add
pop
cld
call
hlt
adc
dec
adc
in
mov
push
push
xor
test
push
clc
mov
sahf
sub
mov
sbb
stc
push
dec
xchg
dec
ss
in
test
cmp
enter
test
fsincos
mov
xchg
mov
daa
es
push
loopne
pop
call
or
fs
popf
stc
mov
mov
in
ljmp
xor
adc
dec
leave
mov
imul
sahf
mov
fisttpll
mov
mov
in
idivl
or
ss
call
sarl
aam
ret
aad
aaa
fildll
sub
aaa
cmp
call
pop
insl
stos
test
insl
xchg
test
push
sti
dec
mov
jecxz
out
rcrb
cmpsl
push
add
push
push
loop
lcall
inc
test
insb
test
je
loope
icebp
daa
movsb
aad
push
fists
popf
sbb
push
mov
jecxz
and
inc
imul
rcrl
loope
add
iret
data16
xchg
jmp
push
pop
fsubrl
pop
enter
sahf
ret
mov
ljmp
xlat
stos
pop
fisubs
mulb
xchg
rolb
sahf
int
stos
in
mov
movsb
les
push
in
jmp
sahf
int3
stos
fnstsw
cmp
popf
sub
insl
sti
cld
insl
or
sub
mov
es
test
stc
lcall
pop
push
insl
faddp
lahf
push
inc
jb
pop
push
loopne
stos
jno
shr
ror
in
test
push
jecxz
loope
fs
divb
outsl
lods
or
sti
not
fldt
xchg
cld
jmp
mov
jg
pop
lret
dec
movsb
shl
stos
fbld
mov
jmp
and
mov
int
lret
inc
inc
push
movsl
xchg
sahf
in
in
imul
repnz
and
sbb
lods
pop
movsb
dec
xchg
cmp
and
bound
fdivrl
xchg
jmp
push
loope
jnp
jne
cmp
dec
or
xchg
fisubrs
imul
xlat
flds
mov
or
repz
jmp
stos
push
sub
adc
rorl
cmp
lods
sbb
sub
jmp
rcll
les
clc
fcomip
in
out
divb
fldl
test
xchg
cld
fwait
adc
xchg
data16
mov
adc
imul
out
in
out
js
shlb
xchg
mov
adc
out
js
gs
mov
repnz
lods
cmpsl
cs
sub
femms
gs
push
icebp
les
je
jne
jge
aam
cmp
inc
inc
negl
subl
dec
mov
sub
test
imul
jecxz
mov
sbbl
andl
out
iret
into
sub
xor
push
nop
mov
stos
repz
cli
clc
dec
adc
mov
cli
out
cmp
cld
or
ljmp
mov
push
lret
stc
mov
lret
int3
out
shr
sti
mov
out
sub
ja
repnz
xlat
bound
leave
addr16
push
sbb
ljmp
fmulp
insb
push
xor
mov
nop
push
sbb
call
add
stos
out
leave
pop
sub
rorb
mov
xchg
bound
push
popf
fst
add
mov
pop
stos
add
pop
or
cmp
mov
cld
jecxz
and
mov
loope
movsl
js
mov
movl
mov
dec
pop
popa
lret
leave
xchg
int
out
ret
cmc
icebp
movsb
in
in
sub
sbbb
push
pop
popa
negb
into
dec
ljmp
hlt
pushf
fstps
fxch
movsb
enter
out
loopne
mov
sbb
iret
sbb
sahf
cld
adc
test
adc
cld
dec
lock
mov
out
inc
out
or
leave
inc
push
fs
filds
inc
out
out
out
push
push
xor
cwtl
adc
fldenv
mov
lods
imulb
cltd
sbb
push
cmp
ja
out
and
pop
nop
aas
lea
cwtl
pop
lahf
sub
jp
sahf
rcl
jp
add
pushf
push
out
jge
pusha
outsb
js
aas
fisttpll
sar
js
cmp
into
xor
mov
push
inc
or
call
mov
orps
pop
push
mov
xchg
jmp
daa
jnp
and
bound
out
adc
mov
sarl
jbe
data16
fs
addr16
ljmp
push
outsb
xchg
notb
dec
jge
cmc
sub
ds
jmp
daa
sbbl
movsb
stos
and
sahf
adc
xchg
add
push
jns
data16
in
mov
stos
sbb
cmp
fwait
add
xchg
addr16
insl
out
push
mov
movl
jo
add
dec
aaa
lea
sub
out
insb
xchg
mov
out
push
sahf
mov
jmp
inc
dec
rcll
int3
int
test
lahf
xor
call
add
imul
sub
and
dec
in
or
mov
push
shrb
fidivrl
aam
push
xlat
mov
inc
xchg
sbb
gs
fisubs
push
test
push
dec
out
stc
cmpsl
imul
ds
jp
enter
xor
xchg
sti
push
cmp
adc
push
cld
frstor
js
in
rorl
or
jmp
xor
std
out
addr16
pushf
adc
mov
aaa
not
pop
fucomi
ljmp
and
repnz
aaa
push
fisubrs
push
xchg
cmp
imul
cwtl
push
pop
xor
pop
popa
popa
push
xchg
cli
fwait
xchg
mov
push
push
push
or
outsb
push
shrb
rsqrtps
sbb
inc
shr
aam
fwait
sar
push
xor
sar
incl
push
jle
in
xchg
iret
popf
js
dec
dec
in
in
loopne
call
and
pushf
fmuls
sbb
cltd
arpl
cli
movsb
dec
insb
movups
jp
loope
out
and
pop
cltd
mov
sbb
in
pop
aad
in
fwait
stos
out
xor
stos
push
fldenv
pushf
sbb
loopne
xchg
cli
fstpt
popf
sahf
in
dec
in
nop
jmp
adc
cmp
stos
in
mov
jb
lea
jle
push
pop
rcl
mov
mov
push
out
pushf
iret
cmc
sub
into
jmp
and
lods
out
mov
cmc
ficomps
mov
pop
sbb
inc
out
pop
push
gs
stos
fs
fstl
fldt
mov
push
fadd
fisttps
and
pop
sub
xchg
popa
pop
fwait
insb
dec
xlat
pushf
arpl
sbb
push
stc
leave
dec
add
in
or
movsb
out
sub
shl
fcomp
rclb
push
cwtl
mov
push
cmp
push
test
push
xchg
out
adc
adcl
pop
hlt
push
mov
mov
sub
push
fisttps
adc
or
testb
rcrl
movsb
ror
cld
aam
sbb
inc
inc
ret
fldl
test
sahf
les
xchg
movsb
fucomip
rcl
ror
adc
in
cwtl
inc
test
in
mov
push
fcoml
inc
or
stos
push
fcomps
aad
mov
aaa
inc
outsl
add
adc
test
push
ret
mov
repz
rclb
mov
pop
int3
adc
push
mov
pop
xchg
jle
aaa
insb
adc
popa
or
daa
scas
stos
push
iret
push
popf
adcl
loopne
push
mov
icebp
cli
adc
stos
mov
fucomi
pop
inc
jmp
and
jb
fdivrs
fldl
push
push
pop
sti
ljmp
call
pop
mov
cmpsl
call
sub
jl
test
fbld
cwtl
dec
mov
xchg
sub
push
pop
aas
mov
cmp
or
mov
mov
inc
jp
adc
xor
sbb
sub
sub
aas
jbe
sbb
imul
dec
adc
paddd
or
adcl
pop
or
cltd
fcompl
jecxz
mov
push
jl
mov
cmp
mov
outsb
push
aad
stc
sar
pop
mov
mov
sub
fbstp
std
and
test
jecxz
test
push
rolb
xchg
inc
cmp
push
dec
or
pop
push
fsubr
cmp
lods
aaa
popa
ret
std
cmp
and
call
ret
xor
outsl
loopne
testb
dec
mov
idivb
in
mov
jnp
stos
mov
mov
push
mov
in
inc
aaa
idivb
aam
ljmp
pusha
and
push
mulb
jg
dec
loope
loopne
in
xchg
mov
mov
lahf
out
sub
cld
lods
inc
push
sub
repz
sub
push
jge
pop
cmp
ss
rcrl
xor
sbb
jno
popf
mov
icebp
jg
push
or
cmp
mov
scas
scas
les
leave
leave
xchg
clc
push
js
and
cld
jecxz
ljmp
cmc
fldl
jp
loopne
enter
lcall
push
les
jno
sbb
sahf
mov
push
leave
add
and
dec
xor
and
ret
sub
es
aaa
insb
cs
sbb
push
cltd
loopne
jp
adc
xchg
je
mov
mov
mov
pusha
push
cmp
test
jl
das
lcall
jmp
fst
fs
push
ljmp
loopne
icebp
cmpsl
roll
adc
cld
shlb
jecxz
dec
mov
jmp
into
fidivs
lock
in
or
pop
jmp
pop
cmp
cld
iret
adc
adc
lcall
inc
inc
das
lea
jne
fsubs
in
loopne
cli
or
or
inc
hlt
outsl
loopne
fistps
jnp
lock
les
inc
mov
push
adc
int
mov
flds
loope
pop
cmp
test
adc
jp
icebp
loopne
push
popa
inc
bound
ljmp
rcll
fisubrl
push
add
jo
jle
xchg
xlat
pop
xchg
cs
andb
sti
add
inc
push
mov
ja
std
lahf
aam
dec
dec
in
push
push
dec
ds
mov
adc
jno
mov
push
pop
popf
push
or
mov
sbb
aad
sbb
push
dec
inc
dec
in
sbb
lods
fcmovnu
out
loope
cld
sarb
mov
push
icebp
into
mov
js
arpl
adc
jno
test
sbb
jb
js
sahf
test
inc
sub
xchg
movsb
xchg
push
pop
jmp
fwait
nop
push
xor
push
cwtl
fcmovu
pop
sarl
in
out
xor
mov
xor
int3
mov
mov
xchg
mov
cmc
clc
fs
insl
loope
or
dec
add
xchg
adc
pop
loope
in
inc
dec
jecxz
or
mov
movsb
mov
test
ficoms
fs
fsubp
hlt
in
hlt
mov
jmp
std
adc
sub
push
scas
mov
xor
xor
push
imul
adc
loope
or
int
fs
add
xchg
lret
in
stos
add
inc
fiaddl
xor
xchg
add
rcr
push
ja
pop
sbb
cs
mov
cwtl
jle
xchg
arpl
pop
push
lret
sahf
xchg
fnstsw
inc
bound
jecxz
and
leave
test
shlb
rcrb
jmp
mov
mov
jo
inc
movsl
shll
btr
test
lret
not
shll
pop
test
xchg
or
je
xor
movsb
dec
ss
insl
shrl
pop
fstl
andl
pop
subl
rorl
aas
inc
arpl
scas
pop
xchg
adc
ret
popa
movsb
outsl
pop
cmc
sbb
rcrl
ret
dec
pop
push
push
xor
ror
int3
jno
sub
add
ret
jae
ja
aaa
and
std
outsb
scas
adc
mov
cwtl
and
sub
sub
adcl
movl
movsb
pop
pop
fldcw
mov
push
pop
jb
clc
std
and
add
ja
hlt
pusha
je
std
pop
out
lods
ret
imul
pop
xchg
divl
inc
js
in
repnz
adc
mov
sub
mov
and
push
js
out
lret
pop
out
jbe
mov
daa
push
enter
out
cld
lret
out
sub
insl
push
dec
roll
into
or
push
push
je
jbe
mov
and
xchg
push
xchg
push
push
les
cmp
outsb
cmp
adcb
or
mov
xchg
adc
in
cmpsb
jno
pop
adc
out
push
jmp
in
xchg
push
push
test
aad
enter
sub
popf
pop
dec
and
and
fs
testb
jnp
sar
xchg
dec
stos
ljmp
sti
enter
dec
xchg
mov
mov
mov
push
and
daa
dec
icebp
fsubl
stos
mov
and
adc
fldcw
cmpsb
fistpll
das
mov
sbb
popf
test
or
cmp
imul
rolb
sbb
mov
in
xchg
jecxz
ficoms
inc
xchg
std
cmp
ret
sbb
mov
xchg
inc
adc
ds
cmpsb
jno
push
movl
dec
les
fs
jmp
and
sbb
shrl
packuswb
and
or
in
stos
mov
pop
cld
push
and
icebp
fnstcw
push
sbb
mov
or
cmc
inc
sahf
vfmaddsd
fmull
call
mov
iret
shll
imul
xlat
loopne
dec
mov
sub
test
jecxz
pusha
sbbl
or
stc
fcoml
enter
dec
hlt
ljmp
mov
ret
je
in
add
jle
mov
in
xchg
es
bound
xchg
xchg
repz
and
add
loope
xchg
das
scas
and
xchg
pop
insl
xlat
mov
aas
fs
adc
xchg
push
push
push
inc
cmp
cmp
jmp
push
seta
dec
scas
push
test
mov
test
insb
jnp
adc
pop
js
stc
lcall
xor
dec
and
testl
xchg
lods
push
ficomps
inc
or
xchg
pop
jo
sbb
mov
lock
fucomp
sahf
cld
cwtl
out
mov
dec
addl
pop
mov
xor
and
jne
xchg
movsb
jmp
aam
pop
cs
outsl
push
sub
ret
lahf
aam
add
mov
adc
test
in
cs
xchg
inc
ljmp
dec
jne
push
pop
std
cld
cmp
inc
mov
loopne
fcompl
outsl
cs
mov
xchg
orl
jle
in
bound
push
movsb
lods
stc
add
fcom
sbb
pop
xchg
jecxz
inc
xchg
jecxz
movsb
push
daa
sub
ds
mov
in
adc
dec
push
into
int
sbb
adc
push
xchg
je
das
adc
fs
inc
pop
andl
arpl
dec
push
iret
aam
ja
mov
sbb
rclb
aaa
sub
vorps
jle
sarl
idivl
xchg
addr16
hlt
and
cmpsl
popa
and
fisubrl
popf
mov
cmc
add
fcompl
repz
mov
push
frstor
icebp
add
sub
call
mov
les
lahf
add
cld
movsl
aas
das
repz
bound
mov
call
cli
int
dec
movsb
add
xchg
and
sti
cwtl
les
data16
mov
ffree
inc
jb
cld
xchg
idivb
jae
into
cmpsb
rcrb
dec
jge
mov
pop
fnstsw
push
ljmp
iret
mov
fldcw
dec
fs
mov
mov
jb
push
lahf
or
idivb
das
pusha
sub
loopne
adc
dec
pop
lcall
adcl
sub
mov
test
aaa
inc
ljmp
aad
push
ficompl
push
test
scas
nop
jecxz
dec
pop
popa
repz
dec
and
mov
pop
add
or
test
inc
sbb
outsl
xor
repz
add
outsl
jl
mov
xchg
stc
cmp
pusha
mov
jb
scas
add
stos
int3
dec
loopne
fistpl
ljmp
test
inc
push
call
out
icebp
popa
inc
push
clc
les
test
in
adc
xor
loopne
pop
stos
loopne
mov
ret
mov
outsb
outsb
aaa
mov
das
xor
loope
mov
sub
out
and
add
inc
fiaddl
inc
sahf
loope
mov
lods
or
jge
bound
xchg
loope
das
js
mov
nop
fnsave
shlb
loopne
jecxz
inc
in
scas
movsb
jecxz
add
sub
imul
cmp
xchg
mov
push
and
ficoms
xchg
pop
fsts
loope
clc
cltd
test
notl
and
fsubp
icebp
xor
add
push
mov
ljmp
cwtl
push
push
jmp
aad
dec
pop
and
pusha
sar
cwtl
mov
lahf
ljmpw
in
sarl
idivl
loopne
orl
icebp
push
aas
stos
add
mov
inc
repz
les
aad
jmp
push
repz
cmpsl
and
inc
es
adc
jns
sti
stc
enter
add
in
mov
sub
rcll
jle
jo
movups
lods
fnsave
iret
jmp
inc
pop
xchg
mov
cwtl
add
adc
in
sub
fcmovnbe
insb
push
daa
pop
cmp
pop
push
and
jp
sbb
les
cmp
daa
push
bound
in
scas
sbb
pop
inc
and
inc
orl
shrb
rcrl
mov
mov
fldt
ret
fcoml
sbb
push
push
repz
leave
pop
inc
sub
mov
inc
or
inc
xchg
sbb
push
push
sub
in
mov
inc
mov
sub
sti
sbb
seta
xchg
cwtl
popf
lret
lods
pop
imul
mov
cmpsl
and
xor
push
sbb
rcll
stos
test
push
jecxz
stos
jge
into
jne
add
insb
icebp
sbb
icebp
outsl
mov
adc
sub
adc
or
data16
addb
jp
fs
push
ss
dec
adcl
xchg
dec
jne
xchg
mov
mov
aaa
xchg
mov
sbb
stos
hlt
xlat
or
lret
and
fisttpll
push
and
push
pop
ds
adc
jle
jbe
xchg
incb
in
cld
addr16
dec
lock
push
ret
dec
inc
movsb
pop
push
fcom
sub
inc
lea
jge
clc
xor
call
push
or
in
xor
jnp
ss
jbe
push
or
popa
mov
mov
push
enter
fucomip
cmp
sub
bound
loopne
jnp
insl
mov
mov
add
pop
pop
mov
int
mov
outsl
cmp
jp
push
lock
jno
lahf
test
cmpsb
and
les
cmpsl
pop
xor
ret
mov
shll
enter
adc
sub
loope
cmp
pusha
jo
movsl
mov
aad
pop
mov
sbb
fld
dec
mov
mov
cmp
pop
pop
xchg
mulb
inc
lret
in
stc
or
or
xor
xor
nop
or
lret
jecxz
loopne
test
xor
xchg
das
push
sub
push
popa
lea
add
jmp
xchg
xor
sbb
scas
mov
into
fstpl
rolb
pop
xchg
das
push
rcll
ja
lock
lcall
pop
xchg
ret
cmp
loope
xor
sbb
data16
and
inc
push
mov
stos
scas
cmpsl
xor
aad
push
xchg
enter
popf
sub
clc
hlt
mov
add
jmp
dec
xlat
fidivrs
pop
push
sti
lea
lea
xchg
loope
pop
fstps
arpl
sbb
cmp
lock
imul
pop
mov
inc
popf
mov
push
clc
mov
insl
mov
pop
cmp
sar
mov
shrl
push
sbb
mov
lahf
sarb
jb
and
enter
sub
mov
insb
sbb
in
cltd
inc
xor
mov
in
aaa
sahf
loope
rorl
mov
sbb
adc
into
jb
cld
or
push
xchg
sbbb
nop
les
sarb
movsb
cmp
xchg
roll
test
xchg
scas
or
push
cld
push
inc
pusha
inc
int3
movsb
insl
cld
cmpsb
mov
imul
ljmp
mov
cmp
popa
push
sbb
imul
std
nop
xchg
int
inc
sahf
mov
loope
fwait
pop
xchg
cmp
hlt
notb
je
lahf
xchg
sub
aaa
push
inc
xchg
inc
cmc
pop
divl
into
fxch
cld
mov
loope
sahf
dec
push
repz
xorb
cs
fisttpll
shr
pop
push
inc
js
in
adc
dec
sbbb
rorb
inc
aad
jmp
inc
call
cs
in
int
sahf
sbb
pop
incb
cmc
push
pop
sahf
in
movsb
lret
scas
push
cmc
stos
jae
mov
sub
shrl
jge
and
bound
jmp
shlb
out
fucomi
aam
loopne
scas
xchg
in
outsb
xlat
fcomp
es
pop
mov
popa
in
je
bound
sub
jmp
jecxz
push
push
mov
repnz
movsb
inc
jnp
ljmp
lcall
mov
lcall
flds
mull
lock
stos
cmp
test
hlt
stos
test
mov
push
lret
aam
adc
jecxz
call
sbb
and
inc
dec
jo
nop
push
mov
mov
push
xchg
and
mov
int
fs
mov
test
jle
mov
insb
imul
cld
sbb
ret
jmp
iret
push
mov
loopne
adc
shrl
sbb
rcll
jecxz
ffree
or
pop
cmp
pop
jns
inc
les
xchg
lock
mov
sub
push
loope
add
push
push
roll
xlat
loopne
pop
mov
movsb
movsb
cmp
hlt
imul
xor
into
or
xor
and
sar
adc
loope
push
movsl
ror
data16
ljmp
hlt
add
jmp
shr
adc
repnz
test
xchg
inc
rol
lods
int3
and
mov
push
and
adc
in
sbb
mov
jge
loope
ljmp
mov
js
mov
mov
fxch
iret
dec
jbe
cs
filds
lods
insl
fcmovbe
and
popa
fmulp
jae
xor
sarb
jg
adc
inc
hlt
push
aam
dec
inc
xor
and
outsl
add
stos
inc
fisubrl
jae
addl
inc
nop
push
or
in
imul
outsb
xchg
lcall
scas
xchg
imul
mov
adc
iret
sub
sub
leave
daa
aam
int
cld
jae
xchg
rcll
dec
pop
mov
lret
xchg
into
xor
in
call
adc
lcall
mov
popf
ret
mov
icebp
hlt
out
ret
jle
sbb
fsubp
in
movsb
es
stos
ret
pushl
mov
in
int3
stos
mov
in
shlb
jno
in
cwtl
outsl
movsb
fisubs
addr16
cmc
test
ret
sub
in
test
xorb
movsb
int
cmpsb
stos
push
push
out
stc
test
cmp
adc
cmp
out
nop
push
lcall
mov
and
nop
in
icebp
sbbl
push
divl
xchg
andl
test
flds
je
sbb
pop
in
sbb
aam
inc
shll
enter
nop
jns
lods
sub
fsubp
cli
add
imul
std
pop
xor
ljmp
jmp
sub
fsubrs
xchg
loopne
dec
pop
cmpsl
int
xchg
jbe
daa
jg
push
out
jle
add
pop
aam
sbb
loope
das
xlat
arpl
enter
xchg
pextrw
cmpsl
cs
and
fdivrp
mov
stc
shll
sahf
ret
sub
gs
lea
lock
push
add
cltd
push
fsubr
inc
push
bt
pushf
sub
loope
ja
push
in
adc
rolb
sub
test
jbe
cmc
icebp
inc
ljmp
sub
sub
into
bound
or
xchg
shr
movd
push
popf
stos
push
jmp
cmpsb
ret
in
add
jnp
dec
adc
pop
sub
shl
cmp
ljmp
pop
aad
dec
lret
rcr
lea
pushf
cwtl
inc
scas
in
jns
cmpsl
jl
push
inc
scas
cld
jmp
push
mov
shlb
into
in
jmp
lahf
add
mov
clc
mov
inc
push
insb
jmp
leave
les
sub
insb
je
sti
std
inc
ret
lcall
dec
push
jmp
mov
jno
mov
mov
cmc
mov
pushf
fisttps
pop
xchg
fsubrp
testl
cld
repz
enter
cld
mov
and
push
mov
ret
mov
stos
xor
stos
scas
imul
lret
inc
push
ljmp
into
push
out
or
dec
out
xchg
jecxz
inc
ret
loope
jmp
push
mov
les
test
mov
popf
dec
sbb
fcmovnb
add
adc
mov
iret
movsb
rcrl
pop
test
leave
mov
push
pop
repz
sbb
fidivs
mov
inc
bound
mov
ja
jecxz
mov
insb
mov
test
aam
mov
jno
ret
mov
js
jne
into
mov
add
ja
aaa
dec
jo
mov
fsubrl
sub
mov
cli
xor
jl
mov
push
and
sbb
and
push
fidivs
pop
mov
stos
ret
xor
test
pop
lret
pop
sub
push
arpl
cmp
push
pop
ss
leave
lcall
int
lds
cld
mov
div
outsb
push
scas
mov
push
nop
ss
loopne
cmp
shr
pop
push
xlat
dec
int
lcall
cmc
es
loope
push
mov
rol
push
sub
mov
std
sub
test
adc
push
in
ljmp
fst
push
test
fs
aam
pop
fisubrs
test
pop
ret
xchg
sahf
xchg
mov
jecxz
shrl
cmp
fstpl
jnp
leave
fwait
and
ljmp
loopne
sahf
stc
sti
cmovle
push
sub
iret
inc
cmpsb
shrl
aad
adc
les
rcr
push
fistpll
mov
or
jne
lods
dec
leave
push
aam
fistps
out
arpl
repz
xchg
cmpsb
xor
xchg
das
aad
jecxz
push
test
xchg
inc
mov
fxch
push
sbbl
pop
jle
in
mov
popf
jle
cmp
cmp
cli
xchg
pop
push
jmp
hlt
xchg
aaa
add
sahf
clc
js
in
sub
cmpsl
mov
cmpb
mov
pusha
and
xchg
into
aad
lret
js
test
popf
cmp
loope
stos
nop
jo
fimuls
test
sti
lahf
stos
fcoml
nop
sbb
loope
push
or
lahf
jge
into
sub
loope
push
in
pop
int
std
jmp
jae
sbb
xchg
movsl
xchg
mov
add
push
shl
in
push
andl
imul
mov
push
lock
gs
std
pusha
dec
loopne
mov
icebp
fnsave
mov
sbb
xlat
jmp
in
lret
pop
leave
mov
cmp
popl
and
push
movsb
enter
outsb
ljmp
lods
in
or
pop
pop
cld
clc
xor
mov
iret
push
out
popf
cmc
gs
add
daa
sub
sbb
add
rcr
inc
or
mull
adc
mov
cltd
in
add
in
lret
xchg
ds
jp
imul
push
std
xor
xchg
sar
lahf
pop
inc
cs
inc
fmull
pop
mov
inc
mov
stos
cmp
sti
out
stos
and
sub
aaa
sbb
loopne
xchg
fstl
call
jp
push
ja
out
leave
gs
xchg
in
ja
into
mov
sbb
pusha
push
mov
sub
adc
aad
add
xlat
addb
add
in
cmp
faddl
icebp
int
ljmp
ljmp
sbb
cmove
inc
shrb
rclb
roll
xor
mov
fs
or
ret
mov
loop
js
mov
cmp
and
inc
mov
aad
out
xor
dec
movsb
push
ret
adc
lods
aam
movsb
xchg
and
jmp
mov
xchg
or
out
push
push
enter
push
dec
data16
dec
cmp
push
call
rcrl
lods
mov
es
xchg
fdiv
pop
call
movsb
rorl
sub
jns
jmp
popf
pop
mov
into
cli
iret
aas
xor
ficompl
pop
adc
inc
loop
push
mov
xor
pop
xlat
adc
stos
add
pushf
inc
add
xlat
sti
mov
stos
mov
push
pop
pop
xor
mov
pushf
dec
int3
add
ja
cld
frstor
mov
jmp
fsubp
das
stos
lea
hlt
dec
int
sbb
xchg
cwtl
rcrl
outsb
bound
xor
push
xor
ret
popa
lock
das
cmp
or
loope
xchg
in
mov
sbb
cli
mov
cmp
scas
fcmove
outsl
les
cmc
add
into
xor
repnz
int
pop
jg
jmp
ret
mov
dec
popf
stc
inc
lcall
orl
jb
jb
scas
dec
cwtl
add
jle
pop
cli
cmpsl
aas
mov
xorl
in
xor
cmp
sub
bound
arpl
arpl
notl
roll
and
mov
xchg
jecxz
gs
adc
mov
cli
dec
adc
mov
fidivl
pop
jecxz,pn
mov
and
inc
rcr
jae
popf
and
mov
loope
sub
push
lret
sbb
test
clc
cs
int
mov
cmp
cwtl
lea
fildll
cld
sbb
xchg
orb
push
cli
shlb
xor
sti
jae
outsl
cs
mov
sbb
xchg
outsl
dec
insl
xchg
pop
cld
test
cmc
and
rorl
dec
ljmp
arpl
and
iret
push
roll
adc
push
or
mov
shl
scas
jecxz
loope
inc
pop
je
mov
hlt
testb
mov
lock
sbb
push
test
mov
pop
hlt
push
fdiv
mov
in
dec
ret
pushf
cmpl
call
insb
movsl
cld
lea
popa
push
aaa
in
outsl
sahf
movsb
lock
out
xor
fmuls
or
jecxz
subb
stc
inc
idivb
clc
sbb
loope
stos
les
lods
pop
inc
call
mulb
daa
insb
hlt
mov
push
xchg
and
cmp
push
sub
ljmp
bound
fbld
jecxz
ljmp
pusha
push
jmp
jle
sub
test
in
icebp
push
loopne
ljmp
lcall
mov
inc
mov
mov
mov
shrl
lds
jmp
xor
mov
fdivrs
imul
and
sarb
sbb
jo
sbb
pushf
dec
sarl
cld
inc
in
mov
mov
repz
nop
shrl
mov
lret
rcr
sti
testl
test
adc
fdivl
mov
ljmp
xchg
adc
push
stos
jo
push
rcrl
inc
sbb
aaa
icebp
cmp
movsb
push
xchg
clc
lret
adc
push
outsb
fs
mov
movsb
movsb
insl
sahf
and
fs
pusha
rcll
cmp
pop
sub
sub
adc
movsl
scas
mov
jge
into
dec
xor
inc
sbb
xchg
aas
lock
movb
stc
pop
addr16
push
movsb
sub
inc
dec
int3
stos
xchg
ret
push
in
in
addr16
and
jmp
js
jecxz
mov
loopne
fnsave
stos
inc
cmpsl
inc
sbb
pop
jp
shlb
ret
fsub
and
stc
pop
in
enter
dec
mov
mov
rcll
movsl
mov
stos
cld
fcom
push
xchg
std
jmp
call
in
jecxz
in
orl
ljmp
mov
fldl
rcll
int
pusha
sti
mov
xor
test
pop
jno
in
jl
and
xchg
lcall
ljmp
repz
inc
int3
lods
mov
shl
push
xlat
fcompl
ja
out
sahf
sti
jmp
into
in
add
push
js
fsubrs
cmp
pop
xchg
jl
pop
addr16
adc
inc
ljmp
sbb
std
mov
scas
test
loopne
inc
or
inc
sar
xchg
bound
repnz
push
dec
pop
test
and
ljmp
mov
and
sahf
xor
jecxz
adc
stos
fstp
mov
ljmp
jecxz
rcll
stos
fiadds
xchg
ja
shr
push
cmp
popf
dec
pop
test
inc
sti
in
and
add
push
leave
jmp
push
and
cmpsb
icebp
mulb
cld
mov
push
lret
sub
cmpsl
mov
ret
adc
hlt
call
cmp
xchg
adc
dec
loopne
xorb
addr16
out
and
adcl
in
cmc
icebp
iret
punpckhwd
fldt
cltd
in
xlat
data16
jne
and
adc
fstpt
aam
push
ror
pop
fs
add
lods
imul
je
sub
mov
ljmp
sub
sbb
cmp
jns
pop
push
cwtl
push
jl
lock
mov
fldt
xchg
scas
into
mov
mov
aam
test
mov
fidivrs
sub
js
fmull
inc
lcall
push
nop
aam
cmp
popf
inc
push
push
sub
mov
stos
pop
sub
mov
loope
inc
lret
iret
mov
data16
shll
pop
je
fisubl
dec
fs
rclb
rol
stos
dec
sahf
sub
aam
std
fstps
fidivs
cld
push
mov
aaa
dec
jno
pushf
cmp
mov
fildll
pop
cmp
mov
inc
dec
aas
lods
sahf
push
pop
pop
inc
dec
ljmp
adcl
xchg
fidivs
lods
in
in
popa
lahf
lea
or
ss
pop
pop
shl
call
adc
fnstsw
mul
rcl
js
or
and
out
pop
mov
iret
outsb
stos
je
imul
mov
sti
cmp
mov
sahf
in
fidivs
scas
hlt
lahf
pop
les
dec
dec
inc
movsl
push
hlt
inc
cs
bound
jg
mov
lods
ficoms
cmp
fisttpll
in
cmp
addb
sub
pop
ret
xchg
cld
adc
addl
pop
in
fdivr
outsb
mov
fmul
mov
mov
push
aas
adc
test
ficomps
daa
out
jge
and
les
adc
mov
outsb
sub
jae
sub
push
sub
dec
add
sub
xchg
xchg
fisubs
loopne
add
pop
shll
push
mov
sarl
fildll
shll
ret
mov
sbb
movsb
stos
lock
stos
popa
push
test
rcr
push
frndint
pop
xor
cmp
into
shll
dec
sub
aam
add
dec
mov
jo
and
ror
rcll
fld1
in
inc
rol
clc
jns
xchg
dec
pusha
adc
jle
fs
cmpb
push
pop
lods
fisubs
ffree
dec
int
jno
mov
int3
pop
lods
stc
pop
sub
fiaddl
loopne
repz
into
jno
add
sub
aaa
ds
mov
pop
out
dec
loopne
rcll
sub
jo
hlt
or
js
mov
nop
cltd
push
cmp
jmp
sti
vmovapd
aad
stos
aaa
jno
inc
leave
rclb
xor
rclb
sbb
jl
push
cmp
das
cmp
cmpsl
shll
jecxz
jnp
pop
jno
add
dec
pushf
fsubl
jge
cmp
lret
or
lods
sarb
mov
cld
adc
cmp
in
cmpsb
mov
mov
sub
and
mov
jnp
and
pop
test
dec
cmpsl
test
push
cmp
in
xchg
andl
xchg
cmp
sub
leave
rcr
into
mov
pop
mov
jo
lcall
loopne
aam
pop
andl
stos
call
pop
movsb
adc
push
adc
call
icebp
sbb
fldcw
xchg
imul
jo
es
and
or
jecxz
mov
pop
cwtl
lret
aas
push
cld
mov
sbb
fisttps
fldenv
adcb
ljmp
sbb
pop
dec
lret
and
ljmp
enter
cmp
lret
inc
or
mov
inc
popf
repnz
mov
ret
loope
call
and
push
in
jl
cld
xor
mov
inc
lahf
push
dec
imul
or
dec
aas
jae
dec
xor
sbb
add
bound
sub
sub
rclb
stos
shll
fidivrs
and
sbb
shrb
sahf
scas
sub
push
das
jp
sahf
cmp
sti
cmpsl
add
adc
icebp
jmp
rol
add
adc
imul
sbb
dec
pop
ret
mov
in
pop
lods
adc
les
ret
jp
bound
jmp
shll
into
pop
test
addr16
in
sub
ljmp
or
or
cmp
jmp
mov
inc
push
icebp
sub
adc
jl
faddl
nop
in
scas
pop
imul
js
lret
sahf
loopne
xchg
test
test
xor
xchg
jl
loopne
adc
data16
sahf
push
outsl
stos
lods
idiv
push
dec
sub
push
out
mov
movsl
push
fs
push
mov
sahf
mov
stos
mov
test
in
movsb
shrl
ret
or
shlb
fstpl
ds
pop
sub
inc
mov
xchg
cli
test
shrb
push
into
aam
pop
lea
scas
clc
push
jae
jno
sbb
ljmp
imul
lahf
xchg
cmp
push
xor
test
ret
jns
cwtl
cltd
mov
out
lock
add
mov
imul
push
stos
mull
sbb
mov
sub
fsubl
and
xorb
call
aad
add
cld
and
stos
jmp
cmpsl
pop
add
and
fnsave
mov
imul
pop
lods
popf
test
loopne
adc
xlat
mov
and
mov
sub
and
lds
insl
enter
mov
sub
js
jno
insb
mov
leave
fwait
adc
imul
sbb
repz
push
icebp
jl
xchg
orb
outsl
add
pop
fs
ret
das
orl
clc
or
cmp
pop
out
pop
cwtl
xor
cli
es
out
and
lcall
mov
or
push
jmp
icebp
mov
into
fisubl
sarl
push
push
xor
xchg
mov
ret
inc
push
push
dec
jnp
pop
mov
adc
push
shrl
push
xchg
or
xchg
cmp
addl
pop
popa
pop
jecxz
pop
fmuls
pop
or
xor
mov
xchg
int
cmp
xchg
in
push
out
mov
sub
shlb
movsl
idivl
xlat
js
ret
jbe
loope
std
repnz
cmp
ret
ret
pop
fisubrs
sbb
ficomps
loopne
rorl
loopne
pop
testb
ret
cmp
dec
decl
loopne
sbb
sahf
sahf
mov
es
incb
iret
push
jle
lret
hlt
jg
sti
mov
dec
fs
fisttpll
mov
fs
in
sub
pop
push
pop
inc
sbb
xchg
jns
idivl
in
lds
and
and
pop
in
jmp
ljmp
and
pop
and
js
mov
cmp
add
loope
sub
jmp
test
adc
add
add
out
sbb
in
dec
cwtl
pop
xlat
and
shl
std
enter
test
stc
data16
or
rcrb
xchg
imull
sbb
jl
sub
add
loopne
movsb
fst
inc
shl
in
out
idivl
push
cld
in
mov
out
aad
sbb
cmc
jecxz
mov
fidivrs
pop
es
mull
mov
aam
vdpps
dec
dec
ror
inc
loopne
loope
push
jno
decb
pop
bound
fisubrs
loope
shl
inc
mov
fisubrs
cwtl
call
adc
stc
dec
orb
fs
mov
push
sub
xor
mov
test
mov
divb
aad
mov
dec
stos
pop
inc
fldt
and
and
cmc
jecxz
shll
mul
pop
push
frndint
lds
mov
jb
cmp
cmc
adc
push
call
stos
bnd
fs
aad
pop
adc
hlt
and
xchg
clc
je
jge
push
stc
sti
ds
lret
cmc
jg
fidivrs
inc
in
inc
push
lock
das
aas
shll
xchg
movsb
add
jae
fidivs
sarl
ljmp
pop
ret
int3
jno
jnp
mov
jne
sahf
mov
pop
and
je
push
into
in
lds
outsl
cmpsl
cmp
loope
in
mov
xor
iret
inc
inc
loopne
fldenv
divb
push
lahf
imul
lret
idivb
in
movsb
xchg
dec
push
repz
xchg
mov
ret
cld
mov
ljmp
dec
sbb
shl
pop
test
mov
sub
pop
push
ds
clc
call
lods
ljmp
aam
mov
popa
and
insb
mov
mov
dec
pop
and
push
daa
mov
push
jne
mov
adc
push
rcl
loopne
push
loope
xlat
test
into
and
push
push
push
icebp
divb
mov
call
and
fstps
popa
mov
roll
push
and
mov
jb
mov
mov
adc
mov
jmp
in
and
stos
jno
es
aam
pusha
mov
loop
mov
mov
mov
lods
sub
cmp
add
pop
imul
pop
push
dec
shrl
inc
mov
fldl
pop
out
fdivrl
add
int
sbb
enter
dec
xor
icebp
imul
mov
shrl
or
cmp
loope
cld
insb
loope
mov
push
xor
fiadds
popf
inc
aad
in
ljmp
dec
pusha
and
pop
and
cwtl
sar
xchg
mov
and
inc
ficoms
add
mov
in
inc
mov
fstps
outsl
fdivrs
roll
sub
sub
cmpsb
adc
and
and
popa
dec
mov
bound
test
push
pop
mov
ret
cld
pop
jle
daa
mov
leave
bswap
jmp
stos
inc
cmc
lea
arpl
xor
fsubl
test
cmc
push
and
loope
sahf
lods
out
mov
imul
scas
cld
scas
xor
cmc
add
push
fisubs
ljmp
test
xchg
in
stos
and
sbb
add
sub
lds
push
repnz
fcompl
push
pop
or
adc
pop
pop
shl
pop
pop
add
in
dec
push
iret
leave
movsl
pop
cld
xchg
loopne
aam
orl
cmpl
fstp
adc
sub
mov
pop
pop
imul
negl
and
in
pop
mov
mov
rolb
flds
jne
dec
and
xchg
add
add
rcll
or
bound
cli
cld
push
inc
fisubrl
push
sbb
sub
pop
out
cld
nop
addl
movsl
jmp
push
jmp
add
and
cmp
mov
dec
loopne
bound
push
lock
cltd
popa
pusha
jb
loope
das
bound
icebp
leave
aaa
fcom
push
jge
jl
les
push
in
push
dec
nop
pop
insb
dec
ljmp
imul
cmp
xchg
test
mov
or
lods
lea
jmp
ds
xor
xor
inc
in
adc
xor
mov
and
into
fldcw
test
pusha
mov
xchg
push
test
cmp
mov
rorl
popa
jp
enter
mov
mov
mov
es
jl
push
mov
mov
dec
rolb
sub
in
xchg
fisttpl
add
loope
or
addr16
and
adc
push
xorb
roll
mov
popl
in
leave
mov
negb
pop
shl
add
mov
xor
adc
mov
fs
icebp
pusha
or
sub
pop
test
adc
pop
test
pop
and
popf
jno
jl
aad
add
adcb
adc
pop
add
fdivp
xchg
xchg
and
stos
aad
sub
sar
out
xor
xchg
icebp
sahf
ja
jle
and
cmp
dec
ds
xchg
mov
popf
xchg
imul
lods
pop
sbb
in
dec
in
pop
inc
jmp
mov
ffree
jmp
bound
fdivp
jp
loope
or
les
cmc
sar
mov
inc
inc
xchg
testb
out
pop
loopne
xchg
cmp
pushf
inc
push
xchg
mov
and
cmp
or
dec
mov
test
push
lcall
movsl
jle
fistpll
test
and
test
fldenv
sahf
and
cmp
push
mov
mov
mov
push
cld
sbb
cltd
mov
int3
jne
push
ljmp
sub
popf
xchg
divb
clc
adc
out
push
jecxz
shrl
fs
add
push
insl
cltd
outsb
mov
shl
stos
and
and
insw
pop
daa
rolb
enter
inc
adc
add
or
dec
xor
inc
xchg
sub
clc
stc
call
cld
lods
cli
loope
jo
pop
test
out
fscale
div
mov
addl
ljmp
fwait
mov
ds
adc
nop
stos
inc
dec
test
sti
hlt
push
fst
stos
stos
call
pop
daa
in
jmp
or
sbb
adc
not
mov
sub
and
sbb
addr16
jo
ret
sub
xchg
fbld
insb
ljmp
cmp
hlt
dec
mov
add
out
mov
or
stos
loop
add
adc
shlb
stos
xchg
sbb
lcall
les
aad
cmpl
jmp
jecxz
rcll
test
xor
pop
xchg
hlt
loopne
inc
xchg
sbb
dec
jecxz
pop
xchg
pop
js
popa
push
rolb
in
lret
hlt
cmp
sahf
lret
loop
sub
mov
cmp
jecxz
jne
les
loope
aad
push
shlb
movsl
jg
and
jmp
rcr
jno
xchg
stc
arpl
call
mov
push
pushf
cltd
movsl
clc
sub
add
lods
int
in
dec
test
fists
mov
mov
leave
aam
arpl
nop
dec
jecxz
dec
int
stos
mov
xor
into
ss
sub
lds
out
fs
and
mov
jmp
mov
mov
test
cwtl
dec
rcr
loopne
adc
xchg
loope
push
int
cltd
lret
cmp
inc
inc
or
std
shr
add
insb
ret
ret
lods
xchg
sub
mov
sahf
inc
loope
jge
fidivs
lods
mov
pop
cmc
cmp
int3
pop
pusha
and
mov
loopne
cld
stc
or
lret
in
aad
push
mov
leave
stos
cmp
outsl
xor
dec
or
fstl
add
lock
dec
stos
icebp
stos
xor
sti
adc
iret
in
inc
fiaddl
data16
dec
stos
cmp
jns
shl
aam
xchg
in
ds
cwtl
ret
clc
test
and
aaa
mov
fisubs
sahf
xchg
and
imull
jmp
push
mov
fnsave
cmpsb
mov
popa
push
sti
and
adc
movsl
test
ja
out
and
cmp
lcall
pop
out
fsubrs
xor
push
sub
clc
mov
mov
mov
push
mov
int
dec
add
jmp
in
and
shll
sbb
movsl
test
dec
roll
enter
xlat
fisttpl
mov
fwait
jnp
aad
mov
jg
stos
ss
jmp
repz
stos
xchg
sarb
jecxz
pusha
push
jbe
hlt
adc
jmp
ret
cmp
cmp
xor
outsl
mov
mov
stos
leave
sub
aad
mov
sub
sub
xor
mov
faddl
xchg
mov
inc
jb
mov
sub
push
daa
jbe
neg
into
aas
xchg
test
rorl
xchg
and
sub
pusha
call
lock
pop
fistpll
test
shll
pop
mov
lock
stos
mov
repz
mov
xchg
dec
add
mov
sarb
lahf
shrb
xlat
cmpsl
adc
adc
and
in
fsts
rcrl
enter
inc
cmp
lret
ja
shrl
js
push
xchg
jecxz
out
xchg
test
lds
pop
mov
aaa
test
sarl
ficoms
lea
sbb
sbb
sbb
loop
cmp
fs
sub
cmpsl
fisttps
dec
movsl
aad
and
mov
pop
fistpll
roll
mov
pop
lea
dec
sbb
mov
adc
or
gs
xlat
push
aad
in
inc
popa
xchg
sub
mov
sub
cs
mov
mov
scas
aad
mov
mov
mov
in
pop
addr16
pop
push
ljmp
rcr
insb
push
and
inc
repz
lret
adc
daa
subb
aad
insb
ds
iret
lods
mov
mov
test
and
out
push
insl
xor
roll
and
sub
scas
test
addl
test
pop
mull
adc
sbb
imull
pusha
push
pop
minps
cmp
mov
dec
je
ficoms
xchg
cltd
rorb
xchg
dec
in
fld
ljmp
adc
addr16
jp
lea
push
adc
insl
inc
pop
sbb
shll
or
jbe
push
out
mov
in
mov
lret
ljmp
sbb
jge
mov
or
leave
dec
lcall
arpl
dec
mov
sbb
jecxz
lret
movsl
into
data16
sar
popa
xor
mul
adc
sub
repz
stos
xchg
xchg
mov
test
mov
push
jle
subb
jmp
mov
rcll
dec
and
mov
or
jne
jmp
xchg
out
cmp
jmp
add
jmp
sub
push
call
loope
sub
sub
call
cmp
add
bnd
in
cmc
push
loope
push
stos
daa
mov
sahf
mov
sbb
loop
xchg
cmp
adc
mov
mov
insl
lahf
pushf
scas
mov
dec
lds
pop
aam
and
ret
jmp
std
aas
inc
sahf
loopne
xchg
pop
pop
xchg
fbld
jae
hlt
push
in
jnp
xchg
es
xor
dec
adc
jl
cld
and
cltd
and
fxch
push
mov
addr16
lods
int3
cmp
arpl
mov
push
sbb
mov
outsl
lock
sti
push
dec
hlt
es
push
xchg
adcb
leave
pushf
insb
push
inc
bound
cld
xor
pop
cld
int
fidivrs
xchg
xchg
bound
jl
or
inc
dec
movsb
xchg
or
icebp
out
insb
add
cltd
pop
je
jne
imul
push
push
rol
mov
imul
addr16
jecxz
cwtl
ret
cmp
pop
imul
pop
adc
adc
and
popa
orl
sbbl
mov
movsl
ds
mov
ret
push
scas
jb
filds
stos
lret
shl
bound
sarb
pop
xchg
insl
pop
insl
push
cmpsl
mov
mov
jmp
adc
repnz
inc
leave
push
bound
frstor
jmp
cmp
lahf
and
je
mov
call
lret
out
sub
jmp
dec
test
mov
mov
sbb
ja
lock
into
fimuls
cmp
es
ret
lret
dec
hlt
stc
in
aad
cmc
mov
shll
daa
xchg
imul
pop
adc
in
sbb
mov
jns
lret
call
cmp
and
in
ljmp
scas
lock
mov
pop
push
ljmp
aam
pop
out
or
call
jmp
cld
ds
loopne
ret
shl
fnstsw
sub
sahf
pop
mov
movsb
cmc
dec
mov
out
sbb
pop
jbe
aam
dec
sub
shll
cmpsb
jg
sub
idiv
fisttps
and
xchg
fstpl
push
clc
call
or
mov
mov
pushf
std
in
cmp
sbb
cmp
inc
ljmp
leave
std
ror
push
incb
mov
mov
ljmp
xor
xchg
lods
sub
or
mov
in
jge
cmc
xorb
add
roll
mov
std
push
fcompl
xor
jg
xchg
pop
pop
fwait
aad
xchg
in
xchg
outsl
or
mov
push
arpl
aad
pop
push
shll
insb
mov
push
hlt
lret
mov
sub
aaa
inc
mov
pop
mov
lret
ficompl
sub
and
roll
push
xchg
or
push
sbb
sub
rclb
mov
pop
cwtl
ret
imul
pushf
fdivrl
ja
hlt
mov
sub
dec
dec
sub
fdivp
mov
jb
sbb
sar
sbb
cli
mov
push
sbb
add
in
dec
sahf
pop
sbb
pop
mov
push
dec
add
xor
cs
xchg
outsb
call
pop
cmc
jnp
adc
jae
push
sub
xchg
cmc
cmp
shll
adc
mov
out
pop
shll
ljmp
and
and
mov
mov
nop
sbb
outsb
jecxz
hlt
popf
inc
cltd
and
sub
mov
in
rolb
jmp
push
push
push
loopne
arpl
std
inc
xor
repnz
cmp
leave
decb
in
in
cmovae
push
loopne
test
adc
mov
adc
lods
shll
fldl
insl
and
int
fcompl
repz
mov
push
push
clc
sbb
sub
lret
pop
test
xchg
js
mov
mov
outsb
imul
sbbl
xchg
test
mov
mov
push
adc
stos
ret
mov
cmp
dec
cli
xchg
inc
test
xor
jecxz
pop
xor
data16
jecxz
xor
lock
pop
in
mov
inc
int
adc
add
rcl
mov
lock
es
sqrtps
sub
lods
das
dec
test
in
jg
nop
adc
lock
inc
mov
cmp
mov
not
cmpsb
xchg
adc
lcall
cmc
loopne
mov
aam
xchg
cmpsl
pop
fnstenv
mov
adc
cmp
xor
adc
push
fincstp
or
fldt
in
ds
lock
fisubrs
out
ja
and
push
cwtl
outsl
stos
mov
add
sub
jmp
xor
push
fiadds
test
fstp
inc
bound
xchg
cli
sub
daa
xchg
add
lock
mov
cli
sahf
clc
iret
push
outsl
xchg
lds
push
add
xchg
stc
test
lahf
push
dec
icebp
cld
push
add
mov
sti
dec
jbe
daa
xchg
outsl
mov
out
mov
inc
inc
test
adc
mov
cmp
xorl
test
jg
je
pushf
loopne
dec
cmpsl
in
pusha
scas
mov
sbb
ret
leave
std
jmp
pop
movsb
add
lock
cmovbe
rcl
stos
inc
pusha
and
fidivrs
adc
or
aam
mov
std
push
lods
dec
inc
shrb
clc
cmp
aam
xchg
and
xor
loopne
aam
xchg
out
incl
cmc
pop
mov
test
dec
cmp
xchg
arpl
call
in
xchg
mov
xor
mov
add
pop
testl
pop
ret
fnstsw
jecxz
mov
dec
and
test
loopne
xchg
cld
jns
loopne
bnd
cltd
and
xchg
xchg
inc
and
mov
mov
xchg
loopne
push
bnd
pop
jb
and
scas
mov
and
loope
bound
hlt
cld
mov
mov
mov
mov
in
adc
fcoml
mulb
xchg
pop
pop
adc
inc
lahf
cmpl
imul
ret
hlt
inc
adc
xchg
dec
in
cmp
sub
lret
jecxz
xlat
push
pop
shll
movsb
into
movsb
in
stos
fsubp
test
into
ja
inc
fstp
js
adc
call
xchg
sub
fsubrl
sti
mov
mov
out
or
sub
in
adc
or
jl
mov
jmp
cmpsb
std
xchg
push
inc
add
aad
sbb
inc
and
cwtl
dec
mov
movsb
jg
bound
jno
xchg
adc
cmpsb
into
jae
fcmovne
jg
mov
jecxz
lcall
aas
push
xchg
mov
cmc
lahf
push
out
rorb
cmp
das
inc
fstpl
les
mov
jg
or
adc
mov
insb
sub
pop
xor
inc
and
xchg
pop
stos
les
aaa
fcmovnbe
jnp
cmpsb
jge
cmpsb
ret
test
pop
xlat
push
sub
jecxz
mov
clc
mov
lcall
int
adc
in
pusha
pop
ljmp
jecxz
and
lock
bound
mov
imul
in
pop
push
mov
data16
jmp
adc
jmp
pop
pop
std
jle
cwtl
jne
dec
popa
cltd
xor
cmp
js
clc
test
sarl
adc
fxtract
xchg
out
mov
fsubp
jmp
and
jmp
jno
cmp
imul
imul
cmp
sub
add
cltd
insb
cmpb
inc
shlb
fsubl
adc
dec
std
clc
in
testl
or
mov
xchg
sub
out
shll
fsubp
and
push
call
out
inc
aas
sbb
push
rol
movsl
cmpl
ffree
sbb
sbb
ss
mov
mov
ret
fldl
dec
stos
cmp
cmp
call
jbe
sahf
cmpsb
xchg
les
iret
leave
out
cmp
inc
add
aaa
push
jnp
mov
shlb
jecxz
ss
lret
mov
inc
dec
xlat
pushf
adc
dec
and
icebp
hlt
and
shll
into
push
arpl
and
sub
inc
mov
pop
enter
imul
jbe
jecxz
add
push
cld
shrb
aaa
pop
ja
subb
bound
ret
or
xchg
into
negb
sub
mov
into
or
inc
push
mov
insb
out
fidivrs
bound
std
fsubrp
jp
inc
and
and
pop
shll
outsb
arpl
lods
pop
jne
dec
insl
int3
icebp
lock
push
dec
rorb
pop
dec
push
call
stc
cwtl
sbb
sar
cmpl
into
add
add
ljmp
insb
or
ret
or
xor
cld
hlt
stos
xor
test
movntps
pop
in
sarl
test
aad
adc
cmp
out
in
popa
ffreep
loopne
out
movsb
fs
aam
mov
mov
and
inc
popa
jb
push
int
pop
jg
or
flds
add
shlb
adc
mov
jle
or
lods
dec
mov
test
into
arpl
idiv
shll
adc
pop
push
inc
shrl
gs
dec
out
add
pop
pop
gs
xchg
inc
test
push
add
push
lahf
mov
fisubrs
popa
mov
jg
outsl
pop
lcall
sbb
es
lahf
subb
mov
xor
shl
stos
inc
sub
ret
popf
hlt
xchg
jecxz
ret
sbb
ja
shrl
out
hlt
pop
fcompp
out
pop
inc
push
cmpsb
les
out
jbe
leave
mov
movsl
aad
les
popf
orl
lock
fildll
fs
xor
and
shrd
mov
loopne
loope
or
mov
sahf
cld
insb
jmp
or
jmp
push
bound
ljmp
lret
xor
xchg
pop
push
fcoms
adc
jno
lock
push
adc
xor
mov
dec
sbb
leave
loopne
cmp
sbb
xor
and
loopne
cmp
fs
add
fstps
push
mov
lock
lcall
rorl
lods
dec
out
fisubs
adc
jns
jecxz
les
mov
push
push
mov
mov
jnp
lret
adc
loop
mov
jg
mov
in
aaa
stos
sub
fimuls
xchg
mov
in
bound
mov
ret
das
add
fldl
in
xorb
inc
jle
popa
sub
mov
nop
fiadds
in
cld
sarb
mov
jge
dec
pop
les
xchg
dec
sbb
ret
in
jmp
in
test
dec
fldcw
adc
stos
rcll
cmc
xorb
loope
in
shll
clc
xor
sub
ficoms
scas
cmc
fsin
add
stos
cmpsb
fisubrs
fisubs
mov
dec
popa
rcr
mov
pushf
in
pop
shl
sahf
and
push
pop
enter
out
sub
sahf
mov
in
dec
cli
mov
cmc
in
movsb
fcompl
lods
data16
incl
mov
es
mov
mov
jns
stos
or
xchg
adcl
push
sar
enter
fxam
daa
inc
movsl
xchg
imul
mov
testl
les
and
aad
nop
lods
pop
fistpll
mov
gs
mov
push
push
je
ret
push
xchg
cmp
leave
movsb
and
cld
in
in
shll
shlb
push
pop
out
cmpsb
dec
movsb
pop
shl
icebp
jg
cmp
testb
out
mov
frstor
dec
push
iret
pop
aad
push
ss
mov
shll
cmpsl
mov
sarb
xor
js
lcall
jo
and
jae
ljmp
scas
pop
push
and
jle
or
call
call
jg
movsb
inc
call
imul
pop
pop
inc
popf
add
std
not
test
popa
js
mov
push
iret
fwait
dec
mov
add
in
insb
dec
pushl
out
idivl
xorps
xchg
xor
jae
ret
pop
shll
rorb
bound
aam
data16
mov
mov
add
xchg
xchg
mov
ss
push
pop
and
inc
sbbb
aam
jo
scas
into
jg
or
mov
dec
js
fldpi
mov
in
add
aad
aam
std
stc
cmp
jmp
inc
mov
lcall
add
jno
jnp
shl
bound
cltd
xlat
mov
mov
jnp
pop
jne
jmp
push
enter
mov
jae
bound
lcall
into
int
jecxz
test
fcoms
sub
into
jno
mov
xor
pop
jle
outsb
inc
ja
test
pop
ret
sub
bound
or
loopne
shlb
scas
sti
pop
les
add
lret
fmulp
xchg
xchg
fstpl
sti
sbb
jecxz
in
pusha
dec
mov
cltd
clc
in
fisubrl
test
add
shl
add
inc
mov
jecxz
jl
sbb
cld
mov
rorl
js
fildl
sti
iret
mov
int
sbb
cld
sbb
or
pop
aad
jg
test
ljmp
and
in
rorb
jle
xchg
xor
xchg
jnp
and
movsl
dec
dec
repz
jl
shrb
push
leave
mov
dec
lock
cmp
in
js
mov
aaa
pop
cmpsl
mov
mov
dec
adcl
aad
repz
xchg
mov
stos
push
arpl
loope
xor
and
push
clc
fs
adc
stos
ja
adc
shr
push
fisubs
pop
ret
xchg
jge
cmp
xchg
jle
jb
pop
and
fld
sub
data16
pop
or
pop
mov
test
xlat
push
leave
in
lea
pop
xchg
add
leave
pop
xchg
aas
imul
lods
fdivrs
clc
imul
cltd
fs
clc
outsb
movsl
xchg
xchg
ja
in
int
aad
push
and
hlt
dec
loope
jmp
sub
rclb
mov
ret
ja
in
dec
mov
sarb
call
scas
push
fld
ret
xor
mov
pop
fistps
mov
xchg
insl
mov
mov
add
or
push
das
leave
push
popa
dec
fs
lock
rcll
imul
rcr
pop
mov
sub
cmpsl
jbe
xchg
in
xchg
test
push
in
push
mov
jmp
dec
sub
loopne
inc
bound
fisttpll
in
mov
cmp
sbb
xchg
and
push
fstps
cmp
insl
xor
in
mov
data16
add
pusha
adc
sahf
int3
nop
sub
stc
lcall
addr16
mov
xor
pop
or
push
test
ret
adc
rcr
sahf
xadd
dec
sub
sub
add
mov
jg
stos
repz
rcll
adc
fstps
and
arpl
dec
movsl
in
add
sbb
mov
fstpt
cmp
arpl
fisubrs
lret
lea
clc
jne
jg
inc
sbb
cmpsl
jae
jo
adc
adc
frstor
lock
lahf
sarl
lods
push
jmp
or
cmp
dec
into
adc
sbb
movsl
mov
stos
roll
pop
xchg
adc
xchg
jmp
inc
jne
shl
subl
jb
mov
daa
xchg
adc
jmp
out
hlt
push
pop
out
mov
imulb
xor
cli
cmp
ror
je
jae
sub
and
push
ljmp
inc
cmpsb
inc
inc
orl
ret
int3
shrl
push
xor
cmc
lds
jo
vpcmov
out
push
pop
mov
int3
sahf
mov
sahf
jne
push
inc
hlt
stos
jo
fcomps
sub
pop
and
test
push
push
adc
sbb
aas
xchg
mov
mov
data16
das
mov
fwait
push
push
mov
shrl
sub
mov
fiadds
jmp
popl
mov
push
sahf
std
int
push
cmp
and
pop
jl
mov
cmp
daa
push
inc
in
and
mov
sub
shl
icebp
sarb
lock
adc
andl
in
jp
aad
or
sub
cmp
arpl
lods
clc
inc
mov
sarl
mov
shll
insl
mov
xchg
xlat
loop
in
cld
push
dec
out
jp
jle
lcall
fidivrs
mov
jb
xor
mov
mov
cmp
enter
add
mov
jns
adc
cmp
mov
cmp
push
lahf
lock
push
adc
mov
inc
stos
cmp
aas
sub
add
sbb
mov
adc
fcoms
fld
shrl
ret
xchg
pop
push
testb
loope
and
sti
lret
cmp
ja
sub
push
lods
bound
or
mov
loopne
int3
ljmp
or
xchg
jne
imul
push
jl
scas
and
push
pushf
call
cld
aaa
pop
and
repz
and
stc
ja
pop
and
pop
outsb
cld
mov
loopne
les
pop
lods
pop
ss
rolb
pop
sub
rol
mov
inc
jnp
sahf
data16
push
sub
movsb
sbb
loopne
jge
sbb
push
mov
ret
mov
sub
sbb
ret
gs
ret
add
negl
icebp
movsb
in
jno
mov
pop
les
jo
sub
push
bound
pop
mov
cmp
js
lds
xchg
push
arpl
push
adc
in
andl
dec
pop
cmp
iret
xor
pop
int3
or
sahf
cli
and
jnp
pop
and
or
mov
mov
mov
iret
ret
push
xor
out
lahf
jp
cmc
sbb
jle
xchg
call
jbe
orl
aaa
xor
fcomi
fimuls
pop
dec
jecxz
in
fidivrs
lock
fidivrs
inc
xchg
add
sarl
xchg
movsb
lock
push
cli
jg
cmp
sub
pop
mov
jns
and
mov
icebp
fiadds
ss
mov
data16
cmpsl
aam
jbe
out
mov
cmp
sub
out
les
shr
data16
lcall
jecxz
data16
data16
lock
ret
mov
jno
jb
push
imul
cmp
loope
test
in
enter
sub
push
push
mov
pop
jns
push
into
enter
sbb
loope
push
lock
in
rorl
loope
mov
in
mov
mov
std
mov
and
mov
ljmp
xrelease
adc
or
aaa
sub
cmp
ffreep
and
mov
jecxz
popa
fistpll
mov
sub
xchg
in
ja
jg
into
adc
into
fstp
popf
inc
adc
adc
pop
mov
add
mov
cmp
fimuls
in
cmpl
stc
lods
stc
in
push
cmp
shll
in
mov
mov
pop
sahf
add
icebp
cmp
in
mov
les
loopne
push
and
push
testl
push
mov
sub
stos
pop
sahf
push
jae
pop
cmp
fsubl
mov
fldl
mov
dec
push
sub
add
sar
pop
xchg
cmp
sub
fimuls
js
repnz
aad
fisubrs
les
sub
imul
popf
aam
arpl
dec
int
fbld
dec
add
lods
popa
push
jnp
xchg
je
ss
fldcw
push
adc
ficoml
insl
mov
inc
mov
imul
sahf
cmpb
sub
push
push
in
fnstcw
lret
dec
xor
outsl
sub
cmp
inc
mov
cli
imulb
inc
int
xchg
jecxz
mov
inc
sbb
clc
nop
add
in
mov
mov
daa
hlt
dec
sahf
stos
addr16
in
sub
cmp
sahf
mov
cld
cmpsl
lds
fnsave
ss
cltd
dec
xor
push
mov
mov
fisubrs
xor
hlt
lret
addb
cs
imul
shl
movsb
mov
push
shl
lahf
cmp
rorl
fstp
rcll
faddp
push
sahf
mov
push
stos
sahf
ficomps
push
test
cs
or
jb
mov
adc
bound
jns
xchg
jmp
loope
fcomip
faddl
cwtl
pop
jbe
orb
cmp
push
mov
stos
aad
and
add
sbb
dec
test
pop
jmp
scas
jb
sbb
arpl
cmc
mov
rorl
mov
mov
push
mov
inc
dec
mov
xor
push
push
into
jb
sti
inc
shrb
out
jmp
into
out
cmc
add
xor
fs
push
lea
ljmp
mov
movsb
ljmp
add
push
in
cmpsl
in
cmp
mov
xor
ss
cmp
inc
sub
pop
jb
test
shr
cmp
inc
in
popf
jge
sti
push
push
addr16
mov
scas
jo
sti
mov
and
negb
mov
out
cmp
cmpsl
fldl
jge
imul
push
notb
out
push
shll
loop
scas
push
cmp
mov
cli
jecxz
mov
test
dec
es
jmp
aad
popa
push
loopne
in
test
pop
push
jbe
jle
movsb
jno
icebp
jno
mov
push
fnsave
mov
pop
sbb
cwtl
fldcw
and
pop
sub
data16
addl
test
pop
ds
data16
sbb
imul
sub
cmp
add
dec
jmp
or
mov
push
sub
icebp
gs
test
mov
adc
lock
jno
popl
xchg
test
call
or
mov
dec
out
in
jmp
add
fucomip
ljmp
lds
leave
stc
fildll
or
fs
sub
in
stos
pushl
mov
and
in
sahf
xchg
hlt
jmp
sub
sti
and
sub
bound
sbb
in
sbb
jnp
out
mov
call
testb
sub
and
scas
aam
ds
in
lret
mov
mov
imul
movsb
aad
dec
fstl
push
in
fstps
movsl
hlt
test
ret
inc
push
jne
test
dec
sub
lret
xor
mov
roll
add
arpl
fisubrl
cmp
bound
shl
xchg
out
mov
xchg
aam
xchg
pop
cmc
sub
mov
ret
jnp
or
leave
add
lds
pop
loope
aad
cmp
or
lods
out
fists
jecxz
aaa
insl
rclb
aam
sub
mov
sub
inc
in
cld
xchg
add
lea
mov
jnp
shl
push
adc
or
int
fs
and
sub
pop
sbb
lods
push
xchg
mov
sbb
movsb
das
call
jmp
mov
push
mov
sbb
inc
push
cs
pushf
add
sti
test
lahf
xchg
sub
jnp
sti
ret
bound
shl
push
inc
lea
jmp
push
stos
and
stc
lock
notb
sbb
sbb
andl
movsl
cld
jae
adc
mov
xchg
push
or
mov
mov
mov
xor
popf
jle
popa
add
or
icebp
and
test
jmp
subb
aad
push
mov
or
shrb
daa
push
lock
cmp
jecxz
ret
or
arpl
pop
pop
aam
lock
aaa
push
pop
and
jb
cmpsl
fs
hlt
sub
xchg
lahf
loopne
test
jmp
lods
cwtl
mul
sti
adcl
mov
and
fdivrs
scas
ret
pop
pop
fldcw
sub
xlat
data16
dec
stc
leave
leave
popf
jmp
add
js
cli
notl
clc
mov
inc
xchg
stos
rcr
inc
xchg
icebp
loope
ljmp
scas
shll
loop
loope
or
lahf
mov
scas
hlt
sbb
mov
in
insl
mov
call
dec
jg
push
xchg
sbb
repz
outsb
push
add
add
mov
dec
divb
faddl
psubsb
aad
push
aaa
or
aad
pop
into
mov
xchg
inc
ret
pop
mov
cmp
push
clc
or
stos
mov
sbb
xchg
sub
mov
jecxz
icebp
xchg
int3
out
in
repnz
inc
les
mov
rdmsr
mov
adc
jno
push
sub
cmp
mov
or
subb
je
aad
adc
xchg
in
in
sbb
roll
pavgb
sbb
addl
adc
or
stos
ret
sti
movsb
int3
xchg
mov
xchg
and
adc
push
sub
cmp
pop
mov
pop
sti
fisttps
out
adcb
fiaddl
in
jl
pusha
sub
cmp
scas
cmc
incl
mov
and
cld
inc
xlat
jl
xor
adc
pop
inc
fmuls
std
push
jno
pop
clc
mov
lods
xchg
cmp
out
adc
adc
ror
shr
sub
sti
test
jl
lds
in
cwtl
cmc
sbb
sub
cmc
and
shl
scas
cmp
pop
mov
leave
jns
adc
rolb
xchg
push
pusha
mov
out
std
fmuls
sub
dec
push
cmp
bound
pop
ja
andl
idiv
push
aas
mov
xor
out
fists
out
push
jb
and
and
xor
fildl
movsl
pop
mov
movsb
xchg
sub
in
aad
and
in
fcomi
stos
imul
mov
or
mov
aam
cld
mov
imul
sub
dec
popa
push
shll
shlb
and
jle
mov
andl
arpl
jmp
bound
or
cmp
pop
pushf
mov
ljmp
xor
shrl
into
int
mov
pusha
xor
insb
shl
add
ja
out
push
adc
push
dec
and
movsl
repz
push
xchg
subb
fs
mov
dec
pop
insl
aad
push
lds
mov
sub
xchg
jmp
pushf
dec
inc
clc
je
inc
pop
inc
ja
and
adc
lock
fs
inc
push
fldenv
mov
out
imul
xchg
pop
in
inc
inc
out
cwtl
and
out
and
loope
fs
adc
pushf
cmp
cld
adc
cltd
push
cmp
rorb
inc
xchg
sbb
bound
aam
jmp
fcomip
mov
sbb
dec
ljmp
mov
mov
mov
scas
cmp
xchg
and
cmc
pusha
mull
mov
movsl
shlb
ljmp
mov
rorb
jl
fdivp
push
adc
sub
arpl
call
jnp
dec
sbb
sti
pushf
adc
jmp
aam
outsb
sub
mov
xlat
out
leave
jle
mov
in
stc
push
aad
rorl
es
mov
push
rcll
jmp
push
call
inc
pop
pop
xchg
xchg
das
cmp
fidivrs
inc
xchg
popf
mov
ss
add
mov
ret
xchg
dec
ret
inc
mov
ljmp
jg
sub
push
das
or
rcrl
pop
push
push
arpl
xchg
xchg
es
xor
stos
imul
cmp
fs
sti
push
mov
rorb
dec
or
and
push
or
xor
stc
call
push
int3
inc
sub
icebp
sbb
cli
cli
push
inc
sahf
shl
mov
push
inc
push
sub
ror
mov
stos
mov
xchg
aas
xlat
cmc
je
xor
xchg
ss
sub
dec
mov
and
mov
and
into
mov
or
ficomps
mov
pop
dec
leave
pop
clc
loope
cld
ret
push
jno
mov
test
jecxz
addr16
hlt
and
ja
push
sahf
or
scas
jge
mov
pop
stc
fstl
iret
decb
inc
cmp
fdivrp
xchg
shlb
sahf
call
test
push
pop
mov
movsl
pushf
imul
jb
insb
scas
inc
push
movsb
loopne
popa
out
push
xchg
in
cli
xchg
aad
cmp
cltd
sti
out
and
cmp
jne
sub
loope
loopne
mov
je
js
loope
clc
jmp
lds
or
das
push
and
push
xchg
ret
cld
push
mov
adc
fnstsw
adc
pop
dec
mov
sub
mov
fdivp
loope
cld
iret
js
rcr
mov
lds
sub
push
xchg
imulb
inc
ljmp
data16
scas
loopne
xchg
mov
add
repz
clc
stos
jl
or
inc
lock
and
lret
js
js
mov
sub
jmp
sbb
repz
hlt
sub
jecxz
lea
cld
add
out
jne
inc
pop
sub
xchg
inc
shll
ds
xchg
inc
rclb
push
push
dec
insl
and
xchg
cmp
data16
push
hlt
ss
pushaw
in
loope
sub
aaa
inc
adc
push
sub
iret
lods
shlb
adc
das
cmc
lock
push
in
daa
xchg
jl
adc
lret
in
cld
sub
inc
cmp
and
ja
mov
sub
push
arpl
adc
push
out
mov
popa
out
aad
mov
push
loope
push
jg
jmp
aas
lods
shrb
inc
pop
stos
dec
sbbl
sub
addl
xchg
fs
jl
ljmp
shrb
stc
stos
or
shr
movsl
mov
iret
cmpsl
lret
inc
cwtl
mov
and
pop
les
adc
in
fdivrp
ljmp
ds
hlt
push
inc
cmpsl
out
out
jle
mov
outsb
pop
sub
mov
ja
out
adc
inc
test
idivb
into
mov
dec
popa
faddl
inc
dec
out
xor
adc
je
push
vlddqu
fwait
or
aam
adc
jnp
sbb
fs
mov
loopne
fildl
add
lods
out
icebp
xchg
and
inc
aaa
shlb
jle
mov
jl
and
adc
lret
push
cmp
adc
lea
stos
mov
testb
dec
je
in
sbb
and
and
jg
mov
ja
test
shll
out
mov
jp
push
inc
add
popa
xor
daa
sub
test
out
inc
mov
iret
sub
dec
add
sbb
or
rcr
mov
int3
lea
cmpb
mov
lea
cmp
ret
lock
cmp
cwtl
movsb
adc
dec
sbb
xchg
cltd
sub
cs
out
dec
jnp
and
xchg
inc
popf
mov
test
xchg
shl
inc
outsl
in
cld
push
cmpsl
addr16
outsb
and
arpl
push
lea
stc
sub
dec
ret
push
fsubrs
jns
ret
adc
js
xor
push
test
js
sbb
jb
xchg
lds
sub
call
and
data16
rcrb
cld
out
sub
test
out
sbb
fucomi
dec
cmpsl
mov
aas
xchg
repz
push
mov
stc
cmp
push
mov
jl
mov
xor
and
iret
stc
cmp
lods
or
mov
jp
lds
and
push
pop
lods
sub
mov
leave
pop
mov
jne
ret
push
and
push
into
test
pushf
xor
mov
mov
push
mov
fisubl
push
and
ret
push
mov
adc
fisubs
sub
adcl
daa
xorl
sub
cld
aas
xchg
cmpsl
xor
dec
ss
dec
sub
stos
lret
loopne
nop
jne
jecxz
fs
aas
mov
enter
out
cmp
adcb
xchg
adc
mov
shl
test
sahf
fisubs
or
inc
in
xorl
pusha
xchg
mov
shl
mov
push
push
or
jecxz
or
pop
lock
mov
movsb
mov
test
stos
and
ficoml
loope
xchg
addr16
in
stc
mov
cltd
rorb
test
out
insl
sbb
cmp
in
lock
loope
stos
cltd
mov
pop
xchg
push
cmpsl
fiadds
ret
pop
mov
out
cmp
jb
in
bound
sahf
and
sbb
pop
push
xlat
inc
cld
icebp
sub
fcomps
jl
std
test
and
jle
mov
cld
sbb
movsb
outsb
xchg
add
sub
xchg
sub
xor
jnp
mov
mov
add
jmp
mov
clc
cmp
nop
fs
divb
sbb
cld
in
mov
sbb
lock
les
jmp
cmc
cmp
adc
icebp
in
push
or
jmp
shrb
mov
sbb
sub
push
xor
out
fucomp
into
sub
jmp
arpl
pop
push
xor
dec
sarl
cmc
or
out
xchg
cmc
push
and
add
stos
leave
movsl
aad
pop
imul
popf
xor
mov
xchg
push
jmp
push
lahf
ret
and
xchg
mov
addb
fidivrs
repz
add
outsb
jae
xchg
std
dec
sub
nop
or
mov
fiadds
fdivrl
xchg
push
pop
loope
mov
rcl
fstl
shrb
push
mov
aam
hlt
cld
push
into
outsb
mov
shl
or
dec
jmp
test
fs
bound
dec
hlt
jns
cmpsb
test
clc
shr
and
dec
adc
das
inc
sti
cli
or
push
xchg
and
jne
sub
dec
mov
add
enter
mov
shll
in
adc
mov
xchg
jge
sbb
sub
mov
pop
push
loopne
jnp
cmc
movsb
push
test
push
shr
pusha
inc
shrb
jmp
jmp
ret
inc
jmp
adc
add
icebp
pop
das
or
cmpsl
enter
adc
loopne
test
in
and
iret
mov
cltd
sbb
mov
mov
cmpsl
or
fimuls
mov
inc
dec
test
in
jmp
int3
leave
insb
push
xor
xchg
popa
lock
jno
dec
dec
test
jno
sti
lock
aad
cli
shll
pop
inc
dec
pop
rcrl
sbb
shrl
stos
push
xchg
cmp
push
lds
push
cltd
and
mov
cmp
ds
les
mov
ss
jbe
gs
sub
ficoms
inc
push
aam
jecxz
pop
clc
flds
fisubrl
into
lea
add
aam
push
popw
mov
lock
fcmovnbe
xchg
push
clc
jmp
mov
and
xchg
pushf
xchg
popa
ja
sbb
jb
test
icebp
push
lock
fbld
mov
push
jg
add
mov
inc
push
mov
movsl
xor
and
clc
push
pop
jmp
daa
fisubs
test
xor
xchg
fdivrp
sub
in
cmpsl
fmuls
mov
call
inc
dec
mov
dec
sub
xor
push
pop
push
clc
test
sub
cmp
fbstp
jmp
mov
adc
xchg
bound
inc
mov
lods
ljmp
xor
hlt
push
popa
mov
inc
jge
pop
push
in
loope
fimuls
icebp
jmp
sbbb
and
sahf
fisubrs
daa
stos
mov
cld
bound
cmpsl
aaa
lcall
les
aam
cli
xor
adc
ljmp
testb
cmpsl
in
fucom
int3
bound
mov
and
je
push
adc
mov
xor
xchg
push
shl
cld
push
or
or
insb
mov
in
aad
clc
lods
sbb
xor
in
mov
loope
fsubrs
jmp
xchg
jecxz
subl
dec
rcl
dec
mov
mov
addb
push
adcb
clc
cmp
into
daa
inc
in
or
ljmp
out
adc
sub
imul
adcl
xchg
inc
jbe
jl
push
add
shr
pop
mov
push
hlt
sub
movsl
inc
pop
ret
pop
cmp
into
pop
fildl
subb
xchg
xor
inc
push
mov
movd
xor
cmpsb
mov
ret
mov
jmp
cld
cltd
and
iret
jmp
stc
fcoml
ljmp
inc
movsb
push
jle
repnz
insl
fdivr
cmp
popa
push
inc
push
pop
xchg
pusha
test
sub
fsubrs
enter
sahf
test
insb
sbbl
xchg
or
testb
and
fsubrs
rorl
shrb
xchg
lods
cld
lahf
int
add
cmp
mov
and
scas
mov
cmp
in
ret
inc
out
jne
aad
cmp
and
hlt
loope
and
mov
adc
rolb
or
mov
arpl
mov
iret
das
or
pop
xchg
and
mov
pop
pusha
jmp
xchg
pop
adc
lods
loope
ljmp
pushf
mov
jno
jge
xor
cwtl
call
lods
ret
jecxz
mov
mov
rclb
or
in
cmp
push
clc
pop
shll
jnp
push
push
dec
ja
push
inc
dec
mov
mov
jl
push
fisubs
push
jp
mov
sbb
mov
sub
fadds
fcompl
add
scas
ret
pop
push
arpl
adc
mov
in
inc
jbe
jns
pop
sarb
cld
cmp
dec
pop
fidivl
mov
cmp
into
test
pop
pop
mov
lahf
sub
into
aam
pusha
in
mov
arpl
jno
shlb
mov
out
fnstsw
push
rcrb
ds
int3
stos
jno
or
aam
into
adc
test
loopne
cld
cwtl
sbb
ds
mov
in
addl
orb
xor
enter
mov
cmpsb
pop
dec
cmp
test
addb
mov
ret
decl
and
pop
or
in
cld
pop
jg
shr
xor
rcl
push
scas
sub
arpl
aad
jge
mov
je
repnz
pop
push
shll
test
mov
shrl
out
hlt
cwtl
xchg
cld
inc
xchg
sub
in
adc
stos
xor
xchg
mov
push
sbb
shrb
inc
mov
cld
xor
test
pop
mov
xchg
pop
sub
mov
jb
add
aam
cwtl
dec
movsb
movzbl
stc
and
mov
cld
cmp
adc
hlt
or
add
into
mov
popa
cmp
jbe
xchg
inc
test
into
sub
fmull
dec
or
inc
stos
mov
sti
das
add
insl
cmp
clc
sub
js
ret
add
cmpl
fadd
adc
ret
iret
icebp
push
cmp
pop
mov
bound
aam
ljmp
shlb
jb
and
push
in
fwait
nop
aam
fs
frndint
test
out
shrl
mov
mov
fiadds
enter
je
pop
nop
lret
les
jno
fcompl
mov
in
xlat
jb
repz
inc
std
neg
pusha
mov
mov
mov
popf
cmpsb
push
movsb
mov
pop
or
pcmpeqw
dec
cli
scas
mov
rorb
test
mov
and
jle
and
xor
aam
cmp
sbb
lfs
xor
fimuls
jle
mov
cmpsl
xchg
and
xlat
cli
xor
xchg
cld
sbb
jge
push
imul
fldenv
push
aaa
stos
int
scas
cmpsl
test
repnz
xor
push
sti
sbb
iret
or
lcall
pop
push
loope
push
stos
inc
fistps
mov
and
cwtl
ja
sbb
ret
in
fs
jmp
xchg
xchg
test
pusha
add
jno
sbbb
fcos
pop
inc
ret
xchg
insl
pop
inc
jmp
popf
sub
test
bound
sar
and
rcrl
out
jl
lahf
or
sbb
lahf
cmc
insb
or
mov
push
mov
out
call
mov
and
ret
sbb
and
mov
in
mov
ficompl
test
jns
add
in
fistl
and
shrl
test
xorb
cmpl
divb
aam
neg
and
xor
scas
jno
jp
cmp
adc
cmc
xor
mov
in
aas
xor
cmp
sub
dec
dec
in
lods
sbbb
push
adc
sub
es
imul
fcomps
cmpsb
pop
pop
jno
sbb
test
loope
xor
xchg
push
ss
mov
jne
and
cld
call
fmuls
hlt
icebp
push
mov
mov
mov
mov
jmp
shrl
imul
push
fisubrs
mov
ffreep
jle
ljmp
jmp
mov
push
outsl
mov
insl
xor
push
cwtl
cmpsl
call
jb
in
xchg
in
test
pop
jb
jb
xchg
loopne
pop
inc
test
mov
sbb
ljmp
iret
leave
nop
inc
mov
paddq
mov
das
cmp
lahf
jle
mov
fisubs
testb
out
mov
sub
fldt
repz
ficompl
adc
push
and
scas
mov
stos
cli
sub
js
pop
adc
lret
push
jo
lods
je
dec
mov
pop
pop
je
enter
push
lahf
sbb
push
push
out
sbb
data16
sub
jo
fsubp
aad
xchg
jno
cld
subb
xor
mov
inc
arpl
ljmp
mov
stc
cld
shlb
and
xchg
adc
jb
sub
fbld
fs
test
ljmp
cld
in
pop
sahf
inc
jle
and
mov
popf
out
push
les
jp
aam
lahf
std
fcomps
mov
mov
mov
jp
inc
mov
jmp
inc
fsubrp
roll
sub
in
aad
inc
fstl
push
xlat
repz
push
fisubrs
test
inc
lcall
cmp
es
iret
add
fsubp
push
fisubl
add
pusha
adc
dec
rcl
out
mov
jecxz
daa
fdivrs
cli
fmul
enter
push
stos
out
or
icebp
les
pop
mov
out
lods
call
jnp
aas
ja
cwtl
lods
mov
and
ret
out
js
shrl
ss
sti
push
push
mov
popf
sarl
mov
clc
call
dec
sub
in
test
imul
inc
jg
cld
mov
divl
paddusw
ljmp
int3
ss
mov
data16
fimuls
xchg
out
inc
bound
ljmp
pop
cmpsb
in
fs
ror
leave
lcall
jge
dec
mov
push
ljmp
cs
dec
out
and
data16
lock
pop
jbe
sub
inc
lret
mov
mov
in
adc
movl
mov
cmp
pop
in
outsl
les
push
jp
mov
cmc
rep
xchg
lock
inc
call
mov
fnstenv
hlt
arpl
xchg
subb
sub
pusha
push
push
push
mov
faddp
cwtl
icebp
fcompl
test
fists
hlt
inc
inc
data16
add
in
aad
xchg
stos
sub
lods
mov
sub
sub
xchg
popl
call
mov
sbb
arpl
pusha
cld
lods
cmpsl
adc
test
push
dec
aam
dec
and
jecxz
fdivrp
loope
mov
mov
cwtl
into
roll
mov
xchg
out
xchg
or
jmp
inc
stos
mov
icebp
into
fcom
dec
and
test
mov
je
inc
push
es
jecxz
add
test
stc
loope
cltd
push
or
pushf
bound
and
push
popf
cld
data16
mov
xor
mov
and
lret
shll
inc
or
pop
push
arpl
iret
push
jbe
aad
mov
rclb
enter
xlat
sub
test
data16
pop
xor
xchg
aaa
pusha
push
cld
adcb
cld
pop
and
psllw
jbe
push
test
sbb
out
pop
aad
or
cmc
add
clc
xlat
cmp
mov
imul
and
mov
into
adc
mov
sub
stos
mov
leave
lods
and
ljmp
pop
ljmp
and
push
ret
call
xor
jmp
jmp
push
lret
fcomip
and
cld
outsl
sbbl
sub
fcom
arpl
mov
sahf
jecxz
les
xchg
push
and
cmp
repz
adc
scas
adcl
pop
lret
loop
mov
fs
mov
mov
cmp
push
sub
iret
stos
int
repnz
pop
add
int3
sbb
and
sub
sbb
into
jne
pop
pop
sahf
push
jno
adc
insb
push
dec
xchg
cld
pop
inc
mov
popf
or
movsl
data16
ficomps
or
lcall
pop
rorl
sbb
clc
fisubrs
pop
and
mov
cmc
out
sbb
pop
ret
jecxz
into
shll
test
gs
adc
and
in
mov
sub
movsl
mov
pop
lods
push
popa
lea
hlt
test
popa
cmp
lret
jmp
xor
rcrl
ret
inc
cmpb
es
sub
cld
aas
cmp
mov
cs
push
xlat
xchg
orl
loope
xchg
sbb
pop
pop
dec
xchg
or
into
loope
arpl
loopne
call
aad
jmp
add
sub
or
sub
out
nop
adc
cmc
lret
or
imul
aam
xor
dec
stos
and
addl
jle
fsubs
nop
movsl
sub
scas
adc
cld
lcall
rorb
adc
fwait
cld
cmc
xchg
inc
push
push
das
push
in
shl
cmp
inc
sub
iret
sbb
push
push
aaa
stc
insl
sub
adc
daa
shrb
xchg
cmp
pop
xchg
jecxz
dec
call
sub
add
mov
xlat
xchg
ficompl
test
cwtl
ljmp
aas
xchg
je
xchg
sbb
and
cmp
enter
jecxz
mov
cmp
shll
in
cld
push
call
stos
in
push
sub
adc
xor
lret
adc
cmc
out
aaa
ret
adc
loop
stos
mov
adc
movsb
imul
push
and
push
fldl
rcrb
push
or
test
xchg
loopne
sysret
mov
xchg
je
fst
sahf
adc
dec
in
rolb
sar
loope
outsl
mov
cmp
ficompl
mov
xchg
js
mov
stos
adc
out
cmc
adcb
loopne
dec
push
pop
movsb
pop
mov
bound
mov
jecxz
adc
mov
sarl
jbe
pop
shll
test
cld
mov
in
clc
lods
inc
and
pop
roll
call
cs
loopne
fucomip
sahf
inc
in
fld
pop
mov
ja
fsubp
xchg
pop
jne
inc
lcall
push
fmulp
inc
mov
adc
movb
mov
lds
into
sbb
pop
dec
sub
dec
in
js
inc
dec
mov
pop
fsts
aad
add
jge
bound
fcompl
pop
push
push
fstp
adc
lcall
sub
sbb
inc
fidivs
loope
adc
jl
mov
pop
faddl
lods
add
call
nop
cli
mov
in
pop
adc
or
pop
sahf
mov
adc
stc
aam
pop
clc
inc
inc
loopne
pop
xchg
and
lods
push
jmp
push
dec
std
push
xchg
std
pusha
cwtl
push
or
out
push
inc
into
call
dec
push
in
test
test
mov
stos
inc
xor
hlt
jp
loope
fucomp
or
add
and
dec
stos
fisttpl
ja
pop
cmc
add
fisubrs
push
insb
insb
cld
xchg
push
push
and
out
mov
ss
popf
pop
imulb
fnstcw
ljmp
into
cmp
mov
ja
and
sbb
lods
cli
jae
xchg
mov
popl
sti
rcl
pop
or
cmpsl
cli
movsb
stos
shl
mov
jne
test
cmpsb
lea
inc
inc
jb
or
rorl
pop
jecxz
icebp
lcall
ja
mov
dec
adc
mov
jmp
lahf
and
inc
rolb
loope
cmp
in
lahf
dec
adc
add
arpl
jecxz
fcoml
push
rcrb
mov
imul
loope
add
ret
or
les
std
xor
dec
push
sub
mov
xchg
xor
mov
out
hlt
arpl
lcall
aad
roll
test
pop
adc
movsl
loope
cld
inc
cmp
call
aad
push
dec
cmpsb
adc
jge
jo
addr16
sbb
movsb
jecxz
jb
cld
mov
das
cmpsb
arpl
mov
pop
std
add
fidivs
popa
adc
cmp
sti
push
repz
rcl
adc
sarb
sti
mov
addr16
fdivp
xchg
push
out
fdivs
pop
xchg
std
loope
mov
es
movsb
mov
aas
jle
pusha
cmc
pop
mov
inc
xchg
shr
js
dec
cmp
sbb
jecxz
adc
in
push
lcall
ficomps
addl
in
shll
or
fnstcw
mov
xchg
cmpsb
mov
movzbl
imul
adc
daa
repnz
stos
xchg
mov
pop
mov
cmp
xor
je
mov
movsb
cmp
lods
push
ja
add
fldz
jmp
idivb
push
mov
sti
mov
jnp
hlt
mov
mov
and
and
sub
xchg
pop
es
cld
test
sub
negb
adc
cli
cs
push
inc
fdivrl
sti
lret
pop
insl
cmp
xchg
cmp
imull
je
ljmpw
fbld
add
shl
jle
out
pop
mov
cmc
jne
jg
jle
xchg
cmp
and
pop
int
loopne
adcb
or
inc
push
sub
push
popf
mov
int
xor
add
sarb
nop
out
cltd
mov
push
inc
dec
lcall
pop
fdivr
in
lock
mov
cmc
aad
mov
fs
lret
jae
jnp
into
mov
int3
sarb
je
shrl
lahf
jne
shr
push
adc
push
enter
fists
and
icebp
in
sub
sbb
ret
stos
xorb
jb
ret
stos
jp
movsb
jmp
dec
inc
test
cmp
cld
and
stos
jnp
mov
jnp
rolb
or
pop
dec
lock
add
push
js
loop
data16
xchg
ret
push
fcmove
or
and
sub
inc
and
jp
aam
fisubs
inc
leave
sti
pop
test
call
stc
test
popf
push
aam
bound
scas
movzbl
sbb
mov
jmp
rclb
xor
mov
nop
jle
cmp
stos
sub
jp
in
je
stos
cltd
inc
idivl
sar
push
xor
int
sub
mov
pop
lret
inc
and
add
dec
stos
or
mov
aad
jmp
imul
test
adc
push
std
inc
std
jle
jle
dec
mov
mov
push
xchg
jecxz
dec
or
mov
pop
ret
cmp
or
xor
clc
js
cmc
fcoms
sub
negb
push
pop
adcb
repz
iret
xchg
shll
outsb
rcll
inc
dec
dec
mov
mov
add
jl
mov
fstpl
leave
mov
pop
repz
jge
lock
into
xchg
iret
pop
movsl
leave
add
mov
sbb
lcall
mov
pop
and
pop
dec
sbb
pop
mov
sub
and
jg
push
test
je
in
out
sarl
cmp
inc
cmp
or
mov
dec
add
testl
sub
or
and
fwait
clc
loope
ja
adc
adc
and
adcb
andl
addl
xor
mov
movsb
shr
stos
push
shll
out
cld
cmp
fwait
shrl
cmp
pop
pop
pop
adc
fisttpl
ret
pop
push
add
sahf
xchg
dec
int
cltd
sti
cltd
jo
cmc
push
dec
das
decl
out
add
add
xor
popa
cmpsl
in
or
add
pop
hlt
cld
clc
or
pop
sub
test
cmp
mov
mov
sub
sbb
ret
cmp
xchg
cmp
fcomps
jl
mull
pop
mov
divl
ljmp
add
sub
push
clc
stc
fnstcw
pop
call
sbb
enter
les
test
icebp
or
nop
sub
ficoml
and
sub
dec
test
neg
enter
xchg
push
and
inc
scas
mov
add
cmp
jne
scas
pusha
dec
add
sub
ret
mov
ficomps
bsr
fstpl
xor
and
xor
jle
sahf
lahf
adc
ja
adc
add
jb
mov
add
mov
jge
sbb
pusha
and
roll
xchg
lahf
push
jecxz
in
fidivs
lea
jmp
fisubs
mov
into
repnz
ljmp
dec
pop
pop
addr16
insl
xlat
pop
pop
sbb
push
dec
fstps
lahf
loope
dec
push
push
arpl
xor
lock
xor
jnp
sahf
shll
in
cld
jmp
add
mov
movsb
mov
and
mov
shlb
ficoms
aaa
mov
ja
shll
push
xlat
lea
mov
shll
jo
movsl
arpl
movsb
and
xchg
repnz
sbb
pusha
sbb
cmp
lcall
dec
push
hlt
jecxz
test
lea
mov
call
jg
repz
push
push
adcb
adc
aas
xor
lods
rcrb
sbb
push
sahf
mov
cwtl
js
in
pop
in
repnz
adc
xor
xlat
out
fsts
loope
ljmp
fistl
add
inc
sub
std
dec
sub
in
mov
les
pop
cmp
test
int
adc
sbb
and
in
xchg
cmp
xchg
pushf
and
fmuls
enter
jp
stos
nop
fucomp
xchg
push
in
int
jne
mov
data16
maskmovq
mull
nop
xchg
shll
mov
dec
cmp
ret
cmpsb
cmpsl
ja
jnp
pop
inc
jmp
mov
sub
mov
aam
call
jl
out
fs
movsb
sahf
pop
scas
jl
in
pop
fimuls
and
jl
and
inc
lcall
adc
pop
aam
mov
mov
aam
mov
mov
cld
fiadds
stc
dec
xchg
push
std
sbb
sub
sbb
idiv
mov
and
cmp
push
loop
xor
mov
test
fiaddl
cmp
cwtl
hlt
jns
adc
push
mov
aam
and
adc
stc
xor
xchg
push
daa
jmp
xchg
in
sub
fsubs
fcoml
aam
jle
fcmovbe
cli
sbb
mov
jg
ss
sub
push
xchg
cmp
push
sbb
sahf
mov
inc
mov
push
jo
fdiv
in
adc
jae
and
jg
stc
push
enter
out
in
cmp
inc
adc
jp
jmp
test
push
dec
loope
lret
sbb
popf
loopne
enter
mov
dec
lret
and
loope
imul
jnp
js
xor
mov
sahf
push
xor
lods
cmp
sbb
mov
in
dec
xor
shll
in
andl
inc
int
fstl
jg
stos
mov
out
pop
lods
sbb
fdivrs
jp
sti
push
cmp
leave
mov
ljmp
xchg
mov
shl
sub
jb
jnp
movsl
pop
mov
into
ret
push
in
cmp
xchg
ja
lds
cld
cwtl
outsl
pop
jnp
pop
pop
sub
clc
in
jne
out
out
or
push
xchg
cld
pushf
pop
xchg
bound
push
mov
push
adc
pop
jmp
pop
mov
mov
jl
sbb
clc
popa
adc
jge
mov
pop
scas
or
push
out
xor
jecxz
sbb
dec
jmp
int
aaa
or
xchg
mov
mov
int3
out
insb
cmpsl
pop
push
loopne
aad
mov
bnd
pushf
movsb
add
or
fldcw
xor
jp
sub
adc
es
add
mov
cld
imul
xchg
iret
fdivrl
push
scas
push
mov
ret
iret
cmp
push
popa
cld
out
pop
push
mov
pop
ret
js
loop
and
sti
loope
fwait
in
sub
clc
test
movsl
in
cmpsl
xchg
push
lods
push
fs
push
lahf
and
push
out
or
mulb
and
into
aas
cwtl
sub
inc
inc
pop
push
jbe
inc
stc
adc
cmp
in
inc
push
nop
rcrb
xchg
lret
iret
aas
repz
mov
or
dec
pop
fldlg2
ficoml
popa
mov
pop
dec
fcoml
enter
and
in
xor
loop
or
clc
aas
in
add
fsubrs
lret
push
add
lcall
pop
insl
test
and
fistl
rcrb
aam
jns
jecxz
or
shlb
and
pop
mov
jecxz
nop/reserved
and
gs
sbb
cltd
test
sbb
jecxz
cmpsb
mov
icebp
fsub
add
mov
fwait
push
push
push
mov
into
in
test
mov
ret
cmc
test
mov
rorl
decl
stc
lahf
sbb
hlt
mov
dec
and
jb
iret
call
pop
loope
xor
les
ret
jecxz
push
loopne
popa
jb
pop
and
adc
add
jb
aaa
out
iret
sbb
or
inc
data16
movsb
icebp
push
push
loope
aam
mov
jmp
rol
lret
int3
hlt
loope
hlt
in
inc
stos
addb
cltd
mov
imul
and
popf
mov
fnsave
push
out
pop
push
fisttps
cld
data16
int
dec
lret
out
sbb
mov
je
mul
test
mov
hlt
xchg
mov
lea
test
add
mov
int
insl
rcl
push
fsubrp
inc
xor
setle
lods
sub
fcoms
lret
jle
aad
pop
insl
dec
mov
sbb
ret
es
add
push
pop
popa
pop
add
pop
notb
pcmpgtw
sbb
loope
mov
icebp
xlat
das
mov
pop
sbb
sbb
insb
ja
inc
stos
mov
mov
fs
out
shll
xchg
loope
and
rcrl
inc
lock
inc
loope
lahf
mov
jb
adc
cmp
int
pop
push
xor
pusha
dec
jl
and
sti
sub
inc
add
fdivr
into
call
and
xlat
stc
pop
xchg
push
sbb
movsl
in
nopl
sub
fstpl
adc
push
cmp
sub
pop
aam
mov
push
and
fstpt
mov
jbe
sbb
jp
sbb
jmp
cli
ljmp
jge
cli
test
sub
push
sub
incb
inc
push
jne
adc
push
out
pop
inc
sub
shld
add
mov
repz
nop
in
arpl
sub
arpl
jecxz
and
stc
push
jmp
movsb
ljmp
flds
lret
sub
inc
and
out
dec
movsl
xchg
add
sarl
dec
or
jae
popa
inc
sub
xchg
rcl
push
jmp
orl
xlat
sub
iret
arpl
nop
sub
insb
cmp
fcoms
jmp
sarl
shrl
push
fcompp
std
insb
sti
leave
test
pop
loope
pusha
scas
push
bound
out
cwtl
adc
and
fcoml
mov
cwtl
push
inc
cmp
add
dec
shlb
fmuls
pushw
shlb
rcrl
sti
cmpsb
mov
adcl
xchg
shr
jbe
lea
shl
xchg
leave
push
fistpl
in
or
or
int3
fistpll
je
inc
pop
enter
adcl
add
adc
mov
into
in
nop
insb
push
fisubrs
rorl
xchg
sahf
xchg
jno
dec
int
cmp
add
adc
out
loopne
inc
xchg
roll
aam
dec
inc
andl
fdivrp
aam
push
xchg
sub
loope
mov
shrb
mov
adc
lahf
push
loopne
lock
xor
cmp
sub
push
stos
inc
push
rorl
mov
cmp
ds
inc
std
ret
mov
adc
push
rol
int3
push
mov
ret
adc
add
cmpsb
dec
int3
hlt
ljmp
xor
add
lds
jecxz
sahf
loope
dec
adc
aam
icebp
icebp
in
fsub
ret
cwtl
mov
into
xchg
dec
inc
lods
and
jae
ret
xor
inc
flds
push
in
mov
mov
mov
jmp
jmp
fs
shlb
ljmp
or
push
dec
xlat
xchg
enter
aas
fstpt
clc
flds
pop
mov
pop
enter
les
mov
mov
aad
cld
mov
push
clc
mov
mov
pop
cld
mov
push
xchg
push
lcall
mulb
sub
loope
loopne
xchg
add
push
sub
orl
fisubs
data16
insl
shl
or
xor
or
cmp
and
xlat
add
bswap
ss
les
jo
rcll
mov
mov
mov
stos
mov
sahf
loope
or
insb
jmp
std
mov
mov
decb
cmp
call
pmulhuw
in
pop
jecxz
insl
cld
inc
dec
jbe
push
sub
cli
shl
jmp
xor
aaa
repz
mov
in
cld
sub
ja
loope
sbb
shll
imull
mov
loope
add
xlat
mov
xchg
std
mov
adc
push
dec
add
aam
hlt
cmc
std
dec
bnd
in
stos
ds
fbld
fisubs
les
aad
loopne
push
mov
add
xor
inc
out
xor
sarl
scas
ljmp
cmp
cmpsl
aam
loopne
mov
lods
cmp
and
stos
ds
mov
ds
mov
sar
pop
out
aad
mov
in
es
arpl
xchg
mov
test
mov
jmp
adc
mov
add
pop
mov
inc
insb
cli
out
aaa
test
fldz
or
in
test
loopne
ret
hlt
ljmp
dec
cltd
test
je
into
arpl
ljmp
fists
and
insb
outsb
add
int3
adc
jbe
in
adc
push
sbb
outsb
movsl
dec
into
mov
mov
mov
xor
fistps
lahf
push
jle
je
lret
lods
pusha
mov
mov
jae
adc
push
loopne
sahf
push
pushf
ljmp
int3
into
test
enter
popa
xchg
int
loope
xchg
mov
and
jno
aaa
mov
sbb
iret
inc
jecxz
icebp
and
jge
or
repz
sti
std
push
ljmp
dec
das
jmp
dec
test
mov
xchg
lods
dec
les
test
std
lcall
shlb
push
shrl
rclb
pop
in
mov
xchg
rdpmc
dec
fstps
push
js
xchg
or
push
or
push
xlat
push
stos
inc
bnd
sub
daa
lcall
push
sbb
xor
xor
xchg
and
xor
and
lcall
push
and
pop
aam
std
imul
or
in
fcoms
nop
jbe
dec
mov
frstor
aam
pop
test
popa
cmp
mov
clc
xchg
mov
sarl
sub
sbb
loope
jp
xlat
jno
scas
mov
adc
data16
and
imul
hlt
into
movsl
pop
pop
aad
push
jecxz
and
lock
inc
cld
pop
and
shrb
and
or
jl
mov
pop
imul
shrl
add
push
outsl
mov
es
in
lea
test
mov
sub
addr16
mov
xor
mov
mov
cs
cli
xor
jne
xchg
sbb
pop
ds
movsb
bound
jp
or
lods
jge
or
pop
push
lret
pop
mov
mov
sub
add
adc
add
fidivs
ficomps
shl
popa
in
cmpsl
sbb
fsubp
les
out
mov
add
pop
adc
out
push
pop
rolb
push
jbe
xor
push
clc
movsl
test
arpl
in
mov
jmp
movsb
fs
sub
mov
movsl
sahf
les
push
mov
mov
sti
add
inc
xor
test
in
data16
or
addl
cmpsb
cli
popa
fld
sbb
sahf
aam
mov
popa
divl
dec
pop
xchg
dec
fst
pop
mov
xchg
cmp
in
xor
sarl
ds
inc
jae
adc
ss
push
and
jb
dec
in
mov
in
mulb
mov
les
push
in
push
xchg
pushf
jecxz
adc
les
pop
stos
fstps
adc
mov
les
lods
xor
jo
mov
sahf
xor
push
xor
sbb
adc
push
jge
out
add
lcall
nop
cli
mov
test
inc
sub
mov
dec
cmp
faddp
ljmp
xor
out
clc
ret
shl
jecxz
and
cmpsb
gs
mov
sti
push
mov
stos
cmpsl
test
dec
cmc
repz
lock
fcmove
mov
jmp
ret
xor
fdivl
and
cmc
pop
inc
fisttpll
pushf
ud1
and
mov
lret
mov
cld
das
jns
inc
aas
mov
jmp
push
mov
test
jecxz
or
fsubs
into
pop
filds
scas
loope
dec
shr
sti
pop
jnp
push
idiv
popa
outsl
inc
in
adc
fdivp
pop
inc
add
mov
fistps
addr16
cmp
sub
sub
fucom
mov
jbe
test
xor
mov
mov
loope
push
cmp
cli
bound
lds
pop
fists
inc
jno
lcall
xchg
loope
clc
test
js
push
xchg
dec
test
add
sub
aad
push
into
sbbb
cltd
jmp
cmp
sbb
adc
ljmp
lcall
je
and
mov
pop
xchg
cmp
mov
sub
sbb
cmp
mov
incb
or
in
addr16
enter
scas
jmp
je
dec
cmp
push
pusha
jne
push
fistpll
flds
sub
push
lahf
pop
test
rcll
mov
cmp
lret
in
cld
sub
repz
shl
add
jl
push
popa
jmp
mov
mov
repz
xchg
push
aas
scas
push
push
stc
jnp
je
mov
pop
jns
mov
out
lea
popf
loopne
sahf
jle
imul
or
jge
sub
xchg
ss
into
sub
pop
ret
add
fstl
cmp
jp
cltd
addr16
push
and
into
xchg
xchg
nop
pop
mov
mov
pop
and
sub
daa
test
cmp
push
in
std
jmp
mov
pusha
ja
jg
movsb
test
ror
lds
sub
out
es
cli
pop
jmp
fisttpll
shl
dec
mov
inc
adc
sub
and
lahf
jmp
mov
push
outsl
cmc
out
mov
aas
adc
aaa
jg
and
dec
repz
pusha
test
cmp
or
inc
arpl
ljmp
pop
in
cmpsb
xchg
pop
xchg
in
out
inc
inc
imul
mov
jecxz
jne
adc
int3
aam
in
popf
rclb
cmp
cmpsb
shr
mov
push
jmp
inc
push
ja
or
sbb
xor
test
lds
or
cmp
cli
xor
in
adc
mov
cmp
lahf
daa
insb
cmp
sbb
pushf
mov
nop
pop
mov
or
lods
sbb
stos
mov
or
xor
mov
mov
push
mov
arpl
sub
mov
loopne
sub
inc
sbb
icebp
lods
inc
sbb
loopne
xor
testb
mov
inc
insb
in
bound
lods
fisubrl
rcpps
popa
jecxz
dec
outsb
aaa
xchg
dec
roll
cmpsb
inc
repnz
int
ficoms
into
lcall
add
sub
and
test
aas
mov
push
and
dec
adc
jp
shlb
rclb
ljmp
push
popa
xorb
cmp
es
mov
aas
dec
push
sub
test
in
aas
popa
xchg
xchg
mov
adc
aas
fsubrp
imul
hlt
and
and
dec
es
lods
and
cmpsb
jge
jmp
stos
in
xchg
loopne
xchg
pop
leave
fistpll
dec
mov
push
dec
das
mov
outsl
shl
cmp
in
repnz
sub
mov
jle
das
leave
aam
pop
xchg
stos
nop
ljmp
inc
cltd
aam
mov
mov
push
lcall
andb
push
or
clc
and
jnp
into
xchg
xlat
mov
sbb
mov
sub
xor
leave
and
xchg
mov
mov
push
nop
lock
ljmp
idivl
fdivrp
mov
jmp
mov
push
mov
int
inc
push
push
and
icebp
and
inc
out
add
xor
std
les
jle
aam
aas
stc
push
push
incb
cmp
push
push
mov
push
sub
in
ljmp
out
inc
mov
jnp
push
les
fadd
adc
cltd
inc
jbe
lods
mov
mov
arpl
push
lods
bound
mov
test
add
push
rcrb
roll
pop
push
lret
ja
cmp
mov
pop
adc
adc
and
pop
pop
push
rcrl
pop
push
lods
adc
and
bound
push
hlt
sbb
aad
push
cmpsl
and
jno
iret
xor
fdivp
inc
jecxz
les
and
push
mov
xlat
cltd
pusha
daa
xchg
push
lock
scas
pop
inc
pop
push
fdivrp
push
mov
inc
in
mov
imul
add
push
jmp
push
cmpsl
cmpl
mov
mov
test
aam
fsubrs
sbb
inc
and
ficompl
inc
pop
dec
xor
cvtpi2ps
sar
in
and
call
inc
test
pop
pop
pop
adc
loope
xchg
pop
roll
add
jmp
repnz
ror
add
push
bound
push
frstor
call
pop
inc
cmp
adc
push
addr16
ret
sbb
test
loope
sub
push
popf
dec
and
pop
adc
dec
std
sarl
pop
aam
movsb
or
les
fldenv
push
cmp
shlb
xchg
aam
jp
xor
cmc
cld
xor
test
test
into
es
jp
push
out
daa
add
arpl
push
test
in
roll
insl
ficoml
les
repnz
mov
sub
pop
enter
dec
and
inc
lods
pop
in
mov
icebp
cmpb
ljmp
xor
push
aaa
fisubl
imul
sbb
rcr
mov
loope
sub
cmp
fadd
cmpsl
push
in
outsl
aad
cmpxchg
add
add
xchg
stc
data16
inc
pusha
popa
mov
sbb
cmp
inc
push
xorl
xchg
push
fstl
dec
mov
test
pop
push
xor
adc
scas
mov
inc
fldl
cmc
add
xlat
gs
jno
mov
mov
fdivp
cld
stos
adc
in
adcb
in
cmc
rolb
fsubrp
mov
lahf
ds
aam
pop
cs
jl
shlb
notl
addl
jmp
lahf
mov
sbb
lods
fdivl
add
push
pushf
ficompl
insb
pop
adc
fs
aam
sbb
mov
cld
cmpsl
js
mov
inc
jbe
insb
dec
test
mov
cmp
jb
loope
jecxz
mov
push
jecxz
dec
hlt
cwtl
sbb
out
imul
push
xchg
imul
aam
out
hlt
lahf
clc
ficomps
mov
scas
enter
out
shll
cmp
pop
or
pop
test
push
xchg
mov
jne
lcall
cmp
add
insb
pop
fxch
xlat
test
cmp
ror
jmp
cld
sbb
sub
fsts
lea
mov
pop
mov
pushf
ud0
stos
mov
adc
les
les
loope
bound
out
dec
xlat
je
sbbl
ja
js
rcll
in
and
jecxz
loope
fisubrs
lret
inc
mov
adc
inc
or
sbb
xchg
cltd
or
sahf
fwait
shl
shll
dec
inc
and
dec
sbb
fisubrs
sub
loopne
add
adc
sbb
cs
popa
mov
popa
add
and
out
frstor
into
imul
out
jmp
aad
pop
in
dec
outsb
or
xchg
ja
jbe
sbb
cmp
jmp
sub
dec
and
and
into
or
jle
pop
push
mov
sub
pop
jb
ret
cld
std
cmpsb
fnstenv
xor
movsb
dec
pop
shlb
cld
jns
fimuls
dec
dec
add
push
out
xor
or
mov
fs
mov
das
xchg
xor
inc
push
fmulp
xor
clc
fs
aaa
aas
mov
xchg
icebp
xchg
pop
mov
hlt
pop
bound
mov
hlt
and
cmpsl
adcb
loope
shll
loopne
mov
aad
jmp
dec
popa
jo
fidivrs
js
push
push
js
cld
push
outsb
push
mov
fmull
pusha
cmp
inc
ljmp
jp
xlat
into
and
lcall
xor
mov
in
push
sbb
push
out
jle
push
in
inc
fdivl
loopne
insb
test
mov
into
lds
jp
push
into
icebp
or
sahf
dec
sub
push
movsb
iret
add
pop
pop
dec
insb
push
mov
gs
adc
and
and
jecxz
jp
aad
imul
xor
adc
xchg
sub
sahf
push
dec
jns
loope
xchg
inc
pop
dec
movl
nop
cmp
xor
push
hlt
aas
sar
out
ja
jb
out
js
sbbb
sahf
repz
subb
repnz
add
adc
adc
data16
cmc
push
data16
in
push
bound
dec
scas
shl
insb
fisttpl
xchg
dec
lret
jg
mov
shr
pushf
push
dec
push
dec
mov
std
jl
into
sbb
in
jl
rcll
rorl
adc
or
push
and
dec
mov
data16
mov
clc
lods
in
in
cmp
dec
inc
dec
inc
les
or
fidivs
ljmp
into
ret
sub
add
ljmp
jp
xchg
repnz
fistps
cmc
lods
iret
mov
inc
pop
imull
push
or
cmpsb
sub
jg
inc
push
push
push
sub
inc
popf
les
jmp
sbb
clc
xchg
adc
mov
sbb
inc
fimuls
pop
xor
cwtl
dec
mov
pop
jl
add
mov
into
dec
hlt
je
mov
sub
sub
pop
lret
push
jp
sub
pusha
icebp
lret
cwtl
imul
clc
adc
mov
push
mov
xchg
xchg
movsl
adc
mov
add
add
mov
stos
jbe
int
lea
pop
jno
dec
inc
lea
or
outsb
aad
mov
jnp
mov
pusha
cltd
insl
jecxz
sbb
or
adc
cmp
lcall
and
dec
xor
push
fisubrl
stos
xchg
fildll
outsb
jb
fistps
in
and
adc
rcrl
jle
arpl
push
and
cmp
cld
out
repz
and
xor
jbe
flds
jle
adc
shr
xchg
cmc
loopne
mov
out
sub
gs
lock
in
lods
out
out
sahf
push
fxtract
shl
test
icebp
test
test
lcall
sub
fsts
call
mov
in
xchg
out
add
and
clc
pop
xchg
nop
xor
lods
test
fists
pop
repnz
add
cli
adc
pop
out
and
and
rol
add
add
orb
inc
lcall
and
sahf
fcmovnu
push
shll
rcll
adc
out
sub
notw
mov
stos
jmp
sbb
xchg
iret
adc
mov
out
jp
jmp
xor
popa
jo
neg
nop
flds
sti
sub
mov
push
sub
mov
pop
fstpt
mov
rorl
pop
mov
in
inc
fisubrs
pop
mov
mov
int
lock
xchg
in
notb
mov
in
orb
loopne
cltd
push
pop
test
xchg
clc
sbb
aaa
xor
inc
pop
xchg
out
pop
not
push
pop
fmul
aad
aam
gs
pop
push
pop
push
adcl
fisubrs
pusha
ffreep
loopne
push
loopne
jmp
into
pop
push
adc
xchg
fcomps
arpl
sub
hlt
or
faddl
fiadds
mov
ljmp
cwtl
ja
xlat
rcrb
hlt
mov
rcll
loop
fidivs
inc
out
sbb
in
out
lods
mov
sub
add
out
es
inc
push
mov
pop
pop
mov
in
xchg
xchg
xchg
sub
andb
ja
mov
sbb
fnsave
into
mov
rep
ja
sbbb
ret
add
in
and
movsb
int
movsb
and
movsb
out
cmpsb
popa
push
cwtl
cmpsb
mov
or
and
adc
push
cld
cmp
out
jno
pop
ror
pop
ljmp
dec
insb
push
mov
pop
mov
pop
push
sbb
sub
bound
or
pushf
pop
mov
rol
out
add
and
out
mov
push
fisttps
or
icebp
jecxz
aam
jns
pop
dec
es
hlt
aam
or
outsb
adc
fisubs
cmp
addr16
jp
divb
in
iret
mov
jmp
pop
iret
xor
dec
or
loope
outsb
and
fcmovnb
mull
and
rol
lret
sbb
popf
mov
sub
aad
repnz
shll
sbb
adc
or
push
test
adc
ljmp
out
stos
fst
mov
mov
in
push
int
sub
cmp
rolb
or
adc
jecxz
repz
mov
pusha
imul
in
xchg
shr
xchg
std
mov
in
mov
in
push
sbb
or
push
in
inc
inc
sub
int
cs
stos
inc
jecxz
push
aad
mov
pop
movsb
popf
lea
test
ror
or
fisttpl
in
and
into
and
out
sub
and
jl
cmpsb
ds
fnstenv
fmul
lods
sahf
in
add
jecxz
shrb
out
enter
xchg
mov
cmc
inc
lds
fidivs
push
sub
and
jp
out
adc
loopne,pn
icebp
jmp
aaa
in
mov
dec
mov
imul
xchg
repnz
pop
mov
jmp
and
imul
imul
mov
clc
adc
test
jl
adcl
lds
aam
mov
cmp
and
push
int3
sarb
dec
push
cmp
aas
push
add
xor
lds
mov
test
mulb
xchg
vmulpd
test
mov
in
mov
dec
adc
and
mov
stc
sub
mov
mov
cmp
xchg
les
shrb
inc
xor
adc
je
sbb
cmp
push
xchg
dec
sbbb
rorl
fimuls
test
fstpl
iret
aad
mov
subl
cmp
pop
mov
and
push
movsb
mov
aas
jo
push
hlt
or
iret
ds
mov
jns
mov
mov
out
je
jp
and
das
std
dec
xor
in
fs
int
adc
sarb
jmp
cmc
les
mov
cmpsb
push
sbb
fbstp
int3
sahf
out
mov
cli
jb
sarl
ret
or
arpl
in
push
fistl
cli
scas
jbe
movsl
les
leave
xchg
add
xchg
cmpsb
add
addr16
les
xchg
cwtl
inc
fbld
stos
out
sbb
mov
addl
inc
scas
cs
mov
xlat
test
xor
adc
jbe
and
test
mov
les
cld
cmpsl
icebp
rcr
xlat
subl
out
adc
adc
cmp
gs
pop
mov
sub
insb
push
loopne
roll
xor
int3
adc
insl
pop
adcl
fcmove
lds
push
pop
add
testl
xchg
inc
or
sbb
mov
fnsave
popf
mov
test
in
or
push
or
test
sbb
test
jbe
mov
scas
jmp
fistps
mov
addr16
shr
ljmp
mov
jp
fnstsw
ja
push
push
xchg
andl
addl
repz
shl
push
jns
imul
pushf
shrl
fbld
sbb
fsubr
lods
dec
daa
sub
mov
mov
pop
rcrb
lret
int
sbb
loop
pop
cmpsl
jge
pop
out
movsl
xchg
mov
sar
cli
fwait
or
xor
in
das
xchg
clc
sbb
jbe
insb
adc
mov
bound
push
icebp
stos
sahf
aaa
pop
jl
or
in
inc
lret
stos
popa
pop
out
in
cmc
jl
sub
rcrb
jmp
and
jl
xchg
jno
sbb
in
fmull
daa
iret
cmpsl
mov
fstl
xchg
jecxz
xor
mov
fimull
and
cmp
cmpb
std
adc
inc
int
retw
dec
push
insl
cli
addl
ljmp
fwait
aaa
and
popa
movsb
testb
sub
notb
inc
or
dec
test
cmc
xchg
mov
sub
sub
shl
stos
sub
xchg
mov
mov
out
ds
in
sbb
or
xchg
cmp
test
out
sub
cmpsb
aad
sub
enter
cli
push
and
loope
sub
ror
out
shr
or
sub
cld
subl
cmpsb
push
std
int
jmp
dec
dec
xor
ja
aad
sub
dec
mov
jbe
push
inc
loope
sub
mov
fs
inc
mov
popa
in
sarl
scas
jmp
fiadds
loope
xchg
push
sub
sbbl
mov
shrb
loope
mov
push
loopne
fxch
cmpsl
push
stos
neg
or
repnz
pop
lret
lret
cmpsl
lea
push
movsb
fsts
popf
fnsave
xor
adc
cs
fwait
js
fs
aam
fs
cmpsb
lds
sub
adc
test
add
ficomps
fisubrs
push
push
lahf
in
les
fwait
xor
pop
mov
inc
mov
jmp
loope
aas
sbb
jge
lret
andl
jge
push
out
mov
fcomps
mov
bound
cltd
mov
pop
test
sbb
test
into
mov
adcb
enter
les
pop
dec
ror
in
add
jge
cs
hlt
imul
sub
icebp
fcoml
mov
add
xchg
ret
and
xor
push
mov
ljmp
roll
push
mov
pusha
stos
stos
fisubrs
fisubrs
pop
bound
mov
mov
cmpsb
cmp
loopne
and
clc
out
pop
push
aad
movsb
cld
stos
ret
mov
aad
bound
pop
cmp
arpl
aam
popf
mov
lcall
mov
jl
fists
loope
push
inc
mov
push
fsubrl
mov
aas
mov
ljmp
push
sbb
xchg
sub
incb
mulb
int
aaa
ret
mov
rcr
shlb
out
stc
enter
pop
jecxz
subb
test
sbb
inc
in
mov
push
icebp
sti
cltd
fmull
in
cmp
mov
jb
shl
aaa
pushf
shld
aad
push
movl
dec
pop
inc
icebp
fisttps
xchg
sti
inc
jmp
xchg
mov
fildll
xchg
push
xchg
cmpl
mov
sbb
cmp
fisttpll
les
insb
sar
aaa
stos
add
mov
and
enter
mov
xor
lods
lahf
cmpsb
and
sub
fucompp
and
and
shrb
stos
or
shl
imul
loope
fnsave
stos
and
jno
pusha
nop
sub
fiaddl
aam
lcall
mov
jb
stc
push
lock
into
add
push
mov
pusha
xchg
and
push
in
mov
loopne
or
fcompl
mov
addl
insb
xor
or
lods
out
dec
lret
adc
int
movsb
add
sub
fs
fstp
popa
out
push
sbbl
ret
add
lods
push
hlt
dec
bound
jnp
pop
lock
dec
shr
adc
and
movsl
fidivs
cli
mov
std
cmp
jle
dec
and
push
out
jns
sbb
sbb
ficoms
mov
out
pop
int
jmp
cmpsb
jp
pusha
in
mov
sub
nop
bound
sub
add
frstor
outsl
in
ds
scas
inc
jno
jb
fildll
push
cmpsb
inc
fistpll
sbb
pop
pop
jmp
and
pushf
rcll
leave
sbb
lcall
es
mov
bound
scas
jge
jmp
inc
out
fstps
ret
clc
push
xor
mov
pop
mov
ds
out
movsl
test
fwait
mov
stos
dec
shr
pop
loopne
movsb
rorb
addr16
imul
out
jmp
push
pop
sbb
xor
adc
push
repz
xlat
adc
stos
into
and
mov
add
jnp
adc
pop
inc
cmp
push
test
mov
sti
cmp
into
stos
mov
aam
sarl
xchg
das
add
xor
call
sbb
mov
iret
fs
cmpsl
mov
cld
and
in
ret
and
pop
inc
fmull
js
mov
inc
leave
pop
pop
pop
psubq
cwtl
or
jecxz
mov
mov
in
std
daa
jecxz
je
mov
jae
sahf
xchg
mov
scas
adc
in
mov
lahf
insb
and
dec
sub
pop
mov
jp
pop
out
push
std
sbb
in
aam
inc
cmp
mov
lcall
cmc
or
sbb
cltd
mov
mov
inc
adcb
pushf
jo
in
insb
add
stos
incl
cmp
mov
cmp
ret
pop
mov
inc
push
nop
jle
add
mov
cld
jne
xchg
aam
into
fdivrp
rcll
stos
fcmovu
lret
les
fxch
push
sahf
or
out
stos
adc
out
sti
shll
push
mov
xor
sub
fsubrl
stos
ret
fisubl
xchg
mov
xchg
insb
xchg
xchg
fst
mov
adc
repnz
fistl
hlt
and
lock
jns
adc
out
in
shrl
jecxz
sahf
xchg
mov
push
mov
push
addr16
rcl
and
push
fidivrs
xchg
lcall
mov
loop
cmp
mov
jns
mov
dec
xor
sbb
mov
xor
nop
in
inc
cmovg
adc
pop
sahf
ja
clc
push
pop
call
iret
out
ret
mov
fisubs
movsb
mov
fcompl
daa
cmp
jb
push
mov
xor
test
daa
lsl
or
subb
fimull
cmp
fldenv
fldt
aad
fsubrs
xlat
mov
scas
adc
in
outsl
into
cld
push
call
cwtl
fs
out
in
fisubs
mov
sti
or
dec
testb
in
stc
add
sbb
adcl
loopne
push
and
lret
add
test
shll
xor
test
jns
add
ljmp
hlt
ja
push
xchg
imul
pop
pop
and
pushf
lcall
lods
add
lret
pop
in
test
adc
clc
icebp
test
bound
outsb
dec
mov
in
enter
cmp
adc
hlt
in
popa
push
sub
mov
in
dec
in
and
cld
cld
xchg
loope
cmp
lcall
xor
rorl
mov
mov
cmpsb
dec
gs
into
pop
xor
dec
in
push
inc
push
arpl
mov
mov
test
loope
fidivrl
ja
push
or
fsts
movsl
sub
and
call
aam
and
pop
shrb
outsl
into
andl
mov
iret
inc
shrl
test
mov
adc
push
or
outsb
rcll
ficompl
les
das
addl
ret
mov
jae
mov
jecxz
push
sub
mov
int
inc
xchg
or
data16
jecxz
sbb
in
iret
mov
stos
push
fimull
xor
fldz
popa
imul
aas
pop
add
jbe
shrl
jge
mov
fdivrs
sbb
mulb
out
pushl
outsl
push
adc
mov
dec
xor
xchg
inc
jbe
add
adc
sbbb
or
push
hlt
pusha
mov
stos
in
xor
inc
push
aam
push
test
mov
testb
shrb
lret
adcb
shlb
stc
inc
leave
mov
loop
sub
xlat
adc
sbb
icebp
incl
push
sti
adc
xchg
pop
xor
aad
push
mov
adc
mov
and
xchg
jae
cmp
mov
inc
fisttpl
or
jae
stc
mov
jb
iret
inc
orl
notl
jmp
jno
jmp
jle
test
add
flds
xor
dec
imul
std
and
mov
ja
sar
aas
jb
sets
mov
pushf
loop
sub
dec
sbb
push
mov
test
mov
xchg
icebp
mov
ret
popa
out
xchg
jge
pop
push
adc
frstor
rcrl
insl
jp
rcrl
add
jno
jmp
fidivs
sbb
sbbb
pop
test
stos
sub
inc
sbbl
fcomi
ror
nop
hlt
adc
test
xchg
mov
es
mov
adc
scas
fdivrp
xchg
in
in
push
fcompl
mov
jge
enter
xchg
clc
xlat
push
test
add
out
pop
jne
fsubr
imul
adc
push
jne
sbb
repz
bsr
repz
sub
xchg
in
mov
scas
jp
push
repz
push
rol
fisubrs
dec
in
scas
pop
sahf
lret
dec
test
pop
dec
jno
jb
jl
out
jge
or
addr16
fmul
cld
push
rolb
xchg
es
and
push
or
xchg
xor
aaa
and
add
mov
xor
daa
jmp
fisubrl
cmp
xor
dec
mov
jno
pop
std
jecxz
icebp
ja
push
test
lods
cmp
stc
xchg
fbld
push
stos
int3
mov
push
cmp
inc
in
addl
jmp
jge
fsubrp
rcrl
fs
shll
js
adc
cmpsb
pop
xchg
pop
sahf
stc
scas
mov
cmp
push
xchg
mov
rcrl
int3
cmp
sbb
aam
fld
enterw
repnz
adc
stos
hlt
sub
stos
cld
add
js
in
outsb
sub
js
roll
stos
and
popf
pavgb
adc
pop
xor
and
mov
pop
or
push
xor
pop
ucomiss
adc
test
outsl
jo
mov
in
clc
rolb
jmp
mov
push
sub
cld
and
sahf
mov
movsl
mov
fdivs
jle
insl
cs
jae
pop
ss
sbbl
push
dec
cld
add
rcr
mov
push
shl
shl
or
sbb
mov
aam
mov
mov
loope
js
xchg
std
sti
fidivs
ds
or
cli
mov
icebp
mov
pop
push
out
inc
inc
jp
insb
lea
pushf
push
push
jg
test
repz
inc
mov
inc
repnz
ret
or
test
sub
out
ja
loope
push
aam
lret
out
cmp
aaa
push
fidivs
pop
push
xchg
test
adc
jmp
repnz
xchg
test
jle
out
sub
add
dec
aaa
inc
icebp
cmp
aam
sarl
hlt
in
mov
ficoml
inc
icebp
imul
mov
pop
dec
enter
call
inc
repnz
add
xchg
hlt
repnz
fbstp
mov
aas
jns
inc
test
inc
inc
and
jmp
aam
test
aas
mov
bound
sets
ljmp
sar
pop
pusha
add
xor
or
jge
je
stc
mov
test
sub
ret
cmp
and
jno
flds
out
dec
outsl
insl
xor
bound
mov
int
hlt
pop
or
xor
daa
sub
jb
xorb
test
std
nop
push
adc
pop
mov
sarl
push
shlb
pop
and
and
das
les
lea
mov
clc
pop
push
les
add
sahf
outsl
aad
cltd
addr16
xchg
push
clc
int3
lahf
adc
xor
out
adc
xor
movsb
out
push
xchg
mov
cmpsl
and
and
fdivrp
out
inc
sahf
mov
xchg
sahf
mov
fs
adc
popa
xor
pop
sahf
jo
ficomps
push
cwtl
jne
jb
lahf
fwait
loop
sbb
sub
and
ljmp
insl
ljmp
sahf
mov
hlt
sar
push
cmc
stos
cltd
sti
pop
movl
test
push
adc
pop
out
cmp
adc
xchg
loope
sub
popf
cmp
push
xor
push
shrb
push
sbb
dec
push
mov
jb
enter
push
fldcw
lds
test
adc
rol
mov
xchg
cmpsb
rcl
call
and
jecxz
dec
rcl
stos
inc
xchg
in
cmpsb
sub
sbb
rorl
rcrl
les
fdivr
out
pop
cmp
int
js
movsb
jbe
lahf
les
les
lods
in
mov
sub
mov
add
xor
adc
fwait
call
pusha
or
stos
xor
out
xlat
fcmovnb
sub
sub
fldenv
cmc
and
dec
mov
xor
inc
push
sbb
and
push
inc
loopne
lock
xchg
and
inc
hlt
lret
gs
inc
push
inc
inc
cmc
sub
gs
ret
ja
inc
adc
jae
and
sahf
movsb
fdivrs
pop
aad
inc
lods
push
and
and
cld
inc
movsl
mov
jecxz
cmc
test
in
or
in
pop
mov
push
sub
in
lahf
xchg
ljmp
rorl
inc
mov
jne
push
jno
xor
inc
and
loope
testb
loope
sbb
int
in
xor
adc
pop
rcrb
notb
fistl
inc
inc
stc
test
insl
movsb
out
inc
pop
fs
mov
popa
enter
enter
cmpsb
ret
aad
inc
fdiv
and
movl
fs
pusha
and
das
mov
repnz
xchg
xchg
movsbl
nop
shlb
dec
push
out
jle
or
inc
cmc
mov
arpl
mov
clc
pop
mov
popa
push
and
in
jbe
lock
mov
gs
outsb
testb
or
mov
jbe
cmp
outsb
push
cmp
jmp
std
xchg
xorb
push
out
test
mov
mov
std
inc
mov
bound
int3
jp
push
inc
jge
stos
fiadds
repnz
pop
mov
sbb
in
movsl
cmp
push
sahf
mov
test
mov
gs
fsts
adc
xlat
mov
mov
mov
add
cld
test
dec
jmp
dec
rcrb
lcall
mov
add
fmul
test
ss
push
orl
jmp
arpl
call
icebp
pop
mov
inc
lds
pushf
loop
push
mov
imul
xchg
cli
fs
bound
lock
cmp
mov
adc
and
mov
sahf
push
fldcw
mov
push
mov
fsts
sti
xchg
or
in
cld
pop
std
ror
and
pop
push
adc
imul
pop
push
je
ficomps
int3
xchg
test
in
inc
adc
jecxz
adc
mov
push
push
and
cmp
jecxz
dec
ds
push
stos
shrb
mov
push
imul
dec
popa
adc
decl
cmpsb
stos
fstl
push
lahf
push
leave
adc
add
mov
and
push
xchg
jns
cmp
fisubrs
adcb
pop
shrl
test
push
xchg
insl
dec
enter
jle
push
or
in
or
enter
sub
je
imul
movsl
daa
mov
test
es
lods
bound
cmp
mov
jne
mov
aas
loope
insb
ficoms
stos
xchg
shrl
dec
imul
adc
adc
jb
icebp
das
push
lcall
fcoml
pop
jg
xchg
xor
data16
fldt
shr
gs
in
ja
pop
sarl
cmp
leave
and
scas
rcll
icebp
dec
imulb
insl
into
xchg
js
jno
test
add
jg
stos
in
sub
xchg
ds
xchg
or
pop
mov
mov
movsb
in
and
arpl
orl
or
dec
cmp
pcmpeqw
dec
jecxz
jecxz
inc
adc
stos
std
inc
cmp
mov
lods
pop
mov
inc
subl
xor
dec
flds
movsb
incb
sbb
or
jmp
lds
sbb
lret
jge,pt
std
icebp
lods
out
push
lods
push
cli
out
inc
pop
clc
cmp
out
mov
pop
ja
xchg
out
shrl
push
mov
fadds
xchg
xchg
clc
orl
ljmp
ja
xlat
inc
stos
shl
mov
mov
pop
sti
lds
mov
and
fxam
decl
insl
dec
xchg
je
faddp
sbb
rcl
xchg
cli
sti
dec
popf
push
setno
in
sti
ret
push
hlt
sbb
mov
xor
je
scas
sbb
dec
std
jg
hlt
inc
roll
dec
inc
add
mov
loopne
mov
inc
sarb
call
aas
idiv
cmc
les
xchg
pop
xor
in
mov
jns
filds
shl
adc
stos
cmpsb
jb
ja
mov
js
sub
jbe
mov
cld
dec
xchg
sbb
and
sbb
mov
faddl
out
ljmp
lret
jne
fildll
pop
xchg
dec
test
and
sub
sbb
mov
inc
dec
fildl
jo
lods
jecxz
out
aaa
pop
xor
jmp
push
movsb
int
push
pop
nop
into
movsb
test
lods
pop
mov
and
out
shrb
out
stc
enter
cld
cltd
dec
jmp
daa
lret
adc
inc
ljmp
lret
jne
cmp
push
arpl
pop
fstp
cmp
enter
insb
bound
loope
and
pop
fnsave
push
push
mov
bound
cmp
or
and
add
setns
popf
test
pop
dec
xchg
sbb
or
add
add
lcall
cld
lods
mov
pusha
lods
adc
cmp
inc
cmp
pop
loope
ret
enter
fsubrp
push
mov
pop
movsb
mov
jns
js
mov
fldcw
fldenv
fucom
fs
dec
jno
loopne
push
in
push
call
lods
sub
sbb
std
fsubrl
shll
inc
sub
dec
stc
push
sbb
js
aad
fnsave
xchg
mov
cltd
jmp
cmc
or
mov
cld
cli
sti
mov
sub
mov
pop
cmpsb
cmp
jmp
push
cmp
adc
scas
fdivrs
insb
orl
sub
xchg
adc
dec
push
push
int3
mov
repnz
and
movsb
xchg
ja
dec
insl
lret
int
inc
loope
in
and
daa
shll
out
push
ja
clc
add
bnd
aaa
rclb
insb
lret
xchg
cmc
add
pop
outsb
fnstcw
xchg
cltd
insl
sbb
mov
out
ret
lock
cld
adc
in
inc
lret
jnp
push
shl
dec
iret
lods
cwtl
int
mov
aaa
jp
jno
sub
lods
push
loope
pop
scas
fisttpll
je
cwtl
sbb
insb
sub
outsb
int3
in
pop
js
js
jg
arpl
xchg
pop
pop
push
push
das
inc
les
sbb
in
dec
mov
mov
movsb
adc
sub
aam
xchg
rorb
mov
subl
scas
xchg
push
mov
mov
push
adc
sarb
orl
inc
out
bound
mov
out
push
lret
ret
mov
bound
sti
dec
out
add
fisubrs
sbb
fcompl
and
cld
or
cli
repz
jmp
int
mov
jmp
ret
dec
and
jne
cmp
out
mov
fstpl
imul
js
lret
mov
stc
subl
test
jmp
sub
in
aad
roll
and
mov
xor
cmp
jmp
pop
cmp
sub
mov
mov
push
mov
jp
shr
fistps
out
popa
loopne
add
push
shlb
js
lcall
xchg
xor
aad
into
neg
shl
adc
cmpsb
call
testb
adc
sub
enter
lods
fsubl
pop
dec
movsb
sarl
sub
push
in
shll
jecxz
adc
in
sbb
mov
popa
adc
les
in
mov
push
fcmovb
cmpsl
movsb
and
mov
pop
rcrl
iret
push
and
push
leave
movsb
cld
pop
imul
imul
cli
fwait
mov
arpl
aam
pop
cmp
mov
xchg
push
add
pop
aad
cmp
rorl
call
xor
ficoml
xlat
js
inc
enter
stos
add
push
je
fs
iret
mov
fs
pop
adc
clc
adc
jne
push
stos
fsubrs
dec
daa
inc
inc
insb
and
sub
push
leave
sbb
jnp
shl
fldcw
fsubp
adc
cld
aaa
data16
iret
pop
xor
add
movsb
pop
ja
cltd
sarb
ds
arpl
push
and
jne
test
pop
in
cs
ja
dec
dec
xchg
mov
arpl
loope
adc
inc
imul
loopne
movsl
and
sahf
fisttpll
mov
inc
shll
sub
xchg
push
lcall
pop
xchg
jae
dec
and
mov
pop
shrl
movsb
das
lods
add
push
cwtl
push
pop
enter
sbb
pop
addr16
rcr
rcll
xchg
cli
arpl
lahf
adc
lcall
or
or
sub
add
lods
mov
inc
es
and
lahf
shll
fisubrl
adc
dec
popf
fsts
out
outsl
and
in
imul
jecxz
add
notb
in
jbe
scas
loopne
xor
mov
ja
push
xchg
sub
inc
into
pop
add
cld
jo
lcall
negb
xchg
cmp
shll
adc
testl
xchg
dec
jno
ffreep
push
add
and
mov
adc
mov
stos
movsb
cmp
xchg
cmpsb
xchg
mov
jmp
or
ljmp
adc
repnz
adc
enter
out
je
add
test
ja
cld
jb
mov
and
ficoml
jmp
insb
ljmp
push
js
jp
sahf
adcl
mov
imulb
dec
mov
cli
ret
enter
inc
or
or
lret
mov
dec
push
fisttps
test
xor
inc
loopne
roll
or
fwait
xchg
sti
fs
enter
fisubrs
ljmp
hlt
jno
aad
addr16
shl
xor
pop
stos
sbb
xor
mov
into
pop
fcomp
ret
movsb
ljmp
cmp
out
mov
into
rclb
jb
pop
shll
ret
dec
jle
enter
pop
push
mov
mov
ds
fdivrp
jge
lret
sahf
cmp
in
jg
loopne
inc
jno
loope
in
lds
xlat
adc
inc
stos
cld
incb
int
push
test
fimuls
sbb
push
fwait
lcall
mov
inc
aam
dec
mov
push
push
mov
cmp
lret
mov
ljmp
in
fisubrl
icebp
inc
adc
out
out
js
shlb
enter
xchg
or
adc
into
jmp
sti
stos
xchg
inc
clc
push
stos
fsubrs
das
pop
push
pop
ja
mov
cli
add
cmpsl
pop
das
cmpl
push
cld
enter
ja
out
pusha
addb
loopne
cmp
in
enter
mov
inc
loope
sbb
mov
xor
fimuls
pop
push
adc
sbbl
mov
imul
sbb
shll
push
lcall
bound
push
lock
pop
jno
adc
mov
in
std
push
popa
add
mov
enter
shrl
xchg
cmpsl
ss
popf
idivl
popa
fidivrl
mov
pop
mov
add
mov
cmpsl
jl
jnp
inc
frstor
dec
into
adc
pop
jnp
sub
out
imul
ds
in
fiadds
push
ret
inc
ljmp
arpl
push
fnsave
push
cwtl
push
sbb
pop
leave
xchg
fldenv
cltd
imul
sub
hlt
inc
sahf
fisttpll
jecxz
jns
pop
int
xchg
push
mov
pusha
mov
and
enter
aas
jae
sub
jbe
fldenv
insb
fldcw
sarb
xchg
fisttps
jae
les
jmp
clc
data16
push
mov
hlt
enter
push
mov
jecxz
xchg
push
fcomp
push
shr
jle
push
int
xchg
sti
and
pop
mov
mov
xchg
icebp
enter
fisubl
notl
adc
sub
add
mov
xchg
xchg
loopne
push
jle
in
enter
clc
push
sti
roll
pop
inc
sbb
push
sbb
into
cmpsl
jb
add
jo
je
sahf
adc
push
and
aam
nop
fisubs
lcall
ja
mov
dec
adc
outsl
xchg
pop
xlat
push
jb
outsl
out
add
push
divb
inc
insb
inc
mov
ja
mov
add
pop
lds
in
jl
xchg
push
addr16
cmpsb
stos
js
mov
and
aaa
in
jp
shrl
xchg
mulb
dec
xor
popf
adc
aad
shlb
call
dec
loopne
mov
xchg
repnz
inc
push
lea
aad
push
cmp
pop
sbb
test
pop
mov
jns
add
and
push
jb
mov
dec
outsb
cmpsb
js
lea
mov
mov
or
mov
into
push
es
mov
or
stos
enter
jne
icebp
pusha
inc
mov
in
out
stos
jbe
out
outsl
jns
xchg
inc
jbe
iret
sub
movsb
jg
popf
loop
fsubl
inc
fmulp
enter
mov
lock
stc
movsl
nop
xchg
test
xor
mov
xchg
loopne
push
aad
fmuls
aam
mov
loope
push
inc
push
mov
add
add
lret
enter
push
and
out
sti
push
andl
gs
mov
mov
lods
shrl
lret
dec
and
mov
out
jmp
mov
xorl
push
stc
mov
ret
enter
pop
cmc
aas
pop
push
ficoms
les
stc
call
push
pop
pop
dec
mov
in
mov
sti
cmp
stos
mov
sub
mov
cmp
jecxz
xchg
push
jb
push
fst
lret
enter
ss
xchg
int
sub
add
push
add
loop
cmp
mov
lods
shr
and
xchg
stos
daa
cmp
shll
bound
incb
jle
les
jmp
inc
cmp
jl
jg
sti
inc
or
ret
popf
into
or
dec
sahf
sbb
lods
mov
addr16
jb
gs
fisubs
push
loope
fsubp
in
mov
addr16
lock
mov
dec
or
or
inc
lret
fcoms
pop
std
dec
loop
inc
enter
daa
rorb
lret
jle
cmpl
inc
mov
dec
cli
mov
arpl
dec
adc
aam
push
ret
or
jecxz
addr16
cltd
push
enter
xlat
mov
xlat
das
sbb
cmp
lds
add
xor
sbb
out
xchg
lret
dec
pop
addr16
popa
fs
fstpl
mov
or
cmp
push
inc
rorb
dec
int3
dec
dec
inc
jp
mov
leave
cmc
dec
push
clc
dec
cmp
mov
jmpw
testb
or
out
enter
dec
fadds
mov
cmp
jg
mov
add
adc
fst
insb
fidivs
mov
shl
dec
inc
cld
repnz
lds
negl
mov
test
lret
scas
loope
or
xchg
push
int3
aad
or
xchg
mov
or
cmp
orb
add
inc
test
push
dec
fmuls
jb
lds
cwtl
or
mov
loope
or
gs
popa
mov
cld
repz
mov
mov
aas
ljmp
rol
add
mov
popa
in
insb
arpl
stos
iret
ror
sar
rcrl
inc
stc
or
pop
dec
in
lret
lret
bnd
into
xchg
enter
fnstenv
dec
scas
shll
and
adc
cmp
mov
dec
repnz
into
dec
test
ror
imul
pop
pop
shl
add
divb
ja
stos
cli
loope
and
sti
inc
xrelease
ljmp
shrb
sbb
cld
cwtl
enter
inc
dec
vpshufd
or
jg
enter
lret
stc
xchg
divb
lods
fs
test
int3
xor
xchg
mov
cmp
add
test
jae
xchg
aad
hlt
dec
pop
fwait
xchg
insl
jmp
mov
andl
ret
dec
add
sbb
hlt
dec
insb
jns
lret
or
lods
jg
das
call
int3
xlat
call
mov
mov
xchg
inc
stos
mov
imul
incl
sarb
mov
dec
js
into
xchg
leave
jge
push
rorl
test
in
add
insb
jge
or
enter
pop
aad
movsb
in
jecxz
sti
dec
test
enter
jge
dec
fcompl
daa
shll
pop
jmp
fimuls
pop
into
cli
inc
mov
inc
int
iret
aad
iret
loop
pop
inc
jle
xor
inc
mov
or
xchg
push
mov
adc
fmuls
stc
cltd
pop
xlat
add
addr16
daa
dec
imul
pop
push
int3
mov
out
or
cmc
push
pop
mov
pop
std
pop
shlb
jnp
fistpll
mov
add
inc
std
fadd
in
inc
leave
push
inc
test
inc
or
or
cmpsl
enter
je
repnz
sbbb
in
lret
push
mov
cmc
hlt
xchg
inc
lret
in
loopne
mov
cmp
pop
push
call
arpl
or
pop
testb
xlat
stos
push
es
inc
in
fs
enter
mov
nop
pusha
dec
das
or
sbb
jno
lock
pusha
pop
ficoml
ret
push
std
in
imul
in
xchg
pop
fildll
dec
inc
and
pop
test
lcall
repz
dec
sub
mov
adc
js
sbb
xchg
daa
scas
push
push
mov
lds
push
pushw
push
hlt
lret
mov
push
test
xor
jle
dec
xchg
imul
jmp
ljmp
aam
push
mov
adc
jne
aad
push
lret
and
and
push
bound
movsb
fildll
and
aas
pop
shll
sbb
aas
loopne
sbbl
jmp
xor
sbbl
orps
aad
xor
xor
jp
pop
push
cmp
sbb
mov
xchg
or
cmc
pushf
lock
shll
pop
cld
lds
pop
mov
xor
loope
lahf
mov
out
ljmp
das
ficoml
xor
aas
cmc
jmp
fwait
xchg
popa
fadd
lea
push
nop
jb
negl
jbe
jg
dec
mov
stos
jns
jmp
pop
xor
out
push
mov
stc
dec
and
inc
xchg
loopne
add
xlat
fstl
or
imul
push
push
mov
dec
inc
xor
scas
bound
adc
add
imul
xchg
dec
push
dec
enter
mov
add
xchg
clc
pop
xchg
push
xlat
mov
or
xchg
pop
dec
outsl
insb
mov
inc
mov
push
ffreep
sbb
ret
inc
dec
repnz
ret
lret
rol
jle
cmpl
or
out
cmp
rorl
idivl
aam
icebp
stos
pop
in
jno
and
icebp
rcrl
jle
lcall
xlat
sbb
fdivr
push
in
int
adc
testb
mov
and
sti
and
jg
addr16
jle
ja
pop
ret
int3
addb
pop
in
pop
divl
fbld
push
sbb
test
into
sbbl
pop
in
adc
in
jl
out
pop
push
lock
mov
sahf
jecxz
in
test
lock
jno
fldcw
sbb
movsb
mov
fsubrl
or
sbb
adc
cwtl
into
fldenv
mov
mov
mov
popf
mov
or
jle
pop
cmc
sub
dec
xor
mov
cltd
jmp
jg
sbb
adc
lahf
sbb
out
fisttpll
cli
loopne
xchg
sub
std
int
lret
outsb
xchg
inc
mov
fs
fisubs
loopne
ja
into
fbld
or
js
ja
mull
movsb
mov
ljmp
lods
and
cs
ret
ljmp
jmp
add
loop
iret
sub
adc
decl
ret
mov
xchg
and
xchg
inc
mov
bound
add
and
jmp
add
xchg
ret
adc
cmc
jp
xchg
scas
jle
js
ficoms
cld
mov
mov
sub
aas
insl
push
sbb
movsb
rcrb
push
or
bnd
pop
rclb
and
fistl
iret
shr
shlb
outsl
repnz
mov
lahf
clc
xorb
ficompl
fimuls
negb
mov
or
pop
dec
in
icebp
sbb
mov
movsb
daa
mov
lret
mov
insb
jbe
inc
pop
or
ljmp
popf
in
inc
test
lods
cmp
pavgb
fcmove
int
sub
test
or
and
popf
lcall
jg
xchg
fbstp
push
pop
cs
mov
mov
scas
std
mov
repnz
data16
xlat
xlat
sarb
xorl
je
sub
in
push
arpl
jns
xchg
push
jae
test
ror
push
sarl
arpl
aam
pushf
add
fs
add
in
movsl
js
arpl
out
out
fwait
leave
push
sti
ljmp
push
sub
cmp
test
dec
or
scas
and
xor
jl
push
mov
repnz
aam
js
dec
sub
mov
xchg
push
mov
les
fs
sti
lea
int3
inc
jmp
aad
repz
loope
inc
adcb
sub
xchg
loopew
pop
aad
or
sbb
xor
aad
sarl
add
leave
arpl
shrl
pop
mov
push
out
aad
arpl
cmp
int
clc
ljmp
sbb
mov
or
mov
cs
ret
pop
fcoml
xchg
sbbb
es
addl
and
dec
sahf
adc
repnz
push
popf
inc
pop
mov
dec
ret
call
and
adc
scas
push
out
inc
pusha
jmp
jbe
rcl
push
adcl
push
push
dec
lret
in
add
inc
scas
mov
mov
aaa
push
cmp
push
ret
jecxz
dec
ret
sub
roll
insl
cmp
adc
pop
mov
or
xchg
ss
leave
out
stos
jecxz
push
icebp
movsb
repz
sub
dec
iret
loope
gs
dec
in
outsb
mov
pop
inc
call
adc
xchg
fsub
imul
shr
sub
push
cmpsb
sti
shl
adc
push
jns
push
aad
movsb
sub
sub
sbb
ret
xchg
stc
shl
in
sub
pop
push
cmc
inc
cmc
enter
adc
stos
sbb
in
cmc
in
insb
jecxz
es
out
inc
adc
and
lret
sub
mov
aas
jl
shlb
gs
sahf
div
movsb
ljmp
test
push
lcall
icebp
and
push
cmp
pop
dec
mov
push
xlat
push
cmpsb
push
jl
int3
loop
cltd
push
pushf
sbb
push
jnp
cmp
adc
mov
fwait
movsl
ljmp
test
icebp
js
rorb
inc
in
sub
sti
mov
test
push
lcall
pop
or
or
xor
jle
outsb
jp
lock
mov
or
lds
adc
shll
jmp
mov
imul
pop
fdivl
imul
setge
test
out
mov
pop
ja
ror
in
jmp
arpl
dec
push
xchg
inc
lods
push
fwait
test
icebp
sbb
adc
lods
inc
and
jmp
mov
pop
adc
inc
jbe
jle
mov
mov
leave
fwait
rclb
in
inc
and
or
sub
push
pop
icebp
xchg
xchg
fsubrl
adc
jl
hlt
loopne
xor
cmp
push
popf
add
jo
pop
and
jae
sub
in
shrl
test
push
sahf
loope
ficoms
in
xor
add
xorb
imul
cmpsb
out
and
lret
gs
dec
sti
add
lret
imul
jecxz
xor
loopne
aaa
shrl
mov
and
mov
les
adc
fwait
push
lahf
inc
mov
loope
arpl
mov
in
mov
mov
mov
sbb
aad
popa
pushl
cltd
push
in
hlt
data16
ds
jo
mov
imul
jne
dec
push
into
aas
aad
sub
add
mov
into
popa
cs
loopne
icebp
retw
adc
lahf
jge
mov
rclb
pop
imul
lret
mov
aam
call
jno
lds
or
sub
add
cmp
jle
mov
pop
sbbb
je
adc
and
adc
sbbl
push
mov
push
inc
push
jmp
je
sahf
insb
add
dec
into
out
and
add
test
xor
push
in
lret
movsb
dec
xchg
mov
sub
aam
xchg
lods
out
in
popa
into
add
adc
js
pop
sahf
ret
xchg
lret
and
xor
or
aam
mov
or
sbb
sar
inc
mov
xchg
in
or
push
dec
stos
or
mov
fs
stos
in
or
mov
popl
dec
loope
movsb
jle
std
loopne
stos
sarl
inc
mov
xchg
jl
int3
test
mov
cwtl
jecxz
sub
xchg
stos
std
jecxz
add
rcll
fs
xchg
pop
jmp
cli
stos
cmpsb
rcr
inc
adc
ljmp
sub
cmp
cmp
ret
sbb
pop
movsb
in
push
and
fcmovnu
fucomp
shl
push
add
mov
pop
in
movsb
cmp
sub
dec
shlb
arpl
or
or
adc
cltd
fisubs
xor
inc
fimull
inc
lahf
int3
dec
loope
pop
fimuls
mov
out
xchg
test
leave
sahf
aad
and
and
loope
pop
mov
lods
movsb
fs
xor
adc
scas
rcll
stos
push
andl
mov
add
popa
and
aas
sub
lock
pop
out
xor
sub
gs
xor
test
pminsw
cmpsb
shll
jmp
aaa
mov
les
int
ss
and
dec
jp
cmpsb
shll
mov
call
shlb
in
sub
mov
arpl
cltd
cmpsl
loope
into
cmpb
adc
mov
push
push
mov
mov
adc
fisubrl
out
mov
mov
push
pop
sahf
and
and
add
add
fimuls
lcall
addr16
xor
stc
mov
addr16
sahf
lea
fisubs
push
std
sub
mov
hlt
and
sar
dec
mov
mov
sahf
bound
insl
in
or
adc
push
mov
xor
add
xchg
les
cmp
fisubrl
call
push
dec
mov
addr16
addr16
rcll
in
cld
mov
imull
cmpsb
push
imul
sti
fs
fsubrs
or
mov
enter
test
lods
rcrb
cmp
gs
adc
loopne
pop
adc
in
repnz
pop
movsb
sar
andb
in
cld
sub
mov
mov
negb
and
or
cld
xlat
lcall
mov
fsubrs
cmp
rcr
mov
insb
js
scas
push
clc
shrl
clc
mov
xlat
ljmp
inc
scas
mov
imul
test
and
sub
faddp
mov
test
fdivrs
mov
js
nop
imulb
in
aam
je
adc
popf
push
jmp
imul
int3
in
leave
jnp
outsl
pop
inc
jecxz
xor
lret
data16
push
in
inc
and
test
call
outsl
mov
inc
into
in
insb
dec
call
push
mov
subl
push
xlat
jl
nop
xor
cmp
push
out
push
push
in
stc
sub
addl
mov
in
lcall
pop
in
into
mov
leave
lret
fildll
mov
xor
push
jmp
enter
rorb
stos
scas
add
movsl
std
push
test
out
xor
test
cmp
adc
loopne
add
cmp
inc
ret
ljmp
jp
ja
loope
cld
dec
mov
fmul
adc
push
inc
in
dec
popa
fnstenv
adc
je
icebp
fs
in
push
push
rolb
xor
roll
add
jnp
xlat
mov
pop
inc
dec
lods
call
ret
out
pop
sub
es
mov
lcall
mov
mov
data16
in
out
shl
test
movsb
xor
ds
mov
adc
stc
cli
push
mov
fcomp
sahf
mov
mov
push
pop
loope
xor
cmp
clc
leave
mov
lahf
fstps
pop
fsubrl
adc
stc
stos
sub
and
int
cmp
shrb
inc
iret
nop
mov
and
lret
adc
ljmp
push
shll
push
ror
jmp
push
push
hlt
rcrl
pop
mov
sbb
and
inc
fnstsw
add
jecxz
push
fxch
dec
rorb
sti
out
pop
push
rcr
fiaddl
or
pop
sbb
cltd
in
imul
and
adc
sub
pusha
test
pop
fisubs
es
lret
push
loopne
inc
sbb
xchg
jae
cs
out
gs
or
fsubs
lret
in
gs
mov
icebp
push
gs
ja
nop
jmp
in
ljmp
mov
rcr
dec
arpl
xor
icebp
jo
lds
cli
mov
loop
jae
mov
cld
insl
xor
and
sub
or
call
test
hlt
jae
shl
inc
sub
mov
repnz
repz
lock
add
mov
dec
fmulp
repnz
out
push
mov
fdivp
xchg
rcll
lds
adc
lcall
or
lods
xor
jmp
call
sub
icebp
in
mov
and
add
and
stos
add
push
mov
aas
mov
lock
loope
and
test
arpl
xchg
xchg
shll
outsb
loopne
sub
test
fucomip
faddp
xor
mov
xor
pop
push
dec
fnsave
imul
mov
shll
push
cmp
jno
filds
bound
repz
jmp
test
test
inc
scas
pop
mov
add
call
movsb
insl
lock
testl
inc
cmc
jmp
lods
loopne
fucomp
mov
fs
movl
hlt
or
and
fisubs
outsl
enter
fcmovu
fsubrp
lds
stos
fdivp
outsb
ja
lock
push
jne
out
jmp
iret
ja
loopne
in
icebp
enter
jmp
in
mov
imul
or
cli
or
in
shr
xchg
in
push
mov
jbe
hlt
out
add
hlt
mov
cmp
shl
pop
je
insb
shl
sub
mov
push
xor
insl
cmpsl
mov
xor
xorb
je
push
fndisi(8087
push
add
cwtl
cmp
rcrb
xchg
cs
dec
push
cmc
gs
into
enter
xchg
fnstenv
add
adc
dec
lret
fucomp
das
xchg
xor
in
shll
xor
mov
dec
jbe
mov
out
inc
xor
int3
rcrb
clc
nop
ror
mov
arpl
aam
mov
push
hlt
aad
stc
hlt
cmp
cmp
stc
imull
pop
int3
pushf
shl
jmp
mov
into
arpl
imul
mov
or
push
fidivrl
jp
lds
xchg
pop
sbb
leave
xchg
mov
loop
insl
jno
xor
fnsave
repnz
cmp
shll
icebp
loope
testl
test
fildll
out
dec
jae
ja
cmc
jg
fs
stos
mov
dec
in
jae
jae
xor
test
mov
jne
jg
fidivrl
out
mov
dec
add
pop
mov
jmp
out
push
cltd
adc
shll
ficomps
cli
mov
pandn
push
adc
push
test
pop
xlat
add
adc
imul
sbb
push
popf
push
cltd
adc
aad
sub
add
js
jg
push
int
cmpsl
test
push
cmp
jmp
dec
std
push
mov
call
jle
hlt
xor
jb
fstps
push
xchg
pop
inc
cwtl
nop
imulb
pushf
data16
xlat
fistps
scas
not
notb
mov
notl
xchg
outsb
xorb
clc
adc
sbb
out
sti
andl
and
fcoml
into
faddl
stos
sti
mov
cwtl
aad
ret
outsb
aaa
jp
std
ret
xchg
and
jbe
insb
ljmp
clc
aad
in
in
out
push
lods
mov
popa
ret
push
dec
in
lcall
push
ret
dec
dec
int3
mov
push
mov
mov
xchg
fildll
ljmp
in
dec
or
hlt
icebp
outsb
ror
push
ljmp
pop
adc
data16
outsb
pop
stc
les
ret
pushf
pop
rcrl
int3
or
hlt
or
xchg
aam
fldcw
mov
fadds
push
and
xchg
pop
aam
lds
mov
ret
stos
and
icebp
jmp
and
push
sarl
shll
jp
jge
adc
pop
push
call
in
ds
mov
push
shrl
push
adc
jle
cwtl
shlb
jg
dec
xchg
rcrb
mov
in
vaddss
xchg
leave
out
ljmp
mov
ret
fisubrl
repz
into
pushf
sbb
sbb
std
into
int
dec
mull
fsubrl
insl
daa
mov
mov
mov
lahf
std
ds
jmp
fstpt
ja
aad
popa
test
sbb
fistps
cmc
std
push
xor
dec
loopne
add
loopne
int
dec
fistps
ljmp
inc
lret
shl
jo
xchg
fisttpll
clc
or
call
enter
mov
ljmp
xchg
and
xchg
test
cli
push
ljmp
jbe
mov
int
enter
jmp
push
daa
lcall
sub
hlt
data16
push
rcrb
mov
fs
sbb
jo
push
jmp
cmp
rcl
enter
push
jne
mov
pop
push
adcl
rcrl
pop
test
ljmp
cmp
lds
inc
xchg
mov
fildl
leave
arpl
push
xchg
pop
cld
mov
lret
test
iret
mov
fdivp
ffree
or
leave
mov
jbe
fldl
mov
hlt
pusha
loope
dec
or
xchg
dec
mov
loop
mov
dec
lcall
stc
stos
mov
repnz
lret
or
bound
jno
pop
test
mov
rcl
ljmp
leave
adc
push
cli
xchg
inc
dec
dec
ror
sahf
jge
ss
outsb
xchg
int3
shlb
int3
shl
dec
dec
int3
leave
or
pusha
sbb
aad
jns
icebp
or
rcll
dec
shr
enter
mov
jecxz
int3
jnp
rorb
push
mov
dec
fistpll
ficoml
enter
insl
testb
push
jb
fsubp
shl
or
rorb
inc
pushf
test
jmp
int3
xor
inc
jo
call
inc
pop
leave
cld
dec
int
outsb
jle
adc
jmp
stc
push
into
dec
cmc
pushf
jmp
fs
loopne
fldl
dec
fcomip
dec
lret
adc
aam
mov
ficomps
mov
jae
mov
out
lds
in
cmc
jb
out
fsubr
mov
out
outsb
xchg
and
sti
iret
leave
jno
loopne
in
cld
or
mov
pushf
cmc
loop
leave
or
popf
xor
sub
add
xor
mov
int
adc
dec
clc
xchg
inc
loop
cmc
mov
rorb
je
mov
jb
iret
pop
xor
iret
out
into
mov
lods
mov
fcomi
dec
xchg
inc
into
or
lods
xlat
stos
sarb
scas
add
push
mov
cltd
hlt
fs
dec
xchg
mov
insb
ffree
hlt
mov
call
dec
adc
leave
mov
fisubrs
xor
rorb
jmp
out
test
mov
add
jb
fwait
sbb
clc
pop
iret
cs
stc
test
and
xchg
in
decb
mov
pushf
cld
push
call
hlt
fwait
in
leave
xchg
int3
scas
in
leave
jp
into
mov
sbb
and
push
roll
mov
roll
lods
sahf
adc
fs
xor
lds
cmc
mov
fiadds
lret
outsb
jmp
adc
add
push
push
shll
daa
inc
inc
ds
adc
pop
pop
aad
jno
in
and
mov
jns
mov
mov
cli
or
lods
ljmp
popa
fsubp
bound
test
xchg
jb
out
xchg
or
dec
cmp
xchg
push
testb
rcll
clc
call
cli
jae
add
sub
mov
cmpsl
in
loop
mov
lds
inc
int3
sbb
xchg
scas
inc
mov
adc
in
xchg
loopne
jne
sarl
mov
dec
inc
lret
push
aam
fisubs
adc
arpl
push
fisubrl
xor
pop
cmp
jns
out
push
loope
ret
cltd
rcll
push
jae,pn
add
inc
mov
ljmp
fstps
sbb
fwait
movsb
shrb
out
fisubrs
roll
dec
dec
movsb
icebp
push
jp
inc
dec
loop
cld
pop
out
or
xlat
stc
xchg
mov
mov
cs
mov
xor
ljmp
in
jbe
push
rcrb
stos
addr16
imulb
ret
jne
in
inc
in
cs
adc
adcl
fsub
sub
icebp
out
lds
mov
jne
dec
in
dec
aam
fnstsw
out
or
rcrb
out
enter
push
aam
gs
mov
xor
ffree
pop
lret
clc
test
jp
in
dec
in
mov
mov
shr
cltd
gs
lret
dec
std
in
pusha
mov
sbb
cs
push
dec
cmpsl
xchg
call
test
pop
pop
insl
hlt
xchg
mov
or
outsb
push
ds
dec
xlat
mov
jae
dec
push
mov
mov
fs
dec
insb
push
hlt
jge
jns,pn
cmp
mul
mov
data16
or
or
push
fldt
push
sti
leave
out
sbb
aas
jge
add
movsb
push
xor
outsb
test
rclb
push
mov
mov
shll
test
lds
imul
pop
fldenv
mov
adc
out
inc
xchg
movl
inc
xor
mov
jnp
ftst
shlb
or
out
leave
dec
jnp
aas
pop
pop
pop
stc
pop
mov
and
and
sub
sbb
test
jb
xchg
pop
insb
ror
cs
ret
loopne
xor
jle
lds
lods
cmp
jp
fnsave
or
icebp
out
pop
ljmp
xor
xor
dec
iret
aas
cmpsl
cmc
mov
outsb
shrl
push
adc
ljmp
jmp
loop
clc
xchg
jbe
mov
int
mov
lds
fnstcw
aam
ljmp
std
test
mov
sub
jmp
in
fs
jo
mov
lods
jno
xor
les
inc
jnp
je
dec
xor
jl
imul
sbb
repz
pop
jle
outsb
movsb
pop
dec
test
stc
insl
jno
stos
xor
sahf
pusha
pop
leave
or
mov
dec
jmp
cmpsb
ror
shlb
movsl
stos
pusha
xlat
icebp
jle
data16
in
pop
shll
xor
mov
iret
ret
cld
pop
clc
jb
pop
xor
dec
out
add
jns
mov
mov
je
insl
mov
in
je
ds
lock
push
iret
xchg
pop
call
imul
cmc
xor
daa
int3
or
cmp
mov
sti
sbb
sarb
lds
or
adc
les
mov
fcomip
out
or
repz
jmp
sub
clc
xor
hlt
add
lods
mov
out
inc
fldl
rorb
repnz
xor
jb
push
into
mul
dec
jne
insb
in
call
ljmp
xlat
in
bound
cmp
into
ljmp
sub
mov
std
enter
cltd
fcomps
xchg
sbb
push
pop
out
push
sbb
mov
icebp
rcrl
adc
mov
sub
leave
pop
fdiv
fidivrs
push
mov
xchg
mov
xchg
push
pushf
fldl2e
stc
lock
insl
pop
fdivrl
mov
in
outsl
hlt
mov
aas
pop
pop
pop
pop
pop
stos
pop
mov
cmc
test
jmp
or
fs
lcall
mov
pop
xlat
out
subl
daa
cmp
setl
fwait
lcall
cmc
sbb
lret
mov
std
in
dec
out
lret
xchg
scas
inc
pop
repz
fwait
fwait
xchg
sub
pop
lds
push
in
mov
out
cmp
sub
stos
sti
mov
jecxz
or
push
lods
ljmp
push
lods
repnz
jmp
jg
mov
xchg
jo
fcomip
mov
lret
pop
test
icebp
insl
inc
outsb
dec
test
pusha
ret
orb
out
sbb
and
jmp
pop
xchg
mov
out
lods
std
lea
ja
dec
sti
lret
mov
lods
jne
imul
into
sbb
and
aas
pop
mov
cmpsb
jg
xchg
push
fld
pop
lret
fstpt
icebp
es
lahf
cmc
into
cld
ljmp
pop
rolb
data16
es
cli
test
cs
leave
mov
stos
sbb
sti
inc
rcrb
in
push
dec
mov
test
push
push
mov
insl
jne
daa
out
adc
es
ret
addr16
pop
and
test
ljmp
jle
int
dec
push
fmull
aad
lcall
sbb
sbb
push
pop
sbb
inc
jne
jae
jp
shr
jbe
mov
arpl
in
add
stos
int3
in
push
push
xchg
jmp
lods
push
pop
les
cmpsb
aam
aam
shlb
jle
lea
nop
xchg
cwtl
jmp
sub
flds
ds
pop
pushf
outsl
arpl
xchg
scas
es
in
jle
shlb
ds
outsl
dec
push
rorl
xchg
cld
jp
jns
enter
or
imul
xor
aad
push
popf
sbb
mov
iret
xchg
std
mov
lret
xchg
rorb
aam
std
cmc
cmpsl
in
or
sub
xchg
in
mov
push
xchg
jne
cld
pop
rcl
add
jmp
xchg
push
fucomip
adc
sub
insl
lds
nop
jmp
sbb
mov
ja
pop
fistl
xor
insb
daa
mov
movsb
clc
fyl2xp1
mov
std
gs
sub
cwtl
sub
aaa
in
sbb
pop
rorb
ret
in
shr
daa
cwtl
mov
cmc
inc
and
loop
cwtl
pop
mov
in
dec
in
je
or
pop
inc
aaa
mov
xchg
jno
add
adcl
pop
std
lods
cmp
push
dec
jmp
lret
fsubl
add
dec
dec
aam
movsl
push
dec
mov
scas
jb
mov
add
or
xor
hlt
mov
aam
dec
mov
push
dec
cmp
xchg
mov
xor
dec
sbb
sub
mov
mov
loop
cs
mov
sbb
mov
pop
mov
leave
push
xchg
out
pop
dec
lahf
mov
popa
ljmp
pop
repnz
or
lret
out
aas
pop
lret
sbb
adc
inc
mov
enter
jns
push
or
enter
adc
leave
add
in
mov
adc
adc
xchg
ficomps
cmp
inc
out
insl
push
test
mov
sar
dec
adc
xor
push
out
cmp
or
cltd
testb
mov
in
pusha
int3
sti
les
cwtl
mov
cwtl
lret
mov
push
in
mov
repnz
fldl
cwtl
in
push
repz
fsubrl
or
into
jne
pop
sar
cs
dec
in
aam
fs
pop
stos
push
cmpsb
out
cs
shl
ret
jns
dec
in
push
leave
lea
lock
movl
loope
test
in
adc
in
in
frstor
leave
push
ljmp
jle
faddp
inc
xchg
pusha
addr16
lret
sar
pop
cs
roll
std
pop
dec
push
in
cmp
mov
push
or
push
cmp
leave
cmp
xchg
lret
pop
push
movsl
lea
stos
out
hlt
loopne
push
push
insb
push
hlt
push
ja
iret
aas
popf
lret
sbb
xor
bound
mov
inc
shr
add
lret
sarl
mov
xchg
leave
mov
push
dec
jmp
rcl
xchg
aas
gs
cmpsb
movsl
ror
jo
aaa
mov
add
lret
mulb
sub
into
xchg
jle
fcmovnb
rolb
out
or
outsb
aam
lret
shl
mov
ficompl
jb
mov
jmp
arpl
enter
cmp
fstl
jmp
push
dec
loopne
inc
cmp
jmp
mov
dec
jp
xlat
add
loopne
or
adc
mov
and
adc
xchg
mov
push
lds
aas
sbb
dec
cmp
sbb
and
mov
jo
rolb
lods
ss
shll
out
jp
fnstenv
fsub
ljmp
xchg
hlt
call
movsb
in
mov
rcrl
fbstp
xchg
outsl
les
push
push
shlb
jge
mov
ror
arpl
aam
cld
or
gs
mov
imul
rcr
ja
shr
lret
je
movsb
incl
fucom
lret
pop
aad
repz
inc
lret
ret
scas
cld
hlt
push
ljmp
jp
add
pop
out
jecxz
mov
pop
fstl
push
mov
insb
add
push
mov
mov
sbb
test
stos
dec
stos
push
sub
mov
mov
cli
ljmp
movsb
jp
fstps
out
pop
fstps
div
fwait
pushf
iret
ret
pop
and
xchg
aam
lret
dec
ret
mov
repnz
in
adc
add
push
xchg
loope
ja
out
je
xchg
pop
lret
push
mov
xchg
bound
jmp
int
outsl
ljmp
dec
test
lret
mov
mov
mov
out
inc
mov
mov
xlat
pop
mov
dec
pop
jmp
into
in
sbb
cltd
js
aam
sarl
ret
or
iret
add
scas
xor
xchg
jmp
push
mov
cmpsl
pop
leave
fistps
or
sbb
lods
mov
cs
push
lahf
les
push
jmp
jns
aas
jg
inc
rcll
inc
push
je
add
xchg
and
xor
fnstcw
xor
test
xchg
rcrl
push
lcall
jmp
stc
shll
bound
mov
push
repz
repnz
mov
in
lret
jne
nop
mov
call
loopne
frstor
arpl
xlat
insl
lock
out
enter
movsl
mov
mov
in
pop
push
jg
fists
in
adc
mov
hlt
and
jmp
add
fs
jecxz
in
pop
inc
dec
dec
jl
or
dec
cmp
fdivp
out
cltd
xlat
lods
jmp
fstpl
xor
dec
out
jge
and
jbe
sub
aam
and
lock
and
sahf
sbb
jae
mov
inc
mov
jmp
ficomps
ror
sbb
clc
fs
xor
xorl
mov
int
in
push
in
popf
aas
test
fsubp
dec
shrl
mull
xchg
popf
loopne
inc
into
mov
in
shl
dec
pop
pop
pop
dec
jns
push
mov
aam
or
mov
jle
pop
inc
adc
and
push
ret
ljmp
mov
add
xor
out
roll
rcll
push
rcrl
mov
mov
adc
pop
lock
fsubr
fwait
mov
sahf
fildll
pop
ret
imul
es
rol
movsl
mov
ud1
out
stc
pop
add
mov
lock
mov
shl
mov
mov
and
pushf
lcall
inc
and
sub
sbb
adc
in
xor
mov
dec
mov
push
repz
stc
jmp
fimuls
xchg
rcrb
mov
sar
and
in
cmc
sarb
gs
jl
testb
movsb
in
mov
faddl
in
imul
inc
gs
loope
cmpsl
in
js
aad
cmp
out
cmp
dec
ss
arpl
jecxz
andl
cld
roll
add
cmp
pop
xlat
in
popa
mov
loop
outsb
clc
inc
jmp
xchg
jns
cmp
inc
int3
xor
mov
mov
sti
pop
xor
clc
int
jae
call
repnz
sub
test
ds
shrl
cltd
lock
adc
rcrb
subb
xor
test
std
push
int
or
add
add
add
movsb
call
mov
in
dec
pusha
push
ffreep
stos
jno
jns
mov
shl
sub
xchg
icebp
mov
test
in
loope
loope
mov
jmp
inc
push
sub
int
scas
adc
arpl
sbb
pop
and
mov
lcall
mov
in
movsb
xchg
int
cmpsl
push
stos
adc
push
leave
sbb
fiadds
in
mov
movsb
xchg
mov
xchg
xor
mov
rcrb
push
fisubs
mov
aam
jns
leave
ret
sahf
out
lret
dec
mov
pop
movsb
fnstsw
test
dec
xchg
inc
scas
bound
dec
imul
and
in
into
test
repnz
xor
cmp
adcb
punpcklwd
mov
test
pop
xor
mov
push
out
cld
movsb
jl
cmp
sbb
jl
xchg
mov
fsqrt
mov
int
and
push
xchg
in
loopne
jne
neg
outsb
dec
ja
and
mov
mov
aaa
inc
std
popa
push
pop
mov
fsubrp
jecxz
js
sub
and
aad
add
movsl
jmp
mov
js
and
gs
cmp
das
xchg
in
fstp
stos
and
insb
cmp
pop
adcb
ljmp
das
insb
cmpsb
fimuls
pop
jb
mov
pop
negb
pushf
cmp
scas
adc
subb
and
adc
data16
inc
adc
mov
out
js
add
int3
mov
call
cld
push
pop
cltd
xchg
repnz
imul
xchg
sub
cmc
inc
stc
lret
cli
test
pop
ffreep
aad
mov
frstor
dec
cmc
push
jmp
out
mov
stc
shlb
mov
pushf
or
mov
sbb
aad
add
mov
push
xchg
xorb
xchg
daa
pop
or
dec
push
mov
add
ret
push
clc
xor
mov
xor
jp
in
sub
dec
mov
jns
in
rcll
les
push
aad
push
mov
call
sub
xchg
arpl
ret
fsub
pop
xchg
lahf
bound
pop
jb
push
out
ljmp
mov
andb
sbb
call
dec
dec
aam
outsb
pop
push
leave
ret
mov
popa
dec
xlat
test
and
pop
jmp
shll
dec
jecxz
daa
into
add
and
push
shl
popa
arpl
inc
or
cmpsl
mov
xchg
sarl
test
cmpsb
stos
xor
je
xchg
cld
shrl
add
xor
inc
les
xlat
adcl
sub
aam
fsubs
in
movsl
xchg
xchg
es
enter
xlat
arpl
insb
ret
icebp
movsb
call
pop
lahf
fmul
imul
bound
movb
xor
mov
push
in
or
inc
pushf
sbb
mov
movsb
and
inc
mov
mov
dec
sahf
pop
sbb
add
imul
aam
push
ret
and
fwait
aad
push
aam
adc
imul
ljmp
stc
and
dec
cmp
jecxz
dec
movsl
jl
call
leave
fs
mov
push
addr16
push
imul
mov
js
and
lret
and
sub
pushf
lods
mov
dec
stc
popa
cwtl
repnz
mov
pop
and
int3
sar
pop
cmc
inc
push
sahf
dec
dec
dec
daa
test
dec
pop
sete
ret
je
enter
stos
mov
ljmp
push
ficomps
in
ds
cmpsb
jecxz
ljmp
mov
jne
inc
outsb
fstps
sbb
enter
orl
sbb
fisubrl
into
jns
cmc
leave
push
mov
sbb
fldt
push
into
push
or
dec
lds
shll
push
push
in
add
push
ja
inc
mov
and
push
push
lret
pop
outsb
xchg
jg
cmc
jb
sub
push
adc
pop
xchg
inc
and
pop
into
lcall
ja
filds
adc
mov
icebp
lahf
test
enter
adcl
sbb
sub
push
or
out
jno
push
mov
movsl
push
or
sub
dec
adc
in
pop
sbb
lds
cltd
sbb
sbb
push
jp
popf
fldl2t
pushf
pop
sub
test
dec
jl
add
xor
mov
test
pop
aas
pop
clc
movb
cld
clc
stc
in
repnz
adc
in
fcmovnb
int
enter
jmp
fs
pop
dec
push
rcll
add
in
stos
movsb
push
push
cmc
cmc
hlt
adc
dec
adc
imul
in
clc
or
fdivr
aaa
sub
cltd
sub
in
mov
add
xchg
mov
pop
sub
add
test
sahf
xchg
jne
push
loope
out
out
cltd
jnp
sar
out
push
add
fisttpl
stos
cmp
and
mov
lret
test
paddusw
int
in
dec
shll
add
icebp
push
or
dec
sub
scas
pop
int3
xlat
sub
shrl
bound
push
in
pusha
lea
cmp
xchg
jecxz
xchg
decl
mov
nop
aaa
pop
pop
movsb
dec
cld
rcrl
test
cmp
into
addr16
loopne
in
es
inc
filds
sub
xor
lret
jg,pt
add
ret
lret
pop
cmp
mov
and
decl
jecxz
loopne
les
add
ret
loope
sub
ret
sbb
repz
repnz
out
xor
mov
and
gs
mov
cmp
xchg
sbb
data16
pop
xor
lret
mov
pop
in
loop
mov
test
mov
clc
inc
fidivs
loope
dec
repz
leave
mov
mov
pop
cmc
add
cmpsl
in
fxam
fisubrs
in
ja
out
mov
push
jecxz
inc
pop
subl
lds
xor
push
xor
ja
sbb
cmc
dec
push
out
ljmp
xlat
sti
adc
out
and
sub
ret
shll
mov
popf
cmp
push
and
hlt
mov
lret
fsts
push
lods
mov
jmp
jmp
fnsave
out
mov
push
clc
lcall
es
filds
pop
jp
inc
fnstsw
aaa
jns
repz
fisttpll
or
jno
sbbl
nop
hlt
sub
dec
sar
or
scas
jno
inc
jnp
and
adc
ret
test
ja
ds
cld
mov
mov
divl
push
shrb
movsb
jnp
in
xchg
rorl
jnp
push
pop
in
jecxz
out
push
jmp
push
cmc
shr
dec
clc
out
mov
addr16
movsb
gs
int
lcall
jg
and
test
adc
sbb
clc
mov
add
mov
fstpl
negb
fsubp
ret
cli
pop
adc
jnp
inc
jb
loopne
push
shl
dec
js
cmc
dec
adc
jge
inc
subb
mov
andb
imul
or
les
mov
pop
loopne
xchg
or
out
iret
ret
mov
mov
mov
rcrb
jle
in
fwait
loopne
pop
repnz
mov
sub
mov
outsb
rcl
nop
push
jnp
adc
push
rcr
and
pusha
pop
movsb
mov
jns
sbb
bound
or
hlt
sub
push
cmpsb
dec
testb
and
inc
lock
lret
int3
jns
js
loope
mov
push
cltd
push
jge
or
scas
or
fs
fbstp
sub
cmpsb
shrl
enter
xchg
mov
mov
cld
dec
idivl
push
mov
adc
or
push
inc
push
add
jmp
jl
dec
clc
dec
cmp
cmp
mov
das
mov
dec
sub
sub
inc
pop
jnp
cld
repz
int3
aaa
test
jecxz
xor
sub
out
mov
inc
stc
aaa
jg
add
inc
aas
mov
aas
call
movsb
mov
test
rcrb
ja
mov
test
or
or
arpl
stos
decl
dec
sti
sarl
or
xor
mov
imul
xchg
cltd
cs
jmp
stc
ljmp
pusha
push
gs
push
aad
jge
add
jmp
fcmovne
in
int
or
int
mov
negb
jmp
push
aaa
jmp
clc
ret
mov
pop
ror
in
inc
ds
add
mov
xor
inc
sub
movsb
mov
push
std
cld
cld
ds
xchg
xor
push
idivl
aad
in
orb
or
mov
ror
adc
pop
add
or
mov
out
dec
ret
xchg
rcll
push
and
insb
or
rclb
mov
adcl
push
xchg
fnstcw
test
les
push
arpl
push
lods
pop
pop
xor
jle
loop
xor
and
in
jno
or
into
fisubs
scas
or
inc
push
push
xor
lahf
adc
icebp
loope
jnp
lahf
fisubs
loope
and
ljmp
hlt
push
sub
and
faddl
xchg
and
test
mull
jne
sub
jp
es
dec
mov
or
lea
push
cld
jne
jb
in
and
mov
lahf
mov
mov
stc
or
cmpsl
fisubs
pop
into
loopne
sbb
mov
call
out
leave
aaa
mov
std
ds
sarl
clc
incl
adc
mov
repz
sub
in
add
dec
outsb
and
add
jno
mov
stos
nop
cmp
aam
loop
xchg
loope
notb
imul
dec
sub
in
rcr
xchg
xchg
nop
popa
js
stos
sarb
mov
out
sub
in
flds
fisttps
or
and
in
jb
adc
jnp
gs
and
imul
imul
mov
lea
push
lcall
popa
je
leave
sub
cld
rorl
out
xor
lret
andl
nop
aaa
jge
xchg
loope
cmp
repnz
lods
loopne
adc
push
pop
popf
testb
mov
pop
push
dec
gs
popa
in
pop
cmp
push
scas
test
mov
enter
repnz
fnstsw
fptan
data16
data16
sub
jne
mov
lahf
ljmp
jecxz
cmp
adcb
cmc
jmp
popf
rcll
aad
push
inc
add
lea
fdivr
mov
mov
push
add
call
gs
bound
push
cld
xor
in
add
cmpsb
js
andb
pop
adc
icebp
rcrb
sub
stos
shll
int3
mov
sahf
jmp
test
or
push
mov
and
inc
test
bound
xchg
notl
repz
push
or
pop
and
xchg
fidivrs
cltd
iret
sub
pop
or
xchg
pop
and
jl,pt
and
aaa
push
sub
xchg
in
dec
ljmp
fisttpll
xchg
movsb
pusha
xor
jmp
shlb
aas
push
xor
ljmp
pushf
std
and
cli
shlb
loope
cmp
mov
arpl
and
cmc
cmp
popa
arpl
stos
ljmp
out
pop
stos
mov
in
sub
in
inc
mov
fwait
xchg
push
movsb
sbb
int
stc
xchg
mov
adc
call
insb
cmp
dec
cmp
inc
stc
lea
adc
clc
rcr
mov
dec
shll
cmp
cld
push
or
sbb
jl
cli
push
jb
sbb
mov
popf
mov
sub
and
orl
or
in
adc
jge
out
daa
mov
rorb
test
pop
push
sub
mov
cmpsl
mov
jb
fs
or
or
lods
inc
fucom
ficoms
out
aam
dec
jecxz
fisubs
pop
push
jns
les
push
test
cld
sarb
pop
add
jle
push
mull
or
push
lret
sub
mov
out
je
popa
mov
pop
mov
fidivs
jnp
and
out
xchg
repnz
dec
aas
inc
pop
pop
fistl
aaa
pop
jmp
inc
cmp
inc
jae
repnz
out
cld
xor
or
lock
xchg
dec
into
scas
sbbl
lea
sbb
dec
fs
out
jae
out
sub
jae
jmp
adc
mov
xchg
or
dec
and
xor
add
and
icebp
inc
jo
aaa
scas
mov
sbb
jno
sub
xor
and
pop
and
fadd
ret
add
jg
idivl
sbb
stos
mov
loope
lock
push
cmp
mov
push
lret
aaa
ds
mov
insb
or
push
shr
andl
jmp
jbe
into
inc
jecxz
adc
or
xchg
paddsb
push
loopne
inc
cltd
movl
ja
cmp
movsl
xchg
lret
pop
out
or
pop
cmp
repnz
add
push
and
nop
dec
lds
in
mov
sub
pop
push
jbe
fdivs
sbb
movsb
ror
stos
iret
subb
ret
js
les
mov
in
jg
das
fisubrs
add
roll
lahf
clc
adc
inc
xor
js
iret
gs
scas
pusha
mov
shll
xor
out
push
cmp
jg
dec
add
insb
stos
push
inc
cmp
add
inc
ljmp
or
test
loopne
scas
fs
std
lods
roll
sbb
adc
add
xchg
pop
mov
push
rcl
dec
fldt
inc
js
xor
push
add
mov
in
xor
sub
push
popf
adc
stos
aad
test
mov
mov
inc
or
lods
icebp
test
xchg
popf
jl
in
lcall
shrl
xchg
leave
add
mov
repz
mov
inc
fistpl
push
cwtl
fs
int
ljmp
add
jge
mov
test
dec
ds
cmp
test
jne
inc
mov
das
xchg
clc
sti
fsubr
inc
sub
shl
xlat
test
and
push
push
mov
mov
mov
jge
mov
push
dec
fucomi
xor
lss
es
inc
or
mov
pop
push
out
inc
in
adc
sbb
xor
add
xor
test
sub
mov
cli
jge
in
hlt
fcoms
and
sbb
xorb
in
fs
push
dec
xlat
push
call
push
imul
fs
lcall
psadbw
xchg
dec
jbe
add
stc
enter
aam
in
cs
popa
xchg
and
or
cmpb
into
imulb
jo
push
aam
xchg
and
fldl
sbb
jno
shl
xor
and
pop
mov
mov
stos
push
xchg
fs
push
decb
inc
test
movsb
sub
or
push
pop
dec
lods
fildll
test
inc
shrl
aam
outsl
dec
stos
scas
jmp
add
adc
add
jp
leave
jecxz
std
add
xor
mov
inc
clc
mov
loopne
add
push
sub
arpl
cmp
mov
shl
mov
mov
loope
cmp
add
rolb
xchg
pop
popf
pop
pop
adc
sbb
ds
and
sub
daa
adc
jmp
push
and
call
adc
daa
inc
mov
mov
shlb
xor
nop
int3
loop
out
sub
pop
cmp
and
call
add
adc
dec
stos
pop
in
xchg
xor
test
pop
and
aas
call
sub
addr16
pop
push
insb
pop
in
test
and
popf
push
ljmp
sarb
adc
int3
inc
pushf
imul
insl
insl
adc
loop
dec
mov
fldcw
pop
adc
pop
das
pop
cmpsb
ljmp
add
fs
loopne
arpl
clc
sub
fwait
cmp
shlb
movsl
into
ret
leave
rol
pop
pop
jecxz
dec
int
xchg
sub
adc
push
xchg
lahf
sti
pop
insb
mov
rcrl
adc
xchg
ja
inc
adc
dec
xor
aad
pop
mov
jne
xor
pushf
mov
cwtl
xchg
fndisi(8087
sbb
xchg
cmc
daa
mov
out
push
clc
test
add
add
dec
mov
int
pushf
imul
xchg
idivb
jmp
pop
iret
in
rcl
xchg
mov
stos
rcrl
jmp
ja
sbb
fbstp
mov
out
es
xlat
cmp
xchg
xchg
xor
addr16
cmp
ret
popf
sub
pop
inc
jno
sub
popf
shrb
inc
pop
rorb
mov
sub
sub
shll
xor
add
dec
fidivs
fs
lock
loopne
inc
mov
push
adc
jmp
sbb
sbb
jo
std
into
int
movl
and
jno
aam
mov
ret
adc
push
repnz
cld
pop
xchg
jo
sbb
pop
mov
cmp
or
mov
js
clc
sbb
loopne
jne
roll
jmp
and
sub
aad
pop
les
js
mov
mov
xchg
add
mov
lods
inc
sub
rcr
data16
sbb
stos
aam
mov
mov
inc
in
cmp
out
push
sub
out
push
movsl
ficompl
repz
hlt
sub
lcall
ja
ljmp
scas
push
sub
mov
inc
jmp
loope
fucom
pop
add
ret
stos
stos
out
and
loopne
test
sub
popa
das
dec
mov
es
mov
push
out
arpl
data16
iret
cli
aas
push
bound
cld
jge
push
sti
mov
mov
dec
mul
andl
clc
out
jecxz
xchg
jge
cmpsb
imull
mov
fwait
pop
notl
fcomp
cmpsb
push
out
gs
and
bound
pop
push
fabs
fsubp
fsubs
fisubs
in
divl
mov
loopne
and
call
es
data16
add
mov
shl
jmp
cmpsb
fs
inc
int
jecxz
push
es
push
xor
mov
jecxz
adc
rcrl
movsl
cmp
fsubrl
aas
dec
movsb
mov
out
jmp
inc
mov
jle
sahf
pushf
in
loopne
inc
cmc
test
xchg
jl
jmp
push
rcrl
add
adc
sahf
stc
or
stos
loopne
int
mov
int
orps
out
sub
ficompl
notl
push
jecxz
cmpsb
pop
and
cli
adc
hlt
add
and
stc
icebp
mov
or
std
ret
add
test
mov
popa
in
mov
and
loopne
mov
rclb
daa
ds
jl
mov
fsubrp
inc
imul
lahf
data16
sti
push
mov
ja
rcll
stos
lock
push
push
out
mov
in
repnz
hlt
in
add
mov
ror
and
lds
inc
into
in
or
ret
stos
jecxz
jle
std
fchs
push
mov
xchg
pushf
inc
push
sti
rol
pop
dec
ret
call
jno
pop
shlb
aad
dec
push
aas
inc
add
loopne
and
jmp
push
out
pop
inc
sub
cli
push
gs
sub
sbb
pop
stc
shrl
pop
loope
ljmp
and
jle
testb
jmp
mov
mov
notl
pop
outsb
cmc
and
js
dec
pop
fs
or
cmp
test
andl
jecxz
mulb
inc
lods
cli
faddl
mov
mov
pusha
and
xor
jo
popf
lock
fidivrl
pop
fcomip
out
add
pop
xchg
clc
pop
push
and
sti
test
cmpb
sub
mov
mov
push
stos
sbb
loopne
mull
push
jle
outsb
xchg
jo
mov
push
push
ljmp
fs
fstl
mov
insb
cld
test
les
jmp
jmp
pop
shl
add
es
pop
mov
xchg
mov
addl
pusha
or
outsl
cmp
add
push
movsb
cld
and
xor
bound
in
xchg
push
pop
push
xchg
push
stos
movsb
jo
loope
dec
push
pop
mov
sarb
pop
sub
sbbl
xchg
sti
stos
lock
ret
mov
mov
ljmp
ret
in
mov
add
push
mov
test
inc
add
jae
ja
pop
fdivrp
rcl
pop
fs
aad
sub
je
sub
mov
mov
test
cmpsb
ljmp
xchg
mov
adc
scas
js
popf
icebp
lahf
movb
in
lock
int
cmp
sahf
cmp
dec
loopne
push
jmp
stos
test
inc
loope
scas
pop
sub
sub
cwtl
leave
aam
mov
scas
in
adc
pop
jecxz
jle
test
mov
pop
test
fstp
aad
xchg
sub
inc
iret
loopne
loope
shr
pushf
jmp
roll
cld
and
or
addb
test
dec
and
mov
mov
stos
bound
jns
mov
js
jmp
ja
cli
orl
mov
into
mov
sbb
mov
ret
and
enter
out
es
pop
nop
ljmp
fisubs
fisttps
lods
gs
shrl
inc
cli
jge
mov
xlat
jmp
out
sub
cmp
in
push
xchg
insl
loop
ljmp
or
ret
push
mov
pop
inc
subb
jg
adc
int3
cs
sahf
push
fbld
mov
insl
mov
pop
rorl
xchg
inc
pusha
out
inc
mov
ret
pop
lods
xchg
clc
std
insb
sub
push
cmpb
adc
mov
out
inc
sbb
roll
push
mov
hlt
fadd
lods
xchg
fisttpll
jecxz
jmp
fdivr
imul
aad
mov
add
cld
mov
sti
mov
ror
std
xor
xchg
test
das
cltd
inc
adc
and
push
into
pop
fcomp
aad
stos
and
ljmp
shr
shll
push
cld
mov
shrl
leave
repnz
mov
cld
pop
shrl
lock
mov
mov
into
in
shl
repz
fdivr
cs
lock
push
fwait
mov
sub
mov
push
jp
imull
in
loopne
or
fnsave
and
aad
sub
and
imul
mov
std
lods
pop
jg
jecxz
aad
push
bound
push
mov
aam
rcl
retw
sahf
test
inc
adc
std
out
push
hlt
call
push
in
faddl
mov
js
fmull
iret
add
sub
xchg
xor
lret
dec
in
cmc
in
cld
add
mov
push
xor
pop
ja
push
rorb
lock
cld
mov
arpl
ds
mov
jge
les
mov
out
popf
jmp
into
mov
push
data16
push
cmp
stos
mov
pop
push
sub
es
mov
pop
cmp
icebp
sub
pushf
aad
test
xchg
in
and
pop
jg
lods
xlat
and
push
sahf
add
mov
fsubs
push
cld
cwtl
push
pop
and
loopne
cmp
mov
or
movsb
sbb
cmp
icebp
cwtl
mov
mov
nop
insl
fdivr
or
inc
lods
sarl
in
or
pop
and
mov
leave
std
adc
jbe
cwtl
or
and
mulb
pop
push
int3
imul
sub
idivl
std
pop
sbb
inc
rolb
int3
rol
or
mov
dec
testl
dec
sahf
or
mov
cmp
and
pop
out
sbb
lcall
lcall
movsb
pop
sub
xlat
aad
sub
test
out
lea
xchg
shrb
out
cmc
push
int3
fiadds
jp
push
scas
rorl
dec
jmp
movsb
push
lret
mov
or
loope
or
mov
pop
mov
pop
clc
icebp
pop
cmpsb
in
jne
push
cmp
mov
imul
sahf
push
popf
mov
mov
leave
in
sahf
outsl
adc
inc
mov
fstpl
adc
fmul
je
ljmp
and
pusha
push
std
iret
mov
jle
shll
xchg
popf
nop
pushf
movsb
jle
nop
adc
stc
lea
into
repz
push
test
xchg
pop
lahf
xor
push
into
mov
hlt
out
inc
lds
mov
fsub
push
xchg
xchg
aam
fdivrp
or
js
jp
mov
and
test
sub
jmp
mov
sbb
in
adc
cltd
mov
mov
pop
sti
fmulp
out
call
outsl
adc
rorb
ljmp
pop
mov
scas
lahf
in
pop
popf
insb
iret
ja
xchg
jno
mov
shll
jecxz
rolb
jbe
lret
icebp
sub
adc
jb
dec
adc
insl
fnsave
jp
add
in
aaa
insl
out
loop
xchg
rorl
sbb
in
dec
add
in
cltd
and
pushf
je
mov
movsb
lret
iret
sbb
push
lds
loope
stos
out
aaa
popfw
sarb
lds
push
mov
sub
daa
pushf
fs
scas
dec
rcrl
lock
dec
adcb
pop
shll
out
xchg
or
fsubrl
lret
jecxz
mov
push
data16
hlt
inc
push
pushf
mov
xchg
int
in
in
shrl
shlb
fistl
or
and
outsb
mov
or
inc
dec
add
test
mov
xchg
jnp
sub
test
inc
cmpsb
pop
push
jecxz
add
rorb
loopne
out
push
mov
lcall
xchg
movsb
push
fmul
or
push
ljmp
repz
xchg
xchg
mov
aam
sti
test
dec
shrl
imul
pop
jecxz
pop
xchg
xchg
test
xor
ficompl
loope
in
data16
movsb
mov
ror
xchg
sti
push
adc
xor
pcmpeqd
das
in
mov
shrl
int
push
std
adc
les
push
dec
push
sub
ficoms
hlt
out
hlt
rcl
cmpsb
jmp
jb
and
cmp
cmp
addl
sbb
or
xchg
aad
push
rorb
push
xchg
pop
mov
dec
dec
pop
test
stos
inc
clc
add
jo
test
dec
std
push
inc
jge
and
rcll
cmp
stos
shrl
stos
xlat
in
fwait
inc
jle
popf
xlat
mov
dec
dec
cs
sub
imul
stc
dec
shll
xchg
lahf
jbe
xchg
in
shll
enter
push
lahf
push
mov
fldt
adc
stos
daa
add
pop
mov
ja
and
mov
adc
push
mov
bound
sbb
inc
in
in
jo
insb
aas
cmp
jo
pusha
icebp
mov
mov
sub
pop
mov
mov
or
dec
push
sub
jp
dec
xchg
mov
in
ds
and
dec
mov
and
jge
push
jno
in
fs
loopne
leave
aad
jecxz
or
gs
and
jg
jmp
into
shl
dec
pop
xchg
aam
sub
push
cmpsb
sub
jmp
js
cmp
in
je
jmp
call
test
mov
pop
clc
dec
imul
repz
xchg
sub
dec
xchg
fiadds
push
adc
std
daa
adc
xchg
sahf
cmpsb
mov
or
fs
rorl
fmull
out
or
xor
xchg
out
rcl
stos
ja
fnsave
inc
pop
faddp
cld
xchg
jne
jne
pop
sbb
rol
xchg
xchg
pop
pop
dec
aam
sarl
dec
or
jecxz
fidivrs
aam
repz
cmc
test
sbb
scas
fdivrp
add
clc
out
fs
xor
out
hlt
jmp
push
or
shll
int3
mov
xchg
test
dec
mov
hlt
mov
daa
mov
xorps
ret
inc
subl
insl
add
inc
push
xchg
and
cs
xor
push
out
sahf
ret
ret
roll
mov
clc
in
gs
sub
mov
mov
fldl
inc
test
sar
rorl
mov
xchg
imull
into
mov
into
in
mov
cmp
sbb
rorl
test
cld
fistl
sbb
test
adc
popa
adc
push
mov
inc
into
add
loop
xlat
loope
ss
imul
sbb
dec
cmp
pushf
fldenv
sbb
fisubs
bound
fidivrs
fs
fdivr
cmpsb
je
pusha
inc
pop
mov
pop
in
add
js
test
xchg
popf
fldt
xchg
cmpl
hlt
test
scas
js
sti
rcll
out
cmp
or
shll
out
clc
push
sti
xchg
jbe
mov
imulb
rcrb
add
pop
push
xor
inc
movq
adc
adc
push
scas
push
rcr
pop
jnp,pt
or
or
repz
out
xchg
shl
stos
icebp
inc
in
push
xchg
shl
fists
out
rorb
enter
sahf
push
cld
inc
out
or
loope
enter
push
in
dec
cmp
lock
popa
and
mov
adc
mov
and
mov
mov
sub
out
sub
stc
gs
outsb
into
push
scas
mov
repnz
dec
fucomp
fiadds
jne
push
icebp
lsl
call
inc
push
sbb
mov
dec
in
stos
fs
std
aam
sbb
fndisi(8087
int
std
mov
mov
dec
and
outsb
pop
out
cmpsl
push
xchg
xchg
sub
mov
int3
adc
flds
jge
dec
mov
push
pop
pop
adc
push
mov
sub
decl
sbb
xchg
movsb
xor
and
cmp
lret
iret
out
mov
iret
hlt
clc
push
fisttps
stc
cmp
popf
inc
inc
mov
add
les
push
dec
fisubs
jp
loopne
dec
add
jecxz
in
or
sbb
jno
sahf
adc
dec
rorl
mov
jle
mov
lock
lock
or
psubw
frstor
cld
mov
frstor
cmc
push
iret
fisubs
clc
mov
mull
es
and
and
imul
jecxz
cmp
bound
push
inc
cmp
test
imul
mov
repz
mov
lock
jmp
xchg
inc
in
cmp
jno
jecxz
cmpsb
xchg
movsb
mull
dec
repnz
ljmpw
test
mov
lret
insb
in
mov
stos
adc
jg
push
mov
sahf
in
ja
xlat
sahf
call
out
jge
int
sahf
sarb
sahf
stos
sar
clc
call
subl
sahf
shl
loope
adc
into
cwtl
jg
mov
or
ljmp
mov
mov
push
mov
xor
jle
int
test
cwtl
in
mov
add
in
popa
lock
cld
mov
nop
pop
das
xchg
ret
icebp
shll
fdivrp
and
dec
mov
xlat
or
aaa
idivb
mov
sti
pop
mov
popa
mov
jmp
test
popf
dec
dec
bound
sbb
pop
repnz
dec
cmp
xchg
dec
out
ja
mov
jb
cmp
shl
sarl
imul
testl
les
addl
mov
sub
adcl
jo
push
scas
and
xor
pop
mov
xor
pop
push
cld
fistps
ljmp
es
hlt
ljmp
mov
shll
loopne
xor
in
xchg
nop
inc
pop
sub
and
ds
lret
lcall
and
bound
bound
loope
aam
mov
out
xlat
stos
xchg
xchg
inc
sub
cli
inc
pop
dec
aas
jecxz
cmc
xchg
sbb
lret
outsl
insl
out
sub
mov
add
pop
xor
mov
call
push
sbb
fiadds
orl
hlt
lods
dec
bound
lret
jne
xchg
dec
fdivl
clc
loopne
hlt
mov
jne
sbb
cmp
adc
mov
and
stos
sub
sbb
sub
push
push
mov
aas
shrl
sub
xor
mov
rcrb
sbb
sarl
push
jecxz
arpl
jp
pop
pop
stos
mov
scas
push
pop
icebp
je
push
pop
stos
ja
push
out
in
xor
inc
push
in
in
xchg
insb
push
pop
sahf
inc
pop
shll
icebp
xor
inc
mov
jg
sar
push
mov
cwtl
rcll
loopne
pop
dec
adc
jl
stc
addr16
inc
push
cwtl
jae
out
repz
cwtl
rcr
ljmp
leave
xchg
hlt
push
sub
mov
stos
inc
and
cmp
xor
les
add
cmp
push
orb
pop
std
cmp
popa
and
sbbl
push
sub
lods
xor
push
fs
mov
clc
fisubrs
cmp
and
js
sahf
push
mov
sub
loope
xchg
clc
cmp
mov
xor
pop
adc
inc
loope
pop
add
sub
ficomps
jecxz
int3
ja
push
mov
inc
cld
mov
icebp
test
cmp
xchg
enter
fdivp
sahf
cltd
fldl
sub
sbb
inc
adc
stos
repnz
xchg
icebp
sub
sub
insb
inc
adc
jnp
cmp
lock
iret
dec
arpl
add
push
adc
xchg
in
lea
test
mov
push
inc
xchg
jno
fdivrp
mov
xor
push
repz
shll
pop
mov
cmpsl
in
xchg
call
or
out
push
jp
fidivs
bound
sti
pop
int
test
lcall
adc
cmpl
movsb
ficomps
pop
mov
adc
loop
adc
xchg
cld
in
pop
ljmp
sbb
mov
leave
mov
mov
into
inc
mov
leave
lock
inc
ss
fistps
in
and
or
pop
push
xlat
mov
out
in
test
xlat
bound
sbb
mov
mov
xlat
shl
enter
push
jecxz
add
iret
xchg
xchg
jmp
mov
negl
inc
jecxz
addr16
ficoms
push
sahf
push
ds
sar
jp
mov
jecxz
sub
push
mov
jg
mov
and
xorl
shlb
mov
and
adc
pop
cs
adc
dec
fcoml
push
mov
adc
xorl
ss
rorl
push
add
sarb
dec
stos
push
call
aad
fisubs
test
shr
les
call
sub
jp
aad
sub
fcmovbe
lret
call
pop
pop
mov
lods
push
in
xchg
inc
sbb
or
xchg
sub
mov
scas
sbb
movsb
lret
jg
fucomp
push
push
cmp
mov
xor
test
gs
xchg
mov
xchg
icebp
jmp
sahf
add
jmp
push
mov
xchg
push
cmp
fsin
dec
sub
sahf
scas
cmp
in
push
icebp
in
stos
je
leave
mov
in
movsb
mov
arpl
div
repz
adcb
jp
or
and
mov
int
mov
xchg
adc
stos
sbb
stc
xchg
and
push
mov
push
arpl
es
aam
pop
cmc
ss
clc
clc
testw
or
ja
nop
cmpsb
pop
ret
push
mov
in
jmp
adc
pop
jmp
incl
push
arpl
add
outsb
sbb
add
cli
bound
xchg
int
imul
mull
xchg
das
mov
add
add
fwait
jno
in
in
dec
mov
vpslld
cmc
cmc
dec
sbb
cmp
ret
mov
mov
push
iret
jo
dec
dec
sahf
sub
sahf
aad
mov
test
sbb
mov
mov
test
out
sub
lock
jae
in
je
mov
adc
mov
or
aam
xor
xchg
out
xchg
mov
outsb
fisubrs
jae
clc
cld
lods
fldt
ret
pop
mov
in
push
sbb
clc
imul
mov
push
push
dec
sub
fdivrp
scas
dec
lock
sbb
push
lcall
sub
or
add
icebp
call
xchg
fs
push
xor
dec
mov
insb
shrb
sbb
pop
dec
jp
cmc
fdivrl
stc
pop
add
xlat
js
and
fsub
outsb
and
mov
push
lock
push
xchg
adc
out
push
add
sti
push
lods
out
pop
test
nop
pusha
out
sti
mov
and
mov
adc
or
mov
push
insl
cmc
lret
pop
inc
jecxz
out
inc
push
push
in
aas
mov
std
test
lods
fadds
in
iret
rcr
cmpl
add
jb
adc
psraw
jmp
push
lock
ss
insl
mov
movsb
push
js
dec
mov
dec
daa
xor
or
lock
push
mov
lods
sub
psubusw
mov
cmp
shlb
out
sub
sub
cmp
mov
dec
or
push
cmc
dec
cmp
inc
sub
xchg
xchg
fdivs
lods
movsl
std
daa
xchg
mov
push
lret
lret
dec
pop
data16
xchg
sbb
mov
pop
icebp
lock
test
or
mov
pop
loopne
cmc
or
xor
inc
out
or
push
mov
mov
mov
or
pop
pushf
stc
std
les
xor
cmc
jno
push
das
call
test
pop
sub
adcb
in
in
stc
popf
les
mov
enter
inc
jg
dec
or
mov
and
pop
cmp
int3
sub
cwtl
mov
push
shrb
jp
pop
out
dec
imul
pop
loope
cld
scas
cld
push
pushf
lahf
jne
int
in
push
pop
rorl
xor
cmpsl
cmpsl
push
out
push
fidivs
pop
test
stos
cmc
icebp
clc
in
sahf
jg
inc
cs
mov
js
xor
mov
sub
sysret
scas
mov
ds
dec
stc
pop
fiadds
inc
cld
sahf
dec
lods
loopne
inc
int3
addl
mov
and
stc
jp
cld
xor
add
sbb
loopne
repnz
push
fidivs
fstp
stos
jo
mov
pop
inc
aas
mov
jo
mov
jecxz
xlat
sub
jg
pop
mov
xchg
pop
rcrb
lods
inc
repz
fucomp
add
mov
ja
movsb
cmpsl
sti
cli
pop
fsubr
out
mov
fdivp
jecxz
xchg
rcll
mov
cwtl
enter
lods
fucom
in
fimuls
enter
in
bound
iret
pusha
lret
rep
push
lcall
cld
xlat
push
das
dec
mov
test
loope
lods
xchg
lds
addr16
xchg
pushf
mov
movsb
out
cld
cmpsb
sahf
shlb
dec
les
mov
out
or
add
in
ljmp
adc
and
add
and
pop
adc
repnz
pop
mov
out
call
movsb
lds
stc
loope
rol
mul
in
rclb
das
lret
cli
loope
shll
int
cld
mov
sbb
aam
and
popf
lods
xchg
adcl
cld
jle
cmp
dec
push
mov
mov
sub
sub
addr16
mov
movsb
insb
pop
push
shlb
lods
lods
outsb
and
sahf
and
mov
ret
ret
addr16
ds
and
bound
ljmp
lods
test
cmpsl
adc
in
inc
repz
mov
ljmp
popf
mov
rclb
incl
insb
pop
stos
mov
jmp
ja
cltd
ljmp
mov
cmp
mov
cld
and
pop
cld
adc
stos
xor
in
mov
cmp
ror
nop
pop
fstps
in
push
movsb
stos
mov
hlt
sub
jb
push
das
mov
sbb
jge
inc
xchg
lahf
ljmp
cltd
jge
les
mov
lret
xchg
pop
mov
jmp
lods
mov
frstor
xchg
and
ds
xor
push
cmp
popa
mov
pop
loope
push
jne
test
or
idivl
das
adc
out
jo
test
cld
popf
jle
out
pop
and
and
int3
ss
or
mov
or
das
or
pop
jno
sub
insl
cli
insl
cld
push
hlt
pop
clc
inc
mov
rorl
or
popa
popa
mov
xchg
xor
fistps
fxch
adc
push
inc
das
ljmp
pusha
in
mov
clc
imul
ret
push
movsb
xchg
xchg
aam
scas
and
cld
mov
stc
adc
push
sbb
fisubl
negl
or
sbb
and
in
out
dec
cmp
out
pop
add
cmp
loope
jmp
je
sbb
xchg
popf
inc
lock
cld
cmpsl
aas
mov
sbb
pop
push
sbb
mov
pop
fs
test
inc
adc
dec
nop
sbb
cld
cmc
sahf
je
push
push
testb
scas
inc
enter
loope
and
or
in
cltd
shr
in
dec
push
ja
mov
dec
repz
sahf
jle
scas
mov
push
stos
inc
mov
int3
cmp
adc
mov
leave
cs
inc
pop
cmpsl
ss
lods
inc
xor
xchg
cmc
mov
dec
or
hlt
dec
in
adc
stos
adc
cmp
ljmp
nop
pop
faddl
lret
mov
xor
push
lock
add
mov
out
push
popa
xchg
fs
mov
clc
cs
and
push
pop
add
xor
lock
cld
xorl
xchg
push
ror
pop
aad
and
arpl
mov
divl
inc
roll
out
pop
push
hlt
mov
or
test
sbb
popf
gs
adc
xchg
es
iret
data16
leave
xchg
lds
or
loope
cmp
jmp
icebp
mov
jecxz
mov
cld
add
mov
dec
jmp
dec
out
lcall
pop
sub
xchg
xchg
mov
lret
sub
inc
pop
lock
push
ljmp
out
movsb
and
jmp
jmp
sub
int3
mov
mov
sbb
sbb
or
stc
sbb
or
mov
shl
hlt
loope
mov
js
xor
mov
and
clc
mov
pop
push
or
mov
push
cmp
out
pushf
jne
mov
addr16
mov
test
test
dec
push
cltd
jno
push
pusha
test
jecxz
and
shll
fiadds
das
push
mov
imul
pop
sbb
mov
jl
inc
mov
pusha
fdivp
js
les
add
xlat
fcoms
insl
sub
fsubrp
lahf
push
shrl
es
jecxz
cmp
cli
and
cmp
in
out
dec
addr16
and
lock
lods
fisubs
lock
xchg
movsb
jne,pn
mov
fcompl
shrb
lods
pushf
les
lea
lea
loope
lock
jg
shr
cli
cmp
dec
nop
jb
das
fnstsw
fcompl
pop
add
ret
out
mov
xchg
les
or
ljmp
mov
adc
mov
sub
xlat
sub
movsb
cmc
loope
mov
xlat
dec
int
mov
xlat
clc
mov
stc
inc
mov
fsubrs
ljmp
imul
fs
cld
jl
je
sbbb
sub
or
outsl
lea
fimuls
out
or
mov
jmp
dec
jmp
pop
add
stos
inc
pop
xor
fldpi
sbb
sub
inc
or
mov
fsubp
lock
mov
jmp
pop
dec
and
ret
aaa
ljmp
inc
xor
push
pop
sahf
sbb
fisubrl
les
jge
xchg
repz
mov
xchg
das
fisubs
rorl
stos
lahf
dec
and
loope
or
loop
aas
mov
jb
test
lret
add
js
xor
jecxz
cmp
inc
dec
imul
adc
mov
lock
int
mov
fmull
xchg
pop
cmp
pushf
mov
sub
dec
call
jne
iret
cmc
orl
popa
mov
push
push
sahf
out
jo
sub
push
adc
sub
int
jmp
lods
xchg
and
sahf
shrb
in
daa
xor
pop
or
xchg
jl
shrl
in
pop
enter
or
fs
hlt
sbb
sub
cli
hlt
cmpsl
jb
loope
aad
leave
out
sti
mov
or
in
into
stos
cmp
mov
push
into
add
lods
arpl
ret
ret
pusha
test
fstl
inc
test
jmp
sub
lret
mov
push
test
xchg
enter
fs
cmp
lcall
in
rorl
pop
xchg
mov
adc
aad
adc
xor
dec
es
enter
sbb
fs
cltd
sarb
fidivrs
mov
lahf
out
imul
sbb
iret
push
stos
scas
imul
les
jmp
shll
or
ljmp
push
xlat
push
cwtl
sub
cmp
cmp
cltd
loopne
dec
shll
or
jb
cmp
pop
push
leave
push
and
fidivs
sbb
lcall
fiadds
inc
push
fnsave
es
stc
or
push
rolb
and
cmp
add
mov
shrl
subb
sti
aam
into
insb
stc
add
mull
push
mov
inc
loopne
fldl
inc
push
add
maskmovq
idivl
fnstsw
xor
mov
and
fldl
pop
and
lahf
sahf
xor
jb
and
cmpsb
mov
mov
and
jge
fs
pop
cmp
cmc
popf
jmp
in
adc
call
push
mov
out
in
stc
xchg
negb
es
xor
stos
mov
or
ss
popf
and
pop
repz
into
hlt
pop
imul
pop
xor
jle
inc
inc
fildll
testl
cmp
shrb
and
push
cmp
mov
hlt
mov
rcrl
sahf
adc
negl
divb
bound
mov
rcrb
popf
js,pt
mov
push
pop
push
push
ror
xchg
inc
jge
imul
into
std
cmc
aas
outsl
in
in
pop
jl
fucomp
sbb
stos
ss
mov
inc
xacquire
pop
setl
hlt
mov
xchg
cmpsb
or
jno
ds
ja
repz
sbb
pusha
in
fstpl
inc
push
iret
xchg
and
cmc
sub
movl
jns
push
xor
lods
les
push
dec
repnz
sub
stos
cmpl
pusha
add
push
push
sub
xor
movsb
xchg
mov
adc
push
test
xor
jno
jns
push
imul
xchg
imul
mov
js
or
rcr
aam
stos
push
mov
pop
cmpsl
stos
jl
mov
les
negb
xor
fisubrs
rcr
mov
shll
shl
repz
mov
inc
js
xor
sbb
stos
std
out
test
fadd
int
xchg
jae
into
xor
pop
add
int
xchg
in
stos
int3
stc
mov
mov
cld
mov
jecxz
inc
xchg
cmc
addr16
xchg
shrl
mov
movsl
insb
mov
push
sub
shrl
loopne
mov
mov
cwtl
mov
dec
cmp
call
pop
out
adc
notb
pusha
and
sbb
mov
hlt
push
push
arpl
pop
and
aad
shlb
or
stos
mov
fiadds
popa
adc
xor
ret
pushf
scas
imul
mov
and
out
add
mov
mov
rclb
das
cmp
out
sbbb
adc
hlt
imul
mov
movsb
les
jno
shr
jmp
pop
stos
xchg
pop
pop
mov
pusha
into
fdivr
mov
inc
stc
add
std
stos
sub
stc
mov
sub
movsb
ja
aam
loope
pop
imul
sahf
push
shrl
in
ds
hlt
sub
push
cmp
adc
addr16
xchg
arpl
jnp
sub
daa
out
push
or
cmc
push
stos
xchg
fmul
adc
dec
les
dec
lods
cmp
mov
jle
adc
mov
js
pop
cmp
pop
sub
sub
iret
lret
push
cltd
ljmp
inc
shl
or
shrl
out
or
mov
push
mov
ret
rcrb
sub
pop
xor
roll
in
ret
or
cmp
shrl
jno
push
inc
and
add
and
cmpsb
mov
cmpsb
mov
mov
stos
sahf
ljmp
inc
movsb
xchg
adc
in
gs
inc
popf
mov
cmpsb
inc
packsswb
push
test
mov
mov
push
aam
adc
imul
call
mov
pop
or
out
ljmp
adc
push
cmp
mov
leave
xchg
lock
pop
cmp
adc
push
and
movsb
mov
xchg
pop
push
cmc
pop
pop
push
in
pop
jmp
pop
adc
roll
inc
push
push
into
mov
sub
cld
pop
addr16
fstpt
sbb
inc
ret
cmp
pusha
mov
sbb
lds
sub
bound
cmp
movsl
inc
rcrb
dec
push
icebp
ljmp
aas
shrb
xorb
loopne
movsl
fiadds
push
test
sti
roll
adc
push
xchg
stos
vpmuludq
insl
inc
aad
mov
pop
xor
pop
sar
popa
push
jnp
jne
loope
lret
aam
test
iret
ret
mov
rolb
daa
inc
lock
sbbb
sub
lea
nop
dec
or
dec
sub
jecxz
sbbl
pop
jecxz
mov
daa
out
repnz
xchg
ljmp
popf
adc
in
mov
push
popa
ds
jne
sarb
sub
test
aas
cmpsb
notb
mov
fisubs
lea
test
mov
jb
push
push
mov
mov
mov
popa
dec
inc
dec
ds
cs
hlt
nop
cmp
mov
cmp
fisubs
push
fucomp
jae
sub
adc
lods
inc
cmc
jle
adc
jge
shrl
popf
and
pop
out
mov
shl
xchg
shrl
adc
push
push
xchg
test
aas
push
inc
stos
clc
dec
mov
das
mov
lea
dec
jae
pop
jb
es
movsl
sarl
ficoms
ret
mov
sub
into
dec
loopne
jns
push
add
fs
loopne
mov
xchg
and
push
mov
pushf
out
aaa
push
iret
cmp
fldln2
in
bts
sub
push
test
adc
sub
into
fucom
rorb
sbb
int
and
add
adc
push
push
and
inc
pop
push
test
nop
adc
inc
aam
inc
cmpsl
adc
xchg
pop
ret
mov
ds
jb
ss
adc
jae
ja
fistl
xchg
out
ror
lods
fwait
pop
arpl
xchg
inc
iret
rcll
ret
and
insb
pop
test
and
sbb
test
js
mov
stos
xlat
adc
cmp
repz
in
into
ficomps
and
inc
fdivs
leave
sub
push
adc
dec
fxch
xchg
fildl
pop
popa
adcb
adc
cmp
push
add
lret
jne
sbb
leave
aas
rorb
test
lea
cmp
rorl
xchg
mov
sub
sub
mov
rcr
clc
test
lahf
mov
adc
mov
add
in
jbe
faddp
ret
inc
mov
lahf
jae
dec
dec
mov
or
ds
cld
jb
push
pusha
aaa
jnp
leave
lret
lret
dec
inc
ds
mov
addb
xor
ret
xchg
test
icebp
mov
dec
fiadds
ja
sub
mov
pop
stos
sub
mov
in
icebp
jno
test
repnz
push
jecxz
and
ss
repz
sbb
pop
and
add
fsub
dec
daa
mov
push
sarl
fistps
fnstenv
sar
push
outsb
js
in
adc
add
ror
sahf
mov
pop
arpl
lea
insb
xor
xchg
push
daa
lock
jbe
mov
into
push
aad
aam
mov
cmp
jnp
mov
sbb
xchg
jbe
shrl
stos
mov
jno
notl
popa
mov
loope
mull
fldl
push
xchg
pop
mov
xor
push
fnstcw
aaa
sarl
xchg
pop
pop
or
lock
movsb
sarb
repz
pop
push
ss
aaa
or
mov
repnz
movsl
inc
add
mov
push
imul
mov
inc
adc
xor
adc
xchg
push
jnp
pop
pop
adc
stos
mov
jp
or
jb
push
sub
sub
xchg
push
ss
cmc
jae
ljmp
push
pop
xchg
sub
pop
adc
daa
pop
jno
xor
sbb
in
xchg
jns
adc
cmp
fiadds
jne
cmp
inc
in
dec
lahf
out
inc
out
call
mov
adc
xlat
pop
out
aad
dec
test
push
jmp
xchg
pusha
xchg
aas
cld
cmp
es
pop
jns
hlt
mov
xor
rcr
loope
dec
or
add
dec
jb
xchg
ret
ljmp
sarl
mov
adc
sub
mov
mov
test
jp
ss
rcl
lcall
xchg
sti
inc
push
mov
cltd
push
cld
pop
test
jns
jnp
jl
or
cli
dec
ds
clc
and
adc
nop
cmova
lock
cwtl
stos
pop
shll
in
test
jmp
mov
cld
jae
and
xchg
and
push
mov
lret
mov
xor
aad
mov
and
icebp
inc
mov
add
jno
icebp
dec
jne
pop
leave
scas
into
mov
popa
enter
xchg
aaa
fbld
xchg
cmpb
stos
push
fmull
cmp
fs
and
popfw
into
loopne
popa
mov
cmp
mov
movsl
mov
xchg
inc
repz
pop
jo
stc
ljmp
lahf
sbb
stos
out
xchg
lods
mov
clc
test
call
fidivs
popf
mov
push
mov
sub
jge
jmp
mov
cld
xchg
das
pop
stos
fs
fists
shlb
faddp
and
fsubl
push
fstl
inc
mov
pop
sub
enter
cld
rcl
int
mov
mov
les
insb
fcomip
imul
mov
fistpll
ret
out
movsb
fs
in
add
dec
and
cltd
ljmp
inc
hlt
stos
popf
andl
jecxz
lea
push
cmp
mov
int
and
cld
add
pushf
shrl
mov
aas
xor
testb
dec
cmp
dec
loopne
imul
movb
fbld
imull
and
push
jmp
inc
mov
sbb
int
inc
fbstp
xor
mov
adcl
hlt
dec
jecxz
stos
test
xor
imul
inc
adc
insl
xchg
aad
or
mov
gs
in
aad
stos
mov
stos
stc
pop
mov
cmpsl
jb
push
push
dec
cli
sahf
xor
mov
jmp
adcl
stos
add
test
add
stos
or
or
in
xor
xorl
mov
dec
into
lahf
sub
out
pusha
stos
aam
push
loope
in
xlat
xchg
sub
pop
lcall
testl
stos
mov
fst
and
sub
shll
pusha
call
or
pop
movb
mov
mov
push
xchg
in
inc
movsl
dec
jmp
add
repnz
jmp
ds
rdmsr
outsb
dec
add
stos
pop
xlat
mov
push
cld
cli
aam
sub
aaa
lock
into
sti
push
hlt
cld
mov
cmp
adc
mov
lods
pop
and
ret
inc
cmp
into
loopne
sub
notb
pop
xor
cmp
aam
add
jbe
rol
or
jp
xchg
ret
or
shll
std
mov
cli
std
mov
jge
mov
pop
ja
lret
push
mov
movsb
and
add
mov
repz
cmp
and
stos
mov
and
cmpb
fisubs
mov
das
inc
push
jge
pop
fucom
lea
fcompl
adc
jl
fldcw
xchg
imul
xchg
fs
ret
adc
jg
shll
pop
dec
cltd
xchg
cwtl
pop
mov
add
add
enter
int
mov
jecxz
dec
lods
shll
test
jmp
insb
into
out
sub
mov
pop
ljmp
pop
xlat
fstl
push
in
inc
ficomps
push
cwtl
ret
bound
inc
and
int3
mov
aam
adc
push
jle
pop
xor
dec
int
pusha
out
out
inc
mov
ds
aas
xchg
lea
insb
test
and
dec
xchg
in
dec
inc
or
push
lock
add
pop
mov
jge
inc
shll
sbbb
cwtl
fdivrs
shr
cmp
rorb
and
addr16
or
xchg
inc
xchg
pusha
xor
shl
sti
jo
dec
sub
repz
in
dec
add
rcrb
aas
mov
repz
cmpsl
lock
sahf
pusha
push
and
jmp
decb
je
adc
pop
pop
rolb
movsb
inc
int
sahf
push
movsb
clc
jb
in
push
jo
aaa
jo
cltd
mov
cbtw
daa
push
pop
xlat
insl
mov
enter
ja
test
push
shll
and
ja,pt
ret
adc
popf
push
xchg
or
in
inc
mov
lock
cli
aam
dec
andl
out
pop
in
sub
sbb
popf
lcall
stos
loopne
adc
pop
es
fsubl
cli
shr
add
aaa
jno
repnz
loope
fs
push
data16
jmp
filds
mov
movb
int
jle
in
sarb
xchg
jns
sahf
fsubs
adc
dec
inc
lahf
out
data16
rol
pop
push
jnp
xchg
mov
mov
ror
movsl
and
sbb
push
or
sarl
aam
push
pop
rcll
pop
fisubs
or
pop
pusha
pop
test
xchg
and
mov
clc
pushf
pop
outsl
iret
lds
jecxz
pop
xchg
push
push
out
jecxz
movsb
stos
pop
popfw
popa
loop
lcall
pop
jg
xchg
addr16
fmul
imul
or
mov
ljmp
push
and
mov
in
pop
push
push
adc
cmp
clc
cmpsl
vpunpcklqdq
xchg
inc
add
or
arpl
cmp
and
pop
shll
shlb
jmp
add
in
mov
inc
jle
arpl
in
and
mov
push
stos
xlat
sub
cmc
or
stos
aam
lret
imul
jmp
xchg
fimuls
imul
pop
out
aad
lret
cmc
nop
repz
jmp
leave
rcr
call
shl
inc
push
arpl
fisubs
dec
call
ror
out
call
mov
imul
inc
cmp
hlt
xor
cmp
cmp
cmp
mov
lret
cmp
dec
cmp
dec
cmp
cmp
aam
lret
inc
movsb
rolb
in
pop
pop
in
repz
fsubl
stc
icebp
movsb
jecxz
in
mov
int3
push
test
call
xchg
movsb
mov
mov
jo
movsb
shl
icebp
add
shll
mov
fldt
lret
or
movsb
int3
sahf
loope
cmc
dec
ret
pop
jmp
mov
rol
ret
test
mov
push
shr
loope
and
mov
lcall
mov
jp
pop
inc
lock
mov
pop
cltd
test
data16
shll
sti
fnstenv
adc
aam
lret
adc
inc
rcll
xchg
nop
jmp
jp
sbb
push
ret
popa
fistps
mov
rcl
jecxz
sbb
dec
jno
push
stos
mov
and
test
xchg
lds
in
movsb
fstl
ljmp
test
aam
and
iret
push
cmp
xchg
sbb
add
div
ret
mov
ret
pop
sbb
sbb
push
lret
movlps
cli
cmp
cmp
lret
pushf
push
rol
push
lret
call
aaa
fstpl
xchg
aam
push
mov
std
jmp
jo
xchg
pop
mov
lahf
addr16
xlat
loope
orl
or
enter
add
mov
xlat
jno
rcl
pop
shll
icebp
push
shr
cmc
rcrb
push
sbb
sahf
cs
rol
loopne
into
fcoml
insl
pop
mov
or
sahf
fildll
push
jno
insb
in
aam
daa
mov
cmp
push
sub
mov
icebp
popf
jle
xchg
add
mov
movsb
push
adc
adc
or
stos
sbb
jle
cmp
inc
insb
in
inc
push
hlt
mov
dec
adcl
shr
fdivrl
call
pop
push
jnp
mov
xchg
pop
xchg
sub
or
adc
scas
fistps
daa
iret
sub
in
pop
test
sbb
negb
dec
enter
sub
pop
add
into
xchg
push
test
xchg
out
test
mov
adc
shlb
push
mov
xchg
subb
imul
imul
jge
jmp
xor
call
scas
sbb
in
jmp
sbb
hlt
das
imul
push
test
das
fisubrs
dec
stos
in
iret
push
movsb
outsb
jnp
sbb
lods
nop
out
in
pop
aam
nop
mov
inc
mov
mov
xchg
je
insb
dec
push
sub
stos
adc
jmp
jle
add
stos
test
cmp
fwait
lds
fstp
pop
enter
in
iret
dec
mov
push
in
insl
mov
cmp
sub
add
out
cwtl
push
int3
jnp
aad
repnz
test
adc
aad
jle
jnp
push
cwtl
dec
mov
and
addr16
movsl
dec
push
gs
lcall
mov
cltd
and
cltd
in
push
mov
das
mov
adc
cmpsl
imul
clc
push
cmp
sub
or
pop
jp
gs
cmpsl
lds
inc
mov
pop
ljmp
shll
ficoml
jmp
outsl
ljmp
mov
pushf
int3
sahf
cmp
sbb
fs
shrl
sti
into
leave
int
jecxz
push
xor
jmp
aad
adc
push
cmc
movl
mov
xchg
lods
ret
dec
icebp
xchg
fwait
push
and
mov
push
push
clc
jmp
mov
mov
aam
fwait
inc
out
inc
enter
lock
aaa
mov
shr
shlb
fdiv
sbb
loopne
inc
cmpsb
out
out
mov
ljmp
add
cmpsb
shl
es
repnz
ficoms
pushf
jno
cmc
call
mov
in
and
fsubs
cmc
imul
pusha
xchg
dec
jo
lods
push
repnz
mov
push
sarb
sub
sahf
sti
jb
pop
std
ficomps
mov
cs
mov
add
stos
add
shl
inc
stc
xchg
ffree
repz
movsb
repnz
pop
and
lcall
push
std
nop
sub
icebp
adc
mov
aaa
add
push
push
sub
adc
arpl
jmp
insl
mulb
add
adc
bound
scas
repz
dec
and
and
sbb
xchg
and
arpl
in
xchg
cmp
shlb
mov
pop
fs
pop
loope
mov
pop
fldl
mov
push
aam
xor
cld
xor
jp
insb
loopne
push
clc
sub
aam
add
and
dec
sub
movsb
or
push
mov
das
sahf
nop
insl
jbe
mov
sub
dec
in
xchg
add
dec
fiadds
cmp
gs
cld
push
fisubl
in
test
push
pop
or
mov
movsb
xor
mov
rolb
add
xlat
pushf
into
aas
iret
pop
push
push
mov
std
push
into
sarb
insl
xchg
mov
mov
sbb
shll
mov
and
ret
cmpsl
lea
out
jnp
lods
lock
imul
ret
inc
dec
sti
rcrl
cld
repnz
out
fisubs
mov
cmp
pusha
cmp
mov
and
adc
ds
daa
adc
aam
xlat
sub
xchg
adc
pop
mov
adcb
std
cmpb
fistps
sahf
ds
in
cmc
pop
push
adcb
popf
sbb
ficoms
jp
loope
stos
bound
call
inc
lods
and
scas
test
mov
adc
or
jae
sbb
mov
pop
aam
pop
push
inc
sbb
add
test
pop
xchg
out
clc
lahf
jle
push
xchg
negb
aam
mov
jecxz
divl
pop
ja
xor
push
call
inc
sahf
adc
ja
mov
testb
mov
daa
push
mov
adc
lock
pusha
jle
fcom
push
idivb
mov
jecxz
andl
ret
insl
out
lahf
inc
dec
lds
xchg
pusha
in
jmp
pop
mov
mov
sub
lret
push
cmpsb
sub
outsb
cld
xor
idivl
insb
xchg
mov
jbe
fcomip
mov
jb
hlt
mov
bound
cmp
xlat
cmp
jecxz
sub
xchg
xchg
and
roll
add
in
addb
idiv
mov
outsb
clc
sbb
lahf
rcl
aam
cmpsl
jb
repnz
les
jns
arpl
cmc
inc
cmp
std
mov
in
cltd
and
push
pusha
and
xchg
hlt
lods
movsb
cld
adc
ret
push
or
jle
nop
dec
js
mov
scas
mov
stos
adc
push
add
cs
dec
fisttps
call
test
or
push
icebp
iret
js
lret
ret
mov
push
jecxz
inc
sub
in
pop
ds
rolb
ljmp
adc
xchg
mov
pop
sbb
clc
int
nop
cmc
mov
adcl
mov
scas
arpl
jno
dec
push
imull
std
aam
imul
pop
inc
aam
mov
fsub
lods
repnz
call
cmp
adc
inc
ja
add
movsb
negl
stos
js
push
stos
fnstcw
inc
dec
xor
clc
shll
xor
push
into
dec
add
xchg
dec
push
stos
ljmp
shlb
pop
sbb
cmp
xchg
cmc
push
test
cwtl
aam
dec
cmp
push
in
sub
in
and
mov
bound
lcall
in
mov
subb
or
out
roll
shl
push
cmpsl
hlt
leave
xchg
lock
into
ret
les
xchg
xor
add
imul
push
stos
xchg
push
or
pop
mov
push
popa
fs
pusha
mov
pop
push
aam
arpl
mov
in
pop
mov
imul
stos
mov
imul
cmpsb
stos
mov
cmpsb
push
hlt
jmp
fstps
adcl
in
ret
popf
pop
mov
pop
stc
mov
ja
shlb
mov
pop
loopne
cltd
and
pop
pusha
mov
enter
mov
inc
dec
movsl
movsl
les
mull
fidivrs
mov
jne
mov
pop
push
and
and
aad
pop
xchg
insb
mov
scas
mov
loope
sub
push
jmp
xchg
xchg
sbb
js
cmp
or
sbb
and
ljmp
in
fstl
sub
and
mov
mov
xchg
dec
test
stc
pushf
pop
xor
lea
test
test
jmp
push
pop
popf
pop
mov
pop
inc
fs
rolb
cmp
mov
pop
sahf
aad
push
in
les
fs
mov
loopne
fisubs
jecxz
test
cmp
and
push
inc
test
frstor
cld
setno
sbb
pop
rorb
imul
xor
adc
push
popa
into
enter
pop
jge
push
push
adc
push
inc
jl
inc
fisttpl
int3
cmp
pop
mov
inc
mov
roll
jecxz
sbb
pop
dec
call
mov
stos
js
hlt
arpl
push
scas
jmp
push
test
sbb
push
cmpsl
out
dec
mov
sbb
cld
mov
sub
jmp
js
aam
pusha
sub
popa
xor
and
test
jmp
imul
pop
jge
adc
pop
in
ss
rcr
push
test
mov
pop
push
mov
jo
fldl2t
sahf
out
or
and
stos
lahf
push
mov
mov
dec
cld
fs
xlat
xchg
inc
in
lds
push
int
sahf
notb
into
sub
out
or
cs
xchg
cltd
in
xchg
negb
push
jns
xor
xor
jnp
daa
mov
mov
pop
pusha
sbb
mov
clc
adc
pop
int
pushf
sbb
cwtl
fwait
ds
push
leave
icebp
mov
sub
iret
jecxz
xchg
adc
ret
ljmp
rolb
xchg
jge
out
es
fiaddl
pop
aam
adc
sub
insl
sti
loopne
sub
mov
lods
loopne
rol
push
xchg
push
jo
xchg
push
jnp
aad
test
or
stos
ret
mov
test
outsb
jo
mov
push
cmp
enter
mov
pop
add
lods
leave
mov
adc
faddl
imul
es
mov
add
xchg
or
adc
sbb
fucomp
aam
icebp
in
mov
aam
cmp
inc
add
frstor
push
fsubrp
xor
push
or
dec
push
mov
loope
and
fbld
mov
or
push
and
adc
shrl
xlat
lds
sahf
push
loopne
loop
xlat
call
aad
outsb
fidivl
mov
in
fs
add
loope
jg
inc
fucom
pop
shr
mov
jmp
pop
mov
or
hlt
pusha
fcomi
fcoms
inc
dec
out
and
aam
loopne
shl
filds
mov
enter
ret
into
mov
sbb
push
inc
mov
mov
xchg
imul
mov
data16
inc
cli
sub
cmp
test
adc
jb
outsb
pop
imul
in
bound
jecxz
add
imul
mov
and
xlat
stos
jecxz
xchg
dec
xchg
shll
imul
shrl
ficompl
clc
jge
jecxz
push
jp
int
jo
or
in
icebp
sub
cld
cmp
jmp
mull
out
mov
mov
addr16
and
xlat
pusha
xor
mov
lock
cmp
ljmp
sub
dec
mov
cmpsl
loope
and
aaa
out
cmc
test
popf
aam
xchg
testl
mov
pop
lea
adc
mov
jo
mov
stos
dec
push
icebp
sub
test
xchg
pop
xor
imul
ljmp
idivb
mov
inc
jnp
ds
frstor
cld
in
push
ljmp
andb
addr16
in
es
push
stos
stc
fimuls
aad
shlb
test
lea
xchg
cmc
inc
or
push
filds
push
int
nop
sub
mov
rcrl
sub
cli
cmp
push
shl
in
adc
stos
loopne
fistpll
popf
clc
call
pop
mov
js
push
in
ljmp
scas
xchg
insl
xchg
sub
mov
inc
or
or
aam
and
mov
and
in
lret
in
and
test
jle
jne
mov
scas
xchg
adc
out
jmp
jmp
inc
sbb
bound
add
mov
fildl
pop
push
in
fnstenv
jmp
ljmp
rorl
mov
enter
aaa
mov
std
loope
or
inc
vmulps
push
out
sub
jp
jmp
xchg
imul
or
pop
aad
scas
mov
xchg
icebp
jecxz
fstl
or
in
js
mov
fstl
mov
call
mov
push
mov
inc
adcb
clc
push
sub
imul
pcmpgtd
popa
stos
fimuls
push
sub
movsb
dec
lret
mov
dec
out
ficomps
in
lcall
jno
ret
cld
jmp
or
mov
ljmp
dec
push
jo
stc
or
mov
into
mov
repnz
add
or
popa
mov
ret
adcl
or
loope
cld
stos
popa
mov
mov
jne
push
mov
xchg
adc
cld
sbb
stos
ja
nop
xlat
aam
jb
mov
fbstp
rcrl
inc
mov
and
sbb
rclb
stos
cmp
fiadds
movsl
fistps
ja
test
pop
jne
sub
test
pop
jnp
cmpb
in
xor
mov
sbb
stos
call
int
call
adc
ljmp
ret
outsb
into
into
mov
aam
movsb
rolb
sub
push
xor
in
cld
mov
dec
pop
rolb
test
and
nop
or
repnz
mov
mov
lret
int3
leave
icebp
mov
cltd
xlat
or
loopne
adcl
mov
sbb
jbe
nop
lock
inc
dec
imul
mov
repnz
dec
sub
icebp
stos
clc
mov
bound
and
les
addr16
movsb
pop
fbld
and
test
fists
or
bound
in
mov
fisttpll
divl
rol
gs
pop
adc
lods
sahf
repz
push
popa
nop
cmp
fwait
push
push
testl
xchg
fucomp
ret
mov
inc
popa
rcll
int3
in
popa
fstps
into
les
sub
fstpl
sbb
xchg
xlat
dec
pop
ret
imul
ficomps
push
or
loopne
push
ljmp
lret
fidivl
data16
loope
stos
cmp
fldenv
scas
sbb
or
js
in
cmp
lahf
xchg
dec
and
add
xor
out
mov
nop
cld
jp
test
and
mull
push
or
in
bts
bound
lods
icebp
test
sbb
jl
mov
nop
outsb
jno
pop
in
test
xchg
in
xchg
and
fnstcw
mov
sub
js
pop
rcrl
divb
push
push
icebp
lahf
add
push
mov
mov
push
fnstsw
adc
mov
jae
fstl
leave
fsubp
push
in
in
adcb
xor
fisubs
xchg
cmpsb
sub
pop
xor
mov
es
movsl
push
add
mov
mov
mov
call
mov
ljmp
into
inc
cmp
scas
mov
inc
mov
dec
les
push
outsl
and
and
sub
add
xlat
in
rorl
bound
ljmp
push
mov
and
push
in
and
push
fldl
leave
daa
mov
sti
mul
cmp
sbb
stc
mov
push
cld
jo
out
fdivs
inc
int3
rclb
mov
call
and
popa
loopne
ficomps
xchg
mov
push
in
cmc
jmp
or
jmp
lcall
movsb
xor
sub
xor
jae
mov
xchg
and
push
mov
arpl
jbe
dec
bound
jbe
filds
data16
lret
sub
lea
loopne
es
in
push
cmp
fisubrl
fdivp
mov
popf
cwtl
mov
imul
loopne,pn
pop
in
mov
test
cmpsb
mov
and
mov
popa
mov
out
xchg
fldt
pop
and
push
popa
push
mov
ss
inc
call
dec
in
aas
out
cld
repnz
and
data16
or
enter
and
xchg
ss
icebp
pop
adc
aaa
cmp
sub
mov
mov
leave
sbb
sbb
int3
jecxz
stos
shr
fdivp
mov
dec
imul
xchg
in
insl
fwait
out
add
into
rcr
inc
push
mov
or
dec
and
rcr
pop
dec
add
stos
push
pop
inc
mov
adc
dec
mov
es
mov
cmp
test
shrl
mov
pusha
lcall
jmp
sub
jmp
fstpl
loope
push
dec
mov
add
add
cmpsl
xchg
lea
mov
and
pop
lock
hlt
push
jne
loope
and
movsl
sar
out
hlt
sub
popf
sbb
repnz
pop
loope
adc
or
fistpl
jmp
fstp
sub
xchg
inc
iret
les
xor
or
orl
sub
shr
sbb
stc
sbb
ficoms
call
mov
in
call
in
hlt
cli
cwtl
lock
loope
pop
fs
mov
add
movsb
cmpsb
arpl
xchg
lods
out
adc
lea
loope
and
movsl
je
push
pusha
ljmp
jecxz
push
ficoms
fidivrl
idivl
jg
js
test
ss
fsubrp
adc
enter
dec
cmp
jb
mov
xchg
push
in
movl
adc
mov
cmp
push
in
lret
scas
call
daa
arpl
fs
in
out
loopne
sbb
aad
repnz
sub
shll
outsb
out
insb
jmp
rol
adc
nop
sub
mull
and
lods
mov
cmp
pop
mov
cld
jnp
es
sbb
dec
push
mov
popf
fisubrl
cld
sarb
fisubl
xchg
fwait
xchg
fs
ret
xor
adc
test
scas
in
call
out
shl
rolb
and
inc
aam
mov
jb
jecxz
movsb
scas
loop
js
nop
push
add
in
mov
clc
test
rorl
pop
out
or
mov
sbb
pop
mov
adc
hlt
push
scas
fxtract
loope
in
xor
jno
movd
or
out
dec
push
ret
es
mulb
movsb
lds
xor
and
int
xor
aad
add
sbbl
loope
bound
leave
add
and
jmp
aam
mov
pop
jmp
in
imul
sub
repz
pop
cld
orb
mov
xor
sbb
imul
insb
jmp
push
push
fistpl
cmpsb
subl
add
rolb
stc
ja
push
xor
repz
mov
or
mov
push
jmp
cmp
jae
jnp
ficoms
in
ljmp
std
test
mov
rcrl
rorl
jecxz
inc
push
and
filds
stos
jnp
loope
sti
in
mov
xchg
rolb
ljmp
out
mov
push
into
push
jecxz
sbb
adc
cmp
mov
stos
or
add
out
movsb
psubsb
xchg
rol
ror
xor
outsb
jmp
xor
and
cld
jecxz
int3
pop
lock
push
loope
add
push
loopne
push
mull
fbld
fucomip
xlat
xlat
xchg
mov
hlt
js
and
pop
adc
jg
shl
lahf
ret
xchg
mov
loope
or
or
push
fdivrl
mov
jge
pop
test
and
pop
out
sbb
fsubr
inc
rcll
and
ljmp
mov
inc
mov
pop
out
repz
jno
xor
jl
and
ret
adc
nop
jb
adcl
mov
push
inc
icebp
js
sub
mov
inc
or
lock
test
pop
shll
sbb
fimuls
jmp
test
push
sub
cs
pop
cmp
adc
push
push
out
lods
dec
stos
xlat
jle
mov
push
jge
mov
mov
adc
mov
int
call
pop
daa
jmp
dec
je
push
lcall
pop
popa
mov
movsb
sub
lods
mov
xchg
int3
smsw
push
adc
xchg
jecxz
out
in
loope
into
adc
dec
pop
or
test
ljmp
jecxz
jno
imul
test
outsl
sbb
in
pop
into
dec
fs
neg
fstps
mov
mov
stos
adc
rcrl
in
rorl
jmp
js
ja
jmp
cmp
testb
pop
jge
fdivs
test
loopne,pt
jno
pop
aas
jbe
mov
jmp
popa
push
stos
lods
sub
sbb
mov
dec
sub
jb
arpl
inc
sbb
pushf
mov
push
aam
jmp
inc
scas
jl
push
fimull
test
push
lods
fisubl
ret
loope
ja
test
xor
ljmp
shlb
push
xor
dec
xchg
mov
adc
outsb
jp
lods
lcall
fisttps
adc
jl
sub
and
dec
mov
push
mov
sti
lods
xchg
push
push
pop
dec
pop
pop
xchg
imulb
pop
sub
sar
and
cmpsb
and
popf
arpl
insb
cltd
test
fisubs
outsl
sbbl
in
fldl
das
loop
push
and
inc
mov
xchg
sti
xchg
lret
dec
jecxz
sub
in
out
and
xlat
es
xchg
pushf
shrb
adc
in
bound
shrl
xchg
frstor
icebp
je
neg
mov
cs
ljmp
and
inc
scas
out
xchg
sahf
popf
mov
push
sub
popl
pop
ljmp
mov
jp
push
xor
loopne
or
fnsave
inc
aaa
pop
xor
cld
shl
or
lods
jbe
insb
and
push
fdivrs
iret
xor
jge
sub
sarl
loopne
mov
cld
inc
ljmp
aam
push
cli
jge
mov
jne
ret
dec
ret
in
push
and
push
hlt
shll
loopne
stos
rcl
aad
popa
aaa
loopne
sahf
mov
bound
mov
fstpl
mov
sub
and
mov
flds
cmp
negb
pop
adc
loope
shr
dec
repz
add
hlt
out
mov
rcrl
nop
mov
dec
adc
jmp
loopne
xchg
or
loopne
lret
mov
loope
addb
jmp
aad
push
xchg
loopne
push
adc
stos
ss
enter
mov
loopne
cltd
adc
dec
push
lods
inc
in
popf
and
mov
add
int3
stc
fsubr
int3
sub
fstl
popa
jl
iret
push
imul
xchg
movsb
jne
xchg
cld
cwtl
mov
cmp
cmp
sub
mov
add
add
aaa
and
push
daa
jmp
dec
or
fsubrp
in
ja
lods
add
pop
enter
test
arpl
in
mov
shlb
loopne
sbb
into
mov
mov
in
jecxz
mov
mov
push
in
lods
call
in
call
mov
xor
fnsave
sbb
inc
or
jbe
inc
dec
push
outsl
cmp
pop
xor
jle,pt
andl
add
mov
ret
cmpsb
cmpsl
sbb
push
xchg
fs
inc
arpl
jge
leave
dec
sub
dec
loope
mull
out
cmpl
cld
jo
mov
pop
das
and
out
push
pushf
shll
data16
rcr
loopne
aad
cltd
iret
and
cmp
mov
punpckhwd
dec
ret
movsl
jle
les
into
arpl
addr16
ja
popf
shl
and
pop
push
rcrb
sub
dec
popa
into
std
sub
fidivl
test
push
popf
pop
insb
test
pop
mov
pop
jle
std
je
fchs
decb
adc
sub
ljmp
ret
popf
sub
jmp
inc
jecxz
push
les
repnz
mov
inc
aaa
xchg
shll
mov
fmuls
sbb
mov
mov
in
imul
xchg
lds
xchg
lds
lods
jne,pn
pop
mov
in
lret
or
xchg
ljmp
jmp
pop
mov
xlat
and
push
sbb
rorl
sbb
fsubr
fs
jecxz
mov
fstp
pop
push
clc
cmp
adc
in
xchg
insb
in
in
cmp
fcmovbe
push
outsb
sub
dec
sahf
push
rolb
sub
cmp
stos
xchg
into
dec
cmpb
sarl
in
push
dec
test
xor
ja
in
xchg
in
adc
mov
leave
icebp
popa
into
fiadds
lahf
inc
stc
inc
bound
mov
xchg
cmp
stos
bound
imul
or
rclb
push
cmp
into
pop
movsb
fidivrs
ljmp
sub
push
call
or
or
and
movsl
adc
push
out
mov
inc
mov
mov
jp
xor
testb
ret
sub
xchg
clc
push
and
push
clc
push
mov
or
stos
dec
ficoms
rol
arpl
push
and
popf
fs
fs
adc
mov
push
loope
xchg
push
into
hlt
jg
push
rclb
ret
jp
and
in
xorb
cmp
es
fs
xor
mov
and
push
push
movsb
ret
mov
xchg
push
xchg
imul
push
incb
mov
movzbl
lahf
icebp
or
cmp
push
fidivrs
testb
nop
jo
enter
push
and
cmp
inc
or
xor
push
cmp
push
dec
in
mov
pop
and
sbb
pop
xlat
movsb
ds
arpl
call
iret
cmp
jle
stc
out
sub
loopne
xchg
loope
jbe
xlat
in
out
xlat
push
push
push
cmc
js
or
negl
imulb
pop
push
jecxz
mov
mov
sbb
sub
inc
and
xchg
cmp
pop
imul
pop
inc
notb
dec
stos
rorb
cmp
lret
fidivs
jae
ljmp
or
mov
out
mov
xchg
int3
sarl
lahf
xchg
and
pop
xchg
pop
mov
and
mov
mov
sub
xchg
sub
ret
in
mov
and
or
inc
in
add
les
lds
insl
icebp
fldpi
push
mov
sti
mov
gs
sar
dec
les
push
cmp
in
sub
ret
subl
push
ret
leave
aad
add
pop
stos
pop
fstps
cs
inc
jb,pn
lea
loope
sahf
jecxz
enter
idiv
std
inc
adc
pushf
pop
jmp
movsl
ja
jg
push
popf
xchg
movsb
jmp
insb
and
stos
inc
js
push
sub
push
in
dec
imul
test
in
sub
call
mov
jp
leave
jecxz
data16
adc
stos
faddp
clc
mov
lods
sbb
mov
push
xor
or
into
and
int
xchg
arpl
mov
iret
push
xchg
dec
std
shrl
divl
outsl
mov
mov
add
mov
inc
adc
fildll
je
mov
pop
fsub
jle
ljmp
xchg
arpl
lods
ret
xchg
arpl
jmp
cltd
mulb
cmc
ss
or
jno
outsl
aad
jmp
jecxz
sahf
jbe
shrb
push
ljmp
xchg
mov
add
fadds
jae
xchg
jp
fists
push
sbb
enter
sub
pop
fstp
shl
cli
mov
push
scas
mov
loope
and
add
je
mov
gs
ror
sbb
push
andb
in
and
andl
fs
mov
aaa
mov
lods
jge
mov
rol
aaa
inc
jmp
inc
push
pop
inc
bound
push
xchg
and
ret
dec
fneni(8087
rol
sub
xor
test
cmpsb
push
cmp
and
pop
arpl
mov
sub
shrb
pusha
dec
sahf
pop
es
dec
arpl
mov
xchg
sub
fcomip
xchg
cld
xchg
push
in
dec
icebp
rcl
cmp
xchg
lret
leave
jno
pop
sub
shll
sub
outsb
inc
dec
fwait
mov
ljmp
aam
mov
gs
sahf
data16
leave
hlt
jb
sub
jnp
mov
pop
les
push
mov
and
dec
and
dec
push
jecxz
cmpsb
push
mov
arpl
add
idivb
mov
push
mov
pop
sub
xor
inc
imul
mov
mov
jno
and
lahf
lods
push
popf
shr
aad
cltd
inc
bound
dec
xchg
cmpsb
inc
sub
fs
sub
sub
movsb
stc
sub
xchg
mov
movsb
enter
jp
scas
negl
ficoml
xor
cmp
cs
icebp
adc
int3
fadds
xchg
ret
mov
roll
ficomps
popa
or
cli
les
loopne
clc
ret
adc
stos
mov
sub
scas
jmp
fisttpll
add
or
lahf
cld
pop
sti
les
lahf
and
pop
pop
lea
js
jmp
sub
or
imul
sahf
in
cmc
or
jge
dec
in
dec
loope
cld
cmp
sbb
jbe
lock
clc
std
inc
icebp
sbb
loope
daa
push
cmp
sbb
adc
mov
lret
repnz
sti
sub
xchg
testb
pop
insl
iret
mov
loop
adc
ss
hlt
popa
cmp
add
loope
cmp
xor
in
cmp
fldenv
pop
sbb
icebp
rcrb
sub
inc
sbb
dec
mov
cld
outsb
dec
stos
sbbb
xor
xchg
lahf
jmp
xor
and
pop
popf
arpl
push
cmp
push
es
cld
adc
je
xchg
std
ds
and
fs
adc
and
clc
inc
mov
iret
cmp
pop
arpl
push
pop
aaa
call
or
aad
sbb
rcrl
aad
mov
dec
hlt
push
les
pusha
xchg
stos
test
stc
ja
push
inc
data16
ja
aaa
imul
test
cmp
push
loope
mov
pop
sahf
mov
sbb
adc
sub
cmc
inc
xchg
xchg
aam
mov
cmp
in
sub
sbb
mov
sub
mov
cli
lret
mov
push
and
das
loope
mov
in
jae
hlt
push
push
xor
data16
add
lods
jnp
mov
movsb
rolb
push
arpl
pop
test
rol
sub
jmp
jnp
dec
rol
xor
cld
pop
mov
mov
cmpsl
cmp
xorl
vcvtsi2ss
fisttps
pushl
sbb
mov
int
icebp
xchg
rol
call
je
xchg
in
add
jmp
xchg
lcall
data16
jle
sub
jmp
lods
stos
jl
sub
pop
jnp
test
or
mov
xor
fstp
jecxz
mov
icebp
sbb
inc
stos
nop
loope,pt
scas
jne
mov
pop
pop
int
fldenv
and
push
inc
sbbl
test
sbb
icebp
hlt
lea
or
in
pop
lds
xchg
pop
push
hlt
lds
push
xchg
jl
fisubrl
aam
lock
in
outsb
xlat
dec
push
out
stc
test
cmp
or
fwait
arpl
pop
mov
mov
rcll
mov
mov
sbb
lret
js
xchg
sbbb
pop
and
nop
fistpl
push
outsb
in
jo
ffree
mov
lret
clc
call
sub
fwait
or
jmp
push
test
ret
mov
or
mov
daa
xchg
fidivrs
ficoms
loope
inc
adcl
loope
xchg
jecxz
mov
mov
stos
mov
lea
xchg
outsl
fucom
pop
lock
or
ja
test
pop
xchg
jmp
or
adc
jns
fisubs
ja
out
cmovg
mov
jle
enter
inc
stos
out
int
cmp
dec
sub
mov
mulb
or
sub
fdivl
lods
shrb
cmpsb
xchg
repz
cs
adc
xor
das
push
div
int3
push
push
je
push
jge
sti
pop
xchg
dec
inc
pop
jle
dec
rcl
dec
rcrb
pop
cld
divl
xchg
inc
and
sub
rcll
adc
push
sub
pop
or
add
mov
mov
add
outsl
xor
pop
pop
icebp
push
pop
rcrl
stos
aad
mov
notb
lea
aad
jb
dec
dec
sub
repnz
add
into
cmc
pop
and
addr16
mov
push
add
not
popf
pop
clc
dec
lret
mov
jmp
fucomi
ret
jns
pop
bound
pop
lods
mov
loopne
aaa
insb
gs
test
mov
std
jno
div
jnp
xor
test
push
ret
mov
sub
imul
mov
ret
dec
pop
push
imul
hlt
cmpsb
leave
sbb
push
sub
push
int3
mov
cmp
push
fiaddl
loope
out
sub
xchg
out
mov
pop
loopne
mov
xor
subl
jo
js
cmp
sbb
das
xchg
sti
fnstenv
iret
pop
dec
push
adc
arpl
jns
and
lret
xor
jmp
fildll
xlat
test
cltd
sbb
xchg
jmp
push
int3
inc
adc
jno
cpuid
or
jle
clc
or
ffree
dec
aad
and
lods
pop
outsb
and
sub
pusha
frstor
imul
cmp
inc
lds
insl
pop
push
popa
aad
ja
xchg
jae
xchg
iret
inc
in
imul
leave
mov
push
fmul
outsb
add
push
in
jle
dec
cmc
inc
rclb
cltd
mov
adc
test
insb
hlt
xchg
fimuls
aas
icebp
pop
into
and
pop
push
lahf
pop
jmp
mov
pop
ficomps
or
and
sub
fcomi
push
jecxz
xor
and
mov
or
sbb
dec
test
pop
test
mov
ret
test
ds
out
jle
fdivrp
dec
sahf
adc
sbb
mov
std
ret
xchg
aad
pop
xchg
xchg
jmp
in
add
daa
mov
addl
jb
sar
push
nop
inc
rcll
aam
out
push
add
xor
push
rorl
loopne
cld
push
xchg
xor
mov
dec
adcb
sub
and
sbb
fadd
fldenv
sub
shll
in
in
fwait
pop
fstpt
pop
fs
and
sub
xor
fidivrs
test
pop
in
xchg
jns
leave
clc
shlb
add
mov
cmpsb
cmp
jmp
pop
add
mov
pop
push
pop
sub
pop
andl
mov
bound
fnstenv
mov
cmp
es
gs
jle
xchg
arpl
shll
les
in
js
mov
hlt
pop
bound
leave
ja
and
jmp
pop
xor
adcb
inc
and
mov
ljmp
loop
push
jmp
or
dec
insb
jp
test
fiadds
pop
push
in
jmp
sar
test
cmp
mov
inc
xchg
ljmp
mov
jbe
sub
jecxz
xchg
fs
xor
cli
xchg
fs
std
or
mov
mov
xchg
loope
loopne
fsubs
sub
addr16
je
cltd
out
or
cmp
mov
xchg
lret
xchg
xor
sub
fld
xchg
divl
or
incl
inc
and
cld
sub
adcl
lds
loop
xor
stc
and
lods
jae
cmpb
push
mov
imul
sbb
xor
ret
aam
xchg
mov
push
hlt
inc
nop
jne
ds
rorl
lea
bound
shlb
nop
popa
pop
movsb
roll
loope
es
xorb
ret
mov
push
pop
outsb
insl
mov
mov
ret
add
xor
popa
les
mov
outsb
cltd
pop
bound
ljmp
ljmp
xchg
shll
pop
insl
movsb
loopne
mov
adc
or
imul
call
test
sbb
arpl
lahf
dec
out
ret
xor
loopne
inc
fnstsw
ror
aam
arpl
mov
aad
aam
out
popa
pop
pop
xchg
sahf
pop
mov
mov
icebp
out
push
ja
aad
lods
mov
ret
pushf
and
in
push
jmp
xchg
fsub
inc
int
fsts
sahf
push
test
push
mov
roll
fistpll
inc
pusha
fistpll
sbb
push
push
lahf
inc
fcmove
jle
lcall
into
sub
xchg
sti
loopne
sub
push
jecxz
dec
and
leave
iret
sbb
mov
cmp
aaa
js
lret
movsl
mov
pop
imul
and
scas
lea
cmp
fcmovu
dec
mov
cld
mov
cmp
push
pushf
xor
cmpl
cmp
mov
mov
out
scas
and
fsubl
sub
lods
mov
jmp
insl
movsb
cld
jbe
cmpsb
sbb
mov
rorl
pop
ret
xchg
jge
dec
mov
into
jge
int
sahf
ret
hlt
fcompp
ret
inc
cmpsl
rcl
add
cld
jecxz
ret
dec
inc
shl
sarb
iret
xchg
aad
sub
or
stos
ss
js
cmpsb
aas
loope
addr16
dec
push
or
xchg
lds
insl
outsb
push
dec
sbb
inc
mov
js
jl
xchg
std
repz
jno
cmp
inc
in
adc
inc
sbb
xchg
push
jmp
outsb
ds
mov
fisttps
sub
clc
imul
sub
into
sub
pop
mov
movsb
mov
cmp
cmpsb
lret
cmp
mov
jle
add
or
push
mov
cmp
jbe
push
mov
aam
rorl
cmc
test
jo
scas
dec
xor
dec
mov
je
add
aam
add
pop
mov
fcoms
jp
mov
or
into
cld
lret
mov
testb
pop
sbb
add
stos
push
rolb
std
cmp
idivl
fs
push
xor
roll
mov
xorb
in
scas
imul
outsl
add
add
fildl
push
and
and
and
mov
movsb
fidivrs
pusha
mov
dec
cs
les
loope
roll
aas
add
iret
pop
test
push
cmc
sbb
jns
push
adcl
rcrb
push
scas
cld
les
mov
rol
push
out
dec
bound
out
pop
and
adc
cs
fmull
jae
jmp
loopne
fiadds
cmp
sbb
jbe
dec
xorb
pop
mov
lods
clc
pop
xlat
dec
pop
mov
icebp
pop
add
ljmp
orl
popf
aas
bound
dec
xor
dec
or
ret
push
mov
loopne
push
push
inc
push
pusha
mov
lahf
repnz
dec
jl
stos
lods
xor
pop
xlat
test
in
mov
ljmp
ja
stos
push
pop
les
xchg
mov
outsl
mov
popf
jnp
mov
out
clc
pop
jmp
lret
adc
lock
ljmp
mov
push
sahf
imul
mov
div
rorl
push
mov
mov
jmp
icebp
cmp
stos
jg
adc
in
repnz
in
orl
movsb
in
sub
loop
outsl
movsb
iret
mov
fisubrs
into
push
xor
arpl
fnstenv
push
push
sub
pop
out
add
mov
cld
test
ror
std
ret
xor
ret
xchg
sub
mov
dec
sub
rorb
lret
adc
fsubrs
outsb
sbb
data16
cmove
repnz
push
shlb
mov
jbe
mov
mov
mov
xchg
mov
fnsetpm(287
mov
js
cwtl
repz
cmp
movsb
aam
sub
pop
scas
lods
xlat
pop
jb
cs
pop
shrb
mov
in
rcl
pop
xchg
and
sar
jo
dec
jbe
pop
push
outsb
sti
pop
in
jle
in
push
hlt
push
loope
sbb
fisttpl
sbb
testl
push
and
mov
sub
arpl
add
loopne
icebp
pop
sarl
imul
gs
and
js
sub
push
std
pop
inc
movsb
out
cld
call
fcmovnu
mov
cmpl
sub
xorb
adc
xor
roll
xchg
das
and
and
test
inc
add
jp
aam
sbb
popf
lret
shr
jnp
dec
pop
and
ficoms
stos
in
je
aad
add
mulb
jp
ds
lods
inc
shlb
insb
mov
aam
xchg
test
fcom
and
int
sbb
in
ret
cmp
nop
jge
sbb
or
jmp
add
les
xor
mov
shrl
rcll
cmp
cmp
neg
cs
clc
pop
in
or
sbb
sub
push
bnd
sub
mov
cmp
shll
xor
and
jbe
lods
movsb
adc
insl
add
pop
sti
out
dec
push
clc
aam
inc
lods
sbb
mov
xchg
test
add
or
xchg
inc
test
xchg
stos
mov
movsb
xorl
loopne
xor
sarl
rclb
hlt
in
fbld
cmpl
sbb
pop
or
nop
leave
data16
loopne
and
mov
in
pop
jb
xor
pop
popf
out
mov
andb
ljmp
add
sub
cmpsl
out
fs
inc
ljmp
fstpl
or
insl
incl
aam
ja
jb
inc
push
push
ljmp
xor
out
push
cs
cmp
jnp
fstps
cld
pop
mov
lea
xchg
dec
ss
xchg
sbb
dec
push
rclb
in
dec
inc
cltd
jle
in
sub
loope
cmp
dec
push
in
rol
and
repnz
cmp
andl
xlat
popa
push
nop
jmp
inc
sbb
pop
cmpl
sub
int
lea
push
and
mov
mov
jecxz
js
inc
test
loopne
mov
sub
insl
xlat
add
fsubrp
or
mov
filds
int3
xchg
ret
stos
jp
push
lret
andl
es
xor
out
sub
push
das
fs
hlt
jnp
jmp
clc
mov
and
mov
shrl
shlb
out
pop
fisttps
sbb
cmc
into
test
add
adc
cltd
mul
shr
icebp
out
in
std
into
lahf
sub
rol
int3
shr
pop
push
es
fsubs
pop
add
lahf
icebp
add
fisttpl
test
mov
movsb
icebp
push
inc
or
xor
outsb
aaa
stc
inc
pop
mov
loopne
fucomi
sub
stos
xor
push
mov
int
or
xchg
sub
aad
jne
push
mov
addb
aaa
das
leave
pusha
test
sbb
add
and
call
jb
cmp
fs
mov
jl
loope
clc
ffree
nop
and
sub
sub
sahf
xorl
jmp
jae
and
jmp
ror
call
inc
in
xchg
ds
loopne
or
mov
mov
lds
add
ljmp
icebp
and
xor
int
fcmovb
out
mov
test
cmpsb
incb
enter
lods
push
mov
sub
jne
cld
ds
cld
xchg
cmp
and
test
rclb
lods
mov
stos
in
pop
je
pop
push
dec
lcall
stc
fistl
pop
into
dec
push
sti
adc
jecxz
cltd
pop
dec
shl
xchg
and
jno
mov
nop
and
enter
push
mov
fcoml
das
loope
repnz
sbb
adcl
rorb
imul
sub
imul
cmp
and
push
stos
xchg
fucomp
jae
fst
fistpl
jo
das
pop
rclb
lea
aad
xchg
lock
ficoms
pop
pop
and
icebp
out
push
jnp
ljmp
fwait
mov
jne
add
imul
or
cmpsl
ljmp
cli
dec
fistl
sbb
push
fiadds
mov
repz
rorl
xor
int
out
mov
push
mov
fdivrp
push
movsb
inc
imul
push
decb
cmpsb
jp
push
or
or
pushf
lahf
std
inc
push
fmul
mov
xchg
sahf
arpl
insl
arpl
adc
gs
mov
jle
push
and
xchg
cltd
xor
push
push
cwtl
pusha
and
jae
push
testb
mov
xchg
stos
movsb
in
insl
std
or
loope
push
fsub
insb
jns
inc
adc
dec
stos
mov
mov
dec
mov
xor
mov
jge
inc
lea
aam
idivb
sbb
push
cmc
cld
push
jbe
adc
cmpsb
into
push
inc
jmp
popa
ficompl
aas
push
repz
mov
pop
in
xchg
cwtl
inc
inc
lds
inc
aam
test
clc
push
push
mov
mov
push
push
jno
in
aaa
mov
and
xchg
popf
inc
inc
cmc
jmp
pop
idiv
fs
mov
and
jbe
lods
cmpsb
xorl
mov
pop
mov
pop
push
insl
shl
icebp
dec
lods
mov
sub
std
mov
mov
jne
icebp
xchg
lods
shlb
idivl
fstps
lock
mov
fimuls
pop
sub
iret
and
push
popa
mov
mov
xor
loopne
shl
sbb
sub
sarb
jb
xchg
cmp
xchg
movsl
fisubs
loopne
out
cmp
inc
dec
pop
xor
fidivrs
out
out
les
nop
xor
pmaxsw
mov
in
jecxz
out
xchg
push
xchg
movsb
data16
xchg
into
sarl
cmp
ja
dec
adc
cmp
insl
xchg
test
jge
hlt
lea
ret
jmp
dec
popa
push
sar
jmp
ljmp
inc
jo
inc
or
popa
pop
adc
in
dec
dec
sbb
test
push
jecxz
pushf
popf
push
or
lret
xchg
push
cld
xchg
mov
test
mov
xchg
jecxz
ret
adc
xor
mov
mov
out
sub
roll
fisubrs
sbb
cld
pop
int
iret
hlt
mov
pop
in
mull
test
xchg
or
movsb
subl
sbb
fcmovnu
je
ret
adc
lock
push
fs
leave
cmp
int
test
xor
fmul
call
cwtl
cs
cmp
and
bswap
out
add
jno
shll
movsb
lret
aam
jo
adcb
xchg
jno
shrb
dec
xchg
cmp
inc
sub
jecxz
gs
aam
leave
mov
mov
bound
test
in
inc
pop
loopne
mov
cmp
fists
popa
stos
cmp
and
jmp
add
sub
lock
jmp
xchg
push
cmp
lcall
imul
dec
xchg
adc
cmp
xchg
iret
push
pandn
and
inc
rorb
subb
xchg
jg
sbb
cmp
fldl
arpl
stos
mov
sbb
lea
nop
in
jmp
inc
stos
jne
xchg
xchg
daa
out
sub
adcl
xchg
pop
shlb
sbb
call
and
add
xor
notb
fidivs
mov
cs
lock
lock
fcomps
scas
xchg
js
aad
lret
dec
subl
mov
mov
mov
repnz
rorl
xchg
or
lods
mov
push
pop
sbb
inc
xchg
fildll
add
push
jecxz
rcl
pop
pop
mov
pop
inc
mov
and
cli
hlt
ret
sahf
adc
push
repz
ds
or
cs
int
jo
jmp
or
popf
pop
in
mov
add
or
push
gs
ror
hlt
adc
stos
inc
nop
jmp
rolb
leave
mov
mov
inc
adc
mov
inc
insb
adc
push
flds
mov
mov
lret
add
lds
lds
hlt
int
inc
inc
inc
xchg
jae
stos
loope
daa
dec
imul
mov
fbstp
jecxz
ja
aas
cmc
xor
xlat
cmpsb
xchg
lods
stos
pop
icebp
pusha
cltd
pop
mov
inc
mov
stos
test
jo
cli
test
adc
outsl
xor
mov
jl
jmp
add
hlt
enter
mov
je
in
dec
sarb
jne
cmc
enter
cld
sub
shlb
cld
scas
jae
dec
push
test
lods
pop
mov
jle
sbb
fistpll
mov
out
scas
frstor
push
fisubrs
pop
in
into
push
aas
dec
int3
push
cltd
lea
aas
inc
cwtl
fidivl
ljmp
bound
dec
std
popf
cmc
rolb
push
adc
lret
dec
in
pop
aam
cli
ret
fsubr
xchg
ret
adc
sahf
cmp
movsb
mov
fcompl
lret
loopne
fs
aaa
adc
lret
mov
inc
and
push
int
push
lret
aas
fisubrl
xchg
sahf
lahf
arpl
repnz
and
out
or
jno
jle
adc
mov
lret
cld
pop
mov
popa
and
and
and
sbb
nop
sbb
ss
test
jbe
jns
xor
ja
outsb
pusha
leave
sbb
mov
rcrl
lea
hlt
mov
call
idivl
xor
sbb
daa
fs
and
inc
mov
xlat
gs
mov
inc
inc
fucom
fistpl
add
or
aam
stos
iret
loopne
andb
cltd
jle,pn
test
filds
pop
stos
push
xor
push
fnsave
mov
int3
std
mov
add
cld
test
push
cmpsl
in
add
jp
ljmp
cld
sbb
call
inc
std
pop
repnz
loopne
rolb
fistps
sbb
cs
lret
xor
shrb
dec
addr16
push
xchg
scas
xor
sti
sub
jo
cmp
xor
pop
xchg
lahf
lret
test
push
pop
out
sub
sub
repz
xor
sub
in
pop
adcl
lds
stos
iret
jmp
addr16
test
std
roll
mov
fmull
imul
test
mov
jo
mov
fimuls
jno
fs
minps
mov
mov
dec
test
int
mov
sub
jecxz
lods
jmp
pop
divl
test
xchg
in
sti
mov
jecxz
jmp
fildll
inc
loop
es
arpl
jecxz
pop
cld
cs
leave
aaa
push
and
pop
test
cli
aaa
xchg
idivl
sar
add
xor
loope
pop
in
cwtl
inc
jno
popa
push
sar
out
mov
cld
and
push
pop
and
leave
iret
xchg
fs
imull
xchg
outsl
pop
and
pop
cmp
mov
popa
sub
loope
dec
aas
jl
inc
dec
rcrb
mov
ficomps
adc
lds
xor
mov
test
leave
ret
icebp
cld
dec
mov
and
jbe
xchg
mul
icebp
repz
pop
es
mov
filds
xchg
adc
adc
xor
into
mov
insl
sarl
dec
out
lahf
adc
and
pop
inc
icebp
pop
push
lcall
lods
push
sbb
nop
icebp
mov
test
jo
xor
insb
mov
mov
mov
jg
cli
mov
loope
fiadds
cmp
push
lcall
leave
fists
inc
shll
pusha
adc
lret
fsubr
jecxz
clc
pop
jle,pn
cmc
scas
cwtl
idivl
push
adc
in
xor
sub
ja
lret
mov
bound
fistpll
mov
ss
xor
data16
push
in
js
push
push
cvttps2pi
inc
in
mov
adc
xlat
stc
aaa
std
xchg
sub
inc
fucomip
fs
fmuls
clc
cld
xchg
loopne
inc
mov
or
bound
ja
pop
scas
pusha
in
pop
cmp
rorb
daa
clc
jecxz
mov
aam
mov
push
xor
icebp
aad
lods
cmpsb
add
sbb
jb
lods
je
mov
adc
fidivs
sbb
xchg
jb
or
push
inc
aas
in
test
ficompl
insl
xchg
or
int3
into
fadd
mov
dec
cmp
mov
inc
ljmp
add
push
sahf
imul
sbb
xchg
push
movsb
mov
xchg
clc
stos
jnp
ret
xchg
lock
pop
nop
pushf
imul
mov
clc
push
dec
cltd
pop
dec
push
lahf
inc
and
push
std
sbb
jo
cmp
pop
ret
dec
push
in
test
mov
pushf
not
mov
fnstenv
out
jle
dec
pop
jno
push
loope
out
out
mov
push
adc
cmp
nop
shll
loopne
nop
lret
pop
dec
xlat
dec
loopne
jb
int3
loope
into
fdivl
and
dec
in
cs
jnp
cmp
jb
pushf
push
push
mov
inc
movsb
mov
repz
xlat
fmuls
jo
insl
popa
adc
inc
xlat
fstps
dec
inc
and
push
js
jecxz
jl
xchg
lods
les
test
addr16
sub
arpl
push
push
loope
jmp
pop
loopne
stos
sbb
cmp
stos
sbb
or
test
loope
mov
popf
pop
mov
sahf
stos
in
dec
xchg
mov
fcomps
ja
stc
fstpl
sahf
test
dec
aad
mov
push
fs
adc
dec
push
lods
enter
mov
mov
mov
push
mov
and
das
cmp
xchg
rcrb
mov
dec
lods
icebp
stc
pop
dec
ret
inc
pop
jae
ret
lcall
aad
jne
nop
or
dec
xchg
mov
repz
or
pop
test
adc
lods
jns
fisubrs
dec
xor
or
insb
andb
ss
popf
scas
nop
cld
push
jo
mov
sub
xchg
fildl
ffree
adc
and
pop
lret
lret
jecxz
sub
stos
mov
mov
in
or
mov
xchg
xchg
jecxz
ss
mov
fnstsw
jbe
enter
cld
xchg
push
clc
pop
jmp
insl
push
add
cli
mov
pop
jb
pop
xadd
dec
xlat
mov
add
aam
enter
fadds
roll
je
add
fidivrs
arpl
mov
xchg
popa
cmp
mov
sarb
neg
test
daa
xor
aaa
sbb
pop
nop
mov
enter
mov
jns
xchg
jae
push
dec
mov
mov
xchg
imul
cli
fwait
test
test
and
and
push
xchg
xor
shll
inc
fidivs
xor
inc
aam
in
mov
push
rorl
jmp
inc
ljmp
push
or
sub
xchg
and
sar
and
xchg
dec
stc
inc
aam
repz
cmp
dec
xchg
imul
inc
add
popa
xlat
pop
movl
cld
test
pop
dec
jmp
jb
leave
leave
sbb
shll
daa
enter
xor
mov
shrb
imull
loop
dec
das
mov
add
xchg
imul
ja
adc
jb
test
in
in
subb
cmp
daa
int3
into
imulb
outsb
xchg
xlat
loop
arpl
shll
mov
adc
out
push
cmp
and
cmp
test
mov
push
scas
loopne
cmp
sahf
dec
inc
rorl
stc
dec
movsb
shrl
stc
jbe
int3
add
out
and
push
mov
pcmpeqw
jb
dec
xor
mov
mov
pop
sbb
repz
lcall
mulb
push
dec
rolb
push
cmpsl
inc
arpl
and
inc
pushf
aam
gs
notb
shll
push
rcll
shll
insl
aam
in
lea
je
mov
dec
aam
fucomi
jle
push
fisubl
lods
mov
pop
dec
cld
sbb
add
in
mov
sar
mov
leave
jbe
push
cmpsb
fmulp
jne
cmp
add
pcmpeqb
push
es
jmp
xchg
jle
mov
pusha
jae
mov
scas
push
fwait
dec
push
or
cld
pop
xchg
jb
dec
or
xor
mov
and
mov
pop
je
scas
sub
pop
xchg
inc
test
in
test
lds
imul
pop
rcl
inc
xchg
sbb
mov
xor
or
inc
test
sahf
inc
lret
aad
mov
push
sbb
or
ds
xchg
and
mov
clc
fists
rol
out
in
lret
call
lods
lods
sti
dec
jp
inc
fdivrp
cld
stos
stc
and
or
int
mov
fmuls
in
in
sti
decl
int3
loope
test
cmp
mov
fldl
jbe
push
test
shl
shll
xchg
dec
loope
movsb
sbb
cmp
into
shl
les
repz
cmc
rcrl
arpl
jno
or
inc
aam
leave
push
mov
mov
stos
insb
mov
pop
xchg
loopne
or
in
repz
stos
out
test
inc
or
adc
stos
not
adc
fistps
cmpsb
popa
cmp
jp
mov
cmp
jbe
data16
jmp
add
xor
xchg
fisubl
mull
sahf
push
xor
xor
xorl
cmp
sub
fcmovnbe
dec
imul
pushf
stos
loope
add
aam
xchg
dec
arpl
notb
mov
pop
inc
cmp
push
cmp
mov
das
sahf
mov
jae
sbb
and
stos
shlb
ret
pop
cwtl
addl
or
adc
dec
lods
xor
test
xchg
in
ss
pop
xchg
push
addr16
push
lret
jbe
adc
pop
or
mov
and
jmp
pop
stos
xor
sbb
jmp
fistps
lods
das
push
iret
ficoms
xorl
rcl
out
shlb
pmaxub
inc
clc
std
push
inc
cmp
sar
ficoms
or
xchg
and
leave
push
and
and
dec
dec
mov
divb
xor
fcmovne
cmp
push
rclb
or
cmpsb
popa
movsb
push
loope
dec
add
aad
or
loopne
lods
stos
dec
xor
scas
jge
jp
clc
pop
stos
or
nop
repz
mov
mov
mov
xchg
imul
loopne
incl
xor
push
mov
push
mov
test
xchg
xor
add
loope
pop
out
fidivrs
mov
lea
cmc
lar
cmp
js
jle
or
dec
rcrl
cmp
add
out
ds
clc
pop
sbb
cmp
fcomps
adc
incb
test
movsl
sahf
pop
shll
imul
pushf
into
push
push
xor
out
in
push
lret
mov
add
loope
clc
std
add
hlt
mov
add
push
cmpsb
out
dec
dec
fsubr
jae
inc
dec
xchg
mov
or
je
scas
out
fstpl
mov
lds
xor
test
sahf
inc
aaa
xor
jge
jb
cld
mov
rolb
imul
mov
mov
repz
imul
mov
dec
push
stos
jmp
aam
or
faddp
in
out
out
shrl
les
loopne
jle
push
leave
loopne
into
stos
pop
dec
je
dec
jae
bound
aam
or
push
inc
cmp
and
ja
rorl
xor
mov
js
inc
arpl
notb
jnp
cwtl
cmc
jmp
in
mov
shrb
testl
pusha
cli
push
imul
fidivrl
sub
jl
jge
jge
ret
popa
dec
cltd
push
pushf
pop
xchg
stos
repnz
xchg
repnz
lahf
sbb
fs
push
lea
scas
mov
insl
lahf
test
pop
test
cmp
aad
xorps
and
mov
jmp
add
pop
into
cld
lret
push
icebp
js
dec
xchg
shl
push
fstpl
fisubs
lock
nop
iret
inc
mov
aam
fisubrs
lock
lods
popf
popf
cltd
stos
xchg
adc
fidivrs
call
jnp
hlt
rcl
insl
mov
addr16
xchg
sbb
out
arpl
orl
int
and
cmpsl
call
test
sbb
push
rorb
push
imul
pop
fdivrl
pop
ret
jp
pop
push
popf
sbb
jmp
cmpsb
lock
rorb
xchg
fcompl
int
into
add
push
sbb
fsubp
push
sub
jne
stos
std
push
adc
mov
adc
in
and
ret
add
inc
arpl
ja
loopne
fildll
cmc
sub
js
pusha
sti
pop
sub
sahf
stos
idiv
stc
les
adc
pop
sar
and
mull
lds
and
mov
sub
in
mov
hlt
dec
into
test
jb
mov
in
loopne
fldl
mov
pusha
testl
das
cwtl
and
cli
and
shr
sub
ret
sar
pushf
outsb
movsl
or
xchg
pop
xchg
out
in
fbld
bound
in
stos
mov
shlb
push
xchg
cmpb
pop
pop
dec
jle
sbb
lods
roll
and
add
repnz
add
cld
sahf
push
push
dec
xchg
mov
loopne
dec
rcr
push
push
mov
loope
ja
aam
out
popf
shll
jb
cltd
ret
cmp
cmp
sub
xchg
cmp
lods
in
sub
fcomip
jns
lret
sub
add
cmp
sbb
cs
popf
rcll
scas
sahf
movsb
jno
outsb
movsb
fcoms
pop
lods
cmp
loopne
xlat
mov
loopne
and
shrl
mov
jae
bound
cmc
shrl
subb
dec
call
push
mov
test
mov
mov
clc
movsb
shl
xor
and
sub
cltd
mov
jg
lea
mov
int3
mov
pop
and
icebp
mul
pop
xchg
mov
xchg
xorb
mov
ss
scas
sbb
mov
xchg
orb
pop
mov
jb
imul
pop
mov
shll
dec
mov
ljmp
cmp
xchg
jl
loopne
cld
lea
push
pop
xchg
cmc
and
push
add
mov
push
dec
cltd
or
out
test
loopne
aaa
scas
dec
dec
rcr
std
xchg
gs
ljmp
mov
mov
xlat
xchg
aam
mov
in
dec
loope
ljmp
sahf
inc
in
add
jo
push
xchg
daa
inc
aas
in
ret
xor
fistl
pop
leave
in
xor
inc
hlt
pop
fisubs
inc
inc
pop
in
pop
js
mov
dec
xchg
mov
jo
shr
sbb
and
addr16
xchg
xchg
pop
pop
xor
stc
repnz
stos
adc
mov
lods
repz
mov
push
inc
test
mov
rclb
dec
mov
not
scas
in
lret
ret
xchg
bound
test
pop
add
lods
sbb
stc
mov
fmuls
mov
add
sub
sahf
aam
repz
add
rorl
or
std
dec
daa
imul
mov
hlt
divl
mov
or
enter
cld
les
ret
cmp
and
cs
in
pop
push
sbb
xor
sbb
sbb
outsb
mov
cld
insb
push
push
add
push
incl
aas
in
adcb
mov
lods
movsb
push
sub
fucomp
pop
mov
cmc
jmp
movsb
sarb
pop
stos
adc
jb
in
xchg
cld
es
repnz
sub
aad
cmp
shr
mov
inc
and
and
jmp
push
jecxz
mov
loopne
jecxz
and
in
cld
mov
cmp
jno
ds
xchg
ret
mov
stos
enter
and
and
mov
ret
push
sti
add
mov
rorl
lcall
outsb
rolb
inc
mov
ljmp
push
in
jg
sahf
lcall
pop
mov
add
pop
mov
add
jnp
mov
imul
insb
mov
pop
mov
mov
stc
in
push
aas
xchg
sbbl
jp
lods
push
incb
icebp
mov
cld
or
adc
mov
cmp
bound
add
dec
pop
aas
test
mov
iret
add
fisubs
jg
aas
jo
pop
xchg
cmp
pop
js
test
add
push
into
cmp
rol
jg
fdivp
dec
movsb
rcr
stos
jo
filds
mov
cwtl
aad
add
or
std
rcrl
lods
imulb
inc
ficoms
sub
push
adc
and
mov
leave
push
mov
pushf
lret
stos
out
popf
pop
stos
dec
cmpsb
jecxz
jb
sub
insl
std
cld
jmp
in
hlt
mov
dec
fldl
inc
fstps
add
pop
mov
mov
aas
jg
mov
movsb
in
dec
lcall
aaa
sahf
insb
push
movsb
add
xor
and
or
ss
popf
fcom
jae
cmc
ficoms
shlb
or
mov
cmp
es
cli
and
aaa
push
xchg
in
cld
push
mov
dec
dec
in
mov
mov
aad
or
aad
sub
xchg
aam
inc
jg
insb
pop
in
rcr
push
icebp
lahf
sti
mov
lret
fistl
rcll
fdivrl
jo
loope
stos
jge
int
movsl
cmp
dec
mov
hlt
mov
or
mov
hlt
mov
in
in
sub
or
push
xor
aas
push
push
xchg
fidivrs
dec
clc
cmpsb
xchg
je
sti
push
adc
in
cmp
shlb
sub
subl
jae
push
cmp
insb
add
push
jle
or
into
test
push
adc
loopne
shrl
je
and
inc
push
imul
push
cmpb
dec
nop
push
sarl
add
div
mov
icebp
shl
sbb
lret
add
test
popa
sti
hlt
cmc
fprem
push
pop
pop
mov
inc
and
rcr
and
and
or
int
aaa
dec
pop
dec
cmp
inc
mov
pop
addl
stos
inc
xor
clc
popa
xchg
or
gs
fnstsw
pushf
sbb
xchg
cld
sub
push
cmc
sar
jno
roll
and
das
jns
sti
jno
ss
outsb
mov
std
mov
enter
les
cmpsl
push
addb
les
lret
ja
aas
sbb
add
jp
sahf
xchg
mov
cmp
aaa
in
pop
fstpt
pop
push
mov
adc
mov
stc
sub
or
sub
pop
in
mov
outsb
sub
mov
dec
push
add
jb
repz
and
popf
push
aad
jmp
subb
sub
jmp
jbe
stc
mov
icebp
aam
push
ljmp
insb
andb
out
push
jb
dec
aam
daa
mov
lea
fdivrs
mov
dec
ss
inc
pop
jge
sub
inc
in
sti
sub
mov
jbe
in
enter
mov
sti
shrl
into
in
adcl
cmpsb
fimull
sti
rorl
xchg
lahf
push
sub
sbb
inc
adc
mov
daa
mov
dec
in
adc
mov
aad
stc
and
cltd
pop
push
daa
dec
les
insb
push
sub
sub
adc
js
test
and
fidivs
cmp
dec
push
sub
aaa
jge
imul
lcall
mov
fstpl
or
pop
jmp
push
loope
pushf
mov
mov
jecxz
repnz
sbb
xchg
push
dec
call
add
jnp
and
xchg
insb
sbb
test
cld
cmp
mov
mov
fnsave
repz
loop
loope
mov
sub
mov
pop
fimuls
in
repz
mov
fsubr
je
xor
xchg
mov
lock
dec
addl
jge
xor
dec
fsts
fwait
icebp
inc
int3
push
and
jae
negb
sub
movsb
cld
fwait
insl
aaa
add
push
cmc
in
cwtl
stos
or
pop
xor
sbb
pushf
lahf
mov
and
pop
imul
dec
push
dec
sbb
daa
push
xchg
enter
int3
test
hlt
movsb
sarb
mov
jne
xchg
mov
stos
mov
mov
sarl
sbb
adc
enter
pusha
sub
into
rolb
call
mov
popa
in
xchg
cld
rcll
fmuls
cmp
push
ret
in
lods
pop
stc
adc
adcl
xchg
cld
push
mov
sbb
out
pop
push
loope
gs
out
cld
adc
fadds
and
or
push
mov
mov
test
mov
shll
inc
lahf
xchg
pop
mov
mov
push
jmp
xchg
sub
cld
cmpsl
sbb
or
xchg
xor
aam
sub
xor
inc
jne
in
in
outsb
xor
in
test
fmulp
dec
ret
cld
push
div
pop
std
clc
jge
aad
dec
mov
jo
push
xor
testl
push
daa
add
cmp
mov
outsl
pop
ret
lret
push
arpl
and
add
and
es
lea
jecxz
aaa
hlt
test
mov
stos
in
cmp
pop
notl
sub
jg
push
mov
fiadds
push
jl
and
inc
mov
ficomps
loope
fs
add
enter
mov
cld
xchg
push
in
adc
lock
jecxz
movsb
addb
sahf
pxor
insb
int
sarb
adc
js
lods
insl
cmp
scas
inc
mov
hlt
mov
mov
out
push
cli
loopne
mov
sbb
shrb
add
lock
divps
and
push
xor
pusha
sub
addb
fildll
nop
ret
mov
insl
out
aam
xchg
pop
xor
cmpsb
xchg
insl
pop
xchg
cmp
addr16
out
dec
fdivrp
sahf
les
mov
pop
sub
sbb
in
cmpsb
or
push
mov
cld
icebp
and
or
movsb
mov
xchg
out
sub
xchg
call
sahf
rcll
out
cmc
hlt
faddl
test
shl
loope
dec
arpl
popa
int
lcall
cmp
pop
in
in
fucomip
fmuls
in
hlt
or
or
push
es
psubq
inc
adc
push
or
in
cmp
pop
insb
jnp
pop
in
cwtl
xchg
pop
jo
or
ds
mov
cmp
cli
pushf
cmpsb
dec
cld
fidivrs
push
sub
xchg
mov
and
idivb
bsr
clc
cmp
fs
or
test
xchg
aaa
int
movsl
std
add
aas
das
loope
data16
in
push
xchg
in
pop
and
fldl
loope
cmp
loopne
clc
call
test
fldenv
jmp
test
jmp
pop
data16
fsubrs
in
pop
es
push
cmpsb
out
movsb
sub
les
sarl
aam
movsl
roll
gs
les
inc
nop
sub
iret
les
pop
dec
es
hlt
leave
and
and
fsubs
int3
in
xlat
mov
in
in
movsl
push
in
and
es
fs
shrb
es
arpl
notb
data16
out
es
lret
mov
push
pop
call
dec
enter
lcall
icebp
cmpsb
hlt
andl
push
in
iret
and
and
aam
mov
lret
mov
fcmovnu
jle
lock
xchg
xlat
and
pop
push
xor
in
arpl
shl
push
in
cli
cmp
push
pushf
sahf
jno
mov
xchg
sbb
rorl
mov
and
repnz
aam
out
mov
ror
push
in
test
sbb
imul
add
xchg
addr16
icebp
les
jbe
mov
dec
sub
test
pusha
les
icebp
std
adc
into
pushf
sbb
xchg
push
shll
pop
mov
cwtl
inc
mov
pop
xchg
push
xlat
hlt
data16
and
jmp
ljmp
mov
mov
fildl
in
or
loopne
jp
scas
mov
leave
jae
in
or
xor
bound
movsl
rorl
xchg
in
pop
xor
les
in
or
fidivl
jle
xor
fistps
cli
icebp
mov
push
xchg
lahf
mov
sub
lret
out
in
out
pusha
pusha
xchg
mov
leave
out
push
mov
std
scas
pop
sub
out
leave
jbe
or
shrb
jbe
pop
hlt
pop
rclb
xor
out
cli
pop
sub
mov
jmp
jmp
cmp
pop
call
lea
ljmp
sub
cld
andb
jns
arpl
push
mov
cmp
and
call
add
imul
xchg
mov
xchg
cmp
leave
fwait
jge
ret
mov
mov
or
pop
int3
lods
push
xabort
data16
pushf
iret
jnp
xchg
xchg
sub
xchg
mov
mov
sub
cmp
repz
div
popfw
pop
pushl
hlt
call
sub
stc
call
test
add
lahf
out
mov
fdiv
add
fwait
es
testb
mov
fists
cli
out
call
es
fidivs
in
filds
jg
sub
mov
xchg
xchg
rclb
test
movsl
scas
jp
mov
jae
xchg
shll
mov
ss
stos
es
ret
out
rorb
stos
mov
bound
xor
inc
loopne
test
scas
and
sub
lret
mov
lahf
jmp
test
adc
pop
pop
lcall
dec
sub
divl
mov
icebp
idivl
adc
push
cld
mov
nop
in
icebp
out
data16
loopne
inc
popf
sar
arpl
std
dec
popa
xchg
sub
aaa
mov
cmp
call
stos
call
call
sahf
test
cld
int3
and
inc
stos
fldenv
jae
fdiv
hlt
int
movsl
call
add
movsl
xchg
icebp
loope
es
add
xor
enter
cli
mov
fdivr
outsb
lcallw
push
xor
cli
cld
jmp
xor
jb
int
adc
push
loope
dec
xchg
cmp
xchg
mov
push
and
pop
jmp
push
jecxz
ret
sbb
in
shl
out
out
adc
scas
xchg
fdivl
fndisi(8087
adc
push
iret
ljmp
fsubp
rcl
andps
and
sbb
lret
and
insl
loope
mov
push
jecxz
lahf
sub
mov
add
cld
mov
mov
mov
cmpsb
mov
add
imul
xchg
sahf
popf
ret
cmp
pop
jb
nop
push
and
cmc
inc
mov
sub
mov
cmp
cmpsb
jmp
insb
dec
adc
leave
leave
dec
xchg
les
into
test
inc
rclb
and
les
and
subl
dec
popa
loop
and
sub
xor
inc
mov
add
in
daa
mov
adcl
sub
arpl
cmp
and
enter
dec
pop
xchg
popa
stos
out
iret
jno
test
push
rclb
in
rcll
daa
jle
and
ds
repnz
aaa
popf
dec
fimull
sbb
dec
fdivs
test
out
push
xchg
sbb
rcl
insl
fidivrl
xchg
sbb
pop
imul
xor
pop
fiadds
in
fsub
cld
aam
mov
clc
cltd
mov
pop
and
into
cmc
enter
imulb
xor
xor
mov
std
inc
fldl
js
jne
jns
stos
addr16
in
adc
add
xchg
sub
adc
xlat
jmp
fistl
ror
dec
mov
pop
shrb
pop
mov
in
loopne
ljmp
lock
or
cmp
mov
sub
sbb
push
int
fsubl
push
aam
pop
dec
mov
aad
jb
bound
pop
fistpl
fwait
in
jle
aas
mov
and
loope
int3
push
add
mov
xor
stc
xchg
jmp
incl
pop
rcll
xor
outsl
mov
sub
or
testl
push
inc
pushf
mov
cli
sar
inc
ds
jno
xchg
sbb
mov
jbe
sahf
pop
sbb
inc
mov
xchg
lret
stos
cmpsl
dec
je
ret
fmulp
mov
push
cld
jg
jg
aas
jecxz
push
rcll
ljmp
loopne
faddp
pop
cltd
fisttps
ljmp
inc
lods
aad
xchg
out
arpl
das
ljmp
shr
data16
int3
push
mov
loope
call
jne
sarb
shrb
insb
test
jp
lret
sahf
cld
in
hlt
std
into
sar
adc
cld
popa
jecxz
andl
repz
int3
stc
dec
sahf
out
stc
push
ret
mov
mov
add
add
fs
and
mov
shlb
rcll
out
stos
mov
and
aas
inc
fcomp
push
or
sahf
and
testb
sbb
sbbl
inc
fcomp
or
fisubrs
in
int
ds
out
sub
pop
hlt
ds
jnp
sahf
fsubr
ret
in
pop
mov
shl
jge
jno
cmp
sarl
hlt
sub
push
mov
adc
stos
xlat
hlt
aam
sbb
std
mov
adc
stos
ret
hlt
push
mov
adc
stos
leave
out
les
int3
data16
mov
fdivp
adc
fxch
push
mov
adc
enter
mov
enterw
repnz
push
stos
aas
icebp
hlt
repnz
hlt
mov
adc
stos
hlt
jg
icebp
fldcw
or
mov
add
cld
pop
mov
aaa
ljmp
in
std
les
push
shrb
add
lret
pop
addr16
stos
popa
test
xchg
out
lea
push
sbb
incb
and
cld
outsl
ljmp
rcr
mov
ljmp
popf
pop
aam
repz
gs
into
pminsw
ja
into
inc
mov
in
lret
inc
add
rcll
test
cld
movsb
stc
hlt
imul
mov
push
lahf
pop
pusha
leave
mov
hlt
mov
aaa
mov
pushf
and
push
jnp
sub
pop
jp
dec
mov
cld
adc
or
jmp
pusha
fmul
inc
mov
sahf
sbb
outsb
arpl
add
cmp
jle
cwtl
xchg
xor
jno
adc
push
adc
pop
inc
push
cli
sbb
jle
pop
rcll
xchg
xlat
jg
mov
cmp
mov
push
ret
xchg
inc
push
sbb
pop
jae
push
outsb
iret
aad
jae
pop
test
imul
mov
insb
inc
lcall
ljmp
ds
ret
lods
push
fcmovnb
adc
xor
add
cld
shll
or
jbe
int3
imul
imul
xchg
sub
fisttpll
pop
les
cmpsb
push
sahf
mov
or
sbb
aam
clc
mov
push
sbb
mov
inc
cltd
mov
push
cld
dec
jecxz
inc
int
inc
std
adc
gs
notl
inc
into
xchg
inc
out
sarl
mov
sub
lahf
mov
mov
into
stos
sbb
fists
in
loope
mov
push
mov
push
xlat
push
out
push
call
leave
mov
cmc
pop
negl
sbb
rcll
xchg
push
out
dec
mov
mov
hlt
icebp
loopne
push
sbb
adc
iret
fincstp
cmc
xchg
aad
loope
mov
out
mov
mov
hlt
xor
in
in
scas
lds
pop
jb
andl
push
xorb
into
fbstp
hlt
out
jb
jecxz
cmp
and
jecxz
shl
arpl
sub
je
xor
ja
shrb
cmp
jb
rcrb
xor
loop
jo
das
test
push
push
jne
xor
out
cs
jae
xor
icebp
push
fadds
adc
pop
xor
fld
les
adc
stos
std
test
cmp
dec
insl
sub
enter
xchg
into
push
gs
je
fldt
aad
mov
lock
repz
add
jne
sub
or
xor
xorl
dec
test
mov
addb
repnz
stc
pop
test
adc
fidivs
in
inc
imul
nop
mov
pop
nop
cmpsl
addr16
push
pop
fcoml
lahf
outsb
xchg
inc
mov
bound
test
dec
rcrl
mov
push
and
push
addb
hlt
popl
std
aad
fstl
in
fisubrs
xchg
adc
sahf
sti
bound
push
in
roll
js
jno
popf
ret
test
cld
sub
lret
aad
ds
in
push
mulb
pop
xchg
xchg
jle
xchg
add
lds
xchg
aam
or
and
hlt
lock
iret
lods
cld
ljmp
pop
pop
stos
pop
fidivrs
adc
dec
fsubl
and
push
adc
jb
fnstsw
insl
negb
mull
ret
mov
jecxz
rcl
adc
push
test
in
xchg
xlat
sbb
insl
xorb
loopne
nop
dec
lret
imul
loopne
repnz
xor
cmp
ret
fisttps
dec
fstl
cs
pop
pushf
fnstsw
add
mov
in
shr
jge
fsubrs
test
ljmp
adc
lea
dec
jmp
aam
out
cmp
cmc
hlt
or
repz
imul
stos
aam
cmc
sbb
lret
push
idivb
push
je
xchg
bound
xor
movsl
dec
ja
icebp
xor
negb
nop
inc
mov
fsubp
out
fcompl
lcall
mov
sti
xchg
icebp
xchg
pop
push
adc
and
in
shll
xor
pop
cmp
ja
xchg
jmp
push
cmp
cli
add
adc
mov
out
es
out
daa
xchg
push
daa
sti
lahf
pushl
loope
mov
out
jb
fprem
les
rcl
aad
icebp
xchg
test
pop
test
add
mov
mov
and
loope
mov
fiadds
jp
scas
fnsave
xor
or
repnz
in
jle
push
xor
iret
cltd
pop
out
loope
sbb
pop
add
adc
call
out
sub
sarl
pop
push
sbb
rcr
sbb
push
pop
shll
sbb
insb
cmp
les
xchg
popf
dec
push
pop
pop
lea
cmp
push
push
push
cmc
int
push
bound
pop
fmulp
les
enter
or
pop
jo
or
popa
xchg
shrb
enter
pop
sub
or
loopne
fcmovnbe
and
out
push
sbb
data16
or
xchg
cmp
jge
std
std
in
fisttpl
sub
leave
sub
jecxz
aas
rcl
in
enter
inc
fbld
jb
ja
into
test
pop
xor
sbb
mov
sbb
jnp
or
sub
shr
lds
pushf
popf
mov
fnstsw
jle
mov
popf
push
pop
aas
xchg
ljmp
sti
lret
dec
in
cld
mov
hlt
sti
leave
jmp
cld
dec
mov
decl
dec
ficoms
pop
push
jnp
pop
call
xchg
imulb
das
xor
sub
leave
and
sahf
test
lret
cmc
inc
xor
and
add
push
popa
xchg
movsb
pop
push
fcoms
sub
fiadds
mov
pushf
in
adc
push
jae
or
aad
daa
sbb
or
adc
testl
cltd
push
cld
fisttps
iret
imul
incb
lea
dec
add
pop
js
idivl
mov
add
popa
fs
inc
clc
imull
or
ret
push
sahf
ja
sub
shl
pop
fstps
insb
stos
loope
mov
xor
mov
mov
mov
fimull
jp
add
jl
idiv
cmp
insb
adc
sub
es
loopne
aaa
je
es
ljmp
mov
pop
push
lcall
ja
cmp
out
add
xchg
cmp
addl
stos
ret
ljmp
fucomi
xchg
mov
mov
sub
in
addb
fnstenv
dec
hlt
into
add
movsb
out
jo
mov
inc
push
jp
jno
sub
push
push
nop
rorl
int3
ds
inc
shrb
loopne
xor
stc
mov
mov
lea
mov
and
xchg
cli
pop
mov
push
dec
enter
ja
dec
xchg
int3
lods
into
pop
loope
cmpsb
aaa
test
insl
mov
fsubl
cmp
repz
out
adc
xchg
mov
jecxz
adc
std
orl
cld
cmpsb
inc
pop
mov
and
xchg
cmpb
and
out
sahf
add
jns
cmp
insb
jge
lret
icebp
xchg
hlt
in
cmp
stos
mov
jle
fs
paddq
rcl
in
mov
fisubrs
pop
pop
mov
rcrb
mov
lea
pop
push
stc
sub
adc
or
cs
cld
movsl
jno
adc
sub
pop
and
jp
push
into
call
ffree
dec
and
pop
xlat
into
icebp
stos
jp
pusha
adc
lds
fistps
in
popa
andl
xor
rcrl
in
sub
inc
insl
or
jmp
cmpl
lods
test
jg
sub
sbb
pop
adc
lds
mov
add
jnp
mov
lcall
jge
aas
cmp
mov
push
inc
jns
fsubl
scas
adcb
dec
mov
stos
mov
shlb
xchg
cmpsl
pop
sub
movsb
adc
cltd
scas
ljmp
xchg
pop
mov
pop
inc
ret
push
loopne
popf
bound
in
xchg
in
jge
aam
out
xchg
stos
aaa
add
add
push
sbb
aad
mov
lret
mov
jb
mov
pop
into
sbb
je
into
jae
inc
fsubrl
mov
cld
push
inc
out
jl
sub
scas
adc
xchg
mov
or
xorl
fidivrl
adc
xor
or
push
xlat
clc
cld
lea
push
out
or
or
lods
fsubs
push
fs
addr16
lds
ror
cli
bound
jecxz
shl
rcr
dec
pop
std
aam
dec
test
jp
cs
lret
xchg
fiadds
jp
ficomps
mull
mov
mov
fdiv
cmpb
sub
inc
fmul
ljmp
fcom
popf
cmpsb
mov
push
mov
sbb
lock
dec
fldcw
inc
js
xchg
cmp
imul
pop
fs
mov
roll
xchg
shl
movsb
insb
jp
sbb
inc
mov
push
mov
scas
dec
ret
test
fstpl
repz
rcr
dec
xchg
pop
popl
jbe
js
aas
insl
cltd
add
mov
mov
push
xor
std
leave
in
add
add
jp
lods
or
out
jl
ds
test
pushf
jecxz
pop
push
sti
cmp
in
gs
xor
mov
hlt
fcoms
loope
sbb
fsubl
jg
leave
and
and
ffree
inc
scas
add
popa
ret
xor
jns
jno
mov
loope
inc
xor
or
lret
mov
sbb
stos
mov
out
or
out
mov
in
test
mov
lcall
mov
les
loope
out
addr16
call
insl
cld
stos
jp
nop
sbb
out
out
dec
shrl
shlb
aam
stc
lock
sbb
test
jecxz
adc
cmp
dec
scas
sbb
mov
sbb
dec
mov
stos
lret
pusha
adcl
jne
ljmp
pop
call
adc
fisubrs
xchg
out
clc
in
mov
push
rcrl
inc
scas
dec
aad
pop
adc
pop
sahf
cmpb
hlt
lret
push
in
data16
movsb
andb
xchg
push
insb
fnstsw
mov
and
sub
popa
xor
aad
fisubrl
test
mov
inc
adc
imul
add
outsl
out
into
shrl
or
dec
jb
iret
sahf
pop
or
xor
test
leave
cltd
jmp
lret
or
pushl
ds
jae
enter
xlat
sbb
into
insl
int
jb
xor
xchg
enter
int3
bsr
or
ljmp
mov
mov
or
mov
pop
rorl
out
pop
sub
add
cwtl
cs
stos
nop
rolb
or
fbld
in
fldenv
cmc
aaa
xor
sbb
xchg
jl
into
jecxz
mov
push
sbb
and
xor
mov
xchg
mov
ja
push
test
ficomps
mov
inc
rol
ljmp
mov
call
nop
mov
das
in
mov
adc
lea
loope
out
mov
clc
lret
adc
jo
add
sbb
in
xchg
push
sub
xor
sub
mov
jmp
lds
fnstenv
ret
ljmp
push
cmp
stos
idivb
mov
xor
jbe
call
xlat
in
xchg
repnz
testl
inc
cmp
dec
mov
mov
inc
movsb
sahf
dec
idivl
pop
sub
das
sahf
jg
mov
mov
fimull
ficompl
ljmp
or
out
je
lahf
shll
es
aaa
int3
sbb
stos
out
sahf
xchg
les
or
ljmp
jae
in
mov
pop
addr16
nop
xchg
adc
fdivs
sbb
stos
addr16
jns
notb
mov
cld
add
pop
mov
sbb
icebp
jo
pop
mov
mov
fidivs
pop
mov
js
and
fisubs
dec
fisubs
push
lods
inc
jb
jns
push
cmp
lahf
loop
and
aam
in
mov
lahf
jmp
mov
hlt
mov
je
int
shlb
out
pop
out
sub
adc
pushf
xchg
repz
imul
arpl
push
mov
movaps
loope
mulb
pop
add
fs
or
jp
mov
test
push
and
sbb
lds
out
popa
dec
repz
cmp
xchg
ljmp
and
fmulp
inc
add
and
fwait
stc
or
ror
jmp
cmc
sti
clc
adc
neg
adc
jne
stc
cli
push
call
xor
or
inc
test
pop
mov
call
xchg
ss
jmp
movsb
mov
dec
fdiv
mov
cwtl
test
jno
xchg
pusha
fdivp
push
stos
pop
shlb
push
leave
dec
popf
jp
movsb
ret
mov
mov
and
and
cmp
add
ficoms
and
or
rorb
lock
ror
das
adc
and
jle
in
mov
dec
mov
repz
or
xchg
out
xchg
xor
lahf
popf
ja
sbb
in
cmp
xchg
mov
ror
out
test
lds
shll
jg
pop
jle
or
sub
shrl
xchg
pusha
mov
cld
jne
mov
pusha
lea
int3
dec
cld
hlt
sub
imul
and
in
jo
jg
jb
mov
inc
jmp
jle
fsubrl
rep
cld
mov
scas
daa
dec
jae
icebp
sbb
lcall
icebp
jg
ljmp
paddsw
sbb
xchg
fisubrs
dec
pop
dec
loopne
lea
mov
stos
pushf
cld
mov
ss
div
sub
adcl
push
jecxz
arpl
mov
and
lea
xchg
mov
out
fcom
cld
in
mov
pop
ljmp
decb
push
jo
loope
ljmp
mov
dec
inc
dec
xchg
lods
scas
pop
jae
push
xor
sbb
mov
adc
stos
fmull
inc
and
add
fwait
cwtl
inc
xchg
out
cli
add
or
sar
sbb
fcomps
jne
nop
jmp
repnz
xor
popf
in
xchg
sbb
les
inc
mov
mov
and
mov
inc
mov
outsl
adc
push
leave
loope
jg
dec
jne
insl
cmp
in
mov
into
icebp
push
addb
fisubs
clc
push
or
adc
or
aam
sub
add
sahf
cmp
outsl
mov
sti
iret
test
mov
or
test
notb
xchg
sub
mov
sub
ret
ljmp
cld
mov
sub
xchg
xchg
jmp
ficoms
push
adc
fisubs
jbe
adc
sub
pushf
cmp
xchg
pop
lea
cld
iret
jb
dec
or
lcall
stc
inc
scas
mov
dec
or
shlb
sbb
lock
jle
push
cs
and
mov
gs
and
filds
mov
adc
push
cs
rolb
dec
lea
dec
stos
dec
cmp
clc
cld
inc
push
fdivrp
xchg
cmpl
sub
push
call
mov
movsb
daa
popf
aad
push
out
xor
dec
inc
insl
lcall
jb
stos
mov
aad
das
inc
and
mov
jb
stos
adc
imul
pop
mov
inc
xchg
ficoms
xchg
frstor
shl
push
mov
push
xchg
addr16
icebp
mov
sbb
lahf
lods
fucom
lds
xor
or
mov
jnp
sar
or
sub
jecxz
mov
mov
cmp
ret
cmc
loope
ficomps
mov
push
sahf
jl
sar
adc
into
icebp
fstpt
ficomps
idivb
xorl
jmp
cmp
or
fildll
xor
out
mov
jnp
add
scas
fcomps
rorl
xlat
adc
repnz
ror
fdivl
lahf
xchg
or
ss
orl
adc
push
ret
stc
clc
inc
xor
nop
sub
sti
jmp
xlat
test
es
in
insl
adc
fadds
fistpll
adc
add
pop
cwtl
cld
cmpsb
repz
loopne
rcl
shrb
xchg
lret
mov
int3
push
mov
shl
mov
jge
push
lock
dec
push
shll
loop
push
add
lods
and
out
xor
add
enter
xchg
xlat
imul
fistl
sub
xchg
mov
cmovbe
push
out
test
lret
pushf
loope
cld
out
test
inc
mulb
adc
mov
fisubrs
or
cs
pop
push
stc
push
adc
xor
push
repz
inc
push
push
add
push
neg
cmpsb
addr16
fisttpll
pop
lcall
push
fidivs
repnz
call
jp
in
lock
fsubrs
sar
call
jp
in
arpl
loopne
cmp
scas
mulb
adc
hlt
cmc
xchg
out
pusha
stos
clc
icebp
enter
sahf
lret
adc
les
fs
fstp
aad
imul
enter
das
jbe
sub
mov
js
add
mov
fmull
aam
ror
aaa
fldl
push
jecxz
loope
ljmp
mov
setno
cli
push
test
xorb
popa
in
adc
jno
cs
cmc
ret
addr16
arpl
addl
iret
jmp
fdivp
mov
lahf
xchg
movsl
and
adc
pushf
stos
xorl
shrl
push
push
insl
fstpl
fsubr
and
xor
jbe
sub
push
add
jns
hlt
mov
inc
icebp
sbb
popa
and
loope
cmp
out
and
inc
mov
mov
inc
mov
pusha
sub
movsl
stc
cmpsl
push
rorb
jmp
div
out
adc
mulb
rcrb
aam
ror
adc
xchg
pop
stos
pop
insl
das
mov
mov
inc
dec
stos
pop
and
xchg
ret
mov
dec
sahf
iret
xchg
lods
icebp
pop
xchg
push
rcrl
sti
xor
sar
jmp
stc
test
sbb
gs
pop
push
cwtl
xor
add
testl
das
aad
inc
jecxz
dec
and
adc
call
or
sub
push
rcll
inc
rolb
lods
clc
insb
mov
push
clc
push
dec
cmc
sub
aaa
sub
les
mov
in
fadds
adc
xlat
sbbl
adc
in
add
std
mov
dec
jns
mov
int
jnp
push
lock
sub
jp
in
jg
mov
cld
mov
fdivrs
shl
out
sub
in
inc
push
out
ljmp
push
nop
xor
test
cld
in
xor
mov
std
rcrl
cmpl
in
frstor
pop
dec
pop
rcll
push
xor
cmc
out
and
fdivp
jmp
filds
shr
fdivrs
int3
sbb
lret
ficoms
push
imul
les
loopne
popa
sahf
jcxz
shrl
adc
ljmp
push
sahf
arpl
in
rcll
mov
in
test
push
in
pop
push
or
xchg
out
pop
add
in
sbb
dec
pop
adc
in
jmp
rcrl
aad
push
cs
fadd
pushf
or
jnp
jnp
xchg
mov
sub
int3
outsb
in
call
sbb
fsubp
jp
std
loopne
mov
xchg
and
and
xchg
pop
jmp
cwtl
call
fst
cwtl
mov
lea
push
aam
dec
mov
push
mov
and
jl
pop
ret
cmp
mov
rolb
or
rorl
xchg
fs
imul
shlb
mov
xor
cli
pop
lret
mov
push
jle
or
aam
into
stos
xor
and
mov
sarl
sbb
out
jl
shl
fwait
rcll
adc
cmp
dec
lock
test
push
aad
scas
fs
and
sub
std
clc
adc
test
mov
pop
lods
add
pop
out
in
lret
into
and
and
xor
mov
in
int3
repnz
rol
cltd
push
ljmpw
push
ljmp
xchg
sbb
cmpsl
pop
cwtl
adc
pop
sbb
xchg
sti
xchg
pushf
sbb
xor
push
xchg
roll
fcoms
rcrb
hlt
ret
dec
add
pop
popa
das
out
lea
cmp
dec
mov
das
push
sbb
into
and
mov
mov
adc
in
mov
repnz
dec
add
cmp
mov
add
outsl
loop
stos
mov
iret
lret
test
jnp
sub
gs
push
mov
das
xchg
testl
mov
adc
sub
jb
mov
mov
xchg
lods
iret
aas
pop
nop
jmp
clc
pop
sbb
dec
cmp
xor
in
pushf
mov
push
jae
insb
adc
popf
lods
roll
inc
je
fcomps
xchg
cmp
add
in
in
das
insb
push
or
pop
pusha
or
stos
inc
inc
test
lods
pop
xor
push
pop
jns
loopne
push
fcompl
jg
push
or
arpl
mov
in
mov
enter
xchg
shl
sbb
popa
mov
shrl
sbb
rcr
add
and
jnp
lret
icebp
inc
inc
shr
outsl
mov
mov
in
jae
pop
imul
mov
std
in
frstor
push
out
inc
test
jl
dec
mov
push
xchg
cli
mov
inc
jl
jecxz
lcall
or
int
mov
lcall
push
cmpsl
push
pop
adc
or
shlb
repnz
jl
adcl
or
pop
arpl
inc
inc
mov
test
stos
lret
fs
cmp
mov
pop
push
fdivp
in
leave
or
fstpt
outsl
enter
into
fadd
bound
mov
ds
mov
mov
clc
pop
imul
ljmp
lock
xchg
cmpl
add
mov
adc
add
shrl
shll
fcompl
mov
xor
stos
das
inc
lret
push
fcomp
sarl
fmulp
cltd
cmp
int3
cmpb
ret
cmpsl
fldpi
testb
cltd
cmpb
cli
push
push
mov
jecxz
testl
scas
mov
sub
icebp
sub
fcmovnu
push
lock
lret
testb
jae
repz
les
push
dec
mov
in
xor
cmc
mov
jp
xor
in
repz
movsl
xor
in
inc
cmpsl
sbb
push
in
pop
out
ljmp
mov
pop
movb
dec
out
into
jg
push
lds
lret
cmp
add
inc
xchg
fmulp
push
les
ljmp
cmp
adc
dec
fsubrl
mov
xchg
push
pop
movsb
mov
into
lret
enter
into
fwait
xlat
sti
lock
mov
test
les
and
int
call
mov
int
add
jmp
sub
mov
xor
out
adc
hlt
jmp
out
and
shl
out
xchg
data16
jb
fists
rol
call
fnsave
sar
rolb
inc
adc
jp
ja
inc
and
ss
mov
dec
sbb
call
adc
add
xor
push
jecxz
imul
sub
test
push
aad
mov
mov
pusha
dec
push
xchg
cmpsb
xchg
sahf
iret
out
inc
xor
scas
test
in
cmpb
adcl
mov
cmc
lret
mov
dec
test
or
mov
and
xorb
inc
jmp
outsl
scas
and
cmp
or
mov
or
dec
mov
shll
icebp
enter
mov
out
popa
sub
sahf
add
dec
rorb
test
inc
test
loope
jle
out
sbb
gs
out
pop
mov
ss
xor
in
fdivr
ret
nop
lret
pop
xlat
sub
push
imul
fimuls
lods
sub
dec
popa
xchg
xchg
mov
insb
and
iret
xor
popf
loopne
xor
aad
sbb
cmp
add
fcmovne
adc
xchg
xchg
out
add
sub
movsl
pop
cmp
inc
rolb
ficoml
push
in
lea
sbb
fcompp
sarl
push
hlt
subb
loop
pop
mov
cld
add
dec
fmul
nop
lcall
enter
roll
imul
cmpb
add
push
jnp
xchg
xor
mov
mov
mov
scas
push
repz
in
rcr
push
popa
imul
mov
cmc
out
fcmove
or
inc
cmp
sub
repz
mov
push
int3
mov
mov
negl
push
add
inc
pop
or
adc
in
fisubrs
enter
inc
fs
shr
push
add
dec
cmc
jno
rcrb
xor
fsubrs
and
in
mov
add
test
frstor
out
xchg
fidivs
inc
adc
fbstp
mov
lock
and
enter
mov
cld
sub
fadds
fiadds
std
mov
out
cld
test
sub
sahf
adc
push
iret
or
xor
ja
or
icebp
call
scas
xchg
adc
cld
js
push
icebp
call
xor
pop
push
loope
mov
pop
inc
aas
push
test
mov
out
scas
int3
push
fcompl
test
gs
cld
in
push
icebp
ss
push
ror
out
into
insb
insb
rcll
aas
les
shlb
xor
push
call
call
jne
aaa
negb
xchg
fisubs
adc
pop
xchg
test
and
pusha
sub
adc
mov
jmp
mov
mov
stos
inc
jmp
jg
int
lahf
xchg
aas
xlat
sub
test
push
jns
and
xorl
adcl
xchg
pop
lret
or
jnp
fidivl
insl
jecxz
push
shlb
cmpl
insl
fimuls
test
lods
pop
subl
loopne
fsubrs
mov
shrb
lock
sarl
pop
test
addr16
aas
ss
sbb
rcl
mov
gs
inc
inc
mov
mov
rcrb
fisubrl
adc
adc
rclb
ljmp
pop
sub
sub
aaa
bound
stos
add
mov
mov
lret
sbb
movsb
inc
loopne
inc
fidivrs
rol
xchg
aad
inc
call
mov
fsubl
push
cli
shl
iret
cmp
push
in
push
mul
xchg
popf
loope
mov
cli
in
ficoms
adc
jmp
xchg
scas
xchg
hlt
jnp
scas
xchg
leave
add
adc
stos
clc
sahf
fxam
pop
rcrb
xchg
pop
push
pop
mov
pushf
push
jecxz
mov
sub
cli
rclb
add
repnz
and
dec
push
adc
js
shll
lds
mov
ss
push
mov
insb
mov
adc
stos
cli
or
cmp
pop
inc
xor
push
push
fnstsw
popa
xor
pop
and
inc
stos
lret
fnsave
inc
lahf
dec
or
ficompl
adc
in
push
cmp
test
and
jmp
mov
fmull
aas
xchg
jnp
jle
dec
sbb
scas
sbb
out
lret
ret
scas
test
sub
out
or
les
mov
fdivr
notl
or
data16
popa
fwait
xchg
cli
sub
out
and
cwtl
push
ss
std
aaa
push
stc
stos
sub
sbb
mov
imul
in
dec
lret
or
out
mov
or
cmp
in
popa
das
xlat
stos
pop
fs
mov
cld
movsb
adcl
daa
mov
in
lock
jb
jbe
lcall
fdivs
xchg
cs
inc
out
dec
mov
pop
pop
jb
in
dec
clc
fiadds
imul
mov
ficoms
rcll
push
xchg
cwtl
jb
je
insl
loope
mov
dec
in
add
ret
adc
test
jns
jbe
push
fldcw
sbb
mov
mov
mov
sarb
out
lock
imul
inc
sub
push
jle
jp
or
lds
clc
ds
sub
xchg
lock
fsubl
mov
inc
xchg
push
gs
mov
leave
jl
sti
insb
aam
xchg
stc
xchg
or
in
stos
mov
cltd
bound
push
xchg
dec
xchg
push
les
popa
in
push
lods
ficomps
jne
jmp
cld
in
fisttps
cmp
mov
jb
fnsave
iret
push
dec
add
ficomps
out
xlat
icebp
xchg
or
cmp
in
sahf
adc
hlt
rcl
fisttpl
hlt
sahf
push
xchg
ja
pop
lret
flds
jae
out
jmp
inc
pop
push
jmp
fsubp
cmpsl
ja
outsl
xlat
pop
jae
sub
pop
cmp
int3
mov
ret
inc
pop
or
imul
pop
icebp
clc
cwtl
ja
cmc
jmp
push
adc
jmp
lahf
std
sbb
in
jecxz
repz
mov
es
sbb
nop
mov
int3
sub
xchg
xchg
dec
sub
pushf
add
fildll
in
sub
stos
adc
and
insb
test
and
aaa
xor
loope
and
fsubs
mov
in
lret
push
adc
and
daa
inc
fisubrl
dec
jbe
mov
push
divl
push
xchg
pop
stos
mov
aad
sti
push
pusha
push
pop
stos
mov
push
dec
loopne
stos
ret
int
ret
icebp
test
ret
fisubs
fmulp
push
push
mov
stc
mov
repnz
ja
sahf
jmp
lds
loopne
lock
icebp
in
icebp
in
in
in
mov
cmc
out
movsb
in
mov
push
shrb
pop
popa
int3
clc
xchg
movsb
fists
es
data16
mov
jmp
in
ret
testb
icebp
movsb
incl
push
sahf
loopne
loope
fsubrp
movsb
es
mov
rol
test
sahf
mov
shl
shlb
pop
fucompp
out
in
cmp
idivb
stos
lret
fidivs
sub
pop
jmp
movsb
jmp
loope
in
adc
out
dec
sahf
lret
es
stos
ljmp
stos
fildl
fiadds
in
cli
mov
fmulp
mov
xlat
ljmp
loope
push
stc
movsb
ljmp
rcrb
pop
xchg
fidivl
mov
sub
pop
pop
sahf
movsb
rcr
int
in
xchg
rcrb
fst
aad
rclb
lret
jno
clc
int3
pushf
mov
movsb
clc
inc
lock
jmp
cwtl
movsb
icebp
in
fbstp
aam
adc
ret
icebp
in
mov
or
cli
dec
in
mov
mov
add
into
mov
int3
sbb
cmpsb
fdivl
daa
cmpsl
mov
imul
inc
aas
cmpsl
movsb
cld
mov
inc
shl
ljmp
sub
add
mov
xchg
sub
jmp
sub
aam
mov
scas
mov
sub
cmc
cmc
mov
mov
cmp
xor
sbb
dec
push
mov
imul
inc
xchg
lds
pop
mov
jae
xchg
pop
out
inc
into
dec
pushf
cmc
out
jbe
ret
inc
mov
push
sbb
pop
sti
cmpb
add
xchg
xlat
adc
cli
xor
sub
jp
and
sbb
push
mov
enter
mov
push
sahf
xchg
gs
ror
cmpsl
jo
iret
push
jae
repz
cmpsl
and
mov
lds
insb
aaa
filds
pop
loope
jbe
popf
pushf
movw
pushl
mov
lea
jmp
push
movl
movl
mov
movb
jmp
ret
ja
repnz
mov
leave
repnz
sub
fwait
stc
scas
int3
test
mov
xchg
mov
gs
in
pusha
sbb
data16
bnd
pusha
in
push
jne
ja
loop
js
sti
push
xchg
es
dec
call
xchg
scas
fimuls
adc
pop
add
cmp
leave
pop
pop
daa
pop
inc
push
gs
inc
cmp
fcoms
dec
outsl
jge
jnp
pushf
out
test
add
dec
mov
jge
lods
scas
jo
jp
pop
dec
imul
mov
loope
out
popf
icebp
jns
dec
cld
inc
ds
mov
push
addr16
mov
mov
cmp
push
push
add
pop
pop
sarb
arpl
into
sti
xchg
loop
js
sub
out
or
dec
mov
lods
gs
js
into
rcll
pop
cmpsl
ret
fwait
ret
jns
out
leave
dec
pushf
xchg
aam
xchg
pop
insl
test
dec
arpl
cmp
jl
cmp
mov
pop
jae
push
dec
push
stos
les
sbb
insb
aaa
jg
inc
ds
xchg
xchg
rcrb
pop
sub
inc
cmp
xor
add
push
push
xchg
int
inc
and
fiaddl
outsb
jae
movsl
dec
sbb
jne
dec
cmp
inc
ds
faddl
xor
sbb
pop
or
cmp
fadds
cmp
xchg
pop
iret
and
sbb
xor
jle
push
xor
jns
push
cmpsl
and
jl
pop
or
cmp
mov
inc
mov
sti
xorl
mov
addl
and
mov
jae
mov
cmpb
outsl
mov
mov
cmpsb
jmp
fldt
adc
or
add
out
add
dec
add
inc
cmp
call
cwtl
outsb
aaa
rclb
test
inc
or
mov
mov
push
pop
pop
pop
adc
pop
xchg
les
testl
sbb
jbe
and
mov
inc
movsb
sbb
jl
std
mov
mov
mov
in
push
fsts
add
inc
push
cmp
push
add
pop
daa
jo
push
inc
ds
jne
aaa
jae
inc
shl
rcl
mov
or
stc
shld
add
mov
or
mov
call
out
push
roll
mov
xchg
mov
ljmp
xor
mov
lods
sub
jne
into
subl
xchg
pop
push
jno
out
in
inc
notl
mov
adc
jle
sub
sub
daa
in
in
sahf
xorb
or
ret
mov
adc
add
dec
jl
xor
insb
jbe
sub
mov
xchg
sbb
inc
mov
mov
scas
iret
or
mov
hlt
leave
les
outsb
mov
hlt
test
dec
aam
sub
cmp
pop
sub
dec
adc
push
std
cmpsl
icebp
lea
call
pusha
adc
push
pusha
lea
call
call
call
push
call
xchg
or
mov
jo
call
pop
shrl
dec
andb
jns
dec
and
sbb
sub
inc
int
lahf
iret
mov
jne
lock
mov
lea
out
hlt
imul
bswap
ljmp
inc
mov
mov
pop
loopne
mov
and
nop
pop
push
int3
arpl
fstps
and
test
test
popf
pop
inc
and
jbe
pop
aaa
push
das
fs
ds
int
mov
pop
call
stc
push
lds
add
xor
push
call
imul
add
sbb
jle
call
inc
les
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
mov
mov
sarb
mov
lods
push
aaa
mov
adc
sub
jo
stos
test
inc
outsb
nop
xor
out
hlt
fldz
xor
popf
lods
lea
pusha
ja
sub
clc
addr16
mov
fwait
push
mov
xor
cli
add
jno
hlt
cmp
and
out
cmp
lods
in
rcrl
insb
sub
cltd
dec
mov
sbb
jg
inc
cmp
xor
scas
or
ret
mov
or
test
dec
add
pusha
push
call
incb
in
imul
push
clc
add
push
pushf
mov
lea
jmp
inc
sub
repz
je
push
arpl
mov
xchg
lret
lock
aaa
loope
arpl
jl
mov
clc
ja
shlb
push
fnsave
jp
je
jno
cmp
xchg
cmp
inc
scas
notb
aad
xor
loopne
fcmove
xchg
dec
push
or
xchg
jecxz
test
mov
dec
dec
jg
xchg
mov
cmp
arpl
std
int3
orl
push
mov
lds
inc
ds
mov
shrb
ljmp
jecxz
xor
jp
cmp
fpatan
or
movsb
mov
stos
out
incl
push
inc
and
std
leave
adc
cltd
and
xor
dec
and
neg
icebp
inc
icebp
addr16
adc
jb
inc
imul
out
push
call
pop
shll
mov
push
mov
out
mov
jb
repz
aad
or
push
sub
dec
xor
in
inc
inc
ds
fwait
xchg
ss
call
push
pop
push
call
lds
jl
lods
cld
fstl
outsl
stc
xor
test
xchg
xor
mov
sbb
pushf
sub
mov
dec
ds
pop
je
cmpsl
repnz
cmp
scas
and
adc
iret
outsb
inc
je
jno
push
movl
in
stos
jnp
or
sbb
dec
inc
data16
mov
mov
dec
mov
cmp
clc
jae
leave
pop
pop
and
pop
xor
inc
ds
into
into
test
shr
leave
dec
add
add
ss
push
maskmovq
divl
xchg
pcmpeqb
dec
pop
or
push
cmp
pop
sar
push
push
push
add
cld
add
repz
je
cmp
mov
add
int
mov
test
mov
mov
test
gs
movb
jge
fidivl
jno
jmp
push
cmp
and
inc
inc
insb
rcl
iret
es
or
stc
andl
shrb
pop
xor
leave
rcr
fildll
inc
aas
insb
and
sbb
push
cs
inc
ds
mov
stc
bsf
pop
pop
int3
cmp
insl
adc
pop
and
and
dec
add
mov
idivb
or
pop
sub
fs
out
lret
inc
gs
or
xchg
cmp
or
aaa
popa
mov
sub
lcall
fimull
sbb
cmpsb
ret
fwait
sbb
pushf
into
adc
fisubl
mov
lret
pop
xlat
mov
int
aad
add
popa
jmp
fs
ja
stc
pushf
call
nop
ss
popf
dec
push
rorb
ss
popw
inc
mov
inc
ds
mov
add
jle
inc
sub
cmp
lds
ss
jnp
cmpsl
nop
dec
bound
inc
and
xchg
sbb
mov
adc
dec
fs
add
aam
ret
mov
cmp
sbb
leave
or
stc
fidivl
xor
and
jns
cmp
dec
adc
cmp
jb
pop
xor
push
out
shrl
lods
iret
lea
imul
push
dec
adc
sub
jmp
movsb
and
shrl
iret
lea
fwait
cmp
push
ret
mov
cs
and
jb
ds
xchg
mov
mov
push
and
aam
int3
jae
sbb
test
add
mov
jns
test
xchg
leave
movsl
push
aad
mov
mov
mov
pop
ret
dec
adc
inc
ds
popf
xchg
xor
stos
cmp
call
jnp
lea
call
loopne
and
popf
shlb
popf
xchg
fidivrs
mov
movsl
pop
push
jb
cmc
cmp
jp
inc
cmpb
nop
cmc
dec
pop
push
inc
and
mov
dec
mov
dec
jge
mov
das
mov
inc
mov
sbb
out
push
sbbb
mov
das
jns
neg
mov
in
xchg
dec
loope
or
sti
xchg
adc
bound
cld
inc
ds
es
shlb
lret
cwtl
and
dec
jne
pop
and
fistps
outsb
scas
ljmp
push
aas
pop
pop
cs
fidivs
sub
pop
xor
mov
pop
pop
test
jmp
add
dec
mov
adc
aam
mov
std
repnz
or
in
mov
leave
and
push
shrl
mov
add
inc
push
sub
push
fnsave
dec
loop
aad
add
pop
adc
push
data16
icebp
mov
inc
ds
aaa
aaa
pop
call
rorb
mov
xchg
lcall
les
ja
aas
cmpl
jno
roll
and
mov
call
adc
dec
imul
push
rcl
nop
popa
add
mov
fsub
pop
shufps
jns
scas
sub
sbb
pusha
addb
xor
call
dec
aas
push
or
inc
sbb
inc
ds
push
pop
sarb
out
call
repz
scas
scas
fisttpll
and
inc
cli
sub
xor
out
push
ljmp
cmp
push
jge
insb
add
xor
shll
adc
push
cmpsb
popf
mov
or
ds
stc
mov
das
xor
sub
int3
jns
cli
mov
mov
xchg
jecxz
lahf
aam
shl
leave
bound
xchg
mov
cmpsb
adc
xor
adcb
and
inc
cmp
xchg
sbb
jl
push
aam
mov
pop
loopne
jmp
sub
bnd
sub
sub
push
push
mov
xor
fstpt
int3
mov
pop
pop
mov
pop
adc
or
mov
pop
and
jmp
fildl
inc
ds
cwtl
cmp
push
call
add
stos
inc
hlt
inc
push
cld
cmp
jo
dec
inc
es
iret
aaa
icebp
xchg
mov
xor
add
lcall
movsb
fstl
pop
call
loope
loopne
into
mov
jecxz
popa
loop
pushf
sarb
add
jp
ret
adc
ret
mov
popf
push
dec
pop
fdivp
ret
xchg
add
or
mov
ret
jbe
xchg
mov
sbb
mov
nop
flds
ds
mov
and
call
jmp
dec
sbb
movsb
cli
mov
das
call
sub
stos
in
scas
inc
push
divb
xchg
in
and
pop
xor
adc
in
cmp
or
add
fwait
divl
mov
push
sbb
jns
je
fiaddl
inc
inc
mov
stos
into
clc
lret
jnp
subb
mov
sub
stos
jnp
jae
and
jg
pop
dec
sub
into
mov
popf
push
adc
xorl
scas
cs
or
push
mov
jns
xor
jb
jbe
shll
movsb
fnsave
sbb
xor
js
inc
ds
repnz
xchg
cmp
in
lods
mov
mov
adc
sbb
dec
fistl
mov
cmc
add
inc
pop
int3
ja
iret
mov
and
and
aam
push
sbb
loopne
jp
imul
nop
pop
sub
cs
mov
leave
mov
adc
xor
lcall
inc
js
push
in
pop
cwtl
dec
cltd
cli
jle
je
mov
cli
push
out
adc
popf
inc
inc
adc
pushf
push
xchg
jnp
jle
icebp
dec
sub
das
scas
mul
mov
xchg
loop
sub
xor
inc
ds
subb
add
das
add
push
call
shlb
sarl
fiadds
stos
xlat
mov
mov
js
inc
adc
sub
or
fsts
stos
push
add
mov
push
adc
mov
jmp
push
inc
out
fstpt
test
aam
inc
jg
shlb
push
jns
mov
or
cwtl
movsb
mov
ficoml
cmp
mov
and
jp
jbe
frstor
jo
les
jle
pop
add
dec
ja
xchg
push
call
xorl
push
out
lahf
fcmovu
sahf
imul
in
sub
mov
sbb
lods
cmpsl
xor
bound
imul
lds
xchg
mov
sub
add
aaa
or
hlt
mov
mov
mov
cld
add
push
and
push
scas
scas
sbb
inc
call
xchg
cmp
xchg
lret
lea
xor
mov
pop
loope
lcall
daa
dec
xor
inc
ds
filds
mov
test
cmp
jmp
lds
push
pop
lcall
push
lahf
aaa
lcall
cs
out
mov
inc
ds
add
inc
jbe
jb
imul
add
test
sub
push
call
loope
or
add
push
js
jae
aam
icebp
xchg
mov
xchg
cld
mov
xor
xchg
into
mov
sub
jne
les
inc
pop
jl
dec
push
ja
es
dec
push
fdivp
ja
sub
loope
adc
test
cmpsb
ror
in
push
sbb
cmpsl
lock
movsb
bound
repz
in
sti
xor
inc
xor
mov
lcall
gs
ljmp
movsl
lds
lea
adcl
shrb
mov
mov
loopne
aad
ds
jmp
cmp
xor
add
push
cmp
inc
push
push
mov
mov
cld
out
andl
nop
es
pushl
push
fmull
or
add
hlt
add
jecxz
sub
ljmp
push
and
enter
adc
sbb
aad
pop
popf
mov
xor
sbb
shr
rcrl
out
jmp
iret
mov
imulb
dec
js
mov
jecxz
in
fistpl
daa
dec
xorb
inc
mov
inc
xchg
and
xchg
add
cmp
push
or
push
pushf
jb
lret
cmpsl
fmuls
sub
mov
push
fsubl
add
dec
adc
cwtl
sbb
movl
mov
pop
fcmovnu
enter
fs
cmpsl
sbb
mov
divl
adc
hlt
stos
fidivl
fstl
inc
ds
in
cmp
stos
adc
pop
sub
das
cmp
cs
xor
sbb
pop
lahf
decl
add
icebp
cmp
push
inc
and
rol
inc
imul
lods
icebp
mov
jmp
aaa
inc
ds
in
in
scas
or
inc
jmp
pushf
cmp
push
or
aaa
mov
test
mov
sub
or
das
or
arpl
inc
leave
cmpsl
shll
icebp
pop
jmp
push
jmp
jge
adc
mov
or
bound
stos
fs
add
push
lcall
data16
aad
outsb
push
dec
mov
cltd
fisubl
ret
iret
jno
outsl
add
jg
sub
cli
cmp
xor
stos
add
arpl
outsl
and
mov
mov
inc
popf
or
int
lret
clc
insb
sub
jg
dec
sbb
jo
gs
pop
inc
mov
stc
popf
nop
int
xor
mov
es
adc
jmp
push
bound
imul
inc
mov
jne
lea
mov
mov
fdivrl
idivl
xlat
int
pop
dec
movsb
negl
fdivr
cwtl
loop,pt
fstpl
enter
aam
inc
ds
sbb
cmp
stos
call
cmp
mov
sbb
imul
add
cwtl
loopne
aad
pop
shrb
dec
jge
sbb
cmpl
sti
xchg
popa
sub
and
jg
arpl
or
inc
scas
xor
jb
inc
pop
adc
xor
lret
mov
mov
mov
cmp
jns
inc
mov
inc
cli
mov
mov
xor
lret
inc
add
jno
sub
stos
gs
sub
fs
imul
xchg
cli
jmp
adc
push
cwtl
data16
fcompl
sub
cmp
xor
mov
mov
xchg
repnz
std
push
loop
loope
xor
pop
mov
ljmp
and
xchg
bound
xchg
pop
imul
in
lds
notb
adc
mov
shlb
pop
xchg
and
ds
sbb
mov
add
xor
sti
mov
and
mov
xor
dec
sub
jge
xchg
pop
dec
adc
ret
push
pushf
sub
fnstcw
aas
sbb
push
mov
cmpl
loopne
add
dec
and
inc
xor
loopne
jno
xchg
addr16
pop
add
inc
xchg
or
in
xchg
gs
test
pushl
mov
lret
push
adc
sbb
stos
iret
jle
or
bnd
mov
pop
dec
test
jge
xchg
fnstcw
aam
out
push
push
inc
ds
std
hlt
dec
sub
test
out
pop
mov
jnp
cmp
pop
sub
pop
jae
cli
xchg
test
mov
cwtl
dec
out
pop
daa
jmp
pop
mov
add
in
xchg
fstpl
push
dec
bts
pop
and
mov
mov
loop
and
push
cltd
and
xchg
repnz
or
sub
add
or
mov
aas
icebp
in
fisttps
shl
popa
sub
pop
pop
lret
inc
stos
and
mov
ljmp
push
pop
stc
push
call
pop
add
mov
call
aam
mov
adc
dec
sbb
outsb
mov
inc
mov
inc
das
fildl
out
add
testl
popf
enter
and
cmp
jae
js
cltd
fnstsw
test
test
and
rcll
stos
adc
call
call
adc
das
ss
out
jae
sbb
xchg
std
mov
sbb
test
xchg
cmpsl
shrl
cmp
imul
mov
pop
or
shll
mov
xchg
pushl
jbe
push
adc
push
aas
inc
mov
inc
and
in
nop
fldenv
mov
push
scas
cmp
fidivs
sbbb
mov
sub
test
sub
push
sbb
mov
leave
sbb
adc
cmp
mov
repnz
or
jo
movsl
inc
ds
fwait
xchg
sbb
or
in
xor
and
push
push
mov
pushl
ret
pusha
cmp
pushl
cmp
push
pushl
lea
jae
xchg
xadd
push
pusha
mov
bts
mov
bsf
stc
mov
stc
xor
movl
repnz
movb
lea
jne
sete
mov
shrd
sub
bsf
rcl
mov
pushf
pushf
stc
sub
pushf
clc
pusha
push
pushl
popl
stc
jmp
jmp
shrb
dec
sub
fmull
and
jecxz
lea
push
lret
aas
jmp
xchg
sbb
jo
xchg
sbb
xor
or
dec
push
cltd
popf
xchg
repnz
pop
mov
add
and
or
dec
mov
push
std
sub
sub
cmpsb
push
iret
dec
jmp
cmp
outsl
or
add
in
fcmovb
sahf
leave
sbb
cmp
dec
daa
dec
outsl
loope
out
mov
jl
ds
cmpsb
cld
inc
add
mov
push
movb
pushf
lea
jmp
stos
mov
lea
jmp
push
out
mov
cwtl
jmp
icebp
cmp
fmull
lds
pop
mov
cli
mov
pop
jnp
jl
std
mov
clc
cwtl
adcb
pop
adc
scas
mov
adcl
pusha
shll
in
ja
xor
fistps
xor
in
fldcw
fmul
push
imul
mov
mov
sahf
dec
movl
jbe
mov
rcrl
adc
mov
sub
call
pop
loopne
push
sahf
cmc
popf
addb
cmovns
push
pop
dec
xor
pop
adc
cltd
xor
pusha
sub
lods
fidivl
pop
cltd
xchg
test
cmp
data16
inc
cmc
jmp
push
in
sbb
out
dec
cltd
lahf
aam
push
rcrl
popa
cwtl
mov
mov
fwait
divb
movsl
dec
lret
aas
mov
sub
shlb
lods
pop
xor
subl
inc
icebp
std
ss
bound
leave
xchg
lods
and
cmp
and
pusha
ss
sbb
aam
in
lahf
mov
mov
inc
lcall
cmp
cmp
jbe
pop
or
mov
and
aas
inc
sahf
and
jne
push
movsl
rcll
loop
xchg
sub
scas
ret
mov
lods
loop
addr16
xor
lods
in
dec
mov
lock
fwait
cld
lahf
in
xor
cmovae
pusha
loope
mov
jl
push
ret
inc
or
mov
ss
int
mov
sub
and
dec
xor
jno
jo
repnz
gs
xor
repnz
sub
icebp
mov
loop
shll
inc
ds
mov
dec
push
call
fildll
inc
xor
scas
push
and
inc
and
add
into
test
xor
bt
call
stc
cmc
cmp
push
call
push
call
adc
icebp
xor
sbb
rorb
sbb
cmc
mov
mov
ds
aas
cmp
sahf
push
bnd
push
adc
cmp
mov
dec
enter
lcall
ret
xchg
dec
repnz
jne
into
inc
fstpt
pop
push
cmp
pop
or
lock
popf
jno
jecxz
fildll
addr16
nop
sbb
jecxz
pop
test
jl
outsl
xchg
mov
sbb
dec
or
roll
push
out
ljmp
sub
xchg
rorb
ds
and
ja
iret
imul
sub
inc
inc
loop
mull
popf
push
and
xor
scas
mov
inc
ds
sti
stos
push
daa
dec
add
sub
icebp
mov
add
or
outsl
in
cmp
inc
ds
mov
mov
lret
clc
sbb
call
inc
adc
push
ret
push
or
xor
xor
mov
scas
xlat
mov
push
test
loopne
cmp
pusha
xor
inc
movsb
jge
mov
outsl
xchg
fsubrs
jmp
dec
sbb
jg
inc
popl
mov
add
sub
pop
mov
in
push
add
dec
insb
enter
jp
sub
rcrb
adc
xchg
and
rorl
insb
cmp
jg
sbb
pop
test
stos
sub
mov
sbb
scas
jns
lret
stos
fs
xchg
je
ret
test
call
pop
in
cs
sub
push
inc
jae
cmc
cmpsb
clc
cmpsb
pusha
rcll
pop
mov
mov
rorl
push
dec
cmc
inc
ds
mov
pushf
dec
cmp
cmp
shl
pusha
not
push
mov
lods
lea
jnp
bt
stc
push
rol
stc
cmc
jmp
push
call
mov
xchg
xlat
add
rcrb
pop
add
push
sub
pop
xor
mov
push
fmuls
push
mov
rcr
out
movl
scas
mov
jno
mov
inc
add
inc
daa
loopne
jno
sarl
adc
fwait
leave
push
cltd
dec
or
das
negb
jmp
xor
sub
iret
insl
shr
dec
fsubs
aad
inc
jb
cli
stos
addr16
dec
mov
es
adc
ljmp
ds
pushl
pushf
mov
push
call
jns
js
dec
sbb
jbe
pop
filds
addr16
dec
adc
sub
xor
icebp
stos
xor
jp
roll
movsb
mov
cmp
divb
add
jbe
dec
xor
ds
add
and
lret
lcall
mov
dec
in
enter
cmp
jbe
js
insl
mov
fs
jge
lret
push
xchg
mov
cld
xchg
mov
mov
mov
js
or
xchg
rorb
pop
push
test
inc
xchg
inc
mov
lret
cwtl
and
mov
adc
or
push
aaa
mov
cmpsb
imul
loop
testl
dec
mov
xchg
dec
icebp
mov
push
data16
cmp
adc
xchg
inc
in
cmp
comiss
jecxz
repz
loopne
push
inc
ds
push
popf
sub
xchg
fistpll
mov
push
stos
sub
daa
lfs
movsl
inc
sub
shll
fisttpl
inc
ds
push
or
xchg
xchg
lret
stos
fldcw
mov
sbb
rep
loop
mov
xor
inc
ds
add
xor
lock
repnz
sbb
inc
lcall
sar
sar
stos
out
push
mov
popf
sub
mov
push
ret
mov
mov
pop
je
mov
sti
repz
loopne
and
enter
std
mov
push
jb
xchg
push
inc
outsb
inc
in
arpl
fmuls
adcb
pop
push
push
mov
int3
shr
adc
dec
aas
jno
push
or
mov
push
inc
mov
sbb
arpl
mov
fldcw
ds
mov
dec
bsr
shrd
movzbw
rcr
mov
clc
cmc
cmc
add
jmp
push
call
mov
scas
add
call
push
lcall
aaa
out
shlb
outsl
cwtl
cmpsl
leave
scas
mov
test
lret
out
and
xorl
mov
mov
mov
mov
xchg
int3
arpl
and
push
inc
daa
add
push
mov
push
ss
push
sub
pop
push
push
inc
sbb
movsb
fsubl
sbb
es
xor
cltd
and
int
or
scas
es
add
cmpsb
add
push
pop
cmpsl
aaa
lock
and
loope
notl
movl
movsb
outsb
aad
mov
rclb
ds
add
push
add
xchg
jg
je
add
rcrb
push
fs
jmp
shll
call
adc
xor
aam
mov
push
gs
ja
dec
fisttpl
in
mov
aad
xchg
mov
fidivrs
or
jge
mov
into
ja
push
cmp
in
lea
call
mov
lods
test
or
xor
lods
stc
sahf
hlt
inc
outsb
adc
lock
xchg
sahf
in
jo
loop
mov
call
enter
mov
xor
loop
and
ljmp
and
out
daa
inc
ds
mov
pusha
lea
jmp
push
call
aad
inc
test
pop
cmp
arpl
add
stc
mov
push
lea
jmp
call
push
call
jae
imulb
jp
jl
inc
cmp
aas
dec
iret
mov
les
aad
inc
es
andl
jl
push
popf
and
stc
shlb
jo
push
shl
pop
orl
lock
mov
les
ficoml
negl
sbb
xchg
pop
sub
adc
jnp
inc
movsl
pop
cmp
insb
fmull
pop
add
out
imull
mov
add
sbb
inc
leave
push
call
lods
xchg
pushf
pushf
mov
pusha
lea
je
cmp
cmp
pushf
lea
je
push
push
pusha
lea
jmp
push
call
adc
and
call
shl
push
in
mov
ja
cmp
cli
scas
out
mov
fisttpl
sahf
mov
icebp
lods
mov
call
xchg
clc
inc
leave
popa
das
jecxz
enter
mov
shrl
and
out
inc
ds
andl
outsl
or
adc
aam
ret
imul
es
inc
addl
inc
cltd
dec
dec
test
push
mov
test
bound
lahf
pop
mov
shrb
jmp
cmpsl
mov
dec
mov
vsqrtpd
les
fcoml
inc
ds
loop
sub
imul
ss
ja
mov
bound
push
shlb
test
adc
out
cltd
fbld
dec
pop
jp
cmp
repz
jecxz
movsb
ds
shll
mov
add
xchg
or
or
sbb
jp
mov
les
leave
mov
orb
push
stc
fistpll
xchg
call
aad
fwait
lock
fdivs
jb
pusha
pop
arpl
std
push
fstp
push
sarb
stos
mov
data16
lea
push
aaa
dec
add
xchg
das
insl
xor
pop
cmp
cmc
mov
push
cmc
xor
gs
mov
mov
sbb
fwait
sub
mov
movsl
jmp
iret
mov
mov
cwtl
lret
mov
mov
mov
cmpb
jmp
push
call
dec
movsl
jecxz
add
sbb
stos
dec
lret
call
add
adc
pop
sbb
ja
dec
adc
xchg
sti
test
mov
pop
push
xchg
sbb
dec
jmp
xchg
cmp
jb
lea
insl
fistpll
add
cltd
sub
sbbb
ja
fimuls
mov
jmp
scas
dec
jle
loope
or
lret
ds
addr16
pop
imul
testl
stos
lea
data16
dec
sbb
popa
add
mulb
dec
adc
stc
mov
pusha
test
cmpb
pushl
pushf
lea
jne
call
dec
orl
push
call
push
sub
mov
pop
hlt
jbe
adc
aam
stos
jg
xchg
sbb
dec
sbb
sbb
aas
lcall
fisubl
mov
dec
sbb
add
add
push
outsl
imul
gs
sbb
and
faddl
in
loop
out
and
jo
dec
or
imull
mov
int
adc
cmpw
fdivrs
inc
jl,pn
sub
dec
xchg
push
popf
scas
test
adc
push
jl
xor
mov
xchg
push
loope,pt
loopne
pop
daa
cld
iret
xchg
test
inc
or
adc
pop
sub
outsb
sbb
cltd
adc
pop
xchg
mov
dec
push
fcoml
repz
jle
pop
out
inc
es
clc
andl
push
dec
loopne
mov
push
loopne
dec
adc
or
jl
push
vmread
ds
popa
hlt
push
call
inc
and
lret
psllq
aad
or
call
sub
xor
and
pop
mov
adc
dec
pop
fmuls
sbb
jnp
push
jns
mov
leave
add
daa
sub
xor
xor
sar
jne
fmuls
mov
ds
scas
into
daa
pop
mov
mov
popa
inc
ds
enter
push
lock
xchg
xchg
fdivrl
pop
es
pop
xor
mov
ds
add
pushl
popl
push
pushl
ret
push
call
gs
rcl
push
jb
xchg
jmp
aaa
sahf
and
pop
iret
negl
fistps
and
push
imulb
loope
lret
mov
mov
xchg
aaa
mov
icebp
lcall
fs
mov
out
jle
pop
mov
out
rorl
jbe
dec
pop
adc
cmp
push
repz
cmc
inc
inc
jo
shll
jnp
mov
jns
xor
imul
adc
add
jne,pn
popw
je
inc
ds
mov
cmp
pusha
jmp
pop
out
mov
or
loop
lret
fwait
in
out
shlb
out
or
lret
sub
cmc
jo
xor
xorl
pop
xchg
into
popf
fsubr
and
jnp
mov
jecxz
inc
imul
cmp
mov
dec
xor
or
out
popa
jl
sbb
mov
jge
or
jae
xor
add
jle
ja
imul
lds
xor
mov
push
xlat
push
call
ret
and
lahf
jmp
out
pop
ficomps
stc
jnp
shlb
cli
nop
loope
mov
mov
lcall
add
push
jbe
pop
int
lcall
cmp
xchg
add
cld
test
pusha
lret
push
rclb
push
cltd
in
outsb
push
fsubrs
add
rcl
or
out
popf
or
add
ficompl
mov
and
add
and
ds
xchg
fimull
enter
leave
add
mov
xor
push
call
lcall
inc
std
into
push
lret
outsl
push
add
inc
sbb
inc
push
outsb
xchg
pop
stos
sbb
push
jo
pop
lods
ret
inc
jbe
mov
mov
mov
push
data16
in
test
arpl
lcallw
sbb
inc
imul
mov
sbb
mov
cmp
mov
inc
and
movsl
jne
or
scas
cmc
icebp
sub
jp
dec
push
jo
inc
aaa
jae
loopne
ds
pusha
in
btc
bsr
movsbw
mov
pusha
stc
bt
test
and
pushf
cmc
bt
add
pusha
movb
pushl
lea
jmp
je
mov
bnd
aaa
int3
xor
lods
call
jb
inc
sub
iret
dec
cmpsb
sub
xchg
inc
rcr
xchg
das
and
in
mov
mov
sbb
pop
hlt
or
addl
jbe
adcb
dec
jl
mov
fisubrl
xchg
mov
sbb
pop
out
mov
jbe
inc
xor
aam
sarl
adc
add
sahf
aam
mov
add
fldenv
call
or
mov
jae
push
call
push
ret
sub
enter
cwtl
mov
pop
daa
mov
mov
adc
push
mov
cltd
pop
pop
dec
mov
mov
fmuls
xor
xor
lret
loope
sub
add
lret
test
mov
ja
fsts
adc
push
cld
mov
and
mov
push
and
fnsave
adc
mov
and
popf
sarl
xchg
in
fldl
int3
mov
inc
ds
ds
mov
inc
lods
sti
cmpsl
push
outsl
add
sub
cmp
xchg
call
sbb
dec
notb
cmp
xchg
jbe
daa
sub
xor
mov
popa
pop
and
outsb
mov
les
mov
xchg
enter
and
stos
xor
inc
and
movsl
xchg
and
aas
push
and
push
das
jle
inc
ds
jge
push
call
xor
add
and
xor
pushf
loopne
clc
fisubl
cmp
push
inc
dec
dec
add
dec
xchg
call
cs
dec
arpl
xchg
sub
jge
or
cld
mov
mov
lods
in
ret
jl
ds
aad
xor
add
or
inc
sbb
cmp
lahf
shl
shrb
cmp
pop
sub
std
inc
ljmp
scas
or
jle
xor
cltd
daa
dec
adc
inc
mov
call
outsl
vmovsd
imul
out
xor
aas
jne
movsl
or
xor
adc
shll
mov
pusha
and
leave
mov
adc
lea
jae
cwtl
ljmp
call
mov
dec
inc
ds
jbe
test
add
push
add
push
call
xchg
stos
sub
call
call
push
sbb
sub
out
rcrb
xor
sbb
pop
and
inc
jmp
lret
aad
cmp
sub
loopne
in
jl
ror
ficomps
iret
inc
mov
out
out
push
mov
dec
imul
clc
sarb
clc
mov
imul
adc
gs
xchg
adc
aam
lret
xchg
dec
inc
pusha
cli
stos
pop
mov
adc
test
mov
sti
or
aam
mov
ljmp
imul
cmp
repnz
ds
sub
out
or
sub
pop
add
pop
or
pop
cmp
cmpsb
das
fsts
jmp
cmp
xchg
push
add
mov
mov
test
cltd
xor
insb
mov
test
dec
ds
cld
aaa
or
ret
lcall
inc
mov
or
adc
ds
testb
fcompl
loope
rclb
xchg
dec
fisubrs
pusha
inc
push
xor
test
mov
nop
cmp
pcmpeqw
outsb
and
iret
inc
lods
adc
incl
call
push
call
sub
lret
sub
cld
inc
sub
ret
in
cmpsl
sbb
adc
xchg
and
sub
lock
lods
push
das
mov
ds
add
xchg
and
mov
pop
gs
mov
mov
mov
js,pn
lcall
pop
sub
xor
add
in
pop
sti
pop
sub
scas
lret
aad
aas
aaa
addb
ss
repz
aaa
iret
in
pop
in
into
xchg
xor
das
jge
push
and
inc
lods
rol
inc
add
test
sar
mov
jmp
push
call
cmp
stos
subb
je
rorl
movsb
push
or
add
ds
sarb
sarl
mov
mov
jmp
cmp
cli
repnz
outsl
lcall
pop
adc
not
imul
cmp
cmp
fadds
test
mov
cmp
cld
stos
int3
mov
jmp
inc
lods
hlt
scas
das
push
lods
int
jecxz
mov
cmp
cli
adc
cmc
xor
pop
cli
add
fisubl
lock
cwtl
insl
out
cmpsb
icebp
add
dec
xor
les
mov
mov
ror
adc
xchg
and
test
jo
lock
jg
mov
cli
rolb
ljmp
repnz
aad
ss
xchg
jmp
call
ret
mov
xchg
push
cmpsb
imulb
fucom
cmp
dec
push
jge
stos
fildl
inc
lods
jge
push
call
cs
jo
mov
inc
call
in
push
call
sbb
add
and
rcrb
aam
jl
sbbb
pop
dec
mov
and
dec
cmp
sub
mov
mov
inc
or
les
inc
cmpsb
sub
inc
imul
or
fs
mov
ss
cmp
xor
xor
imul
mov
jmp
and
adc
mov
push
jg
loopne
iret
shll
mov
add
inc
iret
out
sub
and
movd
sbb
gs
ds
int3
insl
mov
pushf
setl
xchg
mov
xor
adc
seto
xchg
push
dec
xadd
pusha
mov
aad
aam
lea
lea
mov
lea
daa
sbb
mov
rcr
bsr
lea
setl
xor
ror
not
mov
pusha
jmp
push
call
cmpsb
sahf
pop
and
lret
cmp
mov
mov
mov
fisttps
outsl
in
sbb
scas
test
mov
rcrb
xor
lods
int
cmp
stos
mov
scas
push
pop
jb
inc
out
push
jne
imul
fwait
arpl
andb
gs
loope
or
insl
sbb
out
in
xor
xchg
test
je
inc
or
push
pop
jp
dec
xor
clc
inc
ds
mov
test
lea
jmp
add
rcl
adc
popf
cmp
inc
sub
jg
dec
pop
lahf
lret
add
stc
loop
daa
xchg
sbb
xchg
cmp
pop
lds
sbb
addr16
divps
jl
pop
or
inc
ds
pop
push
jmp
cwtl
jae
pop
inc
out
lcall
jmp
fsubl
mov
out
bound
mov
and
ss
loop
or
lock
mov
popf
repnz
jle
sbb
das
adc
imulb
inc
xor
sbb
cmp
fldl
xchg
cmp
movl
add
fstl
sbb
leave
pop
sbb
cmpsb
gs
xor
ficomps
ret
lods
sbb
lret
dec
rep
lods
push
es
xor
insl
aas
push
dec
cmc
inc
ds
ret
add
sbb
xchg
andl
jne
mov
movsbw
jmp
sub
clc
bt
stc
cmc
cmp
pushf
call
mov
mov
mov
add
cmp
shr
mov
inc
jae
and
pop
out
imul
jb
cli
stos
and
inc
xchg
and
push
mul
push
cltd
leave
fcomip
add
or
and
jno
lret
fiaddl
mov
push
test
inc
fimuls
sbb
mov
sub
jge
cltd
rorl
fdivrl
inc
ds
add
push
pushl
ret
outsl
insb
xor
cs
insb
add
test
xchg
add
bswap
mov
push
pusha
lea
jmp
lods
push
sarb
fildll
rcrb
out
fadds
test
mov
xor
in
sub
push
jne
dec
push
pop
xchg
jge
push
mov
mov
sub
sarl
cltd
mov
xchg
cmpsb
and
mov
xchg
push
stos
pop
mov
dec
add
add
inc
je
std
fisttpll
rorb
push
mov
pop
incl
outsb
pushl
arpl
jne
popa
and
push
sub
testl
jb
push
inc
insl
push
lock
xchg
mov
test
mov
ret
inc
mov
enter
dec
jp
dec
xchg
adc
daa
cmpl
mov
movntq
out
sbb
and
push
lcall
and
es
and
outsb
add
mov
fisubs
mov
mov
pusha
loopne
mov
mov
or
cmp
orb
es
mov
sbb
jo
dec
aaa
gs
inc
cmpsb
jne
mov
push
sub
adc
cmpsb
in
in
add
jge
cltd
aaa
mov
ds
pop
movsb
hlt
jns
cld
popf
jmp
rclb
in
pusha
mov
inc
lret
jo
add
xor
rcl
mov
push
adc
xchg
sub
les
dec
mov
ret
xchg
rcll
add
xorl
cltd
jl
jns
push
xor
daa
jg
mov
test
mov
scas
add
or
and
push
pushl
ret
push
call
and
scas
push
jno
pop
push
add
imull
push
xor
add
dec
adc
jae
loopne
pushf
pop
jp
and
sarl
mov
mov
ds
xchg
jl
push
in
das
push
pop
mov
addl
fisubs
or
popa
mov
mov
xchg
jecxz
in
sub
cli
lds
adc
cmpsb
aas
inc
or
add
dec
xor
mov
inc
adc
push
ja
shrl
fwait
lcall
std
out
add
test
test
nop
mov
inc
movsb
icebp
stos
or
lea
lea
movsbw
lea
not
movzwl
push
pushl
pop
lea
movsbw
movzbl
pop
jmp
add
rcr
push
or
movb
mov
call
add
sarl
icebp
sub
xchg
push
push
pop
adc
push
ds
pop
call
mov
lea
subl
fs
call
lahf
outsb
add
pop
fidivl
mov
pushl
leave
mov
imul
mov
pop
jl
cwtl
adc
sub
stos
in
xchg
mov
xor
push
adc
movsb
mov
scas
sbb
call
mov
inc
lret
ds
sub
xchg
xor
test
int
lds
cmp
insl
idivb
data16
popa
rol
ret
dec
dec
les
es
xor
jg
enter
jle
mov
and
and
stc
fidivrs
xchg
mov
sbb
test
xchg
roll
movsl
stc
inc
in
jg
clc
test
mov
jg
push
push
jnp
mov
mov
movsl
scas
hlt
dec
scas
pop
dec
mov
into
ret
cmpb
mov
mov
pop
shrb
jg
sbb
aad
cmp
mov
clc
cmp
nop
repz
xlat
xchg
fldl
into
dec
pop
call
or
xorb
jmp
pop
add
dec
mov
movsl
enter
cwtl
sbb
jno
or
jo
stos
lret
push
subl
test
cmp
iret
mov
lret
movsl
mov
stc
movzwl
mov
bsr
mov
pushf
call
lahf
cmp
or
fsubrl
rorb
pop
stc
cltd
sub
xor
and
in
push
lods
adc
or
clc
lock
pop
movsb
lods
mov
pop
or
stos
mov
out
cmp
negl
outsl
sub
push
add
addb
fildll
shrl
aas
pop
mov
jmp
or
cmc
mov
lock
adc
xlat
test
fdivrs
xchg
clc
les
inc
and
cmp
rorb
mov
add
push
add
insb
shrl
scas
sub
add
push
inc
or
inc
or
adc
cld
clc
cmp
inc
jno
mov
and
dec
stos
push
xor
insb
inc
popf
fwait
imul
mov
jo
mov
add
incb
dec
push
pop
and
push
call
shr
and
mov
lahf
lds
jb
inc
cmp
lock
std
xor
xchg
mov
add
pop
add
inc
jno,pn
inc
mov
add
add
add
push
add
jmp
and
push
movsl
dec
scas
int3
cmp
pop
cmp
or
push
xchg
push
xchg
adc
clc
fimull
hlt
inc
mov
jae
daa
ret
iret
pop
and
lds
pop
js
repz
lock
in
mov
imul
inc
or
add
mov
test
add
mov
pop
mov
test
fistpll
pusha
push
and
mov
lods
shlb
into
cltd
lret
cmp
stc
fdivrs
mov
add
add
or
ret
inc
rcr
test
setae
xchg
rcl
shl
aad
rcl
mov
shl
mov
cmc
cmc
cmp
stc
xchg
stc
dec
xor
sbb
mov
jmp
repz
loopne
cli
out
cld
pop
js
dec
or
mov
inc
int
mov
push
stos
sub
xchg
push
dec
and
push
mov
fcmovne
xchg
mov
in
mov
ret
enter
mov
xchg
add
push
jp
insl
sti
lcall
in
mov
rorb
adc
jb
sub
insl
daa
jg
je
pop
sub
inc
mov
add
adc
push
call
outsl
jbe
cwtl
jne
xchg
jo
mov
scas
mov
hlt
lods
fldt
fisubl
movsb
sbb
movsb
xchg
call
pop
nop
sbb
in
jmp
ss
fistl
cmp
xor
or
int3
mov
pushf
sub
in
ss
dec
cmp
roll
in
pop
sbb
scas
shr
jg,pn
jbe
dec
pop
mov
mov
push
popf
addr16
and
lock
dec
pop
testl
repz
sbb
pusha
jne
lock
fs
sti
cmp
inc
orb
incl
mov
mov
inc
mov
call
faddl
test
xchg
aad
lds
stc
inc
dec
aas
push
and
icebp
idivb
sbb
rol
enter
push
lods
es
ret
xchg
adc
aaa
cmp
cltd
popf
in
fdivl
repnz
jge
lds
xlat
lods
nop
pop
mov
ficompl
cmpsl
fdivl
repnz
or
xlat
pop
mov
or
mul
daa
fnsave
and
mov
fsubrl
outsb
outsb
adc
mov
pop
dec
mov
pushf
jg
xchg
das
cmp
clc
adc
pop
cmp
and
lret
movsl
in
sbb
push
sub
push
push
addr16
push
add
aam
mov
in
mov
pop
mov
mov
xor
lcall
jnp
test
push
sub
dec
clc
xor
in
repz
cwtl
inc
ds
dec
mov
and
sbb
mov
cmp
adc
inc
ds
or
sahf
pop
pushf
push
call
arpl
stos
adc
push
call
fwait
pop
ret
scas
imull
xor
push
push
test
cwtl
rcll
push
adc
idivl
fisubrs
xchg
sub
in
nop
nop
je
inc
cltd
imul
sub
das
jo
push
loop
mov
out
cmp
dec
stc
cld
pop
fidivrs
or
inc
or
negb
ds
insb
insb
add
je
add
sub
mov
stc
sub
pushf
mov
pushl
popl
push
test
jmp
pushl
push
pusha
bt
push
cmp
jmp
in
dec
adc
adc
sbb
mov
lea
ja
dec
adc
jnp
mov
adc
or
sbb
bound
inc
jle
lcall
je
mov
xor
inc
movsl
mov
stc
lods
es
jne
push
out
lret
inc
or
push
push
pop
xor
push
xor
in
pushl
jp
push
bound
push
mov
or
jl
jle
pop
xchg
inc
ds
dec
inc
aam
lret
fninit
jo
in
jle
ja
je
push
adc
ja
fiadds
pop
dec
adc
mov
jbe
xchg
gs
and
add
fnstenv
popa
icebp
mov
test
dec
ficompl
mov
mov
sahf
push
inc
push
xchg
sub
in
pop
dec
jae
add
sti
mov
xorb
sub
push
ja
mov
or
ja
frstor
xchg
ret
pop
xor
push
fiadds
icebp
xor
pushf
jmp
scas
jno
call
pop
mov
xchg
scas
xor
call
mov
test
sub
ss
lods
out
inc
scas
sti
ja
or
mov
cli
add
fsubs
xor
sbb
xchg
std
dec
fmul
xchg
int
inc
lcall
sarl
in
add
push
xor
xlat
sub
push
push
xchg
jnp
sbb
dec
scas
jmp
jmp
inc
repz
loope
imul
mov
imul
jnp
pop
ds
or
pusha
in
jmp
jecxz
push
push
call
xchg
push
jae
stos
push
call
lea
test
lea
jne
inc
into
xchg
loopne
fisubs
mov
subl
pop
and
imul
in
ljmp
out
mov
adcl
cmp
call
jnp
inc
or
push
paddsw
and
pusha
subb
adc
dec
sub
ror
mov
xchg
xorb
push
mov
dec
cmc
mov
pop
notb
xor
push
and
xor
or
mov
sbb
cld
inc
ds
es
outsl
insb
gs
jne
xor
cs
insb
add
call
push
call
pop
hlt
add
dec
insl
popa
addr16
imul
dec
arpl
add
test
add
not
mov
pushf
movzbl
lahf
bswap
lea
jmp
mov
xchg
pop
cmp
mov
shlb
icebp
xchg
jmp
mov
or
out
insb
push
jecxz
idiv
xor
adc
rol
lret
inc
cmp
or
js
cli
js
dec
mov
fisubs
daa
dec
sub
mov
push
int3
lods
nop
loopne
mov
stc
ljmp
mov
ret
jle
scas
pop
cs
sbb
pusha
sub
push
add
jae
jg
ds
mov
lds
add
xchg
push
push
aaa
sub
or
out
add
adc
xchg
cli
mov
imul
jbe
div
or
inc
into
sbb
nop
iret
scas
mov
or
lods
enter
push
test
ja
test
clc
popf
out
call
add
jns
out
push
adc
jl
test
and
lock
push
pop
cmp
fwait
lock
pop
push
call
or
imul
pop
or
mov
mov
pop
or
sub
xchg
movsb
mov
push
xor
and
cltd
sub
mov
push
jnp
cmp
addr16
cld
xchg
hlt
xchg
call
fbstp
xchg
sbb
loopne
mov
xchg
rcrb
add
je
pop
aas
jp
mov
and
cld
out
jbe
pop
adc
stos
std
xchg
leave
mov
movsl
sub
jle
jae
add
call
push
scas
add
mov
int3
mov
popa
inc
out
xlat
ret
rorl
xchg
dec
xor
mov
and
add
loope
add
aas
push
out
lret
xchg
cwtl
loopne
cmp
push
jl
daa
jb
insb
mov
xchg
cltd
jmp
add
sub
cmp
test
push
lretw
sub
push
mov
call
imul
rolb
cwtl
mov
sbb
sub
pop
mov
pushf
mov
leave
mov
cmp
add
sti
or
pop
and
in
cmp
pop
je
mov
mov
fstpt
nop
stos
lret
mov
enter
sub
mov
mov
dec
ret
enter
inc
arpl
or
loopne
mov
dec
sbb
pop
lahf
inc
ds
inc
dec
fstps
mov
rcll
mov
out
fadds
loop
fbld
imul
sbb
xchg
dec
out
popa
shl
cmpb
dec
std
jnp
mov
pop
sub
push
push
xor
lcall
insb
jbe
jle
int
cltd
sbb
mov
lahf
adc
cmp
enter
test
daa
idivb
inc
mov
repz
es
jl
sahf
lret
or
dec
xchg
int
cltd
cmc
inc
in
cs
lret
mov
xor
inc
ds
xlat
jle
call
jl
loopne
mov
cmpsl
stc
push
push
or
scas
int3
sbb
and
shlb
arpl
and
fidivs
jbe
hlt
fcomps
sbb
jo
arpl
outsl
dec
sub
jnp
xor
pop
cmpsl
xor
fisubs
or
aas
and
push
lret
outsl
and
lret
xor
jns
dec
push
add
jne
ds
scas
scas
cld
push
call
les
scas
jge
call
jnp
xor
pusha
push
pushf
lea
jmp
pushf
lea
je
lea
not
movzbw
mov
mov
bswap
not
lahf
push
pushf
movsbl
movl
lahf
push
movsbw
movsbw
pushf
lea
pusha
jmp
jmp
mov
jbe
mov
popf
les
pop
ss
sbb
mov
mov
rcrl
lods
add
ja
sub
cmp
inc
pop
or
pusha
mov
mov
push
inc
ds
jle
cmpsl
mov
lahf
lea
pushf
not
pushl
popl
mov
setb
lahf
cwtl
push
bswap
pusha
cwtl
movl
jmp
or
xor
cld
sub
adc
in
mov
push
popf
xchg
into
add
in
sbbl
sbb
aaa
mov
mov
or
sub
jg
mov
int3
dec
dec
mov
add
into
testl
imul
sar
push
xor
mov
ret
push
jge
jmp
push
sbb
pop
sbb
out
add
out
jbe
push
sub
push
add
sub
dec
das
jmp
xor
and
jns
push
lea
jb
stc
pushf
mov
cmpb
pusha
lea
jne
btr
test
mov
call
cmp
shrb
fsubrl
shlb
xor
rol
popa
pop
test
push
data16
fs
filds
cli
inc
cli
jns
enter
lods
cltd
daa
rorb
or
clc
adc
aad
sbb
mov
push
sar
scas
lret
dec
lock
testb
inc
ds
out
adc
mov
pop
add
je
add
add
add
mov
add
adc
cmp
pop
add
jp
add
adc
inc
add
add
mov
adc
dec
add
add
push
add
add
add
leave
push
add
add
add
add
add
add
ljmp
push
add
add
add
add
mov
add
add
add
je
add
pop
add
adcl
mov
adc
addb
add
je
add
add
add
add
loopne
adc
fidivl
push
call
xchg
bt
shl
call
sbb
ret
and
jge
inc
sub
aam
jo
cmp
jnp
popa
in
mov
daa
pop
sbb
pop
or
outsl
xor
adc
adc
xchg
cs
sub
in
inc
stc
aam
bound
jbe
scas
addr16
test
mov
lods
fisttpl
scas
les
sbb
ret
cmp
aad
xor
out
mov
cs
stos
or
dec
push
fidivl
iret
lahf
shlb
xchg
dec
inc
fdivrp
addr16
adc
push
leave
or
cli
xchg
in
or
pop
inc
pushf
in
xchg
push
dec
testl
call
sub
enter
push
cmpsl
fs
cs
adc
push
push
leave
dec
inc
mov
addr16
mov
add
iret
lahf
dec
out
cmp
jo
leave
test
push
dec
aad
mov
inc
and
mov
mov
xchg
inc
add
insl
push
pop
aam
int3
mov
xor
dec
push
call
sub
add
push
dec
rorb
and
aas
push
movd
pusha
lcall
jno,pt
xchg
bound
push
lret
std
jp
inc
inc
add
sti
js
shl
cmc
or
scas
sub
dec
popf
adc
arpl
data16
jmp
orb
add
test
mov
dec
popf
mov
shll
cmp
mov
shrl
inc
leave
insb
jmp
xor
mov
mov
inc
ds
lret
xchg
adc
fs
ja
bt
imul
cmp
jmp
pushl
popl
clc
cmp
pusha
movb
pushl
lea
ja
neg
adc
neg
rcr
sub
and
add
btr
mov
inc
mov
rcr
rcl
mov
pushf
pushf
repnz
pushf
call
mov
jb
dec
add
mov
or
test
sbb
loopne
mov
loope
sarb
push
stos
cli
cwtl
sti
jno
bound
movsb
loop
pop
jno
sarb
ret
out
add
mov
push
gs
cmpsl
in
mov
push
ds
and
addr16
in
adc
call
dec
mov
shll
test
xchg
pop
push
icebp
lea
jne
mov
movb
jmp
movb
pushl
movl
mov
push
movl
call
mov
cmc
dec
jne
adc
lds
popa
xor
sub
movsb
inc
adc
xor
or
and
push
test
orl
aam
sbbb
fwait
test
cmp
jbe
sub
mov
xor
in
divl
add
xor
xchg
pop
shll
in
pcmpeqd
call
aas
hlt
aad
fildll
icebp
ljmp
gs
frstor
inc
and
fwait
loop
out
leave
nop
sub
sbb
call
xor
rclb
cmp
pop
and
inc
and
mov
lds
iret
or
mov
stos
lods
mov
inc
insb
jb
mov
mov
aaa
mov
jne
cmp
enter
es
sub
test
xchg
mov
in
rorb
xchg
mov
mov
pop
jg
in
fldt
out
icebp
ds
adc
add
push
xor
je
mov
lods
cmp
out
xor
iret
lods
std
movsb
aam
cld
aas
inc
ds
in
dec
xor
and
dec
pop
shlb
push
pop
and
jae
arpl
jbe
jne
push
stos
pop
mov
fsubrl
xchg
sbb
xlat
incb
cltd
sbb
dec
aaa
mov
mov
in
addr16
icebp
mov
jb
sub
dec
test
xor
sbb
inc
inc
jle
popa
sub
and
loope
push
sbb
xchg
addr16
icebp
int3
pop
in
lret
cmpsl
adc
out
jns
add
xchg
sub
mov
clc
inc
dec
fwait
pushl
ret
sahf
je
xor
rorb
add
pop
xor
cmc
inc
ds
das
jne
lcall
test
imul
cmp
js
in
incb
bound
push
call
mov
xchg
and
aad
lret
iret
pusha
fcompl
sub
daa
mov
jp
aas
fwait
bound
in
pop
cmpsl
aas
xchg
cmp
mov
xchg
pop
fbstp
mov
cmp
inc
int
ss
test
cs
or
add
aam
jecxz
cmpsl
jb
in
cmp
or
subb
insb
enter
xor
repnz
fwait
mov
mov
fists
sbb
lods
and
outsl
and
and
cmp
xchg
sub
fbld
test
cmp
jb
dec
icebp
inc
ds
iret
test
adc
shll
negb
stc
xchg
fisttps
roll
xor
mov
mov
fnstsw
and
test
sub
outsl
stos
out
inc
or
bsf
jbe
sub
fs
push
xor
push
divps
cmp
leave
pop
jbe
dec
fsubs
cmp
push
and
xchg
cmp
pop
das
ss
pop
mov
dec
adc
iret
xor
pop
pop
jecxz
cmc
rolb
cmp
sbb
jo
push
aaa
push
or
inc
ds
sbb
sub
andb
mov
and
push
andnps
sbb
sldt
sbb
hlt
add
outsl
jecxz
add
out
in
stc
jb
sbb
je
mov
push
cmp
and
or
and
cs
pop
addl
mov
std
push
push
lahf
pop
mov
xor
push
imulb
xor
mov
push
jno
ljmp
and
fldl
ds
adc
xchg
mov
and
push
jbe
mov
scas
lret
loope
notb
xor
jo
jae
inc
adc
outsb
adc
lret
loope
es
call
mov
icebp
neg
pop
dec
f2xm1
rorl
inc
mov
ret
xchg
ljmp
pop
mov
mov
jo
dec
inc
arpl
test
in
aad
push
ljmp
dec
sub
imul
mov
fnstcw
add
call
in
add
add
scas
lea
call
cmp
ds
popf
fisttpl
les
mov
push
mov
mov
mov
es
pop
push
sbb
loop
mov
sahf
adc
loope
loope
add
sub
aad
ss
push
cmpsl
xor
cmpl
add
sbbb
adcb
add
mov
je
xchg
push
out
lret
and
jne
ljmp
out
jge
leave
add
cld
pushf
adc
call
rcrb
rorb
icebp
fwait
jecxz
out
ljmp
aas
push
call
mov
stos
add
call
aad
test
mov
xchg
orb
pop
daa
pop
das
jnp
dec
push
jp
in
xorb
aaa
pop
cmp
stos
stc
or
dec
xchg
pop
mov
lods
jne
sbb
dec
int3
add
cmp
cmp
dec
jp
sahf
and
shrl
pushf
clc
mov
mov
enter
inc
fcoms
out
mov
daa
mov
mov
push
fiadds
pop
sbb
mov
loopne
push
push
inc
lea
jg
cmpsb
jae
jg
pop
jmp
rcrl
int3
mov
inc
lea
dec
test
ds
imul
cs
add
in
jge
lea
mov
or
mov
sbb
mov
iret
in
cli
sbb
aam
jmp
cmp
fadd
and
movsb
add
pusha
push
jne
daa
cmp
int
cmp
dec
push
sbb
sbb
das
sub
lods
out
fmul
mov
nop
clc
test
stos
xlat
mov
lahf
int3
mov
mov
imull
popa
and
arpl
scas
adc
mov
lds
insl
dec
cltd
xchg
hlt
mov
cmp
ret
mov
cmpsb
inc
xor
pop
push
jg
popf
xor
jae
insl
dec
das
push
pop
sbb
gs
push
mov
inc
jb
dec
cltd
popa
pop
cs
lods
jns
arpl
int
and
adc
jno
jmp
icebp
mov
inc
ja
inc
aas
mov
movsb
jbe
dec
or
push
add
mov
ficoml
ds
xchg
add
test
fstpl
sub
or
aaa
push
sub
fistpl
sub
aaa
mov
ss
sti
out
bound
andl
pusha
or
mov
andb
imul
loop
jo
or
pop
and
jmp
sub
xor
addb
jle
inc
js
fisubl
adc
nop
pop
push
enter
dec
push
dec
xor
cltd
repnz
sub
idivl
cmpsl
call
lea
test
jg
adc
ljmp
mov
push
and
cmpsl
mov
rcrb
or
jb
pop
xchg
repnz
push
pop
jecxz
dec
loope
fmull
pusha
or
arpl
notb
cmpsl
dec
lds
int3
cmpsl
sbb
inc
icebp
dec
aas
cli
negl
sbbl
cmp
mov
movsl
sti
add
loopne
out
sub
mov
test
dec
xor
outsb
in
add
movsb
nop
rcrl
xor
sub
and
jns
jae
cli
pop
jmp
imul
mov
shlb
mov
dec
mov
mov
loopne
sahf
cltd
ficoml
testl
addb
jg
mov
cltd
repnz
rcrb
inc
stos
ds
je
fstpl
sti
scas
shrl
insl
pop
sti
mov
cmp
or
sub
mov
pop
cwtl
cmp
pcmpgtw
cmp
scas
popa
push
xchg
loopne
push
pop
pop
fcmovbe
mov
fisubs
adc
iret
mov
insb
cmp
imul
inc
mov
pusha
pushf
popl
add
je
test
bt
cmp
or
push
call
popa
aas
outsl
mov
mov
jbe
inc
cmp
xor
pushf
pushf
repnz
xchg
js,pn
ljmp
not
in
sub
push
push
and
sbb
inc
nop
addl
imul
mov
mov
xchg
inc
jae
rcll
inc
sbb
xchg
xchg
push
xchg
cmp
mov
leave
mov
mov
cmp
movsb
loop
xor
lea
xchg
jne
out
xchg
sub
fiadds
xchg
pop
xor
mov
sbb
or
rolb
adc
imul
and
xor
lcall
xor
or
xor
insl
test
mov
mov
adc
int3
and
push
aad
imul
out
les
cmc
nop
mov
cmp
stos
push
fstl
and
call
sbb
popf
repz
adc
scas
adc
mov
out
mov
pushf
xchg
mov
or
mov
sub
jno
cmpb
cltd
push
sti
cmp
push
pop
adc
fsubrp
icebp
daa
xor
sub
mov
pushf
pusha
bound
inc
or
outsb
push
inc
add
mov
jb
popa
and
push
push
xchg
out
pop
inc
xchg
mov
int3
addl
add
andl
arpl
mov
adc
jl
add
dec
xor
push
nop
inc
push
or
orl
dec
adc
ret
dec
and
push
push
push
in
sbb
in
jg
or
ja
ds
loopne
sbb
adc
idivb
mov
pop
and
xlat
inc
ljmp
jmp
mov
push
loop
int
dec
popf
out
adc
push
lods
movsb
cmpl
mov
rclb
jle
inc
xchg
jmp
test
frstor
and
pop
sub
mov
cmp
dec
rorb
pop
sbb
dec
xor
push
xor
mov
sub
ljmp
js
pop
icebp
inc
insb
jmp
and
or
imul
pop
xchg
inc
xchg
scas
dec
cmp
or
scas
lcall
out
mov
push
or
cmp
inc
lods
aam
fnstenv
cmp
mov
movsb
and
inc
dec
mov
test
out
pop
push
repz
aad
inc
ret
in
aaa
inc
mov
es
inc
xchg
mov
adc
pop
push
int3
int
xlat
lods
repz
mov
leave
pop
popf
sarb
inc
into
loope
rclb
mov
cmc
scas
ja
push
aaa
cmovnp
inc
ds
mov
sti
add
enter
pusha
out
mov
mov
test
in
aas
shlb
jl
imul
pop
add
inc
test
cmp
pop
clc
xlat
movsb
into
xchg
fldenv
mov
shrb
mov
lretw
pop
stos
cld
jbe
dec
and
or
inc
test
stos
cmp
call
adc
test
jmp
dec
cld
lods
dec
incb
xchg
push
rcrb
mov
pop
dec
test
mov
mov
and
daa
xchg
jae
mov
imul
push
mov
dec
in
hlt
lahf
aad
adc
push
sub
das
cmpsl
mov
push
lds
jb
jb
xchg
mov
sbb
xchg
inc
test
adc
test
xlat
add
imul
pop
cld
add
jecxz
daa
cli
cmpsb
push
xchg
jg
rorb
aad
repz
mov
stc
adc
or
inc
cmp
adc
in
ret
jmp
xor
jo
jl
lock
iret
jb
and
mov
call
push
add
in
or
popf
sbb
stc
fldenv
pop
xchg
popa
xor
pop
jb
xchg
cmp
jecxz
add
xor
pop
in
inc
arpl
jns
inc
outsb
mov
fyl2xp1
js
inc
jb
jae
sbb
dec
push
arpl
imul
push
call
iret
push
call
xchg
out
push
call
mov
lahf
cltd
pushf
imul
xchg
cmc
loope
jns
mov
pop
scas
sub
xorb
shrl
pop
xchg
testl
push
in
test
xor
xchg
scas
jno
pop
adcb
aam
cmc
mov
loop
xchg
sub
sbb
push
mov
rcrl
mov
jns
ss
loope
ljmp
mov
shl
ds
push
pop
das
popa
adc
lock
jge
and
cli
mov
lock
sbb
mov
fmull
sbbb
cmpb
pop
in
outsl
cli
xchg
movsl
add
jp
dec
sbb
lahf
fldt
stos
sub
dec
out
in
xor
fidivrl
and
sbb
lea
pusha
adc
shlb
dec
inc
push
inc
orl
inc
rorb
push
pop
cmp
std
jecxz
es
push
addl
push
test
aaa
pushl
xor
cmp
mov
lcall
daa
pop
pop
inc
inc
ds
push
push
call
ss
loope
jno
testb
sbb
imul
push
in
sbb
lahf
and
xchg
clc
or
lods
add
pop
add
sti
push
out
dec
fsubl
mov
xchg
imul
dec
scas
out
fnstenv
clc
dec
jno
cmc
cmp
jno
js
fbstp
dec
enter
jmp
xchg
sbb
xor
decb
test
test
pop
adc
inc
addl
cmp
call
into
add
dec
jae
jno
popa
insb
inc
push
dec
inc
add
xrelease
add
xchg
ja
and
loop
add
in
add
xor
mov
movsl
dec
mov
or
xor
jbe
mov
mov
jmp
ds
dec
lcall
fwait
push
imulb
out
mov
dec
test
enter
in
es
xchg
and
enter
cmp
jo
movsl
jne
aam
fdivl
mov
fists
aas
sbb
cltd
mov
lock
xchg
pushf
aad
dec
and
fidivl
mov
rolb
pop
shr
jle
jle
rcr
test
cmpsb
mov
push
cmp
inc
adc
push
out
frstor
fildll
and
adc
xchg
jle
cmpsb
ja
cltd
cli
sbb
sbb
add
or
push
or
jecxz
out
sub
aas
push
pop
stos
pop
out
push
push
pop
xchg
nop
push
jp
fstl
scas
push
mov
mov
ficomps
push
call
lock
lods
mov
jle
push
sbb
pop
and
cmpsl
rclb
outsb
cmpsb
mov
jae
rcl
pop
xchg
ret
pop
popf
sub
jg
arpl
dec
sbb
sub
inc
inc
ds
and
call
cmc
clc
push
cmp
pusha
pusha
call
push
call
daa
jo
fistps
cld
fisubrs
xor
and
inc
adc
in
outsl
cmpsl
cmp
lret
scas
sbb
cmp
xchg
push
dec
mov
int
mov
sahf
lods
ret
dec
stc
adc
in
pop
mov
jl
dec
mov
fs
cli
shlb
mov
fadd
fisubrl
rcl
insl
mov
les
hlt
subb
xchg
in
mov
mov
orl
stos
and
call
mov
movsl
add
xchg
jecxz
add
push
dec
pushf
jmp
sub
shlb
sbb
push
jmp
lahf
jp
push
shll
and
mov
lret
inc
xchg
lret
scas
jmp
jns
or
push
fimull
notb
inc
pop
jecxz
sbb
outsb
jns
sub
dec
mov
pop
mov
cli
insb
cmpsl
rcll
lcall
aaa
mov
aas
je
filds
xorb
test
into
loope
aas
arpl
push
push
mov
xchg
rorb
movsl
and
jp
inc
ds
outsl
xor
cli
ljmp
test
cmc
add
jg
sti
push
lea
ja
push
add
jmp
push
call
push
xchg
movsl
push
push
call
lss
popa
and
ljmp
pop
pop
push
push
lea
aad
repz
cld
out
and
leave
ds
imul
dec
mov
pop
call
lret
fcomp
mov
cmc
inc
outsb
mov
xchg
imull
inc
xchg
cwtl
pop
adc
add
fcompl
out
push
mov
lcall
les
xlat
push
cli
dec
add
xchg
jp
sarl
popf
ret
nop
pop
inc
incl
and
cmc
movb
cmp
mov
pushf
or
call
push
call
mov
dec
or
add
popa
jmp
xor
sbb
das
scas
jmp
testl
enter
jo
inc
jae
ljmp
mov
ret
into
mov
adc
and
lret
jno
sarb
push
xchg
mov
inc
mov
fiaddl
aas
and
decl
fisubrs
cwtl
jae
sub
out
outsb
lods
lahf
hlt
gs
fcmovnb
jp
jno
xchg
aad
fbld
out
shll
pop
aaa
ljmp
inc
in
jge
xor
sbb
rsm
fisttpll
and
fwait
jns
adc
jp
mov
jno
fstpl
mov
push
pop
adc
test
adc
je
push
addr16
test
cmp
popf
jmp
shrl
cs
adc
inc
ds
clc
clc
xchg
in
or
xchg
mov
and
cmpsb
popa
inc
pop
push
enter
fistps
notl
sub
test
jl
lds
aaa
stos
xchg
jmp
fildl
pop
hlt
jno
aad
sub
inc
nop
fmuls
lods
out
xchg
inc
insb
out
inc
mov
stos
mov
cmpsb
jb
roll
ds
xchg
mov
and
mov
mov
int3
adc
dec
ret
cwtl
notl
inc
ds
dec
dec
sbb
lods
and
ljmp
stos
jo
call
sti
stos
xor
std
pushf
aad
call
jnp
dec
sbb
je
cmc
jnp
or
jmp
inc
mov
sub
sbb
rcll
dec
xor
sbb
std
aad
aaa
cltd
popf
xchg
cmpsl
or
int3
xchg
dec
xchg
out
inc
iret
lcall
and
mov
adc
mov
adc
push
pop
ds
jge
mov
xchg
stos
std
movsb
ficomps
dec
aas
dec
mov
std
push
or
xchg
insl
xor
cmp
test
mov
inc
mov
gs
xor
push
jbe
imul
leave
or
out
test
jle
iret
hlt
gs
jmp
cmp
ja
add
inc
frstor
in
or
xor
dec
out
testl
adc
mov
push
in
push
jmp
repz
pop
xor
push
inc
ds
movsb
push
pushf
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
stos
sub
call
movsl
mov
add
fldl
lret
sti
pop
or
adc
ja
imul
sbbl
and
or
dec
stc
in
int
xlat
mov
scas
inc
and
xchg
idivl
dec
cmp
in
daa
cmpsl
and
cmpl
aam
icebp
idivb
icebp
mov
pop
scas
rclb
pop
rcll
jl
scas
adc
adc
icebp
mov
stos
insl
cltd
fbld
fmul
adc
xchg
loop
fistpll
mov
pushf
pop
inc
ds
sbb
push
call
nop
add
push
push
js
arpl
gs
add
stos
adc
add
mov
cmp
dec
cmpsb
sbb
sbb
adcb
pushf
leave
mov
inc
lret
cmp
outsb
push
push
shll
or
lods
repz
loope
xchg
push
push
dec
sbb
fcoml
push
xchg
fimuls
insl
cmp
adc
xchg
pop
cwtl
add
out
pop
pop
jbe
and
negl
cmpsb
xlat
pop
pushf
les
sub
insb
xchg
fdivl
repnz
divl
mov
lods
fcmovne
das
jmp
inc
jmp
arpl
ljmp
xchg
es
ds
sbb
xchg
inc
xor
sub
divl
in
mov
test
push
lcall
inc
fnstenv
mov
and
or
and
xchg
scas
cmc
xlat
cmpsl
hlt
ds
jmp
add
fwait
movb
cld
adc
and
jle
or
inc
cmp
jle
popa
and
es
outsl
aas
leave
repz
hlt
xor
push
repz
lcall
out
mov
mov
clc
and
nop
jmp
repnz
mov
test
mulb
adc
dec
gs
repz
icebp
pop
mov
adcl
mov
mov
testb
stos
int
fadd
push
adc
mov
insl
insb
std
add
or
mov
pushf
mov
std
roll
mov
push
cmp
mov
sbb
push
sub
mov
imul
sbb
cwtl
repz
test
mov
sub
lods
add
stos
jae
call
push
call
pop
xchg
push
call
ljmp
test
fildl
dec
push
call
mov
stos
pop
inc
call
inc
punpckhbw
scas
ja
call
pushf
pushl
xor
sub
jmp
pushf
jmp
repnz
call
push
call
hlt
hlt
push
mov
inc
sbb
popa
ja,pt
mov
test
stos
leave
sbb
flds
mov
les
lea
mov
or
das
inc
pop
pop
jp
sbb
dec
ljmp
jmp
push
shll
xchg
into
sbb
and
push
lret
xlat
mov
loop
aaa
dec
cmp
popa
or
rorl
comiss
push
ja
cli
leave
sbb
daa
jp
imul
or
add
add
push
scas
out
push
call
mov
scas
sub
call
xchg
stc
dec
push
jmp
mov
lea
jmp
movb
movl
pushf
mov
movzbw
pushf
not
jmp
lea
jae
dec
setno
setno
pushf
mov
pushf
pusha
inc
setb
mov
lea
pushf
lea
call
call
add
inc
jne
imul
insb
add
enter
jp
mov
jbe
mov
mov
xchg
aad
fldt
pop
fidivrl
sbb
std
into
cli
jo
and
mov
movsl
fiaddl
mov
jp
jno
mov
xchg
mov
jnp
mov
jbe
jecxz
decl
push
aad
add
inc
add
xor
testl
dec
jnp
xor
std
or
push
mov
pop
in
dec
push
pop
out
dec
insl
shlb
imul
mov
or
fildl
cmp
mov
sbb
pop
pop
sbb
fisttpll
int
cmp
popa
sbb
sub
lcall
inc
adc
loop
sbb
movsl
aas
pushf
mov
add
stos
xorb
ljmp
jne
mov
and
cmp
cmpsb
in
fs
mov
icebp
xor
aam
cs
sub
push
rolb
pop
inc
divl
cmpsl
push
call
sbb
jl
jle
add
enter
imul
insb
add
test
lret
adc
pop
push
scas
cmp
and
inc
in
xchg
rclb
gs
js
inc
cmp
cmpl
add
fldt
sbb
fldenv
mov
cmpsb
and
xchg
pop
enter
xchg
mov
scas
ret
insl
jecxz
pop
or
jne
push
add
fadds
sti
mov
stos
xor
sahf
sti
popf
dec
xor
daa
jbe
insl
and
rorl
iret
loope
and
popf
mov
data16
and
xchg
inc
mov
mov
subl
orl
push
das
pop
sub
inc
ds
jb
jb
orl
and
push
xchg
imul
cwtl
fs
push
mov
pushf
sub
ds
adc
mov
xchg
scas
sub
icebp
enter
lds
or
iret
ljmp
outsl
xor
andb
js
pop
inc
xchg
or
test
cwtl
mov
or
mov
mov
pop
mov
mov
adc
fdivrl
pop
test
dec
or
es
les
rol
fstpl
jl
mov
cltd
xor
push
lds
cmc
sbb
stos
inc
test
add
daa
push
call
or
dec
cmc
cmc
jmp
test
add
push
push
lea
jmp
push
call
ret
inc
inc
out
push
lods
sbb
les
es
pop
js
dec
push
stos
jb
mov
inc
or
dec
push
pop
cmp
test
xor
call
cmp
or
or
fcomps
lret
xchg
lds
imul
cmp
push
sbb
sahf
clc
mov
pop
ret
ja
fmuls
test
mov
ret
cmp
inc
ret
sub
ljmp
push
ja
inc
repnz
add
mov
pusha
pushf
popl
jmp
lahf
xor
fidivrs
cmp
arpl
jge
jae
je
pop
test
push
xchg
fcmovnbe
sub
push
fs
addb
xchg
mov
orl
out
test
jns
inc
jae
cmp
add
and
pop
jg
xchg
int
add
adc
cmp
scas
movsb
shll
shrl
mov
and
xor
je
push
lea
imul
sub
jmp
ss
clc
or
cld
inc
addr16
loopne
pop
xor
push
add
inc
ds
stos
ret
popf
sub
xchg
sbb
testb
scas
mov
cli
jp
cli
mov
loopne
pop
mov
inc
ds
ljmp
jns
lods
sti
clc
and
push
mov
adc
jbe
push
sub
insb
sbb
inc
rep
movsl
cmp
popf
outsb
fcmovne
add
inc
jge
cwtl
lret
lcall
sub
in
stos
stos
mov
ds
dec
add
lds
mov
jns
testl
lea
push
xchg
adc
pop
cmp
mov
pop
jo
add
mov
ds
jne
cmp
out
movsb
mov
pop
cmp
imul
out
sbb
cmp
or
xchg
popf
mov
fildll
add
cli
lds
inc
sbbl
lret
mov
xchg
loop
sub
jg
ret
repz
push
call
mov
push
call
add
scas
dec
sub
in
add
inc
jne
xchg
push
add
jbe
lahf
sahf
lds
repnz
xchg
das
cmpsl
xchg
jnp
cmp
popa
icebp
pop
ficompl
mov
push
push
add
mov
sub
cltd
xor
lcall
pop
cltd
fstpt
jae
jnp
cmp
pushf
and
inc
inc
mov
adc
xor
test
clc
lahf
sbb
sub
push
leave
inc
lock
nop
push
call
xor
jb
gs
xor
cs
insb
add
scas
and
call
mul
or
xadd
rcr
mov
sar
bts
pusha
mov
pusha
cmp
clc
xor
clc
repnz
pushf
call
push
call
les
push
pushl
pushf
pushl
popl
pushl
push
movl
mov
pushl
ret
nop
sbb
push
or
call
movsl
outsl
js
call
data16
cs
mov
cmc
int3
sbb
cltd
mov
aad
cmc
sarb
mov
cltd
outsb
xor
sub
pop
or
les
cwtl
mov
enter
pop
or
adc
pop
shlb
dec
dec
push
xchg
mov
bound
mov
pop
dec
mov
dec
fwait
cld
dec
mov
inc
xchg
fiadds
sub
xor
inc
ds
std
adc
call
gs
adc
jb
pusha
jo
cmc
in
mov
xchg
ret
mov
scas
in
mov
insb
jg
sbb
add
movsl
ret
jmp
jmp
xlat
pop
cmp
add
push
xchg
pop
sbb
or
jns
mov
sti
inc
cmp
or
out
out
subl
arpl
push
inc
dec
xchg
in
add
cmp
mov
jle
in
fnstenv
rcrb
push
stos
subb
loop
dec
pusha
lea
jae
cmc
stc
xor
call
das
btc
mov
stc
bt
call
push
call
out
and
divl
inc
das
dec
call
or
push
aam
out
lea
and
inc
aad
cmp
loopne
and
xlat
insb
adc
sub
jo
mov
scas
cmpsl
sub
and
icebp
cwtl
in
imul
fstl
xor
out
dec
addps
sbb
add
lcall
mov
ljmp
or
pop
cmpsl
out
out
add
or
fisubl
fwait
jbe
xor
rcrb
jae
pop
cltd
inc
ds
inc
loop
push
call
pop
push
call
adc
cmp
or
insb
sub
pop
out
scas
or
test
nop
in
fstpl
pop
loop
jno
cmp
mov
fwait
add
into
mov
pop
outsb
arpl
outsb
push
add
mov
cmpsl
in
fs
cmc
jle
jmp
dec
xlat
jne
mov
mov
cmp
ljmpw
fnstsw
xor
xorb
push
movsl
ror
push
xchg
push
jnp
lahf
add
jne
int
sti
fbstp
mov
inc
popf
push
sub
mov
sahf
stc
mov
jbe
dec
adc
inc
ds
push
inc
aam
fs
jb
jno
stc
bt
cmp
jmp
mov
not
pushf
lea
pusha
call
mov
adc
stc
mov
pushf
call
push
call
addr16
out
popf
rdtsc
push
call
lcall
lock
enter
sbb
add
cwtl
xchg
and
cwtl
in
pop
call
test
xchg
lcall
xor
or
fmuls
adc
jb
xchg
outsb
and
repnz
lcall
xor
xchg
sti
popf
fldt
shll
push
movsl
push
mov
ja
mov
in
pop
packsswb
pop
je
xor
test
das
push
inc
mov
pop
push
cs
pop
jb
jl
dec
push
push
or
in
les
pop
lret
ret
cwtl
roll
inc
std
shrb
inc
and
xchg
mov
pop
std
out
decl
pop
or
imul
out
mov
leave
dec
xchg
js
mov
mov
in
scas
ss
std
sub
cmp
repnz
ret
test
xlat
fnstcw
sbb
or
mov
add
inc
push
fcmovbe
mull
inc
sub
inc
adc
push
add
lock
in
jmp
stos
pop
adc
add
ss
add
add
pop
das
sub
aaa
stos
in
dec
mov
mov
sbb
and
push
sbb
and
jae
popf
push
pop
push
or
movsb
xor
cwtl
and
push
jg
dec
mov
ja
out
lret
inc
adc
paddw
sbb
je
mov
iret
stc
lock
inc
jg
pop
cld
inc
lock
jns
push
xchg
imul
mov
push
adc
cli
jne
bound
push
add
pop
loopne
ds
nop
nop
lds
scas
insl
sti
call
dec
jnp
mov
lret
fwait
pop
jae
mov
testl
sub
xchg
loope
out
xor
inc
dec
scas
add
stc
imul
mov
pop
sub
push
jno
push
pop
lods
adc
xchg
cmp
lods
mov
pop
arpl
icebp
push
aad
data16
and
sarb
out
xchg
mov
or
or
add
push
push
out
imul
es
adc
jg
lahf
int
out
and
ljmp
xor
mov
ljmp
jo
push
cmp
frstor
outsb
mov
fsubs
jne
jl
out
rcl
fwait
cmp
jbe
push
daa
dec
adc
jne
int
call
ret
mov
stc
imul
sub
push
jl
xchg
stc
mov
pop
int
out
push
cmp
dec
xchg
push
push
xchg
sbb
sub
mov
clc
inc
ds
popa
pusha
call
in
sbb
and
scas
dec
inc
call
cli
outsl
ficompl
in
ss
sbb
outsl
xchg
filds
jmp
movsb
dec
adc
test
mov
outsb
aas
push
outsl
or
imul
pop
addr16
xor
jge
popf
fsubl
mov
dec
les
mov
mov
jb
cmp
out
movsl
sbbb
and
dec
mov
bound
js
imul
xor
push
xchg
inc
ds
pop
xchg
stos
and
call
in
add
les
mov
add
mov
inc
push
addb
xor
popa
out
lret
scas
in
mov
jae
fwait
and
sahf
push
jp
cli
mov
pusha
lret
out
mov
testl
sub
cmpsl
xor
mov
adc
xor
adc
push
inc
pop
pop
sbb
sub
dec
out
dec
pusha
xchg
jl
mov
scas
jbe
mov
adc
and
out
pop
sub
loop
in
enter
rcll
inc
ds
sbb
cli
decl
and
xchg
movb
rep
push
mov
pushl
lea
jmp
adc
pushl
pushf
pusha
lea
jae
pushf
lea
jne
pushf
jmp
mov
orl
adc
mov
mov
xchg
mulb
insb
cmc
mov
ret
and
sti
cmp
cltd
sarl
push
arpl
add
outsb
incb
sbb
cmp
push
sarl
into
sbb
mov
mov
or
push
push
iret
movsb
popa
call
mov
insb
pop
shl
in
jl
adc
mov
sbb
fiaddl
jnp
pop
or
cli
movsl
in
mov
movsb
into
or
jmp
add
int3
add
mov
pop
and
imul
adc
dec
daa
inc
xor
test
lea
mov
popf
pop
and
or
in
push
push
mov
mov
idivl
sbb
pop
adc
das
sbb
xchg
inc
push
repnz
and
mov
mov
dec
repnz
mov
call
rcrl
mov
jnp
daa
mov
bound
adc
rep
out
lret
jns
push
or
mov
adc
add
rcrl
pushf
pusha
mov
movw
pushf
lea
jmp
mov
pop
mov
jge
je,pn
ljmp
dec
adc
pop
mov
leave
dec
call
and
push
clc
xor
outsl
pop
ja
lret
jle
daa
or
and
inc
mov
sbb
pop
inc
jne
daa
adc
pop
xchg
jp
add
mov
addr16
icebp
cmp
add
jmp
xor
out
repnz
cmp
inc
dec
push
aad
mov
add
pop
lahf
fwait
repnz
mov
adc
mov
cmp
or
inc
ds
push
test
scas
andl
fwait
dec
std
pushf
outsl
stos
popf
xchg
jo
flds
rorl
xchg
cwtl
movsb
mov
sub
and
shlb
push
xor
nop
pop
mov
cmp
lcall
les
imul
pop
mov
jecxz
ret
aas
xchg
ret
dec
or
fsubs
daa
adc
dec
lock
mov
push
jmp
test
xor
pop
mov
test
sbb
push
addr16
daa
dec
sub
aam
frstor
ret
add
out
cmpb
inc
repnz
xchg
lret
xor
or
push
pop
adc
push
inc
sbb
mov
gs
add
out
xor
xor
mov
rcrl
lcall
jbe
mov
stos
xchg
loopne
fs
jne
mov
and
ficomps
adcb
xchg
mov
in
sbb
rorl
mov
fadds
popl
test
hlt
jb,pn
jns
inc
xor
outsl
or
pop
testl
push
call
fucomp
sbb
add
push
int3
sbb
jb
adc
add
outsb
pop
jae
mov
testl
adc
pop
mov
cwtl
fsubr
add
out
or
push
clc
and
mov
push
dec
dec
fimull
mov
ds
mov
sub
ret
or
orb
jmp
mov
sub
cltd
repz
sbb
rcr
inc
fnstenv
mov
and
pushl
mov
mov
inc
ds
xor
inc
das
call
sti
pusha
clc
jo
call
inc
and
in
dec
mov
sbb
xlat
cmp
adc
dec
sub
cmp
mov
cmp
out
mov
mov
sti
jl
ficoml
fwait
iret
leave
mov
xchg
mov
bswap
pusha
out
mov
cmp
jae
jae
aaa
clc
aam
mov
xchg
out
insl
jmp
test
test
rorb
mov
mov
inc
sub
fcompl
test
ds
imul
add
movl
xchg
in
fists
lods
add
mov
outsl
add
pusha
cmp
cmpsb
aad
lds
fnstenv
insl
mov
jo,pt
cmp
es
imul
jb
ja
cmp
cmp
lcall
outsl
adc
mov
add
add
add
jle
mov
sahf
xchg
or
inc
and
iret
pop
inc
ds
aam
add
push
pop
aas
push
or
sbb
dec
xor
mov
inc
lret
fimuls
pcmpgtw
sbb
push
fists
and
stos
xchg
cmp
loop
xchg
jmp
add
sub
lock
fisttpl
cltd
mov
je
int
inc
aam
mov
divl
int
loope
aad
cltd
int
movsb
inc
push
lock
pop
xchg
int
fcoml
lods
mov
mov
jb
inc
pop
insl
sbb
imul
add
inc
loop,pt
mov
push
call
pop
lods
cmp
push
jno
pop
xor
inc
mov
mov
push
aad
xor
outsl
loop
push
adc
mov
inc
ja
loop
xchg
hlt
xchg
mov
pushf
ficoml
loop
sub
bt
test
jmp
push
call
aam
and
aad
sbb
addr16
scas
jns
inc
or
insl
xchg
pop
rcr
addr16
cmp
inc
mov
push
ds
jns
push
push
pop
adc
outsb
or
adc
js
fisttpl
rcll
fistps
cltd
jmp
sub
in
mov
pop
cmc
jp
cmp
loopne
adc
shrb
adc
push
rcrb
jl
xchg
fistpll
inc
repz
bound
dec
cli
ficomps
rolb
aam
and
ss
jo
popa
sbb
dec
or
inc
jecxz,pt
inc
adc
dec
sbb
arpl
les
and
daa
push
adc
addr16
sbb
inc
clc
sub
xchg
lcall
cmpsb
lret
in
push
push
or
mov
lret
mov
pop
mov
mov
cmp
ss
inc
mov
es
and
inc
out
add
cmc
cmp
sub
adcl
enter
int3
mov
xchg
jecxz
pop
xchg
hlt
adc
adcl
xchg
leave
cltd
shll
and
mov
rcrb
ja
xor
lahf
push
jmp
pop
int3
sbb
aas
movl
data16
mov
cmc
das
xor
jge
mov
lret
popf
inc
test
imul
aad
inc
inc
das
jns
gs
dec
mov
xchg
sahf
lds
in
xchg
sbb
loopne,pt
pushf
pop
push
call
mov
bswap
push
mov
movzbl
lea
pusha
mov
movzwl
mov
push
lea
lea
pushf
pop
mov
jmp
push
lea
jne
call
push
call
les
add
roll
mov
add
ret
adc
int3
std
xchg
cmp
push
jae
cltd
in
add
test
pusha
shl
sub
inc
orb
fnstenv
jo
insb
test
add
dec
xchg
popa
sbbb
cmp
sub
sbb
shlb
and
sti
repnz
pop
add
aas
sbb
out
mov
sbb
or
lahf
stos
loope
mov
add
xor
mov
adc
pop
add
inc
loope,pt
xchg
add
scas
pop
aas
call
cli
fsubl
push
call
imul
jg
call
sub
call
push
call
sbb
mov
stos
gs
jae
lret
mov
cmp
sub
testb
adc
sbb
sbb
pop
lea
sbb
cmp
jo
mov
sbb
pusha
jecxz
inc
fmuls
xchg
inc
cs
ja
loop
testl
insl
js
ja
mov
fidivrl
mov
pop
stc
test
mov
mov
xlat
lock
sbb
push
pop
or
jmp
das
mov
add
inc
cmp
xor
fdivl
jg
pop
ss
mov
loope,pt
mov
add
xor
mov
mov
sub
pop
daa
mov
jl
arpl
pop
xchg
xchg
mov
test
lea
xchg
jg
test
jp
cmp
push
push
dec
mov
stos
mov
aaa
push
aad
aam
test
mov
out
xlat
xor
ljmp
scas
subl
push
sub
test
sti
xor
sub
push
test
pop
xor
popf
enter
shlb
fisubrs
daa
xchg
push
call
cmp
in
lea
pop
mov
inc
cmp
push
xor
or
push
xchg
push
nop
push
pop
sub
push
in
adc
push
pushf
sub
imul
mov
mov
jnp
fdiv
mov
dec
cmp
das
jp
aas
stc
xchg
jns
jp
pop
std
and
in
in
fsub
popa
and
ret
adc
mov
fcoms
push
outsb
add
popf
pop
push
icebp
inc
subb
std
sbb
sub
inc
adc
xchg
inc
ds
mov
mov
dec
leave
add
jge
sbb
xchg
mov
std
js
and
out
pop
sub
push
and
fucomip
ja
xchg
out
sbb
es
dec
sbb
pop
aas
mov
mov
lea
pusha
xor
mov
gs
jae
jg
mov
cwtl
and
mov
cmp
dec
popl
sbb
dec
and
enter
jne
and
jbe
dec
inc
mov
cmp
inc
cmp
push
cwtl
inc
filds
mov
pushf
leave
xor
stc
call
pop
sub
popf
cld
xchg
ret
lcall
jge
and
in
pushf
mov
xlat
push
xchg
call
pop
icebp
cmp
cmpl
cwtl
subb
in
mov
jno
mov
test
repz
mov
repnz
pushf
call
popa
pop
add
mov
adc
bound
pop
push
rorb
jno
pop
add
dec
or
std
test
xchg
fwait
lret
pop
inc
faddl
in
test
mov
jmp
cli
call
pusha
movsb
cld
add
imull
pop
mov
xchg
xchg
int3
pop
xor
mov
fst
mov
repz
out
nop
pop
cmpsb
data16
inc
arpl
mov
push
fucomip
sbb
cld
or
loop
push
inc
mov
in
sub
mov
rcrb
out
cmp
stc
cmpb
dec
sbb
adcb
andb
push
into
add
mov
sub
je
pop
in
fcoml
test
aam
add
sub
fs
jmp
push
call
push
test
cltd
lea
adc
fcoml
mov
sti
sub
xchg
sbb
ja
sar
das
mov
adcb
or
mov
lds
mov
sarl
sub
sbb
and
aaa
cs
pop
push
mov
fsubs
or
sarl
pop
mov
mov
xor
fdivl
pop
xor
lret
testb
je
jno
test
or
add
fnstsw
xor
sti
call
fdivrl
add
push
gs
insb
outsl
jae
dec
gs
negb
jl
arpl
test
xchg
lock
lcall
fldl
incb
jmp
xor
cmp
mov
repz
adc
mov
fsubs
nop
aaa
fistl
inc
outsl
sti
addl
xor
outsl
cltd
call
shrl
subb
or
scas
dec
pop
icebp
mov
mov
sub
out
cmp
push
xchg
js
fs
fwait
out
push
bound
js
dec
pop
inc
pshufw
fstpl
ds
pushf
and
add
mov
cs
call
jo
popa
in
xchg
jnp
adc
test
mov
add
dec
adc
mov
or
test
mov
aas
sub
xlat
adc
aam
movsb
aad
xor
fs
jp
push
add
addl
jnp
leave
pop
roll
mov
cmp
hlt
lret
mov
movsl
and
mov
lea
and
xchg
dec
xchg
aad
push
adc
ficompl
popa
cmpsb
test
pop
in
in
ss
cmp
pop
adc
inc
fiaddl
pop
stc
push
call
fldcw
add
jmp
jo
lret
push
pop
and
popa
push
inc
or
mov
dec
xchg
xchg
lock
add
mov
cmpb
cmc
roll
fbstp
sub
push
cli
js
mov
add
xchg
dec
cld
inc
test
loop
mov
lret
push
jne
inc
jmp
out
and
jg
es
pop
xlat
push
adc
mov
insb
in
add
jb
test
cmpsb
std
cmp
ds
fs
stc
test
push
add
call
lea
jae
clc
pusha
pusha
test
cmp
pushf
call
xchg
adc
ret
leave
aaa
loopne
loope
push
inc
or
sub
add
repz
rolb
mov
ljmp
and
aaa
sti
mov
inc
dec
data16
mov
xchg
push
and
data16
fwait
pop
mov
xor
xchg
pop
sub
in
jecxz
sbb
cmp
roll
adc
sti
enter
dec
xor
ljmp
das
push
in
sbb
cwtl
leave
mov
inc
ds
nop
sub
cs
les
scas
xor
call
fnstenv
push
sti
call
outsl
cltd
sbb
insb
xor
popf
leave
add
mov
dec
xlat
scas
jle
push
cmp
adc
dec
lret
mov
in
mov
mov
and
nop
mov
push
mov
cmp
aas
popa
jno
es
xor
jne
pop
add
stc
mov
push
fidivrs
mov
ss
rcrb
mov
rcrl
shll
js
cltd
cwtl
xchg
sbb
out
push
mov
stos
rorl
aam
fmuls
push
divb
insl
add
jns
inc
jmp
mov
rolb
divb
push
es
int
mov
jae
sub
sahf
jecxz
jle
dec
xchg
sti
sub
jnp
mov
cmpsl
or
das
out
inc
lock
inc
ljmp
add
mov
ret
in
mov
lods
push
cmp
fcmovu
adc
adc
fisubrs
mov
mov
imul
adc
pop
push
push
ljmp
sti
enter
stc
jae
arpl
dec
sbb
test
jmp
jbe
int3
xor
jne
orb
je
out
fists
push
sbb
ret
pushf
mov
bound
jle
jae
mov
es
jbe
push
or
fistpl
xchg
lcall
dec
rolb
push
out
xchg
int
aad
and
es
divb
mov
xor
mov
jge
imul
inc
ds
jo
mov
cld
mov
add
fistps
jecxz
insl
pop
out
lods
flds
roll
inc
ds
faddl
sub
addr16
jb
outsl
push
pop
adc
push
lret
shrl
inc
mov
lahf
or
sahf
movsb
sub
repz
ds
aam
pop
sub
aad
enter
xchg
in
mov
xchg
mov
push
clc
movsb
jne
lret
mov
mov
mov
inc
ds
dec
adc
cmp
add
xchg
mov
lret
test
nop
das
dec
mulb
xchg
jg
pop
or
mov
loop
imul
cmp
lret
dec
out
push
jg
jp
jb
xor
je
jns
sti
jg
pop
scas
call
inc
cmp
and
jno
repnz
movsb
das
mov
pop
cmp
pushf
ret
mov
push
dec
stos
ret
cmp
xchg
pop
andl
cmp
jnp
sbb
and
shrl
in
jge
pop
xlat
mov
imul
inc
xlat
jge
and
or
sub
xchg
dec
and
out
mov
inc
les
xlat
mov
mov
shrb
mov
push
das
inc
xlat
stos
and
out
mov
push
adc
mull
add
lahf
dec
lock
bound
jmp
shlb
xlat
jl
jb
call
cmpsb
xor
xchg
mov
bts
and
je
sub
and
test
fwait
in
jo
lcall
lea
cmp
in
cmp
js
xorb
mov
cs
rclb
into
xor
inc
dec
xor
rcrb
ja
into
jmp
push
mov
dec
iret
jbe
xchg
pop
ja
sti
inc
fdivl
adc
or
lcall
notl
in
xchg
or
ds
mov
lea
jmp
jns
lods
jns
and
pop
jb
inc
and
dec
stos
ds
outsb
fadds
aas
mov
xchg
dec
cmp
xor
mov
std
int
aam
movsl
jg
sub
popf
lret
ljmp
and
insl
jne
mov
xchg
jno
sahf
cmp
cmovo
fistpll
stos
inc
movsb
cmp
jmp
js
inc
pop
or
sti
cmp
outsl
dec
ret
or
repnz
mov
in
mov
mov
scas
sti
inc
inc
ds
imul
outsl
insl
arpl
xor
fs
insb
add
test
int3
add
and
push
sub
je
xchg
test
xchg
cltd
mov
mov
mov
xlat
or
xlat
bnd
sub
pop
xor
mov
or
cmp
pop
insl
push
mov
mov
fdiv
movsl
daa
into
sub
lods
or
dec
dec
add
scas
push
push
push
or
or
adc
or
test
lret
or
adcl
lret
xchg
shll
mov
aad
jp
add
lret
jg
add
int3
add
sub
mov
leave
inc
call
cmc
mov
scas
mov
add
pop
inc
push
call
lock
stc
sub
pushf
pushf
rep
bswap
pop
pusha
mov
pushf
push
lea
jmp
push
call
dec
push
call
mov
movw
lea
jae
pushf
mov
lea
jmp
push
call
push
dec
xchg
pushl
popl
movb
call
mov
setne
not
movl
movsbl
pop
jmp
mov
push
pushf
movb
pushl
lea
jmp
push
call
pushl
movl
call
push
call
sub
ret
call
xchg
mov
icebp
add
push
imul
jb
add
scas
addr16
add
dec
sub
and
andl
out
loop
jae
jl
inc
dec
insl
nop
push
jle
clc
test
pushf
cld
xor
insb
int3
push
int
xchg
orb
test
push
icebp
xchg
rcrb
sub
movsl
push
mov
mov
insb
sbb
xchg
mov
and
jle
fs
shrl
lea
je
jmp
push
call
sbb
cmp
cli
jmp
mov
mov
push
cmpb
push
mov
pushf
push
lea
jne
rol
not
sbb
dec
xor
rcr
not
xor
daa
mov
and
add
push
push
ror
inc
mov
pushf
pusha
pushl
cmc
test
pushf
call
lea
call
jmp
popf
cpuid
push
call
negb
push
xor
adc
test
lret
out
push
cmp
hlt
mov
cmpsb
ja
inc
sub
jne
inc
int
into
xor
aas
mov
add
sub
call
adc
pop
add
sar
add
mov
dec
cmp
inc
aad
pusha
pop
xor
inc
aaa
mov
pop
fs
stos
aam
push
fiadds
inc
inc
sbb
les
mov
mov
fcomps
dec
inc
rclb
dec
sbb
add
cwtl
adc
mov
stos
and
pop
inc
and
js
dec
cmp
sbb
in
pop
enter
lcall
aam
out
inc
aas
les
dec
addr16
push
dec
cli
xor
rclb
push
or
stos
outsl
cmc
enter
sub
mov
leave
js
xor
add
mov
adc
jg
inc
add
aaa
shlb
lret
das
push
loopne
jg
xchg
mov
add
push
aas
inc
sbb
cmp
movsl
into
js
rorb
push
sarl
xchg
es
push
hlt
repnz
out
mov
test
jle
data16
stc
adc
lds
in
loopne
out
mov
clc
js
gs
mov
pop
loopne
and
pop
ss
lcall
jo
push
lahf
test
and
inc
dec
or
push
pop
and
push
in
and
filds
xchg
mov
ret
ljmp
xchg
ret
mov
aaa
inc
sub
mov
jl
add
movsb
add
add
aaa
push
call
xor
and
xchg
cmpsl
mov
out
push
xor
mov
add
push
ret
out
jne
push
xchg
mov
inc
adc
int3
fwait
dec
add
pop
fbstp
popa
fsts
xchg
leave
arpl
loopne
jp
xchg
mov
shrb
add
sbb
xchg
push
jnp
adc
jae,pt
in
xchg
push
cwtl
mov
sahf
call
mov
outsb
push
dec
jae
mov
mov
test
mov
and
ds
std
cmpsl
or
stos
xchg
dec
call
mov
or
push
call
sbb
and
hlt
pushf
lea
jmp
push
call
shlb
add
mov
mov
sbb
stc
pop
loop
loop
int
rcrl
sub
enter
lahf
adc
push
stos
mov
popf
push
mov
scas
and
int3
or
dec
aaa
sbb
das
inc
pop
push
out
adc
sub
insl
adc
in
sbb
push
dec
pop
and
dec
cmc
mov
lods
scas
sub
js
test
xchg
lds
fsts
andl
jno
in
xchg
insb
cmpsl
push
cltd
jecxz
js
pop
sub
dec
scas
js
xchg
xor
xchg
push
negb
mov
pop
jbe
mov
int
int
adc
pusha
push
jb
mov
mov
rcl
out
and
xchg
push
mov
or
xchg
sub
mov
in
decl
sub
xor
aad
lret
dec
sbb
adc
repz
cmp
inc
stc
xchg
movzbw
shr
push
ror
xor
ror
push
inc
dec
push
pushf
mov
and
add
mov
pushl
mov
stc
sub
lea
mov
mov
pusha
lods
cmc
rol
shl
cmp
sub
rcl
ror
not
shl
or
cmp
xor
pushf
pusha
jmp
push
call
cmpsb
test
push
call
pop
sbb
mov
and
xchg
xlat
sti
xchg
leave
stos
jo
xchg
pop
in
inc
scas
test
lcall
stc
mov
imul
jbe
sub
push
xlat
inc
cmp
fdivl
mov
jl
test
xchg
jb
or
cmp
mov
adcl
inc
mov
fbld
pop
imul
xlat
test
ds
xchg
iret
pop
and
jl
imul
in
xchg
shll
mov
jp
dec
mov
lods
inc
xchg
sub
jne
negl
testl
mov
and
cmc
std
lret
jae
std
xor
movsb
pop
jmp
pop
sbb
jmp
push
jle
lret
test
aad
leave
mov
data16
push
in
inc
ds
sarl
lock
insb
mov
repnz
xchg
sarl
divb
xor
adc
lock
lds
scas
movsl
mov
mov
or
xchg
pop
sub
jo
push
jmp
movsl
push
es
sbb
dec
mov
pop
inc
mov
sbb
sub
sti
inc
mov
sub
add
imul
jge
outsl
loopne
push
push
ljmp
es
and
mov
mov
inc
ds
andl
shl
stc
rcr
mov
btc
bt
shr
not
add
stc
mov
cmp
cmp
bt
cmpsb
mov
mov
lea
ja
push
call
mov
mov
movzbw
pusha
lea
call
stc
add
movl
movb
movb
pushf
lea
jmp
lea
jne
rcl
xor
mov
btr
bswap
sub
rcr
cmc
call
in
jle
and
mov
and
push
repz
pop
js
stos
sbb
push
es
sbb
insl
inc
std
jnp
pop
sub
push
std
jp
push
sub
cmp
jae
pop
mov
dec
out
dec
test
mull
jge,pt
lea
mov
int3
mov
loopne
addb
lcall
sti
ss
clc
inc
mov
dec
adc
dec
stos
into
push
je
jmp
in
mov
mov
fildll
ds
jp
pop
or
sbb
cmc
xchg
fisubrl
fmuls
pushf
outsl
popa
mov
rcll
sbb
test
js
dec
js
mov
repnz
jp
mov
xlat
ds
ret
mov
imul
scas
jp
incb
mov
ljmp
stc
dec
insb
fisubs
mov
stc
ja
shlb
mov
rclb
jno
icebp
mov
mov
push
ret
stos
lods
mov
lret
sub
jl
xchg
shlb
mov
mov
loop
movsl
xchg
jb
cmp
cmc
mov
ds
xchg
cwtl
push
int3
adc
imull
add
push
sahf
pop
mov
fisttpl
mov
mov
mov
imul
les
inc
ds
or
xlat
ljmp
shll
fdivl
mov
sub
in
iret
mov
dec
jmp
lock
int
adc
push
mov
pop
xlat
xchg
jb
dec
orb
cmpb
xchg
int3
jbe
ds
dec
adc
cmc
call
push
call
add
fildll
add
mov
shrl
add
add
push
call
jo
mov
mov
cwtl
cmp
push
and
push
mov
ret
adc
xor
test
ds
fbld
movsl
xlat
push
jge
fdivr
outsb
push
jp
daa
out
imul
fwait
sub
or
les
imul
push
or
rolb
lret
xchg
dec
testl
cmp
scas
insb
push
daa
test
fwait
pop
inc
mov
pop
push
adc
xchg
stos
dec
movl
cmpsb
in
push
and
push
or
dec
or
imul
enter
mov
pusha
not
cmp
bt
movl
xor
clc
pushf
shr
mov
pushf
jmp
push
call
cld
push
test
pushf
mov
xchg
lret
xchg
mulb
daa
mov
adc
adc
xchg
fwait
lock
lret
scas
andl
mov
xor
and
jb
popa
test
sbb
fiadds
enter
call
lea
call
jmp
adc
push
jnp
inc
xlat
and
jnp
inc
sub
incl
mov
fsubr
mov
pmaxsw
xor
in
jle
jb
push
int3
hlt
cmp
xchg
add
jb
movsl
stc
cmp
lcall
out
pop
rcrl
addb
fstps
imul
mov
jo
test
pop
mov
icebp
pop
adcl
mov
stc
xchg
and
adc
ljmp
leave
das
mov
scas
loop
imul
fcoml
mov
sub
mov
inc
int
fisubl
push
lcall
lea
push
pop
paddb
nop
or
jno
ficompl
mov
inc
and
xchg
outsl
mov
aaa
inc
push
xor
movsl
push
push
mov
shlb
mov
dec
mov
popa
push
in
leave
loope
jp
clc
or
xchg
or
pop
sub
ret
push
xor
mov
dec
and
outsl
jecxz
out
xchg
ret
inc
ds
adc
pop
push
mov
ror
dec
xchg
fs
dec
adc
daa
insl
sbb
icebp
js
push
js
jg
std
adc
mov
or
das
aad
jecxz
mov
mov
mov
pop
fildll
jns
test
jno
out
cmove
clc
out
add
push
mov
rcrb
lret
mov
jns
movsl
repz
pop
scas
add
mov
lahf
xor
cmpsb
scas
js
enter
push
adc
outsl
jmp
push
inc
ds
outsb
lds
aam
mov
aam
cmp
jns
popf
enter
aad
fistps
mov
js
inc
and
jg
jae
aad
mov
xorb
stos
dec
sub
int
dec
jge
sbb
int
loopne
jmp
jge
pop
jmp
test
movsl
xor
ja
insb
inc
or
xorl
and
xor
insb
pop
sub
inc
loop
out
int3
mov
stos
iret
test
inc
ds
cld
cmc
jp
rorl
nop
pop
cmp
jmp
rcll
and
fsubs
mov
das
mov
les
sahf
bound
pop
xchg
adc
out
and
dec
xchg
loope
cli
idivl
cwtl
xor
loope
jo
cmp
lods
bound
pop
ret
mov
test
adc
push
loopne
stos
pop
xchg
lods
jbe
xchg
in
mov
sbb
inc
and
jae
pop
out
pop
xchg
fsub
add
stos
adc
push
and
das
dec
sub
push
add
dec
ret
sbb
push
call
stc
cmp
test
push
jmp
bt
shld
bt
mov
cmc
shld
rcl
xchg
mov
setle
pushf
bt
sub
mov
test
sub
jmp
mov
dec
mov
mov
and
test
fsubl
sub
ja
dec
or
test
push
faddp
cmpsb
rolb
lret
loope
xchg
pop
fstpl
inc
xchg
push
rcr
jns
fwait
push
enter
ret
mov
mov
jg
or
mov
xchg
sbb
sbb
dec
inc
fisubl
cmp
pop
loope
jmp
les
faddl
inc
les
dec
leave
push
call
aaa
mov
jle
pop
cmpsl
add
shll
out
sub
pop
dec
test
xor
add
pop
sbb
xchg
cmc
jbe
sub
inc
mov
ret
push
aaa
xchg
mov
fcmovnbe
jmp
mov
sbb
add
insl
mov
push
lret
mov
dec
int
cmpps
xchg
pop
lods
aas
popa
stos
stos
fmul
push
test
ss
add
iret
aas
inc
icebp
ret
iret
loopne
outsl
add
push
jnp
outsl
loope
out
iret
or
arpl
pop
jl
jge
rol
push
dec
sbb
cli
mov
repz
ret
and
cmc
jo
sbb
lret
jo
outsb
mov
loopne
xchg
aam
jo
movsl
scas
jb
jbe
ljmp
frstor
pop
xlat
xchg
push
gs
inc
test
je
push
xor
pop
push
out
xchg
mov
mov
jmp
jb
jo
jmp
sub
mov
cmp
mov
repz
ja
sub
aad
jae
inc
int
roll
fisubrs
ds
push
push
call
jg
clc
pushf
pusha
jmp
and
scas
addr16
add
xchg
mov
inc
push
mov
dec
push
inc
ds
mov
test
jge,pn
xor
jle
cld
mov
adc
sub
jp
mov
popw
fcmovnbe
xchg
lcall
fs
and
xchg
xorl
add
je
xchg
adc
into
dec
out
data16
sbb
add
call
lock
and
mov
imul
daa
data16
sbb
inc
ds
ffreep
inc
and
das
pushl
popl
pushl
mov
movw
pushl
ret
mov
push
mov
push
pushl
ret
pop
aam
jne
sahf
cld
mov
orl
gs
jnp
push
fwait
cli
ja
or
cmp
ljmp
addr16
cmp
loope
popl
je
xchg
sti
adc
cwtl
out
in
sbbb
dec
xchg
imul
fistps
jns
jb
outsl
test
aad
in
pop
mov
stc
or
lcall
adc
fadds
ret
test
jno
into
scas
je
xchg
dec
xor
fwait
dec
and
pop
das
push
pop
dec
sub
into
insl
lods
adc
mov
mov
inc
jb
loope
cmpsl
arpl
jne
and
out
inc
lret
inc
push
cmpsl
int3
cmc
mov
jmp
dec
mov
pushf
out
fldenv
dec
fidivl
into
daa
mov
add
cmpsb
inc
ret
mov
scas
out
out
cwtl
push
mov
push
dec
push
dec
fldenv
in
and
sar
sbb
clc
clc
pushl
popf
push
push
pushl
pusha
lea
jmp
cmp
imul
das
pop
cwtl
and
das
pushf
pop
aaa
std
inc
aad
mov
and
andl
mov
or
mov
jg
insl
cmp
fstl
movsl
push
int
psrld
and
xor
cltd
adc
sti
pop
pop
scas
jge
jb
mov
sbb
jno
je
jnp
out
bnd
movsl
ficompl
sub
cltd
lret
and
fimull
inc
ds
mov
pop
testb
xchg
repnz
mov
add
cld
lods
and
push
jae
repnz
mov
lcall
in
setae
sub
ss
lret
fiadds
lock
jae
fstpl
xor
fisttpll
mov
pop
les
mov
rolb
pop
xchg
inc
mov
ss
push
sbb
rolb
dec
xor
xchg
push
inc
mov
adc
cli
mov
scas
movsl
inc
repz
jl
lods
idivl
dec
add
xor
add
inc
rcll
push
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
stos
dec
pop
call
sub
pusha
lea
call
jmp
loopne
jno
cmp
adc
push
fisubs
out
mov
xor
imul
jmp
push
movsl
pop
lahf
xchg
int3
sti
push
enter
cwtl
xchg
vmwrite
arpl
insl
test
ret
stos
lahf
dec
test
inc
inc
es
xlat
movsl
inc
pop
jmp
push
sar
stos
mov
flds
or
push
sbb
xor
jmp
xor
addl
sahf
les
out
sahf
pop
xchg
repz
fdivrs
cmp
cmp
jg
lock
sbb
jno
cltd
xchg
cs
and
call
xchg
push
jg
in
xor
shl
notl
sbb
mov
xchg
cmc
ja
add
pop
in
pop
subl
lcall
push
rolb
imul
aaa
adc
imul
ret
popf
inc
enter
mov
or
add
mov
mov
push
out
cmpsb
sub
fistps
clc
inc
ret
out
sti
movl
fcomps
scas
add
in
xchg
test
xchg
out
popf
and
cmc
push
pop
in
bound
orb
es
cltd
mov
repz
dec
das
dec
and
cmp
xor
outsb
leave
inc
aas
aas
idiv
inc
push
call
jnp
sub
ret
addr16
push
les
into
or
sub
pop
sbb
push
or
adc
lock
repz
pop
adc
in
adc
pop
lock
jle
ficoml
inc
lret
aad
ds
popf
fucomi
fcoml
xchg
js
ficoms
push
mov
aad
sbb
test
insl
incl
pop
sbb
sarl
leave
mov
es
mov
incw
pusha
add
adc
fiaddl
cs
je
sub
push
inc
cmp
je
inc
push
jb
roll
cmp
push
pop
push
call
dec
scas
jmp
adc
add
add
mov
add
add
add
add
icebp
adc
add
add
xchg
sbb
add
add
add
and
add
mov
push
add
add
add
mov
add
push
lds
add
add
add
pop
pop
add
add
add
add
add
adc
call
mov
push
add
adc
jno
adc
add
add
xchg
add
scas
add
call
xchg
push
push
call
daa
xchg
add
je
outsb
jne
je
insl
inc
outsl
jne
je
dec
imull
cld
or
movsb
sub
ds
push
arpl
push
mov
frstor
adc
negb
mov
or
ss
xor
aad
test
push
test
inc
mov
or
mov
jb
adc
outsb
inc
cli
in
mov
lret
dec
arpl
or
mov
and
jo
ret
fadds
cmp
aaa
arpl
aas
cmp
bsr
shld
mov
cmc
test
and
call
dec
rcrl
sbb
pop
mov
xchg
filds
pop
add
in
inc
mov
rol
int
or
push
iret
inc
test
enter
inc
aam
orb
cmpsl
mov
push
and
addr16
je
adc
pop
dec
shr
pop
xchg
pop
lea
inc
xchg
or
dec
test
sti
lea
mov
push
lahf
sahf
cmc
and
xchg
jae
adcl
pusha
sbb
adc
ss
pop
loop
xchg
nop
pop
push
lods
stc
mov
pop
cmp
out
test
stos
imulb
inc
aas
cmp
push
call
lea
push
call
cltd
push
call
adc
push
call
sahf
enter
movsl
adc
stos
rclb
stc
mov
pop
in
inc
leave
mov
sti
aaa
xor
adc
repnz
mov
cmp
loopne
cwtl
push
out
mov
adc
push
test
lcall
mov
pop
add
test
mov
add
sub
push
add
clts
cmpsl
pushf
lea
je
sar
mov
shld
ror
add
shl
shld
btc
push
mov
test
test
call
push
call
dec
js
lcall
inc
pushf
shll
push
push
test
inc
mov
cmp
mov
popf
test
outsb
add
push
cltd
mov
push
xchg
cmp
push
aad
enter
push
sub
popa
out
mov
xor
jl,pn
inc
jmp
pop
jo
and
mov
outsl
vcmppd
or
jg
inc
push
xchg
orb
daa
scas
sbb
fnsave
cmp
or
adc
cwtl
scas
mov
inc
aas
cmp
xchg
push
call
cmpsb
cwtl
sub
cmc
add
jmp
pushf
pushf
xchg
lahf
bswap
setb
movl
movzbw
jmp
dec
mov
lea
jne
pusha
lea
jmp
lods
xor
gs
fdivrl
lcall
rclb
pop
pop
test
inc
and
test
out
lret
xchg
cmp
js
mov
rorl
daa
pop
repnz
push
imul
dec
aam
mov
fcomps
hlt
out
mov
pop
sub
fst
rorb
push
mov
xchg
lret
subb
lds
xchg
ja
push
jno
dec
stc
inc
aas
cmp
into
push
lods
adc
add
add
add
add
add
add
add
push
pop
add
add
add
add
push
push
sbb
loopne
daa
sarl
addr16
fiadds
pop
aad
popf
pop
jge
ss
pop
lods
lcall
std
fimull
sub
repz
mov
in
in
cmp
dec
sub
filds
add
push
bound
pushf
repnz
sub
mov
out
mov
xchg
insl
outsb
mov
lahf
dec
jle
fisubrl
push
pop
or
sub
xchg
sbb
push
cmpsl
cmp
sti
adc
imul
sti
sub
fisubs
and
daa
pushf
and
xchg
sti
jl
pop
ss
and
sub
ficompl
mov
shlb
mov
or
push
jp
and
inc
xor
notb
push
or
mov
jbe
jecxz
mov
pop
out
ret
lods
or
fsubp
out
sub
inc
outsl
loop
mov
hlt
xchg
push
xorl
dec
xor
mov
popf
shrb
int3
add
or
imul
mov
dec
cmp
jae
xor
pop
sbb
outsb
and
push
pop
push
test
cmc
mov
sbb
subl
add
fisubs
test
adcb
leave
out
popa
dec
fnstcw
push
adc
into
sbb
push
lock
mov
sahf
stos
mov
jbe
xchg
mov
sub
jmp
into
cltd
add
xchg
and
cmp
sahf
pop
pop
lret
lds
add
cmp
jg
sahf
enter
push
scas
xor
mov
arpl
jle
xchg
add
adc
aad
inc
xchg
add
js
inc
imul
xchg
ret
ret
xchg
adc
cwtl
ds
dec
xchg
add
jno
pusha
dec
fmulp
imul
mov
icebp
push
adc
test
lcall
shlb
aam
mov
dec
dec
sub
xor
mov
pop
cli
test
cmp
out
or
mov
adc
pusha
push
lds
and
mov
cmp
jns
lods
ret
aas
mov
jb
mov
cs
ds
jl
pop
sub
or
fdivs
roll
mov
xchg
xor
dec
sub
add
xchg
lcall
je
sub
test
repnz
in
sahf
pop
sub
out
das
dec
shlb
lret
jmp
std
cmp
decb
sub
jnp
cs
cltd
mov
cmp
xchg
inc
test
sub
stos
jmp
pop
cmpsl
out
movsb
mov
cmp
mov
notl
ret
jl
scas
sbb
xor
mov
ja
shrd
movsl
cmpsl
sub
add
popl
xor
ds
add
insb
push
aaa
sub
add
mov
mov
shrb
push
in
dec
out
dec
cmp
outsl
xchg
inc
push
loop
test
push
lcall
gs
loopne
es
in
les
mov
sbb
sub
cmc
daa
xor
adc
jg
or
inc
lahf
test
cmp
aam
dec
lret
clc
jge
fbstp
int3
cmp
xor
xchg
push
lret
fcoms
fsubrs
push
es
adc
sti
or
cwtl
mov
or
dec
call
xchg
xor
push
add
xor
sbb
sbb
out
xchg
imul
arpl
jno
neg
push
ret
and
std
aam
fs
cmp
or
xor
xchg
add
dec
cwtl
sbb
stc
xchg
repz
push
dec
pushf
cli
mov
out
daa
les
aas
repz
stos
fwait
cmp
pop
pop
enter
stc
dec
aas
cmp
push
mov
xchg
cmc
ss
dec
pop
imul
test
clc
rcrl
fdivl
fldl
sbb
dec
pop
out
dec
dec
dec
and
stc
test
inc
fiadds
cmc
adc
pop
mov
in
xchg
sbb
test
inc
out
jo
adc
ret
addr16
mov
mov
mov
pop
inc
lds
dec
inc
int
pop
aas
stc
test
fstps
cmp
push
sub
sbb
inc
cld
sub
and
dec
lcall
jno
sub
mov
int3
and
sub
insl
jp
sub
jb
jmp
gs
aam
and
and
add
out
daa
cmpsl
or
jg,pt
inc
les
adc
out
dec
ret
dec
cld
cmp
mov
in
push
shll
cs
aam
jae
adc
out
fs
xchg
mov
or
mov
sub
frstor
add
leave
mov
xchg
mov
out
mov
loopne
cs
ja
ret
xchg
jle
pusha
loopne
test
hlt
scas
sub
sub
mov
pop
popf
jnp
mov
aad
cmp
loop
add
pop
pop
sbb
pop
adc
adcl
or
mov
ret
and
pushf
nop
lret
mov
and
xor
inc
or
aas
jecxz
mov
xorb
popf
sub
in
push
shrl
bound
xchg
lods
push
cmp
push
xor
and
gs
lahf
push
daa
inc
and
add
inc
add
bound
cmp
dec
jno
pop
inc
mov
lock
negl
add
xchg
xchg
sbb
xchg
push
mov
add
fsubrl
jo
int
hlt
add
xchg
jno
jns
xor
into
fs
fistl
or
sti
jnp
push
dec
mov
jne
cli
rcl
pop
xlat
das
cmp
xor
jo
add
cwtl
and
fcoml
addr16
ss
inc
stos
outsl
pop
fisttps
fstl
fiaddl
jp
add
inc
push
mov
jle
xor
push
fwait
jp
adc
cmp
rep
pushf
xchg
out
lods
es
cltd
arpl
movsl
jb
aam
jg
jns
pusha
jae
push
add
xor
movsl
movsl
xchg
push
stc
push
inc
mov
jno
add
cmpsl
sub
nop
lods
mov
xor
cli
push
popf
out
mov
dec
lock
cmpsl
fsubrl
out
xor
xor
daa
ss
jo
xchg
pop
mov
into
loop
fisubs
and
xchg
test
dec
add
xchg
mov
jbe
cs
push
pusha
mov
dec
testb
outsl
mov
jno
aam
sahf
cmp
into
xchg
addl
mov
iret
and
pop
or
pop
push
push
xchg
push
cwtl
lock
test
xor
das
push
push
faddl
movsb
iret
in
std
jmp
fistpl
cmp
add
shll
sahf
push
test
ret
mov
out
mov
mov
pop
xor
mov
cld
loope
mov
cltd
xchg
xchg
mov
lret
ret
andb
out
and
inc
inc
adc
inc
cltd
in
lret
rorb
int
jl
ds
cmp
mov
mov
xchg
inc
push
xchg
lods
scas
rcl
dec
cld
mov
mov
mov
or
jnp
pop
lods
add
pop
sarb
mov
leave
ret
popa
or
scas
test
mov
into
mov
jb
inc
adc
orb
pop
loope
inc
xchg
mov
sbb
dec
in
leave
es
or
inc
bound
arpl
shrl
subl
inc
stos
outsb
jo
fwait
push
mov
addb
icebp
mov
mov
inc
xchg
stc
call
cmp
mov
pop
popf
mov
dec
testl
jns
cmp
movsb
mull
movsl
movb
mov
sbb
stos
inc
ret
inc
push
xor
and
mov
std
leave
rcrl
push
xchg
dec
jbe
add
xchg
in
mov
push
cmp
mov
rorb
outsl
adc
push
jge
js
xchg
adc
lock
push
inc
push
pop
fildl
rclb
inc
push
test
xchg
xchg
andl
dec
xor
dec
mov
fdivrs
sbb
cwtl
xor
pushf
int
rcll
push
testl
pop
ret
subl
push
sub
sbb
mov
mov
orb
shll
jmp
add
or
or
decl
xor
movsb
nop
dec
call
cmpsb
out
and
icebp
lret
ja
add
add
cld
sarl
sub
mov
fwait
sbb
ss
mov
inc
stos
loopne
popf
jg
sbb
or
shrl
mov
filds
pushf
pop
inc
xor
or
ja
hlt
lods
dec
dec
inc
bound
jns
bound
lcall
je
add
sub
in
popa
jns
dec
push
testb
in
scas
xchg
push
xor
aad
sub
imul
xchg
int3
mov
loop
sub
inc
push
ror
movsb
jbe
sbb
int
shlb
push
cs
push
mov
mov
mov
pusha
lahf
pushf
xchg
ljmp
sub
xchg
sub
or
out
lea
js
ret
xchg
test
das
lret
xchg
pop
das
lock
js
aam
das
std
adc
addr16
mov
pop
xchg
pop
lods
inc
or
fs
iret
dec
arpl
inc
clc
mov
mov
jg
cmpsl
cmp
mov
xlat
mov
cmp
leave
pop
push
test
leave
cmpsl
xlat
pop
mov
cmp
std
mov
call
test
and
daa
mov
cld
lahf
std
xor
std
sub
out
pop
js
out
iret
or
and
mov
pop
out
jecxz
aad
dec
dec
rcll
xchg
popf
pop
stc
ret
popa
icebp
push
inc
xor
cmp
in
pop
mov
fldenv
jbe
and
jecxz
cmpl
iret
stc
insb
push
jns
icebp
and
xor
mov
out
aad
test
and
fs
mov
loope
pop
call
nop
movsl
mov
in
jmp
push
xchg
notb
sub
test
scas
mov
ja
hlt
sbb
stos
mov
ljmp
sub
dec
xlat
enter
insb
dec
out
adc
pusha
and
or
mov
push
and
aam
enter
cmp
push
lret
xor
repz
lods
mov
adc
rorl
cmp
mov
call
ret
aaa
pop
pop
mov
jno
cmp
shlb
pop
xchg
sahf
sti
pop
push
lea
jo
lods
out
jmp
inc
add
js
or
jmp
aaa
movsw
ds
in
ret
insl
add
sub
jle
shrl
addb
fldenv
out
out
push
mov
pop
push
adc
push
stos
cli
sahf
ret
scas
or
in
xchg
iret
test
sahf
mov
push
add
lods
push
jecxz
movsl
jno
leave
movsl
andl
mov
imul
fs
jnp
cmp
sti
xchg
sahf
dec
push
sar
popa
je
jnp
leave
lods
shrb
in
into
xchg
out
inc
aas
sub
add
sahf
add
pop
bound
test
pushf
add
jns
sbb
add
jg
add
push
call
enter
int3
push
call
out
imul
cli
lcall
leave
mov
and
adc
iret
mov
pop
xor
sbb
mov
jle
pop
xor
jnp
mov
mov
inc
in
mov
cmc
inc
icebp
push
cmc
xchg
outsl
cmpsl
shlb
mov
adc
adc
cmp
sarl
test
lret
mov
xor
test
push
xlat
test
jb
jnp
pop
or
push
sub
cmpsl
sbb
hlt
scas
lock
imul
lret
jne
fcomps
out
test
out
and
push
xor
inc
imul
cmpsl
mov
sbb
lock
inc
loopne
scas
sub
cmp
jno
mov
mov
and
dec
testl
in
push
cmpsl
and
mov
xchg
mov
fistl
outsl
xchg
lds
push
test
inc
and
js
inc
push
adc
aas
sub
xchg
push
call
stc
pushf
movb
lods
clc
stc
stc
rol
call
adc
jp
repnz
sub
jnp
fwait
leave
adc
push
sub
andl
jnp
inc
out
jbe
add
imul
in
subb
inc
xor
push
mov
mov
ja
outsb
mov
xchg
fldl
sbb
or
cmp
sub
mov
jae
rorb
icebp
repz
or
sub
fsts
or
sbb
push
fistps
adc
dec
mov
inc
cs
xchg
sub
mov
lahf
sti
es
sbb
aaa
loope
jle
cmp
mov
sti
dec
into
lods
rorl
std
dec
jb
mov
es
mov
ds
sbb
cld
leave
clc
mov
ret
inc
jns
mov
test
mov
popf
gs
jo
in
cmpsl
imul
das
test
inc
aas
sub
sub
xchg
pop
mov
sub
subl
xchg
and
and
cmc
lcall
cmp
cld
jae
mov
inc
dec
push
mov
cmc
aam
in
push
fists
dec
push
xlat
push
repz
int
es
gs
cmp
sub
fs
mov
mov
mov
stos
daa
or
movsb
imul
fldl
xor
jle
js
xchg
inc
aas
sub
out
pop
data16
inc
cmp
inc
adc
pusha
mov
mov
adc
mov
push
and
es
mov
xor
pop
out
jns
sti
test
rolb
add
cwtl
inc
mov
sub
xlat
mov
mov
xlat
sub
aaa
adc
push
cmpsl
std
and
jecxz
aas
sub
mov
mov
negl
decl
inc
and
add
rorl
mov
sbb
jg
mov
loop
loope
push
cltd
dec
test
test
outsb
ds
or
sub
fs
je
call
jmp
and
sbb
pop
add
imul
lods
adc
xchg
scas
and
fwait
mov
mov
gs
ror
imul
push
sarb
and
outsb
es
xchg
loopne
and
adc
cmp
imul
or
out
inc
mov
repnz
test
bswap
iret
popf
leave
cmp
push
lods
xchg
pop
inc
adc
xor
outsl
mov
mov
mov
jne
shl
ret
xor
cmpsb
jecxz
mov
and
pop
cmp
or
push
das
inc
adc
sub
sub
lods
mov
pushf
movl
movl
call
int3
jae
leave
jne
inc
fldl
fdivl
dec
enter
call
test
test
mov
pop
jg
rclb
add
lcall
pop
and
test
inc
xchg
lds
popf
fidivs
or
in
pop
xor
ficomps
mov
mov
jl
icebp
mov
or
cmpsb
push
inc
dec
jle
inc
mov
idivb
add
sbb
pop
sbb
sub
inc
aas
es
in
add
sub
sbb
or
js
test
sbb
dec
pop
lahf
outsl
in
mov
jbe
adc
add
or
rcl
jmp
push
lcall
out
and
fs
cmp
andl
jb
mov
or
sub
and
negb
rcrb
and
scas
aam
or
add
pop
xchg
inc
aas
es
inc
ficompl
sti
cmp
jbe
out
inc
adc
xchg
lock
mov
test
fwait
ret
inc
lods
adc
adc
stc
dec
out
hlt
mov
pop
shll
fs
repz
out
mov
daa
flds
push
lret
orl
adc
lcall
xor
outsb
cmp
repnz
mov
sbb
fdiv
rolb
xchg
dec
push
loop
mov
sbb
loop
mov
jbe
push
add
lods
movsl
std
inc
js
inc
insb
fadd
ja
cmp
push
push
jecxz
cmp
xchg
sub
cli
or
push
hlt
sbb
cli
je
push
js
mov
add
je
xor
testl
adc
cli
cli
mov
ljmp
stos
cmp
add
enter
movsb
sbb
mov
in
cmp
pop
jns
push
cltd
out
subb
into
mov
mov
cmp
sub
lcall
sbb
dec
mov
mov
and
cwtl
test
jbe
sti
js
mov
fs
aaa
cmp
sub
xor
push
into
pop
enter
add
sbb
push
in
mov
adc
xor
sti
mov
pop
out
cmp
or
mov
cli
mov
xor
jne
filds
and
add
fists
imul
dec
pushf
mov
into
mov
pop
fsubl
stc
in
lcall
shll
sub
insb
ss
adc
nop
add
mov
addr16
cs
mov
rclb
inc
gs
test
jo
dec
aam
test
mov
add
adc
cmpsb
in
xchg
daa
and
stos
data16
sub
cmp
push
jns
push
aad
imulb
inc
dec
cld
push
call
test
popa
push
call
mov
call
leave
xor
bound
sub
pop
adc
addr16
cwtl
adc
inc
sub
push
sbb
cld
xlat
dec
test
push
in
fisubrs
pop
test
cltd
pop
lock
add
xchg
xchg
iret
add
jecxz
enter
addb
mov
loopne
lock
adc
lret
mov
jge
dec
sbb
rcrl
push
jne
dec
and
dec
jmp
mov
xorl
fimull
or
pop
sub
addl
pop
add
jb
jne
jb
push
popa
insb
jne
inc
add
push
push
imul
sbb
adc
mov
sub
and
jo
push
push
dec
dec
dec
adc
mov
xchg
lods
sti
add
test
pop
mov
lds
popf
outsl
sbb
hlt
xchg
iret
lods
lret
mov
pushf
mov
mov
clc
scas
and
rolb
aas
and
jmp
push
call
inc
pop
dec
jmp
shlb
stos
rcrl
ds
stc
mov
push
adc
iret
sti
mov
iret
xchg
in
mov
rcl
xchg
sub
ret
push
inc
leave
jns
ja
mov
push
mov
je
adc
adc
xchg
mov
dec
aas
sbb
stc
adc
jmp
add
in
pop
orb
xor
xchg
push
and
int
jecxz
shll
call
push
push
push
inc
aas
and
pushl
in
jo
aas
fwait
movsb
sarb
adc
push
push
adc
test
repz
bound
mov
fcompl
aam
int3
ret
or
bound
mov
pop
lods
sub
and
mov
mov
mov
lret
popf
les
sti
mov
mov
aas
and
push
call
insl
jmp
xchg
adc
jle
arpl
ljmp
xor
pusha
mov
testb
mov
adc
adc
or
aam
sbb
pop
adc
pop
cmp
push
xor
jo
sbb
repnz
cmp
js
outsb
mov
inc
lret
movsb
into
shll
mov
jl
dec
repz
xor
dec
push
mov
and
pop
cltd
mov
lods
jle
jl
pop
cmp
pop
and
inc
aas
and
rep
push
call
popf
jmp
xor
lea
je
test
mov
sub
add
sub
and
sar
sar
xor
shr
push
shrd
mov
movzbw
bsf
add
btc
add
add
sar
shl
shrd
clc
mov
cmc
bt
shr
test
call
inc
shlb
pushf
in
outsb
sbb
dec
das
jno
inc
adc
out
in
movsl
imul
mov
cmp
pushf
sub
push
push
insl
shll
mov
push
fisttpl
ret
xchg
jb
pop
cmp
xlat
test
mov
push
inc
aas
and
call
mov
fnstcw
aaa
push
mov
cmp
push
sarb
jecxz
rcr
leave
jno
cmp
hlt
or
inc
xchg
pop
cmp
xchg
xchg
leave
test
nop
and
and
push
movsl
jmp
lret
dec
movl
gs
inc
ret
xchg
pop
cmp
mov
popa
xchg
sub
lret
and
and
mov
cld
adc
ret
inc
fstpt
js
pop
loope
call
mov
cmpsb
cmpsl
adc
jg
rorb
pop
dec
add
ja
aam
fcmovnbe
ds
jnp
rcr
test
in
mov
push
daa
sub
pop
aad
inc
fwait
testb
xor
jae
in
hlt
mov
xor
mov
call
dec
sbbl
push
add
insl
jnp
xchg
and
insb
push
call
cmc
sbb
xchg
mov
push
xchg
mov
xor
add
out
mov
loope
aas
sub
pop
call
sub
jno
xorl
xchg
sub
pusha
or
je
inc
lds
add
adc
ficompl
and
xor
jno
sbb
in
outsb
mov
jge
adc
cmp
xchg
cmp
pop
subb
jb
test
lahf
sbb
out
xchg
push
fs
cltd
repz
xchg
int
movb
push
fiadds
sbb
inc
adc
mov
mov
lret
leave
shlb
mov
roll
xchg
cmpsl
pusha
pop
aas
fwait
push
jmp
xchg
jnp
std
icebp
fld
std
mov
lcall
jl
dec
test
xor
movsl
rolb
mov
jno
shl
stos
mov
js
inc
dec
scas
and
jp
jo
inc
aas
push
repz
movl
movzbw
pushf
push
movzbw
lea
pusha
movl
pushl
pushf
pushf
pushl
popl
push
push
pushl
ret
enter
scas
dec
jns
fadd
addr16
push
and
dec
xor
inc
mov
pop
in
sbb
sub
fsubs
adc
push
push
xchg
pusha
fidivrs
lods
dec
clc
push
pop
jge
paddb
je
cmp
push
sbb
xlat
adc
sti
cmp
fs
add
fwait
and
mov
push
cld
cwtl
jno
in
pop
or
cmp
xlat
mulb
cltd
pop
ja
test
insl
and
sub
push
es
or
push
inc
aas
pop
sti
bnd
add
jge
add
testb
test
jle
fists
insl
pop
lock
push
jne
pop
xchg
shll
int
push
add
mov
cmp
out
mov
push
pop
pop
jp
ficomps
aam
fistpll
cmp
ret
loop
dec
xchg
repz
test
arpl
and
loop
pop
lahf
in
mov
dec
sub
lahf
mov
out
or
or
das
dec
or
pop
add
aas
sbb
xchg
sbb
test
jge
add
aas
push
lea
ja
pusha
stc
pushf
jmp
push
call
sarb
jmp
fisttpl
outsl
scas
and
lock
inc
adc
push
jb
js
pop
xor
fnsave
push
into
add
add
stos
mov
cmp
divb
ljmp
std
popf
sub
add
addl
repnz
xchg
add
test
test
les
leave
cld
mov
cld
jg
aaa
fidivrs
mov
ss
pop
jle
xor
in
push
mov
iret
sub
aaa
mov
in
mov
inc
aas
sbb
jge
push
call
cld
cmc
push
call
mov
cmp
dec
fdivr
dec
mov
pushf
leave
xchg
loop
lahf
jge
mov
in
jle
and
pop
fcompl
fldt
inc
inc
iret
dec
pop
shr
xlat
jge
pop
sahf
sahf
sbb
shl
sub
sub
insb
sub
loopne
pop
mov
xchg
movsb
outsl
jmp
es
or
inc
aam
fimuls
and
mov
or
nop
sub
xor
sub
pop
sub
pop
add
jnp
inc
aas
sbb
add
jle
add
and
out
add
push
mov
pusha
lea
call
jmp
push
mov
lea
ja
bt
sar
cmp
shr
add
xor
shld
cmp
shr
neg
mov
rol
add
bsf
add
stc
rol
rol
mov
push
cmpsb
call
movsbl
cmp
xor
aad
mov
in
mov
hlt
add
mov
mov
gs
leave
arpl
dec
pop
out
jp
sbb
mov
xor
sahf
pop
xor
je
mov
mov
and
xor
inc
hlt
sahf
ljmp
test
xchg
fidivs
push
push
aas
dec
test
shl
jne
in
cmp
inc
sbb
inc
or
pop
and
inc
aas
sbb
mov
scas
movd
pop
mov
arpl
scas
sub
int3
jle
add
in
mov
mov
outsl
sub
mull
push
shlb
mov
aaa
mov
fists
or
jl
sahf
ljmp
shrb
lds
scas
jae
mov
bswap
cli
fistpll
mov
pusha
lds
call
mov
lcall
push
bound
popl
mov
lahf
daa
loope
push
cli
std
push
and
ss
mov
cmp
cwtl
iret
xchg
decl
pop
inc
aas
sbb
leave
jmp
push
call
mov
mov
and
add
stos
or
call
cmpsb
dec
push
call
ret
lea
jne
bswap
call
push
call
rcll
pusha
sar
ljmp
stos
jns
add
movb
lea
je
adc
shld
push
call
add
inc
jb
popa
je
push
outsl
insb
imul
pop
call
or
jae
dec
and
jbe
xchg
ret
daa
lret
or
rorl
jle
mov
adc
ret
in
mov
adc
popf
mov
cmpsl
pusha
and
sbbb
iretw
inc
add
not
mov
ficoms
jge
xor
pop
arpl
jge
sbb
icebp
repnz
pushf
scas
jge
fisubrl
aam
sub
sub
rcrl
aas
sbb
es
shll
test
mov
push
and
inc
and
fdivs
addr16
pop
jecxz
inc
imul
or
lahf
lods
cwtl
stos
xchg
andb
lock
fcoms
xor
pusha
mov
xchg
sbb
pop
addl
mov
out
xchg
les
push
iret
inc
aas
sbb
scas
xchg
push
add
mov
ficoms
add
nop
add
jae
add
cmpsb
hlt
pop
mov
scas
push
popf
pushf
xchg
ret
mov
lods
mov
test
add
fists
push
mov
test
popa
jnp
adc
ficomps
aad
mov
sub
leave
and
sub
pop
lcall
pushf
cld
jne
stos
outsl
sub
js
js
jmp
adc
js
sub
sahf
aaa
sti
jns
xor
mov
sbb
push
dec
ds
lock
jge
mov
add
aad
test
data16
dec
sub
dec
xor
mov
sbb
test
stos
push
add
cmp
push
loopne
lahf
xor
rcrb
jmp
xor
push
lcall
mov
ffreep
add
dec
add
sahf
mov
mov
repz
out
jno
and
lcall
push
insl
xor
dec
push
scas
pop
pop
loopne
sub
and
mov
int
call
cmp
jae
push
lcall
outsl
aam
pop
outsl
jne
mov
jb
or
aas
int3
sub
sub
dec
adc
dec
sbb
jp
dec
roll
aas
push
fiaddl
jge
call
and
pop
adc
jmp
push
jb
mov
inc
sbb
aaa
inc
rcrb
scas
mov
cmp
cmp
popa
and
and
mov
rorb
aas
jnp
subl
loop
mov
je
mov
pusha
push
fcom
icebp
js
cmp
or
hlt
inc
jae
in
ror
pop
hlt
pop
rcll
xchg
push
loopne
roll
mov
cmp
sbb
fwait
idivl
cmp
popa
lods
mov
loopne
mov
mov
test
cmpsb
testb
aas
push
sbb
stc
cmp
call
push
call
fldcw
cmp
stos
jne
call
jbe
push
call
inc
xchg
push
call
es
stos
sbb
xor
push
pop
shll
ja
push
xor
push
or
call
lret
imul
out
loop
mov
sub
clc
addr16
sub
add
adc
push
mov
cmp
fildll
jl
out
movsl
testb
lcall
testl
int3
xor
xor
lock
mov
xchg
jmp
xchg
mov
scas
and
lea
pop
push
or
add
nop
dec
add
inc
dec
add
sub
sbb
add
add
stos
pop
pushf
call
mov
out
mov
fistpll
in
arpl
scas
movsl
ds
incb
cs
mov
ss
mov
pop
sub
int
sub
ficoml
add
addr16
xor
sti
and
or
outsb
pop
test
dec
or
int3
jnp
and
lret
test
pop
jp
pop
or
testl
bnd
leave
je
mov
dec
out
shlb
mov
sub
mov
xor
adc
jb
mov
lahf
std
adc
in
add
in
dec
mov
leave
xorl
xchg
jmp
xchg
or
sub
scas
rcrb
push
mov
adc
out
lods
int3
push
mov
imul
inc
clc
sub
jo
movsb
mov
and
imul
jg
bound
pop
or
mov
aas
adc
pop
sti
lea
je
pusha
lea
jmp
bts
test
mov
bt
call
xchg
xchg
call
clc
pusha
clc
xchg
dec
adc
add
stc
lea
pusha
cmp
bt
jmp
jp
bt
clc
stc
add
pusha
jmp
push
call
sbb
repnz
rcrb
bswap
jmp
push
call
adc
push
xchg
rcr
imul
xlat
gs
fisttpl
lret
add
aad
es
mov
jmp
gs
cltd
xor
fcmovnb
negl
mov
lock
inc
mov
lahf
pop
adc
and
scas
jo
mov
sbb
dec
adc
fildll
inc
push
lcall
cmp
pop
xor
insb
push
jg
pop
sub
inc
aas
adc
cmpsb
les
cltd
imull
out
mov
test
and
mov
mov
inc
hlt
sbb
or
flds
dec
push
bound
and
sub
mov
pop
sahf
cmp
push
divb
add
cld
test
mov
mov
jnp
jbe
push
out
loopne
and
jnp
jbe
dec
cs
jnp
popa
add
mov
jb
cli
and
rorb
dec
add
gs
arpl
imul
add
mov
rorl
data16
pop
jge
push
xchg
out
mov
xchg
cltd
sbb
or
mov
mov
mov
lcall
les
jge
subb
xchg
decl
inc
aas
adc
lds
repz
rcll
popa
sbb
cs
fdivl
xor
repz
jp
mov
in
adc
into
and
mov
ret
lahf
xchg
lahf
push
imul
neg
cmp
cld
mov
adc
jle
outsl
sbb
lahf
test
repnz
inc
outsl
cmc
rorb
push
inc
cmp
cmp
sahf
fldl
arpl
pop
and
shlb
daa
pop
leave
cmp
mov
or
insl
flds
adc
and
pushf
lea
jne
shr
add
sbb
and
mov
shld
rcr
xor
bsr
sub
bts
mov
pushf
sub
pushf
stc
stc
bt
pushl
popl
push
cmp
jmp
lock
add
daa
fsts
push
and
js
insb
cmp
rcrb
aaa
pop
popf
xchg
roll
aas
fbstp
insb
and
mov
cs
dec
js
or
and
sarl
mov
outsb
add
jnp
js
js
adc
sbb
push
pusha
pusha
jl
cmc
xchg
jge
loop
mov
or
adc
loope
inc
testb
mov
jl
xchg
lds
testl
lock
pop
loop
loop
aam
ret
je
dec
iret
xchg
pop
rolb
dec
ret
sbb
xchg
mov
mov
aad
and
aad
adc
mov
stos
testl
add
es
add
cmp
stos
into
mov
pushf
push
js
pop
adc
dec
popl
adc
mov
jp
test
add
pushf
jmp
bswap
pop
movsbw
pop
mov
pop
pushf
bswap
push
mov
push
pushf
pushl
ret
movw
call
push
call
cmpsl
nop
dec
jno
add
imul
clc
subl
addr16
fistpll
lds
lcall
lcall
xchg
push
or
int
addr16
push
insl
inc
pop
mov
and
jle
fs
push
push
adcl
in
js
outsl
push
nop
inc
std
orb
pop
mov
cs
pushf
sbb
cmp
jmp
out
out
test
mov
mov
inc
aas
adc
cmc
outsb
push
call
pop
pusha
pusha
mov
movb
push
movw
push
pushl
ret
arpl
fs
xor
cs
insb
add
sti
cld
cmp
inc
or
data16
jl
pop
cs
out
das
lahf
mov
mov
mov
ficoml
xor
inc
pop
fsts
lods
insl
lret
nop
insb
jge
test
hlt
dec
and
int
aam
push
xor
testb
xor
mov
loope
add
mov
or
mov
ja
xchg
lock
leave
inc
iret
mov
aam
ret
xchg
repnz
push
pushf
xchg
aaa
xor
jbe
add
ljmp
push
or
scas
and
pop
mov
sti
add
mov
ja
add
mov
lds
cmp
mov
outsl
pop
xor
movsb
xchg
pop
gs
inc
aas
xor
inc
inc
pop
je
mov
or
loop
repnz
rcrb
inc
aas
push
lds
add
arpl
filds
or
call
jne
xchg
repz
movsl
mov
push
subl
xor
inc
inc
jns
dec
jne
insl
adc
mov
jns
outsb
repnz
sbb
dec
xor
inc
mov
pop
aas
pop
mov
roll
ljmp
jno
push
xlat
cmc
sub
or
rcl
jae
or
jge
jge
dec
xchg
leave
stc
sub
xlat
jno
sbb
jp
jnp
push
inc
aas
mov
clc
cmpsb
icebp
cmp
lods
xchg
das
mov
notb
aam
xchg
mov
jmp
jp
xor
hlt
lcall
pop
dec
xlat
or
filds
push
push
or
iret
mov
adc
xchg
lret
lods
add
push
scas
xor
push
mov
gs
mov
cmp
push
or
cmp
repz
jmp
mov
cld
add
aaa
dec
mov
int
jno
cwtl
sub
scas
mov
add
inc
shrl
xor
xchg
mov
fisubrs
pop
inc
aas
jbe
sbb
cmp
icebp
mov
sub
addr16
push
or
sahf
lds
lahf
fistpl
mov
ret
daa
mov
jbe
outsb
ljmp
out
cmp
mov
test
mov
inc
mov
and
call
mov
stos
into
bound
fildll
fneni(8087
pop
lea
in
add
inc
sbb
or
cmpsb
pop
fmull
adc
lock
into
mov
or
xchg
fs
pusha
movw
cmp
pushl
push
mov
movl
lea
ja
inc
mov
push
inc
pusha
jmp
ss
cli
das
xchg
stc
push
jns
cmc
xchg
out
call
dec
das
push
pop
into
mov
in
jmp
test
outsb
sbb
xchg
bound
pop
pop
cmp
scas
cmp
xor
add
xor
pop
loope
shl
jo
lock
mov
push
adc
call
ret
sub
cs
test
cs
mov
loop
sti
cltd
in
shll
inc
aas
or
rolb
outsb
nop
in
loop
cmp
inc
sub
aas
mov
push
add
push
in
testb
hlt
andl
clc
shr
jle
mov
mov
inc
nop
out
icebp
out
aaa
stos
dec
push
cs
mov
sbb
movsl
int
xchg
inc
aaa
out
popa
daa
push
lret
sbb
int
repnz
sub
jno
fcoms
xchg
jmp
push
add
rolb
cmp
or
and
jl
lods
jle
add
js
aaa
leave
add
and
mov
push
push
push
fldcw
xor
insb
in
lds
mov
lahf
rorb
dec
and
or
imul
movsb
mov
cmp
inc
out
mov
imul
paddsw
imul
out
lret
rcr
pop
in
mov
cmpsb
cmc
xchg
sbb
or
inc
adc
outsb
inc
aas
or
loope
mov
xchg
dec
mov
test
out
leave
mov
lods
ja,pn
push
sar
lods
sub
sbb
movsl
push
aas
adc
and
cs
pop
cmpl
mov
mov
and
sbb
lock
stc
xchg
in
push
adc
lock
jb
push
sub
aaa
mov
and
dec
add
push
movsl
add
pop
xor
popa
sbb
enter
shll
push
push
shrl
pop
mov
add
inc
push
call
sbb
lock
ret
add
add
cmpb
call
jnp
or
sub
pop
and
mov
lea
xchg
mov
and
dec
jns
cltd
mov
mov
fwait
sbb
adc
lods
fldl
add
pop
mov
mov
xlat
push
or
push
push
xor
test
sub
add
jle
add
jne
add
je
add
lods
movw
lea
jne
pushf
call
jae
shrb
fldenv
int3
adc
andb
sbb
sbb
mov
loopne
xor
ror
ret
dec
pop
movsl
sub
movsl
aaa
mov
andl
dec
jnp
xor
dec
sub
int3
out
notl
jle
testb
lods
cli
frstor
rcrl
std
ds
and
dec
sbb
scas
pushl
mov
add
add
push
call
xchg
fs
jb
test
bt
cmpb
jmp
adc
fcompl
mov
sub
jno
loope
and
sub
or
mov
xchg
lret
mov
scas
cli
imul
jns
lcall
stos
add
adc
push
jno
mov
out
int3
hlt
outsb
aam
testb
iret
shll
dec
das
mov
mov
test
idivb
cmc
and
mov
ret
cmpsb
clc
mov
or
movsb
or
out
cmc
mov
inc
cmpb
mov
xor
fidivrl
jmp
das
jl
pop
rorl
fsubrl
loopne
leave
mov
push
mov
mov
mov
hlt
insb
dec
add
mov
xlat
jmp
hlt
out
stc
cli
mov
fwait
aam
pop
dec
push
sbb
ja
inc
popa
pushf
sub
adc
mov
push
or
adc
inc
and
or
rcrl
bswap
cwtl
lea
mov
movl
call
push
call
and
fs
jne
pusha
jmp
cmp
stc
xor
pop
jb
jno
outsl
add
xchg
enter
pop
out
jo
nop
lods
rolb
push
imul
ss
xchg
mov
pop
mov
in
push
sub
iret
stos
mov
inc
jmp
mov
arpl
pop
in
jg
loop
mov
sbb
enter
test
pop
push
xlat
mov
mov
outsl
dec
dec
insb
mov
mov
xchg
xchg
repz
je
dec
xchg
push
pop
cld
sbb
das
aad
mov
lods
xchg
stc
fmull
xchg
xchg
imul
lahf
fwait
xchg
pop
or
lock
aad
dec
cmp
aad
lcall
sahf
imul
out
adc
gs
mov
imul
repnz
daa
lea
cs
xchg
dec
mov
push
or
mov
cmpps
and
das
fwait
mov
pop
or
pop
test
mov
test
sub
dec
mov
push
push
or
popf
sbb
inc
cwtl
orl
mov
xor
push
xor
mov
lds
or
enter
push
push
add
pop
cmp
lret
or
out
pop
and
and
popf
insb
push
dec
inc
loop
fs
jae
adc
push
sub
sbb
jns
ret
adc
cmp
ja
ficompl
mov
or
push
fnsave
adc
aas
pop
lds
pushf
lea
ja
mov
inc
setge
inc
rcr
add
neg
xchg
btc
mov
shl
and
or
not
mov
bt
call
pushf
pusha
lea
jne
shld
lea
btr
mov
neg
shl
neg
rol
sub
clc
and
xor
mov
cmc
cmp
test
sub
bt
cmc
jmp
push
call
mov
push
mov
lret
les
adc
xorl
call
dec
scas
dec
sub
mov
xchg
mov
insl
test
fcmovnu
pushf
fiadds
cmp
cmp
sar
pop
dec
cltd
pop
cmp
rolb
jns
pushf
loope
frstor
inc
aas
add
fwait
sbb
lds
jecxz
jecxz
imul
mov
mov
fisttpll
repnz
inc
cld
je
sub
pop
xor
scas
rorl
mov
push
shr
dec
add
out
sub
add
lock
movsl
subb
xor
push
addr16
dec
xor
loop
out
and
push
loope
mov
out
dec
int
xor
arpl
imul
add
imul
mov
add
outsb
xor
pop
aas
add
cmpxchg
dec
daa
jbe
outsb
push
jl
loopne
out
dec
xchg
test
xchg
fistl
sub
mov
jo
repz
cmp
inc
cmp
xchg
in
mov
add
pop
shlb
push
lret
imul
add
inc
aas
add
inc
loope
ret
jbe
fdivrl
adc
pop
mov
mov
clc
sbb
mov
and
mov
loop
xor
popa
hlt
mov
mov
push
push
adc
xchg
fs
mov
mov
mov
hlt
roll
mov
mov
sub
shlb
cmp
sub
sbb
inc
aas
add
add
clc
pushf
stc
stc
cmp
call
lahf
add
inc
orb
jmp
xchg
fsubl
int
mov
dec
in
cld
cmp
bound
jns
xchg
outsl
pop
xchg
fucomp
cmpsl
pop
stos
pop
test
leave
nop
fidivrl
cwtl
das
cmp
mov
imul
mov
or
jns
fimull
inc
sahf
sbb
js
int
cmc
hlt
sbb
adc
gs
mov
sub
repnz
subl
lcall
add
inc
sbb
inc
aas
add
pop
mov
fwait
rolb
mov
sub
dec
pop
fs
push
js
pusha
or
js
mov
pop
or
cmp
push
shll
outsb
fsubl
ficomps
enter
les
cmc
mov
fwait
adc
std
pop
scas
lcall
stos
xor
jl
sbb
pop
addr16
aas
add
aaa
jge
xchg
imul
repz
and
mov
add
or
adc
loopne
fsubl
xchg
popf
lods
into
jns
adc
dec
or
je
push
pop
jbe
jg
lret
push
push
lcall
outsb
adc
insl
ror
aad
jns
xor
mov
in
xchg
inc
stos
lcall
test
jnp
fs
mov
icebp
shll
dec
jne
xchg
mov
fidivrl
inc
aas
add
pop
loope
add
data16
je
pushl
mov
push
mov
pusha
mov
pushl
ret
jb
pushf
jmp
cmp
int3
pop
fimuls
lods
loope
push
jg
push
adcb
xchg
ds
fistl
push
mov
movsl
push
pop
sbb
cs
rclb
insl
cltd
mov
and
insb
cmp
popf
aaa
mov
dec
popf
fsts
pop
ficompl
inc
lcall
pop
inc
mov
jb
cmp
pop
pop
add
bound
stc
mov
scas
out
and
lahf
jge
push
or
sahf
in
mov
push
fimuls
out
ss
jbe
fidivrl
cvtdq2ps
ljmp
fldenv
shlb
js
dec
push
dec
xchg
pop
fstl
rclb
xchg
in
stos
hlt
stos
dec
sbb
cmp
cld
dec
stc
inc
pop
pop
mov
cmp
pop
adc
jge
sub
in
imul
xor
push
push
pop
addb
push
add
fdivrs
cmc
inc
cwtl
into
mov
mov
movsl
testl
sar
sub
adc
mov
sbb
not
add
rcr
shl
mov
cmp
stc
test
stc
test
call
in
or
fbstp
mov
pop
daa
pop
cs
adc
inc
and
xlat
popa
lock
std
push
mov
imul
xchg
sbb
cmpsl
mov
fildl
hlt
js
std
sti
out
xor
ja
adcb
push
fstps
pop
inc
gs
cmpsb
cmc
dec
test
and
cmp
test
push
test
sub
jle
pop
aas
push
add
insb
adc
or
lea
jae
call
mov
setl
lea
pushl
pushl
popl
cwtl
mov
pushf
cwtl
jmp
jno
mov
mov
cmp
mov
pop
jmp
dec
push
sahf
lss
pop
pop
add
fsubrs
cmpsl
int
daa
inc
orl
or
jg
notb
dec
dec
cmp
mov
nop
xor
addl
add
xor
in
ret
and
cmp
pop
mov
xchg
push
nop
dec
mov
xchg
les
inc
xor
inc
sbb
inc
aas
add
jns
push
call
popf
mov
dec
call
lock
inc
test
out
mov
sahf
jp
push
or
insl
es
scas
add
js
popa
dec
cmp
leave
sub
xorb
dec
andb
cltd
add
sbb
push
shll
out
fldz
int3
cli
in
daa
idivb
paddsb
inc
mov
ds
sbb
ret
les
mov
sub
inc
adc
cmp
addr16
cmpsb
stc
inc
inc
aas
jle
fcoml
add
pop
add
int3
xchg
call
push
call
ja
cmp
lods
push
pop
add
pop
pop
sub
mov
mov
inc
cmp
add
insb
cld
cmp
dec
xor
outsl
test
fstps
xorb
in
lds
push
mov
je
mov
in
mov
pusha
std
addr16
xchg
insl
lret
pop
sbb
pop
xor
ret
dec
sub
mov
xchg
and
sub
jns
in
cwtl
mov
es
cwtl
fsubrl
jae
lods
lds
aaa
gs
jne
imul
scas
sub
push
pop
add
addr16
inc
fldt
test
or
sti
ljmp
test
bound
hlt
popa
repz
js
adc
into
stc
pop
jmp
hlt
dec
mov
mov
push
jo
jne
push
sbb
ret
dec
xchg
adc
add
lret
mov
ficoml
sahf
fcomps
cld
and
mov
test
outsl
fisubl
dec
cs
mov
xor
fdivr
das
xchg
xchg
scas
mov
push
jl
and
mov
dec
insl
pop
int
xor
adc
in
mov
push
mov
mov
shrb
outsb
adc
shlb
aas
jg
adc
add
outsl
add
fcos
cmp
mov
add
pushf
pusha
lea
jne
cmp
cld
call
xchg
push
xor
dec
jne
jmp
cmc
push
insl
xor
jp
jge
js
stc
pop
out
pop
mov
cltd
inc
sub
sti
fcompl
negl
scas
add
xor
addb
lcall
dec
jmp
insb
jne
sbb
mov
sub
push
sub
ljmp
sarl
push
mov
inc
xchg
xor
lods
inc
test
sbb
jb
jl
scas
std
inc
inc
aas
jl
and
aaa
imul
jmp
push
movsl
adc
cmp
js
and
fmul
inc
cs
ljmp
repz
notl
pop
adc
dec
imull
dec
xor
pop
popf
add
or
push
inc
xor
jb
rcrb
jns
xchg
in
add
or
jmp
fcoms
fsubrl
adc
fistpl
dec
inc
das
jl
dec
sub
push
aad
mov
jge
xchg
add
scas
inc
and
std
pop
add
dec
cmp
pushf
push
movb
lea
jne
jmp
xchg
out
push
repnz
imull
mov
sbb
add
jmp
inc
movsb
pusha
popa
inc
or
addb
mov
add
pop
loop
inc
jbe
mov
pop
xor
inc
mov
ljmp
cmpsb
push
fwait
ja
and
xor
dec
jno
dec
int3
mov
mov
mulb
pop
movsl
adc
dec
imul
xchg
push
dec
ss
jo
inc
aas
jge
aaa
mov
add
jae
add
push
lea
je
pusha
mov
push
movl
movw
call
push
call
leave
hlt
mov
jmp
call
pop
cli
pushl
inc
imul
xlat
fmul
insb
mov
fnsave
roll
in
sbb
add
fcmove
fidivs
std
lret
popa
cltd
repz
mov
std
jae
fists
and
sahf
push
pop
mov
or
call
cmp
mov
test
or
mov
jbe
lock
dec
jo
in
add
addl
inc
outsb
stc
push
xor
cld
cmpsl
leave
mov
call
cmp
ljmp
stos
add
xlat
pop
add
aad
and
push
call
lcall
xchg
cltd
ljmp
scas
out
call
sbb
nop
leave
add
out
lods
cmpsl
arpl
arpl
dec
pushf
adc
stc
divb
out
push
pop
aad
xor
sub
pop
in
call
in
stos
inc
les
dec
orl
push
dec
loop
add
stos
pop
aas
testl
lahf
and
add
imul
in
pop
hlt
imul
or
popa
mov
sbb
adc
arpl
inc
and
inc
aas
jnp
lods
dec
mov
gs
jns
out
and
push
push
push
pusha
push
inc
and
pop
adc
pop
mov
mov
iret
push
add
ds
imul
mov
dec
jne
mov
dec
mov
repz
repnz
data16
repz
ss
iret
repz
jecxz
jae
or
inc
aaa
mov
jnp
push
xchg
repz
fs
push
cwtl
aaa
in
inc
mov
cmp
ja
push
or
dec
repnz
aas
jnp
xchg
rorb
and
jp
mov
push
mov
not
call
shr
sub
sub
or
shld
btc
sub
add
inc
xor
inc
mov
rcl
mov
clc
repnz
pusha
push
pushl
push
lea
jne
mov
jmp
push
call
into
outsb
dec
fcos
je
add
inc
and
push
rclb
pushf
jmp
aad
mov
mov
jae
dec
and
insl
orb
in
iret
or
mov
xchg
jmp
jne
mov
aad
add
add
es
pop
xor
rolb
or
int3
je
add
cs
aas
js
sbb
jbe
xchg
imul
jle
xor
mov
sub
xchg
fwait
incb
aas
js
dec
xchg
ja
mov
scas
popa
mov
mov
mov
mov
test
popf
iret
stos
fdivr
sbb
fimuls
or
repz
je
mov
push
dec
sbb
inc
aas
jns
push
pop
push
call
mov
and
add
gs
adc
lds
jg
lahf
pop
pop
gs
fs
ljmp
add
sahf
add
mov
jae
lcall
sahf
test
xlat
sbb
lock
dec
xchg
ljmp
aas
repnz
fisttpll
xchg
mov
and
cmpb
add
mov
rcr
scas
les
aad
sti
popf
stc
inc
inc
aas
jns
and
jmp
arpl
mov
popf
into
cs
push
push
divl
fmull
ret
nop
jno
sub
pop
jns
test
adc
mov
jge
mov
or
dec
sub
je
in
rorb
loop
popa
cmp
sarl
pop
loop
imul
mov
cmp
mov
fidivs
pop
sub
mov
shll
adc
outsl
sub
or
inc
aas
jbe
sbb
sub
fldenv
adc
popa
adc
lods
loop
aad
popa
ficoml
and
movsb
insb
xor
xor
dec
xor
cmp
lret
pop
push
add
in
push
sahf
das
cmp
ljmp
cmpl
or
in
push
xchg
mov
mov
xor
movsl
roll
mov
sbb
cmpsb
popf
dec
idivl
push
mov
ds
test
faddp
sub
xor
mov
cld
mov
sbb
insb
or
inc
aas
jbe
dec
notl
xchg
rcrl
in
mov
fwait
rorb
inc
adc
lcall
jb
mov
sub
or
jnp
xchg
push
push
xchg
addl
lock
mov
loop
push
insl
or
lret
jbe
push
in
pop
push
lds
jecxz
test
cmp
mov
aaa
push
cltd
push
cmpb
push
mov
sub
inc
pop
orb
pop
push
cli
lcall
jnp
add
data16
loopne
addr16
call
push
je
inc
pop
enter
out
je
adc
mov
adc
out
push
mov
adc
add
xchg
mov
dec
xchg
dec
push
ja
ud0
shrl
mov
push
add
push
push
jecxz
mov
pop
es
sbb
insb
cmp
sub
adc
jp
flds
stos
mov
sbb
or
xchg
cmpsl
and
sub
inc
xor
xchg
out
movl
addb
mov
lea
je
jmp
push
call
mov
fs
loop,pt
xlat
pop
pushl
jmp
push
call
popa
fdivrl
ljmp
scas
aaa
jnp
add
dec
bound
stos
adc
call
nop
push
xor
push
add
bound
in
adc
pop
inc
mov
in
push
in
imul
pushf
fwait
test
ljmp
mov
inc
je
xchg
loopne
sahf
mulb
movsl
gs
adc
rcll
imul
loope
mov
aaa
or
lcall
sar
and
jl
stos
fsubp
mov
in
lods
mov
push
ljmp
mov
mov
jp
cmp
rol
mov
push
mov
mov
gs
les
fcmovnbe
test
pop
shr
aam
mov
lret
lds
aam
mov
sti
cmc
test
sahf
loope
jmp
jmp
out
rcrl
jmp
fldcw
rcl
xlat
test
lds
dec
in
loope
mov
stc
pop
fstl
sub
fcoms
out
xchg
in
pop
loopne
inc
cwtl
in
adc
sahf
roll
leave
fcompp
rcl
sub
lds
xlat
out
add
aam
lret
mov
mov
loopne
movsb
in
ffree
ret
int
into
xchg
out
dec
fs
mov
and
xlat
inc
inc
cmpsb
mov
test
ljmp
ljmp
inc
sbbl
xchg
xchg
mov
fisubrs
dec
in
fdivp
sahf
ror
int3
ljmp
pause
ljmp
int
sahf
aaa
xchg
in
shlb
jmp
in
je
shr
inc
lret
ljmp
fcomps
bound
loope
lock
mov
mov
fstl
in
test
sarb
jecxz
test
aam
mov
fdivrp
test
shl
pop
in
mov
rcrb
jmp
shrl
rcrb
mov
and
les
into
sahf
xchg
test
sbb
adc
inc
test
pop
inc
jmp
cli
push
shl
dec
fldl
jmp
dec
push
shl
aad
outsl
pop
ret
jmp
repnz
sahf
pushf
fsub
bound
xchg
loope
call
push
pop
jae
jecxz
movsl
mov
jecxz
nop
and
and
loope
lret
xchg
movsb
sbb
jle
mov
and
movsb
xchg
mov
je
mov
loope
into
cltd
xchg
mov
xchg
ficomps
rcl
push
fs
test
out
jo
pop
fcom
push
sub
xchg
xchg
mov
push
int3
mov
lret
scas
shl
and
mov
lcall
push
test
mov
test
pop
out
js
sarb
clc
faddl
aam
mov
cmc
enter
hlt
jmp
mov
idivb
jmp
jmp
mov
into
pop
cmp
fcmovbe
jl
aad
lret
cmp
cmp
loope
mov
test
ret
dec
bound
in
subb
ret
movsb
and
mov
loope
rorl
loopne
das
adc
sub
outsl
mov
dec
mov
in
mov
leave
call
mov
push
stos
fcmovb
mov
jmp
lods
in
push
loope
push
loopne
xor
bound
nop
mov
or
adc
cli
popf
jge
xchg
fisttpll
aam
or
xor
pop
in
sub
cli
stc
mov
out
and
hlt
mov
mov
inc
rol
js
cmp
jmp
ja
loope
test
sub
mov
fs
mov
xor
xchg
sub
rorl
add
sub
shr
call
decb
popf
icebp
ljmp
lahf
pop
xor
movsb
into
aam
or
test
loope
cld
call
shl
movsb
sarl
fadd
test
pop
leave
jmp
fidivrl
push
rol
incb
aam
mov
or
mov
sti
ret
rorl
addb
stc
push
pop
icebp
cmpsb
clc
stc
dec
outsb
mov
neg
jmp
faddl
mov
jge
xor
jmp
lcall
jbe
xchg
shrb
scas
ljmp
imul
in
fwait
ret
jp
cmp
inc
push
fsts
fcmovnu
cli
ljmp
push
lds
push
add
ret
or
cmp
repnz
mov
xor
push
rol
lret
pop
jmp
repz
jb
in
movsb
lret
push
ror
repnz
pop
jmp
aam
or
bound
sti
dec
jecxz
mov
hlt
add
shl
gs
enter
fucomp
test
pop
aam
iret
aam
mov
lret
movl
into
mov
lret
hlt
pop
lock
jecxz
sahf
repz
shlb
jmp
enter
cli
testb
push
fisubs
rcl
rolb
aam
mov
aam
jbe
movsb
loope
sub
test
fucom
into
call
aam
repz
movsb
roll
repnz
push
loope
test
sahf
movsb
iret
aam
or
mov
movsb
int3
push
shl
stc
add
cmpsl
loope
aam
mov
repz
ret
test
pop
jmp
clc
and
addr16
movsb
in
shr
aam
rcrb
jmp
std
push
ror
hlt
test
pop
cld
push
daa
loope
aam
mov
icebp
in
test
pop
cmc
push
shl
ljmp
sahf
into
movsb
lahf
fisubl
sahf
shrl
ror
repz
pop
testb
inc
xchg
jle
popa
fucom
mov
aam
mov
ret
lret
jmp
in
sahf
cld
push
clc
ljmp
in
sahf
rorl
es
sahf
fldt
rcl
lret
inc
cmpsb
rol
jbe
movsb
test
pop
out
shll
movsb
push
ret
in
std
mov
out
test
pop
cmc
push
rcl
rcrl
fistps
rcrb
aam
mov
xchg
and
jmp
rcl
int
fsubrl
rol
incl
aam
mov
mov
movsb
jmp
xlat
incb
aam
aas
in
mov
pop
iret
in
fistps
std
int3
test
pop
repz
sub
out
rclb
in
ljmp
mov
lret
repnz
pop
cld
jmp
sub
fcomip
nop
movsb
rcrl
jmp
fcomps
jmp
movsb
icebp
jmp
shr
ljmp
sarl
rcr
sbbb
in
in
repnz
mov
jecxz
fldl2t
movsb
rcl
into
mov
jmp
sbbb
jmp
lcall
xlat
shl
in
fists
jmp
ljmp
shr
test
movsb
int
jmp
hlt
push
gs
xchg
movsb
rcl
fiaddl
aam
sbb
mov
movsb
shrl
ror
lock
sbb
sbb
jmp
ljmp
shr
test
dec
mov
movsb
iret
pop
xlat
push
push
loope
aam
mov
lret
stc
and
fldl2t
ret
aam
mov
imul
rorb
loope
in
mov
lret
mov
inc
mov
jmp
rcl
fdivrs
lock
ljmp
jmp
stc
and
nop
cwtl
push
aam
aad
test
pop
cli
push
push
loope
aam
mov
lds
shr
xlat
mov
icebp
out
test
sahf
in
loopne
out
fidivrl
out
loope
pop
cmc
push
dec
loope
aam
mov
jb
fcom
les
jmp
ror
incl
fucomip
aad
push
sar
test
pop
int
xlat
aam
mov
cmc
sbb
jmp
cld
pushf
inc
lret
jecxz
into
test
pop
jmp
stc
and
cltd
cwtl
push
fcom
ret
lret
pop
repz
fstpl
in
push
ror
test
pop
int3
jmp
fistps
sahf
push
shl
in
fcompl
vpxor
loope
in
mov
incl
aad
int
loope
aam
mov
in
sub
pop
and
loope
pushf
in
jnp
push
fdivrs
out
adc
push
push
ljmp
fsubrp
aaa
sbb
sti
ljmp
pop
loopne
shl
ret
repz
call
cltd
and
inc
jecxz
fisubrs
in
icebp
jns
pop
rorl
es
dec
shlb
ljmp
fcompl
shrb
movsb
stos
repnz
aam
pop
out
dec
cld
sahf
cltd
cli
movsb
in
leave
out
ljmp
fcoml
jno
push
ljmp
lods
faddp
pop
mov
andb
pop
sahf
notl
lds
ret
call
in
jno
ljmp
aas
sahf
out
stos
loopne
hlt
xor
stos
loopne
aam
push
xor
icebp
div
test
cmpsb
in
mov
rolb
movsb
mov
stos
push
icebp
mov
cmp
mov
jecxz
sahf
enter
test
sub
int
shl
mov
fmull
cmpsb
movsb
ret
mov
cmpsb
fsubp
adc
test
aam
sbb
xchg
cmc
xor
aad
imul
lcall
loopne
mov
mov
repnz
aas
test
clc
xor
sar
les
ljmp
repz
xchg
lods
mov
fisttpll
leave
out
in
mov
clc
sti
stc
int3
jecxz
clc
xor
andb
jmp
stos
xchg
iret
repz
imul
lods
movb
test
push
ds
aad
sahf
in
rcr
mov
xchg
ljmp
repz
xor
out
enter
movsb
fimull
jmp
pushf
cmc
jle
ror
jmp
cwtl
imul
sbb
stos
mov
ljmp
pop
fistps
rep
rol
aad
loope
test
xchg
out
cli
mov
loope
and
cld
repnz
cltd
mov
xchg
test
test
mov
daa
scas
roll
outsb
out
repnz
dec
rcrb
fisubrs
ret
leave
sahf
div
pop
sahf
leave
movsb
xchg
sar
xlat
sarl
outsl
ficompl
stos
xor
test
in
mov
adc
loopne
jmp
ljmp
int
mov
fldl
test
mov
ds
shll
fisubl
ret
iret
es
lods
in
data16
loopne
int
ffreep
fincstp
stc
adc
scas
mov
push
call
jg
xor
xchg
mov
push
pushf
xchg
cmpb
sti
fmuls
mov
jecxz
scas
ss
sub
rcll
jl
mov
icebp
push
aaa
mov
xchg
in
fstl
jne
push
mov
add
mov
jmp
jns
std
jno
aaa
sahf
sub
fists
int
pop
dec
pop
popa
dec
les
stos
inc
adc
repnz
fnstcw
aas
inc
ds
add
lcall
sbb
sub
jae
push
sub
ja
popf
ret
adc
mov
lret
and
popa
movsb
test
cld
add
arpl
fwait
or
iret
loopne
xchg
in
vmovntps
pop
cmp
in
push
jg
test
dec
jo
xchg
add
loop
dec
pop
push
scas
jmp
imul
inc
mov
imul
lods
imull
aad
jmp
out
fldt
sti
inc
das
je
leave
mov
js
shll
or
cmp
push
insb
out
xchg
inc
imul
icebp
xchg
les
in
std
mov
dec
sbb
test
lcall
jge
push
cmp
jmp
pushf
push
pushf
lea
je
ror
pushf
add
shld
setg
shl
mov
pushf
stc
bt
call
inc
mov
ss
and
dec
out
das
in
pusha
adc
push
pop
and
jle
push
xchg
test
push
and
sub
cld
push
xchg
pop
and
mov
xor
loopne
pop
push
lds
in
stc
jns
inc
xor
insb
add
movb
cmp
mov
repnz
shrb
js
and
sub
aaa
inc
dec
jmp
stos
adc
aaa
shrl
cli
jecxz
ficoml
leave
aad
push
popf
repz
inc
sahf
mov
mov
in
idivb
inc
aas
bound
push
or
movb
jmp
push
call
sub
dec
fldcw
stos
dec
cltd
call
fwait
out
sub
aad
cmc
pop
cmp
mov
mov
stos
fildl
pop
pop
test
mov
outsb
aad
xor
outsb
mov
mov
push
xor
cmp
xor
and
sarl
jnp
cmp
stos
cs
stc
mov
ljmp
sub
mov
cmp
sahf
test
cmp
clc
mov
inc
cmp
test
mov
cld
lcall
xor
fisttpl
fstpt
mov
mov
stos
icebp
mov
mov
xchg
lret
aas
addr16
adc
lea
jae
pusha
mov
cmp
pushl
pusha
push
lea
ja
jmp
jne
mov
nop
aad
or
inc
stos
inc
sarl
pop
pop
aaa
cwtl
in
fildll
incl
clc
fs
in
push
push
test
pop
cs
mov
movsb
repnz
cmc
mov
mov
insl
inc
scas
das
sub
lock
and
lods
aam
test
data16
dec
mov
mov
fisubrl
in
fwait
lcall
dec
test
add
adc
leave
test
xchg
shlb
mov
stos
lock
add
cmp
jge
add
inc
add
inc
movzwl
test
sar
mov
mov
add
clc
mov
cmp
stc
test
stc
test
push
lea
je
cmp
add
test
cmp
call
rol
add
not
mov
rol
mov
or
mov
push
repnz
jmp
rolb
divl
sahf
rcll
pop
add
idiv
xor
push
sbb
lods
stc
icebp
pop
mov
sarb
dec
into
or
xchg
push
les
add
mov
in
aas
or
shrl
xchg
sbb
mov
lcall
cmpsb
pop
pop
add
pushf
popa
pop
xadd
test
mov
mov
mov
arpl
inc
cmp
mov
shlb
movsl
ljmp
mov
ds
add
ret
lahf
testl
inc
xor
sbb
ds
add
mov
xor
ds
add
or
dec
jg
ds
add
add
mov
ds
add
jge
adc
xchg
cmp
lods
add
add
fisubrs
leave
add
add
rorb
xor
add
test
rorb
add
add
cmpb
ds
in
push
out
mov
ds
add
mov
xchg
or
add
dec
push
mov
or
add
jge
and
inc
fidivl
ds
movsb
add
mov
outsl
xor
add
add
sub
in
or
add
or
jne
mov
add
ja
jno
mov
add
hlt
lcall
or
add
orb
mov
add
add
sbb
ds
add
push
add
mov
and
add
into
sub
adc
aaa
ds
adcl
jle
movsb
or
add
and
xchg
xor
adc
add
push
mov
ds
add
mov
sbb
and
add
es
ljmp
aaa
ds
add
jnp
push
ja
lret
push
mov
sub
mov
loope,pt
add
int
lds
lods
add
add
xor
sbb
add
push
push
test
cmp
add
outsl
insl
push
ds
add
cmp
xchg
ds
add
jo
das
sub
add
add
xor
or
add
add
add
jne
aaa
ds
test
cmc
into
mov
ds
add
inc
mov
outsl
xor
jb
add
scas
and
aaa
ds
add
cmp
outsb
xor
or
add
cwtl
cwtl
test
xor
cmpsl
test
ror
stos
imul
ret
jns
mov
sub
ja
inc
sahf
adc
push
ficoms
imul
or
jne
cmp
out
xchg
imul
popa
in
cmp
loop
cmp
dec
in
mov
push
sbb
push
aad
daa
js
vmovdqa
fldl
ss
mov
leave
scas
add
flds
adc
int
dec
mov
jo
mov
rcll
lret
aas
pusha
mov
sahf
push
add
test
ljmp
test
inc
add
and
lea
jne
pusha
cwtl
movsbl
pusha
movb
setge
push
pop
movsbl
mov
cwtl
pop
movb
lea
push
movl
jmp
dec
ret
xchg
dec
lcall
and
insb
cmp
mov
push
lret
push
inc
xor
pop
mov
xchg
sbb
fsubp
lret
mov
cmc
popf
loope
inc
mov
enter
add
iret
addr16
mov
cmp
push
ja
lds
movsb
add
cmpsb
mov
pop
or
and
pop
scas
rolb
js
mov
and
iret
subl
push
push
sbb
xor
out
mov
out
aam
add
jp
mov
mov
push
adc
mov
out
lahf
into
mov
push
aas
popa
push
push
ss
call
pop
pusha
add
inc
gs
jo
outsb
inc
imul
add
stos
inc
jecxz
bound
scas
ficomps
lcall
lds
lods
lock
stc
mov
push
shlb
subb
jmp
and
adc
jl
ret
add
xlat
test
pop
cmpsl
mov
out
pop
iret
in
cltd
pusha
roll
mov
mov
outsb
mov
das
dec
or
cs
xor
jl
pop
and
mov
daa
rcl
aaa
pop
and
das
xor
jp
popa
mov
aas
popa
imul
mov
lea
jae
cmp
cmp
pusha
lea
ja
dec
not
inc
seta
inc
setne
add
xchg
aaa
movsbl
mov
sub
shr
test
pusha
mov
pushf
mov
shl
movsbw
mov
pusha
cmp
bt
sub
jmp
lea
je
add
neg
btr
mov
not
bt
or
mov
jmp
push
call
xchg
mov
jns
stc
clc
test
pusha
pusha
pushf
mov
lea
je
cmp
push
sub
pushl
cmp
call
pusha
pusha
mov
pushf
mov
pushl
ret
bsf
cmc
pusha
mov
sub
jle
rcl
mov
cmc
rol
push
seta
mov
jmp
jmp
push
xchg
jecxz
repz
testl
ret
aam
sahf
filds
add
pop
js
fwait
icebp
add
sbb
sbb
cmp
testl
scas
les
popa
ret
rolb
pop
xchg
movsl
sub
sti
fists
movsl
jg
leave
inc
cmp
ss
shlb
rcrl
xchg
sub
push
or
ljmp
aaa
cmp
dec
fidivrs
jg
push
shlb
insl
ds
and
pop
push
cltd
lds
lcall
mov
add
add
inc
add
mov
nop
in
inc
lret
hlt
mov
loop
int3
mov
ret
sub
dec
ret
mov
xor
sbb
push
jmp
jno
mov
xchg
fxam
pusha
scas
mov
int3
in
insl
lea
loop
dec
xchg
mov
push
adc
rclb
in
xor
insl
xchg
arpl
jne
xor
pop
push
fdivl
in
push
popf
nop
xor
sub
jge
push
cmp
jge
dec
addb
pop
push
sbb
cmpsl
out
jle
lret
outsl
xor
push
or
arpl
mov
scas
xchg
mov
fsubr
mov
loope
jo
pop
lret
out
mov
sbb
xchg
mov
mov
mov
in
pop
adc
mov
decb
xchg
leave
imul
cmpsl
cli
call
mov
or
in
add
call
addr16
sti
mov
jbe
cmp
cmovnp
dec
sbb
movsb
out
ret
xlat
sub
rol
mov
mov
mov
jmp
mov
push
test
cwtl
addr16
adc
dec
iret
ret
add
and
popa
cmp
add
movsb
push
loope
ret
scas
outsb
leave
sarb
test
or
je
and
sbb
adc
psubq
xchg
int3
mov
movsl
rorb
aas
pop
rorb
loop
movl
add
in
add
loop
lock
mov
int
jmp
xor
movsl
fucomip
cmc
adc
add
fistps
xchg
cmp
xor
xor
and
aaa
jae
aad
call
int
push
push
add
ss
out
lock
xor
loopne
sbb
and
fidivl
dec
xor
arpl
jno
fsubs
and
sub
inc
cmp
sub
push
cmp
call
test
les
ffreep
push
xlat
mulps
mov
daa
les
jmp
jmp
dec
test
inc
pushf
cli
lock
arpl
push
cld
mov
dec
leave
jecxz
mov
fs
arpl
clc
mov
faddl
jg
xorb
mov
and
outsb
pop
popa
lcall
and
ja
hlt
mov
ret
out
fmul
fadds
jmp
out
lahf
iret
ss
add
bnd
movsb
clc
mov
mov
and
jecxz
test
fucomip
aaa
shl
loope
or
mov
jg
mov
fs
and
push
loope
xchg
je
fstpl
pop
in
leave
push
mov
xlat
fwait
and
or
mov
cmp
test
out
mov
lock
mov
pop
inc
push
aaa
inc
out
hlt
out
rorl
xor
sahf
jecxz
cld
mov
add
loope
rorl
jmp
insb
pop
jno
fcoml
subl
sarb
and
dec
inc
xrelease
fdivrs
popa
push
cmp
and
mov
xchg
xchg
ljmp
add
mov
or
int3
loope
sahf
lods
cmpsl
in
das
aaa
fs
fidivrs
push
sbb
stos
pop
movsb
hlt
loopne
adcl
into
xor
lcall
mov
loopne
xor
jle
push
mov
in
xor
push
mov
push
scas
shll
pop
cld
xlat
mov
rcrb
shll
mov
ret
repnz
lcall
cltd
clc
das
imul
xchg
lock
sti
dec
inc
mov
mov
fisubrs
pop
pop
out
and
hlt
xor
popa
mull
sbb
push
ret
icebp
hlt
insl
push
mov
loop
mov
ja
pop
gs
leave
sar
xchg
cmp
jmp
fistpll
bound
xchg
test
sahf
testl
clc
cld
xchg
xchg
stos
frstor
xchg
adc
mov
sub
add
mov
ret
add
jmp
cmpsl
fs
lcall
fidivs
push
inc
dec
jno
xchg
mov
clc
sub
repnz
addl
in
and
nop
ljmp
mov
les
add
test
mov
mov
pop
scas
out
into
cmp
mov
mov
jle
in
jge
mov
mov
jbe
push
mov
inc
out
leave
push
jno
cmp
dec
and
dec
fdivrl
jmp
xchg
add
movsb
data16
push
xchg
sbb
cld
pop
mov
mov
jns
or
mov
lahf
inc
dec
mov
sbb
les
insb
or
cmc
mov
mov
add
out
or
mov
fistpll
dec
std
int3
jnp
aam
mov
jae
fmull
or
sbb
dec
fcompl
mov
dec
daa
rolb
mov
mov
rclb
mov
inc
inc
xchg
loopne
mov
andb
mov
int
xchg
xchg
fldt
out
sbb
test
mov
jecxz
push
ss
mov
call
and
sbb
ljmp
ret
cmp
hlt
push
push
movsb
lcall
cs
imul
pop
ret
jg
sbb
test
jecxz
out
jge
ljmp
in
add
lock
mov
arpl
rorb
cld
repz
mov
in
mov
fisubl
pop
dec
daa
ficomps
jl
add
mov
shl
and
xchg
out
call
fwait
in
shll
loope
je
movsb
into
dec
sbb
mov
inc
fimull
jp
jne
and
into
cmpsl
mov
jb
out
cld
mov
in
inc
add
cwtl
into
and
and
aam
mov
ret
in
les
inc
add
icebp
rol
add
mov
arpl
pandn
loopne
test
mov
movsb
fdivrl
test
pop
lods
push
mov
mov
xchg
mov
lods
xchg
lret
aad
fst
add
and
mov
in
pop
repz
add
jg
ss
loopne
add
sub
data16
decb
popa
bound
and
repnz
inc
cli
clc
fcmovb
lds
mov
inc
jecxz
popa
loopne
pop
or
cmp
fsubr
push
imul
mov
cmp
shr
mov
mov
in
leave
aad
xchg
shrl
repz
popf
addb
mov
lret
cmp
xor
and
push
hlt
out
inc
aam
ret
pusha
in
and
lods
xor
lods
pop
les
push
test
add
stc
repz
mov
iret
scas
jecxz
and
mov
mov
and
test
and
in
pop
push
insl
adc
loope
xor
jp
test
movsb
ja
and
push
aaa
push
outsb
jne
or
inc
imul
push
je
scas
test
jl
lret
inc
iret
cwtl
pop
mov
test
cmp
aad
add
jmp
cmp
ret
into
push
jl
lock
rorb
cld
jp
mov
stc
xor
repnz
mov
lea
cmpsb
mov
jg
icebp
clc
sti
or
xor
cs
cld
xchg
lcall
call
incl
push
fisubrs
decb
popf
xor
mov
and
ja
imul
mov
sbb
jmp
in
popa
lds
cmp
jo
out
out
mov
frstor
jne
test
xlat
cld
pop
dec
or
test
lock
std
push
jmp
cltd
aas
dec
andb
cli
cmp
jbe
xor
shl
out
fiadds
test
loop
cwtl
xlat
cld
js
mov
jmp
shlb
mov
jb
call
sub
jmp
jl
mov
and
icebp
or
rorl
sbb
arpl
pusha
jae
push
sub
mov
mov
mov
lahf
jae
stos
pushf
xlat
rcr
sub
fldenv
ret
xchg
movsb
ss
stos
dec
and
shll
movsl
pop
aam
add
aam
rorl
mov
incb
idiv
mov
movsb
outsb
je
or
ret
fiaddl
int
scas
mov
xor
mov
xor
xchg
ljmp
ror
and
xchg
aam
sub
in
xchg
cld
fs
in
xchg
scas
negl
frstor
jg
dec
stos
jmp
mov
cmpsb
aas
push
and
lahf
mov
cltd
movsb
test
bound
and
out
cwtl
ffree
ljmp
jl
mov
repnz
popa
mov
imul
push
dec
decb
rcl
neg
adc
aam
and
insl
push
in
popa
jbe
mov
adcb
mov
cltd
jle
repnz
repz
lcall
mov
jmp
mov
xchg
out
jo
imul
ds
jo
mov
es
js
lcall
mov
divl
pop
jecxz
icebp
rcrl
movsb
cmp
inc
icebp
into
push
mov
mov
push
out
aad
dec
add
into
jb
mov
popf
in
jg
repnz
pop
mov
xor
add
adc
or
add
stos
adc
fcmovbe
inc
into
push
or
in
jge
xor
sbb
sbb
fnsave
xchg
inc
cmp
out
hlt
adc
add
adc
jmp
ret
incl
in
aad
lods
push
mov
stc
test
xor
enter
cli
mov
cmp
or
clc
mov
rcll
ljmp
cmp
mov
mov
imul
pop
aaa
xchg
push
loopne
dec
mov
sbb
xor
sbb
push
fstpl
insl
imul
movsb
repnz
jg
dec
push
push
shlb
out
dec
sahf
pop
pop
clc
mov
jecxz
test
mov
pusha
xchg
aam
subb
mov
cli
cmc
int3
leave
xor
cmp
add
cmp
cmp
pushf
jecxz
push
int
loop
test
fdivl
xchg
jge
pop
jmp
xchg
cmpsl
cmpsb
insb
add
xor
fcoml
xchg
mov
sub
lea
movsl
out
sahf
ror
outsb
mov
shrb
jb
cld
pop
and
pop
hlt
outsb
popf
ficompl
lods
insb
cld
mov
push
fsubrl
xchg
fistps
rcr
in
lcall
popa
jne
mov
call
cs
js
xor
jge
ljmp
fsts
fimuls
popf
mov
rol
aam
jl
jecxz
insl
fs
idivb
in
es
fcoms
lcall
js
jecxz
mov
inc
jbe
add
pop
in
mov
out
hlt
jmp
pop
movsb
xchg
add
test
push
dec
jne
add
shll
sti
mov
outsb
mov
out
inc
mov
mov
leave
shl
and
stc
mov
mov
jp
bound
ret
clc
cmp
mov
pop
and
mov
fsubp
jecxz
fxtract
jnp
fnstsw
mov
push
rorb
push
jecxz
pop
rorb
shrb
push
scas
xchg
popf
loopne
mov
fwait
lods
popf
cld
xor
xchg
lea
mulb
cmpsl
cmpl
loopne
ret
cmc
stos
mov
mov
pushaw
and
fsts
fstps
iret
xor
outsb
inc
mov
inc
mov
jge
jo
in
add
mov
insb
into
mov
loope
fidivl
sub
ret
jne
call
ret
and
stos
into
orb
lea
push
mov
mov
ljmp
bound
cmp
lds
insb
test
ja
je
cmpsb
lods
ss
adc
loopne
mov
cld
jb
lock
jmp
ljmp
pop
jmp
push
out
mov
or
int3
and
xor
nop
lods
and
ret
sarb
and
push
or
jmp
xor
mov
cmc
inc
mov
mov
incb
scas
andl
fidivl
cld
push
repz
gs
push
rcl
test
sbb
pop
std
rcll
pop
arpl
dec
cltd
imul
mov
or
gs
fdivl
in
into
std
pop
inc
in
daa
bswap
jecxz
imul
aas
int
sub
insl
push
out
add
and
cmpsl
cwtl
or
push
into
loopne
ljmp
pop
fisubl
hlt
pusha
jmp
mov
jns
enter
push
inc
sar
push
push
jae
test
jmp
fidivrl
jno
sarl
call
mov
loopne
arpl
outsb
in
jg
insb
mov
pop
arpl
mov
jne
cmpsl
cmp
fs
adc
inc
cwtl
gs
jmp
inc
and
movsb
push
loopne
dec
popf
jle
lock
ja
xchg
mov
dec
movsl
push
stc
frstor
inc
loop
jae
in
stos
sbb
jge
stos
in
and
je
jb
mov
mov
jb
add
movsb
testb
dec
imul
rclb
hlt
add
in
lds
mov
scas
jl
pop
dec
scas
jge
loope
aas
into
lret
les
fisttpl
pop
xchg
call
jmp
orl
mov
fs
std
call
test
pop
fst
xchg
fidivl
out
or
cld
xchg
std
jmp
dec
outsb
hlt
repnz
mov
in
jb
fdiv
and
sub
inc
and
pushl
in
mov
stos
push
jmp
outsb
sbb
jle
in
mov
adc
leave
fsubr
jle
les
pop
ret
pop
lods
int3
inc
pop
out
push
fistpll
test
sbb
faddl
jb
lds
cld
xchg
lods
pop
gs
cmc
iret
std
adc
ljmp
fidivrs
in
pop
out
mov
jp
mov
push
jp
cli
test
mov
mov
mov
mov
cmp
push
leave
fnstsw
out
push
loopne
mov
push
test
mov
in
adc
mov
adc
test
test
shrd
outsl
jecxz
inc
adc
pop
pop
mov
xchg
outsl
loopne
ficoml
test
pop
stos
sub
cmp
loop
cli
dec
fcoml
clc
push
xchg
jl
cmpb
ret
icebp
in
cmp
mov
push
xor
ret
dec
inc
imul
pop
rcl
sbb
push
icebp
dec
add
and
mov
jnp
pop
aad
cmp
xor
and
sub
jmp
in
xchg
testb
cs
idivb
rcrb
pop
mov
stos
cs
jmp
mov
push
vmwrite
jg
sub
and
or
ret
lds
repz
xchg
aam
in
inc
data16
fcmovbe
adc
push
add
in
mov
mov
movsb
leave
jp
mov
data16
out
stos
ljmp
iret
fisubs
xor
cltd
xor
adc
sahf
aad
cs
or
jle
int
adc
pop
xchg
jmp
rclb
nop
call
int
jno
movsb
int
xor
aas
jge
inc
leave
fcoml
ljmp
mov
pop
mov
xchg
dec
push
or
xorb
lret
mov
or
or
lahf
test
jne
dec
les
loop
ja
dec
sarb
pop
outsb
sub
jl
sarb
add
and
jle,pt
fcmovu
cmpsb
stos
xor
shrl
push
fistpll
pop
cli
cld
out
stos
jmp
std
and
pop
ljmp
ljmp
aas
push
add
sbb
scas
cmp
inc
mov
jb
or
pusha
add
pop
testb
imulb
lahf
mov
mov
pop
mov
pop
mov
push
push
mov
dec
inc
loop
or
cmp
shrb
jmp
ret
fsubl
jno
mov
sbb
rol
loopne
sub
xor
inc
int
aam
adc
dec
jle
arpl
cs
repz
popf
inc
jns
aaa
add
mov
mov
movsb
int
rcl
fdivl
pop
ljmp
sub
mov
idiv
xor
jmp
sarl
push
xor
icebp
inc
fidivrl
jg
mov
xlat
in
cmp
pop
cmpsl
rcr
fmul
push
mov
pop
mov
jmp
outsl
popf
mov
loop
sub
adc
mov
out
in
addr16
mov
mov
insl
mov
data16
enter
rcl
cld
std
imulb
or
stc
jg
sbb
test
mov
push
adc
adc
cwtl
xchg
cmp
cmp
sar
cld
xchg
jno
and
pop
pushf
fnstcw
adc
inc
nop
into
pusha
dec
or
mov
cld
std
ds
repz
adcl
test
adc
nop
icebp
cmp
dec
mov
test
fdivp
mov
jle
insl
jecxz
or
test
ret
sbb
adc
jb
mov
into
xchg
sub
sub
pop
popf
jne
ficomps
cli
arpl
push
cmp
mov
testl
push
pop
repnz
jle
stos
insb
sbb
add
mov
push
inc
outsb
and
mov
scas
sahf
sub
fs
movsb
push
lods
fcom
push
faddl
mov
dec
adc
leave
aas
mov
fsubl
adc
aad
repnz
cs
and
and
lock
pushf
or
mov
mov
cmp
cld
and
mov
lock
imul
mov
jns
and
mov
mov
and
mov
mov
rorl
push
ficomps
jge
fmuls
push
sbb
int
mov
loopne
mull
rcrl
jecxz
call
inc
sub
mov
out
mov
bnd
mov
jp
inc
pop
pusha
lret
jbe
push
fisttpll
cltd
cli
or
arpl
je
icebp
mov
adc
iret
mov
jl
int
pushf
bound
mov
out
jno
mov
insb
cld
clc
ret
test
cmp
mov
jle
dec
add
xchg
scas
jnp
jb
xor
lcall
push
jne
es
sub
lcall
pop
xchg
jbe
sbb
les
pop
push
pusha
popf
fdivr
int
ss
bound
mov
jb
fsubrl
lret
insb
add
cmp
fidivrl
xchg
mov
fs
test
jnp
movsb
mov
pop
ljmp
xchg
scas
inc
xor
pusha
jno
mov
popf
sbb
clc
sarb
sbb
or
mov
pop
mov
adc
test
loope
xchg
addr16
enter
ret
outsb
mov
push
mov
out
add
in
cmp
and
out
loope
sarb
lea
movsl
aam
inc
xor
and
jnp
pop
fnstenv
mull
mov
jne
adc
push
sub
call
loopne
xchg
std
mov
mov
push
stos
dec
mov
sub
push
add
icebp
aad
jp
sub
inc
sub
pop
mov
lret
bound
movb
or
mov
lock
mov
shll
aam
movsl
cmpsb
mov
add
cld
add
inc
pop
fs
inc
popa
and
push
mov
ret
cmp
xchg
sub
sbb
mov
pop
test
std
lds
cmpsl
outsl
ret
cld
pop
cmp
inc
rcl
mov
inc
repnz
jno
mov
cld
out
jmp
sbb
xchg
popa
sbb
jg
dec
mov
lods
sub
dec
jp
call
or
sarl
popa
mov
clc
shl
and
cmp
call
and
mov
and
shlb
xlat
js
inc
xor
add
mov
hlt
xor
hlt
enter
adc
push
jecxz
into
and
sub
jbe
test
mov
add
pop
arpl
outsl
sub
gs
mov
rolb
xchg
xchg
in
js
gs
xchg
mov
das
fcmovb
clc
enter
dec
loope
mov
push
mov
mov
mov
lret
into
cmp
and
lods
scas
lock
push
idiv
in
mov
insb
cmp
sbb
jmp
cltd
test
aam
add
jae
pop
mov
sub
ja
idiv
iret
jbe
add
xchg
mov
outsb
mov
xor
ss
add
leave
jae
xrelease
fdivl
ret
jl
pop
pop
inc
movsb
or
sub
dec
mov
pop
mov
xor
jg
cltd
aam
inc
stos
add
ja
or
repnz
loope
and
inc
insb
mov
add
clc
cld
test
pop
pop
ljmp
xchg
sub
adc
fnstsw
pop
sbb
lret
in
xchg
stc
cmc
sti
lods
push
leave
mov
fisubrl
jl
jle
clc
inc
ljmp
mov
mov
jb
inc
cli
mov
out
sar
sub
jno
pop
into
out
mov
icebp
mov
and
adc
mov
mov
mov
aam
mov
lock
pop
jecxz
jge
repz
clc
inc
out
clc
test
pop
xchg
add
adc
add
cmp
inc
pushf
rcrl
adc
popa
ja
flds
xor
testl
fdivs
lock
fisttpll
leave
mov
lret
pop
mov
pop
loope
je
push
pushf
ds
out
or
and
frstor
and
stos
mov
jp
pop
sub
push
and
out
jecxz
fcompl
imul
punpckldq
lahf
mov
ljmp
in
rcl
sbb
sahf
in
mov
les
into
mov
in
stos
loopne
xchg
pop
scas
rol
fmulp
cmpsb
mov
out
stos
call
xchg
add
aam
ljmp
dec
ds
hlt
adc
jecxz
lret
rorb
out
cltd
test
std
aad
test
sbb
into
frstor
fst
in
inc
fadds
ret
mov
mov
aam
fs
lret
les
pop
ret
jb
push
inc
shlb
cld
push
in
push
jb
ds
cmpsb
ret
sub
xchg
addr16
in
mov
rcl
rol
add
js
mov
in
fcompp
lcall
xchg
lds
sahf
sarb
or
mov
icebp
loopne
dec
lret
shl
mov
mov
sub
and
xor
movsl
into
pop
shl
lret
adc
ffree
pop
fcoms
in
outsb
rcr
adc
inc
in
in
jmp
in
ljmp
test
sub
in
test
sbb
rol
roll
int
out
lret
inc
shl
loope
xor
rclb
jmp
into
ret
out
inc
aam
cli
xchg
call
out
in
aad
hlt
movsb
scas
ljmp
cmp
mov
int3
xchg
repnz
lret
fdivrp
in
int3
push
loope
sti
movsb
jmp
lret
dec
shll
fisttpl
shr
imul
je
stos
iret
ljmp
hlt
out
hlt
push
rcll
loopne
rcll
ljmp
sahf
clc
pop
fbld
jb
jle
fcmovbe
insb
mov
inc
push
jmp
jmp
lea
repz
insb
push
sarb
lods
cvtps2pd
jnp
cmp
outsb
sarl
stc
jno
cmpsb
or
sbb
sbb
je
jbe
add
ja
jecxz
inc
stos
cld
xchg
clc
sbb
mov
and
jg
xor
clc
in
and
jg
pop
loopne
clc
lock
push
sarb
sti
adc
sahf
nop
lcall
inc
test
jnp
outsb
stos
test
pusha
out
pop
jg
loop
fdivrl
fbld
imul
add
bound
xor
adc
mov
xchg
jecxz
mov
mov
lret
mov
sub
pop
sub
push
into
sub
mov
fidivrs
ret
and
push
repnz
faddl
push
mov
sub
out
loope
jmp
rcr
push
repz
inc
pop
lret
scas
or
push
inc
pop
or
sub
mov
pop
addr16
leave
sub
ja
inc
and
test
sar
dec
test
push
bound
in
mov
sub
cs
test
cmpl
cmp
mov
mov
mov
mov
jle
mov
mov
jne
hlt
mov
cmc
mov
cli
arpl
fsubl
ret
mov
test
loop
fdiv
test
sbb
push
fdiv
mov
xrelease
popa
cmp
scas
int3
fldt
test
push
scas
aas
fcmovu
sub
sahf
jb
daa
push
divb
rcrl
push
cmp
jbe
outsl
cmp
cmp
pop
fmul
in
fimull
sbb
lock
fcompl
xor
imul
imul
push
js
jle
cmpsl
mov
and
sti
cli
stos
movsb
das
add
mov
lcall
cmpsb
jnp
dec
std
jg
pop
mov
dec
mov
movsb
inc
fmul
clc
add
mov
inc
pop
mov
xchg
cmpl
out
push
ja
mov
ss
fsubrl
insl
sbb
jecxz
loop
icebp
loope
loop
mov
and
inc
dec
mov
jecxz
mov
mov
lcall
and
mov
lock
push
stos
in
mov
push
nop
fbstp
call
mov
xor
mov
fimull
lahf
mov
push
mov
out
int
adc
xchg
cmp
pop
test
sti
cmp
cltd
sub
ret
dec
inc
mov
ja
fstpt
cmpps
les
mov
sbb
jmp
mov
jp
sub
add
pop
out
or
jnp
shlb
hlt
jne
test
fidivs
ljmp
cld
lea
sub
push
mov
xorb
lock
jg
ret
sbb
leave
mov
std
mov
std
mov
sbb
dec
cmp
push
mov
and
xchg
lcall
push
mov
lret
xchg
mov
add
jne
jecxz
cs
inc
mov
addr16
ret
mov
inc
mov
add
sahf
sub
cltd
xchg
mov
xchg
loopne
or
jns
dec
jno
popa
js
test
ja
pop
stos
inc
mov
mulb
mov
cmp
imul
in
loopne
fistpll
jl
sbb
leave
mov
out
cld
aas
jle
mov
inc
jb
aaa
rorl
pop
pop
mov
push
pop
out
stc
mov
mov
bound
rorl
xchg
xchg
int
mov
or
ret
mov
jbe
add
pop
mov
imul
push
jbe
daa
mov
pop
icebp
cld
mov
add
cmc
xchg
jmp
in
lret
dec
add
repnz
mov
mov
cmp
xor
ret
int3
ljmp
pop
mov
ljmp
sbb
ss
fmull
dec
fcmove
jmp
fbstp
pop
sbbl
jns
cmp
lock
lcall
sub
outsb
cld
sub
js
insb
mov
repz
js
iret
divl
in
and
mov
je
xchg
lret
aam
dec
mov
mov
fisttpl
fimull
mov
cld
fidivrs
iret
idivb
jp
pop
jne
cltd
xchg
fs
jp
jecxz
push
mov
cld
adcl
xor
rorl
mov
cltd
add
sahf
and
and
fs
out
adc
fsubl
ds
push
and
xchg
daa
dec
incb
xor
mull
stc
mov
cld
in
bound
mov
inc
ret
stc
xor
mov
insb
fsubl
xchg
ret
in
xchg
sbb
mov
nop
jecxz
inc
jns
push
mov
call
fucomi
or
and
les
divb
jns
sub
cs
js
cmp
les
cld
sbb
fcmovbe
pop
or
mov
dec
push
popa
pop
cmp
jl
call
mov
in
and
test
out
inc
mov
xchg
cmp
and
cld
cld
mov
dec
mov
inc
lret
sbb
add
outsb
aas
test
mov
dec
or
loopne
or
sub
out
mov
shll
into
mov
adc
ljmp
inc
les
leave
cmc
and
addr16
add
ss
insb
testl
mov
pushf
fsubl
push
cmpsb
add
rorl
cli
fnclex
mov
fdivl
das
add
inc
mov
sahf
xchg
lret
addr16
xor
adc
dec
mov
jp
cmpb
pop
cli
iret
inc
pop
pop
mov
insb
test
clc
insl
push
imul
mov
mov
adc
xchg
inc
xchg
sahf
mov
jle
ficoml
sarl
mov
addl
and
lds
ljmp
mov
mov
push
outsb
inc
pop
lcall
popa
aam
rcl
loop
fwait
add
xchg
mov
ljmp
popa
or
pop
loope
cld
xor
mov
out
dec
cmp
mov
xchg
rcr
xor
mov
icebp
movsb
inc
shll
popf
adc
fiaddl
scas
dec
loop
fistpll
cmp
mov
add
aam
inc
and
xchg
into
fistps
std
loope
cld
pop
or
push
enter
jne
inc
scas
pop
fisubl
cld
scas
das
ret
mov
mov
fisubrl
jo
dec
xchg
imul
roll
push
adc
loopne
popf
pop
pop
inc
cli
pop
imul
lret
mov
inc
into
vpsadbw
popa
lahf
pop
rcrb
daa
aam
mov
or
ret
popl
push
int3
pop
mov
push
sbb
cltd
test
iret
in
loop
cld
xlat
or
add
mov
add
mov
repnz
into
mov
cmp
psraw
orb
and
dec
or
shll
adc
add
push
cmc
ret
int3
and
or
pusha
repnz
push
mov
sbb
test
mov
lea
fcoml
in
sahf
cmp
ss
jmp
xchg
sub
or
push
xor
sahf
dec
fdivp
jmp
cld
xorl
dec
mov
cmp
pop
into
xlat
adcb
jo
dec
xchg
stos
insl
mov
mov
sbb
orl
push
sarl
data16
data16
inc
xchg
in
in
movsb
lahf
add
jmp
test
loopne
fs
cld
rcr
mov
leave
dec
loop
int3
mov
cmp
inc
bndldx
jns
push
add
iret
xchg
dec
xchg
mov
cmpsb
jb
rolb
pop
sub
push
hlt
fbstp
jb
inc
or
jae
cli
in
test
mov
xor
or
dec
popa
fmull
cwtl
jne
pop
loope
in
inc
ret
jl
cmp
push
sub
int3
xor
lea
aam
int
sub
std
xchg
mov
int3
test
movsb
incl
cld
insb
mov
dec
adc
mov
mov
mov
xchg
jge
push
rcrl
jb
cli
adc
mov
pop
xor
loopne
fnstcw
sub
loopne
arpl
out
dec
and
push
mov
dec
lcall
cld
sub
xchg
inc
popf
push
add
aam
lds
or
mov
jo
rcr
inc
lahf
xchg
jecxz
push
sbb
mov
js
xchg
push
lcall
mov
push
xchg
mov
xor
cld
insl
or
mov
outsb
into
lods
dec
ret
jns
mov
adc
mov
cmp
sub
adcl
jmp
sbb
pop
fld
psubusw
lahf
pop
pop
cmpsl
pushl
jmp
lcall
lods
sub
int
or
mov
and
pop
xchg
aam
add
out
fs
mov
addr16
push
in
push
dec
repnz
call
or
adc
sar
movb
add
lds
jge
enter
jb
mov
pop
dec
mov
push
xor
dec
dec
ljmp
daa
fidivrl
jnp
movsb
aaa
mov
pop
fdiv
and
icebp
enter
push
sub
ret
inc
inc
pop
pushf
test
stc
cwtl
fiadds
cmp
inc
in
es
adc
lds
sub
and
lods
jle
das
cs
icebp
mov
aam
jg
pop
es
imul
add
rol
jns
inc
mov
test
popa
mov
imul
cwtl
xchg
movsb
inc
mov
movsb
sbb
jmp
outsb
dec
and
push
xchg
into
in
sbb
dec
fiadds
push
loop
test
pop
jb
mov
xor
test
mov
jmp
mov
lds
ficomps
int
jne
and
sbb
stos
mov
js
add
add
fsubl
or
push
jmp
iret
sbb
cmpsb
mov
cmpsb
adc
movb
mov
push
dec
mov
std
cmp
stos
in
stos
push
push
xchg
xor
dec
pop
ret
or
xchg
pushf
push
mov
out
and
fsubs
loop
jecxz
lock
jg
jmp
das
into
rorb
jle
sub
jmp
or
and
mov
cmc
push
adc
mov
out
pop
xchg
test
movsl
lea
mov
shll
dec
cltd
or
movsb
add
in
sbb
sbb
sub
lahf
repz
pop
shrb
ror
xlat
data16
iret
push
leave
sub
ret
push
ljmp
sub
jle
outsb
rcl
pop
aam
loope
pop
repz
shlb
sub
push
push
add
cmp
and
ret
int3
push
mov
movsb
nop
stc
lret
in
fidivrs
stos
into
js
sbb
mov
jmp
les
cmp
mov
lret
decb
stos
adc
sbb
loopne
filds
les
test
scas
pop
xchg
inc
loope
sub
bound
in
out
or
mov
pushf
xchg
aaa
dec
ljmp
subl
loopne
aam
inc
pop
push
rol
cld
enter
aad
sbb
xchg
arpl
add
mov
and
stos
and
sar
push
inc
int3
dec
lret
cli
je
les
mov
inc
jno
aam
jno
dec
pop
mov
popa
and
insb
in
movsb
mov
orb
or
lcall
aad
imul
push
lcall
int3
xor
or
mov
pop
mov
sahf
inc
in
mov
es
ficoms
shr
xor
out
insl
xchg
pushf
sbb
cmpsb
mov
in
hlt
in
push
cmpb
dec
aam
mov
push
sahf
mov
inc
add
xor
pop
lahf
mov
cld
and
arpl
ficoml
mov
push
mov
pusha
out
dec
mov
jg
cmpl
or
aam
pop
lds
je
mov
roll
andb
cld
lahf
or
cli
and
sub
je
outsl
aas
lea
mov
pop
pop
jecxz
and
pop
jo
mov
add
lea
dec
cmp
and
cmp
into
or
bound
ret
add
out
mov
into
dec
push
cwtl
ljmp
aad
data16
xor
in
xor
mov
cmpsb
jp
nop
sbb
into
jno
test
cwtl
movsb
sahf
fists
arpl
cmp
into
aaa
sub
and
fwait
push
mov
fnstcw
outsb
daa
xchg
sbb
push
movsb
jns
dec
loope
sub
mov
fsts
inc
jmp
outsb
dec
sub
scas
imul
jb
and
hlt
or
popa
nop
push
pop
lcall
mov
mov
in
jb
pusha
push
sar
xor
outsb
and
mov
xlat
xor
jle
adc
add
mov
push
scas
test
fsubl
jle
repnz
jns
push
cld
test
cs
loope
inc
test
les
cmp
mov
jmp
jle
loope
js
fidivs
mov
xchg
int
callw
adc
jmp
push
and
aas
inc
adc
dec
icebp
cmp
cli
inc
xchg
imull
lds
mov
mov
dec
frstor
xchg
jo
ret
bound
mov
or
dec
and
cld
inc
and
aaa
js
jb
int
stc
out
pop
aam
inc
popa
push
insb
rorb
mov
inc
push
mov
pop
push
mov
cld
sub
rcrl
dec
out
mov
pop
xor
pop
cld
jbe
jb
cld
sbb
xchg
pop
and
lock
mov
sbb
rcll
fldenv
inc
and
out
sub
iret
jno
sbb
in
mov
inc
bound
fs
xor
or
fs
enter
enter
cmp
lret
jl
sub
mov
lods
jnp
loope
in
or
ljmp
push
adc
cmp
insl
xchg
adc
hlt
fisubs
push
lcall
ljmp
lret
cmpsl
into
mov
mov
je
shlb
mov
pop
int3
loope
insb
imul
or
pop
test
aam
cld
movsb
fidivl
sub
scas
add
pushf
pop
je
dec
out
mov
cmp
ret
dec
iret
cli
lret
mov
outsl
fiadds
add
movsb
and
fs
mov
jmp
jl
adc
cmovp
mov
and
and
adc
lods
pop
cmp
mov
in
out
mov
mov
repz
subb
jecxz
bound
repnz
jae
xchg
repnz
cmp
cmp
js
inc
or
addb
es
xor
das
add
mov
insb
data16
ret
cmp
lcall
dec
adc
and
mov
daa
ljmp
iret
fdiv
pop
dec
push
add
jno
adc
mov
sbb
inc
in
and
dec
js
jns
lret
adc
dec
mov
adc
movsb
push
dec
bound
xchg
pop
ss
into
loope
mov
sbb
xchg
add
insl
xchg
outsl
jne
les
mov
mov
insb
sbb
xor
pop
cs
stos
jle
pop
inc
jge
mov
sbb
gs
loopne
push
pop
rcrb
loopne
cld
add
shrl
popf
xchg
mov
and
test
pop
cmpl
inc
out
cmp
icebp
sbb
push
or
lock
stos
insb
lcall
mov
loop
dec
mov
cs
mov
test
adc
sub
decl
stos
ret
cwtl
loop
fiadds
lret
jmp
xor
jno
pop
push
loop
mov
out
js
mov
jno
sar
dec
movsb
or
outsb
iret
jge
mov
aas
push
test
adc
loop
out
jmp
in
push
xrelease
loope
sub
and
xchg
jecxz
mov
mov
cli
repz
out
inc
jmp
push
imul
adc
std
mov
mov
sub
inc
out
and
add
pop
mov
dec
mov
mov
xor
outsl
jmp
cmp
mov
out
xchg
es
cld
ja
push
je
bound
xchg
icebp
push
aam
sbb
dec
rep
add
std
lret
adc
lcall
mov
icebp
fdivrl
jmp
mov
cmpsl
cld
sub
inc
mov
mov
repz
scas
rcrl
adc
repz
ret
sub
pop
insb
inc
mov
test
subb
test
stos
xor
out
mov
ror
cld
sbb
int3
inc
lret
adc
dec
ret
aas
pop
mov
dec
dec
enter
ret
arpl
sbb
lock
aam
jbe
push
push
shll
lret
stos
xchg
sbb
pop
fsubrl
pop
and
fidivrs
stos
dec
jg
scas
pop
adc
cmp
adcl
out
and
fistpll
loope
xchg
insb
out
in
jecxz
call
in
add
push
jns
inc
pop
push
cltd
movsb
inc
xor
or
mov
mov
insb
add
pop
jle
shll
loope
pusha
cs
inc
jle
fsubrl
test
or
int
jle
xchg
in
xchg
daa
popa
test
push
and
ja
or
out
mov
push
shrb
sub
es
lret
lods
mov
mov
ficoml
mov
fidivrl
movsb
andb
mov
add
add
imul
shrb
dec
pop
test
push
fisubs
ret
inc
inc
pop
test
xchg
cmpsb
xchg
jmp
lcall
outsb
pop
dec
mov
xor
ror
nop
repnz
mov
mov
add
mov
hlt
jnp
inc
sub
pop
sub
pop
data16
cmp
shll
inc
es
fadd
pop
pop
pop
jne
xchg
out
pop
out
aaa
fcoml
mov
xchg
ja
mov
fbld
sub
pop
std
cmc
rcll
fwait
dec
pusha
arpl
inc
cmp
fiaddl
mov
hlt
lret
in
ret
loop
or
pop
dec
cmp
es
stc
adc
rcll
or
pop
dec
jb
xchg
out
xchg
adc
adc
or
insl
int3
rorb
sbb
jge
dec
xchg
jle
bound
sub
cmp
sub
in
decl
sarl
pop
sbb
push
popf
ljmp
outsb
in
mov
int
dec
mov
aad
roll
and
fbstp
jne
and
xchg
lahf
mov
out
dec
jg
cli
cld
cmpb
adcb
out
pop
cmp
into
in
xor
dec
arpl
rcr
rorl
jmp
sahf
fbstp
aas
enter
mov
fisubrl
add
imul
pop
mov
dec
adcb
aad
ljmp
cmc
dec
lcall
pop
pop
sar
mov
jle
fmulp
mov
test
push
in
jp
sub
out
into
aam
add
aam
mov
jmp
loope
pop
ret
mov
ds
movsl
pop
push
int3
in
dec
xchg
xor
bound
pop
cmc
iret
push
jbe
lock
pop
and
push
or
adc
mov
mov
push
sub
inc
loop
mov
enter
shll
push
fldenv
jp
push
xchg
loope
loop
mov
mov
loope
cld
out
jmp
jg
push
into
hlt
push
cmp
iret
jae
push
add
pop
sbb
ret
cmpsl
outsb
cld
inc
inc
or
in
loope
sti
aam
cmp
int
jnp
xchg
daa
les
cmp
cld
push
mov
or
movsb
stos
imul
bound
xchg
jnp
push
rorl
ljmp
lods
lds
mov
pop
push
imul
push
mov
add
cld
lcall
pushf
jle
lahf
xchg
dec
es
jne
adc
push
sahf
xor
fdivl
push
int3
push
jne
inc
insl
jns
addr16
ljmp
sbb
ficoms
cmp
adc
rcr
fsubl
in
iret
loopne
in
gs
xchg
js
and
mov
mov
push
movsb
outsl
fidivl
popf
rol
xchg
int3
sbb
repnz
xor
in
xchg
iret
test
mov
ret
add
push
sbb
int
fwait
in
rcrb
mov
aam
lods
shlb
insl
adc
pop
dec
xor
ffree
imul
and
addl
jmp
out
mov
repnz
icebp
mov
cwtl
subl
xlat
cmpsb
sbb
addr16
xchg
loopne
inc
pushf
sti
fdivrl
imul
xor
add
fidivrl
and
inc
pop
movsb
xor
mov
js
inc
cwtl
ret
call
jg
adc
popf
in
jne
pop
enter
pop
fcomps
jecxz
adc
rcll
movsb
dec
mov
or
scas
out
xchg
or
fmull
add
push
test
jno
mov
add
xchg
jmp
xor
dec
mov
out
into
mov
jg
xchg
rcrl
cmp
sar
test
test
mov
cmp
mov
stos
ret
jns
loopne
icebp
daa
jg
mov
incl
loop
pop
cmp
je
add
stos
pop
lret
mov
xchg
xchg
cmpb
jmp
int
loope
loop
push
rolb
shlb
cld
and
mov
sbb
cli
pop
imul
jno
xchg
data16
hlt
cmp
loopne
xchg
and
pop
lds
fisubrl
ret
rorl
pop
cld
jmp
mov
lret
lret
rorb
inc
mov
movsb
lea
fdivrp
int
pop
ret
loope
into
idivl
mov
cld
cli
push
jnp
mov
dec
push
mov
xchg
and
repz
and
mov
movl
sub
dec
fdivs
push
and
push
lods
nop
jge
sub
mov
add
hlt
sbb
addr16
cmpsb
shl
jecxz
enter
mov
cmc
inc
ret
and
idivl
popa
mov
xlat
cld
nop
insl
data16
mov
enter
popf
mov
fsubs
or
adc
aad
gs
imul
rcr
inc
pop
pop
stos
out
jl
rclb
hlt
or
outsb
or
fs
pop
mov
lahf
cmp
loope
cmpsb
pop
mov
in
movsl
fwait
cmc
push
jle
cmp
cli
adc
push
mov
neg
ds
inc
dec
and
jp
cmpl
mov
out
adc
stos
xor
movsb
xchg
push
lods
adc
repz
mov
call
cmpsb
adc
je
cld
jb
and
insl
mov
pop
jge
pushf
mov
lret
jbe
pushf
fstps
push
mov
aam
in
repnz
enter
out
xchg
and
pop
xchg
insl
cwtl
or
and
mov
bound
mov
mov
hlt
int
mov
pop
adc
test
mov
daa
jmp
shl
push
pop
jle
aas
mov
sub
insb
test
xor
repnz
movsb
repnz
push
dec
out
dec
dec
nop
sub
fimuls
sub
xor
dec
push
test
dec
jmp
in
jmp
and
adc
inc
mov
lret
fiaddl
cmpsb
out
popa
gs
mov
xor
sbb
jns
mov
negb
inc
add
addb
add
mov
push
cmp
aam
movsb
xor
ljmp
mov
adc
adc
es
jge
int3
in
xchg
pop
fldenv
inc
cmp
push
negl
push
sbb
stc
cld
addr16
cmp
lock
mov
inc
pop
jb
push
jle
out
jb
test
loop
dec
into
decl
jle
lods
push
inc
jecxz
loopne
cld
sbb
cmpsb
xorb
imul
sub
nop
loope
xor
bnd
js
addr16
mov
mov
test
cmp
out
xchg
add
mov
and
pop
cld
inc
mov
popf
mov
mov
mov
jno
cmp
rcrb
mov
jge
jno
push
xchg
inc
ret
movsb
cld
test
jo
mov
aas
sub
mov
cld
frstor
lcall
sub
xchg
dec
pop
movsb
repnz
mov
jb
sub
lea
mov
rcrl
testb
dec
mov
data16
or
xchg
ret
ror
push
pop
cld
out
mov
or
dec
sahf
mov
jle
jle
add
aas
bound
lea
add
insb
or
add
xchg
lock
fs
fcoml
cld
cmpsl
roll
cmp
cld
pop
mov
sahf
aam
insb
ret
adc
pop
add
iret
and
push
pop
xchg
xchg
les
xor
lcall
js
mov
stc
test
mov
scas
mov
fsub
out
movsl
dec
xor
lods
and
xchg
add
mov
shr
nop
enter
cld
in
pop
dec
insl
jge
add
push
lcall
push
call
adc
push
in
fimuls
pusha
fnsave
imul
pop
push
pop
xchg
dec
loope
sbb
xorb
or
xor
add
and
ja
fs
fsts
ds
test
add
ret
loope
adcb
dec
jp
sarb
dec
mov
loop
fcompl
xchg
popf
jecxz
cmpsb
cwtl
mov
imul
xchg
fs
jmp
insl
bound
and
xor
jle
jge
xor
or
jns
addr16
inc
add
in
mov
xchg
xchg
pop
push
repz
lods
or
or
mov
jl
inc
shll
xchg
nop
xchg
movsb
pushf
xchg
aas
xchg
jecxz
loopne
jnp
loop
incb
cs
int3
mov
sbb
sbb
dec
mov
add
mov
or
dec
lea
clc
dec
aad
enter
mov
mov
fsub
jmp
call
rolb
leave
and
mov
rorb
int
in
popa
fdivrl
inc
mov
test
popf
mov
pop
mov
dec
les
lods
dec
cmpsl
mov
and
jg
lcall
aas
mov
sub
cli
mov
mov
and
popw
outsl
pop
stos
stc
lock
and
ret
add
aam
xor
jbe
mov
enter
xchg
push
jp
adc
repnz
faddp
int
push
dec
mov
inc
pusha
xchg
ljmp
clc
dec
dec
pop
in
lea
sub
pop
pop
adc
mov
sbb
pop
mov
and
cmpl
push
cmpsb
push
icebp
and
mov
mov
loope
ss
dec
nop
sub
fnsave
dec
sbb
sub
adc
xor
es
sub
iret
insl
int
popf
mov
dec
shl
clc
adcb
inc
lods
lret
xchg
push
sbb
sti
jae
xor
test
adc
cmp
test
call
push
test
inc
jo
insb
out
cmp
xchg
cmp
mov
rcrb
adc
push
sbb
fsubrl
leave
ficoms
loope
xchg
inc
add
std
cli
out
ffreep
add
mov
mov
es
xor
mov
ss
int
pushf
icebp
enter
sbb
jbe
jbe
ficoml
bound
sar
mov
push
pop
ret
negb
mov
in
jecxz
loope
lock
cmp
mov
inc
das
ja
mov
arpl
popa
dec
pop
cmp
rorl
push
fisubrl
mov
movsb
xchg
nop
dec
or
into
aam
arpl
out
jmp
and
adc
sarb
pusha
mov
ds
inc
dec
xor
out
and
cmp
adc
mov
imul
mov
insb
add
lret
xchg
push
sbb
jno
call
mov
fldcw
mov
mov
aad
dec
push
mov
subb
dec
mov
add
cmpsb
in
mov
cmp
ficoms
push
push
mov
xchg
in
and
pop
hlt
scas
fmulp
sti
sub
pushl
and
mov
gs
and
lds
pop
cmp
rcr
jmp
cld
inc
adc
roll
jb
mov
and
xor
dec
test
scas
loope
mov
jmp
ljmp
les
cld
or
rcll
outsb
or
mov
cmp
mov
fistps
scas
mov
push
loope
mov
scas
shlb
test
xor
sbb
adc
pop
mov
sub
mov
sub
outsl
sbb
xchg
inc
xchg
and
je
mov
mov
sub
movsb
fwait
dec
push
dec
mov
and
ja
inc
add
stos
inc
adc
and
in
jge
sbb
push
test
dec
adc
into
add
adc
sub
jb
fistps
xor
stc
aam
push
add
dec
sbbb
mov
rorb
inc
add
test
dec
xor
dec
mov
in
jne
pop
adc
adc
dec
mov
cld
popa
int3
loopne
bsf
add
in
push
pop
mov
xchg
ljmp
movsb
outsl
adc
and
or
push
inc
xchg
test
cmp
dec
jle
sti
fisubrs
xor
push
jge
push
call
inc
sbb
dec
loope
jle
movsl
adc
xchg
sub
xor
add
jge
shrb
out
jne
xor
mov
clc
push
mov
mov
out
in
or
cld
fldt
shlb
lock
fnstsw
mov
pop
cld
push
arpl
test
adcb
cmp
popf
test
gs
jecxz
incb
les
loop
push
sub
shrl
fnsave
xor
jp
frndint
ret
inc
and
push
fmull
sub
enter
out
cmp
bound
xchg
inc
fimull
push
sub
pop
xchg
out
pop
xor
repnz
push
add
inc
pop
add
dec
rcll
sub
decl
mov
inc
mov
xor
movzwl
pop
test
mov
stos
inc
test
add
jg
push
mov
sub
mov
jmp
mov
jae
and
jmp
movsb
int
test
movsl
push
mov
pop
mov
jl
sub
sbb
out
out
adc
pop
packssdw
lahf
int
out
aad
lcall
imul
jg
inc
cmp
jge
loopne
lret
enter
mov
test
lods
in
shl
cli
sahf
cmp
cld
jne
lahf
movsb
and
mov
dec
test
arpl
jnp
xor
gs
movsb
mov
cmpsb
cld
push
cmp
mov
mov
fsubrs
es
mov
mov
xchg
cld
add
pop
pop
shrb
and
mov
test
push
and
lret
shll
inc
arpl
mov
jecxz
fdivl
mov
shlb
pop
negb
icebp
shr
or
in
adc
ljmp
mov
push
adcl
icebp
mov
enter
rcrb
inc
dec
cmc
sub
out
mov
mov
jle
or
test
adc
pop
pop
nop
mov
into
push
movsl
push
outsb
js
push
loop
test
outsb
pushf
xor
je
pop
pop
loopne
fmull
dec
mov
or
ffree
pop
mov
mov
and
jge
hlt
add
and
push
lods
nop
sbb
loope
mov
sbbl
push
loope
adc
mov
loopne
incl
push
lret
mulps
dec
imul
inc
movl
push
das
cld
icebp
sub
xchg
adc
mov
cld
fsubrs
rcll
mov
sub
shlb
fxch
dec
out
mov
cld
in
dec
leave
pop
pop
ss
push
fdivrs
jne
fcompl
mov
jmp
lea
push
addb
les
jp
cmovp
xor
pop
sbb
out
ss
mov
adc
jnp
pop
loopne
leave
push
orl
into
or
fsubrl
sti
or
js
shrb
insb
dec
mov
fcompl
pushf
orb
ja
add
imul
ds
negb
or
add
sub
dec
mov
cmp
add
push
mov
inc
push
dec
ljmp
dec
push
add
in
fdivl
pusha
pop
sub
mov
fstpl
mov
sub
stos
sbb
lock
adc
xchg
subb
in
and
fldt
or
inc
loope
lds
shrl
scas
out
pop
push
test
cwtl
mov
sbb
push
pop
or
cmpb
mov
pop
clc
enter
inc
xchg
or
dec
ret
out
add
jl
movsb
adcl
jecxz
add
jb
pop
ret
dec
xchg
iret
js
and
je
jge
lock
push
push
int
sub
mov
cli
cmp
loope
movsb
adc
mov
lcall
mov
or
ret
xchg
jl
ja
xchg
xchg
ficoml
hlt
jmp
test
pop
imul
add
mov
jp
imul
fisubl
dec
cld
shrl
sbb
or
jns
jbe
cmovge
lahf
pop
shll
push
or
shlb
outsl
jl
pop
sub
mov
pop
fmull
sub
cld
sar
mov
dec
popf
lods
sub
outsb
jmp
das
jmp
rcll
push
xor
jns
adc
push
enter
loope
enter
mul
add
adc
repnz
ljmp
pop
inc
test
cmp
int
and
pushf
and
test
push
or
ret
adc
mov
xchg
or
xchg
add
push
ret
pusha
rcrb
push
or
add
sub
les
mov
iret
dec
call
cld
mov
xchg
jl
lea
lea
shl
dec
pop
sbb
fldcw
inc
push
cwtl
out
insb
repnz
push
mov
xchg
mov
inc
xchg
ljmp
subb
mov
test
dec
sbb
movsb
jecxz
adc
adc
jle
ret
sbb
pop
into
in
dec
sub
clc
gs
enter
mov
jnp
enter
enter
mov
jae
sahf
dec
or
popf
in
xchg
lahf
mov
jp
in
hlt
cmc
jno
enter
sbb
fdivs
xchg
mov
or
xorb
mov
into
jae
dec
fldl
shll
filds
fcomip
test
ret
fs
nop
loope
sar
jo
fsubl
pop
adc
mov
lods
lahf
mov
cmpsb
iret
or
iret
dec
roll
fsubrl
mov
mov
je
xchg
mov
loope
repz
movsl
aam
fsubl
repz
jmp
and
mov
lret
mov
daa
sbb
stos
lds
cli
xorl
stos
push
and
cwtl
ud2
jge
rorl
cltd
xchg
outsb
icebp
iret
push
aad
data16
pop
inc
mov
ret
cld
cmp
ret
mov
and
shll
out
repnz
in
lods
cmpsl
sub
jae
sub
mov
adc
pushf
imul
psubsb
ret
shl
adc
cmp
jecxz
ja
pop
ljmp
inc
pop
lahf
mov
cs
sti
pop
xchg
add
jge
cld
lcall
rolb
cld
push
imul
flds
cli
add
js
out
in
js
stos
xchg
into
int
sbb
sbbl
faddl
jp
mov
bound
sbb
xchg
in
sub
xchg
mov
lret
nop
sbb
add
sub
loope
bound
testb
imul
and
mov
cmp
andb
test
scas
enter
movsl
and
sbb
add
mov
fmull
outsb
add
mov
test
in
fsubl
fwait
xchg
adc
rorb
addb
hlt
push
in
xchg
ja
cli
psadbw
pop
lods
sbb
pop
loopne
das
ljmp
xor
ret
jecxz
inc
jno
jbe
repnz
lock
sub
cmp
imul
dec
fld
mov
es
ret
out
ss
xchg
sbb
adc
dec
mov
sbbl
ja
mov
jbe
arpl
shrl
imul
clc
sub
lahf
sti
jl
loopne
ljmp
rcrb
fucom
mov
test
loope
and
cmpsl
das
cwtl
shlb
mov
sbb
lahf
scas
sarl
xor
int3
adc
fdivl
xor
mov
mov
out
loope
jne
xchg
loopne
and
xchg
push
popa
in
gs
movsb
mov
les
mov
sarb
cld
xchg
adc
fsubl
fmul
mov
cmpsl
in
test
mov
pop
pop
ds
or
cs
pop
xor
lret
mov
push
push
popa
testl
nop
mov
insb
movsl
mov
mov
in
pop
push
jg
sub
cs
les
fidivrl
popf
fwait
nop
jle
sbb
lret
orb
jmp
mov
inc
inc
fwait
rcr
enter
aam
shlb
adc
mov
sbb
cmp
push
out
inc
outsb
mov
cmp
pop
inc
ljmp
call
and
mov
stos
and
divb
in
lret
icebp
jp
mov
and
push
movsb
cld
adc
orl
test
dec
cli
inc
push
adc
fstl
loope
or
mov
inc
adc
out
mov
loope
mov
push
jmp
incb
mov
sub
scas
mov
jne
mov
pop
jno
subb
rorl
test
cld
into
push
push
dec
mov
xchg
adc
inc
insl
mov
xchg
sub
mov
xor
aaa
adc
inc
test
xchg
std
push
mov
ret
and
aam
adc
inc
dec
cld
sub
mov
adcl
mov
shlb
dec
sub
pop
dec
jno
in
cmp
jmp
mov
pop
jmp
decl
roll
xchg
lret
push
pop
push
cld
or
xchg
mov
fisubl
sti
and
pop
inc
test
movsb
add
lock
bnd
jb
push
cwtl
mov
mov
mov
and
and
shr
subl
nop
out
scas
push
test
call
faddl
es
jmp
or
or
daa
stos
sbb
out
sbb
insb
outsl
sub
mov
mov
loop
rcr
jbe
stos
mov
push
dec
aam
adc
cmp
es
popl
xchg
push
sbb
and
hlt
xchg
fwait
dec
cmp
xchg
pusha
lcall
inc
cmpl
in
cmp
ljmp
mov
stc
roll
mov
or
mov
sub
into
cmpb
test
outsb
add
test
mov
call
les
and
cmp
test
pop
inc
imul
sbb
lods
ret
xlat
mov
push
mov
movsl
sub
loopne
lock
dec
in
mov
aaa
cli
aam
bound
mov
mov
push
inc
adc
icebp
jmp
pop
ss
gs
or
mov
scas
or
lods
adc
pop
loope
xchg
cmp
mov
popf
cmp
test
jmp
sbb
int
add
jge
insl
jmp
adc
dec
rep
icebp
stos
loope
stc
rcrb
mov
fldcw
insb
roll
or
xchg
dec
data16
cld
jle
mov
dec
loopne
in
mov
add
mov
push
fwait
sub
ds
je
sbb
cmp
rclb
push
popa
ds
and
push
mov
in
in
fcmove
std
addb
popa
dec
dec
inc
mov
or
incb
lret
inc
shl
xor
packssdw
xchg
aas
call
call
mov
aas
fcomps
inc
sarl
jle
mov
enter
jecxz
cld
mov
and
std
push
or
and
insl
pop
xchg
js
popa
shr
ss
dec
lahf
dec
xor
cmp
xchg
shlb
push
mov
loope
ja
mov
inc
jns
and
push
ja
pusha
jge
sub
inc
ljmp
int3
push
mov
cli
jle
push
and
mov
mov
in
clc
loopne
rolb
inc
and
fidivl
add
cld
mov
sbb
out
xchg
repz
fisubs
ret
les
inc
pop
adc
jle
es
dec
fs
scas
jbe
mov
mov
sub
mov
dec
subb
adc
cmp
loope
leave
dec
loop
mov
ficoml
in
pop
and
mov
inc
mov
dec
hlt
dec
pop
std
stc
pop
cmpsb
loope
sub
xlat
and
push
ja
jae
ror
inc
push
aas
mov
inc
in
gs
inc
outsl
cltd
iret
xor
in
cmp
lods
push
outsb
mov
rolb
cld
clc
sbb
fisubs
std
xor
loope
lock
dec
and
outsb
and
dec
lcall
mov
in
push
xchg
iret
inc
mov
mov
sub
daa
out
jecxz
add
sub
xchg
repnz
rcrb
mov
imul
sbb
hlt
add
pop
xchg
lods
pop
cmpsb
faddp
sti
pushf
subl
add
push
add
sbb
cmp
arpl
test
mov
loopne
repnz
mov
push
ret
cmpsl
or
ret
pushf
arpl
add
cmc
xchg
lods
mov
xchg
sarb
int
clc
rcll
push
inc
fildll
bound
mov
aam
push
fdivrs
movsb
and
and
je
cmp
pop
jo
popf
cld
adc
mov
mov
xchg
mov
add
cmpsb
orl
fcoml
and
incl
push
mov
jmp
shl
pushl
popf
stc
xor
sub
int3
in
sub
add
xlat
mov
mov
int3
fcoml
push
ror
popa
sub
ffree
mov
lahf
inc
test
pop
xchg
xchg
test
faddl
icebp
cmp
push
in
adc
std
pop
xchg
dec
pop
mul
nop
sbb
out
mov
ljmp
andb
jg
dec
out
shr
jl
repnz
sub
stc
or
into
inc
aaa
push
cmp
mov
lds
mov
lock
push
mov
adc
push
loopne
mov
cmp
cmp
mov
pop
lds
dec
loopne
imul
lds
push
inc
lea
adc
in
pushf
add
cmpl
fnstsw
dec
test
rcr
shll
sbb
jne
aad
inc
loope
push
into
iret
sti
test
jbe,pt
xchg
addl
iret
andb
insb
mov
test
mov
outsl
icebp
mov
sub
call
sub
push
mov
push
mov
int
icebp
add
adc
loope
cld
mov
xchg
and
mov
xchg
movl
pop
and
push
mov
pop
jecxz
fsubl
mov
and
jmp
jne
pop
dec
jg
xchg
ret
dec
xchg
cmp
ret
cld
xchg
mov
push
ljmp
jmp
pop
xchg
pop
aas
mov
jne
hlt
adc
cmovs
jbe
imul
out
scas
imulb
sub
ds
lods
repnz
mov
aas
call
mov
dec
push
notb
sbb
xor
movsb
jg
sub
mov
inc
xlat
jmp
out
cmc
jg
adc
adc
pop
dec
mov
bnd
lcall
mov
or
aam
cmpsl
and
fsubrl
lea
das
xor
cmc
les
pusha
rcll
stc
sbb
imul
pop
es
iret
icebp
inc
aam
sub
repnz
jae
push
imul
lcall
rcrl
adc
stc
outsl
je
insb
jge
fisubl
jl
xchg
mov
inc
je
sub
add
add
enter
rcl
xchg
fildll
and
cli
dec
daa
lret
mov
inc
inc
adc
jecxz
jmp
cwtl
pop
out
mov
loop
xchg
cli
testb
cltd
push
call
mov
aad
dec
scas
xchg
insb
stos
outsl
loopne
inc
fbstp
lret
test
xor
arpl
sbb
lcall
push
movsb
and
leave
cmp
ds
mov
das
test
fidivs
pop
mov
stos
and
adc
dec
mov
test
fwait
inc
add
stos
mov
repz
stos
out
jb
push
out
decb
jmp
hlt
mov
pop
pop
leave
xor
xchg
iret
rcrb
test
adc
ds
repnz
xchg
popa
insb
add
mov
push
lods
test
add
insl
ljmp
xchg
inc
decl
popf
and
adc
stc
xchg
mov
pop
sarb
mov
loopne
insl
cmpsb
cmp
mov
rol
fsubl
add
inc
xor
jle
lret
mov
inc
cld
and
jg
sub
xchg
xor
mov
push
lret
sahf
shl
int
stos
rol
adcl
fiadds
jle
jbe
and
jne
push
cld
pop
dec
mov
mov
mov
jle
shl
jb
cmp
shlb
inc
psubsw
jnp
aam
ja
inc
repz
gs
je
daa
mov
mov
loope
imul
psrad
jae
fdivr
testb
push
push
mov
lock
lods
jle
hlt
cwtl
rorl
and
push
and
xchg
push
sub
cmovnp
dec
jp
push
cmp
mov
cltd
pop
filds
push
fimull
mov
add
lahf
lds
ljmp
in
mov
enter
fisubrl
incl
stos
xchg
test
jbe
push
aam
lock
cmp
icebp
mov
cld
sub
sub
sub
mov
or
roll
les
mov
inc
enter
aam
or
mov
mov
daa
out
cmp
cmp
outsl
or
push
inc
push
fsubrp
xchg
mov
data16
jg
rcrb
out
outsb
xor
loopne
icebp
cmp
roll
dec
inc
xchg
rclb
and
push
fiaddl
jge
loope
lea
jmp
sub
add
outsl
mov
cli
inc
lods
popf
mov
into
mov
out
lahf
lods
cmp
push
mov
enter
rorl
or
xchg
fiaddl
mov
fwait
mov
sbb
mov
insl
pop
jae
mov
mov
jbe
xchg
in
and
adc
les
cltd
mov
dec
inc
cld
add
ljmp
jns
loope
and
nop
daa
bswap
add
movd
jle
lcall
roll
adc
dec
cwtl
out
push
add
cld
out
mov
xlat
addr16
sbb
das
inc
inc
xchg
pusha
cmp
xchg
test
popa
mov
mov
clc
inc
ret
sti
xchg
adc
hlt
push
sub
adc
sub
push
test
push
fnstsw
adc
in
sbb
xchg
negb
inc
psubd
dec
and
shl
mov
jbe
add
push
mov
mov
movsl
int3
dec
xchg
mov
std
sti
in
cli
and
sbb
rcrl
les
xchg
dec
mov
shrl
sub
adc
or
push
cmpb
mov
mov
or
pop
shl
pop
int
xlat
push
int3
hlt
and
sbb
cmpsb
aas
add
jp
pusha
rolb
aam
sub
mov
rcrb
pop
cs
xor
fisttpl
xchg
loope
jmp
ds
mov
mov
mov
decb
adc
adc
mov
fs
lret
mov
sarl
fisubs
or
shl
out
lock
cmp
in
roll
pop
push
mov
pushf
xorb
loope
cld
push
xor
stos
and
fwait
adc
movsl
mov
dec
xor
and
cli
xchg
adc
dec
or
sbb
movsl
pop
cltd
adcb
mov
cld
pusha
les
fsts
xchg
jbe
cmp
add
jbe
fnstsw
add
dec
stos
dec
xchg
bound
fsubrl
jns
sub
test
mov
jo
cs
loopne
lret
les
or
andl
dec
ret
pushf
jo
iret
popf
add
subb
lcall
mov
arpl
testl
mov
cli
mov
push
call
push
jecxz
jno
outsl
adc
or
push
mov
shr
gs
mov
push
pop
mov
adc
mov
int
test
fiaddl
mov
imul
test
xor
mov
andl
lds
or
ficompl
nop
into
loope
adc
hlt
pop
in
adc
bound
frstor
les
fistps
jle
mov
xlat
test
stos
xor
hlt
mov
jne
and
mov
fs
clc
sub
mov
jnp
cmp
adc
loopne
orb
fcmovbe
sysexit
push
inc
pop
ror
add
jl
xchg
out
imul
test
add
inc
pop
vpunpcklwd
jne
inc
fs
fcmovu
add
push
rolb
ret
fs
out
dec
xchg
iret
add
jnp
scas
push
out
xor
stc
cmpsb
movsb
pop
mov
inc
fcompl
sub
ret
daa
mov
out
jecxz
mov
sti
dec
repnz
sub
sarb
cmpsl
fisttpll
scas
push
rclb
mov
stc
xchg
loop
mov
cs
adc
mov
inc
cmp
cltd
fcomp
cli
xor
and
dec
loopne
jne
pop
aam
cmp
push
dec
popf
mov
loope
icebp
mov
add
push
cli
fiaddl
mov
popf
sub
out
js
pop
cmpsb
or
addb
loop,pt
aad
std
shll
into
pop
jl
xor
imulb
mov
pusha
sub
addr16
pusha
or
jne
jmp
in
leave
dec
mov
insl
dec
test
adc
push
ret
cwtl
bound
or
jne
movsb
ljmp
sub
sbb
lahf
mov
fiadds
imul
xchg
adc
hlt
pop
ljmp
mov
stos
stos
lds
dec
mov
inc
xor
fucompp
movsb
push
repz
int3
sub
popf
adc
dec
into
std
or
fiaddl
push
and
inc
cmpl
int
out
jnp
sbb
into
and
bound
mov
in
and
bound
jo
jmp
mov
mov
sub
pusha
xchg
cmpsl
jne
jmp
sub
xchg
divb
cmp
outsb
aad
subl
ss
jecxz
dec
ja
outsl
jmp
leave
test
adc
das
in
mov
ljmp
cmpsb
xchg
adc
jmp
stos
add
and
jnp
arpl
jge
cmp
push
outsb
sub
push
fidivl
dec
add
pop
and
adc
in
in
cltd
mov
xor
jnp
in
in
lret
pop
sub
mov
fcoml
mov
jns
leave
jmp
insb
sub
pop
or
loope
movsb
or
loopne
push
sbb
jle
pop
test
mov
ret
jno
lret
and
popl
dec
add
adc
movsb
pop
or
rorb
les
dec
aas
loope
jbe
or
add
incl
ja
sbb
in
add
mov
mov
adc
aas
mov
cmp
xor
imull
mov
mov
lcall
pop
pusha
or
int
mov
sti
mov
push
shl
fsubrl
stc
out
lock
in
xchg
aad
loope
inc
or
out
es
lret
jo
jl
shrl
movsb
imul
call
sub
dec
mov
out
xor
adc
imull
jae
scas
mov
mov
dec
shll
rclb
xor
add
cmpsl
daa
mov
and
xor
mov
xchg
lret
jecxz
pop
adc
ljmp
jae
rolb
stos
sub
sbb
jl
lock
pop
out
push
push
addb
shlb
push
mov
xchg
int
mov
test
push
lods
ret
movsl
adcb
sarl
mov
mov
loopne
bnd
int3
test
or
pop
loope
push
cld
sbb
push
dec
jl
xchg
pop
cli
shl
mov
sarb
jb
je
loop
adc
xor
inc
cld
sbb
mov
sahf
jne
ret
jb
jne
jg
mov
add
adc
jae
mov
pop
push
in
call
hlt
movsb
jecxz
sysret
xchg
sbb
iret
push
and
loope
mov
jno
adc
rolb
xor
mov
dec
lret
pop
jae
mov
rorl
clc
add
mov
pop
shll
mov
push
mov
mov
or
cmpsb
push
movsb
rcrl
aad
inc
push
mov
mov
jecxz
inc
xchg
lea
mov
adc
test
nop
pop
popf
hlt
add
js
push
cltd
cmpb
imul
mov
cmpsl
mov
ds
shll
xchg
mov
aad
clc
mov
or
addl
xor
mov
jle
testl
je
fisubl
fidivrs
fdivl
pop
lods
div
outsb
pop
pushf
dec
mov
push
leave
pop
mov
lods
jle
push
test
enter
je
stc
jecxz
subb
cld
scas
ffreep
pop
mov
ljmp
sub
loopne,pn
dec
add
xor
fisttpll
push
ret
into
fdivrl
dec
adc
push
cmp
push
lock
int3
inc
and
movsb
xchg
hlt
fs
mov
std
add
xor
gs
pusha
fsubl
shl
or
loop
aaa
das
fnstenv
jmp
cmc
pop
nop
lods
add
cs
push
cmp
mov
stos
dec
lds
jecxz
daa
sub
push
fdivp
dec
and
sar
adc
dec
lea
cli
mov
adc
out
pusha
cmp
mov
popf
sbb
sub
mov
fcmovnu
std
pushf
xor
and
xor
cld
sarl
les
test
mov
xchg
push
imul
mov
aam
lds
fucomip
es
mov
push
sub
test
sub
inc
sbb
sub
out
pop
and
mov
ret
stos
sub
stos
rcrl
imul
push
sub
mov
rcrb
mov
leave
xchg
ret
int3
test
je
shlb
les
xor
mov
mov
cmp
sbb
in
xor
pop
test
clc
mov
jnp
mov
pop
jns
ret
insb
jle
sub
out
inc
in
scas
mov
push
xor
cli
ret
hlt
into
imull
sbb
inc
mov
sbb
mov
pop
mov
in
xchg
mov
dec
push
sti
mul
adc
inc
inc
push
mov
cmp
adc
repz
mov
pop
jl
test
mov
or
rorb
xchg
rclb
sub
movb
mov
outsb
std
ljmp
std
cmpsl
xor
cmp
inc
ja
xchg
mov
sub
dec
sub
enter
jmp
ljmp
testl
pop
pop
loope
pop
push
in
stos
mov
popa
push
and
sbb
fs
adc
pop
shrb
lods
jno
push
pop
std
cmp
or
sarl
cmp
jo
xchg
cld
mov
push
xchg
dec
ficomps
xor
mov
in
rcll
push
rcll
hlt
xchg
iret
ljmp
sbb
sbb
dec
stos
adc
cwtl
inc
test
pushf
push
or
mov
jne
out
mov
aam
mov
loope
movsl
inc
xorl
test
mov
outsb
data16
rcr
push
pop
mov
dec
adc
in
mov
cld
insb
nop
inc
ds
cmp
push
into
add
jb
ds
int3
push
int3
inc
xor
pop
clc
outsb
mov
ret
mov
aam
jb
xchg
nop
mov
fs
pop
push
push
push
dec
out
int
test
movsl
adc
and
lods
test
inc
jnp
jb
sub
fiadds
stos
push
push
adc
cld
inc
decb
les
loopne
stc
rol
insl
test
sub
xor
insl
jb
pop
pop
xorb
or
and
jg
jecxz
jno
popa
data16
mov
cld
jge
movsb
cwtl
stos
mov
push
adc
push
jnp
mov
adc
loop
jg
fcmove
dec
push
cltd
cmp
ljmp
dec
fldt
ret
bound
sub
inc
mov
call
mov
xchg
ror
fsubl
inc
test
jnp
lret
cwtl
lahf
sbb
dec
mov
xchg
sbb
imul
insl
sub
jne
sub
dec
mov
inc
inc
subb
xchg
mov
loope
inc
sub
mov
mov
rcl
addb
inc
rcrl
filds
repz
hlt
mov
jmp
mov
mov
sbb
mov
sub
es
pop
and
xchg
push
sbb
daa
cmpsl
scas
pop
lock
jbe
mov
xchg
insb
dec
ret
sbb
sbb
out
xchg
xchg
pop
lods
dec
daa
outsb
or
fidivrl
jecxz
orl
idiv
xchg
xchg
fs
cld
mov
movntq
out
adc
dec
jecxz
or
push
hlt
jl
sarl
jle
adc
push
bnd
pop
aaa
sbb
rcl
les
sub
sbb
push
and
cmp
shll
push
scas
xchg
add
or
or
cld
mov
sahf
lods
lods
sub
sub
adcl
dec
push
xchg
jno
jb
rcrl
add
fcoms
roll
jle
pushf
in
in
or
push
mov
mov
or
icebp
fld
pop
mov
ja
cmp
pop
pop
mov
sbb
mov
imul
incl
xchg
mov
mov
in
fstl
sbb
jne
xchg
rcll
sbbb
ljmp
sub
mov
pop
jg
mov
enter
jns
repnz
mov
mov
mov
imul
pop
xchg
divl
mov
lods
dec
and
and
push
into
mov
inc
subb
aad
mov
add
adc
jmp
je
cld
mov
pop
or
push
and
xor
out
mov
xor
and
sbb
test
cmp
test
add
push
mov
mov
adc
mov
test
push
loope
cmp
jns
push
add
dec
cmpsb
shll
test
test
mov
jmp
stos
mov
inc
lret
dec
mov
mov
xchg
xchg
jmp
orl
mov
sahf
addl
adc
cmpl
adc
push
ljmp
mov
adc
je
pop
sahf
leave
dec
dec
mov
decb
push
push
add
rcrb
pop
icebp
mov
insb
mov
add
xchg
fiaddl
sbb
pushf
addb
pop
test
nop
rcr
push
pop
push
shrb
add
daa
inc
ss
sbb
dec
adc
ficoms
sub
pusha
xchg
in
lcall
push
incb
lds
test
stc
sahf
fs
sbb
inc
pop
jp
xlat
cmp
mov
movsl
or
push
ret
fadds
arpl
imul
sub
mov
ret
test
sub
mov
es
repz
sub
icebp
enter
push
scas
repnz
fsubl
rolb
xor
movups
cmc
push
movsb
aam
inc
sarl
pop
xor
test
pusha
cld
sbb
stc
jmp
inc
jge
enter
das
mov
dec
or
mov
and
sub
fsubr
and
xor
push
push
push
or
jo
mov
push
outsb
cmc
adc
push
sarl
dec
repnz
cmp
mov
fstpl
lods
dec
mov
cmp
mov
sbb
push
shl
cmpsl
out
sub
jno
enter
inc
cld
mov
clc
mov
jle
jbe
pmaxub
test
sub
push
call
lods
insl
mov
cmp
xchg
dec
sub
xchg
mov
and
pop
lcall
mov
jnp
repz
xchg
js
scas
fidivrs
adc
ss
and
subb
ss
lahf
inc
mov
inc
test
loop
in
xchg
adc
add
cmp
sbb
std
int
clc
ds
cmpsb
clc
cmp
inc
mov
jle
add
call
add
repz
mov
jo
mov
jle
andb
adc
xlat
adc
stos
jg
xor
and
loop
sbb
xchg
or
fistpll
imul
shlb
enter
adc
aas
aam
loope
arpl
sub
xorb
movsb
fdivrl
mov
mov
in
dec
repz
pop
sbb
ljmp
cmc
mov
fmul
and
xchg
sbb
jecxz
cmp
mov
sub
aas
pop
shl
enter
int3
push
ret
cmc
dec
adc
inc
movsb
mov
shr
ss
mov
dec
mov
cmp
jecxz
mov
outsl
hlt
insb
out
or
pop
leave
jb
nop
pop
test
jge
or
in
rol
cmp
and
pop
ficomps
pop
push
push
ss
mov
ja
les
in
repnz
cmp
outsb
mov
xchg
ds
push
mov
lock
adc
push
xchg
mov
xchg
int
pop
test
ss
idivl
cltd
ljmp
or
fstl
and
mov
mov
cld
cmpl
sbb
pop
scas
nop
xchg
test
dec
mov
lret
out
jbe
cli
std
das
enter
cmp
cmp
ficomps
mov
mov
mov
cmc
cli
icebp
jns
cmp
mov
push
hlt
aaa
dec
repnz
jno
pop
out
out
adc
aam
in
add
xlat
lods
pop
lds
xor
mov
or
cltd
push
cld
inc
jge
dec
xlat
mov
dec
dec
fcoms
movsl
lahf
movsb
adc
mov
mov
jp
js
mov
mov
cltd
mov
shr
cmp
or
xchg
pop
dec
test
and
mov
iret
mov
xor
out
daa
mov
mov
roll
or
jle
jb
call
sub
mov
mov
stos
outsb
movsl
cld
cwtl
cld
dec
test
ds
into
stos
mov
inc
sbb
adcl
push
jne
ljmp
iret
adc
or
pop
in
lret
jae
stc
ds
mov
mov
fidivs
xchg
adcb
or
dec
sub
outsb
scas
jg
pop
mov
jo
cmpsl
inc
int
cli
test
inc
movsb
mov
pushf
and
mov
aam
into
jno
in
mov
jbe
cli
test
hlt
ljmp
jb
fimull
jmp
jle
clc
mov
lds
iret
cli
test
push
cmpsl
adc
add
in
lcall
into
test
sar
ffreep
fdivl
insl
aam
mov
int
cmpb
aam
das
mov
out
dec
mov
add
repz
cld
dec
add
mov
cmp
test
jmp
xchg
aaa
or
cmc
xchg
push
push
int3
add
or
dec
adc
xor
or
pop
daa
punpcklbw
dec
push
fsubrp
add
roll
iret
outsl
lea
popa
xor
movsb
dec
mov
fmull
divb
mov
push
scas
mov
sub
dec
js
push
sub
and
push
dec
inc
cmp
and
in
sub
pop
cld
subb
pusha
ljmp
incb
test
rcr
iret
pop
inc
subb
mov
sti
fwait
inc
cmp
lret
sub
jo
adc
stc
lds
pusha
insl
inc
fadd
xchg
mov
enter
mov
mov
ljmp
subb
hlt
jne
sbbl
aad
dec
and
dec
jl
adc
fbld
inc
loopne
and
pop
inc
lds
mov
mov
cmp
adc
cmc
push
icebp
jle
ja
sbb
mov
rcrb
mov
cmp
xchg
adc
insl
push
repnz
xchg
imul
and
push
outsb
cld
push
inc
push
mov
rolb
dec
movsl
xor
loopne
sbb
jbe
push
loope
dec
ds
mov
sbb
insl
js
mov
cld
xchg
lock
sbb
push
movsb
loope
jecxz
and
sub
mov
add
andb
jecxz
jb
jecxz
hlt
aad
or
mov
dec
dec
dec
jae
and
outsl
fstl
cmpb
aaa
fisubs
int3
rcll
repnz
ljmp
add
enter
adc
fldcw
js
push
sub
cld
cld
addr16
xor
push
enter
stos
jnp
stos
xchg
add
or
es
rorb
adc
xchg
and
jae
into
inc
push
aas
stos
sbb
std
mov
shll
pop
ret
inc
cld
sub
xor
movsb
pop
adc
push
mov
xchg
lds
lock
roll
movl
xchg
aam
jnp
and
add
mov
jmp
in
loopne
repz
cld
rolb
or
fsubrp
and
fiaddl
dec
pop
cmc
mov
cmpsl
int3
es
and
cld
jne
mov
jl
mov
mov
lret
lds
lock
fimull
dec
scas
inc
daa
xor
js
dec
mov
out
dec
sub
sarl
push
fstp
sarb
push
push
outsb
inc
xchg
into
ljmp
fcoml
push
mov
push
mov
bound
stos
push
hlt
jbe
fisubl
mov
cmc
add
lods
rol
cld
inc
cmpsl
scas
add
fldenv
sbb
or
test
data16
or
je
shrl
aam
xchg
aad
sti
stos
loope
sub
hlt
inc
aam
les
push
xor
add
insl
jecxz
or
dec
lahf
dec
push
je
movsl
push
repnz
sahf
shlb
movsl
test
push
bound
cld
and
mov
cltd
or
jns
sbb
jno
jle
shll
test
sub
pop
xor
paddb
insb
mov
mov
dec
mov
popa
xor
fcoml
push
imul
mov
mov
pop
mov
aaa
sbb
stos
xor
push
sbb
push
bound
xchg
inc
or
dec
and
dec
adc
mov
loope
xor
call
sbb
push
inc
jecxz
add
pop
cld
cmpsb
jb
jl
mov
jbe
fst
sbb
cmp
imul
sbb
fisttpll
ljmp
sahf
aad
icebp
add
inc
pop
jmp
lea
push
cld
in
and
lahf
cltd
fcoms
mov
and
mov
pushf
gs
jmp
rcr
jecxz
sub
xchg
xor
push
std
and
pop
mov
ror
les
loope
out
test
cmp
cmp
in
outsl
pop
xor
cli
popa
gs
push
movsb
mov
jmp
cmp
push
mov
and
bound
adc
mov
inc
jge
xchg
inc
adc
fwait
std
sub
xchg
stos
fdivrp
push
mov
outsb
push
lcall
mov
sub
push
jo
dec
aas
pop
cmp
jne
mov
sbb
mov
jecxz
dec
arpl
std
loope
daa
xchg
sti
or
pop
jecxz
push
test
add
test
xor
dec
iret
jne
into
and
add
xchg
arpl
pusha
cli
sbb
rclb
jmp
add
inc
in
fdivrl
mov
inc
repnz
mov
mov
jecxz
adc
cld
push
cmc
inc
sub
pand
decb
inc
out
sub
mov
imul
ret
jg
dec
xor
dec
and
movsb
xor
mov
push
adc
test
imul
cmp
nop
fchs
fs
dec
outsb
inc
and
test
in
jb
jo
repnz
jecxz
mov
inc
test
adc
in
push
push
cmp
mov
mov
jmp
xchg
cld
sahf
sub
rolb
js
insl
ficoms
out
inc
in
les
jnp
push
popa
cmc
push
cld
jmp
cmp
stos
outsb
ljmp
xchg
stos
into
and
sub
aam
xchg
roll
sub
push
repz
add
adc
out
lods
cld
insb
notb
adc
xor
daa
loope
jg
outsb
add
les
in
cmc
jne
or
in
jae
jl
sub
out
shll
sbb
push
cli
mov
xchg
mov
movsb
rol
movsb
push
ds
aas
lret
xor
sub
inc
mov
dec
jmp
lds
loope
ret
mov
pop
std
mov
pop
push
sarb
mov
mov
and
inc
ljmp
fcompl
outsl
adc
lock
inc
add
inc
jae
jne
push
mov
xor
stos
mov
mov
pop
fcmovu
ds
shll
test
sub
imul
jmp
mov
faddl
pop
sti
ss
hlt
in
jns
das
cld
jb
xor
adc
sub
pop
sarl
mov
pop
mov
icebp
in
cmpsl
dec
shrl
and
adc
and
cmpsb
xchg
sub
out
outsb
pop
pop
cmp
mov
pop
pop
jge
and
test
push
xor
adc
sbb
mov
rcrb
ficoml
insb
cmpsl
inc
cmp
lods
loop
xchg
pop
loop
lds
or
ret
ss
sbb
fnsave
loopne
push
iret
jbe
pop
cli
cmp
inc
sub
pop
insl
and
loop
mov
xchg
sbb
inc
stos
push
popa
push
and
add
enter
inc
lock
pop
js
lahf
loop
sarb
lods
mov
push
frstor
cmp
mov
clc
push
mov
mov
stos
je
notb
bound
lcall
sub
jle
adc
jl
push
test
dec
xor
cmp
mov
das
jns
push
fnsave
and
and
fidivl
dec
cld
pushaw
popf
xchg
adc
and
enter
cltd
les
dec
lret
sar
in
mov
das
push
adc
int
adc
add
arpl
jno
lods
push
insb
scas
repz
idivb
jnp
je
cld
aaa
inc
push
pop
mov
xchg
mov
mov
dec
add
adc
test
insl
in
out
mov
push
lahf
test
lret
aaa
ret
xchg
std
jle
leave
movsb
out
push
test
pop
decb
pop
dec
mov
mov
xor
or
mov
lahf
hlt
lods
push
das
bound
inc
pop
xor
lods
and
mov
out
mov
out
fmull
out
sbb
mov
aam
inc
jmp
jle
dec
dec
into
mov
loope
adc
jl
cwtl
ret
je
std
out
ss
scas
and
sbb
rcl
enter
mov
fsubp
inc
fidivrl
xchg
jg
sbb
arpl
mov
cld
or
pop
push
in
outsl
lock
addr16
xchg
out
in
lret
sbbl
add
inc
push
or
lret
xchg
adc
push
sbb
les
sub
je
scas
mov
and
cltd
xchg
pop
push
popa
mov
jle
adc
scas
mov
repz
cld
adc
fstpl
xchg
push
dec
and
mov
jp
imull
and
popa
jg
and
mov
jecxz
cld
mov
fidivrl
ret
push
fisubl
mov
cltd
icebp
loopne
cmpl
outsl
sub
neg
or
pop
ljmp
pop
push
mov
stos
sub
gs
xchg
popa
dec
cld
outsb
push
and
aam
mov
jbe
or
dec
das
leave
repnz
xchg
and
into
fmul
mov
ret
adc
pop
repz
cld
mull
outsb
cld
es
jmp
mov
ret
aad
cmp
mov
cld
ljmp
sbb
out
cmp
cli
aas
clc
daa
ret
scas
imul
dec
mov
pushw
or
unpckhps
xlat
out
add
mov
jg
jl
stc
jne
cmp
icebp
testl
and
shrl
lcall
sbb
ret
inc
iret
sub
lds
sbb
push
mov
sti
out
insl
push
incb
dec
psubsw
lds
xchg
xor
jmp
ret
or
cmp
sbb
mov
rolb
in
pop
sub
fisubrl
push
fwait
mov
jecxz
pop
jle
outsb
hlt
ffree
xor
frstor
inc
int
shrb
ja
cmc
clc
sbb
jns
inc
in
ds
sub
out
repnz
and
mov
std
adc
add
movsl
lahf
push
cmpsb
mov
sbb
movsb
das
in
add
aad
sub
aad
xor
add
stc
sub
pusha
lcall
add
jae
mov
sub
and
pop
movsb
mov
fsts
lock
cld
cmpsb
adc
in
push
out
rolb
aam
in
cmp
pop
push
and
nop
ljmp
mov
pop
rorb
rol
sub
and
push
cmp
and
pop
xchg
aam
lret
mov
leave
arpl
or
inc
adc
fcmovu
test
aad
lds
jae
les
repnz
lret
adc
mov
aad
fdivrl
or
push
sbb
mov
lret
das
jecxz
in
fcmovbe
jb
rolb
pop
ljmp
pop
pop
jl
loope
cld
cli
xor
adc
ret
or
in
and
pushf
dec
jns
stos
sbb
push
sub
jecxz
test
push
ljmp
into
push
aas
lahf
sub
adc
pop
and
mov
jno
fcompl
iret
adc
pop
in
mov
int3
xchg
fildll
jnp
bound
inc
hlt
loopne
jecxz
aam
xchg
cmp
cmpsl
mov
pop
jae
sbb
fsubl
fisubrl
loope
mov
mov
cmp
sbb
movsb
jns
in
lret
arpl
or
fcoms
adc
xor
test
lret
add
add
imul
cmp
fstp
cmp
scas
ja
clc
xchg
fcoml
rol
cmp
or
jge
ret
cmpsl
movsb
dec
jnp
js
movsb
jle
sub
out
int
jge
or
dec
mov
mov
hlt
sbb
add
bound
into
push
jnp
mov
repnz
cmp
jl
pop
in
pop
stos
dec
pop
imul
addl
enter
inc
xchg
call
in
cmpsl
ret
push
push
data16
mov
mov
stos
xchg
adc
jecxz
scas
sub
cld
push
mov
insb
pop
sbb
xchg
subb
inc
xacquire
add
les
and
sti
cmp
rcll
xor
inc
sahf
sbb
jno
pop
push
loopne
mov
hlt
lcall
out
es
arpl
pop
sbb
into
test
xchg
jbe
mov
outsb
mov
fcomip
lcall
or
out
sub
adc
mov
mov
js
test
out
dec
mov
mov
pop
int
in
lods
cmpsb
neg
and
loopne
rclb
mov
aam
jp
adc
outsb
mov
imul
adc
call
sub
dec
adc
ljmp
push
pushf
cli
imul
ret
add
les
cld
into
push
xor
in
fidivrs
adc
lea
out
mov
ficomps
jno
into
mov
or
rcrl
xchg
push
xor
std
cld
imul
rolb
push
frstor
test
loope
test
adc
lods
add
imul
add
sbb
xchg
fdivr
or
jle
sub
icebp
ljmp
js
cs
inc
dec
cmpl
fs
cmpsb
add
cld
ret
movb
ljmp
sbb
repz
enter
adc
aad
adc
xor
cld
repnz
jb
lcall
push
fisttpll
rorl
push
mov
mov
inc
mov
jno
mov
and
rcrb
call
or
pop
pop
push
imulb
mov
test
xchg
int
mov
sub
lods
or
jg
sar
inc
inc
bound
ljmp
icebp
repz
xor
cs
pop
inc
das
stos
sub
test
cmc
cld
call
test
mov
xor
incb
xchg
iret
lahf
sub
jmp
aam
out
shlb
add
loop
xor
lds
push
nop
cld
repz
add
sbb
in
dec
dec
jmp
scas
lods
lods
pop
movsb
adc
jb
mov
mov
push
loopne
scas
push
jb
stos
mov
cmp
mov
cwtl
movsb
mov
or
inc
sub
inc
mov
jne
jns
jmp
xchg
pop
and
add
ljmp
pop
jle
and
lea
adc
movsl
and
and
les
mov
shrl
lea
push
insb
pop
popa
les
imul
ret
stos
rolb
pop
sbb
pusha
arpl
and
mov
mov
pushf
shl
adc
pusha
pop
xlat
and
jl
add
cmp
cmp
rcll
sbb
pop
cltd
adc
fcoml
test
cmc
lods
stc
std
mov
or
imul
out
lods
jnp
add
sub
cmovg
pop
sti
std
pushf
dec
mov
adc
stos
outsb
push
jmp
into
inc
inc
lock
mov
cmp
fistpll
and
int
cld
data16
ja
jmp
mov
mov
and
adc
lret
jb
in
cmp
aam
inc
mov
jmp
and
imul
aas
cld
mov
test
dec
lea
or
push
dec
mov
jne
inc
movsl
lcall
adc
loop
jmp
mov
push
sbb
mov
mov
jle
les
in
repz
mov
lods
inc
push
ljmp
add
in
sar
filds
stos
dec
aaa
push
jmp
fsubs
inc
mov
clc
jns
jg
insl
push
ljmp
add
mov
inc
adcl
mov
pop
inc
push
pop
mov
xchg
movsl
fstl
out
pushl
call
add
stc
inc
int
jo
loop
adc
daa
mov
push
rolb
inc
pop
add
jb
int3
inc
std
es
out
outsb
lret
cs
or
or
mov
sbb
movsb
mov
jge
cs
jb
ret
int3
shr
popf
adc
jecxz
mov
dec
aam
rorl
dec
out
leave
inc
jl
idiv
sub
aaa
cmpsb
dec
repz
jb
int
sbb
psraw
mov
jne
mov
add
push
pop
ja
lcall
mov
mov
add
adc
divb
int
xor
out
jo
cmp
sub
mov
inc
add
iret
xor
out
xchg
fwait
or
outsl
sub
aad
popa
mov
mov
aas
push
pop
lock
mov
cltd
mov
repz
stos
push
movsb
cmp
shlb
es
xchg
xchg
popa
xchg
pop
adc
repnz
aam
arpl
xchg
xchg
adc
and
outsl
into
cmpb
and
jnp
and
inc
sbb
add
jle
rcrl
xlat
ror
ret
in
fstpt
jecxz
arpl
lods
push
es
enter
cwtl
dec
adc
and
pop
jp
push
divl
push
mov
idiv
pop
push
fstl
jecxz
loope
pop
faddl
sbb
call
or
jle
repnz
adc
imul
fcmovnb
adc
dec
xchg
ret
in
mov
lret
sbb
dec
pop
jbe
xchg
lock
jbe
mov
sub
mov
pop
pop
into
jae
adc
mov
ss
sub
or
jno
mov
icebp
pushf
ja
adc
pushf
or
jo
sar
cld
movl
pop
jle
mov
lods
repz
dec
fcmovb
cmp
dec
and
ret
pop
es
jb
fcompl
pop
jns,pt
les
jl
add
ss
stc
push
js
stos
into
int
stos
xor
je
and
aaa
push
push
rclb
in
notl
push
jns
ja
pop
adc
jl
cmp
mov
out
push
inc
lods
jle
mov
mov
mov
into
mov
rorb
test
mov
jnp
out
pop
test
cmp
pop
and
push
push
mov
inc
push
out
pop
push
inc
sbb
mov
mov
ss
cmp
xor
pop
cwtl
inc
mov
pusha
shld
clc
xchg
push
jne
sub
or
dec
xchg
pop
in
loope
dec
mov
data16
dec
mov
inc
xchg
fisubs
push
inc
les
jns
mov
into
xchg
pop
add
sbb
mov
sarb
fisubs
dec
mov
xor
push
inc
push
fs
push
cld
in
insl
cmp
vaddsubpd
sbb
int
jge
ds
jns
mov
in
mov
mov
or
mov
movsb
outsl
sbb
sbbb
ret
int3
imul
mov
enter
stos
add
adc
idiv
out
cmc
dec
lock
dec
aas
xchg
and
or
test
test
push
cld
ret
dec
sub
push
leave
add
and
pop
push
sub
sub
push
add
inc
mov
add
popf
outsl
out
xchg
fucomp
paddusb
mov
outsl
cmpsl
and
loope
aam
jae
popa
mov
fidivs
and
fbld
aas
hlt
xchg
jecxz
jbe
sahf
sarb
fs
pop
jle
lea
sarb
cmp
push
std
xchg
subb
lods
nop
sub
out
dec
inc
push
imul
xchg
push
bound
inc
pop
push
pusha
mov
ja
jae
dec
fidivl
jb
ja
dec
test
das
icebp
pop
repnz
sub
and
insb
mov
lahf
leave
sarl
stos
jmp
pop
dec
test
jg
imul
shl
test
jnp
push
mov
daa
call
cmp
ret
sar
enter
divb
mov
test
lret
push
xchg
int
inc
in
mov
adc
in
movsb
stos
dec
pop
mov
mov
inc
hlt
xchg
out
fs
ret
dec
loope
mov
lock
test
outsb
mov
sbb
fsubrs
orb
out
adc
lret
cld
imul
or
mov
js
inc
in
shl
ljmp
xchg
mov
mov
loope
mov
mov
lods
cmp
movsb
lds
loope
mov
jae
fsubrl
int3
push
xchg
mov
fldl
loope
and
js
xchg
and
pusha
fisttpl
mov
imul
cmpsb
imul
scas
in
pop
ja
stos
or
push
cld
mov
out
ret
in
mov
iret
hlt
sub
scas
in
test
mov
xor
les
mov
jne
bnd
cld
jmp
ds
inc
pop
add
arpl
cmp
subl
mov
pushf
jno
out
cmp
push
cld
sbb
push
xlat
cli
push
and
test
cmp
enter
sarl
adc
fstl
fs
and
scas
mov
or
arpl
inc
repz
hlt
hlt
shl
add
fs
jmp
fcomps
mov
dec
xor
repnz
mov
pop
andb
inc
test
repz
pop
scas
clc
mov
stc
bound
jge
loope
pop
out
aam
xor
xchg
fstpl
arpl
fidivrl
mov
fimull
pop
adc
mov
mov
das
imul
push
add
cs
xchg
cmp
cmpl
loopne
sti
pop
inc
hlt
dec
test
dec
ja
adc
mov
bound
ret
out
subl
jecxz
and
sub
jecxz
mov
mov
push
fs
xchg
sti
jg
int3
sub
rcl
aas
stc
fstpt
sub
xchg
stos
out
stos
aad
pop
aam
jns
add
mov
enter
cwtl
lcall
inc
aas
and
mov
lret
mov
test
clc
cld
sbb
xchg
inc
jle
iret
movl
mov
dec
or
stos
xchg
xlat
cld
inc
cld
pop
cmp
mov
mov
push
sbb
push
inc
xchg
mov
les
xor
mov
movb
push
mov
or
sbb
mov
fisubrl
fdivl
inc
mov
ret
push
jg
dec
daa
test
arpl
into
cmp
jnp
shll
test
cmp
call
repnz
and
fsubl
xor
bound
loopw
fdiv
les
or
lea
jge
stos
scas
out
adc
orl
sbb
loopne
mov
push
std
add
jae
xchg
in
popf
inc
xor
xchg
cmp
mov
jae
sbb
scas
xlat
dec
inc
data16
pusha
out
subl
pushl
cmp
lods
jnp
orb
jbe
pop
loope
andb
push
cld
pop
adc
out
sbb
or
lret
mov
xchg
jle
xlat
ljmp
adc
push
jbe
movsb
cmp
ds
not
adc
fsubl
and
push
cmp
lcall
pop
add
or
or
icebp
clc
pushf
inc
cld
or
cld
inc
inc
xchg
icebp
or
xor
pop
mov
orl
sbb
fwait
loop
sub
pop
mov
cmp
adc
shrl
dec
xor
lret
or
int3
pop
in
pop
mov
inc
cmp
stos
outsb
and
xor
mov
test
popa
repz
inc
stos
movsb
outsl
rcll
mov
inc
push
cmc
mov
loop
xor
mov
fdivrl
dec
add
pusha
cld
dec
outsl
push
mov
mov
call
scas
xchg
arpl
jge
lea
enter
ss
out
fcompl
pop
repnz
out
pop
xor
push
js
jp
jne
sub
xchg
cwtl
mov
xchg
push
loop
fwait
and
call
enter
sti
test
cld
push
in
and
jp
cmp
or
xorb
rorl
imul
or
ljmp
cmpsl
loop
test
enter
inc
cmp
push
cmp
and
and
lods
mov
cmp
shrb
add
sahf
stos
mov
inc
and
jmp
notb
insl
ja
pop
movb
repnz
push
cmpsl
hlt
out
dec
sahf
adc
xchg
xchg
jle
popf
arpl
jnp
dec
push
icebp
in
dec
addb
fiadds
cwtl
push
or
prefetch
or
test
iret
int3
jecxz
add
faddl
lods
push
addr16
cld
push
push
into
xchg
test
stc
adc
push
rorl
mov
scas
mov
push
stc
testl
adcl
lods
mov
into
addl
jg
cld
les
pop
mov
rorb
mov
sahf
mov
xor
rorb
into
push
ret
cmp
inc
or
lahf
cld
cmp
andb
xchg
out
mov
xchg
mov
out
adc
fdivl
push
test
ljmp
add
fwait
xor
cwtl
fsubrl
popa
cmp
inc
jl
lods
mov
aam
xchg
mov
jbe
in
scas
repnz
sub
insb
mov
stos
dec
rolb
adc
mov
arpl
push
cld
rclb
roll
inc
mov
fwait
mov
cmpsl
add
fs
mov
fisttpll
pop
dec
inc
out
out
clc
lock
mov
movb
ljmp
stos
enter
xchg
fdivr
xchg
pop
jmp
sbb
out
iret
mov
decb
aas
into
xor
ss
or
ss
pop
pop
lods
jp
shl
xchg
test
xchg
out
fimull
dec
dec
xchg
data16
iret
fistl
in
mov
sub
lods
jle
cmp
sarb
pop
inc
jmp
cmp
xchg
jp
stos
test
mov
adc
cld
dec
mul
jge
inc
mov
outsb
or
add
rclb
or
adc
cld
sub
andb
fidivl
pop
and
faddl
sub
pop
adc
jo
mov
lea
dec
xchg
cmp
movsb
mov
xchg
xchg
push
inc
lock
sbb
mov
xor
and
fsubrl
adc
cs
aam
pop
add
ljmp
mov
imul
shll
mov
mulb
movsb
add
mov
daa
mov
rcr
adc
cld
sub
loope
lcall
rorl
mov
lds
cs
into
and
loopne
cmp
mov
push
in
cwtl
pop
imul
lods
adc
cmp
inc
popf
xchg
scas
test
or
mov
or
dec
mov
mov
pop
loope,pt
inc
pop
mov
sub
test
mov
inc
mov
xor
shr
pop
xchg
enter
int
xchg
ud0
add
daa
and
mov
xchg
sbb
cld
or
loope
ljmp
mov
or
pop
repz
call
sub
into
inc
sar
stos
insb
mov
repnz
xchg
insl
and
pop
sub
add
mov
mov
or
test
adc
dec
inc
mov
push
shlb
fisttps
xchg
js
fldl
or
movsb
outsl
dec
dec
jnp
bound
lret
push
or
jns
movsb
scas
or
add
mov
loope
mov
xchg
rcrb
dec
loope
repnz
mov
cmp
push
jecxz
out
inc
and
xchg
mov
out
sarb
pop
mov
sub
push
or
adc
cmp
ds
xchg
sub
dec
jle
test
into
aaa
in
fsubl
jmp
push
add
sbb
fnstenv
and
sub
push
push
loope
pop
aas
push
in
icebp
pop
or
xchg
push
pushf
incb
push
fsts
adc
test
sti
mov
push
in
pop
repz
xor
mov
iret
insl
or
adc
xorb
mov
lret
sti
xchg
mov
out
adc
or
into
or
pop
cmovne
inc
jmp
mov
push
lea
ss
cld
outsb
in
push
sarb
push
out
fmul
cmc
dec
pusha
cld
xor
jmp
fdivr
lahf
add
scas
popf
in
in
add
std
jp
aad
jb
jb
and
xchg
mov
rclb
mov
pop
repz
popf
adc
sbb
in
shlb
sub
ficomps
mov
icebp
cmpsl
lcall
scas
imul
pop
mov
xchg
shll
or
push
ret
outsb
push
stos
pop
out
daa
dec
add
test
jb
xchg
jns
xor
rolb
mov
in
mov
incl
jno
push
dec
inc
rcr
movsb
pop
hlt
jle
mov
pop
pop
mov
xchg
into
mov
inc
int
pop
push
repz
icebp
aad
mov
mov
push
popf
jnp
dec
fmul
std
sarl
loopne
or
lods
lea
imul
lret
lea
mov
pop
mov
add
insl
xchg
jmp
sub
adc
mov
xor
push
push
jae
in
add
mov
push
lcall
sub
leave
jecxz
cmp
adc
mov
aad
xchg
and
iret
movsb
push
pop
inc
outsl
lahf
pushf
lea
pop
lcall
dec
aad
adc
jmp
ljmp
movsl
pop
les
sbb
fiaddl
das
inc
adc
test
movsl
dec
and
pop
in
mov
or
repnz
dec
mov
pop
fisubrl
mov
loopne
xor
arpl
xchg
icebp
frstor
loopne
pop
psrld
cmp
stos
addr16
cs
dec
add
mov
into
adc
lret
in
lret
mov
cld
jl
xchg
xchg
jle
imul
fs
and
inc
lahf
and
test
shll
pop
adc
es
inc
adc
jnp
fimuls
repnz
inc
loopne
jo
shlb
push
imul
push
xchg
or
or
mov
or
and
dec
movsl
lret
or
rcr
push
xchg
fsubl
inc
bound
xor
mov
imul
dec
cmp
xor
xchg
sti
test
pushf
loopne
push
clc
push
or
cmp
dec
and
inc
xchg
pop
adc
jecxz
insb
sub
hlt
cmp
xor
mov
xchg
mov
cmp
jnp
fs
cmp
loopne
mov
loop
and
out
popf
mov
and
enter
jne
aaa
pop
push
mov
xchg
inc
dec
mov
jo
dec
cs
xchg
mov
andb
dec
testb
pop
mov
incl
pop
sbb
arpl
push
xor
adc
push
in
int
ss
dec
push
mov
inc
test
xor
xchg
cli
lea
daa
adc
push
in
nop
mov
xchg
or
stc
add
mov
sbbl
movsl
icebp
pop
in
sti
push
cmp
aaa
xchg
lods
sbb
les
fwait
or
test
pop
jnp
test
or
outsl
cld
sub
pop
stc
sub
aam
cmc
movsb
inc
xor
cmp
aam
inc
or
out
rol
ret
shrb
cmc
lret
mov
xchg
fimuls
fidivrl
call
mov
mov
loop
fisttps
sub
mov
in
mov
add
xchg
pop
adc
cld
xchg
xchg
repz
imul
or
fldlg2
sub
cmp
inc
cld
or
cmp
ljmp
enter
jns
lahf
iret
subl
adc
fimull
leave
sti
sub
dec
sbb
push
int
out
xchg
adc
sub
dec
pop
push
dec
xchg
das
mov
push
push
and
subl
xchg
mov
inc
xor
leave
lock
fisubrl
sbb
sbb
in
jp
sub
mov
push
movsb
xor
add
iret
sub
add
scas
out
imul
add
out
lea
stos
ret
jmp
jmp
pop
addr16
push
lea
lahf
dec
inc
sbb
push
or
adc
mov
cmp
jp
add
movsb
cmpsb
inc
fdivr
or
pop
sbb
inc
push
int
subb
mov
rcrb
dec
and
inc
hlt
fbld
test
push
pop
cmpsl
fadd
adc
pop
inc
push
mov
int
xchg
orb
into
movsb
xor
mov
mov
stos
xchg
ret
push
ljmp
fcomi
daa
imul
cmc
dec
sub
lahf
shl
fnstsw
xor
lods
jecxz
stos
cmpsb
sub
lock
loopne
daa
rcrl
mov
nop
fldl
lea
ficoml
sar
jl
ljmp
js
ds
jne
shll
or
mov
shll
enter
push
add
jne
loope
fadd
bswap
push
cmp
andb
sbb
mov
adc
sti
push
sbb
ljmp
or
and
pop
pop
cld
lcall
int
jnp
and
in
mov
lods
cli
dec
mov
add
pop
sbb
rorb
cmp
outsl
mov
cld
mov
pusha
sbb
mulb
jo
cmp
sub
ja
std
imul
loopne
ljmp
or
pop
in
push
add
jg
and
cmp
clc
leave
xchg
and
add
test
fwait
pop
dec
adc
or
mov
or
bound
ror
in
push
ja
faddl
mov
xchg
inc
cmp
je
push
mov
fdivrp
adc
addl
rcl
nop
call
dec
dec
mov
cmc
or
insl
bound
pop
stos
and
setnp
insb
mov
push
jg
cmp
fdivrl
js
popf
cld
jp
xchg
jecxz
and
jnp
jecxz
mov
xchg
cmc
mov
cmp
out
mov
fcmovbe
mov
jle
imul
or
out
bound
cld
inc
mov
cwtl
fstpl
add
add
cwtl
lock
pop
outsb
pop
xor
mov
push
lock
loopne
mov
adc
mov
arpl
cmp
xchg
mov
jb
aaa
leave
adcb
ss
dec
mov
or
cmpsb
push
mov
push
mov
fnstsw
lods
jmp
fnstcw
test
rcll
mov
bound
aam
popa
jbe
test
xor
movsb
fwait
add
add
hlt
ret
lock
loope
aam
mov
sbb
pop
cmc
fildll
xchg
sub
cwtl
addb
inc
inc
mov
test
sbb
jmp
pusha
cld
and
repnz
arpl
push
jae
push
lret
scas
xchg
jecxz
or
sbb
in
or
sbb
fadds
add
dec
jo
daa
fimull
fidivrl
push
fdivl
dec
std
es
leave
cmp
hlt
lret
adc
sahf
mov
int
pop
sub
xchg
cmpsb
mov
jb
mov
or
mov
insb
jp
stos
call
jg
inc
adc
iret
test
sbb
in
mov
sbb
mov
xchg
arpl
inc
push
std
dec
pop
mov
test
in
dec
push
or
lods
subb
popa
bnd
cmp
jle
test
loop
insl
fdivl
dec
outsb
adcl
shll
and
bound
mov
push
out
dec
cmp
lods
add
rorl
daa
push
and
out
pop
xchg
inc
lret
xchg
and
shl
push
lods
sub
call
inc
lret
movsl
insl
adcw
repz
fidivs
dec
dec
sub
imull
pop
fidivrl
jecxz
xchg
in
pop
mov
xchg
push
xor
adc
sub
mov
leave
fsubrl
aaa
int3
ljmp
dec
jno
arpl
bound
sarb
inc
or
das
pop
repnz
xchg
iret
push
iret
dec
sub
stc
ret
iret
jne
xchg
fimull
hlt
dec
mov
jne
pop
xchg
jle
movsb
mov
insb
push
push
dec
loope
jbe
jno
push
mov
add
inc
xchg
inc
mov
imul
repz
xlat
add
addr16
in
imul
and
pushf
fwait
ljmp
in
dec
dec
lock
cmp
dec
mov
jne
and
dec
out
cmp
es
nop
test
jo
imul
lods
xchg
popl
fcoml
fstps
mov
out
jle
in
jns
lock
inc
addr16
xor
mov
faddp
xchg
adc
mov
add
mov
mov
sbb
out
xchg
and
jae
mov
imul
shll
popf
push
popa
idivl
cld
adc
cmp
jb
stc
pop
aaa
sub
mov
xchg
mov
cmp
sub
adc
mov
jb
out
cld
stos
jb
sbb
test
mov
nop
mov
subl
test
cld
out
ret
cmp
or
nop
testb
push
sub
dec
adc
and
rcrb
fcmovu
add
stos
sbb
fwait
loope
stos
sbb
cmpl
mov
leave
icebp
insl
mov
pop
subb
pop
pop
icebp
mov
cltd
jl
pop
dec
inc
ds
loopne
inc
jns
mov
fdecstp
ljmp
adc
mov
fists
mov
inc
test
or
test
filds
mov
push
push
test
neg
insl
ret
fbld
pshufw
jl
mov
mov
data16
insb
fldcw
cmp
xchg
test
adc
sub
pop
dec
mov
stos
aam
dec
lret
insb
cld
pop
xchg
xor
sbb
push
sub
dec
mov
xchg
or
cmp
xchg
adc
out
loop
movb
cld
sub
out
incb
gs
jg
jle
mov
xor
enter
cmp
call
lret
pop
insl
lret
dec
xor
shrb
push
push
push
fs
ss
movsl
sbb
dec
and
mov
cwtl
scas
pop
call
out
shlb
cmp
jp
imul
icebp
movsb
xor
icebp
adc
in
test
fstpt
mov
mov
imul
and
loope
add
and
fsubrl
leave
push
xchg
mov
pop
dec
push
dec
mulb
aad
xor
push
bound
mov
js
add
insl
pop
cld
lods
adc
clc
mov
fstpl
jb
ss
mov
mov
fyl2xp1
add
clc
bound
inc
sub
inc
cld
pop
das
mov
pop
mov
mov
sub
shll
ljmp
push
and
add
movsb
or
mov
fsin
mov
xchg
loope
sub
mov
push
stos
pop
ljmp
push
arpl
xchg
sbb
sub
insb
aaa
inc
xchg
dec
jle
pop
aam
mov
jo
and
jnp
or
push
imul
call
cmp
sysenter
xchg
in
lret
mov
adc
daa
pop
ret
imull
jbe
adc
mov
push
push
aas
dec
push
adc
mov
ja
bound
push
mov
sbb
cmp
pop
pop
sub
jbe
loop
fsubrs
int3
or
fcoml
icebp
lods
xlat
sti
fwait
lds
jle
cmc
or
lret
cwtl
jle
lea
pop
icebp
mov
outsl
sbb
and
adc
xchg
jg
jns
push
fnsave
mov
inc
out
inc
inc
int
mov
hlt
addl
fcmove
ss
movb
inc
jle
lahf
imul
fucom
les
or
push
repz
pop
dec
jge
mov
and
push
scas
out
fdivr
stc
dec
ljmp
imul
std
mov
xor
inc
daa
xchg
pop
repz
xchg
mov
in
jnp
outsl
jle
push
dec
jne
cld
push
mov
sub
and
mov
and
stos
cmp
fwait
jecxz
pop
xor
test
incb
je
sbb
sub
pop
popa
jbe
in
stc
mov
push
mov
push
inc
push
jo
jns
dec
sar
cld
pop
add
js
das
sub
sahf
dec
mov
ficoms
xor
nop
fisubs
in
or
test
and
push
fsubs
sub
xchg
cld
cmpsb
jl
xor
push
adcb
movsb
add
jbe
sub
mov
in
gs
sbbl
jge
pop
xchg
jnp
sbb
sub
cwtl
icebp
jo
jmp
enter
xchg
push
std
ret
xchg
lcall
adc
shl
sub
add
sub
divl
test
cmp
arpl
loop
push
dec
xchg
jb
popf
out
adc
xchg
sbb
icebp
ds
roll
add
je
lods
mov
das
and
js
fisubrl
xchg
mov
jmp
cmp
sarl
jo
shr
inc
mov
repnz
xchg
pop
das
sbb
cld
repnz
rol
test
mov
inc
pop
jo
cltd
insb
lret
or
movsb
daa
xchg
xchg
loopne
insl
adc
push
cld
or
adc
or
jmp
sbb
dec
mov
in
mov
enter
add
fmull
xchg
mov
mov
push
inc
mov
jno
push
jecxz
fcoml
add
hlt
add
mov
hlt
push
jbe
mov
jle
fnstcw
out
cs
mov
xor
xchg
aam
and
jnp
es
jmp
cmc
faddl
repz
jecxz
add
cwtl
xlat
push
fdivr
ljmp
bound
xor
pop
addb
or
addl
loop
shll
js
aas
cs
movsb
es
or
add
xchg
and
fimull
in
test
fs
cld
jae
jo
dec
and
popa
and
aam
and
dec
out
fcomp
aam
pop
push
mov
aad
jl
mul
outsb
in
ror
rorb
add
test
push
xchg
movsb
add
fiadds
shll
movb
push
out
cld
adcl
mov
test
add
dec
mov
sbb
inc
lret
lcall
pop
mov
test
dec
jbe
pop
inc
pop
aaa
and
call
es
scas
add
rorb
pushl
cli
fsubl
call
les
stos
cmpsl
fidivrl
and
lcall
out
add
mov
faddl
daa
fisubrl
mov
outsl
mov
femms
mov
adc
or
ljmp
jns
cld
mov
in
mov
dec
jge
fwait
stos
adc
lods
fcoml
pop
shll
test
cli
jnp
movsb
dec
or
pop
imul
test
push
outsb
adc
dec
or
adc
dec
imul
xchg
inc
sub
addr16
xor
shll
test
daa
push
sub
leave
adc
cwtl
lea
js
add
aam
inc
mov
mov
pop
sti
push
aad
mov
sub
sbb
mov
add
gs
mov
push
or
test
data16
lods
out
or
xchg
lea
setbe
lock
cmovp
lock
loopne
addr16
push
test
in
and
decl
push
mov
push
mov
sub
aaa
xchg
xchg
outsl
fisubs
into
shl
bnd
push
mov
fsubrl
fucomi
into
sub
dec
xchg
ljmp
movsl
icebp
cwtl
xchg
cmp
sbbb
or
xchg
inc
out
aad
adc
insb
and
aas
rcrb
sub
pop
fs
fiadds
adc
sub
cmp
movsb
ret
push
outsb
bound
inc
sub
outsl
mov
dec
adc
inc
jmp
push
pop
mov
inc
mov
jbe
outsl
pop
mov
add
push
dec
cmp
sub
xor
out
pushf
push
xchg
imul
mov
jmp
jne
sbb
stos
ret
cwtl
test
pop
mov
xchg
outsl
sbb
imul
pop
pushf
scas
fcmovu
push
pop
gs
mov
sub
cmp
dec
mov
stc
push
sbb
pop
stos
mov
sbb
in
push
cmp
out
xchg
ret
shlb
sahf
test
dec
mov
xor
les
or
xchg
mov
mov
aam
inc
cli
lock
cmp
pushf
mov
hlt
mov
adc
insl
xchg
in
jo
leave
inc
js
mov
int
stc
push
push
dec
push
inc
popa
sarl
sub
mov
rclb
and
dec
jns
adc
and
cwtl
dec
fimull
inc
pop
pop
mov
mov
ja
loop
pop
daa
adc
cs
or
or
faddl
mov
mov
adc
cld
xchg
mov
adc
jb
ret
pop
push
jge
xchg
pop
xchg
icebp
mov
pop
dec
mov
cld
xor
push
mov
adc
inc
add
mov
fcompl
push
nop
test
and
add
into
sub
lock
idivl
mov
sub
cltd
sub
or
test
pushf
add
inc
jle
vmread
cmpsl
in
leave
dec
mov
cmc
xor
idivb
popa
and
cmp
mov
movsb
fldcw
sbb
mov
aaa
sub
pop
ret
adc
clc
es
aas
ja
sbb
movsb
cmp
push
fdiv
call
test
jns
or
in
xor
or
cli
adc
hlt
mov
imul
xlat
icebp
sub
mov
movsb
in
sbb
sub
cmc
rcl
inc
adc
aas
fcompl
insl
mov
sub
cmp
enter
dec
bound
add
inc
in
mov
lcall
stc
stos
mov
or
loop
and
cld
sbb
and
sbb
cmpsl
ds
test
mov
in
xchg
or
ror
pop
out
mov
and
dec
jns
arpl
xchg
mov
xlat
loope
add
xor
jl
jne
xchg
leave
push
fbstp
adc
push
xor
jnp
inc
mov
sub
push
ret
out
fsubl
js
pushf
jge
bound
mov
mov
hlt
add
xchg
push
cmp
mov
das
mov
cmpsl
push
mov
xchg
jg
push
shl
ret
in
jp
mov
ja
les
ljmp
mov
adc
shl
sub
mov
push
in
pop
jl
fmull
mov
aam
lcall
jmp
lds
push
arpl
push
sub
pop
outsl
clc
out
adc
sbb
shlb
mov
sbb
jnp
mov
popf
jmp
xchg
test
sub
sub
into
jbe
enter
fstps
dec
pop
test
jecxz
loopne
mov
and
mov
xchg
xlat
in
insl
and
pushf
jle
mov
sbb
sbb
out
jl
dec
pop
popf
inc
int
insb
mov
sti
or
mov
cld
xchg
mov
fidivrs
nop
mov
push
mov
dec
jbe
test
jl
xchg
jg
dec
mov
jmp
ja
xchg
outsl
and
pop
ret
fimull
scas
leave
enter
in
xor
inc
and
jb
subps
xchg
jb
icebp
xchg
xchg
push
cmp
dec
into
leave
shl
stc
cld
mov
xchg
addr16
cmc
insl
cmp
mov
ljmp
xchg
les
jmp
das
shl
cmpsl
fnsave
test
sub
add
shl
inc
jo
sub
in
movsl
in
or
jp
inc
negl
dec
pop
loop
imul
cmp
das
outsb
xchg
inc
and
xor
orl
fimuls
ret
andl
mov
movb
into
fisubs
xor
xor
mov
insb
imull
test
lea
cmp
jnp
and
aam
cmp
loopne
adc
fs
loope
imul
rcr
xchg
sbb
xchg
and
popf
or
jl
dec
dec
andb
add
xchg
inc
or
hlt
jns
push
movsb
ret
jge
xchg
rolb
shl
pop
mov
and
push
les
movsb
and
pop
and
test
jne
dec
sti
push
xor
adc
loope
jp
shrb
xor
in
sub
roll
test
and
das
mov
loope
and
outsl
fistpl
cmpsb
adc
push
cmp
pop
fsubs
mov
ds
mov
pop
pop
inc
jp
stc
stos
sub
adc
sub
jo
sub
sbb
js
rcr
imulb
scas
cmp
mov
mov
out
rolb
mov
int
fndisi(8087
sub
imul
inc
movsb
sub
nop
int
adc
adc
dec
xchg
rcrl
cmc
stc
nop
dec
jbe
lcall
btr
adc
roll
lcall
xor
inc
popf
loopne
lea
mov
ja
push
fldl
loope
testb
inc
sub
pop
nop/reserved
xchg
insb
ljmp
divb
icebp
ret
imul
mov
and
mov
test
aaa
pop
inc
push
icebp
mov
inc
and
cmp
out
lret
push
mov
sti
mov
jle
mov
inc
sbb
test
in
push
or
xor
dec
imul
bound
imul
jnp
jno
or
cmp
clc
mov
movsl
iret
pop
pop
adc
push
mov
push
cld
enter
inc
xchg
sbbl
add
nop
add
push
test
loop
es
dec
jecxz
and
dec
and
xchg
jmp
mov
lcall
inc
jmp
inc
dec
sub
ret
jne
and
int
in
enter
in
adc
movsb
mov
push
ret
popf
sbb
ss
bound
mov
sub
mov
jbe
fiadds
pushf
pop
decl
jnp
mov
cld
lods
cwtl
stos
into
dec
pop
jno
mov
mov
mov
stos
jle
cmc
subb
rcr
rcl
mov
insb
inc
stc
mov
mov
inc
jno
int
fwait
movsb
push
in
mov
cmc
and
fdivrl
mov
mov
out
cmp
push
mov
dec
xchg
fimuls
xor
ficoms
adc
push
or
fsubl
and
mov
pop
add
loopne
ror
or
add
xchg
out
jp
or
push
xchg
stos
ja
aad
sti
rorl
fadd
xor
mov
add
loop
ljmp
xchg
pop
and
jle
into
jbe
lret
cmp
cmp
sbb
add
int
inc
sbb
cmpsl
ficompl
aam
dec
mov
sbb
int3
repz
xchg
add
jbe
in
fstpl
das
incb
xlat
cmp
inc
add
dec
dec
pushf
in
mov
jmp
cmp
popf
mov
sti
test
test
and
mov
pop
cld
push
dec
dec
das
fdivr
rcl
rcll
push
xchg
dec
push
mov
ljmp
mov
pop
mov
hlt
xor
test
out
inc
imul
mov
lret
rcrb
dec
div
sbb
xchg
xlat
pop
adc
dec
xor
cmpsb
and
push
jp
sti
repnz
mov
add
cmp
lea
mov
jp
jns
loop
or
insb
cmpb
into
adc
pop
dec
inc
decb
sbb
enter
mov
push
mov
aas
push
lcall
sahf
stos
out
sahf
outsb
jmp
xlat
add
jnp
imul
les
fnstsw
cmc
daa
or
sar
icebp
enter
loope
and
scas
mov
mov
cld
mov
into
jmp
jl
aam
sti
cwtl
pop
or
in
sbb
push
dec
cmc
out
push
add
mov
fs
dec
dec
cli
data16
sub
jge
ret
psrlw
les
jle
fsubrs
lcall
jne
fdivrl
mov
out
inc
or
adc
sbb
pusha
scas
ljmp
cmpsl
jne
xchg
pop
jno
adc
faddl
popf
movsl
sub
ficoms
mov
xchg
pop
pop
data16
mov
sarb
lret
aaa
bound
jmp
dec
std
aaa
hlt
leave
ds
inc
mov
pop
pop
mov
push
inc
in
adc
cmovne
mov
jmp
int3
cld
adc
jle
loop
test
mov
decl
sarl
iret
bound
cld
ds
xor
push
pop
add
dec
js
and
loope
enter
or
add
fiadds
push
or
jne
cmp
or
nop
mov
rcrl
pop
pop
test
fadds
dec
shlb
sub
ret
xchg
mov
xlat
add
loop
xchg
cmp
faddl
ljmp
cld
xchg
test
mov
fimuls
lret
pusha
xor
into
fsubrs
add
enter
in
dec
rolb
mov
pop
insl
mov
fs
mov
loop
sti
xlat
xor
mov
fstl
cltd
and
xchg
mov
inc
cmpsl
les
jmp
mov
out
jecxz
or
stc
dec
mov
rcl
sahf
mov
mov
dec
mov
or
ja
dec
and
arpl
ss
sbb
cltd
xchg
stos
push
dec
dec
push
cli
ret
push
push
mov
jnp
pop
les
fdivrl
cmp
sti
leave
pop
xchg
out
in
arpl
fcmovb
add
mov
push
mov
out
mov
push
ja
adc
stc
cmp
movsb
test
pop
divl
inc
and
mov
pop
je
shlb
in
daa
and
test
in
loope
jbe
pop
mov
xchg
sub
js
push
inc
popa
push
push
loop
sub
push
adc
iret
sbb
flds
xor
adc
aam
mov
cmpsb
stos
hlt
lods
pop
fsubl
add
or
sbb
inc
ret
imul
movl
jle
pop
mov
xor
push
adc
xchg
fsubl
dec
sub
arpl
sbb
mov
loopne
call
insb
jns
lahf
fcoml
mov
movsb
add
adc
jg
push
aam
cld
adcl
cmp
sbb
mov
cld
jmp
loopne
jmp
inc
pop
and
sar
dec
dec
inc
push
ljmp
inc
pop
xchg
jo
fdivr
jae
fs
test
test
xchg
xor
add
cwtl
inc
test
fwait
out
int
and
pop
lea
gs
sbb
jge
or
loopne
sti
cltd
pop
cmp
icebp
insl
sti
mov
and
fwait
jae
mov
xchg
clc
imul
rol
mov
jle
into
mov
mov
in
cld
lret
in
pop
mov
mov
lods
into
and
aam
testb
push
movsb
xor
jns
rcrb
iret
cltd
and
aad
lcall
incl
pushf
pop
jo
mov
push
dec
movsl
sub
cwtl
xor
arpl
mov
push
push
aas
aad
mov
in
repnz
rorl
cmpb
and
outsb
mov
fs
loope
mov
and
std
add
push
fsubl
ret
xor
push
lods
lret
push
inc
dec
fistps
mov
mov
jns
mov
mov
arpl
rcrl
fcmove
push
push
fwait
xchg
paddd
push
repz
fcom
jg
clc
mov
test
inc
in
dec
clc
jne
sub
mov
ret
push
push
mov
int3
clc
out
mov
pop
addl
ljmp
loopne
cld
cmpsb
or
adc
adc
test
cmpsb
and
bound
xchg
push
repz
mov
mov
and
int3
adc
mov
inc
inc
repnz
jbe
push
push
cltd
out
enter
movsl
icebp
mov
push
orl
pusha
lods
stos
daa
icebp
aad
cmpsb
jecxz
mov
test
ja
imul
ficoms
repz
sarl
sub
fidivrl
adc
dec
jb
cld
and
adc
push
mov
xchg
push
fsub
jnp
jns
dec
clc
fs
shr
dec
mov
jecxz
add
push
pop
mov
icebp
in
push
cmp
inc
pop
enter
adc
dec
mov
push
dec
cs
fisubrl
mov
mov
insl
aam
fsubrl
cld
xchg
hlt
les
cmpb
cld
mov
into
add
xchg
pushf
aas
out
hlt
sarl
loopne
sub
push
cld
add
sbb
popf
pop
cmc
push
xor
mov
jno
adc
inc
push
sub
sub
or
push
rcr
fildl
ror
mov
dec
cmc
mov
shl
filds
xor
sbb
ss
rclb
rcll
xchg
in
nop
loop
out
jo
decb
mov
cmc
gs
push
jl
je
hlt
stos
sub
mov
push
pop
push
daa
inc
in
movsb
inc
aad
inc
push
xchg
imul
lock
addr16
add
scas
add
test
pop
ja
xor
or
hlt
adc
jle
cmovnp
cmpsb
dec
testl
into
sub
test
test
jge
std
xchg
aam
mov
in
lock
push
ret
push
shll
inc
loope
pop
lds
dec
dec
les
bound
cld
in
adc
and
ret
les
mov
cmp
pop
lea
int
inc
in
addr16
dec
xor
add
add
iret
pop
pop
push
xor
and
dec
mov
pop
jns
lret
out
dec
xchg
in
fcmove
pusha
xor
sbb
and
sti
pop
adc
lds
scas
stc
frstor
fldenv
ja
decb
out
repnz
shl
mov
adc
les
stc
dec
mov
cmp
pop
mov
out
push
xchg
mov
enter
pop
mov
in
std
popa
mov
and
sbb
out
pop
fcoml
mov
push
sbb
out
pop
push
ss
adcb
pop
cmpsl
aam
sub
pop
push
stos
cmp
stos
daa
xchg
nop
and
std
icebp
and
fdivp
imul
cltd
cmp
mov
jle
in
call
ret
and
jl
sar
int3
xor
pop
and
loopne
mov
mov
jg
dec
mov
arpl
fiadds
stc
scas
scas
push
rolb
imul
jecxz
insl
rorl
les
pop
xor
mov
dec
mov
test
dec
xchg
add
sub
adc
inc
mov
mov
push
adcb
je
and
cmp
ljmp
ljmp
fiaddl
ljmp
je
xor
mov
out
and
jle
movsb
adc
jnp
add
je
stos
mov
fmulp
ficoms
cs
adc
jl
mov
data16
adc
aam
aaa
pop
stc
cli
sbb
push
mov
loop
rcr
ljmp
mov
xor
loopne
pop
outsl
or
inc
jb
loopne
movsb
add
pusha
mov
in
cs
cld
cmp
dec
xor
jne
mov
xor
movsb
sbb
pop
cld
mov
or
add
shll
add
pop
jmp
in
mov
mov
push
or
ljmp
xchg
jne
add
adc
pop
clc
pop
mov
mov
inc
xchg
insb
int3
enter
dec
lock
mov
cmp
mov
xchg
push
and
fdivrp
negb
outsb
sar
xchg
mov
daa
mov
sbb
ljmp
aas
mov
jne
sbb
jecxz
cmpsl
fs
inc
jb
push
loopne
xchg
movsl
inc
ljmp
mov
mov
sar
add
bound
outsb
mov
mov
mov
pop
loope
mov
mov
scas
fiaddl
ja
mov
lds
sub
into
jns
js
inc
adc
mov
push
lret
lea
fimuls
mov
test
repz
rol
movsb
andb
arpl
pusha
cwtl
jp
popl
push
push
add
lea
into
dec
adc
mov
pop
rcll
mov
mov
or
icebp
push
js
cltd
or
cld
sub
loop
int
mov
std
outsb
mov
push
fsub
jb
lret
xchg
in
jge
fcmove
cld
add
mov
loop
sbb
fsubrl
xchg
xor
imul
cld
dec
or
push
fwait
movsb
movsl
add
pop
pusha
dec
adc
or
incl
adc
sub
xor
das
or
mov
mov
pushf
loop
addl
iret
and
enter
mov
push
and
lar
mov
and
icebp
in
andb
mov
hlt
loop
nop
adc
fcompl
jmp
dec
pop
out
jne
fmull
enter
dec
dec
outsb
jge
lods
rep
ljmp
inc
jo
or
push
mov
or
push
mov
cmpsb
bound
vmulss
xchg
bound
shlb
xorl
sub
xor
xchg
ret
cmp
movsb
pusha
enter
cmpsb
dec
jns
jmp
addl
mov
cwtl
mov
cmc
rcr
bound
cmp
gs
and
dec
cmp
push
lods
std
stos
inc
mov
mov
out
cmc
sub
je
and
xchg
dec
jo
pop
test
popa
pop
jmp
cld
call
aam
loope
pmaxsw
dec
inc
les
push
aam
loop
inc
cltd
dec
dec
enter
testl
cmpl
add
mov
mov
test
pop
test
cmp
jmp
in
enter
pop
out
jne
push
iret
sub
pop
repz
add
dec
popa
shl
dec
lahf
xor
sarl
stos
mov
iret
pop
or
and
or
mov
icebp
pop
scas
and
ss
pop
xchg
inc
fimull
and
mov
jns
inc
sub
stos
mov
push
jnp
mov
cld
pop
pop
pop
mov
pop
rol
inc
jnp
or
and
cwtl
pop
aad
or
shrb
xor
out
aaa
repz
lret
mov
xchg
aam
or
and
xor
cltd
mull
dec
pop
jecxz
cmpsl
in
imul
testl
pop
and
lcall
jp
movsb
push
ret
in
mov
pop
mov
popa
insb
mov
mov
js
jnp
xchg
xor
jl
arpl
rcrl
std
lahf
cltd
int
in
jo
or
shl
push
daa
bound
inc
cmp
mov
xchg
xchg
or
fimull
push
lods
repz
add
clc
call
shll
inc
loop
jp
out
cld
fs
pop
jl
push
jae
push
ds
negl
pusha
and
xor
cld
sbb
pop
int
sbb
mov
stos
mov
xor
mov
adc
xchg
mov
xchg
xchg
dec
push
xlat
mov
call
ja
mov
imul
adc
int
jle
mov
jle
mov
pop
test
inc
cmc
push
mov
add
addr16
sbb
pop
mov
jg
mov
bound
into
or
adc
test
add
lods
or
sarb
cld
mov
bound
cmp
adc
cmp
jecxz
icebp
sub
add
mov
les
stos
mov
cmp
jb
or
mov
mov
cmpb
stos
scas
nop
push
cld
ljmp
dec
sub
popa
movsl
sub
xchg
test
in
sub
andb
push
fdivrs
lock
sarb
inc
sbb
hlt
xor
into
add
pop
xchg
cs
notb
or
xchg
or
xchg
test
cld
es
push
xchg
test
ret
pop
arpl
dec
enter
aam
add
stos
cltd
popf
dec
jae
xor
mov
mov
lcall
mov
jmp
movsb
outsl
subl
scas
enter
ja
orb
adc
repnz
fwait
pop
add
jno
and
sbb
jb
or
in
push
mov
mov
mov
pinsrw
mov
pop
pop
mov
leave
mov
dec
push
testb
into
mov
dec
push
popl
and
orl
sbb
lea
dec
test
mov
sub
dec
adc
sti
test
sbb
lret
pop
pusha
dec
adc
sub
mov
push
cmp
push
lret
pop
das
aam
mov
rclb
cmp
ljmp
mov
ljmp
cmp
cld
ror
adc
aas
fsubl
imul
adc
pop
or
sub
jecxz
fsubrs
cli
into
cwtl
imull
push
jmp
dec
scas
xchg
pop
ror
mov
add
sub
outsl
pop
jle
pop
imul
icebp
mov
and
dec
std
bound
jl
addb
stos
add
jl
mov
jmp
adcb
int3
iret
push
out
push
cmp
jmp
shl
movsb
adc
xchg
mov
cmc
out
xor
arpl
jno
cmp
popa
shlb
repz
orl
jns
mov
mov
imul
ja
test
jge
mov
dec
cld
out
sub
ljmp
movl
adc
cmpsb
loope
cmp
mov
adc
add
and
push
fisttpll
bound
into
daa
and
fdivr
int3
sar
jns
scas
fidivl
xor
or
fst
addr16
add
sbb
movsb
test
out
xchg
cmp
jle
dec
dec
pop
add
xlat
insl
pop
pop
cs
mov
insb
or
sub
fisttps
iret
jg
sbb
pop
push
ret
std
sti
sub
and
sti
dec
test
push
stos
sarl
mov
inc
dec
push
mov
and
add
mov
cmpsl
mov
sbb
out
cmp
mov
mov
scas
pop
les
push
dec
adc
rcll
sbb
aas
mov
ss
xchg
stos
or
testb
sarl
fdivl
mov
or
jae
mov
dec
subb
jns
push
sti
int
loop
lahf
jg
mov
loope
movsb
int
fldenv
inc
adc
ljmp
jnp
add
iret
pop
push
rorl
into
mov
addr16
je
push
daa
pop
inc
inc
imul
sbb
ss
mov
stos
cmpsl
pushf
mov
dec
imul
mov
testb
aaa
std
insb
xchg
sbb
dec
out
inc
pop
stc
repnz
pop
enter
repnz
aas
fiadds
icebp
int
jecxz
mov
insb
mov
add
popa
mov
adc
xchg
xchg
lds
imul
mov
lock
adc
cld
push
cmp
jae
mov
adc
adc
inc
bound
movsl
cmp
clc
xchg
aaa
cmp
add
sub
dec
scas
jle
jge
jo
xor
sbb
cli
jno
fidivrs
rolb
dec
into
loop
inc
mov
pop
sub
adc
xor
pop
lret
xchg
and
push
adc
lds
dec
push
sub
jb
mov
js
push
and
shlb
dec
loope
mov
cmp
out
mov
jp
or
pop
mov
into
out
sbb
push
mov
les
shrl
and
jae
and
cld
adc
shr
jo
imul
mov
sub
xchg
sarb
adc
enter
xor
rol
iret
mov
jns
fs
rcr
nop
scas
inc
sub
bound
lea
mov
push
lret
out
push
jg
push
xor
sbb
mov
or
mov
int
lahf
aad
xchg
and
mov
mov
sarl
out
jo
shl
inc
incl
lock
cld
sub
shll
ficoms
outsl
mov
sti
out
xchg
pop
dec
pop
lods
push
inc
aas
push
xchg
repz
pop
jbe
xchg
lret
jbe
push
out
adc
je
std
jge
xor
mov
xchg
pop
push
jecxz
icebp
sub
cld
xchg
into
addl
xchg
dec
pop
cld
jb
mov
fisttpl
jnp
aas
push
dec
jb
mov
outsb
xchg
aas
icebp
xlat
cmp
mov
push
rcrl
bound
pop
dec
out
cmp
inc
clc
jae
dec
shl
out
mov
cmc
sub
icebp
dec
pop
xorl
pop
lcall
ss
push
ror
pusha
push
mov
into
cs
push
jbe
mov
aad
push
out
rcll
mov
sub
push
jge,pn
xor
pop
add
cwtl
arpl
daa
mov
push
mov
mov
les
mov
sub
cmp
pop
cli
and
mov
cmp
bound
pushf
lds
movsb
pop
ja
in
cld
xor
shl
xor
addr16
xlat
xchg
out
hlt
fsub
mov
mov
cmpsb
or
fcom
insb
adc
imul
mov
xor
mov
mov
ret
cmp
push
mov
pop
enter
js
clc
aas
movsb
jecxz
sbb
test
push
ret
pop
xchg
push
add
in
sti
push
sbb
or
xor
pushf
jecxz
shll
sti
push
mov
and
repnz
lcall
outsb
aad
dec
adc
ret
imul
ret
jl
inc
cld
or
stos
js
scas
lods
or
icebp
addr16
hlt
aam
mov
imul
xor
hlt
mov
mov
out
or
rol
lret
fisubs
aas
sub
negb
xor
dec
iret
movsl
and
fwait
dec
mov
es
push
push
inc
xchg
cvttps2pi
pusha
sbb
sub
in
ss
fmull
add
and
or
in
out
data16
rorb
xorb
or
std
stc
loope
mov
cmpsb
sbb
cld
movsl
inc
inc
dec
leave
adc
sbb
mov
fbstp
mov
pop
mov
testl
scas
js
sbb
in
shlb
add
push
jo
out
sbb
mov
int
xchg
or
repnz
mov
inc
xchg
and
mov
lahf
push
sbbb
sbb
test
xor
xchg
js
lcall
or
add
and
sub
cld
roll
add
test
popa
mov
xchg
loop
add
pop
lods
leave
repnz
outsb
les
pop
xchg
repnz
jg
scas
pop
in
cmp
scas
adc
xchg
push
mov
or
bound
mov
pop
ja
add
xchg
insb
xlat
insb
or
aas
inc
pushf
lods
sarl
mov
sbb
push
mov
or
lahf
insl
scas
into
fsubs
inc
sar
pop
ret
xchg
jmp
sub
inc
pop
pop
stc
mov
dec
pop
pop
pop
jl
pop
cld
or
aaa
mov
movsb
test
ret
mov
cmpsb
dec
push
jle
cmpsb
add
mov
mov
sbb
bound
iret
and
xchg
icebp
inc
xor
or
fldl
lcall
int
cld
fdivrl
cmpsl
addr16
xchg
sub
inc
sbb
shll
scas
lret
adc
fisttps
mov
push
adcb
xor
cmp
shl
inc
ljmp
jmp
fsubs
pop
push
mov
popa
ljmp
jecxz
aad
mov
pop
push
and
adc
fidivl
or
jnp
je
add
mov
bnd
repz
pop
jno
and
xchg
andl
loope
mov
aas
rcl
pop
aas
sarb
lea
mov
arpl
mov
jb
mov
bound
pushf
hlt
pop
mov
test
inc
xlat
push
xchg
sub
pop
test
in
pushf
sub
ror
push
and
mov
pop
sub
dec
mov
test
push
loope
movl
cld
test
jbe
cltd
or
shl
cmp
mov
jns
jecxz
push
fs
dec
mov
or
or
cvtdq2ps
and
jb
jle
cmovo
fiaddl
int
sar
movsl
pop
in
jp
push
ret
xchg
adc
lea
test
sub
inc
js
push
ds
jnp
xor
lret
lds
pop
ljmp
into
je
push
pop
pop
les
push
jp
jbe
sub
insl
push
dec
arpl
icebp
movsb
data16
stc
cli
in
gs
adc
xor
xchg
sarb
pushf
cltd
call
test
fstpl
mull
lods
test
pop
adcb
xchg
sub
in
sub
pop
jb
std
sbb
dec
pop
test
xchg
push
push
mov
xchg
fisubrl
test
pop
mov
adc
pop
rcll
lcall
cmp
in
enter
jae
sbb
jecxz
mov
pop
dec
imul
mov
dec
cltd
ret
imul
popa
andb
pop
inc
lods
mov
fsubl
add
enter
sub
or
mov
out
xor
aas
xchg
fcoml
mov
add
neg
iret
aas
into
pop
inc
xor
add
aam
mov
sub
hlt
out
sbb
subb
jno
mov
es
fidivrs
ja
jnp
sti
testb
fists
out
sbb
cmpsl
xchg
jo
stc
xor
jp
pop
mov
and
jbe
rorb
loope
sub
scas
int3
xchg
sub
dec
shrb
ljmp
dec
je
mov
mov
add
scas
enter
movsb
cld
push
fs
adc
movsl
adc
cmp
push
adc
rol
lcall
pop
mov
lret
adc
xor
jnp
mov
out
dec
lcall
jle
mov
bound
sub
mov
cwtl
sbb
adc
orl
push
xchg
into
jmp
xchg
adc
outsb
xchg
pop
xor
xor
xchg
push
jp
push
sarb
or
and
in
jecxz
loope
jns
inc
test
jmp
xchg
cmp
xchg
adc
cwtl
inc
push
xor
mov
or
adc
test
push
mov
std
pushl
dec
bswap
adc
and
std
add
dec
pop
negl
sbb
xchg
cmp
pop
pop
adc
jno
aam
imul
insb
sbb
out
ljmp
mov
movsl
addr16
lahf
dec
or
in
push
jbe
mov
xor
pop
sub
add
cmp
std
shlb
cs
xchg
mov
cld
jno
bound
jbe
scas
mov
mov
sbb
dec
xlat
inc
xchg
pusha
mov
shll
les
js
fmull
and
pusha
ror
or
ljmp
enter
out
fcomip
lret
test
pop
cmp
outsl
rcrb
scas
mov
cld
dec
in
movups
xchg
into
stos
div
aam
jle
fadds
sub
in
push
push
repz
icebp
aas
insl
in
std
shll
fists
cld
imul
testl
sub
scas
fildll
cmpsl
jg,pt
xchg
cwtl
or
cmp
xor
mov
dec
mov
enter
fdivr
dec
pop
addr16
ret
sbb
fnstenv
movsb
push
and
cmpsl
jno
xlat
push
das
xchg
adc
adc
and
js
adc
es
out
mov
mov
pushf
push
inc
jge
mov
addb
sbb
add
adcb
jbe
jmp
pop
into
arpl
fwait
pop
out
std
cs
jbe
notl
mov
test
andl
xorl
add
jnp
mov
cld
inc
jbe
dec
mov
jno
hlt
dec
int
adc
jbe
and
je
daa
or
xchg
sbb
test
jle
repz
leave
fs
scas
jp
fldcw
push
stc
push
xchg
testb
aas
sub
and
push
hlt
movsb
inc
sbb
inc
push
fcmovu
mov
pcmpgtd
lcall
inc
ljmp
and
or
cld
mov
pop
pop
hlt
ljmp
or
cmp
faddl
xchg
shl
inc
dec
movsb
loope
addl
mov
fcoml
add
jo
rolb
pusha
mov
xor
inc
sbb
xchg
scas
popa
inc
pop
lods
inc
pop
cld
cmp
sub
adc
jge
mov
mov
and
mov
mov
test
inc
inc
repnz
test
imul
xchg
lods
scas
xlat
jnp
and
loope
inc
ret
ret
mov
into
or
dec
xchg
or
mov
xorb
jns
push
insl
in
mov
add
add
lods
addps
mov
call
adc
lret
icebp
pop
xchg
stos
pop
xchg
sub
adc
push
out
nop
and
jl
xchg
adc
mov
int3
push
imul
ss
jne,pt
ja
int
xor
repz
fs
xor
inc
dec
fdivrs
adc
or
repnz
or
sub
fstpt
cli
xchg
into
mov
or
mov
pop
into
xchg
lcall
adc
pop
nop
aad
cld
int3
mov
movsb
and
sbb
pop
mov
aam
push
jl
aas
shrb
add
test
leave
cmp
jle
adc
jl
ret
push
pop
push
jmp
je,pn
sarb
and
std
jo
xor
pop
inc
pop
xchg
movl
and
mov
daa
test
stos
push
fdivrl
nop
or
in
mov
sbb
ljmp
ljmp
sub
fisttpl
stos
dec
xchg
sahf
mov
mov
inc
xor
jp
pop
dec
pop
jg
xor
icebp
int
xchg
mov
into
mov
inc
mov
adc
cmp
ja
mov
mov
mov
test
cmp
stc
push
lcall
les
push
adc
sub
push
out
ret
test
xchg
out
ret
dec
jb
outsb
fiaddl
xchg
cld
push
push
xchg
clc
loope
leave
mov
mov
mov
mov
dec
shlb
cmp
mov
push
adc
push
cmp
iret
ljmp
imul
xchg
shl
fsubrl
sub
adc
xchg
pop
in
rcr
and
xchg
inc
xchg
pop
lods
inc
sub
sub
xor
ds
outsb
cli
ficomps
rcr
mov
mov
ss
mov
and
loope
in
xlat
push
or
and
cwtl
mov
insl
pop
adc
pushl
out
xchg
paddusb
mov
dec
repz
jge
iret
jecxz
ret
aas
jae
push
out
dec
cmpsb
push
jmp
addb
add
mov
scas
ds
sbb
cltd
inc
cld
or
jmp
xchg
shr
push
dec
cmp
mov
in
int
loop
xor
mov
into
lret
movsb
enter
mov
jae
dec
jmp
scas
xor
imul
movsb
inc
dec
sar
scas
loopne
fwait
cmpsb
xchg
fistps
cmp
jecxz
mov
shlb
inc
cmc
and
outsb
les
inc
push
fidivl
test
in
lret
inc
mov
ss
xchg
adc
dec
mov
arpl
push
mov
loope
or
cs
cmp
xchg
fimull
ljmp
push
cmpsl
and
into
movsb
xchg
test
addb
xchg
fdivl
movsl
dec
mull
pop
shrl
scas
cmc
sub
xor
fxch
daa
in
dec
or
inc
subl
adcb
popf
imul
fsubl
adc
mov
aam
hlt
xchg
pop
xchg
cmp
shl
and
fisttps
fsubl
and
and
jne
push
and
fnstsw
stos
push
jp
or
cli
push
jle
arpl
lds
cmp
cmp
repz
rclb
stos
push
int3
fisubs
outsb
mov
fnstenv
mov
insb
mov
out
push
aaa
sbb
xor
adc
in
dec
jmp
pop
clc
pop
xchg
out
lahf
fsubrl
xchg
out
scas
jp
ljmp
lods
cmp
addl
pop
ret
sbb
fstp
rolb
pushf
rcll
mov
fst
push
inc
mov
dec
sbb
ror
or
pop
cmp
mov
ljmp
in
pop
jmp
ja
mov
mov
js
push
into
jbe
adc
mov
iret
mov
sbb
add
decb
pop
mov
mov
and
push
test
ja
mov
test
xchg
mov
ficomps
xlat
repnz
sub
push
test
sub
mov
stos
pop
jge
or
out
cmp
adc
cmp
fisttps
xchg
and
dec
mov
adc
bound
addr16
test
jne
pop
loop
xor
ficoml
es
cli
or
push
lds
data16
in
mov
add
divl
stos
jle
ljmp
nop
out
cmp
out
xchg
mov
movsb
mov
shlb
cmp
add
call
cmc
dec
into
stos
jb
cld
test
pop
in
push
inc
and
div
add
mov
js
fdivrs
enter
add
cs
cmp
push
js
rclb
xor
insb
fs
and
fdivrl
xchg
nop
sbb
xorl
dec
inc
jne
daa
ljmp
int
dec
inc
jmp
mov
ds
test
inc
fisttpll
fwait
out
popf
xor
adc
mov
popa
inc
lcall
cmpsb
cmp
test
or
xchg
sarb
imul
jno
roll
lds
imul
icebp
pop
sti
int3
mov
shll
dec
lcall
dec
mov
inc
add
fs
inc
es
fisubs
sbbl
dec
xchg
cli
xchg
cltd
xchg
dec
loope
js
push
push
fcmove
fisubrl
lret
pop
roll
mov
pop
jecxz
cld
ficompl
xor
stos
aaa
ret
add
mov
inc
pop
aad
aas
enter
adc
push
sub
or
in
pop
push
fcmove
ret
xlat
cld
popa
mov
mov
andl
popl
ds
cld
sub
into
test
jge
rorl
nop
jno
xchg
adc
int
mov
out
pop
ret
adc
fs
int
test
mov
stc
push
fsts
jecxz
rolb
ljmp
mov
xchg
int
push
jne
xchg
or
in
mov
push
repnz
inc
imul
repnz
out
and
xor
sub
sti
lods
iret
loop
arpl
cwtl
inc
lods
xchg
mov
mov
and
and
loope
sub
ss
lods
pop
mov
ret
xchg
iret
bound
loop
dec
dec
insb
adc
sub
js
push
mov
fimuls
out
mov
and
sub
pop
cmp
cmp
adc
loop
ficoml
in
js
scas
mov
hlt
mov
out
mov
in
rcr
cld
js
cmp
mov
mov
les
xchg
fisubl
mov
shl
scas
fldl
fsubl
dec
outsb
clc
nopl
iret
mov
clc
fdivrl
push
push
adc
mov
jnp
or
cmpsb
es
sbb
jnp
jecxz
mov
push
mov
out
xlat
sub
outsb
adc
aad
mov
and
or
outsb
dec
test
int3
push
xchg
jb
roll
nop
out
in
jecxz
aad
cmp
inc
jb
pop
and
shll
jmp
test
ret
scas
out
or
mov
xchg
aam
push
sbb
or
dec
bswap
stc
jecxz
repnz
mov
jecxz
xor
sub
jecxz
push
mov
dec
pushf
push
subl
jno
adc
mov
xchg
push
or
dec
sti
icebp
rclb
in
adc
cmpsb
aam
or
fldt
sbb
cld
sahf
push
adc
push
cmc
xlat
mov
inc
fldl
sub
push
xchg
jge
cltd
ret
shlb
sub
mov
roll
dec
popf
cmc
mov
mov
mov
shrb
in
xchg
mov
mov
cs
rorb
pop
pop
push
aam
dec
jle
and
sbb
test
stos
xor
hlt
pop
stos
adc
lds
push
xor
or
or
lea
inc
xchg
inc
sar
mov
cltd
adc
fldpi
xchg
mov
lock
cld
mov
mov
sub
mov
out
repz
lret
test
jbe
test
lods
pop
jg
mov
push
push
insl
pop
and
jle
nop
or
sbb
scas
inc
dec
fsubs
imul
or
mov
adcl
push
adc
xchg
bound
jge
xchg
test
jp
push
jmp
out
and
in
xchg
or
ror
insb
mov
mov
js
fisttpll
mov
bound
mov
repnz
leave
mov
push
test
cwtl
mov
and
jb
jle
sti
lea
jno
and
mov
cld
je
in
mov
or
cli
jae
push
and
inc
mov
pop
ret
or
cs
icebp
ja
pop
faddl
mov
lds
jmp
push
icebp
fwait
pushf
ja
fiadds
in
bound
xchg
lahf
and
push
xor
jecxz
push
push
cmpsb
sub
push
jb
lret
in
movsb
lret
cld
mov
pop
and
push
cmp
cmp
sarl
pop
in
xchg
dec
nop
mov
push
jge
mov
cmp
xchg
ja
jmp
jbe
mov
mov
or
or
jmp
mov
sahf
mov
pop
dec
jle
mov
ljmp
gs
push
xchg
clc
adc
scas
dec
or
xor
out
dec
rcl
int3
add
mov
push
xor
js
push
and
cmpsb
jmp
sub
aaa
lods
scas
ja
lcall
aam
cmpl
je
xor
dec
ror
jae
lods
dec
sub
scas
test
adc
movsb
test
push
or
jns
adc
jmp
adcl
inc
fcmovnbe
popl
sbb
pop
aad
sar
mov
scas
cmpl
push
mov
inc
pop
inc
leave
lea
add
test
sbbl
popa
fsubl
pop
mov
and
rcll
adc
pop
mov
imul
outsb
lods
xchg
sub
mov
movsb
mov
xor
add
fdivrl
xchg
stos
rcr
cs
cmp
dec
sbb
or
xchg
dec
mov
out
sub
fisubl
bound
shlb
fcmovnbe
ja
bound
inc
push
mov
xchg
aam
pop
mov
lea
insb
xor
dec
imul
dec
push
mov
and
mov
loop
ret
lods
inc
adc
inc
push
popa
shlb
jle
push
cmp
pusha
sbb
and
and
xor
jle
sbb
sub
and
cld
dec
in
cli
xor
sbb
pop
je
adc
adc
in
scas
cmp
pop
pusha
cmp
pop
add
mov
test
outsb
xchg
xchg
mov
mov
inc
fstpl
aad
jb
dec
pop
pop
aad
jecxz
mov
push
loopne
stos
pop
mov
fdivrl
mov
and
clc
sbb
adc
inc
shrl
add
fs
out
add
inc
mov
call
push
insb
test
cmp
das
or
mov
aam
inc
jnp
dec
repz
inc
xchg
add
scas
push
leave
sub
adc
scas
mov
pminsw
stc
sub
add
sbb
dec
adc
js
adc
sbb
jb,pt
jb
clc
mov
leave
push
xor
popa
or
lea
lock
icebp
push
pop
push
rclb
sub
sub
iret
mov
in
xchg
cld
js
jle
push
shl
jl
std
cmp
or
jno
mov
rorb
dec
in
sbb
and
ret
push
mov
push
shll
cld
stos
rolb
push
lret
mov
loope
shr
aaa
add
xchg
hlt
roll
rcll
inc
and
repz
dec
ror
pop
mov
sahf
movsb
sub
leave
xor
pop
cmp
sbb
fdivrs
pushf
stos
arpl
and
incb
xchg
iret
xor
aas
dec
rcl
cwtl
shlb
ficoml
out
fsubrl
inc
sbb
jo
or
out
push
cwtl
mov
fistpl
dec
or
xor
fs
adc
stc
or
and
addr16
cmp
sub
dec
test
movsb
inc
cmpsl
xor
or
push
sub
sahf
cltd
lret
push
fidivs
fisttps
dec
lret
mov
sub
inc
clc
std
mov
arpl
outsb
lods
pop
int3
cwtl
in
mov
xchg
scas
insb
testl
jg
cld
ds
andl
dec
xchg
or
fwait
ljmp
out
push
cmpsl
push
jbe
cwtl
push
aam
shrl
fstps
xchg
inc
xlat
fisubrs
and
sbb
ljmp
iret
hlt
loope
xchg
jle
jl
push
adc
jecxz
inc
xchg
cld
cmp
rcl
fwait
psllq
pop
in
int
push
insl
clc
inc
test
testl
cld
movsl
pop
je
mov
pop
out
cmp
int3
xor
pop
pop
rorb
test
lret
push
lods
jbe
and
mov
push
cmc
test
fisubs
inc
adcl
mov
mov
ficomps
les
push
jno
mov
loope
mov
subl
jno
cmp
mov
mov
cmp
rorl
scas
fstps
jle
dec
ficompl
cmpl
fisttps
pop
insl
xor
mov
mov
sbb
jno
shrb
push
fmull
sbb
ret
xchg
jge
sub
scas
stos
cmpsl
jge
xchg
mov
test
pop
outsb
test
cmp
mov
push
xchg
outsb
xchg
inc
add
roll
or
icebp
jl
mov
push
int3
fsubl
clc
sub
add
inc
int3
xlat
jb
nop
sub
mov
sbb
cld
addr16
aas
int
or
inc
dec
andb
icebp
int
push
sbb
xor
negb
add
pop
push
or
jmp
add
ljmp
stc
int3
jne
inc
xchg
cld
xchg
leave
mov
lret
scas
adc
ret
adc
lods
cmp
pop
mov
inc
inc
aam
div
jl
push
dec
ljmp
push
lcall
inc
loope
sbb
rcr
enter
and
push
mov
sbb
push
xorl
fmuls
test
pop
jg
es
mov
fisubrl
ds
shll
push
lret
xor
mov
icebp
mov
pop
ss
sbbl
mov
cld
ljmp
inc
cli
arpl
sbb
stc
pusha
lahf
push
loop
into
es
cmpl
xor
xor
int
in
pop
dec
adc
ret
into
in
xchg
jo
jns
push
adc
pop
mov
mov
sub
cld
push
mov
loop
lret
xchg
sbb
mov
or
out
xor
sbb
repz
push
mov
mov
add
cld
adc
stos
imul
popa
aad
pop
pusha
imul
adc
xchg
xchg
xchg
leave
add
cltd
jb
rclb
lock
or
pop
add
jns
mov
inc
stos
pushf
mov
jb
inc
test
dec
mov
movsb
mov
push
rol
dec
sbb
lea
add
ljmp
in
jl
pop
dec
adc
pavgb
fimull
aaa
ljmp
inc
cmp
arpl
in
adc
xchg
hlt
mov
rorl
add
mov
push
in
mov
ror
and
testl
sub
add
fidivrl
fcmovnu
lret
push
xchg
cs
or
cld
js
in
les
and
stc
ja
into
or
xchg
and
dec
dec
jge
in
subl
xor
or
xor
fs
pushf
jns
jl
and
jmp
nop
and
popa
int3
aas
jno
pop
stos
ret
clc
dec
mov
jge
pop
xchg
inc
aam
push
mov
std
inc
lea
mov
inc
jle
loopne
fdiv
adc
jl
clc
cs
and
lea
daa
dec
out
jo
movsb
pop
test
test
cld
push
mov
call
jmp
leave
fsubs
sub
adc
inc
xchg
aam
mov
scas
aam
push
lods
std
dec
pop
js
inc
dec
fsubr
push
mov
call
outsb
outsb
mov
bsf
push
push
int
test
cmpl
mov
fistpll
pop
push
adc
cmc
in
cld
gs
mov
xchg
pop
jb
xorl
fnstsw
loope
andb
mov
aam
push
jg
add
lret
and
in
shlb
sbb
mov
xchg
loop
insl
sbb
sub
push
mov
xchg
out
push
push
mov
fldl
ja
daa
icebp
das
lret
sub
dec
and
add
and
xchg
es
push
cld
test
pushf
out
fistpll
outsb
icebp
repnz
rcr
jne
sub
xor
mov
test
push
pop
mov
and
int3
ss
cmp
cmp
js
insl
lcall
shrb
inc
inc
sub
or
xchg
inc
popf
xor
in
and
imul
out
inc
push
mov
dec
push
rorb
inc
dec
mov
bound
jecxz
adc
adc
push
shrl
sbb
dec
movsb
mov
pop
xchg
pop
mov
or
idivl
ds
into
pop
inc
dec
into
inc
add
aad
cmpsb
arpl
mov
call
enter
or
push
xchg
test
movsl
lock
shlb
sbb
cld
cld
pop
into
mov
xor
fistpll
and
gs
and
fdivrl
repz
xchg
jg
popf
fdivs
xchg
enter
les
ljmp
incb
jnp
jmp
mov
out
je
mov
jae
or
and
and
daa
mov
pop
shl
xor
insb
cmp
int
mov
out
xor
ja
ss
xor
wrmsr
cmp
je
sub
push
jl
push
fdivp
dec
push
mov
pop
lret
aas
ds
mov
int
jg
stos
push
pop
pop
or
adc
push
fwait
in
cld
loop
inc
jle
push
outsl
mov
push
dec
jge
in
mov
cmp
ret
push
fs
int3
pop
xlat
cmp
dec
jle
pop
lock
aaa
fdivl
xlat
push
shl
clc
and
cmc
repz
xor
or
std
push
inc
push
cmpb
push
repnz
ljmp
xor
mov
and
push
inc
div
and
xchg
or
dec
gs
shr
test
lds
in
mov
jmp
std
loopne
insb
sub
pop
or
sbb
fs
hlt
aas
jbe
xchg
hlt
sub
sub
mov
xor
wrmsr
and
icebp
loopne
out
add
aad
adc
or
push
out
cltd
xchg
pushl
test
mov
push
shr
imul
mov
and
xchg
repnz
incl
push
push
lea
loope
mov
out
push
xchg
xlat
sbb
add
dec
mov
xchg
cmpsb
loope
movsb
aas
fwait
shll
sub
add
lods
inc
inc
sbb
cmp
shlb
sub
push
stos
mov
addb
and
jno
inc
mov
sbb
cmp
add
movsl
enter
lock
push
cld
sahf
in
push
mov
pop
scas
jle
or
inc
dec
in
jg
cld
xchg
fdivs
push
mov
test
imul
mov
imul
aad
sahf
xchg
stc
cli
pop
push
mov
aas
shrl
or
xchg
push
icebp
cmpsl
cmp
insb
ja
mov
push
xor
mov
ljmp
mov
repz
aam
arpl
mov
enter
add
ret
cmpsl
sbb
addl
test
inc
sbb
enter
stos
fwait
mov
jnp
loopne
sbb
jl
fcmovnu
sub
xchg
psubq
out
in
cs
sub
mov
out
adc
jb
mov
cmp
mov
sbb
fmul
add
xchg
or
jg
loope
push
negl
dec
push
movsb
test
and
mov
mov
pop
xor
push
lock
shrl
mov
adc
out
mov
movsl
psubw
out
scas
or
cmp
inc
ret
mov
insb
fisubs
dec
call
lret
jb,pt
enter
jns
mov
mov
ficompl
int
push
inc
sbb
sahf
ljmp
je
out
mov
mov
xor
popl
jle
sarb
add
dec
dec
cmp
mov
mov
hlt
das
jnp
sub
gs
out
push
mov
cmp
rolb
push
mov
or
dec
xchg
ret
sti
push
loop
pop
push
mov
jmp
insl
mov
ret
inc
jl
imul
dec
shl
ret
decb
mov
dec
pop
loope
mov
mov
icebp
aas
enter
and
stc
outsl
fidivrl
add
adc
insb
lock
mov
enter
adc
or
dec
test
and
cmp
rcl
jbe
inc
int
in
jle
lds
std
adc
bound
icebp
xchg
cmp
divl
jle
jl
jle
fsubrs
idiv
fmull
and
inc
daa
aad
cld
movsl
jno
mov
cmc
icebp
push
inc
mov
mov
ret
mov
xor
sbb
in
sub
ljmp
mov
jle
inc
xchg
leave
leave
fs
push
aaa
pop
call
pusha
cs
jp
xor
push
xor
fmull
mov
push
mov
movsb
xchg
add
lret
cld
js
xchg
leave
fidivrs
adc
js
fstl
cmpl
jle
ja
jp
popf
jmp
into
ret
cmp
push
mov
mov
notl
loop
fmull
cld
ds
jp
cs
clc
out
mov
and
insb
dec
rorl
or
in
pop
clc
jne
movsb
sbb
int
hlt
dec
cmp
or
jo
clc
push
dec
jle
pop
mov
cmp
mov
mov
sub
mov
push
xchg
mov
xchg
lahf
enter
adc
dec
insl
ja
push
shl
test
aam
and
rorb
arpl
sbb
repnz
xchg
xor
jle
dec
shrl
add
sub
outsb
aam
push
fists
in
out
int
xor
stos
xchg
out
cmpsb
sbb
je
int
lret
test
jle
adc
gs
inc
pop
dec
mov
and
fsubrl
or
fidivl
enter
mov
dec
incb
xchg
pop
push
jge
dec
flds
dec
in
pop
dec
sbb
sbb
out
jge
inc
ljmp
ds
mov
mov
std
sbb
jecxz
gs
es
inc
cmp
inc
shl
aam
and
adc
or
es
in
mov
gs
incl
not
sbb
sbb
mov
movsb
sti
pop
int
or
nop
mov
and
and
sub
loope
jbe
scas
xor
mov
test
push
push
mov
shlb
inc
test
out
jb
ret
std
movsb
ret
dec
mov
stc
push
mov
mov
sub
jns
int3
into
outsb
clc
xchg
pop
mov
pop
movsl
fmull
stos
fs
or
sbb
adc
sahf
sub
dec
push
pop
out
cmp
jae
test
dec
out
les
dec
faddl
rclb
decl
out
cld
add
inc
or
fsubs
pop
outsl
in
sub
mov
push
inc
xor
add
jmp
and
outsb
xor
and
js
pop
push
xor
xor
sbbb
stc
pop
jecxz
arpl
rcrb
xor
rcrb
jns
sub
mov
popa
xchg
jbe
xchg
jge
aam
push
mov
pop
cmc
imul
cmc
mov
jmp
rcl
sbb
sbb
arpl
ficoms
and
in
mov
aad
cmp
jbe
add
imul
push
cmp
movsb
mov
mov
pshufw
out
dec
adc
lret
pop
pusha
je
push
outsb
xchg
jno
mov
shrb
stos
int3
mov
ss
mov
lods
xor
pop
or
cld
movsl
icebp
out
jb
adcb
pop
sarb
mov
push
mov
xor
ja
cld
jle
loopne
fdivl
cld
scas
xor
stc
xchg
sbb
adc
outsb
mov
pop
pop
or
arpl
push
pop
ret
loopne
movsb
jo
pop
xchg
jae
ljmp
jecxz
add
dec
mov
imul
mov
xchg
xchg
sub
icebp
cs
dec
mov
mov
xchg
in
push
out
mov
pop
iret
jmp
mov
push
jle
jb
cld
jnp
push
push
loop
ret
mov
dec
and
and
mov
test
fbstp
lods
xchg
jp
or
sub
jp
pop
leave
mov
rcr
cld
sub
mov
rorb
pop
sbb
mov
nop
adc
ror
les
inc
sub
dec
xor
push
and
sub
rorb
divb
inc
repz
lret
cmpsl
cld
idivb
icebp
cmp
pushf
inc
loope
cltd
fdivrp
xchg
nop
rolb
in
lcall
sub
test
ja
jno
lods
or
cld
cs
mov
push
jl
iret
in
test
xchg
sub
outsb
or
bound
loope
ja
pop
mov
rcr
xchg
icebp
std
ret
faddl
push
lcall
jno
dec
dec
or
sbb
aam
aam
sub
or
jg
push
movsb
lea
loop
jb
mov
mov
loope
xchg
sbb
push
enter
xchg
dec
lret
into
fistpll
mov
lock
orl
jg
jne
mov
ja
push
xchg
int
xchg
aaa
test
lods
ret
fimull
cmp
loop
dec
add
cld
lds
pop
jmp
aam
add
dec
imul
outsb
scas
inc
pop
mov
sti
cld
push
mov
and
lret
sbb
pop
stc
cmp
xor
pop
stos
scas
insb
test
mov
sub
bound
xor
fldcw
daa
mov
mov
aas
mov
insb
sarb
mov
sbb
push
jb
jns
push
add
inc
icebp
ljmp
in
out
and
xor
xchg
cld
jg
sub
es
iret
add
hlt
loopne
dec
cld
insb
add
pop
lods
in
and
rorb
test
adc
int3
data16
shll
in
lea
ljmp
sub
daa
mov
inc
jnp
lret
cmc
das
push
jl
and
inc
inc
sub
leave
stc
mov
int
push
mov
mov
divb
pop
lret
fs
push
jecxz
sub
popa
push
or
ret
iret
hlt
sub
jecxz
mov
out
clc
dec
jg,pn
mov
lods
dec
jb
sbb
int
cld
mov
pushf
push
jle
sti
nop
repnz
ret
inc
stos
lahf
repz
push
rolb
ror
jo
pop
je
mov
jo
pusha
loope
nop
orl
roll
cld
add
mov
xor
jl
test
add
inc
leave
inc
outsb
mov
jl
ja
inc
aad
or
jb
ja
adc
xor
lcall
jbe
dec
mov
sub
sbb
ret
mov
jno
inc
leave
in
movsb
fnstcw
or
aaa
bsf
aam
rolb
cmp
int3
in
jge
sub
push
insb
lds
loop
shr
push
dec
or
in
into
mov
ret
fwait
rcll
cmpsb
or
mov
movsb
pusha
loope
data16
or
adc
push
mov
mov
fstpt
cmpsl
push
cwtl
sub
andb
loope
dec
fcmovne
sub
add
inc
ljmp
mov
lret
test
sub
test
loope
subl
outsl
jle
jp
mov
mov
das
and
movsb
pusha
ss
inc
stos
mov
imul
in
fsubrl
test
push
repz
adc
mov
mov
xchg
test
pop
xchg
clc
mov
sub
inc
insb
in
sub
jmp
movsb
and
push
xchg
mov
movsl
jg
movsb
ja
rcrl
add
pop
arpl
cmp
or
adc
rcll
and
fs
sub
mov
push
es
cld
xor
xor
pushw
pop
mov
xorb
mov
mov
fsubs
sub
js
jbe
xchg
cli
out
and
fsubp
cmp
mov
mov
xchg
push
loopne
lret
push
sub
cmpsb
sbb
xor
pop
loopne,pn
jle
mov
dec
sar
js
dec
adc
xchg
sets
jns
xor
jne
int
sti
pop
test
cmp
shlb
test
adc
rorl
or
add
adc
pushf
imul
sub
aas
repnz
popa
enter
mov
test
repnz
sub
test
ds
dec
cmp
sub
inc
lret
adc
push
push
cld
jns
shll
insb
pop
loop
into
cld
mov
std
mov
sub
aam
push
clc
xchg
jmp
sbb
lods
dec
lahf
inc
mov
loopnew
mov
push
addr16
mov
push
aas
cmp
inc
cld
sub
pop
fidivs
pop
in
push
out
das
sub
push
dec
testl
or
mov
mov
outsl
ret
shll
mov
push
mov
insb
mov
add
push
cld
leave
inc
into
inc
ficoml
sarb
cltd
jmp
fsubrl
pop
scas
pop
loopew
and
std
lea
je
and
in
mov
lret
and
sbb
bound
adc
add
dec
xchg
adc
leave
pop
pop
idiv
outsb
ja
aas
lea
aad
pushf
adc
and
shlb
jmp
roll
mov
mov
pop
sub
dec
loope
and
cs
loope
and
test
out
pushf
dec
out
pushf
leave
and
jb
mov
add
add
xchg
inc
xchg
xor
add
and
in
stc
xchg
mov
loope
jl
mov
add
lods
inc
sub
or
jbe
dec
inc
pop
jecxz
int3
addr16
les
mov
or
adc
es
shl
arpl
bound
cltd
loopne
xor
into
into
aas
pop
test
mov
pop
stc
mov
jl
out
sahf
or
in
mov
sbb
jmp
ds
push
sub
filds
jnp
inc
enter
jl
pushf
mov
es
loopne
mov
mov
movsb
scas
imul
jecxz
cwtl
sub
mov
ficomps
fdivrs
add
cmp
jg
adc
mov
cmpsb
adcl
daa
xor
dec
mov
push
mov
pop
sub
sub
pop
test
push
xor
aam
test
scas
cs
xchg
fidivrl
insb
ret
mov
pop
xor
add
insb
movsl
xchg
rcrb
cmp
cli
jl
ljmp
jns
repnz
sub
cmp
notb
pop
test
mov
cmpsb
adc
mov
pop
sbb
mov
mov
mov
je
sub
xchg
js
lea
jae
pop
jecxz
xor
sub
mov
sbb
inc
incb
pushf
loope
les
call
mov
cmpsl
stc
adc
or
or
fimull
cmp
je
jb
in
enter
dec
or
mov
scas
mov
mov
xchg
mov
fmull
pop
pop
xchg
cld
in
cmp
mov
push
cmc
xchg
test
mov
jne
mov
fldln2
bound
fidivl
xchg
cmp
sub
mov
mov
aaa
sbb
push
xchg
jge
and
cmp
adcb
inc
pop
inc
dec
push
xchg
rcll
push
test
inc
inc
push
int
lock
popf
aam
call
sbb
push
push
lods
cmp
popa
mov
int3
push
xchg
ret
out
outsb
test
cmp
sub
xchg
lock
pop
mov
push
into
rep
cltd
imul
mov
dec
pusha
jbe
mov
dec
sbb
pop
push
or
enter
mov
mov
pop
mov
mov
ljmp
cltd
nop
in
aas
adc
cs
in
bound
or
aas
ffreep
in
mov
sbb
int
int
rclb
insl
inc
adc
xchg
ds
aaa
push
push
mov
ret
fistpll
insl
rcrl
pop
and
lea
mov
jbe
outsb
pop
call
movl
clc
sub
icebp
and
scas
cmp
lds
inc
jle
pop
cld
or
sub
mov
inc
fsubl
cmc
bound
cmpsb
cmp
add
loopne
add
out
sub
out
lods
into
mov
cld
loopne
insb
imull
jl
out
mov
push
xor
fcoml
outsb
dec
dec
push
lcall
jo
std
xor
push
push
stos
es
out
fildl
daa
xchg
push
pop
and
sarl
stos
jg
add
mov
mov
push
mov
and
lock
sbb
loopne
pop
aam
push
lret
xor
cmp
mov
into
sbb
adc
loop
xchg
fcoml
mov
imul
sbbl
push
and
leave
sub
push
sahf
or
push
cltd
or
xchg
inc
aad
scas
shl
jl
cmc
ja
mov
mov
jne
push
cwtl
xchg
sub
into
lahf
out
mov
or
cmp
inc
xchg
xchg
mov
mov
incl
loope
pop
sbb
xor
repnz
xchg
pop
cwtl
mov
push
push
iret
jb
jp
stos
popf
loop
add
shrl
cmpsb
jae
and
jne
sub
dec
or
test
mov
mov
scas
inc
ljmp
xchg
ficomps
mov
lret
lret
xchg
sub
out
jp
scas
cmp
adc
mov
movsb
rolb
shll
mov
jne
mov
jge
inc
movsb
std
pop
sarl
and
loopne
xchg
mov
loop
addl
push
adc
dec
pop
and
rcr
push
movsb
mov
mov
leave
out
push
int
sub
mov
cmp
fisttps
addl
pop
adc
loopne
ret
in
push
mov
les
and
dec
inc
push
inc
mov
mov
rcrb
call
xchg
adc
mov
mov
fimull
mov
mov
adc
xlat
shll
inc
pop
push
sub
lret
sarb
lds
jp
pop
int3
jb
xchg
cltd
mov
mov
fsub
jns
sarl
adc
inc
cld
pop
adc
pop
in
push
mov
ss
out
sub
and
pop
jmp
fdivl
jecxz
stos
sbb
sub
xor
mov
jo
xor
inc
pop
cmc
sbb
test
lret
fistps
rcrl
fdiv
mov
andl
mov
fnstenv
fmul
cld
and
adc
sub
push
mov
mov
inc
cmp
push
push
stc
cmp
pop
ficoml
push
jae
lcall
shll
scas
mov
pushl
jb
test
inc
dec
sti
aaa
int3
pop
xor
jl
fidivl
sub
inc
fcoms
pop
sub
int
lcall
jmp
inc
sub
aad
pop
and
xchg
sub
push
and
decb
pop
mov
jnp
or
jns
xor
into
dec
xorb
inc
ret
ret
ljmp
enter
mov
clc
inc
dec
jecxz
push
or
or
xchg
jecxz
pop
jl
loop
clc
fmull
mov
mov
xchg
pushf
imulb
out
sbb
data16
pop
imul
stos
fiadds
fs
ret
xchg
xchg
rcrl
in
xor
push
shrl
xor
mov
data16
jbe
jbe
push
inc
pop
push
cs
pop
or
adc
clc
jae
cld
idivl
jo
clc
idivl
lcall
daa
adc
pop
aad
push
sahf
ret
cli
or
idivl
and
mov
pop
lcall
sbb
mov
push
pop
pop
ror
aam
out
mov
cmp
ja
enter
sbb
aad
or
or
int3
cmpl
sbb
xor
cs
stc
sub
pop
xchg
mov
loopne
mov
ss
xchg
aam
sbb
pop
mov
sbb
test
out
cmc
mov
pop
cld
cmpsb
ljmp
test
push
jmp
rorl
inc
lret
or
pop
imul
jne
xchg
fwait
xchg
mov
fimuls
mov
mov
adc
and
and
push
or
mov
mov
mov
mov
aam
xor
sbb
xlat
lods
icebp
sbb
xchg
lds
xchg
xchg
jbe
mov
sbb
pushf
mov
cmp
or
fwait
popf
xchg
test
iret
mov
js
sbb
out
fstl
xchg
mov
and
shll
add
into
sub
lret
xchg
negb
faddl
cld
jp
leave
jbe
mov
jmp
in
arpl
fmul
stos
repnz
jo
mov
bound
adc
stos
cwtl
lods
loop
and
dec
aas
push
mov
into
scas
xchg
ret
pop
icebp
mov
xchg
punpckldq
ret
xchg
push
jge
cmp
je
hlt
dec
inc
xor
mov
jl
and
insl
add
fistps
jmp
xchg
in
in
dec
pushf
js
mov
cmc
lret
fcompl
iret
jno
or
dec
cmp
or
and
mov
inc
cmc
adcb
js
popl
pop
mov
mov
iret
testb
out
and
push
mov
or
aas
stc
ds
lods
repz
iret
bnd
iret
pop
dec
fsts
fsts
sub
stc
adcb
sub
andl
jecxz
ficoml
cwtl
sbb
xchg
shrl
daa
sbb
push
xor
adc
and
sub
or
sbb
mov
pop
sbb
loop
lahf
fldl
clc
std
push
mov
pop
mov
mov
movsb
enter
dec
jl
cwtl
int
pop
mov
outsl
mov
xor
daa
jmp
addr16
xchg
mov
into
mul
pop
psubq
adc
pop
test
cmc
sub
inc
in
sub
add
sbb
fmul
das
adc
test
sarl
ss
andl
inc
scas
push
pop
mov
xor
xchg
pop
pop
xchg
xchg
mov
insb
shl
mov
xchg
or
cmp
mov
sbb
loop
xabort
fidivrl
mov
and
inc
cmp
xchg
pop
jae
aaa
mov
mov
push
dec
hlt
dec
sahf
xchg
jle
and
and
jmp
xchg
pop
insb
cmp
mov
aam
test
ja
repz
aam
push
push
pop
repz
or
adc
push
aad
dec
ja
push
jb
out
dec
and
sub
pandn
push
xchg
sub
aaa
jge
jb
stc
cwtl
popa
mov
movsb
cld
push
cmp
mov
push
ljmp
cmc
fdivrl
pop
aad
mov
fiaddl
das
rcl
aam
in
cmp
and
mov
dec
decl
ds
sub
out
out
lods
xor
cli
xor
and
and
lds
incb
jge
roll
inc
ret
test
sub
mov
jge
or
es
cmp
cmpsl
popf
les
mov
lcall
cld
xchg
cmp
push
sub
mov
psubq
inc
stos
int3
test
orl
les
or
outsb
imul
out
cld
xor
xor
jle
outsl
std
jle
mov
mov
pushl
lds
jg
orl
rclb
jmp
pop
add
sbb
mov
fadd
mov
fidivrl
inc
insb
cmp
xlat
or
add
lret
pop
inc
mov
cmp
loop
lds
jb
lret
loop
xor
xchg
push
mov
sbbb
mov
loop
xor
xchg
xlat
mov
push
xchg
jae
and
rorb
outsl
loop
popf
in
push
sbb
xchg
and
xchg
mov
and
rorb
bound
ret
jo
sub
es
in
lret
fsubrp
ror
out
and
mov
push
inc
push
inc
lahf
cmp
jo
icebp
test
push
loop
add
mov
jnp
ljmp
push
sarb
dec
imul
mov
hlt
dec
inc
das
mov
and
xlat
xchg
lods
loope
push
dec
dec
dec
aam
hlt
je
cli
pop
jno
xor
cld
shrb
sub
sub
stc
sbb
repnz
je
inc
adc
lcall
std
xor
pushf
jo
cltd
xor
mov
leave
inc
fsubl
push
ja
fidivs
fdivrp
adc
lds
adcl
fnstcw
int
stos
pop
and
aam
jmp
mov
xchg
inc
add
cld
loope
enter
cld
test
fsubrl
xchg
test
and
dec
fldcw
or
in
dec
jl
rolb
shl
ja
ds
ret
mov
and
pop
jmp
push
dec
call
jecxz
inc
ljmp
pop
xchg
je
xchg
fsubs
icebp
lods
mov
in
ret
pop
mov
shlb
sub
dec
and
enter
sarl
inc
sbb
addr16
ret
xchg
xchg
and
ds
outsb
mov
test
adc
xchg
data16
cltd
insl
stos
cli
mov
mov
xorb
je
ficomps
push
in
xor
cmp
lock
pop
mov
push
pop
call
pop
xor
xor
in
or
lds
popf
push
mov
or
adc
scas
push
fcmovb
aaa
inc
mov
lea
mov
mov
movsb
cld
xor
psrlw
inc
fisubrl
and
movsb
test
insb
enter
pop
loopne
and
outsl
push
shr
jl
xlat
xlat
mov
ja
loope
mov
loope
pop
mov
lret
jns
sub
pop
dec
jb
push
out
xlat
pop
xor
rorl
sub
cltd
ffreep
sbb
xor
int
adc
cmp
push
pop
out
mov
fnstenv
fstl
add
sub
je
nop
fstpl
hlt
movsb
fdivr
pop
icebp
faddp
test
pop
shll
fidivrl
adc
jecxz
fimull
push
ss
ffree
dec
xchg
xor
mov
pop
ret
pop
and
or
push
add
mov
into
push
std
outsb
xchg
das
adc
sti
sub
pushf
cmpsb
jo
pop
push
push
repz
mov
mov
and
inc
push
sbb
adc
rorb
pop
in
in
loop
fmull
mov
sub
mov
out
fnstsw
movsb
pop
mov
test
hlt
mov
js
sub
xlat
and
sarb
es
shlb
clc
dec
add
outsl
dec
test
add
jae
int
popa
mov
ja
adc
sar
or
scas
cmp
popf
sub
daa
rcrb
sub
sbb
fsub
out
pop
shr
or
clc
daa
insl
mov
and
cmp
ljmp
pop
or
or
sbb
mov
aas
fisubl
xchg
daa
or
fucomip
pop
cld
cmc
es
clc
pop
test
enter
mov
sbb
jecxz
push
cli
test
and
xlat
mov
sub
test
add
mov
or
orl
ficoml
and
popf
in
out
fbstp
bound
adc
shrl
loop
js
jne
pop
repnz
cmp
imul
mov
lret
in
mov
nop
test
cmp
sub
pop
dec
stos
mov
inc
pop
in
inc
dec
mov
push
xchg
test
inc
push
dec
mov
add
add
movsb
dec
adc
push
mov
xchg
pop
cmpsb
nop
add
mov
xchg
sbb
shlb
pop
bound
int3
enter
adc
aad
bound
out
or
xchg
repz
jle
roll
sub
inc
dec
sahf
jle
rcrl
cmp
pushf
mov
mov
cltd
mov
lcall
mov
out
in
dec
andps
inc
sub
testl
dec
xor
test
test
add
pop
mov
cmovge
sarl
pop
inc
hlt
mov
push
mov
mov
idivb
push
daa
jb
out
aaa
sub
mov
loop
push
fsubrl
jnp
and
call
rol
xor
cmpsb
rorl
mov
inc
mov
mov
or
ret
and
movsl
dec
repz
cmp
sahf
lods
cmp
enter
cmp
movsl
bound
pop
push
in
xchg
and
xchg
or
bound
jmp
in
sti
int3
jge
fdivrl
mov
popa
xchg
out
push
and
inc
andl
sub
ds
sahf
jno
mov
xchg
stc
outsb
lock
jecxz
jp
push
adc
sub
ret
mov
sub
mov
sti
rep
push
iret
ljmp
mov
cli
fildll
enter
in
std
inc
aam
fimuls
scas
adc
pop
out
jl
xchg
jno
imul
mov
cltd
push
inc
mov
int3
decl
mov
mov
ret
bound
test
cld
stos
je
icebp
ss
adcl
dec
shlb
pop
pop
test
mov
outsl
jnp
data16
popf
dec
push
sub
mov
les
sbb
test
sbb
and
jge
or
idiv
or
or
cld
bound
outsb
ret
add
mov
fs
sbb
movsl
push
xlat
sbb
cmp
dec
sti
or
cmpl
push
sub
push
push
push
out
js
push
and
push
std
in
sbb
je
sub
sub
xor
jo
add
or
push
sahf
mov
scas
aaa
daa
ljmp
jmp
in
repz
loop
push
fcoml
stos
or
xchg
mov
dec
add
es
popa
out
dec
idivl
rcrb
xchg
jge
test
xchg
subb
sub
test
push
mov
cmp
sub
cmp
add
cmpsl
pop
imul
cmpl
mov
repnz
sub
xchg
or
pushf
push
xchg
pop
jecxz
rcrb
mov
xchg
xchg
fsubs
das
push
cmpsl
les
pop
pop
dec
jl
push
enter
mov
xor
loope
dec
dec
aam
mov
sub
xchg
int
fisubrl
jne
mov
sti
jge
rorl
movsb
mov
stos
mov
ficoms
and
popa
inc
sarb
sbb
mov
or
stc
sbb
sarb
aad
leave
movsl
inc
dec
mov
xchg
and
pop
adcl
nop
ljmp
loop
push
addl
pop
jne
or
fimull
xor
fdivrl
or
and
inc
repz
push
and
cmpsl
sbb
insb
pop
mov
xor
jne
adc
loop
fimuls
dec
inc
xchg
sarb
loope
jne
sub
pop
mull
mov
sti
add
bound
roll
je
push
int3
out
dec
stos
ret
call
je
test
xor
incl
pop
dec
test
sub
bound
pop
ret
or
sbb
mov
mov
les
mulb
fiaddl
out
pmaddwd
outsb
into
push
insb
or
add
jo
adc
jb
notl
sbb
fldenv
in
ds
mov
shrl
rolb
outsl
cmpsb
adc
ficompl
cwtl
mov
cld
mov
and
test
add
mov
sub
adc
sbb
flds
push
mov
or
loope
dec
jnp
aaa
cwtl
shrb
jecxz
sub
push
push
mov
loop
lret
movsb
dec
fists
mov
push
aam
or
shrb
jle
pop
add
xchg
inc
ljmp
pop
sub
imul
jne
pop
in
lods
je
add
adc
test
mov
pavgb
sub
mov
cmp
in
sub
or
push
adc
ret
jno
jle
pop
rclb
jl
or
aam
jle
cmpsl
push
cmp
rcrl
shr
ret
sub
test
and
cwtl
js
or
fwait
dec
dec
and
pop
mov
cmp
stc
ljmp
adc
push
xor
out
jne
testl
push
lret
rorl
jne
call
les
sbb
inc
hlt
jne
xchg
adc
xchg
loop
in
scas
cwtl
push
xchg
in
mov
inc
dec
aaa
lcall
test
cli
pop
mov
ret
mov
mov
xchg
dec
sub
cwtl
push
loope
pop
inc
cld
mov
aad
rcl
stc
fimull
and
sbb
into
lahf
rcr
aas
in
scas
mov
mov
mov
push
sub
ret
xor
stos
add
push
mov
aas
movsb
enter
pop
mov
dec
xor
sarl
and
pop
push
xchg
aam
sub
out
adc
jmp
inc
or
gs
mov
aad
ds
loope
cld
roll
adcl
enter
push
movsb
fidivrs
inc
sbb
ret
pop
mov
adc
or
ljmp
fyl2xp1
mov
xor
jl
xor
das
out
jbe
adc
or
jp
pop
mov
outsl
push
or
push
mov
pminub
push
shrl
lahf
aas
xchg
in
and
lds
push
sbb
mov
push
shl
jnp
ja
fadd
cmc
or
jecxz
mov
push
add
mov
or
orw
dec
idiv
rorl
pop
insb
aaa
pop
in
xor
jbe
jecxz
stos
and
pusha
popf
leave
insl
andb
repz
loope
xchg
mov
cmpsb
ljmp
andb
outsb
jl
cltd
add
fimull
mov
cmpsb
mov
and
or
xchg
pop
and
mov
xchg
or
test
aad
xor
hlt
xor
xchg
dec
pop
mov
cli
cld
xchg
add
or
popf
stos
pop
adc
shll
xchg
ss
push
loop
fcompl
push
repz
mov
jge
rolb
mov
push
in
xchg
ficompl
inc
add
pop
jmp
xor
mov
movsb
push
mov
lret
cmp
popf
mov
imul
pop
and
push
mov
test
test
stc
notl
bt
dec
sbb
ja
fwait
scas
bound
stc
movsb
pop
mov
add
inc
xchg
xchg
jmp
popa
enter
jns
cmp
les
jle
jl
sbb
adc
ljmp
in
mov
int3
les
cmp
test
inc
or
adc
adc
and
out
ds
mov
lds
mov
xor
popa
adc
bound
and
cmc
nop
xchg
dec
xor
jo
lret
enter
mov
nop
xor
not
push
hlt
add
pushf
dec
cmpsb
mov
mov
outsb
fdivrs
sarl
out
dec
mov
jae
inc
lcall
repnz
cld
pop
jb
and
mov
sar
sbb
jl
movsl
mov
sbb
dec
adc
sub
lret
shl
sub
pop
sahf
jns
sub
inc
and
xor
push
dec
cmp
in
mov
push
fstpl
sub
xchg
dec
mov
sbb
mov
add
rcr
mov
mov
mov
xor
icebp
out
jmp
in
iret
xor
mov
and
insl
int
jnp
mov
ja
dec
aas
mov
cmp
sub
fstpt
in
ja
push
pop
push
loope
cmpsb
cmp
repnz
mov
in
dec
cmp
fbld
cltd
add
neg
cmp
pushf
loopne
sub
inc
dec
mov
inc
clc
sub
in
repnz
jle
insl
adc
ja
shll
loope
es
mov
mov
sub
jecxz
fnsave
in
dec
mov
aam
mov
lods
ja
loopne
cmpsb
mov
jmp
ss
inc
jl
mov
leave
imul
dec
fisttpll
lret
mov
dec
aaa
pushf
pop
and
adc
popa
and
push
inc
jmp
into
cli
lahf
test
data16
fimuls
aaa
loop
fdivl
aad
cmp
cwtl
in
jbe
cli
sub
xchg
ficompl
and
repz
xchg
je
push
mov
and
jb
push
sbb
jle
inc
cmp
cld
sbb
adc
or
cmp
sbb
sar
ret
gs
pop
jp
push
adcb
xchg
sti
and
lcall
jnp
adc
push
jb
and
add
ret
ficoml
push
mov
pop
mov
mov
sbb
fwait
jge
dec
clc
add
scas
scas
enter
xchg
int
jmp
adc
lods
sub
push
cld
iret
lock
dec
outsb
adc
int
dec
je
jecxz
leave
in
push
cld
lods
xor
inc
or
pop
add
push
js
inc
xorb
jae
outsb
aaa
test
xchg
ja
ss
pop
fisttpll
mov
movsb
movsl
xchg
repz
push
cmpl
bound
mov
adc
repz
jne
lea
scas
sbbl
mov
cmc
subl
mov
lahf
rcr
test
mov
stos
push
sub
lea
dec
xchg
push
add
mov
add
imul
or
adc
sbb
jecxz
ljmp
add
stc
and
jno
loop
cwtl
jnp
jb
pop
sub
push
ret
jbe
shrl
fimull
pop
out
push
cli
setg
dec
push
xor
pop
imul
pop
mov
sub
or
xor
stos
sti
jnp
xor
pop
decl
sbb
adc
js
mov
lahf
fsincos
push
lret
pusha
xchg
fs
addb
aam
insl
repnz
xchg
test
out
pop
test
xchg
adc
dec
dec
insl
rclb
xchg
popf
adc
movsb
addl
and
fmul
dec
jge
scas
push
repnz
mov
rorl
sbb
bound
pop
push
adc
mov
xchg
mov
adc
add
jecxz
xchg
imul
sarb
test
mov
dec
xchg
testb
pusha
mov
into
cmp
mov
nop
dec
or
dec
dec
xor
lds
xor
sbb
enter
sar
jl
sbb
cmp
rcrl
in
sarb
popf
or
int
xchg
cld
negl
sub
pop
mov
fstpt
out
pop
push
xor
xchg
jo
cmc
sbb
jmp
popa
adc
xchg
or
jl
dec
xchg
imul
test
rcrl
mov
push
mov
stos
dec
push
dec
add
test
or
sub
out
dec
adc
sub
adc
inc
sbb
jle
xor
push
push
inc
in
xor
lcall
lds
xlat
mov
sub
sbb
jnp
push
or
loopne
inc
mov
cltd
xor
cld
test
adc
mov
faddl
mov
xor
addr16
push
dec
inc
rcrb
push
sbb
cmp
jne
enter
jmp
add
dec
fisubl
jp
push
ficoml
jl
std
loop
ret
adc
std
cld
sbb
xchg
dec
and
filds
orl
jo
and
rcll
leave
jg
fsubrl
stos
js
lods
dec
add
ficoml
repnz
or
shrl
out
xor
dec
mov
into
sub
and
lds
mov
and
lods
inc
in
stos
rolb
aad
repz
mov
iret
adc
mov
mov
scas
fs
push
sbb
dec
adc
cmp
sub
daa
shr
cmp
loope
xor
lret
pop
pop
mov
bound
mov
jo
into
fucomp
mov
sub
pop
mov
out
repnz
jg
inc
sub
xchg
sub
out
dec
jge
push
xchg
movb
aam
or
adc
mov
cltd
xchg
out
push
push
cli
or
and
and
mov
outsl
pusha
dec
pop
jnp
sti
sub
or
out
in
sbb
cld
outsb
mov
scas
push
ljmp
and
std
pop
fiaddl
and
sub
repnz
cmp
cmp
pop
lea
int
les
mov
dec
loopne
imul
mov
fbstp
xchg
push
hlt
xchg
jmp
cmp
dec
in
lods
sub
adc
icebp
imul
mov
xor
push
push
and
fsub
sahf
dec
into
push
pop
das
add
imulb
xchg
xchg
mov
fcompl
repz
mov
cld
dec
mov
dec
jbe
insb
pop
cmp
lock
pushf
mov
cmc
loop,pn
jo
mov
fldpi
test
fdivrp
add
int
adc
leave
movsl
jge
out
in
mov
sub
inc
dec
paddsw
bound
cld
fcmovbe
mov
xchg
into
andl
into
mov
inc
add
in
js
movsb
iret
outsl
outsb
pop
or
stos
shr
pop
insb
icebp
into
inc
jp
pushf
ret
ja
push
xchg
push
push
and
mov
faddl
imul
enter
lds
xor
test
inc
push
adcl
repnz
aad
aaa
in
push
mov
mov
nop
sbb
push
add
xorb
cs
enter
cltd
shlb
and
jb
inc
ljmp
push
cs
int3
or
jbe
inc
push
shll
jle
test
enter
adc
adc
adcb
and
pushf
das
mov
dec
ret
fcmovu
dec
clc
or
dec
dec
mov
or
jne
addr16
ficoms
pusha
sub
fnstcw
pop
jmp
inc
and
out
mov
ljmp
adc
adc
fisttpll
sbb
mov
cmp
or
cmp
mov
pop
mov
push
cli
inc
lret
bound
int
xchg
xor
movl
addr16
mov
das
sub
test
dec
sbb
lret
in
mov
aaa
sub
sub
movsl
test
or
popf
cld
std
pop
mov
lea
ja
cld
cmc
jns
push
mov
inc
add
repnz
and
stos
push
add
and
aad
xor
or
jb
jl
loopne
lods
cltd
mov
les
sub
mov
mov
mov
fidivl
fdiv
sbb
pop
xchg
jmp
mov
stos
cmpsl
movsb
mov
pop
mov
test
loope
or
mov
imul
movsl
ljmp
stos
lcall
mov
stc
ja
or
adc
add
mov
xchg
xorl
push
xchg
ret
pop
imull
popa
mov
push
fcompl
es
popa
xchg
inc
sarl
dec
inc
out
test
add
sub
sub
les
je
fimuls
scas
incl
xor
scas
aaa
ret
or
dec
push
lret
sbb
or
cli
mov
inc
jle
cld
sub
imul
add
shrl
and
test
cmp
into
mov
adc
and
mov
fldcw
pop
mov
call
aas
xor
repnz
imul
inc
mov
das
lods
mov
sub
push
arpl
js
jae
pop
cltd
test
jbe
add
dec
fcomps
cmc
test
ficompl
and
mov
inc
add
push
out
mov
jb
adc
movsb
loop
ja
daa
ljmp
mov
cld
jno
outsl
sbb
xchg
inc
popa
loope
sbb
cmp
lret
xlat
add
pop
mov
jge
adc
inc
cwtl
mov
pop
and
aas
cmp
in
jae
and
into
cld
rcr
scas
sarl
cmp
pop
sub
jle
push
cmc
jno
repz
cmpsb
dec
mov
loop
sbb
popa
sbb
mov
dec
and
idiv
cwtl
pop
mov
mov
add
mov
fdiv
js
cmp
out
mov
dec
sub
push
mov
dec
int
fnstenv
rorl
cmc
xchg
xor
push
mov
aad
mov
repz
fmul
or
ds
stos
jbe
xor
roll
mov
mov
mov
push
movsb
lcall
xchg
or
das
dec
xchg
test
rcrb
mov
insl
fbstp
fiaddl
xchg
mov
or
fisubrl
sbb
or
pop
mov
imul
sti
sarl
jmp
test
sub
rorl
inc
dec
popf
adc
sub
push
int3
movsb
push
les
or
out
out
test
dec
inc
push
mov
mov
mov
hlt
loope
sbb
fstp
mov
xor
loope
lods
xchg
jo
sbb
mov
int
mov
push
call
test
and
jmp
mov
dec
xchg
mov
cld
repz
jp
mov
mov
in
and
stos
adc
mov
loope
pusha
push
lods
push
sbb
add
mov
outsl
mov
push
imul
fwait
push
or
aam
idiv
sub
jecxz
cld
push
loopne
fistps
ficoml
ret
mov
lcall
mov
adc
pop
inc
cli
ja
xor
mov
ja
or
out
mov
ljmp
mov
aad
push
sti
dec
aaa
pop
scas
sub
push
jnp
mov
xor
xchg
cwtl
dec
mov
adc
mov
imul
push
movsb
stos
inc
sti
cmp
loopne
lret
testl
daa
std
mov
dec
jmp
jns
shll
cld
cltd
out
mov
xor
movsb
rcll
sbb
fdivl
mov
and
xchg
ds
push
out
and
dec
xor
lods
loopne
stc
and
lcall
outsb
sub
arpl
jle
xlat
jne
je
and
and
xor
cld
dec
dec
cmp
lods
mov
mov
hlt
sbb
inc
push
sbb
mov
mov
pop
andb
dec
repnz
cld
pop
pmaxsw
pop
inc
push
xchg
outsl
push
shl
xor
in
mov
mov
adc
jecxz
outsl
fsubl
cld
xor
inc
aaa
clc
neg
bnd
mov
lods
mov
pop
mov
popa
mov
mov
dec
cmp
andl
jmp
and
mov
pushl
mov
outsb
mov
stos
mov
jecxz
adc
mov
xchg
loope
push
shrl
lcall
cmp
mov
dec
add
in
fcoml
mov
in
pop
mov
adcl
mov
mov
repz
movsl
sbb
js
divl
pop
push
xchg
popf
testb
adc
cmp
jg
pop
fldenv
sub
push
es
dec
sub
dec
mov
out
int3
test
in
mov
out
rcll
sub
in
divb
jl
mov
push
mov
orl
mov
mov
aad
fcmovbe
sub
pop
mov
push
jo
int
lcall
and
cs
enter
mov
add
aad
and
pop
sahf
dec
fldt
inc
fcmovbe
dec
addl
push
rorb
in
jae
sbb
and
ja
dec
repnz
cld
add
icebp
out
mov
pop
or
cmp
push
hlt
and
jl,pn
movsl
sbb
mov
xor
sub
ret
jnp
cld
push
jmp
incl
pop
hlt
mov
imul
rcl
dec
push
push
dec
sbb
sbbl
mov
sar
mov
dec
pop
fisttpll
clc
subb
fisubrs
push
dec
cmp
adc
stc
xchg
xchg
ja
sub
push
out
inc
mov
push
add
mov
in
push
mov
jnp
ret
stos
and
pop
out
aas
pop
enter
push
push
jno
ret
adc
stc
stos
pop
rolb
push
add
leave
mov
inc
mov
cld
jo
mov
mov
mov
pop
pusha
call
push
daa
adc
pushl
adc
mov
jo
jnp
pop
jno
out
adc
jp
pop
sti
rcrb
adc
aam
mov
loop
sahf
ror
test
incl
cmp
pusha
mov
push
mov
push
xor
je
aas
les
push
test
stos
repnz
mov
push
xchg
add
in
fcmove
stos
test
mov
jg
inc
ret
and
sbb
ljmp
movsb
stc
or
cmpsb
stos
dec
inc
xlat
out
jbe
arpl
das
mov
pop
loope
shl
jno
test
rcr
in
cld
jns
push
cli
mov
pop
jle
or
push
cmp
pop
jecxz
add
xchg
xor
sbbb
leave
xchg
dec
mov
sarl
push
mov
push
xchg
fwait
test
ja
cwtl
repnz
repz
xchg
xor
mov
in
adc
mov
mov
mov
xchg
testb
sbb
dec
nop
push
ret
lret
and
dec
cli
notl
add
pop
fnsave
lret
jb
pop
pop
jne
xor
or
jg
lret
dec
jle
dec
cld
mov
mov
aaa
jmp
lahf
push
jmp
jle
loopne
add
test
fxch
mov
test
clc
and
and
lods
or
sbb
adc
rcl
imul
mov
mov
sbb
popa
loopne
hlt
cld
in
fcoml
fimuls
aam
scas
cmpl
lcall
into
faddp
fmull
popf
pop
push
push
add
js
rorl
or
mov
mov
movsb
clc
inc
test
xchg
ret
enter
bound
mov
in
movsb
mov
stos
cwtl
insl
xchg
or
jge
shrl
mov
adc
sbbb
xor
or
data16
ret
adc
mov
dec
sub
ficoml
push
mov
aas
mov
test
loope
jnp
insb
mov
mov
adc
aam
ja
mov
jbe
adc
pop
cmpsb
in
repnz
adc
lea
std
sbb
std
and
xlat
hlt
sahf
dec
cmp
mov
jmp
mov
lods
testb
mov
and
add
push
rolb
xchg
mov
mov
jb
jnp
mov
in
sbb
push
jnp
fldenv
dec
mov
pop
decb
cmpl
les
xchg
inc
mov
pop
add
fnsave
daa
out
in
dec
push
andb
add
fwait
cs
xchg
add
adcb
loopne
pop
pop
or
push
testl
adc
inc
cmp
jle
loopne
mov
out
mov
or
mov
aas
orl
push
je
jae
inc
sbb
xchg
mov
xchg
loope
sbb
jg
test
pop
dec
lret
fidivrl
push
cmp
pop
cwtl
mov
ljmp
dec
jo
mov
std
pop
je
movsl
and
inc
pop
mov
xchg
das
adc
aaa
ds
ljmp
cltd
ja
and
loop
das
mov
mov
fistl
les
imul
ja
mov
clc
dec
add
push
pop
sbb
mov
xchg
and
outsb
std
test
rorl
adc
cld
jno
mov
call
int
fdivl
cli
addl
out
outsb
cmc
or
fwait
push
jns
inc
mov
sub
dec
add
inc
rcrl
loope
fdivrl
mov
rorl
push
jl
jge
jle
inc
inc
das
lret
and
pop
enter
mov
dec
or
arpl
cmpsl
inc
push
jnp
repz
int3
out
jmp
cmpsl
pop
sub
sbb
fldcw
xor
cld
jnp
mov
push
push
dec
roll
push
les
orb
enter
lret
xor
and
dec
add
out
bound
aam
loope
xchg
jp
inc
sub
imul
into
dec
in
xchg
out
jns
idivl
push
and
cmp
push
pop
rcr
dec
sti
jmp
push
push
and
mov
inc
fisttpll
stos
shr
addl
add
call
mov
jmp
dec
and
mov
fnstsw
sub
adc
sub
daa
jo
push
adc
fimull
push
dec
ret
mov
cmp
lea
fldcw
hlt
pop
fsubl
repz
iret
jns
cld
adc
mov
pop
mov
push
mov
cmp
dec
and
push
dec
addb
push
inc
ss
hlt
mov
dec
adc
out
iret
adc
ret
leave
cmp
cs
xor
inc
mov
mov
lods
into
jl
jbe
test
xchg
pop
cmpsl
fs
arpl
jbe
lcall
movl
aaa
cmp
jmp
mov
add
xlat
sbb
jbe
and
cmp
in
xlat
mov
cld
jne
stc
push
or
add
idivl
fsubp
roll
shl
sbb
add
lcall
sub
jp
sub
fs
lds
jae
mov
pop
loope
rolb
movb
sahf
adc
or
std
cmp
lahf
outsb
jo
mov
mov
hlt
pop
cld
shll
and
aaa
jb
sti
aad
push
jmp
addb
push
lods
mov
ljmp
adc
xlat
fdivrs
jbe
cmpsl
hlt
add
js
xchg
loope
xchg
push
jnp
mov
fidivrl
sti
scas
sub
dec
fcompl
call
fiaddl
lea
mov
enter
test
sub
pop
xchg
jmp
lea
mov
dec
cmp
hlt
add
pop
movsb
jbe
jg
push
shrl
repz
cld
sar
add
jle
mov
mov
sahf
jbe
aad
repz
xor
lret
sub
inc
add
into
mov
and
dec
loopne
cli
xchg
push
test
xlat
scas
inc
xchg
les
repz
popa
mov
inc
push
push
xchg
inc
push
sub
push
scas
jmp
int
inc
and
fsubl
jle
jmp
or
mov
popa
js
les
push
adc
push
pop
sub
mov
sub
mov
int3
rol
fstp
add
mov
popa
xlat
jecxz
test
out
faddl
andl
in
add
int3
pop
xchg
mov
loope
cmpl
xlat
sar
or
xchg
lock
les
mov
add
scas
inc
or
dec
call
mov
int
aaa
popa
int3
lret
sti
les
hlt
stos
fisttps
cmc
mov
pop
jp
movsb
test
adc
test
ljmp
sbb
inc
adc
jge
sub
std
adc
fadds
mov
hlt
in
mov
push
cld
dec
add
popa
cmpsb
in
faddl
push
sub
xchg
xor
dec
and
ss
jecxz
push
xchg
ds
or
mov
cld
negb
cmp
sbb
push
jge
out
fcmovu
sub
add
addb
les
pop
xchg
movsb
out
decl
in
lea
pop
sub
fs
and
ja
lcall
int
xchg
movsb
mov
fmull
loopne
jo
pop
jecxz
mov
cmp
aad
pop
add
je
ficoml
int
and
jmp
pop
xor
inc
dec
dec
push
pop
sti
mov
jecxz
hlt
rolb
stc
sahf
sub
rcrl
insb
mov
push
mov
mov
sub
repnz
stc
popf
xor
ficomps
mov
test
popa
pop
xchg
addr16
pmovmskb
stc
out
lods
push
push
jns
scas
imul
mov
mov
test
aam
mov
mov
dec
scas
sub
out
adc
and
mov
push
mov
jmp
enter
orb
or
dec
jp
adc
scas
dec
daa
inc
leave
and
cmp
add
movsl
cmp
jecxz
xor
xor
in
jae
xor
pop
jno
and
mov
std
mull
cli
dec
add
dec
les
jb
pop
jg
cmpb
mov
mov
ljmp
and
pop
je
stc
in
adc
mulb
xchg
rcll
xchg
dec
movsb
add
mov
xchg
xchg
daa
mov
push
sbb
or
stos
dec
stos
pop
lods
cmp
cld
jmp
test
scas
pop
fnsave
cld
jge
bound
pop
pop
rol
and
cmp
inc
sbb
jge
les
or
fcmovb
mov
add
aas
cmp
pop
jb
in
js
loope
mov
inc
cld
mov
inc
lret
out
into
fsubl
inc
push
pop
inc
shr
icebp
or
sbb
push
xor
dec
icebp
xchg
mov
test
es
in
xchg
sub
int
in
lds
fldenv
and
mov
fwait
cmp
adc
pop
push
lods
aas
push
sarb
cmpsl
cld
rorb
mov
imul
xor
mov
lock
jl
rorl
mov
mov
enter
icebp
pop
sub
out
xchg
add
stos
xorb
mov
andl
out
xor
and
adc
jl
jb
sub
movsb
xchg
sahf
mov
xor
mov
test
pop
sub
mov
inc
xchg
ret
and
mov
lea
cli
imul
insl
or
aam
mov
xor
hlt
pop
shrb
arpl
mov
aam
and
loopne
dec
fimull
scas
jg
lea
jne
sub
dec
aam
lret
cmpsl
cli
mov
inc
adc
dec
flds
xchg
lods
push
pop
add
cld
mov
mov
sub
push
shl
add
sbb
push
lds
dec
dec
mov
out
fisubs
loope
add
jecxz
mov
loopne
inc
and
sbb
xchg
test
xchg
fyl2x
push
jnp
popa
add
pop
cs
sbb
inc
mov
and
es
push
mov
inc
aad
loope
aas
push
cmp
xchg
nop
push
push
scas
xchg
in
divb
bound
pop
dec
push
test
adc
rcpps
ja
shl
push
test
and
aas
pop
mov
into
lea
sbb
mov
rorl
pop
cld
jle
xchg
into
inc
mov
add
das
pop
movsb
sub
xchg
mov
lea
jecxz
stc
fcomi
sti
sub
xor
sub
jnp,pt
lods
loop
fwait
push
out
cwtl
testb
lds
xlat
mov
cld
es
icebp
clc
scas
fcoms
and
das
or
push
push
pop
sbb
jo
sahf
shrb
loope
pop
sub
adc
les
xor
adc
jge
and
loopne
cmpsl
xor
std
les
xchg
fbld
adc
cmp
repnz
sahf
xchg
int3
sbb
mov
iret
int3
add
inc
imul
adc
xchg
mov
addr16
sub
mov
test
icebp
sbb
in
in
xor
jecxz
add
mov
push
andb
rcrb
mov
xchg
mov
pop
scas
add
ret
leave
dec
mov
sbb
in
jmp
hlt
inc
dec
pop
xor
cmp
inc
adcl
enter
clc
repnz
jle
fldl
mov
xchg
dec
mov
enter
insb
lea
push
bound
out
cmpb
add
inc
inc
push
mov
jns
jle
movsb
cmc
pop
out
js
leave
les
inc
clc
mov
fcompl
insl
or
leave
pop
int
jmp
xchg
mov
fnstenv
cltd
sbb
inc
shll
mov
mov
mov
push
mov
pop
cmp
out
in
jae
clc
ror
jge
and
lock
mov
xchg
inc
jle
mov
sub
dec
dec
sbb
dec
loopne
xor
push
or
mov
xchg
sti
ret
cld
push
insl
cmp
adc
sub
jo
or
mov
rcr
stos
lret
jbe
roll
add
hlt
pop
pushf
int3
mov
popa
sub
jg
cmp
dec
xchg
or
test
imul
outsl
and
cmp
in
push
xor
cld
sbb
bound
push
jl
cld
lods
jge
jl
xor
and
pop
loope
iret
aaa
out
faddl
inc
pop
jge
mov
fisttpl
arpl
loopne
xor
imul
icebp
dec
push
repz
sbb
insl
pop
jno
inc
pop
ret
cld
scas
shr
hlt
repnz
clc
lahf
mov
out
and
hlt
xchg
fmull
push
aam
outsb
fisubs
and
mov
rorl
adcl
lods
dec
loope
out
push
mov
xchg
mov
add
xchg
push
lea
mov
push
mov
mov
inc
push
or
lahf
cmp
push
push
push
xchg
and
mov
jp
dec
mov
roll
movsl
fidivrl
hlt
jno
sti
mov
xor
jg
xchg
push
cmp
push
movsb
cld
pop
in
fldlg2
int
inc
call
jnp
cmp
mov
fwait
sub
adc
mov
psubb
lret
shlb
test
insl
stos
pop
aas
inc
idiv
movlps
mov
mov
mov
fnsave
pop
in
loop
mov
mov
mov
gs
test
xchg
sbb
adc
das
in
das
xor
lcall
xor
lods
jecxz
jl
cltd
push
call
dec
cmp
repnz
mov
ljmp
pop
ss
jns
pop
inc
add
test
cmp
loopne
push
shrl
jmp
push
add
cmpb
roll
sub
mov
jp
ljmp
inc
ffree
dec
ror
sti
sub
sar
xchg
ss
subl
je
pop
and
cs
xchg
aam
cs
divb
xchg
subb
icebp
cmpsb
mov
pop
sub
icebp
jge
shrb
pop
das
movsb
cmpsl
lea
inc
out
sub
fsubl
cld
mov
mov
sarl
ljmp
repnz
aas
popa
insl
mov
jne
lods
mov
call
lret
mov
or
jbe
bound
popa
pop
std
cld
and
add
push
cmp
or
lea
fbld
sub
mov
jmp
push
xchg
pop
into
sbb
repz
dec
in
jbe
stos
out
addb
dec
inc
out
add
loope
int
pushf
iret
mov
cld
outsb
jl
add
mov
movsl
ficoml
pop
in
dec
mov
cld
jp
int
mov
pop
pop
pop
bound
add
adc
fcomps
andb
xchg
mov
push
or
loopne
jecxz
popa
or
mov
repz
push
int
out
mov
xchg
test
mov
mov
out
inc
push
push
pop
lods
and
hlt
popa
adc
jb
pop
mov
sub
pop
pop
call
mov
mov
and
and
mov
or
or
cmp
scas
lret
dec
mov
sahf
adc
jp
mov
dec
cli
data16
pop
adc
mov
movsl
aad
jmp
cld
movsl
out
cmp
or
in
loop
fisubrl
inc
mov
arpl
mov
bound
and
mov
mov
inc
imul
cltd
cmpsb
or
inc
pusha
push
pop
push
adc
rorl
mov
jecxz
clc
ror
in
sbb
int3
mov
imul
dec
sub
dec
pop
cmp
lea
mov
adc
dec
push
pop
xor
adc
xchg
mov
dec
pop
loope
inc
fs
and
in
xchg
mov
fsub
push
sbb
cmc
push
inc
nop
in
mov
sbb
xchg
lds
and
pand
imul
lea
inc
and
sub
stos
adc
mov
inc
xchg
mov
sbb
add
pop
pop
ds
rorl
fildll
bound
orl
mov
ja
addr16
xchg
push
mov
ret
into
arpl
mov
add
pop
mov
shrb
jnp
xchg
push
xor
and
mov
push
dec
inc
and
cmp
mov
mov
xor
xchg
fs
xchg
lea
adc
shl
jmp
inc
test
xchg
mov
xor
int3
ja
sub
jl
dec
mov
cs
out
and
mov
je
jnp
repnz
stos
mov
mov
and
mov
xchg
adc
push
mov
mov
mov
out
mov
or
ficomps
jle
rcr
adc
incl
mov
xchg
call
shrb
mov
add
cmp
jmp
sub
pop
jecxz
inc
inc
insw
adcl
stos
sbb
mov
mov
add
test
or
and
or
orl
lret
imul
pop
or
add
les
aad
push
sub
cmp
push
pop
push
pop
sub
enter
das
icebp
dec
push
add
push
rol
in
pop
mov
add
jle
jnp
pop
out
or
roll
clc
int3
ss
lods
dec
adc
das
jno
clc
in
cld
imul
fisubl
aad
cmp
and
push
repz
ljmp
rcl
or
mov
mov
lods
or
je
out
lret
call
add
pop
xor
xchg
cld
pusha
hlt
and
aas
dec
dec
mov
call
add
add
push
fs
jl
fstpl
aad
inc
sbb
arpl
fcmovb
aaa
jb
jns
fsubs
lret
push
sarb
ljmp
push
mov
lcall
adc
lret
ret
xor
aad
cmpsl
xchg
ljmp
cmp
adc
mov
xchg
fimuls
jns
pusha
pop
faddp
dec
adc
cmp
sti
test
in
div
cmp
lcall
push
sub
in
testb
aam
push
cld
mov
adc
out
xor
outsl
dec
lcall
jb
mov
lea
sbb
xchg
pop
cmpsl
ret
data16
push
mov
in
jns
adcl
cmpb
mov
xchg
mov
mov
dec
loopne
flds
ret
pop
jecxz
add
mov
mov
or
push
repnz
pop
adc
cld
mov
xor
fnstenv
insl
dec
enter
enter
dec
mov
movsb
in
xchg
push
jg
cld
hlt
mov
xor
or
push
repz
fs
subb
mov
lret
sub
pop
stos
pop
outsl
mov
in
bsr
dec
bound
adc
fsubl
jbe
sub
mov
xchg
cwtl
andb
inc
sahf
add
pop
xchg
arpl
lods
scas
dec
inc
mov
pop
push
and
fisubl
into
pop
or
sbb
push
imul
pop
cmp
fucom
idivl
jge
imul
push
sub
jp
add
out
sbb
xchg
out
int
test
fisubs
xor
orb
cld
xchg
stos
fidivrl
movsb
inc
jge
pop
rcl
xchg
aaa
adc
clc
or
adc
xchg
inc
jle
pop
aaa
or
mov
aaa
mov
xor
or
les
pop
cmp
stos
xchg
ret
dec
les
cmpsb
dec
das
sti
pop
jns
sbb
push
mov
jle
or
xchg
jmp
mov
repnz
or
shr
pusha
or
jo
jmp
mov
jecxz
jnp
cli
pop
int
or
xor
push
testl
out
and
repnz
dec
pop
fnstsw
mov
jmp
jmp
imul
mov
fwait
loope
test
and
nop
je
pmaddwd
pop
inc
sub
movsb
mov
int3
into
sub
imul
in
aaa
test
push
xor
js
out
aaa
insl
sbb
hlt
mov
inc
in
mov
or
ljmp
fldcw
push
fcompl
cld
sbbb
test
dec
push
js
dec
or
cmpsb
push
dec
stos
push
mov
jecxz
fisubrl
mov
sti
inc
test
cltd
inc
test
stos
fs
push
mov
inc
xchg
cld
mov
sub
int
les
dec
pop
push
outsl
loopne
push
das
ss
arpl
push
loope
xchg
and
fcoml
ja
push
mov
mov
jge
adc
mov
fidivl
inc
dec
repnz
fidivs
fcoml
dec
ret
adc
push
fs
mul
cld
les
bound
add
jge
add
cmpsl
rcrl
add
xor
dec
xchg
mov
test
push
bound
insl
jl
fdivl
dec
in
dec
enter
fsubl
daa
pushaw
mov
cmpb
dec
cmp
std
dec
in
lea
push
fisubrs
pop
or
sub
lea
lret
repnz
mov
leave
pop
lea
imul
mov
mov
jae
mov
and
loop
xchg
repz
lods
jae
std
pop
push
aam
add
mov
pushf
fdivp
add
imul
pop
mov
fcmovu
pop
test
or
dec
and
les
dec
mov
pop
cmp
inc
lahf
fsubr
int3
outsb
dec
inc
aad
or
sbb
leave
mov
fsubrl
sub
cs
pop
gs
mov
xchg
push
add
jge
lds
cmc
jnp
addr16
pop
and
test
mov
stos
shlb
aas
mov
inc
sbb
movl
or
aam
push
push
inc
dec
negb
and
mov
lods
mov
aas
fidivrs
fsubrl
ficoms
inc
mov
cld
jae
mov
flds
push
jmp
sub
fistpl
sub
fcmovu
popf
movsl
cltd
orb
sub
shll
cmc
push
lcall
test
stos
scas
cmp
jecxz
clc
mulb
or
addr16
cld
cmp
inc
out
pop
outsl
mov
test
push
sub
sbb
mov
dec
scas
nop
cs
push
out
dec
stos
ret
frstor
cltd
xchg
pop
xchg
or
dec
lcall
sub
loop
push
or
aas
push
or
test
cld
subl
movl
inc
push
lds
data16
dec
jge
xchg
jo
push
cmpl
fmull
xchg
xchg
xchg
in
mov
fcmovbe
aam
xchg
icebp
enter
dec
and
andl
shll
test
add
out
hlt
cmp
call
or
stc
or
inc
ss
lock
fdivrs
sahf
mov
xchg
imul
cmp
loope
cmp
add
cmp
gs
xor
adc
gs
sbb
cli
sbb
inc
xchg
in
sub
or
ljmp
mov
out
xchg
leave
sbb
inc
mov
int
fcmove
jecxz
in
push
fcompl
cld
and
gs
sarb
vmread
rcl
int3
test
mov
push
pop
cld
imul
out
jmp
or
push
nop
push
in
pop
add
dec
cmp
ja
xor
sub
or
xchg
aas
imul
or
lock
jle
and
sbb
xlat
jle
mov
push
mov
jmp
dec
dec
push
xlat
xlat
test
pop
mov
repz
sbb
mov
in
lods
dec
ja
aaa
mov
orl
mov
movsb
in
hlt
xor
mov
ds
aam
cmp
ret
or
insl
fidivrl
cmp
int3
xchg
jno
or
mov
enter
int3
rclb
jb
hlt
mov
add
idivl
out
sbb
push
popa
pop
xchg
shlb
add
imul
negb
push
andb
int3
outsl
sbb
add
sbb
jecxz
and
push
jge
test
scas
cld
popw
popa
mov
lea
cmp
push
aam
pop
and
notb
lea
adc
nop
clc
mov
int
add
cmp
flds
in
mov
push
pushf
adc
bound
jb
nop
in
arpl
adc
repnz
adc
pop
fldenv
mov
or
dec
in
or
lcall
or
insb
lcall
lahf
mov
or
fsubr
pop
cltd
call
and
fcompl
mov
int
dec
cld
push
aam
and
cli
add
add
cmpsl
jge
in
cld
mov
pushf
mov
lock
repnz
jo
por
inc
stos
xor
or
xchg
in
cld
imul
pop
sbb
jae
shr
in
push
cmc
fdivrl
out
xchg
sbb
xchg
imul
xor
mov
sbb
or
jmp
xchg
clc
adc
ret
fadd
bound
pop
out
mov
sub
ja
nop
xor
popf
and
movsb
push
mov
jnp
addr16
push
stc
aaa
mov
fidivl
xor
mov
inc
je
inc
pop
repnz
hlt
xor
push
and
push
aaa
lret
out
in
lret
or
test
orb
lock
jecxz
pop
ficoml
mov
mulb
in
in
inc
fisubrl
movsb
xchg
adc
stos
jae
mov
outsl
popf
out
inc
fists
in
adc
testl
add
punpcklwd
scas
mov
mov
scas
in
pop
icebp
push
imul
arpl
rcrb
or
adc
mov
cmp
pop
int3
add
pop
in
sbb
sbb
jnp
pop
outsl
dec
xchg
pop
mov
mov
sub
push
es
lods
pop
fiaddl
push
cmc
jnp
push
jecxz
sbb
pop
mov
daa
hlt
inc
adcl
fstps
les
enter
sahf
sbb
data16
lods
fs
pop
ds
jmp
int3
loopne
in
ljmp
mov
or
daa
loope
les
mov
loop
inc
mov
jle
int
xchg
or
ret
rcr
clc
fs
insl
sbb
aas
std
lods
jp
xor
ja
mov
push
shll
dec
shrl
push
aaa
pop
jns
push
cmpsl
jbe
or
mov
cli
cld
lds
rclb
jmp
jne
adc
inc
ss
mul
movsl
adc
jle
repnz
mov
mov
aad
cmc
mov
push
dec
lock
cmpsb
and
lock
pop
aad
mov
int
sub
xor
into
cmp
xor
jnp
pop
sub
je
cmp
inc
sub
dec
stc
push
or
test
out
mov
mov
pop
adc
cmp
loopne
div
test
lcall
push
cld
inc
inc
js
sbb
test
into
or
xchg
rorb
in
std
mov
xchg
cmp
addb
negb
testb
add
jns
test
push
insl
shrb
jecxz
or
outsb
sub
push
ja
xor
subl
cs
js
jmp
jl
xchg
mov
xchg
mov
pop
rcl
in
adc
pusha
cmp
call
mov
js
bound
addr16
outsb
xchg
cmpsb
pop
mov
push
xchg
js
cld
scas
in
cld
mov
sbb
or
loop
movsl
or
mov
add
xchg
pop
push
test
push
fcoml
pushf
mov
scas
sti
mov
mov
jp
push
xchg
popa
fmull
shr
sahf
mov
or
mov
clc
xor
ret
sub
and
lods
mov
mov
push
fcoml
adc
cmp
addr16
outsl
pop
clc
mov
loopne
stos
psrld
fiadds
cmp
mov
loope
inc
jmp
mov
jmp
ret
cmp
add
out
data16
scas
push
push
aam
imul
push
arpl
shlb
inc
shl
int3
ljmp
test
inc
cmc
cwtl
mov
mov
loop
and
push
dec
push
adc
inc
push
inc
xor
icebp
cli
pop
jno
in
decl
mov
fucom
test
mov
addr16
mov
fistl
push
push
out
jge
and
add
cmp
dec
inc
mov
jl,pt
push
mov
popf
cmc
xchg
out
xchg
push
outsb
push
shlb
out
fistpl
ljmp
xor
mov
fidivl
sub
jb
xchg
aaa
call
mov
insb
rcrl
mov
pop
aas
and
out
les
adc
loop
ljmp
insb
lret
cmpsb
mov
mov
push
stc
iret
rcrl
aam
jg
mov
lds
xchg
imul
pop
sbb
sub
sub
in
push
cld
mov
xchg
lods
repnz
xor
mov
cld
sbb
jo
rcrl
jns
dec
mov
mov
fstl
pop
jle
pushf
aas
mov
imul
push
dec
dec
inc
pop
sahf
movsb
test
or
push
jbe
xchg
iret
aas
aas
repnz
cmp
pop
or
adc
rorl
push
xchg
mov
inc
xchg
ja
test
jge
enter
shrb
pcmpeqw
test
jnp
add
mov
sar
int
add
xor
push
jl
dec
movsb
bound
jae
enter
adc
xor
imul
lods
xchg
jnp
stos
loopne
lods
repnz
ret
cmc
pop
repnz
cmp
in
test
inc
adc
mov
xor
jle
push
jecxz
mov
mov
enter
inc
cmc
aam
andb
jae
out
or
or
in
sbb
mov
notl
pop
repz
jbe
insl
into
cltd
je
sub
rol
add
call
pop
xchg
xchg
out
xlat
nop
mov
dec
push
ja
lahf
push
test
pushf
nop
into
es
push
movsb
mov
in
iret
add
ret
jle
enter
pop
test
sbb
mov
or
push
and
into
mov
hlt
sub
repnz
mov
adc
enter
ds
lods
or
std
bound
or
mov
aaa
push
lret
into
je,pt
cs
dec
fdivrl
jmp
pop
mov
ja
bound
pop
xor
lock
and
incb
cmpl
jo
push
sbb
loope
mov
mulb
and
xchg
outsb
pop
pop
addr16
cmp
mov
and
pop
cld
addr16
addl
stos
xor
push
push
push
gs
adc
push
inc
out
stc
sbb
mov
push
push
addr16
pop
rorl
aam
icebp
out
ficomps
adc
cld
mov
mov
stc
mov
out
and
int
and
dec
dec
push
jg,pt
cmc
xor
pop
test
fs
aaa
data16
das
subb
mov
lcall
mov
jnp
or
jge
cmp
jmp
add
mov
cmpsb
dec
in
inc
jp
rcl
out
pop
fcompl
test
inc
push
loope
inc
push
fs
jb
and
xchg
inc
mov
pusha
pop
inc
mov
clc
fmul
xchg
aas
or
add
mov
jbe
iret
adcl
ljmp
or
pop
icebp
mov
inc
xor
mov
mov
mov
cld
cmp
in
add
or
in
jnp
push
loop
jo
mov
adc
call
or
sbb
cmpsb
jle
sbb
xchg
pushf
push
cmp
pop
shr
pop
cmp
lret
faddl
sub
dec
rorb
fnsave
stos
dec
mov
cmc
cld
jb
adc
pop
js
in
idiv
add
mov
movsb
xchg
outsb
in
iret
xchg
hlt
sti
jge
sti
gs
not
test
mov
lcall
mov
xchg
sbb
repz
mov
je
cwtl
inc
lock
test
stos
sub
mov
je
lods
sub
mov
pop
jne
movsl
std
jmp
pop
ljmp
jmp
pushf
add
sbb
out
enter
lock
loope
cld
enter
mov
jg
mov
xor
cmp
adc
nop
test
js
int3
cmp
sahf
mov
push
inc
icebp
in
pop
push
jecxz
incl
out
push
push
fsts
jbe
push
loope
hlt
data16
lea
add
push
mov
mov
cmp
cli
pop
cld
xor
lds
adc
push
das
stos
fildll
arpl
bswap
mov
fistpl
ficomps
in
addl
ret
fsts
loopne
jnp
clc
mov
jnp
pop
cli
mov
xor
imul
pop
repnz
jl
jne
lcall
rorb
fdivl
test
push
out
push
pusha
out
mov
aaa
xchg
shr
push
cld
mov
pushw
pop
dec
fldenv
cmp
sbb
lret
push
pop
pop
lea
shrl
loope
lock
pop
push
insb
mov
gs
sub
fcoml
int
sub
jne
into
and
aas
stc
dec
insl
jnp
pusha
jb
pop
aaa
inc
repz
loop
je
sub
loope
loop
jle
mov
imul
inc
insb
lret
test
call
test
xchg
jno
sbbb
shrl
and
addr16
xlat
movl
jmp
dec
jge
sbb
test
repnz
sbb
jae
pop
mov
dec
mov
je
test
sbb
cmp
xorl
mov
pop
rcr
cmp
inc
inc
cmp
idivb
push
mov
pop
call
jne
repz
jns
push
out
insl
rol
add
mov
in
pop
stos
inc
pop
in
mov
mov
cmp
mov
push
xchg
inc
xchg
or
sti
lahf
xchg
int
test
adc
xchg
cs
les
sbb
pop
bound
jne
into
jo
ret
cld
hlt
pop
faddl
pop
add
or
fadds
test
scas
cld
dec
call
xor
mov
mov
nop
inc
int3
dec
cli
or
imul
jne
sbb
dec
pop
call
fidivrs
inc
in
push
lahf
test
mov
mov
movsl
lea
mov
pop
popa
sub
jp
pop
sbbl
hlt
dec
inc
setg
cmp
mov
test
push
xchg
outsb
pop
sub
pop
cwtl
clc
mov
jno
test
rcr
push
imul
dec
testb
cs
jmp
ret
inc
rol
xchg
xor
test
movsl
negl
cmp
inc
enter
adc
fidivs
les
bound
add
lea
cmp
mov
movsb
and
popf
mov
fsubrp
push
fistpll
cmpsb
imul
pop
sub
xchg
pop
inc
or
insb
int3
dec
mov
mov
lret
decb
mov
rcll
test
lds
sbb
cmp
aad
nop
repnz
pop
in
lret
pop
sbb
addr16
inc
push
mov
cwtl
inc
sub
jns
add
pop
xchg
mov
gs
hlt
cld
mov
adc
imul
jae
aaa
mov
mov
mov
push
imul
xchg
pop
jo
and
frstpm(287
mov
mov
pop
mov
in
mov
loopne
inc
ror
leave
nop
stc
dec
sbb
pop
jecxz
mov
popf
testb
ljmp
aaa
push
lret
es
sub
or
loope
flds
lret
in
jge
out
pop
push
or
jne
mov
out
jne
andb
enter
scas
loope
dec
cld
pop
push
stos
test
fs
or
cld
mov
outsl
xchg
push
xchg
cld
dec
dec
mov
and
or
sbb
shr
xor
jp
inc
xchg
sub
inc
scas
sub
aam
fdivl
xchg
xor
aad
mov
mov
dec
add
jbe
cmp
test
in
ds
push
jb
add
sub
and
lods
je
cmovo
das
ljmp
sarb
and
faddl
jbe
sar
pop
xchg
mov
pop
inc
mov
mov
jp
jecxz
fidivrl
mov
jecxz
mov
push
mov
lods
dec
push
sar
in
inc
sahf
cmp
bound
repnz
mov
mov
pop
push
cmp
xor
popf
sub
stos
notl
pop
adc
lahf
bnd
sbb
std
in
out
out
sbb
in
paddb
sub
call
jb
mov
scas
out
cld
clc
sbb
mov
into
andl
pop
pop
and
pop
std
scas
aas
sbb
lds
or
hlt
push
inc
ljmp
movsb
sub
cmc
sub
cmp
fisubrl
push
mov
shll
xor
pusha
aam
push
jle
jbe
mov
mov
pop
cli
ljmp
push
scas
cmpsl
sbb
andb
sbb
mov
inc
cmpl
push
loopne
push
jge
ret
rorl
inc
inc
les
or
xchg
rclb
cmpsb
stc
in
std
xchg
mov
inc
sbb
lds
mov
insb
mov
pop
mov
loop
sbb
mov
imul
jb
fcoml
notl
sti
in
adc
or
insl
dec
inc
adcb
xchg
rorl
mov
pop
mov
rorb
push
mov
mov
nop
push
mov
test
cmp
sahf
mov
in
inc
out
add
jnp
jae
aas
cmp
xchg
push
incb
fidivrs
scas
sar
fidivs
adc
cld
lock
mov
out
push
sbb
mov
dec
jbe
or
jb
je
clc
imul
shrb
pop
aas
xadd
in
xchg
les
divl
mov
ja
dec
addr16
loope
cld
jno
bound
jle
sub
inc
push
fimull
and
mov
mov
xor
inc
and
inc
faddl
and
xchg
cltd
into
mov
out
movsb
jge
arpl
es
pop
fcmovu
loope
fiadds
cmp
and
pop
adc
pop
test
xchg
ja
shrl
lcall
and
adc
sub
roll
sub
cmp
mov
dec
or
mov
dec
push
ljmp
pop
loope
sub
pop
mov
enter
pop
jae
rep
lcall
ss
shll
stos
lret
popa
jb
or
adc
or
inc
and
mov
icebp
movsb
pop
scas
jge
aad
push
scas
mov
lahf
fs
jmp
inc
stc
and
or
lret
mov
push
push
pop
dec
stc
push
scas
cmp
jno
loope
jl
and
adc
sti
sbb
or
adc
test
adc
cmpl
cld
outsb
and
xor
addr16
in
push
or
or
or
scas
arpl
mov
fsubrl
test
jmp
ljmp
out
loope
add
push
aam
sub
sub
xor
cmp
ret
lods
mov
gs
je
outsb
ret
frstor
aaa
dec
bound
inc
fcompl
stos
ret
leave
rorl
mov
ret
iret
lods
aas
divps
loopne
push
add
cmp
fs
mov
cwtl
adc
popa
les
push
fbld
jg
jb
mov
or
push
rcrl
rolb
mov
or
lahf
fimuls
cwtl
cld
mov
push
xchg
mov
pop
mov
xchg
dec
test
fsubl
and
andl
push
and
mov
mov
ss
pushf
cmp
mov
paddw
test
ljmp
dec
imul
xor
dec
insl
mov
sbb
call
fnsave
add
loope
pop
or
scas
pop
adc
enter
push
test
out
sahf
inc
lods
cld
pop
push
ret
out
into
pushl
out
sbb
repz
add
in
sbb
ficoml
lea
cmpsl
and
jnp
xchg
hlt
loope
inc
repnz
cli
enter
xchg
aam
or
pop
aas
insl
in
sub
mov
loopne
ljmp
pop
pop
pop
mov
mov
lds
vpsllq
xor
mov
aas
data16
lods
mov
stos
jnp
xchg
pop
dec
ret
lods
dec
inc
inc
mov
mov
mov
popl
mov
aam
jmp
in
or
push
xchg
jmp
mov
pop
mov
shll
scas
loop
pop
lret
shrb
add
xchg
fidivs
clc
lea
js
add
ss
in
pop
test
and
scas
lods
mov
pop
lahf
rcl
xor
jb
cmpsl
testb
loope
inc
mov
icebp
lret
push
add
subb
mov
pop
test
roll
and
shlb
cmp
or
leave
fisttps
pop
int3
sbb
into
cmp
push
cmpl
inc
mov
inc
neg
jge
rcl
in
loop
mov
jle
cmp
fidivrs
ja
dec
ja
push
insl
inc
hlt
in
mov
push
fimull
cmpsb
iret
adc
repnz
mov
inc
cmp
sbb
leave
addr16
pushw
js
inc
inc
enter
decb
test
daa
jae
inc
lcall
pop
inc
or
cmp
retw
sub
out
stos
test
cltd
bound
cmp
cmp
mov
dec
push
cmp
imul
add
mov
and
jecxz
mov
int
shll
dec
dec
stc
push
sahf
adc
call
ret
sub
in
adc
into
ficoms
lcall
and
push
orb
loope
mov
push
sub
ljmp
leave
testl
mov
cs
push
or
das
sbb
adc
cld
and
sbb
jae
mov
sub
in
jecxz
stos
in
loop
fsubl
stos
mov
mov
arpl
pusha
bound
aam
stc
ja
adc
dec
jg
pop
icebp
popf
std
dec
pop
mov
mov
rcr
add
pop
xchg
iret
out
mov
or
cmp
mov
divl
jl
inc
and
sbb
outsl
test
test
fiadds
int
pop
ljmp
data16
rcrb
iret
js
pop
jnp
insb
jecxz
cld
push
nop
in
sbb
xor
scas
cmp
adc
stos
sbb
mov
les
cld
stos
or
sar
sbb
xor
stos
add
out
dec
ret
push
fsubl
insl
pop
scas
popl
mov
mov
pop
sub
faddl
int
mov
pusha
rolb
int
lahf
fstpl
mov
pop
xchg
movsl
mov
mov
pop
xchg
hlt
mov
int
mov
pop
or
es
fldcw
sbb
jle
and
fdivr
pop
cmpsl
iret
lock
dec
ret
sub
mulb
pop
xor
mov
hlt
jo
clc
mov
xchg
sti
inc
pop
nop
adc
adc
pop
mov
divl
in
mov
cmpl
ret
insl
dec
jge
stos
rclb
cmc
fsubl
sub
adc
sub
int3
clc
xchg
jns
sbbb
call
bound
inc
scas
fdivs
fadds
and
jg
ret
sbb
push
insl
and
repnz
cltd
jecxz
lcall
push
int3
test
xorb
jle
leave
cmp
add
mov
xchg
test
xchg
das
movsb
dec
shr
outsb
pop
es
aam
mov
sub
adc
mov
je
pushf
add
sarl
iret
pop
fmuls
and
icebp
lea
fucomi
and
xorl
rcrl
or
iret
cld
push
pop
mov
inc
sub
pop
sar
jnp
fdivrl
outsl
push
int3
pop
insl
test
mov
ret
inc
or
sub
push
bound
jnp
and
popa
sub
in
or
cli
push
dec
jmp
xor
push
jecxz
insb
xorb
jnp
jne
dec
pushf
cmp
dec
pop
gs
jnp
mov
idivl
sar
mov
mov
fsubs
push
aam
testw
push
inc
imul
movsb
pop
aas
push
add
push
mov
jecxz
xor
lahf
adc
xorb
sarb
out
das
pop
bswap
popf
xchg
cld
mov
movsb
stos
pop
adc
mov
in
cmpsl
jne
int
pop
mov
aam
inc
pop
and
dec
push
out
lea
adc
ficoml
ficompl
push
pop
mov
add
repnz
push
popf
inc
es
jecxz
cld
mov
lods
or
sahf
mov
lods
int
dec
orb
inc
cmpsl
aas
shlb
enter
idivl
loop
xchg
xlat
xor
mov
movsb
popf
shll
lods
jns
cmp
pop
sub
inc
push
ljmp
pop
cltd
clc
js
jle
ja
inc
push
lret
mov
dec
adc
rclb
mov
cld
pusha
incb
adc
add
cvtdq2ps
aam
pop
js
add
fnstcw
jge
orl
cmpsl
and
and
or
cmc
pop
outsl
fs
imul
rolb
dec
fidivrl
aas
flds
fsubrl
inc
cs
pop
push
repnz
or
adc
pop
inc
int
jns
lahf
inc
scas
dec
movsb
push
stos
sub
aam
mov
repnz
fsubr
int
mov
inc
inc
dec
xchg
jae
mov
shrb
jp
xadd
loope
mov
std
jg
mov
add
lods
pop
shll
psubq
mov
xchg
insl
mov
jecxz
lods
pop
mov
hlt
mov
adc
lods
enter
test
dec
sub
test
nop
lods
lcall
das
ljmp
js
repnz
sti
mov
into
push
test
outsb
std
test
inc
sub
shl
inc
ror
jle
xchg
add
xchg
xor
jb
jo
movsb
movsb
in
test
cmp
adc
nop
loopne
mov
push
aam
push
sbb
fucomp
sub
inc
mov
sbb
sub
cld
test
xchg
fisttpl
or
in
js
push
dec
shlb
mov
mov
cmp
cmpsb
es
outsl
mov
fldenv
mov
cwtl
sub
int
inc
cld
sbb
and
mov
mov
sar
cmp
add
in
mov
test
popa
xorl
fs
mov
ror
mov
mov
sbbb
xor
into
add
push
jmp
pop
fisttps
into
add
outsb
xlat
movsb
pop
inc
in
xchg
hlt
aaa
sub
aam
insl
lods
cmpsb
movsb
cld
pop
or
inc
xchg
jbe
loop
daa
dec
imul
stos
lods
or
stc
and
xor
les
jmp
push
inc
ret
xchg
inc
pushf
stos
xchg
mov
mov
imul
pusha
inc
cld
nop
sub
mov
aas
add
test
push
test
mov
sbb
adc
xchg
push
imul
cmp
jbe
mov
outsb
or
in
aas
cmpsb
dec
or
mov
jmp
jo
lret
mov
cld
sbb
rclb
mov
pusha
incl
inc
repz
xor
fmull
and
aam
pushf
cmp
inc
dec
xchg
in
cmp
pushf
inc
jb
enter
loope
cmpsl
out
inc
adcb
xchg
out
mov
mov
and
and
fstp
xchg
cmp
fsubl
pop
add
lock
in
pop
push
cld
rorb
cmpsl
pop
xchg
and
jl
hlt
dec
mov
test
out
outsl
mov
in
cmp
test
mov
test
add
rolb
xorb
es
rclb
pop
mov
out
stos
sbb
cmc
test
sti
lret
mov
aam
lods
pop
repz
outsb
lcall
aam
cmpsb
xchg
xchg
jmp
sbb
cld
loop
add
or
or
mov
in
addr16
dec
dec
push
or
push
push
mov
mov
shlb
mov
or
shr
aam
sbb
sbb
xchg
cmp
pop
sub
fs
std
xchg
iret
jl
xorps
es
ss
loopne
fdivp
out
rcr
push
in
inc
jns
pop
jne
outsl
test
out
rorl
es
jp
scas
ljmp
mov
sub
in
and
adc
add
jecxz
xor
mov
out
mov
movsl
xor
std
cmp
sub
fcomp
daa
xchg
jo
stc
fmull
mov
fdivr
sub
cmc
cld
xchg
xor
push
fsubrp
mull
cli
jno
pop
stc
es
fidivrl
int3
mov
add
xchg
cmp
pop
shlb
mov
push
push
lea
mov
imul
faddl
pop
shlb
sbb
inc
dec
js
js
in
jo
ret
data16
cmp
decb
aas
pop
movsb
jecxz
decl
int
rolb
clc
sub
xchg
ret
xor
lea
and
sub
scas
int
or
lods
movsb
push
mov
ljmp
rcll
push
rcl
or
loop
xchg
negl
jne
pop
cmpsb
cmp
shl
imul
pusha
jle
lret
pop
xchg
push
loope
jl
cmp
nop
and
sbb
jnp
mov
fisubl
push
jge
addl
notl
and
rcrb
add
out
sbb
popa
cmp
in
movsb
push
cmc
mov
js
insb
cld
jne
dec
fldt
ret
push
or
outsb
pop
loope
data16
pop
mov
jnp
test
sbb
loope
hlt
fs
xchg
fbld
sub
mov
ljmp
aad
leave
outsb
sub
daa
sbb
and
sub
fdivrl
movsl
and
jnp
mov
xchg
aad
mov
test
ds
inc
cmp
out
mov
loope
dec
mov
pop
dec
hlt
bound
push
pushf
jns
ret
adc
test
ljmp
adc
lds
movsl
mov
push
outsl
inc
jmp
aad
mov
sub
ffreep
aas
call
xchg
rcr
jnp
cwtl
dec
mov
jae
fs
lea
nopl
mov
mov
filds
ja
into
test
fsubs
push
sbb
inc
fs
dec
fnsave
pop
or
mov
icebp
movsl
enter
into
subl
aas
xor
mov
ficomps
or
xchg
lods
repz
lret
mov
imul
mov
adc
jne
and
dec
mov
aas
mov
loope
cwtl
mov
decl
xor
repnz
into
hlt
popa
jecxz
sbb
cmp
jecxz
adc
loope
xor
jl
dec
pop
int
repz
push
aaa
xchg
mov
mov
dec
and
sbb
inc
repz
out
fs
cld
test
fwait
add
or
jnp
mov
mov
jge
sub
rcrl
mov
mov
enter
int3
ds
sarb
shl
adc
xchg
xor
insl
xchg
in
push
xchg
cmc
ret
pop
jae
xchg
pop
pop
cmp
inc
mov
pop
sti
inc
mov
pop
ret
pop
stos
ffree
jecxz
les
outsl
xor
lcall
stc
sbb
mov
pop
mov
loopne
pop
hlt
xchg
pushl
mov
push
mov
out
mov
mov
fcmovbe
sbb
or
sub
popa
inc
stos
cld
mov
in
js
pop
sahf
push
mov
sub
scas
cmp
aaa
jbe
cmp
add
or
jmp
data16
test
jae
xlat
adc
sub
pop
adc
call
jno
insl
mull
pop
fistpl
push
jns
xchg
mov
movsl
jns
inc
lods
lcall
mov
lea
pop
push
jb
subl
mov
fabs
mov
in
mov
push
add
into
bound
mov
in
cwtl
pop
inc
lods
into
mov
mov
mov
in
cmc
push
andl
dec
cmc
lock
outsb
lcall
mov
or
filds
fdivl
lret
imul
stos
imul
lods
adcl
call
js
rcrl
xor
mov
sbb
mov
imul
jnp
into
inc
sbb
xchg
stc
inc
xchg
xchg
daa
scas
jle
fisttps
jb
lods
dec
ret
stc
lret
lods
sbb
or
pop
mov
and
pop
sbb
subl
mov
push
bound
jo
lds
mov
mov
rorb
jbe
ror
fisubrs
dec
sar
mov
andl
sub
notb
les
stos
push
ss
inc
mov
iret
add
pop
or
pop
pushf
pushf
or
mov
jns
cwtl
sub
jle
loop
jno
lret
enter
sub
xchg
test
mov
push
sar
enter
dec
adc
mov
cld
add
adc
mov
std
or
je
shl
inc
cmp
fsubrl
sub
hlt
jge
sub
cld
add
or
pop
hlt
stos
cld
test
test
inc
negl
xlat
jnp
leave
cli
repz
mov
repz
movb
popa
mov
xor
mov
sub
sti
enter
test
lods
lret
test
ds
mov
push
xlat
std
mov
orl
dec
fnstsw
push
cmpsl
sub
xchg
sbb
rcr
or
pushf
cmpb
add
rorb
cld
das
cld
aad
xchg
adc
jnp
lret
mov
mov
mov
pop
popf
aas
ja
loopne,pt
mov
push
mov
outsl
into
cmpsb
dec
cmp
enter
mov
fdivrl
jl
mov
sub
movsb
mov
inc
lods
fchs
xchg
push
cli
jmp
mov
mov
pop
ret
loopne
xchg
xorb
mov
ficoml
or
jle
les
rcr
adc
ret
out
fsubl
sbb
rclb
mov
mov
sub
popf
pop
fildl
or
ljmp
and
push
repnz
xchg
xchg
inc
lock
das
jle
lods
pop
mov
ret
push
dec
push
sbb
or
in
lea
or
sysret
out
mov
mov
lcall
mov
aaa
jns
pop
pop
les
jno
aaa
push
adcl
inc
jecxz
jno
adc
pop
pop
dec
movsl
mov
popa
push
stc
in
test
ljmp
sbb
jbe
cld
popa
push
aam
xor
push
inc
xchg
lret
mov
pusha
cmp
lret
xchg
xchg
js
and
test
and
int3
cmp
leave
call
pop
cs
sar
mov
rcrb
in
fnstcw
dec
xor
adc
idiv
sbb
arpl
jae
daa
rcll
cmp
mov
lret
cld
push
cmpsb
mov
xchg
bound
movsb
dec
scas
pushf
shl
lods
pop
mov
jmp
repnz
mov
dec
ljmp
add
lock
cmp
mov
mov
pop
sti
enter
dec
fdivrs
jle
xchg
cmp
les
fs
push
mov
mov
lods
jmp
andb
call
outsl
into
adc
cmpsb
xlat
jmp
sub
nop
arpl
or
enter
push
lahf
adc
mov
nop
mov
or
lret
jb
pop
jge
mov
xchg
jecxz
pushf
sub
out
gs
jbe
ja
jnp
bound
sahf
sti
ljmp
pop
cmp
ret
in
push
fwait
mov
dec
out
lahf
movsb
test
scas
push
ds
int
xchg
jns
xor
bound
mov
ss
fstpl
std
lock
jbe
ss
dec
push
pop
mov
or
pop
fdivr
movsb
insl
add
mov
push
rcll
push
lds
push
inc
sbb
movsl
mov
xchg
mov
mov
arpl
aam
sub
mov
cmp
in
orb
fiaddl
xchg
scas
mov
pop
push
nop
push
inc
imul
movsl
dec
rcrb
popf
sbb
dec
scas
push
mov
sub
icebp
adc
out
inc
ret
push
rcr
push
lahf
inc
xor
repz
ret
cs
mov
fsubrl
loop
pop
mov
and
imul
jecxz
dec
xor
sub
testb
adc
pop
ja
orb
ret
adc
popa
add
dec
sahf
mov
mov
movsl
mov
movsl
sub
in
and
enter
mov
cmp
inc
enter
push
adc
es
and
jmp
adc
mov
rorb
imul
sub
outsl
or
xchg
cmpsb
mov
movsb
jl
fsubrp
sbb
inc
in
or
sub
dec
mov
mov
aam
aad
lds
int
in
hlt
xchg
std
dec
addr16
jg
mov
sbbl
les
in
lds
adc
and
xor
push
pop
pop
sbb
out
mov
loop
mov
xchg
cmp
fldt
pop
sbb
addr16
cmp
mov
inc
lea
mov
scas
divl
or
jp
sub
test
gs
arpl
inc
shll
rcrl
inc
jp
ret
enter
sahf
mov
ss
in
movsb
and
into
jns
test
xchg
add
push
jge
in
nop
xorb
dec
push
mov
aaa
adc
lret
push
mov
jmp
ret
sbb
jmp
loope
in
or
jne
sub
fdivl
arpl
notl
mov
jge
dec
add
cld
aad
mov
sbb
xorb
cmp
scas
cmp
sahf
fildll
mov
jbe
xchg
imul
jmp
es
or
insl
cmp
pop
dec
push
icebp
cld
jae
mov
fwait
pop
fsubl
add
mov
jb
dec
cmp
test
sub
xchg
cmp
adc
les
adc
es
xor
daa
or
xchg
aam
inc
movsb
fnstsw
bound
lods
pop
xchg
out
pusha
cld
adc
sub
pusha
shrl
fwait
cmp
or
cld
repnz
xlat
pop
icebp
mov
dec
sbb
decl
adc
mov
pop
mov
xchg
jns
jge
mov
xchg
shrb
xor
repz
arpl
cli
mov
add
mov
adc
lods
sar
push
mov
fmul
divl
iret
cmp
mov
cli
pminsw
sub
xchg
xchg
push
clc
out
dec
jbe
sarl
imul
jne
fadds
xchg
sub
iret
jp
jne
sti
jmp
ljmp
mov
clc
rol
orl
mov
iret
jecxz
rcr
pop
test
gs
xlat
pop
push
test
push
jp
dec
mov
ucomiss
or
jecxz
mov
pop
mov
stc
shufps
jg
cmp
iret
jmp
lahf
push
pop
stos
jl
int
jne
xor
lret
jle
enter
enter
mov
cmp
fadds
into
popa
add
nop
into
loopne
scas
cmc
mov
and
dec
pop
or
xlat
cmc
push
sbb
fs
in
loop
fmull
jo
movsb
sub
sarl
imul
push
hlt
mov
fwait
add
xchg
mov
shrb
add
jb
fdivrl
pop
cwtl
dec
fidivrs
mov
into
std
cmpsl
dec
dec
mov
stc
ret
ret
dec
dec
lret
out
mov
sub
in
fistpll
enter
in
cld
sbb
aam
clc
fmul
cmp
movsl
sub
aaa
mov
pop
inc
sub
mov
les
mov
or
insl
xor
fs
lock
imul
ret
inc
subb
push
jp
jb
addr16
sub
adc
scas
pop
pop
cmp
pop
inc
jp
dec
cmpsb
jge
or
push
jl
into
or
test
jmp
inc
mov
add
roll
xchg
mov
stos
mov
jle
cmp
subl
fistpll
mov
rcrb
test
rorl
dec
or
sub
sbb
push
imul
out
cmp
pop
mov
arpl
ds
cli
fildl
lock
and
xchg
leave
pop
jns
loope
movsb
orb
add
push
clc
and
push
std
rclb
mov
mov
popl
imul
jg
scas
push
ljmp
jns
cli
and
movsb
outsl
jmp
roll
lret
ljmp
mov
movsb
adc
and
dec
int3
mov
outsl
rcl
ljmp
mov
roll
rorl
mov
icebp
lea
cmp
les
mov
mov
mov
pop
xchg
stos
int3
sub
lea
lds
stos
push
int3
push
jnp,pn
sti
ret
fwait
arpl
mov
test
mov
test
xchg
lcall
loope
jne
or
mov
push
and
lods
inc
inc
sbb
rorl
sub
add
call
or
addr16
cmp
push
clc
xchg
outsb
adc
aad
scas
mov
jb
incb
in
fwait
dec
cmpsl
dec
dec
out
inc
mov
mov
add
sub
cmp
jg
ret
jbe
dec
ds
inc
clc
xchg
sti
push
pop
and
cld
xchg
ds
into
pop
fnstcw
pusha
and
and
dec
cmp
add
stos
loop
fcompl
scas
adc
dec
ljmp
rol
jne
and
loope
inc
mov
sahf
xor
pop
sub
pop
or
sarl
out
mov
jbe
movsl
cmp
mov
cli
inc
cmp
out
repz
and
mov
push
pop
out
int3
add
pop
mov
sub
cmpsl
dec
sbb
outsb
lret
sub
clc
xorb
cs
mov
icebp
mov
mov
stc
fistl
pop
jnp
xor
push
fcompl
fs
cmp
hlt
ret
cmpsb
subl
pop
cld
pop
or
dec
inc
sbb
add
lcall
call
xchg
inc
add
sbb
test
jl
das
adc
enter
out
add
sbb
imul
mov
inc
jmp
jno
xchg
out
movsb
mov
and
fcoms
push
push
clc
xchg
outsb
mov
outsb
or
xor
push
dec
loop
mov
mov
decl
notl
cld
xchg
xchg
inc
ficompl
insb
cmp
hlt
test
shlb
push
mov
scas
jo
dec
sbb
pop
stos
cld
subl
loop
out
loope
sti
xchg
mov
push
addr16
lds
mov
lock
jg
in
xchg
mov
or
xchg
mov
test
loope
int
or
mov
inc
cmp
jecxz
loope
mov
ficoms
scas
jecxz
inc
mov
pop
push
or
sbb
aad
pop
and
cmp
cld
shrl
sub
cmp
mov
test
mov
pop
or
popf
or
fs
mov
test
mov
jnp
or
movsb
dec
mov
movsl
loopne
dec
fdivrl
xchg
scas
pop
aam
in
inc
int
sbb
push
pop
fdiv
stos
mov
jno
ficoms
mov
sahf
push
cs
enter
add
enter
decb
adc
and
incb
sbb
hlt
ret
cmpl
jno
add
cmp
mov
or
and
jle
pushf
test
jl
subl
dec
jno
lret
pop
mov
add
cmp
ja
or
jmp
xchg
lret
ret
add
mov
jnp
push
mov
in
cld
pop
mov
push
mov
fadd
lret
call
arpl
hlt
ljmp
rcr
and
jge
push
fnstenv
rclb
mov
adc
dec
jbe
imul
iret
or
and
jno
mov
push
dec
dec
mov
js
add
jb
sub
stos
lods
push
dec
add
dec
stos
aaa
mov
pushf
adc
inc
jge
sbb
mov
and
lods
mov
pop
shl
or
sarl
mov
push
into
aas
mov
inc
push
iret
or
nop
jmp
mov
test
pop
rol
pcmpeqb
or
aas
cld
and
sbb
ljmp
sub
test
and
insb
adc
jae
and
jne
cli
scas
dec
loope
rcl
push
jno
and
into
jecxz
inc
adc
in
xchg
gs
jge
ja
movsb
movsb
mov
add
in
arpl
sub
sbb
push
cld
js
mov
std
repnz
jnp
mov
cld
adc
loop
mov
sbbb
or
mov
addb
sub
xchg
inc
imul
cmp
leave
mov
loope
cmp
aas
cmp
fdivrl
adc
xchg
in
pushf
or
push
push
mov
inc
xor
jecxz
call
scas
push
jecxz
inc
test
cmp
and
jns
icebp
aad
sahf
dec
decl
sbb
dec
arpl
out
push
pop
mov
lds
adc
movsb
mov
aas
aam
repz
scas
push
insl
mov
pop
xchg
rorb
fcompl
and
mov
cmpsb
mov
sbb
mov
or
and
addl
push
scas
cli
repz
add
leave
in
cmp
cmp
loope
push
inc
push
jnp
shrl
mov
jge
loopne
clc
sbb
mov
pop
inc
mov
fidivrl
xor
adc
in
add
dec
bound
mov
sti
movsl
push
sub
xchg
sub
fsubp
push
inc
lock
jle
xor
pop
iret
fsubrl
push
cmp
cli
push
int3
xchg
fisttpl
pop
cld
xlat
aaa
jb
xor
out
add
push
pop
repnz
das
in
call
push
fstpt
and
pop
aam
jl
rolb
add
or
enter
xorl
mov
stc
test
enter
sbb
pop
clc
out
adc
and
cmpsb
stos
jl
or
xchg
xor
sub
repz
inc
shrb
movsl
xchg
test
popa
xchg
jae
dec
push
test
repz
and
loope
mov
xchg
imul
sarb
cld
ret
syscall
shlb
and
repnz
push
push
popf
in
imul
push
sub
push
mov
fmul
js
decl
iret
stos
push
push
sti
aaa
lret
pop
push
and
xchg
xlat
pushl
sti
inc
dec
lea
inc
sti
int3
jge
jmp
pop
insb
outsb
aam
jne
rolb
les
push
adc
lahf
in
faddl
xadd
mov
mov
inc
ljmp
dec
movsb
xor
fdivr
lret
pop
in
insl
mov
push
and
cld
mov
fidivs
cmp
mov
inc
addr16
lret
push
and
xor
in
mov
sub
inc
scas
loopne
repnz
int3
jne
ds
fadd
outsb
push
push
adc
or
mov
pop
inc
push
jle
sub
fdivr
cmpsb
sbb
mov
loop
adc
jp
clc
bound
enter
aam
xlat
cltd
test
aam
ffreep
insl
fsubrl
dec
pop
pop
sbb
push
and
pop
adc
hlt
add
fdivs
arpl
jno
mov
imul
cmc
rcrl
fisubrl
ss
mov
sub
sbb
into
cmp
das
aam
xorl
ds
cli
dec
or
push
cld
xchg
int3
adc
in
insb
fidivs
or
sbb
loope
sub
cld
mov
dec
push
xchg
pop
shlb
nop
mov
xchg
test
mov
add
inc
sbb
test
ret
cmp
xchg
sub
dec
dec
aad
es
mov
clc
fwait
addb
mov
pop
push
arpl
jle
jmp
push
rcll
popf
jecxz
out
ja
ljmp
push
dec
inc
or
jne
mov
pop
fdivrp
std
inc
xchg
inc
enter
dec
imul
repz
jmpw
jmp
aas
lcall
mov
cmp
pshufw
jb
out
xor
sbb
mov
and
cld
adc
fistpll
jecxz
inc
std
pop
imul
lret
add
push
mov
ds
ret
dec
int
imull
outsl
jp
dec
xor
mov
cmpb
add
sub
ss
hlt
scas
jmp
addl
cmpsb
xchg
xchg
dec
enter
mov
push
sti
mov
inc
dec
hlt
adc
popf
dec
push
cmp
cld
or
or
mov
xchg
jg
inc
aas
pushf
or
ret
mov
mov
inc
fimull
or
adc
sub
jp
xchg
cli
xor
imull
dec
inc
arpl
fdivrp
add
push
loope
stos
sub
aaa
pop
jle
mov
clc
icebp
out
repz
aad
sub
cld
push
push
orb
arpl
and
jb
not
mov
lock
jle
xchg
cmc
cltd
push
xchg
shr
or
loope
in
bound
sub
push
sbb
pop
ret
stc
outsl
add
mov
out
sarb
rorb
cmc
push
rcrl
cld
and
mov
add
xor
fdivl
jbe
xchg
inc
xchg
mov
add
stc
jle
mov
outsl
add
sub
pop
into
xchg
inc
fwait
xchg
mov
pop
sbb
lea
mov
pop
femms
negl
inc
add
pop
dec
push
rcrl
jnp
mov
test
mov
jmp
add
cmp
rcr
into
sub
dec
out
xchg
pop
or
mov
sub
popf
pop
dec
out
imul
xchg
inc
adc
in
and
rolb
pusha
incl
push
iret
movsb
or
adc
ret
sbb
mov
leave
movsb
mov
pop
adc
inc
mov
fisttpl
adc
jg
adc
out
andl
sbb
lea
adc
mov
out
sub
cmp
movsl
push
add
jnp
nop
scas
dec
popf
dec
jb
xchg
fmull
push
cmp
cld
mov
insb
lods
mov
cld
pop
sub
cmp
mov
or
arpl
sub
std
pop
jl
movsb
jmp
js
daa
decl
pop
enter
ret
jle
cmovl
pop
decl
pop
ja
cmp
bound
pop
in
lock
shlb
mov
scas
stos
and
scas
mov
mov
pop
imul
in
jecxz
es
cmp
jbe
push
enter
sub
adc
fwait
call
cld
movsl
int3
inc
and
out
fldenv
ljmp
pop
insb
jge
or
ret
cmp
rorl
das
and
mov
pop
jno
paddsb
jp
out
pop
pop
add
fxrstor
pop
jl
push
out
or
loope
int
ja
outsb
and
inc
int3
adc
xchg
cld
xchg
xchg
popa
rcr
cltd
lods
movsb
mov
enter
push
jbe
inc
loopne
int3
jle
pop
lods
inc
mov
js
cmpsb
and
loopne
scas
adc
mov
cli
sub
sub
popf
dec
pop
sbbb
add
add
mov
xchg
inc
dec
in
outsb
adc
or
dec
sub
xchg
imul
or
mov
inc
test
call
mov
pop
add
push
ret
jmp
imul
addb
sarb
sahf
xchg
outsl
movsb
insl
adc
add
cmp
leave
xchg
frstor
push
fsubrl
cwtl
mov
push
sub
mov
movsl
movsb
push
lcall
imull
dec
shlb
mov
jp
lods
into
mov
dec
jmp
pop
rcr
fdivrl
pop
inc
lods
mov
ss
out
fdivrp
fmull
mov
and
mov
jmp
inc
int
cmp
sarl
loope
das
roll
daa
fs
leave
test
fisubrl
adc
je
ficompl
inc
sti
lcall
cmp
iret
mov
pop
push
mov
pop
rcr
into
jecxz
push
jle
pop
stc
dec
mov
pop
cmp
cld
xchg
mov
sub
mov
jno
imul
dec
imul
lret
bound
mov
movsl
xchg
push
fnstsw
in
mov
mov
xor
pop
lock
scas
push
fst
add
jmp
data16
or
dec
and
mov
test
shl
pop
xchg
ficompl
fwait
push
or
inc
jnp
push
frstor
cld
test
xchg
dec
dec
iretw
cmp
test
xchg
cmc
out
or
add
inc
je
sbb
pop
and
mov
dec
cmpl
xchg
and
arpl
leave
sub
lods
arpl
int
pop
pop
or
pop
inc
or
ret
imul
jmp
sbb
mov
cmp
adc
pop
jmp
sub
dec
pop
test
in
mov
testb
imul
or
popf
loope
int
pop
lods
iret
lea
push
fs
xchg
mov
sarl
inc
xchg
repz
jge
cmp
rcrb
cmpsb
cwtl
xchg
pop
idivb
idivl
into
inc
pop
daa
insl
ret
bswap
repnz
into
lds
nop
xor
xchg
push
mov
fsubp
jnp
imul
jmp
loop
popa
sbb
mov
jp
fidivl
and
aad
xchg
or
mov
jl
xchg
fistl
addb
mov
inc
test
addr16
gs
adc
jp
outsl
xor
dec
mov
push
es
push
xchg
enter
scas
imul
pop
shrl
lret
hlt
xor
sub
or
mov
mov
push
rcrl
fsub
std
js
mov
push
sub
movsb
inc
pop
mov
ret
sarb
pop
subb
mov
in
mov
jnp
push
inc
cmc
rclb
dec
mov
sarl
jb
es
xchg
and
test
adc
daa
mov
mov
mov
and
lret
push
in
jmp
ljmp
jle
pop
fisttpl
subl
dec
pop
sub
fidivrl
cmp
xchg
rorb
pop
push
pusha
cld
lock
fisttpl
xor
cmc
mov
bound
fcompl
push
xchg
sbb
ret
fstp
cld
je
fimuls
pushf
lcall
in
int
xchg
mov
and
sbb
fnstcw
lock
ljmp
lcall
adc
mov
mov
lods
sbb
pop
cld
ficompl
sbb
add
cmpsb
mov
ss
jmp
mov
push
xor
xchg
push
cmp
sbb
cmpsl
mov
das
pusha
prefetcht0
scas
cmpsb
test
jb
or
int
loop
xchg
icebp
repz
stos
ljmp
shlb
xchg
ljmp
ss
or
xchg
dec
pop
fidivl
adc
push
inc
fdivs
or
push
shl
jecxz
jge
bound
cmp
dec
or
loopne
xchg
dec
ret
pmaxub
mov
pop
mov
cmpsb
cld
add
push
int
mov
sub
mov
cmc
adc
fcoms
dec
aam
jae
fmull
mov
add
shll
inc
xchg
push
rcrl
inc
repnz
je
mov
inc
xchg
mov
bnd
push
mov
push
adc
jl
xor
fdivr
or
sub
or
in
pop
in
cld
fsubrs
les
jecxz
mov
push
mov
addr16
push
jmp
mov
test
xchg
outsl
mov
fwait
cmpsl
outsb
lret
cld
and
pop
ret
and
lcall
data16
int
shlb
xchg
shll
bound
xor
and
ljmp
shll
dec
ficoms
adc
pop
cmp
jo
les
jecxz
ljmp
xchg
jl
gs
aam
adc
out
js
das
cld
movsb
int3
iret
shll
mov
sub
popa
call
mov
daa
or
lods
lret
sub
aam
out
movsb
inc
xchg
mov
scas
push
clc
cltd
popa
dec
mov
dec
leave
pop
push
adc
pushf
test
out
call
sti
and
or
mov
mov
or
lods
pusha
adcb
dec
testb
stos
mov
ret
hlt
sbb
push
add
pop
mov
lods
outsb
sbb
mov
xchg
cmp
adc
inc
sub
orl
ljmp
in
xchg
scas
add
rclb
aad
rolb
fsub
inc
ds
mov
testl
repnz
mov
sub
push
inc
cmp
sub
movsb
mov
dec
movsb
fwait
aam
mov
dec
out
and
lea
int3
adc
push
lret
mov
or
xchg
outsl
cmp
mov
enter
out
aas
xchg
outsl
out
mov
cmp
fs
push
popa
mov
xchg
jnp
test
cld
inc
ret
pushf
fwait
mov
adc
mov
paddsw
rcl
mov
movsb
cld
dec
push
pop
das
xchg
je
jle
lea
test
inc
mov
and
pop
lea
mov
mov
ja
sbb
les
adc
in
inc
sub
stc
sbb
jb
imul
into
and
push
fcmovnu
push
sub
shr
stos
push
xchg
cld
adc
pop
mov
push
loopne
pop
sbb
das
shll
xor
lea
jge
loop
test
mov
aaa
mov
cld
test
mov
mov
dec
push
les
and
inc
xchg
fldt
pop
jbe
jb
stos
mov
pop
inc
ret
pop
pop
les
icebp
mov
idiv
cld
hlt
test
addl
mov
arpl
mov
mov
push
pushf
sub
mov
test
sbb
enter
cmp
inc
xchg
dec
out
push
jbe
outsb
ret
inc
xor
mov
cld
cwtl
das
insb
or
call
enter
mov
cmp
sub
cwtl
icebp
mov
or
sbb
inc
mov
xchg
iret
in
push
push
jle
sub
pop
mov
fnstsw
dec
jns
cmp
add
jle
mov
xor
adc
call
xchg
call
pop
lods
mov
out
sbb
fcoms
inc
pop
inc
mov
loope
xchg
stos
test
mov
out
int
dec
jmp
add
in
rclb
inc
xor
ljmp
mov
test
adc
mov
aam
push
push
mov
and
push
jmp
leave
outsb
dec
or
ret
sub
mov
fdivl
in
in
sub
adc
xor
iret
xor
or
mov
pop
mov
insl
mov
jno
sub
sub
jmp
pop
rcll
adc
jnp
pushf
loope
scas
and
iret
mov
adc
rclb
mov
mov
jbe
dec
jmp
xor
dec
push
push
xchg
jnp
outsb
pop
in
pop
pop
repnz
and
cltd
xlat
aam
cmp
push
xlat
add
pop
lods
and
jne
loop
fdiv
pop
push
test
inc
loopne
outsb
movsl
xlat
mov
es
leave
add
pop
enter
aam
pop
mov
xchg
adc
outsl
mov
cmp
fxch
shl
enter
cld
mov
and
add
mov
scas
jae
lret
subb
mov
cld
hlt
out
mov
scas
mov
inc
daa
ss
loope
and
inc
or
test
cs
sub
ret
cmp
sahf
jg
in
and
pop
xchg
ja
clc
push
add
int
je
sarb
test
or
adc
add
push
lods
adcb
in
dec
adc
pop
shl
mov
leave
and
xor
cmpb
and
int
pusha
cmp
outsl
fsubs
jne
call
lret
test
push
sahf
into
frstor
cmpsl
adc
sahf
mov
lods
mov
icebp
mov
aaa
cmp
sub
int3
push
fisubrs
push
loop
mov
dec
add
sub
dec
sbb
dec
sub
push
imul
jg
iret
test
dec
ss
rolb
mov
fcmovb
ret
imul
mov
test
into
call
push
mov
sbb
xchg
aas
data16
jno
inc
mov
pop
mov
das
fistl
and
into
and
movsb
mov
or
aas
dec
mov
pop
loop
push
nop
in
mov
jns
sbb
jmp
lods
mov
iret
test
bound
in
sbb
stos
das
ss
fcmovb
scas
shl
test
lods
jl
cld
out
shrb
inc
imul
cld
jge
adc
or
push
push
inc
mov
inc
jne
loope
mov
pop
mov
mov
gs
push
call
mov
jl
sub
sub
mov
push
dec
jb
xchg
push
lea
cmp
xchg
fsubp
fsubrl
mov
fs
pop
jle
pop
xchg
dec
repnz
add
dec
dec
pop
ret
adc
loop
xlat
jl
movsb
jle
adc
or
mov
mov
dec
sti
imul
adc
cmp
scas
push
popf
data16
add
leave
pushf
mov
or
inc
add
push
loopne
in
bound
decb
stc
idivb
roll
adc
imul
xor
mov
dec
mov
aaa
clc
jmp
dec
push
ret
ss
and
xchg
test
pop
pop
dec
jnp
dec
inc
jmp
pop
loopne
or
and
add
jns
push
pushf
dec
and
inc
enter
and
ret
popa
xlat
and
xchg
jg
aam
lahf
mov
xchg
dec
imul
aam
xchg
cmc
sbb
andl
cmc
cld
cmp
lods
daa
pop
mov
push
pop
cld
inc
iret
xchg
lods
xchg
ret
pushf
push
fbstp
fnstcw
pop
fisubrl
test
ss
faddl
push
mov
push
fs
gs
outsl
push
test
sub
fld
inc
add
push
jmp
and
fcmove
inc
sub
mov
mov
cmpsl
push
sub
cmpsb
loope
nop
stos
xchg
bound
testb
xchg
test
stc
fadds
inc
mov
faddl
mov
mov
ds
xor
lahf
dec
inc
sub
pop
rclb
adc
fidivrl
adc
pop
loopne
add
sbb
and
imul
xor
pop
bound
cld
clc
movsl
push
pop
shl
sti
mov
std
mov
test
or
lds
pop
inc
or
mov
and
fisubrl
xchg
adc
in
test
pop
jecxz
cld
push
adc
movsb
mov
fnstsw
xor
inc
into
or
pop
jns
dec
in
shl
adc
in
xor
mov
cwtl
dec
mov
xor
cmc
iret
in
cltd
fisubs
ds
add
dec
push
dec
fiaddl
movsb
cld
shrl
cmp
bound
dec
test
sub
jnp
inc
stos
or
pop
rorb
pushl
jns
cmp
dec
add
fistpll
fsub
imul
mov
test
mov
rcrb
cmpsb
out
dec
pushaw
aam
jmp
push
ret
popf
je
pop
pusha
fldl
pop
sub
pop
xchg
out
fiadds
mov
in
or
pop
repz
je
stos
arpl
xchg
cmp
or
add
popf
mov
jge
and
dec
jg
int3
rorl
jns
test
stos
pop
cmc
jg
cs
in
sub
sub
sbb
pop
in
jle
ja
cld
cltd
mov
mov
cmp
jp
shll
cmp
pop
xchg
ja
insl
gs
cmpsl
sbb
sbb
loop
pushf
jecxz
push
and
jecxz
cmp
jns,pt
cmpsb
ja
push
int
lcall
call
fsubrl
int
adc
mov
push
std
sbb
xchg
test
fstpl
pop
hlt
push
test
cltd
inc
stc
push
jl
jmp
sub
outsb
cmp
mov
mov
cltd
cmp
xchg
inc
into
les
sbb
cwtl
mov
and
cmp
imull
roll
mov
dec
lock
jecxz
cwtl
dec
push
into
xchg
mov
xor
push
fmull
push
xchg
mov
pop
in
movsl
fisttpll
jnp
ja,pt
adc
les
outsl
lahf
bound
sbb
loopne
das
daa
hlt
sub
sarl
iret
out
mov
cmp
pop
xchg
or
cs
dec
mov
inc
out
int3
add
in
or
out
shll
xchg
loope
test
dec
add
aas
ret
push
pop
mov
pop
sbb
js
cmpsb
push
mov
xchg
xchg
roll
shr
call
jg
sbb
lret
mov
cld
int3
jl
cmp
xor
mov
iret
inc
dec
addr16
push
hlt
aam
ja
imul
rolw
popa
repnz
fistpll
mov
lahf
leave
test
push
dec
leave
jle
xchg
icebp
dec
or
mov
push
cld
cmp
insb
cmp
mov
jo
orl
inc
jno
mov
sti
repz
fistpll
mov
enter
mov
pusha
mov
jl
mov
sar
out
sub
data16
jecxz
push
cmp
gs
pop
test
incl
mov
lea
cld
sbb
xor
jo
dec
repnz
push
inc
pop
ret
mov
xchg
jb
call
shlb
in
mov
scas
ret
in
xor
jns
jae
incl
les
jg
xchg
mov
mov
dec
int3
decb
xchg
es
mov
mov
int
push
jl
jb
dec
xor
outsb
out
inc
mov
aam
cld
ja
push
jmp
dec
scas
std
ret
xor
push
sub
xchg
push
rol
fbstp
movsb
dec
ja
push
stc
scas
sti
shlb
xor
push
jb
and
lea
ss
mov
or
jbe
pop
mov
fisubrl
sub
movsb
out
or
fisttpl
mov
jp
xchg
cmp
ljmp
mov
orl
bound
loope
orb
scas
fstpt
leave
mov
xchg
pop
dec
bound
and
cmp
pop
sub
cli
nop
dec
adc
fwait
push
mov
xchg
adc
mov
dec
out
sbb
mov
ds
andl
lea
ljmp
adc
xor
pop
lret
xchg
cpuid
repz
nop
cmc
cltd
mov
test
adc
ret
mov
mov
ret
sti
mov
push
test
call
xor
icebp
and
imul
or
fcoml
test
cmp
nop
add
ret
adc
inc
mov
cld
push
aam
push
in
dec
dec
xchg
cmp
test
jne
cmp
or
mov
mov
scas
push
jnp
push
jmp
push
cmp
in
bound
or
push
dec
ret
lds
mov
loopne
or
add
push
sub
es
repnz
xor
in
add
push
les
sahf
cmp
push
dec
and
repz
test
xadd
lods
pushf
dec
pop
jle
dec
in
inc
push
into
scas
mov
inc
sub
xlat
notl
popa
loop
aad
ror
mov
aas
cld
aad
or
xlat
or
xor
fiadds
inc
mov
mov
dec
in
into
sbb
je
in
push
xor
sbb
js
mov
dec
stos
jge
cmovo
inc
add
rorb
mov
mov
pop
cs
adcb
jmp
cld
leave
in
cmp
or
stos
push
adc
arpl
hlt
sbb
mov
xchg
jecxz
xchg
xor
mov
jge
adc
scas
mov
push
lahf
pop
out
test
lahf
xchg
push
add
filds
dec
jne
arpl
sarb
xchg
add
adc
mov
lds
push
iret
xchg
push
xor
pop
jno
ljmp
inc
mull
mov
pop
push
daa
cmp
test
lds
in
jne
sbb
bound
xchg
and
add
or
jge
dec
dec
int
mov
pop
repnz
cmpsl
pusha
mov
dec
rcr
mov
xlat
and
cmp
or
sbb
aaa
xchg
mov
sar
push
cmpl
sub
pop
push
call
adc
leave
fcmovnbe
and
rcr
mov
mov
inc
add
cmp
mov
fldt
and
push
scas
das
loopne
and
jge
enter
pop
push
in
bound
loopne
fs
mov
xor
adc
mov
lret
xorb
cmp
sub
mov
inc
mov
std
ljmp
je
mov
out
ret
lret
inc
jle
lcall
adc
push
pop
pop
cmp
cmp
inc
cld
call
jo
pcmpeqd
stos
inc
ret
mov
in
in
or
into
xlat
pop
xchg
fsubp
and
aam
push
or
xchg
sub
dec
stc
int3
dec
dec
mov
mov
in
sar
pop
das
mov
xchg
int
movsw
loop
fmull
pop
dec
out
pop
mov
adc
xchg
aas
push
ror
in
ret
call
test
in
dec
fsubrp
mov
repz
lret
es
add
pop
and
push
fs
pop
pop
out
xchg
pop
ljmp
inc
mov
and
test
mov
jae
inc
inc
rorb
addr16
jmp
cmc
out
mov
and
dec
popa
fsubl
push
inc
movsb
xchg
lods
test
adc
mov
out
fsubl
dec
dec
xlat
fiaddl
push
lret
jg
sbb
push
pop
pop
and
shll
pop
sti
mov
rorl
daa
shll
test
mov
pop
imul
das
adc
lods
int3
jge
pushf
jmp
es
cltd
shrl
cmp
sub
imul
loopne
lods
and
mov
mov
aas
pop
rorb
adc
jb
xchg
imul
bnd
cmp
mov
dec
aaa
add
jbe
and
and
bound
push
xchg
vmwrite
sahf
cmp
mov
cwtl
aam
pusha
pop
xchg
and
cld
xor
sub
aam
adc
icebp
dec
decb
xchg
adc
jns
mov
test
mov
nop
aas
das
xchg
push
ror
shrl
or
xor
lcall
enter
rorl
pop
xchg
push
xor
mov
mov
push
cmpb
lea
aad
hlt
lods
ret
pop
movsb
jl
push
nop
inc
das
push
sbb
mov
int
adc
add
ret
xor
fisubrl
les
push
dec
jnp
jecxz
mov
pop
cld
clc
lods
cld
fistpll
add
mov
fsubr
mov
inc
lret
mov
pushf
out
enter
sub
nop
pop
sub
cld
xchg
aad
imul
pushf
andl
rcl
push
sbb
ret
cmpsb
mov
or
imul
jb
fimull
iret
sbb
lock
fmull
testl
adc
mov
push
ret
or
adc
test
sub
imul
and
push
clc
insl
jmp
xchg
and
shrb
or
icebp
xor
jns
mov
mov
dec
cld
adcb
and
pop
adc
out
movsb
xorl
cmp
insb
push
mov
mov
mov
gs
add
dec
mov
mov
cmc
test
sahf
and
push
idivl
mov
cld
mov
icebp
xchg
icebp
in
movsb
fdivr
mov
std
dec
ror
push
mov
pop
mov
icebp
orb
cmpsl
scas
hlt
cwtl
sbb
mov
nop
jle
inc
in
loope
ss
lret
test
xlat
mov
les
sub
in
and
add
int
mov
les
dec
dec
inc
and
ror
xchg
shll
cmpsb
jmp
cmp
rcl
push
add
jp
lods
in
pop
pop
pop
push
inc
push
jns
fisubl
std
cmpsb
pop
mov
in
pop
mov
aaa
popa
bound
mov
and
add
pop
pop
iret
xor
mov
mov
imul
lods
xchg
jmp
insb
mov
xor
popa
pusha
dec
cmp
loop
aam
out
mov
subb
lock
cmp
cmp
sub
sbb
jns
bound
fsubrp
ja
adc
jnp
inc
dec
mull
mov
rcll
fwait
das
movsb
cs
ja
push
es
pop
les
ds
mov
xchg
fmul
pop
pop
or
lcall
add
adc
inc
enter
xor
lahf
andb
popa
cld
cmc
in
mov
and
inc
push
cli
in
fimull
loopne
cld
jo
pop
cmc
rclb
xchg
iret
mov
stos
and
out
mov
test
fmull
adc
cld
test
rorb
lret
jl
dec
push
cmc
xchg
jmp
bound
or
push
test
aam
loope
shl
pop
push
push
or
mov
mov
mov
cmp
inc
sub
int
aad
lods
fsts
sub
jbe
push
std
cmpsl
push
xchg
mov
mov
into
std
pop
xadd
test
dec
mov
sbb
add
inc
push
fisttpll
pcmpeqw
mov
and
rorl
adc
std
fdivrl
pop
mov
push
scas
jb
mov
cld
in
adc
in
mov
insb
cld
fldcw
fstps
push
loopne
cld
arpl
mov
mov
pop
mov
sub
test
jg
pusha
nop
popf
bound
sbb
mov
mov
sbb
shr
mov
mov
test
out
push
sti
and
ret
aas
icebp
leave
hlt
enter
add
insl
mov
pop
in
push
push
xor
out
xchg
les
test
ficoml
fcoms
cmp
sub
mov
and
dec
mov
xchg
push
ds
sub
mov
in
ljmp
push
shlb
fsub
xor
cmp
ret
adc
aam
adc
xor
sub
shlb
stc
xchg
into
xchg
loope
push
int3
aam
pop
sub
test
outsl
push
sub
jns
mov
jecxz
bound
jmp
fsubr
sti
inc
enter
xchg
pop
add
cmpsb
rclb
push
cmp
out
je
push
in
ret
iret
dec
dec
aad
lds
cld
test
pop
rcr
fs
jbe
mov
xchg
scas
dec
adc
cmp
sbb
out
fisubrs
test
cmc
imul
pop
or
or
ljmp
push
push
mov
aam
test
das
push
jb
xor
mov
inc
xchg
popa
sub
decb
dec
xchg
fsub
inc
cld
xchg
xchg
adc
std
fiaddl
ds
enter
adc
push
enter
dec
xchg
fs
jle
rcll
shl
add
out
insb
mov
and
adc
lret
add
pop
sbb
jl
sbb
dec
add
aas
xchg
and
xchg
cmp
jecxz
jecxz
ljmp
scas
jns
mov
repnz
xchg
stos
popa
daa
cmpsb
jle
or
jmp
fdivr
dec
dec
jp
dec
ss
ljmp
loopne
cld
fmuls
jle
add
aas
mov
sbb
mov
bound
mov
sub
pop
push
popl
iret
jle
in
mov
sub
sub
fdivr
es
decl
mov
clc
and
mov
jle
mov
xor
roll
vaesenc
pop
push
jmp
cmp
cmp
xor
in
and
lret
es
pop
dec
scas
movsb
imull
xchg
sub
pop
sub
cmp
fimull
mov
inc
je
mov
cmc
sbb
cli
test
sbb
data16
rcrl
mov
inc
push
jl
mov
repz
adc
jmp
lods
inc
add
sub
scas
mov
jb
dec
jo
mov
mov
bound
lahf
adc
xchg
mov
loopne
jno
xchg
xor
scas
xchg
mov
repz
jecxz
lds
xchg
call
les
cs
iret
fwait
dec
std
or
cld
xchg
sti
jmp
ss
dec
loopne
cwtl
jno
fmull
mov
fstpl
fwait
jecxz
leave
repnz
out
or
out
jle
int
sbb
out
ljmp
push
mov
inc
pop
into
nop
mov
rorl
scas
jmp
sahf
jnp
add
aad
sbbb
outsb
mov
into
repnz
adc
jle
int
pop
jb
lret
jnp
mov
sbb
jmp
or
xor
and
icebp
add
rclb
call
mov
in
nop
dec
je
lods
push
aam
dec
add
imul
and
dec
imul
popa
mov
lods
mov
loop
xorl
pusha
scas
adc
and
mov
ss
mov
sbb
notb
mov
jp
call
fsubp
mov
test
test
push
mov
dec
popa
adc
dec
outsb
mov
lods
and
xchg
adc
cld
sbb
pusha
cmp
lcall
mov
or
sbb
xchg
push
add
push
dec
loope
and
mov
ja
mov
pusha
push
repz
call
jnp
shll
lods
pop
sub
aas
sahf
mov
in
aaa
xchg
mov
mov
imul
mov
and
out
inc
dec
fdivrl
and
fsubl
aad
xchg
mov
cwtl
or
ja
sarl
fcompl
add
ja
sbb
cs
mov
das
loopne
rol
adc
sub
dec
xor
xor
inc
fildl
sar
or
mov
pop
mov
iret
dec
in
dec
repnz
push
or
mov
push
adcb
les
ret
mov
popf
test
inc
xchg
stc
int3
lcall
ss
movsb
ret
push
aad
mov
ss
fld
test
decl
iret
lcall
kmovb
pop
add
enter
mov
sub
jecxz
cld
mov
jl
pop
inc
inc
dec
sarl
dec
clc
cmp
outsb
mov
cmpsb
xchg
int
shlb
inc
scas
xchg
pop
ljmp
dec
fisttpll
pop
ljmp
pop
dec
or
jne
push
add
or
pop
xchg
popa
pop
mov
rcrw
cld
roll
push
sti
jecxz
nop
inc
je
pop
adcb
push
or
lcall
lcall
cmp
notl
xchg
mov
mov
inc
cmp
rorb
pushf
mov
bound
inc
jbe
rcrl
int
jno
inc
loop
mov
loope
inc
xor
or
jb
xlat
and
mov
mov
mov
jmp
lret
inc
psubw
jnp
sub
push
adc
and
test
dec
jmp
and
mov
add
fimull
nop
add
fdivs
inc
faddl
dec
sub
test
pop
or
push
daa
mov
and
mov
xchg
in
add
shl
dec
xchg
fcompl
jae
mov
stos
jle
jo
stos
mov
loope
bound
dec
movsb
inc
pinsrw
or
es
jbe
add
dec
imul
pop
aas
test
aad
xor
xor
mov
push
call
push
jl
pushf
lods
or
outsl
push
pushf
rcr
dec
dec
xchg
in
pop
jbe
jecxz
push
push
fsubl
mov
mov
mov
loopne
sub
ja
hlt
jmp
adc
icebp
mov
clc
cmp
fdivl
jno
jmp
xchg
aas
push
outsl
fwait
aaa
or
push
shll
inc
shr
sbb
arpl
movsl
sbb
cmp
xchg
idivl
adc
xor
mov
daa
cmp
movsl
adc
mov
sti
ljmp
int
call
aam
jmp
insb
cmc
jl
push
jnp
test
sbb
aaa
cmc
stc
sbb
pop
lock
adc
clc
pop
andb
lock
ja
push
shrb
xlat
ljmp
add
fdivl
inc
jge
aas
mov
cltd
xor
pop
mov
sub
xor
rcl
out
xchg
ljmp
adc
ror
rclb
jae
iret
fdivp
inc
mov
mov
dec
in
lds
dec
lret
movsb
shlb
push
pop
push
or
popa
fmull
pop
insb
mov
imul
test
dec
movsb
cmp
or
aam
ret
sub
fidivrs
nop
pushf
inc
adc
ficompl
dec
call
push
push
push
pushf
aaa
stos
adc
jmp
mov
pop
movsb
push
data16
rcrb
repz
xchg
inc
mov
into
cld
jne
dec
iret
dec
aad
dec
loop
mov
add
cmp
adc
add
mov
sub
stos
test
push
inc
pop
rcrb
jle
fidivl
rorl
inc
inc
and
cli
pop
je
ja
pop
pusha
or
jne
scas
mov
dec
lods
xchg
or
adc
fwait
popf
push
cmp
xchg
xchg
cld
lds
movsb
xorl
push
iret
pushf
lods
sahf
in
jne
push
mov
xor
addr16
out
dec
lock
sarb
xchg
adc
fisubrl
sar
fcompl
cld
or
jb
dec
lock
push
dec
decl
or
cmp
leave
mov
orb
dec
repnz
out
push
orl
test
jle
js
fstl
in
std
fwait
dec
ja
rorb
fisttpll
inc
fnstsw
jecxz
ret
dec
dec
dec
add
rcll
mov
dec
stos
mov
adc
xchg
loopne
inc
and
int
repz
or
xchg
hlt
xchg
test
aaa
mov
push
test
mov
mov
and
dec
flds
mov
dec
jo
cmpsb
add
jno
cmp
cmpsl
mov
xchg
mov
jecxz
mov
ret
test
lea
int
xor
pop
pop
inc
cmpl
mov
push
adc
cwtl
repz
jbe
fists
inc
bound
mov
mov
mov
insb
test
xchg
jge
inc
addr16
imul
leave
addr16
adc
in
lahf
popf
dec
jo
cmp
xlat
adc
movsb
pop
inc
lods
lret
push
test
sub
dec
dec
mov
sub
and
push
cmp
cld
movntq
mov
mov
xlat
in
and
out
cmp
pop
leave
lcall
stos
call
mov
cbtw
sti
mov
push
icebp
mov
outsb
cmp
mov
pusha
and
mov
std
pop
js
addb
out
sahf
xchg
dec
sub
mov
stos
sbb
pop
sbb
mov
jae
dec
jbe
push
cmp
rolb
iret
and
enter
das
push
ffree
sbb
jmp
loope
inc
xor
mov
lea
scas
subb
jmp
or
xor
and
rcr
inc
xor
into
out
sbb
clc
xlat
out
add
out
jecxz
in
and
add
mov
add
inc
mov
inc
xchg
cld
push
icebp
hlt
fcomps
aas
aad
xchg
pop
dec
mov
pop
decb
fcoml
jmp
pop
scas
stos
cld
in
rcll
pop
out
lds
xchg
cmpsb
scas
push
xchg
scas
sub
stc
mov
aam
fcompl
arpl
dec
push
in
in
jnp
into
lds
loopne
ret
pushf
push
loopne
or
adc
sar
rorl
xor
out
call
iret
push
xor
add
enter
sbb
les
cld
or
lret
popa
push
jecxz
sbb
clc
bound
cmp
add
movsb
push
sbb
jmp
movsb
out
stos
cmc
pusha
int3
fiadds
cmpsb
negl
in
ja
pop
sbb
scas
push
push
push
push
xor
mov
cmpsb
jecxz
out
mov
cld
xor
xchg
add
jl
dec
faddl
add
sub
jb
loop
mov
add
insb
fcomps
lret
xchg
lret
leave
stos
shr
insl
in
mov
cmpsb
push
nop
jp
dec
rcrl
jnp
dec
les
daa
mov
push
and
pusha
fdiv
dec
push
lret
test
ret
pop
aam
cmp
fs
cmp
mov
nop
loope
leave
mov
add
or
gs
inc
js
pop
cmc
js
loope
sub
xchg
sbb
icebp
sar
dec
jp
test
hlt
ret
sub
outsb
pusha
ret
push
test
pop
sub
push
sub
movsb
pop
sub
cmc
xor
mov
ret
xchg
push
xor
mov
imul
or
cwtl
pushf
imul
xchg
adc
inc
shrl
pop
scas
xchg
xor
out
push
dec
xor
cld
ja
jle
fimull
stos
push
addr16
cmp
ficoms
stos
push
aas
pop
sub
fnstsw
cmpsb
int3
add
sub
cmp
lds
add
jns
ja
jno
ffreep
scas
into
test
loopne
loope
pop
cli
sub
sbb
push
repnz
jl
hlt
sub
jnp
pusha
mov
nop
rol
andl
xchg
fisubrl
faddl
mov
sub
ja
insb
pushf
mov
and
add
lock
adc
mov
into
testl
aas
aam
jno
adcb
xchg
push
nop
dec
aad
mov
sbb
jp
xor
fisttps
push
adc
mov
out
sub
loope
inc
out
inc
jl
mov
cmp
pop
add
sub
inc
call
jne
imul
mov
dec
repz
add
mov
cmp
in
or
sub
cmp
adc
lds
mov
mov
ret
aam
push
mov
add
xor
mov
movsb
mov
gs
mov
out
and
pop
dec
leave
test
jmp
movsb
cld
loope
jmp
ret
xchg
and
leave
inc
jae
lock
push
gs
cli
daa
mov
and
sahf
pop
and
lods
cwtl
xor
push
dec
movb
pop
cld
jge
test
mov
jns
scas
inc
xchg
std
push
scas
cld
cli
inc
pop
imul
pop
xchg
inc
mov
imul
xchg
mull
fisttpll
inc
cld
xchg
sti
aad
leave
push
inc
jae
data16
or
mov
popa
mov
jne
insl
stos
mov
dec
ljmp
dec
or
xor
sti
lods
or
lret
pusha
out
mov
or
sub
call
ficomps
cld
mov
test
leave
icebp
out
loop
in
inc
sbb
dec
pushf
add
int
fsubr
xchg
push
mov
add
mov
xor
insl
inc
stos
dec
adcb
or
dec
push
sbb
in
or
fldt
adc
xor
or
movsb
sbb
movsl
js
iret
jl
stc
aaa
push
nop
ja,pn
test
jns
jno
pop
in
mov
pop
fcomp
pop
repz
into
fdivrl
and
or
pop
cs
fs
lea
jg
test
add
pop
sbb
or
inc
ret
dec
call
mov
cld
xchg
xchg
scas
subb
popf
dec
mov
insb
mov
push
stc
mov
push
sub
arpl
jl
in
dec
mov
inc
add
rcll
mov
ror
pop
popf
adc
xchg
xchg
and
and
mov
mov
sar
xchg
sbb
add
mov
test
or
jg
sbb
fistl
in
jp
stos
push
fxch
xor
mov
fcomps
shrl
cltd
push
cmp
cs
int3
add
add
pop
cmp
adc
mov
cld
loope
mov
jge
lea
and
lret
out
sbb
mov
xchg
mov
aam
inc
daa
fadd
sub
mov
dec
sub
jnp
push
xchg
mov
loope
sbb
shrb
fsubl
call
repnz
decl
pop
cmp
mov
or
clc
push
stos
jnp
or
and
loopnew
push
inc
mov
out
sub
clc
push
jle
jno
incl
fidivs
push
insb
adc
andb
inc
stos
pop
bound
loopew
leave
repnz
hlt
mov
fsubl
push
cs
pop
test
out
mov
add
jle
mov
jns
fmull
sbb
pop
xchg
adc
xchg
xchg
mov
sahf
ljmp
adc
xchg
daa
jge
jnp
xor
adc
or
pop
scas
jnp
sbb
push
repnz
push
jb
pop
inc
and
push
pop
in
jp
and
jb
push
or
in
in
or
xor
pop
scas
lret
movsl
xchg
outsl
andb
mov
frstor
ret
insb
movsb
or
stos
and
bound
dec
out
add
adc
testl
imul
test
sar
scas
adc
pusha
repz
cmpsl
insb
adc
shlb
or
cmpsb
aaa
out
lret
stos
into
aaa
cmp
pop
xchg
push
mov
mov
cmc
jl,pt
pop
and
pop
or
fmuls
stos
mov
pop
xor
rcrl
in
roll
cmp
mov
das
mov
xchg
xchg
insl
or
mov
push
mov
movsb
loope
ret
imul
inc
add
in
fs
mov
xor
mov
cmp
push
jecxz
fldl
add
in
adc
xchg
pop
loope
ret
xchg
mov
dec
dec
pushf
cmp
hlt
test
inc
mov
jg
push
daa
jp
add
inc
jbe
fidivs
sub
shr
dec
nop
shrb
icebp
adc
xor
sar
es
cmp
ljmp
stos
outsb
into
adc
clc
mov
fimull
out
and
iret
add
and
in
scas
popl
ds
loopne
out
popa
mov
dec
ljmp
js
xor
mov
push
das
test
mov
pushw
push
and
jg
lock
inc
hlt
mov
leave
mov
mov
jmp
jl
rcr
bound
fidivl
ss
andl
pop
and
push
push
pop
sbb
pcmpgtd
mov
test
notl
sti
push
dec
mov
enter
dec
enter
adc
inc
stos
pop
jne
test
add
in
movsb
push
repnz
xchg
nop
mov
push
aam
iret
fiadds
ret
xor
jmp
shr
cs
shrl
shl
jbe
mov
daa
leave
push
fbld
test
and
jmp
movsb
aam
xor
push
out
pusha
xchg
cmpb
int3
sbb
loope
jb
mov
pop
push
add
test
cmp
xor
filds
jmp
jns
pop
pop
mov
insl
inc
lods
adc
mov
cmp
out
fcmove
pop
lock
xorb
mov
fimuls
test
aam
dec
or
icebp
pusha
or
ljmp
sbb
cltd
and
pop
sub
cmc
add
xchg
sub
outsb
ficomps
and
arpl
jl
push
je
and
movsb
inc
cld
inc
xchg
dec
inc
sub
mov
jecxz
pop
movsb
loopne
aad
mov
xor
add
push
cmp
jb
xchg
loopne,pt
aam
int
cmc
or
mov
ljmp
shlb
scas
aam
cmpsb
mov
jmp
loop
fmull
aas
sub
adc
mov
int
xchg
dec
push
push
sub
sbb
js
sub
repz
enter
cltd
sti
and
arpl
icebp
pushl
dec
pop
in
inc
int3
or
pop
jecxz
sahf
push
xchg
lret
fcomip
cld
lcall
ret
fisubs
xor
pusha
pop
stos
lahf
fidivl
leave
mov
pop
lcall
adc
xchg
push
paddw
loope
dec
xchg
push
jno
movsl
movsb
rcrl
cld
push
mov
adc
pop
lret
xlat
push
jmp
cmc
mov
into
shll
dec
mov
add
adc
aam
fidivs
arpl
pushl
aam
int3
mov
mov
aam
test
jle
pop
cmp
ja
and
mov
sbb
pop
mov
jb
ja
fwait
js
addr16
dec
pushf
or
lea
iret
lcall
fimull
sub
notl
test
jno
sbb
bound
sub
cmc
outsl
or
adc
mov
jo
jns
mov
test
data16
shl
sbb
leave
in
xor
imul
fstpt
lock
andl
imul
shlb
mov
jae
push
jle
dec
jle
mov
jmp
loopne
adc
sbb
rclb
mov
stc
fdivr
mov
lods
movsb
jnp
adc
imul
cmp
idiv
and
aad
pop
fistpll
lret
clc
out
pop
lods
pushf
out
add
comiss
fs
jmp
into
xchg
pop
sub
scas
adc
xchg
stos
out
pop
inc
nop
cmpsl
and
bound
sbb
jle
inc
subl
jl
add
ljmp
push
fistpll
addr16
ret
scas
fsubl
cld
jg
insb
add
icebp
cltd
lods
add
push
jmp
jae
fincstp
and
cmp
mov
pushf
mov
lahf
movsb
jmp
push
fadds
fisubl
mov
inc
ret
inc
outsb
popf
roll
pop
jns
mov
rorl
add
mov
add
or
and
movsb
xor
lock
push
xchg
adc
or
aaa
ficompl
add
imul
ss
sub
push
lods
cmp
clc
add
stc
fcomip
pop
adc
mov
inc
int3
xchg
xor
iret
roll
popf
movsl
cld
jns
inc
cs
in
mov
sbb
lods
das
xlat
adc
push
push
cs
sbb
jnp
push
divl
aad
or
jg
and
aas
mov
outsb
stos
xor
hlt
das
jl
push
xor
scas
cmp
movsl
ficompl
std
xlat
xchg
cld
adc
adc
cmp
loope
pop
es
ja
add
push
jo
add
arpl
inc
pop
mov
idivl
inc
neg
mov
lea
mov
inc
pop
jge
in
jno
stos
fistl
fcmovb
mov
inc
loope
xor
test
xor
repnz
xlat
test
int3
cmp
out
cltd
cmpb
inc
dec
leave
movsb
push
cmp
dec
adc
add
mov
dec
shll
ss
jns
je
sbb
adc
xchg
std
mov
mov
mov
shlb
sub
test
mov
push
je
sub
int3
pop
xor
xchg
insb
sbb
inc
xor
jge
mov
and
pop
loope
das
shlb
jmp
adc
push
daa
mov
and
stos
fnstcw
sbb
jmp
mov
fiadds
ljmp
stc
jl
mov
sbb
out
push
dec
or
aad
je
aam
inc
inc
jecxz
or
cmc
mov
cld
imul
addl
into
in
dec
mov
jne
movsl
inc
sub
shrb
jmp
cmp
in
lds
mov
mov
and
adc
in
cs
inc
dec
int3
mov
dec
les
rol
inc
push
cli
sbb
outsl
mov
xor
in
jecxz
push
pusha
xchg
imul
sti
xor
sbb
push
cld
cmpsb
js
decb
lea
jne
enter
sarl
ret
in
push
mov
outsb
sub
lods
cmpb
loope
iret
es
mov
out
xchg
out
out
cmp
clc
mov
outsl
xchg
cli
outsb
fabs
jecxz
movsl
rcrb
push
nop
xor
and
mov
sub
adc
mov
inc
and
pop
mov
or
outsb
rol
call
ja
imul
stos
test
stc
imul
add
movsl
mov
lahf
ja
mov
arpl
xchg
push
loope
sub
mov
jle
and
aad
scas
xchg
push
adc
push
jno
rcrb
mov
mov
fcompl
lret
out
mov
and
xchg
and
push
loope
mov
mov
fisttps
js
mov
fwait
pop
mov
jbe
scas
ljmp
scas
push
bound
push
mov
dec
fcomip
movsb
cld
sub
xchg
sub
div
ret
sub
push
xchg
fdivrl
int3
aaa
push
or
rcl
mov
notl
jmp
loopne
mov
or
sbb
and
add
mov
out
das
or
xchg
pushf
pop
das
stos
and
roll
pop
inc
or
sub
push
mov
test
inc
inc
add
fdivrl
into
sbb
jne
push
xchg
add
fbstp
jmp
push
shrl
ret
in
xchg
add
daa
jbe
add
xlat
sub
iret
shlb
decb
movl
idivl
scas
andb
jbe
push
mov
jo
fstpl
mov
sub
xor
das
cs
inc
mov
mov
scas
movsb
mov
cld
dec
dec
or
aam
adc
add
les
xchg
aad
inc
inc
jno
fcoml
fistps
cmp
dec
popf
cld
pop
xchg
cmp
cmpsb
inc
push
pop
out
ds
push
add
add
in
pop
rclb
push
decb
cmp
in
movsb
test
xlat
mov
leave
push
imul
xchg
stc
cmpsl
movsb
sbb
mov
sub
and
ficomps
fs
loope
and
jle
sbb
pop
in
adc
adc
hlt
out
inc
sbb
add
or
jmp
into
add
push
sub
icebp
arpl
dec
dec
rorb
out
xchg
pop
ffree
xchg
mov
mov
loop
fsubr
adc
cld
add
mov
aad
sbb
cmp
cs
lret
pop
sub
movsb
stc
in
aam
aad
cli
stos
mov
loop,pn
or
out
mov
test
hlt
pop
adc
and
cld
sbb
jp
fdivrs
leave
pop
mov
pop
mov
addr16
push
or
xchg
cmp
cmc
stc
xchg
mov
inc
mov
jg
or
popa
xchg
into
aam
mov
lret
mov
jmp
bnd
inc
cmp
stos
hlt
mov
negl
sbb
add
mov
lcall
daa
ret
xor
push
imul
lea
pop
es
leave
adc
shl
mov
aad
test
bnd
xchg
bswap
sti
int
pushf
out
fnstsw
lret
xorl
sbb
mov
leave
pop
cld
insb
jns
cmc
fnstcw
outsb
xchg
add
xchg
fisubrs
loopne
jno
mov
incb
pause
mov
xlat
iret
pop
mov
loopne
sbb
sub
test
and
in
and
lret
mov
xchg
jecxz
fucom
andl
data16
jl
das
mov
and
je
cmpsl
and
ss
add
fs
repnz
mov
cli
test
out
js
movsb
lds
cmp
jbe
push
int
jbe
aas
jbe
test
or
pop
cmp
sub
xchg
outsb
push
push
das
call
jbe
ret
cmp
mov
push
mov
cld
and
ss
cld
rcrb
icebp
and
ficoms
dec
fs
aaa
outsl
mov
das
dec
cmc
aas
push
dec
or
shlb
mov
pop
pop
jae
imul
sub
cmp
js
jnp
cmp
push
xor
aaa
xor
mov
int
out
stos
add
fs
pop
push
xorb
pop
shrb
ja
push
inc
lcall
bound
enter
inc
cld
repnz
mov
in
or
mov
sbb
xor
div
clc
or
jbe
fidivrl
mov
lret
fs
pusha
pop
fbstp
andb
add
mov
vmwrite
jns
cmp
movsb
inc
cmp
xor
xchg
or
inc
paddb
adc
pop
mov
sbb
scas
addl
xor
lret
aas
mov
push
xor
pop
test
cli
xchg
push
push
addr16
fmull
xchg
inc
stc
pop
jb
jo
sbb
out
in
jp
icebp
push
xor
hlt
gs
cld
push
imul
dec
cmpsb
aam
jae
cmp
sub
roll
mov
insl
into
test
into
mov
cmp
mov
fidivrl
push
sub
jae
mov
dec
stos
out
cmpsl
repz
fsubrl
jno
femms
mov
inc
test
stc
jp
shl
cld
sub
fsubl
fstpl
jno
fistps
or
lods
push
rorb
pop
movsb
ror
test
mov
inc
dec
jmp
hlt
xor
popa
pop
lds
pop
pop
sarl
loop
into
incb
out
add
cld
cli
mov
mov
and
loope
rorl
cld
and
sub
push
pop
and
inc
sub
push
push
arpl
inc
mov
xchg
pop
cli
xchg
mov
mov
sub
sbb
cwtl
sub
jecxz
loope
inc
test
int3
idiv
fisubs
stos
outsl
mov
insl
leave
adc
aas
stos
or
pop
jae
cld
push
jle
mov
aad
shlb
sbb
add
mov
jmp
lahf
loop
fsubl
jb
pop
xchg
loope
es
and
and
cmp
mov
insb
loope
stc
xchg
and
arpl
pop
and
or
nop
ret
mov
out
setbe
xor
pop
adc
add
push
idiv
pop
ret
lret
push
test
mov
or
inc
sub
push
scas
rol
add
in
out
test
addr16
xor
and
outsb
push
dec
push
add
rolb
in
pop
jecxz
jne
mov
dec
adc
inc
jo
push
mov
fldl2t
push
sti
les
out
ds
incb
scas
mov
adcb
pop
loop
sbb
aam
ret
push
into
xchg
xchg
push
enter
xlat
jmp
dec
pop
jp
das
push
bound
xchg
aad
mov
sub
pop
pop
jg
cmc
clc
dec
or
push
push
or
les
inc
jle
test
aad
or
outsb
pop
test
pop
rcl
aad
mov
rcrl
ja
ljmp
fisubrl
stc
push
outsl
xchg
lcall
adc
sub
sti
adc
dec
repnz
lods
hlt
ret
push
xchg
sub
int
pop
inc
scas
mov
cmp
cmp
sub
ljmp
loopne
add
subb
mov
mov
pop
in
push
adc
vaddss
ret
mov
cmpsl
cmp
mov
movsb
push
xchg
mov
mov
xchg
aam
or
jg
shll
aaa
mov
jmp
stos
xchg
push
test
lds
cld
sahf
dec
mov
stos
cmp
negl
cmp
pop
adc
jnp
test
and
fmull
mov
aad
das
in
xor
push
push
or
out
lret
xchg
or
scas
clc
leave
jnp
ret
popf
sbb
outsb
mov
and
pop
push
out
push
and
dec
or
sub
xchg
sbb
aam
je
movsb
mov
je
shl
stc
out
aas
inc
popa
ljmp
pop
fiaddl
and
out
jne
ficoms
lret
popf
pop
sub
nop
and
pmulhuw
jae
cld
pop
arpl
lea
or
sbb
dec
daa
pop
scas
and
jmp
xchg
stos
jge
fstps
ret
imul
sbb
mov
mov
popa
mov
lret
mov
scas
cld
dec
int
or
out
mov
into
dec
inc
cmpsl
inc
fs
std
lahf
cmp
sub
or
movsb
into
lods
loop
insl
mov
adc
push
inc
data16
inc
push
adc
mov
popa
leave
fs
outsb
push
nop
aam
outsb
rcrl
pop
jb
gs
les
cmc
xor
xor
loop
es
mov
add
das
ret
in
mov
push
adc
out
jg
xor
out
sbb
repz
add
and
xor
js
xchg
movsb
xor
adc
jp
enter
cli
pop
mov
bound
mov
outsl
bound
and
vpmulhw
jb
mov
pop
inc
sub
in
sub
cli
fs
xor
rorl
movsl
ror
in
push
repnz
in
inc
add
loop
xchg
jo
push
push
jne
mov
pop
sti
stc
adc
push
and
test
xchg
in
inc
fdivr
lret
test
aam
mov
dec
lret
mov
lea
sarb
cmp
dec
pop
stos
push
adc
mov
ljmp
push
dec
gs
mov
inc
lahf
inc
adc
fldcw
mov
lcall
and
mov
pop
addr16
pop
mov
inc
jp
adc
cmp
cmp
enter
mov
fadd
sub
pop
rcll
mov
je
ds
out
jno
mov
in
jb
adc
adc
inc
push
push
aam
nop
cwtl
dec
gs
jmp
xchg
jge
adc
xor
fisubl
mov
rcl
loope
sub
xchg
jge
adc
hlt
out
iret
das
ret
push
cs
lock
pop
std
outsl
sbb
mov
aaa
in
jl
xchg
cmpl
inc
cli
rcll
insb
imull
outsl
jb
mov
pop
xchg
sbb
leave
adc
or
dec
mov
testl
es
fcoml
loope
dec
cli
dec
push
mov
in
adc
std
stc
jecxz
and
mov
dec
test
cmpsb
mov
mov
shlb
ljmp
mov
cmp
cmc
push
and
outsl
imul
cwtl
sub
inc
mov
call
movsb
inc
fcoms
pop
haddps
push
dec
adc
lods
ss
addr16
dec
or
pop
mov
dec
mov
ds
cmp
aam
sub
cwtl
out
mov
scas
push
push
iret
bnd
pushl
shr
in
inc
jmp
aaa
push
gs
xchg
insb
xchg
add
out
ljmp
ffreep
pop
inc
stos
sahf
xchg
loope
js
pusha
ss
xchg
push
arpl
xchg
aam
inc
es
inc
into
pop
cmp
mov
or
xchg
ret
jg
mov
dec
stos
mov
jo
push
rorb
jb
mov
jb
lret
imul
dec
adc
out
adc
insl
lock
adc
mov
sbb
dec
jb
adc
aam
pop
in
xchg
dec
inc
mov
cmp
cmp
xchg
jecxz
dec
sti
xchg
repnz
movsl
sub
pop
lods
xchg
ror
lods
push
sub
pop
imul
cld
sbb
loop
add
movsb
in
dec
loop
ss
ljmp
adc
inc
push
xor
mov
sub
inc
jo
cmp
repz
sbb
repnz
add
loop
mov
in
aas
mov
mov
andl
cltd
lods
bound
test
icebp
scas
fwait
addl
popa
mov
ss
xchg
fcoms
xchg
xchg
fildl
test
adc
sahf
rcl
sbb
sbb
jg
negb
lret
stos
out
scas
mov
inc
imul
mov
xor
int3
mov
idiv
mov
movsb
jl
lds
pop
and
inc
test
into
andb
iret
lret
in
popf
sub
loop
adc
loop
outsl
xchg
popa
enter
loop
std
inc
xchg
lods
mov
inc
jne
xchg
inc
into
pop
mov
inc
xchg
aaa
lcall
sub
inc
outsl
inc
xchg
nop
jbe
dec
push
aas
inc
test
inc
jo
cltd
mov
and
cmp
mov
pop
stos
or
cmpsl
int
aas
loopne
cld
mov
dec
mov
mov
and
mov
xchg
sahf
inc
push
push
dec
clc
scas
js
rclb
mov
cmc
testb
fmuls
xchg
and
les
dec
cli
xor
into
sbb
icebp
mov
pop
pop
sbb
les
add
test
xor
inc
fisubl
rorl
insb
out
les
std
xchg
or
iret
fistpll
movsl
stos
inc
rcl
jle
jmp
add
ljmp
mov
repnz
mov
outsl
pop
ljmp
add
lret
xchg
into
mov
and
fs
pop
test
sbb
sbb
mov
add
cld
aad
test
mov
push
push
pop
jns
dec
cltd
sarl
ja
adc
lods
divb
jmp
lods
outsb
pop
ja
and
mov
xchg
cmp
jns
push
aam
test
ljmp
inc
push
mov
mov
sbb
pop
rol
loope
cmp
into
loop
jb
movsb
xchg
sub
pop
add
rcrb
scas
je
jg
ret
loope
cmc
hlt
psubd
push
imul
xchg
mov
mov
imul
dec
stc
mov
fcomps
xor
out
fnstenv
cwtl
cld
mov
ja
hlt
lea
jnp
repz
jns
aam
fnstenv
mov
into
int
mov
enter
imul
adc
inc
aaa
sti
jo
xchg
ja
inc
loope
pusha
mov
cmovbe
fsubl
xchg
pop
pop
adc
push
and
hlt
ret
in
push
cmp
inc
pop
out
adc
pop
in
pop
insl
jnp
jle
mov
mov
loope
data16
xchg
lods
dec
ja
and
jp
sub
mov
clc
sbb
mov
and
stos
enter
inc
stc
dec
out
clc
sub
sarl
push
cld
popa
jbe
or
adc
xor
sub
cmp
adc
movsb
mov
ficoms
sbbl
lcall
or
cmp
lret
cmp
mov
fstpt
loop
adc
dec
xor
xchg
es
fcomip
pop
fs
fld
fxam
dec
imul
cli
fcoml
in
add
fs
inc
and
mov
in
decl
mov
mov
sbb
inc
movaps
sub
sbb
pop
inc
push
pusha
mov
fsubrs
xchg
sub
rcll
jnp
cmp
fsubl
cs
adc
push
test
pusha
add
adc
int
ficomps
shll
dec
jne
inc
insl
fcompl
add
dec
test
imul
add
inc
filds
jecxz
adc
shll
dec
inc
mov
or
cmpsb
lcall
into
xor
mov
push
ss
loopne
push
decl
mov
iret
daa
mov
push
mov
out
dec
push
cmp
adc
stos
cmp
inc
in
mov
aaa
add
pop
inc
push
ret
add
mov
xchg
xchg
pop
mov
repnz
pushf
or
push
repnz
jg
inc
cmp
arpl
pop
mov
dec
out
lahf
sub
mov
cmc
pop
sbb
sbb
shrb
pop
idiv
mov
std
jnp
movsb
jnp
ror
rclb
addr16
pop
orl
cld
sar
mov
adc
faddl
test
movsb
testl
shrb
jnp
mov
cmp
inc
js
fistps
ret
movsb
cld
pop
scas
xchg
rcrl
push
jle
ds
mov
sbb
add
jg
mov
inc
push
out
or
mov
rolb
mov
jb
lods
call
mov
faddl
test
sbb
negb
xchg
jnp
stos
cld
stos
pop
fdivrp
xor
fs
sbb
or
orl
mov
xchg
adc
sub
mov
loop
test
add
bound
xor
adc
in
cld
or
rclb
fsub
cmp
in
int3
jmp
sbb
mov
lret
decb
mov
dec
mov
adc
mov
inc
mov
aas
repnz
xor
mov
nop
pop
movnti
xchg
arpl
adc
dec
into
push
outsb
jne
add
mov
adc
out
lea
xor
jge
clc
adc
jmp
fsub
cmp
xor
cmp
mov
pop
push
mov
mov
mov
scas
mov
pop
mov
jbe
adc
dec
fld
sti
int3
push
call
je
test
mov
pop
ds
popa
jge
insb
sub
mov
cmpsl
add
push
shl
imul
loope
daa
inc
pop
adc
flds
mov
arpl
out
mov
dec
adc
mov
pop
cmc
js
fwait
push
and
jbe
sar
adc
popa
jbe
pushf
sub
jle
xor
inc
xor
add
dec
sbb
dec
stos
add
push
adc
shlb
sbb
mov
push
decl
jne
cmp
push
and
mov
les
xor
pop
cld
mov
test
jecxz
mov
push
frstor
test
scas
sub
xchg
inc
sbb
cmpsl
movsb
inc
out
loopne
push
or
test
and
inc
mov
mov
inc
xchg
fimuls
dec
test
pop
js
popa
mov
xor
lcall
push
mov
pop
pop
mov
and
add
pop
and
and
repnz
push
adc
xchg
sbb
imul
push
nop
xchg
in
xor
insl
idiv
int
fiadds
push
mov
xchg
in
jecxz
aas
rol
fidivs
rcl
mov
stos
inc
mov
pop
inc
stos
cmc
das
push
aam
call
bound
paddb
lea
mov
sub
subl
dec
mov
sub
imul
mov
lock
std
das
imul
test
mov
lea
je
test
xchg
cmp
push
or
inc
loope
lret
jl
cs
mov
popaw
clc
fstps
loopne
test
notl
xor
cmp
push
xchg
dec
fisubs
pusha
ret
cli
xlat
aad
push
int
lock
out
mov
inc
fmul
loope
mov
add
push
je
in
xchg
cld
pop
loop
xchg
fcompl
push
into
stos
and
int
lret
call
and
out
jno
test
mov
xchg
call
pusha
testl
insb
into
sbbb
aas
lret
in
enter
bound
mov
or
repnz
fsubl
cld
dec
jg
stos
out
cli
adc
popl
mov
xchg
xchg
xchg
ss
lock
or
bound
adc
inc
cmp
mov
ficomps
jo
movb
push
mov
repnz
repnz
adc
xchg
add
or
inc
fidivl
jmp
push
pusha
inc
jo
shlb
adc
xor
sti
enter
push
inc
into
out
movsb
sub
jne
or
fmull
xchg
pop
aam
cld
fisttpl
lock
jle
or
int3
roll
stos
pop
mov
dec
jp
dec
test
rcr
pop
ss
ret
fcoml
test
pop
mov
mov
jb
shlb
cld
imul
int3
in
aaa
pop
inc
jge
mov
imul
les
mov
movsb
mov
sub
mov
cld
fdivs
inc
fdivr
mov
xchg
lcall
add
sub
mov
int
pop
add
pop
and
and
mov
in
mov
and
dec
jl
fisubs
cmpsl
fnstsw
icebp
push
or
mov
jle
dec
xchg
lock
jg
hlt
sarl
scas
adc
pop
scas
xchg
push
bound
jmp
mov
lea
lret
jb
dec
inc
arpl
mov
fidivs
fiaddl
push
adc
out
cmp
test
mov
jns
repz
movsb
mov
dec
jle
cmp
push
push
mov
add
jne
mov
rep
in
sbb
imul
addb
int3
js
pop
and
cld
flds
fsubrl
mov
dec
mov
pushf
push
das
dec
lds
mov
imul
pop
movsb
imul
loop
mov
and
xchg
jp
leave
es
pop
or
js
dec
rclb
subb
cmp
xchg
adc
mov
pop
add
push
ja
pop
dec
les
mov
loopne
add
push
incb
cld
gs
mov
xor
movsl
bound
cld
dec
mov
mov
ret
fsubrs
mov
lret
je
add
icebp
and
mov
adc
aaa
sbb
or
add
aas
inc
test
jmp
sub
pop
out
leave
and
cmp
mov
sub
pop
std
mov
push
inc
xchg
inc
in
imul
or
out
cmc
push
inc
psadbw
cmp
push
push
add
ror
andb
sbb
test
push
les
repz
pushf
mov
xchg
jmp
ds
pusha
mov
stos
mov
js
adc
push
into
icebp
push
movsb
adc
pop
mov
in
xchg
sub
push
sub
fimuls
jp
push
dec
and
jne
scas
andl
xchg
sub
hlt
lods
mov
sub
sub
adc
jecxz
jmp
dec
cld
jno
int3
into
in
loope
push
pop
lea
fidivl
inc
hlt
seta
sub
test
jl
scas
sub
enter
bound
cmp
xlat
pop
decl
mov
sbb
jno
adc
js
pop
inc
or
mov
mov
push
std
test
ror
fsubr
mov
or
or
cld
mov
shll
addb
xchg
add
lods
popf
xchg
and
cmc
mov
incb
outsl
clc
sbb
cld
cmpsl
test
jb
adc
jb
jg
mov
repz
sbb
adc
mov
mov
sub
popa
jg
pop
inc
pop
cld
adc
pop
sub
cmp
dec
mov
rorb
clc
mov
pop
cmp
shrb
inc
sahf
sbb
and
cs
scas
outsl
int
adc
and
add
and
mov
mov
add
test
aas
test
jl
or
jo
mov
dec
dec
loop
shlb
and
xchg
or
fsubl
pop
data16
xchg
dec
push
stos
shl
nop
movl
cmp
push
loope
lods
mov
add
ljmp
adc
pushf
bound
ja
and
or
mov
aas
je
dec
sbb
add
ret
mov
pop
stc
out
mov
sbbl
pop
scas
test
xor
push
jecxz
or
rorb
lret
pop
push
adc
mov
jmp
aas
inc
test
imul
jmp
adc
icebp
mov
jo
mov
xor
pop
mov
cld
int
or
sub
or
add
jnp
aas
scas
int
ljmp
sar
pop
mov
pushf
mov
out
negl
push
imul
dec
clc
cli
jnp,pn
adc
decl
sub
mov
sub
lret
int
and
les
mov
sar
stc
xchg
xchg
sub
int
shl
inc
push
fdivrl
sub
sub
or
lcall
shlb
rcl
jns
jl
push
cmp
push
call
js
pop
xchg
mov
mov
and
aam
cmp
outsb
pop
mov
fsub
dec
fsubrl
lea
sub
cmp
sbb
mov
cld
mov
push
pop
or
inc
fistpll
test
lods
dec
les
pop
movsb
loop
ret
or
or
mov
repz
adc
ret
mulb
jmp
add
xchg
fstpl
mov
jnp
push
hlt
mov
popa
loope
cld
jne
stos
roll
into
jb
sbb
mov
pop
ror
cwtl
push
icebp
out
pop
mov
insb
push
cld
xor
xchg
in
jns
loope
cmc
or
push
dec
popa
push
mov
loope
push
dec
negb
roll
or
lock
xlat
mov
mov
xchg
adc
adc
decb
cld
xchg
mov
js
jmp
jmp
jle
pop
int3
push
in
xchg
pop
lods
lcall
push
jmp
mov
fnsave
cmp
push
je
push
or
loope
gs
xchg
inc
add
popa
sub
pop
cld
cmpl
adc
fdiv
insl
sahf
movsb
lea
call
ret
xchg
ds
mov
aam
sub
cmpl
outsb
or
je
adc
test
jp
mov
adc
jns
ds
dec
sbb
push
jae
stos
cld
inc
aad
stos
scas
mov
in
cmpsb
out
pop
pop
inc
push
jb
daa
xchg
push
out
fs
ds
rcrl
test
xorb
xchg
sub
ja
rcr
stos
lock
nop
sti
into
rcll
pop
andb
push
movsl
xor
inc
sti
xor
push
ljmp
stos
test
mov
ljmp
movsl
jg
pop
jle
out
div
fdivr
icebp
mov
test
adc
stos
int3
lock
and
dec
enter
mov
or
cltd
fidivl
and
cld
push
das
mov
pusha
loopne
lods
mov
sbb
out
leave
xchg
add
lock
jbe
arpl
sti
repz
je
insb
lcall
inc
xchg
mov
testl
mov
pop
mov
in
in
mov
dec
mov
cld
push
dec
les
inc
and
push
fisttpll
mov
mov
mov
sbb
sbb
faddl
mov
test
mov
mov
insl
pushf
pusha
scas
stc
mov
sarl
popa
ret
andl
insb
imul
inc
dec
pop
orl
xor
roll
or
fsubl
dec
cs
mov
push
bound
fcompl
xchg
push
lds
jg
dec
xchg
mov
pop
mov
or
sbb
sub
and
out
ljmp
pop
jmp
stc
imul
sbb
into
adc
les
aas
jl
cmp
in
fdivrs
out
mov
iret
insl
pushf
xchg
sub
test
das
mov
bound
mov
cld
jns
add
out
mov
mov
jecxz
imul
pop
cmp
jnp
or
fists
popa
sbb
cld
mov
fdivrl
pop
int
icebp
ret
popf
jmp
xchg
push
pusha
fcompl
xchg
mov
filds
dec
dec
dec
clc
sub
enter
loop
push
shll
incl
rcl
or
in
fildll
xor
lds
xchg
pop
leave
mov
lods
out
hlt
pop
pop
push
adc
xchg
shrb
in
dec
push
shll
mov
fildll
std
pushf
loope
and
es
add
fidivl
pop
mov
sub
pushf
bound
inc
pop
inc
int3
mov
adcl
ret
mov
pop
insl
ficomps
int3
scas
roll
sti
lret
dec
xchg
cmpsl
sub
call
popa
mov
jl
dec
test
scas
out
hlt
lret
sub
cmp
xchg
dec
addr16
dec
add
cvtdq2ps
scas
nop
fwait
push
aam
push
dec
adc
fildl
sub
inc
cmp
int
in
call
sbbb
ljmp
mov
rol
icebp
jp
in
hlt
shll
inc
ja
dec
cmp
adc
movl
mov
jb
filds
bound
mov
test
leave
adc
xchg
inc
shl
xchg
mov
xor
cmpsb
mov
sar
inc
mov
fsubrl
dec
jae
push
es
daa
stc
mov
xchg
add
lret
test
or
bound
cmp
fwait
xchg
pop
sbb
jge
pop
fsts
adc
push
mov
mov
lcall
mov
hlt
test
outsl
aas
jp
dec
ja
stc
ret
jo
mov
sbb
and
mov
scas
xor
ret
jbe
pop
adc
pop
movsb
inc
sbb
dec
rorb
cld
divl
dec
in
or
xor
sbb
int3
lret
mov
mov
push
enter
jp
into
mov
mov
or
jge
mov
push
cs
cmpsb
adc
or
popa
jns
test
pop
mov
jle
shlb
fmull
jnp
out
jge
aam
cmp
mov
mov
jbe
mov
jle
mov
xchg
jne
jge
orl
lcall
dec
xchg
icebp
enter
xchg
rcrl
pushf
stos
sub
mov
int3
xchg
jecxz
push
jmp
ljmp
jo
or
inc
pop
inc
insb
xchg
enter
adc
push
popa
int3
jp
jl
clc
mov
cld
jnp
mov
xchg
fwait
bound
test
js
mov
dec
mov
push
dec
das
sub
xchg
or
sub
jns
sbb
push
fcoml
cmc
jns
xchg
je
cld
data16
push
sub
or
into
xchg
ss
cltd
aam
push
xor
add
jae
ret
jne
jecxz
and
out
or
movsb
test
jae
in
ret
ds
inc
dec
cld
or
xchg
sub
push
dec
and
jmp
test
pop
ljmp
mov
add
fdivrl
xor
outsl
cmp
push
lret
aaa
sub
loope
mov
mov
lods
inc
jl
leave
xlat
stos
mov
pop
loope
dec
inc
stos
mov
mov
rcll
inc
cld
bswap
rcrl
cli
ret
jp
mov
loopne
or
mov
cld
push
imul
dec
xchg
iret
js
sti
mov
in
addl
cmc
and
test
mov
mov
and
dec
je
gs
cmc
in
rcll
jle
cli
jg
jmp
pusha
dec
push
mov
jecxz
in
mov
popa
dec
pop
sub
nop
fisubl
sbb
sbb
enter
hlt
add
pop
pushf
and
jnp
pop
inc
cld
xchg
rcrl
push
mulb
dec
cmp
and
cld
ss
or
adc
add
sti
inc
inc
das
jo
jns
mov
mov
mov
mov
dec
add
sbb
ret
xchg
cld
push
outsb
into
ja
mov
xchg
nop
stos
jmp
shl
ret
inc
stc
outsl
stos
ret
mov
mov
dec
jle
sti
adc
cli
xlat
hlt
lahf
in
pop
cmp
xchg
mov
outsl
mov
pusha
ds
lret
xchg
in
out
mov
lahf
jb
or
fwait
adc
push
and
mov
jns
push
mov
fstps
movsb
mov
push
jbe
insb
mov
test
push
xchg
imul
sbb
adc
sarl
loope
cwtl
ja
push
xor
out
or
xchg
pop
push
repz
pushf
fdivl
insl
sub
and
icebp
gs
fimull
pop
cmp
cmp
or
popa
repnz
inc
fisubl
pop
mov
mov
test
xchg
out
jmp
loopne
cmpsl
pop
jo
mov
mov
xchg
dec
shr
xchg
add
xchg
fiaddl
mov
rcll
xchg
jle
add
jbe
pop
aaa
sub
cmpsb
sbb
inc
pop
jne
push
cmp
jmp
pop
add
inc
pop
jne
test
ljmp
xchg
mov
int
aad
adc
ja
ret
fcoml
pop
faddp
lods
ljmp
sti
push
ss
cmp
pushf
mov
into
jmp
out
mov
std
outsb
pop
nop
stos
sub
iret
cmp
xchg
sbb
dec
outsl
cmp
cmp
test
adc
arpl
add
lret
fistl
pop
mov
loope
jecxz
pop
mov
enter
pop
jecxz
cwtl
aas
jg
test
movsb
ficoms
sub
mov
pop
or
icebp
lcall
imul
mov
lods
pop
mov
push
sti
js
rcrl
cld
jns
out
insb
into
dec
icebp
and
cmp
test
adc
std
jbe
fildl
mov
lds
test
into
incl
pop
cld
jne
scas
xchg
add
pop
push
lock
inc
adc
imul
add
rorl
push
std
popf
ja
mov
xchg
int3
loopne
pop
xchg
aas
dec
mov
jne
xchg
mov
in
mov
clc
adc
jnp
dec
cli
adcb
inc
loope
mov
dec
sbb
lcall
jbe
outsb
or
add
dec
popf
dec
stos
into
data16
js
adc
mov
movsb
mov
sbb
adc
idivb
repnz
mov
pop
int3
bound
sti
bound
faddl
mov
jg
pushf
shr
mov
repnz
fld
push
aam
mov
xchg
cld
mov
mov
adc
sub
fcomps
or
mov
dec
push
jp
icebp
mov
mov
out
jge
jg
or
pop
or
sti
push
lock
test
aam
push
in
mov
sub
xlat
aam
jae
and
aaa
xorl
sarl
jl
cltd
mov
imul
jb
lret
lods
xor
and
pop
test
fidivrs
call
lret
push
lfs
rcll
shl
jnp
xchg
aam
or
sub
aaa
in
xlat
push
dec
dec
lods
je
or
pusha
insb
sub
sub
imul
push
fsubl
xlat
lahf
sahf
push
iret
pop
mov
sub
sub
lret
jp
fwait
aad
mov
dec
adc
int3
int3
sub
pop
stos
ljmp
xchg
mov
ja
leave
mov
daa
pand
push
fdivrp
mov
inc
or
testl
push
mov
xchg
js
adc
lahf
jmp
fiadds
cvtpi2ps
or
loope
jne
mov
sub
jbe
jo
adc
xchg
add
leave
addr16
testb
mov
fs
sbbb
jl
arpl
mov
inc
orb
mov
jo
sbb
jnp
mov
popa
inc
lock
cmp
or
loop
stos
js
inc
sub
arpl
bound
sbb
icebp
and
mov
movsb
xchg
add
rolb
xor
jmp
nop
xchg
mov
test
push
and
rorl
dec
xchg
pop
adc
dec
mov
clc
std
xchg
inc
je
fidivl
cli
fisubrs
test
sub
fidivrl
sbb
ds
add
xchg
ret
cmp
add
out
inc
fs
aas
mov
negb
sarl
inc
push
aas
xor
inc
add
int3
inc
xchg
mov
sar
lods
and
lret
pop
push
add
stc
pop
sub
rclb
jmp
or
iret
mov
cmp
sahf
add
add
test
sti
in
xor
lds
inc
mov
mov
inc
leave
mov
inc
fcoml
cmp
cmp
lock
insl
idivl
repz
cld
insb
std
outsl
mov
sub
mov
decl
xor
jmp
and
pop
jbe
and
xchg
in
mov
and
outsl
out
cmpl
mov
cmpsl
out
test
lods
mov
mov
xor
adc
jno
call
test
ret
pop
fwait
jne
dec
and
enter
inc
fmull
push
repz
sbb
shll
mov
dec
or
xchg
xchg
pop
mov
out
or
cwtl
fs
dec
push
mov
pop
mov
ds
ffree
dec
add
pop
adc
inc
iret
pop
out
mov
test
pop
jg
fisubrl
inc
add
jle
sar
les
inc
lahf
dec
in
mov
stos
repz
imul
fs
or
push
xor
mov
inc
lods
stc
loope
mov
test
das
push
push
pop
outsl
mov
cmpl
pop
mov
inc
iret
call
es
xor
mov
push
sub
in
out
sbb
mov
and
lea
mov
fidivl
and
hlt
iret
test
test
pushf
jl
stos
fsts
or
rcrb
scas
adc
mov
xor
or
popf
adc
outsl
in
faddl
loopne
inc
lea
cmpsl
inc
and
sbb
dec
mov
dec
and
dec
cmp
insb
pop
adc
out
icebp
dec
mov
or
pop
mov
hlt
dec
fimull
mov
orb
pop
push
and
outsb
and
out
and
dec
and
xor
mov
call
in
pop
int3
mov
mov
sbb
pop
jl
pop
cwtl
test
sarl
lcall
pop
js
push
ja
ret
negb
shrl
cmpsb
jne
push
add
addr16
push
outsb
pop
and
movsb
aam
pop
mov
aaa
mov
addr16
and
out
push
pop
fdivrp
add
pop
rorb
call
ret
lret
inc
and
mov
jecxz
inc
int
outsl
rclb
lods
and
mov
adc
ficomps
out
inc
lock
scas
push
test
jb
cmp
neg
mov
bound
shr
mov
call
mov
loopne
sbb
push
jl
in
rcr
ret
in
mov
push
shl
mov
pop
test
push
inc
outsl
decb
mov
mov
fisubrl
add
notb
xchg
ficoms
jmp
lret
movsb
inc
push
pop
xchg
xlat
ret
jae
push
add
add
jle
ret
je
dec
test
pop
sbbb
pop
jnp
push
gs
lea
hlt
sub
ficompl
adc
std
sub
mov
dec
insb
cmp
sbb
mov
cmc
jbe
ret
dec
mov
aam
xchg
test
loopne
jl
mov
push
ja
mov
fsub
fcompl
xchg
mov
enter
rolb
mov
sub
adc
loope
mov
push
jb
sahf
xchg
mov
pop
cli
fsubl
jbe
xchg
shlb
dec
and
in
shrl
scas
lret
jecxz
test
pop
daa
sub
int
mov
jle
xchg
and
cli
inc
pop
lahf
test
add
jae
xchg
pop
stos
sub
int
cld
nop
cmpsl
adc
addr16
jp
push
data16
notl
mov
loop
rcr
cwtl
push
rol
ret
push
xor
movsb
mov
pop
loopne
mov
mov
push
sahf
lods
std
outsb
mov
inc
mov
sbb
les
mov
daa
jge
mov
adc
es
clc
xchg
dec
mov
sbb
pop
test
inc
cld
fdiv
dec
cld
cmp
pop
mov
loop
sub
fs
int3
aas
cld
mov
mov
int
ret
out
inc
dec
pop
cld
mov
cs
xor
jmp
jne
push
loope
xchg
dec
push
cltd
mov
xchg
mov
loopne
ljmp
push
scas
fildl
push
push
js
jge
mov
out
jb
cltd
in
mov
push
sub
ja
xchg
dec
jbe
movsl
sub
mov
jne
sub
lods
mov
insl
scas
pop
sbb
cmp
loope
jmp
jmp
in
xchg
mull
mov
dec
loopne
sbb
std
sbb
and
rolb
es
pushf
xor
in
mov
jmp
jmp
cld
hlt
loopne
rcll
or
ret
mov
pop
push
repz
hlt
clc
mov
mov
xchg
xor
popa
sub
xchg
pushf
into
adc
xor
popa
push
inc
adc
in
dec
leave
dec
and
das
lret
leave
ret
push
cmp
inc
addr16
into
dec
sbb
shlb
ja
iret
insb
xchg
aam
or
les
inc
andb
jl
leave
cmp
lret
xchg
lcall
out
jg
push
mov
adc
jbe
mov
mov
xor
insb
inc
gs
jo
mov
lret
or
lea
fidivl
sbb
adc
dec
cmpsb
or
ret
loopne
jno
mov
push
dec
xlat
pop
pop
shll
sub
lea
push
das
rorl
je
inc
int3
cmp
add
sti
inc
mov
mov
gs
ss
lds
les
lds
stos
sarb
or
cmp
fadds
mov
mov
sub
orb
lcall
mov
xchg
out
dec
jecxz
mov
cmp
mov
jl
push
hlt
lock
test
ss
loopnew
push
bound
and
inc
fidivrs
xchg
or
test
or
or
sub
jbe
repz
adc
mov
in
xor
je
push
sub
fsub
dec
sbb
lods
cld
xor
lds
ljmp
dec
add
xchg
imul
sub
jae
sti
dec
nop
or
jb
xchg
mov
mov
adc
negl
xor
into
test
scas
xchg
mov
outsb
pop
cmc
xchg
mov
mov
jbe
iret
add
push
mov
sbb
fsubrl
stos
pop
test
push
es
les
sub
imul
cmp
mov
pop
into
jnp
inc
push
dec
out
sahf
xchg
test
fdivl
push
inc
rorl
stos
mov
roll
dec
mov
jp
fsubr
or
inc
cld
push
popf
xlat
sbb
loop
popw
push
sub
xlat
orb
lock
xlat
sbb
pop
sti
or
or
outsl
xor
test
mov
cmp
shl
enter
mov
sub
xorb
clc
sub
cmp
mov
idivb
das
scas
adc
inc
leave
cld
out
or
fcmove
mov
nop
adc
mov
dec
and
out
lret
pop
mov
mov
push
rol
fsubl
sub
ljmp
xor
jg
xor
mov
cmp
jnp
xchg
jecxz
adc
aaa
adc
cld
popl
mov
mov
mov
imul
shlb
mov
mov
inc
pop
push
push
iret
adc
cmp
push
dec
rcr
jle
shlb
push
mov
fldcw
mov
leave
add
aas
xchg
jge
mov
and
jge
jo
pop
roll
sub
popa
pop
movsb
inc
daa
sarb
adc
xchg
in
dec
lret
int
xchg
jnp
imul
adc
mov
into
fsubs
aam
mov
loope,pt
pop
pusha
pop
test
scas
jo
sbb
orl
rorl
jle
pop
and
mov
daa
adc
mov
dec
shll
mov
es
dec
xor
mov
inc
or
add
test
xchg
mov
je
fcmovnu
nop
push
jbe
subb
sub
sbb
movsb
ret
stc
jo
nop
mov
lds
sub
enter
dec
mov
pop
repnz
imul
ljmp
cmp
negl
gs
jnp
dec
dec
arpl
mov
filds
xchg
fsub
test
movsb
dec
lcall
nop
mov
fdiv
push
outsb
xchg
pop
xor
or
iret
call
test
or
or
cld
inc
insl
cmp
dec
xorb
jp
ror
test
imul
lahf
dec
mov
icebp
adc
testl
jmp
stos
or
mov
fs
loopne
lock
cmp
test
push
jae
xor
aaa
jno
xchg
js
cmc
xchg
mov
or
fldenv
sbb
or
aam
int3
fsubrp
imul
pusha
int
pop
gs
sbb
call
js
fcoml
in
aad
repnz
stos
sti
cli
pop
ret
fcoml
or
push
xor
and
leave
sti
push
pop
push
loope
inc
mov
loope,pt
je
out
and
lock
in
mov
sbb
dec
icebp
es
shlb
pop
inc
jl
adc
out
xchg
mov
and
jb
and
push
push
mov
jg
mov
jne
xchg
inc
icebp
int
loope
in
jb
int
sbb
inc
sub
fisubrl
scas
mov
lods
inc
or
ja
inc
cld
ret
insb
push
ja
data16
aas
jmp
rclb
and
pop
loope,pn
inc
divl
loope
push
inc
adc
inc
cmpsl
jnp
ja
xlat
inc
inc
mov
mov
and
ja
inc
daa
cltd
push
orb
jle
push
push
dec
mov
xor
in
push
jbe
push
mov
adc
sbb
fidivrl
aam
movsb
enter
fisubs
movsb
xor
rclb
and
or
jns
lds
mov
cli
push
jbe
mov
cli
and
push
jno
mov
inc
scas
cmpsl
fidivrs
stos
jle
mov
cmc
rorl
mov
out
int
fldenv
adc
repz
pop
dec
pop
mov
gs
xchg
push
push
les
mov
inc
pop
ret
dec
pusha
mov
bound
fbld
fimull
dec
dec
sbb
jmp
jle
dec
adc
cmpsb
xchg
push
mov
or
test
xor
sbb
push
ds
ljmp
push
popa
mov
dec
inc
les
adc
les
mov
adc
xchg
stc
mov
rolb
add
push
mov
hlt
cltd
ds
fstpl
aam
mov
inc
cmp
movsb
fcomps
sbb
pop
add
pop
shlb
pushf
es
xchg
mov
loope
and
testl
inc
xchg
lcall
sti
xchg
lds
pop
lea
mov
mov
inc
ret
adc
int
mov
scas
fcom
jb
stos
mov
rcll
xchg
popa
sub
inc
push
dec
rcrb
mov
ret
stos
mov
movsl
imul
out
ret
mov
lods
jne
sub
sub
jg
in
and
or
pop
mov
test
add
sti
movsl
mov
mov
insb
cmp
sub
inc
xchg
push
clc
sbb
jo
dec
pop
rcl
lret
inc
push
fisubs
xchg
mov
sarl
push
jl
pusha
insb
out
ficoms
cmp
mov
add
lods
cmpl
pop
fdivl
mov
adc
pop
int3
cli
mov
sub
mov
pop
or
in
xor
dec
lcall
clc
xchg
ds
leave
mov
negl
sub
dec
mov
dec
pop
push
inc
mov
negl
cld
stos
imulb
push
lahf
pop
aam
lds
shlb
int3
jbe
sub
mov
xchg
dec
bswap
sbbl
pop
pop
lods
mov
mov
sub
orb
xchg
in
aas
mov
mov
insl
xchg
xchg
mov
fldcw
les
out
shll
mov
sbb
or
lods
cld
adc
leave
hlt
imul
push
into
xor
jae
add
ds
lret
cmp
xchg
adc
inc
and
add
add
into
jo
mov
mov
jecxz
cmpsl
and
mov
cmp
daa
fiadds
addl
inc
mov
lret
adc
ret
pop
add
add
or
in
int
pushf
in
mov
lea
nop
lock
aam
cwtl
inc
pop
add
scas
mov
rcr
pusha
cmp
aaa
add
jbe
js
mov
aam
dec
outsb
ret
push
dec
push
sub
and
jb
ja
nop
aam
je
lret
divb
cltd
cmpsb
scas
sbb
pop
mov
dec
roll
xchg
cmp
cld
test
cmp
mov
lea
decb
rcrb
ljmp
dec
ror
xchg
hlt
jp
xchg
mov
rolb
inc
js
xchg
push
cmc
inc
test
mov
mov
out
xor
outsl
jmp
cltd
add
je
inc
pop
pop
aad
or
ret
inc
mov
push
hlt
xor
mov
cmpsb
int3
sbb
jmp
sbbl
push
and
mov
dec
fcompl
cltd
jbe
adc
dec
mov
ds
dec
mov
xchg
cmc
add
rcrb
xchg
xchg
stos
lret
pop
imul
loop
fcompl
mov
adc
pop
add
sbb
jns,pt
loop
add
movsb
mov
and
adc
scas
in
outsb
fnstcw
adc
sub
bswap
mov
pop
iret
xor
and
dec
and
test
sub
cmp
mov
pop
stos
js
inc
leave
rcrb
call
out
and
mov
mov
fimuls
jl
popl
jp
mov
movsb
mov
lcall
xlat
ficompl
fdivrs
fld
jb
xchg
outsl
push
adc
or
and
fmul
xchg
cmc
jno,pt
test
adc
push
mov
stos
outsl
cltd
subl
sub
xor
cs
jp
jmp
cwtl
push
add
mov
stos
scas
xchg
cld
sbb
cld
pop
lret
mov
and
rorl
mov
fidivl
pop
les
jne
add
out
and
dec
mov
sub
cmpsb
imul
add
mov
mov
mov
movsb
pop
jno
sarl
add
jecxz
and
dec
orl
leave
mov
ds
lcall
cli
ret
mov
movsb
bound
rclb
and
pop
mov
lcall
or
aas
pop
push
das
test
out
loopne
mov
dec
inc
mov
xor
fucomp
loope
icebp
jl
shll
rcrb
jbe
xchg
inc
mov
mov
mov
push
xor
in
and
and
dec
push
sub
fldcw
cmp
ljmp
or
sub
inc
dec
add
inc
sbb
push
outsl
adc
mov
jae
mov
aad
cmp
pop
pop
mov
cmp
xchg
dec
movsl
js
fs
in
ror
and
sub
sbb
sbb
pop
dec
xor
dec
jl
stos
loopne
jle
push
aad
inc
or
hlt
gs
xchg
jbe
js
shr
movsl
dec
mov
iret
cmove
xchg
push
andl
xlat
cmc
push
inc
sarb
mov
cmpsb
sahf
dec
inc
fimull
mov
sbb
add
int
es
ss
dec
int3
sub
loop
or
lods
xchg
adc
fistpll
push
dec
outsb
lock
inc
sub
jne
in
ror
or
call
dec
jle
adc
psubw
add
add
or
out
cmc
icebp
dec
mov
ret
decb
pop
xchg
or
cmp
mov
decl
int3
arpl
pop
or
test
lcall
pop
sarb
inc
xchg
mov
sub
xor
in
faddl
jle
fsubrs
outsb
pop
clc
lahf
int3
inc
fyl2x
aas
pop
mov
and
loop
or
inc
addr16
xchg
dec
ja
aaa
lds
in
jo
jl
cmp
mov
out
movsb
rorb
jge
jb
sbb
cld
mov
fstps
gs
cmp
jmp
cltd
in
pop
ja
pop
leave
out
movsb
clc
icebp
jg
cld
jge
push
and
fistpll
add
les
in
dec
andl
lea
mov
in
mov
cld
jg
mov
test
push
cmp
sbb
in
jle
xchg
cwtl
xor
and
rcrb
daa
outsl
mov
filds
iret
lods
test
int
cmp
mov
fstl
mov
or
mov
ficomps
das
mov
add
dec
xorl
xchg
add
ds
dec
mov
mov
push
jle
lahf
sub
es
cwtl
pavgw
jecxz
lret
fcoml
push
sti
xchg
mov
dec
daa
int3
lods
fbstp
mov
icebp
pushf
add
int3
outsb
dec
and
mov
inc
mov
and
add
clc
push
pusha
cmp
out
cwtl
pop
test
pop
add
lods
jno
mov
fs
shlb
lcall
mov
dec
scas
popa
enter
ja
cmp
cltd
roll
aaa
stos
pop
pop
addr16
cmp
pop
in
pop
icebp
jo
jle
push
int
dec
or
test
or
sub
ds
loop
push
les
or
push
mov
cmp
jecxz
push
daa
jno
push
pop
test
xchg
nop
fnsave
mov
divb
cld
jo
mov
dec
cltd
bound
pop
mov
sbb
lret
cmp
xor
add
add
jnp
cwtl
subb
jle
pop
fistps
aas
outsl
add
add
dec
mov
stc
ja
xchg
xchg
lret
inc
fwait
cmc
ljmp
fsubl
rorb
in
loop
in
add
cld
call
pop
push
mov
stos
icebp
js
pop
repz
push
fwait
sar
dec
mov
mov
cmp
dec
push
sar
ret
xor
push
cmc
iret
jge
or
cwtl
push
mov
out
sti
ds
pop
and
adc
push
jp
and
shrb
xchg
and
test
test
lods
pop
arpl
stos
cmp
mov
test
js
popf
imul
testb
test
inc
cmpsb
call
pop
jge
push
mov
cmp
pusha
jmp
cmp
mov
aaa
mov
dec
mov
out
jecxz
jne
and
jmp
xchg
mov
add
dec
xorb
add
loope
add
xor
popa
ret
lret
sarb
fcoml
mov
pop
xlat
stc
mov
pop
dec
pusha
sbb
push
sbb
inc
movsl
cmc
insb
mov
xchg
or
push
mov
lock
movsl
mov
sti
xchg
insl
cmp
jg
mov
sahf
jnp
cmp
clc
pop
pushf
sub
push
and
enter
test
mov
iret
ljmp
xchg
sbb
jb
lret
loopne
xor
dec
cmc
xchg
and
inc
mov
push
idiv
push
inc
cmp
jns
in
mov
popa
sub
cmp
mov
pop
push
push
je
outsb
dec
dec
aad
enter
add
xchg
aad
incb
test
fnsave
cld
pop
std
loop
adc
imul
ficoms
adc
inc
out
jl
or
ds
lods
mov
subl
sub
or
cmpsb
xchg
icebp
mov
decl
lock
add
cmc
jmp
in
sub
mov
pop
pushf
test
adc
xor
pop
fstpt
sub
loope
fmull
mov
popf
decl
inc
sbb
sahf
mov
adc
mov
cmpsl
xchg
fwait
sarb
adc
add
es
ss
xlat
dec
mov
icebp
mov
mov
filds
sub
call
mov
flds
stos
loopne
int
cmp
subl
add
adc
jb
ss
loop
mov
insl
cmp
ret
push
je
movsb
decl
and
cmp
mov
lea
mov
lds
inc
cmpsb
pop
mov
sub
jmp
pop
loop
scas
gs
jnp
dec
outsl
mov
lods
xchg
cld
adcl
negb
inc
pop
lahf
mov
adc
test
lret
mov
gs
dec
rcrb
xchg
or
in
or
inc
mov
and
sub
pop
mov
rorl
or
aas
mov
mov
imul
adc
inc
nop
ror
mov
ss
pop
loope
in
inc
mov
cld
sub
decb
and
int
dec
add
push
jecxz
jo
ja
and
ds
sbb
jle
loope
mov
xchg
dec
and
bound
cmpb
lock
xor
push
pop
aad
push
imul
movsb
push
sbb
in
jo
push
cs
out
data16
xlat
js
mulb
jnp
pop
sbb
pop
sub
loope
fnstenv
enter
out
push
mov
adc
imul
sahf
mov
out
sub
ficompl
pop
mov
cmp
aas
enter
add
cmc
inc
push
mov
jle
jne
jbe
test
stos
ljmp
adc
and
pop
stc
xchg
and
and
fs
and
movsb
fistl
movq
dec
lock
aad
jmp
pop
sbb
das
jne
pop
ror
lret
pop
call
pop
add
mov
xchg
sub
inc
sub
ret
mov
push
and
adc
int3
xor
jae
shlb
int3
pop
add
lea
int
daa
xchg
dec
adc
outsl
js
stc
cmpsb
adc
test
push
into
xor
loop
fmull
mov
pop
repz
aam
loopne
mov
xor
and
lds
cli
sub
push
sub
dec
arpl
mov
imul
lret
loop
pop
mov
jecxz
jecxz
add
stos
int3
and
cmp
shrl
imul
push
add
mov
popf
jmp
xchg
pop
mov
push
sub
int
into
fimuls
test
lea
jae
test
movb
add
adc
shr
hlt
pop
loop
mov
fmull
subl
xchg
fildl
xchg
mov
ret
inc
adc
enter
fucom
push
cmp
xor
mov
pop
movsl
mov
dec
popa
pop
xchg
fiadds
adc
ljmp
stos
mov
dec
cmp
mov
pop
dec
cltd
xchg
inc
mov
pop
scas
es
ret
fidivrs
and
jb
pop
andl
subl
fwait
daa
aam
sbb
xchg
mov
out
and
dec
frstor
pop
mov
pop
cmp
mov
sub
sti
adc
lea
mov
flds
xchg
mov
enter
dec
scas
adc
into
xchg
adc
sbb
mov
mov
and
mov
divl
xor
adc
push
mov
enter
cmp
pushf
movsl
insb
sub
icebp
jne
mov
shll
mov
inc
jnp
or
inc
mov
adc
mov
popl
aaa
loope
lea
inc
jmp
sub
fidivl
push
jp
adc
mov
dec
xor
fldlg2
es
into
fsub
cmc
popf
movsb
lret
rclb
jmp
inc
hlt
push
data16
sub
mov
jbe
into
mov
dec
jb
xor
jecxz
loope
ds
ret
cmp
into
push
cmp
sar
nop
pcmpeqw
adc
push
mov
adc
fstl
sar
xchg
inc
mov
cwtl
fisubl
outsl
ja
aas
ja
adc
sub
in
pop
adc
inc
roll
into
out
mov
xor
pop
loope
testb
into
cmp
add
mov
bound
inc
bound
or
inc
xchg
insl
adc
decb
pushf
aam
ljmp
and
xchg
fistpl
arpl
jae
stos
inc
push
ss
inc
push
xchg
pusha
out
addb
imul
and
test
jbe
pop
inc
mov
cli
and
adc
jnp
arpl
sub
divb
xchg
dec
inc
jge
mov
and
and
icebp
fisttps
sbb
imul
pop
inc
icebp
or
push
jae
enter
sbb
or
mov
clc
push
sub
movsl
cld
sti
sbb
jae
pop
sbb
mov
pop
fisubrl
mov
push
rorl
jg
aam
mov
jb
add
scas
in
and
fimull
cmp
inc
push
int
gs
and
into
sub
in
cmp
and
push
push
add
js
pop
in
inc
and
lods
mov
leave
mov
jl
repz
mov
cmp
pop
cld
ljmp
jns
sti
or
insb
in
aam
mov
adc
js
fsubrl
pop
rclb
pshufw
loope
mov
mov
cld
xor
test
arpl
clc
insl
fimull
nop
mov
jge
addr16
movsl
jno
jecxz
insb
or
ljmp
daa
outsb
out
add
cmp
ficompl
add
add
lahf
popa
push
mov
cmp
dec
sub
lret
xchg
scas
pop
mov
orl
arpl
jae
popa
cld
xchg
pop
mov
pop
push
push
cmp
lea
lods
dec
inc
xor
dec
popf
xchg
enter
vpsadbw
add
jp
pop
mov
push
fwait
lret
jmp
xchg
or
push
rcl
mov
jbe
movsb
ret
dec
mov
and
into
or
or
je
jo
ja
lcall
pop
daa
mov
push
lea
shr
jns
test
xor
scas
popa
sub
sub
cli
push
into
test
fnstcw
jns
mov
std
dec
pop
out
bound
push
push
mov
sub
sti
lds
mov
xchg
dec
les
gs
pusha
and
shl
mov
test
cmp
xchg
pop
addr16
test
lods
mov
jg
shl
fcoml
sbb
lock
pop
inc
dec
xor
outsl
cli
faddl
mov
test
frndint
imul
adc
lea
test
dec
mov
movsb
mov
push
mov
cmpsb
jno
lock
add
popa
jl
shrl
lea
inc
mov
ret
sbb
fbstp
lods
sub
xchg
popf
sbb
data16
jle
fmulp
mov
mov
dec
movsb
ds
inc
movsl
push
xor
sbb
mov
xchg
pop
movsb
enter
or
ret
repz
mov
lods
icebp
ja
push
nop
movsb
fsubrp
aam
sub
mov
cmp
lds
add
sub
jge
cmpsl
ljmp
jecxz
out
add
addr16
jo
imul
enter
push
lret
insb
fidivrs
lods
iret
lret
xchg
daa
mov
cld
and
test
xchg
add
sbb
loopnew
or
jne
mov
mov
inc
mov
into
fsubrs
call
testb
sub
or
adc
jecxz
test
rolb
mov
xchg
xchg
pop
inc
cld
addr16
jbe
and
mov
add
out
jg
pushf
xchg
movsl
mov
nop
push
decl
out
adc
insl
fs
add
dec
enter
and
lcall
int
je
and
pop
cli
cld
cmp
cmp
es
push
jmp
int
adc
cmp
pop
daa
add
and
cld
push
push
push
inc
adc
mov
sbb
or
xor
fdivs
cltd
mov
xchg
pop
mov
lret
sub
outsb
lcall
adc
xor
push
js
ret
scas
nop
aam
movsb
cld
push
into
pop
jl
aas
lock
repz
cld
jns
enter
pop
push
cmp
mov
sub
lods
in
pop
ret
fidivrs
mov
fistpl
test
out
push
adc
enter
in
cmp
inc
jno
push
enter
loope
fwait
nop
push
test
aas
and
movsb
and
mov
test
mov
lcall
imul
xor
cli
dec
mov
notl
and
bound
leave
inc
mov
xor
pusha
test
outsb
test
out
adc
enter
int
ret
or
and
adc
stos
in
lea
int3
pop
jle
es
je
push
xchg
pop
lret
and
pop
sbb
shll
sub
xchg
xchg
cmc
push
mov
mov
pop
out
inc
pusha
jp
sti
mov
cmp
icebp
pop
or
ja
mov
mov
cltd
loope
or
iret
aas
xchg
pusha
ljmp
xchg
mov
or
pop
loopne
xor
pop
ror
testl
xor
dec
sbb
push
ret
in
ficoms
and
dec
iret
sbb
imul
mov
pop
jle
xchg
stc
and
mov
mov
scas
push
arpl
jp
mov
cmpsb
push
inc
out
loope
push
add
in
lods
or
shr
dec
cmp
xchg
xchg
cld
daa
mov
and
mov
dec
push
jo
dec
mov
sub
movsl
mov
ror
mov
push
push
dec
fldl
call
pop
mov
in
outsl
js
pop
nop
and
cmpsl
aam
pop
fidivs
inc
out
cld
loope
out
pop
xchg
jmp
fsts
add
xchg
stos
mov
out
add
mov
add
and
pop
into
pop
pop
mov
pop
add
aas
out
adc
mov
ja
sbb
mov
aam
data16
aaa
mov
mov
dec
dec
clc
iret
cmp
push
dec
push
lea
xor
fisttps
shrl
or
add
and
lods
inc
je
add
test
cmpsb
jnp
push
mov
insl
fists
scas
jecxz
out
je
cwtl
rorb
sub
sub
add
stos
out
cld
scas
mov
push
in
sub
es
mov
icebp
inc
jne
bound
xchg
add
lds
and
sub
ja
dec
dec
int
pop
cmpb
xchg
pop
stos
cmp
xchg
cmp
aas
xor
in
inc
or
aam
arpl
leave
sar
insb
lock
jmp
push
ret
or
cmp
mov
into
add
leave
sbb
test
adc
and
sub
add
jne
jmp
fistpll
or
mov
xchg
or
movsl
lods
sbb
lcall
fmull
stc
cmc
xchg
mov
imul
dec
adc
decl
or
shrb
push
push
add
test
cmp
xchg
imul
mov
mov
test
rorl
adc
adc
sbb
push
xchg
push
xor
jmp
inc
jb
mov
loopne
dec
aam
cmp
in
das
mov
push
push
int3
mov
cwtl
ja
ficompl
popf
xchg
xchg
mov
pop
mov
movsb
les
std
dec
push
mov
scas
dec
xlat
dec
iret
cmp
inc
inc
jb
mov
neg
inc
inc
fsubrp
cltd
mov
or
xchg
in
mov
cmp
pop
int3
cmpsl
movsb
std
aam
mov
insl
data16
mov
push
lret
cld
mov
lea
pusha
dec
imul
adc
dec
mov
sub
je
shrb
xchg
jne
pop
add
cmc
or
lcall
lcall
test
loope
push
hlt
pop
dec
and
cld
push
inc
xchg
xchg
sbb
in
mov
dec
decb
push
xchg
or
aas
jno
dec
xchg
ds
les
repz
fcomps
xchg
sarl
push
dec
leave
cld
bound
sbb
test
inc
out
lock
fildll
sahf
push
js
pop
mov
lcall
dec
cmp
rclb
lcall
sub
mov
and
push
jmp
ss
loope
scas
mov
lret
xchg
push
outsb
push
bound
scas
cmp
xchg
adc
loop
cld
jbe
mov
in
outsb
xchg
jne
mov
xlat
sbb
jge
js
and
decb
in
scas
ljmp
push
push
lea
pop
sub
xlat
sbbl
mov
sub
sar
mov
mov
loope
rcr
mull
shll
ror
cmp
ror
test
and
mov
cmp
in
mov
and
xor
add
mov
pop
cld
shlb
dec
sbb
loope
cld
push
xchg
bound
je
loop
fsubrl
cmp
imul
cmp
pop
testl
aam
add
out
sbb
inc
mov
data16
decl
mul
mov
lods
bound
inc
xchg
into
push
divl
xor
ret
dec
adc
or
lret
cwtl
in
jle
jne
push
cmp
mov
or
mov
stc
xchg
mov
dec
ret
inc
jp
fs
jne
or
sti
and
fs
pop
adc
mov
je
je
loop
cmp
mov
loope
hlt
mov
into
test
dec
xchg
jne
cmp
shrl
movsb
fisttpl
xchg
push
mov
aas
fisubs
fidivl
call
adc
push
inc
push
loop
das
mov
outsb
movsb
enter
cmc
shll
mov
mov
scas
xchg
add
add
jne
jbe
movsb
clc
pop
in
cmp
scas
imul
out
into
or
jmp
test
nop
mov
mov
test
sbb
pop
lea
mov
jo
test
call
xchg
jecxz
lods
cs
dec
loop
and
adc
xor
test
hlt
decl
popa
xlat
mov
outsl
frstor
adc
loope
jne
jnp
pop
ret
arpl
or
fadds
ret
sbb
push
or
imul
sub
pop
cltd
mov
or
jp
mov
or
sbb
pop
rorb
out
int
lret
and
pop
cs
cmc
testb
fcmove
xor
and
sub
inc
stc
pop
and
shr
mov
and
sar
mov
imul
sub
mov
jmp
in
cltd
out
out
gs
and
jb
dec
out
push
enter
mov
repnz
ljmp
cmp
cltd
stos
in
shll
mov
ror
lret
mov
loop
jle
leave
lds
inc
xchg
loop
imul
pop
mov
rcrb
movsb
pop
sub
cmp
out
cmpsl
xchg
pop
xchg
mov
push
aas
jmp
into
mov
fildll
inc
sbb
or
scas
aas
and
ja
and
popf
sbb
std
pop
jno
sub
xchg
pop
call
loopne
push
div
hlt
cmpsl
cmp
pop
scas
push
mov
cmp
adc
jmp
sar
add
dec
mov
into
mov
mov
sbb
lock
or
mov
fiaddl
mov
ret
xlat
stos
push
ficomps
push
xchg
pop
imulb
sbb
iret
sub
xchg
fsubrl
xor
test
inc
sub
pop
cld
fldl
std
loop
std
nop
js
xor
test
xchg
outsl
or
mov
sahf
dec
roll
lock
loop
aam
mov
daa
jecxz
sbb
push
pushl
push
aaa
sub
dec
ljmp
xlat
and
xchg
lret
cli
cs
rorb
outsl
jp
leave
jl
int
sub
jp
into
dec
adc
dec
mov
push
jnp
dec
mov
test
push
movsb
in
aad
add
ss
or
rorl
inc
xchg
mov
jmp
fdivl
leave
push
test
push
push
movsl
mov
mov
leave
repnz
fadd
sahf
xchg
mov
xor
sub
mov
push
stos
jbe
jmp
ret
pop
mov
pop
inc
jno
test
xchg
xchg
or
outsl
sub
adc
jmp
mov
enter
das
movsb
dec
cwtl
or
movsb
in
in
mov
push
les
mov
movsl
into
pop
lock
rcl
test
jmp
test
push
sub
xor
mov
std
and
mov
out
cli
jmp
ffree
mov
sub
or
in
sbbl
inc
xlat
icebp
sbb
aam
pop
mov
mov
jp
jmp
cmp
xchg
jp,pn
xchg
clc
fidivs
jno
leave
pop
lret
in
dec
add
dec
mov
mov
movsb
push
jnp
enter
adc
xor
or
pop
xlat
xchg
mov
adc
push
pop
xchg
adc
sarl
pop
pushf
std
sbb
je
call
xchg
lret
adc
loopne
cld
pushf
mov
xchg
and
call
push
rorb
in
sub
movsb
arpl
jb
push
loop
sbb
xor
pushf
rorl
mov
repnz
ds
jecxz
sbb
ret
sub
cld
jno
fsub
and
mov
lds
jge
push
push
lret
rcrb
fsubl
jae
lods
jno
imul
adc
push
sarl
cmp
lret
mov
cmp
fildl
xchg
and
mov
stos
inc
ljmp
lcall
outsl
pop
or
jecxz
aas
out
sti
xchg
fs
scas
jb
push
enter
push
pop
and
push
data16
into
mov
test
mov
call
jno
lods
pop
rorl
sub
ja
xchg
les
in
mov
inc
cltd
in
or
stc
sub
mov
int
rorl
insl
ljmp
cmp
fs
fsts
inc
into
xchg
push
fstp
and
adc
outsl
lcall
lret
mov
push
test
enter
inc
rol
ficomps
daa
mov
and
les
scas
shl
cmp
dec
xor
jecxz
mov
nop
int3
mov
nop
icebp
orl
or
add
pop
dec
mov
in
out
or
sbbb
test
pop
out
dec
enter
shl
push
or
pop
lods
add
or
ljmp
hlt
sub
insb
jne
out
test
aaa
sbb
test
outsl
jnp
jp
jbe
loopne
push
adc
inc
rorl
daa
cmp
enter
in
les
mov
orl
cmc
inc
shlb
sbb
jmp
js
shl
sbbb
inc
inc
mov
or
and
gs
movsb
jge
imul
lods
fidivrl
cmp
cld
sub
das
pop
notb
xchg
mov
fsubl
sub
decb
shrl
cli
xor
inc
lods
xchg
cmpsl
repz
inc
fisubl
cld
lretw
aas
push
scas
jl
rorb
and
xchg
jno
adc
rolb
pop
jp
and
dec
xchg
movsb
add
enter
jecxz
lods
mov
push
xor
cmp
pusha
lds
scas
or
adc
push
push
and
psubusb
fistl
stc
das
mov
pushf
loope
sub
aam
and
jle
or
fisubl
fs
dec
sub
jmp
lods
jb
leave
xchg
jle
lds
les
aas
xchg
mov
xchg
and
xchg
or
icebp
scas
outsb
dec
loop
and
stc
pushf
lea
fcomps
stos
push
jbe
sbb
jge
mov
pop
or
fimuls
outsl
sarb
jg
pop
sarl
je
in
insl
jae
dec
mov
pop
rcrb
movsb
aad
sarl
jmp
aam
dec
rol
or
bound
sub
negl
aam
add
add
mov
sbb
jge
stos
test
add
cmp
loope
fstps
push
xchg
mov
xchg
adc
cmpsl
imul
pop
addl
je
cmpsl
addr16
insl
rcrl
xchg
sub
pop
lock
dec
pusha
cmpsb
xchg
aad
xchg
mov
pop
inc
bound
jb
pop
cmp
test
in
dec
push
stos
out
and
aad
inc
sub
or
mov
sub
pop
call
mov
cld
push
mov
dec
in
push
pop
mov
lret
and
stos
push
push
sub
and
andb
push
in
lods
sub
dec
mov
leave
sbb
adc
mov
jg
jb
cltd
inc
out
movl
pop
inc
sbbb
mov
xor
filds
call
notl
push
xchg
dec
into
xor
adc
stos
xor
add
xchg
cmp
and
fadds
scas
je
mov
and
std
mov
sub
lds
push
repz
insb
call
mov
js
mov
mov
xorl
rcrb
pop
mov
pop
jns
adc
rorl
mov
divl
xor
inc
jle
jp
arpl
fisubrs
pop
fwait
pop
ret
mov
cmp
fsubrl
stos
inc
popa
or
xchg
mov
rcl
or
cltd
dec
in
addr16
cli
xchg
shll
push
push
xor
js
push
jle
lods
aaa
shl
or
hlt
mov
jmp
jle
dec
into
pop
test
mov
ja
outsl
mov
pop
jnp
shrl
add
add
mov
hlt
push
sbb
push
dec
jbe
repnz
shlb
pop
mov
sub
ret
mov
repnz
fsubr
or
mov
push
push
iret
bound
or
xor
jmp
cs
push
mov
pop
sarl
jnp
jno
xor
dec
cltd
mov
faddl
bswap
mov
xor
adc
xor
add
test
xchg
std
push
loope
push
inc
mov
dec
stos
out
jb
push
pop
inc
or
decl
iret
push
jno
jmp
lret
push
xchg
mov
cmp
fisubrl
xor
fs
jno
mov
cmpsl
mov
fcomps
add
adc
lahf
sub
mov
lcall
jno
cld
push
sub
cmp
lret
mov
xchg
repz
xchg
jg
fstpt
pop
sbb
or
mov
movsb
xlat
adc
aas
pop
aas
cmpsl
add
mov
or
lea
lods
pop
fdivrl
call
fbld
xchg
or
paddusw
mov
movsb
outsl
adc
lahf
push
arpl
xlat
sarl
icebp
adc
test
mov
imulb
bound
mov
pop
cmp
mov
add
cmp
mov
outsb
xchg
pop
bound
inc
aaa
outsb
xchg
lret
jge
and
mov
dec
pop
addr16
adc
xchg
mov
aam
cli
push
dec
dec
aad
mov
out
add
sbb
cs
je
or
mov
inc
push
call
hlt
xor
mov
xchg
xor
test
jbe
fs
xor
xor
rorb
popa
pop
fadd
inc
jae
mov
lea
fidivrl
push
int
cli
jb
scas
shlb
scas
jmp
mov
jg
jp
add
mov
fbstp
adc
mov
mov
scas
push
sub
pop
mov
sbb
leave
push
xchg
aaa
or
icebp
add
scas
jmp
mov
xchg
fdivr
pop
cmp
mov
cmc
shrl
mov
push
or
cli
ljmp
or
adc
fidivl
test
xchg
cltd
sub
lods
adc
test
inc
jg
adc
dec
xor
ljmp
loopne
fdivl
add
add
hlt
mov
ljmp
and
jg
movsb
mov
stc
ds
mov
xchg
iret
xor
lcall
mull
add
inc
push
inc
and
mov
pop
sbb
rcr
test
outsb
stc
sub
out
pop
sub
push
ror
cld
sub
outsb
ljmp
dec
mov
push
mov
rorl
or
sahf
pop
dec
jg
jae
and
outsb
repz
scas
dec
into
dec
add
ja
aam
xchg
mov
inc
jecxz
movl
jns
loope
cld
test
push
mov
sahf
xor
pop
lcall
clc
sbb
repnz
int
popa
mov
out
inc
rorl
out
xchg
bound
mov
cld
ret
sbbb
adcb
lea
leave
jg
fstps
xor
stc
jns
stos
fmul
loop
pop
xor
fimuls
xor
in
lcall
in
jmp
jle
sub
lcall
pop
mov
addr16
push
jecxz
mov
sbb
pop
into
add
push
jae
in
cmp
aam
fsubrs
sti
neg
popa
lds
rcr
pop
and
test
pop
dec
in
jb
roll
out
jo
pusha
enter
add
or
mov
push
pop
dec
insb
push
in
nop
jp
je
jo
shl
add
push
std
sbb
xchg
jl
inc
xor
data16
pop
outsl
sbb
fmull
or
addl
loope
hlt
cld
and
cltd
sbb
pop
jecxz
or
mov
popf
dec
loopne
out
pop
imul
jle
cli
fsts
mov
and
ljmp
aam
sahf
pop
rcrl
and
clc
inc
std
fistpl
ljmp
jecxz
sahf
repnz
pop
dec
sbb
test
fcoml
sub
push
jmp
cltd
out
pop
outsl
jmp
mov
bound
push
fists
cmpsl
in
loopne
jg
or
jae
in
jnp
out
dec
and
lret
jmp
mov
outsl
xchg
ss
mov
jl
pcmpeqb
std
sub
push
mov
lret
cmovp
inc
addl
arpl
test
push
sbb
fiaddl
jge
imul
add
and
inc
xchg
xchg
pop
cmpsb
ret
scas
mov
lods
jns
xchg
jecxz
test
push
int3
imul
in
shl
ror
int
ret
add
cld
mov
aad
inc
pop
in
push
loope
rorb
xchg
or
loopne
movsb
cli
stos
rcr
ljmp
ret
aam
loopne
jle
stc
mov
jne
lods
loope
dec
gs
and
stc
cmp
add
jno
bnd
in
xchg
mov
xchg
push
test
mov
fs
mov
dec
dec
mov
hlt
sbb
pop
xchg
pop
out
movsb
jae
lods
rorb
popf
pextrw
mov
pop
push
shll
push
ficoms
repz
inc
inc
addr16
int
mov
fsts
call
movb
pop
adc
mov
les
sub
and
cmp
out
and
pop
or
lea
std
dec
and
fdivrl
dec
pop
jb
icebp
andl
lods
mov
jb
push
dec
js
xchg
rcl
mov
push
jmp
shll
test
inc
dec
sub
mov
xchg
daa
idivb
movsb
loope
stos
push
cld
stos
sti
cwtl
pop
mov
jne
in
inc
pop
icebp
lock
enter
sar
mov
xchg
imul
ret
pusha
movsb
movsb
out
imul
sbb
push
inc
xchg
mov
jmp
fmuls
dec
mov
rcrb
cmp
push
loope
gs
leave
repnz
sahf
xor
ljmp
xor
and
cwtl
sub
arpl
lods
iret
jge
fisubl
aad
rcrb
dec
insl
loop
jecxz
mov
pop
test
mov
ror
dec
loop
adc
add
sub
dec
aam
jmp
xchg
loopne
ljmp
adc
xor
mov
orb
jns
div
loop
cmp
lods
in
loop
out
pusha
int
push
psrad
cmp
xchg
leave
jp
aaa
ficoms
xchg
enter
jno
test
test
out
inc
xlat
mov
and
sub
inc
pop
pushf
push
rorl
xchg
in
test
movsb
push
jns
or
mov
pop
in
adcb
push
pop
test
cmp
inc
clc
int3
les
cmpsb
xorl
stos
mov
bound
push
push
push
faddl
in
test
lods
push
ror
mov
addr16
sti
test
loopne
xor
xchg
push
push
rol
fldt
jle
daa
lret
sbb
aad
hlt
test
call
or
push
stc
in
insb
mov
repz
movsl
and
dec
loope
in
scas
aam
xchg
and
cld
scas
in
pop
and
xchg
out
cmpsl
mov
push
jnp
xchg
mov
lahf
arpl
sbb
in
mov
and
ds
xor
adc
ret
push
cli
out
add
xor
bsf
xchg
mov
mov
data16
inc
icebp
pop
inc
fdiv
aad
repnz
cli
push
add
pop
aam
dec
mov
jnp
push
mov
mov
or
sub
adc
push
and
cmpsb
sbb
bswap
sbb
mov
mov
aaa
dec
mov
popa
aaa
stos
outsl
pop
or
loope
jbe
out
xchg
in
imul
loope
ljmp
jge
adc
push
push
xchg
loope
ret
push
add
and
pop
fsubrl
or
repnz
into
lea
jmp
cmp
test
mov
fwait
adc
pop
mov
dec
xorb
mov
pop
jge
jl
inc
mov
pop
sub
stos
xchg
shl
sar
pop
jp
shl
mov
popf
cmp
jae
dec
jae
adc
cmp
or
dec
dec
fsubrl
aad
or
outsb
dec
insb
sbb
popf
decl
push
cmp
sub
pand
jns
mov
imul
out
ss
xchg
clc
movsl
pop
shr
xor
nop
cmp
sbbb
data16
push
js
dec
mov
cmc
mov
orl
andb
aam
pop
mull
iret
fistl
aad
loope
bound
movl
cmc
ljmp
mov
les
jp
xchg
lcallw
mov
pop
stos
dec
pop
shll
in
push
notb
cs
into
mov
int
scas
dec
mov
jb
mov
loope
cld
xchg
mov
sub
sbbb
out
cmpsb
ljmp
packssdw
push
andl
insb
ret
lahf
jecxz
jo
lods
sbb
jb
mov
or
mov
stos
aad
jp
imul
pushf
hlt
cmova
mov
sub
push
sarl
out
aas
mov
ret
inc
ljmp
addr16
int3
and
cld
fcoms
imul
insl
lret
rorb
aas
nop
jge
mov
jnp
fisubs
mov
test
cld
xchg
cmp
and
clc
sti
dec
cmp
leave
loope
outsl
jl
lret
and
dec
cwtl
add
clc
jb
adc
xchg
sar
test
dec
out
aad
and
push
jle
pushf
rorb
add
ss
dec
mov
loop
mov
iret
ja
outsb
pop
sti
je
or
dec
loope
rclb
and
js
pop
ljmp
xchg
in
inc
mov
pop
out
daa
mov
and
daa
add
cmp
sub
sahf
cmp
pop
jmp
mov
cld
fnsave
aas
pop
xchg
cmp
nop
and
xchg
jbe
sub
cltd
aaa
adc
adc
add
outsl
cmp
fld
inc
in
push
xorl
xor
fcmove
push
xchg
shrl
test
dec
cmp
incb
insl
clc
daa
cli
adc
xchg
roll
loope
test
pusha
call
addl
dec
adc
bound
jno
push
lea
dec
mov
dec
shlb
das
xchg
xchg
pop
push
pop
pop
aas
or
or
mov
inc
jg
adc
sub
ret
xchg
rep
jge
jg
mov
loop
arpl
nop
mov
pop
lods
and
cmp
jmp
pop
push
rorl
mov
pop
ljmp
int
add
fsubl
xchg
dec
xor
out
cmpb
mov
mov
mov
jg
or
aam
jle
into
stos
mov
mov
data16
popa
ja
pop
mov
inc
mov
inc
idivl
cmp
fadd
sbb
cli
pop
nop
or
dec
and
fwait
jnp
push
jns
or
cmc
cld
sbb
test
pusha
and
mov
lret
jno
adcb
xor
incb
adc
lcall
dec
pop
cmpsb
pusha
or
xchg
add
scas
jb
cwtl
mov
loopne
push
mov
add
subl
mov
pop
sti
mov
adc
mov
imul
xchg
jmp
jecxz
mov
pop
inc
mov
hlt
cld
insb
mov
mov
and
xchg
test
sub
ja
fmull
shrl
loopne
xchg
outsb
in
add
and
pop
fdivl
les
cmp
loope
or
pop
inc
adc
jo
ss
push
push
push
dec
cmp
mov
js
sbb
gs
mov
fstp
pop
stc
dec
xchg
sub
dec
sub
ljmp
cmp
mov
insl
mov
jl
cwtl
cmp
mov
test
or
mov
nop
frstor
dec
push
cmpsb
flds
das
sub
ljmp
push
push
sahf
daa
mov
subl
icebp
mov
loope
neg
movsl
pop
xor
jecxz
dec
pop
scas
in
or
adc
out
lods
push
push
mov
lret
sbb
test
loope
mov
jg
xchg
cmc
jge
mov
jl
mov
sti
mov
scas
xchg
loop
scas
sbb
dec
add
loope
fcompl
jle
add
xlat
mov
adc
shr
add
add
mov
fs
cmp
sub
inc
rorb
imul
cpuid
cld
shll
sub
mov
dec
jmp
aas
into
adc
xor
ljmp
dec
inc
test
sub
negb
sub
mov
lods
mov
jb
pop
fldcw
or
mov
jne
stos
cs
jb
das
sbb
xlat
or
mov
dec
and
mov
cmpl
cmp
xor
mov
stos
ja
sub
nop
xchg
ret
and
xor
mov
arpl
jae
in
out
test
negl
fcmovnb
and
sti
sbb
inc
hlt
sub
fwait
mov
or
cmpsl
out
push
cld
sti
xlat
mov
mov
mov
xchg
repz
fsubrl
fstpt
ljmp
mov
hlt
out
xor
outsb
loop
fmull
inc
xchg
mov
add
dec
push
xchg
clc
hlt
cmp
ret
jmp
inc
popa
pop
ror
lret
leave
fsubs
scas
int3
xchg
lahf
push
subl
cld
mov
pop
jae
mov
aaa
pop
imul
fstps
mov
sbb
ljmp
mov
pop
pop
aam
popa
jns
aas
jp
push
fstpt
cld
lahf
jns
lock
inc
jmp
ret
add
adc
mov
nop
fiaddl
mov
add
adc
xchg
pop
lret
and
rorl
data16
arpl
mov
inc
out
incb
adc
push
rcrl
xor
mov
scas
ret
daa
movsb
bound
sahf
fs
or
push
je
push
and
out
movl
js
sbb
int
jnp
movsl
ret
inc
mov
cwtl
int
push
add
call
fdivrl
ret
pop
add
xor
or
loope
ret
lds
adc
testl
mov
cmp
jp
fisubl
movsb
ficoms
gs
or
test
sarl
int
mov
shrl
mov
cmp
scas
roll
push
and
int3
mov
mov
dec
sub
adc
mov
mov
outsb
aas
cmpsb
mov
add
cmpsw
ret
mov
mov
ficoms
and
fisttps
adc
aas
loope
test
add
sub
lcall
test
addr16
lret
xchg
xchg
rcrl
dec
pop
loope
jp
inc
push
das
dec
mov
mov
pop
ss
mov
xchg
stos
and
les
cmpsb
add
jb
adc
or
nop
fdivrl
sti
fiadds
jl
mov
push
cmpsl
pop
add
push
loopne
jge
call
stc
lahf
mov
faddl
jnp
daa
inc
fnstsw
cld
xor
xchg
cmp
xor
push
adc
dec
pop
and
movsb
lods
cwtl
fdivrs
dec
lock
outsb
mov
cmp
shl
pop
test
pop
test
scas
cmp
flds
enter
push
jbe
and
add
jp
adc
mov
cmp
or
mov
mov
push
dec
lret
fsubrl
pop
add
in
fninit
dec
cmpsl
sbb
xor
addl
loop
push
xor
fmul
cld
push
ds
scas
fsubr
mov
sbb
sub
dec
inc
pop
jae
test
stos
push
dec
xchg
lret
loope
fcoml
and
xchg
push
adc
notl
js
lret
movsb
add
pop
in
push
jp
jp
out
push
jb
mov
movsb
stc
rol
dec
stc
cmp
jbe
cld
jno
cli
jl
pushf
fisubs
push
sub
jp
inc
movsb
mov
sahf
pop
stos
vunpcklps
push
jne
push
imul
mov
xchg
mov
test
xor
pop
inc
pop
dec
pusha
push
lcall
iret
loopne
add
inc
xor
std
pushf
mov
push
dec
pusha
ret
sarb
in
ror
aas
push
lcall
push
sbb
aam
mov
dec
cltd
stos
insl
leave
iret
and
xor
sbb
out
xchg
scas
pop
bound
push
mov
addl
pusha
outsb
cli
pushf
jbe
xchg
fidivrl
xor
cmp
push
fcompl
lret
aas
ss
rcl
dec
in
pop
lods
sti
push
fcompl
cmp
inc
dec
cli
adc
loopne
pop
xor
sub
aam
pushf
mov
out
push
sub
adc
add
jg
addb
test
cmp
jns
jae
xchg
loopne
or
pop
push
pop
cs
inc
fsubrl
push
cltd
shl
mov
into
mov
mov
cmpsb
lea
in
or
js
sub
pop
xchg
loope
cld
xorb
sarb
in
cmp
pop
das
pushf
push
pop
outsl
xchg
loopne
xchg
jp
jb
sbb
adc
xchg
loope
scas
lock
ds
loopne
and
leave
in
xor
fucomp
scas
push
dec
push
andb
mov
xor
pop
ljmp
mov
add
dec
mov
mov
int
push
sbb
xor
imul
mov
jecxz
call
clc
adc
fsubr
movsl
adc
or
dec
rclb
stc
sbb
rcr
repz
dec
sbb
out
push
jmp
call
in
mov
mov
add
jp
mov
push
pop
mov
and
inc
cmc
adc
dec
movsl
shlb
or
fisubrs
shlb
ja
mov
stc
mov
lods
pop
and
cmpsb
addr16
aam
mov
stos
xor
fdivp
cmp
mov
xchg
leave
fmull
sub
lods
call
dec
imul
jnp
cld
dec
mov
mov
data16
push
ljmp
xchg
adc
mov
jle
xchg
loope
pop
les
mov
in
sarb
sub
pop
sarl
or
and
lcall
inc
inc
lcall
inc
addl
sub
pop
inc
adc
mov
add
lea
push
mov
mov
rclb
dec
sub
lcall
sub
push
sarl
out
lds
icebp
test
lock
dec
adc
mov
test
mov
xchg
pop
test
pop
std
pop
adc
cmp
inc
in
imul
jg
cli
mov
ret
xor
and
push
adc
xor
mov
js
inc
adc
mov
mov
inc
mov
dec
ss
icebp
hlt
or
adc
enter
adc
aas
popa
fcompl
in
mov
addr16
jle
movsl
int3
mov
test
xchg
sbb
test
sub
rorb
cld
jecxz
add
shr
scas
sbb
stos
jle
xor
fcompl
dec
inc
cmp
inc
or
ja
pop
fstl
leave
pop
daa
sbb
push
push
push
mov
cld
adc
test
enter
xor
cmpsl
into
jo
inc
add
ret
jno
das
in
out
cli
aas
or
lods
icebp
and
cmpsb
sbb
pop
add
cmp
mov
sahf
shlb
cmp
int3
pop
sub
or
jmp
rcl
jnp
and
or
mov
cwtl
sbb
test
push
jecxz
mov
movsb
lcall
out
aas
cs
mov
mov
lahf
mov
mov
cmpb
stc
loopne
hlt
bound
add
cld
test
sarb
nop
sub
jl
pop
lds
daa
adc
cmc
cmp
cmp
scas
mov
lock
fcoml
adc
xchg
scas
pop
clc
inc
sub
xchg
jle
ret
or
in
addr16
es
push
or
ret
jnp
filds
mov
dec
mov
hlt
add
pushf
mov
sahf
sbb
pop
inc
popf
jno
fcompl
or
mov
xchg
bound
mov
stos
and
add
mov
add
int
mov
ret
mov
sub
dec
jle
push
push
lods
mov
inc
insl
and
fs
add
add
jle
fdivl
fmull
mov
fidivrl
mov
fsubl
mov
cmpsl
call
or
inc
cmp
inc
ja
adc
mov
xchg
jmp
pop
movsb
inc
and
imul
jnp
and
xor
pop
cmpsb
ds
adc
mov
mov
jb
cwtl
arpl
mov
cmp
xchg
aaa
loope
stos
fs
add
jo
ljmp
inc
inc
in
scas
fmuls
or
xor
lret
pop
mov
insb
iret
mov
mov
imul
fsubl
loope
movsl
or
das
cmp
xchg
xor
fcoms
mov
inc
fmull
call
adc
sub
xchg
insb
outsb
or
clc
arpl
xor
push
outsb
shlb
popa
fiaddl
ds
jnp
decl
outsb
push
xor
fs
sbb
fmuls
faddl
mov
pop
movsb
std
push
cld
push
mov
fdivrl
int
xchg
lds
mov
mov
repnz
add
test
jb
pop
dec
movsb
das
mov
and
enter
mov
mov
fcompl
test
ljmp
enter
mov
or
jl
cld
ret
fdivl
dec
sti
mov
fidivrs
imul
in
sub
sub
inc
cld
scas
push
test
push
movsb
popa
repz
xchg
rorl
sbb
push
inc
dec
lock
imul
pop
sbb
cmp
aas
hlt
sub
test
inc
cmpsl
sub
mov
mov
outsb
shrl
push
xor
dec
xchg
jmp
mov
fdivs
mov
cld
and
pop
inc
rcl
mov
jge
sub
lret
scas
test
pop
imull
xlat
xchg
mov
stos
xchg
daa
scas
test
push
mov
mov
movsb
popf
call
pop
shll
sbb
test
sti
dec
addr16
lods
mov
das
aas
aam
jb
test
mov
push
pop
lret
stos
inc
lock
loope
dec
or
cli
push
das
subl
inc
mov
les
es
scas
nop
add
aad
sub
stos
push
mov
test
pushf
mov
and
or
and
dec
ficoml
decb
push
jle
jnp
push
into
mov
jb
fsubl
add
xor
daa
test
mov
stos
mov
cmp
loope
or
sub
insb
es
ret
cmpsb
push
xchg
xchg
fldt
jp
in
lea
mov
mov
cmp
cmp
push
jnp
inc
bound
lea
fsubrl
ss
jae
add
into
dec
dec
stos
sub
pushf
rolb
aas
jp
stos
lods
in
pop
loop
cltd
in
addb
enter
pop
scas
cld
and
mov
loope
push
das
add
add
in
test
das
mov
movsb
divl
cld
movsl
mov
dec
add
dec
shl
push
lea
leave
sub
rcr
imul
popa
fmull
pushw
dec
sbb
jmp
aad
sahf
stc
popa
add
mov
aaa
daa
push
xor
mov
int
jle
or
nop
iret
cld
push
cltd
imul
and
cmp
test
pop
and
dec
ja
repnz
mov
les
adc
icebp
xchg
dec
into
xlat
jge
mov
fdivp
mov
cld
mov
pop
ret
ds
stos
das
iret
adc
rcrb
fildll
xor
add
aam
cvtdq2ps
lds
jecxz
scas
adc
out
or
xor
and
push
mov
inc
ffree
xchg
stc
clc
ficoms
loope
or
bound
sbb
xchg
push
stc
pop
ret
mov
sub
push
inc
sbb
int
and
pop
pop
fcompl
mov
in
in
aas
mov
loope
pop
bound
fidivs
andb
cmp
or
es
xchg
pop
aad
call
movsl
incb
jbe
push
push
push
or
hlt
xor
test
mov
decb
jmp
and
aaa
xor
mov
jecxz
dec
out
or
out
dec
xchg
mov
gs
test
outsb
inc
adc
cmp
dec
adc
stos
pop
or
hlt
sub
add
add
sbb
cwtl
iret
loope
push
dec
insb
stc
mov
and
out
mov
pop
aaa
aad
sbb
inc
mov
xchg
xchg
sbb
inc
jnp
push
sbb
shlb
lock
cmp
shrl
sub
out
in
xor
jp
cmpsb
fcomp
outsb
pop
fisubs
add
push
pop
das
fisubrl
jp
mov
ret
xor
mov
movsl
fs
es
push
xchg
icebp
and
jno
fs
leave
mov
sahf
cwtl
ds
xor
pop
sub
pop
add
inc
push
int3
push
aad
stos
addl
insl
push
cmovge
and
push
in
iret
aad
iret
push
dec
inc
ljmp
out
fadds
inc
popf
mov
xor
repnz
cmp
cmp
xchg
and
dec
sarl
push
adc
sbb
stos
cmp
imul
lret
sub
mov
pop
xor
xchg
push
push
sbb
mov
das
xchg
imul
dec
lret
ljmp
les
and
aaa
fdivs
insl
insb
rclb
push
mov
mov
aam
aad
cmp
fiaddl
xor
and
cwtl
lcall
int
insl
adc
add
push
jbe
jo
pop
fs
adc
and
pop
add
movsb
ja
and
pop
and
mov
lea
push
int
ror
data16
and
push
mov
fstps
imul
outsb
imul
inc
aam
sarl
cmpsb
movsb
dec
jl
int3
in
cmp
dec
xor
xor
push
fcompl
ret
loope
aas
clc
dec
leave
jnp
push
lret
or
fs
test
fstl
pop
sbb
mov
bound
loope
scas
lret
loope
mov
mov
mov
mov
inc
xchg
shlb
arpl
jo
int3
daa
addb
cmp
push
mov
jmp
sbb
ficompl
mov
mov
dec
dec
aas
mov
inc
jecxz
push
adc
mov
jle
mov
cmp
shlb
stc
fidivrl
arpl
push
add
call
sbb
das
out
les
or
add
cld
int
das
fisubrs
dec
loope
iret
in
lret
xchg
shl
cmp
int
push
or
hlt
out
and
push
in
in
push
xchg
jmp
icebp
pushf
cmp
scas
stos
xchg
rorl
int
pop
jg
add
push
mov
xchg
rol
pop
punpckhdq
jae
push
mov
loop
dec
mov
pop
mov
or
dec
push
xchg
lods
das
pop
insl
push
hlt
cld
pop
mov
out
insl
repnz
push
ret
enter
std
popa
push
mov
xchg
lret
cmp
fdivrs
out
test
sarb
pushf
sub
shll
orb
roll
stos
mov
cmpb
cmp
repnz
pop
movsb
jnp
fisubl
gs
push
andnps
cmpsl
jge
dec
jbe
es
fnstenv
adc
sarl
mov
les
inc
mov
stos
push
dec
sti
mov
mov
pop
es
fidivrs
and
jmp
inc
mov
mov
inc
sbb
in
cltd
jbe
into
mov
adc
cs
mov
mov
les
lret
adc
shl
xchg
add
jmp
and
addr16
in
scas
je
into
clc
mov
repz
dec
add
push
mov
adc
push
dec
mov
dec
cltd
hlt
cli
pusha
out
dec
clc
jae
adc
mov
sahf
xor
sbb
jne
orb
pop
fnstcw
jge
cmp
mov
adc
jne
mov
dec
in
push
fcmovb
pop
fdivrl
out
dec
adc
ficompl
inc
enter
xchg
mov
mov
shrb
test
mov
pop
cld
enter
test
push
or
adc
insl
stc
sar
fimull
xor
adc
push
sbb
mov
shrl
mull
out
xor
jb
adc
mov
into
pop
movl
push
pop
addb
and
cmp
sbb
dec
dec
ja
mov
pop
lods
test
lods
pushf
cld
aas
mov
iret
das
lds
stos
xchg
fldcw
aaa
inc
mov
insl
jg
je
sbb
cmp
ds
loopne
pop
dec
mov
cmp
pop
je
push
movsl
xchg
nop
fcmovnu
xor
xchg
loopne
enter
bound
fst
jne
jg
les
cmp
mov
mov
sti
test
ljmp
loopne
andb
dec
fst
call
mov
pusha
fs
mov
sti
popf
test
lcall
and
inc
mov
push
es
loope
loopne
mov
ret
fxch
add
jge
imul
pop
pop
leave
testb
clc
cltd
test
imul
insl
adc
popf
cmpsb
outsb
and
push
fidivrs
clc
mov
and
mov
ror
test
mov
outsb
ljmp
or
mov
push
in
pop
minps
fiaddl
js
loop
fsub
mov
add
imul
cmp
mov
dec
fsubrs
or
jp
dec
adc
dec
cwtl
fsubl
fsubs
ljmp
adc
fiaddl
and
fimull
jbe
push
or
subl
mov
push
dec
mov
cmpsl
call
lcall
pop
dec
jbe
imull
jne
out
fadds
std
cld
pop
fld
pop
fistpll
lret
shrl
jle
mov
in
out
mov
subl
imul
lahf
stos
in
dec
jae
pop
push
adc
in
stos
push
sbb
push
dec
add
mov
sbb
cmc
fnstcw
adc
add
cmc
test
rcl
jl
repz
push
pop
cld
imul
inc
popa
icebp
pminsw
inc
mov
fnstsw
jbe
pop
xlat
cld
rcl
aas
xlat
and
jle
das
adc
mov
pop
or
ficompl
ficomps
lcall
loopne
fsubl
sbb
call
out
pushf
movsb
js
and
imul
xor
repnz
inc
or
and
xchg
test
clc
adc
jae
and
inc
out
inc
pushf
push
push
ljmp
cld
out
ja
incb
dec
dec
test
and
into
and
rcrl
scas
jo
mov
lea
fimuls
lahf
gs
and
mov
lock
pushl
pop
sbb
les
sahf
pop
sub
dec
add
out
lcall
test
mov
jge
xchg
mov
in
repnz
sub
mov
xor
adc
push
in
int
xor
jbe
dec
or
es
and
jmp
or
sub
std
les
push
rolb
mov
mov
lahf
sbb
sub
shrb
fidivl
popa
sbb
sbb
out
or
sub
mov
bound
dec
add
push
scas
add
enter
ds
addr16
cmp
pop
iret
mov
mov
movsb
and
lods
add
xchg
jno
lds
into
inc
testb
xchg
xchg
or
sub
cltd
fcomi
jge
sarl
into
mov
cld
pop
cltd
aam
sti
pop
sbb
jge
aad
in
jmp
xchg
ja
outsl
pop
imul
sahf
xchg
dec
inc
and
inc
lret
jne
pop
pop
push
xchg
data16
imull
pop
cld
mov
adc
stos
dec
movsb
jne
xchg
shr
mov
sub
mov
scas
xor
xor
in
mov
std
inc
test
movsb
or
sbb
in
js
js
mov
leave
or
xchg
test
jge
lret
loopne
dec
adc
adc
jle
ds
lods
int
dec
aas
scas
sahf
add
stos
inc
lock
push
aaa
addr16
mov
test
inc
scas
sub
sbb
xchg
push
pop
xor
lea
aas
jl
xor
or
lahf
clc
xor
cwtl
ret
orb
fisttps
test
test
hlt
cld
fimull
ror
xchg
shlb
out
lods
pop
mulb
or
orl
cmp
pop
mov
sbb
pop
test
fwait
gs
jg
int
jb
mov
cli
fcoml
addl
or
sub
out
inc
mov
xchg
mov
cmc
push
je
out
dec
pop
pop
repz
cmp
pop
cltd
outsb
test
xchg
and
fisubs
bound
pusha
adc
mov
data16
inc
mov
mov
cmp
jno
cmp
mov
rcl
aas
mov
int
lods
and
icebp
pop
mov
mov
mov
cmp
xchg
lret
inc
lds
mov
ljmp
andb
mov
push
lods
hlt
fnstsw
decb
pop
jne
or
imul
push
shll
les
lcall
test
das
push
adc
sub
loop
fdiv
cmc
test
mov
xor
fs
in
sub
mov
test
pusha
loope
pop
mov
sbb
f2xm1
imul
in
inc
mov
les
jmp
sub
lock
jecxz
cld
das
jae
dec
loopne
and
iret
inc
xor
pop
or
out
clc
dec
jns
dec
jo
mov
rcrl
fwait
sbb
xchg
notb
loop
jno
fimull
mov
jnp
call
mov
sbb
inc
shrb
push
push
push
mov
out
mov
stos
inc
lcall
popf
cld
rcll
jns
mov
pop
xchg
pushf
mov
loope
xor
emms
lcall
push
cld
mov
repnz
dec
xor
lahf
xor
jno
outsb
shll
repz
and
inc
push
ret
ja
xor
dec
imull
lods
cmc
movsl
push
pop
mov
shll
cltd
mov
add
shr
int3
enter
orb
mov
push
dec
repnz
cmp
mov
lret
cmc
or
dec
jmp
fbld
call
cmp
push
mov
pushf
push
lea
sub
xchg
lods
xchg
data16
mov
pop
adc
test
xchg
jecxz
and
inc
stos
xchg
or
mov
in
sbb
dec
cltd
aad
sub
iret
movsb
fsubl
shll
pusha
shll
mov
inc
fidivs
cmc
mov
push
dec
call
xchg
mov
ja
dec
push
inc
cld
jnp
lods
imul
call
jb
jmp
les
jle
inc
pop
jb
cmp
decl
scas
cmc
test
mov
hlt
dec
and
sub
mov
shl
dec
lret
adc
insl
pushf
push
and
iret
adc
into
mov
in
pop
std
scas
push
roll
jo
fimuls
pop
cs
insw
rorb
sub
rcl
addr16
lret
push
imul
pop
jp
mov
enter
pop
addb
and
ret
push
push
rclb
adc
add
jmp
aad
add
mov
test
or
mov
sbb
jge
popf
call
sbb
sub
mov
fidivrl
xchg
pop
lods
mov
push
cmp
je
rolb
cltd
aam
jmp
xchg
cmp
shlb
mov
mov
outsb
out
idiv
iret
dec
adc
or
inc
mov
lret
lea
int
sub
in
stos
and
sub
sbb
movsl
lods
call
xchg
xor
es
hlt
addr16
ret
int
loopne
inc
out
mov
mov
stc
mov
repnz
fs
adc
mulps
mov
loope
sbb
adc
lahf
loope
ret
mov
mov
push
push
fsubrl
cmpb
sub
cld
and
inc
add
cmp
je
lds
push
fnstenv
and
movsb
adc
xchg
roll
outsb
fdivrs
pusha
in
fsubr
lock
ja
or
xorl
std
cmp
sub
sahf
xchg
lea
jmp
add
jl,pt
dec
rcr
rolb
push
jmp
mov
cmp
dec
pop
adc
aaa
xchg
out
in
pop
pop
lret
stc
push
pop
lods
negb
mov
sbb
mov
sbb
test
jmp
shl
inc
testl
aad
cmp
xchg
mov
and
aam
test
sahf
loope
addr16
adc
in
call
adc
jecxz
ficomps
ret
ffreep
xor
testb
push
jno
jno
mov
jne
incb
dec
jb
icebp
inc
dec
lret
sahf
add
and
cmc
jge
jae
xchg
sub
jo
adc
adc
jle
lret
sbb
mov
dec
mov
adc
or
cld
mov
pop
jne
ret
push
push
rcr
jae
jle
xchg
dec
inc
xchg
mov
ret
dec
bound
xchg
in
arpl
mov
and
mov
enter
mov
aas
mov
xchg
mov
outsb
dec
or
test
int
add
xor
xor
or
adc
pop
push
cld
sub
mov
jle
jmp
or
mov
inc
xor
cmp
or
mov
cmpb
rorb
add
push
pushf
lea
insl
test
into
ds
into
cmc
daa
jge
mov
xchg
add
insb
hlt
pushf
cmp
sub
js
mov
ljmp
xchg
ret
push
in
mov
sub
jge
dec
sub
in
mov
push
loop
and
add
and
andb
xor
out
icebp
or
jle
aam
gs
fldl
push
rol
lret
sbb
sbb
orb
mov
mov
aaa
push
pop
pop
jge
clc
repz
lds
imull
fldcw
out
cs
push
ret
mov
fmull
call
dec
leave
or
loop
sbb
arpl
inc
cmp
xor
insb
push
jmp
sub
cmp
push
test
push
shll
shlb
out
dec
dec
xor
ror
xor
lret
or
clc
mov
jne
inc
push
xchg
mov
test
lods
push
pop
add
dec
fstl
test
and
dec
hlt
pop
into
pop
imul
cmpsb
inc
bound
je
test
jb
cmp
mov
dec
scas
cmp
cld
roll
or
or
fwait
adc
fsub
in
nopl
add
js
shll
xchg
inc
adc
mov
or
cmpsl
adc
or
fistps
cmp
out
js
scas
sbb
fsubl
xchg
es
je
in
adc
daa
sbb
xchg
mov
inc
arpl
dec
ss
mov
mov
nop
lock
xchg
out
dec
pop
push
xchg
add
shrb
mov
loop
cwtl
jecxz
into
fadds
in
pusha
test
out
int
in
fisubrs
adc
jnp
decb
dec
push
inc
cmp
xchg
cltd
push
pop
mov
lea
xchg
addl
cwtl
in
sub
push
cmp
cmp
jne
dec
mov
add
pop
sub
sub
and
je
lods
adc
loope
aaa
push
loopne
aam
cld
sbb
int
sti
fldcw
scas
cltd
incl
cli
inc
loopne
sti
push
int3
sub
cmc
cs
popa
mov
test
adc
mov
adc
sub
mov
movsl
sar
or
addr16
push
cld
cmp
test
push
or
fsubrl
sub
decb
cmp
mov
mov
dec
sbb
inc
cmp
cli
ret
adc
pop
xchg
jmp
repnz
xor
test
cmp
sbb
pushf
cld
sbb
psraw
inc
mov
popf
mov
ja
lcall
inc
cld
xchg
xchg
mov
mov
add
xchg
pop
xchg
mov
je
jb
ja
cmc
pusha
cld
xor
mov
pushf
push
int3
stos
in
aaa
and
stc
or
sub
pop
cwtl
orb
bound
push
fsub
cmp
push
in
testl
push
sti
imul
test
js
jns
outsb
pop
pop
fsts
mov
lock
dec
test
xchg
xor
adc
inc
sbb
es
adc
inc
ja
outsb
add
enter
push
in
mov
mov
mov
adc
out
pop
xor
cld
xor
or
push
xchg
cli
adc
lret
incl
add
mov
cld
or
jl
jne
jo
xchg
loop
push
aam
aam
ljmp
push
jno
scas
mov
push
add
jns
loopne
ljmp
test
mov
mov
ret
xor
cmp
push
in
les
dec
cmp
jne
out
loop
in
sar
pop
mov
inc
lahf
adc
and
push
mov
sbb
sarl
incb
daa
xchg
icebp
orl
lea
and
fcmovu
in
ljmp
test
jecxz
jp
jb
and
fisubrs
or
push
rolb
data16
out
bound
mov
mulps
pop
pushf
dec
fdivl
push
push
push
and
jno
xchg
iret
xchg
adc
ljmp
rcrl
cld
sub
in
and
cld
dec
loopne
test
push
shlb
or
dec
add
int
rcr
inc
pop
enter
lock
pop
sub
cwtl
sub
clc
jmp
movsb
pop
dec
cmp
testl
insl
cld
bound
int
mov
pushf
inc
in
cli
add
dec
je
fidivrl
push
xchg
mov
xchg
mov
nop
and
pop
into
xchg
les
mov
sub
js
push
fcompl
cmpsb
popa
dec
cmp
or
ljmp
push
pushf
pop
cli
mov
sbb
lea
dec
push
or
out
and
insb
loope
das
jae
or
jo
repnz
add
test
call
leave
inc
inc
add
xchg
push
sti
sub
into
repz
dec
or
push
pusha
inc
movsl
cmp
cmpb
dec
cmc
lods
pop
addl
stos
cmp
push
iret
sbb
les
cli
dec
shr
lods
sbb
push
aaa
ss
adc
into
jnp
mov
jmp
sbb
adc
lods
xor
jg
cld
push
cmp
push
xchg
dec
inc
jecxz
mov
outsb
shrl
mov
outsl
test
mov
cld
cmpsb
sbb
xchg
inc
das
insl
nop
mov
dec
shl
imul
icebp
dec
mov
sub
and
fiadds
add
push
test
cmp
push
sub
dec
xor
dec
mov
into
sti
dec
cmc
xchg
sbb
push
loop
xor
mov
cltd
imul
cli
popl
ljmp
dec
or
pop
pop
test
sub
test
push
cli
mov
rcr
lock
rcrl
cmp
imul
mov
dec
rclb
sub
pop
sub
test
test
mov
repz
hlt
jae
insb
xor
fildl
and
sbb
cmp
mov
sbb
jecxz
inc
std
pmullw
leave
push
arpl
xchg
movsb
inc
out
cmpsb
push
xor
mov
in
add
ds
hlt
out
in
xchg
mov
xor
push
xor
loopne
test
jl
test
add
push
mov
mov
in
repz
pslld
mov
aam
jne
cmp
enter
mov
xor
or
fdivs
ret
fsub
lcall
mov
xchg
cmpsb
js
pop
and
repnz
fsubl
jmp
out
mov
outsl
ret
pop
ret
lods
xchg
outsl
ror
ja
adc
mov
pop
fcoms
out
mov
push
addr16
jecxz
lea
cmpsb
lcall
insl
cltd
push
inc
and
pop
fidivl
cs
sub
xchg
pop
mov
mov
pusha
push
xchg
aas
add
push
ret
mov
mov
shl
loop
sub
sti
inc
stos
shrb
mov
push
mov
mov
and
xchg
mov
pop
popf
adc
adc
sti
inc
sbb
pusha
fwait
jnp
xchg
and
cld
sub
xchg
rcl
mov
enter
scas
inc
mov
dec
mov
dec
mov
out
jne
mov
push
js
mov
xor
jno
les
add
push
push
mov
sbb
xor
imul
test
mov
loope
test
test
push
pop
cmpsb
push
mov
push
inc
mov
test
pushf
push
lret
mov
pop
loope
les
rcrl
xchg
iret
cmp
incl
outsl
or
mov
fisttps
dec
bound
jns
out
cwtl
add
lods
in
shlb
clc
pop
rol
orl
jge
sbb
pop
push
paddb
fsubl
sub
sar
push
cmp
out
mov
ss
push
repz
push
lock
bound
mov
push
ja
loopne
cmp
inc
add
sbb
add
into
lea
dec
ljmp
hlt
js
jmp
inc
sar
xchg
inc
pop
pop
loopne
lods
inc
loope
out
loope
fnstsw
std
fsubl
fucomp
outsb
loope
cmp
ret
push
stc
cmp
int
push
fwait
inc
cld
flds
int
lods
hlt
sbb
sarl
lods
dec
push
icebp
sbb
pushf
mov
mov
dec
sbb
pushf
pop
mov
cli
xchg
xor
test
rorb
and
cmp
iretw
into
aaa
dec
cmpsb
adc
pop
gs
push
and
jo
sbb
scas
push
shll
mov
rolb
or
jo
xchg
push
lock
idivl
push
inc
xchg
enter
ss
xchg
rcrl
cmp
jl
pushl
inc
sub
adc
push
sub
jbe
dec
jno
jmp
incl
mov
shlb
es
xlat
xchg
sbb
pop
xchg
dec
push
scas
or
adc
adc
hlt
dec
jg
sbb
mov
cltd
stos
nop
aam
rcrb
push
cmc
fcmovu
call
push
jbe
std
mov
sub
imull
push
sarb
stc
rcrb
pop
mov
js
push
test
adc
test
mov
mov
stos
jno
push
pushf
jecxz
repnz
dec
test
dec
mov
sbb
and
leave
xchg
stc
fdivp
mov
adc
cmp
cmpsl
aas
bound
out
mov
jl
adc
cmp
mov
mov
add
ret
push
addl
mov
aad
fists
repz
aaa
cltd
inc
mov
adc
outsl
jp
xor
faddl
mov
mov
sub
cmc
cld
sub
mov
enter
das
adc
xor
in
push
jae
jb
iret
xchg
mov
mov
mov
jl
inc
and
dec
hlt
xchg
les
inc
dec
or
enter
dec
ja
jno
rorl
sub
mov
xchg
or
xchg
push
pop
aam
mov
sbb
xor
cmc
lock
push
cld
dec
sar
in
pop
sar
vmovss
test
xchg
stos
fdivp
lods
xchg
fstpt
out
mov
adc
les
adc
scas
popf
es
scas
jecxz
int
lea
test
xor
and
xchg
jmp
jb
pop
xchg
or
inc
fiadds
mov
out
cld
test
mov
ret
imul
mov
mov
dec
popf
push
sbb
sub
icebp
inc
testl
loope
mov
sub
cmp
xchg
add
iret
icebp
loope
mov
push
enter
push
dec
hlt
rcrb
pop
mov
lcall
add
and
mov
xchg
sub
push
dec
xchg
or
pushf
aam
jne
test
xor
inc
shll
or
inc
sar
cmp
fdivs
addr16
cmpsb
xchg
jle
push
inc
enter
ja
imul
cwtl
out
insl
mov
cld
mov
xchg
test
sub
insb
pushf
pop
hlt
fcmovu
xlat
or
mov
stos
adc
lahf
aaa
test
jp
mov
jle
push
pop
daa
lret
sbb
push
sbb
cmpsb
lret
mov
cmp
push
loopne
mov
enter
mov
sbbb
dec
add
mov
add
pushf
jnp
movsb
mov
mov
cld
rcr
ljmp
mov
mov
fsubl
cmpsl
loope
jnp
dec
inc
mov
aas
aad
inc
or
ficoml
rcl
add
call
cld
pop
ljmp
mov
sbb
dec
add
jns
movsb
jmp
out
push
aaa
push
xor
nop
mov
jmp
shlb
in
sub
out
xchg
imul
and
ljmp
fcomp
dec
xlat
test
cltd
xchg
inc
popf
mov
mov
imul
ret
mov
pusha
outsb
dec
jl
xchg
mov
mov
sbb
ljmp
push
pop
cld
repnz
jne
movsb
in
push
ficomps
ret
fimull
sbb
sub
test
ret
jo
adc
adc
inc
insl
stos
push
jae
ret
push
stc
or
pop
jo
into
jno
hlt
mov
push
sbb
shlb
scas
out
andl
mov
sbb
in
cld
test
sarl
in
pop
fdivrs
xor
mov
inc
adc
ret
push
or
pusha
pushf
push
insb
xchg
cwtl
and
dec
std
out
xchg
cld
sti
jg
push
lods
into
inc
repnz
mov
inc
pop
inc
andb
aas
out
cmp
add
int
sub
sub
jecxz
xchg
mov
xor
popa
xor
inc
xor
rol
or
mov
movsb
mov
dec
fstl
and
fnstenv
aam
loope
jmp
in
jl
inc
jle
test
mov
inc
jbe
sub
nop
xor
bound
imul
fdivrl
cltd
inc
orb
test
das
nop
hlt
add
loop,pn
adc
movsl
les
aas
in
pop
jecxz
out
mov
xchg
mov
sub
subl
mov
xchg
or
xchg
movsb
and
pop
or
mov
int3
dec
sub
test
fcom
pusha
aaa
pop
push
lea
push
std
add
dec
sub
push
cmc
mov
dec
bound
mov
mov
cmp
enter
jns
mov
mov
faddl
mov
stc
outsb
std
test
repz
cmp
rorb
cmp
mov
push
fnstsw
cld
fdivr
pop
lock
adc
movlps
ficoms
fwait
loopne
movsb
cld
and
dec
jp
inc
xchg
cwtl
fs
fsubl
jg
xchg
pop
inc
pusha
xchg
jbe
pop
push
xchg
into
stc
repnz
cmp
mov
and
mov
sbb
sar
inc
cmp
push
inc
orl
mov
dec
lock
sub
fimull
fstpl
notl
mov
jae
cmp
xchg
idivb
dec
dec
pop
pushf
mov
in
mov
ftst
fisttpll
fiaddl
cmp
mov
dec
call
xchg
pop
sarb
inc
pop
jns
xchg
jg,pt
cs
inc
pop
mov
outsb
adc
repnz
mov
jae
aaa
imul
cli
xchg
fs
push
push
iret
decl
jge
pop
dec
aaa
push
dec
dec
jns
test
clc
xchg
test
addb
int3
imul
mov
mov
ljmp
aad
pop
pop
lock
dec
inc
xchg
cld
adc
dec
inc
and
push
mov
lea
inc
aas
and
xor
xchg
mov
scas
pop
je
sub
xor
push
ret
dec
je
cmpb
adcb
in
dec
inc
movsb
call
jg
jge
dec
in
pop
cld
cmc
movsl
mov
jae
or
in
mov
cld
adc
hlt
mov
scas
repz
cmpsb
cld
push
imul
fsub
mov
pop
or
out
cwtl
mov
or
pop
sbb
lock
test
out
push
stos
lret
shrl
fstpl
and
adc
inc
jbe
js
sbb
pop
dec
lahf
popa
hlt
mov
mov
adc
dec
adc
popa
loope
cmp
in
dec
int3
jle
cmp
dec
and
inc
or
cmc
xor
fiadds
and
or
and
enter
pop
das
int
aaa
cld
push
out
mov
mul
jg
push
mov
jecxz
mov
cli
xchg
outsl
loop
inc
popl
xchg
ljmp
out
enter
push
xchg
xchg
adc
ret
outsb
add
popa
dec
dec
lds
scas
mov
movsb
dec
lods
cld
xor
cmc
js
pop
fidivrs
insl
cmp
adc
push
add
jg
fwait
add
stos
and
scas
and
das
test
f2xm1
mov
push
dec
fisubs
andb
shl
xchg
mov
mov
out
je
pop
adc
or
fisubrl
xchg
mov
imul
test
sbb
pop
push
int3
xor
mov
movsb
jl
movsl
js
les
nop
mov
clc
loop
shlb
sub
inc
rcrb
and
ljmp
jl
loopne
push
stos
xchg
push
rorb
mov
mov
orl
push
cld
int3
push
dec
out
or
cmpsl
and
push
shrb
rcr
add
adc
jge
mov
dec
in
pop
inc
and
jmp
fnstsw
ret
or
mov
mov
jp
push
jmp
loope
mov
add
push
add
push
hlt
test
shr
cmp
adc
push
adc
mov
cmpsl
mov
jge
loopne
push
cmp
mov
push
cmp
scas
fsubl
jecxz
xchg
stc
push
ljmp
pop
add
sbb
mov
sarl
and
mov
xor
dec
mov
xlat
or
mov
movsl
aad
adc
in
jge
stos
inc
or
jae
jecxz
mov
pushf
push
scas
push
push
fs
les
mov
pushf
adc
mov
fisubrl
push
or
bound
or
and
out
cld
lcall
sub
stc
adc
mov
dec
dec
push
sti
adc
lods
dec
push
push
ljmp
cmp
scas
test
mov
shrl
add
dec
xchg
je
push
dec
sarb
xchg
cmp
das
in
sbb
xchg
loopne
push
mov
and
es
fcoml
into
orb
fbstp
and
pop
int
test
jb
sarb
xor
fwait
xchg
loope
cld
cmp
lock
stos
inc
popa
mov
jmp
dec
pop
icebp
push
sbb
mov
mov
sbb
aas
dec
xchg
xchg
sbb
push
aaa
les
insb
shll
cmp
jne
rcrl
testl
mov
stos
xor
inc
push
cmp
adc
xor
popa
pop
mov
lea
bswap
mov
inc
mov
inc
outsl
das
mov
mov
inc
push
dec
jmp
push
adc
ficomps
add
shll
inc
shrl
arpl
dec
add
and
xchg
in
add
mov
xchg
out
adc
hlt
outsl
ja
subl
xlat
sbbl
or
test
stos
inc
pop
dec
jo
or
mov
aaa
aad
cmp
jmp
fbld
cmp
inc
push
xor
loopne
add
push
adc
and
adc
push
lahf
js
cmp
jnp
fdiv
xor
jle
mov
popl
mov
lret
aas
lock
fldt
imul
out
pop
sti
subb
inc
ret
loop
mov
inc
pusha
mov
icebp
dec
jle
shrb
in
inc
gs
notb
pop
push
arpl
cwtl
sti
daa
ret
ljmp
test
jno
xchg
fdivr
xchg
decl
sbb
jb
xchg
push
cmp
push
jnp
mov
add
sub
out
pop
xor
adc
negl
fiaddl
mov
and
into
xchg
cmp
clc
dec
dec
lret
jnp
repz
cmp
das
clc
es
mov
in
mov
adc
jno
ds
mov
roll
xor
add
lea
mov
sbb
mov
push
pop
int3
mov
cmp
jmp
les
jbe
xchg
inc
mov
dec
adc
fndisi(8087
out
test
lahf
mov
adc
or
jmp
and
test
in
dec
mov
jns
mov
jp
rcll
out
sbb
sub
pop
js
sub
dec
xlat
nop
adc
ljmp
mov
gs
outsb
xchg
cmpsb
aaa
adc
inc
stos
arpl
out
push
and
or
movsb
ljmp
sahf
je
sbb
adc
lcall
rcr
sub
cltd
jno
xchg
adc
in
lret
xor
xchg
fs
mov
pop
je
mov
mov
std
cmp
pop
adc
sar
xchg
test
xchg
cld
cmp
mov
pop
sbb
xchg
adc
enter
rol
mov
test
dec
mov
fisubl
es
data16
cli
rcl
sub
enter
sub
ficoml
sub
fst
push
push
inc
cmp
fisttps
scas
jmp
cwtl
popa
scas
pop
in
shld
fmull
aad
inc
dec
push
test
dec
push
push
mov
jno
sub
push
inc
sub
mov
fidivl
or
jnp
ret
lahf
fwait
cmove
jne
cltd
push
jns
ljmp
cld
sahf
xorl
jae
aam
pushf
neg
les
int
nop
mov
pop
imul
out
jb
xchg
or
movsl
xchg
aas
lock
mulb
or
ljmp
enter
cwtl
ljmp
jo
add
iret
fcompl
mov
rol
sub
aas
adc
inc
in
shll
add
clc
std
add
aas
enter
imul
sub
shl
shl
and
sti
lahf
icebp
in
cmc
sub
mov
sub
mov
ljmp
inc
mov
test
int
dec
cmp
mov
fdivl
or
inc
ficoms
pop
jbe
enter
loope
jno
jnp
fldt
fmull
pop
loope
fisubs
and
cmp
jae
frstpm(287
dec
push
out
aaa
ljmp
adc
mov
jnp
push
ret
rep
nop
jns
push
sti
fisttpl
lods
fidivrs
notl
test
pop
jb
scas
fisubs
cs
stos
lea
add
daa
repz
sub
sub
push
xchg
inc
cld
mov
aam
scas
dec
les
jbe
ja,pt
and
fildll
leave
mov
lds
in
ds
xchg
adc
int3
add
adc
dec
test
dec
push
test
les
adc
nop
ss
dec
or
insl
jns
out
test
arpl
rcrl
xrelease
and
add
xor
xchg
pop
fiadds
movsb
push
aam
dec
cmpsl
pop
jbe
int3
std
mov
inc
fwait
mov
dec
push
imul
pop
out
fldenv
call
fcompl
aaa
call
mov
into
xchg
imul
sbb
sahf
js
push
cmp
les
inc
xor
adc
mov
in
lret
subb
outsb
jg
mov
sub
popa
call
xchg
jo
inc
int
sbb
or
jnp
filds
fdiv
adc
pop
aad
push
repnz
arpl
sahf
pop
fsubrl
ja
in
push
mov
out
ja
cmpl
enter
jns
incb
jbe
and
repnz
lret
loopne
cmp
push
xchg
and
adc
cmc
push
test
dec
xchg
pop
fcmove
push
mov
cld
push
ret
bound
push
jl
push
out
pop
mov
lret
andl
xchg
psubusb
lret
test
inc
push
sbb
dec
cld
idivb
jns
mov
cmp
cltd
les
inc
push
sbb
xor
mov
ret
mov
repz
outsl
add
lock
imul
cltd
jae
ret
sbb
pop
jg
sahf
rclb
dec
pop
inc
and
mov
and
outsb
loope
sub
inc
enter
mov
movsb
les
or
inc
sub
call
jle
gs
mov
arpl
fmull
js
pop
dec
push
adcl
mov
popf
jl
or
mov
mov
mov
add
fld
adc
imul
and
ljmp
lcall
mull
or
aas
xchg
jno
sti
in
mull
aam
js,pt
scas
and
add
addb
out
aas
cmp
sbb
pop
adc
mov
clc
pop
pusha
jne
push
sub
imul
xchg
in
outsl
and
add
ret
mov
mov
adc
xchg
mov
ss
pop
mov
rclb
mov
inc
adc
std
cs
pop
xor
movsb
push
hlt
inc
dec
push
and
mov
mov
pushf
ret
mov
mov
repnz
into
rcl
mov
fstps
push
fidivrl
xchg
ljmp
stc
loop
in
imul
cld
xor
loopne
lds
div
loop
bound
jg
movsl
dec
sbb
lret
pop
test
stc
xchg
push
mov
andb
dec
pop
rcll
xor
mov
pop
pop
por
out
fdiv
test
push
scas
mov
adc
jg
pop
sbb
addb
sub
sbb
hlt
lock
xor
sub
inc
add
xor
add
in
jb
enter
adc
ds
mull
jecxz
in
rcrl
push
adc
and
jp
dec
sbb
and
mov
repz
mov
inc
les
shl
mov
fwait
data16
shll
mov
or
mov
out
scas
sbb
test
bound
mov
sub
mov
or
fdivrl
fisubrl
inc
pushf
movsb
test
arpl
adc
mov
mov
jnp
fisubrl
dec
dec
stc
push
mov
lock
jmp
add
mov
dec
push
cmc
or
in
push
push
mov
pusha
ljmp
push
jne
push
addl
fcmovb
mov
xchg
add
scas
cmp
mov
add
push
push
and
rcrb
adc
sbbl
out
loopne
mov
rorl
mov
loopne
test
sub
lods
test
and
sub
insl
cli
xor
imulb
add
fs
cmpsl
das
test
pop
iret
mov
clc
movsl
mov
roll
add
pop
ljmp
mov
ret
add
insl
popa
cmp
xchg
inc
orb
or
rorb
mov
adc
leave
ret
fistpll
pop
sub
aad
cwtl
and
mov
xchg
xor
add
inc
loop
sub
mov
xor
mov
mov
loopne
jo
mov
xchg
iret
js
cmp
sbb
inc
mov
mov
push
dec
mov
mov
cld
mov
cwtl
dec
pusha
sbb
test
test
xchg
out
imul
sub
mov
xchg
add
into
or
push
js
jns
outsb
push
or
mov
les
loope
insl
pop
cld
test
jmp
jle
jp
mov
jb
xchg
add
jmp
mov
add
cmp
jecxz
fwait
scas
out
sub
insl
jg
out
cmpsl
mov
mov
mov
repz
inc
mov
orb
aaa
cmp
movsl
pushf
inc
lcall
pop
out
mov
ficoml
pop
es
xchg
pop
pop
push
incl
push
pop
jmp
imul
jne
ds
sbb
adc
mov
pop
decl
mov
ljmp
loope
ror
mov
xlat
dec
inc
jg
rcll
cltd
sub
movsb
sahf
stos
enter
test
push
add
mov
push
cltd
push
imull
fldenv
in
cmpsb
mov
xor
loope
adc
pcmpgtb
addl
inc
jae
sbb
or
push
or
int
push
wrmsr
popa
cmpl
pushf
testl
lret
xor
ficompl
mov
pop
jbe
repnz
and
or
int
pop
decb
pusha
fisubrs
mov
mov
imul
jle
mov
loope
sti
cmpb
or
add
xor
dec
xor
fisubs
push
sbb
or
icebp
popa
dec
push
imul
dec
test
pop
mov
test
cmp
push
cmp
add
jb
lea
sahf
xchg
inc
out
jmp
mov
jno
mov
jl
cld
push
pop
dec
mov
nop
fsubrl
cmp
hlt
popa
mov
jmp
and
roll
push
gs
dec
sub
sub
xor
push
mov
or
jo
pusha
test
jmp
out
fwait
xchg
frndint
and
mov
xchg
int
pop
mov
shr
inc
push
push
xor
or
sub
and
dec
paddusb
lds
push
pop
adc
stc
les
cld
fisubrs
mov
inc
sarl
pop
lea
xchg
scas
int
or
lret
mov
adc
in
in
fbstp
pop
pop
divb
mov
sbbb
or
pop
in
or
imul
je
or
pop
inc
scas
cmp
dec
pop
addr16
cmp
test
push
cmpsl
pop
arpl
dec
bound
std
ficomps
clc
in
xor
cs
mov
idivl
cld
mov
or
mul
jb
cmp
ret
xchg
pop
in
inc
jecxz
sbb
and
rcl
xor
jp
mov
addl
fimull
mov
xchg
push
mov
sub
pop
fcoml
mov
lds
ror
mov
cmc
push
test
dec
and
cmc
xor
mov
in
jo
repz
adc
cmp
insb
fisubs
pop
adc
int3
add
inc
sbb
fimuls
or
xchg
cmpb
cmp
pop
mov
test
adc
jbe
sub
or
pop
xor
mov
cmp
and
and
or
inc
ja
fwait
dec
or
cli
in
int
cmp
in
cmpb
rorb
jns
ljmp
inc
add
ret
pop
stos
decb
out
add
cld
pop
popa
ja
inc
fstpl
sub
or
cld
clc
xchg
add
lea
xchg
dec
aas
push
fists
aas
loope
in
dec
addl
insl
pop
enter
pop
or
pop
cli
mov
mov
icebp
cwtl
add
mov
mov
test
add
movsl
add
loope
mov
push
arpl
sarl
cwtl
adc
in
ss
jecxz
pop
push
test
xchg
xor
int3
mov
inc
push
movsb
mov
or
mov
mov
aaa
in
jl
mov
lea
hlt
shll
and
mov
xchg
scas
add
sbb
loope
jnp
add
push
repnz
mov
scas
in
arpl
mov
push
mov
or
loopne
shrl
loope
push
stos
pusha
in
dec
dec
stos
ljmp
out
cmp
in
enter
mov
mov
nop
or
cld
sbb
xor
aaa
fldt
add
adcl
mov
inc
loop
fsubl
mov
repz
rol
imul
dec
dec
pop
push
jecxz
scas
fldl2t
inc
xchg
inc
dec
and
js
lods
movsb
inc
lock
stc
sbb
dec
jmp
outsb
dec
mov
and
insl
pop
shll
push
loope
fiaddl
mov
outsl
vmwrite
insl
lods
enter
push
pop
lret
jle
push
in
stc
pop
clc
arpl
out
cld
cmc
adc
and
scas
rorb
jns
movsb
inc
inc
pop
lock
ljmp
out
sub
pop
inc
out
xor
push
repz
inc
bound
fcoml
shrb
dec
out
je
pushf
div
sarb
popf
xchg
lods
rcrb
and
sub
inc
sub
fmull
or
enter
mov
add
mov
lcall
bound
lret
pop
mov
daa
nop
pop
mov
insb
loop
fcoms
pop
pop
or
dec
pop
sarl
leave
cmpl
mov
push
add
mov
outsl
insl
sbb
mov
fnstcw
dec
incb
lret
jmp
jmp
xor
cmp
or
into
cmp
andb
stos
into
decl
mov
fwait
ds
loope
cmpsl
push
pusha
imul
sbb
pusha
fmul
or
add
add
mov
or
sbb
int
pop
mov
pusha
cld
imul
fdivrl
loopne
pop
mov
outsl
add
std
sbb
pop
movsl
cmpsb
lock
pop
aam
xchg
dec
cmp
push
pop
dec
out
fcoml
mov
pop
lahf
mov
jl
cmp
shrb
cwtl
jbe,pn
insb
jb
test
cmpsb
loope
fxch
mov
dec
jb
cmp
ja
shl
and
xor
fsubs
rcrl
push
cld
mov
push
sarl
ret
xchg
scas
cmp
jns
addr16
stos
push
arpl
jle
aad
inc
aad
in
out
add
fcmovbe
fcoml
dec
bound
dec
adc
call
or
popa
fsts
add
jge
cmpsl
push
push
into
cmpsl
call
pop
cmp
lods
push
scas
icebp
test
sub
loope
arpl
icebp
inc
cmp
push
cmp
dec
inc
sbbb
mov
or
jns
sahf
cmpsl
adc
mov
or
inc
shl
add
daa
incb
enter
mov
iret
fimull
mov
push
int
mov
int3
cmc
rolb
add
insl
jne
dec
pop
xchg
mov
movsb
fiadds
into
cli
add
incb
data16
jp
cmc
push
add
jns
lods
xor
mov
hlt
imul
cmp
and
sub
xor
and
imul
test
jecxz
mov
and
jb
sbb
mov
imul
or
and
adc
jo
mov
sbb
shlb
cmp
push
add
sub
fimull
sbb
jb
into
out
sub
filds
hlt
sub
xor
mov
dec
test
push
push
mov
pushw
test
test
fsubrp
push
stc
add
popf
sbb
jb
xchg
lret
jecxz
mov
jmp
pop
outsl
push
and
pop
jle
mov
in
test
insl
and
mov
sub
rolb
gs
xchg
jae
rorb
cmpl
loope
pop
dec
or
pusha
std
addr16
das
es
dec
and
mov
add
mov
jae
cs
inc
inc
adc
scas
dec
stos
lret
je
cld
out
out
int3
fmull
jns
fldl
cmp
xor
and
mov
mov
inc
cld
lods
lds
inc
fsubrl
mov
ljmp
arpl
pushf
adc
add
movsl
ja
jno
mov
jmp
repnz
fdivrl
sbbb
idiv
pop
mov
push
es
addb
mov
inc
adc
push
shll
xchg
xchg
jb
call
fsubl
cmp
mov
xchg
cmpsl
xor
mov
dec
mov
or
dec
pushf
insl
scas
stc
mov
stos
sti
push
cli
pop
stos
mov
push
sub
ret
stos
mov
fcmovu
sub
loope
lea
nop
add
int
fstp
adcb
int
sbb
dec
shl
push
sbb
adc
dec
loope
lods
push
push
dec
inc
jo
outsl
add
sub
ja
movsb
jecxz
pusha
cmpsl
adc
mov
out
jne
pop
adc
out
xchg
out
lock
mov
mov
ds
xchg
ret
push
add
enter
sub
stos
repnz
ljmp
repnz
cld
jbe
sbb
xchg
leave
bound
aam
sti
push
dec
xor
sbbl
jns
pop
sahf
fucomp
inc
sub
mov
les
pop
enter
dec
inc
dec
sti
or
loope
jb
lock
out
stos
jbe
cwtl
fcompl
pushf
cmp
ret
test
fcoml
movsl
fisttpll
xor
xchg
imul
test
jmp
and
dec
sub
outsb
cmc
inc
scas
shlb
inc
bound
imul
and
inc
pusha
cmc
lock
adc
pop
xchg
idivl
adc
data16
lcall
add
stc
mulb
or
xchg
push
mov
movsl
push
repnz
adc
sub
or
sbb
mov
ror
or
psubsb
mov
cld
sub
aaa
bound
lcall
les
ret
loop
jp
insl
imul
mov
xchg
mov
in
dec
and
std
pop
or
orl
imul
jle
mov
int3
add
mov
mov
xor
push
and
jp
push
dec
fimull
lods
inc
cs
clc
mov
int
clc
add
movsb
adc
fimuls
fdivl
pop
in
das
int3
mov
decl
ljmp
xchg
test
data16
jns
or
jecxz
xor
clc
mov
pop
outsb
push
push
xchg
xchg
out
cwtl
dec
push
cmp
pop
pop
adc
lea
in
push
jns
sbb
add
xchg
xchg
mov
cld
aaa
insb
sti
mov
pop
pop
nop
jl
jns
and
xor
test
fcmovnb
int
add
leave
and
stc
ret
cmp
rclb
repnz
dec
add
loop
cmpsb
fsub
push
cltd
pushl
fstl
mov
jnp
sub
mov
fs
mov
dec
rcll
and
icebp
jle
push
push
or
sub
test
insb
shll
or
mov
add
ds
pop
sub
rcl
sub
ret
lods
lods
insb
inc
mov
mov
loop
rcl
je
mov
jmp
pusha
push
mov
test
push
imul
scas
mov
mov
mov
popa
in
mov
outsl
add
xor
out
mov
push
jmp
in
jle
sbb
jecxz
test
lods
pop
lock
iret
push
jb
loope
and
push
pop
push
test
xor
cmp
scas
inc
pop
lods
pusha
dec
fstps
mov
mov
xchg
adc
nop
into
movsb
or
sub
fsubrp
dec
and
aaa
mov
mov
adc
test
jg
dec
std
je
inc
subl
xchg
mov
and
xor
cmpl
shr
add
cli
xchg
xchg
mov
push
fnstenv
bound
lret
repz
or
clc
rcl
xlat
inc
das
adc
cmp
ljmp
xchg
test
iret
cmp
mov
in
cltd
repnz
jecxz
xchg
in
xchg
xchg
pop
push
int3
mov
sub
lret
rclb
arpl
jno
push
pop
pop
ds
int3
pop
push
stos
sub
xchg
push
xor
fxch
loopne
daa
mov
mov
shl
bound
popa
push
sti
test
leave
mov
push
sub
ror
pop
inc
cs
fs
stos
test
add
mov
sbb
pop
mov
jmp
cs
pop
ficoms
mov
inc
push
push
dec
pop
repnz
push
dec
xor
ss
add
xor
gs
jo
pop
inc
push
ljmp
push
cmpsl
push
pop
loope
push
ljmp
xor
pop
fistpll
mov
into
xchg
gs
aad
ret
jg
dec
lock
bound
iret
jb,pt
cmpsl
in
sub
in
adc
push
ljmp
xor
aad
clc
sysret
sub
add
neg
mov
int3
mov
stos
pusha
push
or
adc
pop
or
ret
xchg
out
cmp
loop
mov
cld
mov
adc
fyl2xp1
call
adc
dec
mov
icebp
je
mov
xchg
jecxz
cltd
mov
jle
sbb
fistpll
in
ljmp
repnz
mov
in
pusha
repnz
adc
cmc
fucomip
aad
push
push
xchg
movsb
jecxz
and
jo
cmp
int
dec
jp
adc
pop
adc
mov
pop
mov
inc
int
inc
clc
fcompp
mov
inc
mov
icebp
jecxz
test
je
pop
cmp
dec
jecxz
loopne
fsubl
sbb
ret
xchg
push
nop
imul
mov
add
pop
adc
pop
adc
pop
sub
add
push
pop
pop
dec
push
dec
out
xor
aas
jno
aam
int
mov
sub
in
test
iret
fcoml
test
pop
cli
dec
dec
jb
pop
loopne
sbb
dec
mov
in
lret
lret
arpl
lods
inc
sbb
inc
scas
inc
and
jns
aas
addl
out
mov
mov
ror
fdivrs
jle
and
nop
mov
or
in
sub
inc
and
jp
xchg
ss
shl
fwait
ja
pop
jno
sahf
mov
into
in
add
jle
pop
or
xchg
jb
not
adc
push
repz
sub
mov
sbb
and
or
stos
xchg
fmuls
ret
shr
push
dec
bnd
arpl
loopne
inc
shrl
mov
cmpsb
loop
pop
fsubl
jecxz
fsts
inc
shll
gs
or
test
outsl
adc
in
inc
cmp
loop
popf
out
xchg
cld
or
fldl
pop
in
ss
push
sub
popa
dec
fiaddl
ret
in
fstp
cmp
dec
pop
add
lock
rolb
mov
xchg
jge
add
mov
rcl
adc
push
xor
divps
test
push
mov
cmp
roll
ror
mov
test
jb
mov
stc
pop
dec
jb
ret
fdiv
add
icebp
push
test
mov
or
dec
cmpsl
les
ss
stos
lock
js
sub
imul
call
sub
clc
lcall
rcr
mov
cwtl
rol
and
sub
aam
lea
fists
divb
test
fiaddl
call
ficompl
stos
aaa
xor
test
pop
fsubl
in
mul
test
push
fidivl
or
jg
adc
cld
jecxz
les
sti
outsb
sbbl
arpl
mov
mov
int3
mov
or
dec
jns
repnz
arpl
mov
mov
loope
mov
fldl
out
fsubl
dec
out
fmuls
cld
sub
jp
loope
mov
xor
cmp
fistpl
in
imull
outsb
cmp
and
sub
jne
pop
daa
cmp
mov
jno
ljmp
jne
lea
and
enter
call
mov
mov
ficomps
inc
pop
push
lods
mov
and
push
lock
mov
push
insb
add
jnp
in
shrl
cld
and
cli
cmp
sahf
push
jnp
loopne
rorl
xchg
iret
clc
mov
out
and
jnp
mov
pop
rcl
jnp
std
hlt
push
jecxz
ffree
int3
ret
pop
sbb
loope
dec
scas
scas
xchg
sbb
ja
cmp
sub
lock
cmp
lcall
push
out
das
sarb
adc
or
je
xchg
addl
and
sbb
adc
fsubrp
arpl
jecxz
pop
subl
sub
pop
pop
jle
mov
aaa
sbb
ret
call
in
inc
lahf
jbe
jae
xchg
cs
mov
aad
and
repnz
sti
add
mov
push
xor
jno
push
inc
cld
inc
mov
aam
or
cld
cmp
push
stc
fadds
adc
xor
out
lret
sub
in
jmp
xlat
xchg
sub
mov
lcall
cmp
shll
sub
pop
rolb
test
dec
jae
fcoml
xor
or
lods
lahf
leave
xor
xchg
xor
cltd
pushf
cmpb
cmp
iret
mov
pop
shrl
dec
add
lret
jmp
rclb
ss
mov
addb
and
icebp
inc
mov
cmp
cld
inc
movsl
mov
pop
jle
xor
inc
add
lcall
das
and
mov
mov
shlb
mov
les
jge
cli
or
adcl
mov
cmpb
loopne
mov
ss
dec
rolb
mov
sbb
test
scas
test
andb
fdivr
push
clc
pop
daa
dec
in
mov
jmp
xor
sbb
negb
loopne
pushf
and
lcall
xchg
aad
nop
arpl
adc
adc
cmc
fs
test
das
arpl
inc
pop
stos
push
pusha
stc
in
xchg
sub
xor
mov
loope
mov
ret
fsubrl
inc
mul
stos
aaa
int3
pop
push
dec
push
lret
xchg
xchg
test
fdivrs
cmpsb
lcall
push
and
lret
xchg
aaa
addr16
mov
cwtl
loope
rclb
mov
in
push
jge
push
sahf
mov
jge
aaa
ss
dec
jbe
push
jbe
cmc
cli
jae
and
or
cld
xor
ljmp
sbb
xchg
rcll
dec
lock
test
sub
repnz
inc
pop
or
in
es
or
pop
cld
mov
mov
rorl
mov
aas
test
pop
push
jge
repz
test
push
mov
pop
fmull
aad
ret
fdivrs
cld
imul
clc
mov
ljmp
jbe
insl
dec
mul
outsb
stos
pop
xchg
lea
int3
and
mov
dec
pop
outsb
cmp
and
dec
sub
adc
dec
call
xor
lock
repnz
mov
push
test
adc
ljmp
pop
push
mov
lods
sarl
fsubrl
pop
outsb
dec
ljmp
movsb
cwtl
incb
std
xor
sub
popf
pop
ja
ficomps
pop
negl
adc
inc
and
pop
test
int
aaa
mov
das
rcrl
ja
push
mov
sub
lods
and
mov
clc
addr16
loopne
dec
rcll
sub
lock
xchg
jmp
mov
enter
jne
data16
pop
fstl
mull
pop
push
jmp
jnp
or
mov
call
lods
dec
dec
lods
lret
push
int3
add
cmp
rcr
ret
jb
and
mov
outsb
orb
jb
or
add
cmp
rcl
popf
les
xor
inc
cmp
mov
mov
sti
mov
std
fsubl
hlt
jo
mov
push
loope
or
adc
xchg
insb
cld
bswap
jae
mov
xchg
xor
sub
jnp
ror
ljmp
xor
imul
mov
loope
fsubs
inc
xor
dec
xlat
mov
pop
in
sti
cld
imul
and
iret
out
sbb
dec
and
adc
add
int
dec
in
cmp
mov
jle
sbb
shll
std
repnz
repnz
sub
movsb
push
enter
dec
cld
mov
dec
std
or
push
ret
out
loope
cmc
push
adc
mov
cli
mov
rol
xchg
pop
jmp
mov
mov
mov
pop
movsb
jg
xor
push
jecxz
inc
jmp
stos
arpl
push
inc
or
fmull
sub
sahf
sbb
loope
repnz
jne
scas
stos
push
stos
inc
ds
or
xchg
lds
mov
sbb
repnz
pop
and
xlat
stc
fnstsw
sarb
cwtl
test
icebp
dec
jl
mov
pusha
sbb
sarb
mov
fstpl
stos
stos
push
sti
mov
inc
fisttpll
insb
adc
repnz
out
cmp
test
cld
sub
inc
push
pop
lods
cmp
mov
out
in
dec
mov
pop
loopne
add
or
dec
jno
in
ja
xchg
dec
aam
shlb
mov
sti
les
fisubrs
or
aas
fsubl
xchg
xlat
add
cmp
cld
call
pop
iret
aam
int
sub
mov
inc
stc
inc
mov
dec
xlat
cmp
mov
fldenv
xchg
out
mov
adc
or
xor
mov
movsb
shll
and
mov
cmp
add
adc
int3
lcall
inc
imul
sub
scas
int
aas
adc
mov
add
cmp
or
cld
push
lret
stos
cli
push
xchg
sub
or
lahf
stos
nop
test
sti
imul
test
mov
test
add
aad
ficoms
sbb
shlb
pop
cld
fisubrl
cmpsb
pop
ljmp
dec
dec
jno
sub
repz
fidivrl
or
call
xchg
rcrb
dec
mov
mov
scas
int
xor
sbb
lahf
cld
fs
je
imul
loopne
jo
arpl
aam
sti
or
mov
xlat
mov
mov
pop
or
inc
inc
cmp
xchg
jle
push
fbstp
bound
inc
cmp
jns
dec
cmp
iret
mov
loope
xor
jecxz
sub
stos
pusha
lock
pop
es
es
loop
in
fsubrl
scas
cmpsl
lret
mov
add
out
or
ret
rcll
lods
cmp
insb
ret
das
insb
cld
mov
xor
xchg
fcoml
adc
rcr
cmp
jle
subb
jecxz
fisubrl
cld
and
lods
test
in
int
and
xchg
pop
mov
in
lods
push
int3
clc
add
mov
repnz
mov
fcoms
and
ljmp
daa
nop
and
xor
jg
mov
push
fmul
adc
aas
mov
jb
sysexit
call
fisttpl
sti
lret
icebp
xchg
loope
or
enter
adc
std
sbb
mov
sbb
fwait
inc
shll
sbb
fimull
add
lea
jno
ret
jbe
mov
cld
adc
add
jne
stos
cmc
clc
push
mov
aam
ret
dec
add
jo
test
and
pop
sbb
aaa
jl
lea
adc
sub
jl
pop
sbb
mov
iret
dec
loope
mov
jl
es
dec
imul
cs
in
xchg
sbb
cltd
addr16
rol
imul
push
cmp
jp
and
sub
and
adc
and
mov
add
pop
cld
imul
and
dec
adc
aaa
pop
addb
loop
cmpsb
push
jl
cwtl
repnz
fsts
cwtl
mov
test
dec
xchg
mov
jno
pop
mov
dec
inc
cs
xchg
shlb
je
mov
sarl
mov
popa
adc
les
aad
out
push
fldenv
cmpsl
dec
shlb
mov
daa
pop
sub
incl
mov
sub
cmpsb
popa
push
cld
or
xchg
xlat
call
xchg
adc
push
cmp
jns
movsb
cld
push
inc
mov
dec
fimuls
fmull
sbb
clc
jbe
push
pop
inc
xor
fimull
xlat
adc
adc
leave
jge
fstl
mov
iret
sub
inc
cmp
or
or
pushf
stc
insb
pop
in
add
xchg
sub
sub
mov
lods
sub
and
inc
push
aam
xchg
adc
pop
stos
lret
jne
mov
mov
mov
or
andb
adc
ror
jnp
daa
add
loope
int3
jo
leave
adc
js
les
or
pop
mov
stc
repz
fs
xchg
push
out
lods
sarb
repnz
out
imul
testl
pop
jmp
fwait
hlt
sahf
jg
jle
movsl
insl
cmp
cmp
inc
shl
dec
and
push
out
dec
and
cld
jle
scas
stc
bound
scas
mov
mov
sbbb
rolb
ss
fiadds
add
or
test
add
rcr
sub
jle
repnz
mov
cmp
lea
cmp
xchg
ja
stc
or
test
xchg
sti
rclb
inc
push
cltd
cmc
cld
jmp
adc
fisubs
and
ja
test
cwtl
inc
in
int
loopne
rolb
cmp
sbb
lds
pop
fimuls
test
into
inc
push
jle
cwtl
iret
sbb
clc
daa
push
mov
ljmp
jp
lea
pop
xchg
pushf
fldlg2
andl
mov
mov
fcmove
cld
mov
scas
mov
test
dec
add
out
and
fcompl
sbb
out
aas
xchg
stos
xor
stc
mov
xchg
xor
jl
mov
mov
fisubrs
loopne
dec
mov
xchg
xor
mov
nop
mov
sbb
in
xchg
and
sti
and
xchg
test
into
add
repz
out
push
cld
mov
repnz
push
in
sub
divb
dec
lea
jle
xor
stc
dec
inc
and
mov
fnstsw
pop
push
sub
sahf
in
aaa
push
mov
es
pusha
xchg
lea
imul
push
dec
les
imul
jle
jbe
ss
mov
das
test
and
dec
lds
pop
hlt
push
fnsave
adc
jg
mov
sbb
mov
gs
xor
mov
mov
scas
insl
and
lods
xchg
inc
push
or
jnp
cld
popf
lock
dec
aad
hlt
mov
or
int3
cmpsb
in
aad
stos
inc
in
mov
xor
mov
stos
jecxz
and
scas
insb
and
adc
xchg
lcall
sub
mov
fwait
cmpsb
mov
and
xlat
in
insb
jecxz
iret
adc
jae
lret
push
cmp
or
sub
mov
mov
int3
mov
sub
push
jmp
cmp
cmpsb
xchg
mov
inc
push
push
jle
aaa
out
pusha
fists
and
add
mov
int3
mov
jge
lret
cmp
xor
adc
lret
jnp
scas
mov
dec
sbb
arpl
adc
cld
mov
in
aaa
push
jns
sub
xchg
ljmp
fisttps
pushl
in
jmp
insb
mov
inc
mov
and
cld
sbb
push
adc
mov
out
imul
adc
aaa
lock
pop
or
stos
fwait
lea
cs
aad
or
ret
sti
and
enter
stc
out
inc
cmpsl
in
jns
cmp
int
ds
mov
les
shrl
jl
fildl
fimuls
push
int3
add
in
shrl
inc
mov
jmp
add
imul
cmp
hlt
js
mov
xchg
dec
mov
xor
in
xor
hlt
lods
pop
addb
je
leave
sub
imul
rorl
mov
lcall
stc
loopne
fdivl
fdivrl
push
push
hlt
fsubl
push
mov
dec
mov
add
rol
push
fcompl
push
cmpb
aam
cld
popf
dec
sbb
jle
add
push
cwtl
sbb
jl
mov
mov
shlb
inc
in
push
lcall
stc
insl
movsl
daa
dec
push
mov
or
cli
cwtl
psrlw
mov
icebp
cmp
sub
rorb
and
push
insb
or
sub
and
push
mov
adc
sbb
mov
jns
dec
aam
stos
cmpsb
xor
push
in
dec
xchg
jno
jmp
popa
mov
stc
mov
dec
mov
pop
jae
cmp
les
movsl
xor
mov
imul
cld
jmp
adc
fldl2e
dec
push
hlt
cmpl
std
mov
or
mov
sub
sahf
mov
cmpsl
mov
sub
or
xor
hlt
jno
mov
jne
repnz
out
les
xchg
push
dec
push
sub
fidivs
popf
enter
test
mov
jmp
inc
aaa
sbb
jmp
pop
pop
repnz
or
test
cld
mov
pop
cmp
rclb
push
mov
iret
inc
into
and
aam
fcoms
mov
push
ja
int
mov
cmp
rcll
mov
movsb
push
jge
lret
mov
movsb
imul
fwait
rcll
inc
and
hlt
popa
dec
or
push
xchg
fdivrp
and
xchg
jl
negl
in
push
inc
jb
dec
mov
jle
popf
pop
popa
xor
sub
push
jl
int3
into
pop
add
sub
pushf
xchg
nop
shr
fdivl
decl
mov
mov
jb
les
in
jg
fwait
test
arpl
call
sbb
jns
scas
jle
and
iret
repnz
inc
and
dec
jecxz
ret
sub
adc
rolb
dec
sbb
and
faddl
out
and
jge
mov
arpl
jno
mov
or
mov
adc
jle
and
inc
test
ss
aaa
idivl
cwtl
cld
push
and
and
aad
mov
xor
or
dec
sub
shrb
and
rorb
fidivl
and
cld
inc
xor
inc
adc
and
cld
jl
mov
ljmp
cmpsb
aas
cmp
add
andnps
test
movsb
popf
enter
jmp
dec
js
push
sbb
mov
adc
loope
pop
loope
test
xsaves
int
mov
cmp
sbb
test
push
sbb
and
ljmp
pop
int
rcr
stc
push
mov
or
dec
jne
dec
lods
xor
adc
cmovae
push
js
xchg
rcll
lret
push
fisubrl
mov
mov
inc
mov
add
push
jmp
xchg
ss
stos
dec
push
bound
xchg
pop
outsb
push
cmp
cmpxchg
jbe
lret
inc
push
dec
inc
or
cli
test
loope
cmpsl
loopne
inc
and
xor
cmpsb
adc
dec
mov
jbe
inc
rcl
jl
mov
fisttpll
pop
mov
add
test
sbb
jp
test
imul
inc
mov
fs
mov
mov
sub
sub
addr16
repz
popa
jbe
jns
inc
lea
in
dec
jg
xchg
in
or
add
sbb
out
cmp
jecxz
addb
mov
jp
cld
push
mov
push
or
scas
pop
push
shl
call
inc
jmp
test
sbb
pop
mov
or
cmp
mov
lds
loopne
fmulp
jg
xchg
sbb
push
pop
mov
mov
rol
cwtl
cld
testb
push
jbe
mov
sti
mov
and
pop
add
push
jp
repz
mov
adc
xor
dec
outsb
out
fdivl
xor
inc
pop
sbbl
movsb
mov
jmp
addr16
into
or
fdivrl
shr
pop
enter
mov
shr
loopne
outsb
and
mov
jecxz
add
or
adc
cli
bound
sub
insb
jmp
lds
xchg
ret
and
sarb
sbb
cmp
xchg
leave
enter
adc
sbb
daa
mov
test
mov
in
pop
stos
shlb
data16
ret
pushf
movsb
dec
scas
inc
call
test
ficoms
out
insb
test
cmp
into
pop
test
lock
pop
sbb
push
fldcw
ret
incb
aam
imul
add
xor
inc
dec
mov
dec
sub
nop
aas
pop
loop
cmc
divl
gs
ljmp
add
push
idivl
inc
in
push
faddl
push
les
out
jne
fwait
mov
enter
subb
fsubrl
lea
flds
jb
jp
push
je
cwtl
fstpl
aas
jecxz
push
movsl
mov
mov
das
fsubs
sub
pop
clc
jns
cmc
fcoml
pop
test
in
jp
jbe
or
sub
jge
push
bound
jbe
in
push
push
jg
enter
push
xor
mov
arpl
scas
fisubl
enter
dec
cmp
and
call
jmp
or
int
and
test
pop
sub
mov
adc
call
xchg
int
sub
loopne
pusha
fstpl
test
lcall
adc
pushf
ficomps
mov
cld
scas
mov
push
xchg
jg
adc
std
notl
dec
and
enter
cmp
mov
add
mov
clc
stc
fstpl
inc
sbb
aad
outsl
mov
cwtl
sbb
fcomps
mov
inc
shr
clc
fs
into
pop
sbb
xchg
lods
mov
int
jg
inc
lret
fistps
xchg
cli
and
sarl
jbe
int
sbb
xchg
jg
fdivs
in
cwtl
sbb
enter
movsb
cmpb
xchg
lcall
enter
jge
add
fmulp
cwtl
sahf
pop
jne
mov
or
mov
loope
push
dec
loope
mov
pop
push
push
dec
repz
negl
and
enter
aas
inc
loope
imul
lcall
je
mov
jb
push
scas
dec
test
adc
push
pop
imul
adc
fadd
in
xchg
mov
out
xchg
test
out
jo
popf
pop
sbb
push
sbb
fwait
lods
mov
fsubs
lret
aam
test
stc
lret
sbb
negb
ja
shll
ret
fsubrl
push
sub
cwtl
push
mov
icebp
je
ja
sbb
xchg
lcall
movsb
xchg
mov
pop
mov
movsl
popf
ret
repnz
jp
enter
ss
push
lods
pop
inc
mov
mov
sbb
sbb
push
lock
push
mov
jmp
add
dec
nop
out
and
shl
fistps
mov
loope
add
shr
sahf
cwtl
mov
pushf
cmpb
movsb
cwtl
jo
aad
clc
movsb
mov
mov
ficomps
xlat
into
movsl
dec
fstpl
leave
testl
pop
mov
sub
bound
xchg
mov
fcomi
xlat
nop
stc
inc
and
jp
movsb
pop
cwtl
xchg
aas
cli
clc
pop
pop
in
dec
inc
testl
scas
std
lock
push
sahf
xchg
push
inc
repnz
inc
movsb
fdivrs
push
dec
js
sub
sub
pop
dec
flds
sbb
aad
jns
cwtl
dec
push
dec
cmp
mov
fdivs
ds
negb
sbb
jnp
repz
xchg
pop
test
mov
out
jae
stos
mov
popf
scas
mov
xchg
sbbb
adc
and
loopne
mov
lods
out
mov
roll
dec
mov
mov
fistl
cwtl
sub
out
inc
xor
outsl
inc
add
jp
call
aas
in
mov
stos
dec
jecxz
js
jp
mov
ret
pop
js
call
xchg
shl
xchg
adc
roll
aas
mov
sub
fwait
pushf
push
jmp
pop
mov
hlt
mov
cli
test
adc
jb
lock
cmpsb
or
bound
fcoml
lcall
cltd
xchg
cli
pop
sub
out
or
mov
mov
leave
cltd
divl
movsb
xchg
jmp
clc
adc
rcr
mov
adcl
leave
xor
jmp
lret
xchg
out
enter
mov
scas
fistps
stc
aad
aam
sub
xor
loope
pop
add
in
cwtl
inc
sbb
xor
fwait
in
call
int
mov
fstpt
imul
mov
mov
scas
enter
imul
lods
xchg
call
push
movl
sub
mov
out
cltd
sbb
sbb
cmp
mov
push
mov
bound
sbb
xchg
fsubl
or
mov
sahf
aad
stc
mov
add
or
inc
test
fldt
test
cmpsb
inc
leave
mov
je
daa
cmp
push
in
imull
inc
clc
pop
rcl
xchg
xor
cmp
jecxz
data16
cmp
fs
mov
outsb
loopne
mov
xchg
push
not
out
in
xchg
push
das
cli
mov
push
cmpsb
andl
repz
pop
data16
adc
xchg
xlat
cwtl
cmpsb
rclb
aad
mov
sahf
lds
lods
push
jmp
mov
jb
fcmovb
loopne
cmp
mov
out
xchg
movsb
push
mov
lods
lods
xchg
lcall
sbbb
testl
fucomp
into
call
int
sbb
push
or
mov
jns
jecxz
pop
test
subb
add
ja
call
scas
sahf
lret
sbb
outsb
mov
mov
sbb
sub
pop
pop
xchg
imulb
in
xchg
xor
fmuls
mov
js
cwtl
into
lock
mov
mov
mov
js
mov
into
adc
aas
repnz
add
clc
mov
popf
rcrb
xor
xchg
pop
jno
loopne
movsb
xor
fnstenv
in
pop
lods
cmp
adc
in
sar
mov
rorb
add
jmp
or
fisttps
lcall
jp
mov
bound
in
cmp
mov
pushf
lods
fildl
hlt
pop
pop
rcl
enter
mov
cli
mov
repnz
dec
mov
loopne
dec
fidivl
mov
or
call
fcmovne
fstp
sub
int3
stos
std
loope
mov
pop
movsl
dec
pushf
rcrb
pop
dec
mov
lret
pushf
mov
sub
mov
pop
scas
aas
inc
push
pop
pop
mov
cmp
jb
jge
lods
cltd
mov
in
mov
fyl2xp1
push
add
xchg
mov
push
mov
pop
stos
testl
pop
mov
shl
stc
xchg
lock
in
push
xchg
dec
repnz
into
pop
movsb
out
in
sbb
call
xchg
loopne
push
js
test
pop
call
xor
les
jmp
enter
scas
sub
in
ret
xchg
fdivrs
mov
pushf
repnz
and
test
mov
into
xor
std
neg
lods
sbb
jmp
lock
mov
fcmove
mov
inc
adc
fsubrs
negb
iret
jb
fsubrl
sbb
std
ljmp
xor
pusha
xlat
jbe
call
arpl
mov
sti
sub
movsl
mov
jmp
lock
leave
cltd
mov
hlt
loope
push
pushf
enter
and
lods
jp
cld
movsb
jmp
orb
and
push
rdpmc
fstpt
jge
and
adc
jmp
lods
mov
adc
inc
loope
negl
pop
lock
popf
xchg
xchg
andb
mov
push
subb
outsl
icebp
dec
cwtl
mov
loop
bound
mov
loopne
daa
xchg
add
inc
and
xchg
hlt
mov
fsubr
mov
lods
jmp
js
cwtl
stc
fsubrs
sub
mov
cwtl
jp
hlt
adc
sub
rorb
push
jne
hlt
cmp
jbe
ja
push
and
jl
xor
bound
std
and
lds
int3
pop
aam
aad
mov
xchg
cmp
loope
adc
jecxz
pop
dec
fsubs
or
fstp
cs
imul
into
fwait
push
pop
mov
dec
mov
push
arpl
call
fs
in
xor
addb
sahf
mov
bound
fcomps
jg
xchg
in
xlat
dec
and
push
mov
pop
in
in
push
into
sub
lods
mull
mov
fistpll
cli
mov
push
adc
js
sbb
std
int3
loope
movsl
cltd
popa
rcl
stos
pop
dec
cwtl
rol
mov
popf
sbb
js
cmpsb
mov
fcoms
push
xchg
mov
jl
rcrl
cmp
adc
out
jmp
aam
ret
out
clc
scas
dec
loopne
pop
dec
xor
xchg
cmpsb
mov
jge
sub
sbbb
mov
add
cwtl
lods
lock
or
lcall
adc
adc
xchg
call
mov
push
mov
mov
aam
aaa
xchg
sub
pop
mov
adcb
adc
cmp
sar
push
idivl
pop
dec
mov
jp
repz
sbb
call
in
icebp
std
fisttpl
clc
test
jp
enter
inc
hlt
mov
inc
aam
mov
nop
rcrb
push
je
mov
and
mov
xchg
js
filds
cmpsl
fidivs
push
andb
jg
out
cltd
mov
add
pop
mov
hlt
cmpb
pop
mov
or
test
sbb
lods
sahf
aad
stc
scas
icebp
lea
xchg
lret
out
lret
nop
jge
cli
sub
faddl
mov
pop
push
cmp
mov
insl
xchg
rolb
movsb
mov
xchg
icebp
repnz
loope
pushf
mov
shlb
xchg
dec
pop
mov
leave
lret
mov
jmp
iret
je
clc
ret
fdivr
lret
test
sub
mov
and
jmp
outsb
lock
cwtl
inc
stos
cltd
mov
sbb
fdivl
fcomps
pop
mov
push
adc
call
js
xchg
aam
sti
mov
mov
scas
enter
sub
mov
push
test
pushf
iret
jecxz
sahf
sbb
lock
inc
loope
jp
shrl
call
jmp
jl
mov
pushf
mov
push
mov
fistpll
sti
fidivrl
sbb
mov
adc
je
aam
sub
stc
inc
bound
out
fwait
sub
xchg
mov
xchg
clc
out
mov
ror
and
inc
incb
jmp
dec
pop
cmc
mov
in
adc
lea
repz
xchg
inc
sub
mov
mov
cs
inc
aam
sbb
ja
inc
pop
mov
insl
bound
mov
sub
rcr
xor
and
sbb
ret
ffreep
cld
movsl
fcmovnu
sti
dec
mov
out
inc
push
mov
fidivl
mov
in
aam
xchg
adc
cld
iret
mull
cmpsb
cmp
xor
repnz
dec
adc
push
fidivrl
stos
into
or
icebp
sbb
mov
pop
mov
inc
lods
xchg
decl
scas
stos
aad
fdivr
jecxz
lods
jp
adc
je
fdivl
mov
add
xor
nop
aad
andl
incl
in
push
cmp
mov
jns
sub
pop
add
dec
decl
mov
mov
sarb
test
jbe
hlt
push
push
or
mov
ljmp
loopne
ds
push
cld
stos
roll
aam
pop
dec
fwait
dec
push
xchg
xlat
mov
sub
ja
add
adc
decl
mov
faddl
pop
in
mov
sub
insb
movsb
mov
inc
enter
and
xchg
inc
mov
xchg
addr16
sub
popa
xchg
iret
mov
push
test
fimuls
inc
add
mov
sub
cmp
inc
out
mov
pop
cmp
dec
xor
dec
sar
aad
fadd
leave
sub
in
std
sub
loop
jb
push
push
push
sti
incb
or
fsubr
in
mov
push
cmp
ja
jecxz
inc
cmpl
jl
test
inc
mov
sub
outsb
ljmp
mov
jecxz
add
pop
jle
adc
incb
int
outsb
push
in
sub
pushf
mov
mov
sbb
mov
inc
les
xchg
mov
xchg
cmc
sahf
jecxz
cmpsl
sub
rorl
cld
xor
movsb
push
repz
loop
loope
jbe
shll
mov
dec
mov
cld
rorl
add
fs
inc
lods
jle
lahf
jp
xchg
insb
out
or
test
add
repz
fnstsw
cld
movsb
out
addr16
loopne
or
movsb
and
cmc
test
xchg
leave
sahf
sbb
dec
addb
and
mov
aaa
leave
les
sti
out
testl
movsb
es
xor
mov
and
leave
mov
or
mov
test
mov
cmpsb
fstp
loopne
xlat
stos
xchg
aam
add
pop
ja
dec
sarb
mov
in
imul
mov
mov
push
mov
dec
jle
out
jecxz
rorl
mov
movl
loope
outsl
pusha
push
test
punpcklbw
adc
stos
test
adc
sub
mov
push
fidivrl
jmp
jb
jbe
or
test
cmp
pop
cld
and
mov
aas
out
incl
jle
rolb
inc
pop
add
cld
jmp
add
dec
dec
add
test
outsl
lds
loope
fs
and
adc
ret
scas
ret
dec
js
fucom
push
nop
and
out
mov
sahf
in
insl
js
pushf
int
pop
and
mov
push
mov
pop
or
inc
mov
and
ss
and
cmp
pop
dec
cli
aam
jecxz
and
lock
cmpsl
subl
gs
je
in
jl
ja
xchg
xchg
sub
pop
push
hlt
sub
push
cld
pop
test
in
dec
jnp
mov
adc
out
insb
or
cmc
rcl
inc
pop
push
jmp
mov
js
inc
cld
jmp
sbb
les
in
sub
scas
push
inc
in
xchg
pop
push
insl
pusha
lock
sbb
test
cld
les
addb
ss
loope
or
xlat
dec
in
test
insb
imul
scas
ja
les
jg
vmxoff
mov
cmc
pop
push
stc
clc
and
das
outsb
fnstsw
aas
or
fs
jno
lods
dec
leave
dec
ds
addr16
clc
pop
sbb
popf
mov
popa
inc
aas
mov
xchg
mov
pop
mov
mov
inc
aaa
icebp
shl
loop
int
lret
lock
pusha
inc
enter
ja
pop
cld
mov
add
fidivrs
leave
inc
cmpsb
enter
bound
jno,pt
jno
push
push
push
mov
mov
xor
dec
ljmp
mov
rorb
push
push
decb
dec
popa
popa
mov
repz
repnz
jbe
mov
dec
movsb
jno
adc
lret
jnp
idiv
inc
outsl
repz
std
inc
decb
fimull
movsl
shlb
push
fisttps
pop
loope
js
fs
pop
loop
jecxz
add
cld
clc
pusha
mov
mov
leave
ret
jmp
in
inc
mov
cli
sti
dec
adc
mov
iret
sti
xchg
sub
xlat
and
jae
sub
adc
or
mov
mov
add
fisubrl
loopne
mov
nop
adc
xor
inc
movsb
fdivl
icebp
ja
mov
cmp
inc
sub
test
or
jns
dec
mov
loopne
int3
and
xor
cs
into
nop
out
push
inc
lea
xchg
test
xchg
les
sbb
sbb
loop
jno
xor
inc
and
inc
add
push
lahf
jp
jmp
or
mov
das
fimuls
pop
jmp
ret
movsb
fisttpll
hlt
jecxz
pop
dec
lods
ljmp
xor
sub
mov
xchg
fiadds
arpl
mov
dec
test
out
in
fsubl
cld
out
icebp
flds
jle
mov
shr
adc
cmc
or
sbb
mov
pop
mov
test
xchg
sbb
js
xor
or
or
fucomip
adc
jno
xchg
pop
xlat
xchg
xchg
pop
pushf
push
xchg
push
test
mov
or
add
jb
cmp
mov
cld
sti
std
int3
inc
lret
cmp
or
js
xchg
cld
push
sub
inc
mov
cmc
repz
clc
push
loopne
in
loope
cmp
cwtl
inc
sub
lods
cmp
sarb
lahf
ljmp
or
cmp
dec
or
rcr
adc
xlat
insb
cmp
jbe
js
jno
iret
mov
mov
push
out
fdivr
sti
push
mov
or
adc
jmp
dec
sbb
adc
sub
sbb
int
in
pop
ja
and
mov
sbb
cmp
fidivl
xchg
or
ret
or
mov
or
popf
mov
cmp
scas
movsl
jle
sbb
aaa
ret
addr16
outsb
mov
popa
or
mov
sub
push
stos
jne
div
and
jno
in
dec
xchg
daa
lds
gs
sub
jg
daa
sbb
push
mov
sub
iret
aaa
mov
ja
sbb
mov
pop
lea
test
shlb
mov
decl
dec
jmp
cld
ss
sub
ljmp
push
js
mov
xor
xlat
cld
iret
push
and
jne
and
xchg
adc
jecxz
mov
sub
push
ret
addb
cmpl
sub
lods
mov
sar
enter
adc
lea
sub
rol
insb
cmp
lcall
sbb
inc
mov
mov
scas
cmpsb
out
imul
jns
dec
sarb
cmp
pop
lea
push
cmpl
xchg
sub
and
fcoml
ret
sar
or
and
push
repz
fcompl
lock
and
sbb
into
das
cmp
mov
add
sub
data16
dec
mov
cwtl
adc
imul
xchg
mov
out
dec
test
xchg
push
jns
mov
cmp
leave
adc
movsb
in
jno
pop
xchg
call
js
out
orl
fistpll
sarb
xchg
mov
push
sbb
and
mov
stc
xorl
jge
enter
pop
cmpsb
xor
jno
jno
ret
xor
dec
jnp
cmc
loope
ss
icebp
lods
mov
lock
fisubs
adc
cmp
mov
cld
mov
adc
in
lods
add
or
cs
pusha
lods
popa
nop
push
push
test
rclb
mov
dec
dec
jmp
xchg
cmpb
pop
add
in
sub
pushf
fmull
xlat
mov
fldenv
outsb
das
fmul
loopne
mov
into
rolb
xchg
scas
mov
outsb
test
jno
adc
outsl
sub
mov
mov
jecxz
arpl
rolb
imul
pop
ret
clc
mov
outsb
loop
fsubl
mov
mov
jae
into
xor
test
jmp
hlt
icebp
jle,pt
imul
ret
jle
jg
xchg
dec
lock
mov
cmpsl
xchg
jnp
decl
outsb
inc
xor
js
dec
popa
mov
adc
pop
fsubl
xchg
inc
dec
xchg
jo
out
xchg
fimuls
cwtl
aam
idivl
xchg
lcall
imul
adc
sub
pop
fcmovb
pushf
mov
xorb
popa
cmp
popl
mov
cmc
and
lods
jnp
ret
mov
sbb
insb
ja
and
icebp
mov
inc
sbb
addr16
xchg
push
mov
pop
sub
in
push
test
lret
js
dec
flds
inc
mov
jb
cld
insl
test
js
adcl
les
lcall
pop
shll
mov
imul
aaa
pop
dec
xchg
dec
lcall
xor
aaa
xchg
pusha
cmp
cld
pushf
dec
jno
or
shlb
and
push
add
aad
hlt
fstps
shrb
dec
cld
inc
xchg
outsb
push
jnp
mov
mov
or
dec
inc
and
cmp
mov
adc
sahf
notb
cld
popa
push
jp
jle
mov
mov
lret
cli
adc
mov
lock
bound
push
xchg
sbb
pop
out
inc
rorl
pop
push
sub
push
int3
and
shll
int
mov
mov
in
push
repz
sbb
xchg
cmp
dec
test
xchg
bound
lods
cld
xchg
and
mov
inc
sbb
repnz
dec
push
pusha
push
mov
rolb
xchg
mov
pusha
add
jecxz
pop
xor
rcr
adcl
mulb
adc
loope
mov
pop
jb
int
imul
xlat
push
ljmp
in
cmp
push
mov
lods
fimull
jo
push
lods
mov
shlb
push
cmpsl
int3
sub
cld
cmpsb
ret
sub
shrl
in
push
dec
or
push
in
test
aaa
and
mov
movsb
adc
lret
addr16
repnz
mov
int
aaa
int
imul
loop
adc
cmp
adc
orl
xchg
sbb
xchg
roll
bound
repnz
bound
aaa
sbb
and
push
and
and
cld
movsl
dec
aad
xorl
sti
add
dec
ret
flds
sub
inc
or
pop
mov
mov
mov
inc
jp
mov
xchg
push
mov
sbb
popf
add
pop
test
repz
and
cmc
aam
xor
add
lock
mov
scas
loop
les
or
mov
jno
ss
push
cld
and
add
mov
add
xor
push
popa
int3
push
xor
int
stos
aaa
rclb
loop
je
in
outsl
nop
jg
dec
inc
mov
test
out
ljmp
imul
sti
fsubrs
out
aas
out
loope
xor
imul
jns
call
dec
loope
jecxz
pop
push
xorl
add
test
out
fcmovu
jbe
popa
adc
push
pop
mov
les
mov
push
adc
or
iret
shrl
pop
pop
leave
jmp
shl
mov
jl
push
xchg
lea
ljmp
pop
jle
xchg
mov
pushf
adc
leave
mov
push
xor
adc
push
xchg
push
test
or
iret
imul
mov
sub
aas
hlt
cs
or
sbb
in
ds
xchg
sub
push
loop
sarl
in
int
xor
movsb
sub
push
mov
mov
mov
outsb
cmp
mov
fdivrp
sub
push
xchg
rorl
test
in
popa
outsb
mov
jne
test
nop
lret
lcall
and
and
insl
cwtl
push
mov
bound
cwtl
push
shrl
sbb
nop
fidivrl
loope
mov
clc
popf
aad
loope
jbe
fucompp
into
out
jecxz
pop
cld
cli
js
push
movsb
mov
mov
bound
sbb
jmp
test
test
stc
push
adcb
int
js
out
je
inc
cmp
imul
fdivl
imul
sarl
leave
fiadds
push
shr
je
sbb
out
mov
xor
or
daa
imul
mov
aam
push
inc
out
jle
popa
mov
call
jmp
push
fcoml
add
sub
mov
fsub
loope
add
decb
leave
cld
jns
mov
daa
jb
dec
adc
test
dec
lock
loope
iret
push
rolb
sub
inc
dec
repz
cmp
ret
ret
push
mov
or
jge
vdivps
ja
popf
xchg
pop
sbb
loopne
subb
xchg
and
or
xchg
or
ret
xchg
xlat
jge
nop
mov
repnz
mov
out
add
sahf
cmp
push
movntps
movsb
and
mov
mov
call
mov
mov
dec
sub
ror
pop
jecxz
ficoml
mov
cld
stc
jae
adc
sahf
jl
out
pop
jecxz
xchg
add
or
mov
call
into
popf
jge
cmpsb
movsb
jl
idivb
jae
in
rorb
mov
test
mov
inc
add
popa
pop
xor
or
dec
adc
mov
mov
int
test
out
dec
aad
mov
out
mov
hlt
imul
js
rcrl
sbb
jge
cmp
and
movsb
mov
popa
mov
xorb
mov
in
push
pop
mov
lea
das
outsb
jp
sub
iret
push
pop
dec
xchg
fsubr
out
pop
jb
cld
push
fsub
pop
incb
shrb
adc
test
mov
push
mov
or
push
shl
fsubrl
pop
std
adc
sub
mov
fwait
test
mov
enter
enter
dec
xor
mov
pushf
inc
cmp
loopne
lods
lods
cld
mov
or
js
repnz
in
and
lahf
loop
divb
neg
or
test
cmp
push
mov
cltd
loope
fldt
jo
hlt
mov
cmp
lret
pop
mov
insb
dec
sub
sub
pusha
push
inc
pop
adc
imul
mov
popl
and
sub
jb
cld
js
adc
xchg
repnz
pop
cmp
mov
insl
and
fsubl
and
insl
xchg
popf
cmp
jne
mov
fadd
rcll
out
xchg
sahf
and
fcos
or
inc
rcl
cld
lea
mov
test
rorb
xor
int3
push
mov
pushf
xor
push
cmpsb
enter
outsb
sub
mov
inc
mov
test
stos
ret
dec
loope
aam
mov
in
sub
mov
xchg
jb
mov
rcl
and
cld
es
pop
jne
mov
pop
pop
add
mov
fs
and
pop
dec
das
rolb
dec
jno
pop
ret
and
fstpl
xchg
and
aas
ljmp
adc
push
std
mov
cmpsb
fsub
fisttps
sub
dec
lret
dec
jno
outsl
aam
mov
mov
jno
aad
lods
movsb
and
inc
loope
imul
inc
inc
or
repz
lret
inc
fmuls
into
xchg
push
les
cmp
sub
enter
pop
iret
movsb
std
jecxz
adc
jo
and
and
cmp
outsl
dec
or
imul
cmp
ja
aas
sub
sub
mov
int
xor
in
mov
loope
cli
aas
dec
cld
jmp
mov
cmp
cld
and
cmp
out
outsb
pop
bnd
cltd
xor
fsts
in
repnz
js
cmp
hlt
xchg
daa
scas
adcl
dec
cld
sub
xor
sbb
jl
aam
xorb
jl
nop
mov
icebp
mov
pop
or
cmp
repz
scas
sub
test
addb
adc
test
fsubr
test
out
xlat
sub
scas
mov
movb
push
mov
add
iret
sbb
jnp
in
out
jb
call
push
imull
loope
adc
mov
cltd
mov
enter
sub
mov
insb
addr16
pop
mov
lea
stos
dec
ss
mov
jmp
add
dec
sub
mov
cmp
test
imul
mov
sbb
roll
and
mov
mov
push
push
push
or
call
out
jb
inc
cmc
div
mov
push
jmp
inc
xor
das
xor
push
rcr
mov
sub
fdivs
adc
pop
int
pop
inc
test
fistpll
jge
dec
and
dec
out
cld
mov
pop
mov
cmp
fildll
std
dec
push
jno
add
loope
jbe
sar
mov
cld
mov
adc
fcoml
andb
loope
in
movsb
mov
into
jecxz
push
das
xor
and
jns
lods
fwait
mov
dec
sub
fstpt
sub
push
adc
xchg
jne
xchg
daa
push
test
insb
pusha
xorb
icebp
inc
mov
push
pop
cmp
test
outsl
ja
fdivl
repz
imul
enter
jl
insl
jbe
ja
jb
dec
test
adc
sahf
lahf
loope
and
inc
les
aas
jns
push
enter
test
push
mov
mov
add
cld
lds
or
pop
in
inc
add
test
cltd
ss
shlb
inc
das
scas
shlb
or
out
add
test
ljmp
push
je
mov
sub
dec
movsb
sub
test
test
jmp
nop
das
xor
mov
fmul
add
mov
jge
ljmp
mov
in
test
into
std
test
pop
ret
stc
adc
int
xchg
pop
lods
les
and
xorl
out
cmp
sysret
dec
fadds
lds
fcmovu
dec
or
and
and
in
mov
lds
inc
rcll
ret
mov
mov
push
icebp
cwtl
xchg
lcall
adc
cmp
jnp
mov
pop
out
jbe
jae
sub
dec
sahf
jnp
sub
aad
inc
ja
xchg
xorl
xlat
mov
pop
fisttpll
test
outsb
loope
mov
sub
or
fucomp
inc
popf
adc
std
test
fcompl
nop
xchg
and
ret
sub
movsb
fnstsw
decb
mov
stc
aam
xchg
out
cmp
and
xchg
jmp
dec
or
shll
leave
fcoml
push
xchg
add
mov
xchg
inc
mov
insb
or
jmp
hlt
int3
imul
jne
rcr
scas
cmp
jo
ud1
dec
mov
sub
push
fmul
in
ficompl
call
popf
inc
mov
jmp
xchg
mov
into
mov
repz
rorb
xor
lock
dec
push
pop
in
add
cwtl
inc
fidivrl
jmp
cld
movsl
into
ljmp
mov
les
lahf
mov
aas
popa
ret
jle
mov
in
and
cld
mov
fisttpl
mov
icebp
pop
jb
fidivrs
and
and
lret
inc
lcall
adc
aaa
repz
dec
fisttps
cmp
mov
xor
cmpl
xchg
dec
daa
push
sub
and
ja
inc
cmp
enter
fcoml
lret
and
fidivrs
imul
xchg
cmp
scas
mov
loop
and
mov
enter
ret
ret
in
pop
cld
xchg
xor
push
movsb
test
add
and
xchg
std
aas
xorb
mov
loopne
dec
and
cmp
stos
sbb
sysret
sbb
sbb
adc
testl
nop
fnstenv
aam
cld
dec
cmovo
mov
and
sub
fwait
imul
pop
add
mov
int
cmc
enter
mov
inc
mov
or
insb
xchg
xchg
dec
fadds
inc
and
adc
fnstsw
sub
lods
and
popl
ja
mov
cmp
xlat
ret
pop
in
in
enter
mov
adc
mov
pushf
outsb
test
mov
mov
dec
lahf
scas
rcl
mov
cmpsb
sbb
pop
jp
fsubp
cs
lock
jbe
inc
loop
mov
add
xchg
mov
adc
iret
jbe
cs
jecxz
sub
ljmp
sbb
jp
cmp
mov
jae
push
jle
cltd
cmp
aam
das
insl
xchg
sub
sbb
inc
add
loopne
nop
mov
bound
inc
or
icebp
rcrl
sub
cmpsl
ljmp
adc
sub
orl
cmp
fdivr
ljmp
vmovdqu
fsubl
stc
mov
pop
jp
push
sbb
popf
rclb
mov
les
push
repz
aam
sbb
sahf
dec
sub
test
mov
fidivs
push
faddp
sub
jb
or
push
mov
jbe
aam
xor
push
and
push
xchg
in
dec
jo
pop
cld
rol
and
dec
dec
jge
outsl
cli
adc
movsl
jg
sbb
sarl
mov
outsb
int
test
xchg
in
cmp
xchg
shrb
lahf
iret
pusha
fisttpl
and
pop
pushf
nop
adc
sub
out
loope
dec
arpl
xchg
cmp
lds
addr16
jg
cld
ljmp
loope
mov
sbb
cmp
xchg
add
mov
add
insl
int3
je
shufps
jb
mov
addr16
fiaddl
js
repz
movsb
ret
cmp
cld
in
out
push
xor
jbe
outsb
mov
pop
xchg
xchg
incl
dec
hlt
sbb
aas
les
sub
jge
movsb
xchg
xchg
push
sbb
push
mov
testb
cmpsb
es
sub
push
mov
lock
nop
mov
dec
les
cmc
jno
loope
into
mov
dec
jmp
mov
mov
lcall
daa
bound
leave
pop
repz
cli
fstps
nop
dec
jp
faddl
and
mov
imul
popf
jns
cmp
aad
lock
xlat
jg
and
dec
sub
bound
jl
jmp
mov
adc
pushf
outsl
mov
jne
aad
cs
push
imul
cwtl
arpl
test
stc
and
dec
sbb
push
jno
xchg
mov
loopne
aaa
jns
xor
push
mov
adc
push
jecxz
inc
aaa
bound
push
mov
addl
hlt
adc
int3
jg
pop
jge
lret
sub
mov
jmp
sub
pop
test
daa
mov
xchg
add
cli
mov
dec
inc
mov
cmp
mov
ljmp
sahf
stc
ss
ret
loope
in
ret
pushf
mov
stos
mov
call
cmp
adc
repnz
pop
fsubl
add
mov
loop
bound
fsubrl
add
in
fsubl
mov
stos
xlat
pop
and
and
ret
push
or
decl
int3
jmp
add
mov
or
push
fnstcw
test
pushf
hlt
test
popf
push
loopne
mov
jp
movsb
fstl
mov
fldln2
dec
fiaddl
shl
cmpsb
cmp
jbe
notl
cs
push
in
into
push
sub
push
inc
test
push
xor
call
ret
sbb
shlb
testb
insb
movsb
xchg
faddl
movsl
mov
push
xor
dec
stos
dec
cld
hlt
imul
dec
xchg
add
mov
pop
cmc
lea
push
lcall
or
loop
sub
mov
decl
dec
ds
lcall
loope
mull
inc
sbbb
xchg
rorb
mov
jg
fwait
jg
push
sbb
pop
adc
pop
xchg
out
popf
enter
adc
pop
imul
ret
lea
jecxz
imul
jl
sbb
mov
test
push
add
adc
rorb
mov
cltd
push
mov
dec
adc
mov
es
mov
mov
xor
rorl
push
int3
pop
test
push
sub
add
mov
push
and
sub
decl
mov
lcall
bound
mov
mov
sbb
data16
mov
or
int
mov
outsb
cli
fmull
jno
xchg
xor
popf
fldenv
idivl
fsubl
push
mov
clc
push
popf
xchg
adc
in
xchg
mov
stos
aas
sub
mov
cld
int
iret
mov
andb
xor
xchg
lahf
into
aam
loopne
adc
lcall
dec
fistpll
popa
pushf
mov
test
push
fdivrl
loope
dec
jge
mov
test
inc
loope
test
cwtl
mov
mov
mov
clc
fisubl
push
dec
jmp
mov
divl
test
imul
lahf
mov
mov
lret
ljmp
shll
stos
jl
mov
fmull
ret
aas
sub
cpuid
or
and
push
aaa
daa
negl
in
jle
lock
inc
shll
sub
mov
mov
js,pt
mov
imul
ljmp
test
xchg
js
cs
cwtl
jnp
in
ljmp
shlb
shrl
mov
sbb
rcrl
nop
scas
in
ret
mov
sub
jo
test
mov
rorl
mov
repnz
cmp
filds
xchg
mov
push
add
mov
pop
out
dec
jns
inc
lods
jle
cmp
push
mov
and
add
push
scas
loopne
push
fsubrl
insb
dec
out
sub
push
out
test
in
ss
sti
jbe
adc
cld
scas
cmp
movb
test
jb
cld
sti
jmp
sub
and
bound
adc
out
push
decb
xchg
nop
push
pop
arpl
inc
rcrb
pop
clc
xchg
lods
lahf
lods
dec
or
adcl
sbb
das
xchg
sub
mov
mov
lcall
fsts
repz
mov
adc
ds
mov
dec
movsb
test
pop
mov
push
jl
inc
xchg
xchg
ja
fucomi
jmp
ret
out
out
call
sbb
lret
and
or
mov
dec
fdiv
jae
cld
cmp
jge
adc
adc
jl
dec
sbb
push
xchg
movsb
mov
in
popa
imul
cmpsl
adc
movsb
push
mov
daa
adc
mov
movsl
lock
cwtl
adc
test
je
leave
outsl
mov
dec
pop
inc
dec
jbe
in
fisubs
scas
dec
dec
push
rcrl
loopne
sbb
adc
int3
adc
jnp
sub
loopne
and
push
fdivrp
dec
cwtl
loope
sbb
xchg
js
sub
pusha
inc
mov
dec
ja
shll
xchg
les
std
adc
int3
add
ja
lcall
aaa
call
pop
push
fs
pop
bound
in
mov
xchg
sub
fldenv
mov
pusha
or
lods
bound
inc
xchg
cmp
or
out
lcall
dec
std
cmp
dec
sarb
pop
sub
xor
sbb
sub
pop
cmp
call
repnz
push
xor
pop
ss
sub
or
push
mov
pop
cwtl
ljmp
testl
jno
inc
pop
aam
gs
jmp
jg
adc
dec
push
lahf
cmp
sbb
pop
loope
mov
mov
shlb
cmp
movsb
mov
sarl
cmp
inc
movsb
add
jg
sahf
and
mov
pop
pop
jmp
ficoml
fwait
das
aam
jno
inc
outsb
pop
insl
inc
adc
pop
psubw
nop
jle
lods
mov
sti
and
cld
pusha
ja
cmpsl
in
jns
test
mov
test
lods
xchg
adc
mov
dec
int3
mov
lea
cmpsl
ljmp
popf
fsubs
aad
or
popa
test
pop
cmp
fstp
mov
or
and
sbb
dec
mov
fldenv
fsubl
cltd
cld
or
or
xor
stos
cltd
aas
lods
enter
pop
ret
mov
cmp
rcr
and
pop
in
pop
shrl
cmp
aam
push
dec
in
add
int
mov
lret
inc
js
wbinvd
mov
inc
loopne
xchg
insl
jo
and
cmpsl
cs
sub
mov
jle
add
icebp
or
inc
sarb
pusha
dec
shrl
xchg
rcrb
dec
stos
pop
dec
cld
xlat
dec
sbb
or
data16
mov
shlb
cmp
jbe
mov
insl
cmp
cmpsb
adc
test
arpl
pop
lea
push
mov
or
in
fadd
add
std
push
sbb
lea
iret
mov
add
cmp
aam
xchg
push
mov
dec
or
pop
daa
addl
xor
pop
add
cld
adc
lods
addl
rcrb
insb
mov
test
dec
mov
inc
aaa
scas
fcompl
dec
or
loope
mov
out
les
into
mov
pop
pushf
rolb
cmp
out
push
pop
sub
shrl
pusha
pop
fnstenv
lock
adc
pop
shr
fsubl
pinsrw
lock
jnp
xorl
or
inc
jp
mov
cmp
lret
dec
jg
mov
lahf
push
into
cltd
out
inc
or
aas
loop
out
pop
jbe
pop
clc
ret
add
or
jp
add
jmp
mov
push
push
sahf
popa
pop
mov
shll
mov
std
dec
jecxz
loop
pop
fcmovu
divl
lods
mov
dec
or
lret
fsubl
pop
mov
jmp
ret
rorb
or
cld
stc
shlb
mov
daa
out
add
fcmovnu
and
sbb
mov
mov
sti
clc
addb
or
ds
in
dec
xchg
rolb
push
xorb
aaa
inc
sbb
mov
lea
out
pop
enter
les
push
adc
lahf
cmp
sub
lea
les
and
xchg
adc
test
mov
in
adc
cmpsl
inc
mov
xchg
xchg
hlt
lahf
cld
test
cltd
lock
xchg
jns
lods
pusha
xor
addr16
sub
loopne
shl
out
pop
cli
jle
cmp
pop
movsl
dec
ljmp
inc
ds
add
les
cld
cmp
ja
add
mov
das
push
jo
cld
push
stos
inc
ljmp
mov
push
paddb
int3
jg
and
add
cld
mov
xchg
and
mov
and
sub
int
inc
pop
pushf
pop
lock
push
xchg
ljmp
xchg
imul
out
scas
mov
ret
jecxz
rclb
cmpsb
sub
lds
ficoml
lea
inc
and
sti
in
arpl
and
jne
cmp
and
leave
int3
sarl
add
xchg
cmpsb
mov
movsb
dec
pop
jmp
das
scas
mov
adc
int3
mov
xor
mov
sbb
pop
aaa
and
cmp
shlb
and
jae
mov
mov
enter
inc
adc
loope
push
sub
test
add
out
mov
push
arpl
or
fsubp
ret
sub
shlb
xchg
or
ss
push
adc
aaa
xor
outsb
pop
js
out
movsb
push
cld
into
sub
fists
stc
lods
jne
push
dec
or
sbb
loop
or
mov
xor
call
mov
cmpsl
mov
cmpsb
sub
push
pop
psubw
dec
inc
cwtl
mov
in
popa
out
jnp
fdivrl
add
inc
popfw
in
test
mov
jno
sub
rcr
push
pop
inc
rclb
dec
xchg
vunpckhps
inc
in
out
fcmovb
enter
or
mov
mov
movsb
sbb
mov
jge
ret
inc
dec
pop
jmp
xor
xchg
sti
mov
cmpsl
dec
sub
sahf
movsb
cmp
jle
enter
add
fwait
scas
dec
cmp
sahf
ret
push
sbb
cmp
mov
dec
mov
cltd
or
jo
sub
cwtl
ljmp
push
add
jnp
es
pop
mov
daa
or
xchg
les
sub
enter
rcrb
stos
sbb
mov
mov
sbb
mov
push
jge
pop
add
adc
out
cmp
mov
cmp
gs
stos
add
iret
out
cmp
adc
mov
in
cmp
jecxz
lods
ja
test
dec
mov
push
sub
icebp
stos
arpl
and
movsl
aam
mov
mov
test
xchg
movsl
adcb
cld
mov
mov
pusha
jnp
add
dec
dec
int
fisttpl
and
mov
aaa
ljmp
ror
dec
in
cmp
dec
lock
cmp
je
fsubl
pop
mov
pop
movl
xchg
jmp
arpl
cmp
jne
xchg
push
adc
cld
dec
fwait
cmpsl
mov
das
mov
out
test
inc
mov
fcoml
pop
in
daa
and
test
nop
jle
mov
std
dec
test
push
ficomps
lods
mov
mov
or
fsubrl
mov
negl
and
pop
imul
aam
mov
pop
cs
xor
mov
pop
mov
pop
cmpsb
sub
xchg
stos
aas
lret
cld
lret
mov
popf
mov
das
clc
loop
mov
jle
jl
daa
decb
pop
cmc
aad
loop
xchg
iret
dec
pusha
cmp
xchg
pop
in
sub
pop
das
add
mov
leave
ret
mov
stos
push
and
incb
pop
mov
loopne
mov
dec
aad
shl
aam
cmpsl
and
lods
cmp
pop
icebp
mov
or
leave
pop
xor
cmpsb
clc
pop
loop
xchg
pop
movl
test
daa
fdivr
jle
push
dec
mov
push
sbb
mov
mov
loope
xor
loopne
push
sub
imul
notb
out
xchg
out
fistpll
movsb
and
movsl
adc
movsb
loope
push
fwait
add
dec
mov
xchg
mov
jg
test
jle
pinsrw
dec
popl
dec
pop
test
mov
daa
cmp
out
fisubl
lea
decb
ljmp
and
dec
dec
insb
bound
mov
or
push
call
leave
push
not
in
inc
cs
outsb
pop
rcrl
rorl
imul
cmp
enter
mov
mov
pop
mov
in
cltd
loop
addl
inc
lahf
int3
cli
xor
lock
movsl
sbb
rcr
in
mov
cmp
cmpsb
jecxz
inc
hlt
shll
push
mov
daa
out
sbb
cmp
add
add
and
jne
je
sti
or
das
insl
imul
xor
mov
pop
scas
xor
pop
cld
pop
inc
out
mov
fcompl
les
movsb
aad
xor
pop
outsb
and
dec
xor
mov
push
ljmp
jo
shrl
cmc
adc
movsb
jp
cmpsl
pop
nop
or
mov
sub
call
pop
ds
push
sbb
subb
stc
loop
cld
lcall
add
xchg
fdivr
fcoml
add
jns
cmp
lcall
adc
call
pop
and
sbbb
int3
sbb
mov
stos
addl
add
out
shrb
add
fs
pop
mov
test
aas
cld
cmp
mov
sbb
mov
mov
mov
in
fcoml
push
xchg
adcl
xchg
lret
dec
sbb
loopne
rolb
pusha
enter
es
fisubs
add
jmp
mov
xchg
push
xor
mov
mov
jno
stc
fstpt
movsb
inc
dec
and
loop
addl
stos
xchg
das
cli
sub
mov
aas
out
jg
jo
repnz
scas
daa
pushl
push
daa
stos
ret
imul
add
sub
fnop
scas
fisttpll
lock
call
out
add
ret
mov
mov
std
xchg
dec
fimuls
into
and
mov
les
add
cld
andl
sub
cmp
iret
mov
cs
dec
js
mov
int3
lock
pop
adc
fsubl
test
cwtl
aas
movsb
cld
lea
xchg
pop
add
je
or
fmulp
dec
insb
sub
or
lods
scas
jbe
fdivrl
jo
push
cld
aaa
jle
sbb
sub
rorl
in
ret
push
mov
inc
sub
jbe
and
dec
mov
loope
adc
xchg
fisttpl
push
jg
ss
add
ret
push
xchg
xlat
sub
mov
adc
bound
xor
cmp
iret
pop
mov
loope
aaa
sub
inc
faddl
push
jnp
mov
mov
cmpsb
test
jle
dec
les
lret
das
jmp
push
xchg
push
dec
out
add
xchg
add
pop
mov
adc
xor
sbb
hlt
sar
icebp
ja
jmp
aam
xor
fldt
push
shlb
cltd
scas
addr16
inc
cli
adc
and
jge
sar
movsl
jns
cmp
or
mov
pop
std
inc
mov
push
jmp
rcrb
add
imul
je
dec
cmp
adc
push
adc
cmp
jb
mov
jge
mov
and
cmp
in
jl
mov
maxss
xor
leave
cmpsb
push
jbe
pushf
lock
mov
inc
insb
or
xor
popf
mov
xchg
push
or
jecxz
mov
cmp
xchg
fwait
bound
push
sti
rorl
mov
dec
inc
inc
cld
sub
pop
pushf
stos
adc
orb
and
rolb
jg
mov
aam
fisubrl
int
push
sub
push
out
adc
adc
aaa
pusha
iret
push
mov
shl
jb
cltd
mov
sbb
mov
dec
sar
mov
cmpsb
or
lcall
pop
pmaxsw
repnz
cld
icebp
cmpl
mov
cld
inc
mov
test
xor
push
xor
xchg
daa
adc
cmp
jg
jle
dec
je
and
fildl
jo
mov
ror
xor
mov
cld
mov
push
js
and
addr16
jl
stos
xchg
mov
mov
inc
or
fisubs
test
jbe
scas
mov
test
xlat
je
xchg
jl
fisubs
je
or
insb
dec
ror
decb
lret
loop
and
fimull
jmp
mov
fucomi
or
roll
repnz
icebp
test
dec
sahf
test
cmpsl
mov
jnp
push
rcrl
sbb
cmp
xchg
pop
icebp
loop
faddl
cld
lods
and
test
clc
out
insb
push
idivb
jecxz
adc
xor
ljmp
and
pushl
ficompl
scas
cmpsb
sub
and
movsl
jb
jge
lods
cmovl
xchg
insl
dec
mov
push
or
cld
mov
cmp
jne
add
inc
push
cmp
stc
jecxz
nop
xor
fiadds
mov
pop
es
and
leave
add
xchg
mov
icebp
ds
adc
sub
sbb
popa
jecxz
test
dec
int
imul
sub
mov
inc
into
pushf
mov
fs
add
sbb
movsb
fsubl
jmp
push
ja
and
cld
dec
jle
fistl
inc
mov
jecxz
cmp
mov
pop
dec
and
jl
fxch
movsb
push
or
outsl
dec
adcb
clc
or
xchg
push
add
stc
test
cld
dec
js
fildl
adc
ret
stos
jl
incb
ja
dec
and
test
dec
cmc
jge
enter
pop
in
fstpl
push
js
mov
jne
scas
sub
mov
xlat
bound
arpl
push
lea
test
ja
mov
sarl
inc
push
mov
ret
mov
jge
iret
push
xchg
cld
lea
xchg
cmc
pop
out
pusha
jge
mov
mov
sbb
sub
popa
pop
cmpsb
aas
ja
cltd
lahf
push
pushf
frstor
js
pop
xor
pop
sti
jle
jo
xor
sbb
imul
sub
or
dec
ss
inc
mov
sub
loope
or
cld
aaa
imul
stc
ret
cmp
mov
jmp
imul
fwait
sti
lret
outsb
in
mov
lcall
mov
fwait
das
lods
call
cld
and
lea
lea
sbb
xchg
pop
mov
mov
imul
jmp
bound
mov
popf
sub
jb
jno
dec
xchg
imul
mov
mov
and
mov
pop
int3
adc
cmp
aam
and
mov
not
rcll
mov
adc
push
enter
add
adc
cld
inc
push
into
sar
nop
fcmove
pop
fmull
imul
cli
divl
inc
insb
data16
jmp
cli
fcompl
movsl
pop
xchg
mov
sub
loope
dec
pop
ret
loop
scas
out
dec
cld
into
fsubl
ljmp
shrl
fwait
mov
imul
push
mov
rcl
lds
or
mov
aas
mov
stc
push
xchg
mov
mov
fmul
roll
rclb
iret
loope
add
or
movsb
add
pusha
mov
imul
lea
test
sbb
cltd
push
ljmp
mov
js
sahf
xlat
pop
mov
pop
mov
mov
jl
and
jmp
ljmp
lahf
stc
sbb
xor
jle
and
dec
jnp
mov
push
adc
mov
push
cmovnp
push
mov
xor
dec
cld
jmp
jl
outsl
mov
xlat
cs
shrb
daa
cld
lock
call
leave
jl
decl
test
popa
in
pop
movsb
push
fcoms
push
bound
scas
inc
ljmp
popa
lret
push
mov
jl
stc
jbe
add
xchg
or
sarl
aam
daa
sbb
mov
and
gs
icebp
mov
xchg
scas
pop
loope
in
inc
insb
loop,pn
jge
jb
mov
add
adc
fmulp
orl
xor
mov
push
jne
call
or
mov
scas
les
pop
add
and
cmp
sbb
dec
inc
roll
clc
cli
sub
shl
push
sbb
mov
cmp
mov
push
bound
mov
test
adc
insb
lret
je
loopne
cmp
out
lret
scas
jnp
jecxz
mov
cmp
mov
mov
push
ja
sub
cltd
sahf
xchg
jle
das
js
movsb
xchg
inc
sub
or
lahf
aad
sbb
jae
ljmp
in
mov
pop
mov
mov
std
ja
jbe
and
jbe
or
pusha
es
pop
adc
rolb
hlt
xchg
repz
sbb
and
sti
insb
hlt
inc
aam
jp
into
ljmp
jle
js
lret
std
ret
cltd
cwtl
bnd
loop
jmp
mov
lahf
pop
and
ret
xchg
pop
ret
mov
xchg
push
loop
enter
jmp
dec
xor
cmp
push
clc
mov
loop
jle
cmpsb
dec
dec
and
leave
push
jge
clc
add
in
neg
inc
sub
xor
scas
push
xor
sti
and
mov
dec
and
sub
stos
stos
ljmp
sbb
inc
lds
pop
int
out
adc
fnstenv
das
mov
add
shlb
mov
pop
dec
push
add
jl
xor
pop
mov
mov
dec
repnz
pop
mov
push
scas
adc
movsb
cmpsl
call
adc
xlat
and
push
xchg
ret
scas
sbb
mov
sbb
jnp
add
ljmpw
shrb
repnz
mov
popf
inc
push
inc
aaa
repz
inc
pop
and
lahf
inc
sahf
cmp
fcoms
je
inc
mull
jmp
fstpl
ds
movsb
cmp
pop
jge
xchg
pop
xchg
dec
mov
pop
jmp
mov
insl
test
fmull
mov
out
call
decl
test
inc
leave
or
andl
repnz
mov
jo
movsb
xchg
xor
xor
dec
shll
dec
fnstcw
hlt
andl
sub
cmc
mov
adc
add
dec
ficomps
out
fwait
xchg
jecxz
push
pop
pop
pop
adc
out
pop
stos
mov
sbb
mov
xor
mov
rcr
or
out
loopne
mov
xor
pop
adc
es
orl
dec
das
leave
cmpsl
les
leave
out
stc
and
mov
je
mov
xorb
adc
or
ret
dec
ja
lcall
xchg
and
or
dec
push
mov
bound
mov
inc
test
aaa
push
pushl
push
insb
movsb
pop
and
fidivl
and
arpl
test
xlat
cmpsb
push
push
jmp
aam
jmp
gs
push
mov
dec
jo
or
add
fdivrs
ljmp
jmp
mov
popf
xchg
mov
fisubrs
push
enter
inc
gs
xor
pop
imul
jno
pop
ret
inc
fisttps
mov
mov
enter
out
push
mov
fcompl
cmp
in
test
or
je
mov
mov
test
insb
lret
addl
hlt
xor
sbb
in
sub
ret
sbb
dec
xor
les
mov
js
shlb
or
rcr
movsb
xor
ret
sysenter
nop
fdivrl
aaa
mov
mov
or
sub
push
mov
loope
or
notb
push
test
insb
nop
inc
insb
cmc
jbe
xchg
test
add
xchg
das
and
jbe
pushw
aas
decb
sub
and
cs
xor
jl
push
ficoml
xchg
push
fdivrp
lea
test
adc
and
mov
popf
sbb
and
icebp
add
sahf
push
dec
jmp
pop
cld
jns
sbb
sbb
cmp
push
adc
out
cltd
cmpl
or
fildll
lds
mov
push
mov
lods
jns
jne
mov
add
repz
and
rorb
mov
xchg
inc
inc
sub
fsubl
pop
mov
in
mov
cwtl
sbb
jl
enter
push
pop
xor
and
and
push
mov
dec
push
pop
ss
push
in
adc
push
into
push
adc
daa
xor
int3
cld
xor
mov
icebp
outsb
xchg
cwtl
push
mov
mov
inc
cld
movsb
jecxz
outsb
testb
adc
fisubl
dec
sub
bnd
pop
ja
cld
jmp
mov
pop
adc
das
jno
imul
mov
repz
js
lret
and
mov
or
dec
int
into
jg
mov
lret
pop
sbb
test
ss
rorl
xchg
ss
ficoml
lods
add
scas
and
stos
inc
in
test
lea
pop
jl
push
int
fld
test
mov
shll
mov
pop
mov
aad
push
outsb
inc
fisubrl
cmp
cld
sbb
mov
or
pop
or
pushf
std
shl
addl
enter
loopne
sbb
xor
xlat
lret
jle
dec
hlt
idiv
sub
enter
shl
test
imulb
scas
adc
test
jecxz
test
pop
dec
add
ljmp
fs
sti
lcall
dec
clc
push
es
scas
ljmp
add
cmpsl
test
xor
pop
pop
je
ds
in
icebp
enter
aam
idivl
test
mov
cmp
movsl
mov
fiadds
mov
dec
mov
cmpsb
in
cmp
pusha
insb
cmp
das
in
inc
lret
mov
sbb
iret
mov
dec
cmp
add
sarb
fcoml
jge
mov
arpl
mov
jecxz
cmp
inc
mov
pop
pop
xor
daa
lea
pop
mov
mov
push
sub
or
out
faddl
and
inc
mov
mov
aad
dec
mov
imul
xchg
testb
mov
ret
cmpb
cmpsl
cmp
jb
adc
insl
dec
xchg
imul
nop
ret
jns
and
pop
lret
add
into
xor
shll
fcoml
pop
movsl
push
jb
ljmp
mov
pop
inc
mov
pop
lea
pushf
ja
xchg
mov
mov
hlt
add
loope
push
js
cmc
or
lahf
gs
rcl
inc
jg
dec
fwait
cmc
aam
lods
loopne
sub
inc
and
mov
outsb
ljmp
cld
call
cmc
push
mov
lahf
sbb
ret
add
int
inc
aad
jb
add
popa
pop
je
push
mov
movb
jle
movsb
pop
mov
mov
dec
test
pop
dec
or
imul
cmc
notb
out
iret
insl
das
cmp
push
adc
or
mov
roll
fdivrl
xchg
insb
mov
or
jbe
cmp
into
pusha
test
lea
idiv
dec
mov
pop
dec
xchg
andl
sub
imul
dec
test
ljmp
xor
ficompl
jg
jmp
rcrl
aam
mov
movsl
test
into
cmp
in
inc
adc
adc
std
jecxz
adc
ror
imul
lret
rol
pop
pop
or
xor
mov
out
or
icebp
ljmp
test
push
fimull
mov
or
movsl
mov
sub
xchg
addl
rcrl
int
adc
incl
pop
out
jle
adc
jno
pop
out
cmpsb
cmp
test
data16
pop
loopne
mov
out
sbb
sub
jle
jns
jecxz
adc
jecxz
dec
adc
pusha
lret
int3
aad
mov
mov
xchg
push
and
imul
push
stos
loope
pop
sub
mov
ds
dec
lcall
addb
xor
dec
out
mov
cli
adc
mov
pop
push
je
cmp
adc
sarb
mov
push
pop
cwtl
sub
sbb
jno
fcom
dec
icebp
stc
dec
cmp
xchg
rorb
clc
xor
stos
jnp
mov
aas
jge
mov
jl
idivb
stos
mov
and
negl
stos
ljmp
addr16
repz
hlt
sbb
sbb
inc
pop
cmp
push
test
adcl
mov
mov
lods
add
mov
icebp
lcall
fsubrl
les
icebp
pop
jmp
jb
hlt
popa
les
fmuls
aad
cs
decl
loop,pt
out
pop
add
push
nop
mov
mov
sub
fisttpll
and
sbbl
dec
lds
xor
sbb
insw
jno
movsb
inc
xor
shr
je
fdivl
dec
xchg
push
cli
stos
add
ret
add
jge
ljmp
push
xchg
data16
mov
and
push
dec
out
mov
div
int
pushf
pusha
add
xlat
push
mov
push
pop
dec
xchg
xor
or
les
cmp
incb
adcl
jge
les
pop
lret
jmp
mov
dec
push
jl
inc
inc
mov
push
int
jmp
add
rorb
push
lock
scas
sub
pop
dec
push
popf
adc
add
dec
cmc
mov
ds
aam
pop
push
cltd
jnp
ljmp
pop
jg
stos
push
adcl
or
fiadds
push
bound
scas
mov
xchg
jo
mov
dec
cld
adc
jb
or
int
jmp
and
and
inc
gs
cld
sub
jecxz
ret
pop
pop
add
or
aas
popl
cs
jle
cmc
ret
xor
xchg
push
scas
cmova
je
das
jmp
mov
mov
xchg
je
hlt
dec
ljmp
mov
sub
test
sub
dec
pslld
dec
push
lds
add
push
and
jge
dec
sub
lret
stc
mov
scas
jo
shlb
xchg
or
cmpsl
or
mov
fucomi
jb
mov
cmp
movsb
out
mov
lret
adc
fstpl
js
imul
enter
and
cwtl
sbb
cmc
pop
hlt
mov
mov
mov
dec
mov
lcall
jecxz
dec
fwait
repnz
enter
sahf
pop
xchg
pop
add
pop
push
add
imul
cld
test
push
fdivrl
rol
mov
xor
pushf
es
jecxz
xchg
fwait
imull
cld
js
cmp
mov
shr
pop
mov
fnstsw
lea
pop
dec
pop
insb
or
xor
les
sub
pop
movsl
adc
jae
or
inc
imul
outsl
sbb
dec
adc
filds
xchg
pop
shlb
repz
rcl
pop
push
xor
sar
dec
inc
mov
dec
jno
cmp
mov
es
mov
lret
pusha
push
pop
out
adc
out
push
pop
pop
sub
push
push
movsl
ljmp
xor
lea
movsb
adc
lcall
push
pop
pop
push
push
stc
and
shlb
addb
movsb
out
mov
dec
int
push
add
adc
repnz
fcoms
push
sahf
jge
addr16
das
icebp
cmp
push
dec
cld
cmp
scas
hlt
std
aam
addl
or
repnz
cmpsl
mov
xchg
fcmovu
insb
ja
gs
mull
andb
lods
jp
xchg
rcr
jb
jnp
adc
mov
mov
stos
inc
sub
testb
lahf
xchg
addr16
cli
cmp
pop
shl
fwait
jnp
push
sarl
ret
test
pop
xchg
aam
xor
sahf
int3
jmp
hlt
fsubl
mov
icebp
fcmove
pop
idivb
faddl
sub
pop
addr16
das
test
jecxz
mov
dec
hlt
aam
mov
aas
hlt
dec
xchg
dec
jmp
mov
jmp
les
push
mov
jge
inc
jle
and
pushf
jle
enter
arpl
int3
fldt
pop
jae
push
push
imul
inc
aam
inc
and
sbb
jb
imul
push
jecxz
jno
cmp
cmp
xchg
dec
jne
adc
push
xchg
out
bound
pop
add
xor
xchg
pop
das
sbb
sub
shrl
lcall
pop
add
mov
fisubl
and
dec
push
or
pop
xchg
dec
out
add
inc
mov
pop
jp
mov
xchg
es
adc
enter
inc
xor
dec
or
cmp
into
xorl
xchg
scas
out
push
je
jl
adc
idiv
bound
mov
add
dec
nop
fiaddl
test
lds
pop
lahf
out
addr16
cmp
loope
pop
repnz
nop
dec
inc
ror
mov
pop
repnz
inc
xor
mov
push
stc
xchg
in
pop
sbb
shlb
jecxz
std
dec
adc
mov
das
icebp
stc
cmp
ficompl
jno
leave
sub
pop
loope
mov
xchg
test
xchg
scas
pop
mov
imul
or
in
cmp
dec
and
inc
stos
movsl
lock
inc
adc
shrl
out
aam
cld
jo
cmpsb
pop
xchg
insb
mov
lea
mov
movsb
jne
shl
adc
add
jb
sub
insl
mov
mov
jns
xlat
dec
cmp
stc
mov
dec
cmp
testb
jbe
jmp
lret
pop
pop
or
mov
and
dec
lea
mov
loope
dec
pop
sti
imul
xchg
int
inc
sbb
fildll
add
adc
jmp
sarl
addr16
mov
mov
cld
sahf
adc
lods
int
mov
cmp
loope
mov
repz
push
or
bound
pop
std
cwtl
mov
push
loop
dec
cltd
push
mov
pop
cmp
inc
loope
cmp
mov
mov
and
pop
mov
bound
xor
insb
sbb
lret
or
adcb
stos
hlt
popa
add
mov
movsb
and
fs
movsb
cld
data16
out
in
lds
dec
jnp
ljmp
jo
jne
pop
js
je
sub
rcrb
pop
ss
jmp
xor
test
mov
pop
lret
push
mov
daa
push
adc
mov
mov
enter
mov
push
cmp
or
push
xor
dec
sbb
test
push
clc
loope
repnz
dec
fldt
ds
xchg
inc
pop
test
cmp
push
push
dec
pop
inc
xchg
and
xor
fiadds
xchg
mov
xor
loopne
in
inc
lods
sub
inc
lcall
movsb
adc
pushf
adc
in
cmp
and
fimuls
loope
scas
fdivrp
cmp
das
cmpsb
xor
dec
arpl
push
push
pop
sti
mov
push
les
xor
mov
inc
mull
insl
pop
or
data16
dec
lret
pop
mov
mov
push
mov
inc
jge
add
xchg
adc
jno
arpl
dec
lcall
cs
jbe
shrb
push
dec
jnp
jb
mov
pop
push
fxch
cld
in
push
sarb
xor
mov
jmp
jo
leave
jle
mov
mov
int
stc
pop
scas
adc
aaa
mov
push
push
dec
add
dec
dec
sahf
inc
subb
mov
daa
xchg
lret
mov
mov
scas
mov
mov
int
pop
jle
decl
xchg
fistpll
jp,pt
dec
stc
test
xlat
test
add
pop
xchg
ja
mov
insl
push
or
push
insb
mov
ja
sbb
sub
lcall
push
aaa
movsb
cld
pop
enter
sarl
loop
jl
jbe
movsb
imul
mulb
ljmp
jmp
loop
fcoml
lock
pushf
loope
fs
mov
inc
mov
xlat
pop
push
cmc
dec
dec
xchg
xlat
jge
scas
movsb
lods
test
jge
mov
rorl
jp
mov
lret
in
xlat
aaa
sub
test
xchg
jecxz
cmpsb
aaa
mov
jne
ret
addl
dec
in
pop
xor
jns
idivl
daa
out
out
mov
out
mov
fisttps
int3
addr16
ss
xchg
fsubl
pop
icebp
test
addl
ret
out
or
cld
lods
push
or
lods
popf
rorb
add
mov
lret
leave
test
jp
mov
into
and
mov
xchg
enter
inc
sarl
inc
or
test
enter
push
sbb
nop
cmp
cmp
dec
out
add
fimuls
in
icebp
mov
sbb
dec
sub
dec
mov
xchg
ljmp
cmp
push
or
or
in
lock
in
repz
nop
dec
mov
mov
cmp
inc
sbb
sbb
inc
mov
fcompl
or
push
stc
add
sub
cmp
adc
or
imul
inc
andb
inc
lds
mov
andb
push
xchg
and
or
xchg
jmp
xorl
les
jle
mov
adc
dec
push
pop
movsb
pop
cs
xchg
lcall
stos
jno
xchg
pop
mov
jge
into
stos
lods
std
jno
call
call
inc
push
dec
js
inc
roll
push
mov
or
push
and
xchg
loope
sub
arpl
aad
adc
push
push
cmp
ljmp
dec
adc
aas
enter
icebp
pop
or
xchg
dec
cwtl
ss
xchg
push
movsb
adc
jne
or
push
lcall
or
mov
mov
mul
jmp
mov
push
int
xchg
test
sub
insb
mov
pop
dec
cld
sub
lret
sub
push
dec
test
sbb
adc
pop
imul
movsb
xchg
jns
test
insb
sbb
daa
pop
stos
pushl
cltd
jge
movsb
ds
outsb
xchg
mov
das
loope
cmpb
gs
enter
rorl
xchg
cld
cmc
sbb
fidivs
jmp
mov
push
fimull
push
jbe
in
movsb
cmc
movsb
mov
or
mov
and
and
push
jg
cld
dec
adc
jge
outsl
pop
shll
push
andl
iret
icebp
xchg
adc
stos
mov
push
inc
push
jecxz
jp
test
cmp
jne
loop
dec
adc
test
jae
adc
ss
cltd
out
stos
mov
pop
xor
cmp
in
add
cltd
outsb
jge
sub
stos
enter
ret
add
bound
in
inc
mov
ljmp
ss
inc
fwait
xlat
int3
xor
testb
popa
dec
dec
xchg
movsl
stos
hlt
lods
pop
sbb
mov
test
push
or
stos
test
idivl
jb
cmpsb
icebp
adc
xchg
sar
mov
push
ds
lods
push
xor
inc
and
loope
adc
inc
int
push
fistpll
dec
inc
sbb
loope
repnz
popa
adc
push
test
roll
or
lea
lret
popa
and
bound
insl
loope
xchg
lret
enter
in
mov
xchg
jae
xchg
loopne
mov
pop
inc
into
cwtl
dec
movsb
and
mov
push
push
call
hlt
jle
or
cmp
movl
cld
xchg
push
aam
push
pop
cmp
xorb
xor
pop
dec
clc
sub
xchg
adc
js
xchg
pop
mov
ficoms
dec
out
push
jbe
inc
jl
lea
pop
movsb
shrl
cltd
push
test
in
push
fstl
pop
outsb
lea
in
sarb
clc
addr16
xchg
and
ret
test
cmc
pop
adc
daa
or
mov
lods
lret
cmp
mov
jmp
and
and
adc
push
cwtl
pop
int
and
pusha
sysexit
push
mov
mov
lea
xchg
fisubrs
ss
mov
pop
insl
je
shrb
inc
scas
mov
add
imull
mov
sub
jl
movb
test
in
call
or
inc
out
out
jb
jl
push
and
adc
dec
mov
in
ljmp
aas
dec
mov
push
leave
mov
loop
or
cmp
test
push
sbb
or
pusha
jecxz
cmpsl
loope
mov
sub
aas
jae
push
jle
icebp
ret
xor
xor
cld
or
cmp
xchg
jge
clc
mov
pop
dec
mov
and
lret
inc
dec
std
sahf
mov
fisubl
mov
aam
rcrb
inc
sti
push
mov
test
pop
mov
mov
int3
in
gs
xor
mov
scas
movsb
cld
dec
iret
insl
cmpsb
pushf
scas
mov
loop
mov
test
out
stos
cld
or
dec
cmp
push
orb
ja
ljmp
std
and
pop
mov
push
pop
push
ds
idiv
addl
mov
sbb
lock
cmpsb
test
jmp
das
fcoms
shl
cmpsb
mov
sub
pop
sub
sbb
or
push
in
pop
inc
sub
mov
adc
leave
call
pop
fldl
jno
and
stos
scas
cs
hlt
sub
movsb
movsb
push
les
fldenv
out
inc
jmp
enter
cmp
std
hlt
push
jle
xorb
mov
pop
nop
lea
inc
push
movsb
sub
loope
cld
add
or
or
mov
xlat
sub
xlat
and
pop
mov
fadd
cmpsb
push
xchg
ret
in
in
jbe
pop
cld
neg
hlt
stc
jnp
aas
ljmp
push
mov
lock
dec
aad
loopne
es
insb
out
aas
out
mov
pop
mov
mov
xchg
adc
lret
cld
mov
fsub
loop
xor
pop
roll
lea
scas
pop
pop
call
sub
push
imul
pop
add
pushf
sub
sub
pop
stos
pop
push
cmpl
sub
fdivrp
stos
add
imul
mov
orb
fnstenv
popf
jl
adc
neg
push
rcr
scas
enter
mov
jle
mov
shl
push
xchg
xchg
cmpsb
add
sub
outsl
pop
push
mov
shlb
sub
test
xor
jmp
je
sarb
ljmp
pop
out
mov
xor
sub
jg
loop
cmpl
dec
es
push
adc
das
mov
pop
orl
mov
fcoml
push
es
or
jge
cmpsl
or
into
fmul
add
lcall
push
inc
insb
mov
xor
cmp
xor
add
into
dec
int
mov
mov
cmp
jp
jmp
cmp
movsl
lret
iret
cld
mov
popl
stc
stos
add
icebp
mulb
pop
inc
and
cli
daa
ret
mov
push
push
adc
int3
or
flds
add
mov
push
and
repnz
sub
xor
xor
cmp
mov
mov
mov
pop
sub
icebp
sub
cmpsl
or
push
loope
push
pop
fcom
in
dec
jp
jb
jp
jl
ja
pop
add
adc
add
imul
lock
adc
add
inc
xor
lret
add
mov
roll
xchg
push
jnp
push
ret
sahf
add
push
jb
push
scas
mov
add
gs
mov
push
jmp
subb
jmp
mov
imul
xchg
mov
or
mov
sub
xchg
mov
insl
inc
mov
hlt
cwtl
loopne
sub
bound
jg
enter
aaa
movsb
pop
stos
xor
loope
or
aam
pop
sub
pop
repnz
mov
movsb
mov
xchg
clc
hlt
loope
adc
aam
mov
add
jo
mov
jae
ss
fnstsw
mov
stc
in
pop
mov
xor
notb
cmp
inc
sbb
dec
jno
lahf
xchg
ja
addr16
icebp
shll
push
outsb
arpl
cmpsb
test
lret
sbb
aas
dec
ret
aas
sarb
push
in
add
orb
inc
cmpsl
ljmp
pop
pop
sub
dec
mov
mov
mov
mov
push
imul
sbb
sti
mov
test
insl
push
sub
out
loop
or
fdivl
pop
out
dec
or
sti
sub
pop
loope
iret
and
lock
ret
sub
test
ret
inc
mov
arpl
add
push
dec
fs
pop
push
sub
int3
out
xor
jb
sub
lea
sub
cmp
js
ficoms
adc
xchg
imul
repnz
jne
std
jo
fmull
cmp
loop
or
aad
dec
jns
push
xchg
movsl
pop
and
adc
mov
mov
lea
shll
int3
and
fisttps
cwtl
cwtl
in
sub
lret
scas
test
sub
sub
dec
jp
xchg
pop
xor
or
std
movsb
shlb
sbb
push
hlt
stc
cmpsb
dec
add
addr16
pop
fmull
rolb
stos
cld
fisubrl
sub
mov
nop
mov
and
les
data16
jl
insl
outsl
ljmp
jno
decl
mov
clc
sbb
out
test
pop
enter
shlb
add
fimuls
in
jecxz
mov
mov
rcrl
sbb
mov
cmpsb
fcoml
sub
or
cli
daa
mov
ret
xchg
xlat
push
mov
mov
cmpb
cmp
in
sub
lea
sti
pop
or
ja
loopne
inc
repnz
pop
pop
pop
cld
jae
stc
ljmp
xchg
mov
push
mov
push
xor
fildll
das
inc
and
xchg
mov
into
loope
adc
push
insl
lods
jp
and
jne
adc
test
cmp
inc
dec
repnz
fimuls
cmpsl
aad
adc
cld
jge
or
and
mov
push
jns
rcl
mov
sbb
and
adc
add
push
int
clc
out
and
lock
es
inc
push
mov
sub
movsb
insb
ljmp
pop
jno
pop
cld
cli
lock
mov
mov
ljmp
dec
in
loope
mov
pop
jae
mov
lods
cwtl
popf
es
ss
cs
ljmp
inc
xchg
fisubrs
pop
sbb
mov
push
sub
add
adc
insb
pop
bound
outsl
sub
xor
mov
imul
jb
stos
movsl
movsl
cltd
add
mov
xchg
pop
add
mov
or
add
ja
xchg
push
cmp
dec
mov
mov
mov
dec
bound
dec
lods
inc
cld
push
iret
ja
int
mov
xchg
pop
jns
mov
movsb
les
aad
mov
sti
cmpl
cld
hlt
loop
in
addl
lea
mov
jg
mov
repnz
jmp
cld
test
stos
out
das
push
jae
shlb
das
fcoml
shrb
fidivs
shr
cld
hlt
mov
jb
mov
subl
jl
dec
iret
or
sub
cmp
sub
inc
dec
inc
sarb
pushf
das
mov
mov
pop
mov
ljmp
cld
mov
aad
pop
xchg
xchg
ljmp
pushf
mov
push
loope
decl
mov
lock
xchg
movsb
insb
inc
mov
mov
insb
test
mov
pop
aad
xchg
out
lret
in
xor
out
mov
clc
pop
enter
sarl
into
clc
jge
clc
shlb
push
mov
pop
mov
cmovbe
popf
xlat
testl
psllw
les
hlt
pop
testb
xor
jne
leave
aad
lds
cltd
ss
xchg
dec
movsl
and
call
and
movsl
dec
mov
or
jns
in
lcall
dec
add
aam
out
mov
cmc
cmc
sbb
xchg
push
pop
inc
lock
hlt
in
ja
lret
mov
dec
adc
jae
outsl
xchg
mov
inc
mov
aad
sbb
xchg
rcrb
xor
cmp
mov
cmpb
movb
enter
fbstp
scas
push
cmp
mov
or
enter
sahf
stc
mov
cwtl
popa
pop
cld
cmp
mov
movsb
in
mov
add
out
rcrb
sbb
add
add
ljmp
dec
dec
in
dec
dec
jl
add
cmp
pop
and
sub
cld
fsubl
out
int3
push
popf
mov
scas
mov
paddusb
stos
push
mov
scas
pushf
out
into
xor
pop
das
cmpsb
js
or
pop
lret
imul
mov
mov
stos
nop
out
cmpsl
out
and
cld
lret
xor
mov
pop
dec
test
arpl
and
leave
enter
sti
mov
dec
dec
and
jle
push
test
mov
fiadds
aas
mov
daa
lods
loopne
std
jmp
dec
sub
loope
push
pop
xor
add
adc
int
xlat
aas
xchg
pop
mov
jge
lret
push
mov
mov
and
xor
push
ljmp
lret
cmpsb
ds
mov
xchg
out
dec
aad
imulb
data16
mov
adc
mov
inc
pop
mov
test
fistpll
xchg
dec
test
loopne
sub
test
test
adc
movsb
fiadds
inc
cld
pop
rclb
loope
fmul
dec
mov
loope
andl
sbb
test
cmp
mov
pop
gs
aas
pop
push
divl
pop
mov
negl
jnp
popf
mov
in
fs
push
mov
cld
pop
lret
push
inc
lea
mov
cmpsb
std
rorb
adc
and
jne
test
push
cmpsb
scas
cld
and
xor
clc
daa
jg
add
inc
and
iret
aaa
rorl
pop
and
dec
pop
sub
adc
out
and
and
mov
jbe
fidivl
dec
pop
test
movsb
cld
inc
jne
sub
aad
int
and
ja
xchg
push
rolb
leave
xchg
and
fcmove
faddl
outsb
and
int
adc
hlt
jae
sub
lods
fimull
lcall
data16
mov
mov
sub
sub
pop
stos
mov
inc
dec
and
xor
pop
mov
inc
popa
inc
pop
idivl
mov
stc
pop
ja
shl
fsubrp
push
shrl
faddp
cmpsb
mov
inc
call
roll
shll
js
into
cld
push
not
mov
shlb
sbbl
in
mov
loope
xor
inc
push
cltd
xorb
mov
in
mov
les
xor
adc
mov
add
jns
adc
cmpsb
into
imul
pop
inc
mov
loop
push
add
cld
push
mov
fs
ret
rorb
mov
test
push
lds
and
xchg
pop
cmp
lods
sti
push
lods
xchg
in
in
or
das
jl
pop
ret
push
shrb
fsubl
and
rcr
enter
cmp
fildl
fidivl
pop
popa
push
cld
adc
push
outsb
lock
les
cwtl
push
ret
in
das
je
pop
in
and
fdivl
cwtl
scas
xor
test
adc
nop
or
sub
pop
enter
adc
loope
lock
cld
test
icebp
lods
xchg
inc
dec
sbb
sti
test
pop
cmp
mov
adc
arpl
hlt
push
sarb
sarb
inc
or
pop
mov
or
fwait
subl
cmp
ret
pop
push
fimull
test
dec
push
enter
mov
push
adc
popa
and
shll
stc
jae
aas
shufps
adc
icebp
pop
push
lea
pop
mov
cmpsb
cmpsb
push
fs
into
clc
jge
xchg
ret
sub
push
iret
mov
imul
cmp
or
ret
push
adc
mov
jmp
mov
pop
pop
adc
sub
nop
jp
mov
and
mov
lea
cld
inc
dec
push
dec
adc
mov
out
test
mov
add
stc
fsts
mov
cmp
imul
mov
and
mov
out
xor
push
aaa
jg
pusha
ljmp
outsl
popa
aas
loop
cld
pop
and
xchg
out
scas
push
fstp
inc
repz
loope
inc
push
xor
leave
jmp
mov
sbb
jb
pop
pusha
adcl
adc
dec
dec
dec
stos
xor
mov
fcmovne
pop
loopne
adc
adc
push
sub
insb
push
and
cmp
test
sub
mov
addb
call
add
sub
mov
jnp
jno
and
sub
loopne
ljmp
fsubr
push
lret
inc
mov
in
push
shlb
mov
setl
test
inc
dec
xchg
idiv
xor
mov
cltd
cmp
mov
xchg
mov
mov
lods
sbb
mov
movsb
jb
xchg
jp
xchg
pop
movsb
out
roll
repnz
dec
sub
fisttpll
mov
enter
loope
shr
xchg
mov
movsb
insl
add
jae
addr16
bound
push
lods
cmp
in
outsb
inc
loope
mov
push
fisubl
cmp
cli
sub
inc
jb
dec
dec
mov
scas
inc
add
fsub
jae
imul
lret
push
pushf
or
out
dec
xchg
mov
xor
add
cmp
test
add
cmpsl
xchg
out
fs
popf
lret
mov
testl
mov
and
insb
xor
inc
xchg
jle
insb
mov
add
mov
insl
cmp
addr16
hlt
sub
lock
mov
fmul
and
pop
or
andl
jmp
push
adc
add
clc
xchg
adc
imul
mov
sbb
or
sahf
lahf
dec
pop
jle
fdivp
mov
lods
bound
cs
es
js
roll
mov
push
inc
adc
aam
test
xchg
das
or
inc
xor
clc
ss
lods
or
lock
cmp
add
js
fidivrl
jl
lods
mov
xchg
fs
call
lahf
movsb
mov
fisubrl
outsb
imull
pop
jmp
and
and
sbb
into
aas
xchg
std
push
push
pop
adc
xchg
pop
pop
subl
or
sbb
mov
call
xor
cmpsl
inc
imul
je
hlt
jp
mov
fmull
repnz
repnz
jle
jg
out
inc
aaa
jmp
push
repnz
push
sub
sti
jmp
mov
mov
ficomps
adc
bswap
mov
test
insb
push
dec
mov
sti
push
push
dec
xchg
xor
mov
std
cmp
scas
mov
mov
inc
mov
pop
push
dec
out
mov
nop
stos
mov
adc
shr
and
shlb
test
xor
int3
fcomi
dec
or
add
jo
sub
cmp
nop
cltd
adc
add
jo
or
std
pop
insb
pushl
movsb
loopne
fs
jmp
lea
mov
cwtl
and
sar
rorl
imul
iret
xchg
shlb
ds
xor
adc
cld
inc
xor
mov
cltd
mov
fs
and
sbb
xchg
outsb
cmpsb
test
push
or
bound
stc
mov
mov
and
dec
ljmp
lret
ja
popf
loope
nop
sbb
jb
jb
pop
test
subb
lret
faddl
loope
mov
sbb
icebp
std
push
mov
push
xlat
push
push
ljmp
pop
aaa
xchg
int3
cmpsb
dec
xchg
int3
ficompl
xchg
fdivrl
js
xchg
ss
popa
inc
sub
push
les
or
mov
jl
imul
push
in
dec
punpcklwd
adc
cmc
ja
sahf
fimuls
mov
mov
cld
pushf
jns
lods
test
cmp
fmull
dec
jmp
jle
push
xchg
jns
cmp
faddl
xchg
pushf
sbbb
rol
js
dec
aaa
push
inc
out
pop
mov
fldl
rol
jae
je
cmpsl
arpl
pop
mov
push
lret
sub
pop
orl
push
cmc
sub
int
mov
xchg
testl
pop
jb
mov
in
sbb
jmp
pop
ljmp
jno
leave
iret
call
inc
xchg
sbb
mov
test
and
mov
push
insb
in
int
mov
rcrl
mov
jb
test
or
mov
test
test
and
ja
cld
int3
outsl
outsb
jnp
jne
das
iret
test
push
or
jns
pop
fsubl
call
scas
mov
mov
lea
xchg
cltd
xchg
bound
pop
jecxz
add
and
out
push
sub
fstpl
ss
lret
cwtl
sub
pop
and
mov
mov
jb
jnp
lret
in
icebp
leave
hlt
mov
roll
outsl
test
and
add
fidivrl
stc
xor
mov
fisttpll
movsb
in
into
cmpsb
lods
ljmp
sbb
ficompl
pop
adc
cld
idiv
aam
adc
bound
jne
sbb
aas
xchg
inc
stos
jno
stc
stos
cmp
mov
fdivl
daa
cmpsl
pop
inc
pop
jne
adc
mov
das
fidivrl
xchg
inc
push
aas
mov
in
mov
jnp
mov
and
sbb
xlat
adc
add
add
pop
adc
in
xchg
adc
and
enter
arpl
xchg
sub
xchg
mov
jle
cmp
loop
fcompl
cwtl
or
push
xlat
inc
add
or
addb
jl
hlt
in
jecxz
cmc
rorl
xorl
jl
xor
aam
jne
jmp
mov
test
jbe
mov
jmp
dec
cwtl
pop
cwtl
mov
arpl
pushf
mov
out
hlt
and
enter
dec
dec
in
test
adc
idivl
rcll
sub
jnp
testb
leave
xchg
test
ja
or
mov
jb
xchg
pop
insb
pop
adcl
mov
loop
pop
mov
add
add
add
pop
fimuls
dec
clc
insl
lods
scas
push
popf
sub
popf
lods
ljmp
jns
inc
push
mov
jge
xor
andl
xchg
fcmovu
pop
stos
mov
shll
pop
into
rep
xor
loopne
push
stc
adc
imul
dec
mov
push
faddl
fstpl
jmp
mov
movsb
andl
pop
rorb
movl
and
mov
sub
pop
xlat
mov
add
cmp
inc
test
in
fcom
mov
xchg
jge
movsl
mov
popf
fidivl
in
push
and
sub
xchg
jmp
loope
sbb
fmuls
stos
and
push
insb
push
cmp
jae
add
fstps
std
aam
dec
out
cmpsl
fisubrl
leave
xlat
movsb
lea
pop
ficoms
cmp
popa
pop
inc
pop
daa
and
mov
sbbl
loop
xchg
in
imul
ja
cwtl
test
mov
mov
mov
cli
push
notb
fistpl
ss
lods
test
xor
shl
je
add
jp
sti
pusha
push
lods
push
clc
int3
fsubrl
mov
inc
in
pop
loop
lock
pop
bound
clc
andb
cmp
repnz
cmpsl
and
add
stc
loop
xchg
push
in
loop
in
scas
leave
rcl
add
mov
xchg
xchg
xchg
fiaddl
test
cld
ror
xor
mov
sub
mov
adc
xor
fs
sbbb
cmp
movsb
adc
outsl
dec
xchg
mov
stos
jp
fidivrl
lods
incl
cld
inc
pop
mov
fsubl
dec
mov
repz
sub
xor
inc
shlb
jmp
mov
add
lcall
dec
jl
leave
movsl
enter
iret
cmp
jae
es
jmp
or
or
mov
loopne
or
push
js
xchg
jne
pop
cld
mov
fmul
sub
out
and
fdivrp
xchg
mov
adc
or
dec
in
addr16
ret
out
ret
cmp
sbb
repz
test
aas
mov
push
cmpsb
mov
sub
int
adc
in
adc
in
mov
jns
addl
rcrl
clc
scas
ds
sub
shrl
movsb
adc
loope
cmp
pop
mov
jl
ja
lret
and
cmp
dec
loope
push
in
or
fidivrs
and
cmpsl
mov
shrl
aas
xchg
xchg
sbb
dec
sub
xchg
inc
ds
mov
or
sbb
mov
iret
cld
popa
scas
pop
xchg
or
aaa
pop
xchg
movsb
adc
xchg
push
pop
imul
push
cwtl
dec
in
pop
mov
movsb
aad
lcall
inc
xchg
addr16
clc
mov
rcr
jbe
lret
mov
repz
clc
xor
ret
ljmp
and
sub
inc
ret
js
cmp
mov
jo
mov
inc
xchg
xor
test
mov
xor
in
mov
rcrl
test
es
out
or
mov
fiaddl
fcoml
add
cmpsb
test
test
popa
test
lret
or
cmp
int
mov
clc
aaa
stos
inc
mov
jno
xchg
dec
dec
fdivs
or
mov
add
loope
dec
sub
bound
inc
pop
adc
mov
mov
push
mov
pop
mov
sbb
cli
ljmp
aaa
dec
jne
jecxz
add
mov
or
mov
into
fdivrl
push
js
popa
aad
ret
out
adc
sarl
jg
in
loop
adc
mov
loop
out
add
cmp
mov
xchg
into
push
sub
aaa
add
lods
jae
call
xchg
mov
xchg
mov
push
aam
adc
pop
test
call
push
imul
xchg
sub
sub
movsb
movsw
out
mov
sub
cmp
repz
fs
mov
aas
add
pushf
lahf
ljmp
pop
shr
andl
insb
movsl
xchg
mov
insb
stc
out
cmp
sbb
in
stos
push
sbb
pop
popf
adc
shll
add
shlb
cs
dec
into
pop
dec
jnp
mov
enter
cmp
in
aas
out
out
pop
inc
mov
insb
ja
fisubl
movntq
inc
fsubrp
pop
outsl
int3
aam
in
mov
repnz
out
cmp
inc
popf
adc
icebp
leave
jmp
fiaddl
subl
je
jo
cmp
jb
and
cld
xor
clc
lds
push
xor
lret
outsl
xchg
or
incl
int
leave
jle
mov
popa
or
call
xchg
push
cltd
push
outsl
addr16
cmp
push
out
mov
mov
fstps
adc
stos
rcll
test
ljmp
xor
jo
mov
jp
imul
arpl
inc
cmp
inc
arpl
or
in
push
jmp
mov
adc
aam
test
fisttpll
into
lcall
push
addr16
or
sbb
ljmp
scas
mov
hlt
add
mov
mul
pop
mov
fsubl
in
dec
push
pop
mov
mov
sahf
adc
ljmp
or
outsl
imul
sub
pop
push
fidivrs
std
jmp
or
cmp
add
mov
sahf
fadd
bound
pop
lock
and
cmpsb
loopne
and
jp
aas
lldt
or
enter
pusha
test
jle
or
loopne
sbb
xor
mov
scas
int
jp
add
sahf
fsub
test
dec
stc
lret
push
dec
insb
sbb
les
adc
sub
xchg
inc
mov
push
enter
sub
xor
mov
mov
call
inc
mov
pop
cld
ja
jnp
cs
xchg
jae
ficoms
movsb
cld
prefetch
and
xchg
dec
int3
mov
rcr
xor
mov
sbb
scas
movsb
outsb
sbb
inc
aas
orb
adc
nop
nop
aad
stos
mul
sub
ret
aaa
pop
mov
xchg
out
ficomps
insb
pop
push
inc
xchg
jo
cwtl
fcmovbe
jb
lock
in
sbb
ljmp
push
and
das
std
mov
loop
fsubr
pop
fcoms
daa
sarl
and
jne
scas
push
mov
mov
out
mov
jbe
cmpsb
pop
ficoms
testl
pop
mov
push
test
mov
in
push
adc
mov
xchg
pop
negb
mov
ss
mov
scas
cmp
cli
insl
movsb
and
stc
test
dec
dec
jbe
jmp
mov
aaa
loopne
adc
xor
add
jge
notb
int
cmp
adc
jnp
inc
mov
xchg
xchg
lock
jno
jge
cmpsb
lds
movsb
add
scas
pop
and
mov
xchg
mov
jb
dec
orl
les
and
out
int3
push
insl
dec
sub
sub
daa
mov
pop
adc
mov
jl
xorb
mov
lods
mov
jg
dec
imul
sbb
loopne
pushf
cmpsl
pop
mov
mov
nop
icebp
call
dec
and
xchg
and
add
and
outsl
stos
xchg
dec
mov
pop
test
lret
hlt
cmp
rcll
dec
rcrb
add
dec
sub
repz
ljmp
insl
rorl
inc
lock
fldl
jmp
mov
sub
mov
ret
mov
mov
adc
faddl
lret
xchg
and
cld
lods
repnz
loope
inc
cmc
cltd
sbb
jae
icebp
xchg
call
shll
inc
test
xchg
test
jnp
iret
push
call
leave
test
fxsave
andl
mov
loopne,pt
js
rorb
and
rsm
js
cmp
int
mov
sub
bound
jl
insb
movsl
ror
movsb
sti
int
fwait
push
pop
dec
mov
push
mov
loope
pop
mov
les
jmp
xorb
mov
cmp
movd
push
jbe
fldenv
inc
pop
pop
mov
daa
in
test
inc
push
inc
movsb
stos
pop
icebp
scas
nop
test
add
lret
jmp
and
jp
stos
cli
aaa
pop
clc
mov
pushf
adc
push
lock
out
movsb
mov
dec
sbb
jno
fcmovnbe
inc
aam
cmp
xor
and
mov
dec
shrl
pushf
xchg
call
shl
dec
je
and
mov
pop
int3
xor
and
push
jle
xlat
fisttpl
repnz
sub
or
imul
test
aad
mov
pop
fstpl
cli
sahf
jg
ljmp
shll
mov
sub
jl
nop
mov
adc
js
cld
or
pop
clc
outsb
ds
mov
dec
xor
sub
or
add
mov
sbb
push
sub
pop
push
sub
push
jle
incb
jae
pop
sub
andl
inc
cmpsb
das
push
leave
mov
jbe
push
leave
out
mov
sarl
dec
arpl
push
mov
cmpsl
into
insb
roll
fcompl
sub
fisubrl
jecxz
lds
mov
xlat
in
shll
xchg
out
movsb
push
add
pop
out
call
and
sbb
dec
js
test
dec
push
jb
test
out
je
or
lret
or
mov
and
xchg
mov
repnz
fwait
cld
pusha
xchg
xchg
int
mov
jecxz
inc
lods
popf
inc
xchg
mov
pop
gs
mov
xchg
dec
ss
test
ljmp
mov
or
jge
in
sarl
ja
sbb
or
ja
testl
jbe
adc
fisubs
out
adc
push
sti
icebp
dec
shrb
xlat
xchg
std
call
mov
js
mov
repnz
enter
pop
and
xor
pop
inc
xchg
cld
add
inc
fistpl
outsb
jne
mov
push
and
sti
aaa
cmp
pop
pop
rcrb
or
sub
sub
sub
mov
xchg
pop
mov
add
mov
or
lds
test
daa
mov
mov
mov
push
xor
dec
xchg
push
and
mov
sub
movsb
pop
stos
or
loop
fmull
paddw
cmpsl
lock
cmpsl
movsb
popa
mov
or
test
daa
dec
ja
sbb
mov
gs
pop
es
and
ret
push
jecxz
inc
add
stc
dec
ficoms
out
push
dec
ja
push
loopne
outsb
addr16
adc
mov
pop
ror
mov
xor
into
shll
into
ljmp
sub
dec
dec
cld
ret
iret
or
repnz
jp
mov
leave
adc
sub
int
dec
call
fstl
pop
pop
add
adc
adc
sub
add
or
aaa
icebp
mov
fidivrl
pusha
push
aas
popa
jae
in
daa
cld
mov
push
dec
mov
rclb
dec
push
jmp
mov
rol
xchg
mov
sbb
out
js
outsl
lahf
adc
gs
leave
pusha
fbld
push
lock
enter
data16
inc
cld
jmp
jb
lcall
mov
lea
cwtl
mov
sub
xchg
inc
ja
cmc
fstpt
dec
jae
lods
cltd
jp
in
mov
mov
dec
loope
arpl
sub
mov
lret
cmp
aad
loopne
test
lods
add
lods
and
mov
mov
pop
and
dec
cmp
int3
push
dec
jnp
outsb
cmc
adc
mov
insl
je
xor
xchg
xchg
imul
and
add
jg
xchg
xchg
ljmp
loope
and
xchg
insb
or
xchg
cld
and
inc
jl
repnz
lock
test
stc
out
sbbl
into
notb
je
xchg
jne
les
out
sti
push
xor
in
lock
test
push
fcoml
int
dec
outsl
push
fwait
repnz
inc
or
mov
mov
popa
std
lock
call
mov
push
pushf
add
fldenv
dec
ret
jecxz
inc
das
inc
or
lcall
push
xchg
fxch
test
rcr
fiadds
ficompl
cmpsl
jle
ljmp
inc
dec
into
stc
jns
sub
jmp
fdivp
movsl
faddl
aad
xchg
dec
test
xchg
cmc
jae
fiaddl
pop
and
insl
call
rcl
sbb
fsubrl
add
xchg
push
mov
mov
push
mov
in
test
stos
pop
fmull
pop
jp
pop
jmp
fbstp
mov
jmp
xchg
jecxz
or
arpl
adc
cmp
call
fdivp
or
xorb
inc
xor
mov
scas
xchg
fwait
in
loope
rorb
into
jbe
movb
push
mov
inc
sbb
push
adc
in
faddl
xchg
aad
xchg
mov
inc
test
and
add
pop
lret
gs
pop
jp
mov
cs
je
sub
xor
pop
mov
ja
pop
add
jp
lea
dec
xor
bound
cmp
jns
jnp
jle
add
test
push
addl
adc
xchg
sbb
rorb
cmp
std
mov
dec
addr16
push
lret
sbb
mov
test
mov
sub
sbb
xchg
and
mov
adcb
fdivrs
dec
sbb
movsb
mov
mov
mov
sbb
scas
push
pop
push
inc
add
sbb
mov
dec
adc
lahf
cltd
xchg
jae
in
add
mov
jb
cmp
mov
and
pop
iret
loope
adc
mov
mov
inc
test
mov
out
dec
and
mov
xchg
or
iret
ja
pop
dec
lock
rorb
sbb
inc
push
inc
jp
fstp
movsb
scas
pusha
lods
or
xchg
push
mov
jle
cmp
fimull
andb
sbb
ljmp
jecxz
and
jb
jnp
enter
clc
test
cmpxchg8b
cmpsl
ss
mov
cmpl
pop
faddl
push
scas
daa
push
popf
sbb
repnz
movsl
int3
jns
jno
xchg
jno
jb
mov
pop
or
dec
les
scas
shrb
or
or
xchg
and
add
mov
out
test
in
ficoms
pop
icebp
push
jb
cmpb
pushl
in
sbb
xor
push
movsb
inc
pop
nop
int
jns
popa
testl
dec
push
lcall
mov
inc
rclb
jecxz
clc
fiaddl
push
ficoml
pop
cmc
stos
pushf
sahf
je
cmp
push
sarl
jecxz
inc
jle
fstpl
add
shll
fiaddl
jmp
scas
stos
dec
dec
adc
filds
paddsw
xor
or
loope
idivl
and
xchg
adc
fwait
bound
mov
in
fadd
stos
cmp
fidivs
sar
dec
and
xchg
jno
or
mov
xchg
xlat
shll
dec
or
fs
pop
pop
cmp
push
imul
mov
or
cld
sbb
dec
cmp
into
sub
flds
lcall
push
inc
mov
push
lahf
adc
add
shlb
xor
cs
adc
dec
dec
ret
sub
test
xchg
pushf
adc
mov
inc
pop
and
aaa
shrl
out
dec
insl
ljmp
inc
xor
sub
dec
xchg
push
popf
fs
xor
fdivrl
xchg
and
out
mov
cld
jecxz
xchg
pop
repz
jnp
repnz
and
xor
sbb
pop
push
iret
cld
sbb
shl
or
pop
dec
push
movsb
lea
movsb
loope
aas
rolb
jge
jb
jl
seto
cld
mov
cwtl
addr16
clc
adc
nop
xlat
cmpsb
imul
jg
lock
dec
cmc
xor
popa
mov
push
pop
mov
dec
out
xchg
adc
shrb
out
adcb
out
pop
xor
into
test
push
mov
adc
cmp
sbb
lods
movb
adc
ret
fs
xor
xor
cmp
dec
out
loope
sbb
jae
mov
in
sub
in
add
add
or
repz
push
cmp
lods
fistpl
rcl
xchg
push
push
and
lgs
push
mov
add
dec
xchg
jle
sub
loope
popa
rcr
in
push
dec
testb
xchg
push
dec
xorl
pop
ss
jne
fsubrl
inc
aam
call
int
jl
mov
inc
ss
stos
ss
add
push
xchg
mov
dec
cltd
inc
push
add
mov
nop
call
rcrb
lods
in
inc
ud2
daa
mov
push
jl
mov
dec
xor
mov
hlt
outsl
shll
dec
test
dec
orb
mov
bound
inc
dec
rclb
xor
ret
rorb
int3
jb
push
ret
xchg
enter
into
sub
sbb
xchg
les
stos
mov
adc
dec
push
inc
cmp
lods
test
aas
push
xlat
sub
pop
cmpb
je
push
stc
cs
jg
inc
xlat
or
fabs
in
cld
adc
sub
lea
add
int3
loopne
or
jle
enter
inc
jo
out
cmovp
ja
icebp
adc
inc
loop
fsubr
xor
mov
outsl
dec
mov
dec
mov
ret
insl
sti
inc
ret
shrb
test
jmp
int
jno
jne
lock
dec
push
sub
pop
add
sub
cld
pop
inc
cmp
jl
jge
fidivs
push
sub
dec
and
imul
pop
mov
out
xchg
or
mov
icebp
xchg
inc
pop
mov
jne
scas
jno
jecxz
mov
fwait
push
sahf
mov
dec
cmc
cwtl
fsubr
mov
imul
mov
in
jmp
mov
cmc
js
out
mov
filds
sub
mov
jecxz
test
out
mov
in
push
lcall
in
mov
cmpsl
adcb
inc
sti
pop
test
sbb
fstp
lock
mov
xchg
sarl
or
dec
ret
arpl
int3
aas
not
xchg
jo
jecxz
cld
daa
cmp
arpl
popl
sub
pop
jne
or
xchg
push
scas
xchg
das
ret
jno
cmp
mov
or
and
std
jb
popa
cmpb
out
xlat
sbb
sarl
sysret
test
movsl
jmp
mov
sti
push
int
ficompl
daa
addr16
fistpl
out
pop
shlb
add
or
rcll
fildl
push
dec
mov
out
dec
std
pop
ret
mov
mov
xor
push
add
jecxz
xchg
xchg
jne
adc
aas
scas
adc
push
ja
iret
xlat
or
das
outsl
sub
sbb
scas
mov
pop
negl
inc
mov
and
test
mov
xchg
in
lret
cmp
sub
popa
scas
sub
pop
dec
das
cltd
into
js
cli
fsubl
scas
and
call
xor
cmp
dec
pop
out
xchg
pop
sub
mov
je
orl
push
xor
sub
fstl
fcos
lea
icebp
mov
pushf
stos
cvtdq2ps
aam
leave
jl
shrl
pop
adc
sub
mov
pop
rolb
jmp
leave
outsl
mov
mov
pusha
mov
cmc
push
and
push
mov
mov
or
dec
add
push
xchg
pop
pop
lock
dec
in
ja
fdivs
inc
imul
loopne
sbb
fstp
or
jle
fisttpll
sub
mov
stos
pop
das
decb
pop
push
mov
xchg
icebp
cs
jbe
ret
adc
mov
push
idivl
fwait
ja
push
test
scas
mov
jae
mov
add
outsb
ret
and
je
fcmovbe
pop
pushf
cwtl
pusha
inc
outsl
cld
and
aaa
dec
push
test
or
inc
fcom
cmp
mov
dec
ljmp
push
rclb
rcrl
shl
ret
and
or
pushl
fsts
dec
out
scas
pop
cmp
mov
scas
sub
in
icebp
stos
xchg
aaa
inc
jge
add
adc
cmp
mov
movsl
pop
pop
insl
out
rcll
mov
xor
or
arpl
das
scas
mov
mov
repz
mov
adc
dec
jbe
fnstcw
ret
mov
sbb
stos
aam
cmp
sbb
enter
bnd
mov
adc
jl
insl
push
mov
lock
shll
xor
jno
incl
inc
aam
int
inc
mov
sub
into
mov
sub
shlb
out
or
jge
and
adc
mov
aas
inc
dec
jne
mov
or
std
dec
mov
jbe
xchg
vpmullw
push
leave
add
push
cmp
sub
fnstsw
or
int3
aad
and
cmpl
cmpsl
fmull
ds
test
and
dec
cltd
mov
shlb
shll
pop
cwtl
enter
jmp
mov
aam
push
jo
xor
int3
xor
jnp
xor
mov
cld
imul
pop
clc
stos
imul
inc
in
clc
push
xchg
rcr
in
clc
cwtl
dec
into
in
mov
cld
xchg
sub
icebp
sbb
mov
jge
cmp
stos
mov
jecxz
or
in
pop
mov
jno
fadds
scas
mov
in
xor
xor
mov
bound
sub
xchg
movsl
lret
je,pn
enter
bound
hlt
push
lock
popf
sbb
mov
jnp
je
movsb
mov
or
icebp
adc
loopne
xchg
aaa
add
xor
adc
push
and
mov
stos
sbb
mov
sub
mov
mov
int
test
pop
out
je
jg
xchg
pop
sub
dec
scas
cs
fs
push
cmp
inc
jmp
addb
faddl
inc
mov
cmp
sti
repnz
aas
mov
jnp
pop
cmc
and
repz
in
xchg
cli
xchg
in
inc
lods
loop
dec
pushf
ljmp
cld
jne
ftst
stos
imul
pop
sbb
call
lahf
mov
and
ds
mov
pop
rolb
clc
xor
repz
out
fcompl
out
icebp
fcoms
cmc
mov
psubsb
inc
add
push
and
cmp
jmp
push
add
mov
mov
jecxz
xlat
cs
ret
popa
mov
and
cmpsl
lods
cmp
push
hlt
aad
dec
in
and
hlt
shl
das
jge
loope
fwait
ja
inc
mov
push
pop
sbb
mov
insb
mov
inc
xchg
push
lret
mov
cld
shrl
iret
xchg
out
int
out
mov
mov
movsb
sar
pop
pop
lods
ret
sub
xchg
pop
pop
xchg
out
pop
out
decb
dec
jle
xchg
mov
mov
jb
mov
xchg
mov
fdiv
sub
jmp
sub
mov
pop
mov
cvtps2pd
lea
sbb
add
fldcw
fcmove
sbb
jns
mov
xor
fdivs
pop
push
test
sti
arpl
repz
push
mov
lret
sahf
pushf
je,pt
cld
inc
pusha
dec
pop
mov
in
mov
xchg
ja
sbb
adc
insb
jle
pop
movsb
push
loopne
cmp
lea
pop
int3
stos
out
cld
sbb
xor
xchg
mov
ret
adc
xor
cltd
xchg
in
lret
xchg
mov
mov
dec
fsubl
adc
xor
inc
jle
ficomps
lret
arpl
fadd
jg
fisubl
jns
lret
inc
repnz
xor
imulb
fistl
daa
add
xchg
int3
inc
outsl
mov
bound
and
les
int
rcll
push
call
aad
dec
xchg
imul
into
lcall
mov
ja
adc
mov
addb
js
cmpl
mov
popw
mov
call
jmp
push
inc
jae
ret
jmp
mov
sub
popf
xchg
mov
jmp
scas
sti
add
les
jl
hlt
or
xlat
fidivl
add
cmpl
insl
lret
mov
insb
sti
gs
in
push
pop
in
sub
sub
xchg
iret
adc
mov
adc
push
mov
or
mov
mov
ljmp
aad
data16
xor
in
xor
mov
mov
mov
rcrb
and
mov
pop
or
or
cmc
les
mov
jl
xor
loopne
pop
gs
rolb
mov
mov
lock
xchg
cwtl
cwtl
xchg
bound
enter
mov
repz
xchg
ja
pop
inc
daa
mov
ret
xor
xchg
mov
push
pop
sub
fcoml
fisttpl
sub
test
lea
cmp
cmp
fdivrs
cmp
push
cld
sub
sbb
or
lods
xadd
pop
dec
loopne
mov
lcall
inc
mov
xlat
lcall
push
mov
movsb
sbb
int
repz
shrl
mov
sbb
nop
lahf
adc
imul
sub
jmp
cmp
xor
enter
push
andb
push
cmp
cmp
sbb
fwait
push
and
popw
xor
pushf
pusha
aaa
inc
int3
push
mov
pop
jbe
dec
outsb
push
in
sbb
jl
fldl
roll
push
rcl
dec
and
aas
jmp
xor
jbe
icebp
jp
dec
inc
std
jno
mov
dec
ljmp
mov
xchg
pop
mov
jge
gs
push
outsb
movsl
mov
fisubrl
cli
jne
xor
mov
jl
cld
inc
cmp
dec
mov
in
mov
mov
xor
xchg
adc
das
fisubrs
lods
inc
in
addr16
arpl
cmpsl
ret
lods
fiaddl
push
adc
jne
out
aaa
in
popa
jo
or
sub
fbstp
adcl
out
outsb
aad
mov
mov
pushf
dec
int3
lret
pusha
dec
xor
xchg
fld
lahf
xchg
in
sbb
in
loope
cld
repz
xor
outsb
mov
or
pop
fmull
imul
vmwrite
pop
in
add
push
in
pop
pop
inc
pop
lods
xor
sub
add
pop
pop
lods
sar
je
dec
jne
xchg
fsubl
mov
sub
cs
movsl
inc
cmp
call
mov
insb
mov
andl
or
loope
xor
mov
icebp
scas
pop
inc
add
or
gs
lret
aam
mov
outsb
lahf
lret
or
lods
ds
fisubrs
cmp
popa
or
sub
push
mov
gs
mov
shl
xor
or
cli
and
xchg
cmp
lcall
cmpsl
cmp
pop
int
outsb
mov
aad
xchg
add
cs
test
mov
arpl
pop
mov
cltd
out
out
mov
add
jb
stos
dec
cltd
cltd
xlat
dec
push
mov
sbb
inc
js
shrl
pop
mov
push
ja
loopne
lds
xchg
ljmp
les
pop
mov
and
das
xor
xor
aas
pushf
jne
movsb
shr
int
sbb
shrl
mov
int
rcrb
jg
and
add
mov
jecxz
clc
mov
mov
sbb
cmc
mov
js
je
dec
jmp
jp
and
andb
sti
repz
scas
stos
insb
push
fdivs
pushf
xchg
imul
mov
pusha
testb
in
loope
mov
icebp
mov
push
push
std
aaa
xchg
cld
nop
mov
adc
ljmp
push
adc
jae
movsb
das
jns
test
sub
shl
ljmp
fimull
pusha
dec
mov
push
sub
cs
push
ss
sub
mov
sbb
jo
mov
loop
dec
fdivrl
testl
mov
js
jbe
mov
fcompl
aad
pop
nop
addb
mov
or
cmp
jbe
cs
popf
lock
ds
in
sub
push
jmp
fiadds
stc
xor
xchg
inc
fdivl
ficompl
idivb
in
stos
into
mov
jne
mov
xor
jmp
sbb
mov
jns
repnz
je
pop
insl
adc
movsb
lret
aas
add
ljmp
mov
outsl
cli
xchg
sarl
vaesenc
jmp
lret
cmp
pop
push
push
xchg
cmp
inc
rcrl
outsl
push
cli
ret
bound
add
sub
stc
cmp
das
push
sarb
js
mov
push
je
fs
ret
in
push
pop
lea
imul
test
add
xor
xchg
das
int3
test
fiadds
cs
std
mov
cmpsl
jl
adc
pop
fisubs
and
mov
adc
pushw
cwtl
lahf
out
aaa
stos
jle
mov
xchg
pop
in
sub
jle
mov
add
sub
outsb
pop
test
test
mov
roll
insb
push
call
jp
cmpl
sbb
adc
mulb
adc
in
shlb
repz
cld
pop
or
mov
dec
roll
inc
or
push
clc
lock
flds
leave
jle
mov
fcoms
jo
or
int
pop
sbb
adc
leave
inc
test
rcll
imul
es
sub
jecxz
into
popf
and
add
int
mov
mov
add
outsb
aas
jecxz
mov
cmp
stos
loope
into
dec
test
mov
mov
adc
ror
mov
orb
xor
inc
xor
pop
add
xor
pop
jecxz
ud0
in
push
into
sbb
fdiv
and
in
ljmp
mull
xchg
aaa
loop
sub
mov
outsb
pop
add
cmp
or
mov
sbb
adc
sahf
inc
test
push
decb
sbb
ud0
push
sti
push
cmp
cld
test
pop
jbe
in
les
inc
cmp
cmp
jnp
pop
cmc
clc
pop
enter
mov
mov
sub
push
inc
out
pop
in
and
cld
dec
into
sahf
dec
shlb
xchg
insl
lcall
cld
pop
jbe
mov
lods
scas
adc
ljmp
xor
loope
inc
movsl
pop
pop
xchg
notb
lret
cmp
fucompp
decb
andb
dec
popa
out
icebp
xor
mov
push
jmp
inc
ds
stos
xor
mul
cmp
jl
dec
mov
clc
push
jg
and
fwait
push
push
add
cmovp
add
or
imul
outsb
ret
jno
mov
inc
movsb
xor
repnz
jb
out
lock
fidivrl
pop
pop
rcrl
cli
fstps
mov
fwait
movsb
and
sbbb
mov
pop
or
push
mov
loope
sub
mov
lcall
and
loop
ror
xchg
aaa
int3
or
jg
shl
cld
mov
in
out
cs
aaa
sub
mov
out
cld
pop
lea
test
push
mov
aam
pop
out
ja
xchg
mov
sti
adc
push
adc
lods
enter
addl
jne
mov
and
mov
pushf
imul
aad
fsubr
incl
lret
push
testb
cld
lock
aaa
mov
mov
dec
push
lods
lret
nop
ljmp
pop
fs
inc
hlt
inc
mov
ljmp
pushf
scas
pop
mov
repz
je
test
pop
lods
dec
cmp
int
paddw
xchg
out
xor
mov
js
lret
fcoml
adc
xor
jecxz
sbb
inc
in
pop
sbb
ja
addb
pop
or
push
sub
nop
fiaddl
sahf
jb
shll
movsb
arpl
mov
push
int3
sub
push
add
jmp
cmp
jns
adc
push
dec
push
cmp
dec
pop
cs
mov
gs
ds
mov
movsb
jle
rorb
mov
mov
push
inc
je
add
jbe
loop
or
ds
pop
stos
jne
movsb
repz
xchg
mov
mov
mov
std
and
inc
add
push
jnp
mov
stos
aad
out
add
sbb
aas
js
jmp
pop
pop
jg
dec
dec
seta
test
sti
adc
fs
nop
js
rolb
push
cmp
push
xchg
pushf
loope
xchg
ficoml
movsl
rorl
out
xchg
sbb
mov
cld
dec
sti
push
dec
xchg
cmpsb
mov
cwtl
xor
dec
loopne
outsb
jmp
int3
mov
inc
les
jle
int
lock
std
cs
int
pushf
scas
loopne
jns
add
jg
insb
and
and
popf
lahf
jle
or
push
mov
std
and
fwait
pop
rcl
and
jge
movsb
sub
mov
xchg
and
mov
and
pop
test
cmp
push
xor
bound
aam
loope
mov
cmpb
add
add
clc
sbb
add
das
mov
jmp
addb
xchg
sub
fdivs
std
bnd
repz
mov
cmc
pop
ja
icebp
inc
adc
andb
sub
adc
imul
or
cmc
inc
adc
lea
out
push
add
or
push
lret
xchg
ds
cld
mov
xchg
iret
sub
lret
jnp
lcall
dec
mov
repz
mov
dec
cli
push
aaa
xchg
mov
jmp
jb
cld
xlat
rcr
outsl
adc
std
sub
pop
inc
inc
cld
shll
outsb
mov
incl
dec
add
rorl
mov
sub
dec
std
jae
or
mov
adc
and
mov
xor
repz
mov
in
jbe
call
ret
testl
fdivr
mov
into
fsubl
leave
dec
adc
xchg
movsb
push
jle
jp
js
mov
adc
faddl
mov
rol
jb
xor
mov
jg
lahf
xchg
mov
mov
imul
push
shrb
mov
xlat
jmp
mov
loopne
jmp
mov
nop
mov
fists
xchg
adc
mov
enter
scas
sub
stos
jle
outsl
inc
mov
jecxz
lcall
and
cmp
call
sub
rcr
stos
jmp
mov
cld
inc
outsb
scas
not
repz
sbb
adc
imul
nop
mov
ljmp
movsb
and
sbb
out
or
enter
out
fildl
jge
sub
mov
mov
sti
adc
push
imull
in
mov
loopne
sub
ljmp
or
mov
jg
outsl
mov
inc
fistl
imul
bswap
ja
sub
cmpsb
jge
mov
push
insb
jmp
popf
sub
mov
js
rcll
lahf
inc
test
mov
push
mov
imul
std
gs
cmp
xchg
jb
dec
test
rolb
call
mov
out
mov
stos
push
xor
daa
addl
fbstp
inc
lea
mov
mov
and
pop
pushf
dec
in
or
push
push
cld
outsl
mov
aam
movsb
jno
and
popf
dec
cld
test
push
rcl
enter
bnd
add
test
xchg
arpl
sahf
popa
jb
rcrl
xlat
fildl
loop
insb
push
lods
push
cmp
cmpsb
push
ljmp
mov
loop
orl
iret
clc
dec
mov
adc
fcmovbe
jecxz
xchg
in
scas
adc
jp
dec
mull
mov
psubb
jle
xor
sub
or
mov
std
loope
or
xchg
pop
sbb
or
mov
jle
mov
call
test
mov
mov
push
sahf
insl
or
js
pop
fs
dec
push
pushf
pop
rclb
pusha
enter
pop
xor
loop
int3
fs
daa
jo
xchg
push
movsl
pop
cld
in
adc
cs
notl
daa
mov
pusha
push
fidivs
dec
pop
rorl
jle
and
in
mov
pusha
orl
ja
in
jl
repnz
dec
cltd
dec
in
cmp
loope
addr16
dec
sub
int
or
cli
mov
sbb
and
mov
sbb
dec
mov
in
inc
pop
shll
add
dec
add
inc
jb
imul
mov
sub
cli
jno
mov
out
es
mov
fildl
loope
inc
ds
xchg
inc
push
ficoml
or
loop
or
jp
jmp
nop
adc
js
push
test
jge
sahf
xchg
mov
test
ss
push
test
mov
stc
jle
add
cmpsb
je
mov
test
psrlq
insl
repnz
dec
inc
outsb
fimull
sti
mov
cwtl
outsb
push
cld
xchg
ret
ds
ljmp
sbb
leave
sub
sti
push
push
dec
popl
push
jg
std
rcrl
adc
fstl
xchg
into
dec
xchg
pop
adc
int
call
fldln2
cltd
pushf
xor
fadds
lret
add
shrl
xchg
in
pop
fidivs
cltd
add
jle
dec
int3
jle
sub
dec
fldenv
aaa
std
cmpsb
lret
and
cwtl
mov
cld
lret
jmp
sbb
loop
ds
add
sbb
push
adc
jns
aam
cmp
inc
aas
push
out
sti
lea
mov
mov
aam
enter
fdivrs
ds
inc
cld
imul
loope
and
or
insl
lods
jns
push
and
mov
repz
in
lea
in
sub
push
js
dec
insl
inc
xor
dec
dec
shlb
push
push
jmp
xchg
adc
xchg
cmp
nop
mov
cld
stos
call
push
lods
stos
subb
addb
jecxz
dec
fsubrl
sub
insb
and
xchg
inc
and
jecxz
and
mov
sahf
test
pop
push
cltd
pop
jmp
rclb
test
xor
mov
inc
xchg
dec
pop
inc
pop
outsb
shll
or
cmpl
out
mov
adc
and
add
in
pop
jno
inc
pop
push
js
std
ja
popf
cltd
bound
dec
adc
dec
and
mov
jmp
push
call
in
jp
sbb
in
adc
not
adcl
mov
xchg
icebp
subl
and
cmp
sarl
pushw
pop
mov
ljmp
test
shrb
jle
cmp
push
test
into
pop
loope
jp
jb
pusha
pop
jl
jo
ret
sbb
test
jnp
xor
jb
pop
sbb
and
lcall
inc
cmp
out
nop
mov
rcrl
testb
stc
xor
mov
stos
mov
mov
pop
pop
push
hlt
mov
xchg
lret
ret
arpl
pop
scas
mov
ficoms
mov
add
dec
mov
lahf
out
pop
cli
das
in
dec
cmp
jl
fcompl
adc
fistps
add
adc
adc
jge
fisttpll
lea
out
lds
std
sub
jmp
mov
or
out
push
dec
or
jmp
mov
cltd
jle
or
pop
out
and
cld
ret
mov
pushf
xchg
pop
movl
loope
inc
mov
and
push
sbb
lret
insb
das
imull
test
mov
decl
push
mov
inc
pop
jmp
adc
lods
inc
shll
and
pop
test
inc
test
add
adc
pop
rcl
push
sbb
fmul
notb
icebp
cld
sti
xchg
scas
jne
jle
arpl
jmp
sbb
and
xchg
mov
pop
fcoms
xchg
and
cmc
sti
mov
mov
jo
pop
mov
movsb
out
pop
ret
in
pop
filds
or
fiadds
push
cld
adc
hlt
mov
rcrl
pop
shld
mov
inc
fsubrl
lahf
dec
into
mov
mov
mov
loop
jge
pushf
add
stc
mov
xchg
push
mov
pop
lea
add
or
push
push
mov
loope
inc
mov
dec
mov
adc
or
repnz
mov
sahf
dec
insb
dec
dec
jne
ret
lcall
or
pop
lret
and
xor
cld
xor
scas
sti
sbb
stos
loopne
ljmp
lcall
push
jmp
fidivrl
movsb
cld
lret
rcrl
fsubs
jbe
rcr
scas
mov
inc
mov
lock
adc
stos
lds
push
arpl
sub
fwait
and
xchg
pop
popf
pop
das
add
push
xchg
xor
jbe
test
aas
lods
pop
shrb
movsl
cmp
cmp
add
and
stos
les
push
cwtl
movsb
jge
jo
and
sub
and
test
jae
in
rorl
out
xchg
sub
adc
mov
mov
shll
mov
mov
lods
jle
popf
ret
fdiv
cwtl
stos
clc
adc
dec
xchg
xchg
fcoms
mov
cmp
into
ret
rcr
aas
and
ret
dec
mov
stc
and
mov
jge
xor
mov
push
mov
lea
cld
mov
pop
and
cs
ljmp
jb
xorl
jb
pop
or
fdivrs
cwtl
sbb
enter
mov
push
mov
daa
enter
jecxz
mov
mov
movsb
clc
sti
adc
rol
xor
or
loopne
xor
and
or
mov
ljmp
repz
dec
shl
mov
push
cli
clc
xor
jbe
test
ficoms
sub
xchg
or
lock
push
cmp
fs
out
inc
loop
sbb
mov
jle
add
jmp
and
es
movsb
push
cld
xor
aaa
pop
call
repz
mov
scas
mov
jge
int
fcoml
into
pop
pop
leave
in
dec
mov
cs
ds
lds
mov
pop
mov
jmp
and
adc
dec
pop
mov
out
pop
fidivrs
aaa
dec
into
ret
enter
push
cmp
mov
adc
out
mov
fcoml
nop
xor
aam
mov
stos
insb
push
and
js
xchg
jns
jle
loope
mov
inc
je
push
fsts
pop
lods
pop
outsb
fisubl
dec
out
mov
aas
int
sbb
fdivr
mov
ffreep
jl
cli
shr
out
in
sub
jmp
in
cmpb
shll
sbb
push
mov
gs
fcoml
add
mov
in
stc
mov
and
int3
shl
jne
xor
outsl
inc
xchg
and
adc
gs
addr16
sbb
pop
jo
xchg
jle
cmc
mov
and
xchg
es
mov
jecxz
fistps
or
and
ret
or
inc
mov
jnp
ficoml
rclb
cmpsb
leave
faddl
pop
in
sti
jl
sub
jge
jle
loopne
cmpsb
in
xor
inc
adcl
or
int3
xchg
nop
sub
push
test
mov
movsb
test
xor
push
cwtl
ljmp
sbb
insl
sub
fisubl
pop
pop
aam
test
jb
mov
stos
sub
pop
adc
or
push
fsubl
cwtl
leave
popl
pop
stos
outsl
iret
imul
and
sti
dec
lds
cli
jno
mov
cli
std
hlt
or
hlt
int3
mov
dec
xchg
ret
push
testb
pop
fsubrl
push
test
cmp
scas
cld
push
insl
adc
sub
enter
outsb
mov
or
cli
mov
movsl
jle
mov
or
insb
stos
ja
xchg
xor
adc
in
cltd
sarb
adcb
cmp
lods
sub
jne
or
sbb
xchg
adc
je
or
scas
repnz
cmp
lds
cmp
or
movsb
inc
fwait
into
mov
and
ljmp
jecxz
and
pop
or
jp
mov
mov
cld
mov
bnd
sub
inc
push
das
ret
adc
and
inc
mov
ljmp
push
fwait
and
cmpsl
mov
mov
cmp
in
mov
data16
jbe
rolb
push
test
cmpsl
jno
pop
addr16
jle
sbb
fwait
pop
push
jb
pop
jp
add
mov
push
cmp
shlb
jne
int3
sahf
loopne
pop
add
in
cmp
aaa
hlt
add
cmp
xchg
mov
out
fadd
inc
pextrw
xchg
rorl
jmp
sub
cld
pop
inc
das
cmp
divb
into
dec
aas
sub
mov
in
and
cld
xchg
xchg
cmp
stos
ss
out
cvtps2pd
fisttpll
add
bound
icebp
pushf
fnstsw
cld
dec
mov
jae
mov
cs
jae
jno
sub
test
lret
dec
jl
rorb
adc
jae
xchg
fisttps
add
ljmp
les
repnz
dec
jge
xchg
mov
pusha
xchg
inc
mov
push
stc
bound
mov
dec
je
dec
icebp
adc
sbbl
icebp
lret
mov
aam
cmp
jg
push
lcall
push
cwtl
mov
mov
cld
int
jbe
pop
cli
aas
and
cwtl
test
add
jno
int
jnp
mov
lds
lahf
stc
sbb
mov
jae
jo
jae
sub
clc
xor
push
cmpsl
cli
mov
and
mov
out
xchg
call
and
jae
sbb
scas
in
sub
loopne
shlb
mov
test
pop
pop
and
inc
fbstp
ret
jmp
jl
pusha
mov
fiaddl
enter
push
ret
dec
xor
movsb
loopne
xchg
mov
mov
xchg
ss
leave
aad
lretw
inc
dec
jb
out
stos
jmp
dec
fstpt
jmp
and
and
imul
fwait
xor
dec
sub
jo
fadd
insl
or
cltd
jne
xchg
stos
sbb
das
fdivrs
xlat
cli
jmp
out
movsl
mov
xor
arpl
cmp
xchg
sub
les
test
xchg
pop
adc
sub
pop
mov
sub
imul
paddq
pop
push
aaa
pop
loop
mov
cli
icebp
inc
jmp
aam
int
insl
popa
ss
mov
mov
daa
dec
loopne
pop
bsr
cmp
subl
scas
mov
fiadds
jmp
lea
sub
jb
in
push
dec
rcr
adc
aaa
rcr
dec
fdivr
dec
es
cli
xchg
pop
cmpb
rclb
arpl
xlat
in
cmc
pop
jnp
or
pop
jle
out
dec
adc
fmuls
cwtl
add
dec
mov
inc
fstps
mov
push
jp
mov
push
inc
out
aam
push
pop
imul
je
xchg
subb
sbb
sub
dec
lods
and
push
mov
lds
add
sub
sahf
mov
sbb
roll
scas
xchg
fisubrs
mov
fcompl
jl
push
pop
outsb
stc
pop
cld
mov
xorb
adc
sub
std
mov
movsb
pop
cltd
stos
fucompp
out
mov
or
imul
cmpsl
jl
nop
test
sbb
negb
sbb
ret
sbb
mov
adc
test
xchg
sbb
cmp
loope
daa
lret
xorb
mulb
lea
cmpsl
pop
pop
arpl
es
adc
or
ss
imul
push
into
sbb
pop
repz
jmp
fsubrl
lock
lret
loopne
scas
je
jbe
adc
fstpl
cmp
pop
lea
xchg
mov
mov
mov
popa
decl
mov
cmpsb
or
fmuls
in
js
push
and
lret
test
lret
ret
pop
ret
mov
mov
js
mov
cwtl
push
xchg
jl
and
mov
loope
dec
and
or
cmp
inc
mov
icebp
test
push
loope
into
dec
cmp
mov
xchg
jle
adc
negl
sub
fs
gs
pop
inc
repz
or
adc
xchg
xor
lods
shlb
insl
sbb
push
mov
pop
cld
xor
adc
add
sti
enter
mov
out
cmp
cwtl
addb
cld
loopne
decl
sub
xor
and
mov
popf
jne
push
rorb
movsb
out
push
pop
fmuls
ljmp
mov
adc
dec
clc
lds
aad
xchg
cmp
sti
test
jnp
gs
push
popa
push
add
imul
adc
ljmp
or
int
xor
rorl
insb
pusha
scas
and
lods
push
movsb
adc
dec
or
xor
aaa
push
push
push
sbb
rcr
rcrb
out
jmp
add
adc
mov
mov
ds
or
sti
fcoml
jecxz
and
test
xor
imul
test
and
sbb
in
or
stc
testb
mov
or
sahf
inc
sbb
mov
dec
rolb
jecxz
rcrb
call
push
ret
repz
sub
scas
daa
movsb
rcrb
ret
dec
xchg
in
shrb
push
inc
lods
mov
inc
pop
mov
pop
inc
cmp
int3
sbb
mov
mov
aas
clc
mov
dec
sub
cmp
sub
movl
mul
xchg
bound
stos
pmaxub
test
xchg
sbb
mov
cld
aam
push
mov
dec
stos
inc
insl
inc
imull
pop
jl
push
sub
stos
jg
fwait
call
dec
loopne
dec
cmp
mov
scas
mov
mov
popa
rolb
pop
push
jg
jns
fsubp
std
aas
xchg
xchg
call
insl
push
xchg
shlb
aaa
xor
popf
push
add
dec
outsb
xchg
dec
jl
mov
sub
out
movsl
imul
xchg
ja
xchg
cld
adc
cmc
pop
aam
and
les
xor
test
jge
and
fldln2
stos
jno
inc
mov
lcall
in
cld
and
repz
mov
add
lret
ja
in
into
movsl
fistpll
gs
pop
cmp
dec
xchg
addb
cld
push
scas
call
xlat
pop
scas
rorb
movsb
out
aad
in
pop
insb
sub
pmaddwd
je
decl
out
adc
in
sub
xchg
fadd
sarl
lret
shll
pop
adc
int3
sahf
xchg
das
jbe
movsl
iret
xchg
push
or
daa
adc
stos
mov
movsb
stc
and
cmp
jl
mov
pop
cmp
mov
xor
pop
mov
jg
ret
adc
shll
xor
ret
nop
jb
adc
add
movsb
mov
inc
bound
add
mov
dec
mov
sbb
shl
and
sti
int
les
jecxz
fnsave
jne
adc
mov
popf
test
or
xchg
ret
or
or
movsl
dec
loopne
stos
test
mov
cmpsb
fwait
test
pop
out
sahf
xchg
inc
je
dec
test
cli
enter
xchg
jle
push
es
mov
mov
loope
sub
push
aad
xchg
aas
popf
mov
iret
dec
dec
mov
mov
in
cld
stos
movsb
shl
adc
jle
lds
and
jb
ficoml
aas
in
jmp
out
add
xchg
mov
adc
mov
in
push
add
or
add
cmpsl
pop
fimuls
cmc
cmpsl
jmp
stos
xor
or
in
xor
mov
fcompl
inc
dec
and
outsl
xor
cmp
shll
cli
test
dec
ss
shl
pop
push
js
or
fildl
in
xchg
or
dec
sarl
cld
aam
rcl
insl
lcall
lcall
push
aas
lcall
rcll
cmp
lea
lcall
xchg
push
and
lds
cmc
add
test
call
cmp
pushf
mov
xchg
push
cld
mov
aad
cmp
test
pushf
fistps
js
jecxz
sub
xchg
movsl
xchg
loopne
mov
push
shrb
jnp
push
int3
jl
shll
hlt
jmp
mov
mov
mov
jnp
fidivrl
es
jle
daa
cli
sbb
scas
inc
push
dec
mov
stos
mov
mov
mov
xchg
rcrb
push
mov
aaa
int
jno
das
imul
sarl
std
and
imul
push
js
dec
pop
sbb
test
leave
es
sub
mov
jmp
dec
bound
int
lods
jmp
sub
mov
arpl
cld
mov
jmp
cmpsl
mov
jecxz
cmp
aam
rorl
jmp
push
push
and
xor
jne
rcll
pop
movsb
sahf
cld
and
adc
mov
xor
loope
shrl
xchg
out
and
add
pop
paddd
fcoml
cmpl
mov
in
mov
ljmp
mov
loopne
push
sbb
out
pop
and
adc
cmpsb
lods
add
add
pushf
cmc
mov
decb
lcall
ret
pop
cs
cmpsl
adc
orl
mov
std
push
sub
dec
cmp
das
ds
fnstcw
xchg
or
out
fmull
mov
neg
jg
jmp
sub
bound
dec
pop
lcall
pop
sbb
pop
sbb
jl
std
dec
pop
lcall
dec
cmp
adc
shlb
jge
pusha
rcr
add
call
xlat
arpl
jmp
lret
inc
adc
test
scas
inc
loop
xchg
cmp
test
stos
cmp
rcl
jne
mov
arpl
dec
inc
or
jmp
les
jae
sub
mov
mov
adc
xchg
mov
test
pop
outsl
xor
icebp
dec
xchg
lds
xchg
or
nop
aad
rclb
stos
cltd
inc
lods
ret
mov
loop
neg
mov
aaa
lods
pop
or
jo
add
movsl
cmp
lock
in
add
adc
imul
enter
jno
pop
stc
test
push
push
notl
inc
paddusb
xor
popf
pop
dec
cmp
icebp
dec
sub
mov
or
fsubl
lahf
sbb
xlat
or
cld
or
scas
cmp
jnp
inc
es
outsl
push
inc
cmp
das
adc
lods
into
movsb
sub
jne
enter
scas
pushf
adc
or
mov
mov
mov
aam
mov
rorb
adc
enter
and
sub
aam
test
loope
sub
mov
fmull
into
push
aad
mov
inc
cmp
cwtl
iret
nop
dec
mov
push
adc
outsl
mov
sub
out
pop
mov
xchg
pushf
pop
scas
jle
push
pusha
push
push
shl
inc
inc
movsb
mov
cli
mov
push
sub
jne
sub
pusha
loopne
pop
mov
mov
sarl
xor
add
mov
ds
add
inc
sbb
repz
aas
pop
pusha
loopne
pop
or
fcompl
out
ljmp
in
aam
aam
mov
faddp
jae
jne
dec
mov
and
xchg
sub
pop
fmull
insl
push
lods
lods
mov
lea
push
aad
mov
xchg
dec
fs
dec
mov
nop
adc
lcall
sti
pop
dec
xor
push
aam
fcompl
jns
imul
cmpl
jnp
and
pop
movsl
jl
stc
popl
testl
cld
sbb
sbb
sahf
push
jb
and
out
sub
jnp
outsb
data16
in
add
lahf
addl
sbb
pop
inc
stos
or
andl
dec
dec
inc
hlt
ret
push
out
mov
insb
jb
outsb
adc
jae
sub
mov
ret
jle
mov
mov
sarl
push
cld
xchg
outsb
stc
mov
cltd
push
aaa
sbb
mov
or
stc
xor
mov
and
sub
enter
lea
pop
pand
ljmp
ret
add
out
jle
jae
push
cld
imul
mov
sbb
jbe
lret
pop
mov
jecxz
jl
or
lds
push
mov
pop
jle
in
decl
pusha
jl
cld
dec
cmp
jl
pop
dec
popa
mov
clc
jle
mov
cmpb
adc
hlt
add
rorb
cmp
mov
jno
adc
lret
movsb
mov
mov
sub
mov
jl
bound
push
enter
imul
dec
mov
fstpt
pop
dec
lret
movsl
push
xchg
lret
mov
sub
or
outsb
dec
clc
mov
push
leave
xor
jo
mov
ror
pop
mov
in
and
sbb
sti
xchg
outsl
or
mov
stos
xchg
mov
push
insl
scas
mov
dec
cmpsb
std
push
loope
test
sub
xchg
mov
lds
in
cld
mov
lds
inc
fsubl
pop
push
xchg
bound
adc
popf
inc
fs
cwtl
push
int
pop
and
jl
xchg
cwtl
stos
stos
xchg
lods
dec
xchg
mov
pop
xchg
mov
pop
scas
ds
std
mov
adcb
test
jae
stos
les
mov
pop
lds
lea
mov
jmp
loope
mov
adc
add
in
out
xor
rorl
cld
pushf
push
pmaxub
lcall
and
cwtl
outsb
lret
lds
xor
imul
mov
cmc
jb
jbe
rcll
fs
clc
popl
sub
mov
pop
into
push
mov
add
sbb
popa
or
leave
and
xchg
adc
movsb
mov
dec
adc
sub
pop
sbb
loopne
testl
dec
mov
mov
ror
or
cs
push
jmp
dec
out
idivb
dec
dec
pusha
fcompl
inc
fdivl
jne
xchg
pop
adc
pop
mov
fistpll
xchg
jle
jmp
popa
fcmovnu
xor
mov
ds
aaa
sub
push
push
loope
pop
inc
mov
daa
stc
in
or
lcall
std
cmp
nop
mov
inc
test
or
ljmp
fimull
not
test
jle
aas
testb
inc
push
mov
lret
into
test
pop
hlt
jle
out
fcomps
mov
inc
in
ljmp
xchg
pop
clc
cmp
jae
cmpl
sub
mov
adc
push
xor
jle
add
aam
fildll
js
das
fldl2e
sub
cmp
sbb
mov
sbb
in
clc
mov
push
nop
push
dec
idivb
daa
and
add
mov
stos
ja
stos
mov
push
sti
cmp
and
loope
sub
std
loopne
xor
mov
jmp
int
fsub
movsl
dec
add
loop
dec
ficoms
bound
scas
movsb
fstpt
icebp
add
ds
or
movsb
and
push
and
clc
xor
ds
int3
dec
test
iret
sarb
adcb
sbb
pop
push
insl
pop
xchg
roll
push
pop
rorb
stos
xchg
jmp
or
cld
dec
sub
popf
daa
out
mov
jo
ljmp
loope
dec
pop
xor
int3
test
jmp
mov
mov
push
repz
pushf
fmulp
bound
jecxz
out
repz
and
pop
push
or
loope
jg
cmp
push
add
subl
adc
dec
shr
dec
pop
lahf
incb
fsubl
mov
inc
sub
shll
dec
dec
ljmp
insb
mov
pop
inc
or
mov
sarb
sub
enter
sbb
mov
adc
addl
dec
je
jmp
pop
cld
or
add
jbe
xchg
sbb
mov
adc
aam
cmp
dec
adc
dec
out
loope
les
clc
fimull
adc
sti
sub
cmp
mul
fcompl
jbe
cld
xchg
xchg
mov
add
or
mov
movsb
cmpsb
xor
movsb
cmp
mov
push
jmp
and
shl
fsubrl
jp
addb
ret
bound
fcoml
mov
jbe
mov
imul
cmp
inc
lock
insb
ja
push
cmpsb
stos
sub
xchg
icebp
pop
sbb
shrl
cmp
movsb
js
stos
leave
nop
aad
in
stos
and
sti
mov
xchg
xchg
aas
inc
push
xchg
sub
dec
faddp
movsb
enter
pop
adc
cmpsl
xchg
loop
fwait
stos
out
pop
mov
iret
lea
mov
xchg
iret
pop
test
mov
stc
fdivr
jmp
inc
inc
shl
pop
lcall
fmuls
adc
sub
js
ds
in
inc
das
shl
push
cmpneqps
mov
push
push
xchg
ja
mov
int
dec
add
mov
mov
and
stos
aam
push
mov
jge
xchg
cmpsb
add
mov
out
in
decl
cld
ss
jecxz
aad
test
dec
push
cmp
inc
adc
or
or
xchg
sub
pop
jne
in
stos
aad
shll
mov
cmpsl
into
repnz
push
lea
and
mov
pop
subl
int
lret
sub
adc
add
loope
dec
or
mov
sti
daa
mov
cmpsl
add
push
ja
loopne
in
test
pop
push
xlat
lret
cltd
mov
ror
lahf
pop
push
lahf
out
loopne
push
in
xchg
jb
test
inc
push
xor
cmp
das
xor
and
or
push
cld
out
aad
mov
sub
into
arpl
ljmp
push
mov
fisubs
add
mov
jle
stos
xchg
insl
lock
aam
push
std
repnz
mov
push
sub
fisubl
fidivrs
mov
jle
push
fisubrl
fnstsw
jne
movsb
test
nop
push
pop
stos
inc
inc
push
into
mov
inc
jo
push
lret
xor
push
mov
jns
jne
mov
push
sqrtps
fwait
sub
inc
mov
mov
inc
mov
dec
adc
test
pop
in
and
mov
insl
enter
movsl
jmp
loope
push
movsb
adc
mov
adc
add
icebp
stc
jbe
push
sbb
enter
lcall
scas
sub
shrl
roll
out
ret
in
pop
and
mov
pop
hlt
in
jle
mov
xor
sbb
dec
push
jecxz
cwtl
shr
adc
push
fsubs
mov
xchg
ror
push
jmp
push
jo
xchg
pop
xor
fmuls
dec
sahf
scas
fidivs
mov
mov
sub
cmpsl
fiadds
jb
into
mov
inc
in
xor
jle
icebp
clc
test
nop
rolb
pop
out
jecxz
push
mov
mov
add
mov
dec
icebp
popf
js
or
fstl
pop
adc
sti
or
push
mov
jg
mov
shrl
ljmp
icebp
add
inc
mov
mov
scas
lcall
cli
cmc
dec
mov
stc
xchg
xchg
or
rclb
add
loope
mov
pop
icebp
cmp
lock
negb
lods
push
std
mov
jmp
cmp
loopne
mov
arpl
jle
inc
dec
mov
ficomps
test
or
in
or
mov
sbb
cld
jl
push
sti
ljmp
stc
mov
in
testb
ror
pop
call
sbb
negb
xchg
mov
add
mov
std
xchg
in
xchg
xchg
push
jno
xchg
xchg
pop
dec
push
add
mov
pop
enter
lods
out
push
fnstenv
repnz
mov
push
out
adc
test
mov
mov
jo
mull
and
sub
in
cli
int
out
push
cld
and
subb
mov
nop
shrb
push
jl
divl
icebp
out
push
mov
les
sbb
movsb
pusha
dec
xchg
mov
fildll
repz
add
cmpsb
notb
repz
mov
das
stc
mov
cld
sarb
mov
dec
in
out
les
sti
dec
xchg
inc
loope
xor
test
or
pop
cmp
shl
stc
xchg
or
daa
imul
aaa
inc
jp
std
push
jnp
or
pop
fdivp
cmp
sub
mov
scas
sub
out
daa
divl
cmp
je
xchg
lods
mov
stc
movsl
add
jns
mov
fnstsw
push
test
mov
mov
and
lds
pop
xchg
jbe
test
add
mov
test
sub
bound
popl
pop
pop
scas
inc
lods
mov
mov
mov
push
lret
and
gs
mov
lock
sub
and
dec
sarl
xchg
pop
lds
jmp
xchg
mulb
adc
mov
or
or
cld
sub
test
lea
jae
adc
inc
cmp
ss
push
adc
add
das
jl
dec
xor
dec
idivl
dec
inc
cmp
jne
mov
dec
bound
nop
push
sahf
call
adc
rcrb
cltd
aas
fidivrl
xchg
fdiv
and
dec
clc
xchg
add
xor
imul
pop
or
fisubl
and
mov
pop
xchg
rcll
mov
lods
cld
pop
out
mov
sbb
movsb
aam
mov
or
std
popa
cmp
inc
pop
shl
int
push
pop
push
mov
mov
sub
testb
dec
pushf
mov
insb
leave
and
and
outsl
in
inc
mov
bound
enter
mov
jmp
or
dec
inc
mov
inc
adc
and
cmpsl
fsubl
push
adc
xchg
test
hlt
pop
push
sbbl
bound
push
or
cmp
xor
lret
or
cmp
fsubrl
test
mov
mov
cmc
mov
mov
pop
orb
lods
cmp
mov
mov
mov
rcrb
aaa
lret
sub
mov
hlt
adc
sbb
repz
push
fdivrl
scas
dec
jge
je
cmp
mov
sti
jb
lds
dec
inc
push
jmp
incb
mov
sub
out
je
dec
insb
gs
jnp
push
movsb
ss
les
mov
push
int3
outsb
cmp
pushf
dec
into
shlb
mov
hlt
xlat
mov
sbb
cmp
jne
lcall
paddusb
out
adc
cld
lret
mov
insb
mov
and
adc
pop
dec
mov
testl
inc
jnp
or
jle
inc
pop
jmp
jle
inc
dec
js
popa
fisubrl
add
fstps
mov
ljmp
jl
push
fcmovbe
out
mov
nop
push
arpl
xchg
lret
shr
push
xchg
push
push
test
pop
shlb
fimull
sub
movsb
insl
mov
shr
bound
nop
ss
rorl
shrb
xchg
movsb
cld
dec
out
mov
mov
outsb
jb
jnp
and
ds
mov
je
jmp
jbe
test
mov
jle
and
movsl
nop
add
mov
mov
pusha
dec
push
std
int3
loop
in
cmp
sub
mov
mov
jge
cmp
adc
push
xor
fs
test
fnstenv
inc
cld
sbb
cld
mov
adc
pop
mulb
and
adc
fsubrl
mov
into
shll
xor
fsubl
shlb
lret
pop
and
scas
add
cli
test
dec
scas
loopne
mov
test
out
loope
mov
cmp
lods
dec
cmp
xchg
and
mov
stc
scas
mov
sub
jae
insb
mov
pop
aam
sarb
sbb
subb
mov
ss
adc
mov
xchg
movl
loope
mov
repnz
fnstenv
jecxz
sub
adc
sub
xchg
out
dec
cld
jp
call
or
inc
xadd
push
cmpsb
xchg
mul
test
mov
stos
xor
xchg
insl
xchg
sbb
rorb
sub
adc
aam
sti
lret
cli
inc
ja
lea
and
adc
adc
mov
or
xor
mov
pop
jnp
fwait
adc
lds
test
pop
fwait
leave
pop
or
jb
and
test
dec
mov
and
dec
lods
add
js
test
stos
push
movsl
dec
or
cld
mov
push
jecxz
mov
mov
lret
jne
fwait
gs
and
roll
repz
mov
inc
jbe
push
pop
in
stos
push
mov
xchg
daa
fstps
add
clc
pop
stos
push
mov
ljmp
outsl
fs
cmpsl
cltd
add
sub
cmp
add
shll
test
les
inc
mov
shr
aam
loope
or
mov
mov
imul
sbb
xlat
push
imul
cld
loope
jle
pusha
shrb
testl
cmp
fcmovu
and
lret
shll
sbbb
cmp
cmp
decl
xchg
push
cld
loope
pop
jg
jp
adc
inc
cmp
sub
arpl
sbb
cmpsb
insl
dec
imul
pop
pop
push
or
pop
cmp
popf
clc
loop
outsb
xor
pop
inc
movsb
or
jns
jnp
in
hlt
lret
inc
xchg
nop
mov
mov
jmp
inc
pop
and
pop
xor
jle
imul
mov
add
into
mov
xchg
dec
loope
push
neg
pop
pop
std
pushl
push
fidivrs
loope
lods
cld
insl
xor
xchg
xchg
inc
rcr
in
je
in
mov
dec
ljmp
mov
stos
pop
push
mov
mov
nop
inc
dec
jns
scas
mov
je
and
cmpsb
aam
xor
insb
and
inc
mov
sub
and
sub
repz
sub
mov
hlt
cld
mov
cwtl
mov
fadd
data16
aas
loopne
fsubl
mov
in
movsl
push
dec
sub
sub
pop
es
jge
ljmp
pop
mov
lods
inc
sub
insb
xchg
xchg
jge
inc
push
sub
nop
mov
mov
fisubrl
rorb
cltd
sbb
loopne
lahf
mov
inc
mov
aad
mov
add
roll
pop
cmp
sub
repnz
add
jl
imul
mov
mov
leave
sbb
pop
std
lods
aaa
push
movl
rol
jge
xchg
adc
jle
push
pop
and
mov
jle
mov
cmp
mov
lods
push
jg
pusha
xor
mov
dec
dec
jbe
sub
pop
mov
outsl
aam
scas
out
add
stos
cmc
sbb
outsb
push
mov
ss
or
and
insb
xchg
mov
loop
pop
pusha
jne
decl
or
in
add
xor
fidivl
or
push
xchg
cld
adc
lcall
les
out
dec
ja
rcl
popf
in
es
nop
adc
mov
push
js
jb
mov
nop
push
add
jns
push
push
inc
out
fsubrl
sub
and
pop
xchg
sub
out
mov
pop
popa
sub
mov
mov
loopne
rol
inc
shll
fwait
out
mov
push
test
push
push
cmp
movsb
add
out
lret
mov
jl
pusha
inc
add
dec
pop
je
lds
enter
testb
mov
and
hlt
cmp
mov
inc
clc
xorl
aam
adc
mov
dec
push
ficoml
xchg
mov
jbe
cmpl
adc
lock
enter
mov
dec
fdivrl
shll
push
inc
adc
lds
jle
inc
ret
fisubs
sub
jl
dec
jb
cmpsb
lahf
arpl
cmc
call
sub
push
lret
sbb
jnp
shlb
pop
movsb
dec
ds
adc
stos
rclb
and
jecxz
addr16
pop
cmp
sbb
pop
and
mov
dec
pop
ret
jg
mov
mov
cld
fsubrs
aam
cmpsl
scas
mov
scas
std
iret
into
mov
jnp
pop
adc
push
mov
inc
sub
out
inc
data16
jb
push
mov
lea
jecxz
in
and
mov
cltd
aas
idiv
adc
push
cmp
mov
add
leave
and
sbb
pop
fidivl
imul
stos
bound
or
xchg
movsb
imul
aam
testl
fdivrl
xchg
ficoml
sarl
push
fsubrl
fisubl
push
cmp
ret
cmp
pop
mov
cmpl
in
into
or
xchg
xchg
mov
test
daa
and
inc
jle
inc
pop
inc
popa
bound
stc
dec
inc
push
aad
dec
pop
enter
mov
mov
jle
mulb
rorl
test
outsl
and
jnp
pop
jg
sub
sbb
std
aas
jno
lods
scas
ds
test
lahf
in
cmp
cmp
enter
sysret
xchg
aam
fdivl
adc
push
mov
pop
test
jae
xor
ja
sbb
mov
cld
or
mov
or
push
adcl
xchg
inc
rcl
mov
adc
aas
std
add
mov
stos
mov
arpl
andl
and
push
lret
fisttpll
jno
push
mov
imul
inc
inc
mov
push
out
xchg
mov
test
dec
sub
jnp
sub
dec
mov
test
aam
cmp
flds
mov
sub
jb
fsubrl
roll
lcall
aaa
cmp
stos
fwait
jmp
cmpsl
outsl
cmp
sub
rcrl
stos
lret
into
xchg
loope
push
scas
xchg
cmc
lcall
adc
loopne
mov
pop
insb
mov
mov
or
leave
sub
mov
cmp
addr16
lea
setle
cmp
aaa
mov
pop
jp
fnstsw
fists
xchg
popf
and
lods
loope
enter
andl
jle
jecxz
pop
mov
scas
in
mov
pop
xor
mov
fsubrl
jge
cmpsb
inc
jle
pop
pop
jb
xchg
mov
loopne
aaa
jns
pop
sub
in
cli
aam
icebp
iret
fildl
outsb
xchg
in
aaa
in
mov
fs
or
popa
insb
jnp
scas
shrl
test
dec
testl
mov
adc
adc
inc
scas
into
test
lods
std
aaa
movsb
enter
sub
adc
xlat
in
mov
loopne
in
and
icebp
imull
int
rol
jmp
mov
popf
mov
jae
sub
push
mov
sarl
test
jge
ret
mov
lea
jbe
das
ret
or
and
and
xchg
jne
cld
xchg
sbb
pop
movb
add
in
mov
sub
lock
out
mov
lods
pushf
push
pop
jmp
add
nop
les
cli
xchg
fsubl
sbb
jb
pop
cmp
sub
pop
mov
xchg
pop
cmp
ror
rcrb
adc
gs
popa
or
xchg
mov
int
lret
sbbl
movsb
and
rorl
fs
dec
mov
std
dec
mov
sub
xchg
push
neg
sbb
pop
in
leave
push
pusha
test
pushf
add
les
shll
xchg
stc
gs
adc
sbb
xchg
sti
imul
cs
pop
fimuls
das
cmp
sarl
cltd
adc
mov
cs
fcoml
mull
in
adc
push
or
loop
inc
inc
adc
gs
lcall
mov
pop
stos
gs
stc
clc
mov
movsb
xor
push
push
push
jmp
cli
mov
adc
dec
addr16
dec
pusha
adc
out
fdivl
sub
fdivrs
test
test
lods
sbb
mov
out
push
aaa
mov
xlat
mov
loope
leave
xchg
out
pop
mov
inc
xor
aaa
mov
rorl
int3
dec
adc
sbb
or
xor
test
mov
imul
sbb
shl
dec
enter
cld
push
aaa
movsb
add
mov
mov
sbb
and
outsl
pop
push
push
lods
shl
fsubl
push
into
jno
scas
jno
jae
icebp
add
xor
mov
dec
je
lret
mov
sub
adc
pop
call
xor
inc
push
sbb
jle
inc
and
mov
mov
push
push
sub
push
testl
mov
xchg
sub
fs
push
leave
and
and
movsb
dec
cwtl
or
mov
jbe
inc
dec
xchg
pop
mov
push
xchg
mov
pop
out
jg
repnz
add
xor
in
dec
ljmp
jae
test
sbb
dec
jo
xor
or
sub
pop
dec
not
mov
hlt
sbb
cld
jg
lret
lods
test
mov
cwtl
ret
jmp
call
hlt
jg
adc
loope
inc
cmp
mov
add
ljmp
push
int
adc
push
jno
imul
loop
and
out
lds
bound
test
rcll
mov
stos
fcomps
stos
call
mov
ror
lea
flds
loopne
sbb
mov
pop
push
mov
popf
imul
ljmp
xchg
les
popf
lret
out
xchg
lea
cmpl
mov
jb
cmp
pop
pop
scas
daa
xchg
test
fcompl
pop
jecxz
sbb
xor
cmpl
mov
out
pop
pushf
fmuls
mov
es
lea
loope
push
xor
or
ss
cmp
jle
cmp
nop
gs
mov
scas
mov
and
icebp
mov
push
mov
fcmovnbe
fiadds
mov
or
and
mov
xor
adc
mov
lods
ret
xchg
ret
dec
sub
mov
mov
jmp
sbb
xor
jne
rcrb
push
dec
repz
ja
negb
cmpsb
push
sti
xor
insb
xor
cld
sbb
andps
add
test
scas
aad
je
adc
aam
jl
insl
repnz
lea
cmp
push
push
rorl
push
jecxz
decl
insb
leave
sbb
popf
cmc
int
push
dec
sub
xchg
call
ret
shl
inc
xor
mov
mov
je
cmp
mov
pop
out
std
xchg
movsb
inc
sahf
in
scas
dec
push
mov
cmp
int3
call
mov
push
push
iret
adcb
arpl
dec
std
cltd
dec
or
shlb
pop
andl
hlt
xchg
xchg
mov
jns
and
inc
lds
cmc
mov
sub
mov
loopne
lret
mov
sub
fadd
cli
xchg
push
mov
jmp
repz
xchg
dec
das
loope
ret
sub
mov
sub
push
cmpsb
jmp
sbbb
dec
and
sub
cmp
ficomps
adc
ds
dec
cmp
pop
dec
add
xor
pop
mov
dec
and
mov
inc
shll
or
movsb
imul
jg
frstor
xchg
lods
xor
mov
stc
jl
xchg
pop
inc
inc
cmpsb
into
cmc
call
aam
inc
incb
jp
sbb
push
data16
push
hlt
pop
js
ljmp
addl
sbb
mov
inc
push
add
xchg
cmp
mov
mov
jmp
icebp
inc
sbb
or
xor
test
sub
pop
or
lret
pop
sbb
cmp
or
mov
xor
lds
in
xchg
into
std
stos
pop
cmp
mov
test
bound
sub
nop
dec
sub
lea
outsl
and
xor
cmpsb
lock
or
sub
in
fdivs
in
out
mov
aam
and
or
inc
jnp
in
mov
xchg
lock
inc
mov
into
cli
popa
cli
cmp
adc
pop
inc
or
dec
sub
ret
clc
jnp
and
cli
fsubrl
les
out
push
xchg
ljmp
ss
in
sti
mov
push
cli
sbb
cmp
sbb
push
pop
mov
mov
enter
scas
mov
xchg
pop
pop
cs
add
jb
sbb
push
leave
into
xchg
push
mov
jp
mov
dec
mov
inc
or
mov
into
xor
mov
jmp
mov
mov
cmp
and
fcoml
sub
pop
clc
inc
ljmp
xchg
push
cld
xlat
push
xchg
fcoml
mov
mov
lock
mov
xchg
sti
outsl
push
cld
repnz
mov
sub
sbb
clc
jo
mov
xchg
pop
enter
mov
imul
roll
mov
xlat
gs
mov
xchg
aad
sub
stos
jl
cmpsb
mov
or
fdivrp
fdivl
dec
push
icebp
or
mov
scas
repz
inc
imul
dec
mov
orb
lret
pop
dec
out
pop
pop
jle
lret
das
add
dec
stos
movsl
dec
lods
aas
xchg
je
in
gs
cmpl
xlat
cmpsl
icebp
std
or
stos
dec
dec
and
ljmp
cwtl
jns
inc
decb
add
mov
xchg
push
jns
int
stc
rorl
aad
in
and
scas
test
int3
addr16
rorb
xor
mov
and
fcmovnbe
lret
cltd
pop
mov
or
cmc
inc
xchg
js
in
add
jb
mov
xchg
sbb
inc
stc
movsb
call
jl
xchg
addl
repz
test
shll
cltd
mov
ja
adc
xchg
addr16
cmp
jb
aaa
test
add
ja
xor
fs
lret
mov
pusha
xchg
idivl
jmp
ss
aam
lcall
adc
fdiv
call
call
out
popf
jge
lret
dec
aad
ljmp
ds
popa
cld
movsl
add
jl
mov
dec
cmp
jecxz
scas
or
add
popa
push
sahf
fs
out
mov
xchg
mov
add
adc
repnz
sbb
xchg
stos
xlat
loope
loope
dec
mov
popf
adc
pop
cmp
cmp
lret
dec
xchg
test
and
inc
lea
mov
loope
movsb
outsl
repz
fisttpl
dec
jmp
loope
push
mov
inc
in
push
rcrb
jno
cld
hlt
mov
jmp
inc
inc
stos
sbb
sysret
xchg
pop
testb
xchg
ds
and
pop
inc
out
cmp
mov
sbb
pushf
add
xchg
pop
adc
punpckhwd
and
push
cld
iret
mov
add
jns
lea
ud1
mov
jmp
sub
push
lcall
jp
leave
pop
lods
test
pop
push
arpl
in
pushf
shl
cmp
push
pop
sub
int
cmp
add
dec
mov
jb
mov
dec
movsb
sub
mov
rcll
shrl
xorl
jge
cld
and
jbe
shll
jno
into
bound
pop
jbe
ret
in
sub
push
sub
xchg
inc
mov
lcall
xchg
xor
ljmp
pop
sysexit
sub
int
push
jecxz
sub
lret
xchg
aam
call
mov
ja
mov
push
cmc
mov
mov
or
mov
sbbb
mov
fisttpll
lcall
mov
jecxz
or
or
adc
mov
fsubl
cmp
out
arpl
shlb
push
test
inc
les
out
add
sahf
imul
daa
dec
or
and
mov
stc
jmp
and
insl
lods
jle
jbe
arpl
add
or
outsl
daa
sbbl
add
mov
xchg
sbb
xor
dec
adcb
ja
fwait
cld
sub
gs
mov
cltd
mov
push
push
xor
cwtl
ja
js
push
jmp
insl
insl
inc
lods
cmc
add
rclb
mov
add
pop
fs
mov
aad
test
pop
mov
test
jb
sbb
out
sbb
or
loope
pop
not
addr16
repnz
ds
enter
dec
xor
jb
mov
sti
ret
fmull
mov
in
ret
stc
into
inc
mov
cmp
and
pop
or
jle
scas
shl
imul
les
dec
out
cld
pusha
dec
pop
cmp
test
fisubrs
push
je
or
int
lcall
das
sub
inc
in
xor
leave
sahf
in
enter
cmpsb
xchg
lret
add
jo
xchg
dec
fimuls
lahf
xor
ret
and
ret
xchg
pop
int3
push
adc
adc
out
loopne
push
xor
into
cwtl
add
rcrb
movsb
gs
dec
sbb
xchg
mov
aam
mov
fsubrp
pop
cld
push
mov
mov
loop
faddl
mov
adc
nop
and
int
test
mov
icebp
aas
jl
lcall
inc
ljmp
stc
roll
jns
aas
ja
adc
or
add
fwait
test
jg
jl
cwtl
push
pop
out
jp
test
roll
jbe
mov
insl
pop
mov
movsb
outsb
mov
jne
fiaddl
adc
inc
xor
in
pushf
enter
push
mov
int
and
aam
adc
mov
rol
add
popf
divb
sarb
xchg
inc
les
mov
es
rcr
jo
mov
add
cmp
clc
out
stos
icebp
or
sub
inc
repnz
pop
pop
mov
gs
cwtl
loope
adc
hlt
das
cld
sbb
hlt
pop
in
test
outsl
pop
mov
lcall
mov
mov
push
mov
dec
fdivrl
repz
enter
xchg
and
and
imul
loope
shlb
enter
adc
scas
jnp
mov
mov
jmp
shrl
seto
pop
ljmp
call
pop
push
add
inc
stc
push
pusha
inc
ret
mov
adc
add
rcl
jae
sub
jno
pop
mov
movl
mov
add
rorl
mov
and
mov
xchg
loopne
arpl
adc
pushf
jne
mov
aaa
xor
imul
frstor
mov
add
and
xchg
cs
jns
es
loop
cld
mov
ja
lods
test
or
sti
sub
mov
sti
mov
in
int3
bound
push
cli
jae
push
test
popf
lret
lcall
sbb
scas
pop
xchg
and
stc
popa
push
push
ret
out
insb
fcompl
test
adc
gs
aas
fimull
hlt
adcl
enter
sahf
mov
sub
adc
ja
pop
xchg
mov
adc
out
adc
cmp
jg
rcl
mov
rcl
dec
cmpsl
jge
faddl
daa
jb
fsubl
pop
fcmove
ljmp
cmovle
xor
push
pop
dec
mov
insb
mov
inc
out
sub
icebp
je
mov
add
mov
pushf
xchg
mov
mov
and
leave
fldt
insl
jecxz
clc
mov
cmp
orl
cmp
add
mov
sbb
mov
push
adc
fsub
adcl
test
jle
test
inc
pop
sub
cmp
aas
jo
sahf
lods
pop
jp
in
xor
and
pop
or
lea
lods
test
repnz
and
jno
jle
xor
mov
cmpsl
in
cmpps
adc
xchg
fldcw
stos
iret
test
fcoml
mov
cld
mov
gs
lea
ret
cli
mov
and
sar
cld
pop
lock
pop
lret
lahf
cmp
add
and
or
xor
cwtl
stos
test
push
and
iret
js
insl
js
sub
fucomip
sbb
in
lsl
sbb
pop
into
jne
mov
inc
sarl
ds
mov
cld
jg
jmp
test
iret
cmp
xchg
mov
pop
jmp
lock
test
int3
mov
loop
jg
sub
mov
xchg
fimull
push
sub
mov
dec
ja
or
movsl
sub
add
dec
xchg
aas
in
hlt
and
popf
fidivrs
rcl
and
jno
mov
pop
test
scas
shlb
dec
repz
insl
add
jl
adc
cmp
jb
inc
icebp
aas
jno
sbb
aas
ds
rcr
fmull
dec
cld
ret
inc
mov
aas
xchg
push
push
arpl
pop
mov
stc
adc
adc
jp
ss
jne
rcll
sub
clc
scas
fiadds
aas
cmc
rcll
lret
int
cmp
cmp
rcr
pop
fistps
push
jmp
xchg
cmp
insb
loope
and
dec
push
or
icebp
inc
cld
fldt
cld
cmp
in
loope
loope
inc
test
imul
or
mov
xchg
pushf
mov
subl
adc
cmp
or
imul
stos
push
xlat
fidivl
dec
push
xchg
and
xor
or
sub
fimuls
add
or
movl
and
jb
cmp
mov
mov
loope
xchg
aad
mov
add
pop
fidivs
jle
sub
xor
or
mov
cld
les
mov
sub
sub
popa
mov
aam
xlat
push
pop
or
std
test
lcall
fwait
int3
in
inc
outsl
incb
jp
mov
lret
sbbl
pop
int3
scas
rol
scas
and
fisubrl
push
test
clc
test
jns
mov
popa
and
fadd
jle
pop
fimull
je
aas
ljmp
jnp
call
xor
iret
push
sub
arpl
sub
dec
mov
jb
xor
hlt
sarb
outsl
adc
push
inc
jl
sub
inc
outsl
dec
cs
add
shlb
jl
add
mov
int
jmp
xchg
inc
mulb
inc
jp
rorl
xor
add
xchg
cmc
mov
push
cmpl
hlt
inc
mov
std
fcmovnbe
call
adc
incl
or
pop
xlat
add
test
les
mov
sbb
xchg
inc
xchg
enter
cltd
repnz
popa
dec
int3
lods
mov
cmovs
add
mov
enter
or
xchg
test
cld
stos
clc
pusha
test
xchg
xchg
movsl
cld
inc
jbe
dec
sahf
shlb
and
lret
sbb
fucom
scas
sub
push
movsl
dec
rcrb
pop
and
mov
push
imul
and
cld
dec
mov
mov
cmp
ficomps
addl
in
das
xchg
dec
sbb
push
inc
aaa
cmc
sbb
sub
mov
xchg
and
test
sub
in
fsubl
and
pop
pushl
or
xor
sub
movsl
or
cld
out
movsb
jb
xor
fnclex
faddl
fisttps
jns
iret
cwtl
inc
and
mov
data16
xor
cmpsl
ret
fnstcw
ret
xchg
and
inc
push
jb
inc
pop
cltd
in
cld
and
jmp
and
daa
mov
aas
insb
xor
js
scas
outsb
clc
sarb
mov
pusha
jge
push
push
lea
loopne
cmp
mov
fstps
jl
xchg
jp
push
lcall
mov
mov
jge
insb
push
fnstcw
ret
repnz
fs
inc
pop
inc
bound
inc
inc
cld
iret
outsl
inc
ret
popa
bound
iret
jbe
aas
ror
ffree
xchg
jecxz
mov
sbbb
sbb
xchg
rcrb
adc
outsb
cld
sub
fsubrl
mov
cld
or
lret
rcr
scas
mov
cmp
dec
idiv
outsl
sub
sub
les
aad
mov
push
add
insl
xchg
stos
cmp
push
push
out
or
cmp
sbb
or
movsb
mov
sbb
fld
mov
dec
lock
cmp
inc
xchg
ret
stos
pop
and
xor
xchg
loop
sub
jp
loopne
ret
mov
push
push
lret
lret
testl
cmp
mov
jge
rorb
push
outsb
in
int3
mov
out
mov
movsb
push
jmp
sub
mov
hlt
adc
xchg
iret
xchg
lahf
repz
es
int
les
or
aam
xchg
xchg
cld
mov
sbb
std
jecxz
les
jne
mov
mov
adc
xor
aam
outsl
or
jae
add
popa
mov
pop
das
pop
jmp
test
mov
call
in
fs
adc
mov
loope
sahf
inc
int3
ret
test
sub
and
xchg
fnstenv
imul
sarb
sub
test
pop
mov
out
insb
jp
xchg
int
dec
sarl
rol
sbb
imul
mov
add
in
jle
cmp
icebp
ja
ljmp
mov
test
sbb
cld
shl
rcl
or
xchg
push
cmpl
leave
inc
push
inc
fildll
jecxz
test
leave
call
sahf
inc
aam
push
xchg
pop
mov
bnd
xchg
mov
ljmp
testb
fsubl
aad
pop
mov
add
xchg
rclb
mov
mov
ljmp
xchg
or
adc
loope
mov
lock
loop
mov
or
dec
ret
dec
in
out
rol
loopne
jle
cmp
jle
clc
xchg
leave
test
sub
clc
test
pop
int
sti
in
push
daa
shrl
cmp
xchg
dec
stc
inc
push
stc
dec
or
sub
or
mov
pop
cmp
dec
cmp
xchg
and
lret
or
mov
cli
xor
or
cmp
fs
rclb
test
rcll
in
xchg
mov
and
xchg
push
mov
lret
mov
out
int3
insb
push
jge
sub
add
cmp
pop
fidivrs
sbb
add
fmul
xchg
das
cmp
cmp
or
fsubrl
ficoml
iret
inc
test
imul
ret
inc
loopne
nop
xchg
push
test
rcr
dec
xorl
stos
mov
adcl
ret
ja
dec
xchg
out
jge
je
int
push
int
lcall
add
and
js
dec
std
dec
mov
add
jno
clc
push
fisubl
jp
xor
repnz
sub
pop
inc
rol
xor
xchg
mov
in
jl
ja
enter
decl
mov
in
cwtl
call
movsb
hlt
jp
cmc
int3
fistpl
cld
and
scas
icebp
adc
jns
movsb
dec
xchg
fmull
daa
mov
and
push
fisubrl
imul
mov
sub
iret
mov
test
dec
pop
rorb
in
xor
inc
aas
fnsave
popa
outsl
push
mov
jp
or
and
test
xchg
lds
mov
cs
mov
icebp
fbstp
lods
pop
loop
pop
and
fistl
cmp
mov
xchg
in
dec
imul
cmpsl
stos
fidivl
sbb
sbb
xor
push
and
mov
enter
jne
jne
bound
add
neg
jnp
cld
and
adc
dec
ja
xchg
inc
jbe
dec
or
call
data16
das
sar
rolb
mov
cmp
lret
sub
or
sub
adc
popl
push
dec
data16
sbbl
sbb
xor
fdiv
push
or
and
mov
xor
and
je
inc
cld
mov
cmp
sbb
or
in
mov
adc
imul
idivl
ljmp
mov
movsb
cld
xor
inc
rorl
icebp
roll
pop
ret
mov
sub
add
push
testl
add
mov
inc
not
sub
push
and
dec
aaa
shlb
ja
mov
pop
mov
inc
adc
pop
push
xchg
fwait
lock
jle
cmp
push
mov
jae
call
stos
clc
cmp
inc
sub
dec
fldl
dec
dec
in
sarl
dec
xchg
add
sub
jmp
test
xchg
pop
xchg
mov
shlb
add
testl
shll
fldt
sbb
test
ficompl
testl
mov
cmpps
fldt
cld
into
push
lcall
hlt
xor
mov
notl
in
jnp
pop
icebp
cwtl
jmp
cwtl
jmp
mov
je
pop
sbb
aam
inc
xor
sub
jo
in
enter
ret
push
out
jl
dec
mov
int
xchg
roll
repz
inc
jl
mov
in
pop
jb
nop
shrb
push
xor
in
iret
push
in
call
mov
push
cmc
loope
dec
inc
xchg
cli
outsb
arpl
lods
mov
sub
inc
push
lret
popf
ljmp
cmp
jecxz
push
pusha
push
or
daa
add
fsubl
cmc
xchg
jp
into
and
inc
inc
addr16
mov
dec
dec
mov
adc
sub
jl
xor
sbb
pop
jge
popw
fldl
addl
xchg
dec
rcll
mov
ss
movsb
push
sbb
fnstenv
sbb
fldl
add
push
push
inc
xchg
mov
std
into
jmp
xor
sbb
xchg
sbb
loopne
lcall
daa
mov
sub
mov
pop
out
mov
mov
sbb
dec
push
inc
mov
iret
adc
inc
mov
ja
sbb
lock
ss
pop
dec
mov
adc
push
std
push
cmc
or
jg
mov
fcmovu
into
jecxz
out
xchg
test
dec
shlb
cld
mov
pop
cmp
adc
jmp
cmp
sub
adc
sub
pop
or
adc
iret
data16
push
pushf
pop
test
pop
fwait
dec
fsubl
ds
lret
xor
push
mov
xchg
push
rcr
js
xchg
repz
pop
fsts
sbb
lods
movsl
xor
pop
repnz
jns,pn
jae
stos
mov
push
shrl
and
movsb
flds
scas
iret
jle
ss
movsl
shr
adc
in
xor
adc
js
int3
push
adc
and
outsl
cwtl
cld
rcll
stc
mov
lret
cltd
ret
sbb
daa
aam
test
movsl
lea
sub
aad
pop
push
ret
jle
push
mov
fcmovbe
cmpsb
pop
fdivrs
subl
adc
pop
push
dec
fwait
add
lea
push
fisubrl
decl
js
mov
and
cld
out
xor
cmpsl
arpl
inc
inc
std
movsb
mov
pop
cmp
lock
cld
lods
rcl
fisubrl
xchg
mov
cmp
mov
pop
xor
mov
adc
mov
rcr
popf
test
lock
ret
push
test
movsb
jp
pushl
xor
test
and
sbb
lock
daa
pop
xorb
pushf
stos
add
sbb
stos
mov
scas
xchg
popa
xor
pop
mov
pop
subb
jns
xor
xchg
jle
stos
pop
in
pop
dec
stos
lock
mov
inc
cmp
mov
inc
outsl
jbe
leave
adc
xchg
inc
pop
divl
gs
push
andb
mov
push
and
rorb
adc
xchg
jp
sbb
jge
xchg
pop
mov
aam
mov
sbb
push
les
ret
lret
shlb
mov
out
daa
sbb
pop
test
pop
dec
ljmp
out
addr16
ret
mov
sbb
les
icebp
jmp
adc
loop
adc
sub
test
mov
in
adcb
fsubr
icebp
pop
movsb
add
mov
mov
xchg
push
vphaddubw
daa
clc
sahf
outsl
hlt
test
push
mov
aaa
jecxz
push
ficomps
xchg
ljmp
test
lds
ljmp
and
scas
jne
jae
adc
cmc
xchg
pop
cmp
fnstcw
xchg
dec
out
aas
enter
add
or
xchg
adc
insl
cmp
and
sub
sahf
in
xchg
inc
jnp
pop
je
lret
ds
stos
jge
xchg
mov
push
inc
cld
lds
dec
pop
loopne
cld
mov
and
sbb
addl
in
push
jp
push
xchg
mov
stos
or
mov
jnp
or
inc
cmp
push
pop
pop
xor
xchg
aam
mov
inc
push
mov
mov
rcrl
inc
cmp
cmpsb
pop
jl
push
ficoml
cmpsb
mov
sub
fsubrp
push
in
mov
xchg
xchg
jo
into
clc
icebp
or
jp
jge
push
dec
mov
mov
addr16
scas
insl
popf
js
loop
fmul
mov
mov
xchg
fdiv
icebp
stos
cmc
sbb
pop
mov
dec
int3
addr16
xchg
fcomps
fdivr
xor
ja
xor
sbb
push
movsb
shlb
lahf
dec
iret
mov
repnz
jb
sub
mov
leave
ret
pop
xor
mov
lret
xlat
divl
sub
shlb
inc
dec
mov
cld
pop
ret
or
mov
xchg
inc
push
xchg
sar
inc
hlt
mov
add
ds
jmp
mov
fistps
imul
lret
push
add
pop
inc
cmpsb
inc
cld
ljmp
mov
out
or
pop
insb
sbb
mov
jnp
push
jo
insb
cmp
inc
rorb
cmpsl
jo
repnz
test
sti
insl
ss
fs
lds
fwait
adc
mov
stc
and
ljmp
pusha
xor
mov
in
mov
das
add
dec
or
pushf
clc
ret
cmpsl
mulb
adc
leave
fcomps
push
cld
adc
sub
lcall
or
mov
imul
jmp
fwait
cmp
fld
cmp
cld
je
pop
push
dec
and
and
or
hlt
in
in
sbb
jp
mov
imul
cmp
jmp
mov
jmp
push
scas
rclb
jle
fnsave
mov
xor
js
ret
mov
adc
and
idiv
sub
in
sbb
ds
cmp
dec
fldl
cmp
add
inc
cmp
loopne
fmull
mov
sub
shlb
sub
inc
jle
aad
stos
mov
mov
pop
or
cmc
xchg
and
pop
pusha
jo
repz
sbb
pop
lea
lock
hlt
mov
jle
lds
icebp
dec
rcll
push
xchg
push
ljmp
cmp
dec
cltd
int
mov
fstl
and
inc
into
icebp
arpl
xchg
adc
pop
test
out
sahf
pop
sahf
test
sbb
mov
outsb
sbb
jbe
and
hlt
pop
idivb
aad
pop
dec
and
daa
fstpl
xchg
addb
addr16
xlat
repz
jmp
or
mov
dec
leave
sahf
icebp
iret
into
adc
xorb
sbb
sti
mov
out
pop
adc
rol
xor
add
call
adc
adc
bound
cld
out
xor
sbbb
mov
sahf
lret
adc
les
fisubrs
sbb
sub
push
jge
dec
shlb
inc
mov
pop
sbb
loopw
fsubrl
mul
or
sub
sub
mov
sub
les
pop
jmp
pop
and
dec
jbe
mov
or
xor
inc
push
movsb
sub
or
fadd
xor
enter
sub
call
setno
in
fisubrs
mov
sbb
rcrb
dec
lods
add
sbb
aam
sub
daa
dec
dec
dec
lret
fimull
adc
fstps
mov
iret
xlat
test
inc
jmp
fldcw
sub
xchg
ljmp
inc
call
dec
cld
mov
mov
adc
jecxz
scas
dec
std
minps
pop
rcr
or
sub
jle
mov
fcoml
rorl
push
mov
push
js
les
imul
sub
std
push
lcall
into
sbbb
and
pop
repz
mov
test
inc
jecxz
adc
lahf
movsb
dec
dec
cld
addl
push
fldenv
sub
dec
xlat
and
mov
or
pop
push
lods
addb
cmpsb
sub
in
push
enter
jb
addl
cmc
cld
test
repnz
ret
stos
call
out
cld
leave
fisubs
lahf
mov
mov
je
hlt
daa
xor
cmp
notl
insl
push
xchg
mov
jbe
pop
pop
inc
pop
add
jnp
movsb
add
or
enter
or
xchg
push
arpl
xchg
imul
mov
mov
jns
aad
sub
into
xchg
jge
adc
cmp
leave
jbe
jns
out
mov
pop
sub
lock
fwait
cmp
push
adc
push
ret
mov
or
jg
fmulp
jmp
cmp
push
aad
icebp
dec
add
shll
cmpsl
jmp
arpl
ja
loop
sbb
push
or
xchg
inc
fsub
xchg
test
adc
cmp
xchg
pop
mov
cmpl
roll
fs
enter
imul
repnz
push
adc
jns
mull
inc
lods
pop
dec
in
adc
lea
pop
or
add
aas
xlat
pusha
lret
int3
mov
pop
jmp
insb
mov
cs
int
pusha
xor
mov
mov
mov
rcl
cmp
fdivl
sbb
cld
roll
pop
jl
clc
notb
cmp
or
cli
mov
mov
jg
movsb
ja
jne
xor
fsubs
faddl
dec
sbb
insl
test
pop
ficoml
pop
xor
arpl
movsb
push
xor
lret
imul
pop
jne
inc
sahf
test
xchg
shll
and
jnp
add
cmp
xor
aas
stos
pop
in
pop
rcr
int
cli
push
adc
into
in
add
repz
mov
or
or
cmp
push
jne
test
dec
negb
jno
xchg
mov
add
pop
lret
mov
cmpsl
sbb
jg
dec
daa
imul
dec
mov
and
sub
sbb
ret
mov
sub
shrl
push
test
mul
test
lret
fwait
push
sarb
jne
xchg
rcrb
fidivrs
movsl
lds
mov
cwtl
les
mov
inc
adc
add
or
push
lods
add
outsl
lahf
push
faddl
add
aam
jmp
and
icebp
shl
mov
ljmp
outsb
dec
inc
jb
loope
sub
pusha
pop
pop
ret
dec
scas
push
test
and
fs
xchg
cmp
sbb
stos
movsb
movsb
pop
test
movsb
inc
mov
push
sahf
adcb
lret
sub
outsl
lret
sub
das
cmpsb
lahf
mov
pop
enter
jbe
mov
decb
std
dec
push
cld
and
out
loope
add
int
in
cmp
xor
xor
shrl
sub
notb
daa
sub
xor
inc
popa
shlb
and
push
push
sub
mov
dec
std
xor
cld
or
rcrl
icebp
dec
sbb
outsb
cmp
imul
cli
mov
mov
mov
in
sbbb
fnsave
cltd
adc
pop
out
inc
clc
cmp
movsb
pcmpeqd
setg
mov
das
cld
int
jne
xchg
fs
or
dec
stos
leave
push
bound
subb
sbb
lods
test
mov
mov
movsb
das
imul
mov
iret
mov
imul
add
insl
add
shrb
decb
aaa
stos
xlat
movsb
shrb
mov
cmp
inc
sbb
icebp
mov
inc
mov
xchg
mov
aam
pushf
movsl
pushl
and
and
jecxz
sbb
shr
mov
xor
sub
push
xchg
xchg
pop
cmp
and
cmc
cmp
inc
movsl
in
and
pop
out
adc
mov
ds
mov
enter
cld
inc
in
sub
loope
pop
xchg
out
inc
fdivrl
jmp
and
adc
scas
insb
mov
cmc
fistpll
rorl
push
pop
jp
adc
shrb
scas
or
gs
lahf
lcall
stc
sbb
cmp
les
xlat
push
inc
cs
cwtl
push
test
mov
mov
ret
push
pop
dec
mov
jo
pop
pop
scas
push
sub
pop
mov
fldl
mov
cld
push
mov
ljmp
das
or
sti
cld
add
adc
subl
scas
fstpt
into
pop
fsts
inc
dec
repz
xchg
addr16
push
xor
pop
xor
mov
push
push
xchg
push
js
adc
test
push
and
fldt
fstpl
sub
pop
into
testb
fcmovnb
sub
adc
inc
fs
mov
fcmovne
jbe
loop
fnstsw
dec
test
mov
push
arpl
cli
pusha
inc
push
out
ret
cmp
sbb
cld
mov
hlt
enter
call
std
pop
lock
hlt
ljmp
cmp
and
mov
aam
test
testb
hlt
mov
xchg
mov
jecxz
in
adc
ljmp
shrb
xchg
jg
and
jl
or
pop
adc
xchg
daa
mov
xchg
pop
mov
fs
push
ret
shlb
ficompl
adc
js
inc
pop
jp
loope
add
orb
pop
jb
or
push
mov
dec
aam
rsm
pop
cmc
jg
aam
jne
push
push
scas
cld
loope
fwait
mull
stc
adcl
aaa
sub
inc
lret
ret
dec
in
daa
loop
xchg
faddl
mov
addl
aas
xchg
fdivr
or
sub
jae
push
stos
pushf
mov
stos
scas
mov
sar
mov
fmuls
jge
mov
adc
or
out
cmpb
rcrb
insb
mov
data16
test
inc
lea
push
pop
adc
mov
inc
push
jbe
push
loopne
pop
in
cmp
cvttps2pi
in
imul
pop
fmull
or
out
jg
or
ds
cmp
std
inc
pop
data16
cld
in
cmp
sub
and
stc
jmp
in
fs
jg
sub
cmp
jbe
leave
push
fcoms
xor
adc
pop
les
or
in
and
ljmp
or
aas
ja
xchg
mov
cli
push
faddl
jle
push
addl
mov
nop
movsb
xchg
sahf
adcl
push
cs
pop
cmp
mov
aad
dec
ljmp
mov
lret
mov
sub
push
jge
pusha
push
jg
rclb
inc
push
inc
push
dec
lods
push
shl
dec
fcoms
xchg
sub
fnsave
inc
loope
or
and
outsb
in
pop
mov
pop
incb
fidivrl
cmpsl
mov
rol
fwait
xor
inc
aas
and
lret
repz
pop
push
popa
cmp
mov
mov
or
jecxz
sub
xor
pop
mov
and
into
adc
jns
daa
mov
lods
jns
mov
insb
aam
cmp
dec
adc
in
jl
aam
dec
in
idiv
jle
out
dec
dec
dec
mov
and
mov
cltd
movsb
push
push
loope
adc
mov
imul
and
jne
roll
cld
popf
push
cli
jns
ret
lds
pop
lea
lahf
sbb
shll
xchg
aaa
push
shl
les
test
xor
sar
push
jno
xchg
fisubrs
cmc
rol
xchg
inc
dec
in
inc
push
pop
stos
shl
pop
popf
subb
xchg
test
insl
or
mov
lahf
and
cld
rorl
push
jecxz
stc
in
fimuls
fadd
popf
leave
cmc
loopne
jo
cmp
mov
push
out
jp
rcll
jns
sahf
lcall
lret
in
ja
mov
shrl
and
lods
inc
movsb
jo
sti
arpl
push
in
fsubrl
test
jg
adc
scas
xchg
ljmp
add
cltd
sbb
lds
mov
rcll
mov
pop
in
sbb
ret
xchg
inc
mov
push
adc
mov
sbb
test
in
mov
pop
mov
cmpsl
ja
xor
call
push
inc
adc
jns
sub
das
mov
test
add
jb
lahf
mov
sbb
lcall
mov
int
dec
ficomps
push
pop
les
cmp
js
mov
ljmp
cli
out
push
and
gs
fistl
push
dec
xor
or
inc
xor
cld
inc
adc
jae
xorl
aam
cltd
inc
add
mov
add
xchg
adc
dec
data16
fisttps
mov
push
int
adc
inc
test
notb
and
mov
movl
dec
jbe
shll
sub
sarb
pop
hlt
loopne
jle
mov
jae
aas
imul
aam
push
add
xor
push
mov
sub
dec
out
mov
out
imul
mov
ds
rorb
ss
ret
or
add
xchg
int
or
ljmp
jbe
in
and
test
pop
idiv
rclb
scas
xchg
insl
fcoms
inc
pop
xchg
fnsave
mov
popa
and
mov
jecxz
mov
clc
xor
push
adc
xor
xlat
cli
sub
je
mov
sbbl
gs
faddl
jle
fisubl
repnz
ficoms
pop
push
cs
cmp
insb
pop
cli
xchg
sbb
or
nop
jbe
test
push
shl
insl
inc
int
hlt
cmp
movsb
daa
inc
xchg
hlt
fsubrs
shrb
int
xchg
pop
clc
push
adc
adc
lret
cmc
les
inc
test
mov
mov
dec
insl
add
iret
adc
pop
xchg
or
cltd
push
sar
push
dec
fsts
cld
sbb
ret
inc
movsb
push
mov
inc
aam
in
or
mov
lods
jge
lret
push
ss
xor
xor
jb
popa
lea
lahf
adc
xor
xor
jle
mov
fs
iret
jle
jnp
mov
and
dec
or
nop
repz
dec
pushf
cltd
outsb
hlt
loopne
push
xchg
aaa
rol
jecxz
mov
jmp
pop
mov
enter
cmp
mull
mov
enter
inc
add
sub
adc
fstpl
and
mov
shrb
sbb
fldl
pop
xlat
ss
push
data16
insb
mov
adc
into
jnp
push
loope
pop
add
or
jmp
push
lea
pop
inc
js
or
dec
jbe
rorb
inc
lret
lret
xlat
push
and
ss
test
rol
xchg
adc
xchg
repz
adc
jmp
add
sub
fs
xor
mov
ljmp
inc
movsl
int
jmp
and
enter
aam
push
inc
sbb
sbb
cmp
dec
pop
adc
mov
jl
outsb
test
add
sbb
dec
repz
ljmp
or
jne
aam
sub
or
dec
sbb
mov
test
int
add
cld
fiaddl
mov
xchg
pushf
mov
sub
cltd
pop
mov
lahf
adc
bound
sub
push
lock
xchg
rorl
dec
or
daa
faddl
sub
ljmp
nop
and
ja
aaa
push
fidivrl
dec
ljmp
lds
mov
pop
in
inc
mov
bound
pop
add
cmp
mov
push
mov
cmp
add
popa
pushf
cmc
cld
gs
test
xor
imul
push
int3
pop
jns
adc
and
outsb
aaa
pop
test
jmp
xor
cmpsl
or
jae
loop
fsubl
mov
out
cwtl
adc
testl
shl
inc
and
popa
or
cld
pop
jb
shlb
inc
cs
sbb
add
scas
xchg
inc
or
sbb
aaa
pop
inc
sub
or
pop
loopne
fisubrl
movsb
in
aam
fsubrl
pop
inc
gs
lds
cmp
movsb
cld
sbb
mov
shll
xlat
arpl
push
insb
dec
xchg
int
mov
xchg
jge
int3
lahf
jle,pn
shll
aaa
jns
push
or
mov
pop
pop
ret
lahf
or
inc
xchg
jo
inc
sbb
mov
sub
in
gs
subl
sbb
call
jl
sarl
mov
push
and
xor
scas
sbb
add
cltd
inc
ljmpw
cmp
roll
mov
cld
subb
mov
and
popa
or
shlb
add
sub
cwtl
pusha
rcll
ret
adc
push
mov
dec
xchg
dec
inc
inc
add
movsb
in
cmp
mov
adc
movsb
mov
sbb
aas
fwait
xchg
and
sub
sarb
pusha
pusha
jp
aaa
mov
ret
mov
or
sbb
mov
stc
sbb
mov
jne
push
cmpsl
xbegin
lock
pop
cld
leave
jnp
cltd
jbe
int
pop
scas
dec
fldl2t
outsl
jnp
mov
fimull
leave
insl
inc
ret
test
and
fistps
mov
ja
cs
mov
in
out
jno
and
pop
xchg
jmp
test
mov
in
in
jecxz
popa
daa
mov
pop
add
jle
or
or
pop
dec
dec
fsubrs
into
jne
push
cld
add
mov
fxch
or
int3
sub
and
jmp
insl
xchg
jp
jbe
loop
prefetch
loopne
xchg
dec
jle
jmp
leave
aaa
outsb
mov
insl
xchg
stos
pushl
fimull
push
shlb
incl
andb
jbe
mov
fs
xchg
mov
push
test
minps
out
test
aas
push
iret
sbb
and
jb
lret
scas
stos
jo
jns
stos
das
stos
mov
pop
shll
movsl
cmc
movsb
xchg
out
push
and
lahf
fsubs
pop
imul
sti
or
rcl
mov
ret
sub
movsl
pop
inc
jmp
lea
or
faddp
shlb
testb
jb
cld
adc
in
dec
in
mov
repz
iret
dec
rclb
imul
rorb
imull
adc
sbb
pop
jno
lret
mov
cmp
mov
or
sbb
dec
mov
aam
mov
jmp
outsb
int3
in
sti
lcall
and
outsb
push
stos
jecxz
inc
cld
cltd
movsb
cld
xchg
lods
fsubl
daa
adc
shlb
jg
xorl
sub
shrl
ficoms
pop
dec
cld
mov
mov
mov
sbb
sbb
inc
ror
xchg
dec
stc
mov
in
cld
retw
push
pop
cwtl
sti
sahf
mov
jmp
call
inc
aas
enter
pop
mov
addb
std
in
pop
or
enter
add
push
mov
dec
push
adc
and
out
jb
pop
jne
mov
sbb
movsb
mov
pop
sub
xchg
adc
outsl
cld
add
push
outsl
mov
dec
pop
cld
into
test
call
faddl
ficoml
testb
cld
clc
ds
push
call
mov
aas
add
ljmp
or
xor
jnp
jbe
jg
jecxz
adc
or
add
in
decl
movl
inc
pop
mov
mov
dec
mov
shr
fimull
popa
movsl
in
jbe
cmp
mov
mov
jmp
fnsave
repnz
lods
frstor
add
dec
mov
scas
sub
cs
cs
pop
lods
push
sub
sub
adc
lock
jg
test
daa
push
adc
mov
mov
pop
loope
mov
pusha
push
fimuls
scas
sbb
mov
mov
push
push
imul
fimull
lds
faddp
mov
imul
xchg
cwtl
out
mov
or
push
in
aad
lret
shll
inc
sub
jle
bound
add
or
mov
push
enter
iret
xchg
mov
xor
jne
fdivs
pop
add
in
test
cwtl
movsl
xor
cmpsb
add
movsb
mov
xchg
in
cmp
scas
lock
cmp
loope
mov
nop
jl
xchg
xchg
mov
mov
divl
mov
enter
fwait
pop
and
std
xor
adc
cld
dec
test
fcompl
adc
xchg
dec
in
cmpsb
add
aas
aam
jne
push
lds
les
loop
mov
sbb
mov
enter
xchg
hlt
jg
stos
xchg
mov
fmul
jecxz
leave
inc
xchg
push
mov
enter
push
add
adc
push
mov
testb
outsl
gs
dec
les
scas
cmpsl
iret
jbe
popf
sbb
mov
stos
inc
imul
ja
push
bound
cmpsb
and
or
adc
pop
inc
xchg
mov
adc
enter
mov
mov
bound
mov
imul
mov
outsb
inc
js
pminsw
cmp
cmp
loop
dec
inc
adc
fidivrs
lahf
dec
bound
sub
push
test
push
ja
pop
mov
loope
or
hlt
dec
pop
sub
mov
mov
lock
iret
push
lcall
adc
lret
jno
mov
int
cmp
xor
fidivl
xor
push
sarl
adc
ja
push
fiadds
mov
push
das
xchg
ret
xorl
inc
imul
lret
andb
or
scas
cmp
adc
shll
jle
daa
fmuls
shlb
xchg
sbb
add
mov
xor
sub
lahf
test
mov
ds
pop
fldcw
jmp
or
sbb
mov
xor
enter
iret
jno
ret
les
aad
mov
xor
aam
cld
hlt
ficompl
fdivrs
xorb
mul
inc
fdivrl
add
mov
stos
imul
stc
push
jge
adc
adc
mov
cwtl
sbb
push
push
adc
ret
pop
fidivs
jo
push
add
daa
es
enter
jmp
mull
mov
std
sub
add
cld
fwait
das
jge
mov
sarb
push
out
cmpsl
ljmp
adc
fidivrs
add
aad
loop
sbb
enter
xchg
push
les
lcall
mov
pop
cld
push
jle
xor
fcompl
add
pop
movsb
push
in
fiadds
mov
insb
mov
insb
out
cmp
mov
sti
push
jecxz
aas
jnp
push
rol
jg
pop
icebp
mov
mov
cmc
int
or
pop
fs
push
ja
ret
idiv
xchg
cmp
mov
orb
sti
int
pop
aas
dec
shll
test
test
sahf
lea
rolb
inc
sbb
mov
and
or
stos
adc
test
ss
ljmp
addl
inc
imul
and
push
mov
std
mov
mov
or
in
dec
stos
pop
popf
lods
cld
inc
fsubrl
mov
stos
pop
sbb
lods
jg
and
push
xor
cmp
jle
test
xchg
xchg
in
int
cmp
cwtl
fsub
dec
outsl
aam
mov
andnps
rolb
pop
imul
out
cmp
mov
ret
fsubrl
enter
xchg
cmpl
popa
daa
lret
and
leave
divl
divl
insb
rolb
dec
test
lcall
dec
mov
xlat
xor
mov
adc
add
test
cmp
ret
or
inc
xor
mov
pop
mov
jle
inc
jb
leave
cmpl
lahf
xor
lea
sti
or
cmpsb
add
xor
inc
in
pop
adc
clc
dec
sbb
iret
enter
push
shlb
in
movsb
xor
das
loop
xchg
and
lret
imul
jne
cmp
daa
je
sbb
addl
add
into
or
int
in
lret
xor
dec
out
stos
xchg
sub
jle
movsl
pop
push
and
push
inc
pusha
push
cmp
call
adc
jecxz
mov
sar
fwait
push
jae
inc
jl
pop
jo
pushf
je
dec
inc
loop
popa
cmp
mov
add
cmp
aad
js
arpl
dec
int
rclb
icebp
mov
push
jo
xchg
loop
xor
bound
incl
jns
jbe
inc
mov
xchg
push
and
ret
test
lret
in
cld
xchg
aas
out
mov
loop
popl
ds
bound
sub
jp
cmp
pop
mov
xchg
dec
push
inc
mov
scas
pop
pop
mov
pop
aaa
fcmove
and
sub
cmp
je
stos
mov
ficompl
pop
sar
out
ss
dec
imul
cmc
ret
outsl
pop
mov
nop
fmul
push
sub
fs
out
ljmp
mov
and
jge
or
hlt
cmp
sbb
out
arpl
xor
test
fimull
jnp
add
movhps
mov
insb
inc
jmp
popf
pop
adc
mov
xchg
or
and
out
movsl
scas
lock
jle
jge
and
out
xor
loope
movsb
sbb
cmpsb
fdivrl
jne
mov
jns
or
cmpsb
repnz
add
fmull
or
jmp
out
pop
repz
or
sub
in
mov
jmp
and
sarb
mov
pop
xchg
sbb
imul
lret
mov
push
ret
incl
ljmp
addl
pop
inc
xor
mov
mov
jle
jbe
push
ljmp
adc
pop
inc
fiadds
aam
push
dec
movl
ret
sub
adc
jl
aad
push
push
dec
cld
mulb
cld
ret
push
stos
fstpl
cld
fadds
test
inc
loopne
lea
inc
dec
aad
lea
pop
xchg
in
dec
je
clc
pop
adc
or
cmp
js
mov
add
adc
scas
and
cmp
mov
arpl
js
cwtl
fidivs
pop
getsec
addr16
jnp
into
enter
xlat
inc
adc
push
lret
jg
bound
repnz
or
loope
cmp
hlt
push
test
cld
sahf
test
mov
cmp
add
mov
fsubrs
sub
mov
mov
inc
cmc
xchg
aas
and
jbe
loopne
stos
ljmp
mov
fisttpll
movsl
xchg
movsb
js
xchg
jl
xor
imul
push
mov
iret
pop
pusha
aad
or
adc
dec
xchg
or
fidivl
aas
sub
cmp
cmpl
shll
mov
es
adc
xlat
scas
stos
aaa
inc
sub
sub
inc
mov
or
and
mov
adc
mov
pop
jne
ljmp
mov
outsb
and
lea
mov
mov
cmpsl
cld
out
sbb
sub
rcl
jecxz
enter
dec
inc
mov
pop
xor
lea
sbb
mov
enter
xchg
stos
popa
stc
adc
pop
movsb
decb
int
cltd
jns
imul
and
jo
push
pop
mov
mov
test
pushw
push
xchg
pop
dec
adc
add
das
sub
cmpsb
ljmp
adc
push
inc
mov
inc
jns
inc
repnz
sbb
mov
add
sbb
addr16
movsb
outsb
add
inc
scas
cld
sub
adc
test
test
xchg
ljmp
add
pop
push
jl
jne
inc
shrl
divl
rol
out
or
cmp
cmp
in
daa
mov
mov
jbe
xor
in
cmpsb
push
adc
into
dec
pop
test
push
sbb
pop
jns
jl
pop
dec
jo
data16
push
xor
xor
mov
stc
mov
adc
cmc
mov
pop
loopne
mov
aas
mov
test
push
add
repz
roll
xor
test
cmpsb
or
shl
push
jnp
sbb
scas
rorl
mov
repnz
movsl
inc
sbb
test
call
addl
stos
dec
pop
mov
cld
cmpsb
mov
enter
hlt
and
mov
jno
lock
cmp
push
leave
push
jns
rcrl
movb
icebp
paddusw
mov
or
mov
mov
xchg
daa
es
mov
ds
in
cmp
cmp
adc
out
mov
cli
push
sub
loop
or
lods
in
sbb
xchg
inc
xorl
pop
cmpsb
dec
je
cwtl
jmp
and
mov
test
lahf
dec
dec
push
or
jp
js
sbbb
xchg
call
pop
pop
test
sahf
cltd
xor
mov
sbb
sub
ret
sbb
adc
inc
cmpsb
xchg
enter
xor
bound
dec
leave
or
mov
pop
push
cs
insb
sti
mov
loopne
inc
pop
mov
push
jle
ficomps
or
mov
mov
dec
xchg
cld
popf
cmpsb
in
dec
xchg
leave
dec
xchg
ss
incl
push
aam
les
js
adc
shll
dec
mov
fcompl
shll
subl
mov
xchg
test
xchg
mov
jl
sahf
jbe
or
cmp
cmpsb
sub
jmp
stos
in
popa
mov
dec
and
fwait
test
fcoml
cltd
dec
mov
mov
shlb
out
cmp
mov
loope
xchg
mov
ficompl
add
mov
test
and
scas
mov
sub
pusha
dec
push
movsb
jbe
inc
test
cmp
inc
das
pop
dec
pop
xor
mov
push
sub
insl
mov
ljmp
fsincos
push
xchg
pop
dec
les
push
jno
popa
sarb
mov
inc
dec
fistpll
hlt
ja
cwtl
cli
bound
add
fcompl
mov
mov
outsl
jns
inc
ret
repnz
push
jae
push
sub
lcall
push
pop
push
pushf
mov
xor
sbb
call
out
scas
mov
setle
loope
push
or
push
insl
jl
push
sub
mov
adc
cmc
cmpsl
sub
repz
jl
dec
add
lea
xchg
xor
cmp
mov
jns
push
leave
sbb
sahf
fwait
dec
xchg
pop
cld
pop
pop
cmp
jbe
inc
fdivrl
ret
xor
jbe
scas
mov
adc
or
test
push
out
rcrl
mov
mov
jnp
int3
shlb
dec
outsl
cmp
or
or
imul
inc
in
je
repnz
mov
int
movsl
xor
ss
or
cmp
out
cld
adc
cmpsb
dec
sub
xchg
fiadds
dec
pop
ljmp
sbb
loopne
shr
aad
sub
cmc
jb
lret
lods
cld
sub
test
stc
or
adc
push
cmpsb
mov
loope
mov
add
decl
mov
fimuls
jecxz
xor
in
mov
adc
jl
cmp
jmp
push
sbb
lret
mov
dec
add
ds
dec
jbe
in
sbb
dec
cli
fistpll
xchg
xchg
pop
stc
imul
in
sbb
and
push
fistpl
inc
test
sub
push
mov
scas
sub
jne
ljmp
imul
lods
lret
pop
inc
or
in
push
xor
sarl
xor
mov
jbe
push
jle
rorb
xor
popa
cld
cltd
inc
fs
rcr
call
stos
xchg
mov
clc
push
je
jle
std
dec
imul
clc
mov
mov
mov
les
mov
inc
xchg
ljmp
test
sub
loop
sbb
loope
cmp
push
lret
movsb
jns
push
repz
setle
add
mov
or
fsubrl
jl
pop
aam
fildll
arpl
cmp
pop
jge
cmp
mov
push
or
dec
test
cvtdq2ps
push
in
mov
das
and
aas
imul
pop
lret
adc
xchg
jnp
cmp
mov
mov
lret
mov
push
dec
mov
pop
cmpsb
sub
jb
aaa
mov
sar
fsubl
xor
lods
cld
mov
adc
aas
aas
fcomi
shlb
adc
insl
or
or
cmp
inc
dec
loopnew
cld
and
in
sbb
mov
xchg
adc
cli
add
mov
inc
mov
push
fwait
sbb
insl
pop
jle
push
fisubs
inc
push
enter
mov
or
sbb
repnz
sbb
jecxz
aam
subl
sub
and
stc
sub
leave
mull
js
cmp
outsl
inc
rcrb
pusha
pop
std
ret
or
into
ja
jecxz
xor
inc
adc
fistpll
test
adc
mov
mov
shr
jne
popf
cmp
popf
mov
xor
fisttps
xor
jns
adc
out
jnp
or
aas
lods
testl
push
add
fcompl
push
imul
repz
and
loope
mull
in
pop
std
push
dec
xchg
shl
dec
dec
sbb
dec
aad
ret
sub
call
out
push
repnz
add
mov
mov
and
lock
jl
jmp
cmp
xchg
xchg
lds
xchg
add
push
mov
add
cltd
jns
ror
inc
pop
pop
test
sbb
add
sbb
or
fcompl
add
leave
lods
jecxz
push
xchg
adc
push
std
icebp
sub
lahf
dec
push
outsb
dec
je
mov
cmpsl
outsl
sub
std
std
fidivs
test
xorb
mov
jbe
ljmp
test
adc
dec
lds
ror
into
stos
push
sbb
jle
call
mov
pop
mov
jp
ds
mov
push
sbb
xor
pop
sub
add
dec
lret
shlb
lret
jle
push
aaa
xchg
inc
push
xor
jmp
jno
or
test
and
mov
rorl
fnstsw
mov
pop
mov
adc
sub
into
enter
out
fidivs
adc
je
hlt
push
stc
cs
sub
ja
sub
mov
inc
lahf
push
sub
insl
sbb
jbe
dec
sub
cltd
cmc
add
ret
mov
bound
inc
sub
jo
adc
lcall
loope
insl
pop
cltd
pop
std
dec
scas
adc
sub
gs
push
addr16
jmp
sbb
in
sbb
xchg
jb
sbb
pop
push
pop
jo
cmp
outsb
pop
fidivl
adc
pop
push
das
mov
push
pop
cld
and
push
cs
cmp
notl
outsb
sub
ret
int3
and
jmp
inc
add
adc
pop
stc
cmp
sbb
mov
add
push
mov
sbbb
jle
lds
mov
pop
test
mov
mov
pop
popa
mov
ljmp
xchg
xchg
mov
stos
hlt
push
sbb
and
push
in
iret
hlt
repz
lods
imul
scas
cmpsb
mov
in
pop
std
push
insl
repnz
sti
pop
and
in
mov
clc
and
hlt
and
mov
mov
sahf
lods
adc
xchg
jmp
sbb
push
fcoml
ss
imul
sarb
push
ds
dec
bound
push
lods
add
push
repz
ljmp
pop
cld
jmp
pop
ret
mov
or
pop
cld
into
xchg
in
adcl
out
out
fsub
cmp
or
xor
push
jae
add
dec
and
mov
pop
jbe
adc
adc
pushl
jae
adc
daa
jge
jp
insl
out
xor
xorb
push
test
mov
push
jnp
push
sub
lea
nop
call
and
int3
and
test
xor
stos
rorb
jae
mov
mov
xchg
scas
test
shl
sub
xchg
sbb
or
adc
and
leave
pop
cs
mov
push
jb
mov
push
xor
in
inc
push
dec
mov
jecxz
and
loopne
add
out
sbb
add
pop
cmp
mov
mov
shlb
negb
push
leave
adc
dec
fstpt
inc
cs
mov
fcom
scas
ss
and
adc
or
ret
mov
emms
cmp
xor
mov
cltd
sub
jmp
lods
xchg
sbb
stos
or
int
sbb
fldl2t
mov
xchg
xlat
mov
pop
mov
jl
loopne
loop
lea
icebp
addl
jecxz
icebp
int
mov
mov
jle
jl
push
data16
adc
cmp
dec
mov
adc
xchg
pop
or
loop
cmp
cld
adc
mov
add
add
fcmovnu
xchg
outsb
out
xchg
inc
jge
loope
inc
mov
adc
jne
mov
inc
ror
maxps
orl
enter
test
loop
ret
testl
mov
movsb
inc
sbb
xorl
shlb
mov
mov
cltd
jecxz
push
mov
fistpll
test
leave
ja
test
inc
ret
sub
mov
lret
aaa
jno
fimull
and
and
cmc
popa
adc
and
pop
loope
xchg
push
push
pop
shlb
jl
test
mov
mov
mov
rclb
out
pop
pop
mov
jge
out
add
and
mov
sahf
mov
cmc
mov
dec
in
and
dec
jbe
inc
jmp
fsubl
push
xor
aaa
jmp
or
popf
iret
jle
shll
mov
int
pop
inc
js
pop
push
mov
add
pop
test
adc
in
mov
mov
adc
hlt
orb
aam
stos
sub
icebp
cmp
or
and
incb
sub
fcompl
call
pop
ret
dec
pop
movsl
or
fisttpll
loope
jo
mov
mov
ret
add
aaa
adc
xchg
imul
arpl
testl
ficoms
mov
jnp
shr
xchg
popa
cmp
scas
insb
mov
mov
insb
cmpsb
sti
std
fsubs
movsl
ret
enter
lret
insl
sbb
mov
xchg
call
cli
push
fsubrl
sub
loope
inc
mov
imul
out
scas
call
jae
dec
lock
mov
arpl
pusha
xor
iret
js
xlat
sbb
xchg
call
adc
cmp
lcall
dec
call
loopne
mov
cld
mov
mov
sbb
sbb
cltd
mov
jecxz
mov
mov
fidivrs
scas
dec
ljmp
int3
test
imul
scas
mov
fisttps
and
imul
loopne
xchg
push
das
mov
sub
adc
inc
or
outsl
cltd
push
jecxz
mov
push
jle
jbe
push
push
pusha
pop
icebp
pop
adc
aad
jge
push
cmp
mov
imul
jnp
jbe
stos
mov
jp
pop
mov
mov
sbb
jnp
aad
mov
jb
scas
mov
or
cltd
loope
mov
lcall
out
loopne
xchg
call
push
jns
xor
and
pop
ja
adc
sbb
push
cli
sub
push
loope
xchg
push
les
adc
or
loopne
cmp
repz
sub
adcb
pop
pop
pusha
shrb
add
push
dec
arpl
mov
and
pop
mov
jns
adc
das
push
or
mov
loope
or
addr16
int
push
jge
xor
loop
fsubl
movsb
dec
cld
std
and
inc
mov
adc
mov
ds
stos
mov
fdivl
jae
test
sub
dec
dec
mov
loope
mov
outsb
maxps
lods
or
into
pushf
js
stos
js
nop
jmp
pop
fs
cmp
aam
enter
testb
stc
ret
int
inc
or
add
dec
add
sbb
pop
dec
or
adc
lret
push
repz
fmull
dec
mov
mov
aaa
pop
aad
scas
cwtl
stos
std
in
fwait
pop
xchg
mov
xor
stos
or
push
aas
cmp
orb
mov
sbbl
mov
das
loop
jne
or
orl
mov
pop
movsl
push
fisttps
push
sub
xor
hlt
add
fs
pushf
mov
jno
push
sbb
gs
sarb
xchg
lds
sbb
add
outsl
adcb
ret
sti
mov
nop
lods
adc
repz
std
mov
add
jns
add
and
xchg
test
jns
dec
dec
mov
mov
test
mov
lea
push
inc
test
outsl
inc
addr16
jo
jge
mov
pop
roll
sarb
xchg
dec
jecxz
sbb
inc
inc
pop
adc
or
mov
out
clc
and
xchg
mov
pop
mov
pop
cltd
sbb
insb
sub
loop
fimull
fcompl
mov
mov
imul
push
mov
ds
jle
pop
push
push
fstps
or
out
mov
cmpsb
cmp
push
stos
shlb
mov
jnp
inc
dec
jge
rolb
fsub
fst
pushf
adc
andb
cmp
push
xor
sti
cmp
or
inc
cmp
or
ret
push
mov
or
jl
xor
add
lods
push
push
push
sub
or
add
pop
icebp
inc
dec
dec
jmp
mov
push
xor
inc
inc
mull
mov
cmp
scas
stc
out
data16
dec
push
mov
loopne
outsl
mov
xchg
orb
xchg
xor
jmp
movsb
in
lods
rcrb
test
or
sbb
jb
xlat
mov
cmp
add
bound
push
mov
imul
xchg
shll
xlat
jns
cwtl
imul
cmp
gs
sub
bound
mov
movsl
push
lea
out
nop
imul
mov
inc
ljmp
sbb
mov
inc
inc
dec
or
loope
scas
mov
mul
popf
sub
and
lds
fadd
ret
jae
sbb
pop
test
dec
push
cmp
repz
mov
mov
mov
movsb
cld
sbb
push
mov
outsb
add
cli
mov
xchg
mov
jl
inc
leave
sti
out
push
or
nop
mov
imul
jne
mov
movsl
push
insb
pop
xor
push
mov
fmul
xchg
mov
mov
xor
dec
imul
cmp
dec
jbe
mov
neg
shll
fdivrp
arpl
xor
loope
mov
add
repz
pop
pop
test
in
idivb
std
sbb
jle
xchg
mov
jge
rcll
mov
loop
inc
mov
xchg
xor
popf
dec
jb
lds
add
mov
movl
cld
cwtl
push
out
cmc
insb
adc
pop
addr16
cmp
fisubrs
aas
mov
movsb
lods
or
in
lea
ret
xchg
shr
enter
pop
movsl
pusha
mov
out
pop
int
mov
in
ret
xchg
dec
inc
mov
fwait
and
cmpb
sarb
lods
repz
out
inc
xor
mov
rclb
jl
jecxz
icebp
push
mov
das
scas
in
std
xchg
mov
sub
or
and
cltd
adc
push
xor
mov
pop
inc
pop
cld
jl
test
mov
sti
subb
mov
shr
sbb
sub
cmp
cmp
les
in
adc
push
rclb
cmp
std
jno
cwtl
cld
push
lea
jo
jnp
inc
mov
fidivrs
repnz
ret
or
xchg
sub
cld
sub
xor
dec
dec
filds
push
icebp
ret
mov
pop
stc
iret
popa
fcompl
pushf
mov
in
outsb
inc
push
dec
push
mov
adc
pop
xchg
sub
shrl
push
cwtl
mov
stos
mov
xlat
shlb
enter
int3
loop
dec
push
movl
shr
pop
sub
or
stc
dec
addr16
dec
popa
or
repz
push
sbb
add
int
imul
bound
call
jge,pn
dec
addl
cmpb
jne
add
ret
sub
sbb
pop
stos
adc
mov
test
aam
and
sahf
movl
cmp
loope
xorl
pop
mov
fidivs
sti
and
fisttps
jg
dec
fnstenv
or
sahf
inc
pop
stc
cld
and
mov
ret
fnstsw
mov
fmul
cmp
nop
ja
jg
cltd
pop
inc
cmp
pop
int
imul
jns
insb
inc
and
sbb
into
into
popf
out
mov
ja
add
adc
in
scas
dec
adc
data16
push
dec
mov
jmp
sbb
fmull
inc
add
out
addr16
iret
addr16
hlt
mov
mov
out
add
aaa
jbe
movsb
cmpsl
ljmp
les
ror
out
mov
testl
icebp
sub
leave
inc
and
es
mov
inc
pop
mov
sub
pop
pminub
loope
or
aam
cmpsb
stos
pop
or
cli
lods
and
sbb
sub
mov
pop
jbe
ret
rorl
inc
pop
xor
mov
ret
push
in
cmc
push
clc
dec
int
push
pop
lock
repnz
test
pop
test
cwtl
enter
mov
jno
sub
mov
cmc
mov
loope
and
pushl
mov
sbb
out
lods
in
push
popf
mov
roll
lds
icebp
push
das
scas
leave
or
and
les
mov
ficomps
imul
out
test
jg
lods
shlb
es
or
lcall
insl
shlb
rcrl
sbb
ror
out
fdivl
pop
inc
decl
pop
out
mov
imul
pusha
adc
mov
les
mov
dec
addl
pop
test
xor
mov
push
loope
cld
ja
cmc
cwtl
call
inc
xor
fisubrs
and
fdivl
dec
or
mov
lea
test
dec
dec
lds
loopne
inc
xlat
std
pop
enter
das
fsubrl
cmp
cld
dec
add
sbb
repz
inc
push
pop
xor
jl
stc
test
stos
jbe
push
iret
out
cmp
push
daa
add
imul
add
dec
adc
sub
in
fsub
movsb
ret
dec
or
dec
dec
cli
lret
lods
pop
movsb
mov
lret
rcll
in
rclb
movsb
jb
dec
aad
mov
and
adc
pop
push
add
adc
push
push
dec
icebp
push
mov
test
sub
out
cmp
lahf
mov
push
push
cltd
icebp
adc
out
and
int
sub
dec
mov
fsubl
lcall
push
add
jb
cltd
dec
out
loopne
lds
sub
xor
stc
lcall
into
jg
fdivrl
movsl
sub
nop
mov
lock
fisubs
mov
dec
pop
lret
or
sub
call
call
mov
xchg
cld
and
mov
jmp
lahf
cmp
mov
jge
pushf
fisttps
cmp
ficomps
lods
test
aam
jl
jle
sub
adc
sub
cwtl
mov
dec
xchg
cmpb
es
dec
xchg
mov
cld
divl
popa
addr16
jecxz
pop
mov
adc
shrl
fdivr
cld
mov
dec
pop
sub
fcoml
mov
shlb
daa
mov
scas
sahf
aas
sbb
test
repnz
cld
xchg
and
clc
mov
cmp
pushf
xor
xlat
fimull
jle
push
jp
rcll
nop
daa
movsb
and
xchg
mov
cld
push
push
xchg
in
out
jns
in
mov
lock
pop
and
xor
cli
push
jns
jae
int
movsl
mov
in
aaa
dec
sub
call
div
or
sbb
sub
pop
frstor
cmp
ss
dec
sbb
out
stos
lret
pusha
aam
pop
sbb
aad
sahf
dec
popa
repnz
pop
cli
clc
and
pop
jl
scas
add
lea
mov
roll
or
push
dec
enter
push
fldt
jb
loopne
cld
xor
or
adc
xchg
fsub
sub
jbe
sarl
or
add
hlt
mov
xchg
mov
stos
add
mov
leave
adc
stos
rol
mov
mov
and
fidivl
cmc
lahf
sbb
enter
test
pop
and
roll
or
incl
cli
dec
xchg
lret
mov
int
fs
xchg
or
and
jne
dec
xor
in
jmp
push
popa
jbe
pop
mov
sub
lods
push
movsb
xchg
dec
adc
sub
insl
push
ds
pop
mov
push
int
fucomip
in
push
clc
mov
movsl
push
pop
push
or
adc
push
clc
cmp
fmul
fisubrs
repnz
dec
jns
adc
fidivs
fnsave
sbb
imul
daa
add
push
outsl
cmp
fisttpll
jo
movsb
mov
cld
subl
inc
pop
loop
scas
xorb
add
mov
stc
loopne
orl
jg
incl
mov
mov
mov
addr16
mov
push
dec
mov
call
loope
xchg
mov
roll
add
xlat
orb
pop
mov
xchg
je
jo
pop
sub
mov
pusha
addr16
adc
out
negb
icebp
mull
lcall
fcompl
scas
push
call
cld
addb
jecxz
fsubr
adc
call
ja
or
and
aas
mov
shrb
add
mov
push
sbb
cmpl
stc
test
sbb
adc
repnz
aad
xor
pop
popa
xchg
mov
adc
push
add
pop
jne
in
enter
push
jl
mov
sbb
sub
insl
movsl
push
xor
pushf
into
inc
cld
or
aaa
addr16
or
inc
in
iret
pop
cmp
cmp
loope
nopl
fimull
stos
mov
iret
in
add
xchg
into
push
aaa
movsb
push
add
fnstcw
mov
or
xor
sub
and
daa
pop
xchg
neg
jmp
aaa
adc
mov
shll
sarb
sarb
add
je
xchg
pop
imul
mov
dec
mov
es
aad
repz
mov
cli
mov
mov
sub
les
inc
and
jle
jecxz
out
cmc
or
cmc
pop
and
sub
lds
imulb
jbe
ja
push
loope
pop
cli
cmp
lcall
cld
out
dec
imul
jb
dec
adc
push
or
movsl
ds
push
or
call
inc
out
mov
jne
cmpl
icebp
mov
mov
cmp
roll
or
and
adc
rcl
add
orb
jge
loop
push
shll
jb
cmp
push
in
movsb
sub
nop
cmpsl
jle
push
pop
jo
iret
int
loope
adc
rol
out
pop
push
test
lcall
dec
leave
es
or
addr16
dec
mov
bound
mov
sub
xchg
cs
movsb
cld
cmpsb
lea
test
cld
stos
and
ret
data16
cmpsb
incl
cli
mov
push
fsubrp
rolb
jae
in
add
outsl
mov
andb
mov
sbb
jg
mov
fisttpl
lods
mov
cld
jge
cmp
test
mov
fldl2t
adc
push
jg
fsubl
or
push
adc
dec
mov
out
test
pop
in
mov
sub
test
bound
int3
mov
and
les
mov
cmpsl
xchg
xchg
icebp
pop
xor
mov
aaa
and
ljmp
out
mov
inc
dec
arpl
fildll
stos
adc
sbb
xlat
push
mov
push
in
adc
add
cld
mov
subb
adc
hlt
lea
movsb
out
dec
dec
adc
ja
leave
push
loope
xchg
loope
clc
and
es
cld
cmc
dec
xchg
mov
test
imul
adc
cmpb
mov
decb
xor
jbe
xlat
mov
iret
push
jge
or
or
cld
shll
cmp
xor
mov
insl
mov
mov
mov
loop
jne
data16
pop
in
repz
jae
stc
in
lret
nop
pop
lea
dec
dec
push
pop
scas
dec
lods
popa
fidivrl
push
adc
mov
cld
push
std
imul
xlat
and
xchg
fiaddl
fsubrl
arpl
das
dec
sub
shl
pop
popa
mov
push
sbb
dec
add
mov
dec
cmp
push
cmpsl
ret
and
shll
jmp
rol
cwtl
mov
mov
xor
mov
mov
data16
movsb
push
mov
std
fcoml
mov
lock
icebp
and
test
dec
imul
adc
clc
sub
mov
fiaddl
add
xor
or
jb
pop
dec
ja
sub
mov
and
jns
push
dec
outsl
cs
scas
sarb
cltd
xor
loopne
or
bound
xchg
popl
mov
sbb
popf
dec
fadd
cmpsb
bound
pop
and
call
int
bound
divl
push
popa
testl
cmp
inc
out
fs
cwtl
push
cmp
lods
scas
and
inc
cld
enter
mov
gs
dec
sar
dec
adc
in
cmpsl
jb
push
and
idivl
fwait
or
outsb
xor
xor
sbb
sahf
inc
mov
dec
mov
in
fwait
and
test
cld
pop
xor
mov
les
pop
mov
sbb
fdivrl
daa
pop
mov
std
add
mov
mov
les
lcall
fcoml
sub
inc
out
adc
and
adc
test
jns
out
jmp
loopne
loop
push
fdiv
sahf
jno
push
push
cli
mov
xor
loope
aas
sub
jmp
insb
or
cmc
push
cmpsl
xchg
sub
and
mov
ja
and
cld
test
cmp
inc
mov
sti
pop
sbb
fbld
ja
adc
ret
xchg
mov
rcrl
loopnew
jb
lods
and
xchg
enter
popa
dec
inc
jnp
xor
mov
mov
xchg
sbb
les
mov
test
sub
mov
pop
rcrb
insb
ss
dec
xchg
rolb
cld
xchg
jns
dec
mov
mov
sub
cmp
jnp
mov
mov
stos
mov
adc
push
inc
out
push
je
and
rclb
jb
jle
inc
fcmovbe
fcompl
mov
test
subw
adc
inc
dec
jl
cmpsb
jmp
ret
pop
inc
push
xchg
in
xchg
lcall
inc
xlat
mov
loop
fsts
xchg
leave
cmc
das
mov
add
push
std
fadd
sub
fstps
sub
mov
imul
adc
sbb
dec
mov
mov
out
decl
jmp
int3
imul
insb
lret
shll
pop
in
loop
cmp
jg
ja
es
mov
les
adc
cli
sbb
inc
jbe
mov
inc
or
inc
inc
jbe
pop
cld
test
fsubl
pop
mov
lahf
es
pop
or
xchg
mov
jne
pop
loopne
mov
sub
inc
outsb
test
loope
call
jp
fimull
or
xchg
aam
pop
incl
push
int3
aas
lret
jnp
cmp
das
inc
stc
mov
ficoms
sub
insl
mov
imul
xlat
imul
xor
test
stos
fcmovu
push
pop
mov
mov
push
xchg
add
cld
inc
push
mov
dec
lods
or
jl
dec
push
add
scas
xchg
dec
inc
pop
lcall
fimull
cmpsb
stc
sbbb
mov
or
mov
pop
inc
cmpxchg
loop
mov
push
aam
add
mov
cltd
addb
xor
lahf
ja
js
xchg
dec
lock
imul
jbe
push
xchg
icebp
call
jbe
mov
in
cmc
pop
inc
mov
push
push
dec
aad
daa
lock
cld
ret
fsubl
and
stc
add
sub
cli
testl
aaa
jge
xchg
cmpsl
mov
pop
movsl
and
cmp
test
rorb
add
clc
ja
and
stos
fadd
or
inc
mov
test
arpl
push
dec
mov
adc
push
or
xchg
shrl
jecxz
vpminsw
inc
add
mov
stos
fs
xchg
jnp
mov
lods
or
repz
mov
movsl
mov
lcall
pop
mov
lods
pop
fisttps
clc
push
clc
jo
xchg
pop
sarb
sbb
in
lds
lcall
dec
xchg
mov
mov
pop
inc
lcall
lret
push
ret
lock
pop
fimull
and
pop
add
arpl
outsb
mov
fsubl
incb
leave
pop
mov
negb
cli
pop
cmp
sub
adc
jle
psubb
cmovl
fimull
pop
cmp
sarl
adc
pinsrw
nop
or
sub
shrb
into
repz
aam
jg
pop
in
push
mov
push
push
adc
scas
in
jb
frstor
pop
inc
mov
push
adcl
push
popf
and
aas
jecxz
stos
dec
jne
xor
pop
int3
leave
fisubrs
jno
cmp
mulb
xchg
arpl
sbb
scas
jmp
stc
jbe
inc
mov
push
pop
ret
jmp
in
mov
cld
mov
loopne
or
mov
call
loope
mov
mov
loopne
xlat
nop
xchg
dec
je
ja
outsb
dec
mov
pop
inc
add
adc
ljmp
enter
cmp
cld
xor
lahf
shrl
lods
movsb
out
add
push
inc
leave
gs
lods
dec
mov
pop
push
aam
mov
shlb
mov
fstp
je
std
mov
push
mov
aad
dec
xchg
or
jge
mov
decl
jl
jbe
sub
fsubl
cltd
call
xlat
sub
push
mov
pushf
adc
ss
js
int
dec
lret
and
fmull
xchg
loope
jb
push
nop
jb
aad
pushf
mov
sarb
pop
cmpsb
sbb
sub
fcmove
in
sub
imul
dec
scas
adc
jge
pop
out
cmp
sbb
jo
iret
jb
sub
mov
sbb
mov
mov
pop
dec
sbb
mov
movsb
xchg
cmp
jp
adc
aam
in
xchg
jecxz
push
push
mov
mov
xchg
jecxz
aam
push
sahf
cmp
lret
sub
pop
jmp
adc
cmp
loopne
cmc
sub
mulb
xchg
and
sub
das
or
mov
sub
xchg
or
movsb
push
fsubrl
sti
xor
sub
int
jl
fiaddl
xchg
pop
jl
in
and
cltd
fsubl
cli
xchg
scas
pop
dec
mov
test
push
in
stc
jle
cmp
xor
in
adc
test
sti
sbb
aam
or
jle
fs
daa
pop
mov
into
ficomps
jle
pushf
das
dec
out
loop
insb
and
mov
stos
imul
stos
incl
mov
sbb
sub
or
fistpl
fildll
bound
dec
adc
test
insl
xor
cmpsb
pop
mov
shlb
ja
and
fstl
fs
inc
dec
shl
inc
outsl
cmc
test
aam
pushf
jle
and
loopne
or
xlat
or
in
inc
adc
testl
mov
pushf
jle
in
shrb
mov
fists
iret
adc
cmp
mov
xchg
dec
and
stos
jne
test
adc
dec
xchg
and
push
and
fdivs
xchg
cs
cld
push
jge
stos
movsb
sub
lfs
out
sbb
pop
cmpsl
add
inc
sub
outsl
les
in
inc
pop
mov
cmp
pop
mov
sar
rorl
mov
xchg
pop
int
xchg
gs
xor
sti
in
in
shlb
ret
test
mov
sbb
jecxz
cli
cld
aam
mov
mov
out
testb
into
js
push
pop
cld
jmp
bound
ja
pop
cli
mov
mov
rolb
jno
push
add
stc
cwtl
addr16
mov
xchg
insb
xor
mov
push
add
and
adc
jp
ljmp
cmp
scas
in
xor
repz
ficoms
repnz
inc
adc
adc
xchg
mov
xchg
fisttpl
pop
push
dec
pop
rorl
dec
sbb
mov
xlat
mov
insl
push
jg
outsl
xlat
mov
sbb
movsb
sbb
xorb
cmc
addr16
dec
bound
enter
jo
jg
fildll
sub
mov
jp
inc
psubq
mov
icebp
jb
ljmp
mov
insb
jmp
and
cs
test
outsl
inc
stos
xlat
inc
sbb
and
inc
or
sti
xor
pop
arpl
or
ja
test
xor
fdivrl
rorb
mov
adc
rolb
ret
sti
xor
sbb
push
jecxz
iret
inc
pop
mov
mov
sbb
repz
cld
xor
fcompl
mov
mov
cmp
inc
cld
pop
lret
sbb
mov
mov
inc
ja
mov
rcr
incb
xchg
iret
jmp
test
aas
pop
push
in
add
adcl
out
mov
into
out
sti
out
cld
cmp
xor
jecxz
xchg
mov
cld
hlt
sub
push
xchg
ja
adc
and
andl
idivl
addb
stos
inc
cld
or
negb
ja
shlb
mov
mov
add
mov
push
mov
push
sahf
push
mov
jl
addl
int3
lret
add
les
xchg
stos
outsb
dec
jmp
test
imul
push
mov
mov
xor
push
ja
jmp
hlt
pop
jbe
outsb
dec
repz
push
push
mov
lahf
jnp
pop
jae
fcmovnu
and
pop
popa
and
fisubrl
loope
out
ljmp
mov
les
movsb
mov
mov
fsts
pop
lods
ror
or
mov
cld
loop
mov
cmp
mov
fldenv
mov
mov
ret
shrl
mov
jb
mov
and
mov
push
test
inc
inc
adc
mov
sub
and
std
aam
insb
xchg
add
dec
cmp
inc
and
inc
cmp
popa
dec
mov
jo
cld
pop
leave
xor
loop
cmpl
push
dec
movups
push
mov
movsl
jp
insb
lahf
aaa
dec
xchg
xor
jle
notb
sbb
int
add
mov
jp
iret
mov
mov
jle
js
sub
loop
mov
add
mov
mov
xchg
xor
dec
out
cld
imul
jns
dec
arpl
addb
mov
aad
dec
mov
adc
repnz
in
mov
mov
dec
cmp
push
cmp
fidivrs
in
mov
inc
sahf
pop
mov
dec
int
mov
scas
xchg
aam
iret
sti
xor
in
add
arpl
loope
push
dec
scas
sti
or
sub
lods
cmp
leave
mov
jmp
jg
fwait
pop
test
int3
and
ljmp
into
fmul
mov
sub
dec
push
mov
mov
out
outsb
and
decl
jnp
pop
repz
sub
or
fldt
sbb
add
scas
repnz
pop
mov
out
xchg
dec
bound
jb
or
movsb
cld
push
dec
imull
lcall
stos
into
test
in
or
mov
dec
xor
xchg
cld
adc
ret
sbb
mov
push
ret
into
xlat
jb
sub
xchg
scas
jmp
ds
push
cmc
dec
xchg
insl
movsb
aas
inc
ficoms
mov
orb
cmp
mov
mov
movsb
shr
inc
push
pop
inc
cltd
dec
inc
cmp
add
xchg
iret
lahf
sub
test
movsl
xchg
ja
outsl
pop
call
mov
pop
je
popa
cmp
cmp
shlb
xchg
lret
push
mov
cld
stos
mov
icebp
mov
loope
into
cmp
fsubl
jmp
adc
repz
mov
into
imul
xor
xor
faddp
sbb
push
xchg
mov
cmp
cs
fcomi
mov
cmpsb
push
or
jb
fsubs
cld
mov
push
sbb
iret
xor
push
push
mov
stos
fwait
out
popa
jb
adc
xor
test
enter
add
xor
jne
aas
clc
mov
mov
dec
daa
mov
cmpsb
push
dec
lret
clc
mov
cltd
cmp
and
inc
test
xor
xchg
enter
adc
xor
call
sbb
outsl
cmpsl
mov
dec
push
das
dec
sbb
gs
inc
or
dec
cmp
cltd
lret
pop
sub
dec
mov
push
inc
inc
fwait
lcall
imul
out
jle
lods
clc
xchg
mov
rcll
mov
push
in
mov
inc
jae
inc
sub
int
push
les
xlat
test
pop
adc
mov
adc
ja
shr
repnz
dec
and
mov
fsubrl
mov
or
xchg
cld
shlb
stos
inc
cld
lcall
fdiv
punpckhbw
popf
push
inc
enter
ljmp
loopne
orl
ret
fwait
inc
xor
in
pop
cmp
cmp
dec
push
mov
in
fisubrs
test
cld
fildl
dec
inc
pop
mov
fs
inc
pushf
test
xor
push
in
xlat
pop
jl
enter
fcoml
ret
loope
mov
and
sti
cmp
xor
loopne
in
push
dec
adc
fistps
sub
fisubrl
sarb
iret
pop
pop
xchg
mov
mov
jl
pop
or
bound
lcall
mov
xor
sub
fmul
or
push
mov
clc
repnz
cld
push
fsts
xor
ds
cli
test
jge
fstp
mov
cld
cmpsl
xchg
std
push
aas
add
imul
insl
jnp
pushf
lret
dec
decb
pusha
in
cmpsl
movsb
mov
xchg
adc
movsb
out
dec
hlt
xchg
inc
stos
pop
andb
fisttpll
pop
test
add
imul
ficompl
or
in
mov
lcall
int
test
push
mov
dec
adc
cld
in
inc
sub
ret
sbb
cwtl
and
pop
out
test
jbe
into
fisubrs
cmovge
aam
pop
push
push
leave
dec
fsubl
mov
loope
xchg
mov
hlt
pop
negb
inc
cmpsb
dec
mov
test
xchg
mov
pop
push
imul
outsb
mov
sbb
push
xchg
leave
cld
sub
inc
rolb
jae
test
and
push
icebp
dec
std
rcl
cli
jl
sbb
clc
add
and
popa
dec
dec
adc
mov
add
out
cltd
mov
add
lods
repz
jl
cmovle
daa
xchg
cmpsl
out
out
mov
movsb
idivb
push
mov
cs
outsb
dec
rclb
mov
clc
inc
outsb
dec
cmp
stos
jp
std
mov
inc
adc
fdivl
enter
xor
call
sub
or
jbe
imul
mov
fnstenv
stos
ss
cld
lahf
pop
mov
push
in
mov
inc
sbbb
sbb
sub
fdivl
mov
icebp
popa
les
mov
jecxz
cld
and
pop
aam
add
mov
push
pusha
inc
in
mov
addb
mov
cld
dec
mov
movsl
and
jmp
cmc
je
mov
push
cmpsb
out
icebp
adc
test
je
mov
mov
adc
jb
inc
stos
fiaddl
orb
sbb
mov
dec
or
cmpsb
mov
mov
push
or
pandn
scas
mov
and
inc
pushf
inc
xchg
push
lods
fs
lods
imul
or
loopne
sbb
sub
orl
lahf
shl
gs
mov
lret
faddp
dec
jmp
jp
sbb
mov
in
mov
jge
insb
scas
or
sbb
dec
in
lods
inc
mov
push
mov
inc
ljmp
sub
movsb
loop
nop
repz
jne
mov
cwtl
scas
mov
in
int
jle
mov
adc
aas
mov
data16
dec
movsb
adc
cld
xor
jge
and
pop
aam
roll
xchg
fidivrs
pop
sbb
out
inc
ret
jo
dec
out
mov
dec
popa
inc
enter
mov
add
lcall
test
inc
cmp
inc
addr16
add
sub
shrb
push
mov
dec
push
daa
arpl
arpl
std
jg
mov
addl
push
or
outsb
dec
mov
scas
mov
dec
cmpl
and
mov
pop
sbb
mov
inc
fwait
test
cld
dec
adc
push
ret
repz
push
adc
mov
add
loope
xor
pop
sub
adc
imul
xchg
ret
xor
pop
or
push
in
jle
test
and
clc
and
notb
mov
pop
adcl
cmp
inc
or
sahf
insb
rcll
mov
mov
add
aam
and
fwait
and
dec
push
or
adc
fsubl
xor
test
fimuls
sbb
mov
movsl
jnp
pop
ret
mov
pop
ja
stc
rol
imul
pop
sub
ret
xor
dec
fs
test
test
inc
mov
enter
gs
or
mov
sbb
test
shll
mov
test
imul
pop
mov
and
mov
jns
add
push
and
fimull
loope
cli
sbb
mov
dec
lea
gs
arpl
and
cmpsb
fcmove
loopne
rcll
pop
mov
sub
je
les
pop
cmp
cwtl
sbb
jne
addr16
das
sbb
enter
sub
movsb
outsl
insb
mov
insl
and
int3
push
imul
mov
ret
inc
movsb
mov
cmpsb
mov
adc
mov
out
pop
fadd
test
and
inc
decb
cmp
pop
outsb
push
jmp
mov
into
aaa
lock
xlat
daa
bound
mov
repnz
lock
push
inc
outsb
xor
dec
aaa
push
pushf
aad
pop
sub
cmp
inc
dec
loope
fisttps
dec
pop
shrl
outsl
xchg
mov
mov
pop
test
mov
fcoml
dec
xorb
xchg
rolb
lahf
inc
sbb
pop
pushf
jge
adc
fdivp
or
mov
jo
adc
je
cmp
pop
or
xchg
mov
jmp
mov
lret
inc
cli
lds
into
and
fisubl
mov
lret
loop
lea
out
cmp
cmp
lcall
ffree
mov
xchg
fstpt
sub
cld
sub
xchg
or
adc
cmp
jp
into
pop
and
imul
mov
andl
cmp
cmpsb
test
test
sbb
dec
out
loop
xchg
popa
adc
jp
pop
sub
andl
mov
lds
rorb
jmp
sub
scas
push
or
iret
mov
xor
sbb
shl
sahf
outsb
sub
stos
in
nop
mov
shrb
test
mov
mov
inc
inc
push
push
pop
lea
and
fmulp
jecxz
push
mov
dec
add
jl
iret
mov
insl
loop
test
paddw
rcl
sbb
bound
js
push
jle
xor
out
aas
addl
sub
pusha
gs
and
sub
sub
jo
push
adc
mov
jg
mov
jp
sti
adc
add
fldcw
add
outsl
es
sbb
dec
hlt
sub
dec
imul
sub
incb
inc
cmp
jge
std
outsb
enter
fdivrs
mov
jecxz
or
jmp
daa
sbb
scas
fisubs
fistl
pop
test
push
xchg
fs
sbb
jg
push
xor
sub
cmp
jb
loope
loopne
test
imul
fcoml
aas
stos
hlt
adc
cmc
adc
enter
xor
hlt
sbb
scas
push
push
fdivl
pop
adc
pusha
fidivrl
in
faddl
js
loopne
jg
sbbl
mov
cld
imul
stc
and
sub
mov
mov
or
pop
mov
out
mov
repz
adc
jno
sbb
fnsave
sti
int
cld
dec
jg
jno
jmp
out
and
negl
shlb
adc
xchg
je
sbb
add
and
stos
mov
icebp
push
loope
cld
aam
or
je
pop
and
ds
mov
cs
rcl
les
aaa
in
mov
xchg
or
nop
xchg
jns
pop
mov
adc
xor
fnsave
cmpl
cli
cwtl
mov
cmpsl
mov
mov
je
mov
mov
jle
rclb
xchg
push
hlt
cmpsb
sbb
mov
push
push
in
xchg
dec
ret
negb
cmp
les
pop
lods
sarl
push
pop
bound
xchg
xchg
pop
pop
pop
into
call
lods
push
sub
cmp
lods
outsb
mov
cmp
ss
imul
xchg
and
jnp
fisubl
fsubl
ljmp
dec
fbld
daa
push
push
dec
jne
movsb
imul
pop
and
pop
movb
dec
out
cmp
pop
sbb
cmpsl
cmp
mov
sti
add
mov
lret
pop
cs
push
ja
dec
mov
aaa
insb
or
inc
push
push
in
test
adc
dec
dec
lods
push
shl
cmp
pop
int
sub
es
lahf
mov
xchg
or
cmpl
hlt
pop
addr16
in
sti
cmp
xchg
inc
cwtl
ss
jmp
mull
repnz
rol
mov
cltd
push
addps
mov
insb
mov
mov
mov
and
negl
loop
mov
test
mov
gs
int3
aas
test
xchg
out
lcall
xlat
sub
mov
dec
add
hlt
add
push
sarl
bnd
xchg
and
xchg
subl
sub
jp
pop
sti
rol
mov
ret
rcrl
fcoml
or
adc
pop
xchg
push
loope
mov
push
insb
ljmp
subb
es
test
hlt
jl
pop
or
ja,pn
sub
xchg
fucomip
cld
sub
mov
xchg
jae
xlat
inc
repnz
call
or
das
sub
push
inc
pop
push
dec
pop
dec
jecxz
mov
mov
pop
cld
or
mov
rcrb
xor
mov
out
add
xchg
data16
push
mov
fdivr
inc
cmc
and
mov
mov
cmpsl
mov
add
cld
leave
lock
fimull
pop
lea
test
daa
xchg
fdivrs
hlt
jb
xchg
lods
lret
cmp
jbe
mov
aad
pop
jge
mov
mov
push
lea
xchg
loop
faddl
push
mov
test
stc
jae
leave
shl
addl
leave
rolb
lahf
fiaddl
pop
int3
dec
or
sbb
sub
sub
push
sbb
or
sbb
movsb
pmullw
push
iret
fs
fdivl
test
cmpb
cmp
fsts
xor
fsubrs
sbb
lret
mov
daa
mov
cmpsl
and
dec
pop
mov
mov
xor
or
cmp
and
stos
leave
or
mov
add
jbe
enter
mov
shrl
mov
movsb
loop
fcoml
xor
pop
mov
mov
jbe
jne
pop
sub
in
mov
mov
loope
xchg
out
jg
shrb
imul
xchg
test
ja
dec
adc
mov
inc
fs
or
push
mov
mov
dec
push
sbb
xor
ja
lahf
mov
inc
add
mov
test
add
xchg
fadds
lds
aam
or
cmpsl
xor
mov
into
sub
dec
push
js
fiadds
jmp
rol
mov
in
mov
sarb
je
hlt
adc
dec
test
loopne
lea
jl
sarb
dec
xchg
adc
fwait
jl
push
fwait
loope
shrb
mov
inc
cld
cmp
jb
scas
push
bound
sbb
mov
inc
push
mov
sbb
mov
js
jo
cld
enter
hlt
test
jne
cld
imul
mov
add
pop
jb
shlb
iret
mov
loope
sub
lods
mov
xchg
jo
mov
iret
mov
pop
add
imul
fmull
xor
jno
jne
inc
js
mov
lret
mov
arpl
dec
fcomps
pop
scas
outsb
jmp
lcall
rcrl
or
icebp
inc
dec
leave
out
and
jb
rorl
jnp
rclb
insb
roll
xchg
andl
ljmp
ljmp
aaa
cltd
out
int3
lock
cmp
jbe
mov
test
movsb
adc
push
pop
fldl
fdivl
xor
mov
mov
lds
jge
mov
jecxz
in
cmp
or
push
jp
dec
mov
fcomps
ret
jnp
pop
mov
pop
addb
ret
fnstcw
mov
jno
aas
rorb
sbb
inc
pushf
xor
sti
stos
iret
in
movsb
xor
mov
pop
repnz
clc
popa
ljmp
les
add
xchg
ja
and
test
sub
xchg
test
or
xchg
sti
lods
std
sbb
adc
mov
popl
sqrtps
sub
lods
lods
xchg
mov
outsl
call
inc
mov
lahf
fadds
in
jle
pop
icebp
or
jne
data16
inc
int
or
push
gs
shlb
jle
syscall
dec
loope
leave
sbb
inc
mov
mov
pop
pop
test
xlat
test
test
inc
in
adc
fsts
adc
cmpsl
pop
cld
test
js
lods
adc
stos
or
push
cmc
scas
or
and
mov
leave
jne
ja
insl
sbb
pop
iret
inc
push
rorl
jge
scas
jb
pop
loope
ja
stos
sub
fsubl
cmp
adc
mov
dec
rol
ret
inc
mov
into
aaa
jne
mov
mov
inc
adc
icebp
movsl
or
jle
adc
cmp
and
test
mov
cld
xlat
outsl
rcll
cmpsl
push
mov
icebp
movsb
fimuls
sub
xchg
dec
sbb
cld
mov
aaa
pop
cmp
out
stos
push
out
scas
sti
push
sbb
out
jo
jae
lcall
mov
loop
dec
es
xchg
stc
mov
inc
lds
dec
and
insl
cld
push
and
movl
xchg
push
inc
sbb
daa
sub
in
mov
push
aas
lods
adc
xor
push
mov
call
inc
in
cmpsb
lea
inc
push
xchg
jbe
xchg
fisubrs
jmp
insb
dec
idiv
cli
ds
xchg
xchg
icebp
jl
xchg
cmp
push
cld
addr16
and
dec
mov
push
rolb
jno
stc
lods
test
xchg
lea
aaa
xor
loopne
xchg
pusha
jne
movb
jecxz
aam
sbb
pop
arpl
inc
sub
out
sub
rcl
and
testl
adc
cld
cwtl
divb
dec
or
inc
cmp
xchg
arpl
imul
and
fsubl
pop
cmp
testb
aas
xchg
cmc
mov
dec
hlt
subl
cld
imul
jnp
js
orl
ja
xchg
cmp
adc
mov
or
aam
dec
movsl
test
test
xchg
adc
outsl
mov
pushf
pushf
enter
mov
mov
and
xchg
sbb
add
and
int3
fsubl
push
and
into
pop
enter
fidivl
pop
rolb
push
into
adc
icebp
imul
inc
mov
clc
sbb
inc
adc
rcrl
movsb
lock
mov
mov
ljmp
lcall
xchg
insb
jnp
mov
decb
das
test
shl
mov
fmull
and
sub
xchg
jmp
fnstenv
xchg
flds
fidivrs
cmp
loop
mov
cmp
fcoml
push
les
in
dec
fs
add
pop
mov
aaa
push
xchg
lea
loopne
inc
fiadds
lret
movsb
jmp
push
mov
xchg
fildll
das
pop
pop
faddl
dec
in
dec
sub
cmp
bound
stos
mov
loope
dec
or
lret
and
jae
aad
add
mov
jge
sahf
mov
popf
pop
jo
pop
inc
mov
mov
fstp
sub
xchg
push
shrb
sbb
pop
xchg
inc
mov
cmp
xor
fidivrs
insl
fdivl
enter
rorl
loope
adc
stos
std
dec
lock
sbb
mov
addl
repnz
mov
dec
mov
addb
or
mov
cwtl
aad
or
in
cmpsb
test
mov
stc
ljmp
cmp
inc
inc
das
or
lret
mov
scas
aas
mov
lcall
mov
cmp
movsb
test
pop
sub
xor
sbbl
mov
test
das
sbb
mov
push
out
lahf
add
push
inc
mov
lcall
pop
rclb
out
fisttpll
mov
jb
cld
cmp
ficoml
push
add
pop
out
fsubl
divb
aas
mov
daa
fimull
inc
fnstsw
sub
shlb
fwait
mov
jno
mov
or
insl
daa
jmp
or
negb
loope
push
outsb
rorb
jno
stos
loope
adc
cld
mov
sbb
xchg
add
loope
jns
push
lea
xor
adc
xchg
xor
je
mov
rolb
xchg
nop
test
adc
addb
jp
imul
inc
mov
imul
test
inc
loope
stc
xchg
jmp
lea
aaa
cmpsl
push
cs
mov
push
insl
aaa
mov
xchg
lock
lret
push
xor
sbb
inc
cmc
jl
sbb
jmp
inc
cld
repnz
iret
pop
adc
mov
mov
pop
sub
push
in
nop
push
jmp
mov
pop
sub
roll
or
pop
mov
in
insb
lcall
loop
cmpl
mov
and
ret
sbb
in
or
repnz
push
mov
sbbb
or
aam
cld
pop
inc
pop
sbb
sub
nop
sub
xor
pop
movsl
pop
mov
sub
mov
sub
push
mov
cmp
adcb
inc
cmp
addl
push
movsb
out
jae
xchg
mov
xor
mov
push
sbb
movsl
jb
andb
pop
fisubl
test
popa
adc
cmp
cmp
pop
jl
pcmpgtb
stos
xor
push
cmc
add
lea
inc
out
mov
jnp
pop
adc
or
in
js
hlt
push
xor
mov
mov
or
sbb
pop
mov
lret
ret
inc
bound
adc
iret
mov
fsts
xchg
adc
dec
int3
mov
push
add
jp
xlat
cmp
dec
cmp
or
fisttpl
mov
dec
fistl
xchg
inc
or
sbb
pop
mov
sub
fadd
xor
icebp
dec
push
int3
test
push
outsb
add
sbb
jbe
in
rcrl
inc
xor
cmp
mov
pop
roll
sbb
stos
cmp
dec
rol
stos
mov
cmp
pop
lret
lret
cwtl
ret
xchg
pop
js
jne
icebp
push
stos
lahf
iret
or
ja
loopne
mov
fdivrs
push
add
inc
jecxz
bound
fs
or
mov
loop
mov
mov
popf
aas
push
arpl
popa
outsb
call
sbb
jnp
and
clc
fsubrl
shll
ret
sahf
js
mov
shll
or
xchg
mov
push
pop
pop
mov
xchg
cmp
imul
testb
lcall
sub
xlat
dec
add
cmp
jp
into
arpl
les
xlat
mov
jb
popa
andb
out
adcl
jmp
and
aas
mov
scas
mov
in
jecxz
inc
pop
shrb
adc
dec
or
sub
ds
mov
cld
xchg
push
popa
cmp
cld
jmp
push
je
in
test
mov
daa
clc
push
mov
mov
cmc
xchg
addl
mov
movsl
xor
push
jne
push
push
movsb
subl
dec
mov
les
insb
lods
dec
sub
fidivrl
xchg
iret
std
mov
mov
fmul
rorb
imul
mov
cmp
sub
mov
jo
and
and
sti
sub
dec
pushf
aam
adc
insl
push
cld
and
cmc
mov
push
mov
in
rclb
out
fmull
mov
lret
arpl
sub
rorl
lret
add
addr16
test
sti
rclb
jmp
in
hlt
dec
pop
jno
sub
das
dec
cld
cmpsl
in
mov
lods
inc
push
jbe
loop
stc
pop
ret
sub
push
xor
sbb
test
test
addr16
mov
sub
mov
clc
cld
ljmp
xlat
xchg
loope
stc
addr16
pop
test
xchg
mov
cld
pop
stos
mov
addr16
push
or
mov
imull
sub
cltd
loopne
cmp
je
jmp
stc
fsub
mov
jmp
add
rorb
push
push
shrl
cld
fcomip
pop
push
in
cmp
fwait
imul
mov
or
out
sub
adc
cld
xchg
std
mov
jbe
nop
cmp
sbb
fnstenv
scas
stos
dec
into
cld
jecxz
mov
mov
sbb
dec
iret
das
sub
xchg
push
mov
fsubrl
sarb
xor
pop
adc
fisttps
or
mov
push
das
adc
sub
xchg
lcall
test
jb
shll
fst
fmuls
data16
mov
xchg
and
sbb
fisubl
adc
inc
test
xchg
cld
pop
dec
sbb
pop
insl
in
stos
jnp
adc
insb
movsb
mov
mov
mov
xchg
nop
ret
fisubrl
testl
rcr
push
mov
jg
into
popa
sub
xchg
mov
pop
dec
imul
pop
cs
or
inc
repnz
inc
xor
xchg
xor
clc
mov
mov
push
push
lcall
xchg
enter
loop
cmc
dec
inc
lcall
inc
in
push
sub
mov
shrb
les
fisubs
loop
loopne
addl
push
xchg
sub
push
test
clc
xchg
mov
incl
mov
enter
out
ss
cld
in
bnd
push
fbld
mov
flds
icebp
push
pop
cwtl
dec
sbb
sqrtps
lods
sbb
mov
das
movb
pushf
mov
push
xor
mov
mov
pop
cld
lret
fcoml
pop
jmp
enter
lret
imul
mov
mov
loope
mov
inc
shll
mov
loopne
fsubl
in
mov
pop
loope
cmp
sti
adc
adc
icebp
adc
and
aas
xchg
mov
xchg
sbb
rol
mov
call
andb
inc
fnstsw
out
dec
sub
mov
arpl
andb
dec
pop
adc
stos
call
test
xchg
stos
xor
push
rcl
rorb
mov
aaa
es
es
lcall
push
into
add
cmp
jb
movsb
rolb
sbb
popf
pop
into
testb
sub
test
pusha
outsb
cld
js
cmp
xor
sahf
mov
mov
insb
jmp
mov
sbbl
fdivl
ret
addr16
and
push
fimuls
dec
rol
cld
std
adc
jmp
testl
cmpb
push
cmp
xor
int
sbb
iret
jmp
movsl
push
cmp
cs
adc
add
mov
shr
rcll
jno
push
or
or
add
test
into
clc
mov
mov
lea
cwtl
pop
mov
lret
lcall
mul
ret
sti
or
and
out
cmc
idivl
dec
aaa
mov
add
fstl
sub
andb
in
repz
cmp
and
test
mov
iret
sbbl
lea
das
and
pusha
adc
cli
cld
push
adc
xchg
lods
subl
fmull
cmpl
add
jge
or
fstpl
jns
jo
xchg
outsb
dec
in
mov
int
add
or
push
xchg
adc
sar
pop
cli
sbb
cmp
fildll
sub
mov
lahf
movsl
sahf
scas
jecxz
out
fldcw
lret
jle
mov
jle
je
sbb
out
mov
mov
js
jp
int3
xchg
xchg
clc
ja
mov
mov
fsubr
dec
test
cmp
push
adc
xchg
sbb
mov
sahf
out
out
sub
loop
add
popa
cs
or
insb
ljmp
pushf
or
out
mov
dec
aaa
movsl
or
pop
pop
in
mov
adc
sub
cmpsl
jo
test
and
sub
adc
or
rcrl
xchg
xchg
rcl
add
cmc
pop
or
push
fwait
test
sub
insl
dec
mov
cld
dec
sub
mov
addr16
je
es
popf
and
or
jb
out
dec
outsl
data16
add
jo
adc
les
outsb
insb
lret
js
cld
push
xor
notb
xchg
jmp
sub
out
or
mov
loop
addr16
cmp
sbb
pop
mov
mov
push
mov
shrb
fldenv
shll
out
pop
jbe
sub
jmp
ja
push
stos
xor
pop
rcrb
add
cld
mov
testb
enter
mov
pop
or
fcoml
dec
and
mov
xchg
mov
roll
pop
jbe
dec
loop
test
push
shr
sbb
out
jne
add
int
ret
jle
out
push
loopne
push
fisttpl
mov
jno
cmc
dec
loopne
aam
aam
cmp
popa
add
or
xor
ljmp
dec
and
jecxz
adc
jb
cwtl
cmpsl
inc
add
jb
mov
mov
ds
rolb
js
fwait
cld
sub
mov
pop
pop
fisubl
pop
add
repnz
sbb
mov
add
popw
movsb
fiadds
scas
add
in
cmp
test
xchg
push
jne
je
xor
mov
xor
out
mov
addl
pop
fidivrs
cltd
xchg
mov
or
cld
negl
add
clc
add
or
and
mov
popf
mov
ret
dec
repz
sub
mov
fiaddl
push
dec
stc
pop
cld
stos
ljmp
test
imul
mov
xchg
xchg
out
inc
xchg
xor
enter
repnz
jle
cli
adc
push
enter
lock
jmp
je
stos
out
cld
sahf
dec
sub
and
mov
insl
mov
out
std
adc
adc
cmp
pop
clc
inc
repnz
push
push
fiaddl
push
fstpt
mov
push
sti
fwait
insb
push
cld
lods
xor
icebp
cmc
out
mov
push
movsb
stos
es
push
sub
push
jne
pop
sbb
adc
iret
dec
jge
icebp
mov
pop
pop
jp
push
or
mov
or
adc
scas
cmp
stos
mov
insb
xchg
movsb
mov
sbb
push
icebp
test
in
nop
mov
push
push
test
mov
loope
mov
jge
loop
addl
cmp
push
neg
sbb
and
stc
mull
test
ret
mov
sub
mov
out
and
loope
inc
fimuls
pushf
add
shlb
aas
lock
mov
das
push
rcrb
insb
mov
int
jmp
pop
dec
inc
mov
dec
and
ret
push
imul
daa
or
leave
adcb
aas
cltd
fistpll
dec
pop
insl
fucomip
mov
in
cld
mov
sub
pop
pop
insb
das
loop
push
faddl
enter
test
or
push
push
rcrb
in
flds
outsb
aam
pmaxub
dec
andb
in
and
movsb
mov
sub
jmp
into
movsb
add
insl
arpl
sbb
xorl
mov
aas
xchg
sbb
push
fsubs
dec
fsubs
push
fwait
mov
les
jae
mov
cmpsl
inc
mov
or
sub
sbb
mov
mov
adc
mov
ljmp
pop
pop
dec
mov
or
lcall
jo
ja
add
dec
shr
add
data16
or
std
inc
or
stos
loop
fcoml
mov
sub
adc
dec
inc
int3
fildll
insb
pop
push
orl
loope
popl
mov
jae
mov
mov
mov
rol
sub
cmc
dec
fwait
imulb
sbb
mov
jle
mov
pop
xchg
test
mov
cmp
jle
or
leavew
mov
adc
ljmp
adc
dec
adc
pop
xor
sar
dec
mov
ljmp
add
push
call
push
lock
fisubs
repnz
xor
popa
jecxz
mov
stc
jns
leave
ret
in
xchg
mov
inc
lcall
push
repnz
mov
mov
jecxz
mov
dec
add
aam
ficoml
add
std
in
icebp
xor
insb
inc
dec
or
mov
and
jne
mov
push
sub
jns
xchg
insw
jb
mov
sub
jg
hlt
pop
sti
lcall
imul
or
cmpsb
enter
dec
shrl
outsl
outsb
rcrl
int3
and
test
popa
push
adc
jmp
cld
es
aam
inc
aaa
mov
ljmp
movsb
popa
addr16
pop
fisubrl
sbb
shll
fdivrl
cs
fwait
lods
popf
xchg
sbb
pop
add
xor
cld
inc
repnz
sbbl
and
push
or
fdivrp
out
mov
inc
test
movsb
inc
sub
add
ss
aad
pop
loopne
pop
sub
adc
lret
cmp
repnz
xchg
fdivl
push
cmp
mov
movsb
or
mov
inc
fcmovb
or
mov
jnp
xchg
inc
and
add
insb
jecxz
or
inc
js
and
in
fsubl
insl
pop
jne
jl
xor
cmpl
mov
aas
out
jmp
cmp
cmpsb
pop
stos
push
sbb
pop
pusha
cs
in
lahf
jne
jns
cmpsb
repnz
cmp
cmc
adc
je
aas
test
daa
in
add
dec
lcall
mov
pop
lret
xor
popa
mov
aam
popa
pop
sarb
mov
test
shll
xor
pop
jmp
imulb
ffree
push
sub
xlat
ljmp
fiadds
fs
adc
dec
push
testb
sbb
add
pop
dec
mov
shl
movsl
sub
dec
daa
xchg
inc
sbb
sub
in
xchg
xchg
dec
mov
mov
push
mov
sbb
cs
cmp
test
or
pop
add
sbb
ret
scas
in
fsubrl
clc
test
mov
dec
push
les
hlt
cs
mov
iret
idiv
in
and
adc
addl
mov
push
push
sbb
or
aam
rclb
pop
push
cld
addr16
cmp
xchg
ljmp
jecxz
mov
ljmp
adc
rcrl
stos
add
mov
lret
xchg
in
cmp
test
add
ja
enter
lret
sbb
mov
cld
xchg
dec
adc
pop
pop
cmp
pop
rcr
dec
call
xchg
pop
cmpb
jle
int
jle
inc
mov
loop
xor
fcoms
rol
add
call
sbb
pop
lock
inc
adc
popl
mov
out
ljmp
xchg
push
xchg
ja
aaa
mov
mov
add
jnp
movsl
sub
movsl
fs
das
inc
hlt
xchg
out
mov
ljmp
shll
push
cmpb
js
xchg
xor
je
loopne
cwtl
cs
mov
mov
push
mov
mov
mov
fdivrl
mov
frstor
ret
lea
xor
cld
imul
xor
inc
repz
mov
push
mov
pop
xlat
dec
and
push
adc
xor
imul
mov
xchg
sbb
cmp
push
in
mov
xor
pop
adc
into
and
test
cmp
les
ret
lret
add
ret
andb
imul
push
ljmp
xchg
fsubrl
mov
lea
push
mov
pop
xlat
inc
sbb
fwait
mov
movsbl
addr16
out
xor
int
cmpsl
push
mov
das
lahf
sbb
fmull
xchg
adcb
mov
mov
push
out
ret
mov
pop
movsl
add
jbe
and
push
inc
dec
sub
leave
mov
jecxz
push
jp
imul
stos
mov
shlb
xor
cld
xchg
enter
aam
icebp
nop
xabort
push
sbb
push
mov
xchg
or
daa
jne
imul
jg
dec
or
fadd
mov
pop
xchg
decl
dec
inc
int
nop
xlat
push
mov
adc
or
call
pop
notl
mov
shlb
mov
push
notb
sbb
daa
ret
push
push
dec
xchg
stos
xchg
fstps
inc
mov
stc
pushf
inc
daa
fidivrs
xor
xchg
lea
in
jnp
sub
addb
add
inc
xchg
sbb
orb
and
pop
fs
inc
movaps
sbb
jbe
test
jp
sbb
push
insl
jmp
test
pop
stc
test
push
mov
jae
cmp
data16
stos
mov
push
stos
test
sub
add
or
fwait
push
mov
fcmovu
out
sub
rorl
or
rcl
or
dec
dec
out
mov
push
outsb
sub
push
dec
mov
cmp
fcomps
push
or
xor
mov
sbb
int3
add
push
ss
ds
sub
xchg
pop
mov
add
out
insb
xor
pop
dec
repz
outsl
inc
fs
cld
cmp
jg
sub
shll
test
shlb
adc
cmp
cld
inc
outsl
cmp
adc
push
test
jne
sbb
add
or
xor
xchg
std
fimull
int
inc
rorl
and
jae
int3
cld
mov
fsubrl
push
cmp
loope
lahf
aad
jae
sar
pop
xchg
pop
push
mov
gs
repnz
mov
or
fmul
or
ffree
push
cmp
push
stc
jb
cltd
adc
xchg
mov
lods
insl
in
xchg
sbb
sbb
test
subl
inc
sub
or
push
cld
adc
fmul
cltd
sub
jns
fisttps
inc
sub
pop
movsb
mov
es
ret
lea
inc
lret
icebp
daa
or
ljmp
adc
and
cld
imul
xchg
cmp
cwtl
add
mov
push
mov
xor
add
mov
cmp
push
mov
mov
push
mov
cld
gs
int
add
push
mov
sub
push
rorb
mov
jo
shll
sti
or
pop
pop
cmpsb
xor
inc
xor
cltd
loope
adc
in
into
fnstenv
and
movsl
adc
data16
mov
jno
ss
and
rolb
nop
cmpsl
testl
fmul
lods
inc
in
icebp
and
push
dec
mov
adc
and
dec
push
fisubs
xchg
gs
mov
or
mov
int3
sub
fsub
mov
or
dec
test
mov
in
dec
fsubl
mov
and
test
mov
sub
mov
in
ret
add
les
mov
ljmp
into
jge
jle
dec
xchg
mov
sub
push
in
mov
std
fcmovb
lcall
roll
sti
addr16
rolb
into
aam
or
scas
xchg
cld
push
and
sbb
in
jmp
mov
imul
xchg
lret
fisubs
sahf
mov
pop
int3
xchg
sub
pop
xchg
dec
jae
push
imul
inc
pop
aam
dec
test
sbb
stos
xor
and
test
or
mov
and
into
mov
jae
sub
mov
mov
roll
loope
call
add
pop
mov
mov
test
dec
jle
sub
shl
dec
call
jno
insb
cmp
out
lahf
xchg
incb
mov
cld
inc
xchg
ja
mov
shr
mov
data16
fs
sbb
pop
out
ret
lods
jge
pop
fisubrl
mov
mov
ds
outsb
dec
and
xor
pop
pop
sub
movsb
sti
lock
jmp
mov
mov
aam
or
cmp
push
pusha
push
enter
push
aam
dec
mov
jo
mov
imul
andl
mov
pop
cmp
out
sub
mov
test
lods
push
jb
shl
lea
icebp
inc
jmp
das
push
test
test
xchg
loope
push
or
dec
cmp
aad
push
pop
dec
ficompl
push
enter
sub
imul
inc
mov
jno
sarb
aas
xchg
push
cmp
lret
cmc
push
xchg
mov
mov
js
xchg
mov
add
mov
mov
fsubl
cwtl
sbb
mov
out
out
adc
adc
int
mov
adc
int
repnz
test
out
imul
jp
outsb
xchg
sbb
jne
sbb
out
and
aas
jne
jle
int3
out
push
push
mov
shlb
lds
mov
mov
or
sbb
popa
push
xor
ret
enter
sbb
mov
ljmp
stos
gs
insl
ja
imul
adc
push
inc
in
bound
xchg
loopne
ja
clc
je
pop
mov
sbb
mov
in
aaa
jge
mov
inc
insl
pmaxub
sub
cld
and
inc
dec
push
pop
jbe
in
ljmp
loopne
ret
movhps
popl
jbe
and
or
int
xchg
mov
popa
fcmovne
pusha
shlb
jnp
xor
or
aam
mov
sub
mov
push
fldenv
push
sub
push
dec
or
mov
lret
mov
js
fnstcw
jle
push
int3
jg
and
sar
inc
or
add
inc
sysret
and
outsb
fadds
cmpsb
cmc
and
arpl
mov
cltd
mov
add
sub
jle
cmc
adc
outsb
mov
pop
push
or
inc
and
cmp
adc
mov
xor
xchg
cmp
adc
fdivp
test
mov
adc
xchg
stos
jnp
and
push
stc
sub
pushl
xchg
mov
hlt
repz
leave
inc
dec
repnz
sbb
mov
rolb
rcrb
cmpsl
adc
mov
adc
int
leave
xchg
into
cld
lcall
scas
repz
jge
addl
pop
add
movsb
out
xchg
pop
and
ficomps
bound
popf
adc
das
shlb
cltd
addl
shlb
lds
loop
cmp
insb
movsl
xor
dec
out
stos
xorb
jp
aad
ficompl
push
ds
and
mov
mov
dec
cmp
cmp
fcmovu
xchg
pop
cmpsl
fcoms
xlat
testl
push
ljmp
cmpsb
xchg
inc
out
inc
sub
mov
adc
dec
push
bound
push
adc
ja
xchg
repnz
ja
jle
cmp
in
push
xor
testb
push
inc
adc
jae
hlt
mov
pop
cmpsl
imul
sarl
mov
js
fsubl
enter
ror
pop
lret
mov
push
jmp
lea
stos
ds
repz
roll
sbb
mov
data16
or
mov
jl
mov
and
sub
push
and
inc
ror
cs
push
cmp
cmpsb
adc
fcompl
je
into
jp
mov
insl
pop
mov
push
jle
add
fwait
mov
incl
xor
or
roll
sub
jb
push
jp
aad
and
cmp
jecxz
mov
stos
mov
mov
mov
xchg
aad
push
shrb
cli
data16
mov
loopne
mov
cmp
pop
cli
cli
sub
mov
pop
jp
lock
ds
mov
adc
pop
mov
fdivr
and
mov
jp
jb
clc
icebp
and
insl
dec
movsl
adc
mov
xchg
inc
xor
and
movsb
loope
shr
das
pusha
nopl
cld
cld
mov
js
fwait
or
lret
dec
sahf
out
aas
movsb
loopew
cmp
movsb
jecxz
mov
ret
lods
and
xor
push
mov
ljmp
mov
jp
adc
test
jbe
stos
xchg
inc
lret
insb
mov
lods
mov
push
cld
xchg
loop
cmc
inc
fstps
andb
xor
orl
pop
setb
inc
sbb
or
xchg
add
jp
mov
sbb
cmp
or
xor
or
xchg
jmp
test
roll
adc
cmp
cmpsl
ret
rorb
loopne
invd
std
pop
pop
imul
paddd
push
pop
dec
and
xchg
in
subb
lock
mov
outsl
ds
and
mov
or
negl
stc
jl
int3
pop
inc
push
shll
pop
les
jns
adc
push
xor
inc
test
jecxz
in
lret
decb
cmp
scas
hlt
loop
popa
xchg
in
cld
pop
dec
lock
repz
sub
clc
popa
fcompl
xchg
push
mov
movsl
dec
ret
jno
inc
cmp
dec
inc
push
push
loope
mov
cltd
dec
out
and
pop
jbe
ja
pop
fimull
mov
and
mov
sbb
test
jns
mov
shlb
push
mov
sbb
jmp
or
int
push
iret
dec
cmp
or
fcoml
sbb
mov
inc
push
flds
call
mov
xchg
rcll
lods
outsb
cmc
inc
je
or
mov
mov
jle
dec
insl
pop
ficoms
sub
xchg
int3
clc
cld
push
hlt
fsubrs
xchg
int
cmp
es
hlt
cltd
sub
repnz
enter
les
lret
movsl
ljmp
ja
pushf
and
xchg
pop
xor
hlt
arpl
les
es
and
hlt
fsub
in
mov
mov
aas
fimuls
ret
lods
std
aad
xchg
pusha
sbb
dec
dec
movsb
push
cld
arpl
decb
adc
fs
cld
cltd
test
cmp
cmp
daa
adc
cmp
cld
add
sbb
xor
push
inc
pop
xchg
in
add
jae
or
push
inc
add
pop
outsb
push
out
fisubl
jbe
sbb
xor
mov
cs
or
mov
movsb
adc
xor
xlat
add
jecxz
pop
jno
mov
inc
lcall
shl
lahf
mov
lret
jl
mov
ret
sahf
icebp
test
aas
loope
add
enter
xor
faddl
int3
outsb
decb
out
mov
std
push
rolb
loopne
sbb
test
xor
in
les
test
bound
decl
add
ds
rep
dec
adc
ds
mov
sbb
lcall
aas
pusha
shrl
bound
enter
int
popf
dec
mov
jb
xchg
xchg
cmp
js
cmp
pop
push
xor
xor
arpl
scas
es
lret
insb
mov
sub
dec
fiaddl
push
outsl
fsubl
sub
sbb
cwtl
insb
movsb
pop
inc
mov
imul
inc
mov
jae
movsb
ja
pushf
fistpl
insb
push
cmc
sub
lods
out
xor
xor
sbb
or
xchg
xor
out
or
dec
fincstp
mov
shr
push
inc
mov
loope
or
outsb
test
adc
jp
das
push
out
add
cmp
stos
mov
cltd
insl
test
lret
inc
repnz
fimull
mov
ret
addr16
stos
inc
cld
stos
lea
mov
and
faddl
cmp
hlt
inc
nop
lds
or
sub
test
and
jne
sub
jp
into
repnz
mov
mov
and
fmul
cltd
xor
rorb
sbb
lods
xchg
scas
and
inc
hlt
aaa
clc
mov
and
movsb
mov
fdivl
icebp
clc
inc
scas
lea
lcall
jbe
mov
fs
in
pop
xchg
test
js
cwtl
test
or
cmp
lds
loopne
push
jbe
jecxz
inc
int
in
inc
xchg
fisubrl
bound
cwtl
push
push
inc
mov
stos
bound
call
fbld
cld
sbb
mov
stos
mov
xor
je
sub
out
stos
hlt
incb
cmp
xchg
mov
mov
push
out
cmpsb
jecxz
enter
stos
add
movsb
arpl
dec
fistps
xor
aad
test
ljmp
jne
push
inc
jbe
sub
inc
cltd
ret
shlb
inc
push
mov
repz
inc
mov
in
fsubl
mov
add
cld
mov
pop
or
push
push
stos
pusha
mov
shl
mov
popa
test
or
stos
jmp
js
add
out
addr16
pop
dec
je
or
sti
lret
ret
enter
mov
sub
addr16
push
decb
jl
das
mov
imul
adc
xchg
push
mov
lret
into
cmp
loope
int
lods
mov
push
sub
mov
test
cli
or
loopne
mov
xchg
mov
pop
xchg
bound
push
iret
iret
int3
lods
int
sub
xorl
mov
and
outsl
shlb
js
cmp
ret
inc
aas
ljmp
or
ljmp
cmp
lods
dec
imul
into
adc
inc
lcall
mov
xlat
lods
lret
jp
push
ss
arpl
int
adc
pusha
mov
arpl
mov
sbb
out
jg
popf
xor
mov
push
int
pop
push
xlat
ret
cmp
pop
fisubrl
mov
or
sahf
test
or
stos
sub
mov
pop
lcall
movsl
push
mov
pop
adc
lfs
pop
ljmp
or
shl
cs
pop
bound
and
jb
out
lock
loop
faddl
fists
and
sub
adc
sub
mov
xor
mov
test
movsb
adc
fisttpll
mov
sbb
lods
jp
daa
clc
push
test
insl
xlat
mov
lods
in
cli
add
iret
inc
test
dec
inc
xchg
mov
adc
sub
xchg
andl
cmp
sbb
in
jb
movsb
jle
cli
into
cltd
cmpb
push
jge
ret
adc
xchg
and
pop
xchg
dec
fsubr
movsb
jmp
pop
mov
pushw
outsl
or
and
inc
mov
mov
pop
pop
and
lea
jb
pop
inc
push
nop
jmp
lock
enter
into
in
sbb
ret
stos
ficoms
sbb
int
psrlw
mov
fs
jae
pop
lock
test
jae
rorl
pop
cld
in
mov
lods
scas
mov
ds
push
sbb
mov
ljmp
stos
nop
or
dec
test
les
enter
push
je
mov
shl
add
lea
loope
pop
mov
lods
sub
push
push
jp
mov
inc
xchg
xchg
push
enter
out
mov
sub
jo
or
add
pop
adc
jecxz
mov
jmp
clc
testb
pop
mov
aad
push
pop
loop
jge
outsb
lret
add
xor
jo
jecxz
dec
scas
test
icebp
adc
jp
adc
pushf
inc
stos
lock
divb
hlt
lods
cld
adc
mov
dec
pushf
loope
scas
mov
stos
shl
mov
mov
dec
mov
cmp
js
jo
ljmp
mov
add
mov
pop
push
adc
rolb
jne
sub
retw
mov
mov
add
cs
repnz
sbb
mov
xor
xchg
ljmp
rorl
in
cld
sbb
psubusw
lcall
movsb
jmp
jge
xchg
xor
cld
negl
bound
fsubs
or
popa
insb
cmp
and
push
fld1
pop
ret
jge
sub
roll
xchg
clc
enter
inc
or
and
mov
shll
or
jmp
loope
pop
or
dec
push
adc
mov
iret
sub
int
call
sub
jo
xor
sub
fsubr
mov
rorl
and
test
add
pop
ss
cwtl
mov
sti
adc
cmpsb
lds
icebp
dec
inc
jge
add
lret
orb
jb
in
lock
xchg
pushf
fbld
ficomps
mov
mov
imul
mov
sub
jecxz
dec
out
adc
and
imull
data16
cmp
cld
es
mov
cmp
bound
adc
cwtl
or
testl
icebp
outsl
mov
push
or
shrl
popf
lahf
sarb
imul
pop
lret
mov
jns
xchg
into
sbbb
incl
shll
push
fsubl
xchg
shlb
lcall
adc
push
or
addl
es
jb
adc
sbb
lahf
and
inc
or
mov
test
mov
aad
movsl
ljmp
test
addl
arpl
cs
xor
jnp
idiv
jecxz
mov
push
push
cmp
jl
jecxz
xor
repnz
cmp
std
add
xchg
call
in
mov
mov
mov
inc
dec
insb
mov
lods
aam
fsubrl
adc
sbbl
pop
and
in
mov
lods
dec
icebp
clc
adc
fiaddl
lret
add
dec
pop
lods
push
les
and
sub
loop
push
fsubrl
cmp
aam
test
inc
in
dec
fiadds
lret
jno
push
scas
jae
aas
push
adc
lea
fcmovu
jg
mov
jae
push
jl
jnp
adcb
xor
inc
ret
clc
lea
pusha
mov
imul
data16
nop
in
lret
frstor
and
jmp
ret
fsubr
push
imul
mov
mov
stos
fstps
leave
mov
dec
push
push
lcall
ret
cld
call
jbe
cmp
jnp
ds
stos
mov
sub
int
cli
andb
mov
pop
mov
fisubrl
movsb
xlat
mov
push
push
adc
xchg
mov
mov
sar
lods
cmp
jge
and
movsb
stos
cld
push
test
call
in
sbb
xlat
adc
xchg
out
inc
lcall
cs
mov
mov
mov
jle
out
mov
mov
ror
jle
mov
roll
cmp
fadds
xorl
out
cld
sub
sbb
fcmovu
mov
push
mov
pop
and
add
add
rolb
out
out
ficoms
pop
push
push
pop
mov
dec
mov
aad
add
jbe
fisttpll
cmp
sarl
out
push
sub
in
xchg
inc
cmpsl
aam
jg
arpl
adcb
std
cld
scas
mov
push
adc
clc
pop
mov
xor
add
pop
sub
or
ficoms
sarb
mov
arpl
orb
jle
mov
ja
pusha
push
jge
or
test
mov
cwtl
mov
mov
mov
pop
jle
sub
in
call
mov
sub
les
and
mov
add
in
lods
xchg
xor
inc
jge
int
mov
xchg
lcall
lock
mov
shll
jbe
ds
int
bound
cmp
iret
les
leave
lods
pusha
dec
push
mov
mov
mov
ja
pusha
push
sub
xorl
add
test
loope
pop
inc
cmpsb
cmc
leave
addr16
ret
jnp
add
movsb
cmpsl
push
cwtl
cs
hlt
or
repz
test
leave
sub
mov
mov
rcll
push
fisttpll
fbld
lret
cld
add
stc
out
pop
mov
sti
roll
mov
cltd
xor
mov
testl
push
mov
lahf
mov
xchg
jle
js
add
xchg
fwait
std
cmpl
inc
insl
and
enter
out
adc
repz
stos
xchg
fdivr
push
stc
push
fdivrs
jl
mov
fucomp
mov
stos
lods
fldl
bswap
dec
in
cmp
loopne
leave
sti
cmp
inc
sbb
mov
cld
aam
ja
adcl
dec
xchg
jmp
mov
test
jmp
jbe
rcll
ficompl
fmull
dec
mov
cmp
sbb
aas
jns
aam
aas
test
xor
in
lahf
or
or
jne
inc
xchg
hlt
xor
mov
or
jmp
fwait
nop
mov
mov
push
pop
cmpsb
xor
leave
fs
call
loopne,pn
xchg
ljmp
fdivrl
pop
pop
cmc
stc
and
cmp
push
bound
adcl
pusha
pop
pop
in
mov
ljmp
push
ror
fiaddl
repnz
sbb
push
or
ljmp
ja
ftst
add
fsts
pop
dec
out
psrlw
int
jl
int
ret
push
test
jno
pop
dec
or
jl
call
xchg
test
ret
pop
xor
jbe
fsub
ret
xchg
mov
rcrl
std
pop
sarl
out
out
dec
mov
sbb
das
iret
int3
or
inc
mov
jnp
mov
push
mov
jb
test
sbb
cmp
xchg
jp
dec
lret
inc
stos
je
jo
lods
push
push
leave
lea
das
test
pop
xor
inc
clc
sbb
xchg
pop
insl
cmp
mov
and
sub
pop
sbb
into
mov
out
out
jmp
roll
inc
cmpsb
xor
xor
cwtl
in
out
push
fcmovu
pushf
les
jns
cltd
lods
mov
movsb
mov
ljmp
mov
pop
cmp
sub
mov
dec
cmp
jo
sub
and
cmp
repz
in
int3
add
add
dec
insb
fstpl
xor
out
es
arpl
push
loop
jns
dec
mov
xchg
mov
add
cmp
lods
pushf
inc
out
push
or
mov
mov
test
dec
xor
lock
mov
idiv
sbb
mov
lods
sub
mov
jecxz
movsb
popa
add
push
cs
ret
outsb
aam
fdivr
pop
rcll
popl
xor
or
fucomi
push
fimull
and
das
fsubrl
or
inc
aaa
xchg
int
je
mov
jne
movsl
insb
call
mov
adc
pop
jb
and
shlb
xor
jecxz
movsl
or
loope
divl
jnp
loop
inc
fimuls
out
cmp
inc
fistpll
es
lods
icebp
leave
mov
fisttpll
sbb
inc
xchg
cld
sub
or
rcr
jnp
loopne
pop
mov
add
pop
mov
popf
pop
fs
daa
add
cmp
jl
scas
pusha
out
out
inc
ret
mov
jo
adc
jmp
sub
adc
dec
dec
js
negl
xor
dec
outsl
and
dec
jbe
out
push
aam
jbe
movsb
mov
pop
xchg
or
add
test
pop
movsb
test
xor
bound
loopne
dec
insl
aam
mov
fnstenv
rcll
cmpl
mov
cmc
inc
cld
pop
lret
dec
cltd
jb
testb
push
pop
pop
push
xchg
mov
movsb
mov
test
xchg
push
adc
bound
push
mov
pop
out
cmp
inc
mov
cmpb
cltd
shlb
iret
aam
push
sbb
jecxz
out
xchg
ljmp
add
cmp
inc
popaw
jmp
stos
adc
and
or
repz
mov
les
jbe
fisubrl
movsb
and
dec
mov
mov
in
mov
mov
in
inc
test
mov
dec
sbb
push
ljmp
dec
xchg
push
loopne
movsb
adc
and
mov
adc
push
dec
gs
and
push
jno
adc
pop
popf
mov
cld
push
cmp
cmp
dec
call
pop
in
imul
movsb
decb
scas
push
int
into
inc
mov
jle
das
and
or
push
stc
out
insb
add
cmp
test
in
sub
inc
rcrb
inc
xchg
dec
push
cmp
ss
adc
mov
daa
cli
movsb
cmp
test
dec
out
int
fbld
inc
sub
lds
lock
aad
xchg
stos
mov
imul
adc
fisubl
or
xchg
sbb
outsl
jmp
pop
xor
mov
ret
subb
loop
mov
push
loop
es
push
gs
cs
mov
lods
mov
push
mov
jecxz
imul
fistps
pop
xor
movsb
fsubrs
arpl
sbbb
aas
mov
sarb
and
iret
xor
jecxz
into
push
test
lods
clc
outsl
xchg
repz
fwait
xchg
outsl
out
pop
jecxz
dec
gs
mov
sbb
xchg
and
mov
aaa
mov
movsb
cld
fldt
insl
outsl
cld
or
loopne
xchg
int3
sbb
mov
sbb
jg
inc
fsubr
mov
loop
into
mov
cld
movl
inc
push
mov
and
lock
movl
mov
jnp
mov
cmp
in
test
in
aam
mov
popa
insb
div
xchg
mov
inc
jo
push
push
cmc
mov
sti
mov
fsubrl
dec
add
or
sti
ficoml
sbb
sub
outsb
gs
xchg
or
js
out
in
xchg
imul
xor
mov
repz
and
mov
in
mov
push
sbb
inc
repz
xor
aam
jns
je
xlat
mov
cmpsb
popa
shrb
add
pop
stc
idivl
fidivrs
push
dec
or
js
in
ja
aad
ljmp
xor
push
in
dec
testl
fmull
inc
jle
sbb
incb
ljmp
pop
mov
insb
jae
loop
sub
pop
push
lcall
sbb
pop
xchg
push
inc
popf
lcall
pop
fisttpl
shll
or
clc
jl
test
in
jne
mov
adcb
mov
das
je
push
xchg
mov
or
call
add
orb
aas
jne
call
ss
stos
add
mov
into
aas
push
and
insl
clc
popa
push
or
adcb
sub
cld
imul
dec
sbb
mov
mov
stos
sub
test
pop
aas
fdivrl
imull
test
mov
xchg
push
mov
add
pusha
sub
roll
xchg
rcr
dec
sub
or
psubsb
sub
in
adc
in
and
out
lret
add
out
ljmp
xchg
xchg
add
addl
jle
imul
sbb
xchg
inc
jns
pop
xchg
sub
ds
add
fcmovnu
jecxz
inc
push
mov
dec
cld
or
pushf
fsubl
inc
push
ljmp
in
aam
dec
dec
test
sub
lock
out
mov
sub
idiv
cmp
lods
mov
mov
dec
mov
imulb
int
adc
add
xor
add
mov
pop
mov
lods
imul
sarb
and
mov
mov
push
sub
ficoms
add
fidivrl
movsl
roll
bound
inc
sti
repnz
dec
fdivrl
pop
or
mov
push
sub
test
sub
int3
sub
mov
inc
push
fst
aam
cld
jle
idivl
shlb
out
cmp
xchg
xchg
sbb
leave
mov
inc
pop
inc
lock
fsub
mov
les
test
push
mov
mov
repz
aam
jg
sbb
out
jno
cmp
lods
enter
movsb
xor
lods
and
fwait
sub
mov
sbb
movsl
sti
popf
nop
shll
mov
shlb
enter
jb
push
testl
adc
pop
fidivl
xchg
jp
mov
xorb
fnstenv
sub
movsl
aas
test
inc
sub
or
das
jle
shl
dec
push
testb
hlt
push
xchg
aas
fdivrl
repnz
jb
mov
fidivrs
add
gs
sub
sub
sub
inc
push
scas
data16
stc
jno
ret
sub
mov
mov
insb
or
shl
and
mov
sti
out
mov
fiaddl
rorl
out
jmp
push
cld
cmp
pop
rcll
jmp
jno
sbb
incl
js
lret
ds
lcall
dec
sarb
mov
jne
call
mov
inc
jecxz
aam
mov
or
cmp
cltd
adc
and
adc
mov
cld
xchg
sbb
jmp
shrb
inc
loopne
jns
pop
jmp
adc
dec
out
xor
ja
adc
hlt
jle
sbb
xor
mov
jge
mov
je
test
pusha
shll
das
test
jbe
sbb
pushf
mov
or
out
jle
outsb
dec
fstpt
mov
mov
push
jb
jnp
mov
xchg
ja
sahf
pop
cmp
mov
mov
into
lock
jecxz
in
aas
out
inc
mov
xor
mov
mov
lcall
or
mov
sub
inc
jb
push
ljmp
ficomps
mov
mov
scas
hlt
push
cld
clc
cmp
cli
clc
push
iret
cmp
add
lock
and
hlt
repnz
xor
xchg
imul
inc
dec
jle
notb
mov
mov
lret
loop
adc
sbb
loop
jo
ror
push
adc
cli
je
fs
inc
sub
jo
xchg
lret
and
jae
cmpsb
ret
fwait
pop
mov
push
mov
mov
test
outsl
and
ret
mov
lods
repnz
mov
mov
inc
loop
scas
leave
mov
aaa
push
cmpsb
loop
xchg
xchg
pop
movb
mov
jae
scas
pop
in
icebp
xor
lret
movsb
lea
int
dec
lea
jg
cmpl
or
js
fsub
mov
rol
add
mov
ret
mov
or
jo
adc
sub
push
pop
adc
push
pop
fsubl
call
es
sub
sub
mov
xchg
mov
jmp
xchg
ja
dec
mov
and
cwtl
stos
fiadds
int3
sub
gs
dec
sub
sarb
shl
ret
rol
pusha
cld
jns
test
push
xchg
fs
push
and
iret
and
scas
ret
pop
jg
in
mov
fidivl
or
or
mov
pop
lss
mov
add
cs
inc
mov
xchg
mov
arpl
or
fimull
jmp
fs
fistpll
iret
js
movsl
int3
hlt
icebp
sub
inc
push
add
movb
enter
mov
std
inc
adc
push
cmpsb
outsl
test
je
ficoms
stos
mov
inc
testl
ror
into
mov
adc
mov
mov
sbb
addr16
push
xchg
mov
sub
int
inc
adc
xchg
outsb
mov
dec
into
pushf
movb
jno
pop
xchg
mov
mov
inc
mov
mov
mov
mov
adc
sbb
or
inc
ja
int
inc
sub
and
loop
repnz
insl
jp
jb
into
cld
push
test
mov
jmp
pop
inc
inc
ret
leave
jg
ret
inc
mov
testl
mov
scas
mov
jg
mov
popa
inc
int
pop
mov
std
sbb
cmc
and
jecxz
mov
clc
mov
das
mov
sub
je
adc
sbb
in
add
mov
xchg
adcl
add
cmc
lahf
jp
in
or
out
cs
ds
dec
fisubl
sbb
pushl
lods
int3
ss
loope
xchg
xor
fs
in
cmp
dec
xor
mov
dec
inc
jo
cmp
mov
les
shll
sub
mov
cwtl
popaw
mov
sbb
scas
js
addr16
fcomps
stos
iret
push
lcall
mov
outsl
mov
iret
mov
js
adc
fcoml
sbb
fs
and
fldl
cmc
cmp
lea
sbbl
ljmp
ja
sub
xchg
xchg
movsb
aas
xorb
in
insb
aaa
jmp
mov
in
and
lods
rorb
shl
mov
loope
loope
lock
enter
test
xor
out
in
mov
and
mov
arpl
inc
jle
xor
cmp
jnp
cmp
sbb
sbb
out
or
insl
inc
pop
mov
mov
mov
sbb
cmp
aad
adc
add
mov
outsb
loope
adc
pop
lret
mov
cs
mov
push
inc
jp
jecxz
ja
cltd
or
and
enter
mov
mov
push
inc
nop
cmpsb
pop
mov
xlat
out
mov
roll
lods
mov
mov
lds
or
in
and
jmp
adc
mov
sub
sbbb
int3
add
test
imul
push
cmp
mov
sub
jb
ja
mov
xchg
shr
lods
cwtl
nop
adc
cmp
fimull
aas
jae
test
and
pop
xchg
lock
xchg
rcr
cld
sti
inc
pop
sub
loope
lds
jg
aas
inc
rolb
xchg
pop
mov
jecxz,pt
mov
repz
sbb
jno
inc
mov
sub
movsl
ds
sbb
mov
cmpsb
mov
pop
repz
lahf
loope
scas
rolb
dec
test
fidivl
push
cld
pop
outsl
mov
push
push
ret
bound
mov
stos
test
lock
data16
iret
xorl
popa
push
cld
push
mov
lea
test
jb
mov
int
push
mov
pop
inc
sub
sbb
ljmp
inc
sbb
sbb
pop
fidivrl
mov
inc
lcall
cmpsb
call
push
jl
pop
pop
xor
and
popf
mov
or
and
les
xchg
out
sti
push
or
jle
push
loopne
fildl
jge
lods
adc
repz
dec
pop
mov
jb
push
xchg
pop
push
xchg
les
mov
loope
and
push
and
ljmp
jo
mov
bound
sbb
sbb
xchg
pop
decb
jl
fcompl
mov
xor
pop
push
popf
enter
inc
fsubl
sub
aaa
cmp
int3
sarl
test
jmp
in
jmp
cld
xor
jbe
loopne
aas
and
cli
outsb
xor
lret
cmp
test
jno
adc
cmp
dec
mov
mov
cld
dec
std
jg
shlb
add
out
mov
cltd
add
test
movsl
jecxz
jne
int
pop
pop
push
and
inc
sbb
test
fsub
data16
aaa
bound
incl
mul
test
jnp
test
pop
ret
mov
jecxz
pop
lcall
push
or
repz
out
imul
xchg
jmp
js
cwtl
mov
lret
out
cs
fidivrs
adc
je
add
movsb
mov
pop
push
mov
xchg
mov
test
inc
outsb
mov
xchg
dec
sub
ror
aas
pop
fs
dec
cmc
scas
fsubl
jnp
pop
inc
cli
js
int3
sbb
xorl
test
adc
xor
iret
mov
pop
outsb
cli
leave
int
test
jg
pop
push
jns
lret
jne
or
inc
rcl
push
mov
bnd
mov
jae
cld
inc
es
mov
or
cli
mov
cmp
inc
mov
cld
fnstcw
aaa
mov
jmp
or
mov
jmp
fsubrl
flds
repz
adc
push
pop
outsl
in
xchg
incb
fimull
fstl
xor
or
int3
hlt
or
jns
jmp
push
mov
and
les
or
sub
lods
adc
or
out
inc
push
add
imul
cwtl
sub
mov
pushf
jno
xor
cmp
test
decb
popa
mov
mov
cli
dec
push
xor
test
sub
lods
out
mov
std
inc
jne
sub
out
lahf
pop
push
mull
std
sub
cmpsb
repz
dec
ret
pop
ljmp
lock
enter
cmp
jo
mov
cli
jl
push
aas
divps
cltd
dec
stos
sbb
icebp
push
inc
cmp
les
lock
jge
and
xor
push
fnstenv
pop
mov
add
dec
shrb
aas
sub
or
jecxz
shll
test
test
or
loope
out
lret
pop
xchg
sub
jns
aas
xchg
adc
or
adc
sub
xor
push
xchg
cmp
add
rorb
pop
xchg
or
sub
or
jmp
hlt
pusha
cs
jg
mov
divl
inc
mov
mov
mov
mov
pop
adc
or
lret
cmp
lcall
popa
imul
call
rcrl
sbbl
sahf
xor
ja
push
mov
bound
xor
imul
adc
mov
fldl
jmp
clc
movsb
scas
push
mov
incl
daa
add
push
mov
cld
or
out
fsubl
leave
sub
test
rol
cwtl
push
cmp
loop
fwait
pop
dec
adc
lret
mov
jno
sub
push
jmp
sub
std
sbb
sbb
mov
inc
sub
push
mov
jb
and
adc
outsl
mov
ret
imul
push
pop
cmp
iret
fsubl
outsb
adc
nop
arpl
jp
dec
jecxz
jnp
sbb
lret
add
pop
int
lret
adc
cld
nop
sti
stos
adc
les
mov
and
cmp
mov
fs
mov
add
frndint
dec
push
jle
daa
and
repnz
adc
test
int3
andl
in
or
pop
mov
sbb
mov
or
add
dec
mov
aas
cmp
ror
sub
dec
lret
lea
movsb
cmp
lds
adc
dec
adc
loopne
adc
pop
adc
fmul
mov
xchg
andb
push
stc
push
push
fcmovu
jp
adc
shl
mov
inc
cwtl
jp
femms
mov
mov
stc
js
adc
jno
push
popa
dec
insl
dec
cmp
fsubrl
xchg
cld
push
jp
rcl
mov
xchg
sbbl
cmpsb
mov
inc
push
mov
cld
rcrl
test
push
lds
jae
adc
jle
cli
and
shl
mov
mov
pop
cld
add
mov
mov
in
adc
shll
dec
ret
repz
imul
jl
stos
in
ja
mov
adc
sub
iret
push
repnz
mov
cli
test
les
in
and
mov
leave
and
push
aam
sub
fsubl
mov
repz
hlt
or
adc
or
xchg
ljmp
adc
scas
push
mov
sub
jno
cmpb
push
cs
and
jo
xchg
adc
mov
in
sbb
dec
icebp
push
xor
jmp
mov
or
pop
and
pop
mov
sar
mov
std
repnz
shlb
push
push
jo
pop
mov
inc
or
xchg
jp
fmull
mov
xchg
ret
push
ss
dec
popa
ret
adcl
sub
jns
mov
bound
lods
call
lret
jmp
js
lea
xor
adc
xchg
xchg
ficoms
lret
scas
imul
adc
mov
test
dec
imul
cmp
rcll
pop
mov
scas
jo
fstpl
pusha
cld
xlat
in
fadd
lods
mov
or
xchg
test
cmp
mov
aad
jl
adc
imul
fs
push
cmp
xchg
pop
lret
inc
mov
xor
mov
mov
sbb
xor
insb
ja
jbe
sbb
dec
mov
xor
lret
mov
sbb
divl
pop
cltd
dec
loop
fadd
inc
insl
sar
mov
jbe
jo
imul
loop
inc
lcall
add
jno
or
push
pop
mov
sub
in
shll
std
js
fsubrl
sub
lea
cwtl
mov
frstor
sub
mov
fisubrs
push
je
adc
testl
into
jg
add
scas
xchg
mov
cltd
jb
and
inc
mov
insl
es
sub
sub
ror
in
push
cmpsl
dec
pop
test
push
sbb
ljmp
cmp
inc
test
cmp
aam
sbb
inc
movsb
jl
and
cmp
jecxz
shlb
ljmp
dec
in
sti
fdiv
jb
ss
das
mov
cmp
leave
mov
dec
mov
mov
fsubl
out
sub
mov
rcll
cmpsl
rclb
pop
sub
ret
cmc
fldenv
and
or
loope
cmp
inc
xor
jne
jle
ret
jae
pop
or
xchg
mov
mov
add
and
enter
clc
movsb
inc
jnp
xchg
flds
or
pop
jle
inc
or
cmp
dec
mov
fstpt
and
loopne
inc
bound
fcoml
cmp
mov
enter
pop
sti
fildl
int
mov
or
movsl
ror
inc
or
pop
cld
es
mov
cwtl
dec
inc
xchg
fidivs
ja
cli
lods
jecxz
cmp
popa
cmovl
int
push
ss
mov
push
mov
lods
out
push
inc
cld
or
mov
stos
xor
push
mov
xor
ret
xchg
or
loope
add
icebp
decl
nop
jl
sahf
mov
aas
lods
adc
dec
loopne
dec
inc
test
mov
pop
enter
cmp
cwtl
jns
aad
js
scas
pop
insl
cli
outsl
loopne
cld
popa
sbb
mov
subb
fisubrl
mov
movsb
pop
data16
fstpl
je
sar
xchg
mov
mov
mov
pop
xchg
idiv
adc
lret
outsl
stos
ret
jg
sub
fbstp
mov
push
fwait
loope
shl
aad
sbb
loope
inc
sarb
mov
adc
ret
or
mov
pop
xor
int
fsub
sub
cmp
mov
aam
inc
movsl
inc
inc
cld
cltd
xchg
out
push
sbbb
xchg
frstor
leave
and
std
dec
out
or
les
mov
inc
mov
xchg
shr
sbb
fbld
xor
push
and
scas
pop
insb
mov
icebp
mov
pop
mov
jae
push
cmp
mov
mov
cmp
cmp
sub
xchg
mov
pop
push
out
add
movsb
mov
mov
pop
lods
jo
xchg
push
mov
cltd
sub
mov
jnp
add
sub
sarb
pushf
inc
mov
fnstsw
pop
jle
mov
sbb
loope
cltd
inc
ja
mov
loope
inc
pushf
mov
hlt
xchg
sbb
jnp
inc
in
cmp
inc
push
cld
adc
fcompl
xor
es
pop
sub
mov
leave
ja
cld
adcl
pop
push
lods
inc
aam
ds
and
insb
sti
xchg
icebp
dec
adc
testl
test
mov
mov
sub
fimull
mov
cld
jbe
outsb
out
and
xchg
mov
or
bound
pop
dec
mov
push
cmp
mov
adc
repnz
mov
jns
jo
notl
orl
sub
in
enter
push
rol
fnstsw
cmc
xchg
fcmovnu
out
mov
or
adc
shrb
push
popf
cmp
sbb
jbe
pop
bnd
lods
adc
mov
popf
jbe
cli
xchg
rorb
rcrl
test
or
test
mov
jl
cld
xor
mov
pop
in
sub
pop
pop
ja
mov
and
andb
and
or
inc
adc
pushf
adc
loopne
mov
sahf
fcoml
sbb
fstps
push
xchg
xlat
out
adc
test
sub
outsl
mov
mov
and
out
dec
cmp
es
pop
add
xorb
sub
cmp
leave
mov
sub
dec
dec
pop
incb
das
xchg
jne
push
pusha
xchg
lods
into
xor
adc
adcl
xor
test
push
mov
ja
leave
hlt
std
cltd
xlat
cmp
xchg
pop
jnp
adc
dec
test
and
dec
mov
sbb
in
adc
sti
movsb
inc
xchg
dec
fwait
shl
pop
push
mov
lods
pusha
test
frstor
or
outsb
push
movsb
aad
adc
pop
shll
mov
push
pop
dec
scas
and
mov
cmpsl
jmp
rcrl
pusha
sbb
and
mov
cmp
mov
imull
cmp
push
je
sbb
aad
jmp
mov
icebp
or
push
or
xlat
cld
cmpsb
push
adc
cmp
dec
daa
ret
jge
xor
stc
mov
test
es
ds
or
mov
dec
imul
mov
jns
dec
imul
sub
test
int3
jmpw
sbb
arpl
pop
push
mov
scas
sub
ficomps
adc
decl
fwait
mov
dec
add
xchg
out
add
pop
pop
aas
cmp
mov
mov
pop
push
mov
in
add
push
fsub
add
stos
incb
xchg
pop
js
gs
pop
cmpl
out
inc
mov
add
out
cmp
cld
icebp
iret
xor
jle
mov
xchg
imul
in
adc
bound
and
imull
lret
inc
jnp
loop
mov
inc
stos
repnz
in
xchg
and
gs
pop
pushf
adc
add
push
stos
iret
push
dec
push
rolb
lods
jnp
pop
inc
jns
dec
mov
or
test
dec
pushw
fisttpl
das
scas
cmpsb
adc
push
push
repz
pop
dec
and
or
mov
test
or
call
inc
shlb
js
dec
in
adc
adc
cld
xchg
xchg
subb
mov
idiv
fnstsw
add
dec
jb
dec
mov
enter
xor
movsb
pop
in
jl
and
loope
or
xchg
cmpsl
sbb
rcll
sub
in
ja
int3
std
cmpsl
fmulp
sub
shl
and
in
mov
js
jl
mov
jnp
lret
inc
inc
imul
js
movsb
sub
inc
shll
and
lea
imul
les
and
repnz
cld
add
sti
stos
in
lret
imul
vpmuludq
jnp
pop
xchg
sti
jg
daa
adc
inc
xchg
lods
push
or
enter
inc
out
push
ucomiss
sub
sbb
divps
cld
lcall
or
jg
sarl
inc
sub
dec
scas
push
out
push
mov
mov
mov
rcl
jecxz
mov
jle
push
in
sarb
scas
call
adc
sub
mov
push
sbb
push
dec
xchg
imul
fwait
pop
mov
sub
repz
outsb
sub
and
dec
mov
inc
lock
xchg
fbstp
bound
mov
xor
es
insl
icebp
jnp
test
jne
sub
sbb
test
jnp
xor
out
arpl
pcmpeqw
fnstcw
test
mov
addr16
lds
inc
add
hlt
jmp
in
pushf
mov
imul
xchg
pop
das
xchg
push
icebp
int3
xlat
cmp
sbb
lcall
push
test
push
andb
sbb
jnp
popa
push
rorl
xor
lret
nop
jecxz
xor
dec
lret
or
aam
scas
push
and
and
cmp
mov
lea
test
outsb
pop
test
add
adc
inc
lea
fstl
jle
push
mov
mov
or
hlt
repnz
mov
decl
imull
and
setbe
dec
gs
lret
sub
iret
sub
or
xor
pushf
aaa
dec
out
push
test
inc
or
lret
cmp
sub
std
std
jle
inc
stos
lret
test
aad
dec
add
push
shll
pop
lcall
rcrl
inc
lock
adc
rclb
mov
mov
jecxz
jle
iret
jns
leave
fs
cmp
mov
mov
xchg
hlt
cld
stc
aam
insl
sub
or
push
cli
bound
fsubrl
add
out
sub
aad
xor
shrb
pop
cmc
adc
push
loope
pop
div
aaa
enter
adc
push
ljmp
pop
call
adc
jecxz
push
mov
pop
inc
fsubrl
lahf
movsl
jo
mov
aaa
mov
ud0
nop
out
cs
fmul
push
lods
stos
push
add
fildll
sbb
test
push
push
into
add
push
out
in
lds
ror
or
cmp
imul
dec
shlb
pop
je
mov
arpl
out
enter
cltd
cld
and
mov
cmp
or
ja
fdivrl
add
test
pop
cld
xor
xchg
negl
cmc
out
fsubrl
cmp
push
jp
ss
test
mov
imul
mov
pop
gs
imul
pop
daa
push
neg
shr
insb
arpl
mov
retw
stc
test
inc
sbb
hlt
or
sub
je
scas
loopne
mov
cli
gs
lock
and
mov
fisubrl
les
push
or
popf
out
mov
fbld
xchg
addr16
ret
and
adc
arpl
push
nop
inc
jae
push
insw
mov
scas
arpl
movsl
xor
stos
mov
push
shrb
cmp
mov
iret
aad
fbstp
xor
mov
push
daa
cmp
int3
shr
iret
les
out
pop
aad
push
mov
mov
add
dec
xchg
test
pop
hlt
insl
in
push
movsl
outsb
add
adc
sbb
mov
shll
std
call
aad
fildll
cmpb
sub
xchg
movsl
cmpsl
lds
or
fdivs
mov
out
fsubrl
lahf
inc
mov
add
cmpsb
shrl
sbb
sbb
cmp
in
div
int
aam
in
aad
insb
gs
test
push
fcmovnbe
inc
push
xor
sbb
loope
mov
fldt
stc
and
sub
push
push
out
mov
test
nop
push
stos
jecxz
pop
mov
outsb
xchg
pop
inc
mov
shl
and
idivl
shlb
icebp
std
adc
es
addr16
jp
test
mov
jmp
lahf
xchg
mov
adc
mov
es
scas
std
mov
cli
push
sub
aad
fbld
cmpsl
jg
lods
sar
addr16
mov
call
xchg
out
sbb
cld
sbb
pop
sub
adc
in
movsl
mov
mov
fists
lods
xor
cs
lret
mov
or
shrl
cmp
lret
rcr
shl
test
pop
arpl
or
lods
and
jge
pop
es
stc
or
mov
ds
xor
loope
cwtl
arpl
enter
out
pop
stc
xor
test
lea
sub
push
jp
arpl
imul
cmpsl
fwait
add
addr16
mov
lods
lret
xchg
loop
arpl
mov
je,pt
popa
data16
push
popf
in
adc
add
dec
mov
out
sub
push
lcall
call
add
pop
xor
push
repz
lret
fbld
out
mov
lea
das
scas
divl
adc
fs
stc
into
cld
mov
scas
loopne
les
arpl
shrl
stc
sar
shr
and
insb
call
ds
push
ret
shlb
imul
xchg
push
sar
loope
adc
sub
lcall
stc
mov
inc
jecxz
es
loope
push
mov
movsl
adc
push
dec
les
pop
rdpmc
xor
cmp
call
sti
push
inc
push
rcl
fucomip
push
mov
imul
sub
pop
out
addr16
daa
bound
fcmove
fcmove
mov
cld
pop
sti
jo
dec
test
test
sub
in
fimull
pop
gs
stos
and
sti
xor
ret
test
mov
mov
xchg
sub
push
xor
lret
sbb
mov
loopne
test
dec
jmp
out
cmpsb
mov
pop
arpl
xlat
push
mov
fsubs
dec
pop
lds
call
jbe
icebp
test
mulb
lods
push
mov
repnz
or
repnz
shl
icebp
divl
out
cwtl
cmpsb
dec
add
push
sub
arpl
push
scas
fildll
movsl
gs
mov
and
jo
and
push
sub
pop
inc
xchg
pop
inc
hlt
in
cmp
mov
push
push
rcr
fadd
inc
push
pop
aad
push
lret
xchg
repnz
arpl
repz
insl
inc
jne
shr
lock
out
cmpsb
inc
push
xchg
dec
and
cli
mov
movsl
shlb
gs
std
push
in
push
add
xor
mov
push
adc
cmpsl
addr16
or
cmp
and
xor
mov
jmp
out
test
mov
sbb
cld
into
test
andl
xor
in
movsl
xchg
ds
mov
cmp
cmc
dec
pop
or
stos
mov
enter
or
or
pop
stc
popa
shlb
imul
test
cli
nop
sub
arpl
push
ds
push
in
push
push
inc
repz
gs
or
jb
lods
mulb
pop
fdivr
in
sub
outsl
ds
mov
pop
add
dec
fidivs
cmp
sbb
mov
out
out
cmpsb
fbld
mov
rcrl
stc
push
cld
sti
push
jle
cmc
ret
pop
test
mov
out
push
mov
pop
andb
and
test
lret
sbb
fistps
dec
mov
jp
imul
inc
mov
test
or
xor
mov
test
fildll
test
rcl
popa
dec
aad
cmc
mov
out
outsb
data16
stos
push
push
xchg
pop
pop
out
arpl
in
push
mov
mov
jne
ret
mov
icebp
mov
clc
and
repz
add
jmp
int
push
out
inc
sub
loope
imul
cmpsl
sub
mov
in
fxtract
rclb
push
and
jecxz
cmpsb
pop
data16
fdivr
push
test
xchg
movsb
lods
in
lcall
inc
pop
jmp
mov
dec
dec
and
fs
bound
push
inc
fcmovnu
xchg
out
pop
jmp
fldt
jbe
mov
rcrb
in
imul
aad
fildll
jle
xor
push
adc
xchg
ret
shrl
push
push
adc
out
test
outsb
inc
movsb
xor
test
mov
data16
sar
lret
push
lock
cmpsb
test
loopne
vpunpckldq
push
pop
cld
jmp
inc
movsl
int3
adc
sub
and
ds
scas
repnz
cmpsl
stc
xchg
cld
xchg
test
hlt
movsb
xor
or
and
xchg
sub
shlb
xchg
addr16
pop
daa
mov
mov
out
mov
iret
cmpsb
mov
jae
push
es
test
aaa
arpl
in
shr
movsl
loope
pusha
stc
paddb
and
push
pop
test
dec
test
stos
nop
push
loope
and
cmpsl
push
mov
dec
daa
mov
xor
lret
jb
out
jg
jmp
aam
push
xchg
jmp
js
inc
aad
hlt
lret
in
mov
fisubrl
test
lret
aam
test
lcall
and
cs
ret
mov
xchg
in
insl
jmp
dec
decl
add
lods
lret
jg
pop
cld
test
int
insl
mov
notb
dec
test
ds
or
bound
stc
cld
mov
mov
js
enter
adcb
push
fcmove
scas
out
sbb
mov
fdivs
in
pop
movsl
xchg
add
gs
cld
ljmp
push
jae
sub
pop
cmpsl
adc
ja,pt
lret
push
out
mov
mov
and
pop
mov
push
nop
lret
std
bound
push
iret
aad
push
sti
filds
push
int
cltd
sub
cmpsl
xor
dec
shl
addb
mov
jmp
push
pushl
out
cli
jb
cld
mov
lahf
es
inc
in
inc
jle
add
cmp
dec
mov
cmc
push
push
jne
cmp
ret
push
arpl
jb
mov
outsl
loope
jb
repnz
rcl
mov
and
ljmp
iret
jmp
cmp
addb
gs
sub
gs
std
data16
push
test
ds
popa
dec
jg
in
out
out
xchg
fiaddl
cmpsl
and
stc
icebp
cld
sub
test
cmc
icebp
ret
fistps
pop
sub
js
mov
push
movsl
push
inc
aad
gs
mov
pop
and
stos
stc
xchg
mov
mov
mov
fsqrt
mov
dec
and
daa
jg
outsl
cli
shl
loopne
out
push
popa
cmpsb
ret
data16
adc
xchg
fistps
stos
movsl
lea
mov
xor
mov
mov
push
and
out
cmpsl
jae
pop
addr16
imul
arpl
push
in
add
xlat
es
push
rcl
sti
add
mov
ljmp
lahf
jno
xorb
aas
mov
in
imul
addr16
daa
cli
test
rcrb
cmpsb
mov
jecxz
enter
xchg
mov
ljmp
push
in
repnz
test
dec
arpl
push
lret
mov
pop
out
adc
lock
aad
xchg
mov
leave
ljmp
out
sub
je
outsb
repnz
ljmp
adc
repnz
and
stos
cmpsl
sub
call
xchg
sub
xchg
inc
jmp
push
push
dec
pop
jae
ljmp
or
add
data16
push
jle
push
or
xor
lahf
adc
movsl
lahf
gs
in
push
ja
lds
test
orl
push
std
hlt
mov
sbb
push
push
mov
ja
ljmp
cmc
sahf
imul
pop
push
fbld
adc
or
push
lret
vpcmpgtd
call
push
inc
mov
fsubrs
adc
jg
fbld
insl
aaa
mov
leave
ror
xchg
cmpsl
adc
in
adc
loope
dec
add
sub
cmp
sub
shlb
and
aad
push
outsb
getsec
and
push
push
inc
stc
dec
cld
ss
je
out
arpl
cwtl
adc
ds
jmp
and
out
stos
xchg
cmpsb
int3
hlt
insb
push
pop
aad
push
jo
shlb
mov
mov
inc
sete
lds
addr16
add
xor
jle
mov
lods
call
cld
fisubrs
add
mov
pusha
dec
dec
jns
jge
mov
rcl
dec
imul
shlb
mov
leave
jle
xor
jae
push
cmp
pop
es
mov
pushf
in
out
test
push
jmp
sub
fldenv
test
pop
push
dec
xor
push
add
push
add
jbe
in
cmpsl
ljmp
xlat
daa
mov
fldt
pop
fdivr
arpl
inc
outsb
xor
data16
insl
aad
aam
stos
push
dec
push
xchg
xor
sahf
movsl
jo
push
gs
div
adc
movsb
pusha
call
in
xchg
test
mov
mov
out
mov
scas
jge
int
shrl
imul
arpl
xlat
inc
pop
loope
cmpsb
inc
lret
jmp
es
inc
bound
repnz
in
movsl
xchg
jge
jmp
fisttps
jno
arpl
ds
insb
test
adc
push
mov
inc
out
in
repz
arpl
cmpsl
cs
push
shl
test
push
adc
cli
mov
add
cmp
imul
push
stc
inc
cld
sbb
insl
inc
fxch
cli
out
inc
insl
loopne
jecxz
sbb
add
test
mov
inc
adc
filds
in
daa
xchg
lret
lock
aas
dec
dec
xchg
adc
sbb
aam
add
gs
mov
into
mov
arpl
add
push
mov
aad
rcl
cmp
stc
shrl
xchg
sub
movsl
jns
mov
shr
push
test
fsubrl
test
data16
es
imul
xor
fadds
or
icebp
sti
orl
int
xor
bound
adc
cmp
sti
xchg
cmpsl
ljmp
std
fstps
cmp
daa
stc
in
mov
repnz
insb
out
aad
push
or
pusha
cmpsb
inc
lret
push
push
or
mov
sbb
movsl
lods
sbb
sub
test
sub
call
movsb
push
and
aam
sub
dec
or
stos
cmpsl
fidivrl
outsb
inc
notb
in
stc
xchg
sub
shrl
xchg
xchg
je
or
pushf
arpl
cmc
ret
sahf
and
push
xor
xlat
imul
sbb
std
lret
out
mov
leave
mov
lcall
push
daa
rolb
add
xchg
pusha
sub
inc
xorb
mov
sbb
xor
vpaddb
add
aad
xor
subl
jnp
and
pop
imul
fbld
cmpsb
mov
decb
es
cmp
fwait
mov
out
push
movsl
aaa
jmp
xlat
filds
and
sub
fsts
jge
call
pop
jno
mulb
es
lcall
lock
addr16
fists
pop
test
cmp
cmpsb
lock
test
fbld
stc
int3
fisubrl
dec
sub
je
jae
jmp
jmp
inc
push
adc
push
adc
in
flds
out
stc
inc
cld
sti
sti
shrb
xchg
jmp
arpl
es
push
cmp
jmp
dec
dec
call
add
dec
pusha
xchg
jle
fcmove
call
sub
dec
jle
dec
imul
js
add
popa
out
rcl
jmp
fisubrl
test
rcrb
sbb
xor
das
into
notl
push
dec
push
pop
and
fldcw
repnz
push
jne
movsl
cmp
adc
push
enter
sbb
test
sub
mov
push
cltd
jg
pop
stos
shlb
into
xchg
test
sub
movsb
out
enter
into
out
mov
sub
iret
adc
lock
insb
pop
add
inc
das
int
jnp
icebp
cmp
xchg
jnp
mov
scas
xchg
into
out
fldcw
imull
and
jmp
mov
adc
in
gs
lahf
mov
inc
call
cli
cmp
ret
and
inc
xchg
sbb
out
xlat
aad
push
scas
sbb
jns
daa
je
jmp
pop
fisubl
out
pop
out
enter
pop
sub
cmp
repz
inc
ds
xlat
jle
dec
into
lahf
cmp
dec
pop
lret
adc
push
data16
push
cld
inc
sti
add
fbld
lcall
inc
jb
fmuls
test
pop
pop
pop
cmpsb
arpl
cmc
out
jns
leave
push
sbb
in
stos
ds
ja
shlb
and
roll
jp
mov
pop
push
fmul
adc
xchg
dec
in
mov
xor
in
ret
aam
cmpsb
leave
mov
outsb
lcall
dec
stc
in
movsl
sub
stos
xchg
movsb
push
mov
inc
stc
mov
mov
das
adc
or
ds
inc
dec
add
push
fcmovbe
out
cmp
and
sub
int3
scas
jp
test
push
inc
aad
dec
cld
and
sub
push
inc
aad
adc
out
inc
arpl
in
sub
sbb
inc
cmp
leave
lcall
shll
and
daa
sarl
lret
ljmp
scas
aas
bound
xchg
enter
in
add
in
and
movsl
adc
xor
mov
push
cli
inc
mov
and
sub
out
sub
rcr
lret
sub
push
mov
je
rcrl
and
lods
ds
ljmp
neg
lods
stc
jns
and
jne
lahf
lret
cld
push
test
push
adc
and
pop
mov
cmpsb
mov
jge
pop
xor
fcomip
in
push
sub
mov
push
mov
jp
lock
nop
fcoml
loopne
jle
je
fiaddl
pop
jg
push
mov
mov
fsubr
arpl
call
fisubrl
and
sub
sub
mov
jle
dec
shll
stc
leave
cld
pop
cmp
and
pop
out
and
or
subb
ror
sti
push
test
test
aad
hlt
stc
call
enter
mov
cmp
es
test
add
repz
fcmove
sti
pop
dec
lret
dec
lahf
mov
outsb
jb
adc
rcl
cli
ds
dec
idivl
jmp
push
negb
mov
mov
add
and
lahf
mov
inc
push
adcb
cmp
sub
xchg
or
stos
pop
and
inc
fsubrl
push
cmpsl
push
push
adc
shll
test
fnsave
rolb
repnz
cmpsb
add
stc
dec
fsubs
lret
in
jmp
and
sahf
call
stc
dec
cmp
fisubrs
mov
sbb
inc
mov
push
mov
mov
sub
loope
jl
iret
lcall
cmc
stos
cmpsb
pop
repz
xchg
ss
sub
movsl
jns
cld
lcall
xchg
call
cld
and
push
pusha
out
mov
scas
and
xlat
and
addr16
stos
inc
aas
daa
jnp
std
ficomps
fstps
arpl
mulb
push
add
iret
sub
push
movsl
or
fsubl
gs
sbb
fstp
mov
imul
cmpsl
push
jmp
subb
push
ficoml
xor
dec
mov
push
mov
out
ret
hlt
aad
fisubrs
ret
ljmp
pop
adc
or
mov
pop
fnsave
ret
decb
cs
icebp
push
and
jb
jnp
test
cmp
lcall
outsl
push
xchg
shll
std
sub
movsb
cmp
icebp
mov
jmp
stos
es
push
rcr
mov
jae
in
sub
hlt
mov
push
push
repnz
pop
movsl
mov
repnz
enter
sti
inc
arpl
int
sub
mov
mov
cmp
cli
mov
shlb
stos
and
mov
frstor
movsb
outsb
movsb
clc
jb
jp
cmp
add
rcl
adc
xor
ds
lret
add
fs
xchg
adc
sub
push
aad
and
cmpsl
xchg
test
xchg
fiaddl
outsl
lock
daa
push
aad
pop
or
into
ficomps
push
xchg
out
imul
repnz
iret
stos
add
test
in
and
test
sbb
push
sbbb
mov
insb
and
mov
aad
mov
xchg
insl
mov
stos
sub
add
jns
cs
mov
dec
lock
fcmovu
xchg
int3
in
movsl
loop
leave
bnd
add
xchg
and
push
jmp
test
int3
xchg
and
mov
pop
push
push
adc
jb
out
sti
sbb
push
mov
fsts
mov
icebp
jb
ss
jl
fists
enter
je
push
nop
jb
rcl
inc
pop
cwtd
addb
jp
repnz
sti
fists
fdivrs
sub
jno
pusha
test
mov
pop
lea
js
xchg
push
mov
push
mov
jmp
out
hlt
or
push
outsl
add
insb
mov
mov
inc
outsb
fcom
push
orl
fsubrp
and
push
test
push
pop
push
or
jne
ja
add
mov
dec
cmpsl
inc
push
jns
daa
test
inc
add
fidivl
cmpsb
mov
movsb
sarl
mul
cmp
es
in
lret
icebp
stc
jns
out
aaa
stc
pop
jg
fisttps
add
sub
out
sub
je
sub
pop
imull
out
test
pop
fucom
in
lret
stc
test
fidivl
in
push
and
xchg
add
icebp
aam
adc
imull
out
shrl
aad
push
pop
fists
jge
test
lret
std
pusha
add
mov
adc
test
fbld
cli
sbb
sub
mov
test
push
mov
pop
ret
fstl
and
pop
lcall
xor
test
ljmp
mov
add
cmpsb
js
ds
stc
icebp
pop
in
pop
jnp
je
shrl
sub
test
pushw
add
dec
dec
or
aad
sbb
pop
out
hlt
lea
jb
jbe
inc
cltd
out
inc
lds
je
push
enter
sbb
add
add
shll
push
in
pop
in
and
adc
popf
shl
push
leave
fdivr
push
inc
pop
push
enter
push
lcall
pushf
aam
mov
out
aas
out
sub
es
loope
and
sub
xor
push
lods
xchg
jbe
test
stos
cld
and
cmpsb
sub
adc
mov
outsb
lcall
add
rcrb
repnz
fcoms
test
aam
in
mov
xchg
fcomps
dec
jmp
and
sbb
mov
jo
shrl
sub
test
mov
test
xchg
insb
int3
testl
dec
lret
movsl
cmpsl
lcall
rcrb
insl
mov
or
popa
out
push
mov
mov
fucomp
sarl
loope
push
stc
mov
pop
out
stc
aas
add
push
cmp
add
repnz
loope
adc
cmpsb
jno
cs
ret
jle
add
ds
jp
idiv
shlb
push
jge
push
call
ja
mov
scas
dec
xchg
std
out
mov
in
jbe
jb
cmpsl
mov
ljmp
movsl
lret
insl
sub
jmp
jo
mov
mov
scas
jae
jmp
and
xchg
ret
stos
dec
lcall
sub
shll
sbb
mov
mov
shr
adc
cmpsb
push
data16
jl
xor
inc
adc
pop
out
push
sbb
ss
cltd
call
mov
fmuls
test
mov
addb
out
rcll
stc
shrb
ficoml
xor
mov
sbb
jmp
jo
mov
into
leave
adc
adc
push
mov
mov
fsubrl
add
xchg
test
mov
jmp
sub
insl
fwait
scas
mov
call
pop
sti
lret
push
pop
mov
pop
mov
test
jmp
push
call
movsl
sub
shl
sub
xchg
bswap
pusha
mov
pushf
mov
not
mov
movw
pushf
bswap
mov
jmp
clc
push
cmp
call
popa
fs
jo
xor
cs
insb
add
cwtl
into
push
mov
mov
shlb
iret
mov
psubsb
inc
xor
mov
adc
or
popa
out
ljmp
js
add
push
shl
push
cmp
movsl
mov
sbb
mov
push
dec
hlt
idivb
xchg
sbb
imul
repnz
mov
fdivl
rolb
out
rolb
shll
mov
mov
sub
data16
jb
push
sub
push
pop
and
inc
pop
add
les
mov
aam
flds
cmp
lods
into
incl
insb
sti
pusha
mov
mov
xchg
test
cmpsl
les
cs
inc
dec
add
push
fstps
sbb
loop
outsl
pop
repnz
xchg
add
mov
rcll
test
ss
mov
addr16
push
mov
mov
mov
mov
xchg
lock
into
inc
xor
movb
xor
mov
pushl
ret
cli
push
rolb
lret
jmp
pushf
mov
loopne
int3
mov
mov
add
int
push
shrl
clc
push
sub
dec
cli
outsb
xor
xor
bound
lahf
or
xchg
imul
mov
aaa
in
adc
out
cmpsl
jg
cli
cmc
jmp
ret
cmp
cmp
sub
adc
mov
and
ret
xor
inc
and
add
roll
inc
or
mov
add
and
add
inc
fldcw
inc
aam
ficompl
aam
adc
inc
cltd
jecxz
cmpl
cltd
xchg
leave
xlat
push
jnp
push
enter
andl
adc
xchg
int
jo
xor
lds
sub
dec
mov
lods
sahf
pop
sbb
ret
jne
push
mov
jl,pt
lahf
inc
dec
fwait
cld
cmp
sub
or
inc
ss
pushf
aad
lcall
inc
aad
and
scas
jl
call
adc
add
sbb
add
xchg
push
call
sub
sbb
jns
and
mov
xor
xor
pop
inc
lret
test
sub
push
sub
mov
mov
out
ss
lock
rcrb
out
and
jnp
jmp
je
pusha
scas
jmp
and
sti
mov
cmp
stos
adc
or
frstor
mov
mov
xchg
lock
xchg
shrb
inc
outsl
mov
mov
sbb
icebp
lods
jmp
cld
mov
mov
idiv
jae
xlat
adc
mov
testb
mov
mov
mov
mov
jno
cmp
and
or
mov
ret
sbb
or
shl
mov
out
adc
ret
fisttpll
out
or
sub
and
mov
sbb
adc
fs
mov
jbe
rcr
leave
sub
xchg
out
fisubl
jns
scas
xor
xor
filds
mov
hlt
mov
adc
xor
cmpl
movsl
test
stos
repnz
cmc
lcall
cmp
adc
js
jg
imul
cld
test
xor
cmp
aas
push
cmpsl
push
les
xchg
lret
sbb
mov
mov
js
pop
leave
pop
pop
movsl
sbb
lcall
inc
cmp
repnz
jno
icebp
cmp
es
out
adc
mov
ret
mov
hlt
dec
inc
xor
jnp
push
call
pop
mov
test
addr16
call
and
push
call
enter
rolb
lret
cmc
jmp
mov
imul
test
push
call
push
call
arpl
push
call
rclb
pushf
mov
jmp
push
mov
cs
jno
movsl
scas
push
xchg
mov
in
xor
loop
xor
jne
in
shl
loop
aam
loope
dec
jecxz
divb
sbb
jg
addr16
mov
movsl
das
or
les
repz
mov
aam
xchg
aad
cmp
xor
sub
gs
imul
fists
sbb
cmp
xchg
ret
bound
loop
repnz
inc
xor
pop
cld
movsb
dec
sub
jb
movsl
add
dec
es
adc
mov
mov
icebp
dec
mov
adc
out
inc
mov
xchg
call
adc
xchg
fidivrl
test
mov
shl
pop
sahf
mov
cltd
mov
jns
negb
popa
xchg
dec
out
hlt
or
or
ret
inc
iret
cmpsl
fadds
out
inc
cltd
sbb
and
inc
fildl
xchg
pop
or
test
cmp
push
sub
dec
xchg
add
mov
pop
inc
fs
enter
jne
pop
aas
sti
xor
loop
cmp
mov
das
push
cmp
popa
cmp
inc
mov
popa
mov
mov
gs
insl
insl
jae
pop
dec
adc
pop
or
sbbb
cmc
jne
mov
rcl
lcall
xor
inc
popf
xchg
adc
lret
xchg
aad
int
fstpl
inc
xor
add
add
lods
pop
lea
call
cmp
call
push
call
adc
adc
pop
add
in
out
add
sbb
mov
fdivrs
mov
test
mov
mov
inc
rcll
dec
mov
cmp
enter
insl
mov
sbb
and
mov
mov
daa
std
ss
insl
scas
addb
stos
mov
call
in
sub
pop
and
mov
sub
adc
leave
rcll
cmp
xor
es
add
inc
xor
stc
js
jne
push
mov
je
sub
int3
add
inc
shrb
sahf
in
nop
icebp
iret
mov
and
int
mov
xor
scas
popa
shrb
mov
scas
sub
call
add
std
call
push
sar
push
cmp
lahf
sbb
sti
push
ljmp
bound
jp
dec
and
adc
outsb
or
in
inc
jmp
mov
rcrl
jg
ret
and
cmp
leave
js
xor
jo
dec
test
pop
nop
iret
in
stc
movsb
fildll
or
mov
popl
cmp
int3
ss
sbb
cmc
jp
dec
pop
loop
sub
push
addr16
inc
adc
loope
sbb
pusha
out
dec
xor
xchg
mov
iret
in
sub
adc
icebp
int
mov
mov
xlat
popf
ss
cmp
hlt
cld
mov
add
mov
cmp
fcoml
and
inc
xor
stos
mov
lcall
xor
cmp
ds
mov
popw
sub
test
mov
dec
cli
and
cmp
pop
mov
loope
mov
dec
je
in
sub
int
scas
shrb
mov
das
imul
aaa
sbb
inc
arpl
inc
xchg
add
and
scas
in
cmpsb
push
rcrl
or
outsb
sbb
sbb
or
mov
imul
divl
pop
add
jge
pop
sub
or
jp
jle
stos
dec
pop
and
add
xor
aam
pusha
adc
and
fists
data16
jb
inc
mov
and
pop
mov
bsf
inc
in
dec
inc
into
mov
jecxz
clc
inc
jecxz
mov
cmc
lock
jp
stos
aam
popf
lock
adc
mov
lret
addb
adc
in
fdivl
inc
adc
add
or
dec
sbb
inc
xor
mov
and
pushl
mov
pushl
push
cmp
push
call
pop
call
pusha
pop
outsl
fldenv
xchg
repnz
rorl
iret
and
out
loopne
in
sbb
int
stos
stos
ss
pop
sahf
rcrb
dec
xor
pop
xchg
xor
mov
fnstsw
or
mov
adc
fisubs
notb
pop
nop
push
jmp
insb
or
insb
jmp
dec
repnz
or
cmpb
scas
testl
add
xor
out
das
and
pop
es
sub
inc
xor
fs
push
push
lea
ja
pusha
clc
imul
mov
add
mov
push
lea
jmp
lea
jbe
rcl
call
pop
into
stos
jno
dec
rol
into
lret
pop
cmp
sbb
jo
imul
mov
push
sub
xchg
clc
arpl
inc
fsts
repnz
sti
lock
imul
sub
xchg
inc
jbe
cmp
pop
xchg
dec
les
push
inc
je
inc
rcl
xchg
mov
rcr
int3
mov
pop
xor
enter
xchg
aam
jmp
mov
add
stos
ret
loope
mov
mov
mov
incb
jnp
int3
inc
test
popf
or
sti
popa
mov
cmp
cmpsb
mov
xor
stos
into
leave
jg
dec
dec
pop
sbb
lahf
cli
test
mov
mov
xchg
cld
sub
and
dec
xchg
imul
push
sbb
daa
add
movsb
addr16
jecxz
jl
mov
aas
mov
fptan
jb
xchg
push
pusha
or
mov
in
jns
ficoms
dec
xor
pop
ds
pushf
push
pop
cmp
push
pop
cmpsb
pushf
nop
insb
push
mov
sbb
xor
adc
out
mov
inc
xor
add
or
add
jg
movsl
inc
std
sub
lahf
ret
addr16
sbb
ljmp
frstor
sub
mov
testb
je
std
mov
fwait
into
addr16
cmp
into
int3
mov
jno
aam
cmpsl
fwait
fwait
mov
orb
xchg
lret
mov
jnp
sar
movb
sub
sbb
inc
xor
add
xor
add
sbb
bound
sbb
rol
pop
mov
dec
or
jp
js
pop
xor
adc
das
mov
shrl
mov
ss
pop
mov
push
inc
movsl
sub
es
shlb
bound
add
sub
in
jne
popf
aad
orl
dec
mov
inc
lcall
pop
sub
push
sub
adc
int3
inc
mov
fcmovbe
and
insl
cltd
fistpll
cmpsl
std
jle
add
sbb
add
icebp
adc
sub
out
mov
shrb
mov
cmp
mov
mov
push
ljmp
fs
mov
fs
jge
repz
pusha
loopne
jae
sti
or
jmp
inc
xor
add
sub
add
push
call
cmp
lahf
ret
inc
or
out
mov
iret
test
repz
or
aad
cmc
clc
mov
adc
xchg
cmpsl
or
mov
jno
or
out
je
inc
or
dec
dec
aas
xor
insl
in
mov
ss
push
push
das
loop
cwtl
movsl
mov
out
mov
push
loop
loopne
loop
ss
and
icebp
cmp
xchg
dec
and
push
push
or
push
pop
and
out
jne
jge
clc
inc
adc
cmp
mov
sahf
sbb
and
push
es
xor
or
dec
xchg
mov
mov
nop
in
shlb
das
lret
mov
test
lret
dec
push
add
lock
push
push
sub
loopne
stos
insl
inc
mov
jnp
daa
sub
loop
scas
call
loopne
stc
test
dec
mov
xchg
mov
js
inc
cmp
jae
push
jae,pn
inc
xor
sarb
xor
outsl
cmp
lods
ret
mov
xor
dec
and
and
push
pop
and
les
pusha
loope
fnsave
pop
adc
jb
mov
and
insb
sub
int
jb
push
imul
jmp
cli
addl
add
jge
js
sbb
push
mov
iret
xchg
fisttpll
dec
inc
xor
add
adc
add
stc
pusha
call
xor
push
loope
jg
fimull
jnp
pop
ss
sbb
loopne
adc
outsb
xor
push
outsb
mov
in
or
xor
jne
ds
xor
sahf
mov
lret
test
shl
inc
and
dec
clc
adc
mov
adcl
lahf
mov
pop
cltd
pop
stos
lds
aaa
dec
sbb
enter
add
cmp
xor
jmp
imul
jno
xchg
daa
add
inc
push
call
inc
xchg
ljmp
xor
jne
add
mov
pop
insb
adc
rclb
nop
ljmp
fidivrl
or
mov
js,pn
mov
and
icebp
scas
iret
mov
inc
xor
fs
ja
bt
stc
bt
pusha
imul
bt
sub
jo
clc
add
push
pusha
pusha
push
lea
jmp
and
ja
xchg
inc
sbb
jp
inc
xor
dec
sbb
cmp
mov
push
xchg
sti
in
rcll
push
jnp
xor
mov
insl
nop
jne
mov
not
or
jo
rolb
push
jae
inc
faddl
or
or
sub
faddl
aaa
bound
cs
push
in
repz
fimuls
sub
dec
and
dec
jp
push
sub
add
mov
add
sub
out
sbb
ret
or
pop
and
xor
cmp
cmp
pop
jg
cmpsb
xchg
mov
xlat
mov
xchg
xchg
out
cmp
sub
pop
nop
inc
call
shrb
and
testl
push
cmc
in
ret
mov
in
movsb
es
xor
xchg
mov
fists
xor
ljmp
dec
andl
loope
lods
xchg
jle
jmp
stos
cmpsb
jg
rolb
pop
xor
jge
popw
jbe
inc
xor
fs
je
setnp
mov
jmp
pusha
sub
jmp
es
pop
cmc
and
fstps
dec
sub
push
adc
and
ffree
and
imul
push
cli
inc
jp
cltd
aaa
xor
add
into
xchg
decl
int
inc
cltd
int3
sarl
xlat
jne
add
in
mov
lea
push
push
cs
std
lret
push
popf
ret
cmp
jns
stc
inc
lret
dec
xorl
insb
pop
xchg
out
out
pushf
loope
loop
addr16
xor
shll
dec
and
movsbw
mov
push
push
cmp
pushf
lea
jbe
bsr
mov
cmc
or
xor
add
pushf
sete
rol
mov
cmp
add
pushf
add
bt
movl
neg
dec
bts
bt
mov
mov
test
call
lea
je
push
mov
adc
mov
movb
pusha
push
lea
jmp
leave
xchg
rolb
mov
in
inc
xor
pop
xchg
cs
xchg
sub
cmp
dec
or
cmpsl
rorw
add
fstpl
std
test
lods
testl
scas
xor
mov
mov
push
insl
and
lret
adc
dec
inc
ud0
aad
out
stos
jp
xchg
xsaveopt
stos
mov
pop
xchg
push
add
xorb
fwait
out
cmpsb
jle
inc
icebp
sbb
imul
fisubs
les
mov
hlt
lcall
mov
add
scas
push
call
fcompl
push
jecxz
scas
outsl
dec
imul
cmp
mov
push
push
xor
sub
pop
cmp
xchg
adc
std
mov
cmp
pop
repz
jno
insl
add
pop
repnz
adc
addr16
in
sub
ds
lds
arpl
pop
dec
adc
out
inc
mov
aad
pop
and
jecxz
xor
xchg
mov
jo
mov
or
inc
das
push
cmp
dec
cmp
inc
xor
jmp
bt
mov
stc
mov
cmc
clc
test
bt
cmp
push
lea
je
pushf
lea
ja
or
pushf
add
xchg
shl
shl
shr
pushf
bsf
mov
bswap
cmc
add
rol
mov
lea
pushf
movw
bt
test
cmpsb
pushf
movl
movw
lea
ja
pusha
pushf
lea
jb
cmc
call
push
call
dec
test
test
or
pushf
jmp
push
leave
xchg
pop
out
fisttps
jl
adc
aaa
dec
push
inc
ds
lahf
daa
cwtl
inc
mov
adc
imul
lds
cmp
cwtl
enter
mov
arpl
cmp
ja
rolb
sub
ret
jmp
pop
sbb
int
fstpl
ss
mov
or
push
or
mov
cwtl
inc
fbld
das
inc
add
xchg
ret
xor
rcrb
sahf
iret
pushf
cld
mov
mov
stos
ret
out
test
sti
and
pusha
fiadds
dec
mov
xor
loop
mov
mov
arpl
cltd
out
mov
jge
mov
stos
pop
jns
sbb
mov
adc
jns
arpl
inc
xor
aad
inc
divb
and
sub
dec
mov
and
test
pusha
js
repz
hlt
pop
jo
mov
shl
push
aas
mov
jae
nop
xchg
repz
fwait
stc
mov
stos
jle
dec
or
jae
push
call
xor
out
gs
pushf
dec
mov
in
daa
adc
xor
popa
sbb
mov
shll
sub
mov
fcoms
inc
xor
lahf
fcmovnu
push
popa
xchg
pop
jmp
push
call
pop
test
inc
add
fs
jne
pushf
pusha
pusha
pushl
ret
push
call
mull
mov
bts
rcl
mov
push
clc
test
pushf
cmpb
jmp
push
cmpsl
into
adc
gs
sahf
add
aam
sbb
aas
push
xlat
jo
das
and
lock
sbb
inc
lods
mov
xchg
inc
cltd
jno
lahf
nop
pop
loopne
xchg
pop
push
daa
xchg
ss
mov
xchg
mov
mov
test
mov
test
js
mov
aaa
lea
adcb
adc
mov
in
pop
add
mov
frstor
push
dec
icebp
inc
xor
add
adc
add
mov
call
movb
call
aas
aad
mov
clc
rcr
dec
mov
adc
test
mov
mov
pushf
push
add
mov
pusha
test
shld
movl
jmp
call
pusha
mov
pusha
pushf
movb
lea
jmp
xchg
call
pushl
popl
inc
pushf
mov
movl
pop
push
mov
call
stc
jmp
stc
neg
lea
neg
mov
shld
xor
movsbl
stc
ror
not
movzbw
inc
xor
add
stc
ror
sub
movsbw
bsr
jmp
sub
bt
sub
call
jmp
sub
pusha
pushl
mov
jmp
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
jmp
mov
pushf
mov
pushf
popl
movw
jmp
pushf
mov
mov
jmp
push
mov
jmp
dec
mov
movw
lea
jmp
bts
sub
shl
mov
rcr
shl
shl
and
mov
test
push
movw
add
pusha
mov
movw
push
lea
jmp
pushf
pushf
popl
movb
pusha
push
movb
pushl
popl
pushl
push
pushf
pushf
lea
jmp
pushf
mov
pushl
pusha
pushf
pushl
lea
jmp
call
movl
pusha
pushf
mov
mov
dec
pushf
lea
jmp
clc
xor
pusha
pushf
jmp
mov
movb
lea
jmp
pusha
mov
pushf
mov
pushl
mov
call
push
movw
mov
jmp
pushf
cmc
sub
movw
pushf
pushf
lea
jmp
add
stc
stc
cmp
test
sub
mov
pushf
call
pusha
cmp
add
movw
call
mov
jmp
pushf
jmp
movb
mov
pushl
mov
mov
jmp
call
call
mov
movb
push
mov
pushf
jmp
xchg
movsbw
setp
mov
setno
mov
movw
mov
movw
pushl
ret
push
mov
push
pusha
pushf
mov
pusha
mov
call
jmp
jmp
neg
pushf
bsf
mov
inc
mov
stc
pusha
pusha
jmp
cmp
add
pushl
mov
pushf
pushl
pushl
ret
xchg
movl
lea
pushf
mov
dec
xchg
not
dec
jmp
jmp
push
jmp
xor
stc
call
mov
mov
stc
xchg
clc
pusha
cmp
call
sub
jmp
jmp
and
or
mov
test
cmc
xchg
cmc
stc
pusha
sub
bt
clc
sub
bt
movb
xchg
stc
sub
mov
cmp
call
sub
clc
rcl
mov
sar
xor
cmp
not
mov
stc
pusha
test
sub
cmp
shr
pushf
pusha
jmp
pushf
popl
call
pop
lea
not
mov
pusha
jmp
jmp
inc
jp
movzbw
neg
bts
sar
shl
neg
not
sbb
bswap
movzbw
bsf
add
pushf
mov
pusha
jmp
movb
pusha
dec
clc
add
call
cmc
call
call
push
pusha
mov
pushf
lea
jmp
push
mov
mov
pushf
jmp
dec
mov
movw
mov
lea
jmp
pushl
popl
pushl
pushf
lea
jmp
push
stc
sub
mov
pushf
mov
mov
movb
lea
jmp
push
mov
mov
call
push
pushf
popl
pushf
jmp
pushl
popl
movb
mov
movw
movw
lea
jmp
pushf
mov
jmp
mov
jmp
cmp
add
shrd
add
jmp
bsf
rcr
test
test
mov
inc
xor
rcl
mov
test
sub
clc
jmp
push
pushl
mov
neg
add
not
jmp
cmc
clc
clc
cmc
add
pushf
pushl
mov
mov
movb
pusha
pushf
movl
pushl
ret
pusha
mov
jmp
mov
stc
bt
test
sub
pusha
mov
push
lea
jmp
pusha
mov
movb
mov
mov
pushf
pushl
lea
jmp
xor
pusha
bswap
pushf
xor
mov
push
stc
cmp
sub
sub
ja
test
pushf
pusha
mov
call
jmp
not
mov
pusha
setb
xor
stc
bts
rol
movsbw
bsf
pusha
inc
btc
xor
dec
pushl
dec
sub
xor
cmp
neg
mov
pushf
add
pushf
lea
jb
pusha
pushf
mov
pushl
mov
lea
jmp
not
xchg
mov
pusha
not
xchg
mov
std
lea
std
jmp
jmp
bswap
movsbw
mov
movl
push
pushl
popl
push
bsr
pushf
movl
lea
mov
pushf
movb
jmp
cmp
push
test
add
call
stc
cmc
pushf
neg
push
cmc
rol
stc
lea
jns
pushf
xor
pusha
mov
pushl
add
cmp
cbtw
test
jmp
mov
push
pushl
pushf
popl
jmp
shl
mov
stc
bt
pushf
bt
sub
stc
add
jmp
pushf
mov
movb
movl
pushf
movb
xchg
bsr
inc
bswap
bsr
mov
inc
pushl
popl
inc
inc
bsf
bsf
movl
dec
mov
pushf
mov
dec
pushl
mov
movb
lea
jmp
mov
mov
jmp
push
pushl
popl
pushf
lea
jmp
test
sbb
sets
rdtsc
push
jmp
mov
pushf
lea
jmp
not
mov
push
movzbw
call
pushf
pushf
pushf
pushf
pushf
popl
pusha
push
call
push
movl
pusha
mov
pusha
pushf
push
lea
jmp
push
pushf
popl
jmp
cmp
test
sub
movl
pusha
mov
pushf
pushl
mov
movb
pushf
pushf
pushf
lea
jmp
push
clc
cmc
add
call
mov
jmp
pushl
call
add
add
mov
jmp
movl
dec
mov
movl
lea
jmp
push
jmp
pushf
popl
call
call
inc
pushf
mov
pusha
call
push
mov
pusha
mov
pushf
pushf
lea
jmp
pushf
call
mov
pushf
setne
pushl
popl
bsr
not
movl
dec
mov
xchg
mov
dec
btr
ror
shl
bswap
and
rcr
rol
not
cmc
lea
bsf
dec
call
movsbw
bswap
mov
pushf
mov
movw
call
pushf
mov
pushf
call
sub
call
pusha
bswap
bsr
mov
jmp
mov
mov
movb
mov
pusha
push
push
lea
jmp
pushf
mov
call
jmp
jmp
ror
bsf
bsr
bsr
inc
inc
or
adc
not
add
movzbw
ror
clc
xor
rol
not
movzbl
cmc
call
push
or
call
pushf
popl
jmp
push
mov
pushf
mov
push
mov
pusha
jmp
add
pushf
shrd
pusha
pusha
pushl
call
call
push
movsbw
mov
pushf
pop
jmp
clc
aam
rcl
bts
mov
cmc
btc
mov
clc
add
jmp
call
xor
bt
bswap
call
mov
mov
movb
mov
pushf
lea
jmp
add
lea
jae
push
push
movb
mov
pushf
pushf
lea
jmp
rcr
test
push
mov
call
call
bswap
shr
pusha
mov
and
mov
stc
not
bt
call
movw
mov
pushf
jmp
pushf
popl
call
pusha
bt
mov
stc
cmp
mov
add
pushl
lea
jmp
mov
mov
call
pushf
popl
pusha
jmp
mov
call
mov
push
call
cmc
add
push
jmp
mov
jmp
sar
not
sub
sub
sbb
and
dec
bt
not
bsf
not
rcr
and
shrd
mov
test
sub
jae
pusha
pusha
mov
movb
push
mov
lea
jmp
cmc
call
push
pushl
popl
push
mov
push
lea
jmp
shr
rcl
movzbl
call
mov
push
mov
lea
jmp
call
pushf
mov
movw
pushf
popl
call
bt
cmp
jmp
pusha
call
mov
bsr
movsbw
bsf
call
dec
pushf
movb
movw
pushf
lea
jmp
dec
mov
mov
movb
lea
jmp
mov
pusha
jmp
call
jmp
jmp
call
pushf
mov
push
jmp
rep
not
pushl
btr
sub
mov
bts
bsf
xor
or
mov
stc
stc
stc
pushl
popf
push
lea
jmp
add
call
xor
call
not
rol
btc
sbb
movsbw
sub
cmc
shl
pusha
shrd
not
movb
lea
and
shl
or
rcl
pusha
mov
stc
cmc
add
pushf
pushf
mov
push
mov
mov
lea
jmp
pushl
popl
movb
mov
lea
jmp
mov
push
movw
lea
jmp
pushf
mov
pushf
pushf
lea
jmp
btc
stc
neg
add
dec
shl
inc
not
call
mov
call
pushl
popl
pushf
mov
pushf
pushf
lea
jmp
jmp
mov
push
cmc
ror
call
pushf
mov
mov
jbe
not
push
not
pushf
push
mov
pushf
bsf
xchg
jmp
call
mov
pusha
pushf
mov
pushf
lea
jmp
movb
pushf
call
inc
mov
lea
jne
pusha
decl
pushl
call
mov
lea
jg
push
pushl
pushf
popl
pushl
pushl
popl
pushf
lea
jmp
pushl
popl
mov
lea
jmp
lea
shl
shr
stc
mov
cmp
jmp
movb
sub
pusha
sub
call
clc
bt
cmc
shl
bt
cmp
bt
shr
test
clc
jmp
mov
lea
js
cmc
pushf
clc
ror
movb
push
cmc
cmp
add
push
pushf
pushf
mov
movb
pusha
pushf
pushl
ret
call
lahf
movzbw
movsbl
mov
movb
pushf
call
movl
movzbw
jmp
mov
pusha
pushl
mov
pushf
lea
jmp
jmp
mov
push
call
pushf
call
shld
mov
seta
shld
mov
bt
bt
test
add
pushf
pushf
pusha
pushf
mov
mov
lea
jmp
pushf
inc
cmc
jmp
pushf
mov
call
mov
pushl
lea
jmp
mov
call
and
pushf
pushf
push
call
movw
mov
mov
mov
call
btr
neg
mov
dec
mov
pushf
stc
call
mov
pushf
pusha
dec
mov
pushf
pushf
movl
lea
jmp
pusha
mov
pusha
jmp
jmp
mov
pushf
mov
mov
lea
jmp
sbb
add
jmp
mov
mov
lea
jmp
mov
pushl
xchg
pop
mov
bsr
dec
pushl
popl
push
bsr
movl
bsf
mov
push
mov
pushf
dec
pushl
pushf
push
lea
jmp
jmp
call
dec
das
lahf
and
mov
pushf
pushf
add
call
movzbl
pushf
dec
mov
xor
pushf
rol
pushf
inc
cmp
pusha
pushf
call
mov
jmp
mov
pushl
mov
call
sub
call
call
call
pushf
movl
mov
call
jmp
bsf
pop
mov
pop
pushl
popl
bsf
movl
jmp
notl
dec
movsbw
cbtw
mov
test
clc
pushf
jmp
movb
pushf
mov
call
jle
setno
lea
push
movzbl
setb
push
sete
pushf
inc
mov
jmp
call
push
dec
stc
add
call
shld
jmp
lea
jne
call
push
call
jmp
not
bsr
mov
call
pushf
pushf
lea
ja
cwtl
btc
not
mov
xadd
sub
daa
bsf
lea
call
pusha
pushf
mov
movw
pushf
popl
call
mov
jmp
ror
pushl
add
jmp
jmp
call
call
pushf
popl
push
push
pushl
mov
movb
mov
jmp
pusha
call
bt
call
mov
pusha
pushf
mov
push
pushl
movb
pushf
pushf
popl
jmp
call
call
mov
movb
mov
jmp
pushf
lea
jb
push
movzbl
mov
jmp
lea
bt
dec
shr
ror
mov
xor
mov
add
sbb
and
mov
movzbw
xor
btr
pusha
movzbl
jmp
movb
pushf
popl
pushf
mov
call
mov
movl
pushl
lea
jmp
pushf
jmp
mov
jmp
push
jmp
clc
pushl
call
rcr
rcl
call
pusha
mov
mov
pusha
mov
jmp
cmp
sub
bt
movl
push
sub
cmp
test
bt
lea
pushf
push
cwtl
stc
push
push
pushl
sub
movw
lea
jl
pusha
push
mov
pushf
pushl
lea
jmp
mov
pushf
jmp
pushf
lea
ja
push
call
pusha
bt
clc
add
pusha
std
test
push
pushl
popf
pushf
lea
jmp
mov
pushl
popl
movsbl
not
movsbw
pushf
movl
dec
bswap
bswap
mov
push
jmp
pushf
popl
push
mov
pushl
popl
movw
push
movb
lea
jmp
dec
push
pushf
mov
lea
jmp
cmp
clc
mov
bt
sub
call
bt
bt
add
mov
mov
mov
pushf
push
movw
lea
jmp
push
add
pushf
push
pushf
dec
call
push
pusha
call
sbb
mov
xor
clc
clc
mov
call
bswap
pushf
clc
pushf
jmp
jmp
movb
jmp
bt
shl
bsr
movzbw
mov
and
mov
cmc
not
pusha
not
clc
pushl
and
push
push
mov
call
pushf
movl
mov
push
mov
push
jmp
pushf
pushf
popl
pusha
mov
bsf
xchg
movzbw
xchg
movzbw
xchg
pop
dec
inc
xchg
mov
call
xor
js
pusha
add
clc
cbtw
pushf
test
cwtl
jmp
mov
pushl
cld
call
call
call
xadd
cmp
cmc
mov
jmp
movw
pusha
pushf
mov
mov
push
mov
not
call
pushl
popl
push
lea
jmp
push
jmp
call
call
neg
shld
mov
sar
mov
clc
mov
bt
clc
sub
cmc
cmc
cmp
test
shr
pushf
pushf
mov
jmp
movl
push
mov
pushf
pushf
mov
call
mov
pusha
pushf
mov
lea
jmp
lea
pushl
mov
movzbl
mov
pusha
divl
call
movsbw
bswap
call
btc
bt
mov
sete
clc
add
add
mov
shl
adc
xor
add
sbb
mov
jmp
pusha
adc
movzbw
mov
jmp
mov
pushl
call
mov
movb
call
mov
jmp
sub
jmp
movl
call
dec
mov
mov
lea
jmp
mov
push
call
ror
call
mov
mov
pushl
mov
lea
jmp
mov
pusha
clc
stc
ror
push
add
mov
pushf
jmp
pushl
popl
dec
dec
not
pop
movl
jmp
pushf
mov
pushf
movb
pushl
ret
pushf
rcr
bts
xadd
mov
sar
movzbw
inc
mov
stc
bt
add
jmp
mov
jmp
mov
pushf
mov
push
pushf
jmp
movb
xchg
pushf
bsf
mov
inc
bsf
movzbw
pushl
popl
call
call
movzbl
dec
lea
mov
bsr
bswap
inc
pushl
popl
movw
bsf
bsf
movsbl
movl
pop
jmp
push
mov
push
pushf
popl
jmp
call
rcr
push
movzbl
rcl
jmp
pushf
call
dec
bsf
call
jmp
dec
pushf
mov
pushf
lea
jmp
call
push
pushl
popl
not
movl
pushf
movsbw
pushl
mov
jmp
mov
mov
push
pushf
popl
mov
pusha
mov
jmp
shl
mov
mov
mov
movb
pushf
jmp
bswap
setge
not
or
xor
lea
not
sub
neg
adc
call
mov
mov
push
pushf
pushf
pushl
ret
call
call
mov
pusha
clc
sub
jmp
pushl
xchg
lea
movzbl
dec
mov
dec
mov
pushf
jmp
test
stc
mov
push
cmp
sub
pusha
lea
jns
mov
pushf
pushf
lea
jmp
cmp
add
pushl
cmp
clc
sub
stc
sub
jmp
pushf
popl
mov
movw
mov
jmp
mov
pushl
mov
call
movw
pusha
mov
pushl
call
pusha
rcr
and
mov
cmc
call
or
sbb
lea
bt
pushf
pushf
cmp
pusha
jmp
pushl
popl
pushl
lea
jmp
cbtw
push
bt
stc
cwtl
clc
cmp
pushf
sub
jmp
push
pushf
pushl
call
std
xchg
bsr
mov
pusha
or
lahf
mov
bsr
shr
mov
setp
rol
xadd
mov
adc
clc
cwtl
mov
bsr
inc
mov
daa
bswap
mov
adc
btr
cmp
inc
mov
sub
sbb
inc
aad
mov
lea
bt
test
pushl
popf
call
jmp
faddl
pop
test
fldl
enter
pop
aad
add
fldl
mov
fldl
adc
fldl
mov
add
pop
fldl
sub
add
mov
add
mov
faddl
adc
faddl
sbb
fldl
adc
fldl
enter
rorb
faddl
mov
faddl
mov
faddl
pop
aad
add
mov
fldl
fdivs
add
popf
fldl
push
scas
fldl
mov
fldl
dec
fldl
lock
fldl
pop
ret
andb
add
faddl
lock
add
pop
faddl
enter
jo
fldl
rorb
faddl
lock
add
faddl
jo
faddl
cmp
faddl
nop
mov
fldl
enter
adc
fldl
mov
faddl
jo
faddl
andb
add
faddl
lock
fldl
mov
fldl
dec
fldl
mov
fldl
and
fldl
jo
fldl
mov
fldl
push
scas
fldl
jo
faddl
mov
fldl
mov
mov
add
popf
faddl
adc
fldl
sbb
faddl
adc
faddl
adc
faddl
jo
fldl
jo
fldl
cmp
faddl
sbb
fldl
adcb
add
mov
add
faddl
lock
add
out
add
mov
faddl
add
faddl
mov
fldl
jo
fldl
test
faddl
adc
fldl
add
add
faddl
enter
adc
faddl
lock
fldl
cmp
faddl
push
fstp
add
fldl
lock
faddl
adc
faddl
sbb
faddl
or
faddl
adc
fldl
adcb
add
out
add
paddusw
jo
faddl
sbb
fldl
enter
jo
fldl
pop
fcomp
add
out
add
pop
faddl
lock
add
paddusb
cmp
faddl
cmp
fldl
lock
faddl
call
mov
fldl
dec
fldl
push
scas
fldl
lock
fldl
dec
fldl
dec
fldl
push
inc
fldl
mov
add
faddl
jo
faddl
call
aaa
fldl
clc
pop
faddl
pop
aad
add
cmp
add
pop
fldl
add
add
fldl
enter
lock
faddl
adcb
add
fldl
sub
add
paddusw
cmp
fldl
fdivs
add
mov
add
mov
add
mov
add
popf
fldl
dec
fldl
fdivs
add
paddusw
sbb
fldl
adcb
add
faddl
mov
fldl
enter
add
add
mov
add
cmpsb
fldl
sub
add
mov
fldl
mov
fldl
sub
add
mov
add
xchg
faddl
enter
addb
add
fldl
fdivs
add
faddl
jo
fldl
sub
add
aad
add
faddl
mov
faddl
push
fstp
add
faddl
adcb
add
mov
add
aad
add
jecxz
add
fldl
mov
add
faddl
lock
fldl
lock
faddl
jo
fldl
lock
fldl
push
scas
faddl
enter
add
add
cmp
add
fldl
lock
faddl
or
fldl
pop
fcomp
add
mov
add
fldl
sbb
fldl
adc
faddl
pop
aad
add
faddl
cmp
fldl
cmp
fldl
fdivs
mov
mov
jmp
mov
jmp
pushl
popl
mov
lea
jmp
ror
mov
bt
push
push
clc
add
bt
neg
movb
bt
rol
add
jo
bt
xor
clc
add
pushf
cmp
sub
jmp
call
rep
test
clc
mov
pusha
shld
bswap
mov
std
cmp
std
stc
pushl
popf
mov
movb
lea
jmp
not
mov
movzbw
push
pushf
pushf
mov
pushf
mov
mov
pushf
lea
jmp
call
push
mov
mov
pushl
mov
pushf
mov
bswap
movl
pushl
popl
bswap
movl
lea
mov
pusha
jmp
mov
cmc
test
xchg
test
bt
call
mov
push
push
pushf
pushl
lea
jmp
jmp
mov
movb
movb
mov
mov
pushl
mov
pushf
mov
call
pushf
clc
jmp
mov
mov
pushf
popl
pusha
pushl
popl
push
mov
lea
jmp
push
jmp
mov
jmp
mov
pusha
jmp
xchg
bsr
mov
pushf
call
call
cld
pushf
pushf
pusha
jmp
pushf
mov
jmp
pop
mov
lea
bswap
push
pushl
popl
pop
movl
dec
jmp
call
not
movzbw
pushf
or
mov
pushf
test
add
pushf
pushl
pushf
mov
lea
jmp
add
pushf
call
jmp
call
mov
jmp
movsbw
dec
cmc
mov
push
movb
call
call
mov
pushf
pusha
push
lea
jmp
jmp
call
cmp
sub
clc
mov
movsbw
mov
sub
mov
sar
bts
movzbl
neg
add
btr
jo
and
ror
mov
shl
adc
xor
push
ror
push
pusha
pop
pusha
inc
and
add
movzbw
lea
ror
add
neg
bts
clc
xor
setae
lea
jp
cmc
movsbw
movzbl
not
lea
pusha
cmc
mov
clc
call
mov
call
mov
mov
mov
lea
jmp
movl
mov
push
pushf
pushf
lea
jmp
test
pushf
not
mov
sub
clc
mov
cmp
jmp
mov
movl
lea
jmp
dec
mov
push
lea
jmp
call
call
stc
xor
push
jmp
not
call
call
pushf
mov
jmp
rcr
mov
add
mov
stc
stc
cmc
sub
pusha
bt
test
add
jl
shr
call
pushl
popl
movb
push
lea
jmp
stc
not
pushf
add
jmp
call
push
pushl
push
mov
jmp
jmp
neg
ror
shl
movzbl
push
jmp
movsbw
push
mov
push
call
mov
pushl
jmp
pushf
pushf
mov
push
jmp
mov
mov
xchg
not
not
mov
movzbw
pushl
popl
pusha
call
xchg
mov
setno
shrd
add
movsbw
movzbw
dec
jmp
mov
pushf
dec
mov
mov
pushf
push
lea
jmp
call
setbe
pushl
popl
bswap
mov
call
movw
movw
xchg
lea
mov
lea
bswap
dec
dec
pushl
popl
bsf
pushf
push
call
call
cmc
neg
call
push
call
pushf
popl
call
lea
jne
jmp
stc
bt
call
dec
pushf
pushf
lea
jmp
mov
movzbw
xchg
push
movzbw
pushf
dec
bsr
mov
pusha
movzbw
xchg
push
inc
mov
pusha
mov
jmp
xor
bt
movzbl
stc
call
mov
pushf
sub
pushf
mov
movw
pushf
mov
lea
jmp
call
jmp
push
pusha
movb
call
push
movb
pusha
jmp
shr
mov
cmc
ror
jmp
call
mov
pushf
mov
pushf
mov
pushf
call
mov
pushf
pushl
call
pushf
popl
jmp
shr
mov
jmp
pushf
popl
jmp
call
seto
push
mov
pusha
mov
lea
jne
push
pushf
push
lea
cpuid
pusha
cmp
sub
pushf
mov
call
mov
pushf
pushf
pushf
lea
jmp
pushf
pushf
popl
jmp
xchg
jmp
call
call
pushf
bt
cwtl
test
sub
call
sub
pushl
mov
push
pushl
movw
pushf
lea
jmp
pushf
stc
shl
call
adc
stc
shld
mov
cmp
test
jl
pusha
add
movb
push
movl
pushf
pushf
popl
pushf
movw
mov
pushl
popl
pushl
lea
jmp
mov
jmp
rcl
dec
shl
sar
mov
xadd
sub
cmc
adc
mov
or
cmp
inc
mov
jmp
push
pushf
popl
pushf
push
call
pushl
popl
movw
lea
jmp
pushf
mov
pushf
pushf
mov
call
pushf
pushf
pushf
movb
mov
pusha
pushf
lea
jmp
pushf
decl
pushl
push
pushl
call
jmp
rcl
btc
mov
bswap
add
mov
cmp
cmc
add
pushf
mov
push
pusha
lea
jmp
sub
clc
pushf
stc
shl
call
mov
mov
mov
pop
bsf
movzbl
bsr
mov
dec
pushl
popl
mov
jmp
mov
rcl
mov
call
jmp
push
mov
call
shrd
rcl
shld
setle
mov
jmp
mov
mov
pushf
call
call
mov
call
push
pushf
mov
mov
movb
pusha
pushf
mov
movb
pushl
jmp
mov
call
movb
jmp
sub
bt
and
call
movb
call
pushf
popl
pusha
pushf
push
mov
jmp
bsf
sub
bsf
lea
mov
and
shrd
bsf
pushf
bsr
sub
call
mov
pusha
pusha
pushl
pushf
lea
jmp
jmp
mov
pusha
movb
mov
jmp
pusha
pushf
movb
pushf
popl
push
call
cmc
pusha
jmp
pushl
mov
pop
movsbw
mov
mov
jmp
mov
mov
pusha
call
mov
call
pushf
mov
pushl
pushf
call
pushf
popl
mov
mov
pusha
pushf
jmp
jmp
mov
pushf
call
pushl
mov
push
pusha
pushl
ret
pushf
popl
jmp
movzbl
pushl
popl
movzbw
push
bsf
dec
mov
movsbw
pusha
dec
sub
or
lea
inc
shl
bswap
pusha
btc
xadd
shl
not
sar
lea
xchg
adc
adc
not
sub
test
mov
ror
bt
inc
cmc
mov
stc
push
rcl
mov
add
add
rcr
bswap
lea
adc
mov
sar
lea
shrd
neg
xor
push
ror
movsbw
pop
inc
bswap
rcr
add
cmc
ror
shld
shl
xor
mov
movzbl
bswap
pusha
mov
bt
ror
bt
lea
jae
bt
add
push
mov
pushf
mov
pusha
pushl
ret
mov
bsr
call
mov
mov
jmp
call
pushf
popl
push
mov
push
mov
push
mov
pushf
pushf
mov
call
lea
jmp
jmp
pushf
pushf
popl
call
push
movb
mov
push
pushf
push
mov
jmp
call
push
mov
movzbl
call
lea
je
mov
push
lea
jmp
lea
cpuid
stc
jmp
