push
call
in
xchg
sbb
shr
cmpsb
in
adc
cwtl
mov
in
mov
lds
ss
aas
int
arpl
shll
rolb
push
sub
fs
call
jle
sub
insl
mov
gs
sub
mov
sub
out
add
mov
loopne
inc
pop
mov
sbb
dec
xor
inc
icebp
mov
and
and
into
les
ja
push
sarb
and
and
dec
xor
test
sahf
cmpsl
sbb
jl
aaa
push
mov
xchg
cmp
sbb
push
icebp
pop
jmp
sbb
or
shlb
es
push
cltd
test
xchg
cmc
divl
pop
xchg
ret
xchg
fcompp
lahf
sub
loope
shrb
sti
shr
les
push
clc
dec
jmp
sub
or
fimull
ljmp
inc
jecxz
in
and
test
xchg
sti
push
sub
sub
sti
inc
adc
push
jg
add
sub
sti
cld
add
popa
push
icebp
popa
push
sub
mov
scas
sub
lods
pop
lods
sub
adc
outsb
int3
call
cld
out
stc
cmp
xchg
cltd
pop
ljmp
out
sbb
dec
mov
xchg
cli
out
mov
imul
fnstsw
sahf
adc
sar
inc
sbb
mov
inc
inc
cmp
hlt
jp
pop
mov
jle
inc
es
insl
cmp
dec
ret
ficomps
ja
sti
test
gs
arpl
leave
or
xlat
lahf
sub
iret
fldcw
in
lods
hlt
dec
les
pop
je
or
mov
xor
cmp
mov
lret
rorb
cld
imul
into
gs
mov
std
or
repnz
jbe
aam
adc
xor
and
dec
sbb
push
jmp
sub
mov
pushf
mov
ret
and
es
add
pushf
push
les
push
test
ljmp
cmc
lret
insb
adc
rclb
pop
jnp
icebp
inc
loopne
mov
mov
lcall
jbe
fdivrl
andl
mov
popf
cmp
cmp
pushf
or
sbb
ret
xor
mov
iret
lea
stos
loopne
jle
push
mov
cli
adc
mov
cmp
cli
decb
xlat
jl
sbb
aas
sub
inc
jp
pop
loopne
lahf
fcmovb
test
push
cmp
adc
lahf
mov
add
sbbb
repnz
test
pop
fnsave
aam
inc
decb
sub
mov
mov
push
insb
shrb
popa
cld
repnz
cmc
aaa
mov
and
or
test
dec
sub
mov
adc
sar
mov
das
movsb
dec
dec
int3
jl
ds
inc
cmp
dec
aaa
jecxz
lret
divb
cmpsl
out
pop
into
sbb
adc
add
shr
pusha
mov
mov
mov
movsb
in
inc
addr16
xchg
aaa
subl
dec
shl
cmpsl
inc
xchg
mull
lea
add
xchg
jns
sub
sbb
sbb
mov
test
aad
test
call
out
and
pop
jb
adc
mov
shrb
push
fdivrs
sub
mov
mov
jno
lret
push
les
call
jmp
arpl
int3
pop
pop
cmpsb
lock
pusha
pop
sub
fsubs
stos
lock
mov
pop
out
ret
adc
loop
js
or
sti
and
add
aad
mov
push
inc
add
scas
jbe
lock
jmp
frstor
es
pop
mov
mov
fmull
sbb
shlb
rcll
lods
out
cmp
jbe
pop
sub
repnz
pop
js
sti
mov
jl
mov
scas
mov
dec
adc
pop
ljmp
xchg
jbe
inc
xor
xor
sub
lret
fmulp
mov
add
test
add
bound
movsb
jmp
xor
sub
flds
rcl
xchg
in
loope
jb
jb
cmp
lcall
ret
push
sbb
mov
jl
subl
adc
push
in
rcl
sbb
std
pushw
mov
lock
aam
stc
inc
push
pusha
xor
lods
push
mov
imulb
sbb
dec
push
loope
aad
or
sbb
shrl
sbb
dec
sub
dec
fwait
test
sbb
or
je
and
js
xchg
rcrl
iret
adc
dec
push
cmp
sbb
decb
add
stc
add
mov
jge
out
fwait
insb
and
andl
push
scas
mov
xchg
xchg
popa
test
inc
dec
ret
xchg
lock
fimull
pop
sub
dec
push
push
out
mov
sub
hlt
mov
mov
push
insb
push
mov
sub
cmpsl
jnp
pop
das
xchg
mov
stos
jns
andb
cli
iret
shl
adc
add
es
lcall
mov
or
lret
leave
pushl
lock
arpl
inc
stos
les
scas
xchg
and
addr16
cmpsb
lods
adc
jecxz
sub
jle
mov
cltd
pop
push
adc
rol
xchg
ds
gs
mov
mov
xor
push
dec
pop
jmp
adc
xor
mov
mov
sub
xchg
inc
mov
push
in
imul
arpl
loop
inc
mov
sbb
clc
dec
iret
xor
out
mov
mov
inc
sbb
in
and
lods
inc
sbb
mov
xchg
fisttpl
in
sbb
and
pusha
jno
and
scas
icebp
pop
ja
pop
loopne
pop
sbb
fiaddl
mov
sub
jmp
loop
es
rcr
xor
push
jns
add
xchg
loopne
sbb
xor
jecxz
shll
bound
pop
repnz
mov
sub
movsl
add
pop
or
test
aas
in
sarb
mov
mov
sbb
fildll
mov
inc
inc
rol
mov
stos
mov
mov
sbb
push
mov
add
mov
cmpsl
add
mov
shlb
xchg
in
lock
or
enter
inc
push
xor
mov
lret
mov
imul
aas
ret
inc
movsb
daa
lcall
inc
loopne
mov
cmp
stos
ret
pop
aad
shr
pushf
gs
or
test
pop
add
dec
mov
mov
cmpsl
in
or
sbbb
mov
push
sahf
call
mov
nop
pushl
pop
popf
pop
dec
lods
xchg
sub
filds
jbe
dec
xchg
out
mov
and
cmpsl
add
sbb
adcl
into
jle
pusha
push
and
scas
lods
xchg
dec
into
add
adc
pushf
aas
loop
add
mov
rcll
dec
faddp
mov
add
dec
or
cmp
in
and
pop
or
adc
dec
or
lds
movsb
pop
xor
jnp
adc
pop
insb
repz
test
pop
dec
mov
jb
push
push
xor
fidivs
cmpsl
mov
push
insl
daa
pop
mov
or
je
adc
aad
fucom
sub
adc
xchg
aas
movsl
lfs
push
cmp
jecxz
mov
push
movsl
cmp
lret
mov
std
pushf
sub
mov
in
mov
mov
mov
les
sti
sbb
jmp
mov
cmp
dec
inc
xchg
xor
fstpt
pop
mov
cs
ljmp
xchg
jmp
push
insb
jnp
xchg
or
iret
sbb
mov
pop
push
loop
dec
fbstp
jmp
incl
lea
mov
pop
mov
cwtl
mov
xor
push
sub
test
push
xchg
sub
orb
jl
xor
pop
stos
outsl
mov
mov
popf
and
sahf
xor
dec
rcl
stos
ret
and
outsl
push
and
loopne
jl
pushl
mov
mov
add
jmp
jp
leave
idivb
cmpsl
mov
add
stos
xchg
jl
mov
mov
xchg
pop
rcrb
sahf
addl
lds
mov
push
dec
add
jnp
dec
push
jmp
scas
and
in
je
xchg
enter
cltd
mov
fwait
ja
inc
mov
loopne
mov
mov
mov
int3
push
push
xor
inc
lret
cmp
jb
and
shrl
cmpsb
in
jg
loopne
cmp
cs
shll
add
loope
idiv
push
das
sbb
inc
cltd
addl
roll
call
js
test
push
stc
repnz
cmp
stc
sbb
aas
aaa
xlat
mov
call
mov
cmp
fwait
jl
xor
pop
and
jns
bound
pop
pop
push
cmpl
xchg
or
lds
test
in
shrb
test
gs
pop
adc
and
xlat
jl
lret
jmp
dec
push
mov
sarl
daa
arpl
int3
dec
jo
and
sbb
pushf
jmp
pop
imulb
and
inc
adc
and
inc
int
jb,pt
lret
ljmp
jl
mov
sbb
es
cli
dec
xchg
adc
sub
xchg
mov
xlat
out
rcr
sbb
jb
pop
cmp
pushf
add
shlb
movsl
je
or
push
pop
jae
es
sti
xor
push
sbb
xor
push
int
jl
sbb
lock
movsl
mov
aas
add
sti
dec
jno
jg
lret
stos
and
sub
jge
xchg
jle
inc
jno
xchg
sub
icebp
test
dec
rcll
rol
cmpsb
mov
mov
je
push
mov
sahf
imul
cli
data16
movsl
es
xor
adc
mov
outsl
popa
or
xchg
adc
or
dec
inc
and
imul
lcall
mull
xlat
inc
pop
ljmp
in
filds
fidivs
jp
and
call
popa
jl
lea
ds
mov
mov
lea
rcr
pop
mov
sub
enter
cli
xchg
and
fcmovne
inc
or
add
inc
add
loope
or
cmp
cs
inc
xor
lods
subb
addl
jnp
test
mov
lahf
mov
pop
js
cmp
and
testl
andl
idivb
jge
loop
add
iret
lods
stos
jb
test
lcall
or
dec
pop
lods
adc
and
cmpsb
xchg
filds
inc
mov
stc
ffree
xor
sub
and
jge
int3
es
sub
pusha
push
inc
cmp
fdiv
shrl
and
aas
shlb
and
test
movsb
out
cmp
in
rorl
mov
jb
cmp
stos
xor
daa
cmp
push
test
je
push
xlat
mov
lahf
lret
iret
lods
mov
outsl
sbb
cmp
inc
popf
sbb
iret
lods
jle
inc
mov
push
loopne
or
xor
loope
push
add
pusha
out
cmpb
fdivrs
fiadds
jno
repnz
mov
lock
hlt
pop
adc
pushf
jae
test
shlb
out
pop
fldt
lock
dec
int
jno
outsb
pop
cmp
cmpsb
insb
pop
adc
bound
jnp
cld
hlt
mov
xor
ds
jle
inc
shrl
lret
xchg
jmp
jg
cmpsl
pop
xchg
loope
std
lods
int
xchg
test
inc
add
push
add
mov
xor
mov
add
pop
jge
subb
or
mov
andl
jge
lret
imul
cmp
push
je
jbe
sbb
add
add
call
cmp
lods
stc
out
sbb
adcl
pop
into
call
mov
daa
leave
cmp
sbb
fldt
inc
popf
or
sub
sbb
fisubrl
scas
in
mov
scas
ja
cmp
mov
fucomip
mov
push
sub
lret
add
inc
rcll
push
addr16
mov
pop
mov
lds
cmp
push
sub
jle
sbb
out
push
add
dec
aam
jns
jl
cli
imul
sub
es
mov
imul
cmp
push
mov
enter
ret
dec
lahf
out
hlt
clc
jno
mov
jp
cmp
adc
xchg
imul
xchg
push
fildll
in
aaa
dec
xchg
pop
dec
data16
movsb
jbe
lods
push
xchg
mov
hlt
cmp
scas
sbb
xchg
arpl
sub
outsb
dec
and
ljmp
ja
xor
bnd
call
add
fiaddl
add
fidivs
std
aas
pop
addr16
mov
jmp
pusha
mov
or
mul
adc
xchg
bound
pop
stos
enter
mov
call
sti
add
push
dec
dec
sbb
das
cmpsb
test
and
js
movl
lea
ss
inc
xor
pop
les
mov
stc
lds
out
mov
jo
enter
enter
or
mov
cld
stos
mov
or
cli
movsl
pop
mov
leave
into
fwait
cmp
negb
pop
ret
pop
leave
push
sub
es
cmp
jmp
sahf
lret
sbb
into
bound
sbb
jl
icebp
lcall
outsl
mov
insl
ficoml
xchg
bound
aas
cmpsb
je
popf
mov
sub
aas
in
sbb
cltd
pop
mov
sub
pop
cwtl
imul
cli
adc
push
add
jae
aas
es
push
mov
inc
sbb
push
lret
lea
fldl
scas
test
mov
dec
lock
sub
ljmp
push
ret
push
mov
out
mov
xor
or
or
push
arpl
sbb
add
or
xor
aas
lods
dec
stc
fnstenv
cmp
in
and
adc
mov
jne
mov
lcall
scas
insb
jae
pop
sub
jne
xchg
iret
out
cmp
sbb
jle,pn
cmpsb
add
jle
lock
xor
push
inc
stos
mov
sbb
mov
cli
jp
inc
xchg
jae
iret
sbb
lcall
cld
cmp
jmp
and
stc
fistl
mov
cmp
cli
dec
or
sub
icebp
xor
call
inc
jl
scas
hlt
sti
push
lcall
xor
std
cwtl
mulb
fsub
mov
mov
xchg
xchg
cmp
mov
cmp
pop
insb
out
loope
xchg
lcall
sbb
xor
popa
xor
das
scas
fcoml
jns
xchg
test
inc
ds
cmpsl
leave
imul
popl
add
push
pushl
add
jnp
icebp
and
pop
loop
int3
xor
fadd
sbb
pop
and
cmp
sub
ret
int
xor
ja
in
mov
pop
insl
aad
cmp
inc
mov
pop
adc
add
add
std
xchg
and
int3
scas
arpl
out
das
inc
xchg
pusha
or
push
cltd
jae
push
mov
push
scas
std
lret
jmp
xor
mov
fbld
fldl
push
jb
stos
sbb
insl
mov
fwait
shll
pop
aas
mov
sarb
lcall
adc
mov
cltd
inc
dec
dec
xchg
subb
and
popa
mov
loope
stos
pushf
pushl
stos
popa
jnp
subl
mov
sub
lea
iret
aad
sub
jmp
cli
mov
xchg
test
std
push
out
inc
xchg
push
decb
icebp
out
fists
mov
sub
and
loop
shll
fildl
mov
mov
dec
xor
std
mov
dec
xchg
gs
sahf
mov
testl
xchg
cmp
fnstcw
xchg
dec
xchg
and
stos
int
and
sti
or
cs
ret
call
xchg
mov
fs
je
out
outsl
or
jecxz
fnstenv
hlt
lcall
arpl
sahf
inc
mov
gs
jb
dec
lds
or
inc
jno
mov
scas
pop
dec
mov
rolb
iret
mull
ret
std
lock
adc
push
subb
nop
mov
lds
or
ljmp
sbb
shr
dec
mov
stos
dec
inc
mov
jo
scas
rorl
and
scas
lahf
dec
cmpsb
jns
inc
js
aas
cwtl
repnz
xor
mov
pop
mov
scas
test
loopne
imul
cmp
mov
adc
push
outsb
sub
lock
mov
mov
sbb
test
cmp
mov
je
mov
pushf
mov
loop
pop
dec
cmp
mov
or
xchg
jbe
push
shrl
or
mov
mov
xchg
into
mov
stos
popl
sub
jae
cmpsl
jge
scas
pop
insb
movsb
pop
mov
ret
xchg
pusha
xchg
movsl
pop
pop
xchg
popa
add
ljmp
jae,pn
fcoml
imul
imul
dec
cmp
test
xor
add
lods
and
ret
sbb
andl
or
pop
pop
scas
xor
insl
mov
test
mov
hlt
jg
cmp
fisttpl
je
es
dec
int3
inc
or
leave
cmpsb
lds
nop
inc
sub
test
mov
cwtl
adc
stos
sbb
jmp
pop
popf
orl
mov
stos
mov
into
pop
fbstp
es
sbb
cli
mov
mov
push
inc
out
push
test
imul
fcmovb
dec
mov
xchg
fwait
pop
rcll
sbb
pop
cld
cmp
pushw
arpl
cmpsl
cwtl
lea
faddl
out
stos
adc
aas
sti
and
outsl
repnz
mov
or
imul
outsl
dec
int
sbb
xor
scas
inc
daa
add
mov
sbbl
cld
lret
mov
lods
out
jl
inc
inc
adc
aad
or
adcl
jp
xor
fcomps
push
out
add
aas
mov
inc
push
sbb
insl
push
dec
stc
mov
dec
ljmp
clc
push
shr
push
out
jno
mov
shll
cmp
mov
cmc
xor
inc
imul
cmpsl
xchg
sub
pop
inc
xchg
add
push
in
ret
mov
xor
int
arpl
test
call
sahf
arpl
adc
jbe
lret
pop
inc
pop
fmul
popa
dec
sbb
inc
jbe
xor
add
outsl
rcrl
jnp
xchg
mov
inc
mov
iret
sahf
nop
push
pop
sbb
mov
and
shll
mov
rolb
lret
sbb
and
pop
push
pusha
sahf
test
ja
xchg
sar
push
xor
dec
mov
in
mov
mov
push
test
dec
fcompp
sbb
and
add
adc
lock
xchg
and
aam
mov
inc
push
and
sahf
pop
pop
and
es
jnp
push
insl
movsb
inc
adc
jo
dec
cmpsl
movsb
in
addr16
mov
fisttps
add
mov
dec
jl
pop
leave
cltd
and
aas
sbb
or
incb
mov
lcall
mov
jns
sub
mov
aas
inc
in
push
frstor
push
cmpl
sti
sbb
mov
sti
xchg
rcrb
xor
sbb
inc
sub
sub
cmp
sub
jo
jno
stc
pop
sub
in
add
aad
dec
cmc
push
add
shr
repnz
loopne
ret
gs
loopne
popa
mov
dec
rolb
mov
sbb
dec
xor
fnstsw
and
mov
dec
loop
fsubrs
sahf
adc
or
inc
adc
jb
jmp
mov
cwtl
xor
in
iret
pop
sub
push
in
cld
orb
cmpsl
fisubl
orb
rolb
xor
mov
movsl
inc
inc
lods
pop
pusha
lds
sub
ret
jecxz
insl
xchg
pop
xor
sbb
mov
dec
test
jae
mov
call
jb
pop
arpl
outsl
push
mov
stos
test
ret
insl
imul
ret
jg
xchg
out
loope
sub
sahf
push
xchg
sbb
rcrb
sarb
pop
mov
ljmpw
mov
inc
mov
in
outsb
cmpl
cmp
adc
push
sbb
shlb
inc
test
movsb
add
scas
mov
sbb
mov
fadds
je
shrl
movsl
cmp
outsb
in
dec
mov
cmc
in
stc
sbb
fisubl
xor
adc
and
sub
outsl
fistps
or
adc
aas
push
data16
cltd
and
add
cmp
mov
scas
mov
das
out
outsl
mov
dec
jg
sbb
sub
push
imul
mov
pusha
dec
hlt
push
adc
cltd
pushl
mov
push
dec
dec
mov
push
jp
mov
in
pop
fstl
daa
repnz
insl
mov
jnp
test
jecxz
xchg
xchg
lds
outsl
arpl
pop
jnp
push
sbb
outsl
sti
daa
wrmsr
and
outsb
push
push
mov
adc
jnp
pop
in
dec
in
add
js
ljmp
fimuls
pop
or
push
setne
mov
xor
int
xor
xchg
or
inc
and
mov
pushf
fdivl
imul
xor
adc
dec
jge
popf
loop
mov
and
je
push
loopne
push
mov
loop
sti
or
loope
imul
sahf
sti
aam
lea
mov
stos
xchg
das
lods
sbb
icebp
pop
pop
and
xchg
push
repz
enter
lret
pop
addr16
aam
xchg
inc
in
scas
push
testl
and
in
xchg
push
out
mov
dec
rcll
faddl
ffree
mov
cmpsb
cmp
xchg
jnp
and
add
inc
je
adc
mov
es
addr16
dec
cmp
stc
ret
dec
and
insl
int
inc
leave
lret
jp
cwtl
out
leave
and
dec
leave
push
test
ljmp
xchg
mov
les
inc
xchg
call
sbb
jnp
and
push
aaa
sbb
or
ror
in
pop
ljmp
lcall
xchg
mov
cmp
ja
push
add
mov
in
jl
jl
xor
cld
mov
jge
xchg
add
rcrb
push
insb
out
mov
add
mov
repnz
icebp
in
out
icebp
ljmp
cmp
pop
jecxz
sarb
jb
hlt
loope
xlat
je
push
adc
rcr
test
aad
xor
pop
inc
in
test
xorl
xchg
cli
shl
mov
testl
adc
sub
push
or
out
jecxz
push
jl
and
test
mul
push
lea
je
fwait
enter
ds
add
rcrb
in
test
mov
xor
out
jg
mov
mov
mov
ljmp
not
xor
lahf
data16
sti
and
insl
incb
xchg
stc
mov
shrb
jne
stos
cwtl
sub
push
scas
jg
sub
fs
add
xor
jbe
inc
fistpll
pop
mov
xor
xor
insb
mov
cltd
mov
jae
lea
loope
repz
cli
sub
pop
das
loope
mov
adc
stos
jge
sbb
ret
js
arpl
dec
les
cmc
pop
xchg
cmp
sti
mov
mov
jecxz
insl
mov
cmpsb
lret
and
cmp
mov
cmpsb
cmp
xor
adc
mov
sub
cmp
insb
mov
sub
iret
cmp
rorl
mov
movsl
jl
mov
mov
lock
pop
inc
mov
jg
sbb
shll
cmp
mov
cltd
xor
sbb
lea
jl
loop
add
call
jmp
dec
sbb
hlt
xchg
dec
mov
faddl
jbe
dec
incl
pop
in
inc
lret
nop
pop
jl
jae
aaa
jnp
test
dec
jne
push
ss
fstl
insl
jl
test
ret
mov
fdivl
jb
insl
mov
lcall
scas
mov
hlt
fs
sub
mov
scas
into
outsl
ret
test
dec
sbb
pop
mov
out
fiadds
loop
iret
jg
icebp
lcall
shl
test
jo
ficompl
sbb
lock
lcall
jg
adc
mov
push
in
loopne
divb
sbb
pop
lods
andb
or
or
ret
fimull
add
fwait
push
pop
fwait
mov
mov
fcmove
or
stos
mulb
jl
jge
inc
js
pop
int3
dec
push
mov
stos
nop
mov
jb
pop
cmp
test
cs
movsb
jmp
xchg
cmp
cli
push
addr16
add
push
or
andb
data16
mov
cmc
ja
cmp
mov
data16
jno
mov
in
subl
jmp
stos
fdiv
xchg
out
push
movsb
push
sbb
jne
enter
test
sbb
cmp
sub
inc
dec
sbb
or
dec
sti
push
jge
jno
inc
loopne
cmpsl
addr16
xchg
jb
mov
fs
xor
bound
adc
pushf
cmp
sub
push
mov
incb
pop
hlt
sar
aad
and
stc
pop
fs
mov
rcrl
add
sbb
aam
ss
movsb
lret
sbb
popa
mov
or
sbb
sub
in
outsl
dec
les
jnp
in
push
pop
push
dec
scas
pop
test
mov
push
jne
add
loop
out
movsb
mov
mov
mov
and
mov
jnp
loopne
imul
dec
sub
popa
cmpb
data16
cmp
dec
push
repz
imull
push
pop
push
mov
mov
jmp
imul
or
iret
ss
jl
adc
jne
shlb
daa
push
xchg
mov
sahf
sbb
sar
cmp
sub
dec
fs
arpl
in
in
fisubl
sbb
xchg
pop
adc
divl
lds
and
aas
jl
cmp
cltd
mov
popa
cmp
fcoms
mov
push
imul
movsl
sbb
int3
inc
mov
mov
mov
repz
test
push
aam
sti
mov
add
popf
daa
push
lods
cmp
inc
adc
cmp
aam
je
push
mov
mov
pcmpgtw
imul
sub
or
sbb
mov
mov
ss
sbb
xor
mov
leave
out
fs
mov
pop
push
movsl
lock
enter
cmpsb
push
or
cmp
lcall
jae
aad
lret
dec
mov
iret
or
test
xchg
mov
cmp
lret
mov
xlat
pop
mov
pop
ljmp
sub
rcrb
ljmp
aam
xchg
pop
sub
in
mov
aam
xchg
rcl
sub
sbbb
test
xchg
mov
push
das
in
pop
aaa
push
and
or
and
jae
push
cmp
mov
test
scas
xlat
in
adc
rclb
lods
jle
xor
jle
push
sahf
or
dec
lods
inc
arpl
xchg
xor
sbbl
cltd
push
inc
daa
xchg
pop
bound
test
inc
ja
xchg
cmpsl
into
ss
ret
lock
sub
and
mov
xchg
fistpll
add
fsubp
xlat
mov
je
or
mov
pop
orb
pop
or
loopne
sub
stc
cmpsb
ficoml
xor
je
js
pop
cmp
test
loop
orl
inc
mov
dec
dec
inc
pushf
jmp
sti
js
mov
leave
dec
loop
jne
std
jg
sbb
repnz
fnsetpm(287
es
daa
inc
rcl
fcompl
or
jae
scas
mov
xor
mov
and
add
sahf
inc
aaa
bnd
frstor
xchg
and
jae
dec
pop
push
cmpsl
xchg
mov
xor
test
xchg
and
or
xor
lds
xchg
call
xchg
popf
xor
xchg
push
std
fcmovnu
xor
out
repz
or
pop
lods
lahf
xor
sbb
pop
jl
and
inc
mov
sub
cmpsb
mov
pusha
clc
lea
cmp
mov
pop
stos
bound
and
and
cli
int3
sahf
push
xor
scas
xchg
sbb
leave
jmp
shll
mov
cwtl
inc
rcrl
and
je
std
jge
push
rclb
aad
nop
jne
jg
push
or
enter
jbe
lret
loop
faddl
jecxz
cmpsl
xlat
cmp
or
cli
pusha
aaa
jecxz
scas
jp
fisttpl
pop
lcall
jns
rcr
insb
stos
mov
and
sbb
rcrb
mov
lret
and
pop
mov
xchg
add
cmc
subb
fdivp
scas
test
insl
adc
lcall
stc
push
dec
mov
outsb
pop
iret
jge
scas
inc
out
pop
bnd
popf
or
inc
lds
mov
dec
sbb
inc
in
out
pop
add
imul
push
pop
clc
daa
stos
mov
adc
je
cld
popa
jnp
push
stos
addr16
sbb
sbb
lcall
add
pop
adc
js
idivb
and
addr16
pop
jne
adc
shlb
es
push
and
add
inc
add
rclb
dec
or
mov
imul
xor
jmp
je
inc
leave
mov
push
mov
out
cmpsb
xchg
daa
iret
popf
inc
adc
mov
mov
lcall
cmp
sbb
cmpsl
repz
jp
in
xchg
or
sbb
mov
mov
out
out
aad
mov
jnp
cmp
in
ljmp
leave
dec
mov
mov
scas
mov
jmp
mov
arpl
or
pop
xchg
dec
mov
shll
nop
mov
jmp
and
sbb
xchg
dec
inc
push
pushf
mov
fmul
mov
bound
scas
jb
in
mov
in
or
dec
ror
push
out
jno
xlat
mov
mov
test
dec
in
shlb
mov
or
fisttps
hlt
imul
hlt
adc
sub
jge
in
pop
enter
fldenv
cld
push
xchg
ja
insb
fs
jecxz
jne
mov
out
xchg
mov
mov
mov
dec
push
xchg
in
add
xchg
and
jg
xor
scas
fs
xchg
leave
jo
pop
sbbb
pop
push
sub
jmp
mov
pop
add
out
mov
and
loope
mov
int3
rcr
jo
mov
je
jg
jge
outsl
nop
lds
lcall
in
call
jnp
enter
pop
xchg
in
clc
test
cs
add
mov
sbb
xor
or
je
jnp
das
leave
test
or
cmp
pop
dec
mov
push
je
mov
inc
mov
aaa
cld
repz
cwtl
popf
cmp
lock
cmp
shrb
pop
orl
rcrl
les
lret
sub
xchg
shll
pop
popf
test
cmp
jge
or
adc
ljmp
test
pusha
dec
xchg
lret
cmp
jne
inc
sbb
mov
int
dec
sub
mov
lahf
fs
pop
test
sbb
daa
add
mov
imul
int3
ljmp
fs
jo
mov
and
cmp
mov
adc
stos
inc
aas
mov
icebp
dec
bound
leave
adc
jle
fbstp
je
adc
push
imull
repnz
popa
pop
sbb
cmp
loopne
mov
fs
test
or
add
cmpsl
mov
out
jp
and
loopne
push
jecxz
pop
mov
sbb
inc
testl
outsl
add
pop
bound
mov
adc
rorl
imul
dec
jmp
jmp
adc
cmp
jmp
adc
pop
imul
daa
shlb
out
or
jl
nop
cmp
mov
mov
and
or
not
and
sub
dec
inc
lds
mov
inc
in
movsl
js
test
mov
xlat
or
divb
xchg
adc
adc
fwait
insb
fdiv
push
ret
inc
xchg
pop
add
and
sub
outsl
adc
dec
rcll
jns
sub
test
and
mov
test
shlb
mov
ljmp
push
adc
inc
loope
sub
scas
daa
ss
mov
sbb
dec
sbb
mov
fnstcw
fs
pop
std
adc
cmc
aad
not
lcall
push
mov
insb
or
push
mov
jp
adc
mov
sub
fldl
pop
rorb
push
mov
xor
adc
sbb
add
cwtl
cmp
push
push
jne
or
pushf
inc
jns
mov
xchg
cmp
add
mov
loop
ret
fidivs
out
mov
out
pop
lock
fnstenv
fimuls
shll
add
mov
imul
loop
xchg
fsub
mov
mov
and
outsl
fwait
sub
push
fidivs
inc
xor
sbb
adc
jle
xchg
inc
loopne
test
add
and
mov
xchg
and
sub
in
pop
jl
xor
sbbb
aas
out
in
imul
in
inc
add
sub
push
lret
mov
out
movsl
pop
das
xchg
pop
cmp
cltd
sbb
inc
lods
mov
mov
adc
test
lock
int
fiaddl
cmpsb
cmp
push
jbe
add
das
sarl
cmpsb
movsb
stc
aas
pop
int
es
pop
fucomp
iret
adc
aad
cld
sbb
nop
push
stos
fmull
addl
cld
fs
push
inc
or
and
push
scas
fiadds
insl
jno
mov
sbb
out
cwtl
adc
iret
dec
das
enter
repz
mov
lahf
add
iret
push
sahf
push
push
repz
movb
pop
jns
lock
mov
es
cmc
popf
push
in
pushf
adc
fstpt
sbb
dec
lods
mov
jae
push
xorb
sbb
mov
orb
outsl
shr
movsl
mull
dec
cmpsb
inc
aaa
xchg
mov
testl
test
jne
popf
inc
sbb
dec
insb
ja
mov
je
cmp
insl
js
lahf
sarb
fxch
gs
mov
or
loop
test
mov
fisubrs
test
mov
sar
aas
pop
xchg
aas
mov
push
cmc
pop
xchg
data16
dec
cld
jb
pop
ficoms
mov
inc
cmp
jo
push
jnp
and
and
jecxz
sub
xlat
jb
popf
jge
into
mov
fs
stos
insl
pop
daa
out
out
mov
mov
sub
loop
in
inc
mov
adcb
adc
lea
ret
jmp
add
pop
aaa
jae
mov
pop
xor
lret
jp
sub
aas
dec
ds
lahf
push
xor
or
out
fisubs
cmpsl
decl
mov
scas
inc
ss
stos
or
pop
xchg
and
bound
out
mov
and
insb
sbb
mov
add
mov
and
inc
cmpsl
sub
mov
rcrl
dec
xor
cmc
cmp
cmc
mov
push
cld
ds
fs
es
lock
mov
leave
fidivl
or
arpl
inc
pop
sbb
pop
repz
popf
arpl
je
in
mov
cmp
xor
push
or
cltd
cmc
and
lcall
jmp
inc
outsl
or
mov
xchg
ja
lods
sbb
mov
sti
imull
xor
movsl
outsl
xor
push
or
inc
iret
xorb
testl
or
sub
sub
pop
push
mov
jns
mov
sti
jbe
lret
mov
and
jmp
out
lahf
repnz
xor
jle
xchg
fcoml
ffree
mov
pop
inc
imul
cs
dec
arpl
xchg
xchg
xor
pop
andl
in
out
dec
pop
ficomps
lcall
stc
jl
outsb
or
movsl
ss
sub
pop
aad
imul
sarl
xchg
jmp
inc
clc
inc
int
loope
mov
fadds
xorl
jnp
repnz
sub
jg
pushf
mov
inc
adc
sbb
sub
xchg
lahf
testb
insl
push
in
jo
test
repnz
mov
jp
xor
jns
test
stos
mov
xchg
daa
out
xchg
fs
sub
sarb
imul
aam
jecxz
popa
cmc
repnz
js
sub
adc
xchg
push
shll
xchg
push
das
ds
jmp
sarb
fwait
push
push
mov
hlt
cmpl
js
mov
sub
push
mov
in
sti
lret
out
fcomip
out
out
subb
fwait
sbb
xchg
je
mov
rclb
add
scas
xor
mov
xor
and
xchg
fdivs
xchg
push
or
adc
add
dec
mov
dec
jb
mov
ja
fldl
fildll
or
dec
mov
leave
btr
mov
cmc
dec
sub
addr16
or
xchg
scas
cmp
or
jnp
inc
inc
lods
sbb
lods
int3
mov
lahf
movsl
push
iret
movsb
mov
pop
mov
into
ja
sub
loop
push
mov
adc
aam
and
xor
ret
out
cmpsb
ja
pop
inc
daa
mov
rcrb
and
hlt
dec
fsubl
cmp
nop
inc
popf
pusha
adc
push
fidivs
and
icebp
ret
fwait
mov
cmp
adc
jo
push
mov
shll
sahf
mov
mov
mov
movsb
adc
fistl
and
mov
jnp
adc
add
andl
pop
adc
or
fs
add
inc
sub
sti
jge
hlt
push
aad
pop
adc
cmp
fwait
int
dec
int3
in
fs
jns
lret
xchg
jge
pop
xor
inc
mov
popf
push
outsb
or
jge
push
jae
jbe
fdivs
and
in
lods
rorl
xchg
jg
testl
hlt
pop
jb
outsb
push
shlb
jp
int3
fbstp
mov
fsubl
ficoml
repz
jle
outsl
pop
jle
insb
das
push
nop
in
iret
roll
xchg
inc
add
addb
mov
daa
dec
pop
xor
aad
cmpsb
in
loop
es
xor
push
dec
or
rclb
add
fwait
mov
push
cltd
and
cmp
jecxz
mov
dec
sahf
push
fwait
imul
jecxz
pop
push
lods
lea
enter
inc
push
out
and
out
stc
test
mov
ficomps
rorb
dec
dec
lret
mov
test
cmp
inc
inc
xchg
lret
cmp
or
xlat
inc
jne
or
aad
cmp
lods
dec
aad
icebp
test
adc
jbe
js
insb
cwtl
jne
xor
xor
mov
and
into
sbb
jecxz
sub
lods
repz
mov
add
xor
sbb
xchg
decl
int3
pop
push
popl
je
bound
int3
cltd
loope
sub
jo
and
nop
popl
sbb
and
jmp
sahf
push
xchg
call
sbb
je
sub
iret
add
xorl
xor
fldt
clc
test
loope
add
mov
jmp
xlat
les
out
arpl
fdivrs
dec
xchg
jns
imul
adc
aaa
fsubr
pop
mov
stos
fnstsw
sahf
icebp
push
lcall
in
xchg
out
loop
pusha
sub
push
and
rolb
xchg
leave
cltd
out
cmp
or
mov
test
and
cmp
ret
cmpsb
aad
push
sti
div
pop
xchg
sbbb
mov
shll
sub
cmp
cmc
in
add
cmp
scas
iret
mov
outsb
jmp
push
shll
cltd
rcll
mov
push
loopne
mov
pushf
cmp
aaa
insl
shrl
fidivs
and
mov
icebp
addl
mov
loope
cltd
cs
cld
inc
xor
xor
jbe
pop
sub
sub
xchg
push
mov
into
and
shll
mov
ja
gs
push
push
sub
jl
sub
and
test
nop
orb
jb
fnstcw
mov
popf
and
or
inc
cwtl
push
int
mov
call
ficoms
hlt
mov
add
lret
sub
sbb
in
add
and
mov
mov
inc
xlat
inc
adc
adc
add
pop
xlat
dec
stos
in
adc
sbb
pop
mov
cmp
loop
mov
cmp
dec
dec
js
in
sbb
pop
xchg
mov
scas
sub
fiadds
jp
out
mov
mov
mov
pop
push
or
lds
in
sbb
dec
xchg
mov
stc
nop
insb
das
leave
enter
sub
cmp
jmp
popf
repz
aam
lods
fiaddl
cli
divl
aam
pop
or
push
enter
lods
jno
lock
adc
sub
or
xchg
or
in
xor
lods
orl
or
mov
fucomp
iret
aaa
repz
popa
stos
or
fsts
stos
lcall
rolb
pop
jge
pop
pop
pop
fsub
dec
sub
enter
sub
and
lcall
inc
test
jbe
cmp
mov
btc
mov
and
dec
in
xchg
nop
add
jl
add
vandps
fidivl
mov
ja
pop
mov
sub
rclb
es
addl
rcl
cmp
ja
or
jno
aam
dec
jecxz
shl
adcl
test
sti
jmp
adc
adc
pop
je
jbe
frstpm(287
pop
cs
lahf
dec
cmp
and
fldenv
cwtl
lahf
cwtl
inc
cmp
mov
int3
adc
or
inc
idivb
data16
les
jge
ja
lcall
sub
div
cltd
mov
cld
scas
add
addb
sti
xor
mov
rclb
sbb
aad
repnz
mov
insl
pop
inc
imul
jge
stc
test
aas
jne
adc
cmpsb
mov
or
cltd
nop
sbb
mov
dec
js
nop
adc
shl
mov
and
add
pusha
cs
adcb
sub
jns
hlt
and
call
jg
insb
inc
ret
clc
into
cwtl
fs
inc
cmp
insb
dec
push
adc
pop
mov
xchg
imull
rcl
test
xor
nop
js
movsb
adc
pop
fucom
imul
cmp
in
outsl
out
jle
mov
loope
xchg
cmp
cmpb
scas
xor
fmuls
subb
push
test
rcr
out
into
scas
rorb
stos
inc
roll
lods
sub
dec
dec
sbb
das
ret
testb
in
pop
imul
sub
ja
in
fdivl
cmp
sub
outsb
data16
mov
adc
sub
sub
in
aad
out
ret
and
pop
cmc
enter
inc
divb
pop
mov
cmp
rclb
xlat
cmp
inc
popf
mov
popa
mov
int3
in
jne
loopne
js
mov
bound
add
fsub
leave
pop
or
es
popf
mov
dec
cmpsb
add
mov
ret
vmovapd
jno
pop
and
push
or
inc
cmp
xor
push
ret
xor
mov
sub
mov
aad
jne
into
mov
fidivs
fistl
test
mov
sbb
psubusw
adc
jo
or
jecxz
aaa
insl
jmp
mov
fadds
fs
xor
stos
dec
jecxz
or
aas
lret
sbb
std
jb
sbb
mov
cltd
in
fadds
xchg
stc
and
addl
lods
mov
mov
or
xchg
adc
pop
push
ljmp
mov
xchg
lds
test
push
xor
push
loope
into
inc
insl
mov
jne
clc
and
stos
push
push
ja,pn
sbbb
rcrb
pop
mov
push
fsubs
xchg
int3
scas
lods
in
adc
jns
lods
shll
das
mov
lock
mov
adc
lcall
gs
loop
test
ret
fadd
enter
fs
int3
adc
mov
inc
and
push
test
jb
scas
mov
mov
mov
sbb
cltd
inc
or
xlat
clc
xchg
insb
loope
xchg
cmpsb
repz
mov
jns
mov
and
or
lcall
fs
hlt
mov
fidivl
test
push
out
addl
lret
std
jne
inc
test
xor
xchg
inc
fadds
idivb
dec
scas
push
and
inc
jno
pop
xor
inc
shl
repnz
push
fldenv
inc
ja
sahf
jb
call
iret
adc
ds
arpl
cmc
dec
shll
call
inc
and
in
or
jmp
icebp
stc
cli
out
mov
sub
insl
adc
inc
pop
ret
pushf
stos
icebp
sbb
mov
xchg
add
adc
xor
orb
bound
lahf
pop
nop
popa
stc
addr16
push
jno
xor
push
out
dec
lods
sbb
lcall
mul
cmpsl
xor
dec
inc
xor
movsl
cmp
lahf
push
aam
cwtl
sub
cmp
pop
sbb
stc
adc
popf
xor
lcall
stos
enter
jmp
push
or
imul
sbb
inc
push
pop
call
aas
ret
fcmovbe
fxtract
mov
mov
mov
fldcw
xchg
lock
mov
xchg
int3
jp
inc
sahf
sbb
xor
mov
xor
sbb
arpl
shl
or
les
jg
je
adc
push
notl
jmp
adc
mov
loopne
xchg
or
loope
outsb
jo
sti
dec
mov
mov
pop
in
pop
jg
sub
or
add
mov
pop
cmpsl
mov
je
mov
xchg
lds
fimull
fcomps
mov
xchg
xor
outsb
gs
inc
cmp
roll
test
dec
push
stc
push
mov
bound
fcomip
xlat
sbb
mov
and
and
push
and
cmpsb
jmp
lods
sahf
cmp
fnsave
mov
jg
loopne
jo
sub
cmp
insl
movsb
jae
hlt
enter
sub
insl
inc
cmpsb
outsb
mov
pushf
mov
lods
nop
mov
mov
xchg
pusha
cmp
push
dec
sbbb
data16
mov
mov
cmp
sahf
mov
dec
fdiv
jg
pop
hlt
and
push
jnp
ret
push
enter
pop
mov
cmp
sbb
mov
jmp
cld
jecxz
testl
push
hlt
jmp
jo
adc
sahf
xchg
das
stos
imul
outsl
jne
rorb
sub
dec
fdivl
mov
sub
aam
jno
mov
fldl
mov
sbb
lods
jb
xchg
adc
loope
leave
pusha
mov
add
into
mov
arpl
lahf
sbb
shrl
std
lods
cmp
pop
adc
xchg
mov
lds
bnd
inc
and
adc
test
out
dec
adc
add
sahf
ljmp
inc
test
fsubrs
jl
mov
iret
and
cmp
ds
ja
jmp
add
inc
hlt
inc
sbb
rcr
scas
jbe
or
mov
or
jg
and
xchg
inc
jecxz
call
jne
out
mov
gs
fdivrs
inc
push
jmp
push
movsb
fcmovnu
sub
inc
or
out
pop
lods
push
loop
adc
das
xor
add
enter
stos
into
mov
pop
ja
or
pushf
mov
xor
ds
repz
add
lods
sbb
add
daa
test
ljmp
sbbl
jns
into
loope
int
jg
iret
jl
dec
sub
lcall
in
insb
nop
subb
mov
out
sub
hlt
push
ja
xor
adc
shrb
adcl
sbb
les
js
pop
or
push
dec
xor
sar
inc
imul
lret
sub
rorl
lret
dec
sahf
mov
mov
or
ja
test
pop
or
dec
notl
dec
pop
jae
rorb
cmpsl
or
jnp
scas
cmp
and
aam
dec
inc
xchg
pusha
adc
loopne
or
xchg
and
aam
movsl
test
into
xchg
add
jecxz
test
or
shrl
stc
mov
dec
dec
mov
pop
imul
negb
mov
and
stc
push
jle
lods
shr
mov
pop
imul
fidivl
pop
jecxz
jle
pop
sub
pop
rcrb
cmc
mov
out
enter
or
adc
or
outsb
imul
lret
mov
sub
pop
cmp
add
jecxz
das
pop
xor
sub
pop
lods
xor
lea
push
test
popf
lcall
int
lret
push
cmp
cltd
cli
inc
aam
mov
inc
or
in
inc
mov
push
mov
fistpll
mov
sub
mov
lea
push
loopne
xchg
sbb
dec
xchg
adc
inc
pop
xchg
mov
jno
std
out
push
pusha
hlt
inc
pop
sarb
lds
push
stc
jge
adc
je
jle
cli
leave
fwait
repnz
mov
add
cmc
add
xor
inc
xchg
sub
lods
sub
rorb
or
in
lahf
inc
push
aas
jg
fs
int
add
add
or
mov
test
inc
icebp
cmp
test
dec
mov
imul
rolb
shlb
ljmp
sub
mov
sbb
pop
lret
jp
xor
sub
or
sbb
pushl
inc
out
andb
add
pop
arpl
jmp
data16
xchg
neg
add
je
inc
pop
vpmaddwd
cmc
pop
add
test
cltd
pop
es
int
xchg
pop
adc
add
test
enter
adc
adc
mov
mov
jbe
fcmovu
push
je
jae
mov
das
loopne
push
pop
add
les
daa
ret
sarl
sub
ret
loopne
mov
add
push
aaa
or
mov
mov
popf
mov
sbb
push
pop
ret
cwtl
sti
mov
lcall
fsubrs
inc
adc
cmpsl
sbb
inc
sub
repnz
imul
pop
imul
pop
pop
lods
mov
ret
sbb
ss
in
fcmovnb
push
xor
scas
xchg
xchg
arpl
push
inc
pop
outsb
dec
mov
sub
jb
movsb
out
mov
hlt
sbb
xchg
movl
sbb
imul
jge
push
push
ja
in
bound
xor
loope
mov
hlt
jns
hlt
mov
jecxz
cmpsb
cli
int3
push
je
bound
dec
scas
je
cltd
in
pop
adc
bound
cmp
and
jne
mov
out
adc
inc
aad
xor
adc
arpl
adc
xor
les
out
rolb
dec
out
push
and
pop
mov
push
mov
xlat
ljmp
mov
pop
mov
iret
dec
imul
sbb
mov
rorb
xchg
mov
loope
sbb
mov
insl
nop
out
in
sti
in
jb
push
subb
lods
sti
mov
iret
daa
cs
mov
lret
jns
cmp
enter
mov
stc
pop
ss
push
jns
pop
and
lcall
jl
in
test
std
stos
push
jge
jbe
popf
adc
scas
cli
fisubrs
mov
addr16
mov
xor
in
sarl
les
sbb
pop
test
pushf
in
mov
lods
and
insl
aad
inc
jmp
pop
lds
pushf
rcrl
enter
dec
das
or
jbe
mov
jno
int3
stos
imulb
add
addl
xor
xor
push
sub
lods
xchg
xlat
xchg
hlt
imul
dec
xchg
dec
mov
mov
pushf
or
lret
cli
push
sbb
mov
sub
in
out
dec
mov
sbb
xchg
in
loopne
push
adc
xlat
lcall
jecxz
in
es
sbb
mov
fisttpl
in
out
icebp
mov
pcmpeqw
pop
push
xchg
pushf
mov
out
inc
int
orb
or
mov
je
sti
cmp
pop
repnz
imul
xchg
sbb
adc
ds
xchg
adc
xchg
test
popa
js
ret
gs
push
inc
sub
sti
aam
cmp
cmp
int
sbb
pop
lret
icebp
aas
sti
xchg
pop
pop
mov
jg
push
xor
ljmp
and
dec
ss
addr16
cltd
out
pop
outsb
sub
or
sub
or
mov
inc
cmpsl
cld
ljmp
inc
imull
inc
ljmp
and
sbb
fdivrs
mov
pop
or
outsb
pop
cwtl
sarl
jno
push
mov
jo
iret
push
subb
movsb
dec
inc
jp
jmp
push
cmpsb
add
mov
ds
mov
sub
mov
scas
movsl
and
xor
filds
inc
sub
or
fmull
push
mov
mov
cmp
ret
inc
mov
dec
rcll
out
ja
mov
call
add
jge
shrb
add
repnz
mov
cmp
daa
leave
repnz
and
mov
jb
or
in
sub
faddp
jbe
xchg
dec
pop
add
cmpsl
dec
mov
jge
add
pop
loop
in
jo
xchg
ret
jbe
sti
sti
rcrb
mov
ljmp
insb
mov
mov
int3
imul
xchg
enter
stos
and
pop
lods
test
mov
out
push
outsl
sarb
inc
push
test
or
dec
adc
jae
cmp
lock
cwtl
xchg
in
mov
pop
sbb
loope
xchg
mov
fcmovnb
adc
jp
lret
das
sub
push
mov
movsl
test
inc
out
loope
push
sbb
jno
es
cmp
cmp
jno
pop
sub
xor
adc
sub
dec
xchg
scas
xor
out
mov
cmp
adc
or
add
inc
out
adc
or
orl
lret
mov
fisubrs
cmp
lcall
cld
cmp
aam
xor
xor
test
iret
mov
adc
cld
or
add
pop
xor
test
and
push
cwtl
and
adc
lahf
sub
cs
iret
mov
stos
add
mov
testl
push
mov
hlt
mov
insl
test
mov
jecxz
cli
jo
data16
iret
cmp
shl
insb
cli
sbb
daa
push
ds
xor
bound
mov
jmp
addr16
sbbb
adc
mov
jnp
or
dec
stc
sbb
lods
jne
pop
push
movsl
mov
inc
pop
sarl
fldt
mov
pop
cmc
xor
mov
dec
sub
sub
jae
clc
pop
or
std
dec
fnsave
lods
test
daa
stc
stos
jp
loope
dec
inc
cmp
mov
push
lret
adc
jecxz
cmp
arpl
push
arpl
cmp
mov
mov
push
icebp
je
add
test
imul
flds
lock
sbb
lods
xchg
ss
shl
scas
pushf
js
sub
jmp
jns
jmp
jge
cmp
and
add
xchg
cmp
ret
inc
add
cmpsb
in
dec
shlb
add
cmpsl
ret
insb
pop
cmp
push
cmp
sub
ret
mov
mov
cmp
push
mov
and
cmpl
lods
push
movsb
sbb
loopne
addr16
push
call
loopw
xchg
pop
adc
movsb
push
jle
shl
xchg
xorb
mov
not
xor
push
jl
xlat
ret
nop
dec
inc
addb
clc
repz
ds
mov
clc
sub
pop
jae
sbb
push
jge
mov
cmp
adc
rcll
xchg
jo
push
bound
fnstsw
or
loope
pop
mov
inc
sbb
fists
xor
dec
out
shr
imul
sub
mov
dec
lea
rcrl
cs
ret
arpl
pop
fsubr
fbld
hlt
divl
mov
enter
inc
mov
mull
in
adc
jge
mov
pusha
loope
pop
dec
fsubrp
mov
loope
cli
mov
sub
and
data16
xchg
cmp
cmp
lahf
popf
push
daa
cmp
xor
push
sarl
pusha
cmpsl
mov
clc
sbb
leave
add
sarl
mov
cmp
icebp
and
mov
dec
dec
inc
xor
xchg
inc
inc
sahf
sbb
and
jl
and
cmpsb
jmp
dec
dec
jmp
mov
mov
mov
lods
jnp
std
es
movsl
cmp
cmp
nop
xchg
mov
inc
in
mov
jae
repz
stc
xor
and
jne
xor
in
or
add
lods
mulb
in
imull
cs
push
fidivl
cmp
and
push
sbb
cmc
inc
into
push
cmp
out
sub
jnp
lock
lock
lock
out
push
cmp
dec
jno
dec
and
lcall
imulb
pop
jbe
jo
es
lea
jl
pop
pop
sti
cmpsl
mov
imul
arpl
loope
mov
inc
cmp
pop
test
pop
push
out
iret
adc
pop
shufps
xor
popa
push
xor
push
mov
mov
into
sbb
jne
and
and
roll
std
pop
cmp
lock
xchg
rcll
loop
sahf
nop
and
jle
inc
dec
lcallw
jl
pop
cmp
jg
sub
idivl
les
push
dec
js
pusha
xchg
shll
inc
bound
add
and
push
and
fs
jg
gs
sarb
jo
ror
xor
pusha
mov
mov
mov
pop
mov
cmp
sbb
inc
dec
cmp
mov
cmp
inc
push
ret
test
jecxz
jecxz
xchg
testb
jg
dec
aaa
stc
mov
and
sbb
into
out
pop
call
insl
rclb
jl
jb
cmp
dec
sbb
add
in
inc
pop
scas
or
dec
imul
mov
popf
xor
mov
inc
sbb
push
mov
sbb
mov
inc
outsl
jne
jnp
adc
sbb
outsl
ss
fisubrl
adc
js
xor
xchg
fisttps
cwtl
sbb
mov
in
xchg
popf
pop
out
pop
fnsave
jo
sbb
data16
popa
and
cmp
les
movsb
stos
cld
jno
mov
scas
sbb
dec
movsb
mov
mov
push
mov
dec
nop
jp
lea
add
lods
push
scas
ds
adc
in
leave
test
sbb
mov
leave
push
std
movsl
push
cs
mov
mov
in
cmp
push
repz
add
aas
das
mov
pop
xlat
out
cmp
push
or
cmp
les
pop
mov
and
cmp
sarl
in
mov
ficomps
jbe
pop
cmp
lods
add
adc
fwait
lea
xor
les
repz
jg
mov
xor
add
aad
fnsave
in
jnp
sub
test
fiaddl
cmpb
outsl
pop
dec
stos
add
xchg
sub
movsl
arpl
in
out
andb
cmp
iret
out
leave
icebp
outsl
or
sahf
lock
in
popf
hlt
int
xor
lahf
sbb
rolb
lret
add
rclb
aad
inc
int
repz
xor
aam
mov
jmp
ficompl
das
pop
dec
out
mov
es
data16
insb
sub
ja
xchg
push
fdivs
xchg
iret
pop
lods
pushf
adc
dec
sbb
inc
sahf
insb
sbb
mov
lds
cmp
addr16
fldl2t
rcrl
xchg
movsl
mov
andb
xor
dec
cld
xchg
cmpsb
ja
rclb
stos
int3
negb
out
fwait
ret
insb
cmp
jecxz
mov
adc
out
or
mov
cmp
pop
adc
loope
repz
dec
ljmp
lret
push
js
data16
lods
inc
into
dec
and
cmp
and
jl
adc
shrb
lret
jl
xchg
les
cmpsl
loope
push
adc
jp
and
or
or
fst
inc
arpl
sbb
or
popa
js
push
jno
cmc
dec
sqrtps
scas
hlt
adc
dec
jno
shl
sub
aaa
add
insb
out
mov
dec
or
rol
push
arpl
and
cmp
shlb
imull
arpl
mov
jns
adc
jno
push
int3
out
sbb
mov
cmp
xor
xor
sub
push
cld
mov
imul
adc
hlt
popl
inc
cltd
sbb
arpl
inc
jbe
mov
inc
nop
cmc
dec
outsl
xor
and
mov
movsl
loope
sahf
and
mov
dec
inc
fnsave
adc
fisttps
lcall
insl
adc
xorl
std
sbb
cmp
mov
push
mov
ljmp
push
test
cmpsl
mov
repz
add
push
pop
es
dec
test
in
push
insl
fldz
in
jge
jnp
xor
aas
cli
push
push
mov
mov
aas
sbb
sarl
ja
pop
jl
mov
mov
xor
iret
mov
jl
add
test
cwtl
xor
pop
adc
insb
push
js
inc
or
in
fildl
test
dec
scas
daa
mov
movsl
mov
push
add
inc
icebp
mov
out
jnp
ret
in
pusha
imul
lret
loop
or
jle
add
fnstenv
cwtl
fwait
add
xor
inc
jae
jb
outsb
je
pusha
loope
sahf
jle
xlat
lods
cld
fwait
mov
shlb
cli
cmp
aad
mov
pop
lret
cmp
dec
cmpsl
mov
testl
lcall
xor
test
jo
push
mov
sub
pop
fsts
add
sub
and
nop
std
movsl
mov
sub
xor
inc
fstpl
xor
jmp
push
sbb
push
lret
movsb
xchg
mov
adc
imull
mov
cmp
repnz
lret
cwtl
in
cmp
or
movsl
std
in
hlt
pop
dec
pop
mov
xchg
inc
jbe
cmc
or
pusha
push
addr16
push
cmpsb
shlb
sub
inc
hlt
arpl
daa
test
imul
jne
xor
jb
das
pop
insl
mov
mov
jnp
popa
xchg
test
and
bound
and
jnp
lcall
pushf
pop
inc
dec
into
xchg
jno
jge
push
xchg
ds
mov
xor
sbb
jecxz
repnz
dec
inc
add
call
push
push
adc
jbe
inc
out
mov
sub
lods
stos
aas
adc
mov
dec
rorb
repz
push
dec
loope
pushf
int3
aam
adc
loopne
and
and
sbb
jmp
movsl
sbb
jecxz
std
scas
sub
push
jo
push
sub
sarb
fs
sbb
ds
mov
test
push
lcall
xchg
test
xor
push
loope
dec
pushf
int3
mulb
pop
js
cli
adc
push
jl
pop
mov
es
lret
cmp
outsl
aam
je
in
mov
cmc
and
inc
dec
mov
ss
xchg
push
pop
in
das
mov
mov
setp
sahf
lea
test
cld
xchg
out
push
shl
xchg
push
dec
jecxz
cmp
int3
dec
cs
in
mov
repz
push
pop
sub
shlb
push
call
sti
ja
ljmp
fwait
sub
push
push
fisttpll
adcb
xchg
lret
jae
pop
pop
andl
pop
pop
mov
jp
mull
sahf
sbb
push
out
rcrl
in
popa
incl
out
movsb
xor
mov
pusha
pusha
mov
inc
or
inc
push
stc
lcall
inc
xchg
stc
fidivrs
test
fsubl
iret
aaa
sub
in
adc
push
stc
data16
mov
xor
push
mov
hlt
loope
push
mov
sbb
sub
mov
and
adc
mov
lcall
inc
and
pop
js
cltd
dec
cmp
push
mov
sbb
fsubrl
pop
or
insl
mov
andnps
mov
sar
lds
std
mov
shrb
dec
xlat
cmp
mov
inc
test
lock
jp
out
xor
ret
adc
mov
popa
clc
xor
inc
jnp
mov
add
inc
add
adc
mov
push
xor
push
mov
js
leave
subb
leave
push
loope
lds
fisubrs
cs
cmp
xchg
lock
jno
and
loop
into
cmp
popf
mov
xor
fmull
movsb
add
add
out
xor
push
push
pop
push
pop
lcall
std
xchg
or
ss
xchg
and
mov
jno
and
push
push
push
add
cmp
mov
mov
xchg
inc
stos
push
pop
dec
test
int
imul
xor
ja
xor
orb
push
xchg
add
pop
roll
call
adc
dec
xchg
vmovsd
mov
cmpsb
mov
xor
sahf
push
aaa
in
inc
mov
pop
ja
dec
pusha
mov
loop
in
iret
xchg
popa
imul
add
xchg
inc
mov
fldt
in
sbb
sbb
dec
push
mov
js
sub
dec
bound
push
mov
dec
dec
and
push
mov
sbb
mov
xor
ficoms
mov
jbe
dec
and
sub
and
inc
jo
ficomps
ja
adc
subl
pop
pop
lock
out
movsb
shll
mov
lea
shr
rclb
stos
inc
jmp
dec
outsb
sbb
mov
pop
inc
adc
sbb
and
pusha
lcall
lcall
cli
scas
mov
test
cmp
push
addr16
sbb
out
stc
cmp
lods
mov
stc
xor
push
mov
mov
xor
int3
sbb
into
inc
sbb
adc
lret
jnp
jge
push
imul
repnz
testb
outsl
popa
loop
les
fs
movsl
jecxz
add
sti
jmp
jnp
sub
outsl
sub
sub
adc
jge
leave
imul
mov
lods
push
mov
addl
pop
outsl
mov
pushf
fsubl
xchg
sub
mul
dec
cwtl
daa
xor
xchg
aaa
lods
or
aam
ret
cmp
cmc
in
inc
mov
outsl
inc
loopne,pn
leave
inc
push
in
ds
es
rcl
sbb
in
dec
sbb
test
sub
pop
mov
leave
movsl
add
push
or
adc
int3
aaa
rcrl
and
mov
pop
pop
outsl
lret
and
leave
cwtl
sbb
cmpsb
push
cmp
cmp
jp
inc
test
incb
cmpsl
adc
or
push
add
cmp
dec
jmp
test
cs
push
test
mov
out
pushf
mov
mov
repnz
cmc
cmpsl
test
icebp
std
lahf
xchg
aaa
bound
pop
mov
addr16
psrlw
loopne
cmp
push
fbstp
push
jle
ja
test
xchg
out
in
cmp
fisttpll
clc
dec
dec
ret
shl
iret
dec
sbb
call
adc
cs
aam
dec
mov
push
sub
imul
repz
and
inc
jae
fldl
jl
push
out
aad
push
xchg
fdivrp
nop
mov
movsl
aaa
add
push
jecxz
jno
rcrl
adc
aaa
pop
jns
cmc
sub
lds
shll
mov
int3
or
test
pop
rorb
les
or
imul
or
xchg
std
arpl
pop
adc
xchg
pop
sahf
mov
push
xor
aaa
das
mov
xor
jns
cmpsb
lahf
out
lret
sub
in
in
sti
sti
lods
push
mov
inc
in
mov
fsubrl
int3
xlat
ds
cli
xor
adcb
in
sub
fs
mov
xchg
xor
andb
jns
aam
dec
jle
stc
adc
pop
aam
jle
push
sbb
jns
adc
loope
mov
lods
leave
les
cwtl
add
popa
in
jl
cld
psubq
mov
pop
out
stos
jo
jnp
lahf
loope
adc
inc
ret
cmp
out
push
fwait
ljmp
je
std
push
mov
pop
fdivs
popa
mov
mov
sub
xor
mov
adc
jns
sbb
pusha
jne
mov
sub
shr
push
notb
inc
xchg
jecxz
in
sbb
sub
stos
cwtl
mov
xchg
cmp
sbb
xchg
scas
jl
rorb
gs
push
dec
sub
fistl
add
cwtl
int
xor
sbb
jns
js
mov
lock
enter
movsb
jge
popa
mov
xorl
pop
cmp
cmp
pop
xor
dec
cs
stos
push
dec
nop
imul
outsl
outsb
push
sbb
imul
inc
loop
push
lcall
jl
lret
xchg
std
pop
add
and
test
mov
sub
test
pop
fidivs
sbb
cld
inc
mov
jne
mov
pop
fucomp
cmp
movb
mov
inc
stos
dec
scas
dec
dec
sub
lret
test
add
xor
add
dec
push
cmp
sbbb
in
inc
addr16
xor
lcall
jns
sbb
cltd
popf
sub
icebp
xchg
cwtl
or
xchg
ret
call
scas
cmp
cwtl
fisubrl
mov
pop
int
call
popf
insl
adc
sbb
sub
sub
xchg
mov
dec
cmpsb
sub
movl
fwait
ret
sti
ss
repnz
xlat
stos
mov
arpl
xor
and
js
cmp
add
inc
inc
push
jb
mov
mov
mov
nop
xchg
add
cld
rclb
inc
xchg
pop
rorl
rcrl
fwait
xchg
pop
cmp
sbb
scas
in
xchg
cld
sub
fsubr
cmc
fnstenv
aaa
mov
cmpsb
stos
pop
imul
jl
xchg
aas
in
or
add
xchg
aas
jle
mov
and
mov
push
ja
jp
mov
pushf
lahf
ss
data16
mov
clc
lret
add
push
jp
adc
mov
ljmp
add
adc
add
sub
movsl
stos
and
cmpsb
ficompl
gs
stc
inc
imul
in
xor
mov
mov
push
xchg
ljmp
xor
or
sub
mov
and
leave
lea
mov
mov
push
aam
sti
sti
int
iret
pop
adc
gs
out
xor
dec
mov
in
mov
fsubrs
lret
sub
push
mov
dec
test
mov
add
cmpsb
sbb
and
stos
xchg
imull
data16
adc
inc
dec
adc
rorl
push
add
cmp
fstpt
mov
xchg
ret
push
cmc
js
test
popa
mov
adc
fwait
inc
jb
adc
fwait
xorb
insl
xor
fisttpll
ret
cwtl
outsb
int
fimuls
xor
pushf
xlat
sub
scas
pusha
pop
xor
addr16
mov
test
leave
testb
lods
jnp
popf
repz
mov
mov
dec
daa
cmp
popa
sar
mov
mov
mov
xchg
xor
out
dec
mov
lcall
mov
imulb
inc
cmp
test
movsl
sub
pop
mov
or
lcall
aam
dec
push
into
dec
loop
dec
xchg
scas
ffreep
shlb
inc
cld
pusha
addr16
mov
add
in
scas
push
lret
imul
mov
inc
jge
imul
lods
dec
sub
insb
clc
std
jne
iret
xor
lods
inc
mov
sbb
stos
sbb
jl
outsb
imul
sbb
test
dec
or
gs
mov
pop
pop
push
dec
pop
mov
outsb
and
shlb
loope
mov
inc
scas
mov
jmp
cs
ds
mov
out
in
sbb
shlb
add
loop
lahf
mov
jle
xchg
lret
lods
mov
xor
fwait
cld
sbb
and
popa
add
cmp
add
cli
call
adc
dec
jb
add
pop
shlb
mov
lcall
lods
inc
and
test
es
mov
push
cmp
arpl
jne
jnp
pop
fmull
mov
mov
jmp
mov
push
ss
icebp
fwait
cmp
jl
divb
xchg
fadds
aas
inc
jg
cmp
cmpb
leave
push
in
outsl
sahf
lret
dec
negb
enter
clc
add
xor
hlt
pop
inc
ret
mov
ficoml
dec
inc
repnz
mov
cmpsl
aad
in
xor
enter
push
fdivrl
aaa
loope
pop
push
mov
test
fwait
inc
fildl
pop
push
in
fldcw
insl
in
jge
adc
cld
aas
hlt
or
adcl
aad
lock
fucomp
inc
push
add
lods
sbb
into
xrelease
je
sub
mov
sahf
daa
insl
push
xlat
xchg
dec
inc
inc
and
sub
ret
stc
lock
hlt
popf
ja
icebp
fisubs
cmp
add
addb
outsl
test
in
cmp
pusha
push
dec
fs
push
incl
loopne
adc
fisubl
xor
sbb
mov
lcall
mov
imul
cltd
sub
inc
dec
into
cmp
imul
sbb
or
adc
jmp
cmp
pop
aas
and
mov
std
push
jbe
xor
repz
inc
lret
xor
dec
xchg
mov
and
push
mov
testl
rcrb
dec
jl
test
jl
pop
jl
mov
add
sbb
xchg
push
stc
mov
gs
xor
and
push
inc
mov
out
sbb
pop
inc
cltd
push
fidivrl
inc
jb
jp
xor
push
sbb
rorl
and
loope
daa
push
adc
dec
test
xchg
pop
fs
iret
jnp
std
jno
jbe
xchg
je
xor
fwait
and
fwait
adcb
fildl
xor
pusha
scas
mov
lret
in
into
jl
jns
push
std
adc
add
mov
xchg
lods
cmp
xchg
iret
test
cs
call
in
xlat
sub
xchg
dec
push
fsubl
push
jmp
mov
mov
hlt
and
mov
negb
int3
adc
mov
jno
fs
xor
lahf
or
jle
out
test
cmpsl
pop
stos
cmp
hlt
addb
dec
push
jmp
mov
cli
idivl
xor
aaa
test
inc
pusha
adc
ja
loope
data16
popf
dec
mulb
test
sbb
jmp
out
pop
test
adc
xchg
insl
inc
lods
xor
mov
xorb
mov
stos
test
leave
jecxz
push
les
jp
adc
lcall
cld
add
adc
and
shrb
sbb
xor
das
dec
push
sahf
insl
push
dec
sti
xor
sub
ljmp
movsb
ljmp
clc
ss
cmp
fildll
dec
push
sahf
push
int3
sub
dec
mov
mov
in
popa
pop
or
adc
cmp
loop
xchg
out
data16
jmp
cltd
fdivrl
sub
fs
xchg
out
mov
add
arpl
jge
dec
ja
dec
xchg
xchg
fsubs
or
ljmp
roll
sarl
jb
adc
dec
inc
sub
pop
mov
cmp
sub
rcrl
lods
jo
jmp
mov
dec
jge
movb
sub
fdivrs
sub
fnstcw
xchg
pop
sbb
out
cmp
dec
inc
stos
or
addb
cmp
jmp
jecxz
jne
fistl
mov
sub
test
push
fs
and
nop
dec
xor
ficoms
loope
lods
cmp
out
lods
insl
fwait
outsb
fcmove
and
std
sub
mov
cmp
cmp
lret
shlb
fisubs
pop
in
inc
jge
push
inc
or
in
jne
aaa
jge
sbb
mov
test
popa
scas
xchg
sub
adc
ds
out
or
cmpsl
push
das
push
pop
rol
shrl
mov
dec
movsl
xor
stos
dec
jg
enter
xor
add
mov
and
xchg
xchg
out
mov
jmp
inc
jge
push
push
cmp
scas
inc
jo
dec
inc
cmp
add
pusha
and
cmp
push
ljmp
xor
and
jp
add
xchg
outsl
std
mov
cs
adc
sar
arpl
jbe
shll
in
mov
sub
adc
or
jg
shr
jp
push
xor
in
popf
dec
movb
dec
insb
stc
mov
stc
clc
call
xor
aad
sti
mov
pop
stc
adc
loop
push
pop
shl
je
icebp
xchg
jge
cmp
imul
imul
xchg
outsl
rorl
xchg
sbb
pop
rorb
jecxz
ret
mov
and
out
fldpi
xor
stos
dec
xor
sbb
and
fsts
pop
mov
cmp
jp
sbb
testl
mov
inc
lds
jno
ljmp
repnz
out
sbb
xchg
dec
pop
inc
das
mov
add
lods
jecxz
push
pop
pushw
shrl
lret
mov
movsl
ret
inc
lahf
jnp
xor
in
cltd
xchg
jg
insb
or
int3
aas
jnp
dec
mull
push
cmp
and
data16
mov
jl
jnp
xchg
lret
pop
cli
sub
je
mov
cwtl
xchg
push
and
rcrl
test
das
jge
insl
ud1
mov
pop
ja
xchg
inc
lret
stos
mov
filds
xor
cmp
mov
xor
fcmovnu
lret
mov
imul
enter
call
cmpsl
push
xor
outsb
insb
cmp
push
mov
lods
stos
jne
push
cmp
ja
pop
push
or
fisubl
cmp
shrl
ljmp
mov
mov
test
push
mov
fnstcw
mov
push
mov
leave
stc
cs
pop
sahf
stc
outsl
ja
pop
push
fdivs
add
aad
aam
mov
mov
daa
subl
add
pop
lods
jge
jle
stos
loope
aad
pusha
or
loop
mov
push
mov
rcr
ja
dec
popf
imul
jbe
add
shll
mov
mov
inc
pop
in
lods
aas
into
jle
jnp
mov
addr16
push
mov
in
negb
popf
xchg
cltd
sub
insl
lcall
pusha
insb
ret
test
outsl
and
dec
push
das
adc
adcb
test
out
add
jp
mov
mov
pop
sbb
insl
cwtl
les
mov
xor
xchg
cmp
mov
and
ret
cmc
cmpl
leave
jmp
or
shl
or
push
in
bnd
outsl
les
xor
or
pushf
xchg
movsb
sub
stos
push
test
out
mov
daa
adc
jmp
dec
stos
ret
mov
movsb
mov
add
inc
daa
rcll
xor
insl
cmp
in
loop
or
mov
xlat
lods
leave
or
lea
dec
sub
mov
and
jne
push
push
and
mov
stos
stos
cmp
cmp
fdivrs
xor
popa
push
mov
pusha
cli
insl
ja
jne
pusha
fbstp
shlb
sbb
adc
imull
cwtl
jnp
xor
push
imul
test
leave
dec
aam
sub
sbb
aas
xor
je
hlt
jbe
mov
pop
pop
dec
lahf
lahf
dec
inc
out
inc
add
jne
pop
js
pop
adc
dec
cmp
roll
lds
ds
pop
fidivrs
test
stos
and
fbld
fdivs
scas
sahf
cmp
xchg
fisttpl
mov
push
sub
inc
adc
inc
aas
push
cmp
mov
imul
popf
inc
xchg
incb
push
xchg
add
xchg
pop
mov
inc
mov
push
outsl
dec
add
and
rorb
scas
dec
fwait
cli
int
test
push
jle
aam
add
cs
repz
inc
sbb
pop
lahf
dec
or
cli
sub
cmp
fwait
stc
xchg
cmp
int
or
insl
test
push
sti
adc
ja
int
hlt
add
xor
cltd
xchg
and
lds
jle
jnp
nop
xchg
cmc
sti
leave
stos
push
arpl
mov
dec
mov
sub
push
mov
pushf
jns
xor
xor
js
pop
cmpsl
xchg
imul
idivl
dec
cmp
jecxz
pop
sbbl
mov
add
fwait
in
enter
jmp
sub
cmp
mov
cmp
icebp
std
pop
push
inc
dec
fucomp
cmp
push
sbb
adc
sub
inc
dec
xor
sbb
pop
aaa
push
ljmp
adc
push
push
aaa
cli
dec
pop
mov
and
jno
in
cmp
arpl
out
jbe
es
packssdw
sub
in
call
and
jo
push
add
mov
loop
ds
test
mov
push
gs
push
loopne
mov
cld
pop
pop
jne
outsb
data16
iret
popf
jb
ret
rorl
popa
lea
dec
in
inc
mov
out
mov
mov
inc
ja
pop
mov
lret
andl
inc
sub
mov
pop
pop
xchg
jecxz
push
test
and
repz
in
mov
insl
hlt
inc
add
cmp
pop
inc
stc
xchg
cli
sbb
push
movsl
add
mov
pop
adc
jmp
pop
outsb
lods
setae
xchg
cmc
ret
aad
sti
in
insl
push
cmpl
cli
fsubs
outsl
pop
pop
ljmp
jno
js
outsb
jle
iret
cli
pop
mov
mov
imull
jle
mov
loope
stos
adc
lock
inc
movsb
callw
push
fiadds
lods
pop
daa
jbe
jecxz
pop
xchg
mov
mov
pop
xor
push
cmp
mov
test
pop
addr16
les
mov
cs
and
pusha
fs
test
cmc
xor
mov
sub
fldcw
mov
or
inc
add
ljmp
loope
mov
adc
push
add
and
test
andl
cmp
lcall
pop
xchg
and
out
cmp
push
in
adc
roll
push
mov
adc
loop
and
sub
int3
ljmp
cmp
push
pop
xchg
mul
adcl
aas
fstpt
dec
sbb
cmpl
negl
stos
pushf
sbb
xchg
sbb
and
leave
cld
pop
fcmovnb
inc
nop
mov
mov
dec
add
lahf
pop
in
fldenv
and
out
sub
clc
sbb
mov
cmp
fs
cmp
fnsetpm(287
iret
jmp
aas
mov
push
jnp
fldenv
nop
lahf
lds
push
cmc
fbld
ss
pop
cmp
adc
in
dec
cli
or
xor
mov
jae,pt
ds
faddl
pmulhuw
mov
jns
enter
jg
imul
stos
loopne
test
add
jmp
ja
jmp
mov
push
shlb
addr16
enter
sbb
cmpsb
int3
je
cmp
or
icebp
call
pop
dec
push
in
in
cmp
jbe
sbb
jb
cmp
push
filds
loope
pop
jae
mov
xor
xor
sbb
lret
or
jge
mov
mov
cmpsl
mov
mov
push
push
decb
insl
nop
mov
sahf
std
fidivs
loopne
add
outsl
pop
add
cmpsl
in
and
into
mov
addr16
push
or
sub
fnclex
ret
push
js
cs
add
push
push
dec
into
sbb
jge
int
push
mov
push
sbb
inc
and
daa
xor
imul
aad
bound
dec
inc
xchg
mov
push
mov
lret
decb
sarb
add
outsb
mov
cs
daa
pop
mov
repnz
ljmp
sarb
rcrb
dec
mov
stos
mov
das
sbb
decb
fs
iret
cltd
addb
mov
mov
push
pop
dec
nop
insb
cmp
adc
mov
movsb
daa
je
inc
push
and
dec
fld
je
enter
push
pop
sbb
dec
mov
je
sub
and
inc
adc
ljmp
sub
xlat
es
jno
in
xor
and
mov
xor
or
mov
push
sbb
dec
repz
jb
stc
repz
in
data16
push
or
dec
dec
cwtl
repnz
adc
mov
mov
iret
mov
sbb
jle
pop
imul
jmp
or
xor
xchg
inc
push
mov
add
imul
pop
cmp
push
add
pop
shr
jle
pop
out
push
sub
stos
movsl
push
scas
mov
sbb
mov
inc
loope
in
std
ret
lods
int
xlat
std
sub
scas
and
mov
pop
pop
xor
scas
xor
mov
lahf
fistps
inc
adcl
jecxz
and
xchg
fildll
ret
jnp
jp
in
cmovge
adc
icebp
fwait
push
xor
pop
call
gs
cmp
and
inc
sbb
mov
xor
pop
xor
stos
test
sub
jbe
add
cmp
pop
lea
jmp
arpl
xor
dec
int3
repnz
add
mov
scas
jecxz
cmc
adcb
mov
adcb
imul
pushf
cwtl
xor
into
sbb
lods
adc
xchg
mov
mov
fdivs
aam
or
sbb
jo
daa
mov
addr16
jmp
xchg
mov
lock
mov
mov
iret
idivb
mul
jp
cmp
aas
pop
cld
std
xor
ret
jge
pop
lods
cli
hlt
lret
lds
mov
sub
in
pop
int3
jecxz
insl
and
fisubl
or
jb
sar
or
jnp
shlb
es
cmp
enter
ss
loope
or
jne
das
jae
push
sbb
cmc
ss
fadds
xchg
push
fstpl
dec
mov
adc
adc
mov
subb
pusha
test
xchg
iret
pushl
scas
xchg
jns
test
xchg
jo
mov
psubb
xor
loop
cmp
mov
mov
xor
jle
add
xchg
xchg
loope
add
xchg
push
ja
addb
mov
or
fistl
stc
xlat
inc
sub
lock
je
test
test
sbb
mov
shrl
fs
aaa
dec
sti
insb
shrb
cli
mov
das
mov
ja
push
pushf
fstpl
adc
je
dec
and
cmpsb
and
and
adc
mov
aas
icebp
ljmp
pop
jne
cwtl
ja
sti
dec
cmc
addr16
and
jb
stos
les
sbb
mov
dec
dec
push
andb
scas
or
pand
cmp
pop
psllq
xchg
mov
push
fdivrl
sbb
inc
outsb
xor
xchg
sub
add
cs
sbb
push
adc
dec
push
iret
lahf
add
sti
add
pop
jae
icebp
cmpl
imul
jle
jno
mov
xor
add
aad
inc
movsb
popf
cmp
and
out
lock
fists
cmpsl
add
insl
lock
adc
pop
iret
cmc
jge
and
insl
jmp
iret
outsb
movsl
fwait
pop
mov
imul
sbb
daa
mov
gs
notb
out
das
pop
mov
mov
add
or
adc
inc
xchg
out
cmpsl
jl
data16
arpl
mov
mov
test
dec
push
pop
cmp
ret
cmp
bndldx
add
jns
mov
jle
mov
js
jmp
mov
mov
insl
stc
lret
push
sbb
scas
enter
xchg
dec
arpl
mov
fmull
imul
lock
xchg
shlb
rclb
loope
or
jns
shll
jmp
mov
xchg
xor
out
mov
adc
in
fldenv
mov
mov
dec
dec
push
mov
fiaddl
mov
cltd
sub
and
loop
push
daa
add
into
mov
jbe
jnp
mov
sti
xor
xchg
cmpl
xor
xchg
scas
and
enter
mov
xor
lock
stc
inc
fsubl
jnp
aam
cwtl
in
sub
sbb
icebp
in
jl
pushf
and
rorb
rcl
lret
sbb
and
push
adc
push
jl
mov
push
loope
and
insl
cmp
mov
xor
notb
ret
xchg
xchg
xor
sub
into
dec
lahf
into
in
and
and
push
and
out
jle
lcall
test
std
in
xor
les
cmp
jp
xor
adc
mov
xlat
hlt
jnp
adc
outsb
sbb
imul
out
loopne
mov
adc
test
loopne
mov
adc
jns
jnp
dec
mov
icebp
repnz
out
addl
xchg
pop
inc
mov
xlat
cmpsl
sub
sti
cmp
push
loopne
js
adc
aam
pop
daa
sbb
sbb
les
rclb
inc
jecxz
push
in
out
stc
fimull
cld
cmp
xchg
sub
or
hlt
subb
or
sahf
pop
movsl
cli
and
xor
clc
inc
inc
cld
sbbl
or
jno
das
ret
std
push
repnz
test
cltd
jg
imul
mov
and
nop
push
xlat
push
scas
aam
xor
cmpsb
cmpsb
cmp
test
xchg
sbb
daa
ret
jne
repz
sub
call
add
stos
fwait
push
in
push
xchg
adc
xchg
jo
fildl
mov
aam
repz
push
insb
pop
mov
xor
repnz
mov
rcll
jae
xor
sub
mov
sahf
leave
pop
pop
lock
setge
pop
mov
push
pop
out
nop
mov
cld
cli
leave
mov
mov
fcoml
ds
and
push
sub
jp
fwait
ja
incb
imul
add
or
incb
shlb
xchg
fwait
sarl
sarb
pop
lea
and
or
insb
sbb
sub
cltd
adc
and
iret
sub
pop
dec
or
add
mov
fsub
push
aam
mov
push
pusha
adc
lock
in
gs
in
mov
cmp
jle
pop
in
mov
daa
cld
jle
add
xchg
stc
add
lea
mov
ds
push
ja
movsl
push
ret
dec
aam
push
jo
fs
mov
pop
cltd
add
out
data16
add
stc
ljmp
aas
push
add
pop
rcr
pop
mov
movsl
push
aas
aas
or
xorl
xor
pop
loope
jnp
addr16
add
jb
mov
jae
sti
add
loopne
cld
ret
repz
dec
push
adc
xchg
inc
fisttpll
mov
call
xchg
add
push
mov
push
ljmp
sbbl
pop
cmp
and
addb
in
pop
sub
xchg
ret
or
or
call
xor
inc
aad
cmp
or
gs
mov
hlt
cltd
xchg
data16
dec
sar
jne
pop
test
movsl
stos
lret
add
and
out
lcall
lahf
xor
pusha
leave
cmpsl
mov
pop
test
sbb
sbb
jo
mov
xchg
cmpsl
lock
bnd
add
mov
popf
rcll
and
loop
dec
popf
sbbb
int3
sti
rcrb
mov
fldt
fidivs
mov
es
jecxz
repnz
push
ret
jnp
xor
cwtl
or
ja
addl
sub
jmp
mov
and
shlb
int3
or
or
and
mov
cmp
cmpsb
jo
mull
lods
dec
das
ljmp
cmp
lea
imul
mov
call
mov
inc
pop
inc
lret
sub
add
or
rolb
xchg
arpl
daa
ja
adc
sub
mov
loope
into
xchg
lods
push
cmpsl
mov
and
stc
xchg
ret
out
dec
mov
or
jae
in
mov
lea
cmc
inc
cmp
push
inc
lods
or
fldcw
fimull
xchg
push
addr16
jbe
sub
push
lcall
xorb
sub
jp
and
mov
call
les
inc
push
mov
jns
mov
aaa
cmc
xor
outsl
lahf
mov
jbe
push
rcrb
lret
test
inc
add
push
test
ss
jb
fildll
loop
xchg
mov
rcr
xchg
xorb
add
shl
sub
repz
js
popa
mov
inc
popa
xor
sub
outsl
jnp
mov
xlat
ljmp
mulb
incl
loop
sbb
clc
nop
jp
lret
cmpsl
jae
push
fistl
je
fwait
repz
shrl
hlt
inc
xchg
aad
fadds
fimull
xchg
mov
data16
mov
cmpb
pop
jb
aas
xlat
dec
dec
ret
push
jmp
cmp
leave
fldt
sub
inc
jne
daa
dec
or
les
adc
popa
jns
negl
pop
stos
pop
add
mov
cmp
call
adc
inc
dec
inc
sahf
jns
mov
in
mov
jl
cmp
fbld
mov
sub
mov
popa
sahf
scas
dec
lret
cmpsl
ds
mov
mov
stos
push
mov
stos
js
push
lret
popf
and
loopne
je
fnstsw
test
jecxz
mov
push
sub
jno
dec
fisttpll
dec
mov
jnp
dec
sbb
xchg
mov
adc
pop
leave
dec
mov
rcrb
pop
sbb
inc
push
inc
sahf
lods
incl
push
xor
add
out
adc
push
dec
push
lods
cmp
lcall
and
sarb
mov
lcall
cmpsb
push
sub
push
cs
dec
addb
and
jge
sti
sbb
jl
cmp
xor
lret
ljmp
scas
jge
cmp
add
xor
jp
popf
xchg
leave
cmp
xor
xor
push
fs
push
mov
in
icebp
xlat
sub
mov
addb
nop
sbbb
jae
mov
lea
jle
fimuls
inc
sub
xchg
mov
mov
repz
insb
or
add
inc
adc
or
imul
jnp
addr16
push
cld
lcall
lret
cwtl
pushf
cs
push
push
js
xor
jo
inc
sbb
mov
test
std
inc
leave
ds
das
sub
loop
push
xor
int
mov
addl
test
adc
push
insb
and
push
lahf
stos
or
sub
xorb
mull
jecxz
mov
inc
and
sbb
push
cmp
movsl
scas
loope
dec
xor
or
xchg
mov
or
and
pop
add
scas
pop
fadds
pop
push
and
aaa
mov
xor
mov
dec
push
icebp
mov
jp
and
sbbl
xchg
fmul
xor
loopne
mov
add
out
pop
scas
jge
pop
adc
xchg
pop
pop
push
movsb
out
mov
cmp
clc
sti
data16
xchg
aaa
sub
mov
faddl
bound
mov
inc
mov
cmp
jns
add
nop
xorl
and
xchg
sahf
push
sub
push
and
rcll
stos
sbb
in
out
lea
push
xor
jo
dec
test
push
and
mov
movsb
insb
dec
cltd
lret
xor
xor
cli
ret
jo
out
outsl
jl
test
jecxz
mov
sbbb
movsl
xor
cmp
sub
and
or
push
push
outsl
or
jno
xchg
in
popf
ljmp
cmp
loope
mov
inc
inc
inc
aad
adc
aam
mov
mov
cmp
jp
xchg
fisttpl
cmp
shll
ja
movsb
mov
outsb
adc
push
pusha
test
popa
imul
icebp
dec
ss
cmpsb
insl
fisubrl
mov
orb
mov
arpl
add
pop
cmp
xchg
push
es
push
mov
add
ret
adc
mov
mov
js
pop
bound
fcomp
mov
ret
jae
push
jb
mov
mov
mov
mov
lret
pop
xchg
loop
and
ds
sbb
loopne
std
xchg
roll
mov
sbb
jno
push
cmpb
aaa
pop
das
bound
adcb
mov
dec
xchg
jecxz
inc
ja
call
test
js
aad
nop
scas
jb
les
xchg
dec
out
mov
loope
fimuls
fidivrs
jo
and
iret
xchg
lock
add
aad
inc
call
cltd
mov
into
and
xor
dec
adc
or
xor
xchg
movmskps
movsb
jge
shll
jns
jmp
fisubl
or
xchg
mov
xlat
out
aaa
mov
ret
mov
shl
mov
dec
fldenv
aam
jecxz
out
ficompl
adc
fstpt
fldcw
xchg
fs
ret
mov
int3
inc
int
mov
mov
sbb
sub
mov
fistpl
movsb
sti
adc
jg
mov
in
lds
inc
shrb
or
arpl
dec
pop
fwait
adc
popa
sub
cmp
hlt
jle
pop
adc
loop
add
hlt
inc
and
fsubs
out
xchg
loop
pusha
pop
cmp
fiadds
xlat
jmp
scas
bound
inc
fsubrp
dec
cmp
sbb
mov
mov
cmpsl
add
mov
jecxz
mov
xor
adc
mov
mov
or
fxch
into
mov
mov
sbb
shrl
add
xchg
push
jne
xor
and
imul
insl
jno
sub
and
mov
xchg
xlat
mov
rcrb
sub
test
adc
mov
dec
pop
and
adc
xor
test
aaa
adc
test
in
mov
and
and
jp
into
leave
pop
cs
mov
aaa
das
lret
stos
xchg
stc
or
dec
lahf
outsl
push
jno
ffree
lcall
and
inc
push
test
xor
push
outsb
xor
fs
fstl
scas
and
lahf
clc
pop
je
repnz
jno
jo
aaa
mov
sub
rolb
pop
push
mov
fnstsw
xor
iret
mov
pop
and
jno
lods
push
cs
lods
mov
push
adc
mov
dec
sbb
pop
dec
enter
pop
inc
push
pop
mov
es
sbb
orl
rcr
decl
push
xchg
dec
cwtl
jne
add
mov
dec
lahf
mov
pop
and
fcmovnbe
pop
pop
bound
and
lods
add
in
mov
aam
orl
cmpsb
sub
daa
out
adc
inc
xor
lahf
negl
ja
inc
pop
xor
negl
cltd
lods
sahf
cmp
dec
and
mov
movsl
and
mov
pop
cltd
mov
mov
push
add
mov
push
or
push
inc
dec
inc
xchg
dec
xlat
insl
call
mov
movsl
or
cmp
mov
lods
imull
out
out
pop
loope
sbb
lahf
in
rorl
xor
jg
movsb
mov
mov
in
fisubrs
adc
rorl
das
gs
add
jp
stos
je
ret
roll
mov
insb
fnstenv
in
outsl
sbb
sub
push
mov
jo
bound
sahf
movb
imul
mov
in
sub
sub
inc
shr
addr16
out
mov
or
add
adc
push
jb
mov
mov
mov
stos
adc
popf
pusha
std
das
ficoml
cld
in
xor
fistps
ljmp
mov
mov
add
je
dec
movsl
mov
insb
test
mov
xor
into
cmp
lea
pop
fimull
inc
inc
pusha
enter
push
movsb
loopne
adc
subl
mov
mov
int3
cmp
lcall
imul
rcr
adc
xor
mov
cmp
cmp
sbb
sbb
arpl
leave
or
stc
pushf
jge
push
in
sti
push
mov
add
sub
sub
jmp
imul
and
jle
xchg
inc
leave
daa
call
fcoms
dec
ret
faddl
xchg
inc
loop
xchg
dec
mov
push
lea
cld
int
lock
sar
lods
aaa
adc
es
mov
lret
js
into
leave
jb
adc
repnz
mov
ret
mov
push
arpl
dec
bnd
nop
jg
stos
in
outsb
lods
inc
lahf
gs
cwtl
icebp
sbb
insl
mov
cltd
push
inc
xor
push
cld
mov
fxch
test
mov
shl
sarl
sub
jge
ss
inc
jle
out
pop
leave
jmp
add
nop
repz
xlat
movsb
jp
movsl
and
pop
js
mov
or
clc
pop
inc
jecxz
sbb
arpl
sub
bound
dec
in
jno
mov
lcall
das
stos
mov
adc
int
inc
mov
xchg
cmpb
mov
rcrb
aam
push
xor
xchg
sub
dec
scas
adc
xchg
jl
push
mov
xor
nop
adc
pop
or
or
shll
dec
pop
pop
mov
lret
and
sbb
aam
sub
enter
sbb
adc
bound
mov
imul
leave
sub
addb
pop
pop
nop
das
hlt
add
adcl
add
in
aad
xchg
dec
mov
test
mov
mov
pop
and
mov
movsb
jmp
dec
nop
cld
jo
xchg
aam
dec
aam
xor
sahf
xlat
loop
outsl
adc
jbe
cmc
sub
xchg
stos
sub
sub
dec
mov
add
xchg
or
test
sti
out
jae
enter
es
enter
mov
ss
xlat
cmp
mov
adc
xlat
lahf
mov
nop
into
mov
nop
imul
test
and
cli
xor
cs
and
jle
scas
dec
pop
ret
mov
fadds
sbb
inc
fimuls
xchg
pop
sbb
sbb
mov
mov
dec
xor
pusha
mov
mov
inc
and
fimuls
outsl
aam
loope
or
jmp
mov
mov
sub
es
mov
arpl
push
push
mov
sub
das
xor
gs
xor
orb
fstpt
stos
dec
insb
add
jae
inc
or
pop
cmp
pop
mov
xor
sahf
das
dec
scas
dec
imul
adc
cs
aam
loop
ds
mov
dec
int
not
sub
popf
jne
jb
mov
sbb
and
and
sbb
jbe
daa
stos
jnp
repz
pop
push
test
dec
stos
push
mov
in
mov
les
xchg
mov
cltd
cmc
xchg
jmp
icebp
arpl
or
rolb
cs
xchg
fdivs
lret
dec
ja
popa
jecxz
and
mov
out
daa
sub
std
cmpsb
pop
mov
sub
test
in
xor
push
popa
sbb
sbb
rclb
add
testb
inc
mov
jo
xchg
movsb
cmp
xor
or
adc
ds
dec
jl
or
pop
jae
mov
popl
mov
pop
hlt
dec
mov
push
stos
sub
in
lods
stos
sbb
aaa
fmul
addr16
mov
jno
andb
je
imul
jbe
std
fisubl
in
dec
cmpsl
and
sbbl
push
popl
adc
fnclex
dec
mov
filds
xchg
shl
mov
pop
or
push
inc
imul
adc
sub
addr16
push
pop
jle
nop
cmpsb
cwtl
inc
adc
xchg
ret
or
lahf
fnsave
imul
ficoms
sub
mov
or
scas
addr16
inc
loopne
pop
scas
scas
dec
mov
out
mov
push
sub
dec
arpl
cmp
cwtl
mov
pop
mul
imulb
mov
dec
stos
mov
in
loope
xor
cmpsb
dec
or
mov
adc
adc
fdivr
jns
ds
imul
cltd
sub
inc
inc
test
test
ret
jg
lods
shll
push
loop
ds
mov
xor
mov
dec
pop
js
aad
xor
into
shlb
mull
fistpl
enter
lret
mov
stos
mov
fisubrs
xchg
pop
clc
ss
mov
orb
pop
mov
push
mov
stc
push
xchg
jns
ljmp
xor
ret
mov
pushf
mov
stos
ret
jg
push
bound
out
cmpsb
inc
sub
enter
addr16
int
mov
push
dec
sbb
dec
daa
xchg
inc
aad
fldt
sbb
mov
xchg
aad
pop
les
cld
jmp
rclb
xlat
mov
add
jecxz
mov
sbb
add
hlt
in
imul
int3
adc
les
xchg
jge
lods
xchg
mov
fdivrp
xor
add
sub
addb
cs
xchg
in
cmp
adc
aaa
mov
es
cmp
jge
out
clc
out
sbb
dec
sbb
ret
insl
test
lret
lcall
mov
mov
lret
stc
add
pop
cltd
mov
push
adc
sub
jae
jl
mov
test
and
cmp
lock
jmp
fsts
jae
enter
sbb
repz
mov
faddl
sub
pop
hlt
js
inc
mov
pop
jge
test
xor
ss
mov
inc
lods
inc
into
inc
jo
mov
xor
aam
loope
cmpsl
fists
fmull
pusha
xchg
cmp
push
les
inc
pop
xor
in
jb
pop
mov
in
xchg
pop
hlt
pop
fcomip
sbb
lahf
fwait
or
ret
xchg
iret
xchg
leave
fmuls
outsl
add
and
enter
mov
inc
les
mov
addr16
push
sbb
add
std
mov
call
arpl
dec
int3
push
scas
mov
out
mov
scas
out
shll
out
mov
jmp
xor
in
xor
lods
sahf
dec
movsl
mov
dec
fcomip
sti
fcmovnbe
not
outsb
pop
sub
int3
jle
or
out
repnz
xor
and
jecxz
and
mov
mov
movsl
stc
loopne
lea
mov
adc
imul
int3
jb
shl
es
mov
in
in
fdivrl
aad
arpl
cs
xchg
out
stos
inc
mov
jnp
push
sbbb
mov
push
cs
lds
adc
dec
loopne
test
shl
jae
jmp
dec
sbb
add
and
bound
out
cld
arpl
fcomip
iret
fsubl
into
fstl
ja
shl
xorl
incl
xchg
ret
ds
test
leave
mov
movsl
popa
and
inc
pop
mull
gs
fcmovnu
push
add
addl
jo
je
fnstcw
pop
fcomip
orb
push
dec
dec
dec
lcall
scas
cmpsb
pop
sub
fs
push
push
loope
dec
out
fdivs
jo
and
clc
jbe
mov
adc
and
bound
std
outsl
mov
xor
mov
scas
lahf
sub
orb
xchg
xor
movl
lcall
shlb
and
nopl
test
aad
xor
repz
add
or
f2xm1
xlat
rol
push
xchg
scas
lahf
or
push
dec
xchg
neg
stos
dec
mov
dec
push
xchg
rcrb
xchg
mov
popa
adc
mov
xor
mov
arpl
and
and
sub
adc
jl
sub
movsl
mov
mov
shrb
push
insw
in
mov
jle
add
pop
jae
xor
mov
lock
or
mov
rolb
mov
lret
sbb
mov
std
sub
sahf
xor
xchg
dec
std
ficomps
jecxz
pop
or
fs
rorl
popl
mov
aad
cmp
push
sbb
push
in
test
ss
test
popa
add
shl
icebp
xlat
push
jl
mov
mov
cmpsb
mov
mov
jg
push
cmpl
jp
cmp
loope
in
xchg
or
in
inc
int
dec
repnz
mov
adc
pusha
mov
test
loop
cld
lds
mov
push
pop
cmp
sub
xor
scas
mov
jmp
jno
and
jl
ficoms
dec
or
shlb
ds
xor
xor
xchg
cmp
shrb
movsl
inc
nop
inc
ds
jo
daa
mov
mov
mov
pop
testl
jp
stc
mov
sbbb
pop
pop
icebp
cmp
jl
or
inc
out
xor
lcall
push
add
push
icebp
in
leave
into
pop
rcr
leave
mov
pop
push
inc
fdivl
mov
xchg
xlat
ljmp
mov
ret
add
out
jg
sbb
fwait
xchg
stos
jecxz
lea
sub
fisubl
notb
pop
mov
mov
jnp
sbb
repz
pop
push
jp
ret
jno
or
sub
nop
clc
out
loop
pop
mov
test
fdivrl
cmp
push
pop
inc
xchg
daa
xor
int
jne
and
loopne
cmpsb
jbe
pop
cltd
sti
dec
sub
sahf
sti
sbb
fwait
popf
jp
cld
ret
lods
test
xor
cmp
add
jmp
mov
inc
sti
inc
clc
lea
in
ret
loopne
icebp
jmp
fdivs
js
dec
popfw
dec
lret
iret
lahf
icebp
jecxz
and
in
leave
jecxz
xor
fcom
mov
fsqrt
lods
jge
push
out
lcall
in
ja
adc
adc
lds
cltd
mov
and
popa
mov
adc
push
lea
jmp
inc
in
aam
loopne
sub
push
out
addr16
mov
push
insb
jge
je
cmp
outsl
popa
mov
loopne
stc
test
jmp
scas
sub
mov
std
or
bound
movsb
inc
sbbb
icebp
stos
call
cwtl
cmpsl
xchg
test
cmp
lds
add
mov
dec
add
enter
rclb
adc
cmp
loop
call
test
into
repz
je
mull
cmp
fstl
mov
fcomps
ljmp
sbb
pop
ficomps
ret
xchg
xor
mov
cmp
rcrb
xchg
iret
mov
sbb
jbe
or
imul
pop
xor
popa
rclb
inc
sbb
add
cwtl
repnz
sti
repz
ja
dec
inc
adc
push
out
mov
fistl
xlat
sti
cmpsl
mov
or
in
lcall
mov
mov
cmp
addr16
push
fsubrl
aas
jp
sti
xchg
inc
push
call
xchg
mov
mov
mov
push
addb
sahf
cmp
fimuls
ljmp
test
or
out
mov
jmp
push
push
lret
cmp
pop
dec
mov
lea
mov
stos
cwtl
scas
pop
push
into
in
fidivrs
xchg
mov
je
shrl
std
out
sbb
sub
mov
fistps
dec
or
outsl
mov
or
cwtl
hlt
cmp
or
cmp
and
cmpsl
dec
in
jg,pt
mov
in
fs
sbb
mov
mov
divb
push
xchg
mov
pop
test
xchg
adc
jle
add
inc
iret
adc
jbe
fsubrp
or
or
mov
xchg
divl
imul
call
and
mov
push
xlat
mov
mov
and
je
push
movsb
mov
adcl
frstor
adc
incb
jo
xor
movl
leave
adc
xor
jmp
adc
pop
jbe
adc
lods
bound
xor
pop
ret
mov
call
xchg
xor
push
sub
leave
stos
fdiv
in
push
or
stos
push
div
sub
jg
jl
aad
and
jg
push
rorb
jp
dec
sbb
jne
inc
lock
cmc
sbb
mov
mov
jp
punpcklwd
addl
jmp
jno
add
cmp
enter
cmpsb
xor
scas
xchg
pop
pop
jp
adc
mov
int3
lret
and
push
xor
or
xchg
mov
fstpl
clc
jl
mov
icebp
push
pop
outsl
adc
fwait
cmpsl
fisttpll
lcall
push
push
movsb
stc
mov
mov
movswl
imul
cs
or
sbb
adc
loop
imul
aad
call
lds
out
sbb
and
lcall
sub
popa
sub
pop
cmpsl
movsb
int
mov
dec
movd
std
xchg
pop
je
sub
lahf
clc
repz
push
or
and
dec
and
imul
cmp
or
pop
jge
mov
cmp
add
lods
jb
push
imul
andb
or
inc
jecxz
loopne
lahf
loope
test
add
push
cwtl
mov
add
mov
out
mov
insl
outsl
ds
arpl
sub
subps
or
xchg
add
cwtl
push
mov
repz
xor
xor
mov
outsl
scas
xchg
out
repnz
ret
test
cltd
aas
lahf
xchg
bswap
or
idivl
imul
repz
push
adc
and
dec
mov
aad
mov
mov
jbe
mov
add
out
dec
and
mov
dec
pop
cmp
popf
outsb
cmp
fists
xchg
icebp
shll
add
stos
jbe
xor
add
scas
adc
lahf
and
push
cwtl
adc
push
adc
inc
sbb
sub
sub
mov
pop
shll
imul
cltd
fdivl
enter
fistpl
mov
cli
stos
inc
adc
inc
repnz
lea
out
mov
jnp
iret
cld
rolb
jmp
jno
in
xchg
and
dec
mov
pop
jmp
cmp
jle
lock
lods
cmp
ret
cmp
push
in
jb
scas
xor
xor
or
mov
push
xorb
lret
jle
inc
lahf
cs
push
test
out
pop
and
aam
cmp
and
adc
orb
mov
sarb
call
or
rcr
sub
sahf
inc
push
shl
addr16
lret
sub
scas
lahf
lahf
das
and
gs
nop
int
cmc
repnz
push
fnstsw
xchg
in
or
mov
or
pop
xchg
add
icebp
xlat
stc
fldt
xlat
sbb
pushf
ja
dec
or
lahf
jnp
mov
mov
insl
mov
mov
xchg
mov
hlt
cs
mov
bnd
hlt
and
inc
inc
je
dec
sarb
push
ja
fidivs
fcomip
or
movsl
push
pop
lods
pop
mov
rclb
push
push
fidivrl
xor
push
xor
cmp
out
jo
push
mov
test
out
mov
loopne
ds
in
pop
sub
cli
jp
dec
orl
shl
jle
insl
jo
xchg
add
into
and
push
mov
shll
fdivr
ljmp
cmp
inc
xchg
mov
outsl
out
or
call
mov
adc
inc
xchg
xchg
jp
fcompl
mov
movsb
loop
int
xchg
sub
and
mov
jp
push
mov
push
xchg
cmp
adc
aam
nop
jg
lret
addr16
out
sub
call
xchg
mov
add
push
ss
stos
in
orb
or
dec
mov
andb
stos
jge
mov
inc
adc
data16
xchg
adcb
test
call
testl
push
sahf
lahf
push
mov
mov
mov
popf
dec
gs
lret
rclb
sbb
inc
xor
push
cltd
jl
jecxz
in
loope
lock
pop
push
add
sub
sbb
add
test
ljmp
xor
add
push
fmuls
inc
push
jo
sbb
mov
repnz
mov
xchg
js
mov
and
xchg
dec
fdivp
addr16
out
clc
mov
call
inc
pop
jg
fsubs
jecxz
insb
mov
xchg
cmp
jb
icebp
push
mov
das
int
bound
inc
xchg
and
addr16
ror
inc
mov
mov
sub
sahf
es
mov
movsl
xor
jge
push
stc
and
arpl
push
mov
push
scas
add
or
movsb
dec
es
clc
mov
mov
subb
cmp
push
shrb
popf
xchg
es
sub
cmpsl
jmp
jecxz
mov
stos
push
es
pop
dec
lcall
cmp
fiadds
popa
jle
jns
mov
dec
cmp
xchg
repnz
sbb
mov
jbe
fsubrs
aad
fs
mov
mov
testl
mov
rcll
jns
jle
push
xor
repz
sub
mov
shll
aam
and
mov
pushf
in
jle
mov
iret
and
in
xchg
xchg
repnz
adc
das
sub
jge
inc
jle
adc
mov
dec
fst
cmc
dec
test
cmpb
inc
sub
mov
movsb
imul
aad
std
sub
push
sbb
or
mov
enter
jo
sarl
fistpl
sub
or
cld
imul
push
xchg
adc
mov
fs
xchg
aas
mov
mov
sbb
cmp
shlb
repnz
add
imul
dec
out
iret
test
push
nop
mov
daa
and
imul
xchg
dec
jmp
aas
dec
int3
jl
loope
dec
pop
jne
cli
fs
mov
fidivrs
jp,pt
popa
or
push
inc
shlb
loopne
loopne
frstor
inc
test
xor
sbb
pop
push
loopne
clc
jbe
push
arpl
adc
loop
xchg
pop
int3
stos
add
sub
cmpb
pop
push
test
ret
nop
imul
js
xor
stc
dec
sbb
lcall
push
fcmove
mov
loopne
loopne
js
mov
arpl
lds
outsb
sbb
jg
mov
nop
add
lahf
in
hlt
stos
xor
sbb
inc
dec
mov
std
ds
lods
xchg
push
push
add
mov
movsb
in
mov
clc
jno
ret
inc
sbb
roll
addr16
mov
jecxz
push
or
xchg
stc
loope
icebp
sub
sbb
xchg
rclb
adc
sbb
pusha
subb
dec
repnz
cmp
jns
cli
xchg
jne
daa
xchg
add
dec
push
xchg
and
lret
nop
xor
popf
and
sub
inc
add
xor
stc
imul
inc
ljmp
fcom
mov
leave
xchg
mov
in
mov
and
push
mov
ljmp
cmp
dec
fildll
adc
insl
roll
add
cmp
subb
cmp
test
sbb
cli
mov
push
and
rorl
pushf
push
xchg
adc
mov
cmp
enter
xor
stos
pop
inc
fdivl
cmp
ds
xor
add
imul
mov
cwtl
mov
or
sub
mov
aas
mov
sbb
mov
sahf
je
and
bound
cltd
in
insl
mov
insb
out
int3
mov
je
push
mov
mov
pop
jae
push
cmp
mov
clc
loopne
mov
neg
in
scas
aam
insb
xor
jmp
pop
ds
pop
fidivs
sbb
fcompl
push
mov
ret
xor
mov
out
js
mov
jae
out
out
fs
mov
sbb
loopne
sub
mov
insb
sbb
xor
in
pop
sub
cmc
sbb
aaa
ds
sub
inc
inc
jno
divl
test
or
mov
push
rorb
cld
push
ret
call
mov
adc
pop
xor
fiadds
fsubr
sub
mov
mov
sti
dec
and
data16
cmpsb
movsl
adc
sarb
test
lea
test
inc
adc
pushf
mov
std
xlat
jle
mov
daa
xor
jl
cmp
fbld
add
loope
and
jle
stos
daa
and
jle
jb
lret
ss
lahf
dec
pop
dec
jecxz
inc
jnp
push
dec
loopne
test
mov
or
dec
mov
and
aas
or
cmpsl
pop
jo
lock
adc
movsb
int3
leave
jbe
ljmp
neg
add
xchg
jge
dec
enter
jnp
xchg
test
lds
ror
mov
jl
cmpsb
nop
xchg
cs
or
mov
jle
lock
sub
or
cmp
push
mov
cmp
aam
nop
cmp
imul
push
pop
inc
xchg
ret
addl
push
or
and
hlt
loopne
in
jo
adc
mov
repnz
mov
sub
out
mov
stc
test
xchg
rcll
sub
sti
dec
xlat
and
movsb
xchg
inc
lds
je
gs
cmpsb
dec
pop
fdivrl
mov
lock
pusha
movsl
inc
es
xchg
add
fcmovnbe
add
push
ds
int3
cmpsb
add
jae
pop
movsl
pop
leave
shlb
or
loopne
xor
pop
pop
out
popf
data16
cli
cmp
hlt
push
push
mov
jb
dec
scas
stos
pop
lret
jae
hlt
sub
mov
imul
aaa
cmp
addr16
mov
icebp
sahf
cmp
popa
loopne
or
jecxz
mov
test
xor
push
and
add
jge
push
iret
pushf
fs
xchg
das
or
adc
daa
lcall
mov
lods
mov
xor
int
iret
or
mov
cwtl
jl
iret
fucomi
inc
shll
cmpsb
cld
jb
mov
int3
jae
fsubrl
pop
call
jle
into
push
inc
mov
and
das
lock
jle
and
cwtl
mov
pop
sarl
xchg
and
les
add
mov
sbb
pop
std
push
xchg
cmp
jg
imul
stc
adc
loopne
pusha
or
cmp
xchg
pop
add
sahf
cli
sub
jno
adc
dec
fs
sti
mov
jns
rolb
xchg
or
xchg
das
hlt
cmp
pop
pop
adcl
cmpb
dec
scas
add
push
or
jns
out
dec
int3
mov
hlt
loopne
lcall
jne
and
call
notb
xchg
adc
add
or
mov
xchg
sti
and
sbb
lret
popa
fsubrs
je
cltd
push
xchg
jle
xor
xor
arpl
shll
push
icebp
mov
and
rcrl
dec
mov
das
outsl
in
or
mov
sti
in
mov
mov
xor
dec
or
cmp
fnstenv
shll
minps
jl
pop
mov
xor
xchg
repz
leave
sub
decb
lods
mov
jno
push
jo
jne
cwtl
or
fsubr
and
lret
xorl
xlat
xlat
add
in
xchg
dec
gs
fs
pop
es
loopne
rcll
insb
rclb
popf
push
cwtl
cmp
dec
mov
jle
imul
loope
in
push
movsl
cs
or
iret
sub
loope
das
repnz
cmpsl
mov
mov
and
das
fmuls
ret
sarb
and
js
leave
dec
add
cwtl
sbbb
xchg
add
test
push
iret
cmpsb
lock
lahf
mov
and
andb
or
sub
mov
lods
test
hlt
xor
jne
push
fildl
inc
sbb
fisubrl
das
mov
sbb
fstpt
paddusw
dec
stos
into
and
testb
jecxz
or
inc
jmp
pop
mov
xchg
cmp
jmp
lods
dec
aas
and
push
mov
xchg
movb
and
pop
xlat
sbb
dec
pop
ficoms
cmpsl
pop
cmp
int3
xchg
mov
int3
jno
cmp
iret
test
aad
insb
mov
jbe
cmp
insl
mov
sub
addb
mov
xchg
int3
addb
xchg
scas
mov
mov
mov
inc
insb
loope
push
insb
and
xchg
loop
test
in
jb
in
sub
mov
mov
das
cmpsb
lret
push
insb
adc
lods
adc
scas
cmp
fcomps
ret
fucomi
lds
repz
cmp
jnp
cld
add
aaa
jbe
lahf
fidivl
testb
das
dec
popf
mov
and
push
mov
inc
mov
dec
movsb
addr16
fcoml
cli
es
sub
push
fistl
xchg
testl
adc
cmpsl
gs
adc
in
loopne
outsl
bswap
pop
loopne
sub
jno
or
adc
lahf
adc
sbb
and
mov
lods
mov
andl
loope
orb
lock
inc
sbb
mov
xor
adc
jbe
mov
dec
fnstcw
in
cmp
xchg
lock
inc
adc
bound
int
lret
xor
inc
mov
inc
add
cmp
add
and
add
sbb
mov
repz
cmp
xchg
jbe
fldl
mov
mov
icebp
stos
mov
out
add
jmp
cmpl
bt
hlt
mov
ja
inc
add
push
nop
push
mulb
pop
out
lods
mov
clc
sbb
push
push
and
ret
and
or
mov
lcall
cmp
mov
mov
xor
cmovp
rorb
insb
add
mov
pop
jno
jo
mov
mov
imul
iret
xchg
sar
mov
push
push
stc
mov
and
mov
jle
fmull
xor
jne
push
pop
dec
out
ja
lock
insb
xchg
sub
add
mov
jns
pop
pop
icebp
add
or
lahf
loopne
insb
xor
xchg
jns
push
aas
fimull
out
inc
or
inc
xor
in
ds
shrb
imul
ljmp
adc
xchg
jmp
dec
mov
sub
sub
push
lret
enter
jno
pop
dec
cmp
sbb
and
aas
xchg
lcall
xor
jnp
jns
lcall
jmp
cmp
iret
dec
addr16
xchg
nop
cmpsl
cwtl
add
jge
test
lea
inc
or
ss
out
test
test
rclb
pop
xchg
cmc
pop
fwait
aad
mov
cmpsl
push
imul
int3
or
or
xchg
jns
mov
jmp
mov
add
jle
push
dec
mov
loopne
std
or
adc
and
gs
out
or
cltd
int
pop
ficoml
mov
loop
sti
mov
mov
xor
adc
imul
dec
insb
les
jl
or
jno
jmp
mov
push
out
in
jae
out
cmp
sbb
call
nop
mov
fistps
lods
ret
and
cmp
fcompl
pusha
sub
pop
lret
mov
rsqrtps
inc
lcall
loope
mov
mov
es
xlat
dec
adcl
jmp
mov
xor
jo
lods
rorb
sub
data16
jbe
push
in
pushf
push
cmp
push
mov
lock
test
es
inc
mov
std
or
and
int3
ror
sub
cwtl
into
sub
rolb
xchg
aad
xchg
xor
dec
pop
jns
js
inc
mov
insl
inc
dec
dec
cmp
adc
lret
sbb
push
test
xchg
lods
pop
xor
push
sbbb
test
popf
js
jmp
xchg
popl
test
mov
mov
cs
xor
subl
inc
xor
bound
add
adc
icebp
rcl
mov
inc
arpl
mov
xchg
imul
jo
ja
xchg
mov
push
icebp
pop
das
cwtl
push
outsb
jmp
adc
in
xor
fs
les
in
mov
mov
jno
cmp
fwait
imul
dec
insl
je
imul
jbe
push
push
fwait
lea
fwait
int
dec
mov
popf
jmp
cmp
ret
imul
pop
jns
mov
pop
lcall
inc
sbb
ret
loope
xchg
sub
popf
xchg
scas
aam
mov
mov
jmp
jmp
aam
lcall
adc
jo
dec
sti
aam
cmp
cmpsb
xchg
pop
lahf
ret
push
cmp
rorl
into
lret
jae
gs
jnp
adc
icebp
jb
cmc
les
movsb
inc
pop
jl
jecxz
data16
jge
mov
add
lret
fisubl
pop
xor
push
fcoml
xchg
ljmp
stc
out
mov
int
xor
mov
negl
fst
dec
ds
rcrl
hlt
dec
push
mov
sbb
adc
dec
jg
or
dec
loop
pop
or
mov
cmpsb
push
lret
fsubrs
fstl
xchg
push
add
xor
and
fs
push
lock
lcall
sub
movl
xorl
mov
xlat
test
aam
push
push
fstpl
adc
xchg
pop
test
out
add
mov
cmp
outsl
mov
mov
pop
aam
in
nop
cmpsb
adc
popa
sbb
mov
sahf
out
loope
adcb
push
mov
dec
xchg
les
jmp
andl
hlt
dec
daa
push
push
test
mov
or
mov
lds
mov
jmp
outsl
jb
push
add
cmp
fsubrp
fdivr
stc
dec
in
test
test
xchg
or
pop
cmp
jnp
inc
movsb
imul
cmp
xor
pop
loop
daa
mov
andl
rclb
and
xchg
dec
imul
cmc
push
push
mov
jge
jge
pop
adcb
jge
fcompl
jp
int
pushf
out
push
and
jb
pop
adc
idivl
in
sbb
mov
jne
fadd
and
push
mov
jle
sar
mov
pop
mov
jns
addb
rolb
mov
outsl
push
inc
loope
sub
jmp
jp
test
adc
inc
addb
dec
fistpl
sbb
jmp
out
lods
xchg
xor
test
outsb
adc
pushf
inc
push
push
imul
out
mov
push
mov
sbb
sub
xchg
sbbl
addl
or
push
jmp
aam
inc
push
popf
pop
xchg
dec
mov
jg
push
addl
jmp
mov
adc
pusha
das
rcrb
cltd
addr16
xor
in
cmp
mov
cwtl
jns
aaa
int3
adc
sub
fldl
push
and
in
and
sbb
mov
inc
mov
into
inc
mov
mov
mov
in
fists
xor
flds
bound
dec
test
outsb
iret
cmp
push
mov
icebp
aad
fdivrs
push
jle
inc
test
ret
pop
fld
outsl
jne
add
push
or
dec
js
adc
lds
out
hlt
sbb
cmp
int
xchg
lods
cltd
daa
mov
inc
inc
outsb
out
or
ss
daa
xorb
cmp
cmp
sbb
repz
lahf
xchg
stc
or
jne
mov
fmul
sbb
sub
sbb
aam
fcompl
arpl
lahf
sub
or
cli
cmpsb
fs
sub
rclb
cwtl
push
shll
or
add
pop
fnstenv
push
outsl
jl
push
std
sub
cmpsl
loopne
pop
inc
and
stos
movsl
inc
insb
sub
neg
xlat
shr
cmp
mov
jne
adc
ljmp
inc
xchg
inc
mov
imul
cmpsl
cmp
or
jnp
xor
mov
mov
xor
enter
fsubp
or
adc
stos
xchg
adc
adc
jecxz
dec
int3
jno
xchg
rcl
mov
adc
in
pop
les
popl
aad
insb
lods
test
repnz
mov
inc
mov
sbb
sti
xor
ss
movl
ljmp
add
push
push
dec
imul
cmpsb
cmc
xlat
lret
fisubrs
jmp
outsb
dec
aaa
decb
aas
xor
and
add
aad
inc
pop
pop
or
mov
inc
jo
mov
pop
jl
xor
dec
cld
dec
je,pt
inc
iret
ss
outsl
jp
xchg
and
gs
gs
out
or
mov
sbb
or
xor
cmp
addr16
push
sbbb
sub
sti
pushf
lods
xlat
mov
sub
cmp
shll
cmp
lret
adc
movsl
and
in
jecxz
pop
enter
inc
adc
cmpl
and
mov
jnp
inc
das
mov
mov
mov
sahf
and
fildll
and
ret
mov
jle
dec
push
les
pop
lds
ret
xlat
and
rcll
enter
loop
mov
int3
scas
sahf
scas
mov
cmp
jbe
rorl
loope
outsl
sbb
mov
sub
in
lds
or
xor
cmc
jecxz
jb
and
cmp
xor
adc
jecxz
jno
out
inc
push
nop
ja
adc
sbb
mov
mov
rcrb
std
ret
addr16
jbe
les
xor
nop
push
std
std
popa
jnp
arpl
test
lea
lods
sarb
insb
pop
in
add
test
loope
sbb
mov
mov
clc
mov
mov
mov
out
ret
test
push
xchg
mov
aad
fs
pop
sbb
jl
fldl2t
rcrb
cwtl
sub
push
push
bound
rorl
clc
lahf
in
lret
int3
sub
sub
xchg
xor
dec
and
mull
call
mov
cmp
add
jae
lret
mov
shlb
pop
loop
out
cld
jp
sbb
rorb
xchg
in
hlt
pop
sbb
test
xchg
mov
pusha
addb
out
push
cmp
mov
mov
notb
jle
loop
dec
pop
inc
jno
arpl
sub
sub
loop
loop
mov
xchg
repnz
jg
xor
aas
cmp
jle
push
mov
gs
das
push
fisubrs
mov
xchg
bound
int3
popa
xchg
add
jl
les
call
lock
add
mov
je
dec
cmpsb
stc
clc
pop
fisubs
ljmp
inc
xor
call
add
jecxz
inc
push
sub
jbe
and
int
push
xor
pop
loope
sub
js
les
bound
jge
mov
cmp
sub
jne
fdivs
xor
xor
lods
add
jmp
xchg
jle
jge
mov
aad
add
xchg
imul
mov
repnz
mov
outsb
xchg
adc
xor
cmp
mov
addb
push
cmp
mov
int3
ljmp
add
leave
jbe
mov
mov
inc
nop
mov
adc
and
test
sti
lcall
or
daa
push
xor
cmp
add
xor
nop
mov
subl
movsl
aaa
mov
dec
popl
data16
and
out
out
lret
ljmp
call
jl
jge
movsl
mov
sbb
nop
push
ror
xlat
cmp
inc
ss
iret
clc
les
mov
inc
adc
add
leave
ljmp
or
js
aad
push
fdivl
out
mov
cmp
sub
sbb
bound
out
xor
dec
movsb
and
sub
mov
pop
sbb
sti
add
cs
call
dec
das
icebp
xchg
adc
and
lock
pop
add
jecxz
pop
movl
or
jb
fmuls
xor
push
dec
jns
jle
push
push
imul
enter
dec
scas
pop
mov
mov
xchg
mov
mov
sub
and
rorl
mov
xchg
ja
mov
mov
out
aaa
xor
mov
mov
xchg
lret
outsb
je
scas
stc
mov
hlt
jmp
sbb
out
test
stos
inc
cmp
lret
stc
mov
cld
rolb
add
cmc
mov
pop
stc
xchg
jnp
in
pop
cs
or
std
cmp
mov
sbb
inc
xlat
add
and
mov
pop
mov
xor
mov
repz
mov
rolb
in
nop
jge
xchg
mov
dec
leave
push
sub
outsl
hlt
repz
lret
sbb
pop
inc
xchg
out
ficompl
into
pusha
mov
aaa
mov
and
aas
fidivrs
cmpsb
loope
iret
int3
loope
adc
add
push
and
lea
loop
movsl
sub
cmp
inc
cmp
sub
lock
fistps
lcall
adc
and
jo
dec
das
adc
pop
xchg
lock
sbb
sahf
mov
movsl
iret
pop
pop
popa
insl
jae
mov
sub
gs
dec
mov
dec
imul
xchg
adc
mov
shrl
in
push
ja
jg
aad
cmp
icebp
mov
push
rclb
jnp
pusha
clc
cmc
xor
jno
jns
push
shr
addr16
aam
pop
lret
pop
popf
sbb
int
mov
cmp
pop
xor
dec
inc
ret
sti
lcall
mov
scas
out
xchg
push
mov
cs
mov
dec
sub
nop
pop
scas
stos
cmpsb
and
lods
pop
jae
mov
ds
sub
pop
xor
lcall
pop
mov
and
mov
cld
pop
imul
repnz
roll
xchg
push
mov
xor
orl
dec
pop
or
fwait
mov
mov
add
adc
xor
scas
mov
lods
iret
push
sahf
je
call
inc
mov
test
mov
push
and
mov
adc
xchg
push
inc
mov
lds
lret
ss
int
push
ret
adc
push
repz
imul
cltd
mov
cmp
mov
movb
fisttpll
xchg
push
or
lea
or
lcall
scas
or
pop
add
sub
test
xchg
mov
push
mov
lahf
insl
sbb
je
jge
sub
pop
lock
push
popa
add
cmp
int
xchg
shl
sub
std
mov
test
mov
or
mov
jmp
push
shlb
or
dec
in
aam
sbb
jo
test
cltd
in
mov
xor
and
pushl
jecxz
cli
push
dec
out
and
popa
enter
cwtl
inc
shufps
scas
inc
and
sbb
sub
cwtl
lahf
pop
jno
push
cmpsl
cmpsb
adc
jo
mov
jae
leave
fidivs
xor
dec
cmc
fisubrl
divb
in
push
in
sub
adcb
push
sbb
xchg
mov
and
or
addr16
push
sti
add
fiadds
and
test
dec
insb
dec
xchg
rcl
fwait
mov
jg
or
mov
mov
jne
fsts
inc
xchg
cmpsb
cli
dec
pop
push
sbbl
cmpsl
fldl2t
lods
dec
jg
dec
mov
xor
xor
mov
mov
fimuls
xlat
mov
push
pushf
popf
xchg
jno
nop
inc
mov
mov
pushf
jp
mov
xchg
add
test
insb
ret
push
and
je
pop
push
xor
sub
stc
gs
dec
bound
push
xchg
test
adc
sbb
add
aad
roll
mov
sbb
xor
mov
out
test
mov
subl
hlt
mov
sub
loope
fdivr
xchg
jmp
adc
mov
popf
aad
inc
mov
cmp
mov
insl
or
sub
loopne
pop
cwtl
inc
mov
mov
sub
adc
inc
mov
ljmp
fneni(8087
xor
xchg
adc
push
pop
cmp
xchg
inc
pop
mov
sbb
add
clc
cmp
jo
jmp
fstps
mov
pop
sbb
xor
inc
loop
mov
xchg
filds
xchg
inc
arpl
dec
ss
push
mov
orb
repz
push
sbb
push
jae
add
mov
nop
sbb
cwtl
stos
jge
jbe
ja
hlt
cmp
out
sahf
jl
lret
cmp
jnp
mov
fcoms
aaa
fucomip
sub
xchg
mov
and
mov
enter
into
mov
push
imul
pop
sub
mov
orb
and
dec
sub
xor
sbb
addr16
push
testb
into
and
js
orb
add
dec
out
adc
mov
jle
das
scas
mov
shlb
mov
xor
fdivl
cmp
pop
lcall
xor
fldl
xchg
and
push
pop
inc
jb
pop
mov
xchg
sub
push
in
arpl
jo
mov
or
sbb
pusha
adc
in
pop
shll
adc
and
pop
cmc
add
js
jecxz
xor
iret
idivl
pop
push
jg
jle
cmp
jl
pop
jae
stos
ret
xchg
test
cmp
test
jge
movsl
aad
pop
push
push
test
sbb
subb
js
inc
sbb
subb
mov
sbb
sahf
ret
xlat
hlt
jae
or
outsl
lahf
mov
and
add
loope
add
push
fmull
notb
add
mov
jmp
push
mov
inc
fcompl
ret
pop
cltd
add
sub
cld
pop
int3
xor
ds
sarb
testb
fimuls
sbbb
inc
cmp
push
sub
dec
mov
in
loope
and
sub
dec
push
popa
adc
psubw
or
and
inc
pop
outsb
pop
mov
jg
je
jl
or
sub
sbb
xchg
sbb
push
adc
daa
lahf
mov
push
cli
test
shll
xchg
mov
mov
sbb
push
jbe
xchg
adc
fisttpl
jmp
ror
push
mov
cmp
add
or
push
out
out
mov
or
loop
insb
in
cmp
cmp
rol
inc
cmp
inc
das
xchg
push
pop
ret
jbe
jl
mov
mov
dec
and
repnz
loop
add
cmc
xchg
dec
or
out
push
divb
and
adc
adc
mov
loop
dec
das
dec
or
adc
imul
clc
push
test
aam
push
popa
adc
mov
fs
outsl
or
ret
repnz
pop
sbb
jmp
imul
lods
scas
push
pop
pop
xchg
xchg
into
repnz
test
mov
es
and
lock
push
cmp
arpl
dec
or
outsb
fdivs
into
sub
icebp
dec
mov
aaa
mov
stos
frstor
jno
stos
call
xchg
jg
sbbl
arpl
cli
lds
inc
add
inc
mov
add
insl
sub
jl
or
out
test
mov
int
cmp
lahf
xchg
aad
inc
cmp
push
notb
clc
pop
mov
and
int
fwait
cmp
aad
dec
push
imul
pushw
sub
popf
push
daa
adc
sub
and
fsubs
les
test
jmp
inc
xor
dec
leave
xchg
test
push
int3
lret
or
rcrb
mov
push
sbb
inc
cmpsb
pop
test
sub
cmp
pop
mov
ret
fs
fisubrl
pop
inc
dec
xchg
fadds
cmove
mov
popa
xchg
xor
sbb
mov
mov
pop
call
int
lcall
idiv
fimuls
cmp
and
lret
push
cwtl
and
outsb
je
dec
pop
ljmp
mov
mov
add
icebp
mov
lds
mov
jg
mov
insb
lcall
mov
adc
mov
call
mov
mov
popf
and
jmp
fimuls
mov
sbb
mov
jmp
fdiv
insl
test
pop
daa
and
fisttpl
mov
out
add
lock
fstpt
sub
outsb
setb
gs
pop
inc
test
rorl
neg
add
add
ss
pop
adc
inc
xchg
push
pop
mov
jmp
dec
movsb
imull
fldl
push
dec
sub
sbb
mov
mov
cmc
cmp
inc
gs
int
das
jb
mov
sbb
add
filds
cmpsl
in
xchg
jge
sub
lahf
mov
mov
bound
outsl
shll
pop
inc
fldcw
cmp
lock
enter
faddl
push
rorl
xlat
push
sub
out
jns
sub
subb
jmp
addr16
aas
test
js
fstps
sub
mov
je
jno
add
cmpsl
or
push
or
mov
les
rorl
push
mov
cli
jmp
jge
sti
ja
xor
xor
push
fcompl
push
cld
jo
pop
sbb
push
cmp
mov
es
push
ret
dec
bound
xchg
cmp
jp
cmp
inc
insb
or
jp
flds
and
xchg
and
scas
mov
int
aaa
hlt
or
mov
rcrl
dec
mov
ror
sahf
pusha
dec
jns
push
test
clc
notl
stc
cmp
insb
inc
shll
js
jl
push
sub
data16
data16
add
or
push
into
cmp
sub
push
and
pop
and
push
pop
cmpsb
addl
sbb
jecxz
mov
and
sbb
xor
outsl
or
mov
jbe
leave
push
in
sbb
and
push
sbb
xchg
loope
pop
jbe
fstpt
and
jmp
dec
fnstcw
icebp
or
lea
sbb
sarb
loope
mov
sub
iret
outsb
cmc
pop
das
bound
and
and
iret
aam
dec
aas
sub
and
rol
or
adc
lret
ret
sbb
adc
lods
cmp
push
jecxz
test
xchg
popa
pop
leave
mov
sbb
xchg
sub
es
imul
mov
shrb
xor
addb
inc
outsb
fcmovnbe
sti
in
pop
mov
mov
pop
mov
mov
jno
xchg
jmp
inc
imul
rcll
jo
rcl
mov
adc
leave
negl
jnp
icebp
cli
xchg
adc
ljmp
fimuls
cli
mov
insl
aad
ja
outsb
mov
clc
pop
or
cmc
add
stos
xor
addr16
nop
pusha
fsubs
push
dec
mov
shlb
cmpsl
dec
icebp
imul
mov
dec
mov
pop
push
into
cmp
dec
insl
je
mov
or
jg
cld
xor
out
jbe
inc
dec
or
aad
fs
addb
addr16
fldcw
dec
std
mov
xor
jl
pop
add
pcmpgtw
mov
addr16
lea
jmp
ss
and
into
fisubl
nop
fmul
stos
pop
or
mov
dec
ss
mov
popa
jne
adc
dec
cmc
lds
sbb
inc
ljmp
jae
push
adc
imul
into
testb
pop
jge
push
cmc
jl
shlb
jmp
push
cli
out
pop
ret
in
in
sbb
sbb
mov
sar
mov
inc
sbb
in
sarl
push
stc
stc
rclb
push
mov
enter
and
xor
push
and
adc
pop
je
xchg
adc
xchg
clc
bound
xor
movsl
and
shrb
and
mov
movsb
out
jp
xchg
fstl
repnz
movsl
push
xchg
daa
mov
les
pop
mov
comiss
aam
dec
or
push
cmp
stos
aas
scas
adc
xor
fdivrp
rorb
cmpsl
adc
leave
andb
test
mov
xchg
stos
pop
xor
push
and
je
clc
inc
insl
inc
cwtl
fldt
push
inc
pop
divl
sar
scas
add
xor
adc
shl
mov
jecxz
adc
inc
lcall
xchg
jbe
daa
test
push
gs
push
push
fs
fistps
push
dec
stc
push
sub
mov
or
icebp
scas
lds
mov
ret
cli
shrb
add
push
push
pop
jno
add
daa
out
xor
and
lea
cld
push
cli
mov
xchg
jmp
xor
dec
fninit
out
jns
out
add
fcompp
popa
movsb
insb
xchg
ret
xor
dec
inc
outsl
push
daa
jg
push
push
mov
repz
or
mov
ja
call
or
lahf
ja
daa
inc
std
les
jecxz
adc
xchg
xchg
pop
adc
or
push
and
fs
sub
jle
cwtl
jae
leave
jb
mov
je
into
or
mov
mov
fdivrl
sub
cmp
test
daa
sbb
push
sahf
xchg
xlat
mov
push
fistps
je
cmp
fadds
jge
sbb
pop
loopne
push
js
push
faddp
dec
inc
loope
stc
sub
out
and
shlb
in
stos
ret
mov
inc
or
add
movsb
in
and
push
jg
adc
mov
mov
jnp
jp
sbb
xor
dec
rcll
jg
imul
pop
push
cmpb
dec
xlat
bound
mov
xchg
dec
jmp
sbb
lods
or
cmp
into
addr16
out
jecxz
add
aas
ret
dec
sbb
inc
scas
adc
adc
testl
popf
movsl
pop
lea
adc
and
dec
jg
clc
mov
movsb
lods
imul
pop
iret
xchg
jnp
mov
xchg
pop
inc
mov
push
cltd
lret
std
jne
cmp
cs
orl
add
fimull
xor
lahf
scas
mov
fisubs
mov
jge
push
inc
popf
les
daa
out
and
sub
in
sar
leave
stos
mov
jp
nop
cli
pop
add
addr16
gs
out
dec
lahf
or
jb
scas
ficompl
icebp
push
inc
insb
dec
aam
and
bound
scas
jb
jae
cmp
or
push
cmp
rolb
jp
xchg
push
add
enter
mov
dec
lcall
or
lods
clc
iret
fdivrl
xchg
mov
push
daa
xchg
jcxz
pop
jl
iret
out
push
cld
jg
cld
push
pop
out
add
mov
js
shrl
jmp
int3
out
inc
dec
inc
pushw
push
or
aam
xor
call
xchg
test
sub
dec
pop
dec
ficoml
cmp
mov
pusha
push
in
or
mov
jae
lret
jo
lret
iret
cmpsb
in
fwait
adc
mov
sarl
and
shrl
es
in
js
popf
mov
ljmp
jb
ss
cltd
pop
cmp
push
pop
cli
mov
mov
jbe
xchg
and
add
cmp
push
lahf
xor
roll
pushf
sbb
mov
scas
push
mov
lahf
add
xchg
ret
out
cltd
mov
insl
popa
jno
jp
mov
xchg
add
push
add
roll
in
pop
sbb
outsl
jne
push
add
arpl
dec
arpl
sbb
xchg
mov
xchg
mov
dec
incb
pop
addr16
jns
xchg
mov
pop
and
and
sahf
xchg
dec
icebp
mov
bound
das
mov
pushf
mov
iret
dec
lods
lds
lahf
sub
add
fildll
jge
bound
jbe
jmp
push
mov
push
lea
add
leave
cmp
adc
loope
jo,pn
and
mov
mov
jge
dec
sbb
dec
xchg
dec
fisubl
fwait
mov
jnp
dec
or
dec
insb
stos
xor
gs
add
jnp
xor
loope
or
cli
imul
inc
out
sbbb
dec
mov
in
dec
out
gs
scas
sbb
dec
mov
pop
xor
stos
xchg
scas
cmp
or
dec
rcll
lcall
out
notb
xchg
inc
adc
ret
xchg
and
mov
sbb
stos
loopne
adc
stos
out
shrb
dec
mov
sbbb
cmp
out
fsubrp
adc
fwait
imul
mov
mov
cmp
mov
or
scas
xchg
insb
stc
jecxz
and
shlb
or
and
pop
arpl
rcl
std
rolb
add
test
mov
fcoms
ds
gs
push
lret
bnd
cmpl
rorl
mov
inc
sbb
cli
ds
icebp
ret
fwait
add
and
lea
ds
mov
push
aad
push
push
xchg
push
dec
lods
cmp
div
nop
imul
fistpl
push
pop
dec
jns
inc
fsubrp
inc
lea
jge
call
xorl
addl
mov
pop
or
scas
push
arpl
cmpsb
push
dec
xchg
xor
das
lods
into
lock
pusha
push
dec
mov
pop
inc
adc
pop
iret
push
pop
pop
stos
mov
or
and
shll
es
jnp
pop
ret
aaa
and
push
in
test
xorb
dec
js
je
mov
and
push
into
push
movsb
das
and
sub
push
call
xlat
and
push
and
imull
fmull
shlb
sub
jnp
mov
pop
mov
jp
sti
test
aaa
xor
lcall
jle
dec
movsl
out
into
sbb
fstpt
jne
pop
mov
aas
and
jae
gs
lods
fwait
dec
push
cmp
jmp
jl
dec
inc
jmp
cmp
jle
sbb
jo
dec
cmp
addr16
sahf
gs
in
xchg
mov
sbb
inc
repnz
add
xchg
int3
jb
mov
mov
std
sbb
xor
cmp
mov
jae
inc
mov
and
lret
hlt
jp
push
ficoml
addl
jb
cmp
ret
pop
xor
data16
adc
mov
dec
dec
xchg
mov
insl
out
pushf
shlb
mov
fdivl
f2xm1
pop
testl
imul
in
push
lret
shl
in
pushf
mov
testb
fsubr
std
cmp
fld1
cmp
aas
mov
sbb
mov
pop
in
int
jge
sub
movsb
or
cs
sub
jbe
aaa
and
pop
mov
dec
cmpsb
fs
daa
iret
push
or
sbb
lret
inc
ss
fdivrl
sahf
jmp
sub
mov
adc
in
inc
insb
icebp
jmp
aad
xchg
mov
pop
rolb
jmp
pop
pop
hlt
mov
sbb
dec
sbb
or
cmp
dec
mov
or
lcall
jb
ffree
sub
mov
out
fcompl
ficoms
or
adc
ret
fdivrl
shl
repz
repz
or
movsl
jns
adc
xchg
mov
mov
out
clc
and
push
jno
popa
ds
xor
test
add
lret
or
jne
add
fistl
popf
stos
fwait
rclb
sbb
hlt
lods
clc
push
push
lcall
pop
jecxz
bound
mov
or
ja
mov
xorb
out
xor
andl
cwtl
push
orl
subb
inc
rcl
je
dec
inc
arpl
xor
imul
adc
jge
push
inc
jp
pushl
repnz
negb
in
cmpsl
js
push
mov
rcll
cltd
icebp
insb
adc
movsl
repz
add
ror
jns
stos
push
lods
insl
xor
pusha
fldenv
lret
mov
test
inc
add
hlt
xor
xchg
into
dec
xor
mov
mov
cld
push
clc
outsl
clc
jo
mov
pop
push
sarl
push
add
mov
cmp
ljmp
sub
fldl
and
cltd
hlt
pop
dec
dec
lret
rcrl
jne
mov
dec
lods
mov
push
cltd
mov
shl
mov
sub
pop
adc
bound
dec
bound
ret
bound
repz
in
loopne
xchg
shll
dec
mov
clc
loopne
cmp
cwtl
adc
shl
out
mov
lds
movsb
shr
adc
push
call
out
lock
into
sbb
in
mov
subb
mov
mov
cs
outsb
arpl
aaa
jmp
imul
mov
mov
insb
jno
push
mov
outsb
frstor
in
xchg
cmp
ss
jl
movsl
es
push
mov
aas
fiaddl
lret
repz
imul
ds
dec
mov
pop
jp
jecxz
sbb
inc
push
out
ffree
aad
cli
sub
and
adc
mov
popa
push
inc
push
dec
in
int3
mov
sti
pop
lods
dec
pop
and
mov
int
dec
testb
inc
pop
sub
jge
mov
xchg
mov
mov
roll
and
les
les
sub
std
ret
adc
jno
jmp
pop
fcomps
leave
mov
test
push
jns
or
push
fstps
and
subb
cmc
inc
ror
insl
arpl
int3
cmp
jecxz
ret
scas
outsb
add
icebp
xchg
insb
mov
lods
jnp
aad
jp
fdivs
xor
pop
inc
orb
xor
faddl
push
daa
in
mov
jae
subb
lahf
xor
cmc
or
lock
xor
addr16
xchg
test
sbb
jge
sbb
mov
nop
inc
popa
gs
rorl
arpl
mov
es
add
sbb
enter
pop
outsb
test
cld
xor
push
mov
push
insl
enter
sbb
iret
adc
mov
xor
jecxz
stos
imul
push
and
dec
lcall
jmp
repnz
cmpsb
imul
or
jecxz
lea
cmp
mov
sub
lock
xor
shlb
jl
push
or
aas
push
out
xchg
push
xchg
mov
cmp
ljmp
pop
leave
mov
cmc
insb
dec
iret
lret
mov
fcomip
inc
pop
cltd
dec
mov
fdivs
xchg
aaa
adc
mov
loopne
cmpsl
nop
pop
inc
mov
xor
icebp
inc
push
xor
sbb
pop
fwait
stc
inc
jb
xchg
aad
or
movsb
mov
sub
lcall
push
dec
push
mov
jno
push
pop
push
fmulp
arpl
aam
outsb
stos
xchg
mov
xchg
mov
xchg
iret
or
xchg
pop
mov
movsl
sub
or
sar
xlat
mov
stc
add
or
sbb
cli
sbb
lahf
sti
inc
in
dec
xchg
fistl
add
or
test
pop
ret
mov
jb
cmc
mov
enter
out
int
loop
popa
out
pop
into
pop
jb
aaa
iret
pop
loope
stos
lods
ljmp
cltd
pusha
dec
inc
sbb
bound
insl
inc
sbb
fsubl
xchg
add
cmp
cs
mov
shrb
xor
push
jmp
or
cli
push
inc
add
fwait
shlb
adc
rclb
arpl
xchg
out
stos
jecxz
push
das
icebp
sub
xchg
sarl
ljmp
or
or
xchg
inc
scas
push
in
push
xchg
stos
jmp
mov
out
adc
mov
pop
sbb
mov
cwtl
push
call
arpl
xlat
ret
cmp
or
mov
adc
outsl
clc
sub
fcomi
pop
jge
repnz
xorl
and
sub
push
out
ja
imul
or
outsl
add
pop
enter
gs
mov
adc
scas
jge
les
minps
mov
push
pop
fsubrl
aaa
add
or
enter
and
and
push
add
push
fwait
cs
mov
loope
mov
pop
lret
add
adc
jnp
mov
rorl
pop
sub
aas
je
add
ret
ss
mov
int3
cld
inc
sti
ret
pop
push
push
xchg
repnz
lods
in
ficoml
jg
or
enter
cltd
sbb
aad
insl
mov
xor
jle
int
dec
fstpt
xchg
push
scas
gs
addr16
pusha
insb
outsl
adc
idivb
ljmp
xchg
push
jg
outsl
imul
sub
push
xchg
adc
sbb
jbe
push
inc
lcall
lds
push
lret
xchg
sahf
xor
mov
sbb
and
cwtl
andl
xchg
mov
stos
mov
mov
enter
add
into
jnp
iret
sub
mov
add
or
in
xor
fwait
bound
inc
scas
pushf
insl
sbb
data16
and
rcll
test
cwtl
js
pop
int3
sbb
cmpsb
notb
inc
aaa
sbb
mov
jnp
js
xchg
push
inc
push
into
inc
jnp
sub
add
adc
mov
pusha
jo
cwtl
aas
divl
sub
jae
cld
inc
int
repnz
lahf
shl
ja
imul
inc
fcom
dec
or
mov
inc
pop
inc
xchg
mulb
jns
inc
insl
sar
fldl
xchg
push
xor
ret
stc
jne
dec
addl
mov
int3
mov
mov
test
push
mov
fcomp
and
iret
jl
ret
notl
ret
and
push
leave
or
adc
jnp
sbb
mov
shr
push
mov
movsl
fnstsw
sbb
cli
lods
test
mov
in
push
iret
rolw
pop
mov
outsb
and
cmc
xor
adc
or
rcl
dec
jle
popa
outsb
and
push
das
and
or
movsl
icebp
iret
and
loopne
cs
xchg
xor
int3
inc
call
xor
push
stos
loopne
out
es
fadd
sub
out
int
add
testl
adc
mov
scas
cmp
mov
stos
bound
dec
fldcw
test
pop
jo
into
push
lcall
fstl
popf
lock
inc
and
fdivl
push
shl
sub
jmp
aas
add
or
loope
or
lods
mov
icebp
rorl
push
push
sbb
scas
and
hlt
cmpsb
sbb
or
in
dec
das
xor
inc
insb
ljmp
cmp
sti
adc
out
mov
out
inc
dec
mov
enter
lods
lods
iret
sub
mov
aaa
push
push
sub
mov
add
xchg
adc
or
inc
mov
in
jle
adc
adc
pop
test
or
sbb
lods
test
es
pop
sub
lds
mov
sub
shl
dec
popl
inc
jle
addl
inc
loop
or
pop
dec
sub
ja
bnd
pop
cwtl
and
xchg
inc
cwtl
pop
gs
or
popf
sbb
sub
sub
pop
in
pop
mov
or
sbb
mov
inc
iret
push
shlb
popf
rorl
stos
iret
xchg
inc
jle
outsl
in
repnz
pop
sub
add
sbb
mov
xor
scas
repz
nop
mov
sub
jmp
sbb
shrl
xchg
adc
iret
fs
pop
sub
loope
lds
mov
cs
dec
mov
lock
fstpl
push
jbe
jb
dec
stc
outsl
jge
fwait
dec
xchg
mov
xchg
fmull
xor
dec
mov
sbb
cmp
in
dec
jmp
adc
and
push
sub
adc
add
test
popa
cmpsl
push
dec
stc
sbb
ja
jg
outsb
enter
cmp
pop
cmpsb
shll
mov
xor
dec
movsb
ds
jo
ret
out
pop
popa
and
adc
xchg
pop
pop
or
pop
jbe
push
lahf
or
jne
call
mov
mov
int
mov
fsub
add
xchg
pusha
xlat
les
mov
ds
fidivrl
fwait
int3
jno
or
rcrb
sti
mov
jge
cs
mov
lods
nop
sbb
xor
pop
movsl
sbb
sub
sbb
ss
jno
or
jle
bound
loopne
imul
mov
dec
mov
addr16
inc
loop
xchg
pop
mov
mov
es
scas
xchg
rorb
jmp
loopne
popa
cltd
push
lahf
ljmp
imul
out
xor
mov
or
ret
ffree
push
aam
pusha
mov
jmp
lea
fcmovnb
insl
sub
imulb
pop
scas
int
inc
push
pop
ljmp
out
add
cmp
pop
dec
stc
mov
rorl
lock
or
sbb
pop
imul
add
fmuls
std
cmp
xlat
cld
stos
add
enter
xor
dec
popa
fcompl
dec
inc
in
sbb
in
cmpsb
loopne
imul
push
dec
pop
xchg
fildl
mov
aaa
sbbb
test
aad
mov
mov
sub
xor
sbb
mov
inc
and
lahf
fs
pusha
jge
insl
push
not
add
lcall
adc
or
cmp
insl
repnz
mov
adc
add
or
add
fcmovnb
iret
test
ljmp
mov
fstl
mov
push
enter
out
inc
adc
or
in
jmp
daa
sub
xchg
icebp
mov
int3
js
out
ljmp
mov
mov
cmp
out
int3
cld
push
bound
pop
pop
cmp
jno
cmp
add
test
shll
dec
and
repz
test
mov
cmp
cltd
jle
fisubl
fwait
pop
sbbl
insb
xlat
das
hlt
mov
push
repnz
ficomps
andl
les
mov
lahf
or
mov
jbe
fistl
push
and
mov
addr16
cli
jb
xor
xor
std
pop
movsb
daa
jb
lahf
inc
lcall
lock
hlt
or
mov
and
pop
mov
mov
outsb
or
sub
push
lods
and
popf
out
dec
sbb
sbb
dec
addr16
inc
inc
fnstenv
int3
add
push
lock
add
sbb
sbb
data16
jo
mov
insl
bound
ret
adc
mov
adc
call
mov
scas
movsl
mov
push
mov
jp
sbb
rclb
fistps
repnz
sub
adc
xor
cli
popf
and
cmp
mov
push
xchg
imul
jle
test
dec
insl
ja
pop
imul
test
jae
xor
cs
push
enter
adc
and
mov
out
fwait
pop
les
frstor
xchg
jmp
add
les
int
outsb
out
jb
sbb
jbe
jb
pop
xlat
push
jge
mov
jae
mov
cwtl
or
inc
stos
and
stos
add
lcall
mulb
mov
inc
jmp
imul
mov
add
addr16
and
cs
lods
jae
fimuls
and
pop
mov
jns
shll
arpl
cmpsb
mov
xorb
lret
inc
int
mov
mov
aad
inc
std
out
add
mov
jl
adc
xchg
or
aas
cmc
add
xchg
daa
inc
negl
loop
push
adc
add
lods
jae
add
setle
orb
inc
cli
cmp
pop
rolb
mov
mov
pop
push
shll
les
test
sbb
pop
pop
fs
fistl
add
mov
test
out
dec
xor
fidivs
sub
hlt
or
sbb
dec
cmp
jmp
inc
or
mov
js
xchg
aas
cmp
jnp
mov
fpatan
ret
mov
jp
jno
nop
inc
fsts
aaa
cwtl
stos
add
out
fwait
sub
xchg
ds
outsb
dec
ds
mov
pop
sahf
sub
jnp
sbb
add
cltd
mov
call
lahf
pop
pop
xchg
inc
dec
cmp
in
cmp
push
mov
cltd
das
xor
inc
jecxz
fisubs
popa
pop
mov
jmp
xchg
mov
jp
rcrl
xor
lret
sbb
stc
dec
das
fs
mov
call
fidivs
in
xchg
xchg
int
das
int
cmp
fists
push
adc
adc
dec
push
cmp
movsb
cmp
pop
notb
mov
dec
movsl
rorl
and
mov
xor
test
xchg
dec
dec
out
repnz
inc
xor
fstpl
jle
sbb
into
pusha
mov
test
lret
sub
icebp
mov
sub
xchg
je
push
lret
test
scas
popf
adc
insl
push
test
lods
les
aaa
shlb
fisubl
mov
xchg
lcall
adc
add
sbb
icebp
lods
mov
inc
rcll
xor
out
bound
cmp
aam
fs
negb
into
imul
jecxz
cwtl
shlb
dec
push
mov
or
lret
rep
inc
push
repz
adc
fnsave
dec
lock
out
push
cmpsb
pop
mov
pop
xchg
add
mov
jo
mov
stos
sbb
dec
mov
fidivrs
int
mov
je
test
inc
mov
notl
xchg
pop
subb
data16
mov
mov
shll
push
push
cltd
fldlg2
push
sbb
or
icebp
mov
mov
pop
pop
mov
data16
fmul
fbstp
pop
push
mov
push
pop
lea
addr16
mov
xor
jne,pn
les
movsl
push
ja
cmp
cmp
in
out
xchg
std
sub
pop
repz
out
pop
inc
clc
enter
decw
pushf
dec
dec
mov
pop
mov
adc
mov
fisubrs
xchg
scas
imul
sbb
fidivl
mov
pop
xor
call
rorl
loopne
mov
adc
add
push
rcl
iret
stos
push
adc
test
jbe
loope
rclw
or
stos
cmp
in
push
shrb
movsl
sar
arpl
aas
test
test
imul
pop
lods
cmp
std
in
in
inc
cld
sbbl
xchg
jbe
jmp
test
xor
hlt
arpl
and
sarb
sbb
pop
es
popa
lods
out
mov
and
icebp
cmp
sub
and
fldl
xchg
add
cmp
int
xlat
nop
push
xchg
ds
fadds
lods
cmp
insl
xor
xchg
sbb
pop
outsl
and
xchg
cs
inc
sbb
arpl
lret
bound
test
mov
lahf
mov
fdivl
fbld
mov
pop
xchg
leave
in
adc
jg
hlt
mov
or
xor
or
push
std
or
and
aam
xchg
scas
push
fsts
iret
clc
lret
mov
sahf
aas
sarl
pushf
gs
mov
push
cmp
loope
pop
dec
pop
mov
xor
push
mov
push
jmp
movsl
insb
rclb
pop
push
xchg
pop
lret
xor
xchg
fldenv
sub
xlat
gs
jecxz
adc
jnp
cmp
pop
mov
jmp
sbb
mov
dec
shl
enter
loopne
mov
pop
sub
std
mov
xor
int
lret
in
stos
xchg
sub
jns
inc
fsub
xor
mov
dec
call
icebp
rcrb
xchg
inc
int3
add
fistps
int
xchg
cltd
movsb
bound
mov
xchg
or
lret
ret
mov
adc
mov
orl
scas
mov
mov
js
xchg
dec
fcom
or
out
adc
sub
pop
mov
js
test
sub
out
xchg
xchg
cld
add
and
mov
push
pusha
inc
sbb
lods
imul
js
mov
cmp
unpcklps
test
pushf
pop
enter
cmpsb
cmpsb
add
lcall
cmpsb
notb
mov
ja
cs
loope
dec
or
mov
sti
push
orl
mov
aaa
sub
dec
dec
sub
cld
aad
jge
ljmp
and
pop
js
dec
sbb
push
mov
mov
and
pop
mov
je
xchg
mov
xor
pop
push
sub
test
cmp
adc
xor
nop
lods
inc
lock
orl
cmp
hlt
popa
cs
dec
push
outsl
push
and
xchg
cwtl
mov
ss
std
push
sbb
fnstsw
push
push
xchg
fsubr
or
stc
lods
in
sub
rcll
leave
add
xchg
stc
push
fdivl
shrb
inc
jg
add
stos
add
xor
mov
call
mov
shlb
loopne
mov
imul
adc
js
fcmovnb
cmpsl
jo
into
rcrl
lcall
mov
pop
add
xchg
stos
test
imul
dec
jge
add
add
enter
inc
push
mov
jo
cwtl
enter
bound
mov
pop
jns
js
jno
out
aad
ret
es
clc
test
push
nop
push
dec
inc
ljmp
xchg
pop
xor
inc
mov
imul
shl
sti
fs
jl
mov
jmp
popa
test
mov
andb
mov
xor
into
adc
push
negl
lods
dec
iret
cli
cltd
dec
sahf
loopne
push
subl
sti
popf
mov
inc
sub
mov
jl
add
cmpxchg
mov
mov
in
cmp
pop
xor
mov
jae
push
bound
stc
test
es
xchg
mov
xchg
xor
popa
sbb
cwtl
sbb
inc
clc
pop
and
es
mov
jbe
jb
inc
outsb
in
xor
xchg
or
jmp
rcrl
and
rcll
push
out
add
movl
xor
scas
push
jo
mov
pop
and
std
mov
ljmp
call
test
push
mov
adc
mov
cld
xor
mov
addr16
pop
add
cs
cmc
loop
lods
repnz
xchg
out
std
lds
scas
xchg
pop
sub
das
mov
and
mov
lods
push
push
dec
dec
ljmp
xchg
arpl
xchg
add
mov
sub
dec
inc
mov
jecxz
aad
cwtl
push
jnp
les
jp
lret
fistpl
xlat
insl
inc
mov
fs
nop
and
adc
das
jae
fwait
ss
clc
xchg
xlat
addr16
loopne
enter
mov
lahf
and
cmp
ror
jb
out
sbb
sub
mov
aas
mov
mov
mov
in
xor
xchg
idivb
lret
jmpw
sbb
add
jne
add
bound
imul
sub
iret
cmc
xor
fiaddl
cmpsb
out
add
jns
mov
push
inc
aaa
lahf
das
jge
sbb
dec
out
psrlw
stc
inc
mov
repz
enter
push
xchg
sub
cmp
mov
pop
sub
sti
ret
outsl
mov
mov
cmpsb
jecxz,pt
inc
negl
and
sarl
movsb
lods
push
out
ljmp
jle
sub
mov
hlt
jge
mov
les
fs
pop
xchg
sbb
jno
add
insb
gs
cmp
sahf
adc
fildl
inc
inc
out
inc
or
out
mov
lds
nop
push
stos
pop
add
lock
jmp
mov
cmc
out
and
gs
outsb
int
aas
inc
icebp
xchg
mov
jl
sar
iret
jb
js
adc
dec
fwait
mov
outsl
lret
dec
gs
and
ret
mov
shlb
add
jge
pop
or
jbe
loopne
adc
dec
lods
lret
loopne
lock
push
aam
out
mov
or
adcl
sub
lods
sub
ss
mov
push
out
les
icebp
adc
loop
sbb
xlat
or
je
loopne
stos
and
lret
dec
add
sub
mov
jb
inc
mov
test
sub
ret
dec
jno
sbb
push
jno
out
fnsave
aas
sub
xor
pop
pop
xor
jl
pop
push
inc
daa
cmp
daa
cmp
in
data16
and
cli
jle
ret
out
fisubrl
push
lds
cmpsb
je
or
popf
mov
and
pop
pop
rorb
or
adc
and
push
jnp
inc
in
dec
or
jmp
lds
cli
lea
mov
outsb
xchg
adc
or
in
loope
add
imul
pop
arpl
jmp
add
xchg
mov
adc
lea
xchg
push
or
mov
inc
loopne
lahf
subb
adc
fdivr
lcall
mov
loopne
jno
pop
outsl
aad
jnp
cmp
mov
push
out
mov
outsl
dec
dec
test
and
mov
insb
test
xor
fmulp
jle
inc
rol
aas
inc
hlt
clc
fisttpl
je
jnp
jmp
movsl
mov
xchg
popf
mov
loope
stc
enter
mov
mov
pop
pop
adc
dec
dec
xchg
xlat
fildll
mov
add
cmp
dec
adc
lcall
cmpsl
jne
xchg
inc
jl
and
outsb
rcl
push
aas
mov
je
or
mov
jno
mov
inc
out
pop
mov
fldlg2
inc
jns
mov
lods
jae
cmp
lret
or
cmp
cwtl
pop
mov
lods
test
pop
loop
mov
sub
adc
pop
jmp
decl
daa
lcall
addr16
bound
nop
into
jo
cld
out
loopne
lcall
pop
cmc
pop
xor
jmp
push
xchg
stos
inc
pop
add
xchg
pop
push
repz
jbe
jecxz
out
dec
daa
xchg
inc
in
inc
popf
cltd
lods
dec
mov
aad
iret
xchg
dec
cmp
fs
nop
dec
cmpl
xor
fnstsw
xchg
insb
mov
addr16
xorb
dec
mov
jns
scas
sbb
or
in
and
lea
cs
ja
cmp
bound
push
frstor
int3
sahf
jmp
jge
rolb
test
bound
scas
or
cli
dec
fdivrs
mov
inc
sbb
push
fldenv
cmpsb
mov
mov
test
or
mov
adc
rol
dec
push
dec
xchg
jp
push
rcll
sub
cld
mov
mov
lcall
adc
push
pop
inc
pop
mov
jge
adcl
jecxz
xor
pop
sub
pop
fisttpll
dec
xlat
pop
adc
int3
call
mov
cmpsl
cmpsb
push
jbe
outsl
imul
dec
dec
dec
cmpsb
aaa
mov
cmp
mov
dec
push
insl
fnstsw
jns
sbb
pop
push
xchg
daa
fisttpl
inc
dec
sub
add
ret
xchg
imul
and
faddl
stc
mov
cwtl
inc
cmpsl
pop
jnp
mov
cmp
js
imul
push
jne
lock
mov
and
in
cmpsb
repnz
hlt
pop
out
cmp
ja
test
sub
dec
leave
jnp
pop
mov
dec
sbb
jg
jg
mov
stc
xchg
mov
pop
or
and
add
xor
pushf
push
dec
xchg
data16
nop
test
bound
mov
sbb
xlat
or
sbb
popa
inc
xchg
aad
sub
sbb
jo
repz
out
test
cmpb
movsb
mov
andl
faddp
cmp
jl
ljmp
mov
lcall
inc
scas
pop
sbb
bound
pushf
loope
jp
sbbl
xchg
loope
cmpsl
push
inc
les
andw
xor
inc
mov
jecxz
adc
pop
in
sarl
je
pop
ret
pop
inc
je
push
orb
aas
or
add
aam
dec
lock
mov
push
lds
test
dec
loop
jecxz
jno
sub
int
mov
mov
pop
stos
sub
inc
jns
mov
out
xchg
ror
addr16
or
and
cmpsl
or
inc
insl
adc
jp
cmp
cld
dec
data16
lahf
lea
adc
push
stos
inc
addb
jb
adc
lea
sbb
stc
xorb
xchg
inc
roll
test
mov
bound
add
rcrb
lock
jno
jecxz
or
out
cmp
and
ds
enter
and
jg
xchg
push
movsl
dec
dec
xchg
xor
cmpsb
fwait
push
add
inc
js
inc
mov
jnp
lahf
inc
shrb
dec
idivl
mov
jo
cli
mov
jae
scas
pop
fdivrl
xor
iret
add
arpl
push
enter
and
push
mov
mov
jns
fwait
or
addr16
movsl
fprem
in
ja
add
jns
xchg
outsb
fucomi
push
lods
jle
push
fcoml
fsubr
and
adc
fcoms
fisubl
jo
push
enter
pop
xchg
xchg
outsb
mov
adc
cmc
xchg
dec
adc
loop
ljmp
imul
dec
xchg
adc
sub
mov
scas
push
filds
or
adc
add
push
and
mov
fwait
cmp
enter
outsb
pop
dec
orb
sbb
mov
adc
mov
loop
add
scas
imul
mov
mulb
inc
insb
sub
bound
or
xchg
hlt
mov
in
adc
mov
scas
out
or
cli
xchg
pushf
stc
lret
add
out
sub
pusha
jb
xchg
mov
repnz
rcrb
sti
sbb
jl
pop
icebp
pushw
or
lret
fwait
pop
lret
inc
fbstp
or
repnz
dec
cmp
rclb
daa
mov
jle
fwait
lcall
icebp
rep
iret
mov
dec
int3
pop
pop
mov
lea
sub
outsl
add
popf
add
insb
sahf
mov
das
jge
shl
xor
in
jo
fsubl
loop
and
cwtl
int3
enter
xchg
ret
cltd
and
pop
leave
xchg
lahf
insb
dec
mov
ret
lret
jne
int3
aam
test
jecxz
pop
sbb
xor
out
sub
xchg
push
bound
ss
stc
data16
pop
int3
xor
push
sbb
test
mov
mov
push
jns
aas
xor
repnz
addr16
xor
arpl
gs
sub
inc
testl
adc
das
mov
testb
jo
shr
sbb
cltd
outsb
ficoml
lret
sub
rcrl
lock
or
loopne
jp
mov
mov
jne
mov
aas
fnstsw
xchg
push
mov
mov
inc
pushf
cli
sahf
mov
add
xchg
and
adc
sub
out
cld
out
lcall
bound
enter
shl
aaa
pop
hlt
cmp
pop
adc
insl
mov
jns
mov
lret
and
nop
add
mov
mov
mov
addb
adc
inc
ss
fildl
mulb
adc
stc
dec
fwait
pusha
mov
std
xchg
push
xorb
pop
int3
out
or
mov
xchg
xchg
loopne
sbb
or
xchg
pop
lahf
sbb
mov
add
or
add
test
mov
mov
sbb
mov
push
sahf
dec
dec
xor
fidivrs
and
leave
and
or
repnz
rclb
int
and
dec
or
cli
sbb
das
jo
mov
jnp
repz
pusha
cmpsl
dec
decb
cmp
int3
data16
push
xor
and
add
jge
adc
lock
cmp
mov
enter
inc
loop
xor
xchg
subl
add
sbb
push
jno
push
outsb
push
mov
in
add
mov
lret
mov
fucomip
sub
fwait
mov
mov
lret
imul
dec
dec
push
and
lahf
fisubrl
xchg
imul
inc
imul
jae
aad
loope
xor
jae
sbb
cmp
das
mov
repnz
loop
cmpsb
test
push
jno
aam
in
imul
sub
arpl
xchg
arpl
xchg
lock
test
dec
frstor
mov
sub
fcmove
dec
imul
fistpl
cmpsl
aaa
ljmp
std
inc
mov
push
mov
aas
adc
fwait
add
mov
and
test
and
insb
sbb
pop
cmc
xorb
or
dec
insb
insl
pop
out
pop
pop
loopne
outsb
int
pop
jae
ret
out
scas
jne
rcll
imul
nop
cmc
jp
sbb
dec
cmc
stos
push
lds
bound
sub
lea
mov
lcall
adc
test
push
dec
scas
jp
cmp
xor
mov
jg
movl
and
loop
sub
xchg
push
pop
add
jg
test
lods
shlb
mov
mov
inc
in
rol
jecxz
and
mov
scas
es
aaa
enter
aad
inc
jae
into
shlb
es
adcl
cmc
cs
rclb
clc
enter
pop
mov
pop
pop
je
adcl
cmp
add
hlt
out
pop
sub
scas
mov
mov
dec
mov
sti
mov
les
cld
sbbl
int
push
xor
inc
push
mov
fdivl
cmpsb
push
cli
pop
testb
jg
jb
js
je
pop
mov
mov
xchg
or
add
jno
and
jl
movsl
ss
jp
sub
adc
xor
fwait
call
icebp
xchg
xchg
ds
or
sub
or
jne,pn
in
out
adc
stos
dec
pop
adc
pop
dec
pop
lahf
lahf
jno
iret
fists
das
mov
sbbb
and
shl
jp
cmpsb
outsb
cmpsl
in
es
fsts
in
pop
icebp
pop
mov
ljmp
mov
mov
fmulp
jle
imul
mov
xchg
fsubrl
jmp
pop
pop
cli
int
jno
bound
jne
cmp
add
lock
test
jne
adc
mov
loop
pop
in
jns
push
jo
les
adc
or
and
push
icebp
and
ret
pop
dec
pop
sub
jno
push
movq
xchg
movsl
scas
jg
pop
dec
ret
xchg
sbb
test
pop
stc
mov
pop
mov
stos
or
mov
cmc
mov
std
jb
movsb
inc
call
loopne
inc
adc
xchg
sub
xor
jge
test
fisubrl
loopne
inc
gs
aaa
pop
loope
jmp
fimull
repz
inc
dec
divb
sub
and
mov
sbb
mov
fadds
mov
xchg
jmp
or
inc
jno
fs
pop
popfw
cmp
cmc
lret
inc
mov
loopne
aad
mov
aad
jmp
enter
mov
fbld
ds
jle
and
fisttps
outsl
mov
imul
mov
iret
adc
push
and
in
push
jne
or
pop
push
sti
cmp
cmp
rcll
adc
lods
sub
mov
es
pop
dec
filds
mov
punpckhwd
lcall
pop
mov
mov
mov
ja
jge
test
sbbl
add
xchg
roll
add
jae
mov
adc
inc
movsl
inc
add
call
pop
push
mov
jne
add
and
jnp
faddl
mov
imul
je
fucomip
cmp
pop
mov
outsl
jmp
xor
pop
ss
pushf
xchg
roll
pop
testl
call
mov
sbb
mov
sti
jmp
push
cmp
push
js
cmpsl
push
push
add
in
adc
iret
in
pop
push
lcall
cmpsl
mov
lret
in
int3
shll
or
fs
ljmp
jnp
roll
fbstp
sarb
imul
dec
outsb
cmp
ror
shr
xorb
cli
mov
jmp
icebp
adc
or
or
adc
mov
inc
mov
xor
pop
mov
mulb
add
push
cmc
and
jnp
push
pop
inc
mov
cmp
arpl
and
movsb
adc
or
std
repnz
bnd
mov
fcmovnb
in
pop
js
int3
push
or
push
je
dec
xor
pop
mov
in
les
xorb
into
aas
repz
int3
xchg
daa
mov
sub
clc
jmp
in
jg
mov
loope
jne
fidivrs
inc
mov
sti
dec
mov
and
lds
and
add
fstps
xorps
je
jge
mov
inc
ret
mov
test
bswap
cmp
loope
mov
outsl
pushf
pop
xchg
out
rol
sbb
mov
fiaddl
gs
jae
sub
cld
inc
lcall
jo
das
cmc
push
incl
ss
daa
push
mov
xchg
loopne
dec
subb
scas
jg
push
dec
lods
xor
lods
gs
movsb
xchg
pop
cwtl
int3
jb
pop
add
or
sti
fldenv
mov
fdivs
sbb
loopne
jbe
cmp
xchg
outsb
sbb
shrl
push
pop
sti
mov
add
loope
repz
cmpsl
jns
out
dec
jl
and
lock
lods
cmpb
push
jnp
cld
loopne
out
aam
shrl
mov
in
jl
in
lods
repnz
je
test
xor
adc
and
mov
ss
cmp
daa
dec
add
call
adc
and
repz
ja
xor
cld
push
sub
call
inc
dec
fidivs
stos
clc
fs
cmpsl
pop
cs
test
inc
xor
testw
sub
aad
jl
insb
add
outsb
cld
mov
lret
xchg
mov
and
pop
mov
cmc
sbb
test
or
lods
sbb
push
lret
push
rol
and
xchg
jae
adc
popa
mov
popa
cmp
sbb
xchg
insl
dec
jl
add
aas
out
outsb
sarl
aaa
adc
andb
xor
in
loop
and
or
jg
jae
pop
es
add
cmp
mov
test
mov
push
pop
test
xchg
pop
add
add
fmulp
push
mov
cli
cs
and
js
mov
xchg
xchg
and
andb
and
mov
cld
movsl
inc
cli
adc
mov
or
pop
push
sub
adc
lret
outsb
subb
mov
nop
clc
push
cmp
lcall
jg
inc
int3
sbb
outsb
and
lcall
pushf
sub
data16
ret
jns
je
aas
rcll
sbb
mov
test
ret
mov
ljmp
loop
xchg
dec
popf
mov
adc
mov
or
mov
lcall
or
jecxz
mov
mov
push
push
push
cmp
jmp
sub
fimuls
mov
and
out
mov
shrb
pop
popf
add
ja
jb
mov
adc
stc
arpl
jnp
call
ret
cwtl
loop
pop
push
ret
and
ss
fstp
out
loopne
or
scas
sbb
push
push
and
bound
mov
fs
dec
shlb
inc
cmp
sarl
push
mov
les
sbb
inc
aad
pop
jb
leave
add
pop
sbb
inc
pop
pop
adc
lret
add
pushf
pop
arpl
sbb
pop
lret
cwtl
ds
dec
test
jge
cmp
sbbl
sbb
or
lock
in
jp
jb
mov
call
loop
xchg
dec
fdivl
sub
adc
sub
fidivl
xor
addr16
ret
cli
fcmovb
fdivs
mov
nop
pop
push
pushl
mov
cmp
repnz
xchg
xor
test
mov
push
pushf
cs
sub
loope
repz
iret
bound
xchg
in
repnz
mov
jle
call
or
jbe
mov
push
and
and
jecxz
push
das
mov
out
inc
jnp
stc
fcomip
ja
jae
out
jmp
add
out
dec
xchg
ja
insb
push
xchg
pop
jecxz
sbb
xchg
or
imul
jae
mov
or
stc
pop
addr16
mov
outsb
imul
xchg
jp
dec
sub
sarl
xchg
cmovle
mov
xor
fs
mov
xor
sbbl
jg
lock
movsl
adc
test
dec
mov
lcall
cmpsb
mov
sub
sbb
inc
push
lea
pop
jecxz
cs
xlat
pop
inc
int
mov
ja
repz
and
movsb
or
xor
std
sbb
outsl
fs
cmp
jge
sbb
push
and
jmp
in
sarb
les
scas
ljmp
test
stos
jge
pushf
add
push
pop
cmp
jnp
int
mov
repz
insb
jge
xchg
mov
into
mov
leave
cmpsl
rol
mov
cmp
mov
loop
xchg
pop
aam
or
mov
hlt
clc
out
cltd
lods
cs
cmpsl
push
sahf
push
lret
push
insl
cmpsb
add
data16
imul
fisttps
iret
jecxz
mov
or
aas
scas
in
jbe
cmp
adc
push
dec
neg
rorb
test
dec
dec
fnstenv
push
pop
sti
push
add
movsl
adc
dec
shrl
stos
push
insl
inc
loop
xor
mov
clc
stos
test
gs
mov
aad
call
mov
in
mov
mov
inc
adc
lock
das
push
dec
nop
sub
mov
and
nop
jle
push
add
or
aas
enter
xchg
cs
inc
mov
push
cmc
lods
stc
mov
mov
arpl
mov
leave
dec
xor
dec
out
pop
dec
incl
cltd
js,pt
push
fisubl
mov
cli
ret
mov
adc
insl
in
lock
int3
out
sub
and
loop
popa
adc
or
stos
movsl
adc
cmp
push
loope
sub
mov
rcll
repz
or
lods
movsb
aaa
cvtsd2ss
mov
mov
jge
push
mov
std
pusha
push
popf
aam
addr16
sub
shlb
pop
repnz
jae
lods
adc
test
push
mov
pop
icebp
in
cmpl
pop
mov
gs
lods
std
add
fwait
out
jo
mov
push
roll
push
js
dec
xchg
or
icebp
insb
and
arpl
add
adc
ljmp
repz
stc
lods
loope
lcall
cmpsb
mov
mov
outsb
jp
jb
cmp
bound
stc
xor
mov
xchg
clc
xlat
dec
aas
icebp
dec
sub
mov
dec
lcall
imul
lret
mov
iret
and
inc
pop
cmp
and
push
mov
cmp
dec
repz
loop
push
pushf
stos
lret
pop
add
cmp
sub
arpl
xchg
sub
sub
or
addr16
sbb
push
loop
pop
dec
iret
push
push
lods
xchg
sub
ficoml
xchg
mov
enter
addr16
mov
cmpsl
clc
sahf
test
test
dec
in
mov
divl
push
xor
xor
and
inc
dec
int3
inc
sbb
sbb
xchg
lods
xor
stos
popf
dec
sub
cmp
sub
or
mov
dec
mov
iret
mov
inc
lcall
aas
in
cld
adc
push
ret
add
sub
rcrl
test
xchg
loopne
xor
sysret
fstpt
mov
push
push
pop
push
xchg
add
int
inc
cwtl
sbb
rcrl
in
dec
fwait
leave
mov
pop
jae
mov
nop
or
mov
lcall
je
cmp
pop
lahf
lds
insl
in
out
add
and
loopne
push
dec
cmp
call
xchg
in
fisttpl
adc
mov
shlb
mov
fnstsw
ljmp
stos
es
push
xchg
aam
mov
xor
add
aam
mov
jmp
sbb
insl
mov
ret
jbe
test
xchg
outsb
mov
daa
or
dec
icebp
add
jno
cld
iret
or
sub
or
cmp
bound
scas
cmp
cmpsl
cmp
jmp
sbb
add
les
jle
inc
imul
aad
movsl
pop
jne
out
outsb
lods
xorl
test
andb
push
mov
xchg
cmp
cmc
stos
cmp
xor
cmp
pop
orb
enter
hlt
lock
and
icebp
mov
jle
xchg
jg
or
mov
lds
ljmp
xlat
push
pop
popf
mov
lock
mov
sub
stc
jecxz
arpl
gs
mov
into
aam
push
fmuls
lods
pop
sbb
shlb
sub
adc
mov
sub
dec
shlb
dec
leave
lret
lret
int3
mov
cmp
stos
sarb
cmp
xchg
bound
sub
push
lret
and
outsb
out
and
cmc
call
cmp
out
xor
sub
add
xlat
dec
ljmp
pop
pop
mov
in
or
jmp
pop
sub
or
sbb
repnz
mov
jle
xor
pop
paddw
repnz
insl
jge
gs
xlat
bound
cmp
scas
aas
cmp
push
xchg
add
cmp
test
mov
pop
sbb
scas
jg
mov
sbb
mov
xchg
xchg
test
nop
mov
pop
in
inc
mov
pop
mov
pop
fninit
popa
popa
push
sbb
lds
lret
fwait
mov
ljmp
lea
xchg
clc
and
std
pop
add
sub
lods
pop
ss
push
and
pusha
pop
aad
lret
out
jle
jp
xchg
dec
xorb
movsl
std
cli
fcmovnu
addl
ror
xlat
mov
stos
xlat
jmp
pop
lods
cmp
sbb
cmp
cmpsl
enter
xor
inc
adcl
sbb
mov
dec
fstl
jp
out
pusha
ret
mov
cmp
cmc
mov
mov
jne
cmp
out
jae
clc
mov
inc
jp
nop
into
inc
shrl
call
adc
aas
add
decb
notl
loopne
cmpsl
or
and
sbb
inc
jno
or
adcl
ja
jo
sbb
and
add
dec
testb
xchg
test
notb
jmp
dec
rcl
jmp
iret
or
decl
and
rorb
fwait
or
stos
lea
gs
mov
ror
cmp
push
aad
mov
ret
push
push
xor
xchg
xlat
stos
add
out
mov
stos
sub
push
ret
clc
movsl
jmp
mov
test
out
cmp
jne
dec
stc
pushf
loopne
loopne
out
in
pusha
in
sub
push
mov
push
mov
daa
int3
into
mov
es
rcl
aas
push
test
dec
cmpsl
bound
push
test
jg
pop
xor
adc
push
icebp
sbb
testb
scas
and
and
xor
add
cs
push
or
nop
shrb
ljmp
dec
incb
js
push
cli
mov
lret
fnstcw
jl
and
push
xchg
pop
pushl
push
icebp
testb
and
pop
xor
mov
inc
or
cmpsb
insb
add
je
dec
xor
outsb
adc
cmpsl
or
push
push
push
jmp
sub
outsl
fbstp
das
cmpsl
xchg
and
fs
lods
ret
out
jo
mov
sbb
dec
mov
inc
mov
test
cmp
daa
cltd
pop
jns
dec
cmp
scas
jle
mov
jbe
dec
lods
xor
testl
xchg
mov
cs
mov
push
mov
ds
inc
mov
hlt
jns
out
xchg
mov
imul
dec
sbb
sbb
push
xor
cmpsl
outsl
pop
clc
jo
add
nop
stc
popa
scas
insb
aaa
gs
xor
sub
dec
cwtl
xor
dec
xor
push
sub
pop
push
push
pop
mov
js
int3
cmp
fs
dec
push
push
pusha
add
sub
and
mov
xorb
lcall
cmovp
add
aaa
mov
dec
mov
mov
jb
test
sbbb
pusha
lret
sbb
dec
sub
enter
mov
xor
xchg
push
adc
pushf
filds
scas
mov
sbb
jg
mov
ficoml
xor
adc
or
jnp
es
jae
jno
aas
sub
push
mov
jns
sbb
nop
mov
cltd
xor
and
stos
adc
and
push
or
scas
das
sbb
adc
fmuls
pop
popa
xchg
leave
inc
addr16
or
pop
fucomi
icebp
out
pusha
sub
dec
jno
inc
cli
enter
test
mov
lock
cmp
enter
dec
out
jle
and
mov
aam
lcall
inc
lods
jns
lods
adc
in
loope
out
dec
xor
mov
test
mov
das
inc
cmp
jl
scas
sbb
xchg
push
mov
call
xor
aam
insb
xor
out
add
xchg
or
mov
test
popf
xchg
cmp
repz
pusha
lock
repnz
movsl
in
icebp
aam
mov
aad
mov
push
mov
sti
inc
daa
out
push
cmpsb
daa
pop
mov
push
pop
fnstenv
and
rolb
mov
call
xor
fs
out
out
shrb
inc
dec
popa
dec
fidivl
das
repz
out
jecxz
call
push
mov
mov
pop
jno
stos
xor
outsb
xor
jmp
mov
dec
bound
mov
repnz
dec
rclb
mov
pop
mov
push
ja
mov
sub
daa
xchg
vmaxpd
test
pop
test
std
mov
pusha
xchg
xorb
ljmp
sbb
add
leave
ret
sub
inc
ret
jae
jl
cs
lret
cmpsb
or
sub
das
cmp
repz
jb
jmp
test
cmp
jle
cmp
dec
jae
mov
mov
aam
data16
pop
es
aas
pop
icebp
mov
mov
fidivrs
push
cmp
stos
sbb
push
jne
popa
or
movsl
mov
ficoms
inc
xor
fstp
sbb
mov
dec
in
imul
push
add
ret
imul
mov
data16
and
mov
out
and
stos
mov
jmp
sbb
and
lods
add
insl
xchg
and
popf
adc
xor
sbb
vshufps
das
pop
or
hlt
pop
cmp
into
jbe
push
inc
sbb
popa
adc
pop
pop
sarl
lods
cld
mov
lret
out
insl
mov
xlat
div
adc
adc
out
xor
sti
call
sbb
mov
or
aad
cs
enter
sub
cwtl
lcall
stc
addr16
or
inc
hlt
or
cmp
adc
notl
fildll
jnp
jg
cmp
lods
mov
loope
fimuls
push
push
xor
es
ret
nop
popf
in
jae
xchg
outsb
popf
outsb
out
mov
sub
ficomps
dec
sbb
adc
lods
push
and
aam
pop
loop
imul
or
insb
add
cmp
outsb
push
hlt
scas
jecxz
pop
xor
inc
enter
and
sub
faddl
iret
iret
in
xor
mov
and
xor
imul
pushf
into
sub
mov
or
mov
mov
mov
cmpsl
inc
in
repnz
mov
in
mov
gs
nop
into
es
push
and
gs
loop
jns
gs
push
mov
sbb
sbb
push
pop
xor
js
xchg
ja
cld
ret
inc
mov
stos
cli
sub
inc
jae
enter
and
aad
movsb
pop
in
repz
inc
adc
cld
jne
addb
jae
jge
add
rorl
add
call
mov
out
arpl
sar
insl
vmovups
imul
xor
sbb
movsl
lret
adc
sti
in
mov
cmp
fbld
push
push
dec
xchg
pop
jmp
iret
pop
add
or
or
shrb
filds
push
lahf
stos
add
xchg
test
xchg
add
pop
dec
dec
scas
daa
jbe
cld
std
push
dec
pusha
xor
xchg
aad
sub
imul
or
inc
lret
ja
mov
dec
icebp
repz
mov
scas
mov
clc
add
cld
mov
fs
outsl
add
lea
add
push
inc
or
sbb
in
push
xchg
mov
lcall
inc
fimuls
cld
sbb
test
and
mov
in
xorl
jne
sub
mov
xor
repz
fcmovbe
fldt
mov
lock
adc
fs
mov
out
cli
push
xchg
prefetcht0
inc
es
repz
fnsave
xchg
add
mov
cli
pop
add
out
mov
gs
inc
stos
mov
inc
cmp
ficomps
sbb
in
mul
stc
mov
or
or
das
lret
add
stc
pop
mov
sbb
data16
push
sarb
mov
icebp
sbb
xor
filds
out
loope
mov
jl
std
mov
lret
xor
into
fcomip
loopne
or
mov
adc
dec
arpl
sahf
hlt
sbb
out
iret
inc
popa
pop
in
mov
in
sbb
cld
cld
sub
cltd
cwtl
rorb
sti
ret
xlat
mov
and
xchg
test
stos
mov
inc
sbb
jb
scas
mov
stc
cmp
xchg
shlb
decl
push
lahf
sub
rol
push
sbb
lahf
adc
ja
and
add
push
fiadds
test
mov
movsb
mov
sbb
push
lds
pop
je
or
mov
xchg
cmp
push
xor
xchg
and
jb
les
in
jno
inc
jmp
and
fdivrl
add
sub
xchg
cli
lret
push
pop
stc
sbb
outsb
and
sahf
outsl
xchg
cld
test
xor
dec
enter
pusha
push
repz
jl
xor
dec
cs
dec
cmp
pop
pop
test
test
xorl
aaa
popf
stos
lret
jae
cmp
push
stc
addr16
ret
mov
jne
js
inc
sarl
out
out
jmp
aad
cmp
xor
sub
loope
stc
std
adc
push
in
sub
lahf
in
sub
cmp
cmp
mov
movsb
roll
and
xchg
mov
clc
cmp
les
rolb
mov
int3
pop
jle
test
popa
and
mov
sarb
flds
mov
push
arpl
lahf
or
cmp
lods
daa
shlb
mov
gs
enter
movsl
xchg
adc
mov
int
leave
fs
or
sbb
lea
or
daa
cwtl
inc
jle
jb
repz
bound
in
cli
aam
shlb
jnp
inc
sub
ret
cwtl
or
pop
scas
shlb
hlt
xlat
pop
or
inc
jo
fdivl
pop
ret
and
sbb
cmpl
cmp
sbb
push
jbe
and
mov
push
and
sti
test
add
mov
push
das
push
ljmp
xlat
ss
dec
mov
daa
push
or
inc
jp
pop
and
sbb
adc
fdivs
dec
lret
xor
gs
fisubrl
je
shlb
push
and
hlt
lock
rclb
push
and
sub
pop
fdivs
insb
mov
js
jecxz
push
adc
jo
std
push
pushf
push
sbb
pushf
xchg
push
inc
or
test
jbe
js
js
push
mov
jnp
push
lahf
push
jnp
je
push
outsb
cltd
xor
das
mov
mov
sbb
aam
or
lods
ret
cmc
mov
or
mov
sub
stos
popf
daa
pushf
cmp
ja
pop
pop
sbb
je
pop
outsl
repnz
sub
into
js
ljmp
sbb
jb
lret
mov
cmp
shl
stos
iret
jns
div
sub
test
les
mov
stos
mov
mov
out
cmpsb
push
shlb
stc
ds
leave
cmpsl
push
inc
rcl
cmpsl
aaa
and
shl
xor
sub
in
xchg
xchg
pop
cwtl
mov
jmp
and
lds
jecxz
and
out
rorl
loop
nop
jne
inc
push
mov
in
ja
lret
subb
shl
popa
add
aad
xchg
sub
cmp
aaa
movsl
xlat
lret
mov
cmp
inc
pushf
sbb
push
push
movsb
sbb
ret
mov
inc
dec
cmp
daa
fists
sbb
add
in
out
push
or
out
jb
pop
inc
inc
out
push
daa
xchg
sbb
xchg
test
add
pop
je
inc
hlt
vpcmpeqd
mov
sbb
imul
stos
rorl
xchg
test
push
jg
lds
pop
dec
fdivp
lcall
shlb
cmp
shl
decb
popf
and
arpl
shlb
mov
dec
data16
dec
shrb
mov
call
fiaddl
mov
les
push
push
lcall
or
dec
pop
fldcw
or
repz
popa
mov
add
divb
loopne
into
add
or
mov
and
add
cwtl
dec
rolb
push
outsb
xchg
cmp
lahf
cmp
rclb
xchg
je
stc
xchg
xchg
inc
test
fs
adc
arpl
mov
jb
lea
std
call
mov
popf
lahf
mov
das
arpl
lock
xor
loop
mov
mov
js
jge
out
repz
pop
out
daa
or
scas
pop
and
lahf
ror
push
jl
xorb
mov
dec
jne
adc
xchg
andb
movsl
or
mov
xor
pop
mov
cmp
fidivrs
lock
mov
jbe
adc
dec
sub
cmc
test
sub
fsubrl
push
mov
mov
rcrb
xchg
dec
icebp
sbb
clc
andl
sub
cmp
jo
lret
test
or
fisttpl
loope
stos
adc
and
cmp
into
jbe
pop
jmp
repnz
aaa
xorb
je
push
test
lock
xor
dec
push
pop
or
mov
and
addr16
add
in
aas
xchg
sub
cmp
pop
in
clc
mov
pop
mov
inc
sbb
daa
or
in
pop
xlat
dec
in
cmpsb
push
cs
nop
pop
ds
xchg
mov
xchg
aas
and
iret
cltd
or
shlb
push
pop
xor
pop
loop
push
jmp
fnstenv
lret
dec
ds
cltd
push
xor
mov
pop
loopne
sbb
dec
pop
xor
dec
repz
mov
dec
xchg
fisttpll
jb
or
mov
je
aas
add
adc
add
mov
icebp
jns
stc
mov
dec
popf
adc
jp
mov
cmp
cmpsl
into
popa
and
sbb
lret
fucomip
jmp
in
ds
jns
or
insb
shlb
adcl
lcall
jl
adc
jae
in
scas
loop
test
add
dec
cmp
push
and
fsts
pop
inc
popf
fdiv
enter
aas
movsl
pop
pop
mov
dec
out
enter
sub
jle
mov
repnz
xlat
push
sub
js
jo
loopne
or
lahf
in
and
sti
lds
xchg
loope,pt
mov
inc
adc
pop
jbe
xchg
lock
stc
cmpsl
orb
movsl
add
mov
dec
and
push
pop
imul
mov
test
insb
xchg
lods
mov
mov
mov
cmpsb
popf
or
push
xchg
xor
orb
sbb
xchg
pop
mov
dec
jns
jno
aaa
sbb
leave
push
jp
shll
inc
jb
lds
in
sub
sbb
jl
or
stos
sub
sbb
pop
inc
idivb
ret
out
loop
lock
inc
and
cmp
imul
dec
jbe
mov
jp
das
xchg
xor
sub
imull
loopne
xchg
xor
xor
and
mov
xchg
repz
pop
out
xor
repz
sarb
mov
or
xor
xor
adc
fsubr
dec
mov
xor
add
and
orb
jne
xor
or
psubusw
sti
xor
mov
leave
inc
mov
popf
ss
jmp
jge
mov
insl
data16
or
scas
lahf
aaa
push
xchg
push
arpl
lea
sub
jo
mov
pop
daa
fs
lock
sub
push
int3
mov
inc
lret
xor
inc
cwtl
cmpl
sub
xor
or
cld
sub
jg
std
imul
cmpsb
pop
shll
lcall
lcall
and
sbb
pop
mov
dec
test
jge
mov
jo
shll
movsb
leave
scas
dec
pop
lds
insb
and
out
andb
cmp
or
int3
xorl
mov
ljmp
add
cwtl
dec
sbb
cltd
cld
sbbb
cmpl
dec
hlt
mov
xor
mov
dec
out
hlt
ret
pop
sbb
jb
adc
xor
enter
and
aam
fwait
xor
ret
icebp
jnp,pt
movsb
mov
test
insb
lods
frstor
xor
je
je
mov
push
mov
cld
cwtl
mov
out
in
cli
inc
loopne
sarb
lcall
call
mov
dec
jae
std
push
js
and
dec
sub
stc
sbb
xchg
sub
inc
popa
fwait
mov
add
push
push
mov
mull
mov
and
jmp
pop
push
xor
pushl
imul
aad
std
enter
jle
icebp
test
mov
ss
sub
jecxz
jg
jp
fs
sub
jo
fcom
xchg
gs
add
mov
aam
pusha
repnz
xchg
dec
xchg
push
mov
out
mov
lret
mov
ret
mov
mov
inc
out
sub
and
stos
and
cli
push
mov
xchg
or
lods
xchg
mov
inc
inc
in
cmpsb
iret
jg
mov
in
add
sbb
pop
adc
mov
add
or
mov
cmpl
lret
pop
cmpsl
test
into
stos
adc
loope
lahf
adc
repnz
mov
test
das
push
aam
lods
jecxz
mov
fisubrl
mov
mov
pop
out
pop
movsl
dec
mov
loop
mov
cmp
lcall
in
ljmp
fldenv
or
scas
adc
cld
cmp
jns
pushf
jl
stos
xor
jo
into
dec
push
dec
ret
insb
add
int
lds
mov
adc
jge
cli
loopne
in
or
mul
inc
pop
push
orl
sub
sbb
pop
mov
dec
scas
ja
jnp
notb
sub
mov
mov
lea
pop
and
jmp
and
inc
xchg
xor
fwait
sub
jnp
mov
adc
dec
adc
out
lahf
push
pop
ror
stos
and
outsb
jg
inc
mov
lds
jno,pn
dec
cmp
shrl
dec
icebp
mov
test
mov
ficompl
pushf
fists
dec
mov
mov
in
pop
pop
cltd
mov
xchg
stc
imul
cmp
push
mov
stos
mov
add
jp
add
pop
and
mov
je
mov
pop
ret
xchg
lods
dec
xchg
mov
loopne
repz
adc
stos
out
xchg
scas
outsl
xchg
xchg
dec
int3
shl
in
sbbb
sbb
adc
dec
add
sahf
data16
sub
push
jnp
adc
pushf
sub
pop
jnp
inc
cmp
scas
dec
mov
nop
outsl
xchg
insl
into
jb
stc
lcall
inc
lea
fs
ds
mov
xor
out
in
xor
aaa
lcall
je
jle
fs
mov
fxch
pop
push
or
lcall
js
ret
jnp
add
stos
sub
and
out
jb
roll
fisttps
in
push
xchg
ljmp
loopne
inc
inc
mov
inc
lea
jne
jnp
or
mov
out
push
rol
adc
sbb
arpl
repz
inc
test
adc
mov
lock
ret
push
mov
pop
hlt
sbb
outsb
out
push
ficoml
lea
mov
rcl
and
inc
sbb
jb
push
sbbb
xchg
rcll
xchg
cmp
adc
sub
lds
in
inc
mov
jnp
stos
cld
sbb
mov
xchg
inc
cmc
push
or
inc
inc
das
mov
mov
movsl
pop
jbe
fidivrl
sub
lret
test
jb
sub
aaa
in
fmuls
mov
in
imul
mov
insl
sub
stos
cmpsb
enter
fcmovb
sub
adc
inc
in
pop
sub
loope
or
aaa
mov
cmp
lds
nop
or
mov
jp
subl
loope
stos
sub
nop
cli
mov
pushf
cmp
fisttpll
sub
or
push
cmc
mov
sarb
cwtl
pusha
mov
dec
cmpsb
popf
add
pop
push
mov
test
xor
fldenv
and
mov
iret
inc
push
or
aaa
int
adc
cmp
out
jg
std
mov
shlb
mov
stc
push
outsl
xor
adc
jecxz
cld
pusha
pop
sbb
loop
sahf
mov
nop
lock
fwait
lds
out
inc
sbb
mov
sbb
repnz
jmp
push
icebp
mov
xchg
dec
sarb
xor
jno
jmp
jns
mov
bound
shrb
add
mov
xchg
mov
mov
inc
pusha
out
mov
xchg
jg
sarl
or
ja
sub
and
loop
or
and
cli
jg
jae
sti
sub
fists
in
and
mov
inc
ret
xlat
je
lcall
xor
enter
fmul
push
xchg
cld
movsl
or
icebp
inc
xchg
xor
sbb
and
sbb
push
inc
jne
dec
in
rcll
xor
sbb
pop
dec
rclb
fwait
add
scas
scas
inc
jnp
lock
aaa
xchg
sub
push
jmp
add
or
and
cmp
test
mov
add
js
mov
xlat
mov
rclb
cld
mov
sbb
int3
xchg
inc
add
pop
popf
stos
lds
and
popa
cmp
add
cs
lock
pop
negl
pop
push
imul
lods
cltd
repz
dec
inc
jle
aad
addl
lds
test
mov
fsubr
subb
sub
pop
push
dec
mov
test
cmpsl
ja
sbb
jmp
pop
movsl
jae
mov
sub
cs
orl
ror
in
jp
imul
divb
mov
lret
add
out
dec
lahf
pusha
xchg
aam
bound
lock
aad
ret
test
and
add
out
sbb
jno,pn
ficoms
frstor
je
adc
pop
sub
push
xchg
pop
xorb
popa
ds
xchg
push
mov
cwtl
stc
push
sbb
and
adc
add
cmp
hlt
loope
sub
insl
or
mov
cltd
add
inc
jns
nop
push
stc
mov
jno
pop
mov
loop
icebp
popa
movsl
xchg
dec
pop
push
jnp
sbb
orl
shrb
adc
lock
adc
xor
daa
ret
cli
lcall
fstps
mov
das
mov
cmpb
aam
mov
cmp
inc
or
ja
mov
stos
xchg
mov
jecxz
adc
inc
mov
lret
push
pop
cmp
mov
mov
jmp
cld
add
test
sbb
loopne
lret
cmp
pop
fcomps
ss
adc
pop
inc
xchg
mov
clc
mov
ret
int3
xchg
mov
call
push
inc
pusha
push
movsb
dec
lahf
cs
aam
or
push
sub
xor
cmp
lods
ret
or
roll
jae
cwtl
mov
ds
cmp
pusha
inc
dec
mov
loop
out
ficoms
pop
dec
xor
in
push
push
xchg
jmp
xor
xchg
xchg
addl
push
adc
sbb
lds
dec
jle
ja
mov
mul
xor
push
and
ds
push
aas
jmp
rcll
faddp
out
cmp
lret
inc
pop
lock
loopne
push
repnz
fsubrl
xor
cltd
add
fisubs
jge
and
inc
xlat
cltd
mov
mov
fsub
fsub
sub
push
xchg
or
jge
arpl
add
xchg
pushf
mov
ds
jge
imul
pop
imul
mov
insl
mulb
cmp
stos
loopne
cwtl
xor
jnp
or
cld
sub
dec
fucomp
insl
das
cwtl
dec
adc
push
in
mov
fcmovbe
ljmp
cmp
je
xchg
iret
or
mov
sub
inc
rcrb
out
cmc
ficompl
xchg
lret
pop
dec
nop
shl
leave
insl
jo
outsl
inc
xchg
dec
inc
jecxz
push
inc
test
iret
cwtl
out
push
stos
pmaxub
in
xchg
lret
jle
js
dec
jl
inc
jns
mov
pop
ret
mov
mov
push
ret
inc
cmp
push
xor
out
insl
sbb
adc
pusha
xlat
inc
inc
call
ror
scas
hlt
inc
loop
inc
and
sbb
lcall
mov
inc
mov
xor
stc
pop
inc
ja
push
pop
mov
pop
roll
pop
mov
loop
lcall
es
out
js
hlt
inc
xor
and
mov
bound
popf
pop
or
jmp
xchg
xchg
dec
or
mov
mov
fimull
sbb
outsb
int
mov
adc
imul
mov
das
xchg
adc
inc
add
jmp
xor
subb
sbb
aaa
pop
icebp
sti
lret
sub
xchg
jl
pop
mov
fidivrl
dec
fistl
aad
jo
or
jge
loop
pop
sub
inc
popa
subb
sub
push
insb
jns
push
jb
sbb
movsb
mov
lret
fsubp
insb
jne
pop
in
mov
jmp
fadds
cli
mov
enter
push
divb
test
pop
loop
push
subb
filds
dec
cmp
loop
and
xchg
pop
mov
cmp
mov
dec
cmp
test
xor
loopne
pop
mov
fs
sti
ret
addr16
mov
sbb
loop
lods
sbb
jns
sub
lret
adc
je
addr16
sub
dec
push
sbb
push
ja
add
dec
mov
mov
jae
push
in
mov
xor
stos
mov
push
imul
icebp
hlt
or
mov
lods
mov
std
jmp
push
in
stos
xchg
jns
loop
pop
aaa
dec
adc
clc
call
push
jo
mov
sbb
mov
addr16
fimuls
jbe
sti
femms
sbb
dec
repnz
gs
ljmp
sub
aad
jmp
mov
cld
loop
lods
or
xor
inc
mov
leave
sbb
fmuls
dec
sbb
lahf
enter
and
ret
fsubs
inc
pshufw
mov
xchg
mov
fidivrl
inc
dec
pop
out
mov
mov
add
push
push
daa
out
jp
jg
inc
ljmp
cmpxchg
jbe
test
repnz
stos
gs
mov
xor
and
push
ret
mov
jle
mov
rcrb
push
cmp
jg
or
and
adc
jg
mov
xchg
sarb
out
test
fsub
lods
dec
fnstsw
not
inc
sbb
mov
enter
xlat
pop
sub
cli
orb
loopne
sbb
pop
mov
push
incl
jle
and
dec
test
xor
mov
movzwl
fwait
rcrl
push
dec
imul
or
mov
andl
movsb
xor
or
mov
pop
pushf
mov
sub
pop
sbb
idivb
push
pop
push
fsubs
push
cmp
cmp
mov
arpl
jae
sti
pop
aaa
mulb
add
dec
mov
lcall
mov
in
int3
push
sub
mov
bound
stos
jle
jbe
divb
push
test
sub
gs
rcll
js
pop
or
cmp
test
xchg
dec
cmp
cmc
pop
sbb
cwtl
fwait
roll
jecxz
out
sub
cmpsb
sub
int3
push
imul
pop
jl
cli
cmp
decb
sbb
jmp
adc
mov
or
add
in
pop
ret
and
loop
add
mov
jb
movsb
inc
sub
xor
sub
jne
popf
adc
pop
in
in
sub
std
cmp
mov
fs
lds
mov
aam
jl
test
lea
int3
dec
cli
test
repz
xchg
scas
pop
add
in
pop
xlat
filds
lret
movsl
lods
jnp
cmp
fwait
out
sub
lcall
cwtl
mov
cmp
mov
repz
out
std
cmp
xchg
and
fisttpll
out
shll
aas
pop
mov
ficoml
push
xchg
xlat
jno
xlat
sbb
mov
and
in
dec
movsb
and
ja
test
in
les
push
or
sub
test
ret
jle
test
lea
jmp
push
jp
movsl
sarb
lcall
cmp
test
mov
cli
or
dec
cmp
sub
lods
rorb
xor
jmp
mov
aaa
sub
pop
lcall
pop
pop
lds
xor
lods
aam
jbe
outsl
jp
mov
repz
shlb
cmpsl
or
adc
jae
pop
popa
pop
and
sbb
adc
imul
in
movsl
fnsave
add
lahf
icebp
nop
sbb
repnz
jge
and
inc
xlat
and
cmpl
or
cmp
rcll
inc
mov
inc
xchg
jo
xor
in
outsl
ja
mov
dec
inc
add
into
pop
cmp
inc
cmpsl
mov
cmp
push
loope
mov
cmp
nop
cmc
jbe
jno
inc
jp
aam
test
fstps
fwait
popf
loop
rcll
pushf
or
xchg
and
and
insl
mov
arpl
inc
lock
decb
xor
orl
cmp
xlat
cmpsl
insl
jns
stos
or
out
repz
gs
xorb
jle
adc
sbb
and
ja
cli
mov
js
add
or
and
jg
dec
shrb
add
sub
mov
dec
out
mov
xchg
xor
add
sub
divb
int
inc
int
or
imul
out
stc
fdiv
fwait
push
adc
cli
test
or
mov
push
lret
mov
cmp
test
nop
fidivl
mov
add
test
aaa
cwtl
mov
jae
les
push
lds
out
lret
mov
int3
rorb
push
push
es
mov
push
mov
rorl
aam
sub
stos
sbb
pop
lods
add
gs
jge
jb
repnz
loope
dec
push
int3
sbb
scas
into
lret
jae
outsb
dec
sub
xchg
sbb
subb
cmp
enter
ret
cmp
test
xor
test
adc
mov
scas
cld
cmp
filds
lcall
movsl
cli
cmpl
adc
adc
cs
mov
test
shll
cmp
adc
mov
cmc
xchg
shlb
inc
fxch
es
xchg
inc
lods
fnstsw
sub
loop
pushf
and
out
jns
push
in
loop
mov
mov
popa
out
xorl
jns
mov
inc
lea
jno
pop
xor
mov
movsl
dec
fs
xchg
pop
shlb
jmp
jo
fcoms
push
mov
loopne
xchg
push
test
sarl
or
or
popf
xchg
xchg
out
push
cwtl
cmc
sub
xor
xor
cmpsl
dec
int3
cltd
push
pop
scas
xor
fdivr
pop
insl
rclb
mov
rcr
in
dec
sarb
push
xlat
push
mov
in
inc
ret
sbb
ljmp
repnz
pop
jp
shlb
std
sbb
dec
frstor
jb
loope
sbb
mov
xchg
mov
hlt
adc
dec
scas
dec
cld
hlt
and
imul
mov
lock
mov
jae
adc
insb
sahf
xchg
xchg
xor
stc
cmc
pop
enter
and
fwait
call
mov
fimull
dec
pusha
or
add
data16
jno
push
jecxz
fnstsw
mov
ds
lcall
jb
xlat
test
push
add
push
movsl
rcrl
loopne
inc
imul
push
dec
cmp
out
into
loope
testb
stos
xchg
pop
mov
scas
mov
popf
aam
scas
fidivl
pop
sub
iret
cmpsb
mov
sbb
cmpsl
clc
es
mov
scas
adc
mov
inc
repz
mov
lret
iret
fldcw
push
ss
lods
cltd
pop
xor
test
mov
mov
mov
jno
cmp
nop
push
xchg
push
movsl
xor
adc
add
sahf
xor
lret
imull
outsb
cmpsb
adc
xchg
pop
push
xor
dec
adc
cmp
jns
dec
mulb
stc
addr16
xchg
lahf
xchg
inc
adc
imul
out
sti
sbbb
cwtl
les
mov
mov
mov
or
xor
or
jb
add
pop
sbb
sahf
or
or
in
scas
int3
hlt
xchg
and
xchg
or
inc
aad
lret
pusha
movsl
jecxz
in
sub
nop
adc
cld
stos
in
icebp
add
push
mov
and
add
ja
cmpl
scas
add
jae
push
cld
out
in
lcall
mov
jge
or
sub
inc
add
mov
popa
lcall
fwait
or
mov
jle
mov
repz
xlat
xchg
mov
jnp
loope
adc
mov
inc
adc
jae
test
repnz
std
fs
fisttps
xchg
shrl
inc
hlt
bnd
mov
xor
dec
mov
out
jns
imul
mov
loop
inc
push
mov
sti
ja
cmp
push
xchg
jl
or
mov
jecxz
enter
dec
inc
sbb
mov
dec
pop
pusha
mov
or
fistl
out
cltd
sbb
dec
stos
jecxz
ret
out
jno
in
fucom
insb
sbb
sub
xchg
jge
dec
mov
dec
pushf
mov
push
icebp
ss
dec
sbb
repz
xchg
cmc
lret
repz
cwtl
lahf
les
cwtl
stos
mov
xor
sbb
jns
aam
into
xchg
orb
inc
push
sub
cmpsb
aaa
or
mov
xorl
adc
insb
inc
mov
lahf
fld
mov
jle
mov
sub
adc
cmc
js
mov
hlt
push
icebp
rorb
fstl
fwait
jnp
loop
jns
or
lcall
imul
lock
insb
jo
cwtl
bound
lods
jl
pop
mov
ret
in
xchg
push
add
orb
adc
stos
frstor
dec
adc
les
add
sbbb
mov
aas
shll
jl
and
pop
orb
in
rolb
inc
inc
rcrb
push
imul
pop
les
rclb
in
popl
adc
lret
dec
pop
rorl
fildl
cmp
push
jge
sub
popf
or
mov
mov
call
sub
sbbb
cmc
test
sahf
push
scas
mov
nop
in
jl
fisubs
add
sub
add
mov
push
mov
mov
push
pushf
sbb
bound
aas
fwait
mov
dec
mov
dec
fcoms
pop
cmp
pop
adc
xor
pushf
les
loope
in
dec
imul
jno
ljmp
sub
inc
daa
lds
popa
aad
cmpsl
sbb
fstpt
mov
jecxz
aas
jmp
pop
aam
sahf
pop
jns
jns
mov
mov
fisubs
and
je
mov
mov
jo
jnp
int3
scas
fcmovnb
inc
enter
xchg
lret
mov
lcall
pop
or
icebp
mov
sub
in
mov
or
repnz
push
sahf
push
sub
loop
dec
popa
data16
fisttps
divb
andb
cmpsb
cmpsb
dec
fiadds
std
in
cld
sbb
xchg
sub
addr16
push
mov
lcall
mov
stos
imul
in
push
xchg
mov
out
sub
cmp
imul
lock
xor
inc
inc
ljmp
pop
ret
adc
imul
or
out
push
test
shrl
imul
insb
push
inc
push
ret
adc
cmp
mov
adc
dec
push
cmp
out
push
das
adc
pop
mov
fs
sub
inc
xchg
jmp
ret
es
xchg
dec
jb
push
sbb
cmpl
ja
das
cmp
nop
xchg
jnp
xchg
push
dec
mov
nop
mov
adc
dec
cmp
std
std
js
push
jg
mov
push
aas
scas
mov
flds
or
mov
push
std
cmpsb
out
test
and
mov
outsb
pop
xchg
into
test
lret
pop
mov
repnz
mov
mov
in
mov
aam
sti
dec
mov
hlt
adc
stos
outsl
or
mov
inc
mov
push
test
dec
aas
aaa
or
in
push
jp
jg
pop
ljmp
test
and
pusha
xor
stos
in
xor
xchg
repz
mov
push
xchg
cmp
mov
addr16
in
jge
or
dec
cmp
repnz
icebp
movsl
lods
movsb
pop
in
xor
add
stos
out
mov
mov
sbb
push
jmp
or
mov
inc
out
jp
rolb
outsb
push
repz
fadd
pop
mov
inc
mov
or
fidivrs
push
fistpl
dec
aam
and
and
mov
pop
or
sub
rcrl
das
sbb
imul
lret
lret
mov
js
mov
jmp
pop
je
rcr
jg
push
inc
stc
xchg
sub
and
pop
jg
inc
rcrb
std
outsb
lea
push
and
shlb
stos
stos
lock
push
scas
adc
jnp
push
xchg
imul
xchg
xchg
leave
insl
mov
in
xor
lret
in
hlt
negl
pop
dec
pushf
out
je
sbb
outsl
xlat
xchg
insb
mov
popf
or
push
sbb
adc
lahf
push
push
mov
mov
scas
pop
pop
sahf
pop
dec
or
adcl
push
mov
jl
xchg
repnz
pop
shrl
in
test
mov
add
add
sti
push
faddl
and
std
inc
xor
push
rcr
test
movsl
push
mul
push
subb
sub
data16
sti
dec
je
mov
pop
cmp
or
int
push
outsb
call
cmc
sub
push
mov
xchg
mov
es
leave
cwtl
loope
and
gs
add
into
imul
pop
sub
dec
aas
push
lret
cld
pop
sub
xchg
rorl
ljmp
dec
jmp
push
and
xchg
push
loope
pop
int3
jecxz
int3
mov
mov
xor
call
push
mov
push
mov
data16
jmp
push
xchg
in
mov
mov
leave
dec
fcmovnu
sbb
ret
xlat
test
pop
int3
cmp
mov
dec
loop
das
add
xor
fwait
adc
js
fnstsw
xor
xorb
outsb
dec
sbb
pop
data16
push
rcr
lods
clc
adc
and
jecxz
push
cmc
test
sbb
shl
mov
push
sbb
cmpsl
mov
jb
mov
and
cltd
cmp
push
or
mov
cmp
loope
into
iret
and
fisttps
mov
add
sbb
or
or
divl
cwtl
mov
jns
mov
bnd
ret
arpl
outsl
or
test
mov
inc
mov
jecxz
out
shlb
pop
adc
je
sbb
mov
cltd
mov
xchg
push
lret
mov
and
cwtl
xchg
and
loopne
push
pusha
pop
ds
dec
fdiv
mov
cmpsl
xchg
pop
out
aaa
and
insl
xchg
lods
xchg
pop
loop
pop
test
scas
outsl
fs
mov
insb
push
sbb
push
jno
push
lahf
rorl
dec
testb
jecxz
mov
repz
aas
std
push
scas
stos
jo
add
lods
jmp
sub
and
inc
xor
ret
adc
cmp
addr16
rolb
rcl
jl
roll
cli
cld
insb
inc
inc
test
in
stos
jp
lock
xchg
pop
gs
or
or
fs
add
test
adc
add
jbe
jge
xor
loopne
lret
cltd
xchg
xchg
outsl
negl
mov
add
shrl
mov
sbb
outsb
adc
xor
clc
xlat
cmp
push
or
push
loop
jle
ret
jl
mov
push
or
les
and
xchg
fstl
insl
pop
jl
sub
dec
shl
insl
pop
xor
outsb
sbb
push
jno
popf
gs
jg
cmpsl
jbe
mov
jbe
gs
jp
pop
lods
and
mov
scas
lods
adc
xchg
xlat
imul
int
gs
mov
cmpsl
inc
mov
mov
rcrl
jb
mov
push
rclb
fs
push
pusha
lret
or
mov
push
cwtl
repz
daa
lcall
scas
ret
jno
jle
push
movsb
sti
adc
stos
les
test
stos
push
and
arpl
in
pop
ret
out
scas
mov
bound
cli
ret
fwait
pop
push
ss
movsl
inc
add
adc
cmp
fistpll
jge
xor
add
imul
push
iret
inc
jmp
jecxz
movsl
in
clc
and
das
hlt
out
mov
mov
daa
test
lret
inc
push
sub
je
imul
popa
pop
or
pusha
stos
push
aam
push
push
xor
rcrl
inc
jo
stos
jle
hlt
push
xor
xchg
ljmp
mov
mov
lea
insl
sbb
pop
out
ds
ljmp
sarl
das
addr16
cmp
pusha
mov
dec
adc
shl
addb
mov
mov
xor
test
push
mov
lock
mov
loopne
inc
cmp
xchg
icebp
mov
cmpsb
xorl
inc
pushf
or
out
rcll
cmpsb
loopne
mov
mov
lahf
pop
ds
xor
and
sti
inc
or
dec
repnz
imul
jl
loopne
daa
xor
xchg
push
imulb
in
add
cmc
jle
or
pop
scas
inc
sbb
sub
add
dec
cmpsb
push
int
nop
outsb
mov
cmp
adc
jb
xchg
push
and
lds
cmp
testl
jmp
cs
pop
jno
xchg
sbb
fisubrl
jmp
pop
push
xchg
or
mov
test
sarl
jbe
mov
pop
mov
ljmp
mov
adc
pop
hlt
cli
out
push
inc
xchg
hlt
rorb
cmpsl
or
add
cmp
rcrb
xor
insl
mov
jg
imul
movsb
gs
mov
pop
sahf
mov
in
sub
stos
lret
sbb
shlb
dec
push
pop
sbb
inc
test
adc
icebp
mov
jo
rcr
call
sub
or
mov
fmull
imulb
jg
ret
enter
cmp
pop
pop
int
loopne
xor
icebp
test
leave
xchg
clc
sub
jle
out
dec
push
addr16
into
lret
inc
ja
fnstenv
pop
mov
js
mov
mov
call
sub
mov
les
xchg
add
bound
pop
inc
xchg
fildl
and
inc
jo
ljmp
mov
pop
lcall
push
std
lret
xchg
or
jns
int3
ss
rol
jne
xchg
subb
xchg
adc
imul
mov
cmp
or
or
xorl
xchg
pop
lcall
xor
dec
incb
loope
outsb
loopne
xlat
push
jo
mov
mov
orl
and
lods
cmp
out
mov
movsl
dec
cmp
or
gs
xchg
stos
fldt
inc
psubsw
fcoms
pop
mov
sbb
xor
mov
test
out
adc
dec
out
jle
test
pop
mov
mov
in
jle
jp
dec
fsubs
fldcw
or
ret
cmpb
xorb
or
cmp
shl
jo
lock
jl
xlat
sahf
dec
ds
rcll
pop
and
stos
lret
sbb
imul
stc
adc
fwait
add
sbb
sbb
mov
push
xchg
push
mov
fsubr
dec
je
clc
sub
add
in
jge
cmp
cmp
mov
icebp
cmp
lock
cmc
fdivs
mov
jecxz
dec
jae
adc
sub
dec
call
out
cltd
mov
jne
pusha
mov
pop
xchg
xchg
mov
lcall
push
inc
lock
dec
out
lock
loopne
aaa
stos
inc
into
daa
outsl
cli
divb
es
insb
cmp
orb
cs
std
push
sarl
test
popa
sbb
jb
xor
add
xchg
xchg
mov
stos
imul
inc
adc
mov
inc
adc
pop
pop
sbb
pop
dec
into
mov
cvtpi2ps
add
jb
out
out
ljmp
jmp
add
pop
cmpsl
adc
xor
xorl
cmp
leave
sbb
cmp
int
cmc
jmp
imul
dec
push
sahf
pop
icebp
push
test
mov
gs
mov
sbb
cmp
out
gs
xor
scas
notb
and
add
dec
jno
inc
push
fwait
lahf
pop
ror
pop
or
int3
cs
cmp
ret
xorl
xor
or
stos
mov
jp
pop
icebp
mov
dec
xchg
lret
add
sbb
mov
leave
ja
sub
fucomp
mov
mov
setno
push
out
in
pusha
and
cmp
xchg
out
xchg
adcl
dec
into
jne
outsl
xlat
scas
hlt
mov
ret
push
push
push
mov
push
lahf
and
sbb
jp
jne
roll
mov
cmpsl
jno
orb
rorl
fs
jno
mov
dec
inc
fmuls
mov
pop
popf
mov
cmc
test
jae
sbb
cli
pop
dec
clc
inc
mov
mov
mov
fistps
push
scas
jae
inc
jmp
sbb
leave
data16
mov
xchg
cmp
mov
xchg
pusha
xor
imul
flds
add
jo
stos
iret
mov
fisubrs
inc
xchg
jmp
test
push
pop
icebp
into
dec
lods
mov
or
mov
daa
xchg
cmp
inc
adc
xchg
sbb
cmp
inc
xor
jle
pop
pop
or
xlat
mov
pop
lcall
mov
addb
cmp
xchg
mov
insl
loop
and
pop
sub
cmp
dec
sbb
ror
dec
or
sbb
dec
and
inc
and
dec
fidivrl
rclb
mov
xor
daa
mov
pusha
dec
mov
out
divl
and
or
add
pusha
lahf
push
sbb
mov
fiadds
mov
ss
int
aam
dec
mov
in
inc
shl
clc
mov
mov
test
adc
xchg
push
pop
xchg
nop
cwtl
enter
xchg
outsb
or
daa
add
cwtl
arpl
pop
leave
repz
jle
into
bnd
mov
ficomps
cmpsb
in
mov
aam
notb
cmpsb
mov
into
push
fincstp
in
mov
pop
scas
data16
imul
scas
cmp
mov
jns
int3
jbe
shll
dec
mov
dec
jl
or
insl
loopne
mov
out
adc
mov
inc
das
arpl
scas
out
mov
dec
and
push
xor
or
sub
clc
in
es
roll
sub
icebp
sbb
fisubrs
add
loopne
xchg
fmul
push
and
xchg
rorl
xchg
roll
jno
pop
xor
jp
mov
repz
jg
mov
sbb
push
xlat
enter
aas
add
jge
sub
cmpl
jno
lds
cltd
movsl
fildll
imulb
arpl
xor
loop
scas
imul
ret
out
imulb
pusha
aaa
hlt
xlat
mov
xchg
aam
mov
fsubr
jp
inc
inc
push
pop
test
pop
mov
cmp
or
cmovp
dec
mov
xor
in
xor
out
out
xor
mov
and
pushf
mov
xchg
push
xor
jnp
inc
mov
push
sbb
push
inc
push
aaa
pop
xchg
sub
mov
pop
sub
insl
out
lock
xor
cwtl
adc
or
jp
or
sbb
nop
cmp
add
mov
dec
arpl
sti
cmpsl
icebp
mov
lods
add
mov
mov
adc
inc
pop
ja
xchg
pop
jecxz
nop
lret
stos
jge
xchg
pop
notb
scas
imul
inc
movsl
and
in
js
mov
mov
out
sbb
sub
pop
mov
push
adc
test
cs
pop
fwait
xor
lock
jmp
outsl
mov
cmp
out
mov
test
sbb
sub
xchg
lea
inc
ljmp
jle
lods
inc
jg
and
mov
pop
jle
xchg
rolb
add
daa
push
das
cltd
mov
fcoms
leave
inc
or
sub
adc
adc
push
jmp
jnp
add
icebp
xlat
sbb
or
fadd
cmpsl
mov
ljmp
pop
dec
ret
mov
lret
shl
push
cmp
and
adc
mov
bound
or
push
mov
daa
inc
je
rol
lret
hlt
xchg
mov
sbb
push
lcall
sbb
inc
xchg
or
dec
lea
cld
sub
shr
in
fwait
pop
jbe
adc
or
fistl
add
sub
jo
in
insl
fstl
sahf
inc
cwtl
add
ret
and
and
dec
fstl
fwait
popa
rcl
and
jl
popf
jno
lahf
pop
cmp
mov
cld
pop
xchg
xor
add
shlb
mov
jbe
pop
add
and
iret
btc
add
outsb
repnz
addr16
or
mov
dec
imull
and
jmp
test
div
xchg
mov
pop
pop
adc
push
adc
add
wrmsr
icebp
movsb
pushf
jp
jecxz
add
inc
shll
fsubr
mov
jle
xor
inc
adc
jne
mov
popf
dec
sbb
mov
rcll
add
xchg
arpl
psrlq
mov
sub
cltd
adcl
adc
inc
out
cmp
les
pop
cmp
fwait
xlat
scas
daa
push
loope
cmp
inc
mov
aas
cmpl
cmpsl
pop
jg
out
lcall
push
jo
sub
pop
push
data16
pop
nop
aad
inc
add
sbb
out
sahf
and
inc
xor
aaa
mov
or
dec
mov
stos
bound
push
loop
insb
sub
lahf
jnp
or
aad
iret
xchg
sub
cmp
int3
or
das
int3
jb
ja
mov
fldl
aam
push
adc
jae
pop
mov
in
outsb
repz
mov
rorb
adc
add
outsb
jno
mov
jl
shrb
scas
cmp
popa
xchg
mov
adc
pop
sahf
or
push
pushf
scas
cmp
shl
pop
daa
sub
stos
mov
push
movlps
dec
cmp
iret
and
jmp
jb
lea
leave
or
and
into
addb
xor
mov
xchg
push
je
shlb
xor
cmp
mov
mov
push
gs
fdivs
test
dec
cli
shlb
stos
dec
xor
mov
push
setae
dec
dec
sub
and
or
cltd
in
mov
add
jne
mov
adc
test
stc
xor
sub
dec
data16
pop
test
mov
fs
jmp
sar
fldt
xor
gs
popa
or
push
lods
sahf
loop
sahf
mov
scas
cli
jle
pushf
push
icebp
jae
or
jecxz
out
mov
scas
jle,pn
jnp
fildl
inc
lods
or
ja
ficomps
sbb
pop
and
mov
in
and
add
mov
pop
je
insl
stos
cld
orl
xor
or
cli
push
add
rol
movsb
ljmp
adc
shrl
fcoml
into
imul
roll
lods
fsubs
cmpsb
and
push
stc
xor
ret
dec
push
sarl
jne
jno
adc
hlt
push
jge
scas
mov
fs
or
shll
popa
decl
fucomip
inc
sbb
pop
repz
lahf
mov
dec
jnp
dec
jne
cwtl
or
fisubl
xor
fwait
mov
xlat
xor
mov
xor
bswap
out
lcall
xor
mov
in
ds
iret
add
orl
inc
out
xor
mov
mov
imul
inc
and
jge
jecxz
mov
dec
mov
cld
xor
mov
xor
push
pop
push
push
lcall
cmp
loopne
push
shll
lcall
and
dec
mov
and
xor
cli
imul
sub
pop
dec
test
pusha
mov
mov
gs
mov
mov
or
inc
push
ret
std
jge
es
test
imul
cmp
sti
lea
mov
negb
cmp
pusha
in
xor
rclb
mov
jmp
jecxz
sub
les
inc
movsl
mov
sub
cmc
inc
adc
fs
mov
out
lock
repnz
sbb
mov
ds
ja
pop
mov
repnz
aad
jbe
fistps
xor
jnp
aad
mov
fistpll
xchg
dec
movsl
sub
icebp
leave
adc
ret
fdivl
add
xchg
test
xchg
add
cmp
ljmp
xchg
xor
imul
and
imul
inc
addr16
push
rclb
push
popl
outsb
repz
bound
daa
cmp
xor
xor
inc
je
lods
cmp
dec
imul
mov
packsswb
cmp
and
jnp
inc
test
pop
outsl
enter
xchg
aad
adc
out
out
ss
outsl
dec
aaa
dec
lahf
mov
movsl
cmpsb
mov
mov
sub
push
cli
pop
jb
jo
mov
jae
lret
leave
xlat
add
xchg
repnz
xchg
shrb
xchg
loope
stos
push
sub
adcl
movsl
or
push
lea
inc
int3
scas
mov
jo
mov
ror
lret
repz
or
add
dec
jmp
iret
cmc
int3
les
jbe
insl
xor
movsb
pusha
aam
xchg
bound
js
mov
mov
push
add
frstor
xchg
sub
test
rorl
jecxz
jo
push
ss
scas
add
data16
mov
cmp
push
mov
xlat
xor
in
mov
sub
cmp
push
pop
xchg
dec
cmpsb
push
lret
repnz
push
lea
sbb
jae
mov
stos
push
mov
jnp
sti
xor
outsl
pop
pop
mov
dec
jno
push
lahf
negb
cmp
andl
push
fbld
aas
add
stos
pop
xor
setae
pop
ss
add
mov
cli
push
loopne
jmp
fwait
mov
ret
xor
pop
pop
in
sub
push
loope
cmp
and
fnstsw
movsb
xchg
mov
daa
loop
lods
push
mov
xor
sbb
loop
push
cltd
das
movsb
out
addl
mov
arpl
ror
push
xor
ret
adc
add
in
inc
lret
dec
aam
jns
das
inc
lcall
pop
rcrb
gs
negb
jno
mov
jle
aad
jns
or
movsb
fdivrs
in
ljmp
aaa
pop
fildl
jae
fistps
insl
mov
hlt
imul
mov
test
push
sbb
push
cmp
ficompl
and
adc
imul
mov
inc
cwtl
rcll
xor
add
andb
mov
repz
shr
addr16
push
es
sti
out
rcrl
shr
lods
cli
mov
jno
lods
jmp
dec
or
fdivrl
pop
sti
push
mov
mov
adc
hlt
sub
mov
insb
nop
jne
clc
cmpsl
xchg
sbb
mov
pop
cltd
sbbb
sbb
int
cmp
xchg
insb
rcrb
mov
xlat
mov
jo
mov
repnz
aaa
data16
ljmp
in
enter
dec
movsl
xchg
jmp
cmp
test
cmp
outsb
mov
inc
in
inc
push
xchg
cld
jmp
mov
cmc
pop
cld
std
ja
or
mov
out
push
mov
xchg
mov
xchg
jge
bound
push
cwtl
add
or
mov
dec
sub
xchg
and
pop
sbbl
lea
sarb
scas
dec
push
loope
cli
pop
cmp
mov
inc
pop
xchg
mov
lods
and
mov
mov
fucom
leave
fstps
je
pop
aam
loopne
cmpsl
inc
cmp
sbb
xchg
outsb
mov
add
push
cmp
lds
sbb
rorl
bound
lock
push
or
pop
push
mov
fldt
cmp
faddp
lock
sub
or
ror
lea
cmp
jmp
jbe
pop
sub
cwtl
add
cmp
mov
mov
mov
arpl
jg
mov
test
les
push
push
xor
test
leave
imul
test
xlat
mov
pop
xor
mov
fadds
cmp
push
stc
popa
lock
dec
inc
pop
aas
adc
jmp
dec
push
mov
cmp
xchg
movsb
scas
xor
ja
fucomp
mov
jnp
sub
jmp
sub
insl
out
icebp
inc
mov
mov
and
lret
cmp
pop
lahf
jnp
sbb
jbe
je
pop
in
imul
or
insb
push
insb
add
cli
lcall
inc
mov
and
mov
lea
lcall
mov
xor
adc
loope
push
aas
addb
sub
mov
shll
jb
push
ss
inc
sarb
inc
negl
in
fnsave
cli
stos
push
cmp
xor
aas
dec
jnp
idivb
xchg
test
movsb
push
mov
cwtl
aam
jae
xchg
test
push
and
and
push
aaa
pop
jle
or
dec
popf
std
iret
dec
lea
fs
xchg
cwtl
daa
mov
adc
cltd
imul
xor
cld
push
jne
inc
dec
xchg
loopne
mov
rcrl
out
jmp
loop
lock
inc
mov
jecxz
sub
pop
lods
add
cltd
test
std
in
fs
fwait
cmp
ret
xor
rcrl
jge
and
imul
sahf
addl
cmovg
mov
pop
xchg
jp
mov
ljmp
insl
pop
das
xchg
dec
mov
cwtl
loope
xchg
aas
sahf
psubw
iret
clc
sahf
jo
out
cmpsb
dec
imul
fbld
push
push
or
bound
add
repnz
iret
cmp
movsb
in
adc
in
push
ret
imul
mov
out
inc
mov
or
fistl
movsb
aad
xchg
in
aaa
ret
lea
push
jbe
jo
jp
push
add
ja
lock
jg
nop
and
push
mov
adc
repz
push
aas
call
data16
or
cmp
pop
xchg
and
out
jae
repnz
pop
jp
dec
sahf
cmp
sbb
jmp
inc
nop
xchg
lret
cmp
xor
mov
pushl
cmpsl
pop
jmp
push
mov
sbb
fdivrl
push
jnp
dec
ss
inc
xchg
popf
loop
cmp
jbe
pushf
cmpsb
cmp
sbb
test
pop
and
fs
pop
dec
or
jae
jns
xorl
sbb
add
inc
imul
push
rcl
rcrl
nop
out
pop
nop
cmc
rcr
in
repz
mov
xlat
jb
mov
into
pushf
xlat
cmp
popf
sbb
lea
push
add
fidivrl
je
adc
lds
mov
xor
sub
faddl
frstor
ljmp
scas
sub
lods
cwtl
ret
adc
mov
out
sbb
add
fs
stc
dec
iret
mov
mov
cmp
int3
xor
pusha
fcoml
mov
icebp
mov
mov
mov
mov
test
push
scas
fwait
and
lea
into
or
lahf
jae
xor
movsb
mov
sub
cmp
ljmp
xor
dec
push
cmpsl
lods
and
pop
jle
out
test
test
shll
test
rol
mov
pushf
cmpsl
inc
xchg
jnp
jp
mov
inc
cmp
push
sub
xor
mov
leave
mov
mov
and
pop
fiadds
mov
adc
xchg
inc
sub
push
in
out
jo
mov
pop
mov
les
xchg
jle
andb
jecxz
nop
cwtl
sti
jmp
mov
call
movb
dec
leave
jecxz
int3
out
out
fists
or
jl
iret
repz
fildll
jmp
mov
mov
cli
xor
sub
dec
fildl
scas
ficompl
mov
repz
movsb
out
mov
shl
stos
xchg
arpl
shl
pushf
cld
dec
mov
movsb
lock
fucomip
scas
rcl
sub
bound
push
notb
sti
in
int
dec
std
mov
jg
pop
mov
xorl
mov
cwtl
add
ret
movsl
mov
inc
jno
notl
mov
or
test
cli
daa
push
repnz
pop
push
push
push
rorl
xchg
xchg
push
dec
mov
pop
lret
jnp
dec
lods
test
and
ss
add
jge
mov
adc
jns
xchg
pop
pop
arpl
add
pushf
sub
outsl
push
bswap
push
bound
out
inc
push
sub
adc
lock
lret
inc
aam
cmp
jb
lock
or
out
in
and
mov
lcall
aaa
mov
in
repz
cmpsl
mov
ja
mov
andl
mov
not
hlt
out
cmp
lcall
enter
sbb
push
loop
scas
push
jg
cmc
mov
pushf
or
repnz
les
mov
in
outsb
dec
outsb
xor
lret
lods
imul
cmpsl
pop
popf
sub
out
sarl
push
std
pop
insl
cli
movsl
int3
and
sbb
adc
es
addb
mov
cmp
and
jo
rcll
subl
adc
in
xchg
cwtl
pop
lea
xchg
aaa
subb
mov
add
sbbl
aaa
push
mov
inc
or
xor
dec
lock
sti
sub
mov
xor
sbb
cmpsl
enter
call
jns
mov
dec
shrb
fstps
adcb
mov
popa
xlat
mov
cmp
int
adc
xchg
adc
xorb
xchg
xchg
inc
inc
clc
inc
pop
push
push
inc
cmovge
lahf
out
idivb
dec
sub
and
dec
pop
mov
or
dec
push
mov
lret
jmp
pop
push
add
jnp
push
or
cmp
cmp
push
cwtl
sbb
insl
mov
loopne
inc
mov
mov
daa
icebp
ss
cmpsb
sar
mov
fbld
ljmp
cmp
xor
cmp
sbb
jae
fs
imulb
jmp
push
and
test
pop
xchg
add
add
xor
imul
pop
cmc
addr16
shlb
push
aam
stos
fst
in
push
cmp
mov
out
fcmovne
push
stos
imul
insl
dec
repz
repz
fadds
jno
mov
pop
pop
add
xor
add
ret
fadds
outsb
dec
jnp
mov
sub
jno
pop
jo
add
je
shrb
pop
mov
jo
jp
dec
test
into
sbb
out
jb
dec
popa
inc
sti
sti
lret
jle
add
test
cmp
ja
cmp
fsubr
test
jp
mov
cmp
cmp
jp
repz
dec
xor
jmp
fs
addr16
aam
or
out
outsb
jae
dec
sub
add
xchg
jnp
xor
ret
gs
ret
add
push
in
cmp
ljmp
cmp
sahf
rclb
add
js
pusha
jp
jle
int
insl
arpl
jae
dec
test
clc
sub
js
aam
mov
xor
jo
ljmp
mov
pusha
cmp
and
mov
imul
mov
imul
dec
or
mov
hlt
push
pop
push
daa
adc
ja
push
outsb
inc
push
lret
xchg
loop
cwtl
xor
jns
cwtl
xchg
inc
jbe
mov
cmpsl
es
pop
pop
cmc
cmc
ljmp
add
jmp
ljmp
cmp
clc
dec
cmp
stos
inc
push
imul
pop
fisubs
mov
cwtl
push
shrb
and
data16
push
push
aam
nop
sub
lret
adc
pop
int
mov
fst
aad
push
movsl
nop
push
dec
lret
out
fdivrl
js
inc
jmp
sbb
mov
mov
jns
dec
or
mov
in
subb
nop
mov
rorl
adc
sbb
and
xchg
jecxz
icebp
mov
mov
popa
xlat
mov
data16
jl
sub
push
push
xchg
adc
pop
in
out
xchg
stos
das
dec
das
movsl
gs
mov
in
sar
sub
ficompl
sbb
adc
lock
cmp
into
push
int3
scas
adc
int3
imul
push
dec
fwait
pop
sbb
inc
xor
test
stc
xor
aas
out
movsl
sti
mov
mov
xchg
jbe
cmc
xchg
mov
stos
pop
es
inc
fimull
sub
jmp
lds
mov
fildll
xor
dec
fsubl
and
or
and
popf
int
mov
adcl
xor
lret
shl
push
inc
insl
loopne
adc
popf
jns
ret
xchg
clc
inc
movsl
aam
idivb
add
mov
cmc
or
mov
fwait
into
out
aaa
xchg
cmp
and
mov
js
jge
lods
std
mov
scas
mov
lods
pop
push
movsb
pop
mov
mov
insb
cltd
stos
or
movsb
xor
cmc
lea
in
je
popa
aam
mov
cltd
mov
or
popf
dec
jmp
dec
and
adc
iret
mov
mov
push
jne
js
xchg
testl
popa
or
aad
fwait
and
mov
xchg
andb
dec
repnz
cltd
cmp
xchg
popa
push
rol
movsb
push
cmovae
das
fsubs
and
jge
loopne
xchg
lret
lods
mov
push
es
and
ss
mov
popa
xchg
xchg
mov
insl
insl
nop
jmp
negb
sub
pop
sub
mov
cmp
rorl
cwtl
mov
mov
std
lret
arpl
out
loopne
add
insb
pop
push
cmp
data16
incb
loopne
xor
in
add
push
adc
daa
sbb
mov
sbb
stos
cld
hlt
lods
out
cmpb
shlb
fdivrl
jb
mov
cmp
xor
push
popf
xchg
xchg
pop
pop
push
sbb
stos
popf
xchg
pop
xchg
cwtl
out
sti
dec
adc
xor
arpl
addr16
test
fsub
cmp
push
mov
int3
add
push
push
dec
xchg
popa
rcr
das
ljmp
mov
lret
push
popf
jecxz
mov
cltd
scas
ja
outsb
mov
mov
mov
shlb
adc
or
pop
lcallw
hlt
into
push
dec
sbbl
add
push
pop
rol
push
push
popa
cmp
mov
in
test
cmp
mov
mov
mov
imul
mov
dec
pop
mov
xlat
js
ja
mov
sub
pushf
fldcw
in
sahf
cwtl
stos
adc
scas
push
adc
fiaddl
dec
xor
sub
push
jl
sub
sbb
cmc
leave
cmp
ss
xchg
jns
pushf
cld
pop
cmp
jb
popf
jl
xchg
in
aas
inc
cmpsl
xchg
clc
pop
push
push
lret
mov
sbb
push
pop
pop
fs
push
je
sub
stos
scas
fdivl
hlt
push
lcall
mov
cmp
adc
mov
jmp
dec
int
cmpsb
push
orl
popa
sti
or
dec
pop
sbb
mov
lock
lcall
adc
push
imull
aas
sub
or
sub
es
sub
loope
scas
arpl
test
and
pop
inc
cmp
push
mov
adcb
clc
push
inc
sbb
stos
jmp
cmp
mov
inc
dec
add
mov
dec
sub
mov
roll
ds
stos
mov
jne
ret
mov
sub
jecxz
fidivrs
dec
dec
dec
cmp
jg
and
cmpsl
cld
xlat
fldt
into
in
shlb
scas
add
push
sub
pop
jo,pt
sub
jne
pusha
sub
mov
mov
mov
mov
repz
and
mov
mov
push
mov
orl
xchg
cld
stos
and
pop
out
mov
add
add
sbb
dec
pop
and
push
outsl
faddl
dec
and
mov
lods
mov
jne
xchg
cmpb
sub
paddb
xor
xor
mov
cmp
sub
pop
in
fisubs
fmul
sbb
in
xchg
fsubl
stos
jb
repz
jecxz
jns
xchg
enter
jb
leave
rorl
xchg
test
xlat
push
lock
jle
cmp
and
and
push
add
adc
mov
aam
xchg
cmc
ss
stc
cmp
dec
mov
arpl
loope
inc
mov
jl
mov
xchg
push
push
and
dec
sahf
lea
inc
aam
in
xchg
xchg
div
dec
cmp
inc
jmp
xchg
test
std
sarb
fists
dec
arpl
ret
and
mov
pop
mov
movsb
sub
jmp
jo
sub
pop
into
pop
push
pushf
cmp
push
push
fldenv
mov
das
dec
lret
mov
int3
dec
stc
pop
orl
mov
cli
or
pop
test
cltd
mov
ficoms
std
scas
xor
lret
xchg
repz
or
test
aaa
pusha
cmp
fsubs
repz
add
fnstenv
dec
add
test
movsb
pusha
mov
and
sbb
pusha
jg
inc
cmc
sbbb
aam
outsl
or
dec
jb
stc
push
movhps
data16
int3
stc
rclb
in
das
mov
xchg
sub
cmp
push
lahf
outsb
bnd
add
fidivrs
pop
addr16
sub
aad
push
mov
bound
add
sbb
fdivs
jg
addr16
repz
inc
jge
hlt
lods
lcall
gs
sub
lahf
jmp
jno
cmp
pop
mov
cmp
clc
cld
aad
test
or
or
cs
jmp
adc
jecxz
mov
sub
shlb
test
push
icebp
inc
mov
test
ret
cmc
inc
clc
subb
sahf
push
push
iret
push
sbb
add
push
add
add
mov
out
mov
je
dec
popa
push
in
rcl
mov
mov
and
xlat
orb
inc
bound
loop
inc
icebp
fs
sahf
pop
sti
pushf
adc
popf
lock
cs
inc
jne
mov
adc
mov
mov
das
xor
or
das
cmp
loope
sbb
mov
stos
inc
stos
test
and
push
inc
push
inc
jbe
jo
jbe
mov
xor
cmp
jo
dec
leave
lods
pushl
pop
jg
pop
scas
into
cmp
add
sub
cltd
cmp
jl
mov
inc
cli
mov
cmp
gs
pop
call
sbb
inc
popa
add
stos
js
lcall
dec
fnsave
dec
xchg
push
movsb
mov
mov
cltd
xor
movsb
rorl
ds
adc
mov
iret
ss
fs
push
shll
in
imul
pushf
jno
mov
aam
adc
jg
ror
cmp
nop
mov
lret
decb
ret
out
and
in
icebp
mov
test
in
mov
push
dec
adc
jmp
les
lea
push
sub
rcll
push
or
mov
cli
mov
lock
inc
xor
jnp
cli
xor
lods
sar
test
xchg
ret
fmulp
int3
das
sbb
rorl
pop
adc
push
push
mov
shll
sar
inc
or
mov
mov
fadds
test
push
frstor
lea
mov
ret
or
add
jle
jae
mov
pushf
pop
ret
daa
adc
out
sbbb
lret
add
enter
cmpsl
add
jecxz
mov
in
sarb
nop
xor
cltd
mov
pushf
xor
xor
adc
add
popl
push
leave
jae
push
imul
int3
es
fidivrs
int
and
js
mov
sbb
repz
sbbl
imul
mov
in
cmpl
mov
inc
fadds
push
shlb
adc
adc
test
ret
pusha
push
or
stos
jg
pop
test
mov
cwtl
xchg
sbb
clc
sub
push
jl
mov
cltd
fldcw
in
and
mov
fsubl
aam
push
rclb
sbb
xchg
pop
jmp
push
adc
cmp
pop
mov
testb
and
sar
dec
xor
or
mov
fsubl
aam
rolb
aaa
dec
and
lahf
xchg
stc
repz
js
mov
sbb
mov
sahf
mov
cwtl
je
shrl
xchg
or
xor
in
mov
adc
cmp
data16
mov
int
loope
aas
insl
inc
nop
xor
cmpsl
iret
clc
mov
loopne
mov
outsw
popf
scas
mov
push
push
sbb
and
mov
inc
insl
je
fwait
aaa
xor
pop
mov
inc
mov
mov
mov
and
inc
push
pushf
stos
cmp
stos
loopne
adc
sub
mov
mov
dec
push
std
stos
arpl
inc
cmpsb
addl
and
in
cmc
push
cmpsl
cmp
movsl
add
pop
add
push
mov
aaa
dec
dec
xor
or
adc
out
push
lods
xor
jmp
mov
loope
arpl
out
cmp
inc
pop
addb
push
jnp
fldt
ret
std
xchg
js
jnp
mov
decl
pop
popa
rolb
enter
mov
not
ljmp
sbb
sub
out
sub
mov
cmc
inc
lds
mov
sbb
jbe
dec
cmp
add
cmp
into
fcom
hlt
mov
or
add
xchg
aad
jmp
and
test
test
lahf
roll
pop
mov
out
or
xor
ljmp
inc
lret
loop
loopne
pop
inc
das
aaa
fnsave
adc
adc
mov
xchg
dec
pop
mov
cld
mov
scas
and
lock
xchg
out
jmp
mov
and
jle
mov
jge
das
jnp
sub
shlb
mov
ds
add
xchg
inc
jne
sub
mov
bound
or
jecxz
mov
mov
mov
out
dec
lret
cmc
xlat
cmpsb
xor
adc
leave
mov
fwait
into
dec
daa
into
or
sub
dec
addr16
adc
test
dec
add
repz
sti
mov
dec
cwtl
enter
cmp
das
mov
sub
and
xlat
mov
stos
dec
mov
das
push
fwait
pop
mov
scas
mov
xor
cmc
out
jge
push
iret
xor
lds
dec
out
mov
stc
test
pushf
aad
aad
mov
adc
test
xchg
jle
test
mov
stc
push
fwait
mov
push
push
and
mov
rcrl
jae
or
sbb
iret
add
cwtl
xor
push
loop
inc
jae
push
push
movsb
and
adc
xor
push
js
je
int3
mov
xor
xchg
and
and
clc
jb
cmp
subl
shlb
pop
pop
and
sti
fstl
mov
aaa
mov
add
cmp
pusha
pop
ds
jecxz
push
cmp
in
mov
add
clc
dec
mov
aas
addr16
pop
mov
push
or
stos
cmpsb
inc
fadds
cwtl
int3
into
xchg
gs
lock
cmpsb
fdivl
sti
mov
push
bnd
outsb
add
inc
add
movsb
imul
sub
dec
push
cli
rclb
jne
jno
xchg
pusha
push
pop
shl
lods
cmp
push
js
cmp
cmp
dec
mov
ret
call
add
imul
repnz
add
loopne
and
repnz
lea
and
in
daa
pop
jns
mov
stc
mov
jmp
cld
inc
stc
jmp
stos
adc
jl
xchg
adc
cs
add
or
adc
xor
sbb
and
loop
int
lret
inc
aam
mov
and
cwtl
cld
aas
mov
arpl
cmp
clc
icebp
adc
sbb
push
rcr
push
cld
idivb
mov
mov
add
dec
in
lret
test
xor
jmp
pop
xchg
lods
and
cs
jo
and
add
cmp
xchg
xchg
jmp
fucomip
pop
popa
xchg
std
xchg
inc
ret
stos
push
mov
or
lods
mov
xor
cld
mov
fwait
pop
pop
lret
into
jb
rorb
dec
jnp
and
cli
cli
xchg
pop
and
js
and
sbb
adc
xor
dec
xchg
pushf
movsb
mov
sahf
movnti
dec
outsl
and
pop
rcrb
pop
icebp
test
in
jp
xor
mov
bound
dec
add
andl
sbb
adc
push
mov
cmp
in
cmp
lds
ret
lds
outsl
pushf
mov
and
hlt
enter
mov
shl
lret
ja
mov
and
cs
fs
int3
cli
pop
jo
jp
jecxz
decb
sbb
jnp
imul
sarb
jns
xlat
stos
movsb
or
cmp
push
push
jb
stos
and
sub
fsubl
inc
pushf
repnz
adc
lods
cmpsb
outsl
add
jmp
imul
dec
clc
push
dec
popa
xor
or
mov
repz
push
xor
pushf
adc
lret
out
push
mov
stos
ja
xchg
ljmp
es
aas
mov
or
clc
lds
lds
xchg
inc
add
nop
xlat
dec
mov
fs
stc
int
fs
push
cmp
cs
hlt
cmc
mov
dec
dec
jecxz
inc
fstl
fsubr
push
imul
out
in
das
and
sub
pop
push
mov
add
dec
xchg
and
or
jns
mov
stc
mov
mov
and
pop
sti
out
sub
jae
shll
mov
jg
pop
inc
in
xchg
data16
imul
mov
mov
push
mov
int3
add
mov
daa
xlat
cld
sub
pop
icebp
cwtl
jb
movsb
cmp
jns
dec
clc
imul
push
pop
bswap
pop
xchg
push
mov
xchg
les
mov
or
enter
push
pop
push
out
sub
or
inc
dec
jne
jg
in
popa
std
push
insb
xchg
adc
mov
ja
mov
mov
xchg
icebp
jle
and
ljmp
imul
or
adc
lea
cld
subb
out
cmp
cltd
jge
repz
xchg
pop
jae
iret
xor
push
push
sbb
imul
test
enter
jo
pop
xchg
lods
cwtl
cmc
push
push
jmp
adc
je
or
push
test
dec
mov
lods
dec
and
fistpll
xor
push
sub
scas
rol
xor
leave
add
shrl
sbb
add
fwait
add
and
pop
mov
stos
sbb
cmc
inc
hlt
xchg
repz
ja
sbb
pop
inc
mov
xchg
push
push
and
in
jns
mov
sbbb
out
push
call
ljmp
in
loop
push
jbe
or
xor
push
lret
push
popa
pop
adc
imull
orl
push
stc
nop
mov
mov
push
pop
dec
xchg
mov
pop
jge
sti
push
xchg
enter
fmull
adc
gs
ds
shll
call
push
lahf
imul
aas
int3
std
push
or
pop
ret
mov
imul
aaa
xor
ficoml
negb
pop
lods
mov
fsub
pop
add
sti
in
mov
dec
push
movsl
int
jle
xchg
cwtl
mov
test
pop
adc
mov
and
sub
fwait
ds
addr16
mov
in
push
leave
push
pop
sub
fadd
test
out
fs
enter
sbb
jp
cmp
adc
aaa
add
aad
hlt
popf
jecxz
into
pop
out
xchg
sub
int3
lahf
jne
sahf
fcompl
pusha
es
int
leave
das
pushf
jmp
xor
xor
push
jmp
test
jge
push
xor
loopne
cmpsl
sub
sbb
lahf
sub
and
lahf
push
std
mov
test
sub
xchg
scas
stos
movsl
mov
mov
int
mov
and
addb
sub
nop
sub
mov
sub
pop
xor
sub
sahf
mov
lds
stos
and
jbe
fcompl
pop
shrb
jl
mov
outsb
movsl
outsb
push
hlt
addl
or
mov
sbb
xchg
dec
adc
xchg
push
dec
in
jnp
ret
sub
lcall
bound
dec
cld
les
inc
sar
push
adc
lods
bound
outsl
jno
push
pop
sub
jecxz
ficomps
fwait
cmp
mov
push
mov
jae
mov
push
sub
mov
jo
lret
stos
loope
inc
mov
jno
lret
std
mov
sub
sbb
pop
jno
jl
add
or
adc
js
ss
mov
mov
or
scas
inc
and
rcrl
mov
jb
jecxz
inc
xor
shlb
adc
mov
jno
sub
cmp
sti
add
adc
mov
shll
lret
fsubr
sub
int
aam
inc
pop
pop
scas
inc
mull
xchg
fistpll
loopne
jnp
leave
xchg
std
push
in
and
xchg
mov
push
add
inc
and
xorl
add
imul
test
mov
sti
mov
sahf
sbb
lea
jp
popa
sub
arpl
cwtl
popf
xchg
adc
and
jo
in
cltd
sbb
xchg
lods
cmp
repz
sti
cmc
pop
dec
shl
jb
xor
fsubrp
or
out
xor
jg
notl
dec
cmp
jle
pushf
xor
movsb
lcall
movsl
arpl
pop
jo
or
leave
or
scas
sarb
scas
push
shlb
or
fs
movsb
test
in
addr16
outsb
cs
les
hlt
testb
leave
sub
pop
rcll
adcl
imul
push
pop
das
cmp
fwait
enterw
ret
add
out
pop
hlt
pop
sub
xlat
lock
xchg
mov
fcomps
xchg
bound
xchg
leave
mov
sub
insb
cli
shl
pop
jb
popf
mov
jmp
fimuls
push
repnz
jns
jns
es
inc
adc
jbe
dec
add
arpl
fwait
mov
add
xchg
je
xchg
roll
push
out
cltd
daa
xor
nop
jg
jmp
pusha
push
pop
nop
jecxz
jle
jecxz
lcall
aas
jecxz
daa
xor
nop
pop
push
xchg
add
and
and
adc
movl
sbb
add
ret
pop
lods
hlt
cmp
loopne
gs
imul
and
add
add
xor
pusha
jl
lret
dec
in
lds
push
clc
mov
in
jne
in
lods
cmp
mov
or
sbb
jmp
insb
pop
test
in
popa
test
popa
inc
cmpsb
and
sbb
rorl
aam
daa
in
dec
out
cmp
ljmp
xor
ret
fwait
movsb
cmp
ss
inc
loop
ljmp
adc
lret
jbe
mov
push
or
inc
bound
fidivs
fdiv
add
cmp
movsb
pop
das
jno
in
or
pushl
fnstcw
cmp
add
add
test
movb
lds
jns
les
negb
imul
mov
movsl
mov
or
rorb
stos
push
push
push
push
arpl
push
xor
enter
jge
cmpsl
jns
js
fs
xchg
pop
lret
and
xor
mov
jmp
jl
je
addr16
sub
adc
mov
lds
xchg
shl
shlb
cs
lock
jl
sarl
clc
fistps
lods
lcall
add
fidivrs
lods
sbb
daa
sahf
and
sub
popa
ret
mov
jno
notl
pop
icebp
cmp
inc
orb
push
push
out
fnstsw
orl
fs
sub
jo
enter
mov
outsb
push
pushf
sarb
jle
dec
push
sbb
xlat
xchg
movsb
ret
outsl
js
movb
push
add
or
mov
js
dec
cmp
inc
xor
push
movsl
add
push
xchg
inc
repz
loop
ja
test
mov
sub
sub
loope,pn
fs
mov
sub
das
les
mov
daa
outsl
popf
jmp
mov
add
mov
daa
repz
inc
movq
insl
push
lahf
in
add
dec
pop
sbb
and
push
lock
push
pop
imul
pop
rcrb
adc
stc
jo
lods
adc
add
xchg
add
xor
pushl
and
cld
in
mov
mov
lock
cmpsb
and
mov
incl
nop
inc
out
mov
inc
dec
or
jnp
adc
mov
stos
and
cmc
fmuls
pop
popl
into
xlat
cmpb
mov
int3
gs
fstpl
insb
dec
shlb
mov
rclb
aad
pop
pop
loopne
fisubrl
idiv
dec
aaa
add
pop
ret
inc
dec
clc
push
xchg
jge
pop
adc
jmp
int3
int
test
jno
xlat
xchg
jecxz
popf
or
lahf
or
mull
addr16
sahf
and
fidivl
adc
or
jecxz
mov
sbb
dec
popa
test
mov
pop
mov
adc
mov
dec
inc
push
aaa
mov
xchg
adc
lcall
push
sub
lret
aas
sub
push
aaa
test
stos
mov
shrb
and
das
sbb
gs
sub
mov
pop
jbe
pushf
popf
ficomps
repnz
out
jbe
test
mov
in
mov
inc
push
repz
ljmp
out
sub
in
adc
mov
aaa
mov
pop
test
mov
clc
push
or
es
arpl
or
sub
mov
xor
cmp
jecxz
out
in
push
dec
push
fcomip
inc
jns
lahf
rclb
imul
sub
or
add
and
jle
cs
rclb
stc
cwtl
fistpl
mov
inc
jmp
inc
aam
sbb
ss
add
or
push
ftst
aaa
fs
mov
out
jp
jne
lods
imul
dec
pop
dec
sbb
hlt
testl
or
call
cltd
ret
fstpl
push
scas
lock
mov
jo
call
ret
mov
ss
sub
sub
mov
lret
pop
test
repnz
xor
adc
xchg
lds
shlb
adc
inc
les
lods
xchg
js
adc
mov
test
cmpsb
jae
sub
mov
xor
sub
jns
es
es
cmpsb
sbb
dec
movsb
add
sub
jg
or
mov
popf
jns
pop
fisubrl
ror
test
addr16
fistpll
cmc
lea
pop
jb
shll
xcrypt-ofb
cmpsl
jmp
lahf
loop
jecxz
jle
push
insl
or
jnp
negb
pop
popl
sti
xor
test
jb
outsl
or
xchg
mov
cmp
xlat
and
inc
in
xchg
inc
sbb
leave
fcmovnbe
test
orl
aas
aam
jno
push
push
mov
enter
and
sbb
in
arpl
sbb
sbb
fs
shll
scas
sbb
and
cli
xor
rcl
add
inc
aam
mov
repnz
or
mov
mov
filds
in
in
leave
inc
test
pop
inc
stos
and
daa
jno
and
dec
nop
addr16
sahf
inc
push
outsl
stos
push
adc
fwait
mov
jecxz
cmp
dec
jne
std
sub
sbb
out
push
mov
dec
in
gs
push
push
xchg
mov
cmc
scas
mov
out
adc
push
pushf
mov
mov
es
andb
ret
sarb
outsb
pop
sti
sub
fimull
or
mov
aam
ret
iret
clc
xor
mov
in
sub
ljmp
lods
sbb
xor
inc
add
js
lahf
mov
mov
push
sbb
pop
mov
movb
jns
and
pop
leave
test
mov
mov
data16
paddw
aad
xor
mov
sub
clc
aam
jbe
call
sti
jbe
test
push
cs
mov
fcmovnb
inc
push
hlt
sbb
pop
or
dec
ret
aaa
fdivs
push
divl
add
inc
imulb
adc
popf
fwait
push
cld
mov
movsl
pop
stos
pop
mov
add
out
out
dec
adc
push
inc
loopne
mov
and
int3
dec
mov
popa
arpl
fs
mov
pop
cmc
inc
ljmp
push
lret
mov
cmpsl
pandn
xlat
loop
clc
shlb
lahf
mov
cmp
mov
xor
mov
test
pmaxsw
fsubrl
lods
jle
xlat
cltd
xchg
jno
jmp
push
and
cmp
pop
js
mov
movl
insl
fbld
pop
adc
pop
test
push
pop
dec
mov
pop
dec
cvtpi2ps
mov
sbb
add
cmp
and
inc
adc
mov
cs
mov
and
mov
jo
test
lock
scas
sbb
lea
shrb
sbb
repnz
mov
sub
sub
int
dec
cmpsb
scas
mov
xor
outsl
mov
mov
pushf
cmp
push
pusha
push
pusha
aam
out
push
xor
insb
mov
and
jbe
ja
jge
sarb
enter
and
leave
stos
add
imulb
insl
es
loope
cmp
jne
jle
repz
mov
test
inc
pop
mov
lahf
xchg
aas
jp
xchg
jno
pop
cs
mov
insl
mov
pop
lea
inc
ffreep
nop
stos
pop
and
lods
scas
dec
mov
popa
repnz
and
dec
jl
xchg
pop
push
mov
dec
add
inc
adc
push
pusha
inc
das
mov
cltd
or
ret
lret
jae
mov
push
xchg
jne
sub
out
ret
leave
test
leave
or
cmpl
pop
dec
cmp
jo
mov
sti
sbb
dec
and
cltd
inc
dec
jecxz
pushf
sub
call
cltd
ret
les
shl
out
sub
add
fimuls
push
mov
in
cwtl
movl
fisttps
pushf
lea
push
add
and
xor
insb
add
clc
in
dec
je
jbe
xlat
icebp
movsl
test
cmpsb
test
add
sbb
iret
popa
int3
sbb
icebp
xchg
mov
out
cmc
xor
mov
dec
scas
xchg
jno
scas
mov
add
xlat
ljmp
adc
push
fwait
mov
fstl
xor
add
lds
cmpsb
mov
popa
mov
iret
xor
xchg
sahf
js
cmc
mov
pop
inc
dec
push
jne
in
and
dec
adc
test
imul
jp
aam
mov
stc
scas
sub
rcrl
adc
lret
or
ds
mov
sub
outsb
and
dec
cli
ret
lea
and
sub
popf
jbe
sbb
scas
cs
cs
push
push
dec
xchg
cs
mov
movsl
or
or
mov
cld
jp
pop
call
mov
and
xchg
fcomi
ret
mov
push
and
xchg
testb
test
push
clc
and
shll
xor
loop
mov
std
push
jne
fwait
jns
sbb
aad
test
mov
pop
std
jo
shlb
sti
out
subl
dec
movsl
push
mov
xchg
mov
imul
mov
pop
stos
adc
movsl
cmp
cld
aaa
js
scas
xchg
cli
jecxz
negb
sub
pop
push
jbe
mov
dec
test
fnstsw
xchg
test
repnz
lds
jb
mov
mov
addr16
push
push
movsb
sub
fwait
lea
pusha
sarl
outsb
popf
sub
into
push
movsb
nop
jns
lea
jmp
mov
and
pusha
mov
ss
jge
notl
xchg
cmp
pop
add
inc
push
sbb
sub
cmpsl
add
jge
jp
dec
in
fistpll
sbb
loop
xchg
xchg
sub
das
xchg
clc
test
inc
mov
in
jae
sbb
clc
and
outsl
or
daa
movsl
xor
rcrl
sar
pop
jno
xchg
xchg
subb
lcall
jb
sbb
lret
mov
ds
fisttpll
inc
addr16
ss
fisttpll
push
aam
sbb
cmp
dec
out
mov
push
call
mov
pop
or
int
into
in
add
mov
inc
ret
shrl
aad
or
insb
jmp
xchg
aad
js
sub
cld
pop
lret
mov
imul
cli
and
repnz
mov
or
loop
mov
lret
pmaddwd
je
or
dec
fiaddl
xchg
and
mov
xor
shll
shll
int
stos
enter
sahf
push
in
xor
push
jae
fdivrl
jns
mov
sahf
nop
xor
je
aad
movsl
dec
and
imul
sbb
std
popa
test
ret
in
xchg
pushf
rsqrtps
push
popa
dec
aaa
cmp
or
mov
arpl
mov
mov
mov
dec
pop
in
dec
in
adc
ss
cmpsb
sets
in
push
inc
pop
call
xchg
int
mov
repnz
cmp
jae
and
xor
jno
mov
cmc
loope
mov
inc
sub
and
push
or
outsl
sarb
lods
int
mov
jne
js
inc
sar
scas
jne
popf
xor
rol
mov
ret
dec
or
mov
adc
loop
addb
call
js
sub
lcall
js
mov
ret
ret
mov
inc
aam
and
cwtl
xchg
loope
add
adc
sub
out
adc
cwtl
leave
movsb
push
push
mov
test
sub
fbstp
push
rorl
fldenv
insb
jmp
jo
js
fisttpl
movsl
shll
sbb
lods
mov
cmp
mov
pop
sti
shl
push
pop
cmp
mov
ss
sbb
aam
sbb
iret
sbb
insb
push
stos
arpl
or
orb
or
inc
je
aas
sbb
aad
movsl
push
shrl
bound
sbb
xor
stos
pop
push
inc
fbstp
js
mov
mov
cmp
push
xlat
cmp
adc
push
fldl
and
test
repnz
arpl
mov
aam
add
jb
fcmovne
inc
in
repz
fcmovnbe
mov
mov
aad
xor
popf
mov
dec
jg
add
xchg
xlat
adc
mov
xlat
mov
mov
lods
push
mul
nop
cld
ljmp
fwait
push
test
push
push
sti
fstpt
cmovne
sub
dec
loop
test
test
or
ret
mov
push
jecxz
int3
negl
mov
cmc
mov
dec
xchg
push
clc
jns
loop
movsl
cmp
sub
push
jmp
ljmp
je
repz
jle
rol
mov
cmpsb
pusha
or
inc
jae
push
jnp
outsl
xor
movsb
cli
nop
push
aas
and
mov
mov
jbe
mov
arpl
xor
ds
lds
jno
lods
ss
fucomi
adc
scas
into
sbb
or
sbb
add
repz
incl
sti
icebp
inc
adc
aas
pop
outsl
xchg
mov
xor
int
sbb
inc
inc
cmp
jecxz
adc
dec
lea
call
pop
adc
cmc
pop
sub
shlb
sbb
sbb
fists
pushf
mov
push
fwait
je
xor
dec
mov
mov
push
sbb
add
xchg
dec
loop
jecxz
out
dec
mov
pop
imull
xor
stos
jae
mov
test
add
rorl
movsb
sbb
adcb
push
mov
xchg
jno
les
ret
mov
fsubl
ror
mov
pop
hlt
push
test
out
adc
in
push
test
or
sbb
hlt
add
push
scas
mov
jne
cmp
mov
inc
in
negl
add
push
lods
cli
jge
jns
jno
pop
rorb
iret
pop
mov
dec
cli
adc
fildl
ds
mov
add
push
xlat
and
push
testl
pop
lods
mov
xchg
push
ror
adc
sbb
dec
pop
or
loopne
dec
and
stos
push
sub
cmpsb
int
jmp
lret
lods
out
sub
lret
jp
sub
xor
fsubs
in
in
and
sbbb
scas
jb
add
push
pop
insb
or
pop
orl
loop
dec
and
outsb
roll
xorl
inc
jne
test
ret
orl
aaa
cmp
sub
xor
add
repz
sub
scas
add
lcall
and
mov
sub
fsts
xchg
loop
decl
sub
dec
pushf
cmp
mov
lds
sub
fiadds
ja
xor
cmp
popf
shlb
sub
lock
inc
mov
fmul
mov
adc
int
les
or
js
cmp
and
cmpsb
jp
into
cmp
leave
and
js
lcall
ljmp
mov
sbb
pop
cmp
lds
leave
imul
pusha
push
aad
mov
mov
inc
cmc
add
sar
imul
pop
mov
jge
enter
and
mov
xchg
imul
xchg
loope
xchg
fsubr
fisubrl
xchg
clc
cmp
or
test
push
loop
je
loopne
adc
push
push
roll
insb
cs
pop
test
cmpsb
test
fimull
jbe
inc
sarb
int3
push
shr
inc
rclb
lahf
xchg
push
fsubl
dec
test
outsl
mov
dec
cwtl
push
outsb
push
mov
sbbb
and
inc
inc
shll
aad
pop
and
loopne
scas
das
icebp
pop
outsl
sbb
jp
mov
popf
mov
push
out
pop
push
push
insb
pop
jge
outsl
and
cli
cs
jb
cltd
nop
es
jg
pop
add
icebp
rcl
loop
cmp
ret
cltd
xor
push
pop
cmc
mov
mov
mov
addb
cld
lods
add
in
lret
out
pop
shlb
inc
add
fidivs
add
loop
sbb
push
std
mov
dec
or
or
fwait
out
je
sub
mov
pop
in
addb
cmp
mov
pop
and
inc
cmpsl
movsb
fsubrl
cs
das
xlat
ljmp
lahf
push
test
mov
mov
test
test
jb
test
add
in
xchg
mov
mov
int
test
xchg
cli
xor
sbb
andl
push
mov
xchg
cmpsb
test
rcl
push
xchg
test
add
jp
and
nop
mov
out
ja
rcrl
mov
imul
push
out
or
mov
push
push
shll
out
push
loope
or
in
adc
shll
idivb
sub
nop
or
lock
mov
ss
xchg
cld
cli
movsb
jne
js
in
cmpsl
sti
dec
sbb
test
push
lcall
bound
aam
pop
lret
cmp
push
imul
sub
out
pop
xor
jl
xchg
ljmp
lahf
xor
jo
or
push
cmc
pop
aas
movsb
fidivs
mov
pop
pop
xchg
mov
into
and
fildll
sbb
fdivs
or
daa
push
or
sub
mov
int3
mov
lret
movsb
popf
and
adc
xlat
mov
addr16
mov
pop
pop
cld
xchg
addl
mov
push
movsb
test
jl
mov
xor
add
cmpsb
rorb
xchg
movsb
aam
ja
push
xchg
out
rcl
pushf
sub
test
out
push
cmp
les
mov
je
push
lods
mov
inc
push
and
pop
cmpsb
enter
xor
lds
lock
jmp
mov
jmp
data16
loop
pop
mov
mov
xlat
sub
ret
mov
movsl
cmp
in
push
mov
divb
push
xlat
addr16
adc
movsb
cmp
jnp
or
jbe
sub
pop
xchg
adc
les
jb
cmp
movsb
daa
aas
mov
mov
out
inc
inc
test
js
insb
dec
push
out
in
xor
dec
pusha
and
fstps
stc
pop
xlat
xchg
and
fildl
dec
xchg
rcrb
rcrl
aaa
mov
hlt
adc
leave
and
pop
mov
or
push
cmpsl
dec
mov
mov
fisttpll
jg
add
adc
mov
sbb
or
lahf
roll
cwtl
sub
insl
rcr
mov
cmp
out
cmp
in
lret
cmp
clc
lds
roll
jle
adc
or
movsb
test
repz
mov
and
mov
pop
or
sub
das
ss
test
mov
shrb
fimuls
push
add
sti
sub
aam
dec
xchg
adc
pop
mov
sahf
fldl
push
pop
adc
mov
mov
mov
repnz
adcb
mov
orb
push
pop
dec
repnz
aam
push
fists
cmpsl
pop
lret
ret
mov
cltd
lock
and
pop
push
dec
cs
loop
and
icebp
and
adc
jb
ret
cmp
push
adc
int3
sbbb
pop
lahf
xor
stc
push
xor
outsl
in
cmp
fldcw
and
rcl
sub
mov
xchg
jge
or
dec
inc
xchg
pop
jo
xor
adc
mov
dec
hlt
mov
cld
jae
fimuls
imul
loope
dec
mov
loopne
mov
inc
jmp
icebp
test
push
sti
xchg
pop
mov
pop
xchg
xchg
sbb
pusha
lea
cmp
jp
cmp
pop
adc
test
mov
mov
cmp
mov
mov
pop
xchg
jae
aas
test
or
clc
lcall
mov
jge
xchg
fcoml
hlt
xchg
negl
push
and
lret
int3
cld
mov
notb
mov
fdivrp
pop
test
sahf
xchg
in
or
jmp
mov
fwait
push
lret
adc
inc
mov
jnp
loope
cwtl
jae
mov
out
mov
icebp
jmp
push
xchg
xor
cmp
jns
pop
jno
inc
dec
mov
xchg
lock
pop
xlat
mov
mov
pushf
popf
out
or
push
jb
xor
and
mov
cmp
repz
xchg
mov
inc
into
out
sbb
pop
fidivl
mov
arpl
scas
or
xor
icebp
mov
sbb
dec
dec
addb
mov
rcr
sub
out
cmpsb
mov
push
mov
cltd
lds
add
test
mov
cld
repnz
mov
xlat
pop
mov
inc
jb
dec
out
mov
pushf
mov
aad
rclb
lods
das
sti
xor
mov
jmp
shll
dec
inc
mov
xor
xchg
ret
add
popa
ret
dec
mov
outsl
fiaddl
stc
xlat
popf
xor
and
jae
mov
ljmp
or
data16
ljmp
mov
mov
loopne
iret
jmp
or
mov
movsb
pop
push
imul
mov
inc
and
shlb
inc
movsl
in
xchg
mov
cmp
cmp
aas
mov
mov
or
or
orl
xchg
add
lods
mov
inc
insl
ror
loopne
cs
mov
push
mov
je
jp
cmpsl
icebp
test
mov
or
aad
sub
cwtl
and
xchg
mov
and
xchg
cltd
jo
aam
call
int
fnstenv
out
fsubr
pop
lret
add
or
jnp
mov
stos
mov
jo
clc
pusha
dec
dec
movb
and
or
aam
cmpsl
repnz
ljmp
sbb
mov
xchg
push
in
cmpb
nop
xlat
jbe
push
add
lea
clc
xchg
xor
cmp
ja
mov
das
mov
dec
cmp
into
loopne
imul
push
or
mull
inc
or
icebp
and
inc
clc
outsb
pusha
cmp
cmp
push
in
fwait
in
lret
push
jnp
gs
pop
movsb
and
xlat
mov
push
test
gs
mov
aas
pop
mov
lcall
push
mov
dec
mov
sbb
test
insb
enter
pop
add
jmp
pusha
in
pusha
rolb
push
xchg
xor
jno
je
and
sbb
xchg
inc
shlb
pop
cmp
xor
dec
jbe
jg
xchg
loope
inc
movsl
fsub
out
lcall
lret
cmp
and
jmp
and
test
sub
dec
cmp
inc
test
sub
paddsb
jecxz
xor
cli
add
mov
out
lret
aam
xor
jae
scas
jno
int
call
in
mov
rcl
arpl
aaa
andb
mov
ret
push
mov
and
scas
pop
in
push
mov
popl
popl
aaa
dec
std
test
gs
aas
mov
jg
in
push
push
cld
mov
xchg
lods
pusha
inc
mov
das
pop
push
mov
jns
testl
int3
and
push
fcoms
push
mov
sub
dec
inc
mov
lds
fcoml
mov
push
mov
loope
dec
out
test
dec
cmp
and
push
fsubs
imul
stos
imul
cmp
test
adc
mov
inc
arpl
aad
fdiv
pop
shll
push
sbb
insl
or
addr16
loope
pushf
pushw
pop
in
add
fistpl
bound
mov
mov
out
stos
lret
sbb
imul
xor
daa
call
addl
push
das
pop
lcall
add
stos
dec
mov
mov
mov
lcall
mov
and
repz
outsl
inc
insl
out
setp
push
mov
xorb
jl
jle
inc
popa
xchg
cwtl
push
std
lcall
jb
mov
addb
xchg
sahf
hlt
fs
cmp
cmpl
lahf
or
std
outsl
xchg
sbb
push
mov
add
xchg
pop
test
add
sub
leave
and
dec
lea
adc
sahf
out
std
inc
popf
or
inc
mov
xor
pop
shl
je
aas
sub
es
iret
test
add
mov
push
es
lods
dec
test
loop
fidivl
xchg
dec
cmp
leave
aas
inc
mov
clc
add
fisttps
lea
mov
add
fdivrs
xchg
pusha
jns
insb
fbstp
cmp
cmpsl
sbb
call
dec
mov
ja
sub
jmp
xorb
xchg
jmp
insl
lods
dec
push
icebp
mov
movsl
jle
mov
mov
fbstp
push
inc
lcall
stos
cmp
imul
cld
ja
cwtl
jns
cwtl
idivl
dec
test
test
adc
lret
cmp
iret
loopne
xor
test
cli
mov
xchg
ds
ja
mov
cmp
jg
mov
push
dec
rcll
aad
inc
rcrl
daa
in
out
pop
add
xchg
xor
nop
hlt
out
add
push
sbb
mov
js
dec
xor
cmp
xchg
or
insb
jl
shrb
repnz
xorl
popa
and
mov
jns
enter
or
inc
lahf
rorb
call
popf
in
pop
stos
mov
insl
popf
insl
inc
adc
xchg
fisubl
cltd
jp
pusha
bound
adc
push
mov
xlat
xchg
pop
loope,pn
and
mov
mov
rol
sbb
fbstp
pop
adc
cmp
cs
insl
daa
icebp
mov
jge
rol
arpl
movsl
stc
fidivrs
xor
jnp
cmp
insl
jecxz
or
cmp
add
aad
mov
lret
stc
popa
mov
fstpt
cs
sub
hlt
push
scas
mov
pushf
loopne
nop
out
dec
jmp
push
pop
jbe
xchg
mov
adc
in
mov
adcb
fnstenv
cmp
cs
inc
bound
cmpsb
xchg
adc
xchg
repz
lods
jg
ret
ss
mov
jecxz
js
ljmp
shll
movsb
fldcw
orb
jnp
je
jae
insb
cmp
push
or
mov
test
jmp
insl
inc
xchg
sbb
add
inc
cmp
mov
xchg
frstor
out
xchg
lahf
pop
cmc
push
xor
xchg
mov
push
mov
or
jnp
jb
lahf
jp
fs
sahf
jg
mov
ret
loop
mov
add
add
sub
push
les
mov
daa
dec
add
pop
inc
lds
add
imul
sub
les
mov
inc
or
mov
sbb
mov
jp
dec
lret
and
sub
inc
mov
xchg
outsl
clc
movb
pop
pusha
jmp
gs
sbb
in
sub
mov
fwait
pop
pop
and
cmp
mov
and
movsl
jb
mov
jnp
jns
stos
addr16
and
into
out
mov
daa
and
mov
push
ucomiss
rol
std
nop
gs
xor
imul
sar
sbb
loopne
lahf
jge
addr16
sbb
push
out
add
inc
dec
sub
iret
cwtl
mov
sub
adc
cmpl
and
andl
inc
outsl
or
jnp
jne
int3
cld
cmp
arpl
movsb
out
inc
jbe
or
lcall
out
lods
sbb
dec
pop
xor
cli
cmc
mov
icebp
adc
sbb
mov
cmpsl
cmp
nopl
cmpsb
pop
shlb
add
fistpll
mov
repnz
xor
dec
aaa
add
and
insl
xchg
ds
std
fwait
pusha
hlt
ljmp
dec
in
mov
dec
adc
xchg
lret
xchg
imul
sbb
in
lds
cmp
clc
incb
icebp
ret
stc
lds
scas
dec
mov
rcl
out
cmpsl
das
sahf
icebp
cmp
mov
arpl
mov
cmpl
mov
imul
push
adc
lods
xchg
movsb
nop
push
in
sub
mov
sarb
out
xchg
or
sub
push
aad
sub
adc
fndisi(8087
xor
lret
xchg
popf
adc
mov
mov
mov
inc
mov
mov
je
xor
scas
add
inc
and
mov
mov
shl
adc
out
adcl
mov
jae
fmuls
jmp
sbb
xlat
pop
mull
add
or
rcr
in
pop
sti
xchg
push
mov
pop
jb
cld
add
and
test
inc
and
loop
lods
xchg
push
pop
rcll
xchg
shlb
jmp
mov
outsl
pop
pop
cmpsb
add
jg
push
jge
ja
popf
mov
cld
movsb
sub
out
lcall
push
add
push
test
xchg
sbb
rcrl
movsb
das
aam
xorl
mov
or
fsts
dec
add
lret
fs
push
or
ret
mov
mov
push
test
lds
orl
dec
add
sub
sbb
dec
push
mov
pop
pop
push
stos
fldenv
sub
scas
arpl
test
mov
add
enter
sub
jae
imul
sub
and
fldlg2
add
pop
xchg
xor
jle
or
mov
fimull
push
cmpsb
push
fisttps
leave
bound
rclb
mov
setae
xor
outsl
dec
add
mov
mov
mov
jo
push
cli
cs
pop
bound
push
into
and
and
loop
aaa
outsl
roll
xchg
std
inc
jae
out
cmp
fadds
jmp
dec
add
add
or
and
outsl
adc
dec
inc
push
addr16
cmp
sbb
push
pop
mov
cmp
pusha
cmc
push
mov
aaa
jl
mov
fldt
or
xor
pop
aam
aad
cmp
mov
mov
iret
sti
sbb
inc
jbe
roll
frstor
and
rolb
sbb
and
jb
pop
subb
fisubrl
outsb
out
idivl
dec
xchg
jg
negl
mov
cmp
inc
lods
xchg
cmp
outsb
fsubrs
mov
push
xchg
and
movsb
outsl
daa
jmp
cmp
pop
imul
jae
sarb
dec
mov
add
mov
xchg
push
adc
dec
adc
xor
std
js
inc
je
jecxz
push
xchg
pop
cltd
enter
mov
xor
pop
ret
sbbb
stos
and
cmp
mov
xchg
mov
daa
daa
loopne
orb
dec
lock
pop
add
and
jle
push
fiaddl
jecxz
mov
add
outsb
mov
ljmp
aaa
add
fidivrl
imul
cltd
shll
in
xchg
mov
leave
sub
inc
in
sub
cmp
cmp
iret
cmp
or
push
xchg
lods
add
adc
loop
test
xor
inc
mov
xchg
mov
movb
jbe
mov
pop
cmp
icebp
inc
into
ficomps
inc
imul
adc
jne
lret
pop
xor
out
add
jns
lcall
jb
into
cmp
mov
sbb
movsl
dec
adc
mov
ret
stos
pop
call
lret
inc
shlb
pop
nop
jecxz
push
or
cld
cmp
push
push
into
mov
sub
shrl
mov
mov
pop
je
jnp
sub
fneni(8087
ret
mov
jg
repz
cltd
lret
inc
out
add
in
gs
push
fimuls
xor
sub
cmpsl
xor
nop
pop
iret
jecxz
orl
fistl
pop
fldt
js
filds
icebp
hlt
adc
insl
jmp
pop
inc
pop
movsb
xor
xchg
mov
sub
push
sbb
pop
jnp
xor
fldl
add
inc
sar
stos
pop
mov
ret
inc
fistps
adc
dec
xchg
andl
cmp
mov
mov
and
mov
jle
fcompl
mov
pop
jecxz
enter
call
icebp
jns
add
stos
sub
push
and
test
xchg
sub
mov
pop
pop
mov
xor
xchg
jg
stos
aaa
test
mov
bound
push
xor
cmp
push
lcall
dec
clc
das
mov
push
mov
ret
mov
add
inc
adc
js
xchg
orb
push
mov
push
and
sti
inc
bound
divb
jnp
inc
xlat
lea
pop
mov
pop
fcmovu
mov
std
int3
mov
push
stos
rcl
adc
fimull
aas
sbb
jnp
jl
daa
jno
das
xchg
ss
xor
jg
fisubrl
xchg
push
dec
add
insl
pushf
add
cmp
pop
inc
sbb
popf
sahf
divb
nop
imul
mov
pusha
out
push
scas
lret
mov
cmp
push
add
push
dec
jmp
jbe
mov
ret
ljmp
inc
jno
fsubrs
inc
bswap
mov
jo
sub
lcall
sub
test
xor
ss
jmp
inc
frstor
ljmp
rclb
jmp
push
les
aaa
aam
push
daa
pusha
xchg
in
std
mov
frstor
addr16
cmp
test
faddl
xchg
jg
jnp
in
pop
mov
jnp
in
mov
xchg
loop
mov
xlat
push
xchg
and
dec
push
mov
cwtl
mov
repnz
fcoml
ret
insl
in
out
fildl
cmp
aam
jmp
cmp
push
jg
movsb
dec
test
push
test
js
adc
mov
xchg
push
es
loope
rorl
outsb
fimull
sub
loopne
pop
arpl
int3
idivb
pop
jp
mov
mov
movsl
adc
cmpsl
and
dec
inc
pop
roll
fisttpll
outsl
or
ljmp
and
ret
fists
int3
xchg
mov
fidivs
data16
cmpsl
jge
inc
imul
pop
lret
aas
adc
xchg
cltd
in
dec
roll
pop
cwtl
and
dec
lahf
push
notl
cmpsb
emms
pushf
jb,pt
dec
and
es
mov
pop
fisttpll
xor
and
add
jle
or
movsb
out
and
sahf
sar
out
pushf
push
pop
clc
fisttps
into
sbb
mov
rcrl
jg
mov
outsl
call
xor
pop
sti
mov
test
xor
pop
gs
sbb
aad
shl
in
xchg
int
cwtl
cli
ljmp
jle
popa
and
daa
jbe
mov
lcall
lret
xor
cmpl
mov
xchg
pop
cmp
scas
mov
test
cmpsb
and
mov
or
movsb
scas
out
add
inc
jmp
in
test
or
aaa
aam
ret
pop
jns
or
popf
sub
push
xor
xor
inc
fwait
insb
mov
pop
cmp
xchg
loop
shll
sbb
adc
or
cmpsb
icebp
into
dec
mov
cli
sub
xor
inc
jmp
sub
push
popa
mov
push
in
dec
xchg
int3
and
pop
mov
aad
aad
js
dec
cmp
inc
ja
jle
cltd
push
sbb
lret
sti
ds
push
xchg
lods
hlt
xlat
ja
addr16
and
adc
pop
cs
pop
rorb
xor
lods
jp
insl
sarb
mov
inc
inc
cs
fisubrl
sbb
or
pop
scas
cld
mov
popa
imul
test
cmp
xor
jno
push
cltd
mov
mov
clc
stos
outsb
cmp
negb
mov
cmp
mov
xchg
fld
movd
rcll
ds
mov
roll
xchg
idiv
sti
pop
shlb
mov
cwtl
or
inc
add
xor
pushf
push
and
cmp
fidivrs
stc
push
movsb
push
loop
adc
push
pop
add
mov
unpcklps
sub
ljmp
fdivp
dec
aad
jl
adc
pushf
shl
push
adc
xchg
or
pushf
ficompl
out
out
cmp
rcr
mov
je
test
es
add
sbb
pushf
fldcw
fcmovb
sbbb
lds
xchg
std
cmp
dec
add
ret
ss
and
mov
pop
shlb
sbb
push
cmp
add
and
push
or
jno
pusha
faddl
jg
fs
out
push
xchg
rcrl
popf
clc
cmp
mov
jmp
mov
jge
pop
inc
jb
jmp
call
add
lds
add
mov
mov
iret
call
ret
mov
sbb
adc
movsl
aaa
sub
adc
push
mov
push
jo
pop
mov
pop
mov
and
cld
les
sti
aas
in
dec
leave
jge
fcmovnu
mov
cmpb
dec
mov
pusha
out
mov
sbb
aaa
xor
pop
test
and
pop
or
out
std
pop
add
les
repz
inc
sahf
idivl
fstps
icebp
xor
pop
xorb
push
jg
call
sbb
pop
push
int
add
roll
mov
repnz
fdivrl
cmp
or
call
loope
push
xor
sbbl
scas
mov
mov
cmpsl
dec
and
loop
sub
mov
je
test
sub
mov
inc
ss
push
movsb
xchg
jl
shll
push
fimuls
inc
mov
je
mov
call
fidivrs
mov
push
rcrb
adc
inc
or
xchg
test
or
addr16
fadd
stc
test
dec
or
dec
in
popa
add
dec
sub
mov
pusha
sbbb
xchg
aas
xchg
push
sub
push
iret
mov
lahf
movsl
sub
xchg
mov
sbb
dec
fdivs
out
mov
fdivs
repz
mov
xor
aaa
shrb
jb
mov
jle
xlat
jbe
cli
inc
sub
cmpsl
xor
sub
push
dec
ret
jge
pop
or
fs
dec
shll
add
xchg
sub
mov
push
sbbl
sub
jns
mov
dec
cmp
inc
add
or
mov
ds
popa
xchg
out
sbb
js
in
adc
push
push
data16
jl
je
or
jno
sub
xor
xchg
pop
imul
adc
mov
bound
stos
les
addb
test
push
aaa
mov
out
add
shrb
mov
shll
mov
sbb
bswap
jle
xor
jg
fcom
xchg
ss
mov
xorl
addr16
jo,pt
lods
enter
pop
push
cmp
mov
fidivs
lds
clc
ror
lret
loopne
stos
xchg
ljmp
inc
jl
ret
xchg
sbb
fcoms
jno
dec
dec
sahf
cmp
out
dec
inc
clc
sbb
inc
gs
bound
cmp
push
sbb
dec
mov
in
bound
inc
sub
add
popf
pop
in
rcrl
ficoms
je
stc
jge
push
pop
inc
cmpsb
cmp
mov
mov
inc
ds
sub
sbb
ret
pop
dec
pop
add
mov
jae
inc
les
mov
rclb
in
push
mov
shl
aaa
es
push
cmp
test
push
ljmp
jle
scas
adc
fdivrp
xchg
jnp
adc
adc
xchg
lret
and
jbe
pop
xchg
fsub
fisubs
or
mov
data16
mov
inc
jae
mov
js
shlb
xchg
in
push
jp
push
mov
mov
data16
cmc
movsb
in
int
dec
psrld
xchg
dec
dec
lahf
inc
add
add
xor
movnti
xor
sub
inc
pushf
push
push
out
xlat
fistps
xlat
pop
inc
mov
sahf
stos
sub
filds
rorl
sbb
es
push
mov
into
test
jbe
mov
lret
push
mov
push
hlt
das
mov
xor
cld
es
mov
ret
or
push
movl
xor
movsl
and
xchg
adc
xor
aam
mov
ja
adc
je
jle
test
ljmp
in
jno
xchg
jno
jg
nop
fdivl
das
cmp
cmp
mov
fwait
mov
pop
fistpl
imul
bound
mov
int
aaa
push
sub
or
or
cld
leave
test
les
xor
insl
cmpsl
xchg
pushf
pop
adc
mov
sub
mov
xor
add
test
inc
aam
test
mov
push
in
arpl
sbb
mov
dec
in
push
xchg
outsb
aad
xchg
cmp
push
cli
rcrb
pop
scas
lock
loopne
out
pushf
std
movsb
dec
loopne
push
pop
shl
jecxz
mov
dec
sub
in
cwtl
push
push
and
jp
add
pop
and
mov
cmp
vpsadbw
xor
lods
mov
cmp
cmpsl
test
cmp
arpl
inc
pop
mov
sbb
idivl
fistpl
lret
mov
mov
mov
and
enter
mov
test
int
mov
mov
sub
sub
fstpt
inc
lods
mov
lcall
adc
xchg
mov
leave
jns
mov
imul
adc
and
mov
add
loopne
ret
xchg
dec
cmp
shll
xor
cmp
scas
inc
xlat
adc
jno
xor
sbb
sahf
sbb
fidivl
mov
imul
xlat
shlb
cld
out
xchg
inc
out
stos
repz
fdivrp
loop
inc
jge
sbb
lret
divl
shlb
xchg
add
adc
cmp
adc
pxor
icebp
in
sub
pop
shl
xchg
inc
aad
adc
scas
jmp
pop
mov
xchg
hlt
mov
inc
mov
fisubs
mov
movsl
test
pop
lahf
push
sbb
imul
and
fdivrp
addl
xchg
mov
sbb
lcall
push
out
sbb
orb
icebp
xor
std
ljmp
divb
into
or
sbb
dec
dec
ror
cmp
dec
lea
fwait
cli
fstps
xor
into
insl
roll
jge
es
xor
push
lods
das
add
dec
mov
or
mov
out
jae
mov
mov
mov
movsb
push
dec
cmpsb
and
test
aaa
fcoms
cs
xor
mov
pop
int
adc
inc
and
test
xor
gs
insb
push
sub
test
cli
fdivs
adc
mov
dec
popf
pop
xor
test
loop
addl
arpl
mov
and
xchg
jne
jbe
jo
pop
and
imul
push
jmp
cltd
add
sub
inc
sub
cmc
pop
das
add
loopne
test
jo
or
and
stos
lds
lahf
push
ljmp
add
fcomi
add
mov
lods
lret
je
push
movsl
push
js
sub
push
mov
dec
sub
pop
xor
fwait
in
sub
shrl
insl
mov
ss
into
xor
or
aaa
dec
data16
xchg
xchg
punpcklbw
push
or
cmpsl
stos
push
popf
or
pop
popa
aam
push
mov
push
imul
inc
add
mov
outsl
pop
inc
pushf
push
aaa
mov
mov
test
and
frstor
clc
pop
hlt
loope
sub
ljmp
xchg
jns
add
and
jl
loopne
arpl
sbb
and
stc
and
mov
das
jnp
arpl
outsl
cmpsb
mov
jg
add
push
push
mov
mov
sub
pop
inc
or
aam
pop
or
jne
inc
test
pop
or
faddl
add
pop
jb
clc
bnd
ja
xor
adc
mov
popa
add
add
add
fucomp
popf
lret
push
aas
js
sub
xchg
jmp
dec
add
pop
mov
cmp
cmp
inc
out
xor
mov
jp
sub
das
stc
nop
xor
mov
sub
sbb
enter
push
inc
mov
repnz
daa
dec
loopne
and
pop
imul
adc
arpl
sbb
loopne
inc
push
nop
aaa
push
sub
out
fstpl
out
or
ljmp
jle
ret
push
mov
lock
das
mov
sbb
into
xchg
sahf
sub
ss
jecxz
pushf
sub
sti
pop
popa
xchg
push
bound
out
xor
stos
lret
insl
xchg
mov
pop
movsl
dec
test
mov
add
and
lcall
stos
inc
xor
push
xchg
pop
repnz
and
sub
xchg
xchg
lea
add
lea
dec
xor
out
fidivs
push
lahf
outsb
shl
shrl
lret
adc
outsl
pop
mov
jl
cmpsl
and
jne
pop
faddl
test
out
and
loopne
pop
jns
cmpsl
mov
testb
inc
shrb
mov
mov
stc
sub
inc
mov
mov
cld
mov
lea
mov
repnz
scas
enter
ret
insl
shl
jmp
cld
add
mov
sub
lods
jnp
arpl
xor
mov
push
mov
ret
loopne
mov
or
and
scas
jnp
push
nop
xchg
cld
out
rclb
outsl
adcb
stc
dec
ds
xchg
icebp
xchg
xor
outsl
add
repz
notl
cmpl
xchg
push
mov
pop
jb
daa
pop
push
loope
and
cmc
repz
sti
in
add
cmp
movsb
cmp
lret
adc
dec
shl
mulb
decl
sahf
xchg
shl
or
fidivrl
xor
or
push
jp
push
or
and
pop
push
stos
add
das
lret
mov
push
mov
fs
js
inc
enter
mov
cwtl
xchg
jns
xchg
pushf
stos
mov
inc
daa
out
cmp
call
add
mov
fxch
lret
mov
xor
out
call
cmpsb
adc
hlt
aad
in
add
repz
xchg
cmp
or
dec
mov
imul
sbb
imul
push
arpl
leave
test
cltd
adc
aad
loopne
push
or
jecxz
test
push
sub
subb
movsl
in
push
gs
andb
jmp
adc
test
add
xchg
dec
push
xchg
adc
mov
mov
cmc
mov
imul
dec
inc
mov
cltd
js
fadds
hlt
sub
nop
and
push
repnz
in
xor
enter
pop
cmp
add
pop
aas
out
push
adc
adc
xchg
xlat
sti
sub
xor
jle
je
fs
test
mov
or
mov
cmp
cld
sbb
jae
ss
lods
inc
mov
sub
les
repnz
ret
xchg
sti
xor
mov
sub
out
mov
loop
sbb
dec
pop
mov
dec
js
icebp
pop
push
inc
sub
lods
inc
pop
inc
ja
lods
add
sbb
shlb
test
insl
popf
in
sub
sub
sbb
mov
sbb
jl
popa
pop
jns
in
mov
rcr
push
negb
cltd
es
jl
imul
fimuls
xchg
push
mov
les
jne
mov
or
mov
pop
sub
not
das
cmp
jle
dec
mov
add
cmpl
jg
arpl
sbb
xor
sub
shlb
sbb
jge
xor
pop
or
jp
stos
adc
stos
out
enter
pop
mov
inc
dec
sahf
and
std
pop
in
lret
push
stc
sub
mov
jmp
inc
cltd
cli
or
xchg
jb
jns
jle
push
xchg
dec
sub
sub
ret
add
cltd
jne
inc
lods
cmp
shl
aam
rorb
dec
popf
rorb
and
scas
imul
orb
ljmp
mov
stos
aas
imul
idivl
mov
cmpsl
rorb
jbe
pop
or
test
daa
and
ljmp
push
sub
jno
add
cld
cmpsl
lret
dec
pop
pop
mov
data16
or
loop
and
add
out
in
cmc
jbe
sbb
into
lods
std
mov
jo
mov
js
jo
mov
xchg
shll
pop
mov
xchg
xchg
xchg
inc
pop
sbb
call
test
jle
sub
jmp
sarb
clc
test
mov
ss
sub
and
cwtl
mov
cmp
aas
dec
movsl
push
mov
gs
stos
das
fnstenv
outsb
fists
mov
jb
xorl
pop
xor
jecxz
add
icebp
mov
sbb
std
sbbl
jp
movsb
je
dec
fucomi
mov
movsl
nop
adc
pusha
jle
test
js
xor
dec
fnstenv
aaa
jbe
fldl
pop
shlb
sub
out
adc
or
mov
test
add
sub
push
inc
int3
dec
mov
aam
mov
pop
daa
jnp
or
mov
ljmp
adc
adc
jmp
sbb
mov
insb
xlat
xchg
push
mov
cmp
lea
and
fcmovnb
or
push
xor
push
mov
fildll
adc
jae
std
iret
xchg
nop
test
div
cmp
mov
sub
rcrb
mov
std
mov
mov
jae
mov
mov
adc
xchg
sub
ss
or
xchg
movsb
sarb
test
test
lds
sbb
ret
mov
mov
sbb
in
leave
sub
ja
add
in
sti
add
in
lods
push
mov
fildl
fbstp
movb
mov
or
pop
arpl
ror
pop
je
xchg
dec
and
push
cmp
dec
push
jne
test
pop
pop
addl
cld
push
fdivrs
insb
cmpsl
out
imul
scas
jb
scas
inc
je
and
mov
arpl
daa
mov
sub
aaa
out
mov
mov
or
pusha
xor
xchg
xchg
lret
push
lcall
lods
xchg
je
nop
shrl
andb
jl
cmp
push
lret
pop
movsl
fdivrl
popf
cwtl
or
sbb
mov
mov
rcrb
js
adc
dec
adc
xor
inc
dec
testl
aam
push
lock
lea
daa
or
xchg
das
fsub
dec
cmp
ja
xor
or
inc
aas
loope,pn
mov
pop
xchg
and
add
into
jmp
xchg
inc
dec
pop
inc
sahf
push
xlat
sbb
repnz
adc
xor
xchg
sti
cwtl
or
jns
in
adc
push
cld
int3
xlat
cmc
es
cmc
sahf
xor
lods
sbb
sub
fbld
cld
fisttpll
mov
add
and
movsbl
or
sbb
in
in
aaa
inc
mov
ret
clc
inc
xor
pop
xchg
mov
jle
pop
lret
and
lods
push
orl
pusha
adc
std
adc
pusha
pop
jo
push
je
lahf
lds
adc
sub
pop
inc
xor
mov
xchg
xor
lock
repnz
ss
push
or
mov
repz
push
mov
pop
imul
mov
idiv
adc
inc
jns
cld
dec
dec
lods
add
negl
inc
xchg
pop
adc
inc
sbb
jae
mov
mov
fs
mov
gs
lret
xor
xchg
xchg
mov
xor
push
bound
pop
mov
scas
aaa
mov
push
xor
cmovo
add
arpl
cltd
mov
out
scas
push
jmp
aad
xchg
icebp
jbe
cltd
daa
out
or
add
in
jo
flds
adc
jbe
fdivrs
popa
sarl
cmp
sub
ds
mov
in
jnp
int
loopne
sar
jo
pop
das
jp
gs
cltd
popa
addl
enter
cmp
out
jo
sbb
jo
adc
sub
lret
mov
outsb
pusha
sbb
jecxz
mov
addl
loope
jge
popa
popa
pusha
andb
xchg
scas
nop
sbb
imul
fcomps
or
and
arpl
arpl
sbb
mov
stos
hlt
mov
jne
negb
lret
jbe
xchg
cli
or
push
add
jns
cmpsl
and
xchg
dec
notb
jne
mov
mov
imul
jl
add
data16
inc
lcall
fs
push
mov
jbe
cmp
cmpl
outsl
mov
jle
push
insl
jle
sub
jae
dec
inc
leave
mov
sbb
iret
mov
test
add
inc
aam
sbb
push
fs
xchg
pop
mov
aad
sub
out
sbb
mov
mov
dec
jne
ss
inc
xchg
jb
rcr
je
lods
jl
in
icebp
out
mov
mov
int
sub
es
mov
out
mov
cmp
sbb
fs
lods
sti
add
xchg
in
adc
xchg
out
stc
mov
popf
mov
dec
mov
or
clc
data16
imul
and
sarb
ljmp
or
push
stos
icebp
mov
or
lcall
jg
inc
jae
adc
bound
xchg
imul
mov
sub
mov
add
or
jl
sbb
rolb
stc
jae
lods
xchg
sbb
or
repz
mov
jno
pop
cmp
adcb
mov
outsl
xlat
xor
fsubrl
popa
push
pop
pusha
inc
cmp
push
or
into
pushf
sti
les
sbb
add
lcall
rcl
sbb
xor
scas
ds
iret
inc
imul
rcll
dec
xchg
jae
out
jns
out
pop
push
daa
mov
adc
cmovae
stos
in
push
iret
push
nop
popf
push
out
xchg
mov
xor
movsl
stc
aad
stc
bound
ret
pop
inc
sbb
xchg
ja
or
mov
jge
mov
jb
imul
das
cmp
pop
inc
fdivs
push
sub
xchg
lret
fs
push
mov
jb
xlat
cmpsb
xchg
jge
sub
lods
mov
add
cwtl
add
scas
mov
xchg
dec
addb
mov
filds
jo
mov
sub
mov
cmpsb
and
mov
out
xor
xchg
pop
inc
das
iret
push
stc
lret
dec
cwtl
sub
lock
test
xchg
sbb
adc
mov
xchg
hlt
lret
test
andl
lret
lret
xor
jmp
mov
ljmp
fs
aas
imul
jae
add
mov
ret
cmp
stc
test
mov
repz
mov
das
inc
loop
shl
iret
dec
inc
xor
aam
pop
dec
fmuls
jb
xor
xorb
xchg
xor
imul
xor
lock
push
popl
iret
and
push
lods
adc
jnp
imul
xchg
test
loopne
xor
cli
jae
lds
lds
mov
adc
inc
add
mov
arpl
jae
dec
hlt
pop
xchg
or
paddsb
and
cwtl
push
mov
jmp
add
lods
add
ss
fnstsw
sub
sbb
xor
inc
adc
adc
mov
test
insb
mov
mov
xor
xor
cmpsb
xchg
stos
aaa
arpl
stc
fnstsw
outsb
int
mov
inc
jmp
sub
pmovmskb
out
sbb
cs
push
jb
jo
das
xor
xchg
mov
or
int
jnp
xchg
fwait
insb
push
testb
dec
sahf
mov
shlb
in
inc
aam
mov
push
loopne
xchg
push
sub
clc
sbb
rcl
mov
das
jp
arpl
or
insl
push
sbb
repz
push
dec
and
fcmovnbe
mov
in
and
les
aam
insb
fidivrs
pushf
xchg
and
jne
nop
sti
pushf
outsl
mov
sub
fisubrs
xchg
cmp
push
xchg
lods
add
cmp
lret
add
cmp
pop
fadds
pop
push
sarl
addb
lret
pop
pushl
xsaveopt
out
add
dec
outsb
mov
sub
dec
pop
inc
jb
mov
jno
pop
bound
aad
jg
sarb
loop
je
push
js
mov
push
mov
pop
movsb
ret
dec
stos
xchg
or
mov
cmpsl
cmc
jp
push
and
out
push
ljmp
mov
bound
cmpsl
mov
lock
out
add
in
jae
and
jl
mov
cs
sbb
mov
inc
mov
lret
and
cmp
dec
push
sub
mov
push
shrl
sbb
inc
mov
loop
push
push
int3
pop
aaa
xchg
pusha
fdivrs
lcall
lret
mov
jle
mov
mov
fs
subb
sti
stc
mov
lods
mov
jae
test
push
jbe
int3
stos
adcb
cli
mov
les
aas
and
int
orl
and
in
es
ret
jecxz
aam
adc
movsl
sbb
stos
in
lahf
lret
push
xchg
or
icebp
pop
movsl
fsub
fcomp
movsl
mov
out
mov
mov
imul
dec
lea
in
lret
outsl
ja
push
cmp
stos
fs
andl
add
add
mov
jo
adc
push
repz
mov
popf
loope
or
cmp
insl
or
fstpt
mov
xor
pop
lret
xor
jl
movb
fisttpll
adc
repz
stos
push
cli
pop
sbb
xchg
cmp
dec
and
out
pop
rolb
xor
stos
nop
sub
dec
lock
xchg
push
lods
dec
add
push
jp
lcall
loope
sbb
rcll
sbb
inc
ret
sub
fs
or
mov
xchg
mov
subl
clc
mov
mov
pop
stos
xor
pop
lods
fs
sub
fcomps
mov
mov
pop
adc
stc
sub
mov
das
xor
pop
sbb
jbe
std
repnz
cmpsl
test
sub
dec
insb
push
mov
clc
pop
or
jl
cmpsl
iret
icebp
mov
add
pop
insl
sbb
int
mov
sti
decl
aas
cmp
je
sub
add
lcall
jmp
jae
jl
cmp
enter
sbb
testb
mov
mov
add
outsl
xchg
ds
sbb
xchg
in
jno
inc
push
sti
in
lock
xlat
lret
lcall
imul
inc
cwtl
xchg
out
xor
pop
imul
inc
mov
in
repnz
rcr
mov
orb
mov
lock
fstl
je
sbbl
roll
cmp
popa
aas
sahf
xor
lods
lock
pop
xchg
pop
adc
cmp
mov
ljmp
mov
inc
jle
sbb
xor
fs
or
pop
pop
aas
cmp
sub
inc
orb
jge
sbb
insl
pushf
mov
mov
clc
and
or
insl
data16
inc
mov
jns
or
cmp
out
mov
popa
fwait
cmp
imul
mov
leave
pop
and
sbb
inc
daa
call
and
inc
push
dec
cli
outsb
fwait
imul
leave
xchg
aaa
imull
enter
std
pop
jne
push
sub
aas
add
xchg
lret
pop
stos
ljmp
and
cmp
mov
jo
mov
lcall
xor
stos
inc
sti
jbe
dec
adc
cmp
scas
aaa
inc
inc
push
pop
movb
cmpsl
push
mov
lret
imul
jns
in
mov
out
cmpsl
out
movswl
and
lret
inc
and
outsl
movb
cli
mov
or
sub
je
sub
fstpl
cmc
cmp
js
ss
ret
in
push
aad
mov
popa
or
jne
rcrb
adc
cmp
lock
in
loope
sbb
js
icebp
adc
test
push
pop
dec
orb
mov
dec
sbb
out
mov
sbb
aad
adc
daa
dec
ss
inc
mov
xchg
jmp
call
add
shll
fadds
fsubr
and
jnp
fimuls
or
pop
jl
or
cli
add
pop
call
sbb
push
test
sbb
mov
ficompl
cmp
or
sbb
jmp
fldt
std
mov
push
or
fcmove
pop
mov
sbb
jne
or
sbb
inc
mov
leave
push
rolb
push
inc
aaa
jo
push
pmuludq
test
dec
mov
xor
pop
shll
add
test
mov
fdivs
ja
jo
xchg
jmp
jmp
sub
push
rcrb
mov
jge,pt
xchg
out
sub
out
icebp
sub
out
loope
add
adc
jmp
daa
mov
sti
cmp
sub
rorb
int3
stc
ffreep
mov
roll
jp
jmp
mov
loope
xorl
cmpsl
sbb
cmp
xlat
jno
fldt
xlat
mov
pop
jg
add
xor
jge
jmp
xchg
cmp
push
push
mov
dec
ljmp
lret
jo
mov
sub
out
xor
roll
stc
xor
cmpl
cmp
sub
out
lret
je
sub
push
addr16
das
jp
dec
fwait
and
xchg
mov
jnp
ror
sbb
es
jnp
mull
lock
dec
dec
sub
aad
jmp
mov
pop
imul
cmp
push
jnp
sti
xor
int3
scas
jae
push
testb
rorl
xor
repz
dec
inc
sti
push
aas
int
and
leave
xor
jno
enter
jmp
push
pop
stos
clc
fstps
dec
push
push
xor
jge,pt
int
pop
xor
int3
and
bound
cmp
jecxz
push
push
inc
push
push
dec
into
fnstcw
lret
adc
daa
xlat
and
lahf
fdivl
fwait
cltd
mov
and
jae
not
dec
ljmp
pop
jl
popf
shrl
addr16
and
lret
dec
notb
jle
clc
pop
fs
mov
xchg
jge
ret
pop
loope
adc
fistpl
cmpsl
std
sbb
inc
stos
negb
jb
xor
rorl
rcrl
fdivrs
inc
add
mov
ret
and
and
add
ret
cmp
lret
inc
popa
add
jle
pop
daa
and
inc
addr16
xchg
sub
into
pop
call
or
and
cmp
inc
inc
faddl
outsb
mov
xchg
sbb
adc
fistpll
call
cli
dec
add
das
xor
ret
jge
repnz
pop
les
imul
add
adc
fadds
jae
int
mov
fisubrl
adc
out
loop
cmp
dec
in
rorl
std
pop
and
out
lea
xor
mov
inc
mov
cmp
stos
mov
mov
test
xor
adc
fsubrp
loopne
ja
and
push
xchg
push
daa
cmc
cmp
fldcw
add
or
stos
sub
push
or
std
push
movsb
clc
mov
inc
setle
test
fs
int3
pushf
aad
mov
adc
push
insb
pushf
mov
xor
shr
ss
or
mov
adcb
mov
movl
mulb
call
cvtpi2ps
sbb
fisubrl
aam
add
scas
ficomps
je
mov
cmp
pop
jecxz
xor
jne
out
add
into
cld
dec
ret
xchg
mov
push
ss
pushf
cmpsl
ret
xlat
lret
dec
rcrb
fdivs
popf
lock
sti
jo
pop
addr16
dec
popa
add
lret
or
push
xchg
xchg
rclb
mov
sub
and
movsb
adc
mov
mov
icebp
adc
mov
and
xchg
test
std
mov
and
jo
aaa
in
loopne
sbb
outsl
add
sbb
add
out
xor
fdivl
inc
lea
in
test
subl
stos
es
imul
popf
inc
aad
pop
sbb
addr16
hlt
dec
mov
add
fwait
mov
mov
sub
cmp
das
xchg
repz
das
fmulp
outsb
dec
hlt
scas
jmp
xchg
adc
aad
out
out
pop
xchg
dec
push
jbe
nop
fsub
xor
or
xchg
imul
cmc
push
push
cmp
shrb
cmp
cmc
cs
std
dec
inc
je
in
insl
pushf
or
loop
cmp
mov
dec
fwait
test
sub
pop
dec
push
out
sbb
movsl
or
mov
mov
dec
movsb
out
xor
fstps
int3
lock
adc
mov
mov
jb
sbb
test
sarb
cli
icebp
cmp
push
movl
mov
je
imul
movsl
std
imul
movb
xor
dec
sub
xchg
push
popa
push
sbb
out
mov
add
rclb
call
add
popf
test
mov
sti
inc
jecxz
addr16
test
popf
or
inc
das
rcr
dec
pop
jge
int
ficoms
pop
adc
and
cmpsb
dec
or
in
fptan
inc
sub
psrad
cld
cmp
idiv
hlt
cmpsl
dec
xchg
or
dec
sub
mov
push
cwtl
into
push
test
xor
lret
ret
rcrb
mov
sbb
add
fwait
enter
test
test
mov
sub
push
sub
je
insl
mov
xor
mov
loopne
dec
stos
lcall
add
icebp
cmpsb
cs
arpl
out
call
adc
adc
inc
mov
scas
xor
call
add
sbb
dec
cmp
fwait
rcr
je
insb
in
int
sub
and
adc
stos
fldcw
lcall
shrb
fstl
aas
test
enter
arpl
in
jns
in
hlt
dec
push
jg
mov
xchg
lock
cmp
and
in
jle
fwait
aas
mov
xor
pop
adc
imul
lods
test
cld
ljmp
roll
std
xor
pop
xchg
dec
mov
adc
mov
loop
jb
aam
dec
pop
sub
out
mov
mov
dec
imul
popa
sbb
push
pop
js
leave
xchg
int
pop
dec
in
cs
xchg
lea
dec
cmp
outsb
dec
call
mov
int3
fmuls
rorb
xchg
or
jne
jle
or
test
sbb
inc
dec
stos
xchg
jge
into
add
mov
sub
push
stc
pop
lea
mov
orb
outsl
and
insl
in
lods
inc
xchg
mov
lds
cmp
test
scas
mov
int3
dec
inc
inc
stc
and
inc
iret
jne
std
stos
push
adc
jo
mov
dec
stos
loop
mov
rcrl
pop
decb
sti
xchg
je
xchg
sarl
cmp
ja
dec
popf
pushf
shlb
gs
pop
adc
shr
mov
ja
push
xchg
inc
enter
mov
xlat
mov
mov
gs
test
addr16
cmp
jns
inc
aam
stc
jmp
dec
shlb
push
repz
sahf
inc
aaa
xlat
bound
adc
or
adc
add
xchg
cmpsb
dec
aam
inc
call
mov
andl
inc
xchg
stos
inc
inc
mov
mov
xlat
popf
mov
sbb
insw
insl
cmp
sub
sub
mov
pop
cltd
aam
xor
jecxz
testb
sbb
inc
pop
mov
and
xorl
cmc
mov
imul
xchg
push
xchg
das
sahf
push
push
mov
dec
sbb
inc
and
mov
xchg
lods
inc
inc
stc
loopne
repz
mov
sbb
aaa
lds
int
or
lcall
or
filds
pusha
mov
pushf
inc
rcrl
xor
sub
sub
sbb
and
scas
test
cmp
pop
or
pushf
popf
cltd
xchg
stos
mov
clc
outsl
into
or
adc
sub
sub
rorb
xchg
lret
mov
rcll
outsl
jl
sarb
stos
push
inc
or
dec
dec
jmp
add
jmp
jns
jne,pn
ret
inc
cmpsl
aam
mov
fildl
lret
mov
ret
pop
mov
inc
dec
xchg
xlat
mov
sbb
fmulp
repz
sahf
fstl
pop
popa
dec
fdiv
fsubr
scas
enter
cltd
test
mov
mov
cmc
push
dec
adc
repz
jbe
or
mov
mov
insl
xchg
orl
inc
and
xor
popa
mov
sub
ret
mov
jo
repnz
push
cmpsb
movl
mov
into
adc
nop
ret
ret
add
ds
adc
xor
pop
daa
pop
daa
dec
call
sti
test
je
mov
and
push
mov
add
pop
push
out
xchg
imul
sahf
insl
xor
roll
bound
stos
sti
out
cmp
fidivrs
pop
jb
pop
cmp
pop
jbe
jns
cwtl
repnz
scas
inc
cmpsb
sub
call
stos
test
jg
adc
aaa
dec
mov
or
movsl
in
or
lea
seto
inc
add
in
jg
aaa
mov
cmp
cmpsl
or
call
sarb
int
pop
inc
push
fidivrs
inc
imul
stos
dec
pushl
cmp
mov
insb
repz
pusha
sarb
fwait
xlat
xchg
in
cmpsl
inc
and
xchg
fdivr
fistpl
jae
and
sahf
sub
shl
jmp
sub
into
xchg
add
fsubrs
fwait
loope
sbb
cmc
sbb
xor
mov
jo
pop
pop
xchg
push
mov
jg
dec
jb
les
mov
sarb
xchg
int3
push
and
inc
test
in
push
pop
mov
and
mov
jb
add
in
shlb
xor
inc
daa
mov
nop
inc
inc
add
cli
sbb
cwtl
inc
jns
stos
outsb
and
leave
mov
lea
ret
mov
ret
stos
jno
rorl
jl
pop
shl
jl
in
xchg
insl
adc
or
inc
hlt
cli
push
ds
insl
and
mov
xchg
lods
cmp
lret
inc
cmp
or
inc
shll
leave
pop
push
mov
hlt
mov
ret
or
mov
xchg
in
or
cmp
call
or
inc
add
and
fdivrl
lock
stos
xor
stos
cld
inc
jns
js
inc
dec
pop
outsl
repz
jne
mov
xor
daa
cltd
pop
jg
mov
std
test
push
js
dec
imul
pop
fsubr
mov
ret
int3
mov
js
shlb
scas
mov
loopne
pushf
xchg
mov
sub
cmpsb
daa
cmp
sbb
cmp
jge
jns
in
pop
fmull
fsubrp
and
movsb
stc
xor
pop
popf
in
imull
jo
xchg
rolb
jnp
mov
inc
aad
int3
scas
pusha
ret
mov
jo
jb
mov
loopne
decb
xchg
hlt
stos
add
cmc
push
xor
lea
or
jge
aas
inc
les
scas
xchg
ds
adc
shr
adc
stos
cmp
mov
sub
push
adc
xchg
pushw
cmpsb
mov
or
bound
inc
mov
sub
scas
aad
xchg
xchg
xor
hlt
cwtl
popa
fstps
sbb
xor
fwait
jg
sbb
sub
testb
or
or
cwtl
push
push
pop
js
xor
adc
cli
or
in
sbb
je
divb
iret
leave
aad
mov
jo
sbb
mov
xlat
cltd
sbb
xor
xorb
sahf
adcb
f2xm1
mov
sti
pop
xchg
repz
lods
ror
fscale
mov
insb
mov
ffree
inc
pop
cs
pop
cmp
pop
xor
not
in
lcall
popf
mov
dec
dec
lea
sub
cmpsl
psadbw
mov
lds
in
push
ds
and
mov
js
push
inc
mov
out
cltd
cmp
insl
pop
adc
lahf
scas
sbb
mov
into
add
lcall
pop
insb
inc
scas
mov
add
insb
mov
pop
sahf
loope
push
int3
cmp
push
dec
mov
and
leave
cs
push
mov
and
movsb
stc
jp
pop
bound
fcmove
scas
movsl
lods
xor
jp
test
and
in
xchg
push
shrl
frstor
pop
pop
inc
cs
or
adc
jmp
bound
aas
test
cli
inc
loope
mov
sub
addl
div
stos
mov
dec
or
sbb
push
xor
out
fstpt
in
and
push
sti
leave
icebp
repz
stc
push
out
outsl
xor
push
test
aam
jae
mov
pop
pop
cmpsb
dec
push
repnz
jge
not
hlt
cmpsl
idivl
sbb
push
into
or
insl
jb
rolb
lock
jno
jle
sti
sbb
lret
je
xchg
in
or
ja
out
scas
cmp
dec
arpl
pop
aaa
test
push
imul
out
push
push
addr16
pushf
ss
jae
sbb
push
out
jge
pop
ficompl
push
push
test
clc
or
aam
add
mov
push
or
data16
in
out
dec
sbbb
mov
cmp
mov
dec
dec
mov
mov
scas
jp
jp
cltd
and
insb
inc
pusha
cmp
call
jmp
or
jmp
and
sub
mov
sbb
mov
mov
jl
xchg
xor
mov
in
int3
jbe
mov
in
ss
insl
jge
neg
adc
mov
sub
push
xlat
dec
mov
jge
cli
mov
fcoms
push
enter
mov
lds
lds
notl
xchg
in
arpl
incl
mov
sub
jnp
insb
adc
push
xor
fistpll
and
test
mov
sbb
outsb
into
out
mov
push
leave
inc
push
mov
loope
test
jl
lret
pop
and
mov
leave
cmp
lods
call
cmp
cwtl
icebp
pushf
dec
je
test
sbb
push
mov
les
sub
iret
pop
mov
jo
mov
ja
stc
mov
or
mov
xor
adcl
mov
loop
aam
xorl
clc
in
xor
sub
lret
or
sbb
popa
mov
lret
mov
in
push
adc
dec
je
dec
mov
pop
test
push
mov
dec
inc
andb
cld
fldenv
mov
fwait
pushf
cld
lret
and
pop
pop
movsb
dec
in
mov
jg
aam
test
and
push
int3
lock
cld
int
or
int
int
cmpsl
sbbl
mov
cmp
jmp
mov
int
xorl
push
adcb
sbb
jle
jnp
push
test
sbb
dec
cmc
bound
jecxz
sbb
fdivrs
pop
pop
cmp
ret
push
jnp
fcmovne
nop
and
mov
mov
add
adc
scas
insl
mov
xor
sbb
push
pop
and
leave
mov
lahf
mov
lcall
icebp
jmp
push
rclb
inc
xchg
jno
sti
add
dec
or
mov
jl
das
pop
pop
pop
ja
jle
adc
data16
shl
push
push
xor
cmpsl
inc
xchg
repnz
dec
jnp
jecxz
inc
push
mov
xor
lds
sub
lret
and
mov
stos
pop
jmp
sbb
insl
sahf
mov
sahf
mov
movsl
ror
cmp
mov
ds
mov
or
orl
dec
loop
lods
xor
outsb
sbb
imul
mov
pop
stos
add
xchg
jge
int3
pop
jbe
cmp
in
sbb
mov
xor
jmp
xor
out
jns
mov
push
sub
add
into
shlb
sahf
mov
sub
jbe
bound
lea
repnz
cmp
sahf
loopne
popf
and
or
mov
cltd
sbb
and
jg
mov
arpl
inc
jbe
pop
dec
iret
inc
in
mov
les
jmp
add
pop
jle
xor
ret
push
mov
rcrl
mov
aad
aaa
popf
push
lcall
cmp
clc
out
or
or
mov
insb
imul
hlt
sti
fnstsw
in
out
xchg
cltd
pushf
fbstp
mov
jbe
adc
loopne
iret
mov
test
loope
adc
mov
mov
xlat
es
jno
push
popf
nop
out
stc
out
fnstsw
pop
jb
cmpsl
xchg
addl
push
mov
adc
cmp
leave
push
adc
add
shlb
push
fnstenv
outsl
cmp
les
test
adc
xchg
test
jge
rol
jp
push
mov
jp
popf
shrb
xlat
cmpsb
fwait
stos
nop
jne
lret
movsl
cs
insl
pop
icebp
cmpsb
cmp
mov
pushf
cwtl
pop
jo
imul
xchg
das
loopne
xor
mov
idivl
sub
out
jne
shlb
mov
sbb
les
gs
in
mov
dec
das
repnz
ljmp
popf
insb
shrb
pop
xor
cld
push
in
rol
hlt
add
mov
js
sub
mov
xchg
jbe
lods
icebp
adc
sbb
lods
add
adc
fbld
enter
sbb
and
sub
add
in
dec
shlb
rclb
sbb
adc
pop
aad
sbb
push
sarl
xchg
or
test
pop
scas
pop
mov
scas
mov
push
mov
cmp
imul
mov
cmp
jmp
xlat
dec
dec
ficoml
pop
jp
push
movl
out
and
mov
xchg
std
jle
aas
sub
popa
dec
repz
mov
inc
mov
pop
orb
dec
sahf
sbb
insb
imul
imul
stos
xchg
pop
ss
and
ljmp
cmp
outsl
fiadds
js
jg
xor
fildl
cmpsb
pop
movsl
xchg
scas
les
out
loop
scas
jg
in
sbbb
or
inc
and
or
js
inc
cli
enter
jg
xorl
fildl
mov
popa
pop
mov
adc
mov
cmp
lcall
in
dec
sbb
jge
out
outsl
xor
out
pop
in
loopne
lock
pop
pop
mov
adc
mov
sub
iret
inc
xchg
cmp
sub
mov
in
fs
sbb
mov
push
xchg
adc
cmp
lret
mov
in
sub
pop
cltd
mov
xchg
scas
int
nopl
mov
push
sub
adc
mov
pop
push
or
cmp
xchg
icebp
in
add
pop
stos
cld
cltd
xor
in
mov
insl
orl
lods
test
sbb
add
mov
repz
pop
xchg
inc
and
jo
mov
dec
jo
push
cltd
push
prefetchw
shl
dec
dec
test
and
fmull
lcall
jp
scas
add
call
mull
adc
jl
adc
xchg
xchg
lret
lret
xor
mov
mov
cmp
inc
je
lcall
mov
jp
int3
popf
xchg
ljmp
xor
in
pop
push
hlt
loope
dec
mov
sbb
scas
add
gs
ret
dec
call
cwtl
popf
aad
loope
mov
inc
mov
mov
dec
mulb
out
mov
cmp
or
xor
clc
mov
aas
xor
lcall
daa
outsl
mov
repz
test
nop
filds
iret
rcrb
and
inc
outsl
cmp
popa
les
inc
hlt
xor
jne
lret
sbb
mov
sbb
mov
push
jbe
int3
mov
mov
sbbb
out
xchg
insl
jb
data16
rorl
pop
push
lcall
sub
lret
add
pushw
rorl
dec
and
mov
sbb
mov
js
inc
or
push
lret
pop
je
jno
bound
jae
xchg
push
icebp
cmp
jnp
movsl
or
push
and
pop
push
cmc
stc
or
sub
pusha
mov
adc
pop
aam
mov
scas
in
lret
dec
mov
int
push
jge
xorl
jnp
leave
test
jae
movsl
rorb
cmp
ret
jae
xchg
lret
mov
add
and
and
sub
jo
xlat
sub
das
out
sub
sbb
pop
sbb
add
pop
adc
inc
push
inc
cld
mov
xchg
push
mov
fdivp
inc
inc
aam
lahf
inc
push
and
bound
cmc
sbbl
pop
sub
add
insl
or
ficoml
ja
push
xor
push
ss
xor
bound
add
mov
es
mov
adc
shll
lods
lods
xor
ret
dec
sbb
push
gs
outsb
jo
fwait
cmpsl
mov
adcl
xor
add
rclb
je
jne
faddl
mov
jno
push
mov
fbld
movsl
mov
insb
push
out
repz
xchg
dec
hlt
jl
icebp
ja
data16
xchg
ds
enter
cmp
add
out
push
hlt
push
scas
leave
pop
adc
mov
xor
bound
sub
cmp
cld
mov
movsb
jecxz
loopne
inc
add
mov
add
and
stos
insl
dec
xchg
mov
test
push
jns
rcrl
add
out
icebp
call
cs
loopne
enter
notb
xor
std
push
out
fcmovne
dec
jle
movsl
sbb
addr16
jg
aad
lret
aam
fs
xor
ret
subl
inc
xchg
cmpsb
ss
int
inc
mov
inc
loop
sub
aas
mov
lea
mov
dec
imul
xchg
xlat
xor
xor
inc
jnp
jne
fwait
loope
icebp
ret
stos
leave
push
add
aaa
mov
sbbb
aaa
aaa
gs
mov
mov
fwait
inc
push
loopne
sahf
or
cmc
and
xchg
and
fwait
dec
test
and
sbb
xlat
adc
test
mov
jo
mov
scas
mov
sub
mov
add
add
icebp
call
pushf
mov
or
int3
mov
sub
or
ret
fsts
xchg
mov
subb
mov
mov
out
mov
daa
popa
call
push
add
sahf
push
loope
in
repnz
rcrb
outsl
shrl
xor
cmpsl
aas
test
jns
jne
dec
mov
popa
fs
scas
jecxz
mov
mov
xchg
aas
iret
mov
cmpsb
outsl
jns
inc
cs
dec
js
cmp
adc
add
icebp
and
xor
out
lcall
push
xchg
out
and
and
mov
mov
cmpsb
xor
mov
aam
or
inc
xor
popa
aam
dec
nop
jns
mov
push
push
sub
popa
add
dec
lods
pop
stos
out
lret
jl
stos
mov
dec
in
mov
push
mov
mov
out
mov
adc
aaa
ljmp
mov
hlt
bound
mov
outsl
dec
shlb
je
mov
int
dec
or
xor
pushf
dec
adc
testl
lahf
cmpl
out
mov
rorb
mov
test
mov
fists
sbb
cmp
sub
add
jg
aad
mov
adc
call
add
orl
cwtl
adc
mov
fdivr
mov
mov
mov
mov
ds
jbe
xchg
out
sbb
jno
das
xor
mov
and
ds
cltd
or
lods
push
xchg
pop
pop
jmp
and
xor
test
pop
cld
ljmp
add
pop
cwtl
inc
daa
nop
inc
fsubs
pop
mov
fucomi
dec
jle
mov
call
mov
mov
push
jecxz
jbe
nop
fimull
xchg
and
inc
pop
call
adc
jbe
mov
cmpb
dec
push
imul
cmp
push
je
fs
mov
inc
and
ja
leave
std
push
mov
push
jae
loope
pop
popa
out
jle
sub
pop
addr16
pop
aaa
fwait
in
rcl
imul
mov
lcall
lahf
cmc
inc
and
es
inc
sub
mov
pop
movb
lcall
sub
jnp
out
in
inc
mov
je
popa
aas
pusha
xchg
inc
mov
or
push
mov
fmulp
cwtl
bound
pop
sbb
pop
fsubr
dec
daa
push
insb
leave
sub
sub
scas
das
in
js
lock
icebp
in
sub
das
or
insl
in
mov
out
divl
or
mov
shlb
loop
push
andb
in
sbb
dec
dec
fdivrl
add
cmovg
loopne
enter
push
pop
xchg
cmp
out
push
xchg
or
or
in
sbb
sub
jle
xorl
aas
pop
scas
push
sbb
fistps
xchg
mov
sbb
mov
jnp
notb
push
orl
lahf
inc
test
or
in
xor
andb
inc
cmp
fcmovu
dec
sbb
push
cmpl
inc
pop
push
enter
movsl
pusha
mov
sub
iret
jns
fdivl
pop
jb
push
inc
push
xchg
cs
mov
mov
shr
mov
dec
xchg
dec
or
jo
jmp
popl
gs
jne
adc
dec
fcoms
test
repz
dec
pop
or
idivl
push
adc
lods
fcmovnbe
pusha
push
es
jae
daa
lds
cmc
mov
xchg
shrl
pushf
icebp
out
pop
inc
jnp
push
shll
sbb
dec
mov
fidivs
mov
push
lods
mov
inc
sub
jb
scas
pop
sbb
nop
loop
out
jle
pop
lods
cwtl
or
out
movsb
ljmp
xchg
mov
int3
sbb
arpl
fidivl
lahf
push
cmova
xchg
stos
mov
pop
lahf
xorb
jle
mov
hlt
iret
mov
icebp
lods
jbe
test
shrb
in
cmp
cmpsb
mov
mulb
push
ja
aad
pop
cltd
mov
cmp
or
fbld
out
nopl
test
fsubr
test
sahf
hlt
mov
call
in
out
and
pop
and
push
cs
sub
jl
pop
or
inc
test
test
or
or
xchg
out
jno
mov
and
cmp
dec
into
jmp
int3
insl
clc
dec
into
addr16
dec
cmpsb
decl
dec
add
mov
dec
rclb
sarl
ret
cmp
fwait
pusha
pop
movsl
xor
lret
into
gs
out
pop
and
aad
test
pop
pushf
lahf
and
dec
sub
test
push
icebp
hlt
fildll
test
cmc
xchg
sahf
adc
sbbl
insb
inc
daa
push
mov
mov
out
xor
and
idivb
lds
fs
lea
vfnmadd132ps
js
xor
ror
sbb
in
repz
mov
mov
mov
pop
and
push
ja
mov
pop
dec
pop
pop
daa
sub
jge
lds
push
xchg
xor
cmp
out
les
cld
outsl
les
test
into
popa
fsubs
inc
rcrl
rclb
mov
add
cmp
and
popf
pop
dec
jl
fsubrs
cmpsb
and
mov
jg
fisubrl
test
push
mov
and
shlb
inc
and
xor
xchg
inc
scas
adc
popf
push
mov
aas
das
jecxz
adc
inc
lods
cmp
or
inc
in
inc
push
es
pop
hlt
out
pop
lahf
cmc
pop
push
jns
jb
cmp
dec
sbb
int3
js
lcall
sub
loopne
pop
shlb
mov
icebp
pop
rclb
xor
sub
lcall
push
jmp
xchg
sbb
daa
lock
cmp
dec
pop
lods
dec
or
stos
xlat
cmp
fdivs
sbb
xchg
pop
sub
mov
and
loopne
cltd
icebp
roll
xor
aas
mov
or
fwait
outsl
shlb
clc
mov
ffreep
imul
jl
test
jb
sbb
jecxz
addr16
sbb
cmp
push
sbb
xor
pop
adc
adc
ficoms
push
sub
xor
shll
bnd
cmp
push
adc
or
sub
pop
jnp
sbb
and
jl
cltd
pop
nop
mov
add
jmp
popa
call
decb
pop
cmp
hlt
stc
std
adc
clc
insl
das
push
cmp
dec
fdivl
add
call
inc
ficompl
adc
lcall
jge
add
jp
or
outsb
bound
scas
dec
jo
mov
in
pushf
jmp
sbb
inc
dec
adc
iret
mov
lret
fcompl
ljmp
mov
scas
push
cmpsb
je
ret
hlt
test
cmp
hlt
mov
loope
lea
cmp
icebp
addr16
scas
in
pop
arpl
icebp
hlt
xchg
rorb
andl
pop
dec
sbb
sahf
dec
add
dec
mov
aam
inc
sub
mov
insl
int
daa
or
jge
ljmp
ljmpw
push
das
popa
gs
cmpsl
mov
cmp
orl
cld
cmp
fisubs
xor
adc
mov
sbb
andl
or
pop
jns
sarl
addl
adc
imul
jno
test
out
and
xor
inc
xchg
or
xor
add
js
cmp
pop
loope
aaa
xor
movsb
jb
mov
leave
mov
xor
push
frstor
pop
es
call
aaa
push
inc
clc
lahf
mov
andl
stc
fistpll
nop
aas
add
pop
sbb
shlb
fwait
jns
and
and
pop
arpl
test
repz
popf
stos
push
push
roll
xor
mov
fldl
adc
popf
xchg
jge
notb
clc
inc
dec
mov
data16
pushf
lret
jnp
jp
or
sbb
aas
loopne
cltd
aam
movsb
jbe
mov
mov
push
frstor
cmp
jge
sbb
xchg
jmp
fwait
popa
pushf
sti
ljmp
andl
sbb
sbb
add
int
test
xchg
imul
add
cli
sub
sub
outsb
cmpsb
mov
xchg
mov
mov
and
out
add
sbb
xchg
sbb
pop
shll
jmp
arpl
xor
or
ds
fisubl
std
clc
fildl
add
xor
addr16
cltd
mov
mov
mov
push
sbb
imul
mov
jo
pop
jmp
push
lret
lret
dec
inc
sarb
lods
xor
nop
pop
jns
adc
lcall
movsl
int
lock
push
mov
pop
xchg
into
shll
test
aas
dec
adc
cmp
inc
lea
lret
cli
call
mov
out
fsub
pop
clc
sahf
jp
mov
mov
jo
int3
xor
js
test
mov
jb
sahf
jl
mov
mov
mov
and
xchg
cli
xchg
popf
sahf
pop
sub
adc
scas
fstps
cmp
sbb
cs
push
imul
fs
test
pop
orb
jmp
mov
scas
push
in
xor
push
lock
ret
test
aaa
push
sub
sub
cmc
out
rorl
xor
ja
push
sbb
loop
add
out
orl
movsl
jno
sub
inc
lahf
enter
mov
repz
add
jne
mov
mov
inc
mov
mov
dec
mov
inc
bound
sub
dec
adc
into
repnz
push
enter
cmp
nop
jno
jmp
roll
mov
or
pushf
das
stc
fisubs
jne
xor
cmp
push
push
out
outsl
or
jp
pop
pop
inc
icebp
fmuls
in
sbb
fsubs
les
push
cld
mov
dec
inc
dec
cld
addr16
gs
jns
movsl
or
adcl
jns
in
out
ss
cld
jmp
xchg
mov
pop
cltd
hlt
ja
orl
aad
mov
aad
das
cmp
fbstp
and
or
into
fdivl
loop
scas
outsl
into
data16
dec
adc
jno
ret
jb
lahf
adc
lods
jno
sbb
cli
scas
pop
lock
inc
fs
rorl
xchg
inc
pop
pop
sbb
loope
sarl
into
cmp
out
mov
loop
push
xor
mov
ja
inc
stc
and
xorb
mov
repz
lods
push
jnp
fisttpll
push
add
xchg
or
mov
das
pop
out
sub
popa
in
sbb
jmp
cltd
mov
add
mov
cmpb
push
sub
inc
jbe
les
hlt
data16
test
ja
push
push
fiaddl
push
aad
inc
jl
mov
movsb
fmull
or
adc
test
cmpsl
mov
jl
ficomps
gs
cli
and
sub
adc
push
in
mov
ror
mov
pop
adc
dec
xor
imul
jne
stos
jne
hlt
cmp
sbb
ret
inc
jnp
or
or
leave
or
xor
movsb
andb
jl
pop
rcr
sub
push
in
int
push
jno
jbe
and
test
shll
mov
add
jmp
loopne
stos
cmc
and
add
adcb
cld
enter
or
vpmaxsw
jmp
das
or
add
bt
addb
pop
repnz
xor
pop
insb
xchg
xor
jecxz
pop
xor
cmp
push
stos
aaa
std
lcall
push
test
aad
mov
nop
lock
les
fwait
dec
addb
or
xchg
xlat
jg
out
adc
shrl
sub
cmp
fimull
dec
pop
ljmp
leave
adc
cmp
mov
pusha
in
fidivrl
mov
pop
xchg
sbb
rcll
mov
jp
out
test
and
ss
push
loopne
inc
dec
push
rcl
out
aaa
sbb
cmpsb
sub
ds
jo
adc
mov
outsb
sub
sbb
pushf
or
cld
mov
sbb
cmp
push
jp
jb
jg
inc
aam
mov
dec
fcomp
xchg
inc
test
or
mov
arpl
xor
rolb
cwtl
or
or
inc
ds
push
sbb
adc
fldt
sti
dec
jle
addr16
dec
push
andl
jns
add
xchg
mov
aas
cs
push
pop
pushf
rorl
cmp
rorl
lret
or
cmp
pushf
ljmp
cmc
inc
mov
mov
push
mov
imull
dec
ret
ss
aaa
mov
cmp
loop
cs
and
outsb
inc
sub
outsl
sbb
out
mov
push
inc
adc
mov
dec
add
mov
xchg
or
std
pop
movsl
jns
mov
xor
or
sub
pop
cmp
ret
cmp
insb
ja
push
inc
stos
ja
test
cmp
adc
or
aad
mov
mov
aad
ds
adc
aad
xor
lahf
das
ljmp
cmp
out
rolb
out
mov
and
mov
insl
push
mov
and
sub
fimull
jae
pusha
or
dec
xor
aad
out
stos
mov
lea
imul
jecxz
mov
mov
rcrb
fcmove
pop
or
add
sbb
cltd
pushf
mov
and
mov
xor
sti
iret
insl
or
or
fiadds
stc
and
and
xorl
shr
adcb
inc
xchg
mov
pusha
mov
and
adc
xchg
or
or
push
shrl
cmpsl
jb
bound
push
push
mov
sahf
or
xchg
pop
xchg
cmp
inc
dec
outsl
mov
lock
mov
jmp
mov
ucomiss
jge
add
and
cmpsl
mov
shll
testb
push
or
pusha
mov
out
lahf
pop
das
jne
mov
xchg
pusha
cmp
adc
call
test
jle
dec
push
sbb
lcall
repnz
int
rorl
jecxz
pop
jg
rol
loopne
lret
pop
sub
repz
add
fnstcw
inc
ds
push
jge
jbe
xor
xchg
loope
xchg
mov
sub
add
sbb
cmp
in
push
xchg
mov
je
ffree
mov
pop
or
push
xlat
in
and
sahf
mov
mov
jle
push
jmpw
jmp
clc
int
in
in
dec
aam
xor
sub
and
test
add
cmpsb
add
push
imul
cmp
push
xchg
pop
sub
add
or
cmp
mov
push
es
and
adc
jo
mov
xchg
fbstp
mov
mov
xchg
adc
ror
fdiv
andl
push
cmp
fistl
sbb
sub
cmp
ljmp
or
stc
imul
lods
fsubp
fldcw
mov
push
jae
xor
push
jno
movsb
in
inc
sbb
fistpll
repz
xor
in
mov
inc
adc
loop
lret
or
cmc
jne
and
imul
bound
sbb
add
dec
cs
xchg
jo
xor
addr16
stos
cmp
aaa
dec
jo
mov
inc
xchg
hlt
dec
adc
mov
jno
mov
sbb
negl
push
pop
into
aam
xchg
or
push
jnp
fcmovnbe
andl
add
loopne
xor
outsb
mov
fwait
imul
xchg
cli
mov
out
xchg
call
ret
stos
dec
inc
jbe
icebp
rclb
sub
mov
inc
jmp
pop
sahf
xchg
movsb
sbb
mov
adc
mov
cwtl
popa
dec
imul
add
sahf
imul
or
push
cltd
pop
or
negb
arpl
push
aad
pusha
xchg
lahf
pusha
sub
ret
jecxz
icebp
ds
mov
xor
dec
cmp
or
mov
loope
sub
ror
jae
fbstp
jge
mov
pop
cs
adc
aaa
stos
ja
sahf
clc
xchg
cltd
movsb
adc
xchg
push
shlb
lods
mov
jae
cmpl
pop
push
hlt
push
lret
lret
dec
sbb
rclb
mov
and
les
das
dec
cmp
xor
mov
add
push
lods
mov
jno
mov
or
add
stos
xchg
sahf
push
xchg
test
popa
and
sti
mov
mov
pop
pop
andl
test
js
pop
fcmovnu
inc
shrd
jnp
jbe
xor
ret
sub
jno
mov
out
out
mov
xchg
fcoml
movsl
inc
stc
adcl
mov
sub
jne
add
fidivl
mov
out
fldl
mov
movsb
xorl
mov
dec
or
sbb
mov
rclb
cli
mov
std
cmp
lea
adc
cmc
les
out
je
mov
rcl
pushf
popf
ret
mov
repz
popa
cwtl
std
cmp
cmc
xchg
insl
pop
call
push
outsl
in
mov
mov
push
lods
mov
jge
jp
and
mov
dec
clc
push
mov
jnp
lods
mov
aam
xor
sbb
xor
cmp
pushf
arpl
idivl
push
repz
xchg
insb
pop
and
add
movb
adc
adc
out
cld
rcr
jae
jp
adc
adc
dec
test
mov
shl
je
mov
sub
sbb
pusha
fstpt
and
inc
sbb
add
inc
pushl
ljmp
push
cmp
jecxz
sub
jne
mov
pop
es
xchg
outsb
out
cld
sbb
xlat
fstp
pop
test
dec
lahf
jmp
js
imul
cmp
adc
push
out
mov
imul
das
dec
xor
test
sahf
dec
or
xchg
dec
cmpsb
jmp
pop
xchg
pop
jns
pop
cltd
sbb
xchg
inc
pop
add
sbbb
inc
sub
and
and
jne
sahf
testb
hlt
jmp
and
push
jecxz
in
les
pop
fpatan
inc
mov
push
xchg
cmpsb
or
or
mov
and
push
mov
dec
jp
call
mov
inc
mov
fwait
add
inc
lock
out
bound
or
in
out
stc
je
daa
rclb
sub
cmc
mov
adc
mov
bound
sbb
push
outsb
dec
mull
pop
xchg
mov
push
add
sbb
notl
je
lahf
jecxz
xchg
xlat
lock
movsl
fwait
xchg
dec
mov
cmc
out
and
dec
mov
dec
jmp
pop
inc
stos
xchg
mov
and
lea
loopne
mov
je
mov
jnp
jge
test
inc
xchg
sbb
fiadds
inc
mov
xor
fisubrs
jne
sbb
sbb
dec
call
or
dec
cmp
icebp
sahf
lods
fidivs
popf
cmp
cmp
imul
mov
xor
xchg
cld
int3
adc
ljmp
push
pop
adc
jp
insl
mov
add
lods
lcall
push
pushf
negb
shr
imull
add
nop
repz
addr16
mov
daa
ret
push
insl
xchg
adc
or
out
pop
cwtl
mov
mov
daa
add
mov
mov
iret
arpl
push
inc
stos
lds
adc
or
xor
sbb
lcall
pop
lods
cmovo
jl
lcall
push
rol
stc
xor
loop
nop
test
addr16
inc
sbb
lods
aam
and
inc
popa
inc
xchg
add
clc
test
movsl
xor
xor
inc
les
mov
std
cmpsl
mov
cmpsl
mov
stos
adc
or
or
inc
dec
dec
mov
pop
push
stc
pop
andb
fcomi
cmc
iret
cmpsb
mov
xorl
insl
subl
loopne
and
mov
rcrb
push
lea
das
gs
icebp
out
sbb
fisttpll
sbb
adc
mov
shr
jg
in
cltd
popf
mov
out
dec
repnz
or
shrb
sub
push
test
mov
mov
xchg
cmc
vpavgb
gs
lahf
arpl
ficoms
aam
sahf
das
cmpsb
xchg
inc
jle
xchg
mov
inc
sub
add
jae
sbb
test
js
or
icebp
dec
divb
lods
repnz
cltd
cwtl
and
bound
leave
sbb
ror
stos
push
lock
jb
dec
shlb
les
jl
and
inc
xor
mov
jo
dec
loop
or
sahf
shrl
aam
pop
mov
insb
cli
lock
pop
sbb
js
call
mov
add
outsb
stc
dec
fidivrs
ds
jge
icebp
mov
xor
out
mov
add
mov
fstl
jbe
filds
outsb
mov
hlt
lods
es
ljmp
pop
sub
dec
inc
in
lock
or
ror
xor
adc
and
dec
shlb
push
or
and
pusha
hlt
and
hlt
add
dec
sub
mov
test
xchg
cli
leave
xchg
fcomip
test
test
pop
mov
or
call
pushl
jbe
nop
xchg
std
xchg
cmc
push
in
nop
cmp
push
xorb
shl
lods
jge
cmc
jg
nop
inc
or
ret
inc
mov
push
mov
pushf
xorb
jle
pushl
sbb
xchg
or
clc
jns
mov
dec
rcrb
sbb
jecxz
cltd
leave
mov
stos
mov
push
cmc
test
add
lea
aam
mov
insb
mov
mov
loope
jnp
mov
or
xchg
mov
cmp
icebp
rclb
push
add
sub
xchg
lods
pop
xor
inc
in
std
das
cld
cltd
mov
push
test
fldl
add
std
jecxz
mov
or
loop
pop
movsb
clc
lods
xor
cmp
jno
subl
je
mov
xor
repnz
clc
sbb
ret
loope
ss
fsubs
shr
jae
mov
sbb
inc
jl
adc
push
addb
sbb
and
mov
pop
js
mov
shlb
rorb
jmp
ljmp
ret
mov
or
lret
jl
or
push
popa
jg
jmp
fwait
jnp
xchg
std
inc
pop
lea
cli
sbb
jnp
roll
addr16
jle
faddl
dec
gs
mov
mov
loope
lods
stos
fildl
test
inc
jns
fbstp
lcall
push
cmp
or
test
lods
ljmp
lret
out
adc
sahf
lock
ss
push
ficoms
or
ret
fcompl
insb
or
xchg
jmp
cmp
dec
divl
jg
sti
in
cld
cmp
dec
jp
out
mov
jb
in
test
ljmp
mov
call
cmp
fsts
lods
mov
mov
dec
pop
test
adc
outsl
dec
mov
in
js
mov
mov
or
and
ds
insb
negl
and
and
pop
mov
ds
ljmp
or
movsb
fimull
cmpsb
adc
out
push
adc
loop
int3
scas
inc
cmc
push
int3
fimull
or
mov
pop
popa
mov
not
movsl
outsb
aam
cld
pop
cmpsl
loope
xor
xorb
sbb
adc
sub
or
call
adc
iret
fnstcw
pusha
mov
dec
fsubs
push
scas
das
mov
ret
aad
pop
cmpsl
cmp
je
movb
xor
mov
aad
xor
inc
mov
push
sbb
arpl
js
negb
dec
stos
std
icebp
dec
mov
js
jecxz
imul
sub
enter
xor
scas
mov
mov
in
stos
sbb
fnstcw
fmuls
xor
add
dec
mov
jp
lea
cmc
push
scas
addr16
mov
push
outsl
push
mov
sbb
adc
stc
push
adcl
aaa
adc
movsb
ss
fadds
int3
lret
add
les
out
out
movsb
mov
mov
fbstp
lods
in
aad
xor
jle
cwtl
and
sub
jg
mov
fiadds
inc
lods
fdivl
add
scas
xchg
pop
or
stos
xor
xchg
cli
jmp
insl
push
lock
cmpsl
aad
jl
stos
mov
loop
and
hlt
scas
rclb
outsb
add
push
mov
hlt
nop
lods
add
or
mov
mov
mov
cmp
adc
xor
push
cmp
inc
xor
adc
test
pushf
aad
imul
sbb
mov
xlat
in
dec
add
pusha
ss
mov
xchg
dec
dec
cmpsb
jg
inc
pusha
pop
inc
push
push
push
xor
cmpsb
pop
insl
out
cltd
outsl
js
ljmp
in
mov
xorb
jg
mov
dec
push
adc
jle
outsl
sbb
push
repz
fisttps
test
jge
or
push
fistpll
xor
ret
gs
pushf
xchg
out
mov
lret
lahf
pop
lods
mov
inc
andb
cwtl
int3
addl
or
lret
jecxz
test
pop
dec
pushf
cmpsl
cmp
jg
xor
sbbb
xor
or
rclb
xchg
loope
repz
cmpsl
xchg
divb
pushw
dec
mov
sbb
les
arpl
or
gs
outsl
out
lret
or
int3
cmp
scas
lahf
mov
je
inc
mov
pop
in
mov
in
xchg
lea
daa
fnstcw
add
inc
rcrb
in
int3
cmpb
inc
sbb
fcmovne
push
or
dec
push
cmp
add
pop
and
sub
fsubrp
or
ja
scas
aaa
bound
shl
adc
inc
sub
push
inc
push
leave
dec
or
xchg
xor
ja
mov
nop
ja
or
add
jmp
xor
stos
stos
loopne
jge
pop
imul
dec
pop
movsb
mov
dec
js
addl
rolb
sub
popa
push
data16
mov
and
mov
adc
pop
ds
jle
dec
mov
cwtl
xor
and
xchg
jae
push
dec
fsubs
adcl
lods
stc
outsl
push
cmp
cmp
in
xor
fwait
push
pop
adc
mov
sahf
stos
xorb
mov
mov
int
mov
lcall
pmaxsw
mov
fcom
data16
gs
mov
mov
sub
lret
dec
sbb
cmp
loopne
test
fdivrl
mov
negb
pop
and
and
hlt
addr16
mov
icebp
lret
pop
dec
int3
dec
push
mov
mov
xor
pop
js
adc
sbb
pop
mov
pop
sbbl
pop
fcoms
movsl
xchg
or
sub
dec
pop
lods
mov
mov
push
rcll
repnz
stc
mov
sub
loop
pop
push
in
xchg
mov
in
pop
cmpsb
add
bound
or
pop
in
or
xchg
or
mov
cmc
lahf
dec
dec
xor
test
or
and
jno
shlb
push
sti
clc
div
mov
jno
mov
ret
in
push
pushf
push
mov
mov
scas
pop
sub
lcall
cmpsl
pop
lods
jnp
mov
adc
push
insl
shlb
lds
outsl
xchg
jecxz
mov
mov
mov
test
push
xor
call
jle
mov
fsubrp
inc
or
fdivr
ret
push
test
scas
ds
rorb
add
mov
xchg
xor
mov
aas
mov
mov
mov
push
push
aas
push
arpl
mov
mov
lahf
fwait
lods
lcall
and
test
iret
andl
cmpsb
imul
rcll
in
mov
test
mov
int3
and
mov
shl
mov
cli
push
std
pop
test
rcrb
cmp
sbbb
shlb
rcrb
or
sahf
push
adc
or
insl
and
data16
sub
inc
cmp
and
inc
add
push
ljmp
pop
jl
stc
test
hlt
das
jne
pop
jecxz
jb
mov
lcall
cltd
iret
sahf
mov
fcomps
xor
imul
mov
int
push
mov
add
aad
mov
scas
inc
xchg
int3
repnz
cmpsb
cmp
mov
sub
xchg
cmp
push
in
shll
add
dec
nop
inc
test
add
rcll
push
enter
cwtl
adcb
clc
dec
aam
sbb
and
in
outsl
cmp
cmp
outsl
mov
das
fmull
lea
inc
add
xchg
clc
pop
jo
into
jae
arpl
sti
or
push
hlt
ss
inc
mov
jmp
ror
mov
add
addr16
enter
or
pop
ds
or
push
fisubrs
push
cmp
leave
dec
sub
jnp
roll
pop
pop
cld
jecxz
dec
mov
inc
jne
outsl
push
push
xchg
std
fmulp
loopne
adc
jae
inc
add
lahf
add
out
shl
xchg
adc
mov
imul
bound
push
mov
stos
movsb
jnp
mov
jae
daa
and
clc
call
sbb
mov
sbb
xchg
cmp
adc
xchg
or
push
js
pop
repz
dec
push
ret
sbb
test
pop
in
xchg
or
cmp
pop
jg
add
sbb
pop
xchg
out
pop
cwtl
or
mov
repnz
xlat
setp
or
sub
mov
mov
mov
lods
out
fwait
cltd
enter
adc
andb
cwtl
add
mov
cli
test
jno
add
data16
add
xor
mov
dec
int
inc
inc
xchg
sub
mov
xchg
roll
inc
aam
fdivrl
mov
xchg
and
pop
mov
das
and
jg
adc
push
mov
dec
push
jne
cmp
lods
pop
pop
lods
outsb
xchg
in
push
test
out
and
lea
push
jp
addr16
pop
icebp
push
idivb
inc
in
push
adc
stc
fidivl
or
rolb
fistps
sarl
mov
dec
hlt
ret
or
jbe
add
push
daa
out
inc
fbld
sahf
xor
cmc
dec
inc
fldcw
std
aad
sub
push
out
xor
jle
shl
rcrl
sbb
popf
outsb
mov
lret
movl
inc
jecxz
add
sarb
out
pop
test
aas
rcl
inc
cmp
ljmp
pop
xchg
and
jle
xlat
insb
sbbl
loop
xor
xlat
inc
jb
shll
nop
mov
dec
shrb
loope
mov
in
and
test
jnp
leave
ss
fsubrs
rclb
mov
es
pop
in
shrl
ds
adc
sbb
jmp
dec
xchg
jnp
add
xchg
faddl
mov
movsl
pop
pop
mov
sub
scas
inc
push
aad
lods
repz
jae
and
call
or
rclb
push
adc
push
bound
adc
sub
inc
xchg
jmp
mov
in
lret
xlat
popl
jecxz
loopne
sub
adc
pusha
nop
push
jno
fnstenv
jns
or
cli
mov
mov
mov
pop
pop
sub
lahf
dec
or
mov
sbb
ja
mov
ja
std
dec
std
cmp
into
xor
aaa
lea
enter
sti
rolb
ds
push
sahf
les
add
outsb
or
sub
mov
or
sbb
fnstcw
lea
decb
data16
loop
jae
inc
rcrb
xor
fbld
inc
arpl
lret
xor
inc
mov
add
arpl
cmp
pop
dec
add
mov
mov
lds
and
fwait
xor
ror
in
outsl
in
rcll
mov
cmpsl
test
mov
sub
xchg
pop
sbb
cmpsb
movsb
cmp
enter
pop
aas
call
fstpl
popa
inc
dec
and
rcl
mov
jbe
je
aas
pop
sbb
push
and
ret
pop
shl
adc
mov
mov
sub
sarb
cltd
fucom
mov
push
out
fimull
mov
mov
loope
dec
sahf
ficoms
xor
repz
in
ljmp
mov
cmpsl
xchg
les
mov
fcmovnu
pop
icebp
cmp
into
mov
mov
sbb
and
outsb
mov
repz
out
ds
and
xchg
enter
cmpsb
xor
jle
rcrl
jecxz
adc
and
data16
cmp
add
iret
das
repnz
push
into
test
imul
jle
mov
int
fmull
call
in
mov
hlt
jmp
mov
xchg
push
mov
cli
das
imul
ja
jle
dec
outsl
mov
into
push
sub
imul
stc
in
cli
mov
hlt
fisubrs
icebp
mov
das
lea
lock
nop
cmp
fstps
or
scas
out
mov
rcrl
xchg
inc
jb
ds
loop
in
mov
cmpsb
cmpl
subb
shlb
test
pop
push
dec
mov
repz
movsb
push
mov
adc
movsb
bound
ret
rorb
pop
jg
ljmp
pop
cs
push
sbb
pop
jbe
pop
or
pop
or
push
fsub
cmpsl
call
mov
dec
hlt
mov
ss
in
sub
mov
push
lods
scas
cmp
jae
test
pop
or
mov
adc
out
xchg
sti
pop
out
jns
add
jne
scas
lcall
or
es
das
scas
mov
push
cmp
cmp
lea
inc
xlat
add
xor
rep
call
dec
jle
dec
mov
hlt
fwait
add
outsb
lret
fs
cmp
xchg
pop
test
stos
sarl
xor
rolb
or
jne
loopne
xor
xor
adc
loopne
dec
xchg
pushf
jmp
cmpsb
xlat
test
cmp
cmpsb
xor
jg
movb
and
push
inc
sub
fbstp
mov
or
mov
cmpsb
mov
shll
or
xchg
mov
lods
out
into
jmp
xor
popa
mov
mov
inc
aaa
push
push
sti
dec
xchg
push
inc
add
sbb
imul
adc
mov
push
js
ds
adc
in
xchg
push
push
push
sbb
xor
int3
mov
ljmp
or
popf
pop
enter
pop
dec
ss
movsb
in
cmp
dec
cmp
icebp
es
sbbb
cmp
sbb
in
stc
mov
add
and
sahf
cmp
xchg
and
add
mov
pop
cli
push
jne
add
movsl
and
jmp
ret
les
cmp
aam
xchg
call
jb
sub
cmp
xchg
push
mov
jo
jge
psubusb
pop
pusha
inc
sti
or
add
cli
add
negb
leave
icebp
fisubrs
int3
sub
cmc
sub
adc
repz
push
and
jne
push
or
std
pop
pop
enter
in
roll
out
repz
or
repnz
aas
pop
lahf
mov
cmp
leave
fdivs
mov
inc
stos
cltd
mov
stc
lds
ffree
pop
cmc
lods
cmpsl
dec
cmp
dec
xor
jge
outsb
and
pushf
push
add
add
push
mov
popf
fldl
jns
lods
dec
repnz
mull
lahf
rolb
and
jb
jbe
or
xor
jns
adc
and
mulb
sbbl
push
pushf
aas
js
pop
xlat
xchg
les
inc
loope
fadds
in
xchg
stc
pop
fmuls
mov
mov
mov
xchg
xchg
dec
cmp
or
dec
aaa
mov
ja
inc
test
movb
leave
repz
mov
std
ds
pushf
and
ljmp
mov
sub
xor
xor
push
not
sbbl
xchg
fists
out
sbb
test
in
cld
adc
mov
cwtl
or
dec
jnp
insb
addl
or
das
std
pop
fistpl
pop
and
out
arpl
xor
sub
mov
movsb
mov
push
mov
sub
adc
jbe
sar
mov
mov
lea
adc
add
fneni(8087
std
movsb
rcl
stc
push
jo
inc
cli
or
xchg
lahf
sub
cmpl
les
add
mov
clc
mov
and
mov
loop
arpl
loop
loope
jmp
loopne
adc
mov
jne
and
jnp
mov
mov
xorl
mov
dec
inc
and
dec
sub
push
sub
add
enter
scas
add
push
and
jle
mov
sub
in
mov
aam
mov
mov
mov
aaa
shrl
pop
mov
and
cmp
leave
mov
imul
pop
add
bnd
jbe
jge
pushf
push
fdivrs
fildll
inc
xchg
in
mov
jns
pop
je
add
mov
and
push
or
xorb
loopne
ret
fmull
dec
dec
mov
into
dec
lock
adcl
dec
dec
jmp
lock
scas
push
les
xchg
call
outsl
cmp
xchg
roll
subl
scas
adc
xchg
mov
jmp
lcall
xchg
cmpsl
cmp
and
in
add
dec
fs
icebp
stc
xchg
lret
xchg
inc
push
stc
test
inc
cmp
loopne
cmp
cmpsb
cmp
outsb
jge
or
pop
jge
aam
pop
fdivs
cmc
mov
jmp
movb
test
inc
das
adc
jno
jns
xchg
xor
and
rorl
pop
imul
arpl
jmp
adc
out
pushf
mov
inc
sbb
jecxz
leave
push
enter
aad
mov
xchg
jg
test
leave
pop
add
push
inc
aaa
mov
cmp
xchg
sbb
jl
pmaxsw
mov
leave
or
cmp
sub
dec
sahf
fisubrs
in
jae
push
push
jno
stos
cmp
pop
in
mov
loope
mov
and
je
mov
push
cmp
pop
leave
adc
mov
jmp
loopne
sbb
inc
add
stc
push
scas
fs
adc
ja
leave
push
mov
dec
sub
and
push
sub
notb
mov
adc
mov
pusha
sub
sbb
in
data16
nop
dec
mov
adc
stos
mov
cmpsb
mov
imul
xor
shll
mov
mov
mov
inc
in
or
sahf
push
jnp
jp
cld
or
add
dec
cmc
lret
sub
mov
cmp
and
incb
cmpb
adc
push
inc
jg
mov
inc
dec
sahf
xchg
adc
into
xchg
adc
repz
out
clc
insl
rcr
pop
push
ficoms
pop
mov
jno
loop
add
js
out
pop
popa
pop
inc
sub
outsl
fidivl
mov
adcl
pop
ja
cmp
outsl
dec
enter
pop
add
mov
into
test
sub
bound
sub
xor
mov
add
pusha
or
int
shl
mov
dec
xchg
jo
in
jl
sbb
aas
outsl
fidivl
mov
mov
les
cs
or
sub
outsl
ret
stc
aad
fnsave
or
ds
cmp
pop
mov
adcl
sahf
in
outsl
mov
pop
cmp
adc
mov
neg
imul
fwait
movsl
lds
dec
xor
inc
and
or
push
int
fs
aaa
inc
pop
outsb
push
and
cwtl
out
imul
jmp
fmuls
repnz
in
sub
and
sub
jp
mov
cmp
test
out
lock
ss
repz
xor
jge
int
loop
push
lret
aas
cld
push
xlat
test
jecxz
adc
inc
push
mov
xor
insl
push
mov
mov
stos
jecxz
jp
mov
sub
imul
add
and
cmpsb
mov
popa
in
pop
mov
lcall
jg
insb
jns
push
insb
add
das
mov
dec
mov
jno
dec
cmp
and
mov
adc
jbe
mov
jmp
mov
mov
and
rcrl
imul
inc
inc
dec
push
push
push
insb
or
or
movsb
lahf
mov
cmpsb
out
mov
cld
insb
sub
adc
cmp
mov
stos
push
int3
cmp
mov
es
xor
xor
cmc
into
js
pop
shrl
or
or
cmpsl
push
insb
cmp
jecxz
cmp
sub
jbe
or
add
xchg
inc
sub
nop
fs
ficompl
sub
add
test
data16
movsl
test
shlb
add
jbe
adc
sahf
push
fidivl
loope
mov
lea
cs
dec
or
adc
mov
xchg
cwtl
xor
cmp
mov
adc
push
adcb
pop
xchg
push
inc
fs
iret
inc
vpsrad
xchg
les
subl
loop
jg
stos
fiaddl
dec
ja
cld
mov
cmc
xor
jbe
mov
iret
add
mov
cs
imul
jb
es
xor
out
mulb
movsb
mov
xchg
mov
xchg
and
shrl
test
jbe
xor
cltd
stc
pop
pop
cmp
fistpll
dec
gs
cmp
mov
movsb
xchg
adc
in
in
push
fs
xchg
test
jno
adc
sbb
outsb
and
out
inc
mov
stc
daa
adc
popf
fwait
ds
adc
adc
lods
addr16
cmp
out
fcmove
jmp
ret
incl
cltd
add
ficomps
jg
inc
xchg
adc
or
mov
adc
xchg
cpuid
and
or
mov
aad
xchg
in
sub
repnz
sub
fcmovnbe
xchg
cmc
and
or
xor
xor
ficompl
xlat
stc
or
dec
xchg
xchg
mov
push
ret
cs
inc
xchg
lea
jg
mov
adc
icebp
int
ficoms
push
icebp
xorl
test
inc
icebp
adc
orb
leave
pop
insl
sub
pop
jl
cmpl
sbb
add
jo
mov
mov
imul
adc
mov
add
push
mov
and
dec
sbb
mov
dec
pop
das
or
push
push
in
cli
jb
xchg
inc
ljmp
add
ljmp
negb
add
shl
in
cmpsl
mov
test
insb
jmp
lea
jmp
xor
gs
jle
int3
mov
xchg
subb
pop
cmp
mov
sub
jle
jp
repz
sub
add
and
fbstp
dec
fstpl
mov
lcall
in
popa
cmp
int3
push
jg
cmp
push
push
add
lcall
or
add
lea
test
push
xor
mov
stc
loope
scas
xchg
fwait
inc
aam
loope
inc
sbb
movsb
dec
pop
mov
test
cmp
lahf
movsb
mov
pusha
sbb
mov
das
shll
mov
push
orl
mov
ret
nop
call
sub
sub
push
mulb
and
mov
call
lahf
cli
leave
xor
push
stc
rcll
xor
mov
pop
sub
xlat
bound
into
jl
pop
push
pop
mov
adc
lcall
sbb
xor
jae
add
lret
std
and
lea
inc
mov
jno
jbe
std
jno
mov
sbb
fdiv
mov
mov
xlat
outsl
inc
int
and
adc
gs
pop
add
xor
in
std
mov
or
out
jp
in
or
push
xchg
or
push
repnz
sbb
adc
add
mov
cmc
push
lret
ja
mov
xlat
pop
mov
in
mov
adc
cmpsl
xchg
movsl
and
jo
ja
jle
hlt
push
lock
pop
fimull
push
lock
and
fdivrs
aaa
add
js
pop
je
jle
scas
or
push
lahf
add
aam
mov
mov
out
scas
add
cmp
lods
xor
and
push
cli
inc
in
xchg
je
in
aaa
push
inc
iret
pop
js
aas
mov
pusha
pop
dec
sbb
fcoms
in
sub
insb
gs
dec
je
push
dec
pop
ja
fcmovbe
add
fisubrs
ficompl
int
arpl
adc
lock
fldt
jle
test
shr
shr
out
jge
xchg
and
icebp
std
sbb
popl
stc
shl
push
push
push
lock
stc
fxch
mov
jecxz
add
fistl
aaa
sbb
fiaddl
or
mov
es
xor
inc
push
dec
dec
mov
cmpsl
and
adc
adc
mov
imul
sub
js
jbe
das
jmp
in
pop
subb
fwait
jo
outsl
xorb
aaa
lahf
mov
mov
cli
jbe
push
lock
js
mov
and
adc
xchg
mov
in
inc
xchg
out
jbe
aaa
dec
out
or
dec
mov
and
push
add
in
lret
push
jb
les
jns
adc
adcl
mov
sub
hlt
mulb
aas
ret
ss
xchg
adc
enter
movsb
scas
mov
dec
movsb
dec
shrl
dec
mov
and
or
ss
imul
mov
loopne
divl
pop
xchg
cwtl
inc
xor
add
jno
loop
ret
dec
inc
negl
mov
popl
xchg
push
test
adc
imul
repnz
popf
int3
mov
dec
xchg
add
or
lret
aad
sarb
ja
pushf
rcrl
bound
sbb
test
push
mov
xor
push
out
in
lcall
and
pushl
call
dec
mov
sbb
xchg
pop
aam
outsb
mov
jmp
popa
adc
ds
fbld
fmuls
je
or
mov
mov
add
icebp
adc
push
sahf
fiadds
mov
scas
pop
add
aaa
mov
sub
and
cmpsb
adc
and
or
xor
inc
movsb
xlat
xchg
rcr
insl
xor
test
or
sub
out
movsb
sahf
or
daa
inc
imul
das
inc
dec
dec
movsl
jg
xor
outsb
imul
addl
push
imul
shll
ljmp
mov
aam
jg
mov
or
xor
imul
int
pop
mov
ret
sub
ss
cmp
icebp
mov
pop
jg
addl
xor
add
clc
sbb
xor
cmpsl
push
and
adc
or
mov
cmp
hlt
push
and
and
pop
mov
cmp
add
call
fildl
repz
mov
out
sub
pop
ss
test
jne
jo
xor
add
xor
rorb
ja
inc
cwtl
test
or
repnz
fcmove
aaa
cmp
xchg
int
mov
dec
outsb
jae
movsb
stos
inc
cmp
pop
inc
test
jnp
push
dec
lds
or
dec
lret
and
ja
cmp
mov
sub
inc
inc
xor
push
dec
scas
xor
inc
ds
adc
ret
or
add
repnz
in
sti
mov
sahf
sub
sub
push
adc
sub
addb
out
div
repnz
jbe
mulb
xchg
js
mov
adc
jmp
es
mov
sbb
pop
fisubs
push
std
es
div
cltd
pop
inc
push
or
ja
xor
jo
dec
int
mov
xchg
test
cwtl
pop
insb
jle
adc
xlat
jno,pt
pop
push
adc
mov
or
test
mov
mov
adc
inc
sbb
fsubs
push
cmp
or
xchg
icebp
fldt
outsb
call
mov
data16
adc
int3
dec
nop
icebp
mov
cmova
je
add
push
sbb
cmpb
shlb
sbbl
pshufw
pusha
repnz
int
mov
sub
jge
jne
add
mov
dec
loope
sub
hlt
dec
fucomi
cmp
mov
add
mov
mov
lcall
outsl
and
jmp
push
jge
jecxz
xchg
xlat
xor
dec
shlb
loop
cmc
outsb
xlat
daa
fidivrs
xchg
aam
xchg
stos
inc
xlat
mov
loopne
jnp
ss
push
sbb
incb
inc
xchg
push
mov
jae
mov
arpl
pop
push
je
in
xchg
mov
jo
aaa
fwait
pop
int3
cmp
xor
sub
sub
ja
push
xchg
cltd
xchg
mov
shrb
cmp
mov
daa
dec
nop
lods
mov
testb
test
cmpl
test
pop
das
pop
lds
sub
adc
add
movsl
scas
std
lcall
in
fidivrl
add
mov
stos
in
nop
inc
adc
test
jmp
dec
test
adc
rcrb
adc
outsl
push
test
out
xor
mov
div
in
sbb
mov
jo
sti
aaa
push
enter
xchg
xor
leave
or
xchg
das
mov
inc
cmp
cmp
cmp
add
rep
dec
xchg
push
adcl
xor
rcrb
inc
xor
and
pop
pusha
lds
or
fidivl
call
dec
pop
cs
inc
dec
rcrb
loope
mov
push
jne
out
sbb
or
inc
jns
ret
add
popa
and
xchg
adc
iret
js
cli
mov
xorl
or
xchg
xor
repnz
test
or
cltd
insl
push
fs
add
mov
pop
cmp
mov
or
je
jnp
lcall
fisubrl
mov
das
arpl
pop
out
xor
cs
xor
nop
xchg
mov
es
mov
in
push
lock
cmp
push
mov
push
or
mov
dec
fs
ja
add
pop
daa
mov
test
pop
insb
icebp
stos
mov
or
outsl
out
movsl
pop
pop
adc
out
sbb
xchg
movsl
mov
jne
inc
mov
mov
xchg
inc
mov
lds
ss
out
int3
daa
je
jnp
cmpsb
mov
pop
lock
sub
popf
add
jle
add
lea
insl
ret
mov
in
xchg
loope
ja
dec
inc
aas
sub
mov
inc
dec
sbb
fs
imul
shlb
rorb
dec
in
push
add
add
xor
cmp
inc
gs
fprem
fidivs
cltd
repnz
mov
cwtl
outsb
inc
stos
loope
sbb
bound
dec
test
iret
cmp
fstpl
outsb
out
jbe
test
cmpsb
xchg
in
xchg
mov
nop
inc
sbb
hlt
mov
dec
pop
test
ss
cld
outsl
sti
mov
ret
lret
xor
inc
push
jnp
pop
and
mov
add
lret
xchg
clc
xor
dec
mov
cmp
fldcw
sbb
xor
and
mov
cmp
pslld
lock
xchg
aas
outsl
movsl
adc
mov
mov
scas
jne
dec
sbb
repnz
nop
dec
addr16
pop
hlt
test
imul
mov
dec
mov
jl
ds
pop
insl
imul
nop
fiaddl
sbb
roll
insb
push
jo
int
add
adc
aad
mov
sbb
out
push
out
mov
cmp
mov
inc
scas
ljmp
sbb
pusha
pusha
daa
pop
pop
dec
inc
dec
call
testl
pop
jns
adc
pop
stc
cmpsb
call
mov
inc
js
push
pop
std
test
pop
outsb
add
xchg
add
popf
mov
pop
pop
popa
lea
ret
lret
add
dec
cld
fldt
pop
push
adc
imul
lcall
or
out
lea
int3
lock
jle
push
shll
xor
mov
js
push
push
aad
into
xor
or
sbb
das
scas
shrl
rcr
movsb
add
ret
aam
and
mov
fildll
dec
fs
sahf
cmp
adc
jmp
push
pop
push
lock
mov
into
and
mov
hlt
lds
jae
int3
sbb
xlat
ss
mov
pop
adcl
notl
mov
sub
push
or
mov
sti
shrb
scas
popa
push
push
lcall
sbb
mov
jns
jecxz
nop
movsb
push
outsb
lods
mov
ds
mov
mov
rcrl
sarb
aaa
pop
jp
mov
imul
into
xchg
sub
lret
dec
cmc
hlt
cmp
sub
adc
cmp
sub
outsl
popa
ficoml
movsb
shl
mov
clc
dec
xchg
cmpsl
rorl
mov
jmp
jne
pop
popa
sbb
in
sahf
inc
pusha
mov
aam
cmp
icebp
xlat
jb
and
mov
pop
fs
sub
jmp
hlt
mov
sub
jmp
mov
inc
std
imul
mov
dec
pop
jns
or
loopne
orb
imul
test
rcrb
loopne
mov
pop
mov
in
dec
in
push
push
lea
pop
aad
jle
enter
in
sub
test
cmp
pop
lret
out
popf
fsubs
xchg
cmp
adc
es
xor
lahf
mov
push
pop
cmp
fwait
cld
clc
dec
fdiv
sahf
orb
jne
mov
or
rcrb
leave
and
sub
dec
insb
cmpsl
lret
jmp
aam
pop
cld
sbb
or
xchg
in
ds
repnz
rorl
dec
mov
rclb
xchg
aam
sub
xchg
mov
loope
lahf
hlt
in
pop
cli
cbtw
mov
sub
test
shl
lret
in
lods
movsl
fildl
movsl
int
or
imul
xor
xlat
outsb
in
outsl
mov
mov
ja
add
loop
ljmp
xchg
aaa
movsl
orb
xchg
xor
std
test
fcoms
cmp
stos
mov
out
inc
inc
jb
dec
lcall
inc
cmp
adc
repnz
lahf
pop
push
jmp
push
push
jns
movb
fstp
addr16
sbb
jge
mov
jno
imul
cmp
jns
add
sbb
inc
sbb
cmc
negb
xor
icebp
fcmovne
repz
call
mov
lcall
cmp
ss
pusha
into
div
xchg
dec
pop
les
add
insl
inc
push
push
in
filds
repz
xchg
loopne
mov
pop
cmp
mov
outsl
repnz
inc
xor
test
sbb
jl
testb
outsl
mov
and
xor
sbb
cwtl
mov
cs
out
jmp
arpl
in
xchg
dec
xor
scas
in
dec
jmp
int3
add
add
jmp
ficompl
fsub
xchg
loop
insl
ljmp
mov
rcll
sub
rorl
mov
and
and
push
in
inc
ret
lahf
sbb
jmp
addr16
bt
inc
cli
adc
into
call
xor
and
sbb
data16
out
inc
pop
aaa
lret
inc
arpl
aas
add
sub
movsb
add
jno
fwait
pop
pop
pushf
or
xchg
adcb
lret
add
enter
push
fdiv
ret
cwtl
orl
xchg
scas
sahf
or
sbb
adc
jge
sti
push
xor
das
mov
mov
js
cltd
add
je
mov
or
jne
mov
pushf
aaa
cs
jp
adc
adc
out
adc
iret
jo
inc
cmp
dec
pop
mov
cmp
mov
cmpsb
pushf
xchg
rcr
nop
push
js
fsubs
fadds
add
gs
push
fdivrp
scas
sbb
mov
add
xor
out
mov
mov
les
xchg
inc
xlat
mov
cs
adc
in
pop
sub
data16
icebp
out
dec
mov
or
lock
ret
xchg
fcmovnbe
lret
push
test
pop
mov
test
cmp
and
add
cltd
xor
scas
cmc
push
js
scas
int3
sti
loopne
push
loope
inc
leave
mov
add
xchg
mov
add
cltd
fidivrs
clc
test
mov
fcompl
mov
test
sub
dec
shl
lea
adc
sub
push
push
xlat
pop
mov
dec
sub
clc
cmp
cmp
mov
cmp
xor
push
jmp
and
dec
mov
aam
inc
in
xlat
ja
arpl
and
mov
pop
pop
imul
xor
stos
in
mov
mov
mov
mov
nop
xchg
jg
cli
out
cmp
or
adc
sbb
and
fwait
adc
fwait
ja
push
insb
in
popw
pop
addb
and
jle
adc
adc
push
mov
xor
sbb
jmp
testb
outsl
movsl
mov
loopne
inc
inc
pop
pusha
pusha
hlt
mov
das
clc
cld
rcll
dec
mov
js
pushf
insb
lret
fwait
adc
push
dec
into
xor
jge
out
pop
fimull
xor
jp
loopne
stc
int3
lcall
outsb
fstps
ret
out
mov
cmpsb
test
out
sti
pop
stos
ret
lea
rolb
xchg
ja
inc
je
ret
push
sarl
sub
iret
push
sub
pop
shlb
sbb
into
jle
xor
inc
or
pushf
xorl
icebp
push
jns
lods
fisttpll
nop
fists
or
jle
test
in
mul
xchg
dec
adc
mov
dec
int3
add
xchg
out
dec
lea
lret
mov
std
push
bound
sub
outsl
sub
sarb
jo
dec
jnp
fwait
inc
dec
dec
int
add
inc
adc
sbb
test
xchg
outsb
xor
or
stos
ret
xchg
push
fimull
push
sub
add
or
loop
mov
ljmp
adc
mov
fwait
das
test
in
shl
popf
mov
pop
inc
pop
aaa
movsl
movb
pop
out
inc
sub
arpl
addb
push
inc
flds
mov
frstor
mov
add
push
hlt
imul
stc
shl
sbb
xor
std
int
lods
or
mov
push
scas
aad
ljmpw
push
push
pop
dec
fisttps
orl
arpl
inc
mov
and
mov
leave
xlat
push
mov
push
jge
sbb
mov
jb
mov
test
gs
out
sbb
jae
ficomps
add
insl
xchg
mov
sbb
aam
hlt
mov
aaa
push
sub
sbb
sbb
cmp
mul
mov
dec
shlb
push
and
xchg
jne
inc
mov
cwtl
dec
or
rcrl
pop
sti
incl
jns
or
add
fadd
cmp
lea
aas
xor
fimull
ds
jmp
mov
fisubs
icebp
xchg
push
push
into
outsl
repnz
aad
pop
adc
es
push
popa
adc
movsl
xchg
divb
sub
cmp
inc
adcb
repz
sub
dec
aas
jns
mov
xchg
mov
insb
pop
scas
aam
arpl
scas
icebp
pop
aas
lods
lods
dec
jb
or
roll
or
sub
push
ss
dec
and
int3
inc
xchg
in
call
push
ljmp
in
jmp
dec
dec
jmp
push
gs
mov
mov
gs
inc
adc
inc
xor
ds
pop
sbb
lahf
aaa
adc
and
inc
cmpb
add
mov
pop
pop
sbb
imul
mov
cmp
and
adc
push
pop
dec
out
jecxz
ljmp
xor
in
mov
mov
jne
clc
lret
pushf
pop
ds
imul
cmpsb
loope
dec
popf
xor
mov
je
jae
sbb
xchg
xor
sub
pop
cmp
sub
fidivrs
into
dec
fmulp
lahf
sti
adc
inc
adc
ljmp
nop
pop
int3
rolb
in
sub
jp
lds
cmpsl
out
ja
cmpsl
mov
fildl
adc
les
and
push
pop
ret
sub
push
dec
daa
push
sub
icebp
jmp
xor
and
in
dec
les
dec
call
mov
sbb
arpl
mov
lods
dec
rcrl
addl
std
mov
xchg
out
push
fiaddl
in
imul
das
bound
sbb
sub
or
leave
in
pop
movsl
adc
das
push
and
sarb
adc
stc
inc
add
xor
sub
and
cltd
popa
mov
sbb
leave
repnz
icebp
sbb
adc
mov
lods
outsb
enter
xchg
mov
mov
push
mov
movsb
hlt
loopne
push
in
sub
clc
sub
imul
test
lahf
sbb
and
mov
adc
dec
sbb
jne
mov
arpl
data16
dec
pop
pop
and
js
cmp
xchg
pop
ret
into
xchg
pop
xchg
into
pop
lahf
add
inc
mov
dec
push
je
inc
pop
bound
ja
imul
popf
test
testb
or
xchg
rorl
sti
std
push
movsl
notl
cwtl
pop
cmpsl
enter
or
add
dec
mov
mov
xor
loopne
lret
fbld
jmp
add
ds
adcl
xor
xor
lret
mov
dec
adc
fsubl
fcmovb
sahf
mov
dec
lods
xchg
push
lds
jns
loopne
mov
adc
cmp
sti
fidivrl
pop
push
loop
test
icebp
jg
mov
jno
mov
shrb
cmp
xlat
push
jp
push
jge
cli
mov
mov
in
and
in
adc
hlt
icebp
xchg
bound
pop
in
cwtl
sbb
mov
sbb
test
fs
shll
fcmovne
outsl
sbb
out
in
add
sti
ljmp
daa
outsb
and
mov
enter
xor
js
cmp
fimull
popa
jne
lret
and
insb
pusha
enter
xchg
into
aam
xchg
cli
aad
adc
and
and
xchg
addl
adc
cltd
dec
jne
cmpsl
push
cmpb
pusha
dec
lret
pop
daa
inc
fldln2
jle
pop
aas
shrl
sub
int3
stos
leave
inc
and
cmp
je
into
stos
push
pop
in
xor
bound
jns
pop
fs
lods
fcmovb
and
fwait
in
fsub
popa
add
inc
jne
clc
sbb
rcl
jecxz
add
sti
pop
push
xchg
out
sbb
mov
out
adc
adc
and
rcrb
lods
aam
cmp
push
inc
dec
mul
add
sbb
arpl
ret
shl
test
jb
and
pop
sbb
cmpsl
jg
out
or
lahf
pusha
push
mov
sahf
push
ds
mov
push
pop
out
or
xor
ficompl
sbb
cli
incb
or
cwtl
loop
in
mov
add
pop
inc
pop
lcall
mov
push
out
xchg
and
jbe
dec
or
js
imul
jl
adc
bound
mov
lahf
jp,pn
es
mov
lret
inc
mov
lods
or
aas
adc
pop
and
test
or
ficompl
mov
sbb
out
mov
stos
pop
or
sub
in
dec
xor
push
das
pop
adc
aad
xchg
notb
cli
scas
imul
imul
fbld
xlat
xor
aaa
xor
aaa
dec
and
in
dec
jo
add
push
lahf
push
dec
jbe
aaa
stc
cmp
daa
inc
cmp
ljmp
movsl
jle
stos
sbb
adc
mov
mov
jb
dec
xor
xchg
adc
repnz
add
cmpsb
push
lahf
push
sub
jno
dec
push
aam
shlb
sti
inc
inc
int3
inc
flds
cmp
jno
sub
fdivr
mov
sarb
jno
neg
add
lret
ljmp
pop
lods
and
jp
xchg
xchg
in
or
movb
push
mov
dec
sub
pavgw
push
imul
mov
cmp
and
xor
pop
sub
fidivrl
xchg
add
xchg
mov
sar
sbb
insl
sbb
inc
mov
mov
and
aaa
dec
jo
mov
pushf
pop
xchg
jo
in
cltd
out
das
enter
inc
jnp
ret
mov
loope
std
outsl
ret
and
mov
cwtl
add
jne
subl
add
mov
aad
xlat
pop
lds
fcomps
jne
xor
movsb
shr
jmp
repnz
and
daa
movsb
mov
sbb
xor
jae
xchg
fwait
mov
icebp
cmp
push
mov
mov
cld
mov
adc
repz
int3
sub
imulb
jp
in
fcom
xor
add
movsb
fstps
pop
xchg
jne
jecxz
jb
adc
push
cs
repz
out
jl
push
out
stos
jb
pop
in
or
pop
std
sbb
outsb
sti
sbb
push
ud0
and
push
dec
jae
fisubrs
pop
test
jae
mov
push
adc
dec
inc
mov
dec
jae
das
std
ljmp
sar
in
inc
popf
gs
inc
sub
lahf
xchg
mov
lahf
ja
mov
push
popa
mov
xor
adc
push
mov
pop
aad
clc
in
int3
call
inc
jg
jae
add
mov
ja
subl
mov
sub
mov
sbb
mov
xchg
cmp
test
or
inc
jecxz
rorl
sarb
dec
or
fcompl
out
adc
add
in
test
enter
inc
mov
insl
pop
outsl
add
jae
cmc
mov
cli
mov
shl
jg
stos
push
aaa
ja
push
fsubr
sbb
push
or
jne
insb
inc
clc
adc
imul
pop
testl
push
push
jae
psubq
sub
sahf
xorb
jmp
mov
sbb
dec
lods
pop
fdivr
sbb
cltd
sbb
add
jb
jns
mov
shll
insl
or
add
cli
test
dec
sbb
mov
cwtl
test
cmc
sub
out
jb
dec
xchg
hlt
test
push
mov
int
xlat
inc
mov
lods
and
stos
mov
iret
lahf
or
lds
sub
pop
rclb
and
jp
dec
push
ficoms
mov
adcl
fisttpl
cltd
cmpl
repz
sbb
jb
scas
mov
or
sub
pushf
cld
jecxz
mov
dec
fnstcw
pop
dec
add
pop
cmp
ret
mov
mov
adc
push
imul
call
mov
cltd
or
dec
adc
loop
in
mov
sub
int
adc
mov
jb
jmp
push
sbb
cmp
dec
fmull
or
lret
mov
aam
mov
or
daa
xor
mov
sub
fidivrl
mov
popa
and
scas
dec
and
out
sub
push
and
pop
pop
jo
stos
sub
adc
mov
mov
and
mov
mov
mov
fists
mov
mov
fwait
cld
hlt
sarb
js
xchg
std
jae
and
arpl
jb
mov
inc
je
sbb
mov
in
add
mov
imul
sub
jo
imul
or
or
pushf
push
xchg
pop
sub
xchg
xor
xchg
addl
or
add
call
std
jae
inc
stos
ljmp
mov
sub
hlt
add
cwtl
adc
xchg
mov
es
int
movb
jge
pop
dec
cli
lock
push
ja
add
cltd
lcall
mov
arpl
jbe
jne
fidivl
jl
mov
sbb
mov
bound
or
xor
xlat
iret
shlb
into
pusha
adc
inc
in
adc
jg
dec
fildll
and
je
loope
aad
xchg
cmpsl
dec
jmp
sub
das
add
push
fmuls
xor
repz
dec
test
maxps
push
pop
test
mov
jmp
out
popa
push
inc
add
lea
mov
pop
push
add
mov
mov
xor
call
mov
mov
cmp
loopne
push
cmc
popf
fwait
push
outsl
inc
inc
call
sub
mov
cmp
dec
lret
insl
popa
mov
xlat
inc
push
xchg
imul
pop
and
js
adc
cld
add
popa
stos
fisttpll
out
push
fwait
loopne
aas
imul
dec
fisubrl
or
sahf
call
arpl
cmp
cmpsw
xchg
fnstsw
and
inc
push
into
inc
push
push
test
aad
int3
push
sbb
daa
jp
push
shll
cmp
adc
lret
adc
push
xor
jle
mov
xor
sub
repz
scas
jnp
pusha
sahf
dec
arpl
push
pop
iret
dec
lods
pop
les
add
add
lods
pushf
xchg
fwait
jle
inc
divb
sti
rorb
icebp
arpl
ja
mov
js
lahf
lods
mov
jns
lret
sarb
fisubrs
mov
xrelease
test
mov
divb
sbb
dec
sub
xchg
push
jle
mov
jg
xor
adc
sbb
rcll
scas
mov
lret
jl
std
fidivl
popa
loope
xor
jg
dec
cmp
int
nop
adc
xchg
add
int
ljmp
inc
loop
fst
enter
aaa
push
mov
mov
movsl
daa
mov
add
sbbb
xor
addb
ret
shlb
jg
bound
mov
not
sbb
icebp
or
loop
pusha
inc
je
push
jo
rorb
ret
mov
enter
mov
mov
pop
dec
stos
adc
cmp
in
test
adc
fisubrl
push
xchg
mov
push
jle
add
arpl
dec
adc
sbb
repnz
bound
push
daa
adc
das
mov
sub
cwtl
popa
aas
hlt
sub
cs
mov
sti
sub
mov
pushf
je
cmp
loopne
data16
neg
dec
pop
scas
ret
mov
call
mov
lods
daa
add
xchg
nop
lock
ss
or
les
fwait
mov
out
outsb
in
das
mov
inc
in
js
outsb
lahf
mov
sahf
stos
cmp
xchg
aad
mov
cmp
cmp
cwtl
adc
jbe
xchg
sbb
dec
add
inc
jno
mov
push
mov
fwait
test
shlb
push
int3
adc
sbb
insb
mov
push
std
sub
cmc
outsb
add
xor
cmp
mov
xor
call
mov
pop
sbb
jecxz
inc
movsb
pop
pop
mov
filds
out
shrl
stos
sbb
fildl
or
loop
mov
call
ds
xor
ret
cmp
inc
jne
movsb
pop
imul
xor
into
cmpsl
popl
stc
scas
daa
fidivl
lea
inc
enter
or
in
int3
add
xor
xlat
mov
lods
std
leave
cmp
mull
sbb
bound
bnd
xchg
jle
push
ljmp
mov
mov
xlat
ss
out
sub
call
fcomps
subl
jae
or
icebp
rorb
lret
inc
repnz
addr16
lods
adc
outsl
mov
lret
jbe
add
adc
push
int
mov
shrl
insb
movsb
pop
jb
mov
insb
stos
mov
dec
push
das
sub
push
scas
push
pushf
imul
cmp
mov
lret
add
into
cwtl
adcl
test
pop
mov
or
mov
mov
mov
xlat
mov
sbb
jg
mov
and
cmpsl
out
movsb
hlt
icebp
inc
dec
dec
sub
mov
shr
cmp
les
enter
cmp
cmp
cmp
je
cmp
les
or
add
add
mov
fyl2x
pop
outsb
mov
clc
push
sub
sub
cld
or
fs
pop
xchg
and
insb
test
in
xor
push
stos
mull
push
ljmp
cmp
push
dec
mov
push
mov
fisubrs
sub
mov
pop
test
fstpt
pop
pop
and
mov
movsb
in
loope
sbb
popa
nop
adc
fbstp
dec
dec
pop
xchg
sbb
lods
mov
adc
into
cld
cmp
mov
push
lds
and
enter
mov
sub
pop
mov
inc
xor
pop
xor
lods
xor
xorb
jl
xor
rcll
sarb
or
sub
lea
aaa
sub
loop
lcall
lods
lret
test
jp
je
call
pop
shlb
mov
fldl
cli
fstl
add
shr
push
push
mov
and
inc
scas
xchg
or
repnz
pop
xchg
addl
xor
mov
adc
in
cmp
or
push
xchg
jge
mov
push
fs
daa
in
aad
ret
imul
ret
inc
loop
bound
cmp
or
lahf
dec
dec
cmpsb
mov
xchg
mov
mov
mov
pop
cld
dec
in
sbb
mov
je
shlb
inc
jle
push
fsubs
adc
stos
inc
add
popf
lock
fstp
fcoms
jl
outsb
out
rcr
inc
inc
sbb
dec
pop
add
and
lods
je
out
test
call
jecxz
dec
push
loop
shrl
outsb
sub
push
inc
fadd
push
mov
jecxz
mov
push
cltd
roll
repz
loop
lock
or
xor
call
push
aam
push
in
sti
cmp
sahf
hlt
and
jmp
adc
inc
or
shll
ljmp
lock
fsubrl
fldl
add
and
pop
inc
mov
test
idivl
mov
xchg
fidivrs
pop
rcrb
pop
jb
mov
push
cwtl
mov
clc
sbb
jno
popf
jg
nop
fcmove
cmp
mov
int3
adc
movsl
xor
cmp
lods
jp
imul
add
dec
clc
add
lods
repz
fnsave
call
insl
daa
in
cmp
inc
cmpsb
scas
sub
cli
repnz
jne
rcl
or
outsl
mov
mov
fstps
push
hlt
jecxz
fstl
scas
or
dec
sub
mov
add
add
sti
mov
out
push
cs
cmp
cmovb
lret
xor
bound
repnz
mov
leave
jo
adc
pop
in
js
movsl
mov
enter
pop
cmp
and
int3
or
mov
cmp
dec
ficompl
mov
lods
jge
movsb
add
std
mov
jbe
icebp
test
loop
testl
cwtl
pop
or
enter
sti
push
sbb
pop
test
push
mov
lret
jge
jno
mov
sti
mov
xchg
xchg
xchg
stc
popa
pop
ficomps
mov
jl
fists
into
fdivs
push
inc
jmp
dec
cltd
cmp
testb
imul
cmpsb
lock
testb
sub
movsl
and
cmpsb
pop
and
testb
dec
push
cmc
jae
sub
xchg
mull
push
inc
imul
mov
jne
repnz
aam
xchg
cmp
mov
lds
mov
cwtl
xchg
lods
and
das
pusha
mov
outsl
mov
mov
hlt
rcll
or
dec
das
pextrw
pusha
loopne
mov
xchg
push
std
pop
incl
nop
mov
pop
cmpsl
push
xor
ja
enter
stos
xchg
sub
notl
push
je
cmp
in
push
ljmp
push
pop
add
dec
pop
outsb
popa
rorl
sti
into
loop
rcrl
push
dec
dec
int3
movsl
cmp
fsts
dec
sahf
push
clc
jg
push
arpl
mov
add
divb
in
fucom
fidivs
push
xor
fisubrs
pop
lret
bound
mov
sub
stc
out
jae
mov
cltd
rol
cltd
push
mov
xchg
lcall
daa
and
add
fldl
dec
fstl
sbb
sbb
add
jb
ljmp
mov
ret
dec
les
jmp
push
nop
cmp
ja
sti
icebp
jmp
inc
dec
scas
je
outsb
mov
fsubr
in
mov
scas
test
pop
mov
rorl
in
push
mov
xor
pop
jp
lcall
ljmp
nopl
imul
dec
jno
cli
insb
jb
or
push
bound
push
clc
pop
mov
stc
dec
add
outsl
ss
cli
ret
daa
inc
ret
xchg
movsl
cltd
addb
aas
mov
das
jmp
or
push
hlt
jl
outsl
hlt
or
sbb
mov
pop
cmp
inc
rcl
jb
push
jne
std
adc
push
stos
rolb
mov
push
cwtl
fbld
andl
inc
cwtl
xor
cmpsb
loope
inc
sbb
adc
sarl
jmp
cld
xor
jo
pusha
test
cmp
cmc
fbstp
rorl
mov
xor
stos
stos
inc
outsb
dec
sbb
and
pusha
and
fcmovb
fisubrl
enter
lcall
dec
roll
mov
xor
sbb
mov
lds
xlat
push
jp
jp
xchg
ficomps
pop
lret
in
fists
cs
cmpsl
cmp
lret
fisubrl
loope
dec
adc
dec
xchg
insl
xor
inc
mov
dec
mov
push
scas
mov
mov
movsl
mov
lock
cmp
aaa
lcall
in
mov
popf
cs
jl
xchg
shrl
pop
out
loop
or
cmc
rcll
inc
out
adc
dec
fcoml
inc
cld
outsb
adc
popa
nop
dec
or
icebp
ja
mov
mov
adc
neg
sbb
jb
outsb
lock
int3
outsl
inc
sbb
adc
bndstx
inc
mov
xchg
addr16
fidivl
js
pop
fsub
xorb
or
daa
xchg
xor
call
dec
pop
pop
sahf
xchg
lock
hlt
mov
mov
cmp
ds
xlat
jg
in
test
jnp
jp
ljmp
gs
mov
xchg
and
ds
mulb
dec
dec
mov
jecxz
inc
inc
ss
outsb
mov
aad
xchg
stc
and
clc
or
pop
mov
movsb
cmp
xchg
and
push
mov
or
test
mov
cmp
xlat
push
ret
mov
enter
xor
push
ret
jmp
sub
xchg
xor
cmp
adc
mov
jbe
xchg
push
dec
pop
into
fimuls
addl
jmp
lret
in
mov
shlb
int3
pop
push
cmp
leave
ja
mov
imul
xor
xchg
movsl
xchg
test
shl
ret
inc
dec
cltd
es
in
add
dec
mov
popa
mov
sbb
ja
std
and
lock
cli
mov
sbb
aam
loope
mov
frstor
es
into
aam
fstpt
dec
mov
ljmp
lock
xchg
xor
mov
and
lret
mov
and
add
sahf
sub
mov
push
movsl
xchg
mov
sbb
gs
push
fidivrl
jnp
jg
stc
xlat
stos
or
push
xchg
mov
lahf
sti
out
and
inc
pop
mov
aaa
lret
dec
imull
inc
js
popa
int
ds
pop
sbb
sbb
mov
cld
in
daa
jnp
xchg
jle
dec
mov
repz
or
ret
jge
je
cmpl
inc
push
cmpsb
insl
add
pusha
jns
mov
pop
adcb
pop
mov
sub
xchg
popf
ljmp
sbb
mov
imul
fwait
fs
mov
mov
add
dec
pop
xchg
jp
jg
push
jnp
jno
push
dec
cli
loop
popa
jp
mov
rcrl
scas
dec
int3
mov
sti
dec
cmpsb
in
pop
cmpsl
sub
and
sub
cmc
adc
cmpsb
loop
push
pop
xor
jae
mov
xchg
cmp
dec
std
decl
mov
fstpt
ficompl
sti
xchg
xchg
data16
pop
mov
dec
sub
sbb
push
arpl
cmpsb
push
repnz
adc
add
popf
leave
aas
fsubl
aas
push
lahf
dec
cld
push
mov
in
imul
aam
jge
push
mov
xor
shrb
push
fistpll
int
and
imul
jae
xor
sbb
jb
ficoms
icebp
jmp
inc
sub
iret
pop
js
mov
xchg
and
pop
imul
mov
clc
xchg
sub
lock
lret
data16
mov
mov
ret
dec
or
pop
iret
sahf
push
pop
fld
hlt
mov
stos
jbe
repz
xchg
mov
inc
add
mov
jns
orl
imul
xor
xor
jmp
scas
mov
subl
cmpsl
and
adc
mov
mov
push
pop
pushf
mulb
mov
stos
mov
dec
fstpt
sahf
cmp
movsb
jp
mov
sbb
stos
or
and
mov
pop
pop
cmp
mov
loopne
dec
stos
popa
ret
and
xchg
jp
adc
pop
outsl
pop
pop
lret
mov
and
daa
dec
cmp
ds
and
fst
aad
imul
adc
mov
sbbl
or
mov
hlt
repnz
mov
dec
and
pop
mov
cmpsl
adc
adc
mov
in
mov
wrmsr
xchg
pop
aas
outsl
mov
lea
repz
and
sbb
sbb
cltd
aad
jo
dec
lret
iret
outsl
popf
out
mov
and
movsl
ja
sti
push
les
popf
push
inc
mov
add
cmc
xor
dec
adc
mov
js
stos
lea
sbb
inc
out
jle
xor
fisubrl
dec
cmp
enter
cli
xor
rcl
push
outsb
cmp
je
xlat
mov
push
mov
add
addl
cmp
orb
mov
or
dec
loope
mov
test
sub
xor
mov
add
clc
in
jae
push
lea
sahf
insb
mov
push
ds
in
sub
pop
aam
bound
cmp
ss
in
jp
in
bound
shll
sarl
mov
adc
in
lcall
ljmp
cmp
pop
push
add
scas
add
inc
adc
sarb
and
dec
push
pop
dec
sahf
ret
xchg
stos
loop
pop
sti
cli
fcoms
dec
xchg
xchg
xchg
cmp
adc
inc
leave
ja
inc
fbld
xor
jmp
cmc
xchg
xchg
adc
and
sub
xchg
cmp
negl
pop
je
inc
cmp
les
pop
sub
jg
fists
mov
lock
inc
or
fwait
hlt
repnz
jo
mov
mov
mov
test
inc
mov
test
loopne
daa
repz
or
sbb
les
pop
sub
call
cld
inc
repnz
pop
notl
xchg
rorb
je
into
adc
xchg
lea
mov
xchg
dec
mov
cmp
xor
push
adc
stos
dec
sbb
ljmp
les
rorl
adc
es
mov
add
popa
push
sbb
aam
mov
repz
enter
mov
js
das
push
loopne
cmp
mov
mov
or
and
sbb
hlt
clc
or
xchg
imul
cmc
mov
sarl
fisubl
push
cmp
add
sahf
mov
inc
adc
jbe
cmp
stos
rcll
mov
sbb
push
ljmp
mov
jnp
push
or
int3
dec
movl
lahf
push
in
jle
add
fld
sub
or
jbe
js
fstpt
dec
pop
into
stc
mov
or
sub
pop
leave
lret
xchg
lods
jae
insb
shlb
mov
pop
das
hlt
add
hlt
rcrl
lods
in
jl
push
ja
rcl
sub
iret
lcall
push
lds
int3
push
aas
dec
mov
and
xorb
es
inc
inc
dec
xor
push
lret
xchg
movq
clc
notb
xchg
es
sbb
cld
mov
shlb
out
or
xchg
pop
dec
movsb
jge
xor
adc
ffreep
int
insb
shlb
aam
ds
pop
sbb
cmpsb
les
lea
fistps
fsubr
clc
jp
lahf
fiadds
pop
sub
ljmp
xchg
pop
mov
hlt
or
loope
xor
mov
inc
adc
fidivrl
push
stos
mov
das
cmp
xchg
mov
mov
icebp
or
mov
popa
cmp
mov
inc
mov
cli
mov
js
push
incb
int
pop
in
mov
jecxz
lcall
lahf
jge
and
fstl
mov
stos
add
xchg
imull
or
inc
inc
cli
out
stos
aam
fldl
jmp
pop
lds
fimuls
push
jecxz
dec
adc
dec
dec
out
call
cltd
jne
add
call
push
aas
sbb
ja
fstpl
jmp
jnp
pop
imul
sub
adc
pop
or
cmp
mov
subl
push
mov
cmpsb
mov
mov
xor
mov
push
bound
xor
add
pushf
sbb
pop
jmp
test
popf
cmp
in
movsl
push
ss
in
pushl
scas
cmp
jbe
outsl
jb
lahf
and
xlat
sbb
imul
leave
clc
xor
add
cmp
jne
mov
mov
es
mov
sti
dec
mov
in
clc
push
divl
mov
xor
jne
push
dec
lahf
mov
cwtl
shlb
fwait
inc
mov
je
pop
dec
sub
push
outsl
push
in
in
adcl
pop
aam
adc
mov
add
data16
ret
xor
daa
mov
clc
call
outsl
aas
xchg
lcall
and
mov
int3
in
in
dec
lcall
fldl
xchg
adc
shrb
popf
sbb
mov
jbe
mov
dec
pop
ret
lret
mov
cmp
sbb
push
mov
or
mov
mov
xchg
jmp
fists
fsts
in
xchg
dec
shrb
mov
incl
sub
fwait
test
lret
stos
aam
mov
xchg
or
into
ss
xchg
cmpsl
cmc
jbe
mov
jg
lods
in
push
and
or
lahf
test
xor
push
mov
cmp
popa
lods
pop
jbe
out
inc
sbb
push
add
ds
in
jae
in
cmpl
pop
jl
mov
loopne
jbe
icebp
cld
cwtl
mov
pop
das
jns
sub
std
fsubrl
mov
mov
add
int3
repz
dec
mov
aam
repz
pop
pop
mov
push
cmpsb
lea
pop
icebp
decb
mov
jno
adc
sbb
dec
pop
mov
int
cmp
sbb
inc
dec
cmpl
ret
jg
cmpsl
enter
mov
add
jae
pushf
cmp
add
sarl
cmp
icebp
out
in
ljmp
push
cwtl
xor
daa
mov
ret
loope
mov
outsl
outsl
popf
and
sub
pop
inc
into
xchg
push
push
rorb
data16
aad
into
pop
lahf
ret
or
sahf
push
aas
cmpsl
adc
xor
je
push
push
out
mov
popf
push
push
aas
xchg
dec
aad
cmc
inc
out
out
mov
in
adc
push
cmp
mov
sbb
js
mov
add
mov
xor
inc
sbb
mov
js
das
scas
dec
test
loope
add
enter
aad
push
sbb
mov
sbb
insl
cmp
pop
dec
scas
inc
ret
push
sbbb
mov
push
addr16
or
inc
aas
test
add
sbb
jbe
lock
pushf
mov
or
push
mov
mov
sub
bound
and
jo
cs
sub
xchg
jmp
test
jo
pop
dec
and
mov
mov
mov
jmp
xchg
push
mov
lret
add
out
call
cmpsl
outsl
testb
adc
bound
pop
push
repz
push
cmp
cs
jp
xchg
and
pop
cmp
jp
out
mov
mov
sub
and
nop
int
xchg
fiaddl
jmp
cli
pop
mov
aaa
cmpsb
cmc
sub
es
mov
bound
imul
imul
data16
dec
add
cmp
sub
dec
shrb
imul
mov
or
mov
subb
mov
sub
jns
and
mov
mov
arpl
scas
cltd
xchg
iret
jle
xlat
pop
rclb
mov
icebp
add
movsl
xchg
xchg
out
imul
xor
mov
jmp
bound
jmp
pop
frstor
les
pop
pop
sahf
aam
je
loope
sub
mov
out
sti
nop
push
push
icebp
lea
aad
and
fsubrs
in
daa
test
cmc
cwtl
lahf
outsb
ljmp
cmp
cmc
jnp
stos
loope
je
xor
out
mov
add
xchg
pop
mov
adc
scas
lock
in
xor
cmp
leave
adc
or
or
or
les
fs
repnz
mov
xchg
rolb
adc
xor
mov
aad
aam
push
mov
lret
or
mov
mov
xchg
aaa
or
bound
push
xchg
jecxz
jmp
xchg
xchg
loope
jno
ret
mov
movsb
ja
pop
xchg
cmp
ss
ret
jmp
lods
mov
mov
push
es
or
or
push
or
in
push
popf
pop
inc
and
popf
sub
or
hlt
or
inc
repnz
lea
out
xor
lret
sub
imul
movsl
lret
ds
sbb
outsb
aas
stos
cmp
pusha
pushf
or
ds
addr16
inc
ljmp
out
lods
nop
fs
mov
cmp
test
sbb
lret
int3
sub
xchg
rcrb
pop
cmp
stos
repnz
inc
and
test
and
fsubrs
pop
rcrb
into
xchg
or
mov
jp
jno
mov
call
cmp
stc
inc
dec
xor
dec
lahf
out
in
aaa
mov
ret
movsl
daa
fimull
loop
or
jno
sbb
mov
rcr
push
xchg
or
cmc
cmp
adc
lea
das
push
in
or
enter
je
pushf
jns
xor
jp
mov
cld
popl
jg
rcl
les
sahf
lret
mov
xlat
js
jne
shl
mov
in
mov
test
xchg
mov
vcmpngtss
xchg
je
shll
add
movsb
cld
lods
in
xor
dec
cli
push
or
adc
nop
or
jl
inc
in
call
xchg
xchg
movsl
arpl
dec
fst
bound
fcomp
cmp
fs
or
pop
pop
test
pusha
orb
push
or
and
adc
repz
adc
jge
outsl
and
das
outsl
dec
fsts
xorb
mov
in
ret
into
lods
jne
push
aaa
sbb
paddsw
out
mov
test
repnz
fsubs
and
push
and
mov
or
imul
pop
adc
test
jecxz
mov
fdivl
cmp
mov
pop
repz
cs
dec
mov
pop
sbb
or
insb
popa
add
xchg
gs
dec
mov
jmp
loopne
out
repz
dec
jp
addr16
iret
jnp
test
test
jmp
mov
cltd
push
iret
sub
inc
lcall
mov
arpl
sti
jecxz
mov
jmp
add
push
sub
cmp
sti
lods
cmp
mov
mov
dec
or
mov
cmp
sbb
adc
cmc
mov
lret
and
scas
pop
jl
sub
imul
inc
xor
push
pop
lahf
scas
fnsave
sub
je
dec
das
out
pop
pop
test
mov
pop
or
icebp
aaa
pop
dec
dec
lret
pop
push
in
aam
dec
mov
test
push
xchg
dec
xlat
sahf
ljmp
xor
adc
in
insb
cwtl
cs
out
xor
lret
insb
addr16
stc
adc
cltd
jne
dec
aaa
and
mov
dec
sbb
or
mov
ja
add
les
sbb
outsb
mov
xor
xchg
stos
call
dec
movsb
mov
inc
scas
push
cmp
daa
jo
in
cmpsl
sbb
out
and
loop
push
repnz
lea
pop
test
jns
cmp
pop
addb
mov
jmp
sti
mov
movsb
mov
loopne
xchg
sub
mov
movsl
lods
aam
rclb
rcrb
test
sbb
nopl
adc
jecxz
push
or
inc
pop
inc
insb
sbb
orb
outsl
cld
adc
and
cmp
fdivrl
out
xchg
xchg
in
setb
push
pop
cmp
movsl
mov
ret
pop
cwtl
test
lret
pop
fmuls
dec
mov
dec
rcl
add
push
data16
divb
inc
pop
sbbl
mov
sti
rolb
pop
and
iret
sub
insb
rcll
push
ljmp
pop
xchg
int
inc
lret
bt
xor
cmp
inc
mov
mov
push
dec
dec
call
push
dec
aad
in
push
iret
arpl
shrb
lea
jae
insl
call
pop
daa
popf
stos
int3
mov
cmp
mov
cwtl
sahf
test
out
fcmove
sbb
lea
lock
sbbb
out
pop
hlt
jne
std
cmpsb
push
dec
jle
js
pop
insl
and
push
lahf
mov
fs
push
shll
mov
test
fs
jle
not
lock
arpl
adc
dec
adcb
jo
test
js
daa
jne
mov
mov
jo
mov
and
pop
std
ftst
add
xchg
inc
sub
and
mov
aas
icebp
addr16
sahf
movsl
pcmpgtw
fldcw
push
pop
cmpsb
das
cmp
mov
dec
sbb
xchg
dec
int3
imul
xor
out
jmp
int3
mov
xor
xchg
fwait
jg
cli
and
insb
fimuls
adc
or
call
lcall
mov
icebp
lret
mov
into
inc
adc
movsl
cmp
ljmp
or
and
outsb
adc
cltd
aaa
and
dec
adc
cltd
mov
mov
pop
sub
mov
inc
push
scas
lea
out
sbb
pop
and
out
lock
cmp
mov
icebp
jl
aam
pop
dec
dec
jle
adc
and
and
jle
mov
leave
daa
mov
add
int
adc
push
xor
cmc
cs
mov
cwtl
mov
adc
pop
jbe
cmp
fnstenv
xor
xor
lds
enter
or
sub
mov
into
push
and
adc
bound
sub
and
mov
xor
and
pushf
push
inc
hlt
xor
jnp
stc
in
cmpsl
inc
insl
fs
pushf
in
lret
xchg
stos
xchg
or
jp
dec
mov
and
in
xchg
popf
push
addr16
scas
sahf
push
mov
out
les
push
idivl
adc
stos
in
inc
mov
jbe
jo
add
and
or
jle,pt
mov
ss
sub
jecxz
add
call
xchg
mov
in
pop
ret
sub
adc
ret
xlat
lea
addr16
aaa
and
lcall
lds
dec
sbb
int3
lret
outsb
shlb
insl
into
mov
sbb
repnz
nop
dec
jo
pop
je
fimuls
popa
dec
in
popa
push
mov
mov
loop
and
mov
and
fbld
mov
and
int3
sbb
cmp
inc
push
out
sbb
out
je
test
rcll
push
es
xor
jmp
cmc
cs
mov
mov
data16
negb
test
jg
xor
mov
adc
por
push
cmpsl
mov
lret
popa
out
shl
xchg
inc
aad
xchg
scas
loope
pop
sar
adc
cmc
cmp
push
lret
fldenv
mov
lcall
push
add
xor
or
xor
add
cmp
pop
and
pushf
repz
daa
pushf
pop
in
adc
add
loopne
in
out
out
cltd
jno
xor
jle
shlb
fistpll
pop
add
nop
mov
or
push
mov
and
out
subb
je
cmc
jae
es
in
fldt
ret
jae
data16
in
mov
cmp
dec
mov
ja
jo
aad
lahf
or
push
test
in
xchg
or
dec
divb
sahf
sbb
sbb
lret
icebp
cmp
loop
stos
movsl
xor
nop
push
push
cmp
rolb
test
sti
cmp
pop
cs
xor
cmpl
scas
out
js
push
daa
xlat
mov
icebp
fiaddl
outsb
gs
mov
xchg
insb
pop
repnz
into
mov
lods
sub
inc
xor
jmp
in
stc
outsl
hlt
pop
pop
or
cltd
test
or
pop
push
cmc
and
inc
popf
jle
cmp
ds
jl
pop
add
xor
jge
adc
push
and
mov
or
push
jge
cmp
data16
repz
mov
shlb
rcr
dec
cmp
jle
and
mov
cmc
int3
push
mov
test
mov
fistps
mov
test
xor
out
and
xlat
repz
sub
push
adc
test
cmp
jmp
lds
adc
jle
cld
ror
add
and
cld
push
jmp
js
pop
cmpsb
lods
int3
rorl
mov
mov
movsb
pop
xor
out
cmpsl
adc
mov
sbb
ror
fs
repnz
adc
pop
adc
mov
jbe
stos
icebp
gs
hlt
add
cmp
adc
pop
inc
push
cmp
cwtl
xor
cmp
push
aas
mov
sti
cwtl
adc
pop
gs
popw
xchg
test
mov
fcomp
mov
in
orps
stos
idivl
js
sub
xchg
jno
cmp
movsb
cmpsb
stos
sub
jo
mov
push
adc
mov
aas
outsb
ret
push
data16
mov
insb
jnp
add
or
adc
adc
cwtl
ret
insl
pop
popf
shll
mov
aaa
out
jbe
mov
sarl
adc
inc
add
cmp
insb
outsl
mov
or
push
js
out
data16
inc
cld
adc
stos
cmp
sub
mov
hlt
cld
inc
int3
bound
idivl
lods
sbb
arpl
les
in
cmp
inc
pop
mov
dec
mov
aas
pop
adc
inc
and
pop
pop
movsl
popf
xor
pop
daa
sti
sbb
inc
adc
lahf
aas
sahf
mov
mov
mov
and
in
mov
or
cwtl
mov
lods
sti
imul
push
in
jnp
pop
and
and
or
lret
mov
push
add
sbb
enter
mov
mov
or
jae
sti
mov
inc
in
in
inc
dec
and
pop
jg
and
dec
sub
out
or
cs
int3
in
jmp
or
xchg
adc
push
lahf
icebp
mov
or
lret
push
xchg
ja
dec
bound
jo
push
jne
scas
imul
pop
stos
rcr
jb
xchg
mov
mov
sbb
dec
rclb
adc
insb
mov
adc
or
adcl
mov
adc
mov
lahf
sbbl
lods
push
call
test
sub
arpl
push
jnp
push
ret
inc
in
mov
mov
mov
sahf
mov
lds
shll
insb
out
das
test
xor
aad
inc
cmpsb
popf
mov
test
dec
shr
cmp
cld
leave
sub
xor
push
nop
dec
and
test
adc
xor
sbb
jle
jns
imulb
lret
test
mov
gs
mov
or
cmpsb
push
xlat
lock
adc
xor
pop
call
sar
ss
and
cmc
sbb
xchg
cmp
pushf
and
hlt
xor
js
mov
push
lods
push
lds
repz
push
sarl
jmp
scas
cmp
push
xchg
pusha
cmpsl
jle
nop
lock
js
test
push
add
pop
cwtl
jo
mov
ljmp
sbb
mov
dec
dec
dec
adc
xchg
mov
repnz
mov
icebp
pop
movsl
imul
jg
xchg
push
push
cmp
stos
loopne
popa
rorb
inc
loop
ljmp
aas
iret
sahf
fisubrl
shl
push
inc
mov
cld
pop
loopne
mov
inc
daa
lds
mov
mov
mov
adc
pushf
jecxz
ja
jmp
adc
push
dec
stos
add
pop
aas
imul
mov
adc
sti
shlb
jbe
lods
mov
mov
lret
mov
xor
movsb
cwtl
mov
dec
loope
add
rcll
cmp
mov
iret
push
ja
rcpps
dec
cs
ds
fcoml
shlb
fldcw
movsb
lock
cmpl
or
xor
scas
xor
addb
add
inc
imul
arpl
sahf
gs
repnz
push
lods
mov
inc
pop
bound
xchg
mov
call
adc
xor
ljmp
push
inc
adc
ror
faddl
aad
sub
lea
and
push
and
sub
popf
ret
bswap
xchg
loopne
push
adc
out
andb
push
fwait
push
rclb
testl
int
mov
dec
add
aaa
in
setg
fs
cmpsl
mov
out
cmp
lret
mov
mov
jg
sbb
lret
sub
add
jo
pop
hlt
insb
mov
iret
lret
ss
pop
loopne
xor
sbb
pop
aas
mov
addr16
call
test
aam
les
mov
pop
sar
js
stos
sub
fldenv
pop
aam
mov
jo
cmp
xchg
ret
push
pop
dec
subl
sarl
adc
cmp
jnp
js
xor
rcl
and
add
xchg
pop
xchg
mov
mov
fistps
sbb
mov
movsb
mov
push
pop
mov
mov
mov
xchg
or
jne
mov
ss
das
int
out
pusha
popa
mov
mov
into
icebp
cmp
xlat
adc
popa
pop
icebp
sub
adc
sysret
inc
mov
add
push
lods
dec
icebp
dec
in
push
lcall
cld
ret
adc
sbb
fstl
mov
xlat
inc
popf
lds
or
scas
sbbb
inc
mov
cmp
filds
cmpl
and
popf
mov
xchg
pop
in
jo
fs
mov
mov
lret
add
xlat
add
dec
leave
rcrl
ja
mov
aas
sbb
mov
in
inc
xchg
cwtl
ret
aam
out
pop
out
dec
in
dec
repz
rcl
cltd
inc
std
push
jae
inc
push
add
or
repnz
inc
fwait
ds
inc
sub
push
icebp
imul
adc
faddl
push
rorb
add
adcl
push
popf
jmp
xchg
in
jmp
ret
ret
add
mov
jnp
int3
aas
xor
pop
test
sbb
insl
mov
push
xchg
cld
mov
jbe
popa
mov
cmp
xchg
add
mov
cmc
daa
xchg
and
dec
adc
lock
xchg
sbb
jmp
out
outsl
scas
jp
push
cmpsb
enter
lret
lahf
mov
in
xchg
add
jae
arpl
or
xlat
and
cmp
push
xchg
lods
mov
cltd
cmp
mov
lds
sub
pop
jg
push
cmc
insb
xorb
out
daa
cli
sbb
fisttpl
cmpsl
stos
loop
movsb
insl
in
push
xchg
mov
xchg
dec
pop
inc
mov
pop
movsb
rorl
push
mov
push
pop
scas
mov
push
jo
mov
cmp
push
jno
pop
jae
adc
jle
test
aam
lahf
and
test
cli
dec
push
fidivl
inc
ja
lds
and
call
xor
inc
inc
stc
inc
or
ret
int3
push
inc
ja
cld
sub
xchg
add
rorl
ss
scas
adc
adc
cmpsl
cld
push
divl
lret
lret
adc
xchg
or
lods
sbb
rclb
iret
adc
cli
stos
mov
decb
enter
jb
repnz
push
or
xor
adcl
push
stc
ret
pop
scas
fiadds
jo
dec
mov
push
pop
mov
out
mov
sbb
cmp
bound
mov
cmp
mov
lea
jne
ret
fisubl
push
out
mov
add
js
or
dec
cmpsb
mov
jae
cli
xor
mov
sbb
dec
dec
xor
repnz
push
mov
sbb
clc
rcrl
aam
mov
cmp
dec
push
test
sbb
arpl
jmp
fwait
push
mov
jnp
cmc
sub
js
dec
xchg
jle
lret
mov
dec
xor
sti
data16
stos
pop
rclb
cltd
sbb
adc
test
in
ljmp
push
adc
ss
jg
cmp
push
arpl
adc
negl
enter
mov
cmpsl
arpl
loopne
pop
cld
or
testb
jae
incl
dec
pop
fstpt
dec
arpl
or
mov
mov
xchg
inc
loop
jno
in
std
lret
ret
push
mov
jb
fs
xchg
incl
std
adc
pusha
outsl
jnp
adc
push
mov
mov
cmp
xor
std
jge
dec
ficoml
jle
shll
loope
xchg
sbb
adc
push
js
or
jl
xchg
mov
pop
adcb
pop
fiaddl
dec
test
stos
dec
pop
push
das
mov
or
jl
mov
rolb
jl
lret
decl
mov
inc
orb
adc
out
mov
mov
sub
hlt
jmp
popf
fstps
push
push
mov
fs
xchg
inc
out
orl
call
xor
icebp
aam
or
ja
sub
imulb
inc
mov
dec
bound
dec
jnp
jle
lret
mov
mov
xchg
mov
in
mov
and
out
ret
cmpsb
lret
push
sahf
mov
mov
outsb
sbb
jo
sarl
jecxz
xchg
rcrl
lcall
jle
push
mov
cs
cmp
test
mov
lock
jmp
jb
popa
xor
jnp
repz
stos
or
jp
je
sub
fidivs
loop
or
mov
gs
or
test
mov
inc
add
mov
test
movsb
pop
das
lret
push
movsb
imul
mov
pop
push
jp
das
jne
orl
mov
xor
add
jmp
mov
out
mov
aam
loope
hlt
lods
ret
rolb
nop
imul
aaa
xlat
imul
inc
je
push
fsubp
test
or
pop
test
jmp
mov
lcall
cmp
shlb
mov
mov
and
mov
cmp
or
leave
push
mov
adc
fwait
jmp
xchg
hlt
jg
je
fcmovb
mov
dec
or
and
or
movsb
adc
add
sub
addr16
xor
insl
dec
push
loope
dec
pop
mov
jbe
push
and
in
in
lret
mov
inc
je
inc
insb
je
add
pop
mov
xor
push
add
jb
xchg
mov
jb
push
js
stos
sti
fsubr
jg
jb
std
lret
fwait
mov
enter
insl
in
push
lcall
inc
cmp
stos
stos
test
mov
xor
scas
push
jge
into
mov
in
shll
dec
aam
stc
enter
jae
in
xor
call
jb
pop
jmp
xorl
pop
aaa
sub
movl
ja
pop
mov
pop
pop
faddp
icebp
inc
sub
jnp
push
sbb
dec
outsl
cld
xchg
out
fistpl
in
lahf
push
iret
mov
and
test
mov
bound
xor
pushf
xchg
or
push
sbb
rcrb
bswap
pmuludq
mov
aad
jns
loope
rcll
setne
pop
jns
mov
push
pushf
mov
sarl
mov
pop
cmpsb
cltd
fwait
jne
dec
out
movsl
jbe
add
mov
cwtl
jo
and
xchg
mov
mov
sahf
aaa
jo
test
mov
cmp
inc
jecxz
jnp
xor
icebp
pop
arpl
dec
repnz
ja
mov
cli
pop
iret
jne
shlb
dec
mov
mov
sub
stos
sub
and
dec
loopne
adcb
adc
dec
jnp
xchg
rorb
xchg
test
fcomps
out
mov
mov
lcall
push
jmp
sub
sti
into
iret
enter
ljmp
call
int
test
push
lcall
int3
aaa
and
xor
push
and
in
cmp
and
mov
push
pop
pop
add
popa
or
or
xchg
push
std
lock
jle
push
mov
orl
ds
push
in
cmp
iret
inc
orb
or
clc
nop
sub
sub
xor
ror
pmullw
fadd
rcrl
prefetch
fdivr
inc
lds
test
mov
push
repz
dec
pop
aam
jne
jle
ds
xchg
pop
mov
loopne
adc
sub
mov
jmp
outsl
insb
ljmp
jb
jle
ret
out
xchg
das
or
ljmp
and
mov
call
rcll
jg
push
insb
sbbb
int
int
cmpsb
mov
jbe
push
mov
scas
scas
inc
mov
lock
cs
cltd
xchg
sbb
lret
mov
or
cmp
mul
mov
push
jno
jl
xchg
sbb
lods
shrl
mov
inc
mov
push
cmpsb
xor
stos
adc
bound
dec
jnp
jmp
cld
mov
call
cmp
iret
sub
mov
push
shr
stos
adc
fldenv
movsb
fildl
sti
sbb
jne
xor
andb
xchg
rcrl
gs
fs
in
jp
push
lcall
imull
add
rcrl
xor
mov
xor
loopne
or
and
mov
dec
jb
out
mov
and
xor
subl
sbb
loopne
out
jmp
fwait
add
int
test
mov
mov
sbb
or
pop
ret
xchg
movhps
imul
movb
out
xor
dec
xchg
jno
adc
rcll
jns
and
mov
scas
js
int
dec
push
mov
lahf
jecxz
push
orl
inc
or
aad
daa
fs
inc
iret
xor
out
add
jns
pop
cwtl
fmul
pop
ret
xor
data16
add
pop
mov
xchg
lock
lock
test
push
testl
or
ja
dec
adc
out
push
ljmp
ja
jae
push
insb
push
sbb
mov
sbb
in
xchg
sub
stos
mov
flds
test
aas
sub
mov
xor
sub
ds
inc
lods
das
sti
jmp
pop
cmpsl
mov
jmp
scas
mov
ret
fdivrl
jne
mov
mov
shlb
mov
jne
xchg
adc
in
xchg
andb
push
or
xchg
inc
mov
cs
mov
jle
dec
mov
fldenv
insl
fs
push
pop
sub
pop
sub
fucomp
popf
scas
negb
addr16
xchg
lret
fdivrs
push
xor
rcrl
xchg
lret
mov
jge
jo
outsl
fstl
and
dec
stos
cmp
pop
cmpl
or
mov
and
xor
and
mov
clc
jmp
push
testl
imull
lret
rcrb
xor
flds
jmp
sahf
jg
lods
ret
or
or
add
hlt
shll
jne
cmp
pop
push
push
jl
mov
jmp
mov
inc
sub
test
sbb
sbb
cmp
idivl
mov
loop
fwait
mov
pop
out
mov
std
or
fldt
inc
or
and
lods
xorb
cmpsl
jnp
add
popf
jne
xlat
dec
call
mov
cmp
jne
cwtl
ret
dec
enter
mov
and
sub
jge
or
add
pop
mov
shlb
and
out
adc
into
inc
fbld
test
push
in
mov
dec
int
jle
xchg
adc
pop
pop
daa
dec
jp
dec
and
sub
sbb
or
shl
outsl
fs
mov
mov
gs
rcrl
and
subl
negl
push
jg
mov
fnsave
jne
scas
add
inc
repnz
cmp
inc
cmc
jb
movsb
adc
xor
cmp
mov
sbb
cmp
lret
popa
cmp
mov
cli
xor
xor
or
inc
push
push
orb
mov
iret
sbb
mov
repnz
sbb
test
lret
sub
lret
adc
popa
jge
mov
sub
pop
jg
sub
cwtl
sbb
pushf
mov
push
lret
and
adc
xchg
out
std
idivb
clc
mov
fisttpl
xor
pop
mov
shrl
in
cwtl
jle
mov
xchg
jmp
iret
jle
das
aas
pop
mov
out
jns
xor
lds
xchg
cmp
stc
cmpsb
mov
incb
mov
mov
dec
clc
sub
fcmovne
push
jb
xchg
test
inc
mov
test
pop
insl
cmc
jp
sub
inc
push
mov
push
mov
aam
stos
jo
sbb
jo
xchg
add
push
aaa
unpcklps
cwtl
fisubl
and
call
jecxz
inc
cmc
xchg
jae
mov
lock
roll
std
nop
cld
stos
inc
in
pusha
bound
cmc
cmp
dec
and
adcl
mov
push
cltd
sbbl
jle
and
cmc
sub
cmp
xchg
xor
idivl
fdivrl
sbb
cli
loop
mov
xlat
jp
ss
in
or
push
mov
dec
and
push
dec
call
cmpsb
icebp
pop
mov
pop
push
shrb
push
dec
adc
sahf
lea
sub
movsb
pop
fwait
xor
jnp
imul
pop
push
push
xor
jne
pop
in
jae
ret
bnd
hlt
cs
sbb
push
push
sub
movsl
cli
fbstp
add
lods
mov
sbb
add
test
dec
lahf
fists
cmpl
mov
sbb
jno
mov
xor
lods
inc
fisttpll
mov
push
push
sbb
repz
inc
test
lea
negl
ret
adc
outsb
stos
pop
lock
inc
sub
mov
lea
in
cmp
call
mov
adc
ss
inc
jmp
cli
sub
repnz
adc
lcall
out
out
pop
add
jae
push
imul
subb
push
fstps
sbb
cmp
testl
ficomps
push
push
push
adc
sbb
mov
clc
lahf
push
and
add
clc
pop
jbe
and
aam
cmc
sbbb
std
push
inc
in
mov
js
mov
mov
add
js
or
mov
imul
mov
lcall
and
mov
push
and
pop
mov
es
out
andl
pop
mov
jno
mov
cltd
mov
cwtl
fcompl
shlb
push
push
cltd
cli
pop
inc
ss
jg
mov
bound
push
dec
sub
repnz
push
lcall
adc
shlb
mov
lahf
jae
frstor
arpl
clc
xchg
add
lods
cmp
sbb
or
jnp
rorl
jb
jbe
pop
inc
in
cltd
jae
sbb
jp
insb
mov
jb
dec
movl
in
cmpsb
jg
je
inc
push
bound
and
mov
testb
mov
test
mov
inc
outsb
jo
jo
sub
jae
xor
mov
fimuls
enter
mov
inc
call
sbb
ds
pushf
adc
mov
pushf
iret
insl
dec
cmp
imul
ljmp
xchg
sub
and
loopne
call
fwait
call
adc
cmp
scas
mov
sbb
or
add
shll
loope
fistpl
lea
sbb
aaa
aad
add
in
mov
push
push
ret
dec
shl
cli
jo
mov
inc
and
aam
push
push
mov
imul
pop
sbb
push
xchg
adc
mov
in
nop
ud2
cli
mov
cmpl
out
adc
and
push
push
insl
or
mov
xchg
repz
out
sub
movsl
push
enter
dec
rcl
test
lret
rcl
into
dec
sti
es
addb
pop
jae
dec
addb
mov
and
iret
push
lods
data16
icebp
dec
mov
fninit
dec
dec
xchg
fistps
fbstp
lock
fstpt
iret
mov
xchg
fs
dec
mov
mov
mov
pop
add
pushf
sbb
adc
xor
pop
xchg
test
icebp
pusha
cmp
in
jb
aam
into
aad
jmp
xchg
dec
xchg
mov
ds
in
push
rcl
jecxz
loop
je
xorl
notl
test
cmp
dec
push
sahf
out
pop
fucomi
cltd
cmp
lods
shrl
xor
jl
out
jno
xor
ss
imulb
outsl
lods
jmp
inc
lret
movsb
cmpb
outsl
jb
push
and
fdivrs
mov
sub
insl
daa
ja
fsubrp
imul
pop
mov
fcoml
sbb
mov
sub
and
jb
xchg
mov
fmul
pop
xchg
imul
and
sbb
jno
in
push
jbe
lret
subb
or
xchg
dec
sbb
jmp
and
mov
adc
dec
popf
jecxz
adcb
add
jecxz
or
sbb
inc
mov
ss
out
gs
fcom
addl
stos
lods
adc
sbb
push
xchg
fimull
cmc
shr
cwtl
in
js,pn
lds
jnp
shr
mov
cmp
and
push
repnz
push
sbb
rorb
mov
jp
pop
into
cmp
pop
mov
and
inc
cmp
or
sti
and
or
outsl
jmp
mov
ret
push
inc
pop
les
pop
loopne
test
mov
mov
call
jl
sbb
jns
or
loop
push
in
add
push
jae
mov
sarl
ret
nop
dec
pop
cmp
arpl
cmp
mov
add
pop
daa
mov
cltd
movsl
icebp
mov
popf
jl
daa
push
jle
in
jae
add
xchg
sbb
add
sub
int3
jno
mov
leave
pusha
inc
and
xchg
or
add
outsb
div
add
subl
cmpsl
test
cmc
mov
lret
cmp
xor
add
cmpsl
insl
fsubl
push
fwait
lds
lret
and
jo
sbb
ds
mov
push
sahf
cmp
outsl
mov
xor
movsb
mov
adc
push
mov
xchg
stos
int3
mov
addb
ficomps
mov
pusha
insl
stos
in
sub
shlb
pop
cmp
push
mov
addb
and
cmpsl
mov
or
xlat
dec
sbb
push
andb
mov
jae
and
jo
mov
jnp
nop
xchg
mov
pop
sub
sub
enter
clc
pop
test
imul
sahf
add
js
push
ja
mov
adcl
or
inc
pop
mov
fdivr
lahf
mov
jle
mov
xlat
fnsave
mov
jnp
ds
cmp
aas
shrb
ret
sub
insb
daa
orl
jecxz
and
adc
or
jecxz
jnp
cmc
xor
and
dec
xor
dec
cli
out
adc
mov
cltd
jne
in
lock
cmp
mov
fcomps
mov
jnp
bswap
ret
add
cmp
sbb
mov
push
push
lods
xorl
lret
push
mov
add
xchg
jne
es
or
dec
test
mov
add
leave
out
sub
stc
jp
inc
mov
xlat
arpl
sub
push
xor
xchg
adc
cmc
and
fiaddl
fs
inc
in
jecxz
imul
addb
sbb
lret
push
cmp
cmp
jg
incl
ja
stos
fnstenv
and
sub
negl
jns
xchg
mov
loopne
imul
push
rol
pop
shrl
loop
sub
adc
cmp
outsl
sahf
cs
and
addb
inc
xchg
mov
dec
cmp
dec
je
in
xchg
mov
fsubp
in
daa
fiaddl
inc
pushf
ret
sbb
popa
test
xchg
mov
lahf
sbb
pop
xchg
stos
sub
cmp
or
es
je
add
sbb
add
aam
repnz
scas
fwait
jl
lret
push
fnop
push
or
xchg
arpl
lds
imul
lds
pop
sti
clc
push
test
hlt
insl
and
add
xchg
push
fistpl
add
pop
out
les
out
imul
cwtl
mov
rorb
sbb
jl
ret
xchg
xchg
dec
push
into
rorb
push
test
fnstenv
repnz
enter
lahf
mov
ss
and
in
add
or
mov
mov
sahf
add
into
mov
hlt
and
loope
aas
add
out
push
lret
rcrb
loopne
inc
dec
xchg
pop
inc
rol
in
adc
cwtl
rcl
adcl
cmp
outsb
dec
imull
xchg
call
shrl
in
dec
pop
out
push
adc
mov
jno
pop
les
push
pop
sbb
shrl
push
or
sub
or
out
loope
xor
ja
inc
nop
scas
lahf
mov
cld
sub
adc
pop
mov
jle
push
leave
pop
xlat
xor
cli
rcrw
xchg
inc
sub
outsb
out
jmp
fcoml
fdivrs
hlt
lcall
test
jp
ret
push
xor
dec
or
xchg
rorl
dec
lahf
push
call
xchg
mov
and
push
lock
lahf
xchg
outsb
push
ds
mov
es
mov
push
fs
add
lahf
aaa
push
mov
jns
mov
inc
inc
or
push
scas
cli
cmp
mov
cmpsl
dec
mov
bound
loop
mov
hlt
xchg
mov
std
sar
jl
cmp
out
push
rcrl
xor
or
mov
fsubrl
aas
je
sarb
sbb
or
pushf
enter
popf
cld
or
popf
ss
out
sub
mov
jno
out
scas
das
dec
push
pop
stc
pop
mov
mov
or
mov
pop
pop
imul
sbb
in
jbe
pop
xchg
or
add
pop
aam
cli
outsb
fildl
pop
outsb
mov
imul
out
mov
hlt
add
jbe
arpl
jb
or
dec
subl
adc
pop
mov
outsl
loop
lods
cmc
mov
or
xchg
jnp
cmpsl
icebp
fildl
jnp
cmp
ljmp
pop
xchg
call
les
iret
jge
js
int3
repnz
hlt
std
out
jg
jb
or
hlt
ss
xchg
or
ljmp
lods
aas
stos
call
es
test
fdiv
push
mov
or
inc
mov
out
push
or
fisttpll
cmp
aam
lret
sub
and
movntq
out
cmp
popf
or
sbb
int3
out
icebp
stos
jmp
sbb
mov
cmc
mov
mov
xchg
into
lea
pop
push
jecxz
inc
pop
mov
fmuls
sbb
jmp
dec
dec
in
inc
jle
sub
not
lods
hlt
icebp
mov
mov
icebp
mov
jg
jmp
daa
jecxz
mov
sbb
sub
jge
jbe
or
ss
lock
test
pop
lock
sub
sbb
js
and
loop
loop
inc
add
leave
fdivrs
inc
std
ret
popw
cmc
mov
nop
and
push
movl
neg
sbb
adc
dec
cmpsl
aas
rep
out
rcr
xlat
shll
popa
pop
test
jl
jae
mov
lods
add
sub
pop
push
sti
mov
and
xor
xor
inc
xchg
inc
gs
jmp
sub
xchg
popa
sbb
daa
and
or
sbb
push
adc
mov
jo
pushf
and
jae
test
pusha
pusha
fdivs
rorl
test
sbb
mov
cs
mov
jecxz
adc
sahf
loopne
loopne
push
daa
aad
fistpll
lcall
mov
subb
cli
adc
pop
adc
cmp
dec
push
push
mov
mov
sbb
fs
decl
les
out
sarl
jmp
movsl
loopne
xchg
mov
dec
repz
and
lcall
push
adc
js
mov
aam
jmp
jl
test
pop
fistpl
push
pushf
lret
and
dec
push
xlat
push
add
xor
jecxz
push
jnp
sub
cmpsb
enter
dec
mov
xchg
lret
icebp
sub
mov
jmp
push
insl
inc
jo
push
inc
repz
clc
push
xchg
jmp
push
mov
sbb
aas
sbb
js
shll
add
insb
fdivrs
repz
adc
loope
out
mov
and
and
out
addr16
push
js
push
add
jge
sti
xchg
not
push
adc
or
sbb
jb
int
cmp
mov
xchg
imul
xor
int
sub
insb
ss
arpl
dec
js
cmp
cwtl
popa
sarb
adc
pop
mov
aaa
fwait
adc
add
lods
in
dec
das
call
sarb
xlat
movsb
sub
jl
push
test
sub
lods
stos
data16
cli
xchg
xor
les
insb
test
nop
mov
les
iret
pushf
int3
mov
inc
cmp
daa
in
stos
cltd
mov
fisubs
sub
fs
call
inc
pop
stos
gs
cld
mov
jno
xor
clc
lahf
mov
subb
mov
dec
push
mov
in
sub
movsl
inc
lock
push
xchg
stos
cmp
ss
shll
push
stos
mov
mov
loop
hlt
jp
imul
ret
add
sub
xor
stos
add
pop
sbb
mov
push
dec
cmp
mov
sub
inc
inc
outsb
scas
fs
into
dec
jbe
repz
pop
add
and
addr16
lcall
lcall
cmp
cld
adc
scas
jle
stos
mov
xor
adc
in
nop
pandn
fs
popf
push
test
cmp
out
mov
sbb
loop
fldt
sbb
jbe
xchg
cmp
nop
ss
mov
jne
pop
push
lock
out
add
xor
dec
xor
mov
int
nop
clc
fistps
scas
xor
out
insb
test
xchg
cmc
add
fmull
xor
scas
stos
jmp
mov
sub
aaa
jmp
cmp
push
into
outsb
movl
and
mov
xor
sbbb
cmc
pop
loope
dec
mov
and
pushf
ljmp
adc
lods
sahf
jle
add
xor
add
mov
xchg
insl
sub
and
pushf
lock
xchg
adc
inc
jae
pop
gs
cmpsl
xor
mov
loope
pushf
dec
add
ss
xchg
in
mov
jb
fucomip
mov
insl
pop
push
test
mov
subl
insl
lock
cmpsb
loop
ret
or
mov
push
outsb
in
jno
scas
mov
push
push
call
leave
xchg
and
pop
and
inc
or
xor
les
in
sub
lahf
push
dec
dec
or
test
lods
pop
test
fnstcw
push
ss
sbb
loope
mov
xor
xchg
adc
mov
ljmp
mov
cmp
cmp
xor
movsl
pop
push
xchg
jne
and
loop
add
sub
popf
dec
xor
xchg
xor
push
cmpsl
aad
ret
inc
cmpsb
jp
lds
das
popf
dec
test
or
loope
xor
and
movsb
scas
jbe
jge
and
and
mov
repnz
jne
sub
leave
aad
add
dec
sbb
jg
mov
cmp
push
cmp
movb
lods
cmp
dec
call
push
mov
mov
add
insb
sub
fisubl
adc
jg
call
inc
push
mov
xor
out
notl
subl
jno
xchg
pushf
inc
mov
adc
icebp
mov
inc
adc
repz
jp
bound
fwait
decb
aam
aad
or
movsb
xor
pop
pop
movsl
das
pop
jbe
jecxz
xchg
fiaddl
jecxz
sub
jns
call
adc
movsb
push
add
inc
xchg
mov
xchg
adc
jp
arpl
xchg
add
xchg
adc
popa
lcall
out
cmp
shl
sbb
std
push
addb
lret
adc
test
sbb
add
adc
fstpt
ss
int
mov
lods
roll
and
xchg
inc
les
pop
shrl
push
in
and
scas
popf
insl
jle
push
jo
sbb
adc
mov
jmp
or
popf
lods
adc
xchg
or
nop
arpl
sbb
add
push
movsl
bound
loopne
cmpl
dec
xchg
lods
cmp
add
mov
sbb
pusha
mov
fmull
mov
push
out
icebp
test
dec
lods
cmp
mov
pop
pop
test
stc
add
inc
aad
lea
inc
mov
jnp
je
or
cmp
sub
les
cmp
lds
leave
mov
fs
pop
imulb
ret
push
nop
pusha
sub
cld
push
gs
mov
pop
inc
lods
imul
movsl
dec
pop
xor
cmpsl
std
cmp
jne
stos
and
push
adcl
jns
mov
jmp
lcall
jge
push
cmp
outsl
xchg
insb
inc
fdivl
dec
hlt
inc
insl
loope
jo
pop
stc
or
dec
jle
push
ss
loopne
iret
push
adc
adc
lods
mov
fistl
outsb
andb
pop
idivb
jbe
xchg
in
add
sbb
fdivr
loop
add
push
xor
repz
pushf
mov
push
push
out
pop
test
pushf
push
rcr
cmp
repnz
add
mov
mov
popf
hlt
mov
cmpb
or
out
nop
cwtl
pop
add
pop
push
jmp
mov
ljmp
dec
xchg
jg
lods
push
into
ljmp
shl
or
jae
push
stos
fdivl
push
push
mull
push
xchg
in
test
outsb
push
inc
ret
ror
and
jecxz
and
setg
cmp
popa
sti
mov
rorb
mov
gs
or
bnd
xor
repz
jnp
mov
mov
pop
and
pop
test
std
std
cwtl
mov
pop
dec
push
ds
dec
loop
pop
lcall
cmp
sub
cmpl
lret
int
fidivl
lock
jp
mov
test
jle
mov
xchg
ds
negb
cmp
outsl
pop
xchg
pop
push
mov
adc
adc
in
or
sbb
sbb
adcb
pop
dec
fdivrl
dec
ret
idivb
adc
pop
sbb
and
pop
std
fcomps
into
lret
loopne
gs
in
pop
pop
sub
or
pop
and
subb
mov
rorl
dec
add
not
cltd
or
test
out
cmpsb
mov
mov
mov
sbb
stos
fwait
cld
xchg
dec
xchg
push
and
pop
xor
pop
insb
in
xchg
ljmp
and
xor
push
dec
xor
bound
fnsave
and
mov
mov
add
mov
pop
mov
clc
sbb
adcl
pop
pop
stos
jnp
cmp
leave
nop
jb
jle
jmp
gs
daa
in
fcomip
mov
cld
in
fnstcw
leave
rclb
jnp
hlt
shll
pop
sub
pop
sbb
dec
in
in
divb
inc
repz
movsl
das
dec
rorb
jo
and
mov
dec
jl
nop
inc
pop
dec
cmp
in
cmp
push
outsb
in
aad
push
mov
js
sub
dec
into
jge
gs
test
inc
mov
xchg
xor
dec
lea
jge
dec
data16
xchg
out
or
push
xor
push
fimull
push
inc
or
movsl
out
mov
fxch
fimull
outsl
insb
pop
inc
mov
test
or
roll
push
mov
hlt
icebp
xchg
lret
imul
inc
cmp
lods
dec
push
icebp
test
out
mov
lcall
mov
das
adc
mov
cmp
pop
xor
clc
shl
jae
push
andl
jmp
xlat
repz
pop
mov
cs
sub
fs
xchg
call
cs
push
mov
lahf
repnz
insl
pop
imul
vshufps
sbb
insl
jb
mov
aaa
dec
test
movsb
test
out
ret
inc
and
test
fbstp
popf
inc
push
mov
dec
mov
inc
mov
push
inc
mov
push
lock
addr16
xchg
xor
shlb
rcrb
xchg
xchg
out
addr16
jne
adcb
loop
dec
add
dec
cmpb
movsb
mov
imul
enter
pop
and
filds
inc
xor
in
add
sbb
and
cmc
mov
les
lcall
shrl
mov
mov
testb
dec
lcall
mov
push
push
dec
sub
divb
adc
flds
loop
and
or
movsb
in
pop
mov
push
adc
pop
jle
ljmp
or
std
xor
cwtl
mov
mov
shrl
fwait
xor
ljmp
jno
lods
scas
fcmovnb
mov
jno
and
xchg
sub
gs
aam
arpl
imul
add
pop
push
aad
fdivs
fs
int
sub
cmpsb
mov
sub
lcall
add
pusha
cmp
push
ret
int
aad
enter
add
fadds
je
scas
jle
cld
imul
xor
pop
lock
cmp
cli
cwtl
fimuls
test
sti
stos
outsl
adc
pop
xchg
sub
and
add
addr16
xchg
xchg
sbb
sti
popa
push
in
or
fcomip
jb
scas
or
xlat
imul
movsb
and
adc
or
sbb
shl
mov
out
lock
idivl
pushl
je
fsubs
add
mov
mov
sbb
sub
test
jge
lcall
add
out
aad
and
inc
clc
movsl
dec
sti
mov
mov
sarl
mov
bound
incl
sbb
or
mov
ja
ret
dec
loopew
lret
loope
movb
arpl
dec
and
push
cmp
mov
push
scas
daa
jg
mov
call
mov
add
ljmp
push
push
shlb
adc
aam
dec
mov
pusha
push
jne
hlt
and
int3
xchg
push
or
jae
jb
xchg
jmp
push
movsl
jl
cmpb
adc
mov
push
push
adc
mov
hlt
ret
mov
lock
add
inc
ja
cwtl
mov
movsb
aad
xchg
cmpsb
sub
sub
pop
pusha
xor
xchg
mov
popa
dec
mov
mov
icebp
pop
mov
pop
mov
hlt
fisttpll
xor
xchg
mov
out
lahf
xor
sub
push
add
mov
and
dec
loop
add
clc
lret
sub
adc
adc
xchg
push
fisubrs
jmp
in
add
pop
hlt
dec
lods
mov
shlb
push
cmpsb
cmpb
aad
jnp
jmp
lods
scas
insl
jle
dec
pop
icebp
cltd
add
adc
jns
fimull
mov
scas
pop
jbe
push
xlat
out
pop
andl
out
adc
je
ljmp
mov
xchg
jl
mov
ljmp
in
negb
mov
pop
xor
jp
add
adc
jne
add
push
mov
sbbl
filds
pop
dec
jl
jnp
xchg
cmp
aas
add
adc
pop
iret
push
mov
int
hlt
cmp
dec
popf
mov
sub
clc
pop
mov
in
pop
mov
jne
jb
pop
pop
out
data16
inc
inc
mov
xchg
pushf
repnz
fisubrl
sbb
testb
imul
mov
fiadds
cmp
outsl
xchg
test
add
out
jmp
and
add
ljmp
mov
fsub
cs
stos
lods
arpl
or
cli
add
aad
lahf
daa
inc
add
test
leave
or
lahf
dec
jecxz
ret
cwtl
jo
loope
dec
add
aas
cmpsb
movsb
mov
cmp
mov
jns
fldenv
jb
aad
mov
push
push
and
mov
xor
xor
jmp
shlb
xor
jp
jmp
repz
inc
ljmp
sub
mov
iret
clc
sub
push
dec
xchg
hlt
xchg
fmul
imul
lret
dec
dec
sbb
xor
sub
push
mov
movsl
cltd
push
cmp
test
sbb
lods
in
mov
jp
xor
leave
test
leave
push
scas
mov
or
or
mov
sub
jg
xor
hlt
gs
mov
pop
fistps
pop
popa
jne
daa
push
pusha
cmp
out
xor
outsl
mov
push
dec
mov
pop
pusha
jnp
rorb
ror
jle
inc
stc
adc
test
dec
mov
std
cmp
mov
pop
dec
adc
enter
std
in
mov
inc
mov
push
mov
mov
hlt
or
xor
dec
mov
sbb
sahf
push
inc
sub
or
xchg
xchg
fldl
pop
fistpl
cmp
push
aam
sbb
and
push
lds
mov
dec
xchg
add
cmp
rorb
cmc
lock
int
mov
push
popa
outsl
pop
xlat
rcl
cld
ja
lods
pop
push
sub
push
push
rclb
push
push
jge
dec
xchg
mov
or
ror
imul
xor
xor
lods
push
pop
lods
shrl
sbb
jbe
or
mov
cmc
loopne
xor
xchg
fidivrs
mov
lcall
roll
pop
std
fimull
inc
mov
jp
push
push
pop
pushf
outsb
pushf
adc
adc
hlt
ja
push
out
loope
test
push
lahf
xchg
outsb
push
cs
jnp
dec
push
daa
imul
adc
mov
testl
imul
in
pusha
fists
jno
xor
and
clc
ds
repnz
mov
sub
in
cmpsl
mov
test
sbb
adc
nop
mov
xorl
lods
xchg
and
and
pop
lcall
fs
insl
sub
sbb
mov
add
popf
into
nop
sub
rorl
jbe
repnz
cmp
xor
addb
push
das
les
jnp
es
cmpsb
sub
inc
ret
mulb
mov
pushl
mov
dec
cld
cmpsb
adc
std
xchg
mov
and
or
or
add
mov
lea
test
push
hlt
mov
cmpsl
cmpb
push
stos
xchg
push
xchg
pop
mov
mov
aaa
wrmsr
push
scas
pop
mov
push
mov
mov
je
insl
or
bound
mov
testb
rorb
jmp
push
mov
mov
popf
loope
dec
or
pop
inc
mov
inc
jno
add
adc
test
jae
sti
xchg
inc
call
bound
and
adc
test
dec
adc
or
adc
push
dec
notb
daa
nop
daa
and
or
xchg
hlt
jne
mov
scas
xor
rolb
ljmp
fld
into
dec
push
test
cmp
or
jae
xchg
or
addr16
sub
adc
xor
mov
dec
pop
mov
out
lock
sub
sub
dec
cwtl
les
clc
sub
testb
ror
mov
sbb
and
aaa
mov
sbb
sbb
mov
setle
nop
mov
cmp
clc
mov
fsubrs
in
pop
mov
push
jb
adc
cmp
push
daa
and
push
sub
mov
sub
jb
cltd
mov
mov
mov
fcmovu
mov
imul
stc
aaa
cmp
fs
inc
pop
out
jle
xor
xchg
sub
jno
mov
jmp
pop
jl
cmp
loope
icebp
sub
xchg
mov
pop
imul
sbb
adc
jp
pop
adc
push
push
clc
push
ljmp
daa
dec
fmull
loopne
sarl
mov
sub
popa
lds
popf
mov
dec
inc
shr
pop
mov
icebp
xchg
xchg
cmp
shrl
sbbl
das
call
jle
xorb
movsb
jno
xchg
shll
sarl
jns
mov
mov
cmc
out
cltd
mov
arpl
cmp
idivb
xor
imul
sbb
fwait
xor
cld
subb
sbb
mov
sbb
inc
movsl
cmp
bound
mov
or
pop
addb
cmp
adc
lock
and
xchg
outsl
cmc
jp
hlt
das
rcrb
fcomps
cltd
dec
popa
sbb
repz
adc
push
adc
into
and
ljmp
mov
idivl
aas
call
stc
jp
add
sti
mov
ljmp
jae
push
sub
cmc
push
lock
inc
inc
jb
pop
bound
lods
sub
or
data16
cmpsb
shlb
inc
xchg
sub
inc
xor
lahf
cmp
fisttpl
mov
jmp
and
adc
mov
shlb
push
or
dec
jnp
shll
or
mov
jl
fimull
in
mov
dec
pop
adc
and
imul
lcall
or
xchg
lock
sbb
stc
icebp
divl
mov
adc
arpl
dec
repz
mov
rcl
push
icebp
adc
sahf
shrb
movsb
cmp
mov
lahf
sub
scas
xor
mov
inc
xchg
jp
add
cmp
out
xor
not
scas
shl
mov
mov
xor
scas
fwait
mov
dec
xlat
jecxz
sub
sub
sarb
push
push
inc
pushw
lahf
dec
test
jne
add
pop
fiaddl
mov
fnstsw
insb
dec
lahf
pop
push
add
push
faddl
cmp
xor
and
lods
fisttpll
dec
loope
stc
mov
inc
pop
sahf
mov
fistpll
cmc
mov
iret
xchg
sub
cmpb
pop
stc
add
mov
jne
aas
mov
test
inc
fisubl
jle
jnp
cmp
xchg
push
pusha
cli
into
imul
shll
mov
mov
ja
mov
mov
push
inc
lds
and
xchg
stos
xchg
inc
out
pop
and
or
int3
call
inc
ds
mov
pop
push
lods
mov
xchg
jbe
mov
pop
mov
sbb
shl
cltd
mov
fisubrl
not
insl
repz
ret
nop
sub
nop
orl
mov
sbbl
mov
fstl
push
movsl
push
movsb
jmp
mov
lds
mov
pushf
sub
sahf
shll
lock
jge
cmp
push
bound
sbb
mov
lds
fisubrs
add
mov
jns
and
pop
xchg
into
lds
shrl
mov
add
dec
in
inc
sub
add
out
cmpsb
les
lock
push
int
mov
fstps
movl
test
inc
mov
sbb
xchg
mov
lds
loop
fidivl
out
jno
jmp
fidivs
sub
cmpsb
adcl
mov
lock
rol
cmp
and
or
xchg
or
adc
mov
push
call
cltd
loop
fsubrl
cmpsl
adc
rclb
xor
xchg
cmp
clc
jae
jb
add
pop
push
xor
or
fisubrs
fs
fistpll
addr16
mov
and
sub
loope
pop
sub
stos
sbb
sub
seta
mov
adc
jl
out
inc
les
bound
sbb
rorb
xor
std
inc
mov
xchg
bound
or
and
or
sbb
stc
push
loope
mov
adc
pop
lea
pop
sar
ljmp
imul
mov
aad
mov
cmc
hlt
jl
bound
stos
jns
incl
stos
jbe
inc
jo
and
xchg
mov
inc
add
mov
push
popa
inc
stc
xchg
test
dec
inc
testl
dec
pop
mov
mov
aaa
mov
insb
sbb
inc
xchg
mov
push
les
popa
mov
mov
add
lods
xor
inc
leave
lock
xchg
sub
cwtl
push
push
dec
jns
movsl
adc
xor
push
out
mov
mov
cmpl
outsb
xchg
scas
std
std
mov
mov
pop
andl
aas
mov
lods
jmp
loop
mov
int3
mov
imul
xor
push
int
loope
movl
dec
jo
stos
cs
out
add
mov
mov
inc
or
xor
std
jb
dec
sub
out
int
aaa
dec
sbb
mov
outsb
mov
dec
jae
push
or
fisubs
cmp
stc
xor
repnz
call
stos
imul
pushf
adc
xchg
mov
xchg
cmc
mov
mov
adc
repz
pop
fldenv
pop
lret
int3
stos
xchg
dec
push
ret
add
loope
andb
pusha
dec
mov
mov
mov
or
lods
pop
push
add
adc
adc
cmp
int3
bound
xor
cmpsl
xor
stc
adc
lret
sbb
rcrl
and
cli
jle
add
out
push
mov
mov
stos
pushf
mov
cmp
push
inc
xor
mov
push
enter
popa
ja
rcll
aas
xor
insl
lods
mov
push
lret
xchg
hlt
mov
jns
lret
add
sub
push
fdivrl
out
cmc
movsl
jp
sub
aaa
pop
or
mov
xchg
mov
push
outsb
xor
fbstp
ret
xchg
pop
inc
data16
mov
or
iret
or
mov
insb
fdivrl
jbe
mov
or
ret
pop
lahf
cmp
jno
inc
mov
mov
and
cmc
arpl
mov
or
xor
lods
stos
sbb
xor
insb
mov
js
jb
jb
push
mov
mov
mov
call
lods
dec
jno
aam
push
lret
test
adc
or
cli
push
flds
xor
repz
jle
outsl
sahf
sub
hlt
aad
push
mov
and
mov
lcall
stos
cmp
add
loop
rorb
sub
movsb
or
aaa
and
mov
push
cld
int
outsb
sbb
mov
lret
xchg
lcall
aad
fsubrl
cmpsb
ja
pop
and
xchg
fistps
movsl
fistps
pop
xchg
sbb
xor
in
adc
dec
aad
xor
clc
scas
daa
shrl
xlat
mov
and
paddw
xchg
xchg
pushf
jae
xchg
dec
sub
test
pop
fsubs
lds
jle
xchg
jge
mov
mov
jb
inc
mov
mov
stc
adc
das
mov
daa
inc
imul
xchg
mov
mov
mov
test
fcmove
in
aas
push
fsub
rorl
nop
je
ret
inc
call
mov
test
pop
jecxz
mov
dec
or
cmp
xorl
loop
pushf
mov
enter
test
sbb
push
cmp
jne
sti
jae
add
mov
mov
sub
and
push
lcall
adc
cli
stos
sub
add
es
dec
lods
loopne
mov
out
xchg
mov
sbbb
fmuls
xor
cs
mov
or
cwtl
gs
cmpsb
mov
cwtl
push
xor
rolb
ljmp
insb
mov
dec
idivb
in
sbbl
add
cmp
adc
out
and
ja
cmp
mov
idiv
out
rorb
cmc
add
mov
gs
gs
popl
inc
push
mov
shlb
jg
push
imul
in
cmp
fwait
insb
add
outsb
and
jmp
rcrb
jg
mov
cmp
inc
sbb
cmc
sub
and
imul
fs
cs
pop
out
inc
mull
mov
add
cmpsb
insl
inc
adc
or
clc
jp
pmaxub
loope
push
mov
pop
xchg
movsb
jg
fcoml
and
jge
mov
outsb
xor
cmp
xchg
cmp
cmp
outsl
mov
sub
fisubl
mov
push
or
or
push
mov
dec
out
out
pusha
adc
sbb
ds
adc
inc
dec
fadd
and
aas
jne
arpl
xor
mov
stc
pop
sbb
push
xor
sbb
das
imul
add
xor
out
popf
mov
popf
add
imull
xchg
icebp
or
test
stos
adc
and
lea
add
mov
insb
aam
mov
sub
fdivrl
pop
mov
xchg
jae
mov
enter
imul
in
popa
adc
mov
sub
xor
enter
pop
fldcw
dec
loop
dec
inc
adc
sub
xor
cmc
inc
test
pop
cmp
pushf
xor
add
and
jb
andb
mov
mov
mov
or
xor
leave
sub
push
dec
jae
cmp
ss
addl
pop
xor
mov
nop
mov
in
inc
and
mov
stos
stc
push
out
xor
dec
mov
shlb
pusha
stos
sti
into
scas
push
dec
in
and
lods
sub
or
and
dec
cmp
adc
fdivs
mov
imul
ret
sub
imul
jb
adc
into
scas
xor
jecxz
inc
clc
xchg
lds
and
fstps
out
and
std
xchg
pop
pop
jg
and
cs
xchg
inc
jg
xchg
inc
int
xor
cmp
add
sbb
jns
stc
rol
cmp
xor
push
cmp
dec
sbb
js
sub
mov
sub
in
testb
outsl
mov
sbb
fdivl
xchg
inc
test
jge
or
cs
in
stc
sub
mov
add
sbb
icebp
fwait
or
in
jne
and
mov
in
xchg
push
enter
ret
ds
clc
es
adc
sub
cmp
pop
std
sbb
pop
push
idivl
xchg
insl
push
mov
jno
add
clc
mov
mov
dec
ds
fs
xchg
insl
xor
or
out
lock
xchg
mov
lahf
push
pop
dec
sub
push
test
lret
popf
stc
jl
xchg
in
lods
loope
xlat
aaa
dec
jne
adc
fwait
push
mov
leave
insb
pusha
pop
lcall
sub
xchg
or
pushf
cs
add
jne
jae
lret
mov
jge
inc
pop
add
xchg
insb
push
repz
into
lret
shr
or
js
test
push
adc
pop
lods
movsl
ds
push
mov
adc
mov
push
lret
adc
into
inc
fdivrl
sbb
sub
outsl
push
rorl
shlb
in
scas
out
loopne
lahf
shrb
jp
mov
lret
rol
jne
scas
outsl
xchg
xor
xchg
ja
inc
fisubl
je
lea
fiadds
cmp
jg
push
aas
push
fwait
sti
push
loop
mov
ljmp
push
lret
sbb
dec
out
adc
xchg
mov
das
into
cmp
inc
xor
fisttpll
dec
gs
push
outsb
or
sub
push
mov
rcll
fists
xchg
mov
pop
jg
sahf
or
jno
repnz
and
sub
lahf
xchg
in
out
dec
dec
out
aas
adc
jae
ljmp
and
lret
sub
aas
xchg
mov
add
or
dec
cmpsl
dec
push
shll
out
xchg
pop
sti
or
ds
bound
sbb
push
sub
sub
repz
sub
shr
mov
ljmp
cmpsb
inc
sub
test
dec
xor
cmp
and
popa
into
test
mov
sbb
in
jmp
jno
pop
dec
outsb
sub
jae
dec
pop
cmp
shlb
outsb
repnz
push
cltd
test
jp
flds
sub
mov
int
mov
aad
sti
insb
fistps
cmp
insb
inc
frstor
aad
cmp
shll
arpl
adc
inc
ja
jp
into
ret
and
jg
and
xchg
push
inc
dec
loope
sbb
divl
lcall
add
add
mov
arpl
push
sti
int3
dec
movsb
xor
addr16
movsl
xor
sahf
adc
int3
stos
es
ret
movsb
inc
sti
addb
mov
adc
pop
lds
int
pop
sub
neg
xchg
add
cmp
mov
cmpsb
xchg
push
inc
popf
sbb
leave
out
jbe
int3
jo
iret
cmp
cmp
mov
sbb
lds
dec
jo
test
sub
pop
fcompl
pop
ss
iret
adc
xchg
xchg
jg
and
adc
iret
jns
push
fnstenv
daa
rcr
shll
sub
inc
mov
xchg
repz
jno
enter
pop
jns
pusha
pop
add
js
mul
fwait
repnz
jae
cmpsl
sub
cmp
adc
fisttpll
and
lds
fs
dec
popf
push
mov
mov
cmp
and
adc
repz
loop
jne
andl
pop
enter
scas
repz
stos
repz
stos
cmp
outsl
bound
loope
dec
lds
cli
adc
cltd
das
test
nop
xchg
or
or
mov
mov
mov
xchg
mov
push
sbb
xor
jge
fcmovu
xor
stos
in
popf
sbb
add
pop
dec
or
xor
or
aaa
xchg
out
dec
bnd
les
xor
scas
jo
xchg
push
cli
or
sbb
push
push
mov
xchg
pop
shrl
xchg
in
cmp
lret
bound
inc
xor
sti
iret
cmpsl
imul
or
iret
out
inc
adc
loop
shrb
xlat
dec
hlt
outsb
jno
ds
inc
jecxz
jecxz
ds
mov
jnp
cs
rcll
push
sub
jne
xor
in
jo
xchg
fists
test
rcr
or
addb
jle
in
rcrb
sbb
out
out
push
test
inc
inc
jmp
imul
scas
push
stos
pop
or
mov
xchg
or
push
inc
xor
jns
fsubl
fstl
adc
out
mov
cmp
sahf
lods
shll
call
data16
jge
push
iret
mov
popf
rorb
mov
cwtl
mov
jmp
clc
mov
or
decl
and
push
movsb
xor
aam
xchg
arpl
push
cmpsb
push
stc
mov
cltd
orb
and
testb
jmp
scas
fsubrs
adc
subl
cmp
iret
cli
and
mov
sbb
jno
outsl
dec
push
rorb
jno
repz
scas
dec
ss
xchg
mov
sbb
pop
int
push
iret
jb
pop
pop
xor
or
std
mov
jae
fcomps
dec
xchg
arpl
fstl
inc
ret
ret
popl
xchg
push
ja
or
leave
mov
mov
mov
popa
loopne
cmp
outsb
or
rdtsc
and
push
sub
aad
xlat
mov
adc
js
xchg
int3
test
scas
inc
mov
out
push
ret
pop
sub
sub
lods
stos
jge
pushf
xlat
dec
dec
aaa
adc
xchg
mov
iret
scas
sbbl
jge
xchg
sub
xchg
xor
mov
and
popa
mov
cwtl
outsb
sub
imul
adc
mov
into
xchg
aad
fcoms
inc
cmpb
xchg
fstpl
into
loop
enter
mov
movsb
fsubrs
mov
dec
arpl
add
lcall
jns
xor
xchg
jp
inc
fwait
stos
xor
lods
cmp
push
adc
insl
push
mov
enter
out
cmp
sarb
dec
stc
add
aad
test
xchg
lcall
sahf
rcrb
xchg
inc
xor
into
add
cli
sbb
push
rcl
pop
pop
and
pop
and
pusha
push
and
fistps
add
in
adc
cmp
xchg
out
dec
fisubrs
xor
and
inc
sbb
inc
in
mov
dec
mov
sbb
mov
out
jl
shll
xor
fcoms
leave
add
add
mov
arpl
push
popf
inc
lds
aam
or
and
les
repnz
inc
or
sub
in
add
xchg
jne
sbb
ds
jg
cmpsl
pusha
loope
xchg
faddl
lock
out
test
stos
pop
mov
cmpsl
push
xor
ss
or
jae
cmpl
jge
and
mov
mov
pop
es
outsl
rorl
cmpsl
mov
daa
cmp
in
inc
addr16
cmpsb
xchg
insb
fisttpll
fists
cwtl
mov
data16
jmp
mov
sbb
pop
mov
loop
stc
jb
pop
jno
xor
push
jnp
fnstcw
lret
cmp
dec
inc
pop
or
push
jno
lock
test
adc
loop
adc
mov
jg
lea
pop
push
pop
popf
xor
mov
pop
add
xchg
xchg
scas
jo
popf
lods
aad
out
nop
push
push
sbb
xchg
roll
out
cmp
mov
movsb
addr16
add
xcrypt-cfb
cmpsl
daa
aam
test
sbb
cmp
add
mov
cmp
sub
add
pop
lret
cmp
cmp
fsubrl
push
push
and
dec
xchg
sbb
push
icebp
sub
sbb
mov
out
js
data16
mov
push
cmp
into
xchg
stos
jmp
mov
loope
xor
mov
xchg
je
pushl
shll
fs
cli
jl
aas
bound
lret
xchg
adcl
scas
fs
push
repnz
fnstenv
in
inc
pop
ds
push
stc
mov
xchg
push
sbb
in
or
arpl
int3
mov
out
mov
pop
das
mov
mov
sarl
or
push
lret
sub
cmp
imull
imul
sub
add
loopne
fsubp
pop
mov
jmp
mov
or
push
rorl
cmp
lcall
pop
xchg
xchg
mov
int
or
pop
outsb
xor
pop
push
fs
vfrczps
push
cmp
pop
daa
mov
loop
or
mov
jmp
mov
push
adc
or
fisubrs
dec
sbb
mov
notl
mov
adc
push
and
addr16
jne
dec
inc
and
insb
cli
xor
data16
cwtl
sub
add
insb
cmp
xor
adc
mov
imul
test
ljmp
mov
mov
enter
loope
es
mov
cli
lea
rcl
mov
jmp
xchg
mov
pop
sbb
cmp
scas
jns
iret
and
cmp
pop
rorb
xchg
cmpsl
sbb
fs
outsb
dec
mov
and
push
fsubr
dec
mov
fs
mov
cmpsb
mov
jmp
dec
and
lods
dec
sbb
data16
fisttpl
add
dec
scas
stos
stos
inc
hlt
xchg
jge
push
test
and
aam
stc
aas
mov
adc
outsl
inc
or
mov
outsb
or
push
sbb
ss
pop
lcall
jae
icebp
jp
mov
xchg
push
js
jp
cs
jecxz
add
pop
mov
ret
out
jge
jo
push
mov
sub
sub
jp
outsl
push
stos
loopne
adc
mov
daa
inc
sbb
push
jg
ret
push
ror
aaa
pop
or
xchg
sbbl
mov
or
xor
jp
sub
or
jg
fwait
xchg
stc
outsb
xchg
jl
and
sti
aam
or
sti
dec
popf
addr16
or
adc
add
daa
insb
nop
insb
inc
je
lret
push
mov
sarl
sub
je
lahf
push
faddl
mov
fisubs
fdivrs
scas
mov
in
xchg
and
mov
sbb
push
mov
test
cmpsl
xchg
inc
xor
cmpsl
divb
ret
cmp
in
mov
pop
cli
cmp
mov
cltd
inc
pop
hlt
and
jge
jg
and
adc
ss
add
nop
cmp
fs
pusha
and
clc
lcall
jns
mov
inc
mov
and
jg
ds
push
push
xchg
push
enter
xchg
fwait
cmp
out
push
xchg
iret
lods
dec
add
xchg
arpl
jecxz
popf
push
pop
xor
shl
idivb
mov
out
jno
das
pop
fsubr
dec
leave
andb
inc
fwait
mov
in
cli
mov
xor
fldcw
scas
mov
sahf
xor
dec
mov
mov
cmc
insl
aam
cltd
out
movsl
test
cmpsl
sbb
repnz
add
push
mov
lea
popf
xor
out
push
xor
data16
pop
pop
xchg
dec
push
test
push
ljmp
xchg
jns
mov
mov
stos
sub
addr16
sub
xchg
jnp
and
mov
mov
aad
pusha
das
cmc
cs
and
cli
xlat
out
cmp
xor
cmpl
lock
pop
dec
dec
pop
out
dec
fs
fisttps
push
jle
pusha
xor
test
stos
int3
or
add
push
push
sub
test
rolb
sub
cld
jae
lea
mov
fcmovbe
lock
and
inc
sti
xchg
mov
test
mov
mov
stc
scas
mov
dec
lock
mov
mov
add
mov
adc
cmpsl
mov
test
add
repnz
fnstenv
inc
pop
push
and
push
mov
and
aas
rcll
fiaddl
inc
sbb
cmp
js
jb
dec
sbb
pop
inc
lea
ds
cmp
pushf
mov
push
mov
stos
repz
js
cmpsb
push
inc
addb
mov
and
cmp
lret
lret
sub
daa
jge
insl
adc
fnstsw
aad
out
insb
cmpsb
icebp
js
repnz
aam
lcall
jno
push
cmp
imul
std
pop
shl
cmp
int3
jb
push
xor
arpl
mov
or
xlat
mov
arpl
les
mov
push
enter
cltd
test
scas
dec
cmc
test
adc
call
push
jne
sub
jno
sub
imull
arpl
mov
or
stc
or
mov
imul
fiadds
push
pop
fimuls
adc
jge
sbb
jno
dec
xor
outsl
inc
xor
and
xchg
arpl
fisttpll
push
mov
test
or
mov
xchg
aad
inc
fcmovnb
test
shr
stc
lods
pop
iret
nop
pusha
push
xor
enter
outsb
jge
lcall
or
jmp
add
das
fbstp
mov
testb
add
lods
sub
and
test
mov
inc
inc
insl
inc
in
jnp
fildl
add
es
shlb
shrl
dec
push
roll
adc
or
out
dec
add
pop
jb
or
frstor
mov
dec
subl
pop
adc
cmc
inc
add
lret
jp
xchg
testb
inc
subb
mov
mov
fxch
rolb
xor
cmp
sub
mov
movsb
cmp
pusha
sbb
cmpsl
shlb
pusha
inc
xchg
mov
cli
fidivrs
call
mov
or
push
lahf
out
loopne
andb
int3
out
imul
addr16
sub
fnstenv
lock
xchg
pop
xlat
cmc
pop
cmp
push
outsb
xor
fistpl
xorb
mov
mov
cmc
aad
jns
movsb
xchg
sub
cmp
shlb
pop
es
test
stos
imul
lds
jmp
inc
and
cltd
or
shrl
gs
xchg
jle
das
push
pushf
jg
icebp
pop
mov
insl
loopne
xchg
jbe
test
push
dec
push
xchg
mov
fadd
dec
push
inc
inc
lcall
inc
insb
pop
and
inc
nop
or
push
push
jbe
xchg
out
cmp
xor
lcall
add
push
xor
jne
pop
jp
cmp
fdivr
dec
xor
es
dec
addr16
pushf
pop
xchg
repz
mov
mov
daa
imul
bound
loope
dec
dec
pop
pop
dec
sub
loop
lret
ret
cvtpi2ps
inc
mov
xor
fdivs
shrb
push
sbb
out
fisttpl
icebp
dec
xchg
mov
add
and
push
add
imul
fsubs
mov
xor
or
mov
pop
test
inc
daa
adc
jmp
push
icebp
mov
xor
mov
test
in
loopne
aam
mov
fstpt
mov
int3
sbb
pop
les
push
ja
xchg
insl
int
xor
mov
jle
les
pop
mov
mov
rcl
cs
aam
lds
test
lret
imul
dec
inc
cmp
jle
jle
jns
repnz
cwtl
scas
cmp
mov
cmpsl
mov
mov
pop
and
iret
cmc
inc
jl
inc
cmp
mov
cmp
xchg
stos
mov
xor
fwait
cmp
ss
ds
popf
leave
std
das
mov
enter
lods
outsl
lcall
cld
dec
dec
mov
xor
ljmp
mov
sbb
cmp
adc
jo
or
ja
fwait
mov
mov
add
icebp
sub
jl
aam
mov
cwtl
cmc
jae
sahf
lahf
mov
jmp
pop
push
xor
cmp
cltd
orl
push
cmpsl
adc
call
test
loope
cmpsb
inc
orb
fsubrl
jge
mov
rorb
mov
mov
ret
cmp
fbld
inc
je
test
outsl
ret
mov
scas
mov
sub
mov
jne
adc
mov
sahf
jb
lds
jecxz
mov
movsl
jmp
cmp
lret
aaa
cmpsb
mov
into
in
cmp
inc
dec
repz
fucomi
adc
lret
jg
jle
xor
adc
push
jns
mov
lds
mov
jbe
ror
mov
xor
xchg
mov
xchg
add
cmp
mov
icebp
iret
fists
mov
lods
jl
mov
push
out
mov
jne
loope
inc
scas
lds
rcrl
cmp
mov
sub
push
cmp
ja
jb
rclb
sbb
mov
push
mov
jg
mov
xchg
xchg
add
rorl
pop
or
jne
dec
js
rorl
daa
lret
xor
and
pop
lret
ljmp
pushf
sub
cs
push
mov
fstpl
mov
pop
xchg
adc
adc
pop
and
inc
jo
add
dec
cmc
jp
push
imul
sub
sub
enter
mov
out
cld
pushf
pop
sub
ss
jle
movsw
jbe
push
jae
or
in
cld
test
scas
xor
jno
and
and
push
push
sbb
pop
jno
movsl
icebp
es
sahf
sbb
add
insl
cmp
pushf
ja
iret
cs
imul
repnz
sbb
cmp
mov
push
pushf
cld
pop
nop
clc
rorb
insb
dec
mov
inc
subl
mov
out
push
push
enter
out
xchg
jb
xchg
sahf
add
xchg
pushf
mov
movsl
inc
xchg
mov
sbb
xchg
cltd
lods
mov
fucomi
mov
into
aam
sub
js
int
out
jle
popf
jmp
jne
mov
xor
in
nop
mov
cmp
out
mov
pop
dec
outsl
rcr
lcall
mov
jnp
push
xlat
fisttpl
sahf
inc
sti
pusha
inc
loop
jp
mul
mov
in
fwait
loope
cmpsl
je
icebp
pusha
test
cmpsb
push
xlat
pop
scas
andb
inc
ds
test
addr16
repz
fistps
jae
stos
xor
stos
lret
in
cltd
jp
loope,pn
add
test
out
insb
mov
std
sub
shl
xchg
rol
or
sub
cmp
push
pusha
mov
cmp
add
mov
ret
push
pop
pushf
mov
pushf
int
ror
dec
dec
cmp
cmc
cmp
mov
test
pusha
hlt
ljmp
lahf
repz
mov
and
pop
or
jmp
fstl
jb
push
arpl
hlt
imul
push
add
inc
xchg
pop
sbb
or
lea
jge
sti
sbb
cmpsb
add
sti
pop
add
push
add
mov
lods
mov
mov
call
roll
sbb
fstpl
call
add
adc
loop
inc
fnstenv
and
xchg
nop
push
scas
lock
adc
fwait
or
test
fldl
incl
mov
fisubrs
imul
ret
test
in
dec
jge
lods
sbb
cmp
cmp
cmpsl
movsb
pop
jmp
int
scas
xchg
and
addr16
pop
xor
movsb
xchg
pop
outsb
filds
loopne
popa
dec
lods
repz
sub
dec
gs
sbb
lock
imul
in
or
ret
xchg
sub
pop
xchg
fisttps
fnsave
pop
adc
lock
xchg
lock
lcall
xchg
or
xchg
push
pop
es
int3
out
sbb
ljmp
adc
aam
jg
sarb
clc
daa
push
cmp
movsb
aad
cmp
mov
adc
or
test
dec
inc
adc
inc
dec
or
sub
cmp
leave
dec
xchg
or
cld
push
int3
cmpsb
mov
ret
mov
in
add
xor
lods
inc
sahf
clc
or
xchg
jae
sbb
scas
mov
int3
test
aaa
ja
jge
and
mov
jl
aas
sarb
mov
rclb
cmpsb
fs
inc
rcrb
add
xchg
test
lcall
jle
cmp
arpl
std
inc
cmpb
in
xchg
stc
into
nop
add
enter
cmp
jbe
or
stos
inc
mov
mov
clc
mov
negb
in
mov
inc
or
fstpt
mov
push
out
int
das
fldl
ljmp
xor
sbb
xor
xchg
xchg
in
sub
jns
fucomp
ljmp
jne
dec
dec
pop
rcll
pushf
sbb
cmp
dec
ss
mov
sbb
inc
xor
sahf
lock
mov
mov
ja
dec
cmp
pop
push
mov
and
add
cmp
jmp
adc
cltd
mov
in
xchg
mov
outsl
pop
stc
sub
xchg
or
ss
andb
cli
push
mov
sub
repnz
es
pop
sub
fdivrl
ds
mov
in
inc
int
lcall
push
pushf
imul
cmpsl
pop
or
rolb
js
pop
adc
movsb
pop
stos
scas
scas
xor
mov
mov
and
push
dec
jp
inc
cmp
out
iret
loop
xor
sbb
mov
je
dec
inc
sub
mov
shrl
movsb
jecxz
xchg
xchg
neg
loop
push
jbe
jae
std
dec
xor
fcoml
inc
mov
xchg
or
cmp
fdivl
std
lea
fisubrs
addl
movl
aaa
jnp
pop
mov
scas
sarb
cmp
mov
mov
dec
pop
dec
and
xor
and
xor
push
aam
aam
mov
inc
and
add
sbb
bsf
mov
or
insl
jg
cld
add
test
mov
jle
mov
gs
movsb
pop
jge
or
shlb
xlat
out
mov
push
inc
xorb
mov
test
jbe
lods
xchg
jno
aas
inc
xlat
pop
test
mov
cmp
pop
test
add
out
and
lcall
lcall
cs
ds
imul
cld
jbe
test
ja
scas
leave
pop
insl
mov
int
loope
add
sbb
jae
pop
pop
jmp
lret
into
stos
mov
cmp
mov
lahf
cli
adcl
in
pop
icebp
ljmp
out
cmp
mov
inc
les
add
outsb
ficoml
das
dec
mov
add
cli
pushf
test
or
adc
pusha
mov
cmp
cmp
jae
sub
lcall
and
cmp
jle
fidivs
fwait
xchg
clc
xor
sub
push
out
hlt
lea
cld
sub
jle
fildll
jbe
fsubrl
jb
pop
mov
jae
syscall
push
popa
fcompl
stc
in
add
add
fnsave
das
into
cmp
bound
hlt
xchg
es
mov
popa
scas
xor
push
cmpsl
repz
jl
and
cmp
xor
das
mov
xchg
hlt
adc
addl
nop
xor
int3
mov
push
push
sbb
adc
jp
push
sbb
shlb
jo
sbb
and
mov
fidivrs
aam
cmpsl
push
loope
dec
mov
fucomip
and
dec
adc
ud1
dec
test
mov
inc
dec
enter
mov
dec
imul
push
mov
sbb
sbb
pop
iret
push
dec
jl
sub
inc
mov
fistps
dec
add
inc
mov
mov
dec
addr16
pop
sbb
iret
xlat
push
imul
nop
sbb
je
test
push
repz
in
aaa
mov
pop
shll
cmp
sti
jno
inc
cli
push
xchg
add
mov
dec
enter
jle
leave
loope
xchg
mov
lss
shr
std
mov
sbb
loope
pop
das
jnp
fisttpl
inc
cmp
xor
mov
add
and
movsb
xchg
push
mov
inc
movsb
inc
rolb
movsb
inc
les
mov
out
mov
insb
ss
lods
mov
and
mov
xchg
push
mov
sahf
test
jae
clc
push
punpckhdq
jle
dec
cltd
ss
jae
lods
mov
xorl
fsubs
xchg
sub
pusha
pop
daa
shll
outsl
cmpsl
rcrl
dec
rcrl
add
fs
in
inc
sub
aaa
xchg
add
loop
pusha
loope
push
adc
imul
xchg
sti
decl
imul
arpl
mov
shrl
fwait
mov
cltd
pop
imul
or
and
mov
test
adc
add
pusha
add
adc
pop
xchg
aas
scas
sarl
ja
jo
scas
or
dec
push
inc
or
stos
call
into
mov
lock
call
push
adc
lret
loope
je
sbb
pop
push
lret
jp
mov
ja
fsubl
ljmp
jp
push
mov
cwtl
lret
ss
pop
add
ja
sub
adc
dec
out
jg
push
adc
mov
inc
es
stos
push
test
adc
jl
dec
mov
cltd
inc
push
stc
movsl
cmp
xchg
push
push
xchg
adc
dec
xchg
mov
and
fbstp
xchg
imul
aaa
icebp
pusha
pop
cmpsl
lock
pop
lcall
aaa
xor
shlb
ret
mov
rcrl
sbb
lds
clc
or
jmp
iret
sti
push
jo
ljmp
insb
pop
or
inc
jmp
pusha
std
pop
add
cmpl
jb
movsl
or
out
push
and
daa
sti
add
icebp
jg
aaa
mov
sti
xchg
mov
filds
pusha
imul
aaa
mov
inc
mov
fdivp
movsl
ret
lods
in
inc
and
ja
mov
pop
dec
pusha
or
cmp
cmp
ds
iret
shrb
lahf
sub
jmp
inc
inc
xlat
push
lds
push
pop
iret
jnp
pop
adc
and
pop
cmp
add
in
dec
cwtl
inc
les
fcoml
jmp
test
and
mov
add
call
mov
pushf
pop
rol
cwtl
mov
jo
mov
ljmp
int
andl
repnz
pusha
xchg
in
pop
jnp
cs
mov
lcall
mov
mov
cld
sbb
inc
out
jns
test
mov
repnz
rcr
ficomps
and
movsl
sbb
and
sbb
lock
push
shrb
std
sahf
fsts
xlat
sbbb
iret
dec
and
gs
jmp
cmp
push
xchg
shlb
nop
pusha
xchg
xchg
mov
daa
and
xchg
loopne
test
clc
adc
test
mov
jae
cmc
insl
jne
or
pusha
rcr
pop
in
push
aam
in
and
fisubl
jne
dec
arpl
xchg
cmp
and
adc
inc
push
push
push
clc
pop
mov
jecxz
fisubl
xor
xchg
jno
xorl
adc
or
movsl
punpcklwd
sub
cltd
pop
dec
aaa
loopne
lea
sbb
mov
mov
push
fcompl
in
inc
repz
lods
movsl
loopne
outsl
lods
stos
subb
push
lods
imul
loopne
pop
scas
outsl
mov
ljmp
mov
push
lods
xchg
mov
ja
icebp
or
dec
dec
lock
hlt
das
loopne
test
aas
jno
cmp
fsub
rolb
mov
dec
addb
mov
sbb
in
cli
fst
sub
xor
or
push
out
pusha
call
lret
in
insb
push
push
mov
push
jmp
mov
loopne
mov
pop
out
fldl
icebp
add
lods
push
repz
xchg
addb
add
jle
mov
movb
sub
aam
dec
or
push
jp
mov
push
arpl
cmc
pop
orb
lahf
jno
push
pushl
repz
les
jmp
adc
sbb
add
jg
lret
xor
in
shrb
sub
cli
pop
popf
ret
sub
outsb
int
cmc
cmp
xor
repnz
mov
cmpsb
lret
icebp
cmp
and
clc
xchg
mov
aaa
enter
xor
mov
js
jp
cmc
imul
inc
mov
jnp
es
jp
pusha
lret
pop
dec
cmpsl
aas
lods
jmp
mov
pop
fucomi
rcll
push
stos
adc
fcoms
insl
jge
dec
cli
push
pop
mov
mov
jl
sbb
and
in
mov
mov
in
test
fdivp
mov
outsb
je
xor
jnp
dec
sbb
nop
mov
das
je
push
mov
jl
test
dec
or
pushf
xchg
cs
call
xlat
stos
test
push
loopne
dec
ljmp
inc
and
jns
or
insl
sub
mov
nop
jno
roll
mov
ss
fbld
stos
push
shrl
fisubrs
insb
push
jecxz
stos
cltd
mov
jg
imul
out
mov
shl
imul
sbb
sub
setnp
jo
jp
push
loopne
fwait
mov
pop
push
aas
ss
mov
or
xchg
mov
pop
xchg
js
jb
ret
mov
push
mov
sti
in
inc
cmp
add
mov
push
mov
cmp
add
clc
lock
xchg
movsb
lret
jno
sub
ljmp
lods
ret
pavgb
out
int3
das
std
lods
mov
sbb
jg
jle
mov
bnd
xchg
ss
mov
sbb
addr16
mov
push
push
xlat
sbb
jnp
pop
lods
mov
sub
xor
gs
aas
sbb
xchg
pop
lods
idiv
inc
push
pusha
test
clc
ficoml
icebp
jne
repnz
inc
xchg
push
fisttpll
out
mov
mov
cld
or
jecxz
ret
inc
cmp
mov
lcall
jl
or
adc
popf
inc
lahf
es
test
js
dec
jnp
mov
xchg
dec
push
mov
int3
les
in
mov
mov
jo
push
js
in
inc
or
push
jns
ja
rclb
rcll
adc
in
aas
sarb
inc
shrl
mov
loop
les
out
inc
in
ljmp
mov
inc
mov
pop
sub
les
scas
cli
jp
mov
mov
mov
cmp
xor
mov
add
cltd
or
iret
sub
adcl
xor
ds
cltd
pop
xchg
movsl
xor
pusha
lcall
sbb
inc
out
clc
sbb
dec
adc
gs
mov
push
in
xchg
enter
nop
pushf
clc
mov
xor
test
sbb
xchg
mov
ret
repz
dec
jne
pop
fmull
aad
cli
loopne
bound
adc
sbb
mov
adc
aad
arpl
push
adc
jl
xorb
cmpsb
lret
mov
sub
stc
popf
ljmp
push
inc
movhps
nopl
inc
dec
xlat
js
inc
lods
xor
sbb
ja
mov
or
cs
jns
push
stc
sarl
push
mov
pop
shrl
xchg
sub
mov
sub
add
dec
outsl
cltd
das
mov
mov
sub
dec
adc
sub
test
sti
sub
scas
dec
cltd
scas
je
push
ljmp
decl
cld
mov
ret
cmp
mov
jecxz
mov
push
xor
jbe
into
imulb
mov
ja
fwait
popf
adc
leave
push
add
lea
test
mov
and
out
push
mov
xor
jecxz
mov
imul
jno
mov
stos
dec
xchg
cmp
or
jns
cli
popf
sahf
test
and
mov
out
pop
lds
push
mov
dec
adc
leave
loopne
cmpsb
xchg
loop
fildl
xchg
out
inc
add
jp
outsl
push
test
inc
dec
xchg
xor
jns
cmpsl
jg
sub
or
or
pop
stos
bound
dec
lcall
lods
cmpsb
mov
repz
mov
icebp
add
jnp
lods
lret
dec
fisubrs
mov
rolb
mov
dec
lods
cwtl
mov
mov
pop
out
mov
mov
ret
pop
dec
pop
stos
repz
sti
sahf
adc
inc
xchg
jl
daa
popf
inc
cmc
adc
aaa
mov
je
jp
adc
push
pusha
adcl
sub
movsb
in
mov
mov
in
data16
imul
insb
sti
repnz
stos
mov
jbe
in
ljmp
movsl
adc
mov
xor
mov
incl
in
js
mov
jge
push
stos
sbb
lods
xchg
sub
mov
xor
shll
jecxz
pop
in
xchg
mov
in
xlat
add
xor
imul
push
clc
ror
mov
xchg
xchg
pushf
xor
adcb
adc
dec
pop
add
clc
popfw
ljmp
test
xor
shll
daa
cmp
mov
pusha
outsl
repnz
aas
add
out
fiaddl
out
xchg
repz
jbe
fcmovu
xchg
sub
xor
xor
xchg
lret
int
jmp
movsl
enter
jp
or
fucomip
icebp
loop
clc
out
shlb
push
xchg
mov
add
aad
and
rcrl
divl
pop
or
shr
sbb
jg
insb
push
adc
das
icebp
pop
pushf
push
jmp
ja
sub
je
mov
in
cmp
lret
mov
and
insb
ret
imul
or
jg
or
sub
hlt
imul
aad
sub
divb
sbb
jne
mov
xchg
or
pop
cmp
and
fbld
and
out
xchg
std
in
sub
jo
cmp
iret
das
mov
sub
jmp
scas
mov
jne
jle
adc
test
pop
fdivs
in
sti
xchg
scas
stc
fs
fs
xor
insb
xor
pop
ljmp
insb
xchg
stc
stc
cmp
ja
scas
sahf
dec
js
mov
sti
adcb
sahf
test
mov
add
xor
dec
hlt
mov
icebp
push
fldt
cmp
mov
dec
enter
and
scas
insb
sbb
fsubr
daa
push
lock
or
dec
xchg
add
mov
rcrl
or
pop
fsubl
mov
sahf
jae
outsb
jnp
mov
sbb
pop
mov
xor
neg
cli
repz
lahf
and
loope
daa
repnz
mov
or
cmpsl
test
add
push
lret
popa
pop
xchg
xchg
fisubs
jnp
jp
mov
popf
std
cmpsl
roll
xchg
scas
lret
push
adcb
mov
jb
fldcw
out
cmc
bound
popa
mov
push
inc
int3
add
or
lds
jmp
cltd
imul
xorb
pop
pop
arpl
mov
mov
inc
outsb
jecxz
in
sbb
jb
and
js
add
movsb
adc
stos
sbb
stos
flds
repnz
jl
sbb
mov
mov
aad
fwait
out
xchg
decb
scas
repz
inc
mov
out
add
popa
lock
and
dec
mov
in
and
testb
repz
rcrb
push
xchg
jo
cld
arpl
mov
cmp
lea
nop
inc
xor
xchg
inc
pop
adc
or
rep
out
pop
sti
add
add
mov
pop
lahf
call
and
jno
dec
shlb
cmp
adc
adc
pop
mov
lret
movsl
push
orl
fisubrs
cmp
sbb
mov
mov
into
cmp
jbe
jnp
mov
fdivrs
push
push
test
fwait
add
mov
pop
jmp
jne
inc
push
scas
jo
push
pop
adc
std
sbb
loopne
pop
js
jae
in
call
inc
lods
mov
loope
test
lock
enter
fcmovne
inc
out
dec
sahf
sbb
inc
cmpb
fistl
xorb
mov
sub
xor
fwait
jae
fbstp
pop
lahf
adc
mov
jge
cli
dec
dec
stc
push
cld
cmpl
sahf
sbbl
lods
ret
std
loope
mov
bound
add
insb
cmp
sbb
arpl
andb
enter
mov
aad
pop
mov
xor
dec
adc
leave
popf
push
push
cmc
sbb
xchg
cmpsb
sbb
ss
lods
pop
push
loope
out
cmc
cmp
add
inc
add
mov
sahf
neg
mov
stos
or
iret
es
or
in
test
inc
sti
inc
movsb
aam
ret
clc
xor
out
sarl
gs
sbb
mov
jns
pop
lcall
mov
rcrl
xor
stos
decl
xor
mov
mov
jae
addr16
and
nop
push
push
call
xor
dec
insb
cmp
fnsave
andl
scas
popa
sub
push
shrb
cltd
stos
dec
jb
dec
mov
dec
sbb
push
scas
jmp
in
ret
enter
gs
pop
sub
subb
pop
or
pop
sbb
das
push
add
xor
mov
dec
xchg
test
xor
cli
mov
sbb
std
cltd
iret
push
cmp
sti
jmp
jo
movb
inc
out
push
out
jbe
or
sub
xor
clc
int
xchg
jmp
xchg
mov
jge
dec
shlb
int3
icebp
inc
call
or
xchg
jmp
adc
subb
outsb
mov
test
dec
jbe
lret
xchg
cmpl
fcomip
test
sub
stos
cmp
outsb
lahf
inc
lea
mov
lock
outsl
add
or
out
sub
cmp
imul
and
jge
inc
in
push
lods
imul
insl
dec
adc
into
adc
loope
sub
lods
push
shll
jb
into
and
xchg
aad
int
insb
cmc
test
jge
scas
mov
add
jmp
xchg
fimull
xchg
outsl
cmp
aad
sub
clc
out
ret
imul
scas
and
adc
loop
fstpl
xor
pop
or
movsb
aas
lea
rcll
mov
idivl
jbe
loop
add
cmp
dec
or
mov
pop
loope
mov
cli
sub
sbb
popa
gs
sahf
movsl
push
mov
dec
pop
push
punpckhbw
test
pop
adc
xor
sbb
xor
and
pop
ds
xor
movsl
sti
fidivs
sbb
xor
out
fiadds
ret
idivb
hlt
and
mov
add
jg
cmp
hlt
cmp
mov
mov
and
push
or
icebp
or
fistl
enter
or
jne
rorl
cmpsl
fistpl
pop
mov
stos
jp
in
add
cmp
jae
imul
sub
cmp
mov
adc
jbe
inc
imul
and
mov
sub
fidivrl
jg
or
push
movsl
mov
push
mov
outsl
and
stc
lcall
push
divl
mov
cmp
aam
dec
lcall
pop
sub
lret
call
test
mov
xchg
jle
cmp
mov
stc
xchg
imul
push
and
leave
mov
mov
or
mov
stos
xor
in
or
inc
dec
xor
jnp
mov
jmp
and
fs
cmp
in
xchg
dec
sahf
popf
pop
je
repz
jecxz
cli
xor
es
int3
pop
xor
fcmove
mov
mov
ret
cmp
cmc
jle
imul
fs
out
fistps
mov
in
mov
dec
call
call
dec
add
dec
es
hlt
pop
pop
filds
jne
les
pop
aad
rolb
mov
cmp
movl
sbb
cmpsb
fs
lret
pop
pop
jne
pop
push
imul
jle
cmp
mov
add
sub
out
mov
ja
aaa
mov
sbb
out
adc
outsl
xchg
int
push
das
or
jl
mull
movsb
mov
mov
ja
push
cmp
adc
stos
fxch
fsubl
dec
stc
mov
push
lret
push
xor
xor
and
adc
mov
ss
xlat
subb
add
mov
mov
cs
mov
icebp
ud1
int
inc
ffree
divl
hlt
xchg
lahf
and
stc
repnz
push
fisubrl
pop
out
ret
lea
mov
jo
sbb
pusha
jnp
mov
ljmp
add
loop
cmpsb
je
jecxz
mov
add
sbb
inc
in
sbb
xorl
cs
mov
es
add
dec
sub
pusha
inc
enter
call
mov
into
adc
popa
daa
pop
adc
push
cmp
ret
jp
add
imul
jecxz
mov
lret
mov
inc
add
data16
jecxz
cmp
adc
mov
xor
inc
mov
push
jb
fs
inc
sbb
stos
jge
sar
in
push
jecxz
jle
dec
jg
or
imul
mov
adc
cmp
in
fdivrs
mov
pop
lods
dec
mov
inc
fs
popa
call
add
test
sub
loope
popf
cmp
fistpl
imul
mov
jge
dec
push
xchg
cld
mov
and
sarb
loopne
les
in
sub
push
mov
push
das
repz
inc
repnz
jo
inc
xorl
bound
mov
push
lcall
jle
andl
aam
or
daa
push
in
and
inc
cmpsb
mov
dec
jb
dec
stc
sub
mov
cmpsl
js
jle
jp
add
sbb
jnp
xchg
mov
lock
jnp
jae
lods
addr16
jb
lea
cmpsb
mov
testl
fs
movsb
inc
pop
fsubrs
popf
xchg
mov
in
pushf
scas
mov
pop
in
cmpb
xchg
add
sahf
arpl
mov
mov
in
push
xor
jecxz
in
xchg
movl
dec
mov
cmp
inc
jb
adcl
cmpsl
rcrb
bound
dec
inc
fsubrp
mov
arpl
xchg
or
pop
lahf
adc
sahf
lods
inc
mov
lods
mov
push
imul
cmp
sub
push
pop
or
sbb
mov
push
pop
sbb
cmpsb
cmpsb
adcl
xlat
dec
adc
scas
mov
mov
mov
pop
out
add
pop
push
jne
push
cmpl
loop
and
imull
xchg
xchg
outsb
mov
fbld
and
adc
jle
mov
hlt
push
mov
mov
push
xor
sbb
jl
or
mov
mov
mov
rcrl
insl
mov
mov
insb
insb
fldt
pop
xchg
mov
sub
and
ret
dec
mov
sub
jg
adc
ficomps
mov
int
mov
rolb
rorl
test
push
fidivrl
cmpsl
jecxz
aas
mov
or
lahf
push
xor
add
adc
notl
jne
mov
dec
sub
xchg
fldenv
push
es
stos
lret
cmpl
dec
mov
insb
iret
adc
mov
sub
push
sbb
ret
sbb
mov
rorb
lahf
add
push
rclb
push
jne
lret
sbb
inc
andb
or
cmpsb
mov
fadd
pop
xorb
cmp
incb
xchg
xor
call
lods
enter
add
mov
jo
sbb
mov
pop
stc
lods
nop
out
in
push
jns
sub
loop
pusha
stos
and
pop
lea
xchg
shll
pop
mov
sbb
and
lret
shl
leave
inc
adcl
cli
shlb
sbb
cmp
jne
roll
popa
imul
jae
sahf
popf
adc
aas
add
mov
inc
repz
mov
daa
sbb
icebp
inc
xchg
push
jecxz
ret
jae
faddl
dec
movsb
popa
mov
int
and
mov
rorl
cmpsb
idivl
daa
pop
aaa
inc
sub
and
adc
hlt
adc
inc
frstor
jg
adc
lds
stos
iret
cmc
mov
and
xchg
push
pop
sahf
xchg
sub
out
imul
test
int3
mov
jecxz
cmc
jmp
ja
mov
mov
sub
lcall
mov
xlat
adc
adc
sbb
pop
jae
insb
hlt
out
sbb
jb
ljmp
jl
lods
xor
movsb
ljmp
loope
sub
mov
testb
aas
dec
inc
leave
pop
sub
popa
sub
popw
sbb
fiaddl
icebp
push
aaa
cltd
adc
repnz
insl
lea
push
jg
icebp
iret
cli
sub
je
push
rcrb
pop
dec
sub
arpl
xor
push
sbbl
jp
xchg
andl
adc
push
jmp
mov
add
jmp
daa
dec
ljmp
and
cmc
and
hlt
inc
in
test
push
frstor
scas
mov
and
cld
stos
enter
fdivrp
loope
or
lds
aaa
add
repnz
sbb
sub
ficoms
or
dec
xchg
mov
nop
dec
ret
fidivl
xor
mov
dec
in
xor
and
push
ljmp
insl
mov
outsb
jle
sahf
sti
cmp
int3
nop
pop
mov
push
subb
adc
out
push
test
dec
lcall
movsl
jns
inc
test
dec
in
fwait
sub
xlat
adc
and
pop
repz
div
xlat
nop
insl
sbb
xchg
cmp
std
pop
inc
mov
xlat
aas
sbb
dec
hlt
mov
sub
sub
repz
cmp
sub
or
outsl
mov
icebp
add
stos
adc
clc
icebp
pop
and
adc
ljmp
push
movsb
cmpsb
loopne
and
or
jge
das
loopne
orb
add
xchg
xor
xchg
popl
out
mov
add
cmp
lods
ret
xor
jnp
icebp
test
das
ljmp
test
movsl
adc
xor
movsl
add
adc
sub
lcall
hlt
jp
bound
cli
jp
je
and
iret
xor
cltd
dec
mov
rol
inc
pop
mov
sbb
or
orb
not
mov
movsl
jne
sub
add
stos
pop
mov
test
sbb
sbb
mov
mov
push
mov
popf
sbb
out
cmc
out
jns
les
test
stos
adc
out
dec
cs
imul
xchg
xchg
cmp
je
lret
fists
into
jp
ljmp
pop
rolb
rcr
cmpsb
mov
dec
push
or
push
jo
out
adc
loopne
xlat
pop
mov
insb
mov
in
fidivs
aaa
mov
in
or
push
inc
popa
mov
sub
cmpsb
loop
outsb
push
or
out
mov
mov
pop
out
loope
les
xchg
shrb
mov
inc
out
int
enter
xchg
cltd
xor
test
repnz
repz
lea
arpl
icebp
rcr
out
popf
or
mov
jb
adc
push
adc
mov
bound
shl
and
inc
jne
lods
fildl
xchg
outsb
icebp
push
pop
inc
out
outsl
pusha
test
andb
and
es
fsubrs
cmp
lds
sar
adc
xchg
push
out
jnp
test
cld
mov
je
or
fcmovnu
dec
dec
sbb
add
leave
jno
and
mov
cs
jle
test
stc
inc
stc
sbb
bound
add
sbb
imul
xlat
push
xchg
int
leave
pop
sbb
or
dec
icebp
dec
adc
daa
adc
scas
inc
jb
sub
mov
jnp
fcompl
iret
bound
lcall
scas
movb
mov
imul
push
cmp
xlat
xchg
sbb
jae
stos
mov
push
into
pop
and
xor
insl
jl
insb
in
xlat
aam
ret
jbe
imul
jne
xchg
jg
pop
cltd
xor
pop
sbb
aaa
xor
pop
xchg
lods
jbe
dec
ljmp
sbb
and
test
sti
sub
loop
cltd
testb
repz
enterw
pop
inc
popa
imul
xorb
out
pop
adc
imul
scas
outsl
inc
pop
jp
pop
sti
and
sti
ja
add
xchg
inc
jl
push
jno
pop
mov
sti
jae
inc
inc
in
orl
jp
hlt
ljmp
out
push
add
jae
pop
xor
mov
std
dec
push
jp
sbb
in
mov
hlt
icebp
jmp
adc
cmp
decb
cmp
inc
fiadds
mov
xchg
cld
jo
push
imul
iret
sti
repnz
push
or
jbe
add
ret
xor
lcall
jnp
pop
add
enter
push
sbb
mov
xor
adc
xorl
jecxz
out
cmc
test
adc
xor
into
xchg
loop
in
inc
out
retw
imul
pop
jmp
dec
jg
or
movsb
push
push
or
arpl
stos
es
outsl
sbb
cmp
js
sti
in
add
jmp
or
sti
push
xor
fwait
pop
fstps
xchg
outsl
out
test
mov
mov
mov
sub
pop
jb
cmp
bound
mov
dec
fadd
lods
repz
pop
bound
add
adc
mov
xchg
xchg
mov
push
rclb
xchg
out
aad
push
and
mov
jb
scas
push
cmc
dec
test
xchg
mov
push
jo
xchg
and
and
add
push
jecxz
imul
jb
add
movb
shrb
jecxz
lahf
jl
ds
rcll
hlt
adc
mov
loopew
pop
aam
outsl
pop
in
into
test
pop
xchg
xorl
or
pop
mov
pop
pop
gs
dec
push
adc
cmp
js
aaa
dec
pop
cmp
xchg
pop
hlt
xor
mov
cmc
sub
adc
addb
or
push
adc
mov
push
push
jns
aas
ja
mov
cmp
scas
cs
in
mov
gs
jnp
ljmp
out
cld
shll
iret
cli
jle
cmpl
stos
rorl
rol
ficompl
arpl
enter
mov
pop
add
pop
sub
jae
and
mov
dec
sbbl
mov
ret
jae
adc
clc
jg
lcall
jae
outsb
sahf
sbb
pop
imul
mov
lcall
or
popf
mov
jge
jmp
pop
jecxz
jbe
cmp
pop
inc
movsb
pop
scas
xchg
aad
sub
lds
movsl
lods
gs
stc
enter
inc
xor
outsb
mov
jno
arpl
add
sti
push
test
pusha
cli
mov
jno
and
or
insb
lret
stos
mov
dec
mov
xor
jmp
sbb
repnz
fwait
sub
data16
sbb
pop
enter
pop
sub
fnstcw
in
mulb
test
jbe
mov
testb
testb
dec
test
sub
xchg
rcr
int3
jb
mov
xrstors
addb
pop
test
pop
andb
ds
jecxz
xor
inc
js
add
icebp
loopne
jae
pop
add
ss
xchg
testb
and
loopne
jns
sub
ror
lock
enter
repz
out
pop
add
adcl
pop
int3
cmp
ds
jnp
std
stc
sbb
or
iret
shlb
into
mov
jno
scas
or
cltd
adc
jg
push
push
insl
xchg
aaa
in
push
adc
stc
push
dec
push
xlat
or
loope
cld
adcb
jae
pop
pop
and
imul
or
fs
lcall
xor
insl
sbb
addl
push
test
out
and
test
scas
mul
and
les
hlt
insl
cmp
jg
int
mov
jbe
ret
xchg
mov
cmpb
cmp
in
clc
stos
jno
out
fildl
push
pop
mov
mov
cwtl
cld
sbb
shrl
addr16
cmpl
ljmp
cltd
xor
dec
sbb
int3
push
sarb
inc
fcoms
cmp
fnstcw
adc
jns
mov
xor
jecxz
shr
xchg
in
mov
pop
cmp
dec
inc
andl
add
pop
and
fistl
mov
mov
mov
mov
mov
lret
push
scas
jl
dec
in
add
sbb
xor
nop
loopne
test
cmp
pop
cmp
sbb
movsb
mov
xor
icebp
test
ret
pop
sub
pop
dec
ja
push
into
jb
data16
jbe
nop
repnz
xchg
ficoml
jp
out
sub
jns
inc
cmpsl
push
mov
xchg
dec
pop
xor
mov
scas
pop
xorl
sub
adc
out
enter
in
mov
cmc
mov
cmpsb
jle
mov
pop
lods
mov
mov
inc
loope
aas
aaa
jge
lods
mov
pop
cld
mov
arpl
cltd
inc
or
dec
push
jb
pushf
xchg
out
ljmp
cmp
enter
push
inc
adc
ds
fistps
cmc
add
mov
mov
fwait
xor
ds
mov
subb
pop
cwtl
lods
mov
push
in
sbb
pop
popf
nop
mov
mov
pushf
lods
push
xchg
dec
pop
in
movb
fcoml
rolb
test
cwtl
mov
ds
adc
cmp
jae
ficoms
pop
shlb
movsb
mov
and
les
fmuls
popf
call
xchg
add
movsb
jne
cmp
aad
xchg
pop
ds
fucomip
imul
ss
iret
lret
scas
loop
push
test
or
mov
xchg
adc
push
subl
inc
pop
jg
pop
inc
mov
aam
stos
mov
fisttpl
test
dec
test
es
outsb
mov
jmp
mov
cmp
add
or
aas
popa
idivb
add
daa
test
lock
into
inc
sbb
insl
inc
dec
dec
cmp
sbb
inc
adc
addr16
subl
dec
sbb
mov
pop
jne
int
lahf
outsl
mov
scas
xor
gs
sbb
inc
adc
imul
jl
and
fwait
jb
jne
jnp
ljmp
mov
movsl
fbld
xor
or
lods
cmp
push
push
xor
sub
test
js
aaa
scas
cmp
fsubs
aaa
cmp
mov
stos
dec
fistps
popl
xchg
sub
adc
xchg
scas
xchg
scas
cs
sub
bound
nop
or
cmp
aam
adc
cmpsl
and
sbb
xchg
sbb
andl
insl
loopne
fdivs
jns
jle
leave
fistpll
js
ss
mov
mov
rclb
xchg
and
loope
dec
xchg
jo
jg
or
into
mov
pop
xor
fldenv
add
mov
push
push
enter
mov
mov
pusha
cmp
add
outsl
pop
adc
loopne
cmp
idivl
hlt
daa
and
mov
scas
sbb
movsb
ret
jbe
or
xchg
jmp
push
ret
mov
mov
lds
loop
mov
loope
scas
lahf
ror
jp
push
out
adc
xchg
cld
push
push
xchg
outsl
cmc
sarb
test
out
out
mov
lds
cmp
test
jle
mov
mov
ret
addl
sti
jl
push
adc
shrb
lock
lods
ret
adc
sub
push
mov
jae
pop
push
ret
mov
outsb
call
and
xchg
and
cmpsb
lcall
inc
xchg
iret
mulb
jmp
mov
popa
or
push
mov
mov
lds
jo
nop
pop
add
mov
mov
cmpsl
fsubrs
lret
insb
sbb
mov
or
fwait
icebp
jns
cmpb
stos
repz
cli
into
inc
arpl
push
dec
push
mov
adc
test
cmp
or
xchg
lret
insl
test
cmp
andb
mov
or
jecxz
test
loope
les
out
xorl
lahf
push
push
jl
mov
ja
cmp
das
push
jp
add
icebp
repz
shrl
mov
add
repnz
mov
pop
add
push
aad
outsl
fmuls
xor
lahf
stc
inc
mov
std
or
js
xchg
xor
test
int3
xchg
icebp
rol
enter
fdivl
cmp
sbb
pop
popa
loope
addr16
adc
jmp
push
add
mov
mov
push
sub
mov
add
mov
sbb
cmc
icebp
cwtl
repnz
sarb
or
xchg
fdivl
ss
pop
ror
and
stc
cli
cmp
mov
addr16
sarb
je
xor
push
nop
rcrb
sub
adc
mov
sub
js
sbb
or
dec
sbb
jbe
mov
popl
mov
push
pop
insb
out
pop
or
psrlq
xor
rcrb
fs
and
sbb
pop
cmp
dec
es
sub
dec
inc
sbb
insb
mov
mov
jmp
mov
pop
jnp
ffree
dec
mov
imul
mov
xchg
cmpsb
jnp
push
sub
stos
into
fistps
xchg
rorl
push
add
add
push
ret
push
test
imul
dec
bound
pop
xchg
daa
das
adc
into
packuswb
xor
jnp
sbb
jnp
shll
ljmp
cmpsl
dec
mov
mov
xchg
imul
notl
bound
daa
sub
mov
adc
pop
test
lret
mov
xor
es
int3
and
mov
mov
ffreep
aad
in
fwait
in
pusha
push
or
aaa
sbb
add
push
sti
shl
mov
into
fs
js
and
push
popf
mov
subb
addb
jnp
or
dec
add
roll
arpl
adc
adc
imul
sbb
in
mov
pop
loope
js
movsl
inc
clc
adc
cmpb
or
popa
fldl
dec
fucomip
std
jb
sahf
xchg
jecxz
inc
call
out
mov
jno
inc
adc
outsl
dec
xchg
les
popa
lods
enter
sub
iret
mov
test
cmc
jbe
push
push
mov
pop
mov
add
orl
pop
mov
test
sbb
icebp
add
or
outsb
adc
add
das
cmpsb
pop
cs
xchg
roll
jbe
mov
pop
jl
in
pop
mov
or
fsubrs
xchg
ds
xchg
dec
out
cmp
clc
daa
test
arpl
pushf
sahf
pop
popa
incb
jne
mov
inc
sti
pop
push
push
mov
pushf
movsb
in
es
sub
jg
repz
inc
movsl
push
xorb
mov
push
sub
or
rolb
mov
or
inc
movsb
int
lds
lds
insb
mov
mov
nop
repnz
int
xchg
loope
stos
clc
xor
mov
popf
adc
mov
inc
rcll
adc
push
cmp
jae
clc
cltd
out
push
inc
lods
mov
inc
pop
xor
popa
dec
lods
push
xor
sbb
sbb
sarl
stc
insl
inc
push
test
outsb
testl
add
test
lock
pop
iret
iret
mov
int
push
jmp
jecxz
inc
test
sbb
push
mov
icebp
cmp
shl
std
or
sbb
sub
insb
or
test
jns
shlb
enter
outsl
popf
sub
mov
jnp
jl
js
mov
inc
dec
es
or
xchg
xor
push
movsl
xchg
test
pop
push
lds
push
repnz
out
leave
jns
aam
faddl
cmp
lcall
dec
pop
dec
mov
dec
fsubs
add
push
lcall
inc
pop
lods
lock
xor
nop
adc
mov
sub
mov
je
pop
div
arpl
fistl
notb
mov
pop
popf
insl
insb
rolb
cmp
xchg
data16
int
and
jl
test
fimuls
iret
sar
stos
loop
mov
sub
pop
es
jl
and
les
into
gs
add
lahf
push
adc
addb
pop
mov
jle
sbb
call
int3
sbb
mov
ret
cmp
test
and
adc
mov
cld
push
lea
pop
add
xlat
sub
inc
in
stos
cld
loop
loopne
bound
mov
lahf
pop
adc
call
pop
mov
ret
jmp
inc
ja
jb
cmp
shr
pop
inc
xcrypt-ctr
cmpsl
sahf
jle
mov
faddp
sbb
in
jns
add
add
push
decb
dec
insl
testl
sub
push
rorb
aas
adc
pop
outsb
xlat
ror
inc
gs
scas
cli
es
mov
pushf
shll
sub
inc
dec
xchg
jmp
jmp
enter
ss
pop
ja
lret
push
imul
and
enter
inc
jge
lods
adc
rcll
and
mov
pop
in
jmp
cmp
cmpsl
or
ret
cs
test
jecxz
jns
insb
inc
xchg
insl
push
addb
in
sub
push
mov
out
mov
xchg
mov
push
push
push
sub
inc
leave
xlat
jmp
jne
mov
xchg
sub
or
inc
cmp
pushf
in
jle
aam
push
and
jo
and
flds
imull
inc
sub
jns
or
sbb
insl
sub
in
popa
ja
mov
pop
jb
jne
pop
out
push
xor
movsb
ret
cmpl
shrl
jl
push
cmp
stos
shlb
mov
daa
inc
cli
sub
scas
jl
imul
jnp
sbb
cmp
add
jae
push
dec
xor
dec
aad
shll
inc
and
mull
js
repnz
loopne
lods
mov
mov
insb
pusha
push
cmp
push
sbb
arpl
repz
fistps
push
mov
jmp
and
sahf
adc
sbb
je
adc
adc
mov
mov
xchg
adcl
inc
jge
pop
aas
xor
push
push
das
sbb
call
push
int
sub
add
fisttpl
lret
lea
push
call
pop
clc
je
loopne
adc
and
test
stc
leave
cmp
mov
sub
ljmp
add
xchg
bnd
and
mov
push
mov
cli
in
andnps
xor
dec
loop
fmull
mov
add
xchg
test
push
int
push
fnstenv
push
aam
roll
jge
add
mov
addl
xchg
cmp
mov
adc
into
mov
in
adc
inc
les
fldl
jmp
adc
pop
and
fsubr
mov
rorb
imul
scas
ret
adc
je
dec
fnsave
sbb
sub
cmp
push
orw
pop
xor
mov
cmc
add
std
mov
stos
and
les
cmp
movsl
imul
pop
and
outsb
xor
push
and
orl
fcmovnbe
insb
sar
cmp
sbbl
lds
clc
dec
cs
cmp
mov
fidivrl
jae
mov
movsl
in
jb
xchg
mov
sub
push
je
cmc
push
cmpsl
cmpsl
sar
data16
mov
fdivl
dec
adc
push
fldl2e
push
sub
sti
xor
rcr
xorl
shlb
cli
out
push
inc
js
je
aam
push
add
jge
call
xor
and
and
aas
mov
or
xor
mov
add
push
repnz
in
add
push
daa
mov
pop
mov
sub
nop
push
dec
jae
pop
mov
mov
mov
mov
adc
inc
ds
ror
or
es
ja
in
add
mov
push
dec
push
std
fiaddl
movb
out
and
repnz
aam
mov
mov
in
dec
jge
cmp
imulb
sbb
mov
cmp
loopne
es
scas
push
mov
shr
and
cltd
lods
add
cld
lods
insl
fists
mov
xchg
repnz
and
notb
xlat
push
and
mov
ret
add
mov
jbe
and
clc
pop
pop
outsl
inc
loop
xor
les
xor
stos
imul
and
cli
push
mov
push
sbb
in
mov
mov
and
testb
aad
aas
cwtl
xchg
jne
jnp
scas
sbbb
mov
out
data16
repz
dec
std
push
in
cmc
ret
jl
lock
lock
cmc
ret
lcall
lcall
push
icebp
push
pop
clc
sahf
cld
xchg
loop
sbb
imul
jne
dec
add
stos
add
pop
inc
popf
jle
push
add
and
sbb
push
fwait
addr16
or
mov
ret
stc
je
or
imul
pop
outsl
or
or
push
xchg
xchg
call
faddl
lock
repnz
out
addr16
outsb
dec
test
push
call
jno
xor
gs
mov
mov
xchg
bound
int3
push
dec
ret
and
test
cli
jecxz
or
dec
scas
stc
fcoms
mov
js
push
jns
int
and
lds
cmp
inc
movsb
adc
movsb
test
and
xor
cs
or
dec
add
inc
bound
adc
or
les
cmpb
cmp
jbe
rclb
mov
into
xor
mov
addl
mov
xor
fcmovnb
packsswb
jmp
cmp
arpl
cmp
inc
xorl
nop
lods
mov
push
out
jmp
add
cwtl
nop
jmp
mov
fisubl
xchg
imul
setnp
mov
mov
fdiv
jbe
cmp
jle
or
and
in
dec
outsb
xor
aaa
and
stos
test
push
dec
jle
or
in
push
inc
or
push
pop
jge
sbb
aam
add
mov
loope
dec
enter
pusha
sub
mov
mov
and
enter
mov
sub
cmp
adc
add
xchg
rolb
xor
push
xchg
nop
xchg
pop
lods
push
adc
xchg
ja
call
ret
mov
mov
cld
cmp
inc
dec
add
ss
and
mov
push
daa
call
imul
fsub
fsubrs
and
mov
or
dec
leave
pop
cmp
test
adc
stos
dec
ljmp
push
sbb
ss
mov
push
fistpll
or
mov
jecxz
ljmp
sbb
sbbl
mov
test
dec
loope
mov
std
ffree
notl
scas
add
fimuls
sbb
scas
out
mov
lock
testl
addr16
dec
lods
gs
int3
pop
push
call
cmp
sbb
fs
daa
fcom
fwait
add
lret
xchg
dec
aaa
fisubrl
mov
jp
dec
scas
ret
pop
add
push
and
outsl
cmp
repz
jmp
push
aas
add
jp
lret
in
xchg
pusha
aad
in
out
add
adc
lods
inc
loop
notb
test
mov
mov
shll
sahf
adc
jae
or
je
adc
mov
sub
jns
or
mov
daa
xor
roll
xchg
mov
scas
aaa
dec
push
push
stc
aad
pop
fcmovb
rcll
cltd
test
dec
std
adc
movsb
xor
mov
inc
mov
push
sarb
in
add
xchg
popa
in
xchg
mov
aad
imul
in
loop
ret
sbbl
adc
mov
adc
xor
inc
ja
leave
dec
adc
xchg
pop
inc
mov
jnp
mov
cmc
stc
xlat
inc
dec
pop
pop
cmc
cmpsb
into
jecxz
and
test
and
mov
pop
out
sti
cld
ja
lods
outsl
out
int3
dec
or
rcrb
pop
aaa
dec
stos
push
push
xor
xchg
mov
mov
adc
add
out
stos
or
sbb
xor
pop
outsl
mov
pop
and
inc
rorl
daa
mov
test
mov
pushf
add
enter
mov
mov
test
repz
push
in
add
cltd
sbb
aam
mov
fdivrp
pop
shll
mov
jns
insl
stc
int3
shlb
scas
int
ds
std
insl
jo
add
jnp
sub
test
aas
stc
test
xlat
scas
pusha
gs
jp
push
and
pop
mov
shrb
mov
inc
aaa
xchg
in
fistpl
mov
fisubl
lret
arpl
mov
inc
cmp
movsb
ja
dec
and
xorl
pop
add
dec
jb
testb
mov
je
xchg
fcomi
sub
jmp
ret
jle
mov
enter
mov
lret
pop
push
adc
xchg
aad
cmp
rolb
mov
mov
lds
sub
iret
inc
in
fwait
imul
push
xor
imul
inc
push
cmpsl
fcompl
sbbb
cltd
xor
loope
add
test
popf
es
jbe
push
mov
adc
gs
xchg
repnz
and
cmp
cltd
dec
jecxz
test
sub
mov
outsl
in
sub
inc
data16
ret
mov
mov
dec
sub
xchg
test
xchg
sub
insl
das
inc
or
add
pop
cmc
pop
fsubs
insl
hlt
sti
mov
mov
xchg
test
and
push
jne
adc
push
pop
aas
sub
inc
popf
dec
sahf
mov
lret
push
push
mov
leave
or
xchg
ljmp
pop
jmp
and
lcall
jo
add
in
add
aam
push
push
add
add
adcb
add
cmp
xor
add
cwtl
push
bound
and
je
xchg
fsubrp
mov
lret
idivl
mov
mov
in
dec
jb
dec
mov
adc
out
lods
push
je
lcall
add
ljmp
test
aad
pop
mov
repnz
push
ret
and
dec
cmpsb
orl
add
cmp
in
lahf
test
addr16
mov
cmp
lods
out
add
pusha
push
or
mov
xchg
lods
pop
xor
xor
push
jae
dec
and
or
adc
mov
outsb
mov
jb
shlb
rcrl
cmp
dec
je
into
dec
xchg
clc
aam
stos
ljmp
fdivs
imul
ljmp
mov
xchg
out
cmc
lds
gs
dec
push
push
in
cmp
icebp
mov
mov
fs
inc
lods
smsw
ss
out
pusha
cmc
xor
ja
bound
pop
cli
popa
jbe
mov
movsl
xchg
dec
mov
dec
push
jmp
aam
ret
sahf
xor
pop
mov
add
pop
xchg
lods
cmp
inc
les
xor
ja
push
mov
btr
pop
cmpsl
shl
or
xor
out
dec
mov
fiaddl
jb
popa
fisubl
cmp
cli
xor
mov
jbe
dec
out
adc
in
sub
int3
loop
pop
fbstp
and
lds
lods
mov
jl
xchg
outsl
or
outsb
fstpl
cmp
outsb
or
mov
pop
sahf
inc
cmp
xor
jno
push
mov
imulb
xor
jno
dec
sbb
jmp
inc
cs
add
pop
cmp
push
sbb
imul
test
adcl
pop
pop
pop
and
add
lcall
push
jno
push
lods
stc
fists
push
sub
iret
pushf
pop
int3
mov
ret
pop
adc
inc
fbld
mov
xchg
aad
pop
mov
cmp
loop
sub
or
sub
movsb
pop
sub
sub
push
mov
in
imul
jnp
sub
fcoml
daa
cltd
out
xchg
adcl
push
in
pop
fwait
or
dec
mov
cmp
dec
pop
jne
inc
out
inc
jg
lds
mov
pop
ss
lods
mov
push
addb
stos
insb
xchg
dec
cltd
fcmovbe
jne
in
call
ja
inc
test
xlat
imul
popa
push
adcl
jae
xchg
mov
fcompl
fwait
mov
jmp
pop
incl
and
mov
aad
fdivrs
mov
inc
lods
lock
jno
aaa
cmpsb
cwtl
dec
push
push
sysret
and
mov
jl
loope
mov
repnz
rolb
or
addr16
push
xchg
pop
push
xor
shl
roll
sbb
movsb
das
es
push
inc
mov
jecxz
mov
test
clc
aas
fsubrl
out
adcl
mov
xorb
mov
stos
mov
mov
inc
mov
mov
es
xor
mov
mov
xor
add
xchg
pop
sub
mov
xchg
jae
ja
rclb
leave
imull
pop
jg
sbb
push
ja
xor
adc
pop
push
jns
jg
mov
aaa
cmp
push
push
call
fldcw
xor
les
inc
pop
mov
insb
push
jmp
aaa
inc
mov
adc
mov
add
mov
test
es
imul
jns
xor
xchg
pop
push
lcall
subb
xchg
xor
sbb
xchg
movsb
in
xchg
sahf
fdivl
fstpt
lods
or
scas
decl
dec
push
icebp
test
and
mov
adc
lds
pop
testl
lcall
out
lds
push
dec
mov
mov
lret
jge
ljmp
or
fwait
cmp
roll
mov
jge
imul
dec
cmp
xchg
lods
xlat
xor
dec
test
add
dec
inc
pushf
push
addl
mov
lds
mov
sahf
cld
xlat
in
push
mov
pop
push
or
ss
jl
cld
negb
pop
sbb
jno
mov
dec
aaa
xor
repz
mov
fidivrs
dec
loopne
cmp
adc
int
leave
adcb
or
testl
jne
sub
je
shll
or
pushf
inc
pop
loopne
andb
ds
mov
cmp
rolb
xchg
dec
pop
add
jo
ret
lds
pop
enter
xor
xor
push
add
mov
nop
fistps
xchg
pop
gs
jbe
adc
rolb
xchg
push
add
out
xor
mov
cmpb
js
xor
jbe
or
lock
outsl
push
mov
mov
test
mov
add
test
sub
lods
inc
adc
mov
fildll
dec
call
fstps
cmp
pop
lods
repz
aaa
pop
and
in
add
repz
xchg
fwait
pop
ds
cmc
inc
icebp
hlt
cmpb
or
or
ss
out
jbe
dec
jl
ss
ljmp
negl
movsb
or
jge
ss
out
pushf
sahf
jle
inc
add
das
sbb
xlat
dec
inc
jle
sbb
lcall
rcll
sub
dec
js
hlt
mov
sub
sub
bound
jne
aas
sbb
test
leave
mov
cltd
jmp
jg
inc
mov
mov
je
cmp
jle
xlat
pop
repnz
cmp
xor
or
sarb
es
mov
cld
cld
andb
sbb
inc
mov
bound
mov
add
xchg
sbb
cltd
scas
lret
jg
sub
pop
xchg
test
rorb
test
cmp
mov
mov
arpl
aam
bound
movsb
dec
mov
or
jbe
movsb
sub
dec
ficoms
les
les
repnz
jmp
shrd
mov
lahf
add
out
and
jno
fwait
inc
repz
imul
jle
jne
test
iret
pop
xchg
cmp
mov
xor
into
ljmp
or
pop
roll
add
lock
mov
dec
add
enter
arpl
add
inc
cltd
mov
andl
fnsave
arpl
mov
fcoml
mov
jecxz
mov
pop
add
pop
sub
shlb
push
shlb
hlt
in
mov
sub
ret
mov
icebp
lahf
push
mov
and
out
jbe
cmc
outsl
adc
cmovnp
insl
inc
cmpl
loopne
test
rclb
cmp
xor
out
mov
mov
xchg
pop
inc
dec
mov
adc
fs
jo
repz
loopne
adc
subb
hlt
pusha
jl
xchg
pop
sbb
mov
stos
bound
int3
mov
rep
lret
mov
mov
jne
sub
adc
inc
into
mov
addl
push
test
pop
shll
stos
mov
lock
aas
cmpsl
aam
in
push
fadds
cmc
cld
lods
push
lcall
andb
aas
stos
xor
stos
addl
insb
mov
jns
cmp
mov
testl
aas
jbe
cmp
mov
shlb
daa
push
mov
sbb
jg
push
fnstenv
push
pushf
mov
push
dec
sbb
dec
ljmp
jecxz
bound
lods
sub
or
pop
mov
xchg
divb
and
mov
test
addr16
dec
pop
in
jne
imul
test
lahf
insl
push
gs
push
jl
xchg
mov
jmp
fwait
mov
scas
mov
sub
push
cmp
mov
and
cmp
cmp
outsl
push
mov
int
mov
adc
fmull
iret
fs
bound
int
outsb
add
push
stos
and
movsb
into
mov
sub
stos
cmp
stos
cmp
nop
mov
push
ss
cmove
pushf
xchg
out
ret
movsl
ss
mov
jno
nop
inc
rcr
bound
mov
pusha
out
mov
aaa
adc
cs
add
icebp
jle
test
lcall
inc
push
dec
mov
lods
add
fcmovne
push
adc
mov
vfrczss
jl
cmpsb
mov
pop
jle
sbb
cwtl
mov
aad
jbe
out
test
rcrb
stos
jo
mov
jnp
insl
es
in
cld
lcall
mov
aas
sbb
sbbb
enter
sbb
mov
cmc
xchg
lock
sub
into
shrl
mov
inc
dec
mov
mov
daa
testb
out
loop
pop
test
shll
xchg
inc
inc
push
dec
mov
fnsave
add
in
or
pop
scas
xchg
enter
pop
test
lahf
lcall
popf
jge
jne
in
rcrl
mov
insb
pop
dec
xchg
or
fadds
lods
iret
fnstcw
in
sub
test
rclb
xor
push
mov
cwtl
std
in
test
imul
dec
push
push
adc
push
cmp
cs
in
je
jle
mov
popa
cwtl
pop
imul
sbb
insb
hlt
fsubl
fst
mov
sub
cmp
scas
mov
mov
fsub
dec
in
lcall
ret
nop
add
push
stos
jne
push
add
sbb
add
xor
loopne
enter
test
cmp
call
syscall
bound
sub
push
pop
stos
or
pusha
lea
adcl
stos
mov
loope
inc
leave
stc
push
pop
jae
xchg
mulb
mov
rcll
lods
add
enter
movsb
imul
mov
sbb
xor
aam
push
out
xor
mov
push
ljmp
repz
mov
in
test
mov
mov
sbb
fists
jge
push
daa
call
js
add
loop
adc
mov
icebp
les
cmp
ret
insb
je
rorl
push
pop
int3
and
das
popf
jg
cmp
icebp
xchg
je
lahf
xor
cwtl
push
inc
xor
loopne
push
jo
aaa
js
xchg
aam
xor
rcrl
in
dec
sbb
orb
fisttpll
js
fidivs
pop
jne
mov
inc
movsb
scas
roll
sub
cmp
mov
cmpb
out
mov
popf
aas
pop
push
xor
fdivrl
sub
ljmp
xor
sbb
test
int
adc
dec
and
cmp
aaa
add
jge
and
je
lock
std
push
fwait
and
sub
cmp
fndisi(8087
xchg
and
gs
or
push
fimull
rcr
ficoml
push
push
dec
jecxz
in
stos
dec
iret
or
ljmp
jno
mov
imul
add
and
jnp
sbb
mov
mov
push
lahf
cmp
mov
je
lea
jecxz
ror
mov
and
sbb
sub
std
or
and
xchg
and
fsts
cmp
or
lea
popa
data16
fists
fs
pusha
sbb
imul
xor
sbb
les
cwtl
adcl
add
sbb
add
movsl
je
jno
loope
adc
xchg
sub
daa
in
cli
jecxz
xlat
aas
mov
cltd
and
data16
aas
lock
sar
ror
push
or
xchg
add
ja
loope
sbb
arpl
add
sbb
stos
and
sbb
push
cmc
lock
xor
test
pusha
incb
aam
dec
dec
out
xor
shl
pop
loopne
inc
or
sub
fnsave
popf
push
and
subb
sbb
xor
fcmove
mov
jne
xchg
addr16
xor
add
enter
sbb
lahf
addr16
mov
push
enter
or
dec
aad
popf
sub
je
xchg
xlat
inc
xor
xlat
test
rclb
pop
iret
subl
cmpl
mov
pop
jmp
add
or
scas
or
cltd
sub
inc
lcall
scas
push
pop
sbbb
pop
and
pusha
jns
fcoms
es
xchg
sbbl
cs
push
out
fsubrl
cli
xchg
jns
jp
mov
jae
push
cmpb
jbe
add
jbe
ljmp
adc
loope
pushf
add
xchg
repz
insl
jae
les
xor
mov
out
mov
outsl
jmp
jnp
scas
repnz
push
or
or
in
jns
jl
sahf
icebp
call
repz
push
mov
int
mov
fidivs
jmp
dec
nop
imul
ret
push
mov
push
out
popa
lcall
mov
pop
loope
mov
jno
lret
dec
cmp
das
pop
mov
adc
loopne
and
sbb
sbb
dec
mov
pop
adc
out
testl
fstl
popa
test
aam
jbe
jge
xchg
js
popf
sub
jg
in
gs
std
or
jnp
mov
ss
sub
stc
mov
cmp
lds
sub
or
xlat
adcb
pop
pop
xor
mov
inc
jbe
movsl
lcall
outsl
icebp
or
cmpsl
adcb
xchg
nop
repnz
jmp
inc
and
fs
orb
cmc
inc
rorl
das
fsubp
push
jle
cltd
xchg
lcall
or
test
dec
sbb
cmpb
std
mov
cmp
test
dec
cmpsl
cmp
fldt
jle
outsl
pop
dec
repz
ret
jge
jne
movsl
mov
movsb
cmp
sub
inc
xor
cmp
inc
jmp
mov
cmp
insl
out
mov
push
scas
mov
mov
lcall
outsl
dec
mov
scas
mov
add
aam
loop
xchg
ftst
lds
mov
outsl
dec
iret
xchg
and
push
lock
jb
int
sbb
fsubrl
stos
popf
into
out
lret
xor
enter
dec
mov
icebp
lcall
mov
jg
daa
sarb
loope
iret
pop
mov
pop
dec
mov
mov
adc
jno
push
fdivr
mov
or
ds
loope
daa
imul
insl
call
cmc
ret
int
jmp
ret
and
jl
arpl
push
vmread
add
cmpsb
push
fisubrl
lret
mov
pop
pop
imul
cmp
pop
lods
mov
shlb
mov
lods
nop
pop
out
jecxz
push
mov
movsl
stos
fstps
mov
je
push
lcall
cmp
insl
ljmp
adc
sub
mov
and
xor
fldenv
insb
in
shrl
test
in
sti
cmpsl
sbb
fisubrl
insl
pop
inc
aad
push
movsl
pop
pop
dec
neg
lcall
xor
test
stos
add
dec
xchg
loopne
dec
out
shll
mov
mov
jmp
mov
sti
cwtl
pop
dec
aas
hlt
xchg
pop
add
inc
test
imul
test
jb
imul
out
lcall
ljmp
es
into
adc
push
cld
xlat
lahf
adc
push
aam
out
jne,pt
in
loope
mov
ret
and
pop
test
lret
nop
xchg
cwtl
cmc
aam
lods
sub
fwait
adc
mov
stos
and
fstl
stc
stos
cmp
call
sub
dec
popf
insb
jns
adc
lods
xchg
aas
jnp
ss
pop
sub
nop
dec
add
mov
imul
lds
xchg
jo
in
subl
test
std
sarl
data16
mov
inc
lret
add
das
push
add
jnp
jge
lret
pop
dec
test
popl
xchg
lea
jbe
arpl
pop
mov
das
lcall
pushf
or
fimull
scas
syscall
sarb
lea
xchg
cmp
mov
xor
cmp
push
icebp
xor
roll
or
out
and
push
gs
push
icebp
jp
leave
fidivrl
push
inc
push
in
jae
dec
cltd
fisubrl
dec
and
push
adc
dec
loopne
les
test
out
pop
mov
pop
sbb
repz
ds
pushl
xchg
movsl
mull
sub
orl
sbb
pop
inc
es
les
and
cs
inc
nop
sbb
jecxz
sub
mov
pop
mov
les
out
outsb
out
rorl
add
lea
pop
enter
in
sub
fwait
daa
xchg
mov
mulb
data16
incb
loopne
mov
negl
inc
gs
stc
jns
arpl
or
mov
inc
mov
pusha
push
ljmp
mov
sub
dec
lret
lock
imul
add
or
lcall
imull
cmovge
jp
dec
inc
lock
xor
sbb
lcall
mov
xor
movsb
and
xchg
jle
movsl
pop
lea
cmp
les
push
imul
addr16
jecxz
push
jecxz
imul
add
jno
leave
mov
popa
js
push
out
sarb
out
and
and
stos
push
pop
mov
lahf
or
sub
inc
pop
jle
jno
out
mov
into
mov
push
clc
out
lret
push
cmp
xchg
sbb
cltd
or
repnz
pop
stos
mov
outsb
mov
dec
lds
call
imul
jp
sahf
push
ja
test
loop
rcrb
push
mov
mov
mov
out
nop
loopne
out
adc
fwait
sti
push
ret
rorb
jb
cmc
addl
popa
push
je
ret
outsl
inc
ja
aaa
repnz
cmp
ret
jns
add
imul
mov
sahf
and
lea
pop
sarl
cmp
mov
mov
sub
fldl
mov
dec
mov
or
ds
adc
mov
xchg
je
cmp
daa
mov
andb
cmpsb
repnz
lock
fnstsw
inc
and
cli
sbb
into
mov
or
nop
in
inc
ss
js
xchg
mov
mov
jle
shl
fmuls
xor
in
pop
xchg
mov
pop
add
out
loop
mov
out
or
jns
and
imul
push
jl
sbb
aam
add
out
mov
imul
jo
jb
jle
clc
out
adc
popf
in
dec
shl
js
loop
das
aaa
sub
repnz
mov
xor
shll
dec
pop
fxch
popw
dec
aas
cmc
stos
inc
adc
mov
mov
jb
push
mov
push
clc
mov
sub
hlt
ret
push
ret
scas
dec
or
scas
cwtl
push
inc
jecxz
jns
lahf
mov
xchg
cli
inc
add
dec
and
ds
xchg
jg
or
add
push
iret
gs
push
xchg
xchg
loopne
pop
pop
ja
pop
hlt
loope
adc
pop
push
adc
insl
ret
scas
pop
daa
xchg
les
xchg
movsb
adc
xchg
pop
or
lahf
jmp
inc
mov
push
mov
outsb
arpl
int
cmp
pop
mov
xor
lock
call
pop
jns
push
frstor
scas
in
or
popa
cltd
mov
adc
out
or
pop
sub
inc
mov
nop
pop
push
es
in
push
pop
pushf
shrw
fisubrl
popw
movsl
shrl
adc
out
push
xchg
sub
cs
into
inc
mov
jle
adc
out
xchg
cmc
sbb
mov
and
in
daa
adcb
lcall
cmpsb
mov
ficoms
sub
xchg
test
adc
xchg
jle
pushf
fistpll
insb
xchg
stos
mov
push
jbe
jle
in
add
lods
xchg
add
test
aas
mov
mov
adc
loop
push
pop
xchg
sub
les
xor
sbb
int
xorl
in
push
and
sbbl
and
out
das
test
lret
xor
sbb
mov
cmpsb
rolb
fcomp
or
and
jge
sbb
cmp
push
popf
mov
xchg
push
lcall
mov
pop
push
jne
sbb
daa
pop
dec
xor
add
add
fnstcw
mov
icebp
popa
xchg
inc
adc
pusha
inc
bound
fsts
mov
sub
jo
lea
call
fcmovnbe
lcall
rorb
dec
inc
xchg
popa
jmp
cwtl
shrl
push
inc
xor
add
jp
push
imul
sahf
adc
adc
mov
and
fldt
jae
mov
scas
decl
mov
dec
imul
cwtl
jl
incb
add
aam
cmp
mov
add
pop
addb
pop
or
push
adc
pop
push
mov
xchg
cld
xchg
sub
dec
adc
jl
je
pop
mov
imul
out
add
pop
sbb
cmp
repnz
push
sub
ljmp
push
sbb
push
xchg
sbb
outsl
adc
xlat
sahf
or
mov
ret
add
xchg
adc
rclb
push
sahf
inc
pop
sbb
lods
loop
ficomps
cltd
push
sar
aas
push
movsb
adc
sub
and
dec
add
stos
jne
outsl
lahf
fisubrs
ret
dec
rcll
and
lcall
loop
cmpb
inc
cmpsb
into
loop
mov
jno
xchg
test
outsb
inc
mov
adc
pop
push
pop
adc
aas
std
es
dec
shlb
push
dec
mov
int
fsubrl
aas
icebp
andl
or
inc
pusha
cmp
in
insb
out
dec
push
xchg
mov
loopne
pop
and
mov
test
xchg
movsb
pop
test
in
push
cmp
repnz
add
xor
daa
enter
fmulp
lds
ret
inc
not
fidivrs
pop
mov
int3
sub
addl
popl
xor
ret
in
adc
fdivrl
repz
movsl
adc
ljmp
scas
in
add
stc
add
push
jecxz
and
and
inc
in
xor
mov
test
mov
mov
and
jp
add
push
je
psraw
shlb
push
jb
loop
idiv
fmull
xchg
stos
shlb
inc
mov
movsl
lods
inc
cmp
add
lret
lret
pushf
add
das
addr16
in
repz
mov
iret
sub
sti
test
xchg
push
dec
sti
pop
out
fbld
shrl
mov
les
arpl
enter
sbb
dec
pop
cmp
add
fisubrs
inc
out
jne
mov
xor
in
imul
xchg
shrb
xorl
dec
dec
sti
and
adc
sub
lds
xor
jg
cmp
sub
dec
cltd
cmp
mov
or
dec
jnp
nop
repnz
xor
push
ret
lcall
jge
mov
subl
pop
mov
mov
or
pop
lret
bound
mov
cmp
int3
add
jae
inc
int
ss
pop
pop
int3
mov
test
xchg
jns
mov
pop
xchg
addr16
mov
dec
js
hlt
adc
mov
ror
inc
inc
lret
lret
test
mov
out
dec
inc
int
rol
dec
sbb
mov
aas
mov
lods
mov
icebp
sub
fmuls
adcl
movsb
lods
xchg
imul
or
inc
pop
push
dec
cmp
sbb
jmp
insl
inc
push
loope
cmp
repz
mov
outsb
fsub
loopne
ret
jbe
fld
or
divb
repz
lock
lahf
cwtl
cmpsb
push
pop
imul
xchg
outsb
pop
fwait
mov
ficoml
imul
adc
inc
cwtl
cwtl
pop
outsw
addb
repnz
scas
mov
or
cmpsb
push
das
cmp
jo
enter
ss
loopne
mov
roll
sbb
aad
adc
mov
lds
in
push
or
mov
jle
sub
mov
rol
sub
jnp
gs
pop
pop
mov
popf
lret
xor
add
push
aad
stos
mov
sbb
dec
and
dec
aad
and
fwait
scas
or
add
das
cmpsb
inc
stos
movsb
in
mov
mov
adcb
push
jae
shll
lock
loop
mov
scas
jl
add
setp
rolb
stc
mov
aas
dec
sbb
repz
mov
jbe
cmpsb
aad
xor
insb
jmp
push
int3
cmp
jle
mov
fptan
sub
out
cmp
jo
int3
jae
inc
hlt
mov
call
push
popf
and
xor
jle
add
mov
cli
pop
add
stos
mov
jne
cmpsl
xchg
rcrb
insb
xchg
and
cmp
jno
das
push
pop
pop
inc
fisubrs
loope,pt
stos
or
int
enter
and
fnstenv
aad
sbbl
xchg
insb
repz
xor
xchg
in
add
pop
jbe
mov
pop
mov
fiaddl
cld
or
fstsw
and
pop
ja
jne
jno
fiadds
dec
jns
xchg
dec
and
dec
sahf
lock
stos
xchg
fistpll
mov
loop
inc
shr
das
lods
pop
pop
je
mov
fsubp
mov
push
cmp
xor
cltd
sbb
ss
push
enter
adc
fldcw
sub
test
mov
lods
addr16
inc
jl
sub
call
gs
sbb
pop
xchg
test
insb
insb
mov
pop
mov
lret
shrl
call
adc
imul
cmp
fdivl
roll
jmp
lahf
xchg
pop
xor
jmp
and
adc
add
mov
int3
mov
fsubrl
bndldx
push
imul
jle
or
movl
inc
mov
ljmp
mov
pop
xchg
and
jnp
jle
and
cmp
adc
std
imul
subb
daa
pop
or
adc
xor
dec
sahf
push
dec
mov
xchg
inc
test
enter
jae
sbb
jo
pop
das
sub
push
outsl
push
mov
cli
fcompl
testl
push
ljmp
mov
pop
pop
jb
js
adc
lods
in
lahf
push
push
push
das
cmp
mov
and
bnd
cld
jns
jno
cmp
xor
imul
movl
xor
cli
adc
or
or
aad
movsl
xor
ja
mov
scas
sub
mov
cmp
adc
adc
movsb
sbb
sti
lahf
cmc
in
loop
daa
std
xchg
mov
addr16
inc
movsl
cmp
push
sub
or
inc
test
inc
mov
ret
stos
mov
ss
sti
dec
adc
stos
hlt
jne
add
test
insb
adc
push
cmp
hlt
add
xchg
rorl
or
fisubs
dec
adc
fidivrl
movsl
lods
mov
outsb
jnp
push
pop
inc
pushl
pop
repnz
mov
or
push
movsl
adc
out
pop
lds
scas
and
rcrl
pop
int
hlt
mov
movsl
dec
mov
psubusb
sbb
lods
xchg
frstor
mov
pop
pop
mov
push
sub
fadd
inc
xchg
les
fnstsw
jle
adc
ljmp
jne
aaa
xor
mov
lock
test
cmp
mov
add
sbb
out
add
ljmp
sti
cmp
mov
cmpsl
lret
fwait
mov
mov
dec
sahf
aad
sbb
icebp
ja
test
ss
in
les
jnp
xchg
or
ficoms
and
dec
rep
pop
push
cltd
iret
pop
enter
add
outsl
cli
mul
sub
mov
adc
shrb
pop
aad
sub
js
cmp
mov
adc
sarb
push
xchg
dec
dec
xorb
cmp
mov
and
jo
testb
xchg
cmpsl
ficoms
push
loope
movsl
sbb
pop
scas
dec
js
jo
xor
fstps
xchg
mov
mov
enter
lret
push
mov
popa
pop
orl
in
jno
lcall
add
jmp
pop
sar
ss
sbb
stc
gs
in
push
popf
add
mov
in
mov
lods
mov
int3
lret
xor
mov
jns
insl
or
outsb
mov
push
insb
mov
mov
mov
pusha
mov
popa
jp
and
sub
mov
dec
mov
cmp
pushf
inc
cld
dec
nop
pop
mov
nop
ja
mov
ja
pop
jp
nopl
cmp
xchg
lahf
mov
rcrb
ret
out
dec
cmp
and
out
stc
pop
movsb
lret
dec
mov
sbb
and
jp
sti
iret
mov
lret
out
pop
push
jmp
and
add
into
mov
addr16
xchg
jmp
pop
mov
jae
cs
loopne
into
call
sti
aam
dec
jge
add
jae
enter
icebp
js
jg
lret
cmp
outsb
mov
and
sub
enter
pop
stos
idiv
push
cld
and
popl
clc
mov
pop
push
mov
imul
das
xor
jl
jl
aam
or
push
push
sahf
popl
push
xchg
inc
xchg
and
lcall
xchg
int
cld
mov
mov
ljmp
adc
stc
repnz
mov
pushf
dec
push
loopne
mov
mov
sbb
mov
xchg
xchg
outsb
movsb
and
sbb
cmp
arpl
or
ret
leave
ds
cmp
inc
pop
mov
push
je
sar
mov
xor
jmp
ja
or
addb
push
ss
or
mov
cld
in
push
cmpsl
cmc
jns
fs
pop
lea
push
jb
dec
imul
xchg
lea
and
imul
fmuls
out
enter
cmpsl
sahf
cltd
inc
mov
xchg
lock
xchg
call
ss
mov
stos
shlb
in
jecxz
jb
dec
pop
div
pushf
lock
or
inc
mov
mov
out
sub
stos
or
popf
xor
add
dec
incl
cmc
pandn
push
dec
rorl
in
add
mulb
pusha
jp
out
cwtl
dec
mov
mov
mov
inc
push
loope
mov
leave
mov
sahf
push
adc
lock
add
sub
xor
mov
rcll
pushf
jnp
xchg
mov
xor
out
sub
lods
daa
test
pop
push
xor
fsubrs
lret
or
cmc
jns
daa
mov
cmp
insb
lahf
out
sarl
add
pushf
or
mov
pop
adc
loope
fwait
loopne
loop
leave
dec
js
lea
push
mov
adc
pop
mov
movsl
and
in
fbstp
adc
or
xchg
push
mov
lds
mov
movb
test
push
mov
jp
iret
xlat
mov
pop
ss
arpl
fs
jg
outsl
hlt
ljmp
insb
cli
test
repz
lret
insb
pop
fs
sarb
lahf
dec
loopne
sub
fchs
push
scas
stos
loop
mov
add
jg
fldl
dec
cmp
clc
out
mov
pop
mov
out
cmpsl
ss
aaa
cmp
pop
inc
cmc
in
leave
push
xchg
xchg
movsl
in
hlt
in
test
sbb
inc
sbb
jp
pop
dec
xor
push
lock
dec
adc
loopne
gs
or
pop
cmp
out
jae
lea
ja
test
test
je
inc
xlat
popf
fldcw
xchg
scas
pop
mov
xor
imul
call
orb
inc
pushf
std
sub
lods
loop
sbb
nop
push
inc
arpl
xlat
xchg
les
mov
or
jns
out
int3
inc
outsb
mov
arpl
or
jnp
out
mov
aad
sbb
push
add
icebp
loopne
jo
mov
inc
add
xchg
add
shll
mov
shlb
pop
shll
and
xchg
addl
inc
ret
xor
subl
and
dec
pop
in
add
leave
in
xor
repz
push
dec
adc
dec
adc
je
mov
jns
mov
jmp
pushf
or
out
sti
or
lea
enter
sti
leave
nop
inc
xchg
les
inc
in
mov
clc
xor
mov
jb
adc
lock
inc
or
cld
dec
inc
push
xchg
xorl
mov
pusha
int
inc
stos
xor
insb
shll
or
lods
or
out
movzbl
test
mov
rolb
adc
sub
in
fwait
in
jbe
sarl
inc
jecxz
cmp
cs
stc
lret
lret
nop
push
add
push
lock
sti
popf
ret
cmpsl
arpl
insb
mov
dec
imul
and
jg
repz
mov
ds
popa
dec
and
push
test
jne
stos
pop
adc
xchg
push
jg
popa
ret
pusha
and
sbb
push
lcall
mov
data16
pop
mov
lahf
mov
test
mov
mov
hlt
xor
outsl
loop
sub
scas
adcl
jecxz
or
jecxz
dec
xor
dec
int3
push
sbb
jmp
repz
out
into
sbb
mov
or
je
out
fstps
std
std
jbe,pn
mov
inc
sbb
into
xchg
xor
pop
adc
sar
jp
shll
hlt
jae
js
cld
add
repz
cld
inc
sti
adc
xor
movb
pop
outsl
or
mov
js
pusha
fucomi
imul
and
pop
cmp
mov
push
int3
lds
inc
xchg
in
mov
push
negb
add
int3
out
dec
jecxz
pop
mov
jbe
sbb
out
fldcw
jo
push
jo
idivl
dec
mov
cs
test
jbe
mov
pop
lods
and
mov
adc
lds
sbb
push
cmpsl
cmc
and
pushf
dec
xor
xorb
sbb
insl
ja,pn
dec
push
loop
mov
add
aaa
xlat
cmpsb
fwait
cmp
call
mov
je
inc
mov
xor
shlb
push
push
mov
push
ret
andb
sub
movsb
push
into
insb
pop
sbb
out
mov
call
cmp
aad
inc
repnz
sub
and
xor
pop
ret
mov
mov
orb
sahf
xchg
decl
xchg
imul
or
leave
je
fdivrl
shrb
or
cmp
data16
mov
jno
ja
fsincos
out
les
fwait
sub
pop
cld
cmp
int
xchg
jmp
fbld
sub
and
cmp
mov
xor
pop
pop
add
imul
aas
and
jecxz
int3
push
pop
sarl
push
pop
add
lea
js
es
mov
cmp
loope
dec
cld
in
fsubl
jge
cwtl
fbld
mov
push
mov
mov
bound
out
sbb
enter
out
loope
sub
xor
call
or
xchg
in
xchg
dec
xor
cli
ret
push
mov
stc
into
fwait
inc
cli
adc
sub
and
jae
outsb
and
push
xchg
inc
rcr
jbe
es
mov
mov
adcl
loop
xor
mov
ss
lock
push
lahf
scas
adc
out
in
or
test
add
jb
sbb
xchg
dec
popf
pop
mov
mov
popf
icebp
and
sub
push
jmp
lock
dec
sbb
jns
bts
loop
rcr
repz
scas
out
cmp
pop
mov
cmp
jg
inc
mov
xchg
cmp
push
mov
mov
dec
ret
pusha
fists
jns
jge
dec
inc
adc
push
xchg
jnp
mov
hlt
dec
dec
jo
ljmp
daa
or
test
xchg
jl
mov
and
pop
mov
mov
divl
js
push
and
dec
fs
sub
dec
lea
cmpsb
out
mov
pop
mov
jg
push
lcall
jb
jbe
jge
subl
sbb
push
inc
dec
rorl
fstpt
enter
dec
add
fdivrs
loop
cmpsl
fcompl
inc
inc
shlb
mov
xor
inc
pop
aad
jb
mov
ret
int3
negb
pusha
pop
cmp
sbb
mov
inc
and
xchg
push
in
and
xchg
mov
aaa
leave
pop
in
out
sbb
je
pop
rcr
push
imul
adc
inc
sbb
mov
push
iret
jb
cmc
repnz
jae
mov
leave
jp
mov
add
fsubl
lods
pop
arpl
add
cwtl
adc
mov
or
pop
pop
mov
xor
movsl
push
adc
insl
pop
push
out
imul
out
dec
pop
into
sub
test
jb
mov
das
enter
out
lods
cmp
push
xor
cmpsb
bound
mov
arpl
inc
nop
cltd
aad
inc
outsw
xchg
call
mov
lret
xor
test
inc
scas
jno
push
cmpsb
out
in
xchg
cmp
jg
addr16
xchg
into
pop
gs
inc
fisubl
pusha
jne
xchg
xchg
dec
loop
stos
outsb
pop
fnstcw
ljmp
stos
push
icebp
cwtl
ret
cmpsl
pop
aaa
dec
insb
fnstcw
imul
adc
lret
mov
mov
xor
jo
pushf
sti
bound
push
mov
out
lods
divl
push
fwait
imul
push
dec
shll
cld
mov
lods
or
imul
jmp
pop
daa
fcomps
loopne
and
sub
jae
imul
pop
add
cmp
pop
scas
mov
or
cmc
jmp
push
adc
rol
jbe
int3
push
out
loop
imul
imul
push
xor
dec
add
or
jbe
mov
add
pop
jmp
popf
dec
addl
pop
mov
or
inc
mov
sub
addl
aam
imul
addr16
xcrypt-ecb
cmpsl
mov
inc
fadds
shrb
loopne
imulb
cmp
cmp
mov
cmp
adc
fwait
push
addr16
lcall
loop
es
in
sbb
stos
jnp
in
cmp
popf
aas
and
or
cs
out
pop
incl
xor
inc
jmp
out
dec
das
push
xchg
cwtl
pop
mov
push
fwait
test
in
add
sbb
arpl
enter
test
mov
inc
ds
xchg
sbb
push
repnz
fstpt
sub
xchg
or
or
cmp
mov
push
mov
lods
ret
cltd
dec
je
inc
js
and
cmp
clc
cmc
dec
mov
xor
cmp
mov
jns
mov
xchg
cmp
mov
mov
das
lahf
pop
fwait
lock
xchg
cmp
nop
scas
jl
rorl
sub
dec
pop
les
test
fldcw
xchg
xchg
arpl
imul
cmp
pop
push
iret
cmp
lret
inc
adc
or
jge
jb
popa
cmp
cmpsb
out
test
pop
inc
adcb
lods
inc
inc
je
je
jecxz
fcmovnbe
enter
add
and
loope
push
out
cmpsb
xchg
fcoml
loopne
sub
cmp
xlat
leave
mov
mov
xchg
xor
pop
sub
loopne
loopne
jge
lock
xchg
add
add
pop
mov
push
or
notb
aad
push
jecxz
add
notl
cmp
cmp
jp
js
dec
jae
je
sub
aaa
jecxz
cmp
or
lock
jne
adc
or
cs
jae
xor
pop
out
jo
lds
leave
movsl
xor
add
fildl
mov
sub
loopne
xchg
xchg
xchg
cwtl
xchg
push
movsl
pop
inc
xor
je
xor
scas
das
pushl
sub
jle
shl
xchg
cmp
adc
icebp
insb
xchg
call
lods
xchg
mov
das
mov
shrl
sub
clc
mov
xorb
add
jp
adc
mov
dec
push
daa
add
in
jne
dec
loope
testl
cld
pusha
stc
sbb
sub
iret
call
pusha
test
and
idivb
sbb
loop
mov
hlt
loopne
or
mov
aas
xchg
cltd
in
xchg
mov
imul
lds
ja
lods
popf
in
shrb
push
mov
inc
adc
jne
push
sub
loopne
inc
or
inc
cmp
insl
scas
add
je
fnstsw
mov
aas
fidivs
outsl
scas
pusha
lods
cmp
std
xor
xor
dec
lahf
lea
cmpsb
xchg
push
pop
mov
mov
mov
jae
notl
pop
sbb
mov
adcb
or
cmp
out
pushf
lods
stc
aaa
add
fistl
mov
sub
and
scas
insb
cmp
sar
out
mov
jl
outsl
pop
mov
les
or
addr16
sbb
xchg
outsl
jb
push
cld
es
pusha
push
xchg
jmp
fcmovb
mov
cmp
or
mov
cmc
sub
sbb
cmpsl
pusha
cmpsl
add
jl
stos
js
mov
pusha
add
lods
adc
dec
jo
sahf
cmp
or
jmp
pop
std
mov
pop
fstpt
jns
jle
push
jb
stos
jb
pop
roll
pop
jle
ds
push
pop
dec
mov
pop
out
jge
imull
hlt
mov
ss
or
lock
jl
mov
cmp
xchg
cmp
cld
inc
mov
jmp
mov
jb
cli
ret
mov
xlat
add
into
dec
call
jne
cli
jne
push
lret
xor
push
je
data16
mov
mov
fldt
jne
sbbl
pop
sbb
stos
inc
pusha
add
lret
adc
insb
mov
jle
push
fcompl
xor
bound
mov
push
mov
and
push
cmp
jmp
cmpsl
out
adc
mov
push
js
push
pusha
nop
iret
cmp
div
aaa
sbb
mov
lret
enter
inc
sahf
xor
imul
in
loop
in
xchg
jmp
adc
xchg
push
pop
and
xchg
aas
adc
add
jecxz
icebp
inc
or
jg
add
lods
fistps
sbb
jns
js
shrb
cltd
jbe
shlb
fstl
xor
loope
fadds
dec
aaa
sbb
andb
xchg
adc
shrb
imul
sti
in
pop
xchg
pop
insb
sub
adc
lods
jle
add
pusha
repnz
call
jle
jne
cmp
and
fldt
sarb
loope
jge
xchg
cmp
mov
push
cmp
addl
std
push
aaa
movsl
xchg
cmpsb
mov
jbe
out
sbb
test
push
stos
enter
dec
aad
cs
sbb
fistpl
sub
push
push
mov
inc
xlat
sarl
sub
jnp
sub
xchg
sub
in
outsl
pop
outsb
fldcw
jl
cmp
movsl
fistl
lods
mov
or
mov
je
sbb
xchg
das
pop
aam
incb
adc
mov
push
stos
es
ficompl
gs
pusha
daa
jnp
imul
mov
dec
sub
and
push
daa
cs
adc
shl
pop
dec
cwtl
clc
aam
aad
movsb
nop
add
enter
lods
push
pop
xchg
fldt
dec
sbb
mov
sar
sti
jge
loop
out
ss
cmp
shrb
push
inc
int3
push
js
push
leave
mov
mov
nop
sub
pop
into
inc
andl
push
mov
int3
call
imul
out
cwtl
mov
sbb
in
in
mov
sbb
pop
mov
in
movsl
andl
les
scas
ljmp
stos
insb
scas
mov
in
dec
sub
movsl
cld
and
ds
and
scas
lret
jb
fidivrl
adc
jnp
mov
dec
out
repnz
sub
inc
add
pop
repnz
mov
imul
xor
insl
mov
pop
insl
jns
fsubrs
pop
or
lret
sub
and
pusha
popf
cmpsl
cmc
stos
out
inc
adc
jo
scas
out
cmc
xor
cld
mov
or
dec
cwtl
mov
sbb
iret
push
les
cltd
sbb
jbe
cmp
stos
dec
adc
mov
push
mov
int3
and
pop
pop
lret
adc
xor
sbb
sub
mov
add
pop
lret
int3
mov
sbb
jbe
push
push
or
ret
lahf
hlt
dec
arpl
rcrl
arpl
fdiv
in
js
mov
mov
xor
imul
cmc
and
stos
jp
ds
rcrb
lahf
stc
aam
pop
add
adc
or
mov
test
in
fsubrl
xor
mov
pop
or
jmp
cli
insl
xchg
ficoml
mov
adcl
sub
xor
repz
imul
xor
mov
lcall
sub
das
mov
stos
out
insl
mov
push
jno
imul
jo
rol
mov
popf
adc
in
in
daa
sbb
dec
in
lock
fimuls
push
repz
sub
push
fwait
out
mov
iret
jecxz
xor
arpl
push
pusha
add
jno
and
pop
adc
cmpsb
lock
jl
xor
push
inc
sub
cltd
cmp
dec
mov
inc
mov
xor
and
and
ret
scas
ja
dec
push
xchg
dec
lahf
mov
and
mov
iret
sub
add
sbb
aaa
xchg
mov
sub
add
aaa
mov
test
push
mov
push
stc
sbb
lods
inc
cmp
cmp
pop
mov
cmpsb
and
fcmovb
in
adc
lods
loopne
inc
mov
xchg
pusha
jns,pn
inc
rol
push
mov
leave
adc
xor
inc
cli
and
mov
rolb
xlat
loope
aad
insb
push
cmpsl
sub
cmpsb
adc
or
and
mov
iret
int3
sti
popf
bound
cmpsb
sub
push
push
inc
popf
fsubs
sbb
pop
out
repnz
dec
or
in
arpl
xchg
negb
std
test
adc
adc
xor
test
push
sub
nop
jbe
outsl
cltd
mov
xchg
mov
mov
nop
or
int
in
pop
mov
mov
xor
cmp
pop
push
xor
sbb
xor
sub
rcrl
rcll
mov
mov
ja
scas
outsb
cltd
jg
call
cwtl
xchg
sahf
cmp
adc
mov
dec
xor
test
jle
fsts
jge
aam
fwait
movb
cmp
lea
jne
dec
stc
cli
lea
sub
cmp
jo
adc
xchg
pop
das
mov
sub
arpl
inc
sbb
lds
rcll
out
inc
xchg
pop
test
sub
gs
iret
scas
cmp
push
fisttpll
add
lods
mov
mov
cli
push
outsb
or
lea
cmp
and
ja
das
or
les
in
dec
push
popa
or
ss
mov
loope
jnp
pop
jno
xchg
adc
cmp
test
jb
cmp
jmp
das
movsl
loope
int3
dec
scas
mov
pop
adc
jle
sub
push
sbb
xchg
cmpl
mov
arpl
xor
adc
jle
jbe
repnz
or
les
test
mov
fs
sub
xchg
hlt
shlb
xor
jle
xor
cwtl
inc
inc
pop
pushf
xor
jp
jl
inc
push
push
mov
fwait
sbb
das
loopne
push
aam
pop
push
xchg
movsl
test
pop
jmp
mov
mov
jbe
add
pop
dec
push
mov
xchg
mov
cwtl
sub
insl
add
lods
and
mov
mov
outsb
pop
lods
std
lds
dec
sub
aad
lock
data16
sub
or
lods
add
je
push
js
lret
and
xor
xchg
lods
mov
sahf
popf
movsl
popa
loopne
pop
jb
xchg
insl
xchg
inc
addr16
aad
cmpsl
in
in
sbb
xchg
iret
arpl
push
cli
and
gs
mov
frstor
sub
lds
mov
jns
pop
adc
stc
adc
mov
xchg
inc
test
adc
cmpsl
orb
scas
inc
mov
mulb
testl
mov
pop
test
mov
shl
mov
fs
popf
jae
inc
cmpsb
ds
sbb
cwtl
mov
mov
call
stos
inc
sbb
es
ljmp
jmp
sub
ljmp
and
clc
add
imul
loop
mov
loop
enter
adc
daa
cltd
ss
fdivrl
mov
ret
adc
cli
jo
arpl
mov
into
ret
or
mov
ja
mov
imul
hlt
xchg
jmp
mov
xchg
mov
shlb
sahf
cmp
mov
rcr
scas
xchg
pushl
rclb
movsb
jge,pn
pop
lcall
loopne
push
fcmovb
dec
push
or
dec
loopne
cwtl
sbb
ss
dec
mov
xchg
pop
cmp
dec
inc
fwait
push
add
ret
cmp
subb
jno
sub
test
mov
inc
xorb
adc
inc
inc
push
shll
add
int3
xchg
std
jecxz
jae
cs
aaa
mov
mov
in
insl
push
and
rorb
lret
inc
and
adc
and
movsb
lret
adc
es
xor
dec
gs
xlat
sbb
lret
imul
cmp
inc
mov
dec
pop
and
outsb
loop
jle
push
push
ja
inc
fs
pop
rorb
push
imul
jb
push
movsb
push
and
push
fsubr
mov
jl
cltd
pushf
xor
push
add
lock
int3
ss
sub
cmp
in
outsb
pop
in
sahf
push
fwait
jo
jnp
ret
cli
jmp
xchg
xorl
cs
mov
loop
jle
scas
and
and
push
int
fsts
pop
push
out
daa
pusha
movsb
enter
ss
int
sbb
sbbb
dec
stc
inc
or
push
andb
mov
fwait
cli
fiadds
push
jne
aad
stos
dec
bound
adc
sub
mov
fadds
mov
je
jge
mov
test
sub
mov
inc
icebp
ret
add
push
jo
imul
jp
loope
sub
xchg
mov
sbb
xor
rsm
pop
or
ljmp
test
xor
or
div
mov
ljmp
xor
ret
push
push
stc
jo
lret
lret
jno
roll
rcrb
pushf
cmpb
call
ret
jno
nop
in
push
lret
mov
ljmp
sub
add
mov
mov
jo
cmp
loopne
js
fisttps
pop
mov
test
push
cmpsl
fdivrl
aaa
push
xchg
xlat
mov
ret
add
mov
or
mov
jecxz
cmp
fisttps
fwait
or
xchg
cmp
pop
insl
pop
adc
movhps
fisttps
subb
out
jbe
int
scas
push
sbb
ljmp
decb
iret
xor
movsl
mov
das
sbb
scas
out
xlat
loop
inc
fwait
push
or
ret
adc
into
inc
divb
xor
jmp
mov
shrl
out
cmpsb
inc
outsb
inc
mov
adc
rcrl
cmp
and
shrb
mov
xchg
or
jnp
jne
and
xor
arpl
and
dec
aaa
push
aam
sbb
push
push
lret
dec
daa
imull
or
mov
jns
fstpl
loopne
cmc
sti
fisttpll
shrl
lock
enter
pusha
rcrb
jle
jno
xlat
and
adcb
mov
mov
pop
fildll
outsl
les
dec
shl
mov
push
jo
jp
pop
in
or
and
or
fisubl
or
cmp
rclb
xchg
mov
or
mov
jmp
xchg
lret
mov
and
mov
pop
mov
xor
lods
in
add
push
jae
loop
rcrl
fisttpll
rclb
pop
test
shlb
xlat
gs
iret
mov
adc
cmp
shl
inc
add
out
idiv
add
lods
and
pushf
addr16
idiv
sub
xorb
cmp
lds
loope
int
cs
fadds
sarb
sub
jl
pushf
inc
xor
cmp
cmp
aad
xor
outsb
fimull
push
mov
sbb
sub
dec
xchg
dec
mov
xchg
mov
push
and
xchg
test
lock
lds
jp
in
lcall
fidivl
ds
repz
inc
stc
sub
adc
sub
shrb
and
call
and
jo
push
stos
js
andl
sbb
scas
lds
xor
fiaddl
outsb
cmp
adc
in
jbe
mov
fdivrl
lahf
rcll
inc
lea
test
adc
fildll
inc
mov
movsl
scas
mov
jno
decl
mov
rorb
xor
cwtl
jno
or
cmp
aaa
jp
in
xchg
adc
cmpsb
repz
jae
outsb
cmovl
adc
sti
sbb
add
pop
xlat
lods
jp
test
or
push
push
dec
mov
andb
imul
jmp
out
out
fisubs
sahf
lods
out
repnz
jmp
add
mov
pop
gs
dec
pop
rcrb
mov
mov
es
daa
mov
mov
xchg
mov
loopne
sub
jbe
decb
sbb
adc
out
mov
js
cmp
sbb
jmp
pop
and
addl
stc
sbb
or
rolb
xlat
cmp
cmpsb
adcl
or
mov
sbb
movsl
xlat
or
sti
ja
movsb
xchg
dec
lods
cmp
inc
cs
jle
clc
or
xor
sbb
mov
and
ljmp
js
xchg
push
cmp
jnp
adc
mov
xchg
adc
outsb
outsb
pop
adc
iret
out
sbb
sub
stc
xor
dec
in
sarb
adc
or
mov
mov
loope
rol
mov
push
xchg
adcl
dec
pop
lods
mov
addr16
adc
push
lods
xor
xor
not
lods
mov
or
sbb
mov
repz
xor
clc
mulb
hlt
int
loope
movsl
fiadds
out
lret
dec
inc
int
es
movsb
jno
in
fs
cmp
cmc
jmp
xlat
cmpsl
sub
inc
ret
or
popa
lret
lcall
sub
push
jns
inc
inc
pop
jno
ret
imul
jns
addr16
out
in
testb
or
inc
lods
pop
cmp
sbb
xor
call
push
xchg
sub
adc
out
and
jmp
rclb
mov
negb
rolb
int3
xchg
push
das
add
fidivrs
inc
icebp
and
dec
dec
repnz
arpl
shl
mov
rolb
rcr
xor
adc
mov
inc
in
nop
inc
mov
inc
and
pop
hlt
fdivr
rcrl
sbb
sub
ret
nopl
dec
scas
mov
mov
xchg
push
cmp
fidivrl
aad
mov
call
out
adc
arpl
jb
push
aaa
xchg
xor
mov
jne
nopl
inc
clc
popf
repz
jecxz
into
add
adc
jnp
mov
cld
mov
inc
jecxz
pusha
sbb
lahf
mov
shr
mov
std
xchg
xor
and
dec
jbe
in
or
add
test
xchg
movsl
pusha
and
rorl
inc
mov
or
repz
push
mov
ret
jp
subb
les
sti
repnz
aaa
call
aaa
stc
mov
xchg
jns
jae
aas
lods
cmpl
xorb
mov
mov
lods
dec
stos
inc
sbb
push
xor
inc
enter
or
fdivrs
cmp
out
lods
fnstcw
dec
in
in
cmpsl
nop
fmull
subb
lret
sahf
jmp
nop
cld
push
pop
cmpb
das
nop
sbb
mov
cld
filds
xchg
cmp
inc
into
xchg
jecxz
repz
daa
mov
jp
popf
das
or
mov
sub
lock
outsl
inc
mov
fs
cmpsb
mov
jbe
loope
fidivrs
jmp
cs
dec
jg
lock
xchg
cmp
lea
ja
jmp
mov
sbb
enter
mov
movsl
leave
or
bound
push
cmc
pop
outsl
jecxz
and
push
fs
movsl
push
jno
ret
sub
frstor
stc
push
into
rorb
and
sahf
dec
mov
scas
xchg
insb
gs
nop
inc
dec
fwait
mov
jae
and
ret
lfs
push
push
or
sub
out
push
push
mov
pop
mov
mov
inc
jbe
sub
shrl
xchg
push
mov
inc
push
js
aam
les
add
or
xor
jbe
bound
mov
ret
std
sahf
out
test
popf
icebp
xchg
stc
aaa
shlb
jge
inc
stos
add
je
sub
jae
cwtl
popf
stos
cwtl
push
jb
dec
nop
or
mov
lods
jmp
add
sbb
mov
and
xchg
push
loopne
out
shrl
repnz
xchg
pop
jecxz
out
xchg
mov
or
fsubrl
jns
and
rcrb
movsl
sub
adc
sahf
mov
aam
mov
cli
in
lds
cmpsb
xor
mov
mov
or
gs
roll
rcll
push
push
cmp
or
hlt
jne
and
pop
outsb
out
mov
push
inc
test
add
mov
cwtl
in
adc
adcb
loope
dec
iret
dec
sub
jge
mov
and
dec
pop
rclb
mov
push
mov
ljmp
inc
inc
je
xlat
jecxz
lret
mov
pusha
push
aaa
nop
jae
mov
jno
call
mov
xchg
ja
and
rcrb
in
jb
out
sub
js
std
dec
pusha
in
test
movsl
cmp
ds
push
les
adc
inc
jle
lock
das
decb
sub
out
sub
scas
lret
in
adc
pavgb
jle
fnstenv
xchg
cld
mov
fsubrs
cmpsb
lahf
mov
xor
cmp
ds
mov
outsb
repz
test
inc
adc
sahf
sti
jle
cltd
test
scas
dec
loop
cwtl
addr16
out
push
movsl
xor
xchg
adc
inc
pusha
ja
stos
inc
fimull
adc
jb
adc
sub
xor
jae
dec
test
pop
push
mov
rol
xor
lods
arpl
mov
dec
cmc
mov
inc
push
lea
jp
popl
out
pop
stos
shll
or
mov
or
inc
in
inc
shlb
pop
jne
repnz
out
push
movsb
pop
or
adc
xor
xchg
dec
push
ret
mov
cwtl
lods
rclb
and
jmp
testb
lret
push
mov
cmp
inc
mov
cltd
outsb
or
adc
add
mov
daa
dec
xchg
lods
sbbb
and
cmp
add
xlat
xchg
xchg
mov
adcl
loope
fsubl
pusha
cmp
sbb
jmp
mov
xchg
cmpsb
les
test
aad
sti
adc
cmp
and
and
in
fsts
mov
stc
xchg
lahf
test
aaa
cmp
cmpb
scas
and
jnp
leave
fcomp
mov
notb
mov
aad
sbb
test
pushf
stos
and
push
js
xchg
mov
lds
push
xchg
jl
shlb
add
push
xchg
ficomps
push
movsl
mov
xchg
jnp
ljmp
fwait
outsl
popf
les
int
or
jl
sub
and
loop
adcl
int3
ljmp
dec
xor
iret
aad
xor
sbb
and
addr16
out
pop
outsl
loop
inc
call
ljmp
push
fidivrs
mov
mov
mov
dec
jecxz
and
ljmp
ja
inc
pop
dec
arpl
and
and
adc
ljmp
jb
inc
loop
push
stc
jae
rcrl
addb
xchg
addr16
cmp
adcl
push
jno
int
int3
mov
clc
out
push
dec
and
xchg
subb
fdivr
push
pop
movsl
push
clc
mov
in
xchg
sub
mov
jns
adc
test
fisubs
push
lea
sbb
or
dec
pop
adcl
test
sar
das
rsm
in
dec
push
mov
inc
mov
dec
mov
or
xchg
and
xchg
insb
rclb
jmp
dec
xchg
lret
mov
inc
lods
push
loopne
ret
adc
push
aas
rorb
sbb
loope
xchg
stc
in
pop
mov
subl
cmp
lret
lea
and
cmc
pop
movsb
sahf
repz
lret
jae
movsb
rolb
mov
stc
clc
dec
lea
lret
lds
mov
jge
inc
dec
add
jge
arpl
stos
mov
and
mov
cmpsl
mov
mov
jo
movsl
inc
test
icebp
mov
in
out
loopne
ret
lods
adc
fbstp
or
mov
dec
or
sbb
fisubrs
or
push
mov
int3
mov
in
mov
loop
mov
and
stos
push
ja
xchg
mov
std
inc
jno
sub
imul
push
cmp
adcl
inc
mov
dec
push
push
xor
jecxz
cmpsb
ljmp
xchg
loop
dec
lods
push
inc
pop
inc
push
mov
fwait
lock
xchg
sub
in
repnz
pop
mov
adc
pop
xchg
inc
pusha
icebp
je
dec
or
xchg
cmp
mov
sbb
int3
loopne
pop
push
fnstcw
enter
nop
out
adc
es
pop
aas
pop
or
sarb
push
mov
jp
mov
adc
lea
push
aam
mov
dec
and
call
icebp
sbb
add
add
in
xchg
pop
fdivrs
push
pop
imul
repz
jl
lea
sbb
test
adc
ret
arpl
leave
jp
push
arpl
mov
xchg
sti
dec
cmc
inc
sbb
ds
sub
test
sub
lds
or
or
or
cmpsb
lahf
pop
loopne
jle
ds
fstpt
lret
cmp
rcll
cmp
test
loope
xlat
sbb
jns
shlb
inc
adc
jmp
stos
sub
jle
idiv
aas
out
and
add
mov
jne
std
rorl
push
jnp
int
enter
mov
out
nop
push
xor
xor
test
adc
rcl
pop
sbb
fistpl
sub
leave
loop
insb
sbb
adc
cmpsb
pop
mov
xor
sbb
fwait
inc
sbb
in
stc
mov
and
gs
mov
loop
and
pop
xor
xchg
das
jo
in
vphaddwq
push
xor
dec
jo
sub
ror
mov
push
jbe
inc
sub
lcall
pushf
in
push
push
pop
pop
mov
ss
test
jge
mov
lock
fwait
mov
cltd
fisubl
inc
push
pop
adc
mov
jle
cmc
sbb
out
fstps
mov
mov
and
ja
and
xchg
push
je
add
add
dec
add
jae
pusha
xor
sub
inc
ds
mov
int
fisttpll
ss
sub
mov
rcrb
bound
stos
dec
push
xchg
lret
jns
jecxz
in
stos
fldl
scas
cwtl
scas
repz
ja
sub
mov
mov
cmp
mov
and
es
mov
scas
test
ja
or
sbb
ljmp
adc
out
cmpsb
jmp
xor
ss
inc
dec
outsb
xor
sub
insb
mov
mov
dec
sbb
inc
inc
dec
sub
ja
mov
aas
or
cltd
pop
add
push
and
arpl
inc
xor
lods
je
sbb
add
cltd
cld
aaa
addr16
stc
adc
mull
mov
pop
xchg
fisttps
movsb
movsl
xor
or
stos
and
push
push
xchg
insl
mov
dec
mov
xchg
imul
cmpsb
testl
lret
pop
lret
mov
xchg
scas
pop
adc
inc
jb
jns
enter
frstor
dec
dec
add
in
scas
xchg
jl
or
push
inc
inc
and
push
clc
and
shlb
cmovp
cmp
pop
pusha
testl
ljmp
inc
out
lcall
in
and
inc
repnz
jnp
mov
sub
sbb
cmpsl
scas
movl
in
gs
push
xor
xchg
stos
sbb
push
mov
addr16
or
mov
or
pop
hlt
outsl
ret
cmp
std
imul
fcoml
testb
push
aad
das
dec
push
xor
stc
and
inc
xor
sbb
xchg
xor
xorb
and
cmpsl
mov
inc
mov
push
jno
jmp
inc
xchg
and
addr16
ljmp
push
sbb
pop
xor
in
mov
in
mov
xchg
xchg
daa
mov
addr16
testb
aad
and
xchg
lock
xor
dec
insl
push
iret
fidivrs
stos
das
xor
dec
cltd
mov
out
push
addr16
push
xchg
xchg
gs
push
inc
loope
arpl
dec
flds
outsl
inc
fst
cwtl
or
mov
stos
pop
inc
in
or
pop
in
mov
loope
cli
out
pop
pop
xor
lret
dec
cmp
outsl
and
xchg
sbb
in
mov
subl
imul
popf
push
adc
push
cmp
mov
xor
pop
pop
mov
lret
xorl
adc
stos
pop
pushf
arpl
and
lods
pusha
in
pop
data16
push
ljmp
insb
lahf
mov
sahf
push
stos
cwtl
dec
xchg
sbb
fs
push
jns
mov
lds
inc
les
dec
andb
adc
adc
int3
call
lcall
jecxz
xor
mov
test
jbe,pn
dec
add
xlat
je
shrb
je
fisubs
xor
repz
and
cmp
enter
fbstp
push
scas
xchg
std
movsl
or
pop
mov
xor
fidivrs
add
mov
test
sub
cmc
out
popl
popa
int
push
fimuls
insb
js
jle
fcmovnb
sbb
je
inc
mov
mov
and
pusha
or
out
jle
jne
xchg
push
jo
dec
repz
inc
jecxz
ret
fimull
sub
fisubrs
sbbl
lret
aam
mov
cmp
and
adc
sbb
adc
xor
xor
or
pop
outsb
scas
ret
mov
aaa
icebp
push
in
xchg
cli
xchg
jecxz
push
test
ja
jp
das
rorb
and
xchg
cmpsb
mov
in
in
push
rcrb
mov
test
xor
loope
push
mov
std
push
push
lret
mulb
dec
or
cmpsb
xchg
adc
or
xor
mov
es
jmp
int3
cmp
adc
push
cld
jo
prefetcht2
pusha
or
je
mov
cmp
cmp
rorl
mov
jecxz
pop
enter
mov
jns
cli
cli
inc
fwait
out
pop
into
inc
add
dec
adc
mov
insb
into
sbb
sub
push
cmp
test
xchg
sbb
insl
out
dec
xchg
test
cmp
xchg
mov
insb
pop
adc
stc
mov
das
sarl
push
xchg
or
in
push
xchg
popl
lea
dec
mov
mov
cwtl
mov
jbe
dec
cvtps2pi
dec
mov
loopne
popw
ss
cmp
std
cmp
roll
mov
mov
rcrb
push
pop
pop
fwait
arpl
mov
mov
mov
xabort
aas
mov
jae
or
push
and
out
adc
rorb
jne
cwtl
inc
push
jge
jmp
cmpsl
and
sub
outsb
pop
mov
test
add
repnz
pop
sahf
push
cs
call
std
push
or
adc
pop
rcr
stc
mov
and
inc
popf
imul
out
test
cmp
and
add
mov
sub
scas
jg
out
jl
lcall
iret
xchg
ljmp
cs
inc
mov
pop
sub
jle
mov
mov
and
push
jle
xorl
xchg
ret
cmp
gs
cmpsl
jp
jmp
lds
push
std
jno
cmp
xchg
inc
in
incb
lock
dec
int3
mov
mov
pusha
out
popf
stos
lock
lods
adc
push
adc
loopne
adc
movsb
add
or
jp
xchg
rcrl
mov
push
dec
jmp
imul
scas
fisttps
sub
jnp
aaa
and
xchg
pop
out
adc
rorb
pop
mov
loopne
sbb
jne
scas
aaa
inc
in
mov
sti
mov
stc
and
sbb
test
dec
sub
or
scas
or
insl
add
xor
into
cmpsl
roll
sbb
sub
adc
div
das
mov
movsl
rcll
inc
pop
push
xchg
jae
test
imul
adc
cwtl
add
into
dec
sub
int3
movsb
xor
out
push
and
mov
fwait
cs
sub
lret
or
jne
push
loopne
int
and
or
rcll
pop
fistps
xchg
sbb
mov
outsl
scas
loope
stos
lods
addr16
mov
hlt
int3
push
mov
mov
xor
mov
dec
jno
and
mov
and
xchg
jb
fiadds
pop
insb
cs
movl
mov
ljmp
gs
mov
and
shl
in
pop
jb
mov
scas
pop
xorl
sub
cmp
mov
int
jno
xchg
bound
mov
mov
es
jmp
test
add
call
repnz
xlat
aaa
cmp
jg
es
sbb
lcall
xchg
loop
test
stos
add
jb
inc
gs
sbb
lods
xor
mov
and
and
push
cmp
popf
adc
call
add
test
push
push
xchg
rcl
ficomps
push
inc
push
push
sahf
adc
cmp
dec
push
mov
stc
sbb
pop
ss
add
xchg
cmpsb
push
out
xorb
cmc
or
pop
lcall
add
sub
jmp
aam
mov
movsb
out
jp
inc
addb
mov
push
mov
xchg
add
punpcklwd
xor
mov
inc
and
enter
add
nop
ljmp
in
pop
sbb
xchg
pop
cs
cmp
es
out
or
dec
sub
or
rcll
negb
pushf
movd
push
mov
rcl
xchg
pop
stc
adc
movsb
add
shll
push
fnstenv
in
and
adc
cmpsb
aad
sbb
jecxz
shr
adc
sarb
mov
xchg
sar
fwait
jl
out
sbb
mov
dec
sbb
fstpt
xchg
enter
push
loope
and
cmp
pop
mov
fiadds
and
push
loopne
inc
sub
sub
inc
dec
icebp
mov
jmp
clc
add
int
out
and
enter
adc
dec
fnstcw
ljmp
out
adc
std
lds
dec
cmpsl
sbb
xchg
in
lahf
stos
bound
notb
push
mov
int
outsl
fnstcw
loop
add
sub
pop
js
xlat
push
inc
mov
pop
arpl
push
out
jp
jmp
ds
pop
xchg
bound
dec
inc
mov
jne
add
adc
push
movsb
dec
or
jp
sub
mov
insb
cmp
mov
xor
push
xchg
jmp
outsb
mov
xlat
test
in
mov
js
call
test
xor
mov
idivb
dec
jnp
mov
lds
icebp
out
pop
inc
ds
mov
adcl
rcrb
pop
jae
fs
dec
adc
rcl
into
jno
leave
sub
mov
scas
pop
lods
inc
mov
sub
cmp
ficoms
sbb
daa
repnz
clc
dec
dec
enter
pop
xlat
xchg
mov
fs
mov
pop
dec
sbb
cltd
pushf
ljmp
cmp
bound
cmp
cwtl
dec
incb
scas
mov
xor
arpl
push
ja
mov
xchg
or
adc
mov
out
dec
imul
or
je
movntq
out
inc
mov
ljmp
cmp
cmpl
cs
das
aad
sub
cwtl
stos
dec
add
or
test
mov
jle
sti
rorb
out
faddp
add
pop
es
mov
outsb
or
popf
dec
add
rcrl
jnp
into
xchg
scas
fmull
lahf
js
jg
xlat
call
icebp
fimuls
rorl
sahf
stos
mov
mov
pop
je
jbe
xchg
push
scas
xchg
adc
aad
xchg
jp
xchg
test
or
inc
mov
loop
push
or
pop
cmp
enter
adc
stos
add
dec
adc
xchg
std
in
mov
push
cs
add
imul
or
pop
lods
push
int3
push
insb
ss
push
cmc
outsl
pop
test
cli
test
dec
mov
xchg
cli
xchg
pop
out
pcmpgtw
notb
ficomps
not
mov
inc
sub
loopne
insb
push
outsl
lock
add
lahf
into
or
jle
jmp
mov
int3
js
mov
stos
mov
adc
mov
add
mov
std
mov
in
jle
ds
mov
rcl
ss
mov
sub
mov
mov
sub
push
imul
insl
pusha
sub
dec
pop
mov
scas
cmpsb
add
xlat
fcmovb
sbb
jmp
or
sub
mov
rorl
out
push
gs
mov
jns
cmp
clc
movsb
clc
cwtl
sub
mov
adc
gs
cmp
jno
lret
adcb
imul
lret
mov
add
ret
das
pop
xchg
fs
pop
pop
jb
scas
or
dec
xchg
test
jge
in
push
or
stc
repnz
jp
adc
mov
sub
inc
and
popa
sub
insl
add
test
add
idivl
lret
mov
sub
test
dec
jmp
fidivl
jns
in
in
mov
push
jbe
sbb
mov
outsl
aam
imul
pop
or
push
or
sub
mov
mov
cs
inc
or
xor
cs
ja
adc
mov
push
mov
push
pop
adc
mov
paddsw
push
xchg
mov
or
ja
sbb
in
mov
orb
and
fidivrl
cmp
mov
int3
ss
jg
push
add
mov
shlb
and
add
cmp
mov
pop
adc
je
cmp
push
jge
jp
push
cld
ja
outsl
lahf
add
pop
dec
dec
sbbb
cmpsl
sbb
or
fwait
mov
es
in
ficomps
es
aaa
das
pop
cltd
cmp
dec
cmc
xchg
cmp
lret
imul
cmp
mov
sbb
push
mov
cli
push
sub
pop
lcall
int
mov
lds
jo
pop
jl
fs
je
mov
testl
fisttps
out
into
push
inc
and
sbb
or
pop
mov
inc
cltd
subb
pop
mov
jns
or
add
pusha
xchg
pusha
push
add
ret
cld
mov
scas
pop
lds
mov
mov
lods
jne
sti
mov
aad
outsb
ja
out
rclb
cmp
test
sarl
test
pusha
mov
out
stos
inc
fstpl
sub
cltd
enter
rcll
neg
mov
lods
mov
push
jb
pop
mov
adc
outsb
pop
cwtl
inc
push
in
jae
jge
hlt
hlt
cmp
cmp
adc
and
js
lret
fs
hlt
mov
or
mov
push
push
fdivrl
jnp
adc
rcrl
ret
js
neg
aam
push
push
bound
dec
ret
orb
nop
mov
mov
push
xor
sbb
sub
mov
inc
into
insl
pusha
pop
adc
dec
insl
sbb
cmp
mov
inc
add
cmpb
stc
aaa
les
or
jb
lds
ss
mov
inc
bound
jecxz
das
jns
cld
mov
xchg
xorb
add
je
push
dec
add
mov
in
movsl
icebp
and
mov
imul
cwtl
aam
movsb
sbb
bound
js
std
xor
pop
addr16
xchg
jge
sub
aam
loop
pop
pop
mov
pop
mov
pop
pop
aaa
mov
outsb
jno
push
dec
mov
hlt
sahf
jnp
jo
in
cmpsb
xchg
push
push
jmp
cs
dec
mov
outsl
test
sbb
sbb
lock
mov
cmpsl
lret
xor
in
aaa
mov
aaa
rolb
jo
xchg
sbb
cltd
int
into
out
dec
cld
mov
mov
push
jbe
jecxz
push
ds
jle
das
push
rcrl
rorl
sbb
push
ret
nop
sbb
inc
je
insl
xor
jnp
scas
inc
push
and
inc
lods
lock
mov
adc
fdivrs
punpckhdq
inc
push
adc
xor
sub
lock
cli
mov
cmp
push
jecxz
jbe
lods
dec
xchg
lret
adc
add
fcoms
jno
repz
and
inc
sbbl
ljmp
mov
mov
lea
mov
lds
cwtl
roll
fiadds
cltd
push
aas
mov
sub
lods
cs
rorb
jo
pop
mov
test
fdivp
test
sub
imul
stc
or
gs
js
mov
push
imul
or
xor
pop
fadd
dec
adcl
push
loop
pop
dec
lret
outsl
notb
repnz
imul
mov
adc
sarb
mov
scas
pop
mov
or
sub
cmpsl
popa
out
push
fidivl
add
mov
popa
mov
jns
lock
ja
outsb
inc
into
and
test
scas
mov
xor
in
pop
or
inc
add
fdivl
call
repnz
nopl
jle
imulb
add
je
fists
stos
pop
test
lock
dec
xchg
jecxz
pop
pop
pop
add
movl
in
and
push
mov
pop
cli
or
pop
ss
add
push
or
ret
lret
jne
test
jo
pop
fs
leave
mov
add
mov
lods
cmp
push
lock
mov
jp
sbb
shll
xchg
pop
mov
mov
sub
jbe
push
mov
lods
mov
jo
push
and
mov
out
and
mov
cmp
das
ret
out
inc
pop
mov
dec
add
jns
sub
jle
inc
in
xor
mov
push
nop
inc
in
int
mov
dec
insl
push
dec
sub
pop
push
ljmp
push
fwait
pop
ficompl
jge
popa
or
and
rcll
cli
xor
cmp
and
mov
aas
movsl
bound
arpl
ljmp
sahf
es
jnp
dec
pop
rcl
shll
sub
mov
cltd
insl
test
rclb
imul
push
std
cmpsl
out
aas
scas
movb
enter
ljmp
xor
cmp
or
into
rorb
popf
and
mov
mov
sbb
mov
out
popa
lret
in
popa
adc
mov
xor
add
mov
adc
fs
mov
ljmp
adc
mov
add
mov
mov
es
std
inc
adc
jne
cmp
mov
pop
push
shrl
repz
int
sub
pop
inc
insl
icebp
stos
mov
cld
mov
in
fidivrs
popa
cmc
mov
pop
mov
cmp
add
inc
pop
sbb
test
aad
push
mov
inc
xchg
push
adc
cmpsl
mov
add
and
xor
add
mov
fdivl
bound
add
aas
adc
push
sub
ret
and
stos
movsb
cltd
pop
mov
lods
mov
rorl
dec
mov
xor
xor
lock
xor
xor
ss
add
push
fstp
enter
cs
jecxz
imul
loopne
mov
mov
add
jb
xor
xchg
push
roll
mov
out
rorl
testb
dec
mov
cmpsl
push
inc
in
xchg
icebp
cmp
imul
dec
cmp
cld
adc
pop
hlt
in
je
pop
lahf
jne
sub
shlb
add
lock
xchg
sbb
push
adc
mov
jne
xor
dec
adc
xchg
xchg
ja
dec
mov
mov
and
and
jmp
jae
inc
inc
movsb
push
xchg
insb
jns
sub
push
cmc
cmp
mov
xor
pusha
in
cld
hlt
int
dec
shl
dec
push
inc
cmpsb
lock
out
std
inc
or
nop
invd
cmc
sub
and
fwait
movsl
fdivp
aas
insl
aam
stos
in
int3
dec
nop
jo
insb
mov
or
mov
cld
shlb
xchg
loope
cltd
mov
push
sub
mov
jb
loop
shl
repnz
mov
stc
cmp
ljmp
add
push
xor
mov
sbb
push
je
xchg
pop
lret
pop
psubw
imul
int
adc
pop
or
pop
movsb
sub
ja
in
mov
jne
adc
les
adc
xor
aas
jae
loope
xchg
mov
outsb
mov
cwtl
divb
mov
fisttpl
sub
xor
cmp
lahf
pop
xchg
iret
dec
int3
xchg
pop
cmp
mov
subb
stos
sbb
push
cltd
aam
mov
lcall
lock
stc
xor
or
pop
out
push
lret
sbb
in
sub
insb
out
insl
gs
in
push
pusha
sbb
xchg
mov
inc
out
and
adc
mov
lcall
repnz
popf
dec
sub
or
divl
push
clc
dec
push
lock
sarl
mov
sti
lea
fildl
mov
or
and
xor
jecxz
cmpsb
xchg
pop
pop
sub
fistpl
out
outsl
cld
pusha
jae
cld
adc
movsl
mov
insb
lcall
aad
xchg
jg
add
inc
sar
dec
gs
xor
outsl
movsb
xor
push
insb
and
popf
mov
cmp
test
clc
ret
inc
dec
mov
ds
xor
loopne
mov
pop
rolb
jg
jno
xchg
and
or
aam
lock
ds
cmpsb
ret
adc
adc
iret
xor
insl
pop
js
shll
mov
and
and
jne
sbb
add
cmp
test
cmp
and
sub
pusha
mov
roll
scas
add
std
dec
inc
into
inc
pushf
jp
push
push
aam
mov
jmp
pop
lea
fwait
lods
fadds
jge
jle
sbb
dec
mov
jno
scas
xor
and
out
push
sub
xor
jg
push
dec
pop
push
jb
sbb
mov
popf
inc
jle
in
xor
sub
xchg
lcall
inc
cltd
mov
lds
stc
scas
and
mov
ja
dec
in
xor
gs
adc
bound
xchg
insl
sahf
sub
stos
nop
idiv
jae
jle
push
stc
mov
push
cmc
xchg
jnp
sbb
lret
in
inc
les
test
xchg
ret
cmp
jb
aas
adc
push
lret
or
ffreep
dec
cmp
loope
push
sbb
inc
xlat
sbb
testb
rol
push
inc
divl
test
idivb
lds
add
mov
or
sub
dec
mov
jecxz
mov
scas
imul
or
inc
ja
scas
in
leave
loop
pop
dec
mov
je
pop
fcmovbe
fwait
out
sub
mov
jno
mov
in
mov
sbbl
mov
xchg
xor
push
shl
jno
push
int3
int3
jno
or
in
xor
and
lahf
push
call
xchg
lret
pop
xor
jb
mov
insb
mov
push
cmp
mov
popa
ret
bound
add
sbbl
ja
mov
inc
xor
dec
mov
push
mov
mov
sub
cli
fdivrl
pop
jle
mov
insb
sbb
inc
jmp
sar
and
xchg
jge
repnz
clc
jmp
push
mov
sbb
push
test
inc
cmp
fs
mov
nop
jle
insb
mov
sbb
inc
push
popa
adc
dec
fcoms
xor
push
es
jns
jno
dec
jle
mov
and
inc
in
or
xor
push
loopne
cmpsl
jbe
xor
imul
std
scas
mov
rclb
leave
sti
inc
ds
out
or
cmp
mov
ljmp
repz
dec
sbb
and
out
mov
mov
dec
gs
jle
jne
cmp
jmp
lds
mov
mov
mov
inc
pushf
int
rolb
clc
add
push
cmpsb
das
dec
mov
xor
push
pop
aas
test
orb
aam
stos
or
sbb
fimull
sti
or
imul
mov
cmp
push
stc
dec
imul
mov
repz
adc
sbb
and
push
je
stc
int3
cmp
xor
fcoml
add
xor
call
cwtl
lret
das
bound
icebp
cmp
lret
mulb
or
xor
jge
mov
lock
and
fs
pop
insb
or
dec
ljmp
leave
sub
mov
push
and
sbbl
push
push
divl
stc
mov
jp
xor
stos
push
cmp
adc
cmc
fnstcw
in
add
mov
mov
push
xor
jecxz
sub
fiadds
gs
or
cld
xor
dec
sbb
adc
pop
mov
mov
arpl
xchg
out
lods
shlb
pushl
das
test
mov
pop
dec
adc
add
loopne
push
push
in
fcmovnu
or
inc
or
push
into
pop
push
push
movsb
sahf
sbb
shrb
bound
dec
sbb
nop
adcl
xchg
mov
mov
mov
in
fsubrs
jae
add
mov
int
sub
orb
add
add
test
xor
jecxz
mov
push
mov
stc
push
jbe
outsl
aas
cmpsb
jecxz
aaa
add
xor
movsl
fdivl
or
jmp
xchg
icebp
sub
imul
add
push
int3
je
daa
sub
xchg
mov
dec
scas
jg
push
in
push
dec
sub
mov
xchg
ss
mov
andl
pop
pop
xchg
adc
sbb
lock
adc
fwait
adc
and
inc
mov
out
cwtl
mov
int3
mov
dec
daa
xchg
mov
pop
imull
add
bound
lea
mov
lret
jbe
jo
inc
push
dec
mov
sub
add
push
or
push
xchg
sub
test
fisttps
test
std
add
stc
lea
aam
pusha
mov
xchg
ds
aaa
cld
outsl
popf
outsl
addl
ret
inc
mov
test
lcall
push
inc
adc
in
test
call
mov
push
mov
dec
or
in
loopne
mov
or
inc
insb
and
call
pushf
sbb
adc
xchg
push
cmp
dec
cli
or
add
sub
leave
and
lret
call
sbb
push
std
call
rorl
jecxz
cmc
push
lods
mov
sub
scas
ja
push
loopne
mov
test
data16
adc
imul
xlat
xchg
les
mov
xor
test
xchg
mov
dec
xor
push
test
dec
push
ret
sub
je
dec
jle
rorl
in
hlt
movsb
imul
cmp
cmp
jg
add
dec
decl
push
mov
or
or
popf
test
les
adc
aad
mov
jge
xor
loopne
and
aas
inc
xor
leave
ljmp
dec
push
or
push
aas
cwtl
sbb
mov
push
ds
push
jne
test
je
scas
rorb
inc
daa
mov
mov
inc
in
xor
mov
outsl
sub
repnz
xor
sbb
pop
stc
imul
bound
mov
xchg
push
aad
aam
fucomi
in
mov
test
mov
mov
sub
in
mov
add
add
lret
repz
out
sub
mov
mov
push
outsb
sahf
xlat
push
ret
cld
movlps
rol
ja
pop
xor
pop
mov
repnz
xorl
lcall
daa
mov
scas
push
xchg
cmp
add
cltd
mov
mov
sti
jecxz
pop
mov
add
xor
cmp
jno
int3
adc
xchg
cwtl
dec
mov
adc
mov
stos
lahf
shlb
aas
aas
jbe
rol
adc
xchg
pop
repz
fstl
dec
enter
fadd
sub
ret
mov
jg
add
push
mov
aad
xchg
xchg
enter
repnz
sub
mov
mov
mov
xor
push
xchg
lahf
sub
loope
fs
fldt
icebp
iret
call
push
jl
into
inc
iret
inc
push
out
popf
sbb
jmp
push
bnd
and
scas
ja
sbb
or
xor
loopne
leave
jecxz
movsl
inc
popf
pop
sahf
adc
enter
mov
mov
mov
inc
sub
push
xchg
movsl
cmc
test
rcll
dec
andl
dec
mov
icebp
cmp
cmp
inc
jmp
cwtl
xlat
xchg
iret
jmp
or
push
sbb
ds
sahf
jo
dec
jb
or
add
scas
mov
and
lods
and
fsts
cmc
lcall
cmpsl
dec
pusha
pop
icebp
or
inc
mov
mov
add
push
sub
push
imul
fsubrl
push
subb
pusha
das
fiaddl
outsb
popa
mov
mov
stc
test
in
bound
repnz
xor
add
popa
in
inc
cmpsb
dec
mov
pmaxub
add
arpl
add
and
xor
jnp
jno
test
mov
dec
jl
lock
push
or
ja
xchg
nop
push
mov
incb
pop
fstpt
cli
insb
xor
imul
mov
or
popf
adc
lcall
enter
and
lcall
jl
xchg
cmpl
sbb
stos
xchg
or
pop
lea
sub
cmp
subb
dec
mov
inc
gs
xor
scas
xchg
jbe
lahf
and
inc
push
shl
call
out
clc
fldt
int3
cmp
rcll
mov
mov
testb
sub
out
dec
push
icebp
and
dec
mov
jecxz
mov
pop
dec
sub
pusha
or
dec
fcmovbe
dec
test
mov
jecxz
or
les
fsubrp
xchg
cmpsl
rcl
pop
aam
out
sub
pop
push
iret
lahf
sub
xchg
fstps
test
dec
mov
and
and
jp
stc
das
lret
aas
enter
insb
sbb
into
add
add
push
push
stos
mov
xchg
dec
mov
gs
les
testb
sahf
sub
xchg
pop
or
push
sar
scas
and
flds
pop
adc
cmpsl
mov
out
inc
xor
clc
jl
cli
cwtl
mov
movsl
mov
or
mov
pop
push
mov
dec
sbb
stos
sbb
loopne
je
cmpsb
add
sub
stc
push
lock
adc
imul
or
inc
loopne
js
push
mov
rol
stos
mov
in
sbb
hlt
mov
push
lcall
mov
addr16
pop
cmp
ret
or
mov
shrb
cltd
inc
and
int3
pop
adc
dec
sbb
jp
aad
insb
imul
sub
roll
jp
inc
call
pop
sbb
test
pop
sub
and
andl
stos
mov
insl
ljmp
dec
cmp
cld
inc
clc
mov
xchg
aam
decl
lods
rorl
xor
or
mov
mov
push
std
les
mov
aas
add
fbld
adc
aaa
fwait
arpl
loope
shrb
ljmp
mov
jae
ret
push
sbb
jmp
lds
sub
push
lret
aas
es
outsl
xchg
add
mov
mov
stos
orb
push
outsl
outsl
std
int3
cwtl
push
push
dec
and
cmc
rcll
fbld
xor
nop
fstl
repnz
mov
movsb
xor
movsl
lret
lds
subb
sbb
push
or
mov
mov
push
fcoml
imul
xor
mov
xchg
inc
xchg
pop
jo
mov
mov
and
es
std
or
or
rcll
lret
inc
inc
mov
push
add
in
dec
ja
fistl
fucomp
sbb
outsb
loopne
stos
addr16
pop
loope
jmp
push
sbb
in
int3
test
inc
sbb
arpl
loop
leave
inc
adc
rorl
out
int3
mov
add
xor
cmp
jnp
push
add
mov
or
jl
push
xchg
xor
adcl
out
test
in
mov
mov
xchg
inc
sub
cmp
or
hlt
in
fimuls
mov
lods
cmp
sbb
lea
in
mov
xchg
loopne
mov
imul
adc
mov
imul
ret
cmp
sub
cli
sub
mov
mov
and
shrb
movsl
and
pop
aaa
pushl
ret
sub
cltd
fcomps
lea
mov
cmpsl
add
addr16
lods
xchg
pop
arpl
push
popf
dec
loopne
imull
jecxz
outsb
fcmovne
cmp
xlat
insl
fsubrl
pop
pop
insl
mov
push
push
bnd
dec
push
adc
mov
mov
pop
inc
cmpsb
jp
movsb
pop
push
fsubs
inc
xchg
adc
xchg
and
or
cmp
outsl
and
and
jp
jae
cmp
addr16
jo
mov
loope
lahf
sub
cmp
mov
push
js
mov
pop
xor
int
xor
ja
jmp
mov
push
bound
add
pop
mov
cmp
sub
das
pop
xchg
inc
cltd
adc
dec
push
fildll
xchg
sbb
pop
repnz
sub
inc
movsl
int3
mov
roll
cmpsb
movsl
jae
adc
std
call
je
lock
loopne
out
fs
stos
jo
sahf
addl
mov
push
std
bound
mov
mov
dec
mov
in
lea
mov
xchg
lret
and
dec
push
xchg
add
jl
sbb
popa
add
into
aad
inc
mov
cmpb
lods
fisubl
scas
pop
push
inc
sbb
add
adc
mov
sarb
mov
xchg
mov
into
ds
das
popa
mov
cmpsl
push
lret
jg
pop
mov
clc
mov
jnp
clc
xchg
xchg
xchg
mov
enter
inc
incl
test
jl
pop
and
int3
cmpsb
mov
mov
or
sbbl
test
adc
fsubr
pop
stc
test
ret
adc
add
call
xor
jl
mov
loopne
movsl
sub
std
ds
repnz
lock
ljmp
sub
ficoms
leave
xor
sbb
inc
inc
adc
push
cs
push
jnp
xchg
jp
arpl
and
in
aad
dec
les
and
xchg
mov
add
fnstcw
shrb
in
xchg
pop
aad
iret
inc
lret
and
lds
cmp
pushf
cmp
cmp
push
movb
cwtl
rorl
inc
and
lds
push
sbb
es
shl
push
lds
push
lods
xchg
pop
mov
fwait
lret
or
aad
scas
mov
subl
lret
test
inc
movsl
pushf
inc
loope
ljmp
popa
aad
push
mov
scas
int3
cs
adcl
cmp
mov
cmpl
jecxz
xchg
icebp
std
ja
or
and
add
fsubrs
xchg
pop
sbb
mov
stc
leave
mov
filds
xchg
or
adc
fimull
fdivr
mov
jmp
repz
repnz
jl
push
xorb
dec
sbb
sbbb
nop
push
or
in
lea
mov
dec
cmp
mov
mov
into
movsl
mov
push
mov
and
dec
mov
hlt
aam
insb
lods
jb
xchg
jg
mov
add
and
rcll
push
shll
mov
pop
adc
mov
and
in
jae
loope
jmp
cltd
mov
neg
int3
mov
mov
pop
imul
jmp
lods
sub
data16
jecxz
add
xchg
les
das
in
dec
data16
mov
mov
mov
sub
jb,pn
stos
inc
aad
lret
outsl
pop
pop
jne
add
xchg
mov
repz
dec
push
jp
int3
push
cmp
lcall
mov
push
ljmp
xchg
push
inc
call
sbb
fisttpl
and
sub
subl
int3
mov
aas
imull
sbb
xchg
stos
dec
dec
sub
shll
shl
iret
push
pop
jl
xor
xchg
notb
test
loope
movsl
lock
mov
push
mov
add
jmp
xchg
cld
sub
mov
push
fs
inc
push
mov
or
cmp
mov
mov
into
mov
fbld
mov
and
test
xor
lret
sbbb
iret
dec
cmp
in
popa
pop
sub
or
mov
lock
pop
inc
mov
or
sub
adc
sbb
push
test
mov
addb
mov
insl
dec
iret
je
out
shll
push
int
cmc
les
and
pop
ret
pop
inc
rcll
push
out
pop
inc
roll
adc
or
inc
jmp
mov
pop
adc
fstpl
inc
xchg
pop
andl
popa
je
popf
fldl
push
pop
adc
push
or
mov
sbb
pop
add
mov
xlat
cmc
out
mov
dec
add
add
rolb
testb
out
rcll
jecxz
jns
enter
jbe
or
xchg
pop
ret
adc
clc
pop
dec
mov
inc
sbb
inc
adc
out
into
pop
or
mov
adc
add
je
pusha
insb
stos
push
cmpsl
lea
sahf
loop
lret
push
cld
push
jbe
daa
jb
movsb
jae
call
mov
mov
repnz
or
mov
sub
sti
add
fwait
std
push
inc
loopne
lock
xchg
lods
xchg
shrb
das
adc
mov
inc
push
push
pop
fdivrs
adc
inc
scas
ficomps
das
mov
out
pop
clc
pop
xor
cmp
mull
cs
cmp
pop
dec
and
jb
mov
mov
stc
push
lock
mov
push
xor
lahf
subl
insl
jns
dec
int3
rcrl
xchg
pop
stos
mov
movb
fimuls
sbb
mov
dec
inc
ds
push
ljmp
xchg
add
add
jb
sbb
jb
cmc
repz
add
push
pop
push
rcrb
in
cmp
clc
cmpl
cli
test
insb
mov
idiv
int3
arpl
mov
call
jmp
cmp
scas
gs
fstl
repnz
push
mov
jbe
pop
lret
inc
aaa
mov
mov
cmp
je
in
ficoms
jns
fwait
pop
addb
mov
stos
mov
ja
idivl
fmul
xor
out
pop
imul
negb
xchg
mov
inc
dec
rolb
mov
sbb
and
mov
ds
stos
mov
addl
hlt
dec
fbstp
ljmp
xchg
add
xchg
push
add
push
es
leave
fs
jns
popf
lahf
or
sbb
add
dec
push
lock
add
jecxz
lea
and
test
int
sbb
ret
fistpll
mov
xor
or
cmc
aam
ret
outsb
aaa
sbb
sti
sub
dec
push
jge
mov
lods
loop
lahf
jnp
adc
cmp
adc
in
dec
sub
jno
ffree
out
lret
lret
shlb
fucomip
mov
pop
adcb
lock
inc
insl
cmp
add
daa
stc
mov
pop
fstpl
pop
mov
aam
daa
jge
sti
jno
pop
int
iret
cltd
outsb
jle
lcall
push
in
pop
in
mov
imul
ret
mov
jle
fdivs
dec
aas
dec
jbe
fcmovb
ss
iret
stos
dec
mov
inc
mov
movb
std
push
test
adc
adcl
jle
js
adc
clc
lds
xchg
push
cmp
mov
in
sub
ret
shll
bound
and
xor
ds
and
out
cld
add
dec
mov
js
insb
mov
mov
add
shlb
mov
mov
nop
orb
pop
sbb
stc
jno
loopne
cmpsb
cmp
adc
mov
into
mov
lea
repnz
lds
sbb
bound
sti
lcall
dec
adc
mov
xchg
add
or
outsb
push
pop
fstl
xor
imul
mov
add
dec
mov
es
push
vpinsrw
adc
call
push
adc
fs
cmp
int3
mov
pop
sub
and
and
mov
or
std
xor
cs
fldenv
adc
das
mov
int3
lahf
xchg
xchg
inc
or
rcrb
bound
pop
jo
mov
cmp
mov
sbb
mov
pop
inc
inc
push
mov
mov
stos
xor
mov
xchg
movsb
pusha
add
inc
mov
repz
pop
stc
sti
scas
pop
push
arpl
js
pop
mov
pusha
outsl
loope
lahf
mov
adc
fsubs
fldl
stc
insb
jo
mov
and
mov
sbb
cmp
pop
pop
push
jmp
std
sbbb
push
ljmp
shll
mov
fwait
xor
mov
test
mov
mov
jb
xchg
insb
mulb
test
xor
adc
jp
inc
sub
rcr
divb
pop
test
movsb
enter
sbb
inc
fsubs
iret
imul
ret
mov
dec
mov
in
loop
cmp
xor
mov
fs
sbb
xchg
cli
xchg
inc
stos
int
cmp
jle
in
das
stc
adc
out
movsl
popf
pop
sti
jge
je
add
dec
xor
out
push
mov
push
sub
std
repz
mov
arpl
bound
cs
std
in
ja
sbbl
ret
fiadds
rcrb
fwait
push
pop
lods
xchg
js
xlat
mov
iret
and
jge
sbb
rcr
scas
mov
jo
cmp
ds
xor
lods
sbbl
mov
aaa
mov
rcll
pop
test
and
pop
add
mov
int3
push
push
sahf
push
jb
lds
adc
cmp
in
insl
sbb
sub
shrb
add
mov
push
mov
cmp
pop
adc
hlt
in
dec
jmp
or
leave
cmpb
jmp
inc
sub
test
cmp
out
cwtl
inc
imul
sub
push
jb
pxor
test
idiv
outsl
push
inc
cmp
out
ret
cli
lods
int3
push
arpl
add
sbb
push
or
sbb
pop
cmc
or
cmp
sub
lret
xchg
sbbl
ja
sub
or
ds
sub
xchg
inc
sbb
dec
lcall
mov
mov
xchg
fisubrl
std
xchg
insl
test
shl
decl
cmp
mov
inc
in
out
xchg
jae
inc
lcall
stos
aas
fiaddl
jae
push
mov
dec
and
pop
jmp
sub
xor
push
test
adc
icebp
es
mov
xor
add
pop
mov
jne
mov
xchg
cmc
out
jge
ds
or
inc
jne
les
jg
gs
push
aam
rorb
je
outsb
pmaddwd
insl
push
loopne
mov
push
insl
scas
lcall
andb
lret
and
mov
stos
loop
push
ja
test
sub
mov
xchg
xlat
xor
mov
je
push
cwtl
imul
inc
pop
and
rcrb
mov
adc
subb
pop
jge
sub
sub
pop
call
into
nop
pop
andb
cmp
mov
mov
or
pop
sub
jne
pop
stos
mov
inc
mov
dec
sbb
mov
mov
add
push
push
out
fsubs
or
jo
outsl
push
push
sub
adc
mov
xchg
lret
and
jle
adc
je
mov
adc
pop
push
sub
jb
mov
mov
out
lahf
dec
mov
loopne
in
out
les
xorb
outsl
aam
cltd
imul
sbb
mov
cltd
or
imul
orl
imul
pop
addr16
xor
sbb
push
adc
cmp
mov
add
icebp
insl
les
leave
pop
imul
inc
mov
js
mov
sbb
cmp
xor
adc
aaa
mov
lea
lret
jg
mov
pop
gs
push
adcb
cmp
pop
jl
inc
mov
lods
pop
jne
xor
lods
pop
and
bnd
lret
inc
loope
cs
in
lcall
or
pop
test
repz
cs
clc
add
mov
push
and
xchg
inc
cmp
and
repz
pop
lds
jns
cmpsl
jne
rol
fdiv
subl
rcl
or
insl
and
add
xor
jno
inc
stos
lret
scas
insl
clc
and
mov
and
xchg
scas
fcomip
pop
or
add
dec
and
fstpl
xchg
adc
addr16
test
push
dec
cmp
je
mov
xchg
mov
stc
or
ficoml
or
lcall
mov
nop
cmp
xorl
fldcw
and
test
mov
push
xchg
ret
popa
xchg
add
lods
fidivrs
lahf
inc
adc
lret
xchg
imul
dec
int3
jnp
add
cli
mov
incl
sarl
test
dec
xchg
fmuls
xchg
and
inc
xchg
lahf
add
sub
scas
cmpsb
jno
mov
inc
sbb
in
fistl
xchg
xor
xchg
fsubrs
stos
and
xor
lret
in
jl
addr16
into
cmp
shrb
popa
loop
scas
popf
cmp
daa
mov
cmp
push
dec
insb
jp
xchg
xor
mov
pop
in
movb
pop
inc
sti
repnz
pop
add
cwtl
sar
pushf
aad
xchg
int
dec
insl
idiv
adc
addr16
fidivrl
stc
rclb
in
arpl
fst
xchg
ficompl
ret
fcmovu
mov
dec
out
repz
das
inc
pop
push
sti
xor
in
xchg
jb
jmp
sahf
push
jle
cmp
cs
insl
add
mov
sub
mov
xor
pop
jge
sbb
lock
mov
mov
hlt
sbb
mov
or
cmp
sub
mov
je
adc
push
push
xchg
mov
mov
aaa
stc
hlt
jne
xor
mov
jb
sub
orl
cli
sbb
push
sub
out
jnp
js
cmp
cmc
ja
cmp
lret
jae
mov
sub
and
roll
pushf
je
aad
loopne
or
push
jecxz
mov
repnz
xchg
push
lcall
mov
push
adc
xchg
insb
inc
fadds
push
les
push
dec
pop
lret
mov
xor
imul
pop
mov
jb
mov
lock
cmp
pushf
daa
int3
fbld
pop
ljmp
test
adc
dec
cmp
daa
jl
push
mov
push
and
sarb
xchg
popa
xchg
jno
cltd
outsl
sub
pop
pop
iret
sbb
lods
icebp
pusha
cmp
jne
inc
sub
pop
cmp
sub
lods
ljmp
adc
or
jp
jl
bound
cmpsb
lock
cwtl
sub
inc
in
or
popa
jg
stos
push
or
jns
xlat
adc
lahf
mov
jge
mov
addr16
in
sbb
aad
mov
inc
cld
mov
cmc
outsb
cmp
ffree
fs
jmp
mov
arpl
sub
insb
in
inc
outsl
inc
loope
jle
cmpsb
xorb
fistpl
cs
sbb
fxch
pop
jbe
mov
repnz
pop
jle
in
dec
and
leave
and
aam
xchg
es
mov
daa
fsubrl
cmpsb
inc
mov
movsl
adc
lock
inc
ljmp
xchg
outsl
and
stos
mov
mov
mov
je
pop
jnp
jbe
adc
push
decl
or
in
xchg
mov
jne
cmpsb
mov
repnz
je
mov
or
ds
sbb
push
adc
mov
lea
mov
mov
dec
ss
sub
cmp
sbb
cvtps2pd
mov
lahf
adc
fldl
lcall
mov
in
pop
inc
push
add
lret
and
mov
daa
push
mov
xor
mov
lret
icebp
arpl
call
sbb
add
cltd
pop
jno
fwait
pop
scas
pop
xchg
mov
out
mov
dec
jl
adc
rol
fisubrl
daa
fsubrl
int3
test
cmp
jnp
movsl
in
or
and
sbb
int
mov
pop
stos
mov
fcomip
enter
dec
mov
add
pop
pop
adc
in
jnp
xor
imul
aas
sbb
xchg
add
push
mov
outsb
fistps
les
xchg
sbb
cmp
mov
call
cltd
pop
or
in
jmp
inc
mov
pop
imul
jo
xor
or
xor
or
inc
cli
adc
ret
xchg
xchg
in
mov
mov
cli
cmp
pop
mov
lcall
icebp
lcall
push
fstl
in
fldl
xchg
addr16
sub
push
mov
test
cmp
movsb
push
mov
inc
mov
cmp
or
jne
je
or
outsb
mov
xchg
xor
push
ja
pop
mov
lret
out
cli
call
jo
add
stos
mov
add
leave
mov
std
lds
in
sahf
push
cmp
js
push
int3
xchg
mov
lret
dec
aad
jns
inc
bound
shll
lea
jl
insl
fadd
fs
mov
popa
mov
push
lods
addr16
fmuls
repz
outsl
pop
fnsave
push
outsb
inc
je
mov
sbb
fldcw
lret
ds
jp
lret
ret
and
subl
xchg
lea
test
fmull
cmp
in
cld
and
push
dec
icebp
mov
fwait
stc
xchg
lret
in
ffreep
dec
inc
jge
adc
out
mov
fisubrs
push
push
pop
cmp
leave
enter
mov
mov
divl
lods
ret
sub
cmc
gs
jg
idivb
psubw
inc
mov
mov
jmp
lds
into
dec
push
xchg
mov
mov
mov
inc
fs
sarb
stos
cmp
outsl
int
or
dec
push
shlb
sarl
inc
pop
pop
jle
fwait
pop
xchg
add
adc
sahf
lods
add
sbb
pop
and
jo
inc
mov
and
jns
jbe
aam
inc
jne
clc
arpl
mov
mov
bswap
mov
xlat
add
dec
cmpsl
mov
add
push
or
loopne
popa
push
push
cmp
lods
mov
sub
and
in
clc
jp
cmpsb
mov
ret
das
and
cltd
push
test
subb
pop
inc
mov
or
mov
inc
rcll
insb
lods
cmp
add
jmp
cmp
and
dec
inc
test
lahf
cwtl
shrl
lcall
loop
and
and
sub
jle
in
in
or
cmp
loopne
xor
add
aas
jno
in
pop
outsl
push
adc
sub
lcall
cmp
mov
jl
cli
clc
pop
out
cmc
xor
sbb
pop
gs
orl
pop
pop
jb
test
imul
int3
fs
insb
enter
cmp
decb
or
sti
rcr
dec
jno
cmpsb
push
mov
xor
movsb
mov
cmp
into
call
xchg
fwait
sbb
mov
das
dec
inc
andb
inc
add
testb
jg
fsubrs
insl
ret
cmp
ds
aas
or
mov
faddl
in
fmul
ja
out
cmc
jle
inc
ss
arpl
push
stc
outsb
push
mov
cs
cmp
cli
into
or
sub
int
imul
inc
rcrl
js
xchg
daa
mov
sub
mov
push
pop
shr
or
cwtl
jno
pop
lcall
es
cmp
bound
mov
add
add
icebp
js
jge
sub
adc
jmp
lret
push
jbe
std
adcl
ret
push
pop
test
popa
shrl
insl
pop
sahf
mov
clc
lcall
mov
and
dec
or
mov
pushf
push
popa
unpcklps
pop
push
cmp
mov
adcb
fcmovu
cmpsl
in
enter
popf
sub
jo
test
nop
push
je
sbb
call
cmp
call
mov
ja
popa
adc
repnz
push
sbb
dec
mov
or
pop
outsb
jo
push
insl
clc
fistpll
jg
sub
aas
sub
xor
fisttpl
or
ljmp
mov
xchg
adc
and
pop
dec
inc
jmp
dec
out
sbbb
in
mov
dec
leave
or
sbbl
add
outsl
jbe
gs
xchg
pop
cmp
js
imul
movsb
stos
in
out
into
nop
cs
das
test
shlb
mov
dec
sub
outsb
fisttpl
mulb
xchg
out
push
jle
out
push
push
rorl
xchg
push
sbb
cmp
sub
push
out
xor
jae
push
mov
inc
add
scas
pop
out
push
xor
fld
and
ja
push
add
scas
add
lret
mov
jle
cmp
mov
popf
lods
je
pop
ret
lock
xchg
inc
arpl
inc
inc
sub
adc
icebp
pusha
orl
lret
fisttpll
test
jmp
ja
fldl2e
bound
sbb
sbb
add
cmp
mov
jg
adc
mov
cld
and
stos
pop
sahf
xor
lods
es
cmp
mov
cs
ljmp
sbb
out
cwtl
push
xchg
insl
xchg
shr
pop
adcb
mov
movsb
cmp
mov
cltd
lods
aas
cmp
push
out
ret
inc
pop
mov
insl
subb
xchg
pusha
cmpb
movsl
mov
cmp
je,pn
xchg
popf
and
mov
adc
or
std
xchg
xor
aam
sbb
or
pop
pop
out
mov
xor
and
popa
loope
cmp
das
iret
and
dec
cmp
movb
test
mov
add
stos
ret
xlat
push
popa
pop
or
cmpsb
hlt
cmp
xlat
add
cmp
inc
mov
pusha
and
mov
ljmp
and
mov
dec
insl
lods
mov
lods
jmp
lcall
add
enter
mov
and
cmp
xor
push
lods
cmp
lahf
jne
mov
in
push
and
xchg
cmc
adc
push
mov
dec
insb
sub
xchg
fisubs
movsb
int3
push
xor
mov
sbb
scas
xor
iret
cli
mov
push
outsb
mov
cli
das
sbb
pop
inc
xchg
or
cs
push
and
imul
adc
repz
stos
inc
add
mov
out
cltd
mov
jg
push
js
inc
jge
es
xchg
imul
mov
orl
lock
mov
sub
sbb
push
cmp
sbbb
pop
adc
or
mov
xchg
out
gs
shl
jae
jae
sub
popf
movsl
adc
out
mov
xchg
and
imul
and
add
jmp
mov
inc
lock
inc
lea
ret
mov
mov
pusha
add
fsubr
push
mov
js
mov
jg
jge
add
out
test
movq
xor
mov
xchg
loope
dec
aam
shl
dec
adc
daa
jmp
inc
aas
das
cmpsb
dec
cltd
sahf
pop
icebp
sti
or
mov
cmp
push
cmc
sbb
xor
xchg
jmp
dec
loopne
rol
xchg
das
xchg
jmp
inc
dec
mov
lock
test
pop
shrl
add
or
xchg
add
xor
fnstenv
gs
mov
scas
mov
shl
mov
lcall
aam
js
fdivp
pop
push
aam
mov
jns
cmp
lahf
mov
lea
out
or
cmp
cmp
scas
leave
and
add
sbb
les
movsl
pop
fldpi
mov
mov
or
or
je
jae,pn
outsl
inc
sti
in
and
lock
loop
jmp
test
test
insl
cmp
dec
adc
pop
popa
add
mov
mov
add
repz
lea
in
add
and
pop
or
xor
mov
in
pusha
mov
pop
outsb
in
into
lret
cmp
stc
sub
dec
fcmovu
popa
xor
cmp
popf
mov
xor
jae
enter
sbb
lock
xchg
ss
aam
inc
in
jecxz
push
push
lds
enter
mov
ffree
pop
inc
cli
mov
pop
cli
adc
std
dec
out
bound
loop
xor
stc
jecxz
jb
ljmp
xchg
add
test
xchg
int
je
fisttpl
fmul
xchg
sar
xchg
inc
icebp
decb
sbb
push
test
fcoms
push
lret
cmp
fprem
or
pop
or
jb
add
push
and
repz
shr
arpl
lds
or
inc
imul
inc
xchg
das
sub
sub
adc
xchg
sub
scas
shlb
cli
xchg
cld
push
cmp
and
push
out
fisttpl
popl
mov
adc
add
xlat
lahf
adcl
fidivl
bsf
pop
ja
xchg
icebp
into
dec
dec
fcoms
mov
dec
xchg
adc
cmp
adc
mov
fmull
cmp
inc
inc
add
pop
mov
into
push
xor
shl
xchg
add
les
sbb
or
or
mov
rorb
jnp
pop
adc
movsb
inc
and
je
cmpsl
push
mov
stos
jo
push
add
scas
xchg
fldt
ret
and
pop
or
sub
jo
mov
ffree
mov
out
pop
nop
cmp
out
mov
lahf
push
fstl
mov
xorl
jb
inc
dec
mov
push
test
dec
fiaddl
in
or
xchg
jns
or
sbb
ss
and
les
aaa
xchg
paddsw
clc
hlt
and
cmpsb
fildl
dec
fildl
outsl
inc
adcb
aam
arpl
in
aad
or
push
xchg
sbb
mov
lods
test
int3
or
xchg
inc
mov
shrb
mov
dec
cmp
subb
int
rcll
pop
scas
or
jle
sbb
daa
popl
arpl
dec
sbb
push
aam
arpl
ret
mov
mov
lds
or
dec
les
jl
test
pop
mov
mov
sbb
pusha
inc
fwait
out
fidivs
daa
mov
rcll
int
loope
lea
sti
scas
imul
sub
push
das
cmp
jp
mov
and
push
cld
xchg
inc
cwtl
test
stc
loope
mov
lret
in
lret
mov
sub
mov
xchg
shll
xor
inc
cmpsl
repz
xor
movsl
enter
insl
out
jae
mov
std
mov
mov
xor
fwait
pop
jp
xlat
cmp
adc
mov
lods
inc
je
outsl
andl
int
scas
jae
and
es
pop
mov
xor
adc
dec
pushf
cmpsl
sbb
or
jecxz
jnp
dec
inc
xor
and
iret
xlat
aad
inc
cmpsl
iret
jns
aaa
cltd
xor
or
and
xchg
mov
out
outsl
mov
gs
lcall
leave
mov
push
dec
stc
inc
xor
or
cwtl
inc
in
out
rorb
xchg
or
fnstenv
cmpsl
addr16
cmpsb
not
and
lds
xchg
and
aad
jnp
add
movsl
cmc
jg
adc
or
in
adc
outsl
mov
push
enter
lods
dec
jmp
inc
xor
fdivrs
popf
push
std
rcll
mov
cmp
sbb
mov
sbbl
pop
fnstsw
loop
dec
jge
bound
push
out
sbb
fadds
pop
jge
fsubs
int
out
adcb
cltd
dec
add
hlt
gs
cmp
mov
dec
negl
dec
or
push
test
sarb
lds
mov
or
nop
add
out
sbb
fcoms
mov
out
dec
xchg
enter
pop
inc
or
shl
imul
fimull
adc
test
mov
mov
and
push
cwtl
mov
push
hlt
sarl
gs
dec
cmp
mov
xchg
xor
xchg
sbb
leave
inc
fwait
call
xchg
adc
xchg
pusha
and
add
xchg
add
fwait
outsb
loop
mov
inc
and
inc
adc
pop
sbb
or
sbb
lret
push
adc
jne
xor
enter
sub
fiaddl
fisttpll
jmp
mov
mov
ja
cli
lods
and
add
pusha
subb
xlat
in
into
push
daa
fptan
lods
dec
popa
push
loopne
ja
bound
andb
push
in
sub
lock
fs
xchg
sub
xchg
push
imul
pop
inc
out
ret
mov
mov
inc
mov
aad
cmp
jne
outsb
icebp
jmp
sub
push
pop
pushf
xchg
sarb
mov
repnz
push
xor
jo
daa
scas
pop
cwtl
and
add
cmp
jge
dec
movsb
in
loopne
pop
fwait
lcall
testb
test
cmpl
rorb
pop
imulb
out
ds
fisubl
loopne
ret
or
js
jb
push
jne
fsubs
stc
jp
inc
sub
push
repz
mov
fisttps
and
jl
xlat
movsl
test
and
add
fnsave
jno
int3
mov
or
adc
push
add
push
push
repz
enter
lret
incl
cmpsl
andl
or
iret
push
jge
movsb
pop
xchg
ret
mov
iret
test
imul
jecxz
dec
incl
insl
push
inc
stos
xor
inc
lahf
int3
xlat
xchg
jae
mov
iret
ljmp
add
sub
push
lds
int3
das
scas
repz
push
mov
and
fdivl
add
mov
fisubl
loop
cmc
scas
pop
std
sub
popl
rcrl
std
cmp
cltd
jmp
stos
inc
cmpsb
shll
mov
cs
incb
mov
lahf
adc
repnz
cli
push
push
mov
ffreep
adc
or
ja
je
and
pop
lods
out
mov
jbe
loop
outsl
pop
and
jno
nop
push
sub
inc
mov
sbb
mov
ficompl
pop
push
add
add
mov
lods
addr16
adcl
pushf
sub
lcall
bound
fstps
inc
push
sar
adc
add
into
pop
stc
mov
sbb
nop
rclb
into
add
cmp
mov
push
inc
ret
cwtl
lds
int3
inc
push
sub
flds
cmpsl
sub
pop
xor
mov
fsts
adc
xor
xchg
fistpll
mov
sub
mov
mov
decb
mov
dec
in
lret
mov
lret
inc
lea
test
out
sub
cmpb
xchg
jle
and
movsb
add
push
inc
mov
cmpb
daa
mov
int3
push
mov
mov
sub
sbb
add
xchg
test
popf
lret
jnp
shll
sub
mov
in
jmp
and
out
rcll
jno
sti
sbb
mov
clc
jns
nop
or
add
sub
cmovs
mov
adc
pop
push
push
fs
push
mov
lods
ja
mov
loop
adc
js
test
js
push
dec
js
rolb
and
ss
jg
cld
inc
mov
add
dec
mov
fsubl
xchg
cmp
call
sub
push
sub
mov
lahf
sbb
cmpsl
scas
mov
dec
fucomi
movsl
mov
popf
mov
rcll
sub
mov
lods
cmp
or
loope
lds
mov
and
xchg
call
imul
cmp
bound
cmp
hlt
sbb
arpl
xchg
sbbb
sub
cwtl
and
pop
call
and
sbb
movsb
popf
mov
push
imul
pop
test
in
and
lahf
fwait
jo
hlt
pop
aad
jbe
loop
test
push
fadds
sbb
imull
pop
mov
leave
cmp
mov
les
add
daa
pop
addb
fdivrs
xor
add
scas
xchg
inc
add
or
push
lods
add
les
mov
pop
sbb
jne
sub
xlat
xchg
mov
add
sbb
jg
test
sahf
lcall
inc
aam
lahf
scas
in
sub
clc
xchg
push
mov
repnz
mov
shll
sub
lcall
test
sbb
or
sbb
sub
add
adc
lret
popf
push
dec
ret
popf
je
daa
sbb
jbe
icebp
jne
mov
pop
rclb
or
hlt
jmp
lcall
cmpb
add
fadd
fldt
xchg
jle
pop
sbb
in
jmp
ss
mov
add
repz
movsb
das
mov
sub
mov
lahf
lahf
fisubl
les
adc
rolb
outsb
push
lods
push
nop
jbe
dec
mov
loop
xor
add
je
lds
cmp
fnstenv
call
mov
imul
jo
pop
pushf
and
pop
imul
and
mov
push
xor
scas
mov
mov
pushf
ret
push
pushf
fwait
mov
xchg
aas
xchg
outsb
xor
rorb
mov
leave
mov
mov
js
aas
xchg
mov
lods
jmp
sub
ss
nop
jmp
enter
fstpl
out
mov
fistps
push
pop
inc
addb
aam
inc
lods
popf
movsb
sbb
jecxz
leave
lcall
mov
add
pop
push
in
dec
inc
fnstsw
imul
leave
cmpsb
fwait
push
mov
sti
fs
movl
pop
cmp
je
xor
add
minps
bound
mov
or
fidivl
fistps
bound
mov
sbb
inc
jbe
jnp
pop
cltd
sub
fdivs
test
out
cli
pop
andl
push
mov
mov
lret
push
jno
inc
cmpsl
jg
ss
in
push
cmp
rcrl
xor
jge
pushf
daa
mov
mov
xchg
shll
xchg
ljmp
mov
out
push
mov
ljmp
jg
mov
scas
xor
mov
xor
jb
mov
sbbl
xchg
pop
sbb
mov
sbb
mov
jmp
add
sbb
push
jns
lods
push
jge
dec
ja
fs
mov
cli
dec
jge
xor
xchg
lahf
test
cmp
fiadds
lods
mov
lret
stos
pop
adc
cld
shrl
shlb
and
pop
add
dec
mov
jp
rolb
add
shlb
decb
push
xchg
jg
js
pop
adc
dec
mov
cli
mov
lods
insl
mov
mov
xchg
mov
lcall
ljmp
and
add
std
add
xor
in
clc
das
je
add
pusha
xchg
data16
pop
sbb
jae
or
enter
insb
jno
data16
xchg
mov
rclb
enter
jp
mov
lret
push
push
shll
push
mov
and
movsl
fdivrl
or
jmp
push
jo
sbb
fsubs
cmp
sub
movsb
cmpsl
std
add
mov
adc
dec
add
flds
pop
lea
int3
in
xchg
cmp
push
xor
add
sbb
stc
imul
ret
js
out
or
clc
jmp
test
jae
in
rcrl
loopne
mov
mov
stos
dec
ficoml
dec
xchg
jae
push
daa
int3
imul
sbb
imul
inc
ss
insb
fwait
divb
ss
xor
jge
cmp
mov
adcb
add
mov
push
mov
incb
cld
xchg
xchg
dec
cmpsb
push
jnp
or
scas
xlat
push
addr16
sub
movsb
dec
int
adc
sbb
mov
or
pop
mov
inc
scas
fmul
push
out
ljmp
mov
and
push
lods
mov
push
mov
cs
mov
mov
scas
mov
loope
sub
leave
shlb
ds
ljmp
cmc
call
lea
loopw
mov
fcomps
andb
stc
fcomps
lret
mov
loop
fwait
jmp
mov
into
shll
sub
sbb
test
movsl
sbb
sub
and
adc
pop
in
and
rcrb
insb
adc
inc
add
jl
jbe
andl
adc
ret
xchg
iret
push
push
lea
sub
mov
xchg
insb
jbe
sbb
mov
or
pushf
iret
lods
push
lea
and
adc
dec
jl
outsb
loop
fists
dec
mov
popf
sub
ja
lods
fs
mov
push
adc
add
pushf
out
xchg
popf
push
add
jbe
pop
imul
bound
loop
inc
inc
idivb
pop
iret
pop
repz
lahf
xchg
inc
shlb
in
adc
dec
dec
lock
cmp
fcoml
repnz
and
pushf
ds
and
jno
icebp
pushf
std
inc
inc
dec
stc
sbb
shll
adc
lcall
stc
add
ja
iret
fnsave
rorl
adc
and
or
pop
nop
cmp
mov
mov
movsb
jne
sub
lcall
cs
and
imul
jno
les
mov
xor
mov
das
pop
pushf
or
add
lret
mov
inc
filds
jge
mov
add
xchg
test
in
push
pop
or
dec
mov
loop
rorb
push
cmp
pop
mov
jecxz
sub
dec
xchg
stc
pusha
cmp
pusha
pop
movsb
xchg
int
aam
xor
int3
outsb
push
imul
mov
inc
and
xlat
mov
pop
pop
or
push
das
jbe
loopne
rcll
lods
dec
sbb
inc
subb
cmp
andb
jl
sbb
add
out
ret
and
je
add
cmp
fisubl
pop
pushf
xchg
push
mov
pop
push
int
sahf
loop
lret
fistpl
xchg
lret
inc
jecxz
fsubrl
adc
xor
pop
push
pop
mov
clc
arpl
subb
stc
lret
shlb
mov
rcll
ljmp
popa
or
inc
test
xor
cmc
push
push
adc
insb
test
fs
push
incb
jbe
dec
mov
out
mov
xchg
scas
ficoml
push
roll
in
out
imul
imul
sarl
leave
insb
fucomp
sub
repnz
stos
iret
mov
inc
jmp
pop
or
aam
and
mov
xchg
sub
nop
repnz
mov
call
xor
adc
scas
mov
lret
xchg
xchg
mov
dec
dec
decl
insb
xor
dec
and
sbb
push
sbb
fisttpl
sub
adc
cmp
fs
loope
push
imull
fistpll
fstps
mov
movsb
cmp
push
xchg
xchg
add
add
cmp
push
jno
push
sub
add
push
imul
mov
aam
sbb
mov
jmp
pusha
inc
bnd
add
adc
ss
mov
sbb
jl
xchg
sti
push
mov
aam
scas
cwtl
or
dec
outsb
les
insl
jp,pt
adc
jecxz
clc
popf
stc
push
pop
jne
sub
in
xor
call
dec
push
cmpb
push
dec
and
vmpsadbw
stos
sti
lock
scas
mov
jge
mov
mov
loopne
mov
cmp
jmp
mov
push
jmp
jo
sbb
fisubrs
les
ja
hlt
push
cmpsb
into
sbb
ret
xor
cwtl
lds
pop
loopne
push
movsl
jmp
test
lods
pop
in
pop
inc
pop
xchg
xor
fwait
jae
mov
stc
add
push
lret
movsb
iret
sbb
xchg
adc
out
adc
adc
daa
lds
xor
scas
sbb
mov
mov
popa
pop
inc
cwtl
movsb
mov
repnz
mov
lret
enter
jb
sti
pop
cmc
xor
es
scas
cmp
mov
aam
and
addr16
lea
pop
rclb
mov
mov
dec
jle
inc
xchg
ja
cmpsl
mov
ret
enter
mov
test
adc
jp
int
lret
lahf
mov
fsub
test
shlb
dec
push
jle
and
dec
lcall
sbb
dec
xorb
push
or
mov
sbb
les
andb
out
push
pop
xchg
xchg
push
xlat
xor
xchg
push
scas
and
adc
lret
pop
and
insl
sub
and
mov
pop
inc
fs
push
test
mov
and
addl
movsl
dec
add
adc
insb
jp
pop
pop
outsl
mov
mov
xorl
push
lods
imul
pop
pop
cmp
add
sub
sbb
les
leave
lods
fsubrl
fnsave
inc
lods
dec
cwtl
push
mov
dec
leave
jbe
divb
shl
dec
mov
f2xm1
loop,pt
inc
ja
or
mov
adc
icebp
jle
mov
adc
int
adc
cmp
sbb
jge
push
scas
jne
outsl
fwait
popa
push
xor
mov
fsubl
mov
xor
cltd
jno
jle
fsts
sub
pop
fwait
jno
sub
lds
and
and
inc
nop
and
cmp
std
mov
pop
or
adc
jle
aad
mov
dec
sbbl
jbe
imul
lcall
mov
xchg
rcrb
xchg
sbb
xchg
mov
mov
cltd
push
xchg
in
push
popf
mov
fcmove
push
and
cld
push
push
loop
mov
stos
adc
pop
popf
and
dec
fsubs
inc
test
out
fisubrl
dec
pop
int
cli
nop
jle
push
sarb
push
pmuludq
iret
mov
jle
outsb
inc
push
and
es
jns
cmp
add
dec
or
stc
lea
fists
ret
sbb
sub
adc
stos
mov
lds
push
xchg
cmp
pop
idiv
dec
cmp
movsl
or
imul
or
or
mov
js
pop
push
mov
xor
mov
ret
lret
push
adc
out
push
sahf
call
mov
rcll
sub
sub
leave
inc
popf
fistps
mov
sbb
add
xchg
push
push
outsb
adc
xchg
in
das
icebp
cld
mov
inc
fiaddl
loope
and
pop
dec
jmp
mov
sti
sbb
jo
xlat
mov
pop
or
adc
scas
jb
pop
repnz
fs
lret
icebp
jae
outsl
ret
repnz
addl
and
push
jno
adc
adc
pop
lods
jg
movsb
aaa
shll
jnp
cmp
push
jg
jg
daa
mov
int3
sar
or
push
dec
jmp
pop
aaa
loopne
and
push
mov
insl
xor
adc
xor
stos
xchg
sub
sbb
jae
lods
stc
mov
das
dec
dec
adc
mov
xor
or
gs
or
fstl
fisttpll
cltd
jmp
iret
stos
add
je
fdivr
mov
repnz
cmp
out
loope
movsl
and
stc
and
aad
call
stos
jg
mov
in
sub
out
aas
pop
jnp
cmp
rorb
jno
cmc
bound
std
and
into
jmp
pop
daa
xor
inc
leave
popa
sbb
ljmp
lret
daa
add
loope
fs
mov
into
hlt
movsb
cli
stos
mov
dec
xchg
aaa
test
mov
xchg
rorl
mov
or
andb
push
stos
out
test
leave
mov
cld
mov
xchg
add
mov
sub
push
ja
adc
mov
aad
mov
mov
pop
cmpsl
popf
idivl
addr16
loop
inc
jno
or
daa
in
jg
add
push
lock
fnstcw
fwait
js
dec
clc
int3
mov
fwait
bswap
mov
fcomps
rorb
jo
or
ss
lods
rol
sub
daa
jbe
pop
lret
mov
inc
or
push
push
or
loop
in
ljmp
mov
int3
jbe
push
jns
out
mov
sbb
and
cmpb
lea
in
and
cmpsb
push
dec
jge
rcrb
push
or
pop
add
test
sub
leave
movsb
fwait
lock
jge
loope
pop
les
and
lods
mov
fdivrs
loop
pop
adc
mov
in
lret
push
lods
loopne
insl
sahf
cmpb
jno
stos
mov
xchg
pop
jge
jl
add
fildl
add
sub
push
cli
xor
stos
xchg
fwait
test
lock
lret
stos
scas
in
dec
push
mov
aas
or
mov
push
rcrl
frndint
aaa
movsl
int
stos
clc
adc
loop
lods
lea
out
lea
sbb
popa
xor
insl
das
dec
scas
sar
ds
testl
insl
xor
jo
adc
imul
or
mov
shrl
or
jp
cmp
inc
sbb
mov
ret
ret
push
add
sbb
pop
aad
fmull
sub
sbb
jmp
or
mov
mov
ljmp
out
fmull
shrb
mov
sbb
ljmp
and
push
nop
shr
push
addr16
dec
addr16
pop
movsl
xlat
and
cmp
and
xlat
and
sbb
in
mov
xchg
js
fsubs
repnz
sti
gs
test
cltd
xchg
fwait
pop
ja
or
mov
push
ficomps
add
jle
xchg
jns
inc
clc
inc
and
sub
aaa
repnz
icebp
pop
fcmovb
cltd
jbe
adc
ja
sub
adc
cmp
mov
js
and
cmp
mov
mov
cltd
std
or
nop
insl
arpl
mov
jns
stos
shlb
dec
xchg
lret
xor
sti
add
add
outsb
es
mov
xchg
pusha
stc
push
outsl
int3
imul
lret
mov
push
or
ds
mov
dec
cvttps2pi
mov
add
sbb
icebp
and
jbe
int3
mov
adc
cli
and
adc
pop
leave
andb
mov
outsl
xor
mov
pop
icebp
adc
add
cmc
sub
loopne
out
popf
pop
addr16
call
bound
fmull
loope
mov
mov
js
aas
out
mov
or
repz
dec
inc
or
cmpsl
xchg
dec
mov
cwtl
jo
mov
arpl
vpsrlw
mov
and
xor
std
xchg
mov
cmp
test
push
aaa
clc
icebp
mov
adc
mov
pushf
xorl
pop
das
fimull
aad
inc
insb
mov
fimull
push
iret
clc
lods
outsl
jno
xorb
ret
sbb
cmpsb
xor
xor
lret
xorl
add
add
pushf
push
pushf
std
mov
ret
iret
fcoms
sub
in
int3
add
dec
inc
cmp
hlt
clc
mov
xchg
sbb
xchg
sub
push
pop
lret
push
fistpl
xor
sub
repz
mov
std
lods
dec
or
mov
test
imul
inc
jno,pt
and
ja
inc
into
pop
movsb
push
jno
je
xor
int
aas
sbb
roll
add
or
push
dec
push
jl
popf
dec
cmc
in
jecxz
xor
xchg
jae
scas
jnp
push
xchg
cmp
loop
or
into
imulb
inc
rcrb
adc
push
loopne
push
ss
clc
jge
int3
cmpsb
jno
and
cmp
aam
mov
daa
push
stos
cvttps2pi
nop
mov
out
aas
pop
mov
or
negl
and
dec
xchg
mov
pop
dec
inc
sub
or
shrb
aad
push
ret
pop
call
xchg
movsl
das
jns
lds
xchg
test
andl
testb
pop
mov
mov
mov
inc
dec
pop
out
test
sub
push
dec
or
fisubs
daa
xor
insl
sbb
dec
dec
ret
jne
pop
enter
push
push
pop
cmp
clc
jmp
mov
fbld
decb
jecxz
push
xchg
fwait
push
sbb
fs
pop
daa
jecxz
mov
bnd
cmp
in
rol
inc
add
clc
lahf
cmp
xchg
push
in
pop
or
rolb
lock
shrb
stos
mov
in
jb
jl
mov
or
xchg
shr
jnp
arpl
cs
pop
mov
adc
mov
mov
aad
hlt
or
xchg
movsl
xor
or
mov
ja
sub
xchg
sub
add
into
dec
jbe
movsl
mov
lds
mov
lods
push
pop
addr16
insl
cmc
push
xor
scas
flds
ljmp
adc
push
xor
rol
movsl
insb
addr16
lahf
jmp
sub
jb
callw
dec
loope
jp
movsl
je
pop
and
inc
jp
pop
pop
cld
inc
lret
inc
cmp
xor
xor
jmp
push
sub
inc
adc
pop
clc
mov
loope
pop
push
repz
scas
popw
lods
mov
mov
jge
jnp
jp
test
jo
mov
ror
mov
sub
sbb
popf
or
push
out
push
push
sbbb
pop
lcall
sub
adc
dec
call
rorb
leave
test
hlt
cmpsl
fdivs
inc
jl
or
movsl
xor
ret
pushl
pusha
loope
push
fcmovne
cmp
dec
clc
cld
mov
jmp
ds
sbb
xor
int3
orl
xchg
sti
movsb
lds
jp
mov
stos
je
mov
rol
push
clc
fisubrl
push
add
pop
add
mov
in
lret
xchg
inc
inc
scas
lahf
das
mov
stos
popa
mov
mov
mov
lods
fld
shll
and
mov
add
push
add
sub
mov
xchg
push
xor
ret
xchg
clc
movsb
push
push
loopne
sub
idivl
test
std
mov
and
sbb
mov
inc
add
clc
jb
add
sbb
inc
int3
cmpsl
add
mov
repz
aaa
jb
dec
xchg
mov
pop
jnp
or
xor
jns
jp
fisttpl
andl
out
jle
jle
lea
dec
xchg
adc
aas
stos
jae
jle
push
bound
enter
cmp
fcmovbe
or
xor
xchg
mov
xchg
cmp
faddl
sbb
or
stos
test
bound
adcl
das
push
je
arpl
add
stos
mov
push
dec
call
pop
push
pusha
movsl
or
mov
mov
out
cmp
add
inc
push
adc
dec
mov
lahf
jbe
xchg
movsl
scas
lret
popl
sbb
mov
mov
or
test
inc
dec
testl
inc
pop
fnstenv
ljmp
mov
lock
pop
mov
jle
inc
add
xchg
jne
mov
sub
dec
test
jns
cmc
mov
iret
leave
sbb
cmp
mov
test
push
sbb
or
jae
cmp
jnp
sbb
push
add
mov
int
dec
ljmp
outsb
cmpsb
or
fidivs
adc
cmp
call
aam
jecxz
or
subb
test
loop
cmp
cmp
cmp
loop
push
add
inc
mov
rol
jmp
pop
pop
jno
add
jp
jo
cwtl
xchg
lods
inc
cs
mov
scas
jne
mov
inc
xchg
sbb
cmp
jae
inc
ja
pop
jns
out
ja
mov
xchg
sti
dec
fidivrs
mov
aas
test
bound
cmp
jns
xchg
xor
jmp
jge
sub
hlt
mov
enter
mov
nop
insl
ja
mov
mov
mov
sbb
and
mov
mov
xchg
push
add
shll
sub
add
mov
shll
lret
loop
push
ljmp
repnz
adc
push
js
ds
call
ror
ret
or
insb
enter
sti
das
sub
push
dec
dec
insb
jp
mov
dec
sahf
jp
xor
shl
loop
fcompl
icebp
in
cmpsb
push
xchg
xor
mov
xchg
xchg
push
and
repz
push
dec
mov
jae
fs
loopne
sar
lock
xor
ret
pop
pop
stc
testl
lcall
pop
add
mov
xlat
mov
into
test
pusha
das
mov
jno
sbb
pop
fisubl
test
mov
outsb
mov
mov
mov
orl
std
insl
mov
in
repz
sahf
orl
gs
push
or
hlt
cmp
ljmp
inc
adc
enter
sbb
jmp
movntq
jecxz
pop
in
arpl
sti
jne
popf
xorl
cmpsl
fimull
in
mov
stc
orl
pop
sbb
sbb
adc
or
sbb
push
xlat
add
out
addr16
cmc
mov
mov
out
jne
jbe
nop
bound
daa
lea
rcrb
jo
sub
shrl
add
cmp
or
ljmp
cmp
push
pop
call
xor
mov
fwait
add
hlt
out
mov
sbb
xchg
mov
icebp
inc
xchg
cwtl
jae
adc
adc
cmp
push
push
in
enter
or
cmp
fcompl
xchg
xchg
adc
xor
cmp
jle
mov
add
inc
pop
dec
cmpb
push
jecxz
pop
xchg
je
jne,pn
and
xor
cmp
jecxz
sbb
and
push
movsl
xor
lret
inc
out
and
leave
pop
out
or
fidivrl
mov
bound
lret
jp
movsl
pushf
sti
fisubrl
cwtl
cmp
test
test
mov
adc
lock
mov
and
and
ret
mov
mov
ror
rorl
cmpsl
pusha
int
xor
pop
loopne
gs
ret
mov
test
imul
mov
xlat
or
xor
inc
loopne
jl
and
xor
das
push
pop
insb
xor
xchg
mov
or
jns
lcall
sub
mov
movsb
iret
mov
test
mov
push
mov
mov
xlat
mov
adc
pop
mov
or
sub
ds
adc
jne
lcall
pop
xchg
adc
or
outsl
test
mov
hlt
inc
inc
dec
sahf
call
jo
xchg
das
fmul
inc
lock
lcall
xchg
mov
incl
mov
push
les
jmp
leave
add
mov
leave
stc
les
xchg
pop
dec
mov
into
mov
add
outsl
fistpll
cmpsb
aas
mov
cmp
lods
imulb
jge
xlat
xor
iret
imul
or
in
sbb
pop
lods
insb
jo
inc
xchg
cmp
comiss
push
adc
or
jl
adc
push
sbb
sub
repnz
mov
dec
mov
mov
stc
movsb
or
adc
icebp
jbe
jo
inc
stc
add
inc
rcrb
push
loop
insb
into
test
test
push
xor
es
addr16
add
insb
mov
scas
or
jecxz
lock
pop
test
adc
inc
mov
out
dec
icebp
ret
scas
sbb
sbb
cmp
xlat
add
xchg
cmp
scas
push
ljmp
push
cli
and
sbb
lret
into
sub
xor
in
stc
int
aam
sbb
scas
loopne
adc
mov
xlat
fsubrl
int3
pop
in
lahf
addr16
and
sarl
mov
ljmp
push
sarl
mov
in
lods
mov
test
jae
mov
mov
jecxz
cs
cmp
xor
mov
lds
dec
pop
roll
dec
and
jge
stc
js
bound
mov
xchg
bound
in
push
cli
icebp
mov
xchg
mov
mov
xchg
pop
push
fiaddl
and
xchg
cmpsb
fwait
leave
jnp
pop
fisubrs
mov
inc
shlb
inc
in
ret
adc
hlt
stc
out
adc
xor
pop
add
mov
daa
cltd
sub
scas
jbe
std
cmp
xchg
jnp
xor
subl
rcll
xchg
enter
sbb
inc
or
lahf
pop
lahf
xchg
loope
bnd
movsb
es
cmp
adcl
jmp
ror
adc
pop
xchg
dec
or
imul
jns,pn
pop
icebp
cmc
movb
adc
add
jecxz
shll
sahf
int
in
test
out
daa
xchg
xchg
cmpb
into
pusha
int
jb
loopne
mov
jae
dec
gs
mov
popf
mov
rcll
lret
pop
rolb
ret
add
div
daa
push
push
cmp
enter
mov
call
in
into
addl
lds
push
xor
mov
fiadds
rclb
jnp
sub
pushf
popa
call
ja
pop
les
in
dec
push
cmc
or
lcall
mov
test
mov
xlat
add
mov
inc
mov
sub
dec
push
fisubs
test
jae
mov
jne
aad
mov
mov
add
loop
movswl
or
enter
test
inc
outsb
sub
fisubl
push
loop
xor
mov
dec
lret
iret
xchg
ret
idivl
pusha
arpl
aad
sbb
daa
mov
std
insl
shlb
lretw
lret
js
cmpsb
je
cmpsb
popa
fcomp
sub
iret
push
cmp
subl
lds
std
add
movsb
out
icebp
mov
mov
add
lret
dec
pop
js
in
cmp
leave
xor
nop
aad
inc
or
xchg
sar
ret
rcrl
cmpsl
cmpsl
ss
dec
and
lret
cmp
sbb
int
xchg
rorl
jle
cld
inc
pusha
lahf
insb
pop
mov
pusha
ss
das
out
lret
xchg
lods
les
mov
push
sbb
test
decl
inc
push
inc
and
push
sahf
mov
insl
bound
ja
jne
mov
scas
jb
fists
daa
push
in
js
add
bnd
xchg
cmp
adc
cwtl
jl
mov
or
xchg
cmpl
int3
push
jle
cli
sarl
pop
jb
cli
push
ja
in
and
shrb
jb
add
xchg
out
xchg
daa
das
repz
into
and
dec
add
push
pop
out
scas
jle
out
or
mov
popl
gs
jne
nop
mov
test
in
imul
loop
dec
cmp
loop
cltd
fisubs
mov
lret
ret
inc
sbb
dec
pop
mov
pusha
sbb
inc
sub
pop
rorl
pop
mov
cmp
hlt
and
sbbl
push
test
fnstenv
adc
mov
in
adc
add
push
pop
mov
mov
sti
mov
jae
push
out
cwtl
mov
xor
filds
arpl
push
or
and
test
xor
faddl
jo
xchg
movsl
out
fcos
push
cmc
mov
iret
xchg
cmp
inc
pop
push
push
jecxz
jge
mov
xlat
sbb
lea
popa
je
mov
popl
push
int3
dec
push
aad
mov
mov
or
cmpsl
mov
fbstp
xchg
popf
scas
adc
add
cmpsb
adc
sbb
js
cmpsb
cmp
push
test
jp
mov
jg
xchg
xchg
pop
pop
pop
movsb
rep
mov
push
lahf
ds
out
addr16
add
mov
scas
test
push
mov
sbbb
lds
or
mov
inc
cmpsl
mov
lahf
jnp
mov
lret
ja
fimull
jmp
aad
cmpl
xorb
fs
movsl
cld
leave
sbb
cmpsb
jo
xchg
dec
sub
push
push
xchg
push
aas
movsb
cmpsb
loope
adc
xor
scas
ljmp
stc
dec
xor
cmp
inc
mov
xor
addb
sub
xlat
ffree
mov
cmp
push
cmpl
jo
cmp
pop
push
sub
push
lahf
mov
xchg
cmp
mov
jmp
jno
push
imul
cmpsl
push
lock
xchg
test
push
dec
adc
ror
ret
sar
outsl
push
imul
pusha
inc
jmp
jg
xor
incl
push
out
jmp
jecxz
stos
xor
lret
enter
ret
pop
clc
aam
push
cmpsl
out
mov
sub
test
sub
xor
je
aaa
popa
frstor
fcmovbe
xor
mov
cmp
imull
popa
out
mov
lock
nop
sahf
sub
jb
bound
push
popa
scas
addr16
repnz
sub
mov
lods
adc
jmp
mov
test
cmp
js
lcall
outsb
pop
lea
pushf
hlt
and
mov
mov
mov
sbb
pop
xchg
sub
lret
std
and
lods
scas
xchg
pop
xchg
push
ljmp
mov
outsl
insb
sbb
and
cmc
popf
mov
dec
loopne
mov
ret
cmc
push
pop
bound
outsb
mov
mov
out
jno
lock
add
std
push
mov
enter
jg
jns
hlt
mov
push
sub
and
add
ja
jnp
sub
aaa
in
xchg
stos
jge
jne
fidivrs
popa
adc
push
push
xchg
jl
lds
inc
je
add
mov
inc
mov
cmpsl
dec
sub
mov
aam
call
in
inc
out
xchg
lods
sub
repnz
shr
ljmp
or
push
repnz
lds
mov
cwtl
lea
scas
xchg
addr16
pop
mov
pop
and
mov
aas
xor
push
jnp
dec
cmp
xor
jne
xlat
cmpsl
int3
mov
mov
out
inc
adc
imul
ja
test
cli
divb
sub
movsb
adc
ret
pusha
shlb
out
insl
sbb
iret
sub
adc
sbb
or
pushf
push
jecxz
push
daa
test
mov
ret
lahf
ud2
sbb
std
push
pop
loop
mov
push
inc
mov
dec
ss
cmp
icebp
std
ret
test
incb
mov
adc
jno
mov
and
lods
divl
lret
aas
inc
jmp
cmp
push
sub
fwait
add
sti
xor
inc
push
dec
xchg
outsl
dec
xchg
inc
ljmp
jg
popf
xchg
dec
dec
loop
fcoml
cmp
out
mov
xor
test
adc
cmc
shr
pop
mov
jns
cmp
mov
jg
pop
in
or
or
jle
jnp
adcl
shll
xchg
cld
test
repz
mov
or
dec
lahf
jne
in
scas
cmp
movl
lods
in
jge
out
cmp
mov
loopne
sarl
loopne
jecxz
mov
insb
inc
cmp
pop
mov
mov
ret
les
test
scas
dec
loopne
outsb
test
insb
xchg
and
jne
or
shl
addr16
add
adc
cltd
stc
mov
add
adc
add
pop
sahf
pop
inc
test
cmp
lea
add
cs
cmp
push
clc
sub
jae
mov
xlat
imulb
gs
pop
sub
sub
ljmp
dec
out
mov
out
cmpsl
xchg
sub
aas
loop
mov
push
sbb
jae
jne
adc
movsl
cmpsl
mov
push
daa
jl
sbb
mov
clc
push
fs
cmp
or
xlat
xchg
cmp
dec
arpl
xchg
mov
sbb
fistl
xchg
cmp
clc
imul
or
test
insb
push
test
mov
mov
adc
shr
or
add
mov
and
std
popf
scas
arpl
mov
cli
test
inc
ret
sub
je
mov
jmp
xchg
mov
mov
arpl
sbb
fwait
movsb
addr16
and
in
mov
pop
pop
jl
out
pop
nop
push
xchg
and
inc
test
jo
push
pop
dec
mov
add
xchg
cmp
sub
ficoms
jmp
iret
cmpsb
mulb
inc
fsubp
test
xorl
clc
insb
insl
sbb
lret
xrelease
and
out
sub
inc
pop
and
divl
shrb
xchg
cmpsl
xchg
inc
pusha
cmp
aas
ret
sbb
shlb
or
inc
inc
lahf
dec
xchg
jne
sbb
test
gs
mov
js
and
xor
sub
lahf
nop
das
inc
lret
aaa
std
or
lcall
mov
aad
xlat
mov
dec
popf
out
and
push
outsl
shl
push
mov
xor
out
imul
xchg
mov
cmp
lock
pop
jne
jo
xchg
bound
lods
adc
pop
loop
sub
arpl
divb
in
push
lret
jne
out
int3
outsb
push
cmpsl
je
push
movsl
gs
fwait
mov
lock
mov
int3
adc
dec
rorl
jae
hlt
xchg
pop
cmp
orb
test
je
pop
std
mov
xorb
xchg
mov
sbb
push
lcall
jne
std
mov
adc
insb
pushf
sahf
jg
mov
rcrb
or
test
fisubl
mov
clc
shlb
push
dec
daa
in
cli
enter
mov
jecxz
ljmp
sub
aaa
repnz
pop
outsl
pop
bound
sub
out
out
mov
pop
jo
mov
cmp
push
ret
mov
xchg
mov
sbb
inc
insl
out
int3
incl
cli
jmp
pop
orl
mov
jo
mov
stc
pop
mov
xchg
push
pop
mov
cmp
add
xor
pop
cmp
imul
imul
sti
sub
je
roll
lea
sub
adc
aam
daa
mov
or
btc
push
and
mov
mov
jp
cmpsl
scas
mov
jecxz
push
mov
inc
adc
fdivs
inc
push
lea
mov
jl
add
fadds
gs
sub
adc
mov
bound
mov
popf
leave
and
jge
imul
iret
mov
repz
shll
inc
and
int3
sub
mov
fucomi
mov
lods
xchg
lret
mov
mov
mov
mov
and
mov
sbb
test
xlat
shrb
lods
enter
xorb
scas
ljmp
xchg
cli
int3
aaa
es
sarb
xor
inc
rcll
push
xchg
and
jmp
outsb
mov
test
jne
cltd
lret
ja
pop
pop
rclb
ficompl
stc
mov
adc
add
hlt
daa
mov
je
jge
inc
mov
push
jle
xor
xor
leave
loope
adc
sub
push
out
inc
scas
cmpsb
adc
lods
mov
sbb
jbe
shl
sbb
mov
mov
mov
mov
sbb
xchg
mov
aam
movsl
lods
xchg
testb
sub
jecxz
sub
sarl
lcall
aaa
mov
or
std
insl
test
out
loope
mov
mov
or
pop
pop
adc
add
or
imulb
pop
nop
mov
shrb
sbb
outsl
push
inc
jae
or
mov
adc
jnp
ja
in
andb
sbb
sbb
sbb
sbb
and
ljmp
mov
mov
aad
icebp
data16
arpl
sbb
cs
ds
loop
adc
es
shr
mov
sub
test
and
xchg
popf
lods
jle
cmp
xchg
push
xor
jns
sbb
call
mov
das
inc
push
fsubl
jbe
in
inc
cmp
dec
cmpsl
adc
rclb
pop
mov
es
dec
pop
movsl
add
jmp
push
mull
adcb
push
fildl
sub
lcall
jne
mov
mov
int
or
add
sbb
sub
sub
xor
jecxz
inc
daa
out
mov
sub
loop
jno
and
mov
mov
shrl
stos
push
dec
dec
and
nop
push
out
or
jl
cwtl
imulb
and
movsl
outsl
imul
dec
fildl
rcrl
ljmp
js
lahf
jmp
mov
dec
ret
jne
rcrb
popa
cmp
mov
cmp
les
in
fstps
push
insl
out
pop
pop
stos
and
sbb
cmp
ljmp
cs
imul
cmp
int
ljmp
in
dec
or
inc
sbb
mov
pop
popf
or
idiv
lock
data16
loop
xchg
xchg
frstor
rep
or
shll
fisubs
clc
jno
mov
rcll
sbb
shll
adc
sbb
or
std
popa
lods
out
or
sbb
add
mov
inc
and
aas
ret
dec
jne
lods
loope
fwait
addr16
ds
lcall
test
je
and
dec
std
cld
mov
dec
int
and
sbb
xor
out
icebp
dec
push
jae
cltd
sbb
repz
cmp
push
movsl
aad
push
sub
mov
loop
push
mov
mov
mov
outsb
test
in
sbb
loop
add
xlat
mov
jns
addr16
stos
cltd
xor
aaa
lahf
pop
outsl
es
cmp
sbb
adc
sbb
adc
outsl
cld
mov
cmp
fnstenv
imul
cs
push
int
mov
push
jbe
dec
iret
add
rol
xlat
and
pop
sbb
cltd
jno
add
xor
mov
and
sbb
cwtl
sub
in
js
push
push
ret
add
xor
jle
pop
lock
std
mov
daa
pop
cli
lods
inc
sbb
icebp
lahf
inc
jb
sbb
sbb
xor
dec
xor
scas
mov
or
push
inc
out
out
push
adc
cmp
into
bound
push
movsb
stos
mov
adc
icebp
sti
xchg
mov
sub
loopne
out
and
mov
mov
adc
adc
xor
fiaddl
xchg
mov
xchg
lea
stos
mov
scas
fimuls
cmp
push
js
or
and
dec
push
mov
cs
cwtl
in
out
mov
pop
jnp
sti
cmp
pop
sub
dec
in
sahf
mov
dec
xchg
mov
xor
cli
cmpsl
dec
arpl
jo
inc
adc
and
js
repz
push
stc
aad
sub
cmp
jecxz
pop
rclb
lahf
scas
or
lods
pop
sub
iret
rclb
push
notl
aad
hlt
inc
pminsw
xchg
mov
roll
xlat
and
fidivrs
cs
dec
imul
sbb
in
scas
dec
jp
jb
add
sbb
xchg
lods
add
loope
add
ret
shlb
xchg
cld
dec
stos
or
pop
xchg
fsubp
es
scas
mov
movsb
jp
jl
nop
mov
sub
sub
dec
dec
pop
xchg
in
je
shlb
adc
and
je
xchg
fldenv
sub
cmp
mov
mov
jnp
xlat
cmpsl
sub
sub
mov
pop
mov
loop
mov
rorl
xor
cmp
cmp
pushf
jae
mov
sbb
insb
imul
dec
adc
and
sbb
push
xor
jg
lret
fdivl
mov
lahf
inc
dec
jge,pt
push
test
cmpsb
ret
xchg
and
mov
adc
mov
rol
lods
fsubr
divb
imulb
into
addb
outsl
jmp
pop
xchg
fsts
dec
lods
inc
cmp
bound
mov
xlat
jp
es
pop
and
xchg
xchg
cmp
xor
cli
frstor
int3
lret
loop
pop
adc
pop
pop
push
cmc
add
xor
imul
loope
loope
mov
ss
push
xchg
bnd
push
lock
or
add
dec
roll
push
sub
lret
mov
lret
inc
imul
xor
mov
lea
jno
out
inc
adc
push
xor
sub
shr
test
jb
outsb
pop
cld
push
or
adc
cld
sbb
mov
cmp
les
mov
popf
mov
mov
es
movsl
lods
test
call
in
iret
mov
xor
shrl
insl
daa
jns
push
loopne
inc
insb
in
imul
aas
pop
add
ss
sbb
jp
adc
sbb
dec
test
scas
test
xor
jmp
inc
cwtl
add
cli
pop
daa
pop
mov
xor
rol
xchg
mov
adc
or
adc
std
stc
bound
stos
call
mov
and
popa
ss
push
out
fidivl
jno
and
in
sub
sarl
push
lret
mov
fcmovnbe
rorl
test
or
data16
hlt
out
pop
xchg
inc
dec
mov
ss
ret
xchg
push
sub
mov
push
push
mov
in
pop
out
incb
or
xor
xchg
add
cltd
cmp
jmp
xor
xor
sbb
cwtl
arpl
mov
fldenv
xorl
mov
cltd
inc
cmp
fbld
aad
jl
xchg
cmp
icebp
add
in
lcall
xor
or
inc
sub
scas
repnz
jmp
adc
clc
ret
leave
ss
fldl
jle
sub
pop
lea
mov
aam
push
int
test
sarl
sub
mov
pop
push
data16
cmp
mov
ficomps
stc
js
pop
push
add
jb
bswap
aaa
inc
rolb
sbb
cwtl
jbe
out
adc
jb
imul
aaa
pop
jecxz
add
popf
popa
lcall
stc
mov
rolb
xchg
mov
loop
loope
pop
leave
iret
pop
fimull
fadds
or
push
subl
fldcw
fcmovnu
pop
add
ljmp
fwait
push
mov
imul
cmp
out
stos
cmp
jne
jecxz
out
aam
mov
xlat
rolb
mov
mov
pcmpeqd
dec
add
imul
les
sbb
cli
mov
xchg
dec
in
jns
pop
pop
vcvtsi2sd
lods
push
sub
clc
push
imul
add
pop
mov
jg
adc
hlt
je
mov
lock
and
rorb
lods
je
push
daa
mov
push
jle
shrl
adcl
mov
fidivs
and
mov
ljmp
push
xchg
mov
scas
fildll
push
data16
cli
dec
les
adc
fisubrs
pop
test
out
sti
aad
adc
add
int3
inc
popa
dec
icebp
push
enter
insb
loopne
js
or
es
jp
ret
jns
fistl
jo
adc
fists
mov
aam
std
push
xor
pop
push
dec
dec
loop
sub
pop
roll
mov
into
sub
jnp
fldenv
xor
adc
ficompl
repnz
daa
push
stos
fistpl
out
add
das
pop
adc
adc
mov
xorb
inc
sbb
int
insl
sbb
into
ret
pop
shll
mov
sub
out
aas
inc
lret
sti
repz
xor
clc
or
xchg
push
jmp
in
cmp
dec
int3
jp
jg
movsb
daa
scas
outsb
adc
adc
mov
lret
loopne
pop
push
ror
or
data16
mov
dec
lds
xchg
aam
mov
jbe
push
clc
stos
nop
inc
xchg
mov
in
mov
movsb
popa
incl
mov
ljmp
fisttpll
sbb
push
push
addr16
lret
cmpsl
and
pop
jbe
mov
jno
mov
cmp
stos
dec
aad
jge
mov
repz
jns
cmp
inc
add
mov
pop
addr16
mov
mov
out
insb
leave
sub
scas
jp,pn
mov
add
jmp
clc
push
push
sbb
and
cltd
mov
fwait
enter
xor
add
js
in
ds
dec
push
sbb
je
mov
pop
jle
lds
jnp
xchg
int
mov
dec
dec
or
sub
mulb
inc
mov
pusha
jle
adc
sub
push
mov
leave
ljmp
push
nop
inc
mov
pop
rclb
mov
mov
push
pop
mov
add
lret
enter
mov
sub
lahf
cmp
add
popa
movsl
orb
push
fnsave
xor
mov
outsb
ja
repnz
imul
sbb
into
enter
in
clc
shrl
test
sti
lret
inc
dec
lock
add
mov
and
cmp
stos
cli
shrl
adc
inc
sub
aad
mov
aad
cmp
xor
jmp
notl
shlb
xor
clc
dec
movsb
loop
push
jmp
push
jb
xchg
push
pushf
mov
cmpl
shlb
call
aas
xchg
cmpb
push
and
xchg
inc
dec
mov
jae
inc
fcomi
and
push
push
cltd
sti
test
aad
sbb
cltd
loop
push
ljmp
dec
and
xor
inc
mov
pop
shrl
push
add
xor
lds
pop
fwait
outsb
add
mov
and
rorl
xor
clc
jge
cmp
mov
in
jp
cwtl
and
arpl
inc
adcb
mov
popf
sbbb
adc
aad
push
aam
pop
lods
aaa
sub
cmpsb
xor
and
into
mov
mov
outsl
cmp
aas
stos
cwtl
subl
inc
mov
scas
packsswb
cwtl
fldl
std
and
in
push
push
mov
or
sbb
mov
mov
int3
pop
call
cwtl
loope
stos
xor
mov
pusha
icebp
rcll
jle
faddl
dec
push
push
mov
cmp
fnsave
sbbl
aaa
jno
hlt
js
xor
sti
xchg
imul
ficoml
out
inc
dec
clc
inc
in
xor
inc
lock
push
or
push
xchg
mov
hlt
sbb
xor
push
mov
add
lcall
mov
sbb
pop
inc
inc
inc
and
cltd
lds
hlt
clc
and
sub
in
insb
movsb
cs
jl
jle
test
jae
dec
mov
jb
cmpsb
and
xor
shll
sbb
xchg
test
sub
fwait
insl
mov
pop
test
sub
cmc
loope
push
cmp
into
out
push
lret
mov
cmpsb
cmp
mov
push
jmp
inc
or
sub
cmp
cld
lret
nop
adc
dec
arpl
push
sub
xchg
test
pushf
push
cmpsb
gs
cmp
cmp
mov
ljmp
cli
inc
or
adc
out
je
jns
fldenv
fdivrp
dec
add
lretw
out
xchg
stc
and
pop
cmpsb
mov
fcom
cmc
mov
cmpsl
mov
fisubl
pusha
movsb
test
push
scas
push
sub
jo
mov
jns
mov
dec
add
pop
lahf
das
repz
int3
in
pusha
add
clc
lret
ljmp
push
movsb
movsb
loope
sub
add
mov
insb
fistpl
and
mov
out
mov
mov
mov
out
outsb
lods
arpl
inc
mov
pop
scas
decb
mov
cmpsl
shr
sub
mov
xchg
xor
bound
pop
push
out
call
rol
in
add
loopne
icebp
add
sub
cmp
test
imul
out
adc
mov
cs
loope
dec
mov
add
jae
mov
mov
jo
xchg
js
ljmp
dec
sub
jl
and
or
jnp
and
fsts
mov
mov
inc
push
mov
cs
push
sub
cmpsl
xlat
mov
repnz
mov
sub
lock
iret
cmc
cmp
mov
xor
mov
cmp
bnd
jle
movsl
lahf
pop
jbe
jno
push
cmp
sbb
adc
in
jne
notb
notl
sub
lods
sbb
movsb
jne
rolb
add
xchg
mov
lds
aam
pusha
xor
test
leave
cs
xchg
inc
jae
add
jae
adc
inc
jp
gs
daa
repnz
sub
push
and
lret
out
loope
mov
jp
adc
pop
shll
inc
cmp
hlt
mov
adc
loop
sub
shl
addr16
cmp
pop
scas
aad
es
shrl
aaa
les
adc
insb
push
fs
or
sbb
incl
xchg
jbe
or
in
loope
lds
clc
cmp
aas
xchg
rcr
and
int3
pop
loope
and
or
adc
jns
cmp
ds
pop
arpl
cs
push
loope
shrb
sub
sbb
adc
lods
pop
pusha
sub
add
push
push
adc
mov
inc
pop
add
push
lock
cmp
push
outsb
es
rcll
pushf
adc
fnsave
push
jns
push
fucomp
mov
jecxz
sbb
xchg
sub
mov
pop
and
int3
cmp
pop
sub
fstpl
add
mov
xchg
fisubl
jp
cmpsb
lahf
ja
add
push
stos
into
mov
mov
mov
insb
xor
cmc
ja
mov
ret
fdivr
push
cmc
dec
and
enter
dec
xlat
lcall
daa
mov
gs
xchg
pusha
cmp
inc
xlat
pusha
pop
adc
or
mov
call
jno
jl
in
sahf
or
popf
push
lret
jecxz
cmp
adc
cmp
hlt
jl
pop
into
stc
fdiv
mov
jmp
xchg
movsb
mov
ficompl
icebp
iret
data16
jo
mov
sti
pop
shl
add
cmpb
out
mov
add
jmp
insl
pop
outsb
sub
push
ficoms
jp
cmc
pop
ljmp
test
js
repz
mov
test
std
imul
sub
ljmp
lret
in
ja
mov
xor
dec
or
js
pushf
pop
rcrl
cmpsb
repz
xchg
cmpl
sub
cmc
pop
push
jp
repnz
pop
sbb
into
or
or
push
dec
cs
out
enter
adc
dec
jecxz
ficompl
mov
sub
mov
push
subb
push
cmp
jae
lea
sbb
push
ds
adc
test
dec
ds
fidivrs
sub
leave
lods
xor
mov
mov
xchg
push
popa
mov
jno
pop
cmp
stos
movsl
xlat
insb
add
mov
lret
mov
addr16
out
xor
add
xchg
test
push
movsb
and
pop
mov
test
ret
cli
pop
and
xor
test
adc
cmp
pop
loop
addr16
push
imul
push
lret
mov
xchg
test
and
into
xchg
popa
fcoms
sbb
test
testl
inc
jno
mov
jo
icebp
push
pop
jp
add
pusha
mov
lds
test
dec
mov
cli
xor
fcomps
and
adc
stos
incl
sti
stos
adc
lret
push
sahf
fwait
and
add
jae
cmp
dec
popa
fsub
mov
jmp
daa
test
push
jle
pop
adc
ja
jecxz
dec
adc
xchg
jmp
add
hlt
add
mov
aam
sahf
add
xchg
cs
sti
mov
outsl
jg
xchg
jae
cwtl
rcrl
ret
lcall
add
pop
inc
mov
sbb
mov
ret
jae
aas
subb
xor
js
fstpt
xor
cltd
cmpsl
dec
mov
xchg
mov
bound
les
cltd
adc
inc
int
in
pop
cmpsl
jp
mov
adc
vhaddps
xchg
loop
push
pop
jne
mov
ljmp
lock
std
imul
mov
imul
push
inc
or
jp
and
xorl
subb
xchg
mov
mov
jbe
outsb
fstpl
aad
dec
cmpb
mov
pop
xor
mov
test
mov
mov
cmp
add
jb
dec
sti
push
xchg
push
xor
ret
cmp
scas
fcomip
jl
rol
lahf
repnz
test
push
or
mov
dec
lods
jmp
jl
jno
mov
ss
or
imul
and
insb
xor
sti
mov
xchg
negl
cmp
xchg
pop
cmp
push
stos
dec
mov
dec
popf
mov
bound
or
lock
jne
xchg
sbb
mov
or
add
push
jo
adc
xor
xor
jae
ss
and
into
jmp
mov
ss
lahf
outsb
sub
mov
push
push
iret
testb
cmp
and
pop
scas
and
cmp
mov
mov
inc
jmp
loopne
xchg
mov
repz
pop
sbb
out
out
jg
dec
push
inc
dec
int3
mov
mov
mov
aam
pop
movsl
sub
cld
test
jns
pop
mov
mov
pop
das
rol
insl
sub
aaa
lods
add
shl
push
repz
lea
das
cs
inc
mov
sbb
cwtl
inc
sub
adc
xor
test
lods
mov
pop
icebp
inc
dec
outsb
movsb
call
xchg
dec
fmuls
push
cmc
pop
pop
imul
repz
int3
cmp
ja
hlt
jns
dec
xlat
scas
push
mov
insb
mov
scas
mov
ja
cltd
data16
push
mov
push
xchg
andl
pop
test
movntq
gs
mov
in
jecxz
sbb
sbbl
inc
andb
iret
fidivrl
jp
mov
cmpsl
addb
cmp
dec
inc
pop
xlat
push
cli
sbb
addr16
adc
fcoms
cmp
lds
push
mov
jge
lret
cmp
mov
inc
cmp
ss
outsl
jle
data16
dec
mov
dec
xchg
inc
nop
jnp
frstor
sahf
inc
jno
or
pushl
inc
pop
jge
jl
das
aaa
adc
jo
push
lea
sahf
dec
cmpsl
test
mov
mov
cmp
sarb
loopne
inc
aam
dec
test
lret
and
xchg
add
lahf
adc
test
adc
out
mov
ss
ficoml
cs
lods
mov
stos
or
xor
xlat
fidivrs
mov
fidivl
loopne
iret
loop
aad
icebp
mov
adc
sbb
int3
sub
adcl
and
dec
out
dec
adc
aam
xor
mov
adc
cltd
stos
imul
test
add
scas
or
stos
stos
aam
call
lcall
mov
rol
xor
cmp
iret
outsb
xchg
divl
jo
repnz
lods
sub
mov
fisttpll
sti
outsb
call
fsubl
or
iret
inc
add
hlt
cmc
mov
subb
sbb
cmpl
cmp
xlat
js
mov
jb
scas
push
and
xchg
inc
ret
repz
outsl
cmp
fisttps
or
push
loopne
aam
push
fucomi
sbb
mov
pop
xchg
loope
add
xor
insb
xor
push
pusha
cld
cmp
lds
ljmp
movmskps
push
je
rcr
pop
lock
aas
fwait
in
dec
xchg
inc
scas
test
call
jae
xchg
lea
inc
mov
iret
fdivs
ljmp
cmp
xchg
push
add
shrb
std
jo
out
hlt
add
sub
xor
cld
xchg
xlat
hlt
cwtl
or
pop
loope
pop
ljmp
pop
es
cmp
adc
je
mov
cmp
push
adc
inc
inc
leave
loopne
pop
and
sub
add
lea
in
std
add
jbe
testb
and
enter
fsts
mov
loope
or
xchg
xchg
insl
cmpsb
jae
xor
imul
jae
xchg
scas
into
out
sbb
ret
repnz
call
cld
out
sub
movsl
pop
sub
popf
in
test
sub
lret
sbb
or
sbbb
fcoms
fildll
jo
push
dec
leave
cmp
sbb
sbb
aas
lods
lret
jg
inc
push
sti
fildll
mov
mov
jnp
mov
clc
lea
pop
sbb
aam
ja
imul
jl
in
xchg
add
xchg
pop
popf
mov
leave
mov
and
iret
xorb
mov
jnp
shrb
das
lret
movsl
hlt
sbb
call
sahf
xor
jmp
push
mov
lret
push
rcll
daa
jbe
mull
fadds
lods
lods
imulb
int3
xor
fnstsw
or
movsb
sbb
divb
mov
sar
and
loopne
and
test
repnz
bsr
sbb
iret
fldenv
aam
push
enter
mov
mov
pop
push
mov
fcoml
add
aas
outsb
sub
xchg
popa
push
adc
mov
cwtl
inc
inc
popa
not
adc
inc
fs
push
jl
loop
push
testl
jae
sub
mov
aaa
les
adcl
mov
clc
gs
jo
push
or
cmpsl
cmpsl
insb
cmp
outsb
daa
adc
push
mov
out
xor
popf
stos
mov
imul
xlat
dec
clc
mov
pop
movsl
sub
pop
jge
pop
and
and
or
call
adc
xor
int
shll
insb
mov
subb
jmp
sti
cmp
pop
mov
ds
in
push
shrl
aas
std
xchg
inc
lea
in
jg
lea
xchg
add
mov
scas
jae
pop
js
or
outsl
inc
jecxz
pop
fwait
icebp
mov
fwait
xor
sub
xchg
and
out
jns
out
jmp
pop
mov
arpl
ja
mulb
test
pop
push
pop
push
push
inc
and
jecxz
adc
rolb
in
movsl
push
fildll
ss
push
test
cs
adc
popa
mov
fistpl
test
inc
cmp
add
sub
outsb
pop
cmp
pop
mov
repz
and
arpl
mov
iret
faddp
ja
mov
jo
jns
ret
ret
cli
sub
cmpb
imul
test
loopne
dec
xor
dec
scas
mov
pop
dec
pop
xor
in
jno
pusha
iret
mov
xchg
mov
fwait
inc
vpmulhw
dec
gs
add
ficomps
dec
add
fs
sbb
dec
jl
js
or
popa
mov
xor
daa
adc
je
and
mov
pop
mov
rcr
mov
and
hlt
lcall
cmp
sub
sbb
jle
call
cld
int
lods
jae
out
sub
push
cwtl
mov
aam
out
cmp
rcll
les
shll
fistl
or
mov
xchg
fnstsw
inc
xor
in
push
orb
mov
cmp
imul
int
cli
cmp
or
sbb
lea
sbb
je
pop
cmp
cmpsb
sbb
lods
lods
subl
dec
je
imul
cmpsl
or
icebp
or
stc
push
sub
cmp
fwait
push
sub
sbb
or
addr16
fwait
push
xchg
in
cmpsl
mov
sub
or
and
into
into
cltd
pop
xchg
and
mov
mov
xor
loope
push
cmp
hlt
in
mov
call
pextrw
mov
out
cld
repnz
cmp
jle
pusha
mov
lahf
out
jge
fisttps
in
test
mov
popf
mov
pop
xchg
in
mov
push
inc
nop
push
jae
add
inc
cmp
mov
test
scas
in
mov
or
or
idivb
fsubrl
push
lret
leave
adc
sub
jecxz
and
xchg
test
inc
lahf
dec
jne
jnp
adc
adc
inc
into
loopne
inc
shll
sbb
mov
sbb
rclb
inc
mov
xor
adc
adc
adcl
scas
xor
adc
dec
adc
and
fsubrl
fcoml
xchg
mov
icebp
filds
and
or
xchg
test
push
das
cmp
add
mov
pop
push
add
sbb
outsb
adc
fistpl
or
cmc
dec
pop
clc
pushf
out
and
and
cli
stc
mov
leave
adc
rcrb
adc
push
jae
addr16
aaa
and
js
sarb
or
mov
cmp
fidivs
adc
pop
fucomip
lock
cli
or
cmp
mov
xchg
pop
pop
fidivrs
mov
das
push
xor
push
cmpsb
pop
lock
imul
adc
std
insb
push
sarl
push
pop
sub
mov
insb
add
mov
daa
pop
jnp
and
cmp
scas
shl
call
cmpsb
push
xlat
mov
je
or
addr16
xchg
je
scas
arpl
scas
das
cmp
sbb
aad
xchg
call
clc
jl
jge
cmp
add
xchg
adc
and
add
pop
lods
js
loopne
sbb
in
aaa
fsubl
xchg
insb
lea
push
add
mov
rolb
dec
xchg
mov
adc
pop
mov
ss
mov
cmp
aas
push
leave
test
xchg
xor
cmpsb
or
popa
xchg
icebp
inc
outsl
pop
sub
stos
mov
dec
inc
jbe
ds
xlat
and
int
out
pop
inc
inc
inc
loopne
sub
es
jecxz
cmpsb
sbb
pushl
push
jg
pop
clc
icebp
push
scas
pusha
out
sbb
lret
seto
out
cmp
call
pop
dec
movsl
jnp
mov
and
xor
adc
inc
in
and
mov
test
sub
mov
mov
cmpsl
add
inc
test
add
shr
movsl
mov
insb
pop
jmp
dec
dec
data16
cltd
dec
xlat
popf
shll
or
rorb
inc
sub
lahf
fdiv
and
fiaddl
lock
xor
jno
mov
add
sub
mov
mov
fidivrs
sarb
das
fsubp
fimull
jle
cld
aas
jp
adc
xor
push
add
pop
loop
imul
xorl
sub
call
push
data16
pop
mov
loop
dec
dec
adc
das
adc
icebp
mov
cltd
pop
or
and
adc
mov
and
hlt
stos
lret
pop
je
mov
inc
push
push
ss
jo
sub
push
lea
push
fistl
push
xor
lret
js
cmp
scas
rorl
pop
repz
lret
inc
mov
jmp
fucomi
and
xor
cmp
add
cmp
xchg
jg
push
adc
fnop
cld
in
or
ja
test
add
sti
adc
fcomi
sti
or
jge
stc
sub
xchg
js
or
pop
popa
and
pop
adc
dec
sar
jne
and
cltd
push
out
push
lods
adc
add
mov
inc
frstor
nop
jge
sub
out
in
dec
bound
in
mov
imul
popa
test
mov
dec
sbb
bound
gs
jno
jo
stc
pop
mov
mov
in
jae
pop
adc
pop
mov
cmp
push
mov
sub
add
push
cli
xor
dec
xor
push
bound
jp
jle
enter
inc
sbb
inc
adc
out
adc
shll
lods
mov
cld
add
pop
stos
mov
xchg
pusha
clc
loopne
and
inc
notl
xor
adc
fldenv
push
push
rcr
and
fwait
pop
push
sar
or
pop
lahf
sbb
jbe
in
fsubrp
xchg
lock
fldenv
adc
popf
xchg
call
push
mov
roll
movsb
notl
lret
pop
arpl
out
leave
rorb
inc
popf
test
movsb
add
int
cmc
int
mov
xchg
and
aaa
ret
xorb
xchg
int3
jnp
mov
loope
jge
mov
sub
jno
mov
mov
xchg
test
adc
fidivs
aas
cmp
out
orl
loop
movsb
xor
test
ret
andb
rclb
shll
popa
sbb
fsubr
inc
cmp
iret
in
adc
out
jne
pop
mov
mov
mov
shlb
outsl
mov
leave
xor
dec
sbb
fstpl
mov
push
gs
ja
adc
push
add
push
dec
leave
pop
shll
xchg
xchg
sub
and
in
or
and
jg
jo
inc
cltd
mov
outsl
mov
adc
cmpsl
lock
mov
in
mov
cld
fs
xchg
nop
divl
xor
add
imul
out
aam
ljmp
imul
lods
jmp
mov
sbbb
jne
add
fiaddl
clc
andb
adc
ss
jmp
xchg
adc
mov
es
insl
xor
cmc
fstl
xchg
outsb
and
popf
das
and
xchg
scas
push
nop
adc
sahf
or
std
mov
shl
xchg
scas
fbld
push
push
nop
shlb
outsl
roll
rcr
cmp
popa
and
add
push
xchg
out
ficomps
or
push
and
sub
pop
std
pushf
cltd
loopne
xchg
ds
cmpsl
mov
ds
mov
and
fisubrs
call
pop
mov
add
cld
xor
out
adc
bound
bnd
sysret
mov
xor
pushf
cmp
add
shlb
adc
fldcw
push
push
pop
les
les
mov
push
add
fadds
es
push
pop
add
pop
dec
stos
inc
outsl
xchg
or
cmp
adc
lahf
aaa
arpl
mov
sub
inc
and
stos
jne
and
mov
pop
in
adc
or
and
outsb
add
jbe
jne
push
jbe
dec
mov
fs
aas
test
lahf
lock
dec
hlt
xchg
repz
loopne
inc
gs
cmp
sbb
push
stos
fwait
ret
in
push
shl
setge
cs
inc
xor
push
jbe
pushf
sbb
adc
daa
mov
ret
aaa
add
and
cmp
adc
clc
push
xchg
mov
cmp
rcrl
call
shr
cmp
popa
loope
sbb
push
stc
fnstcw
or
add
aas
std
arpl
jns
mov
pop
inc
fimuls
jnp
dec
movsb
imul
loop
mov
lea
fdivl
xlat
push
lods
popa
ljmp
mov
aas
push
les
xchg
jbe
push
mov
cmp
or
mov
popa
enter
sbb
roll
push
movsl
push
cld
sbb
jg
mov
adc
sbbl
push
mov
out
push
mov
sbb
std
mov
sub
out
inc
push
aad
and
inc
mov
out
mov
xchg
iret
fcmovne
jno
fldcw
and
mov
push
fnsave
int
fstp
jnp
testl
adc
jae
mov
push
pop
sti
mov
adc
stos
gs
jle
out
sbb
push
push
pop
adc
push
add
mov
test
cmp
xchg
mov
adc
roll
stos
sar
inc
nop
sub
insb
add
inc
sbb
sbb
or
push
ja
ret
jbe
mov
mov
shll
ret
pop
loope
popf
bound
jno
dec
repz
in
sbbb
push
push
adc
add
mov
lret
mov
and
shrb
imul
pop
add
mov
outsb
dec
inc
cld
or
ror
pusha
dec
sbb
aad
jge
pop
mov
mov
pop
xchg
test
cmp
in
movsb
cltd
scas
pop
lret
fsub
mul
and
dec
mov
adc
ss
mov
mov
and
add
mov
jmp
or
mov
inc
sbb
jns
dec
out
push
bound
gs
cmpl
icebp
rcrb
cmp
cmp
inc
les
mov
mov
or
sub
push
jg
insl
push
or
jmp
push
andb
data16
hlt
sbb
ret
ja
or
sub
and
mov
or
lahf
pop
shl
or
and
lods
xor
outsb
add
pop
push
outsl
and
xor
add
sub
repz
sbb
adc
popf
add
adc
sub
insb
cld
stos
push
or
cltd
add
cmp
push
and
insl
stc
lock
sub
outsl
pop
rorb
xchg
rorl
lods
fstpt
or
fdivr
fnstcw
adc
addb
push
gs
movsb
dec
outsb
sub
mov
pop
aaa
lods
dec
cwtl
pop
orl
mul
lods
insb
lret
in
aas
push
add
testb
loope
fstp
xorb
jp
sti
inc
mov
filds
xchg
adc
mov
mov
mov
mul
push
rolb
sub
psubusw
aad
cmp
jne
adc
add
stc
pop
int3
int3
or
fldz
pop
fistpl
dec
mov
sbb
adc
repnz
xor
adc
pop
movsb
push
or
dec
pop
bound
mov
movsl
sub
or
div
sti
or
fldl
test
clc
gs
inc
and
mov
jmp
out
add
scas
icebp
mov
jo
sub
sbbb
dec
inc
mov
jge
sahf
mov
mov
mov
sbb
out
add
lret
js
mov
sar
ljmp
xacquire
xchg
cmpsl
insb
sbb
jmp
inc
and
fwait
aam
pop
or
fmul
xchg
test
test
fbld
js
outsl
int3
lahf
rcrb
xchg
mov
push
lock
mov
cwtl
sub
jbe
out
xor
jmp
sahf
xchg
jnp
inc
jge
arpl
mov
popf
sbb
cmp
push
push
dec
mov
adc
dec
pop
xchg
faddl
sbb
cmp
call
hlt
jo
imul
inc
popa
cmp
xchg
mov
xchg
mov
aam
add
push
sub
test
movsl
rol
outsb
sub
mov
cmp
dec
dec
arpl
adc
mov
sbb
test
mov
jno
mov
popa
cmp
inc
subb
cmc
mov
fs
push
outsl
xor
sub
nop
int
lods
pop
cli
pop
mov
push
repz
movsl
lea
or
out
dec
mov
loope
cmp
sarb
lret
add
mov
insb
xor
out
jbe
push
xchg
hlt
mov
movsb
sbb
mov
sti
push
add
pop
cmp
xchg
mov
into
inc
sub
insl
jo
or
es
rcll
fcomps
data16
loop
add
iret
add
lds
adc
test
mov
clc
cwtl
mov
pop
adc
sub
fisttpl
pop
in
call
out
iret
cmc
jmp
jle
push
cmc
xor
pop
and
icebp
cmpsl
dec
xchg
fimull
jg
std
popa
das
add
jg
ja
push
ss
insb
mov
andl
mov
xchg
insb
lods
mov
arpl
call
pusha
mov
sbb
int
push
mov
pop
push
rol
inc
mov
dec
adc
js
jb
test
and
fdivp
push
loop
pop
ret
jbe
adcb
sbb
test
test
inc
sbb
inc
mov
lcall
pop
cmpsl
jno
outsb
in
jno
aam
scas
not
mov
sbb
mov
jns
out
dec
fnstcw
add
iret
notl
pop
test
sub
daa
cmp
clc
add
mov
sub
and
mov
push
sub
jp
push
rcrl
scas
dec
shll
enter
test
mov
mov
jge
mov
ljmp
and
add
addl
sbb
sbbb
shrl
addr16
enter
push
sub
loope
sbbb
adc
fisubs
fcmove
inc
imul
setnp
mov
xor
xor
addr16
add
jge
imulb
je
xchg
mov
add
loope
cmp
out
stos
out
jge
xor
decb
loope
mov
cmpsl
inc
arpl
lock
rorl
sub
or
js
mov
inc
jnp
ljmp
jo
push
jo
int3
sub
cld
jp
mov
cli
push
insb
or
dec
das
pop
xchg
cmp
test
scas
lods
mov
and
lahf
pop
push
cmp
loop
lods
cmpsb
sbb
jmp
dec
push
cld
cltd
lea
fidivrl
jp
xlat
push
fisttpll
inc
ds
mov
xor
imul
pop
rcrb
xor
inc
pop
movsb
cmpsb
cmc
sbb
sub
repz
out
add
std
pusha
ja
jl
cld
lcall
sbb
sbb
sbbb
xor
mov
push
dec
mov
insl
dec
fisttpll
xor
mov
sbb
test
pop
and
dec
xor
cmc
out
add
xor
adc
pop
das
push
cld
mov
jns
pop
jmp
pushf
cmc
sbb
mov
jecxz
iret
push
aaa
push
mov
int
xor
push
sbb
fs
int
and
aam
fimuls
mov
es
xchg
sarl
mov
sub
cmpsb
cld
cmp
repnz
fmull
loop
push
mov
lods
test
and
lock
or
dec
int
sbb
bound
mov
cld
sub
arpl
push
and
xchg
cmp
leave
sub
mov
xor
repnz
mov
jb
data16
inc
std
in
push
jns
outsl
pushl
shr
xchg
mov
inc
and
out
fs
cmp
fidivl
enter
fstpl
sbb
mov
sbb
dec
and
in
out
and
addr16
dec
adc
mov
mov
jno
iret
fcomi
repz
es
dec
push
xor
pop
push
ret
mov
test
popf
movsb
or
pop
js
add
incl
or
mov
xor
push
xchg
cmp
or
fld
ret
aam
movsl
das
dec
or
lock
pop
jmp
adc
cs
repz
paddd
pop
add
leave
and
test
push
and
dec
cmp
mov
addr16
xor
fdivs
push
mov
sbb
cmpb
movsl
outsl
pop
xlat
jp
clc
icebp
xor
mov
std
imul
mov
cld
outsb
push
mov
stc
lods
adcb
dec
sbb
adcb
cmc
lock
xor
fdivr
mov
js
cwtl
push
push
cwtl
repz
lret
xor
test
push
fcmovbe
cmp
mov
sahf
and
pop
xor
sub
mov
icebp
aad
cld
or
and
test
in
out
ljmp
lcall
stos
push
out
xchg
sub
jo
call
pusha
mov
dec
jmp
ror
pushf
lahf
divb
int
imul
push
jmp
adc
mov
loop
sub
jl
out
repnz
mov
mov
popa
mov
les
and
push
nop
fidivrl
xor
int3
sub
xchg
shlb
dec
fdivr
mov
sub
pop
stc
negb
clc
add
inc
jae
mov
mov
and
icebp
in
cmp
sbbl
aaa
mov
shlb
rorl
test
cmp
jns
or
movsl
adc
jno
in
cwtl
aas
es
call
inc
popa
arpl
jl
push
pop
xchg
cwtl
mov
ror
enter
ret
cmpsb
popl
roll
mov
mov
mov
int3
movsb
fsubr
pushf
ss
aad
into
add
imul
and
out
leave
dec
aas
popf
push
addr16
cmp
sbb
xor
das
or
fwait
fs
rol
xchg
mov
imul
push
mov
aad
push
inc
lds
jbe
jae
jl
xorl
mov
out
fisubs
xchg
or
xor
inc
insl
sbb
das
push
les
and
lods
mov
pop
fcmovbe
inc
scas
aas
jb
test
push
or
dec
in
or
mov
push
push
mov
add
dec
in
xlat
daa
cwtl
enter
mov
insl
enter
sub
mov
cmc
push
and
mov
dec
adc
or
jp
and
shrl
xchg
mov
push
loop
sti
fwait
mov
cwtl
popa
cmp
xor
push
add
mov
add
pusha
lret
setnp
fstpl
rcl
inc
xchg
test
imul
pop
insb
cmpsb
ret
jnp
push
pusha
dec
outsb
xlat
inc
lret
fdivrs
cmp
in
cmp
test
lock
inc
jne
sbb
inc
fstpl
push
mov
sbb
dec
jnp
aam
cmp
loope
jmp
sbb
push
daa
mov
dec
jmp
outsb
fnstcw
rcrb
rorl
pop
and
jge
ret
gs
xchg
enter
leave
sbb
inc
sub
mov
jns
add
cltd
outsl
and
loopne
fucomi
jp
test
fldt
lock
add
divb
mov
les
in
jg
adc
inc
pop
mov
ja
sbb
test
sbb
mov
aam
in
mov
fmul
lods
ljmp
aaa
jp
inc
outsb
fwait
mov
out
xchg
mov
mov
sbb
or
aad
ljmp
adc
pop
sbb
ret
shlb
repnz
insb
pop
or
adc
loopne
sub
and
and
pop
lods
mov
mov
cs
pop
inc
js
out
xlat
push
pop
mov
lods
jl
add
mov
xchg
andl
adcl
add
pop
adc
or
lods
pop
mov
cs
jno
mov
ljmp
sarl
jo
stc
jns
daa
leave
dec
pop
push
sub
orb
outsb
push
test
pop
out
imul
ljmp
pusha
push
nop
ret
movsl
leave
enter
js
int3
mov
jp
jbe
and
xorl
loop
jns
mov
lods
jecxz
in
xor
inc
sti
in
jo
mov
out
push
mov
les
add
xchg
incl
mov
dec
adc
xor
mov
rcrb
add
lods
pop
lahf
cltd
sbb
xchg
jnp
dec
repz
mov
jo
loope
loopne
inc
lahf
sub
scas
frstor
or
movsl
cwtl
sbb
rcrl
cltd
inc
push
pop
and
lds
adc
cmpsl
sbb
cmp
mov
lahf
in
jns
negl
pop
xor
sbb
and
mov
data16
test
into
xchg
lods
adc
pop
pushf
test
stos
fnstsw
mov
cmp
es
pop
or
outsl
sbbl
fucom
fxch
fwait
hlt
xchg
scas
repnz
xchg
push
mov
idivl
mov
cwtl
push
popa
mov
nop
push
movsb
cmp
pop
popa
xor
sbb
dec
bound
push
pop
subb
xor
int
sbb
imul
sub
lock
cmp
jle
push
inc
fadds
push
mov
jbe
loopne
adc
movsl
in
sbb
repz
mov
push
add
incl
enter
sub
stos
push
fwait
lret
pop
in
dec
xchg
data16
jmp
test
xlat
push
dec
adc
cwtl
addr16
sub
push
ljmp
jecxz
shlb
ret
dec
std
sbb
sbb
pop
leave
loopne
cmc
out
lods
jo
cmc
inc
imul
outsb
xor
es
bsr
mulb
jnp
daa
pushf
fdivr
pop
pop
fbstp
lock
movsl
mov
pop
xchg
adc
adc
aaa
fucom
pushf
test
sub
cli
xlat
push
jns
inc
repnz
jl
out
rolb
shrb
popf
xlat
loopw
mov
aad
pop
loopne
xor
iret
iret
out
cmp
lret
cltd
jl
imul
es
ljmp
dec
mov
add
mov
xchg
mov
enter
dec
addl
jns
push
adc
xchg
adc
xchg
inc
movsb
dec
add
pop
mov
fiadds
outsb
je
dec
cld
stc
xchg
cmp
or
inc
adc
in
sbb
out
outsb
jecxz
jo
iret
ss
pop
int3
xchg
push
xchg
push
loop
pop
cmpsb
cmpsl
xchg
mov
out
ficoms
mov
fcoml
push
ss
js
xchg
mov
add
scas
xlat
sarl
adc
repnz
insl
rcrl
xchg
push
jge
sti
push
cmpsb
push
call
stos
push
pop
fwait
mov
mov
or
adc
jecxz
push
adc
dec
xchg
jns
cli
mov
xchg
dec
mov
or
out
pslld
or
xorl
jb
mov
rorl
mov
adc
inc
mov
lock
stos
dec
or
insl
add
xor
adc
sub
sbb
lods
xlat
or
repz
lea
mov
xchg
jns
cmp
inc
mov
adc
inc
xchg
sti
fwait
push
inc
loope
dec
lock
cmp
xor
das
add
repz
push
mov
xor
push
hlt
adc
ss
loope
adc
push
fprem1
stc
push
faddp
dec
push
mov
pop
aaa
in
or
sbb
scas
mov
xchg
pusha
out
sbb
sbb
add
rcrb
mov
arpl
stc
xor
add
in
test
pop
xor
fstpl
inc
pop
imul
cvtpi2ps
xchg
push
and
daa
xchg
fsubs
jns
cld
out
xchg
adc
sar
pop
mov
dec
inc
push
pop
pop
pop
sbb
xchg
jbe
jbe
movsl
xlat
and
sub
ret
add
adc
cli
xchg
cltd
inc
add
testb
lods
arpl
mov
int3
out
jnp
fsubs
bound
out
stc
mov
std
jbe
js
lods
in
push
mov
jno
addb
dec
lock
xor
mov
movsl
jmp
call
pop
aaa
add
in
sbb
cmpsb
sub
orl
jo
ja
nop
cmp
call
xchg
push
xor
hlt
jmp
cmpsb
mov
pop
popf
xlat
mov
or
lods
and
test
bound
cmp
xor
dec
out
iret
imul
jbe
or
or
mov
sbb
and
cmp
outsl
mov
adc
mov
out
loope
mov
or
idivl
out
movsb
mov
mov
out
icebp
insb
pop
idivb
cmpsl
and
out
sub
ss
stos
xchg
cmp
lret
ljmp
int3
cmp
and
mov
ss
addr16
mov
dec
shr
std
dec
xchg
jge
ror
nop
push
xchg
xchg
jle
into
cltd
xchg
fiadds
adc
or
inc
cmpsb
pop
sbb
push
mov
push
jecxz
push
or
jnp
daa
mov
mov
arpl
leave
mov
jnp
cmp
push
and
adc
mov
lret
push
dec
nop
cltd
mov
mov
lds
dec
out
loop
shl
inc
rcr
shll
imul
xchg
shl
xor
xchg
int
jge
cli
je
mov
inc
into
into
xlat
cmc
mov
std
push
xchg
fs
clc
pop
clc
sub
jp
add
jmp
aaa
ja
pop
cld
repnz
testb
and
mov
pop
popf
mov
pop
out
pop
imul
jecxz
fadds
loop
mov
in
popf
imul
incb
imul
jne
jp
xchg
adc
push
flds
jb
cmc
cmp
xlat
arpl
insb
jmp
xchg
sarl
in
in
shll
jge
lea
mov
ss
mov
pop
fbstp
push
repz
mov
daa
pop
inc
fldcw
mov
jno
dec
pop
mov
ret
pop
mov
mov
jno
lret
loope
xchg
mov
scas
aas
int
fabs
jmp
repnz
sbb
movsl
push
daa
pop
cs
add
fsubr
ljmp
cmc
push
in
xchg
push
int3
enter
push
arpl
push
repnz
outsb
adc
mov
dec
iret
mov
sub
shll
jo
ret
inc
arpl
adc
stos
rcrb
jae
jb
inc
xor
mov
or
xchg
cs
fcom
push
mov
fildll
js
movsb
mov
dec
cmp
inc
shrb
jb
shlb
jae
inc
sub
sbbb
inc
jno
ret
pop
mov
das
sbb
clc
imul
das
and
daa
jo
mov
mov
xor
pop
testb
xchg
cmpsb
or
es
out
dec
dec
sbb
xchg
popa
cmc
fwait
mov
pop
lock
xchg
ficoms
lds
sbb
mov
sahf
loop
shll
repnz
out
fwait
stos
js
loop
jmp
dec
fs
pop
data16
mov
call
fbld
push
mov
test
sub
inc
pop
ljmp
lahf
inc
cmp
aad
inc
xor
or
mov
and
adc
dec
pop
out
int3
loope
clc
mov
mov
cmp
shl
sarb
and
loop
adc
movsl
ret
inc
adc
ret
out
outsl
clc
lock
daa
and
xor
out
mov
scas
and
mov
sahf
mov
jecxz
movsb
pusha
or
rorb
pusha
push
mov
popa
mov
aas
jl
cld
aad
adc
fisttpll
fst
jmp
jl
clc
dec
jae
push
mov
mov
cmp
mov
data16
lcall
inc
sub
cmp
mov
test
add
mov
and
call
in
rorb
aas
loope
mov
test
dec
cmp
push
push
cmp
repnz
dec
dec
std
scas
jg
xor
or
loop
or
popf
xchg
and
xchg
mov
inc
pop
mov
dec
add
popa
and
xor
adc
in
rcr
shll
ja
lret
xor
dec
aad
rcll
sbbl
rcpps
sbb
mov
ffree
loopne
jmp
test
and
rcl
fcoml
pop
pop
xor
fldcw
lea
pop
daa
les
jmp
inc
lock
sahf
cmp
dec
enter
sub
scas
es
lret
addr16
sahf
mov
xlat
add
pop
lret
inc
jne
cmpsl
add
mov
fildl
test
ret
jns
cmp
and
lods
or
mov
rcl
inc
push
mov
adc
mov
pop
das
int
pop
lea
mov
in
pop
shl
rolb
and
mov
sbb
jg
sub
push
lret
push
les
push
call
mov
push
popf
pop
sahf
addr16
cmp
jo
pusha
or
push
dec
dec
add
push
sbb
dec
jp
jnp
xor
call
pop
mov
rcrb
movsb
aaa
add
cmpsl
lret
leave
pop
inc
mov
xor
cmp
out
test
ljmp
out
push
mov
aas
inc
pop
push
xor
cmc
outsb
inc
in
jg
add
dec
loop
sub
arpl
movsl
mov
or
sarb
push
pushf
push
push
repnz
mov
mov
push
cld
loop
inc
cld
pop
adc
sbbb
mov
mov
dec
das
sbb
addr16
sub
lods
cmp
dec
sbb
call
aaa
adcl
imul
xchg
dec
cmp
adc
sub
pop
popf
xor
mov
and
nop
push
pop
and
data16
cli
test
jo
or
cltd
pop
push
jbe
xchg
pop
pusha
push
test
adc
push
xlat
mov
mov
shll
pop
mov
sti
mov
fwait
ss
scas
das
mov
cmpsb
jo
fbld
sbb
mov
and
push
cmpsl
incb
xor
jmp
hlt
cmp
subb
loope
ret
xor
push
rcrl
or
jb
cmp
mov
push
inc
test
cmp
mov
xor
es
into
jl
mov
jl
add
out
xchg
mov
push
es
ret
add
mov
into
loop
scas
clc
orb
insb
jmp
cmpsb
repnz
inc
int3
notb
adc
hlt
dec
pop
cmc
rcr
push
or
insb
jmp
push
shl
dec
insl
dec
xor
aam
ja
add
stos
repz
orl
and
int
in
faddl
std
sub
and
jp
xchg
jge
push
icebp
jmp
mov
mov
popa
jge
jmp
xchg
js
xchg
daa
push
addr16
je
jl
stc
aaa
or
popa
in
xlat
loop
aas
or
in
xchg
xchg
xchg
scas
dec
push
inc
fwait
xchg
imul
push
lds
cld
jne
mov
mov
sarb
hlt
fucompp
mov
xor
push
cmp
or
lock
sbb
mov
pop
test
cmpb
adc
jbe
xor
cmp
test
inc
and
aad
and
jnp
cwtl
fwait
and
add
jbe
iret
jecxz
add
jbe
and
xor
inc
cltd
repz
repnz
subb
and
pop
pop
cmp
icebp
out
lcall
pop
or
push
cmp
jae
lahf
loop
or
or
cmp
push
push
stos
inc
mov
mov
hlt
popf
pop
movsb
push
repnz
push
out
test
cltd
movnti
ret
pop
movsb
inc
les
rorb
loope
call
jne
xor
lods
mov
int3
imul
cmp
stc
fbstp
cs
out
cmpsl
imul
mov
outsl
jecxz
adc
frstor
scas
popf
mov
pop
cltd
clc
arpl
dec
mov
test
pop
jecxz
nop
mov
xor
mov
lahf
push
cmp
add
bound
pop
push
and
pop
pop
push
xor
jge
sub
inc
jnp
xchg
insw
mov
dec
clc
pop
outsb
lea
mov
lret
mov
dec
sarb
xor
add
mov
loope
add
cmp
fimull
inc
cmp
jno
and
mov
test
call
push
es
sbb
stc
xchg
jne
arpl
lds
mov
lret
adc
icebp
in
imul
mov
xchg
cld
fdiv
fdivr
outsl
loop
add
jno
push
add
int
adc
pop
jb
pushf
xchg
prefetcht1
cmp
push
push
loop
jnp
jg
adc
loope
int3
xchg
mov
popa
scas
and
test
cmp
test
adc
or
jle
lock
pop
lcall
push
ja
ss
nop
mov
fidivrs
push
aaa
fst
jns
inc
shl
daa
out
adc
jmp
mov
or
or
xor
bound
inc
int3
sub
cmc
out
aad
insb
push
rep
add
xor
lahf
inc
repnz
aas
xchg
pop
int
add
mov
rorb
pusha
pop
jp
cmp
push
xlat
or
sub
mov
dec
inc
pop
jmp
sbb
je
out
aas
xchg
pop
cltd
mov
pop
das
das
ja
sbb
imulb
xor
mov
push
sahf
or
je
mov
fsubl
mov
xor
push
cmc
daa
push
mov
xor
xchg
lods
add
ret
stos
lahf
fcmove
push
mov
fs
js
mov
and
outsl
pop
pop
xchg
fisubrs
shll
loop
or
cmp
andl
sub
popf
aad
mov
scas
lret
aaa
aaa
jle
test
sbb
mov
jmp
icebp
push
pop
add
push
push
dec
lds
cmp
push
xchg
stc
and
adc
mov
or
xor
scas
fidivrl
test
out
iret
lret
or
ss
aas
mov
adc
stos
inc
or
in
cmp
mulb
and
lock
dec
cwtl
lods
jno
sub
mov
negb
push
push
xchg
jmp
mov
aad
sub
xor
fadd
and
adc
xlat
mov
in
lods
in
loope
iret
stos
cmp
pop
push
xor
mov
or
xor
dec
jg
ss
mov
xchg
sbb
mov
in
ret
xchg
mov
pop
mov
sti
pop
hlt
or
lea
leave
sub
cmpl
lret
xor
cmpb
xchg
push
in
lret
inc
sahf
add
cmpsb
in
push
push
sarb
cmpsl
enter
jg
jge
cmp
lea
in
pop
fnstsw
insb
mov
xlat
xchg
xlat
and
mov
les
dec
and
mov
popa
pop
in
ret
mov
lea
jo
dec
dec
ds
adc
sbb
cld
imul
mov
xor
jbe
out
in
outsl
inc
pop
push
in
aas
dec
mov
add
and
popa
cmp
jg
icebp
and
sbb
push
std
cmp
lahf
out
test
dec
push
movsb
rorl
dec
xchg
in
cs
leave
jae
pop
dec
pop
mov
pop
xchg
mov
decl
inc
inc
xor
lcall
sbb
pop
or
xchg
and
aaa
lea
adc
sbb
aas
imul
xchg
leave
xchg
and
fs
mov
clc
popa
js
es
fstpt
inc
dec
arpl
lahf
cli
sbb
or
in
in
divl
pop
push
pop
jp
incl
roll
fmull
inc
sahf
adc
pop
call
popf
push
jo
mov
add
aad
fistpll
movsl
cli
shrb
bound
shrl
stos
test
mov
rcrl
sub
xchg
jle
sbb
and
pop
loopne
test
popa
ret
lret
xchg
dec
sub
xor
test
pop
inc
int
fisttpl
xchg
lcall
mov
pop
mov
insb
mov
or
loope
mov
sbb
sub
mov
mov
fwait
fwait
lea
xor
gs
adc
push
push
add
outsl
int
ficomps
or
inc
pushf
rcl
xor
or
decb
cmp
decl
popf
testb
pop
xorb
adc
add
xchg
inc
bnd
fimuls
or
cmp
jg
mov
and
aad
or
cmc
mov
in
sar
out
and
mov
insl
pop
sub
scas
imull
imul
push
push
popf
loopne
std
fs
inc
insl
push
xchg
pusha
pop
or
mov
cwtl
mov
jle
jns
clc
out
enter
pushw
and
cmp
cmp
pop
sahf
push
push
enter
rorb
jne
xchg
pop
inc
xor
fimuls
xchg
and
push
andl
repnz
ss
pop
cmpsl
add
push
outsl
jo
aam
mov
xor
and
mov
movsl
fiaddl
jbe
rolb
dec
je
shlb
push
fcmovu
sbb
stos
push
icebp
loopne
mov
iret
pop
ljmp
fsubrl
out
xchg
add
sahf
dec
mov
pop
push
aam
sub
addr16
inc
ds
cmpsl
roll
pop
fmuls
jg
or
test
or
daa
add
pop
push
jne
mov
mov
out
adc
out
lret
popa
into
test
xchg
fcoml
ficompl
cmp
ret
ret
mov
xchg
fcomp
inc
nop
stos
jp
pop
ret
enter
jnp
xor
add
ljmp
rorb
sbb
scas
pop
mov
out
dec
xor
sarl
sub
sarb
shrb
repz
aam
xor
mov
mov
in
cmp
fwait
call
mov
iret
xor
xchg
cld
das
int
dec
popf
lret
int
fwait
push
lods
cmp
mov
push
inc
sbb
pop
movsl
cmp
dec
xchg
test
lret
mov
inc
mov
xor
push
out
cs
jl
stc
insl
push
xor
push
pop
and
push
sub
dec
pop
and
mov
aam
insl
adc
mov
mov
sub
div
and
mov
scas
push
notl
std
repnz
xor
or
xchg
movsl
or
xchg
add
fwait
jle
daa
dec
lods
jbe
ljmp
and
jle
fdiv
iret
jmp
push
sub
clc
insb
sub
or
inc
nop
test
insb
xchg
cmp
aaa
lret
in
lods
cltd
fdivrp
aad
popf
mov
fwait
insl
ror
push
popf
push
xchg
cmp
scas
sub
popa
jp
mov
pop
inc
loopne
int
test
push
icebp
pop
icebp
sbb
ds
inc
inc
jnp
aas
mov
dec
or
add
pop
inc
dec
in
push
out
fdivl
cld
pop
sub
adc
xlat
shlb
dec
int3
lret
imul
icebp
mov
fisubs
arpl
test
les
popa
dec
sbb
jno
in
push
adc
ficoms
mov
ud1
jnp
add
pop
fisubs
icebp
leave
inc
or
xor
das
mov
mov
in
imul
mov
and
aad
cwtl
mov
fs
sub
jmp
jg
rorb
jmp
mov
jl
cmc
cmc
mov
roll
cmpsb
leave
repz
insl
or
loop
rclb
mov
rclb
stc
and
pop
shlb
mov
mov
push
push
adc
arpl
adc
test
clc
xchg
sub
pop
mov
fdivl
rolb
enter
xchg
enter
xor
xor
mull
or
sub
out
out
sbb
sub
in
sbb
cld
push
xchg
push
mov
les
fs
mov
mov
pop
dec
aaa
inc
dec
arpl
into
cmp
mov
stos
dec
mov
cmp
ret
clc
lds
cmpsl
movsl
out
push
scas
xchg
jnp
cmp
dec
xchg
dec
sub
hlt
in
sub
mov
add
lods
mov
jecxz
stc
sbb
scas
ss
sub
xor
sbbl
or
xchg
imul
push
in
dec
aad
xor
pop
sbb
cmp
in
and
xchg
dec
xchg
jb
adc
loop
arpl
and
sub
mov
jle,pt
xchg
shrb
mov
push
push
xlat
inc
mov
dec
xchg
mov
xchg
ja
add
jge
test
add
mov
mov
mov
adc
sbb
rclb
inc
addr16
pop
vpaddsw
test
dec
nop
pop
repnz
cmp
aam
into
inc
sub
mov
lea
imul
mov
lcall
add
leave
subl
pop
xchg
adc
pushf
adc
push
sub
fsubs
and
xchg
mov
jmp
dec
fiaddl
adc
adc
cmp
incb
jmp
rcrl
into
lahf
push
add
add
jo
cli
cmp
in
fistpll
mov
mov
fldcw
jne
out
mov
fbstp
scas
adc
sti
adc
xchg
add
push
xchg
xchg
scas
ret
inc
pop
out
inc
mov
dec
adc
out
addl
outsl
or
adc
sbb
imul
hlt
mov
jle
shrl
rclb
mov
cmpsb
xor
jns
adc
test
out
inc
add
xor
hlt
fidivl
xchg
cltd
push
insb
jne
fwait
xchg
daa
xchg
nop
sbb
mov
push
xor
mov
lock
mov
outsl
ds
adc
pop
frstor
or
popf
fstl
mov
mov
fs
mov
cmp
cld
es
fidivl
out
mov
aam
push
adc
jmp
stos
lock
inc
pop
jle
inc
and
cli
cmp
aam
sahf
inc
xor
push
pop
mov
jecxz
jb
fidivs
in
cmpsb
addr16
cmpsl
sub
xchg
xchg
call
in
nop
mov
imul
mov
in
or
add
pop
jle
pop
push
lcall
mov
in
cli
pop
leave
aaa
add
xor
add
pop
pop
inc
fbstp
cmc
push
xchg
pop
stos
adc
les
and
repz
fwait
sbb
cltd
push
sti
ror
lahf
add
mov
xchg
and
dec
repz
call
push
outsb
adc
xchg
fistl
pop
inc
cltd
or
pop
out
dec
test
pop
mov
mov
jns
das
or
movsb
fmuls
ret
sbb
lods
ss
mov
pop
inc
xorl
jo
inc
push
repnz
dec
fists
mov
popa
aas
decb
js
xchg
movsb
mov
pop
pop
movsl
dec
add
add
jbe
jl
sbb
fsubrl
hlt
loope
pop
movsl
and
nop
repz
rcl
pminsw
mov
cld
xchg
cld
shl
mov
adc
lahf
out
mov
pop
adc
mov
mov
fs
and
xlat
into
push
cmp
mov
es
mov
add
lret
cltd
and
cmpsb
xor
xlat
add
movsb
dec
call
jno
pop
outsb
cmp
ljmp
and
ret
ss
xchg
shl
aam
arpl
jb
mov
mov
jg
pop
adc
cmpsl
ret
cmp
gs
imull
fldenv
pushf
fwait
shrl
add
jg
or
shll
push
or
xor
mov
mov
call
mov
pop
insl
movsl
adc
push
mov
mov
shrb
ret
dec
pop
pop
in
or
cs
fs
pop
inc
lds
inc
mov
inc
xor
sub
jg
xor
jge
pop
outsb
push
inc
mov
mov
imul
in
ficomps
sbb
mov
mov
cmpsb
stc
pop
cld
aas
jae
xlat
ljmp
xor
xchg
mov
xor
cmpsl
call
mov
scas
pusha
mov
and
add
fwait
out
sub
in
cld
fbstp
lea
int
aam
cmpsl
sub
mov
icebp
mov
outsl
lds
sub
pop
imul
jne
push
mov
inc
jl
mov
push
repz
lods
pop
mov
fwait
or
loope
outsb
fstps
jecxz
and
daa
cmc
mov
jl
xor
pushf
pop
push
mov
jns
in
or
sbb
das
iret
pop
push
mov
add
xchg
sti
fwait
lahf
mov
dec
jl
xorl
sub
push
mov
dec
mov
pop
mov
dec
sub
add
mov
idiv
and
inc
sub
and
push
in
bound
out
clc
fidivrs
dec
loop
xchg
jnp
in
scas
add
enter
mov
and
cmp
mov
lahf
test
jl
mov
add
mov
cmp
fdivs
mov
mov
pop
nop
inc
dec
pop
cmpb
mov
aam
add
in
sub
jle
jo
push
nop
adc
in
cld
ss
mov
mov
aaa
imul
push
or
rolb
clc
mov
jns
rcrb
lds
and
icebp
data16
sbb
push
mov
je
xor
sbb
sbb
jecxz
in
push
pop
scas
dec
out
xor
cs
shll
outsb
xor
rorl
aas
cmp
in
addb
ja
dec
mov
jns
cmpsl
cmp
adc
xchg
das
test
jo
cmp
shll
ret
xor
idivb
xchg
and
xchg
adc
shll
fucomp
aaa
clc
movsl
lds
mov
jnp
jecxz
lods
inc
sub
inc
out
je
rorl
sub
ja
les
inc
jb
jne
andl
call
cmc
aas
mov
std
cmp
cmp
lods
cmp
adc
cmc
xchg
jmp
cmp
leave
sub
pusha
push
inc
or
mov
pushf
fstpt
fs
cld
cmp
popa
shrl
out
jecxz
lock
xchg
repnz
pop
loope
lcall
outsb
ret
or
stc
jo
test
dec
insl
adc
dec
xor
add
jmp
push
fcomi
addr16
hlt
test
mov
aas
add
mov
lods
push
pop
push
movsl
xor
pop
imul
mov
fnstsw
aad
lret
je
test
imul
aam
outsb
mov
test
pop
and
sub
xchg
add
and
push
sub
jbe
mov
test
scas
and
scas
stos
lea
call
mov
mov
and
outsl
lahf
leave
push
mov
push
cs
dec
lret
mov
fdiv
and
mov
dec
lea
push
out
mov
push
out
loop
stc
clc
insl
clc
push
inc
push
adc
cmp
popf
js
jne
fcoml
nop
cmp
popf
jnp
mov
and
int3
jno
out
add
xlat
test
xchg
stos
pop
lods
out
sbb
xor
jge
in
loope
dec
pop
push
out
push
leave
ja
cmp
imul
jl
xchg
mov
idivb
imul
out
cltd
scas
jmp
popf
add
int3
mov
cmp
dec
rorl
and
scas
cmp
push
loop
ffree
push
out
scas
push
xor
mov
and
bound
sbb
mov
scas
inc
outsl
imul
sarl
loopne
jae
adc
or
xor
or
inc
push
sbb
rcrb
test
mov
mov
cmc
mov
lcall
jne
subl
cli
push
out
popa
sub
push
mov
dec
lock
outsb
je
icebp
push
dec
stos
or
cmp
mov
sbbl
jmp
push
fiaddl
push
loopne
push
jmp
dec
or
pop
mov
std
outsb
dec
inc
pop
pop
push
xlat
and
xlat
cltd
mov
mov
les
insl
push
adc
or
sahf
fwait
pushf
fdivrs
dec
dec
jle
inc
dec
inc
xchg
mov
and
gs
sbb
popf
fstpl
xor
cmpsl
out
inc
xchg
sub
or
mov
movsl
rolb
nop
int
mov
incl
and
adc
pop
mov
jge
lret
outsl
pop
jl
mov
cmp
jae
pop
xchg
adc
in
xor
cmp
cmp
push
xor
aam
push
and
les
xor
mov
push
dec
xor
insl
shlb
movsl
inc
and
icebp
adc
in
xor
mov
sub
push
divl
mov
mov
or
nop
sbb
push
cmpsb
js
mov
insb
mov
push
add
lds
clc
pushf
mov
mov
nop
or
sub
and
jmp
or
adc
out
xchg
std
ret
les
jg
iret
xchg
jl
push
nop
jl
test
sub
fdivs
stc
inc
mov
cmp
push
lahf
stos
aas
inc
xor
adc
out
dec
cmp
pop
insb
insl
dec
ds
sbb
dec
or
ficompl
push
rclb
addps
decb
clc
loop
cltd
cmp
push
sbb
out
std
pushf
ret
sub
mov
xor
rcll
sub
push
and
adc
or
outsl
adc
inc
xor
jns
mov
lahf
pushf
push
pop
or
cmp
movsl
cmp
xchg
xchg
aad
sbb
cmp
mov
pop
adc
and
jmp
adc
gs
add
mov
and
add
sahf
hlt
mov
popf
jnp
sub
loopne
xor
fdivp
ret
cs
pop
xchg
jae
lods
incb
popf
fsubs
clc
dec
adc
fistpll
aad
insl
shrb
mov
inc
mov
lcall
cmpsb
cli
rol
stos
jecxz
std
mov
jmp
divl
jb
push
mov
fs
addb
pop
fucom
andl
add
jge
and
jp
cld
add
pusha
cmpsl
call
push
loope,pn
sbb
test
fcmovu
adc
or
adc
ss
adc
adc
aad
fisttpl
fwait
js
cmp
ja
xor
sub
and
in
lahf
dec
xchg
jmp
nop
cli
sti
stos
outsl
and
mov
push
adc
repnz
div
pslld
imul
adc
adc
in
das
ret
ficoml
dec
gs
outsl
sbb
cli
jge
pop
bnd
xor
outsb
lret
inc
std
dec
pop
mov
mov
xchg
cmpsl
js
push
jle
ficomps
cmp
repnz
mov
dec
push
out
pop
ret
or
jbe
cmp
dec
dec
add
test
add
push
sbb
xchg
mov
mov
cmp
or
push
sbb
jge
es
sbb
out
lret
inc
cmpsl
or
int3
lock
mov
or
jle
mov
int3
pop
icebp
adc
and
and
sub
xchg
jmp
clc
lcall
mov
and
xchg
sub
mov
xchg
or
mov
add
pushf
jp
pop
gs
ss
push
or
jl
mov
shlb
cli
fstps
xchg
jg
cld
pop
push
in
mov
mov
adc
or
mov
cmp
gs
out
pop
dec
ret
int
sub
popf
and
roll
mov
jno
shlb
jl
and
and
insl
adc
inc
stos
loopne
clc
pop
movsb
sbb
adc
data16
cmp
xor
mov
or
or
aaa
jne
jns
mov
inc
or
cmp
mov
std
inc
pop
adc
jge
add
stc
mov
addl
or
and
mov
jae
xor
pop
mov
cmpsl
jecxz
pop
shlb
sbb
repnz
push
and
jae
jne
pop
sbb
mov
or
filds
pop
dec
imul
fsubs
ss
jmp
pop
icebp
lock
arpl
insl
pop
add
insb
fisttpl
loopne
rorb
fnstenv
ds
xlat
cmp
mov
dec
add
daa
xor
mov
outsb
adc
or
bound
ficompl
test
iret
nop
leave
push
fldenv
add
inc
inc
out
fdivs
imul
jae
aaa
cmp
int
mov
outsl
jno
inc
jmp
adc
leave
dec
gs
icebp
in
sahf
mov
nop
mov
data16
stos
shll
sahf
inc
loopne
aam
mov
fxch
cmp
sbb
cmpsb
incl
adc
test
imul
fidivrs
sbb
stc
mov
fnsave
push
mov
cmp
sbb
sub
xchg
jne
mov
sbb
lahf
gs
mov
aas
push
into
and
push
sahf
lahf
inc
and
jae
jg
iret
in
daa
sbb
xchg
arpl
test
adcb
adcl
cmpsb
mov
xor
sti
mov
rcrb
mov
int
push
arpl
ret
mov
fnstenv
movsl
std
loopne
mov
cmc
mov
pushf
push
sbb
jp
mov
mov
inc
sti
or
nop
in
aad
mov
cmp
notb
rolb
psubb
inc
adc
outsl
cltd
inc
sti
rol
call
lods
xor
jp
pop
cwtl
mov
mov
mov
pop
adc
mov
icebp
je
ret
mov
jge
roll
dec
in
xchg
cmp
dec
or
push
adcl
rcr
inc
stc
insb
sub
movsb
push
xchg
cwtl
pop
adc
in
into
cli
sub
dec
loop
sar
mov
scas
adc
loope
cmpsb
and
cmpsl
aas
jp
sbb
das
mov
movsb
inc
sub
and
lds
hlt
jbe
mov
pop
mov
lock
and
lret
jae
mov
cmpsl
dec
test
mov
outsl
ljmp
xlat
ret
outsb
mov
data16
lds
fstpt
test
dec
push
push
xor
fcmovnu
es
mov
repz
push
enter
aas
dec
dec
lds
push
xor
or
test
cmp
in
or
inc
mov
jo
and
pop
adc
pop
mov
jl
xor
mov
push
mov
les
add
cmp
add
push
sbbb
test
mov
mov
lcall
imul
hlt
mov
mov
std
and
ss
iret
sub
pop
add
sub
iret
inc
push
sub
push
or
sahf
dec
mov
sub
dec
pop
mov
ljmp
mov
jae
cmpl
movsb
xchg
mov
orl
sti
ret
push
out
sbb
or
lcall
ja
and
mov
divl
jae
xchg
outsb
add
subb
fisubl
cmp
sub
out
shl
sub
fmuls
dec
cmp
push
push
push
pop
movsl
cmc
jne
dec
test
sbb
insb
adcl
jl
fs
stos
fildll
lret
jmp
xor
add
xor
sub
mov
outsb
jo
jno
in
cmp
lahf
sub
mov
imul
gs
jbe
jae
fdivs
jbe
push
mov
adcb
fxch
pop
push
pop
ret
sub
dec
jecxz
lods
jne
lret
push
loope
out
lcall
pop
pop
and
adc
insl
stc
popf
ja
sbb
mov
jecxz
ret
pop
dec
repz
xchg
in
cmp
xorl
mov
pop
mov
sub
test
fisubl
adc
fists
daa
sahf
sbb
std
imul
in
lods
imul
jp
pop
loope
push
push
mov
idivb
sbb
aas
aam
xchg
sti
xor
or
rolb
fisttpll
in
fistpll
xor
mov
mov
nopl
in
fidivrl
mov
sbb
inc
out
imul
xchg
inc
das
xchg
cli
in
rclb
adc
and
insl
add
add
mov
xchg
push
subb
ljmp
orl
xchg
es
insl
jecxz
inc
mov
lea
adc
insb
mov
jmp
lahf
dec
sbb
outsb
fisubrs
push
test
fsubrp
data16
pop
jg
sbb
leave
lods
xchg
push
into
lds
loope,pn
push
in
xchg
mov
sbb
lea
inc
sub
xchg
scas
fnstenv
mov
lret
scas
scas
sub
jg
in
je
xchg
sub
or
xor
pop
ffree
lock
sub
rorl
in
ret
pop
mov
sub
in
mov
lahf
sbb
sbb
ljmp
fistl
mov
das
and
adc
arpl
xor
fsubl
addb
sbb
cs
incb
das
or
jecxz
cmp
rcll
pop
add
bound
sarb
inc
xchg
mov
sbb
cltd
popa
cmpsb
sbb
xabort
adc
lods
lret
push
sahf
cmc
push
cmc
out
mov
int
jbe
outsb
popf
ret
push
or
mov
in
std
loope
movl
fildll
loope
loopne
cmp
add
pop
mov
lock
lea
inc
jmp
idivb
call
jp
mov
mov
add
ds
add
les
dec
xchg
mov
sarl
int3
mov
sbb
push
sti
imul
xchg
movl
pushf
mov
testb
jbe
pop
jo
call
idiv
mov
lods
ror
ss
insb
test
push
lds
fbld
gs
mov
mov
fisubrs
mov
pop
aaa
xchg
insl
test
sub
push
xchg
xor
pshufw
sub
scas
sbb
inc
xchg
leave
and
jnp
cmc
in
push
loopne
mov
subb
je
out
jp
push
xchg
inc
rcr
lret
lock
bound
fisttpll
pop
push
jmp
mov
xchg
outsb
movsl
mov
je
mov
testb
int
mov
bound
sti
push
mov
in
subl
stos
out
ja
lods
jbe
lea
xorb
jo
je
pop
xchg
mov
aam
js
fdivrl
popf
push
rcrl
loop
dec
stc
adc
imul
mov
inc
cmp
lea
lcall
test
data16
fs
decl
loope
addr16
sar
dec
or
jmp
jge
push
sub
sbb
mov
dec
fidivrl
pop
or
pop
jne
add
pop
scas
fcmovu
or
add
aas
mov
test
mov
adc
imul
loope
out
mov
bound
enter
sub
mov
hlt
retw
mov
or
test
push
int3
int3
clc
xchg
mov
inc
jae
pop
call
jbe
gs
mov
fidivs
lea
xor
xchg
fnsave
xor
test
mov
jb
ret
cld
add
pop
inc
sub
xchg
ret
into
cmp
fwait
or
sarl
mov
push
xor
subb
lret
mov
mov
int
sub
pop
and
and
xchg
jecxz
pushl
pop
cli
and
pop
sub
jo
cmp
rcll
adcb
in
andb
adc
into
xor
push
dec
cld
out
cmpsl
ljmp
aam
cmp
push
sarb
cmc
sub
aaa
adc
mov
sahf
gs
add
pop
mov
inc
aam
ret
sarl
lds
movsl
imul
lcall
mov
sub
or
popa
cwtl
adc
bound
push
sbb
int
das
lret
mov
and
mov
xor
repz
sub
fdivrl
outsb
adc
mov
cmc
add
jb
cld
xchg
bound
outsl
mov
ret
mov
cmc
rorb
sub
fwait
arpl
sarl
inc
out
pop
adc
cmp
call
mov
cmpsb
pop
xor
dec
push
std
pop
sbb
js
imul
andl
mov
jno
push
jp
mov
jge
xchg
xchg
fs
jle
dec
or
xor
or
push
sarl
or
mov
nop
mov
in
xchg
or
xor
xchg
add
mov
lock
lea
imul
out
sbb
bound
data16
adc
sub
aas
lds
jg
sub
jg
xchg
scas
push
adc
mov
mov
jb
push
fildl
or
in
jmp
aas
movsl
and
fiaddl
sbb
and
dec
ljmp
lds
sahf
xchg
lds
mov
xor
lods
test
ret
push
add
lock
and
loopne
jbe
jle
js
mov
or
lods
cmp
rcrl
not
xlat
daa
test
sarb
push
cld
orl
pushf
inc
mov
add
mov
data16
pop
ror
test
in
imul
dec
dec
loop
xchg
xor
iret
lcall
xchg
push
cmp
pop
addl
push
xor
adc
pushf
adc
rep
hlt
or
jbe
pop
cmp
into
lcall
mov
and
negb
scas
and
push
popa
fldl
andl
ficompl
or
in
adc
lret
mov
push
int3
cmp
cwtl
mov
sbb
mov
pop
cmp
xchg
inc
adc
push
bound
pop
iret
loop
popf
sbb
add
inc
out
fcompl
add
adc
call
in
jmp
lock
bound
int3
scas
sub
mov
cmc
repz
dec
js
movsl
fldt
cmpsb
or
pop
jl
jno
dec
inc
dec
push
rcrb
jne
xor
mov
je
imul
xorb
test
je
cld
popf
dec
or
sub
lock
lcall
sbb
mov
fstps
mov
add
sbb
mov
gs
rcl
jnp
mov
pop
mov
popf
leave
sub
jmp
std
out
xchg
sub
shl
arpl
sub
jb
cmp
fwait
dec
fnstsw
and
int3
dec
adc
xor
insb
adc
adc
hlt
loop
jno
call
inc
jle
call
mov
fsubrs
xchg
loopne
js
data16
cld
loope
in
pop
loope
lods
adc
push
push
aas
ljmp
bound
or
jo
notb
add
icebp
test
repz
jle
sbb
sub
cmp
push
orb
nop
mov
sbb
call
add
jno
sbbl
cmp
add
dec
cmp
push
int
pop
xchg
xor
or
dec
pop
or
add
dec
pop
jne
or
int3
jmp
sti
add
cmc
popf
andl
lea
and
ud0
cs
sub
je
ds
and
ljmp
sarb
movsl
scas
in
adc
adc
daa
mov
cmpsb
enter
fnstcw
mov
in
popa
in
adc
ret
fdivs
mov
mov
push
dec
cltd
mov
xlat
sub
push
or
push
push
aas
and
ror
push
dec
xchg
loope
push
in
xor
out
adc
add
loopne
pop
jo
mov
add
fs
aas
jmp
mov
jnp
dec
jge
xchg
jae
pop
cmp
sbb
sub
push
sbb
adc
jnp
ss
mov
gs
xor
or
mov
jl
cmp
xor
sbbl
pop
mov
ljmp
adc
outsl
push
cltd
mov
xlat
ficoml
sbb
sbbl
insl
cs
inc
sub
iret
jbe
jge
or
pop
dec
lret
pushf
lahf
ds
push
mov
mov
inc
test
dec
lcall
pop
sub
jp
jae
scas
popf
jb
test
popa
sub
mov
pop
adc
int
out
out
outsl
mov
xchg
nop
into
and
mov
aam
xchg
push
shrl
cld
shll
push
pop
arpl
mov
lock
inc
cld
or
cli
fildll
push
push
inc
fstl
dec
iret
mov
cs
push
push
popf
jp
xchg
adc
mov
mov
or
pop
fsubl
push
mov
cmp
sbb
mov
out
add
pop
mov
mov
lahf
lret
das
pop
inc
jbe
test
jno
outsb
es
ja
mov
fmul
and
push
xchg
add
fdivs
xor
cmc
xchg
sbb
xor
test
inc
js
dec
outsb
dec
inc
and
adc
cmp
vpcmpgtb
ret
cltd
pop
orl
sar
mov
xchg
push
or
fidivl
xchg
out
scas
xchg
test
add
jbe
arpl
cmp
dec
sti
or
xchg
add
mov
loope
aam
fs
je
sub
popf
jp
icebp
push
push
lahf
pop
repz
sub
das
jl
jp
xor
add
lahf
shr
sbb
dec
data16
es
je
push
stc
shl
mov
loope
loope
ja
or
inc
loop
xchg
gs
fcmovnbe
add
push
sub
inc
mov
xchg
popa
shr
scas
stos
and
pop
mov
xchg
fwait
push
add
pop
and
xor
dec
xor
xor
dec
or
push
movsl
inc
jmp
jp
inc
adc
in
mov
ficoml
or
pop
jg
fcmovu
jp
xor
notl
dec
jne,pn
pop
cmp
in
imul
out
mov
test
mov
and
push
mov
push
push
mov
push
pusha
call
push
xchg
xchg
mov
jp
cmp
xor
sbb
mov
cmp
loop
sbbl
and
in
push
gs
add
testl
mov
jl
cs
loopne
loopne
mov
add
std
das
mov
mov
xlat
or
mov
pop
cmpsb
or
scas
les
test
mov
xlat
pop
ja
jns
cmp
loope
std
sub
xor
loope
mov
shlb
push
add
out
mov
cmc
jb
lock
stos
sub
and
xor
aad
pop
dec
push
sahf
bound
inc
fmull
ds
dec
adc
lods
movsb
int3
pop
inc
dec
xor
ss
sub
jne
xchg
fwait
test
loopne
fsubr
shlb
mov
jl
mov
call
nop
andb
les
enter
and
les
popa
push
pop
mov
bound
fsubp
dec
ljmp
vpmadcswd
cmp
mov
mov
mov
es
adc
add
sbbb
mov
xor
sub
sub
xor
pop
jb
push
push
xor
pop
movsl
mov
xchg
sbb
movsb
cmp
push
scas
cwtl
out
neg
cmp
outsl
jb
cmovae
loope
sub
cmp
int
sbb
movsl
mov
cmp
mov
pop
fdivrs
jl
mov
or
addr16
mov
jecxz
mov
in
sub
and
xchg
mov
or
sarb
inc
push
stos
sar
mov
jae
mov
lds
jmp
nop
dec
leave
mov
jae
add
push
push
inc
push
mov
jne
sub
add
pop
xor
orl
dec
mov
pushf
inc
test
stos
pusha
mov
jp
pop
out
push
mov
push
testb
dec
shrl
xor
sahf
or
xor
jns
mov
shr
push
sti
pop
dec
aad
shll
fs
jae
cmpsl
fiaddl
ljmp
mov
lar
das
jns
into
inc
pavgw
rcrl
popf
sahf
pop
lea
cmc
mov
mov
lds
push
jge
movsb
fcomps
test
fiadds
sbb
div
insb
cmc
jo
mov
mov
sbb
sub
cwtl
pop
js
ds
jnp
mov
xchg
pop
cmp
loopne
nop
adc
sbb
lcall
scas
or
mov
rclb
imul
xchg
stos
les
cmp
push
and
sub
mov
ds
adc
fsubrl
add
mov
cmp
rcrl
popf
sub
lret
dec
lds
sub
mov
into
out
mov
pushf
cmpb
std
mov
or
mov
mov
cmp
or
cld
in
push
into
jg
cmp
sti
int3
sbb
je
out
lods
imul
ficomps
adc
and
lcall
push
js
mov
sub
repz
aam
mov
or
push
mov
hlt
scas
mov
popf
ret
jl
sti
push
shll
sbb
ljmp
xor
pop
fistps
dec
ss
mov
test
test
aad
hlt
jb
gs
and
mov
fistpl
fstl
fs
xor
xchg
inc
shlb
and
push
mov
movsb
add
lret
jp
inc
mov
mov
adcb
aad
in
xor
in
push
mov
out
outsl
mov
mov
fsubrl
js
iret
inc
push
mov
pusha
out
mov
das
or
ficoms
fnstsw
xchg
add
or
inc
fbstp
and
mov
outsl
adc
in
popf
cltd
cli
sti
hlt
inc
pop
inc
xor
mov
dec
mov
lock
loopne
addr16
or
xchg
pop
leave
mov
push
or
inc
pop
or
dec
adc
repnz
pop
pop
inc
cmc
push
pop
daa
cmpsl
fwait
add
jle
js
jns
jmp
sub
sub
jo
and
outsl
xchg
push
out
push
jae
or
push
mov
jb
add
call
into
jae
leave
push
and
mov
mov
pop
adc
je
rorb
fisubrl
inc
loop
cli
jg
xchg
inc
push
jmp
push
push
sub
stos
imul
out
pop
test
scas
pop
es
push
adc
sti
mov
xchg
cltd
std
repnz
xchg
inc
test
addr16
sub
pop
dec
loopne
push
cmpsl
enter
fnstcw
xchg
popa
dec
imul
adc
jno
push
push
xor
mov
arpl
cmp
jo
push
fsubl
jge
pop
jecxz
jl
inc
sbb
adc
adc
push
adc
mov
mov
decb
cmpsb
test
and
cmpl
aad
out
xchg
loope
popa
nop
jmp
push
sti
mov
movsl
ss
arpl
pand
xchg
fwait
lret
adc
test
sti
aad
movsb
js
pushf
mov
pop
jecxz
inc
std
test
lcall
pop
jo
out
jnp
cmp
mov
pop
adc
or
bound
jbe
xor
mov
mov
insb
mov
xchg
mov
icebp
imul
adc
push
out
fbstp
fcoml
mov
arpl
ret
into
lods
mov
and
cs
push
push
jne
cs
out
dec
mov
out
inc
scas
adc
jmp
in
cwtl
mov
cmpsl
movsb
jne
cmp
add
lahf
inc
xor
mov
xchg
jnp
mov
andb
or
lock
rolb
jne
popa
push
or
daa
jg
push
adc
roll
and
js
sbb
mov
loop
push
mov
push
orb
jnp
mov
add
push
out
std
jns
add
add
mov
push
ret
mov
call
mov
sarl
mov
js
mov
loop
jne
sbb
fdivr
sbb
mov
add
adc
aad
xchg
es
pop
dec
push
lock
pop
add
mov
sbb
adc
daa
sbb
addr16
cmc
std
ljmp
in
lret
popf
xchg
mov
adc
jg
out
data16
addr16
jne
inc
popf
pop
inc
das
or
sbb
pop
fwait
xlat
push
stos
daa
inc
sub
hlt
jmp
out
fdivrp
movsl
and
push
dec
mov
std
ljmp
mov
push
fildl
adc
lsl
sub
jmp
rcll
icebp
sub
testb
imull
mov
mov
repnz
jo
mov
loop
sub
lods
pop
mulb
mov
xor
leave
repz
fdivrl
xchg
sub
xchg
sub
push
adc
cmp
insl
and
flds
fidivrs
inc
je
xchg
shrl
std
xchg
notl
dec
sub
add
xlat
out
sar
jle
inc
mov
bndstx
stos
sub
icebp
jnp
and
lea
jl
cltd
pop
jg
sbb
jns
hlt
add
or
jmp
adcl
test
cmp
xor
lret
or
test
or
or
or
pop
dec
sub
test
xchg
int
pop
jl
shll
fldl
fidivs
enter
inc
mov
mov
mov
jle
or
pop
insb
mov
mov
fimuls
mov
pop
subb
sarl
pop
neg
loop
sbb
lcall
xor
jns
cli
cwtl
mov
add
movsl
inc
push
call
ljmp
push
aad
push
pusha
jns
mov
mov
loopne
and
idivl
adc
stos
sub
dec
add
xor
inc
sbb
inc
sbb
jle
int3
lds
push
inc
mov
in
loope
ss
or
movsl
cwtl
out
jbe
mov
aad
mov
mov
mulb
dec
inc
push
sbb
jecxz
fnstsw
xlat
fcoml
inc
cmp
ja
pop
push
in
roll
popf
jo
shll
mov
iret
mov
lret
imul
inc
insb
inc
lahf
cmp
call
cld
xchg
insb
dec
aas
clc
dec
enter
stos
and
add
push
ret
iret
push
cmp
cmp
and
pop
test
jg
clc
add
sbb
and
xchg
stc
mov
xor
jmp
imul
mov
aad
push
sarb
or
out
xchg
daa
jb
xor
sarb
mov
and
mov
add
ret
lea
clc
dec
xchg
xlat
test
xor
add
or
inc
mov
imul
adc
cld
pop
mov
and
out
jl
or
call
outsl
ja
icebp
xor
fidivl
pop
movsb
push
int3
push
mov
mov
ret
add
push
mov
ja
ljmp
xchg
pop
mov
test
and
cmp
testb
fisubl
aad
test
lcall
nop
push
int3
xchg
and
pusha
push
bnd
movsb
fsubrs
pop
mov
add
outsl
les
data16
js
and
outsb
subl
lahf
std
xchg
sub
leave
adc
popa
fsubrs
out
dec
push
popa
stos
cld
cltd
push
mov
es
sbb
push
in
or
xor
jl
or
adc
xor
aaa
rorb
dec
leave
dec
lcall
call
aaa
adc
into
sub
js
lods
adc
mov
cmp
rorb
mov
int
and
jg
fistps
inc
pop
sbbl
and
adc
sbb
cmpsb
jle
ljmp
push
cmp
cs
cmp
mov
shrl
jge
jmp
gs
sub
jbe
jmp
dec
rolb
mov
popf
and
pop
lea
shr
mov
mov
or
or
sbb
lods
movsb
idiv
inc
add
fnstenv
pusha
xchg
fwait
icebp
mov
gs
out
idivb
push
sub
popf
sarb
pop
or
lds
xchg
int
iret
fdivrl
mov
adc
adc
std
sbb
pusha
xlat
aad
cmp
push
popf
imul
aas
or
adc
in
sahf
cmpb
and
insl
adc
loope
dec
add
inc
or
mov
mov
xlat
imul
dec
scas
push
sbb
xchg
mov
xchg
add
shlb
push
loop
sbb
rcl
mov
pop
xor
sub
repz
enter
ljmp
or
addr16
arpl
cmp
ss
fwait
in
sbbb
mov
int3
xchg
in
pop
push
adc
jne
stos
adc
xchg
shlb
stos
jns
cld
dec
add
add
pop
out
dec
es
xor
sbb
mov
sub
loopne
mov
xchg
repz
movsb
inc
scas
pop
sbbl
fildl
leave
pop
mov
pop
std
push
rorb
lret
mov
xchg
daa
pop
cmp
arpl
dec
xchg
shrl
mov
mov
xor
addl
dec
pop
das
push
add
das
mov
and
jne
pop
and
ret
test
out
std
push
int
or
stos
insb
xor
and
inc
rcrl
lods
mov
and
jae
sbb
jnp
and
jb
or
jmp
xchg
pop
sbb
notb
jae
stos
dec
xchg
lret
pop
sbb
int
or
sbb
push
fwait
pop
flds
push
pushf
incb
xchg
sbb
push
xchg
or
or
ljmp
cli
jp
or
add
xlat
pop
jns
fcompl
shrb
xchg
lods
or
pop
je
inc
aas
add
movsl
std
cli
and
pop
into
mov
arpl
or
sub
inc
fdiv
das
dec
and
xchg
int
sahf
pop
cwtl
or
stos
sarl
leave
lea
fucomp
call
xlat
jp
mov
dec
incl
roll
adc
iret
xchg
insl
or
hlt
cmp
and
shlb
adcl
cld
popl
rcr
inc
jo
xchg
add
mov
xor
clc
jns
daa
push
clc
sbb
push
int3
lea
pop
and
rcll
jne
popa
xor
stos
jle
and
in
adc
outsl
clc
aad
ret
mov
into
insb
packssdw
add
fistps
xlat
xchg
dec
push
xor
sub
pop
cmp
scas
aas
out
xchg
dec
adc
ja
sahf
out
aas
dec
xlat
sub
sbb
pop
movsl
inc
or
jb
leave
dec
mov
jae
mov
sub
xchg
popa
subb
fists
cmp
adc
adc
daa
push
sti
fisubrs
movsl
aam
inc
push
jmp
jle
push
mov
jmp
jl
aam
leave
xor
jmp
fsub
pop
call
in
popa
sbbl
daa
aad
xor
jge
ret
ja
les
sbb
not
pushf
data16
sbb
jmp
loope
xchg
sbb
jae
sbb
pop
insb
pop
and
shll
sbb
cld
and
mulps
mov
or
lea
aas
xchg
cltd
pop
push
mov
insb
and
dec
cmp
push
and
jle
lock
mov
insb
lods
push
adc
mov
lcall
mov
popf
out
inc
stos
mov
mov
adc
inc
repz
ror
es
leave
xlat
inc
inc
pop
das
dec
loope
nop
movsl
xlat
aad
adc
jno
and
mov
cmp
push
or
push
push
xor
sahf
mov
orl
jno
mov
cmpb
jmp
jp
cmp
call
cltd
pop
insb
cmp
cmp
shll
cmpsl
dec
fwait
cmp
adc
inc
or
sti
adc
test
mov
hlt
les
icebp
add
add
idivl
test
test
or
mov
dec
push
sub
gs
xor
pop
inc
lea
aas
popa
xchg
pusha
loopne
jnp
push
and
test
movsb
pop
adc
aas
xchg
pushf
push
adc
insl
ja
sarl
cmp
or
je
and
fdivp
subb
adc
movl
bnd
sub
repnz
ficomps
cmp
pushf
inc
lea
mov
xchg
out
inc
pop
daa
push
push
cmc
popf
js
cld
push
dec
sahf
adc
mov
nop
ljmp
adc
push
and
jp
ss
jns
push
fnsave
xor
mulb
or
xchg
xchg
jnp
jns
dec
insl
test
cmp
mov
and
mov
in
add
leave
jmp
jb
sbb
gs
lret
incb
pop
sub
pop
mov
push
pop
inc
pop
int
and
push
arpl
lret
lahf
and
add
sarl
inc
nop
cmp
sbb
cld
add
enter
das
hlt
push
mov
lcall
test
adc
xor
or
cmc
push
mov
jo
ss
scas
rcll
stos
insl
mov
mov
movsb
mov
inc
mov
rcll
out
aam
mov
aaa
cmp
cmp
stos
xchg
stos
xchg
arpl
xchg
push
mov
inc
cs
dec
enter
push
andb
enter
std
add
jo
jmp
adc
ds
sbb
cmpl
adc
add
aas
mov
add
jecxz
and
jmp
mov
and
push
xchg
mov
mov
lds
lea
lcall
inc
cmp
or
or
into
xor
mov
inc
jo
loope
fisttps
ss
notl
and
sbb
subb
pop
pop
sti
imul
push
push
aad
pop
sub
repz
js
imul
in
push
xchg
andl
shl
xchg
jbe
mov
cmp
into
test
pop
pop
push
push
inc
xchg
add
push
push
lods
js
roll
sub
je
outsb
lahf
jns
xchg
scas
dec
lods
xchg
out
push
jge
cs
pusha
mov
mov
test
dec
sti
into
xchg
rorb
shlb
push
pop
mov
imul
bound
ficompl
dec
mov
lea
inc
test
out
daa
pushf
push
pop
pop
jae
in
enter
add
jge
cmp
aad
inc
aaa
jnp
sbb
aas
push
ljmp
sbb
movsb
xchg
out
sub
dec
in
pop
jo
fnstcw
lcall
sbb
sub
sbb
fisubrs
xchg
add
push
push
mov
sbb
sahf
mov
jo,pn
imul
cli
pop
xchg
jecxz
push
xchg
dec
adc
hlt
xchg
dec
sub
out
mov
xlat
ja
cmp
add
jb
fidivs
mov
wbinvd
mov
mov
insb
pop
insl
ljmp
and
pop
iret
rorl
cld
mov
clc
ja
xchg
jl
andb
add
or
bound
lea
and
jae
fwait
inc
or
mov
stos
adc
fidivl
subl
test
xor
mov
xor
mov
enter
mov
cli
ret
inc
or
shlb
cmpsb
das
lods
out
addb
pop
lods
sbb
or
sub
pop
mov
notl
cmp
inc
outsl
push
aaa
int
fisubrs
into
mov
ljmp
push
sbb
xchg
adc
and
adc
inc
insb
and
sbb
out
rcl
mov
sub
sub
xchg
cmc
pop
aas
xchg
lea
cld
mov
hlt
fwait
sub
aam
jp
clc
shufps
or
addr16
ficoms
pushl
in
loope
fstl
out
or
mov
pop
leave
add
shrb
fcomi
in
push
mov
icebp
jne
fwait
lock
jl
sub
push
sub
pop
jmp
mov
fstps
xchg
lods
scas
es
lret
insl
cmp
sub
lcall
add
imulb
pop
push
ret
cmp
xchg
popf
data16
cmp
pop
inc
mov
scas
cltd
dec
and
jg
mov
imul
mov
add
adc
leave
add
cmp
xchg
scas
insl
rclb
out
shr
insl
sbb
push
jb
mov
adc
mov
mov
cwtl
mov
negb
jp
xchg
pop
notb
cmp
inc
lods
pop
sub
mov
xor
xorl
xchg
xchg
mov
cmpsb
in
dec
push
stos
out
pop
mov
stc
int3
rorl
jb
push
xchg
fldcw
les
xor
jmp
scas
jle
in
mov
out
pop
loope
movsl
aad
popa
ja
jl
mov
xor
mov
push
nop
in
test
ret
sti
cmp
aad
push
cmp
insl
out
add
mov
stos
cmp
jl
andl
inc
rolb
int
jmp
pop
aas
jb
cmp
push
std
cmp
in
rcrb
cmpl
cli
sbb
test
movsb
es
test
push
sahf
jmp
fisttps
cmp
xor
add
out
aam
cmp
mov
push
xor
xor
std
pop
testb
mov
sarb
std
in
mov
out
sti
jmp
push
push
in
jecxz
add
pusha
pop
movsb
push
dec
arpl
sbb
cmp
sub
mov
imul
lock
pushf
leave
aad
out
addl
jmp
sbb
dec
xor
scas
lret
sbb
leave
lret
pop
in
jnp
mov
jbe
imulb
mov
inc
mov
sbb
sbb
lods
pop
sub
ret
ds
sub
mov
out
inc
mov
loop
inc
pop
fwait
pop
mov
ror
test
sub
std
mov
add
les
mov
inc
push
sbb
lods
filds
cmp
cmp
push
pop
in
loope
outsl
repz
popa
fisubrl
mov
mov
in
sarb
lahf
push
and
cld
mov
ds
push
cld
jp
jecxz
test
adc
arpl
jge
cmc
aam
sub
popf
adc
aam
mov
hlt
pop
mov
pop
fucomi
cmp
out
es
lret
or
int3
sub
mov
sarl
jbe
mov
clc
inc
test
jae
and
push
mov
cmpb
sbb
xchg
stos
jno
imul
jp
gs
inc
push
insb
inc
testl
lods
xor
mov
hlt
xchg
and
jle
test
xchg
int
cli
iret
mov
mov
mov
inc
mov
sbb
arpl
scas
cld
adc
mov
orl
sub
imul
adc
pop
push
out
xchg
es
in
pop
cwtl
xchg
sub
xchg
mov
add
inc
lods
test
adc
and
mov
test
sbb
lds
lock
add
adc
mov
clc
pushf
stos
stc
cltd
ret
out
repnz
ficoms
cmp
pop
gs
inc
std
mov
mov
ja
inc
movsl
rep
xor
loope
jle
aam
mov
in
std
int3
mov
xchg
test
jnp
jns
mov
out
cmp
jecxz
jo
push
sub
nop
pop
inc
jae
adc
sti
int
mov
in
mov
cmp
adc
mov
es
ja
xchg
lods
stos
cmp
pop
or
push
rcll
xchg
xor
add
enter
push
lret
or
adc
adc
fadd
sahf
adc
outsb
jnp
popa
pop
jae
repz
adc
jg
cmp
add
sub
rcrb
add
pop
adc
push
inc
mov
popa
push
rcrl
mov
movb
shrl
in
enter
jle
stos
add
int3
and
add
mov
add
adc
mov
mov
orl
sbb
cmpsl
mov
in
and
fldl
aad
mov
es
mov
sbb
jns
push
filds
xchg
or
jo
int
sub
jl
adc
mov
pop
jge
cwtl
fwait
xor
sbb
sub
sahf
jnp
rolb
popa
ds
or
pusha
lcall
int
cmpb
daa
arpl
std
inc
mov
scas
ret
cmc
xchg
xchg
sub
adc
jae
in
adc
in
and
jp
push
jmp
mov
xor
je
jp
mov
pop
and
sub
cli
push
ret
and
mov
xchg
sub
sbb
push
in
and
lock
mulb
mov
pop
jo
mov
movsl
xchg
insb
gs
pop
add
adc
lea
sbb
fisttpll
cmc
rcl
mov
inc
and
sbb
insb
fisttpl
cltd
rol
push
jae
dec
xchg
cmp
js
jecxz
inc
mov
inc
testl
test
add
sub
in
jne
jp
mov
push
fildll
add
jg
mov
adc
sbb
xchg
ret
push
addb
fstps
jg
int3
xchg
mov
in
sub
pop
push
in
aas
shll
outsl
ds
mov
lods
flds
test
jne
sbb
cmp
pop
fsub
mov
shll
pop
mov
testl
daa
data16
push
imul
sbb
mov
stc
inc
fcomps
pop
gs
int
push
sub
in
nop
sub
sti
jg
xchg
cmp
push
sbb
pushf
xor
dec
aas
sub
sub
in
add
dec
adcl
ficompl
cmp
aas
add
or
sub
xor
mov
es
into
sub
movsb
cmovae
and
and
mov
out
xchg
and
cmp
xchg
scas
sbb
lea
dec
dec
repz
test
rcl
out
mov
jecxz
push
sbb
and
lods
sub
scas
cmpsb
adc
adc
jp
popa
add
pop
sub
fwait
inc
repz
push
mov
lods
adc
adc
out
mov
cltd
jge
mov
popf
fwait
arpl
or
test
pop
pop
mov
out
adc
idivl
lahf
dec
xchg
iret
shll
add
out
jne
jnp
pop
push
add
ljmp
cmovo
xor
cmp
mov
lods
icebp
xchg
in
out
js
cmc
mov
or
in
inc
xchg
mov
add
inc
sahf
adc
lahf
shlb
adc
inc
call
inc
mov
sbb
iret
xor
xor
fcmovnu
fistl
fsubs
xor
mov
pop
ljmp
xor
or
jl
inc
and
xor
xchg
add
out
adc
push
cmpsb
sub
inc
sub
ret
and
data16
loopne,pn
stos
call
mov
and
or
jns
aaa
fwait
mov
sahf
push
shrl
jbe
sub
dec
aas
call
scas
jecxz
cli
or
insl
in
in
call
sahf
or
sbb
ja
push
sarl
jmp
fsubr
sub
in
adc
imul
jbe
je
push
ret
fdivp
dec
and
cmc
dec
aad
lahf
or
ds
pop
pop
lea
imul
stos
sub
sbb
xchg
inc
cmc
mov
fimuls
ds
dec
xchg
bound
scas
jecxz
incb
pop
sarl
or
imul
mov
ljmp
lods
sbb
and
icebp
shl
jbe
mov
daa
and
int3
inc
pop
and
mov
or
repz
cmp
lahf
out
cmp
mov
or
jnp
subb
lods
sub
mov
add
or
dec
add
dec
dec
shll
adc
push
out
xchg
es
or
stos
mov
enter
punpckhbw
add
mov
fs
pop
or
fadd
in
mov
adc
sbb
fiaddl
imul
inc
add
in
loopne
sub
hlt
push
pop
aam
and
and
jne
fisubl
pushf
inc
bound
mov
inc
andl
adcb
adc
fs
jns
cmpsl
and
popf
mov
push
dec
dec
xchg
sub
sub
repz
mov
sahf
daa
stos
adc
jmp
frstpm(287
xor
fisubs
insl
in
add
pop
repz
or
jge
in
out
or
ds
sbb
dec
cmp
aas
lock
addr16
fstpl
sahf
push
cmp
mov
and
mov
push
dec
push
dec
xchg
push
jmp
mov
push
test
cmp
sarl
mov
imul
xchg
lretw
mov
xor
mov
or
cmp
shll
or
xor
lahf
pop
ljmp
dec
jbe
push
lea
pushf
cmpsl
xor
test
push
stos
cmpl
sbb
cmpb
sub
push
jge
and
mov
in
cmp
test
fisttps
jbe
cmp
ficoms
inc
dec
cmpl
lcall
int
xor
cmp
sbb
mov
pop
test
out
outsb
inc
adc
mov
push
test
mov
loope
push
xor
xchg
and
and
call
imul
pop
mov
sbb
mov
cmpsb
pop
push
imul
fsubrs
push
mov
pop
sub
call
test
andl
fwait
xchg
cmp
xchg
xchg
push
shll
cmp
mov
xorl
clc
and
mov
jp
xchg
ja
mov
lcall
dec
fcomps
mov
movsb
stos
xchg
mull
xor
jne
add
cmp
call
leave
or
mov
adc
int3
mov
leave
or
pushf
jl
lea
jno
jge
cmp
adc
loop
pop
adc
inc
push
cmp
xor
pop
mov
and
dec
dec
jne
in
adcb
adc
mov
pop
loope
fcoml
sbb
pop
pushf
js
call
dec
mov
mov
push
xor
ljmp
add
das
imul
and
cmpsl
movsl
add
aas
adc
sub
sbb
jg
ds
mov
sub
aaa
or
jns
add
jp
push
imul
bound
jmp
fcomp
mov
push
inc
pushf
stos
push
sub
mov
in
pop
movsb
in
xor
cmp
xor
lods
jb
ret
fbstp
shl
lahf
mov
sbb
shr
mov
in
jge
arpl
pop
xchg
arpl
leave
icebp
xor
or
in
cld
sub
sbb
imul
jmp
movsl
mov
push
dec
cmpl
push
pusha
scas
xchg
or
mov
adc
xchg
mov
add
sahf
imul
pushf
int
sbb
popf
test
push
and
add
sbb
stos
orl
addr16
or
dec
pop
lcall
xor
push
or
add
jg
or
jle
arpl
cmc
mov
mov
je
push
push
cmpl
enter
repz
aad
pop
inc
test
add
insb
lahf
mov
xchg
mov
cmp
fwait
cmp
pop
xor
in
inc
xor
push
daa
dec
test
sub
popf
int3
xchg
jmp
mov
or
dec
pushf
lods
cmc
push
scas
lods
push
xchg
mov
pop
js
push
pop
imul
and
add
lret
movsb
or
push
pop
xor
in
out
pop
test
xor
ljmp
and
jl
mov
mov
hlt
sarb
int
or
pushf
adc
data16
bnd
in
repz
les
leave
sub
add
rol
push
jns
mov
adc
lock
dec
jns
outsb
adc
inc
inc
movsl
adc
cmp
es
xor
adc
sbbb
jae
dec
stos
mov
shrl
or
xchg
add
xchg
cmp
in
xchg
dec
pushw
test
mov
scas
pop
shr
jle
push
mov
push
mov
mov
hlt
cmp
scas
dec
call
jbe
or
mov
xchg
mov
add
sbb
cmpsb
cmp
or
pop
jbe
aad
sub
mov
mov
add
gs
mov
icebp
ret
scas
jo
aad
in
sub
int
push
fsub
adc
popf
add
sub
sahf
ret
scas
das
adc
das
sub
mov
aam
fs
aad
call
cmp
arpl
cltd
dec
test
add
xlat
std
mov
stos
inc
sub
pop
ret
subb
loope
addb
addr16
aaa
pop
rorb
mov
rorb
fwait
andb
fs
and
cltd
and
cmpsl
xor
mov
loop
int3
or
xchg
push
sub
cmp
aas
cmp
mov
cmp
jnp
inc
es
pop
jg
sub
pop
in
es
xor
cmpsl
mov
mov
test
sbb
xor
jmp
mov
inc
add
loope
ja
in
das
fsub
inc
ljmp
push
jno
dec
push
mov
les
sub
lret
ret
int
pop
adc
dec
cmpsb
pop
adc
sbb
mov
js
dec
and
or
jo
dec
lock
dec
mov
arpl
dec
adcl
mov
dec
cld
aaa
lods
cmp
sti
arpl
sti
xor
mov
je
adc
fidivrs
jb
pop
int
roll
ljmp
jo
inc
sarb
xchg
cltd
fs
rorb
movsl
aas
out
or
imul
sub
inc
or
clc
push
int
inc
daa
mov
insb
fsubl
add
sahf
lock
mov
out
push
inc
into
loope
aas
pop
std
ret
jno
push
inc
xor
mov
aaa
inc
push
sbb
fdivp
test
push
push
or
cmp
push
lods
cmp
mov
xchg
out
mov
addr16
std
shll
jo
scas
rcrl
ror
push
pushf
or
popf
cltd
and
cmpsl
and
leave
fildl
pusha
inc
outsl
repz
fs
mov
dec
mov
xor
fmull
sbb
ret
sub
xor
jecxz
push
cmp
mov
sbb
mov
xchg
fstl
fdivrl
outsl
out
cwtl
pop
cs
hlt
push
mov
lock
lret
shl
xchg
negl
or
call
add
mov
pop
insb
mov
inc
aam
ret
insl
xchg
jno
lret
std
dec
push
into
or
out
push
icebp
pusha
insb
xchg
loopne
mov
xchg
std
xchg
ljmp
ja
outsl
xchg
sti
mov
push
movsb
js
jbe
mov
xchg
inc
outsb
push
lods
popf
outsl
pop
jno
movq
scas
cmp
popf
xchg
popa
int
xlat
cmp
test
pop
fcoms
ljmp
fisubrs
inc
aas
enter
popf
movsl
or
pop
call
add
repz
mov
pop
mov
sub
and
dec
aaa
std
sbb
jmp
and
rcrb
jo
cwtl
sahf
lods
leave
dec
jl
cmp
daa
scas
mov
fsts
int3
sbb
jg
mov
mov
pop
ja
shl
lret
std
xor
sbbl
test
jmp
bound
aas
jle
mov
jl
aad
cmpsb
mov
clts
fxch
xchg
dec
stos
fbstp
into
add
insb
repnz
jecxz
push
sarl
test
pop
and
test
lret
mov
pop
jno
out
stos
mov
sub
jl
scas
ds
xor
and
sahf
stos
loop
xchg
call
dec
sbb
lcall
or
push
sahf
mov
xchg
out
add
insb
decl
mov
lret
movsb
loope
inc
stos
xor
shl
shll
add
outsl
cltd
adc
sti
lahf
ss
mov
pop
pop
push
out
dec
cmpsb
cmp
adc
add
dec
scas
movsb
lea
sbb
xchg
and
dec
xchg
mov
test
stos
outsb
sbb
jbe
sti
sahf
jno
fadds
fcomi
jno
addr16
sarl
mov
and
loop
sub
cmp
pop
xchg
inc
jbe
jle
sarl
bound
out
or
out
mov
addl
bnd
leave
pop
mov
xchg
out
enter
pop
fs
aas
mov
addr16
mov
jmp
daa
test
aam
push
rcrl
push
shlb
mov
mov
pop
mov
push
cmc
not
push
arpl
jno
mov
test
imul
cld
loopne
pop
das
repnz
roll
push
imul
mov
adc
sub
hlt
and
dec
or
sbb
ja
mov
out
sub
lds
outsl
push
pop
add
push
sahf
scas
flds
xor
cli
and
fadd
add
movsl
and
mov
into
loop
idivl
xchg
arpl
test
xchg
jecxz
push
mov
push
loopne
mov
psrld
mov
mov
cmp
pushf
loop
jge
test
inc
push
lret
int
and
movsb
dec
ret
dec
inc
cld
cs
inc
adc
mov
xor
scas
mov
sbb
mov
dec
mov
mov
mov
ds
fwait
add
push
mov
adc
scas
xchg
pop
cltd
shll
add
arpl
jle
ss
decl
cld
push
fildl
in
push
mov
js
pop
stos
mov
dec
repnz
jle
adc
pop
push
inc
gs
mov
adc
je
fnstsw
sti
inc
bound
mov
dec
lret
inc
cmp
dec
stc
fisubl
outsl
dec
div
cltd
pusha
adc
aaa
cli
push
and
mov
imull
push
lods
fcoms
jmp
loope
and
xchg
push
pop
sub
test
jmp
cmpsl
or
dec
bound
loopne
mov
push
xchg
dec
mov
sbb
inc
jl
sub
fs
outsl
sbb
sub
out
push
dec
pushf
add
es
jle
stos
imul
fsubrl
loopne
ds
pop
add
jmp
pop
pop
cmp
inc
adc
push
mov
leave
adc
fdivl
mov
add
mov
in
imul
cmp
fninit
mov
push
push
sbb
mov
push
xchg
insl
andl
cwtl
dec
cmp
addb
pop
mov
push
in
clc
lock
aaa
cmc
add
mov
mov
fbstp
jmp
inc
dec
mov
mov
and
lods
mov
mov
test
lods
adc
and
testl
add
adc
inc
xor
mov
sti
dec
std
or
fnstenv
sub
and
dec
inc
cld
xor
stos
lock
loope
cmpsl
push
stc
mov
lods
dec
insl
inc
aam
mov
lret
pop
in
roll
and
adc
inc
ror
inc
cmpsb
clc
dec
repnz
into
loopne
mov
leave
jno
xchg
mov
mov
xchg
or
rcll
inc
and
pop
sbb
insl
mov
pop
add
or
or
adc
pinsrw
outsl
dec
push
mov
mov
shll
test
pop
sub
push
gs
imul
fnstcw
int
dec
push
mov
mov
mov
adc
pop
js
mov
push
sbb
mov
out
sahf
insl
inc
add
push
data16
aas
divl
shll
aam
popa
mov
mov
mov
dec
in
cltd
fs
or
loop
add
adc
xchg
insl
out
movl
int
dec
xchg
jns
inc
push
xchg
pop
in
leave
mov
push
fwait
ja
cli
nop
jmp
insb
mov
xlat
jg
test
aas
sbb
sbb
aas
push
movsb
int
scas
imul
bound
outsl
rorb
lea
mov
mov
add
jp
sahf
jnp
cs
fwait
stc
mov
xor
push
mov
jge
cli
enter
std
cmp
cmp
xchg
pusha
std
lock
dec
jo
xor
mov
mov
lock
scas
stos
xor
or
repz
sub
pop
xorb
cmpsl
lock
or
mov
fs
jg
enter
mov
xor
rcrl
add
repnz
xchg
xchg
adc
enter
inc
lret
or
sub
popa
icebp
fcoms
jge
cmp
out
ss
fnstsw
sub
outsl
sub
mov
cmpsl
and
dec
inc
mov
cmpsb
cmp
adc
sti
adc
xor
add
js
aam
xor
mov
es
lcall
mov
mov
push
cmp
cmpb
add
mov
fidivrl
xor
xor
xlat
hlt
mov
adc
aas
bound
and
pusha
push
jmp
je
jg
ljmp
dec
scas
loopne
pusha
ds
push
dec
sub
fpatan
in
das
jb
sbb
jge
test
or
inc
sub
jecxz
xchg
xor
into
jb
inc
imul
inc
roll
add
mov
mov
std
pop
or
mov
aad
ret
jmp
icebp
push
pop
and
fidivrl
iret
enter
inc
pushl
jecxz
out
dec
jns
and
mov
dec
xor
jae
mov
sarl
push
aad
outsl
jae,pt
xchg
sub
dec
mov
pop
mov
and
push
lods
adc
scas
cmc
pushf
jle
and
pop
dec
jg
loopne
mov
jle
bound
inc
add
add
jbe
mov
cmp
fldt
imul
shll
lods
or
adcb
nop
mov
mov
mov
or
enter
into
mov
mov
int
xchg
mov
in
movsb
pop
sub
stos
test
mov
aas
cmpsl
add
in
adc
mov
into
hlt
scas
push
and
out
fs
jae
inc
mov
in
push
jns
pop
mov
movb
add
ror
in
adc
lods
dec
test
and
pop
inc
in
fiadds
add
xchg
mov
imul
or
out
test
xor
jmp
rolb
pushf
cmp
loope
mov
jne
in
or
adc
sbb
jb
add
lock
lods
ja
push
jle
jecxz
sub
sbb
mov
sbb
shlb
mov
adc
or
mov
outsl
insb
ljmp
insl
mov
mov
lret
lcall
xorb
cmpsl
mov
sbb
or
pop
roll
je
daa
xor
adc
fsubl
imul
movsl
xor
ret
aas
dec
xchg
sub
rcrl
popa
pop
mov
mov
xchg
dec
lahf
ret
lods
fidivrs
outsl
dec
insb
movsl
mov
jle
rclb
xchg
test
pop
pop
push
adc
pop
sub
xchg
mov
mov
rol
pop
mov
adc
mov
sbb
push
lret
jns
and
cmovns
adc
lahf
fnsave
cmp
jbe
xor
xchg
lds
movsb
test
inc
adc
sar
mov
sub
adc
pushf
stos
adc
gs
fcoms
mov
mov
inc
lret
or
ja
aam
shll
mov
in
inc
or
inc
ss
scas
xchg
mov
adc
mov
xchg
dec
popl
popf
test
adc
daa
sub
dec
xchg
lods
pop
ret
mov
sbb
je
seta
push
std
clc
xor
adc
inc
lret
es
cmp
mov
fistpl
mov
cli
iret
js
adc
les
scas
pop
cwtl
movsb
jle
or
insl
dec
add
out
ljmp
repnz
mov
stos
xchg
fdivs
sub
lea
test
inc
adcb
push
dec
lock
sbb
pushl
and
data16
mov
xor
xchg
test
es
daa
popf
and
push
mov
or
xchg
mov
test
xchg
sub
push
hlt
aad
push
int3
jb
fsubs
dec
inc
adc
mov
inc
lds
outsl
ljmp
test
xchg
and
js
cmpl
fs
cmp
movsb
pushl
mov
into
loope
mov
roll
cmp
int3
in
repz
sti
mov
out
out
pop
out
pop
std
mov
bt
enter
pop
loope
scas
ljmp
ror
cli
loope
and
leave
aas
push
cwtl
shlb
das
sbb
lret
cmpsb
pop
add
call
inc
fincstp
sub
mov
pop
jb
lock
out
out
daa
xchg
mov
mov
ds
insb
cmpsb
push
mov
aaa
movsb
mov
fistl
sbb
mov
cmc
xchg
jo
cmpsl
sub
pop
dec
cmp
insl
test
scas
or
sahf
rclb
xor
call
popa
and
push
jns
in
bound
push
cmp
push
roll
outsb
lcall
cmp
adc
dec
out
jp
and
cmp
inc
cli
cmpsb
test
mov
gs
mov
mov
jge
mov
in
jmp
sub
ret
sbb
das
fscale
xor
popf
jns
dec
adc
push
stc
sub
and
mov
jae
push
push
mov
insb
nop
cmp
movsb
out
xchg
addr16
dec
sti
fldt
insb
push
lds
pop
bound
adc
jo
xor
jb
ret
out
adc
aam
xor
xchg
and
stos
mov
add
cmp
cmp
and
and
jge
ret
popa
mov
adc
add
xlat
daa
nop
repz
lods
mov
fldl
icebp
in
adc
addr16
sub
jle
inc
sarb
popa
inc
fmulp
cmpsb
popf
in
dec
pop
push
shlb
das
mov
int3
jno
fnstsw
dec
fadds
cmp
loopne
pop
mov
and
scas
fidivl
xchg
sbb
and
dec
icebp
mov
movsb
stos
cmc
out
push
divl
xchg
push
lods
push
sub
cli
adc
mov
add
scas
movb
mov
imul
lret
movsb
lock
pop
xchg
sub
mov
sbb
daa
pop
mov
loopne
cmpsb
loopne
mov
dec
loope
jns
js
add
push
adc
in
fsincos
aam
popa
xchg
push
push
xor
rcrb
gs
adc
adc
or
sub
xchg
xor
jnp
sbb
sarb
enter
rcrb
mov
sahf
nop
inc
pop
xor
jns
addl
mov
cs
pop
xchg
mov
fwait
lods
in
push
jmp
test
xor
addl
in
push
fs
cmp
dec
inc
out
fidivrs
mov
pop
cmpsb
mov
in
and
sub
gs
jnp
sbb
shrb
or
mov
cwtl
mov
mov
dec
fadd
jne
xchg
jg
mov
pushf
call
adc
cltd
movb
and
outsb
cmpsb
push
dec
iret
push
shlb
inc
sti
inc
inc
pop
or
jge
jge
inc
idivb
test
mov
out
fsts
or
mov
mov
mov
loopne
aam
add
aas
cs
pop
cmp
lods
in
sub
iret
mov
xor
shlb
xlat
xchg
stc
sarl
cwtl
cmp
fistl
adc
cmpsb
jg
push
jbe
cmpb
outsb
arpl
lock
test
imul
push
js
loopne
call
sbb
cmpsb
ret
jecxz
stos
mov
jb
ja
inc
cmp
leave
jno
lcall
lods
cltd
sbb
cmp
fmuls
int3
in
sarb
shlb
dec
addr16
aam
push
out
je
lcall
push
pop
sbb
adc
leave
fsts
pop
mov
sbb
sbb
mov
into
imul
roll
in
cmp
jns
add
outsb
or
pop
bound
lahf
lahf
aad
xchg
stos
or
mov
mov
pop
out
inc
cmc
xor
hlt
jo
and
add
mov
icebp
clc
sub
je
fistl
xchg
and
push
xchg
add
shlb
ret
lret
lcall
and
fdivr
pop
addr16
lock
int3
add
lcall
mov
push
rolb
div
test
or
pop
jecxz
out
mov
xor
gs
mov
xchg
inc
push
stos
and
dec
aam
pop
imul
out
inc
push
mov
mov
lods
dec
sub
lods
out
out
sub
pop
std
push
cld
xor
mov
or
in
test
test
mov
jp
mov
mov
add
aaa
push
cmp
adc
jbe
inc
or
jle
jo
scas
mov
enter
popf
add
frstor
movsb
sbb
rcl
sbb
pop
lds
fdivrs
lcall
xor
pop
jbe
cltd
in
andb
out
sbb
adc
add
or
repz
pushl
pop
pop
push
add
call
sbb
lea
jp
dec
push
lds
loope
adc
lds
inc
mov
in
popf
aaa
adc
ret
inc
cmpsb
cmc
into
inc
or
and
imul
scas
popf
and
xor
into
adc
mov
out
pop
cmp
cld
mov
adc
mov
xchg
in
lret
xlat
mov
jo
push
shlb
mov
push
cmpl
adc
mov
pop
shrb
cmp
loop
int3
inc
adc
cs
pavgw
ret
aad
aad
out
mov
xchg
jg
xlat
aas
leave
or
or
stos
mov
shrl
pand
mov
inc
push
mov
insb
int3
mov
out
sbb
clc
jb
das
fadd
mov
cmp
jecxz
fsubrs
mov
cmp
push
je
xor
adc
jmp
xchg
add
mov
shl
ret
push
std
push
lea
das
cmpsb
aad
in
add
adc
pop
sub
jb
add
in
fs
nop
out
fs
lret
lret
std
arpl
sbbl
and
xchg
lock
xor
jp
or
or
orb
ss
stc
sahf
cmp
inc
dec
arpl
es
pop
enter
rcrl
pushf
inc
imul
rcr
push
stc
stc
xchg
mov
lock
sahf
jbe
stc
jle
scas
mov
xchg
stos
xor
mov
cld
sbb
js
cmpsl
mov
dec
cmp
mov
xchg
pop
outsb
sub
stos
sahf
xchg
fcomi
insl
loope
in
lret
sar
mov
roll
cltd
or
dec
into
add
seto
jbe
in
mov
dec
nop
mov
fwait
ds
mov
lock
cmp
sub
dec
pop
mov
jae
cmpsb
jo
mov
sbb
mov
imul
add
mov
pop
aas
ljmp
xchg
inc
push
cmp
jne
or
les
sbb
and
sahf
mov
pop
out
aas
add
lock
xchg
cmp
or
mov
push
lcall
or
in
scas
jge
adc
out
sub
mov
fsubl
scas
xorb
sti
dec
fcmovu
mov
clc
stc
insl
jbe
or
mov
fidivrs
push
xchg
in
int
cmp
test
in
mov
jae
mov
lret
xchg
sub
mov
ret
adc
les
outsb
fidivrl
mov
and
mov
int
into
pop
adc
push
stos
js
clc
repz
add
inc
lds
insl
or
cs
mov
xchg
imul
cmp
sub
jl
push
mov
lods
scas
jbe
fsts
scas
ds
shr
xor
mov
xor
jbe
stos
fildl
insl
sarl
inc
fsts
repnz
xchg
inc
sbb
jmp
mov
or
bound
mov
xor
mov
inc
je
sbb
lea
or
icebp
mov
jbe
in
mov
jg
ljmp
gs
in
insb
leave
test
inc
stos
outsb
lods
dec
loop
loop
push
xchg
mov
adc
pop
mov
imul
or
mov
sarb
mov
in
pop
rcr
xchg
nop
pop
fs
rol
test
jns
std
addr16
mov
push
les
rcr
and
aaa
dec
jnp
fucom
jge
and
jo
popl
jg
mov
pop
or
push
xchg
jae
aad
lret
into
in
cld
aad
test
push
push
jbe
add
stc
sbb
pop
imul
in
fwait
aas
mov
sub
mov
mov
in
xor
cli
sti
cs
xchg
jb
jg
iret
mov
sbb
cmpsb
jmp
aas
pop
fnstsw
mov
out
jecxz
mov
or
mov
movb
and
sahf
ss
repz
les
and
jmp
stos
mov
out
test
sarb
insl
mov
mov
divb
es
adc
addb
sub
jb
gs
inc
pusha
ja
bound
into
shlb
cmpl
mov
push
icebp
and
cli
sarb
es
xor
popa
js
icebp
push
cmp
pop
pushf
dec
pop
adcb
push
pop
jne
dec
in
cmp
jae
mov
mov
xor
jge
or
int3
push
cmp
xlat
fistl
out
mov
add
repz
jnp
adc
sub
and
out
stos
ja
or
out
jg
pop
lods
aad
sbb
cmp
dec
xchg
shll
mov
mov
sbb
sbb
jne
adc
pop
or
test
pmullw
je
dec
rolb
sahf
movsl
sub
dec
push
arpl
movsl
scas
or
repz
movsl
aaa
test
cli
pushf
pop
ljmp
pop
adc
xchg
pop
xchg
psrld
mull
shlb
sub
ret
inc
fwait
test
pop
jne
jg
mov
aam
popf
lahf
fldenv
pop
std
mov
cmc
cltd
fdivrs
int
stc
aas
mov
push
add
pop
xchg
test
pushf
dec
or
push
rolb
repnz
jecxz
daa
hlt
xorl
cwtl
hlt
adc
iret
scas
in
lods
lods
xchg
xor
and
test
fistl
lahf
psubb
icebp
add
lods
push
ja
rolb
inc
enter
mov
test
int3
push
call
mov
out
ljmp
bound
pop
mov
push
sarb
outsb
xor
das
iret
lea
test
sub
in
out
sub
scas
mov
add
sub
add
sub
mov
lcall
push
add
movsl
mov
xchg
or
cs
jo
push
xor
mov
cmpsb
iret
sbb
out
xor
pop
add
xchg
ljmp
sub
jno
cmp
daa
mov
pop
testb
testb
mov
jbe
dec
adc
dec
mov
fdiv
movsl
loope
lcall
dec
cld
xchg
cwtl
lret
std
cs
pop
test
jae
aaa
jb
push
icebp
jle
inc
xor
jl
push
std
mov
iret
push
sbb
loope
push
or
jl
xchg
fldl
inc
icebp
dec
jg
pop
int3
add
mov
push
mov
popl
shlb
ljmp
insl
jne
xchg
ds
int3
outsb
jns
adc
fs
stc
fdivl
push
add
mov
xor
jo
dec
cmp
jg
sub
pop
jnp
fisubrs
mov
xor
arpl
cmp
xlat
ja
pop
mov
sbb
shl
xor
dec
lea
cltd
mov
sub
mov
mov
int3
sbb
sbb
xchg
pop
lret
in
and
push
cltd
leave
xor
cmp
in
imul
lds
and
jg
sbb
testl
jno
out
add
insb
mov
lods
inc
sahf
out
insl
repnz
push
mov
repnz
jb
jge
push
sub
fs
int3
sub
mov
pop
xor
push
arpl
mov
fstl
pushw
daa
sbb
xchg
movsb
ja
cmp
mov
sbb
and
andb
in
inc
stos
jp
mov
not
nop
lock
out
xchg
std
je
outsb
add
fidivrl
jecxz
or
add
fld
mov
outsb
dec
divb
mov
sbb
xchg
cli
push
lret
ljmp
pop
jae
imul
lock
out
das
jnp
rep
dec
push
shl
in
inc
cmpl
jp
leave
ret
xlat
sub
mov
lds
jmp
cmc
or
dec
add
jno
push
mov
int3
insb
jns
adc
xor
aam
lock
xor
call
rcll
pop
push
push
mov
xor
fbstp
scas
adc
rorb
cmp
into
addr16
adcb
and
dec
mov
cmc
movsl
int3
adc
jg
pop
or
shl
jecxz
out
pop
stos
mov
sbb
add
addr16
mov
jg
mov
adc
push
mov
push
pop
mov
sbb
sub
mov
mov
mulb
sub
rorb
add
insl
jmp
add
xchg
movsl
incl
mov
mov
sub
clc
sbb
ja
outsb
hlt
jbe
in
xchg
xor
nop
ljmp
jecxz
push
out
icebp
les
es
jno
cltd
sbb
lret
popa
and
add
push
out
cmp
xchg
sahf
jg
jecxz
mov
rcrb
xor
nop
in
adc
jae
jecxz
dec
push
inc
xchg
loope
pop
sti
adc
sbb
fstl
push
jo
lods
fisttps
cmpsl
pop
cmp
ljmp
roll
in
xchg
mov
iret
inc
cwtl
mov
lahf
stos
push
xchg
adc
test
mov
cmc
cmp
mov
mov
loop
lods
shrb
sbb
xor
rorb
test
mov
aaa
bound
repnz
xor
xchg
or
jns
pop
lahf
stos
or
shll
xor
pop
mov
jns
pop
push
and
push
push
cmp
fimuls
lds
mov
movsb
lret
lcall
jnp
jp
push
scas
int
std
lods
mov
std
mov
cmp
gs
pop
popa
das
imul
daa
std
jecxz
add
push
out
pop
pop
jae
mov
loopne
out
ss
int
mov
fists
and
add
roll
jne
xchg
aaa
mov
fcompl
mov
inc
jnp
mov
loope
jmp
in
jmp
fcmovne
sbb
scas
jb
or
mov
fiadds
mov
xchg
jle
inc
sahf
das
xor
lods
ret
insb
test
negb
in
or
int
cmp
faddp
xchg
jmp
jge
sar
lahf
mov
xor
push
fwait
mov
lds
je
pop
pop
imul
xchg
hlt
adc
sahf
lcall
cmc
cmpsb
sti
cmc
jo
int3
mov
xchg
sub
in
mov
sub
mov
push
or
jns
mov
adc
cmc
xor
int3
xlat
or
adc
push
les
jae
in
arpl
mov
dec
jne
aam
loop
inc
xor
jg
in
js
aam
sub
mov
stos
inc
xchg
push
unpckhps
dec
movsb
stc
sbb
fwait
mov
int
jnp
inc
mov
rol
dec
mov
inc
out
ficoms
je
adc
ret
loop
cmp
dec
mov
push
lock
std
sub
mov
mov
cmp
or
push
add
lock
push
dec
cmp
loopne
lahf
push
pop
xchg
loop
ljmp
xor
outsb
xchg
mov
out
into
sbb
push
int3
push
or
sub
push
add
and
ljmp
clc
js
or
hlt
xchg
xchg
int
ja
rclb
xchg
pop
stos
in
or
xor
and
ficompl
lcall
jg
push
scas
cmp
cmp
xchg
cmp
out
hlt
xlat
hlt
cmpsl
lock
jmp
sub
or
in
mov
iret
mov
jne
lcall
inc
cmpsb
cmovl
lods
aam
xchg
jg
pop
xor
lods
bound
pop
jg
jb
mov
lock
mov
mov
cmpsl
loopne
push
mov
lahf
aad
rol
loop
add
or
aam
sub
mov
xor
mov
out
mov
cwtl
fwait
shll
scas
dec
and
leave
dec
cmpsl
jle
inc
sarl
or
jle
mov
sbb
icebp
push
lret
sbb
jge
mov
lcall
cmp
push
push
sub
xor
pop
fstps
divl
outsb
inc
add
cmp
icebp
jp
pop
cld
xor
lods
dec
insb
hlt
in
pop
outsb
mov
and
sahf
sub
cmpsb
xchg
jge
and
or
mov
pop
jnp
stos
mov
cltd
adc
push
mov
mov
xchg
stc
imul
inc
lock
repz
xchg
dec
cmpsb
int3
mov
cmc
stos
insb
out
push
push
sbb
icebp
arpl
addl
jo
push
cmpsb
jg
out
lahf
mov
xchg
cmpsl
loop
push
mov
mov
lret
lahf
bnd
xchg
add
orl
jl
ror
adc
sbb
inc
loopne
xchg
jle
add
push
sbb
cmpl
cmp
jle
shl
mov
das
lea
ds
iret
push
movsb
lods
xchg
cmp
inc
fiadds
pushf
mov
sub
cmp
and
xor
push
inc
lds
xchg
xchg
shr
out
adc
jp
outsl
jno
inc
popf
push
shr
jno
and
imulb
xchg
jg
lcall
xor
cmpsb
idiv
cmc
fisubrs
int3
outsl
sbb
and
xchg
aas
imul
popa
mov
stc
flds
fmuls
dec
nop
jl
cmp
shll
arpl
notb
pop
lea
mov
pop
xor
test
mov
popf
sti
imulb
add
mov
repnz
sub
rcrl
mov
subl
pop
orl
xchg
stc
adc
sahf
ss
movsb
aad
inc
dec
dec
loop
mov
push
fdivr
push
inc
repnz
frstpm(287
xchg
ret
jecxz
pop
cmp
in
call
and
jae
dec
or
jo
mov
stc
inc
push
xor
ljmp
je
xchg
and
dec
popf
mov
push
nop
sahf
aaa
sbb
sub
hlt
cwtl
je
cld
mov
cld
fsubl
xchg
cmp
roll
xchg
out
stos
xchg
je
leave
cli
inc
pop
jle
lret
out
out
ljmp
rcll
out
mov
dec
mov
push
stos
mov
inc
mov
mov
xor
push
dec
lds
jecxz
jecxz
scas
aaa
aam
push
pop
js
call
int
sbb
test
test
enter
inc
jl
test
das
inc
and
lds
mov
scas
orb
lret
jno
mov
jle
shlb
jl
mov
out
pop
mov
fbstp
cmp
pop
stos
jmp
das
shll
orl
sbb
sub
stos
mov
mov
repz
cmc
ljmp
xchg
movsl
test
push
pop
and
mov
enter
imul
sbb
ror
inc
ljmp
sbb
cwtl
sti
xchg
lods
in
inc
ljmp
es
stc
xchg
leave
or
stos
cld
add
push
mov
xor
repnz
sbb
xlat
sti
fdivr
fisubrl
sbb
sbb
add
jp
lods
mov
pop
mov
sub
vorps
stc
mov
mov
clc
fbld
cmp
pop
into
sbb
mov
or
mov
push
sub
fs
sub
sub
inc
add
popf
mov
xchg
mov
xor
dec
jge
ret
push
daa
repz
aam
xchg
inc
cmc
dec
push
jbe
mov
imul
sub
jl
cmp
imul
js
mov
pop
adc
jl
or
jns
rolb
arpl
add
pushf
mov
xchg
xchg
imull
lock
jp
fadds
or
inc
push
mov
int
clc
pop
sub
mov
call
in
dec
push
jns
mov
jl
daa
jmp
fucomip
add
data16
jb
pop
xchg
pop
xchg
repnz
lahf
lds
pop
mov
jge
and
mov
aas
xchg
sbb
xchg
jp
pop
mov
dec
roll
pop
dec
push
inc
pop
mov
outsl
ds
mov
xchg
mov
sbb
lea
mov
dec
push
xchg
push
pop
push
push
aam
subb
imul
mov
push
xchg
pop
mov
adc
sub
cmp
jbe
lahf
mov
ja
pusha
cmp
loope
ficoms
inc
add
mov
pusha
xchg
cs
loope
aam
stos
cmp
mov
nop
leave
cli
movsb
mov
xor
xchg
cmc
test
std
push
arpl
les
outsb
xchg
insl
into
mov
fmull
dec
sub
mov
push
cmc
or
cwtl
out
int
scas
cmp
cmc
adc
aad
jbe
pushf
js
mov
push
fimull
inc
test
sbb
sub
mov
dec
shll
cmpsl
and
add
xchg
or
hlt
push
mov
adc
dec
call
ret
mov
jb
adc
cmp
shrb
lret
add
jecxz
sub
sbb
popf
mov
aas
mov
addr16
mov
arpl
sbb
dec
push
sub
repz
das
and
cmc
xchg
push
mov
cmpsl
int3
mov
jae
incb
lock
or
fcoms
lods
out
sbb
addb
mov
ss
inc
cvtss2si
ss
clc
mov
add
in
push
jo
ret
addr16
int
inc
imul
sub
sub
push
push
xchg
mov
or
imull
popf
popf
inc
sub
xchg
mov
imul
ret
inc
cmp
cwtl
mov
xchg
mov
dec
xchg
outsb
cmp
out
data16
pop
xor
cmpsl
and
inc
inc
xor
adc
xor
mov
inc
ds
in
mov
inc
sahf
jg
loop
or
xor
inc
testb
mov
cmpsb
in
bound
xchg
adc
inc
sub
sbb
mov
std
adc
sub
and
pop
or
pop
add
jle
mov
sub
sub
cmp
scas
sbb
gs
fcmovb
mov
stc
stc
bound
sbb
in
fwait
pushf
nop
repnz
push
push
scas
inc
dec
jp
sarb
mov
loop
leave
mov
arpl
cmpsl
scas
mov
inc
mov
push
es
xchg
mov
push
jbe
push
jp
ljmp
cwtl
jnp
xor
ret
adc
insb
fmuls
cli
sbb
cmp
xor
leave
int
andl
rorb
xchg
xchg
std
jecxz
mov
cmp
lds
xchg
dec
push
mov
cmp
scas
in
mov
fs
cmp
lds
rolb
pop
fdiv
add
rorl
test
mov
mov
roll
jne
inc
daa
push
lea
inc
subb
dec
mov
lret
pushf
inc
adc
xchg
nop
ret
sbb
push
and
stos
jecxz
sbb
sbb
fists
jne
or
pop
lret
adc
movsl
xor
push
sub
jle
loopne
orl
inc
pushf
cmpb
xor
hlt
cmp
adc
and
into
pop
mov
ss
add
add
dec
pusha
mov
mov
mov
cmp
cmp
and
popa
pop
push
pop
std
fdivs
ss
bound
sbb
mov
push
sahf
sub
bound
mov
cmp
or
fwait
push
jecxz
aam
jmp
xor
filds
shrb
das
aaa
out
mov
enter
cwtl
shrl
icebp
jle
dec
in
out
mov
std
add
gs
dec
xlat
enter
push
sbb
call
and
je
pop
das
xchg
and
mov
in
cmp
dec
jns
mov
add
jle
dec
dec
and
repz
and
addr16
inc
inc
daa
ja
ljmp
sbb
sub
in
sti
aam
popf
mov
mov
or
cmp
call
and
sahf
rolb
add
aam
jo
ficoml
push
cmpsb
dec
mov
loopne
loop
out
daa
inc
push
adc
push
scas
loopne
shr
dec
push
in
sbb
daa
and
adc
sbb
fildll
xchg
push
push
in
push
ja
or
pop
in
mov
popf
fxch
cmp
mov
movsb
call
das
lahf
and
arpl
shl
andl
ret
arpl
icebp
inc
pop
sbb
pop
imul
push
adc
cmp
pop
dec
imul
sub
push
push
adc
xor
fistps
andl
inc
xchg
cld
or
lretw
idiv
dec
dec
mov
jmp
aaa
dec
dec
mov
test
jp
stos
and
or
pusha
mov
xor
into
aam
cmpsl
out
invd
cmp
pop
mov
pop
pop
adc
hlt
sbb
mov
out
inc
fwait
pop
out
outsb
push
out
pop
jp
mov
xor
scas
sub
scas
push
lret
movsb
mov
repnz
test
xchg
mov
das
in
mov
test
xor
xchg
xlat
outsl
lock
push
pop
sbb
mov
aam
xchg
mov
loopne
and
mov
jnp
jmp
xchg
mov
mov
cmp
mov
lcall
popl
mov
fmulp
lds
test
sub
inc
add
inc
add
pop
jo
sbb
enter
imul
ret
sbb
pop
pop
mov
xor
xchg
ret
mov
xchg
pushf
and
scas
mov
jl
jl
jle
cmp
ss
push
es
insl
imul
sahf
stc
xchg
sti
sub
fimuls
outsl
xchg
sub
xchg
arpl
ficomps
pop
popa
sub
addr16
mov
loope
pop
and
push
or
push
insl
xor
cltd
xor
in
add
and
aaa
mov
xor
imul
push
addr16
in
adc
dec
dec
mov
lods
push
rcrb
pop
or
jnp
into
cmpsl
out
arpl
mov
lcall
fimuls
faddl
imul
mov
aaa
ljmp
call
xchg
ret
inc
pop
sahf
dec
or
jno
cmp
test
out
cmp
lods
roll
mov
cli
rcrb
es
insb
pushf
or
or
loopne
jno
movsb
cmp
scas
ds
hlt
test
mov
mov
xchg
adc
xor
loopne
das
orb
es
xchg
push
cwtl
add
inc
data16
popa
je
and
shrb
push
scas
mov
mov
out
scas
push
dec
add
mov
out
push
lcall
out
lahf
pop
sbb
mov
jmp
repz
jl
xor
lret
jae
out
ret
nop
add
cltd
and
inc
neg
or
jae
aad
hlt
jo
fidivl
mov
mov
adc
daa
dec
push
data16
mov
movsb
int
repz
mov
dec
push
in
push
shrb
adc
mov
ja
push
or
inc
xchg
addb
pusha
mov
xlat
nop
dec
jne
in
push
out
or
loop
jg
xor
mov
jecxz
scas
xchg
mov
cld
daa
cs
mov
jb
sbb
test
and
dec
std
lahf
mov
dec
xchg
fldcw
pop
orl
push
mov
imull
or
es
int
jmp
add
mov
sub
repnz
or
sub
scas
xor
and
stos
add
call
imul
pop
mov
inc
pop
imul
ja
cmpsb
in
xor
dec
or
daa
pop
push
cmc
sub
push
hlt
or
mov
les
mov
nop
cmp
xor
cltd
pusha
daa
icebp
out
adc
xor
mov
in
mov
sub
lret
jp
sarl
xchg
int3
jg
shl
bound
or
adc
leave
or
or
mov
xchg
in
mov
pop
movb
gs
paddsb
in
loopne
mov
jle
xor
push
inc
xor
ret
cmp
mov
add
dec
mov
add
add
jge
into
or
mov
int
dec
pop
les
fdivrp
sbb
les
in
mov
rol
cmc
enter
mov
pop
xchg
inc
jo
sub
pop
or
and
hlt
outsb
sbb
ficoml
or
add
sbb
jmp
fisubl
test
daa
inc
xchg
and
jge
mov
pop
xchg
jmp
sub
and
test
lods
movsb
leave
cmc
sarb
imul
lock
jb
lods
add
pusha
dec
adc
mov
negb
pmaxub
or
sub
fisttpl
repnz
mov
jnp
popa
shrl
cmp
cmpb
mov
and
mov
xchg
adc
bound
xchg
jge
stos
insb
jg
aad
sbb
fs
mov
mov
movsb
movsb
and
rol
ret
dec
movsl
inc
sub
jnp
cwtl
mov
aam
dec
mov
pop
fdivr
push
negl
or
cmp
imull
std
inc
addl
loope
sbb
mov
cmp
sub
adcb
shlb
xor
clc
mov
inc
sub
lods
call
jle
mov
add
mov
xorb
aam
lods
or
outsb
sub
xor
pop
test
push
rol
or
mov
sbb
sar
pop
dec
lahf
push
jl
scas
das
push
mov
dec
jecxz
imul
scas
jno
aas
cwtl
hlt
cltd
sbb
inc
mov
sbb
int3
scas
jle
imul
incb
jl
nop
jl
sbb
push
push
iret
jge
mov
fstp
clc
aas
add
mov
sbb
test
stos
call
and
fdivr
xchg
outsb
pop
inc
test
xchg
push
addl
insb
scas
push
dec
dec
out
outsl
cmp
arpl
jle
fcomip
loope
pusha
xchg
or
or
jp
subb
adc
mov
enter
int
aas
jge
stc
dec
mov
xor
xchg
and
and
in
fistps
lret
sbb
sbb
decl
xchg
lock
loope
lods
adc
lahf
jmp
jp
scas
cld
pushf
push
adc
andl
das
mov
mov
push
jmp
sbb
and
pop
mov
adc
push
fisubl
xchg
mov
sub
pop
add
pop
clc
or
mov
repz
mov
mov
into
or
test
sarl
mov
js
lea
inc
mov
inc
mov
mov
dec
or
into
into
popf
mul
cmp
lock
rorl
mov
sub
in
xlat
inc
test
mov
scas
iret
in
sub
roll
push
jne
push
pop
pushf
xchg
daa
xchg
dec
popa
and
sbb
mov
cltd
cmp
cmp
ljmp
imul
push
sub
push
mov
xor
cmpsl
lock
push
arpl
pop
pop
movsl
enter
pop
adc
stc
or
sbb
std
mov
jp
push
jns
rcrl
pop
mov
cmp
addl
push
add
scas
and
ja
xlat
cmpsl
leave
mov
mov
add
sub
int3
ja
adcb
jbe
sbb
sbb
mov
xor
mov
sub
pop
and
in
jns
adc
leave
inc
cli
sub
dec
data16
inc
and
mov
loope
push
add
adc
jbe
aas
adc
ds
xor
addl
push
add
sub
stos
in
lahf
xor
sbb
imul
cwtl
pop
daa
lea
popa
iret
xlat
dec
jge
imull
leave
xor
fcmovbe
push
pusha
mov
add
add
inc
mov
or
xchg
outsl
shl
push
out
xchg
dec
push
or
popf
mov
cmp
mov
aam
mov
xchg
push
xor
mov
dec
sbb
dec
in
jae
mov
mov
or
lock
jnp
inc
test
lea
mov
lret
fisubrl
js
test
mov
call
mov
xchg
mov
and
mov
sahf
aas
mov
mov
and
xor
sub
mov
jge
xor
aam
or
xor
xor
js
mov
fbstp
push
js
fnstenv
imul
adc
pop
fcmovbe
fsubl
xor
inc
stos
mov
or
leave
int3
imul
adc
imul
insl
ljmp
incb
inc
push
mov
cmp
and
push
xor
adc
sar
dec
out
movntq
out
xchg
push
xchg
dec
xlat
mov
pop
int3
push
test
pop
lcall
das
xor
cmp
xchg
push
loop
xor
jle
outsl
jo
cwtl
shl
sbb
xlat
data16
testb
shlb
jp
inc
mov
push
cs
push
push
out
fisttpll
data16
adc
cmp
inc
std
or
sub
pop
and
xchg
mov
mov
out
cwtl
cli
imul
sbb
xchg
cmc
cmpsl
mov
dec
mov
les
mov
int
mov
inc
mov
mov
mov
pop
mov
mov
test
push
dec
inc
out
xchg
frstor
je
xor
fisubrs
jno
lret
adc
imul
cli
push
mov
loope
out
in
outsb
or
mov
jo
mov
pop
mov
je
in
cmp
popa
out
xorl
str
enter
lock
dec
xor
sbb
pop
pop
rorb
ret
ret
jecxz
addr16
or
jmp
ss
dec
out
adc
xchg
sbb
and
sbb
push
movsl
pop
pop
das
movsl
je
pop
dec
test
sub
mov
in
lret
mov
pushf
outsb
sbb
scas
sbb
aaa
jp
scas
addb
dec
add
movsb
jae
xchg
arpl
das
out
fdivrs
loope
mov
xchg
or
add
in
popf
sahf
fwait
jl
dec
sub
nop
mov
and
pusha
ds
inc
jmp
jl
popf
cmp
ljmp
out
or
inc
mov
xchg
cmp
xchg
cmpb
scas
sbb
lea
cwtl
xor
mov
out
mov
push
int3
dec
dec
std
mov
shll
pop
xor
shl
bound
sbb
sbbl
push
lahf
sbb
xor
shrb
push
repz
mov
xor
fcoml
cltd
lahf
hlt
dec
jnp
jl
repz
in
in
mov
jnp
dec
addr16
xorb
jp
mov
in
mov
xchg
in
insl
mov
adc
adcb
sub
lods
xor
sbb
push
sbbb
loop
sbb
jl
inc
jne
jecxz
ffree
cmpsl
in
push
push
sbb
negb
repz
loop
jb
in
mov
dec
icebp
icebp
xor
stos
pop
cld
adc
fildl
stos
jne
jae
pushf
jle
sbb
push
test
adc
jbe
aas
sub
or
mov
out
sbb
test
or
in
mov
aas
stos
mov
mov
adc
lahf
add
cmp
shrb
data16
mov
mov
fisttpll
inc
lds
jp
stc
adc
nop
push
and
adc
stos
int3
bound
inc
mov
divb
inc
mov
ret
mov
dec
jl
je
cmp
mov
imulb
inc
sti
mov
mov
lds
pop
or
inc
lods
mov
add
pop
cltd
aas
lret
cmpsl
cld
jg
push
sbb
mov
and
push
mov
xchg
mov
mov
push
xor
les
push
mov
adc
inc
xor
push
lods
sahf
data16
shrb
lods
mov
and
js
cwtl
dec
ffreep
lods
dec
xor
lret
dec
or
fbstp
jno
xchg
cmpsb
dec
shlb
inc
in
cltd
push
cmp
fwait
rclb
rcll
aaa
pushf
jo
sub
cmp
pop
mov
sarl
push
iret
loope
not
loop
fistpl
pop
sbb
incl
cmp
movsl
bt
mov
stc
xor
loope
int3
push
mov
roll
popa
mov
or
or
mov
stos
push
inc
pop
adc
inc
into
xchg
jl
push
mov
call
fisubrs
sbb
xor
jbe
loope,pt
lock
aaa
push
in
cmpsb
xor
cmp
adc
ret
xchg
sbb
imul
cmp
arpl
out
add
in
cmp
xor
inc
mov
sbb
inc
rorl
out
test
cmp
scas
lock
nop
mov
les
mulb
sbb
adc
push
push
lcall
adc
xor
adc
xor
push
cmpsb
scas
lahf
nop
cmp
dec
mov
mov
jg
mov
fisubrl
adc
loop
push
inc
sbb
pusha
push
sbb
jecxz
adc
mov
out
push
mov
jns
aam
mov
mov
loop
jg
mov
insl
pop
aas
push
pop
rcrl
sub
repz
popa
cmpsb
lods
fcoml
movsb
cmp
push
push
sub
outsl
add
jns
jle
jne
mov
aaa
and
outsl
push
xor
out
scas
jmp
jp
sbb
lret
pusha
push
jne
test
sar
sbb
movsb
loop
xchg
jae
mov
or
push
aad
jnp
rcrb
fsubl
pop
mov
jmp
dec
adc
in
sbb
fists
mov
add
out
mov
mov
sbb
faddl
mov
cmp
sub
cmp
imul
jg
adcb
mov
fwait
or
mov
mov
lds
xor
or
aaa
sar
push
repz
xor
es
aad
shr
lock
adc
leave
mov
insb
outsl
ljmp
je
mov
les
xchg
mov
xchg
ret
pop
sarb
pop
push
push
decb
cltd
xchg
push
cmpb
and
lds
ds
shrl
cmp
mov
adc
mov
cmpsb
ret
imul
das
push
push
jg
jb
xchg
lret
jbe
xor
or
aam
testl
or
or
in
push
xchg
push
pop
cmp
call
mov
jmp
jo
sub
adc
cmp
das
xchg
xchg
push
fdiv
cmp
cmpsl
mov
push
dec
ret
les
loope
pop
inc
cwtl
mov
xor
call
mov
js
sbb
addb
mov
jae
xchg
push
inc
cld
je
in
push
push
jo
inc
push
push
fs
adc
cmp
adc
adc
push
shll
out
push
pop
lcall
pusha
xchg
icebp
mov
xchg
mov
mov
push
pop
inc
dec
idiv
frstor
dec
and
andb
lret
clc
jb
push
pop
mov
xchg
out
mov
call
xchg
or
es
or
jg
mov
sbb
dec
dec
xorb
in
jnp
fldl
popf
mov
jae
out
push
push
data16
xor
xorl
frndint
fldt
pop
add
lods
add
ja
mov
cs
cmpsl
sbb
pop
jb
lock
mov
stc
sub
jecxz
inc
pop
xorb
pushf
add
and
jbe
lret
vmwrite
mov
call
push
loop
push
lcall
test
cmc
sbb
repz
test
gs
jp
leave
ds
movsl
loopne
mov
xchg
gs
mov
cmc
inc
inc
hlt
add
fstps
ja
pop
fstps
nop
lsl
xchg
out
das
or
pop
mov
rorb
out
int
push
xchg
mov
ret
movl
rcrb
push
mov
push
ss
testb
rcr
mov
out
adc
leave
sarl
xchg
mov
negl
adc
sub
mov
nop
cmp
jne
pop
inc
jmp
mov
mov
dec
test
and
ds
inc
ds
imul
les
loopne
add
xchg
sbb
in
mov
mov
dec
mov
mov
pushf
jae
push
dec
xor
push
mov
sub
cmp
xchg
cmp
shlb
js
add
in
rcrb
jge
ja
imul
stos
push
jmp
inc
movsb
push
xchg
adcl
xchg
or
addr16
push
in
fidivl
imul
test
dec
iret
mov
pop
arpl
stos
movsl
cmp
sti
push
dec
dec
push
or
ficomps
sbb
sbb
push
dec
pushf
and
lea
daa
ret
sbb
sub
mov
adc
cmpsl
fwait
and
cmp
mov
dec
jge
imul
xchg
fsubrs
and
movsl
mov
scas
popf
es
and
movsb
push
push
adc
scas
cmp
sbb
dec
enter
pushf
lea
mov
push
adc
int
sahf
jle
ds
and
cmp
pop
pop
cli
aam
rol
jo
xchg
cmc
xor
leave
lcall
fwait
bound
test
push
mov
pop
push
imul
lret
jo
add
stc
cmp
shlb
adc
fdivrs
sbb
or
test
push
loope
pop
and
js
xor
les
testb
sub
pop
sub
xor
xchg
inc
xor
mov
pop
mov
addl
dec
out
imul
inc
lds
imul
test
pop
mov
test
sbb
dec
and
ja
in
repnz
fcompl
cwtl
fldenv
loop
idiv
push
repnz
inc
add
cmp
jecxz
sub
ret
out
test
dec
mov
shll
js
mov
push
mov
shll
xchg
or
imul
sub
jb
inc
sub
sub
scas
push
std
ficoml
cmpsb
mov
xchg
cmp
pop
scas
xor
jo
lea
addr16
dec
push
iret
push
mov
mov
lret
in
or
adc
inc
inc
sub
cmp
in
pop
test
jnp
lret
fdivs
push
lods
cmp
mov
inc
jb
mov
cli
or
insb
adc
adc
ja
dec
mov
sbb
and
and
mov
dec
pop
sahf
arpl
mov
jle
jmp
mov
xor
es
aam
in
cmp
fstpl
data16
gs
or
push
hlt
stos
sub
sbb
cmp
mov
xor
xlat
push
pusha
movsl
add
fidivl
idivb
dec
movsl
cmp
inc
rorb
and
jbe
sbb
mov
and
dec
pop
aad
dec
fisubs
sub
aaa
pop
push
test
scas
xor
adc
xchg
xor
imull
sahf
call
jmp
jmp
lods
in
adc
fisubl
mov
cli
loopne
ret
aas
jae
iret
sub
xchg
pop
add
adc
popf
push
push
fcomp
push
test
adc
shlb
ret
outsl
outsb
jno
fdivrl
push
stos
push
into
jge
mov
mov
xchg
in
repnz
pop
sarb
sub
loopne
and
fdivrl
mov
outsl
sbb
jae
add
lock
jno
sub
or
incb
cld
js
in
push
testl
push
ds
jg
stc
fwait
fwait
or
or
sub
daa
dec
orps
sbb
or
mov
fisttps
sub
int3
sbb
icebp
jmp
scas
mov
xor
int
popa
mov
hlt
fimull
leave
dec
pop
cmp
cmp
push
push
xor
or
mov
push
xor
push
arpl
mov
pop
or
jns
or
cmp
cmpsb
cli
dec
push
dec
jp
sahf
xor
orps
adc
js
shrb
fptan
ret
bound
movsb
xor
adc
movsb
mov
pop
insb
cmp
lea
xor
dec
psubsw
mov
mov
mov
cmpsl
addr16
lods
xlat
adc
sahf
jmp
sahf
fdivrl
adc
out
cmpl
and
lahf
mov
adc
xor
arpl
xchg
cmp
mov
out
cmp
lods
jae
sub
movsl
cmc
call
push
xchg
pop
or
sarl
shrl
and
inc
sbb
flds
push
push
test
cmp
test
out
adc
sub
adc
ret
inc
aad
fbstp
hlt
or
adc
adc
fnstsw
sub
inc
ja
pop
pop
xchg
and
dec
cs
js
arpl
fstps
or
rolb
adc
fwait
adcb
pop
sbb
outsl
jnp
xor
scas
sbb
bound
push
test
popf
mov
adc
mov
bound
fwait
shll
and
sbb
scas
rolb
inc
in
cmp
push
mov
cld
pop
ljmpw
sbb
jne
jle
and
aad
lret
sti
xor
or
jp
les
aaa
lock
arpl
mov
pop
dec
outsl
scas
xchg
lahf
stos
and
jbe
div
push
pop
push
pop
cmp
or
mov
sub
arpl
mov
mov
imul
nop
mov
mov
xor
lcall
call
rcrb
dec
jno
jle
jl
nop
in
ja
lods
sti
pusha
push
add
or
dec
xor
out
push
add
ficomps
sbb
cmp
and
pop
mov
daa
lods
out
mov
popf
loop
pop
mov
pop
sub
or
sahf
xchg
sub
fstpt
jb
jbe
push
in
push
xor
or
push
icebp
aam
insl
cli
or
xchg
jbe
fnstcw
fwait
popa
mov
jae
data16
inc
icebp
sbb
adc
xor
inc
jecxz
idivb
adc
lea
xchg
shll
into
adc
hlt
hlt
cli
xor
mov
notb
sub
inc
pop
fdiv
pop
hlt
jo
insl
arpl
pop
mov
sti
cmp
jle
push
fs
jns
sahf
jmp
lock
jp
dec
sub
testb
addb
mov
push
dec
call
aad
das
sbb
pop
out
arpl
out
cmp
add
idivl
int
imul
cmpl
add
imul
adc
inc
ds
jmp
add
jno
negb
aaa
jecxz
inc
push
jae
xor
leave
sub
jns
rclb
xchg
adc
idivl
adcl
andb
xorl
sub
cmp
xor
dec
inc
outsl
dec
movsb
xchg
add
push
jl
lcall
push
daa
mov
jp
push
int3
adc
iret
xor
test
cmc
fsubrs
mov
and
dec
push
lds
adc
jecxz
das
or
xor
and
test
sbb
jnp
cmp
pusha
push
mov
push
adc
xchg
scas
scas
mov
das
out
aad
fabs
clc
xchg
das
xchg
movsb
push
les
ret
cmp
je
mov
dec
movsb
call
jo
sbb
inc
pop
inc
cmc
and
or
inc
imul
ljmp
mov
idivl
cmp
aam
scas
bound
shll
and
dec
xorl
xchg
dec
iret
sbb
punpcklbw
js
sub
inc
xchg
les
dec
xchg
jmp
jne
xor
into
mov
dec
sbb
lcall
inc
xor
imul
xchg
push
cmc
or
test
jae
enter
in
xchg
lods
or
push
cmp
testl
and
mov
ss
scas
popa
mov
pop
jle
inc
ja
mov
push
xchg
in
ficoms
pusha
jecxz
adc
cmc
pusha
cld
sub
rcr
inc
ja
mov
pushf
or
cmp
ficoms
sbb
ret
xchg
push
shlb
pop
fsubrs
xchg
vpcmpgtd
out
cltd
inc
mov
mov
jne
shll
jae
nop
jmp
push
out
push
fadd
jmp
fbstp
pop
mov
pop
mov
mov
cs
push
mov
int3
negl
call
xchg
mov
mov
mov
push
add
xchg
and
fstl
in
jmp
xor
add
shll
jl
mov
int3
loop
push
add
test
mov
iret
sti
stos
pop
ljmp
pushl
fidivs
in
inc
or
or
test
mov
xor
jns
adc
adc
mov
xchg
in
addr16
call
mov
mov
adc
inc
push
push
lea
push
mov
pop
mov
paddq
jge
popf
sub
lcall
inc
or
outsl
or
mov
lret
mov
repz
dec
sub
andl
mov
or
cmp
leave
mov
xor
lds
dec
sub
aas
cmp
push
push
test
mov
cmpsl
xchg
push
inc
pop
test
xchg
mov
je
mov
pop
sub
imul
and
jo
nop
imul
popa
enter
xor
imul
fstpl
or
xor
aam
dec
xchg
push
inc
push
fstpl
jmp
cli
pop
out
into
ljmp
in
adc
icebp
inc
mov
pop
add
fwait
jg
mov
and
fwait
test
mov
lret
sub
inc
filds
data16
in
xchg
out
lods
dec
sti
jne
out
jmp
jl
mov
jmp
out
and
add
inc
jns
inc
inc
enter
rcrb
repnz
push
cld
out
lretw
pop
out
mov
and
test
xor
movl
jbe
dec
sti
sub
ja
fcom
mov
jp
out
and
xor
add
test
jge
popf
add
jge
add
xchg
dec
sarb
loope
aas
adc
jo
mov
cmp
in
out
xor
or
insb
or
and
and
mov
jecxz
xchg
push
inc
std
shll
jns
push
rcrl
mov
xor
push
clc
jns
sub
dec
outsl
sbb
lcall
out
aad
sti
pop
jmp
dec
mov
xchg
std
cmp
iret
and
popa
jle
ds
cmpsl
gs
not
and
pushf
in
pop
xchg
adc
sub
je
sarb
scas
fisttpl
lods
push
jnp
sub
rclb
mov
jb
xchg
pushf
jle,pt
sub
xor
sub
aas
movsb
fmul
push
fistpl
adc
mov
jne
xchg
rcr
adc
xorl
aam
mov
sub
add
movsb
xchg
cltd
mov
add
push
ljmp
jle
adc
andb
hlt
rorl
cmp
pop
sbb
inc
rclb
test
cmp
or
insb
imul
clc
bound
stos
mov
or
xor
dec
add
orl
jge
inc
sub
sbb
jge
shll
sub
movsl
mov
rolb
cltd
xchg
out
loope,pn
in
cmp
push
lret
ss
in
fwait
sub
push
or
push
and
jle
adc
and
cmp
subb
mov
out
mov
gs
rcll
xor
jl
jno
sahf
hlt
and
ljmp
lods
fstpl
aaa
mov
insb
jecxz
shl
mov
cmp
fsubrs
dec
lods
xchg
fwait
stc
shl
sub
inc
pop
jl
aam
repnz
out
and
mov
cld
jge
loope
inc
mov
cmp
inc
adc
movsl
adc
loope
pop
jo
cmp
pop
mov
shr
outsb
shll
rorb
jne
adc
pushf
jns
adc
lea
inc
sub
mov
ficoms
into
mov
fsubs
inc
das
push
cltd
test
jnp
sbb
test
xor
mov
jge
mov
jl
or
dec
out
xor
and
mov
ja
arpl
adc
add
loopne
shrl
mov
mov
adc
inc
pop
adc
add
adc
and
enter
dec
push
push
notb
adcb
or
mov
popa
push
imul
adc
imul
mov
fistps
insl
xchg
cmp
xor
aam
sbbl
pop
mov
mov
lret
sub
dec
mov
repz
lret
xchg
fsub
sub
mov
icebp
iret
fmul
fisttps
lods
adc
sub
xor
or
in
inc
pop
orl
rorb
fdivp
or
mov
or
mov
lods
xchg
inc
jg
mov
and
cmpsb
lret
cmp
cmpsl
ret
subl
mov
addr16
fidivl
test
sub
mov
adcl
daa
jle
pop
add
jmp
push
testb
push
lds
adcl
lret
mov
sub
stos
or
gs
sbb
and
xor
mov
sbb
push
daa
mov
sbbb
push
add
or
xor
testb
jae
push
sbb
aas
loop
fsub
dec
testl
adc
mov
test
stos
add
stos
xchg
fdiv
push
sbb
pcmpeqb
sbb
test
out
xor
or
sbb
jb
inc
and
adc
movsl
mov
mov
sub
mov
sbb
mov
jbe
mov
xchg
movsl
sti
push
scas
lcall
push
dec
jge
jp
int
les
stos
cmp
andl
mov
sub
enter
fldcw
jae
adc
xchg
imul
daa
adc
adcb
sub
mov
fistps
mov
fs
xchg
test
jnp
cs
insl
adcl
add
nop
add
jecxz
mov
push
sbb
lods
std
xor
mov
flds
stc
xchg
imul
pop
add
clc
pop
adc
mov
leave
into
cli
out
cmp
jne
push
call
xchg
inc
jp
dec
out
push
push
pop
data16
rorl
xor
insl
out
aaa
inc
subb
test
jne
jno
push
xor
sete
xor
out
jecxz
cmp
inc
sub
ficomps
push
fidivs
in
pop
out
dec
divb
ret
js
sub
sbb
ljmp
hlt
lods
mov
les
js
jnp
outsl
jp
out
hlt
imul
movsl
push
sub
mov
out
cmpsb
cwtl
shrl
mov
push
xorb
pop
adc
dec
les
rcr
push
pushf
lods
aas
adc
adc
xchg
pop
popa
sarl
arpl
pop
push
les
lock
jg
xlat
ljmp
lock
xchg
jae
dec
movb
ficomps
and
outsb
sbb
or
loop
pop
mov
pop
adc
or
ja
sub
jnp
scas
mov
pop
fs
xor
push
xlat
dec
push
mov
rep
lock
test
fcoms
stc
xor
and
cmp
lea
pop
sbb
xor
mov
ret
sbb
mov
mov
mov
iret
jns
clc
pop
xorl
adc
lret
inc
push
push
sbb
lock
mov
dec
and
stc
scas
aas
std
mov
int
inc
outsl
mov
stos
xchg
stos
sub
test
dec
rorb
and
cmp
int
repz
mov
in
inc
inc
imul
xor
xchg
dec
jle
das
cli
fildl
iret
push
mov
fidivl
scas
mov
stos
mov
lahf
and
sahf
loop
or
push
pop
pop
out
mov
js
sahf
xchg
push
nop
sbb
xchg
outsb
inc
into
dec
or
scas
and
test
sub
popf
in
push
stos
xorl
rolb
inc
fimull
mov
pop
enter
mov
sbb
inc
lea
cli
mov
repz
and
mov
mov
rcrb
xor
cmpsb
push
jg
das
daa
loopne
shrb
in
dec
lcall
arpl
roll
jbe
stos
in
in
add
int
int3
add
sub
sub
aam
mov
scas
xchg
mov
push
test
outsl
sub
jbe
cmpsl
xor
mov
ds
adc
sahf
pusha
loopne
mov
cld
push
push
aas
or
mov
and
in
push
and
repz
pop
jecxz
test
xor
in
jb
cmp
sub
mov
adc
inc
aad
fisttpl
scas
pop
mov
xchg
push
mov
and
ljmp
cmp
frstor
push
stc
sub
dec
test
mov
dec
cmp
loop
int3
mov
xor
adc
int
inc
cmp
mov
or
in
lahf
dec
cmp
jl
arpl
mov
test
and
lcall
test
je
movsb
dec
lods
mov
cmp
comiss
add
inc
adc
or
add
lods
jbe
add
mov
loope
inc
addl
sbb
cmp
cmp
movsb
andb
rolb
ds
xor
ret
dec
and
movsl
in
sbb
mov
addr16
jle
dec
and
in
rol
cmp
mov
imulb
dec
mov
add
add
loopne
int
rcll
jo
repnz
mov
mov
add
push
subb
mov
inc
aad
mov
lods
jno
fidivl
sbb
mov
dec
xchg
outsb
adc
pop
lret
jne
jl
push
fisttpll
xor
mov
ret
sub
pop
adc
sarb
xchg
daa
aas
adc
and
leave
cmp
out
xchg
mov
xlat
fidivrl
push
das
adc
push
bswap
stc
sub
iret
mov
imull
ja
ret
add
fiadds
and
lret
inc
push
mov
pop
mov
xchg
aad
subb
or
adc
insl
inc
stos
or
xor
xchg
enter
xchg
lock
stc
push
inc
dec
pop
adc
cmpsb
lods
mov
cmp
jp
fsubrs
or
sbb
ss
addr16
dec
dec
jmp
gs
lods
mov
out
shrb
pop
inc
pop
leave
in
inc
xchg
out
add
xchg
leave
dec
ret
mov
dec
sub
cwtl
idivl
cs
xor
out
mov
iret
sti
loope
addb
push
repz
repnz
mov
int3
jnp
cmpsb
outsb
pushf
out
cmp
movsl
cwtl
cli
test
add
cwtl
das
jg
fisubl
cmpsl
or
mov
lock
lret
cs
cli
pop
or
aad
pushf
pushl
add
aad
popf
hlt
js
mov
in
adcl
aad
adc
loopne
mov
lods
mov
lds
add
jae
mov
pop
pop
push
scas
aam
sahf
lcall
jbe
jne
dec
or
pop
int
fimull
xchg
pop
mov
test
pop
fcmovne
pop
and
dec
xchg
and
fistpll
jb
ret
or
xchg
cmc
andb
adc
dec
and
divl
mov
or
dec
rorl
pop
orb
fmul
sub
in
push
xor
stos
add
push
movsb
insb
sub
mov
push
jge
fsubp
inc
xchg
inc
jae
cli
fldenv
addr16
cmp
jb
jo
pshufw
pop
pop
xor
addb
mov
test
mov
jmp
fdivrs
fidivl
or
loope
aaa
lahf
out
negl
xchg
enter
sub
sbb
mov
jno
ds
add
loopne
and
mov
mov
sbb
iret
add
movsl
xor
jb
dec
cmp
filds
sahf
add
aaa
dec
fs
push
sbb
dec
pop
fisttpll
ret
test
iret
cmp
inc
sbb
stos
cmp
shlb
mov
lds
gs
xchg
adc
repnz
jmp
pop
movsl
call
in
mov
xchg
inc
lods
and
sbb
sub
xchg
ja
mov
in
or
loope,pt
icebp
push
test
lret
in
push
and
lcall
stc
sbb
sbb
fisttps
in
addr16
push
cmp
cmp
popf
and
mov
jns
mov
es
stos
ret
aas
and
rcrb
cltd
xchg
int3
sbb
test
dec
int3
sub
dec
sbb
fwait
xorl
xchg
and
testb
lods
into
xor
xchg
addr16
inc
psrlq
jl
aaa
pop
movsb
sarl
mov
or
add
scas
xor
cmp
sub
mov
sub
inc
pop
cmp
aaa
movsl
cli
scas
add
in
mov
sub
shl
stos
inc
es
int
rcll
mov
shl
sub
pop
inc
out
sbb
or
add
dec
sbb
dec
push
roll
je
testl
lods
and
push
cmp
jg
sub
lea
jbe
jb
fstp
mov
adc
js
imul
pop
syscall
xlat
in
rcrl
jns
push
sbb
ja
push
cmc
mov
addr16
xor
add
cmpsl
xchg
sbb
sahf
mov
leave
lcall
or
xor
test
lods
mov
sti
mov
inc
nop
in
sub
dec
mov
pop
mov
mov
lods
inc
cwtl
cmp
stos
jecxz
xchg
cmp
jmp
pop
push
mov
inc
bound
xchg
in
rcll
fs
mov
sub
into
or
out
nop
mov
insb
and
insb
loop
sub
mov
ds
cmp
out
or
scas
pop
fwait
scas
lahf
dec
xor
ret
mov
cmp
xchg
push
int3
and
aas
loopne
dec
pop
iret
sub
aad
fmull
fwait
and
jb
popf
push
sahf
dec
fadds
cld
mov
ja
or
mov
fwait
or
mov
sti
and
mov
and
xchg
shlb
adc
mov
xchg
aam
pop
testl
mov
daa
or
sti
popa
fistpl
sub
push
mov
lock
sahf
and
sbb
push
xor
jnp
pusha
mov
mov
add
adc
dec
in
xor
movsl
lret
mov
lods
fs
pop
out
add
mulb
dec
pop
popf
pop
cwtl
jnp,pt
and
icebp
mov
pop
fisubs
bound
lcall
adc
in
push
inc
cs
orl
mov
test
adc
jo
rcrb
cmpsl
mov
mov
mov
js
cmpsl
rcrb
inc
xchg
insb
insb
fs
adc
incl
adc
push
jae
sub
push
int
iret
jl
cmpsl
cmp
popl
lret
adc
iret
lret
or
sbb
jbe
push
out
negb
jae
vpsubsb
sbb
xlat
cwtl
loope
loop
push
sti
cmp
das
sbbl
insl
pushf
out
fdivrs
xchg
ja
ret
sub
jmp
shl
fsub
mov
mov
adc
pop
mov
and
cmp
xchg
dec
mov
mov
call
fstl
jl
mov
sub
aad
imul
lcall
loopne
sub
inc
push
mov
clc
sbb
xchg
out
call
int3
xchg
mov
mov
popa
int
jae
std
mov
mov
imul
out
cmpb
movsb
sub
rolb
mov
loop,pt
pop
mov
repnz
lods
push
xor
xor
ss
outsb
mov
jbe
or
adc
or
loop
outsb
pop
ljmp
call
enter
data16
mov
dec
mov
xchg
mov
test
mov
mov
bound
xor
lcall
insl
mov
andb
cld
inc
add
leave
lock
sti
aad
xor
add
shl
imul
mov
pop
popa
adc
xor
rclb
popf
or
outsb
ficoms
jmp
sub
fsts
jl
add
xor
out
add
popl
add
ret
xchg
test
add
add
clc
mov
shlb
pop
jo
sub
scas
cmp
fmull
mov
dec
mov
mov
and
pop
stc
cmpsl
loopne
filds
cmpsl
sub
inc
cwtl
jle
std
lret
data16
jno
ja
mov
pop
jnp
pusha
fwait
roll
out
jns
xchg
ret
dec
jmp
rcl
mov
mov
push
nop
jns
decb
sbb
dec
cmp
sub
mov
pop
adc
ljmp
out
pop
daa
ffree
pop
inc
sub
add
dec
add
lock
add
mov
add
add
jge
mov
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
sub
add
jo
add
jge
mov
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
jge
mov
add
add
or
add
and
add
xor
add
cmp
add
dec
or
cmpb
sbbb
adcb
add
jle
add
mov
add
xchg
or
xor
add
or
subb
add
jge
mov
add
add
add
add
add
add
cmp
addb
add
jge
mov
add
add
add
add
enter
push
add
addb
add
jge
mov
add
add
add
sbb
jmp
add
sub
add
addb
jmp
add
cwtl
add
sub
add
mov
add
enter
out
sldt
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
jge
mov
add
add
add
add
loopne
add
out
or
add
add
fadds
add
jge
mov
add
add
add
pop
add
jg
add
push
add
or
add
and
add
cmp
add
push
pop
add
push
jg
add
add
add
mov
add
add
add
add
sbb
sbbb
add
jge
mov
add
add
add
add
add
add
mov
add
add
add
jge
mov
add
add
add
add
add
add
rolb
add
add
add
mov
add
add
add
add
add
add
rolb
add
add
add
jge
mov
add
add
add
add
add
add
loopne
add
add
add
jge
mov
add
add
add
add
add
add
lock
add
add
add
jge
mov
add
add
add
add
add
add
add
add
add
add
jge
mov
add
add
add
add
add
add
adc
add
add
add
jge
mov
add
add
add
add
add
add
and
add
add
add
jge
mov
add
add
add
add
add
add
xor
add
add
add
jge
mov
add
add
add
add
add
add
inc
or
add
add
add
mov
add
add
add
add
add
add
push
or
add
add
add
mov
add
add
add
add
add
add
pusha
or
add
add
add
mov
add
add
add
add
add
add
jo
add
add
add
jge
mov
add
add
add
add
add
add
orb
add
add
add
mov
add
add
add
add
add
add
nop
or
add
add
add
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
add
jge
mov
add
add
add
add
add
add
rorb
add
add
add
mov
add
add
add
add
add
add
rorb
add
add
add
jge
mov
add
add
add
add
add
add
loopne
add
add
add
jge
mov
add
add
add
add
add
add
lock
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
jge
mov
add
add
add
add
add
add
adc
add
add
add
jge
mov
add
add
add
add
add
add
and
add
add
add
jge
mov
add
add
add
add
add
add
xor
add
add
add
jge
mov
add
add
add
add
add
add
inc
or
add
add
add
mov
add
add
add
add
add
add
push
or
add
add
add
mov
add
add
add
add
add
add
pusha
or
add
add
add
mov
add
add
add
add
add
add
jo
add
add
add
jge
mov
add
add
add
add
add
add
orb
add
add
add
mov
add
add
add
add
add
add
nop
or
add
add
add
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
add
jge
mov
add
add
add
add
add
add
rorb
add
add
add
mov
add
add
add
add
add
add
rorb
add
add
add
jge
mov
add
add
add
add
add
add
loopne
add
add
add
jge
mov
add
add
add
add
add
add
lock
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
jge
mov
add
add
add
add
add
add
adc
add
add
add
jge
mov
add
add
add
add
add
add
and
add
add
add
jge
mov
add
add
add
add
add
add
xor
add
add
add
jge
mov
add
add
add
add
add
add
inc
or
add
add
add
mov
add
add
add
add
add
add
push
or
add
add
add
mov
add
add
add
add
add
add
pusha
or
add
add
add
mov
add
add
add
add
add
add
jo
add
add
add
jge
mov
add
add
add
add
add
add
orb
add
add
add
mov
add
add
add
add
add
add
nop
or
add
add
add
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
add
jge
mov
add
add
add
add
add
add
rorb
add
add
add
mov
add
add
add
add
add
add
rorb
add
add
add
jge
mov
add
add
add
add
add
add
loopne
add
add
add
jge
mov
add
add
add
add
add
add
lock
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
jge
mov
add
add
add
add
add
add
adc
add
sub
or
xor
add
pusha
jge
add
add
xchg
jle
add
add
enter
xor
add
cld
orb
xor
add
xor
add
orl
xor
add
cwtl
test
add
add
add
or
in
add
dec
mov
add
add
add
or
rolb
add
in
mov
add
add
add
add
mov
add
pop
xchg
or
rolb
add
sub
or
rolb
add
cld
xchg
or
rolb
add
int3
xchg
or
call
add
add
add
add
or
add
add
add
mov
or
lods
add
add
add
add
add
or
jl
add
aam
or
mov
add
test
add
scas
or
faddl
add
enter
clc
add
add
mov
add
add
add
add
add
or
loopne
add
push
mov
add
add
add
loopne
or
sub
add
or
or
nop
add
add
add
mov
add
add
leave
or
test
add
fmul
or
and
add
cld
rorb
add
add
adc
or
in
add
hlt
rorb
add
add
or
aam
add
adc
or
mov
add
pushf
fmull
add
add
add
or
adc
add
jo
or
xchg
add
add
add
add
add
or
in
add
in
jmp
add
add
or
adc
add
adc
or
adc
add
sub
or
adc
add
cmp
or
adc
add
push
ljmp
fs
movsb
add
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
inc
add
inc
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
cmp
add
fidivl
cli
mov
es
rorb
inc
adc
and
sarb
mov
sub
and
cmp
outsl
cld
not
imul
pushf
sti
push
dec
lock
mov
jmp
aam
or
mov
pop
add
xchg
test
loope
inc
icebp
jecxz
ja
sub
data16
cmpb
mov
xchg
cmp
test
jb
jecxz
pusha
push
sub
mov
mov
ret
lds
sbb
fcomip
cmpsl
test
jne
adc
push
js
movb
repnz
mov
push
out
push
das
int3
mov
fs
pop
sar
testl
adc
jno
cli
lret
or
iret
inc
repnz
lret
loopne
pop
cmp
xor
hlt
aas
mov
jo
pop
aam
in
jmp
push
and
rcrb
sub
xchg
scas
jno
shll
test
repnz
adc
dec
cmpsb
fmuls
mov
xor
xor
mov
out
movsl
popa
stos
lods
adc
xor
mov
push
cmp
add
stos
movsb
jp
push
sahf
mov
inc
mov
cmpsb
cmc
cwtl
repz
test
fisubs
cwtl
or
xor
std
pop
xchg
cmp
aam
jl
pop
pusha
push
or
jl
mov
das
lods
xchg
and
lret
aaa
lcall
lods
cli
clc
shlb
imul
inc
sbb
adc
cmp
andl
adc
xchg
pop
xchg
outsl
out
xchg
outsb
xchg
fsubrp
lret
sub
dec
call
imul
inc
int3
lods
mov
sub
ret
cmp
cmp
pop
scas
adc
lret
cmp
push
adcl
mov
jns
fisubrl
repz
adc
into
movsl
xchg
out
mov
jl
je
sub
icebp
fld
repnz
inc
xor
cli
or
sarl
mov
sahf
push
sub
push
and
push
xchg
outsl
jg
xor
lds
sub
insb
lea
out
clc
jg
xchg
mov
inc
push
inc
and
or
xchg
push
js
mov
imul
xchg
fcompl
sbb
mov
lret
enter
ret
les
loop
xchg
jne
popa
stos
insb
fs
xor
test
push
fdivl
iret
rcrl
mov
xchg
or
cmp
repz
ret
mov
jne
addr16
repz
add
xchg
sub
or
cmpsl
imul
or
test
aad
scas
stos
xchg
sub
pushf
jns
cld
dec
xor
int3
scas
out
cmp
adc
mov
ss
or
jnp
and
jnp
jns
add
aaa
popf
frstor
inc
repz
xchg
rclb
insl
xchg
or
xchg
or
mov
testl
mov
sub
es
jnp
cmpsb
or
mov
jg
add
out
cs
in
cwtl
or
in
adcl
enter
mov
lcall
sbb
push
or
sub
rol
in
push
push
hlt
ja
fdiv
xchg
and
or
lret
shlb
push
ja
data16
arpl
sbb
stos
mov
and
add
fcomps
xor
mov
jmp
popl
imul
pop
daa
lret
mov
sub
loop
aas
or
pusha
push
hlt
sub
or
cmc
jl
popf
mov
js
imul
mov
mov
inc
push
pop
push
mov
and
clc
fistl
and
fstpt
add
pop
jne
loope
or
xor
ja
xor
pop
lds
bound
adc
es
std
add
sbb
push
mov
lds
sub
fstpt
inc
ja
dec
cld
pop
out
leave
mul
andb
sub
and
xor
aam
xor
push
nopl
ja
push
sbb
cmp
aad
mov
push
pop
cmpsb
mov
xchg
sbb
sub
dec
rorb
fistl
cmp
fsts
rolb
test
xor
mov
add
lret
sar
test
in
sarb
xlat
rcrl
imul
into
fiaddl
pop
fldl
inc
xchg
rorl
call
xor
and
jp
mulb
xchg
nop
jnp
mov
sbb
testb
and
mov
outsl
sbb
sbb
push
das
xor
jns
jg
pop
mov
ret
xor
rorb
push
xchg
dec
sub
int3
addr16
lahf
mov
lret
das
xchg
insl
lret
dec
mov
mov
cmp
add
inc
mov
stos
fisubrs
adc
popa
repnz
push
subl
mov
cmc
loop
add
cmc
push
cmp
lods
pop
or
pop
icebp
das
sbb
js
xor
add
xchg
rclb
sub
es
mov
xor
and
mov
fnstsw
push
movsb
pop
test
call
nop
movl
push
mov
pop
in
pushf
divl
cli
inc
jecxz
lahf
jbe
adc
xchg
aad
clc
out
aam
jp
mov
sbb
cmp
js
mov
ds
addr16
fsubrs
ds
in
movl
mov
jb
aam
rcll
mov
setns
out
call
jno
mov
jmp
or
mov
aad
mov
call
in
xchg
dec
loope
push
hlt
mov
lret
jae
adcb
aad
outsb
fstl
rcll
int3
mov
inc
pop
mov
xchg
push
mov
mov
mov
hlt
ficomps
cmp
lahf
push
cmp
fistpl
addr16
adc
in
movsl
insl
into
test
mov
mov
mov
mov
movsl
and
mov
jns
sbb
int3
or
fisubrs
xor
mov
negl
mov
loope
mov
pushf
ljmp
jmp
jnp
xor
dec
add
jbe
ljmp
jl
dec
xchg
xchg
fsubrs
mov
dec
xchg
add
and
movsb
mov
xchg
sub
push
mov
jnp
and
lret
or
js
sub
dec
mov
pop
clc
push
add
cs
movsb
popa
fmul
call
aas
mov
mov
mov
cmp
add
xlat
mov
mov
or
rclb
loopne
fdivrs
add
stos
popf
and
jmp
or
lcall
cmc
jae
and
mov
lods
sub
xchg
lret
jbe
lods
adc
in
push
int
fdivrs
ss
pop
sbb
add
andl
inc
cli
sahf
push
xchg
popf
pop
xchg
sahf
jae
out
mov
xchg
dec
cmp
lahf
les
cltd
std
test
fwait
jle
mov
mov
pop
jno
mov
xor
nop
xor
sbb
test
cwtl
ret
mov
loop
or
xor
xchg
fwait
push
push
cmp
mov
pop
push
mov
sbb
mov
movsl
fstp
dec
call
icebp
adc
fnsave
push
sub
int3
lods
decl
xor
sbb
mov
push
pop
adc
movsl
xchg
out
cld
sub
int3
popa
mov
push
inc
inc
push
mov
imul
xchg
sbb
jbe
push
lods
jp
sub
lods
jl
out
lds
dec
pop
mov
xchg
js
pop
movsl
cltd
sub
lods
mov
jmp
dec
cmp
cmp
or
daa
sti
push
rol
sbb
jbe
pop
push
iret
pusha
es
push
sbb
and
xlat
and
mov
mov
mov
inc
push
decl
xchg
mov
inc
mov
ffreep
push
popa
pop
out
shll
ljmp
xchg
loopne
pop
in
pop
loop
arpl
sub
xchg
adc
inc
leave
jns
pop
fldz
inc
ret
pop
jecxz
insb
or
xchg
outsl
mov
push
xchg
fisttps
aas
xchg
inc
in
adc
push
mov
dec
cwtl
jp
adc
fldenv
loopne
sahf
nop
push
fistps
mov
in
jnp
stos
outsl
or
test
mov
mov
leave
aad
les
das
sbb
scas
add
xor
imul
dec
addr16
mov
sahf
adc
cmpsl
nop
xchg
mov
out
popa
dec
repz
push
lods
add
sbb
push
icebp
inc
sbb
jge
lock
jl
inc
sub
ret
les
xchg
pop
cmc
adc
mov
xor
out
mov
mov
lea
dec
stc
fsub
inc
cmpsl
ja
pop
les
outsl
push
gs
lods
insb
adcl
mov
int3
mov
mov
into
jle
jmp
shlb
out
clc
sbb
mov
daa
adc
fsubl
sbb
jnp
mov
dec
xchg
roll
outsl
mov
cli
jle
insl
adc
int3
xchg
fdivs
xchg
mov
xchg
xchg
data16
sti
mov
bound
repz
jle
mov
pop
cmp
data16
mov
stos
mov
jmp
enter
andb
or
xor
js
je
stc
rorl
stc
push
jne
inc
jne
jg
inc
and
lock
dec
mov
int3
idivl
pop
pop
inc
in
mov
sbb
push
add
mov
inc
stos
cmc
mov
insl
xchg
add
mov
shlb
lea
inc
popf
imul
adc
popl
cmp
adc
add
pop
sbb
gs
lock
ja
mov
jae
adc
and
lcall
jp
push
mov
dec
gs
mov
and
sbb
or
fistpl
mov
scas
fcmovne
dec
sub
flds
leave
xchg
jno
sbb
iret
lret
ret
cwtd
pop
rclb
in
mov
jg
shl
movsl
popa
mov
fldcw
mov
adcl
fwait
scas
xchg
ss
std
pusha
and
push
cld
loope
orl
cmpsl
idiv
mov
ds
sub
xchg
sahf
mov
fsubl
ss
popf
sbb
xchg
popf
hlt
sub
int
int3
mov
fwait
cli
sbb
mov
jo
jmp
pop
xor
sbb
push
xchg
pop
cmp
fwait
insl
xchg
pop
cltd
mov
adc
inc
cmc
lcall
testl
pop
and
es
mov
cld
sub
push
inc
leave
cmp
ds
hlt
cmc
jp
mov
fsubr
sbb
out
add
outsl
cmp
jmp
ljmpw
dec
fidivrl
xchg
xchg
cmp
lcall
dec
lods
in
mov
fsubr
dec
cmpsb
les
loop
outsb
mov
dec
jo
outsb
test
lcall
xor
mov
jmp
jns
sbb
in
into
and
stos
mov
scas
test
jne
dec
clc
imul
pusha
dec
shll
inc
adc
lods
mov
sub
inc
dec
pusha
cmp
sub
popa
movsb
lock
test
mov
pop
bound
pop
xchg
cld
leave
sub
adc
jns
mov
dec
pop
fcomip
xor
imul
xor
data16
fcoml
cs
shrl
movsb
ds
push
out
pop
sbb
push
push
xor
mov
aam
add
xchg
lahf
jle
or
push
pop
dec
fwait
dec
jge
aam
mov
fisubrs
cli
mov
jne
insb
mov
cmpsb
divl
ret
xchg
fwait
mov
cmpsl
nop
push
sahf
xor
mov
fs
pop
in
das
pop
repz
std
imul
mov
andb
mov
scas
jmp
pusha
pop
xor
sub
xchg
shll
dec
push
rolb
cvtdq2ps
sbb
and
mov
popa
scas
cmp
mov
mov
dec
icebp
dec
sar
ljmp
clc
and
cmc
mov
or
leave
sub
xchg
rcl
sbb
loope
lods
insl
push
cmp
cld
jb
ret
out
inc
adc
clc
ret
xchg
in
jne
inc
jecxz
and
mov
add
pop
movsw
mov
ljmp
xchg
and
push
lret
mov
add
out
xchg
in
xchg
pop
call
je
insl
sbb
in
mov
jecxz
or
push
fbstp
arpl
inc
aas
sbb
push
pop
pop
fwait
sarb
and
push
adc
bound
cmpsb
icebp
push
test
inc
fs
jg
in
test
mov
jmpw
and
cmp
or
xchg
fstpt
movsw
pop
in
cld
fmull
and
push
stos
sub
fists
push
or
jge
aam
xchg
out
inc
out
cs
movsl
pop
mov
sbbb
push
add
pop
rcrb
or
inc
mov
cmpb
les
xor
push
jbe
pop
xor
imul
dec
clc
in
outsb
outsl
std
in
push
int3
dec
mov
sbb
je
mov
ds
xlat
repnz
imul
mov
jb
lret
iret
lret
inc
scas
addr16
nop
nop
dec
scas
lea
fildll
int
addb
lahf
test
push
sub
pop
xchg
loope
xor
daa
sub
out
imul
pop
sub
mov
mov
mov
out
fiadds
iret
stos
mov
jmp
gs
js
in
sahf
out
and
mov
lret
or
lret
cmp
mov
in
cli
scas
inc
loop
push
sahf
sbbl
inc
mov
inc
push
jbe
inc
mov
and
hlt
jns
mov
fimuls
sbb
cmp
push
cmpsb
xchg
int3
mov
inc
aad
pushf
xor
push
out
mov
nop
xor
popa
bnd
mov
pop
push
mov
rcrl
pushf
push
xchg
ret
out
addr16
cmp
repz
testb
pop
mov
fnstenv
sbb
jge
test
stc
mov
rorb
pop
dec
dec
movsb
pop
push
xor
pushf
mov
mov
sbb
or
or
lret
out
cmp
mov
inc
or
mov
adc
mov
sbb
xchg
mov
dec
stos
mov
mov
pop
xchg
idivl
lods
outsl
adc
into
fwait
das
je
addr16
mov
aam
das
movsl
add
or
jg
xchg
arpl
punpckhwd
inc
in
aad
pop
sti
add
dec
leave
arpl
movsb
out
xor
push
jbe
insb
dec
adc
pop
mov
jne
mov
idiv
xchg
mov
dec
cmp
push
sbb
pop
add
jg
sbb
fmul
jb
and
xchg
cmp
ljmp
mov
gs
inc
and
mov
mov
nop
push
add
insl
push
cmpsl
cmp
pop
fstp
push
push
add
and
xchg
pop
inc
fidivl
pop
xchg
ja
ret
push
add
arpl
out
cltd
mov
pop
xor
mov
xor
fld
xor
adc
lret
test
dec
fcoms
orl
fs
sbb
xor
inc
popa
loope
jae
cli
lcall
gs
testl
popl
xchg
jb
mov
ds
sbb
les
push
dec
xchg
pop
dec
adc
mov
adc
pop
cwtl
jns
lds
cmpsb
inc
push
movsl
inc
cli
loope
add
lret
pop
inc
sub
mov
js
push
pop
and
add
subl
scas
xchg
and
jg
outsb
mov
subb
stos
dec
and
mov
push
and
adc
push
sbb
sbb
xchg
in
addl
dec
add
dec
adc
in
dec
pop
jo
mov
sahf
jmp
fsubrl
fidivrs
add
aas
and
mov
js
inc
pop
mov
adc
out
jp
mov
test
lret
addr16
push
mov
lret
ds
shrl
xchg
ja
das
hlt
loop
jl
pop
sbb
imul
xchg
sbb
pop
xchg
adc
xor
nop
adc
lods
icebp
outsb
int3
sub
add
adcb
hlt
test
ljmp
push
cmp
adc
aam
ss
xchg
and
divb
mov
pop
add
nop
add
int3
cltd
push
dec
add
dec
lret
inc
lea
shll
dec
cmc
jle
fistpll
mov
rcrb
aad
fdivrs
mov
mov
adc
inc
add
mov
repnz
test
lods
ljmp
dec
ja
or
mov
or
dec
inc
out
jmp
jecxz
in
jmp
pop
aas
cmp
push
push
mov
add
pop
mov
jb
mov
pop
mov
or
je
pop
cmp
or
outsl
mov
adc
loopne
das
fldenv
jmp
adc
pop
dec
jne
daa
loope
cmc
dec
stos
pop
push
inc
je
imul
jmp
negb
push
xor
mov
sbb
fcmovnu
cwtl
gs
dec
rolb
inc
mov
push
aas
imul
pmulhw
stos
insl
movsb
in
mov
mov
push
and
sbb
outsb
testb
sbbb
shlb
pop
lods
adc
std
jecxz
mov
pop
sbb
out
pop
lahf
sbb
loopne
inc
cmp
outsb
lret
sub
aad
cmp
push
loop
bound
and
daa
pop
ljmp
ret
out
stc
mov
iret
mov
jne
mov
pop
add
std
mov
mov
rcl
decb
jb
scas
jle
push
cmc
into
xlat
mov
or
push
test
mov
cmp
xchg
repz
aas
mov
clc
mov
xor
lock
mov
push
hlt
pop
jle
andl
nop
push
ljmp
sbb
push
mov
enter
push
pop
pop
xor
pop
or
xor
cmpsl
movsb
jg
nop
xor
gs
lock
repnz
xchg
fcoml
ljmp
pop
mov
xchg
mov
sbb
mov
aaa
in
sub
xchg
addb
fmull
js
adc
roll
negl
inc
imull
dec
add
xchg
xchg
scas
jb
xorb
notl
push
mov
mov
xchg
in
adc
sub
sbb
dec
mov
fucomp
bnd
or
arpl
sub
inc
int3
std
cmpsl
push
pop
je
push
jbe
xchg
push
jnp
xor
dec
mov
insb
aas
or
fisubrs
sbb
add
fsubs
cld
addr16
push
add
cmp
inc
loop
sbb
mov
adc
push
add
in
nop
lret
mov
jno
sub
mov
loop
js
pop
xchg
icebp
adc
sub
out
push
pop
mov
out
jbe
jmp
loopne
pushf
push
enter
mov
and
cmp
xchg
and
add
loopne
jb,pt
add
mov
movsb
mov
ret
and
cld
movsl
push
std
ja
mulb
rorl
sub
jmp
push
mov
cmpsl
pop
rcr
or
insb
sbb
push
fisttps
lret
and
mov
mov
sbb
cmp
dec
mov
inc
mov
dec
dec
ljmp
shlb
xchg
popf
xchg
aas
mov
test
mov
mov
stos
pop
xor
cmp
jge
xlat
lret
mov
xchg
mov
cmp
subb
fimull
rcrl
jg
pop
loop
leave
cmpsl
push
push
shlb
xchg
sarl
adc
ret
xchg
mov
push
test
aaa
mov
mov
shrb
mov
movsb
sub
mov
repz
jle
fnstsw
inc
jmp
mov
push
jg
xchg
into
pop
lds
shll
push
xchg
dec
jno
scas
push
aaa
icebp
hlt
mov
imul
sbb
xor
std
insb
mov
insb
mov
lock
inc
jl
mov
fsubs
jnp
stos
ret
popa
rcrb
addb
popl
fxch
fsubp
mov
orb
movsb
jge
cmp
or
push
mov
and
jno
add
adc
push
dec
scas
cli
ja
xchg
jnp
cmp
xchg
cmp
das
ret
fmul
jl
pop
push
jge
push
mov
sub
ret
xlat
and
push
repnz
add
or
adc
xchg
inc
mov
aas
scas
rorb
mov
xor
xor
stc
push
adc
cmc
push
aas
inc
lahf
cmp
int3
pop
stc
mov
jg
ljmp
mov
ja
daa
lahf
jns
dec
push
push
xchg
popf
jl
pop
iret
out
dec
stos
mov
cld
or
push
testl
pop
sbb
mov
shrb
sbb
idivb
insb
push
inc
insl
mov
adcl
push
jmp
mov
or
push
aas
dec
xchg
push
lret
dec
cmp
mov
and
cmp
gs
insl
fcmovu
ljmp
lock
dec
dec
pop
xchg
das
mov
seto
jl
adc
into
xchg
pushf
xor
jae
mov
stos
xchg
cmp
inc
mov
mov
add
pop
push
xor
xor
mov
pop
mov
xchg
jne
stc
inc
cmp
mov
inc
subl
mov
loope
addr16
add
or
sbb
pushf
test
shrb
push
out
inc
jmp
push
push
jbe
mov
or
out
push
and
xchg
loopne
cld
lret
mov
xlat
cli
cwtl
or
js
sub
push
in
int
out
cltd
inc
in
call
les
sahf
add
pop
aam
fstpt
xchg
jno
imul
fs
xor
addl
adc
mov
dec
loope
rclb
clc
mov
adc
jb
sbb
test
cmpsl
pushf
bound
stc
push
push
sub
ljmp
mov
test
cmp
mov
pop
xchg
test
push
sti
aas
outsb
test
dec
test
push
test
insl
jp
aaa
stos
stc
lock
push
vpaddd
jle
mov
sbb
mov
sbb
out
cmc
cmpsl
sub
test
sub
xchg
mov
imul
fbld
imul
test
push
lret
mov
jp
dec
xchg
xor
call
mov
divb
outsl
mov
fildl
push
inc
lds
xlat
enter
push
outsb
push
add
and
out
lea
adc
sbb
lock
xor
je
bound
add
pop
add
sbb
mov
outsb
movsl
repnz
popf
pop
jle,pt
mov
xor
jnp
in
nop
jnp
lds
jg
gs
sbb
xor
in
jge
mov
push
jne
cmpsl
cli
pop
pushf
inc
xchg
ss
xor
in
pop
xchg
add
enter
int
in
fstl
mov
andl
into
sbb
and
pop
mov
xor
in
cmc
js
cmpsb
mov
nop
cmc
jae
shlb
ljmp
sbb
pop
mov
pop
popa
xor
pop
into
mov
xchg
lcall
stc
js
xchg
push
fidivrs
jns
or
rorb
repnz
xchg
insb
stc
push
orl
dec
push
push
inc
adc
mov
arpl
jmp
outsl
mov
std
fists
xor
mov
adc
divb
arpl
mov
out
mov
sarb
loopne
arpl
mov
jmp
and
xor
xchg
jno,pn
xchg
cwtl
dec
insl
xchg
jmp
jne
dec
mov
shlb
popf
xor
cmp
or
cmp
or
insl
mov
mov
call
xchg
push
sbb
and
sub
add
aas
mov
ret
pop
lret
push
jge
sbb
or
fmuls
inc
sub
xchg
bound
mov
fucomip
int
add
js
lcall
mov
jp
mov
pop
insb
notb
or
inc
xchg
push
mov
cwtl
jmp
pop
sbb
sbb
imul
pop
dec
and
add
daa
int3
jp
adc
mov
cli
mov
inc
inc
push
mov
es
mov
or
aas
sub
dec
lock
jno
inc
cld
lret
lret
sub
bound
mov
or
mov
shlb
adc
cmovns
inc
jb
push
push
dec
or
test
ja
cmpsb
arpl
sub
mov
jno
xchg
mov
mov
repnz
jp
out
fdivs
icebp
inc
hlt
fwait
sub
movsl
mov
dec
and
sub
xorb
fstl
cmp
mov
lods
or
dec
data16
gs
add
out
add
push
pop
mov
add
jge
insb
jmp
adc
addr16
mov
mov
jae
test
and
mov
ficompl
fisttps
cmc
dec
jg
jno
lods
daa
fbstp
cmpl
ret
fdivs
stos
adc
inc
mov
pop
xor
scas
push
mov
iret
movsl
lret
fsts
add
inc
mov
adc
mov
rcl
xor
sbb
jne
call
loopne
pop
xchg
jg
push
ret
sub
in
loop,pn
cmc
pusha
aaa
sub
xchg
cltd
xor
dec
inc
js
add
adc
outsl
adcb
mov
fucom
lcall
cmp
mov
pop
lcall
stos
and
push
jnp
xor
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
push
pop
pop
call
pop
add
and
pushf
movsl
mov
pop
sub
add
movswl
mov
mov
mov
xor
xor
call
or
add
addl
jle
sub
push
mov
pop
pop
xor
call
cs
pop
gs
dec
loope
hlt
sbb
add
add
movswl
pop
sub
mov
push
push
pop
pop
sub
jp
movzwl
dec
dec
add
dec
jne
call
xor
imul
jmp
xchg
sahf
jg
xchg
call
adc
in
add
push
dec
dec
outsl
jl
mov
pop
jmp
add
jne
dec
stos
pop
lret
mov
inc
cmpsl
mov
test
sahf
jp
mov
mov
lds
mov
scas
or
repnz
xor
xor
mov
aam
arpl
xchg
xor
inc
ja
mov
mov
lods
push
addl
mov
push
mov
mov
inc
xlat
shll
test
mov
mov
lock
push
imul
out
and
pop
lret
mov
inc
inc
rcrl
mov
sti
push
in
jecxz
and
add
lods
faddp
mov
push
shrl
jg
mov
ret
xchg
and
imul
nop
jbe
lds
mov
mov
adc
xchg
jbe
lds
nop
sar
icebp
in
and
js
cmp
js
and
cld
pop
or
and
mov
inc
fst
mov
or
mov
adc
js
mov
dec
push
or
inc
mov
sbb
or
dec
push
sub
enter
leave
xchg
dec
push
cmp
xchg
aam
loope
sub
fnstsw
loop
jmp
dec
lods
jmp
iret
lea
add
icebp
lods
pop
dec
popf
pop
fstpt
adc
xor
dec
xchg
push
push
xchg
push
inc
shll
out
add
sub
jae
or
mov
pop
push
out
xor
leave
cltd
cmp
jmp
pop
sub
or
mov
dec
push
or
je
js
call
xorl
jns
inc
mov
xchg
mulb
mov
lahf
into
aas
loop
xchg
sbb
jae,pn
pop
or
xchg
push
push
dec
movsl
icebp
pop
inc
dec
cmc
scas
cld
xchg
out
inc
jg
or
adc
hlt
push
repz
into
aas
pushw
mov
lret
outsw
lahf
into
aas
sti
xor
push
xor
lcall
sub
popf
cmp
repnz
cmc
fsubl
mov
jb
xor
mov
div
jle
fidivrs
jbe
out
into
addr16
lahf
into
aas
scas
stc
inc
std
or
fbld
adc
cmc
bound
cltd
sub
lret
lahf
into
aas
int3
and
pop
mov
jmp
xor
popa
cmc
aas
data16
push
mov
jnp
jmp
mov
mov
or
in
cmp
cli
cmc
add
xor
sbb
lea
test
ficoml
mov
inc
arpl
cli
lea
push
fisubs
push
pop
ljmp
fldenv
mov
pop
cli
lea
pop
sahf
mov
adcl
lea
fs
inc
or
movsl
out
sbb
lea
adc
push
lahf
push
into
mov
adc
incl
std
jmp
xchg
cli
lods
push
sub
jne
jp
mov
mov
cmp
addl
lea
adc
mov
adc
dec
cli
lea
mov
leave
adcl
cs
sbb
lea
adc
pushf
adc
and
cli
std
adcl
push
imul
lea
adc
mov
adcl
dec
sar
cli
lea
jg
mov
push
cli
inc
aas
repz
in
adc
in
jle
mov
lea
fidivl
lea
pushf
adc
adcl
or
adc
fwait
sbb
lea
xchg
popf
rcrl
pushf
std
sahf
inc
into
sti
xchg
push
stos
mov
or
pop
movsb
adc
mov
sti
cli
lea
adc
push
xor
jae
pushf
pop
lret
xor
push
pushf
adc
adcl
or
push
cli
inc
push
push
fldlg2
push
enter
xchg
inc
aas
repz
in
xchg
jle
pop
decb
or
add
xchg
ja
and
push
sub
cmpl
adcl
mov
adc
negb
in
negl
insb
mov
pop
add
pop
add
icebp
enter
inc
jns
in
push
out
mov
sub
movsb
sbb
mov
inc
jns
in
xchg
fwait
test
mov
sub
movsb
mov
imul
iret
in
push
clc
mov
mov
incl
fsub
mov
cmp
xor
sub
sbb
push
cli
lea
iret
in
push
clc
mov
mov
incl
fsub
mov
gs
push
push
fs
cli
lea
iret
in
push
clc
mov
mov
incl
fsub
mov
cltd
mov
adc
adcb
add
pop
mov
imul
cli
lea
sub
jne
in
andb
in
push
clc
mov
adcl
nop
push
cli
fistl
mov
adc
fwait
xchg
ret
cmp
xchg
mov
push
pop
clc
fldenv
jge
adcl
push
out
mov
xchg
mov
and
out
sub
mov
adcl
lea
fstpl
mov
adc
daa
sbb
xlat
lock
fildl
adc
lea
adc
ret
pop
std
lea
push
cli
jle
cld
decb
fists
lea
sbb
rolb
fcoms
lea
ret
lods
popf
mov
xchg
loopne
lea
stos
in
stos
insb
decl
sbb
movsb
jle
lcall
cmp
adcl
std
add
lods
inc
xchg
sbb
lret
jbe
push
pop
sahf
push
into
mov
inc
or
lods
loop
les
sbb
lret
cmp
sbbb
jne
cmc
repnz
pop
dec
rcl
xor
push
in
mov
adcl
lea
adc
lea
adc
lea
adc
cmc
sbb
in
insl
add
loopne
clc
cli
lea
cli
lea
adc
mov
dec
repz
and
adcl
andl
adcl
lea
adc
lea
mov
mov
jmp
nop
cld
adc
and
sub
icebp
loope
mov
shlb
cltd
fistpl
es
dec
imul
ja
adc
mov
dec
stos
call
and
pop
mov
add
xchg
pop
xor
arpl
je
push
lds
push
cwtl
pusha
nop
inc
or
xchg
in
stos
test
cwtl
movsl
cmp
jne
add
fcmovu
ds
rol
sub
pop
stc
dec
cmpsb
pop
stos
das
cmp
add
lock
ret
mov
fxch
adc
loop
jns
mov
data16
cmp
fnstcw
jb
ja
mov
jge
fidivrl
xor
rclb
mov
ret
mov
test
push
mov
arpl
or
stos
cmp
loope
es
inc
mov
cmp
ja
daa
and
imul
pop
pop
mov
in
dec
stos
cmp
bound
jb
shl
sub
bound
inc
jp
dec
inc
add
incb
inc
adc
mov
push
and
adc
xor
fisttps
ljmp
and
add
mov
sub
faddl
mov
fisttps
aad
inc
push
out
aas
movsb
popa
pop
arpl
sub
sub
sbb
lret
dec
cwtl
pop
cmp
and
fdivl
pop
lea
js
call
cld
mov
mov
pushf
inc
or
and
test
fimull
cmc
inc
les
sbb
or
nop
xor
pop
test
sbb
fnstenv
sbb
push
mov
jno
pop
xor
cmp
dec
sub
sub
jo
fcmovbe
sub
mov
jg
dec
movsb
icebp
cmc
addl
lea
into
ds
mov
call
mov
arpl
aam
jne
fucomip
lahf
push
arpl
fadd
in
push
sbb
pop
es
jno
movsb
js
and
jno
dec
mov
lea
mov
scas
out
jnp
jno
mov
mov
add
inc
sub
mov
mov
sub
add
or
sub
xor
adc
pop
sub
loope
testb
subl
jle
lahf
jnp
cmp
sub
add
adc
imul
in
adc
dec
repz
pop
stos
jl
push
or
data16
imul
mov
jge
ljmp
xor
mov
or
std
lock
aaa
mov
mov
and
add
add
add
mov
dec
add
lock
add
mov
add
cld
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
or
hlt
sti
or
cmp
or
dec
decl
add
or
push
decl
add
add
or
popa
decb
add
or
outsb
decb
add
or
jbe
or
ja
or
cmp
add
or
mov
or
xchg
or
xchg
decb
add
add
add
or
mov
or
lahf
decl
add
decl
add
decb
add
add
add
decb
add
add
add
decb
add
add
add
decb
add
decl
add
decb
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
or
decl
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
outsl
arpl
xor
fs
insb
add
je
jo
xor
cs
insb
add
jbe
ja
xor
fs
insb
add
imul
fs
insb
add
insb
insl
outsl
outsb
cs
insb
add
xor
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
sbb
or
add
add
sub
or
add
add
cmp
or
add
add
dec
add
add
add
pop
add
add
add
imul
add
add
add
or
add
add
popl
or
add
add
movsl
add
add
add
mov
add
add
add
add
add
loopne
or
add
add
lock
add
add
or
or
add
add
adc
add
add
add
add
add
sub
add
add
or
add
add
pop
add
add
add
push
or
add
add
jl
or
add
add
xchg
add
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
gs
gs
jae
jb
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
js
arpl
gs
add
add
je
jb
gs
gs
fs
imul
popa
jb
push
gs
imul
ja
jbe
dec
outsb
push
outsb
jo
gs
jb
dec
gs
fs
add
push
push
inc
inc
insb
gs
outsb
jne
add
add
je
imul
jb
ja
imul
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
gs
outsl
jae
outsb
popa
insl
add
add
je
arpl
imul
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
and
add
add
or
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
test
mov
add
add
add
dec
add
in
repz
dec
push
add
cwtl
test
add
cmpsl
cmpsl
add
mov
add
incb
gs
add
stc
mov
mov
ret
add
xchg
mov
popl
add
xchg
mov
ret
add
mov
add
rolb
jno
add
in
jge
xlat
xchg
test
aad
xchg
pop
cmp
addr16
add
push
sub
test
xchg
addl
xchg
mov
lds
pop
add
ljmp
rorl
nop
add
movsl
cltd
add
in
add
insb
push
add
mov
jmp
push
daa
add
pop
add
and
mov
xchg
jl
in
stos
xchg
add
das
add
les
add
add
xchg
sub
push
xor
add
les
add
add
in
add
lock
pushf
inc
pop
add
movsl
mov
clc
mov
add
mov
add
sarb
add
sarl
add
rol
add
out
call
add
lods
test
repz
scas
add
lret
mov
test
add
lret
stc
int
add
loopne
add
std
cld
add
lea
mov
je
add
mov
std
leave
lods
add
ret
stos
add
ret
add
loope
add
les
add
test
jmp
mov
add
mov
add
rol
add
jmp
add
mov
mov
add
fmulp
add
fadd
add
repz
cld
cli
add
cmpb
xchg
add
xor
add
out
add
call
fiaddl
jmp
add
in
loope
clc
call
in
push
call
add
aaa
add
mov
scas
add
cmpsl
add
shlb
add
ret
cli
aam
add
aad
add
aam
add
aad
add
aad
add
aam
add
xlat
mov
add
fnstcw
add
loope
add
loope
add
jecxz
add
in
add
in
add
out
add
bnd
add
cli
testb
cmp
add
lcall
fdivl
mov
add
int
add
mov
cli
xlat
mov
add
shlb
lock
add
faddp
add
fadd
add
add
fmulp
add
hlt
jmp
std
repz
pop
inc
add
imul
mov
xchg
cmpsl
mov
mul
lret
add
out
add
in
fiadds
std
cmc
in
add
lret
lahf
add
pushf
addb
call
flds
imulb
fs
into
cltd
add
shll
add
stc
repz
mov
ja
dec
xchg
call
lea
rclb
add
cld
testl
cld
out
add
dec
add
push
add
incb
aas
inc
sbb
inc
dec
and
pop
insb
inc
add
xor
jns
popa
add
and
mov
lahf
and
inc
mov
add
jb
sbb
add
push
add
je
mov
mov
div
testl
daa
lock
fwait
test
add
mov
add
xchg
scas
add
stc
add
push
push
add
mov
inc
inc
dec
add
cmp
add
in
cltd
mov
incb
scas
mov
add
xor
mov
mov
cmpsb
test
add
xchg
lret
int3
clc
add
in
stc
add
std
std
add
cli
cli
add
repz
in
in
add
data16
add
add
incb
add
add
add
add
sub
and
adc
pop
adc
adc
adc
adc
adc
adc
adc
incb
add
add
add
add
push
push
pop
pop
pop
pop
push
push
push
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcll
add
add
pop
outsl
mov
addb
mov
test
incb
add
add
add
add
pushf
je
jg
scas
mov
mov
sbbl
test
add
add
add
jmp
xor
lcall
mov
dec
sbb
add
stos
push
je
arpl
in
in
jmp
mov
lahf
mov
sbb
add
pop
xor
in
out
loope
aaa
xor
sbbl
sbb
stos
cmp
inc
sbb
aas
popa
outsl
in
loope
jmp
mov
andl
add
aaa
jb
xor
add
jp
jecxz
loop
aaa
lcall
lea
incb
add
add
add
cltd
cltd
lret
int3
push
jecxz
out
xor
mov
incb
add
add
scas
dec
jns
cmp
call
popf
mov
sbb
cmp
fs
scas
jnp
pop
sbb
ret
inc
dec
ds
mov
mov
sbb
inc
dec
push
nop
jns
cmp
inc
xor
xchg
insl
push
inc
and
call
mov
sbb
inc
dec
ds
addr16
pop
cmp
daa
out
add
test
dec
sbb
xor
inc
inc
push
fs
nopl
pop
nopl
call
test
nop
dec
sbb
in
or
push
ss
cmp
cmp
push
pop
daa
inc
sbb
fcom
jg
cmpsb
nop
xchg
nop
dec
sbb
in
pop
inc
inc
push
aas
dec
pop
pop
cmp
dec
push
ds
sbb
mov
xchg
xchg
xchg
dec
sbb
in
add
dec
inc
inc
inc
jae
inc
mov
and
fnstenv
mov
mov
xchg
xchg
dec
sbb
in
repnz
andl
imul
sub
xor
xchg
dec
sbb
in
repnz
ret
jo
jo
ja
pop
push
pop
adc
aam
cmpsl
mov
jbe
xchg
dec
sbb
in
repz
push
iret
iret
les
push
xor
fstp
xor
xchg
dec
sbb
push
repz
repz
clc
stc
int3
lret
lret
inc
outsb
mov
lcall
xchg
xchg
dec
adc
add
out
out
out
repz
testb
sub
push
popa
mov
mov
js
mov
adc
add
add
add
imul
lock
out
cmc
xlat
xlat
lcall
js
or
adc
add
add
add
push
or
div
out
rcrl
outsl
mov
jp
mov
incb
add
add
add
add
or
gs
and
lods
jge
jl
fs
arpl
add
cli
push
jno
cltd
cltd
les
mov
jl
mov
enter
jno
cltd
cltd
les
mov
ret
incb
add
enter
sti
cld
cld
std
std
std
std
loopne
loopne
ret
enter
rol
mov
xchg
add
add
add
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
fadds
add
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
jae
and
negb
bound
mov
pop
fistps
lret
mov
in
cmp
ret
insb
xor
jge
fnstcw
dec
cmp
fwait
and
cmp
mov
rclb
xchg
fnstenv
and
jae
popa
xchg
mov
test
jnp
sbb
pop
icebp
and
data16
mov
inc
sbb
xchg
lods
jne
into
imul
inc
shll
push
jb
mov
xchg
lahf
cmp
lds
push
adc
xchg
or
add
jnp
lds
scas
jno
popa
daa
cmp
divl
lds
mov
push
push
adc
add
dec
mov
mov
lret
sahf
fwait
cld
adc
out
orb
jmp
mov
addr16
push
notl
and
rolb
jecxz
or
clc
dec
push
sub
xchg
das
cli
adc
pop
pop
mov
out
xor
adc
pop
lcall
xor
mov
sti
sub
or
mov
inc
mov
xor
push
repz
jle
sub
inc
sbb
mov
mov
int
sti
push
in
adc
out
mov
dec
or
push
fst
repnz
je
cli
add
movl
nop
pop
or
pop
aas
outsl
cmp
sahf
shl
bnd
imul
dec
fwait
jo
loopne
insl
push
pmullw
and
jbe
adcl
push
push
cs
jmp
imul
lea
lcall
es
cld
rcrb
fbstp
cmp
xchg
add
scas
pop
lahf
adc
je
lcall
stc
sahf
lods
mov
adc
fsubrl
test
xor
das
inc
lea
pop
xorl
dec
push
mov
in
adc
adc
stc
push
pop
cltd
xor
cltd
inc
sbb
popa
orl
fsubrs
nop
push
lds
test
and
call
inc
add
test
adc
push
fs
push
sbb
fsubrs
cmp
hlt
push
pop
jne
lret
scas
push
mov
xchg
sbb
mov
dec
jae
popa
imul
icebp
stos
aad
and
std
dec
jb
jns
xchg
stos
in
xor
mov
loopne
xchg
and
mov
repnz
mov
ljmp
and
or
add
jbe
jge
fwait
test
loope
stos
inc
push
out
adc
int
pushf
fcmovnbe
and
inc
mov
push
in
test
lods
xchg
ds
stc
and
jb
cltd
push
sahf
xchg
icebp
mov
pop
mov
inc
cmp
sub
cli
dec
mov
stc
jne
jns
push
lock
inc
sti
sub
xor
add
sbb
jo
and
ret
pop
mov
sbb
sbb
xor
mov
mov
repz
jl
dec
pusha
imul
xor
outsb
roll
icebp
inc
pop
scas
xor
pop
xor
fcmovne
dec
call
subl
cltd
loope
stc
jecxz
pop
adc
call
or
jnp
adc
lret
mov
push
call
xchg
mov
inc
or
sub
lods
cli
popa
add
sbb
push
cmp
xchg
sar
fiadds
fdivl
lret
lods
push
xchg
xchg
idivb
gs
in
enter
lock
loope
add
pop
jmp
add
or
sbb
xchg
popl
jnp
jge
rolb
xchg
jbe
mov
push
cld
hlt
mov
cmp
push
fadd
std
xchg
dec
xchg
mov
mov
and
shr
xchg
pop
add
sbb
testb
push
jno
sub
shlb
inc
ss
mov
mov
sub
hlt
je
lcall
jmp
aam
add
mov
pop
mov
sub
stc
xchg
jecxz
add
movl
movsl
sahf
mov
scas
cli
icebp
std
fwait
and
pop
inc
push
cmpsb
cli
insb
fildl
or
mov
sub
jae
dec
adc
pop
addb
rcrl
cmpsb
into
and
adc
xchg
pop
es
sub
jo
lahf
cli
xor
in
cld
xor
cwtl
es
mov
and
inc
cld
add
sbb
inc
jo
inc
pop
sbb
and
outsl
imull
loop
cmc
jnp
dec
stc
loop
out
dec
dec
jmp
jg
outsb
fwait
nop
aad
and
cmpl
pop
sbb
pop
ds
repnz
xchg
push
fcompl
xchg
test
adc
sbb
sbb
arpl
lods
add
push
cmp
test
push
repnz
outsb
lret
roll
jg
outsb
dec
lret
add
inc
je
inc
lahf
pushf
sar
fiaddl
cmp
mov
mov
rcll
jp
aas
push
arpl
ficoml
dec
sahf
scas
mov
fsub
ret
sbb
mov
ja
fcoml
shlb
mov
hlt
add
arpl
outsb
mov
adc
jecxz
ret
add
push
jg
lea
push
ss
or
jp
std
daa
movsb
nop
das
lcall
cmp
pop
int
dec
sub
js
jmp
mov
dec
je
repnz
in
jl
clc
cwtl
pop
bnd
sub
dec
xchg
int3
push
pop
out
fstl
std
push
pop
ja
push
and
into
push
sub
jmp
adcl
movsb
aad
adc
mov
int
jno
jns
test
pusha
add
cmp
push
inc
out
hlt
and
sub
mov
sbb
adc
push
cmp
sub
movsb
jle
roll
or
xchg
xor
fistpl
mov
inc
cld
pop
je,pt
xchg
dec
mov
mov
push
shrl
jb
dec
outsl
rorl
mov
cmp
mov
xlat
insl
mov
jno
testl
xchg
pop
add
mov
das
and
je
jnp
hlt
repz
sbb
or
aaa
add
aas
js
sar
xor
fstpl
ret
sub
cmp
sarb
hlt
or
add
je
cmp
inc
jae
shll
cmpsl
jno
pusha
stc
sarb
sbb
xchg
imul
push
or
mov
test
es
inc
inc
sarb
cli
outsb
dec
add
xchg
mov
xorl
cmp
decl
mov
jle
sub
and
add
and
xchg
popa
bound
add
adc
mulb
mov
lcall
push
js
fisubs
mov
mov
adc
es
hlt
jae
popf
jno
lock
xchg
cmp
ret
test
repz
pop
mov
and
sub
ds
sbb
lcall
fnstenv
mov
pop
shrl
mov
sub
lods
sub
out
adc
hlt
and
jae
or
ja
test
mov
ffree
je
mov
fidivrs
in
ljmp
adc
mov
enter
xlat
cmp
sbb
in
add
or
push
push
popf
and
cmp
pop
jns
rolb
adc
xchg
fiadds
sub
mov
inc
insl
shll
mov
mov
in
out
mov
dec
mov
pop
sub
mov
ret
hlt
cs
push
inc
sarl
in
sbb
push
fldlg2
pop
lock
leave
fildll
lahf
cmp
out
mov
cltd
jg
rcrl
mov
cld
pop
sbb
adc
mov
add
adc
add
roll
out
hlt
adc
loop
pop
sbb
out
cmpb
cs
mov
cmpsl
sbb
popa
outsb
pushf
or
outsb
adc
and
test
mov
jns
jnp
pop
sbb
stos
sub
adc
pusha
inc
adc
or
adc
and
adc
outsb
xchg
jbe
mov
rcrb
fstl
push
xor
arpl
jae
rolb
add
out
cmp
jmp
jno
dec
lahf
pop
push
lods
out
sbb
jnp
scas
stos
mov
mov
outsb
jne
addl
jp
or
lcall
sahf
inc
fsubp
push
inc
sbb
clc
outsb
xchg
mov
aam
cmp
mov
cmp
mov
insb
mov
rol
sub
jno
xchg
loope
gs
mov
lods
ljmp
cmp
cmc
sub
lret
cmpsb
in
xchg
jp
out
ljmp
cmp
mov
adc
in
xchg
jnp
mov
and
mov
sub
inc
cmpb
repz
sbb
call
xorb
mov
pop
cmp
lret
jno
sub
lahf
addb
push
ljmp
test
jne
push
pop
scas
cmp
dec
lret
stos
mov
push
pop
testb
lahf
inc
cld
insl
cli
sub
or
movsl
mov
or
or
popa
data16
mov
sbb
jbe
test
aaa
mov
mov
and
xchg
jl
jle
movswl
inc
sub
fwait
inc
jmp
out
mov
dec
adc
leave
in
cmp
xchg
adc
sub
pop
dec
inc
rclb
in
or
out
stc
movsb
sti
mov
inc
mov
sub
lods
test
dec
fcmovnbe
dec
lret
mov
adc
enter
call
mov
imul
iret
lcall
clc
xor
fistps
fstl
pop
adc
mov
negb
mov
mov
addr16
dec
dec
mov
cs
lret
lcall
pop
data16
das
sub
fcomps
cmpsl
in
int
mov
xchg
and
dec
xor
in
mov
scas
xchg
add
orl
push
mov
push
hlt
int3
gs
not
lods
mov
add
loop
test
mov
xor
sti
sti
fwait
jne
mov
adc
mov
mov
clc
sbb
test
lds
int3
jmp
shr
mov
mov
or
loope
dec
dec
lret
xor
imul
loope
xor
cltd
and
mov
and
lds
pushf
js
or
ret
adc
dec
fisttpl
shrb
andl
iret
aam
cmp
xchg
ret
outsl
sbbb
rcl
mov
repz
mov
stos
popf
and
es
cmp
into
sub
sbb
rcrl
or
fwait
jp
outsl
adc
pop
ret
icebp
pop
pusha
aas
mov
jno
inc
mov
pop
mov
in
push
dec
outsl
push
sbb
ret
stos
jno
dec
in
loop
in
sahf
xchg
jge
dec
pop
pop
adc
les
push
lods
add
lods
push
sbb
sti
aaa
sahf
sti
xor
lahf
test
daa
js
xchg
jo
das
adc
xchg
lea
lock
inc
sahf
lahf
shrb
push
adc
push
in
push
push
sub
inc
fsubs
xor
dec
mov
sbb
out
xchg
fildll
clc
mov
cmpsl
outsl
cmp
push
mov
jbe
and
into
int3
movsb
mov
insl
pop
cmp
in
mov
cld
adc
test
push
aas
loope
xlat
imul
scas
ljmp
xchg
sbb
test
pop
and
mov
sbb
lahf
add
adc
push
adc
push
stos
lock
sub
fildl
push
mov
ret
xor
push
adc
int3
clc
movsl
pop
movsl
shll
adc
loopne
xchg
jns
pop
pop
dec
inc
mov
lahf
or
test
xchg
xor
icebp
mov
insl
aas
xchg
ret
push
orl
mov
mov
scas
sbb
inc
jo
cs
faddl
pop
inc
clc
jno
pop
lds
es
adc
xorb
mov
or
insb
jae
cmp
loop
push
popf
dec
decl
cmp
rcr
mov
rcrl
mov
popa
adc
mov
lret
jo
xchg
mov
or
dec
and
cmpsl
jg
push
add
mov
cmp
loope
mov
inc
cmp
pop
mov
pop
arpl
ja
cmp
jns
sub
jnp
pop
jge
shll
push
or
jo
sub
sub
and
or
jb
seto
add
xchg
xor
pop
mov
dec
es
mov
icebp
cmpsl
cmc
into
imul
mov
add
pop
sbb
adc
dec
mov
push
dec
inc
cmpsl
aas
nop
pop
sub
mov
adc
imul
jp
js
sarb
popf
decl
cli
jge
inc
je
push
sub
sub
jp
jge
push
jno
xor
adc
jg
xchg
and
int3
mov
adc
and
out
fcomp
sbb
and
insl
jg
push
stc
mov
lret
movsb
mov
xchg
inc
test
mov
lods
or
shrd
xor
and
adcl
mov
pop
jmp
enter
cwtl
sbbl
mov
mov
add
movsb
js
sub
push
addr16
jo
mov
adc
pop
xor
pop
mov
pop
js
xor
mov
xor
jl
cmp
popf
leave
popf
dec
std
jbe
idivb
and
add
mov
sbb
sub
cmp
xlat
cltd
cwtl
xchg
and
xchg
lea
push
cs
aaa
pop
sbbb
jbe
dec
and
sti
test
xchg
adc
adc
and
je
ja
or
xlat
out
xor
movsb
jno
inc
push
outsl
dec
popf
sub
dec
fmuls
into
lret
cmc
push
ficoml
cmp
jmp
jecxz
push
aas
jbe
hlt
nop
outsb
xchg
mov
cmpsb
mov
mulb
lcall
adcl
mov
push
xchg
in
sbb
outsb
sub
fnstsw
push
pop
xchg
jmp
add
ja
inc
jl
inc
add
xchg
sub
ret
insl
lret
vhaddpd
iret
push
cmpsb
arpl
mov
adc
repnz
ret
lret
fbstp
mov
mov
xor
outsl
jne
xchg
cli
fs
push
cld
mov
popf
lret
fcomi
cmc
pop
dec
and
sbb
imul
mov
lods
js
insb
inc
mov
je
jecxz
cmpsb
data16
fdivrl
cmpsb
jns
fcmovnbe
pop
push
xchg
mov
adc
aas
mov
negb
xchg
sahf
mov
scas
cmp
cmp
jl
add
popa
stos
mov
push
loop
adcl
pop
xchg
popa
ficompl
fucom
mov
ss
in
sub
enter
mov
mov
pop
fwait
rorb
loopne
cli
push
mov
stos
sub
mov
mov
arpl
pop
repz
pop
ljmp
dec
mov
push
pop
mov
lock
cmp
aas
dec
mov
lea
cltd
lods
push
jp,pn
rol
ja
mov
clc
mov
mov
add
jbe
ja
jp
xchg
fsts
in
int
mov
fdivrl
out
push
jl
mov
fistpl
in
mov
pop
push
lds
push
push
add
or
inc
adc
or
ficompl
cltd
stos
es
jle
movb
mov
mov
jne
out
pop
or
scas
jp
or
fwait
enter
cmp
es
das
mov
dec
arpl
or
dec
jb
dec
call
sub
mov
nop
sbb
jb
movsl
out
and
sbb
daa
fwait
jae
das
popf
in
aaa
fidivrl
jg
test
cld
mov
roll
pop
fcmovbe
mov
jns
sahf
daa
inc
cltd
lea
push
lea
xchg
pushf
je
mov
adc
sub
data16
cld
repnz
dec
je
jl
xor
mov
adc
or
es
dec
xor
jl
dec
mov
push
sti
hlt
add
outsl
icebp
cli
jmp
and
das
push
or
cs
mov
mov
sub
loope
xchg
add
inc
cmc
int
fsubl
iret
repz
ret
imul
fimull
cwtl
test
or
adc
xor
std
mov
fiadds
add
xlat
ret
jmp
dec
jge
push
push
add
sub
ret
das
enter
lret
cmpsl
mov
xchg
scas
repnz
lods
or
dec
xchg
cmp
mov
mov
pushf
sbb
add
mov
ss
xchg
pop
mov
xor
cmp
dec
in
add
out
into
inc
dec
inc
or
xchg
fldl
movsl
das
lods
jne
mov
add
xor
add
scas
xorb
mov
stc
fisubl
pop
sbb
mov
pushf
lret
mov
cmp
push
aaa
sbb
xor
aad
add
jnp
jno
andl
mov
rclb
std
jl
jno
stos
xchg
sbb
xor
jb
xchg
mov
icebp
xchg
and
loop
leave
mov
sti
or
and
stos
jb
jmp
sbb
add
push
lcall
and
sub
sub
lret
test
enter
dec
sbb
xchg
dec
stos
xor
popf
iret
lds
call
sbb
xchg
fmull
sahf
loop
pop
xor
xchg
fidivl
mov
or
jnp
xchg
push
jmp
lret
cmpsl
insb
test
sti
lods
aaa
xchg
adc
into
and
shll
mov
in
mov
mov
rorl
xor
rorl
popf
push
push
xchg
arpl
cld
fldl
in
inc
push
das
push
sub
cli
adcl
mov
repz
jg
call
cmp
sahf
shll
arpl
mov
xchg
notb
mov
inc
sub
sub
rcll
shrb
inc
es
scas
lahf
jecxz
popa
push
adc
dec
dec
ljmp
ret
gs
enter
sbb
rclb
pushf
fucom
into
loop
inc
pop
xor
stc
inc
clc
nop
test
inc
cld
xchg
in
lock
add
push
cmp
movsb
adc
shl
push
sbb
repz
shlb
mov
adc
clc
int3
dec
hlt
ljmpw
pop
add
dec
inc
rcrb
cmp
jne
call
jle
ret
dec
inc
shlb
pusha
mov
and
jg
outsl
dec
stc
xor
pop
int
push
xor
xor
lock
je
fildl
xchg
inc
jg
aad
addl
pop
mov
sbb
jns
pop
pop
aas
mov
addb
inc
and
jle
sbb
push
pop
cmpsl
jbe,pn
xor
cmc
jl
fiaddl
inc
shrl
sub
ljmp
inc
jns
mov
or
mov
inc
rcrb
in
add
cwtl
pop
xor
push
jno
jg
mov
pop
cmp
in
sub
das
dec
and
mov
sub
rorl
and
dec
out
rcr
subb
setge
push
decl
xchg
xchg
or
rol
movsb
aam
insb
fldt
loop
and
gs
insb
test
add
mov
loopne
loop
movsb
imul
push
call
xor
lock
dec
ficoms
cmpsl
neg
cmc
rol
adc
pushf
adc
pop
cli
push
cwtl
sbb
dec
pop
out
or
xor
insb
push
ret
leave
popa
xchg
jns
sub
into
xchg
xor
push
inc
inc
jecxz
inc
ret
xchg
hlt
jnp
cwtl
bound
adc
out
jp
ljmp
cmc
mov
mov
addr16
pop
les
arpl
pushf
cmovbe
test
sbb
dec
pop
or
sub
or
mov
mov
nop
push
add
jmp
jmp
movb
lea
es
add
xchg
xor
subps
pop
cmp
and
fadds
or
adc
je
cmp
jnp
shl
push
sub
jmp
and
push
mov
cmp
inc
mov
push
push
fstpt
daa
dec
hlt
pop
sub
cmc
jl
inc
cs
mov
pushf
sbb
jmp
ret
cmp
fisubrs
out
push
in
push
fldcw
loope
pop
sub
mov
jge
xor
jl
mov
sub
call
andb
into
aad
jo
sbb
jg
aad
fs
pop
jmp
mov
mov
jmp
cwtl
push
mov
test
or
sub
sub
ds
and
ds
ret
out
lods
mov
inc
adc
in
lock
sbb
add
rclb
rol
xchg
daa
mov
adc
test
pop
pop
mov
mov
std
outsl
sbb
push
push
jb
shrb
sub
cwtl
cmpsl
mov
rcr
xchg
lret
movups
fwait
lahf
xchg
xlat
repnz
addr16
pop
cmp
jmp
mov
push
lea
add
outsl
xorb
out
loopne
xor
cmc
loop
mov
jg
lret
jns
rcl
xchg
dec
es
jg
cmp
cmp
fdivrl
daa
xchg
pop
lret
and
add
stos
fcompl
out
adc
es
add
stc
fmull
mov
xorl
lahf
iret
test
add
in
jb
in
cld
sub
hlt
ss
mov
sub
shlb
or
cmp
aam
movsl
or
cmpsb
jne
jl
mov
imul
aaa
neg
mov
lds
lcall
mov
push
loopne
insl
pop
fs
push
push
xchg
push
mov
bound
mov
lret
sbb
lret
push
repz
data16
mov
xor
or
fmull
jg
mov
push
sub
out
and
inc
in
pushf
add
adc
test
mov
mov
lds
push
push
addr16
arpl
add
movsb
cmc
inc
add
aam
jge
lea
fdecstp
mov
lods
loope
jns
pop
lahf
sti
cwtl
adc
call
sbb
xor
ss
jae
icebp
repnz
push
mov
adc
addr16
cmp
inc
lret
sub
pushf
hlt
fdivl
cmpsb
mov
test
dec
stos
arpl
mov
js
add
lcall
lea
nop
mov
mov
lods
jne
ret
lods
fsts
mov
jmp
ja
adcb
push
fmuls
sub
push
es
push
dec
adc
mov
mov
arpl
jecxz
xchg
ljmp
sbb
push
pop
xor
fwait
rorl
inc
xchg
dec
mov
lretw
fwait
cmpl
mov
lret
sti
pop
add
imul
adc
push
xor
or
test
fcomp
xlat
shr
push
add
stos
shrl
ja
jge
xor
or
in
jo
sub
loop
pop
adc
cmc
add
jg
fcmovnu
cmp
sbb
out
shl
in
push
mov
js
cmpsl
mov
push
and
out
inc
mov
lock
push
or
sub
xor
mov
dec
ficoml
fwait
rcll
int3
sub
lahf
scas
push
pop
sub
mov
lahf
pop
jae
shlb
dec
iret
dec
lret
dec
sbb
ffreep
ss
mov
mov
mov
fstpl
adc
mov
xchg
aad
jne
ds
sbb
push
xchg
sbbl
es
cmp
jmp
sub
call
daa
mov
lret
mov
jmp
add
hlt
js
or
xor
je
insb
test
out
pop
xchg
movsb
jl
insb
inc
sti
cmpsl
cltd
push
cmc
in
inc
fsub
sti
enter
in
xchg
outsb
sub
cmpl
push
enter
loope
idivb
sub
sbb
cmp
sahf
roll
xor
pop
je
dec
das
sarb
int
cli
xchg
fs
les
push
test
out
lcall
negl
cmp
stos
bound
push
sub
fidivrs
lods
or
stc
in
popa
sahf
sahf
pop
shrl
lea
pop
repz
fwait
movl
jae
cwtl
lock
jne
cwtl
loop
add
sbb
push
shll
dec
loop
sub
leave
cmp
jbe
pop
pop
jne
push
in
pop
xor
out
jne
lods
stos
lcall
xor
sub
mov
mov
sbb
xorl
jge
and
xchg
adc
mov
pusha
popf
mov
shlb
xor
stos
and
lret
sub
movsl
mov
movsl
lcall
xchg
fbld
mov
xor
std
aas
and
xchg
stc
push
pop
dec
xchg
rol
arpl
add
mov
push
mov
popf
mov
ds
je
outsl
lea
jne
rorl
mov
mov
xchg
out
inc
mov
iret
xchg
fbld
outsl
and
aam
pop
cwtl
in
js
pop
in
push
jle
cmc
jb
mov
ljmp
insb
loopne
mov
jb
push
inc
pop
hlt
mov
mov
xchg
add
jmp
mov
shll
ljmp
pop
cmpsb
mov
xchg
inc
ret
call
push
lret
es
lds
mov
notb
inc
data16
sbb
fwait
pop
cmp
xchg
call
inc
xchg
fs
cmp
leave
cld
mov
lea
inc
push
dec
mov
pop
ds
fistpl
push
sbb
xchg
cmp
leave
mov
int
cli
enter
adc
loopne
pop
push
and
imul
rorl
mov
push
sbb
into
movsb
nop
ja
inc
xchg
je
mov
add
inc
cmp
test
adc
enter
inc
cmc
lock
jns
pop
call
cltd
inc
mov
enter
push
pushf
stos
je
fstpt
cwtl
nop
inc
jmp
sub
ud2
sbb
mov
das
push
ljmp
daa
or
jge
in
pop
xor
or
dec
cld
xchg
jnp
das
lcall
mov
push
jle
mov
xchg
sahf
rcll
ss
xchg
rcrl
dec
in
xor
sarb
jns
push
fistl
sbb
jb
ret
in
mov
sahf
icebp
fisubs
fdivrs
mov
pop
movsb
subb
xchg
sbb
and
push
jne
fs
xor
les
loop
mov
xchg
xchg
mov
xor
fisttpl
fwait
aaa
sbb
xor
rorl
dec
cmp
mov
lds
fidivs
js
pop
hlt
jae
push
lods
out
jle
enter
adc
cmp
lock
and
push
sub
das
jo
sbb
push
jp
jae
and
mov
mov
mov
hlt
xchg
rep
ja
mov
mov
jecxz
cmp
push
pop
ja
jae
or
dec
mov
ljmp
jg
inc
xchg
dec
sbb
jae
faddl
mov
mov
loop
fwait
pop
pop
decl
xchg
lods
ljmp
jl
iret
pop
popa
out
in
push
outsl
fdivrl
pop
imul
add
dec
js
lds
or
mov
adc
insb
dec
add
jns
adcl
out
loope
adc
mov
ds
mov
mov
add
xchg
in
mov
xor
xor
mov
push
lret
pop
cmp
fisubl
das
mov
movb
mov
int3
dec
xor
inc
mov
fidivrs
jl
inc
jmp
mov
ucomiss
iret
fisttps
cmpsb
cmp
xlat
mov
test
mov
cmp
sub
pop
mov
xchg
jns
xlat
lcall
xchg
ret
cmp
sbb
mov
or
inc
das
ret
out
fsub
pushf
test
mull
lods
and
pop
pop
cmp
test
and
mov
cld
repz
fbld
or
movsl
dec
dec
fistpl
and
push
cmp
pop
pop
js
scas
fmull
fyl2xp1
clc
sub
mov
xchg
xchg
adc
rcll
int3
sub
and
jl
or
jne
cwtl
jo
bound
test
xchg
out
out
xor
mov
cmp
mov
popa
aaa
pop
fs
sub
or
sbb
stos
or
inc
in
xchg
push
aam
or
cmp
adc
push
ror
arpl
data16
aad
xchg
js
dec
jno
nop
sbb
jge
ds
mov
fnstenv
popa
push
enter
add
jo
and
jno
adc
jp
in
xor
or
mov
in
loope
push
lcall
icebp
cmpsl
leave
fsubrp
fists
mov
cmpsb
pop
repnz
int3
xlat
push
xor
xorl
fnstcw
mov
inc
jno
subl
sbb
pusha
fucomip
add
test
fbstp
xchg
mov
fidivl
pop
xchg
stc
in
dec
aas
je
push
or
cltd
mov
sub
adc
and
aam
insl
nop
sbb
mov
mov
inc
iret
lret
sub
xchg
dec
dec
pusha
and
cmp
jbe
cmpsl
cmpsl
sub
jne
xor
cmp
lahf
mov
addl
adc
lcall
fiaddl
hlt
jae
mov
add
mov
add
or
add
addr16
xor
cmp
mov
or
sbb
arpl
add
dec
cld
push
in
loopne
push
in
inc
ja
sub
mov
out
pop
into
jle
ds
sahf
mov
test
mov
push
lea
dec
jge
mov
pusha
dec
pop
test
sub
lods
mov
mov
pop
push
mov
cld
mov
notl
rcrb
mov
rcll
and
addb
xorl
jns
push
cmp
js
movsb
push
sahf
or
cmpl
lcall
xor
outsl
sub
dec
mov
mov
rcr
mov
in
xlat
jecxz
in
xor
leave
sahf
popa
leave
dec
inc
shrl
push
ds
xor
pop
xchg
arpl
nop
popa
mov
add
idivb
pop
stc
and
xor
mov
dec
imulb
mov
lods
int3
add
jmp
xchg
int
and
sbb
in
jmp
pop
push
cmp
pop
icebp
ds
sarl
imul
jae
jbe
jno
fisubrl
xlat
leave
mov
cs
jle
cmpsb
adc
enter
cmp
mov
xchg
jp
roll
aaa
pop
iret
pusha
xlat
xor
push
loop
out
cmp
adc
dec
mov
dec
sub
lret
test
dec
in
test
jecxz
dec
pop
adc
cmpsb
xchg
dec
int
adc
dec
add
sub
inc
repz
dec
pop
shlb
add
mov
pusha
or
cmp
push
xor
das
aas
sbb
xchg
push
jne
cmp
xchg
movsl
stos
lds
push
inc
daa
adc
popf
mov
ss
adc
andl
xor
inc
mov
cmp
repnz
sbb
cmp
int
sub
cmpb
loop
call
add
adc
pop
add
jbe
mov
sbb
sub
out
inc
and
insl
mov
jmp
push
or
pop
pop
into
lods
adc
push
xchg
cld
mov
cmp
lods
stos
arpl
ret
test
shlb
insb
jmp
addr16
xchg
rcrl
movaps
cmp
insl
aas
push
insb
in
inc
fdiv
xchg
test
jnp
arpl
push
gs
test
loope
imul
roll
jle
xchg
and
cmp
js
insb
int3
sub
jge
mov
sahf
and
pop
inc
jno
lahf
rorl
mov
push
mov
push
stc
jno
outsb
jbe
cmpsb
xchg
bound
or
pop
ss
movsl
mov
or
cmpsl
inc
sbbl
xor
jp
out
lcall
mov
sti
add
xor
lods
adc
jae
es
fneni(8087
ja
cmc
mov
out
add
jbe
movsl
inc
scas
pop
fcomps
cwtl
xchg
pop
push
or
pop
inc
pi2fd
xchg
mov
mov
sbb
out
jbe
cwtl
and
jb
sub
jle
hlt
ljmp
dec
add
mov
orb
cli
rcr
jmp
jo
fsincos
cmp
loopne
xchg
cld
imul
push
ds
jns
or
jge
xor
lret
pop
jb
xlat
ds
aas
roll
das
lcall
inc
fidivl
rcrl
je
pushw
cmp
push
or
push
xorl
mov
insl
imul
mov
mov
xor
movsl
cmpsl
xchg
sbb
rorb
insl
cmp
movb
sub
jp
or
mov
ss
add
jle
sub
ljmp
popf
cmp
xlat
test
mov
addb
mov
roll
xchg
and
jle
stos
shll
add
jg
fiaddl
jo
stos
imul
xor
arpl
sbb
nop
pop
fldenv
fwait
pushf
pop
sbb
sub
adc
cli
or
add
push
lods
and
xchg
cmp
arpl
loop
js
inc
mov
js
pusha
out
jl
fistpll
dec
mov
ja
pop
inc
aad
imul
jnp
dec
and
or
adc
out
jp
outsl
andl
dec
out
xor
testb
in
subb
sub
outsb
push
out
pop
fs
jns
cmp
push
pop
inc
out
gs
dec
adc
xchg
xchg
hlt
bound
xchg
sbb
xchg
or
fistps
rclb
or
sbb
pop
push
sbb
jbe
rorl
or
out
scas
mov
stc
ret
je
aam
pop
add
lea
sbb
mov
sbb
lret
out
lods
lds
mov
out
add
cwtl
adcb
aam
stos
pushf
cld
dec
sti
ret
push
fwait
sahf
pop
mov
push
popf
add
or
and
lret
sbb
lret
and
mulb
fdivl
and
fiaddl
sub
subl
mov
outsl
and
inc
jb
ljmp
dec
les
sbb
pushf
push
xor
rorb
sbb
jb
mov
mov
push
dec
sbb
aaa
push
subb
je
jo
push
xchg
and
fsubl
pop
fisubs
cmp
push
mov
pop
into
cmp
lret
push
xlat
and
inc
enter
test
push
scas
mov
lods
popf
insb
dec
addr16
aas
sub
sbbl
in
incb
pushl
mov
in
dec
lret
xchg
jae
ret
lahf
and
fbld
bound
fs
inc
mov
sarl
jecxz
lock
das
faddl
fucom
or
sbb
sbb
pop
jbe
hlt
add
adc
mov
xor
cwtl
movsb
scas
jno
nop
popa
push
push
clc
xchg
mov
sbb
fmuls
add
xor
mov
shlb
or
clc
shlb
mov
test
pop
xor
xor
in
out
nopl
or
mov
imul
test
mov
cmp
or
pop
sub
or
shl
sub
fwait
sub
and
mov
aas
fcomps
mov
jmp
shl
cmp
sahf
sub
lods
mov
test
mov
mov
inc
std
cltd
lods
hlt
push
sub
add
xchg
inc
or
mov
cmp
mov
scas
and
lds
je
xchg
mov
lods
mov
xchg
pop
loope
pop
insb
into
fdivrp
xchg
fidivrl
add
fwait
push
mov
ljmp
adc
mov
imul
mov
in
jl
mov
arpl
aad
cwtl
push
xchg
das
adc
mulb
and
pop
push
push
fwait
mov
nop
xor
inc
or
xor
dec
sbb
icebp
sti
gs
inc
mov
inc
mov
xor
add
inc
dec
xor
movsl
inc
jp
in
movsl
les
jb
lcall
ljmp
and
and
and
xlat
xchg
adc
pushf
sbb
jl
cmpsl
sub
mov
xchg
pop
cmp
sbbb
lahf
mov
xchg
mov
mov
and
loopne
cmp
sarb
or
adc
loop
movsb
and
stos
lods
insl
mov
or
xchg
xchg
xchg
ret
sarb
pop
es
mov
cmp
popa
ljmp
aas
mov
push
jecxz
cltd
lds
xchg
orl
leave
js
ret
imul
in
lods
rol
stos
test
cmp
shlb
pop
cmp
dec
loop
cltd
pop
arpl
cmpsb
mov
aas
stos
jno
lret
adc
fmul
push
lock
cmp
push
xchg
subb
inc
inc
jmp
xchg
or
dec
icebp
hlt
jae
jg
mov
daa
mov
bound
out
mov
or
aam
movsb
add
mov
pop
sbb
jg
dec
jmp
xor
mov
and
lret
movsb
push
fcmovb
cli
mov
lock
jp
stos
shrb
sub
ss
sbb
andl
and
xor
xchg
adc
cmpsl
sub
adc
inc
rorl
add
jne
repnz
jne
sbb
dec
or
dec
sahf
xor
sub
jl
and
das
dec
pop
mov
fs
scas
lds
mov
insl
xchg
xchg
push
mov
shrb
mov
outsb
es
sbb
out
cmp
es
insl
fstpt
inc
cmp
out
pop
ss
jo
lret
inc
js
xlat
jne
mov
pushf
xchg
xor
xlat
jo
sbb
inc
pop
and
dec
cmp
or
dec
test
cmpsl
jg
mov
mov
je
nop
les
mov
xchg
inc
shl
in
xlat
jmp
xor
loop
aaa
push
cwtl
xchg
movsb
adc
add
cltd
int
das
mov
cmp
enter
lock
sti
lock
incb
push
jmp
pop
mov
pop
ret
shrb
mov
fwait
sbb
pop
xchg
adc
mov
pop
fstpt
add
cmp
adc
insb
fnstcw
movsl
and
jge
notl
mov
add
mov
pushl
or
imul
dec
loop
cmp
mov
mov
mov
sub
jb
lret
andb
xchg
call
mov
mov
cli
cltd
mov
les
ljmp
ss
jmp
pop
push
jno
mov
mov
sub
xchg
cmp
loope
sbb
xchg
xchg
int
fnstcw
outsl
mov
dec
cltd
fdivl
or
and
sub
or
fwait
pop
imul
ror
push
mov
cmp
mov
sbb
sti
adc
lock
fwait
cmpsl
jae
pop
imul
negl
xchg
sbb
push
outsb
mov
jae
pop
in
loope
mov
sub
inc
mov
ficompl
add
and
push
mov
push
mov
addr16
test
push
pop
mov
xchg
xchg
decb
sbb
jae
pop
lcall
mov
scas
pop
cmp
int3
push
in
fsubs
fsubrl
stos
pop
mov
xchg
insb
fwait
and
push
xchg
out
mov
mov
push
arpl
out
arpl
in
mov
xor
or
sbb
popa
in
insl
push
sbb
pop
push
push
fwait
mov
xchg
jecxz
sub
and
pop
orb
add
cmpsb
test
add
loopne
mov
stos
mov
push
mov
das
pop
mov
in
pop
jle
aaa
pushf
jge
lcall
jle
jle
jmp
and
pop
pop
mov
jmp
ja
pop
int3
clc
scas
adc
push
int
xor
adc
sahf
sbb
xlat
stos
mov
pop
out
pop
jp
out
mov
outsl
cmp
cmp
out
sbb
mov
mov
pop
iret
jge
stos
insl
jp
dec
adc
mov
mov
xchg
test
hlt
gs
ret
xchg
cmp
cli
jnp
loopne
cmp
iret
or
fisttpl
xor
je
pop
jle
pop
aas
add
cmpsb
mov
push
inc
outsb
scas
stc
enter
push
jnp
shll
sbb
xor
jne
and
repz
inc
sbb
xor
inc
mov
jae
push
sbb
cmp
mov
test
inc
xor
cmp
mov
jle
lods
and
mov
lods
pop
add
iret
xor
sbb
test
adc
or
adc
cltd
inc
daa
out
lret
fstl
jo
add
add
in
incb
xchg
mov
arpl
mov
js
inc
jmp
pop
xor
push
ds
aam
or
insl
add
std
jb
push
or
imul
or
fs
mov
stos
arpl
xchg
jbe
sub
push
pop
sbb
jno
adcl
cmpb
mov
outsb
xchg
in
int
ljmp
jg
dec
aaa
hlt
cmpsb
adc
dec
repz
mov
out
fdivrs
xor
lret
aas
jne
cli
ret
and
push
xchg
das
xchg
int
pop
inc
push
sub
les
scas
and
gs
xchg
lock
pushf
xchg
lock
iret
les
mov
adc
cmpsb
pushf
xchg
dec
fwait
mov
aad
rcl
subb
lcall
notl
shlb
jo
mov
push
push
gs
bound
mov
xor
jno
ret
bnd
dec
xor
push
imul
dec
pop
rorl
adc
xor
fs
sbb
inc
jae
outsb
mov
pop
and
adc
sbbb
xchg
mov
cltd
jno
cld
adc
inc
test
mov
mov
and
fcoms
dec
mov
push
xor
xchg
adc
js
jae
pusha
imul
push
sub
ret
adc
pop
outsl
rcrb
mov
pop
add
jg
mov
mov
negb
push
mov
mov
push
sub
xchg
push
loope
cmc
mov
lret
cmpsb
ret
arpl
pop
inc
push
ret
mov
jl
mov
dec
jmp
sbb
inc
into
and
jns
inc
pop
jg
push
push
dec
cmp
fwait
lods
lcall
ret
lcall
mov
out
out
jne
adc
lahf
jo
fsubs
fbld
stos
sbb
xor
push
shlb
and
out
and
xchg
add
mov
sbb
mov
fwait
cmp
fucomp
popf
lret
int3
lcall
mov
add
mov
xchg
push
fildll
sarb
data16
shlb
push
lock
inc
push
xor
movsl
and
pushf
jne
sub
adc
cli
sub
add
inc
jge
mov
imul
push
push
push
pop
jno
dec
fisubrs
out
xchg
insb
popa
out
loop
add
in
xor
jno
cli
in
xor
pop
pop
mov
popf
mov
nop
and
cmp
out
xchg
dec
pop
aaa
loope
sub
mov
lock
mov
or
pop
sbb
divl
cmp
or
je
pop
push
aam
add
xchg
jbe
adc
out
xchg
dec
xlat
jo
in
or
sub
mov
xor
leave
in
push
xchg
insl
mov
iret
jge
xor
and
adc
pushf
imul
out
mov
dec
dec
push
pop
testb
add
mov
enter
mov
and
cwtl
sbb
add
repz
shr
movsl
test
push
into
ficoms
cmp
ret
aas
and
pop
sbb
or
xor
xchg
push
lret
and
pop
rcrb
xchg
push
inc
ljmp
cmp
push
mov
out
or
push
xor
ss
push
lods
shlb
mov
aad
fwait
sub
add
add
mov
mov
inc
fbld
jle
ret
mov
movsb
xlat
orb
inc
jle
and
push
xchg
fisubrs
cli
mov
aad
pushw
pop
nop
mov
lret
fistl
out
lods
push
loop
jmp
lods
bound
loop
sub
out
push
mov
cmpsl
shrb
push
adc
in
mov
push
insb
dec
loope
cmp
std
add
hlt
mov
or
and
mov
nop
cs
cmp
pop
push
std
clc
dec
out
nop
pop
mov
sub
mov
pop
shrb
push
jg
mov
push
fistps
cli
movlps
lahf
incb
jp
dec
cmp
and
idiv
xor
pop
or
push
loop
adc
push
lret
add
sahf
mov
test
leave
jle
leave
cltd
pushf
not
leave
jbe
nop
pusha
cwtl
fst
adc
dec
mov
lret
jle
or
lock
jno
xor
loopne
jnp
sub
movsl
push
imul
notl
xchg
mov
sbb
in
fildl
cmp
xchg
cmpsl
std
jno
jo
sub
aas
bound
dec
pop
cmpsb
xor
and
push
testl
es
lds
mov
out
not
ljmp
in
lds
or
pop
pop
dec
aaa
repz
je
add
cs
repnz
aam
test
js
mov
xorb
mov
push
add
pushf
push
xor
pop
and
pop
out
aam
sbb
mov
mov
xchg
ss
sbb
jnp
sbb
xchg
hlt
sub
fwait
jecxz
sub
cmp
sub
inc
scas
mov
fwait
es
lahf
lea
clc
les
ljmp
sub
push
push
inc
int
lret
pop
mov
icebp
loopne
out
or
repnz
inc
sub
inc
inc
mov
test
ja
add
fs
and
das
or
jp
das
sub
insl
ja
inc
mov
lea
add
mov
sub
push
sti
sbb
lock
in
fidivl
ss
js
repnz
lods
data16
pop
mov
mov
mov
mov
mull
test
lcall
add
adc
ror
rorl
sbb
lock
cli
push
mov
inc
shrb
sbb
sti
push
cli
cld
and
lcall
enter
xor
mov
bound
stc
mov
xor
xchg
xchg
test
sub
mov
stos
sbb
cld
sub
sbb
imul
pop
mov
inc
push
xor
or
stc
xchg
and
xor
fcompl
icebp
int
mov
mov
adc
fisubrs
dec
imul
shrl
sarl
addl
rorl
sbb
or
xchg
or
nop
dec
dec
test
je
sbb
data16
mov
ss
sub
pop
loopne
jbe
insb
push
sbb
mov
out
mov
inc
popa
cmp
adc
or
pushf
sbb
add
pop
cli
cmpsb
jge
fistpll
xchg
ss
jno
and
push
mov
test
lea
dec
lods
adc
mov
cli
cwtl
daa
cmp
ja
xchg
bound
pop
ret
shll
sbb
mov
lods
pushf
pop
mov
mul
dec
hlt
pop
in
in
push
roll
pop
ud0
ds
loope
aad
fdivrs
bound
xor
pushf
adc
scas
inc
and
mov
dec
sub
lods
sub
out
das
dec
in
xchg
mov
jmp
or
cwtl
lret
addl
aam
mov
bound
rorl
in
mov
pushf
pushf
mov
idivl
iret
in
xchg
sub
jae
mov
push
push
dec
out
inc
push
pop
mov
in
les
jle
cmp
insb
cwtl
ficomps
icebp
test
rep
repz
pop
andb
roll
push
cmc
movsb
pop
test
dec
loope
ja
add
cld
jae
mov
adc
aad
xor
mov
or
mov
or
jae
or
rcl
push
xchg
cmpsl
fwait
push
xchg
xchg
loop
imul
pop
clflush
test
dec
aad
pushf
iret
xor
mov
ret
out
xor
cmc
sbbl
cmp
je
push
aad
xchg
pop
xchg
icebp
adc
ret
xchg
ja
add
mov
fisubrs
xchg
popf
mov
add
cmp
cli
js
or
cmp
pop
and
mov
push
xor
ds
sbb
xchg
gs
insl
adc
pusha
es
jo
stos
vpunpckhqdq
pop
mov
sub
inc
jecxz
loopne
ret
cld
mov
cmp
pop
jns
jp
jbe
dec
push
sahf
mov
stos
cmp
xor
inc
shll
fldl
sub
push
sub
jl
sub
lahf
fdivrp
or
into
jmp
es
pmulhw
ss
dec
out
inc
dec
or
mov
mov
jb
mov
jp
js
icebp
xchg
dec
jnp
insb
in
sub
fistpll
add
je
sub
cmp
insb
mov
mov
in
in
fistps
fcompl
and
jne
inc
arpl
xchg
hlt
test
aam
adc
xorb
inc
leave
and
fwait
cld
nop
test
and
jno
xlat
stos
adc
fadd
sbb
xchg
sarb
cmp
fnstsw
jne
mov
rcrl
out
xor
xor
cmpsl
mov
jmp
or
xor
inc
scas
dec
xchg
call
call
test
adc
adcb
cwtl
into
jne
mov
push
mov
push
jae
mov
inc
sub
jo
push
addr16
jg
mov
out
adc
jecxz
movsw
cmp
je
lret
or
mov
jecxz
lea
scas
test
sbbl
pop
dec
bound
jbe
pop
loope
inc
imul
lret
pushf
or
arpl
es
dec
repnz
jmp
ja
stc
push
out
lods
xchg
lds
add
aam
push
dec
pusha
fwait
into
inc
sub
sbb
sub
mov
data16
or
shlb
loop
pop
movsl
xchg
xor
ss
in
jp
popa
mov
mov
push
jle
stos
add
xchg
loop
test
sahf
sbb
dec
fcmovnb
mov
dec
push
adc
sub
mov
xchg
pop
in
stos
les
sahf
andb
adc
push
in
mov
bound
and
pop
sub
daa
xchg
mov
adc
subb
roll
dec
pop
cmpsl
pop
add
jmp
js
pop
push
dec
aad
leave
inc
push
or
mov
int
dec
lods
push
and
push
repnz
popa
sahf
mov
loope
cmp
jle
test
dec
pushf
pop
dec
dec
mov
arpl
inc
pop
xorl
dec
insb
mov
shrb
adc
fsubrl
mov
enter
sbb
dec
mov
movsbl
std
arpl
outsl
cmp
cmp
dec
xlat
scas
cmpsb
into
sahf
dec
pop
lret
fildll
mov
push
pop
leave
or
out
push
stos
orb
aaa
scas
adc
cwtl
pusha
sbb
xchg
add
mov
div
mov
repz
out
dec
add
sbb
jmp
std
call
lret
jg
or
and
out
dec
xor
cmp
jnp
pushf
aas
dec
mov
mov
add
or
sub
or
mov
and
ret
push
jge
adc
mov
int3
cmp
fldcw
inc
cmp
mov
jp
sbb
adc
jecxz
loopne
sub
push
xchg
inc
sbb
adcl
cmpsl
jge
mov
insl
lret
insl
sub
insl
orl
cmc
flds
sub
pop
pushf
lock
adc
loope
cmp
jnp
sub
test
std
lods
adc
bound
pop
enter
mov
mov
push
aaa
call
lds
inc
mov
mov
lahf
xor
movsl
pop
mull
aam
xor
xchg
call
dec
jcxz
mov
inc
test
loopne
dec
inc
popf
inc
hlt
cld
jno
add
dec
and
lods
sarb
xor
ss
mov
clc
xchg
std
dec
add
xor
inc
dec
ljmp
rolb
mov
xchg
scas
in
data16
mov
push
xor
jmp
jl
sbb
or
inc
in
mov
std
adcl
mov
mov
test
testb
xor
xchg
or
jo
imul
movsb
sti
cmpsl
ljmp
mov
push
push
push
out
inc
cs
lcall
pop
mov
pop
addr16
mov
in
test
icebp
sbb
jp
fcompl
loop
or
nop
test
xlat
xor
mov
sarb
mov
and
lcall
je
das
test
xlat
cmc
and
inc
sbb
movsl
adc
in
push
pop
clc
sub
dec
pop
dec
insl
adc
inc
dec
dec
sbb
ror
pop
stos
js
add
jp
stos
sbb
cwtl
jg
gs
aad
stos
test
int3
icebp
push
inc
inc
pop
cltd
js
pop
stos
in
shll
xor
jle
dec
mov
icebp
sbb
das
xchg
and
sbb
xor
dec
inc
mov
dec
or
xchg
xchg
jge
sarl
sbbb
mov
cld
mov
cmp
rorb
mov
outsb
mov
push
dec
insl
int
stc
or
pop
adcb
sub
sub
or
pop
pop
mov
sahf
aad
cltd
mov
push
aam
pop
cmp
mov
pop
jp
iret
insb
fsubl
mov
sarl
mov
lods
sbb
jg
add
out
sub
js
fwait
gs
lea
pushf
cli
dec
movsl
repz
mov
push
nop
inc
mov
jge
outsb
cltd
sbb
sub
gs
ret
or
cmc
je
pop
xorl
fsub
test
imul
in
into
in
fsubrl
shll
lret
dec
mov
mov
subb
and
ds
dec
or
lds
dec
scas
test
and
xor
aam
mov
push
popa
push
adc
push
insb
iret
sbb
mov
aam
outsb
in
sbb
test
out
sarb
test
jge
xchg
xor
mov
loop
pop
sbb
fisubl
arpl
mov
pop
in
xchg
or
mov
or
jbe
andb
in
dec
mov
std
das
lods
test
shlb
es
xchg
cmp
out
out
pop
not
or
mov
aam
mov
mov
out
jg
enter
scas
add
jae
sub
lock
int3
push
add
imul
dec
push
cli
push
icebp
mov
mov
jmp
imul
push
dec
pop
mov
push
jne
or
pop
sti
cmp
mov
jns
inc
and
adc
mov
idivl
dec
addr16
sub
test
clc
loope
sti
shll
pop
int3
jle
and
add
push
and
sub
lcall
aad
inc
xor
fstpl
jae
ret
iret
clc
mov
pop
sti
out
icebp
adcl
push
dec
nop
pusha
scas
fsubs
aaa
jl
jecxz
inc
cmp
loop
daa
and
mov
mov
loop
add
sub
stos
xor
and
sbbl
inc
out
mov
repz
rcll
and
fidivrs
sub
rorb
jae
mov
aam
daa
pop
push
stos
aaa
xchg
lret
push
fildll
outsb
sub
pop
mov
nop
loopne
xchg
aaa
sub
data16
js
aaa
push
mov
out
mov
xchg
xor
xchg
int
xchg
mov
gs
add
lea
mov
inc
or
in
xor
pop
xor
push
int3
jbe
cmpsl
loop
ja
add
add
cmpsl
or
sbb
dec
pop
mov
mov
bnd
add
rorl
pushf
call
flds
in
fisttpll
mov
push
mov
in
daa
or
mov
push
pop
add
push
sub
sub
cld
push
stos
adc
test
repz
scas
mov
cld
jb
push
dec
add
sub
cltd
jecxz
fimull
mov
sub
or
mov
scas
mov
popf
jecxz
inc
push
rclb
ficomps
leave
stos
jecxz
and
data16
pop
call
pop
imul
lcall
cmp
push
das
ds
xchg
or
negl
pop
popa
stc
icebp
sti
rcll
sub
cwtl
add
and
sbb
cli
fcomi
mov
mov
in
xor
cltd
out
je
push
jbe
in
jmp
or
fists
push
sub
xor
or
loope
mov
out
mov
sbb
insb
adcb
sti
mov
cmc
scas
jp
out
and
push
jnp
lods
incl
in
insb
das
lret
in
xchg
add
jbe
push
jbe
mov
rcrb
or
inc
andb
mov
loop
mov
int
pop
mov
xchg
dec
mov
lret
imul
sub
or
inc
cltd
sub
push
add
or
stos
ror
cmp
in
das
sti
daa
popa
xchg
xor
test
cmpsl
xor
rorb
pusha
xorl
loope
jmp
dec
lea
jle
or
or
inc
sbb
nop
sbb
sbbb
xchg
lods
mov
sub
daa
xchg
sbb
add
fiaddl
xchg
pop
dec
mov
and
ss
pop
ja
imul
ljmp
sahf
cmp
aas
jns
ret
lds
adc
add
out
dec
in
push
sub
sbb
and
pop
repnz
iret
daa
push
shll
jecxz
lcall
mov
cltd
dec
imul
daa
ss
push
fwait
adc
repnz
jno
dec
insl
rorl
fildl
pop
sub
mov
and
sub
insl
inc
insl
dec
mov
cs
sbb
loopne
dec
sbb
fidivrs
jno
jne
jecxz
in
adc
bound
lret
cmp
mov
arpl
cmp
pop
mov
jb
jmp
sbb
and
cwtl
cmp
pushf
pop
fnsave
pop
xor
sbb
push
out
movsb
scas
mov
adc
enter
repnz
jmp
movsb
mov
call
cltd
test
inc
pop
cli
aad
mov
mov
xor
lret
xor
and
pusha
bnd
push
mov
push
in
jne
int3
dec
test
mov
lret
call
adc
in
xor
dec
lahf
loopne
out
subl
das
dec
push
pop
sbb
mov
inc
outsb
imul
mov
jae
jmp
ss
fidivrs
fcomi
dec
ss
and
and
push
shrb
mov
jb
add
mov
loope
push
cmpsb
mov
hlt
fadds
ljmp
jb
shl
adc
mov
push
out
add
and
adc
hlt
test
adcb
mov
push
and
pop
pop
inc
stc
insl
xor
mov
sarl
xor
fucomi
and
test
add
jno
js
cmpsb
in
bts
in
mov
hlt
push
jb
pusha
and
mov
adc
loope
and
push
enter
out
cmc
fstps
and
iret
negl
test
or
js
stc
sbb
add
call
mov
mov
dec
mov
inc
ljmp
push
lea
adc
and
lea
inc
arpl
inc
arpl
dec
mov
jecxz
lahf
dec
out
movsl
mov
add
push
cmc
adc
lock
out
std
cs
push
test
pand
sbb
out
cmp
sub
scas
loopne
adc
dec
bswap
aad
jbe
out
add
push
or
cmpl
push
jnp
adc
mov
dec
inc
jno
jmp
insb
add
fnstenv
pop
lock
add
in
sbb
inc
adc
and
push
je
fbld
adc
xchg
sahf
pop
fisttps
lret
inc
jl
jmp
bnd
or
push
pop
mov
not
add
cs
imul
arpl
mov
add
adc
xor
cmc
out
dec
js
cmp
jo
xchg
mov
add
xchg
inc
insb
and
cmpsl
xor
into
adc
cmpsl
mov
nop
mov
out
sub
xchg
dec
adc
incb
xor
leave
ja
lods
jge
dec
jno
lds
pop
out
mov
inc
mov
nop
inc
lahf
test
or
insl
add
or
mov
pop
and
out
and
add
and
std
push
or
cwtl
flds
mov
dec
dec
dec
shlb
xor
jb
scas
fidivl
jns
ja
add
repnz
xor
in
or
enter
iret
jae
cmc
call
dec
mov
jne
int3
cmp
xor
mov
out
mov
mov
cmpsb
out
xor
test
out
inc
push
in
pop
adc
xor
mov
daa
incl
dec
inc
outsl
in
push
inc
push
mov
or
adc
or
pop
and
les
push
stos
jmp
iret
cs
repnz
mov
inc
lods
adc
dec
xor
adc
cmpsb
mov
xchg
or
pop
cltd
mov
sub
cmpsb
inc
push
fistps
es
add
mov
je
inc
mov
fisubl
or
rclb
repz
adc
rorl
sub
je
cmp
adc
rclb
push
xchg
imul
xor
in
sbb
dec
push
dec
fimull
mov
mov
lret
add
fdivs
pusha
dec
int3
je
push
dec
jecxz
push
dec
sbb
scas
jno
sub
out
jmp
push
xchg
lahf
pop
idivl
pop
mov
aaa
or
sbb
js
pop
daa
cmp
mov
mov
jmp
testl
fsubl
mov
lahf
stc
cmp
mov
xchg
mov
jne
cmp
pop
std
cmp
pop
sub
pop
add
dec
pusha
xor
xchg
adc
xchg
jmp
loope
cld
push
sbb
mov
fwait
jno
mov
push
movsl
mov
and
lea
lret
divl
and
xchg
jnp
pop
stc
jae
inc
pop
aam
push
shll
insb
into
push
fisubs
xchg
push
loopne
jmp
in
xchg
mov
fsubrl
sub
xlat
lret
cmp
imul
add
sbb
rcrb
pop
mov
aas
sbb
movsb
pop
pop
movsb
mov
add
arpl
sbb
pop
les
or
call
or
fmull
mov
and
and
pop
ret
sbbl
pop
jmp
push
test
sahf
xor
imul
sbb
pop
jle
sub
push
sbb
or
outsb
dec
push
mov
loopne
lods
jo
jae
push
icebp
jg
push
mov
xchg
aam
ss
insl
mov
aad
enter
inc
or
jl
cltd
clc
mov
out
push
sub
in
lods
es
jo
pop
or
sahf
mov
mov
and
xchg
pop
fwait
dec
pusha
jne
hlt
cmc
loopne
filds
mov
cmc
jns
loopne
mov
lock
lock
ret
aaa
push
dec
in
lret
insb
adc
incb
repnz
sbb
in
add
orl
inc
sub
fldcw
mov
rcl
sub
call
mov
ret
fcmovu
fmull
scas
popa
add
mov
pop
mov
jne
lock
jge
cmp
into
in
and
dec
aam
add
mov
and
jmp
andb
leave
incb
mov
lcall
add
prefetcht1
sub
ret
xor
addl
pop
mov
dec
sahf
imul
out
mov
add
scas
int
cltd
repnz
dec
push
or
inc
sub
call
inc
pop
daa
xchg
push
add
jecxz
add
mov
fiaddl
ja
cmp
mov
fidivrl
je
loopne
punpckhdq
push
inc
dec
xchg
cwtl
inc
dec
jne
jmp
scas
sbb
shll
dec
sub
push
jno
roll
pop
xlat
les
imul
xor
lock
sarb
jg
int3
js
sub
repnz
sbb
iret
push
cmp
push
outsb
stc
ret
dec
xor
jge
jl
out
adc
adc
jge
and
mov
jp
cwtl
jo
fisttpll
in
or
enter
lods
push
rclb
mov
into
lock
dec
mov
int
or
in
in
adc
xchg
scas
arpl
xor
rcll
cmp
pushl
dec
jo
jecxz
cmp
mov
ja
adc
xor
das
pop
mov
push
inc
ja
movsb
sbb
repz
fsubs
adc
loope
mov
gs
cmp
pop
add
inc
cmp
mov
push
sbb
cwtl
mov
cltd
mov
in
fcomp
jg
andb
push
cmp
mov
xor
push
push
add
sub
movsb
iret
daa
xchg
or
dec
sbb
cwtl
adc
rclb
lock
icebp
mov
mov
push
js
jg
js
orb
out
jno
xchg
cld
xchg
test
mov
mov
ficoml
sub
sbb
bound
out
subb
lods
sub
push
bound
mov
repnz
test
outsl
je
cli
in
mov
inc
and
dec
dec
dec
loop
sbb
pop
inc
lea
cmp
pop
mov
mov
mov
push
lret
popf
or
push
ljmp
sahf
test
or
aad
dec
xchg
stc
xor
loop
add
fidivs
push
mov
ss
mov
out
mov
inc
leave
aad
and
pop
mov
int3
ss
cmp
pop
std
sub
out
ds
push
shll
js
mov
xchg
aam
jecxz
and
orl
dec
sbb
out
adc
jge
aas
and
movsl
std
jge
loopne
aad
or
out
jle
ss
xor
jmp
dec
sub
in
loop
pusha
fisttpll
adc
mov
mov
push
call
in
cmp
xchg
pushf
dec
push
out
fwait
mov
mov
roll
leave
mov
pushl
cmp
rorl
jl
lret
test
fidivl
stos
or
mov
adc
mov
add
mov
inc
outsl
out
paddsb
in
mov
insb
jo
mull
arpl
movsl
aad
fists
add
mov
andl
xchg
in
stos
pop
outsb
mov
leave
and
mov
rcrb
dec
mov
or
pop
das
test
xchg
mov
adc
jno
lret
jmp
aas
add
xor
adc
ret
gs
jge
iret
stos
jb
cld
pop
scas
aas
std
and
push
jbe
lcall
pop
pop
xchg
test
scas
lea
add
nop
repz
adc
adc
add
out
mov
jbe
sahf
pushf
pop
pop
add
mov
mov
rcl
sbbb
push
xchg
add
push
jmp
rcrb
mov
mov
outsb
add
sahf
scas
andb
fs
mov
aam
cs
pop
xor
or
jae
outsl
leave
testl
sbb
mov
sti
jecxz
dec
xor
ljmp
or
dec
xor
mov
decl
jne
aam
dec
ret
xor
loope
add
push
rcll
aam
mov
fs
out
movsl
rorl
and
fldt
mov
mov
push
sub
sbb
mov
push
cli
mov
pop
cmp
or
pop
mov
aaa
loope
jo
push
jmp
arpl
and
push
inc
cmpsl
mov
lods
rcrb
inc
inc
hlt
loope
jecxz
jecxz
or
sbb
xor
lock
jne
xchg
outsl
cmp
jge
out
push
dec
sbb
rcll
mov
mov
push
inc
xor
mov
mov
adc
insb
mov
int3
shlb
repnz
cmp
into
xlat
idivl
pop
xchg
dec
ja
push
pop
cmpsl
cmc
inc
xor
xchg
adc
mov
mov
or
repz
ret
outsl
inc
fstl
fldenv
xor
ret
mov
aaa
jb
mov
cltd
stos
mov
jns
addr16
jo
jmp
inc
enter
les
in
and
std
scas
sub
pop
cmp
jmp
addr16
and
adc
dec
cmp
lret
sahf
inc
dec
insl
push
out
jge
test
dec
lock
test
in
movsb
das
push
jg
ljmp
mov
pop
mov
fdivrl
shl
in
sub
outsb
test
subb
aas
push
lods
mov
cltd
movsb
in
jae
ret
xor
mov
mov
cmp
add
xchg
repnz
jnp
xchg
test
sub
enter
shld
dec
add
lcall
cmpsl
mov
fldcw
mov
pop
dec
and
idivb
mov
scas
sbb
mov
ret
lods
dec
mov
sbb
xor
ret
push
push
lret
test
stc
sbb
push
xor
scas
fsubrs
mov
inc
push
sbb
ror
push
fstpl
cmc
pop
scas
std
sub
add
cmc
lea
xor
adc
arpl
enter
scas
mull
js
sahf
cmc
jo
rclb
mov
sub
faddl
outsb
enter
push
jbe
icebp
sti
gs
dec
sbb
icebp
xchg
daa
dec
mov
push
sub
mov
sub
rcr
xchg
jns
adc
mov
pop
testb
lcall
out
add
mov
push
xor
ja
dec
and
push
mov
hlt
jmp
hlt
cld
scas
mov
cmp
mov
pop
cwtl
mov
jns
fisubs
in
aaa
shl
cmp
mov
inc
insl
push
add
or
adc
xorb
ljmp
mov
xchg
sbb
xor
sbb
js
imul
and
iret
add
jle
ss
in
mov
icebp
jp
sub
mov
jnp
mov
adcl
jb
out
push
mov
movl
rcr
pop
xlat
jl
aaa
repnz
add
pop
sub
push
leave
mov
dec
dec
int
sub
add
push
outsb
shll
pop
mov
jne
cmpsl
add
cmpl
add
push
push
xor
add
adc
jle
pop
push
sub
insl
mov
lock
lock
dec
out
mov
fstps
xor
sub
xchg
repnz
dec
scas
cmc
in
subb
dec
jp
repnz
bound
int
pop
add
mov
push
sbb
andl
mov
mov
lret
sub
out
.byte
xchg
dec
.byte
mov
add
jmp
mov
sub
mov
add
jmp
mov
add
pushf
popl
jmp
movzww
sub
mov
sub
jmp
mov
jmp
mov
sub
add
pushf
popl
jmp
mov
mov
mov
add
shrd
mov
pushf
popl
jmp
mov
sub
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
movzbl
cbtw
inc
cwtl
sub
mov
jmp
movzww
cwtl
sub
sub
mov
jmp
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
sub
sub
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
sub
mov
jmp
movzbl
mov
add
add
mov
jmp
mov
sub
add
pushf
popl
jmp
mov
add
mov
mov
jmp
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
and
mov
sub
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
lea
cmp
ja
mov
lea
sub
lea
sub
mov
pushf
push
mov
lea
push
mov
cld
rep
pop
pop
popf
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
push
push
push
push
push
push
push
push
pushf
push
mov
mov
sub
mov
add
mov
inc
movzbl
jmp
mov
mov
mov
jmp
notl
mov
sub
and
pushf
popl
jmp
mov
mov
add
mov
jmp
movzbl
mov
add
mov
inc
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
pop
popf
pop
pop
pop
pop
pop
pop
pop
pop
ret
mov
add
mov
mov
jmp
mov
mov
sub
inc
mov
jmp
mov
mov
not
not
sub
and
mov
pushf
popl
jmp
mov
mov
mov
jmp
and
mov
add
mov
jmp
mov
mov
add
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
mov
mov
add
shld
mov
pushf
popl
jmp
mov
mov
add
mov
jmp
movzbl
mov
sub
mov
inc
jmp
mov
jmp
roll
add
inc
push
add
push
add
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
push
add
inc
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
add
push
add
inc
push
add
inc
push
add
push
add
push
add
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
inc
push
add
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
push
add
push
add
push
add
push
add
inc
push
add
push
add
push
add
inc
push
add
push
add
push
add
inc
push
add
push
add
push
add
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
push
add
push
add
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
push
add
inc
push
add
push
add
inc
push
add
push
add
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
add
inc
push
add
inc
push
add
push
add
push
add
push
add
inc
push
add
add
shl
shlb
rorb
inc
add
cltd
cli
decl
add
lds
mov
jmp
and
adc
sub
add
or
or
or
push
fs
pop
cmp
jle
xor
das
cmp
pop
rol
ret
sbb
cwtl
das
sbb
cmp
adc
das
sbb
push
mov
adc
mov
lods
mov
sbb
inc
push
add
psubd
js
sbb
sub
xor
sbb
or
and
mov
xor
sbb
or
adc
cmp
adc
add
sub
shrd
cmp
adc
inc
icebp
lahf
or
movsb
movsb
bound
mov
xorb
and
sub
add
xor
sbb
cmp
add
dec
add
add
adc
or
mov
push
