dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
adc
in
mov
imulb
mov
jb
bound
rorl
ficomps
sbb
mov
pop
sub
into
cmp
and
les
cmc
xor
jbe
xlat
cld
fsubrl
repz
and
push
xor
xchg
les
mov
dec
or
xchg
into
mov
sbb
mov
sbb
or
and
sarl
pusha
shlb
cld
shrl
inc
dec
add
sub
loopne
lret
enter
or
cmp
pop
das
imul
cwtl
cmc
outsb
mov
out
inc
mov
mov
mov
out
test
push
into
mov
mov
and
daa
rclb
sbb
add
xor
push
negb
push
sub
enter
fcmovnb
pop
ret
fwait
pop
cmp
and
add
push
hlt
xchg
mov
inc
push
in
dec
lods
pusha
mov
jle
sub
stos
shll
repnz
popf
cmpsl
sub
xchg
pop
pusha
pusha
xchg
ds
pop
push
mov
ret
adc
mov
movsb
add
mov
push
sbb
hlt
fsub
pop
pop
jo
push
mov
xchg
mov
aad
push
lods
mov
sbb
jp
lret
mov
mov
mov
ret
sub
cmpsl
add
mov
cmpsl
or
push
pop
aaa
notl
fisttpll
rcrl
jmp
cmp
xchg
mov
lds
in
fsubrl
pusha
jle
nop
sub
shll
sub
and
ljmp
test
jo
shlb
fistl
and
ret
repz
jge
adc
and
or
fdivs
sar
mov
mov
or
cmpsl
jmp
cmp
sbb
dec
mov
push
imul
fwait
push
fdecstp
push
mulb
sbbl
aas
mov
dec
push
fiaddl
imulb
dec
int3
fwait
out
outsb
out
fs
fmull
int
daa
mov
mov
cld
test
xlat
mov
add
cld
sub
idivb
ds
xchg
xlat
push
xor
bound
push
iret
ds
cmp
repz
mov
aaa
mov
xor
sbb
jne
xchg
sahf
rorl
hlt
fldcw
out
cli
addr16
sub
in
dec
adc
out
mov
add
sbb
and
insl
pop
xchg
push
push
mov
popa
pusha
mov
mov
cmpsb
adc
mov
push
mov
jne
lods
mov
adc
negb
inc
mov
ljmp
shl
rolb
lret
xor
popf
mov
popf
mov
inc
in
xchg
mov
mov
sub
pushf
mov
ret
into
xchg
push
hlt
cld
loop
pop
les
pop
punpcklwd
popa
cmp
gs
mov
test
add
add
mul
repz
lea
push
xchg
int
mov
lds
cmp
mov
mov
mov
jb
sub
pop
sbb
push
iret
xor
fdiv
ret
or
or
mov
lcall
sbb
out
jae
nop
adc
push
enter
xor
fs
bound
sub
imul
xor
or
cmp
fistl
das
cmp
pop
mov
add
fwait
call
mov
int3
jo
mov
push
push
adc
inc
sbb
jb
lahf
jle
pop
mov
sbb
inc
outsl
mov
repz
sbb
bound
es
test
push
and
rorl
insb
loop
mov
cwtl
cs
cmpsb
jae
mov
scas
or
ret
inc
mov
cmp
loop
addl
mov
xchg
cmp
out
out
leave
xchg
sub
daa
mov
jnp
jg
push
sbb
js
in
cld
repz
lock
inc
mov
adc
jbe
dec
ss
popf
movsb
xlat
rcrl
mov
inc
push
sbb
mov
popf
adcb
push
sub
mov
pop
xchg
cmp
enter
jnp
mov
test
roll
sbb
jns
xchg
not
mov
rolb
xor
mov
fldt
test
rcll
jae
mov
dec
test
and
push
mov
jns
inc
pushf
fsubl
jg
fimull
bound
cmp
add
lahf
imul
aam
inc
mov
xchg
cmp
cmp
fdivp
arpl
or
and
lock
mov
adc
call
pushf
or
lock
cld
mov
jnp
jbe
outsl
mov
xchg
and
cmp
push
and
mov
ds
xchg
pop
daa
rcrb
cmp
mov
jge
cmc
mov
xchg
lcall
inc
test
or
sbb
inc
cmp
filds
mov
jmp
sahf
mov
sbb
push
xchg
jno
aad
or
sub
cmp
mov
pop
jmp
fnstsw
pop
scas
scas
push
push
jmp
push
cltd
add
xor
or
loopne
cld
scas
inc
jo
stos
mov
movsb
out
lea
leave
xchg
adc
fwait
loop
lea
lds
divb
repnz
clc
jb
push
test
enter
out
mov
dec
push
xor
lds
ljmp
push
push
pop
mov
fldt
xor
lahf
cmp
test
popa
ret
push
pop
or
ja
stc
movsb
push
xor
dec
leave
sbb
and
or
add
pushf
cmp
pop
and
mov
sub
adc
lock
add
pop
int
lahf
icebp
dec
mov
push
into
mov
in
ja
shl
pop
sub
stos
dec
sub
and
xchg
cmp
arpl
stos
and
lea
ret
fnsave
push
sbb
mov
dec
and
clc
push
test
xor
shr
inc
mov
orl
push
sub
lock
movsl
dec
fsubrp
ror
jg
repz
mov
mov
sbb
stos
jle
and
in
cltd
je
mov
inc
push
mov
pop
add
jg
lahf
insl
xchg
fbld
or
xchg
cmpsb
int
cmp
sub
and
sub
lret
cli
ljmp
pop
cmp
clc
ss
or
rolb
cltd
out
sarl
scas
repz
pop
je
xchg
push
rol
push
addr16
dec
mov
orb
test
inc
xchg
cli
stos
and
scas
jb
popa
push
mov
mov
inc
inc
outsb
sub
testl
adc
outsl
lahf
mov
mov
and
inc
int
outsb
mov
jns
sbb
jb
mov
xchg
push
clc
fisubrl
mov
ds
xchg
scas
enter
pop
fldl
sub
mov
daa
shrl
and
call
cmpsb
fstpl
adc
fistl
mov
pop
pop
cld
lcall
mov
fistps
orl
push
mov
mov
insb
nop
xor
mov
fwait
adc
scas
popf
dec
stos
pusha
test
mov
xlat
add
inc
push
cmp
cltd
xor
xchg
pop
mov
push
adc
mov
mov
mov
test
inc
dec
dec
jmp
mov
sbb
clc
or
or
add
or
leave
xor
filds
test
dec
mov
les
mov
or
lret
fsubl
iret
data16
xchg
sahf
in
xor
mov
ds
xor
lds
xchg
add
testb
hlt
mov
sbb
insl
sarl
sbb
loop
lcall
sbb
subl
lret
push
jle
es
pop
fs
insb
add
push
inc
sbb
add
sub
xorl
leave
mov
xchg
or
inc
rorl
roll
cmp
or
sub
push
test
adc
sub
out
sbb
pop
stos
nop
jb
loop
scas
cmp
mov
enter
inc
add
push
jno
inc
dec
cltd
daa
push
xchg
mov
xchg
jl
sarb
mov
cmp
xor
sbb
shlb
enter
dec
sub
or
aas
paddusw
and
cs
pop
inc
xor
mov
pop
js
push
xchg
inc
movsb
test
mov
pop
dec
jo
ja
sub
fcompl
push
dec
out
ss
outsl
rcrl
push
pop
add
es
mov
cmp
jecxz
add
xchg
je
and
xchg
jb
push
push
add
push
pop
mov
int3
or
lods
push
enter
mov
mov
stos
dec
xor
notb
adc
inc
repz
jge
jnp
leave
fxch
imul
aam
data16
scas
jp
xor
dec
cld
mov
aas
sub
add
xor
test
aam
add
push
lahf
mov
in
ftst
lcall
jl
add
sub
clc
xor
test
fdivrs
sbb
and
ret
dec
sbbb
stos
icebp
rcrl
mov
mov
ljmp
and
inc
stos
lock
sbb
lods
cmp
inc
sub
and
dec
punpckhwd
mov
ljmp
in
cltd
into
sbb
jnp
inc
sahf
mov
aas
loop
mov
pusha
sbb
xor
das
inc
cmp
lahf
testb
repz
movsb
lods
push
cltd
or
iret
div
push
inc
push
sub
ljmp
scas
mov
push
or
lea
lret
xchg
nop
mov
dec
or
loop
mov
xor
popf
addb
push
iret
xchg
loop
ret
mov
and
mov
jbe
mov
inc
or
aaa
xor
and
mov
inc
ret
repz
xor
lea
jg
clc
sub
icebp
sub
or
jne
cld
rorl
arpl
jmp
ret
cmc
jb
push
nop
divl
adc
sbb
and
xchg
mov
pop
out
xchg
push
fldenv
dec
sub
in
nop
xchg
adc
add
icebp
js
dec
inc
ret
les
pop
pop
out
into
and
jae
repz
repz
sarl
je
cmp
push
mov
pop
cmp
test
push
rcrl
aad
pop
xchg
gs
adc
xor
and
std
cs
mov
pop
pop
jle
fwait
push
pushf
jmp
enter
sbb
addb
cld
add
push
dec
add
inc
jbe
movsb
mov
jae
xor
cmc
scas
pop
mov
push
xchg
mov
lods
mov
lea
orb
stos
popa
sub
loop
inc
adc
pop
and
fdivl
inc
sbb
jmp
insl
jne
and
jmp
cmpb
int
stc
and
cmpsb
cmp
stos
sub
push
add
xchg
pop
lea
mov
lret
loope
dec
adc
cmpsb
fnstcw
mov
xor
cmpsb
shrl
push
test
sbb
dec
ret
shrb
xor
mov
and
pop
dec
mov
dec
adc
inc
aam
bound
mov
push
mov
sbb
lret
mov
loop
mov
push
or
out
jbe
mov
sbb
xchg
lods
pop
scas
popl
ds
idivl
test
pop
dec
add
sbb
das
js
icebp
lock
push
mov
pop
outsl
mov
pop
call
dec
leave
clc
adc
mov
jge
das
add
and
mov
mov
in
xchg
shll
in
repnz
int3
imul
mov
jns
popf
xchg
xchg
insl
mov
inc
or
icebp
in
pop
xor
mov
shlb
jno
sub
xchg
push
add
cmp
loop
dec
xchg
cmp
cmc
mov
mov
jne
add
fisubl
cwtl
sbb
leave
pusha
adc
push
mov
hlt
sbb
jg
int3
loop
add
ss
test
ror
fadd
pop
insb
js
dec
dec
in
mov
sahf
ret
xchg
dec
fistl
stos
in
jb
xchg
jg
out
mov
cmc
cld
lret
iret
xchg
sub
sahf
add
imul
lods
rorb
mov
cwtl
pop
sub
add
mov
popa
insb
push
jb
dec
das
ds
or
mov
in
cld
jns
push
andb
ljmp
xchg
addr16
cmpsl
test
pusha
mov
mov
mov
pusha
xlat
shlb
nop
ds
sbb
push
jecxz
cmp
and
lea
mov
jmp
cmp
sub
imul
popf
dec
or
enter
or
das
xchg
xchg
rcll
mov
outsl
xchg
adc
adc
cwtl
enter
bound
ljmp
std
jl
pop
pop
mov
adc
pop
outsl
add
loop
adc
mov
push
movsb
pop
lds
xor
ss
push
push
adc
or
fildll
and
std
sub
mov
mov
in
dec
mov
xchg
fadds
je
dec
scas
stos
jae
or
test
cs
int
adc
pop
repz
xchg
jbe
sub
jle
mov
outsl
add
shll
insl
or
adc
stc
or
mov
test
mov
in
movsb
jmp
xacquire
movsl
imul
faddp
out
and
loopne
ficompl
aam
ret
arpl
cli
rorl
jbe
popl
mov
or
jecxz
mov
xchg
add
adc
ja
in
cld
xorb
cmp
sub
or
scas
loop
aam
adc
jo
fdivrp
lds
cmc
das
enter
xor
insl
ds
stos
in
int3
cmp
add
stc
xchg
out
add
insl
ljmp
push
add
cmp
push
jnp
in
fmuls
push
fidivl
xchg
pop
inc
jne
pushf
fisttps
ss
push
fildl
hlt
out
pusha
rclb
dec
cs
lahf
mov
mov
sti
out
sub
push
rcrb
adc
jo
jge
push
cmc
fstpl
xchg
mov
inc
inc
test
and
push
popf
test
insl
insl
adc
outsl
test
inc
fwait
data16
mov
inc
loop
jns
test
shl
rorl
movsl
imul
gs
push
inc
inc
or
pop
xorl
out
xchg
inc
push
cwtl
jg
mov
add
pop
pop
mov
mov
sbb
inc
jno
arpl
mov
dec
xchg
not
fwait
pop
push
out
stc
add
jo
adc
daa
pop
push
mov
movsl
aad
lods
xor
out
adc
movsb
stos
lods
fimull
gs
push
hlt
jle
add
jg
push
push
mov
bound
push
loope
cmp
xor
sbb
lock
leave
daa
fisubl
stos
outsb
sbb
in
roll
in
cmc
xor
dec
cmpsl
loop
sub
imul
sti
cmpsl
xchg
jge
movsl
pop
stos
push
aad
outsb
xchg
bound
sub
lods
ds
and
lret
mov
mov
pop
sub
jmp
stc
std
out
outsb
imul
hlt
mov
scas
jno
negl
rclb
jbe
push
icebp
sbb
cltd
fisttpl
mov
loop
xchg
fisubl
mov
mov
pop
push
mov
adc
xor
stos
dec
adc
sahf
and
pusha
adcb
scas
cld
pop
iret
jecxz
in
lcall
jmp
dec
ret
mov
push
popf
xchg
and
or
rcrb
aad
fwait
pop
mov
or
fstenv
mov
cli
mov
insl
push
or
and
push
lds
mulps
lret
pop
mov
rcrb
dec
pop
ljmp
jmp
or
imul
dec
pop
dec
lock
inc
mov
cld
imul
icebp
sbb
mov
mov
dec
sarl
adc
add
add
push
jae
mov
jp
mov
pop
lahf
sbb
in
es
push
or
xor
lock
fs
shlb
addb
int
jno
in
mov
push
jo
fmull
fisubrs
imul
loopne
dec
mov
leave
pusha
popa
stc
and
or
sub
imul
out
sti
dec
out
movsb
pusha
adc
test
mov
icebp
mov
inc
and
push
subb
cmp
insb
xchg
xor
adc
cmp
mov
lock
or
cltd
mov
sbb
ja
int3
mov
sbb
enter
test
outsb
fs
xor
or
loop
subl
cmp
imul
fs
addr16
scas
or
lcall
fs
ret
sub
push
sub
outsl
cmp
mov
push
incl
pop
sub
fsts
fs
daa
stos
sarl
and
in
push
aam
test
ds
sub
std
scas
loop
push
cmc
mov
repz
inc
lock
imul
add
mov
pop
es
cmp
xchg
test
push
and
sahf
out
or
lods
and
mov
pop
and
sub
xor
jno
ja
mov
jl
mov
out
aas
push
scas
xor
dec
mov
and
out
ret
lods
jno
outsb
add
ljmp
push
cwtl
sar
jae
xchg
jg
divb
addb
icebp
jne
roll
cld
sbb
mov
lahf
sbb
xchg
xlat
leave
mov
adc
aas
mov
push
jmp
push
push
es
jnp
inc
push
mov
mov
leave
movsl
fisubl
fwait
lcall
inc
xchg
push
sti
inc
cltd
roll
sbb
xor
clc
into
andnps
ficompl
call
xchg
inc
sarl
jns
popf
insb
jns
leave
adc
stc
lret
inc
cs
insl
bound
or
std
push
inc
fmull
rcr
test
mov
jmp
outsb
cmp
mov
and
out
and
xchg
xchg
in
frstor
pop
shlb
add
inc
dec
add
dec
or
movb
mov
pusha
jecxz
xor
jns
arpl
sub
mov
mov
pop
pop
pop
imul
adc
fisttps
ljmp
lods
ja
ret
mov
push
dec
out
adc
das
dec
mov
dec
in
mov
cmp
inc
add
sub
out
fisubl
mov
or
mov
mov
gs
div
lods
psubsw
daa
push
xchg
mov
imul
fwait
xchg
or
loopne
and
lahf
iret
mov
add
int3
inc
jge
loopne
push
push
lahf
and
inc
dec
lock
data16
dec
or
mov
and
ret
mov
fstp
add
dec
jo
dec
cmp
mov
pop
out
arpl
fimuls
in
mov
movsb
pop
push
es
push
fwait
inc
cmpsl
and
test
jno
cld
xchg
cltd
dec
out
push
div
daa
xchg
xchg
mov
jno
shlb
shrb
push
mov
sarb
sbb
mov
addr16
mov
test
push
pop
cmp
mov
mov
mov
adc
ja
add
pop
or
xor
nop
jns
xchg
aaa
push
or
jnp
enter
or
xchg
repnz
imul
mov
mul
shr
cmp
pop
stos
repz
pop
dec
add
ret
sub
scas
testl
adcb
insb
lahf
jmp
xchg
jnp
loope
push
shrl
mov
imul
inc
mov
pop
outsl
jbe
add
ss
mov
push
outsb
xchg
ret
pop
xchg
or
adcb
pop
test
inc
popa
cmp
fisttps
mov
inc
xor
ret
cmp
push
loop
xor
sub
jne
pop
aam
dec
divl
dec
cmp
dec
inc
jp
push
cmp
mov
xlat
xchg
xchg
pop
inc
andl
dec
jb
xchg
cwtl
loop
and
mov
lret
xchg
add
scas
out
mov
ds
cmpsl
or
push
fistpll
std
sbb
pop
sti
not
sub
add
fbld
cmp
and
adc
push
mov
cltd
sbb
dec
aas
mov
aad
mov
add
and
nop
push
jae
and
xchg
jnp
movsl
lods
sub
data16
in
inc
sub
ret
loopne
cmp
fsubl
mov
sbb
cmpsl
xchg
or
jge
mov
jl
mov
stos
cld
cmpsl
xchg
cmp
dec
jmp
or
inc
hlt
sahf
jo
mov
pusha
mov
mov
scas
cmc
lcall
jmp
dec
push
mov
sub
rolb
mov
pop
sub
test
xor
pop
mov
inc
xchg
in
lds
testb
mov
push
lock
jne
and
aaa
mov
outsl
push
mov
aaa
loop
sbb
xor
lret
insl
inc
cmp
stos
gs
mov
mov
rcl
lea
xor
jmp
in
cld
dec
jnp
sub
add
shl
mov
out
lahf
cs
bound
sbb
jg
mov
cmp
add
repnz
inc
sub
imul
push
or
jecxz
enter
add
jge
stos
adc
mov
dec
cli
leave
in
sub
xor
pop
pop
cltd
sti
cmp
jns
mov
dec
adc
adcl
stos
les
sub
sbbb
xchg
push
in
shrl
in
adc
scas
xor
or
adc
inc
sahf
jnp
jmp
sbb
cmp
fidivrl
mov
inc
cmp
inc
jno
and
and
or
je
adc
jmp
sbb
dec
sub
sub
dec
dec
rcrb
lock
push
in
jg
push
push
imul
jge
sti
lock
dec
push
or
in
addr16
popf
ja
xor
lret
xor
hlt
xchg
mov
out
pop
mov
xor
sub
inc
push
addb
adc
scas
cwtl
fdivs
popf
fnsave
add
cs
pop
cmp
xor
mov
test
mov
pushf
jle
call
popa
imul
sbb
or
jnp
pop
mov
fnstsw
sub
fnstenv
addr16
pop
divl
cmpsb
mov
or
xchg
push
aad
push
push
jmp
inc
imul
xchg
cmp
sbb
daa
dec
gs
lret
rorl
lds
sbb
insb
cmp
outsb
mov
or
add
or
test
ds
aad
loopne
xlat
test
dec
repnz
jb
sub
xchg
push
mov
cmp
hlt
notl
push
sub
mov
pop
or
imulb
push
lock
aaa
test
mov
imul
jbe
and
jbe
out
jo
dec
addl
adc
es
and
or
lcall
nop
dec
pop
push
adc
mov
outsl
push
sub
mov
jge
xor
xchg
dec
pop
or
xor
jl
cmp
sbb
push
vinsertps
lahf
cltd
out
aam
mov
mov
add
int3
je
add
movaps
data16
jl
fwait
nop
mov
loop
xor
aad
sub
sub
jo
les
test
repz
gs
lcall
mov
dec
mov
js
test
adc
es
shr
sub
ret
inc
outsb
divl
test
and
rorb
iret
sahf
es
loop
out
int
mov
mov
sub
cmp
dec
jmp
sar
fs
adc
loop
les
jb
mov
jmp
mov
adc
es
mov
aad
jmp
sub
pop
jmp
icebp
xchg
inc
popf
sahf
cmp
inc
xor
push
pop
cld
out
pop
xchg
je
pop
dec
mov
idivb
aas
loope
push
std
adc
add
sahf
push
mov
adc
into
push
mov
mov
xchg
push
xchg
sub
cmp
jp
xchg
sbb
dec
cli
jmp
and
mov
xor
pop
lea
gs
adc
cmp
jl
push
dec
push
fistpl
lock
arpl
test
or
ss
in
cmp
popa
cmc
sub
mov
stos
pop
and
cwtl
xchg
and
sbb
scas
dec
mov
or
cmp
sarl
adc
mov
cltd
std
aam
mov
push
jo
les
or
pop
loopne
lcall
out
nop
sub
xchg
mov
loopne
add
mov
dec
or
sbb
aas
mov
mov
adc
ret
enter
daa
dec
bound
pop
sbb
fcompl
dec
mov
divb
inc
fidivl
pop
jl
or
in
rolb
mov
pop
into
cmc
or
pop
mov
ljmp
icebp
in
bound
and
jbe
adc
push
xor
pop
fs
mov
std
insl
lcall
icebp
add
jb
repnz
xchg
dec
xchg
push
xor
negb
mov
jg
std
sarb
sbb
dec
into
in
adc
clc
inc
xchg
cmp
fadds
jle
xchg
mov
cld
jns
inc
add
or
fcmovu
mov
sub
in
movsl
popf
cmpsb
js
or
cltd
xchg
shlb
lods
xor
arpl
xchg
cmpsl
xor
mov
push
stos
in
xor
sub
addr16
sar
xchg
jl
pop
lods
mov
adc
xlat
sub
fisttpl
mov
jmp
inc
js
sbb
cmp
pop
aas
adc
movsb
fldenv
repnz
xorb
jmp
rorb
sbb
and
int3
test
mov
mov
fcmovnbe
das
sbb
pushf
xchg
and
pop
inc
dec
rcrl
nop
xor
inc
and
mov
out
push
cmp
sbb
and
pusha
shlb
imul
adc
adc
frstor
int3
shll
mov
insl
push
add
int
mov
out
cli
stos
jae
mov
call
sub
inc
mov
mov
and
or
scas
dec
xchg
pop
adc
fbld
es
inc
imul
cmc
sbb
jbe
sbb
or
sbb
mov
loope
clc
cmpsb
inc
clc
out
cmpsb
pop
jge
popa
jmp
ja
or
sbb
adc
pop
cmp
data16
pop
fidivrs
or
nop
pop
or
inc
jnp
dec
push
loopne
inc
dec
push
in
mov
jae
cmp
sub
adc
or
lods
cld
hlt
jae
neg
pop
lret
sbb
pop
lea
pop
cltd
push
mov
and
sbb
pop
js
pop
loopne
in
fcomps
adc
mov
imul
pop
in
adc
dec
add
push
push
lret
xor
imul
add
and
lahf
push
xlat
pop
jnp
ljmp
xlat
stos
xchg
dec
sub
jle
jge
xchg
pop
add
out
fistps
or
xchg
push
je
xlat
mov
imulb
in
cli
xor
xchg
mov
cmp
sub
in
mov
es
cmp
mov
int
dec
cmpsl
xchg
les
out
push
sub
ror
out
mov
cmp
test
push
aad
lcall
add
divb
iret
or
ja
mov
dec
cmpsl
movb
mov
movsb
testl
inc
ret
daa
push
psubsw
push
push
in
lret
adc
xchg
adc
roll
mov
stos
into
push
in
dec
mov
mov
outsl
adc
mov
mov
lret
jecxz
cmp
inc
sti
pop
or
mov
out
fistpll
xchg
mov
inc
mov
mov
ljmp
inc
xchg
mov
jge
mov
orb
push
or
or
insb
mov
in
scas
rclb
mov
inc
xor
jnp
inc
fldl
push
int
inc
scas
test
les
sti
dec
and
and
bound
sub
stc
adc
mov
int
pusha
fs
fstpl
icebp
pop
mov
xor
mov
pop
dec
rol
stc
sahf
sub
xchg
and
or
and
jo
mov
rcrl
or
cmpsb
mov
jno
cmpsl
data16
je
pop
mov
push
xchg
push
fmuls
mov
addr16
repz
cmp
add
push
pop
mov
aaa
pop
mov
mov
cwtl
jl
sub
cmp
movsl
mov
fsubl
movsb
adc
dec
mov
cmpsb
dec
jle
test
in
rcll
rorl
sub
inc
xchg
mov
dec
inc
pop
push
ja
and
fsubrl
imul
push
xchg
add
mov
cli
int
adcl
clc
popf
lret
push
lock
push
inc
mov
leave
inc
lahf
sbb
jmp
popf
shrd
fsubp
ret
roll
push
int3
cmp
shll
ss
test
lahf
mov
jns
pop
enter
out
mov
mov
adc
jge
add
inc
jle
test
movsl
loopne
int
es
mov
iret
clc
rcll
fldenv
sbb
insl
in
mov
sarl
dec
out
dec
lods
icebp
inc
lret
push
sub
add
in
push
arpl
xor
adc
ret
int
cwtl
mov
or
ss
test
xor
push
aaa
std
es
cmpsl
insb
or
into
mov
out
fmulp
cmc
push
inc
call
xlat
and
ret
int
mov
rcrl
xlat
mov
cltd
push
pop
mov
adc
stos
das
daa
jae
dec
push
dec
mov
shl
jo
mov
jmp
test
adc
xchg
out
mov
icebp
fbstp
arpl
jae
xchg
je
cmp
ficomps
and
cmp
std
cld
fsubr
jmp
and
loopne
cwtl
adc
sbb
mov
cmpsb
call
out
jecxz
jns
push
sahf
push
cmpsb
pop
test
into
imul
icebp
or
scas
in
cmp
xor
fs
dec
out
dec
inc
mov
push
sub
repz
arpl
jge
pop
mov
jp
fstpt
and
or
hlt
and
mov
dec
mov
inc
xor
faddl
push
sahf
lods
in
out
adc
mov
jb
cli
add
mov
xor
cmc
lret
push
dec
out
fxch
and
adc
loopne
std
mov
shlb
push
and
scas
xchg
sbb
in
fldlg2
fdivl
pop
pusha
inc
cs
add
or
gs
stc
push
outsl
push
jecxz
or
test
mov
or
in
loopne
sarl
pop
in
cmp
jge
inc
les
mov
popa
aam
fcoml
push
roll
mov
aam
dec
movsl
inc
ret
xchg
mov
rclb
xchg
mov
jae
jmp
sub
push
test
fbld
cmc
out
mov
sub
stc
mov
subb
lret
ljmp
xor
rcll
lahf
pop
fdivrs
push
and
push
and
inc
pop
divb
push
ljmp
test
mov
cmovle
and
arpl
std
jg
xor
cmp
pop
rcll
mov
cmp
dec
dec
andl
jecxz
lds
or
je
lret
scas
sub
cmp
mov
xor
pusha
int
cmp
jbe
aam
mov
filds
sub
in
orl
mov
and
add
xchg
mov
insb
in
push
orb
add
fstps
push
cmp
pushf
xor
bound
mov
lcall
shrl
push
enter
call
fnsave
xor
lret
cmpsb
mov
cmp
inc
mov
inc
mov
outsl
ret
mov
aaa
movsl
or
hlt
cmp
pop
dec
sbb
cltd
jg
mov
cmpsb
xor
xchg
cs
jecxz
outsl
inc
daa
popa
mov
push
jnp
rcrl
mov
adc
cmp
jae
add
adc
mov
cwtl
pop
pop
sub
mov
adc
jae
add
mov
bound
aaa
aas
mov
sub
add
mov
push
aad
cwtl
mov
mov
ret
cld
test
xlat
mov
popa
add
stos
cwtl
sar
orl
add
aad
fsub
clc
push
add
and
lahf
mov
jg
jo
push
xor
out
pop
push
out
cltd
jae
adc
push
fs
adc
sub
scas
add
pop
test
int3
pushl
outsb
jns
mov
lods
ss
and
mov
add
inc
push
and
lods
aam
mov
adc
push
sbb
or
enter
mov
jo
in
dec
aas
mov
sbb
aaa
cmp
fisubl
and
cs
and
add
inc
popf
mov
mov
cmpsb
loopne
das
xor
out
add
mov
cld
pop
and
jno
pop
dec
inc
cmp
xor
loop
and
movsb
xor
mov
pusha
aam
imul
ljmp
sub
mov
mov
mov
cmp
in
pop
repz
imul
push
cmp
mov
xchg
repnz
pop
jno
push
cmp
dec
push
jae
and
popf
test
jmp
xor
jo
mov
inc
lea
and
xor
mov
icebp
insb
xchg
xchg
xchg
dec
adc
imul
rcll
xchg
insl
movsb
xlat
cmpsl
mov
inc
bound
cmp
mov
fnsave
rorl
push
push
imul
stc
or
fcomp
inc
push
dec
pop
push
int
add
adc
xor
scas
adcl
sbb
shll
shll
into
mov
xor
arpl
sbbb
cmp
lock
or
sub
lahf
lea
mov
fnstsw
sub
xor
dec
jle
leave
push
mov
sbb
push
pop
ret
bound
xchg
std
jp
enter
mov
or
mov
addr16
add
shrb
lahf
and
or
pushf
mov
pop
jo
ret
out
mov
mov
clc
or
ret
std
pop
js
mov
inc
push
add
sub
inc
or
push
xchg
rolb
xchg
adcb
lods
jg
ret
pop
mov
pop
cmp
aad
inc
popa
in
push
in
das
fdivrs
loopne
mov
fisubl
push
rol
out
jp
mov
xchg
mov
fisubrl
pop
add
cld
mov
cmp
outsb
push
clc
fisttps
js
jbe
add
sub
dec
mov
lret
lods
xchg
mov
sbb
ret
pop
cld
mov
push
jecxz
jo
xchg
repz
lahf
je
leave
mov
ror
clc
adc
cmp
push
pop
xchg
mov
les
idivl
mov
data16
sbb
lcall
pop
or
pop
jbe
popa
cwtl
repz
sahf
icebp
jb
pop
xchg
inc
inc
scas
push
test
leave
outsl
test
imul
outsb
pop
push
sbb
pusha
popf
fs
xchg
shrl
imul
mov
jb
scas
jbe
inc
pop
lea
rorb
jmp
xchg
ljmp
cmp
mov
cmc
aam
jp
aam
testb
adc
push
hlt
stc
jp
repnz
jl
popf
lods
imul
jg
push
dec
std
in
dec
adc
ror
mov
mov
popa
in
mov
push
int3
stos
nop
mulb
jb
xor
and
cwtl
ja
jae
xchg
lcallw
pop
das
sub
add
frstor
sub
mov
push
pop
ret
stos
jg
sub
cmc
add
int3
cld
movsl
inc
shlb
mov
test
out
jno
enter
mov
xor
cmp
push
ljmp
xor
mov
int3
xor
sbb
jge
xchg
push
stos
xor
pop
fcomip
add
ss
pop
mov
int3
mov
mov
ds
xchg
ss
fwait
in
mov
or
test
cltd
ror
imul
fwait
jecxz
lods
add
popa
xchg
adc
and
pop
jecxz
mov
mov
add
pop
or
and
xchg
mov
pop
push
mov
inc
or
stos
sub
hlt
sbb
adc
add
mov
mov
lret
sub
fsubrs
decl
lret
fsub
inc
xor
loopne
jmp
xor
dec
jae
mov
cmp
dec
dec
jmp
cmpb
xchg
shll
lock
lahf
inc
insl
mov
cwtl
mov
jne
fsubrl
jns
or
lret
xor
lcall
jg
ficomps
loop
sub
les
shl
out
je
add
pop
mov
roll
cwtl
sub
je
loop
mov
lods
dec
aas
std
mov
cltd
test
ljmp
pop
mov
pop
push
cmpsl
mov
rorl
cmp
push
xor
test
cmp
add
decb
adc
loope
jge
pushf
nop
sbb
jp
add
mov
mov
pushf
lods
ljmp
cmpsb
adc
inc
pop
es
add
mov
jmp
cs
imul
mov
addr16
jecxz
xchg
and
enter
and
lods
add
popa
cmpsb
insb
or
sbb
scas
lds
dec
or
and
mov
bound
pop
push
jecxz
sub
push
aas
rolb
loopne
push
xchg
gs
pop
lods
in
in
movsb
outsb
dec
mov
add
jne
ja
sbb
das
ret
int3
adc
or
dec
mov
in
sub
fnstcw
push
js
fidivl
push
int3
mov
xchg
push
dec
xchg
mov
dec
mov
popf
mov
insl
xchg
fcmovne
in
pushf
call
jne
lret
stos
adc
jecxz
mov
fadds
mov
ret
mov
cmpsl
pushf
add
xor
ftst
outsb
mov
ljmp
je,pn
jl
in
push
int
mov
gs
rcrb
lcall
adc
push
xor
jne
push
lods
dec
inc
adcb
jmp
or
in
dec
ret
push
pushf
sbb
or
push
and
push
sti
rcrb
bound
and
roll
imul
sub
mov
adc
jle
call
jecxz
pop
hlt
jae
pop
mov
sbb
ljmp
imul
jle
je
and
not
cmp
jmp
mov
pop
or
jnp
dec
lods
outsl
jge
cmp
mov
mov
je
fxtract
xchg
jnp
sbb
adc
push
stos
or
and
lret
dec
mov
aam
add
mov
out
pop
in
sbbb
mov
lcall
loopne
shr
arpl
ja,pt
sbb
add
loopne
es
fsubs
testb
add
gs
les
pop
push
out
xor
sub
ficompl
test
jecxz
xor
testb
jp
inc
inc
xchg
sub
dec
outsb
sub
adc
js
imul
push
mov
push
icebp
pop
inc
inc
inc
loop
fldl
cmp
pop
sbb
xchg
cltd
test
idiv
out
into
in
jge
scas
pop
push
and
imul
pop
bts
fnstcw
cmp
aad
sub
or
hlt
mov
push
push
sub
insb
jl
inc
test
dec
into
imulb
shlb
stos
loope
dec
ret
mov
and
jg
xchg
lock
outsl
push
mov
pop
dec
hlt
not
jg
sarb
shl
ja
dec
cmp
sub
orl
repnz
sub
imul
cmc
test
subl
dec
sti
jp
xchg
daa
dec
cmp
cmpsb
sbb
push
mov
scas
adc
adc
aad
push
and
or
iret
ds
jne
jb
sbb
ss
adc
stc
loope
mov
movl
iret
cwtl
gs
lock
mov
pop
fadds
cmp
cmove
push
mov
adcb
mov
mov
or
sbb
mov
add
adc
add
xchg
pop
or
cmp
clc
imul
outsl
decb
outsl
add
lret
out
cmp
jb
or
les
ret
push
ja
js
xchg
daa
or
adc
loope
jle
clc
dec
sbb
aam
leave
call
ds
sbbl
push
insb
sbb
or
cmp
hlt
mov
scas
pop
shlb
iret
xchg
xchg
xchg
lret
push
sub
lret
xorb
movsl
lret
and
jb
mov
test
jge
dec
sahf
mov
cmp
movsb
lcall
inc
jmp
cmp
sbb
stc
fisubrl
lea
aas
cmp
lods
lds
jmp
xchg
in
push
jb
mov
stos
and
loop
nop
sbbb
cwtl
loopne
adc
loope
sub
mov
push
mov
pop
scas
adc
mov
pop
jmp
push
xor
cmpl
in
rcrb
ljmp
bound
scas
outsl
dec
in
jo
mov
jle
movsl
mov
test
outsl
push
xchg
std
adc
cmp
adcl
adc
sbb
jbe
mov
fwait
or
leave
pusha
cmp
popa
cmpl
mov
dec
dec
das
jb
loop
pushf
or
jno
leave
leave
xor
push
xor
pop
paddsw
mov
cmp
mov
call
jno
add
ja
pushf
leave
notl
or
int
push
cmp
mov
shl
repz
scas
sub
lret
cmp
cbtw
cmp
clc
adc
xchg
add
lret
test
lcall
dec
sub
jp
arpl
enter
rorl
sub
nop
sti
fldt
xor
sti
das
and
out
or
push
test
arpl
cmc
push
adc
ljmp
pop
adc
fidivs
jl
lea
and
scas
xor
or
xchg
push
std
add
push
cmp
stc
hlt
shrl
fisttpll
add
sub
xor
mov
lahf
idivb
inc
mov
and
mov
sub
push
pop
cmp
test
ret
out
lods
jecxz
lea
hlt
cmc
ljmp
mov
idivb
lahf
xchg
int
mov
shlb
hlt
les
jno
mov
in
mov
enter
ja
lds
ljmp
xchg
xor
out
cs
inc
mov
mov
cwtl
and
sarb
jb
mov
nop
rorb
mov
push
arpl
xor
sarl
clc
in
add
pop
scas
add
dec
push
loop
shrb
ss
dec
push
mov
gs
push
jb
cmp
push
mov
sar
mul
cli
fldcw
arpl
out
xor
mov
imul
add
sub
cmp
add
push
imul
mov
shl
adc
shlb
xchg
mov
fidivs
mov
inc
cmp
pop
sbb
rcll
fidivrl
cwtl
in
nop
add
fcomps
jns
mov
pop
inc
adc
xchg
testb
jge
frstor
mov
outsb
pop
iret
lcall
shll
sub
push
pop
mov
iret
mov
decl
dec
ja
inc
cmpsb
into
xchg
xchg
add
stos
mov
aas
mov
stos
adc
cltd
mov
fsubr
jnp
add
or
stos
push
cmpb
mov
or
scas
aas
gs
cmp
xor
movsl
jle
shrl
dec
xor
int
dec
xchg
lahf
dec
clc
pop
sub
decl
arpl
fsubrs
xchg
hlt
pop
arpl
enter
xchg
adc
cmp
dec
ja
jno
popa
int
sub
rcr
jbe
xor
aad
pop
or
jbe
lret
test
jae
inc
addr16
in
cmp
aad
mov
add
push
mov
inc
jge
andl
adc
mov
mov
or
dec
add
jecxz
loope
fildll
gs
cmp
push
pop
int
mov
cmp
mov
dec
sub
imul
add
adc
pop
lock
jg
movsl
sub
push
pop
out
dec
cmc
dec
movb
pop
fwait
pop
int
std
fisubrl
aam
mov
cwtl
dec
cld
mov
adc
loop
in
jns
ds
iret
mov
lret
xor
out
jp
sub
shlb
scas
add
shrl
xchg
je
cwtl
mov
testb
push
scas
stos
movsb
mov
out
ret
addr16
mov
andl
fwait
and
cmpsl
sub
popf
mov
push
inc
ljmp
test
or
ljmp
inc
fiadds
ficompl
pop
movb
incl
ss
nop
xchg
repz
pop
cmpsb
fstl
mov
mov
or
add
push
pop
or
push
or
adc
jmp
std
push
adc
lds
add
cmpsb
fisubs
stos
fistps
out
sbb
adc
psrlq
inc
ljmp
sub
and
xchg
xchg
sti
xchg
out
iret
and
mov
lock
push
mov
enter
lret
cltd
mov
adc
mov
sbb
mov
ljmp
lret
mov
mov
or
daa
sbb
aas
mov
movsl
or
ja
enter
clc
inc
mov
jb
dec
pop
cmc
cwtl
or
xchg
lcall
xchg
ficomps
out
insb
mov
push
aad
jmp
mov
cmp
jne
adc
out
stc
test
sbb
mov
xor
cltd
ss
xor
flds
loope
sbb
xchg
fisttpll
push
push
dec
sub
push
outsl
test
or
pusha
int3
xor
stos
in
adc
cltd
push
pop
jle
ds
pusha
jle
scas
cmp
stc
enter
pop
push
adc
aam
push
pushf
das
lret
inc
jbe
add
sbb
fstps
sbb
cmp
fidivs
xor
mov
and
cmp
sub
icebp
add
loope
xchg
xchg
jge
pushf
adc
xchg
jo
testb
sbb
clc
push
aad
xlat
lret
stos
xchg
fs
inc
fsubrp
fidivl
cwtl
sti
pop
loopne
sbb
stc
movsl
mov
cmp
inc
loop
lcall
xor
arpl
out
inc
fs
cli
push
cld
cmp
dec
or
cmpsb
es
les
add
xor
sbb
push
xor
push
sub
sbb
mov
inc
inc
popf
aad
pusha
mov
mulb
arpl
stc
or
push
inc
or
cmpsb
into
je
test
dec
ret
sub
xchg
jne
stc
mov
jae
clc
xchg
scas
xchg
add
add
aad
inc
ds
loopne
lret
outsl
pop
stos
les
jecxz
aad
mov
popa
ljmp
or
xor
sbb
jns
or
aas
mov
test
mov
jb
icebp
dec
js
fidivl
decw
sbb
enter
sub
stc
sbb
xor
pop
adc
adc
fldl
jo,pt
add
mov
jg
mov
pop
cmp
in
mov
push
in
pushf
sbb
je
cld
popf
push
inc
in
mov
dec
fwait
xchg
inc
push
fucomip
inc
jns
push
xchg
lahf
icebp
pop
outsl
xor
fs
aaa
bound
in
cmpsl
sbb
scas
dec
xlat
adc
adc
lods
je
xchg
or
pop
jbe
inc
loopne
jmp
mov
jl
into
ret
dec
imul
jb
lret
imul
jb
inc
movb
leave
out
jecxz
int3
sahf
adc
out
adc
dec
es
push
and
imul
scas
ret
and
mov
loope
out
mov
fsubrl
es
outsb
jmp
mov
cmp
hlt
fisttpl
leave
mov
jbe
sub
sbb
bound
or
mov
fbld
test
inc
and
xor
ss
mov
jne
mov
outsl
dec
icebp
add
mov
fimull
mov
xor
and
dec
fdivp
or
test
test
or
loop
xor
push
imul
fstps
shll
inc
cmpl
into
stos
push
push
inc
sbb
mov
pop
fimuls
cmc
jb
dec
sbb
cmp
inc
dec
fs
std
dec
adc
insl
xlat
inc
and
adc
pop
mov
adc
data16
and
cwtl
leave
jle
adc
pop
mov
mov
mov
and
and
adcb
jne
test
test
dec
and
subb
mov
iret
cs
jl
or
std
jmp
mov
push
ljmp
adcl
push
sub
out
push
xchg
iret
loop
mov
mov
xor
xor
xor
jns
push
sti
outsb
push
jg
jmp
push
adc
sbb
push
orb
and
std
mov
aas
lret
push
movsb
imul
stos
std
lods
xchg
stos
lret
fbld
xor
cmp
lods
pop
xchg
sbb
popa
imul
cmp
dec
lods
in
xchg
dec
test
shlb
adc
mov
clc
outsb
xchg
out
push
sbb
cmp
inc
sub
data16
mov
cli
or
popf
popa
pushf
aaa
pop
xchg
sub
leave
cmp
incb
push
pushf
mov
cmp
xor
jb
fdiv
pop
test
enter
and
mov
push
mov
lods
or
sbb
sub
jl
or
cmp
jne
jbe
cmp
dec
xlat
pusha
fbstp
sub
pop
rcrl
push
aas
dec
pop
cmpsl
adc
dec
jne
lahf
daa
mov
adc
ret
insl
frstor
push
mov
lods
sarb
sbb
outsb
jmp
fldl
pop
cmp
sub
sub
daa
sahf
js
mov
cmpsb
stos
xor
je
fists
sub
loop
pop
pop
xor
pop
jg
jle
mov
push
shr
and
push
cmpsb
dec
sahf
je
jp
jno
nop
in
movsl
jg
jmp
bound
push
negl
xor
cmp
ljmp
or
imul
jnp
icebp
mov
sbb
iret
fdivs
int
and
xlat
push
cmp
pop
adc
mov
adc
movsb
push
rclb
repnz
jmp
cmp
nop
in
push
loopne
jmp
adc
arpl
addl
xchg
dec
mov
lock
dec
call
imul
in
mov
rcrb
lods
andl
pop
inc
rolb
js
popa
fcomps
lret
lahf
inc
pop
mov
or
leave
push
jp
cmpsl
lods
lret
mov
mov
in
or
pusha
adc
notb
push
pop
popf
push
sbb
popa
or
in
lcall
lcall
popa
inc
dec
and
ljmp
add
nop
incl
lret
hlt
loop
sub
fwait
pushl
sbb
and
push
leave
adc
enter
push
jle
xor
ss
pop
int3
aad
mov
mov
add
inc
ljmp
and
inc
sbb
inc
iret
sbb
aaa
pop
pop
mov
mov
lods
neg
add
xchg
gs
mov
add
fmulp
or
mov
sbb
outsl
hlt
inc
jg
fbstp
inc
pop
xchg
pop
xchg
and
jae
cmc
adc
aam
mov
lret
and
xlat
cmp
adc
ss
sahf
mov
push
dec
xchg
mov
lret
adc
loope
pop
imul
ror
lods
incb
cmp
mov
fldenv
dec
repnz
lds
mov
gs
popf
test
mov
andl
sarl
jmp
mov
aam
sub
fsubrs
pop
sbb
pop
mov
and
cmp
push
xchg
sub
movsl
or
dec
cmpsb
xor
mov
add
xchg
mov
pop
repz
inc
and
fiaddl
ss
jns
fwait
mov
and
pop
out
pop
mov
mov
fstl
adcb
push
xor
loop
push
pop
gs
cltd
sbbl
scas
gs
adc
mov
sbb
jno
pop
sbb
cmp
add
outsl
xchg
loopne
pusha
into
lret
int
fisttpll
push
je
jbe
repz
ret
push
iret
push
jmp
cwtl
fildl
dec
iret
dec
aas
mov
sbb
add
in
xchg
mov
sub
and
ss
iret
push
in
das
mov
add
call
lea
cmp
negb
adc
fisttpl
mov
ret
testb
jno
xchg
sub
lock
std
dec
in
or
inc
mov
mov
push
mov
fs
or
mov
pusha
pop
sbb
mov
stos
and
dec
add
outsl
mov
in
sub
pop
repnz
pop
fs
fbstp
jno
xlat
and
dec
pushf
and
bnd
loopne
push
rcrb
inc
cmp
push
lods
test
loop
inc
lods
sti
push
or
mov
sub
push
xchg
push
fimuls
sbb
add
cli
in
cmp
sbb
cwtl
mov
insb
dec
outsb
cmc
push
test
stos
jge
loop
cli
mov
push
and
scas
cmp
inc
sets
out
mov
and
inc
mov
sub
stos
les
stc
mov
push
push
into
les
test
mov
inc
xor
push
fldenv
push
mov
fwait
or
call
xor
aaa
lret
push
pop
test
sub
in
mov
in
inc
sbb
jbe
cld
test
mov
push
cmpsb
xorb
repz
arpl
or
fadds
pop
mov
movsb
xlat
and
lock
sub
icebp
nop
lods
pop
inc
push
mov
lods
add
add
jl
or
xchg
fnstsw
insl
pop
cmp
pop
mov
fadds
lods
push
mov
pop
push
gs
pop
push
icebp
ds
cltd
pop
negl
dec
xchg
mov
sti
xchg
jg
loop
cmp
icebp
jns
clc
push
mov
jp
gs
mov
xor
test
sub
mov
sub
push
add
jb
pushf
adc
shll
inc
dec
inc
mov
mov
leave
inc
in
sbb
xor
mov
or
in
inc
popa
cmp
clc
mov
cwtl
test
test
ret
add
cli
sbb
scas
not
rcrb
mov
scas
inc
xchg
loop
mov
pop
xchg
xchg
iret
fsubs
dec
cmp
mov
sub
aaa
lods
push
scas
and
cmp
dec
cmpsl
in
xchg
xchg
pop
test
out
rcl
xor
xorb
xor
js
or
fwait
andl
std
inc
std
pop
data16
pop
mov
xchg
or
aas
in
or
adc
sub
push
fistl
dec
int3
inc
fistps
sbb
leave
and
cmpsb
sbb
popl
add
and
ds
sub
out
dec
xor
jg
aas
sbb
push
gs
sub
add
subb
xor
lcall
out
jg
jo
js
push
cmp
sub
xchg
jbe
out
mov
in
push
add
loopne
loope
mov
jbe
mov
mov
scas
cmp
add
inc
ja
pop
sbb
jne
loop
insl
ds
and
jno
sub
rcr
pusha
pop
ljmp
cmpsb
xchg
cmpsl
add
rorl
fiadds
sbb
jae
aas
es
xchg
addr16
arpl
pop
jo
push
mov
je
push
sbb
fwait
hlt
ret
je
mov
jge
jl
push
test
cmpb
movsl
insl
jb
fmuls
and
roll
lret
mov
inc
push
xchg
and
or
outsl
adc
jge,pt
in
js
lret
int
insb
and
in
jmp
mov
mov
lods
inc
insl
insb
mov
jmp
sub
xchg
idivb
jl
sbb
cmp
mov
add
cli
pusha
xchg
fsincos
loopne
mov
jl
loopne
mov
cwtl
and
cmp
into
gs
xlat
pop
cltd
out
jmp
jnp
in
sub
popa
mov
add
cmp
sbb
icebp
out
rclb
cmpl
jb
loopne
sub
sbb
popf
mov
xor
lods
cmc
fmuls
adc
pop
jmp
or
pop
das
xor
or
ret
lret
jne
out
adc
aas
rclb
mov
xchg
and
and
mov
push
insb
jge
fsts
mov
inc
lock
xchg
push
mov
push
push
lods
in
scas
xchg
shl
jge
pop
mov
jae
ficoms
addr16
cmp
add
sbb
cmp
fadd
or
dec
push
cmp
mov
pusha
sbb
sub
enter
mov
out
js
imul
mov
into
std
cmpsb
inc
jge
pop
mov
imul
push
andl
arpl
pop
pop
hlt
xor
cli
mov
lahf
sbb
sbb
add
std
mov
leave
and
loop
push
lahf
adc
lret
clc
mov
adc
xchg
je
mov
mov
and
add
nop
inc
inc
rcr
pop
push
xor
pop
push
add
into
add
mov
aad
out
pop
loope
test
out
das
stos
stc
aaa
cmp
mov
jo
mov
xor
lds
sbb
mov
push
cmp
mov
push
aas
push
cs
test
sbb
pop
xor
insb
mov
popf
dec
mov
or
adc
aaa
mov
push
xchg
dec
mov
add
inc
push
imul
inc
mov
pop
adc
loop
xor
clc
pop
idivl
cltd
lods
cltd
sub
jne
inc
popa
xor
lods
pop
mov
cmpsl
mov
test
int3
cld
xor
jecxz
repz
imul
dec
gs
jl
addr16
xor
ret
in
sahf
movsl
sbb
in
adc
ret
ljmp
jmp
dec
xchg
and
cld
mov
les
rcr
fmull
push
es
jae
lds
jb
sub
inc
sub
js
gs
jecxz
mov
sub
cmp
fldenv
cmp
testl
out
adcb
stos
lods
jecxz
xchg
mov
xor
sub
icebp
fstl
lock
add
pop
xlat
push
adc
pop
sub
pop
decl
dec
add
push
popf
cli
xchg
in
iret
mov
std
in
movsb
movsb
and
or
dec
add
add
mov
jbe
enter
adc
ja
imul
jb
sbb
inc
xchg
gs
call
in
pop
cltd
fldenv
stc
clc
enter
fs
in
adc
ror
fwait
pop
stc
add
lcall
mov
add
pushf
imull
out
push
andb
push
sub
popf
add
in
pop
imul
ljmp
mov
sti
mov
mov
sbb
in
or
xor
cmpsb
xor
sarl
or
imul
loopne
mov
mov
mov
cmp
out
pop
lds
mov
shl
fbstp
fstl
add
mov
out
fisttpl
aam
mov
lret
jl
mov
xchg
push
push
sub
or
repz
adc
aad
imul
or
xor
cltd
addr16
or
out
lret
or
adc
push
and
jecxz
mov
int
adc
cmp
jge
cmp
jl
pop
test
shll
pop
filds
fsubl
pop
adc
push
adc
add
movsb
jne
add
in
fs
mov
repnz
cs
xor
mov
mov
mov
mov
js
lcall
test
das
ss
pop
xchg
call
arpl
stos
shll
call
lret
stc
jmp
mov
subb
jge
hlt
add
scas
cwtl
jno
push
cmp
and
push
aaa
cmp
hlt
sbb
fmuls
insl
push
out
add
dec
mov
cmc
xor
mov
sahf
jbe
adc
fwait
jb
push
pop
mov
mov
pop
lidtl
es
in
add
sbb
lods
sub
pushf
fildl
or
jge
push
mov
push
or
push
cli
int3
jae
je
or
xchg
push
bound
into
pop
or
enter
adc
subb
inc
xor
push
xchg
iret
push
pop
jb
dec
sahf
mov
imul
mov
cmp
loopne
lock
jno
pop
scas
sti
mov
mov
jae
leave
or
outsb
push
mov
call
hlt
stos
icebp
push
mov
push
adc
xor
xchg
es
xor
jns
inc
sbb
add
mov
cmp
sub
mov
mov
pop
sbb
std
dec
mov
call
adc
push
std
cmpsb
cs
xchg
mov
or
scas
push
ljmp
mov
rcr
aas
mov
jle
sub
mov
lods
xor
push
mov
dec
and
dec
inc
sti
nop
mov
shrl
pop
adc
pop
pop
out
aad
push
in
addr16
adc
in
push
inc
jp
and
jp
xchg
and
imul
jno
mov
pop
test
mov
push
mov
call
sbb
pop
stos
cmp
rclb
and
insb
and
add
stos
adc
fildl
inc
mov
test
imull
lea
lock
cmc
das
or
sub
push
push
inc
jbe
and
inc
lahf
inc
jp
and
mov
movsl
fcmove
lods
push
test
scas
pop
xor
lods
add
daa
andb
mov
add
push
cltd
sbb
in
xchg
and
push
jp
rclb
out
inc
push
and
mov
sub
dec
inc
test
icebp
sbb
sub
inc
popf
in
mov
ljmp
out
repnz
leave
sbb
add
and
add
mov
xchg
sub
sub
ja
xchg
jbe
loopne
in
lea
pusha
cmp
sub
aam
xchg
push
add
sbb
clc
cld
rolb
sbb
sub
dec
xor
adc
jecxz
jl
xlat
lods
xchg
ror
testl
mov
sbb
mov
push
jbe
inc
pop
adcb
xchg
inc
enter
sti
cltd
movsl
mov
pop
repz
aaa
add
pop
rolb
inc
bound
dec
subl
mov
fsubr
cltd
enter
sarl
loopne
arpl
pop
mov
xor
jmp
aaa
mov
cmovo
adc
fmull
rol
inc
nop
jbe
or
out
orl
mov
imul
sbb
mov
pop
mov
jb
test
loopne
icebp
mov
jno
mov
add
pop
cmp
push
push
and
test
xlat
push
xlat
or
cmpsl
shrl
in
mov
shlb
xor
in
and
and
fcomi
fstpl
jnp
test
inc
xor
jb
pop
cmpsb
push
popa
sbb
xor
shll
mov
in
add
mov
or
dec
sub
arpl
lock
aaa
xor
mov
pop
stos
clc
in
xchg
xchg
test
jnp
jmp
out
data16
mov
ud1
push
pop
in
ds
lahf
fnstenv
imul
dec
add
test
inc
inc
xchg
inc
cmp
add
nop
jmp
jae
mov
sbb
pop
cmp
mov
repnz
xor
jb
adc
aas
jo
push
call
dec
into
ds
sbb
and
mov
pop
cmp
pop
sub
jns
enter
lcall
xchg
mov
es
push
mov
repnz
pop
dec
cltd
mov
icebp
enter
mov
cmp
jae
xor
or
xor
insl
sub
xlat
movsl
repz
idivb
iret
imul
xchg
setno
cmp
sbb
or
fwait
push
lods
sbb
sbb
data16
orb
push
and
pushf
and
int3
push
jae
sbb
inc
shrb
and
pop
or
sbb
ret
dec
and
mov
roll
dec
jmp
fidivrl
and
mov
push
jl
adc
imul
pop
push
mov
jne
inc
jecxz
scas
sbb
int3
add
subb
lret
fldt
sbb
sbb
or
icebp
jl
mov
lahf
arpl
xor
popa
aad
shl
dec
adc
dec
jl
adc
pop
enter
inc
or
imul
inc
pop
das
push
dec
adc
pop
pusha
mov
jmp
sub
jnp
pop
cs
xchg
dec
jg
int
push
addb
fsubr
xor
ret
jle
xorb
in
xor
incl
adc
mov
cmp
lret
pop
pusha
lret
pop
add
jl
or
xor
xchg
pop
lods
lods
rclb
adc
out
lods
js
mov
leave
and
mov
inc
mov
or
mov
ret
push
sti
jecxz
ret
and
xchg
jns
fisttpll
ret
or
popf
push
or
arpl
inc
sbb
and
jae
enter
add
adc
jle
xchg
jle
mov
pop
jp
outsb
sti
pop
mov
cmp
rol
dec
ret
sbb
iret
pushf
loopne
bnd
add
xchg
imul
arpl
cmpsl
xchg
jmp
push
xor
dec
add
sbb
stc
stos
imul
xchg
cmp
mov
shll
popf
inc
pop
mov
icebp
mov
lods
lods
or
js
clc
inc
jno
aaa
mov
test
das
addr16
imul
jl
movsb
mov
xor
adc
pop
xor
sbbl
or
mov
in
daa
xor
popf
ljmp
aas
aaa
mov
repz
lods
ret
fisubrs
fcomps
xchg
dec
inc
out
daa
pop
pop
xor
flds
add
stc
movsl
call
ret
and
adc
jl
jg
sbb
add
inc
sbb
fisttpl
and
adc
into
xor
lcall
adc
ret
mov
orb
push
aam
jnp
dec
lcall
dec
dec
pop
push
sub
int3
xchg
inc
dec
dec
push
jl
pop
mov
mov
mov
sub
rcll
and
xchg
mov
xor
inc
mov
cmp
sbbb
push
pop
inc
arpl
lea
outsb
sbbb
fst
mov
jecxz
jmp
push
test
in
out
sbb
dec
fidivs
adc
pop
fs
cld
pop
nop
fdivrp
sub
or
or
add
or
jl
movsb
inc
push
mov
ss
call
insb
fisttps
jge
aas
dec
aaa
cmpsb
fists
cwtl
adc
mov
adc
popa
jl
mov
aaa
cmp
loope
inc
jle
fsubr
adc
xchg
cmpsl
es
jl
mov
sti
fidivl
dec
in
dec
xor
in
add
mov
arpl
jmp
es
add
in
clc
sbb
loope
push
jno
and
xchg
scas
aas
fdivrl
clc
mov
mov
xchg
pop
mov
xchg
call
pop
pop
out
adc
and
mov
xchg
int
adc
es
ds
pop
push
bound
loope
int3
add
shrl
fisubrs
add
xchg
insb
mov
pop
iret
dec
adcb
mov
adc
add
je
cmp
jnp
xor
int
paddq
fildll
adc
bound
push
pushf
pop
lds
xor
and
cmp
int3
and
dec
out
in
gs
or
dec
cmp
stos
and
ljmp
push
adc
add
add
aaa
inc
addr16
rolb
push
fldt
adc
shll
es
popf
into
xchg
pop
pop
adc
jne
icebp
bound
lahf
mov
negl
popf
xchg
push
mov
sub
cltd
add
sbb
xchg
hlt
movb
jno
ds
and
mov
stos
insb
loopne
js
cmpsb
mov
movsl
xor
inc
outsb
les
cmc
nop
push
sub
icebp
shr
add
cld
out
push
loope
enter
xor
je
dec
adc
jo
leave
add
roll
mov
push
stos
dec
pop
ficoml
shl
sub
jmp
hlt
in
push
movb
movsb
stc
jg
mov
mov
pusha
inc
shll
fwait
cli
negb
push
enter
dec
test
stos
jp
sbb
adc
or
stc
or
sub
dec
enter
jne
and
jo
add
pop
sub
cmpsl
scas
sbbb
or
notl
lahf
out
cmp
fisubrl
pop
mov
stc
cmp
jecxz
dec
or
test
lret
push
mov
scas
popa
adc
adc
xlat
je
aaa
pop
push
mov
pop
call
pusha
cs
inc
pushf
mov
clc
stos
sti
adc
stc
inc
icebp
fs
mov
pop
pop
movsl
enter
inc
in
push
ljmp
cmpsb
div
adcl
and
mov
movl
loopne
sbb
push
cmpsl
cmp
pushf
leave
or
mov
cli
and
dec
jle
push
scas
push
mov
sar
rcll
outsl
inc
xor
push
pop
sub
sbb
loopne
lods
and
aam
inc
stos
dec
imul
or
jo
insl
xchg
jb
and
xchg
pushf
and
dec
mov
aad
std
inc
add
popf
add
outsb
sarb
das
pop
in
jle
sbb
mov
das
dec
sbb
sti
mov
sbb
and
and
inc
xor
aas
sub
sub
and
test
pop
xchg
nop
cmp
icebp
add
int
jae
popa
or
xor
jp
push
sbb
jno
sbb
out
popa
mov
ficoms
loopne
jno
mov
pop
gs
sub
mov
popw
fisttpl
mov
xor
pushf
lods
jno
ljmp
push
jo
sbb
lret
push
push
or
jo
lea
push
adc
push
pusha
loope
push
pop
lock
fld
mov
or
sbb
mov
loop
jns
aad
ljmp
movsb
int
mov
clc
daa
loop
mov
or
adc
inc
mov
lods
ja
mov
popa
and
int
stos
pop
in
inc
pop
sarl
ja
or
js
xor
mov
repz
or
cmpsl
xchg
in
shrb
xchg
pop
push
sub
mov
xchg
cmp
clc
cwtl
rorb
psubusw
add
lods
xor
in
cmp
jbe
mov
lds
sub
out
lds
aam
les
jbe
ret
dec
into
inc
das
ds
daa
stos
dec
in
stos
sbb
jle
jbe
mov
icebp
dec
xor
ja
mov
clc
sar
pusha
out
fnstcw
mov
dec
add
sub
dec
xchg
mov
shl
rolb
lcall
popf
or
push
mov
vmread
mov
sub
pop
xchg
push
cmp
lods
sbb
jns
mov
inc
movsb
mov
push
inc
mov
shrb
mov
xor
cs
fldcw
outsb
mov
inc
hlt
nop
repz
and
call
sub
add
add
adc
subl
in
std
sub
pop
pop
add
sti
mov
popa
es
lret
pop
adc
rol
cmp
sbb
pushf
addb
pusha
stos
fnstcw
push
sub
stc
adc
mov
mov
popf
cmc
ds
fiadds
clc
inc
push
rorb
sbb
inc
push
scas
mov
scas
test
or
sbb
mov
aad
divb
and
push
rclb
cltd
or
cmc
sub
jg
cmpl
ss
mov
mov
mov
pop
decb
imul
mov
sbb
push
in
xchg
insb
mov
add
dec
adc
and
sbb
xchg
mov
pop
lock
iret
xchg
ret
andb
mov
lcall
repz
pop
inc
sti
idivl
mov
inc
lahf
xchg
roll
add
adc
add
push
je
sbb
push
mov
idivb
mov
ss
outsl
pop
push
leave
pop
test
lock
sub
scas
iret
out
sbb
jno
or
negl
inc
aad
popf
xchg
mov
push
lds
sub
sbb
mov
dec
xor
test
shl
movsb
lret
out
inc
mov
ds
pop
aas
cltd
nop
lds
ret
cmpsb
loopne
shlb
xlat
pusha
and
cld
mov
cmpsl
and
pcmpeqw
jge
fldenv
les
test
mov
cs
sbb
xor
mov
jb
pop
aad
pop
and
in
lcall
push
push
pop
subb
push
sbb
ds
sbbb
xor
inc
ret
mov
sub
push
cmc
ljmp
xchg
adc
sub
pop
mov
sbb
hlt
cli
push
sbb
int3
ss
jae
repnz
add
bound
rep
dec
dec
mov
jae
aas
xchg
xor
sbb
loop
cmpsl
shlb
push
sbb
adc
push
in
fwait
popf
xor
ret
xchg
int3
fisttps
fisttpl
pop
dec
aas
push
mov
inc
mov
ds
add
add
popf
xchg
psubb
push
mov
pop
ja
icebp
jo
addr16
repz
dec
pop
xlat
in
jmp
mov
adc
sarl
movsl
arpl
pop
sbb
cmp
mov
sbb
and
dec
jnp
jns
dec
xorl
in
xchg
enter
int3
ret
ss
xchg
dec
push
cmpsl
xchg
adc
fstpt
mov
ret
mov
pop
mov
movsb
jns
in
imul
push
inc
sub
dec
iret
outsl
int3
add
cmc
icebp
jne
lods
jg
mov
jbe
and
jns
movsb
sbb
or
mov
xor
inc
push
data16
dec
mov
sub
cwtl
jno
jecxz
loope
xorl
sbb
push
or
sub
dec
out
lea
xor
data16
pop
sub
insl
in
push
popf
daa
mov
scas
and
insb
repnz
push
stos
cmp
sbb
adcb
mov
jg
push
jmp
pop
loope
adc
dec
jno
inc
pop
mov
daa
ret
idivb
xchg
negb
cli
adc
test
orl
pop
icebp
xor
adc
mov
out
mov
mov
rcl
cmpsb
ss
scas
rorl
cltd
xor
lds
in
insb
mov
jno
jno
scas
sbb
test
rolb
in
push
sbb
dec
dec
xchg
pushf
fucomp
mov
popa
lahf
xor
adc
mov
cmp
xchg
ja
data16
sbbl
ss
fs
into
call
mov
loope
ficomps
pop
in
mov
push
insl
xchg
rcll
sbb
test
test
loopne
xchg
imul
push
dec
ds
rorl
jl
scas
push
pop
adc
aas
dec
jns
adc
divb
cli
pop
aam
mov
cmp
mov
femms
dec
or
mov
ficompl
and
cmpps
sub
in
sbb
ret
inc
icebp
icebp
lret
xor
sbb
outsb
roll
xchg
nop
adc
jbe
lods
pop
imulb
dec
insl
jb,pt
cmpsb
pop
pop
sbb
xchg
adc
push
push
or
jl
pop
xchg
scas
das
add
pop
cmp
or
ljmp
pop
leave
adc
lahf
bound
dec
testl
or
or
cli
das
je
sbb
icebp
cmpsb
stc
jge
in
jle
scas
mov
insl
aad
lea
and
aas
xchg
into
or
fildll
testb
in
mov
lods
mov
dec
test
bound
mov
push
fadds
add
push
pop
stc
jg
addr16
inc
push
push
mov
aad
out
das
out
outsl
repnz
lds
mov
add
aam
nop
jns
xchg
or
lea
or
mov
sub
pop
jne
notl
lock
sub
or
sub
std
jo
nop
or
adc
stos
cltd
stos
and
and
and
jmp
add
ret
jge
aaa
loope
repz
stos
cld
xchg
mov
sub
adc
pop
xor
data16
lods
push
aam
and
and
jmp
aas
adc
jae
fcoml
lods
das
repz
or
mov
inc
int
cmc
test
xor
ficompl
inc
les
addr16
repnz
aad
repnz
xor
xor
loop
imul
xchg
jecxz
ljmp
cli
lahf
mov
mov
in
rolb
mov
int3
out
xchg
fwait
push
movsl
pop
aaa
test
push
pop
iret
xor
push
mov
pop
lds
scas
xor
ljmp
lcall
dec
add
fimull
sbb
scas
mov
fistpll
adc
js
aas
inc
sbb
cmpsl
sahf
fdivrl
mov
ds
into
outsb
sub
ficoms
dec
les
xlat
or
and
dec
call
cmp
rcll
sarl
out
adc
aam
data16
or
lods
xchg
xchg
or
or
js
clc
jmp
pop
sbb
push
clc
dec
aad
imul
xorl
hlt
xor
loope
jmp
repnz
decl
adc
push
out
test
jge
sub
insb
lods
dec
adc
sbb
clc
leave
dec
movsl
sub
push
imul
filds
sub
xor
fnsave
and
or
das
jae
lea
and
cmp
sub
add
pop
shlb
pop
call
sub
imul
xor
fwait
arpl
in
mov
xor
xor
and
aad
je
into
xchg
jnp
imulb
rolb
jns
insb
inc
testb
les
mov
jnp
xor
scas
jae
pop
pop
ja
leave
sti
push
mov
mov
inc
mov
dec
cli
pop
cmc
pop
jns
push
sub
aam
mov
sbb
jmp
add
adc
inc
jbe
jl
jbe
test
mov
pop
sahf
loopne
and
and
xlat
jns
in
push
in
and
fs
enter
cld
xchg
xor
add
cwtl
add
lods
jmp
ret
lcall
imul
nop
sarb
jno
es
lods
mov
pop
pop
nop
mov
adc
ret
out
sub
mov
in
clc
dec
mov
dec
pop
aas
cmc
scas
int
or
pop
loop
pop
scas
pop
das
ja
inc
dec
lock
lcall
cmp
fstpl
xchg
out
fcompl
inc
sbb
dec
jmp
pop
icebp
popa
sub
add
xor
dec
pop
loopne
mov
gs
xor
add
movhps
insl
cld
inc
fstl
dec
test
pushf
outsl
ljmp
dec
mov
jns
push
out
add
dec
add
inc
xchg
xor
orb
pop
sbb
jb
cwtl
mov
rcl
add
aaa
mov
ds
aam
push
andb
fstl
rdtsc
sbbl
xor
xchg
scas
fistl
sbbb
ficomps
pop
xchg
scas
push
adc
gs
pushf
or
mov
add
adcl
roll
cwtl
mov
dec
cmc
sub
sbb
jmp
pop
ljmp
enter
mov
aas
sub
ljmp
add
push
imul
xchg
test
mov
jns
in
sbb
stos
mov
les
cs
cwtl
scas
scas
add
ret
shll
xor
xchg
out
sub
enter
mov
rcll
mov
lds
mov
and
mov
imul
cmp
icebp
arpl
negb
jno
imul
popf
nop
mov
or
dec
dec
pop
icebp
cmpsb
test
fbstp
and
ljmp
jmp
insl
lock
dec
scas
imul
or
imul
fdiv
sub
cmpsl
xchg
mov
push
cmp
or
mov
fidivrs
pop
ds
or
movb
xchg
cli
pushf
mov
or
scas
and
jbe
in
sahf
pop
push
jnp
jns
adc
insb
cmp
lcall
jo
push
gs
push
lcall
jne
into
pop
daa
js
sub
lret
adc
mov
in
loope
ds
cmp
mov
cli
pop
into
movsb
popa
push
mov
fs
push
or
mov
loop
lds
or
cltd
out
sbb
push
inc
xchg
arpl
push
jne
pop
mov
insl
adc
push
push
adcl
insl
negb
xchg
ss
mov
adc
cmp
out
inc
loop
push
xlat
lret
cmp
daa
mov
cld
imul
sti
mov
push
pop
xchg
pop
inc
pop
pop
into
lock
cmpsb
insb
scas
push
scas
add
ds
shll
inc
fiadds
jne
out
mov
rcl
sarl
lret
testb
add
inc
ficompl
mov
mov
aad
addr16
stos
setbe
aas
clc
xchg
adc
ja
out
and
and
pop
or
fstl
leave
push
mov
in
inc
iret
dec
dec
out
lods
into
aad
insl
jno
and
int3
out
sbb
repnz
and
jmp
fcmovne
jl
pop
cwtl
in
jmp
and
stos
ret
sbb
mov
dec
js
int
push
push
add
cmp
mov
dec
lcall
loope
dec
les
daa
test
xchg
rcll
sahf
or
scas
insb
cmpsb
mov
call
pop
rcll
mov
popf
xchg
cmp
jbe
dec
xlat
das
xchg
mov
xlat
stos
inc
mov
mov
push
test
lock
push
mov
daa
out
dec
loop
mov
jnp
sbb
add
push
mull
and
aam
mov
pop
pop
into
pop
cmpsb
fwait
mov
jp
loop
jno
adc
sbb
std
mov
out
imul
push
ret
iret
loopne
cs
sub
divb
enter
pushf
xlat
into
int
or
dec
enter
push
lret
int3
dec
dec
push
sub
add
or
test
adc
xchg
stos
xor
mov
out
inc
ds
movsb
push
jmp
pop
jecxz
or
inc
outsl
aas
test
out
and
gs
cli
push
cmp
ljmp
inc
subl
mov
dec
add
pop
pop
int3
je
stos
cmp
pusha
adc
sbb
jbe
loop
dec
iret
mov
sub
or
repz
test
xlat
dec
mov
ret
scas
mov
cmp
cltd
push
dec
push
cli
pop
rcr
xchg
hlt
dec
sub
xchg
push
cmp
cli
movsl
sbb
cmc
inc
shl
pop
jno
inc
aas
lret
jmp
sti
xlat
adcl
imul
mov
add
rol
shlb
testl
sub
test
dec
pop
cmp
lret
loope
out
adc
bnd
lahf
push
and
outsl
cmp
call
notl
scas
mul
into
out
mov
jl
loop
sbb
idivl
xchg
das
std
sub
cmp
out
rolb
pop
mov
mov
dec
mov
cmp
in
adc
aam
cmp
sbb
inc
mov
dec
mov
xor
imul
jp
sbb
hlt
data16
jno
test
and
or
int3
loop,pn
insb
mov
or
out
shl
lahf
sbb
mov
imul
mov
mov
mov
stos
scas
sub
fnsave
sysexit
lea
dec
fcompp
mov
jbe
mov
dec
mov
mov
rorb
dec
jp
sub
rol
sbb
dec
inc
sbb
or
cmp
rorl
rorl
or
outsl
into
sbb
jo
push
pop
adc
adc
mov
imul
pop
outsb
fs
mov
aam
push
cmpsl
data16
and
rclb
sarl
test
sbb
lods
sahf
push
cmc
dec
push
fdivs
scas
sahf
aad
scas
iret
std
stos
mov
sub
sub
cmp
push
inc
cld
mov
iret
push
xchg
insl
lret
mov
lock
fisubl
mov
push
sub
inc
cli
add
out
cld
jmp
in
mov
cwtl
pop
and
and
pop
jmp
insl
es
inc
das
adc
loop
cld
jo
arpl
je
push
stos
icebp
mov
sub
sub
cmp
xlat
in
popa
lds
daa
and
je
aam
dec
xor
and
sbb
fsubl
pop
cltd
dec
sub
push
insb
stos
test
mov
push
xchg
imul
out
push
cmp
leave
sarb
or
adc
sbb
popf
jbe
or
sub
test
cmpsl
sbb
es
push
pop
loope
ret
dec
and
add
cmc
or
imulb
sarb
idivl
mov
push
ljmp
shl
into
repnz
fidivrl
xor
dec
or
enter
neg
mov
rcrl
stc
icebp
adc
mov
push
test
mov
imul
or
lods
xchg
pop
mov
cmc
lcall
sahf
push
mov
test
popa
dec
pop
cld
cwtl
push
addr16
jp
sbb
rorl
and
inc
lea
je
stc
loopne
sbb
inc
bound
xlat
push
lds
enter
sbb
cmp
call
jbe
or
fstps
ljmp
push
fistpll
fistps
lds
mov
rcr
out
lods
popf
daa
idivl
fisttps
jns
icebp
movsl
fdivl
push
ss
cmpsb
add
pop
cmpsl
pop
sar
cmc
mov
shr
xchg
imul
and
negb
mov
xor
sbb
inc
xor
or
jl
mov
push
outsl
fwait
inc
lret
adc
pusha
mov
movsl
pop
sbb
sub
adc
push
push
shl
xor
mulb
dec
sbb
add
lret
lods
out
stos
ret
ja
loope
sub
loope
scas
loopne
push
jmp
lock
mov
pop
mov
fs
das
adc
lcall
popl
lods
or
mov
adc
cmp
lcall
dec
aas
ljmp
mov
jae
fnstsw
push
aam
jmp
push
pop
pop
inc
mov
jae
jo
shrl
call
das
lods
imul
imul
mov
add
enter
popa
jg
adc
sub
cld
jp
add
imul
xchg
mov
sub
rcll
mov
push
inc
pusha
mov
pop
fisubrl
cltd
stc
xchg
addr16
dec
add
shll
sahf
stos
jno
in
pop
das
mov
repz
aas
in
pop
pop
call
pop
stos
xchg
mov
ret
fnstcw
je
pop
mov
out
sub
imul
fldt
je
push
popa
mov
pop
sar
fldt
cmpsl
lods
fidivl
sub
sub
jecxz
xchg
and
pop
xchg
loop
outsb
adc
and
outsb
lock
idiv
xchg
stos
lcall
mov
fisubrs
callw
pop
int
push
popf
mov
enter
xor
pop
lods
mov
and
cmp
add
outsb
pop
sub
inc
cmc
aas
push
out
pusha
mov
cmp
lea
mov
cmp
push
jae
mov
loopne
adc
xchg
sar
push
adc
pop
pop
shrl
bound
xor
inc
xchg
inc
inc
test
mov
lock
xor
dec
dec
or
mov
subl
pop
lea
lock
mov
or
in
insb
add
sbb
add
jbe
cmp
test
sbb
lods
cltd
sub
jmp
repz
dec
adc
xor
dec
jb
mov
pop
sbb
popf
sti
push
icebp
test
xor
leave
mov
loopne
ss
jge
mov
xchg
enter
mov
xchg
lea
sbb
lahf
cmp
xchg
xchg
cs
repz
xchg
fldl
dec
jmp
incb
pusha
xchg
dec
cmp
push
dec
ffreep
push
cs
dec
cmpl
jg
xchg
add
test
push
gs
xchg
aam
or
aas
inc
pushf
and
cmp
xchg
sub
mov
mov
into
pop
pop
fstl
imul
call
pop
cmp
imul
jae
jp
ss
lock
sub
sbb
loopne
mov
inc
mov
dec
jno
fwait
mov
std
inc
cltd
xor
push
pop
xchg
jb
rorb
mov
rol
sahf
in
imul
mov
fistl
adcl
cmp
jne
mov
xor
cmpsl
mov
inc
pop
hlt
mov
mov
lds
in
fmul
mov
fisubs
xchg
cmp
repz
enter
stc
xchg
mov
lods
mov
cld
dec
push
pop
mov
rorl
enter
pop
es
test
loop
cli
sbb
or
mov
inc
pop
jnp
xchg
in
dec
and
popa
mov
ljmp
cmpsb
call
dec
insl
mov
les
sbb
adc
sbb
sarb
sahf
mov
and
dec
lcall
imul
add
std
outsl
cli
mov
call
andb
rcrl
push
inc
jg
fwait
cmpsb
call
insl
cmpsl
or
shl
insl
adc
mov
push
sbb
add
test
std
call
sub
push
loopne
or
lahf
pop
add
jb
ret
popa
pop
lock
outsb
ljmp
dec
fistps
mov
pop
mov
cmp
leave
sub
movsb
ror
cltd
sub
cmp
lahf
shrl
in
in
sub
rorl
jmp
inc
mov
or
fidivrs
cmc
mov
orl
mov
xor
fistpl
add
pop
add
pop
jecxz
dec
cmp
in
jbe
addb
fbld
pop
out
fs
mov
jge
arpl
dec
jl
or
mov
and
fmull
sbb
jb
movsb
add
popa
xor
inc
mov
fwait
mov
push
mov
jg
cmp
mov
jne
lods
stos
pop
int3
dec
adc
outsb
out
mov
inc
aam
push
xor
inc
pop
insl
or
sub
shll
inc
rcrl
push
mov
ss
jle
nop
or
push
jb
xchg
cmp
and
jmp
jle
scas
cwtl
sbb
in
push
dec
xchg
sub
aas
xchg
mov
mov
fldl
inc
cmp
cmp
es
push
sub
cld
shlb
cmp
bound
addb
sub
cmp
adc
int
lods
aas
jg
ret
fs
mov
cltd
repz
call
pop
testb
sahf
daa
ss
icebp
or
enter
int3
adc
fdivr
ljmp
cmp
push
xchg
fsubp
int
es
xlat
pop
mov
xor
mov
dec
add
outsb
or
mov
sub
xchg
adc
movsl
mov
and
dec
pop
push
cmp
ficoml
jae
or
outsb
imul
fs
jnp
pop
sub
in
push
movsb
sbb
shlb
rol
adc
and
cmp
pop
lods
jp
mov
fldt
fdivs
daa
mov
mov
scas
ljmp
push
mov
jno
or
mov
stos
les
jae
inc
push
roll
mov
mov
add
mov
popa
and
push
movsb
sub
in
mov
jae
sub
or
adc
loope
incl
xor
push
xor
xchg
aaa
dec
push
inc
clc
adc
in
rorl
sysexit
test
in
enter
push
xor
mov
adc
movsl
xchg
mov
mov
es
mov
faddl
movsl
testl
xor
push
or
out
int3
clc
andl
dec
out
pop
cmovg
mov
mov
jmp
cwtl
cmp
sub
or
add
xchg
aad
popa
aas
insb
inc
cmp
adc
shlb
ficompl
movsb
adc
insb
imul
inc
pop
ss
push
fwait
repnz
xchg
lods
jecxz
ljmp
scas
iret
in
cli
cmc
int3
sarb
push
dec
push
xchg
cmp
and
addr16
cli
sbb
rcll
sbb
popf
push
test
in
and
mov
mov
pusha
insb
xchg
xorl
fwait
cwtl
pop
push
dec
fbld
ret
dec
loop
xchg
aam
xor
cli
insl
xchg
jl
push
mulb
xor
sbb
lods
adc
lods
lret
jae
movsl
std
ja
jns
fiaddl
fisttps
sub
mov
mov
mov
bound
xor
push
in
cwtl
inc
mov
mov
xlat
dec
cmp
cs
aaa
cld
jp
das
out
mov
iret
xchg
pop
shr
mov
xchg
out
dec
pop
imul
xlat
xchg
xorl
cmp
aaa
xor
pop
out
push
fsts
mov
andl
test
loop
mov
sbb
pop
rol
outsl
mov
jg
in
and
pop
push
rorl
aaa
or
xchg
jns
leave
and
imul
adc
sbb
cltd
pop
push
repz
or
xor
inc
lret
inc
aam
jg
adcl
adcl
cltd
ds
pop
repz
popa
fldenv
jno
add
loope
push
shl
jne
mov
xor
dec
xor
shlb
test
push
fcmovb
jb
add
mov
mov
insl
add
out
adc
sbb
cmp
lahf
fiaddl
add
call
xchg
mov
jb
out
dec
xchg
lods
loop
aam
hlt
shl
mov
inc
ret
std
sub
andl
je
push
mov
mov
pusha
lcall
fstpl
sub
fcmove
lret
cmp
pop
sbb
cmc
jecxz
popa
inc
sub
jl
mov
sbb
xlat
sub
test
dec
sub
mov
je
divl
mov
mov
jb
pop
xor
or
int
adc
icebp
mov
adc
cld
push
jae
rcll
add
ss
mov
mov
movsb
ljmp
dec
cmp
insl
mov
es
cmp
cmc
sub
test
jo
pop
enter
mov
es
movsb
bound
cld
loopne
or
ret
inc
add
insl
inc
dec
shr
and
jnp
push
inc
sahf
mov
adc
out
notl
jmp
dec
movsb
sbb
lea
mov
push
and
imul
lcall
pop
cs
or
or
xchg
aad
adc
dec
repz
idiv
xor
push
lds
imulb
adc
shll
xor
imul
push
fistpll
cmpsb
sbb
call
std
jg
xor
lods
push
outsl
lods
mov
test
jne
cli
test
ffree
mov
mov
aam
mov
test
gs
mov
cld
loopne
fldt
adcb
jno
jns
imul
jg
fistl
lret
push
inc
xor
std
cmp
gs
push
in
add
xor
and
ret
cmp
add
sbb
and
xor
mov
dec
adc
daa
push
out
mov
rclb
mov
cmp
mov
or
adcl
xchg
add
scas
ficoms
outsb
pop
mov
inc
rcl
lcall
dec
xor
es
pop
mov
aam
outsb
lea
xor
sbb
jg
fdivl
pushf
fisubrs
fs
sbb
movsl
lret
dec
push
pop
sti
rcrb
test
bswap
stos
xor
std
imul
sbb
shll
or
bound
mov
sbb
cmp
fucomp
out
jp
jle
mov
lahf
mov
pop
inc
dec
mov
rol
adc
sub
cmc
stos
fdivl
into
mov
jmp
sti
movsb
xchg
or
loopne
and
in
in
fmull
ret
fstpt
mulb
and
adc
mov
lret
jge
mov
lret
fwait
sub
jg
cmp
push
inc
xchg
stos
mov
cs
mov
inc
mov
in
sbb
nop
ljmp
loop
pop
add
das
xor
dec
push
lods
push
out
cmp
shl
adc
mov
push
addb
orb
or
in
lahf
push
test
mov
inc
jb
cmp
pop
lret
push
imul
mov
fmull
mov
push
mov
mov
mov
pop
fisubs
jg
out
hlt
leave
test
sbb
push
inc
pop
lods
push
rcl
inc
and
jne
mov
cld
rcr
pushf
cwtl
xchg
dec
mov
loopne
daa
cmpsb
jne,pt
sbb
nop
add
flds
nop
mull
insb
mov
mov
inc
test
out
mov
leave
cmpsb
outsl
dec
cld
mov
insb
or
jle
pop
daa
je
inc
mov
xor
sahf
sub
std
lock
xchg
cli
cmc
test
xchg
pop
fiaddl
loopne
clc
cltd
mov
sti
imul
cmp
mov
aam
cmp
xchg
adc
push
push
aaa
push
aad
pop
repz
inc
iret
cmp
sbb
sahf
push
loope
inc
lahf
inc
adc
jno
mov
stos
out
repz
stc
cvtdq2ps
push
jb
mov
arpl
and
popf
out
or
cmp
shll
xor
dec
xor
adc
mov
sbb
mov
aas
int
cmpsb
clc
mov
sbb
dec
mov
mov
faddl
mov
jl
sub
jp
fs
cmp
jno
mov
dec
push
aad
ljmp
div
stos
push
shll
xchg
lcall
iret
icebp
cld
adcb
xchg
in
lea
lret
sti
push
aas
xchg
repz
jg
lcall
loopne
inc
dec
flds
sbb
and
adc
mov
xor
cmp
aad
lahf
jb
jle
fnstsw
jle
mov
out
push
test
ficoms
ret
and
inc
mov
sub
cmp
ret
rol
mov
aas
dec
xor
cmp
mov
in
int3
je
icebp
js
fdivr
jns
mov
push
or
push
push
cmp
mov
cs
iret
push
pop
jge
xchg
scas
mov
insl
in
cld
jmp
cmp
mov
out
mov
jg
int
out
imul
dec
or
mov
or
xor
adc
rorb
and
adc
inc
inc
xor
or
jecxz
fucomi
aas
lods
xor
cmp
inc
mov
roll
ret
inc
inc
dec
xor
insl
mov
push
push
fidivrs
xor
inc
hlt
sbb
outsl
mov
push
sbbb
daa
imul
pop
addl
push
mov
scas
xor
mov
xchg
xchg
adc
sub
mov
mov
sbb
addl
and
mov
mov
not
lret
cmp
xor
jbe
add
in
mov
cltd
ljmpw
xchg
push
sub
sub
call
pop
aaa
pushf
mov
popl
pop
addr16
xchg
inc
pop
or
xor
bound
dec
ret
cmc
fwait
pop
cmp
aas
outsl
jge
mov
lahf
test
adc
inc
cli
hlt
insb
xchg
xchg
inc
or
mov
sbb
int3
push
dec
lock
push
lret
push
sbb
push
mov
out
test
sub
inc
adc
sbb
insl
jae
lret
in
pop
test
pop
mov
out
mul
push
adc
pop
inc
push
lods
mov
pusha
inc
jg
lret
data16
ret
fwait
xor
dec
iret
mov
ficoms
or
adc
mov
pop
sbb
jmp
push
cmp
repnz
int
in
call
xchg
xchg
jge
movsb
xor
jge
xor
xor
rorb
cld
test
scas
pop
inc
imul
insb
jnp
inc
mov
pop
sbb
cmp
stc
push
pop
into
jnp
jno
xor
dec
jnp
dec
mov
cld
aad
dec
sbb
cmp
inc
jae
das
in
adc
pop
fdivs
xchg
add
mov
iret
notl
sbb
insl
js
popf
mov
xor
in
cli
add
cmc
xor
jge,pn
lret
add
and
fwait
nop
jle
cmp
mov
lcall
subl
xor
jbe
sahf
int3
dec
cltd
inc
push
pop
lock
mov
test
loope
fidivrs
ljmp
inc
ljmp
sbb
mov
mov
dec
in
loope
gs
dec
xchg
dec
jl
inc
cmc
fsubr
nop
jno
lahf
add
imul
sub
pop
pcmpeqw
inc
push
jb
inc
push
sti
mov
into
jmp
add
jbe
loop
mov
push
dec
push
xchg
jnp
and
inc
xchg
sub
sbb
outsl
test
push
add
cmpl
lea
mov
scas
outsl
mov
sti
jne
dec
in
mov
xchg
or
adc
out
cmp
decl
adc
mov
mov
sub
sbb
pop
push
test
out
cltd
mov
push
addr16
lds
ffreep
jge
or
fdivrp
mov
lcall
movsb
fcoms
dec
js
pop
dec
pop
cmpsl
in
mov
add
inc
dec
dec
imul
cld
in
mov
in
dec
cmp
pop
sahf
pop
icebp
mov
xchg
push
mov
mov
sahf
ss
push
rolb
loop
icebp
pop
jno
xor
inc
ss
sub
test
insb
jg
lahf
inc
mov
cmp
test
out
scas
adc
cmpsb
or
push
sti
lds
push
out
dec
jno
addr16
push
stc
inc
js
mov
call
and
adc
outsl
adc
iret
rcrb
cltd
out
mov
int
pushf
test
xlat
mov
test
cltd
push
sbb
xor
push
loope
xor
nop
dec
das
xor
jl
adc
js
ljmp
es
mov
ljmp
jle
add
sbb
jmp
das
aam
xor
jp
inc
out
mov
add
pop
and
test
mov
pusha
addl
fisttps
in
or
jne
imul
iret
adc
jne
lds
out
jo
fsts
andl
mov
dec
popl
inc
jmp
into
notb
jbe
adc
inc
test
sbb
inc
fwait
dec
pop
sbb
push
lea
mov
xor
stos
ficoms
mov
stc
rol
mov
dec
or
and
pop
inc
in
jno
cli
or
js
out
aas
pop
aad
inc
insb
ja
pop
hlt
ljmp
dec
and
pop
shrb
and
or
xchg
and
adc
lret
dec
repz
clc
stc
lcall
jmp
mov
rcrb
sbb
cs
jns
imul
mulb
movsl
aad
mov
adc
cli
sti
xor
sbb
mov
and
mov
in
sbb
out
mov
out
and
js
or
inc
jne
pop
sbb
mov
adc
hlt
mov
mov
js
inc
cmp
das
fst
xor
clc
cmp
int
mov
out
pop
lds
jno
sbb
lahf
test
rcr
imul
lods
xchg
push
cmp
inc
orb
xlat
xchg
cmp
xor
shll
mov
ja
out
lcall
fstp
fcompl
or
or
movsb
inc
mov
push
clc
cmpsb
dec
and
pop
cmpl
mov
mov
ret
mov
push
paddusb
jp
repz
cmp
xchg
mov
aad
xor
xchg
pop
sub
gs
push
lret
xor
rcl
ret
mov
or
jle
shlb
outsl
sbb
arpl
int3
lock
push
sub
fiaddl
aas
mov
aad
lret
xchg
in
in
push
xchg
add
fnstenv
popa
test
les
cmp
sub
push
or
mov
lret
fdivp
pop
and
cmp
repz
inc
mov
adc
or
scas
fimull
xchg
pop
add
fisttpll
stos
fdivr
dec
clc
mov
mov
call
out
in
mov
pop
sbb
and
stos
testb
push
mov
inc
sub
adc
xchg
shlb
daa
aam
rclb
xchg
dec
cmpsl
int
rol
lds
push
sub
xchg
mov
test
pop
xchg
arpl
gs
icebp
ds
stos
mov
bound
in
lret
push
xlat
loope
pop
cmp
xchg
call
xchg
sub
push
and
sbb
mov
push
mov
cmp
rclb
xor
ret
xchg
repz
mov
add
dec
dec
mov
mov
cmpsl
sub
pop
or
sub
scas
mov
mov
mov
mov
in
lahf
shrl
dec
js
jb
lds
insb
imull
sbb
xor
jo
fcos
push
aaa
or
add
adc
xchg
add
dec
in
jmp
pusha
inc
pop
in
mov
cmp
popf
sti
push
cld
xchg
xchg
mov
sub
out
add
stc
cmp
push
xor
push
inc
imul
data16
pop
jne
test
in
lds
lods
push
dec
or
add
and
mov
sti
vmread
cmpsb
pushw
fidivs
int3
sbb
add
fisubs
push
loop
cs
aad
xorb
push
t1mskc
out
daa
in
sub
adc
mov
or
jecxz
cmp
dec
test
inc
mov
sub
add
sub
adc
jnp
push
cmpsl
sbb
hlt
pushf
mov
inc
sbb
and
pop
ret
or
inc
fwait
orb
fcmove
pop
push
sbb
in
fidivrs
insb
xchg
pop
cmp
movsl
outsb
out
test
imul
imulb
mov
mov
outsl
fisttpl
leave
sub
or
outsl
pop
clc
cmp
jo
inc
jo
mov
dec
ljmp
imul
and
adc
shlb
shlb
dec
cli
mov
push
jmp
test
and
push
push
sub
jecxz
mov
imul
push
xor
neg
sbb
lock
adc
in
xchg
jge
imul
dec
jle
mov
je
dec
sub
js
addl
xchg
xchg
adc
push
mov
adc
jp
sahf
mov
mov
sub
shlb
out
int
xor
dec
sbbb
xor
dec
mov
add
xchg
pop
xor
loop
push
popa
push
mov
stos
mov
ret
xor
mov
dec
dec
inc
xchg
in
or
stos
hlt
fs
rolb
sar
mov
push
imul
out
xor
in
jp
xchg
or
push
ljmp
jmp
mov
sub
into
push
adcb
aas
add
xor
inc
pusha
sbb
inc
sbb
lock
enter
mov
and
mov
jl
push
push
hlt
jne
gs
mov
insb
sbb
outsl
xchg
sbb
std
sbb
pop
fistpll
add
or
movsl
adc
pop
mov
sbb
xchg
sbb
and
add
mov
sbb
std
insl
imul
shll
dec
inc
fisubrs
cmpsl
jge
scas
pop
iret
pop
jmp
mov
jbe
mov
jnp
es
les
jne
test
pop
cwtl
add
cli
inc
jge
ss
push
mulb
call
mov
mov
lds
mov
push
in
dec
add
xor
repz
add
jae
jae
ljmp
cmp
mov
repnz
imul
inc
and
imul
cwtl
aas
push
push
mov
cli
test
orb
sub
aaa
push
mov
sets
sbb
xchg
cs
fcoms
add
lcall
sbb
lock
dec
fidivrl
xchg
mov
mov
or
sub
sub
aas
fstps
push
iret
test
or
adc
mov
xchg
pop
add
adc
mov
shlb
out
ljmp
fldcw
mov
mov
xor
nop
int3
movsl
inc
or
pop
or
jecxz
aam
dec
cmpsl
push
idiv
push
ljmp
inc
xchg
mov
je
lods
ret
ds
dec
sub
push
stos
adc
in
pop
inc
outsl
mulb
ret
jb
sbb
fisubl
sti
stos
lods
push
fs
sbb
dec
lcall
and
movsbl
mov
inc
push
cltd
dec
stos
outsb
xchg
in
mov
imul
jl
xchg
dec
inc
mov
jecxz
nop
icebp
inc
add
push
push
cmp
cli
push
add
pop
pop
xor
addb
sbb
add
lcall
push
xchg
test
mov
or
rcr
pusha
jge
adc
inc
imul
xor
popa
pop
pop
lods
int
xchg
push
fdiv
mov
add
cltd
add
jge
mov
mov
enter
mov
mov
rclb
enter
xchg
fists
pop
lret
and
ja
hlt
enter
xor
push
je
repnz
aaa
fbstp
mov
test
dec
lods
test
clc
gs
pop
dec
inc
sbb
ficoml
xor
scas
mov
add
ljmp
pop
mov
fisttpll
push
mov
xchg
aaa
sub
mov
xchg
push
out
test
cmc
cs
lds
out
icebp
pop
adc
dec
mov
cmpsb
loopne
test
mov
xorb
ret
test
pop
inc
cli
pop
rcll
data16
push
out
inc
icebp
mov
push
adc
test
push
inc
test
cmpsl
mov
gs
sub
sbb
cltd
mov
push
repnz
lds
clc
add
or
roll
shll
add
mov
ret
mov
ficoml
lea
xor
cmp
inc
sbb
dec
xor
xchg
adc
xor
mov
das
imul
rolb
cmp
fisubs
hlt
bound
sar
jecxz
sub
mov
orb
outsl
pop
aad
daa
fsts
outsl
jg
jmp
stc
notb
in
dec
movsb
cld
mov
adc
push
xchg
jns
pop
push
sbb
stos
addb
imul
jae
dec
std
es
mov
lret
mov
xor
popf
iret
jmp
mov
arpl
je
das
lods
lods
enter
dec
mov
cmpsb
outsb
scas
add
aaa
fs
cmpsb
test
xchg
cld
ror
push
jmp
sbb
jle
xchg
mov
fadds
sti
mov
adc
sbb
jo
mov
sti
cmpsb
mov
jae
movsb
jb
fildll
xor
cmc
adc
jae
testb
jmp
in
pop
imul
mov
faddl
push
inc
push
je
fucomp
xor
test
lds
jno
addb
fbstp
adc
pop
fstpt
adcb
jmp
push
dec
hlt
pop
hlt
xorl
sti
cmpsb
pop
mov
cmp
and
pop
add
pop
pop
cli
push
mov
enter
scas
hlt
cmp
cli
inc
cmpb
push
clc
cmc
inc
es
add
lea
lods
fcmovnbe
jmp
outsl
sahf
jb
pop
loope
stos
sti
ljmp
leave
push
jge
push
sbb
xlat
mov
clc
fwait
mov
in
out
fcmovne
repz
adc
cmp
jge
js
cmp
cmp
dec
test
adc
mov
xlat
insb
jl
movsl
xor
gs
fs
add
cmp
fwait
outsb
and
dec
pop
out
fcomps
lods
add
cmp
xlat
add
pusha
mov
int3
int3
je
cmp
dec
mov
out
inc
push
ret
scas
jmp
pop
or
sbb
in
mov
pop
imul
cmp
dec
sbb
fiaddl
pop
and
imul
mov
fadds
insb
in
fwait
add
arpl
insb
add
add
inc
dec
outsb
rcr
xor
sbb
cmpsb
inc
cmp
out
nop
pushf
add
mov
cmp
dec
xor
xor
xlat
cs
push
movsl
lods
loope
mov
mov
shll
cmp
pop
test
push
js
aaa
push
out
enter
pop
jp
xchg
fs
push
push
push
jle
jo
mov
pop
jo
cli
xor
push
inc
scas
imul
fdivrl
mov
or
inc
cmp
imul
mov
addr16
lcall
scas
and
or
shl
jb
mov
xchg
xor
fdivrl
daa
add
insb
mov
inc
sarb
daa
testl
dec
out
sahf
iret
push
hlt
mov
fidivl
mov
shr
sbb
push
jae
dec
mov
sub
daa
adc
push
ja
pop
xor
push
popf
inc
insl
sbb
dec
repz
inc
das
cmp
les
enter
pusha
dec
in
dec
pop
popf
xchg
cmp
in
xchg
ret
je
stos
pusha
and
shlb
xchg
imul
xchg
mov
ljmp
sarl
loope
dec
push
outsl
pop
sub
xor
pop
xchg
popa
outsb
inc
pop
lret
cwtl
lret
inc
lcall
daa
cmp
adc
aam
fistpll
int
sub
or
pop
shll
push
mov
cltd
test
sbb
or
dec
in
out
mov
sbb
mov
mov
insl
xchg
cmp
das
mov
into
clc
lods
cs
jbe
fdivrs
rcll
push
jge
mov
popa
jne
jnp
or
mov
cmp
inc
notl
insb
sahf
push
inc
mov
pushf
add
xchg
test
mov
in
add
adc
jno
adc
insl
adc
pop
push
push
aad
mov
bound
cwtl
mov
jnp
cld
sahf
mov
lahf
adc
mov
xchg
xor
test
mov
sub
push
clc
or
jo
push
int3
mov
mov
std
repz
add
mov
dec
push
mov
inc
and
sub
cmp
jno
pop
jg
dec
cs
mov
mov
xor
or
mov
shld
cld
pop
or
cld
shl
cmp
fisubl
int3
nop
dec
mov
inc
movsb
xor
and
jb
shl
mov
insb
stos
ficompl
lret
xor
fisubs
xor
push
aaa
pop
xchg
movsb
and
stc
xchg
bound
leave
mov
js
fsubl
xchg
insl
cmpsb
iret
and
xchg
xchg
test
das
ja
cmp
cmpsb
xchg
lods
int3
adc
out
sbb
rcrl
and
out
push
ljmp
lods
push
sub
sbb
lods
dec
adc
aam
and
add
popa
add
call
ljmp
js
movsb
jg
cmp
ss
pop
sti
mov
pop
push
repz
addr16
int3
pop
jo
adcl
js
add
mov
push
in
pop
xchg
mov
cmp
pop
push
xchg
xchg
xchg
xchg
movsl
xlat
xchg
xchg
xchg
xchg
xchg
xchg
inc
xchg
xchg
xchg
xchg
xchg
xchg
cmp
pop
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
