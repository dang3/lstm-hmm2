pop
movsb
jge
add
call
out
les
dec
iret
test
lods
mov
jnp
xchg
cmpsl
outsb
movsb
cmp
rorb
xchg
mov
mov
arpl
enter
repz
ja
jl
mov
sbb
dec
pop
lds
mov
ficompl
push
mov
mov
pop
adc
arpl
jo
dec
sbbl
out
or
push
jo
popf
ficoms
rorl
mov
xor
bound
filds
mov
data16
pop
xlat
sub
scas
hlt
inc
push
addr16
leave
add
xor
jb
out
mov
push
mov
das
cli
fmuls
cmpsl
sbb
mov
xchg
sub
mov
mov
pop
pop
mov
dec
scas
cs
inc
les
mov
adc
adc
cli
sahf
jle
pop
sbb
add
mov
xchg
jmp
push
ljmp
int3
imul
clc
jo
shrb
dec
leave
insl
icebp
add
popl
and
in
lcall
or
xlat
jge
out
jle
pop
outsl
dec
mov
imul
dec
cmp
sub
pop
aaa
pop
inc
lock
movsb
mov
jo
mov
popa
bound
dec
dec
push
xchg
divl
inc
inc
mov
xchg
xchg
js
push
pop
add
jle
mov
mov
jmp
adc
push
cmp
adc
pop
push
bound
pop
jb
shlb
daa
mov
into
lret
aaa
jo
fstp
jecxz
sti
cmp
and
jo
jecxz
clc
sub
pop
mov
ret
clc
cmpsb
inc
dec
pop
aad
sbb
push
mov
mov
jno
cmpsb
jne
add
inc
mov
sbb
addr16
into
outsl
repnz
push
jecxz
xchg
inc
mov
add
scas
test
fs
cld
fwait
add
into
loop
xor
add
mov
call
dec
dec
shl
imul
scas
adc
mov
sarb
sub
jne
daa
push
or
jb
push
inc
cmp
mov
or
icebp
mov
int
push
fiaddl
shrb
jecxz
cvtdq2ps
sbbb
outsl
fcom
dec
mov
sbb
ret
lahf
sbb
rcrb
jbe
daa
xchg
adc
inc
pop
sub
rclb
mov
add
xchg
stos
xchg
jecxz
fdivrp
or
cltd
jae,pn
fcompl
int
adcb
adc
fs
cmp
sub
je
xor
xor
xor
mov
dec
int3
and
mov
xchg
pop
pop
scas
mov
rcrl
cmpsl
out
movsb
shlb
dec
in
sub
jbe
fimull
sbb
aas
fistpll
cmp
add
ficompl
lock
lods
scas
lock
std
push
or
xchg
andl
loopne
in
rcll
rol
push
getsec
inc
pop
or
dec
sub
adc
mov
es
or
pop
fcomps
test
cmp
pusha
sbb
cwtl
xchg
dec
xchg
pusha
fsts
repnz
mov
scas
js
adc
xchg
pop
or
and
test
inc
xchg
mov
mov
sub
add
cwtl
xchg
ja
xor
mov
jae
lcall
out
rclb
fisttps
imul
xor
cmp
mov
nop
mov
sub
stos
push
xchg
mov
xor
das
mov
lret
adc
test
jns
repz
daa
and
test
add
cmpsl
pop
pushf
aam
and
mov
mov
mov
push
mov
and
in
xchg
cmp
mov
stos
xchg
xchg
pusha
lcall
cmc
inc
mov
add
fnsetpm(287
mov
jmp
push
pop
sbb
inc
pop
xchg
and
mov
mov
inc
push
dec
mov
pop
cmp
push
fcompl
test
div
xor
mov
or
mov
push
test
push
into
into
mov
xor
bswap
or
add
mov
pop
js
dec
inc
inc
test
std
sub
add
pushf
push
pop
dec
out
mov
inc
fbstp
mov
jmp
cli
test
push
sub
dec
sarb
or
in
cmpsl
mov
cmp
jge
iret
xor
add
fwait
pop
jno
into
and
inc
and
mov
andb
cmc
loope
frstor
or
imulb
mov
movsb
in
sahf
stos
and
aaa
add
insb
test
xlat
popa
or
inc
sbb
movsl
or
sbb
imul
scas
ja
cwtl
sbb
pop
sub
jno
cs
outsl
iret
loop
xor
mov
sbb
mov
mov
sub
ret
push
push
xchg
lods
aas
lock
test
lahf
scas
ret
test
bound
adc
adc
inc
and
jne
jp
push
jge
lea
and
stc
mov
add
insl
imul
ret
dec
cltd
cmc
enter
sbb
lret
fimuls
jae
pop
jae
mov
pop
inc
and
es
xorb
pusha
pop
lret
cmpsl
or
xchg
rorl
out
adc
jns
or
adc
and
ficomps
inc
insb
mov
pop
fwait
stos
xor
imul
lahf
out
lds
mov
dec
jbe
loope
and
pop
adc
nop
xor
adc
popa
ss
push
cmp
fwait
xchg
nop
inc
sbb
inc
test
aaa
std
push
adc
mov
lods
sbb
divb
jne
xlat
dec
mov
and
mov
sahf
jnp
pop
dec
shl
push
arpl
jp
std
xor
sbb
icebp
cli
clc
add
mov
or
movb
sub
roll
fmuls
adc
enter
and
mov
sub
shlb
xor
pop
add
and
add
test
mov
out
ret
ja
adc
stos
adc
lock
sbb
lock
mov
fistl
fldl
pop
fstps
xchg
orb
xor
cld
mov
push
add
mov
and
dec
hlt
pop
adc
jns
sbb
and
adc
jb
stos
adc
sbb
repnz
std
dec
mov
mov
int
add
daa
xchg
xor
nop
arpl
notb
jno
cwtl
clc
lret
lret
cmp
lds
xchg
pop
fidivl
add
lods
stos
sub
movsb
dec
sar
lea
inc
cmpsb
dec
imul
mov
iret
aad
in
mov
sbb
adc
sub
dec
add
mov
in
pop
lcall
cmp
jbe
test
mov
xchg
jle
ljmp
jecxz
xor
push
push
loop
cs
mov
sub
xchg
dec
and
sub
jae
sbb
lock
or
pop
cmc
cli
je
pushf
jb
or
cli
add
aad
add
sub
adc
std
lds
mov
push
mov
or
or
clc
inc
jl
xlat
aaa
int
sahf
cmpsb
movsb
mov
push
pushf
fadds
pop
out
std
add
xchg
cmp
push
repz
xchg
ljmp
or
mov
test
test
lcall
or
push
mov
cmp
mov
ja
push
adc
cmp
xchg
pop
gs
mov
jns
xchg
test
mov
out
add
cmpsw
nop
add
rclb
push
aaa
xchg
loopne
sbb
mov
sub
mov
or
mov
adc
stc
or
jmp
aam
rcrl
push
iret
push
mov
pop
sbbb
addr16
fimuls
or
mov
bound
shl
mov
idivl
inc
rolb
inc
lods
test
loope
in
dec
and
xchg
cmc
dec
gs
shr
push
dec
xchg
sti
cmpsb
cld
scas
testl
pop
or
push
pop
inc
call
lcall
gs
fs
lock
jl
popa
call
fnsave
push
xchg
mov
push
ss
stc
push
loop
sbb
imul
inc
cmp
mov
push
adc
daa
push
ljmp
por
mov
cmpsl
xor
clc
call
cmpsb
outsb
dec
clc
ljmp
jnp
dec
mov
xchg
sar
lock
insb
and
mov
into
addr16
sbb
cwtl
sub
mov
dec
stos
cli
roll
cmc
scas
or
shlb
iret
sub
xor
pop
movsb
dec
mov
dec
mov
mov
or
xchg
std
jge
cmp
sub
lcall
pop
pop
lock
xor
mov
stos
scas
xor
pop
push
cwtl
movsl
mov
addl
popf
sbb
call
cmp
sahf
dec
dec
bound
test
cmc
xlat
and
pusha
cmp
and
lds
lret
pusha
xor
je
cmp
stos
xor
in
or
fscale
les
pop
dec
and
jns
outsl
xchg
cmpsb
loope
or
stos
dec
mov
cli
and
push
add
stc
nop
or
icebp
je
fdivrp
jecxz
mov
outsb
sbb
lds
mov
aad
mov
adc
jmp
sub
ficoml
out
and
lahf
pop
push
cmpsb
mov
cmp
pop
sbb
dec
xchg
jb
dec
neg
test
jmp
mov
fildl
mov
xchg
pop
push
cmp
in
leave
setne
je
add
cmp
in
out
sbb
ret
pop
mov
pop
in
xchg
jg
and
fcoml
push
cmp
shrb
cmp
pop
pop
add
les
xor
jl
imul
and
cmp
aad
cmp
sbb
fsts
imul
xchg
in
add
push
clc
jmp
push
jmp
orl
fbld
outsl
pop
push
dec
negb
out
pop
add
js
icebp
and
shr
mov
cmp
inc
mov
mov
loope
mov
out
xchg
fidivl
or
sub
lock
sar
out
add
push
int
pop
push
mov
jno
mov
pop
loop
insl
ret
mov
push
ret
into
inc
sub
sbb
pop
pop
xor
cmp
aam
mov
cmp
jle
pop
sahf
jae
fsubl
test
mov
mov
inc
insb
lock
or
xor
xchg
mov
sbb
push
or
fwait
mov
icebp
rol
sbb
fdivl
into
jae
data16
and
pop
cwtl
je
sub
clc
loope
push
sub
ja
jne
lret
aad
or
push
test
mov
xor
sub
dec
sub
inc
inc
xor
stc
repnz
sbb
hlt
xchg
adc
movsb
scas
xor
push
fstl
lods
mov
lods
jae
sbb
or
add
ds
jmp
push
cld
dec
cmpsl
mov
ja
cmpsl
out
daa
sbb
and
xlat
arpl
mov
pop
and
rcrb
jb
pop
popf
jno
push
sbb
jns
adc
iret
mov
jmp
xor
test
mov
xchg
jb
inc
std
or
mov
icebp
ret
xor
or
arpl
sub
mov
inc
cwtl
pop
nop
repnz
cmp
pop
mov
jge
sub
lea
mov
out
push
inc
dec
push
les
in
dec
sbbl
ficomps
lret
xor
xchg
es
jne
mov
inc
cmpsl
clc
and
stos
cs
rolb
xor
into
xchg
shrl
mov
cmpsl
imulb
mov
push
test
push
and
cmpsb
test
daa
xor
jno
pop
sub
aam
xor
jp
jae
push
push
add
sub
or
cltd
or
ficoms
pop
mov
adc
add
jns
inc
mov
popf
xchg
call
xor
out
mov
arpl
or
adc
shrb
jecxz
mov
sub
xlat
mov
shl
lret
es
out
rcrb
sbb
and
inc
out
les
add
scas
adc
pushf
scas
in
std
sub
ljmp
sarl
movsl
push
mov
jmp
outsb
aaa
aad
aam
sbb
fildll
fdivrl
out
cmc
sbb
mov
icebp
push
lods
sbbl
jmp
mov
movb
jecxz
iret
movl
push
pop
xchg
mov
outsb
xor
inc
jae
and
das
sti
pop
pushf
test
add
fstpt
daa
sub
stos
loop
icebp
mov
or
and
xor
imul
jae
sub
mov
inc
mov
xor
pop
mov
shll
push
arpl
jmp
adc
into
out
or
int3
leave
inc
xor
or
cmc
jnp
ret
leave
add
rcl
add
jo
cmpsl
data16
add
xchg
xor
cli
cld
sbb
cmp
loope
outsl
inc
push
lret
jne
and
and
aaa
pop
lock
icebp
fiadds
into
xchg
mov
inc
popa
mov
rcrl
and
jg
out
rcl
lea
outsb
cmc
sub
pop
popa
dec
jo
mov
mov
adc
xor
xor
fistl
iret
das
jne
dec
popa
dec
adc
and
add
fcoms
dec
inc
mov
pop
sbb
mov
in
mov
ret
push
adc
fists
and
lods
cltd
pop
push
fiadds
cmp
popa
inc
xchg
js
cltd
adc
loope
sub
mov
jns
shl
mov
lea
bound
nop
test
addr16
jmp
stos
cmp
into
inc
ret
xchg
loopne
mov
out
mov
mov
dec
adc
cmp
inc
sub
ljmp
cmp
adc
jns
sbb
jno
arpl
movb
push
lahf
mov
push
cmpsb
enter
leave
dec
pop
adc
pop
mov
popf
mov
jae
and
and
inc
stos
faddl
jbe
cmp
out
sarb
jp
push
out
mov
pop
int3
sub
stc
dec
addr16
xor
lcall
rcl
or
shlb
push
sahf
add
subb
insb
dec
hlt
adc
in
mov
dec
mov
pop
pop
jle
cmp
sbb
cld
xchg
dec
std
ljmp
mov
sbb
iret
adc
push
ja
cli
int
or
mov
sti
data16
inc
pop
cld
cmp
sub
rorb
sub
dec
fidivs
ljmp
fstl
push
into
mov
rorl
push
in
jns
dec
push
imul
xor
lock
sarb
pop
or
push
push
test
mov
mov
fidivl
scas
push
loope
mov
orl
jne
add
sarl
test
nop
dec
and
js
cmp
sbb
dec
les
adc
pop
mov
mov
add
and
movsl
cltd
cmp
jae
inc
rolb
mov
mov
jge
push
sahf
mov
sti
jno
aas
pop
adc
movsb
lret
lahf
mov
cmp
add
mov
fistpll
iret
loope
cmp
test
mov
mov
ficoml
adcb
push
icebp
outsb
movsl
jae
pushf
cmp
mov
xchg
or
int
test
xor
sti
and
jno
cmp
xchg
cmp
stos
cmc
pushfw
jmp
xor
adc
or
or
cmp
inc
mov
shrb
int
outsb
sbb
sub
and
test
pop
ret
pushf
inc
popa
ljmp
push
aam
repnz
push
xchg
out
imul
ror
push
loope
movsl
jb
mov
in
jnp
dec
sbb
lock
rcll
pop
mov
add
mov
stos
pop
sahf
pop
js,pt
pop
ret
repz
fidivrl
aas
jge
fcmovne
push
repnz
cwtl
push
lea
jae
fs
jne
loopne
scas
jbe
fistl
aam
xchg
sub
insl
cwtl
std
arpl
xchg
faddl
mov
pop
aas
pusha
test
fbstp
mov
repnz
cmpsl
mov
adc
push
sti
arpl
subb
inc
adcl
scas
xchg
push
lahf
push
outsl
repz
and
aas
loop
xor
xor
mov
insb
nop
pop
mov
add
push
xchg
js
mov
dec
mov
rcr
shrb
dec
sub
xor
lret
outsl
out
in
push
mov
pop
in
movsl
add
aas
gs
shr
outsb
jo
movsb
mov
and
test
adc
and
movl
mov
int3
pop
mov
call
push
inc
add
test
mov
vcvtdq2ps
rcrl
in
into
push
js
xchg
push
push
mov
test
mov
sti
enter
repz
mov
insl
xor
pop
lcall
or
pop
push
ret
or
enter
jl
test
mov
or
fbstp
dec
outsb
clc
sub
das
or
jecxz
adc
lret
loopne
gs
push
xchg
mov
inc
loop
xchg
xchg
int3
inc
fucomip
enter
js
shlb
shll
inc
arpl
mov
ficoms
xchg
in
cmp
push
sub
sbb
xchg
scas
mov
pop
jns
push
add
iret
notl
jge
sub
cmc
add
dec
jns
adc
movl
mov
mov
dec
sbb
xor
lds
enter
popf
shlb
add
sahf
dec
dec
in
out
and
pusha
push
mov
and
les
xchg
fldcw
push
test
icebp
in
pop
inc
xor
xor
xchg
loopne
xor
mov
std
push
add
adc
in
dec
int3
sub
xchg
adc
dec
inc
adc
push
or
imul
cmp
icebp
inc
in
and
ds
scas
add
pop
dec
addr16
xor
movsb
pop
rclb
aaa
cwtl
ljmp
xlat
jp
pop
mov
fcompl
stos
sub
add
and
push
fdivr
cmp
or
and
xchg
sub
loopne
out
xchg
adc
mov
out
leave
into
and
aaa
test
jb
cmp
cmpl
mov
adc
ds
xlat
adc
lcall
xor
add
mov
sub
cli
mov
push
ljmp
inc
pop
push
fnstcw
pop
mov
dec
cwtl
mov
cmpl
cld
repz
mov
cld
es
rclb
aam
pop
adc
int
rcrl
out
imul
out
fsub
push
mov
sub
cmp
loope
loopne
out
mov
adc
ja
dec
dec
in
scas
icebp
pop
scas
cmpsl
lret
outsb
test
icebp
adcb
int3
iret
aam
popf
cmp
loope
clc
inc
dec
icebp
mov
inc
push
jns
add
icebp
xchg
jge
nop
push
addr16
imul
sbb
fxch
xchg
jb
int
bound
in
in
dec
ret
mov
enter
cmp
mov
mov
imul
loope
adcl
lea
in
jbe
xchg
pop
in
cmc
dec
cli
lret
adc
iret
xchg
cmpl
or
jne
xchg
cld
mov
jb
push
movsl
iret
inc
pop
inc
test
add
mov
xchg
push
ja
js
aad
outsl
outsl
pop
test
and
outsl
jmp
dec
xchg
xor
shl
pop
mulb
in
out
push
push
lods
mov
out
mov
lret
mov
stc
xchg
aad
mov
enter
mov
xchg
dec
pop
push
mov
mov
mov
mov
sub
leave
inc
jns
das
sub
and
pop
fimull
xor
lcall
decb
push
test
ds
add
test
lcall
popf
lahf
mov
enter
shl
cmp
push
jmp
aaa
mov
arpl
sub
add
arpl
pop
sbb
nop
xchg
push
rorl
leave
or
dec
sbb
enter
mov
dec
dec
lret
mov
mov
inc
in
popf
and
dec
scas
xor
pop
jp
bound
adc
mov
inc
inc
sub
push
mov
mov
cs
shrb
inc
icebp
adcb
sbb
cmp
enter
lock
leave
adc
jl
xchg
scas
mov
mov
es
dec
dec
mov
lea
push
jo,pn
cmpb
fnstcw
rorb
dec
adcb
fnstcw
movsb
in
jl
fistps
cli
aas
scas
mov
lds
jp
mov
dec
sub
push
js
cmp
cs
mov
sub
xchg
jmp
jae
mov
push
lock
mov
add
test
ret
sbb
mov
sbb
in
aad
fisubrs
or
lahf
mov
loop
dec
push
push
adc
test
bound
scas
add
ss
fisubs
lods
sbb
mov
sub
repz
loope
mov
mov
hlt
and
cmp
dec
mov
fbld
aad
out
add
test
in
push
pop
cltd
sub
cvtpi2ps
inc
sub
jp
in
mov
xchg
pop
loope
mov
test
outsb
cs
aas
fwait
jnp
push
add
int
stc
sbbb
pop
xchg
clc
cli
jno
cwtl
inc
inc
sbb
das
push
cltd
loop
or
mov
mov
sbb
lea
hlt
sbb
jge
add
jbe
push
ja
es
stc
push
in
cwtl
stos
xor
adc
mov
mov
adc
sub
insb
out
popl
fisubrs
sub
push
cmp
mov
std
xor
dec
dec
cli
pop
sub
popl
mov
or
lods
cmp
add
loopne
in
dec
xor
aas
pop
cmc
loopne
mov
lcall
lret
or
sbb
repnz
inc
jns
add
insb
xlat
inc
inc
lcall
xchg
sahf
dec
xor
xchg
or
dec
dec
push
bnd
in
mov
xor
push
int3
pop
jl
imul
ss
jb
adc
xchg
das
in
out
in
scas
lods
push
pop
mov
jp
inc
stc
pop
adc
cmp
shll
cmp
jno
aad
sbb
sbb
fwait
pop
cmpsl
decl
insl
push
lahf
lods
mov
xor
clc
xor
xchg
js
rcl
dec
push
popf
push
shlb
aas
faddl
adc
inc
pop
mov
push
or
sub
push
add
insb
pop
sbb
and
call
and
mov
fs
sarb
movsb
add
and
and
es
and
daa
and
lret
into
cli
or
lahf
add
lcall
js
or
jge
pop
fcmove
cmp
insb
fs
sub
ja
jmp
push
cmp
jmp
cmpsl
pop
push
pop
and
mov
es
aaa
jo
sbb
fwait
and
lret
add
std
lahf
mov
inc
sbb
mov
mov
incl
insl
fiaddl
jle
sub
or
cli
adc
pushf
stos
jecxz
std
cmp
jbe
and
pop
pushf
adc
add
test
mov
mov
cltd
cld
lock
xor
xchg
ds
mov
xchg
xchg
pop
ret
call
rol
lds
push
repz
insb
int3
xorl
sbbb
nop
lcall
cwtl
inc
xchg
mov
mov
lret
dec
jne
ljmp
and
enter
pop
xchg
fdivr
lds
mov
xchg
sub
int3
out
cs
insb
insb
mov
rcrb
pushf
rclb
mov
in
or
in
stos
iret
sbb
popf
shr
gs
inc
jp
jle
sub
icebp
mov
scas
aad
jns
loopne
xor
inc
in
pop
in
divb
mov
stos
mov
mov
mov
pop
jae
xchg
xor
cmp
adc
sub
push
or
insl
xchg
das
inc
pushf
cwtl
mov
and
pop
xorb
adc
ss
xchg
lret
imul
add
repnz
jge
mov
cltd
ret
add
fimull
shrl
es
cmp
inc
test
or
scas
dec
aas
mov
insl
push
ret
std
mov
pop
popf
add
add
pop
movsb
mov
stc
repz
int
je
pusha
repz
add
cmp
out
mov
dec
pop
into
xor
jle
xchg
movsb
push
arpl
jbe
fmuls
push
mov
jp
jbe
in
stc
push
add
push
xlat
mov
jp
mov
out
mul
inc
dec
repnz
dec
jecxz
jns
push
mov
sbb
pop
sbb
add
lahf
jmp
repz
sbbb
outsb
sub
mov
lods
dec
pop
and
cmp
sbb
ljmp
sbb
fnstsw
xor
cmpsb
sti
imul
jge
sub
mov
int
lahf
aam
enter
pusha
lock
mov
outsl
mov
xchg
repnz
jge
pushf
inc
mov
int3
fcompl
not
mov
mov
push
mov
sub
jmp
jb
add
push
subb
mov
stos
and
lods
paddusb
adc
mov
adc
sbb
es
sbb
fstps
xchg
add
test
rclb
imul
mov
jge
mov
sbb
adc
pop
mov
mov
mov
mov
inc
mov
repnz
pop
in
icebp
cmp
int
mov
mov
out
cs
pop
pushf
xchg
out
mov
rolb
mov
cli
add
cld
xchg
inc
sbb
sbb
xchg
ljmp
push
cmp
andb
aas
dec
mov
or
sbb
push
jns
push
scas
cmpsl
jle
es
jmp
and
pushf
pop
mov
mov
dec
sarb
jg
jp
ret
dec
ret
jmp
dec
mov
push
sub
aam
js
pop
fisttps
sub
push
ficomps
add
out
add
jle
push
fldcw
jecxz
fiaddl
sub
adc
sbb
pushf
pop
in
mov
sbb
push
mov
mov
fisubs
sub
inc
arpl
lahf
xor
daa
cltd
mov
fs
into
stc
mov
pop
cmpsb
mov
rcll
add
rcl
sub
inc
cmp
jne
scas
nop
je
shl
rcl
xor
cmp
jne
pop
testb
lret
xchg
push
inc
sub
cmp
jne
bound
lea
sbb
cmp
jne
cmp
pop
mov
icebp
adc
rolb
add
mov
fisttpll
into
rclb
mov
add
add
arpl
ror
rol
add
sar
cmp
jne
insl
imul
out
shl
neg
rcl
sar
mov
jmp
daa
sub
leave
int
lea
sub
jmp
sbb
shll
mov
add
inc
xor
cmp
jne
xchg
inc
sbbl
dec
neg
rcr
ror
sbb
and
jmp
mov
and
rcl
mov
jmp
push
mov
xlat
cmpsb
or
sub
mov
add
sub
jmp
inc
or
rcr
rcl
mov
rcl
neg
and
call
push
adc
neg
sar
not
add
test
cmp
jne
scas
int3
and
rcl
adc
rcl
add
cmp
jne
call
test
fbstp
cmpw
je
jmp
adc
nop
shl
ror
shl
shl
dec
call
sub
sbb
rcr
rcr
add
shr
jmp
test
add
inc
sub
inc
or
rcl
test
sub
jmp
adc
adc
push
xchg
fldl
cli
add
not
cmp
jne
lret
pop
pusha
inc
cld
rcl
xor
or
rcl
xor
shl
call
jl
cmpsb
imul
divl
in
sub
sbb
sar
xor
not
jmp
xchg
rcl
cmp
add
mov
add
xor
cmp
jne
repz
aad
or
add
rcr
call
push
inc
rcr
sbb
sbb
test
rcr
shl
call
stc
clc
jo
fisttpl
xlat
push
shr
jmp
lea
shl
ror
shl
xor
and
jmp
mov
jae
lea
rcl
adc
jmp
add
pusha
add
shl
test
xor
add
mov
jmp
out
jp
call
inc
nop
loopne
aad
add
adc
xor
shl
sub
call
movsb
fnstsw
adc
or
shl
cmp
jne
inc
and
and
and
ror
jmp
sub
test
rcl
shr
shr
call
cmp
fs
shr
call
push
xlat
int
add
test
ror
sar
rcl
xor
adc
cmp
jne
outsl
insl
repnz
lea
rcl
shl
jmp
push
rcl
dec
jmp
cmp
rcl
rcr
sub
shr
and
jmp
out
xchg
sub
push
adc
neg
shl
rcl
jmp
mov
cltd
add
add
jne
not
jmp
jmp
jo
sub
pop
sar
sub
shl
cmp
jne
xchg
dec
xor
jmp
pop
jmp
lea
inc
jmp
insl
jl
sub
rcl
ror
xor
rcl
cmp
jne
pusha
cltd
xor
shr
sub
rcl
inc
call
xor
shl
mov
rcr
ror
rcl
cmp
jne
in
push
jbe
into
dec
and
jmp
gs
sbb
or
inc
rcl
neg
rcr
call
mov
fs
out
mov
xchg
adc
pushl
jnp
rcr
sub
shl
sbb
test
sub
cmp
jne
and
sub
neg
shl
shl
cmp
jne
or
mov
xor
fimull
and
xor
rol
and
test
cmp
jne
mov
push
dec
rcr
ror
rcl
and
jmp
dec
cmpsb
notl
shr
inc
shl
inc
cmp
jne
pop
push
mov
shl
or
shl
cmp
jne
cmp
repz
rorl
not
adc
cmp
jne
sbb
sbb
or
roll
cmp
jne
push
fwait
mov
mov
lea
rcl
shr
shl
rcr
cmp
jne
int3
call
or
mov
cmp
jne
xchg
adc
fs
rcl
rol
jmp
cmpsl
shll
rcr
mov
adc
mov
shr
call
mov
bound
cs
sub
and
cmp
jne
and
clc
movsb
mov
mov
add
call
adc
dec
call
sti
idivb
add
ficoml
sub
adc
call
cwtl
sbb
dec
rcl
cmp
jne
mov
mov
test
rcl
neg
add
call
in
outsb
jle
sub
not
adc
test
cmp
jne
mov
add
test
add
rcr
rcl
cmp
jne
cmp
sub
and
cmp
jne
add
dec
push
in
shll
rcl
call
mov
or
sub
mulb
sti
sub
shl
and
cmp
jne
cmpsb
pushf
or
xor
add
sub
and
cmp
and
lret
movsl
movsl
push
cmp
jge
cmp
and
idivb
loopne
push
cmp
push
cmp
loope
push
cmp
lcall
jae
cmp
shlb
jge
or
push
cmp
dec
and
movsl
movsl
popf
shlb
loop
cmp
shlb
movsl
imul
loop
add
mov
movsl
icebp
cmp
movsl
and
mov
mov
jp
cmp
test
movsl
sbb
xchg
pop
jne
jle
push
cmp
movsl
in
movsl
push
cmp
clc
shlb
movsl
movsl
aaa
adc
push
cmp
mov
inc
mov
lret
adc
mov
loope
push
cmp
adc
popf
repnz
push
cmp
shlb
popf
shlb
out
jo
and
cmp
shlb
jge
sub
mov
shlb
push
cmp
push
cmp
out
mov
cmp
mov
pop
popf
fstpt
jge
xchg
mov
jnp
je
push
cmp
push
cmp
lea
mov
mov
movsl
movsl
cmp
mov
movsl
dec
cmp
in
push
cmp
lret
push
cmp
stc
mov
mov
daa
rclb
cmp
imul
push
cmp
cmp
daa
mov
and
push
cmp
loope
popf
jmp
mov
push
cmp
fnsave
repz
popf
shlb
jge
sub
aam
daa
push
cmp
or
ret
movsl
pop
and
test
movsl
push
cmp
mov
movsl
push
cmp
mov
int
inc
std
ljmp
pop
repnz
movsl
movsl
push
cmp
je
stc
mov
movsl
xchg
hlt
mov
jge
adc
movsb
adc
frstor
jge
mov
movsl
movsl
push
int3
xlat
mov
movsl
movsl
lcall
mov
push
cmp
cmp
loope
push
cmp
popf
movsb
mov
movsl
cmpl
movsl
mov
aas
int
movsl
push
cmp
jb
movsl
movsl
call
cmp
loope
movsl
movsl
movsl
movsl
push
cmp
cmp
in
cmp
daa
iret
movsl
movsl
in
mov
mov
push
cmp
cmp
movsl
mov
sarl
fstpl
push
cmp
or
or
lcall
dec
and
cmp
loope
push
cmp
in
push
cmp
ret
pop
mov
jl
cmp
jo
cmp
push
cmp
xchg
push
cmp
pop
scas
movsb
movsb
sahf
or
cmp
hlt
push
cmp
stc
sbbl
into
movsl
movsl
mov
and
mov
movsl
jmp
mov
movsl
movsl
push
cmp
cmp
sbb
rol
push
cmp
cmp
cmp
push
cmp
lods
lcall
les
movsl
movsl
or
mov
movsl
fs
push
cmp
je
cmp
loope
push
cmp
push
mov
movsl
clc
shrb
sbbb
notl
push
cmp
cmp
cmp
bsf
push
jb
jne
push
cmp
and
mov
push
cmp
lcall
movsb
adc
movsb
movsb
adc
ljmp
xor
push
jge
mov
popf
mov
lods
cmp
shlb
popf
and
jge
mov
movsb
movsb
clc
lret
mov
cmp
loope
push
cmp
cmp
adc
movsl
adc
cmp
iret
push
cmp
cmp
jle
push
cmp
mov
sbb
push
cmp
adc
or
pushf
cmp
mov
jae
cmp
pusha
iret
movsl
movsl
rolb
push
cmp
cmpsl
cmpsb
movsl
movsl
lret
fiaddl
jnp
cmp
and
mov
jge
pop
mov
scas
movsb
movsb
inc
ljmp
mov
cmp
cli
aam
cmp
fs
cmp
test
movsl
movsl
cwtl
test
clc
das
cmpsl
cmp
shlb
in
movsl
lcall
mov
rcrb
cmp
push
cmp
sbb
movsl
movsl
es
bound
add
shlb
push
cmp
mov
movsb
movsb
dec
sub
cld
mov
cmp
int3
push
cmp
stc
test
movsb
inc
adc
popf
push
cmp
adc
call
inc
int
mov
jo
add
mov
jge
stc
mov
cltd
mov
out
mov
cmp
movsb
push
cmp
mov
in
movsl
movsl
push
cmp
popf
mov
mov
sbb
out
inc
hlt
lcall
pop
inc
pop
adc
or
cmp
fs
cmp
jb
movsl
movsl
mov
mov
xor
movsl
push
cmp
mov
mov
movsl
js
pop
and
and
push
cmp
sub
mov
scas
movsb
movsb
outsl
add
jecxz
imul
push
cmp
lret
push
cmp
mov
mov
push
cmp
enter
push
cmp
jnp
movsl
movsl
repz
push
cmp
lcall
repz
xchg
push
push
cmp
push
cmp
outsl
mov
lcall
jge
push
movsl
push
cmp
cmp
cmp
test
movsl
movsl
mov
loopne
add
mov
cmp
cmp
jge
mov
movsl
mov
leave
mov
jne
lcall
icebp
xchg
hlt
xchg
sbb
add
mov
jns
movsl
movsl
call
fcomps
cmp
push
cmp
andl
push
cmp
cmp
movsl
ror
mov
jge
adc
repz
push
cmp
shlb
movsl
movsl
pop
push
fcomi
or
arpl
lcall
js
add
mov
push
cmp
jle
popf
add
jmp
add
mov
cmp
movsl
cmp
mov
mov
jge
test
mov
mov
mov
fistl
adc
cmp
cmp
pop
test
sbb
movsl
movsl
push
cmp
stc
mov
adc
cltd
cmp
mov
jge
in
push
cmp
gs
insb
adc
sti
mov
lcall
push
cmp
sbb
xorb
add
mov
movsb
push
cmp
loope
mov
daa
lcall
lret
cmp
cmp
loope
push
cmp
loope
popf
mov
in
mov
push
cmp
loope
push
cmp
push
cmp
js
movsl
movsl
jns
jns
cmp
clc
shlb
cmc
push
cmp
add
and
push
cmp
and
mov
movsl
jns
adc
push
cmp
lcall
je
pusha
lahf
cwtl
lcall
jge
adc
popf
loope
movsl
movsl
push
nop
xchg
cmp
shlb
and
popf
push
mov
jae
adc
cmp
mov
loope
push
cmp
loope
popf
or
mov
push
cmp
adc
insl
mov
es
push
cmp
sub
sub
sti
mov
mov
movsl
jno
scas
cmp
shlb
movsl
movsl
xchg
sub
subb
shlb
movsl
movsl
xchg
aaa
sbb
loope
push
cmp
pop
mov
inc
or
cmp
jl
movsb
movsb
push
cmp
jo
movsb
movsb
xchg
std
out
test
cmp
cmp
sbb
pop
cmp
shlb
test
movsb
push
cmp
subl
lods
mov
cmp
push
cmp
repnz
mov
mov
mov
xchg
test
push
cmp
cmp
insl
add
cmp
shlb
push
cmp
cmp
sub
push
xor
push
cmp
cmp
movsl
aas
cmp
push
cmp
jecxz
push
cmp
mov
movsl
movsl
pop
cmc
movsb
movsb
xor
add
mov
movsb
push
cmp
cmp
cmp
dec
mov
adc
cmp
xchg
push
cmp
loop
movsl
movsl
jnp
dec
cmp
shlb
and
sub
mov
sbb
dec
fwait
mov
cmp
movsb
adc
movsb
push
cmp
aas
mov
loope
ret
movsl
push
cmp
insb
mov
movsl
push
repz
fmulp
fidivrl
add
mov
movsl
movsl
movsl
aam
test
jge
jge
mov
lcall
movsl
cmp
shlb
jge
es
mov
shlb
movsb
movsb
push
cmp
subl
cmp
jge
cmpsl
mov
mov
sbb
inc
aam
popf
add
movsl
movsl
push
cmp
adc
call
movsb
movsb
xor
mov
jge
je
cmp
xchg
mov
mov
daa
jp
add
mov
sbb
jge
jge
cmp
test
sub
push
cmp
push
scas
add
mov
adc
mov
fsubs
popa
lods
movsb
movsb
jno
out
push
jne
push
cmp
bound
cmp
shlb
bound
lcall
push
adc
lods
movsl
movsl
movsl
push
cmp
in
popf
push
cmpsl
movsb
movsb
push
faddl
or
mov
pop
stos
movsb
movsb
push
cmp
jg
movsl
movsl
push
cmp
cmp
mov
movsl
movsl
pop
pop
sub
jbe
cmp
cmp
jge
test
movsb
jg
push
jno
leave
pop
push
or
mov
movsl
movsl
je
pop
icebp
cmp
push
cmp
mov
movsl
movsl
imul
cmp
shlb
jge
jge
cmp
test
movsb
mov
fcoml
mov
jge
adc
movsb
adc
movsl
movsl
popf
dec
mov
movsl
sbb
popf
cmp
jae
enter
and
lods
movsb
movsb
push
cmp
or
cmp
scas
mov
adc
push
cmp
cmp
xchg
mov
movsl
out
repnz
and
hlt
rcrb
cmp
in
push
cmp
mov
and
cmp
shlb
mov
movsl
and
adc
movsl
in
movsl
push
cmp
loope
push
cmp
pop
mov
movsl
sti
cmp
lods
jns
movsl
movsl
movsl
and
and
scas
movsb
movsb
push
cmp
subb
cmp
fs
cmp
popf
nop
mov
popf
ret
or
add
mov
movsb
movsb
xor
xor
mov
pop
lcall
stos
dec
jle
movsb
adc
adc
movsb
push
cmp
mov
in
popf
sub
cmp
and
cmp
push
cmp
out
mov
movsl
jmp
add
repz
nopl
jge
test
loopne
add
mov
ljmp
sbb
cltd
mov
and
shlb
mov
and
and
mov
jns
movsl
movsl
push
cmp
scas
mov
outsb
or
sarl
add
mov
cmp
push
cmp
cmp
xchg
cmpsb
movsl
movsl
imul
push
cmp
rcrl
cmp
inc
mov
jge
adc
movsl
mov
push
cmp
jne
movsb
movsb
mov
add
mov
dec
push
cmp
jg
and
mov
mov
xor
cmp
shlb
cmp
stc
test
movsl
or
bound
cmp
movsb
adc
movsb
push
sub
push
cmp
cmp
cmp
movsl
movsl
or
enter
outsl
sti
mov
arpl
cmp
leave
cmpsb
movsl
movsl
push
cmp
pop
test
movsb
popa
push
es
add
movsl
push
cmp
loope
movsl
movsl
ja
out
inc
cmp
shlb
jge
subb
nop
inc
push
cmp
push
cmp
inc
mov
movsl
data16
in
mov
push
cmp
into
lcall
mov
cmp
shlb
mov
cmp
and
inc
ljmp
mov
fwait
mov
inc
cmp
shlb
mov
cmpsl
movsb
movsb
aas
test
and
scas
movsb
movsb
push
cmp
dec
mov
and
sbb
cmp
shlb
lea
fcmovnbe
adc
scas
dec
in
hlt
popf
je
movsl
movsl
popf
les
ud1
push
cmp
and
lods
movsb
movsb
sbbl
inc
mov
shlb
push
cmp
loope
push
cmp
xchg
stos
movsb
movsb
xorl
push
cmp
mov
movsb
movsb
push
cmp
enter
stos
les
add
push
cmp
ss
lcall
test
cwtl
xchg
movsb
movsb
lcall
fistpl
jge
insb
xchg
movsb
movsb
test
movsl
push
cmp
push
stos
movsb
movsb
and
pop
inc
push
cmp
push
cmp
sarb
test
movsl
push
cmp
cmp
push
cmp
inc
mov
mov
add
mov
cmp
mov
movsb
movsb
mov
inc
nop
movsb
cmc
push
cmp
cmp
push
cmp
lcall
jp
add
mov
push
cmp
lock
movsb
movsb
jg
sbb
shlb
popf
push
xchg
movsb
movsb
add
idivb
aaa
lcall
jge
fs
cmp
sub
push
jp
cmp
arpl
cld
gs
cmp
jmp
cmp
sub
movsb
shrl
popf
xor
cmp
popa
mov
push
or
push
cmp
jb
out
mov
jo
or
cmp
mov
and
fildll
movsl
movsl
push
cmp
inc
push
cmp
bound
mov
rcrb
and
mov
jge
lcall
test
cmp
popf
push
cmp
in
push
cmp
or
in
das
pop
sahf
lea
nopl
jge
hlt
xchg
movsb
movsb
addb
cmp
mov
loope
lcall
adc
xor
cltd
and
repz
cmp
movsb
movsb
movsb
movsb
popf
and
sbb
add
mov
cmp
jge
repz
cmpsb
sbb
push
rcrb
jge
fs
cmp
or
jge
and
xchg
movsb
movsb
lcall
or
leave
aas
push
inc
push
cmp
mov
cmp
pop
mov
in
out
cmp
shlb
mov
movsb
ds
cmp
cmp
in
xor
movsl
movsl
xor
jo
adc
movsb
push
cmp
cmp
ret
movsb
and
mov
lds
jge
movsl
lcall
lds
adc
movsb
push
cmp
mov
cmp
xchg
movsb
movsb
pop
icebp
push
mov
outsl
cmp
shlb
sub
lcall
stos
icebp
cwtl
adc
jg
xchg
movsl
movsl
movsl
movsl
push
cmp
pop
movsb
movsb
movsb
imul
test
jge
repnz
movsb
fsubs
mov
movsl
movsl
push
cmp
je
inc
test
movsb
popf
lods
mov
mov
mov
cmp
jge
ss
movsb
movsb
push
mov
add
and
push
cmp
loope
push
cmp
or
mov
insl
mov
mov
cmp
loope
lcall
movsb
ss
lods
cmp
mov
loope
push
cmp
mov
mov
push
cmp
push
cmp
cmp
cmp
sti
mov
dec
cmp
shlb
shll
jge
cmp
bound
xchg
arpl
cmp
and
movsb
movsb
jle
loop
cmp
lods
push
cmp
popf
lock
movsb
movsb
imul
push
cmp
cmp
add
movsb
movsb
popf
js
mov
add
mov
cmp
in
lcall
jne
outsl
add
push
cmp
gs
mov
lods
mov
movsb
movsb
lcall
jb
insl
adc
push
cmp
shlb
bound
popa
push
cmp
cmp
dec
mov
pop
mov
mov
lcall
sub
in
push
cmp
push
cmp
jge
and
cmp
je
movsb
movsb
sbb
push
cmp
in
adc
jle
movsl
movsl
push
cmp
push
stos
movsb
movsb
sbb
mov
sub
cmp
lcall
pop
nop
push
cmp
out
push
cmp
xchg
mov
leave
stos
movsb
movsb
popf
loope
movsl
movsl
add
jmp
inc
push
cmp
xor
movsb
movsb
cmpsb
pop
jl
arpl
pop
cmp
shlb
cmpsb
xchg
movsb
movsb
sbb
popf
inc
mov
jge
and
xchg
movsb
movsb
lcall
adc
jmp
mov
hlt
push
cmp
movsb
push
cmp
pop
xchg
movsb
movsb
les
ret
mov
cmp
sti
mov
stc
popf
popf
sbb
aam
dec
dec
dec
push
cmp
cmp
push
cmp
test
jge
jnp
movsl
movsl
scas
testb
cmp
loope
push
cmp
lcall
adc
sbbl
test
cmp
or
mov
inc
inc
push
cmp
jne
movsb
movsb
push
cmp
jne
movsb
movsb
ret
jae
fildll
push
cmp
and
movsl
mov
jo
movsb
movsb
lcall
sti
cmp
shlb
jge
push
cmp
jmp
movsb
movsb
adc
movsl
mov
cmp
mov
lcall
push
rcl
bound
movsl
push
cmp
pop
mov
pop
or
push
cmp
cmp
cmp
push
cmp
out
cmpsl
movsb
movsb
push
fs
push
cmp
test
lcall
ljmp
xchg
movsb
movsb
push
cmp
and
leave
scas
movsb
movsb
and
stos
pop
fisttps
and
add
mov
jge
pop
cmpsl
movsb
movsb
inc
inc
sub
cmp
shlb
mov
cmp
loope
lcall
mov
rclb
push
cmp
dec
push
cmp
repnz
movsb
movsb
in
mov
push
cmp
sub
mov
leave
test
mov
or
add
mov
cli
xchg
movsb
movsb
jne
cs
cmp
shlb
cmp
sub
enter
push
cmp
pop
xchg
movsb
movsb
xor
cmp
lods
daa
push
cmp
aas
ret
movsb
movsb
movsb
push
cmp
cmp
push
test
mov
add
mov
xchg
movsb
movsb
jb
sbb
mov
mov
movsl
movsl
and
add
mov
out
mov
movsl
push
cmp
push
nop
movsb
movsb
mov
insl
pushf
push
cmp
arpl
movsb
jg
scas
lahf
jmp
iret
cmp
shlb
movsb
lcall
cld
jne
push
repz
cmp
hlt
nop
movsb
movsb
int
cmp
mov
mov
loope
push
cmp
fldt
jge
cmp
shlb
and
movsl
movsl
popf
nop
movsl
movsl
movsl
cltd
mov
mov
stc
lods
movsb
movsb
push
cmp
fs
adc
test
movsl
das
push
add
adc
movsl
push
cmp
pushf
stos
movsb
movsb
orl
shlb
movsl
push
cmp
jae
movsl
movsl
xchg
ficomps
push
cmp
cmp
lcall
repnz
shlb
lods
movsb
movsb
jo
pop
cmp
cmp
loope
push
cmp
jmp
mov
pop
scas
movsb
movsb
lcall
in
popa
mov
cmpsb
movsl
movsl
push
cmp
cmp
cmp
jg
movsb
movsb
push
adc
clc
cmp
or
mov
movsb
movsb
pushf
ja
mov
add
mov
push
cmp
push
xchg
movsb
movsb
popf
es
movsb
movsb
dec
rolb
hlt
cmc
popf
adcb
jecxz
push
cmp
inc
xchg
movsb
movsb
scas
xor
push
cmp
xchg
mov
cs
cmp
mov
cmp
out
cmp
xor
and
mov
mov
add
mov
movsl
aaa
loope
sbb
movsl
movsl
movsl
popf
xchg
xchg
movsb
movsb
fcomp
out
sub
lcall
in
cmp
shlb
movsl
lcall
cmp
lock
cmp
cmp
jbe
movsb
movsb
lcall
shll
add
mov
push
cmp
push
cmpsl
movsb
movsb
repz
cmp
shlb
xchg
movsb
movsb
lahf
mul
dec
aas
cmp
push
nopl
jge
and
movsl
movsl
cld
jecxz
adc
add
mov
jge
mov
mov
gs
add
add
mov
jnp
movsl
movsl
xchg
test
jo
mov
bound
movsl
movsl
push
mov
cmp
int
movsb
movsb
push
cmp
inc
lods
movsb
movsb
scas
outsl
or
push
cmp
pusha
stos
movsb
movsb
jnp
or
hlt
popf
pause
movsb
movsb
lcall
mov
mov
adc
movsb
in
repnz
inc
nop
movsb
movsb
push
cmp
loope
push
cmp
loope
push
cmp
loopne
movsb
movsb
int
arpl
adc
lcall
xorl
cmp
mov
xor
movsb
movsb
movsb
push
cmp
hlt
sahf
movsb
movsb
dec
lcall
cmp
loope
lcall
aas
fsubrl
pushf
cmp
shlb
mov
movsb
les
jnp
inc
push
cmp
loope
mov
pop
mov
jge
aaa
mov
outsb
cld
adc
push
cmp
adc
movsb
insl
lds
jge
cmp
adc
movsb
jg
mov
push
cmp
adc
xor
push
cmp
shlb
jge
push
fwait
movsb
movsb
push
repnz
std
cmp
bound
cmp
lods
push
cmp
adc
push
cmp
lret
cltd
movsb
movsb
fnstcw
add
mov
cmp
lcall
dec
push
cli
push
cmp
loope
lcall
mov
stc
mov
cmp
adc
sub
subb
sbb
movsl
movsl
movsl
aaa
loope
sbb
fs
push
aaa
loope
sbb
add
movsl
aaa
loope
popf
dec
scas
movsb
movsb
and
cmp
shlb
mov
jge
icebp
xchg
movsb
movsb
pop
sahf
adc
cmp
jge
call
inc
push
clc
cmp
add
mov
icebp
mov
mov
popf
leave
pushf
movsb
movsb
lret
xchg
nop
out
cmp
and
cmp
mov
cmp
cmp
push
jg
into
cmp
shlb
sbbl
movsb
mov
cmp
scas
movsb
movsb
push
cmp
or
jmp
lcall
adc
adc
shlb
push
cmp
xchg
cwtl
movsb
movsb
aaa
imul
push
cmp
cmp
aam
movsl
movsl
push
cmp
or
repz
movsb
aad
popa
rcr
popf
bound
jge
and
cmp
cmp
imull
fwait
das
sarl
cmp
mov
cmp
popf
mov
movsb
movsb
cmp
movsl
movsl
push
cmp
loope
push
cmp
push
cmp
sub
jmp
movsb
adc
movsb
movsb
push
cmp
popf
sub
lods
movsb
movsb
sub
gs
cmp
sbb
cmp
cmp
lcall
push
xchg
cmp
shlb
mov
loope
lcall
adcb
push
cmp
push
cmp
add
add
cmp
mov
mov
movsb
movsb
jmp
sahf
repnz
sbb
inc
aam
popf
insb
xchg
movsb
movsb
push
cmp
shlb
shrl
popf
movsb
movsb
sub
mov
cmp
fs
cmp
cmp
pop
nop
movsb
movsb
jle
je
push
cmp
int3
push
cmp
cli
cmpsl
movsb
movsb
push
cmp
sbbb
jge
jo
cld
pop
push
cmp
push
cmp
lcall
imul
mov
push
cmp
pop
xchg
movsb
movsb
mov
cmp
shlb
hlt
lcall
cmp
shlb
jge
outsl
lods
push
cmp
and
jne
movsb
movsb
inc
add
jnp
mov
cmp
movsb
outsl
dec
cmp
cmp
push
cmp
loope
push
cmp
lcall
mov
je
push
cmp
cmp
shrb
sti
push
cmp
fnsave
repz
popf
or
movsb
movsb
movsb
inc
lret
ds
push
cmp
cmp
cmp
jb
cmp
and
adcl
sub
loope
push
cmp
in
push
cmp
push
xchg
movsb
movsb
mov
add
mov
inc
fwait
movsb
movsb
call
fistpl
cmp
fs
cmp
adc
movsb
movsb
push
cmp
fs
movsb
repz
push
aas
stos
fcomi
mov
or
push
cmp
dec
inc
movsl
movsl
movsl
lcall
loope
movsb
loope
cmp
push
scas
movsb
movsb
push
cmp
xchg
fwait
movsb
movsb
movsb
push
adc
add
mov
movsb
lcall
push
je
movsb
sub
fs
shl
and
adc
call
lret
mov
iret
mov
rcr
neg
sar
call
xlat
mov
or
lea
and
sub
mov
adc
jmp
subb
arpl
repz
test
ror
cmp
jne
mov
movsb
jmp
mov
adc
inc
shl
sub
cmp
jne
cmp
shl
rcl
rol
call
hlt
fnsave
lds
add
rcr
not
sub
jmp
xchg
jno
push
neg
mov
and
mov
sar
adc
jmp
sbbl
scas
shr
neg
cmp
jne
or
and
and
neg
sub
sbb
dec
lea
rol
rcr
and
and
cmp
jne
hlt
popf
mov
hlt
mov
adc
adc
jmp
mov
mov
or
sbb
cmp
adc
in
call
jg
jmp
shr
neg
jmp
cmp
fs
or
and
mov
xor
jmp
xor
std
inc
mov
sbb
rol
mov
cmp
jne
mov
adc
scas
dec
rol
neg
add
call
test
ret
insb
adc
dec
rol
adc
adc
add
jmp
pop
mov
clc
sbb
loope
testl
daa
decl
fsubrs
or
les
inc
jmp
mov
dec
jno
xlat
leave
aas
aas
pop
and
call
cltd
repnz
and
adc
shl
sar
shr
ror
call
dec
sbb
sbb
lea
mov
rol
cmp
jne
lret
sub
adc
add
jmp
addr16
pop
ja
les
or
jp
into
ret
gs
pushl
sbb
xchg
aam
fs
adc
call
pop
in
rcr
shl
rcl
and
call
ja
jnp
or
jmp
adc
or
not
sar
call
add
fadds
add
rol
call
incl
add
fs
inc
shl
call
sub
cmp
pushf
inc
test
xor
ror
inc
mov
neg
call
fidivrl
and
shr
or
rcr
add
cmp
jne
adc
into
shl
push
jmp
int
sub
xchg
push
outsl
test
shl
rol
jmp
cmp
mov
out
shl
sar
rcr
cmp
jne
lahf
pop
scas
xlat
lea
rol
or
cmp
jne
stos
test
push
mov
enter
rcr
jmp
pop
xchg
in
add
ror
not
shl
rcl
jmp
pop
popf
jne
in
add
not
shl
rcl
call
xor
sbb
in
not
or
jmp
push
push
add
push
lea
neg
sub
xor
xor
jmp
cs
pop
lock
not
shr
rcl
and
call
rcr
cmp
lea
mov
and
and
shr
jmp
jl
pop
push
or
lea
shl
add
cmp
jne
stc
or
and
mov
jmp
pop
in
lods
cmc
and
rcr
add
rcr
rcr
call
xor
arpl
and
adc
add
rcl
call
jb
sarl
fmuls
pusha
popf
hlt
jne
and
mov
mov
in
ljmp
int
add
in
cmpl
lea
rolb
jmp
test
incl
dec
add
cmp
jmp
enter
sbb
rcr
shl
add
sar
call
jb
sub
repnz
adc
adc
rcr
rol
rcl
jmp
dec
rorl
xor
not
sub
jmp
or
inc
adc
cmp
neg
jmp
push
mov
orl
icebp
or
ret
adc
shlb
call
bound
iret
xor
repnz
jmp
mov
dec
inc
add
out
or
add
ret
cmp
jne
pop
cmpb
and
rol
shl
xor
cmp
jne
dec
pop
dec
imul
push
insb
rcr
ror
cmp
jne
add
not
dec
add
rcr
rcr
call
out
jle
add
xor
add
call
sub
lea
shl
jmp
push
loop
pop
push
leave
not
sar
dec
adc
and
xor
call
or
mov
mov
ror
mov
inc
ror
jmp
mov
in
shr
cmp
xor
shl
ror
cmp
jne
dec
push
add
rol
rcr
sbb
call
add
push
and
and
sbb
ror
rcr
cmp
jne
or
jecxz
shlb
cmp
clc
sar
mov
call
cmc
dec
test
into
and
rol
rcl
shr
sub
call
and
sub
add
adc
call
mov
stos
ss
add
lock
in
rol
add
call
sub
add
shr
or
add
pop
adc
mov
adc
rol
rol
shl
adc
rol
jmp
shlb
sbb
shr
rcl
jmp
mov
jle
lods
and
fs
sub
add
jmp
enter
lea
test
xor
ror
rol
call
jle
ret
cmp
loop
mov
sbb
jae
jne
cmp
xlat
shl
fs
mov
xor
adc
inc
cmp
jne
jb
push
sub
fmuls
cld
rcr
sar
sar
call
ds
push
mov
call
mov
cmp
fs
sar
sub
rol
dec
rol
cmp
jne
nop
fnstcw
rorl
mov
add
rol
call
add
and
in
rol
add
jmp
ret
jne
lea
sar
xor
rcl
call
movl
sub
enter
fs
dec
int3
lea
neg
cmp
jne
cltd
cmpsb
ljmp
push
les
lock
cmp
jne
pop
aad
das
inc
lea
dec
cmp
jne
mov
adc
fsubrl
mov
stc
dec
xor
lea
rcr
shl
sbb
adc
call
adc
xchg
adc
ret
fdivs
mov
jle
fwait
lea
and
and
mov
ror
shl
cmp
jne
mov
test
ror
not
rol
sub
and
call
jo
adc
lea
inc
sub
call
call
xor
xor
add
jmp
int3
push
mov
mov
ror
or
sar
mov
call
xor
lea
mov
pop
sub
ror
or
cmp
jne
add
mov
out
dec
neg
jmp
xchg
lea
bnd
out
sbb
sub
call
dec
icebp
mov
sahf
lea
rcr
ror
rcl
call
bound
mul
cltd
lea
ror
shl
shl
shr
cmp
jne
arpl
aam
cmp
