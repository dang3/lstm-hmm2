push
call
ret
ret
sbb
int
rorb
das
adc
jmp
arpl
mov
repz
mov
xchg
hlt
dec
xchg
mov
fadd
pop
mov
xor
movsb
xchg
mov
cwtl
lret
mov
mov
dec
in
xor
push
cli
je
xor
inc
or
dec
jge
sbb
loope
add
xor
mov
cmp
mov
inc
cmp
ret
push
je
in
or
xchg
cmp
pop
mov
xchg
push
jmp
adc
insb
adc
lods
mov
in
fldl
dec
shlb
adc
ja
or
fwait
add
js
pop
test
jg
cmc
xchg
mov
adc
mov
out
push
daa
sbb
das
jmp
xor
inc
stos
lret
ljmp
test
sub
cld
mov
dec
movsl
sub
sbb
mov
lahf
inc
push
out
movsl
bound
lahf
jle
pop
scas
scas
in
rol
cmp
pop
dec
cltd
fsubrl
adc
sub
js
lret
out
stc
mov
arpl
mulb
mov
sub
lret
aas
mov
mov
adc
roll
add
inc
xlat
test
and
je
cmpsb
es
loopne
jb
shll
xchg
push
ds
mov
imul
sub
rorl
xchg
lfs
jne
dec
add
mov
mov
aad
leave
inc
aad
push
pop
jl
mov
dec
inc
jmp
mov
fnstenv
iret
add
or
pop
mov
add
pop
mov
lcall
sbb
in
movsl
mov
sbb
out
xchg
mov
cltd
call
sub
add
mov
push
mov
push
mov
popf
mov
mov
and
xor
pop
fadd
push
jmp
rcl
les
repz
mov
jno
clc
push
fwait
jno
cmp
mov
pop
push
xor
and
pop
int
sub
or
scas
or
lret
dec
xor
sbb
jl
xor
dec
jae
mov
in
or
ljmp
in
cli
mov
pusha
in
sti
lods
pop
enter
cmp
sub
rcr
mov
in
add
pop
in
loop
jge
sbb
loopne
call
scas
lock
test
mov
mov
add
cmp
push
cmp
push
addr16
loop
scas
inc
sbb
xlat
negb
and
outsb
sbb
push
in
mov
jae
dec
lods
push
and
jl
in
movsl
lahf
cmpsb
sub
adc
sbb
aad
dec
imul
add
add
adc
jmp
jge
clc
fstpl
addr16
ljmp
add
fnstenv
stos
stos
dec
scas
out
sbb
iret
sub
les
or
inc
push
mov
mov
imul
mov
push
fisubrs
and
cmp
adcb
loope
mov
adc
pop
ds
jle
mov
ja
repz
sbb
cs
dec
sbb
fsqrt
je
dec
out
clc
push
ret
inc
inc
loop
dec
pop
enter
sbb
loopne
xchg
cld
stos
lds
xchg
pop
cmp
xor
jl
out
je
pop
int3
cs
and
jbe,pn
iret
cli
cmp
inc
test
insb
test
rcrl
sbb
enter
mov
mov
sahf
mov
subb
mov
ja
push
push
cmp
pop
push
cmp
xchg
jecxz
stos
cwtl
sbb
std
lret
adc
ficomps
jle
cmpsb
jp
sbbb
out
lds
outsb
mov
dec
into
fimuls
scas
cmp
pop
stos
inc
repnz
repz
pop
test
sti
repnz
xor
jg
es
popa
mov
fisubrs
stc
cmp
inc
jl
push
gs
insl
pop
pop
clc
mov
pop
sub
repz
sub
loopne
movsl
pushf
pmaxub
or
idivl
aam
std
jne
pop
jo
add
or
inc
leave
ds
idivl
xor
sahf
cmp
mov
pop
inc
aam
inc
add
call
cmp
mov
dec
out
stos
pop
insl
hlt
mov
orl
and
push
into
dec
lock
mov
mov
jne
xor
sbb
outsl
repz
xchg
or
push
and
adc
pop
in
std
jae
daa
lcall
shlb
test
push
outsb
dec
pop
rol
cmp
or
in
js
mov
mov
clc
xor
and
push
sub
rclb
jle
test
rcr
or
adc
lds
pop
mov
movsb
outsb
enter
jo
out
lods
mov
sbb
cli
pop
int3
ds
lods
inc
push
sbb
push
sub
mov
sub
adc
pop
sbb
xor
cmpsl
js
mov
ss
cmpsb
lods
mov
adc
scas
adc
cmp
lahf
mov
and
inc
aad
mov
xor
jmp
mov
dec
sahf
push
sarb
push
lcall
cltd
push
add
in
inc
notl
iret
test
cmp
out
pop
cmp
xor
add
imul
les
jge
mov
cmp
test
stc
call
int3
inc
inc
aam
mov
ds
repnz
mov
jae
or
jns
adc
xlat
add
out
dec
cmp
sub
mov
lea
cmp
add
lret
cmp
or
in
jmp
test
push
in
lock
fwait
addb
dec
enter
xchg
fnsave
jg
mov
mov
testb
in
sbb
ret
int
in
push
add
cmovl
add
sub
enter
jg
test
ficoml
popf
cld
ja
subb
test
inc
out
push
add
lea
cmp
stc
pop
or
outsb
shlb
fs
data16
pop
fldt
pop
iret
xchg
xchg
fisttpll
adcb
call
or
in
jb
inc
loopne
gs
jae
arpl
mov
add
mov
mov
jnp
sbb
mov
test
adc
sbb
popa
lahf
sbb
fwait
add
xchg
sti
xorb
adc
lret
fsubrs
xor
mov
sti
push
mov
sti
push
sahf
push
dec
adc
sti
in
and
lea
fldenv
push
sub
push
mov
loopne
mov
ret
dec
inc
shll
mov
push
out
stos
sbbl
mov
mov
adc
cld
outsl
test
mov
cmp
fadds
cmp
push
insl
and
or
frstor
pop
mov
inc
sub
and
adc
test
cld
mov
push
sub
in
mov
lods
add
clc
jecxz
lret
and
sub
sahf
pop
arpl
mov
cmp
ret
cmp
xchg
cmp
cmp
dec
insl
mov
repnz
lret
int
shl
jbe
mov
ss
fidivl
fstps
push
repz
sti
gs
dec
addb
adc
sbb
popf
into
cltd
inc
lret
cmp
pop
or
or
xor
xlat
mov
xchg
in
xor
lcall
pop
inc
cmp
cli
xchg
test
xchg
andb
cltd
cmp
xor
ret
faddp
daa
lret
scas
xor
mov
sub
sbb
or
into
pop
mov
stos
popl
jg
test
adc
shll
clc
lret
fadds
push
adc
cmp
jb
ret
adc
mov
stos
nop
push
adc
mov
sbb
enter
xchg
test
mov
add
movsb
push
fbld
rcl
pop
dec
stos
push
sbb
cmc
lret
aaa
sbb
mov
cwtl
mov
or
leave
cmpsb
sbb
pop
add
adc
bound
push
std
mov
jne
ljmp
mov
pop
mov
pop
xor
inc
inc
nop
jno
sarb
push
andl
mov
jge
clc
mov
fnstenv
dec
dec
subl
pop
or
aaa
or
gs
or
adc
jge
sbb
hlt
dec
roll
xchg
cld
xorb
pop
idiv
fiaddl
rcr
inc
xlat
jae
mov
or
mov
divl
movsb
mov
cmp
dec
fistl
les
xor
test
jle
xchg
jno
aaa
xchg
jb
mov
cltd
pop
or
or
mov
dec
sbb
out
data16
adc
clc
dec
mov
orl
fcmove
jmp
daa
cwtl
repz
jp
jbe
pop
bound
dec
lds
subl
ret
cmpsb
out
pushf
sbb
xchg
sub
test
sbb
pushf
mov
lds
xor
push
lret
sbb
adc
mov
mov
mov
mov
jb
push
icebp
aas
test
and
fnstenv
pop
mulb
adc
cld
pop
sbb
and
cs
xchg
lret
mov
mul
out
mov
cmpsl
imull
icebp
sub
adc
mov
cltd
es
jno
and
stc
jb
add
mov
cli
and
aad
cmpsl
movsb
and
pop
in
sub
push
sbb
sbb
fisubrl
xchg
sbb
test
push
push
pop
enter
lock
pop
frstor
mov
dec
adc
inc
lock
insl
jp
push
popf
mov
xchg
imul
sub
mov
adc
ljmp
mov
stos
pushf
pop
setle
in
lcall
imul
jmp
xchg
add
adc
addr16
sti
lahf
or
cld
out
sti
int3
add
jbe
js
sbb
in
icebp
insl
cmp
inc
aad
mov
mov
test
and
mov
mov
cmp
int
fistps
adc
lods
and
jne
mov
push
jnp
or
mull
pop
pushf
sub
add
repnz
sarl
stos
into
or
cmp
call
insb
push
mov
add
sbb
and
pop
iret
cmp
fbstp
adc
scas
sbb
aaa
mov
mov
mov
xchg
test
mov
aad
push
xchg
pop
or
cmc
or
int
fwait
in
lock
and
mov
lsl
xchg
sbb
xorl
repnz
outsl
sub
das
dec
aad
rorb
mov
add
dec
push
dec
or
pop
shlb
jb
cmp
sub
sub
lret
pop
pop
lds
inc
lods
jmp
xchg
jbe
adc
mov
push
or
repz
movsl
push
call
clc
dec
outsl
loope
mov
cmp
iret
mov
shll
and
cltd
jl
movsl
add
hlt
push
xchg
inc
xor
ficomps
fdivrl
not
dec
xor
or
push
or
data16
scas
cs
sbb
cmp
cmp
mov
pop
sahf
shll
shlb
mov
push
inc
mov
pushf
decb
and
bnd
je
insb
dec
jle
jp
in
mov
leave
imul
mov
xchg
mov
mov
bound
cmp
inc
or
cmpsl
adc
rcl
movsl
popf
pop
xchg
je
pop
xor
cmpsl
or
mov
dec
inc
sti
jl
int3
lahf
adc
and
aaa
inc
test
test
into
mov
inc
ror
sub
jle
cmp
addr16
and
xlat
pop
int
xor
cltd
insb
or
fdivrl
popa
dec
xchg
jo
add
hlt
das
dec
punpckldq
or
mov
mov
mov
lcall
xor
mov
dec
xchg
mov
aas
iret
in
dec
inc
xchg
cmp
inc
data16
xchg
popf
out
mov
add
jmp
mov
repnz
xchg
icebp
rcll
or
pushf
not
xor
fbld
or
shrl
cmpsl
mov
cmp
scas
cli
mov
scas
mov
push
fcmovb
mov
push
loopne
jle
insb
lahf
push
add
popf
out
adc
stos
inc
out
daa
addl
xchg
enter
push
jg
jle
xor
aas
cmpsl
inc
hlt
repnz
pop
loopne
sahf
cmpsl
push
arpl
mov
dec
inc
xchg
add
cmpsl
pop
xchg
add
into
mov
pop
xchg
dec
insb
jae
sbb
mov
sbbl
xchg
test
lahf
in
lret
das
cld
cld
push
sbb
cmc
rorl
pop
jle
sbb
xacquire
mov
cmpsl
mov
mov
sbb
mov
lds
push
mov
cmp
or
push
aas
sbb
xor
enter
movsb
or
sub
rcr
xchg
vminss
jmp
cmp
push
insl
sbb
add
mov
pop
push
push
out
dec
fisubrl
movsb
sub
jne
dec
outsb
and
push
out
fcomip
loopne
cmp
std
fwait
cmp
fsub
scas
mov
xor
xchg
pop
jl
repz
jae
fnstcw
pop
bound
push
rol
into
sub
mov
push
out
sub
cmpl
dec
mov
out
fdivr
jmp
int
xchg
fs
pop
xor
xor
scas
shlb
xchg
jp
cltd
movsb
inc
adc
fcoml
xchg
and
mov
andb
cld
pushf
sub
or
lahf
sub
test
mov
ficomps
inc
or
mov
cmp
arpl
adc
fisttpl
enter
pop
cmp
rcrl
mov
dec
icebp
aas
xchg
add
fstpl
pop
mov
push
mov
fmul
es
mov
add
mov
fsubrl
add
adc
aad
mov
jg
lahf
enter
adc
or
pusha
fidivrl
sub
cmp
ret
subb
cltd
pop
lret
rorb
sub
push
lret
mov
insb
imul
dec
dec
ficomps
clc
cmp
repnz
arpl
lahf
add
xor
mov
inc
pop
mov
and
repnz
mov
out
loope
xor
push
adc
mov
cltd
xor
mov
inc
pop
fdiv
mov
cmc
divl
rclb
adc
cs
jp
cmp
mov
sbb
pop
mov
jmp
push
setle
add
mov
mov
hlt
jno
adc
cmp
cmp
jg
and
into
sti
sbb
mov
fcoms
push
cmp
cld
sbbl
in
xchg
movlps
call
je
push
adcl
andb
push
or
and
fisubs
stos
test
in
lret
popf
out
cmp
pop
fstps
xor
enter
lods
leave
dec
into
imul
lret
mov
cmp
xchg
jp
daa
mov
cmpsb
push
icebp
bnd
mov
repnz
adc
rcrb
fs
shll
push
inc
fiaddl
xchg
test
cltd
cmp
sbb
sbb
jns
mov
ror
fidivrl
sbb
fidivl
pop
outsb
icebp
rol
or
std
jb
sub
sub
mov
clc
subb
inc
or
hlt
gs
xor
lahf
mov
arpl
aaa
fnsave
outsl
repz
lret
scas
mov
sbb
inc
imul
jae
sub
cs
int3
push
sti
subb
mov
in
add
xor
cmpsl
testl
pop
out
mov
inc
pop
push
divb
test
outsl
mov
xchg
inc
mov
push
lret
cmp
out
xlat
inc
xor
push
rcll
inc
ss
scas
jno
je
roll
outsl
jne
ret
sbb
loope
out
scas
cmp
inc
test
sub
aam
outsl
imul
and
loope
inc
xor
jl
pop
inc
dec
lods
rol
push
and
jo
cwtl
mov
add
orb
clc
clc
cmp
sub
test
inc
push
fdivs
lods
jnp
lea
popa
insb
shlb
pop
xchg
sbb
pusha
rcll
inc
mov
add
dec
adc
fbstp
stos
push
xor
cld
or
push
dec
cmpsl
mov
push
test
mov
lods
in
test
mov
inc
sub
addr16
jmp
mov
pop
imul
hlt
jecxz
pop
xchg
mov
stos
mov
lods
scas
mov
push
out
xor
mov
test
mov
pop
divl
ljmp
faddl
or
dec
xor
fldz
popf
hlt
arpl
cltd
fdivrl
add
loopne
xchg
pop
push
push
or
inc
sub
stos
sub
lods
sarb
repz
into
xchg
inc
mov
push
mov
shlb
and
fstl
imulb
push
mov
jmp
add
in
fisubs
mov
sbb
out
cmc
or
xlat
add
cmc
std
add
cmp
cmp
sarb
xlat
into
cld
adc
xchg
or
mov
cmp
nop
inc
popa
cmp
jae
stos
insl
pop
inc
mov
xor
leave
or
and
hlt
test
jbe
dec
and
ret
mov
fwait
jnp
lret
sbbl
mov
adc
in
push
insb
scas
jns
je
sbb
ja
pushf
ss
and
add
lods
push
aam
fidivrl
pop
mov
jbe
fidivs
mov
hlt
jne
mov
adc
lret
jle
inc
cs
xor
mov
ss
sbb
and
ror
xchg
and
adc
sbb
pop
fmul
shlb
ja
into
sbb
outsb
sbbl
cmp
test
or
scas
loopne
jle
std
jnp
stc
addr16
mov
cmc
rcrb
addr16
adc
daa
popl
insl
xchg
pusha
popf
push
mov
std
mov
iret
fcompl
je
in
mov
push
inc
push
shl
int
cmp
fcoms
pop
dec
dec
insl
nop
insl
sub
outsl
pop
xchg
and
dec
jb
push
jns
xchg
xchg
or
nop
inc
add
xchg
insl
daa
jmp
lcall
clc
cmc
arpl
mov
and
cmp
fptan
add
imul
sub
jb
dec
lret
shlb
loope
xchg
in
hlt
or
xor
adc
dec
imul
inc
fbstp
mov
jmp
mov
aam
pop
sub
stos
je
insb
mov
ss
fwait
std
mov
clc
mov
jl
shlb
and
push
adc
scas
xor
xor
sbbb
jnp
test
push
and
insl
hlt
hlt
sbb
or
push
xchg
rolb
out
test
je
je
mov
and
insb
adc
pusha
fldcw
jmp
push
in
mov
scas
and
ljmp
sub
and
and
daa
or
jp
pop
out
lods
dec
stos
rcl
ret
es
xchg
negb
insb
fwait
test
inc
outsl
out
into
mov
lret
ror
and
lret
scas
ret
rcr
jge
lods
and
mov
nop
add
hlt
ljmp
fdivr
bound
jp
enter
sarb
mov
loopne
stos
rolb
pop
mov
das
lods
cli
and
cmpsb
jno
and
aad
daa
jg
dec
jno
sarb
mov
mov
fldl
popf
push
mov
fdivp
push
xor
inc
rorl
xor
add
cli
out
pop
fisubrs
outsl
adc
pushf
shll
frstor
pusha
leave
add
in
mov
or
sbb
in
pop
and
mov
sub
scas
cmp
sub
cld
lods
xchg
mov
sbb
xor
push
addr16
cwtl
push
pop
mov
dec
mov
jno
leave
lret
ret
outsl
cmp
andl
mov
mov
mov
sub
pop
jecxz
call
dec
sub
push
xchg
sbb
popf
push
xlat
or
xchg
sarl
insb
outsl
pop
xchg
and
sub
jecxz
cmp
aam
sbb
out
cwtl
addl
jb
pop
xor
push
enter
mov
inc
pusha
aam
dec
mov
add
adc
xchg
add
xchg
loopne
mov
pop
mov
adc
enter
pop
test
mov
inc
nop
inc
xchg
and
xchg
push
and
mov
aam
enter
int
cmpsl
mov
hlt
outsl
shr
jle
fstps
stos
inc
repz
outsl
nop
std
inc
pop
mov
aaa
arpl
mov
lods
clc
mov
mov
cltd
insb
mov
test
ja
jp
push
shlb
pushf
mov
mov
xor
mov
mov
sbb
das
push
imul
jecxz
push
adc
xor
and
jbe
cmp
mov
shl
stos
or
out
cli
mov
ds
mov
push
cmp
cmpsb
mov
mov
push
cmp
jp
cmp
int3
dec
in
mov
adc
xchg
aam
mov
xchg
dec
and
mov
mov
mov
jp
mov
cltd
int3
lret
jno
movsl
int
scas
pop
insl
inc
out
popa
outsl
mov
loopne
push
imul
jl
push
mov
js
mov
fildll
movsl
jp,pt
cmpsb
out
popl
cs
mov
xor
inc
mov
mov
push
and
xchg
sbb
adc
notb
test
cmp
xchg
mov
cmp
inc
xchg
aam
jmp
mov
sbb
mov
dec
lcall
out
pop
out
daa
mov
jecxz
fdivp
and
jns
insl
mov
scas
dec
adc
test
out
icebp
pop
xchg
and
arpl
push
dec
dec
arpl
sub
imul
divl
push
mov
pop
xchg
imul
ret
fisubs
pop
lret
or
movb
pop
mov
adc
mov
pop
jo
cmc
or
out
sub
mov
mov
xlat
jl
xor
cmpsl
push
addl
jmp
sbb
mov
push
sahf
lea
add
jge
and
in
lret
test
stc
int3
mov
add
mov
mov
into
mov
mov
sbbl
add
lods
push
cmc
lahf
xorb
cmp
inc
insb
mov
push
pop
jge
push
or
push
and
xor
sahf
mov
cmpsb
mov
push
fisubl
stos
cwtl
push
xchg
cltd
mov
mov
sub
ljmp
pop
les
ss
std
xchg
out
les
add
xchg
mov
test
out
loop
or
fs
lret
mov
insb
cmp
filds
sub
push
les
jns
dec
mov
test
daa
jbe
mov
in
pop
mov
lock
inc
pushl
xchg
call
insl
fidivrs
jge
pop
loopne
sbb
xor
lock
jae
xor
adc
pop
xchg
mov
out
jb
shrl
orl
test
pop
mov
sti
fists
stos
and
and
sahf
xchg
jl
fistl
test
cmp
loop
xchg
inc
add
push
push
mov
dec
mov
mov
arpl
loope
jl
pushf
fs
aad
call
jp
das
or
ds
pop
mov
push
jmp
mov
scas
add
sbb
ret
pop
inc
scas
push
int
clc
jge
cmp
lret
or
inc
add
out
push
insl
gs
jge
fstl
pop
inc
pop
add
ss
imul
push
pushf
jp
mov
lret
cmp
sbb
shll
mov
mov
popa
aad
ss
add
shrb
stos
shrb
or
rcpps
test
lret
ret
call
repz
inc
jne
nop
or
or
repnz
pmulhw
mov
mov
inc
pusha
jo
fdivr
push
aas
daa
data16
mov
inc
repnz
ret
xchg
dec
dec
movsl
movsb
out
cmpsl
mov
imul
aaa
fdivrs
lods
and
rcr
insl
std
sarl
adc
notl
icebp
mov
fwait
mov
cmp
mov
popa
pop
repz
shl
out
or
shrl
in
arpl
test
adc
mov
add
lcall
lds
ds
aaa
add
aas
outsb
idivb
sub
call
xchg
or
ja
mov
clc
fstl
mov
jge
dec
rcrb
pop
mov
dec
xchg
es
stos
lea
push
cmpsb
mov
cmp
cmp
mov
mov
shr
jno
pop
xchg
iret
push
sarb
sub
mov
out
and
push
rclb
stos
or
and
jl
mov
insb
cmp
fsubs
dec
push
add
push
sub
loop
and
mov
leave
and
loope
idivl
pushf
mov
daa
and
cmpl
clc
sub
pop
mov
push
lret
fstl
loopne
xchg
lds
popa
xlat
jno
jg
pop
push
pop
int3
mov
push
sub
pop
ret
xor
sbb
int
outsb
mov
sbb
xorb
and
mov
add
outsb
icebp
cmp
lock
stc
gs
mov
arpl
gs
pop
rorl
push
into
xchg
xchg
repz
dec
fbld
cmp
mov
fistl
jnp
push
inc
push
xchg
stc
shlb
mov
or
mov
lahf
int
je
movsl
cmpsb
les
aam
cwtl
int
push
cmp
lahf
xor
in
lods
jnp
add
mov
fsub
lcall
lahf
push
fwait
in
ljmp
mov
mov
cmp
or
arpl
bound
stos
flds
jg
aad
mov
insl
dec
sahf
dec
or
jg
mov
iret
fbstp
fs
movsb
mov
push
test
dec
inc
ds
mov
inc
int3
adc
inc
lods
mov
idiv
jo
popf
fstpl
shlb
lods
sarl
mov
cmp
sub
mov
imul
sahf
popf
lods
pop
repz
insl
ljmp
xlat
push
or
fisubl
xchg
xchg
test
xor
cmp
or
aas
pop
ljmp
pop
clc
pop
pop
mov
mov
pop
xor
fldenv
arpl
pop
inc
pop
sub
stos
int
jecxz
jecxz
jmp
dec
adc
iret
mov
insl
xor
ss
jo
in
ficoml
pop
jb
out
sub
xor
xrelease
outsl
inc
sbb
or
add
or
addr16
mov
add
sti
arpl
adc
jle
inc
cwtl
jb
in
pusha
popf
jb
out
enter
xchg
inc
push
mov
out
lods
jp
lods
push
inc
mov
fildll
pop
or
mov
or
adc
xchg
rcrb
pop
outsl
enter
scas
xor
ds
xorb
dec
pop
xor
cmp
fmul
popf
pushf
xchg
and
mov
daa
cmp
out
cmp
cld
popl
lea
and
in
punpcklbw
mov
scas
xchg
push
add
dec
out
and
push
out
mov
popf
mov
sub
cmp
dec
sub
pop
push
sbb
pushf
dec
mov
xor
popa
mov
lock
pop
repnz
push
outsl
je
stos
cmp
ret
mov
adcb
popf
out
xchg
cmp
movsl
lods
test
icebp
jmp
dec
pop
push
pop
out
shlb
push
xchg
or
cmp
xor
dec
stos
add
jno
jno
shl
insl
lock
dec
dec
sahf
mov
cmp
inc
loop
or
idivb
sub
out
ror
sub
jae
mov
add
dec
mov
je
ret
test
pusha
les
inc
into
std
or
into
sarb
enter
sbb
aad
jb
pop
mov
daa
int3
mov
mov
cltd
or
idivb
xor
mov
stos
repz
mov
in
jo
mov
lods
scas
movsb
rolb
add
push
out
mov
rcrb
movsl
das
mov
std
push
inc
cwtl
and
out
pop
inc
dec
addr16
je
and
mov
and
into
mov
jmp
mov
add
xor
sbbb
adc
arpl
arpl
pop
sbb
sti
pop
and
mov
cmp
out
cmp
insl
mov
add
rcll
xchg
inc
test
cmpsb
pop
xchg
mov
push
insb
dec
clc
dec
fs
pushf
sbb
cmp
outsl
and
inc
shrb
add
cli
jbe
lods
mov
je
movsl
out
xchg
adc
or
mov
les
dec
sub
xsavec
movsl
dec
movsl
insl
test
in
aad
adc
push
shrl
mov
fwait
testb
fdivrl
ljmp
imul
rclb
rclb
pop
popf
aas
in
cld
mov
mov
mov
adc
ret
out
cmpb
jne
jns
in
pop
sbb
sbb
int
sub
test
nop
add
mov
cs
sub
dec
rcr
mov
jp
iret
arpl
mov
scas
mov
pop
add
lahf
faddl
push
add
jno
pushf
cmp
shlb
mov
movsb
pop
jne
pusha
in
cmp
sbb
jmp
scas
mov
or
sbb
pop
aad
mov
add
lcall
xlat
cwtl
int
lods
dec
das
repnz
xor
fiaddl
mov
or
mov
xchg
inc
sti
insb
and
sbb
inc
ljmp
dec
in
std
jo
mov
and
ret
bound
mov
pop
loop
sar
inc
pop
mov
jg
jne
inc
enter
pop
inc
add
mov
into
lret
add
cmp
movsl
sub
cmp
adcb
fists
arpl
bound
lods
adc
imul
call
xor
xor
aas
lock
pop
and
sbb
xchg
push
pop
dec
outsb
sbbb
adc
int
cmpsb
push
repz
decl
pop
xchg
fsub
arpl
in
jl
cmp
cmpsb
push
mov
loopne
jmp
fdivrl
mov
lret
jp
xchg
cmpb
adc
or
inc
inc
lcall
dec
jle
push
scas
mov
push
pushf
stos
push
adc
dec
xchg
lret
ja
loop
mov
out
loope
pushf
jg
scas
std
mov
xchg
pop
sbb
mov
imul
mov
add
cltd
scas
lock
dec
imul
shl
sub
sub
pop
test
pop
mov
ljmp
xchg
arpl
movl
pop
aaa
pop
jnp
jne
sti
aaa
dec
and
pop
sar
fs
test
cmc
cli
fiadds
jge
push
mov
and
push
pop
pusha
jae
pop
ficoml
scas
outsb
mov
int
xchg
jbe
js
jge
jp
push
cmp
sub
fdivrl
and
movsb
sbb
outsl
les
ja
mov
sub
iret
ljmp
test
insl
cld
or
lods
je
cmc
or
int
out
sub
arpl
vmovd
je
mov
ret
dec
ret
stos
adc
sub
push
in
jle
cmpsb
rcrb
push
jo
testl
fidivrl
stc
cld
xchg
or
sbb
xchg
loopne
xchg
je
dec
fidivrs
mov
loopne
sbb
hlt
cmp
sbb
out
pop
push
jb
sub
sub
testb
dec
xchg
cwtl
dec
or
lret
or
and
sub
mov
imul
mov
popa
inc
pop
out
test
or
fisubs
inc
push
adc
loopne
addr16
fadds
mov
pusha
jecxz
cld
sbb
add
pop
in
pop
je
stos
test
lods
mov
sbb
inc
andl
jmp
hlt
sub
rcrb
jp
push
cmpsl
mov
xor
inc
xchg
mov
iret
pop
pop
mov
xor
adc
daa
adc
jp
pop
lcall
mov
repnz
das
mov
decb
pop
lock
add
pop
leave
ljmp
mov
mov
orb
pusha
clc
adc
cmc
vmovaps
mov
sub
movsl
pusha
ret
rorl
arpl
adc
or
and
mov
aas
lock
adc
mov
xchg
xchg
and
les
xchg
jne
scas
mov
cmpsl
stos
cmp
jnp
mov
add
ret
inc
cltd
push
adc
push
clc
xchg
pop
nop
push
push
pop
add
stc
pop
pop
adc
insl
jbe
jecxz
push
jge
flds
cmp
ret
aam
clc
out
in
jl
int
jle
ds
int3
dec
mov
cmp
sub
cltd
lock
insb
rcrl
fsubrs
ret
test
xchg
dec
movsl
or
hlt
pop
mov
stos
pop
sti
pop
lret
sbb
lods
xchg
pop
sub
test
mov
and
arpl
dec
in
sub
adc
xor
dec
enter
or
jp
scas
lcall
xchg
jg
negl
fbld
imul
and
jo
cmc
mov
and
or
les
out
sbb
jo
sbb
arpl
pop
adc
loope
daa
push
cli
mov
mov
insl
or
sub
push
je
aam
add
cltd
jb
add
or
jecxz
leave
pop
xchg
pop
or
inc
cltd
sbb
pop
push
lods
mov
mov
repz
data16
stc
or
sbb
std
jp
sbb
cmc
test
sub
ss
pop
cmp
fisttps
cltd
inc
cwtl
pop
cmpsb
adc
push
jb
fnstcw
testl
insb
add
pop
outsb
xchg
mov
pop
mov
fidivl
and
aam
push
enter
push
scas
movsl
jecxz
lret
and
aas
sbb
in
push
xchg
mov
call
fnstcw
outsb
outsb
aad
jecxz
outsl
jae
lods
sahf
cmp
add
or
dec
jb
push
loope
out
dec
out
xor
lret
cld
mov
or
add
in
loop
xor
arpl
adc
pop
in
mov
scas
jns
ffreep
out
or
cmp
cmpb
jp
mov
cli
fstl
fmuls
test
and
mov
pop
das
xchg
fldt
enter
xor
mov
xchg
add
cmp
inc
lds
push
sar
mov
loop
js
xchg
sbb
cmpsb
mov
leave
scas
xor
mov
bound
adc
jo
xor
jle
out
mov
sti
add
std
dec
or
stos
jno
lock
mov
and
pop
pop
push
fildl
sub
or
stc
cmp
mov
mov
sub
sbb
ficoms
mov
int
popf
sbb
jle
loope
pop
fcmovne
lods
or
pop
js
mov
roll
ja
fistl
lret
icebp
mov
jnp
sub
pop
inc
popa
pop
negl
sbb
mov
in
lahf
test
sub
lahf
and
jae
and
mov
push
shlb
sbb
jle
cltd
shll
xor
stos
add
shl
mov
stc
fmulp
push
lret
and
sbb
sbb
inc
jnp
add
adc
aaa
loopne
sbb
rcll
cmpsl
aas
leave
dec
lock
rolb
add
pusha
ja
div
insl
mov
ljmp
out
add
out
or
dec
pop
or
jmp
xchg
lods
das
mov
in
cltd
gs
mov
mov
ficompl
xor
pusha
call
jp
scas
push
adc
ret
push
negb
or
mov
dec
push
out
and
hlt
fmull
into
pop
lods
notl
push
jns
fldenv
lret
dec
imul
and
inc
gs
fs
push
in
xor
into
push
pop
fwait
scas
pop
fs
loope
test
popf
inc
pop
es
negl
hlt
dec
scas
fcomip
outsb
adc
aad
std
aaa
push
ja
stos
dec
jo
jno
gs
in
push
jno
lcall
cmp
adc
lret
repz
adc
test
mov
loop
xchg
mov
mov
cmpsl
in
adc
ss
mov
dec
mov
pop
dec
stc
sub
or
fimuls
jmp
adc
loope
test
test
and
and
das
mov
mov
and
das
aam
insl
dec
sub
lret
hlt
mov
cmp
inc
xchg
add
shrb
mov
dec
mov
or
xor
rclb
push
and
pop
push
inc
push
adc
into
and
aad
out
stos
push
sbb
mov
adc
divl
mov
insb
int
xchg
mov
and
pop
inc
jmp
jmp
insb
lcall
sbb
mulb
jp
clc
xchg
mov
popl
dec
xor
enter
repnz
cmp
xchg
shll
and
std
push
xor
jg
out
pop
adc
or
test
cmpsl
mov
aam
and
mov
bound
sbbl
mov
fwait
aas
shlb
mov
fsts
pop
clc
lret
js
nop
lret
mov
icebp
into
lock
in
in
cltd
js
mov
test
xor
mov
dec
in
pop
pusha
gs
mov
jno
movsl
lret
dec
inc
imul
or
fisttpll
pop
mov
push
pop
fmuls
cwtl
add
bound
dec
aas
fisttpl
lahf
ret
xor
shll
sbb
mov
pop
dec
pop
pop
jle
and
test
xchg
lods
sarl
jmp
nop
lcall
lahf
mul
mov
cmp
mov
and
fcomps
repnz
and
in
xor
int3
in
mov
jb
inc
mov
sarl
lods
pop
cmc
orl
frstor
xchg
and
xor
mov
pop
and
mov
imul
repnz
push
stos
mov
ss
cmp
cmp
arpl
jns
aaa
mov
js
inc
jnp
outsl
enter
mov
repnz
repnz
rcr
bound
mov
add
pop
arpl
sbb
stc
es
fnstcw
and
ja
or
and
sbb
xor
into
adc
inc
insb
pop
add
xchg
test
dec
adc
and
jno
cmp
adc
frstor
pop
arpl
jg
loopne
je
jmp
mov
push
mov
jnp
movsl
cmp
mov
mov
ljmp
push
test
adc
inc
mov
and
push
xchg
adc
movsb
cltd
inc
sub
xchg
xor
test
cli
mov
js
mov
lcall
jecxz
xor
mov
pop
ror
out
scas
mov
loop
ljmp
xor
ljmp
mov
gs
push
je
sarb
out
test
push
add
aas
addr16
mov
mov
cmp
ja
aad
cwtl
sub
clc
pop
stos
fidivl
mov
fcom
push
nop
int
fbstp
or
jbe
xor
popa
cmp
or
pop
xor
orb
xor
jl
xchg
and
in
mov
imul
cltd
lods
mov
das
jb
test
push
jl
out
mov
std
jo
adc
push
fstpt
out
add
jmp
rcr
cmp
jo
scas
pop
mov
ret
cmp
mov
and
mov
mov
dec
stc
xor
popa
sbb
faddl
push
xor
imul
lods
clc
ja
ljmp
cmp
in
sbb
mov
ljmp
inc
lds
dec
mov
xchg
test
dec
mov
das
lcall
mov
jo
das
aas
out
xlat
jb
out
stc
and
imul
outsl
pop
scas
aam
inc
xchg
mov
jp
ret
int3
cmp
inc
daa
iret
repnz
popf
clc
push
mov
add
jo
pop
std
roll
in
subl
sbb
sub
pop
lds
std
lods
and
test
cmp
mov
clc
xor
jb
loopne
mov
xchg
pop
adc
push
rcr
lret
lret
sub
sub
dec
repnz
shlb
sub
std
je
add
mov
jo
inc
mov
jg
imul
cld
dec
cmpsl
scas
dec
leave
cmp
pop
rep
mov
mov
mov
aas
cmp
xchg
dec
adc
push
scas
aas
mov
sbb
jbe
enter
inc
mov
es
das
xor
push
sti
sbb
cmp
xlat
jle
ds
inc
xchg
jne
js
clc
out
cmp
sahf
addb
push
sti
jae
xor
fs
arpl
push
or
xor
pop
ja
xchg
inc
jne
or
mov
fstpl
out
sahf
jb
sbb
sahf
adc
adc
clc
arpl
dec
hlt
cltd
push
cs
xchg
and
jns
daa
fiadds
iret
inc
pop
mov
fstpl
pushf
cmp
push
pop
jno
or
sub
test
insl
imul
shlb
adc
dec
and
lahf
call
insb
jge
jns
fdivrs
pop
fcmove
sub
or
jae
add
mov
jno
push
pop
subb
rclb
mov
lret
les
gs
lea
je
mov
std
mov
inc
ror
fstpl
xchg
fimuls
cmp
imul
das
and
fmuls
lcall
pop
jp
call
xchg
cmpsl
mov
sub
mov
jge
sbb
mov
pop
lock
and
push
dec
jno
add
mov
inc
out
add
add
mov
fptan
push
cmp
mov
fiadds
mov
and
arpl
mov
jl
movsb
and
or
aaa
jp
mov
ja
rcr
gs
test
pusha
loop
mov
cwtl
mov
xor
mov
inc
dec
in
lret
mov
aas
mov
xchg
lcall
xchg
sahf
jae
in
cmp
cmp
jl
rolb
gs
jnp
pop
icebp
lods
test
lret
ffreep
jle
aaa
inc
sti
and
icebp
and
fiadds
xor
pop
andb
and
aad
outsl
loope
cwtl
xchg
loop
push
adc
add
cmp
jg
aaa
sbb
jmp
mov
push
cmp
insb
or
xlat
pusha
insb
shrb
scas
pop
fimull
xor
push
dec
ret
loop
mov
push
mov
insb
outsb
pop
mov
lds
in
push
imul
lea
inc
jns
jb
ja
loopne
and
cmp
loope
sbb
push
and
lods
cmc
dec
dec
sub
daa
out
xchg
in
xor
test
fsts
jns
xorl
scas
iret
ss
sbb
jg
dec
dec
popa
dec
mov
aas
mov
sub
ja
pop
and
shlb
outsb
movsb
push
fildll
daa
pop
cltd
jp
leave
and
loop
sti
enter
or
loope
inc
pcmpeqw
jmp
test
pop
inc
add
or
cwtl
in
pop
out
xor
out
jb
out
bound
xchg
sub
jg
xchg
nop
push
sti
fwait
dec
cmpsl
scas
cmp
jge
mov
xchg
or
es
call
outsl
cmpsb
rcrl
or
mov
jmp
ja
or
xor
mov
imul
xchg
mov
dec
inc
pop
sahf
leave
in
scas
jmp
clc
and
mov
sub
jmp
push
sti
cwtl
insl
int3
pop
xchg
xchg
dec
ja
loopne
icebp
xchg
or
dec
movsb
std
cmpsl
fisubrs
push
cmp
pop
mulb
xor
dec
xor
xchg
clc
je
pop
test
mov
pop
scas
or
and
aaa
xor
mov
xor
jo
push
fs
ret
or
jne
repz
popa
jno
cmp
and
inc
xor
dec
jbe
and
pop
movb
cmp
fnstenv
mov
mov
mov
add
mov
cmpsb
pop
sbb
xchg
and
addb
sub
lds
dec
aas
cmp
icebp
scas
push
aaa
insl
xor
xor
out
mov
inc
xor
in
cmp
cmpsb
outsb
fldenv
loop
aaa
mov
cli
push
inc
push
movsb
mov
pop
add
mov
inc
pusha
repz
pop
dec
jb
in
cli
dec
dec
inc
xor
xor
lds
imul
add
bound
std
gs
popa
xchg
cltd
push
jnp
test
jge
mov
mov
icebp
std
mov
jbe
addr16
hlt
addl
dec
into
call
out
incl
xchg
mov
and
jo
repz
push
insl
rclb
adc
mov
bnd
xchg
ret
fidivs
fwait
jb
jb
sub
mov
addb
arpl
test
mov
sahf
dec
stc
xlat
test
test
push
pop
fistps
jmp
call
shlb
mov
and
lret
xchg
add
mov
and
pusha
xchg
inc
int3
fldt
mov
and
divb
xchg
mov
iret
pop
mov
cmp
push
out
jl
push
push
std
xor
add
inc
nop
adc
cmp
pusha
xor
jl
sub
imul
daa
mov
mov
xchg
cmpsl
out
rolb
inc
and
sub
sbb
push
sbb
dec
stos
mov
cli
sbb
mov
in
push
fstpl
call
mov
je
mov
sub
out
or
push
imul
mov
inc
cmp
xchg
cwtl
movsb
call
cli
mov
out
mov
dec
movsl
fnstcw
xchg
mov
or
mov
loopne
popa
xchg
cmp
outsl
icebp
push
pushl
sbb
jl
flds
dec
sbb
sub
jmp
insl
or
add
jae
adc
je
stc
mov
mov
int3
dec
ucomiss
shr
cmp
adc
jecxz
jg
pushf
nop
mov
ficoml
push
lcall
arpl
cmc
xchg
ret
popa
lods
adc
jl
cmp
movsb
cmpsb
sub
stos
ret
dec
pusha
xlat
ficoml
jle
fisubrs
xor
cmpsb
rorl
xchg
in
pusha
lods
adc
xlat
das
adc
in
xor
cmovle
stos
mov
push
fisubrl
dec
or
jle
sti
mov
xor
sbb
pop
stc
mov
scas
cltd
inc
push
out
push
cli
decb
pop
jo
xchg
incb
adc
hlt
adc
cs
imul
xchg
sbb
inc
adc
and
fstl
or
sub
mov
add
sub
lea
imul
daa
pop
cmpb
ja
pop
ss
and
and
nop
mov
cli
inc
or
das
std
xchg
and
mov
fwait
insl
adc
in
mov
mov
pop
xor
je
jle
pand
push
xor
aas
loope
lds
out
gs
dec
add
add
fbld
xor
pop
in
inc
and
dec
adc
fstl
inc
mov
je
sbb
sbbb
mov
jge
xchg
int3
test
cmpsl
lods
ja
cld
xchg
das
lea
cmpsb
sub
arpl
add
in
xor
mov
shl
pop
sub
popf
push
jns
xor
dec
cmp
sub
pop
loope
popa
int
sahf
inc
pop
out
sbb
jo
add
jg
xchg
test
xchg
pop
add
push
mov
add
lcall
push
sub
push
popf
cld
lret
inc
fmuls
push
push
jb
add
ret
hlt
push
movsl
scas
dec
lea
xchg
ja
sbb
adc
jg
or
mov
stos
mov
test
jbe
jb
add
filds
lock
loope
fwait
pop
pop
ss
push
sbb
into
lock
icebp
and
sbb
gs
pop
inc
push
mov
push
pop
cmc
sub
rcl
je
cmp
sbb
sub
pop
dec
cwtl
push
sbb
add
int3
and
pcmpeqb
insl
push
mov
pop
inc
cld
add
pop
or
icebp
imul
adc
lods
xchg
mov
daa
cmp
shll
xchg
inc
mull
leave
cwtl
ret
cli
test
loopne
mov
pop
dec
rorl
sarl
test
insb
stos
mov
mov
jge
leave
jg
outsb
pushf
sti
add
push
push
dec
push
das
aaa
pusha
inc
mov
push
or
mov
jo
test
jnp
addr16
inc
mov
sarb
xchg
xor
xchg
mov
mov
fnsave
mov
xchg
test
inc
sub
jns
and
fnstenv
xchg
mov
push
out
inc
cmp
lret
mov
ja
jl
popa
mov
jmp
jecxz
sbb
sbb
clc
cmp
cmp
push
cs
inc
in
mov
insl
cli
daa
sub
lock
push
je
dec
stos
xchg
xchg
or
xor
out
mov
push
cmp
int3
pop
mov
pmulhuw
insb
es
std
adc
mov
cld
jne
rorl
cmp
mov
sbb
and
sti
movsl
movsl
jne
gs
xor
push
lea
out
shlb
mov
adc
addr16
test
push
sar
cmp
add
jl
stos
shrb
out
andl
cwtl
in
sti
jnp
xor
add
dec
pop
vminsd
popa
add
rorb
fcoms
or
jne
pusha
or
scas
das
out
xor
fsubp
ljmp
cmp
add
push
loopne
cmc
fs
dec
fimuls
rcll
mov
xor
mov
and
ficomps
add
mov
add
testl
xor
adc
mov
and
mov
xchg
push
mov
out
popa
xor
cmp
stos
mov
mov
dec
lds
popl
add
imul
sbb
fnstenv
adc
dec
stos
mov
fstps
icebp
push
mov
inc
jb
sahf
jle
mov
xor
jne
mov
inc
dec
daa
cld
in
andl
movsl
clc
mov
cmc
subb
xchg
hlt
xor
pop
cwtl
mov
cmp
dec
rcrl
lahf
cmp
xor
dec
cmp
mov
jns
aam
lods
adc
xor
xchg
push
mov
outsl
lahf
daa
adc
sbb
xchg
jp
stos
sub
movsl
mov
test
dec
mov
sbb
jno,pn
stos
in
add
mov
jo
or
mov
icebp
pop
addr16
das
std
loop
loopne
mov
jecxz
lret
push
jo
jbe
outsb
push
lock
jbe
xor
push
sbb
sub
jp
and
cwtl
popf
or
fwait
pusha
mov
xor
lds
stos
pop
pop
insl
adc
lahf
cmp
or
dec
bound
inc
jns
jecxz
fcompl
ljmp
inc
pop
jae
scas
and
add
rorb
add
ja
dec
mov
pop
sbb
jae
cwtl
lods
outsb
test
mov
sti
in
or
cwtl
div
sti
std
adc
jae
stos
and
jo
add
shl
dec
add
jl
cmp
enter
inc
sub
pop
insl
sbb
test
jo
jnp,pn
outsb
rolb
rorb
daa
mov
into
mov
inc
push
add
inc
mov
rorl
mov
enter
cmpsl
dec
mov
pop
shrl
sbbb
iret
cld
cmp
push
inc
shll
aaa
mov
push
xchg
lds
inc
add
bound
aas
fldl
push
cmp
arpl
xchg
stc
add
adc
cmp
nop
jl
stos
movsl
mov
cmp
xchg
mov
or
cmp
jo
mov
fstl
mov
enter
xchg
adc
adc
fnstcw
cld
call
mov
mov
pop
pusha
mov
add
push
jmp
in
insl
push
lcall
adc
sar
mov
lcall
adc
sub
ret
adc
ljmp
push
push
add
push
cmp
mov
lret
or
mov
nop
cmc
inc
xchg
xchg
test
cmpsb
stos
push
pop
flds
nop
stc
mov
sbb
addl
or
ret
ds
mov
mov
add
imul
fidivl
mov
jne
push
sbb
xchg
mov
and
stos
mov
cmp
inc
and
repnz
in
insb
pusha
movsl
lock
out
sbbb
inc
enter
fmull
sarl
scas
sbb
push
pop
sahf
cmpsl
subb
and
mov
mov
clc
stc
je
negl
add
and
rcrl
push
jle
pop
cmp
in
nop
jo
adc
fwait
popf
fstp
cwtl
lods
add
test
into
pop
sbb
mov
sbb
jecxz
add
xchg
add
mov
ds
xor
popa
loopne
jle
pop
or
es
mov
into
jbe
push
adc
stos
sbb
lahf
sub
push
push
cmp
imul
xchg
cmp
in
jbe
xor
mov
shl
push
pop
lods
mov
insb
xor
sbbb
mov
add
imul
xchg
sbbb
adc
sub
push
shlb
sbb
cli
lds
mov
dec
and
adc
int3
dec
pop
mov
jmp
mov
cmpsb
call
int
fs
jecxz
add
xlat
cwtl
insl
or
sbb
jmp
fsubs
cmpsb
sub
das
mov
stc
xchg
jg
lret
sahf
sbb
imul
inc
push
aad
pop
call
insl
int
inc
outsl
and
and
je
in
sti
jae
jo
push
clc
dec
add
ljmp
and
fdivr
inc
sbb
dec
or
xor
push
xorb
mov
pushf
sti
incb
shr
xor
dec
dec
andb
stos
adc
test
push
pop
dec
mov
repz
dec
mov
arpl
push
aaa
xor
xor
push
fistpll
lret
fwait
xchg
mov
jmp
sbb
cmc
test
xor
repz
push
cmpsl
ret
sub
mov
loope
mov
inc
enter
pop
and
mov
bound
push
push
mov
lea
int
es
in
sub
and
xchg
add
sarb
xor
test
inc
mov
adc
mov
mov
add
pop
adc
jmp
cwtl
scas
jmp
and
inc
xlat
xchg
xchg
jl
adc
popa
in
add
xor
dec
and
fisttpll
cld
cmp
idivl
ss
mov
test
jle
lods
cmp
or
and
ret
dec
mov
out
or
in
xor
jns
mov
inc
int
adc
filds
pop
aad
rcrl
jnp
lods
or
add
inc
lock
fldt
divb
mov
hlt
arpl
or
or
sti
jns
cmp
dec
adc
sub
call
aam
out
shrl
lret
mov
stos
xchg
je
aaa
sub
in
add
sbb
pop
test
ret
push
loope
jno
mov
lea
jo
outsl
pop
pop
mov
push
push
cmp
or
pop
cmp
jmp
int
icebp
imul
or
inc
and
pushf
imul
dec
and
sahf
fidivs
arpl
fcomps
outsb
rorb
pop
aam
mov
arpl
mov
loopne
mov
cli
adc
xchg
mov
mov
je
mov
jbe
ret
adc
outsl
enter
jno
popf
cmpsb
or
and
shr
pop
loopne
sbb
pop
adc
inc
in
mov
shll
repnz
adc
xchg
and
prefetch
pop
xchg
and
test
cmp
and
cmp
jnp
inc
es
outsl
les
mov
sub
jmp
gs
mov
adc
mul
ret
mov
sbb
insl
xchg
rclb
xchg
xor
jbe
lea
jns
ret
in
out
stc
pop
or
popf
imul
enter
pop
pop
add
shll
repz
jnp
mov
xor
lods
push
cmp
ret
cmp
fcompl
addb
int
jae
fists
push
test
xchg
adc
dec
outsb
cwtl
mov
dec
xchg
inc
cmc
filds
inc
test
jmp
pop
mov
xorb
lds
cwtl
js
xorl
or
in
xor
push
inc
lcall
and
test
cmp
adcl
and
xlat
jmp
jl
mov
popa
jg
adc
inc
aad
add
push
clc
test
test
in
mov
rcrb
or
mov
sub
stos
js
mov
popf
fiaddl
jnp
pusha
loopne
popa
rcl
inc
cmpsl
or
nop
mov
ret
gs
pop
adc
xchg
pop
fwait
push
cmc
inc
adc
imul
clc
je
bound
mov
adc
and
imul
movl
inc
push
scas
push
fwait
loopne
addl
inc
inc
bound
popa
xor
ret
call
add
jmp
jno
sub
jns
cltd
imul
cmp
push
test
mov
lret
or
paddsw
pusha
repz
adc
aam
mov
pop
cs
js
sti
and
adc
jp
push
aam
dec
lods
or
cvttps2pi
mov
shrb
cltd
sub
cmpb
and
sbb
adc
cmpsb
fs
lret
mov
dec
cmpsl
imulb
push
hlt
xor
rclb
pop
or
sub
movsb
xchg
insl
andb
add
or
push
hlt
js
or
es
arpl
es
push
ret
xor
stos
push
xchg
cmc
sbb
cmc
jg
cmp
mov
and
out
dec
sbb
mov
mov
mov
inc
mov
pop
test
jo
jg
repnz
pop
inc
cmp
mov
repnz
pop
cmc
pop
adc
inc
xor
mov
popa
mov
add
push
mov
mov
jne
mov
ucomiss
or
fistps
sub
enter
jle,pn
loope
test
xchg
add
or
sahf
sub
jmp
add
and
push
inc
icebp
push
pop
addr16
rcrl
cmp
pop
jbe
jno
jge
and
fbstp
jno
movsl
cmp
sub
scas
loope
pop
sbb
jbe
jp
sbb
fdivrs
cwtl
dec
sti
repnz
ficoms
incb
push
cmpsl
data16
lret
daa
dec
inc
adc
inc
ret
movb
lds
cmp
out
mov
cwtl
test
call
iret
mov
addr16
leave
fiaddl
xor
push
dec
sbb
inc
xor
dec
loop
sub
cmp
pop
mov
loopne
push
lds
mov
jg
dec
cwtl
jg
das
mov
and
mov
cltd
leave
inc
scas
push
cmc
js
lods
aam
or
pop
inc
and
mov
fistl
ficomps
cmp
andl
push
or
xor
bound
aas
pop
ss
lds
mov
jmp
cmp
jno
iret
mov
into
jno
test
fistpl
mov
rcrl
mov
lret
mov
dec
fildl
bound
jb
pop
stos
pop
outsb
outsb
sarb
inc
or
ds
mov
inc
cmp
and
jb
inc
fwait
aaa
roll
pop
xor
sbb
loope
mov
xor
mov
jmp
lcall
add
aad
add
rclb
or
pop
sbb
push
sbb
sbb
int
movsl
mov
int3
add
std
imul
mov
in
hlt
mov
dec
ror
lret
dec
and
movsb
mov
lock
fsubl
mov
push
cmc
shrl
mov
xchg
loop
pop
aam
int
jmp
leave
cs
sub
std
adc
mov
sti
iret
adc
sahf
cmpsb
stc
and
bound
insl
std
xor
repnz
mov
aas
mov
aam
xchg
add
lcall
or
imul
jl
dec
out
je
push
xchg
push
lds
cmp
icebp
popl
addr16
lret
rcr
pusha
mov
loopne
pushf
cmp
pop
or
xor
in
mov
sahf
inc
pop
adc
fs
fwait
push
sbb
call
loope
push
pop
mov
sub
and
xor
mov
mov
test
push
jle
stos
imul
imul
pop
pop
pop
fdivrl
repz
cmp
loop
push
es
popa
cltd
and
push
push
add
adc
mov
adc
mov
adc
jbe
mov
lret
mov
sbb
int3
adc
test
sbb
inc
push
adc
enter
es
rolb
xchg
stos
lret
mov
pushf
jae
insl
pop
cmp
scas
jp
push
xorb
sub
stc
arpl
push
xchg
not
mov
ret
sbb
lret
push
xor
or
pop
insb
xchg
mov
adc
mov
add
in
xchg
adc
xchg
ja
adc
sbb
push
lock
clc
popf
dec
mov
mov
or
in
gs
inc
pop
pop
mov
lcall
sbbl
add
jbe,pn
adc
push
or
pop
ds
adc
xchg
int
jmp
es
jbe
insl
mov
test
testl
sbbl
pop
mov
insb
mov
inc
jo
sbbl
add
cmc
cmp
je
loop
fnsave
stos
cmp
das
push
jmp
mov
mov
pop
insb
pop
fiaddl
repnz
fwait
mov
mov
out
out
cmp
imul
lret
scas
xchg
scas
pusha
and
ror
mov
pusha
push
addr16
or
mov
pop
rcrl
mov
insb
adc
rcr
cmpsl
xchg
inc
adc
mov
xchg
mov
arpl
adcb
mov
les
std
aaa
pusha
out
imulb
mov
jno
push
popa
test
test
icebp
jne
or
mov
icebp
out
jmp
pop
push
push
rorl
filds
jo
mov
ret
clc
in
ret
mov
adc
cmp
sub
lahf
cmp
movsb
and
mov
cmpsb
andl
or
lea
call
inc
popf
aam
loop
into
lds
add
or
mov
xor
dec
dec
dec
sub
mov
xor
shl
sub
and
ja
out
cmpb
push
jnp
or
mov
pop
sub
stos
inc
mov
pusha
lods
leave
sub
mov
and
cmp
shr
mov
rcl
mov
mov
nop
cmp
popa
test
cmp
out
sahf
fadd
cmpsb
sbb
fisubs
mov
cwtl
cmp
xor
dec
push
mov
in
sbb
fdivl
outsb
int
popf
push
add
and
mov
xchg
pop
flds
or
sub
lret
popa
popa
addr16
pusha
fwait
stc
adc
mov
mov
or
jecxz
bound
adc
add
add
ror
push
mov
mov
cmp
cmc
sub
mov
jmp
pusha
add
jne
mov
call
cld
bound
aam
pop
inc
mov
mov
fisttpl
sbb
mov
incl
dec
pusha
or
scas
je
sbb
gs
mov
sbb
mov
insb
movsb
cmp
or
and
cmp
cmp
and
mov
dec
rolb
dec
ss
mov
jb
xor
pop
aas
push
sti
arpl
mov
add
lock
mov
jbe
das
xchg
mov
arpl
sti
addb
fmull
icebp
pop
adc
ja
push
lods
push
out
ja
call
in
out
nop
jmp
fmull
fisttpl
clc
mov
fsubrp
pop
ficompl
xchg
or
cmpsb
cmc
orl
popf
xchg
mov
test
stc
pop
cmp
stc
inc
sub
imul
hlt
mov
and
fsubl
lahf
push
mov
xchg
add
pop
xlat
rcl
hlt
les
pop
dec
xchg
mov
arpl
stos
fcompl
arpl
out
inc
lock
imull
sub
cli
and
loop
popa
add
mov
mov
outsb
icebp
sbbl
or
nop
shrl
push
mov
and
adc
mov
pop
xchg
cmp
xor
or
shl
mov
ret
pop
pop
mov
pushf
mov
pop
dec
call
jg
scas
int
xor
loopne
repnz
in
sbb
mov
in
inc
fisubl
inc
mov
aam
dec
sub
inc
gs
pop
and
jnp
sub
cs
cltd
xchg
popl
pop
sbb
xchg
pop
out
jge
sub
push
jno
mov
inc
cltd
cmpsl
push
xchg
jle
xor
pop
adc
adc
and
sbb
std
mov
pop
add
and
pushf
push
je
inc
cltd
jno
dec
js
inc
adc
pop
sahf
popa
int
dec
cmp
sbb
push
xor
insb
outsl
pop
jmp
xchg
sbb
cmpsl
add
test
cmp
hlt
imul
push
sub
adc
add
mov
jb
pop
into
stos
in
fisubrl
loop
sbb
add
pop
int3
aam
mov
xchg
xchg
dec
lock
pushf
sbb
sub
addr16
clc
dec
inc
mov
or
and
xor
bound
adc
repz
push
mov
jl
adc
mov
jg
cmpl
pop
cmc
xchg
out
dec
mov
dec
out
sbb
cmpsb
push
sarb
inc
mov
cmp
add
sbb
shll
incl
adc
je
add
push
jb
vpand
mov
add
sub
cld
fnstcw
xchg
mov
cmp
mov
loopne
fs
inc
sub
lret
xlat
arpl
and
movsb
rorb
fdivrp
mov
add
add
stos
add
in
mov
lds
jg
or
inc
out
lea
std
and
lret
call
cmp
xchg
sub
loopne
jbe
push
cwtl
dec
jne
push
mov
enter
jo
inc
aaa
pop
fldt
loope
mov
aad
and
xchg
mov
iret
push
pop
ret
outsl
in
mov
jnp
loope
jl
xchg
fadds
cmp
outsb
stos
rep
jno
mov
push
jl
aad
lret
xchg
pop
popa
arpl
fisubrl
jg
dec
icebp
mov
push
push
jecxz
inc
jb
jecxz
les
out
lds
loopne
dec
xchg
push
inc
inc
push
cmpsl
sahf
xor
mov
mov
push
repz
mov
and
scas
rcpps
bnd
mov
dec
pop
xchg
mov
and
or
es
sbb
imul
pop
pop
movsl
pusha
push
test
fldcw
xchg
jle
mov
inc
les
jmp
sbb
jg
iret
xchg
xor
insl
or
in
mov
stos
dec
loope
jo
mov
push
mov
jo
scas
loopne
mov
pusha
xlat
lods
sbb
cli
leave
pop
insb
sub
add
popf
sbb
adc
inc
arpl
cmpsb
imulb
ret
jg
inc
popf
es
loope
cmpb
xchg
in
or
dec
xchg
pusha
nop
lahf
adc
ficoml
sbb
add
mov
movsb
test
jne
mov
mov
dec
ret
or
push
in
pop
imul
pop
js
xchg
ds
mov
xor
adc
mov
jae
aaa
enter
daa
mov
imul
movsl
cmp
cmp
out
jmp
cmpsb
push
mov
mov
mov
inc
lea
mov
mov
mov
pop
mov
cmp
movsl
jno
pop
das
add
in
daa
and
xchg
sub
push
loop
xchg
xchg
adc
cwtl
shrl
aas
adc
or
sub
xor
add
xlat
out
or
push
adc
adc
orb
pop
dec
sub
mov
clc
imul
shll
lcall
pop
xchg
push
fwait
icebp
int
movsl
fistps
jle
scas
and
and
shrb
push
aaa
rcl
jbe
fsubl
mov
gs
je
daa
sbb
pop
dec
daa
xchg
cmp
mov
test
mov
aaa
xchg
and
movsl
jmp
xor
popa
mov
enter
sub
mov
cltd
test
xchg
xchg
xor
push
sbbb
inc
inc
add
inc
rolb
dec
imul
add
pop
mov
inc
add
int
movsl
mul
ret
adc
lods
ret
js
sub
lret
push
mov
or
outsl
cltd
cmp
mov
outsb
mov
test
pop
mov
cmc
push
sbb
pop
cmp
aam
arpl
adc
push
adc
add
mov
js
cmp
and
jp
cmp
in
sub
cmpb
adc
pop
pushf
mov
lahf
das
shll
lds
mov
and
ret
sbb
das
stc
and
leave
inc
data16
lods
rolb
in
loopne
xor
dec
sbb
inc
test
mov
popa
adc
jp
shrl
mov
ds
test
stos
inc
push
daa
stos
or
push
xor
dec
lods
push
insl
mov
std
pop
rorl
ja
scas
addr16
fnsave
mov
in
jbe
jmp
out
je
jne
mov
pop
iret
ja
mov
aaa
aas
xor
stos
and
inc
in
inc
cli
xchg
mov
outsb
inc
pushf
mov
dec
scas
and
cmp
fsubrl
xchg
out
sbb
xchg
dec
jns
pop
cmp
jg
inc
int
xchg
pop
jae
sti
sbb
cs
cmp
mov
lods
xchg
nop
fs
cmp
lret
pop
add
cld
gs
add
pop
adc
xchg
pop
adc
sti
stc
xchg
shll
les
movsb
aaa
pushf
add
mov
mov
or
mov
jo
pop
mov
fimuls
cmp
shll
test
aas
xchg
sub
or
pop
sbb
cmp
add
or
shlb
mov
dec
std
stos
mov
add
leave
jbe
fildll
mov
dec
mov
sub
cwtl
fcomip
aad
mov
int
clc
lods
ror
and
out
scas
scas
clc
and
mov
leave
lret
xor
dec
cltd
aad
call
cmp
data16
sti
sbb
nop
mov
push
pop
aaa
inc
lret
leave
out
xchg
mov
movsb
pop
clc
mov
cmp
cmp
mov
push
and
sarl
xor
push
sbb
repz
rcrl
fwait
xor
and
enter
hlt
inc
cltd
xchg
into
shll
lea
jmp
pop
jne
dec
xor
pop
mov
lret
fnstsw
int3
stos
nop
iret
inc
popa
pop
mov
lcall
shlb
inc
inc
int3
jbe
xchg
dec
test
mov
shll
loop
ret
shrb
xor
into
cmp
and
int
loope
out
negl
arpl
out
cmp
sub
int
les
arpl
gs
or
xor
xchg
mov
push
fnstsw
into
loope
stos
push
fwait
insb
lret
lcall
jne
adc
xor
enter
dec
insl
jg
pusha
cmc
lret
cmp
mov
int
lea
js
subl
mov
fs
in
insl
lret
js
fidivrl
and
insl
inc
inc
mov
clc
jp
out
into
popa
adc
and
sub
dec
daa
inc
mov
cwtl
pop
clc
push
or
gs
push
or
mov
mov
das
decl
aaa
pop
adcl
iret
popa
enter
and
jo
pop
loope
outsl
mov
cmp
stos
mov
dec
xchg
adc
push
testl
pop
and
ljmp
mov
sbb
mov
stos
in
icebp
or
test
cmpsb
lock
pusha
jb
adc
rolb
sti
or
ret
lods
leave
ret
push
push
mov
pop
or
fidivl
sahf
mov
add
sbb
inc
popa
gs
and
ja
cld
push
dec
fnstcw
sub
sti
mov
fld
sbbb
pop
neg
or
lahf
xchg
mov
mov
cs
bound
push
and
ljmp
pop
xor
pop
adc
xor
pop
sub
jecxz
and
push
testb
ret
mov
pop
add
xchg
mov
and
xchg
adc
ret
imul
cmp
shll
pop
test
xchg
mov
or
jg
and
pop
lock
nop
ss
dec
aad
pop
lcall
in
fnsave
pop
loope
sahf
rcrl
or
inc
sbb
je
jmp
popf
imul
mov
inc
cmpl
mov
mov
inc
xor
xchg
aad
sbb
fwait
lret
sbb
fwait
movsb
jle
xlat
mov
cmp
dec
pop
cmp
jne
fdivrl
pop
into
test
shlb
push
decb
xor
adc
std
pop
sbb
insb
test
push
adc
popf
pushf
adc
and
sub
xchg
shl
sbb
push
int
int3
push
movsb
sarb
int3
cmp
icebp
adcb
xor
out
adc
inc
mov
or
or
adc
cmp
popf
fidivrl
lcall
enter
daa
sbb
xorl
jle
inc
mov
loope
ficoms
mov
mov
and
pop
imul
hlt
jle
fstpl
push
dec
xchg
icebp
jecxz
push
fisubl
dec
or
roll
cmp
add
mov
cmp
jg
jle
aaa
and
xchg
cmc
mov
inc
loop
cli
or
adc
call
lahf
xchg
jg
shlb
push
adc
jno
jmp
je
xchg
jb
xor
repz
jno
sbb
add
push
pushf
mov
aaa
andl
xchg
mov
fidivl
fcompl
push
loopne
cmp
cld
dec
adc
movsl
ja
hlt
movsl
dec
ja
int3
es
adc
mov
cmp
and
test
dec
sbb
mov
push
inc
lahf
in
sbb
mov
pop
mov
jno
outsb
popa
xchg
unpcklps
outsb
shl
nop
inc
shrl
js
sub
jno
xchg
sub
outsb
fadds
add
push
shrb
dec
stos
xacquire
mov
jg
sub
scas
loopne
inc
ret
stc
dec
sbb
leavew
dec
sub
addb
lea
xchg
jmp
cmp
sub
push
adc
jnp
pop
or
sti
int
push
fists
in
iret
dec
mov
jae
adc
jb
mov
cld
xor
lret
jp
sub
std
cmp
rclb
push
outsb
jne
inc
cltd
push
stos
lahf
push
xlat
iret
stos
sub
orb
or
push
sti
pop
and
enter
jnp
xchg
ja
mov
adc
fsubp
and
decl
pusha
jo
mov
mov
mov
pmaxsw
mov
jo
pushf
pushl
inc
jl
jo
andb
lahf
inc
xchg
cs
xlat
push
mov
fsts
push
jae
shll
jecxz
adc
aaa
sbb
lock
into
mov
insb
rcrl
mov
int3
xchg
outsb
adc
ss
push
roll
dec
dec
cs
cmp
fadds
push
lret
pop
aaa
pushf
nop
les
mov
mov
and
stos
movsb
in
ficoms
mov
mov
lret
insl
mov
adc
pop
shlb
xor
fists
pop
rorl
bound
inc
mov
into
adc
icebp
or
and
inc
jne
das
sub
cmpsb
pop
fimuls
sub
enter
jb
sbb
xchg
outsl
cld
ret
xor
dec
aam
fwait
insb
fnstenv
xchg
popf
popa
les
sahf
dec
test
sbb
in
es
arpl
out
mov
aam
jno
out
sbb
clc
mov
cwtl
mov
outsl
dec
jmp
add
mov
adc
push
notl
mov
in
mov
or
int3
stos
in
fcoms
jnp
sub
xchg
stos
stos
mov
mov
dec
sbb
jb
mov
scas
xchg
pop
pop
mov
and
pop
cmpsl
sti
mov
mov
daa
and
cmp
mov
or
sub
mov
negl
xor
mov
stos
push
jl
jne
daa
cmp
inc
outsl
push
cs
fnstsw
or
in
out
sahf
sbb
ds
dec
xchg
push
loop
cwtl
sbb
sbb
mov
push
jge
inc
je
mov
mov
jecxz
movsl
jg,pn
cltd
pushf
lahf
bound
sub
rcrb
repnz
idiv
xor
pop
daa
add
xchg
mov
mov
aaa
in
loopne
mov
dec
jl
pushf
mov
inc
mov
jb
movsl
int3
cli
shl
or
bnd
cltd
inc
ss
pop
clc
adc
xor
cmpsb
out
rcrb
pop
pop
sbb
scas
jo
pop
xor
leave
mov
stos
aas
repnz
mov
jl
sub
outsb
push
fnsave
das
add
daa
jge
jp
xchg
cwtl
test
inc
mov
fisubrs
xor
loop
sbb
pop
push
fdivl
mov
arpl
dec
push
inc
test
adc
dec
push
lock
xor
fmull
jl
sbb
je
hlt
jns
cld
ss
pop
inc
into
rclb
adc
pop
and
jnp
cmp
pop
mov
repnz
sarb
mov
in
cwtl
jns
xchg
mov
iret
fs
push
out
leave
and
jecxz
dec
aam
sub
pop
add
push
xchg
int3
lds
push
mov
adc
scas
jae
jb
mov
jnp
shl
jmp
sbb
mov
jle
jno
pop
pop
push
add
push
iret
inc
lods
ja
jl
jecxz
frstor
sub
rcrb
sub
sar
push
sbb
mov
fldt
xchg
push
mov
xor
and
daa
adc
ror
pop
push
xorb
stos
in
ret
dec
fs
icebp
sub
ret
sti
sub
cmp
mov
scas
sbb
jb
out
jp
add
cmc
rolb
lahf
mov
adc
inc
out
mov
popf
insb
test
aam
mov
mov
xchg
mov
xchg
jb
jp
pop
divb
stc
sub
leave
add
mov
ds
sbb
mov
sub
sub
bnd
mov
adcb
sbb
or
pop
inc
lods
xor
mov
dec
push
das
inc
mov
rorl
stos
repnz
push
cmc
cmp
in
sbb
pop
test
loop
pop
inc
aam
imul
mov
mov
xchg
adc
adc
dec
pusha
jno
dec
or
pushf
add
popa
mov
les
adc
sbb
int
and
cwtl
out
jb
pushf
push
inc
ret
xchg
outsb
sub
add
loope
out
mov
or
jb
push
push
and
xchg
and
adc
rorl
push
into
outsb
stc
lahf
lods
dec
xor
adc
out
or
ds
inc
sub
mov
jno
push
mov
nop
inc
movsl
mov
cli
fwait
jg
jmp
pop
fs
push
loopne
inc
addr16
mov
int3
adc
jne
fs
xchg
push
or
mov
ret
pop
mov
pop
xchg
inc
in
lret
loopne
test
cwtl
dec
push
adcl
orl
js
cvtps2pd
out
test
xchg
and
add
lds
fildl
lock
mov
ss
and
mov
push
sub
shr
or
icebp
add
xor
fsubrs
pushf
xchg
test
mov
inc
nop
push
out
addb
cmc
cltd
je
sarb
or
clc
xor
je
cmp
jmp
std
add
cli
into
cs
scas
lods
test
xchg
cld
cmp
rorl
jecxz
and
scas
adc
sub
fists
xor
add
and
iret
mov
adcl
mov
cmc
bound
pushf
dec
adc
rep
xor
xor
mov
jecxz
rclb
jecxz
cld
repz
popa
int
mov
gs
or
push
cmp
stc
mov
iret
pop
hlt
pop
mov
mov
xchg
push
xchg
adc
jo
sbb
and
jnp
jp
dec
adc
mov
pop
mov
pusha
pushf
cmp
cmp
xlat
scas
call
xchg
mov
mov
pop
pop
jecxz
jecxz
mov
mov
std
push
xchg
add
inc
insb
adc
jge
inc
vpsubb
lds
inc
js
fidivs
xchg
or
pop
xor
add
lret
mov
fisttpl
push
xchg
mov
xor
aaa
mov
add
mov
jmp
jb
xor
mov
addr16
push
mov
lahf
jae
jne
sbb
arpl
jmp
into
pop
in
cmpsl
and
xor
push
or
lods
out
lea
mov
push
push
or
sub
pop
leave
cmc
leave
in
jecxz
pop
pop
shlb
pop
or
pop
push
lea
out
arpl
inc
cmp
call
mov
test
and
addb
mul
shlb
sub
ja
cwtl
xchg
lret
fisubl
xchg
jb
lea
push
mov
loopne
out
cld
cmp
pop
pop
ljmp
pusha
pop
cltd
adc
lret
push
sbb
push
int3
dec
scas
or
loopne
fists
xchg
stos
pop
push
mov
mov
pop
repz
push
js
cmpb
and
pinsrw
sub
mov
insb
mov
or
cli
leave
jnp
rolb
repz
add
fs
push
out
pop
pop
xor
hlt
mulb
pushl
in
xchg
pusha
add
fldl
xchg
push
in
insb
or
jne
and
scas
jnp
shl
push
fisttpl
ror
cmpsb
in
insb
or
dec
pop
inc
mov
lcall
adc
jmp
xchg
iret
jo
jmp
fimull
xor
insb
clc
xor
mov
ficomps
mov
jo
cmp
ljmp
pop
pop
mov
sub
mov
push
mov
or
scas
cmpsb
fidivrs
inc
adc
leave
cwtl
mov
popf
icebp
mov
ret
mov
pop
ficompl
inc
in
sbb
and
inc
jmp
ja
cmpsb
push
popf
push
adc
or
lods
shll
shl
jne
dec
mov
mov
pop
inc
mov
add
add
push
sti
adc
cli
inc
cmc
cli
ljmp
mov
mov
dec
mov
ss
lock
jmp
outsb
pop
xchg
call
mov
mov
xlat
dec
pop
fbld
sub
nop
mov
insb
leave
mov
adc
push
sub
fldcw
ja
push
jb
mov
test
movsb
pusha
and
int
xor
xchg
lock
sbb
jno
or
sahf
mov
push
nop
das
cmpsl
push
rorb
sbb
mov
nop
push
je
rcr
out
repz
out
das
mov
mov
shrl
lea
cmp
inc
ss
inc
jbe
outsb
sub
add
popf
js
mov
add
stos
iret
cld
cwtl
inc
xchg
xchg
mov
lahf
mov
mov
jmp
xlat
add
repz
push
lahf
lret
add
xchg
aam
and
stos
dec
iret
add
cmc
into
minps
push
push
jl
les
xlat
sahf
scas
dec
jns
arpl
sbbl
clc
push
and
xor
loope
or
jle
pop
xchg
pop
ja
push
dec
cvtps2pi
imul
in
lds
loopne
jne
daa
xor
rcrb
or
sub
loopne
loop
pusha
loopne
into
mov
and
mov
sbb
pop
jecxz
into
outsb
jg
add
js
cmp
arpl
and
jl
mov
aaa
andl
fchs
stos
mov
and
push
pop
pop
daa
jge
stc
ljmp
data16
mov
imul
les
loope
gs
test
out
pushf
mov
inc
cltd
or
fsts
or
inc
mov
dec
clc
sbb
imul
popf
repz
adcl
nop
rcrl
mov
pop
cld
les
mov
sbb
ljmp
rcl
mov
and
xor
jp
pop
mov
rol
pmaxsw
jns
sbb
test
cmp
nop
subb
and
fwait
xorl
pop
xor
loopne
ret
push
push
push
loop
fbld
test
in
mov
cld
mov
and
cmp
or
pop
inc
stos
mov
cltd
xchg
and
js
cli
addl
xchg
inc
dec
push
daa
lcallw
std
testb
sbb
sub
push
and
popf
mov
adc
mov
jecxz
loop
and
push
inc
pop
sub
test
pop
in
movl
rcrb
xor
add
rcrl
stc
inc
fdivrl
xchg
pop
mov
jmp
les
imul
nop
lea
and
sub
adc
cli
and
orl
popa
in
xor
jge
push
das
mov
hlt
sub
sub
in
or
scas
and
push
add
test
jnp
popa
jge
jb
fmuls
push
add
ficoml
cmc
test
popf
stc
cmp
dec
cld
pop
test
jl
aaa
jge
sbb
add
ja
mov
movsb
mov
adc
mov
shrb
test
push
arpl
imul
fisttps
mov
sub
sub
mov
add
stc
inc
jg
out
out
out
stos
bound
nop
cmp
arpl
scas
xchg
mov
leave
movsb
sbb
popa
jg
xor
roll
bound
loop
sbb
pop
ds
lret
push
in
jb
push
ja
xlat
mov
int
cmpsb
sub
cltd
std
xchg
xchg
outsl
mov
push
loope
dec
roll
into
outsl
inc
test
cmc
stc
cmp
stos
std
pop
in
cmp
or
clc
imul
xchg
lea
in
cmc
lds
int3
cld
cmc
or
xor
jecxz
dec
jge
scas
jg
mov
orl
push
push
hlt
lods
xchg
lods
add
dec
cmp
add
push
add
adc
loopne
push
pop
into
dec
sub
jb
addr16
movsb
dec
sete
sub
stos
push
pop
aas
or
lods
addl
sbb
ret
arpl
imul
das
mov
cmpsb
pop
lods
movsl
hlt
dec
sub
insb
lds
nop
stos
push
adc
adc
pop
arpl
test
repz
fucomip
cmp
and
clc
ss
or
xchg
mov
lods
mov
push
and
negb
adc
and
out
popa
sub
insl
mov
jb
inc
js
dec
repz
lock
pop
in
in
popf
call
cmp
ficomps
sub
adc
push
fs
push
inc
xchg
mov
cwtl
stos
stc
xorl
or
sbb
cmp
and
or
inc
popf
mov
adc
lahf
popa
clc
mov
decb
or
daa
push
and
popf
push
mov
jmp
lea
scas
repz
pusha
xchg
push
repnz
lret
mov
iret
pushf
or
adc
pop
movsl
mov
and
aam
jmp
xchg
mov
jne
test
mov
jp
adc
fwait
outsl
std
movsl
addr16
jb
and
out
loop
loope
mov
or
movsb
pop
outsl
out
dec
xchg
loope
or
mov
hlt
repnz
lret
or
sti
mov
cmp
out
loop
push
xor
ljmp
les
sbb
loop
xor
xchg
jno
mov
push
jns
sahf
scas
stos
jp
jp
push
sbb
sub
sub
push
icebp
int3
imul
add
imul
call
mov
int3
rcrl
push
es
std
inc
ud0
mov
jmp
ret
jo
pop
pusha
sti
and
out
inc
cmp
rolb
and
mov
jno
stc
mov
push
xchg
push
pop
pop
lds
and
pop
or
movsl
ror
stc
mov
imul
pop
sub
les
jecxz
jbe
lods
stos
dec
loope
lds
insb
int3
dec
pop
cmp
xchg
jl
sbb
sub
or
mov
push
jle
sub
mov
xor
stc
std
jne
xchg
nop
dec
mov
add
inc
xor
repz
sub
jge
loopne
bound
sarl
arpl
mov
mov
jg
add
ficoml
jno
pop
mov
add
outsl
mov
aaa
xchg
pusha
jo
enter
in
jge
fstps
sub
stos
jo
repz
rcll
cmp
pop
jne
loope
ficomps
andl
inc
jmp
push
xchg
jno
push
mov
pushf
inc
data16
js
push
jecxz
insb
test
jo
iret
fsub
test
daa
pop
mov
sarl
mov
fimull
inc
rcr
add
movsb
bound
and
cmp
sti
out
mov
mov
out
xor
or
sbb
push
dec
out
fldenv
xor
mov
fcoml
dec
stc
jns
outsl
js
loope
jmp
in
pop
in
stos
leave
fsqrt
lock
mov
shl
orl
ss
xor
push
jg
dec
add
bound
or
sub
push
jnp
cltd
js
in
pushf
xor
adc
aaa
std
lds
mov
dec
repz
fldl
ret
cmp
sti
testl
mov
or
mov
lahf
mov
test
jmp
outsb
inc
jle
mov
repnz
xchg
sahf
xchg
pop
xor
xchg
jp
popa
xchg
pop
dec
scas
jmp
aad
jns
push
xchg
mov
sub
out
push
scas
and
mov
push
in
pop
adc
mov
mov
cmp
lods
cld
stos
hlt
js
pop
or
imul
adc
add
dec
jg
in
mulb
jb
iret
ljmp
or
mov
jmp
pop
out
jnp
sub
lret
cmp
push
sti
ds
sbb
push
push
dec
cmp
pop
inc
std
and
sti
lock
mov
pop
fnstcw
adc
pop
pop
stc
mov
pop
shlb
mov
cmp
inc
outsl
or
pusha
aam
mov
push
mov
scas
pop
and
test
cltd
inc
jns
fs
leave
popf
xor
jne
je
ret
icebp
xlat
shll
xadd
pop
sbbb
sub
popf
xchg
or
lcall
jge
mov
mov
push
mov
hlt
das
outsl
repz
or
pop
xchg
js
sub
xchg
mov
popa
push
mov
jo
pop
add
adc
jge
jbe
lcall
lds
or
lahf
fcomps
jmp
and
out
adc
adc
call
sti
out
xor
sbb
sub
les
in
or
jl
idiv
xchg
in
ss
adcl
jno
xor
ljmp
bound
popf
clc
repz
add
xchg
push
in
clc
data16
mov
adc
adc
inc
push
adcb
arpl
mov
test
loop
fwait
fwait
lret
orb
pop
cmp
xchg
or
popa
cltd
mov
jbe
jge
pop
out
xor
imul
cli
mov
mov
call
jb
or
inc
enter
lret
leave
popf
lea
in
pop
lret
idivb
push
fdivrl
and
push
push
mov
aam
and
hlt
mov
push
xor
push
pop
fiaddl
xchg
mov
jge
loopne
fmul
push
and
pushf
fwait
aas
sub
mov
mov
mov
bswap
pop
fwait
sbb
jns
enter
jle
test
mov
add
insb
mov
gs
adc
mov
out
dec
das
xchg
mov
sbb
lock
lods
jp
in
lahf
xor
or
adc
orl
add
adc
sub
jle
and
stc
and
sbb
iret
insl
sbb
xor
sahf
inc
lret
lret
dec
mov
dec
inc
loope
and
arpl
imul
addr16
imul
or
pop
jle
out
xor
xchg
sbb
cmp
or
push
insl
add
mov
imul
hlt
or
dec
gs
fiadds
or
shrl
mov
mov
shll
jbe
mov
adc
xor
or
nop
lret
add
stos
sbb
mov
test
adc
dec
xor
pop
clc
aad
out
push
and
loopne
lock
out
fstp
xor
lods
sub
inc
cmpsb
int
je
inc
mov
mov
jg
inc
mov
loope
push
jp
mov
scas
div
rorl
add
mov
mov
jae
xor
out
mov
inc
dec
adc
mov
lods
mov
mov
dec
imulb
jecxz
sahf
hlt
xlat
xlat
cmp
xchg
fisubl
mov
out
adcb
sahf
out
bound
jmp
cmpsb
inc
sti
popf
push
jb
mov
test
loop
and
ficoml
clc
test
dec
jns
fildl
cmp
push
xor
add
mov
daa
rol
insl
mov
lods
imul
push
cli
or
jle
or
mov
cs
pop
int
daa
cmp
cld
lock
in
dec
ret
mov
jmp
fdivl
aam
mov
ret
xchg
inc
insb
divb
xchg
sub
sti
cmp
mov
and
jne
pusha
pushf
xchg
addb
jae
add
jno
sub
dec
jb
subb
sub
mov
orl
cmp
das
pop
dec
mov
dec
xchg
adc
pop
das
stc
into
call
mov
stos
xorb
loopne
sub
rorb
lods
stc
cmc
sbb
cld
insl
mov
inc
insb
std
mov
test
mov
repnz
lahf
lahf
inc
or
ret
call
divl
enter
mov
and
mov
gs
repnz
pop
push
mov
movsb
xchg
or
testb
dec
enter
aaa
shrl
mov
ret
test
ficompl
or
notb
das
dec
or
loop
fld
shl
jns
movl
dec
mov
or
scas
sub
lret
int3
in
add
jmp
mov
lock
stos
or
hlt
mov
push
push
inc
push
rclb
out
lods
cs
lret
loop
cltd
or
xor
mov
fildl
cltd
aam
cmp
inc
cmc
popf
jne
and
cmpsl
pop
pop
push
mov
xchg
adc
in
xchg
push
push
lcall
adc
out
pop
loopne
das
popa
inc
xor
pop
lds
gs
cmpsl
pop
ret
adc
lock
lahf
in
push
mov
push
out
stos
xchg
dec
repz
jecxz
inc
mov
in
xchg
lods
mov
ret
pop
cwtl
xchg
inc
cli
icebp
mov
sub
inc
lret
add
fcomps
aaa
lea
or
xchg
scas
adc
je
sti
jnp
sbb
adc
aad
and
xchg
nop
xor
add
mov
stos
mov
xlat
or
mov
aaa
jnp
push
inc
in
inc
push
sti
pusha
fs
rcrb
jbe
outsl
sti
setge
rol
add
inc
sub
inc
in
push
int3
jge
jbe
repz
mov
iret
test
shlb
scas
fldt
jbe
mov
sbb
adc
adc
test
sbb
jae
mov
inc
mov
js
test
js
fsub
inc
popaw
xor
stc
fcom
cmp
sub
out
pop
xchg
mov
pop
jecxz
data16
jg
adc
rorl
divb
icebp
lret
movsl
mov
pusha
addr16
jmp
mov
and
mov
pop
push
out
or
leave
fwait
sbb
cmc
ljmp
dec
lods
cmp
add
sbb
out
jp
mov
movsb
sub
int3
imul
mov
jbe
enter
adc
mov
mov
test
int3
xchg
or
scas
dec
adc
pushf
sarl
ja
push
push
sub
es
xchg
mov
bound
lock
cmp
dec
bound
stos
push
push
mov
in
mov
test
add
stos
ja
or
sahf
clc
or
jg
shll
sub
and
popf
push
movl
hlt
add
fmulp
shlb
popf
aam
out
cld
ss
jne
dec
aam
jge
out
rcrl
movl
inc
xchg
mov
and
clc
xor
mov
lods
lret
mov
mov
add
test
cli
add
adc
fsts
sub
jno
cmp
inc
jns
ljmp
paddusw
cli
sub
testl
add
mulb
fists
adc
and
dec
cwtl
hlt
aad
jle
push
inc
test
das
pop
insb
mov
movsl
adc
in
cmp
adc
jo
imul
or
mov
mov
cwtl
inc
test
push
add
adc
cmp
add
pusha
fucom
les
xlat
std
mov
ss
xchg
jne
and
mov
jg
enter
fs
xchg
mov
orb
xor
in
cmp
lds
imul
adc
mov
cwtl
scas
jmp
ja
sbb
jmp
inc
sub
push
lock
sbb
out
hlt
mov
gs
test
iret
push
push
rcrb
lahf
mov
lds
call
jp
cmp
outsl
mov
ret
sub
repz
js
push
mov
cmp
mov
daa
inc
mov
enter
or
push
mov
pop
jmp
and
jb
mov
ljmp
cmp
lock
mov
mov
push
pop
das
jge
mov
jmp
sub
pop
jl
or
and
jl
add
fldenv
mov
pop
push
pop
ljmp
cmp
push
adc
or
adcb
mov
fwait
das
sub
movsl
xor
or
cmc
fprem1
jmp
dec
in
test
push
sub
push
pop
xchg
or
xchg
rclb
mov
and
mov
add
lcall
test
mov
loop
mov
lcall
xor
cmp
mov
dec
loop
xchg
inc
lods
mov
push
insb
add
cmp
scas
cs
push
jnp
add
dec
ja
cmp
out
jae
leave
push
mov
in
stos
sahf
inc
jae
popf
inc
and
je
movsl
xchg
mov
mov
and
and
lahf
mov
sub
daa
xor
add
mov
mov
and
push
mov
xchg
iret
adc
lods
jae
js
pushf
and
shl
in
xchg
mov
ljmp
or
or
arpl
test
jg
ja
aaa
mov
jge
enter
cmpsl
push
xlat
fistpl
inc
sbb
mov
sub
subl
push
adc
lock
lcall
shrb
push
dec
xor
pop
or
bound
int
mov
jb
popf
dec
fldt
adc
mov
xchg
ss
test
xor
xlat
call
pop
jns
aaa
adc
stos
addr16
lret
jmp
das
xchg
push
outsb
or
pop
js
imul
dec
xchg
sub
nop
in
add
imul
push
icebp
sub
rol
dec
lret
add
sub
out
out
add
sub
mov
xchg
jecxz
loope
mov
ss
je
jge
pop
inc
and
mov
xchg
jbe
cmp
jle
aas
and
inc
xor
xor
push
xor
dec
xorb
mov
inc
in
gs
call
sbbb
xor
dec
and
dec
sti
inc
push
scas
push
pop
push
cmpsb
jg
das
fs
cmp
adc
nop
xchg
push
push
rcl
pop
jae
and
and
ja
repz
daa
fstps
rclb
test
dec
movsb
add
dec
mov
dec
jno
popf
into
push
adc
and
sbb
movsl
jmp
arpl
bound
in
adc
mov
outsl
dec
sbb
pop
jecxz
fistpll
lahf
in
xchg
and
xor
mov
cmc
xchg
addl
aaa
es
cmp
cmp
out
pop
imul
sub
inc
dec
or
sub
sub
daa
mov
dec
inc
adc
sbb
stc
int3
lcall
sahf
lods
insb
push
xchg
mov
sub
ret
and
jmp
and
mov
lock
ds
test
add
push
std
insl
sbb
or
cld
faddl
xor
xor
jo
stos
and
jmp
pop
mov
ljmp
sub
jb
cs
arpl
sahf
sbb
inc
mov
in
inc
sbb
in
cmp
and
jmp
and
test
jecxz
iret
mov
je
daa
decb
ds
in
out
mov
rcrl
mov
ret
jns
loopne
xor
mov
call
cltd
jae
icebp
aaa
fucom
push
jg
arpl
add
js
inc
movl
loope
in
xchg
sbb
dec
cwtl
and
pop
mov
mov
add
ret
das
fdivrl
out
mov
cmp
cli
jmp
bound
pop
clc
outsb
mov
inc
xchg
bound
adcl
scas
ret
xor
pop
or
outsl
or
mov
stos
insl
dec
pusha
and
dec
mov
fldcw
mov
addl
inc
hlt
daa
inc
movsb
xchg
ja
shll
jae
and
pop
stos
and
pop
adc
adc
xor
cmpsl
dec
in
mov
pop
push
pop
fcompl
push
ds
out
dec
dec
sbb
mov
sub
jecxz
xchg
sbb
push
jg
mov
add
sahf
icebp
mov
in
ret
leave
lods
cmc
aad
dec
adc
mov
dec
sub
add
fdivrp
cmp
cmpsb
scas
aas
ret
pop
outsb
cmpsl
dec
mov
pop
das
sub
pop
pop
add
mov
dec
xchg
inc
call
push
cmpl
push
jae
push
mov
fiaddl
pop
in
nop
inc
pop
push
push
jbe
adc
mov
mov
mov
lret
pop
push
sub
test
and
xor
adc
sub
out
loopne
cmp
xrelease
in
sub
mov
testl
cmp
shl
xor
push
jecxz
mov
or
mov
aas
lods
pop
and
leave
inc
dec
jnp
jo
in
mov
mov
fisubs
mov
xchg
push
outsl
scas
xchg
sub
sub
leave
inc
mov
dec
sbb
add
cmpb
imul
sarl
lret
cmpsb
and
pop
push
pop
jl
sub
out
cwtl
adc
rol
push
mov
pushf
adc
in
cli
pop
push
mov
fdiv
les
imulb
push
push
jno
mov
leave
dec
repz
fnstenv
repz
sbb
xor
ds
stc
mov
cld
lret
sub
call
jnp
push
adc
sub
sub
or
scas
mov
sbb
xchg
ds
dec
lea
cmp
adc
mov
adc
in
mov
adc
xchg
add
jns
repz
das
arpl
pushl
fcoml
sbb
cmpsl
inc
xcrypt-cfb
cmpsl
out
shrl
pop
data16
imul
nop
pusha
push
pop
jl
nop
mov
dec
jecxz
int
shll
popa
mov
inc
ret
push
dec
sti
mov
cld
cmpsl
aas
mov
xlat
mov
sub
lods
inc
pop
mov
addl
popf
mov
mov
mov
mov
sahf
int3
imul
ret
dec
addl
pop
pop
adc
loop
or
mov
or
lock
jecxz
cltd
push
cmpb
test
xchg
movsb
das
xor
cmpb
push
addr16
dec
cmpsb
jb
add
out
inc
pop
scas
dec
js
xor
popw
sub
mov
roll
xor
dec
sub
fdivr
cmp
adc
sbb
or
dec
jle
ja
fwait
out
mov
in
and
scas
mov
jo
sub
mov
mov
cs
std
imul
movsb
mov
stos
dec
jbe
cmpsb
jle
push
pushf
mov
icebp
ficompl
bound
pop
xor
dec
scas
jbe
insb
test
ficoml
or
jo
mov
sub
aad
mov
push
in
daa
bound
shlb
xchg
lahf
dec
dec
cld
xchg
adc
movsl
pop
mov
sbb
or
jg
push
cmp
sbb
xor
in
mov
shrl
shrl
inc
push
push
xlat
bound
scas
fmull
mov
adc
lcall
shll
or
sub
out
test
sbb
je
lea
or
addr16
mov
jo
xor
xchg
mov
or
bound
aad
adc
movsl
lods
mov
mov
mov
cmp
imul
add
call
cmp
int3
pop
xor
test
scas
cmp
test
and
gs
dec
pop
cld
and
mov
inc
std
nop
dec
hlt
add
pop
in
sbb
mov
add
cmpsl
aaa
dec
lahf
or
repz
or
rorb
push
or
add
sbb
dec
jae
adc
in
xor
lods
in
adc
cmp
mov
push
lock
loope
jo
xor
inc
rolb
and
mov
mov
outsb
xorl
lret
xchg
test
mov
add
sub
aad
aam
or
loope
dec
rcll
dec
stc
rorl
prefetchw
icebp
in
cld
cmpsb
push
mov
cmpl
dec
fildll
test
sahf
sbb
or
gs
inc
adc
cmp
cmpsl
and
lea
pop
fstpt
mov
xchg
mov
or
mov
enter
push
pop
pop
aas
adc
in
out
mov
xchg
jb
cld
test
or
pop
cli
adc
jp
add
cmc
cmp
leave
movsb
loop
negl
ret
inc
and
xor
dec
mov
adc
mov
xchg
adc
lcall
stos
out
loop
xchg
or
xor
xor
add
outsb
scas
xor
cmp
aam
movb
mov
adc
mov
inc
ss
pop
popl
test
bound
ljmp
push
daa
push
data16
fwait
pusha
aaa
rolb
sbb
and
or
lcall
and
lcall
add
es
bound
dec
mov
xchg
fisubrs
and
pushf
pop
ficoms
jmp
ret
lods
sub
sub
xchg
adc
xor
sub
fists
sarb
movsl
loopne
dec
outsl
xor
mov
push
mov
mov
fstps
pop
lahf
cmp
jg
mov
dec
pop
jge
mov
xor
aam
mov
test
in
je
imul
push
jmp
pop
fsubrp
fwait
insb
out
adc
cld
cwtl
or
arpl
or
mov
fidivrl
cwtl
mov
or
lret
push
mov
sbb
pop
cmp
add
adc
enter
xchg
inc
js
mov
js
js
mov
push
pop
aas
aam
or
sub
repz
int
add
mov
in
stc
test
mov
cltd
mov
out
adc
data16
mov
sub
mov
loope
mov
pop
aad
ds
les
movsb
movb
div
mov
xor
decl
sti
cmp
xor
into
xchg
inc
ja
jb
jmp
or
in
or
jb
adc
mov
jno
add
and
sub
insb
int
xchg
cmp
or
fdivrl
popf
fisubs
pop
sub
in
add
xor
add
fldl
fwait
mov
into
je
mov
xchg
mov
dec
fldt
testl
es
mov
mov
loop
xchg
sbb
jo
jns
cmpsl
add
xor
sub
enter
mov
lds
lcall
nop
es
inc
je
dec
xchg
push
push
and
lahf
scas
imul
pop
shl
cmp
nop
xor
xchg
loop
or
jo
and
dec
lcall
jecxz
push
mov
out
enter
and
inc
lock
mov
shlb
mov
and
xlat
xor
out
out
mov
stos
movl
scas
stos
push
push
adc
stos
daa
cmp
std
sub
in
imul
repz
mov
dec
mov
lods
les
and
ss
dec
jmp
sti
inc
into
scas
mov
jbe
cld
or
add
xlat
mov
shll
push
inc
lret
pop
dec
xchg
test
arpl
aad
push
adc
test
cmpsl
ret
out
cmpb
imul
das
adc
imul
pop
xchg
push
cmp
mov
cmp
inc
dec
dec
das
and
sti
rolb
adc
loope
inc
insb
push
adc
push
bound
fs
mov
cmp
xchg
push
or
dec
xchg
scas
and
test
inc
mov
pop
sub
repnz
divl
mov
pop
cmc
arpl
push
test
sti
mov
and
jae
mov
jl
pop
mov
out
lea
in
mov
mov
jnp
iret
inc
add
gs
ret
mov
pop
shll
aaa
push
jmp
sbb
jne
in
shll
adc
and
dec
inc
jb
pop
movsl
sub
sti
mov
test
es
out
mov
add
push
lock
push
sbb
test
lods
fsubrl
es
es
jns
cwtl
inc
imulb
jl
xor
sub
das
mov
push
cmp
inc
pop
pushf
bound
xor
push
call
dec
cmp
fcoms
fdivl
push
ds
cltd
cld
lods
inc
push
shl
sub
lds
aad
fnstenv
sbb
out
cmp
cmp
jmp
push
inc
sbb
mov
loopne
lds
pusha
inc
cmp
push
ret
mov
stos
push
push
mov
loop
xchg
cmp
lods
and
sbb
andb
xor
dec
xor
out
icebp
jne
mov
jno
aaa
dec
inc
ljmp
arpl
cld
mov
mov
arpl
cmp
jbe
dec
popf
add
mov
std
push
sbb
or
insb
out
add
mov
push
lcall
outsl
pop
pop
bound
lea
push
jno
sub
xor
fmuls
shlb
inc
insl
adc
nop
scas
lret
lret
call
loopne
xchg
not
fidivrl
pop
mov
in
in
jp
jnp
xchg
jae
cmpsl
mov
addl
sbb
jo
in
js
and
repz
xor
stc
mov
dec
cs
xor
adc
sti
adc
std
in
repz
dec
call
and
inc
mov
rcl
xor
jne
xchg
pop
test
ret
loop
jne
cmp
cmp
inc
xchg
adc
mov
dec
aam
jmp
out
mov
rcrl
rcrb
outsb
dec
jae
mov
mov
dec
mov
ret
rorb
out
xchg
push
push
jae
adc
jmp
mov
test
loope
push
outsb
xchg
xchg
lods
xchg
fldcw
xlat
inc
push
dec
xchg
fstl
mov
or
aaa
aas
or
pusha
push
in
ja
adc
jmp
lahf
mov
xchg
test
jo
filds
jns
xchg
rcll
int
cmc
lea
imul
adc
stos
nop
sarl
lods
fisubrl
repnz
bound
aaa
pushl
stos
lea
leave
dec
cltd
sub
pop
dec
popa
xor
push
subb
ds
xor
jp
scas
scas
daa
in
xor
inc
sti
and
clc
stos
and
fildll
add
ljmp
push
xor
xor
lods
repnz
sbb
aaa
cmp
add
pop
inc
push
call
sub
xchg
jg,pn
xchg
jg
jbe
sub
lock
mov
mov
test
rep
xor
jno
sub
mov
cmp
and
ss
mov
daa
fisttpll
daa
sbb
mov
jbe
or
jmp
inc
movsb
sbb
cs
in
das
xchg
ss
adc
andl
sar
jle
or
push
je
arpl
push
or
les
xor
ror
pushf
imul
push
xor
enter
loope
leave
jle
int
out
sbb
outsl
roll
dec
mov
add
cmp
jmp
add
lret
sbb
push
popf
mov
sub
test
push
popa
xchg
and
out
ljmp
push
sbb
ret
lret
lahf
cmpsb
insb
adc
enter
dec
fidivs
push
jge
cmpsl
call
push
sbb
xchg
iret
add
outsb
lret
adc
push
test
push
jno
fistpl
movsb
fmull
xchg
stos
jge
xor
into
cmp
jge
repz
pop
jmp
stos
cmp
sub
jecxz
mov
xchg
inc
inc
jnp
cwtl
dec
es
insb
decb
xor
push
jmp
push
cmp
fisubrl
xchg
xchg
mov
mov
nop
testb
stc
pop
xchg
mov
jns
sub
pop
js,pt
jmp
fucom
inc
in
cmpb
leave
sbb
cs
inc
pop
mov
out
jmp
neg
das
das
cwtl
sbb
pop
or
dec
call
iret
pop
and
out
add
mov
jnp
hlt
enter
mov
fsubs
je
lcall
jecxz
mov
inc
in
and
sub
sbb
fwait
push
mov
xchg
shrl
loope
scas
mov
xor
sti
nop
cmp
ljmp
jl
and
xlat
cli
mov
out
outsl
mov
div
bound
and
bound
inc
daa
adc
cmp
mov
out
jne
pop
adc
inc
outsb
mov
jnp
cmc
dec
lret
xchg
icebp
dec
cld
sub
adc
mov
out
mov
jmp
into
and
je
fdiv
testl
mov
mov
rorl
sub
mov
cmp
xchg
test
into
mov
mov
jno
push
cmp
rclb
sbb
lods
imul
jno
cmp
out
lods
jo
push
mov
inc
sbb
mov
sti
lret
shlb
repnz
imul
cmp
hlt
xchg
ljmp
test
cmp
jg
pop
imul
mov
mov
add
pop
push
xlat
dec
or
mov
sbb
bound
lds
adc
pop
push
inc
nop
cmpsl
pop
out
mov
pop
sbb
mov
xlat
xor
cmpsw
fisubl
mov
mov
push
add
shll
pop
ljmp
mov
daa
add
mov
loope
mov
es
add
adc
pop
sub
xorl
inc
cmp
xor
inc
mov
subl
jmp
mov
dec
mov
ljmp
add
scas
pusha
or
jnp
fs
jle
loope
pop
pop
add
xchg
add
ret
loop
fwait
jge
inc
adc
fstl
outsb
xchg
pop
push
rcrl
mov
shrl
mov
mov
leave
inc
sbb
jp
outsb
out
sub
pushf
fstpl
enter
jl
popf
sbb
mov
arpl
leave
outsl
call
mov
fidivrs
dec
movsl
mov
cld
inc
pop
pop
jne
sbb
imull
xchg
inc
add
lods
cmp
shr
call
lahf
cmp
ljmp
jae
mov
cmp
xor
iret
mov
aam
scas
les
push
repz
adc
std
lcall
divb
add
shlb
sbb
enter
inc
dec
outsl
incb
lock
or
dec
adc
mov
in
divl
mov
ror
lds
push
jge
xchg
jnp
ja
popf
mov
fucomp
add
mov
movsb
mov
lret
out
pop
jae
mov
xlat
in
dec
or
and
cmp
xor
pop
jmp
int3
insb
inc
dec
popf
enter
aaa
mov
cli
dec
gs
fs
stos
sbb
pop
adc
lods
jle
iret
cld
insb
gs
xlat
jmp
push
out
pop
rclb
xchg
repz
es
int
fcoml
adc
aad
push
or
push
loop
xchg
roll
pop
testb
sbb
or
mov
jle
pop
int
lock
out
xchg
jo
orb
cmp
pop
dec
xchg
loope
push
mov
sub
xchg
push
xchg
add
jno
xchg
mov
testl
jmp
test
jle
arpl
mov
test
mov
mov
mov
push
lahf
mov
stc
jb
cvtdq2ps
aam
inc
inc
cwtl
dec
cmp
popa
shl
inc
xchg
mov
push
jo
addl
cmp
push
xchg
add
mov
sbb
inc
fnstcw
ss
sub
or
sub
dec
jnp
scas
imul
push
loope
loope
mov
lcall
pop
sbb
pop
stos
cmc
sub
jb
push
ss
fiaddl
pusha
je
fistpll
lods
jns
and
mov
pop
test
data16
cmp
shll
jg
imul
sub
mov
adc
and
dec
test
push
stos
mov
inc
das
inc
xchg
and
mov
add
hlt
test
test
mov
test
out
cld
paddb
es
insl
les
push
test
push
into
mov
sbbb
jns
dec
adc
xchg
push
cmp
cmp
inc
and
xchg
and
jns
push
cmpsl
and
sub
ja
loope
nop
add
ret
cmp
outsl
xor
test
outsb
fs
or
mov
pop
jecxz
loop
cld
lret
or
out
cmp
idivl
add
test
je
jb
aas
add
jo
into
daa
push
pop
jbe
mov
or
lods
mov
mov
sub
fisttpl
xor
xchg
gs
dec
push
push
pop
sub
add
and
inc
mov
pushf
std
pop
imull
jge
int
sti
pushf
jecxz
mov
pop
pop
jg
sti
adc
inc
xchg
inc
ja
push
and
push
mov
push
xchg
adc
push
add
or
test
pushf
inc
jl
dec
enter
sub
jno
add
cmc
pushf
cmp
fnstenv
stc
add
push
push
fsubrs
add
mov
fsts
movsl
adc
cmc
lds
cmpsl
push
adcl
lods
mov
out
inc
arpl
lret
mov
or
ficoml
and
mov
enter
sbb
sub
arpl
cltd
aas
pop
and
js
add
inc
sbb
sub
movsl
xor
movsb
mov
jbe
pop
add
lock
and
lret
lds
xor
pop
cmp
push
mov
jns
dec
pushf
bound
mov
outsl
sub
stos
lret
out
jns
push
adc
dec
push
mov
test
jns
mov
fistl
xchg
cmp
mov
pop
out
scas
ret
pop
jp
or
sbb
pop
add
sbb
push
xchg
pop
mov
out
xchg
das
les
adc
mov
enter
pop
out
shr
aad
jmp
into
cli
cmp
sub
add
fcomps
mov
adc
cs
jle
movd
out
stc
dec
and
jmp
inc
or
repz
dec
scas
fwait
call
lock
out
mov
lods
push
ljmp
mov
xlat
fsubl
sti
cmp
cwtl
or
sub
repz
sbb
rcr
fwait
andb
jg
adc
sbb
and
cli
sbb
ss
ljmp
addr16
pop
sbb
mov
jns
sbb
jno
out
xchg
pop
dec
cmpsb
daa
mov
add
repnz
mov
cmp
aad
inc
adc
pop
pop
lods
adc
cmpsl
pop
stos
jmp
jns
loop
jle
lgdtl
cmpsl
fs
inc
addr16
out
push
adc
mov
adc
stc
pop
pop
fldt
adc
pop
or
mov
mov
imul
xor
adc
stos
xor
push
inc
jecxz
ja
inc
add
push
mov
sub
fnstcw
insl
xchg
inc
sbb
or
mov
push
fistps
sub
xor
inc
xchg
dec
push
xor
cli
data16
lock
leave
leave
cld
out
adcl
ljmp
cmp
lret
xor
cmpsl
cmpsl
xor
mov
jnp
pop
mov
add
push
sarb
mov
mov
clc
inc
icebp
xchg
sub
push
mov
jmp
or
cli
outsl
push
scas
bound
test
das
push
out
ja
cmp
mul
jle
lret
addb
int
clc
loope
push
push
call
lock
xlat
xchg
sbb
inc
sub
add
test
jno
jnp
fcomp
or
sub
cld
rclb
arpl
cmpsb
fdivrs
inc
jo
xor
pop
mov
jmp
lods
adc
mov
in
or
mov
add
aas
xchg
movsl
ja
cmpb
div
scas
cs
fwait
adc
jp
cmp
adc
aad
rcll
test
and
dec
out
scas
xor
mov
lret
push
push
jb
aas
xchg
out
xor
repz
cwtl
jo
pop
jl
xor
ret
cmp
insb
pop
aam
mov
je,pt
or
jl
sbb
adc
hlt
adc
inc
push
pop
mov
fisubrs
lds
jl
adc
mov
cmpsl
jbe
shl
jae
mov
fwait
sbb
fwait
mov
int
cmp
in
in
mov
out
inc
popa
cmp
nop
mov
addr16
lock
inc
pop
inc
repnz
push
jae
add
ret
fcomps
insl
inc
cmp
lcall
jns
pop
and
or
cli
test
dec
mov
pusha
xor
dec
lcall
movsb
cli
push
gs
pop
mov
cmp
aam
adc
stc
arpl
xor
stc
imul
ljmp
xor
repnz
out
sub
and
idivb
push
cmpsb
mov
jb
jne
push
sti
lahf
stc
xchg
test
or
pop
sbb
ds
leave
and
aad
int
push
xor
repnz
es
push
mov
sbb
lret
arpl
mov
notb
shrb
std
inc
icebp
cs
cmp
pop
mov
jl
mov
scas
pop
xor
push
test
movsb
inc
leave
repz
in
fwait
adc
add
je
in
dec
inc
dec
fs
ljmp
aam
ljmp
and
cmp
lret
mov
or
loopne
jmp
les
cwtl
mov
test
movsl
or
xor
mov
mov
rorb
add
fcoms
adcb
imul
out
xlat
push
loopne
inc
and
pop
stos
sti
pop
add
call
and
add
adc
int3
mov
outsl
mov
mov
mov
cmp
inc
and
mov
adc
adc
xchg
insb
add
mov
lock
in
inc
andl
xchg
adc
inc
dec
dec
add
mov
mov
sahf
sti
lea
cmp
push
xchg
push
popf
std
inc
xor
in
mov
mov
jmp
and
push
push
or
in
jle
mov
or
hlt
add
xor
adc
add
rcrb
pop
sbb
push
and
jl
dec
ret
mov
test
inc
pop
outsb
push
jb
sbb
fs
mov
xor
xchg
pushf
mov
push
mov
aad
arpl
mov
mov
or
sub
bound
repnz
test
fisttps
mov
bound
fimuls
int
dec
mov
xor
popa
andb
arpl
sub
xchg
sub
jno
adc
repnz
mov
loop
xchg
dec
xor
adc
xor
add
pop
in
mov
outsb
loopne
ret
aaa
push
cwtl
pop
jns
or
dec
dec
cmp
add
bound
push
loop
decl
std
sarb
adc
mov
lods
fimull
lock
or
inc
add
sbb
or
add
or
jecxz
xorb
jbe
stc
dec
inc
pop
addr16
xchg
jmp
out
dec
pop
sub
insl
jnp
leave
bound
xor
pop
rcrb
or
insb
pop
mov
ret
and
outsb
leave
dec
fxch
daa
mov
inc
mov
cld
xchg
adc
daa
testb
cmc
inc
push
jae
xor
fbstp
nop
jmp
jo
push
mov
cs
adc
mov
ret
aaa
cmp
aaa
insl
rcrl
std
xor
movsb
scas
sub
push
sub
jns
add
out
add
jb
and
pop
xor
mov
add
clc
gs
popa
jp
mov
aad
out
cs
jo
or
jmp
shrb
into
jmp
mov
popa
xor
mov
and
adc
ljmp
push
xorb
out
jne
adc
or
dec
jmp
push
dec
sbb
xchg
mov
cli
inc
jo
sub
adc
mov
jl
test
pusha
enter
push
pop
popf
adcl
xchg
data16
shr
xor
xchg
jo
mulb
setnp
lods
sbbb
jo
dec
mov
jne
shrb
repnz
dec
and
repnz
pop
lods
mov
pop
jns
lahf
add
sbb
cmp
and
jle
pop
jmp
dec
adc
push
rcrb
mov
lods
push
sub
inc
pop
lret
push
cmp
xchg
or
fcomi
fldcw
in
cmp
pop
insb
cmp
icebp
jle
lock
jb
push
addr16
pop
sbb
fdivrp
and
mov
push
int3
dec
mov
fbld
inc
ror
mov
cmp
push
cld
sti
andl
sub
push
scas
xor
iret
xchg
mov
cs
sti
nop
out
sti
push
jmp
int3
fistpll
icebp
orl
addr16
leave
out
mov
sbb
ss
cmp
ret
outsl
fidivrs
push
jecxz
cltd
arpl
cmp
jg
dec
lret
mov
lods
stos
dec
pop
pop
sub
lcall
and
fnstsw
xchg
loop
and
xor
cwtl
jae
add
aam
sub
gs
sub
jb
jmp
sub
xchg
mov
ret
imul
shlb
faddl
or
decl
adc
sbb
xorl
out
test
lfs
or
jg
add
dec
push
cs
push
aaa
stc
add
pop
arpl
and
add
mov
outsb
into
cmp
xchg
out
fisttpl
loop
addr16
mov
push
andl
repnz
insb
sti
push
xlat
pusha
push
clc
cmp
and
outsl
pop
adc
hlt
sahf
gs
push
lret
popa
incb
aaa
xchg
push
cld
lret
add
pop
idivb
xchg
subl
pop
lds
cld
cltd
sti
in
adc
mov
adc
adc
inc
in
cli
stc
out
mov
cmp
fcmovbe
dec
sbb
jp
mov
fwait
ret
imul
fcmove
or
dec
jnp
lea
movsl
pop
mov
ss
xchg
or
jecxz
in
sbb
and
rclb
imul
data16
lds
adc
or
loopne
cs
push
adc
and
and
mov
fwait
gs
mov
icebp
loope
sbb
mov
andl
divl
inc
pushf
xchg
add
fisubrl
pop
imul
pop
lahf
cld
enter
fstpt
sub
clc
stc
mov
sti
dec
lret
pop
aam
andl
shl
hlt
mov
test
inc
or
push
push
dec
add
cmc
sbb
bswap
mov
rcrb
xchg
jl
cmp
rol
mov
fisubl
lock
xor
lret
aaa
xchg
andb
insb
mov
xor
int
mov
enter
enter
add
in
lahf
or
sbbl
ljmp
pusha
push
inc
js
mov
mov
fwait
mov
push
jae
xor
mov
pop
or
fs
sub
mov
mov
mov
in
xor
movsl
addr16
ja
in
dec
xlat
pop
xor
mov
fdiv
mov
arpl
xor
inc
repz
xor
lret
stos
les
leave
and
xchg
loopne
adc
pop
cmp
xchg
repz
mov
mov
cmp
pop
je
xor
out
and
nop
mov
fldenv
and
outsb
add
add
iret
mov
xor
ljmp
mov
mov
mov
fcompl
jl
sti
pop
and
loope
jo
lea
in
mov
fisubs
mov
and
xchg
in
lret
xor
pop
pop
stc
inc
sbb
ljmp
rcrb
aam
inc
sbbb
test
push
outsl
jl
lods
insb
leave
lret
arpl
mov
dec
stos
cwtl
inc
std
mov
and
movsl
test
mov
stos
push
sbb
es
loope
pusha
xchg
lds
add
shrl
mov
mov
shlb
jmp
pop
bound
jno
mov
jge
lock
pushf
mov
push
arpl
pop
test
gs
jge
ret
fsubp
ret
test
push
sbb
xchg
setle
cmp
pushf
add
mov
pop
insb
inc
jg
imulb
insb
out
sarl
clc
add
iret
jge
dec
push
xorl
jns
lahf
jmp
sahf
dec
sub
mov
sub
xchg
aad
xchg
inc
mov
shrb
mov
jae
mov
jmp
jl
cmp
xorb
sub
sub
in
jle
insl
jnp
sbb
dec
outsb
loopne
dec
rcr
rcl
fnstsw
mov
test
push
dec
adc
shrb
or
in
fidivs
popf
dec
outsl
mov
aam
lret
cmpsl
mov
and
add
test
mov
fsubp
je
mov
xchg
adc
insl
ret
fst
into
xchg
jge
cmp
idiv
aad
and
mov
dec
xchg
xchg
sub
stc
lret
jne
pop
fwait
mov
or
xchg
or
loope
stos
fucom
mov
jbe
sti
push
or
ret
sub
dec
rcll
fsubrs
xor
repz
inc
jcxz
push
pop
pop
repnz
cld
cmove
ret
popf
mov
or
xor
stc
mov
inc
jnp
in
sbb
lret
adc
out
fcomps
push
push
inc
stc
dec
aaa
jns
das
mov
xor
clc
push
jecxz
and
and
jle
jbe
jg
aam
adc
push
mov
adc
or
mov
mov
push
inc
push
add
rclb
movsl
ret
adc
and
dec
enter
dec
pop
popf
roll
pop
addb
sub
jnp
inc
mov
mov
mov
into
pop
push
aam
lea
jnp
lcall
in
xchg
xchg
cld
in
and
xchg
jp
pop
leave
rcrl
out
clc
scas
sarb
sar
lret
arpl
sub
mov
push
sub
cmpl
insl
push
test
mov
icebp
sub
mov
jl
mov
xchg
add
push
sub
mov
mov
stc
sub
sub
mov
clc
adc
movsl
sbb
push
lss
push
lahf
jbe
lretw
push
dec
std
test
clc
nop
cli
cld
popf
lahf
mov
add
adc
mov
jmp
mov
push
test
adc
js
jp
inc
push
movsl
or
add
lea
jmp
test
pop
mov
add
and
ret
aas
jbe,pt
push
fcoms
mov
test
es
ss
imul
mov
pop
gs
scas
in
cld
or
lea
rcrb
mov
jmp
jmp
rorb
mov
test
shll
adc
sub
xor
sub
out
sbb
mov
lcall
fsubrs
jns
or
pushf
push
xchg
jge
adc
sub
sub
cmpl
out
push
bound
xchg
clc
fmul
mov
sub
into
iret
sarl
sbb
cmp
mov
mov
xchg
out
shlb
pop
pusha
sub
jne
rcll
lret
cmp
scas
jle
test
jge
mov
xchg
cmp
xchg
and
cmc
jbe
fsubrl
jle
cmp
jmp
push
adc
mov
push
adc
add
xor
add
bound
mov
cmpsb
std
adc
aas
xlat
xor
stos
aas
loopne
sub
xor
sub
aad
sub
pop
lock
fwait
call
add
ja
xor
dec
addr16
cmpsb
out
and
out
lret
cld
push
xchg
xchg
mov
inc
cmp
lds
repnz
jnp,pn
stos
jp
out
mov
ljmp
lods
pop
jo
xor
stos
cmp
xor
ret
ficompl
jnp
les
inc
push
mov
fs
cmp
add
push
push
jecxz
cmp
aam
add
cld
pushf
pop
rclb
fstpl
or
popf
add
aas
imul
shrl
sub
jle
mov
fildll
inc
xor
testl
enter
jl
jbe
xchg
fidivl
dec
dec
out
push
rol
aas
roll
jp
ret
lods
int
and
mov
jp
lds
stc
mov
lods
lock
cmp
add
loope
fcoml
add
stos
xchg
adcl
sbb
pop
cmp
shrb
xor
cmp
xor
mov
inc
push
lret
xor
xlat
call
call
lret
jge
test
lret
dec
repz
stos
jne
ds
ljmp
inc
inc
cli
aad
push
imul
je
lahf
xor
repz
insl
mov
mov
les
xlat
xlat
pop
call
xchg
pop
fwait
into
xor
fwait
loop
lock
push
in
pushf
rcrl
sti
mov
enterw
add
shll
cmp
jo
push
bound
out
pop
xor
sahf
inc
and
leave
ss
test
mov
pop
jmp
repz
xchg
mov
aad
push
add
push
adc
fcompl
xor
aad
movsl
je
adc
jo
fcoml
arpl
mov
adc
jg
scas
or
into
jo
xchg
test
jmp
adc
xchg
inc
fstpt
mov
mov
je
cmp
push
mull
push
sti
jno
imul
or
mov
push
outsl
mov
sub
inc
insl
cmp
jb
xchg
pop
stos
in
xchg
or
mov
cmp
sub
mov
imul
add
test
dec
jp
or
xor
pop
test
jecxz
mov
shrb
inc
aas
ret
cmp
movsl
sti
daa
data16
adc
mov
pop
scas
sub
lret
push
jge
dec
cmp
leave
das
scas
or
pop
dec
wbinvd
outsb
xor
test
cld
dec
idivl
push
imulb
adc
mov
xchg
mov
rcl
jns
xor
mov
in
cmp
inc
mov
call
add
js
lock
loop
in
repnz
in
insl
xor
jae
mov
insb
mov
cli
sub
gs
mov
adc
enter
push
movsb
mov
mov
pop
mov
xchg
add
dec
decl
inc
mov
enter
sub
sbb
sbb
js
pop
shrb
sbb
scas
pop
and
mov
xchg
nop
mov
dec
mov
aad
pop
cld
sub
cli
ss
and
in
mov
dec
int
adc
fildl
sti
and
scas
cmp
or
jp
push
ret
fldl2t
in
inc
or
mov
jp
and
stc
mov
nop
jne
call
jmp
mov
imul
test
cwtl
lock
scas
push
jge
push
push
sbb
loop
and
push
add
imul
pop
incl
jb
lret
sbb
cld
mov
test
jb
negb
cmpsl
fsubl
insb
jge
ficomps
into
xchg
mov
cmp
pushl
mov
push
mov
fstl
pop
out
lea
xchg
cmpsl
mov
pop
bound
xchg
cmp
adc
mov
test
mov
mov
das
lock
mov
cmp
xlat
cmp
int3
xchg
push
sbb
lret
stos
jo
addps
movsb
icebp
sbb
adc
ja
dec
mov
push
jo
cld
xor
test
outsb
out
pop
mov
fsubrp
pop
aaa
push
popf
rclb
mov
ss
pop
mov
push
out
fwait
lret
push
mov
sbb
rcrl
sti
stc
and
inc
sahf
jge
mov
inc
jns
mov
cli
mov
sub
into
xchg
dec
int3
push
lea
pop
jl
push
sarb
test
lahf
xor
add
sub
cmp
and
cmp
mov
mov
aam
popa
mov
sub
mov
or
or
dec
outsb
movsl
mov
lds
gs
pop
dec
in
jge
rcrb
not
adc
mov
pop
jae
mov
mov
repz
sub
push
mov
or
int
xchg
jge
fdivrl
cmp
jecxz
int
hlt
fisubl
shlb
dec
mov
xor
xchg
mov
aam
shr
sets
sti
xchg
xor
fwait
jl
or
push
fcmovu
sub
dec
aam
ss
mov
jle
popf
adc
push
mov
cmp
scas
inc
push
mov
jle
push
dec
std
xchg
scas
sub
add
adc
adc
je
mov
inc
adc
mov
pop
mov
xchg
in
ret
fisubrl
mov
sub
rorb
enter
test
sbb
inc
jae
mov
mov
xchg
lret
inc
add
pop
cmp
pop
cmp
fwait
xchg
ret
fdivrs
lahf
push
lea
xchg
repnz
mov
xchg
push
mov
cltd
insl
jns
nop
es
jno
mov
outsb
mov
ret
xchg
xchg
rorl
sbb
es
push
je
cmpsl
mov
dec
pusha
inc
neg
lea
mov
push
imul
xchg
cltd
in
loop
mov
and
xchg
sbb
in
pusha
fs
movb
sbb
and
xor
push
js
xchg
dec
and
imul
fildl
adc
dec
add
mov
cmp
je
imul
lret
jno
mov
dec
insb
data16
fidivrs
std
in
push
iret
sbb
xchg
sub
jae
inc
cltd
in
push
lods
movsl
cli
ret
add
shll
pop
out
sbb
fisubl
cmp
lret
push
mov
test
out
icebp
xlat
imul
jmp
mov
inc
pop
jno
or
leave
repz
je
push
pop
sbb
sub
out
lods
cli
iret
lret
push
fbld
iret
add
xchg
shrl
mov
inc
out
fsubr
int
mov
gs
aaa
lock
fs
sahf
mov
adc
mov
aas
movsl
cmp
repz
lahf
and
out
push
fwait
push
testl
xlat
xchg
nop
xor
sub
push
mov
mov
test
dec
mov
pushf
pop
jb
lods
fisubrl
and
add
icebp
xchg
roll
or
outsl
ds
adc
or
dec
push
or
inc
cli
lods
repnz
mov
sbb
sti
cmp
stos
mov
add
or
cmp
jp
pop
xor
lds
pushf
pause
rdpmc
fdiv
ja
outsb
jb
push
rcl
loope
stos
in
cli
ret
or
pusha
icebp
pop
jecxz
jns
push
leave
call
call
mov
stos
mov
add
or
mov
gs
lods
mov
pop
jmp
xchg
ja
sbb
mov
or
pusha
dec
stos
sarl
popl
pop
fmull
test
sub
outsb
mov
mov
cmpsl
mov
mov
icebp
xor
das
or
stos
les
xchg
stos
outsl
cltd
inc
mov
lock
ljmp
ja
shll
push
mov
mov
data16
xchg
les
cmp
mov
add
lret
icebp
mov
sti
pop
test
sbb
lahf
sub
jge
inc
leave
cmc
aad
add
xchg
imul
into
cmp
push
popf
gs
je
fadd
sti
cmpsb
adc
add
sub
sbb
and
xchg
out
lahf
push
scas
mov
mov
jns
jle
inc
add
hlt
gs
mov
and
push
mov
jmp
xor
or
sbb
jns
sbb
into
xchg
jae
cmp
test
adc
mov
in
int3
inc
adc
pop
xchg
and
push
cmp
xchg
mov
mov
xchg
lret
cmp
add
gs
adc
sarb
pusha
inc
pop
sub
sub
and
fs
std
and
inc
into
fisttps
xor
aaa
fbstp
mov
fs
pushf
pop
je
add
shlb
mov
rorl
xchg
test
push
fbld
mov
mov
divl
jo
adcl
es
or
pop
and
into
add
ficompl
mov
push
pop
daa
adc
push
jo
jb
jg
pop
mov
xor
in
jae
jne
sub
das
leave
out
jmp
and
sahf
mov
outsb
repz
jmp
std
xchg
mov
xor
out
lods
inc
or
pop
mov
lcall
sarl
mov
push
dec
jns
les
sbbb
sbb
jecxz
mov
cwtl
scas
pop
repnz
enter
pusha
adc
inc
add
jmp
fldl
mov
imul
js
cmpb
fiaddl
imul
mov
repz
cmc
pop
push
sbb
xchg
mov
stos
xor
mov
push
adc
or
dec
dec
xchg
inc
je
sarl
mov
out
in
mov
inc
lock
pop
ss
jno
xor
sbb
jmp
les
sbb
jnp
sub
mov
out
cld
outsl
lock
mov
mov
out
idivl
les
fwait
jge
xchg
rclb
mov
and
lds
repnz
pop
pop
sbb
sarb
xchg
pop
jl
dec
jecxz
dec
ror
jae
mov
dec
inc
mov
inc
repnz
fdivrl
dec
cwtl
ds
in
cmp
xor
loope
mov
gs
sbb
loop
xchg
pushf
push
add
outsl
cli
subb
jne
fwait
scas
xchg
repnz
mov
in
pop
int3
mov
pop
movsl
mov
push
in
lods
sub
lock
or
jns
lea
pop
adc
loope
pusha
in
std
add
or
mov
cmp
sub
clc
stos
adc
mov
out
push
push
xor
es
pop
jns
movb
xlat
sbb
stos
insl
pop
sbbl
add
test
sbb
mov
andl
cli
rcrb
push
cmp
add
cmp
int3
add
jnp
jne
fwait
je
push
mov
insb
jb
mov
fs
mov
lea
insl
call
in
dec
adc
xor
out
add
imul
or
es
js
or
mov
mov
push
icebp
out
fwait
cmpsb
mov
jne
inc
and
cmp
test
out
lea
or
arpl
repz
cli
and
xor
int3
pop
ds
cmp
js
sbb
pop
mov
clc
sub
icebp
fs
mov
lahf
lahf
add
inc
xlat
xchg
out
aam
sub
add
lcall
xor
lret
stos
sub
pusha
mov
jne
aam
xlat
bound
mov
mov
bnd
lods
jae
mov
xor
ds
xchg
fwait
cmpsl
shl
cli
pop
movsb
xor
push
cwtl
mov
fnsave
cwtl
ret
and
inc
push
shlb
jno
or
xchg
push
std
push
xor
adc
push
add
mov
stc
mov
mov
sub
test
cmp
pop
ljmp
add
arpl
outsb
push
ljmp
push
lods
mov
push
adc
movsb
and
rcrb
cmp
enter
cmp
test
mov
arpl
mov
ljmp
pop
pop
ss
into
mov
sbb
cwtl
lock
testl
xor
ds
mov
out
sahf
icebp
rclb
or
or
cmp
and
rcr
add
fcoml
mov
call
jo
sti
repz
jo
pop
pop
mov
in
ljmp
cmp
inc
stos
lret
sub
outsl
inc
sahf
jg
out
jecxz
imul
cmpsb
pop
js
hlt
pop
gs
cmc
bound
mov
frstor
int3
mov
popa
cmc
scas
mov
or
insb
xor
sub
mov
movsb
jle
add
into
push
pop
lahf
adc
ret
mov
push
xchg
daa
mov
xchg
into
addr16
add
in
bound
repz
sub
pop
bnd
jnp
cmp
call
test
pop
outsb
xchg
inc
and
sub
pop
mov
add
push
test
inc
mov
cltd
dec
icebp
push
lahf
daa
test
stos
out
imul
xchg
mov
fnsave
repnz
loopne
inc
daa
shll
mov
dec
push
mov
adcb
in
mov
icebp
clc
inc
es
pop
push
push
inc
sbb
add
jbe
push
mov
fisubs
outsb
or
inc
lds
mov
or
fwait
loop
and
or
sub
je
xor
mov
adc
mov
inc
mov
mov
jl
xchg
sub
test
out
ljmp
push
ffreep
cmp
and
push
pop
pop
mov
lret
lock
mov
pop
push
pop
push
addr16
je
xchg
pop
jmp
scas
inc
test
imul
stos
dec
les
and
and
popf
mov
stc
pop
lahf
repnz
xchg
xchg
mov
je
lret
push
sub
and
sub
add
sub
jle
sbb
push
int
lds
subb
and
test
gs
mov
lods
sbb
jge
out
jnp
inc
call
ljmp
mov
stos
out
scas
and
pop
and
cmp
jmp
push
jnp
push
jg
es
scas
fwait
xor
push
sub
push
cli
and
cmp
test
movsl
xchg
lahf
mov
sub
in
lea
lret
sub
add
mov
les
mov
jg
popa
ret
mov
mov
cmp
or
jecxz
add
jecxz
aas
out
mov
cmp
out
mov
xchg
call
js
inc
sub
or
scas
mov
enter
push
sbb
push
adc
iret
sbb
aaa
dec
das
lret
stos
pop
pop
fbstp
mov
clc
ljmp
xchg
fnsave
cmp
push
pusha
lret
or
sti
cwtl
add
push
xchg
sbb
bound
iret
mov
cmpsb
fs
loope
xor
adcb
mov
in
sbb
cmp
mov
push
cmp
imul
and
add
or
adc
push
dec
cmpsl
mov
inc
mov
aad
test
aad
sbb
xor
jb
loope
pop
cs
arpl
jns
testb
and
mov
pop
fwait
pop
lock
push
lret
int
dec
in
shr
out
mov
xchg
inc
jle
push
or
dec
inc
cmp
sub
mov
clc
dec
jl
fwait
cmp
rorl
test
jp
mov
sub
xchg
pusha
insb
stos
clc
fwait
in
icebp
xchg
enter
mov
movsl
outsb
loop
xchg
into
jns
pop
mov
or
mov
pop
adc
int
loop
ja
ds
push
call
imul
add
mov
std
imul
sub
adc
xchg
fadds
es
inc
adc
pop
shrl
xchg
pop
adc
not
ret
shll
and
sub
xor
fcomps
add
push
popa
inc
mov
lret
in
ljmp
push
ret
xchg
cwtl
xor
mov
xor
mov
sahf
and
js
les
ljmp
sahf
and
push
icebp
cmc
aas
call
lds
and
call
sbb
out
xchg
pushf
cltd
mov
aas
rcr
mov
jo
pop
gs
fcomps
icebp
hlt
mov
aas
jmp
xchg
pushf
adc
sbb
and
shufps
xchg
sub
bound
pop
nop
jne
bound
mov
int
in
outsb
fcoms
fstpl
xchg
mov
mov
test
push
test
enter
dec
fdivl
hlt
popl
loopne
xchg
ret
push
mov
inc
cmp
mov
clc
stos
in
std
jecxz
inc
ds
adc
scas
rcll
addb
sbb
pop
outsb
out
loopne
pop
shll
jge
lods
dec
xor
scas
cmpl
mov
testl
lds
inc
mov
sub
iret
arpl
daa
lret
shr
pop
xchg
ss
inc
cmp
lods
or
int
inc
cli
out
setae
mov
in
in
jns
cld
nop
cmp
cli
das
add
xchg
in
xor
insl
in
and
jne
mov
fst
sbb
mov
test
rorl
orb
out
push
fcomp
icebp
cmc
mov
stos
ljmp
xchg
push
adcb
lret
clc
and
sub
or
and
imul
cmp
inc
enter
inc
inc
mov
xor
mov
jmp
fisubrs
mov
xchg
daa
rolb
and
mov
ljmp
in
jno
jnp
stos
add
xor
dec
sarb
xor
lret
xor
out
sub
notl
ss
mov
xor
mov
push
sub
sbb
cmpsb
inc
jae
fimull
movsl
fdecstp
inc
mov
mov
add
xor
or
das
fbstp
in
out
push
sbb
nop
cmpsl
sub
push
sbb
and
outsl
xchg
fdivr
add
test
and
imul
mov
test
or
fimuls
fldenv
sbb
bound
pop
jecxz
mov
sbb
aad
inc
jecxz
lea
jno
inc
inc
repnz
and
int3
push
sbb
xchg
fwait
jle
cld
mov
inc
test
mov
hlt
lahf
adc
push
sub
out
dec
dec
pop
dec
dec
insl
xchg
fsubrs
xlat
push
inc
daa
jl
push
push
xchg
xorl
sub
push
call
push
iret
in
daa
in
pop
fcompl
repz
jge
mov
jmp
sarl
dec
das
add
xchg
xor
test
fildll
inc
jge
push
out
mov
mov
fld
dec
call
dec
dec
mov
arpl
sahf
sub
mov
addr16
mov
icebp
jbe
push
stc
frndint
jb
fwait
inc
mov
xor
push
mov
cli
ss
xchg
jb
dec
pop
lock
lds
sbb
jae
aaa
dec
dec
add
adc
xor
fs
inc
test
xlat
inc
mov
xchg
lock
lods
lods
stos
lock
iret
movsb
das
cmp
cmp
inc
lea
pop
mov
pop
push
or
test
mov
es
aad
lret
es
shrl
jnp
aam
add
movsl
pop
add
push
push
in
lock
inc
jmp
add
dec
movsl
mov
or
dec
pop
xor
jo
frndint
mov
mov
xorl
jge
pop
mov
pop
out
int
incb
adc
daa
push
outsb
mov
ja
mov
xor
pop
mov
pop
push
inc
mov
mov
push
push
das
inc
sub
dec
in
mov
sahf
lret
pop
in
cmp
inc
mov
inc
mov
xor
iret
mov
xor
fstpt
enter
mov
pop
push
paddq
in
fisubrs
add
pop
and
sbb
sti
and
mov
jo
stc
add
ror
rol
es
and
push
les
js
shrl
jge
repnz
xchg
mov
jmp
add
pushf
inc
or
push
mov
clc
xchg
jmp
shrl
push
out
cli
xor
sbb
imull
mov
sbb
lret
aad
mov
xchg
mov
decl
repz
loop
push
cmc
xchg
add
cwtl
fsubp
and
sarb
fs
cmp
dec
notl
insl
fcomp
sbb
cli
xchg
xchg
loopne
jns
or
sbb
pop
adc
enter
xchg
jno
xor
jne
out
arpl
loopne
aaa
pusha
les
jge
out
sbb
or
push
lea
fistpll
jno
mov
jo
fadd
jecxz
jge,pn
mov
xchg
popf
hlt
sbbl
lcall
pop
arpl
lcall
xor
adc
mov
pop
pop
inc
jecxz
fnstsw
test
mov
adc
or
mov
or
int
inc
cs
and
in
or
scas
push
fcoml
and
stc
xor
lods
xchg
bswap
sarb
mov
or
mov
pop
jg
mov
pop
js
scas
out
push
aam
xor
sub
pop
adc
xchg
js
lahf
mov
or
jnp
cli
jnp
push
ret
movsb
mov
and
stos
loope
pusha
fsub
shll
mov
rcll
jns
pop
cwtl
push
push
xor
divl
dec
dec
and
shr
sbb
add
mull
inc
inc
dec
cs
or
mov
mov
or
dec
ficomps
cmp
or
dec
pusha
ljmp
pop
cmpsl
push
ja
sbb
cmp
inc
xchg
ds
pop
adc
loopne
xchg
movsb
xchg
inc
mov
lret
xchg
and
inc
push
addb
pushf
ss
jnp
sub
jg
shl
mov
fwait
mov
mov
mov
imul
mov
adc
clc
add
loopne
ror
sbb
add
jecxz
sub
mov
pop
dec
sbb
test
or
pushf
mov
iret
icebp
incl
ret
cmpsb
and
mov
inc
or
shlb
sbb
test
and
sahf
into
out
cmp
paddsb
jg
icebp
lods
cmpsl
ljmp
or
adc
movl
daa
mov
cltd
mov
mov
jae
insl
ss
add
mov
test
push
fistpl
jbe
push
outsb
mov
lods
cltd
sti
xchg
rol
lods
rolb
xor
push
aaa
or
out
scas
fiadds
negb
test
imul
mov
and
push
jp
loopne
iret
push
sarl
pop
cld
mov
shll
ficoms
sub
adc
es
xchg
or
or
push
scas
push
nop
mov
lock
mov
stos
mov
addr16
or
in
mov
push
movsl
lods
xchg
sub
push
mov
mov
lock
or
das
push
add
cmp
mov
dec
enter
test
adc
jecxz
aad
ret
cmp
pop
mov
lret
mov
out
fistpll
inc
pop
sub
add
fisttpll
sub
xlat
adc
pop
cmp
sub
push
fidivs
mov
ja
jno
add
sbb
mov
cltd
or
sbb
sbb
nop
xlat
loope
jno
out
mov
push
cwtl
sub
mov
in
cs
pop
in
rcll
hlt
push
icebp
dec
sub
add
dec
pushf
scas
rcr
adc
or
pop
adc
cmp
test
jae
scas
inc
dec
arpl
and
mov
in
fdivr
je
adc
arpl
push
lea
hlt
sbb
movsb
sub
stos
mov
push
mov
inc
fwait
outsl
xchg
cli
push
fnstsw
addb
lret
sub
jne
orb
lds
in
es
lret
cmp
inc
bound
mov
push
loop
adc
sub
les
arpl
jo
cltd
jno
filds
ja
jne
jge
in
adc
ljmp
push
iret
negb
outsl
hlt
jl
jbe
cmp
mov
je
or
pop
push
dec
sub
pop
push
aad
push
dec
sbb
adc
mov
adc
scas
cmp
push
sub
jecxz
sub
adc
mov
add
cmp
push
addr16
fs
ret
lods
inc
xchg
push
sti
scas
jp
xor
arpl
xchg
and
inc
adc
mov
dec
jmp
xor
xchg
gs
push
push
xchg
or
std
test
and
rcrl
shll
rsm
jmp
sub
loope
scas
ljmp
cmp
divl
xor
mov
push
pop
dec
popa
mov
insb
xor
mov
sbb
mov
pop
jg
cltd
xchg
sbb
cmc
stos
pop
call
cwtl
pop
ret
aaa
xor
js
xchg
test
testb
shll
popf
xchg
and
cmp
mov
or
jne
pop
in
adc
sarl
pop
and
lret
mov
xor
std
aad
movsb
insb
pop
in
cmpsl
loopne
cwtl
sbb
add
daa
push
xor
cmpsl
dec
stc
nop
pop
test
push
gs
shll
sub
jo
ficoml
push
mov
sar
jge
adc
cmp
add
movsb
shlb
ljmp
ljmp
mov
aas
pop
and
jg
pop
movaps
ljmp
pop
jge
mov
adc
into
sbb
sbb
cli
mov
out
sub
out
or
jmp
jns
mov
mov
cs
push
addl
or
lret
movntq
push
int3
rclb
pop
fcmovnu
sbb
loopne
dec
scas
inc
movsb
xor
and
inc
popa
incl
rcrl
sarl
xor
and
je
sbb
dec
inc
mov
sbbl
jns
aaa
dec
gs
in
mov
add
and
add
xchg
jbe
roll
shlb
push
xchg
cmp
mov
mov
jmp
rcrl
je
sub
xlat
xlat
clc
pop
cmpsb
in
lahf
xchg
iret
scas
inc
sbb
call
add
int
lcall
inc
cltd
stc
or
sbb
data16
test
mov
stos
mov
xor
push
lret
sbb
push
arpl
std
mov
adc
out
xor
int
cmp
in
push
out
push
xchg
in
loop
dec
pop
cwtl
repnz
mov
int
mov
mov
adc
rcrl
sub
or
and
adc
nop
imul
in
mov
mov
inc
fsub
call
stos
sub
or
lret
inc
test
inc
cmp
cmpl
pop
or
jmp
addb
pmuludq
jo
pop
sahf
test
inc
out
sbb
clc
fucom
pushf
fs
inc
mov
movsb
xor
subb
sbb
and
sbb
xchg
movsl
das
cmp
or
lods
mov
pop
mov
lret
inc
lds
into
call
jg
data16
paddb
cmc
in
lahf
sub
fstpt
fdivrl
das
cwtl
lret
insb
push
int3
jle
sti
or
stos
xchg
lea
int3
mov
subl
push
push
cmpsl
pop
cmp
push
rcr
xor
insl
scas
mov
push
sahf
mov
jb
sbb
nop
xor
add
sub
xor
sub
aam
psrlq
xor
lods
mov
lds
xor
jb
or
pop
and
testb
test
insb
mov
pop
cwtl
ljmp
mov
pop
mov
cmp
ret
jecxz
inc
and
out
subb
jo
int
mov
inc
mov
stc
outsb
repz
mov
add
jns
stos
jge
or
and
movsb
imul
pushf
ljmpw
pushf
aam
cmp
cmp
js
fidivrl
ror
or
adc
aaa
xchg
adc
push
lock
sbb
dec
test
aam
sahf
ss
pop
mov
cld
xor
int3
xor
ja
hlt
push
enter
jnp
addr16
jbe
es
daa
or
lret
scas
dec
jno
adc
add
and
xchg
cmp
ffreep
mov
cmc
or
sub
scas
stos
movsb
loopne
dec
and
lds
ret
aam
add
pop
roll
icebp
and
outsl
push
sbb
stos
subb
mov
add
out
dec
fs
and
hlt
jg
mov
mov
imul
filds
es
cmp
inc
jb
fucom
push
inc
mov
out
sub
xchg
mov
out
sub
dec
mov
repnz
inc
inc
clc
imul
push
push
pop
sbbb
lahf
push
xchg
adc
sarl
rcrl
push
add
pushf
adc
push
mov
adc
iret
lea
repz
je
andb
sbb
lcall
jns
jl
mov
jmp
xor
xchg
imul
add
out
or
add
inc
pop
xor
stos
xor
repnz
add
lret
lds
aad
push
lods
mov
pop
add
mov
fstl
cmp
add
mov
lock
add
sub
fs
pop
jae
stos
adc
xor
jecxz
mov
iret
and
insb
cli
jns
pushf
in
imul
sbb
xchg
and
mov
addr16
inc
jo
sahf
popa
xchg
push
addl
inc
mov
insb
push
mov
add
and
mov
adc
sub
rcl
outsl
pop
fnstsw
cmpsb
insb
xor
xchg
rcrl
jge
pop
addl
push
dec
test
es
ljmp
pushl
sub
mov
or
repz
sbbb
data16
xor
or
stos
clc
pop
push
mov
mov
or
mov
add
jno
fcoms
jp
pop
repnz
das
les
fstpl
pop
adc
xchg
divb
dec
clc
push
xor
mov
out
movsb
xchg
push
lcall
pusha
push
stos
jno
adc
fdivl
lea
sub
mov
pop
cwtl
inc
mov
xchg
rclb
mov
outsl
lret
pop
cwtl
daa
sub
push
xchg
sbb
sub
xchg
rclb
inc
ficompl
sbb
pop
mov
std
or
aam
lcall
fdivl
std
loopne
push
leave
mov
mov
imul
cmp
aas
call
dec
sub
test
dec
sub
xlat
and
cmp
out
in
adc
xchg
cltd
les
pusha
arpl
inc
cmc
pop
pop
stos
mov
pop
stos
dec
xchg
call
aas
insb
stos
arpl
fs
push
adc
flds
push
pop
cmpsl
mov
add
jne
test
shl
jecxz
jbe
scas
xor
mov
xor
stos
dec
fdivrl
repnz
mov
test
or
xlat
sbb
sub
aas
addr16
sbb
sbb
pop
rcr
jae
cmpsl
gs
arpl
es
popa
iret
fisttpl
push
pcmpeqd
and
xorl
ror
add
sbb
jbe
test
int
fnstcw
fistpl
imul
or
stos
or
cs
sub
repnz
dec
inc
lods
bound
mov
dec
outsl
pop
cwtl
mov
jns
dec
jns
es
pop
js
or
aam
loope
sbb
mov
dec
xor
ja
fisubrs
xor
xlat
mov
sarb
loope
adc
and
dec
loope
aaa
xchg
out
inc
cmp
cld
imul
push
add
jmp
pop
repnz
mov
aaa
aas
out
jp
cmp
sbb
push
and
fbstp
scas
shrl
xor
test
xor
shrb
in
push
mov
jns
dec
sub
rorl
inc
popa
adc
add
mov
cmpsl
ja
or
out
pushf
and
addb
lahf
jl
lahf
push
mov
push
testb
or
rcrb
push
inc
fs
xchg
mov
out
adc
in
push
mov
aam
xchg
je
push
pandn
mov
mov
lods
and
rolb
aaa
xchg
inc
shll
loope
or
sbb
pop
pop
xor
xor
or
and
mov
xor
iret
xor
and
divl
shlb
mov
mov
in
mov
xchg
daa
xchg
rcl
mov
jo
testl
inc
xor
scas
fxch
mov
popa
das
pop
sbb
and
movsl
xchg
pop
mov
fmull
adc
pop
clc
icebp
jecxz
cmp
aam
cmp
fs
mov
push
call
mov
xor
and
icebp
xchg
int3
mov
shlb
and
imul
adc
mov
add
dec
and
push
ss
add
lret
inc
sbb
or
call
stc
mov
fildll
cld
aaa
aad
out
sub
icebp
cmpsl
pop
or
mov
lret
jmp
push
dec
lods
jno
lock
dec
insl
lds
push
cli
jecxz
xor
cmp
mov
sbb
testl
loope
and
pop
mov
and
mov
push
pop
fwait
xchg
or
in
popf
pop
and
aam
lds
xor
cltd
mov
jg
jns
insb
hlt
ret
inc
xlat
out
repnz
aam
scas
and
mov
mov
cltd
sub
mov
in
out
mov
inc
dec
scas
push
mov
xchg
jae
addr16
ret
xor
cli
scas
addb
sub
call
xlat
outsb
addr16
push
sahf
stc
cmp
ficomps
dec
cmpsl
dec
jnp
aad
pop
jo
and
dec
cwtl
mov
das
mov
xor
fbstp
xor
popa
mov
aaa
repnz
adc
mov
shlb
ret
mov
push
adc
aas
cmpb
cs
ja
jbe
cs
fistpll
mov
cmp
cltd
insl
test
mov
mov
pop
icebp
xor
sahf
cmp
dec
and
mov
add
in
jmp
xlat
inc
lods
add
xchg
dec
repz
test
bound
aam
cltd
adc
sbb
iret
adc
add
pop
pop
mov
mov
jo
shrb
repnz
fidivs
daa
mov
adc
cmp
mov
icebp
lcall
pop
and
scas
xor
lds
popf
or
mov
mov
ljmp
xor
aam
mov
sbb
cmp
xchg
sub
ds
adc
inc
dec
mov
out
mov
pop
push
cmp
jle
xor
mov
repnz
lods
outsl
push
cli
movl
mov
and
dec
cmp
mov
ficompl
add
addr16
sbb
cmp
jne
push
pop
lock
out
pop
shrl
mov
xor
ret
add
icebp
stc
mov
xchg
cwtl
aam
jmp
jle
jbe
lods
jo
mov
add
push
dec
mov
fistpl
cmp
ljmp
in
shlb
loope
sbb
je
shr
push
lret
mov
jmp
jbe
outsl
add
fstpt
test
mov
adc
xor
movsb
popf
rcll
push
dec
inc
mov
pop
cmp
xor
mov
push
mov
leave
lahf
xor
cmp
or
movl
imul
mov
lock
nop
push
std
cmp
mov
rcll
ds
sahf
cmp
push
sbbb
movsb
xchg
inc
inc
add
rclb
mov
dec
cld
ret
enter
fwait
repz
nop
jmp
dec
cld
idivl
pusha
mov
rol
inc
pop
mov
out
sub
popa
js
inc
add
ja
aaa
push
push
iret
cmp
mov
xchg
xor
popf
es
decb
pusha
lds
shl
outsl
cmp
aad
int3
filds
xor
mov
xchg
xchg
lret
sub
adc
xchg
push
mov
std
loop
in
cli
or
mov
adc
and
js
dec
es
mov
push
clc
inc
hlt
subb
dec
xor
fsubs
cwtl
xchg
fisubl
xchg
push
sub
mov
push
enter
mov
add
inc
mov
shlb
daa
xchg
js
dec
sub
add
mov
add
subl
dec
xor
repnz
paddusw
les
aaa
or
int3
push
or
xabort
and
rol
les
cmp
xchg
cld
ljmp
mov
pop
mov
adc
pop
bound
inc
xchg
out
jmp
mov
cs
jbe
pop
xchg
dec
pop
dec
out
ljmp
mov
dec
fdivrl
loopne,pn
sbb
add
das
mov
pusha
rolb
lods
bswap
jge
and
and
sahf
jb
insl
test
push
adc
das
sbb
jl
sbb
repnz
jbe
sarb
repnz
mov
pop
xchg
aaa
imul
test
pop
jmp
std
jmp
cmp
aaa
push
lds
mov
and
call
in
cmp
decl
notb
xorb
mov
cmpsb
dec
push
jge
lods
or
imul
xor
and
je
or
adcl
xlat
stos
stc
jne
mov
mov
mov
adc
int
ss
sbb
mov
cmp
or
std
adc
fcoml
inc
push
test
adc
xchg
xor
popa
push
sub
shlb
dec
jmp
mov
ret
lock
xchg
adc
mov
loopne
mov
cld
out
add
and
or
push
pusha
push
sub
mov
enter
loope
sub
pop
xchg
pop
fisubl
adcl
rcll
outsl
jg
ljmp
sub
pusha
add
mov
jmp
notl
decl
xchg
sbb
ljmp
aam
pop
and
or
push
es
fsubl
shlb
xchg
pop
inc
or
sahf
or
mov
mov
push
add
clc
pop
in
out
fisubrs
mov
xchg
bnd
cs
leave
fldt
push
stos
inc
out
dec
sub
xchg
jp
mov
outsb
std
jbe
jb
in
test
mov
dec
or
stos
or
sbb
mov
cltd
ficoms
push
cwtl
leave
mov
pop
sub
aam
xor
xor
ret
sub
mov
popa
stos
loop
js
out
jle
mov
pop
mov
aas
xor
xchg
lret
sub
das
sbb
mov
xor
lret
mov
lcall
mov
mov
mov
fldenv
add
push
push
jmp
jbe
inc
ljmp
sbb
push
push
clc
and
push
push
lret
movsb
rol
call
cmp
mov
mov
cmc
loop
mov
jg,pt
dec
movsb
or
push
aad
imull
cmp
addr16
mov
mov
outsb
mov
mov
jb
lea
dec
xlat
gs
pop
cmp
xor
lds
or
cmp
add
mov
push
daa
sbb
fcomps
add
cmp
stos
scas
xchg
jnp
mov
jae
and
mov
xlat
gs
cmp
cmp
clc
ljmp
ds
test
pop
loope
call
repnz
pop
sub
repnz
or
add
mov
sahf
dec
jge
mov
pushl
cmp
push
invd
jb
push
rcrl
add
iret
fadd
shll
loope,pt
mov
inc
mov
xlat
or
ss
sub
outsl
mov
shrb
mov
jno
daa
pop
imulb
fwait
aaa
jge
rclb
add
inc
mov
sbb
sete
out
and
in
cwtl
sub
push
cmc
mov
xchg
insb
mov
xchg
sbb
xchg
xor
loope
mov
mov
ret
lock
cmp
fimull
pop
stos
sbb
xchg
cmp
cld
outsl
fnstsw
xchg
popa
dec
cld
jnp
cmp
adcl
push
cmp
add
push
addr16
fstl
sub
std
stc
shll
and
lods
pushf
and
mov
xor
pop
sbb
inc
cmc
imul
les
jne
pop
mov
and
inc
sti
nopl
mov
inc
or
adcb
movsb
ss
ja
jg
mov
testl
inc
dec
lock
pop
sbb
jmp
jbe
xchg
dec
orl
mov
imul
cmp
pop
push
xor
movsl
jb
stos
mov
xor
lahf
jp
cltd
movsl
dec
sub
or
and
hlt
cmp
outsb
sahf
pop
or
mov
fisttpl
jmp
cli
push
inc
in
sbb
sub
dec
mov
insl
sbbb
cmp
xchg
mov
cmp
ds
jle
rcl
repz
inc
fs
pop
push
les
push
dec
les
adc
fnstcw
lds
and
xchg
adc
or
or
cs
mov
sbb
mov
or
lcall
cmp
arpl
xorb
aad
sbb
mov
popf
mov
je
cmp
std
and
insl
js
fildll
xchg
ja
notb
icebp
ja
leave
fdivs
jbe
inc
ss
dec
sub
sbb
sub
roll
test
repnz
sti
sbb
gs
cmpsb
and
sbb
dec
test
mov
sbb
mov
dec
aad
lods
adc
sar
popa
mov
dec
mov
mov
cmp
fcmovbe
sbb
inc
ret
loop
repz
shrl
scas
mov
fs
cmpsb
aam
mov
dec
clc
push
mov
add
repnz
dec
mov
call
xor
mov
push
xor
aam
sub
dec
bswap
cmp
xor
cmp
shll
pop
js
fidivl
jae
pop
add
pop
mov
pop
ss
in
mov
shlb
lods
daa
lret
jl
in
mov
sub
or
xor
mov
into
outsl
scas
inc
shr
popa
or
sbb
jg
pop
popf
test
lods
mov
cmp
and
outsb
movsl
mov
pop
stos
xchg
rorb
push
mov
stc
clc
inc
inc
mov
pusha
push
add
hlt
and
clc
push
test
arpl
ss
mov
je
dec
movsl
adc
nop
add
test
mov
mov
adc
repz
repz
cltd
fisttps
cltd
cmp
jns
ss
call
out
call
adc
inc
push
cs
adc
pushf
mov
push
pop
dec
mov
or
mov
outsl
loop
pusha
inc
mul
jno
aad
cwtl
mov
sub
xor
pusha
or
out
fsubrl
dec
or
sub
clc
mov
cmp
pop
and
stos
stc
push
mov
mov
std
xchg
andl
insb
int3
bound
mov
mov
pop
mov
xchg
les
cmp
mov
test
mov
test
push
pop
xchg
aaa
or
hlt
xor
mov
subb
adc
call
mov
push
jae
bound
es
push
jecxz
pop
mov
lahf
lods
push
dec
dec
or
ss
pop
mov
push
ljmp
mov
aas
shrb
cmp
fstps
push
fs
sbb
jg
mov
stc
mov
mov
cwtl
iret
fwait
imul
les
scas
adc
mov
mov
and
cmp
cmp
xor
lret
sbb
das
xchg
mov
pushf
cmpsb
mov
rolb
out
das
sbb
jbe
add
add
insb
insl
cmpsl
fs
mov
mov
sbb
repnz
sbb
loop
inc
cli
lahf
mov
aad
out
fstpl
sarl
inc
mov
mov
test
je
ror
mov
xlat
test
ja
mov
dec
pushf
or
xor
sub
lods
stos
cmp
ret
lret
and
adc
adc
xchg
inc
dec
xchg
push
aad
adc
clc
sbb
pop
loop
push
jp
dec
xchg
or
dec
faddl
mov
push
xor
fstps
out
mov
sbb
aaa
sarl
shll
xor
mov
sbb
mov
jmp
mov
mov
ret
mov
adc
inc
or
jo
repnz
push
lock
xorb
lods
jp
pop
repnz
test
cmp
sbb
mov
iret
or
fs
push
in
push
add
rolb
lea
aaa
jmp
sub
adcb
shrl
nop
mov
orb
int
sarl
sbb
stc
dec
xchg
daa
sub
and
lahf
jle
inc
arpl
and
xor
and
pop
jo
sahf
mov
pop
shlb
mov
outsb
mov
push
stos
pop
jg
push
xor
inc
push
mov
and
sbbl
pop
mov
jns
push
dec
fstl
fsts
lods
jmp
mov
les
imul
loope
scas
popa
scas
aad
inc
insl
push
mov
dec
mov
lds
pcmpgtb
push
fnstsw
pop
mov
pop
mov
cld
aam
in
imul
mov
xor
fidivrl
xchg
xchg
mov
cmpsb
ds
xor
loopne
mov
adc
adc
bound
pop
xchg
or
cs
mov
pop
je
lds
sub
add
pushf
mulb
xchg
lret
pop
out
jg
mov
lock
pop
sbb
jns
push
mov
mov
or
divb
push
clc
push
pop
inc
mov
jp
sahf
daa
and
xchg
repz
pop
cmpsl
rcrl
xchg
sub
scas
xor
jae
push
push
rcl
mov
int
adc
xchg
lock
push
out
dec
cmp
push
clc
arpl
dec
lret
xchg
or
mov
and
fwait
lahf
cld
cli
imul
repnz
or
mov
mov
or
dec
js
push
adc
in
cs
sbb
loopne
or
out
push
ljmp
aam
xlat
enter
pop
adc
and
jb
out
fmull
jecxz
and
pop
add
scas
je
out
push
test
inc
and
out
pop
lods
fbld
cmpsl
in
mov
int
push
and
sub
cmpsl
xor
sub
fiaddl
stc
pop
int3
cld
sbb
push
fadd
mov
mov
mov
out
shl
mov
cmp
dec
popa
cmp
mov
jg
fsubrs
dec
mov
adc
mov
fucomi
pusha
psubusw
jns
rorb
shrl
push
inc
add
inc
pop
sub
jns
pop
movsb
push
sub
dec
or
jbe
pop
sbb
ss
lret
sub
xor
and
sbb
and
xchg
push
mov
and
xor
fnsave
fnsave
popf
xchg
test
adc
mov
cltd
adc
nop
mov
into
aas
mov
sbb
dec
sub
in
in
xor
mov
push
stos
mov
sub
cmpsl
cmp
test
mov
test
out
jno
xor
aas
fcom
sarl
mov
sub
lahf
add
fisubs
into
out
scas
je
pop
dec
lock
pop
fisttps
jmp
xorl
popf
jl
xor
sbb
jg
push
sti
or
faddl
add
iret
aam
hlt
incl
or
add
sub
sub
xor
test
adc
mov
lcall
into
adc
or
xor
ss
out
repnz
insb
add
popf
mov
out
movsb
add
dec
mov
sub
or
add
shrb
pop
outsb
mov
loopne
xchg
outsl
jp
sub
leave
aam
sbb
pushf
sbb
fs
in
mov
cmp
iret
sbb
mov
fiaddl
and
cmp
jmp
or
cmpsl
fildl
adc
push
lods
xchg
fmuls
aaa
mov
jae
popa
sbb
mov
cwtl
jne
out
dec
cli
ret
cmp
push
cmpsb
pop
cmc
loop
xchg
pop
aas
jae
ss
push
ret
push
add
or
es
int3
stos
rcll
mov
cmp
scas
movsl
inc
cmp
jo
mov
movsb
les
and
push
lret
fwait
add
jo
xor
mov
xor
and
jge
test
pop
addr16
mov
inc
aam
or
orl
adc
cmpsl
fwait
rcrb
cbtw
jl
jl
mov
mov
mov
lock
push
leave
lcall
andl
push
mov
insl
fwait
xor
pop
out
shll
jg
push
pop
cs
sbb
shl
gs
imul
loope
pusha
rclb
sbb
jbe
mov
addr16
gs
and
pop
sub
mov
int
push
mov
enter
lods
in
in
adc
sub
out
js
hlt
fstpt
dec
xor
jp
jge
push
mov
cs
pop
into
es
mov
mov
and
jg
dec
test
fildll
jle
xor
je
jl
jnp
mov
in
aaa
xorb
cwtl
es
test
bound
cli
out
cmp
addr16
aad
push
xor
jle
cld
mov
dec
mov
fidivrs
ret
push
ret
wrmsr
lock
inc
push
sbb
cmpsl
push
jb
pop
dec
cmc
lret
gs
mov
cmp
pop
or
imul
dec
adc
adc
aad
xor
jp
and
jnp
xchg
mov
test
daa
movsl
pop
push
dec
shl
icebp
ficomps
icebp
add
ss
mov
add
mov
xor
dec
xor
inc
adc
jne
aam
inc
out
dec
inc
push
nop
inc
and
ret
xlat
adc
sub
or
and
ja
dec
mov
lret
clc
sub
pop
ret
xor
mov
popa
or
stos
lahf
dec
jecxz
test
repz
add
adc
mov
sub
mov
mov
sbb
loop
rcrl
addl
mov
adc
and
inc
inc
dec
inc
inc
lds
inc
dec
add
xchg
int3
repnz
scas
call
jno
mov
dec
mov
ja
dec
pop
mov
mov
test
xchg
push
dec
and
lret
sub
xchg
adc
into
es
negb
jns
add
sub
in
js
iret
cmpsl
xchg
mov
insb
lret
aad
jp
das
sarl
int3
push
cmp
stos
lock
cli
inc
push
mov
dec
aad
addr16
adc
mov
leave
push
clc
jl
adc
jmp
xor
pop
lcall
pop
loopne
xor
fs
aam
mov
sbb
mov
mov
add
inc
jl
mov
pop
divl
lea
stos
push
jns
adc
jnp
aaa
or
push
fists
inc
adc
mov
fstps
xor
hlt
loopne
jbe
bound
jne
mov
inc
in
sub
add
push
push
repz
jge
jae
les
lahf
push
stos
mov
clts
out
pop
rcrb
sbb
pop
arpl
sbb
push
jno
pop
sub
xchg
repz
cmpsb
lods
jl
out
sub
xor
mov
push
imul
jo
lods
lret
sahf
push
sbb
mov
clc
push
push
add
pop
mov
lods
push
cmpsl
les
push
inc
push
or
pop
neg
cmc
mov
data16
notb
lock
data16
jle
mov
sbb
or
mov
insb
pop
pop
jecxz
imul
clc
adc
add
fstpl
popf
add
ljmp
sub
or
jae
xor
dec
test
cmp
add
es
or
into
sub
cwtl
or
arpl
jg
lods
out
fidivrs
lcall
rolb
popa
cmc
cs
xor
les
pop
sub
andb
dec
in
test
imul
xchg
inc
shll
adc
cmp
sbb
das
dec
or
jo
sarl
jle
mov
xchg
pushf
mov
lahf
xchg
xor
loopne
jle
stos
lods
ret
ds
mov
push
xlat
inc
aad
adc
sub
mov
fcoml
sbb
jnp
lock
jle
jle
jp
xor
push
mov
sbb
xor
call
cmc
and
sarl
lea
cli
cmp
popa
or
or
cmp
insl
repz
push
mov
or
test
fldcw
scas
js
stos
subl
lret
push
outsl
mov
and
sbb
shr
jg
lea
stos
and
loop
fidivrs
fcoml
cmp
call
lds
jne
arpl
bound
incl
sbb
mov
adc
ret
pushl
jno
xor
xor
dec
sarb
mov
dec
push
cmp
leave
jmp
call
ror
les
cs
fdivs
mov
inc
xlat
mov
ss
pop
fisubs
mov
jae
mov
inc
jo
out
ret
das
rcrb
push
and
mov
adc
divl
xchg
jns
jge
sbb
cmpsb
pushf
mov
cmp
fucomip
adc
cmp
fwait
jmp
loopne
xchg
xor
cs
lods
mov
movsl
fisttps
pop
adc
pop
sub
pop
jge
outsb
cli
jg
dec
inc
inc
xor
jge
cmc
out
and
and
cmc
lcall
push
pop
add
adc
push
adc
fwait
test
jne
and
and
aas
xor
fwait
sub
mov
ror
or
fcompp
or
out
xchg
jae
cmpb
xchg
movsb
pop
xor
int3
in
stc
cli
add
mov
addr16
xchg
mov
test
mov
popf
jmp
xor
icebp
fcoml
nop
int
jne
arpl
xchg
pop
sub
adc
pop
mov
js
cli
negl
jg
hlt
mov
cmp
fcomps
cmp
sbb
adc
mov
mov
or
and
mov
inc
and
fimull
xlat
mov
cltd
aam
dec
pop
lea
xchg
int3
pop
xchg
fnstenv
xchg
call
inc
push
dec
push
and
enter
sqrtps
cltd
fs
xor
jo
sbb
xchg
aaa
std
pop
ds
jno
xorb
lahf
into
cmp
ss
mov
dec
aam
into
ds
push
stos
push
lret
lea
out
add
inc
mov
std
mov
inc
dec
push
xchg
mov
xchg
test
mov
popa
add
pop
imulb
jmp
lea
int3
pop
mov
cwtl
mov
loop
pop
sub
mov
out
jmp
add
xchg
in
xchg
in
mov
leave
sbb
mov
jo
out
sbb
cmp
or
das
dec
mov
inc
mov
xor
add
add
in
in
cli
inc
lret
aaa
pusha
pushf
push
test
mov
aam
stos
mov
seto
outsb
dec
jnp
push
stos
push
lret
aaa
dec
rcll
mov
mov
adc
mov
test
sbb
sub
push
xlat
int3
repz
aad
outsl
cmpsb
fbld
push
pop
inc
jge
out
sbb
enter
inc
hlt
push
sti
jmp
or
loopne
xlat
shrb
jg
dec
pop
bound
mov
mov
testl
stc
cmp
icebp
cs
xchg
daa
mov
jmp
sub
inc
lods
clc
cli
xor
and
insb
int3
push
loope
jmp
shlb
movsl
cli
std
cmp
inc
in
rol
mov
test
inc
pop
je
xor
int3
roll
mov
sahf
loop
pop
inc
inc
shlb
cmp
ss
clc
adc
xchg
sub
mov
aas
sub
cmp
mov
add
icebp
pop
xchg
xchg
into
inc
out
adc
pop
es
push
push
into
mov
test
mov
pusha
aad
push
adc
in
and
in
and
inc
jbe
inc
imul
out
out
inc
add
dec
jnp
mov
repz
in
cmpsl
int3
nop
fsubl
sub
cli
add
test
mov
int
ds
rolb
repnz
jg
cmpsb
shl
mull
cs
xchg
insl
dec
fcoms
dec
repz
pop
fsub
int
dec
mov
outsl
or
mov
adc
imul
mov
or
add
xor
ficompl
jae
or
ss
clc
pop
sbb
ror
out
repz
jnp
scas
dec
sbbl
mov
mov
inc
aaa
mov
cmpsb
cmc
lods
das
dec
bound
push
int
mov
or
lahf
stos
mov
pop
jecxz
sub
xorl
std
add
and
mov
sbb
sub
repz
push
mov
push
loopne
pop
pop
pop
nop
mov
lcall
fwait
pop
test
push
push
sbb
and
sarb
icebp
ja
lods
pop
inc
pop
push
xchg
iret
int3
fstpl
sbb
stc
popf
rcr
insb
lret
push
es
push
icebp
popa
jg
insl
pushf
movsb
inc
scas
int
rorb
mov
add
adc
cmpsb
jbe
fidivrs
in
jne
mov
cmp
fistpll
les
dec
mov
mov
dec
call
lods
sbb
jl
jo
js
mov
push
jne
in
or
mov
repz
test
lds
scas
idivb
mov
xor
hlt
shll
leave
xchg
dec
sbb
gs
inc
sub
int3
popf
and
adc
inc
dec
cmpsb
or
fwait
adc
rolb
icebp
lret
or
fucomi
lahf
in
mov
outsl
mul
shl
add
pop
sbb
pop
out
or
daa
nop
inc
mov
insl
adc
xchg
movsb
lock
cmc
jo
insl
dec
mov
int
fprem1
mov
push
flds
int
push
mov
and
out
clc
pop
hlt
dec
adc
movsl
lea
pop
push
call
lcall
fs
mov
pop
pop
mov
scas
pop
imul
add
lret
xchg
addr16
in
iret
rorl
cmpb
js
push
or
cwtl
dec
add
rorl
pop
pop
imul
push
lea
sti
inc
and
ret
xchg
aaa
mov
sub
clc
add
lcall
mov
dec
lahf
inc
stos
lahf
fcoms
sub
cmp
scas
pop
dec
rcll
mov
jae
adcb
push
or
loop
and
inc
iret
pop
or
imul
jbe
ljmp
idivl
fwait
and
jle
fildll
imulb
adc
lock
std
stos
loopne
aad
lahf
sti
push
in
and
add
pop
stos
add
jp
dec
cli
imul
ljmp
pop
orb
inc
aam
push
mov
push
shrl
mov
and
imul
ss
mov
mov
imul
sti
xor
and
push
lret
push
sbb
lcall
clc
into
das
cmp
aaa
and
bswap
dec
inc
add
push
aas
inc
sub
mov
stc
insl
in
imul
dec
cmp
les
jl
push
xchg
mov
add
test
cs
popa
pop
movd
cmp
jge
lea
loopne
push
divb
inc
adc
test
jns
movsl
lods
or
test
fnsave
pop
push
adc
jne
inc
push
or
push
out
movsb
int
insb
and
test
pop
inc
insb
lea
or
add
stc
stos
cli
jno
or
std
je
mov
adc
sar
adc
jbe
sub
push
push
shrl
adc
mov
imul
adc
addb
ror
nop
shrb
aas
inc
push
push
je
push
fisttpl
sti
outsl
pop
add
and
adc
mov
mov
test
out
mov
cmpl
sbb
dec
mov
fnstenv
in
mov
xor
xor
out
mov
sbb
cs
fbld
rcrl
ljmp
or
cmp
adc
loopne
cmpsb
orb
les
pop
mov
push
mov
lea
pop
cs
dec
movsb
inc
push
and
aam
lahf
mov
pop
imul
fstps
jo
inc
dec
gs
addr16
cli
dec
and
or
cmp
inc
mov
cmpsb
mov
negb
push
lds
insb
cmp
add
cmp
pushf
cmp
ljmp
arpl
push
inc
dec
je
test
in
popf
pop
popa
jo
xchg
js
das
add
addb
ja
dec
jecxz
pop
push
sbb
arpl
loope
xor
cmc
aas
dec
lods
mov
roll
out
fstps
mov
sbb
aas
mov
xchg
xchg
shll
mov
jbe
fwait
push
call
jae
xor
stc
inc
das
mov
jge
adc
je
or
aad
movsb
popa
lock
mov
sub
addr16
push
out
inc
testl
jmp
lods
mov
fistl
fwait
aaa
leave
scas
mov
icebp
sub
sub
aaa
mov
cmc
cmpl
adc
outsl
mov
xchg
sbb
jle
cmpsb
push
xchg
jbe
mov
int
jnp
xor
nop
pop
cmp
mov
jo
orl
lret
mov
push
outsl
test
test
fcoml
stc
and
leave
push
sbb
popa
mov
pusha
mov
ljmp
sub
sbb
int
mov
repnz
cmp
pusha
xor
nop
push
xlat
les
xor
jecxz
inc
testb
loopne
sub
mov
shll
jmp
mov
lods
add
std
mov
push
sub
adcl
es
mov
in
scas
pop
push
cwtl
fsubs
xor
pop
inc
pop
leave
pusha
in
hlt
shrb
inc
fwait
rcl
scas
stos
clc
pop
mov
xchg
sub
push
sti
xorl
push
push
cmp
mov
std
add
xchg
and
cmp
cwtl
lret
lret
enter
mov
or
out
popf
fistpl
daa
xchg
jl
aam
cld
mov
ljmp
mov
test
lock
lcall
inc
fwait
aam
dec
lock
or
pop
or
arpl
orb
das
stos
enter
adc
xchg
and
fnsave
and
push
andl
rcrb
cmpsb
andb
ficoms
adc
data16
mov
insb
sbb
sbb
pop
ds
xor
iret
lods
inc
adc
jae
ret
adc
add
push
js
ds
filds
cld
xchg
call
ljmp
lock
push
push
add
scas
mov
arpl
jg
push
push
dec
push
push
and
dec
xor
test
cli
mov
dec
mov
xchg
xor
fwait
sub
je
mov
xor
shll
outsb
addb
sbb
pop
add
sub
jbe,pn
dec
fsub
xchg
stos
sbb
stc
xor
orb
lods
mov
fildl
imul
jae
push
into
adc
mov
xor
jge
jae
or
repz
ror
push
jg
jne
add
in
mov
ljmp
cmp
int3
sub
inc
add
xor
or
fmull
out
mov
push
imul
mov
lock
in
mov
jecxz
into
cmp
icebp
hlt
add
push
inc
in
jae
or
lahf
pop
xor
inc
mov
push
std
and
dec
insl
imul
clc
cld
xor
leave
stos
pop
dec
add
lods
lahf
or
jnp
pop
ljmp
sub
adc
ficoms
mov
sbb
int3
outsb
xchg
mov
push
pop
stos
mov
imul
dec
add
lret
xor
add
ds
push
cmp
jp
cmpsb
xchg
leave
inc
xlat
and
adc
inc
pop
cmpsl
lds
testl
lea
and
jp
xchg
stc
sbb
xlat
jge
lahf
out
pop
sbb
ja
or
hlt
inc
cmp
inc
pop
shrl
inc
lods
mov
and
dec
ret
test
mov
mov
je
adc
xchg
xor
xor
lods
scas
clc
push
mov
mov
jns
pop
jp
fmulp
lret
fneni(8087
stos
test
jno
outsl
mov
push
test
or
fwait
dec
xor
loop
pop
jns
cmc
push
cmp
inc
sbb
pushw
fsubl
out
shll
mov
icebp
mov
movsb
and
sbb
xchg
dec
mov
push
push
push
lds
mov
push
aas
ljmp
mov
ss
pushf
sub
es
lret
fsubrl
cltd
fldenv
sub
push
dec
dec
xchg
push
loopne
les
mulb
and
mov
gs
rorl
jl
mov
and
mov
pop
fdivs
dec
jle
or
sbb
and
mov
neg
lds
enter
add
fistl
mov
cmp
lds
insl
sub
test
inc
mov
mov
cmp
clc
enter
inc
push
xor
mov
insl
scas
shl
push
shlb
scas
fildll
mov
test
aad
in
jne
std
jb
movsl
js
pushf
inc
push
or
mov
scas
mov
stos
push
xchg
mov
test
xchg
pop
and
adc
jno
andl
mov
push
inc
mov
adc
mov
psrad
pop
arpl
dec
ds
or
cmp
stc
sub
dec
shlb
and
pop
push
in
sub
push
lods
add
ret
cmp
mov
ret
push
data16
icebp
sbb
sbb
scas
cli
push
cmp
cmp
pop
js
inc
sbb
fldl
or
push
mov
rcrl
insb
ficoml
out
in
aam
bound
jge
repnz
push
pushf
fwait
cmpsl
pop
jae
push
dec
ret
pop
jo
cmp
jl
sbb
fucomip
in
adc
int
int3
pop
movsl
pushf
loopne
or
jo
js
pop
dec
xlat
dec
cld
cmp
fdivrl
push
mov
cwtl
into
outsl
adc
inc
cmpsb
in
mov
xlat
pop
and
cmc
add
cmp
xor
test
in
sub
cltd
xor
add
je
rclb
cs
cmp
aad
in
outsl
jg
stos
lods
in
hlt
sub
loop
adc
out
scas
jecxz
arpl
push
mov
or
lahf
cmp
in
movsb
xor
imul
ret
jle
int3
scas
lcall
sub
mov
shr
daa
in
lahf
cwtl
adc
push
fisubrs
or
mov
mov
add
shlb
das
lea
xchg
cmp
mov
cwtl
inc
push
scas
mov
adc
xor
mov
cmpsl
int
xchg
lods
pop
xlat
out
int
sbb
or
mov
pop
scas
arpl
add
mov
mov
inc
mov
or
test
call
push
cmp
pop
add
popa
popa
mov
rcll
rcr
hlt
in
cmp
jno
xor
inc
jns
insl
fistpll
lock
sub
mov
adc
arpl
pop
xor
sahf
psllw
jecxz
mov
mov
in
cmpsb
out
shrl
std
std
xchg
rclb
xor
fildll
inc
ds
xor
lock
dec
mov
or
mov
cmp
adc
cmp
popa
jno
cli
sub
fidivrl
mov
in
clc
mov
adc
fwait
out
mov
or
es
inc
pushf
loopne
pop
cwtl
movsb
lock
out
pop
ljmp
dec
pop
push
test
loop
dec
mov
push
ja
dec
mov
cwtl
xor
fildl
mov
stos
fstl
sub
imul
fsubr
shll
or
mov
aam
jns
ljmp
jo
arpl
movsl
cmp
pop
add
jo
mov
hlt
adc
icebp
or
stc
add
outsl
int3
js
ljmp
xlat
pop
adc
and
sarl
mov
in
rcll
jg
and
push
pushf
ja
mov
outsb
fwait
xchg
push
scas
add
mov
dec
mov
shll
es
or
sbb
je
or
mov
inc
xchg
pop
inc
pushf
int
sbb
in
or
sarl
fucom
sbb
and
pop
leave
out
adc
out
insb
dec
fidivrs
dec
mov
xchg
mov
or
ja
movsl
mov
jle
xchg
fisttpll
pop
sub
ds
xor
xchg
lods
cltd
icebp
mov
insb
push
pop
rorl
arpl
cmp
scas
xchg
dec
mov
or
in
popf
jg
mov
icebp
pop
push
sbb
mov
sbbb
fiaddl
dec
xchg
xchg
mov
insl
and
bound
loopne
mov
mov
movsl
mov
pop
lods
jle
loopne
jns
rcrb
stos
add
xchg
or
jp
and
mov
mov
lcall
je
cld
imul
mov
adc
lcall
int
ret
xor
nop
jl
insl
and
sub
add
fs
or
imul
xchg
je
push
pusha
mov
or
imul
or
shr
call
dec
adc
fiaddl
xchg
lret
pushf
mov
inc
xchg
fdivr
xor
cs
in
mov
clc
les
dec
dec
sti
mov
add
nop
int3
jns
mov
lret
shll
inc
mov
and
xchg
das
daa
jecxz
pop
push
xor
pop
pop
add
jecxz
sarb
add
mov
stos
mov
inc
clc
jg
add
xchg
ljmp
push
dec
mov
fwait
aad
pusha
and
test
fs
adc
jg
into
mov
nop
test
imul
mov
adc
outsb
pop
gs
dec
sbb
cmc
adc
sbb
inc
sub
xchg
xor
jmp
jg
mov
inc
jb
in
jne
mov
popf
inc
jnp
popa
add
jns
mov
xchg
and
ret
lcall
popa
xchg
negb
loope
push
push
pop
xchg
mov
sbb
mov
push
lret
pop
ja
pusha
fcomi
adc
and
aad
adc
std
xchg
mov
fwait
cmp
mov
and
scas
fbld
bound
xchg
push
mov
stc
xchg
dec
cmpsb
loop
mov
mov
mov
pusha
test
lods
fwait
cwtl
xor
and
cmp
in
fld
ja
andl
ret
mov
cmp
mov
lcall
sub
mov
aad
sbb
arpl
shll
lods
insl
mov
aaa
xor
sub
in
sbb
icebp
shlb
popf
sub
cmp
mov
in
push
movsb
adc
stos
xchg
push
stos
stos
dec
mov
dec
or
dec
outsl
aad
push
push
dec
inc
test
add
fstpt
fdiv
icebp
jp
loope
lret
test
sub
lcall
lds
daa
jmp
inc
mov
mov
dec
mov
adc
push
fists
cmp
adc
pop
adc
jle
fs
clc
jnp
adc
int
leave
fmuls
in
inc
sbb
ficompl
jg
or
add
pop
imul
lret
push
mov
inc
xlat
out
mov
shl
mov
add
push
xchg
mov
mov
test
insl
fcmove
nop
add
mov
lahf
inc
mov
fisttpl
scas
xorl
add
lcall
push
pusha
movsl
ljmp
sbb
add
jne
mov
push
pop
push
cld
mov
and
dec
sbb
and
ljmp
pop
xchg
shrl
fsubp
stos
fs
outsb
pop
lret
int3
dec
outsl
cmpsb
or
inc
cmp
rcll
lcall
je
fisubs
imul
xor
xchg
pusha
xchg
cmpsb
lds
add
xor
cmp
mulb
lock
inc
mov
pop
add
icebp
and
aas
pop
jmp
mov
push
mov
pop
sbb
scas
push
adc
outsl
inc
outsl
jge
sbb
sbb
pop
push
push
mov
fimuls
mov
xor
xor
jae
fcmovne
pop
adc
fidivrs
xor
aad
sub
mov
add
mov
and
and
xor
inc
aas
pop
sbb
or
fidivrs
mov
cmpsb
mov
jo
stos
mov
loop
sbb
in
inc
jbe
jbe
push
sbb
xor
push
jle
in
aam
negb
ja
sbb
push
add
fdivrl
xorb
bound
sub
jb
xlat
dec
dec
imul
pop
mov
fcompl
mov
lods
outsb
sti
mov
sbb
lods
push
hlt
pop
sbb
push
push
sbb
stos
mov
nop
pushf
mov
mov
dec
mov
dec
dec
pop
je
in
js
add
mov
int
pop
dec
and
jb
les
lret
mov
outsb
cmp
and
cmpsl
cmpsl
daa
jne
push
push
sbb
jecxz
int3
test
mov
repz
push
roll
loope
dec
cmc
mov
jg
xchg
rcl
dec
cmc
xchg
xor
into
mov
mov
xchg
arpl
movsl
jge
dec
or
testb
cmc
pop
int
adc
pop
stos
sub
pushf
pushf
dec
jo
push
out
into
jp
imul
out
xchg
sahf
push
jecxz
sub
subl
add
xchg
jno
mov
shll
ss
sub
enter
mov
cmp
nop
addr16
loop
and
inc
fldt
popa
xor
xor
mov
cmpsl
xor
xor
pop
jae
js
push
jl
cwtl
pop
lcall
clc
ds
in
pop
mov
shrb
mov
out
mov
lods
sub
pop
hlt
or
cld
imul
fimull
test
jbe
imul
leave
mov
mov
xchg
aaa
gs
jnp
ror
jnp
call
fisttpll
push
push
rcr
dec
dec
jne
jno
fldenv
and
xchg
cli
mov
sub
xchg
pop
out
or
cmc
sub
xchg
lods
xchg
xor
and
repnz
fildll
adc
stos
loopne
sarl
pop
xchg
cmp
sti
test
lea
xor
adc
cld
add
xchg
jle
test
dec
add
sub
push
add
push
insb
mov
jb
or
xorb
jne
fwait
sbb
rcr
scas
lds
fcmovu
xchg
les
hlt
dec
sahf
fistl
stc
mov
adc
cmp
cld
js
jae
not
adc
jne
idivb
xchg
add
leave
push
jl
imul
in
jle
xor
cmp
or
dec
jo
sbb
jbe
or
popf
or
sbb
mov
jo
jns
outsb
jl
lcall
dec
mov
cmp
adcl
cli
sub
inc
jmp
mov
or
xlat
adc
stos
aam
xchg
inc
inc
imul
rcrl
aad
jbe
adc
aad
cli
mov
out
int3
xlat
mov
or
pop
mov
sbb
pop
jl
adc
outsl
pop
jmp
mov
pop
imulb
imul
int
outsb
pop
loope
jo
jle
ds
and
ljmp
mov
faddl
and
nop
xchg
xchg
ss
xchg
fisttps
adc
cmc
or
add
mov
jp
cli
mov
xchg
sub
popf
rcrb
clc
add
iret
and
scas
pop
xchg
lret
test
mov
mov
es
neg
xor
cmp
fisttpll
inc
repz
or
mov
inc
ds
mov
filds
repnz
outsl
mov
int3
sti
call
out
imul
dec
lds
sti
xchg
inc
pop
pop
insb
punpckldq
pop
cld
fildll
sti
repnz
cmp
mov
or
popa
mov
and
addr16
cmp
cmp
je
in
ret
daa
mov
mov
and
inc
push
in
insl
xchg
les
pusha
inc
lods
movsb
aam
mov
adc
out
hlt
adc
loop
cmp
xchg
dec
ja
int3
inc
pop
outsb
out
and
jecxz
lcall
cmp
mov
addr16
or
push
xorb
cmp
pop
jle
int
mov
lock
bswap
insb
lcall
xchg
sbb
shlb
iret
or
lock
push
add
pop
in
addr16
aas
stos
push
jae
mov
popw
cltd
leave
cmp
js
adc
lahf
ret
xor
andl
mov
jle
mov
out
int3
repz
cli
dec
lcall
pop
and
xchg
add
mov
nop
adc
stos
cltd
mov
inc
mov
xchg
jbe
pop
xchg
dec
or
jg
popl
lock
mov
mov
jmp
jbe
push
mov
jbe
inc
movsb
jae
sbb
dec
adc
loope
ja
cmp
mov
in
mov
xor
cmpsb
lcall
icebp
stos
mov
push
sti
rorl
cmp
or
push
dec
aas
nop
sub
jnp
mov
movsl
xchg
mov
mov
pop
lea
inc
inc
jbe
mov
lret
adc
imul
insl
push
dec
jge
fsubs
jae
lea
push
mov
negb
sub
gs
mov
push
lods
push
leave
mov
and
xchg
add
jne
pop
xchg
mov
insl
mov
mov
cld
mov
adc
jnp
sub
cltd
movsl
sub
fldenv
mov
mov
fs
adcb
xchg
push
mov
ret
pop
addr16
stos
push
stc
movsb
cmpsl
inc
mov
mov
cmp
jl
push
pop
xor
call
cmp
mov
pop
inc
and
pushl
daa
mov
fistpll
int3
arpl
mov
rorl
xchg
dec
adc
mov
xor
imul
fcoms
jbe
dec
lret
dec
mov
xchg
push
adc
andb
fidivs
leave
cmp
data16
sbb
cmp
pop
leave
lea
sbb
inc
cmp
cmp
into
mov
into
jmp
sub
bound
push
sub
or
push
add
pop
dec
bound
fwait
sbbb
sti
or
pushf
mov
cwtl
fscale
sub
push
call
inc
shl
mov
sub
fbstp
pushw
adc
loope
shlb
dec
lea
pop
mov
je
fdivrl
add
mov
mov
jbe
adc
adc
stos
int3
lcall
xchg
sbb
add
cmpsl
xor
and
mov
dec
sub
les
mov
sbb
jp
fisttpll
xlat
or
dec
pslld
in
ljmp
mov
mov
fstpl
or
jecxz
dec
cmp
pop
cld
jb
inc
jns
jmp
hlt
mov
rcl
and
cmpsl
fwait
mov
add
lcall
lret
mov
mov
push
faddp
aaa
clc
jl
lahf
data16
repnz
movsb
ja
lods
mov
xor
daa
dec
adc
fsubrs
or
jge
mov
lcall
cmp
jmp
sub
sub
push
push
mov
and
adc
pop
daa
shll
jge
inc
cli
jl
add
insb
inc
lods
add
adc
xchg
subb
scas
mov
stos
call
adc
dec
mov
hlt
int
xor
adc
mov
pushf
jg
lret
out
loope
dec
sbb
mov
xchg
push
xchg
out
jg
hlt
lods
imull
cmpsl
mov
sbb
push
int
lret
sbb
call
xchg
notl
je
or
push
sub
push
mov
imul
jmp
aaa
imul
mov
paddsb
shrl
jno
xor
mov
inc
sbb
fst
adc
fildl
jmp
int3
cmp
xchg
adc
xlat
xchg
or
push
repnz
in
dec
jbe
mov
sti
inc
xlat
and
jbe
or
mov
daa
mov
jg
mov
adc
sbb
dec
test
xor
xor
sti
cmpsl
mov
push
xor
jmp
pop
dec
faddl
loopne
ljmp
dec
out
das
clc
fwait
outsb
sarl
aaa
adc
sbb
stos
sbb
ret
aas
pop
test
fistpll
mov
rol
jno
mov
xor
popl
mov
push
dec
std
xchg
pushl
push
andb
cmp
ljmp
imul
out
loopne
mov
scas
sub
jl
pop
cmp
lret
arpl
sbb
lea
ds
cmp
fs
fcmovu
pop
push
xchg
fs
or
push
push
or
xor
aad
mov
insb
mov
dec
xor
cmp
mov
pop
pop
dec
push
fldenv
sub
fcomps
pushf
lret
add
sub
mov
sbb
arpl
dec
lret
cmp
mov
or
or
jecxz
sbb
mov
push
jle
enter
push
xlat
cmp
sub
push
test
into
and
xor
adc
jo
mov
sti
xor
dec
sbb
sarl
outsl
jle
mov
push
in
add
cmp
iret
stos
and
mov
pop
mov
fsubs
and
pop
movb
adc
scas
shll
aaa
pushf
call
add
dec
pop
push
cmp
add
out
pop
hlt
adc
inc
xchg
jnp
add
lea
mov
js
mov
fdivrl
out
jmp
push
add
mov
xlat
pop
jmp
pop
jmp
lock
dec
pop
rcr
mov
cmp
xchg
or
mov
or
fdivr
xor
mov
leave
insl
into
cwtl
rolb
mov
shll
mov
or
or
rorb
clc
aam
pop
sub
add
add
arpl
out
jns
mov
push
mov
mov
xchg
dec
inc
jmp
pop
and
fisttps
jnp
icebp
push
jp
add
pop
pop
xor
inc
outsl
cmc
push
inc
mov
int3
mov
lea
lret
jno
xor
push
daa
into
sbb
ja
lret
add
mov
in
mov
cltd
pop
sub
mov
pop
push
rcrl
std
pop
cmp
pushf
lods
cmpb
out
and
push
mov
pop
popa
adc
out
stos
sub
add
dec
jnp
mov
imul
inc
leave
push
imul
imul
adc
aas
aad
mov
test
jae
dec
pop
jno
fiaddl
and
ds
dec
arpl
enter
and
pop
sbbb
outsl
cs
aam
mov
fnstenv
cmp
xchg
les
add
inc
gs
mov
pushf
lods
shlb
je
push
dec
ret
pop
sbb
repnz
and
adc
jecxz
adcl
mov
sub
and
cwtl
test
aam
adc
fwait
xor
dec
mov
or
cmp
adc
mov
rolb
mov
ljmp
pop
mov
push
push
js
clc
lea
mov
int3
sbb
stc
inc
jno
inc
jnp
jns
stc
sbb
daa
inc
adc
cmc
in
xchg
sbb
bound
ficomps
or
jmp
pop
mov
in
xor
push
sub
lcall
cld
cmp
jno
and
bnd
and
mov
cmpsb
inc
sub
and
repz
js
and
mov
jge
push
roll
repz
mov
push
mov
sub
das
jb
call
shlb
sbb
sub
jg
loopne
push
or
push
adc
fucomp
jb
or
jg
lock
adc
push
fst
ljmp
sub
sbb
inc
push
pushf
call
xchg
mov
dec
pop
sbb
in
insl
or
xorb
jg
je
pushf
lretw
add
xchg
xchg
aam
out
adc
in
or
cld
out
es
adc
sub
and
pmaddwd
mov
xor
cmc
sahf
or
inc
sbb
cs
jne
add
mov
adc
adcl
loop
pop
mov
fdivs
jno
dec
jnp
inc
popa
or
insb
mov
push
push
pop
xchg
xchg
out
sub
cli
push
cmp
nop
push
or
mov
xor
sub
movsb
leave
jb
jg
xacquire
pop
test
cwtl
fiaddl
xor
add
out
dec
test
daa
or
icebp
sti
mov
adc
lds
jecxz
push
mov
bound
ds
popf
or
clc
cmp
lea
repz
into
sub
pinsrw
jne
retw
add
movsb
lret
call
push
hlt
mov
int3
lret
mov
add
popa
mov
js
int3
xchg
ljmp
insl
xchg
push
iret
push
decl
scas
xchg
rorb
outsb
insb
in
iret
fs
and
sarl
loop
xor
and
xchg
mov
sbb
std
cli
jb
hlt
jno,pn
jne
push
pop
pop
fdivrl
pop
fs
push
shll
daa
fsubs
adc
and
lcall
pop
mov
cs
mov
cmp
mov
mov
sub
mov
mov
daa
cmp
movsl
js
xor
dec
or
mov
or
push
or
mov
adcl
cmp
mov
rorb
xchg
add
xchg
out
push
push
push
add
xchg
jecxz
dec
sub
and
fwait
inc
push
and
lret
fistpll
mov
jbe
rol
xchg
inc
shr
scas
mov
cmp
and
sub
mov
add
stc
mov
mov
xchg
and
xchg
hlt
push
inc
mov
push
popf
sbb
out
out
dec
fdivrl
andb
inc
in
jmp
add
aaa
test
and
in
imul
addr16
cmp
cltd
es
scas
mov
sub
inc
and
push
xchg
and
inc
push
pop
lret
rcrl
insl
mov
clc
sub
jbe
mov
rorl
repz
and
cmpsb
fsubp
mov
sahf
iret
mov
mov
cs
lea
mov
mov
inc
mov
xchg
dec
mov
fcomps
mov
ret
addr16
insl
or
mov
fnsave
xor
out
push
inc
ss
test
stc
rorl
call
sbb
lcall
lock
aam
mov
rdseed
scas
pop
mov
cmp
hlt
pop
sub
iret
cwtl
scas
mov
or
cmp
cld
and
stos
push
inc
adc
dec
daa
movsl
push
nop
mov
or
lret
xchg
fdivr
mov
dec
popa
std
mov
pop
cmpsb
es
dec
fistpll
cmp
aad
dec
jbe
mov
mov
mov
xor
or
outsb
jns
jns
push
jb
das
cmpsb
shrl
dec
mov
call
xchg
jge
shrl
jno
imul
or
mov
inc
roll
push
push
in
ljmp
mov
pushf
loope
pop
loopne
inc
sbb
inc
xchg
jb
sub
bswap
mov
and
fnstenv
outsl
loopne
and
xor
jp
movsb
ljmp
mov
mov
jne
lea
mov
pop
clc
inc
xor
ss
sub
xor
cmpsb
push
mov
aam
sub
jb
aad
fstl
lods
inc
cmp
jg
add
popa
inc
nop
dec
stos
fidivrs
sbb
lahf
sbb
adc
shl
cmp
or
xor
daa
jo
xchg
or
sbb
mov
xor
repnz
jnp
daa
outsb
aaa
adc
adc
out
mov
lret
and
sbb
fidivrl
jge
or
dec
or
dec
cmc
lock
in
test
mov
mov
mov
and
insl
es
and
adc
sub
and
mov
jno
jp
xchg
out
mov
push
mov
gs
pop
mov
ss
ja
or
inc
inc
jb
pop
enter
shrl
pop
jne
mov
or
addr16
sub
lahf
filds
and
xor
std
adc
or
dec
push
adc
push
popf
jp
cmp
nop
mov
inc
test
cmp
mov
sti
std
push
xlat
pop
mov
mov
mov
sahf
fcmovu
xchg
cmp
rclb
aas
gs
jae
pushf
lock
sbbb
sbb
xchg
ret
mov
cmp
cs
cmpsb
or
sbbl
sar
leave
rcl
lea
repnz
movsl
scas
adc
call
ja
dec
in
repz
pop
add
and
cmp
jnp
mov
sbb
xorl
scas
dec
mov
adc
jecxz
fidivl
ficompl
pop
divl
pop
sahf
mov
xor
mov
js
dec
push
push
scas
pusha
sub
rorb
xchg
imul
pusha
xchg
lds
xor
das
ret
dec
repnz
aas
enter
jo
jecxz
pop
lock
add
ret
scas
push
or
addl
adc
in
pushf
mov
repnz
sub
pop
adc
or
sbb
push
sbb
xchg
push
sbb
jne
and
lahf
dec
stos
jp
aam
cmc
pushl
je
test
mov
ljmp
mov
sub
cmc
pop
js
mov
stc
imul
mov
sbb
adc
sub
mov
orb
call
scas
in
into
in
ds
jle
mov
mov
mov
mov
loope
cmp
and
incl
pop
popf
fldcw
dec
pop
fadd
push
aad
popf
push
rorl
dec
incb
push
clc
xchg
imul
iret
addb
fwait
mov
repz
call
insb
sbb
das
adc
or
aaa
sahf
lea
jno
sub
dec
loop
cli
ljmp
in
lahf
pop
xor
jae
fneni(8087
push
cmpsl
jae
int3
ds
push
sub
shrd
out
or
pop
sbb
fldt
xchg
js
push
mov
jl
mov
inc
jecxz
pop
sbb
or
bound
push
mov
add
or
faddp
sbb
mov
loope
jae
add
shl
mov
ret
into
push
dec
mov
leave
inc
mov
xor
jge
clc
scas
jns
fsts
pop
xor
aam
and
mov
cmp
push
test
pop
mov
push
scas
jle
fidivs
cmp
jno
push
cwtl
movsb
mov
ret
pop
pop
sahf
mov
xchg
fwait
aam
das
push
fdivrs
jbe
push
xchg
add
jecxz
jae
sbb
rorl
adc
je
push
xor
test
movsl
cmp
xchg
pop
or
cmp
sub
cli
imul
adc
ljmp
pusha
xchg
and
clc
bnd
scas
sbb
pusha
icebp
mov
lods
fs
sbb
roll
xchg
stc
fcoms
movsl
int3
mov
fisubl
rcrl
xchg
je
das
mov
cld
mov
cmp
push
dec
dec
jl
pop
adc
rolb
jecxz
sbb
mov
mov
cld
push
push
mov
dec
inc
pushf
mov
aam
imul
outsb
hlt
lods
sbb
xor
imul
mov
pop
shll
mov
frstor
adc
sbb
ljmp
sub
xor
lds
aaa
mov
xor
push
outsl
data16
pop
nop
andb
leave
sbb
mov
xor
inc
mov
add
test
insl
leave
dec
xchg
test
int
push
mov
and
repnz
add
mov
dec
out
lock
pop
mov
test
adc
add
imul
lods
xor
adc
cmpsb
mov
insl
insb
mov
push
sahf
int3
insl
hlt
loopne
lret
rolb
xor
push
lods
dec
movsb
bound
add
xorb
in
lret
xchg
xlat
mov
or
or
ljmp
fstpl
adc
cmpsl
sub
leave
xchg
add
aam
xchg
dec
pop
fiaddl
rorb
inc
call
mov
scas
cmpsb
ficoml
xchg
jae
or
push
into
push
jg
pop
ret
and
leave
movsl
sbb
sbb
sub
jecxz
in
jl
push
out
or
cmpsb
pop
mov
sbb
push
dec
test
mov
scas
cmp
jne
insb
sub
and
and
lar
pop
add
add
sbb
cmp
jmp
sbb
mov
sub
fst
mov
jmp
out
aad
shlb
movsb
mov
pop
push
mov
dec
push
cmp
out
pop
pop
xchg
push
push
rcr
mov
or
test
cs
pop
daa
dec
bound
arpl
idivb
pop
daa
decl
jl
adc
imul
pop
xchg
mov
aaa
xchg
scas
mov
dec
xor
xor
dec
daa
pop
es
movsl
and
out
sbb
aas
mov
outsl
push
sar
seto
cltd
and
cmp
and
in
test
pop
cmp
xchg
push
insl
mov
fcmovb
shll
es
cmpsl
pop
je
pushl
mov
xor
pop
add
dec
and
dec
mov
mov
pop
add
dec
fmuls
mov
mov
out
bound
andb
mov
nop
insb
repz
inc
iret
enter
push
mov
aaa
lea
xchg
pop
inc
fwait
or
cmp
in
ret
cmp
stos
cmp
cli
mov
rorl
call
cmpl
or
outsl
lahf
inc
add
mov
pop
dec
mov
and
sub
inc
sbb
xchg
sub
into
add
xor
lock
int
adc
lahf
mov
pop
push
shrl
inc
cli
pop
mov
aaa
jecxz
mov
jle
aas
jae
mov
lret
inc
inc
sub
lcall
bswap
dec
arpl
sub
push
loope
ret
and
adc
daa
daa
repnz
cmp
mov
fwait
aaa
outsl
testl
and
stos
cmp
sahf
mov
jne
pop
test
lea
mov
inc
arpl
lahf
js
jecxz
xchg
mov
lcall
nop
fldenv
mov
mov
or
jb
icebp
sahf
popa
subl
push
popa
sub
in
xor
lock
xor
sub
ss
in
sub
mov
hlt
pushf
sbb
icebp
cmp
ja
mov
lods
ret
test
lds
imul
cmpsb
push
leave
movsb
pop
sub
xchg
push
mov
pop
inc
xchg
and
lock
lcall
mov
inc
fsubs
mov
in
lods
daa
sub
in
test
ja
inc
xor
xor
out
in
pushf
loope
mov
jle
insl
call
push
jl
cmc
xor
mov
mov
std
leave
sub
mov
jbe
pushf
lock
xor
cmp
add
icebp
ficoms
idivl
cltd
mov
ds
adc
pop
xor
push
nop
add
push
cltd
call
cmp
iret
ss
pop
cmp
jne
adc
icebp
mov
imul
adc
je
in
cmp
jl
rolb
data16
pop
xor
pop
sbb
sbb
xor
jno
push
mov
mov
xchg
mov
adc
test
push
jae
jbe
add
pop
mov
adc
shl
jmp
adc
testb
dec
mov
clc
pop
push
sub
xlat
add
mov
das
jge
inc
jae
andb
mov
fisubrs
sbb
into
push
jmp
jmp
icebp
sbb
fisubs
add
cmc
or
out
stos
into
pop
stos
repnz
movsb
std
and
stc
xor
pop
pop
ret
mov
fwait
scas
fwait
cwtl
xchg
addr16
leave
mov
in
xor
ljmp
mov
lret
sahf
jnp
out
xchg
scas
sub
inc
jmp
rcrl
add
add
stos
mov
subl
or
inc
mov
cmp
mov
out
mov
mov
mov
out
sbb
in
test
mov
pop
rcr
ret
gs
sub
mulb
sahf
rorb
adc
cs
push
pop
push
movb
fwait
orps
stos
xor
out
cmpsl
push
dec
stc
pop
sarb
cmp
and
xlat
xlat
lods
jmp
pop
add
arpl
outsl
ds
out
fucomi
mov
cmp
lret
mov
sub
or
fwait
test
cmp
mov
push
enter
icebp
sub
sub
dec
adc
cmpsb
mov
aas
push
daa
xorb
push
dec
push
iret
xchg
into
adc
sbb
roll
push
pushf
xchg
imul
test
sbbb
nop
push
and
xchg
rclb
rolb
sub
or
or
adc
mov
lods
andl
xlat
movsb
je
mov
test
jl
or
rcrb
add
std
pop
imul
push
mov
aaa
push
adc
cmpsl
pop
mov
push
arpl
in
data16
loope
add
jno
mov
std
and
aam
lahf
out
movsl
pop
movsbl
loopne
lods
xor
jb
jae
or
mov
aas
aas
movsl
stos
ffree
pop
dec
add
adc
xor
jecxz
test
mov
hlt
jnp
cld
sub
repz
add
enter
iret
orl
cmp
icebp
push
test
xchg
pop
mov
rcr
push
mov
lock
jns
lgdtl
mov
mov
jge
sbb
gs
outsb
outsb
scas
shrl
lret
das
add
popf
in
sarl
lock
repnz
xchg
insl
ret
lods
shr
cmpsl
aaa
jb
addr16
mov
clc
in
mov
jl
in
xchg
mov
idivl
adc
std
insl
cmpsl
sub
xchg
mov
sti
cld
lret
stos
jp
jae
in
mov
jg
mov
adc
scas
js
mov
movsb
inc
pop
cmp
sbb
add
clc
shll
inc
insb
jb
sbb
dec
xor
xor
out
sbb
sbb
out
xlat
pop
xchg
mov
mov
std
out
iret
mov
push
hlt
and
popa
jae
ret
pop
ljmp
cmp
push
mov
pushf
fmulp
pop
andl
xor
xchg
jle
mov
fisubl
sbb
xlat
imul
shrl
jns
ds
sti
je
jns
mov
sbb
out
xchg
cmp
nop
pop
lahf
mov
push
jne
mov
mov
mov
push
int
dec
cltd
cld
pusha
insb
rcl
jp
dec
inc
aas
arpl
mov
sub
scas
dec
push
adc
mov
add
dec
jne
jbe
repnz
mov
cmpsl
and
adc
mov
sti
les
rol
fldenv
pop
loope
add
pop
mov
loopne
imul
add
mov
test
into
mov
shrl
ds
sub
push
scas
push
test
lret
addb
out
dec
inc
call
rcll
jo
mov
add
stos
jg
inc
nop
loop
inc
das
or
cwtl
sti
outsl
sti
psubd
loopne
rcrb
xchg
pop
jne
xor
fldl
mov
movsb
xchg
bound
mov
and
xor
push
movsl
dec
repnz
jle
stos
sub
fwait
clc
into
jecxz
cmc
popa
sub
lahf
adc
dec
test
test
jno
and
inc
and
pop
jl
ljmp
enter
cmpsl
adc
push
mov
and
push
mov
push
in
iret
xor
jp
push
andb
mov
out
into
cmc
mov
call
insl
mov
fsubl
jnp
lods
push
inc
clc
jl
mov
mov
mov
sbb
push
mov
test
repnz
popa
and
call
xchg
stc
call
pop
stos
push
fsubr
jo
sbb
cld
je
mov
pop
inc
cmp
adc
sub
into
in
jecxz
dec
ss
xchg
cwtl
jbe
cwtl
test
les
inc
ja
jne
addr16
dec
fs
sbb
jp
mov
mov
lea
or
xchg
iret
movsl
or
repz
loope
inc
add
mov
jge
push
jp
cmpsb
cmpsb
test
xchg
mov
pop
mov
sub
mov
add
mov
xor
mov
cmp
call
sti
leave
xchg
int
mov
sar
cmp
aaa
cld
fisubrl
repnz
mov
aad
or
insb
inc
and
fsts
cwtl
movsb
xchg
add
sbb
bound
inc
push
in
sbb
mov
push
and
daa
aam
shrl
lods
xor
jl
dec
popf
vcvttsd2si
and
lcall
sbb
sbb
inc
pusha
add
inc
imulb
fidivrl
in
xchg
sahf
testl
mov
push
jecxz
and
mov
loop
stos
inc
ret
xchg
or
and
dec
sub
bound
add
test
jmp
loope
pusha
lea
sbb
cmp
ds
shrb
popf
adc
lds
lcall
cmp
inc
cs
xor
popf
mov
in
loopne
jbe
jmp
sub
stos
push
dec
fistpl
sub
jae
aas
pop
mov
sbb
es
sub
cwtl
sub
imulb
in
pop
xchg
je
pop
scas
inc
jecxz
fdivrl
cmp
sahf
mov
and
dec
jle
mov
js
cmpb
inc
in
repz
sbb
cmp
movsl
mov
lret
adc
fcompl
and
mov
dec
fwait
in
and
popa
mov
idivw
mov
xchg
and
dec
aam
inc
imull
mov
push
out
add
push
sbb
inc
std
decl
jns
in
into
push
sbb
daa
andb
js
push
jl
in
lea
sbb
cmp
out
add
mov
and
out
pop
lcall
icebp
xchg
outsb
jp
or
add
fistpl
pop
inc
dec
movsb
pop
adc
push
jno
lcall
cli
clc
jno
sbb
fnstenv
sahf
add
mov
sub
jmp
mov
std
sbb
hlt
push
or
aad
xor
and
shr
jb
loop
fisubl
sbb
testb
jle
cmp
push
sbbl
movsl
jge
ficompl
rcll
sub
sbb
pop
and
scas
imull
ficomps
xlat
mov
or
push
inc
sbb
mov
gs
mov
outsb
jg
jp
cmpsl
shl
mov
jb
xor
in
add
jmp
xchg
lahf
xchg
pop
test
insl
je
frstor
js
jg
inc
jg
xchg
push
test
out
scas
lods
jns
sub
test
or
adc
jae
push
or
lds
jno
and
push
scas
out
push
ret
mov
inc
mov
mov
pop
cmp
xor
sub
ljmp
jmp
addr16
int3
mov
xchg
jne
dec
jnp
xor
hlt
jo
sub
mov
lret
adc
aad
push
popa
out
xor
inc
int3
addl
xchg
movsl
push
adc
lock
dec
mov
cs
and
push
mov
mov
out
dec
js
daa
mov
ss
imul
cmp
sub
lret
stc
xor
fcoml
out
and
aam
xor
insb
sub
jp
fwait
mov
shll
stos
pop
xor
adc
adc
push
xor
roll
in
jb
mov
rcll
mov
mov
dec
cmp
js
sub
lret
jno
iret
adc
stos
in
mov
jg
mov
mul
outsb
sbb
aas
xlat
push
mov
pop
cmp
push
cmp
aam
cmp
loop
outsl
negl
loop
leave
dec
xchg
sub
cmp
in
rolb
fsub
dec
add
push
out
add
dec
aam
pop
inc
and
jns
pinsrw
xchg
stos
mov
into
mov
adc
lock
adc
sub
sub
adc
loope
or
in
xchg
jae
dec
out
ss
stos
mov
out
out
push
in
xor
push
dec
adc
cmpsl
mov
sbb
sbb
test
push
insl
mov
lcall
sub
xlat
mov
jae
sbb
shll
xor
or
je
aas
loopne
out
xor
jb
mov
ffreep
cltd
sbb
sarb
push
sbb
test
bound
addb
push
mov
in
xor
sbb
pop
add
pop
push
lret
popf
cmc
or
shlb
xchg
movsl
cmp
add
int3
add
mov
inc
jmp
xor
into
dec
inc
out
test
enter
ss
adc
js
cmpsl
dec
pop
and
rol
popa
neg
mov
mov
xchg
jl
lcall
and
cmp
jo
cwtl
pop
ss
dec
cmpsb
fld1
mov
dec
out
arpl
dec
lods
push
and
adc
inc
xor
arpl
test
dec
jbe
lds
xchg
addr16
mov
sbb
testb
adc
inc
lea
mov
inc
jns
cmp
stc
mov
jns
aaa
inc
pop
lcall
aam
xor
iret
cwtl
out
std
mov
mov
jp
mov
outsl
aaa
out
in
inc
dec
loop
xchg
movl
sub
pop
mov
cmp
xchg
into
sahf
add
and
fldl
mov
loop
loop
jb
aad
push
dec
ljmp
outsl
aas
jl
xor
jmp
xchg
add
repz
outsb
movsl
adc
dec
subl
sub
nop
inc
add
adc
add
sbb
inc
lcall
mov
outsl
enter
ja
fcoms
cmc
rolb
jae
dec
push
inc
jnp
and
mov
lcall
roll
push
sbb
mov
mov
sub
pop
leave
sahf
cmp
mov
test
aam
sbb
dec
out
cmc
mov
daa
aaa
lahf
mov
inc
ss
jbe
pop
adc
pop
sbb
inc
das
mov
mov
inc
fmuls
sarb
lcall
cs
push
or
mov
jmp
fisttps
mov
comiss
sahf
insl
les
es
cmp
cwtl
adc
inc
mov
xchg
dec
pop
movsl
neg
mov
xchg
ja
shlb
sbb
in
shl
cmc
xchg
std
mov
in
jae
inc
and
pop
sbb
into
push
repz
insl
lahf
mov
add
sub
xchg
sbb
jb
inc
cmp
sbb
mov
sub
lods
mov
iret
jg
test
mov
mov
xchg
mov
jb
out
out
mov
daa
jle
mov
cmp
rcrl
call
lret
pop
clc
mov
pushl
sbb
adc
aas
ds
push
xchg
mov
jbe
adc
mov
sahf
mov
and
aaa
int3
sahf
push
aad
mov
sti
xchg
ja
out
xchg
hlt
jb
and
imul
nop
fwait
and
sub
dec
dec
sbb
sarb
sub
jbe
clc
add
inc
jns
pusha
out
jl
jb
pop
xor
pop
pop
aas
adc
lea
int
fidivl
and
and
add
fistps
xor
jno
mov
xchg
out
xor
xchg
rorl
es
loopne
stos
stos
pop
fisubrs
inc
leave
mov
scas
mov
cmp
and
inc
and
lcall
mov
aaa
adc
pop
leave
sub
test
imul
mov
int
and
push
shl
out
ljmp
adc
adc
add
aaa
add
adc
ljmp
and
hlt
outsl
test
das
pushf
and
pop
fstps
mov
mov
dec
xlat
imul
fstpt
pop
pop
aad
fwait
lcall
push
or
fstps
jae
in
ret
pop
and
lods
jl
jl
mov
adc
or
pop
push
dec
cmpsb
roll
mov
mull
or
or
or
arpl
push
rcr
and
or
mov
jb
push
push
fcoms
out
stos
fidivrl
shrl
daa
mov
lahf
vhaddpd
xor
pushf
test
mov
mov
subl
icebp
dec
cli
mov
sub
mov
adc
inc
shl
inc
lcall
incl
xor
sbb
js
test
xchg
cmc
and
daa
xchg
mov
fwait
xchg
mov
cmp
fwait
sub
stos
pop
mov
jae
jbe
call
mov
mov
sbb
and
pusha
bound
sub
xor
inc
cmp
mov
stos
jp
jl,pn
aad
and
mov
and
mulb
pop
popa
int
mov
jecxz
mov
and
sarl
cmp
mov
sbb
rol
pop
cmp
imul
jns
pop
mov
and
jp
sub
lods
sahf
sub
call
ss
pop
add
test
xor
std
xchg
mov
dec
dec
lods
notl
sbb
push
xchg
adc
andl
aam
pop
aas
push
or
in
xchg
and
iret
add
xor
pop
pop
fstpt
sbb
leave
mov
push
addr16
push
mov
call
sbb
pop
pop
fnstsw
pop
lock
push
aas
sbbb
ret
inc
or
lret
je
dec
xchg
sbb
inc
or
push
pop
add
cmp
jge
sti
rcll
cmpsb
pushf
in
dec
mov
cwtl
sbb
lret
cmp
pop
xlat
popf
pop
insl
lea
jmp
sbb
bound
dec
adc
popl
ja
xor
nop
scas
mov
shll
sbb
jle
arpl
or
enter
imul
negb
lret
jne
bound
fists
fisttps
jns
xchg
ffreep
test
iret
jecxz
add
add
shrl
cmp
int
pop
std
push
lret
jae
push
aaa
mov
mov
xchg
imul
fmuls
stos
into
mov
sub
dec
jecxz
add
pusha
fdivs
test
data16
sub
pop
leave
test
repz
cmp
pushf
sub
or
lret
js
in
lcall
loopne
cmp
out
mov
call
pushf
mov
test
mov
pop
insl
lahf
and
push
leave
pop
das
or
xchg
shrl
imul
push
popf
imul
movsb
or
mov
push
ret
jae
mov
fnstsw
or
pop
cld
adc
mov
dec
xchg
pusha
dec
outsl
xor
xchg
pushf
pop
pop
rcrl
out
dec
outsb
lock
popf
mov
jae
aas
inc
and
push
rorb
jmp
test
std
nop
mov
cmp
add
rcll
rcll
push
lret
repnz
sub
and
popa
popa
xchg
jb
sbb
inc
fdiv
or
sbb
push
add
mov
xlat
adc
inc
add
dec
insl
adc
aas
adc
int3
mov
mov
or
push
or
pop
daa
shrb
push
icebp
loopne
push
jo
and
aad
flds
inc
sbb
cmpsb
sti
cli
and
cmp
lahf
cmp
gs
rcll
push
enter
mov
fimuls
or
dec
in
lock
fidivrs
inc
incl
mov
push
jne
out
cmpsl
andl
ret
jl
icebp
cmp
and
leave
cmp
inc
repnz
fmuls
add
fs
int3
fxch
fs
mov
push
fidivs
and
dec
das
ret
xchg
pushf
popf
jmp
and
push
in
and
aad
dec
rcrb
repnz
lcall
mov
mov
fnstenv
cmc
xor
aas
inc
int
cmpsb
pushf
mov
lock
adc
mov
mov
pop
addr16
inc
pop
mov
icebp
mov
push
leave
or
adc
inc
aam
js
scas
std
pop
insb
sahf
enter
lcall
xor
stos
push
int
sbb
test
mov
sub
jns
mov
data16
push
in
mov
cmpsb
pop
jp
jbe
jge,pn
ret
adc
popa
dec
dec
pusha
mov
adc
sbb
push
popa
lcall
inc
inc
cmc
dec
movb
inc
cli
or
pop
out
mov
mov
push
jne
jle
dec
dec
inc
lahf
nop
arpl
dec
inc
stos
mov
daa
xchg
sbb
popa
mov
lds
pop
test
movsb
repz
pop
lds
mov
or
and
les
loop
nop
dec
call
ljmp
jecxz
out
xchg
mov
scas
cmp
sub
push
inc
popf
loope
add
mov
cmp
lods
data16
in
cs
out
sbbb
or
push
sub
ds
jae
push
mov
mov
mov
pop
out
sbb
mov
and
test
lahf
int3
jb
pop
push
addr16
repnz
mov
pop
or
cltd
es
rclb
rorb
pop
xor
and
mov
push
mov
push
fidivl
sti
jl
mov
sarb
pop
aam
rol
outsl
fsts
pop
pop
int3
rcll
cmc
adc
mov
add
push
mov
mov
add
notb
in
scas
push
mov
adc
iret
mov
adc
movsb
loop
pop
cmpsb
popf
in
xchg
xchg
cld
int3
sbb
jbe
das
sarb
addb
and
testl
cmc
sti
mov
mov
out
jne
adc
out
aad
push
push
movsl
xchg
jb
push
dec
cmp
lods
gs
cltd
push
in
mov
or
inc
vpsubsb
lret
fisttpll
jecxz
pop
rorb
adc
insl
imul
mov
sub
mov
cli
sti
sbb
loop
dec
aam
xor
xchg
dec
imul
lods
out
sub
scas
ficomps
std
sbb
testb
sub
cli
fisubrs
rcrl
dec
and
push
iret
add
mov
stc
rcrb
mov
push
enter
lods
mov
in
lret
jle
sub
and
lahf
ret
pop
xchg
ja
mov
mov
out
cltd
popl
adc
mov
inc
adc
xor
or
sbb
in
mov
inc
inc
push
add
loopne
inc
ljmp
lock
outsl
pop
jnp
cmp
jbe
pop
inc
sti
cmpb
xor
jne
inc
movsb
xor
or
mov
mov
in
repnz
jmp
inc
pop
lret
jge
pop
mov
xlat
pop
jmp
add
inc
cmc
xchg
pop
push
adc
add
mov
neg
and
and
mov
dec
mov
jmp
xor
mov
rcrl
stc
push
mov
mov
mov
and
mov
xor
mov
insb
inc
pop
aad
xchg
and
nopl
push
mov
loop
xchg
jb
jmp
cmp
lcall
cmp
mov
inc
jb
adc
aam
or
leave
pop
mov
inc
scas
and
cmp
test
xchg
sbb
movsl
dec
pop
mov
jae
imulb
push
mov
loope
xchg
add
or
inc
out
gs
int3
add
jle
and
inc
mov
xchg
loope
dec
stos
xchg
repz
add
jne
aad
fadd
les
mov
daa
dec
test
jecxz
mov
xchg
push
push
arpl
xchg
pop
inc
jnp
mov
xchg
push
dec
mov
xchg
mov
lret
or
lds
stos
mov
scas
jne
jecxz
or
ja
test
popa
or
push
mov
mov
mov
pop
ror
outsl
inc
stc
add
bound
scas
scas
pop
jmp
std
ljmp
and
xchg
add
xchg
popf
push
sbb
popa
imul
test
mov
xchg
xchg
fsubrs
inc
daa
mov
push
push
gs
sahf
lret
movb
stc
loop
out
add
xor
inc
fcompl
mov
cld
rorl
ljmp
les
xchg
adc
mov
iret
sub
mov
lods
icebp
mov
adc
mov
add
pop
mov
jmp
ljmp
cli
inc
jnp
pop
cltd
xchg
adc
lahf
mov
testl
jle
enter
push
adc
js
stos
je
mov
in
add
call
push
mov
xchg
int3
pop
cltd
sbb
ror
inc
icebp
ret
mov
pop
enter
xor
rolb
and
pop
ds
jg
xor
and
repnz
je
sub
int
xor
pop
sti
lcall
or
inc
adc
scas
jo
cmp
inc
pop
pop
cmp
jp
mov
imul
xchg
mov
sbb
stos
outsb
pop
xchg
xchg
je
insl
je
loopne
out
push
mov
push
sbb
adc
pop
movsb
in
mov
imul
or
sub
sbb
cmp
mov
mov
movsb
cli
jg
hlt
dec
leave
arpl
xor
push
ja
sti
scas
cmpsb
pop
in
mov
sbb
insl
xchg
sti
in
sar
mov
mov
enter
out
mov
cmp
bound
ret
fdivl
pop
shrb
and
cmc
xorl
repnz
ljmp
xor
loope
or
xor
dec
movsb
pop
arpl
cmpb
cmpsl
xchg
insl
dec
mov
imul
push
xchg
sbb
filds
std
dec
scas
arpl
sbb
or
negb
pop
push
mov
popl
xchg
xor
mov
mulb
push
test
jl
push
sbb
ljmp
adc
pop
adc
rcll
lret
cmp
push
clc
or
cld
test
mov
sbb
dec
mov
xchg
fdivrs
dec
jp
stc
frstor
push
stc
cmp
push
add
dec
cwtl
in
repz
js
sub
fbld
xor
test
mov
pop
and
mov
add
in
pop
adc
mov
push
cli
jmp
imull
sub
lret
icebp
aam
imul
call
jmp
dec
inc
scas
idivb
adc
jge
xchg
pop
cltd
inc
sbb
andb
inc
in
cmp
mov
fstps
test
and
stos
sti
aam
mov
lahf
sarl
clc
jmp
lcall
std
rorl
sub
cmp
inc
outsl
mov
or
ret
and
fcoml
mov
dec
cmp
push
xchg
stos
call
nop
adc
fadds
cmp
filds
pushf
adc
cmp
sbb
clc
and
lea
imul
fxch
sub
mov
jnp
jmp
enter
xor
test
push
mov
sbb
mov
cli
arpl
xor
cmp
insb
dec
insl
negb
subl
lcall
jns
sub
ss
notb
sbb
out
mov
adc
ss
sbb
cwtl
jbe
cmp
push
mov
push
cli
das
inc
pop
mov
pop
cmpsl
pop
loope
clc
outsb
xchg
fsubrs
ficoml
out
out
xchg
mov
insl
js
cwtl
or
mov
sub
push
pop
orb
sub
or
bnd
inc
sub
adc
xchg
sbb
dec
fs
insb
mov
push
dec
cmp
sub
sub
stos
aad
jecxz
gs
shll
xchg
sub
pop
lods
ja
mov
fildll
xor
mov
jnp
adc
clc
mov
aad
sbb
sahf
test
mull
inc
dec
add
rcl
imul
nop
inc
fldcw
cli
dec
adcb
insb
sbb
sbb
mov
jg
jg
fstps
movsb
mov
push
mov
mov
jg
jns
lcall
xchg
mov
xchg
loope
xor
sub
shll
shlb
or
fmul
adc
lock
mov
xorb
dec
xchg
pop
mov
jp
xchg
les
daa
fisubrs
cmp
nop
movsb
xor
call
add
sub
je
pop
xor
and
jp
dec
fdivl
and
sahf
or
mov
cwtl
bound
js
sbb
adc
out
iret
in
or
nopl
cmp
test
fildl
ds
push
xchg
dec
pop
sbbl
jo
pop
mov
insb
push
daa
in
rclb
imul
pop
add
dec
ret
insb
pop
mov
in
xor
outsb
pop
out
leave
lret
das
xchg
and
pop
and
mov
popf
pushf
rol
lcall
cmp
mov
out
adc
lret
or
add
leave
or
fldl
fmull
ss
mov
aad
cwtl
fmul
sbb
lcall
in
inc
xlat
dec
pop
das
mov
xor
inc
ret
dec
lcall
mov
mov
mov
popf
notl
stc
out
lret
pop
ljmp
sbb
jmp
adc
fisubl
push
xchg
test
das
lea
xor
mov
test
xor
aas
sub
lock
push
adcl
stc
cmp
test
js
cltd
mov
lahf
push
jbe
std
dec
jp
jae
loopne
and
popf
mov
mov
ds
fldt
xor
dec
imul
pop
subl
outsl
cmpsb
ja
fidivl
outsb
imul
cmpsb
sub
loopne
cwtl
jo
loope
addl
push
faddl
and
and
or
mov
bound
push
in
test
sub
fwait
pushl
ss
mov
sbb
js
or
lcall
inc
in
xor
inc
adc
and
or
cmp
jns
int3
das
jl
mov
pop
cmp
mov
xor
aas
andl
cltd
add
xchg
lret
jne
sahf
idivb
dec
int
fbstp
scas
lret
xchg
fdivrs
sbb
xchg
sub
hlt
lret
sbb
pop
mov
and
insl
xor
fildll
mov
data16
ret
cmp
aaa
fdiv
xchg
out
mov
sbb
lock
mov
rcll
mov
pusha
test
loopne
mov
mov
push
xor
sub
fsubrl
pop
and
cld
fidivl
jae
sub
fisttpll
mull
test
lahf
ficoms
js
push
and
dec
rolb
dec
cli
stos
lret
push
stos
bound
push
push
lea
xchg
mov
sub
stc
sub
fldcw
sbb
inc
sub
jle
cmp
or
test
arpl
push
and
dec
test
idivb
scas
push
fwait
add
repnz
sub
movl
jns
mov
lods
or
call
jne
jmp
or
lea
stos
add
mov
cmp
lret
cli
push
ds
mov
cli
push
sub
and
or
xlat
xor
mov
cmp
sub
stc
add
xchg
cmp
ret
jo
sbb
and
or
mov
pop
mov
push
sbb
push
dec
fldenv
ljmp
int3
in
imul
andb
fidivl
mov
cmpsb
in
mov
in
dec
es
cmpsb
push
mov
lock
jb
loop
dec
adc
sbb
outsb
mov
outsb
cmpsl
pop
add
jb
xchg
pop
adc
mov
aad
push
pushf
cmpsb
pushf
call
mov
xlat
orl
mov
int3
in
inc
mov
rcll
jb
ret
ficoml
mov
xor
lret
ficompl
iret
xchg
sti
leave
push
int3
jmp
fstps
and
sarl
movsb
add
jle
lret
jns
in
push
lds
xorl
push
dec
leave
jae
je
insb
or
test
clc
mov
pop
fnstenv
xlat
ret
jns
filds
push
icebp
xor
loop
popf
shll
shlb
push
push
jle
in
inc
or
ss
sti
push
add
hlt
push
pop
sar
fmul
push
test
pop
mov
mov
stos
inc
insl
xor
jl
xchg
push
or
scas
pop
and
int
pop
stc
das
fsubl
scas
push
pop
stc
mov
shl
pop
fwait
mov
cmp
mov
push
xchg
bound
cwtl
push
mov
icebp
xchg
sti
rclb
inc
fwait
mov
stc
mov
fisubrl
ror
ficompl
div
pop
sub
andb
hlt
cmp
add
gs
add
data16
in
xchg
jns
pop
pushf
push
xor
push
fsubp
add
cltd
lock
cmc
or
or
das
xchg
stos
out
cmpl
sub
out
fs
lods
cmpsl
push
mov
cmp
add
loop
mov
dec
lods
es
std
repnz
outsl
insl
dec
push
aas
rorl
repnz
lods
js
dec
sub
rclb
sbb
cmp
xor
mov
andb
mov
pop
pusha
push
sub
stc
nop
ljmp
shll
xor
sub
xchg
pop
lock
xor
mov
ret
out
mov
jns
jge
dec
loop
lds
ret
xchg
pop
adc
or
dec
mov
sbb
ret
xchg
fists
addl
sub
mov
ljmp
jge
dec
in
push
ret
lcall
fidivs
push
add
mov
movsb
xlat
pop
shl
aad
mov
outsl
outsb
dec
out
pushf
jle
daa
loope
sub
mov
sti
jne
lret
jg
lret
adc
ret
jp
mov
pop
add
fnstenv
sahf
mov
pop
inc
mov
xchg
popa
mov
neg
adc
cltd
in
mov
loope
pusha
dec
add
push
mov
pop
leave
je
jbe
stc
sbb
mov
sub
push
dec
int
cmpsb
xor
das
aaa
lea
pop
sbb
xchg
aam
mov
or
push
scas
lcall
sbb
sub
xorl
adc
pusha
pop
in
enter
incl
pop
out
cltd
and
and
call
fistl
lret
std
push
jle
pop
popa
xchg
in
xchg
popf
out
into
and
add
pop
decl
cmpsb
mov
loope
nop
mov
xor
dec
add
cmc
sti
int
xor
add
imulb
test
not
adc
imul
fsubrs
xor
push
cli
call
lods
stos
xor
inc
or
adc
pusha
mov
or
filds
mov
cmp
xchg
stc
cmp
cwtl
je
out
cltd
sbb
inc
nop
jae
and
sbb
cmp
cmp
lret
shlb
stc
and
push
scas
push
sub
out
mov
add
jg
dec
repnz
hlt
or
cmp
jmp
jne
movsb
scas
add
daa
pop
and
sub
pop
xchg
sbb
in
and
jl
jg
adc
cld
inc
jmp
mov
push
enter
xchg
jle
or
test
mov
in
lods
out
movsl
mov
addr16
push
ret
js
hlt
or
lret
xor
movsb
aam
mov
leave
cmp
xchg
in
je
mov
shl
lods
jnp
push
clc
loop
popf
inc
or
xchg
dec
roll
mov
test
popf
insl
imul
imul
je
cmp
jmp
push
in
dec
daa
gs
or
add
cli
xlat
dec
sub
push
sahf
cmp
pop
fbld
pop
and
dec
repnz
scas
or
mov
pushf
pop
inc
sahf
sub
sbbl
addr16
pop
push
sub
pop
cmp
cmp
xlat
inc
jp
cwtl
xchg
xlat
out
jle
mov
imul
xor
mov
jg,pt
test
push
add
push
push
push
pop
xor
inc
and
sbb
and
adc
test
test
mov
data16
add
idiv
jg
lcall
in
in
sbbb
insb
pop
xchg
push
adc
push
xor
jo
jp
and
fsubrs
enter
gs
mov
xchg
dec
inc
cli
pop
jp
mov
push
sarl
mov
sbb
ret
pushf
push
pop
pop
lea
or
mov
pop
pop
mov
test
je
aas
out
jle
stos
jne
lods
addl
push
xchg
lea
push
mov
mov
dec
cmp
lods
decl
adc
mov
and
or
mov
cmp
pop
inc
ja
xor
mov
and
cld
mov
ret
or
push
popa
je
in
sbb
sti
jmp
mov
jns
insb
sbb
faddl
les
lods
sub
clc
or
mov
xorb
pop
incb
mov
fstp
and
int
arpl
cmp
cmpsl
aaa
loopne
jg
div
mov
out
and
fistpl
jg
mov
mov
push
mov
gs
enter
mov
in
sbb
ljmp
and
dec
xor
lods
dec
xor
sub
rcl
push
testb
sbb
or
decb
gs
arpl
cmp
sub
or
lods
xor
adc
int
or
cmp
imul
stos
mov
dec
negb
stos
ds
scas
andb
insb
jmp
mov
dec
lret
add
ret
outsb
mov
cli
sub
adcl
outsl
ds
xchg
nop
pop
jns
loopne
sahf
jae
test
add
jge
cli
inc
mov
cmpsl
mov
pop
cmp
gs
mov
add
lcall
xchg
fwait
daa
and
jne
xchg
cmp
fisttps
bound
in
jns
movsb
inc
cmp
enter
xchg
jmp
daa
dec
dec
mov
sbb
pop
lret
mov
or
repz
clc
mov
xor
arpl
outsl
push
iret
lahf
mov
loop
and
test
and
adc
sbb
ja
cmp
mov
movsb
movups
adc
pop
stos
pop
pop
loop
mov
lahf
ret
sbb
daa
add
or
scas
popa
jp
mov
cmp
or
scas
mov
push
mov
push
sbb
lea
push
les
test
or
sbb
cli
addr16
fnsave
lret
loopne
clc
lds
add
cmp
int3
push
cmp
push
rolb
mov
test
xlat
sub
jbe
lock
and
fbld
jns
pop
orl
pop
fucom
mov
in
popf
cmc
or
out
pop
flds
push
mov
movsl
es
push
xchg
popf
mov
inc
xor
mov
fbstp
xchg
sub
test
popl
test
cmp
sbb
sub
pop
xor
sbb
jge
pop
jne
rolb
les
test
bound
rorl
cmp
aam
mov
xchg
aas
mov
in
aad
frstor
imul
iret
sti
cmp
dec
fstpt
cmpsb
dec
xchg
call
add
fwait
out
inc
stos
and
xchg
or
inc
lret
and
inc
push
lock
dec
xchg
push
imul
xchg
inc
clc
mov
sahf
adcb
sti
mov
cltd
clc
arpl
cli
xchg
fsubs
dec
outsl
dec
mov
mov
push
fwait
inc
je
pop
scas
iret
xchg
test
jnp
jl
push
shl
mov
loopne
lods
xchg
inc
popa
addb
aad
wrmsr
fdivrp
xchg
hlt
jb
orb
dec
loope
outsl
adc
jl
popa
or
lods
xchg
pop
aas
and
or
test
pop
xor
jno
ljmp
jo
xor
mov
or
repz
stos
mov
inc
mov
stos
inc
imul
fnsave
in
je
push
pop
popf
test
sub
push
add
int
or
add
das
dec
and
imul
jl
dec
adc
test
mov
mov
inc
imul
cli
in
cld
arpl
and
sbb
mov
hlt
add
aaa
daa
sub
or
cmp
pop
jnp
insl
inc
icebp
in
cmpsl
jno
aam
dec
sbbl
mov
out
bound
stos
inc
xor
mov
pop
in
xchg
movl
in
mov
ljmp
adc
ss
cmp
pushf
xlat
or
push
stos
xchg
jno
push
test
xchg
jbe
mov
mov
hlt
mov
call
movsb
jne
sbb
dec
dec
sbb
ss
xlat
sti
inc
push
cmc
nopl
push
push
scas
push
ror
or
mov
sarl
sbb
into
pop
and
and
mov
test
push
popa
sbb
popf
or
sub
cmp
mov
xor
aad
mov
cli
lea
nop
imul
loopne
inc
idivl
sub
not
outsb
inc
push
push
push
test
xchg
lock
pop
mov
loope
push
bnd
mov
std
sbb
jg
loopne
mov
jmp
test
mov
in
mov
scas
jge
sahf
mov
ljmp
jno
mov
cltd
pop
movsl
or
fisubs
push
subl
lcall
xchg
xchg
ret
mov
jl,pn
adc
leave
enter
ss
lods
dec
loopne
jmp
mov
xchg
je
movsb
loope
dec
insb
and
jp
add
xchg
out
xor
ss
cmp
xor
pop
and
movsb
push
cmp
xor
movsl
pop
push
and
lods
add
fcoms
aaa
pop
push
aaa
fistpl
ret
fwait
push
xor
cwtl
sub
cmpsl
js
test
es
setg
orb
cmpsl
bound
ja
frstor
mov
jo
xchg
and
cwtl
xchg
sub
and
cmp
fmulp
sbb
jae
dec
scas
inc
push
in
cmp
dec
or
add
movsl
stos
pop
and
mov
imul
dec
in
pop
jp
xlat
or
jbe
inc
inc
pop
stc
push
or
lods
cmp
fistpl
mov
rcll
jl
out
adc
and
mov
cmpsl
sti
inc
push
add
mov
mov
jns
mov
add
mov
test
ds
scas
fdivr
and
xor
xor
outsb
and
pop
rcrl
les
dec
xchg
pop
ret
imul
sarb
test
and
out
mov
cmpsl
dec
daa
sahf
jmp
add
mov
jle
xorb
outsb
adc
clc
into
fstps
xchg
lcall
xor
daa
xchg
push
xlat
push
dec
fimull
xor
lcall
mov
jge
cld
aad
daa
cmc
push
js
inc
test
xchg
xchg
ret
xor
pop
jecxz
call
outsl
hlt
insb
enter
mov
mov
cwtl
cmpsb
pop
je
fisubl
lea
mov
ja
mov
scas
leave
cmp
mov
push
call
out
lds
aaa
iret
int3
xor
rcrb
in
movsb
divl
mov
xchg
insl
dec
push
repnz
inc
adc
xchg
repnz
outsb
push
shlb
addb
cmpsb
lret
jl
fisubs
and
sbb
mov
ss
sbb
mov
jne
roll
popa
fisttpl
stos
movsl
mov
popf
mov
ja
cs
mov
mov
sub
fucomi
add
lret
push
sbb
sbb
cli
roll
loop
mov
adc
adc
aaa
xor
fldenv
xor
stos
pop
and
xor
cmpsl
cwtl
stos
push
add
mov
fs
lock
ficompl
test
inc
jns
sub
cltd
cmc
xchg
pop
or
andb
push
adc
cmp
popf
and
outsl
loopne
pusha
ret
cmpsl
jo,pn
sub
inc
aaa
jg
enter
sub
sub
mov
outsb
call
inc
movsb
mov
outsl
fmulp
adc
not
inc
daa
inc
sahf
sbb
xchg
cmp
jae
sti
xchg
mov
add
jg
inc
and
popf
sbb
in
xchg
inc
push
xchg
lcall
cmpl
push
lods
sbb
stc
sti
cs
mov
fs
int
jae
xchg
int
sub
pop
dec
imul
pop
sbb
test
lahf
cmp
mov
jo
or
or
ret
fiadds
push
aam
lcall
add
roll
xchg
lret
xorps
mov
mov
pop
popa
frstor
pop
mov
cld
in
rorl
rep
jl
insl
jns
daa
aad
dec
push
inc
xor
jl
sbb
jnp
test
inc
outsb
sbb
inc
adc
mov
mov
ret
inc
xlat
cmp
add
ret
out
push
test
fdiv
or
xor
rorb
mov
push
mov
lods
cmp
leave
in
scas
xchg
adc
pop
dec
test
fistpl
lock
xchg
shr
mov
jp
fidivs
xlat
inc
adc
mov
push
test
pop
xchg
test
aad
in
lahf
push
pushf
jo
aaa
or
mov
inc
ficomps
int
rcrb
cmpsb
sub
fwait
mov
pop
mov
int3
mov
or
insb
mov
xor
push
sub
out
xor
pop
pop
lret
and
mov
jae
xor
aaa
xchg
xor
ret
jbe
push
add
cmc
das
imul
mov
mov
pop
lods
into
lret
sti
and
push
dec
fdivl
sub
xorl
rcrb
mov
fadds
mov
dec
pop
add
shr
cmpsl
pop
push
je
rolb
sti
sbb
aad
sbb
imul
xchg
jne
xor
dec
inc
test
je
cltd
sub
orb
mov
neg
aas
add
add
push
ficomps
add
jge
cmpsl
dec
adc
ja
push
clc
push
and
push
fiadds
xor
jb
xor
pop
fxch
insb
jle
fisttpl
popf
rcrl
cs
jns
sahf
pop
sbb
fsub
add
sub
adc
inc
loop
inc
mov
push
mov
mov
cmp
sub
inc
jmp
adc
ljmp
out
jmp
xor
mov
or
arpl
ss
rcrl
mov
cmpb
popa
cli
adc
xor
cmp
push
scas
mov
insl
outsb
inc
add
repnz
aaa
enter
cmpsb
ljmp
jbe
loope
ror
pop
lahf
dec
or
mov
mov
mov
repnz
outsl
insb
pop
xor
imul
iret
push
jne
adc
je
push
lea
push
and
in
adc
dec
aad
repz
ljmp
psubd
aaa
inc
pop
bound
xor
js
pop
sub
addr16
mov
outsl
rolb
cmp
mov
mov
push
lock
sbb
sub
mov
jle
pusha
mov
adc
jl
and
jp
fidivrl
add
out
insl
addr16
jne
ret
test
push
imul
in
mov
sahf
iret
adc
cmp
cmp
sbb
aam
mov
push
sub
jns
mov
sbb
call
pop
loopne
sbb
xchg
lods
test
popf
enter
test
aas
dec
mov
pusha
sbb
pop
mov
lods
jno
andb
pop
jne
loop
cli
mov
xor
imul
or
mov
out
lret
lahf
daa
in
mov
or
pop
movsb
inc
iret
add
and
sbb
popa
popa
in
lock
ret
adc
inc
xchg
mov
pushw
mov
inc
addr16
mov
ljmp
nopl
movl
pop
fmuls
add
hlt
fmuls
add
scas
enter
jno
insl
mov
push
ja
push
sbb
dec
addl
je
int3
or
sbb
push
lods
cmpsl
push
jp
loop
insb
or
adc
mov
sub
mov
sub
or
fisubrl
js
pop
and
xchg
insl
sarb
pop
cli
jge
inc
std
es
pop
outsl
pop
mov
insl
mov
enter
aad
popf
iret
mull
dec
and
pop
fidivl
jo
pop
add
out
aad
pop
lret
xchg
cmp
out
push
stc
sbb
xchg
fidivl
mov
sub
adc
iret
ds
cld
pop
inc
dec
jge
sbb
jmp
mov
push
cmp
in
xchg
jo
xor
pop
lcall
xchg
mov
fildll
pop
std
data16
outsl
lock
jnp
cld
mov
lahf
imul
shlb
repnz
not
fdiv
jo
pop
xor
pop
pop
and
push
push
sti
push
lods
and
mov
xchg
das
stos
lret
enter
mov
adc
test
iret
rclb
mov
push
jno
cmc
das
or
lods
sbb
ror
inc
sub
popf
rcrl
pop
inc
insb
dec
insl
lret
jnp
sbb
sbb
outsb
movsb
add
sub
dec
lock
add
testb
mov
push
mov
or
adc
cli
pop
mov
jnp
mov
jecxz
jle
call
mov
das
or
mov
movsl
ret
fistpll
cmp
mov
jge
popl
aas
sub
rcr
in
pop
roll
icebp
popf
add
mov
ljmp
push
and
jae
mov
and
stos
jno
sbb
mov
lahf
mov
ret
addl
mov
mov
bound
sbbl
fcoms
mov
mov
pop
mov
ljmp
push
xchg
mov
test
mov
cmpsb
sub
enter
mov
push
fcmovbe
andl
scas
mov
xor
lret
outsb
xchg
in
scas
jge
mov
out
divb
adc
imul
jmp
jp
nop
cmpsb
test
jns
into
bound
inc
fcoms
xor
jnp
xchg
jmp
cld
add
in
add
push
or
add
aas
sbbw
or
test
pop
loop
sti
xor
mov
mov
add
test
xchg
adc
cli
jle
or
les
sub
imul
pop
and
rcrl
jge
aas
in
cmpl
dec
ret
add
mov
lahf
lcall
mov
cld
add
fwait
fwait
xor
insl
xor
fdivrs
inc
hlt
jmp
jg
mov
test
mov
rcr
rcr
push
xchg
push
test
popa
repz
rol
popf
pop
adc
push
loope
subl
shlb
movsl
xchg
and
xor
mov
mov
mov
adc
lds
movsb
or
sub
int
loope
cmpsb
cmp
pop
adc
adc
adc
mov
cmc
add
mov
jp
add
mov
pop
rolb
jb
ret
xchg
mov
inc
sbb
mov
xor
inc
cltd
push
sub
mov
std
pop
cmpsl
push
mov
add
sbb
lds
adc
popf
lock
push
sub
lret
push
inc
shl
aad
outsl
or
jecxz
and
pop
std
fists
jo
jne
xchg
test
jbe
mov
addr16
jge
pop
lds
lods
jae
outsl
je
leave
das
jmp
nop
out
pop
and
out
inc
sbb
je
cmp
adc
fwait
mov
mov
push
or
mov
rorb
andb
out
dec
inc
fsubrl
testb
mov
iret
or
sahf
popf
cli
imul
cmc
in
and
xor
adc
test
cld
mov
add
and
jge
fs
mov
mov
sbb
mov
and
mov
xor
stos
cwtl
imul
pusha
pop
mov
inc
xlat
inc
movsl
xchg
push
in
push
xchg
sub
cs
add
push
lret
stos
test
out
mov
pushf
inc
xchg
cmp
sbbl
sub
xchg
cmp
push
ficomps
inc
or
xor
das
adc
jg
mov
pop
dec
mov
into
popa
setns
mov
clc
stos
sub
push
mov
lahf
pop
inc
pop
fadds
and
xor
lea
pop
lret
loopne
jo
dec
pop
mov
movsl
js
mov
adc
dec
hlt
pop
lea
ja
out
push
fwait
ret
and
aam
cltd
into
adc
sbb
stc
inc
inc
ret
adc
sub
mov
clc
into
push
scas
nop
xchg
lret
shll
aas
adc
stos
aas
icebp
lret
jl
push
fisttpl
ret
js,pn
jle
rcl
sbb
inc
xchg
loop
mov
jns
mov
outsl
push
stos
lcall
in
push
or
arpl
test
std
leave
adc
mov
stos
test
out
adc
fmuls
repz
jo
pop
and
or
mov
icebp
sahf
ficoml
loopne
pop
repz
mov
icebp
call
lods
loope
adc
xor
cwtl
fcomps
lahf
mov
xchg
and
leave
or
psubusb
mov
imul
in
addr16
pop
arpl
cmp
and
lret
push
jmp
and
sarb
and
dec
pop
add
or
in
sbbl
cmp
sub
inc
xchg
push
or
pop
or
pop
in
ficompl
sub
push
int3
rcrb
push
mov
iret
push
mulb
mov
lahf
jmp
sub
or
test
jnp
hlt
pop
mov
test
xor
data16
imul
fistpl
leave
sub
jnp
dec
cmc
stos
lods
push
leave
lahf
mov
jnp
ljmp
sarl
test
pop
cli
mov
jg
js
shll
push
scas
lods
enter
and
xchg
or
xor
fmuls
imul
or
mov
mov
in
in
adc
fstpt
into
add
jns
repnz
loopne
jp
pop
cs
jp
jg
test
dec
cltd
or
mov
add
or
dec
adc
and
lea
out
outsl
inc
ret
rorb
push
repnz
pop
jmp
das
xor
inc
dec
add
inc
loopne
add
mov
test
mov
add
jecxz
cmpsl
test
mov
test
je
cmp
or
mov
gs
pop
sbb
cmp
or
pop
cmp
xchg
int
idivb
sahf
test
outsl
xor
aaa
inc
and
mov
sbb
int
loop
pop
or
inc
mov
xchg
outsl
andb
out
cmp
push
cs
inc
mov
add
pop
sub
mov
out
sub
push
in
movsb
cmp
into
adc
divl
repnz
and
or
ds
xchg
int
repnz
push
pop
mov
shl
imull
cmpl
pop
es
inc
inc
push
idivb
fidivl
cmp
scas
and
clc
xchg
and
push
cmpsl
mov
fwait
stc
xor
jecxz
insb
jl
nop
cmc
mov
fidivs
pop
out
add
sub
jns
jg
add
pop
movsl
jns
cmpsb
ficomps
xchg
int
orb
inc
iret
pop
lock
fcomps
xchg
movsb
in
idivb
fdivs
fbld
stc
mov
ja
pushf
mov
jae
cmp
mov
int
hlt
out
jle
cwtl
push
xchg
rep
xchg
jp
xor
mov
mov
pusha
add
lcall
push
dec
pop
and
push
ss
push
add
idiv
mov
mov
dec
imul
pop
test
mov
cmp
aam
push
push
outsl
or
sub
fsts
lods
in
inc
out
stos
dec
les
mov
push
ret
stos
shr
loopne
mov
aad
jns
mov
insb
ljmp
rcrb
mov
icebp
ja
fdivl
rep
and
gs
stc
dec
fidivrs
sub
lea
xchg
pop
mov
mov
mov
xor
pop
into
mov
mov
es
mov
xor
inc
xchg
cmpl
and
push
sub
sub
jl
inc
test
push
sbb
push
bound
push
add
scas
xor
mov
jmp
xchg
inc
out
mov
pop
cld
dec
push
roll
or
adc
aaa
push
insl
xchg
xor
popf
inc
and
jmp
loop
sti
sub
movsb
adc
cmc
add
mov
std
movsb
push
xor
jae
or
adc
or
dec
mov
or
repz
sbb
fmuls
pop
jns
adc
xor
mov
jp
sub
cmp
sbb
add
mov
xchg
fadd
mov
ja
imul
repnz
or
or
sti
mov
jno
sbb
imul
ret
sub
xor
js
cmp
xchg
sahf
mov
dec
rclb
repz
dec
inc
cmp
popl
xacquire
pop
xchg
xchg
xorb
add
das
mov
inc
xor
pusha
push
sbb
paddq
mov
add
shlb
mov
stos
js
dec
jns
mov
push
pop
adc
ss
inc
sbb
add
stc
pop
push
nop
repz
pushf
adc
ficompl
sub
lret
xchg
pop
push
xor
or
test
dec
lcall
fists
adc
orb
inc
or
hlt
lods
loope
movd
mov
cmp
add
sbb
fldt
mov
cmp
repz
cld
push
call
xchg
scas
popf
xchg
lock
adc
lea
mulb
pop
call
mov
in
int3
sub
sbb
ret
xchg
out
or
pop
and
ret
std
es
test
xlat
into
cwtl
js
mov
inc
lock
sub
or
sahf
mov
in
movsb
shll
pop
imul
cltd
icebp
loopne
adc
cwtl
in
pop
pop
inc
fisttpl
dec
fcomps
shr
xchg
lcall
gs
jecxz
cmpsb
arpl
aas
arpl
ficompl
adc
sub
jle
lock
aas
or
nop
dec
dec
jge
xchg
xor
push
pop
sbb
dec
pop
adc
lahf
push
inc
fists
bswap
pop
mov
jle
ret
fnsave
lds
or
dec
dec
xchg
mov
xchg
lahf
shll
add
stos
adc
clc
loopne
shl
test
fsubr
mov
daa
pop
fs
mov
bound
mov
jg
cmp
jmp
adc
jo
jnp
out
pop
pop
sub
pop
xorl
pop
dec
xchg
out
lahf
xchg
mov
mov
lret
fmuls
add
imul
sbb
aas
cmp
mov
mov
cmpsb
pop
jg
pop
sub
add
inc
movsl
orl
icebp
sbb
fsub
div
sub
mov
shl
xchg
scas
mov
ljmp
aaa
orl
xchg
pop
push
jmp
movsb
dec
lcall
xchg
mov
std
je
and
pop
icebp
jb
mov
mov
mov
lret
mov
dec
cli
dec
repz
sbb
lods
test
in
fnstsw
push
dec
adc
mov
sub
fisttpll
cld
xor
loope
inc
test
lret
lds
mov
cmp
xor
dec
aam
sarl
add
xchg
in
mov
and
xchg
sbb
arpl
pop
push
test
pusha
pop
test
mov
mov
pop
lods
xor
fdiv
inc
cmp
mov
and
and
jecxz
xchg
mov
decb
cli
test
movsl
sub
xor
rolb
jl
test
mov
imul
mov
pop
imul
ret
jge
add
cmp
jo
fistl
mov
lea
sbb
cmpb
xor
sbb
push
xchg
movsl
repz
xchg
iret
push
mov
mov
jmp
movsl
add
jecxz
push
mov
mov
test
sarl
outsl
and
xchg
xor
dec
lret
mov
jae
and
and
fnstenv
ja
mov
fldcw
mov
sbb
add
jns
adc
cmp
mov
xor
dec
push
sub
mov
ret
mov
std
outsb
cli
push
mov
dec
or
push
sbb
sub
mov
pushf
push
andl
push
je
packsswb
mov
cmp
in
mov
mov
std
mov
cli
jae
mov
and
jns
or
add
jno
pop
faddp
cmc
in
adc
lcall
aas
cmp
mov
xchg
dec
aaa
push
loopne
jnp
cwtl
cmp
arpl
sbb
mov
mov
sbb
std
jecxz
fs
mov
and
sbb
mov
and
int
xchg
fisubl
mov
dec
or
jecxz
mov
mov
inc
cmc
or
in
dec
nop
cmp
jb
xor
or
leave
lret
xor
test
aas
inc
js
int3
das
mov
sbb
jnp
add
cmc
add
mov
xchg
imul
mov
add
pop
nop
jb
out
sub
xor
xchg
loope
lret
cltd
jmp
sahf
and
sbb
pop
push
int
sahf
dec
mov
fwait
cwtl
int3
jecxz
idivl
adc
out
and
adc
lods
or
das
fcoms
jns
lcall
and
ret
out
ljmp
adc
mov
out
lock
or
sar
xchg
int
insl
xchg
fs
inc
data16
shrl
fxch
incl
stos
or
sahf
cltd
mov
push
pop
inc
mov
fimull
inc
cwtl
aaa
sbb
mov
dec
cmpsl
xchg
mov
pop
adc
lea
in
dec
jb
ds
movsl
mov
pop
sti
cmp
loope
jb
adc
into
int3
push
gs
mov
dec
loope
or
or
push
insb
aam
add
jp
out
xchg
cmp
mov
sub
out
sar
shlb
jae
sbb
out
cs
push
jle
lret
lods
std
sub
add
dec
mov
adc
adc
mov
xor
lret
jo
stc
hlt
sub
into
add
push
movsl
fs
fucomip
int
jmp
pop
pop
mov
sarl
in
adc
dec
xchg
and
push
mov
lods
nop
dec
lret
lahf
and
int3
jge
insb
pop
repnz
mov
call
cmpsb
imul
pcmpgtw
js
in
outsb
cmc
and
es
xor
push
fnstsw
jae
xor
repz
xorb
push
push
push
pop
ds
nop
pop
sahf
ja
sbb
setg
push
mov
adc
mov
adc
inc
inc
sub
mov
mov
xor
jmp
movsl
inc
xchg
mov
xchg
adc
cmp
cltd
pop
and
or
les
pop
xchg
xchg
out
or
pop
enter
xchg
daa
add
pushf
gs
nop
outsb
movnti
cwtl
jp
dec
jmp
inc
loope
rcl
test
arpl
dec
mov
insb
test
js
iret
shll
lret
leave
movsl
in
and
loope
fistps
into
and
dec
dec
frstor
mov
sbb
xor
imul
in
jecxz
jmp
xchg
sbb
je
mov
movsl
pop
xor
add
xchg
data16
int3
mov
sbb
xlat
mov
add
fsubr
sbb
scas
jmp
fsubrl
mov
push
sub
jg
add
adc
adc
in
adcb
pinsrw
mov
js
sub
pop
out
jne
pop
cwtl
sbb
push
mov
xor
pop
lds
enter
xorl
sub
enter
es
sahf
stos
lcall
enter
mov
pop
dec
dec
std
mov
inc
scas
cld
lock
iret
mov
cs
push
xchg
sti
cmp
test
push
lret
or
jno
fstl
and
cmp
mov
mov
addr16
mov
daa
jecxz
mov
cmp
xlat
push
mov
pop
sbb
addr16
dec
dec
int
inc
loop
cmp
pop
div
add
repnz
loope
lock
push
dec
cmpsb
out
clc
ds
mov
pop
mov
push
gs
fwait
dec
pop
in
pop
fs
dec
std
push
cld
int3
mov
xchg
sahf
lcall
cltd
xor
lret
mov
push
mov
sub
popa
stos
mov
cld
into
addb
push
add
mov
mov
decb
jle
js
mov
push
popf
test
sbbl
out
sarb
xor
rcl
push
adc
not
bound
push
jmp
movsb
add
and
jns
push
scas
lcall
add
icebp
sbb
jo
sbb
push
jge
in
rolb
les
shll
fidivrs
xchg
mov
add
fidivrs
ret
repz
insb
loopne
jmp
xchg
cs
ss
add
rorl
aas
out
mov
test
gs
mov
mov
scas
cmc
xor
js
dec
add
mov
filds
fisubrs
mov
repnz
pop
outsb
aad
jo
push
inc
adc
cmc
in
lods
ss
dec
mov
push
and
or
stos
and
aam
xor
push
sbb
adc
jne
gs
mov
jl
push
dec
dec
insl
and
out
pop
shlb
cmp
testb
pmaxsw
jl
push
mov
xchg
pop
cmp
loope
fdivs
mov
incl
cli
inc
add
and
jecxz
xchg
pop
dec
pop
jecxz
bndldx
mov
jne
cmp
mov
pusha
jo
cmc
xchg
jl
daa
aad
jmp
idivl
xor
push
fsubp
scas
sbb
sti
sti
pop
pushf
cmp
mov
fucomp
add
int
pop
in
mov
loope
movsb
dec
movsl
iret
or
sti
or
pop
pop
ret
data16
mov
ret
sbb
xor
and
mov
into
ds
cmp
js
dec
out
iret
mov
and
loope
jno
int3
shrl
mov
xor
das
cmp
dec
mov
loop
push
lret
les
mov
sub
mov
or
cmpsb
lcall
cltd
test
aad
jb
cmpsb
cmpsl
ror
dec
adcl
and
and
push
repz
or
mov
cmpsb
inc
xchg
sbb
sub
jecxz
mov
leave
test
mov
push
js
lock
and
and
add
iret
fidivrs
push
enter
push
inc
mov
or
shrb
out
fucomi
jbe
sbb
xchg
add
push
sub
push
incb
inc
inc
add
and
and
sbb
mov
mov
sahf
nop
movsl
ljmp
lock
or
or
cld
imull
xor
cs
jecxz
popl
xlat
aaa
xchg
mov
mov
inc
das
or
inc
jecxz
aaa
fs
dec
adc
pop
stos
and
pop
sbb
sbb
xchg
or
xor
in
dec
popa
cmp
loop
and
jmp
cmp
inc
jnp
add
adc
arpl
adc
or
sub
pop
dec
jne
xchg
pop
imul
or
mov
inc
inc
das
fistpl
fnstenv
gs
stos
xor
and
mov
lods
call
ss
inc
lea
call
and
popl
inc
cmp
push
sarl
adc
addr16
inc
push
pop
dec
mov
fldl
repnz
aaa
jecxz
mov
fcmovnbe
sub
cltd
out
daa
pop
dec
jl
sbb
sub
push
mov
insl
and
sub
outsl
mov
movsb
cwtl
aas
loopne
ror
stc
adc
int
and
loopne
cmp
lret
dec
aam
scas
mov
push
movntps
arpl
xor
gs
inc
dec
fwait
in
fidivrs
and
leave
cmp
loope
pop
pop
mov
leave
pop
std
dec
ljmp
push
sub
inc
and
and
sbb
test
adc
movsb
adc
shlb
xchg
fwait
ret
xchg
fcomp
and
pop
pop
push
dec
xchg
arpl
cwtl
mov
loope
out
shl
and
xchg
jg
sub
test
mov
mov
push
repz
mov
cwtl
pop
fcmovnbe
jno
pop
mov
jnp
loop
outsl
les
pop
jp
jns
xchg
xchg
adc
std
dec
dec
int3
adcl
pop
sbb
data16
test
push
push
cmp
notb
scas
aas
cmc
push
add
jmp
sbb
xchg
mov
aas
xchg
mov
mov
movsb
add
pop
in
das
xor
mov
add
xchg
xor
inc
adc
pusha
and
inc
cmc
push
movl
adc
lock
adc
and
stos
dec
fwait
and
inc
xor
pushf
in
lods
push
xchg
push
inc
jbe
call
adc
inc
mov
pop
jno
dec
xor
sti
sbb
inc
scas
int
and
int3
xchg
pop
mov
int3
popf
loop
ret
aam
imul
popf
and
mov
lea
cltd
sub
jae
and
cmp
adc
outsb
lds
lret
and
mov
xchg
or
mov
push
scas
and
movsb
out
test
inc
hlt
fiadds
adcb
jns
pusha
and
hlt
pop
sub
jge
inc
scas
ret
stos
jecxz
mov
icebp
mov
adc
mulps
sbb
xor
stos
mov
fs
adcl
dec
jmp
push
mov
xchg
mov
lods
xchg
stos
xor
loope
jge
cmp
je
rcl
scas
lahf
jp
dec
mov
xchg
in
daa
dec
pop
call
cmp
xchg
push
loopne
inc
sub
xlat
aaa
ss
ja
sbb
fmuls
leave
loope
adc
dec
gs
xchg
add
addr16
mov
dec
into
fnsave
push
sbb
insl
dec
jmp
repz
mov
xchg
push
nop
and
test
mov
lds
pop
movsl
pop
pop
scas
pop
aaa
inc
out
jne
in
lea
int
inc
dec
fcoms
int
inc
pop
xor
inc
mov
fnstsw
pop
mov
pop
jle
sahf
jg
enter
lret
negl
inc
leave
movsl
enter
ja
scas
jp
imul
aas
pop
lret
pop
jo
jo
or
les
fiaddl
inc
and
and
xchg
or
enter
adc
cmp
adc
push
scas
nop
nop
ss
jbe
popa
cmp
scas
cltd
or
ret
repnz
jbe
mov
mov
push
mov
dec
sub
adc
jnp
sub
imul
mov
xor
inc
push
arpl
sub
pop
pop
or
rcrb
pop
dec
jo
loopne
aam
pusha
sbb
or
mov
pop
imul
mov
ret
lret
pop
outsb
repnz
mov
pop
scas
out
add
sub
cmpsl
fwait
fs
outsb
mov
popa
lcall
mov
inc
mov
shlb
aaa
cmpsl
mov
pop
mov
aad
pusha
iret
mov
ljmp
jecxz
mov
addr16
jne
mov
inc
icebp
pusha
inc
repz
stos
xchg
jle
in
jge
decb
nop
cmpb
sti
imul
inc
out
lock
sub
mov
mov
jbe
adc
shlb
sbbb
vmovntps
add
and
jecxz
into
test
int3
jae
scas
mov
or
xor
inc
xchg
push
xor
push
add
daa
pop
jne
jb
mov
shlb
cmpsb
xchg
mov
int
add
outsb
test
push
insb
xchg
or
movsl
rol
add
std
sub
sub
and
xchg
xchg
test
mov
mov
push
push
lock
stos
push
mov
ljmp
add
or
mov
cmp
push
mov
call
cmp
loop
ret
xlat
mov
inc
sti
sbb
adc
insb
add
jmp
dec
fwait
negb
in
cld
jmp
cmp
inc
mov
cmp
adc
xor
cwtl
cmp
ret
lods
adc
xchg
leave
mov
jno
add
xchg
xor
loopne
jb
pusha
lcall
pop
rcrl
stc
mov
flds
and
mov
shl
sub
ds
push
paddsb
imul
adc
or
inc
rcrb
push
jp
call
sub
sbb
and
popf
and
ljmp
or
test
sbb
sub
dec
mov
aam
sub
xchg
or
mov
sbb
push
jmp
cmp
inc
sbb
iret
popa
push
int
jns
jne
ja
out
xor
xor
xor
sbbb
rcrl
pop
mov
rcrb
stos
fwait
mov
data16
lahf
out
mov
js
push
ret
int3
aaa
lcall
lret
sbb
ja
dec
push
add
and
aas
dec
cltd
xor
jp
mov
scas
xchg
mov
add
jb
enter
outsl
xchg
int
mov
sbb
mov
lods
iret
pushf
push
jo
dec
lret
jne
jp
fiaddl
arpl
imul
fldenv
xchg
inc
xchg
lock
insl
push
fistpll
mov
scas
inc
jb
sarb
cmpsb
mov
xor
rcrl
rorb
scas
inc
dec
das
popa
dec
or
cltd
or
js
mov
or
push
cwtl
sub
nop
push
mov
out
loop
cld
js
jno
aas
inc
dec
cmp
and
jmp
sahf
fnstsw
xchg
jbe
in
lods
mov
daa
inc
lods
fdiv
call
fldt
mov
pop
sahf
lcall
pop
aad
mov
pop
mov
aaa
pop
loopne
aad
mov
jae
popa
leave
pop
xchg
stos
push
xchg
cmp
add
mov
subl
in
clc
mov
xor
sub
out
out
in
push
or
push
ja
pop
jbe
xchg
jo
and
fsub
mov
or
or
dec
pushf
mov
sbb
cmp
mov
dec
xchg
test
mov
jle
loope
add
pop
leave
mov
cld
sub
int3
and
xor
aad
test
ds
fnstsw
test
adc
les
cmc
pop
test
mov
inc
stos
xor
popf
icebp
call
imul
scas
stc
dec
sbb
and
push
movl
jbe
jbe
je
jnp
fnstcw
outsl
push
movsl
push
jle
mov
inc
rclb
push
sub
push
jmp
cltd
fcoms
jge
fnstsw
sarb
mov
pop
push
inc
out
out
mov
sbb
rorl
jl
test
push
and
int3
xor
mov
inc
sbb
xchg
loop
mov
push
jo
bnd
shll
stc
stos
add
jae
and
testb
stos
orb
in
adcl
cmp
lret
mov
mov
xchg
lret
out
divl
and
adc
cmpsl
xor
lods
push
and
xor
adc
jnp
inc
push
outsl
out
pop
test
nop
cmc
adc
dec
ret
sub
ja
adcl
repnz
hlt
cmp
xor
xchg
rorb
sub
mov
pop
outsb
mov
and
xor
mov
ret
lahf
enter
inc
pop
dec
xor
or
pop
jno
pop
inc
out
ja
push
jbe
jns
insb
mov
std
mov
sub
cwtl
and
lea
jnp
lgs
xor
adc
mov
lret
roll
cmp
pusha
and
pushf
or
and
mov
pop
test
push
dec
pop
sub
mov
imul
pop
int
loop
rcll
imul
fisubl
lea
push
pop
sbb
sub
test
mov
sub
into
lods
and
inc
mov
pushf
and
push
xor
mov
test
mov
push
adc
inc
cmpsl
add
outsl
leave
enter
xchg
rolb
jmp
jg
lods
std
js
xchg
pop
mov
lods
cmp
lods
mov
sbb
out
lahf
icebp
mov
sbb
and
inc
inc
aas
out
ss
stos
cmpsl
push
sbb
adc
daa
xor
std
daa
pop
mov
xchg
adc
lods
inc
popf
xchg
jmp
sub
jmp
cmp
push
jge
jbe
xchg
jle
dec
sbb
adc
sub
lea
idivl
cltd
pop
or
mov
fsubr
xor
test
test
mov
cmp
dec
inc
fwait
or
arpl
pusha
pop
pop
nop
pop
test
xchg
imul
scas
je
xor
cmpsl
arpl
xchg
sub
sbb
pcmpgtw
jmp
shrl
sbb
jecxz
fbld
jne
in
test
rol
int
jno
scas
pop
dec
adcl
mov
call
out
das
lcall
cwtl
fldcw
decl
and
cltd
mov
or
dec
bound
iret
push
loope
push
jmp
inc
lods
jbe
shl
pushf
enter
sbb
and
mov
mov
popa
jne
mov
data16
pop
lahf
mov
xchg
or
ret
mov
mov
jbe
and
pop
les
orl
testl
push
shlb
repz
mov
pop
aam
fldt
xor
mov
mov
mov
inc
jno
xlat
cmp
call
gs
sbb
test
mov
fidivrl
jg
xorl
lock
mov
aam
dec
inc
lock
popf
mov
stos
cmp
ds
leave
sti
push
push
mov
cmp
pop
mov
fstl
add
mov
daa
scas
adc
pushf
xor
xchg
inc
jle
mov
mov
mov
jns
mov
jns
adc
bound
lods
stc
sub
and
jnp
ss
pop
cmp
nop
mov
jb
fs
pop
movsb
stos
dec
ficomps
mov
mov
or
popa
pop
and
jae
xchg
ret
mov
lods
popf
push
dec
xor
repnz
movlps
insl
cmp
lcall
cmp
xchg
sti
mov
mov
bound
into
mov
push
ja
inc
xchg
mov
mulb
repz
loopne
lock
cld
inc
lods
cltd
mov
stos
loope
inc
adc
sub
sti
dec
adcl
loopne
rep
mov
ror
fs
pop
in
mov
mov
sub
mov
inc
jno
jmp
add
pop
xchg
clc
pop
int
adc
incb
cli
sarl
push
stc
aad
icebp
pop
insl
sbb
jp
fsubrl
pop
mov
or
sbb
xor
pop
aad
fsubs
popa
in
cmpsb
nop
xchg
jbe
mov
jecxz
fbstp
cmp
and
cld
sbb
std
cmpsl
jae
lcall
into
adc
push
cmp
hlt
jg
jp
mov
and
jb
std
je
dec
sub
pop
inc
pop
shll
hlt
mov
stos
shrl
sbbb
jg
pop
lret
loopne
inc
in
jo
xchg
mov
movsl
mov
mov
xor
xor
in
ds
and
in
es
cmp
incl
cmp
push
adc
pop
cli
subb
loope
mov
je
cmpsb
push
dec
or
gs
mov
lret
xchg
mov
popf
hlt
loope
and
cmp
inc
cmp
jmp
ret
rorl
subl
dec
rcl
push
add
shll
hlt
add
jg
leave
lret
pushl
in
shrb
add
mov
in
sub
hlt
add
jbe
stc
aad
pushf
xchg
popf
int3
cli
test
mov
std
data16
iret
lea
push
mov
xchg
repz
sbb
add
nop
loop
jecxz
pop
fwait
arpl
jge
sahf
test
inc
xor
mov
sbb
adc
inc
pop
push
pop
sbb
xor
pop
inc
incl
mov
mov
sbb
and
stos
andl
or
test
adc
loope
and
and
popa
add
mov
pause
mov
popa
pop
in
movsb
push
mov
dec
test
jmp
loop
cld
leave
in
fmul
mov
mov
lret
push
and
aas
les
sub
inc
jo
inc
pop
adc
mov
xor
insl
cmp
push
mov
imul
outsl
fiaddl
imul
mov
or
sbb
fs
sbb
inc
stc
and
lods
stc
cmp
sbb
xchg
or
cmpsl
iret
adc
mov
into
cmp
repnz
xor
mov
sub
dec
push
cmp
data16
mov
lea
add
bnd
repz
negl
xor
test
sub
in
sub
and
or
xor
pop
and
pop
cmp
std
adc
movsl
fistpl
inc
neg
dec
popf
xor
sub
cmp
push
cmp
xor
lea
ret
dec
or
jb
clc
xchg
repz
fcoml
sahf
xchg
inc
add
rclb
test
inc
or
arpl
or
rolb
and
les
add
inc
test
cmpb
fsub
ret
inc
add
rcr
das
cmpsl
aas
push
or
je
loop
enter
xor
in
cwtl
dec
sub
inc
sub
nop
adc
xor
jne
push
cli
rcr
dec
fs
cmp
cmc
imul
mov
hlt
mov
cmpsl
mov
fwait
mov
daa
fcmovnbe
jae
ss
pushf
andb
add
xchg
int3
movsb
sub
loop
mov
int
out
and
jle
aas
inc
xor
sub
pop
cmp
arpl
rcr
test
jecxz
sti
push
popf
js
xor
out
mov
mov
stos
cmpsl
shlb
out
add
stc
push
popa
cld
cmpsb
cmp
push
mov
jg
adc
push
push
pop
and
daa
and
lods
jnp
cmpsb
xchg
test
sub
xor
jo
fstpt
pop
sub
and
xor
insl
mov
push
lock
mov
lret
push
daa
ss
sahf
scas
popf
push
in
pusha
sub
xchg
out
mov
arpl
cltd
sbb
fsubrl
add
inc
or
xchg
fmulp
jbe
dec
testb
inc
dec
xchg
push
rorl
gs
inc
or
mov
aad
pusha
sahf
jmp
js
lret
adc
mov
or
add
cmp
cmp
sub
mov
in
int
mov
faddl
push
mov
cmpsb
or
movsb
xchg
xchg
vcvtdq2pd
pop
xchg
in
mov
xchg
push
cld
add
popa
pop
lret
mov
stos
inc
lret
dec
imul
shl
popa
aad
sub
cmp
sbb
mov
jns
rcrl
push
test
xchg
outsb
js
mov
add
jns
push
pop
ficomps
in
push
int3
inc
inc
int3
call
jae
xlat
dec
adc
fildl
cmp
push
inc
jns
lcall
imul
orl
ja
out
xor
push
cmpsb
cmpb
out
fidivs
sub
movsb
ja
xchg
mov
dec
mov
mov
bound
mov
jb
scas
lods
test
mov
pop
pop
enter
lods
pusha
mov
imul
mov
lret
push
fdivrl
lods
jo
shrl
arpl
sti
lods
dec
xor
leave
outsb
mov
inc
leave
lds
mov
stos
mov
sub
mov
shl
pop
xchg
ljmp
add
jo
jle
push
jl
push
xchg
pop
ja
xlat
jge
sbb
dec
mov
pop
or
mul
ret
cld
stos
stc
orb
cmp
cs
rorl
pop
xchg
cs
pop
cmc
dec
mov
mov
cli
push
or
mov
jp
xor
imul
or
std
adc
pop
push
pop
dec
xor
lahf
fs
das
xchg
jae
jmp
pop
push
push
mov
repnz
inc
inc
arpl
pop
push
es
fiadds
lods
push
nop
sbb
fs
or
mov
push
jo
shll
insl
adcl
orb
fsubrl
dec
imul
jle,pn
pop
pop
xchg
fstpl
lock
cli
bound
dec
inc
push
push
shlb
xchg
add
test
cmpsl
lds
jne
cs
in
sub
gs
mov
hlt
push
scas
jle
pusha
neg
roll
test
fldt
sub
pusha
in
es
push
jmp
pop
jge
imul
and
lds
out
jmp
shl
cmovbe
cmp
xor
mov
in
movsl
pop
mov
pop
inc
ja
cmp
sbbl
or
push
aam
xor
jae
rcl
pop
idivb
adc
add
or
sbb
sub
push
lret
inc
sbb
mov
scas
push
out
test
cmp
dec
movsb
inc
bound
and
lret
pop
sub
shlb
xor
jl
pop
out
pop
test
xor
andl
mov
adc
ret
ss
or
push
jmp
andl
adc
or
loopne
sahf
movsb
pop
sbb
shrd
mov
loopne
and
add
mov
test
in
daa
lret
stos
das
and
in
repnz
sbb
add
add
fcmovbe
rcrl
jnp
js
fmuls
cwtl
cld
and
pop
sbb
js
xchg
lcall
sub
lea
add
fldl
mov
ljmp
cmp
fidivl
pop
into
dec
stc
sub
adc
xchg
sbb
cmp
add
adc
or
mov
adc
repz
add
or
nop
lcall
pop
mov
xchg
stc
mov
push
mov
shlb
xchg
arpl
sub
jp
movsb
js
les
mov
dec
lods
int3
mov
dec
xor
nop
lods
insl
in
ret
cmp
and
pop
push
dec
or
clc
xlat
hlt
adc
fcmovu
mov
sarl
adc
jae
jno
jle
and
mov
in
insb
movsb
cmp
lret
cs
bound
daa
sub
mov
enter
push
scas
lods
dec
lcall
xor
mov
ljmp
inc
push
imul
mov
sar
jb
pop
jp
into
aas
lret
fcmovbe
lods
fldt
inc
outsb
and
out
dec
iret
je
pop
push
rorb
lret
loop
mov
rclb
out
dec
dec
fwait
xchg
pop
mov
lock
or
aad
dec
dec
pushf
shll
xchg
sbb
dec
fldcw
add
je
out
sub
push
mov
xchg
adc
inc
int3
sbb
pop
outsb
mov
add
dec
rcrb
mov
iret
fwait
mov
mov
test
push
and
mov
into
push
sbb
push
dec
add
lret
sub
fwait
mov
push
pop
or
sub
mov
div
cmp
stos
out
jne
inc
push
roll
aas
mov
sub
add
mov
dec
pop
adc
pop
or
jne
and
dec
aam
in
adc
cmp
xchg
out
inc
push
imull
aas
fs
loope
subb
pop
adc
rorb
out
add
jnp
repz
popa
lods
adc
dec
cmpsb
int
shlb
xor
icebp
mov
scas
xor
jno
lds
aad
pop
pop
add
jle
ss
mov
jmp
test
movntq
mov
mov
lds
loop
popf
adc
mov
sbb
pop
mov
fmuls
push
sbb
jmp
mov
and
jge
pop
sbb
pop
fmul
xchg
mov
cmp
and
mov
add
pop
out
mov
in
in
xchg
push
lods
xorb
vdivss
lret
sbb
arpl
leave
dec
mov
xchg
xchg
stos
push
sub
pop
insl
ret
push
inc
fs
loopne
sub
test
shl
in
xor
stos
pop
int3
inc
mov
out
dec
jge
xor
enter
cmpsl
int
rorl
adc
jle
outsb
fidivl
loope
mov
cmc
jne
xchg
popa
xlat
mov
lcall
cli
cltd
pop
adc
fcmovu
adc
daa
aam
jae
rcll
fistpll
lahf
pause
sbb
jnp
add
xor
cmp
daa
fimuls
add
push
call
pop
dec
xor
cmpb
sti
hlt
mov
push
pop
into
rcrl
addb
lcall
movb
sub
adc
ds
sbb
setle
je
push
or
hlt
movsl
pop
ljmp
in
pusha
setl
leave
mov
bound
repnz
push
pop
inc
xchg
ja
test
mov
jmp
adc
int
mov
xchg
scas
dec
add
cmp
lcall
das
addr16
fs
mov
pop
popf
repz
xor
cltd
and
adc
xchg
mov
push
add
popa
push
lds
pop
push
inc
inc
lcall
xchg
xor
add
and
cltd
sbb
aad
dec
loope
sub
jg
mov
push
or
dec
mov
sub
cwtl
and
dec
jecxz
dec
addr16
push
jecxz
inc
leave
dec
or
lahf
sub
addr16
cmp
cmp
les
push
outsb
enter
clc
jne
jno
xor
xchg
pop
xchg
pop
outsl
cmp
lds
loop
adc
fnstsw
push
jle
mov
mov
jno
rorl
jne
sub
in
repz
cmpsb
sbb
mov
mov
popw
in
shr
mov
fwait
andw
leave
ds
jb
roll
mov
fstpl
imul
faddl
xchg
cwtl
mov
jnp
xchg
sub
shl
daa
mov
sbb
xor
and
lret
cmp
lcall
jg
into
scas
jmp
add
in
inc
std
adc
xor
fwait
adcl
sbb
outsl
mov
xchg
push
int
lds
addr16
xor
pop
inc
mov
dec
pop
mov
xor
outsb
sub
mov
cmp
fsubrs
movb
aaa
mov
push
jle
xor
add
pop
dec
jns
scas
push
push
cmc
dec
push
popa
push
fcmovnb
add
repnz
and
jnp
enter
add
test
pop
nop
add
xchg
xchg
or
loopne
push
cld
and
sub
lods
xchg
adc
push
mov
dec
loope
rep
xor
fildl
inc
adc
jns
mov
ja
fists
and
push
or
scas
cltd
lret
mov
mov
cmp
sub
dec
jecxz
jb
sahf
push
cli
xchg
push
mov
inc
sub
or
scas
jecxz
test
ds
xor
test
out
mov
arpl
cld
inc
fwait
and
xchg
dec
in
sbb
dec
mov
leave
ljmp
fcoms
rcrl
aas
add
nop
lods
or
movsl
jmp
jecxz
push
jmp
sub
jp
bound
xlat
mov
adc
popa
ffreep
movsl
test
and
inc
mov
es
push
inc
push
lea
and
dec
in
fimull
dec
lahf
or
adc
xchg
dec
pop
dec
push
call
jne
loopne
es
jbe
pop
popa
rolb
aas
test
test
sub
sbb
cmp
add
in
inc
push
dec
dec
cli
mov
ja
jl
inc
push
test
and
sub
outsl
push
mov
fldcw
out
repnz
xchg
cwtl
jne
xchg
cld
push
mov
add
mov
fidivl
in
mov
push
imul
pop
xor
mov
fistpl
sub
lock
xorl
inc
out
cwtl
push
jno
cmp
ss
or
pop
in
into
aaa
sub
adc
inc
stos
rcr
scas
mov
pop
push
in
sub
fcoms
mov
sub
inc
fdivrs
scas
mov
repz
aas
pusha
jecxz
cli
and
hlt
push
pop
and
clc
dec
mov
cs
mov
push
popf
pop
jne
push
jp
stos
mov
js
and
lea
movsl
inc
dec
mov
cs
and
aaa
icebp
cltd
add
ja
pop
sti
lods
dec
inc
sbb
jle
cwtl
hlt
sbb
jp
sub
xchg
out
in
cld
dec
rclb
or
xchg
pop
lods
mov
fcmovu
cmpsl
ja
hlt
inc
dec
mov
ljmp
lds
ror
imul
inc
aam
int
lock
and
ret
rcl
pop
mov
xor
inc
push
or
xlat
ljmp
in
jp
dec
pop
jb
xor
or
shll
push
dec
call
cmc
fcmovnb
aad
lret
xchg
mov
lret
andb
movsl
lcall
or
insb
sar
xchg
or
inc
sbb
test
and
pop
or
fdivrl
mov
jge
dec
lods
aad
fwait
lds
nop
cmpsl
lea
xchg
fisubrs
ret
and
pop
or
push
cmp
rcr
fadds
loop
lods
xlat
cs
dec
mov
popa
push
test
ja
and
sbb
je
cmp
adc
in
pop
fcoml
aas
adc
idiv
xchg
lret
lods
jno
sbb
dec
lods
push
add
inc
fdivrl
push
mov
jnp
into
add
mov
lret
sbb
icebp
into
sbb
cmp
xor
pop
das
mov
pop
push
mov
shlb
xchg
xchg
inc
test
inc
pop
mov
xchg
das
or
enter
push
mov
subl
lods
sbb
mov
mov
movsb
inc
scas
or
push
nop
and
mov
movsb
adc
jne
subl
xor
fsubrl
iret
lea
imulb
cmc
sbb
in
enter
xchg
hlt
sbb
xchg
adc
rep
mov
jp
mov
test
clc
lods
jo
scas
xchg
je
inc
lods
mov
xlat
pop
pop
jb
insl
popf
out
inc
sbb
add
daa
outsb
pop
inc
cmp
xor
xchg
jae
dec
mov
push
push
icebp
subb
imul
pop
mov
leave
xor
gs
mov
fcoml
outsl
or
lods
jb
push
fdivs
or
xor
mov
fwait
sbbb
call
xor
push
fistpll
or
pusha
push
fwait
cmpsb
int3
or
out
mov
cmp
pop
inc
xchg
imul
mov
clc
pop
in
mov
test
jbe
add
aas
leave
pop
loope
mov
xchg
lahf
pop
xlat
mov
nop
jg
mov
clc
mov
pop
or
jp
inc
mov
jne
jne
dec
aam
pop
fldl
add
clc
mov
imul
sbb
pop
jns
cltd
cwtl
outsl
cmp
flds
or
repnz
fldt
test
movsl
imull
push
das
and
mov
in
adc
inc
cltd
clc
enter
movsl
jmp
sti
fldl
mov
sub
adc
pop
and
or
cmc
decb
mov
aam
dec
xor
loop
fistps
addb
dec
mov
ds
xor
pop
out
cwtl
fwait
or
and
jg
push
bnd
push
push
mull
pop
xor
pop
out
jns
add
sbb
popf
push
in
sti
jmp
xchg
mov
into
add
mov
dec
adc
in
jno
dec
pop
daa
pop
outsb
cmp
nop
test
xchg
lahf
push
insl
xchg
sbb
and
aam
out
movsb
jno
fidivrl
sti
mov
pop
fs
add
inc
pushf
inc
dec
mov
outsl
lret
and
lods
mov
stos
or
fst
nop
and
mov
addl
jl
daa
sbb
add
data16
lahf
lahf
mov
stos
or
jg
cmp
xchg
xchg
fisubrs
jnp
inc
les
inc
adc
retw
lods
cld
in
nop
pop
mov
pop
jae
inc
mov
jmp
movsb
mov
sub
fldenv
hlt
lock
jne
imul
inc
icebp
mov
mov
sbb
inc
test
xchg
mov
pop
lods
mov
adcb
and
adc
scas
jmp
imul
flds
jecxz
fwait
popa
les
sbb
add
insl
push
aad
ja
xor
cmp
xor
das
sub
daa
mov
das
mov
push
mov
jmp
jecxz
or
mov
and
and
pop
vblendpd
pop
cmp
addr16
push
pop
adc
push
push
jno
sbb
lcall
add
mov
xchg
jg
in
das
in
jl
leave
cmc
push
icebp
sbb
cmp
sbb
shrl
ds
or
int3
push
mov
mov
test
fisttpl
fsubl
push
mov
test
in
mov
or
hlt
sti
push
jmp
dec
std
jae
mov
iret
mov
add
sbb
adc
sbb
xlat
jo
push
sbb
cli
push
xor
bound
enter
ja
xor
scas
mov
lahf
dec
cmp
fidivl
mov
test
mov
push
or
adc
je
call
es
pop
jmp
fwait
jne
push
xor
rcll
int3
imul
push
sub
sbb
dec
pushf
mov
imul
ret
push
loop
push
xor
data16
aas
push
adc
or
in
arpl
lret
pop
jg
xor
mov
mov
rolb
or
mov
sbb
inc
xchg
mov
into
xor
xchg
vmovdqu
xchg
ja
sar
out
inc
add
xchg
nop
repnz
call
inc
mov
jmp
push
and
movsb
pop
sub
push
in
pushl
bound
aam
sub
test
int
pusha
jp
add
cmp
inc
imul
jg
adc
in
push
sti
sarl
lahf
sbbb
das
inc
aas
aaa
inc
mov
ja
rcrl
xor
ljmp
dec
xor
sbb
sub
lds
push
pop
dec
inc
scas
jg
jns
push
pop
int
cmp
insb
dec
inc
hlt
pop
dec
imul
lea
leave
data16
mov
fsts
mov
mov
or
in
cmp
xchg
ret
dec
rcrb
add
shll
sbb
xor
aam
jns
test
mov
push
sub
xor
jg
dec
cmp
add
stos
sti
jmp
and
cwtl
xchg
adc
lock
jp
icebp
scas
rcrb
scas
ret
ljmp
xchg
enterw
sti
pop
adc
sub
cmp
pushf
or
mov
jbe
cltd
in
int
movsl
cmpsb
push
out
cmp
jg
xchg
ss
mov
dec
adc
dec
xor
fldl
mov
shlb
sbb
adc
jbe
push
movsl
xchg
test
xlat
out
shl
or
scas
jmp
pushf
sub
xor
int3
lahf
call
xor
in
mov
fistps
repnz
push
cmpsl
imulb
push
mov
xor
sub
ss
outsb
or
mov
push
mov
ret
push
out
sub
dec
inc
sbb
jp
sub
insb
cmp
xchg
inc
xchg
push
in
mov
fcoml
fcompl
pusha
pop
in
cwtl
pushf
insb
aam
addr16
xchg
out
fsubs
iret
push
movsl
lods
push
push
fiaddl
js
dec
xor
movsb
lahf
push
enter
cld
shll
dec
mov
bound
mov
xor
or
add
cmpsl
scas
xor
out
dec
in
fstl
repz
xchg
lds
add
sbb
das
push
mov
call
aam
das
std
lods
xor
ret
pushf
jno
cmpsb
sbbb
dec
nop
imul
mov
aam
iret
push
in
fisttpll
xchg
into
stos
add
cltd
mov
xor
dec
outsl
addr16
ljmp
xchg
int
mov
test
mov
scas
dec
cmc
xor
in
cmp
out
lea
movsl
push
roll
stos
daa
cli
push
lcall
xor
cmp
xchg
insl
imul
xorb
pop
jle
out
mov
adc
xor
popf
adc
xchg
movsb
je
repnz
inc
cltd
dec
mov
testl
in
in
cwtl
pop
dec
or
dec
push
xor
shll
mov
sbb
sbb
lcall
mov
mov
fstpt
out
pop
mov
mov
add
pop
pop
test
std
test
cmp
xor
push
or
mov
push
xchg
inc
mov
xor
insl
pop
icebp
mov
arpl
lea
add
mov
mov
fcmovbe
dec
jno
pop
adc
sahf
aad
adc
pop
xor
ja
arpl
fs
fisubl
out
mov
cs
clc
sbb
cmpsl
sti
je
inc
inc
push
push
mov
xor
pushf
xor
add
mov
lcall
push
or
adc
sbb
pop
sub
orb
inc
and
jae
pop
icebp
leave
and
add
lcall
imul
jmp
and
mov
shlb
inc
xchg
aam
je
popf
cmpsl
jle
pushf
dec
cmp
js
cmp
pop
mov
push
stos
pop
push
mov
insl
fwait
sub
nop
mov
addb
out
cmp
inc
pop
jp
shll
mov
aam
and
aas
aas
lea
push
push
stos
cli
pop
stc
add
insb
insl
push
or
xor
push
adc
ds
into
and
int
out
xor
out
jae
hlt
sub
ret
sub
or
lock
pop
dec
cmp
pop
push
pop
fldcw
ret
mov
out
pop
push
dec
imul
cmp
enterw
or
ss
xchg
pop
add
xor
push
das
add
dec
inc
bnd
xchg
xchg
repnz
sub
cmpsl
dec
shl
cmpsl
xor
lcall
ja
jo
sub
mov
in
movsl
shlb
cs
sbb
and
rorb
test
ljmp
insl
jecxz
imul
adc
rorb
cs
shll
daa
rclb
xor
lods
pop
sbb
push
pop
jae
mov
adc
idiv
xchg
inc
ftst
ffreep
mov
push
or
movsb
repnz
pusha
inc
xrelease
jp
test
jns
mov
neg
cld
xor
jg
lahf
or
push
push
xlat
in
gs
fs
pop
insb
xor
xor
and
cs
arpl
mov
xor
push
jecxz
jnp
adc
push
nop
and
movsl
add
xchg
sahf
push
mov
xchg
jp
xchg
cmp
pop
push
jae
sub
jge
push
stos
jnp
ret
clc
dec
test
adc
pminsw
insl
out
leave
std
inc
outsb
sbb
arpl
add
je
cmp
arpl
in
mov
cld
in
lods
repnz
inc
fs
je
cmpb
cmp
shlb
lahf
add
dec
insl
ljmp
or
mov
fisttpl
lods
mov
sub
mov
inc
mov
mov
jecxz
out
inc
testl
call
add
lret
inc
or
pushf
sbb
pop
jl
stos
mov
test
mov
dec
adc
int
and
jb
push
fs
xor
cmc
dec
fmull
mov
popa
xchg
arpl
adc
mov
and
inc
xchg
adc
adc
mov
cmc
jb
sub
xor
mov
and
jno
jmp
add
test
andb
daa
in
test
jo
and
sub
xchg
pop
mov
shlb
push
cmp
xchg
fstl
lods
scas
dec
lret
mov
cmc
or
mov
loopne
mov
inc
xlat
js
sarl
mov
inc
or
cwtl
inc
sbb
ljmp
xchg
sti
mov
lret
iret
inc
int
and
lods
push
iret
mov
and
xchg
mov
lahf
push
sti
call
rorb
movsl
idivl
loope
fcompl
xlat
push
dec
es
pop
xchg
scas
shll
xchg
mov
int
fcmove
add
mov
gs
inc
sub
xchg
lods
mov
jl
pop
inc
dec
cs
lods
repz
xorb
rol
push
jns
xchg
mov
jl
stos
in
mov
xchg
lods
rcrb
mov
arpl
arpl
es
test
fnstsw
js
andl
or
push
scas
mov
add
iret
adc
fsubs
out
push
in
fildl
in
stos
rcrl
lods
cmp
jecxz
add
inc
mov
mov
mov
mov
test
add
clc
cmp
lcall
call
mov
enter
mov
imul
js
push
or
xlat
cmp
aaa
xchg
imul
or
add
shrb
and
push
aam
cmpsl
jmp
sbb
mov
inc
xchg
daa
shl
out
lock
test
and
aam
pop
test
pop
leave
bound
pop
adc
xchg
pop
addr16
mov
shl
das
sbb
dec
movsb
movsb
addr16
sub
mov
xlat
inc
fcoml
adc
lea
stos
cmpb
mov
or
jmp
lds
xchg
inc
cld
lds
loop
jbe
mov
push
outsl
xor
mov
push
enter
loopne
aam
mov
sub
add
dec
mov
sub
aad
or
jns
add
fisttpl
push
icebp
push
aaa
aaa
lea
mov
add
lds
mov
loop
test
rcll
mov
shl
sub
jecxz
cmp
sbb
adc
add
fstpl
xchg
add
dec
dec
jbe
or
mov
cmpsl
ja
lds
repnz
jb
lret
pop
fcoml
mov
icebp
adc
in
testb
inc
sbb
outsl
sbb
xor
xchg
es
repz
or
cmp
int
mov
mov
daa
jmp
pop
jl
cmpsb
pop
pop
inc
inc
ret
enter
je
dec
mov
sub
mov
into
fldcw
pushf
adc
jl
out
inc
in
or
mov
sbb
dec
sub
ret
adc
cwtl
push
cs
popa
jbe
loopne
aam
stos
push
mov
js
out
scas
test
jae
int3
repz
les
or
dec
lahf
xchg
sbb
push
push
xchg
in
out
dec
xor
jl
movsb
push
sub
stos
mov
push
adcl
cli
mov
pop
es
mov
jle
aas
adc
sub
aam
mov
mov
out
out
sbb
inc
repnz
and
mov
arpl
sti
jne
loope
sbb
addr16
test
sbb
inc
pop
notb
fisubrl
lret
enter
out
mov
sarl
loope
lods
xchg
sti
std
push
cltd
xor
pop
sbb
pop
andb
pop
or
inc
xor
lahf
imul
xor
scas
adc
das
enter
cmp
and
dec
push
das
lret
sti
imul
mov
fcoml
xchg
shrb
pop
out
inc
shll
ficompl
sbb
push
mov
stc
cld
fmuls
mov
cmpsb
jmp
leave
ss
movsb
pop
lods
ror
mov
mov
lea
rclb
jae
mov
inc
lret
sbb
mov
xor
lcall
enter
pop
data16
sbb
mov
loop
sbb
inc
mov
mov
cmp
std
stos
jae
loopne
sub
gs
adc
xor
and
ss
hlt
lods
xor
pop
sub
push
icebp
mov
mov
pop
sbb
sti
popf
out
cmpsl
jecxz
insb
xor
test
jp
sub
rclb
lea
or
pop
sbb
out
sub
into
movsl
jmp
lds
dec
mov
or
mov
addr16
cltd
pop
mov
sub
mov
xchg
mov
or
imul
mov
mov
insl
push
push
push
jae
jmp
dec
fs
inc
stos
jecxz
or
add
inc
xchg
cmc
sub
mov
adc
pop
push
push
pop
icebp
aam
push
test
adc
add
hlt
outsl
pop
stos
xor
imul
icebp
cmp
scas
xor
int
push
hlt
xor
or
aaa
shlb
or
call
sbb
cli
fstl
sti
lds
inc
push
xchg
ret
test
test
call
and
insb
mov
test
or
lahf
mulb
dec
xchg
mov
lods
push
dec
jecxz
insb
or
pusha
int
nop/reserved
and
cmpsl
adc
inc
cld
sbb
test
test
or
or
inc
mov
sbb
lock
mov
popa
push
out
lahf
dec
cli
in
fidivrl
mov
aam
subb
add
inc
mov
loopne
push
push
call
stos
pop
xchg
pop
cmp
cmp
jle
adc
xchg
aas
mov
es
out
outsl
sbb
push
sub
lret
push
sub
lcall
xchg
insb
jmp
cmpsb
stos
fisubrl
xchg
mov
lret
mov
push
outsl
and
or
out
fcoml
cmp
in
out
cmc
movsl
mov
push
aad
jge
mov
pop
sbb
mov
movsb
aam
stc
and
push
push
dec
cmc
gs
xchg
je
mov
lods
movsb
addl
lods
and
ja
aaa
mov
out
out
mov
fdiv
pop
daa
aad
test
pop
data16
sahf
jmp
loope
and
or
sbb
pop
cmp
fdivrp
jae
mov
xchg
and
sub
rolb
into
mov
cld
hlt
and
push
mov
mov
mov
pop
dec
jge
sti
call
addr16
mov
imul
dec
loopne
enter
andb
push
sbb
mov
push
faddl
loope
fdivs
push
push
aas
add
xchg
leave
pop
xchg
mov
xor
push
hlt
les
sub
mov
fnop
sbb
in
ja
test
test
scas
inc
cmc
lahf
xlat
adc
xor
out
pop
fbstp
std
xchg
pop
sbb
pop
lahf
xor
fidivs
std
hlt
xor
ficoms
rorl
vandps
mov
push
xchg
and
mov
pop
outsl
jbe
cmp
je
mov
pushf
push
dec
shl
push
dec
test
insb
addl
add
cmp
dec
ljmp
mov
and
clc
imul
jbe
mov
push
stos
mov
xchg
int
int
push
notb
call
add
lahf
in
mov
push
aas
popa
mov
dec
mov
dec
outsl
jp
out
pop
adc
xchg
inc
mov
out
push
mov
out
psubd
mov
jmp
pop
pop
add
das
test
ds
shll
gs
sub
mov
pop
mov
jb
add
inc
into
or
ficompl
cmc
clc
jae
push
mov
xlat
jae
push
cmpsl
mov
cs
rol
mov
mov
xchg
cmp
push
cmp
push
out
sub
out
mov
push
aad
ret
push
in
mov
sub
sub
cld
loopne
xor
lret
fmul
hlt
mov
and
push
mov
sahf
push
test
mov
call
jl
lahf
pop
jl
xor
inc
dec
cmp
cli
das
rcll
or
notl
pop
mov
fs
ljmp
push
orl
fucomi
mul
mov
push
pop
push
adc
shlb
ds
mov
shrl
ds
pop
push
mov
xchg
add
lods
fld
push
xor
push
jmp
lds
mov
jp
lret
call
insb
out
cmpsl
cs
add
pop
xchg
pop
call
xor
mov
insl
test
adc
cld
push
outsw
insb
icebp
mov
adc
xchg
les
add
adc
addl
test
xor
or
dec
push
jecxz
cld
pusha
xlat
ja
mov
call
lea
mov
lock
mov
int
jno
cli
mov
adc
jno
lods
lods
int
or
std
insl
adc
push
xchg
imul
cmc
insb
xor
lock
imul
scas
and
popa
pop
xlat
xor
or
or
jp
pop
lea
cs
scas
cmp
int
movsl
in
outsb
stos
or
mov
fidivrs
cmpsb
sbb
sub
sbbb
jns
mov
jnp
sub
xchg
das
pop
adc
out
pop
mov
push
icebp
xchg
jp
lret
shlb
pop
lret
mov
add
sbb
scas
gs
lret
in
sbb
xchg
jbe
sbb
outsb
cmpsb
pop
sbb
sbb
orl
xor
and
and
lds
inc
add
and
and
ret
pop
xor
and
sub
mov
sbb
mov
shlb
or
pop
inc
nop
mov
and
mov
xor
bound
loopne
push
popa
movsb
push
out
mov
int
mov
adc
dec
cmp
std
sub
xor
data16
add
push
inc
inc
jle
rorl
add
xchg
or
cmp
mov
rcr
push
addb
dec
mov
pop
addb
cmp
das
pushf
adc
xchg
cwtl
inc
popf
pushf
fldl
insl
xchg
fdivp
fiaddl
sbb
adc
lods
ds
adc
test
test
lock
mov
orl
jmp
mov
sub
sbb
popa
pop
add
dec
or
sub
out
jecxz
daa
out
sbb
xchg
mov
or
fwait
into
jb
push
push
je
xorl
inc
xchg
inc
adc
sbb
cmp
stc
pushf
icebp
cmp
int3
jne
idivb
cs
aaa
add
dec
dec
pop
pop
and
mov
xchg
mov
sahf
inc
fildl
dec
mov
pop
rolb
xlat
je
test
mov
addr16
mov
popf
add
dec
mov
scas
pop
sbb
jae
mov
xor
fstpt
or
push
mov
sub
push
rcrb
or
push
in
xchg
aad
idiv
inc
scas
xchg
cmpsl
push
mov
out
addr16
movsb
inc
mov
lods
shrb
inc
mov
outsb
xchg
ficoms
shrl
pop
xor
les
push
dec
mov
sub
dec
xchg
sub
xchg
and
inc
dec
mul
insb
sub
movsb
cmc
ljmp
xchg
adc
cmp
pop
test
idivb
dec
xchg
pop
mov
xchg
ret
cmpb
shll
insb
mov
lcall
ret
mov
movsb
fidivl
pop
pop
push
stos
inc
lret
or
int
inc
int3
test
xchg
addb
inc
sbb
xchg
mov
cmc
in
adc
addl
outsb
pop
add
repz
mov
add
pushf
dec
lds
lea
mov
fcmovu
mov
scas
jl
in
mov
adc
push
sub
pop
sahf
cmp
pop
faddp
leave
roll
rolb
mov
fs
cmp
iret
mov
dec
cwtl
stos
dec
filds
loop
test
inc
inc
jmp
pop
add
insb
inc
pop
or
addl
outsl
cmp
jmp
cmpsb
adc
into
xorl
adc
add
sub
pop
lea
mull
cli
mov
in
orl
ret
mov
jle
data16
es
insb
lock
lods
pop
sbb
mov
push
cmpsb
mov
dec
ret
cmp
jg
cmp
subl
aam
inc
xchg
dec
mov
lret
push
mov
fimull
lods
je
mov
mov
mov
fmul
in
call
push
subl
xchg
enter
sub
aad
and
cltd
stos
inc
rorb
pop
cmc
push
rorb
jg
arpl
mov
icebp
lea
sahf
jne
dec
dec
in
jmp
cli
cmp
call
aad
in
repnz
mov
loopne
push
leave
mov
neg
imul
lret
and
stc
cmc
sbb
sbb
in
cmp
inc
dec
aas
out
movsw
push
notl
adc
jbe
out
repz
addl
inc
es
cmp
xor
aam
jnp
push
movsl
mov
int3
cmp
or
xor
mov
sahf
cmp
mov
mov
cltd
popf
jae
outsb
jmp
jg
ss
insb
pop
cwtl
push
call
dec
cmp
mov
lahf
repz
sahf
fidivrl
xchg
push
mov
movsl
pushf
jno
or
cmp
cmp
add
sbb
adc
shll
xor
test
mov
scas
arpl
sarl
dec
cmpb
clc
mov
adc
cld
xchg
sub
xor
adc
xor
and
inc
cwtl
test
add
mov
adc
push
imul
xlat
push
call
jb
mov
mov
loop
cltd
add
push
push
fsubr
sar
jne
xor
sbb
inc
loope
arpl
filds
out
lret
leave
mov
clc
imul
int
cmp
jo
daa
imul
sti
and
cmp
adc
or
imul
lods
sub
es
add
ja
cmp
mov
cwtl
pusha
insb
or
test
int
mov
push
inc
pop
and
mov
shl
sbb
add
pop
xor
hlt
cmp
xchg
adc
leave
rolb
fbld
ja
adc
push
mov
fsubp
cmp
sbb
pop
jo
test
jo
push
inc
cld
jl
ret
pusha
pop
xor
ficoml
mov
popf
mov
scas
add
lock
xchg
pop
adc
lahf
mov
jmp
dec
mov
jo
and
sti
clc
jno
xchg
aam
out
push
ljmp
arpl
xchg
or
lea
and
push
sbb
and
rol
loop
cwtl
mov
cwtl
mov
xlat
mov
clc
andb
pop
insb
leave
sbb
sub
or
cli
or
dec
pusha
or
out
ffreep
daa
decb
dec
mov
mov
jp
int3
mov
mov
cld
pop
xchg
xor
mov
jno
sub
mov
sub
ja
loopne
mov
mov
adc
enter
in
enter
mov
scas
xlat
cmc
add
dec
jne
dec
dec
nop
lcall
arpl
repnz
in
pop
cltd
inc
and
mov
scas
stos
adc
dec
frstor
das
pop
sbb
sbb
arpl
lret
ds
scas
jo
aaa
mov
xchg
adc
xchg
xchg
push
and
sub
and
xor
adcb
jno
pop
movsl
lahf
mov
pop
cltd
inc
dec
xor
and
fs
xchg
jbe
aad
lahf
add
inc
inc
call
push
out
inc
and
cltd
fs
lahf
inc
mov
xor
adc
dec
adc
mov
xor
outsb
or
xor
or
icebp
or
jl
sub
sub
xchg
shll
not
clc
add
rclb
push
mov
enter
dec
xchg
push
stos
dec
aam
cmp
push
jns
sti
ljmp
in
aam
mov
mov
xor
pop
xor
mov
iret
pushf
out
cmc
push
or
sbb
data16
add
bound
add
mov
and
roll
movsl
mov
push
cld
inc
jp
stos
inc
cmc
movsl
dec
mov
sti
leave
movsl
out
aam
mov
xor
push
xchg
inc
movsl
scas
nop
adc
inc
mov
lds
test
inc
fdivs
mov
pop
sbb
subb
lods
sub
test
js
icebp
mov
xchg
jns
push
daa
pop
dec
subl
push
sub
cli
lahf
mov
xchg
shrb
pop
push
stos
jno
ficompl
fwait
push
loop
inc
aad
mov
mov
out
test
jne
adc
addr16
inc
push
jbe
lret
adc
cli
inc
rcrl
push
js
insb
mov
fwait
aam
inc
mov
cs
jmp
or
inc
pop
cli
loope
shl
inc
dec
hlt
adc
pop
fdivrs
xlat
hlt
adc
sub
jo
mov
xchg
insb
xchg
adc
cli
push
stos
push
pop
jl
scas
in
sub
hlt
mov
cmp
inc
add
movsb
lret
jb
icebp
add
shrb
jle
xor
in
xor
xor
daa
imul
mov
cmpsb
lea
cmp
jl
inc
test
fisubrl
dec
cs
add
aas
mov
inc
cs
les
or
ret
jno
jnp
dec
jb
mov
andb
xor
pop
sub
push
cld
int3
sub
fdivl
ret
ds
loope
xchg
mov
sub
fwait
lods
fmull
add
or
pop
std
xchg
sub
jle
out
fs
repnz
in
mov
movsb
std
add
fwait
jae
sahf
andl
pop
int
or
pop
pushf
stos
sbb
lock
mov
popf
jno
fcoms
push
jno
jbe
adc
dec
cmpsl
pop
push
in
and
aam
stc
pop
fmull
push
aad
pop
dec
sub
je
mov
xor
cli
mov
add
stos
cmp
and
es
int3
test
scas
es
mov
pop
stc
mov
jecxz
ljmp
rorl
inc
adc
push
dec
pop
je
xchg
xor
icebp
xchg
out
lds
pop
push
rorl
lds
popf
sub
es
bound
in
cmc
adc
mov
mov
and
cmpsb
cld
lea
cld
lret
dec
subl
and
push
mov
cmc
in
neg
jmp
lods
mov
mov
inc
xor
into
or
enter
ss
or
dec
xchg
inc
dec
sbb
std
and
testb
stc
scas
imul
cmc
lahf
add
mov
mov
push
je
in
out
bound
mov
mov
sub
inc
adc
cwtl
push
dec
inc
and
mov
mov
sbb
stc
xchg
dec
mov
jl
inc
fidivrl
addr16
and
and
pop
popf
and
dec
mov
sub
jle
pop
aam
mov
sub
in
xchg
daa
pop
inc
pop
push
nop
mov
mov
sub
cmp
mov
pushf
int3
test
cmc
mov
add
xlat
sbb
aam
out
xor
inc
repnz
sbb
jg
adc
popa
loope
xchg
xor
pushf
dec
mov
lods
loop
mov
ljmp
sbb
xor
add
aas
clc
xchg
inc
js
ss
xor
std
int
jg
xlat
inc
orl
dec
jno
mov
xor
add
dec
xor
push
add
das
imul
dec
and
je
popf
mov
jae
call
cmpl
push
pop
pop
ret
out
and
stos
mov
lock
cli
into
jecxz
cmp
sub
test
or
hlt
cmp
and
pop
cmp
and
xor
sbb
mov
xchg
data16
movsb
dec
into
rorl
pushf
sar
flds
stc
lods
mov
xlat
lods
adc
rcrb
pushf
pop
push
out
data16
xchg
xchg
ljmp
xor
iret
inc
testl
jmp
pop
sbb
insl
mov
jmp
ret
shlb
mov
lods
out
test
sbb
adc
adc
sahf
mov
xchg
ja
lds
or
out
xchg
imul
int
jb
nop
add
fbstp
mov
icebp
mov
push
fists
jae
or
or
lahf
gs
and
mov
mov
inc
repz
aaa
xchg
xchg
push
adc
mov
in
int
test
mov
add
push
cmpsb
es
insb
movsl
cmpsl
enter
adc
xchg
cmc
jmp
xchg
stos
mov
mov
xor
int3
pop
xchg
outsl
flds
sub
or
jbe
jb
icebp
add
or
push
mov
stos
ds
loope
cmpsb
test
addr16
cmpsl
inc
in
repz
std
jge
jae
add
pushf
sbb
pop
gs
hlt
jns
inc
xchg
dec
push
fldenv
xor
rcll
inc
pusha
xor
lcall
leave
inc
or
sub
pushf
jp
lea
xchg
dec
fdivl
pop
xor
sub
pushf
and
mov
add
xchg
lods
lods
add
mov
pop
fstpt
inc
aaa
hlt
sub
adc
pop
data16
xor
inc
ret
pop
lea
or
rcrb
rorl
sahf
mov
pop
push
adcl
sbb
aaa
popf
ficoms
das
push
ja
adc
xchg
mov
fdivl
in
jmp
push
cmc
push
inc
mov
loope
sbb
and
fs
push
pop
repz
jnp
outsl
pushf
sti
xor
xor
inc
jno
icebp
pop
int3
sbb
lods
je
pop
lods
fisubl
flds
add
loope
mov
movsl
pop
out
lock
mov
inc
imul
js
xor
xchg
fldl
push
fcmovne
lock
icebp
jg
sub
sub
comiss
mov
imull
xchg
sub
or
sbb
or
add
loope
ljmp
fcomip
addr16
mov
test
mov
push
mov
adc
dec
and
xchg
pop
push
bound
and
andb
pop
sbb
outsb
lods
icebp
mov
dec
in
mov
fldt
addr16
clc
pop
add
adc
cmp
iret
or
gs
pop
xor
xor
push
jg
mov
mov
ficoml
xchg
dec
or
rorl
int3
dec
fwait
lret
lcall
imul
or
movl
jl
add
repz
js
pop
sub
sub
sub
dec
push
movl
dec
push
mov
sbb
jae
mov
dec
scas
cmpsl
mov
negb
out
popf
push
icebp
jge
push
push
jne
popf
mov
imul
dec
mov
stc
outsb
mov
outsb
loopne
push
out
xchg
aas
test
ja
js
lret
mov
fbld
adc
orb
xor
jbe
ja
sbb
sarl
add
fdivl
pop
pop
adc
mov
fldl
test
pop
subl
cmp
ja
xchg
cmp
leave
daa
vucomiss
push
mov
enter
lods
adc
sub
outsb
fcomi
jae
push
scas
and
pop
fnsave
push
mov
hlt
add
or
add
add
js
sub
or
out
mov
stc
pop
add
sbb
data16
xor
push
minps
pop
lds
les
addr16
pop
push
cmp
lods
mov
mov
mov
sbb
add
sbb
inc
mov
flds
mov
add
cli
mov
ds
jle
or
inc
mov
and
test
loop
add
push
stc
mov
inc
paddsb
scas
test
lds
mov
mov
push
push
in
out
mov
fidivl
mov
or
mov
out
adc
pop
punpckldq
mov
inc
mov
jb
lret
mov
nop
inc
mov
push
ja
enter
add
outsb
sub
popf
sbb
lods
into
shlb
shlb
lods
mov
pusha
push
jb
jp
orl
in
in
inc
mov
or
mov
xchg
lock
inc
jle
out
stos
sbb
push
pusha
sbb
pop
push
adcl
or
lods
out
pop
jnp
lret
mov
lret
jns
lea
or
cmp
lock
push
call
pop
or
sahf
inc
mov
dec
leave
ja
in
dec
sub
xor
popa
pop
mov
in
mov
les
pop
mov
stc
int
lods
push
test
or
popf
xchg
aas
cmpsl
add
jecxz
scas
add
jns
mov
mov
loope
test
sti
sub
lcall
mov
sar
pop
push
loop
pop
mov
mov
mov
ljmp
fsts
mov
fldcw
xor
loopne
add
mov
mov
andb
ret
push
mov
clc
push
mov
and
and
jl
or
dec
nop
ds
mov
cmpsl
cmp
jb
sub
mov
cmpsb
cmp
lahf
add
mov
xchg
and
mov
mov
mov
sub
jle
int3
or
xor
cmp
sub
scas
in
in
pop
adc
stc
cld
addb
cld
mov
xchg
pop
inc
lret
fadds
xchg
jp
mov
popa
or
das
add
xchg
rorb
sbb
mov
lret
dec
cmc
pop
adc
mov
call
insb
adc
add
icebp
outsb
fistpll
add
inc
add
ret
loop
inc
push
sub
call
mov
inc
bnd
mov
flds
jmp
sbb
das
mov
inc
je
imul
cli
mov
mov
in
pop
arpl
adc
and
mov
pop
pop
mov
lea
std
into
push
rclb
adc
mov
rorl
pop
pop
imul
lods
int3
adc
popfw
jbe
imul
andl
aam
popf
pop
pop
dec
push
je
in
or
xchg
lock
push
cmp
sub
push
ret
repz
pop
idiv
mov
pop
jbe
ds
lods
lret
out
mov
fiadds
adc
ja
xchg
insl
call
adcb
adc
xchg
loopne
dec
pop
dec
call
adc
adc
pop
test
adc
mov
lcall
aaa
jg
je
test
pop
cmp
xlat
sub
out
xlat
cmp
mov
push
push
cmp
mov
adc
or
loopne
sub
sbb
mov
sbb
ljmp
test
dec
clc
adc
jne
push
scas
pop
add
clc
xor
sbb
aad
sbb
jge
aaa
add
andl
pop
hlt
dec
xor
mov
in
lock
cmp
mov
push
mov
cmp
cli
xchg
out
jb
or
fists
add
mov
xchg
test
mov
ret
adc
dec
lret
ret
mov
iret
pop
shll
dec
mov
mov
popa
sbb
scas
mov
cmp
das
lea
into
outsl
mov
into
aam
jle
arpl
mov
xchg
leave
add
fsub
dec
outsl
stos
icebp
push
add
add
push
or
inc
mov
adc
dec
sub
pop
es
jbe
or
test
xor
js
push
ret
popa
pop
inc
pop
stos
imul
dec
xchg
lret
cmp
addr16
in
ja
ja
xor
cmpsl
dec
mov
movsl
test
xchg
call
fildll
mov
bound
rolb
or
popf
add
js
test
sub
nop
jne
imul
out
or
js
iret
push
fs
xchg
sbb
jge
jg
hlt
pop
inc
dec
inc
int3
dec
pop
inc
adc
pop
pop
out
cli
pop
mov
xchg
sub
xchg
add
jmp
pop
lahf
daa
and
adc
mov
cmc
sbb
outsl
mov
loope
and
loopne
test
in
cmpsl
addr16
cmc
into
adc
and
mov
iret
mov
sbb
cmp
sbb
xchg
aam
xor
pop
sbbl
mov
pop
inc
scas
fadd
fcmovnbe
sub
movsl
or
leave
fcoml
int3
sbb
jp
lcall
cmp
popa
orl
inc
fs
orb
push
pop
cmp
sbb
inc
ljmp
xorb
fcomps
push
pop
call
ret
mov
xchg
and
mov
dec
outsl
dec
pop
andb
loopne
addb
movsb
push
inc
sti
cs
shll
fwait
or
icebp
mov
xchg
mov
daa
cli
cmpsb
dec
inc
add
fsubrs
lods
mov
jae
cmp
out
sbb
sbb
push
in
mov
mov
daa
mov
mov
lea
dec
loopne
lock
xchg
pop
xor
or
fisubrs
leave
mov
cmp
movsl
rcll
cwtl
fsubr
fimull
ret
ror
ljmp
mov
repz
ret
inc
cmpsb
dec
inc
mov
or
inc
inc
dec
push
ret
pslld
icebp
push
insl
xchg
in
xor
negl
rcll
arpl
dec
push
mov
ret
subb
imul
out
push
hlt
xor
cmp
rorl
adcb
xor
pop
test
cs
stos
arpl
int3
mov
inc
mov
adc
mov
ss
or
jb
inc
and
jbe
fcom
or
add
push
ljmp
mov
add
jne
xor
das
mov
rorb
jb
sub
jbe
cmp
pop
mov
out
dec
fidivs
mov
dec
dec
ret
test
pushl
xor
xor
imul
nop
mov
icebp
outsl
mov
jl
dec
jecxz
clc
pop
jg
jmp
mov
xchg
lods
loope
push
sarb
mov
xor
test
sbb
popa
scas
jb
dec
stos
loope
mov
test
dec
push
push
xchg
pop
hlt
cltd
lahf
lock
mov
xchg
fnstcw
sbb
inc
adc
iret
push
aaa
pop
movsl
pop
roll
ja
dec
dec
xor
push
stc
aad
sbb
or
popa
dec
outsl
mov
sbb
xchg
fldenv
test
mov
fisttps
inc
mov
sahf
lret
pop
inc
loopne
popf
enter
mov
lahf
cmp
adc
in
lds
int3
cld
jbe
iret
loop
mov
ret
mov
jecxz
adc
ss
mov
xchg
and
mov
sti
fnstsw
cmc
mov
pop
sbb
and
xchg
jle
inc
jnp
inc
das
push
sbb
and
jne
popa
xchg
jg
cmpb
lods
or
cli
dec
push
in
fs
fstpt
insl
icebp
in
sub
cli
dec
out
mov
or
aam
mov
fwait
and
js
test
or
out
dec
enter
ret
iret
enter
xor
xchg
cs
and
fidivrs
call
lock
test
cld
inc
divl
jne
addb
cmp
add
push
neg
push
and
pop
gs
and
popa
test
mov
dec
in
fcom
lahf
fstpl
cmpl
dec
enter
ret
rorb
mov
cmp
xchg
je
pushf
mov
push
stc
adc
push
cli
pop
mov
cmp
push
sub
mov
ret
xor
push
loope
in
pusha
or
adc
add
inc
mov
sti
out
decb
das
xlat
jae
dec
fidivrs
adc
mov
aad
xchg
hlt
jb
shl
popa
loope
pop
gs
jnp
in
lahf
mov
xor
cli
jl
into
pop
or
cltd
je
sbb
xor
xchg
jae
sub
adcl
nop
inc
mov
test
xchg
rdpmc
outsl
dec
stc
ret
cmp
push
or
scas
rclb
push
insb
in
fisubs
xor
mov
cmp
test
lahf
inc
rcrb
xchg
sbb
mov
mov
mov
push
int3
jae
cmpsl
gs
les
js
or
pop
test
sti
pop
sbb
repz
pop
jmp
cli
add
or
cltd
sbb
push
mov
adc
dec
dec
xor
jo
sbbb
fisubl
nop
push
cli
pop
fsub
stos
adc
jle
inc
sub
cmp
lods
jl
adc
pop
jo
outsb
add
in
mov
mov
bound
lods
dec
cmpsl
ja
mov
addl
or
push
cmp
popf
inc
inc
clc
fisubrl
jg
push
jmp
aam
dec
push
ja
les
sub
jg
cld
sub
mov
add
xor
lcall
addl
inc
adc
mov
sub
test
mov
out
push
mov
lret
xchg
jns
xchg
test
push
imul
in
lods
or
mov
jae
cmp
in
jns
xchg
sbb
iret
cwtl
fldenv
rorb
out
lock
aas
and
imulb
xor
test
adc
scas
and
push
cli
stos
cmp
pop
jmp
aaa
movsl
or
xchg
js
or
hlt
dec
addr16
bound
mov
push
daa
icebp
pop
nop
mov
push
mov
jl
mov
and
int
aad
mov
lahf
cld
mov
mov
and
cwtl
int
inc
jge
cmpsl
nop
std
mov
popa
incw
addr16
dec
out
push
sub
xchg
cwtl
test
fucomp
fld
mov
cmpsb
cmp
iret
mov
testl
icebp
mov
leave
jne
push
mov
jae
push
cmpsl
int
cmp
cld
rclb
hlt
push
dec
jp
mov
into
adc
in
lock
outsl
sbb
mov
out
inc
repz
roll
or
push
inc
push
js
je,pn
fildl
stc
or
xchg
adc
add
xlat
lea
cmp
lcall
and
in
mov
fistpl
mov
mov
data16
push
ret
shrb
mov
aaa
jg
stos
js
xor
imul
add
int
hlt
dec
cltd
addr16
dec
jnp
cmp
ja
mov
hlt
sti
xor
lret
mov
mov
dec
inc
divb
fstps
loop
sti
add
mov
ret
pop
pop
ficomps
popf
mov
and
jp
xor
pop
mov
mov
cmp
pusha
dec
xor
movsl
xor
test
out
leave
mov
push
jo
dec
mov
xchg
adc
iret
adc
mov
jle
in
xor
pusha
fwait
sbb
mov
sbb
adc
ljmp
fsubl
pop
adc
sub
lret
mov
decb
lcall
cmp
es
das
cmp
mov
xor
dec
sub
sbb
nop
loopne
pop
insb
popf
sub
push
arpl
lret
adcb
hlt
xor
hlt
or
std
cmc
leave
dec
mov
push
ljmp
add
cltd
rcrb
cmp
mov
jmp
fisubrs
pop
cli
push
dec
pusha
insb
les
cmp
mov
or
mov
lock
xchg
mov
or
test
dec
ret
xchg
xor
lds
test
rcr
lods
pushf
push
jmp
pop
xor
xchg
lret
dec
gs
les
mov
ljmp
and
or
int3
mov
dec
xchg
sbb
inc
das
xchg
mov
adc
push
jl
jle
push
out
cmc
stos
mov
cmp
mov
sub
rolb
mov
add
mov
addr16
movsb
leave
bound
in
cwtl
mov
mov
sbb
xchg
mov
test
fs
jbe
ss
mov
xor
cmp
adcb
and
xor
ljmp
fdivrs
insl
leave
and
into
pop
in
outsl
lret
xchg
push
inc
in
out
xchg
das
pop
sub
dec
add
pop
es
xchg
lds
fwait
inc
jg
xorb
adc
push
cmp
cwtl
push
loope
fdivrl
lcall
and
cmp
scas
lahf
mov
out
hlt
and
test
jg
jge
mov
sub
test
jecxz
test
jbe
add
dec
in
movsl
fwait
push
in
mov
loope
jmp
fiaddl
rcll
std
inc
xorb
adc
mov
inc
fcomps
stos
fwait
mov
cmp
mov
sbb
jg
jne
push
jns
xor
pop
pusha
cmp
inc
inc
mov
lds
dec
mov
xor
dec
in
dec
ret
int3
sti
lret
pop
movsb
loope
test
push
mov
push
adc
sub
inc
jne
dec
int
add
push
icebp
jae
loop
add
cmc
jmp
xor
aaa
push
dec
mov
jp
jmp
xorl
lret
test
pop
jo
iret
stc
push
xchg
push
xor
fnstsw
mov
sbb
mov
inc
pop
out
and
shll
sbb
lret
lods
mov
fwait
add
int3
and
jg
sarl
sahf
es
or
mov
sbb
in
andl
xchg
aam
scas
repz
test
stos
dec
xchg
lret
adc
loop
cmp
nop
sbb
popf
call
sbb
xor
inc
popa
inc
hlt
ss
xor
fsubr
pop
mov
imul
xchg
lods
xchg
outsb
insb
adc
jl
and
repnz
push
add
int
shrb
push
inc
cmp
mov
iret
sar
cli
in
pop
aam
xor
push
dec
mov
or
sub
jo
insb
cwtl
xorl
imul
mov
std
call
punpcklbw
jl
mov
inc
push
aad
jnp
inc
iret
mov
add
push
or
rcrb
sbb
xchg
add
pop
push
insl
pop
nop
lea
lock
pop
mov
cmc
push
xor
xchg
ret
pop
imul
stos
mulb
ret
lea
enter
bnd
fwait
and
mov
mov
sbb
pusha
jg
sbb
cmp
push
ss
fdiv
lea
mov
lock
lods
out
xchg
stos
adc
scas
push
jl
out
stc
sub
ljmp
inc
adc
fistps
cmp
mov
out
loop
int3
loop
jg
stos
inc
test
mov
mov
push
dec
mov
fwait
pop
and
out
pop
aaa
popf
nop
enter
push
ds
rorl
fsubs
bound
sahf
adc
cs
push
or
adc
std
aam
mov
sbb
push
pushf
mov
xlat
pop
or
sbbb
mov
cli
xchg
fwait
and
jae
pop
adc
in
ret
test
jno
sahf
xchg
jg
int3
iret
lds
cmp
mov
out
lods
shrl
and
jmp
mov
mov
jo
loop
ret
pop
into
mov
xor
inc
lcall
in
inc
xchg
faddl
mov
sub
xor
xchg
xor
cmp
sub
shll
jb
dec
lods
push
pop
std
push
and
dec
mov
mov
mov
fistpl
insl
fstpl
sub
xlat
jb
xor
fwait
lock
pop
adc
pusha
test
or
lret
jle
mov
sahf
rclb
aam
cmp
mov
cwtl
lods
dec
jg
ss
loopne
mov
xchg
inc
pop
leave
mov
inc
jg
push
mov
jne
ror
mov
mov
mov
cmp
arpl
imul
loop
test
data16
push
mov
mov
fwait
mov
movhps
fs
jecxz
and
ds
cmp
mov
movsb
fists
lcall
test
lea
sbb
or
ret
adc
and
mov
outsb
or
cmpsb
push
or
fs
popf
fwait
push
or
outsb
add
addr16
sbb
shr
cwtl
in
push
xchg
xchg
jns
out
fiadds
mov
xor
sbb
pushf
push
mov
shl
ja
dec
fsubs
arpl
repnz
mov
js
mov
push
test
sub
pop
xor
cmpl
mov
nop
ret
orb
add
ret
insb
scas
mov
stos
xorb
roll
cmc
into
mov
sbb
test
das
lods
stos
leave
int3
je
enter
into
pop
icebp
jb
enter
jmp
adc
adc
xchg
movsb
dec
ss
cmp
sbb
aam
push
mov
mov
cmpsb
in
pop
loope
mov
pop
xor
clc
cmp
cmp
ja
lods
in
jle
sub
rorl
mov
mov
mov
aad
add
inc
aad
cli
popa
xchg
mov
test
pop
iret
sub
stos
inc
out
int
and
rcrl
pop
cmp
mov
movsl
pop
or
or
adc
adc
stos
mov
test
pop
inc
lds
lcall
sub
ret
pop
jb
inc
xchg
push
sub
xchg
std
push
mov
jecxz
loop
add
outsb
mov
cwtl
imul
pop
inc
addr16
jmp
mov
or
xchg
je
loope
aaa
enter
jne
mov
jge
les
inc
fdiv
adc
xchg
test
adc
das
int3
push
faddp
arpl
std
xchg
arpl
push
mov
aaa
push
or
stc
jp
nop
inc
pop
faddl
addr16
dec
push
inc
vmovups
stos
testb
xor
clc
or
cmp
jne
cmpsl
stos
cmp
mov
in
push
xor
sbb
lock
push
mov
sbb
sub
aam
push
xchg
inc
shlb
sbb
and
cmp
sub
sbb
xor
push
mov
cmpsl
imul
xchg
jmp
adc
jo
iret
sub
fdivs
popa
mov
rorl
cmp
rcrb
add
jge,pt
repnz
icebp
mov
pop
inc
stc
fwait
subl
orl
frndint
outsl
sbb
and
dec
mov
mov
push
xchg
push
xchg
mov
inc
inc
xlat
mov
insl
and
ja
outsb
mov
jle
inc
jne
cmp
cwtl
push
jne
sbbb
pop
sub
movsl
movsl
pop
ds
notb
inc
sbb
dec
aad
jge
and
jmp
inc
sbbl
lret
push
xor
and
xchg
xor
adc
xchg
cwtl
test
push
mov
or
push
mov
shrb
repz
movsl
dec
fs
mov
push
pop
scas
jbe
xchg
fucomip
inc
sbb
js
adc
fwait
lods
inc
aaa
shll
mov
hlt
xor
loopne
or
cltd
push
mov
daa
xchg
jns
clc
adc
mov
mov
clc
push
imull
mov
dec
scas
push
lcall
fldenv
add
out
sbb
fisttpll
nop
pop
movups
cwtl
and
and
jmp
loope
push
push
and
cmp
add
fidivrl
push
lcall
or
mul
mov
scas
jle
ds
xor
pop
cwtl
stos
in
repnz
sub
sbb
orl
mov
roll
push
imul
mov
fnstenv
pusha
adc
inc
cmpsl
xchg
mov
enter
sti
out
sbb
xchg
into
test
inc
pushw
subb
xchg
mov
or
dec
int3
nop
push
orb
pop
lds
or
lret
mov
lds
cmp
cmp
fldenv
jnp
aaa
xchg
push
mov
mov
jp
pop
pop
push
mov
mov
pushf
push
mov
mov
cld
and
add
addb
mov
out
lcall
cmpsl
push
aaa
popl
pushf
inc
out
jno
scas
inc
lret
pop
pop
mov
xchg
inc
movsl
push
xchg
repnz
mov
xchg
mov
mov
mov
jl
lret
sbb
cmc
push
jns
out
cld
fsubrs
mov
imul
mov
sbb
xor
dec
push
push
sahf
add
push
pop
pop
ljmp
hlt
push
scas
ds
shl
jmp
sbb
push
nop
inc
push
lret
sarb
jnp
mov
test
mov
xor
fidivl
fistpl
pop
jnp
fisttps
or
or
stos
dec
faddl
mov
cs
mov
hlt
leave
loopne
stc
push
jle
and
mov
lds
dec
cmp
ret
clc
jne
xor
add
jb
mov
push
out
ds
xor
stos
je
into
pop
jmp
loop
mov
lcall
out
add
mov
clc
sar
jne
in
or
lahf
and
enter
add
cmp
push
cmc
cld
inc
push
xlat
aam
mov
clc
inc
push
pop
cmpsl
lds
lea
dec
xchg
inc
dec
test
xchg
inc
mov
add
inc
jle
out
in
lcall
lods
xor
and
pop
pushf
es
cmpsl
pop
push
cmp
cmpsb
jmp
jmp
cwtl
push
push
out
jb
xor
nop
sbb
bound
pushf
sub
dec
pop
in
mov
call
push
cli
js
xchg
das
adc
bound
or
cltd
push
jae
sbb
int3
mov
sbb
push
jl
pop
jg
mov
popf
iret
inc
cli
inc
in
inc
shl
arpl
jp
push
fnstcw
inc
int3
pop
sti
mov
cmp
stc
in
inc
xchg
adc
test
xor
lods
inc
fucomip
ljmp
stc
and
pop
mov
inc
sub
and
call
xor
mov
push
call
fidivl
cli
pop
pop
dec
adc
jle
dec
jbe
out
mov
xlat
sub
setg
sbb
int3
push
xor
sbb
arpl
mov
lods
push
sbb
mov
lea
fsts
clc
aam
pop
mov
lahf
test
fstpl
iret
xchg
add
jmp
je
enter
les
inc
mov
add
mov
cmp
sbb
pop
push
clc
ss
clc
int
fcmovnu
sub
inc
adc
aad
in
mov
sub
push
xchg
popf
sbb
add
ds
clc
fucomi
js
out
sub
cmpsb
lcall
sub
adc
stos
jo
outsb
inc
call
pop
insl
xlat
sub
dec
and
inc
loopne
outsb
cmc
and
adc
xchg
arpl
inc
jo
or
xchg
insb
and
in
cmp
and
or
stos
xchg
dec
dec
sub
mov
push
call
mov
lahf
xor
out
roll
divb
and
jge
cwtl
cmp
popa
cltd
push
sub
imul
outsl
pop
and
and
xchg
xchg
ficoms
mov
fadds
lds
jns
add
xchg
push
sahf
or
movsl
ss
movsb
lock
rorb
jmp
pop
out
ds
pop
inc
xor
testb
adc
clc
fisttps
mov
jl
cltd
mov
in
cmpl
adc
cmp
cltd
push
pop
sub
mov
test
data16
ret
mov
push
push
mov
xor
incb
add
jne
cwtl
fstl
jecxz
cmp
call
mov
in
loopne
scas
mov
sub
aad
xchg
stos
jo
xchg
fs
pop
pop
jge
mov
inc
sub
out
fwait
mov
cmp
in
push
inc
shll
daa
add
adc
js
mov
jl
jmp
pop
out
aad
pop
xchg
cmp
mov
insb
push
add
mov
or
fwait
jb
cld
cmpsl
testl
lds
lahf
fwait
daa
insl
lcall
sarb
sbb
mov
outsl
mov
ljmp
push
seta
sub
jecxz
xchg
cmp
into
push
pop
les
sbb
loop
gs
arpl
or
imulb
stc
jmp
adc
xchg
mov
dec
pop
mov
dec
fsubs
shr
jge
out
mov
fidivs
lea
aas
mov
pop
movsl
nop
add
mov
das
dec
pushf
xchg
push
andb
es
jg
and
mov
xlat
inc
fdivr
jbe
pop
gs
xchg
in
jbe
push
icebp
lcall
aas
loopne
test
adc
inc
add
fs
aaa
in
test
popa
fsts
push
fisubs
les
loop
cmp
test
sbb
xchg
xor
pushf
xor
pop
sub
sbb
xchg
xchg
push
stos
lret
adc
add
mov
int
jmp
mov
lea
icebp
add
clc
js
or
out
xchg
jbe
xchg
push
push
sbb
mov
xchg
xchg
test
icebp
cltd
xchg
loope
mov
mov
mov
or
adc
sub
mov
pop
push
rorl
dec
push
cltd
dec
ret
in
mov
call
adc
imul
pop
and
xor
xchg
push
scas
mov
arpl
xchg
mov
std
iret
dec
pop
addr16
mov
and
ficoms
sahf
iret
dec
jecxz
sub
sbb
xchg
mov
les
in
jne
fisttpll
jne
js
mov
call
xor
cld
mov
mov
mov
outsl
push
aad
sar
inc
lods
push
loopne
bound
test
jle
mov
or
loop
pop
dec
lahf
jg
push
xor
add
push
adc
mov
scas
sahf
faddp
jg
stos
jb
hlt
jnp
test
inc
lods
add
add
mov
lret
mov
es
pop
jae
xor
fwait
dec
andl
mov
sti
enter
mov
push
sarl
jp
cltd
xchg
fistps
pusha
add
adc
xor
jge
jge
ja
xchg
add
cmp
push
mov
dec
in
clc
push
rcrb
push
ds
mov
sbb
subb
xchg
pushf
mov
rorb
scas
inc
mov
inc
xorl
jmp
sbbl
ficoml
lock
mov
pop
ret
xlat
sbb
sbb
in
in
and
movb
xor
hlt
insb
fbld
add
mov
add
andb
lret
push
jbe
sub
lcall
out
add
sub
jo
pop
fs
dec
dec
imul
pop
test
and
xor
push
add
pop
xchg
test
rcrb
or
shl
lcall
add
je
and
push
dec
gs
push
mov
mov
icebp
fdivrs
adc
pop
cmc
repz
andl
pushf
cld
dec
adcb
and
nop
mov
test
xor
mov
sbb
in
movsb
mov
push
xchg
outsb
sbb
sub
and
stos
fimull
inc
int3
fisubrs
xor
pushf
sbb
cwtl
lahf
aaa
lcall
aam
push
pop
pusha
pop
mov
notl
and
adc
aas
ds
add
xchg
push
bnd
in
pop
xchg
out
sar
scas
mov
push
cmp
das
and
daa
fwait
sbb
adc
adcl
ss
imul
jge
jmp
das
out
add
add
push
mov
xor
push
add
dec
aaa
and
mov
mov
mov
dec
pshufw
lret
insl
and
loopne
cwtl
sub
sbb
cmp
push
cmc
lret
test
dec
fwait
cmp
xor
lcall
out
jmp
ret
or
idivl
je
pop
cmpsb
push
fnstsw
inc
add
mov
daa
lds
ficoms
repz
sbb
mov
fadd
adc
mov
pop
sub
repnz
dec
mov
pop
add
lret
mov
imul
lahf
dec
bound
mov
xlat
fisttpl
xchg
pop
mov
cmp
jno
and
dec
sti
call
iret
aad
negl
test
sti
ja
pusha
cltd
pop
xchg
jge
jge
inc
test
cltd
pop
outsb
movb
addr16
xchg
jl
xchg
pusha
inc
dec
test
shrl
fidivs
mov
dec
sub
mov
mov
fstpl
fnstenv
mov
xchg
mov
or
incb
pop
loop
mov
xchg
jnp
push
ret
pop
cmp
sub
mov
mov
mov
in
pop
mov
xlat
push
sub
lods
lret
aas
dec
jg
mov
test
in
neg
mov
mov
mov
repnz
out
clc
into
mov
push
cmp
cmp
xchg
imul
popa
mov
jb
ret
mov
mov
gs
add
movsl
push
mov
jle
jge
aad
and
aas
adc
inc
ljmp
jne
jne
or
mov
add
sti
imul
in
fs
sub
fnstcw
in
sbb
out
pushf
inc
fildl
mov
popf
ror
call
and
adc
shlb
rorl
je
ds
xor
adc
sub
cmp
popa
xor
icebp
xchg
in
test
dec
movsl
sbb
int
adc
or
shr
push
xor
out
and
jb
jl
mov
xchg
mov
mov
mov
loopne
js
sub
mov
stos
push
cld
adc
pop
mov
pop
aam
sbb
mov
dec
cmp
cmp
icebp
adc
or
mov
xlat
idivl
jge
out
cs
xor
xchg
mov
pop
inc
inc
jp
lret
rclb
shlb
mov
jne
and
dec
xor
mov
jl
int
loop
out
cmp
repnz
cs
and
and
mov
mov
imul
dec
and
cmpsl
movsl
popf
repz
icebp
push
jnp
and
ret
adc
bound
call
das
movsl
dec
dec
sub
push
ljmp
sub
imul
sub
cmpl
bound
in
pop
inc
jae
popa
in
cs
pop
pop
and
cmp
push
sbb
dec
adc
jmp
jecxz
pop
ret
sarb
lcall
jno
mov
mov
add
push
out
mov
mov
or
adc
icebp
data16
pop
das
ja
sbb
push
mov
ds
mov
mov
jmp
mov
mov
in
sbb
stos
test
sbb
pushf
pop
sti
and
jl
test
iret
push
aam
mov
inc
pop
cld
ret
sub
fldt
sbb
imulb
sbb
mov
insb
test
lea
mov
xor
out
test
das
lea
jnp
shlb
and
xchg
pop
add
mov
rolb
mov
add
add
loopne
into
cld
xchg
push
pop
xorl
sub
out
enter
fsubl
fdivl
add
adc
mov
xor
xchg
lods
dec
popf
lahf
je
adc
mov
lock
cmpsb
mov
jl
mov
ds
xor
gs
arpl
loopne
and
dec
mov
lahf
cmpsl
imul
cmp
mov
jmp
xlat
ret
inc
stos
jle
inc
in
das
pushf
lods
pop
xchg
ljmp
mov
lret
cmp
pop
sub
push
fcomip
addl
cs
push
xchg
nop
adc
lock
dec
insl
pop
mov
iret
cmc
loopne
add
lret
fs
test
enter
lar
mov
popf
pop
data16
ja
xor
test
mov
jb
xchg
aas
popf
insb
mov
sti
int3
imul
in
jns
fiadds
repz
mov
sti
mov
xor
dec
pop
pop
ljmp
pop
testl
pop
add
in
or
popf
outsl
loop
stc
and
nop
adc
jno
xabort
add
push
adc
jnp
das
imul
jmp
mov
mov
add
jo
dec
xor
enter
sarl
insb
push
jne
pushf
jno
mov
repnz
dec
pushf
pop
mov
jbe
push
and
push
xor
fsts
mov
dec
in
mov
clc
cmpsb
jnp
fmull
movsl
ja
mov
cmp
into
dec
xchg
les
cmp
push
push
aaa
lret
dec
test
cli
dec
push
fwait
cmp
ret
xlat
push
lret
arpl
mov
or
adc
data16
pop
sbb
jno
ffree
dec
aas
dec
adc
or
mov
or
mov
cld
push
inc
sub
ljmp
cld
sbb
pushf
fnstcw
inc
les
test
test
repz
cmp
cld
inc
jl
jmp
scas
stc
bnd
jo
lahf
adc
bound
cld
imul
or
adc
sub
add
push
jl
pop
fidivs
cmp
push
adc
fmull
push
lret
fisubrl
jp
movsb
xchg
nop
rcr
in
jecxz
idivb
cwtl
cmp
fnstcw
pshufw
xor
add
stc
push
push
fnstcw
insb
sbb
jb
nop
inc
inc
and
lea
fistpl
mov
dec
repnz
jge
pop
nop
xor
lret
pshufw
out
fwait
mov
loopne
arpl
stos
lods
rcrl
dec
out
xorl
mov
add
loop
aaa
and
mov
aam
cli
inc
js
mov
ss
or
push
daa
bound
fsubl
mov
notl
push
mov
dec
lock
sarb
cmp
test
jno
xchg
fidivrs
sub
sbb
adc
stc
jb
mov
cwtl
nop
mov
cs
mov
fwait
add
ds
cld
inc
push
add
imul
lea
lea
sub
lret
push
popa
and
out
sar
pop
adc
dec
mov
pop
out
pop
jnp
je
push
cmpsb
jns
inc
into
inc
cmp
in
rcl
rol
and
and
dec
jmp
je
inc
movsl
fiadds
addr16
adc
test
xlat
sbb
or
xchg
pop
mov
loop
pop
addr16
dec
mov
out
lds
popf
xchg
cmp
mov
xchg
movsl
iret
push
and
daa
sbb
xor
imul
xor
or
mov
mov
add
out
sbb
stos
cmp
inc
add
aaa
aaa
jmp
imul
mov
dec
mov
or
mov
stc
test
dec
test
pushf
test
xlat
or
mov
pop
ljmp
inc
mov
gs
sub
mov
aas
jnp
adc
mov
or
out
out
out
test
lret
in
call
ss
mov
lcall
fdivr
cwtl
test
rcll
sub
aaa
lea
stos
cmpsb
clc
aas
pop
mov
adc
ret
lods
push
xchg
les
stc
sarb
nop
into
or
testl
sbb
aas
inc
arpl
jmp
aam
pop
in
sbb
and
es
mov
stc
aas
sub
aam
fs
enter
int3
cmp
scas
jg
test
int
std
leave
ds
stc
xor
xor
out
push
sub
cmpsb
jmp
mov
xor
out
sbb
mov
jl
jmp
push
fs
jo
divb
and
test
clc
data16
iret
scas
mov
test
push
rcrl
hlt
in
loopw
xchg
imul
enter
cwtl
neg
push
jbe
xchg
testb
or
xchg
lock
jle
xchg
and
cmp
ret
adc
clc
add
ja
addr16
popf
ffree
inc
lods
jb
add
mov
and
stos
pop
repz
adc
jle
xchg
push
imul
test
cmp
xlat
add
jmp
in
pushf
mov
sub
imul
add
jnp
ljmp
ficoml
mov
pusha
xchg
popw
add
and
pop
dec
pop
dec
or
repz
sbbl
jbe
xor
pop
adc
mov
xchg
mov
inc
mov
or
outsb
test
jmp
scas
xor
jl
mov
fisubrs
inc
fcmovne
sbb
add
mov
rcrb
insl
cmp
jb
cli
add
xor
fdivrp
fs
dec
adc
jae
outsl
cmpsb
pop
mov
dec
shlb
testb
call
enter
pusha
jecxz
xor
cmpsb
loopne
pop
xor
enter
les
xor
rorl
inc
pop
mov
jg
popl
pop
push
mov
leave
cmp
aad
repnz
sahf
std
add
sbb
std
movsl
scas
ds
dec
xchg
mov
das
rcr
adc
cwtl
test
pop
or
fldt
add
in
mov
dec
sahf
out
cmp
xchg
gs
int
or
push
scas
lcall
xchg
scas
mov
xor
aas
mov
jecxz
aaa
std
dec
sbb
into
sub
insb
mov
add
ja
mov
sbb
aam
out
adc
xor
popf
out
dec
mov
lea
je
test
adc
mov
dec
inc
sbb
xchg
and
jo
lds
xchg
int3
dec
lret
jb
fcomps
lret
sbb
fisttpl
adc
in
ljmp
mov
das
pop
mov
inc
sti
mov
or
lods
sub
out
lret
mov
xor
popa
and
xchg
and
pushl
xchg
sbb
and
pop
shlb
sub
and
cld
xor
jmp
js
inc
adcb
mov
mov
ss
insb
addb
inc
insl
inc
outsl
cmp
daa
fmul
jge
dec
repz
bound
pop
in
mov
pop
jno
push
pop
cmp
mov
jae
test
mov
das
data16
or
xor
in
jb
lret
jp
sbb
xchg
out
pop
daa
sbb
pshufw
sbb
mov
not
jmp
push
lds
xchg
fimuls
jge
cmp
jbe
pop
pop
cld
in
mov
inc
mov
int3
xchg
xchg
and
adc
xor
cwtl
int3
push
adc
jbe
jne
aad
xchg
and
hlt
xor
sbb
data16
inc
int3
add
inc
adc
int
sbb
lret
js
sti
icebp
es
fisubrs
in
fs
repnz
not
cmp
mov
sti
cmp
leave
cmp
test
dec
adc
std
mov
adc
mov
popf
pop
test
dec
out
push
cmp
rorl
xchg
mov
inc
call
into
jg
mov
and
out
sub
ljmp
outsl
xorb
int
es
cs
lds
xchg
sbb
jp
fcmovnbe
mov
mov
dec
cmc
fs
ja
add
insb
lods
pusha
mov
mov
in
xchg
mov
daa
sub
inc
jecxz
sbb
aas
jnp
in
ret
or
lret
shr
push
or
dec
dec
lcall
dec
cmp
jl
mov
into
jbe
xchg
pop
jb
mov
daa
lahf
fisubl
jbe
lods
daa
mov
push
dec
shll
ficoms
je
movsb
mov
f2xm1
adc
add
es
mov
dec
xlat
dec
out
enter
lock
add
sbb
std
mov
dec
aad
mov
stos
xor
xchg
les
mov
fs
inc
push
pop
mov
jmp
notb
push
pop
inc
fcomi
imul
fdiv
push
je
mov
sar
divl
daa
push
or
fdivr
jmp
pop
lods
stos
adc
enter
mov
sarb
mov
cmp
mov
cwtl
pop
jle
into
push
jle
into
push
push
adc
cmp
pop
xor
sbb
icebp
jno
inc
mov
mov
shl
ja
adc
int
cmp
mov
push
inc
push
sbb
adc
filds
mov
pop
jo
jns
inc
mov
push
dec
xor
inc
sti
push
adcb
jns
in
push
xor
cld
jle
mov
push
cmp
mov
mov
xchg
and
cmpsb
jne
add
loopne
outsl
jmp
lock
sbb
sahf
push
sbb
xchg
xchg
das
or
das
or
lods
js
cmp
jp
andb
sbb
xchg
out
push
aas
loop
mov
in
test
scas
cwtl
mov
lods
push
push
pop
mov
and
stos
out
dec
mov
push
or
lea
stos
sbb
jbe
inc
fcoml
or
test
jns
xchg
es
add
mov
mov
ret
adc
test
mov
ss
mov
push
xor
mov
xor
and
pop
loope
popa
mov
add
mov
push
lock
dec
jmp
or
insb
ljmp
les
and
dec
jle
fwait
dec
mov
xchg
jae
xor
adc
cwtl
sarb
scas
dec
sub
inc
pop
inc
hlt
callw
push
mov
hlt
or
sub
test
in
scas
jns
in
into
jmp
das
int
xchg
shr
insb
lods
fsubrp
jecxz
pushf
mov
test
pop
roll
aaa
cmc
int3
mov
cltd
insl
out
sti
repnz
pop
add
outsl
mov
movb
fdivrs
repnz
inc
and
dec
pushf
loop
xlat
ljmp
and
in
and
stc
cld
ret
or
inc
es
test
out
ljmp
add
lods
mov
aad
and
sbb
clc
pop
dec
movsl
pop
xchg
mov
jbe
and
shrl
add
fndisi(8087
cmp
mov
pop
and
sub
fisubrl
inc
jne
insl
mov
push
shlb
add
dec
jb
loope
dec
or
and
mov
jb
mov
sub
xor
cmpsb
call
jb
jns
pushf
sbb
sti
dec
std
cmpsl
lods
enter
add
add
out
imul
mov
mov
movsb
dec
enter
test
mov
and
add
and
addr16
ret
int3
ljmp
ret
loopne
faddl
adc
pop
jge
mov
xor
outsb
xchg
mov
orb
xor
dec
sub
cs
jnp
insl
mov
mov
push
and
sbb
jg
mov
mov
fwait
out
leave
shll
push
fs
subb
nop
jno
inc
sbb
sbb
or
adc
jns
jo
ficompl
lods
js
xchg
and
bound
jbe
mov
mov
sbb
je
pop
fs
scas
insb
nop
adc
and
bound
imul
adcl
pusha
shll
adc
sub
push
ret
sub
mov
testl
cmp
add
call
daa
dec
mov
mov
xchg
or
icebp
xor
das
adc
xchg
push
cld
aam
mov
jecxz
push
adcb
push
sub
sarb
stc
lret
enter
rorl
inc
popa
fiaddl
ret
out
mov
jns
add
or
add
add
stos
xchg
mov
jo
pop
mov
sbb
out
jno
aad
mov
aas
inc
cmp
cmp
scas
xchg
movsl
adc
lods
pop
fucomp
lock
inc
popf
fcompl
je
out
xchg
mov
test
nop
repz
push
pop
sbb
das
jne
aam
push
add
je
test
mov
es
dec
pop
leave
cmp
adc
insl
test
iret
cmc
xchg
jb
push
addr16
mov
flds
outsl
adc
jp
xor
jo
xchg
mov
jbe
fisubrl
jmp
daa
dec
mov
aam
jmp
nop
push
pop
jge
xor
cltd
jp
xor
adc
mov
cmp
mov
adc
daa
addb
xchg
pop
arpl
outsl
sti
lds
add
cmp
out
jmp
inc
mov
sbb
mov
and
scas
push
dec
and
adc
and
testl
gs
add
mov
addr16
inc
push
mov
call
out
sti
ljmp
dec
jp
pop
repnz
lock
cwtl
lods
adcb
std
insb
mov
fs
outsb
cmp
jmp
icebp
test
fwait
fs
das
ja
sub
and
xor
cmpsl
and
loope
jecxz
mov
sub
inc
dec
xor
cltd
sub
lds
xor
push
dec
push
enter
popa
stos
pop
xchg
mov
dec
repnz
vrsqrtss
inc
out
in
aam
jb
das
mov
repz
push
or
loop
lods
cmp
lret
out
inc
fdivrs
lods
cmpsb
adc
into
daa
rcrl
fwait
je
movsl
pop
shl
rcll
add
xchg
mov
xchg
cmp
int
push
lods
nop/reserved
xor
popf
jns
std
cmpsb
xor
addr16
dec
mov
aam
andb
iret
sahf
bound
insb
jg
aas
mov
push
push
or
push
pop
outsb
test
js
mov
sbb
mov
xor
bound
ficoms
fstpl
ljmp
xor
cld
sahf
sub
push
xchg
cmc
es
fidivs
sub
and
bound
xor
in
mov
sub
mov
lock
cmpb
lahf
pushf
inc
out
lods
js
jg
push
movb
cmpsb
mov
inc
xor
xor
jmp
mov
add
repz
pextrw
cmp
sub
icebp
leave
jbe
push
shrb
inc
insl
ss
test
cmp
cmc
mov
bnd
inc
xor
lcall
pop
stos
stos
or
cmp
das
xchg
xor
in
mov
push
add
imul
mov
push
les
testb
ljmp
decb
adc
sub
out
aaa
fstpt
add
sti
out
mov
in
or
push
lds
bound
pop
int3
adc
and
loopne
mov
jno
or
dec
lret
loope
adc
mov
xchg
lods
adc
jle
inc
dec
xchg
jo
mov
xor
std
rcll
xchg
ljmpw
push
fstpl
mov
mov
xor
lahf
cmp
cmp
fdivrs
add
jmp
mov
or
mov
mov
adc
xor
clc
and
mov
xchg
pop
shrl
fwait
and
je
cmpsb
ret
lret
push
sbb
in
out
jg
das
cmp
inc
mov
adc
cltd
add
fwait
es
pushf
into
sbb
mov
adc
jno
cs
mov
stos
xchg
clc
xlat
fistpll
inc
lods
loope
fnstenv
sub
push
jl
cmc
xchg
sub
repnz
mov
mov
aas
into
dec
xchg
dec
xlat
cmp
leave
add
ss
lret
out
and
daa
sub
jnp
icebp
and
push
pop
pop
inc
xchg
mov
and
out
and
sti
cmpsl
inc
pop
jnp
addb
push
add
lds
push
mov
pop
add
outsl
lock
cld
nop
xor
jl
jl
push
jo
lock
jle
movsl
insb
lds
aam
je
pop
jp
outsb
mov
pop
dec
pop
dec
insl
push
outsl
rclb
stos
push
xchg
sub
shl
imul
lock
mov
adc
sub
mov
mov
mov
sti
push
adc
lret
cs
rol
cwtl
mov
mov
sbb
mov
pop
mov
mov
add
inc
or
in
dec
cmpsb
fcomi
xchg
enter
inc
xchg
test
push
jb
std
adc
fbstp
xchg
into
sub
push
push
xchg
loopne
ret
fs
clc
pop
pop
cmc
jmp
jge
add
mulb
adc
int
pop
dec
cmp
sbb
cld
scas
ljmp
sub
lods
stos
shlb
cmpsl
lret
sbb
add
shl
jmp
dec
stc
cmpsl
xor
mov
pop
inc
and
mov
jnp
pop
and
mov
or
sti
mov
inc
stc
push
mov
or
call
mov
bound
out
aaa
adc
mov
pop
jl
aad
int
cmp
fs
jg
xor
adc
outsb
dec
and
push
jno
fisubrs
loope
iret
mov
inc
mov
inc
fidivs
pop
sub
imul
xchg
addr16
jg
mov
test
sahf
add
sub
sahf
sbb
movsl
in
jo
dec
fidivrl
adc
sub
adc
xchg
addr16
push
pop
out
xor
mov
jo
pop
add
or
jg
mov
xchg
mov
sbb
pop
pushf
jge
rcrb
sti
push
popl
dec
add
mov
popf
cwtl
idivl
cmp
das
inc
or
dec
xchg
push
push
loopne
dec
pop
jl,pn
pop
insb
lret
pusha
inc
int
inc
insb
xor
xor
pushf
pusha
sub
sub
xchg
cmp
jo
cmp
jns
dec
jnp
mov
repnz
ja
xor
sti
mov
xchg
mov
mov
jl
push
jmp
adc
lcall
std
test
lea
mov
movsb
pop
loope
pop
lcall
loopne
adc
xchg
mov
inc
mov
dec
ljmp
icebp
inc
fisubrs
sub
cmp
pushf
jle
xchg
in
and
ds
push
shl
aad
mov
push
mov
sbb
ljmp
cs
scas
mov
lds
shlb
imul
leave
jle
pop
imul
testb
jns
sarl
jl
mov
xchg
sub
in
mov
jae
mov
faddl
jns
pop
lcall
push
and
pop
or
pusha
dec
add
daa
test
lods
in
lcall
stos
and
test
cmp
das
int
lock
lahf
mov
iret
inc
outsb
shlb
js
mov
and
push
je
mov
or
mov
pop
jle
dec
mov
mov
ja
rolb
mov
or
addr16
cmp
data16
ret
sbbb
scas
jo
ficoml
pop
lcall
int3
mov
pusha
rorb
push
cmp
lock
adc
cmp
push
mov
and
cmp
cmp
jge
add
ss
std
movsb
outsl
mov
add
sbb
mov
fbstp
jo
lods
adc
std
push
dec
inc
cmp
loope
mov
lods
loopne
cmp
ret
cltd
ss
in
test
rorb
and
icebp
pusha
inc
push
mov
jmp
sti
rorb
jnp
pop
and
lods
add
test
inc
mov
dec
cld
pop
xchg
sub
or
mov
pop
dec
dec
sbb
rclb
xchg
sahf
push
dec
cmp
notl
or
outsl
call
mov
adc
popl
imul
lods
push
stc
fcompl
aad
or
dec
mov
lret
cmp
cmp
shlb
lock
sub
sbb
imul
scas
xor
rclb
xorl
jl
stc
pop
arpl
out
sti
outsl
ss
aaa
sbb
push
daa
imul
leave
arpl
push
nop
sbb
jb
xchg
add
adc
mov
pop
adc
repnz
ret
cmp
adc
dec
sbb
mov
and
add
shll
in
hlt
dec
adc
cmovne
sub
pop
xor
lcall
xor
sar
jns
xorl
das
adc
in
inc
xor
push
pop
clc
in
movsb
or
cmp
jp
mov
pop
inc
je
xor
sahf
fstpl
in
push
mov
int3
inc
jp
mov
mull
int
sub
push
jecxz
xor
dec
cmp
push
lret
ret
in
mov
rorl
popa
cmp
mov
lahf
cltd
push
push
loopne
testl
sbb
or
jl
cld
jo
mov
xor
lcall
ret
pop
xchg
imul
push
dec
and
sub
out
lds
add
sbbl
test
bound
pushf
push
mov
fnsave
mov
pop
rcrb
lea
sub
imul
push
push
inc
outsl
fwait
xchg
call
ds
call
lcall
test
mov
pop
push
repz
in
xorb
mov
rep
jne
int
mov
or
cmp
xorl
imul
mov
push
mov
add
sti
cmp
aad
adc
mov
lret
insb
sub
dec
add
jle
lds
xchg
cs
lods
add
loope
or
mov
dec
loopne
int3
sbb
mov
cs
sbb
outsl
push
sbb
in
ficoml
stos
pop
loope
gs
inc
inc
data16
xor
enter
mov
ret
and
sub
mov
jo
push
decb
mov
mul
mov
pop
cmp
jne
mov
in
nop
clc
aam
cmpsb
lods
jmp
pop
pop
sbb
stc
ret
adc
pop
or
ljmp
xlat
mov
sbbl
or
ljmp
xchg
push
mov
or
gs
mov
in
mov
cmc
jno
dec
pop
popf
adc
jle
psadbw
setp
dec
and
pop
nop
dec
jmp
xchg
fs
mov
mov
fadds
sbb
jnp
cmp
pop
fidivs
xchg
lahf
inc
dec
js
mov
mov
packuswb
in
jmp
mov
mov
outsl
xchg
mov
inc
sub
jo
movsl
out
mov
lods
fs
pop
je
mov
popa
fstp
scas
push
jns
imul
or
sub
xchg
sub
mov
addr16
lds
inc
jnp
int
mov
scas
pop
adc
pop
and
jge
and
dec
sub
mov
scas
sbb
call
pop
xor
daa
pushf
cmp
jno
test
out
cmp
mov
add
pop
mov
pop
dec
sti
jae
loop
inc
std
repnz
pusha
popf
jne
adc
stos
cmp
inc
mov
add
sahf
sub
xchg
or
or
xchg
push
jecxz
leave
imul
lea
sbb
adc
xchg
adc
jo
xlat
cmp
xchg
jle
jo
xchg
and
addl
shll
cmc
xor
int3
sbb
or
mov
add
or
popa
bound
aam
mov
sbb
xor
shlb
pop
stc
es
cmc
scas
push
fwait
xor
xchg
dec
out
jb
push
and
add
lock
sub
cmp
loope
cmp
rorl
jl
clc
sub
sti
pop
xor
sub
ret
jo
mov
data16
push
pop
jle
lds
add
or
bound
popf
fs
cmp
jp
daa
push
loop
sti
inc
jecxz
xor
int3
addr16
into
call
jmp
push
fiadds
bound
jno
imul
pop
call
sub
inc
mov
shrb
pop
or
jo
daa
lret
sub
xchg
sub
movd
pop
pop
int3
xor
aad
pusha
stos
pop
lret
sbb
mov
repz
lahf
and
cmp
inc
sbb
add
notl
adc
addr16
sub
pop
sbb
push
xlat
xor
mov
das
movsl
mov
out
push
aam
inc
pushf
inc
loopne
and
pop
pop
ror
sub
mov
pop
movsb
shr
mov
lret
lret
xor
push
fildll
push
add
cmpsb
fwait
jg
jno
adc
dec
pop
inc
pop
cmp
cmc
mov
sub
fistps
cmp
jo
and
stos
mov
call
lcall
or
cmp
mov
fwait
xchg
stos
pop
out
scas
and
pop
push
push
mov
and
out
mov
loop
mov
xor
dec
push
outsl
into
fisubl
popf
xchg
leave
mov
mov
in
call
jge
nop
xchg
xor
pop
stos
dec
hlt
nop
and
jbe
push
xor
mov
hlt
xchg
sub
jb
dec
inc
mov
lods
aaa
out
mov
jg
push
fbld
cmp
mov
dec
dec
dec
jbe
push
jbe
push
icebp
sub
ficoml
inc
push
dec
sub
data16
leave
cmp
cmc
fidivrl
sub
push
test
lahf
jge
push
fdivl
in
loopne
movsl
sbb
sahf
cmpsb
lds
ds
pushf
idiv
push
std
lret
cmpsl
xchg
shl
dec
mov
jno
xor
add
std
cltd
pop
cmp
stos
leave
cli
add
fstps
test
lods
jbe
outsb
mov
mov
imul
or
dec
jl
pop
and
in
les
add
add
push
movsl
cwtl
cmpsb
mov
jne
icebp
push
loopne
lea
mov
cmpsb
dec
and
cltd
pop
in
dec
pushf
mov
inc
mov
or
cmp
adc
add
xor
xchg
hlt
mov
rorb
mov
dec
inc
push
push
addr16
cld
out
inc
in
sub
in
xor
pop
jnp
shll
push
mov
fcmovnu
jl
rorl
mov
or
mov
out
jae,pn
test
xor
push
adc
xor
insb
xor
lock
test
inc
mov
int
pop
pop
stos
daa
sbb
inc
testb
sti
enter
ficoms
inc
iret
mov
jge
ds
and
jle
addr16
mov
fs
xchg
add
adc
into
je
mov
stos
lods
mov
pop
push
movsl
xor
loop
cmc
mov
add
daa
hlt
repnz
pop
ds
fs
ds
inc
lods
scas
push
mov
scas
imul
mov
fnstsw
repnz
fwait
xchg
xchg
enter
das
jl
dec
push
fs
stos
adc
roll
shlb
das
xchg
call
repz
pop
lcall
fsubrl
sbb
mov
sbb
cli
call
sbb
mov
and
mov
in
mov
lcall
xchg
stc
orl
movsl
sub
and
sbb
fisubs
dec
and
mov
mov
out
insl
push
adc
add
pop
icebp
aam
daa
out
jecxz
test
push
dec
arpl
imul
lods
pop
orb
push
pushf
jg
sbb
andnps
aas
add
xor
daa
xor
jl
sbb
lahf
add
pusha
pop
xchg
mov
and
shl
sbb
cmp
lods
lock
jb,pt
shll
sahf
hlt
aas
push
pop
push
lea
lahf
or
daa
push
bnd
lds
adc
push
repz
xchg
loope
repnz
jbe
loope
repz
push
test
xor
scas
push
out
add
lret
dec
sbb
and
jmp
std
daa
ljmp
daa
lds
sar
pop
xchg
mov
dec
jge
lods
jmp
lret
pop
xorb
leave
shrb
test
xchg
scas
jl
ffreep
mov
mov
sub
adc
in
jne
fistpl
jmp
popf
inc
mov
xchg
movsl
aam
pusha
jl
xchg
dec
inc
add
outsl
shll
loope
sub
mov
fldpi
imul
push
pusha
icebp
and
cld
push
div
repnz
jle
popa
sub
mov
cltd
inc
in
add
adc
adc
mov
daa
or
jmp
into
inc
mov
ss
stc
jns
out
push
aam
pop
xchg
lods
dec
jg
xchg
stc
add
sbb
push
or
nop
jle
jp
stc
mov
sbb
mov
pop
dec
or
xchg
cwtl
aaa
movsl
push
dec
push
insb
and
out
out
lock
test
je
scas
xor
jno
mov
jne
mov
add
push
sub
sub
pop
sahf
inc
sbb
cmp
call
aas
sbb
mov
loope
shl
loopne
inc
or
jnp
mov
lahf
mov
hlt
add
fstpl
sbb
jnp
insb
pop
cmp
clc
push
insl
dec
cs
lret
fbld
add
or
jg
push
stos
mov
cld
ljmp
mulb
xor
pop
jno
adc
arpl
aas
lret
adc
inc
push
xor
fs
fildl
aaa
fisubrs
adc
cltd
dec
test
cmc
sub
dec
mov
pop
adc
fdivrl
pop
and
ret
movsb
cltd
xchg
dec
lock
cli
lret
dec
adc
adc
jnp
or
out
repz
or
popf
adc
insb
push
push
mov
push
aam
xor
outsl
mov
iret
pusha
adc
sbb
ljmp
jnp
in
pop
aas
lcall
jle
cmp
inc
jae
dec
or
mov
mov
mov
adc
shlb
xchg
into
jnp
mov
int3
in
enter
scas
scas
dec
pop
dec
in
xchg
imul
jle
cmp
add
cli
pushf
mov
call
shrl
lret
mov
add
shll
mov
movsb
or
lret
inc
cmp
call
and
mov
mov
aas
adc
inc
jnp
sti
inc
xor
arpl
insl
cmpsl
aad
sbbb
das
aaa
mov
mov
jmp
dec
out
arpl
mov
cmp
push
jo
aam
sub
mov
out
jne
leave
in
aam
pop
cmc
sahf
test
ffreep
jmp
repz
push
and
shrl
adc
in
cli
jae
mov
leave
or
sub
sbb
mov
loope
idivl
cli
inc
icebp
cld
and
cmp
inc
mov
insb
test
pop
lahf
loope
loop
mov
pop
mov
scas
xchg
lret
je
subl
roll
push
sahf
mov
add
inc
addr16
mov
je
inc
mov
cmp
cmpsb
or
out
adc
xchg
cs
addb
mov
fsubrs
scas
fisubl
inc
cmp
clc
xor
loope
mov
ja
and
xor
test
out
in
sbb
sub
push
pop
adc
inc
pushf
inc
popw
push
xchg
or
xor
jbe
and
dec
sbb
jg
nop
lahf
js
mov
cwtl
jp
lcall
mov
mov
das
les
sti
inc
loop
out
sahf
jo
sbb
fwait
inc
stos
iret
lods
in
xchg
push
ljmp
mov
cmp
das
add
push
sub
in
pushf
leave
mov
adc
push
inc
aam
mov
mov
insb
and
lret
sbb
enter
mov
ret
push
fldt
push
cmp
xchg
mov
popf
out
pop
and
popa
jno
adc
sbb
mov
roll
adc
xchg
in
sbb
or
ret
rorb
fldt
aad
jns
xchg
push
stos
lret
fld
xchg
out
testb
fs
gs
mov
dec
jg
sub
je
or
repnz
movsb
push
js
clc
repnz
mov
jne
sbb
cld
pop
in
sbb
cmc
sub
out
pop
call
or
loope
mov
jb
mov
sahf
and
or
test
das
jmp
push
mov
imul
jo
push
addb
inc
mov
pop
adc
mov
dec
sahf
faddl
sbb
push
mov
insl
mov
jl
pop
rcrl
inc
push
test
jnp
jp
fadds
negl
ss
xchg
pop
or
sbb
roll
repnz
imul
inc
iret
adc
cwtl
xlat
jp
pop
insl
rdmsr
push
dec
cld
xchg
adc
sub
pop
lods
lods
popa
cmp
sub
cmp
push
aaa
xchg
dec
les
loope
fwait
xchg
aam
aad
inc
rcrb
movsb
dec
push
shl
dec
mov
inc
test
cwtl
mov
pop
push
sbb
sahf
mov
sahf
jne
test
data16
imul
arpl
movsb
fwait
repz
xor
shll
pop
repz
push
in
cmp
sbb
inc
xlat
jb
cld
sub
mov
push
push
jb
inc
pop
nop
and
or
lea
mov
sub
sti
cmp
cmp
sbb
std
xchg
stos
mov
pushf
dec
jl
sbb
and
mov
mov
jp
imul
imul
pop
hlt
and
mov
decl
mov
fiaddl
jo
stos
lods
xchg
arpl
adc
adcl
sub
in
jno
fstl
fidivl
xor
fnsave
loopne
cmp
and
or
addl
out
jo
pop
pop
inc
sbb
adc
data16
cltd
daa
cmpsb
or
mov
in
outsl
pop
add
roll
adc
mov
cmp
int3
mov
mov
fwait
arpl
or
sbb
popa
insl
loope
xchg
xor
xchg
sarl
pop
adc
jbe
jns
cld
xchg
iret
pop
pop
dec
xor
pop
call
out
pop
pop
ret
push
jl
pop
pushf
xor
insl
cmp
scas
xchg
loop
ja
xor
cmpsb
push
mov
or
aad
push
arpl
dec
and
lods
mov
fsubrs
call
dec
cli
mov
cli
jmp
and
lods
and
enter
xor
mov
insb
sbb
or
mov
pop
negb
jbe
test
lcall
ja
mov
jo
xlat
mov
mov
pop
mov
push
sti
jle
inc
int3
and
aam
dec
inc
leave
es
xor
adc
rolb
sti
inc
cltd
dec
sar
loop
pop
mov
sub
enter
lds
in
ljmp
jo
lahf
popa
pop
jno
repz
push
js
scas
outsb
xor
scas
lock
fcmovnu
test
movsb
or
divl
psubw
rorb
and
repnz
fcomps
in
mov
mov
insl
xchg
pop
sbb
inc
jnp
and
jmp
test
cltd
je
dec
push
pop
cmpl
lahf
fisubs
cmp
hlt
cld
ss
sub
push
les
mov
mov
or
push
cmc
popa
or
cmp
add
sbb
push
mov
dec
popa
mov
mov
mov
cld
add
movsb
loope
or
sbb
dec
test
jo
fildll
aaa
mov
mov
xor
add
xchg
std
mov
inc
jo
pop
jo,pt
stc
cli
add
cmp
dec
das
loop
inc
mov
dec
shll
lock
es
xor
adcl
data16
and
xchg
inc
push
lods
mov
xor
loopne
dec
mov
sub
scas
push
ja
dec
ret
adc
push
cltd
mov
cwtl
aad
popf
mov
jb
push
fldln2
inc
test
push
hlt
xor
push
pop
ficomps
bnd
ud2
mov
sub
jo
mov
in
repz
icebp
fwait
mov
dec
cmp
mov
dec
or
push
xchg
and
int3
lahf
imul
icebp
aas
jne,pt
mov
ret
inc
insl
int3
push
repz
sahf
fcoml
pop
jns
jae
std
cmp
adc
jmp
stos
mov
loope
stc
pushf
in
inc
xlat
adcb
ja
stc
xor
sub
nop
dec
gs
inc
pushf
xchg
pop
lods
xor
jecxz
dec
fisttpl
mov
dec
xchg
sub
popf
lret
lods
into
loop
mov
or
jg
in
add
or
mov
fildll
iret
xor
push
shrb
inc
xor
in
repnz
xchg
push
xor
andb
imul
xchg
jecxz
incl
lcall
mov
adc
in
aas
sbb
push
cmpsb
fildll
shl
in
int
rorb
fwait
sbb
out
out
sahf
push
mov
mov
or
sub
sarb
push
pop
pop
stos
int3
in
adc
scas
adc
add
cmc
mov
adc
mov
add
cmp
arpl
lahf
adc
add
outsb
ljmp
cmp
push
or
scas
fs
jle
pop
jbe
les
mov
mov
mov
mov
hlt
inc
mov
enter
mov
and
adc
mov
repnz
pushf
mov
loopne
clc
shr
cmp
adc
in
test
jge
and
movsb
int
mov
sahf
fldl
ret
add
cwtl
inc
imul
int3
push
inc
andl
inc
and
pop
and
inc
sub
repz
filds
repnz
lods
pop
sti
dec
mov
add
mov
pop
ret
in
insb
mov
sub
cmc
in
push
xorl
mov
addl
add
xchg
movsb
iret
cmpsb
mov
addl
sub
pop
adc
jle
sahf
fmulp
inc
dec
inc
std
jnp
xchg
test
xchg
pop
jle
sub
mov
sbb
in
test
or
popf
and
popf
push
mov
jae
imul
mov
and
out
sbb
aam
cmp
inc
loopne
push
subl
push
sbb
sub
mov
gs
out
dec
clc
sbb
adcb
int
or
idiv
xlat
xchg
adc
jns
sbb
add
lcall
inc
and
pop
pop
scas
mov
cmp
inc
jp
mov
and
fisttpll
jbe
push
into
pop
inc
or
cwtl
icebp
pop
stc
leave
das
jle
push
xchg
push
daa
sub
pop
jmp
cmp
rcll
fsts
fwait
sbb
mov
xchg
mov
push
fsubs
fbstp
add
iret
mov
aam
mov
mov
nop
mov
inc
ret
pop
mov
cs
int3
mov
lcall
jno
dec
mov
xchg
rcr
test
ja
jge
lea
testl
sbb
aas
cmc
inc
shlb
sahf
or
inc
lcall
loope
cmp
sub
fnstenv
js
daa
dec
jo
loopne
in
lret
pop
loopne
imul
test
pushf
lods
mov
stos
push
sti
mov
mov
pop
insb
outsb
adc
push
loopne
cmpsb
sti
and
jbe
dec
stos
cmp
cli
stos
shr
jo
pusha
add
mov
imul
data16
push
repnz
mov
push
inc
dec
inc
out
shlb
cwtl
inc
add
test
inc
pop
out
mov
inc
add
dec
pop
jbe
jae
js
cmpsb
mov
cmp
mov
sbb
movsb
lcall
mov
loope
leave
test
push
iret
outsl
or
loope
xchg
call
and
mov
int3
fists
outsl
push
xor
int3
jns
shlb
mov
jmp
sti
aas
fwait
sar
and
aaa
cmp
pop
pop
mov
mov
jae
sbb
pop
in
into
mov
rorl
jecxz
cs
mov
dec
bound
or
adc
dec
pop
mov
push
stos
and
lret
push
dec
inc
mov
lods
add
mov
jnp
xchg
jg
jl
aaa
in
sub
jae
xor
scas
jge
jecxz
sbb
xchg
inc
mov
xlat
xchg
or
test
nop
out
sub
dec
data16
xchg
orl
ja
shll
mov
das
lcall
push
sub
xchg
pop
mov
jno
std
js
mov
ficomps
push
std
pop
jg
sarl
lods
cmp
loope
loop
mov
push
movsl
lahf
add
cs
inc
leave
loopne
sahf
shlb
adc
cli
add
inc
in
pop
insb
pop
repnz
or
fs
mov
sub
or
or
cld
fldcw
call
add
popf
xchg
pop
loope
test
hlt
movsl
inc
mov
outsl
sbbb
mov
jns
into
insl
mov
xchg
jae
fcoml
nop
mov
cli
sub
cmp
idivl
xchg
testb
cmp
mov
sub
mov
sbb
adc
cld
scas
or
adc
xchg
jns
js
jae
mov
js
ss
jns
and
xor
and
nop
mov
push
mov
jge
aaa
jb
sti
lock
add
jle
pop
lret
loope
jmp
jne
loop
fstps
and
mov
push
push
xchg
popa
push
lods
pop
dec
pop
pop
std
xor
fdivs
clc
sub
ljmp
cmp
bound
push
and
shr
ror
sbb
cmc
jmp
ja
mov
xchg
dec
in
call
xor
jl
jae
pop
cmp
inc
scas
fidivrl
push
jne
pop
mov
mov
ds
dec
stos
xor
push
xor
fldcw
and
sub
popa
xchg
idiv
dec
es
scas
mov
fimuls
jnp
stos
push
mov
mov
rcr
xor
loopew
test
ja
pop
in
jns
or
mov
pop
fs
pop
xor
sti
fldl
aaa
xchg
cmp
cmp
xchg
sbb
mov
mov
or
add
scas
jl
test
lds
cmp
mov
pop
or
sub
out
insl
or
adc
push
sub
lock
dec
por
orb
out
mov
lret
jecxz
xchg
scas
or
add
xchg
mov
mov
xchg
xchg
mov
incl
nop
pop
aas
pop
mov
es
test
pop
sub
mov
fimuls
xor
cmp
cld
aaa
in
mov
sbb
repz
sub
jp
push
dec
lods
jb
ret
aad
ds
daa
mov
rcr
cmpb
mov
and
imul
out
in
dec
push
and
push
mov
sub
lret
dec
sub
or
in
adc
enter
faddp
inc
pop
push
jne
add
xor
push
popa
sbb
sbb
mov
ja
xchg
cmp
test
fstpl
and
jle
lahf
sbb
sbb
cmpsb
out
pop
enter
mov
add
fidivs
mov
mov
jnp
inc
movsb
movsb
add
add
dec
cmp
shlb
arpl
jge
nop
jbe
cmp
xor
add
fwait
cmp
push
mov
icebp
pop
push
mov
out
nop
pusha
jne
ficompl
pop
lret
fcoml
add
or
cwtl
jmp
pop
lcall
jb
pop
jno
inc
incb
fcmovu
lret
mov
jge
sti
shl
pop
notl
lds
xor
icebp
adc
xchg
jns
cs
ja
icebp
dec
ret
sarl
popf
cmp
or
outsl
jbe
mov
pop
aam
xor
ret
out
jns
push
cmp
sbb
movsl
cmp
lahf
in
push
xchg
sarb
std
jae
std
data16
pop
add
sub
xlat
xchg
jbe
sbb
jle
out
cltd
add
arpl
ljmp
pusha
mov
jns
movsl
jp
sarb
dec
popf
dec
inc
and
sub
and
dec
mov
cmp
mov
sub
xlat
push
into
inc
js
pop
or
xchg
mov
rdtsc
push
cmp
mov
test
push
je
insl
inc
pop
ficomps
test
mov
inc
mov
push
xchg
and
mov
xchg
out
jg
pop
jl
into
adc
lock
mov
fdivrl
jnp
mov
cwtl
cmpb
mov
bnd
jbe
sti
mov
leave
outsb
push
stc
in
pop
jmp
xchg
adc
das
enter
stos
out
testl
rorl
aaa
dec
and
int
sub
loope
mov
push
jb
or
jae
mov
ds
push
jne
mov
mov
lds
cmpsb
in
mov
sub
in
bound
or
adc
push
xchg
shll
mov
dec
in
pop
mov
pushf
push
rolb
add
inc
lret
push
iret
lret
or
imul
cmp
adc
das
insl
pop
sti
js
mov
cmp
fdivl
mov
lock
adc
mov
inc
into
add
jno
and
imull
mov
in
in
sti
cli
sbb
mov
imul
mov
rorl
mov
lock
mov
xor
mov
dec
inc
fs
enter
inc
ljmp
xchg
icebp
jne
pop
cli
jno
jmp
jo
xchg
push
xchg
popa
dec
push
and
xor
jno
mov
mov
jo
dec
add
jbe
pop
icebp
lods
mov
sub
xchg
jmp
mov
pop
shlb
fists
mov
insl
mov
loopne
mov
sub
ret
outsb
gs
inc
mov
add
fstps
or
jp
stos
ret
mov
test
lds
xorl
cwtl
jl
outsl
fsub
dec
sti
push
jecxz
jns
loope
pushl
les
push
xchg
call
jecxz
dec
aam
in
notb
push
sub
mov
jae
pushf
in
mov
jne
pop
cmpsl
test
xchg
dec
push
and
or
or
enter
loopne
add
push
test
cmpsl
push
mov
mov
xor
dec
adcb
adc
ljmp
jmp
gs
imul
hlt
and
outsb
mov
jne
sbb
aaa
inc
push
loop
repz
mov
stos
into
loope
gs
and
and
xchg
jns
int3
and
std
cld
add
stos
icebp
clc
les
push
addr16
sub
mov
inc
sub
jp
jle
out
loopne
dec
cs
xchg
jno
lds
dec
adcb
mov
adc
insb
test
dec
rep
jmp
insl
jnp
aad
mov
inc
cmp
inc
cmc
sub
dec
push
das
dec
or
gs
sub
sbb
sbb
mov
inc
xchg
push
enter
mov
add
ret
aad
imul
insb
cmp
add
ja
sbb
adc
inc
pop
jb
mov
push
fnstcw
fisubrl
aaa
icebp
fimuls
fistps
xor
aas
repz
in
sarb
and
jb
cltd
pop
inc
push
mov
popa
popl
sbb
out
pusha
or
in
push
jo
add
sbb
push
xor
mov
sbb
mov
repnz
outsl
dec
xchg
lds
incb
xor
lock
cmpsl
dec
pop
dec
sbb
cwtl
out
cmp
lret
sahf
test
into
outsb
in
flds
jb
mov
mov
inc
lahf
mov
in
test
sbb
std
or
or
lods
jg
inc
mov
or
lock
loope
add
int3
xchg
rclb
jg
mov
pop
add
push
or
fmul
test
adc
aas
stc
sarb
in
test
jno
and
lret
int3
jb
imul
inc
sbb
inc
aam
sub
clc
xor
leave
sbbb
out
and
push
int3
scas
xchg
loopne
xchg
cmp
aaa
adc
loopne
xchg
test
in
cmc
int
js
push
arpl
repz
xor
jo
repz
mov
or
inc
pop
cwtl
pop
inc
add
mov
insb
inc
dec
aaa
cmpsl
xor
and
add
pusha
es
pop
lret
jge
cmp
enter
dec
sbb
mov
popf
mov
cltd
adc
in
imul
pushf
dec
cmp
aam
or
xchg
loop
mov
rcrl
out
mov
pop
xor
shll
sub
sub
mov
and
popf
lret
mov
sub
or
mov
shlb
popa
add
fsts
xchg
inc
jnp
inc
dec
lds
adc
xlat
popa
pop
or
mov
mov
pop
aaa
enter
sub
gs
fidivs
add
hlt
shll
dec
movsb
mov
sahf
jmp
inc
lret
sarb
inc
push
or
stos
roll
movsb
mov
cmp
push
sub
xor
jle
add
mov
cmp
imul
xchg
cmp
xor
mov
imul
jle
push
sbb
inc
jecxz
mov
pop
sarb
cmp
into
lahf
jnp
inc
out
cs
icebp
cmp
inc
and
stos
mov
divb
or
pop
jbe
pcmpeqb
cli
in
out
dec
push
jecxz
pop
inc
inc
sti
or
std
cmp
adc
fldenv
pop
or
jp
jg
mov
leave
imul
clc
cmp
out
out
imul
push
sbbb
test
ljmp
dec
mov
nop
and
xchg
ljmp
pop
das
jbe
stos
jae
mov
or
shl
mov
inc
xor
hlt
call
xchg
out
mov
adc
scas
test
pop
xchg
dec
jnp
xchg
xor
repz
loopne
adc
mov
push
sbb
xchg
es
push
aad
add
jo
imul
outsl
jge
outsb
in
int3
out
sarb
pushf
add
mov
leave
xor
mov
mov
jno
cld
ljmp
pop
jmp
sbb
push
mov
scas
mov
sbb
dec
and
jb
adc
dec
ret
dec
fadds
into
mov
xchg
test
sbb
rorb
lahf
and
imul
jge
repz
push
jne
add
mov
pop
mov
mov
sbb
or
lahf
aas
clc
sahf
jmp
xor
icebp
lret
jle,pt
jnp
jns
lea
jle
fs
pop
out
lret
es
and
xor
dec
push
mov
arpl
fs
call
mov
xor
int3
inc
fcomp
insb
mov
cld
sub
test
pushf
push
mov
test
fwait
in
mov
popf
mov
fidivrl
movb
push
adc
and
or
or
pop
shlb
push
inc
cmpsl
int3
add
inc
outsb
jge
test
inc
nop
cmpsl
or
cmp
mov
xlat
or
xor
repz
ds
mov
in
pop
fs
pop
cwtl
cmp
lret
lahf
lea
cwtl
mov
sub
cmp
fistpll
ds
pop
pop
leave
xchg
adc
sbb
lock
mov
mov
adc
add
mov
test
mov
cltd
test
out
and
outsl
js
arpl
mov
jae
or
repz
imul
icebp
leave
push
stos
jge
jge
mov
xor
pop
dec
push
cmp
es
lds
push
mov
push
loope
sar
shlb
gs
lock
cmc
push
bound
call
mulb
cmpsb
push
loopne
fnsave
pop
jg
cwtl
das
and
inc
lret
inc
cltd
scas
cmpsb
or
adcb
and
and
ffreep
loop
dec
and
xor
imul
or
stos
in
adc
jae
mov
push
xchg
mov
sbb
pop
idivl
inc
roll
movsl
pop
mov
xlat
xchg
or
les
add
pushl
add
sbb
and
mov
mov
mov
xorb
pop
xor
xchg
mov
inc
xchg
aas
xor
mov
ja
sbb
and
enter
test
pushf
rolb
mov
lahf
js
int
lods
adc
and
in
decl
aas
aaa
cltd
sub
adc
pop
fcoms
sub
int3
faddl
icebp
sti
das
jp
and
lahf
push
ja
mov
xor
sbb
add
stos
es
and
push
sub
fsubrl
popa
push
out
js
data16
or
sub
push
mov
sbb
lret
popf
enter
dec
sti
mov
fs
pop
ret
std
inc
pop
ljmp
enter
mov
scas
jb
hlt
sti
lahf
or
mov
add
ljmp
popf
sbb
loope
dec
jno
pop
jno
pop
xor
push
pop
repz
pop
fidivrs
fimull
lea
sbb
dec
popa
movsl
mov
imul
daa
cmp
aad
mov
jnp
xchg
fsts
cmp
shrl
fdivp
dec
ss
or
pop
mov
rcrb
sbb
filds
sbbl
sub
inc
push
rol
sub
ljmp
mov
and
cltd
mov
imul
inc
repz
fwait
in
sbb
loope
lds
aad
dec
repnz
mov
or
jl
lock
xchg
aam
test
cld
mov
dec
mov
movaps
stos
inc
addr16
adc
sbb
inc
iret
add
inc
cwtl
push
xor
repnz
outsb
test
ljmp
in
xchg
dec
popf
dec
ret
hlt
icebp
test
push
orb
scas
cli
aad
cmc
push
push
xchg
jp
xor
mov
xor
pop
shrb
adc
cli
jb
decl
lahf
cmc
sub
fucomp
sub
and
leave
into
shll
xchg
icebp
adc
jge
mov
xchg
js
mov
xchg
nop
cmc
fistps
cmpsl
int3
push
xor
loopne
into
xor
pushf
xchg
notl
sbb
mov
push
xlat
fstps
es
lea
pop
dec
imul
lods
jle
in
lds
filds
inc
mov
sbb
xor
dec
jg
fidivrs
add
faddl
xchg
push
fstpl
push
std
jp
adc
repz
and
popa
pop
xlat
or
out
sub
mov
jno
jmp
into
and
int
mov
outsl
addl
out
mov
sub
lcall
outsl
inc
and
push
jmp
hlt
idiv
xchg
mull
addr16
xor
add
xchg
jp
cmpsl
lcall
adc
sahf
xchg
and
std
add
pop
cmp
pop
jns
icebp
adc
les
dec
repz
add
xchg
or
mov
xchg
andl
dec
xchg
aad
jnp
add
pop
adc
bound
xor
add
jo
fstps
and
in
sbb
or
jno
ljmp
mov
jp
out
sub
pop
mov
mov
nop
insl
pusha
or
ljmp
and
adc
mov
mov
jg
xor
inc
ss
cmp
js
jbe
sbb
cli
adc
hlt
xchg
xchg
dec
jecxz
js
mov
in
aaa
pop
push
rcl
mov
mov
jge
jge
push
fldenv
pop
push
or
int3
dec
sahf
pushf
ss
cwtl
sub
lods
cmp
dec
std
pop
dec
and
dec
jmp
popf
or
or
imulb
sahf
pop
sub
pusha
inc
loop
sarl
sbb
ret
push
xor
jle
nop
sbb
xchg
outsb
push
add
repz
iret
daa
icebp
xchg
sahf
lahf
sub
lahf
test
stos
pop
scas
xor
dec
pushf
xchg
call
scas
mov
inc
xchg
ret
or
mov
push
in
les
call
pop
iret
dec
daa
dec
mov
and
push
test
ret
push
pop
cltd
into
xchg
knotb
fwait
das
mov
fisttpll
xor
imul
pop
sub
mov
es
xchg
cwtl
syscall
insl
lds
sub
jecxz
sub
xchg
ds
sbb
testl
hlt
mov
outsl
test
adc
daa
fwait
dec
pop
mov
pusha
xchg
xchg
sbb
stc
mov
cwtl
outsl
inc
scas
insb
dec
pop
les
imul
popa
jne
sub
rcrb
lods
insl
pop
inc
ja
repnz
adcb
inc
cmp
test
and
out
jbe
ret
mov
pop
mov
lods
out
frndint
push
jne
dec
and
cmp
cmc
sub
push
pop
outsb
mov
push
sbb
idiv
or
cmp
xchg
jbe
or
and
mov
mul
cmp
lea
jae
inc
push
jp
adc
or
test
sbb
test
cmp
sti
icebp
pop
mov
outsl
pop
push
mov
cmp
adc
push
stos
add
shrl
add
mov
cmp
xchg
mov
shll
or
out
aad
and
je
push
pop
cld
pushf
arpl
mov
mov
int
pusha
rorb
pop
xchg
gs
add
gs
jnp
dec
dec
lret
mov
adc
fists
fidivs
push
pop
loopne
data16
fists
test
jo
mov
pop
inc
rol
xlat
loopne
es
mov
fstl
leave
push
xlat
out
jg
jo
cld
rcll
andb
sub
dec
push
insl
mov
int3
xchg
cmpsl
xchg
jbe
sbb
aad
push
adc
push
mov
mov
leave
dec
into
cmpsb
mov
pop
out
or
aad
cmc
dec
push
fwait
pop
cld
nop
in
pusha
or
cmc
add
shr
mov
adc
movb
subb
repnz
xor
sub
into
or
nop
in
lret
popa
int3
cltd
call
and
lret
inc
xor
inc
jns
mov
inc
sub
cs
es
mov
mov
xchg
adc
add
call
pop
xor
imul
mov
push
cmpsb
pop
hlt
or
and
lea
jbe
insb
addr16
stos
mov
inc
loop
out
aam
xchg
inc
add
in
fiadds
and
jae
push
pop
ljmp
and
pop
pop
dec
fwait
dec
and
sub
cld
cltd
iret
div
and
adc
pop
jg
es
dec
loope
ret
ss
arpl
cmp
sub
jl
cld
jmp
jl
lret
mov
cltd
rcll
dec
fs
in
test
aad
adc
lods
lcall
push
sub
loop
in
adc
pop
fsubr
inc
xor
jbe
lret
out
fmuls
xchg
xchg
push
lds
ss
mov
mov
jge
icebp
pop
cmp
jnp
rol
inc
xchg
jb
out
lret
lret
sahf
cmp
cmp
mov
mov
fnstcw
lcall
mov
xchg
pop
js
icebp
sbb
popa
and
cmpsb
sbb
out
mov
mov
inc
insl
push
adc
jge
jb
lret
rol
and
sbb
lods
mov
adcb
ret
pop
dec
fisttpl
in
stos
lret
or
data16
fs
js
out
mov
in
pop
push
mov
in
rcrb
orb
mov
fstpt
data16
xchg
xor
hlt
or
test
or
sbb
mov
lds
test
jle
shl
push
js
int3
pop
fistps
xchg
sub
mov
rolb
pop
xor
and
or
cs
push
xchg
cmc
push
push
sub
pop
decl
ds
test
sar
flds
fildl
add
sub
lea
pop
jle
xchg
pusha
mov
or
sahf
ljmp
js
sbb
inc
cmc
add
add
jl
ss
jle
jp
aam
xchg
push
pushf
xchg
ds
mov
imul
sbb
sbb
xchg
das
out
push
sub
xlat
push
cmp
xor
xchg
cmpsb
aad
mov
cld
push
addl
test
mov
stos
ret
or
and
cwtd
rclb
add
loope
push
cmp
adc
negb
enter
data16
roll
lret
inc
divb
mov
jecxz
notb
mov
xor
pushw
adc
imulb
mov
add
mov
push
in
sahf
repz
dec
loopne
or
add
les
fsubs
pop
push
clc
add
pusha
sti
add
inc
add
lcall
jmp
dec
mov
adc
mov
push
push
jle
int3
hlt
sub
cltd
sahf
pushf
insl
mov
mov
cmc
dec
mov
leave
aas
mov
into
stos
pop
in
cld
xchg
outsb
in
inc
loopne
pop
scas
insb
call
push
js
or
dec
je
daa
mov
imul
shl
jnp
xor
adc
jbe
mov
pop
aas
xchg
mov
out
xbegin
cmp
movsb
or
subb
dec
and
mov
cltd
ja
dec
hlt
adc
add
lcall
inc
or
mov
shll
add
xchg
movsb
mov
sti
jnp
jle
jg
lds
dec
popa
inc
mov
push
mov
push
cvttps2pi
aad
es
negb
sahf
cs
aam
pop
fs
dec
aam
or
xchg
mov
inc
push
mov
stos
jp
sub
adc
lods
and
mov
call
cwtl
clc
in
ficoml
mov
sti
sbb
cli
mov
popa
inc
add
mov
adc
inc
test
imul
sahf
fdivl
mov
outsb
mov
push
mov
lahf
pusha
inc
mov
mov
scas
inc
out
add
call
sub
in
fnstenv
xor
or
mov
cmp
mov
ljmp
negl
bound
mov
ljmp
push
icebp
cmpb
push
rcr
cmp
fimull
mull
rcll
mov
jg
xchg
jp
mov
jnp
mov
lea
dec
mov
mov
cmp
sbb
mov
mov
popa
leave
sti
add
jmp
test
test
lret
mov
push
xor
cli
arpl
out
fnstsw
inc
testb
insl
mov
ret
outsl
jne
aas
adc
test
ljmp
daa
outsl
ss
and
popa
addr16
popf
mov
loop
int
mov
xchg
cli
fwait
dec
push
xchg
stos
mov
icebp
gs
mov
in
push
jmp
lahf
arpl
push
push
cmp
imul
mov
push
fiaddl
mov
mov
scas
mov
cmpsl
or
out
and
out
in
adc
add
push
mov
and
inc
cmp
rcrl
inc
cmp
inc
inc
nop
add
or
inc
push
push
lret
push
lods
in
mov
pushf
mov
dec
or
into
xchg
sub
or
pop
fsubrl
sub
push
loop
in
xchg
xchg
or
inc
popa
pop
shll
mov
xchg
push
je
xchg
pop
push
jmp
scas
test
insl
call
lods
xor
jecxz
add
popf
aad
test
or
and
pop
cli
ss
sub
stc
gs
daa
jge
lods
mov
mov
out
dec
jb
bound
data16
dec
mov
xchg
fistl
xor
sub
aaa
lahf
inc
add
cwtl
test
or
mov
mov
test
push
in
push
mov
xchg
jl
inc
cld
cmpsb
inc
xchg
cmc
repnz
jg
popf
mov
cli
icebp
in
adc
push
das
push
sbb
inc
mov
xchg
push
cmp
ds
push
sub
pop
stos
pushf
cmc
xchg
xor
scas
jno
mov
stc
cmc
or
stos
pop
jns
mov
std
jge
aam
addr16
in
xchg
shlb
sub
repz
into
pop
hlt
leave
xor
cli
push
pop
push
aad
fisubs
sti
xchg
mov
jne
lods
jne
add
adc
add
pop
push
leave
cmp
sbb
jae
mov
sub
cld
cltd
mov
sbb
cs
cmc
sub
nop
sbb
xlat
adc
in
xor
shll
pop
xor
arpl
inc
xchg
test
or
cmp
sahf
shrb
divb
loope
mov
int
or
stc
jp
mov
xchg
mov
inc
cmp
mov
daa
leave
and
xor
sbb
pusha
sbb
push
addr16
mov
imul
imul
push
pop
inc
fisttpl
inc
aad
icebp
arpl
in
pop
mov
push
mov
push
add
cltd
or
inc
adc
and
xchg
movsl
cmpsb
dec
and
andb
cmp
xor
aas
and
idivb
insb
inc
cltd
fists
leave
xchg
xchg
rcrl
and
pop
jmp
nop
icebp
pop
insb
push
pop
popa
mov
ljmp
aam
inc
pop
cmpsb
jbe
ss
pop
lar
sub
dec
repnz
adc
into
mov
fcmovbe
inc
mov
pop
shll
lods
adc
lods
sub
mov
dec
mov
je
aas
mov
sub
dec
add
mov
aam
outsl
int3
stc
mov
popa
sub
sub
mov
mov
ret
lret
jmp
rcr
sbb
stos
sbb
mov
mov
test
sub
lret
shll
lcall
xor
mov
sub
mov
dec
xor
ds
or
pop
fs
pop
sbb
jne
or
mov
mov
add
out
test
add
jmp
cmp
scas
xor
shlb
scas
cmp
jmp
push
outsb
push
or
adc
fnstenv
insl
pop
mov
popf
lret
sbbl
mov
aad
pop
or
mov
dec
inc
push
pop
mov
push
mov
mov
or
hlt
cli
sarb
jo,pt
or
test
push
mov
pop
or
cmp
sbb
mov
cmc
std
scas
imul
stc
in
repnz
pop
lahf
hlt
scas
lock
add
ja
jecxz
xorb
jle
repz
mulb
loop
jge
std
add
ds
xchg
es
adc
loop
dec
xchg
iret
dec
enter
push
xor
inc
cld
adc
dec
int
fcoms
outsl
mov
imul
push
mov
shufps
aaa
sub
flds
xor
pop
dec
push
sahf
mov
push
out
mov
sti
cmp
outsl
inc
inc
inc
jmp
nop
imul
sub
in
push
jns
mov
mov
pop
pop
pop
rcrb
cvttps2pi
cmp
sbb
and
fiadds
or
lock
sti
lods
scas
xchg
push
test
jecxz
or
mov
outsl
repz
in
out
cmp
lods
mov
popa
push
inc
outsl
sbb
cmp
mov
lcall
ret
pop
call
mov
jle
jmp
push
or
sub
xchg
iret
mov
and
xor
fiadds
aam
jns
xchg
test
js
sti
cli
adc
cmp
sub
jno
xlat
imul
pop
jbe
mov
pop
pop
add
sbbb
lock
ror
and
inc
push
sti
int
dec
push
imul
insb
mov
cmp
test
mov
adc
jae
xor
and
mov
jae
lret
mov
mov
xor
jns
or
lea
xor
andb
inc
jl
ja
xor
push
add
cmp
mov
dec
mov
xchg
scas
test
fistpll
repz
outsb
unpcklps
dec
scas
fidivs
mov
in
fnstcw
inc
in
xchg
adcl
and
maxps
divl
pop
xchg
pop
jae
or
mov
stos
mov
cwtl
fidivl
into
inc
cwtl
jno
adc
int
fnstcw
sub
xchg
shr
jno
insl
outsl
pushf
outsl
push
pusha
arpl
fsubrs
mul
inc
outsb
sti
or
pop
dec
dec
sahf
mov
jno
xchg
in
adc
dec
icebp
add
int
std
pop
faddl
aam
jb
xchg
xor
xlat
jbe
ss
mov
xor
add
test
or
sbb
xabort
mov
inc
or
test
imul
repz
xchg
gs
lcall
xchg
nop
jecxz
xchg
stc
mov
mov
fnsave
sarl
fnstcw
push
scas
mov
fst
cmp
je
push
das
sbb
loope
inc
lods
icebp
dec
xor
add
ret
orl
inc
arpl
sbb
xlat
pop
jl
ljmp
dec
in
push
dec
mov
mov
pop
cmpsl
popa
loopne
mov
mov
adc
pop
sub
lds
sub
mov
lds
and
pushf
and
decb
fstp
pushf
mov
ror
push
mov
je
mov
add
mov
movsb
testb
movsb
aas
ret
das
stos
lods
ret
cltd
push
loopne
push
ss
shrb
aam
xchg
jnp
loope
dec
xor
stos
in
loope
push
sub
sub
xor
je
xor
test
xor
arpl
xor
ljmp
popl
inc
daa
add
pop
aam
scas
and
cmp
and
repz
testl
and
cmc
imul
mov
test
or
or
xchg
imul
jo
or
sbb
vmread
xlat
add
jp
inc
push
adc
popf
es
mov
push
aam
fadd
outsl
push
pop
mov
mov
popl
cmc
pop
nop
push
adc
jno
sahf
rol
sub
xchg
insb
xchg
leave
inc
popa
mov
loope
xchg
adc
lea
int3
inc
or
mov
ret
mov
lret
xlat
mov
xchg
pusha
xor
xor
mov
jl
in
sbb
adc
push
mov
sarl
lret
adc
mov
dec
loop
imul
xchg
loop
in
xchg
rorl
test
aam
in
mov
iret
fwait
pop
in
mov
imull
jno
and
addr16
jnp
lods
fcoml
aas
xor
mov
push
leave
push
insl
insb
pop
sub
jno
ss
jp
dec
push
sbb
and
pop
jne
jbe
mov
movsl
mov
in
mov
xor
dec
jp
or
pop
fwait
push
mov
pop
add
mov
outsb
xor
pop
mov
xor
test
lea
outsb
dec
mov
xchg
enter
and
stos
and
jmp
int
data16
icebp
inc
mov
jae
push
pop
mov
or
aad
mov
subb
and
movsb
fs
idiv
out
lock
popf
or
pop
popa
jnp
pop
sarl
cld
icebp
mov
lock
data16
andb
hlt
scas
gs
and
sar
popa
mov
jp
jmp
mov
inc
outsb
add
push
dec
dec
js
mov
add
fwait
sub
cmp
mov
mov
mov
dec
push
negb
dec
push
cmp
pop
pop
dec
fldl
loopne
rorb
add
mov
pop
hlt
sbb
cmpl
push
shl
in
jnp
xchg
es
roll
clc
push
fs
ficoml
mov
add
push
ds
lock
fs
or
jecxz
add
test
adc
test
adc
out
dec
adc
jae
xor
mov
clc
and
xchg
mov
sti
in
int
jl
bound
repz
inc
out
adc
out
sbb
and
rcr
js
pop
adc
scas
and
inc
or
out
cmp
jbe
add
ljmp
fldenv
push
repz
loop
pop
nop
mov
dec
xchg
imul
xor
mov
xchg
and
loopne
call
sub
jae
push
mov
adc
jg
leave
sub
pop
sbb
dec
out
loop
nop
sbb
sub
mov
nop
adc
hlt
addr16
mov
sbb
scas
jne
es
sub
gs
inc
das
sbb
inc
jo
jae
xchg
adc
jae
mov
xchg
xchg
and
mov
cmp
mov
aam
out
cld
aad
mov
fisubrl
push
push
push
dec
add
enter
cmpsb
loopne
pop
inc
pop
cld
lods
test
aaa
scas
negl
mov
stos
dec
pop
dec
sub
in
mov
xor
dec
lret
push
and
in
ljmp
in
pop
jecxz
outsl
xchg
sub
adc
inc
xor
pop
xlat
xchg
push
scas
jne
jnp
xchg
inc
cmp
mov
sarl
mov
into
adc
sti
inc
aas
in
sub
mov
mov
inc
dec
jno
jp
aas
pushf
or
mov
sbb
aaa
fsubs
dec
mov
lret
outsb
rcr
push
inc
pop
outsl
sub
mov
mov
ret
sbb
cwtl
inc
jecxz
outsb
cwtl
lea
out
test
xor
lods
pop
push
xor
in
in
add
mov
sbb
mov
xchg
inc
fwait
push
cmc
jecxz
mov
gs
mov
jnp
dec
mov
pop
push
stos
hlt
xchg
lret
jns
test
or
add
and
push
xchg
push
xor
or
mov
xchg
das
push
fistpl
iret
fistl
pop
inc
pop
jb
leave
imulb
sub
pop
cmp
outsb
or
pop
imul
pop
sahf
outsl
pop
in
mov
aas
js
sub
out
in
outsb
mov
pusha
push
adc
xor
roll
add
mov
inc
sub
or
jne
xor
push
xchg
hlt
in
mov
loope
cmp
or
andl
pop
xor
lret
push
xor
cmpb
pop
es
sub
scas
movsb
and
sub
xchg
lahf
sbb
pop
cs
pushf
stos
mov
inc
jg
scas
movsl
loopne
repnz
jmp
jl
inc
fcomps
stos
jl
sub
cmp
inc
hlt
and
aam
dec
iret
mov
aad
shl
call
sbbb
jg
rcr
addb
jg
xorb
cli
int
lea
aas
pop
je
mov
cld
pop
xor
xchg
insb
movsl
rcl
jne
pop
mov
pop
orl
cmpsl
lea
xchg
jle
push
andb
push
popf
scas
pusha
popf
test
dec
sub
repnz
jae
out
arpl
inc
push
adc
jl
imul
push
push
inc
add
repnz
lock
pop
nop
or
jo
jp
ss
and
lret
leave
mov
orb
adc
subl
int
cmp
std
cmp
test
aas
xchg
rcl
cmpsl
mov
ret
into
dec
push
cwtl
jecxz
inc
and
daa
lock
xchg
xchg
popa
inc
mov
and
lds
push
outsb
and
stos
stos
lcall
adc
push
sub
cmpsb
pop
mov
dec
lods
std
inc
das
stos
inc
push
cmp
inc
xor
xchg
fnstsw
or
popf
xchg
xor
xor
sbb
or
inc
lea
sbbb
into
ds
mov
dec
inc
or
jg
mov
dec
mov
lock
cs
addr16
xor
push
xlat
lea
in
pop
jle
mov
icebp
cmpsl
mov
mov
nop
insl
je
fwait
adc
mov
loop
movsl
ja
sbb
inc
xchg
xor
jb
std
add
lds
insb
mov
leave
ret
cld
sub
jp
mov
aas
out
jp
add
outsl
cmp
or
pop
xor
pop
mov
scas
repz
inc
fs
sarb
flds
or
cmp
leave
rorb
dec
ljmp
xor
ja
jno
ficoms
xchg
cmp
lods
dec
xor
sahf
xchg
xchg
jg
pop
adc
push
mov
jge
rcrl
dec
repz
lods
xor
aas
lds
insb
rcll
jbe
jb
movd
jecxz
int3
lret
inc
or
int3
and
inc
jns
mov
sub
sbb
lahf
and
xor
clc
mov
ret
fbld
stos
cmp
in
cmpsl
jo
popa
adc
out
cmp
shlb
dec
pop
shrl
es
pop
mov
in
adc
aaa
gs
ss
xor
iret
cld
xchg
fcompl
pop
test
dec
js
adcb
jnp
fidivs
inc
mov
stc
in
add
cmp
hlt
push
inc
jmp
jns
mov
mov
in
add
pop
mov
sub
lea
add
imul
scas
ljmp
stos
push
jmp
inc
mov
xor
adc
lahf
repz
dec
push
jp
aad
in
pop
cmc
rcrl
pop
cmp
mov
cmpsb
sbb
push
push
ljmp
insb
sahf
popf
pop
rclb
aam
js
dec
lock
pop
rclb
inc
addb
test
ja
out
or
shlb
sbb
mov
repz
test
stos
pop
and
jae
loopne
sbb
push
jl
aas
out
mov
arpl
sub
fwait
xchg
lret
inc
sbb
mov
or
iret
mov
cmp
divl
adc
les
imul
ljmp
dec
dec
stos
jg
and
push
xor
jns
leave
aaa
in
fs
dec
mov
cmp
fidivrl
inc
sub
in
inc
or
mov
std
sbb
aaa
in
mov
ss
dec
mov
xor
ja
sbb
push
inc
pop
dec
jle
adc
fdivrs
mov
push
hlt
pushf
cmp
cli
jecxz
std
dec
cmpsb
sub
pop
subb
outsl
in
mov
mov
or
jae
ljmp
fildl
ja
mov
mov
mov
mov
and
add
mov
jno
mov
xchg
movsl
jb
xchg
dec
xchg
xor
cmc
xchg
mov
sar
cmc
pop
loope
mov
adc
mov
popl
aad
stc
int
ljmp
push
test
mov
ss
mov
neg
in
lahf
adc
jne
ja
sub
sar
rorb
mov
js
addr16
cmp
mov
into
jne
lret
pop
push
pop
push
jmp
loop
xchg
cltd
mov
inc
pop
jno
outsb
cmp
aad
xor
std
adc
xor
int3
mov
aam
rcrl
xorl
je
add
dec
xchg
test
xchg
and
js
or
adc
mov
mov
dec
mov
sbb
or
in
adc
pop
test
or
xor
aam
repnz
pop
mov
jae
xor
sti
xor
cmp
mov
outsb
mov
test
cltd
pop
sarl
jmp
out
sbbb
hlt
iret
xchg
les
cli
jne
adc
xchg
nopl
jl
iret
lcall
xor
xor
mov
and
lock
dec
xor
jmp
in
sahf
push
inc
dec
aaa
daa
sbb
mov
jecxz
push
mov
repnz
lock
sti
push
mov
xor
lea
sahf
inc
clc
jge
xor
int
or
ret
bound
push
subl
jns
call
fdivl
rcl
dec
xor
add
call
ljmp
sub
mov
in
xchg
pop
mov
mov
call
xor
mov
aaa
push
aam
push
popa
ljmp
rcl
cmp
xor
fisubrl
jb
sbb
stos
push
and
xchg
stos
sbb
lods
jae
stc
mov
push
shll
mov
pushf
outsl
movsl
push
add
int
xchg
sar
xchg
xchg
aad
ja
mov
cmp
dec
sbbb
jbe
aas
sbb
sbb
mov
sub
sahf
in
mov
and
divb
stc
inc
sub
pop
sarb
aas
mov
jae
fimuls
scas
inc
shll
shlb
lea
cwtl
icebp
pop
cmpb
das
popa
js
xchg
push
mov
cmp
pop
mov
pop
pop
cld
pop
fstl
pop
pop
repz
outsl
xchg
and
mov
add
shlb
fs
stc
mov
into
movsl
pop
inc
insl
cmp
mulb
repnz
mov
pop
xor
lcall
sarb
test
loope
pop
out
repnz
loope
pop
cmpsb
repz
sbb
add
pop
insl
mov
jecxz
sbb
push
dec
test
fstpl
lcall
push
imul
aam
push
adc
sub
fisttps
mov
mov
adc
or
out
nop
adc
dec
mov
sbb
cld
frstor
mov
push
sbb
shlb
push
jmp
cli
mov
cmpl
inc
cltd
xor
sub
imul
inc
xchg
cmc
imul
push
cld
fisubrl
inc
stos
pop
push
xchg
mov
out
std
lcall
test
or
or
inc
lods
push
mov
ljmp
xchg
push
imul
dec
fidivl
mov
add
sti
test
or
int3
and
pop
add
or
in
insl
adc
lea
jae
cmp
xchg
nop
xchg
fistpl
idiv
in
sbb
vmovaps
int3
sub
sub
in
jbe
mov
in
js
int
pop
pop
jno
lea
lcall
addr16
enter
push
push
leave
es
stos
dec
pop
nop
jl
fildl
test
mov
in
jg
flds
xchg
xchg
dec
push
shrl
test
mov
xor
mov
shll
or
subl
call
xor
fwait
push
adc
lock
outsl
shrl
cld
xor
jo
cmp
dec
mov
or
out
fs
or
and
int3
jge
lock
gs
xor
push
jp
mov
sbb
sbb
inc
fs
in
add
sub
jne
lret
xchg
push
push
lret
cmp
pop
into
push
sub
mov
add
mov
sbb
pop
cltd
fldcw
in
cmpsb
addr16
mov
cli
pavgw
dec
test
jo
xchg
bound
jg
push
fwait
lods
loop
jecxz
sub
fisubs
std
xor
out
pop
cmp
mov
sbb
je
dec
xor
push
add
cli
leave
rcrl
pop
or
add
shl
or
daa
inc
repnz
in
add
test
mov
pop
aad
cmpl
rcr
mov
and
out
jmp
sbb
in
loop
xchg
jmp
sub
adcb
inc
pop
fnsave
xor
lea
outsb
inc
out
and
inc
jnp
enter
and
mov
shl
repz
dec
ret
js
jne
and
js
cmp
mov
xor
mov
or
and
imul
hlt
push
jb
mov
pop
js
scas
fdivs
hlt
cmp
cmp
cmp
add
dec
xchg
outsb
insl
adc
mov
lret
rclb
out
daa
pop
cmp
popa
adc
lock
dec
mov
std
mov
jb
inc
pop
push
pop
pop
jecxz
xchg
adc
ret
mov
pop
inc
les
pop
mov
inc
std
int
rclb
pushf
push
leave
mov
dec
stc
jb
cs
lock
mov
movsb
call
in
and
orl
mov
in
fmul
adcl
jmp
push
sub
jle
stos
dec
dec
pop
scas
pop
fiadds
movsl
jnp
and
adc
stos
scas
movsl
test
icebp
sub
dec
pop
stc
mov
pop
test
jp
sahf
mov
jecxz
jg
ss
sub
dec
fnstcw
or
shrb
jb
inc
stc
pop
lds
fists
dec
lcall
scas
dec
pop
sub
push
repz
data16
and
int
ret
jne
std
xchg
pop
aaa
in
dec
add
and
pop
leave
scas
in
pop
rcl
or
repz
mov
and
lods
lret
sub
gs
cmp
cld
jge
in
js
cs
push
insl
sbb
clc
mov
mov
mov
inc
dec
sbb
cwtl
push
dec
cltd
xor
in
mov
insl
mov
cmp
test
mov
inc
das
inc
dec
btl
das
fsubl
lcall
outsb
dec
mov
leave
xor
and
aam
pop
in
sbb
movsl
jmp
add
stc
sbb
push
xchg
or
gs
orb
aad
adcl
flds
sti
jp
or
xor
sbb
shll
push
inc
mov
sbb
shll
loope
or
ret
push
rclb
sub
call
add
fmull
stos
sbb
adc
fadd
mov
int
mov
and
xchg
adc
sbbb
push
mov
lret
faddl
mov
xor
mov
fdivs
dec
mov
or
jns
push
js
sar
test
rcrl
loop
mov
shll
daa
sub
push
fisubrs
jne
jle
jg
rol
sub
cwtl
add
test
sub
cmpsb
aam
out
pop
shll
in
add
lret
fs
mov
popa
stc
jl
mov
mov
outsb
xchg
pushf
sahf
and
xchg
xchg
ds
addb
data16
faddl
cmp
push
stc
dec
inc
mov
shlb
cmp
sub
test
xchg
dec
or
sahf
xlat
int3
cmp
test
mov
std
cmp
sub
and
push
das
mov
aam
sbb
imul
sbb
add
lret
add
jo
mov
inc
cmpsb
push
scas
test
mov
rclb
lret
add
sub
imul
movsl
cmp
mov
cmp
cli
sub
outsb
xchg
idiv
cmpsb
jns
scas
in
lcall
into
pop
jl
adc
jno
cmp
xchg
mov
inc
mov
imul
loop
popf
mov
test
cltd
pop
out
jecxz
pop
or
sub
cmpsb
sub
daa
cmp
mov
pushf
pop
pop
sub
lret
outsl
push
push
outsl
adc
repz
mov
push
inc
jg
movb
test
rcrl
dec
icebp
repz
ds
sub
or
xor
xor
mov
test
dec
lock
xor
add
push
jno
test
fmull
adc
ret
adc
and
xor
and
jmp
xchg
dec
mov
xor
cmp
cli
jno
nop
ret
mov
dec
and
mov
cltd
push
push
movsl
call
cld
pop
icebp
push
dec
push
push
mov
lret
sbb
fldenv
test
incl
or
rclb
jbe
dec
jo
adc
cmp
lret
pop
les
inc
cmc
push
int3
sub
imul
stos
mov
mov
nop
adc
cmp
lahf
jns
aad
push
fdivr
into
cld
test
rcrl
sbb
ja
scas
xchg
and
arpl
xchg
pop
xchg
pop
in
mov
pop
stos
or
xchg
data16
mov
mov
test
mov
and
mov
insl
dec
aas
sbb
mov
xchg
mov
outsl
adc
mov
mov
pop
or
loop
cltd
subl
int
mov
ja
in
into
add
cwtl
gs
add
movsl
cmp
sahf
push
inc
sbb
aas
pushf
int3
ljmp
add
ficoml
movsl
subl
lret
sub
pusha
std
cwtl
mov
scas
int3
sub
clc
test
pop
das
pop
icebp
push
sub
mul
push
aam
sub
push
rclb
cmp
adc
iret
xor
push
out
and
mov
push
int3
rclb
jl
sbb
xor
inc
jnp
mov
out
push
and
dec
jp
pop
lcall
jge
dec
mov
test
mov
rorl
mov
pusha
enter
aas
arpl
cmp
out
rorb
fnsave
sub
fsqrt
jae
sub
cld
pop
sahf
sub
aad
mov
inc
call
cwtl
adc
call
mov
nop
push
cmp
sti
lods
repnz
dec
imul
rorb
push
xlat
hlt
dec
dec
xorb
fcomi
and
inc
jge
rcrb
pop
test
shrb
clc
or
cwtl
add
pop
adc
xlat
push
push
out
cmp
sbb
pop
jg
lods
call
mov
pusha
or
or
fs
outsb
xor
test
inc
cmp
sub
fyl2xp1
adc
cmp
bswap
jl
into
ja
mov
jecxz
and
lods
out
int3
push
inc
xor
pop
mov
sbb
pop
cmp
jne
cmp
out
mov
into
push
ret
stos
and
jge
ret
jl
jno
jne
aaa
jle
lea
pop
cmp
std
in
mov
scas
cli
shll
fs
sub
cmp
sub
mov
and
call
bound
mov
lds
outsl
repz
xor
das
cmp
popa
dec
sbbl
test
mov
je
sub
or
adc
pop
adc
test
mull
adc
ficomps
add
in
or
mov
lds
lret
stc
ss
es
xor
clc
cltd
insl
in
mov
push
cmpsl
inc
jno
dec
jnp
in
xchg
mov
inc
and
push
xchg
adc
push
addb
movl
push
das
int3
or
test
cmp
icebp
mov
hlt
xchg
aad
leave
loop
fidivrl
sub
fisttpll
sbb
aaa
cmpsl
cltd
mov
movsl
sbb
sub
es
push
mov
adc
xor
adc
xchg
adc
and
scas
mov
sub
xchg
and
test
inc
jne
das
in
jno
insl
push
mov
push
repz
adc
ja
jbe
rolb
shl
pusha
pop
out
jp
lock
adc
or
jg
jnp
es
xor
inc
or
mov
xor
xchg
aaa
jb
dec
addr16
xor
dec
and
mov
sti
pop
xor
test
and
rclb
hlt
mov
iret
mov
call
loope
in
mov
das
loop
xchg
and
dec
das
jne
xchg
or
mov
cmp
mov
xor
pop
mov
add
and
jg
xor
dec
mov
jle
in
push
pushl
jbe
and
xchg
ds
push
jle
xor
and
dec
inc
xchg
or
das
sbb
inc
cs
lea
jmp
push
lock
leave
dec
and
inc
pop
lret
jp
test
jle
sbb
cmpsl
clc
lahf
icebp
and
aas
pusha
popf
lret
rcrl
scas
test
in
xlat
insb
add
sahf
sarl
aas
inc
imul
xchg
or
add
inc
jmp
and
pop
push
push
mov
adc
or
push
int
addr16
dec
rcll
xchg
cli
push
lds
xchg
fisttpl
jg
add
out
push
jbe
or
dec
scas
addr16
fdiv
leave
cwtl
cmp
movsl
push
mov
pop
ret
std
test
lock
testb
fadds
fwait
sub
bnd
pop
add
pop
cmp
cmp
je
in
add
jne
mov
push
sarb
jnp
stc
jo
cltd
scas
lret
addr16
xchg
jl
loope
push
jno
mov
test
jno
xlat
fistpl
int
lahf
test
in
and
divb
test
or
dec
dec
xor
mov
inc
in
mov
adc
pushf
adc
adc
pop
fwait
mov
add
stc
jmp
push
sub
mov
xor
stos
test
fmulp
das
xchg
fidivrl
mov
out
adc
push
jl
out
and
fscale
xor
push
cmp
jmp
leave
mov
jge
notb
outsb
adc
stos
lcall
sub
cmp
cmp
push
out
mov
pop
jmp
pop
stos
lods
jmp
pop
mov
add
into
fsubrl
mov
iret
adc
shlb
fcoml
rcrl
and
cmp
pop
enter
mov
ljmp
xchg
sub
mov
mov
or
pop
mov
out
bound
add
orb
jno
repz
adc
mov
inc
fnstcw
xor
pushf
int
push
push
js
mov
xchg
cltd
aad
hlt
shlb
mov
lods
nop
in
out
jae
rcrl
cltd
mov
ds
rcrl
lds
loop
call
mov
lret
jne
cmp
in
lds
dec
mov
inc
dec
andl
nop
push
lret
mov
pop
push
pop
scas
rclb
add
pop
sbb
pop
inc
inc
into
mov
xlat
xchg
arpl
push
ja
adc
push
cmp
testl
inc
sbb
mov
shrb
dec
sarb
and
in
mov
loop
lock
jb
enter
xchg
loopne
or
outsl
cli
jne
and
in
ss
fmul
push
ror
pop
push
outsb
jge
mov
push
fcmovbe
repnz
xor
cmc
xor
sub
fcmovnu
dec
mov
rolb
insb
stos
push
adc
inc
xchg
testb
jns
pop
mull
cmp
jle
outsl
inc
adc
adc
pop
pop
pop
jns
mov
jb
and
imul
dec
popf
xor
sbb
mov
pusha
pop
sarl
xor
add
mov
ret
movsb
jp
inc
pushf
or
sbb
test
scas
in
popf
mov
mov
sub
push
pop
arpl
mov
aad
into
movsb
mov
cmp
ret
jo
adc
jae
lock
add
push
or
ja
xchg
iret
rcl
ljmp
lcall
lods
aaa
adc
adc
xor
cmp
dec
fiadds
xchg
test
jecxz
pop
dec
pop
test
push
daa
cmpsl
sub
ds
mov
hlt
sub
xchg
ss
xorb
mov
pop
scas
stos
sbb
es
mov
mov
xchg
outsb
jle
or
mov
xlat
jns
jnp
shll
push
pop
ljmp
ljmp
popa
mov
repz
xchg
push
iret
stc
fsubr
fnsave
push
xor
push
inc
mov
dec
mov
bound
arpl
adc
push
imul
mov
mov
fwait
scas
adc
fs
sbb
mov
mov
jge
mov
xchg
push
repz
insl
mov
iret
outsl
cmpsb
and
cmc
mov
mov
cmp
cmp
jmp
imul
inc
data16
inc
pop
mov
jne
pop
push
sub
lods
into
hlt
fs
mov
psraw
xlat
adc
dec
add
cmp
cmp
negb
orb
fdivl
int3
xchg
pop
out
dec
mov
incb
mov
arpl
popa
or
add
mov
push
lock
xchg
sub
jnp
xchg
leave
jo
pushf
mov
and
xor
mov
nop
and
fsub
sbbl
jne
rcll
xchg
loopne
add
mov
rclb
dec
jno
xorb
enter
xor
int3
ja
jge
call
mov
fbstp
cli
test
out
das
call
mov
in
rcr
adc
push
xchg
popa
fidivl
movsl
dec
push
mov
lock
jno
xor
std
lock
mov
push
ljmp
cli
inc
jnp
int3
lcall
mov
or
mov
flds
mov
add
scas
mov
xchg
in
lods
cld
inc
lret
sbb
fsubrl
push
jo
test
std
lahf
pop
sti
sub
std
in
cld
lcall
in
out
ffree
mov
insl
inc
in
sub
inc
push
adc
fwait
mov
mov
arpl
dec
fnsave
insb
sbb
mov
xor
xor
pusha
and
jl
cmp
cltd
sbb
xchg
pop
mov
gs
clc
jne
fwait
xor
add
or
xchg
jp
adc
stc
xor
test
test
js
pop
jne
and
into
aam
xchg
jbe
cmp
rorb
cmp
add
jne
dec
out
dec
sub
push
inc
or
push
test
out
mov
cmpsl
icebp
outsl
lea
xchg
je
js,pn
pop
sbb
cltd
adc
mov
imul
sub
cld
in
add
ja
cwtl
aas
mov
sub
mov
lahf
ret
out
add
jbe
xchg
stc
lock
dec
adc
ds
jb
jnp
adc
lds
push
lock
out
add
cmp
popa
inc
inc
push
pushf
flds
leave
cmp
inc
sub
xor
push
iret
lcall
cltd
cwtl
idivl
jno
pop
push
xor
jns
add
lahf
xorl
mov
mov
fwait
push
sbb
adc
insl
pusha
enter
sahf
jo
sti
push
xchg
mov
sub
jl
adc
mov
je
mov
je
mov
popf
gs
cli
cmp
shrl
ja
ud1
in
mov
fisubrs
push
sbb
inc
repnz
addl
outsb
inc
test
out
dec
stos
lock
mov
jl
xor
jecxz
cld
lret
das
nop
xchg
out
mov
jp
dec
sbb
or
mov
ss
lret
gs
dec
lock
mov
ret
xorl
repnz
add
mov
lcall
pop
mov
mov
in
daa
inc
sub
jp
sbb
out
jle
mov
sub
adc
xchg
cmp
jmp
mov
pop
sbb
popf
clc
test
or
stos
xchg
adc
pop
inc
jmp
aaa
stc
xor
adc
int
in
sbb
rolb
scas
sarl
fwait
add
pop
jb
xchg
xchg
mov
adc
das
mov
fimull
int3
pop
rcrb
call
cltd
repnz
mov
cmp
into
and
iret
pop
movsl
add
js
mov
mov
or
push
lcall
xchg
dec
aad
ss
jne
cmp
mov
pop
mov
mov
lds
out
cld
jnp
mov
and
enter
or
rolb
push
clc
pop
test
mov
aad
lcall
mov
cli
das
adc
sub
inc
pop
sub
mov
sub
fsubrl
inc
daa
mov
adc
ret
and
xor
xchg
ss
adc
sti
add
xor
lret
stos
or
xchg
ffree
push
aad
imull
pop
xlat
add
out
pop
lods
dec
addr16
lock
or
xchg
rclb
ja
xchg
jge
stc
jo
push
inc
mov
cwtl
add
mov
xor
or
jmp
or
xchg
xor
stc
sub
stos
ret
pop
mov
fisubs
dec
lea
sub
pop
push
pop
je
es
and
add
sbb
mov
push
ja
xchg
je
fiaddl
push
xor
jae
dec
in
int3
mov
push
and
adc
int
cs
lcall
cmpb
lahf
pop
pop
rorl
mov
faddp
fwait
in
push
nop
pop
sbb
stos
sub
je
xlat
jp
cmpsl
jns
xor
or
sub
lds
fisttpll
jns
fistpl
push
mov
loope
add
movsl
push
in
scas
bt
sbb
lret
roll
adc
cs
jmp
add
mov
jge
std
lcall
ficoms
pop
mov
pop
shll
lahf
test
mov
nop
cmp
aas
add
test
js
stc
mov
sub
das
lods
push
std
mov
and
jnp
and
or
adc
xchg
test
mov
stc
mov
int3
mov
cltd
push
cmp
push
and
ljmp
data16
jbe
push
scas
stos
imul
subb
orb
pop
pop
sbb
jle
or
add
cmc
mov
lcall
sbb
fcomps
mov
call
fistps
cli
insl
xchg
insb
push
jbe
loopne
fdivs
test
sarl
cmpsl
jecxz
lret
scas
stos
ds
sbb
clc
jecxz
clc
das
pop
insb
xor
sbb
int3
les
push
xchg
lock
das
mov
push
xchg
mov
jl
lods
or
xchg
and
push
jne
ret
out
jl
cmp
addr16
inc
jg
xchg
test
adc
imul
enter
cmp
iret
jge
std
repnz
arpl
pop
mov
inc
adc
sarl
xchg
das
cmpb
addb
adc
into
hlt
adc
lcall
xchg
sbb
aaa
mov
dec
pop
and
jb
in
add
loopne
jo
ret
and
imulb
shlb
je
ljmp
out
mov
add
adcl
jl
lcall
pop
mov
stos
in
push
loope
sti
call
mov
lods
and
popf
scas
or
pop
mov
cwtl
loopne
pop
mov
ss
testb
fimuls
fwait
outsb
add
lret
add
jle
clc
xor
out
in
arpl
jo
int
cmpsl
mov
xor
cmc
fistpl
jg
mov
cwtl
testl
push
jnp
push
lret
push
stc
call
mov
adc
adc
scas
cmp
mov
sahf
test
push
movb
adc
test
mov
int
fildl
nop
push
imull
movb
mov
sub
jle
test
in
fimull
xchg
lea
mov
cwtl
pop
mov
aaa
das
and
cld
pop
lods
sarb
stos
sub
jne
or
mov
stos
xor
push
rcrl
push
test
js
in
sub
pop
sbb
dec
cmp
dec
xor
lret
push
jmp
sti
mov
repnz
rcr
insl
sub
test
out
inc
jge
pop
sbb
or
test
orl
test
mov
sub
and
cld
push
jb
mov
jle
mov
mov
loope
dec
insb
pop
inc
push
movsl
or
scas
out
push
push
daa
inc
xchg
jg
mov
lods
lret
or
jge
push
mov
push
pushf
jp
stos
fwait
mov
mov
daa
mov
sub
loop
add
dec
push
mov
or
mov
xor
dec
cmpb
pushf
fldt
orl
mov
cli
jecxz
add
add
into
sbb
jp
cmp
dec
pop
ja
mov
addl
inc
aaa
dec
into
je
add
rolb
pop
int
mov
mov
xrelease
push
mov
add
das
cmp
test
repz
xchg
mov
inc
pop
push
shrl
ja
cmc
push
sahf
jle
jbe
popf
gs
nop
subl
mov
into
ds
pop
pusha
or
insl
push
jp
dec
movsb
mov
sub
lods
sahf
call
movsb
jo
cli
popf
ret
and
jbe
sub
bound
cmp
mov
xchg
xor
mov
pop
clc
xchg
ds
sub
adc
mov
loopne
loope
ds
movntps
fldl
xchg
add
jge
aaa
pop
push
shrl
xchg
cmp
loope
or
out
gs
leave
xchg
jp
inc
fisttps
int
test
ja
leave
cli
xchg
scas
aaa
push
push
shll
cmp
aaa
sti
ficoml
fwait
inc
pop
inc
mov
sarb
jl
jns
das
iret
inc
mov
pop
xor
or
push
or
testl
incb
dec
mov
sub
cmpsl
dec
mov
or
sahf
bound
dec
jo
cld
mov
jmp
and
aaa
adc
test
and
cltd
mov
cmp
cltd
loopne
push
cs
addr16
mov
pop
jg
js
lret
xor
mov
add
xlat
imul
push
xchg
ss
pop
or
pop
movsl
cmp
pusha
mov
rcll
lretw
ret
push
data16
scas
pusha
jle
into
stos
in
jecxz
movl
addr16
icebp
cmpsw
sbb
clc
jns
jge
pop
xchg
cmp
inc
aaa
inc
xor
push
imul
cmpsb
js
mov
mov
add
dec
sbb
data16
outsb
dec
popf
rcll
loope
mov
cmpb
outsl
pop
mov
test
push
scas
sti
mov
xor
cmp
hlt
mov
mov
aam
add
aad
push
pop
cmp
sub
in
decl
xchg
test
adc
cltd
sub
add
insb
pop
push
dec
mov
cmpsl
push
mov
iret
push
aam
call
das
push
sahf
cli
jl
and
fwait
xor
xchg
lahf
inc
addb
add
cmp
cmc
dec
call
aam
inc
jo
push
xor
xlat
sub
mov
mov
fcmovnb
clc
mov
pop
jmp
inc
repz
mov
out
cmp
push
ret
mov
test
int
pop
notb
int3
ljmp
mov
int
sub
loop
lock
scas
sbb
xchg
inc
stos
push
inc
addr16
popa
pop
pusha
loope
mov
mov
mov
shlb
push
adc
rcrl
lods
xchg
mov
mov
mov
xlat
call
adcl
int3
je
xor
xchg
and
cmp
dec
and
pop
fidivrl
iret
in
in
add
sub
push
std
mov
cs
stos
pop
daa
push
xchg
lods
dec
xchg
dec
shrb
jg
or
das
or
add
aad
inc
mov
mov
mov
sbb
outsb
in
xor
add
loope
xor
cmp
adcl
in
pop
jle
xchg
gs
jecxz
jg
daa
hlt
sbb
cmp
sbb
and
and
dec
pop
or
add
sbb
shll
xchg
pop
in
sbb
sub
in
mov
mov
sub
rcr
lea
rclb
xchg
xchg
mov
icebp
dec
jl
out
add
xchg
or
mov
subb
mov
inc
pop
sbb
sub
xchg
xchg
or
adc
push
pop
add
inc
stos
fdivrp
iret
leave
dec
fwait
mov
into
fidivrl
std
aad
sub
inc
xor
jmp
jge
test
dec
and
shlb
or
pusha
cmpb
cmp
mov
cwtl
push
mov
mov
fsts
outsb
pop
inc
inc
push
outsb
lea
sbbb
inc
lea
mov
xchg
jg
mov
test
dec
and
lock
lock
push
int
jge
push
int3
dec
pop
shl
jecxz
adcl
sbb
xchg
mov
jo
gs
push
mov
push
lock
out
test
es
mov
cmp
cmpl
and
push
mov
fwait
xchg
cs
imul
xchg
std
adc
mov
jns
or
xchg
pop
or
jne
in
ret
movsl
jb
out
ror
dec
pop
sbb
mov
in
dec
push
xchg
mov
inc
roll
movsb
pushl
push
lods
adc
call
ja
mov
jle
cltd
sti
scas
es
jne
out
jmp
cmp
xor
mov
adc
or
cmc
and
ja
es
lcall
or
jbe
or
xor
pop
sub
shrl
ret
xor
int3
lods
test
xchg
stos
ret
inc
sbb
cwtl
dec
andb
imul
scas
push
sub
clc
mov
push
call
shl
inc
lods
roll
aas
push
push
ret
test
loope
cmpsl
pop
xchg
mov
jge
jbe
xchg
cmc
dec
mov
xor
jb
mov
jl
mov
lret
mov
lret
cmp
cli
xchg
inc
je
ficoms
adc
push
push
add
xchg
loop
jb
out
pop
subl
pop
xor
sbb
out
sti
mov
lea
insb
pop
cld
sar
mov
dec
push
ret
call
js
fstps
int3
inc
movsb
cmp
test
and
loopne
or
xchg
int
cmp
lods
xchg
sbb
fnsave
test
int3
mov
add
pushf
jne
pop
lret
int
mov
mov
repz
xchg
frstor
dec
sub
idivb
lcall
lods
popw
and
jl
or
or
mov
cmpsb
inc
leave
pop
cld
shlb
pop
xchg
test
lahf
loop
mov
out
mov
jnp
push
fidivs
mov
loopne
inc
mov
jno
popa
bound
ret
cmp
movsb
rcrl
mov
mov
lahf
push
dec
mov
sub
pop
adc
test
int3
xor
xchg
push
scas
test
pusha
sbb
pop
sub
mov
adc
sbb
sub
jl
pop
fcompl
inc
scas
or
scas
lods
sub
push
dec
mov
xor
cmpsl
lcall
mov
cmc
mov
clc
xchg
cltd
adc
iret
shll
int3
scas
mov
sub
mov
dec
and
sti
and
add
sbb
add
pop
and
bound
stos
sbb
xor
dec
loope
mov
inc
push
aad
lea
cmp
and
sbbl
cmpsb
pushl
std
push
or
push
addr16
ret
jbe
xchg
roll
inc
inc
push
cmpsl
cltd
mov
xchg
sbb
arpl
or
mov
rol
mov
lret
sar
or
mov
insb
mov
aam
int
loopne
mov
aad
cmp
push
imul
add
pop
enter
and
push
icebp
push
lods
lods
dec
dec
add
mov
sti
and
adc
cltd
lods
cmc
inc
adc
cwtl
gs
js
pushf
xor
push
ss
andb
jns
push
test
aam
es
xor
pop
imul
mov
cmp
popf
mov
lcall
movsb
ret
pop
ficoml
inc
pop
adcl
mov
xor
or
and
push
mov
jns
add
lods
test
or
mov
jmp
jae
in
inc
fs
inc
pop
shlb
mov
popa
loope
xchg
dec
sub
push
idivb
shll
dec
xchg
insb
dec
lahf
jb
repz
sbb
les
iret
jns
sub
xchg
lods
ret
and
xlat
mov
add
cld
inc
popf
repz
add
int3
aad
scas
loopne
jne
add
es
pop
roll
arpl
inc
std
mov
push
icebp
aaa
mov
clc
leave
push
mov
inc
iret
lods
imulb
lret
push
add
dec
orl
aad
cmp
cmc
cmp
nop
push
push
sahf
add
pop
hlt
cmpb
rcll
scas
ja
mov
mov
sub
sahf
shl
test
ss
mov
imul
adc
adc
push
movsb
mov
repz
sub
dec
add
jnp
add
nop
mov
fdivl
mov
mov
jbe
jnp
shll
mov
inc
xorb
popf
push
out
mov
std
mov
stos
sbb
sarl
lods
mov
loopne
test
aaa
xchg
push
cli
fbstp
adc
out
mov
pop
movsb
leave
pushf
ja
fidivl
in
fwait
inc
push
daa
cmpsl
mov
xchg
cmp
arpl
sbb
xchg
mov
das
inc
mov
dec
mov
push
loopne
mov
cmp
mov
jge
xchg
mov
xchg
arpl
es
xor
xor
mov
sbb
or
fadds
jae
lock
int3
jno
inc
add
adc
xchg
pop
dec
adc
inc
push
cmp
sti
cs
mov
rorb
sub
or
test
cmp
pop
sub
mov
inc
test
es
sub
rcrl
fistpll
cmp
lret
add
xlat
pop
sub
pop
and
inc
mov
inc
shll
add
mov
int3
sbb
ds
pop
pusha
push
sub
fcoml
mov
lods
daa
insl
ss
ss
dec
jl
cmp
scas
push
adc
rorb
in
daa
mov
rcrl
cmp
sbb
mov
mov
scas
into
shrl
pop
mov
stc
stos
loopne
sub
pop
xlat
inc
sbb
fwait
or
push
push
push
nop
fucomip
vmovq
add
fwait
sub
inc
les
cmp
add
aam
xchg
sub
push
hlt
sahf
push
out
pop
iret
pop
dec
pushf
xor
lret
iret
lods
adc
ret
xor
xor
cmpsl
fucom
sub
and
fwait
loop
dec
mov
rclb
inc
stc
std
stc
lds
out
sbb
mov
mov
xchg
mov
test
pand
out
push
cmp
fdivp
cmp
aas
and
rcll
cmpsb
pop
shrb
js
lods
sbb
lods
mov
shlb
std
pop
les
fadds
std
rclb
imul
rclb
pop
sub
mov
cmp
or
popa
inc
js
or
scas
push
fucomp
repnz
repnz
xchg
jmp
jo
fiaddl
cmp
push
sub
std
dec
add
aas
arpl
incl
jge
cs
das
jge
pop
pushf
dec
aas
out
in
popa
fcmovnbe
imul
pop
ret
sub
or
shl
or
mov
xor
les
imull
aad
shl
shll
pop
pop
jg
push
xor
cli
popf
mov
cmp
call
dec
add
push
test
nop
mov
cmp
mov
push
pop
push
pop
sbb
into
icebp
repz
and
mov
aas
inc
push
push
pop
out
icebp
or
repz
add
mov
shl
xor
jge
xchg
mov
pop
movsb
xor
xchg
sbb
mov
fisttpll
in
roll
xor
sub
mov
iret
push
lock
and
ds
shll
add
pusha
int3
and
movsl
aam
adc
inc
jl
clc
dec
and
dec
inc
pushf
xchg
aaa
icebp
jae
andb
daa
xchg
scas
mov
inc
mov
dec
push
inc
pop
jmp
in
push
and
out
imul
in
andb
pop
cs
mov
and
push
mov
push
cmp
jno
mov
mov
daa
lods
or
nop
push
std
sub
mov
mov
rclb
lahf
mov
hlt
and
call
scas
inc
dec
addr16
pushf
loop
jp
jae
push
jae
sahf
jno
scas
ficoml
pop
sbb
aad
and
loop
pop
push
pop
xchg
ret
rorl
fldcw
mov
or
mov
in
mov
in
adc
and
les
sti
xchg
inc
fwait
mov
cltd
clc
adc
mov
loop
jmp
into
pop
xchg
dec
pop
mov
daa
mov
test
xchg
out
cltd
and
jno
pmulhuw
xor
cmp
movsl
or
outsb
mov
cmp
lods
mov
pop
jne
gs
arpl
cwtl
das
mov
loop
sbb
inc
jmp
jo
mov
loope
add
inc
orb
jg
out
ljmp
jl
inc
loop
cmpsl
xchg
pop
les
dec
xchg
ja
cmpl
jp
insl
pop
jns
dec
daa
out
sbb
mov
test
cmc
jne
popa
mov
repz
push
xor
mov
popf
mov
jle
sub
pop
pop
pop
mov
dec
mov
mov
inc
sbb
lds
pop
mov
or
cmp
dec
xchg
pop
ficoms
stos
cld
mov
xor
mov
test
mov
add
sbb
call
cmp
or
pop
pop
addr16
or
lret
and
add
add
enter
cmp
int
xchg
clc
pop
pop
dec
cmp
mov
and
cmp
fiadds
adc
adc
inc
push
lea
fldenv
and
fldenv
xchg
mov
jb
inc
sbb
sub
dec
int3
addr16
cmpsb
test
fwait
sbb
mov
aas
jg
or
hlt
cltd
sub
mov
pop
xor
imul
push
jne
xor
jp
mov
cmpsl
sub
ljmp
rolb
cmp
je
push
scas
movsl
sbb
mov
scas
movsb
xchg
lods
add
pushf
lock
fildll
dec
cmpsl
jg
jg
dec
inc
test
mov
sub
mov
incb
pop
cmp
pop
sub
ljmp
mov
sbb
sbb
pop
fists
mov
int
jge
movsl
cli
mov
add
mov
mov
jno
cmpsl
pushf
movsl
mov
adc
in
ja
mov
mov
scas
addr16
dec
mov
add
xor
mov
sub
mov
mov
dec
lret
subl
adc
inc
data16
jae
push
sahf
xor
ja
rclb
dec
data16
mov
add
je
jnp
cmp
insl
add
ds
jecxz
mov
sub
in
and
arpl
pop
in
jmp
inc
test
mov
push
push
test
mov
adcb
mov
mov
sarl
dec
mov
ds
xchg
sbb
rorl
cwtl
push
das
popa
pop
pop
jmp
xlat
jns
sub
or
loope
lock
dec
xchg
cwtl
adc
sub
and
pop
sahf
test
sub
mov
xlat
sarl
call
pop
aam
inc
cmpl
push
out
imul
adc
test
das
hlt
in
mov
jg
sti
push
ja
mov
dec
ss
adc
cmpsl
xchg
push
imul
imul
call
mov
mov
add
aad
icebp
and
or
push
inc
cmpb
fmuls
mov
jge
jp
jmp
adc
loopne
loopne
and
jo
mov
pop
xchg
mov
lret
mov
dec
fsubrs
addr16
push
push
adc
xor
daa
call
ret
lahf
push
cltd
adc
inc
inc
adc
and
blsfill
sarl
add
mov
mov
andb
lea
mov
out
sbb
in
dec
out
in
xor
inc
in
stos
lret
stos
pop
andb
pop
fstp
pop
stos
mov
jne
pop
repnz
or
xchg
dec
les
jmp
or
or
push
std
mov
leave
mov
nop
pop
sub
fnsave
or
mov
sti
fsubs
gs
stc
pop
push
push
xlat
shl
push
and
test
inc
dec
test
xchg
adc
aaa
mov
jns
mov
ljmp
daa
ret
sbb
sbb
lods
cmp
pop
push
sub
inc
in
sbb
jmp
insb
push
lods
sbb
inc
mov
orl
lahf
dec
lahf
dec
popf
addb
push
inc
or
pop
mov
lds
popa
adc
sub
mov
in
mov
or
push
xchg
stos
mov
in
repz
mov
test
and
push
andl
test
loop
push
outsb
fldcw
mov
inc
mov
aam
vpsubsw
testb
inc
mov
jge
xchg
cmp
mov
xor
repz
lret
jmp
mov
push
pop
jno
sub
jne
and
or
loopne
mov
xchg
inc
movsl
pushf
out
pop
filds
je
push
pushf
idivl
aas
notl
addl
inc
add
add
cld
aam
xchg
jmp
or
inc
mov
fld
stos
adc
fisubl
add
xor
arpl
repz
adc
lret
daa
pushf
jae
lds
test
xchg
stos
repnz
repnz
mov
jge
in
inc
in
pop
cltd
pop
lea
jg
pop
sub
ja
cmc
js
push
insl
fstpl
adc
jmp
mov
bound
xchg
mov
xchg
aaa
mov
fs
adc
mov
nop
mov
adc
jl
ja
mov
cmp
loopne
jl
cld
stos
inc
orb
jo
cld
add
adc
leave
xchg
ljmp
paddsw
fs
adc
loope
or
adc
dec
jmp
xchg
andb
pusha
cmp
xor
sbb
test
push
adc
push
aam
cmpsl
jp
js
es
je
push
push
mov
dec
mov
cmp
jb
negb
loop
pop
shrb
dec
scas
mov
loope
pop
jecxz
jecxz
out
or
dec
clc
pushf
mov
and
ret
scas
cmp
stos
jecxz
cld
push
gs
adc
int3
jecxz
inc
outsb
repnz
cmpsl
faddp
inc
cmc
cmp
xor
imul
inc
mov
push
mov
xchg
mov
adc
call
mov
lea
stos
xor
pop
sub
and
and
adc
icebp
and
mov
cmc
bnd
push
mov
sub
movsl
adc
shll
jns
pop
jmp
cmp
int
ret
test
imul
leave
push
in
out
fistl
add
and
add
xchg
ficomps
cmp
sbb
pop
lret
fstpt
outsb
cmp
call
arpl
cld
push
imull
xchg
jp
leave
dec
xor
iret
daa
jns
out
inc
dec
dec
mov
gs
ljmp
aaa
inc
sub
mov
lret
jp
xor
or
mov
stos
jg
and
popf
mov
mov
xchg
scas
call
in
insb
int3
xchg
or
mov
pop
adc
sub
pop
xor
leave
movsb
push
das
or
mov
lock
mov
mov
fldl
fiadds
jne
mov
into
sbb
arpl
fwait
cli
sahf
mov
pop
cltd
mov
lods
hlt
pop
out
xor
push
fidivs
cli
jo
pop
push
or
sub
or
in
add
jo
ret
scas
repnz
js
xchg
aas
mov
add
es
mov
pop
sbbl
and
mov
or
cmpsb
in
mov
adc
rep
lods
leave
loope
mov
push
xor
sub
cmp
lcall
jecxz
jbe
cli
lahf
cmp
mov
inc
adc
aas
mov
or
mulb
xor
scas
sbb
es
or
fidivrs
pop
fbstp
mov
loopne
addl
rol
add
and
repz
dec
daa
in
outsl
repz
adc
out
out
sahf
daa
lret
jg
aas
stc
rclb
dec
and
sbbb
dec
pop
clc
xchg
lcall
mov
shll
pop
adc
std
pop
xor
rorb
or
pop
lret
in
or
ret
cld
and
push
sub
lea
frstor
out
push
cwtl
push
and
loopne
sbb
mov
sbb
popa
lods
jecxz
sub
mov
fistpl
jle
xor
roll
shll
lea
movsb
outsl
sub
fs
sbb
mov
lea
jne
push
push
pop
repnz
xchg
dec
lea
and
shlb
in
mov
lea
mov
mov
xor
mov
pop
sbb
adc
lret
repnz
cmp
xor
cmp
cli
dec
xor
ja
cmp
sub
inc
leave
jge
mov
sub
mov
or
loope
jmp
scas
jbe
stos
or
shr
xchg
xchg
mov
mov
shll
and
mov
jnp
push
pop
lds
cmp
inc
stos
stos
lods
rcl
sbb
xchg
clc
mov
jns
aam
adc
jle
enter
arpl
out
xchg
sbb
popa
xor
adc
shl
out
das
jnp
or
lcall
push
jge
push
out
adc
rcrb
pop
aam
add
jne
dec
lret
mov
mov
mov
push
dec
popa
inc
dec
push
inc
push
add
add
mov
filds
add
dec
cmc
les
mov
or
sbbl
xor
movsb
push
push
loope
in
clc
push
sub
insl
lods
xchg
daa
cmp
ret
cmpsb
int
enter
sub
inc
fadd
popf
js
addps
mov
aas
dec
pop
loope
in
repz
outsl
or
push
les
mov
call
test
push
daa
push
out
adc
in
movsb
sub
mov
jecxz
aaa
daa
ficoms
icebp
mov
mov
dec
xor
mov
adc
sarl
push
sub
dec
mov
ret
jae
insl
push
adc
popa
loope
cld
mov
sti
test
and
fwait
gs
cld
repz
fldl
adc
sub
add
in
mov
add
pop
cmpsl
mov
lds
fs
stos
dec
push
fimuls
cmp
shll
jbe
cmc
ss
xchg
mov
pop
jnp
push
repz
call
mov
add
lahf
dec
or
mov
test
inc
dec
mov
or
lods
shlb
xor
sub
xchg
js
adc
icebp
push
pusha
jo
aaa
aam
and
mov
add
xchg
pushf
icebp
lock
ds
cmp
xor
jl
lret
or
cmp
out
push
inc
jl
sbb
jne
std
jnp
pop
push
cli
mov
xchg
fisttpll
stos
mov
pusha
dec
shrb
sub
outsb
mov
in
jo
mov
or
mov
pop
jo
mov
mov
in
decb
cmc
movsb
pusha
ja
cmc
aam
jo
adc
add
scas
jbe
out
jns
std
and
fwait
adc
rcr
cmpsl
test
cmpb
or
push
sbb
cmpsb
mov
and
mov
imul
cmp
mov
push
xor
icebp
push
aaa
cmpsb
jle
push
mov
fwait
movsb
mov
mov
add
pop
cltd
rcl
arpl
and
sar
mov
pop
shlb
shll
ret
inc
push
cmove
push
mov
inc
inc
mov
imul
cmp
stos
outsw
ret
ds
test
movsl
movsb
hlt
dec
out
sbb
add
out
lcall
lret
pop
and
cmc
sub
adc
push
pop
fnstenv
jbe
bound
in
decl
add
cli
mov
call
jb
in
pushf
les
dec
sahf
das
xor
pop
testb
pop
fnsave
mov
mov
add
inc
mov
add
ss
sbb
outsb
mulb
sarl
ds
out
mov
add
cld
adcb
loope
dec
inc
dec
push
mov
cld
jecxz
test
cmc
jmp
in
adc
outsl
jmp
push
cmp
popa
mov
adc
mov
mov
pop
dec
inc
subb
stc
cld
stc
pop
testl
lds
push
sbbb
test
dec
cmp
popf
cli
clc
jb
imul
add
cmp
jge
mov
addr16
dec
inc
cmp
cs
inc
push
rcr
in
lret
lcall
movsl
scas
dec
mov
xlat
cs
jl
lods
nop
xor
pop
mov
inc
ret
sub
cmp
out
je
inc
scas
aaa
rolb
int3
pushf
jns
xchg
dec
inc
ret
sub
jg
and
xor
ret
mov
mov
test
mov
lcall
jns
jns
pop
add
adc
pop
loope
jbe
mov
hlt
loopne
adc
push
popa
ds
and
mov
mov
int
movsl
xchg
mov
cmp
int
ljmp
jge
inc
clc
sbb
xchg
xlat
pop
cs
adc
outsl
sub
test
nop
aas
sarl
dec
sti
mov
mov
sbb
fadds
das
bound
mov
pop
push
dec
push
jo
loopne
lret
sub
aad
pop
push
cld
addr16
ds
sbbb
fcomi
jp
and
cmp
and
lods
push
fidivl
in
lds
fisubrs
test
and
in
out
fadds
leave
icebp
xchg
pop
inc
adcl
stc
mov
pop
shlb
test
push
shll
or
scas
sub
dec
inc
sbb
pop
shl
dec
bound
jbe
call
jge
sahf
pop
push
sahf
movsb
inc
sbb
pop
les
push
add
cwtl
inc
jno
and
pop
inc
sub
pop
fstpt
dec
inc
inc
sbb
mov
lods
cmp
lods
push
test
mov
cmp
pop
ljmp
sub
insb
push
je
sbb
lret
sbb
fwait
xor
mov
sarb
lcall
adcb
js
icebp
mov
push
je
and
fs
and
or
cmp
jp
cli
sbb
mov
mov
add
mov
inc
sti
subl
in
out
xorl
fxam
xor
xor
rolb
insl
mov
decb
cmc
ret
int
sbb
mov
jb
or
data16
jp
cli
ja
enter
ficoms
pop
sub
inc
jmp
in
inc
sarb
fcmovnbe
or
pop
mov
push
imul
pop
shll
iret
lahf
pop
out
or
aas
xchg
xor
cmp
ficompl
and
jp
ret
lods
jmp
jae
push
lcall
mov
and
into
cli
loopne
jg
jle
addr16
loope
jge
sub
mov
jbe
lds
push
sti
fisttpll
mov
test
xchg
rclb
stc
test
pop
mov
pop
xchg
div
test
xor
nop
imul
es
sbb
inc
and
xchg
iret
sbb
div
ficoml
pushf
ds
add
xor
cld
and
sarb
dec
insb
loopne
push
mov
fucomip
sti
inc
mov
fcmovu
inc
je
mov
adc
xchg
sbb
jl
sub
call
push
mov
cli
cli
mov
jb
mov
dec
cltd
add
imulb
lds
push
rorb
insb
mov
dec
mov
loopne,pn
xchg
cmp
aas
sub
and
pop
in
or
mov
xor
es
cmp
adc
push
in
cmp
inc
dec
fdivrp
lock
stc
push
xchg
xchg
std
sub
inc
sbb
daa
cmpsl
cltd
nop
inc
lods
sub
aas
les
decl
rorl
arpl
jmp
xchg
xor
outsl
fsts
cmpl
cltd
mov
dec
mov
imul
mov
adcb
pop
movl
jne
fsubrs
mov
mov
sbb
pop
repnz
ret
ja
jo
xchg
stos
and
or
addr16
ja
inc
lea
scas
cmpsl
loopne
mov
mov
mov
or
pop
mov
cld
xlat
pop
lods
movsb
jmp
cmp
pop
addr16
cs
loop
iret
out
xchg
push
sbb
cs
adc
fstpt
push
repz
sbb
jns
pop
cmpsl
and
add
pop
push
int3
stos
pop
sbb
mov
clc
add
mov
add
push
repnz
in
jl
or
iret
ficompl
shll
sbb
adc
dec
pusha
sbb
repnz
cmp
or
repnz
lahf
cmp
mov
icebp
jmp
adc
insb
lret
jmp
stc
xor
xlat
sub
lcall
stos
pop
mov
xchg
ljmp
cwtl
mov
cwtl
push
or
imul
jl
mov
sti
sbb
cmp
fisubrs
es
lea
mov
test
inc
dec
test
cwtl
xor
in
xchg
mov
shrl
lods
sub
pop
dec
cmc
loop
cs
leave
leave
and
and
push
cmp
push
inc
sbb
mov
jle
pop
xchg
lahf
sub
jle
faddl
in
clc
clc
mov
sub
jl
sbb
xor
repz
adc
mov
mov
fwait
loope
jno
jnp
jg
and
rorb
push
nop
push
insb
cltd
popf
pop
xor
jb
test
lock
mov
dec
test
lea
mov
subl
sbb
call
call
fidivl
cmp
jae
fildll
pop
pushf
pop
mov
mov
sbbl
out
xlat
idiv
call
in
or
push
cmp
decl
cmpl
lret
aad
jge
or
push
dec
sbb
pop
lcall
shll
xchg
xchg
mov
pusha
pusha
adc
mov
adc
xor
pusha
pop
repz
jmp
addb
insb
icebp
and
jl
sahf
rclb
jmp
xor
jmp
or
and
cld
adc
clc
adc
dec
aas
aas
mov
in
jg
imul
pop
mov
jne
addr16
addr16
iret
xor
sahf
pop
movsb
sub
fdivrs
in
in
mov
popa
inc
mov
mov
loopne
in
pop
arpl
insb
ja
filds
mov
ljmp
je
adcb
push
sbb
xchg
dec
lcall
adc
jmp
xor
pop
mov
fwait
lret
mov
jne
iret
or
leave
dec
rcrl
ret
mov
xchg
stc
or
pushf
nop
push
out
mov
lea
sub
cld
iret
movsl
icebp
xlat
fdivrs
decb
arpl
hlt
loopne
test
dec
jbe
and
xor
jmp
iret
add
lahf
inc
xchg
aam
mov
and
jmp
loop
or
or
push
out
mov
jne
js
add
inc
xchg
shll
out
sti
mov
stos
fsubrp
pop
pop
or
clc
cmp
movsl
pop
shr
xchg
pop
mov
and
and
xchg
pop
imul
or
push
es
daa
jnp
pop
adc
out
jne
ret
jne,pt
pushf
inc
jae
rcll
inc
fidivrs
and
stos
in
push
sbb
in
xchg
dec
xchg
inc
cs
xor
shlb
lods
popf
out
test
arpl
movsl
fstps
lock
scas
out
pushf
aas
jmp
fnsave
cmp
aas
sbb
out
shll
pusha
sbb
out
or
mov
test
lea
cmp
jbe
js
hlt
iret
pop
push
dec
pusha
shl
cs
icebp
aam
hlt
xchg
xor
aam
cli
ss
repz
movsb
lods
push
jns
insl
scas
dec
adc
mov
es
subb
fcoml
inc
int
mov
in
and
outsl
cmp
lock
rcr
add
aas
push
jb
test
out
and
jge
jnp
add
xor
inc
je
addb
es
loop
testl
out
bound
lods
and
jnp
cltd
arpl
pop
ds
push
lods
xor
lods
add
sbbl
loop
ret
repz
mov
and
imul
and
cmp
push
xor
fldl
xor
xchg
dec
loop
dec
into
fucomi
xchg
xor
aam
lret
movsb
lahf
arpl
dec
int3
or
shl
inc
insb
push
mov
jns
lods
mov
jns
sarb
enter
mov
cmp
mov
iret
mov
fisubs
jp
jp
scas
jge
rclb
jo
mov
adc
sahf
leave
mov
orl
test
fsts
sub
sub
or
jne
add
fsub
lret
ret
jmp
cmp
popl
lods
adc
or
cli
pop
fwait
idivl
in
or
mov
xchg
adc
push
test
mov
mov
ret
into
adc
popf
sub
cli
ret
or
cmp
jl
adc
xchg
jp
pop
dec
jns
xorb
test
inc
jae
and
pop
movsb
lcall
mov
mov
arpl
loopne
pop
les
sub
push
pop
and
or
push
in
dec
es
mov
gs
sbb
sbb
cltd
pop
pop
out
dec
xor
js
mov
jo
cld
sbb
out
repnz
dec
int3
xor
or
jmp
mov
repnz
inc
push
adc
sub
loope
mov
repz
into
push
and
push
es
andl
xor
pxor
pop
push
mov
fidivrs
sbb
sbb
inc
popf
dec
and
hlt
arpl
es
pop
arpl
mov
das
mov
inc
rorl
dec
fcomps
imul
pop
bound
mov
cmc
pusha
mov
movsl
cli
ljmp
cli
dec
in
and
test
add
add
mov
out
data16
rcrb
mov
push
and
roll
sbb
rcr
mov
jecxz
adc
inc
addb
ret
ret
mov
cli
dec
mov
clc
mov
xchg
push
ret
dec
inc
sub
aaa
or
insl
inc
je
int3
mov
jbe
inc
xchg
pop
and
mov
add
ss
inc
push
push
lret
dec
loopne
mov
lock
mov
sbb
ss
inc
cmp
and
clc
pushf
mov
push
cmp
pop
movsb
gs
xchg
cs
sbb
aam
mov
mov
sub
idivb
out
pop
sub
inc
rcrl
adc
js
xchg
mov
add
aaa
cld
bound
lret
dec
shlb
lock
dec
mov
repz
inc
ds
mov
out
mov
das
das
pusha
push
fsts
pushf
clc
add
or
movsl
xchg
sbbb
push
or
lea
mov
sbb
sbb
mov
out
fists
push
and
fsubp
in
notb
push
mov
dec
jbe
movsl
adc
pop
dec
xchg
out
dec
shlb
and
sub
or
cmpl
sysenter
sbb
sarb
sub
fstpl
in
sbb
or
add
or
or
js
cmc
and
xchg
test
push
fldenv
cmp
mov
xchg
inc
xor
cmpsb
aas
push
in
neg
and
sbb
orb
mov
out
pop
push
scas
scas
dec
aad
test
and
cltd
fstpl
je
aaa
mov
adc
insl
sbb
inc
pop
cmc
jge
out
out
dec
out
lods
xchg
ret
pop
int
imul
leave
sub
sbb
bnd
sbbl
lret
xor
jmp
daa
mov
and
mov
sahf
shrb
gs
add
in
fstpt
aas
js
jmp
sub
cmp
cmpsl
xchg
push
mov
fucomp
lahf
movsl
aad
stc
xor
lods
adc
mov
jge
lahf
ja
mov
addr16
mov
shlb
scas
insl
and
lret
xchg
lods
mov
lret
dec
or
popf
out
test
lock
adc
jp
dec
xor
xor
pop
jae
dec
dec
lods
pop
pop
or
or
js
xor
nop
cmp
cli
add
nop
imull
xchg
xor
mov
dec
inc
cmp
lret
jmp
pop
pop
les
inc
std
enter
and
mov
lcall
gs
mov
jno
adc
sbb
dec
int3
mov
add
stos
cmp
jl
jmp
xchg
cmp
das
sti
pop
lock
subb
inc
mov
je
test
lea
push
dec
sub
cli
sub
imul
rolb
popf
inc
mov
cld
or
xchg
jl
lcall
cmpsb
jmp
mov
dec
mov
pop
mov
clc
xchg
pop
aas
xchg
lcall
clc
and
sub
mov
nop
jb
push
mov
jbe
insb
add
sbb
adc
mov
mov
push
mov
mov
sbb
in
mov
mov
cwtl
sahf
cld
pop
jo
gs
dec
push
dec
sub
scas
lds
jno
push
test
scas
mov
add
test
sub
sbb
inc
and
mov
clc
fnstcw
xor
xor
jno
push
push
sbb
and
ret
mov
mov
lahf
jno
stos
or
lret
pop
mov
mov
fimuls
sti
dec
dec
sbb
dec
or
int3
jns
movsb
dec
xor
sti
dec
jp
mov
mov
sub
addr16
sarl
in
jnp
cwtl
test
mov
pop
jg
sbb
imul
sub
add
repnz
push
xor
sub
mov
daa
das
jno
jg
cmp
pop
xor
js
cmp
xor
ret
adc
sub
movsl
test
jge
fnstsw
in
sbb
dec
cmp
aas
adc
mov
daa
dec
out
lock
cwtl
mov
xchg
inc
pop
out
cld
xlat
fsubrl
adc
int3
dec
out
test
xchg
and
adc
mov
inc
sub
fst
xchg
loop
push
adc
lods
psllw
sbb
insb
fwait
add
cltd
je
cmpsl
jbe
fimuls
cmc
andb
jns
xchg
addr16
jne
push
sub
push
cmp
outsb
stos
ret
addr16
or
loopne
call
cmpsb
pop
cmp
insl
adc
ja
js
dec
xchg
xchg
or
mov
mov
mov
test
bound
mov
mov
mov
cmp
repnz
dec
mov
shrl
lahf
push
mov
cmp
rcrl
shrl
popa
enter
cmp
mov
imul
inc
dec
out
jle
dec
les
in
loope
movsl
adc
lock
testl
int
add
push
enter
test
and
test
ja
in
dec
sahf
and
cwtl
jne
xchg
inc
in
jmp
mov
jmp
clc
jecxz
push
mov
inc
inc
inc
clc
ss
push
out
jo
cltd
lock
and
push
aad
in
shll
push
cmpb
scas
das
dec
sub
inc
data16
test
pop
icebp
test
test
and
rcrl
push
loop
pop
adc
or
int3
shlb
cmp
jmp
mov
imul
int3
ss
jmp
imul
inc
dec
addr16
dec
fcmovne
adcl
into
sbb
mov
test
in
add
push
data16
jnp
aam
loope
outsl
cmp
sub
xor
push
lret
mov
sbb
cltd
lock
in
mov
insl
jg
dec
cli
mov
pop
mov
fistps
mov
dec
and
dec
mov
dec
movl
xchg
loopne
mov
es
int
sbb
nop
sub
and
push
sbb
or
dec
or
pop
and
inc
push
in
in
fcomps
in
sbb
xor
jmp
clc
cli
mov
fiadds
in
push
ss
in
push
std
mov
sti
call
mov
jae
out
into
sub
lods
inc
pop
sub
dec
or
out
ss
std
add
repz
out
mov
cltd
fwait
cltd
out
push
cmc
sub
popa
add
in
das
xor
inc
fucom
adc
mov
mov
lcall
rolb
cld
outsb
xchg
pusha
push
lock
pop
sbb
nop
lret
mov
nop
inc
push
arpl
ret
cmpsb
push
xchg
cmp
jbe
mov
mov
sub
mov
fcompl
mov
jg
and
enter
ss
and
mov
stc
movsb
dec
push
aas
jg
xchg
jg
ret
mov
pop
jo
push
fistpll
cltd
fisubl
mov
push
and
arpl
cmovns
data16
xor
gs
scas
jae
adc
dec
cwtl
adc
push
or
leave
adc
test
pop
push
mov
es
movsb
sub
adc
xchg
fcmovb
pop
cmpsb
adcl
adc
fildl
add
loopne
and
xor
xor
push
arpl
add
out
jbe,pt
cmpsl
dec
push
sbb
daa
int
mov
jo
into
xor
leave
test
sbb
adc
andb
push
inc
orl
mov
inc
jno
repz
fstpl
pop
cltd
adc
push
icebp
sub
addr16
jecxz
jb
out
sarb
mov
sbb
xor
out
fs
gs
inc
rcll
rorl
dec
pop
dec
adc
call
aas
cli
mov
add
add
stos
mov
add
mov
jge
mov
pop
cmp
cwtl
imulb
enter
xchg
inc
xchg
mov
sbb
mov
mov
xor
cmp
mov
js
mov
jl
dec
jmp
sub
pop
leave
pop
insb
push
int
imul
push
inc
xor
sub
shrb
nop
adc
into
xchg
cmp
cli
in
push
pop
inc
dec
pop
xor
mov
xchg
sar
mov
pop
aas
cmp
mov
and
lods
jmp
test
div
aam
sbb
outsb
jo
or
call
fcmovb
cli
cmp
jmp
adcb
repnz
ss
int3
shrb
je
cmp
lods
nop
loopne
dec
ljmp
push
in
stos
pushf
ret
dec
je
cmc
aaa
dec
stos
inc
xchg
lret
dec
pop
pop
inc
mov
js
js
cmp
outsb
and
or
fwait
and
movsl
mov
or
imul
pop
fidivrl
mov
int
xorb
cmp
sub
shlb
push
adc
adc
dec
cltd
add
testl
aas
or
sarl
cmpsl
leave
int
jmp
add
les
shl
jmp
or
cmp
cmc
mov
clc
mov
xorb
lcall
cmp
jns
mov
pop
and
les
mov
stos
je
cmp
lahf
call
xchg
and
cmpb
int3
ljmp
or
fimuls
add
sbb
lret
lods
add
push
dec
ret
xchg
icebp
mov
lods
xor
icebp
mov
lods
xor
adc
sub
jae
mov
inc
int3
inc
xor
inc
lea
js
aas
jle
jb
adc
mov
pop
jno
mov
cs
pop
out
lods
daa
ret
fs
jmp
mov
les
icebp
mov
fmull
dec
hlt
bound
push
mov
loop
mov
sub
inc
xor
cmc
jo
stos
hlt
cmpl
cwtl
inc
pop
adc
cmp
scas
movsl
lock
jbe
das
mov
nop
std
inc
xchg
dec
fldlg2
std
orl
jg
cmp
pop
cld
cwtl
inc
lcall
mov
xchg
dec
inc
or
stc
mov
addl
fidivl
rcrb
fdivr
inc
add
push
scas
pop
test
pop
std
xchg
mov
rorb
mov
xor
in
sub
outsl
jne
lods
or
add
test
mov
xchg
mov
js
outsl
iret
jg
xor
or
push
loopne
add
pop
lods
jecxz
jmp
stos
mov
subl
jp
xchg
xchg
loop
mov
pop
bound
cmp
gs
and
stos
dec
cmp
int
loope
jge
test
push
dec
add
mov
lock
mov
shlb
pop
push
mov
mov
in
inc
and
cmc
lcall
adc
in
inc
iret
mov
popl
jp
cmc
cmp
loope
test
into
mov
mov
adc
loop
mov
adc
repz
lahf
inc
mov
mov
dec
dec
imul
pushf
cli
sub
cmpsb
cmp
adc
adc
xchg
push
xlat
loop
mov
divl
mov
fcoml
inc
jne
int3
mov
sbb
dec
or
cmpsb
mov
jge
fwait
cmp
das
lods
pop
pushf
loopne
bound
in
xchg
mov
cltd
ret
sbb
mov
pop
pop
push
call
shll
test
daa
insb
nop
movsb
mov
dec
inc
jmp
push
daa
or
out
sub
testl
and
inc
in
lcall
cmp
rcrb
or
pop
jecxz
push
les
mov
xor
jbe
pop
mov
popa
push
loop
push
fstp
imul
std
es
repz
push
push
lret
jno
bswap
imulb
loop
xchg
dec
mov
repz
push
adcl
pop
es
int3
push
sub
stc
dec
jo
incb
dec
cmpsl
jmp
fisttpll
xchg
mov
fcom
sub
ja
mov
xchg
dec
mov
mov
or
mov
std
pop
jle
js
ds
sub
xor
leave
es
xor
out
cmp
jo
pop
jg
and
pop
mov
jge
jg
jecxz
cli
pop
xor
jae
lods
jle
arpl
fsubrl
ljmp
inc
scas
or
movsl
repz
out
add
aaa
rorl
xchg
ja
push
cli
adc
mov
orl
mov
cmp
test
gs
enter
cmp
add
or
jbe
adc
sbb
mov
xor
icebp
mov
mov
cltd
mov
cmpsl
xchg
dec
lds
push
xor
xor
lret
test
loop
mov
arpl
or
push
cltd
mov
add
push
mov
mov
dec
loop
lods
in
mov
mov
icebp
and
ret
test
call
jb
stc
cwtl
mov
jmp
and
rorl
sahf
sbb
clc
xchg
aam
cmp
mov
movsl
outsb
rolb
ljmp
idivb
and
cmp
add
adc
jecxz
enter
ja
lock
cmp
inc
cli
jmp
mov
fnstenv
sbb
dec
fld
in
lods
dec
and
stos
sbb
outsl
fbstp
add
inc
stos
push
add
dec
mov
scas
shll
shll
outsl
xchg
add
mov
sahf
fdivrs
aaa
push
fidivrl
cmp
adc
test
ret
cli
push
mov
dec
sub
out
sub
ds
ds
fcmovnu
xor
or
jns
je
cs
mov
xchg
mov
insb
mov
and
rcrl
mov
test
xor
cmp
int
rol
xchg
adc
mov
adc
jo
test
fcompl
lods
lcall
std
pop
je
ja
in
xor
test
pop
repnz
loope
dec
adc
mov
cmc
jle
sub
push
xor
jmp
imul
mov
fcoml
jbe
icebp
push
xchg
push
xchg
jge
mov
push
jno
and
iret
cmp
push
iret
push
lahf
pop
and
mov
fimull
inc
sbb
mov
xor
push
jg
lahf
pusha
mov
push
je
or
faddp
xchg
sahf
or
xor
mov
mov
inc
pusha
sbb
insl
sbb
not
xor
fisttpll
push
stc
mov
sub
cltd
sahf
rcrl
push
insl
pop
sarb
leave
mov
cmc
add
ja
prefetch
or
adc
lahf
int3
int3
mov
negb
jb
aaa
lahf
stos
int
cmpsb
push
je
inc
std
xlat
cs
outsb
cld
mov
ljmp
sti
aas
xor
fmulp
push
pop
add
aas
in
inc
inc
imul
inc
fs
aam
int3
cmp
pop
mov
scas
mov
test
or
mov
pop
xchg
pop
lret
mov
pusha
loope
xor
loope
push
dec
mov
enter
sbb
dec
sbb
lds
xchg
daa
mov
lahf
jno
mov
or
popa
test
push
lret
and
mov
add
lret
pop
aas
int
int
fxch
add
add
std
dec
mov
ljmp
addr16
and
sbb
sbb
pop
lahf
jl
clc
imul
jp
in
fisttpl
ret
sti
stos
stos
popa
pop
cmp
add
mov
popa
mov
pop
jg
fisttpl
jb
movsb
lds
and
adc
cltd
cmc
fldcw
xlat
jmp
push
in
movsb
mov
pop
je
std
ss
and
or
scas
in
lcall
pop
adc
mov
push
rcrl
push
ret
dec
add
fs
adcb
cltd
mov
repnz
outsl
xlat
lret
std
jle
jbe
xchg
hlt
inc
sbb
aad
add
cmp
iret
xchg
dec
dec
jne
aas
and
loopne
mov
fwait
xchg
mov
or
dec
das
ret
in
sub
dec
scas
xor
lret
enter
jmp
mov
leave
sbb
xor
mov
xchg
cmp
xor
hlt
jno
push
cltd
fs
add
xlat
cwtl
cmp
mov
pushf
xchg
test
rol
test
ficomps
stc
dec
jecxz
pop
rolb
sub
jnp
lock
test
out
leave
mov
mov
xchg
imul
call
fmuls
dec
arpl
or
jae
jle
sbb
sub
lcall
mov
movsl
sub
popf
lcall
popl
add
add
cli
std
rclb
inc
sub
cmp
sub
adc
lret
xor
push
inc
fcmovnb
xchg
cmpsl
scas
lahf
xchg
and
rcr
mov
sahf
cmc
iret
int3
jnp
jg
in
push
xor
lret
adc
lret
mov
pusha
xchg
cltd
aad
scas
ret
pop
shrl
xchg
cs
lds
dec
cmp
mov
scas
xchg
loop
scas
je
adc
testb
dec
pop
imul
mov
mov
xor
xchg
gs
xor
ljmp
cmp
pop
sahf
or
aam
mov
pop
cmpsb
add
push
sbb
shl
pop
pop
jp
mov
int3
xchg
int
shll
xchg
or
push
inc
pusha
pop
pusha
dec
leave
xchg
pop
clc
int
xor
sbb
xor
cwtl
pop
shrb
mov
jle
arpl
out
enter
shrl
repnz
je
push
or
leave
scas
std
cld
cmp
filds
mov
xlat
lods
push
jge
or
mov
inc
hlt
pop
ret
shll
inc
aad
dec
sahf
imul
push
xchg
enter
adc
mov
xchg
mov
xor
xor
fistl
in
lea
push
dec
mov
xor
ret
gs
fistl
repnz
pop
shlb
mov
xchg
ficomps
pop
add
ljmp
mov
pop
cmp
adc
mov
icebp
aas
insb
cmp
mov
pop
mov
pop
pop
dec
adc
fdivp
lock
ret
push
fiadds
jb
outsb
int
mov
inc
cwtl
inc
inc
movsl
dec
cmpsl
mov
mov
aam
or
push
mov
imul
and
int
idiv
sar
adc
jl
dec
loope
lret
dec
movsb
or
jne
insl
stos
in
lea
lods
js
icebp
popf
jnp
mov
mov
imull
scas
out
push
sbb
loope
cmp
or
mov
jle
cmpsl
arpl
test
fcmovb
psraw
ret
and
mov
jae
mov
mov
sbb
mov
scas
rclb
popf
mov
add
jne
rcll
mov
lret
jecxz
and
mov
push
pusha
adc
jb
mov
enter
jle
repnz
out
mov
push
fdivr
ret
outsb
hlt
and
add
xchg
in
int
mov
push
lods
xchg
inc
fistl
sub
push
xchg
mov
inc
jnp
push
call
ljmp
sbb
xor
enter
jo
adc
cli
ficoml
adc
loope
fisttpl
jmp
scas
enter
mov
add
pushf
xchg
add
xchg
out
cmp
jns
mov
aad
lret
mov
std
outsl
sub
mov
inc
cmp
push
pop
cmp
fidivs
ljmp
rolb
fiadds
ficoms
jne
cmp
jmp
idivb
fnsave
and
mov
scas
les
and
movsb
ja
ja
scas
mov
in
icebp
fnstenv
out
sbb
jl
cmc
cmp
mov
xchg
jge
xor
mov
xchg
inc
rclb
push
pushf
xchg
int
enter
jmp
out
stos
push
or
inc
inc
jo,pn
dec
push
call
aas
sbb
mov
rorl
push
add
ss
cmp
fcomps
scas
cmp
dec
clc
or
pop
sahf
subl
inc
bound
jle
aaa
pop
push
mov
outsl
ss
xchg
sbb
jle
xchg
lret
mov
sbb
incb
popf
lds
fsubp
test
adc
adcb
mov
dec
outsl
and
fsubs
sbb
movsl
pop
popf
icebp
mov
loop
push
gs
addr16
fidivrl
fidivrs
mov
fisubrs
das
push
in
insl
adc
add
ja
jge
sbb
aas
out
jo
sbb
cmp
test
daa
jmp
xor
inc
cmc
fstpt
xchg
stos
movsb
shlb
cmpsl
cmp
test
xor
iret
outsb
outsl
out
xchg
xchg
inc
sub
xchg
or
pop
inc
fwait
movsl
dec
mov
add
mov
popa
or
shrb
jnp
ja
xchg
cmp
inc
mov
jb
icebp
dec
fidivrl
pushf
popa
mov
stos
sub
adc
or
pop
and
les
mov
rcrb
cmp
dec
push
and
enter
jbe
lcall
lea
push
mov
ds
out
and
negl
arpl
out
bound
jmp
sub
testl
pop
or
add
jl
test
add
faddp
dec
add
out
add
mov
adc
lock
imul
mov
xor
mov
rclb
dec
pop
sbb
inc
add
jle
sub
add
sub
movsl
test
sahf
movsb
add
jge
pushf
decb
pushf
sbb
stos
movsb
insb
mov
cmc
mov
into
or
imul
shrb
pop
jbe
pop
lret
push
ret
lock
icebp
mov
push
add
out
ss
cmc
xor
dec
and
roll
stos
mov
sbb
mov
mov
daa
mov
rcrl
decl
xor
ja
xchg
loop
sbb
pusha
and
test
orb
adc
gs
cmpsl
test
gs
ret
dec
pop
fdivrs
andb
pusha
sbb
add
jl
xchg
mov
fwait
jl
mov
inc
jnp
pop
decb
or
xacquire
adc
xor
push
and
pop
jbe
repnz
clc
jg
imul
and
push
and
pop
push
aas
movl
adc
or
xchg
xor
data16
pop
loopne
cltd
cli
xchg
sbb
ja
stos
test
jo
ss
dec
roll
push
test
adc
jg
mov
sub
inc
mov
pop
insb
pop
loop
pop
dec
popf
inc
sbb
cwtl
jo
and
testb
scas
lret
call
pop
xor
adc
add
push
inc
loope
stos
popa
in
pop
test
jbe
mov
pop
das
jmp
pop
mov
mov
sahf
addr16
daa
jnp
iret
push
sbb
sub
test
pushf
test
inc
adc
sar
subb
and
xchg
jge
mov
fwait
lahf
fcom
cmp
xchg
push
xor
cmp
aad
jbe
pushf
stos
lods
inc
mov
test
jecxz
ret
or
pop
mov
xlat
push
in
in
test
jbe
cltd
adc
jmp
mov
shlb
jp
mov
fwait
push
push
ds
mov
jnp
addr16
popf
xor
nop
out
cmpsl
jns
pushf
dec
mov
cmp
dec
jbe
fwait
inc
pop
ds
loope
adc
addr16
push
leave
push
inc
xor
push
loope
dec
adc
dec
pop
and
daa
in
lock
xor
ss
cwtl
loope
mov
leave
scas
push
loopne
xchg
push
gs
sbb
dec
loopne
out
cmp
inc
mov
pusha
cltd
mov
ja
push
mov
cmp
fcmovu
xchg
mov
ret
xor
sbb
lock
push
sbb
pusha
frstor
repz
cmp
fstpt
ja
mov
in
stos
push
in
sbbb
sbb
and
adc
fstps
inc
mov
mov
ja
lds
daa
and
int
sub
xchg
xchg
xlat
test
jo
sti
inc
popf
cltd
mov
rcrl
adc
pop
push
ret
or
jmp
mov
or
dec
pop
test
jp
pop
testb
adcb
mov
mov
iret
int3
int
xchg
xlat
pop
jb
loope
gs
push
xor
pop
mov
fisubrl
fistl
jo
lds
shlb
popf
or
mov
mov
pushw
enter
mov
mov
sub
jecxz
fsts
inc
mov
pushf
sbb
cmp
mov
js
mov
aaa
pop
or
lret
pop
inc
nop
out
pop
adc
push
xchg
aam
dec
xchg
pop
xchg
mov
adc
fs
push
inc
sub
hlt
inc
add
jo
hlt
cmp
xor
mov
enter
cmp
and
mov
dec
int
push
cmp
and
xor
outsl
outsl
jno
sbb
xlat
lahf
adc
cmp
or
fcomps
scas
and
sub
int
hlt
sub
mov
jnp
mov
jnp
jle
fistpl
jmp
lcall
cmc
xchg
push
int3
lahf
or
out
loopne
xlat
call
inc
fistpll
push
adc
pop
iret
mov
pop
lret
dec
mov
aad
adc
loope
stos
clc
popf
rol
ret
xchg
test
fstps
sub
mov
scas
push
sbb
sbb
cmp
mov
daa
dec
js
or
jnp
in
pop
sarl
pop
cs
push
cmp
movsb
push
xor
outsb
insl
jnp
or
jle
inc
mov
and
xchg
iret
and
sbb
sarl
cmpsl
aas
adc
rol
cs
xchg
ljmp
pusha
jg
pop
sbb
mov
loop
ret
mov
nopl
das
les
dec
ds
inc
push
or
pop
test
aaa
inc
pop
adc
jecxz
jns
test
jne
testl
mov
mov
or
mov
mov
sbb
out
mov
sbb
mov
mov
adc
push
adc
mov
icebp
into
cmpl
inc
es
lock
int
xor
sbb
sbb
aaa
or
mov
mov
out
adc
fidivs
mov
and
sub
imull
xorb
mov
push
pop
aaa
enter
push
int
mov
push
cmp
cmc
dec
lds
daa
push
xchg
mov
lcall
add
mov
loope
js
negb
jns
scas
loopne
push
imul
adc
into
cltd
mov
filds
mov
cmpsb
leave
cwtl
push
pushfw
push
daa
pusha
and
cmpsb
pop
sti
scas
add
push
out
fcmovne
add
push
pop
push
pushf
ss
push
icebp
data16
mov
jno
push
cmp
mov
mov
stc
or
test
add
pop
imul
xchg
stc
add
out
mov
and
cmp
jae
pop
add
stc
iret
hlt
jge
and
gs
addr16
loope
dec
or
xor
pop
adc
es
shrb
mov
mov
ret
adc
push
outsl
or
fcompl
iret
inc
inc
loop
loopne
or
push
ljmp
loop
adc
cmp
pop
push
testl
repnz
mov
lea
ja
xchg
jl
add
dec
fwait
or
ds
insl
push
imul
outsb
repz
nop
mov
stos
inc
adc
vpsubw
subl
jmp
mov
sbbl
xchg
sbb
addr16
inc
sub
mov
loope
out
cltd
cmp
dec
test
push
call
in
or
outsl
in
pop
push
int
sub
add
and
fcomi
mov
jle
add
sbb
dec
in
adc
adc
dec
mov
mov
xor
jne
push
mov
sub
icebp
sarb
rolb
repnz
or
in
xchg
cmp
icebp
aad
sbb
gs
mov
ds
add
fwait
push
das
and
das
inc
out
pop
scas
out
inc
ret
lret
inc
jmp
faddl
fucomp
or
mov
mov
lahf
or
xchg
imul
insb
xchg
xor
push
sbb
cmc
shr
ret
lahf
addr16
out
mov
scas
iret
or
test
adc
leave
fs
lds
fcom
inc
add
push
cmp
insl
pop
jnp
push
and
jns
push
lea
xor
adc
mov
inc
das
ret
or
imul
arpl
movsl
jnp
in
push
ja
xchg
mov
push
hlt
inc
enter
inc
sub
mov
jp
pop
dec
mov
les
std
in
and
mov
out
xchg
lods
xlat
xlat
xor
in
add
adc
lods
pop
dec
imul
lret
repnz
jo
inc
pop
das
imul
xor
xor
push
xchg
popf
rorb
movsl
mov
pusha
clc
cmp
cmpsb
inc
repz
call
push
bound
cwtl
sti
jl
add
add
out
dec
cmpsb
add
mov
mov
aaa
cwtl
push
push
mov
sbb
mov
stc
push
jecxz
int3
sahf
hlt
xchg
rorl
mov
jl
addr16
pushf
popf
cmp
xchg
pop
filds
aaa
mov
or
outsl
add
push
fsubrp
roll
ret
into
push
adc
jmp
push
xor
adc
fdiv
outsl
sub
movsl
fimuls
js
lods
into
pop
xor
push
push
outsl
jmp
sbb
mov
cmp
add
icebp
sbb
roll
or
jg
mov
cmp
xchg
sub
out
mov
les
jle
jmp
insb
adc
dec
fwait
sbb
scas
divb
int3
enter
push
ja
loopne
jle
loop
and
daa
jb
icebp
movsb
and
sbb
ret
push
add
sbb
add
cmp
lret
cwtl
and
dec
mov
mov
add
outsl
mov
xchg
fnstenv
jno
xor
and
and
sbb
mov
sub
dec
movsb
sub
xchg
out
enter
fstl
and
arpl
notb
mov
daa
mov
rorb
mov
add
xlat
jo
ss
iret
sbb
sub
add
pop
testl
jae
icebp
lods
or
cli
sarl
in
jmp
adc
fsubp
insb
popf
sbb
jge
sub
orl
aas
bound
cmpsl
pop
fildl
adc
ljmp
in
inc
dec
es
lret
lods
push
xor
icebp
jno
add
sbb
gs
mov
ljmp
mov
inc
xor
mov
jle
pop
mov
mov
outsl
and
lcall
sbb
loop
icebp
cltd
jo
xchg
loop
gs
ret
mov
movsl
or
dec
xor
cmpsb
testb
hlt
and
fadds
inc
icebp
cmpl
sub
inc
mov
inc
or
push
sbb
mov
inc
stc
fistpll
pop
movsb
xchg
mov
dec
loope
fucomp
and
sub
lret
adcb
mov
es
orl
ljmp
sub
or
lods
leave
adc
push
stos
cmp
popl
shrb
and
push
pop
ds
xchg
sti
jae
xorl
sbb
mov
push
inc
cmpsb
pushf
cmpl
fisubs
in
inc
mov
inc
fs
aad
cmp
lret
and
cwtl
inc
test
xor
sbb
rcrl
ja
mov
jnp
addr16
ss
jb
scas
bound
dec
das
jne
adc
add
lds
icebp
hlt
insb
add
in
call
adc
adc
jmp
push
xor
sub
push
ret
stos
xor
shll
pop
out
rcrl
push
outsl
ret
adc
cmp
out
add
pop
mov
push
loope
into
cmp
push
and
inc
push
out
pop
and
adc
imul
push
pop
xchg
pushf
rolb
daa
out
std
sub
pop
adc
mov
or
pop
jmp
repz
sbbl
mov
jo
test
clc
int
jb
out
je
inc
adc
xchg
jp
push
arpl
mov
aam
push
lock
hlt
outsb
outsl
push
aam
push
xchg
popf
cmpsl
add
jne
mov
xchg
ljmp
insb
test
sbb
mov
ret
push
push
cmpsb
int
mov
add
sbb
push
dec
sbb
or
sbb
test
cmpsb
sti
dec
imul
test
or
pop
test
popa
hlt
push
je
sahf
into
stos
stos
mov
pop
shll
in
xchg
push
negl
cmp
sub
dec
push
pop
jecxz
cmp
sbbl
icebp
arpl
fs
and
jno
in
adc
inc
mov
mov
mov
aas
jp
cwtl
enter
xchg
fstl
lock
xor
inc
mov
pop
dec
dec
fstps
int
inc
add
cmpsl
addr16
scas
pop
mov
push
pop
mov
rcrb
or
rep
subl
repnz
rorl
roll
inc
jge,pt
adc
ds
in
cmp
andb
out
cltd
push
jb
sbb
pop
dec
and
inc
adc
aam
push
mov
daa
test
mov
sahf
xor
loop
inc
xlat
mov
mov
enter
imul
les
outsl
test
mov
imul
and
mov
outsb
pop
cltd
push
push
leave
fisubrl
mov
orl
lret
mov
in
mov
pop
inc
pop
and
dec
jecxz
and
dec
scas
out
je
pusha
push
das
push
into
jg
rcrl
push
push
aad
mov
cs
xchg
outsb
mov
test
fs
adc
pop
pop
dec
sahf
pop
add
es
test
inc
or
add
ret
or
popa
test
push
jmp
mov
push
addr16
and
test
cmc
test
mov
dec
imul
jle
dec
std
push
fsubrl
mov
mov
lahf
std
outsl
fildl
mov
jne
xchg
push
into
push
scas
fidivs
add
inc
jnp
lahf
aas
mov
or
mov
adc
pop
mov
mov
imul
jbe
pop
lods
cmp
sbb
lods
sub
mov
insl
pushf
inc
push
outsl
sahf
std
and
cmp
or
mov
fdivr
push
sahf
sbb
push
push
mov
cld
test
mov
cmpsb
lret
fsubrs
int
mov
incb
mov
imul
mov
sub
push
dec
test
addr16
imul
jmp
push
pushf
outsb
xor
lds
inc
mov
shl
shll
icebp
icebp
ret
std
pusha
jnp
scas
in
add
mov
mov
jp
dec
loopne
jecxz
fsub
inc
rorb
fs
sub
aaa
outsl
push
scas
push
incb
testb
shl
inc
je
mov
fsin
sub
imul
hlt
pusha
adc
sbb
repnz
inc
test
push
fistps
sub
cmpsl
xlat
pop
stc
xchg
jp
cmpsb
sub
sbb
sub
or
mov
xor
dec
dec
mov
sub
cmc
fwait
mov
lods
das
pusha
stos
fs
sub
dec
inc
add
mov
div
mov
pop
add
and
sub
dec
sub
mov
insb
sub
adc
imul
enter
iret
pop
push
popf
fsubrs
iret
dec
movsb
cs
dec
bound
lret
xchg
cmp
jecxz
mov
mov
pop
mov
mov
xchg
fstpt
jbe
mov
xchg
sub
iret
loopne
mov
pop
lcall
ret
push
sbb
adcl
cmp
jp,pt
pop
popa
es
add
dec
mov
push
icebp
aas
add
jnp
loop
jae
add
sarb
add
aad
mov
pop
xchg
popf
mov
mov
sub
dec
xor
mov
xchg
iret
adc
sbb
and
jne
fldl
les
mov
out
insb
das
push
out
iret
or
mov
mov
out
in
aas
mov
fidivrs
cmp
push
push
outsl
jle
nop
test
pop
lret
mov
imul
mov
call
movsb
xor
mov
out
ljmp
inc
lods
jmp
pop
js
inc
sbb
aaa
cmp
and
pushf
dec
xlat
push
xchg
repz
push
ret
sub
add
adc
mov
mov
out
push
movsb
mov
dec
adc
push
mov
push
outsb
push
inc
stc
movsb
repnz
cmc
fadds
and
sarb
or
stc
bound
pusha
cmpb
divl
push
inc
dec
subb
popa
cmp
lret
xlat
mov
mov
aaa
into
cmc
sahf
jle
xor
rsm
cli
dec
jne
mov
scas
mov
test
xlat
pop
cmp
icebp
push
or
push
out
mov
jns
pop
jle
jns
cltd
push
mov
loopne
pop
xchg
in
mov
pop
fsubr
or
cmp
in
jbe
mov
icebp
insl
jnp
or
pop
fcmovne
xor
ljmp
rcr
push
loope
test
insl
and
dec
xchg
add
push
imul
test
in
arpl
movsl
lret
pop
adc
call
loopne
dec
int3
pushf
mov
add
clc
arpl
jne
inc
dec
mov
jl
sub
pop
xchg
pop
cmp
xchg
cmp
sbb
dec
lods
movsb
add
or
imul
mov
fildl
adc
jbe
insl
cmp
pop
aam
sahf
pop
jae
sbb
and
fwait
xor
rcll
mov
shrl
add
jmp
adc
mov
or
add
ret
aad
xchg
adc
dec
dec
pusha
xchg
or
mov
cmp
pop
lret
lahf
call
bound
add
pusha
cmp
push
jno
inc
xchg
dec
push
lock
repnz
ror
mov
mov
sub
jecxz
xor
mov
inc
leave
jmp
pop
das
arpl
imul
and
xor
adc
sar
inc
mov
inc
popa
inc
fmulp
insb
xchg
xchg
dec
inc
dec
sub
adc
sbb
popf
xor
mov
mov
stos
scas
mov
sub
insb
mov
out
sbb
ss
push
leave
mov
cs
test
ret
mov
mov
rorb
pop
cmpsb
call
xlat
xchg
xlat
jle,pt
pop
popa
lcall
clc
sub
add
aas
lea
jno
je
das
mov
add
flds
cwtl
xchg
dec
mov
sti
dec
inc
ss
push
cmp
loope
mov
sub
cwtl
in
imul
stc
shrl
rclb
idivl
addr16
xor
je
lret
mov
fisttpl
and
mul
pminub
or
add
pop
push
in
add
imul
or
call
int3
stos
repnz
fadd
mov
xchg
jecxz
lock
inc
mov
ss
insl
pminsw
loope
sub
mov
rorb
loopne
aam
add
and
sbb
or
mov
mov
push
cmp
xchg
cmc
dec
xor
pop
outsb
mov
or
mov
pop
cmc
jle
call
inc
cmp
out
in
inc
dec
enter
mov
add
jb
cmpsl
mov
push
mov
push
js
loop
popa
clc
mov
cltd
xor
and
or
enter
dec
add
pop
inc
and
add
inc
jle
jns
cmp
test
mov
push
jbe
and
sbb
popf
addr16
cmp
and
loop
and
mov
pushf
mov
in
scas
ss
pop
das
in
add
lock
out
sub
ljmp
shr
cs
jbe
sub
aas
in
lret
sbb
xchg
mov
xor
xchg
dec
in
and
or
cli
mov
subb
lret
adc
inc
jecxz
push
jle
adc
mov
fcomi
pop
mov
cmp
insb
xor
xor
scas
push
into
dec
push
pop
jno
pushf
push
cmc
loop
cmpsb
rorl
outsb
lcall
loop
lods
push
lret
xchg
sub
dec
nop
sbb
jle
inc
or
cld
cld
xchg
push
into
jl
mov
xchg
add
dec
and
push
dec
and
push
aas
pop
fcmovnbe
fdivrl
test
and
xor
sbb
inc
shlb
fadd
push
rorb
je
mov
rol
add
pop
les
sarl
mov
xor
xchg
mov
cld
stos
shr
push
cld
movsb
fwait
sub
ja
aas
xlat
lahf
and
cmp
sub
loopne
push
pop
xor
outsl
stos
out
inc
adc
cmpsl
sbb
push
sbbb
in
xor
and
and
add
dec
or
inc
cwtl
sub
pop
inc
mov
inc
cld
or
cmp
pushf
inc
dec
push
rorb
xchg
pop
packuswb
pop
mov
xchg
add
ljmp
xor
or
fsubr
pop
call
mov
push
mov
nop
dec
push
jmp
mov
or
cwtl
xor
add
and
lods
jbe
mov
mov
pop
inc
and
push
shll
sarl
jp
inc
rep
fsubl
or
out
jp
add
loopne
jl
imul
popa
jmp
pushf
push
out
scas
ret
or
mov
loopne
aam
add
push
push
fdivl
pop
movsl
mov
clflush
jge
outsb
sti
mov
pusha
cmpsb
sbb
in
dec
lock
sub
test
dec
xchg
pop
dec
inc
pop
jbe
dec
xor
in
sub
jne
sub
mov
dec
cmp
sbbb
xlat
dec
sbb
jns
push
push
adc
and
stos
jg
mov
cmp
in
jo
push
jp
lock
mov
mov
jp
jl
inc
les
inc
jns
divl
sub
outsb
aas
pushf
mov
push
mov
and
pop
mov
adc
and
rclb
notl
popa
jg
or
pop
or
jp
mov
sub
add
dec
inc
mov
jmp
test
mov
sbb
mov
sbb
les
ljmp
sbb
ror
stos
xlat
mov
push
sbb
or
aas
pop
dec
in
or
sub
mov
cmp
lret
iret
xor
add
or
and
mov
dec
adc
xor
xor
adc
sarb
dec
mov
add
lods
push
es
cmc
sub
xor
test
stos
or
sub
mov
jbe
and
ja
out
jbe
add
lea
push
xor
xor
xchg
xchg
sub
pushf
sbb
push
lods
loopne
flds
lret
stos
cmc
cmp
pop
push
or
jge
push
mov
frstor
push
mov
outsb
jno
fisubrl
cmp
dec
outsl
imul
add
fninit
mov
movsb
notb
mov
in
jae
cmp
push
mov
and
out
xorl
pop
pusha
rorb
addb
xchg
xchg
rcrb
insl
lods
test
push
pop
stos
xor
or
jg
jnp
mov
mov
sar
xor
fs
mov
xor
mov
dec
ficoml
cmpsb
aas
ljmp
aam
shrl
push
dec
adc
ja
mov
scas
lds
xor
push
mov
pop
mov
lock
leave
xchg
in
cs
fdivrs
sub
adc
xchg
cmc
das
ljmp
add
mov
sub
push
mov
jns
cmp
push
mov
mov
mov
xor
int3
cmc
xchg
push
inc
test
dec
fcmovnu
mov
push
push
lcall
push
adc
dec
popf
movsb
sub
shr
cmpsl
cmp
xor
and
cltd
lods
addr16
adc
int3
enter
out
mov
out
inc
push
jecxz
mov
mov
movsl
jge
fildl
sbb
dec
test
hlt
jge
movsb
loopne
mov
out
inc
cmc
in
shlb
ss
xor
ds
jnp
push
cs
jo
bound
jo
mov
and
lea
jb
lret
xchg
leave
or
inc
jmp
in
ja
jbe
mov
pop
mov
jno
add
shlb
mov
jns
fwait
pop
add
lcall
out
popf
sub
push
scas
mov
mov
push
out
sub
push
sahf
mov
and
mov
sbb
or
in
loope
jmp
lret
enter
cmp
gs
dec
and
sbb
adc
adc
sti
insl
rcrb
pop
and
lea
test
icebp
xchg
and
add
add
bnd
das
pop
aam
std
repnz
pop
stc
sbb
neg
icebp
fiaddl
jmp
pop
pop
cmp
jae
mov
adc
es
out
push
sti
mov
pop
xchg
jns
adc
mov
pop
fcoms
pop
push
dec
sahf
je
push
sub
jecxz
lea
add
lret
stos
roll
or
loop
push
and
ret
dec
dec
cmc
xchg
push
and
imul
ds
subps
mov
add
xchg
jp
jge
aam
fwait
sub
mov
cmc
shr
mov
or
jmp
inc
aaa
outsb
test
pusha
dec
sbb
sahf
or
addr16
mov
push
xchg
mov
push
push
push
clc
cli
scas
out
ss
sbb
cmp
test
cmpsl
jae
xchg
popa
add
push
enter
addl
outsl
fiaddl
fs
mov
decl
mov
outsb
iret
scas
shrl
rorb
dec
rcl
xchg
sbb
push
into
hlt
fmul
adc
sbb
in
fsubl
pop
and
pop
mov
loopne
nop
movsl
pop
fldl
mov
xor
adc
clc
dec
ret
cmp
sbb
pop
and
in
xchg
fcmove
xchg
std
pushf
and
cmp
fidivs
es
or
cmp
inc
add
jnp
sar
repnz
inc
in
inc
xchg
sbb
int3
mov
mov
subl
xor
xor
popf
ljmp
adc
add
rcrb
and
ror
jge
pop
jmp
orl
fwait
xor
jp
or
xor
popa
add
inc
leave
or
in
cmpsl
in
sub
rclb
push
mov
daa
leave
add
lods
js
ljmp
xor
pop
fmull
sbb
std
aaa
adc
aaa
cmp
ret
cmpsl
lret
rclb
fists
imul
je
test
stos
ds
mov
call
shlb
pop
dec
shlb
cli
imul
ror
dec
inc
repz
lcall
cli
mov
mov
outsl
inc
dec
cmp
nop
data16
cmp
xorl
popf
lds
adc
shl
adc
scas
movsb
int3
xchg
scas
push
lret
pop
nop
xchg
jge
xchg
inc
ljmp
xchg
push
cmp
mov
pop
fsubrs
imul
pop
insb
or
js
jns
sbb
add
in
ret
clc
and
fmuls
cmc
or
mov
sub
mov
mov
xchg
das
add
mov
lcall
arpl
mov
out
and
jmp
enter
jns
mov
int3
add
push
iret
jnp
mov
shlb
loope
leave
xorl
in
ljmp
and
mov
dec
and
mov
mov
push
les
push
repz
push
jmp
out
xor
lcall
test
push
out
pop
xchg
dec
insb
fsubrl
je
std
out
sti
popa
mov
fbld
out
loop
xchg
jb
sbb
xchg
push
decb
frstor
jns
and
lea
fisttps
bnd
stos
xor
in
adc
out
jecxz
jl
cmpsl
push
jecxz
sub
addr16
dec
lods
iret
imul
sbb
out
mov
data16
je
add
jae
mov
ljmp
sti
mov
inc
push
pop
jle
pop
in
jecxz
add
pop
ljmp
test
sub
and
sbb
ljmp
incb
mov
push
ss
xor
cmpl
aaa
leave
stc
push
mov
and
sbb
jae
dec
mov
out
jns
jl
mov
leave
rcrb
sbb
add
cltd
imul
mov
leave
jns
and
inc
xchg
inc
pop
outsb
or
fadds
jbe
or
dec
mull
cmc
mov
imul
rolb
repz
sub
imul
lock
pop
das
cmp
aas
mov
pop
ds
lea
aam
dec
mov
in
xchg
adc
fstps
pushf
ret
test
insl
adc
ljmp
push
xchg
stc
in
mov
jp
outsb
cmp
aaa
test
cmp
fsts
stos
stc
out
fcomps
pop
cs
movsl
jns
stos
add
adc
outsl
mov
into
repnz
xchg
divb
sbb
fildll
mov
mov
imul
cmp
test
negb
lods
fcoms
inc
stc
inc
fildll
dec
pop
sahf
sbb
jecxz
mov
pop
sub
mov
cmp
mov
lock
imulb
jo
stc
xor
sbb
into
mov
push
inc
aas
in
xchg
rorl
push
cmp
adc
push
out
cmp
into
lds
push
mov
cmp
rcrl
jp
int3
mov
andl
data16
xchg
rcll
mov
adc
scas
cmp
out
int3
shll
pushf
aaa
stos
out
inc
out
sub
add
popa
sbb
sub
dec
repz
daa
adc
imull
sahf
mov
adc
es
mov
icebp
and
inc
insl
test
or
xlat
push
ror
dec
cli
pop
add
xor
loopne
daa
repnz
add
ret
mov
aaa
flds
shl
or
mov
ljmp
icebp
push
lcall
add
lods
sub
inc
pop
rcrb
clc
pusha
pop
mov
add
lret
sub
popl
lea
mov
pop
pop
xchg
push
pop
and
mov
fcmovbe
or
sti
sbb
fadd
fildll
fbld
ja
ret
mov
call
jo
or
pop
fldt
bound
mov
and
pop
mov
fmuls
fisubrs
push
pop
jne
push
inc
mov
fistpll
sbb
loope
mov
subl
cmp
test
and
cmp
inc
push
adc
pop
sbb
inc
and
cmp
fldt
inc
mov
lahf
jp
fwait
sti
adc
cmp
inc
inc
in
shlb
xor
push
or
insl
push
les
scas
or
xor
pusha
adc
xchg
ljmp
xor
and
sbb
or
sbb
lods
jns
sbb
mov
adc
mull
xor
icebp
or
dec
inc
mov
push
testb
scas
shlb
jbe
push
mov
cmc
popa
mov
lret
jmp
push
inc
ja
shlb
ret
pop
jo
pop
or
mov
cmp
loopne
lcall
dec
test
repnz
lods
aad
jp
in
push
pop
sub
fbld
imul
cld
mov
jo
adc
fwait
cmp
dec
sub
lea
mov
jp
sub
fistpll
mov
cmpsl
inc
mov
mov
outsl
lret
push
cmp
jnp
mov
mov
mov
or
push
sub
cmpsl
push
jge
pop
sbb
add
xchg
insb
cmp
mov
fisubs
add
mov
jb
bnd
push
and
iret
nop
popf
pop
imul
scas
cltd
rorb
in
push
push
clc
stc
sbb
movsb
mov
gs
iret
nop
mov
arpl
xor
into
mov
and
aam
cmp
loope
das
jbe
add
vpunpcklwd
aad
in
loope
mov
cmp
sub
pop
mov
test
adcl
xchg
hlt
cmc
inc
mov
or
mov
sbb
xchg
in
adc
outsb
out
and
scas
adc
imul
xlat
fildll
adc
ds
push
xchg
into
push
jns
jb
adc
cmpb
xchg
repz
cs
mov
push
pop
add
fwait
repz
pop
push
cmc
rcrb
aam
cmp
jns
cmpb
scas
insl
fldl
stos
sub
or
mov
int
ja
xor
add
xchg
mov
mov
sub
je
pop
add
mov
xchg
lcall
pop
stos
xor
gs
jle
mov
lar
inc
iret
sbb
or
mov
bound
incb
incl
loope
out
andb
mov
xchg
jnp
xchg
fnsave
mov
addr16
pusha
push
pop
lret
or
inc
mov
add
cld
dec
out
arpl
mov
xor
mov
or
dec
add
mov
js
mov
fistpl
cmp
or
les
rcrb
xchg
imul
sahf
sub
daa
orb
jp
ret
mov
insb
push
sbb
dec
push
pop
cltd
pop
es
and
ret
mov
sbbl
imul
adc
push
xor
cmc
and
add
jmp
pop
dec
xchg
xor
test
xorb
fs
or
and
mov
dec
cwtd
push
mulb
test
scas
sub
shl
test
or
push
inc
lea
dec
shlb
pop
jp
fucomp
lods
sbb
add
lea
rcll
mov
mov
push
push
subb
xchg
mov
adc
out
enter
xchg
or
xor
clc
stos
cmpb
outsl
clc
jae
inc
add
jg
movsb
dec
out
or
cmpsl
shlb
mov
xor
xorl
aaa
sti
dec
aam
sbb
cmp
daa
call
sub
inc
hlt
pop
push
xchg
out
push
int3
in
pop
nop
aad
popf
leave
testl
addr16
test
ret
out
addl
sub
mov
push
iret
jno
push
push
popf
xor
movsb
adc
xchg
pop
aas
dec
sarb
mov
jmp
daa
stc
inc
in
xchg
inc
lods
sbb
lock
shrb
ja
xor
lock
cmpsl
into
cltd
int
and
rolb
faddl
andb
lock
fisttps
fcoms
movsl
and
add
sti
fisubl
mov
into
push
push
sti
xchg
pop
pop
dec
arpl
pop
sbb
fldcw
test
loope
hlt
push
in
in
push
mov
in
jge
into
and
mov
inc
mov
lods
mov
scas
xor
adc
and
dec
mov
mov
xchg
lods
js
sub
imul
std
jne
pop
int3
mov
into
sarl
xchg
mov
or
mov
lods
inc
mov
stc
into
cs
jmp
mov
adc
fidivs
ds
loopne
or
loopne
sarb
pop
movsb
pop
adc
push
int
jbe
lods
jge
and
ret
test
sbb
mov
arpl
test
popf
mov
test
xor
add
les
rcrl
in
pusha
pop
jecxz
mov
outsl
in
add
pop
sbb
adc
inc
adc
outsl
rcr
push
popf
mov
dec
and
add
sbb
ret
mov
in
or
jp
jp
jnp
popf
filds
xor
jge
shr
test
test
pmaddwd
lods
push
ljmp
add
push
add
and
cmp
lea
cwtl
pop
push
ret
cs
loop
pop
pop
pop
fwait
rcrb
lahf
mov
push
in
pop
icebp
pop
mov
fcmovnbe
mov
push
jmp
outsl
rclb
call
jecxz
bnd
pop
rep
cld
into
ss
mov
xchg
pop
lods
sbb
fwait
lods
dec
push
popf
inc
adc
aaa
popa
xor
and
clc
inc
imul
add
cmpsl
xor
pop
stc
mov
push
inc
aad
mov
mov
xor
sahf
cltd
pop
mov
add
and
xor
mov
enter
sub
pushl
in
shr
stc
jnp
jb
dec
mov
mov
shll
sbb
outsb
popa
cmpsb
jne
pop
mov
adc
les
into
movsb
xchg
xor
and
rorb
inc
in
dec
aam
xchg
sbb
push
lcall
repnz
repz
add
mov
shl
mov
das
xor
inc
je
daa
inc
dec
inc
mov
shl
jo
loop
shlb
out
dec
pop
cmpsl
cmp
or
maskmovq
shrb
xchg
out
mov
bound
push
icebp
mov
mov
dec
mov
cmp
cwtl
test
add
jnp
pop
iret
call
lock
sub
test
add
stos
cli
les
pop
xorb
ret
shrb
mov
mov
test
push
dec
cltd
mov
cmp
jp
dec
sbb
and
in
mov
sub
std
xchg
outsb
in
das
jne
mov
push
pop
pop
xor
into
shlb
ss
lcall
jne
pushf
test
or
and
sbb
out
fwait
int
pushf
push
popa
pop
jl
out
add
shr
or
mov
or
adc
bnd
jno
cmp
mov
xor
aad
sub
fwait
out
ss
cmp
outsl
sbb
push
jo
push
ljmp
jle
subb
sub
add
orb
xor
mov
fwait
repz
jmp
xchg
lret
rorl
and
mov
cmp
int3
mov
enter
lds
mov
cmpsl
in
daa
cwtl
sarb
arpl
lods
adc
push
movsl
mov
xchg
icebp
dec
push
adc
pop
or
in
adc
xchg
sbb
lods
mov
aad
inc
fstp
add
faddl
lret
pop
jnp
pop
and
sbb
dec
mov
sub
push
loopne
cmp
cld
ds
jnp
mov
lret
add
mov
sbb
sti
test
pop
mov
sahf
sub
dec
in
mov
push
mov
add
cmpsl
cmp
push
xchg
mov
cs
fidivs
stos
or
mov
stos
filds
jnp
push
mov
pop
imul
stc
xor
stc
pop
lcall
jnp
rcll
jle
mov
scas
enter
repz
mov
in
pusha
push
nop
shrb
mov
or
orl
inc
in
mov
divl
ret
jmp
jnp
dec
test
test
les
mulb
adc
cltd
ljmp
xorl
pushf
mov
xchg
pop
das
or
pushf
mov
mov
cltd
xchg
fnsave
loop
push
and
xor
stos
popf
lods
shr
push
push
pop
pop
sbbb
out
fstpt
mov
testb
add
push
std
xor
sub
stos
mov
hlt
pop
push
mov
jecxz
pop
inc
mov
add
dec
mov
dec
clc
mov
push
test
sbb
pop
sub
jae
notb
insl
adc
dec
xor
dec
les
shlb
andl
cmp
add
dec
mov
sub
xor
cmc
addr16
adc
xor
lret
imul
les
ss
pop
sub
jne
inc
imul
mov
and
push
sahf
mov
and
dec
out
jae
sbb
xor
je
in
hlt
xor
fbstp
ss
out
and
ss
shrb
mov
imul
mov
jge
and
clc
arpl
pushf
aam
aad
sbb
sbb
bound
jmp
or
int3
xchg
fdivs
adc
test
test
out
fwait
or
cli
fadd
fisubl
mov
or
mov
cmc
pusha
mov
lock
fwait
jns
or
cmpb
and
adc
lea
push
jo
add
out
mov
mov
cmpsb
mov
cmpl
inc
and
jle
stos
pop
das
incl
dec
xchg
xchg
arpl
add
pushl
clc
lcall
mov
loop
iret
clc
inc
lods
push
daa
push
jno
ljmp
cld
mov
xchg
ds
jle
mov
gs
dec
and
ljmp
or
and
ja
les
pop
xor
nop
sub
loopne
sub
dec
or
fnstenv
pushf
cmp
push
stc
ljmp
adc
iret
shrd
jg
insl
insl
repz
fdivrl
sti
pop
sbb
sarb
jnp
jg
in
cld
or
mov
xchg
ss
adc
aaa
mov
xchg
movsl
dec
mov
aaa
xor
inc
imul
test
aaa
sub
push
jbe
addb
aas
rcrl
sti
ret
fs
sbb
into
jp
xchg
jae
js
insl
and
inc
imul
out
loope
push
icebp
jae
sub
adc
add
push
mov
add
mov
enter
enter
and
pop
inc
std
mov
std
jmp
xor
ljmp
fidivl
xlat
jo
cwtl
test
push
or
or
mov
cs
sbb
push
popf
push
movsb
or
shlb
mov
push
rorl
les
mov
and
out
lea
mov
or
dec
dec
inc
pushf
ffree
mov
jns
add
gs
sahf
in
sbb
add
repz
and
fdivs
push
mov
test
mov
cmpxchg
stc
int
dec
adc
xlat
mov
mov
pusha
mov
ja
lahf
cli
lock
testl
pop
in
rcll
dec
mov
and
stos
add
fs
mov
xor
adc
or
jp
xchg
pmaxsw
idivb
fstps
sub
dec
inc
pop
dec
mov
scas
xor
add
leave
aad
xchg
sub
mov
sub
sbb
mov
arpl
jne
mov
push
das
and
jae
lods
adc
mov
pushl
mov
xorl
mov
into
push
push
mov
xchg
data16
adc
enter
push
shll
rcr
decb
xor
pop
das
lret
mov
call
sub
cmc
jl
lcall
into
mov
dec
and
cmp
xor
inc
repnz
or
pop
fimull
lcall
mov
pusha
repnz
cmp
jmp
sahf
int
add
mov
pop
sub
push
jns
mov
push
test
in
jae
adc
repnz
xchg
adc
xor
xchg
std
fs
pop
push
rcl
mov
loop
xchg
jp
mov
mov
cmp
pop
popl
mov
cmp
sub
mov
outsl
in
mov
sub
ret
cmp
cwtl
or
dec
cmpl
sbb
loope
xchg
inc
jecxz
xchg
push
cmpsb
arpl
xor
cmp
mov
outsl
inc
dec
jp
pop
test
stos
push
mov
jae
mov
pop
cmp
and
movsb
mov
shlb
bound
mov
fsubp
shrb
push
sbb
incl
push
in
addb
fdivrs
sti
mov
and
nop
xchg
jle
pop
ds
dec
stos
std
pushf
flds
addr16
movsl
adc
and
push
mov
pop
out
sti
scas
cli
or
dec
test
xchg
cld
pop
dec
mov
and
jmp
js
shll
movsl
vandps
sbb
stos
out
lret
stos
mov
jle
push
incl
sti
xlat
mov
scas
adc
xchg
stos
inc
adc
jnp
cmpsl
out
mov
and
and
sarb
cmpsb
pop
jecxz
pop
imul
fsubrl
daa
addr16
adc
inc
mov
cmp
dec
push
inc
iret
mov
jl
clc
and
or
fs
mov
movsl
stc
repnz
mov
cmp
pop
out
arpl
fs
lret
sbb
mov
cmp
nop
rorb
and
adc
push
dec
cmp
jl
xor
repnz
loope
push
jbe
and
and
cwtl
or
repz
mov
scas
imul
sub
pop
lcall
adc
adc
mov
in
xor
jns
icebp
mov
sbb
js
cmp
xchg
cmp
jae
jl
ret
cs
lock
jmp
xchg
outsb
or
cld
dec
push
shl
mov
les
inc
imul
sbb
push
imul
jg
lret
aam
push
push
movsb
lea
jae
sub
repnz
and
xorl
push
clc
nop
mov
sbb
frndint
lods
aad
ret
pmullw
inc
pop
mov
in
mov
add
push
inc
scas
mov
shlb
ds
movsl
jg
outsl
push
ret
pop
repnz
mov
mov
push
lcall
inc
sub
les
xchg
or
lsl
movsl
xchg
mov
out
insl
xor
push
push
mov
sbb
loope
sahf
mov
test
lods
cmc
loope
dec
fisubrl
mov
mov
add
push
js
add
insb
xorl
cmc
mov
sarl
mov
and
ret
shl
loop
push
imul
sub
fldcw
mov
aaa
mov
sbb
nop
and
ret
scas
arpl
sub
fs
and
cmp
les
ljmp
negl
push
cmp
jnp
mov
data16
outsb
arpl
and
lds
insb
cmp
sub
adc
xor
loopne
sub
inc
aas
mov
mov
add
xor
mov
incb
insb
push
adc
lods
bnd
icebp
xchg
sbb
loopne
ljmp
xor
mov
adc
xorl
cmc
push
mov
xchg
cltd
mov
push
add
mov
lret
aad
sahf
aaa
pmovmskb
add
ja
scas
mov
cltd
xchg
fwait
jo
cmovnp
jo
push
add
je
test
in
xchg
pusha
cltd
pop
lret
cmpsb
fstps
loopne
push
cmp
ret
addl
mov
lea
rorb
rorl
std
dec
pop
xchg
or
inc
popa
movq
loope
imul
mov
ds
cld
mov
aad
ret
jo
rorl
dec
adc
repnz
jp
push
ljmp
and
jno
and
stos
sbb
fwait
aam
dec
inc
faddp
pop
loop
mov
mov
cmp
insb
sbb
int3
add
xchg
mov
addr16
jmp
push
scas
mov
enter
cwtl
jno
int
mov
or
add
cmp
sbb
pop
fildll
dec
add
mov
test
or
adcl
and
sbb
int3
push
mov
decb
push
or
mov
les
ret
sbb
out
xor
ljmp
pop
sbbb
ret
pushf
lcall
dec
mov
inc
setns
and
clc
lahf
dec
fcmovbe
sub
into
iret
inc
rcr
data16
lea
add
pusha
shlb
je
ret
push
int3
jecxz
and
xor
xor
push
stc
fsubrl
sti
jne
cmc
aaa
xchg
xlat
push
adc
push
into
shl
lahf
std
xchg
cmp
push
mov
mov
loop
les
addb
and
fildl
or
in
dec
ret
fstl
or
jbe
inc
inc
fadd
div
rcl
jns
jp
cmpb
cmp
dec
fists
xor
pop
repz
jb
xchg
cld
das
into
add
fsubr
pop
ss
in
cli
mov
aaa
mov
rolb
mov
cmp
lcall
cmp
inc
insl
jno
push
pop
sub
mov
stos
test
jns
xchg
les
push
push
in
dec
js
in
or
ss
jns
mov
fs
and
stos
mov
outsb
sti
shlb
je
xlat
jb
pop
pop
pop
aaa
and
lock
pusha
add
xchg
es
push
and
push
jne
out
fmull
pop
inc
jb
xchg
stc
and
incb
mov
add
push
inc
rcll
or
aad
shlb
js
xor
push
xor
xchg
daa
mov
notb
inc
jp
fsubrs
movb
sub
popf
jmp
shrb
xor
insl
push
jg
out
mov
push
lret
out
push
ljmp
inc
outsl
movsb
loop
push
nop
js
arpl
mov
xchg
popf
scas
push
ds
push
int
fistpl
sbb
jbe
or
arpl
jne
out
clc
mov
sub
xorb
sbb
push
xchg
insb
dec
dec
sub
cld
imul
add
mov
lcall
adc
stos
mov
aaa
mov
xor
mov
sbb
sbb
repz
mov
ret
test
imul
aas
fsubl
int
jp
mov
in
ljmp
ret
inc
mov
pop
pop
cmpsl
xor
sub
inc
mov
pushf
les
mov
adc
jp
xchg
js
icebp
push
mov
cmp
jmp
jnp
rorl
mov
xchg
outsb
mov
pop
or
shrb
fcos
cwtl
jmp
sarl
lahf
sbb
cmp
pop
js
or
jo
ds
fcoml
pop
dec
fdivrl
sbb
mov
pop
in
xchg
movb
xchg
pusha
inc
scas
outsb
imul
or
or
or
pop
push
lods
mov
ret
mov
inc
stc
scas
xor
or
popa
movb
pop
xor
push
lahf
inc
shll
sarl
dec
sbb
in
jl
enter
fbld
leave
leave
jo
mov
push
int
mov
stos
cli
es
scas
loop
mov
sub
mov
out
gs
jae
mul
sub
outsb
sbb
add
xchg
stos
jmp
xchg
pop
dec
xchg
in
lahf
mov
mov
jge
or
sbb
pop
lods
mov
xchg
mov
mov
pop
das
inc
push
sahf
cmpsb
cli
mov
gs
mov
and
mov
mov
push
std
add
inc
mov
gs
and
or
lret
sub
in
or
cmp
xchg
mov
faddl
jbe
jb
divb
hlt
cltd
popf
mov
add
pop
sub
je
clc
xchg
inc
mov
pop
out
adc
mov
ja
sbb
out
xchg
ret
inc
push
pusha
pushf
enter
sarl
inc
xor
fucom
xchg
mov
inc
dec
daa
xor
mov
test
xchg
je
lret
pop
ret
jnp
push
push
sub
lea
adcb
sbb
mov
call
sbb
in
xor
fwait
jmp
test
jecxz
mov
clc
ljmp
adc
sbb
and
insb
cltd
enter
sbb
and
imul
cmpsb
cld
push
xchg
cwtl
int3
push
xor
fs
or
stos
or
fstpt
shlb
pop
roll
sbb
stos
sub
ds
lret
pmulhw
int3
fistps
in
int3
ljmp
fldl
inc
xchg
dec
sbb
jp
xor
je
imul
push
pop
mov
jl
xor
mov
cwtl
clc
jb
outsb
dec
push
dec
dec
ret
dec
lahf
pop
cmp
mov
jo
pusha
fs
in
in
push
rolb
sbb
xor
or
or
dec
mov
fwait
jns
rcl
adc
cmp
movsl
stos
stos
lods
pop
dec
sbb
in
fisttps
sub
xchg
leave
stc
dec
je
test
in
xchg
xor
sarl
mov
add
scas
jl
jns
rdmsr
xchg
mov
movsl
lret
lcall
or
fwait
mov
cli
jae
cmpsl
dec
or
lret
adc
in
sbb
sub
pop
nop
ret
pushf
shrl
mov
mov
popf
inc
nop
bound
das
mov
sub
cmp
insl
sub
addr16
mov
hlt
stos
pusha
repnz
aad
adc
inc
dec
clc
stc
mov
lret
xlat
jns
clc
dec
rol
push
fadds
and
lods
jg
mov
sub
adc
sub
iret
dec
push
adc
icebp
sub
jns
gs
pop
out
int3
stos
xor
decb
and
pop
mov
cmc
lret
adc
inc
cs
or
push
lret
dec
sub
push
stc
cs
dec
loop
adc
test
inc
sub
outsb
testl
dec
sbb
mov
insb
mov
ds
cmpsb
sbb
leave
mov
or
in
clc
add
xchg
out
iret
cmp
pop
dec
inc
mov
stos
pop
xchg
lahf
int
fldenv
push
xchg
pop
test
lock
pop
xchg
mov
sahf
movsl
jns
aaa
xchg
in
add
loope
cmp
cmp
int
mov
add
push
mov
and
cli
sub
pusha
cwtl
out
out
rcrb
incl
or
jl
out
jbe
sbb
dec
decb
out
jmp
stos
ljmp
adc
add
int
mov
push
rol
pop
incl
scas
std
lods
or
mov
hlt
pop
in
ljmp
pop
or
push
xor
cmp
mov
cmp
cld
inc
or
iret
and
push
stc
mov
mov
mov
cmc
xor
lahf
cmpsl
lret
test
pop
xchg
mov
cltd
or
adc
and
add
pop
adc
lahf
cmp
sbbb
stos
pop
xor
cmp
jnp
mov
inc
mov
mov
lock
sub
jmp
mov
pop
push
dec
push
mov
cmpsl
std
loope
into
out
adc
test
inc
mov
cli
int3
mov
push
fdivs
mov
pop
into
push
test
push
in
mov
call
xlat
jge
adc
inc
aaa
sub
or
ja
out
dec
fbstp
out
out
mov
test
add
nop
dec
adc
in
mov
clc
xchg
and
xchg
cmp
sbb
test
popa
fs
jmp
push
fcmovnb
dec
stc
and
inc
sbb
sbb
pusha
xchg
daa
and
mov
fimuls
test
push
roll
ret
in
pop
fisubs
xor
fiadds
inc
cmp
mov
repz
enter
sahf
decl
and
lock
xchg
rorl
xor
sbb
pop
not
mov
push
cmp
xchg
dec
adc
mov
add
mov
arpl
fistps
add
mov
inc
cltd
addr16
es
dec
jecxz
jg
pop
xor
mov
insb
sbb
pop
stos
lret
rol
adc
jl
jbe
lods
lret
cld
push
and
test
dec
mov
pop
sub
xchg
xorb
aam
jp
nop
xor
clc
mov
pop
fwait
or
cwtl
add
mov
inc
jns
inc
shll
dec
mov
sti
xlat
js
xchg
push
jge
cltd
xor
and
mov
xchg
dec
popa
add
sub
or
push
xor
sbb
lds
test
push
and
mov
rolb
or
sbb
mov
out
and
rorl
js
xchg
cld
enter
loope
addr16
in
xchg
dec
pop
movsb
fcmovbe
dec
insb
add
shlb
pop
inc
jg
add
mov
int
nop
add
sbb
rclb
clc
cmp
pop
pop
sti
jnp
ja
jle
add
inc
je
push
xor
lahf
inc
mov
push
cmp
cwtl
aas
shll
aad
dec
daa
addr16
movsb
cltd
mov
inc
clc
dec
clc
test
push
mov
adc
aad
stos
jo
xor
rclb
gs
jo
and
jne
lcall
data16
rol
jae
shl
lea
lods
insb
int3
xchg
idiv
les
adc
and
cmp
sbb
es
aad
push
adc
outsb
jbe
mov
int
dec
push
int
jmp
clc
outsb
test
mov
jp
jl
pop
in
loope
jb
inc
sbb
fldenv
xor
adc
aam
sbbb
pop
mov
pop
jmp
or
sub
test
mov
mov
sarb
fs
int
inc
sbb
add
cmp
daa
push
or
and
in
pop
mov
or
lds
lret
bnd
iret
push
jns
stos
bound
or
imul
jae
pop
mov
lds
sbb
nop
in
dec
mov
mov
into
lret
lods
stos
xchg
mov
cmp
mov
jle
int3
and
roll
test
jge
jecxz
neg
inc
adc
pop
pextrw
xchg
cmpb
xor
insl
push
mov
subl
push
inc
add
mov
mov
lcall
aaa
lock
mov
or
or
sbb
movsb
push
xor
mov
cmp
cs
push
cmp
jmp
divb
xor
out
push
push
ud2
xor
adc
movsl
dec
push
subl
int
repnz
jecxz
mov
mov
mov
sti
mov
mov
sbb
in
jmp
mov
inc
movsb
push
sbb
rcll
repnz
sub
mov
xor
push
push
mov
addr16
sti
jns
cmp
sub
or
ret
arpl
cmpsb
dec
loope
std
add
xchg
mov
add
mov
inc
mov
xor
cld
iret
cmp
data16
out
pop
leave
dec
std
inc
mov
loope
fcmovbe
movsl
in
leave
leave
out
scas
cmp
mov
rorb
cwtl
sar
sti
mov
out
jmp
test
xor
sbb
mov
inc
cld
lahf
aam
sub
lcall
into
sbb
mov
mov
add
inc
pop
push
or
pop
xchg
mov
jae
mov
adc
je
inc
push
mov
pop
xchg
aas
jno
cmpb
fisttpl
and
mov
sti
test
sub
adc
sbb
xor
bound
push
xor
mov
imul
insl
loope
ljmp
dec
hlt
sub
rcl
adc
mov
add
mov
xor
xor
adc
stos
inc
or
mov
add
or
xchg
imul
dec
ss
outsb
xor
xor
rcr
mov
shr
pop
sbb
ret
mov
rcrl
mov
mov
rclb
add
pop
inc
push
fiadds
ret
leave
pop
jno
push
jbe
jg
jmp
or
xchg
xor
popf
jg
hlt
jg
mov
lock
dec
test
insl
nop
xor
int3
push
bound
xor
mov
dec
pop
fmull
orb
out
iret
or
adc
mov
addl
sbb
outsl
dec
addr16
xchg
push
add
scas
nop
lahf
push
mov
xor
jg
xor
pop
cmpsl
lahf
cmp
sub
add
xor
je
faddp
inc
xlat
pop
cmp
cmc
sub
mov
popa
mov
cmp
cld
cmp
cld
cmp
call
cmp
xchg
popa
or
js
xchg
dec
sbb
movsl
ljmp
pop
and
inc
imul
rcll
popfw
mov
popf
shll
es
repnz
or
lret
sbb
or
stc
and
jno
and
ljmp
call
mov
sbb
test
in
mov
jns
or
shll
mov
ret
inc
fsubs
fwait
imul
test
popf
in
adc
jmp
cmp
push
jge
mov
add
loope
repz
jb
repz
shll
and
push
dec
ret
jae
and
shll
in
push
sbb
pop
push
sahf
rolb
add
fistpl
enter
inc
xchg
fcoms
rorl
inc
add
mov
fstl
sub
fidivrs
adc
push
mov
mov
lods
jmp
and
sbb
xor
and
sbb
int3
loope
pop
push
bound
mov
out
cmp
mov
cmpsl
inc
mov
test
push
push
mov
int
sahf
mov
push
js
pop
sbb
jmp
cltd
daa
rorb
sahf
xchg
inc
stos
ljmp
lods
rcrl
and
and
pop
test
push
iret
push
sub
cmp
cs
out
xchg
adc
cmc
xor
and
and
sarb
mov
cltd
das
aam
dec
sbb
cs
shr
sbb
dec
ljmp
jno
call
mov
and
shlb
loope
mov
and
jne
sbb
xchg
jae
mov
or
orb
cmpl
xchg
lcall
into
or
ret
mov
insl
sub
push
cmp
and
sub
fcmovnu
push
rclb
repnz
pop
jae
mov
push
push
cmp
mov
test
or
cmp
hlt
shrb
xor
mov
lods
or
xchg
imul
pop
repnz
push
jno
lret
es
cmp
and
inc
jecxz
push
rcrl
in
mov
out
shrb
jbe
cwtl
dec
out
shrl
mov
push
fmul
dec
xor
in
inc
shrl
mov
inc
xlat
imul
dec
or
mov
mov
inc
lret
pop
cmp
imul
dec
bsf
mov
xchg
add
loop
movaps
cld
and
std
sbb
dec
lret
cs
imul
std
jns
pop
mov
imul
fstl
movsl
cwtl
inc
jbe
mov
cmc
sahf
adc
addr16
lcall
stos
cltd
fnstcw
aaa
lock
int3
sti
cmpsl
inc
adc
push
cmp
aad
rcrl
mov
shrb
movd
xchg
inc
push
addb
jo
adc
fwait
mov
jbe
mov
inc
into
xchg
ret
or
out
jns
test
mov
pop
adc
test
test
mov
jae
pop
push
fisubrs
test
sarb
xor
pop
les
test
adc
mov
scas
dec
pushf
js
rcl
lea
dec
mov
inc
sub
xchg
fildl
lods
mov
ds
mov
les
shrb
scas
and
inc
mov
sub
or
mov
roll
sub
xchg
pop
and
leave
das
jl
bound
ds
imul
popf
in
inc
xor
test
jp
push
cld
dec
jne
and
les
jae
test
xchg
call
mulb
mov
fs
not
adcb
push
mov
pusha
fsubrl
pushf
test
adc
cltd
jp
stos
cs
fistpll
or
lds
or
rorl
dec
add
push
sbbb
jns
repnz
repnz
test
pop
dec
push
outsl
and
jg
pop
adc
or
imul
test
xlat
nop
mov
sbb
in
pop
push
mov
rcll
or
or
xlat
lds
ret
cwtl
call
lret
imul
cmp
rorl
xchg
xlat
push
imul
popf
mov
scas
es
test
push
mov
sbb
xchg
mov
out
paddsb
outsl
in
ret
repnz
adc
jle
mov
jl,pn
stos
mov
imul
or
sub
mov
call
sti
shll
cld
xchg
cmp
clc
jbe
hlt
push
inc
add
jmp
punpcklwd
cmp
pop
ret
mov
gs
sub
mov
call
mov
or
repnz
fbld
push
inc
add
lret
and
dec
insl
int3
ss
addr16
inc
jae
fidivs
sub
arpl
or
cli
mov
pop
pop
outsb
scas
fbld
xchg
cmp
fldl2e
in
mov
or
jnp
cmp
mov
push
or
pop
and
mov
cmp
mov
pop
xchg
push
addb
pop
and
jg
arpl
mov
push
xchg
jmp
dec
push
lret
cmp
int
stc
adc
mov
test
mov
addb
das
sub
xor
sub
mov
pop
add
push
adc
mov
xchg
fistps
shll
push
inc
sub
roll
mov
into
cmp
or
lods
sbb
adc
insl
lahf
rdtsc
or
shlb
xor
stos
xor
sub
jbe
stc
call
mov
push
into
mov
cs
inc
out
add
mov
xchg
outsb
loope
xchg
xor
fmuls
arpl
xchg
mov
cmpsb
push
bt
fadd
mov
cmp
jg
pop
xor
pop
sub
loopne
data16
xchg
cmpsl
fldt
out
subb
inc
in
push
cmp
stc
mov
jne
push
jmp
sbb
lock
outsl
adc
test
dec
mov
pop
aaa
jbe
cmc
mov
push
sahf
scas
jp
les
dec
xor
xchg
dec
sbb
inc
or
loopne
lods
loopne
xor
aas
dec
mov
pop
bound
stos
xchg
movsl
mov
cmp
mov
and
not
adc
or
pop
mov
sahf
dec
stos
jns
movsb
dec
stc
pushf
dec
fmuls
fcomps
shl
jae
cwtl
cld
lret
std
lcall
test
jnp
xchg
prefetchw
jns
lea
in
and
ljmp
fsubl
inc
fldcw
fnsave
jl
dec
cmp
fmuls
pop
pop
jb
pop
cmp
push
adc
scas
jb
sbb
xchg
ficoml
loop
jg
pop
lods
dec
sti
idivl
xor
pop
mov
dec
rclb
pop
jle
popa
pop
cmc
ss
add
cmp
xor
bound
sub
int
or
push
cmc
xor
daa
fstpt
xor
negl
aad
data16
aas
dec
sub
fs
mov
sub
addb
cmp
add
cmp
dec
addb
aaa
xchg
int3
xchg
in
push
jecxz
ret
push
sbb
pushf
shrb
stos
loopne
inc
or
and
sbb
push
pop
mov
xchg
pop
mov
xchg
mov
popf
lea
pushf
enter
pop
jle
mov
mov
movsl
inc
xor
cmp
jae
add
cwtl
mov
push
aas
and
lods
ja
shl
and
mov
aam
stos
jne
sbb
jbe
xchg
xor
enter
inc
out
hlt
inc
adc
sbb
add
fcoml
mov
xchg
loopne
test
pop
popl
inc
adc
aaa
enter
lods
mov
xor
adc
inc
mov
or
repz
movsl
mov
jne
mov
fstl
pop
dec
xchg
stc
add
clc
notl
in
scas
jmpw
inc
jno
ss
or
xor
xor
lea
dec
pop
aam
out
cmpsl
push
out
add
lds
xchg
jle
jo
dec
inc
and
inc
adc
pushf
cmp
arpl
cmp
add
pop
push
sbb
cld
mov
aaa
jae
out
pop
aaa
aad
fisttps
inc
jge
sbb
xlat
inc
xchg
dec
test
fucom
pop
push
sbb
cmp
cmpsb
xor
mov
test
in
jno
adc
filds
icebp
sub
int3
mov
cmc
incb
fcomps
push
enter
out
pop
test
testb
inc
ljmp
or
leave
insl
or
inc
push
jge
fsubs
test
mov
adc
popa
in
in
add
in
leave
push
push
dec
daa
jl
mov
loope
xor
sbb
test
push
call
cmp
mov
or
sbb
cwtl
lret
mov
jo
jae
test
test
jne
out
cld
popa
mov
or
sub
adc
mov
cli
pop
outsb
sub
adc
add
nop
xchg
xchg
xchg
test
pusha
mov
push
dec
push
lcall
scas
insl
cld
decb
loopne
enter
gs
daa
in
bound
jg
and
jno
sub
jne
and
and
pushf
xchg
mov
adc
shll
loopne
jge
rclb
test
mov
ljmp
insl
fsub
jbe
out
daa
lcall
cltd
xchg
and
aas
cli
sbb
jmp
inc
dec
pop
xor
lods
adc
pop
lods
movsl
loop
adc
sarl
arpl
out
mov
test
repnz
jmp
lods
sub
mov
insb
cld
pop
ret
jle
xor
or
in
test
test
add
pop
cli
fcmovnbe
pop
mov
int
jnp
nop
mov
cmp
pop
rol
shrl
xchg
rclb
sbb
pop
adc
or
arpl
out
dec
stc
punpckhbw
scas
mov
lock
pop
push
jge
imul
loope
fidivrl
das
push
lods
test
rolb
jmp
lret
dec
lret
add
jno
bound
fs
mov
mov
cmovg
lea
stos
xchg
faddl
push
sub
push
and
mov
mov
push
aas
pop
dec
or
sbb
jne
mov
add
xchg
jo
es
and
insb
mov
mov
test
addr16
and
dec
imul
add
scas
hlt
lods
inc
aaa
out
mov
aam
and
or
adc
hlt
sbb
inc
push
aam
sbb
icebp
sub
pop
push
sbb
arpl
sarl
adc
addr16
mov
lods
and
enter
loop
std
mov
fstpt
aaa
jecxz
jnp
dec
push
nop
inc
rorb
sbb
push
stos
push
adc
adc
sub
iret
cs
lret
loopne
mov
sbbb
rol
inc
iret
icebp
or
dec
ljmp
shrb
xor
push
mov
xor
sahf
lret
cmp
test
dec
or
or
cmp
dec
imul
aad
jb
stc
cwtl
cmp
mov
mov
jno
jnp
xor
cmpsb
jae
sub
pusha
adc
jbe
jb
sbb
sub
int3
jecxz
lock
xchg
gs
xchg
sbb
cmp
pop
imul
lods
sahf
mov
fs
cmp
and
dec
push
lea
ret
outsb
push
lods
fldenv
std
push
ja
loopne
and
out
out
xor
pop
fnstenv
cltd
push
dec
jmp
xor
mov
in
out
dec
das
push
sbb
or
sahf
push
outsb
fcoml
inc
jl
btr
sbb
xor
out
in
ficompl
or
mov
pop
in
pop
cmp
add
in
cmp
lock
scas
fistps
mov
jbe
xor
inc
imul
lea
stos
iret
out
and
rcrl
jmp
and
sbb
jns
or
into
mov
fists
push
mov
bnd
xor
jmp
cmp
orb
insl
sbbl
jmp
lcall
jp
mov
pop
add
dec
and
push
push
test
lds
push
sub
or
xchg
inc
fbstp
hlt
repz
fisubrl
and
in
inc
ja
inc
aad
jns
mov
and
xchg
pushf
dec
mov
lret
or
lods
outsb
pushf
dec
sub
or
xlat
rorb
hlt
jb
and
daa
sbb
insl
loop
fcompl
insb
sti
sub
stos
add
into
mov
inc
sub
icebp
rcrl
pop
sub
in
testl
cli
in
jle
clc
jb
hlt
popf
sub
popf
sub
jns
mov
adc
xchg
xlat
jns
xchg
ss
mov
dec
inc
pop
sarb
mov
adc
inc
test
and
cltd
inc
inc
mov
push
stos
leave
sub
cmc
dec
cmc
push
dec
sbb
call
jecxz
cmp
xchg
test
data16
mov
xchg
or
push
movsl
ret
popf
xchg
add
orl
dec
push
sbb
push
ret
sbb
pop
lahf
iret
fisubrs
sbb
sbb
shl
mov
inc
jmp
mov
pusha
cmpsb
fsubrl
imul
ret
mov
adc
ret
outsb
fmull
sahf
mov
cmp
xchg
gs
test
inc
bound
test
mov
sahf
inc
iret
rolb
std
andb
stos
bound
sub
lea
add
inc
ret
fdiv
mov
push
pop
mov
inc
xchg
jmp
incl
js
and
test
bound
xchg
sbb
insb
sub
push
cmp
sub
cmc
pop
daa
mov
push
pop
push
dec
add
mov
dec
mov
mov
punpckhwd
addl
mov
pop
les
popa
dec
aaa
les
push
out
mov
push
push
cmpsl
shll
test
push
ljmp
cmp
mov
jns
inc
lds
xorl
lret
cmp
push
fnstsw
or
push
pop
jns
pop
xor
out
jecxz
or
in
adc
pop
repnz
fnstcw
cmpsb
adc
push
aaa
or
inc
aad
adc
fwait
push
sub
adc
mov
arpl
icebp
test
arpl
or
hlt
push
filds
jp
les
xor
inc
scas
inc
pop
dec
pop
push
jmp
mov
ds
push
rcl
xchg
inc
mov
or
jbe
xchg
call
xor
stc
mov
xlat
or
jle
aaa
cmc
inc
pcmpgtw
mov
ljmp
and
int3
cmp
mov
xchg
mov
jae
sub
adc
orl
pop
bound
negl
xchg
pop
mov
and
fisttpl
jno
xchg
cli
mov
push
icebp
inc
and
cmp
sarb
bound
or
negb
test
sub
cs
shlb
insb
inc
divb
sbb
popf
add
gs
cmp
enter
sbb
sub
cltd
jae
push
dec
fndisi(8087
cmpsl
cmp
jns
inc
fwait
sahf
pop
xchg
jnp
js
aam
or
rorl
adc
mov
inc
pop
xchg
fdivr
xor
jbe
adc
lret
gs
loop
gs
loope
dec
and
fs
aaa
cmp
test
push
add
mov
sti
xchg
push
adc
mov
push
dec
test
lock
xor
ret
cmp
movsl
adc
andl
mov
inc
adc
lods
icebp
cld
jmp
xor
fsubp
inc
sbb
cmp
and
les
mov
popa
testl
sbb
push
pop
pusha
and
jbe
lret
jnp
cmp
pushf
jge
sbb
adc
pop
mov
push
lcall
inc
mov
mov
cmp
pop
fsubs
das
and
push
fs
pusha
aas
sub
notb
aas
ror
and
fldcw
loopne
leave
mov
movsl
shl
maskmovq
imull
or
jecxz
sub
int
ret
or
mov
sub
int
adc
imull
push
sbb
jecxz
lock
push
movsl
jno
cmp
fndisi(8087
dec
mov
ret
mov
sbb
fsubl
stos
dec
roll
cmp
push
out
scas
stc
inc
repnz
xor
pop
inc
mov
mov
fmull
nop
js
adc
cmp
lcall
jo
or
ret
fcom
jae
push
push
imul
scas
cld
dec
subb
into
hlt
mov
clc
imul
outsl
mov
push
mov
push
sub
sub
cld
jl
inc
sbb
adc
xchg
pop
jmp
out
icebp
scas
fwait
dec
mov
xor
into
push
mov
jp
cld
xor
fcmovbe
xor
cmp
jmp
mov
mov
rclb
movsl
mov
dec
push
pop
leave
mov
jge
daa
pop
enter
mov
les
jmp
sub
out
mov
adc
daa
imul
pop
pop
adc
or
adcb
dec
and
pusha
repz
fwait
ljmp
gs
or
cmp
into
lock
pop
call
ds
push
xlat
mul
rolb
xchg
sbb
mov
inc
enter
xor
in
mov
cmp
es
inc
add
repz
ret
jbe
pushf
mov
dec
push
mov
push
sbb
push
es
shll
pop
mov
stos
js
fsubrl
jmp
mov
test
dec
jne
pop
mov
stc
out
ficoms
push
jmp
push
popf
inc
fs
fwait
std
int
add
xor
pop
pop
cmpsl
mov
stos
mulb
pushaw
nop
push
repnz
dec
sub
inc
inc
sbb
arpl
test
and
jno
and
test
fcmovb
stc
ret
inc
sti
xor
dec
mov
jae
out
inc
mull
lret
aam
jo
test
mov
adc
jmp
pop
push
mov
subb
cltd
mov
outsl
outsl
xlat
mov
sbb
adc
sti
cmp
das
es
mov
call
popf
push
or
adc
ret
testb
dec
jmp
cltd
stc
ljmp
clc
xor
ds
and
bound
in
loope
mov
push
dec
and
movsb
int
ljmp
xor
cltd
adc
scas
sbb
je
mov
mov
enter
mov
sub
cmp
pop
cld
adc
jbe
in
push
data16
aaa
lds
xor
xor
lock
daa
pop
sbb
test
mov
mov
into
jne
daa
iret
cmp
and
in
sub
shl
pop
dec
inc
test
xchg
lahf
pop
dec
xor
lahf
gs
insb
adc
sub
mov
jnp
jo
inc
std
outsb
sub
repz
xchg
sub
fmull
push
mov
xchg
cmp
mov
clc
movsl
push
cli
mov
js
mov
add
loop
dec
into
adc
daa
pop
mov
cmp
sub
arpl
mov
sub
sarb
mov
mov
in
push
push
sub
ret
and
jbe
decb
cmp
idivb
mov
jno
mov
mov
loopne
jns
jg
mov
jp
decl
cmp
adc
push
ja
arpl
cld
test
add
or
bound
in
or
mov
scas
cli
cwtl
sub
fwait
cmp
cmp
add
aaa
je
lret
ds
aaa
mov
imul
sbb
inc
lods
adc
or
inc
adc
dec
or
js
add
mov
sbb
ja
adcl
testb
sbb
jbe
ror
xchg
sbb
add
pop
fidivrl
cld
loopne
loopne,pt
hlt
xchg
inc
lods
cmp
and
mov
inc
and
lret
dec
mov
lret
mov
jp
sbb
in
dec
lahf
inc
jns
sub
mov
rclb
std
jmp
shlb
xorl
addr16
negb
dec
repnz
les
call
lock
leave
addr16
imul
mov
faddl
loope
iret
scas
in
xor
add
push
add
fnstenv
sbb
inc
jg
pop
bound
and
lahf
jl
clc
or
mov
ror
mov
call
add
pop
pop
sub
int3
or
mov
cmp
iret
xchg
xchg
lcall
fimuls
test
pushf
cmp
push
pop
pop
adc
jo
test
pop
sub
pop
mov
lahf
fxtract
ltr
jg
inc
fsubrl
in
xor
xor
add
and
xlat
cmpsl
int3
icebp
adc
scas
mov
jecxz
call
cltd
enter
fldl
outsb
mov
cmpsl
cwtl
jb
mov
cmp
inc
xor
cmpsl
sbb
leave
jg
or
lahf
scas
shl
nop
cmp
leave
cld
jp
sahf
movsb
lfs
sbb
sti
and
leave
addr16
mov
leave
lods
pop
pxor
imul
nop
adc
iret
inc
stmxcsr
xlat
adc
ds
mov
or
or
lcall
stos
inc
push
sahf
adc
mov
roll
xlat
cmp
xchg
lods
ret
cmpl
int
bound
aaa
jmp
adc
psrad
in
add
popf
fcompl
sbb
push
sbb
testl
loope
lds
es
jbe
scas
or
sub
mov
incb
jo
shrl
popf
mov
inc
fmuls
lods
dec
stos
adc
pop
xor
cmp
mov
sub
fsubrl
jmp
or
push
jae
cltd
pushf
dec
inc
cmpsl
mov
add
in
jmp
push
loope
enter
pop
repz
push
icebp
xor
dec
out
testl
test
addb
or
in
mov
dec
sbbb
into
mov
pop
sbb
movsl
out
add
orl
dec
lcall
dec
adc
bound
jns
mov
adc
sti
scas
hlt
pop
std
icebp
cltd
push
cld
jecxz
jo
aad
xchg
sub
scas
sti
ficoml
ja
add
xor
and
mov
dec
out
loop
aad
sub
sub
or
mov
imul
xchg
out
push
cwtl
push
xchg
push
xchg
imul
pop
pop
test
cmc
push
cmc
adc
pop
jo
adc
stos
push
lret
inc
sbb
cwtl
add
ss
adc
in
jecxz
cmp
sub
cmpsb
dec
adc
outsb
jae
push
push
hlt
ret
ret
xor
sbbb
and
jae
mov
in
mov
xorl
xchg
jae
cwtl
ret
jmp
jmp
mov
adc
jo
das
dec
mov
xor
mov
fsubrl
sbb
add
sub
sub
xor
imul
mov
xor
testl
les
sarb
shll
mov
add
mov
int3
jecxz
nop
xor
xlat
dec
xchg
push
or
and
int3
shrl
iret
push
inc
inc
sahf
push
and
inc
cmpsb
cmp
int
ret
and
xchg
cs
xor
mov
push
shll
fs
mov
jg
mov
fwait
sbb
push
ss
fsubl
shrw
shrb
adc
push
xor
jne
sub
cmp
inc
xchg
push
popa
inc
repz
pop
aad
enter
push
fisttpl
push
movsl
ja
lcall
adc
cs
out
out
mov
jae
mov
push
pop
inc
dec
add
aas
sbb
and
scas
lock
pop
roll
sub
ljmp
loop
push
pusha
xor
jns
inc
or
lds
jecxz
adc
pop
imul
out
call
sbb
jle
xor
call
xchg
js
dec
xor
sbb
jbe
outsb
dec
push
orl
cmp
mov
or
mov
mov
call
mov
pusha
stc
imul
ljmp
jmp
shll
jp
dec
outsb
bswap
jg
add
or
add
mov
sub
lock
push
jae
inc
outsb
out
js
cs
in
xchg
jae
mov
inc
mov
dec
pop
push
push
lahf
out
and
mov
out
cmp
adc
ret
dec
lods
shl
outsl
inc
xchg
lock
add
ret
dec
sub
stos
adc
aas
push
mov
jo
mov
test
movsb
mov
jnp
push
mov
inc
pop
mov
push
push
jle
fwait
out
mov
popa
dec
xor
ljmp
ret
lds
lods
je
push
ss
fdivrl
jl
xchg
sub
fiaddl
fsubs
popf
pop
xor
enter
subl
adc
mov
fisubrl
inc
jecxz
shll
jo
hlt
mov
inc
das
jp
push
jno
dec
pop
dec
push
cmpsl
fs
sbb
lods
sub
ljmp
outsl
sub
out
xchg
out
ret
outsb
sub
cmp
data16
jo
pop
bound
push
xchg
outsb
sub
sub
sub
insb
mov
cmpsb
pushf
mov
sub
dec
ror
sbb
sti
adc
sub
inc
push
jno
sub
pop
xchg
enter
test
adc
int
cmp
mov
inc
lret
sub
inc
jecxz
xchg
sub
les
mov
ja
jb
cld
xchg
fsubl
inc
mov
fistps
test
in
into
sub
mov
mov
out
leave
mov
fnstcw
aam
loopne
lock
outsb
cltd
adc
bswap
sub
dec
out
jbe
add
xor
out
and
xchg
dec
addr16
push
cmc
aas
jecxz
rcrb
les
dec
pop
adc
push
aam
scas
les
out
lcall
and
pop
mov
xor
sub
and
adc
xchg
push
push
mov
fnstcw
push
pop
jbe
fbld
fcompl
pop
rclb
dec
clc
in
fwait
pop
cmp
aad
or
addl
mov
dec
mov
cmp
add
push
fsubs
mov
mov
mov
mov
sahf
mov
jo
jl
lahf
lret
icebp
aad
xchg
clc
std
sbb
push
pop
dec
inc
imul
mov
cwtl
aad
jno
mov
sub
out
scas
clc
cmp
xchg
inc
dec
cmpsb
subb
jg
pop
mov
aas
cmp
adc
xor
push
int
sbb
movsb
push
scas
xor
cmp
test
cld
shrl
sub
add
pop
jno
pop
aam
outsl
jp
inc
sbb
cmpsb
or
fstps
mov
dec
roll
test
sub
mov
in
iret
movsb
xchg
lds
or
cli
jne
sub
inc
dec
jbe
lret
push
add
and
outsl
aas
add
daa
mov
jb
jb
fistpll
mov
cld
xchg
or
ja
mov
xor
aaa
cltd
push
enter
inc
adc
pop
popl
sub
pop
push
cwtl
sbb
mov
sub
mov
cltd
fucomp
pop
cs
and
call
cli
cmpsb
xchg
in
gs
test
in
mov
out
cmp
lods
daa
sub
sub
lret
in
xor
add
dec
test
mov
dec
pop
insb
jae
add
jge
or
mov
and
test
and
shlb
push
pop
sub
rorl
das
dec
sbb
mov
pusha
repz
ds
cmp
scas
xchg
adc
outsl
or
out
sarb
repz
sbb
or
mov
jl
popf
pop
fsubs
cltd
aas
dec
jnp
dec
cwtl
add
mov
push
and
inc
mov
in
out
fwait
mulb
jle
ss
push
stos
icebp
mov
cmp
imul
lock
lea
xchg
xchg
mov
sub
test
pusha
sbb
pushf
aas
and
stos
pop
xchg
cmp
ffreep
jl
popf
dec
pusha
fisubl
or
sbb
outsl
call
adc
xor
lret
mov
xchg
jp
xor
aas
lods
push
inc
int
outsl
test
iret
sarl
cs
push
rcr
xchg
ja
mov
push
xchg
test
fcomps
pop
lcall
adc
in
and
sub
sub
sbb
add
or
push
shrl
fnstenv
stc
dec
lret
jg
shr
popf
or
dec
ds
push
dec
mov
hlt
roll
das
xchg
popf
rol
and
das
cmp
imull
sub
fsubs
cmp
and
push
pusha
mov
shr
cmp
xor
leave
xor
sub
sbb
cmp
mov
insl
sub
jo
jne
jae
sbb
fimull
daa
jecxz
pushf
mov
pop
mov
lds
xor
cld
icebp
xchg
xchg
aas
cwtl
cltd
rcrb
sarl
push
popa
test
cmp
fdivrs
dec
aad
in
aad
and
mov
lods
cmpsb
pop
lock
movsl
loope
inc
adc
and
cmp
pop
sbb
aaa
in
fdivr
iret
and
mov
cmpsb
nop
andl
adc
test
nop
psllw
xchg
add
jl
push
lds
int
jne
stos
mov
cli
ljmp
dec
ret
mov
inc
xchg
fistl
movsb
push
lds
mov
stos
dec
mov
and
pop
sub
dec
jecxz
pop
xchg
addr16
cmpsl
cwtl
in
in
push
jmp
lock
push
mov
sahf
shll
mov
cmp
sub
cmp
push
scas
lds
jle
dec
ret
push
and
inc
and
outsl
xchg
xor
mov
cs
push
push
xor
or
test
adc
or
mov
pop
sbb
push
cwtl
lds
adc
cltd
mov
add
addr16
addr16
xchg
bound
shll
sub
decb
cmpsl
jno
jbe
sbb
cmp
jge
stc
in
push
dec
jmp
cmp
sar
cmp
cmp
imul
int3
add
add
int
xchg
sub
sub
dec
push
movsb
sbb
inc
push
nop
arpl
push
mov
push
popf
cmc
sbb
sub
in
mov
sahf
into
cwtl
movsb
in
pop
addb
fildl
cmp
aaa
and
subb
mov
test
repnz
add
push
or
inc
pop
sbb
pop
jge
fbld
pop
push
push
mov
jne
fcmovnu
adc
scas
hlt
jbe
aad
push
xchg
or
rcrb
cmpsl
inc
lcall
sahf
rolb
pop
dec
js
add
inc
sub
notl
sub
mov
js
xor
xchg
push
cltd
fwait
push
mov
imul
mov
lods
xor
je
ljmp
orb
popf
mov
pop
mov
in
lea
jo
inc
je
imul
push
mov
cmp
xor
dec
mov
mov
test
sub
lret
inc
or
sbb
dec
mov
popf
insb
bound
lahf
gs
xor
push
or
es
dec
out
sub
insl
arpl
cmpsb
ljmp
xchg
popf
fldt
mov
push
insb
std
xchg
xchg
add
or
daa
inc
adc
mov
adc
jp
ret
out
mov
fwait
jp
jg
mov
inc
push
xchg
mov
jmp
sub
cmp
and
insl
mov
xor
lods
dec
jnp
iret
xor
sbb
mov
insb
mov
das
add
data16
mov
test
roll
scas
cmp
push
clc
sub
add
stos
pop
add
cli
xrelease
mov
add
or
pusha
jg
sbb
icebp
xchg
dec
dec
rolb
sbb
ss
inc
lret
dec
daa
sbb
dec
sbb
push
dec
inc
lods
mov
leave
pop
hlt
pusha
lcall
out
fsts
cmc
sbb
dec
std
sbb
leave
test
cmc
stos
xor
outsl
lahf
mov
repnz
cs
loope
out
xlat
push
std
lea
push
aam
stc
or
push
sbb
insb
mov
mov
outsb
stc
or
xor
lds
xchg
dec
sar
cwtl
push
xchg
jne
int3
bnd
push
fstpl
add
dec
iret
lret
xchg
xor
xor
pop
orb
lret
adc
addr16
lods
cmp
outsl
hlt
insb
stc
sub
data16
mov
lret
sub
xor
mov
xor
inc
leave
sbb
sub
and
fwait
mov
dec
mov
adc
icebp
sar
addr16
dec
jb
cmpsl
push
sub
add
dec
sub
mov
push
adc
jmp
mov
push
mov
pop
xor
ds
xchg
jle
dec
jl
xchg
cmp
mov
jp
xchg
xchg
dec
sbb
xchg
mov
iret
add
add
sbb
jns
mov
sub
adc
cmpsb
mul
mov
cmp
xlat
movsl
sub
cmp
lds
out
adc
sbb
xchg
jnp
aam
cmpsb
sub
jp
je
lea
sub
mov
jle
or
outsl
pop
arpl
mov
and
stos
and
test
out
popa
or
cmp
and
repnz
adc
imul
js
das
ss
imul
sub
lret
inc
nop
mov
add
xor
pop
clc
adc
je
mov
xor
mov
lods
or
or
cmp
add
sti
lods
mov
sbb
ss
test
inc
das
add
xchg
jae
je
mov
sti
sub
sbb
sbb
mov
add
ficoml
jp
ret
mov
mov
imul
mov
andl
push
test
sub
add
cmpsb
jae
push
push
adc
call
adc
repz
xchg
push
push
idivl
mov
sti
mov
cs
xchg
cmpsl
push
bound
sub
stos
add
push
lds
mov
lods
push
push
clc
gs
xor
inc
aaa
ror
dec
cli
fwait
aas
test
xchg
add
divb
addl
imul
test
lcall
jge
popf
pop
mov
cwtl
outsl
xchg
push
shll
push
out
jns
out
dec
xchg
cmp
jle
sub
aas
in
and
lea
push
xchg
lock
xor
scas
fsubrl
int3
iret
cmc
in
mov
cmp
xor
or
mov
cmp
testl
ffreep
mov
sbb
std
cmp
or
or
jns
xor
fcom
mov
sbb
inc
lcall
pusha
aaa
or
pop
adc
cld
sbb
push
or
outsb
stos
fistpl
aam
inc
cmp
arpl
lock
jle
fdivl
call
push
push
mov
sbb
loop,pn
mov
xor
loope
xor
cli
xchg
nop
scas
push
filds
cwtl
xor
sbb
cmp
shlb
dec
clc
sbb
pop
dec
std
in
cmc
dec
xor
xor
test
fwait
imul
imul
mov
push
dec
xchg
mov
das
cmp
mov
out
dec
push
mov
mov
repz
test
cmp
mov
push
lahf
popf
and
dec
sub
or
or
fcom
dec
jl
jnp
nop
shrl
dec
cmc
mov
pushw
or
sbb
dec
add
dec
je
ficoms
repnz
mov
xchg
push
mov
xchg
add
push
enter
pop
pop
jne
sbb
adc
sti
insb
push
and
pop
out
mov
xchg
jo
sbb
aaa
ret
sahf
insl
and
pop
mov
mov
or
add
xor
je
mov
jge
in
pop
hlt
mov
jbe
sub
in
xchg
push
xor
jmp
push
sbb
adc
scas
pop
cmp
movsb
test
outsb
stos
mov
fidivs
push
test
cli
inc
mov
cli
nop
shl
ret
cmp
mov
ret
mov
repz
push
xchg
sbb
inc
aas
jbe
xor
jns
add
pusha
mov
cmp
nop
sub
inc
decb
mov
mov
daa
mov
and
push
jnp
ss
mov
outsb
xchg
out
adc
adcl
cmp
xchg
fwait
pop
xor
xor
mov
lds
les
fldcw
xor
leave
or
stc
push
push
es
push
repz
or
ret
lret
fwait
push
inc
lds
orb
adc
xlat
pop
jge
ss
out
repnz
dec
daa
lock
out
push
sahf
lock
arpl
xchg
sahf
pushf
xorl
aas
adc
jmp
cmpsb
data16
jge
pop
dec
data16
mov
and
es
and
mov
sbb
out
add
pop
lcall
ja
fadds
sub
aas
or
jo
in
lahf
mov
push
and
mov
adc
rcr
push
mov
jb
or
push
jno
aad
inc
addl
push
lea
mov
mov
enter
ret
pop
pop
sahf
fisttpl
sbb
bound
lea
mov
cmp
jne
lret
inc
into
dec
sub
mov
dec
cmc
inc
fbld
mov
test
mov
xor
sbb
aas
jns
and
mov
jge
sub
enter
add
addb
pop
paddd
push
jo
sete
shl
push
jl
mov
nop
pusha
testl
fldl
mov
dec
adc
mov
jno
pop
jb
or
pop
loop
repnz
ret
movb
sahf
rorb
jne
push
ffree
sub
mov
fwait
lea
jns
and
xlat
push
pop
mov
push
add
dec
stos
jle
out
lahf
push
cld
stos
pop
and
movsl
lock
cmpsl
sbb
dec
in
in
test
jnp
cld
adc
test
mov
adc
test
xchg
sarl
cmpsl
out
dec
cmp
int
js
xor
pop
aas
push
push
sbb
push
test
ret
dec
outsb
cmp
out
push
xchg
jb
in
cld
or
inc
sbb
stos
or
shrb
insl
mov
mov
int
into
test
dec
pop
jnp
xlat
shll
xchg
ret
idiv
mov
jb
push
mov
hlt
mov
lret
xchg
cld
push
ficompl
insl
loopne
add
mov
cmp
add
or
les
lcall
xchg
xor
cmp
xchg
rcr
loop
mov
ljmp
sbb
mov
scas
int
movsb
inc
mov
cs
popl
push
inc
sbb
mov
ss
mov
insb
imul
cmp
xchg
lcall
mov
xchg
cmp
sbb
fdivs
cmp
aas
and
ja
pusha
xchg
ficoml
jmp
jns
movsl
rclb
sbb
fcoms
gs
jp
lahf
vfrczsd
jecxz
hlt
jbe
fstps
adc
testb
mov
sub
jno
repnz
outsb
cwtl
iret
add
mov
add
loop
scas
sti
mov
int
jp
int
cwtl
aad
or
imulb
mov
cmp
pop
mov
push
jp
addr16
xor
xchg
cmpl
movsb
sbb
pop
lret
pop
sahf
icebp
inc
mov
xchg
jbe
addr16
sbbb
ja
pop
aaa
flds
js
sub
dec
sbb
jl
jno
int3
fistpl
sahf
pop
iret
pop
fwait
mov
mov
lds
push
jb
sbbl
and
xor
sbb
call
push
sbb
sub
lods
jmp
psubsb
pusha
push
jp
push
out
add
push
repz
das
and
mov
and
test
adc
cmp
test
jecxz
stos
jmp
mov
cld
adc
push
out
dec
inc
sbb
pop
fidivrl
inc
sub
jae
test
pop
adc
mov
jae
sub
ret
mov
pushf
popa
mov
jl
push
xor
iret
jns
imul
or
push
lret
push
fidivrs
xor
jbe
and
mov
fnstcw
lret
insl
adc
sbb
daa
cwtl
shr
clc
pop
pop
lods
pop
xchg
scas
rcll
pop
inc
lret
jmp
sbb
insb
lods
ss
inc
adc
xlat
dec
loope
lahf
adc
xchg
jle
fstps
lret
stos
dec
enter
lret
cmc
inc
xor
or
outsb
xor
or
mov
in
fsubr
in
in
dec
push
xlat
ret
lahf
mov
and
repz
sbbl
sbb
ror
test
mov
aad
lods
mov
aaa
fisubl
push
mov
dec
xor
mov
aad
pop
mov
nop
fists
cwtl
xor
mov
lods
jne
sub
leave
int3
gs
xor
loope
pop
popa
aaa
sub
xchg
adc
push
loope
lock
aaa
out
xor
popl
mov
inc
dec
aaa
test
aas
test
add
pop
loope
xor
icebp
pop
mov
jno
cld
pop
call
push
push
sahf
add
popf
rcll
rcrb
sbb
idivl
xchg
loopne
pop
xchg
mov
or
out
imul
sbb
push
mov
lea
test
and
push
pop
sub
add
js
ficompl
xor
jmp
pop
cs
rorb
scas
in
lods
push
mov
sub
mov
icebp
sahf
cmp
sbb
mov
adc
mov
fnstcw
mov
aas
and
sbb
std
and
cmp
jno
or
nop
cmp
stc
insl
jmp
mov
sahf
add
inc
outsb
and
les
call
inc
imul
mov
sti
mov
xchg
mov
les
lcall
nop
jns
xchg
adc
mov
ret
arpl
stos
test
into
scas
out
jmp
adc
lods
sbb
sbb
mov
lock
pop
lods
jne
lea
mov
lock
or
mov
icebp
fucomi
xchg
std
xchg
and
push
test
lock
ret
sbb
mov
mov
jne
xor
lret
sub
pop
cwtl
out
xchg
cmp
movsl
inc
push
cmc
push
mov
jno
ja
aas
pop
push
orb
xchg
sub
xor
mov
pop
mov
mov
lods
sbb
cld
cwtl
ja
cli
inc
repnz
ss
or
popa
jle
xchg
stos
jb
mov
jmp
pop
xchg
rclb
ss
frstor
aaa
mov
sarl
inc
jnp
insb
fisttps
add
jmp
sbb
cmpl
and
fwait
add
sbb
xor
jmp
mov
add
sub
xor
jge
icebp
sub
out
rcrb
jbe
rorb
js
cmc
inc
dec
jg
adc
push
xchg
and
push
or
push
in
dec
aam
lret
arpl
mov
aaa
and
sub
negb
adc
loop
push
jl
cld
sbbb
cwtl
flds
add
pushf
bound
dec
fwait
int3
mov
mov
mov
ljmp
aam
out
mov
mov
lock
cwtl
inc
jecxz
jns
sti
sar
aaa
arpl
inc
cmpsl
popf
pop
mov
cli
mov
xor
aaa
lcall
dec
int3
jge
frstor
movl
shl
popa
pop
cmp
adc
inc
lock
std
adc
sbb
fisubl
or
std
lcall
dec
fdiv
inc
jne
loop
push
lret
xor
mov
and
rclb
pop
or
inc
cmp
pop
mov
mov
dec
pusha
ljmp
test
fisubrs
jo
dec
je
mov
push
lods
mov
shrb
jo
lods
and
nop
pop
in
lea
push
dec
lahf
jmp
adc
mov
das
test
imul
addb
cmp
sub
push
inc
sbb
les
lea
xchg
mov
and
hlt
int
jle
and
iret
sahf
mov
das
icebp
out
int3
imul
jb
mov
xchg
sbb
xchg
out
imul
jb
mov
inc
cmpsb
sub
dec
gs
jmp
std
xor
adcl
push
loope
fbstp
xor
iret
jmp
mov
int
sbb
shlb
cwtl
inc
stc
repnz
scas
popf
xchg
adc
cmp
mov
cmp
xor
icebp
push
loope
out
adcl
int
xchg
dec
mov
sbb
jl
push
aaa
push
rcl
pop
push
stos
and
xchg
es
icebp
xor
les
jne
ret
icebp
aam
pop
int
iret
push
rcll
iret
xchg
cmovo
jg
cmp
cmpsb
fstp
xchg
sti
mov
inc
call
push
mov
sbb
inc
mov
cmp
les
jne
add
cmpsb
leave
jmp
mov
push
push
pop
xchg
arpl
pop
and
pop
xchg
stos
mov
arpl
outsl
das
ds
mov
inc
imul
pop
and
gs
imul
adc
xchg
popa
shlb
leave
dec
lods
mov
xchg
cmc
inc
pushf
jg
or
fistps
hlt
mov
mov
imul
push
shlb
xchg
out
pop
popa
push
push
lods
and
push
xor
pop
es
mov
in
mov
xor
add
mov
shl
xchg
sub
xchg
jo
sti
xchg
adc
nop
and
lds
sub
xchg
test
iret
sub
push
jmp
into
mov
and
xor
push
adcb
inc
les
fidivrl
addr16
insb
das
inc
mov
sbb
pop
aaa
xchg
adc
lds
repnz
push
jmp
je
push
es
sub
pop
fwait
push
jne
fidivrs
adc
mov
pop
and
ds
mov
lahf
cmp
mov
insb
stc
push
xlat
cli
lods
pop
jns
fidivrl
jo
in
mov
inc
retw
pop
cmp
repnz
pop
loopne
xor
pop
adc
push
bnd
mov
pop
int3
aam
dec
in
pop
das
push
imul
or
clc
aam
inc
cltd
jmp
jp,pn
into
sub
into
jno
js
mov
popf
xchg
sbb
and
mov
and
scas
movsb
mov
into
fbld
lcall
mov
sub
cmp
sbb
sub
jp
xlat
ret
jl
std
pop
mov
shr
pop
mov
push
adc
fmull
leave
jns
ror
push
cmp
push
pop
cmp
inc
in
movsl
sbb
cmp
mov
insb
jg
cli
mov
dec
push
mov
add
ja
cld
in
mov
jns
inc
into
mov
add
ficompl
inc
mov
inc
or
push
hlt
cmp
xlat
mov
dec
sub
push
jl
lds
jecxz
outsb
movsl
or
cmc
or
addr16
ljmp
lret
xchg
add
iret
outsl
add
jle
inc
mov
or
pop
mov
cs
clc
jae
movsl
je
jno
dec
movsb
mov
mov
movsb
nop
sbb
mov
pushf
movl
hlt
push
sub
stos
lods
xor
test
cmc
popf
stos
xchg
cmp
mov
loope
sub
loopne
push
sbb
jno
js
and
pop
rcl
mov
lret
mov
inc
nop
scas
les
pop
das
cmp
jno
and
xchg
fsubr
scas
and
mov
cmpsb
inc
out
sbb
movsb
test
sbb
jg
ficoml
xchg
push
inc
and
mov
sbb
js
imul
mov
pop
cmc
mov
sub
pop
ficomps
filds
sub
addl
mov
lds
out
ja
into
mov
shrb
shlb
sti
jl
cld
pop
and
mov
outsl
or
call
aam
or
ret
xchg
sbb
push
imul
xor
inc
lahf
xor
ljmp
scas
push
inc
pop
mov
jmp
sub
lret
dec
jmp
in
stc
dec
int
scas
cmp
or
int
scas
loopne
push
ficomps
popf
push
jno
jecxz
sbb
mov
out
push
aam
daa
movsb
jge
cmp
test
mov
pop
fldcw
fsubs
and
push
mov
inc
roll
sub
xchg
push
in
jae
jl
dec
sbb
scas
xor
cmp
cwtl
mov
mov
inc
jmp
push
and
pop
dec
mov
adc
in
jns
mov
and
in
insb
jae
pushf
adc
fnsave
addb
das
call
fcom
inc
xchg
int
inc
and
testb
outsb
in
decb
loopne
mov
jmp
movsl
mov
sbb
xchg
dec
aad
push
insl
mov
std
fstps
xchg
mov
xor
sbb
lods
pop
daa
data16
shrl
lds
dec
roll
push
pop
mov
idivb
push
out
ja
mov
aam
pop
test
int
xor
mov
out
les
mov
and
push
and
fincstp
sbb
jbe
sub
push
xor
mov
out
push
sbb
pop
sub
js
dec
lahf
into
jp
pop
je
pop
lock
data16
cmc
out
das
test
hlt
mov
inc
cld
out
jp
pop
cmp
out
inc
subb
notl
mov
imul
mov
and
sbb
mov
cmp
jne
leave
xchg
sbb
test
push
and
mov
inc
cli
int3
add
or
gs
outsl
mov
mov
mov
sub
sub
testl
push
aam
hlt
add
leave
jnp
ljmp
test
cli
shl
std
mov
rcrl
mov
mov
add
push
add
adcl
stc
pop
pusha
jmp
add
ficoml
mov
cmp
add
sbb
loope
outsl
imul
xor
dec
ja
rcl
test
negl
and
pop
mov
scas
fwait
xchg
mov
mov
or
and
das
xchg
push
inc
pop
jg
and
inc
push
es
pop
pop
cmc
mov
adc
popf
mov
push
sbb
jns
outsb
push
jb
add
repnz
pop
inc
cmp
rcll
jns
mov
call
icebp
xchg
dec
movl
pop
std
sbb
xchg
jmp
cmpsb
cmp
and
xor
lock
xchg
rolb
les
or
adc
clc
mov
je
inc
adc
jle
jns
test
fisttpll
or
jae
and
shl
test
scas
fsqrt
sbb
add
xor
jb
dec
shr
jno
mov
ret
cmp
pop
or
mov
ret
sbb
jecxz
aas
cmp
inc
pop
inc
mov
addr16
ficoms
push
jecxz
sbb
push
xchg
jnp
insl
jb
mov
aaa
sub
dec
ret
shll
mov
call
nop
das
xchg
jmp
icebp
lcall
push
call
sarb
out
xchg
lods
cmp
or
xchg
mov
sbb
sti
jbe
cmp
out
aaa
jg
shl
lret
sbb
ds
addb
lods
and
shll
rorb
push
dec
addr16
xor
sbb
cmp
xor
es
sahf
mov
call
pusha
dec
lock
call
div
mov
sub
iret
call
sbb
xor
jnp
ret
and
sbb
dec
push
aaa
mov
jno
xor
lods
addr16
rclb
xor
mov
sbb
cmp
aam
nop
mov
jns
xor
dec
inc
out
and
scas
movsl
subb
arpl
add
xor
mov
push
adc
add
pop
mov
loop
and
sbb
xchg
mov
notb
mov
es
add
or
fistpll
pop
sti
in
xchg
jnp
movsb
mov
mov
out
xor
jo
mov
out
addr16
xor
jmp
xlat
mov
aas
jbe
jge
popa
pop
loop
loop
mov
dec
subb
push
leave
shll
mov
repz
jne
fwait
xor
push
xchg
xchg
jmp
jge
add
stc
push
insb
pmullw
push
inc
dec
fildll
cmp
or
ja
fistl
movsl
ret
or
repz
add
mov
lret
and
cmp
xor
test
lret
imul
or
mov
rcr
and
popf
fwait
out
adc
mov
out
lcall
pusha
jmp
push
enter
insl
pop
jmp
insl
xchg
mov
adc
add
sbb
fisttpl
mov
inc
mov
inc
ficompl
push
pop
aaa
enter
std
cwtl
cltd
pop
jmp
mov
stos
sbbb
int3
in
fdivs
loope
inc
adc
hlt
jbe
aas
sub
mov
adc
gs
lods
jbe
mov
loope
pop
or
cmp
mov
jl
cmp
stos
adc
push
pop
mov
jae
push
js
ja,pn
popa
and
push
mov
dec
cmp
inc
jecxz
movsb
push
pusha
add
cwtl
push
aaa
sbb
jne
cmp
faddp
into
dec
loop
loop
andl
repz
jae
ja
sbb
or
mov
loopne
inc
mov
mov
cltd
adc
jns
mov
inc
sti
sub
xchg
lret
sub
in
xchg
mov
inc
sahf
insb
std
add
add
pop
mov
lds
push
popf
shll
push
ficomps
xchg
cmp
xchg
mov
pushf
cmp
cld
in
jge
nop
xchg
mov
popa
shrb
int3
cmc
push
nop
pop
mov
jo
insb
xchg
pop
mov
xchg
xchg
in
sbb
dec
ret
push
scas
mov
and
mov
aam
popf
jle
push
xchg
push
in
dec
inc
mov
lds
ret
jo
cld
imul
fcmovu
xlat
shlb
jle
inc
sbb
pop
clc
inc
loope
adc
std
jp
mov
aam
add
into
jne
lods
push
enter
arpl
jg
sub
inc
imul
xor
stc
fisttps
call
out
movsb
inc
lock
pop
ficompl
xor
and
jecxz
fidivl
fisubrs
and
xchg
xor
adc
insl
jae
sbb
fwait
add
sbb
cmp
popf
clc
push
sub
out
je
fiaddl
adc
lahf
lods
mov
push
and
addr16
sbb
adc
les
cmpsl
pop
popa
sahf
xor
mov
js
leave
aas
int
dec
push
and
repz
dec
xchg
mul
or
aaa
stos
sbb
sbb
jnp
cmpsb
scas
dec
adc
jmp
add
lock
inc
fimull
shr
xchg
mov
xor
rclb
loope
jmp
mov
pusha
jg
xchg
imul
xchg
lret
add
add
in
mov
push
paddusb
insb
adc
jge
movsb
cli
xchg
std
xor
lret
mov
sbb
jle
xchg
out
mov
repz
mov
cmc
leave
aam
push
in
mov
sarb
sarl
mov
xchg
cmpsl
dec
xor
movsl
inc
popa
das
mov
or
jge
pop
mov
sbb
ficoml
sarb
out
or
cltd
inc
lret
xchg
inc
inc
fs
movsl
nop
pop
nop
or
pop
addr16
xchg
jg
adc
cld
mov
sub
les
or
aas
lahf
popa
adc
sbb
mov
pop
testl
dec
cmp
push
add
sbb
iret
xchg
data16
sub
test
into
sbb
mov
pop
pusha
add
jb
xor
xchg
out
dec
lcall
outsl
or
out
movl
inc
cwtl
outsb
jbe
push
add
in
shrl
or
movsl
out
pop
inc
xor
or
cmp
arpl
mov
dec
push
mov
pop
xlat
mov
das
das
stos
mov
es
mov
push
gs
jbe
pop
jns
pop
lahf
pop
mov
daa
in
cmp
jg
mov
cs
std
repz
sbb
fsubr
dec
lock
lcall
jmp
mov
jmp
and
cmp
sub
movsb
cld
jmp
in
and
inc
push
inc
mov
push
pop
xchg
hlt
add
lea
fadd
mov
mov
test
js
lock
test
mov
popa
fcomps
xchg
push
pop
iret
dec
jnp
stos
mov
packuswb
loope
mov
cltd
cmp
inc
test
mov
sahf
jbe
mulps
dec
jo
cmpsl
sbb
movsl
fldcw
bnd
add
loop
jl
xlat
mov
out
adc
leave
pop
xor
xchg
stos
pop
jmp
mov
imul
pop
leave
daa
jmp
dec
lods
push
out
jns
push
and
loopne
xchg
push
adc
sbb
cmp
subl
mov
sbb
mov
xchg
dec
call
inc
leave
add
pop
popf
sub
insb
push
subl
lcall
push
stos
rcr
inc
fstps
jns
pop
cwtl
mov
xchg
test
in
xchg
int
dec
lods
cld
sub
dec
sahf
push
jmp
mov
popa
inc
xchg
mov
sar
gs
mov
jns
in
icebp
lds
shll
xor
gs
jp
stos
stc
shll
test
ret
mov
jl
popf
lods
or
inc
or
adc
jbe
ds
popf
mov
mov
nop
jb
hlt
sahf
mov
ret
in
jp
cmpsl
fdivs
push
pcmpeqb
arpl
and
sbb
jp
mov
add
adcl
inc
jl
ja
mov
xor
lret
and
xchg
adc
inc
insl
stc
jns
test
out
daa
push
in
push
cmpb
jno
or
sbb
iret
shlb
imul
inc
sub
add
pop
rclb
notb
ljmp
scas
int
shlb
sub
mov
pop
out
mov
loopne
dec
cmp
fidivl
xchg
in
fiaddl
rorb
mov
dec
push
sub
adc
adc
out
popa
lods
pusha
xchg
jnp
incb
fsubrp
jns
mov
js
pop
jnp
push
xchg
pop
add
daa
mov
cmp
sub
in
hlt
in
push
mov
outsl
sub
push
mov
add
pop
sub
test
jge
test
mov
imul
cld
mov
or
dec
jae
push
lret
dec
mov
in
dec
inc
jp
into
or
pop
stc
shrl
mov
cmp
cwtl
repnz
ficoml
pop
xchg
fwait
test
pop
mov
out
dec
out
jb
out
dec
ss
rcrb
mov
xchg
insb
inc
or
mov
inc
cltd
xor
out
mov
add
jbe
adcl
xor
fldcw
jae
sahf
sbb
addl
loop
mov
and
mov
adc
stos
mov
lock
mov
and
push
inc
pop
xchg
fildl
int
push
xlat
sub
shrl
lock
sub
lds
mov
add
jle
gs
jae
jmp
test
sbb
jg
movsl
jns
xchg
adc
push
leave
hlt
push
cmpsb
mov
adc
cmp
xchg
lret
insl
dec
andl
pop
sub
icebp
push
pop
push
mov
movsl
enter
mov
push
popa
add
daa
aas
sub
inc
sbb
clc
jbe
push
cmpsl
push
lcall
ret
data16
xchg
loopne
les
mov
adc
jg,pt
pop
mov
mul
or
and
notl
dec
add
movsl
pop
xchg
mov
pop
imul
or
repz
hlt
notl
mov
repz
negl
inc
lea
ljmp
pop
push
xor
xor
out
ljmp
or
ret
sub
les
push
dec
sbb
loop
pop
jbe
leave
stos
aam
shlb
add
sbb
sub
xchg
jae
push
adcb
addr16
and
repz
jge
pop
mov
dec
test
lods
sub
cmp
and
enter
dec
inc
push
and
movsb
push
je
mov
cmpsb
in
mov
fstpl
xlat
or
test
dec
gs
pop
enter
mov
rcrb
lea
push
insb
dec
cld
xchg
xchg
leave
xor
add
in
sbb
adc
lea
xchg
aas
aaa
gs
jns
cmc
cltd
push
insl
mov
pop
imul
xchg
push
push
cltd
and
movsl
inc
shll
fwait
mov
les
push
mov
lea
xchg
pop
test
add
fimull
adc
cld
mov
in
xor
pop
lahf
sub
inc
fsubrl
mov
stos
push
mov
push
movsb
lahf
lcall
jle
cwtl
inc
xor
lods
cmp
dec
lods
fisubl
insl
xchg
pop
fstpl
pop
jbe
mov
incl
lods
pop
jns
xchg
jmp
jae
popf
loopne
push
mov
loop
and
outsl
inc
xor
aad
mov
mov
sub
loop
add
call
push
mov
mov
push
movsl
sbb
clc
lret
xor
adc
xor
jl
xor
inc
cmp
push
cltd
xchg
lea
dec
xchg
jb
adc
sub
sbb
scas
fsubs
ret
aam
in
xchg
push
sbb
push
aas
fwait
sbb
or
add
sub
pop
jo
sub
test
pop
je
stos
enter
xchg
insl
pop
push
push
cmp
repz
push
add
test
pop
pop
sbb
jb
outsl
or
sub
into
rcll
das
sti
mov
test
xchg
outsb
fwait
mov
mov
mov
xor
add
cmp
imul
or
jp
xor
ret
sub
out
push
and
pop
mov
nop
xchg
out
dec
aam
in
mov
lret
ds
cmc
or
add
inc
insb
xor
ljmp
int
or
mov
xchg
sti
hlt
adc
and
fmuls
mov
arpl
ss
adc
sbb
and
mov
repz
lea
outsl
cmp
and
dec
in
mov
jnp
loope
fcom
cmpsb
int
pushf
call
test
cs
mov
pop
clc
cmp
fdivrs
or
jns
jb
aad
rolb
movsl
hlt
test
jne
mov
rolb
mov
fidivs
orl
fadd
xchg
jne
in
int3
mov
adc
adc
jbe
pop
jge
lods
movsl
test
decb
push
sub
push
mov
jp
insl
pop
add
subb
repz
addb
pop
ja
xchg
arpl
fisubrs
aam
leave
push
dec
mov
add
mov
mov
cmp
or
and
dec
leave
or
jo
cmp
scas
mov
add
int3
inc
lcall
scas
jecxz
jns
pop
jle
outsl
adcl
jno
adc
pop
jbe
add
jecxz
es
out
xor
adc
jge
lcall
jno
xchg
imul
dec
rclb
inc
ss
dec
rcrl
xor
test
push
call
mov
or
test
cmp
xor
cmpsl
push
sbb
mov
jne
mov
bound
mov
pop
cmpsl
mov
inc
adc
push
adc
lahf
lahf
push
aaa
mov
pushf
sub
mov
pop
inc
xchg
pusha
gs
lock
sub
pop
cmp
pushf
cmp
lret
popa
scas
and
xchg
daa
test
mov
pop
stos
mov
jno
call
ds
insb
sub
dec
pop
lret
das
stos
stc
pop
nop
repnz
mov
nop
cmpsl
out
cmpsl
jl
clc
fs
pop
ret
dec
fidivrs
and
xor
movsl
push
push
fnstenv
mov
add
ja
mov
lea
cmp
jmp
push
sub
cmp
sbb
cmp
enter
gs
push
jno
gs
nop
mov
test
ss
xor
movntq
ljmp
outsb
dec
or
pop
add
in
or
inc
pop
mov
push
faddl
das
jnp
paddsb
jg
jns
pop
mov
push
int3
aas
or
inc
out
in
cmp
cmc
mov
shrb
cmp
mov
push
fidivl
in
in
push
dec
mov
mov
sub
jne
mov
rorb
cld
push
pop
popf
inc
cwtl
in
adc
ret
sahf
sbb
pop
sbb
adc
inc
mov
aam
cld
mov
inc
cwtl
inc
in
ret
xor
cs
out
push
in
push
pop
adc
aam
xor
js
mov
push
fadd
popf
pop
xchg
out
mov
loopne
pop
inc
sub
jnp
add
push
test
mov
std
pop
pushf
mov
pop
lahf
jg
idivl
mov
cld
nop
mov
bound
out
call
lods
ljmp
out
mov
push
sbb
jb
jo
dec
dec
roll
movsl
stos
sub
or
pop
mov
mov
xchg
inc
adc
ds
or
adc
ret
cmp
mov
jmp
lock
out
aam
mov
into
loope
jle
fldcw
push
lahf
aad
clc
in
cmpsl
pop
xchg
icebp
adc
xchg
jge
stc
xlat
scas
jg
fmull
fdivp
jmp
shlb
xchg
mov
mov
dec
add
loop
sbb
scas
into
fldenv
das
xchg
pop
enter
gs
lret
add
dec
loop
vrsqrtss
movsb
cltd
in
test
mov
icebp
insb
add
xor
cwtl
mov
dec
hlt
je
push
loope
loopne
ret
stos
mov
pop
mov
aas
loope
add
test
icebp
sub
sbbl
aad
imul
pop
push
pop
and
inc
mov
and
inc
push
out
repnz
stc
je
push
in
arpl
fwait
in
push
mov
mov
jg
loopne
inc
sbb
add
cli
pop
and
jg
push
cmp
addr16
cmp
pop
cli
mov
out
hlt
xor
add
lods
xchg
cmp
int
jnp
pop
pusha
adc
cmpsb
mov
xchg
fidivs
dec
pusha
and
adc
arpl
jecxz
and
pop
mov
movsl
fistps
dec
mov
mov
outsb
fnstcw
sbb
ja
push
enter
fidivl
out
out
ja
fisubl
mov
and
test
les
stos
add
popf
push
sub
stos
jp
pop
sbb
loope
inc
sbb
lock
das
cmp
popa
or
cmp
ss
push
or
sbb
lods
push
jge
xor
out
sub
in
cld
push
in
pop
insb
popa
or
lock
jne
insb
int3
in
in
jnp
nop
jmp
xlat
popa
inc
rorb
add
dec
and
outsb
push
dec
push
sub
fldl
cltd
or
cmpsl
mov
pop
xchg
and
pop
mov
inc
push
jns
add
repz
and
lcall
and
add
push
scas
adc
push
cmp
addr16
jecxz
imul
pushf
jne
dec
mov
sbb
dec
scas
test
mov
and
push
loop
loope
icebp
fs
stc
cli
punpckhbw
pop
aas
insb
inc
mov
js
sub
nopl
fbstp
cli
or
xor
push
out
lods
stos
cmp
clc
push
int3
stos
int3
jl
jmp
xchg
xlat
cld
adc
int
and
cmp
hlt
lds
pop
sub
das
xchg
daa
or
lret
je
mov
movsb
xlat
int3
pop
push
adc
int3
mov
jns
cmp
shrb
sbb
pusha
pshufw
mov
mov
aaa
push
push
pushf
sub
call
inc
xor
sub
mov
pop
dec
into
and
test
xor
jbe
pop
cld
std
adc
add
add
adcb
jmp
mov
sti
and
mov
and
cld
aaa
frstor
mov
arpl
adc
pop
std
out
mov
gs
sub
sbb
cmp
cmp
add
push
das
into
int
mov
insl
inc
mov
push
cmp
outsl
mov
mov
dec
lock
ret
jp
out
adc
in
aad
sbb
data16
pop
popf
xlat
inc
je
outsl
test
test
ret
jmp
push
jl
cld
sahf
jbe
and
mov
sbb
arpl
xchg
adc
outsb
sbb
mov
movsb
pop
shll
cmp
lds
inc
and
and
xlat
int3
fwait
shl
nop
roll
sarb
stc
and
aad
inc
mov
mov
inc
stos
pop
lret
push
out
adc
xor
inc
adc
in
mov
mov
mov
mov
adc
movsl
cwtl
sbb
std
mov
in
int
fsubrl
lea
xchg
push
test
cwtl
lods
divb
sbb
sbbl
inc
sub
nop
jo
and
repz
mov
adc
dec
aad
jno
insb
jge
scas
cmpsl
stos
int
cmp
aad
sub
stc
mov
and
ja
enter
push
fs
mov
cmp
cwtl
adc
lock
push
fstps
bound
push
aad
add
int
xchg
push
sbb
out
sub
mov
pushf
scas
adc
into
cld
cs
add
cli
stos
xchg
cmc
add
inc
or
test
or
rcrb
idivb
adc
pushf
repnz
xchg
adc
jecxz
ljmp
mov
aaa
or
xchg
fwait
inc
xchg
movsb
in
add
divl
xchg
jge
fidivrl
dec
mov
repz
dec
notl
and
xor
or
sub
or
sbb
pop
loopne
lea
mov
xchg
adc
push
xor
pop
pop
push
insb
xchg
add
sbb
imul
aas
mov
jbe
fdivrs
mov
sbb
repz
popf
jl
or
xchg
jns
lret
sbb
sub
rorb
and
jge
xchg
or
clc
movsb
gs
jle
imul
push
xor
je
fsub
pop
cmp
add
js
and
rorb
stc
push
loope
dec
cltd
mov
int
in
sub
cld
xchg
push
xor
pop
mov
push
push
lea
pop
imul
mov
popa
cwtl
jbe
sub
or
cmp
loope
ret
inc
rolb
xor
fists
jb
ret
ret
mov
stc
pop
rorb
daa
fildl
pop
sbb
adc
mov
add
xor
scas
jbe
jns
ret
test
add
cmpsl
pushl
sub
and
popf
adc
pop
inc
ficompl
jne
inc
shrb
outsb
int3
push
mov
or
nop
clc
aaa
bound
fstl
in
js
pop
xabort
push
mov
aad
add
or
out
push
enter
movsb
je
add
fwait
inc
loop
mov
push
in
testl
sbb
cmp
cli
add
jnp
daa
mov
xor
rolb
jb
inc
sahf
outsb
dec
out
out
mov
lock
adc
sbb
pushf
jbe
in
mov
dec
jno
je
sti
aas
mov
fld1
adc
mov
sbb
lcall
xchg
lret
xchg
lea
fldt
mov
popf
lahf
shlb
and
jae
jno
mov
mov
jle
mov
mov
xor
into
jne
bound
xor
in
std
sbb
push
test
xchg
adc
and
lahf
sbb
pop
jno
rcrl
stos
push
and
dec
pop
daa
lods
mov
movl
mov
xor
mov
in
repnz
sbb
movsl
lea
xchg
cmpsb
cltd
paddd
fiadds
test
leave
sbb
pop
mov
sub
cmp
inc
xor
sbb
xchg
lods
out
mov
push
dec
shrl
cmp
sub
cmp
test
inc
mov
xor
cmp
inc
mov
out
bound
fisttpl
imul
xchg
mov
pop
xchg
outsb
fisttpll
das
int
lret
xor
cmp
cmp
xor
mov
repz
and
jbe
ljmp
ja
sub
jecxz
icebp
xor
js
mov
mov
xchg
nop
cmpsb
and
ja
stos
inc
mov
lcall
push
jne
xor
bsf
aad
pop
xchg
sarl
push
in
dec
mov
or
jmp
xchg
xchg
pop
cli
jl
filds
push
mov
sbb
loop
adc
or
pop
bound
movsl
rcrb
xchg
scas
daa
mov
inc
mov
jg
lcall
xchg
orb
shll
or
and
sbb
mov
in
cmpsl
xchg
insl
insl
cmp
cld
jge
xor
ljmp
jle
mov
inc
pop
xor
mov
pop
push
rcrb
ret
ficomps
cmp
jbe
sti
xchg
enter
imul
sub
lret
inc
gs
cwtl
push
pop
mov
scas
movsl
jns
mov
jnp
loopne
jno
aas
sbb
pop
mov
test
sub
adcb
jecxz
push
jl
xchg
mov
add
pop
mov
jo
fwait
xchg
scas
mov
sbb
ds
cltd
inc
cmp
fsubrs
jge
or
loopne
mov
das
xor
mov
sarl
js
mov
jg
lcall
out
cmp
add
jbe
je
lds
cltd
push
ljmp
in
sbb
adc
les
dec
nop
add
flds
xchg
xchg
mov
mov
mov
iret
mov
cmp
cmp
out
mov
ret
mov
cmpsb
nop
out
std
cmc
inc
test
ss
and
or
pop
sbb
test
xchg
mov
cmpsb
loop
rcrl
push
sbb
mov
cli
aaa
jno
sub
xchg
ss
jno
mov
mov
lds
es
sti
insl
roll
xchg
aaa
into
test
lcall
push
stos
loopne
es
adc
clc
lcall
xchg
movsb
pop
jmp
js
daa
or
lahf
inc
lret
arpl
xor
sahf
push
sub
clc
jg
and
imul
mov
dec
dec
hlt
aas
push
or
stc
cmp
fmull
push
hlt
cmp
push
movl
push
mov
aad
push
mov
test
call
insl
outsb
leave
and
sti
outsb
fldcw
sbb
dec
or
cmovge
sub
cmp
les
out
push
shlb
push
mov
pushf
inc
mov
xchg
mov
iret
adcb
test
into
rol
lea
repz
fimull
sbb
loop
test
push
stos
test
test
cmp
dec
push
dec
hlt
cmp
sub
subl
add
lods
jnp
mov
or
scas
into
push
xchg
dec
sbb
pop
mov
imul
lea
nop
jnp
jb
jno
jnp
add
inc
ret
cmc
idivb
and
xchg
lret
shlb
scas
iret
jns
sub
test
std
add
rcrl
filds
mov
rcl
insl
es
jns
cmp
xchg
inc
push
push
jle
mov
icebp
jb
pop
mov
jo
scas
or
pusha
push
sti
push
out
int
cmpsl
mov
adc
or
pop
push
fwait
rclb
mov
daa
shlb
push
jae
psubusb
inc
cmpsl
lods
or
rcrl
les
out
in
jmp
ljmp
sub
out
or
cs
jae
xchg
lods
push
mov
mov
gs
test
call
sbb
push
xchg
mov
outsb
dec
daa
push
xchg
pusha
sbb
out
ret
sbb
movsl
into
imul
lret
dec
mov
jne
out
pop
outsl
push
xor
adc
jp
mov
xor
lods
dec
adc
sbb
inc
sbb
or
inc
sub
ret
cmp
ds
fsubrs
cli
cmp
adc
ret
push
aad
jp,pt
inc
fcoml
insl
adc
mov
fbstp
repnz
outsl
sub
dec
fsubp
pop
leave
lea
std
xchg
in
pusha
loop
xor
xchg
loopne
imul
wbinvd
out
mov
lahf
shld
adc
repnz
outsb
scas
sbb
movsl
or
orl
out
mov
in
jns
sub
hlt
sbb
fcoms
and
shl
cld
sahf
int
jne
pusha
jmp
and
push
dec
inc
popf
movzbl
push
mov
jbe
pop
mov
sti
dec
shll
dec
or
iret
call
pop
lret
out
mov
inc
lea
push
ja,pt
ficomps
sub
imul
les
pop
push
jmp
mov
mov
rcrb
mov
addr16
sub
fcom
lret
push
icebp
adc
or
push
push
fidivrs
or
xchg
out
sub
jnp
mov
xor
sbbl
xor
in
mov
xor
mov
cltd
call
cmp
mov
jl
push
into
mov
dec
in
dec
ret
lds
aas
cmp
dec
aad
or
push
in
je
dec
fmull
lret
push
popa
sbb
and
add
adc
icebp
mov
add
outsl
xlat
sbb
stc
and
pop
cs
mov
popa
es
shrl
lret
mov
inc
sbb
sbb
and
sbb
notb
ret
cs
ss
stos
and
divb
mov
xor
addr16
sbb
mov
dec
fwait
cltd
jo
popf
icebp
stos
xor
jo
iret
nop
mov
sub
mov
jmp
pop
ds
into
es
mov
pop
stos
out
iret
ss
or
aam
sub
push
out
js
mov
mov
pop
scas
inc
xor
popl
jno
ret
roll
push
cmpsl
inc
int3
xchg
add
push
adc
inc
inc
sbb
mov
stos
lock
arpl
leave
testb
mov
xor
push
add
repz
pop
adcb
xchg
jmp
aas
scas
das
mov
sub
xor
movb
dec
jb
push
scas
xchg
sub
rorl
fxch
aas
fidivrs
pop
sbb
shr
mov
jno
or
in
je
cld
inc
fucomi
mov
popf
mov
imulb
sub
adc
push
sti
ja
cmp
fnstsw
jg
fcomps
or
test
mov
aaa
jae
scas
xchg
mov
inc
jno
cli
jae
ds
outsl
leave
push
jge
je
adc
sub
jl
pop
hlt
xchg
sub
cwtl
cltd
mov
sub
pop
pop
das
xor
add
daa
imul
lcall
jne
ljmp
jmp
dec
cmp
adc
dec
aas
test
rclb
stos
adc
clc
daa
shlb
fstl
mov
fs
xchg
loope
std
imul
pop
and
addr16
push
cmp
pop
call
das
push
dec
xchg
add
mov
out
fsubl
mov
mov
std
into
jp
add
aam
jnp
mov
xchg
jmp
and
push
outsb
cmp
or
push
mov
shlb
and
in
cmpsl
in
sbb
lret
imul
xchg
std
imul
test
cmc
test
in
mov
loope
and
sahf
sub
xor
out
negl
add
inc
arpl
jne
addr16
in
jecxz
repnz
cs
mov
rep
jle
pop
pushf
js
call
das
and
imul
dec
bound
cmp
scas
xlat
mov
pop
into
aas
test
inc
movsb
cs
sarl
cmp
in
stos
adc
inc
and
fsubrs
dec
adc
sarb
cmpsl
sti
pushf
fcomps
push
outsl
mov
add
sbb
mov
ljmp
push
in
jbe
ret
dec
hlt
xlat
lock
js
ja
repz
in
adcb
inc
popf
xchg
xchg
xor
jge
mov
sbb
cmp
into
jmp
jns
or
mov
es
mov
adc
mov
incl
ds
cwtl
out
pop
cli
es
aas
rclb
jg
lcall
incb
pushl
test
in
enter
sahf
and
inc
or
mov
lds
jb
mov
cli
push
and
jne
dec
inc
inc
mov
data16
xchg
dec
mov
mov
and
mov
fnsave
cwtl
mov
dec
in
scas
mov
mov
xor
xchg
or
inc
jns
mov
push
or
jae
idiv
push
mov
mov
orb
xor
jo
je
in
cltd
and
sub
nop
pop
jbe
setb
pushf
inc
jbe
and
push
sub
xchg
adc
nop
or
mov
jecxz
stos
xor
mov
pcmpeqd
cmp
pop
xchg
push
lret
in
xlat
pop
xor
insb
cli
cmpsl
jb
add
shrl
scas
stos
jnp
push
push
xchg
push
imul
xor
mov
cli
push
sahf
fbld
mov
fisubrl
sub
ds
push
loope
int3
inc
dec
pop
sbb
sub
xor
sub
arpl
fucomi
sbb
andl
psadbw
lahf
push
xchg
pop
inc
popf
jecxz
mov
inc
stc
insb
decl
inc
inc
mov
into
mov
addr16
push
push
lahf
or
cmp
enter
xchg
dec
repz
pop
sub
rcll
in
xchg
and
pop
movsl
ja
sbb
inc
imul
jg
ss
cmp
adc
adc
xor
lret
mov
scas
shr
adc
clc
inc
popf
mov
or
push
push
push
fcoml
nop
lret
push
jno
mov
and
jg
jp
outsl
dec
mov
clc
sbb
nop
jo
pop
push
jle
scas
scas
cmp
ljmp
pusha
enter
sahf
or
loop
fiadds
adc
sarl
or
sbb
push
bnd
int3
movsl
jge
xchg
outsb
pop
dec
stos
jle
mov
subl
outsl
jbe
and
ss
sub
loope
setae
jge
fsts
pop
scas
addr16
icebp
stos
push
sub
fsubrp
js
pop
mull
out
add
in
enter
cmp
insl
fdivr
dec
ja
stc
orb
in
xor
mov
hlt
mov
ja
les
and
lret
adc
inc
pushf
add
jecxz
outsb
andl
imul
jmp
addr16
and
xlat
lea
adc
jle
idiv
dec
or
fisttpl
pop
sub
push
testl
fisubrs
fsts
xchg
sbb
ret
adc
lret
inc
xchg
loopne
stc
out
stos
sub
sub
mov
stc
imul
sub
xchg
or
lock
fmulp
add
dec
push
xchg
insl
daa
jg
cld
stc
cmp
popa
inc
mov
and
negl
daa
scas
loope
imul
xor
ja
jo
xchg
mov
jae
jbe
jae
dec
xor
rclb
add
push
push
cli
sbb
dec
mov
pop
push
movb
inc
or
repnz
mov
xchg
cli
mov
or
push
es
pop
mov
lods
ja
mov
dec
ljmp
int
aaa
mov
ret
call
add
mov
sbb
sti
jg
adc
adc
inc
push
adc
popl
sahf
inc
mov
inc
xchg
add
jns
int3
and
push
pushf
mov
in
insl
dec
bound
add
loop
xchg
sbb
dec
and
jbe
sarb
adc
mov
test
inc
add
cmpsb
test
mov
imul
sub
dec
fs
lock
addr16
movsb
jge
dec
or
mov
push
mov
pushf
scas
jbe
xor
loop
pop
and
stc
ja
aaa
inc
pop
and
outsb
cmp
jae
and
fisttps
push
sbb
je
adc
mov
in
fsubrl
loopne
adc
pop
fcomps
ror
sbb
pop
hlt
fbstp
jecxz
sub
outsl
inc
jns
inc
es
xor
test
scas
cmp
mov
push
push
inc
mov
loopne
adc
jg
gs
xchg
rorb
mov
xchg
sbb
inc
jl
leave
cmp
pop
pop
rorb
xor
ds
cli
icebp
test
lds
stc
imul
test
sub
out
mov
push
fidivrl
adc
pop
or
sub
inc
mov
mov
mov
shl
jns
push
add
jle
inc
mov
push
or
push
adc
adc
mov
outsb
xor
stc
movsl
pop
inc
shr
adcl
or
insl
add
loop
nop
std
sbbl
xlat
test
dec
xchg
stos
sahf
mov
das
dec
dec
cs
data16
popa
push
dec
lcall
push
mov
imul
movsb
outsl
mov
mov
mov
mov
jp
lds
ficoms
lds
js
pop
fsts
or
mov
and
arpl
mov
int
ror
cld
mov
roll
or
mov
inc
jmp
jnp
ret
popf
nop
mov
push
mov
shrl
push
repnz
jno
push
add
xor
sbb
sbb
int
in
inc
cwtl
push
cmp
mov
scas
repz
gs
test
aas
mov
xchg
xorb
xchg
fisttpl
lret
cs
in
arpl
mov
stos
dec
pop
xor
push
sbb
xlat
test
rcr
shll
xor
repnz
jb
dec
or
shl
push
mov
xchg
imul
leave
jno
lcall
arpl
outsb
sub
dec
adc
push
mov
pop
fs
xchg
fcoms
lret
mov
loope
arpl
jg
cmpsb
jb
xchg
or
roll
cmp
sub
scas
in
dec
bound
add
mov
ret
mov
xor
lahf
xor
mov
jnp
stos
dec
into
js
sbb
and
inc
lock
fcomi
loop
push
lock
inc
jmp
and
dec
loopne
sti
repnz
lods
aas
mov
xchg
and
jo
jno
scas
push
pop
add
fildl
sub
pop
dec
rolb
jmp
sbb
pop
movsb
sbb
jp
sub
imul
push
in
lret
add
push
or
popa
add
mov
mov
mov
xchg
sub
movsl
fucomip
std
push
xor
xor
mov
jge,pt
shll
sbb
data16
jne
popa
ljmp
jno
jle
andb
insl
jmp
stc
hlt
in
xchg
and
cmpsl
daa
push
adc
xor
ret
sub
subl
ret
jns
pop
test
adc
mov
dec
lock
inc
push
sbb
xchg
imul
scas
sarl
lock
fildl
sub
mov
push
lods
pop
jb
lcall
sbb
and
bound
cmp
lods
xchg
out
jmp
xchg
mov
pop
pop
xor
inc
les
cmp
mov
adc
jecxz
sti
and
xchg
fidivrl
mov
or
movb
mov
cmpb
imul
dec
std
cld
js
pop
dec
xchg
rorl
les
cmpsb
jnp
dec
pop
or
xchg
jb
ret
jmp
insb
dec
inc
sub
loopne
dec
and
in
and
xor
pop
outsl
adc
dec
pop
adcl
jns
inc
and
mov
lods
lods
dec
sbb
out
addb
jo
sub
call
into
sub
xchg
pop
fiadds
inc
sub
mov
pop
mov
sbb
pop
lods
fnstsw
inc
sub
jle
dec
into
xor
lcall
pusha
and
jae
push
fildll
jo
add
pushf
hlt
jne
repnz
testb
xchg
insl
fdivr
push
xor
jmp
push
mov
cmp
lea
mov
ret
push
cmp
dec
mov
test
lods
push
repnz
shlb
jbe
mov
lcall
in
lea
cmp
pusha
les
pusha
repnz
imul
cld
jp
sub
pop
sbb
mov
fsubs
xor
push
mov
ror
mov
inc
mov
call
cli
add
xor
mov
and
mov
addr16
ja
and
fcoml
lea
or
push
repz
popa
fadds
jge
and
cmp
fidivs
std
aas
push
test
cmpsb
andb
inc
push
push
inc
push
aam
jb
dec
mov
sub
pusha
ret
jnp
mov
hlt
nop
fmuls
xchg
push
and
mov
dec
adcb
mov
xchg
shlb
iret
cmc
add
insb
fnsave
aad
dec
pop
pop
sbb
test
in
scas
push
fcom
int3
push
bound
scas
xchg
mov
clc
enter
add
jae
fimull
mov
mov
pushf
dec
fs
mov
cmp
je
movsb
jbe
pop
icebp
repnz
pop
idiv
leave
sbb
or
scas
mov
aam
aas
popa
mov
fs
or
push
rcrl
clc
loope
or
aam
imull
add
out
arpl
vphaddwd
adc
ret
out
fnsave
xchg
inc
sarb
or
mov
fistpl
push
push
inc
fidivs
inc
fwait
or
sbb
xchg
xorl
and
negb
cmp
lret
pusha
xchg
js
jns
jns
hlt
inc
nop
ljmp
sbb
push
lret
addr16
jecxz
xchg
xlat
xchg
fisubrl
inc
addr16
mov
fnstsw
andl
pop
mov
add
les
adc
lahf
cltd
andl
mov
outsb
pop
rorl
mov
mov
mov
or
mov
test
cli
es
outsb
push
and
bound
inc
pushf
xor
fs
mov
xor
jmp
dec
dec
jbe
test
lcall
inc
inc
xor
incb
inc
adc
xchg
cltd
mov
call
repnz
mov
fucom
fadds
mov
xchg
jmp
add
aam
lret
lret
repnz
loopne
xor
out
push
movsl
aad
pop
notb
repnz
cmpb
jo
data16
mov
inc
rcrb
mov
jnp
ret
or
mov
out
fcmovnb
push
jo
mov
in
sti
inc
aad
xor
jg
inc
push
dec
dec
mov
cmp
out
push
outsl
outsl
jnp
xchg
inc
flds
imul
jmp
test
imul
adc
pop
pop
xchg
or
xor
pushf
stos
xchg
lret
adc
pop
push
stos
addr16
aaa
bound
iret
pushf
test
fsts
enter
cld
sbb
jge
das
and
fmuls
ss
cmp
insl
pop
xor
ret
bound
inc
mov
mov
stc
jmp
jle
cmovns
xor
xor
stos
leave
es
mov
aad
fmuls
jo
andl
jne
shlb
out
jp
aad
or
xchg
add
int
lock
xchg
adc
dec
into
dec
ljmp
out
imul
push
xor
lret
mov
sub
out
jp
movd
and
dec
jecxz
xchg
mov
adc
jbe
test
cmp
mov
aaa
ror
xchg
icebp
movl
jecxz
sub
lock
cmpsl
pushf
jbe
iret
or
and
pop
test
jae
fmul
sub
mov
adc
xchg
and
add
cld
rcrb
cmpsb
pop
inc
jae
xorb
stos
xlat
aaa
xchg
push
iret
arpl
imul
push
lret
int
ja
fists
cmp
jns
lea
push
fmull
jns
add
sarb
mov
push
in
mull
test
push
in
mov
fcoml
dec
pop
add
dec
push
enter
divl
adc
aas
out
fdivrp
adc
mov
cmp
stc
sub
aad
add
cltd
and
stos
into
testl
movsl
inc
cs
lret
mov
adc
push
mov
and
aaa
mov
loope
xor
dec
jo
shr
ret
repz
mov
jp
test
or
rorb
movsb
push
jecxz
sbb
mov
cmpsl
xchg
repz
and
mov
cmp
mov
cmp
sbb
pop
xchg
xchg
adc
or
sbb
shrb
mov
cmpsb
cli
clc
add
sti
or
cwtl
jns
xor
jg
cmpsl
lods
rclb
inc
arpl
or
cmpsb
enter
in
scas
and
mov
mov
and
sub
add
push
into
aaa
adc
inc
nop
loop
mov
aad
or
fwait
and
mov
and
xchg
dec
cltd
adc
xchg
push
mov
sub
or
fistpll
and
push
movsl
mov
add
test
divl
sub
int
mov
ljmp
dec
mov
pop
pop
push
and
push
icebp
popf
adc
jae
ret
push
jmp
scas
pop
test
pop
jecxz
mov
or
mov
jo
nop
cwtl
mov
cmc
inc
cmp
lahf
xchg
and
mov
xchg
mov
jne
lods
mov
mov
out
outsb
out
pop
xchg
push
xchg
pop
pop
lahf
lods
sti
push
add
cmc
or
push
dec
or
lods
sub
mov
out
fsubs
imul
gs
mov
mov
jmp
mov
sarl
imul
and
mov
mov
pop
add
ret
icebp
xlat
mov
jnp
push
outsb
sarl
popa
in
mov
xor
mov
outsb
fcmovnbe
mov
cmc
rcr
nop
lods
adc
sbb
jl
mov
ret
cmc
mov
pushf
inc
fmul
mov
jnp
adc
sbb
mov
lock
lods
mov
push
inc
and
sub
push
inc
mov
or
cmp
in
fildl
mov
inc
pop
mov
xor
test
int
stos
in
ljmp
mov
lahf
dec
mov
clc
pushf
or
sbbb
popf
dec
push
lret
rcll
nop
xchg
fwait
das
out
and
sti
and
ja
mov
lahf
imul
add
push
sbb
pop
rorl
in
and
lock
cmp
das
outsl
out
arpl
enter
jp
and
jp
xchg
das
gs
and
mov
scas
inc
sarl
jecxz
mov
adc
mov
mov
fnstsw
fdivs
jg
pop
ret
frstor
xchg
sbb
inc
xor
daa
mov
cmp
scas
out
ss
in
cmc
fistpll
ss
add
inc
orb
dec
xor
mov
insb
fidivs
xor
and
push
xor
jle
cli
mov
repnz
ja
mov
cli
hlt
sbb
hlt
outsl
jl
xor
fwait
sbb
cmpsb
inc
mov
jmp
adc
test
cmpsl
test
pop
nop
xor
mov
movsb
imul
xchg
sub
sub
inc
cmp
jae
and
mov
ds
mov
clc
stos
pop
adc
pop
fwait
stos
pop
fmulp
inc
jge
inc
fisubrl
fimuls
int3
add
dec
cmp
dec
aad
outsl
fwait
mov
cs
ret
call
ljmp
xor
cmp
push
daa
sbb
imul
aaa
mov
aam
mov
cwtl
fcoms
xchg
movsl
or
fimull
and
outsb
inc
cld
push
or
lds
in
int
in
and
enter
mov
outsl
xchg
sbb
out
push
in
mov
aad
cli
jp
cmpsl
cs
sub
into
out
daa
loope
sub
jae
lock
cmp
inc
je
xor
xchg
add
hlt
mov
adc
out
mov
dec
loop
push
inc
sub
stos
inc
adc
and
cmp
push
sbb
adc
push
mov
xor
arpl
jo
or
psadbw
adc
inc
jb
sub
push
int
icebp
sub
mov
cmp
mov
or
push
mov
inc
flds
cli
rolb
pop
xchg
lds
and
pushf
roll
push
mov
or
fadd
pop
xchg
sub
xchg
mov
pop
push
dec
inc
fnsave
inc
xchg
movzbl
mov
popf
or
shll
fstpt
das
jmp
bound
das
add
sti
sub
sahf
dec
pop
adc
jp
or
mov
ja
popa
insl
mov
fsubr
sub
ret
push
into
add
jle
jbe
insb
jecxz
mov
push
aad
movsl
dec
mov
je
xchg
cltd
sbb
adc
pop
sbb
jmp
xor
xor
dec
lret
imull
cmpsl
loope
popf
cmpsb
int
subb
mov
push
mov
jno
lahf
in
mov
sbb
cmpl
xor
add
sbb
sbb
inc
pop
mov
mov
cmp
aad
mov
push
xchg
dec
adc
xor
mov
dec
jmp
jns
cwtl
subl
neg
mov
rcrl
push
or
data16
adc
xor
push
in
push
xor
leave
mov
shlb
mov
adc
addr16
pop
test
and
jnp
shll
mov
clc
ja
stos
inc
inc
xchg
into
xchg
int3
xchg
and
pop
xlat
add
pusha
push
xor
loopne
testl
cmpsb
mov
sub
icebp
jle
mov
mov
xor
jne
lea
lods
lds
imul
dec
cmp
mov
add
je
dec
add
inc
or
xor
js
and
test
jle
popf
inc
lcall
mov
sub
push
cmp
push
lahf
cmp
adc
dec
call
shr
lret
or
push
lret
dec
aaa
dec
inc
mov
jo
lds
test
cli
sub
outsl
dec
xchg
sub
inc
stos
jo
and
fnstenv
jg
jmp
push
rorb
add
jae
test
iret
add
mov
imul
fsubl
cltd
mov
rcr
fcoms
inc
clc
das
xor
sarl
pop
xor
jle
mov
mov
sub
pop
movsl
bnd
push
shll
test
inc
jle
xor
insl
loope
inc
or
aam
mov
inc
sbb
movq
or
dec
jae
push
dec
pop
mov
lock
loop
xchg
push
and
mov
insl
neg
jnp
outsb
pusha
ljmp
movsb
out
jne
loope
inc
mov
mov
shrl
mov
push
js
adc
pusha
mov
add
mov
lret
or
and
and
lcall
jno
lcall
es
push
movb
pop
les
pop
dec
inc
fsts
in
jns
daa
jo
push
inc
push
cmp
pop
rdtsc
fdiv
cmove
jecxz
pop
push
cmpl
div
stos
in
adc
xor
xor
bound
mov
inc
adc
imul
inc
mov
pop
leave
pop
adc
xor
lahf
test
mov
dec
dec
jecxz
sub
int
in
dec
lods
dec
mov
or
sbb
cmpsl
dec
out
hlt
adc
adc
jo
in
jg
out
imul
push
sub
rorb
xlat
add
push
jnp
mov
imul
adc
lods
push
outsl
mov
das
loope
or
xchg
and
inc
movsl
insb
lods
nop
fsubs
test
ss
sbb
mov
ficompl
cld
xchg
pop
js
push
outsl
add
jo
mov
push
cmpsb
das
fiadds
lods
sbb
ds
push
inc
push
ja
test
rorb
js
mov
enter
pop
lret
add
push
xor
sbb
mov
xchg
xchg
pop
dec
sahf
xor
inc
inc
dec
imul
pop
lcall
in
cld
insl
sub
add
sarb
enter
aas
test
adc
mov
adc
stc
lahf
inc
cld
inc
outsb
push
pop
movsb
mov
xchg
pop
xchg
jb
js
idivl
mov
iret
repz
inc
jge
ficompl
push
out
mov
ret
lret
fwait
mov
or
ja
icebp
sub
mov
cmp
and
sti
xchg
dec
lock
jne
jae
shll
xchg
popf
push
mov
outsl
test
or
fidivl
xchg
xlat
fisttpl
mov
xor
xlat
popf
adc
cltd
xchg
insl
fidivrl
mov
daa
pop
dec
rep
orb
ljmp
fs
adc
cld
ss
sub
mov
movsl
sbb
add
mov
das
sbb
rolb
ds
je
mov
jmp
xor
mov
inc
test
dec
dec
aas
test
jno
fwait
ja
mov
cmp
test
xor
inc
scas
test
popf
inc
xchg
mov
pop
jo
cmc
xchg
cwtl
mov
xchg
mov
shlb
xor
cmpsb
addr16
ret
and
into
clc
out
pop
cmp
fimull
mov
jmp
ljmp
sti
popf
fldl
or
or
js
mov
mov
mov
pop
xchg
jnp
repnz
and
ret
xchg
jge
mov
pusha
xchg
in
sbb
jge
dec
xor
dec
or
xchg
in
sbb
cwtl
insb
repnz
enter
addr16
xchg
ffreep
je
repnz
pushf
outsl
mov
bound
fildl
push
mov
in
insl
mov
mov
mov
sti
xchg
in
arpl
xchg
cmp
xchg
mov
push
movl
jb
std
movsb
in
inc
loope
repnz
lcall
test
pop
fs
mov
movsb
test
inc
mov
es
adc
mov
mov
xchg
dec
mov
daa
and
mov
jg
mov
addr16
aaa
mov
daa
test
push
std
aad
xchg
in
adc
mov
mov
fwait
dec
xchg
decl
and
push
arpl
sub
in
adc
mov
in
out
mov
fwait
call
call
xchg
out
or
sbb
sub
aam
adcl
sbb
inc
aaa
insb
sbb
dec
sbb
or
test
cmpsb
mov
out
inc
out
jmp
mov
cli
imul
loopne
nop
sbb
xchg
cmp
mov
pushl
fwait
dec
and
mov
adc
adc
mov
cmp
mov
cs
lret
shrl
pushf
sub
std
add
xor
or
sbb
mov
jnp
pusha
dec
push
dec
cmpsb
xchg
xchg
aas
push
adc
outsl
mulb
sub
xlat
adcb
inc
dec
mov
mov
jns
inc
xor
ds
inc
push
cwtl
or
adc
sbb
movsb
pop
daa
lret
push
call
cs
bnd
mov
daa
cmpsb
subl
jnp
in
jb
push
mov
pop
jnp
and
mov
ficoms
push
insl
adc
lahf
push
mov
inc
gs
loope
stos
popa
mov
pushf
ret
cmp
mov
or
or
pop
aaa
bound
loop
nop
mov
cmp
int3
mov
out
out
mov
jl
pop
ja
clc
test
lea
mov
sub
test
stc
mov
cltd
sbb
cmp
or
and
repz
mov
cld
jecxz
mov
or
jp
scas
mov
and
pop
xor
loope
pop
mov
int
call
push
sahf
push
insb
lahf
and
pop
cs
fisttpl
pop
mov
pop
sub
test
sub
mov
pop
out
cli
jp
xchg
and
popa
fdivrs
aad
shrb
mov
pop
xor
mov
sti
adc
jne
lea
mov
inc
and
popa
add
mov
add
orb
cli
fsub
push
repz
sbb
sbb
shlb
sbb
or
pop
repz
aaa
std
incl
cld
in
mov
ja
fs
push
and
iret
pop
leave
cli
xchg
icebp
sub
aad
nop
cltd
int3
std
popl
repnz
or
in
gs
jno
xor
stc
mov
scas
cmc
pop
add
push
xchg
xor
sub
xor
sbb
jnp
in
or
cmp
sbb
mov
and
mov
ret
pop
sub
sub
xchg
push
in
fxch
divl
add
xchg
popf
mov
dec
lock
cli
adc
push
add
test
ret
or
fs
jo
and
inc
add
inc
movsb
lret
jo
jecxz
cmp
inc
js
int3
xchg
pop
fwait
push
and
mov
pop
jecxz
ficoml
push
stos
fstpl
dec
mov
mov
mov
dec
clc
dec
arpl
ds
cli
push
and
sub
or
out
mov
pop
dec
add
into
loopne
xchg
mov
sbb
dec
gs
push
pop
or
mov
sahf
cli
fs
sub
dec
jb
xorb
pop
xor
stc
mov
cwtl
mov
mov
push
aam
mov
adc
dec
jge
fimull
xor
pop
loopne
and
push
sahf
test
inc
xchg
sub
sbb
inc
stos
add
xchg
push
or
mov
and
cmp
aam
mov
test
adc
int
les
cmp
mov
outsb
jns
fs
int
aaa
in
mov
mov
or
out
aaa
xchg
cs
movsl
mov
jmp
out
and
pop
mov
push
test
aaa
pop
xchg
addps
fs
std
imul
aam
mov
or
hlt
lret
dec
pop
sub
cmpxchg
add
jmp
inc
xchg
jns
sbb
dec
fcomps
xchg
iret
push
cmp
dec
pop
push
adc
movsb
inc
shll
adc
out
push
push
cmp
pop
shll
or
hlt
outsl
nop
xchg
jl
mov
movsl
cwtl
mov
inc
ja
or
lock
cmp
pslld
insb
test
stc
xchg
scas
ret
xor
ds
cld
out
adc
mov
sti
addb
mov
push
xchg
jae
fwait
pop
jecxz
push
rorb
inc
iret
xlat
hlt
test
and
add
mov
lock
or
jmp
scas
in
jns
jecxz
gs
jmp
insl
or
iret
jge
adc
mov
jnp
or
movsb
or
ret
insl
mov
dec
hlt
mov
arpl
je
sub
lret
adc
sbb
std
sbb
icebp
push
pop
pop
sahf
cmc
dec
and
mov
cltd
cmp
inc
jo
adc
outsb
xor
lods
dec
out
xchg
cmp
lahf
adc
out
popa
pop
setne
dec
movsl
dec
sub
xor
je
and
bound
stc
and
lods
and
sahf
into
add
mov
fdivrs
and
sbb
aam
repz
push
adc
sbb
sbb
pop
scas
rorb
lods
out
inc
and
imul
jl
icebp
fucomip
push
inc
jl
adc
mov
shrb
movsl
insb
bound
rolb
dec
lret
shr
jo
mov
pop
push
clc
int
mov
push
pop
lds
testb
jo
testb
adc
mov
je
jge
sarb
sbb
jg
or
ret
dec
mov
aaa
data16
sbb
mov
dec
push
inc
sub
xchg
popf
icebp
inc
sbb
add
add
out
sbb
xor
bound
push
mov
fmull
xor
scas
das
dec
insb
pop
cli
xchg
bndldx
pop
push
xchg
xor
add
pop
out
pop
je
test
mov
cmp
loop
int3
in
in
mov
int
loopne
lcall
jmp
fwait
pop
shr
movsb
or
add
pop
sbb
sub
mov
in
fldcw
push
mov
lret
mov
fldenv
cmp
pop
mov
ds
sub
sub
adc
outsl
fidivrs
sbb
jo
sti
lea
add
shll
imul
sbb
or
fisubs
add
mov
jnp
push
fsts
add
or
dec
jg
call
je
inc
xchg
imul
mov
xor
repnz
notl
test
imul
push
pop
roll
lds
popf
push
leave
mov
add
lahf
mov
sbbb
pop
in
dec
sbb
jo
cmp
repnz
js
loop
and
jns
jns
push
push
xchg
shl
into
xchg
lcall
adc
sbb
ficoml
cltd
aad
arpl
xchg
ljmp
testl
adc
out
cmpsl
pop
repnz
or
inc
mov
and
xchg
fadds
xchg
int3
cmp
and
lret
jl
cli
cld
cmp
enter
imul
cmpsb
das
ljmp
inc
aas
and
inc
ret
fstl
cmp
xchg
push
mov
mov
dec
adc
add
in
dec
jp
dec
add
decl
mov
add
sub
ret
leave
add
mov
inc
dec
cmpsl
dec
push
imul
ret
mov
test
and
aad
ffree
inc
lea
je
sarl
ret
push
sti
xchg
jp
pop
or
jmp
pop
icebp
xchg
sbb
xchg
mov
aas
xchg
push
cmp
cmp
jp
fisubl
pop
out
jae
push
xlat
imul
dec
pushf
or
push
jae
hlt
xor
in
in
das
out
popa
jmp
pop
jne
bound
sbb
mov
pop
adc
dec
repz
xchg
pusha
aad
stos
add
call
xor
pop
inc
mov
mov
ret
jns
movsb
setge
push
push
xchg
frndint
pusha
fcompl
sbb
jo
adc
roll
fdivs
pop
pop
pop
insl
inc
data16
loopne
andb
or
pop
mov
xchg
stos
cltd
push
fdivrl
or
cmpsb
movsl
jge
cmpsb
adc
aam
or
in
xchg
lods
xchg
out
mov
jge
fst
js
push
stos
cltd
sub
imul
mov
popw
dec
mov
lock
add
mov
fs
mov
xor
ljmp
mov
jle
jb
dec
out
arpl
test
cmc
mov
sbb
mov
xlat
pop
rclb
and
sub
mov
adc
adc
pop
xchg
push
mov
mov
xchg
rorb
into
mov
jge
sbb
int
lods
out
mov
fdivrs
pop
adc
lock
in
ret
cmpsb
test
push
adc
js
push
push
sahf
negb
inc
in
cmp
sub
stos
sub
into
sbb
jnp
cmpsl
addl
xor
lret
sub
popf
sbb
lea
aad
fs
xchg
stos
call
lds
rcll
push
sti
cli
xor
stos
mov
xor
xor
inc
xchg
cwtl
xchg
push
shlb
leave
cmp
jge
mov
adc
xor
loopne
push
sti
and
cld
lahf
jge
cli
adc
inc
loope
js,pt
push
and
pop
pcmpgtd
pop
sahf
pushf
fidivs
inc
xchg
sub
insl
pop
out
push
cmp
out
addl
mov
mov
addr16
jmp
xchg
mov
jno
movsl
rcrl
pop
and
and
mov
sti
jae
mov
cs
pop
test
mov
adc
sahf
pop
pop
test
mov
mov
test
shlb
or
inc
sub
jmp
lods
mov
sbb
jo
fmuls
pop
mov
xchg
and
fcomps
mov
mov
loope
dec
popf
rclb
mov
xchg
inc
xchg
jbe
and
test
ret
mov
repz
gs
jne
mov
cmp
cwtl
sbb
das
xor
pop
push
or
dec
and
stos
sbb
mov
movl
push
jns
test
out
and
dec
lcall
mov
cltd
cmpsb
adc
bnd
adc
xor
dec
push
cmc
lods
push
mov
ret
xchg
and
leave
daa
mov
mov
cwtl
pop
add
push
mov
rol
push
and
mov
ljmp
into
pop
out
cwtl
rclb
dec
cmp
pop
into
dec
je
sbb
mov
jmp
cmp
jg
inc
fstpt
jne
mov
lock
ret
mov
adc
cmpsl
and
pop
mov
push
add
call
int3
popa
or
jl
popl
js,pn
mov
mov
scas
out
push
xchg
mov
push
pop
mov
into
sarb
mov
push
or
movsl
lcall
imul
daa
sub
or
xor
xor
or
sbb
sbb
sub
sub
xchg
test
nop
push
mov
cmp
dec
lahf
mov
or
inc
jb
sub
inc
xor
in
dec
mov
cmp
sbb
mov
adc
rolb
sbb
jnp
js
nop
inc
cmp
xchg
adcl
mov
call
mov
push
dec
mov
fidivrl
dec
shlb
imul
mov
shlb
pop
sti
mov
movl
xor
cmp
stc
out
lods
mov
into
pop
arpl
jbe
pop
or
fidivrs
movsl
or
inc
and
push
jle
aas
in
cwtl
xlat
jmp
pop
ss
inc
mov
nop
mov
or
icebp
scas
shll
push
gs
fisttpl
cltd
add
inc
outsb
out
cmp
push
daa
inc
test
jecxz
fidivrs
popf
xchg
std
in
imul
mov
jb
mov
dec
mov
mov
in
or
add
mov
mov
inc
push
out
in
les
movsl
pop
jns
xchg
jg
inc
inc
dec
test
jns
pop
addb
push
mov
push
inc
sbb
jbe
cmpsl
imul
rorb
sub
cltd
gs
ljmp
mov
sbb
imul
in
mov
in
mov
insb
jmp
outsl
jno
jl
or
mov
test
pop
mov
add
mov
inc
fistpl
cmp
lods
pop
js
stos
push
movsb
sbb
and
loope
dec
pop
cmp
repnz
aad
fisubs
imul
pop
ss
imul
xchg
call
dec
sub
movsb
into
pop
and
pop
inc
mov
scas
cmp
mov
dec
test
pusha
ljmp
mov
iret
loope
loopne
div
mov
test
repnz
test
das
cs
aaa
js
lods
mov
and
int3
pop
stos
sub
lahf
pop
aaa
jb
push
sbb
icebp
popf
push
fwait
sbb
lret
inc
inc
ret
mov
pop
adc
cltd
jbe
stc
fs
or
sub
dec
xor
test
movsb
gs
fldenv
inc
mov
test
pop
cmpb
sub
aas
rcll
push
cmpsl
lods
and
add
cmp
push
sbbl
add
jp
je
pop
movl
dec
cld
stc
sub
and
sbb
push
movsl
movl
lret
jnp
aad
add
call
js
mov
scas
clc
repz
pop
stos
movsb
adc
push
or
mov
mov
cmc
fistpl
and
cmp
movsl
sbb
fists
inc
lock
fisttpl
xor
shrb
mov
jne
mov
or
sbb
imul
aaa
ficoms
rorb
fadds
or
cmp
outsl
mov
pop
inc
das
jbe
adc
dec
jecxz
popa
mov
lret
fdivrl
jnp
mov
insb
push
xlat
pushw
and
inc
sub
cmp
jnp
ja
les
pusha
cs
cmpsl
mov
xchg
out
sub
xchg
mov
pop
lret
xor
aam
jnp
popf
nop
clc
sbb
lock
mov
mov
loopne
jle
push
xchg
mov
push
int
mov
jne
rcrl
sbb
adc
ja
nop
mov
popf
stc
pop
mov
pop
and
cmpsl
mov
jmp
mov
cmc
sbbl
xchg
call
xor
and
sbb
and
lahf
imul
fcompl
and
sbb
arpl
xchg
adc
ja
mov
add
mov
scas
out
enter
and
xchg
lahf
daa
addb
push
movsb
cltd
hlt
mov
das
imul
and
sbb
in
dec
mov
scas
popa
hlt
push
test
mulb
loopne
fists
fbld
mov
mov
imul
inc
push
mov
push
pop
popf
cltd
jno
add
adc
adc
lea
sub
sar
pop
clc
mov
jle
sahf
adc
push
add
movhps
xor
cmp
clc
loopne
fcomp
ficompl
fs
jbe
inc
movsb
insl
pop
xor
cmp
popf
das
xchg
enter
jb
mov
sub
sub
jecxz
test
xchg
ss
inc
test
int3
jl
jmp
inc
mov
mov
addl
fldl
adcl
sahf
cmpl
cltd
inc
test
xchg
arpl
rorb
mov
in
jmp
pop
pop
enter
add
mov
or
fsubs
cs
lcall
dec
xchg
push
imul
add
add
push
rorb
adc
push
xor
popa
shrl
jo
inc
xchg
xchg
incb
mov
ficoms
add
sqrtps
xchg
xchg
jbe
lahf
outsb
mov
or
les
mov
push
xchg
mov
mov
cmpsb
pop
or
insb
push
push
xchg
rclb
shll
or
and
mov
dec
outsb
xor
imul
out
test
xchg
lret
fsts
dec
lods
leave
icebp
out
fists
fwait
xor
jmp
pop
ja
jb
loop
cmp
icebp
movsb
stos
loopne
mov
dec
and
dec
dec
mov
fildll
and
addr16
pushf
daa
jne
add
inc
and
in
lods
and
sbb
pushf
sbb
adc
mov
mov
sahf
int3
scas
mov
jno
push
pop
mov
arpl
xchg
daa
shlb
loopne
mov
es
push
stc
out
test
je
jno
cmp
popa
fdiv
mov
cmp
inc
or
dec
or
je
je
and
mov
or
shll
cmpsb
ret
not
push
fwait
sbb
sbb
imul
cmp
jg
cltd
decl
outsl
push
decb
insl
lock
xchg
cld
movsl
inc
ja
mov
cmp
aas
push
push
ret
test
in
imul
aaa
stc
xchg
jg
lods
cmp
and
mov
pop
push
scas
outsl
lea
jmp
ja
cwtl
insl
mov
dec
lcall
jae
rol
mov
cmp
jb
add
add
or
es
pop
sti
add
mov
sti
rcl
xor
pop
jg
cmp
and
lret
clc
test
push
mov
xor
pop
mov
movsb
shlb
dec
pop
call
push
test
sub
jl
int
cmp
je
leave
cmp
xor
std
ljmp
push
push
fmul
lods
xchg
push
inc
mov
in
mov
rcll
inc
lea
or
rolb
dec
les
in
adc
call
lcall
std
sarl
fwait
adc
pop
dec
jns
inc
push
cmp
mov
mov
adc
mov
lret
add
pusha
sub
test
jbe
jne
inc
ret
xor
lods
sbb
scas
push
fsubrl
ret
js
xchg
dec
cmp
cmp
inc
subl
jbe
inc
push
daa
lods
stos
pop
mov
sub
xlat
sub
icebp
mov
push
mov
cmp
filds
scas
mov
xor
mov
cmp
push
jecxz
fs
daa
adc
dec
push
dec
js
sbbb
add
pop
cld
ficompl
push
sub
lods
xchg
jge
repz
or
stos
pop
stc
cmp
inc
dec
jns
lahf
int
test
mov
dec
outsb
int3
fsubs
data16
cmp
movsl
cmc
lods
xchg
icebp
xchg
jle
xchg
fs
xor
jae
pushf
mov
stc
mov
nop
push
cmpsl
xor
push
xor
aad
fwait
push
cmp
pushf
fs
mov
out
jge
cmp
test
enter
bound
dec
and
sub
xlat
xchg
int
xchg
push
int
xchg
jbe
mov
loop
test
lahf
lods
push
xchg
bound
mov
mov
xchg
push
mov
adc
aad
adc
mov
push
sub
lock
test
xor
xchg
or
add
push
adc
arpl
xchg
jne
lcall
pop
test
pop
repnz
mov
inc
mov
and
roll
cwtl
xor
mov
xchg
scas
xchg
aaa
push
js
inc
sbb
lock
fisttps
fs
test
dec
cld
xchg
test
ret
out
fnstsw
out
jne
mov
aaa
xchg
int3
dec
fsubl
mov
dec
sbb
xchg
sbb
pop
daa
pop
mov
fnsave
aas
test
sub
pusha
cmpsl
aad
cmpsb
push
test
scas
lea
jae
movsb
repz
sub
pop
test
lea
adc
dec
mov
cmpsb
inc
dec
int3
or
or
and
xchg
sub
mov
leave
and
arpl
xor
icebp
xchg
aad
jo
ret
into
push
ss
or
rorl
sbb
sbb
or
stos
shlb
pop
xor
push
sbb
out
leave
xor
mov
xlat
cmp
jle
fildll
enter
fbld
and
lods
dec
jbe
mov
inc
pop
in
xor
or
sti
out
dec
jbe
mov
or
out
loop
cli
dec
lock
push
es
ljmp
mov
mov
push
sub
inc
push
mov
fldt
je
sub
es
movsb
rol
shr
push
dec
lahf
int3
add
vpmaddubsw
sbb
ds
add
jecxz
insb
sbb
adc
xor
cld
enter
imul
sub
and
pop
lods
cwtl
or
fxch
pop
sub
cmp
in
sar
js
fidivl
mov
mov
add
pushf
enter
or
testl
loopne
xor
dec
push
divb
push
mov
not
or
mov
cmpsl
adc
pop
and
clc
push
jb
pop
fstps
movsl
sub
ret
cld
sbbb
imul
xor
dec
lahf
test
insb
out
inc
inc
fst
xchg
outsl
inc
loopne
and
mov
imul
out
mov
jb
stos
sbb
loope
call
pop
inc
lret
xchg
pusha
mov
jle
std
insl
adc
pusha
pop
add
test
arpl
sub
pop
sahf
test
sub
das
and
lahf
ret
mov
mov
mov
lods
xchg
repnz
or
mov
scas
xchg
dec
fstp
adc
lds
arpl
mov
repz
lret
popa
or
int
add
sbb
or
and
push
and
and
xor
pusha
xor
clc
fucomip
xchg
mov
fmul
xor
push
xchg
test
mov
retw
xchg
mov
pop
pusha
mov
fwait
outsb
jl
in
cmp
je
in
and
xlat
lahf
jg
push
or
push
sub
xor
movsl
fmull
mov
mov
fst
add
cmp
and
lods
out
adc
pop
sbb
pushf
jne
imul
adc
jle
xchg
jae
mov
scas
fstpt
dec
mov
add
xchg
je
push
std
testb
stos
mov
cmpsb
insl
enter
inc
sub
fcmove
orl
mov
imul
mov
mov
xchg
cltd
sub
pop
or
dec
pushf
dec
pop
cmpl
lock
and
leave
sarb
inc
jo
sub
pusha
loop
sub
lea
sbb
cmp
or
into
test
xor
mov
mov
sahf
fldt
lret
cli
movsb
sbb
push
lret
std
or
insb
dec
lret
pop
push
cmc
add
cmc
dec
add
arpl
or
pop
fnsave
int3
or
lcall
xor
push
loope
xor
sub
mov
or
xchg
jae
in
call
std
adc
push
push
mov
mov
movsl
xor
pop
out
ja
mov
inc
dec
imul
repz
mov
test
js
adc
aad
adc
popf
rclb
push
into
gs
cmpsl
and
lods
mov
mov
fsubrl
mov
aam
std
xchg
add
or
and
in
cmp
out
mov
and
pop
jns
and
adcb
add
push
add
addr16
loop
mov
mov
sbb
ljmp
mov
test
push
or
push
imul
pop
cli
lods
imul
xlat
imul
rclb
ja
dec
cmpb
sbb
mull
insb
mov
stos
push
int3
adc
adcl
or
sbb
pop
inc
inc
bound
cmp
test
mov
jne
mov
loop
mov
rorl
ret
add
shrb
xchg
mov
mov
hlt
movsb
nop
xchg
scas
popa
jp
cmp
cmp
call
mov
mov
and
pop
jp
outsl
cld
int
shlb
jmp
aad
or
cmpsl
xchg
xchg
jp
ja
out
sub
outsl
xor
dec
psubd
ret
imul
mov
mov
cwtl
out
movsb
repnz
cmpl
jl
or
negb
and
test
fwait
add
xlat
loope
xor
imul
stos
cld
fmull
shrb
int
inc
mov
fistl
popa
sub
jnp
loope
push
cmp
push
iret
repnz
inc
pop
adc
xchg
jmp
lret
push
test
inc
mov
push
call
pop
loopne
sbb
sahf
jmp
sbb
popa
ret
hlt
mov
loopne
pop
lahf
inc
push
test
cmp
fisubs
push
lds
les
mov
movsb
icebp
shrb
daa
dec
jmp
insl
dec
movsl
dec
xchg
xchg
sbb
test
and
std
shlb
mov
sti
repnz
fildl
call
cli
jns
js
inc
in
cli
sub
lock
aas
inc
rcrl
pop
outsb
outsl
jae
test
fwait
pop
test
clc
int
hlt
add
shll
adc
cmp
sbb
aam
sub
hlt
ss
sbb
add
aad
stos
dec
add
movsl
mov
mov
dec
sahf
sub
dec
jmp
mov
mov
jp
lods
mov
ss
icebp
dec
lods
jmp
repz
iret
pop
or
push
jg
sarb
out
cmp
add
mov
pop
dec
sbb
mov
icebp
xchg
cmp
scas
gs
sub
ds
pop
fdivl
lods
mov
pop
pop
sbb
scas
insl
fsubrs
jbe
cmp
lret
enter
loope
std
cmovp
sbb
inc
rorb
xchg
fdivs
adc
push
iret
adc
inc
clc
add
xor
push
mov
jge
sbbl
outsl
pop
inc
sbb
pop
in
loope
call
or
fnsave
lock
or
xchg
sub
enter
movsl
mov
push
cmp
sbb
movsb
das
push
mov
mov
xchg
lcall
stos
lea
out
add
lods
sub
mov
dec
lds
in
lods
decb
adc
push
repnz
pop
push
xor
xor
shl
decb
int
jl
sub
or
das
push
inc
stc
sbb
and
sarl
dec
sti
sbb
sub
dec
test
mov
mov
mov
aam
scas
mov
inc
je
scas
and
les
fistpll
inc
or
in
and
mov
ss
xor
ficoms
sub
mov
cmpsb
xchg
repnz
jne
cld
inc
rclb
cmp
sbb
push
and
adc
pop
or
hlt
xor
mov
pop
cmp
xor
pop
add
bound
out
mov
mov
jae
adc
and
sub
jbe
lahf
in
pushl
scas
jp
push
push
leave
loop
test
push
pop
adc
lcall
enter
sbb
adc
adc
push
pop
mov
jp
mov
dec
inc
push
enter
outsl
lcall
test
shll
push
stc
fcmovnb
insl
in
mov
stc
out
stos
mov
adc
xchg
add
scas
mov
adc
cmp
fimull
push
jecxz
loop
add
out
fldcw
lahf
xchg
mov
mov
repnz
cmp
je
jle
shll
or
outsb
movsb
xchg
sbb
test
js
xor
sbb
jbe
inc
sarb
and
lods
push
mov
add
les
xor
movsl
pop
faddl
mov
jns
cmpsl
cli
mov
cmp
dec
imulb
adc
or
mov
inc
push
push
add
in
cmpb
icebp
daa
dec
mov
push
mov
loop
inc
jo
push
mov
xlat
and
cwtl
xor
jae
mov
xor
xchg
addl
mov
sti
into
inc
jmp
sahf
insl
lock
decb
pushf
lcall
adc
das
jo
inc
mov
aad
stos
lds
scas
push
xor
or
cltd
add
popa
aas
and
mov
movntq
jecxz
xchg
jle
sbb
scas
inc
fmuls
cmp
push
int
scas
adc
data16
into
pushf
cwtl
insl
mov
aas
mov
inc
fstl
test
incb
mov
int
mov
pop
lds
movsb
lock
pop
mov
sbb
add
inc
outsl
dec
pop
mov
std
popa
add
sahf
cli
cmpl
mov
cmc
jmp
sbb
mov
push
aad
std
test
shrb
lock
or
push
ss
addr16
pop
or
xor
ret
dec
and
adc
lret
or
jg
add
fildl
sbb
pop
leave
mov
je
xchg
mov
int
clc
out
xchg
lea
lret
shl
mov
jge
cld
jge
in
pop
divl
push
jg
push
add
sub
mov
data16
push
mov
sub
lds
aas
sbb
out
add
mov
fnstcw
push
sub
push
movsb
push
xchg
into
ds
mov
es
xor
mov
and
xchg
js
scas
lods
xor
inc
push
stc
shlb
sub
or
call
das
sub
mov
jne
sub
xor
xor
cmc
mov
mov
fs
sub
cmp
jb
lock
add
sub
aam
jg
jns
pop
daa
ja
lahf
and
mov
int
test
test
mov
push
jb
sub
pop
daa
aaa
pop
xbegin
cmpsb
adc
sbb
cld
and
arpl
imul
leave
or
sbb
sbb
fs
push
pop
sahf
daa
cwtl
lods
out
jl
jle
lcall
jno
mov
mov
add
fsubrl
rclb
add
je
lret
fdivrs
add
xor
mov
shl
mov
movsb
cli
adc
push
repz
mov
dec
mov
enter
add
inc
daa
adc
jle
cmp
int
xchg
and
out
or
xor
pop
add
pusha
pop
pop
xor
xorb
xor
push
repnz
scas
lret
jg
xchg
mov
scas
jno
wrmsr
shll
and
data16
js
imul
das
pop
add
add
dec
mov
sub
push
imul
jecxz
lock
dec
in
arpl
mov
movsb
pop
mov
xor
jbe
inc
or
cli
cmp
lcall
scas
add
aam
mov
in
jg
out
fs
jne
push
add
data16
lret
sbb
es
ficomps
shlb
shlb
lahf
int3
push
sbb
mov
push
xor
cli
push
pop
gs
cmp
xor
aam
sub
mov
xor
add
and
je
xorl
or
or
mov
jnp
dec
in
push
push
mov
imul
aas
push
lret
sbb
aas
jmp
mov
mov
movsb
fmull
push
jae
outsl
xchg
mov
imul
add
icebp
add
jnp
pop
fsubrs
pop
dec
lret
lahf
std
shl
jle
sub
jns
decl
cmp
cli
std
lahf
rclb
sbb
ret
das
into
addr16
dec
xchg
stc
mov
scas
and
int
sub
std
inc
test
test
mov
ret
sahf
mov
pop
xchg
ret
arpl
cmp
sahf
xor
ds
fidivl
ret
in
lcall
inc
cmpsb
add
repnz
insl
mov
fmulp
push
inc
xor
fsts
gs
ss
sbb
enter
or
adc
test
sbbb
inc
xor
mov
aad
or
out
cmp
adc
xorb
add
mov
mov
or
testb
or
hlt
sbb
sub
and
daa
mov
fndisi(8087
dec
data16
xchg
push
or
dec
cmp
mov
daa
xchg
and
adc
push
and
mov
sbb
addr16
push
mov
mov
ljmp
loope
mov
push
sub
cmp
shll
push
dec
and
frstor
mov
and
and
mov
push
mov
int3
imul
xlat
jmp
mov
pop
cmp
pop
mov
xchg
jmp
leave
mov
adc
xchg
in
jo
sbb
mov
flds
pop
cmp
push
in
and
mov
cmp
mov
adc
mov
jl
repz
mov
in
int
lret
add
sbb
insl
repnz
dec
push
mov
adc
test
mov
lods
xchg
enter
pop
mov
enter
xor
icebp
fs
enter
je
int
fsubrs
notb
dec
fsubs
rclb
jnp
int
sub
dec
jmp
jge
adc
or
cwtl
fiaddl
pop
mov
fists
mov
mov
sbb
jg
in
sbb
es
imul
adc
mov
enter
adc
std
in
stc
cld
xor
loop
mov
cmp
or
ljmp
mov
xor
pop
rcrl
lea
pop
pushf
out
shrl
into
imul
mov
lods
mov
lock
repnz
jl
fst
pop
stos
and
mov
sbb
sub
das
mov
push
xchg
xchg
out
cli
sahf
xor
mov
fildl
jg
or
xchg
jnp
and
imul
call
lock
sahf
inc
rclb
pop
leave
and
lds
or
push
xchg
xor
dec
xorb
push
pop
lds
inc
jnp
jge
shrb
jg
lea
inc
mul
movsl
mov
leave
pop
adc
add
in
sbb
cmp
push
inc
xchg
mov
rcl
lea
ds
sbb
push
xchg
es
es
mov
or
jg
push
dec
popa
and
push
jns
mov
js
out
cmc
nop
and
js
adc
stos
aaa
fistps
test
dec
mov
adc
cli
lahf
pushf
or
or
jne
loop
adc
aaa
fs
pop
mov
int
push
fwait
mov
ret
push
jg
inc
xchg
push
into
imul
outsb
push
icebp
push
push
cmp
ss
add
mov
leave
ljmp
out
rorl
pop
mov
dec
pop
add
inc
in
jbe
mov
adc
push
mov
cwtl
xor
pop
mov
cs
xor
jae
xchg
or
adc
mov
lods
mov
aad
xor
jne
stc
and
out
xor
pop
push
jl
inc
dec
or
dec
sbb
mov
jmp
pop
leave
lahf
push
mov
pushf
cli
and
gs
inc
jbe
mov
loope
sub
mov
ja
xchg
mov
dec
push
imull
mov
sub
adc
sbb
int
outsl
xor
je
nop
and
sub
jns
out
mov
jne
pushf
dec
push
lret
cmp
gs
push
jp
or
les
sub
aam
in
dec
popa
lods
scas
addr16
out
and
mov
pop
and
popa
lock
sub
xchg
sub
jbe
sub
or
jle
int3
push
ret
popa
cmc
cwtl
pop
stos
out
cld
stos
addb
pop
addr16
add
add
negb
popf
shlb
test
lret
cmc
inc
sub
push
aas
mov
jmp
mov
jl
add
ss
mov
cmp
iret
cmc
mov
std
and
daa
xor
lret
dec
mov
adc
xlat
lock
int
pop
push
sub
cli
movsl
mov
xchg
adc
cli
add
mov
pop
cmp
mov
das
mov
in
das
or
or
sbb
pop
cwtl
gs
mov
ret
cmp
fidivrl
adc
dec
repnz
sub
into
mov
jo
repz
push
pop
repnz
out
sarb
scas
int
push
sub
mov
jp
inc
lods
test
in
sbb
shlb
mov
add
pop
pop
dec
mov
ja
mov
jle
xor
xchg
lea
mov
mov
fwait
cs
add
pop
mov
jg
pop
mov
sub
cmp
xchg
mov
pop
shrl
cmc
cmp
js
dec
sar
and
add
orb
popf
inc
dec
inc
jle
cld
mov
mov
jne
sarl
ss
pop
sbb
or
lods
daa
adc
cmp
in
cmc
andps
test
sub
jecxz
insl
mov
sub
je
inc
push
or
outsl
cmp
rcrl
pop
rcll
cmp
sub
push
mov
dec
hlt
je
inc
pop
lret
sti
inc
cmp
xchg
mov
or
sarb
rcl
outsl
mov
pop
or
cltd
jl
mov
sbb
mov
cs
pop
xchg
mov
cmp
daa
jecxz
sti
movsl
push
hlt
fidivrl
pusha
jbe
xchg
test
in
cmp
mov
int
xchg
cmp
jle
les
movsl
hlt
sub
in
jmp
jb
stos
shll
adc
ret
lahf
popf
nop
daa
push
xor
xchg
fildl
jno
cmc
jp
add
std
aam
call
jg
sbb
and
out
loopne
xchg
rorb
pop
mov
add
jg
loop,pt
sbb
push
call
es
xor
ud2
ds
fildll
push
in
js
adc
mov
stos
sbb
add
mov
adc
mov
mov
jnp
and
cmp
xchg
sub
incl
sub
and
jmp
push
ja
fsubrl
pop
xlat
jnp
in
call
push
stc
xlat
and
ret
dec
cmpsl
mov
pusha
cwtl
add
jno
sub
cs
push
jp
lret
mov
in
push
xor
inc
scas
xchg
bnd
pop
in
push
mov
outsb
jbe
jg
jecxz
sub
jno
lock
icebp
mov
stos
inc
std
sub
xchg
mov
call
idivl
daa
inc
or
push
cmp
testl
inc
mov
jg
dec
jle
jmp
ficoms
xlat
sub
aam
scas
std
pop
or
lods
inc
pop
into
into
aas
inc
pop
jge
test
shl
cld
dec
xlat
sub
adc
dec
test
push
mov
call
adc
loopne
aad
or
stc
mov
scas
or
push
pop
aad
std
dec
pop
lea
pop
pusha
pusha
add
lds
inc
cli
outsb
sbb
xchg
lcall
lcall
jno
repnz
fcomip
push
cli
addr16
xchg
ds
bound
jp
test
adc
inc
add
adc
in
jecxz
fwait
adc
inc
pop
jmp
push
adc
or
adc
clc
cld
sbb
fwait
jnp
call
pop
insb
shrl
ja
sub
sbb
test
jns
scas
mov
out
out
fldenv
in
pop
mov
test
fldt
es
adc
shrb
mov
lock
outsb
mov
aad
test
std
out
ss
jmp
iret
jg
aaa
jmp
adc
push
and
unpckhps
and
mov
pusha
movsl
adc
adc
dec
fs
mov
nop
xchg
cmp
rcr
mov
fcompl
cmovne
xchg
push
shll
fs
popf
pop
orb
push
xchg
testb
xchg
inc
jg
push
pushf
prefetch
mov
dec
out
push
rcll
mov
loopne
lds
adc
sbb
add
addb
fldcw
clc
call
xchg
add
inc
mov
cmp
sub
les
jle
repnz
inc
and
xor
jecxz
lock
enter
fnstcw
jg
iret
push
sbb
fldt
aad
pop
dec
pushf
xor
sub
or
and
aam
or
pop
mov
add
das
les
fbld
out
clc
mov
xchg
jno
or
mov
mov
ss
cmc
sub
jne
mov
mov
repnz
sub
das
mov
dec
sbb
in
add
cltd
ja
mov
pop
das
fdivs
mov
mov
sub
xchg
adc
aad
les
cmpsl
jns
mov
lock
pop
pop
movsb
xchg
fwait
lret
jnp
in
arpl
loopne
mov
pushf
shll
or
adc
lahf
inc
mov
hlt
dec
xchg
int
rcr
mov
shlb
pop
xchg
adc
pusha
jne
ja
in
out
cltd
push
cltd
dec
push
xchg
in
out
jno
push
cwtl
and
mov
andl
ja,pn
aaa
pop
test
cs
daa
jge
xor
adcl
imul
js
clc
mov
sub
fidivl
iret
sub
mov
popf
adc
adc
lds
into
addl
inc
cmpsl
or
cmp
add
cltd
std
in
aas
push
lahf
add
push
mov
jl
push
xchg
push
out
movsb
dec
enter
lock
xchg
jo
ss
cmpsb
pop
es
xchg
mov
fstp
xor
add
enter
lock
xor
mov
jne
fistl
xor
out
push
fstpt
or
loope
jb
push
adc
hlt
aas
test
add
jae
repnz
jae
jl
mov
movsl
aam
rorb
mov
iret
outsb
mov
movsb
mov
push
pushf
mov
dec
mov
shll
mov
pop
pop
mov
and
sbb
mov
mov
mov
sbb
mov
ljmp
or
insb
mov
int
std
and
shrb
cltd
insb
or
dec
fwait
mov
push
out
ss
adc
fcomps
sti
adc
mov
adc
pop
mov
bound
std
sti
stc
sarl
jo
add
sub
mov
jmp
jnp
mov
js
push
hlt
mov
nop
fimuls
jp
push
push
fcoml
cltd
mov
inc
ja
dec
mov
out
add
ret
inc
xchg
test
repz
scas
xchg
imul
mov
jne
inc
adc
pop
jne
jecxz
es
hlt
sbb
mov
add
flds
xor
lods
cld
xchg
cwtl
pcmpeqb
sub
daa
pop
and
push
adc
mov
jae
in
xchg
js
xchg
jecxz
pop
sbb
enter
pusha
stos
dec
mov
outsl
popa
orl
jmp
andb
int
xorl
mov
repz
cmc
sub
dec
and
movsl
mov
enter
cs
dec
call
js
xchg
cmpl
lret
xchg
add
ljmp
icebp
mov
mov
or
sbb
cmpsl
cwtl
xchg
sub
pop
stos
test
jb
call
push
pop
adc
inc
pusha
inc
add
cmp
cld
inc
leave
jmp
push
mov
rorl
jnp
hlt
aad
outsb
leave
inc
xchg
hlt
rcrl
and
inc
das
add
jo
jb
dec
adc
clc
xlat
fistps
std
loope
cmpsb
pop
mov
ret
xor
add
inc
or
mov
push
dec
xchg
cli
scas
mov
loop
and
in
leave
outsb
cmp
sbb
aaa
imul
mov
sub
mov
push
loope
lret
push
call
lcall
inc
sbb
push
pop
rorb
add
cmpsb
xrelease
test
popf
sub
lds
mov
mov
lret
cmp
sub
xchg
push
or
lcall
out
fldl
clc
jg
call
loop
inc
and
pop
mov
out
mov
out
dec
sub
ds
adc
jbe
xchg
test
test
loopne
das
xchg
sahf
adc
pusha
std
ja
or
and
lea
lods
loopne
loope
lods
and
jmp
dec
mov
xchg
icebp
push
sub
mov
add
and
sub
test
jo
dec
fwait
test
imul
testl
pop
adc
adc
or
arpl
push
std
cld
sub
les
sub
fwait
dec
cmp
aas
jmp
cs
movsl
inc
les
sahf
cmp
insb
inc
push
test
lods
sbb
repz
fstl
push
int
ljmp
insb
in
xor
pop
mov
lock
xchg
dec
mov
lret
adc
cmc
ret
loope
shl
xor
xchg
mov
pop
sarl
sbb
fisttpl
scas
pop
adc
loopne
adc
cmpsl
xor
pop
jns,pt
pop
jno
and
or
cmp
nop
orb
jg
lods
add
adc
inc
cwtl
arpl
push
jae
xor
jmp
or
aam
shrb
and
mov
jne
or
std
popa
out
xchg
call
push
mov
in
leave
dec
mov
cmpsb
out
add
pop
insl
fwait
decb
rcr
cmp
sbb
xor
push
push
iret
sub
xchg
loope
mov
xor
lea
xor
xchg
and
pop
sub
sbb
fimuls
sbb
pop
sbb
sbb
adc
insb
push
scas
fadds
jp
inc
movsb
fisubs
scas
and
add
cs
fsubrs
dec
inc
test
jp
mov
fstl
leave
sub
sub
arpl
xchg
out
mov
hlt
out
jp
sbb
mov
jp
sbb
pop
lret
jo
enter
push
add
mov
dec
fmul
icebp
cmc
add
pop
fiadds
shrb
jno
lret
xchg
xchg
ja
push
test
or
pop
inc
inc
arpl
add
xlat
rcl
fs
cmp
xchg
mov
out
mov
pop
sub
ljmp
mov
push
aas
cmpsl
shll
ljmp
pop
bound
push
dec
jge
mov
add
or
pop
std
inc
std
pop
mov
mov
pop
push
jo
dec
cmpsb
js
roll
rorb
jns
adc
roll
fnstenv
mov
mov
dec
sub
pop
iret
jne
fcmovnu
cld
decb
dec
mov
pop
insl
mov
ret
fldl
test
mov
jle
jecxz
cmp
iret
mov
int
stc
arpl
add
push
xchg
popa
cmpsl
ds
in
rcl
imul
addr16
cs
add
mov
cmp
sub
mov
in
jge
mov
sbb
ret
xor
aad
xchg
jmp
repnz
out
aad
outsb
jmp
lock
ja
jp
leave
shrl
sub
sub
sbb
shl
dec
adc
lcall
test
add
stos
and
nop
xor
ss
pop
push
adc
dec
call
incl
or
stos
xor
mov
nop
pop
cltd
int3
jecxz
cmpsb
pop
sti
fstp
fwait
scas
xchg
sub
jp
into
clc
cs
add
sbb
dec
and
out
loopne
push
inc
mov
cmp
ja
mov
and
add
xchg
ret
xlat
je
mov
aaa
ficomps
les
in
jae
pop
dec
cmpl
int3
ret
mov
xchg
aaa
repnz
push
hlt
aas
inc
out
rol
adc
mov
lahf
inc
xor
out
outsb
mov
sbb
ljmp
push
dec
sahf
stos
pop
add
dec
dec
repz
cwtl
jmp
in
icebp
aas
fldcw
push
add
call
cwtl
adc
scas
mov
pop
add
movsl
xchg
mov
shll
sub
inc
mov
mov
adc
add
mov
xlat
cmpsb
int3
test
ja
pop
stos
lcall
ja
xchg
dec
ljmp
sbb
xchg
in
in
mov
push
jnp
lret
mov
sbb
fdivrl
mov
lods
imul
fisubrl
stos
and
stos
xchg
jbe
dec
leave
loopne
scas
cwtl
imul
inc
movd
aad
xchg
ja
push
adc
push
and
push
mov
mov
xchg
xor
mov
mov
sub
jbe
neg
adc
out
add
enter
mov
std
insb
sbb
pop
subb
jne
pop
sbb
test
pop
xlat
xchg
stos
in
divl
xchg
fnstsw
hlt
roll
mov
testb
jbe
push
inc
shrb
and
fwait
cmc
xchg
js
jmp
lock
push
xchg
pop
mov
scas
xchg
cwtl
scas
test
pusha
in
fidivrs
sbb
enter
add
add
lret
xor
out
ljmp
pop
push
jb
lods
inc
hlt
aam
cli
sub
push
sbb
sub
adc
repnz
in
repnz
loope
lahf
test
rcrl
pop
pop
repz
xlat
mov
inc
or
addr16
push
fimuls
movntq
loopne
push
pop
push
inc
incb
xchg
sbb
sbb
xchg
mov
mull
xchg
push
inc
mov
addr16
push
inc
fwait
add
lods
stos
or
dec
icebp
cmpsb
inc
test
lahf
push
stos
in
fcom
aam
push
in
leave
nop
xor
jbe
cmpsb
add
add
out
cs
inc
imul
iret
mov
pop
stos
enter
fildll
test
sbb
xchg
or
jp
das
movsl
xlat
pop
sbb
inc
mov
inc
push
xor
xchg
inc
mov
fisubrs
add
jb
jp
cs
pcmpgtd
fld
inc
into
inc
adc
inc
inc
and
test
mov
test
jb
mov
and
inc
adc
or
pop
outsl
sub
subl
adc
sbb
stc
repz
mov
iret
rcl
fdivs
jle
jp
sbb
sub
pop
lcall
xorb
push
sub
pop
inc
xor
movsb
nop
xor
lods
jge
jno
or
mov
enter
andl
jl
and
outsl
popa
push
jns
pop
add
and
or
jecxz
lods
and
adc
pop
ss
jmp
fs
mov
cli
xchg
je
lds
jecxz
iret
push
fnstsw
mov
addr16
mov
iret
shrb
add
xor
xor
orb
lcall
out
mov
push
and
bound
movsb
jns
aas
lods
sub
push
xlat
flds
mov
pusha
insl
push
push
and
out
pop
mov
rcl
iret
push
arpl
int3
inc
fistps
fldl
ja
jp
idivb
das
cmpsb
test
adc
jb
jnp
out
push
adc
jns
enter
ljmp
rclb
cli
ret
xor
inc
cwtl
pop
xchg
jb
int3
imul
add
pop
aas
xchg
stc
add
push
jae
and
pop
xchg
iret
xor
mov
aam
sbb
ss
test
xchg
jl
mov
insb
add
stc
nop
adcb
xor
adc
cmp
cmp
dec
pop
in
jle
xor
pop
lahf
aad
aam
jne
xor
insb
lret
sbb
cmp
sbb
xor
dec
out
insb
outsb
and
cwtl
or
test
and
pop
mov
pop
fs
int
jns
mov
in
lret
in
mov
popf
and
popa
outsb
frstor
sbb
int
imul
testb
and
ss
arpl
movsl
inc
stos
pop
push
pop
add
fildll
mov
loop
mov
pop
mov
lea
pop
inc
jnp
ja
jbe
push
aad
subb
popf
ljmp
aad
jl
xchg
icebp
icebp
test
data16
in
ss
or
loopne
jb
fsubrs
inc
or
and
or
push
xchg
xchg
and
jo
jge
push
jae
les
pop
cs
sbb
mov
cmp
push
jl
inc
outsb
dec
std
outsb
adc
pop
add
pop
bound
mov
imul
sti
add
xor
dec
xchg
jmp
addr16
mov
xchg
xchg
daa
pop
jp
xchg
outsl
mov
push
sti
xor
lret
mov
xchg
sub
cmpsl
sbb
mov
jg
insl
cld
pop
loop
pop
add
or
jle
xchg
jg
in
imul
jp
mov
pop
rcrl
xchg
jb
mov
xlat
adc
jg
xor
push
and
mov
add
sbb
lret
or
loop
sub
shrl
xor
popf
sbbb
shl
mov
push
adc
mov
js
xchg
pop
loope
mov
loopne
dec
cmpsl
cmp
addr16
dec
jbe
sub
adcl
out
cmpsb
testl
adc
add
adc
mov
fs
es
rcrb
jmp
add
gs
xchg
push
int
not
ljmp
adc
dec
adc
sbb
dec
mull
push
in
rcrl
or
cmpsb
xorl
mov
pop
ljmp
out
sbb
pop
test
insb
and
mov
or
test
mov
inc
push
xchg
pop
pusha
add
mov
mov
jp
lock
idivl
aam
sbb
adc
pushf
test
and
cld
rcr
sub
jge
mov
hlt
das
les
dec
push
insl
repnz
mov
sbb
jae
and
dec
and
lods
mov
add
ret
mov
xchg
pop
call
mov
mov
popf
outsb
jmp
and
dec
pop
mov
in
shlb
ret
push
out
sub
xchg
out
ret
mov
bound
in
jge
lret
sub
addr16
add
pusha
inc
mov
test
push
arpl
icebp
mov
sbb
dec
mov
sbb
or
cwtl
and
aas
fcomps
fistps
add
push
shrl
and
jecxz
addr16
add
cmp
movsb
std
js
repz
cmpsl
add
mov
jo
test
pop
pushf
push
pop
stc
data16
out
sbb
test
movsb
lods
jp
ljmp
pop
add
xor
xor
ja
sub
fs
dec
movsb
test
cmp
or
das
aaa
cmpsl
es
scas
jns
jecxz
push
jecxz
jecxz
cmc
push
mov
xchg
jge
push
mov
mov
add
inc
shr
mov
jmp
xchg
mul
pop
xor
cmpsb
adc
in
pop
xlat
cs
lahf
cmpsl
movsb
cmp
and
incb
mov
jl
pop
xchg
stos
cmp
in
jae
adc
sbb
aaa
cmp
and
mov
mov
aas
cmp
mov
test
fwait
stos
sub
jle
fwait
hlt
loope
dec
repz
dec
in
pop
arpl
xchg
mov
pop
cmp
dec
jecxz
jbe
adc
push
gs
adc
repnz
lahf
mov
jae
push
cmpsl
in
cmp
push
ds
frstor
add
sbb
lret
mov
sbb
and
ds
mov
push
mov
mov
adcb
and
mov
lahf
push
push
cmp
adc
add
icebp
in
cmp
xchg
mul
adc
sub
xchg
add
sbb
fmull
jle
sbb
add
jnp
inc
jle
jno
jmp
xchg
je
fsts
jbe
push
jne
jp
repz
lret
jmp
mov
jmp
fwait
mov
mov
xchg
and
xchg
cwtl
jno
das
jp
mov
mov
icebp
add
mov
and
mov
xchg
cmp
in
ror
and
mov
or
loope
adc
push
inc
ret
cmp
jle
dec
lcall
jmp
jle
sub
cwtl
sub
subb
outsb
adc
dec
fsts
sub
arpl
add
int
add
je
lds
lea
xor
pop
mov
push
xor
inc
add
movsl
pop
in
and
sbb
ljmp
fnstsw
xchg
cmpsl
or
stc
movsl
test
dec
outsl
out
or
jne
aad
sbb
adc
or
xchg
imul
dec
fwait
push
js
cltd
sbb
mov
lahf
jecxz
mov
add
mov
jbe
test
cmpsl
loope
fbld
out
pop
lods
mov
sub
dec
or
mov
add
mov
test
aas
es
and
into
repnz
into
sti
adc
jp
addb
mov
add
icebp
jle
mov
dec
xor
ja
mov
or
mov
mov
testb
adc
iret
cmc
or
dec
jmp
outsl
ss
lret
xlat
and
or
shld
sub
xchg
js
adc
sub
mov
xchg
dec
out
mov
sub
sbb
sbb
xlat
shl
divl
or
pop
xor
jmp
sti
mov
push
loope
outsb
cmpsb
pop
push
push
xchg
or
lods
jge
movsb
cmp
leave
mov
and
insl
or
in
ret
jge
lahf
fisttpl
xorl
out
mov
jmp
stos
xchg
in
add
push
jmp
xlat
in
mov
inc
rorb
cmp
sub
sub
movsl
adc
out
std
pop
in
pop
cli
outsl
shrl
cmpsl
adc
mov
or
ds
rolb
bound
pop
pop
int
int3
mov
xor
ljmp
dec
sbb
shr
insb
fistpl
jbe
test
jns
rolb
sbb
shlb
lret
shll
dec
dec
les
inc
pop
xchg
add
xor
lods
adc
out
jb
mov
js
fistpll
leave
ss
fs
xchg
push
das
stos
push
scas
push
leave
jp
sub
gs
mov
xchg
in
test
sarl
ljmp
jnp
sub
pop
dec
mov
mov
jo
daa
mov
or
sarb
mov
add
into
scas
inc
imul
mov
add
lea
push
adc
imul
popa
sahf
jmp
rol
pop
stos
sub
jmp
mov
and
ret
adc
adc
loop
in
mov
jecxz
xor
enter
pop
bound
imul
push
ja
adc
ret
xor
lcall
sub
mov
mov
imul
gs
xor
mov
cmpb
add
mov
pop
jo
sub
mov
idiv
fstps
xor
mov
mov
xchg
es
repz
push
mov
mov
popa
cmpsb
leave
or
and
inc
dec
xor
mov
mov
push
jbe
push
ljmp
xchg
jg
inc
and
out
insb
bound
xchg
jl
ja
dec
xor
cld
and
enter
ss
pop
jg
adc
sbb
jg
pop
or
dec
imul
test
icebp
jae
nop
pop
jg
inc
push
loop
jmp
int3
jae
pop
jae
dec
push
lcall
pop
or
xlat
jecxz
mov
and
mov
cli
pop
sub
mov
mov
popf
incb
sbb
popf
rcrb
ljmp
sub
cltd
jp
in
outsb
jp
sti
ret
mov
mov
bound
lods
fiaddl
jp
xchg
pop
xchg
lods
andb
xlat
adc
sub
imul
adcl
sbb
rorb
out
push
and
push
cmp
push
aas
push
jle
sbb
cmc
fcoml
push
sub
mov
fstpt
repz
and
leave
hlt
repnz
xorb
lods
dec
arpl
ud2
cwtl
jecxz
and
push
test
mov
mov
add
rol
mov
mov
xor
in
xchg
lods
aas
mov
cmp
sub
pop
mov
mov
sti
shll
adc
jnp
mov
xchg
add
leave
mov
pop
bound
add
stos
add
push
stos
lock
sbb
jns
test
pop
or
js
inc
cmp
stc
dec
pushf
lock
mov
mov
std
add
int
ja
or
mov
mov
rcl
jge
jb
push
pushf
xor
cmp
push
call
sbb
mov
cld
lock
sub
testl
mov
jb
shlb
mov
or
pop
scas
cltd
inc
dec
cmp
push
mov
int
icebp
test
cmp
loop
std
mov
sbb
adc
pop
cwtl
adcl
sub
test
dec
mov
adc
rorl
flds
ret
scas
lahf
loope
pop
xchg
stc
mov
fucomip
push
pop
ljmp
push
jg
inc
rorb
push
andl
test
push
movsl
sub
or
xchg
insb
jae
cmp
ficoms
xchg
and
sub
rclb
aad
cltd
scas
inc
jle
das
inc
leave
pop
mov
into
adc
ljmp
xor
add
dec
test
xchg
and
xchg
xor
adc
mov
movsl
adc
lcall
lret
mov
inc
pop
jg
jecxz
xchg
mov
and
fnclex
cmpb
jge
pop
jnp
mov
sbb
ficompl
into
cmp
mov
mov
aaa
nop
fstps
fsubrp
into
sbb
cld
in
or
mov
mov
mov
sbb
int
cltd
mov
adc
fidivrl
xor
add
or
cmp
aam
int
adc
je
fcoml
arpl
lds
stc
test
or
fs
mov
sub
dec
sti
mov
jno
mov
pusha
sub
and
in
call
xor
jns
cwtl
scas
mov
mov
shll
rorl
mov
adc
int
jge
daa
subl
shll
clc
push
dec
inc
stos
popa
inc
insl
bound
jmp
xchg
sbb
lahf
sub
imul
jns
mov
and
dec
popa
xor
das
sahf
in
lcall
pop
fdivrp
outsl
xchg
dec
jo
inc
cmp
popf
lock
pop
mov
pushf
arpl
add
std
cld
cwtl
xor
sbb
cmp
mov
orb
cmpsl
rorb
enter
or
or
arpl
sti
lds
bound
cmp
mov
rcll
sbb
sub
mov
mov
lea
or
popf
cmpsl
xchg
ficompl
dec
dec
jecxz
xor
scas
cld
xor
jno
mov
sub
adc
mov
dec
sahf
push
out
sbb
jmp
inc
lcall
fisttps
or
adc
test
push
and
test
sbb
stos
xlat
add
cli
mov
icebp
mov
push
ror
enter
mov
cmp
repz
xchg
jbe
or
adc
sbb
xchg
mov
lret
fidivrl
outsb
aad
inc
xchg
es
shlb
mov
rcrl
stos
cmp
mov
push
mov
mov
xor
fistps
mov
pop
pop
fcomi
jne
xor
mov
push
imul
iret
xor
mov
loop
mov
or
jne
ret
adc
push
cltd
dec
inc
jmp
xor
add
outsb
mov
loopne
xor
xchg
frstor
inc
sarb
inc
sbb
xor
mov
or
cmp
es
xor
ror
or
push
aas
add
mov
push
push
jbe
and
sub
pop
push
pop
cmp
fcmovnu
jo
jb
mov
movsl
loop
popf
cltd
gs
jo
jo
jns
aas
jg
xlat
mov
xor
fwait
std
js
dec
mov
add
out
cld
inc
mov
xlat
imul
mov
lcall
fs
cmp
repz
xor
xchg
stos
jae
or
rcll
add
and
lock
pop
gs
ljmp
adc
push
pop
pusha
dec
push
jb
sbb
dec
dec
xlat
scas
push
fistps
test
addl
mov
loope
aas
add
lods
popf
popf
mov
push
pop
or
icebp
xor
inc
das
cmc
addr16
sbb
mov
int3
mov
dec
mov
xlat
icebp
sbb
cwtl
dec
inc
aad
bound
sbb
add
sbb
int
xor
loope
jg
scas
sar
dec
sahf
mov
pushf
lods
xor
cld
add
cmp
or
pop
pusha
out
and
stc
std
mov
daa
movsl
clc
dec
gs
jmp
mov
leave
and
cmp
loopne
pop
xchg
mov
sbb
jge
aaa
out
jmp
mov
mov
push
or
push
jb
aam
sti
aad
loope
sub
ss
jae
cwtl
push
lods
jecxz
rolb
addr16
mov
jbe
push
test
lods
xor
iret
xchg
fdivrl
jmp
adc
xchg
adc
and
push
fwait
outsb
pushf
jl
jb
xor
movsb
sub
sbb
enter
shll
and
loope
mov
xor
jecxz
sbb
and
mov
movb
shlb
mov
xchg
mov
call
adc
in
mov
scas
push
dec
mov
jmp
inc
in
cmp
aaa
fsubr
lods
js
xor
fs
cmp
dec
sbb
push
out
pop
lods
push
inc
pop
push
sarb
cmp
mov
mov
push
lock
jp
xchg
aam
addr16
add
leave
aad
push
in
lret
push
push
lds
arpl
sti
leave
jg
shlb
jno
in
mov
lods
sub
andl
sub
call
push
into
pop
push
and
add
mulb
loope
js
inc
out
movsl
mov
into
test
xor
xor
fcompl
aaa
data16
call
nop
mov
arpl
mov
push
in
rcl
popf
shrb
mov
addb
xor
addr16
pop
jno
mov
nop
jne
stc
mov
jnp
mov
and
sub
or
cmc
push
leave
push
add
sub
int3
dec
push
pop
xor
sub
call
mov
sub
pop
add
fs
pop
lock
push
pop
pop
xlat
add
sarl
ljmp
and
pop
ljmp
push
xchg
pop
mov
push
mov
fcomi
jno
or
neg
push
sti
push
pusha
jl
ficomps
mov
jg
push
jg
mov
inc
adc
repnz
enter
bound
dec
fisttpll
fsubl
jl
aad
mov
sbb
xorb
repz
mov
xchg
push
lahf
sahf
push
mov
and
rcr
test
jmp
push
icebp
add
mov
ret
sub
mov
divl
cmpl
bound
pop
xchg
gs
movb
or
aas
aas
add
or
cli
addr16
loopne
cmp
scas
loopne
pushf
in
cmovl
sbb
mov
cmpsl
jp
testb
shrl
in
sbb
hlt
bound
mov
sub
cmpsw
mov
jmp
daa
shr
pop
clc
into
adc
adc
cmpsb
outsb
imul
lcall
pop
jmp
cmpsl
mov
mov
ds
hlt
add
push
ljmp
xchg
out
pop
add
out
inc
push
jge
mov
push
cld
test
shlb
xchg
mov
sbb
inc
test
out
mov
mov
inc
xor
outsl
jnp
pop
aam
push
ret
xchg
nop
testb
xlat
xchg
rcrb
jnp
mov
daa
popa
movsl
test
mov
icebp
and
push
test
inc
push
dec
fdivp
mov
clc
jb
in
rcrb
jg,pt
jo
push
cmpl
jae
mov
bound
insl
stos
dec
shlb
pop
push
pop
leave
lods
ja
mov
ret
mov
sub
add
mov
xchg
xchg
pop
sbb
jae
fdivl
test
xchg
mov
inc
cld
jg
cld
fsubrs
or
orl
fnstsw
pop
mov
sub
sub
popa
or
mov
sub
add
mov
xchg
mov
lods
ret
das
addr16
call
mov
popa
push
sbb
repz
test
jbe
mov
and
xchg
or
adc
xorl
fwait
and
jg
es
clc
dec
dec
inc
ja
cmc
adc
in
add
push
sbb
add
test
add
push
cltd
xor
aaa
movsb
fcomip
shll
mov
out
mov
aad
xchg
or
jno
pop
pushf
dec
in
loop
dec
int
push
imul
or
cmp
sub
lahf
mov
or
addr16
pop
mov
sti
pop
mov
sub
mov
ss
stc
or
mov
dec
adc
aaa
mov
loope
call
xor
imul
in
cld
mov
push
add
dec
scas
xlat
pop
push
xor
mov
js
sub
mov
pop
into
adc
in
mov
mov
or
lods
add
cmp
and
lock
and
mov
sbb
in
orb
mov
frstor
sub
add
mov
ds
aad
stos
mov
or
rorl
mov
or
add
adc
out
jne
jg
jmp
and
jno
dec
pop
mov
frstor
mov
cmpsl
outsb
ja
testb
mov
mov
push
imul
sbbb
lahf
out
xor
mov
cmp
cmc
sub
and
mov
sbb
mov
arpl
jmp
testl
jl
xchg
out
sbb
xor
inc
jb
mov
stos
sbb
pushf
cmovl
adc
push
mov
out
lcall
lcall
mov
sbb
mov
adc
fwait
ljmp
push
sbb
mov
pop
mov
arpl
imul
je
push
sub
jl
je
cmp
sub
jno
dec
mov
adc
in
insb
pop
jns
sub
loopne
inc
adc
pop
add
mov
lods
push
inc
sub
adc
int3
mov
fnsave
mov
lret
repz
jge
es
dec
and
xchg
call
dec
add
jl
fwait
addr16
cs
daa
jle,pt
xor
jo
xlat
and
and
inc
inc
daa
rorl
jnp
fs
es
fwait
into
inc
sbb
popf
jge
pusha
sbb
js
adc
into
outsl
dec
adc
iret
jg
aam
test
and
testl
pop
push
dec
dec
and
loopne
into
hlt
jb
stos
jge
leave
xchg
cmp
mov
pop
faddl
ret
add
sahf
and
xor
or
bnd
xchg
push
xchg
test
xchg
xchg
loopne
adc
lahf
outsb
stos
pop
mov
int
inc
ret
or
neg
add
xor
cmp
mov
xor
stos
mov
push
sbb
adc
loop
fiadds
push
das
push
pusha
std
ss
lea
or
and
and
aam
jnp
std
or
xor
xor
xor
and
insb
sub
or
daa
loop
aad
fidivl
adc
push
xor
jmp
ret
jp
xchg
dec
adc
setle
mov
mov
mov
lds
mov
jmp
out
mov
cmc
shr
bound
mov
rol
cmpsb
xor
mov
xchg
ret
dec
rolb
movsb
jp
lret
pop
cld
outsl
mov
cmpsb
add
jmp
mov
sub
pop
push
sub
insb
jp
dec
xorl
mov
stos
mov
push
cmp
lock
sbb
pop
jnp
mov
pushf
cld
cmp
fsubs
xchg
nop
movsl
aas
imul
adc
fiaddl
inc
ds
cmp
enter
rcrb
test
shlb
xor
enter
mov
inc
xchg
lock
add
roll
int
jo
inc
mov
pop
mov
push
inc
out
mov
or
shrl
mov
fs
mov
push
shr
mov
aad
addr16
push
jae
cmpl
stc
mov
pop
push
jne
jmp
lock
das
mov
adc
pop
dec
sbb
mov
mov
xor
mov
addb
xchg
fcoml
cmp
dec
ja
imul
jno
jecxz
xor
xchg
jl
mov
add
push
and
mov
jns
mov
mov
int3
test
loope
cmpsb
loopne
mov
mov
and
jns
cli
xchg
aas
call
fdivrl
jns
mov
into
loopne
mov
inc
adc
outsb
sahf
lcall
jb
frstor
mov
cmp
sti
jo
push
fsubs
dec
lret
aaa
aam
fildll
mov
add
mov
addr16
mov
push
stos
or
jbe
repz
ds
in
stc
or
sbb
into
pop
jp
adc
fdivr
repz
xor
out
mov
sub
push
and
pop
shl
jg
repz
mov
aam
lea
xor
sub
and
btc
cltd
mov
inc
shlb
in
out
ret
push
pop
add
mov
rclb
add
dec
sbb
ss
dec
movsb
push
mov
push
andl
mov
push
push
sub
adc
dec
rcl
jecxz
movsl
lods
dec
shr
test
test
mov
xlat
mov
imul
jno
popl
sub
xchg
push
rorb
ret
or
into
jle
out
lea
mov
je
lcall
stos
cld
sbb
jb
sbb
dec
iret
jae
faddp
rclb
pushf
cltd
push
js
sbb
enter
jmp
fildll
push
es
lcall
imul
ret
imul
iret
push
mov
pop
lret
pop
aad
jne
loopne
lcall
and
andl
jo
dec
lahf
sub
sbb
out
into
jae
mov
jmp
cmp
ja,pt
xchg
xchg
pop
scas
andb
out
hlt
movsb
adc
add
inc
jae
mov
xor
iret
xchg
add
dec
hlt
insl
xchg
push
dec
rolb
mov
sbb
inc
test
shll
data16
mov
mov
lret
push
iret
das
pop
dec
cld
add
enter
inc
jne
int
jo
xor
inc
outsb
inc
mov
mov
mov
mov
out
sub
dec
pop
lods
stos
mov
jo
in
push
add
inc
fbstp
or
jg,pn
dec
sub
insl
loope
aad
xor
inc
pop
sub
mov
mov
dec
cmp
fwait
xchg
ss
cmp
cmove
out
pop
cmp
jo,pn
and
cmpsl
pop
pop
lods
mov
dec
add
mull
cld
cmpsb
pop
jo
pop
les
sub
pushf
dec
ss
gs
pushf
in
std
add
xchg
push
loop
pop
xor
mov
push
adc
sbb
fnsaves
out
dec
push
nop
cmc
xchg
jp
lret
ret
out
stc
inc
xchg
push
push
ficoms
mov
dec
dec
rol
mov
jae
stc
dec
xchg
sahf
icebp
cmp
push
addr16
and
popa
xor
fmull
jl
aaa
fsts
ljmp
out
cwtl
test
xor
popf
pushf
jp
lret
jl
mov
cs
aad
sbbb
and
insl
mov
inc
add
call
push
xchg
rcrl
shll
inc
xor
push
or
outsl
imull
push
jae
or
fucomip
pop
dec
popa
dec
mov
sbb
lahf
jb
mov
pushf
ret
pushf
xchg
movsb
das
int
lcall
repz
or
cmpsb
push
rcrl
adc
andl
push
rcrl
ds
repz
std
fcomps
ja
fldt
jbe
dec
cmc
negl
mov
nop
jbe
mov
lea
in
add
adc
mov
js,pt
arpl
pop
pushf
mov
push
and
sbb
nop
cmp
sbb
in
dec
ret
mov
dec
ffree
jecxz
aad
lret
push
push
add
jb
popa
mov
adc
pop
inc
repnz
repnz
ljmp
xor
and
adc
xor
cwtl
fwait
dec
lcall
scas
inc
jo
inc
ja
jg
aaa
js
lret
loope
cwtl
clc
cld
inc
rcll
test
mov
inc
imul
xor
int3
adc
dec
pushf
out
jns
xchg
enter
mov
inc
add
movsb
dec
stos
mov
mov
jmp
mov
xchg
pop
mov
out
dec
push
sub
mov
mov
add
idivl
sbb
inc
push
lahf
fdivl
cwtl
out
test
dec
pop
mov
rolb
jp
mov
out
xor
pop
in
adc
leave
movsb
jl
sbb
aad
push
pop
mov
add
insb
inc
or
cwtl
jnp
mov
and
and
push
call
pusha
movsl
test
cwtl
insb
es
adc
xchg
lods
lock
fadds
mov
push
mov
aam
sbb
rcr
and
xor
les
movsb
xchg
test
rcrb
jnp
fstps
pop
adc
sti
cmpsb
iret
mov
mov
sti
cmp
dec
push
cmp
mov
scas
push
mov
lret
jnp
repnz
xor
fndisi(8087
jmp
jo
mov
repnz
dec
push
push
repnz
test
jge
push
fsts
add
add
out
icebp
add
inc
jmp
mov
sbb
sub
mov
mov
mov
nop
pop
pop
and
add
and
ljmp
shrb
mov
notb
or
mov
js
mov
outsb
inc
sbb
mov
pop
scas
bound
lods
incl
and
sbb
pusha
and
stc
pop
push
dec
out
outsl
dec
stc
std
rclb
xchg
mov
pop
mov
lret
das
mov
repnz
dec
pop
mov
mov
pusha
adc
test
aam
dec
cli
pop
mov
movsl
imul
push
jmp
mov
ffree
repz
fsubrl
aad
icebp
popa
mov
sbb
xor
popf
jne
int
shll
dec
cmc
mov
cmp
add
mov
lret
push
pop
pop
fistpl
loop
add
inc
lods
push
xchg
mov
sub
testb
lcall
push
fstps
sub
in
adc
cltd
movsb
xor
push
imul
repnz
cs
loope
sbb
and
and
mov
testb
xor
xchg
outsb
in
mov
jl
and
jmp
dec
outsl
and
mov
in
lret
jecxz
cmpsl
rcrb
mov
lret
cmp
cs
and
int3
push
add
scas
adc
mov
es
out
shrb
cld
push
or
or
xor
push
nop
pop
jl
mov
push
movsb
ljmp
in
jbe
enter
cmp
cmp
push
aas
dec
jb
cmpsl
shll
pop
mov
sub
test
cli
xor
mov
pop
fmuls
andl
clc
mov
stc
in
cmc
rolb
addl
into
mov
push
call
loopne
mov
fildl
stc
jl
sub
std
cmp
inc
adc
mov
add
pop
mov
icebp
cmp
or
pop
ja
mov
outsl
ficoml
dec
or
push
push
inc
mov
inc
inc
jmp
xor
aam
sub
push
mov
jg
mov
push
pop
mov
cmpsl
xlat
lock
imul
jbe
adc
and
retw
sub
scas
sub
cmpl
lods
xor
pop
push
or
sbb
in
aad
mov
mov
jb
mov
data16
out
xor
lahf
dec
rol
xchg
js
mov
cmp
dec
jmp
shrl
stos
sbb
addr16
cmc
inc
sub
sahf
xchg
mov
push
je
in
sub
aas
clc
mov
imul
lahf
imul
xor
scas
or
jmp
pushl
mov
mov
rolb
dec
pop
push
loopne
pop
pop
pop
insl
insb
sbb
call
idiv
push
jecxz
mov
jb
into
ret
leave
dec
imul
adc
insb
fwait
pop
dec
pop
xor
and
cmc
adc
mov
pusha
ret
jnp
cmp
add
fldt
push
jge
pop
dec
adc
jne
clc
call
jnp
xor
mov
lahf
fmulp
ret
xchg
shlb
mov
jne
sti
sbb
pushf
xchg
or
jle
popa
mov
repnz
add
addr16
xor
sbb
pop
fistl
addb
ss
movsl
call
les
mov
lret
jge
loopne
cmp
dec
movsb
cmp
fiadds
mov
out
hlt
pop
xchg
pop
scas
std
push
scas
scas
jns
or
cmpl
dec
sub
int
filds
xlat
out
mov
into
hlt
mov
xor
aad
dec
shlb
mov
mov
xchg
sbb
sub
sub
mov
lahf
cmp
cmp
clc
jp
push
fimull
mov
jnp
or
and
push
or
out
jae
loop
es
cmc
out
mov
lods
xor
add
icebp
mov
out
stc
sbb
sarb
mov
pop
push
xchg
popa
lret
xlat
js
xor
or
orl
mov
pop
insl
or
lret
jae
xor
xor
xor
add
mov
pop
pop
insl
add
mov
push
add
lret
jmp
ljmp
testl
mov
mov
int3
push
ret
dec
xor
xchg
ja
pushf
xchg
pop
out
aaa
adc
addl
push
leave
push
xor
incl
jnp
xchg
loopne
repz
lret
cwtl
fnstcw
push
std
add
stos
inc
popf
sub
mov
sub
cmpsb
mov
sub
dec
pop
mov
pushf
std
mov
out
adc
ret
scas
push
jecxz
or
jns
dec
push
and
xor
or
mov
or
push
add
mov
movsb
sub
push
xor
repz
shl
and
popa
push
data16
scas
dec
addl
aad
aad
mov
stc
roll
mov
outsb
js
arpl
xchg
repz
pop
mov
arpl
add
inc
out
or
scas
addr16
mov
lcall
clc
mov
add
cmp
inc
stos
mov
dec
dec
in
adc
push
jne
cld
jmp
and
sbb
and
mov
mov
daa
mov
mov
jl
xor
stos
addr16
cltd
out
xorl
imul
stc
sbb
sub
pusha
cltd
repnz
aad
insb
dec
in
or
jno
xchg
movsl
jno
lea
ss
fistl
das
xor
jecxz
or
sub
inc
cmpsl
in
ja
pop
mov
xor
jmp
jg
fnstcw
adc
pop
fsubr
cltd
sbb
rcl
xchg
das
lahf
nop
cmpsl
cwtl
mov
jbe
mov
add
lods
pop
add
cmc
mov
stc
pop
xor
mov
xchg
and
mov
add
or
lods
stos
push
pop
and
lret
lea
inc
fsubp
bswap
xor
sbb
in
mov
ret
mov
inc
mov
and
ds
inc
mov
ljmp
mov
xchg
push
xchg
sbb
xchg
push
repz
mov
jg
dec
rolb
push
call
pop
orb
jnp
repz
ret
outsl
mov
pop
push
scas
push
lret
lea
jnp
jae
mov
push
xchg
xchg
xchg
dec
push
int3
lahf
ja
and
es
push
js
xchg
add
scas
aas
hlt
hlt
xor
jae
movsl
shrl
push
mov
sub
push
dec
mov
or
cmc
xchg
not
cmp
jmp
imul
cli
or
adc
jbe
out
sub
pop
ret
dec
xchg
les
cmc
inc
movsl
adc
lods
adc
jg
nop
adc
adc
pop
or
add
out
aam
jmp
repnz
inc
lock
adc
sahf
cmpsb
mov
stos
dec
in
movsl
addr16
mov
xchg
fsubr
fstpl
cmp
and
jbe
dec
mov
jmp
cltd
mov
popa
frstor
jo
mov
pop
xchg
aad
xchg
jg
shr
jg
test
push
das
sahf
fnstcw
jg
mov
call
fisttpll
sbb
or
dec
adc
and
pop
and
xorb
sbb
adc
pop
xor
adc
fs
sub
ret
rcll
icebp
mov
subb
add
pop
loopne
and
sbb
xchg
xlat
inc
fists
inc
cmp
inc
dec
pusha
je
fildll
xor
cld
mov
xor
shrl
mov
sbb
ja
pop
xchg
rol
jmp
add
insl
leave
jbe
mov
in
inc
sub
jae
fisttpl
inc
dec
dec
mov
dec
jno
ss
leave
jb
jge
pop
or
cmpl
test
gs
sub
mov
mov
mov
mov
jge
lret
add
ret
stos
fsubrs
adc
mov
fs
in
sub
push
loopne
aas
push
jl
push
dec
jo
les
fdivl
lock
dec
out
adcl
repnz
aam
xor
cmp
adc
jns
es
iret
and
and
mov
sbb
in
and
ret
das
dec
xchg
and
in
sbb
jns
ret
outsl
sbb
ret
stos
add
mov
cmc
dec
mov
dec
mov
xchg
push
mov
sbbl
push
lahf
ret
mov
sbb
adc
mov
and
scas
stos
pop
lods
and
and
pop
roll
arpl
xlat
test
pop
outsb
mov
mov
adcb
push
addl
sub
das
adc
sbb
js
pop
lock
cmc
int3
push
cli
mov
fbld
fmul
testl
ret
push
pop
jge
inc
dec
push
jbe
pop
mov
movsb
icebp
pop
jg
out
inc
dec
lcall
rcrb
idivb
mov
lret
dec
mov
sbb
jns
xchg
xor
xor
cltd
shr
stos
cmpsb
insb
mov
lock
jae
faddl
jle
inc
mov
push
cs
and
xor
loopne
cmp
mov
fdivl
mov
adc
inc
cmp
jne
push
popa
in
jb
jo
test
test
rclb
push
mov
add
sahf
jbe
jnp
sub
pop
adc
test
in
cmpsb
icebp
subb
ja
lret
loopne
mov
jns
mov
pop
mov
xor
cs
cld
cli
jb
mov
and
imul
popf
sti
sub
enter
xchg
and
imull
popa
dec
push
pushf
push
pop
pushf
and
js
mov
dec
inc
mov
sub
sbb
fucomi
push
pop
movsl
xchg
mov
orb
mov
nop
clc
lods
dec
add
into
out
out
pop
rcrl
imull
int3
push
sbb
xchg
negl
push
popa
sbb
ficoml
adc
adc
xchg
ss
ret
xchg
dec
xor
test
pushf
data16
mov
dec
ds
jg
inc
mov
cmp
orb
jb
out
mov
mov
fs
data16
gs
lods
cmp
inc
aas
or
xchg
mov
or
insb
sub
sub
mov
lods
pop
adc
cmc
pushf
fwait
jno
sub
inc
xlat
sbb
insb
push
out
sub
iret
rorl
pop
scas
cs
shl
xchg
sub
or
mov
push
push
jno
sbb
mov
je
xor
sub
nop
mov
jbe
js
dec
mov
mov
ror
imul
push
mov
mov
jbe
xorb
mov
add
sub
js
dec
call
push
mov
xor
sub
rcrl
mov
inc
mov
mov
pop
xchg
add
add
scas
mov
lahf
add
mov
mov
cwtl
jne
loop
jge
popa
iret
stc
fidivs
in
test
pop
pusha
pop
jnp
clc
xor
dec
dec
pop
dec
out
xor
ja
sbbl
fs
cld
sub
or
pusha
xor
or
rol
stos
pop
stc
jle
fdivs
leave
xchg
in
mov
dec
mov
xchg
lock
mov
jnp
insl
into
pop
jmpw
jae
xor
jae
sbbl
or
mov
sahf
inc
js
andl
enter
dec
dec
cmp
add
sbb
sbb
in
xlat
pop
fisubs
mov
int
jg
push
add
icebp
pop
scas
pop
stc
enter
jnp
movl
cltd
clc
adc
mov
or
pop
test
js
out
aaa
out
std
mov
adc
push
pop
ret
jnp
loopne
mov
mov
mov
sbb
or
jnp
jno
push
xor
dec
dec
test
loopne
push
enter
or
outsl
cmp
enter
fsts
mov
jl
pusha
jle
add
hlt
into
push
and
or
and
leave
jns
xchg
push
xchg
and
adc
jne
clc
insl
adc
cmp
ja
xchg
imul
stos
cmp
ffreep
insb
xor
inc
aaa
sbb
adc
mov
jp
adc
mov
push
mov
shlb
mov
std
dec
jo
push
sub
gs
ret
dec
scas
xchg
cli
loop
pop
mov
popf
fdivrl
or
je
mov
aad
shlb
jl
xlat
out
fmuls
int
lock
lds
cmp
mov
add
sbb
or
mov
pusha
push
mov
jmp
dec
out
les
lret
in
cmp
add
xchg
mov
and
push
loop
mull
out
add
mov
jo
and
add
push
cmc
mov
push
inc
jo
mov
stos
sub
mov
push
fistps
mov
push
mov
mov
fdivp
sarb
ret
push
xchg
push
mov
sub
iret
jle
stos
nop
xchg
dec
rorl
das
bound
sbb
mov
xchg
insl
pop
pusha
pushf
cmpsl
pushf
aas
in
call
ja
mov
aas
push
mov
repnz
xchg
popa
sahf
mov
xchg
test
lcall
inc
data16
add
xchg
ss
mov
xchg
xchg
cmc
sbb
cs
bound
out
popa
xor
insb
shrb
out
insl
outsb
pop
cld
cld
adc
test
ret
push
daa
add
in
pop
pop
sbb
stos
adc
sbb
insl
cmc
cmp
lcall
jnp
xchg
arpl
sti
leave
jge
scas
and
dec
popa
xor
mov
ret
loop
xchg
mov
insb
or
jge
xchg
sbb
xchg
fistpl
push
jnp,pt
rolb
cli
mov
and
fs
jp
xchg
insb
sub
clc
fwait
icebp
addr16
aaa
fwait
sbb
add
mov
mov
lea
out
push
xchg
cmp
xlat
pop
rorb
rorb
scas
test
push
xchg
push
xor
imul
test
ror
adcb
or
aam
jp
xchg
ja
mov
mov
cmp
inc
and
or
mov
add
cmp
pop
call
stos
mov
mov
sbb
ljmp
push
loope
imul
inc
or
dec
xchg
jne
cmp
or
xchg
orb
testl
xor
repz
cmc
xchg
sbb
dec
cmp
or
arpl
cmp
jae,pn
outsb
loopne
push
fisttpll
sub
mov
hlt
sbb
into
fsubs
inc
sbb
sub
fstps
les
pop
sub
loopne
sbb
ljmp
jg
and
movl
add
mov
or
in
outsb
jb
xchg
aas
sbb
sub
xchg
jne
loopne
adc
lods
push
pop
in
popf
cs
bound
andl
mov
xor
ds
mov
sbb
inc
mov
mov
faddp
into
cmpsb
fsub
cmp
xchg
jnp
orl
insb
push
pop
sub
mov
push
dec
js
aaa
push
sti
int
mov
sub
sub
pop
or
aas
and
pop
lcall
xchg
lret
stos
subl
xchg
int
iret
dec
pop
push
add
mov
cmpsb
addr16
les
sub
mov
push
xchg
cs
cld
movsl
daa
add
mov
out
and
gs
into
enter
insb
lret
mov
hlt
xchg
push
pop
stos
test
xor
jg
shl
pop
stc
jmp
and
jbe
out
enter
stc
push
negb
dec
xor
pop
and
pop
mov
dec
push
jl
xorb
or
ljmp
jmp
add
jmp
cmp
mov
jnp
fs
xor
js
xchg
push
sub
cmpsl
mov
pop
aad
pop
jae
pop
dec
mov
test
cmp
add
push
int3
mov
in
aad
push
push
push
icebp
push
xlat
xor
cld
sbb
mov
mov
andb
and
fwait
lods
sbb
jl
cmpsl
inc
sbb
dec
sub
adc
xor
pop
dec
rclb
dec
mov
sbb
jecxz
pop
jle
push
push
jno
movsl
in
lret
pop
movsb
les
xchg
mov
in
ret
in
mov
pand
leave
or
cld
shlw
loop
add
aas
outsb
in
sti
scas
sbb
cmp
push
popf
arpl
bound
sub
push
scas
loopne
movsb
rorl
cmpsl
jge
mov
dec
mov
push
lds
xchg
jle
cmc
pop
adc
sbb
jae
cmp
xchg
int
or
out
daa
jg
movsl
xchg
sbb
in
add
jne
xor
sar
fwait
xchg
daa
daa
pop
mov
sbb
jmp
inc
or
mov
mov
das
pop
jg
fiadds
sbb
xchg
jg
out
ret
xor
xchg
daa
jp
jmp
add
and
shll
add
subl
rclb
aam
bound
push
sbb
jle
ja
subl
or
add
adc
pop
mov
mov
sahf
sbb
mov
or
xchg
xor
push
cmpsb
test
mov
dec
adc
mov
fidivrl
xchg
adc
mov
push
stos
int3
or
inc
and
scas
dec
clc
rclb
aad
mov
adc
movsb
sub
mov
pop
sub
xlat
mov
faddl
lret
pop
lods
insb
mov
cmpsb
das
mov
inc
fs
and
movsb
fchs
mov
bsr
negb
mov
push
rcl
sub
mov
push
or
mov
dec
pushf
es
pop
insb
or
adc
xchg
xor
ret
push
inc
out
push
mov
cmc
movsl
clc
ror
hlt
fwait
pop
test
jmp
mov
in
cmpsl
aaa
loope
sahf
das
fcmovnbe
je
xchg
cmc
xor
int
and
sbb
xchg
cmp
mov
inc
push
pop
stc
sbb
call
psubsw
ljmp
adcl
repnz
sbb
sbb
das
fstpt
dec
mov
inc
mov
andl
mov
fcomps
adc
mov
xor
testl
adc
stc
mov
pop
push
push
das
or
dec
xchg
dec
nop
ja
mov
xor
int
iret
jne
pop
fsubl
das
inc
push
jo
xor
movsb
jmp
stc
pop
push
or
xor
cmp
mov
push
inc
xor
lahf
adc
ss
jge
jecxz
cmc
and
outsl
mov
jge
sbb
ljmp
mov
inc
push
mov
cmp
mov
or
fwait
dec
mov
pop
mov
or
pop
mov
in
rcrb
dec
push
popf
dec
je
imul
inc
xchg
icebp
cli
cmp
mov
jecxz
push
stc
cltd
out
add
jg
jg
shlb
sub
xchg
aad
mov
adcl
aaa
cltd
sub
push
mov
or
mov
test
in
imul
ja
or
fwait
jnp
sbb
pusha
loop
or
xor
inc
pop
mov
mov
adc
clc
cld
scas
sbb
jno
xor
adc
mov
frstor
cwtl
lahf
mov
mov
loop
mov
cld
and
xchg
inc
mov
gs
pop
popf
fs
shl
dec
push
shrl
fcompl
sbb
jp
aas
shr
scas
dec
in
sahf
stos
mov
ret
push
add
sub
lock
or
or
aaa
cs
lock
mov
and
ret
push
sub
cmp
decl
cli
and
inc
icebp
or
pusha
add
jecxz
jecxz
dec
or
leave
aad
jle
lods
cmp
hlt
pop
jp
mov
sub
psubsb
dec
into
xchg
cmp
orb
loope
jnp
mov
test
decb
cmp
jp
lcall
adc
sbb
lods
mov
add
mov
in
sub
sub
jle
je
repz
inc
fisttpl
imul
sbb
pushf
into
leave
sub
cld
push
test
xchg
test
enter
mov
jae
outsl
mov
pop
nop
shll
nop
jae
pop
jmp
mov
xor
popa
adc
inc
jl
rorb
cmp
adc
push
or
dec
xchg
cmp
mov
shl
dec
inc
js
mov
xchg
lret
inc
mov
stos
jmp
stos
mov
leave
movsl
push
jbe
xor
mov
add
dec
inc
add
mov
sbb
or
adc
test
xor
jl
adc
mov
in
pop
sar
aas
cmp
xor
sub
insl
cwtl
clc
pop
insb
cmpb
cmp
in
in
outsl
mov
inc
sbb
insl
mov
in
imul
loop
mov
ljmp
fucomi
in
loopne
jge
insb
or
adc
xchg
fisubrs
insb
imul
dec
mov
icebp
and
sbb
adc
dec
dec
mov
addb
push
popf
lock
test
push
adc
pop
inc
mov
stos
inc
dec
pop
fcomps
mov
out
inc
push
int3
stos
hlt
sub
xor
imul
xchg
pshufw
push
mov
xor
inc
jae
xor
cmpb
test
lods
clc
mov
lds
cmp
inc
mov
test
aaa
pop
outsl
mov
daa
mov
jge
in
loope
mov
cli
sub
sub
mov
mov
sbb
xor
cmpl
imul
or
lock
dec
ss
in
or
daa
ljmp
mov
js
fiadds
call
les
jns
cmp
lock
insl
push
ret
subb
xor
pop
mov
jp
sbbl
xchg
xor
clc
push
divb
gs
inc
movsl
imull
add
sahf
push
ret
popa
mov
jmp
aas
ss
push
stos
mov
je
xchg
ljmp
leave
push
inc
jno
xor
pop
or
popa
xchg
jo
aad
nop
adc
jge
pop
mov
jo
stos
mov
pushf
ror
clc
shlb
movb
scas
cmp
pop
jns
dec
bnd
sub
aam
rolb
jb
sub
adc
push
dec
xchg
popf
out
cmp
clc
adc
push
mov
hlt
iret
mov
and
leave
nop
inc
movsl
cmp
dec
xchg
sarb
pop
scas
inc
pop
dec
push
and
fs
jnp
xchg
fildl
pop
lods
pop
inc
lcall
lods
loope
mov
dec
lahf
jmp
sti
mov
cs
ljmp
test
adc
cwtl
cs
rorb
mov
testb
pop
mov
mov
fimuls
jg
gs
das
test
notl
lds
inc
and
repnz
adc
out
and
adc
xchg
shlb
fcmovnbe
bound
adc
cmp
rorb
cmpsb
and
std
push
dec
mov
and
jnp
push
mov
xor
cli
or
push
cmpsl
sub
arpl
push
das
loope
or
xchg
mov
repnz
xchg
jnp
imul
bound
xor
sbb
cmp
test
clc
add
jecxz
out
dec
data16
imul
ja
mov
jno
push
out
cmp
sbb
ds
rep
je
mov
fidivl
pop
mov
outsl
pop
inc
inc
add
in
loop
jge
or
andb
loope
out
aad
adc
jb
std
std
jle
mov
rorl
mov
pop
add
jns
test
dec
pop
xor
inc
mov
fimuls
outsb
das
and
mov
sti
stc
out
pop
enter
jl
scas
sub
insb
xchg
lods
xchg
mov
pop
adc
lret
and
or
inc
loopne
aaa
out
dec
inc
push
or
das
sub
lods
add
xchg
jns
jmp
int
arpl
add
in
and
mov
imul
ljmp
push
cmpsb
and
push
mov
in
scas
sub
aad
xchg
testl
dec
ja
jae
mov
adc
clc
jns
push
lcall
insw
ret
test
gs
pop
popf
repz
enter
cmp
push
jmp
gs
dec
cltd
outsl
sti
mov
enter
inc
mov
lods
xorb
and
push
cld
hlt
out
sbb
jo
js
insl
xchg
stos
lcall
pop
in
outsb
stos
fcomps
and
cmp
xor
ret
aad
xchg
sbb
clc
inc
jb
jb
and
pop
xor
mov
lock
testb
ret
inc
stc
ret
push
rolb
lret
ds
xchg
fcmovne
jno
xchg
xchg
xlat
xchg
sbb
dec
mov
mov
clc
xchg
sahf
sar
mov
arpl
cwtl
movl
in
movsl
and
dec
cmp
adc
ficoml
adc
jbe
cmp
jmp
cmp
adc
das
mov
push
inc
pop
and
and
pop
call
aaa
mov
aaa
call
mov
pop
shlb
jne
jle
pushf
push
or
mov
in
pushf
pop
push
shll
in
iret
scas
xlat
jge
mov
push
pushf
mov
and
lods
mov
lret
push
sbb
mov
cltd
push
pop
push
sub
xor
pushf
out
push
push
sbb
loopne
and
cli
imul
dec
cmp
jp
xchg
lret
ds
xor
cmc
inc
inc
pop
pop
sti
call
aad
insb
cltd
pop
push
sbb
or
scas
jo
popf
push
popf
sub
fstps
pop
xchg
pop
push
stc
sbb
aas
sti
iret
or
add
lock
mov
sbb
leave
jno
mov
push
test
inc
mov
test
sbb
pop
in
sarb
push
adc
mov
xchg
sub
mov
rcll
cmp
bound
sbb
jb
inc
fimull
dec
mov
nop
cmpsl
ficoml
divb
jb
nop
ds
push
inc
push
addl
or
push
ffreep
das
or
inc
arpl
pusha
adc
cmp
ret
repnz
lods
lods
jae
xor
xor
movsb
or
adc
fcompl
mov
dec
in
leave
stos
pop
or
fistl
fidivs
inc
stos
sbb
ja
lock
mov
pop
sbb
aas
sbb
fsubrs
lods
sbb
cmp
mov
mov
xor
mov
nop
mov
pop
out
inc
in
scas
pop
mov
sahf
dec
imul
cld
call
jbe
insb
adc
test
outsl
add
es
ds
mov
cmp
out
std
out
jo
xor
lret
inc
rclb
repz
xor
mov
movsb
sbb
fsubl
sub
arpl
sbb
add
jg
cltd
ret
aas
pushf
enter
pusha
movl
gs
inc
lds
std
shll
sub
mov
rorb
clc
iret
addb
dec
push
jmp
inc
mov
pop
test
dec
jno
roll
or
xchg
in
mov
inc
dec
movsb
or
ja
stos
and
outsl
daa
xor
jno
ds
jnp
mov
add
stc
jp
scas
enter
lock
pop
fsubrs
lcall
repnz
jmp
jnp
push
test
sbb
xor
push
jmp
loope
adc
xor
jo
adc
rcl
cltd
jecxz
iret
das
or
outsb
push
pop
xor
orb
aaa
sbb
cli
jmp
or
mov
test
call
pop
fldt
stos
out
data16
popa
pushf
int3
call
jae
xchg
int3
mov
adc
pop
enter
pop
out
ss
fs
dec
mov
or
test
arpl
mov
adc
jp
mulb
pop
inc
popl
leave
jno
rcll
shl
jg
ja
add
mov
mov
aas
cmc
fcompl
add
in
mov
push
mov
ret
test
push
loope
pop
fstpt
aam
xchg
call
jp
push
cltd
int3
leave
fsubs
dec
call
mov
shrb
aad
rol
repnz
lret
jb
std
data16
out
pop
daa
cmp
int3
dec
in
dec
in
pop
xchg
cmp
jmp
mov
xor
pop
lret
lret
jne
pop
pop
enter
push
bound
lcall
mov
sbb
pop
outsl
in
bound
test
lods
in
pop
repz
cmp
shlb
mov
arpl
aaa
daa
sub
lods
and
sub
popa
pushf
enter
lret
out
not
mov
pop
divl
pop
sub
cmc
icebp
inc
jmp
lret
push
mov
hlt
jb
xchg
push
test
add
pop
adc
out
xchg
mov
stc
cmc
pusha
fsubl
cmp
mov
xchg
sti
xchg
xor
imul
mov
cs
stc
push
cmc
sbb
in
dec
leave
dec
divl
sub
movsb
mov
movsb
add
in
in
push
sub
push
jle
sbb
roll
fisubl
pushf
and
lock
mov
pop
sbb
out
push
js
jp
xchg
shrl
mov
mov
cmpsl
mov
sbb
arpl
push
fcoms
cld
movsl
or
push
or
add
fstpl
enter
jb
fistps
rorb
xchg
xor
ret
or
sbb
and
and
add
dec
cmc
stos
clc
aad
xor
push
cmpsb
mov
sbb
dec
inc
xchg
daa
aam
test
pop
jg,pn
push
mov
jmp
call
and
and
inc
orl
addr16
jecxz
rolb
repz
sbb
push
add
jae
inc
movsb
test
sti
imul
mov
test
es
js
fcmovbe
movsl
jmp
mov
icebp
psrlq
lods
or
xor
pop
mov
call
sarl
xchg
sbb
arpl
xchg
lret
xchg
stmxcsr
int
fstps
sub
cmp
push
mov
std
ljmp
push
outsl
mov
inc
pop
scas
xchg
scas
inc
or
mov
xor
xor
mov
int
call
or
call
pop
sub
in
fimuls
sbb
dec
pop
ret
adc
aam
jg
repnz
add
or
mov
sub
cld
sub
scas
mov
ret
mov
mov
imul
pop
push
repnz
cmp
push
scas
rcll
xchg
inc
xchg
dec
jnp
xor
xchg
maxps
addr16
cwtl
jo
js
outsl
push
lret
jg
dec
sub
lcall
testb
adc
leave
xchg
pushf
sbb
dec
stc
fnstsw
shl
or
jp
fidivrs
aam
mov
adc
in
mov
mov
cmpsl
insb
outsb
es
aad
popa
mov
outsl
sub
and
cmc
dec
mov
insb
fwait
in
sbb
fwait
mov
test
mov
jp
idivl
or
iret
in
sbb
or
in
js
icebp
out
filds
push
loope
xor
mov
insl
mov
fdivp
push
iret
mov
pop
xlat
pop
or
mov
pop
icebp
mov
dec
xchg
out
mov
mov
jmp
and
cmp
imul
das
adc
xchg
sbb
inc
icebp
add
out
iret
push
pop
sbb
fwait
xchg
lret
fistpll
mov
xchg
repz
mov
jecxz
jae
adc
cmpsl
pop
push
pop
sub
adc
xchg
jl
stos
dec
mov
js
or
frstor
xchg
mov
sti
loopne
pop
loop
add
cmp
inc
pop
and
fbld
sti
mov
stc
stc
test
sbb
pop
cmp
mov
xchg
mov
inc
cmc
jo
repnz
pop
mov
fldl
or
and
push
mov
sti
mov
lret
frstor
or
push
jne
lret
inc
inc
aam
mov
and
out
mov
dec
xchg
shrb
addr16
sub
cli
fisubs
aaa
pop
aas
mov
dec
jg
or
push
mov
mov
test
cs
leave
cmp
and
int3
sub
or
cmp
jp
stos
loope
or
xor
mov
iret
mov
orl
clc
ss
lock
mov
cltd
jnp
dec
sbb
jae
mov
rorl
aas
mov
xchg
xchg
fwait
call
jl
xchg
sar
sub
mov
call
push
or
mov
aas
out
sbb
aas
sbb
pop
jnp
sti
inc
push
sub
lret
cmp
insb
test
ljmp
xor
insl
lahf
and
inc
mov
dec
inc
cmc
sbb
add
aaa
cmp
sbb
sahf
test
or
cmpsl
data16
repnz
add
mov
push
leave
roll
xor
shr
leave
xor
test
pusha
imul
mov
push
inc
addl
test
imul
jl
dec
out
gs
cmpsl
les
mov
ror
scas
in
xor
movsb
loope
aaa
add
pushl
dec
sahf
fisttpll
xchg
sti
inc
mov
cmp
xchg
adc
adc
nop
mov
popf
cltd
cmp
jns
js
stc
adc
lret
pop
cmp
cmp
and
roll
jbe
jno
inc
adc
push
xchg
jmp
popa
test
lods
out
scas
mov
cmp
mov
cs
cwtl
cmp
pop
bound
push
pop
push
cmpsb
push
aad
cmpsb
iret
mov
scas
cwtl
adc
mov
roll
inc
ja
and
mov
sbb
scas
andb
xchg
test
dec
mov
dec
pop
mov
dec
lods
sbb
xor
sbb
loopne
bound
xchg
dec
into
sbbb
sti
adc
add
mov
cwtl
inc
or
pusha
jl
fists
xor
popa
cltd
jmp
add
fsub
pop
insb
or
sbb
jmp
xchg
cmpsl
mov
mov
js
mov
push
inc
inc
nop
lods
xor
or
lret
sub
cs
loope
dec
push
leave
or
int3
nop
mov
jns
xchg
push
dec
cmp
fcmovu
mov
rcrb
sub
ret
lahf
popf
cmpsb
jle
in
rcrb
xchg
xchg
enter
mov
sub
lock
sbb
jbe
int
xchg
mov
mov
fstps
insl
push
lods
inc
adc
xchg
insb
mov
xor
in
popf
and
mov
into
jge
jge
fcoms
inc
dec
outsb
shr
cmpsl
imul
adc
loopne
inc
clc
sahf
mov
dec
xchg
dec
imulb
add
call
jecxz
pop
cmc
out
or
test
insl
test
mov
aad
test
cmpsb
lods
jns
nop
je
in
lods
enter
lods
and
leave
mov
enter
in
hlt
je
jecxz
fistl
and
adc
mulps
outsb
jnp
mov
arpl
xchg
ja
or
or
mov
sub
sbb
test
or
xor
pop
jnp
add
subl
out
xor
pop
xor
add
fists
aam
xlat
out
repnz
or
lret
sbb
mov
mov
or
mov
mov
in
lods
gs
jge
jle
leave
jo
push
sub
dec
add
mov
bound
mov
inc
xor
add
pop
cmpsb
out
test
push
pushf
add
fists
pop
into
or
cmpsl
mov
push
inc
mov
cltd
in
mov
dec
pop
mov
adc
dec
sti
sub
shlb
scas
inc
cmc
add
popa
sub
xchg
test
dec
mov
sub
push
ss
lahf
rcrl
imul
jbe
nop
lahf
imul
dec
icebp
push
mov
mov
cwtl
je
mov
testl
add
sbb
aad
cmpsl
stos
dec
jle
roll
dec
mov
or
bound
adc
or
sub
xor
cmp
imul
adc
adc
jp
sub
dec
cltd
jg
jnp
adc
mov
xchg
inc
xchg
xchg
fsubrs
jl
je
add
or
pushf
jecxz
push
mov
cli
mov
ja
les
mov
mov
cs
adc
sub
and
not
mov
and
inc
scas
arpl
sub
mov
fldl
dec
jge
nop
icebp
outsb
out
and
mov
push
lea
inc
xorb
in
xor
lahf
cs
xchg
dec
xchg
sbb
push
mov
lea
lret
jb
movnti
mov
adc
sahf
and
jmp
add
repz
and
xchg
ret
inc
add
movsl
sbbb
ja
adc
push
pop
xor
ja
mov
sub
lock
rclb
xchg
push
pop
loopne
mov
scas
ss
imul
xchg
mov
iret
xor
mov
and
std
test
push
arpl
testb
test
frstor
lock
mov
adcb
outsb
jno
and
sbb
in
xlat
jmp
add
adc
stos
jmp
test
push
and
sbb
shlb
sti
mov
hlt
in
or
testb
sub
cmc
mov
pop
jecxz,pt
or
mov
cmp
addb
mov
adc
test
icebp
xchg
or
mov
mul
addb
inc
xchg
mov
adc
sub
bound
sbb
jle
pop
test
sub
arpl
pop
xchg
mov
shlb
jnp
in
sti
or
popf
fwait
lock
shrb
jae
mov
orb
dec
mov
dec
jbe
pop
mov
flds
cmpsb
sbb
gs
ljmp
je
push
out
sbb
xor
les
int3
jp
push
insb
jmp
and
mov
or
scas
inc
and
pusha
jns
xor
cs
iret
xor
push
dec
mov
sbb
popf
insb
bound
mov
dec
enter
ret
rolb
sbb
in
dec
dec
mov
mov
adc
sub
incb
outsb
cwtl
push
or
mov
out
jno
or
mov
int3
xchg
gs
mov
dec
inc
inc
push
push
test
add
add
pop
hlt
mov
fstpl
movlhps
lahf
pop
rcr
mov
out
jle
test
loop
sbb
into
jno
and
stos
add
and
mov
jne
loopne
dec
mov
scas
lds
lods
ss
jge
inc
enter
ds
sub
call
mov
xor
lods
jmp
dec
dec
incb
mov
mov
adc
mov
pop
aam
pop
sub
cmc
xchg
and
lods
ds
fcompl
jle
incb
repz
call
inc
inc
pop
xor
or
sahf
jecxz
inc
outsl
inc
jl
jne
and
push
leave
out
out
push
jns
push
std
jno
and
adc
in
push
mov
js
sbbl
push
mov
lea
inc
js
xchg
xchg
jle
arpl
push
movsl
or
xor
call
sarl
push
into
addr16
pop
ds
cmpb
mov
jecxz
inc
fwait
mov
pop
and
aad
inc
cmp
cli
pop
xor
sub
icebp
sub
adc
adc
mov
lret
adc
add
xchg
das
lods
lock
loopne
js
push
add
pop
jge
or
hlt
sub
mov
bound
stos
enter
test
add
or
lock
add
imul
mov
mov
jge
movsl
adc
dec
enter
push
shl
push
adc
daa
mov
idivl
and
sub
out
xchg
enter
mov
int3
cmpsl
stc
bound
add
mov
xor
repnz
push
inc
xor
and
dec
xor
jbe
sub
or
mov
jle
xlat
scas
imul
aas
inc
and
xchg
cmp
popf
xor
pop
cltd
pusha
xchg
cmp
pop
icebp
lret
daa
addl
cld
mov
stos
pop
andl
xorl
sub
mov
push
aad
add
std
pushf
test
fnstenv
cwtl
or
adc
jl
jns
cmp
outsl
test
out
sti
mov
mov
popl
pop
sbb
mov
out
lcall
test
xchg
mov
std
jne
icebp
data16
aad
dec
loop
nop
scas
std
sub
out
out
and
add
shl
xchg
mov
and
mov
pop
jns
shlb
negl
xor
sub
gs
lcall
dec
add
stos
jmp
fidivl
test
jle
lcall
cld
sub
shll
jg
rclb
sbb
sbb
xchg
adc
lret
push
mov
into
mov
dec
nop
dec
fstpl
xchg
addr16
dec
cmp
out
push
mov
sub
xor
loop
and
or
mov
jne
mov
push
leave
mov
addb
iret
push
add
push
inc
cmp
dec
dec
add
lock
insl
cmp
repz
sub
lret
sub
lret
lcall
pop
mov
mov
lret
and
mov
dec
or
mov
fld1
mov
jae
leave
sub
cmp
add
sbb
mov
lea
jae
daa
loope
adc
lahf
mov
dec
sbb
dec
test
mov
test
call
push
dec
sub
gs
inc
sub
inc
cmpsb
iret
mov
out
stos
popa
in
lea
adc
jb
mov
test
cmc
add
lods
mov
loope
pop
cld
add
into
fldt
and
scas
xor
lret
popa
adc
add
mov
and
fcmovne
cmp
pop
sbb
dec
push
divb
push
jno
inc
daa
push
adc
sub
out
sbb
lods
push
jmp
push
aas
pop
cmp
mov
mov
in
in
lret
mov
popa
sub
mov
fnstcw
cmc
stc
ret
add
jae
mov
cmpsb
mov
push
inc
cmpsb
mov
jmp
sub
sub
cmp
cld
fnstcw
insb
mov
imul
push
cmp
mov
adc
sub
into
je
or
xchg
pop
jmp
div
repnz
xor
pop
ret
test
cmp
pop
pop
or
adc
dec
dec
stos
sub
scas
test
cmp
xchg
cwtl
popf
pop
movsl
lds
sbb
cli
lock
mov
sub
sti
aas
mov
addb
fcoml
lods
jno
or
adc
into
js
mov
js,pt
das
repnz
lret
cmc
ljmp
mov
push
notl
push
push
add
rorl
dec
sub
and
gs
pop
pmulhw
xchg
inc
call
mov
addl
dec
jnp
test
fidivrs
adc
add
or
int3
mov
arpl
mov
lock
gs
xchg
mov
repz
mov
out
and
cmc
jecxz
jmp
loope
push
lahf
and
sbb
lcall
mov
xchg
adc
xor
ret
daa
mov
mov
lret
push
rcrb
push
cmp
mov
push
add
sub
mov
jecxz
cmp
mov
jmp
pusha
pop
push
jmp
gs
pop
dec
dec
sub
inc
addb
jecxz
adc
cmp
fstpt
mov
xchg
movsb
cmp
push
scas
sbb
mov
push
jne
cmpsb
xchg
xor
arpl
test
pop
jb
mov
inc
inc
test
cs
push
adc
dec
icebp
push
mov
pop
sbb
sub
mov
pop
fistpl
adc
mov
add
ja
xchg
sbb
add
mov
rcrb
pop
aaa
xchg
ljmp
subl
fwait
inc
add
std
aaa
mov
popa
insb
inc
jne
repz
out
les
push
adc
sahf
inc
popf
popf
dec
lods
sub
std
fsubrs
hlt
jecxz
jmp
ror
pusha
xchg
or
push
jle
push
jns
out
loop
push
pop
push
aas
ja
mov
iret
mov
les
cmp
stos
cmp
enter
pushf
mov
rol
fldenv
cmp
xchg
fs
add
pusha
pop
in
mov
sub
xor
sbbb
jg
sbb
orl
cltd
adc
mov
push
xchg
mov
in
sbb
clc
sbb
cltd
mov
add
in
stc
out
test
aas
roll
pusha
and
icebp
push
imul
gs
loopne
adc
lcall
cmp
lret
inc
mov
xor
movsb
icebp
sbb
es
jno
jno
insl
xchg
pop
pop
or
arpl
sub
cmp
pop
outsb
cmc
inc
push
mov
nop
xor
addr16
in
icebp
push
or
stos
hlt
adc
cmp
dec
push
fistps
add
lea
jo
sub
cltd
ss
jmp
adc
mov
ret
lods
leave
shll
inc
test
sbbl
dec
or
adc
out
cmp
inc
and
push
jne
scas
jmp
test
pop
cmp
jae
and
fdivs
pop
in
addb
mov
cmp
pop
inc
sbb
inc
imul
in
stc
pusha
mov
or
push
mov
int3
jnp
lcall
stos
gs
mov
inc
ljmp
dec
scas
scas
clc
jecxz
fs
add
rorl
fidivrl
nop
mov
adc
adc
cmp
mov
test
pop
xchg
shll
xchg
adc
lret
sbb
sarl
adc
inc
sbb
call
jns
sbb
inc
clc
sarl
inc
jl
jo
jnp
mov
cwtl
int
and
ds
lret
in
icebp
lds
notb
in
or
xor
mov
imul
fwait
mov
xchg
jns
pushf
pop
lcall
jge
push
pop
mov
loopne
cmp
ret
sbb
add
int
push
adc
sbb
push
mov
loopne
add
loopne
xchg
mov
or
add
xor
out
pop
push
jno
xchg
aad
scas
sarl
data16
and
sahf
add
jo
and
lcall
xor
inc
push
popa
cmp
mov
xlat
sub
or
sub
or
sub
push
loope
dec
jle
loop
sarl
negb
lods
mov
sub
jnp
adcb
cmp
outsb
pop
xchg
or
outsb
add
subl
test
push
push
shl
mov
xchg
leave
out
pop
pushf
sti
sbb
jmp
mov
test
push
and
push
outsl
xor
dec
push
adcb
aam
push
aas
sbbl
imul
out
cmpl
jle
cmpsl
notl
scas
fdivs
xchg
mov
int3
outsb
lret
xchg
push
add
fsubl
shlb
inc
enter
scas
stos
add
mov
in
sbb
cld
lahf
andb
rcll
das
dec
xchg
sbb
push
xchg
mov
lds
xchg
loope
out
stc
sub
cmp
aaa
out
mov
or
mov
out
mov
out
loop
and
and
popf
inc
dec
xchg
gs
push
mov
ljmp
xor
lods
repz
imul
aaa
inc
dec
mulb
sub
push
mov
mov
xlat
aam
arpl
adc
lahf
push
sahf
enter
sub
pop
les
shrb
std
std
sbb
insl
rcrl
dec
xchg
insb
loop
into
scas
mov
pop
inc
fmull
dec
ficompl
mov
repnz
xchg
ret
dec
inc
daa
fdivrl
mov
jle
cld
mov
mov
bound
pop
and
je
sbb
ret
inc
scas
into
rcl
inc
dec
cmc
xchg
or
sbb
sub
push
lods
es
and
popf
cmp
xchg
xchg
dec
or
inc
lret
call
test
popa
mulb
jno
cmp
cmc
dec
int
mov
rcrb
xchg
pop
adc
stos
mov
icebp
push
mov
out
out
add
dec
test
outsb
mov
daa
pop
push
inc
mov
jge
ja
or
pop
in
imul
int3
or
sahf
inc
xor
jnp
inc
or
jle
xchg
decb
mov
aaa
scas
mov
xlat
hlt
sub
pop
xor
dec
mov
mov
scas
cmp
xlat
cmp
mov
cmp
xchg
push
fidivrs
jb
lea
mov
test
aam
mov
jl
pop
scas
int3
fidivrs
pop
or
ret
cld
leave
mov
mov
sub
fs
testb
rcl
cmp
loop
and
data16
shlb
sub
xor
sub
lret
popf
jbe
movsl
dec
shlb
mov
dec
inc
xlat
in
lea
aaa
arpl
lret
shrb
inc
leave
loopne
inc
add
mov
dec
jp
pop
lock
push
add
pop
xor
push
jae
push
std
shr
lahf
jl
xchg
mov
daa
test
adc
or
enter
rclb
push
fiaddl
aaa
sub
mov
jecxz
dec
xchg
dec
pop
mov
xor
arpl
add
data16
dec
popf
div
fldt
repnz
daa
fstl
add
scas
fnsave
mov
cmpsb
push
pop
leave
sub
xor
in
jno
and
int
sarl
test
shrb
mov
inc
or
aad
adc
lret
inc
std
push
test
xor
shrl
sub
out
bound
scas
mov
pop
lcall
hlt
test
movsb
jmp
inc
dec
aas
arpl
stos
outsb
mov
cmp
or
jbe
pop
pop
jb
cmpsl
fwait
data16
fwait
pop
cmp
pushf
ja
pop
dec
jecxz
xchg
xor
out
sarl
add
stc
sub
das
pushf
inc
roll
enter
mov
stos
in
jb
cmp
scas
jp
rclb
mov
add
push
mov
cwtl
xor
ja
xor
cmp
cs
pop
xor
xorl
inc
in
pop
dec
and
sbb
xchg
ljmp
sub
rorb
jns
mov
aas
repz
ljmp
sub
es
rorb
xchg
test
incb
fucomp
scas
cli
push
jmp
pop
cmc
scas
xchg
call
mov
pusha
arpl
andb
aas
sbb
mov
outsl
xchg
ficompl
int3
xchg
adc
adc
xchg
mov
xlat
test
and
sti
xchg
lock
push
sbb
push
dec
inc
je
mov
add
inc
stc
cmp
nop
mov
or
hlt
pop
aad
adc
test
xor
jg
push
andnps
or
imul
add
jnp
mov
into
nop
movsl
sub
mov
push
rol
cmpsl
sahf
pop
add
xchg
mov
scas
lds
xchg
clc
add
lods
inc
push
shll
push
jl
or
lret
outsl
xchg
mov
lcall
adc
fwait
dec
jl
add
orl
popf
insb
xchg
cmp
xor
in
xor
or
xor
imul
sub
vmovntps
push
jns
sbb
xor
sub
roll
sub
pop
pop
out
in
ss
cmc
pushf
inc
clc
xor
cmc
lods
dec
jmp
scas
push
fmul
adc
fwait
push
dec
cmpsb
lcall
inc
shr
rcl
outsb
addr16
cmp
mov
cli
fsubs
push
orl
pop
push
push
cltd
cli
int
in
enter
ret
add
lods
inc
loop
sbb
or
shl
and
push
movsb
cmp
sub
call
pop
mov
popf
inc
ds
js
call
out
hlt
in
sbb
call
out
jecxz
faddl
pop
jo
mov
pushl
or
xchg
aad
cmpsb
fidivrs
dec
xchg
mov
fidivrl
fcmovne
repz
pop
insl
sub
adc
mov
call
inc
sub
arpl
lods
and
sti
inc
push
cwtl
imul
mov
sbb
mov
sbb
les
lahf
jle
sbb
add
add
mov
dec
mov
in
inc
dec
push
push
mov
cmp
scas
push
push
push
or
sub
fcmovne
ss
divb
sbb
pop
sbb
mov
int3
mov
insb
bound
pop
xor
rcrl
sub
loopne
mov
add
xchg
scas
or
mov
sub
cltd
mov
adc
cs
in
sub
jge
sub
vpmadcswd
std
sbb
cmp
aaa
stos
sarb
push
mov
pop
mov
fistpll
test
cmp
jae
jb
aam
cmpsl
outsl
sbb
mov
int3
add
mov
out
dec
lea
dec
sub
scas
inc
jecxz
test
std
addl
in
or
and
jae
sbb
push
cmp
inc
xchg
mov
lea
js
xor
fcmove
xor
jge
xchg
mul
mov
xchg
push
adc
or
test
div
xchg
xchg
push
cwtl
mov
pop
push
lds
rorb
fimull
pop
sti
int
test
lahf
inc
push
push
dec
stos
lret
pop
jb
sub
fsub
mulps
inc
xlat
daa
or
lods
jge
fidivrl
add
xchg
fisubs
movsl
jle
sahf
mov
mov
fcom
shrb
sbb
lret
lock
pusha
fnstenv
inc
jmp
mov
hlt
popa
adc
fcoms
hlt
dec
cmp
cmp
idiv
ror
jmp
call
sbb
fs
jne
lret
sbb
pop
mov
popf
mov
rolb
and
enter
je
daa
pop
adc
popf
mov
mov
movsb
add
push
jl
cli
mov
pop
enter
sub
jmp
mov
mov
mov
daa
push
jbe
jecxz
xorl
xchg
mull
mov
jle
sbb
sbb
fidivs
cmp
sbb
sbb
std
fiadds
imul
ficompl
dec
in
cltd
movsb
mov
lret
sarb
pop
call
out
into
repnz
mov
mov
mov
test
pop
inc
mov
push
cmc
pop
jns
pop
and
and
in
in
scas
xor
sub
and
mov
bound
jecxz
xor
inc
jno
mov
mov
mov
and
or
or
sbb
cmpsb
xchg
call
stos
mov
icebp
add
aas
cwtl
lcall
es
mov
push
js
cmp
adcl
and
sarb
rcll
mov
sbb
jns
int
push
fs
xor
mov
in
gs
jae
cld
jne
sbb
jl
in
out
mov
ss
push
cmp
mov
or
jbe
mov
dec
in
jge
add
lahf
in
xchg
and
xchg
lcall
inc
gs
aas
push
mov
xor
cld
in
imull
push
incb
pop
movsb
inc
outsb
cmp
aad
shll
subl
mov
jo
push
cld
mov
adc
push
je
arpl
icebp
push
icebp
or
loop
and
shlb
add
dec
fnsave
xchg
push
jo
push
sbb
sti
ficoml
pushf
and
push
xor
enter
test
sbb
mov
sbb
sbb
stos
ljmp
lods
fisttps
mov
jg
icebp
mov
sub
pop
ljmp
popl
mov
fxch
push
andb
xchg
and
sbb
xchg
jbe
ljmp
scas
insl
lret
sti
lahf
jo
popf
and
jns
add
leave
paddusw
push
std
pushf
sti
movsb
andl
ret
xchg
mov
cli
xchg
and
sbb
movhlps
dec
out
sbb
sarb
xchg
sti
test
fisttps
hlt
out
lret
clc
mov
xchg
or
lea
add
xchg
cmp
push
pushf
adc
mov
hlt
and
in
loop
sub
jle,pt
iret
jmp
xor
rorb
test
mov
sub
inc
mov
jle
dec
call
xlat
movsl
aam
push
imul
xchg
lcall
xor
outsl
lock
mov
jne
imull
inc
jmp
je
in
inc
jp
fs
xchg
aam
stos
aam
aam
loope
fldcw
pushf
push
popa
pop
stos
cmpsl
cmp
outsb
xchg
dec
in
rorb
ss
or
xchg
adc
sub
mov
cmpsl
movsl
push
fcomip
pop
add
push
and
icebp
pop
dec
xchg
cmp
push
mov
adc
cmp
jle
insb
xor
lea
mov
add
add
mov
inc
inc
pop
rcrb
lahf
loop
cmpsb
in
cmp
popf
pusha
int3
lret
fsubrs
popf
jne
xchg
ret
jge
outsb
inc
mov
leave
xchg
cmpsb
imul
xorl
xorb
mov
mov
push
outsb
loope
clc
mov
scas
sub
or
pushf
scas
mov
mov
or
push
dec
loopne
outsl
flds
arpl
stos
xor
insl
lock
fdivl
sti
jl
in
cmp
xlat
loopne
sub
es
orl
xchg
push
pop
dec
loope
mov
push
into
aas
mov
adc
test
insl
sub
and
sub
mov
shlb
subb
cmp
xor
xor
ds
pop
insl
loope
pop
push
inc
and
lret
sbb
int3
jecxz
mov
jo
xchg
rcl
mov
shl
cmp
cmpl
push
fcom
enter
xlat
jb
sbb
jb
mul
and
cmp
jne
push
xor
sti
jb
mov
nop
cmpsl
pop
imul
movsl
div
dec
repnz
mov
cmp
aad
sbb
or
push
ss
mov
clc
sti
sahf
push
push
jp
test
neg
mov
mov
xchg
mov
stos
jbe
into
pusha
mov
adc
or
sbbb
aam
adc
aaa
icebp
adc
scas
pop
jmp
push
jecxz
rorb
xchg
paddsb
cmp
ljmp
sbb
push
fnstcw
or
and
pop
mov
mov
test
and
mov
pop
arpl
jne,pt
xlat
mov
push
inc
mov
and
rclb
push
aam
jmp
xchg
mov
in
insl
loop
rorl
sahf
sub
pushf
cld
xor
in
les
popf
ret
fcomi
aaa
scas
sarl
inc
addr16
pop
dec
mov
clc
adc
pop
push
lea
outsl
or
dec
adc
int
stos
pop
pop
adc
and
mov
sbb
movsb
mov
mov
mov
sbb
mov
xchg
pop
stos
inc
add
in
fst
jle
push
xchg
mov
pop
roll
pop
shl
decl
inc
push
push
cmp
fsub
sub
leave
jo
decb
mov
fmull
cmc
mov
fs
sbb
ss
mov
in
add
xchg
int
insb
add
xchg
fs
jb
insl
popf
call
sbb
mov
gs
push
jecxz
inc
and
ja
shr
jl
or
popf
jno
xchg
sbb
push
hlt
dec
and
xor
push
xor
or
aam
push
scas
subl
sbb
es
xor
outsl
rclb
in
pusha
mov
mov
out
stc
xchg
dec
mov
cmc
lods
js
aaa
sti
bound
scas
mov
jns
cld
jge
xor
sbb
adc
fadd
test
stos
xchg
in
mov
adc
mov
xchg
ds
aaa
inc
mov
test
pop
pop
enter
iret
dec
jmp
xchg
lods
pop
xchg
xchg
mov
sti
mov
pop
dec
adc
insb
adc
jp
pusha
and
mov
scas
jl
adcl
sub
movsl
sbb
sbbb
xchg
frstor
inc
push
repz
sahf
xlat
call
sti
shlb
ret
mov
in
popa
jp
xor
insb
cmpsb
xor
pop
std
sti
sub
cmpb
lods
jle
int3
jl
xor
loop
hlt
call
dec
xchg
jge
pushf
push
mov
dec
aam
jbe
jle
or
lahf
data16
repz
inc
nop
es
movsl
mov
pop
jae
cmp
fld
daa
in
push
lret
rcr
dec
add
mov
shrl
dec
mov
scas
ja
sub
mov
cmp
and
mov
push
pop
adc
ljmp
in
int3
gs
lock
loop
dec
clc
cld
daa
or
jnp
hlt
fcoms
cmp
jbe
ror
movsl
pop
aad
les
imul
sub
in
adc
inc
inc
jecxz
pop
cmp
cld
fs
adcb
pop
fiadds
jle
push
repnz
adcb
xchg
sti
mov
push
mov
jno
add
cmc
dec
cmc
pop
popa
adc
ljmp
iret
jne
repz
pop
mov
mov
mov
nop
dec
aaa
jg
or
inc
jo
pop
xor
lcall
push
pop
and
gs
sbb
mov
xchg
cli
dec
leave
ljmp
mov
inc
mov
dec
mov
out
xlat
push
sbb
jle
xor
cld
lock
dec
insb
mov
mov
test
or
pop
sbb
arpl
faddl
xchg
sub
hlt
pop
scas
ljmp
sahf
add
popf
push
lahf
dec
jns
adc
mov
icebp
cmpsl
int3
cmp
popf
sbb
dec
dec
sbb
cmp
cmpsl
iret
insl
mov
jl
pop
out
mov
scas
xor
dec
or
lods
inc
cld
mov
mov
add
sbb
movsl
cs
aad
pushf
inc
loop
ret
clc
les
push
and
vorps
shrl
xchg
popf
out
iret
adc
sub
pop
cltd
rolb
cli
into
xor
mov
mov
cmp
bswap
xor
cmp
and
movsb
xor
or
out
cmp
jp
shll
cmpsl
cmp
dec
fiadds
mov
and
pop
out
loope
push
in
pop
jecxz
push
mov
or
push
ss
ret
in
imul
cmpb
mov
popf
sub
out
imul
xor
mov
xor
mov
xchg
outsl
fidivs
imul
cmpsb
jg
xchg
and
shlb
adc
mov
fucomp
ret
sti
ljmp
faddl
inc
outsl
lds
dec
xchg
into
lret
icebp
xchg
jns
mulb
lea
mov
rcr
push
pop
das
sbb
das
scas
mov
mov
mov
cmp
xchg
fsub
imul
stc
cmpl
fnstenv
mov
fdivs
push
inc
add
push
and
cmp
and
popf
divl
movsl
xchg
jns
adc
ret
cmc
push
cmp
es
push
add
pop
mov
mov
add
pop
and
fisttpl
lret
fwait
cmpsl
rcr
add
fisubs
sarb
fdivs
xlat
mov
sub
cltd
cmpsb
and
inc
call
movswl
mov
sbb
movsb
out
les
shrb
pusha
imul
in
es
sub
rorl
mov
mov
inc
lret
sahf
xchg
and
fwait
mov
daa
add
fidivs
add
outsb
movsl
repz
out
mov
push
and
mov
cli
pop
mov
and
out
arpl
jo
push
ret
pop
push
xchg
push
mov
jg
mov
inc
pop
sub
adc
inc
pop
inc
loopne
repnz
pop
mov
std
adc
loope
push
jb
sub
mov
int3
push
jbe
je
mov
pop
mov
push
dec
dec
jnp
or
ret
repz
push
call
cmp
fnstsw
mov
add
xor
faddl
xchg
insl
or
imul
pop
popa
lods
push
imul
mov
jae
sub
mov
and
or
jo
mov
push
dec
adcb
pop
popa
or
in
pop
divl
loop
xchg
out
aad
sbb
loop
xchg
sbb
repz
inc
in
push
xor
and
push
testb
out
xchg
lret
mov
or
fimull
clc
imul
int
sub
lahf
in
outsb
out
call
pop
push
lods
fnsave
inc
ja
aad
adc
jno
inc
jle
popf
mov
clc
movsl
and
rcrl
xchg
mov
inc
into
or
bound
scas
dec
loopne
pop
cwtl
inc
sbb
dec
ret
enter
push
out
mov
aaa
aaa
push
iret
out
sbb
repz
mov
xchg
mov
nop
cmpsb
jbe
ds
popa
jbe
lret
and
mov
incl
inc
dec
sbb
push
xchg
cmpsl
ja
cmp
xchg
outsl
lahf
into
or
sub
mov
adc
mov
aad
push
sahf
add
outsb
mov
jno
int
xchg
mov
adc
addb
ja
lea
cld
inc
insl
push
jle
test
mov
test
mov
push
repnz
mov
hlt
and
das
bound
adc
sub
jmp
dec
add
out
ja
pop
jb
add
mov
loopne,pn
fdiv
lea
ss
add
jo
pop
pop
push
inc
pop
xor
scas
fistps
xchg
psubw
xchg
and
inc
jo
faddl
fiaddl
push
jb
push
jmp
in
adc
sub
in
stos
clc
test
mov
rcrl
push
flds
adc
daa
xchg
stc
in
cli
iret
jno
add
mov
and
neg
add
test
scas
adc
lods
pop
je
or
mov
stos
mov
test
jge
cmpsb
or
in
mov
lods
push
push
scas
lret
mov
es
dec
xchg
pop
icebp
xchg
sarl
sub
sbb
movl
sbb
enter
mov
das
ret
sahf
jno
icebp
xchg
shll
sub
pop
cld
ret
int
jecxz
push
adc
sub
scas
jecxz
xor
and
lret
and
inc
jae
add
ret
sbb
jne
sub
sub
fcoms
pop
stos
lret
mov
cwtl
cld
sub
repz
cmp
enter
jmp
movsb
mov
xchg
ret
mov
nop
clc
mov
popf
pop
out
xchg
cmp
and
leave
xchg
inc
lret
or
sbb
and
and
into
loop
push
sbb
mov
cmp
je
test
jae
add
add
xor
repz
stc
xchg
adc
or
adc
adc
adc
jge
inc
mov
fsubs
cld
cmpsb
fimull
enter
cmp
std
fdivrp
inc
lods
mov
cmp
jle
xor
lds
lock
lds
popl
push
out
fldt
in
fdivrs
mov
ljmp
xchg
push
dec
sti
xchg
jnp
mov
mov
stc
push
or
aas
std
inc
mov
sub
jge
inc
mov
aaa
or
cmp
jmp
pop
dec
popf
fwait
mov
sub
add
call
fs
test
shl
mov
hlt
lods
popa
fs
out
jl
lcall
in
test
in
mov
sub
cwtl
insl
mov
inc
iret
sbb
jecxz
sub
ret
dec
jp
lds
xlat
lea
cmp
jo
outsb
mov
ss
push
and
sbb
sub
sub
and
xchg
xchg
xchg
sub
jp
push
push
jnp
movsb
lods
cmp
jle
cld
addb
xor
inc
ficomps
dec
iret
push
adc
push
dec
movsb
xchg
xchg
push
stc
xchg
push
sti
mov
xor
or
sti
and
ljmp
dec
cld
in
dec
jns
xchg
lods
test
push
gs
insb
add
and
mov
mov
jmp
jno
out
inc
adc
imul
fwait
adc
popa
cmpsb
inc
xchg
sub
dec
cld
or
pop
adc
in
outsl
mov
iret
sbb
ljmp
bound
das
sub
mov
adc
hlt
lret
adc
in
rolb
fiaddl
das
shll
cmp
and
jnp
mov
scas
sub
ljmp
or
jg
xchg
mov
test
push
repnz
es
outsl
push
cmpsl
sbb
push
fsubrl
mov
fcmovb
dec
sbb
cmc
arpl
mov
mov
jg
ret
mov
jle
in
stc
inc
into
je
mov
cmp
add
and
arpl
aam
mov
mov
fsubs
call
mov
xor
fstps
sub
cli
mov
pop
jne
loope
lret
cmp
fwait
lods
rorl
xchg
nop
pop
hlt
sbb
sar
push
js
xchg
adc
ja
jg
mov
jbe
popa
pop
mov
mov
add
mov
jle
adc
jno
sbb
call
pushf
and
mov
repz
mov
je
dec
inc
push
adc
mov
and
or
shll
ret
int3
mov
adc
test
dec
mov
outsl
push
pop
jp
aad
cmp
out
scas
push
mov
inc
out
add
mov
dec
jo
subl
subb
mov
aas
and
popf
sbb
fstps
aaa
sarl
inc
cvtdq2ps
adc
adc
out
sub
and
xlat
pop
mov
stc
inc
add
movsl
pop
imul
mov
xor
inc
sbb
xor
repz
repz
out
jns
mov
mov
add
cmc
adc
sti
es
mov
xchg
xchg
sahf
pop
imul
test
mov
mov
or
bound
mov
or
or
sub
mov
mov
loope
cmp
mov
test
in
xchg
lahf
in
cmp
mov
inc
pusha
adc
xor
push
in
push
repnz
into
mov
cli
in
das
cmpsb
jp
mov
and
add
cmp
jmp
cmp
sbb
scas
cmpsl
pop
cmp
adc
sbb
test
pop
cwtl
sub
in
into
addb
std
aaa
dec
or
cld
out
adc
lahf
out
pop
daa
push
iret
jmp
xchg
or
and
popa
stos
jnp
mov
pop
dec
iret
sahf
lahf
dec
sub
mov
sub
or
cmp
pop
and
adcb
lret
add
int
fldcw
push
mov
movsl
mov
cmp
inc
fldenv
or
jle
sbb
fs
popf
jno
sbb
pop
daa
push
cli
orb
sti
arpl
pop
movsl
add
pop
addl
ret
int
dec
mov
sti
sahf
xchg
push
stos
fbld
lahf
ds
dec
test
inc
xor
adc
sbb
sbb
arpl
outsl
sahf
into
mov
and
dec
mov
ret
clc
adc
dec
popf
pop
jmp
or
imul
leave
repz
xor
btr
and
test
pop
pop
push
fisubs
pop
jb
in
cld
jecxz
push
loop
mov
mov
pop
insl
addr16
nop
push
pop
aas
inc
mov
sti
dec
jp
cs
mov
out
aad
add
mov
add
int3
cmpsl
jns
notl
out
mov
dec
in
aas
mov
loope
aad
dec
adc
hlt
sbb
mov
testb
dec
call
pop
jb
lcall
sub
add
sub
sub
outsb
adc
xchg
outsb
out
mov
aam
xchg
lret
mov
js
aad
mov
and
xor
mov
lods
add
clc
mov
mov
and
mov
out
mov
xor
pop
cmp
ret
pop
mov
bound
push
imul
sub
data16
dec
mov
leave
fldl
out
push
in
ja
lods
inc
gs
or
out
enter
pop
lret
popa
enter
add
cwtl
orl
inc
xor
sbb
movsl
pop
add
dec
test
cmp
data16
hlt
fs
jmp
xchg
or
sub
lea
rcrl
into
mov
jp
xorl
das
shll
xchg
clc
int3
push
or
ror
pop
in
inc
mov
jmp
inc
inc
push
mov
std
gs
cld
jmp
dec
inc
or
out
jnp
je
and
xor
xor
push
sbb
out
int3
out
push
pop
fxch
fwait
lock
xor
dec
out
add
sbb
push
loop
inc
inc
lret
cmpsl
stos
jnp
mov
mov
les
mov
jge
push
add
push
inc
out
loope
mov
mov
gs
outsb
jecxz
mov
orb
call
sub
mov
inc
lret
and
aam
or
in
cmpsl
mov
cmpb
jg
jne
pusha
or
cld
fs
movsl
xcrypt-cfb
cmpsl
out
pusha
nop
pop
fidivrl
push
jp
cmpsl
xor
fistps
sub
adc
lcall
jge
leave
push
inc
les
ds
imul
arpl
and
std
cld
lds
xchg
jae
outsb
dec
push
enter
das
and
in
outsb
add
sbb
sbb
in
push
aad
inc
int
sub
lret
inc
adc
push
and
jnp
mov
mov
jle
add
std
filds
jne
rcrb
mov
sti
lea
repz
dec
leave
mov
cmp
int3
stos
pop
outsl
jns
and
adc
rorb
testb
outsb
lret
cmp
cmp
js
pop
pop
andb
and
jecxz
sbb
cli
lods
cs
dec
outsl
jge
dec
push
xor
jo
sub
mov
lret
loop
dec
fucomip
add
mov
cmc
lcall
mov
jmp
sub
push
dec
or
fwait
les
pop
adc
sub
and
mov
jg
in
popf
loop
xchg
lret
fistpll
xchg
fstp
push
and
movsb
mov
cmpsb
add
in
test
outsb
mov
sti
xchg
mov
into
arpl
inc
sub
fcmovnu
add
inc
lock
jno
lcall
mov
cmp
dec
pusha
jg
xor
fs
int3
sub
test
shll
xchg
jo
cmpsw
shl
dec
sub
xchg
push
dec
mov
out
sbb
cwtl
je
pop
test
in
loopne
les
rcr
push
pop
cmp
and
data16
sbbl
cld
repnz
lea
mov
mov
xor
cld
imul
cwtl
mov
in
xor
stos
sub
cmp
imul
fcoml
je
repnz
adc
push
aam
into
mov
xor
stos
enter
loopne
sub
xchg
lcall
ljmp
bound
mov
adc
out
daa
inc
cmp
jmp
ret
mov
fildll
sub
add
test
scas
mov
pop
sub
xlat
inc
xchg
push
in
xor
shrl
mov
les
xchg
sub
xlat
sub
out
in
push
xchg
or
add
ret
push
push
dec
dec
jg
ljmp
adc
test
orb
cmp
or
or
outsl
addb
and
daa
rcrb
in
add
bound
sti
cmp
cmp
xor
inc
push
xor
xchg
fidivl
cmc
repz
adc
repz
out
into
and
push
addr16
push
lea
fildl
xor
xor
dec
xor
insb
inc
into
mov
rcll
pop
clc
scas
ficoms
jne
mov
cmpsb
pop
call
repnz
mov
sbb
cmc
xchg
xor
pop
pusha
or
cli
xor
fildll
inc
ror
stc
inc
sbb
and
loop
imull
jbe
test
or
std
mov
stos
call
outsb
andb
stc
add
or
pop
sub
icebp
lret
mov
cs
mov
loope
mov
mov
in
push
add
dec
sub
push
jecxz
cmc
gs
stos
add
fs
aas
test
pop
inc
pop
mov
out
and
push
int3
js
pushf
dec
push
shrl
imul
clc
jecxz
mov
pop
lds
jne
add
cmc
jo
shlb
mov
movsb
int
ret
ja
mov
stos
add
pusha
jno
clc
mov
xchg
mov
push
pop
data16
jno
push
jbe
adc
lret
insl
in
out
jg
and
lds
mov
loope
and
bound
sub
repz
mov
inc
test
sub
xor
sub
mull
or
pop
aam
jns
dec
leave
push
cli
mov
jb
adc
jp
gs
into
add
hlt
mov
repz
jge
sti
sbb
test
push
test
rcrb
fdivs
cld
push
fistps
jl
pop
xchg
pop
clc
mov
lret
jg
out
mov
mov
aad
sub
inc
jno
adc
repnz
adc
out
add
jmp
mov
xchg
aad
outsb
xchg
and
ljmp
arpl
dec
fdiv
mov
mov
sbb
jne
lret
jns
cli
inc
popa
xchg
and
inc
or
dec
clc
into
daa
in
inc
xor
push
cmp
stc
in
call
ret
adc
test
data16
fstpt
or
mov
xchg
ror
lods
out
jae
mov
outsb
and
push
cmpps
xor
mov
adc
or
stc
mov
push
cmp
cwtl
dec
cld
ss
leave
pop
imul
lods
sbb
mov
pop
cmp
push
lahf
icebp
pop
icebp
data16
loop
or
divb
mov
lods
fs
stos
mov
ds
leave
leave
daa
pop
jb
cmpsb
or
pop
pop
sbb
mov
cmp
push
sub
adcl
or
ja
mov
bound
out
sub
fcoml
data16
lods
scas
add
jecxz
insb
mov
push
test
mov
dec
hlt
sub
xlat
lea
imul
pop
add
movsb
sbb
out
lahf
inc
mov
sub
insb
mov
push
lcall
aaa
dec
ljmp
and
pop
dec
or
dec
or
or
jo
popf
aam
push
mov
imul
outsb
ret
jmp
ficomps
rorl
mov
dec
clc
ja
cmp
xor
push
dec
inc
add
sbb
or
sbb
cltd
test
push
jmp
ja
scas
jbe
fs
fwait
xchg
into
sub
mov
sbb
nop
lret
push
mov
in
movsl
mov
out
add
xchg
leave
repnz
imul
cmp
out
adc
mov
cmp
push
xlat
lods
mov
mov
sar
aam
gs
lods
adcl
iret
dec
aam
inc
push
jecxz
mov
push
xchg
add
mov
xor
je
push
es
je
jge
sahf
nop
cld
cmpsb
jp
sub
mov
popa
lea
pop
jge
mov
cmpsb
pop
jns
dec
test
pop
ds
mov
dec
dec
enter
out
mov
and
dec
mov
inc
sub
inc
loop
int3
iret
mov
inc
dec
mov
jno
adcb
iret
outsl
mov
fs
cmp
dec
cld
test
adc
gs
inc
movsb
sub
pushf
jno
pop
xchg
pop
nop
testb
dec
sub
adc
mov
sahf
jbe
jae
cld
fisttps
inc
insl
dec
cli
xchg
xor
pop
ret
adc
rclb
xacquire
mov
jmp
mov
sub
jmp
nop
pop
xchg
adc
sarb
js
xor
cli
hlt
add
out
jge
inc
jg
addr16
dec
or
sub
mov
jge
push
and
add
add
dec
xor
sbb
dec
or
rcrl
sarl
sar
aad
pushf
fdivrs
xchg
inc
stos
leave
push
sbb
movsb
popf
enter
iret
pop
cmp
sub
inc
jmp
repnz
xchg
mov
jno
jmp
testl
mov
dec
je
cld
mov
stos
push
cmp
pop
fistpll
fsts
ds
mov
xchg
adc
cmp
sti
push
ret
rol
movsb
clc
jbe
arpl
jmp
cli
cmp
mov
hlt
pusha
cmc
cmp
mov
jp
push
nop
insl
std
insb
sub
sar
mov
xor
fsubrl
mov
mov
icebp
sub
and
stc
cmp
xor
pop
cmp
outsl
xor
dec
cld
adcb
test
in
shll
xchg
int
jle
or
jp
mov
xchg
incb
movsl
sub
xor
adcl
mov
xchg
dec
imul
pop
or
pop
in
add
fs
shrb
mov
scas
popf
mov
sub
push
jae
pop
fs
sub
mov
mov
cmp
inc
out
aas
mov
es
in
cs
and
mov
stc
mov
dec
aam
pop
jns
retw
push
pusha
mov
outsl
or
into
bound
mov
push
repnz
fdivr
adc
adc
pop
xorl
out
pushf
out
lret
aas
sub
je
mov
es
mov
cmp
test
or
pop
push
pop
pop
dec
pop
fwait
in
xchg
and
and
sub
test
xchg
ss
sub
clc
rolb
sub
imul
or
adc
cs
int3
popf
mov
into
push
daa
adcb
aaa
mov
sub
mov
in
ljmp
flds
outsl
bound
pushf
in
jmp
cmp
jb
xchg
ret
jae
fistpll
add
xor
lret
imul
fiaddl
cld
sub
jecxz
cmp
lds
dec
mov
leave
inc
mov
or
int3
outsl
mov
aam
std
sbb
negb
push
sbb
lock
in
aam
mov
test
and
push
inc
mov
shrl
ret
push
ret
shll
lret
out
stos
scas
pusha
nop
js
or
add
cmp
sbb
ja
sub
mov
testl
or
mov
cmp
out
sbb
adcb
iret
mov
mov
dec
in
jo
mul
outsl
sub
sbb
adc
sti
lahf
repnz
mov
mov
lahf
cmp
mov
and
fimull
xchg
mov
bound
xchg
insl
clc
dec
jo
xchg
and
imul
jne
cs
xor
mov
xchg
cwtl
push
fisubrs
sbb
jns
xchg
pop
sub
pop
pop
sub
cmp
rol
int3
push
or
inc
imul
xchg
pop
xorb
shr
mov
add
bound
sbb
std
imul
mov
test
pop
cmp
popf
jecxz
mov
out
fs
cmp
adcl
mov
in
call
mov
cmpsl
cmp
lahf
push
sbbb
imul
out
cmc
and
rol
rolb
jp
std
push
loopne
mov
scas
sub
insb
popf
dec
pop
lcall
ja
ret
add
sbb
fcmovu
bnd
lods
addr16
leave
gs
mov
xor
adc
push
mov
sub
test
in
lret
ljmp
aad
adc
ret
fldt
icebp
adc
pop
arpl
add
imul
into
inc
mov
test
adc
dec
enter
xor
add
lcall
rclb
push
add
xchg
pop
sub
aad
cmp
test
orl
popa
sub
cmp
ffreep
mov
aad
cli
lcall
pop
repnz
pusha
xchg
cld
lcall
pushf
outsb
mov
jmp
cs
bnd
scas
dec
leave
mov
aas
dec
icebp
inc
xchg
in
mov
inc
in
jnp
movsb
cmc
inc
iret
out
xlat
dec
arpl
push
cwtl
lcall
les
cmp
push
pop
dec
js
inc
ljmp
frstor
adc
mov
sub
xor
popa
loop
fstl
xchg
cli
cmp
dec
mov
and
outsl
sub
leave
mov
rcrb
je
jb
mov
inc
mov
jecxz
fucomp
jb
sub
mov
icebp
cmpb
pop
cmc
mov
push
dec
push
push
push
and
add
repnz
out
xchg
push
cmpsb
cmp
dec
jmp
sti
leave
mov
mov
pop
mov
cmpsb
hlt
fildll
dec
xor
test
stos
cmp
cmpsb
sbb
sub
add
push
gs
mov
xorb
movsl
xor
fists
adc
pusha
mov
repnz
mov
into
mov
mov
in
lahf
sub
decb
sub
add
xchg
sahf
sbb
scas
cmc
add
nop
ja
mov
lahf
xor
bound
jge
add
xchg
adc
iret
je
insl
mov
stos
mov
xor
push
sub
cmpsb
test
dec
xor
xchg
sub
push
sbb
inc
add
icebp
imul
lea
adc
ja
scas
pop
push
cmp
adc
icebp
push
push
mov
inc
in
inc
shrl
shr
or
push
mov
jb
ret
jmp
leave
xchg
std
orb
insl
mov
push
sbb
into
rol
mov
ljmp
fbstp
lods
aam
xchg
out
jb
cmc
mov
xchg
mov
xchg
mov
stos
fstpl
xlat
stc
mov
sub
lea
add
push
mov
or
dec
imul
jg
movl
cli
cltd
in
cmp
arpl
dec
xor
mov
loop
pop
int
push
pop
pop
lcall
push
cmpb
inc
popf
cmpsb
in
dec
test
jbe
xchg
inc
xchg
mov
lcall
adc
adc
ja
xchg
popf
xchg
int
pop
adc
int3
jno
pop
jg
jl
inc
jle
orb
ret
jbe
orl
cmpsl
xchg
dec
inc
push
ret
xor
lcall
push
adcb
js
addr16
jno
adc
fidivl
fnstcw
in
inc
mov
xor
jle
xor
repz
dec
lds
xchg
ret
adc
push
jl
xor
sbb
int3
pop
mov
hlt
insb
or
loop
xor
pop
pop
dec
out
pop
mov
fistpl
lds
pop
sbb
add
jae
dec
insl
push
xchg
aad
popf
mov
add
mov
dec
or
pop
mov
jmp
dec
mov
loop
add
jmp
jnp
jmp
pop
stos
xor
test
adc
ja
lds
dec
jno
jg
outsb
ret
test
push
popa
incb
mov
xchg
and
call
pop
sbb
push
mov
mov
movb
enter
inc
dec
sbb
popa
cmp
xor
mov
push
inc
cs
leave
jae
movsb
pop
stos
pusha
pop
mov
stos
popa
xor
mov
cmp
or
fwait
int
push
jp
mov
xchg
mov
pop
sbb
cmp
xchg
push
push
loop
add
inc
mov
adc
xchg
pop
sbb
mov
push
cmc
or
ja
mov
inc
dec
aas
test
mov
ds
lods
push
mov
adcl
loopne
mov
lods
out
fstpt
sbb
xor
xor
add
lock
je
lods
and
das
cs
inc
fstpl
mov
push
and
push
mov
ds
insl
or
xor
pop
mov
or
nop
popa
dec
adc
jl
cmpl
mov
dec
pusha
mov
cmp
rcrl
and
imul
xchg
add
xchg
mov
mov
les
sub
xchg
in
arpl
and
or
lret
sub
cmpl
mov
dec
adc
daa
mov
mov
int3
pop
test
sbb
xchg
adc
sbb
cmp
out
sbb
test
das
jl
adc
push
pop
sbb
fcoml
mov
sub
aas
aaa
lods
xor
das
arpl
leave
mov
leave
out
mov
lods
out
mov
pusha
shufps
ds
lea
out
bound
dec
icebp
pop
jnp
adc
in
dec
call
pusha
jle
mov
les
xlat
icebp
out
inc
mov
push
out
pop
mov
ret
xchg
cmc
repz
sti
add
loopne
mov
ljmp
push
inc
mov
sarl
cs
stc
sbb
dec
sub
ds
add
fisttpll
pop
into
jno
nop
pop
dec
adc
gs
push
and
mov
cwtl
bound
dec
cld
add
pop
cmpsl
sub
xchg
pushf
push
fldcw
hlt
loopne
xchg
xchg
dec
idiv
cmc
mov
and
add
out
cltd
call
add
mov
inc
insb
xor
fdivrl
ds
sbb
adc
nop
out
leave
or
mov
ds
in
scas
test
sbb
popf
scas
xchg
mov
jg
js
in
sahf
dec
pop
mov
sub
movsb
ds
mov
adc
push
sbb
lret
rcrb
cmp
sub
popf
fstpt
jne
scas
push
sub
andb
std
int3
adcl
mov
adc
data16
aad
out
cld
or
lcall
mul
and
mov
cli
and
cwtl
out
jno
pop
or
dec
in
push
mov
fwait
inc
add
clc
rolb
in
outsl
sbb
shlb
ds
push
jae
mov
popf
fisttpll
pop
cli
fstpl
and
orl
pop
js
outsb
jge
out
inc
pop
pop
test
fsubl
push
aas
inc
aas
fsubs
aaa
fucom
mov
insl
xchg
int
jle
pop
cltd
pop
subb
fs
aad
xlat
xlat
aas
mov
stos
in
cmpl
xchg
sub
cs
shll
ror
out
hlt
dec
pop
leave
cmp
sub
cmp
pop
insb
in
shrl
cmc
les
cwtl
stc
jp
or
adc
cmpb
mov
arpl
daa
bound
sub
mov
roll
pusha
add
sub
inc
in
pop
cli
jne
pop
loopne
jl
jo
jnp
add
and
sahf
inc
rolb
jecxz
pop
jmp
movsl
jb
push
cmp
clc
jae
imul
cmp
sub
orl
add
cmp
cmpsl
pop
repnz
call
mov
push
adc
test
jo
mov
enter
mov
mov
adc
fstl
adc
push
dec
pop
ja
or
cltd
dec
iret
arpl
xor
adc
outsb
xchg
lea
je
mov
xor
les
loope
out
inc
push
stc
icebp
in
mov
xchg
mov
push
jmp
xor
cli
push
pop
add
iret
cmc
adcb
cmp
cmp
cs
test
mov
mov
cs
mov
jb
push
push
movsl
aaa
jecxz
inc
mov
stc
jbe
push
mov
pop
adc
pop
lock
adc
mov
leave
cmp
aad
inc
mov
pop
cmp
push
sub
sub
mov
jmp
stos
and
cmp
push
mov
or
fwait
push
fstpt
inc
loope
mulps
ljmp
shrl
push
fucomip
or
cmpsl
xchg
stos
push
in
jmp
adc
dec
sbbl
sahf
cmpl
pop
mov
jmp
jo
cmpsb
adc
cwtl
out
aas
and
push
sbbb
cmp
inc
xchg
in
inc
jae
mov
mov
repnz
iret
roll
dec
cmp
outsb
test
lods
cmp
test
sub
or
push
xchg
shlb
call
jns
jg
in
push
lds
jecxz
iret
and
push
stos
adc
cmc
jno
cmp
hlt
cmc
xor
or
bswap
and
div
sbb
int3
xchg
sub
les
or
js
push
and
jo
lcall
or
mov
fs
pop
ret
xor
insb
jmp
aas
popf
aad
add
mov
into
fnstcw
cld
stc
xor
jle
sub
mov
sub
mov
stos
leave
jb
imul
cld
push
jbe
cwtl
test
jno
mov
ss
or
push
cmp
mov
ds
imul
fnsave
add
in
xchg
cli
cmp
movsl
inc
or
cmpsb
into
stos
lds
out
jae
add
sub
xchg
sbb
or
add
cmc
xchg
dec
xlat
cs
xor
repnz
mov
pop
mov
jnp
and
push
xchg
test
out
dec
mov
aam
and
mov
repnz
lock
adc
push
bswap
jo
cmp
movsl
dec
mov
int
sub
push
adc
or
jbe
aaa
in
push
dec
xchg
or
jl
dec
mov
pop
jge
sbb
aad
clc
adc
mov
add
jecxz
mov
inc
jb
push
repz
enter
jb
mov
mov
and
push
xchg
lret
leave
sub
inc
jmp
inc
out
popa
ljmp
mov
sar
mov
nopl
int
push
jg
cmp
repz
loop
jge
shl
out
pop
add
adc
movl
pop
sbb
lods
cmpsb
xor
aam
aas
gs
and
loopne
cld
pop
cs
gs
jmp
push
fs
stc
bndstx
add
popf
adc
fwait
pop
jne
inc
adc
addr16
shufps
pop
xchg
daa
aad
xchg
popa
dec
sub
sbb
adc
mov
imul
dec
js
in
pop
pop
stos
pop
fidivrs
sub
xor
or
js
stos
dec
jb
cmp
out
sahf
out
push
push
add
xchg
scas
subl
push
sbb
cld
sbb
mov
ds
push
sbb
mov
addr16
lahf
pop
push
stc
adc
xchg
cmpsb
mov
test
mov
bound
cmp
cmpsb
leave
lahf
xor
xchg
jp
sbb
test
add
sbb
imul
daa
adc
lods
jecxz
jb
addr16
xor
sbb
xchg
stc
mov
and
dec
xchg
mov
scas
lock
test
fistps
clc
popa
push
rcrl
and
mov
cmpsl
out
fildll
into
xor
xor
por
mov
call
mov
mov
iret
mov
arpl
xor
push
cltd
cmp
and
jp
jmp
je
mov
add
mov
jae
push
lea
push
cmp
imul
pop
xchg
in
adc
and
cmp
sub
jmp
outsb
pop
dec
or
push
stos
or
lock
xor
mov
xchg
mov
add
mov
ror
sbb
or
inc
leave
js
mov
icebp
mov
push
sbb
mull
bound
push
mov
dec
cmp
adc
jbe
sarl
inc
sbb
iret
popa
mov
sbb
js
xchg
dec
sbb
push
xlat
cmp
je
enter
repz
sub
test
arpl
popa
mov
xchg
jnp
ficompl
addr16
jne
mov
das
sub
sbb
leave
sti
pop
loope
adc
les
clc
mov
sbb
js
add
dec
test
jg
sti
sub
int3
push
out
adc
cmp
adc
mov
jno
jp
test
cmp
pushf
push
ljmp
ljmp
out
push
stc
xlat
loopne
gs
jae
loopne
mov
out
push
push
sub
cmp
jmp
dec
dec
jl
lahf
mov
adc
xlat
stos
mov
hlt
mov
mov
ds
addr16
fldcw
pop
in
xchg
pop
push
lret
int
mov
int3
rorb
and
mov
in
lret
shll
and
adc
adc
mov
xchg
jg
mov
popa
lcall
out
fildll
sbb
inc
int3
pop
pop
mov
sbbl
fwait
pushf
idiv
outsb
imul
repz
hlt
mov
jns
lcall
push
adc
cmpsl
movsb
sub
gs
push
leave
sti
mov
mov
pop
jae
jmp
loope
rcr
in
call
sbb
test
pusha
jg
fsubrl
fsubl
mov
mov
ret
movsb
in
sbb
mov
ljmp
sahf
push
jmp
sarb
sbb
insl
cli
xor
cmp
shr
lods
sbb
jae
rorl
mov
jecxz
daa
shll
out
and
pop
das
inc
mov
jle
cmp
mov
sbb
push
pop
lcall
jmp
and
jg
daa
scas
dec
outsb
sbb
bound
stc
dec
clc
lahf
pop
data16
lock
xorb
fildl
xor
jae
loope
fldenv
xlat
aaa
adc
repnz
outsb
shll
xchg
pop
sti
and
jp
mov
and
orb
mov
xchg
fmull
fcoml
bound
adc
sbb
cmp
inc
mov
in
mov
jb
cli
add
stos
jns
imul
sahf
pop
ficompl
rorb
cmp
fs
das
mov
clc
push
in
testb
rclb
outsb
ja
shlb
push
jmp
insb
sbbb
rcll
jl
out
dec
xchg
int
mov
adc
out
xchg
out
mov
aaa
pop
inc
pop
imul
push
es
loopne
outsb
test
add
push
sbb
mov
xor
xchg
cmc
xchg
and
or
lock
mov
xchg
sub
fs
push
and
int
scas
add
icebp
in
sub
pop
fs
mov
rorl
jns
ja
mov
lods
lods
xchg
inc
call
sub
xchg
imul
jns
cmpsl
pop
cmpsl
jo
lahf
stos
adcl
jno
push
adc
dec
clc
or
idivb
sbb
sub
loop
bound
adc
sub
andl
in
push
lcall
add
pusha
rcr
dec
das
mov
fcomps
cli
or
jbe
pop
cmp
sbb
jmp
mov
in
das
fyl2xp1
jnp
mov
push
in
cmp
iret
in
aad
aad
lock
cmp
push
mov
adc
imul
push
cmpsl
test
das
jge
mov
jne
fdivrl
shlb
jge
push
out
call
pop
ljmp
into
data16
popf
jae
or
or
push
and
mov
push
add
insl
cmp
pusha
pop
arpl
xor
cmp
cmp
jg
cmp
inc
inc
lret
push
loope
mov
cmp
test
subb
popf
inc
pop
arpl
sub
add
jb
enter
popf
jne
and
ret
mov
cmpsl
std
mov
sub
test
jo
shll
dec
lret
aam
mov
xchg
mov
scas
jp
adc
cltd
imul
movsl
or
lods
push
cltd
mulb
insb
mov
cmp
mov
jmp
add
cmp
insl
repnz
clc
ljmp
les
in
push
mov
or
pop
mov
jno
xchg
cmp
mov
testl
cmp
mov
outsl
cwtl
mov
cmp
sbb
out
mov
and
ret
mov
out
loop
imul
int3
or
popf
fdivr
popf
je
or
repz
xor
adc
mov
jle
push
xor
sbb
cmp
mov
mov
lods
lcall
lcall
add
imul
or
pop
fimull
out
pop
ja
inc
adc
adc
into
int3
nop
mov
push
es
push
dec
push
icebp
adc
clc
fcmove
jle
int3
sbb
insl
dec
add
inc
push
js
lods
lods
cmc
test
add
popa
xchg
push
add
setge
loope
rcr
ja
inc
fmul
scas
xor
adc
mov
push
and
pop
jmp
jecxz
mov
jge
mov
jb
pop
cld
push
mov
ret
or
leave
push
out
mov
repz
scas
ss
aam
or
xchg
daa
sbb
loope
es
popf
icebp
out
xor
stc
cmp
sahf
cmpsl
in
pop
and
std
xchg
repnz
loope
pop
sti
pop
mov
or
jp
fwait
test
mov
or
test
fisttpl
pop
jmp
xor
lcall
mov
or
ja
or
cmp
int
aas
and
cmp
xor
aam
push
sub
cmc
cmc
andl
or
lea
dec
imul
xchg
mov
test
shl
xor
dec
imul
stos
out
sbb
mov
push
arpl
sub
sti
cmp
inc
stos
jns
mov
imul
adc
ret
dec
pop
data16
aam
mov
push
xchg
test
jae
mov
jbe
inc
mov
and
push
clc
lods
jle
push
push
fidivl
cmp
int
lds
pop
inc
xchg
es
mov
imul
lcall
mov
mov
idiv
scas
push
jnp
xor
sub
inc
xlat
jb
test
xlat
repnz
nop
insl
pop
jle
push
cmp
pop
push
xchg
inc
andl
mov
inc
idiv
push
mov
cmpsl
xchg
hlt
push
cmp
jno
rol
mov
movsl
mov
cmp
mov
mov
sub
and
jbe
push
inc
or
movsl
jmp
push
in
cmpsb
mov
mov
inc
mov
push
adcl
es
sahf
pop
jle
xchg
loope,pt
out
push
fcoms
add
push
lret
xchg
mov
lds
mov
sbb
ds
pop
cmp
and
das
sahf
in
arpl
mov
fdivrl
jns
or
imul
mov
xchg
sbb
mov
pop
and
inc
scas
es
pop
xor
sbb
mov
sbb
scas
adc
stos
jle
pop
filds
shrb
sub
cmpsl
mov
gs
xor
repz
sub
pop
inc
and
and
xchg
js
mov
mov
stos
insl
shl
dec
mov
cmp
dec
push
inc
cmp
or
adc
mov
add
leave
xor
xor
mov
pop
pop
lret
gs
inc
fidivrs
jle
sub
ficoml
xor
push
pop
mov
push
aas
push
xchg
and
xchg
js
sbb
adc
pop
sub
jmp
mov
xor
inc
mov
ret
out
cli
sbb
adc
test
push
fidivrl
mov
pop
pushw
sbbb
movsb
add
ret
inc
popf
pop
dec
loope
nop
das
or
jge
lds
notb
fmull
push
enter
dec
or
or
sub
jp
les
outsl
je
adc
xchg
jge
pop
adc
and
pop
jb
out
movsb
negl
fcomps
repz
int3
cmp
mov
iret
mov
cli
add
cld
call
inc
dec
js
ljmp
hlt
loope
shll
jnp
mov
cmp
clc
les
dec
push
mov
or
pop
lods
xchg
jb
cwtl
cmpsb
add
sti
int
or
or
jns
mov
or
mov
pop
sarb
gs
or
and
or
pop
mov
push
jo
mov
out
movsl
in
lahf
sub
adc
out
fcmovbe
xchg
cld
into
mov
add
shl
pop
pop
push
sbb
dec
int
mov
outsl
in
jae
stos
mov
push
mov
cwtl
into
pop
outsb
jp
sub
leave
cmp
dec
int3
repz
ret
dec
push
rorl
gs
pop
notb
sub
aam
rorl
out
xor
cmc
shrl
push
push
sub
das
pop
jns
dec
insb
xor
jbe
rcrl
imul
jbe
repnz
sub
mov
call
stc
jns
jo
sub
pop
push
dec
gs
add
mov
lahf
dec
mov
cmp
call
fdivl
inc
loop
or
pop
cmp
ja,pt
mov
movsb
rol
hlt
fildll
dec
jno
pusha
mov
push
push
xor
or
sub
pusha
int
sbb
fiaddl
dec
rcll
sti
cmpsl
movb
mov
push
push
jae
push
pop
daa
inc
sti
mov
fstpt
repnz
iret
mov
add
gs
fs
inc
adc
xchg
sti
test
fs
fistpll
mov
test
push
bound
mov
sub
cwtl
outsb
insl
sbb
mov
xor
dec
in
ret
and
adc
loope
or
scas
and
fbld
dec
mov
mov
out
mov
jmp
dec
or
dec
push
dec
jl
lret
call
int
inc
ret
fs
and
test
ret
mov
jp
mov
add
mov
jmp
scas
and
adc
jle
mov
hlt
in
pushf
clc
popf
loope
sub
jns
aad
mov
ret
in
mov
pop
popf
test
ror
jbe
lock
ja
pop
or
das
xchg
sub
dec
movsl
sbb
sub
mov
jge
ror
mov
xchg
es
mov
insb
pop
cmp
pop
push
shll
lret
and
dec
fldl
mov
ljmp
loop
jae
xchg
push
iret
imul
gs
xchg
ja
shlb
jne
mov
xchg
movq
fnstcw
nop
xchg
mov
and
jno
and
cli
insb
mov
dec
xor
arpl
and
cmp
mov
push
popf
sub
mov
inc
xor
lcall
push
xor
mov
push
aas
out
mov
xchg
icebp
jb
jne
daa
jno
stos
inc
and
lea
jle
in
add
push
or
fadd
pop
mov
jo
test
mov
pop
popa
div
decl
mov
add
bound
pushf
xchg
dec
push
aam
sub
and
xor
ljmp
pop
fimuls
mov
pop
stc
push
or
push
mov
cmp
jmp
movsb
test
xchg
xor
mov
or
sbb
outsl
jae
xor
daa
stc
out
aam
jg
ret
movsl
lods
int
xchg
or
in
add
divb
or
pushf
int
pushf
sarb
pop
mov
cmpsb
xchg
sub
mov
std
mov
hlt
add
xchg
cli
lods
nop
cli
sbb
adc
fildl
jns
push
xchg
xor
adc
test
mov
dec
sbb
dec
ja
clc
xchg
cli
sbb
fstpl
sub
cmp
cmp
pop
adc
mov
mov
pop
jle
je
mov
stos
lods
adcb
sahf
cmpl
sub
js
lcall
sbb
lret
repz
leave
cmc
xchg
in
jl
daa
mov
mov
enter
lcall
sbb
xor
push
rclb
cmp
and
popf
cmpsl
adc
dec
test
sahf
mov
filds
add
add
in
ret
sub
dec
adc
rolb
mov
faddl
jge
cld
movsb
pop
xor
sbb
mov
add
mov
adc
inc
pop
xchg
xor
adc
adc
mov
push
fcomps
cmp
mov
je
stos
adc
dec
in
fcmovbe
fwait
or
in
mov
cs
lret
mov
cmp
sub
int
jb
adc
data16
jmp
jnp
xchg
dec
jns
daa
push
sbb
cmc
mov
flds
push
loopne
insb
test
xor
mov
iret
mov
xlat
add
sub
sub
call
movsb
cmp
rcll
push
pop
loop
stos
cmp
ljmp
and
push
sahf
jne
dec
sub
iret
fwait
mov
pop
dec
scas
xor
mov
faddl
outsb
test
fisubl
iret
sahf
jne
lahf
loop
js
pop
pop
in
add
stos
pushf
sbb
dec
push
pusha
cli
jns
pop
or
in
mov
push
std
push
jg
jbe
mov
cmpsl
inc
dec
jle
out
add
adc
ljmp
adc
aaa
pop
xor
clc
jne
dec
ficoms
xor
ret
adc
pop
aam
adc
mov
nop
mov
adc
js
gs
and
int
jl
out
sbb
cwtl
out
dec
push
cmpsl
add
sub
mov
pop
sub
cmp
cmp
xor
andl
xor
mov
dec
pop
ja
loop
mov
mov
cltd
insl
call
add
cmp
fnsave
fwait
jge
lea
mov
xchg
loope
movl
jae
dec
xor
fwait
in
out
loope
or
pop
cmp
pop
imul
xchg
ret
xor
movsb
int3
scas
dec
lahf
xchg
jl
jbe
sbb
xchg
loop
sahf
cwtl
repz
push
stos
add
popf
add
shlb
dec
dec
jl
mov
mov
fldcw
push
jmp
fwait
sub
inc
ret
mov
aam
dec
jl
dec
jnp
adc
or
mov
sti
fiaddl
fwait
aas
xlat
fildll
imul
bound
mov
push
xchg
pop
mov
xor
ror
pop
cmp
mov
mov
sbb
mov
imul
and
les
cmp
leave
push
sub
ss
cmp
or
mov
mov
mov
mov
enter
or
jnp
xor
ficomps
stc
pop
scas
pop
daa
mov
add
imul
xor
popa
sub
pop
pop
sub
add
sub
xchg
loopne
jge
ljmp
jg
test
aad
xchg
fucomip
mov
leave
sub
mov
add
jo
out
inc
shlb
lods
inc
pop
iret
loop
fbstp
hlt
and
outsl
push
int
jp
xchg
and
loop
xchg
enter
or
je
inc
cmpsb
pop
push
adc
ret
jns
mov
sub
xor
adcl
push
push
sub
fsts
cs
mov
and
sbb
jmp
sub
jp
pop
or
push
and
or
push
out
or
outsb
xchg
daa
jne
sbb
mov
pop
lock
xor
inc
nop
or
mov
cmp
adc
aad
pop
sub
mov
push
mov
mov
pop
lods
popf
lods
inc
and
aad
rolb
mov
inc
mov
mov
inc
cmpsb
repz
xchg
cld
mov
in
mov
and
mov
jo
xchg
jg
imul
pop
pop
sarb
jnp
pusha
pop
push
cmp
push
int3
out
xlat
dec
pop
sub
add
push
dec
or
std
dec
fs
notl
mov
js
and
jg
sarl
insl
call
lea
lods
subl
sbb
into
ds
outsl
cmc
xchg
cmpsb
ret
push
iret
dec
test
in
adc
push
aas
xor
repnz
sbb
sub
lcall
dec
push
pushl
scas
dec
lahf
clc
sbb
adc
push
orl
jnp
mov
es
jno
mov
je
in
jmp
sbb
pop
mov
pop
dec
js
adc
popl
jp
add
lcall
cmp
dec
push
movsl
mov
sbb
bound
push
adc
or
jmp
sbb
pop
cltd
add
daa
push
jl
xlat
icebp
and
es
mov
cmpsl
cmp
test
lock
out
dec
hlt
cli
sahf
or
cmp
dec
mov
add
xchg
ljmp
mov
std
jmp
mov
out
adc
in
xchg
dec
add
lahf
jb
push
dec
push
or
cli
xor
push
outsl
pop
das
in
imul
movsl
leave
clc
int
scas
xlat
mov
push
js
mov
repnz
fbld
jbe
es
mov
add
sbb
pushl
cmp
mov
fisubrs
sti
pusha
leave
daa
add
cltd
mov
cmp
ss
cmp
adc
rclb
inc
test
outsl
scas
int3
push
test
xor
roll
or
jg
dec
shrl
cmpsb
adc
mov
dec
rol
iret
sbb
cmp
lock
inc
mov
lods
and
mov
lock
cli
inc
insb
adc
iret
or
int3
cs
int3
popa
stos
mov
or
jl
js
data16
lahf
pop
daa
test
mov
fcoml
and
dec
insb
ljmp
inc
fidivl
push
enter
les
jg
pop
or
mov
lds
fidivrl
ffree
mov
and
jno
push
out
jmp
dec
jno
cmpsb
rcr
aam
dec
add
jmp
pop
jmp
mov
bound
lcall
mov
jge
sub
sub
inc
ficoms
jl
adc
jbe
call
sub
cmpsl
or
or
dec
mov
xor
pop
cs
xlat
lods
ret
pop
out
daa
icebp
jge
mov
push
jge
pop
mov
cmpsl
iret
inc
das
pushf
mov
sbb
or
int3
scas
dec
lret
adc
pop
mov
cmpsb
mov
int
mov
outsl
push
mov
cltd
or
es
addr16
mov
push
lods
push
shrb
fcoms
or
insb
add
iret
add
inc
mov
inc
xor
mov
lret
jge,pn
jno
cmp
pushf
sarl
mov
inc
pushf
jecxz
mov
lods
std
ja
adc
add
in
lods
adc
lods
fnstsw
lock
outsl
cmpsb
xchg
jmp
adc
dec
or
push
push
xchg
jecxz
dec
popa
stos
loop
dec
popf
mov
sti
test
imul
inc
cmp
loopne
loop
pop
mov
enter
xor
or
push
bound
jb
addl
test
dec
mov
das
and
inc
and
mov
outsb
fadd
fnsave
and
xchg
sbb
mov
jp
mov
stos
fstps
fbstp
pushf
movsb
cwtl
fiadds
pushf
xchg
outsl
mov
hlt
in
lock
inc
lock
movsl
add
add
xchg
mov
jecxz
stc
fs
push
adc
ss
cs
shl
add
scas
jp
cmpl
xchg
scas
or
leave
lret
jge
shrb
loope
mov
xchg
inc
push
xor
cmc
pusha
xchg
push
jae
xor
adcl
dec
inc
dec
ficompl
add
fwait
into
loope
mov
xorl
cmpsl
enter
mov
in
lcall
bound
and
imul
inc
add
cmp
mov
mov
adc
push
outsb
cmp
push
mov
sbb
cmp
popa
rorb
add
or
dec
dec
and
xchg
sbb
test
push
aad
adc
jns
stc
and
jbe
cmp
adc
lods
sub
mov
aas
lea
ret
cmp
xchg
push
adc
jae
bswap
call
jle
pop
sub
clc
daa
insl
subb
pusha
test
cmp
aaa
rcl
xchg
jnp
out
jmp
and
test
loopne
ret
lcall
xchg
decl
mov
cmp
xchg
mov
faddp
fs
sub
fisubl
icebp
jmp
or
jo
scas
cmc
sbb
ja
push
ljmp
loop
xchg
sbb
aam
jb
xor
mov
pop
subl
add
cmp
push
insb
lock
mov
addl
imul
pop
inc
les
jmp
inc
dec
test
mov
popf
roll
cld
fs
jmp
dec
mov
push
sub
and
in
xor
cmp
xchg
inc
cmpb
or
inc
out
arpl
push
aam
nop
iret
pop
sub
inc
popa
cmp
clc
push
into
mov
add
outsb
inc
mov
add
and
xchg
mov
arpl
sbbb
movsl
or
cmc
cmp
iret
sub
cmp
ljmp
repnz
adc
jge
mov
push
add
arpl
out
shrb
or
cwtl
shll
mov
mov
mov
sub
mov
cmp
cmp
cmpsl
dec
pop
sub
iret
or
adc
pop
jne
dec
repnz
cmp
aam
mov
out
in
adc
jp
mov
inc
sbb
loopne
std
std
adc
or
scas
push
ja
sub
popf
sbb
inc
jns
imul
es
cmp
mov
adc
ret
jecxz
popf
hlt
cld
rcrb
xor
adc
cmpsb
call
inc
xor
or
pop
orl
and
je
fistpl
pusha
mul
pop
cmp
push
das
pop
lcall
jg
jns
xor
movsb
stc
test
rorb
stos
stos
xlat
fimull
add
sti
or
clc
push
and
sub
xchg
cmp
fsts
dec
or
orl
lcall
pop
dec
fimuls
aad
adc
jno
les
xor
and
xor
jb
rcll
mov
pop
push
mov
icebp
mov
test
xor
sbbb
pop
lret
nop
sub
mov
jg
popf
cmp
xchg
lea
add
test
in
jo
xchg
push
cmp
outsl
and
es
flds
lret
add
testb
dec
fs
fnstcw
out
mov
repnz
jge
mov
sbb
fcomps
or
shl
push
dec
cmp
cmp
arpl
jb
push
sub
out
dec
scas
pop
jnp,pt
das
imul
sbbl
pop
and
loope
mov
test
xor
dec
and
jp
jmp
es
aad
or
shll
xor
or
pop
pop
fbld
out
xor
mov
insb
xrelease
shll
sahf
sbb
loopne
sub
outsb
jo
shll
adc
clc
nop
xor
xchg
aas
mov
call
sub
fwait
xchg
push
js
add
mov
dec
jg
fcompl
jg
mov
mov
mov
and
call
pop
pusha
lcall
andb
or
call
xchg
test
mov
popf
out
mov
fstpl
cmc
xchg
scas
faddl
hlt
testl
inc
incl
mov
mov
mov
inc
jne
pop
push
cmp
lods
mov
xchg
push
insl
imul
cltd
shl
pop
or
fsubr
inc
clc
add
es
push
lahf
adc
adc
or
jle
notb
in
lea
cmp
jb
jns
aam
out
aas
cmp
xor
rcll
mov
xor
inc
and
div
dec
lea
inc
fmul
test
mov
ljmp
xor
dec
ljmp
ret
xchg
add
add
pop
mov
sub
and
pusha
stc
mov
and
or
sarb
scas
cmp
mov
mov
imul
les
mov
leave
das
xchg
cwtl
pushf
add
lock
insb
nop
in
ja
mov
rcrb
cltd
adc
test
sub
add
sub
js
mov
jle
pop
sub
xchg
stos
mov
mov
cld
mov
int
lods
pusha
cmp
hlt
in
pushf
ljmp
in
inc
push
cltd
jg
pop
das
imul
ja
mov
inc
jne
sbb
jb
mov
cld
out
jl
dec
fcomip
mov
dec
pop
mov
lods
fidivrs
xchg
add
es
jl
cmp
mov
int3
inc
push
int
test
sbbl
aam
xchg
stc
inc
icebp
jg
add
jne
sub
xor
add
mov
mov
in
sbb
inc
and
enter
repnz
std
rcll
repz
add
jg
mov
sbb
cmp
sub
dec
shlb
xor
movsl
dec
pop
ss
sbb
sub
jnp
sbb
in
je
jnp
dec
pop
shlb
inc
xchg
inc
loop
push
and
stc
ljmp
mov
scas
pusha
or
xchg
roll
jle
int
mov
or
mov
les
cmp
dec
loopne
and
cpuid
lock
dec
aad
cmpsl
movb
jmp
adc
repz
dec
out
mov
fwait
lds
xor
ljmp
lret
fisttps
mov
loop
bound
mov
xchg
mov
mov
repz
push
cmp
test
cmp
mov
cwtl
push
dec
fcoms
xchg
lods
pop
jb
pusha
mov
test
jae
stos
cli
push
fwait
jno
out
pusha
mov
sbb
sub
and
mov
push
outsl
add
jae
push
or
ja
xor
or
xor
cs
xor
pop
mov
cwtl
aam
sub
push
jg
dec
jl
mov
sbb
fisttps
and
jmp
xor
fcmovnbe
jb
test
out
adc
inc
adc
inc
dec
lds
ja
sub
adc
scas
test
mov
mov
out
out
loope
cmp
dec
js
icebp
ret
and
adc
and
pop
ja
into
pop
xor
jp
icebp
rcrl
aaa
adc
bound
jp
push
and
sahf
push
xchg
test
jno
xor
mov
sahf
or
and
add
stc
loope
ja
insb
shrb
dec
xchg
aas
mov
inc
mov
les
rcrb
pcmpeqb
int3
mov
sahf
test
push
cmp
mov
mov
dec
dec
aam
pop
jne
add
jg
xor
mov
inc
fisttpl
lcall
add
mov
mov
mov
inc
insl
sbb
orl
mov
aad
dec
mov
lahf
dec
outsb
ja
inc
into
fidivrs
popa
and
dec
mov
call
leave
stc
xchg
add
push
pop
popa
sub
shll
xor
cmp
mov
jnp
cmp
sti
addr16
mov
inc
inc
imul
mov
push
ret
cmp
mov
push
xchg
call
loopne
dec
popa
or
xchg
mov
jmp
imul
int
ljmp
shl
jle
push
fldt
nop
add
decl
into
sub
dec
scas
sbb
nop
or
cmpl
movsl
lret
fcomps
repz
testb
sub
or
lret
add
psubsb
jmp
aam
adc
fwait
inc
xor
xchg
pop
push
cmp
cmp
push
mov
fldcw
in
jg
outsl
lahf
xor
imul
sbbb
in
mov
js
xor
jecxz
jb
sub
mov
xlat
xor
inc
out
insb
pop
hlt
push
outsb
mov
lcall
mov
xor
fsubr
cmp
arpl
or
and
outsb
adc
jl
fst
and
lea
pop
or
or
sub
repnz
mov
mov
sub
les
lods
out
inc
adc
je
xchg
int3
xchg
push
and
aas
rorl
shlb
aad
cli
cmp
pop
call
adc
hlt
dec
ljmp
repnz
pop
mov
pop
ss
adc
shrb
xchg
repz
out
inc
push
xchg
adc
data16
jmp
push
pop
mov
stos
push
shll
test
int
xchg
xlat
or
bound
out
addr16
pusha
mov
mov
ds
popf
inc
push
ljmp
cmpsl
lahf
dec
pop
imul
sbbb
call
je
xor
cltd
lcall
push
bound
pop
xchg
aas
pop
xor
nop
popa
lds
and
adc
lahf
out
cmp
xchg
jg
das
mov
inc
insl
mov
xchg
in
xor
fcmove
inc
jae
mov
outsb
push
pop
icebp
sti
add
xchg
push
je
fdivrs
loopne
push
or
insl
mov
mov
fiadds
dec
inc
out
loope
mov
dec
mov
in
lods
jno
aam
pop
nopl
push
dec
mov
cmpl
int3
out
dec
xor
idivl
pop
xchg
call
adcb
inc
lret
mov
xchg
jmp
jae
or
add
xchg
push
mov
push
cmpsl
xchg
jo
and
mov
push
mov
into
fcomp
mov
mov
dec
iret
hlt
popa
pop
jbe
cmc
test
mov
sub
inc
inc
out
jno
outsb
add
and
arpl
mov
pop
test
in
xchg
mov
jmp
pop
movq
jmp
cmp
stos
add
mov
dec
add
imul
aaa
and
bound
jecxz
inc
mov
xchg
mov
lahf
jl
dec
clc
and
addr16
cmp
xchg
std
xor
push
scas
pop
cmp
sbb
sub
aam
xchg
mov
jp
or
mov
xchg
cmp
lods
jb
add
dec
inc
push
bound
into
pop
jge
pop
enter
movsb
lds
cs
and
mov
fisubs
sahf
add
sub
and
add
push
mov
lcall
mov
leave
mov
inc
dec
fdivs
nop
clc
push
rcrl
adc
inc
jge
mov
pop
jae
std
mov
sbb
adc
cmpsb
inc
mov
das
or
psrld
push
hlt
mov
call
ficompl
gs
pushf
fbld
lock
mov
adc
repz
fistl
xor
xor
adc
or
dec
jbe
fbstp
stos
lahf
adc
into
mov
xor
mov
fisttpl
stc
and
insl
dec
xor
popa
fwait
scas
push
jle
imul
outsb
sbb
rolb
push
pop
pop
lds
cmpsb
sub
push
add
mov
call
jae
stos
inc
fldt
pop
dec
pop
and
jb
mov
mov
repz
test
sbb
inc
loope
in
leave
daa
pop
pop
or
pusha
iret
jae
fwait
mov
call
imul
sbb
cmp
mov
cmp
pushf
mov
pop
adc
adc
loopne
cmpsb
push
push
push
add
sbb
sti
frstor
xor
fistpl
nop
lret
xlat
and
out
pushf
fbstp
cltd
leave
sbb
pop
push
mov
daa
adc
loope
repz
scas
push
or
in
shll
clc
dec
inc
ds
push
pop
and
int
or
fdivr
lcall
popf
dec
or
push
aad
adc
out
fwait
mov
xchg
test
shrb
cmc
dec
xchg
addr16
mov
inc
cmpsb
int3
std
cld
and
lods
sbb
fwait
and
mov
pop
aaa
jno
xchg
cmp
push
in
repnz
pop
incl
or
dec
cmc
fimull
jo
xchg
lods
inc
inc
dec
mov
add
jae
pop
arpl
sub
xchg
sbb
dec
cmpsl
sub
mov
call
pop
movsl
lock
dec
call
mov
out
and
jno
movsl
mov
sbb
sbb
fs
jl
je
cmp
cmpsb
shrl
movsl
or
ds
andl
mov
fsubl
jmp
push
dec
push
cmp
enter
int
pop
loope
decb
inc
mov
xchg
mov
sub
outsl
or
adc
sti
out
xchg
popf
mov
test
mov
mov
lret
lods
dec
jns
jnp
lea
rcrb
add
sahf
push
xchg
loop
aas
std
mov
adc
mov
xlat
xchg
aam
sbb
inc
in
stos
loop
ss
mov
lcall
ds
sbb
in
inc
fwait
ja
mov
subb
fsubs
sub
pop
and
jecxz
push
add
push
mov
jae
icebp
push
shl
lcall
dec
cmp
inc
push
jns
daa
daa
pop
fldenv
and
in
add
jle
je
jns
pop
std
mulb
cwtl
inc
jmp
fcmovbe
ds
push
shr
or
dec
stos
sub
arpl
inc
insb
sti
inc
das
adc
stos
pop
popf
cmp
xchg
cmc
jmp
cmp
mov
out
cmp
mov
fstpl
push
xchg
push
sbb
aaa
sti
push
lret
mov
pushf
inc
mov
jl
data16
lret
jne
dec
adc
inc
or
xchg
xchg
dec
xor
shll
adc
imul
dec
fwait
ja
jmp
and
pop
ja
cmpsb
and
inc
lods
mov
cld
xor
pop
jmp
je
dec
aad
mov
mov
clc
jno
pop
xchg
mov
mov
cmp
lahf
sarb
sysexit
push
push
hlt
repz
jo
adc
ret
scas
sbb
inc
inc
add
and
xor
and
aaa
in
jl
shll
mov
cmpb
pusha
fstpl
sahf
movsl
jae
add
sub
mov
in
daa
sbb
lahf
xchg
imul
add
scas
or
push
push
ljmp
inc
fisubrl
sub
cltd
push
scas
xchg
imul
jmp
mov
and
dec
shlb
nop
xchg
xchg
add
in
test
push
dec
sub
xchg
rcrb
sahf
sbb
mov
notb
inc
add
insl
mov
pop
adc
xor
dec
xor
lock
lock
inc
outsl
mov
sti
out
lret
inc
in
sbb
sub
lods
mov
out
add
jb
out
fstpl
cmp
jbe
dec
out
and
xor
fiadds
mov
or
aam
loope
and
loopne
pop
out
insl
cmp
outsl
sbb
sub
mov
cs
or
mov
jp
ss
mov
push
das
dec
cli
xchg
repnz
mov
jno
iret
and
mov
add
repnz
and
jle
sbb
pop
lock
mov
adc
xchg
aaa
sbb
nop
xlat
adc
inc
push
call
ljmp
stc
or
push
test
iret
mov
loopne
cmc
jnp
jle
shll
mov
jbe
push
jne
mov
push
mov
xchg
fisubrs
push
dec
and
lods
fcmovne
xchg
mov
dec
movsb
std
ret
xchg
aad
insb
sbb
jg
inc
sub
pop
push
dec
int3
out
mov
sbb
ljmp
aas
cmp
imul
daa
or
cltd
out
xchg
jl
pop
inc
jmp
dec
jmp
or
xchg
mov
out
mov
cmc
out
fnstcw
stos
ds
add
cld
add
lock
lea
or
xchg
push
xchg
cltd
scas
inc
sbb
pop
hlt
mov
mov
fstps
shlb
push
sub
jle
xchg
bound
repz
add
or
les
lea
shrl
fmuls
mov
jecxz
inc
call
in
out
cmp
inc
xchg
pop
fsubs
rolb
jecxz
lods
mov
xchg
mov
cli
or
mov
jmp
or
and
inc
cmpb
jmp
and
nop
ds
sbb
pop
in
daa
fildl
roll
lock
mov
adc
sbb
mov
icebp
movsl
push
ja
leave
clc
push
inc
les
ror
xchg
pop
insb
cs
inc
divb
jle
and
pop
or
cltd
mov
pop
xor
nop
testb
or
sti
movsl
stos
or
std
dec
mov
jne
mov
cmpl
mov
addb
into
int
sub
inc
jecxz
sbb
dec
push
add
push
dec
pop
mov
jecxz
lods
iret
ret
mov
xor
mov
pop
and
or
addr16
mov
out
inc
sarl
mov
mov
lods
add
rcrb
lahf
mov
jg
pusha
pop
pusha
push
pushl
mov
add
push
out
xor
and
pop
mov
cmp
ret
inc
leave
rcl
gs
xchg
daa
adc
and
push
push
std
scas
mov
in
jbe
in
or
mov
mov
iret
repz
notb
sub
cmp
or
or
inc
or
mov
and
sbb
sarb
popf
push
xchg
stc
sbb
sbb
shlb
jp
fwait
dec
mov
outsl
and
cld
loopne
pop
xchg
add
fdivrl
sub
push
push
mov
push
sub
xor
or
in
cld
push
cli
cmp
sarb
or
in
cmp
in
sub
ret
dec
and
popf
movsb
adc
jns
lock
inc
js
test
inc
xor
jne
loopne
insb
cmp
adc
loope
dec
orb
jno
sti
mov
test
push
adc
cld
enter
pop
pop
js
insl
mov
ja
add
or
mov
pusha
mov
bound
lret
adc
dec
not
jbe
xor
faddl
mov
lods
push
sbb
mov
fidivrs
adc
imul
and
cmp
std
sub
push
mov
lods
cmpb
pusha
pusha
stc
frstor
cwtl
je
test
out
cmp
xchg
jl
dec
adc
aas
mov
mov
sub
pop
sub
jge
test
cwtl
jne
xor
mov
mov
hlt
dec
fstpl
lds
mov
pushf
dec
lods
adc
rcr
mov
push
push
cli
or
mov
test
das
hlt
or
xor
and
push
loope
lret
pop
adc
test
jb
xchg
push
nop
imul
js
push
mov
je
mulb
xchg
pop
xor
out
pusha
test
subl
push
push
adc
fnstsw
push
sub
dec
xor
jmp
pop
jle
mov
rorl
cmp
or
push
jmp
adc
fsubrs
insb
adc
push
cltd
or
aaa
xor
xor
push
adc
mov
adc
cli
or
aad
dec
movsl
push
mov
popa
xor
aaa
cmp
nop
nop
mov
mov
arpl
ret
in
or
pop
and
dec
sarl
shrb
xor
mov
inc
cmp
cs
mov
and
pop
pushf
push
dec
icebp
ret
jno
cltd
test
dec
cmp
xchg
test
shl
sub
ljmp
and
dec
xchg
or
ds
adc
mov
sbb
pop
stos
ja
jmp
fildll
in
out
mov
cmp
dec
imul
or
lods
fiaddl
sub
jp
xchg
xchg
aam
lret
leave
mov
pop
mov
cmp
addr16
dec
adcl
mov
mov
fists
xor
in
sahf
leave
xor
xchg
cmpsl
xor
cmpsb
aas
cmp
rclb
xchg
pop
xchg
sbb
cmp
in
ja
test
shrd
mov
fistpl
idivb
leave
int
clc
pop
mov
push
add
cld
jnp
mov
jle
xchg
adc
data16
lods
xor
xor
cmpl
std
adc
test
adcl
mov
sub
test
xor
mov
xchg
outsb
mov
cld
orl
out
inc
int3
pop
mov
loop
pusha
in
clc
mov
lret
add
je
int3
rol
out
leave
in
enter
inc
add
jns
adc
push
cmpsb
addr16
divb
mov
aam
push
xor
inc
pop
aaa
inc
rolb
pop
adc
ret
inc
subl
sbb
dec
insb
cmpsb
cmpsl
xchg
mov
pop
in
addl
xor
jns
icebp
and
fldenv
push
in
iret
rcll
jmp
or
mov
push
push
xchg
test
arpl
mov
lcall
fdivr
out
mov
or
mov
mov
arpl
xchg
cld
cmp
inc
cmpsb
ret
inc
inc
and
cmpl
mov
ljmp
cmp
jne
cmpsb
inc
pop
dec
pop
xchg
pop
call
xchg
dec
divb
addr16
pop
inc
jae
insb
mov
jmp
adc
and
outsb
movsb
test
ja
imul
ret
inc
ds
leave
jle
adc
jo
int
xchg
scas
frstor
mov
cmp
cmp
movsb
add
push
movsl
or
or
adc
pop
push
stos
jl
mov
xchg
test
imul
das
std
out
repz
movb
xor
mov
or
inc
sub
mov
xchg
lcall
jbe
test
stc
out
adc
pop
js
cmp
fsubs
mov
lds
test
lahf
xchg
stos
adc
push
mov
push
icebp
fsubl
ds
pushf
xchg
in
jp
lahf
imul
add
push
imul
movsb
fucomi
adc
mov
dec
fdiv
out
mov
ret
fistps
popf
addr16
stos
mov
adc
out
mov
test
lahf
inc
sbb
in
rclb
bound
xchg
push
ljmp
mov
ret
mov
in
mov
cltd
stos
das
fs
pop
and
xchg
divb
dec
mov
arpl
ja
clc
fldcw
dec
xor
lret
jge
movsl
je
jns
cmp
loop
push
mov
inc
orb
push
leave
out
jnp
sbbl
pop
outsb
divb
jmp
sub
sub
mov
mov
sbb
les
mov
repz
xchg
push
popw
mull
inc
mov
push
mov
fs
ja
sub
fisubrs
push
jb
jg
in
cwtl
pop
pop
fsubs
push
jl
arpl
enter
aas
or
mov
jbe
jl
mov
inc
inc
add
movzbl
jg
and
mov
pop
mov
scas
lret
cmp
mov
insb
or
and
sub
lahf
cld
jmp
arpl
aas
cmp
addr16
jnp
scas
nop
push
mov
scas
mov
pushf
loope,pn
addb
pop
rorl
or
ja
dec
mov
pop
out
daa
push
ds
std
or
mov
mov
aad
push
jns
sub
xor
mov
imull
loopne
cmc
sub
enter
and
xchg
cmp
sar
xchg
lcall
ret
xchg
sub
mov
dec
dec
aam
cli
adc
sti
xor
xchg
xchg
jnp
push
jne
mov
push
xchg
pop
xor
popa
mov
loop
sti
jbe
jae
ja
cmpsl
mov
mov
loope
es
out
cmp
xchg
ret
or
icebp
loop
in
or
push
mov
insb
push
push
leave
lds
inc
and
inc
dec
pop
fnstcw
ffree
mov
or
cmp
das
jle
leave
mov
rorl
ss
pop
fcomps
dec
jb
inc
sbb
repz
mov
xchg
mov
xchg
fisubrl
sbb
dec
jp
dec
rcll
xchg
and
fisttpll
cwtl
bound
lahf
leave
popf
xor
inc
jle
lea
ds
xchg
push
lock
push
ret
js
push
add
pop
out
out
pop
popa
jne
and
arpl
push
or
jb
add
mov
or
scas
cmp
pop
sbb
iret
jnp
popa
and
mov
enter
lods
cld
or
inc
insb
inc
push
xor
rcr
push
add
adc
arpl
add
jne
loopne
lret
into
cmpsl
cmp
aad
cld
push
push
xor
in
mov
cmpsl
data16
fcmove
pop
fmull
ss
je
xchg
adc
mov
fidivrl
xlat
mov
add
jo
mov
in
iret
enter
sub
or
push
fwait
gs
cmp
test
and
add
cmp
outsb
call
sub
enter
repz
subl
call
dec
lods
je
in
xchg
sub
aam
and
mov
les
aaa
or
testb
aaa
daa
xchg
mov
mov
subl
fists
xchg
daa
add
cmp
adc
xchg
cmp
stos
pushf
or
sub
mov
mov
mov
cmc
and
lods
xchg
ds
loop
sahf
push
xor
sahf
fstp
cwtl
ret
subb
xlat
fnstsw
cs
mov
outsl
jecxz
sbb
pop
lock
jmp
sahf
mov
dec
mov
inc
repnz
fdivp
es
jmp
sub
imul
dec
xchg
adcl
xchg
pop
outsl
sub
movsl
mov
pop
call
pop
das
movsb
dec
pinsrw
stc
insl
add
lret
pop
lds
xchg
push
aas
mov
xchg
cmp
sub
imul
cmp
pop
ficomps
int3
mov
ljmp
out
decl
cmp
pop
inc
and
inc
ss
xor
mov
adc
test
or
cmp
fisttpl
cwtl
sub
adcl
daa
adc
push
out
ds
add
sahf
and
dec
push
call
ret
mov
pop
inc
cld
in
push
mov
leave
test
jbe
xchg
rcr
lock
inc
pop
or
jp
addr16
mov
cmp
and
test
das
xchg
push
jmp
add
push
or
adc
sbb
jmp
popf
jns
mov
jmp
mov
xor
ss
push
or
and
push
inc
xchg
fwait
cld
pushf
sub
dec
jb
xor
sub
cmc
pop
test
mov
mov
inc
rcrl
insb
fsubl
inc
sbb
je
loope
adc
mov
inc
roll
pop
adc
in
sub
out
outsl
pushf
sub
xchg
clc
or
jb
pop
in
or
mov
lea
fptan
repz
inc
leave
mov
dec
pop
mov
dec
popa
cld
mov
add
lods
mov
jnp
icebp
pop
test
dec
jae
xor
cmp
mov
mov
jecxz
or
testl
pop
add
xchg
mov
pop
sbb
and
cld
pop
push
test
xor
enter
leave
aam
call
mov
push
add
xor
mov
pop
or
out
addr16
push
jae
push
rorl
aaa
dec
test
sub
lea
dec
dec
imul
lods
xor
ret
aad
push
popf
popa
or
stos
sbb
xor
outsl
test
jbe
and
sbb
notl
int3
pop
add
lcall
mov
mov
cmp
popa
push
add
ljmp
mov
push
pop
stos
xor
sub
jg
stos
push
rolb
add
fldenv
xchg
pusha
ss
jb
rcrb
cmc
iret
mov
orb
filds
outsb
xchg
int3
arpl
jg
cmpsl
adc
push
jl
out
sbb
test
daa
jge
mov
ja
call
add
shlb
loopne
jg
ja
lock
pop
pop
push
movsl
insl
stc
push
mov
loope
shl
in
stos
mov
popf
fnstcw
sub
jg
lock
lods
sub
mov
in
xchg
out
mov
sti
or
and
push
jo
ror
mov
sub
jbe
mov
popa
fistl
stc
sub
dec
std
dec
push
mov
ss
cmp
mov
push
cmpsl
sbb
adc
repz
cmp
cmp
sbb
scas
sub
mov
jl
mov
sub
ljmp
xchg
jb
lock
lret
xor
add
xor
mov
and
xchg
les
push
xor
push
int
cld
popa
xor
sub
insl
aam
jmp
cwtl
stos
lret
test
daa
insb
inc
test
adc
dec
push
lahf
push
cmp
popa
mov
mov
ss
mov
mov
loopne
mov
mov
xchg
push
movsb
sahf
cld
cli
cltd
pop
dec
mov
inc
mov
test
fcomps
mov
push
lea
xchg
and
push
add
xchg
imulb
push
imul
xor
sub
add
mov
inc
push
jno
mov
aas
enter
and
jbe
in
mov
jae
sub
and
sbb
sti
fbstp
cmp
lret
fiaddl
shr
inc
outsb
inc
jmp
jae
cmp
mov
and
repnz
fcmovb
and
nop
hlt
xchg
bound
jnp
pop
mov
xchg
xor
mov
mov
scas
xor
pop
sahf
jo
xchg
xchg
mov
jp
jo
orb
or
xchg
add
xor
xchg
cmp
pop
jns
mov
cmp
icebp
in
jnp
mov
dec
push
fsubrl
in
push
repz
xor
mov
dec
frstor
aad
sbb
lods
mov
adc
inc
xchg
sahf
or
cltd
inc
mov
cwtl
cli
mov
fldl
mov
orl
nop
mov
push
inc
push
test
arpl
pop
xchg
gs
dec
cld
pusha
push
enter
leave
jge
rcll
rorb
cs
popa
les
sbb
or
int3
subb
iret
out
cwtl
sbb
mov
leave
cmp
mov
xor
inc
scas
aam
xchg
and
int3
xchg
scas
jne
push
popa
cmp
mov
in
xorb
js
adc
adc
or
xor
mov
popa
cmp
cmp
jb
fists
push
dec
out
int3
sbb
and
mov
jno
push
cltd
lods
mov
sub
push
sbb
pusha
rcrl
add
movsl
clc
mov
or
fsubrp
stos
push
fwait
arpl
xchg
imul
and
cmp
mov
dec
int
sbb
and
pop
sbb
es
roll
fiadds
push
xchg
fwait
sbb
stos
sarb
das
xor
xchg
mov
roll
shlb
xor
mov
cmp
scas
and
or
mov
cmp
dec
ds
adc
into
dec
jb
xor
jnp
shlb
mov
mov
out
push
jo
push
aad
fmull
aaa
add
cmp
xlat
fadds
cmp
xadd
push
mov
pop
shrb
inc
dec
cmpsl
lock
fisubrs
push
mov
xchg
xor
je
or
mov
and
push
in
rol
in
push
dec
pop
sub
push
fdivrl
frndint
and
push
and
sub
je
enter
ret
or
shlb
test
iret
fmuls
push
adc
cwtl
add
cmp
fcomps
adc
pop
pop
push
mov
movsl
mov
mov
adc
push
out
push
rcrb
lahf
pop
adc
imul
xor
mov
xchg
arpl
mov
lahf
xchg
inc
mov
out
lret
sbb
fistps
mov
xor
ret
pop
or
inc
fbld
in
mov
jmp
or
cltd
dec
int3
ljmp
jecxz
pop
cmc
cmp
hlt
fsubrl
add
sub
push
sbb
dec
arpl
lgs
sub
cli
cwtl
sbb
inc
out
inc
dec
sbb
pop
push
push
add
adc
int3
sub
je
cmp
divb
dec
push
neg
sub
out
daa
sub
sbb
mov
pushf
rolb
mov
sbb
jo
imul
ljmp
test
flds
inc
mov
add
rorb
adc
sarl
push
icebp
orl
mov
shrl
ja
xor
xor
mov
xchg
cmpb
mov
mov
dec
add
sbb
inc
ret
pop
add
pop
and
in
lods
pop
push
fstpl
lock
cmp
ss
vpsrlw
mulb
in
push
data16
xchg
jo
sub
dec
sbb
cwtl
adc
nop
pop
jns
adc
and
aam
xchg
leave
push
pop
sub
mov
jecxz
jmp
add
int3
push
loop
mov
push
jnp
mov
aam
pusha
call
sbb
push
mov
clc
popa
dec
sti
fmul
or
sbb
push
mov
pop
inc
aas
shlb
cwtl
push
mov
insl
or
xor
push
adc
dec
ffree
test
out
lods
mov
mov
xlat
jmp
daa
das
call
push
xlat
pop
add
xchg
jge
cmp
mov
xor
jb
xchg
xchg
stos
je
lret
ds
fnstcw
imul
add
sub
mull
je
test
cwtl
shl
adc
pop
xor
or
mov
pusha
sti
pop
icebp
lret
lahf
and
dec
cmp
xor
push
jae
jecxz
dec
ficomps
cmp
ja
pop
push
pop
xor
xchg
cmpsb
loopw
jnp
icebp
mov
cmp
jno
hlt
adc
push
adc
repz
add
inc
fwait
adc
faddl
filds
push
stc
arpl
and
sbb
adc
pop
aaa
mov
jns
cli
jnp
push
and
adc
test
mov
adc
mov
inc
outsb
loope
jbe
movl
imul
je
lock
or
pop
movsb
roll
push
test
int3
cmp
sti
sub
es
fdivl
mov
jb
cwtl
stc
lods
ret
aad
mov
mov
jecxz
cmp
aad
sub
and
fdivrl
sub
xchg
je
aam
popa
ja
inc
pop
mov
es
popf
into
sbbb
lds
test
pop
sahf
push
test
mov
add
test
cmpsb
mov
aam
mov
sub
test
push
jle
or
aas
and
adc
insl
aad
dec
insb
mov
mov
lods
gs
dec
scas
push
sub
lret
icebp
adcl
mov
pop
lret
jne
mov
jbe
xchg
pop
mov
cmp
mov
mov
fwait
cwtl
int3
scas
pop
cmp
andl
aas
mov
lretw
or
js
dec
repnz
repz
scas
xchg
fisubrs
pop
or
mov
shrb
inc
jno
pusha
stos
mov
test
sub
inc
pushf
cs
ret
xchg
add
sub
imul
orb
cmp
testb
push
jb
jge
fs
movsb
iret
shlb
in
sahf
testb
adc
dec
fcoml
arpl
cmpsl
sarl
sub
push
cmp
xor
add
inc
sbb
xchg
sbb
subb
xchg
cmp
ds
pop
mov
hlt
mov
xchg
aas
outsl
cmp
loopne
fst
xchg
pop
dec
imul
push
mov
addr16
repnz
sub
push
adcb
insb
insb
lret
iret
imull
loopne
adc
xchg
movsb
adc
lcall
jge
ret
loopne,pn
adc
mov
xor
imul
and
inc
adc
js
lahf
insl
pusha
pushf
mov
nop
faddl
mov
test
mov
divb
loopne
lahf
in
les
lcall
dec
mov
popf
inc
mov
sbb
xchg
aaa
xor
mov
mov
daa
fidivl
imul
push
adc
sub
adc
xor
pop
mov
enter
adc
dec
cmp
or
enter
sbbl
pop
jno
clc
test
sub
jecxz
out
mov
mov
jbe
fstpl
pop
mov
push
cmp
jl
xchg
out
out
stos
mov
and
dec
push
jl
mov
insb
outsb
xchg
mov
push
jne
pop
fmulp
stos
idiv
lahf
and
cmp
repz
mov
stos
inc
mov
mov
and
or
iret
lahf
sub
pop
xchg
test
test
fs
push
stos
mov
xchg
cltd
dec
cltd
mov
push
ja
lods
repnz
js
cmp
fcomps
sbbl
mov
daa
dec
fcoms
gs
fcmovu
add
aad
add
mov
inc
pop
pop
sti
cmovp
xchg
adc
jbe
add
lret
fists
std
pop
sub
xorb
dec
ret
mov
addl
or
iret
sbb
les
and
and
pop
sub
mov
sbb
ss
sarb
xor
aaa
icebp
mov
adc
inc
push
cmp
jecxz
xor
or
pusha
xchg
dec
add
xchg
adc
nop
and
push
pop
cmp
add
fisubrs
pop
outsl
mov
cwtl
addr16
pop
mov
cs
int
xor
jecxz
call
cs
sbb
ret
cmc
jno
add
cltd
aas
jge
add
jo
cmpb
inc
xlat
dec
add
dec
cltd
jo
mov
cmp
push
faddl
cmc
mov
int
cmp
mov
sahf
or
adc
xor
daa
jmp
cmp
mov
stos
out
scas
xchg
cmpsb
lds
mov
jg
pop
ret
and
mov
out
push
das
mov
fneni(8087
mov
cmpsl
daa
clc
addb
or
adc
std
push
outsb
xchg
stos
mov
xorb
xchg
mov
sar
add
data16
cmp
jnp
iret
ja
and
jg
add
dec
mov
loop
push
jg
mov
pop
gs
xor
mov
insl
xor
mov
xchg
arpl
sbbl
mov
mov
xor
push
xor
lret
sbb
fdivrs
scas
pop
movsl
mov
cmp
sub
mov
arpl
jo
pushf
sub
cmpsb
jg
lea
stos
cmc
sahf
rcrl
dec
xorb
xlat
clc
leave
negl
dec
xchg
or
ljmp
out
loop
pop
movsl
in
jne
loopew
aas
int3
loop
push
mov
add
push
aaa
sub
insb
sub
push
dec
adc
pop
pusha
lds
pop
xchg
mov
xlat
xor
addr16
sbb
and
cmp
dec
adc
push
sahf
adc
mov
push
popf
cmpsb
test
in
rorl
or
and
xchg
sub
outsl
orl
mov
loope
icebp
js
push
cmp
push
cmp
adc
mov
lods
cmp
lahf
test
inc
aam
aas
pushf
xor
je
leave
pop
test
cwtl
mov
adc
inc
xchg
jmp
loop
rclb
push
pushf
mov
mov
jecxz
push
and
inc
pop
movsl
adc
inc
scas
sbb
push
add
push
subl
int
out
ja
cmp
xor
mov
xchg
mov
pop
push
lret
pop
sbb
dec
fisubrl
sbb
push
add
fisttpl
mov
mov
xor
sbb
out
hlt
int
pop
fldl
pop
sub
adc
xchg
dec
test
in
out
popf
push
sbbb
mov
push
mov
fcompl
lds
mov
adc
xor
in
xchg
loopne
out
movsl
mov
incb
mov
lret
jg
dec
loop
mov
fistpll
sbb
loop
movsb
jl
int3
dec
sub
push
pop
nop
pop
jle
dec
mov
js
imul
mov
xchg
sarl
and
fcmove
in
call
daa
lea
pop
mov
mov
loop
divl
dec
adc
inc
mov
add
dec
shll
test
sbb
inc
rorl
negl
inc
add
cltd
lds
xchg
pusha
imulb
ds
fmull
lock
dec
mov
or
lods
pusha
in
clc
push
fmull
and
mov
jae
jecxz
lret
fld
mov
cmp
negb
pop
ret
punpckhdq
xlat
xchg
shrl
or
ja
in
outsl
xchg
sub
jns
mov
mov
out
add
jae
test
cli
xor
out
mov
sti
mov
aad
shrb
bound
pop
jle
stos
out
je
or
ljmp
subb
scas
iret
or
push
push
inc
pop
hlt
adc
xor
add
das
movsl
xchg
retw
hlt
out
pop
dec
sarb
mov
mov
xchg
outsl
pop
pop
mov
dec
or
push
mov
rolb
int3
aad
outsb
inc
mov
pop
inc
aaa
inc
std
push
loopew
push
inc
hlt
push
notb
mov
dec
xchg
and
jns
scas
fwait
js
sqrtps
cs
rcrl
clc
out
and
dec
fdivrl
bound
pop
loope
sbb
js
sub
and
orl
push
lret
fidivrs
or
arpl
jg
jge
mov
xchg
sahf
inc
jle
jmp
and
movsl
test
outsl
xchg
xchg
push
sub
test
push
repnz
std
lret
pop
loopne
divl
loopne
pop
jmp
adc
mov
pop
or
in
pop
cli
inc
cwtl
insb
pop
push
cmp
subb
mov
orl
xor
es
sbb
add
sub
aam
in
mov
fdivs
cmp
in
lock
pop
outsb
pop
and
or
lahf
std
nop
cs
pop
xor
and
and
add
mov
scas
shll
gs
mov
sarb
sub
fwait
adc
stos
cmp
cli
ja
push
or
push
out
and
imul
mov
sub
leave
jle
dec
je
imul
jo
mov
adc
popa
repz
xor
mov
jns
xchg
leave
xor
sti
xchg
push
fs
aas
sub
sbb
sbb
mov
mov
loope
push
imul
aaa
mov
cmp
adc
pop
les
mov
dec
mulps
push
jg
pop
push
dec
jne
divps
loope
pop
pop
cmp
jbe
incl
mov
ljmp
cmc
ljmp
jae
in
mov
sbb
call
repz
pop
xchg
sbb
insb
adc
aam
jmp
add
or
dec
stos
xchg
dec
fiadds
and
xor
push
test
loopne
sub
and
pop
mov
mov
sub
pop
inc
out
aam
rcl
add
xor
pop
test
push
mov
sub
or
je
dec
movsb
dec
and
xor
mov
fcmovnb
aam
rcl
js
in
repnz
cwtl
pop
cmp
jnp
out
cmpsl
dec
ror
lea
ja
pop
mov
sarb
dec
lahf
mov
jle
add
add
call
cmpsl
mov
sub
xchg
and
push
add
rol
andl
xor
add
mov
xor
sub
adc
gs
std
cmp
mov
sub
sahf
faddl
loopne
or
cs
ret
pop
pop
scas
stos
enter
test
dec
fcoms
out
xor
mov
inc
rol
pop
lahf
call
test
add
dec
enter
jns
add
push
mov
test
add
push
dec
fwait
lret
fsubs
push
add
push
mov
gs
sbb
push
or
push
ffreep
insb
mov
mov
out
fisubrs
mov
dec
sbb
push
jmp
and
jb,pn
mov
inc
out
and
inc
out
movsb
sahf
adc
add
jp
inc
push
inc
int3
jl
adc
mov
cld
orb
or
xor
fs
inc
outsb
cmpsl
sbb
jecxz
call
sub
inc
sub
addr16
adc
gs
pop
enter
xchg
ja
scas
stos
outsl
ja
push
sub
frstor
push
jno
or
iret
push
rcl
popf
or
and
adc
imul
test
fcompl
pop
iret
inc
and
xchg
std
loopne
lret
pop
adc
jo
push
inc
mov
sahf
js,pn
xchg
call
xchg
adc
dec
and
dec
cli
into
loopne
xor
ret
decb
mov
jg
out
gs
leave
or
loop
data16
or
push
xor
out
int
fists
jbe
adc
mov
inc
pusha
lds
mov
je
insl
jle
fldl
fisubl
inc
sarb
sbb
sbb
add
jno
mov
or
mov
test
stos
enter
loop
out
bound
loope
cli
mov
sbb
mov
lock
dec
sub
dec
in
lret
adc
aam
inc
sti
push
nop
jbe
jp
xchg
pushf
push
flds
lret
jne
out
mov
sub
sub
int3
fcomi
jno
xchg
pushf
lret
or
push
xor
or
aad
adc
cmc
pop
cwtl
test
and
cmpsb
sub
addl
test
call
rorb
inc
mov
add
shrl
xchg
jne
cltd
fs
cs
xchg
andb
push
in
cld
inc
jl
adc
pop
daa
fistps
and
mov
sbb
cmp
scas
rorl
push
push
mov
or
fs
int
shlb
pop
inc
popf
mov
pop
das
mov
test
jbe
and
cmpsl
mov
mov
xor
inc
cmp
push
cmp
jg
xor
inc
roll
in
jno
pop
pop
mov
das
jl
dec
rclb
jnp
hlt
push
inc
jnp
adc
push
push
hlt
movsl
scas
push
xor
xchg
adc
in
pop
xchg
sub
sbb
push
sub
jne
push
pop
add
cli
inc
jb
repz
divb
add
dec
push
xor
and
push
movsb
inc
rol
ret
mov
jge
cmpsb
je
push
pand
in
or
gs
xor
mov
xchg
sbbb
orl
or
je
mov
popf
jnp
add
mov
arpl
ret
lods
ljmp
js
imul
shlb
mov
add
cmp
movb
jmp
insl
hlt
mov
adc
ss
mov
mov
outsl
adc
pop
out
negl
in
int3
pop
int3
inc
bound
mov
xchg
je
push
into
scas
xor
cs
pop
jno
pop
sbb
in
inc
daa
aas
xchg
add
adc
aam
dec
movsb
inc
xchg
mov
or
push
repz
add
je
ljmp
imul
imul
in
daa
mov
inc
push
add
or
and
ds
xlat
shll
popf
es
mov
call
cmp
lods
fistl
cmp
jo
insb
xchg
xor
xchg
mov
mov
pop
add
pop
lea
pop
ds
bound
mov
sub
jmp
adc
jle
loopne
mov
xor
adc
popa
imul
imul
adc
push
pop
push
xor
xchg
add
push
push
push
mov
test
cmp
lock
mov
mov
fmulp
lret
out
xor
test
sbb
xor
inc
mov
adc
mov
xchg
out
rcr
test
push
scas
and
int
mov
inc
std
repz
push
pop
les
imul
lret
scas
dec
bound
jbe
nop
fucomp
out
mov
inc
dec
jg
push
sub
sbb
aas
xor
ret
mov
push
sbb
xlat
outsb
lds
cmc
andl
add
mov
jg
fsub
jnp
cmpsb
xchg
sbb
call
imul
lret
lahf
xor
sarl
jmp
dec
sti
in
mov
push
sub
push
ret
data16
mov
inc
mov
arpl
or
pop
aad
outsb
sbb
rcrl
cwtl
mov
pop
loope
into
scas
cmpl
push
mov
pusha
sub
add
ja
mov
aad
dec
out
cmp
and
jl
pop
mov
sub
ror
xchg
push
adc
loope
das
stos
inc
popa
dec
add
jnp
sti
insb
mov
push
int3
dec
jne
ds
pop
mov
xchg
pop
test
mov
ret
xor
push
adcb
leave
dec
mov
mov
ljmp
dec
sub
fs
jb
cmpsl
pop
fiadds
pop
nop
and
xor
xchg
jno
cmp
leave
in
out
call
movsb
fldl
cmpsl
pop
inc
lock
dec
push
xchg
fistps
sbb
cmp
xchg
sub
pusha
jno
or
icebp
sub
out
leave
jno
sbb
mov
dec
pop
mov
jne
cmp
xchg
xor
cmpsl
push
filds
push
mov
jae
shlb
enter
xchg
sbb
jge
xchg
out
jg
mov
fadd
addr16
jecxz
insb
sbbb
out
adc
imul
xor
divb
lcall
shll
scas
add
data16
mov
mov
and
pop
mov
mov
jbe
loopne
pop
neg
add
fisubl
jne
aas
pop
pop
roll
cmp
js
xchg
xchg
rorl
je
pop
es
out
andl
and
push
rolb
add
adc
dec
add
loope
ljmp
dec
dec
cwtl
mov
into
push
loope
or
pop
or
inc
add
shll
lret
jbe
out
pushf
inc
xchg
aam
call
cltd
pusha
sti
ficomps
aaa
pop
fdivr
mov
testl
pop
cld
shlb
je
sbb
adc
ret
pop
out
xor
addl
adc
inc
or
fsub
fsubrs
cmpsb
jbe
repnz
sbb
out
mov
hlt
fildl
mov
cmpsl
jp
les
js
push
sti
movsb
jno
aam
es
out
inc
adc
jns
xchg
pop
inc
stos
xor
bound
imull
push
mov
cmpl
lds
mov
inc
loopne
lods
mov
dec
sub
aam
outsl
cmpl
enter
jg
clc
fldt
jae
enter
gs
jnp
clc
or
rol
cmpsl
lahf
push
pop
pop
jno
sub
xchg
pop
cmpsb
pop
std
popl
pop
xchg
or
pop
dec
loope
in
xchg
cmpsb
or
das
mov
rolb
pop
pop
mov
lods
adc
cld
shll
mov
loop
lret
mov
ds
push
sbb
ljmp
push
cwtl
add
add
lods
add
aad
outsb
push
adc
fistl
mov
in
pop
ss
mov
inc
sbb
inc
xor
push
mov
push
std
mov
idivl
mov
cmp
mov
inc
xrstor
dec
pop
push
addr16
xchg
or
jg
or
pop
jecxz
adc
fwait
dec
add
movsl
pop
or
int
inc
jae
xlat
sub
cs
mov
mov
fwait
notb
popf
movl
leave
outsl
negl
imul
dec
fxch
xchg
sbb
ds
or
dec
test
in
xchg
or
adc
adc
cmp
mov
dec
mov
clc
sti
pusha
inc
rcr
dec
jb
lea
out
fdivr
outsl
pop
mov
out
mov
aam
jns
mov
add
mov
fisttps
xchg
sbb
sarl
popa
mov
inc
mov
cmpsl
js
inc
jb
movsl
sbb
stos
dec
mov
mov
lcall
inc
or
das
pop
mov
es
and
dec
test
test
mov
pop
enter
push
jnp
cli
xorl
shr
fdivrs
xor
idivl
inc
xor
adc
jb
movsl
pop
push
subb
es
adc
push
aad
gs
fs
mov
cmp
adc
mov
pop
fnstcw
jae
adc
xor
or
popa
push
sbb
iret
test
imul
loop
dec
mov
jge
sbb
push
and
insl
data16
sti
inc
std
xor
popa
push
xorb
push
call
int
ds
rorb
fwait
mov
sahf
jecxz
mul
js
sahf
div
mov
sub
jne
add
mov
test
repz
jg
loopne
call
orl
xchg
nop
std
test
shrl
bsf
add
lods
cmpl
pop
outsb
mov
adc
rorl
dec
sbb
ffreep
adc
sub
xchg
mov
leave
or
and
jge
mov
pusha
pop
test
test
out
cmp
pop
in
aad
add
packuswb
hlt
jecxz
in
xor
mov
shll
jge
repz
cltd
push
pop
add
cmp
cmp
pop
cmp
clc
movsb
adc
imul
lds
fdivrs
scas
and
pop
and
jge
ret
dec
add
and
rcrl
dec
inc
in
shl
mov
mov
sahf
aad
loop
mov
std
mov
add
cmp
jle
xorb
icebp
cmc
xor
imul
or
imul
jecxz
ret
xor
ds
in
dec
sbb
clc
lret
mov
movsl
mov
clc
fcompl
lds
stos
stos
push
mov
filds
movsb
scas
and
roll
sub
jg
idivl
sti
cmp
repz
push
mov
pop
nop
repz
inc
push
lcall
mov
push
or
xchg
xchg
pop
mov
push
push
addr16
out
fidivl
push
mov
add
int
notl
xchg
cmp
or
sub
into
cmpsl
pop
sahf
push
lods
mov
or
jle
fdivl
jle
pop
xor
fs
repnz
sahf
cli
xchg
cs
sbb
xor
cwtl
nop
jnp
cmc
pop
test
scas
rcr
test
sub
bound
mov
push
ss
lods
cltd
sub
dec
lea
sub
gs
aaa
cld
add
dec
andl
fisubs
dec
sub
mov
repz
ret
mov
inc
and
jne
jb
mov
shll
ficoms
shlb
ja
mov
fstpt
add
push
fldt
mov
dec
nop
cmpsb
cli
dec
dec
mov
jl
ljmp
out
sbb
ljmp
sti
dec
jle
ficompl
jmp
jle
cmp
add
cltd
sbb
push
sbb
lock
test
or
xor
and
inc
add
add
nop
shlb
jbe
lret
popa
or
mov
and
aad
mov
scas
rcrl
ret
mov
shrl
push
push
popa
add
dec
outsb
out
jg
xchg
popa
pop
andb
clc
xchg
xor
int3
data16
sti
dec
jmp
sti
mov
inc
and
or
popf
cli
mov
push
rolb
dec
adc
push
jmp
arpl
ret
hlt
inc
pop
movsb
cbtw
sbb
mov
movsb
sbb
test
pushf
les
sub
aaa
loop
insl
dec
push
mov
inc
mov
into
rcl
sarb
sbb
xchg
ljmp
stc
mov
inc
addr16
cmp
loope
dec
pop
cmp
push
xor
cmp
dec
sbb
fsubs
lods
push
and
cmp
sbb
cmp
dec
adc
adc
fs
or
cmc
clc
pop
pusha
idivb
sub
aam
cltd
sbb
dec
mov
mov
dec
aad
lcall
std
mov
pushf
hlt
insl
sub
sub
jae
pop
out
or
mov
ret
fisubs
mov
sub
cmp
jle
out
loopne
lods
push
cmp
es
adc
ret
fsub
int3
xchg
shlb
lret
mov
std
pop
fmuls
aam
leave
sub
sbb
stos
or
cwtl
lods
aad
data16
sub
fsubrl
popa
add
cmc
push
sub
mulb
xchg
cmp
fbld
lea
imul
jecxz
cs
pop
jle
dec
mov
cli
popa
sub
rcrl
lock
mov
jmp
pop
sub
fs
xchg
lret
movsl
sbb
mov
sub
adc
mov
addl
addl
mov
hlt
xchg
mov
jo
test
cmp
pop
mov
cmp
inc
into
sub
insb
and
jb
add
enter
outsl
insb
sbb
ljmp
mov
cli
fsubrs
frstor
xor
xor
fildll
in
lods
aad
mov
xor
sbb
ja
adc
loop
cli
pop
lret
shlb
lds
xchg
sub
call
ss
xor
mov
imul
in
mov
adc
jnp
testb
push
ljmp
cmp
jo
addr16
and
mov
cs
call
inc
add
int3
or
push
sti
xor
mov
sbbb
cmc
outsb
sahf
or
mov
add
sahf
ficoms
add
dec
xor
dec
inc
inc
imul
sbb
adc
sbb
inc
xchg
leave
dec
add
std
inc
or
xor
cmp
loope
loopne
pop
pop
aas
xorl
out
cmp
mov
pop
jbe
dec
inc
and
cmc
stos
lret
mov
aas
xchg
xchg
cmp
pop
xchg
cmp
nop
in
and
push
mov
push
daa
or
sbb
daa
aad
xor
sbb
mov
movsl
mov
sbb
push
jo
xchg
cli
mov
xchg
push
out
jle
push
or
data16
mov
fbstp
jno
repz
in
xchg
xor
rorb
rolb
mov
jbe
ss
test
fstl
mov
jp
inc
pop
aas
push
popa
sahf
les
out
pop
ja
jns
xor
mov
sbb
test
mov
cmp
loope
in
mov
test
cld
jo
sbb
ljmp
push
adc
xchg
xlat
sbb
lcall
fs
arpl
cmc
mov
aaa
xlat
sbb
add
or
sbb
jp
rcrl
push
push
xchg
pop
add
dec
movb
in
pop
jno
mull
add
out
out
and
loopne
jo
aad
push
dec
push
mov
pop
aaa
pop
dec
data16
fcompl
lahf
mov
add
lret
das
jne
in
adc
inc
jne
cmp
jne
and
fcoms
testb
mov
fs
fiadds
sub
and
pop
or
fimuls
add
int
mov
inc
pop
imul
push
mov
mov
xchg
lret
pop
inc
mov
lahf
add
imul
cmp
mov
xchg
ret
jecxz
pop
cmp
shrb
inc
xor
rolb
repz
xorl
jge
push
mov
arpl
out
cmc
pop
ret
movsl
lret
pop
ss
mov
jl
js
cmp
jp
shl
sub
xor
test
scas
xchg
inc
lret
fadds
aaa
stc
mov
push
mov
jb
in
popf
imul
data16
add
shll
mov
addr16
mov
jmp
push
js
enter
in
dec
push
mov
out
pop
xor
pop
mov
xor
rolb
lcall
inc
pop
repz
mov
test
aad
sti
inc
cli
push
push
lds
popf
pop
xor
mov
pop
mov
mov
scas
push
out
popa
inc
mov
jo
xchg
lahf
in
fbld
and
outsb
mov
push
loope
aaa
aas
fmul
pop
pop
xchg
fadd
dec
xor
orl
out
adc
mov
push
aas
mov
pop
rorl
mov
or
cli
dec
mov
test
arpl
fsubrl
hlt
jb
insl
cmp
dec
xor
sub
cli
dec
mov
xor
bound
mov
fcmovnb
mov
fsubl
hlt
push
mov
scas
sub
sub
cmp
push
addr16
jg
je
popf
std
xor
adc
xchg
xor
sbb
icebp
mov
sub
push
inc
sub
push
push
mov
jns
setl
rorb
jmp
popa
fisubs
mov
outsb
cmp
pop
inc
jge
jbe
cli
cmp
arpl
sti
mov
sub
pop
fdivrp
popl
xchg
push
jno
fbstp
rol
pop
pop
enter
out
es
mov
sbb
das
mov
add
sbb
add
pop
xchg
xor
add
daa
cmp
popf
mov
cmpsl
stos
std
adc
adc
and
mov
sbb
loope
mov
js
adc
iret
leave
jnp
sahf
jb
and
adc
inc
sub
push
xchg
iret
push
push
scas
loopne
mov
xchg
jge
scas
inc
roll
les
inc
pop
and
push
push
jp
mov
negb
adc
cmp
mov
inc
mov
std
add
cmp
xchg
mov
add
sahf
mov
gs
inc
dec
push
xchg
hlt
inc
sbb
inc
mov
pop
jge
aas
push
jnp
mov
inc
test
mov
dec
arpl
arpl
cmp
push
enter
inc
mov
and
and
mov
loope
sub
out
xchg
fs
sub
das
shl
sti
cmpsl
xchg
push
cli
mov
and
jbe
push
pushf
popa
add
push
fldcw
ja
mov
or
inc
adc
mov
pop
hlt
cmp
ret
push
lods
push
movsl
xchg
dec
test
bound
jg
lret
inc
in
mov
or
add
push
test
cwtl
addl
jns
into
sub
jecxz
lods
inc
xor
shll
bnd
or
ret
mov
xchg
popf
mov
repnz
dec
push
fxch
mov
mov
xor
mov
mov
orps
push
sbb
call
jmp
sti
add
popw
insb
pop
ret
jmp
mov
inc
xchg
push
mov
scas
das
insl
adcb
shlb
cmpsb
push
gs
mov
push
mov
pop
xor
lahf
stos
jmp
shll
shll
aas
adc
pop
add
mov
loopne
jno
xor
sbb
adc
test
inc
push
sbb
ficoms
cs
sbb
jb
pop
sbb
or
push
xchg
jno
call
ret
lea
cli
xchg
or
aam
lea
mov
pushf
add
inc
push
aas
mov
mov
add
nop
xor
mov
sub
out
cltd
mov
andb
rolb
pop
adc
repz
pop
scas
xlat
inc
jb
adc
gs
popa
mov
adc
in
cmp
sbb
out
loopne
mov
bound
data16
mov
mov
jmp
cmc
in
pop
das
divl
xor
sbb
push
xor
mov
ret
mov
cwtl
push
jne
fmuls
push
imul
and
insb
push
dec
push
add
mov
popf
test
jmp
call
cmp
xchg
xor
loopne
enter
call
mov
xchg
mov
popf
popf
loope
xchg
xor
sbb
ds
sub
mov
shrb
push
jnp
mov
and
cmp
xchg
out
xlat
loope
inc
pop
cmp
inc
jne
stos
ljmp
popf
orb
addr16
es
pop
movsl
xlat
lcall
inc
jge
cmp
sbb
xchg
mov
data16
in
mov
sti
das
stc
cwtl
lcall
movsb
add
ret
mov
pop
mov
nop
out
addb
push
out
shr
out
and
popf
xchg
sub
mov
aas
or
adc
frstor
xor
adc
rcrl
inc
jmp
mov
push
dec
loopne
filds
test
pushf
insl
bts
icebp
sbb
incb
add
and
xlat
les
lds
in
and
cmpsb
stos
hlt
insb
test
push
fbld
jge,pt
lahf
sub
xchg
xchg
add
fwait
imul
mov
subb
or
dec
pop
outsb
flds
and
ja
mov
fisubl
add
loope
lret
or
testl
stos
xchg
popf
xor
pop
lock
pusha
adc
icebp
jge
mov
xchg
and
fsts
jno
orb
in
and
xchg
mov
int
pop
mov
pop
mov
and
dec
sub
mov
stos
sbb
aaa
stos
mov
push
jl
push
test
sahf
jnp
xchg
aam
sbb
adc
sahf
mov
jo
xor
in
ficoms
lahf
shlb
dec
ja
ds
or
mov
add
lret
xchg
cmp
and
adc
inc
xor
adc
fstps
mov
dec
sub
mov
pop
ficomps
jb
adc
lods
loopne
sbb
stc
dec
loop
ljmp
jg
decb
mov
cmpsl
mov
lock
mov
sysexit
push
fstl
std
stos
xchg
mov
ja
test
lods
sbbb
pop
mov
ret
sarb
adc
repz
and
or
aas
pusha
mov
jecxz
loopne
jle
sti
ret
adc
in
mov
mov
es
pop
and
mov
clc
fistl
mov
cmp
push
fbld
mov
pop
xchg
rorb
cmp
mov
xor
add
orl
movsl
cltd
cmp
sbb
hlt
pop
sbbb
xchg
mov
mov
jns
ret
aas
pop
xor
jb
sub
out
cltd
ret
xor
sbb
dec
lock
ja
push
and
jp
rorl
jg
ja
push
mov
aam
or
xchg
paddd
adc
pop
addr16
mov
jo
test
and
jmp
mov
add
mov
aas
pushf
repz
or
ret
jecxz
jmp
aam
jle
push
int
test
sti
fldl2e
fiadds
pop
dec
mov
movsl
inc
pop
iret
das
mov
push
xchg
pushf
sbb
pop
cltd
dec
sbb
inc
inc
sti
jmp
or
jo
mov
movsb
push
mov
or
sub
sbb
xchg
jns
aas
into
mov
xor
fwait
adc
adc
cmpsb
mov
imul
jmp
call
dec
adcb
daa
jns
scas
sbb
lock
popa
mov
add
cmc
push
in
mov
in
fwait
test
sbb
jle
push
adc
inc
cmp
cmc
mov
xor
push
cmp
sbb
jmp
lcall
pop
js
inc
xchg
aad
xor
ss
pop
test
test
xchg
adc
lock
ds
xchg
xor
jae
xor
stos
or
lods
and
es
ja
loop
xchg
pop
bound
inc
lds
xor
mov
cmp
in
shlb
push
push
push
sbb
xor
out
imul
jnp
outsb
inc
mov
popl
lods
imul
fldl2e
test
outsl
mov
adc
mov
xlat
sub
sbbb
sub
jecxz
pusha
xchg
pop
mov
adc
lds
sbb
jb
fmuls
clc
and
mov
sti
jg
adc
out
add
repnz
jp
xchg
mov
xchg
inc
mov
xchg
jg
dec
dec
inc
sbb
pop
cmp
int
push
or
ret
and
jbe
test
fbld
int3
and
cmp
add
jecxz
ret
movsl
sub
mov
sahf
push
scas
fs
jns
xor
test
sti
jb
das
mov
ljmp
mov
mov
das
lahf
cmp
arpl
cli
out
dec
dec
sbb
int
add
movsl
or
dec
dec
and
enter
loopne
in
in
jg
sbb
or
jae
popa
cmp
cmpsb
mov
xchg
sbb
xor
popa
outsl
push
ret
adc
sbb
pop
and
in
out
jmp
pop
imul
les
pop
ret
ret
pop
push
dec
add
out
jno
pop
push
inc
add
inc
add
mov
stos
pop
adc
sbb
gs
stos
xchg
mov
inc
cs
pop
or
fcompl
or
cmp
pop
loope
mov
or
fnstenv
aad
jmp
mov
mov
sub
hlt
leave
xor
hlt
aas
cmp
mov
sahf
dec
jle
repnz
push
mov
cmp
sbb
sbb
xchg
out
into
cli
push
push
lea
ror
shll
aaa
mov
sti
lret
inc
fwait
ret
fmull
inc
mov
cmp
arpl
xor
inc
fiaddl
sub
ficoms
js
xchg
adc
cwtl
mov
outsl
out
sub
xor
int3
loopnew
xor
movsb
add
pop
lock
mov
mov
das
add
and
jnp
or
jge
pop
mov
inc
pop
adc
ret
ret
pop
sub
lods
add
and
mov
lods
mov
mov
mov
rcll
mov
pop
fildll
push
shll
inc
sub
or
test
adcl
lea
sahf
mov
xor
or
stc
out
mov
pop
pop
pop
jno
js
xchg
and
insb
popf
in
lock
lea
cmp
mov
popf
rcrl
sti
stc
test
mov
or
movsb
test
pop
dec
cwtl
sbb
cmp
inc
xchg
popa
daa
mov
in
js
or
insl
arpl
push
out
push
repz
loop
lcall
into
jne
add
mov
mov
xchg
xchg
cmpsl
lea
pop
add
ret
into
call
out
ds
xor
push
pop
mov
adcl
mov
ds
ret
addr16
adc
xchg
add
stos
dec
inc
fdivrs
mov
ret
dec
jecxz
insl
gs
cmp
push
push
ss
push
jp
xchg
cmp
fld
sbb
push
insb
gs
aad
sub
fnstenv
fstl
loop
into
jo
and
dec
insl
or
add
inc
out
xchg
mov
push
pop
fstps
dec
lock
fistps
cld
ret
scas
inc
push
movsb
xor
jmp
gs
and
daa
xorb
scas
push
filds
inc
pop
pop
jecxz
sbb
add
std
cmpsl
cmp
ret
mov
mov
les
stos
mov
popa
push
dec
ljmp
bound
mov
fcomp
out
fisubrl
in
fildll
jno
and
out
xchg
dec
je
shl
movsb
mov
fstpl
je
pop
xchg
mov
pop
cmp
lcall
mov
mov
fdivs
or
cmpb
jl
push
xor
out
sti
mov
outsb
aad
mov
inc
pop
dec
mov
aas
xor
push
sub
mov
push
test
lcall
mov
mov
cmp
pop
out
push
mov
mov
mov
ss
jmp
dec
xchg
push
sbb
out
cmp
push
mov
adc
mov
cmpsl
xlat
jbe
xor
test
mov
lea
cmp
jge
adc
mov
es
ss
divl
sub
inc
inc
mov
repnz
mov
popf
insb
lods
cmp
cli
jno
imul
loope
scas
dec
cmpsb
cmpsb
and
mov
rcr
pop
cmp
xchg
lahf
sbb
daa
sub
test
ror
inc
gs
pop
xchg
sbb
fs
xor
sbb
add
mov
mov
dec
sbb
stos
push
fadds
popf
jge
inc
and
popf
fistpll
out
cli
test
jnp
aas
aas
lods
or
pop
xor
je
fdivl
mov
pop
mov
push
cmp
imul
push
mov
jno
mov
data16
sbb
inc
test
xor
outsb
xor
sub
push
testb
stos
ja
add
stos
xlat
mov
fcoml
mov
cli
push
pop
push
into
sub
mov
sti
dec
add
pushl
pop
imul
in
inc
sub
push
sahf
in
popf
add
js
mov
push
outsl
in
fldt
pop
movsb
orl
fcompl
test
mov
je
mov
dec
cmc
aaa
fisubs
in
pushf
addl
mov
mov
lahf
push
mov
int
mov
jae
gs
int
cmp
jmp
lahf
fdivr
stc
or
jnp
int
mov
jo
adc
mov
into
popf
cmp
mov
out
out
cwtl
mov
mov
outsb
mov
add
lret
sub
popa
mov
mov
dec
push
jmp
inc
xorl
mov
sub
daa
sbb
jns
mov
outsb
and
adc
sub
pushf
or
das
outsb
rolb
mov
add
mov
cmp
jne
cmp
lea
cmc
iret
pop
cmp
das
cmc
data16
hlt
cmp
jmp
mov
xorb
cmp
cmp
mov
and
arpl
mov
add
out
mov
dec
shrb
fcomps
popf
or
dec
lcall
sub
ja
or
mov
shl
vmovhps
iret
push
fsubr
mov
jmp
jae
and
sub
iret
bound
add
call
dec
push
pop
sbb
mov
push
imul
out
movsl
xchg
outsl
pop
shlb
lods
mov
int3
stos
or
clc
lods
mov
add
out
movsl
push
mov
iret
and
dec
cmp
outsl
add
pop
shr
push
jae
mov
std
mov
jg
fneni(8087
data16
inc
loope
mov
jne
loope
dec
rorl
mov
pop
arpl
aam
add
call
push
pop
inc
test
mov
mov
stc
dec
rcrb
movsl
aaa
in
mov
lds
sub
jge
enter
mov
or
sti
mov
clc
mov
adc
add
lret
lea
mov
ficoml
add
mov
cmp
imul
sarl
data16
xchg
mov
inc
and
adcb
cmp
pop
leave
push
pop
sub
in
jno
or
add
mov
loope
sbb
repnz
pop
nop
add
sbb
insl
jne
cmc
mov
mov
sub
jge
loopne
mov
add
testl
and
xor
and
fiadds
outsb
jnp
lods
or
ljmp
push
dec
mov
mov
repz
and
xchg
dec
xchg
hlt
or
push
loope
lods
or
out
psllw
daa
mov
std
jmp
outsb
mov
aaa
lds
and
in
adc
fisubrl
pop
enter
inc
mov
xchg
sub
cmovnp
xor
dec
pop
out
cltd
push
push
xorl
xchg
dec
dec
add
adc
and
fcomp
mov
mov
fistl
mov
push
xor
out
add
adc
pop
mov
rol
jb
dec
scas
cld
das
lahf
sub
in
sbb
inc
pop
push
mov
jae
iret
jl
fnsave
mov
jl
dec
ja
fbld
outsl
mov
xlat
insl
push
in
jae
mov
int
mov
out
inc
loopne
movsb
loop
dec
divl
mov
dec
cld
inc
ret
in
sub
inc
cmpsl
xchg
inc
xchg
push
cmpsl
add
mov
loope
cwtl
jmp
aad
push
les
push
pop
jb
cltd
fldl
jle
aam
pop
dec
aaa
mov
decl
loopne
sub
hlt
mov
repnz
rcrb
xor
add
nop
stc
into
mov
jle
mov
jecxz
negl
jb
ss
and
fiadds
adc
cld
jle
jp
enter
mov
aad
clc
adc
inc
pop
sbb
sub
addr16
push
pop
sbb
fistpll
pusha
ret
cmp
cltd
xchg
mov
jo
mov
pop
xchg
add
mov
shlb
sbb
push
push
popf
test
lods
les
icebp
inc
testl
adc
imul
dec
mov
pop
pop
clc
dec
mov
push
lahf
mov
xchg
outsl
repz
inc
lods
cmp
subl
dec
pop
test
mov
jo
adc
imul
mov
jmp
pop
shrb
mov
lods
das
push
push
cltd
fdiv
inc
sub
mov
mov
jge
cmp
dec
imul
ljmp
stos
add
or
dec
std
notb
andb
test
xchg
mov
ret
rcrb
lcall
insl
xchg
fldt
lahf
dec
cmp
dec
jae
mov
hlt
sahf
fistl
mov
xor
shl
in
idiv
fstpt
ret
subb
sbb
xchg
cmp
addr16
imul
add
mov
push
inc
mov
or
sbb
xor
movsl
lcall
les
fmuls
add
sbb
movsb
repnz
popa
jo
xor
inc
ljmp
sub
iret
inc
mov
iret
mov
adc
fld
jmp
and
sub
insl
ljmp
cmp
lds
dec
push
push
fwait
jo
push
jmp
pushf
test
mov
inc
and
cli
mov
mov
mov
scas
lret
fldenv
aaa
fstpl
or
daa
popa
or
fbld
gs
mov
fldenv
loope
jns
imul
cld
sahf
in
stos
push
pop
fnsave
mov
in
aam
push
aaa
hlt
int
sbbl
insb
fmuls
dec
sub
mov
jns
jbe
jecxz
mov
adc
repnz
into
repz
std
rcll
add
aas
or
dec
leave
stc
int3
push
sbb
or
neg
int
mull
push
push
jo
loope
out
ja
mov
test
and
aaa
vmwrite
lret
mov
cmp
insb
test
add
fnstenv
adc
ja
push
orl
dec
adc
xorl
jne
mov
js
shl
addl
mov
jae
cmpsb
nop
sbb
rorb
bound
and
adc
pop
addr16
mov
jae
mov
sbb
jbe
lds
mov
xor
xor
push
call
push
sub
leave
lock
and
rclb
pop
pop
xchg
ficoml
jl
jmp
clc
lock
das
lret
icebp
xchg
xchg
ljmp
out
or
sub
dec
push
xor
mov
lds
mov
add
adc
add
aaa
mov
ret
lds
lock
sub
mov
shll
mov
push
test
je
jge
lahf
loopne
test
stos
push
imulb
loop
xor
test
push
pusha
iret
xor
je
cld
je
push
in
lahf
call
xorl
xor
dec
sbb
outsb
push
dec
cwtl
in
or
pop
fiaddl
shl
mov
cmp
fimuls
bound
fcomp
mov
push
nop
into
insl
ss
xchg
and
mov
mov
cld
cltd
fstpt
inc
pop
mov
cltd
ljmp
hlt
sbb
push
sbb
std
cmp
shlb
loope
and
pop
pop
mov
cmp
inc
imul
pop
mov
push
pop
mov
and
mov
rclb
repnz
rorb
mov
stos
adc
dec
les
inc
dec
sbb
mov
ret
clc
outsl
pop
xorb
sbb
push
pop
scas
xor
push
imul
lcall
sub
jb
lds
cmp
xor
and
movsl
push
fwait
mov
cmp
aas
jl
aad
enter
mov
jno
out
xchg
jle
adc
ret
nop
pop
test
fwait
xchg
jbe
stc
loope
mov
fdivrp
push
jae
bound
fstpl
nop
pop
clc
sub
js
inc
outsb
ficoml
push
sbb
movsb
jns
aad
fcomp
push
or
mov
pushf
xchg
out
rorl
mov
adcl
aad
addr16
mov
aaa
sbb
and
inc
push
jle
mov
ficomps
loop
xor
xchg
ja
loop
lods
pop
adc
and
fwait
psubq
loopne
movsb
in
mov
gs
js
in
xor
movsb
movsl
frstor
arpl
in
adc
pop
adc
mulb
dec
inc
ljmp
inc
push
xchg
mov
xor
jge
out
cmpl
popa
jno
adc
scas
add
jmp
push
pop
cmp
adc
inc
sahf
pusha
mov
cltd
out
jo
sbb
cmpb
pop
lock
repz
cmp
das
push
je
imul
inc
mov
ja
jmp
nop
mov
arpl
push
and
nop
mov
inc
sbb
jno
int
xchg
or
push
stos
add
mov
xor
add
lea
cld
je
out
jb
arpl
lods
jo
aaa
or
or
add
jb
rolb
sarl
popa
push
inc
in
mov
out
sub
std
push
pop
imul
push
mov
clc
hlt
mov
xchg
je
pop
repz
sub
mov
pop
stos
ljmp
sbb
add
sbb
sbb
scas
dec
and
mov
pop
cmp
sub
sub
adc
sub
adc
sbb
mov
sub
sbb
xlat
data16
punpckhdq
dec
xrelease
xor
xchg
push
push
es
cmp
insl
push
push
and
shrb
xor
xor
pop
xchg
jle
clc
into
cwtl
std
leave
imul
lahf
sbb
fstl
int3
or
jae
add
fnstcw
add
pushf
dec
xchg
rcrb
out
add
mov
jbe
mov
sahf
cmp
xorb
or
loop
leave
fwait
icebp
xor
nop
add
pop
insl
cmp
mov
lock
ds
adc
or
call
or
cmp
dec
add
clc
xor
cmc
mov
mov
dec
mov
outsl
fldcw
pushl
adc
adc
jecxz
popa
mov
fwait
jmp
stos
adc
and
in
and
push
adc
lahf
fwait
int3
cld
cmpsl
mov
rcrl
fisubl
or
dec
or
ja
outsl
pop
shrb
mov
repnz
roll
les
pop
inc
insl
pop
adc
mov
test
insb
lock
test
mov
inc
xor
add
xor
xor
pop
in
js
imul
cmp
ds
js
or
stc
jmp
mov
arpl
pop
pop
ljmp
leave
out
cltd
ljmp
addb
push
inc
xchg
loope
lock
imul
jne
push
leave
sbb
aas
mov
dec
or
adc
bound
push
rorl
ds
dec
scas
iret
fxch
jmp
jg
push
mov
arpl
hlt
fstpl
test
mov
push
jl
xlat
pop
cmc
in
lods
into
pop
jl
add
dec
xchg
sbb
movsb
sbb
out
xor
dec
mov
addb
push
flds
fs
popa
inc
loope
sbb
sub
inc
push
sub
adc
mov
push
icebp
lea
lods
ror
inc
adc
mov
jno,pn
stc
bound
outsl
les
imulb
jno
stc
mov
movsl
mov
arpl
out
shlb
adc
outsb
add
push
mov
out
sbb
mov
stc
push
mov
and
test
xor
xor
and
icebp
cmp
mov
inc
cld
sahf
mov
mov
sahf
shrl
pop
ss
push
sti
sub
pop
sbb
hlt
inc
addr16
test
lea
movsb
jno
xchg
push
mov
sahf
loope
cmp
je
adc
cwtl
daa
add
push
jecxz
or
push
adc
rorb
cmp
rcr
jmp
sbb
aam
xchg
xor
inc
adc
push
jle
ja
mov
xor
pushl
ja
push
lahf
bound
loopne
adc
roll
or
mov
mov
pop
add
jl
test
es
hlt
icebp
ss
xchg
decl
cld
arpl
aam
ffree
in
xchg
or
fcoms
jns
shrl
mov
lcall
adc
push
rolb
mov
decl
fistpl
scas
into
loope
pop
aas
inc
sahf
sbb
cmp
ja
lahf
xor
clc
lret
fldenv
pop
mov
syscall
leave
mov
adc
jp
mov
lea
push
loop
addr16
add
in
mov
mov
in
test
push
push
push
pushf
mov
cmp
repz
and
or
push
loop
inc
cmp
out
jbe
in
xor
out
std
push
xchg
jbe
jbe
sub
mov
jnp
cmp
xor
cmp
xchg
add
xor
dec
out
add
mov
mov
push
enter
mov
xchg
mov
adc
fidivrl
adc
and
adc
fldt
push
lods
fs
xor
cli
scas
fidivs
xor
movsb
cmp
mov
mov
loop
xchg
lods
js
aas
mov
pop
jns
jp
jle
sti
adc
std
mov
fstpt
inc
stos
insl
es
or
sbb
pop
scas
add
popl
cmp
scas
roll
push
push
sub
adc
jnp
lahf
mov
mov
stc
mov
mov
inc
mov
cs
pusha
mov
invd
cmp
adc
ror
es
sub
jmp
ja
mov
mov
sub
call
test
addr16
test
std
mov
jno
cmc
cli
insb
outsb
and
test
lcall
mov
mov
dec
dec
push
adc
fidivs
not
xlat
mov
adc
mov
cmpsb
mov
inc
ss
mov
push
xor
lea
std
cmpsl
insl
mov
mov
daa
dec
jno
int
mov
push
sub
ret
psubsb
sbb
lods
pop
daa
pop
dec
jg
or
sti
xor
je
cmp
rcl
jnp
sub
in
cmp
mov
popf
cmp
stos
fldz
push
sub
ret
lea
iret
dec
incl
xor
jmp
test
cmp
and
jmp
cwtl
dec
xor
mov
xchg
sub
test
popa
pop
xchg
jmp
and
xor
cmpsl
sub
out
js
notl
std
mov
sbb
insl
test
or
and
sub
jne
jb
push
inc
mov
lret
jnp
push
and
aam
ficompl
pop
jecxz
adc
cli
push
and
jge
imul
pop
je
in
cmp
mov
mov
or
mov
lret
cmpsb
mov
sub
sub
pop
add
fwait
or
add
and
std
mov
cmpsb
clc
xor
pop
adc
inc
xchg
lock
ret
xchg
loop
enter
es
mov
idiv
fwait
push
andb
mov
push
leave
stos
arpl
sbb
mov
cmp
enter
test
jbe
scas
xor
jmp
lods
pop
adc
mov
sub
gs
push
or
cltd
icebp
test
movsl
mov
lcall
inc
cmpsb
popf
fbld
sbb
filds
push
mov
sbb
cmpsl
inc
mov
fildll
jg
ljmp
or
cmpsl
pop
movsl
inc
in
bound
pop
sarl
pop
jl
cmp
fdivl
mov
or
jg
mov
and
in
stos
scas
mov
adc
cmp
fnstcw
xchg
sub
je
test
inc
imul
repnz
mov
arpl
pusha
imulb
mov
jp
in
cmp
mov
mov
xchg
mov
cmove
fwait
imul
aam
xchg
jbe
add
xor
xchg
ss
pop
and
stc
push
xlat
test
int
cmpsl
out
pop
addl
addb
lods
lret
mov
xchg
ljmp
gs
push
mov
push
decl
and
or
ret
sub
push
dec
sub
imulb
shll
adc
mov
adc
popa
mov
aam
pop
loopne
into
sbb
adcb
stc
arpl
adc
jle
push
or
andl
xchg
mov
mov
xchg
mov
add
popa
pop
mov
mov
mov
stos
mov
daa
inc
fwait
int3
in
mov
in
add
ljmp
sti
scas
nop
and
xorb
js
insb
cli
add
in
lcall
mov
fisubl
mov
jg
jmp
call
mov
sub
push
dec
cmp
movsb
push
xchg
dec
movsb
or
cmp
mov
cmp
call
rcrl
xchg
xchg
mov
sahf
test
add
lock
jae
cmpsb
les
cmp
das
push
jnp
out
rcrl
icebp
pop
sbb
popa
mov
mov
decl
jmp
lods
cmp
mov
enter
and
jne
xchg
sub
xor
xchg
cwtl
js
stos
jg
sti
mov
dec
xor
aas
mov
out
jge
jl
inc
adc
mov
lcall
push
add
mov
repz
stos
xor
iret
fcomps
aaa
mov
mov
psubusb
add
add
movsl
push
and
sti
mov
jns,pt
inc
ret
push
shlb
mov
adc
aam
nop
int3
pop
bound
xor
fiadds
dec
iret
js
cmc
push
mov
cwtl
enter
inc
hlt
xchg
in
pop
sahf
faddp
or
mov
repz
das
adc
psllq
cli
pop
js
mov
aam
insb
mov
sbb
popa
adc
mov
sub
xchg
in
pop
push
fnstsw
sub
rorl
rorb
mov
mov
sbb
dec
or
lcall
xchg
dec
inc
pop
push
inc
xor
in
fisubrs
int
mov
cmp
inc
sti
mov
pusha
in
pop
xchg
xchg
xor
std
jae
cmc
scas
std
add
stos
xchg
add
sbb
cltd
outsl
scas
pop
mov
popf
add
fisubl
jno
gs
mov
pop
adc
ret
mov
push
sbb
xlat
push
inc
mov
shlb
sub
mulb
mov
sub
xchg
or
and
xchg
das
cmp
mov
enter
enter
dec
out
inc
xor
aaa
je
mov
fsubrl
push
movsb
xor
xlat
push
xor
rclb
mov
pop
scas
cmp
inc
mov
fstps
and
mov
jb
cli
adc
orl
mov
jp
notl
and
inc
out
xor
les
cmovle
push
or
cmpsl
xchg
jnp
rcrl
mov
add
lds
mov
iret
dec
pop
mov
cmp
mov
xor
jns
paddsw
mov
xchg
push
xchg
imul
mov
lods
pop
test
pusha
mov
imul
mov
and
test
ss
fcmovb
insb
mov
jb
in
fmuls
push
sbb
mov
push
ja
mov
lea
out
jp
scas
jmp
jl
sbb
mov
cmp
gs
pop
jbe
sar
not
in
sbb
repz
push
inc
sti
loope
cmp
nop
enter
into
mov
lahf
rorb
inc
xlat
mov
pop
cmpsb
mov
shrb
repz
arpl
jle
clc
xchg
cmc
sub
mov
lea
mov
cmc
cmc
pop
push
in
mov
pop
les
fimull
lcall
adc
aaa
mov
push
imull
sbb
xchg
mov
sbb
push
pushf
push
fidivl
out
mov
cwtl
and
imul
mov
xchg
jne
mov
je
sbb
jg
mov
xchg
jae
cmp
icebp
jbe
pop
or
xor
and
pop
and
jl
jnp
pop
sbb
fidivrs
inc
add
ljmp
adc
sub
mov
out
sbb
js
jne
push
pop
sbb
out
mov
shll
dec
js
out
sbb
and
or
out
push
arpl
and
adc
and
roll
sub
xchg
sub
or
mov
test
inc
cmp
scas
push
lea
scas
cltd
popa
adc
ds
aam
jae
jp
and
ss
mov
xor
stos
and
shl
repnz
adc
pusha
faddp
ljmp
push
negb
daa
neg
psubb
movsb
jmp
sbb
add
or
arpl
jle
sbb
into
lods
or
mov
test
repnz
gs
call
cmp
pusha
sti
stos
fmuls
cmp
rcll
mov
push
sub
sti
fwait
mov
sub
xor
mov
mov
jp
jbe
enter
mov
inc
xor
jmp
scas
inc
lcall
add
in
iret
cmp
lds
cmpsb
popa
scas
add
cmp
jmp
or
sub
lahf
popf
inc
xchg
mov
lcall
nop
add
loop
xor
fistl
cmc
push
mov
or
in
push
pusha
gs
aam
movsb
sbb
pop
cmpsl
aaa
ljmp
xchg
or
ljmp
ljmp
ss
or
adc
data16
or
lret
cmp
mov
lret
pop
leave
loop
stos
aaa
xchg
mov
xor
je
xchg
and
or
addr16
push
out
jmp
cwtl
pop
hlt
push
sbb
adc
aaa
dec
pop
xchg
lret
pusha
repz
push
xor
cs
js
call
push
outsl
stos
push
jge
js
call
jno
mov
pop
test
fst
ja
xchg
repnz
call
mov
lcall
in
dec
fidivrl
movsb
add
lret
in
jp
dec
loope
mov
insb
jl
pop
les
pop
mov
fadds
pop
lods
xchg
inc
adc
or
jno
rorl
jb
mov
sub
adcb
stos
lahf
jecxz
mov
imul
pop
adc
sub
jb
mov
jns
ret
fcmovnbe
pusha
dec
jge
inc
out
mov
push
xchg
loop
sub
add
dec
stc
rclb
lds
pop
jg
loop
cmpsl
lcall
stc
cmc
pop
lret
loopne
xor
dec
jmp
xchg
and
mov
jne
sub
pop
cmp
cltd
xor
jno
sub
std
jns
mov
stos
inc
popf
push
xlat
fdivr
out
add
xor
sti
dec
sub
xor
and
fidivl
mov
lods
test
xor
sarb
jmp
sti
outsb
outsb
mov
psraw
scas
sarl
add
js
insl
popa
and
cmp
xchg
jecxz
xor
sbb
and
pop
in
adc
cmc
sub
lods
cmpl
loope
lods
mov
lret
mov
js
adc
dec
out
pop
into
push
movsl
scas
pusha
ljmp
pop
mov
mov
sub
push
pop
adc
xchg
les
pop
push
cmp
in
sbb
inc
add
sti
and
shl
cmp
aam
stos
clc
fcomps
push
into
push
pushf
cmp
and
adc
mov
and
sub
cltd
xchg
jmp
add
xor
xor
nop
mov
xchg
rcl
and
int3
lds
xor
adc
and
ds
inc
js
cmp
bound
xor
sub
mov
loope
xchg
mov
push
or
imul
insl
out
mov
xor
shlb
and
not
insl
clc
rcrl
xchg
out
pop
fwait
mov
push
lock
mov
adc
jbe
mov
out
xchg
inc
enter
jo
insl
je
ja
rorb
sbb
punpcklbw
hlt
pop
lret
nop
push
xchg
outsb
in
xchg
fsubrp
ljmp
test
scas
pop
movsl
movsl
mov
movsl
push
decl
cltd
stc
xchg
push
sbb
inc
add
in
enter
mov
and
mov
sub
mov
mov
enter
lret
int3
dec
packsswb
dec
sbb
xchg
and
inc
jbe
js
jg
or
leave
lods
das
stos
mov
sti
movsl
sahf
cmp
push
cmp
jb
inc
jle
and
ror
cli
ror
iret
ret
mov
jae
jle
out
pop
mov
sahf
loop
bound
or
rorl
cmp
outsl
cmp
sarb
lahf
out
mov
int
adc
aas
jo,pn
or
mov
lds
imul
push
repz
push
test
std
pop
cli
lock
movsb
dec
jae
pop
rolb
adc
leave
push
fwait
jecxz
sub
cmp
hlt
mov
cmp
push
xchg
iret
imul
inc
cmc
lret
dec
pop
sub
inc
xor
and
jae
ss
push
push
inc
mov
popa
out
pop
dec
lds
mov
imul
push
repz
fistl
loope
rcrl
cmp
and
loopne
popf
adc
pop
push
cmpsb
lcall
dec
fiaddl
mov
aam
sub
push
add
push
pop
jmp
push
pop
pop
inc
cmpb
das
lret
mov
adc
std
dec
fisubrl
pop
add
ret
jge
mov
mov
in
ss
inc
jg
pop
push
add
subl
lahf
int3
ja
add
pop
or
pop
cmp
loopne
popa
sub
adc
nop
iret
push
mov
push
jne
jo
add
and
mov
stos
push
xorl
push
xor
inc
fsubs
mov
out
mov
jecxz
sbb
into
aas
ljmp
jbe
iret
mov
xchg
rcrl
pop
dec
mov
push
scas
popf
pop
push
rcll
xchg
loopne
xchg
mov
cmc
cmpsl
in
into
cmc
sarl
iret
mov
cld
test
cmp
test
std
sbb
repnz
add
pop
adc
dec
orb
iret
xor
inc
and
jne
cmp
cmp
jp
mov
sbb
xor
sahf
push
scas
sub
or
jnp
adc
pop
out
lea
test
jg
sub
mov
add
subl
out
je
inc
push
add
aas
jnp
enter
cmp
lock
sbb
jp
or
pop
pop
xchg
mov
jb
ja
xor
and
loop
addr16
mov
ret
mov
incl
push
rclb
sub
ss
test
rorb
push
dec
or
arpl
shll
dec
scas
frstpm(287
pop
jl
test
sbb
or
lock
adc
nop
or
iret
push
lahf
fldcw
stos
enter
lea
sub
pop
pop
xor
pop
pop
mov
movsl
jae
loopne
orl
popa
gs
sbb
test
pop
mov
jno
in
cmp
adc
push
inc
aad
fistps
out
mov
sub
aas
sbb
jmp
pop
dec
fstps
push
cmpb
daa
jp
out
add
cwtl
or
aas
pop
xor
in
mov
sahf
pop
lock
push
in
sub
movsb
loopne
push
add
ss
fistps
imul
jnp
mov
pop
inc
mov
add
int
cmp
std
stos
les
cmp
push
jl
cli
pop
enter
add
sbb
les
inc
or
mov
imul
add
xor
scas
lcall
pop
and
adc
mov
into
aad
mov
adc
xchg
mov
pop
shlb
nop
and
jne
lea
mov
lret
xchg
mov
pushf
rcll
pop
cli
cmp
lods
cmp
push
in
sbb
or
in
fsubl
xor
cmp
inc
inc
insb
cmp
mov
ljmp
add
mov
mov
xlat
enter
stc
sbb
sub
lcall
outsl
insl
xchg
push
jmp
jp
jmp
inc
loope
fld
js
enter
xor
pushl
pop
rol
fcom
movsb
das
and
clc
adc
mov
dec
adc
lods
test
xchg
and
or
xchg
sbb
pop
test
or
ljmp
mov
mov
jg
aam
add
cmp
xor
neg
pop
das
cli
test
cwtl
dec
inc
inc
cltd
sbbl
cmpsl
aad
xor
xchg
sub
divl
jnp
int3
bound
sarl
mov
iret
adc
lahf
xlat
stos
gs
jge
add
sub
dec
out
stc
jmp
data16
sbb
lret
in
adc
pop
mov
subl
psllq
jp
js
or
jae
cld
jge
mov
xchg
pop
fdivr
je
insl
lea
loop
imul
mov
das
lods
jae
jg
sar
add
cmp
sbb
dec
or
push
test
movsl
mov
leave
xor
jb
sub
pop
out
jl
jae
push
arpl
sbb
add
xlat
xor
adc
inc
mov
push
jp
fs
sub
repnz
mov
mov
sbb
movl
jmp
xor
js
jge
mov
xchg
xor
into
cmp
fucomip
in
and
pushf
pop
popf
pop
add
popl
dec
xor
shrl
outsb
in
aaa
xlat
sbb
fsts
jg
cltd
mov
scas
jmp
js
imul
cli
mov
mov
ret
mov
out
scas
xor
outsb
jns
cmpl
sbb
pop
cmp
idivb
insb
iret
lea
sbbb
insl
jae
add
mov
pushf
xchg
stos
cli
mov
out
add
js
pop
xlat
scas
loop
fsubs
pop
inc
leave
dec
mov
clc
sahf
test
adc
pop
inc
xor
fs
pop
push
xor
arpl
cmpsb
stos
cmp
mov
push
aas
sub
jno
sub
jne
push
flds
jne
sbb
pop
fbstp
lods
xor
add
mov
daa
xchg
test
add
lcall
cmp
pop
jecxz
sbb
mov
jmp
dec
xor
jge
std
rclb
scas
repnz
jmp
sub
inc
adc
sbb
push
inc
es
and
cmp
sub
inc
shrl
ss
cmp
fiaddl
scas
jecxz
add
mov
je
adc
pop
adc
dec
dec
push
ror
not
add
pop
cmc
add
aaa
sti
mov
popa
mov
mov
pop
push
rorb
and
mov
lea
js
dec
in
ficoml
mov
mov
fimuls
pop
and
out
aam
hlt
mov
cli
sbb
leave
out
test
cmp
hlt
add
mov
sar
lahf
jb
or
dec
dec
out
cltd
and
je
loope
ds
add
fisttpll
cmp
fisubs
les
mov
and
inc
xor
mov
vphaddbq
lock
jb
je
mov
xchg
and
bswap
fidivs
pusha
cwtl
aam
ljmp
lods
les
js
inc
mov
es
or
in
das
lock
gs
mov
cwtl
inc
loop
or
insb
adc
inc
dec
imul
out
clc
jmp
jg
push
dec
adc
out
ja
and
notb
or
cmp
cli
loope
sub
stos
fdivr
cmp
pop
jns
mov
sbb
mov
inc
cltd
adc
pop
mov
push
adc
enter
sbb
outsl
jo
xchg
insl
mov
push
pushf
push
cld
sub
lret
mov
dec
push
movsb
dec
sbb
jb
inc
pop
shrb
andb
xor
std
sub
push
data16
lock
dec
xorb
ret
mov
dec
movsl
imul
orl
lret
lods
addb
cltd
hlt
outsl
ds
and
mov
cmpsl
int3
mov
mov
lods
sub
pop
daa
sub
add
loopne
xor
jmp
add
mov
cmp
outsb
or
movsl
push
lret
xlat
testb
inc
sbb
pop
fiadds
js
adc
xchg
sub
cmp
mov
push
int3
repz
xor
popf
and
dec
imul
xchg
pusha
cmp
call
push
dec
xchg
push
popf
push
mov
leave
dec
dec
push
add
xor
lds
or
sub
out
out
push
out
enter
fistpl
iret
pushl
push
jb
mov
jmp
jge
cltd
add
sub
rclb
jmp
xor
mov
ljmp
inc
cmp
inc
insb
inc
adc
fs
mov
pushf
inc
jns
insb
bound
xchg
or
loop
sbb
mov
cmp
test
dec
inc
dec
add
cld
pop
mov
mov
mov
mov
inc
ja
cmp
out
pop
jb
insb
sbb
dec
push
hlt
xor
in
push
fcmovu
sub
jg
loopne
push
lcall
jne
fs
nop
cmp
insb
pop
cmp
aaa
or
jne
and
push
popf
jne
cltd
lock
call
int
fidivrs
mov
mov
xlat
cmp
xor
cmp
sbb
arpl
mov
push
and
jne
inc
gs
push
scas
push
and
adc
add
loope
jmp
push
test
sub
add
jmp
and
xor
sbb
mov
fildll
dec
xchg
dec
loopne
clc
fld
pop
ja
ja
out
or
mov
imul
in
ret
sbb
shrb
push
and
and
lock
sbb
sbb
pusha
bound
add
call
jg
ffree
sub
sahf
mov
fwait
push
ja
stos
roll
jno
mov
jns
out
cld
mov
shl
mov
push
or
mov
jge
xor
pop
mov
mov
mov
and
dec
jns
sub
inc
out
pop
dec
pop
out
scas
mov
call
push
jge
jne
push
mov
jl
inc
xor
pop
xor
dec
cmpsl
leave
orb
xor
adc
lods
pop
mov
stos
lret
jno
test
cmpsl
xchg
jge
sbb
push
test
mov
cld
inc
cmpsl
xor
sbb
dec
cmp
pop
cmpsl
lods
adc
imul
jo
andb
loope
mov
sub
inc
add
adcb
in
mov
fcoms
aas
push
lock
inc
sbb
mov
push
insb
jno
cli
jecxz
cmp
imul
pop
je
sarl
push
cmpsb
sub
fsubrl
sub
push
psrad
test
sbb
test
or
mov
data16
xchg
into
loope
sarb
out
mov
movsl
int3
rcll
test
repnz
incb
inc
test
push
lock
push
test
add
stos
imul
xchg
ret
push
in
xchg
lahf
mov
mov
movsl
adc
dec
aaa
out
cli
fstl
adc
sbb
test
inc
jecxz
cmpb
je
popa
lret
cmp
fdivrs
test
inc
or
cmpsl
cmp
imul
xchg
sbb
xlat
cli
das
inc
sbb
add
mov
packssdw
add
leave
shll
adc
dec
mov
xor
enter
dec
rcll
in
jae
rcl
arpl
movsl
and
inc
xchg
sbb
test
fisttps
cs
divb
inc
xchg
push
add
dec
mov
and
inc
sbb
push
or
dec
negb
add
push
push
mov
mov
add
push
cltd
dec
ret
aam
push
lret
lods
iret
mov
sub
scas
incl
sahf
sti
out
mov
sub
adc
popa
xor
aam
jmp
fwait
sub
aad
adc
cmpsb
es
jp
mov
xor
jae
or
sbb
repnz
cwtl
push
cltd
add
cmp
daa
add
sbb
test
mov
jmp
loop
enter
andb
xchg
jge
lret
stc
mov
pusha
pop
inc
jp
mov
lods
cmp
or
mov
mov
aaa
gs
imul
pop
or
cwtl
mov
add
fidivrl
jecxz
pop
cmp
push
mov
movsl
std
inc
shlb
xchg
push
jg
test
push
bound
rcrl
sbb
mov
fidivrs
scas
pop
adc
xchg
icebp
sub
js
cmp
stos
in
mov
popa
xor
xor
dec
ficomps
mov
inc
rcl
imul
fs
fisubrl
outsb
jp
out
loop
xor
cs
lret
push
fucomp
pop
pop
testb
sbb
push
mov
test
outsb
mov
fisubs
lds
test
push
mov
mov
int3
outsl
pop
test
adc
fisubl
jns
repnz
sub
mov
xor
inc
pop
pop
push
jmp
out
and
mov
pop
adc
dec
sub
es
imul
jle
jae
std
fisttps
shl
cmp
fbstp
das
xchg
add
pop
adc
mov
lea
shll
xchg
pop
or
ljmp
ljmp
leave
test
dec
mov
jnp
jecxz
rcrb
jae
mov
hlt
sbb
push
xchg
sub
hlt
mov
and
sub
pop
cld
cs
repz
push
jl
push
lret
xchg
cmp
add
and
nop
lret
xor
mov
cmpsl
jmp
and
dec
adc
push
jge
rcr
test
roll
add
out
or
mov
mul
adc
add
push
sub
in
leave
sbbb
cld
cli
mov
and
cmp
icebp
orb
movsb
sbb
roll
add
jle
inc
push
or
test
in
mov
cmp
lock
mov
sarb
ret
dec
aam
mov
jge
lods
add
scas
popa
push
je
mov
xchg
mov
cwtl
fiaddl
jb
adc
push
adc
test
mov
lock
mov
and
es
and
xor
jecxz
xchg
mov
call
sbb
das
xchg
adc
and
sub
jl
xchg
and
inc
into
push
mov
fistps
cmp
push
dec
sbb
push
push
push
jb
pushw
cmp
jnp
insl
mov
mov
adc
xor
mov
add
or
dec
adc
fdivs
lods
fimuls
out
mov
ret
inc
ret
or
dec
and
stc
mov
adc
ja
nop
pop
adc
push
les
lds
jno
fisubrl
mov
sub
and
sbb
shll
cmpsl
shrb
mov
pop
call
sbb
ror
push
ss
loop
lahf
sbbb
iret
add
out
cmp
and
jl
adc
mov
scas
pop
mov
dec
popa
stc
fdivs
js
pop
add
sbb
aas
jp
xor
sub
add
sahf
fdivl
inc
je
insl
in
and
add
xchg
divb
jno
lret
sub
or
mov
mov
cmp
xchg
fisubs
pop
ja
mov
ja
popf
xchg
repnz
push
test
outsl
xchg
or
cmc
xorl
sub
push
cli
cmp
mov
jne
aad
in
and
xchg
popa
lods
push
mov
sub
into
pop
movsl
push
pop
frstor
xchg
mov
popf
push
push
push
pop
outsb
or
mov
push
add
test
inc
pop
call
sbb
or
in
cmp
aam
adc
fidivrl
pop
sub
push
cwtl
je
and
test
fists
test
subl
jne
rolb
daa
cld
xchg
push
les
orb
dec
fisubrs
movsb
outsl
push
jl
mov
sbb
ret
dec
add
in
sbb
dec
ljmp
bnd
sub
clc
inc
shll
ret
movhps
fcoms
pop
int3
or
aas
ror
mov
popf
push
lcall
int
ds
mov
data16
adc
out
and
and
fcomps
sbb
out
mov
mov
shl
sarb
sub
jae
imul
lret
addr16
loope
add
into
clc
sub
aas
mov
dec
mov
cs
push
test
aad
and
cmpsb
out
dec
xchg
xchg
and
and
mov
mov
in
in
dec
xor
jb
lret
into
lcall
outsb
xor
imull
mov
cmpsl
in
dec
fstpt
jmp
cltd
inc
shrl
inc
mov
mov
sub
test
xchg
testl
scas
xchg
sti
xchg
mov
push
sub
pop
xor
mov
and
ljmp
sub
sub
push
movsl
and
mov
fcmovnbe
les
stc
inc
ret
push
clc
paddb
cwtl
mov
or
or
nopl
xchg
push
insb
xlat
and
mov
push
inc
cmp
mov
ret
mov
sbb
mov
cmp
fidivs
mov
sub
sbb
call
xor
lahf
push
inc
sub
mov
xor
int
inc
jecxz
fidivs
clc
push
and
dec
cmc
fldenv
shll
nop
sbb
push
sbb
sbb
shrb
lret
call
std
jmp
sub
rcll
mov
and
mov
in
nop
mov
mov
incb
enter
aas
add
inc
and
or
movsl
cmp
mov
push
push
bound
in
lret
dec
mov
push
dec
scas
jbe
dec
scas
cmp
imul
mov
xchg
bound
push
jno
jl
fs
xor
popf
dec
lahf
stc
inc
or
or
stos
mov
push
sbb
and
or
or
outsb
pushf
popf
pop
push
mov
in
es
dec
arpl
and
imul
or
xor
and
mov
cmc
jle
push
sbb
cmpsl
or
out
cmp
xor
sahf
enter
cmp
dec
jae
mov
xchg
pushf
xor
popa
cs
mov
fcoms
pop
xchg
cmpsb
mov
loop
subl
push
addr16
sub
inc
arpl
inc
push
jb
sub
aas
in
sbb
fisttpll
mov
lahf
xor
lcall
jb
cmp
fisttpll
jbe
xlat
and
add
xor
push
mov
rcr
or
or
inc
push
jnp
mov
add
addl
rep
and
cmp
shr
call
int
fsts
mov
sub
sub
xchg
jge
and
sahf
sbb
mov
aas
out
jne
jns
out
out
mov
movsl
cmp
sti
lahf
and
outsb
xchg
das
mov
or
sub
rcrb
dec
fidivs
hlt
push
ret
cmp
inc
cmp
inc
push
xor
inc
pop
mov
test
pop
mov
fimuls
jl
xchg
cmpb
jg
sbb
dec
xor
out
jecxz
test
sub
jmp
scas
mov
in
out
cld
repnz
stc
xor
pop
movb
pmulhw
push
xor
inc
ficompl
xchg
adc
add
jge
and
push
dec
mov
out
ljmp
jl
rolb
xlat
ror
jmp
int
fisttpl
arpl
push
int
push
leave
sub
pop
iret
push
push
mov
pop
push
out
test
mov
xchg
das
mov
or
ret
imul
in
cmpsb
add
sub
adc
imul
push
add
jns
mov
inc
lcall
out
leave
adc
sbb
push
mov
jecxz
xor
outsb
jb
je
mov
mov
movsb
mov
sbb
js
pushaw
push
lret
leave
dec
scas
lock
dec
ret
dec
mov
test
inc
sbb
mov
sub
cmp
enter
cld
sbb
je
dec
call
outsb
cmc
push
mov
jecxz
jo
popf
push
fs
pop
or
xor
bound
hlt
mov
mov
mov
ljmp
dec
ret
sahf
aaa
in
xchg
inc
scas
pop
and
inc
add
jp
das
xor
mov
xchg
fists
add
shll
rcll
cmc
mov
jl
and
jmp
leave
sub
adc
jmp
dec
imul
insb
orb
fwait
push
cmp
fdivrs
push
and
arpl
daa
pop
adc
sbb
jae
push
add
cmp
cwtl
xor
ficoml
gs
lods
leave
cmpsl
lcall
dec
pop
ret
sbb
lods
dec
xor
icebp
in
cs
inc
stc
stos
dec
shll
xchg
push
jo
shrl
gs
psubusb
stos
xor
stos
filds
dec
out
in
fs
mov
mov
xchg
addr16
loopne
pop
mov
sbb
lret
popa
shlb
mov
andl
fimuls
leave
sbb
mov
mov
js
fdivl
cmpsl
out
mov
imul
in
das
cli
out
jle
jle
iret
mov
add
dec
popa
lret
fidivrl
mov
mov
shlb
push
jle
ss
ljmp
pop
mov
insl
adc
pushf
jle
push
incl
mov
cmp
cltd
fists
push
jae
adc
cmp
jl
push
push
dec
fsubrl
sbb
pop
cli
les
cmpsl
pop
cmp
es
mov
negb
dec
subl
testb
fs
jecxz
in
xor
mov
inc
insl
jle
es
shlb
int
xchg
sub
fbstp
mov
push
jbe
push
push
or
fisttps
pop
and
sub
cmc
stos
mov
and
mov
inc
xchg
ret
call
mov
cmp
movsl
lret
imul
sahf
sbb
test
lcall
dec
fistl
dec
add
daa
mov
mov
mov
scas
xor
lea
cmpsb
mov
call
lods
jecxz
inc
mov
pop
pop
mov
sub
imul
pop
jle
xor
cld
cmp
decl
std
gs
and
xchg
jnp
in
sbb
xor
push
mov
flds
ja
pop
xor
mov
pusha
sub
push
or
cld
mov
clc
mov
outsl
jo
rorb
xorb
xchg
stos
outsb
add
mov
mov
add
jle
mov
or
ds
mov
mov
inc
ja
leave
fsubl
insb
fbld
and
pop
xor
pop
out
xchg
push
adc
pop
pop
mov
sbb
cmpb
xchg
cmp
add
mov
cmpb
outsb
xchg
xor
mov
xor
out
decl
movsl
cmp
and
xchg
test
sbb
sbb
in
cmpsl
insl
add
je
adcb
and
aas
into
pop
mov
vpshuflw
ds
fdivrl
ror
sbb
adc
mov
mov
rolb
jge
jbe
addl
loop
xor
jmp
fadd
xchg
in
or
mov
popa
fbstp
cmp
mov
jecxz
js
lret
and
daa
add
out
add
inc
xchg
pop
dec
jp
fisttpl
mov
xor
enter
jo
or
test
jae
xchg
sub
adc
xchg
or
mov
dec
pusha
push
rsm
push
inc
inc
dec
cmp
sahf
push
pop
push
ficomps
js,pn
cmp
sub
mov
pop
fsubrl
pusha
fstpl
sbb
movsb
adc
sahf
pop
insl
stos
in
push
xlat
icebp
stos
or
stc
test
cwtl
add
imul
jle
xchg
scas
movsb
cltd
jl
aaa
lock
nop
mov
shlb
adc
ret
lcall
push
adc
loop
mov
sbb
jl
fstpt
mov
insl
popf
lret
shll
repnz
rclb
inc
cmp
les
cmp
outsb
push
testb
add
rorl
adcb
cwtl
mov
lds
unpcklps
push
pop
stos
popa
adc
data16
cltd
sub
inc
sub
fadds
push
pop
or
dec
out
stos
lods
cmp
mov
jl
test
pop
push
int3
mov
mov
inc
push
sbb
ja
aad
adc
mov
xor
ret
loopne
mov
add
xchg
mov
lahf
dec
xlat
or
popa
rcrl
cltd
fucomp
insl
aas
pop
stos
xchg
jp
outsb
or
dec
push
sbb
jo
test
push
cmp
call
js
jmp
mov
mov
mov
cmpsl
bound
ljmp
add
adc
jne
rclb
sub
rclb
das
out
cmp
inc
dec
insl
mov
inc
mov
aam
inc
iret
movsl
push
jno
push
aad
filds
pop
loopne
in
aad
mov
pushf
and
xor
push
mov
xchg
fadd
and
insl
lea
iret
mov
and
mov
inc
mov
jns
insb
shll
xor
mov
jnp
cs
sub
sbb
adc
jne
lods
in
ss
and
rcrb
hlt
mov
or
pop
imul
ljmp
mov
ss
push
lret
in
sti
int3
rorb
in
incl
jge
insl
cmp
aaa
call
das
in
loope
xor
imul
ljmp
out
iret
pop
in
sti
mov
jns
add
sbb
push
jnp,pt
shrb
xor
add
ror
mov
movsl
push
xor
push
repnz
add
or
in
jb
aaa
fwait
and
insb
sub
pop
mov
mov
add
add
mov
xchg
scas
adc
add
or
inc
mov
inc
rcl
sbb
mov
ss
mov
dec
orb
flds
add
loopne
sub
out
adc
push
mov
jl
rol
xchg
or
rcrl
icebp
cmpsb
imul
movsl
jns
movsl
jo
ja
movsb
test
fstpt
xchg
test
push
adc
out
call
les
sbb
inc
in
pop
insl
bound
cmp
xor
xchg
mov
inc
xlat
lret
call
lock
and
daa
jp
xlat
into
mov
out
mov
fprem1
lods
decb
negl
xchg
add
negl
mov
loop
mov
enter
test
mov
mov
bound
adc
add
xor
dec
bound
out
adc
adc
jle
fcmovnu
icebp
adcl
cltd
loop
call
mov
fisttps
xor
mov
test
inc
xor
mov
subl
ret
mov
test
bound
jne
push
pop
push
sub
faddl
adc
frstor
push
mov
ficomps
test
aad
mov
jmp
xchg
push
push
and
jp
iret
or
lret
or
clc
test
lcall
inc
push
and
sahf
mov
iret
outsl
or
fsubl
mov
xor
dec
nop
sub
fisubrs
repnz
rorb
xchg
and
jae
std
xchg
jecxz
out
jb
nop
mov
add
sub
jo
jp
outsl
pop
or
fiadds
in
xor
jmp
fistpll
pushf
inc
jo
nop
pop
lods
int3
arpl
push
test
movsl
repnz
mov
fsubr
out
js
in
xchg
xchg
sub
jb
push
mov
stos
dec
das
in
addr16
es
mov
repnz
stc
repz
mov
dec
cmp
dec
repnz
fs
dec
sahf
outsl
or
cltd
pop
fisubl
int
cmp
sub
dec
xchg
mov
mov
andb
inc
and
push
outsl
cwtl
xchg
inc
inc
add
sub
leave
arpl
and
jno
les
push
pop
mov
cmp
inc
nop
into
nop
cwtl
add
jo
ss
push
push
push
jo
stc
and
sbb
fadds
and
pop
xchg
idivb
int3
cltd
lods
shrb
mov
cmc
or
mov
nop
sahf
not
and
mov
cmp
notl
mov
bound
lahf
or
or
arpl
xor
jns
and
in
dec
mov
xchg
out
into
dec
enter
sub
nop
in
aad
gs
imul
scas
out
xlat
mov
subb
jno
xlat
test
push
pop
clc
lods
fcmovu
pop
pop
pop
test
lret
daa
jns
push
sbb
scas
pop
cli
dec
cld
insl
push
mov
mov
pop
dec
movsb
push
cltd
idivl
push
jb
fstpt
pop
movsb
adc
les
daa
mov
imul
aas
or
fistps
stos
jbe
test
dec
add
mov
lcall
movsl
loope
mov
sbb
jnp
sarl
test
mov
jae
pop
aam
fisubrs
test
xchg
jecxz
sub
dec
pusha
mov
stc
out
sub
and
pop
imul
or
divb
pop
xchg
mov
in
jb
out
push
or
push
sub
adc
mov
loop
iret
insl
outsb
or
mov
clc
dec
dec
and
js
adc
xlat
hlt
and
stos
xchg
outsb
fimull
int3
jmp
mov
sbb
push
mov
pop
xchg
pop
ss
or
lods
loope
inc
icebp
pop
je
sti
xchg
adc
test
lock
push
mov
stos
sbb
ss
cmp
push
and
cmpsb
shlb
loopne
mov
lods
mov
jbe
and
push
jg
mov
dec
ljmp
popf
inc
and
aaa
lcall
out
popf
imul
or
mov
push
in
inc
cltd
push
mov
ja
leave
fchs
xchg
adc
fdiv
sub
loopne
int3
push
xchg
div
push
nop
sub
jge
std
xchg
les
jmp
adc
ljmp
gs
outsl
mov
cwtl
pop
scas
dec
decb
mov
inc
ret
jbe
pop
xchg
xchg
bnd
mov
sbb
imul
mov
mov
jbe
mov
adc
scas
and
mov
jbe
mov
push
inc
movsl
push
sbb
xchg
dec
inc
test
adc
jle
clc
mov
jae
xor
aad
xchg
xor
outsb
fcmove
xchg
cs
xchg
popf
in
mov
pop
aam
icebp
mov
cltd
adc
mov
insb
pop
fwait
mov
dec
fnsetpm(287
sub
fs
in
aam
out
out
in
cmc
aaa
dec
fstpl
mov
push
mov
xor
mov
mov
pop
aaa
mov
inc
add
inc
xor
mov
xor
sbb
sbb
fsubrl
and
cwtl
fldcw
jno
rol
movsb
lock
lret
fwait
pusha
rorb
cltd
fiaddl
xchg
dec
arpl
pop
sub
data16
xchg
pop
mov
pop
xor
jecxz
rcll
repz
fwait
dec
pop
lret
repz
add
inc
sub
daa
dec
sbb
in
adcl
or
rolb
jg
pop
and
jns
or
in
pop
mov
sub
jnp
cltd
dec
adc
push
imul
ss
jae
xor
nop
scas
insl
dec
ss
sbb
add
fmull
fildll
mov
mov
rclb
mov
pop
push
cmp
sub
ret
or
add
or
sub
cmc
sub
pop
fwait
cli
bound
test
decb
sbb
stos
jmp
sbb
xchg
adc
xchg
mov
dec
lea
xchg
xchg
mov
push
mov
xchg
push
sub
sub
sub
jmp
cmc
icebp
aad
pushf
push
jl
dec
lods
sbb
pop
xor
xor
jnp
cltd
push
fnsave
push
jl
cmc
bound
inc
roll
push
outsl
fisubrl
enter
or
int
ficoms
gs
in
or
mov
inc
dec
add
rorb
adc
js
sbb
loope
adc
ljmp
lcall
or
enter
jae
mov
mov
push
stc
sahf
sbb
repz
lds
add
inc
inc
pop
add
mov
jge
add
sub
push
jl
in
arpl
mov
pop
fiaddl
cmpsb
xor
sub
mov
test
sub
das
xchg
mov
int
cmp
imul
pop
xchg
cwtl
fwait
mov
inc
xchg
jns
jns
and
sti
cld
and
lock
xor
movsb
out
lds
pop
arpl
pop
dec
mov
sbb
adc
lcall
cmpsb
xchg
mov
xor
stc
cmp
loope
into
cld
sarb
dec
popf
aaa
push
repz
arpl
dec
sti
inc
fs
loope
inc
mov
and
pop
ds
push
sbb
aad
std
push
mov
mov
xorb
adc
push
cmc
xchg
jmp
or
and
dec
lea
andb
cmp
push
insl
sub
out
adc
shlb
leave
xor
push
jge
sbb
inc
lret
in
push
cltd
nop
inc
mov
loope
sbb
mov
mov
adc
or
cli
lods
into
push
mov
outsl
dec
and
cmp
test
dec
mov
jg
arpl
mov
pop
mov
pop
sti
leave
xorl
insl
cld
cmp
scas
mov
js
loop
pop
mov
shll
adc
cmpsb
rcl
pop
aaa
inc
je
movl
mov
lods
push
mov
or
and
or
push
es
pop
fiadds
out
sbb
jne
fcomp
mov
aaa
pop
std
in
adc
out
bound
mov
iret
ss
and
xchg
jl
xchg
jge
xor
xchg
out
pop
add
xchg
scas
loope
push
mov
jl
fbstp
xor
test
push
mov
jecxz
pop
lock
insl
sti
hlt
dec
outsb
iret
mov
pop
mov
or
push
push
and
xchg
imul
jge
add
es
shl
cs
adc
or
adc
and
mulb
pop
sub
in
mov
sbb
aas
pop
mov
cmc
mov
inc
mov
push
and
cmp
mov
add
test
cwtl
gs
divb
and
call
and
xchg
aaa
insl
out
movsl
sbb
mov
or
mov
pop
out
sahf
and
xchg
mov
fadds
lahf
lods
inc
into
std
inc
scas
add
fwait
xchg
xor
mov
pop
out
mov
add
movsl
push
and
lds
fsts
xor
inc
add
inc
imul
arpl
pmaxsw
inc
fisubl
push
cmp
out
inc
es
adc
lahf
pop
sahf
jnp
fwait
cwtl
dec
mov
jle
adc
or
add
into
lds
in
dec
sar
je
sbb
xchg
ljmp
jb
jnp
testl
idiv
dec
push
add
nop
pop
gs
mov
lea
push
data16
sub
scas
mov
lods
jmp
fs
mov
daa
xchg
sbb
cmp
add
cmp
adc
mov
jne
stos
jb
cmp
adc
sub
psraw
rorb
repnz
push
movsb
fadd
into
jmp
iret
jecxz
or
sub
mov
push
inc
or
xor
and
rorb
cmp
and
inc
cmp
mov
cmpb
sbb
sub
push
stos
sub
or
xchg
xor
loopne
ret
push
mov
out
std
adc
dec
shlb
sub
xchg
jb,pn
mov
testb
sub
fsubl
cmpsl
push
in
test
imul
loopne
aas
loopne
or
jb
outsb
cmpsl
fs
cmpsb
sbb
dec
xor
lds
dec
push
movsl
sbb
cmp
push
arpl
rcrl
inc
push
scas
repnz
hlt
add
cmp
adc
daa
shrl
or
push
popa
lret
sub
in
xor
mov
lret
push
test
pop
jbe
mov
adc
iret
pop
xor
daa
add
mov
and
jl
xorb
jl
or
sbb
sbb
add
aam
mov
or
sub
inc
cmpl
out
shll
cwtl
fnstsw
popf
out
push
sub
push
cs
cmp
aam
add
popa
mov
adc
push
mov
cmp
dec
sub
cltd
add
pop
scas
lret
sub
mov
xorl
popf
push
add
adc
push
sbb
mov
pop
xlat
jae
inc
int
das
pop
dec
cld
add
lcall
add
cmc
push
dec
std
jno
xchg
push
xor
push
mov
mov
sub
lret
mov
fcmovb
xchg
sub
jbe
dec
or
push
in
insb
imul
jb
popf
pushf
mov
mov
dec
and
dec
xlat
xchg
stos
cmp
fs
mov
cltd
cmp
ret
cltd
into
fdivrl
mov
nopl
stos
add
dec
shlb
pop
sub
mov
sub
push
jae
pop
repz
xlat
cs
mov
cmp
cmc
les
int3
mov
lods
cmpsl
cmp
movsb
add
lret
pop
test
or
add
leave
outsl
aaa
push
sub
lcall
mov
out
xchg
cwtl
popf
push
addb
mov
sbb
xchg
jnp
in
jae
cmc
xor
lahf
fucomp
daa
add
sub
add
mov
inc
mov
notb
aas
enter
xor
icebp
pop
pop
lock
stos
scas
cld
mov
or
xor
pop
lret
pop
insl
and
out
push
test
dec
push
imul
jne
add
mov
ret
addr16
int
pop
inc
mov
lds
js
les
xchg
fimuls
jo
push
scas
jno
pop
and
cmpxchg
sti
cmp
jbe
lods
push
pop
loop
cmp
popa
adc
jmp
aad
es
push
cmpsl
je
loope
mov
mov
dec
jns
cmp
inc
mov
test
loop
and
ret
inc
xor
sahf
popf
arpl
out
push
imul
jo
xor
rcl
out
stos
call
in
cmpsl
and
sbb
lea
cwtl
inc
cmc
clc
fidivrs
aad
inc
pop
std
out
gs
dec
stos
push
test
fs
divb
test
outsb
jne
inc
push
cmc
clc
bnd
mov
jne
out
mov
sbb
fidivrl
and
shlb
out
out
stos
scas
iret
mov
dec
lods
test
push
in
push
test
aad
movsl
mov
lret
or
aam
mov
push
sub
sti
add
pusha
cmp
jecxz
pop
call
lods
ds
lcall
adc
mov
dec
lret
push
mov
jecxz
push
mov
and
int
jmp
adc
outsb
ret
shrl
pop
jnp
rol
outsb
mov
lock
lahf
dec
rorb
in
lea
loop
aam
cmp
mov
sbb
jae
xor
add
test
loop
jbe
rclb
hlt
mov
addl
mov
sbb
aas
dec
sbb
inc
mov
or
outsl
aad
aad
frstor
xor
xchg
pop
xchg
xor
je
test
push
sub
or
cmp
dec
push
xor
mov
stc
cmp
and
add
lret
xchg
cwtl
inc
mov
mov
cmp
fstpt
xchg
jmp
pop
adc
addl
movsb
addr16
rol
xor
mov
push
sub
xor
aad
cli
cmp
sub
dec
scas
sbb
mov
jmp
mov
inc
add
or
mov
out
popa
and
inc
xchg
push
pop
pop
sub
iret
jle
xor
jae
fistpll
xchg
mov
rol
xchg
repnz
lock
inc
movb
sarb
cmp
shrb
lret
sarb
daa
add
movsl
call
add
push
call
mov
out
add
mov
mov
xchg
cmp
subb
sub
pusha
jb
sbb
js
in
cmpsb
mov
dec
dec
sbb
lods
jge
jg
jno
xlat
jecxz
cmp
jno
push
icebp
inc
add
mov
orl
pop
testl
dec
into
push
es
sub
pop
imul
pop
adc
jmp
es
mov
or
popf
dec
ret
movsb
pop
imul
int3
shrl
jae
mov
push
and
xor
push
jns
add
mov
push
shl
mov
jns
xchg
jbe
jecxz
push
fwait
or
xchg
mov
pop
mov
leave
cld
int
xchg
les
xchg
je
push
jge
aad
mov
fldt
fcoms
lcall
push
shrb
clc
sbb
stc
ret
int
jl
or
mov
and
pop
adc
pusha
and
mov
jge
fcompl
xlat
cld
cmp
stc
int
movsl
stc
sbb
adc
or
mov
xchg
int3
sbb
out
cmp
and
orb
cs
stos
call
inc
iret
dec
sub
xchg
pop
outsl
inc
push
mov
insl
cld
test
aad
das
push
sub
repnz
test
fistpll
inc
pop
mov
int
ljmp
loope
add
mov
sub
rcrb
movsb
je
xchg
negl
faddl
inc
pop
movsl
jne
sbb
data16
mov
xor
sub
add
call
dec
xchg
rcr
mov
js
in
fwait
or
shll
push
ret
ds
testl
push
inc
adc
jne
fs
cmp
jp
jecxz
xor
jno
xchg
test
add
jo
ljmp
and
lcall
lcall
and
out
adc
ja
das
dec
lahf
mov
cli
mov
xchg
lock
bound
mov
enter
ja
and
in
in
bound
adc
jmp
lret
mov
mov
sub
lds
jl
es
cwtl
lret
push
fisubl
jmp
sbb
xlat
dec
cmc
loopne
and
push
rorb
mov
adc
xchg
sub
fisttps
push
xchg
mov
sbb
add
adc
std
lea
rcl
test
jo
or
push
loopne
and
ds
int
je
sub
fwait
dec
fs
adc
mov
jnp
push
icebp
push
sbb
fsubrl
inc
dec
sub
adc
addr16
mov
enter
mov
pop
enter
mov
or
push
lcall
ret
inc
xor
mov
xchg
inc
cld
or
fstpl
orl
pop
xchg
shrl
inc
sahf
mov
cli
sti
or
loopne
mov
xchg
addr16
xor
mov
fnsave
mov
sub
icebp
mov
mov
push
out
mov
sti
neg
nop
ret
xchg
fiadds
ljmp
sahf
pop
test
cmp
jnp
xchg
sub
jmp
adc
arpl
imul
pop
sbb
aas
lret
jns
inc
movsl
push
dec
jbe
int
push
pusha
repnz
int3
lods
mov
std
aaa
inc
lods
ds
add
adc
adc
adc
and
and
push
push
add
mov
pushf
fisttpll
cmp
lods
cmp
pop
add
push
inc
push
jmp
mov
out
adc
add
stc
pop
out
out
xor
xchg
mov
jge
push
sbb
mov
pop
test
xchg
sbb
xlat
pop
mov
call
adc
iret
and
lods
xor
jne
cmp
scas
push
sub
sub
sub
adc
adcl
sbb
fwait
leave
inc
jle
add
and
dec
sti
lds
lret
sbb
xchg
xchg
xor
mov
mov
sbb
inc
xchg
out
jo
mov
adc
sub
xchg
movsl
out
imul
mov
out
fsts
mov
inc
dec
inc
leave
pushf
jae
lods
sbb
gs
mov
adc
repz
in
add
sub
loope
sbb
mov
inc
and
cltd
lret
mov
out
es
mov
cmp
xor
movb
mov
jp
lds
pop
push
xchg
push
jecxz
jg
xchg
xchg
aas
and
sbb
jg
add
mov
push
sub
mov
out
xchg
sub
sbb
imul
pop
sbb
inc
sbb
test
notl
xlat
ret
jecxz
loop
sti
sti
mov
stos
and
and
out
adc
adc
sbb
outsb
mov
jbe
mov
repnz
in
ret
inc
loopne
inc
and
adcl
cmpsb
scas
ss
mov
scas
push
push
ficoml
mov
data16
and
pop
mov
addr16
ret
in
dec
or
jl
es
cmp
stos
popa
mov
dec
push
out
loopne
fs
adc
adc
out
std
mov
enter
int
adc
test
rcl
rcrl
mov
sbbl
sbb
pop
push
jnp
mov
outsb
fwait
pop
mov
aam
xor
repnz
add
aam
or
movsb
arpl
inc
mov
cmp
mov
cltd
clc
out
icebp
mov
notb
outsb
xor
xchg
ret
add
and
ret
cmp
push
fsubrl
ljmp
inc
andl
sub
sbb
test
push
cmp
imul
mov
mov
xor
jl
in
outsb
pop
addr16
push
dec
mov
add
push
push
push
jne
and
lea
inc
cmp
add
test
std
pop
mov
lock
ret
jnp
cmpsb
clc
cmpsl
push
inc
daa
and
mov
adc
faddp
xor
xchg
shrl
shlb
nop
fimuls
xchg
pushf
or
out
cmp
mov
ja
mov
nop
repnz
or
jle
mov
out
movsb
dec
mov
jbe
dec
call
imul
pushf
int
adc
movntq
lahf
int
test
insb
popf
xchg
outsb
cmpsb
cwtl
push
aas
stos
jp
jae
sbb
nop
or
lcall
jns
js
repnz
loope
mov
lods
and
add
into
or
nop
adc
js
ja
dec
icebp
xchg
cmpsb
or
or
and
out
push
rorl
add
jnp
pop
inc
push
aam
jo
into
lds
daa
loope
loop
jecxz
iret
jge
push
sbb
inc
and
dec
push
xchg
cmp
add
mov
add
das
lahf
jnp
add
xchg
fwait
mov
jmp
sti
popa
pop
pop
mov
pop
cmp
cs
mov
or
clc
fucom
pop
adc
in
dec
into
stc
pop
jbe
fsubs
in
pushf
cmp
lds
mov
cmp
jbe
pop
dec
pusha
insb
xchg
jmp
xchg
pop
add
shlb
aaa
stos
dec
pop
mov
roll
out
addb
jae
scas
scas
cld
add
test
lcall
ja
outsb
mov
ret
dec
test
push
push
dec
out
xlat
or
fdivr
fimull
stos
cli
icebp
or
fsubs
sub
mov
cmpsl
jl
decl
sbbb
loope
push
arpl
adc
shl
in
cmp
jg
lds
add
sbbl
pop
data16
stc
sub
sub
xor
clc
push
or
aam
inc
push
test
or
cmovne
test
test
lods
adc
arpl
sbb
adc
fdiv
orl
push
mov
xchg
clc
xchg
xchg
sbb
ljmp
or
mov
inc
lods
sub
sbb
push
das
adc
outsl
out
mov
sbb
subl
sbb
mov
call
dec
inc
inc
or
aad
xor
fcmovnu
aad
jbe
pop
insl
xchg
xchg
js
mov
push
int
cmp
fstpl
pushl
dec
leave
inc
pop
jbe
fsubrp
clc
sti
push
mov
lods
or
mov
dec
insb
int
lret
ss
jecxz
push
dec
in
lds
js
lock
lret
mov
jae
push
outsb
icebp
inc
mov
dec
xor
cmpb
fmull
repnz
mov
cmp
aam
sub
cmpsb
adc
mov
lret
mov
xchg
sbb
inc
lods
xchg
xchg
pop
or
inc
add
adc
es
jecxz
push
movsb
loope
push
cld
mov
pop
xor
imul
fabs
jo
ds
inc
sbb
pop
pop
outsb
mov
in
push
sbb
inc
or
xor
hlt
outsl
jbe
and
cmpsb
insb
pop
cmp
imul
clc
push
clc
test
inc
push
lcall
inc
cmpsb
sub
jp
add
mov
or
mov
inc
nop
sub
arpl
cltd
insb
gs
icebp
pop
push
adc
add
push
xchg
inc
in
mov
pop
cmp
dec
mov
pushf
mov
pop
mov
std
mov
inc
and
xor
add
inc
pop
jmp
mov
lods
mov
cmp
jne
sub
xchg
inc
mov
fisubrl
fs
scas
sbbl
rcr
cld
inc
jmp
jl
xlat
sti
je
cltd
jb
xor
xor
fists
fildl
ret
cmc
and
adc
mov
stc
pop
sub
adc
pop
inc
out
dec
rcrl
sbb
sub
fcomps
or
subl
stc
jge
mov
cwtl
lahf
and
dec
out
and
mov
mov
or
in
std
sub
jl
in
mov
cmp
movsb
inc
sahf
testb
mov
xchg
xchg
cld
or
rolb
push
addl
mov
add
shll
dec
cld
out
dec
and
pop
out
add
lahf
pusha
dec
push
cwtl
test
mov
aas
and
fs
pop
sbb
mov
or
inc
adc
add
leave
repnz
aas
or
mov
sbb
lcall
jle
cli
xchg
std
jae
adc
or
cmp
sti
jb
sahf
pop
insl
add
or
and
xchg
scas
aam
lds
mov
lods
and
lahf
das
jb
enter
mov
rcl
pusha
mov
dec
stos
lea
pop
sbb
test
push
mov
mov
aas
in
xchg
mov
das
ficompl
fsubs
push
sti
pop
add
and
addr16
xlat
xchg
lcall
jmp
repz
pop
sub
pop
scas
pop
push
sub
xor
sbb
jp
and
sbb
or
fimull
nop
ljmp
outsb
insl
push
push
or
xlat
jle
clc
icebp
jmp
dec
pop
call
fnstsw
iret
jg
aaa
and
out
cmp
xchg
cmpsb
js
scas
sbb
lods
lret
xchg
ljmp
mov
fdivp
mov
push
sub
mov
test
push
mov
mov
mov
cld
adc
inc
push
loope
clc
arpl
pop
aad
cli
div
movsb
aam
andl
jg
das
push
mulb
addr16
mov
into
cmc
mov
scas
inc
frstor
mov
cmp
les
pop
inc
rolb
lods
insl
mov
pop
fstps
sub
add
lea
xchg
inc
mov
inc
xor
xchg
imul
cmp
xor
test
sbb
addr16
inc
sahf
fucomip
cmp
sub
adc
sub
cli
sbb
aad
mov
ret
lcall
jbe
pop
mov
pop
fmull
ds
xor
cli
test
push
inc
orb
rcrl
insl
xchg
in
sbb
loope
ret
in
adc
mov
test
mov
movsl
sti
stc
cmp
std
imul
insb
pop
push
shl
mov
add
cmp
jmp
cli
jmp
xor
cmp
add
pop
ja
adc
subb
push
cltd
out
xorb
repnz
into
jb
rolb
int
mov
adc
fildll
sar
xor
push
jns
bound
shll
mov
mov
pop
sti
pop
lds
fadds
or
je
mov
pop
loop
sub
sti
rdtsc
push
push
add
orl
and
sub
pop
int
rclb
adc
fidivs
les
js
mov
cmpsl
jne
fwait
mov
ss
daa
lahf
lods
jg
loop
stc
or
insl
bound
sub
test
dec
ljmp
push
jo
dec
lods
and
arpl
xor
out
pop
xchg
lea
cs
cmp
jnp
loope
pop
push
inc
pop
mov
push
lret
cld
xor
xor
addl
inc
xor
push
fstpt
mov
rolb
roll
rcrb
mov
data16
push
add
lods
ret
dec
fsubl
dec
mov
sbb
leave
jbe
mov
insl
scas
sub
sub
adc
rclb
ja
lods
mov
rol
cmp
outsb
movnti
rcrl
push
push
sub
xchg
js
lret
lods
test
push
imul
das
rcll
mov
jb
jne
or
and
sub
xchg
mov
mov
mov
imul
jo
and
sub
insb
test
mov
dec
or
cmc
lahf
loopne
loopne
les
rorb
xor
mov
push
sub
cwtl
repnz
imul
cmp
xchg
popa
dec
mov
inc
push
pop
les
sub
test
jno
dec
push
stos
repz
mov
dec
sahf
push
xor
sub
mov
mov
lahf
jbe
adcl
xor
or
pop
mov
cmp
dec
je
int3
hlt
insl
dec
cmpl
jmp
inc
je
adc
fildl
mov
and
test
cmpsb
loopne
sbb
outsb
jg
imul
sub
sub
sub
xor
adc
dec
and
shll
cli
fdivr
test
jmp
cmc
test
mov
xchg
jns
sub
mov
pop
call
in
cmpsb
mov
shl
call
add
jnp
push
scas
inc
add
mov
push
push
inc
pop
std
jo
scas
data16
sti
fadd
fcoms
inc
inc
cmp
fcoml
xor
lods
clc
add
xor
xor
fstpl
xchg
xor
inc
fists
mov
sbb
int3
loope
push
xor
loopne
daa
xchg
mov
imul
pop
pop
cmpsl
in
pushf
inc
dec
leave
jnp
jnp
inc
stos
jae
mov
and
cli
les
push
mov
aas
or
push
scas
inc
fisubs
push
icebp
inc
fs
fwait
in
cmp
xchg
mov
loop
sbb
es
push
lret
fsubs
push
pusha
add
movsl
repnz
in
loop
scas
mov
lcall
lcall
gs
pop
jg
or
fldcw
or
sub
aaa
shll
out
or
and
adc
add
fwait
je
push
or
jnp
and
lods
aaa
add
popf
inc
inc
xor
ja
xor
test
cwtl
sbb
fstl
sbb
popf
repnz
push
push
inc
jge
sub
and
inc
jl
mov
sbb
cltd
xor
jne
stos
into
adc
adc
or
fbld
sbbl
mov
dec
lock
repnz
and
and
push
cld
jbe
gs
lret
pushfw
leave
cs
mov
push
fadd
int3
int
jg
std
mov
pop
out
clc
cmp
testl
in
xor
or
lock
mov
cmp
add
stos
push
cli
cmc
cwtl
shr
sub
mov
gs
pop
jle
or
add
lea
jle
xchg
pop
dec
popa
xorl
fisubrs
sub
mov
shll
dec
out
lahf
pop
jmp
rclb
es
mov
fcomps
clc
iret
scas
adc
and
xchg
pop
imul
stos
add
bnd
or
mov
cmp
jne
inc
sub
cmp
lret
push
insb
inc
push
ret
pop
movsl
xchg
call
adc
cs
xchg
xchg
xor
mov
mov
mov
jp
int3
dec
leave
int
leave
out
adcb
add
dec
js
pop
mov
jp
dec
pop
fistpll
xchg
fstpl
mov
inc
dec
pusha
arpl
jmp
repz
xorl
mov
cmpsb
sar
inc
bound
xor
jae
cmp
icebp
outsl
cmp
out
loop
test
leave
or
add
adc
and
inc
scas
xchg
dec
xchg
in
and
rol
loope
in
loopw
test
lea
fisubl
fs
lods
icebp
dec
out
xchg
cli
scas
pop
push
stc
push
xchg
push
mov
clc
aaa
loope
shlb
cmpsb
lea
xchg
push
cmp
adc
shrl
rcrb
jae
ljmp
out
ret
lods
sub
ss
push
jmp
dec
xor
popa
or
pushf
mov
filds
add
push
movl
mov
pop
inc
stos
clc
mov
or
pop
ret
imul
test
dec
mov
fstps
or
inc
shll
cmpsb
loop
lret
stos
mov
push
add
mov
pop
mov
pop
jbe
movsb
cmc
out
push
jb
xchg
shll
cmp
in
mov
into
pop
fs
stos
mov
jae
xchg
push
dec
mov
ds
xchg
add
xchg
mov
or
fbld
add
mov
les
cwtl
and
cmp
cwtl
mov
dec
mov
dec
daa
in
cmp
cmpsb
cmp
cmp
xchg
lahf
adcb
mov
push
scas
mov
mov
and
inc
in
or
mov
andl
je
cmc
adc
inc
clc
cmp
fdivs
mov
pop
test
and
dec
fistpl
xchg
fwait
cmp
sbb
or
xchg
ljmp
scas
push
cmp
push
or
std
cmpsl
repnz
pusha
int
push
out
mov
imul
xchg
xchg
arpl
shlb
fldcw
mov
mov
xor
aam
sbb
shrl
insl
xlat
sub
xor
sub
mov
add
loopne
dec
jb
ljmp
mov
sub
jecxz
sbb
imul
push
cmc
push
insb
xchg
xchg
sarb
jge
lods
mov
pop
out
addr16
mov
push
pop
sbb
jle
mov
xchg
and
psrld
rol
jmp
imul
cmp
dec
outsb
jmp
and
loopne
fstpl
ds
add
dec
fimuls
jb
adc
or
ja
fbld
rclb
xor
ret
pop
out
and
inc
test
jbe
cmp
mov
addr16
cmp
add
test
test
adc
outsl
es
cmp
movsb
scas
mulps
mov
fstl
andb
lods
dec
adc
cmp
sub
add
or
mov
jmp
and
jb
test
shl
divl
fistpll
add
pop
xor
stc
aaa
lea
negl
addr16
fs
add
mov
lcall
les
shll
mov
lods
leave
xor
jnp
jp
stos
enter
xchg
mov
xor
fcompl
and
pop
cmpsb
pop
jno
lods
jl
or
push
imul
inc
iret
lcall
data16
ret
sub
and
xor
adc
and
pop
inc
roll
adc
test
shll
scas
sbb
ja
ds
scas
imull
jl
stos
xchg
insb
sub
mov
aad
adc
iret
ljmp
dec
mov
out
roll
fmull
aaa
xchg
jnp
ret
ret
sbb
test
add
sub
data16
movsl
fs
xchg
stos
dec
jne
xor
outsb
cld
mov
ss
nop
mov
aaa
rcll
inc
add
scas
pop
subb
fsubr
sub
imulb
jp
cwtl
outsb
loop
shlb
xchg
ss
xchg
pop
push
jns
addr16
pop
cmp
pop
arpl
xor
cmp
cmc
shrl
in
out
repz
inc
adc
or
adc
ret
sbb
pop
lods
in
rcrl
cmp
into
pushf
sbb
shrb
xorl
ds
iret
les
jns
lea
adc
mov
jns
lret
cmp
mov
sub
sbb
adc
call
mov
shlb
push
or
jo
mov
jle
xlat
and
shrb
push
push
sti
test
cmpsl
pcmpgtd
jge
stos
adc
shrb
ret
inc
cmpsl
add
and
mov
or
or
jne
dec
lds
orl
adc
adc
cli
mov
sbb
in
test
aas
xorb
in
aam
mov
pop
addb
sbb
sbbb
mov
ficomps
out
jle
and
cmp
mov
test
mov
push
push
mov
stos
jne
test
cld
push
mov
daa
scas
fstps
in
sbb
mov
inc
ja
jge
test
cmp
pop
cmp
push
call
ret
enter
mov
push
jle
cwtl
mov
xor
dec
lret
mov
test
paddsb
xchg
pop
test
adc
jg
test
nop
insl
std
frstor
and
inc
outsb
mov
dec
lds
loopne
or
adc
mov
loope
adc
or
fmul
iret
jnp
bound
lods
sub
mov
and
or
xchg
mov
mov
jp
movsl
sub
pop
cli
dec
jp
sahf
insb
xchg
fnstenv
mov
loopne
repnz
pop
adc
mov
push
mov
inc
jp
jbe
add
jnp
hlt
inc
mov
outsl
rorb
mov
inc
hlt
and
in
leave
lods
adc
add
sub
out
icebp
or
dec
ret
xor
inc
jne
outsl
xchg
adcl
sub
stc
jo
inc
push
mov
mov
stc
andb
xchg
sarl
xchg
sbb
dec
inc
xor
fbld
jge
int3
mov
push
mov
out
jp
sub
imul
xor
push
imul
mov
mov
popa
push
out
xor
scas
cmp
inc
sub
pop
out
shlb
mov
mov
imul
filds
shll
mov
mov
sbb
pop
and
push
jle
or
test
add
in
sbb
mov
cs
pushf
inc
xchg
sub
loopne
xchg
mov
push
popf
xor
add
add
roll
pop
jle
call
sub
mov
rcll
cld
hlt
jmp
adc
xor
les
les
cld
shll
inc
adc
movsl
outsl
or
dec
iret
or
fstp
push
int3
xchg
jg
push
mov
xor
pop
add
rcr
mov
idivl
and
cmp
push
sbb
fiaddl
aas
mov
nop
sbb
xchg
das
mov
jo
add
add
cmp
mov
in
add
mov
push
add
fwait
cs
stos
jle
cltd
sbb
aam
mov
and
adc
test
rclb
cmp
fnstsw
dec
mov
addl
mov
ja
ror
in
fnstcw
sti
div
and
lret
enter
fldenv
or
pop
mov
ljmp
inc
fsubrp
movsl
mov
or
daa
xor
lock
scas
stos
out
sub
xor
jmp
ds
xor
pop
xchg
jecxz,pn
and
test
mov
sbb
push
cmp
and
in
mov
test
or
xor
and
adc
inc
ret
adc
sbb
or
add
jmp
outsl
or
and
mov
test
pushf
icebp
shlb
rclb
mov
inc
jo
in
ja
sub
adc
sar
cmp
int3
and
andl
ret
fsubrs
les
adc
in
out
dec
xchg
jle
sbb
stos
ja
mov
xchg
adc
out
xchg
cs
inc
pop
pusha
dec
adc
rorb
jmp
or
imul
repnz
inc
lds
std
push
adc
ret
mov
test
dec
cltd
push
fstpt
jno
and
mov
mov
dec
out
loope
push
jne
jae
xor
mov
leave
scas
sub
popa
fstpt
mov
insb
mov
xchg
addl
cwtl
cli
negb
jle
jmp
inc
sub
adc
aas
pop
cltd
repnz
stos
lahf
loope
mov
pop
jb
test
repz
sbb
test
add
les
push
daa
cmpl
jge
out
mov
pop
pop
cmp
pop
xchg
add
and
xchg
icebp
mov
mov
clc
in
xor
mov
sub
ja
sub
pop
add
pop
test
sub
push
push
push
jl
mov
les
inc
std
mov
mov
jne
push
sub
add
ss
jnp
ss
inc
mov
hlt
fcmovne
jne
inc
and
arpl
cmp
lret
jp
jge
inc
test
test
cmpsl
jp
lods
cmc
lret
push
sbb
ret
inc
jo
xor
add
push
out
lods
inc
sahf
lods
mov
sbb
dec
pop
sub
sub
pop
cmp
push
ret
jo
test
rorl
es
jo
leave
xchg
stc
in
push
mov
adc
leave
cmc
cmp
rcl
inc
dec
dec
ljmp
xor
push
xchg
scas
pop
add
mov
shlb
cmc
jecxz
rcrl
insl
mov
in
test
jbe
xchg
jmp
pop
rcr
inc
adc
pusha
add
pop
ljmp
je
out
inc
bnd
rcr
add
jp
push
jne
xor
or
inc
push
and
dec
stos
loope
cmp
addr16
loope,pn
pop
shr
out
xchg
lret
fnsetpm(287
mov
maxps
pop
sub
cli
ljmp
test
and
imul
xchg
add
dec
xchg
xor
es
adc
mov
stos
movsb
push
adc
fwait
sarb
adc
hlt
leave
out
repnz
or
js
sahf
aad
fwait
loopne
in
jb
push
xor
jge
imul
xor
notb
sub
pop
sbb
bound
xorl
dec
adc
int
xchg
push
push
xor
in
pop
rolb
jnp
xchg
add
out
outsb
clc
icebp
push
lds
je
lea
mov
add
fisubl
fisubs
lret
or
or
daa
cs
pop
sub
inc
xchg
inc
inc
sbb
xor
jae
sub
push
ss
sahf
mov
push
rcrb
imul
dec
aaa
lret
popf
push
sub
addl
pop
out
add
jge,pn
pop
dec
bnd
jle
cmp
lret
cmpsl
icebp
push
jmp
je
out
daa
sbb
mov
fwait
sub
jmp
push
fistpll
scas
icebp
push
cmovne
lahf
aad
aas
divl
push
mov
xor
and
mov
ss
inc
jnp
repnz
or
test
cmc
mov
mov
test
sbb
sbb
sub
mov
clc
test
cltd
lahf
cmp
shll
popa
dec
in
popa
in
leave
mov
jne
inc
cmpsb
fldenv
inc
pop
mov
ds
push
test
adc
aad
sahf
enter
xchg
xchg
pop
daa
jnp
mov
push
movsb
js
mov
out
aam
cmp
pop
in
pop
inc
xor
fwait
or
sbb
inc
mov
or
ljmp
lcall
sub
gs
js
out
shlb
push
or
sbb
filds
movsb
sbb
je
ja
mov
popf
sahf
add
sti
dec
adc
jnp
lods
and
jb
aas
pop
aam
inc
push
loopne
call
stc
mov
sti
mov
hlt
hlt
xchg
inc
sub
jle
nop
addb
popf
stc
sbb
imul
cmc
push
cmp
pop
mov
shlb
leave
jl
mov
jmp
in
pop
and
nop
cld
add
ret
loope
jge
mov
adc
ret
shll
xor
cmc
fmuls
inc
les
xor
movsb
jp
inc
mov
xor
lds
pop
mov
ror
push
mov
sub
mov
iret
addl
pusha
cmc
xchg
xchg
mov
push
mov
ja
pop
pop
test
mov
fidivl
add
idivl
sahf
xchg
out
xchg
fsubrs
jbe
inc
sub
push
or
fcmovb
pop
out
dec
clc
sahf
mov
aas
xor
adc
clc
bnd
mov
pop
inc
mov
test
mov
mov
pop
nop
inc
cmp
clc
js
mov
in
enter
sub
rclb
addr16
dec
fucompp
inc
jbe
aad
sbb
push
xor
movsl
sub
out
pop
inc
iret
mov
cmp
sub
xor
out
jmp
adc
mov
dec
movsl
xlat
sbb
xchg
mov
call
adc
loope
jb
mov
jecxz,pn
jp
fisubrs
pop
pusha
int
stos
aad
popa
cmp
repz
jp
and
push
mov
mov
stc
aam
jns
lret
orb
sbb
dec
cmp
jl
int3
jle
jg
lret
mov
pop
inc
nop
mov
aam
popa
lcall
bound
jecxz
dec
jle
sbb
ds
cmp
sub
pusha
mov
mov
mov
icebp
push
rolw
mov
mov
ds
mov
xchg
test
sbb
stos
lea
rorb
xor
mov
insb
out
out
dec
and
in
daa
cld
pop
hlt
cmp
outsb
jns
mov
das
mov
and
dec
jbe
cwtl
das
push
aas
aad
and
sbb
fs
sbb
inc
cs
inc
push
nop
inc
mov
lea
daa
jge
daa
imul
inc
cmp
imul
test
iret
gs
out
outsb
inc
pop
or
cld
cs
fistpll
cmc
out
mov
or
loop
out
or
je
test
cli
adc
sub
icebp
iret
jne
add
insl
dec
inc
xchg
xor
loopne
and
and
jno
test
imul
and
hlt
cmp
hlt
enter
icebp
push
pop
shrl
in
in
jp
pop
lcall
add
xchg
cmp
ds
sub
lret
daa
push
cmp
ds
mov
cmp
popa
adc
int3
adcl
jl
lock
adc
pop
mov
mov
adc
and
cld
push
jmp
icebp
pop
xchg
out
dec
aas
clc
lock
mov
int3
andl
call
inc
arpl
js
sub
xchg
lret
bound
push
subl
bound
ljmp
sub
push
adc
xlat
add
xchg
cwtl
fsubrs
mov
shrb
fildll
push
or
repnz
and
lods
jae
bound
or
jae
ds
popa
jmp
cmp
shlb
fidivrl
cmpsb
xchg
out
mov
enter
jns
in
out
adc
mov
lods
adc
inc
xchg
cli
add
cmp
cli
cmp
dec
jecxz
adc
jbe
add
in
fwait
dec
adc
cltd
jl
sub
sbb
sub
aas
mov
incb
push
testb
pop
shl
and
mov
out
inc
enter
xorl
es
enter
dec
dec
xor
enter
inc
xchg
or
and
xor
test
repnz
mov
mov
jbe
sbb
das
iret
sub
sahf
fsubr
loopne
add
xchg
fisttps
add
mov
xchg
ss
rorl
cld
or
xchg
test
cltd
or
stos
push
inc
roll
shrl
es
mov
and
outsb
nop
cmpsl
fldl2t
addr16
js
lds
andl
roll
aaa
int3
in
inc
jmp
repz
adc
or
pop
loopne
sbb
loope
sbb
inc
push
push
and
stos
add
rclb
xchg
mov
and
mov
cmp
push
shrl
or
mov
or
ret
mov
dec
jge
ds
xchg
jp
mov
add
aad
icebp
cld
lods
fisubrl
inc
je
jno
xlat
add
call
mov
jmp
popf
push
xchg
enter
pop
lretw
jecxz
sub
cld
push
out
fs
sub
cmc
adc
inc
push
mov
jmp
stos
hlt
orb
in
gs
xor
xchg
rolb
arpl
mov
iret
adc
out
stos
xor
adc
push
push
xchg
pop
popl
push
mov
inc
inc
ja
in
xor
dec
js
iret
dec
mov
out
mov
add
mov
dec
repnz
mov
gs
les
and
cs
fsubp
add
or
rcrl
or
push
add
in
clc
je
lcall
jg
push
pop
mov
aam
enterw
cmp
mov
cmp
xchg
out
daa
xchg
or
arpl
stc
cltd
shrb
fwait
or
fistpl
sbb
aam
or
or
push
xchg
lds
mov
adc
xchg
push
outsl
outsl
xchg
lods
cwtl
std
xchg
leave
test
stos
and
mov
mov
nop
adc
inc
dec
xchg
add
out
xchg
lret
stc
cmp
inc
fildl
add
insl
mov
or
mov
bound
clc
adc
xchg
fisttpl
xor
stc
jle
pop
inc
in
inc
mov
xor
sbb
jp
sub
movsb
push
movsl
xchg
push
cmp
xor
xchg
pop
cmpsl
mov
scas
stos
scas
leave
lods
out
and
or
mov
roll
aas
xor
movsl
shrb
lret
jge
push
jns
in
inc
cmc
iret
incl
nop
scas
fisubrl
into
sub
test
les
adc
cmp
xor
sbb
movntq
ficomps
scas
divl
push
cmp
xchg
push
jl
fwait
inc
jl
in
call
push
ret
push
or
movsb
pop
mov
or
xchg
xchg
addr16
push
clc
mov
imul
je
mov
stos
pop
stos
mov
sub
inc
js
mov
in
repnz
inc
or
stc
push
fldcw
nop
xor
loop
inc
jno
xchg
sub
sub
push
test
or
sub
xor
or
dec
mov
push
pop
jae
orb
lahf
jnp
test
test
daa
inc
and
cmp
xor
int3
nop
ss
ret
mov
das
push
jno
and
insl
repnz
push
lods
push
arpl
shll
mov
loope
loopne
jno
jecxz
pop
lret
cltd
dec
cmp
in
push
lods
movsl
ret
sbb
aam
mov
js
icebp
dec
imul
repnz
insl
into
xchg
and
mov
ja
aas
xchg
leave
lahf
sbb
icebp
ss
ficomps
push
xchg
sub
xchg
lret
testb
imul
mov
imul
jbe
mov
rcr
jae
adc
test
jmp
inc
data16
aam
xchg
inc
shll
cmp
adc
loop
push
dec
cmc
mov
insb
les
decb
imull
or
pop
add
nop
and
cmp
imul
daa
insb
or
pop
lret
mov
jnp
mov
lret
push
addr16
lds
and
subl
repz
jge
mov
push
mov
dec
bound
gs
or
movsl
inc
inc
inc
or
repz
mov
js
stc
sub
inc
pop
push
jg
shr
out
fistl
mov
cmp
movsl
and
jp
movsb
shrb
xchg
inc
and
xor
or
mov
ds
xor
out
popl
repz
daa
mov
adc
cld
pop
cmp
push
sbb
jb
fmull
aam
sub
mov
jmp
push
jns
and
xor
lahf
or
push
sub
nop
push
inc
imul
or
inc
mov
repnz
je
lret
dec
adc
or
movsl
xor
push
pop
cmpsb
xchg
mov
sahf
inc
ds
xlat
mov
pop
and
adc
stos
xor
ror
and
test
dec
mov
mov
repz
dec
xor
push
push
and
jne
test
shlb
sbb
ret
loopne
cmc
cwtl
hlt
lcall
adc
mov
xor
pop
into
ljmp
jb
repnz
sbb
loope
mov
movsb
mov
and
jb
in
jge
aaa
sub
xchg
std
enter
movl
xchg
sub
jo
cs
pop
pop
jmp
sahf
lods
push
add
mov
lods
or
dec
in
test
mov
lret
sbb
sbb
repz
mov
dec
lds
push
adc
in
xchg
notl
pop
jp
ficoms
movsb
cmp
mov
xchg
leave
out
lret
xlat
mov
and
dec
and
inc
sub
inc
jle
push
jg
inc
add
call
mov
out
cmp
dec
decl
sub
and
adc
clc
ds
inc
sub
loope
add
xchg
lret
mov
repnz
decl
push
movsb
sbb
int
gs
int
mull
arpl
push
or
stos
rorl
scas
lret
in
xchg
mov
fiaddl
mov
push
mov
sahf
sbb
idivl
adc
out
xlat
sub
pushf
xor
movsb
fcomp
mov
mov
sub
push
mov
jno
fisttpll
test
push
es
sarl
jp
lods
mov
roll
cs
push
stos
scas
decb
xlat
pop
adc
enter
lret
mov
and
inc
lock
outsb
mov
inc
sub
jmp
push
rorl
inc
test
pushf
movb
out
inc
or
lret
push
in
std
add
ficomps
and
or
mov
xor
and
es
dec
fwait
mov
xchg
adc
xchg
mov
cmpsl
inc
cmp
in
in
adc
sub
or
jg
daa
xchg
cmp
iret
xor
std
jge
shrl
icebp
pop
pop
roll
push
jne
xchg
ds
add
movsb
daa
mov
dec
fidivrs
lods
fwait
mull
movsl
mov
add
incb
out
fnstenv
push
fcmovne
cwtl
push
adc
adc
pop
cmp
imul
cli
ljmp
push
movsl
mov
push
push
cmpsb
push
or
int
cmpb
ljmp
fldenv
sub
push
adc
loope
ret
sahf
cmp
test
mov
inc
jle
cmp
loopne
add
adc
mov
insb
aad
cmc
xlat
cmpsl
sbb
jge
test
nop
sub
xchg
sbb
mov
jecxz
mov
mov
dec
movsl
hlt
stos
jmp
out
push
jecxz
subb
xchg
movsl
inc
push
pop
leave
dec
or
pop
xor
adc
jecxz
pop
and
scas
std
push
mov
xchg
jns
xchg
mov
sub
xor
dec
inc
pusha
jp
mov
pop
aam
int3
and
push
mov
or
addb
jae
push
rol
repz
stc
jge
lret
or
in
mov
cltd
leave
dec
imul
leave
add
popf
xchg
fsubr
and
dec
xor
xor
or
dec
fs
cs
xor
jbe
cli
cmc
sahf
mov
jb
jne
and
pop
and
aam
js
imul
jns
out
call
and
add
jnp
mov
inc
xor
jne
jle
jecxz
mov
lock
inc
adc
daa
and
jecxz
cmpsb
fidivl
int3
fdivrp
loopne
scas
sti
dec
and
loopne
gs
mov
in
dec
in
cs
xor
int3
mov
pop
xchg
int3
ret
sub
mov
leave
test
adc
fdivs
cwtl
in
xor
jae
push
test
faddl
adc
or
add
adc
sub
sahf
subb
in
add
jge
dec
xchg
dec
pop
jecxz
stc
enter
xlat
xlat
adc
je
adc
fidivs
shlb
pop
or
sbb
lret
cmp
xlat
or
sbbl
pop
lret
push
fldenv
repnz
fs
rcll
fisubs
mov
jecxz
sarb
push
shr
inc
pop
add
push
jns
push
pop
js
jmp
jmp
mov
pop
imul
add
jb
sbb
sub
adc
imul
test
notl
movsl
add
sub
sbb
cmc
bound
test
mov
cmp
sbb
and
sub
xchg
aad
pop
arpl
add
repnz
sbb
jne
jne
xchg
dec
cmp
or
stos
add
bound
enter
insl
mov
lret
sbb
inc
push
test
sub
push
movsb
sub
xlat
clc
rcrl
xchg
in
push
and
pop
fldl
or
xchg
or
stos
ret
jne
out
push
or
dec
jno
jo
ljmp
or
jo
jmp
jle
repz
test
je
add
push
mov
sahf
mov
inc
dec
sub
test
push
leave
hlt
lods
sub
xchg
xor
sarb
dec
sbb
outsb
sbb
out
cmpsw
fdivrs
and
int
rorl
adc
imull
mov
jl
fs
push
jnp
cmpsl
aad
mov
pop
insb
cmc
rorl
adc
in
xorl
add
jo
lcall
iret
inc
mov
inc
sub
lods
pop
mov
ror
mov
mov
int
mov
inc
cwtl
cmp
sarl
outsl
and
mov
cltd
pop
lcall
xchg
testb
in
mov
aas
aam
adc
imul
jge
xchg
hlt
das
adc
and
inc
xor
jp
sbb
into
cwtl
cmp
iret
add
xlat
je
call
xor
fldt
cmpsl
imul
clc
ds
pushf
mov
faddp
test
rcrb
adc
cmp
cmp
pushf
mov
nop
sbb
push
sarb
lret
sbb
or
or
shlb
fstps
adc
mov
mov
bound
adc
cld
mov
movsl
add
pop
adc
movb
cltd
faddp
push
cs
nop
idivl
mov
mov
sbbb
das
pop
pop
pop
insb
test
fwait
jae
fcmovbe
push
repz
jnp
aad
scas
mov
xor
stc
int3
mov
lods
sbbb
mov
js
paddq
add
mov
in
jge
insb
cmpsl
pop
mov
dec
jno
out
jmp
das
std
addb
or
sahf
mov
dec
xchg
fildl
lods
hlt
adc
pop
mov
pop
lds
movsb
fnstcw
fisubl
xlat
in
jmp
sub
pop
adc
mov
mov
shr
pop
xlat
sti
add
pop
jo
fwait
mov
push
out
xchg
jmp
ds
and
cli
stos
mov
and
add
test
xor
and
loop
xchg
and
xchg
icebp
mov
sbb
mov
bnd
or
pop
shll
out
clc
int
mov
pop
inc
cmpsl
and
sbb
inc
les
cmp
imul
add
jne
xchg
and
ja
rcrb
addb
mov
sti
aam
ret
repz
popa
or
nop
cmpsb
push
xchg
pop
loop
and
fistpl
iret
mov
fsubr
pop
push
data16
xchg
leave
sub
subl
out
shrl
pop
cmpsb
pop
dec
je
xchg
test
daa
in
sub
pop
cli
cli
in
cmp
push
inc
imul
pop
sub
inc
jb
or
cmp
and
mov
jmp
stc
gs
jo
ja
ljmp
add
out
push
shll
data16
fcmovnbe
inc
fcomp
jns
mov
dec
inc
xlat
fsts
in
negl
in
notb
mov
ror
push
enter
scas
mov
push
cld
mov
bound
pop
adc
lret
jno
cltd
repnz
inc
ds
leave
stos
outsl
pusha
orl
sahf
mov
jno
jbe
aam
call
inc
pop
in
loopne
adc
inc
push
mov
negb
hlt
xorb
adc
jae
lds
xchg
xor
add
xchg
jno
dec
cwtl
hlt
sti
dec
int3
loope
stos
aas
xor
lds
cmpsl
push
sub
es
xchg
mov
fildll
mov
mov
test
leave
mov
rolb
jo
adc
fistpll
scas
xor
jp
popf
fnstenv
into
aas
enter
mov
fstpl
je
aaa
mov
out
add
fimuls
adc
or
or
push
push
adc
mov
cltd
cwtl
and
scas
cmc
mov
in
popf
cmp
enter
dec
repnz
negl
cli
pop
pushf
call
mov
and
mov
sub
and
pop
call
or
mov
xchg
out
gs
xor
notb
cmp
mov
js
mov
loopne
sub
ret
fwait
xchg
dec
stos
fsubrl
and
fsubrl
pop
inc
sub
pop
mov
inc
out
cmp
jns
mov
rol
mov
inc
ret
xchg
xchg
in
aaa
icebp
rcrl
das
mov
cmpsl
fildll
sub
repz
add
cmp
pop
mov
mov
mov
out
and
jmp
pop
inc
outsb
inc
sub
lret
cli
imul
mov
ja
dec
cmp
imul
xor
sbb
fsubp
mov
mov
repnz
jo
int
push
pusha
insl
leave
out
int3
leave
lds
mov
jnp
mov
mov
arpl
inc
push
notb
xchg
pop
ret
mov
fucomp
bound
scas
or
xorb
pop
jle
scas
movsl
xor
arpl
sti
jbe
outsb
mov
xorb
aad
adc
rcll
pop
adc
pop
les
mov
sub
mov
mov
testl
dec
sbb
mov
fstpt
int
xchg
xlat
or
cli
pop
mov
cmp
xchg
fcomps
cmp
stos
cmc
push
rol
dec
mov
xchg
test
loope
and
sub
push
mov
jae
pop
fldt
xor
rclb
mov
rol
sbb
sarl
jg
fs
mov
sbb
in
mov
ljmp
insl
les
jl
jl
hlt
inc
stc
jne
outsb
fadds
roll
inc
inc
pop
ss
and
popf
pop
in
aam
hlt
sub
aam
cmp
and
adc
adc
test
loopne
fsub
or
and
mov
mov
clc
repz
movsl
add
shlb
jp
push
add
scas
inc
std
leave
jl
cmc
pop
fisubrl
roll
add
add
lea
ja
test
push
push
sbb
icebp
and
add
inc
pop
cmp
xor
add
icebp
jg
sahf
xchg
cmpsl
addr16
lret
pushl
adc
fists
pop
in
cmpsb
sub
out
loope
adc
and
mov
data16
mov
mov
in
sub
dec
out
mov
aaa
mov
mov
push
in
leave
xchg
stos
das
push
enter
or
push
and
adc
movb
bound
inc
movsl
ss
jecxz
aaa
lret
fstpt
ljmp
div
push
jb
cmp
mov
inc
sbb
xor
loope
lock
adc
xchg
inc
es
aad
inc
or
push
xchg
stos
pop
scas
rcrl
ljmp
or
out
or
movsb
clc
mov
add
out
cs
sbb
pop
pop
sbb
mov
iret
adc
repz
push
cmp
je
inc
mov
pop
jg
lret
in
out
push
mov
add
mov
shll
lods
dec
aas
insb
scas
and
mov
sub
push
repnz
sbb
jle
xchg
push
leave
lret
push
mov
shll
sahf
xor
fxch
mov
or
addr16
sbb
ret
push
jmp
scas
lret
xchg
xchg
sbb
push
adc
mov
icebp
sbb
iret
cmpsl
clc
mov
repnz
dec
outsl
jecxz
adc
fsubl
rcrb
mov
out
mov
cs
std
aam
inc
or
rorb
daa
in
in
and
mov
xchg
je
dec
fsubl
xor
int
fdivl
outsb
lods
aaa
cltd
inc
leave
jle
shl
lods
or
sub
jne
arpl
loop
loope
pusha
sub
dec
lahf
and
pop
cs
cs
jo
push
fstp
js
arpl
push
aas
loopne
cmp
out
mov
jno
mov
sbb
xchg
icebp
fwait
js
xchg
cwtl
gs
icebp
adc
mov
rcl
pop
sbb
lahf
mov
sub
jle
lds
and
test
pop
mov
test
push
fldl
mov
sub
fists
test
push
jb
sbbl
sub
xor
dec
push
out
repz
fstpl
xchg
add
or
rcrl
lcall
push
sub
push
das
out
xor
out
fs
push
or
push
push
adc
mov
xchg
sbb
call
movsl
stc
jmp
dec
psrlq
inc
pop
or
dec
add
mov
adc
and
lcall
push
in
mov
push
into
xor
rorb
loopne
cmc
sub
cmp
sub
out
push
mov
xchg
test
fisttpl
dec
push
das
cli
sub
in
mov
jge
movsl
insl
inc
or
lds
xor
movsl
sub
cmpsb
lret
or
repz
and
testb
mov
adc
mov
fimuls
int3
dec
rclb
and
push
inc
push
push
pop
push
or
in
or
mov
xlat
das
test
push
iret
lret
out
push
push
out
xchg
cmp
xchg
lock
cmp
fnsave
lret
jns
dec
ljmp
cwtl
pop
dec
cmp
and
sub
and
mov
test
pop
cmpsb
hlt
push
mov
sarl
out
push
jbe
ret
negl
pop
leave
fsubrs
ds
adc
in
add
ret
or
test
lahf
jg
inc
lock
aad
rcrb
lock
into
dec
out
into
leave
sub
push
stc
enter
std
add
outsl
fs
adc
mov
js
xchg
pusha
inc
cmpsl
jb
xchg
mov
add
imulb
stos
xchg
stos
jg
lahf
out
mov
adcl
pop
cltd
insl
adc
movsl
xchg
sub
js
pushf
mov
or
jne
mov
ds
mov
cwtl
test
mov
xlat
pop
mov
jnp
dec
lea
loopne
mov
imul
test
add
insb
pop
ljmp
mov
outsl
out
add
lret
call
inc
shlb
les
ds
iret
sbb
cmc
stos
cmp
xchg
test
insl
dec
add
xchg
mov
sub
out
out
or
dec
stc
shll
out
popa
xor
cmp
sbb
add
sahf
adc
aam
std
clc
push
xchg
test
stos
ds
sbb
xorl
ja
call
mov
lods
xchg
jg
scas
mov
jne
mov
xchg
sub
pop
cmp
repnz
mov
mov
mov
mov
fistps
jbe
or
xor
stos
mov
rorb
je
insb
movsl
mov
lcall
xlat
cmp
xor
jne
shrb
and
mov
clc
fidivrs
push
out
aam
jmp
xorl
into
mov
test
xor
and
movsl
sti
movsb
dec
aam
xchg
push
insb
repnz
arpl
dec
dec
loopne,pn
sti
adc
loop
mov
loopne
jo
mov
ljmp
mov
push
std
or
ret
mov
inc
fildl
sbbl
and
pop
insb
iret
rclb
xor
sti
pop
fnsave
int3
inc
out
stos
fisubrs
faddl
adc
gs
int3
sub
inc
std
movsl
pop
jmp
inc
push
in
pop
scas
push
arpl
push
repnz
dec
mov
rol
and
jg
ds
or
mov
push
jae
sbb
inc
les
ficoms
es
push
mov
jne
inc
pop
in
scas
jb
test
cli
cmp
movsb
insl
inc
clc
dec
loope
mov
mov
popa
testl
movsl
inc
fisttpl
repz
dec
xchg
or
pop
shl
jno
push
push
mov
out
dec
notb
push
jge
and
rcrl
stc
cmp
in
aas
sub
repnz
cmpsb
dec
scas
sahf
fsubr
sub
xchg
xchg
adc
ret
fucom
insl
test
inc
out
sbbl
xor
lret
movsb
sbb
sub
xor
add
xor
aam
inc
in
cmp
lds
push
jmp
jno
push
xor
bound
inc
mov
mov
or
out
lock
shl
daa
push
inc
mov
mov
xchg
push
loop
imul
pop
jmp
push
es
fsubs
mov
stos
inc
in
add
cmpsb
js
add
jle
push
push
push
xor
outsl
sub
cli
pop
outsb
mov
outsl
jmp
xchg
sub
loope
dec
icebp
loop
mov
repnz
xorl
out
aaa
lods
mov
iret
pop
icebp
bound
mov
aaa
push
sbb
and
in
je
fnstsw
or
cmpsl
mov
mul
xor
cmp
fldt
test
add
xchg
mov
push
ffree
test
sub
mov
jnp
jle
cwtl
lret
pop
pop
or
jge
xor
pop
aaa
sbb
dec
mov
fs
out
ret
jo
xor
add
adc
lret
lret
mov
inc
lods
inc
pop
outsb
pop
sub
jns
clc
fxch
test
cs
outsb
test
dec
aad
ss
push
dec
pop
push
in
push
mov
pop
aam
and
adc
mov
cld
pop
out
cmp
jno
xchg
or
xor
cmpsb
pop
lea
hlt
cmp
fnsave
insb
xchg
insb
mov
push
xor
sub
or
cmpsl
imul
pushf
mov
mov
push
jbe
mov
sti
sub
aas
adc
xchg
pop
movl
xor
nop
mov
push
gs
dec
test
push
rcl
daa
gs
adc
bound
in
or
adc
test
int3
js
scas
movsl
xor
shlb
add
inc
cltd
cmp
xor
or
xor
jo
and
mov
out
imul
rorb
pop
xchg
push
std
mov
jno
out
and
xor
fcompl
or
movsb
xor
xchg
das
ja
in
pop
jg
mov
and
aam
sub
and
mov
and
xor
out
mov
xchg
shrl
in
daa
clc
jno
lods
inc
sbb
aad
iret
sahf
push
fists
jbe
xorl
ret
clc
xor
pop
xor
jg
cs
scas
es
cmp
push
lock
inc
pop
psllw
adc
std
lret
and
xchg
test
sub
dec
scas
imul
add
mov
jg
test
mov
xor
imul
dec
xchg
xor
xor
pop
leave
sbb
mov
cwtl
pop
out
jge
and
xor
leave
cltd
mov
jne
cmpsb
rcl
mov
imul
xchg
xor
push
aas
int
pop
ds
xchg
aaa
cmp
rcr
lret
sub
pop
movsl
push
sbbb
fcmovne
fcomps
cld
fdivrs
push
pop
addl
sbb
leave
mov
fmull
cwtl
lahf
loop
cmp
sbb
scas
.byte
cld
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
push
xchg
or
sub
add
mov
add
addb
add
add
add
enter
sub
or
and
add
add
add
lock
addb
add
add
add
or
add
in
mov
add
add
and
add
add
add
arpl
mov
dec
es
jae
loop
xchg
mov
sbb
push
test
insl
or
mov
bound
rcrl
xchg
push
jp
mov
sbb
enter
mov
push
or
inc
sub
fistpl
mov
xor
jns
pop
mov
shll
or
add
or
les
and
cmp
mov
scas
mov
cld
stos
push
inc
push
js
mov
xchg
pop
sub
lock
cmp
shr
and
icebp
dec
xlat
iret
fnstcw
jbe
repnz
mov
pop
fcomps
aas
addr16
mov
xor
mov
gs
cmpsb
andb
add
mull
adc
shr
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
dec
add
push
dec
dec
outsl
jl
mov
pop
push
add
pop
add
mov
push
adc
pop
movswl
pushl
mov
pop
jnp
call
ret
or
das
cmp
sbb
inc
out
aam
jb
push
pop
pop
add
mov
sub
jl
and
sub
mov
mov
xor
sub
jmp
pop
push
dec
adc
test
and
add
add
cld
test
or
add
addl
jle
sub
jmp
xlat
les
cs
pop
gs
ja
es
hlt
mov
or
enter
fst
es
hlt
dec
in
pusha
pop
pop
lahf
es
hlt
test
jmp
jne
nop
dec
hlt
shll
add
es
adc
repz
push
in
ljmp
lods
push
aam
inc
dec
push
icebp
cmpl
in
push
push
fists
mov
pextrw
xor
xor
test
sahf
mov
out
mov
hlt
ss
das
cmp
out
mov
add
xlat
es
hlt
pop
mov
mov
xchg
idivl
and
cmp
fcoml
cltd
add
aas
push
stc
out
xchg
xchg
orb
rcr
and
shlb
inc
pop
bnd
jae
mov
inc
imul
mul
cmp
cwtl
icebp
add
sbb
les
call
mov
cltd
adc
incb
and
imul
pop
jecxz
jno
or
jb
mov
dec
cmp
ret
dec
stos
add
jb
daa
mov
loope
fdivrs
arpl
insl
push
imul
mov
jp
jno
push
addr16
loopne
mov
mov
popa
mov
movsl
icebp
sub
sub
inc
enter
pop
stos
push
pop
punpckhwd
testb
roll
imul
out
add
ret
cmp
or
imul
xor
subl
add
pop
dec
scas
mov
mov
cli
sub
cmp
push
jo
movsb
cmp
push
mov
faddl
add
out
pop
xor
imul
std
das
and
repnz
adc
jp
adc
in
rolb
aam
mov
cmp
cmp
jbe
es
mov
lods
pop
rol
sub
mov
jl
cld
es
mov
mov
pop
ss
enter
xchg
adcl
enter
or
jg
add
popf
cmp
arpl
lcall
mov
pop
andl
das
and
mov
movsb
mov
cmp
jb
and
cmp
mov
mov
stos
lcall
dec
and
push
roll
dec
cmp
and
jge
addb
jno
push
stc
adc
dec
and
cmp
and
jge
clc
aad
dec
and
cmp
popf
fbld
addr16
push
cmp
mov
dec
pop
jns
mov
out
add
dec
in
and
mov
out
mov
fwait
dec
and
dec
dec
and
cmp
and
pop
xor
iret
addr16
les
das
and
js
addr16
cmp
mov
dec
and
cmp
and
mov
shll
mov
mov
cmp
adc
mov
xor
shll
xor
dec
ds
dec
and
clc
dec
cwtl
sub
shrl
mov
rcr
cmpsl
cmp
xor
jb
mov
inc
add
jle
scas
scas
xor
rcll
call
mov
shlb
mov
fdiv
cmpsl
cmp
dec
dec
out
mov
and
mov
and
mov
dec
lcall
dec
and
mov
dec
cwtl
jge
shlb
xor
push
ds
aas
push
and
cmp
sbb
mov
lcall
pusha
and
and
cmp
loop
jbe
addr16
cwtl
xor
mov
pop
clc
gs
xchg
ret
out
popf
in
out
fwait
cmp
mov
inc
ss
xchg
dec
xchg
ret
out
leave
mov
out
fwait
cmp
mov
inc
ss
xor
xchg
lods
mov
pop
popa
test
dec
mov
clc
gs
xchg
ret
out
mov
mov
iret
and
pop
dec
test
dec
and
dec
mov
clc
gs
xchg
ret
out
cwtl
fcmovne
cli
test
outsl
dec
test
dec
and
dec
mov
clc
gs
xchg
ret
out
cwtl
fistpl
adc
mov
push
push
xchg
mov
sar
out
xor
xor
xchg
lods
mov
pop
pop
test
dec
mov
mov
dec
test
scas
cmp
negb
adc
mov
mov
imul
sbb
and
mov
add
and
mov
jb
push
sbb
and
inc
jg
jae
and
cli
imul
cmp
ss
and
cmp
mov
addr16
in
lcall
aaa
cwtl
add
in
lods
adc
and
cmp
fmull
mov
jb
and
cmp
lods
out
cmp
aad
insl
xor
les
dec
and
xchg
add
cwtl
and
loope
and
lods
jns
repnz
incl
and
sub
bound
xor
xlat
aaa
push
cmpsb
sarb
cwtl
test
add
sarl
mov
sbb
pushf
jecxz
add
adc
inc
js
adc
out
jno
push
fdivrl
fwait
adcb
mov
cmp
cmp
cmp
cmp
cmp
cmp
inc
dec
mov
jp
dec
and
cmp
cmp
cmp
cmp
push
dec
and
cmp
cmp
cmp
es
mov
fildll
bound
insb
filds
addr16
hlt
pop
sub
push
fwait
aas
jle
aaa
and
lret
push
mov
xor
fldl
lods
sub
sbb
sbb
xor
mov
and
or
mov
iret
cwtl
nop
outsb
push
lret
lcall
out
mov
dec
dec
add
inc
or
mov
inc
xor
shl
sub
adc
ja
dec
pop
dec
and
mov
pop
adc
shrl
lods
cwtl
jl
jle
icebp
jns
imul
or
loope
jo
fdivrl
jge
cmp
fmul
lcall
inc
mov
loopne
repnz
mov
out
jbe
adc
pop
adc
xchg
dec
lock
repnz
dec
cmp
jp
roll
cltd
mov
xchg
cmp
inc
sbb
in
add
jmp
sub
bound
data16
pop
adc
mov
stc
mov
lret
or
push
pop
jns
popf
mov
xor
fcmovu
sub
sub
pop
cmpsb
int3
repz
jne
jecxz
test
xor
or
out
cmc
in
insl
in
and
fnclex
adc
inc
xchg
adc
mov
pop
sub
pusha
loop
mov
adc
sbb
inc
addr16
repnz
loop
js
das
xor
jo
inc
test
ja
inc
add
dec
mov
inc
cmp
cmc
and
add
adc
icebp
lods
mov
dec
rorb
xor
mov
rclb
repz
dec
fldenv
inc
push
inc
mov
imul
add
inc
lock
cmp
mov
shl
inc
popl
popa
pop
outsb
sub
jo
xchg
adc
xor
cmp
lahf
adc
cmpl
in
mov
test
movsb
cmp
adc
xor
inc
movl
loop
sti
scas
bound
shrb
aam
xor
mov
out
add
mov
iret
and
fstl
movsl
in
int
adc
and
mov
and
test
inc
fldl
push
fsubl
pop
test
test
pmulhw
jecxz
jno
in
mov
arpl
mov
stos
jo
xchg
inc
xlat
pop
lret
ret
add
subl
cld
xchg
das
call
push
into
in
std
insl
mov
dec
xchg
lods
pop
push
push
sbbb
pushf
cmp
xlat
imul
adc
and
jae
xchg
sarl
xchg
fisubrl
add
add
or
add
adc
mov
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
mov
add
mov
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
mov
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
lahf
ljmp
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
sub
add
add
add
out
adc
ljmp
adc
cmp
cmp
mov
jnp
add
popa
sub
jecxz
adc
sbb
xchg
es
sbb
loop
test
mov
and
out
sub
stos
adc
push
jns
shl
jl
push
cmpsl
rcll
cwtl
jb
sbbb
xor
xorb
fldl
sub
mov
add
ret
xor
jns
add
adc
cwtl
test
jl
xchg
push
pop
jmp
jge
jecxz
fstps
int
push
mov
loope
lock
arpl
push
repz
jge
aad
nop
jmp
sbb
push
xchg
subl
iret
push
imul
hlt
mov
add
test
cs
out
jo
rcrl
inc
sbbl
dec
aaa
addb
mov
dec
jecxz
xor
pop
xchg
pop
fnstsw
jo
imul
xor
jo
inc
test
loop
int
xchg
fisttpl
push
cmp
outsb
dec
lods
iret
push
push
sbb
mov
adcl
jae
ret
mov
mov
shll
mov
test
xchg
xor
mov
xchg
int3
pop
ss
aam
cmc
outsb
mov
cmp
inc
push
mov
pusha
xchg
mov
xchg
mov
loop
leave
pop
xchg
imul
xor
lods
mov
popa
inc
push
mov
aaa
inc
imul
hlt
dec
add
filds
inc
dec
dec
scas
cvttps2pi
xchg
bound
jge
mov
jmp
add
stos
insb
push
lret
or
mov
aas
std
fldt
int
stos
in
psrld
cmp
or
push
inc
adc
mov
adc
and
in
ficoml
out
add
pushl
leave
aam
sub
jne
push
into
mov
inc
inc
icebp
xor
inc
jl
std
pushf
call
or
rclb
rorb
fistpll
jns
cmpsb
add
cmp
mov
mov
inc
cltd
and
add
scas
cmp
aam
inc
jl
pusha
add
and
outsl
add
repnz
cmp
in
xchg
xor
std
dec
cmp
clc
sahf
leave
xor
jle
fimull
dec
mov
inc
push
inc
lock
jns
popa
mov
jmp
push
notl
push
fnsave
daa
cltd
enter
lahf
xor
std
sahf
imul
sub
ret
rol
adc
shlb
push
aaa
fsubs
and
stc
outsb
lods
mov
loop
or
jae
fwait
jecxz
mov
add
leave
cmp
popa
divb
ret
or
iret
xchg
xchg
insl
pop
and
jg
and
push
xchg
lods
pop
xchg
out
adc
repnz
add
push
xor
pop
push
mov
in
push
fisubl
or
rclb
jns
mov
pop
xchg
clc
push
stc
pop
or
outsb
inc
dec
scas
pmaxsw
andl
pusha
adc
cmp
cmpsl
cmpsl
mov
bound
lea
mov
mov
jp
push
xor
add
mov
add
mov
mov
sbb
test
mov
int
out
cmp
mov
or
mov
dec
add
push
out
jge
and
les
pusha
sub
or
mov
push
out
ja
stos
scas
sbb
mov
outsl
sbb
lret
movsl
aam
cmp
sti
jle
cmp
mov
inc
dec
ds
pusha
mov
rcrl
pop
cld
or
cmp
mov
mov
icebp
push
scas
jl
int3
scas
addr16
fwait
pop
pop
jnp
enter
dec
mov
mov
jle
xlat
ds
adc
int3
into
xchg
dec
lea
gs
in
xchg
test
subb
jg
cmp
orb
arpl
push
pop
test
iret
and
adc
call
ja
mov
aam
cmp
and
jle
jle
xlat
sbb
mov
gs
inc
addr16
xchg
les
test
mov
dec
xchg
gs
fs
mov
inc
lahf
cmp
push
sbbl
negb
push
stc
cmc
mov
cwtl
push
bound
pop
shll
xchg
jbe
push
jg
pop
ja
or
pop
and
movlps
push
leave
inc
lret
and
pop
sbb
xchg
jo
xchg
sub
ret
pop
sti
pop
fstpt
lahf
sarl
insb
cmc
clc
xchg
decl
test
inc
cmpsb
aam
fildll
push
sub
aad
std
or
leave
dec
cmp
ror
call
push
mov
lahf
mov
pushf
sbb
aam
dec
jl
mov
lods
inc
repnz
xor
daa
push
in
cmp
gs
push
dec
adc
lea
jecxz
js
aad
aaa
adcb
mov
mov
out
addr16
adcb
cli
mov
iret
popf
adc
int
test
test
jg
jo
jmp
cmpsl
repz
xor
xorb
ja
mov
jne
ficoml
arpl
enter
adc
cs
pop
cmp
push
mov
bnd
fs
ret
mov
push
cmp
mov
mov
jge
bound
sbb
dec
in
jp
outsb
xor
icebp
outsb
wrmsr
nop
lods
rcl
dec
or
and
add
push
sbb
addr16
and
sbb
inc
adc
dec
cli
adc
ficoml
jmp
test
push
lds
pop
mov
movsl
pop
or
inc
ja
or
int3
pop
lds
xor
cmp
mov
call
mov
arpl
push
loope
sub
mov
std
dec
out
pop
lahf
dec
pause
int3
jecxz
or
sahf
add
shrl
jg
inc
xchg
movsb
es
mov
les
jl
dec
sarb
xor
int3
loop
inc
pop
adc
iret
std
push
data16
aaa
mov
and
icebp
cmp
jnp
mov
lods
stc
les
outsl
adc
je
add
mov
add
mov
popa
and
clc
ljmp
je
test
ficoml
push
or
pop
out
push
nop
jp
adc
hlt
add
or
xchg
pop
addl
dec
or
sbb
sti
data16
lds
inc
push
jns
add
gs
xchg
mov
fnstenv
adc
call
adc
ljmp
and
rcl
jbe
popa
or
mov
aam
jmp
mov
xchg
std
mov
adc
pop
iret
lock
les
add
dec
fisttps
push
lods
xchg
loope
dec
repz
and
mulb
sbb
data16
xor
jp
cmc
cmc
sti
daa
dec
xchg
cwtl
lock
enter
icebp
rcrl
dec
push
fisttpll
inc
fcompl
insb
dec
shlb
mov
add
es
push
call
pop
addb
ret
dec
lods
pop
je
stc
mov
ljmp
outsb
fisubl
insb
jo
lds
je
jg
or
xor
xor
push
xor
ret
test
std
adc
ds
sub
xor
cmp
popa
sub
stos
imul
ret
jnp
or
adc
cltd
adc
test
sub
jb
lahf
sahf
ja
add
fs
xor
imul
mov
lahf
sbb
push
data16
cli
in
imul
add
sti
jge
fdivs
stos
and
sbb
xor
sbb
inc
popf
pop
xor
lcall
mov
out
out
cwtl
fstpl
jp
loopne
pop
loop
shrl
pop
cmc
and
xor
divb
rclb
pop
adc
sub
test
andl
pop
gs
ficoml
imul
mov
aam
out
sbb
dec
pop
cmc
shlb
flds
pop
and
sti
into
sub
dec
add
lcall
mov
outsl
or
inc
test
into
das
loopne
and
xchg
sti
sub
or
hlt
mov
mov
xor
ja
pop
pop
pop
dec
push
clc
cmpsb
sbb
aaa
push
or
cli
test
in
shll
in
jno
push
dec
mov
mov
pop
mov
add
inc
in
cwtl
lret
ljmp
mov
jmp
mov
sub
push
sbb
add
inc
imul
inc
pop
sbb
outsl
mov
test
and
jbe
cwtl
jnp
scas
gs
push
mov
fs
inc
xacquire
iret
jl
in
cwtl
mov
inc
js
or
add
and
sahf
or
add
dec
jp
daa
pop
sbb
shrl
inc
add
ss
rcll
sbb
aas
adc
in
out
pop
inc
xchg
xchg
push
ret
adc
loope
sbb
inc
mov
frstor
divb
jnp
xchg
mov
stos
push
pushf
jns
adc
mov
sub
mov
ret
xor
xchg
test
mov
movl
icebp
push
into
mov
cs
cmpsl
mov
xor
test
shrb
sub
jge
lods
xchg
aas
je
es
sub
lret
adc
lock
fistl
cmp
xchg
cmpsb
add
stos
icebp
mov
lds
das
mov
cld
mov
stc
leave
loope
sarl
xchg
inc
adc
ficomps
popf
mov
xchg
cwtl
movsl
adc
cs
orl
xchg
mov
jp
sbb
jno
adc
sub
mov
jns
push
jle
xchg
add
imul
scas
fdivrl
sub
push
mov
sti
fwait
in
sbb
imul
ljmp
out
into
sbb
loop
mov
lds
arpl
inc
repnz
out
cli
add
into
push
imul
mov
sub
mov
mov
ret
push
arpl
aas
push
roll
pop
fidivs
mov
int
cmp
jae
push
mov
cmp
mov
dec
add
shlb
sti
pop
aad
lret
sub
dec
jge
je
adcb
in
and
cmpsl
ds
lds
sarl
movsb
adc
popa
test
add
push
mov
pop
pop
mov
adc
dec
xor
mov
mov
inc
scas
cmp
sub
mov
jle
fistpll
pop
fistl
add
fiaddl
aas
nop
sub
ja
cmpsb
loop
loop
arpl
fmull
cwtl
push
jae
xor
arpl
and
ret
daa
sub
xchg
outsb
dec
insl
sbb
mov
add
dec
shl
dec
dec
inc
jl
jg
mov
aaa
arpl
dec
jbe
push
js
jnp
cmp
and
sbb
push
inc
mov
jns
test
gs
xor
daa
cmp
cmp
aad
mov
add
xor
push
nop
xchg
loop
outsb
dec
jl
xchg
pop
cwtl
clc
jge
in
mov
xchg
int3
ljmp
dec
sbb
add
stc
lcall
mov
push
pop
int
add
out
out
roll
cli
in
sbb
mov
loopne
in
xor
rcrl
lgs
les
sarb
nop
dec
cmp
xor
add
jp
cmp
xor
shll
sub
in
and
fstp
cmp
sarb
sahf
mov
sbb
sahf
or
sub
jl
test
lcall
test
hlt
mov
xchg
aaa
incl
jae
fsubrl
xor
adc
mov
imulb
sahf
sub
fcomps
cmp
test
inc
fsts
jge
lods
data16
scas
jb
mov
icebp
iret
xor
iret
flds
mov
outsb
aad
mov
loopne
fcoms
push
pushf
cwtl
call
fwait
repz
fsubr
addr16
out
hlt
mov
jbe
jno
pop
fadd
test
lcall
mov
test
sti
inc
push
lds
loope
sbb
mov
dec
cmpsl
aas
jne
aaa
test
or
pop
cmpl
inc
add
xabort
clc
test
cltd
pop
mov
out
jp
data16
insl
nop
ret
jl
cmp
test
xchg
lods
cmp
aam
and
es
test
shlb
sbb
cmpsl
jae
inc
gs
into
test
pop
or
insb
push
inc
xchg
and
jbe
ja
cmpsb
push
push
cltd
push
cmp
je
cltd
leave
fs
shlb
sarb
gs
push
inc
fsub
xchg
lcall
in
sub
dec
notl
sbb
xchg
cmpl
flds
push
xor
sub
adc
daa
or
fs
sahf
aad
cmp
cmpsb
mov
or
fsubs
stc
fstl
stc
and
mov
loope
fs
adc
pop
cs
lock
stos
mov
iret
add
sbb
ljmp
jb
lods
jmp
lock
xchg
inc
gs
jge
loopne
adc
push
mov
jb
push
fsubrl
push
fcomip
int
adc
sahf
fmull
aaa
testb
cmp
dec
or
cli
cmpsb
xchg
repnz
push
add
lret
xchg
imul
outsl
cmpl
xor
jg
adc
mov
sahf
adc
stos
imul
mov
fsubr
inc
fsubrl
int
enter
bnd
mov
mov
bound
out
sub
sahf
mov
fxch
mov
push
frstor
lock
or
and
aas
cmp
aas
test
or
cli
sbb
movsl
sub
jp
xchg
add
jecxz
mov
scas
sbb
add
aas
out
insl
out
mov
out
out
bound
push
mov
shll
push
and
test
mov
mov
adc
leave
xchg
fdivr
add
and
cmp
sub
cmpxchg
jge
lock
or
loopne
sarb
cmp
xchg
and
sub
mov
push
xchg
aad
xchg
sub
lock
testl
fstps
push
out
mov
jno
cld
mov
jae
sahf
bound
adcb
mov
inc
aaa
pop
stc
cmp
jmp
sbb
add
es
inc
movsl
cwtl
pop
pop
lret
adc
lret
cli
jle
push
fidivs
jo
cmpsb
jg
push
das
fwait
xor
pop
push
mov
mov
mov
add
cmp
jmp
pop
xor
xor
das
fistpll
xchg
test
mov
push
ja
pushf
pop
popa
rorl
cmp
cmp
shl
inc
dec
imul
xchg
adc
mov
movsl
or
adc
xor
out
fsubrp
rcrb
mov
mov
test
shll
loope
lret
inc
shll
add
and
adc
inc
mov
dec
sarb
xlat
clc
loop
popf
ret
rcrb
sub
adc
loopne
inc
leave
mov
mov
lods
dec
mov
bound
pop
scas
and
mov
pop
add
lock
pop
push
dec
mov
inc
dec
inc
mov
mov
jge
lods
adc
sti
adc
pop
push
inc
adc
cmp
xor
sbb
repz
ds
aam
out
in
lds
adc
cmc
xchg
xor
out
cmp
negb
jno
and
les
mov
cmc
inc
push
mov
jae
sbb
dec
loopne
cmp
push
in
mov
jg
lds
cli
and
mov
cmp
pop
pop
xchg
inc
mov
lea
decl
scas
lret
inc
pushf
jmp
sarl
jmp
cmp
mov
push
fwait
xchg
movnti
sbb
sarl
add
stos
sbb
pop
adc
push
into
jmp
pop
fcomps
insb
pop
sub
inc
dec
inc
movsb
push
mov
cmp
inc
and
inc
aas
xchg
int3
add
pop
add
jae
and
adc
mov
inc
mov
sbb
in
fxch
mov
lods
jmp
sarb
jae
jg
test
dec
or
pop
rolb
lcall
lret
pop
push
jno
cmpsb
xchg
in
scas
jno
xlat
aam
and
fmull
mov
mov
ss
idivb
inc
lcall
inc
int
sub
jo
jge
ljmp
test
ja
jbe
rcr
icebp
mov
cmpsl
cs
xchg
clc
stos
cmc
sub
sbb
inc
in
pop
mov
sub
ja
cmpsl
clc
push
popf
mov
pop
dec
insb
js
push
leave
push
xor
inc
mov
ficomps
adc
mov
push
sbb
xor
jge
aad
mov
and
add
dec
xor
leave
or
movb
xchg
insl
jbe
mov
lock
inc
cmpsl
mov
ljmp
fimuls
xor
stc
in
mov
mov
bound
adc
or
vpcmov
int
das
cld
ror
iret
ret
or
add
addr16
ja
int3
jo
xchg
dec
pop
pop
pop
or
sub
clc
cmc
push
pop
xchg
cld
stos
push
pop
inc
dec
push
in
push
cltd
and
shr
mov
or
and
mov
insl
dec
mov
aaa
jns
aas
in
and
pushf
loopne
fisubrl
ds
pop
shlb
cwtl
xchg
jae
dec
inc
aam
daa
cli
jno
push
add
cs
mov
movsl
sbb
shr
jge
cmp
lock
cmpsl
mov
ss
out
jns
jle
xor
cmp
imul
pop
pop
ds
fwait
sub
push
sbbb
xchg
pop
adc
loope
jnp
mov
fimuls
cmpsl
jg
in
fiadds
and
jbe
shl
std
pop
push
xor
jo
ficompl
clc
sbb
sbb
push
push
mov
iret
xchg
fstpt
pop
fdivl
ret
jno
push
out
scas
fwait
lods
xchg
fldenv
adc
or
lods
daa
pop
negb
cmp
fidivs
lds
cmp
ja
sbb
ret
in
lahf
pop
mov
push
fiadds
outsb
scas
inc
dec
sbb
dec
fcomi
sbb
xchg
loop
outsb
adc
cmc
int3
and
inc
push
mov
or
mov
lods
sbb
aam
mov
mov
xadd
fcmovb
sbb
adc
jecxz
pop
pop
movsb
js
xor
pushf
aas
in
cmpsl
sarb
ror
scas
call
andl
lock
and
add
mov
idivl
adc
lods
test
cmp
bound
adc
ss
aad
or
inc
movsb
sbbb
je
negl
out
enter
loop,pn
aas
jge
pop
ja
rcrl
enter
mov
and
push
mov
pshufw
ljmp
mov
sub
sbb
inc
sub
jns
mov
lds
mov
or
les
push
shl
mov
and
dec
popa
or
xchg
pop
pop
jl
or
ss
jge
add
dec
jg
shrb
sub
into
ficompl
adc
std
cs
and
mov
sub
negb
pushf
mov
outsb
sbb
xchg
and
jbe
sbb
rcrl
mov
pop
das
cmp
mov
push
outsb
lea
jl
rcl
push
add
loop
or
mov
add
enter
adc
in
in
shl
cmpsb
push
add
push
das
mov
or
or
mov
mov
inc
sub
inc
jno
mov
sub
paddb
les
jnp
inc
push
xor
dec
xor
out
out
and
push
mov
mov
push
shlb
xorl
inc
fcoml
sbb
enter
in
and
and
inc
pop
push
ret
cmpsl
or
or
sahf
aad
xor
adc
add
mov
movsl
xchg
in
push
ret
gs
int
shrb
hlt
lock
ret
mov
ss
cwtl
xor
dec
in
pop
jp
sbb
movl
mov
xchg
iret
negl
inc
jp
jecxz
in
arpl
jb
push
xchg
sbb
mov
jb
inc
and
xchg
push
adc
int3
sahf
idivb
jo
jb
testl
and
inc
pop
cld
push
cmp
pop
rorb
sub
cs
fadd
lret
pop
dec
push
cwtl
lcall
in
xchg
les
sub
ret
sub
add
cmp
or
mov
lock
scas
mov
faddl
fwait
repnz
out
adc
insb
jp
sub
inc
adc
mov
aas
cmpsb
xchg
bound
sbb
lock
jl
rol
inc
pushl
and
jg
stc
pushf
mov
out
les
inc
xchg
leave
mov
dec
adc
xor
rolb
aam
lock
push
push
xor
adc
pop
fwait
enter
xchg
xor
das
mov
adc
jbe
jmp
adc
xchg
js
and
mov
mov
ret
add
add
mov
xchg
xor
stos
rclb
pop
movsb
iret
hlt
sub
shrl
pop
mov
call
out
push
cli
mov
fs
jg
test
dec
ror
sbb
push
lret
mov
sub
std
arpl
fninit
mov
lds
mov
outsl
xchg
xchg
bnd
loopne
cmp
add
ficompl
add
push
mov
fsubrs
pop
push
jle
jns
nop
test
lods
lock
fisttpll
mov
jo
xchg
xchg
push
or
mov
xor
fsubrl
cwtl
sub
fmull
or
pop
pop
sti
lea
leave
ret
and
ja
cmp
adc
lret
popa
fcmovnu
ja
stos
fcomp
xchg
mov
sti
mov
cli
sbb
lods
sti
mov
jge
call
repz
dec
mov
pop
jg
lods
mov
inc
cmp
aas
leave
cld
shlb
xchg
mov
sbb
pop
sti
out
ficoml
mov
cmp
mov
pop
ljmp
push
xchg
js
jle
mov
mov
mov
mov
mov
mov
xchg
pop
rolb
fwait
jo
imul
sub
pop
mov
std
mov
pop
dec
idivl
lret
cwtl
pop
mov
cmp
or
arpl
out
lret
xchg
scas
movsl
inc
ja
notl
xchg
outsl
addr16
cmc
aaa
loopne
mov
push
inc
movsl
out
test
aad
popa
mov
push
pop
dec
sub
cmp
aad
sub
pop
xlat
and
jno
and
dec
fsubs
xchg
mov
out
fidivs
inc
push
and
mov
fdivrs
sti
cltd
ds
sbb
shrl
xchg
push
pop
mov
jp
mov
sbb
xchg
mov
or
insl
je
adc
rolb
push
jmp
and
and
into
into
pusha
movsl
test
lock
xor
fnstenv
mov
pop
cmc
jmp
mov
pop
pop
mov
cmp
mov
frstor
mov
popf
inc
xor
test
das
cmp
lahf
les
jo
xor
pop
mov
jl
cmp
push
push
fcmovnb
jns
cld
les
add
jb
std
dec
push
rcll
jp
xchg
fists
ret
pop
adc
dec
adc
push
pop
outsl
cs
leave
insl
mov
fcmovb
mov
sti
sub
mov
and
add
adc
ja
test
and
sbb
or
call
leave
push
or
imul
mov
add
fs
jle
sub
popa
mov
push
cwtl
and
jecxz
das
bound
loopne
loopne
add
fadd
int3
mov
cmpsb
dec
push
xchg
rol
jp
sbbb
push
pop
push
repz
lret
dec
sbb
fstpt
and
adc
data16
insl
addr16
cmp
dec
sbb
sbb
pop
bound
mov
stos
cld
nop
ret
or
daa
dec
sbb
loop
cmp
xchg
xor
bound
idiv
js
sbb
pop
inc
xchg
and
aam
in
loopne
repz
test
xor
cmc
addr16
inc
loop
cmp
pop
lahf
add
or
xlat
adc
in
fs
loop
mov
dec
or
sbb
and
xchg
lcall
imul
and
call
mov
pop
repnz
subb
inc
jnp
xor
scas
mov
add
insb
inc
mov
dec
cwtl
loope
cmp
mov
fdivrs
add
mulb
in
repz
push
inc
cmp
cltd
xor
mov
pusha
xchg
sub
hlt
dec
mov
sub
pushf
pop
das
cmovns
and
dec
ja,pt
imul
adc
jmp
int3
cs
push
add
mov
das
addb
jecxz
xchg
mov
mov
push
orl
je
int3
adc
and
lret
or
rcrl
adcl
jl
xchg
cld
outsb
test
enter
sbb
jne
jmp
sub
shlb
test
and
dec
movsb
sbb
loop
fadds
mov
mov
daa
and
loop
sbb
fsub
fs
fsubl
and
cmpsl
andl
jae
xor
mov
jae
test
push
inc
sbb
jo
shll
sub
pop
adc
sub
pop
addr16
mov
inc
adc
add
lods
shlb
pushf
dec
ret
test
adc
inc
adcb
aas
xor
jae
daa
xorl
and
in
rcrl
insb
loop
jle
sbb
imul
neg
mov
xchg
xchg
add
dec
and
sub
mov
push
popf
sbb
addr16
xchg
outsb
jb
inc
fs
or
test
adcl
sub
push
sbb
lods
dec
mov
frstor
lret
lcall
mull
ficoms
mov
push
mov
cltd
jmp
inc
jne
sbb
cmpsb
ljmp
push
and
cltd
bound
icebp
inc
out
push
into
mov
adc
push
pushf
sub
clc
or
xorl
fwait
add
or
dec
out
cmp
ds
cwtl
cmpsl
mov
popf
jb
sub
rorl
push
cmp
push
mov
sub
fucomi
jo
dec
dec
loop
jl
cmp
clc
sub
push
lret
test
push
lods
fdivrp
fiadds
outsb
cmp
xchg
ret
xlat
jae
aaa
roll
and
adc
mov
out
aam
xor
lret
xor
sub
and
sub
mov
dec
cmp
sub
pop
out
xchg
sbb
idivl
adc
dec
es
pop
fnstsw
adc
jp
stos
sti
test
xchg
cmp
subb
cmp
das
icebp
xor
sbb
xchg
bound
pop
decl
test
mov
sahf
sti
fistpll
gs
call
or
inc
mov
aas
adc
dec
into
lds
out
je
out
mov
dec
jne
addr16
xor
pop
sub
jecxz
cmp
inc
in
or
pop
cwtl
or
jbe
and
fcom
imul
loope
xlat
mov
loopne
in
push
dec
inc
xchg
mov
add
mov
sbb
xchg
aas
fldt
jge
inc
shll
shll
rcl
sub
or
subb
ficompl
jp
xor
push
inc
jno
cmpb
xchg
test
xor
bnd
mov
push
inc
push
mov
sub
jno
inc
jo
bound
jne
js
adc
hlt
cltd
in
xor
dec
les
sub
les
mov
dec
sbb
push
imul
sub
jbe
jp
lock
adc
jmp
std
decb
cld
sbb
adc
add
rorl
jge
adc
add
in
stos
sub
adc
mov
mov
jge
rclb
mov
xor
xor
sub
sahf
shrl
lods
pusha
mov
clc
enter
inc
xchg
popf
lcall
mov
add
sub
stc
inc
push
push
cmpsb
push
outsl
mov
mov
js
fwait
mov
data16
fstps
xor
cli
das
sahf
jmp
pop
pop
inc
or
sub
call
fmuls
push
std
popf
in
xchg
xchg
out
movsb
addr16
jnp
aam
aas
or
push
dec
push
fnsave
shrl
cwtl
cmc
xchg
dec
or
loope
mov
xchg
pop
and
aam
xchg
mov
xor
mov
push
push
divb
push
in
push
fstps
enter
and
push
out
ret
ficomps
mov
leave
and
cmpsl
movsb
or
outsl
popf
in
adc
nop
mov
mov
loop
mov
xchg
mov
push
mov
add
pop
mov
pusha
jg
mov
icebp
aas
xchg
mov
das
jecxz
test
pop
mov
clc
clc
inc
and
xchg
test
mov
dec
ja
jno
inc
cmpl
mov
xor
enter
mov
pop
push
xchg
pop
cmp
pop
mov
testb
call
ret
incb
xchg
cltd
sarl
or
xchg
outsb
inc
aaa
fcmovnu
mov
mov
fcmovnb
movsl
ss
and
ja
mov
cli
jp
test
jne
or
in
mov
fbld
pop
shr
jle
mov
test
pop
push
or
jecxz
and
sbb
jmp
mov
cmp
sub
sarb
and
sbb
pop
int3
sub
lods
xchg
aas
lods
mov
loop
mov
aas
ret
ds
push
loop
outsl
fsubl
dec
in
scas
stc
cmp
sub
and
xchg
xchg
das
lret
fwait
cmpsb
push
lcall
leave
sub
adc
adc
mov
pop
dec
mov
out
xlat
aas
pop
adc
out
bound
aad
fidivrs
mov
enter
add
bnd
sbb
movsb
or
mov
push
out
lock
lods
push
mov
mov
lret
or
inc
and
mov
stc
dec
mov
lods
data16
jbe
repnz
mov
adc
lods
adc
mov
lods
out
jle
mov
imul
loope
jg
ds
sbb
lcall
pop
add
test
loop
push
ficomps
or
rcl
lahf
cmpsl
loope
arpl
pop
lock
mov
push
mov
or
dec
mov
fsts
push
ret
adc
ss
and
imul
dec
test
jne
sarl
scas
or
push
jnp
xor
outsb
jmp
cmpsl
bound
mov
or
clc
pop
sahf
insl
test
inc
inc
ret
adc
push
mov
stc
cmp
or
shl
sub
insb
aaa
int3
add
xchg
inc
popa
decb
jno
sub
fwait
shrb
in
std
in
shlb
divl
mov
push
adc
xor
mov
fstpl
push
scas
aaa
sub
mov
push
in
sub
xorl
push
inc
ja
test
dec
popf
ret
adc
push
cwtl
push
loopne
vpshab
cwtl
mov
jg
inc
lea
rcrb
lods
call
sub
push
push
mov
mov
push
jo
hlt
out
shrb
jb
sub
inc
rdtsc
dec
insl
clc
jb
pop
ds
xchg
clc
shlb
adc
mov
aaa
mov
dec
outsl
mov
mov
dec
adc
bnd
push
sbb
subl
and
fnstenv
outsl
dec
mov
lahf
ljmp
xchg
sti
sarl
mov
lds
sbb
outsl
adc
in
aad
push
cli
shll
pop
sub
push
mov
mov
xchg
nop
idivl
cwtl
xlat
les
pusha
in
cmp
movsl
outsb
sbb
rcr
je
add
mov
and
dec
repz
xor
mov
xchg
push
pop
xchg
mov
aam
or
scas
stc
rolb
es
out
dec
add
add
cmp
loope
fs
xor
pop
aaa
sarb
xchg
and
sbb
mov
xchg
adc
testb
mov
mov
movsb
or
push
pop
mov
pop
pop
pop
xchg
div
mov
mov
out
xchg
testb
pusha
mov
inc
outsl
xchg
mov
xchg
imul
mov
mov
rcrl
dec
jge
and
lods
mov
cltd
push
xchg
dec
push
sub
pop
push
lret
dec
adc
inc
xchg
inc
mov
fidivrl
mov
push
adc
int
jae
popf
xchg
mov
stc
rorb
dec
inc
jecxz
adc
dec
pop
hlt
and
addb
ds
sbb
cmc
rorl
int
jp
push
pop
test
xchg
mov
add
test
xchg
push
sbb
sub
pusha
ret
aas
pop
mov
jmp
adc
inc
push
std
push
pop
jns
rcrl
mov
pusha
sti
ja
jge
pop
stos
add
sbb
add
xchg
stos
and
adc
ljmp
cmp
sbb
lret
outsb
xchg
ss
leave
xorb
lcall
sbb
xchg
mov
dec
pop
jecxz
mov
adcl
push
dec
sarb
leave
dec
clc
push
xchg
cmpsl
sahf
sbb
and
pusha
imul
mov
pushf
cmp
and
hlt
adc
lahf
mov
mov
into
lea
pop
push
lret
repz
push
add
adc
jns
loopne
iret
mov
fisubrs
mov
pop
sbb
divl
push
mov
dec
xor
dec
add
cmp
xchg
cltd
fsubr
sub
mov
out
pop
fstpt
cmc
stos
test
rcrb
pop
mov
mov
xor
stos
loopne
out
je
inc
addl
les
inc
sbbb
xlat
into
mov
ss
fisubs
pop
and
sahf
shlb
mov
xlat
sbb
or
aam
pop
fistpl
fnstcw
jbe
xor
enter
sar
into
testl
int3
adc
add
or
mov
iret
and
or
pusha
cli
das
es
cmp
dec
es
and
mov
arpl
dec
xchg
xchg
adc
fdivrl
push
xor
push
jo
add
aaa
loopne
jae
ret
orl
xchg
pop
pop
and
jbe
xchg
bound
mov
leave
movsl
int3
jecxz
push
mov
test
dec
je
out
rclb
mov
ja
pop
mov
outsl
or
mov
jp
iret
push
or
mov
ret
fmull
push
jge
xor
dec
inc
xchg
fwait
movsb
push
lret
xchg
jp
pop
and
test
pop
cmp
ret
cmpsl
pop
out
fsubrp
push
out
mul
or
add
inc
or
push
fisubl
stc
pusha
loop
or
inc
filds
and
push
push
fistps
sub
sbb
sbb
enter
rolb
fsub
dec
and
dec
cwtl
cld
rorb
loop
loope
dec
lret
and
fiaddl
rolb
push
and
or
dec
push
lret
bound
adc
arpl
pop
nop
sbb
or
nop
pop
cmp
inc
lahf
adc
sarb
jno
jae
add
cmp
fdivp
pusha
pop
and
cmc
jnp
cli
pmullw
xor
or
cmpsl
push
mov
je
or
inc
movsb
cmp
push
cltd
mov
cli
scas
into
clc
xchg
fs
add
mov
sahf
pop
adc
int
mov
sbb
sbb
xor
mov
pop
sti
cmpl
repz
xchg
mov
jae
and
mov
enter
and
cmp
inc
jnp
jle
add
sahf
push
jmp
jnp
lret
stos
enter
or
mov
push
clc
and
sarl
rorb
jns
adc
jecxz
aas
es
lock
mov
ja
sbb
and
jecxz
jg
adc
ljmp
and
mov
add
pop
std
add
jno
cmp
fimuls
imul
cld
stos
push
mov
lret
stos
divb
outsb
rcrl
mov
or
mov
scas
mov
or
pop
jl
addl
dec
adc
mov
icebp
popa
xchg
mov
jmp
notb
and
bound
or
lea
xchg
lahf
movsb
jns
in
mov
out
sti
pop
or
xchg
add
jmp
push
std
mov
xor
push
fwait
mov
inc
cmp
ret
pop
loop
jmp
or
adc
pop
xchg
push
mov
out
jg
xchg
js
jmp
test
inc
enter
xchg
sbb
dec
push
xchg
jae
cmp
insb
pop
mov
jmp
xchg
dec
in
fistps
xor
mov
push
jo
sar
xlat
inc
mov
adc
mov
fnsave
mov
lock
sbb
mov
rcr
pop
xchg
pop
lods
sub
cwtl
sbb
iret
cltd
dec
fisttpl
add
scas
sbb
sbb
sar
repz
clc
inc
ret
out
pop
lahf
cld
and
call
es
ja
sub
daa
lds
mov
jle
subl
inc
adc
inc
pushf
in
loop
das
idiv
movsl
enter
insl
faddl
jno
pop
pop
push
dec
in
je
push
add
pop
push
loope
pop
subl
jns
scas
stos
mov
fwait
xor
lret
ficompl
cmp
mov
push
pop
fnstcw
mov
dec
repz
sub
xor
xchg
fdivrl
and
and
popa
inc
mov
scas
mov
test
add
enter
mov
xor
sbb
out
xchg
fdecstp
cmp
loopne
scas
lds
pusha
jge
xor
movsl
xchg
sbb
lods
out
fistps
out
dec
jg
cmp
lods
cmp
ja
fimull
pushf
je
insl
jo
mov
scas
fidivl
push
push
cmp
adc
inc
hlt
cmp
out
mov
pop
stos
fstpt
rcrb
and
jne
xchg
les
test
ss
adc
lea
stos
cli
addr16
dec
cmpsl
insb
les
cmp
jecxz
push
mov
les
xchg
orb
inc
dec
cwtl
cmpb
cmp
xchg
cld
rcrb
jl
arpl
ja
inc
mov
les
mov
sbb
inc
cli
or
add
shr
das
mov
xchg
mov
jne
cmp
out
scas
fmull
clc
sbb
mov
lods
pop
stc
and
mov
xor
sub
int
mov
jbe
aas
mov
push
jb
cmpsl
mov
adc
sbb
pop
repz
outsb
add
jbe
imul
dec
xor
cmpsb
ljmp
mov
filds
sahf
daa
stc
gs
dec
js
inc
lret
mov
push
notl
fbstp
cmp
inc
xor
pop
dec
insl
pop
dec
fsubs
sarb
lret
scas
and
xchg
int
lods
jmp
jecxz
rcr
outsl
inc
or
lcall
aad
cmp
insl
pushf
daa
stc
subb
xchg
neg
insb
in
xor
cmc
fdivl
aaa
add
cs
andb
jb
out
jp
jmp
xchg
out
stos
pop
fidivl
push
jmp
mov
and
add
push
jnp
mov
cmpsb
push
jmp
add
imul
rolb
imul
fnstsw
cli
sbb
inc
add
cld
movl
push
mov
fcmovb
xchg
add
push
jge
mov
out
pusha
push
dec
or
stc
jle
jge
inc
inc
cmpsb
imul
std
adc
sysenter
fiaddl
fmull
xchg
mov
push
call
fildll
cmp
jg
inc
stos
gs
pop
insl
ret
enter
leave
lea
in
mov
inc
imul
add
mov
xchg
push
cmpsb
imul
cmp
dec
sbb
mov
fists
and
bound
or
mov
pop
cmp
jne
or
sub
stos
mov
xor
xchg
out
cmpsl
inc
in
mov
pop
mov
pop
aaa
out
cmp
sbb
sti
dec
insl
pop
mov
clc
testb
js
dec
mov
inc
mov
popf
faddl
cmpsb
xchg
mov
add
js
pcmpgtw
filds
clc
cmp
inc
push
ja
adc
sahf
adc
adc
mov
out
gs
pop
jno
mov
movsb
jmp
jp
xor
fldcw
cmp
mov
sub
mov
pushf
jl
jb
add
xorl
mov
cmpsl
ja
in
sub
or
or
lock
cmp
in
sbb
xchg
lock
mov
inc
in
daa
cli
mov
xchg
mov
inc
jne
mov
xchg
lds
inc
or
mov
lock
mov
push
mov
adc
mov
aam
popa
adc
pop
mov
or
xorl
push
sbb
out
xchg
ja
pop
mov
cmp
daa
sub
or
xor
sbbl
adcl
xor
movsb
xchg
idiv
jmp
adc
cs
jp
jns
push
xor
or
outsb
jecxz
repnz
pop
push
xor
mov
push
andl
inc
sbb
push
outsl
nop
push
pusha
pop
pushf
cld
mov
push
adc
insl
jno
mov
xchg
push
dec
add
xchg
sub
movsb
xor
jbe
sahf
stos
fucomi
adc
testb
pop
xchg
lahf
mov
push
push
pop
fsts
int
jmp
pop
sub
pop
pusha
cmpsl
cmc
adc
addr16
ret
repz
xlat
and
push
movsb
test
in
mov
scas
in
and
aas
les
pusha
add
cmc
push
sbb
or
xchg
inc
cmpsb
cmp
pop
xchg
sbb
lcall
mov
mov
cwtl
leave
xchg
sbb
cmpsl
lea
out
cs
fldt
fnsetpm(287
arpl
lock
push
inc
repz
cmp
xorb
inc
jne
icebp
lds
sbb
push
mov
cwtl
sbbl
bswap
inc
and
icebp
inc
lcall
mov
in
and
in
addr16
push
or
pop
cli
das
ljmp
lret
stos
dec
mov
fsubrl
loope
out
out
xchg
mov
ret
push
and
cmpl
les
xchg
rcll
les
bound
add
test
outsl
std
scas
add
shrl
test
insb
jp
shll
adc
data16
jae
sti
in
pushf
dec
or
jae
and
cmp
inc
mov
dec
fistps
emms
mov
outsl
daa
cwtl
mov
daa
popf
dec
dec
push
fistps
ljmp
cmp
mov
xor
cmp
inc
and
out
in
sbb
outsl
push
adc
int3
aas
xor
subl
adc
jmp
mov
push
mov
sub
pop
sub
fnstsw
jo
andl
or
fnop
xchg
jns
mov
add
ret
adc
push
adc
rol
sahf
loope
jl
mov
xor
xchg
inc
xlat
das
mov
sbb
dec
test
adc
popf
adc
repnz
inc
hlt
mov
or
sub
inc
mov
adc
ret
lahf
and
and
push
test
inc
sbb
xor
out
mov
je
jbe
lret
mov
mov
loopne
sahf
popf
sub
jo
pushf
fisttpll
mov
fbstp
nop
cmc
mov
push
into
inc
or
pop
ret
sub
int
ja
movsb
and
pop
xchg
xchg
sub
sub
or
addr16
sbb
mov
fsts
mov
call
jle
xchg
jmp
xchg
sbbb
inc
jnp
lods
movl
mov
gs
out
imul
cmpsl
movd
xchg
jmp
cmp
test
sbb
push
out
daa
push
push
neg
es
rcl
outsl
xchg
mov
sub
xor
roll
jecxz
or
add
shrb
push
inc
out
cld
inc
dec
jne
or
test
push
mov
mov
cld
dec
sbb
sbb
xchg
insb
imul
icebp
lods
pop
jg
enter
es
in
add
imul
mov
mov
jno
sub
xor
rorb
fiadds
insl
js
cmpsl
mov
ss
and
xchg
out
fstpl
sub
add
mov
lds
mov
pop
push
cli
orl
or
cmpl
outsl
sub
xor
push
ljmp
roll
xchg
stos
daa
push
rclb
daa
jne
fstpt
sub
pop
cltd
jo
shll
pop
jno
jg
dec
fdivrl
daa
mov
cwtl
hlt
jnp
push
jns
fisttpll
adc
add
inc
add
jge
dec
stc
lds
in
push
xchg
hlt
in
add
sbb
out
movsb
sbb
mov
mov
adc
pop
inc
mov
push
add
sub
arpl
lds
and
std
add
sbb
xchg
jmp
push
sbb
gs
pop
jl
test
cmp
jp
out
daa
mov
cmp
cld
mov
pop
pop
sbb
mov
mov
leave
fisubrs
das
popw
xchg
xchg
ret
pusha
scas
mov
ror
aam
jecxz
lds
and
popa
icebp
push
inc
xor
rclb
jl
pop
jge
cmpsb
popf
mov
jl
mov
adc
popf
cmp
sub
mov
mov
jg
or
sbb
push
sbbb
sub
ja
mov
lock
push
leave
inc
ss
sti
in
sub
xchg
dec
sbb
inc
sbb
test
add
cli
movsb
jg
pop
jb
mov
repnz
imul
adc
mov
mov
jno
mov
xchg
out
outsb
mov
lods
dec
xlat
mov
mov
movsb
jl
jp
test
adc
sbb
les
cmp
jae
fdiv
pop
ljmp
jbe
fs
dec
sbb
cmp
icebp
sbb
pop
outsb
sub
adc
jle
inc
sbb
ds
xor
lods
ds
lcall
sub
jbe
pop
adcl
cld
sbb
loop
mov
cwtl
xchg
ret
idivb
pop
stc
mov
cmp
cmp
shr
add
or
gs
arpl
ret
loopne
mov
js
mov
lret
addr16
out
mov
out
pop
cmc
adc
lahf
rcrl
fsubl
fcmovnu
mov
pusha
imul
mov
test
jb
mov
pop
mov
sbb
hlt
adc
inc
cmp
loop
sub
inc
mov
mov
push
dec
xor
pop
xlat
pop
scas
jg
lahf
dec
lock
mov
cmp
inc
jp
xchg
jae
xchg
dec
add
xchg
mov
mov
ret
faddl
stc
lods
jecxz
outsl
testl
fsqrt
pop
mov
mov
fsubr
repnz
mov
addr16
lcall
aam
hlt
or
in
add
push
dec
sub
gs
aam
fistpl
add
mov
mov
cltd
in
arpl
sbb
shl
sbb
sbb
daa
daa
sbb
inc
mov
dec
jbe
mov
xchg
add
pop
pushf
push
pop
pop
sbb
add
jae
push
fwait
dec
sbb
cwtl
push
lcall
push
inc
cmpsb
mov
lods
fs
adc
int3
les
dec
cmp
push
jne
arpl
mov
in
data16
imulb
mov
popf
mov
push
inc
pusha
add
jge
sti
mov
js
xlat
xor
xor
call
pop
lret
les
cltd
je
pusha
pop
push
scas
aas
sbbl
sbb
repnz
cmp
testl
jno
shll
push
xchg
orl
popa
xchg
rorl
jge
jno
jne
cmp
push
sub
mov
out
xchg
sti
mov
xchg
dec
lret
rol
pop
push
lods
rcl
icebp
xor
clc
mov
enter
xadd
sub
mov
sub
daa
cmp
mov
mov
push
int
push
ds
out
cmpsl
mov
inc
imul
popa
insl
and
jle
gs
hlt
sub
loopne
mov
testl
imul
xchg
mov
push
clc
and
mov
addb
jnp
jecxz
and
mov
sbb
and
enter
or
gs
cmp
inc
iret
pusha
lods
aas
sub
out
jmp
and
and
mov
mov
test
nop
insl
sbb
or
imul
dec
stc
mov
enter
adc
aam
inc
icebp
mov
dec
sti
inc
insb
loope
and
popf
test
lcall
fwait
dec
sub
loop
xchg
fs
inc
pop
fs
and
pop
mov
jg
mov
call
adcl
lock
and
pop
mov
dec
call
das
mov
adc
dec
call
loop
sahf
adc
sahf
pop
cmp
lcall
pop
mov
rclb
mov
lods
shll
sbb
rcll
or
ja
shrb
test
leave
stos
mov
xor
jno
sahf
movsl
adc
imul
mov
lret
add
add
jb
ret
mov
hlt
cmp
mov
push
ds
jne
test
jmp
mov
mov
shll
fstps
and
mov
mov
scas
mov
lock
pop
inc
test
fdiv
lock
test
ffree
sbb
mov
and
xchg
or
int
mov
fsubl
icebp
or
xor
data16
iret
adc
and
inc
scas
sbb
inc
icebp
enter
pop
sub
loope
pushf
or
push
dec
fcoms
rcl
cwtl
sub
xchg
nop
mov
out
enter
andb
inc
ljmp
pop
pop
jl
int3
adc
or
jle
and
fsubrp
mov
jns
lea
jne
shlb
scas
add
stc
mov
pop
adc
out
ljmp
cmp
jmp
pop
lret
jne
rcll
or
mov
cli
ljmp
push
jg
filds
mov
jge
or
dec
shlb
lock
mov
jno
adc
fisttps
jmp
mov
lods
adc
ret
out
pop
je
mov
dec
lds
popf
outsl
inc
hlt
pop
loop
ficompl
data16
repz
and
mov
dec
mov
je
xchg
ja
faddl
dec
jnp
fdivs
pop
xor
repnz
inc
outsl
mov
xor
leave
sub
and
xor
int
and
mov
shll
pop
int3
dec
call
cmpsb
pop
sub
leave
jns
cmpsl
cmp
mov
or
mov
imul
leave
fdivl
out
scas
inc
xor
mov
ljmp
stos
bound
ds
cmpsb
adc
icebp
out
sbb
les
sar
inc
bound
mov
outsb
lahf
cmp
leave
ds
out
shll
inc
mov
xchg
fdiv
inc
test
in
cmp
adc
imul
cmpsl
xor
sbb
addb
dec
xchg
lods
push
jg
ja
dec
bnd
jns
mov
arpl
negb
sahf
jle
out
add
pop
push
cmpsb
or
add
imul
imul
scas
test
imul
sub
movsb
lcall
xchg
pop
stc
pop
adc
mov
imul
or
shr
add
push
inc
and
pop
jo
cmpsl
imul
jle
imull
cli
rcrl
mov
push
xchg
dec
mov
dec
idivl
dec
sbb
adc
cltd
int
out
sbb
xchg
cmp
scas
mov
xchg
sbb
or
or
leave
or
push
les
sbb
lcall
jnp
push
in
test
add
hlt
sub
decl
jmp
out
fdivl
in
pop
and
arpl
insb
cmc
pop
push
xlat
push
mov
or
hlt
mov
pop
out
add
dec
jo,pn
push
daa
data16
int3
push
in
inc
aas
fwait
pushf
pop
fldpi
std
xchg
pop
xchg
mov
dec
sbb
inc
mov
movsl
push
inc
mov
leave
mov
arpl
sub
mov
push
jge
cld
or
les
cmp
xchg
sub
lret
pusha
jmp
mov
fsubs
test
leave
lds
pop
mov
or
dec
xchg
cmc
push
testb
daa
outsl
cmp
popa
rcl
sub
inc
ret
int3
test
mov
nop
popf
ret
pop
repz
fdivrl
mov
stc
mov
cmp
in
fmull
subb
in
imul
bound
sbb
sbb
in
js
int3
mov
nop
xor
xchg
mov
mov
shlb
jg
dec
xor
lret
fwait
mov
pusha
jb
popa
clc
into
andl
sbb
rorl
cltd
out
push
dec
cmp
push
ja
jns,pn
cltd
test
cmp
icebp
jecxz
mov
addr16
mov
clc
rorb
popf
scas
fnsave
je
cmpsb
lds
data16
xor
sub
pop
fsubs
adc
cmpsb
in
jp
in
xor
and
add
push
std
lret
sub
into
jge
add
push
clc
jno
das
cmpsl
out
aam
jno,pt
add
xor
sub
jne
add
xchg
mov
cmp
fdivrl
xchg
jl
jno
jecxz
or
jo
jmp
cmp
dec
xchg
in
das
dec
shll
mov
test
add
test
push
or
jle
add
mov
mov
cmp
cltd
mov
out
mov
fistl
arpl
mov
fdivl
in
arpl
dec
cwtl
inc
pop
add
adc
push
sbb
cmpb
jmp
inc
aaa
xor
mov
push
sbb
out
add
icebp
ja
fs
pop
xor
and
jl
js
mov
and
mov
mov
movsl
lods
out
inc
in
int
iret
pop
mov
push
arpl
mov
out
js
dec
jno
decl
inc
xchg
jne
adc
mov
pop
and
wbinvd
pop
ja
faddl
xor
add
hlt
mov
stos
lock
iret
mov
or
sbb
repz
sub
lret
and
jo
arpl
sub
cmc
pop
xchg
stos
mov
lds
leave
jp
sbb
loop
lods
pop
ret
cmp
out
out
mov
mov
dec
jge
dec
lds
fmulp
mov
xchg
jecxz
add
mov
iret
mov
fs
mov
mov
cmpb
sbb
pop
scas
out
cs
in
push
stc
sbb
sub
or
fists
cld
cmp
xor
cltd
scas
outsb
stos
dec
pusha
sub
add
add
sub
add
lock
repz
sbb
repz
and
out
das
out
xchg
jmp
pop
sub
call
loope
or
stc
inc
mov
out
mov
jne
in
fisttps
dec
jge
cli
lahf
enter
add
inc
bound
mov
xchg
ja
mov
sbb
cltd
jae
push
data16
jg
mov
dec
out
lcall
into
ret
cmc
int
iret
in
aad
js
mov
mov
adc
push
les
fsubr
mov
sub
jnp
xor
pop
ljmp
lret
add
mov
xor
icebp
xor
pop
call
into
jns
push
mov
cmpl
fists
dec
jge
dec
arpl
xchg
into
test
mov
sbb
sbb
jl
aas
ja
pop
test
xchg
rorl
add
sbb
notb
sbb
mov
xlat
inc
aaa
xlat
jbe
inc
cmp
xor
cmpsl
fsubl
adc
ficompl
ret
jg
in
adc
rcrb
jge
mov
adc
mov
sti
mov
push
popf
prefetch
clc
xor
mov
adc
hlt
xchg
fldz
test
jp
add
pop
add
xchg
jge
sbb
push
xlat
scas
cwtl
pop
xchg
stos
out
xor
inc
in
push
out
add
std
inc
rolb
aad
push
cmpsb
jne
jns
inc
mov
xchg
xorb
add
loopne
out
pop
cltd
loope
mov
int
push
stos
cmp
pop
test
jmp
mov
pusha
push
cmp
mov
pop
pushf
add
dec
in
outsl
enter
xor
cmp
int
negl
test
jp
cmp
fidivl
jp
cs
xchg
je
aam
dec
jne
incb
sbb
out
xchg
sub
lods
or
cld
dec
lahf
cmp
or
aad
sbb
adc
fld
out
popf
loop
cmp
cmc
add
mov
pusha
and
test
xchg
inc
test
mov
sbb
aad
mov
jg
mov
dec
adc
mov
cli
stos
pop
mov
pop
pop
jecxz
int
pavgw
xlat
ret
icebp
or
int
xchg
jnp
mov
pop
sbb
stos
orl
add
mov
stc
cs
lea
scas
lods
daa
repz
repz
ficoms
ds
or
sbb
nop
adc
jmp
popf
jne
test
sub
sbb
je
and
dec
push
adc
ret
idiv
jo
xor
lods
push
movsl
add
lock
mov
xchg
ret
jecxz
jo
mov
or
shrb
fcoml
mov
nop
mov
add
orl
ljmp
into
test
enter
sbb
nop
hlt
stos
xchg
dec
dec
stos
test
clc
pop
mov
decl
xchg
fstl
leave
inc
cmp
or
push
push
insb
rolb
in
test
out
mov
jno
cmp
xchg
lods
lret
mov
jns
jnp
cmp
or
mov
lcall
dec
xchg
add
scas
fwait
push
pop
inc
inc
bound
clc
sub
ret
mov
test
or
out
jp
cmp
and
rcrl
cmp
out
daa
cmpsb
add
stos
mov
cli
pop
movsl
xor
adc
pop
mov
push
or
es
test
cwtl
sbb
add
push
inc
adc
pop
adc
sub
scas
movsb
mov
add
xor
and
dec
dec
sete
pop
mov
daa
cmp
shl
adc
cmp
sub
sbb
inc
xchg
loopne
inc
xor
mov
test
pop
mov
es
push
mov
push
pop
jne
das
fimuls
adc
mov
jo
in
and
add
sub
xchg
in
rolb
out
pusha
and
push
push
into
inc
mov
mov
std
fcoml
jmp
cmp
xchg
push
xor
sahf
xor
jae
pop
aaa
sub
insb
out
sbb
xchg
out
cmp
in
push
mov
sti
dec
or
or
orl
dec
cmpsl
and
jle
sbb
popa
sub
push
sub
jge
mov
sbb
inc
push
fbld
mov
das
jg
mov
dec
cmp
and
and
out
sub
sub
cmp
jmp
int3
cmpsl
and
addr16
sub
in
jp
dec
popa
jo
and
add
ds
and
loope
pop
push
mov
aas
data16
push
stos
adc
sub
jno
mov
adc
test
shlb
xor
sub
xchg
and
push
and
and
sub
mov
movsl
jno
icebp
lods
add
xchg
mov
es
cmp
mov
dec
arpl
cli
in
adc
or
aad
pop
in
dec
pop
fiaddl
mov
test
outsb
dec
dec
fimuls
mov
lds
add
inc
std
xlat
push
inc
rcll
mov
sub
or
scas
pop
dec
js
add
int3
sub
xchg
lods
mov
arpl
xor
ret
push
idivb
js
pop
push
in
inc
into
jne
fildll
in
ss
push
fwait
cmpsb
jle
in
xchg
mov
sub
inc
pop
shll
mov
xchg
pop
pop
ss
rclb
pop
das
mov
pusha
int
sub
dec
sarl
and
mov
fcoms
push
lcall
add
adc
imul
push
pop
cmpsl
mov
xchg
xchg
das
mov
mov
adc
adcl
or
mov
popa
mov
loope
sbb
test
xor
fistpll
sbb
ret
and
sahf
adc
xor
cmpsb
push
out
cmp
mov
cmpsl
jne
sti
popf
mov
mov
push
dec
jb
cmpsl
lret
pop
popf
clc
sbb
ret
loop
sub
add
cld
icebp
jb
mov
pop
adc
lret
mov
jmp
sahf
xor
mov
inc
mov
into
pusha
rcr
sbb
nop
hlt
repnz
sbb
out
flds
inc
ret
in
scas
pop
scas
push
leave
sub
cwtl
pop
lods
sbb
or
xlat
cmp
enter
mov
loop
es
fs
bound
mov
jge
fs
movsb
movsl
xchg
call
push
in
hlt
xchg
icebp
jnp
mov
mov
ljmp
out
or
cltd
out
mov
std
inc
popa
cmc
fs
icebp
out
in
data16
fisttpll
or
das
std
lea
push
scas
push
xchg
idivb
dec
cwtl
push
push
sub
mov
jno
mov
shlb
int3
aad
or
aad
fwait
aam
mov
xchg
xchg
in
adc
lret
scas
mov
inc
scas
sub
jne
mov
test
mov
adc
js
dec
adc
fistpl
into
or
gs
es
xchg
in
xchg
idivb
stos
adc
movsl
cmp
mov
adc
sub
scas
push
inc
int
fs
pushw
push
pop
add
inc
jns
or
stos
jg
loopne
xchg
xchg
call
xchg
add
imul
add
or
cmp
xlat
inc
pop
mov
xchg
lcall
xchg
xchg
and
lret
aas
sahf
addb
lock
mov
mov
leave
movsl
clc
lods
dec
pusha
add
push
jg
or
sar
push
sbb
and
mov
aam
in
push
pop
das
mov
movsb
scas
movsb
sub
push
subl
loopne
ss
cmpsb
je
enter
dec
add
cltd
jp
sbb
mov
aaa
ljmp
lds
mov
popa
fistl
leave
cwtl
popa
daa
pop
ljmp
inc
mov
push
and
pop
mov
daa
cld
aam
mov
lahf
mov
call
mov
je
lods
xchg
and
ds
cmc
pop
in
or
enter
cmp
mov
xchg
jnp
addl
push
test
aam
lock
aaa
sarb
jecxz
movsb
inc
push
clc
push
hlt
stos
mov
xor
inc
or
pop
and
test
jns
jnp
popl
ljmp
call
dec
in
movsl
inc
or
int
out
mov
jne
cmp
fwait
out
push
pop
mov
pushf
cld
call
jmp
cld
xchg
pusha
imul
rep
mov
adc
and
jno
daa
enter
lds
inc
sbb
pop
jae
movsb
push
pop
fstpt
addl
and
dec
fnstcw
mov
das
in
insb
and
js
lahf
or
mov
das
repnz
pmovmskb
mov
inc
and
jnp
inc
or
iret
dec
mov
aaa
pop
pop
fnstsw
sub
sbb
out
or
in
ss
hlt
sbb
mov
mov
cltd
mov
iret
inc
fmul
clc
mov
ss
sbb
sarl
mov
ret
dec
cmp
jmp
cmpsb
sbb
lods
fstpt
stos
outsl
xor
push
sub
sbb
add
push
adc
cli
mov
lahf
xor
sub
int
jo
mov
and
jbe
cmp
arpl
rcll
xor
add
es
inc
mov
out
mov
jmp
xchg
sub
jl
stos
adc
xchg
push
jp
das
les
sub
xor
arpl
fldl
add
add
scas
cmc
jp
mov
mov
sti
mov
cmp
in
aas
mov
dec
jge
mov
jp
test
sbb
lods
dec
dec
or
cs
addr16
sbb
mov
leave
ret
dec
pop
inc
sahf
xor
pop
or
adc
mov
into
or
test
cmp
dec
into
inc
push
sub
xor
mov
add
add
xchg
mov
xchg
pop
stos
jl
xchg
out
lods
cmp
xchg
inc
or
sbb
jecxz
dec
and
jp
add
jge
mov
mov
adc
xor
sbb
and
push
jp
inc
mov
cmp
out
xor
sub
xchg
or
pop
sub
lret
loop
ret
mov
fs
sahf
in
stc
rclb
pop
pop
test
push
add
dec
std
xchg
test
pop
mov
fldt
adcl
js
loopne
outsl
lock
arpl
mov
inc
push
sbb
sbb
push
jp
scas
and
xorb
jb
mov
cwtl
movsb
mov
or
daa
insb
idiv
rsm
outsl
in
and
push
sbb
dec
push
ret
jl
aad
cmp
fs
adc
outsb
cltd
mov
movsl
xchg
or
mov
push
adc
ljmp
test
pop
sub
jbe
push
adc
sbb
ss
in
or
jl
jp
cmp
jae
loopne
dec
mov
adc
dec
insl
call
pop
roll
push
cmp
test
outsl
mov
sarb
add
xor
xchg
iret
inc
add
lret
xchg
xor
push
cs
ja
out
lock
mov
or
jg
popf
mov
popa
jmp
leave
fwait
iret
into
lcall
xorb
stos
inc
inc
or
outsb
xor
or
int
mov
jle
xor
cmp
cmp
sbb
das
sar
lcall
mov
mov
pop
test
leave
add
filds
inc
lock
sub
enter
xchg
add
xchg
hlt
cwtl
adc
in
ret
mov
sub
push
rclb
add
aaa
test
cmp
jge
pop
jl
hlt
mov
dec
imul
or
jg
xor
xlat
ficomps
push
dec
push
lahf
das
mov
popa
mov
mov
mov
and
sbb
adc
or
xchg
outsb
repz
not
bound
jns
or
ljmp
in
and
movsl
scas
bound
out
mov
xchg
add
sbb
mov
mov
popf
mov
mov
jle
daa
movsl
adc
and
into
xchg
jne
add
sbb
pop
leave
fucomp
add
pop
bnd
cmp
out
iret
into
jmp
mov
shlb
bound
push
icebp
pop
push
in
cltd
push
or
mov
mov
mov
cmpsl
cmpsl
lahf
lods
int3
jns
jle
mov
pop
sub
ret
rorl
pop
add
cmp
mov
idivb
and
cs
adc
ss
sub
scas
jge
leave
lret
lds
xchg
fwait
mov
jp
out
xchg
xchg
add
int
or
sub
out
jmp
js
test
lret
jle
push
mov
cmp
cmc
or
or
test
aad
or
add
js
sub
mov
int3
xor
xchg
mov
jae
das
and
dec
pop
mov
or
shrb
mov
add
stos
mov
adc
imul
inc
gs
out
test
addr16
pop
pop
mov
jle
jp
mov
push
mov
or
xor
pop
mov
pop
sbb
ljmp
aaa
push
xchg
xchg
les
add
leave
and
clc
mov
and
xor
jmp
fnstenv
sub
push
push
sub
repnz
mov
inc
add
mov
pop
push
or
jl
or
rcr
fcomps
sbb
push
lahf
sbb
subl
aaa
repz
packsswb
mov
mov
inc
mov
ljmp
out
aas
or
aas
cmpsl
scas
shrb
sbb
rorl
fistpll
pushw
inc
mov
xchg
sbb
stc
in
aam
scas
fcmovu
push
aad
aad
inc
popl
in
pop
neg
iret
jb
dec
stos
push
rorl
sbb
stos
xorb
cmp
mov
popf
push
sbb
push
test
rol
dec
out
dec
jle
std
push
xor
pop
inc
imul
xor
pop
jecxz
aad
stos
pop
cs
mov
jne
loopne
and
dec
push
pop
mov
xor
cmpsb
shlb
call
add
push
sub
mov
shll
shrb
inc
lods
mov
sbb
jbe
je
cmp
sbb
inc
insb
push
push
popf
jge
push
add
sbb
cmpsb
in
mov
out
add
adc
xchg
shll
scas
pop
repnz
or
dec
test
pop
lret
inc
push
sub
or
inc
mov
rorl
sub
xor
mov
loopne
lahf
mov
mov
shl
xchg
pop
psubw
xchg
lahf
mov
lea
push
scas
push
daa
push
adc
jp
mov
pushf
addr16
cmpl
insb
lock
sub
aas
sbb
jle
pop
sub
fisttpll
test
mov
xchg
mov
insl
mov
add
std
cld
jo
outsl
cmp
lcall
mov
jae
scas
pop
leave
mov
aaa
lea
ret
mov
or
lock
mov
mov
or
jl
test
lock
mov
outsl
adc
mov
pop
es
push
cmp
cmpb
ja
fadd
cmp
inc
cmp
insb
mov
movsb
mov
fistpll
or
pop
inc
push
inc
fildl
pusha
mov
in
mul
test
cli
addr16
or
loopne
lds
add
sbb
jecxz
push
pop
push
rcl
dec
mov
xchg
ds
lea
idivl
jne
push
out
arpl
call
aas
push
stc
iret
sbb
pop
repnz
mov
pushf
aaa
inc
iret
stc
stc
push
mov
aaa
pop
lret
dec
push
sbb
xchg
dec
lret
mov
mov
dec
les
hlt
jl
sub
out
jo
xchg
lcall
sub
push
hlt
adc
repnz
dec
movsb
mov
rcll
mov
sbb
loop
jmp
lret
xor
stos
imul
movsb
or
xor
pop
mov
std
and
lods
sub
and
fldcw
out
xor
insb
or
loopne
enter
fwait
aas
add
movb
mov
lret
adc
xor
loop
and
enter
jns
add
xor
push
orl
mulb
and
cli
push
mov
cmp
popf
pop
cli
jg
sbb
cmp
jae
loop
std
cmp
jo
inc
sahf
loop
mov
jle
sbb
bnd
test
cltd
mov
icebp
or
movsl
fnsave
int3
jae
sahf
sti
jnp
mov
pop
mov
inc
adc
push
in
ret
dec
cmp
jae
aam
lods
lock
jnp
in
jecxz
ss
push
movsl
add
cmp
and
pop
stos
inc
xor
sub
ja
sti
dec
arpl
add
xlat
xlat
push
stos
xor
cmpsl
je
add
dec
sarb
leave
sub
in
lds
jo
lea
jl
stos
jnp
pop
or
push
inc
ret
js
mov
sahf
sti
test
jb
mov
fisttps
push
jne
lea
call
or
lods
mov
xor
repnz
stos
or
xor
repz
les
xor
dec
bnd
loop
mov
out
and
xchg
aas
mov
scas
notl
leave
xchg
adc
cmp
pop
lahf
stos
notb
inc
movsl
aam
nop
sbbb
push
int3
roll
iret
mov
adc
sbb
cli
xor
or
test
les
mov
pop
aas
cmp
scas
mov
pusha
and
jmp
rcll
mov
fnstenv
mov
jmp
lea
and
loopne
dec
cmp
jmp
enter
or
iret
pop
mov
mov
leave
jne
fisubrs
sarl
jnp
ljmp
rcll
pop
cmp
lds
sbb
mov
mov
and
pop
fs
mov
pusha
pusha
nop
inc
xchg
mov
jns
xchg
ljmp
adc
cmp
call
es
push
andl
fs
dec
es
add
out
sarl
and
xor
test
sbb
mov
fwait
je
bound
lods
add
sbb
adc
mov
jno
call
mov
add
test
mov
insb
int3
xchg
jl
fs
gs
int
or
cltd
test
or
sarb
hlt
pop
les
push
lods
lret
pop
lcall
imul
adc
xchg
and
inc
hlt
frstor
dec
jno
xchg
and
scas
jne
push
inc
push
inc
adc
adc
push
cwtl
int
inc
movsb
lds
and
movsb
xchg
mov
inc
cmp
lods
inc
cmp
lods
mov
test
into
cwtl
mov
das
aaa
or
insl
adc
in
in
movsb
popa
jecxz
addr16
and
pop
dec
push
xchg
dec
out
sub
adc
adc
add
fnsave
xchg
inc
and
mov
jmp
add
pop
jmp
add
lret
scas
fisubrs
xor
mov
and
add
into
hlt
cmp
aas
leave
int
adc
mov
cs
dec
and
inc
test
sbb
jno
pop
pushf
mov
mov
xor
test
inc
sub
lcall
mov
jne
fwait
mov
ljmp
push
mov
dec
add
sub
push
add
bound
pop
test
pop
dec
ljmp
jae
test
lods
mull
add
or
dec
mov
mov
add
pusha
cmovge
xor
sti
hlt
aam
pop
cmp
flds
sbb
jo
cmp
mov
push
jae
push
add
sbb
xor
inc
mov
fs
lcall
popa
loop
fiadds
adc
cli
bound
mov
cs
push
add
sub
xchg
mov
and
iret
jno
jp
outsl
pop
or
les
fidivrl
xor
and
test
mov
std
or
fcomi
push
fmul
inc
popf
cmp
dec
push
lcall
shlb
aaa
lods
cli
push
arpl
mov
repnz
or
adc
mov
adc
lcall
pop
dec
push
jns
inc
imull
jecxz
sub
sbb
loope
stos
mov
cmp
push
mov
inc
dec
data16
mov
pop
outsl
in
inc
cmp
inc
pop
cld
ljmp
pop
rorl
adc
adc
dec
jmp
icebp
jnp
push
xchg
mov
mov
jno
pusha
xchg
test
or
xchg
testl
hlt
fwait
mov
loopne
in
add
subb
jo
mov
rcrb
insb
xor
movsl
ret
xchg
jne
push
xor
mov
adc
sti
sbb
push
xchg
xchg
push
stos
cmpl
test
push
push
mov
mov
xorl
in
dec
cmp
lret
inc
xchg
rcl
cwtl
or
cwtl
sahf
jmp
out
sbb
jnp
mov
fiaddl
jge
cmpsb
test
xchg
xor
mov
pop
in
xchg
lret
inc
cmpsl
xor
jmp
ja
bound
pop
push
or
push
fisubl
in
inc
jmp
xchg
fbld
test
adc
dec
repz
and
stos
pop
jbe
jmp
xor
xchg
sbb
sub
xor
sub
popa
fnstcw
xchg
out
out
jo
and
inc
cs
call
ret
adc
repz
orl
addr16
jg
jp
pushf
xor
mov
sarl
push
jb
mov
in
mov
cmp
repz
jecxz
xor
sub
lret
pushf
add
mov
in
aaa
pop
jns
das
cmp
mov
lret
mov
add
inc
mov
xor
mov
cmc
stc
movsl
jmp
mov
jae
push
nop
dec
and
or
int
hlt
mov
scas
decl
nop
or
lock
xchg
scas
shl
jle
push
adc
adcl
insl
insb
sahf
sbbl
in
mov
mov
fdivl
in
aaa
push
in
scas
pop
jb
dec
push
mov
test
jbe
xor
shll
xlat
leave
sahf
push
cmc
cmp
sbb
push
or
scas
mov
add
push
sub
and
xor
loop
or
punpckhbw
out
add
pop
movsl
push
cmp
insb
xor
movl
leave
push
jle
xor
test
add
shr
xchg
inc
shlb
popa
jle
sub
mov
js
scas
popl
lcall
pop
add
mov
imul
pop
loop
in
sub
pop
sarb
mov
pop
enter
jnp
out
inc
in
jl
push
ret
lods
test
cmpsl
mov
jle
int
sbb
mov
js
shll
imul
sbb
inc
fdivrl
stos
fbstp
mov
ss
int3
or
adc
daa
pop
sahf
or
stos
jnp
sar
xchg
dec
lea
loopne
cwtl
lahf
sbb
test
loop
cli
dec
addb
and
enter
push
push
scas
subb
movsb
and
xor
adcl
test
mov
fld
mov
fisttpll
mov
add
jecxz
lods
mov
pop
jb
jo
xchg
in
xor
pop
movsl
jecxz
push
hlt
inc
cltd
sbb
lahf
shll
mov
mov
dec
jmp
popf
push
adc
pop
mov
shll
popf
sti
or
jmp
xor
sahf
adc
gs
or
sub
repz
iret
aaa
rcll
pop
inc
imul
sti
add
mov
scas
jae
sbbl
es
add
cmpsl
imul
pop
cmp
xchg
in
out
mov
lret
pop
ljmp
fsubl
ds
mov
cs
stc
mov
insl
and
jl
mov
icebp
mov
ror
ja
pop
popf
int
iret
cmp
xchg
out
mov
movswl
test
mov
xor
push
das
aam
fsubl
cwtl
fldl
jo
fisttpll
sub
inc
pop
repz
repnz
inc
out
movsl
inc
cmpsl
and
jne
mov
rorl
mov
inc
push
jne
js
fmull
adc
fiaddl
jo
add
sbb
inc
imul
outsl
rcrb
testl
aas
cld
push
push
loopne
je
test
xor
test
sub
and
xchg
dec
sarl
jmp
lock
xor
inc
aad
stos
stc
mov
fbstp
mov
ljmp
mov
es
cmp
jg
add
pop
and
inc
shl
push
inc
or
arpl
es
repnz
inc
mov
xor
cwtl
out
xor
arpl
inc
sbb
cmp
mov
adc
and
cld
imul
and
and
cld
inc
mov
or
orps
mov
pushf
int3
aam
pop
push
into
cmp
inc
xchg
and
mov
popa
movsl
cmpsb
andl
xchg
pop
rolb
mov
ds
and
hlt
and
inc
stos
sub
mov
sahf
cmp
jecxz
xor
cmp
mov
jo
mov
jae
int3
sbb
daa
push
popa
mov
repz
pusha
xor
cmpsl
sahf
cltd
pop
adc
mov
lods
dec
in
adc
sbb
arpl
lea
mov
push
xchg
jmp
adc
inc
es
pop
xor
jp
inc
mov
mov
in
jbe
cli
in
out
xchg
mov
fsts
jno
pop
mov
ds
sub
cs
mov
lock
xor
inc
xor
inc
push
int3
je
sbb
int
out
mov
xorl
bound
xor
pop
sbb
ret
das
call
adc
mov
dec
in
aaa
ret
cmp
in
daa
testl
movsl
pop
mov
xorb
xor
add
mov
rorb
mov
clc
xchg
or
bound
push
add
ss
inc
loop
clc
add
and
das
sub
mov
lahf
lds
ja
lret
loope
push
les
les
xor
xor
scas
iret
push
jmp
repz
fwait
inc
adc
addr16
xor
xchg
out
inc
adc
pop
inc
mov
jmp
push
arpl
mov
inc
dec
ret
mov
xchg
rolb
imul
sar
cmp
cmpsl
shll
fsubrl
in
imul
push
xchg
dec
test
fsubs
xor
rcll
sbb
int3
and
push
xchg
out
orb
xchg
rol
inc
lcall
dec
cmp
xor
jno
pop
and
out
pop
add
cmp
fwait
add
addr16
test
packsswb
mov
test
out
ret
jae
dec
mov
cmp
mov
jmp
ds
xchg
mov
mov
adc
pop
adc
cmpsb
jns
jl
or
or
jg
fdivrs
lahf
stos
dec
xor
mov
dec
cli
jle
xchg
ja
sub
sbb
add
inc
insb
xchg
fcompp
mov
pop
xor
jne
jp
cmp
pop
ficompl
stos
call
jge
adc
cwtl
sub
imul
and
sbb
arpl
jg
dec
addr16
jl
out
sti
repnz
sbb
shl
mov
mov
out
pop
mov
std
andb
pop
pop
xchg
lock
mov
fs
mov
pop
inc
adc
loopne
sub
and
or
adc
dec
sbb
xchg
aas
rclb
in
test
dec
xor
mov
and
andb
rclb
xor
xchg
add
call
lods
decb
and
aaa
ss
push
outsl
inc
sbb
aad
loope
inc
out
mov
inc
pop
mov
imul
out
lea
and
es
mov
xchg
mov
lock
push
adc
movsl
pop
fsubs
ja
cli
pop
sbb
add
ret
call
sbb
sub
aaa
loop
ljmp
scas
jp
mov
or
das
scas
sub
or
pop
fdivrl
in
mov
cwtl
xor
mov
jnp
aaa
inc
mov
add
xchg
jle
mov
imul
push
fnsave
icebp
iret
xlat
push
sahf
aad
scas
sbb
enter
call
and
rorb
adc
xor
out
or
jmp
xor
aam
test
outsb
std
lcall
push
mov
in
sti
std
dec
lods
push
sbb
mov
jmp
sub
pop
dec
inc
daa
sti
mov
mov
push
dec
mov
idivl
cmpsb
cld
pop
sbb
mov
xor
js
dec
mov
inc
cmp
cmp
sarb
mov
or
shl
dec
push
mov
pushf
lcall
xor
lods
push
or
pop
xchg
shlb
je
shll
addr16
movsl
pop
mov
fs
xor
stos
and
fdivs
ret
jl
leave
rcrb
lret
rcll
xor
mov
or
ja
xor
fiadds
mov
push
push
mov
mov
arpl
sbb
mov
lea
or
cwtl
sti
adc
dec
nop
dec
push
imul
push
pop
hlt
and
jno
mov
out
push
leave
xor
push
jl
imul
lcall
xchg
repz
cwtl
enter
lock
pop
pop
int3
sbb
cmp
xor
ret
dec
leave
sbb
inc
and
add
mov
cli
xchg
cmp
orb
scas
out
and
inc
das
call
nop
mov
or
inc
loop
mov
pushf
xchg
jbe
fidivrl
hlt
pop
ljmp
das
push
fwait
imul
sti
push
inc
jl
pop
adc
xlat
pop
nop
xchg
xor
dec
ret
mov
scas
mov
clc
jl
mov
aas
jnp
or
push
sahf
mov
xchg
pop
ss
mov
mov
xchg
or
and
in
dec
daa
inc
test
adc
jecxz
hlt
add
sbb
mov
leave
mov
pop
jg
in
xchg
jb
adc
mov
cli
aaa
decl
add
ret
in
std
enter
sarb
inc
adc
push
xchg
push
xor
sub
jo
jae
out
inc
loop
inc
pop
imul
popa
das
jb
ja
sbb
push
jne
pop
jb
or
and
mov
ja
sub
xchg
sbb
inc
repnz
rcrb
mov
lcall
popa
push
mov
je
or
fincstp
add
js
lcall
loope
jno
dec
and
push
mov
pop
inc
push
pop
sbb
mov
sbb
imul
add
add
jge
push
push
pop
dec
aaa
jnp
mov
pop
add
xor
fadd
inc
dec
insl
mov
cld
cmpsl
insl
inc
clc
cltd
and
sub
lea
lret
lahf
test
mov
push
inc
cmc
in
cmpsb
mov
in
sub
sbb
inc
pop
and
xor
mov
push
enter
sbb
dec
addr16
mov
es
in
loope
and
pop
adcb
jb
out
aaa
into
xor
push
jg
cmp
pop
ret
and
cwtl
mul
stc
sbb
jae
in
sti
test
out
pop
je
js
xor
add
add
pop
std
rorl
jl
fdivrp
ret
mov
in
pushf
xchg
aad
xor
add
pop
outsl
mov
dec
sbb
cltd
fs
cmpsl
sub
sbb
mov
jne
into
xor
loopne
cs
add
xorl
incb
add
es
lahf
cmp
inc
sti
icebp
stos
cmp
push
or
cmpsl
dec
sub
lcall
inc
xchg
cmpsl
dec
pop
mov
mov
mov
clc
test
push
lods
arpl
aas
in
pop
cmp
repz
scas
jge
decl
mov
inc
jmp
push
jns
adc
sub
ret
test
das
cmp
mov
sbb
fdivrs
mov
push
xlat
jne
movsl
adc
push
fwait
jbe
push
loopne
dec
popa
mov
xchg
shl
pop
pop
aad
and
cmp
lea
or
inc
jno
dec
adc
lods
and
test
mov
in
pop
or
flds
pushf
push
xor
sbb
dec
and
pop
loop
inc
mov
pop
div
out
jg
sbb
push
iret
xorb
dec
xor
dec
cmp
add
adc
pop
lcall
mov
sub
mov
fs
lcall
es
icebp
and
jg
jo
jge
stc
pop
mov
stc
pop
dec
movsb
lret
out
addr16
aam
push
aam
sbb
out
inc
jecxz
repz
roll
or
test
stc
xor
mov
lret
enter
gs
sbb
add
stos
loop
mov
outsb
pop
ja
pop
xchg
xor
or
cmc
imul
or
mov
adc
in
push
jnp
mov
ds
in
fcmovu
and
repnz
dec
jmp
mov
push
pop
scas
adc
fisttpll
push
loope
rclb
cwtl
dec
mov
movsb
mov
jo
pop
stc
sub
mov
add
or
cwtl
mov
dec
fistpl
pop
jl
in
add
and
movsl
fcoml
push
arpl
inc
testl
sbb
push
xchg
pop
jae
stos
mov
push
sbb
pop
mov
cmp
fcmovne
aad
add
imul
dec
lock
dec
ja
ljmp
push
insb
sub
mov
incl
and
neg
ficoms
sti
mov
popa
sbb
bnd
pop
insb
push
inc
inc
clc
lea
iret
mov
clc
ret
aam
insb
sbb
xor
lahf
pop
es
mov
loopne
and
xor
stos
add
mov
mov
xor
shll
stos
test
jg
sbb
sub
mov
mov
roll
das
push
mov
frstor
fdiv
arpl
add
pop
mov
cmpsb
dec
xorl
mov
jecxz
xor
sahf
or
fbstp
and
xor
push
push
jmp
sub
xchg
in
fwait
loope
sub
lods
ficompl
dec
lret
stos
movsb
in
mov
imul
jl
or
push
adc
cmp
xchg
lea
mov
sti
dec
sub
aad
mov
test
and
fimull
mov
mov
loope
mov
std
std
mov
add
or
or
and
add
mov
push
or
mov
lcall
and
sub
ror
popf
arpl
mov
add
mov
xchg
pop
notb
xchg
pushf
insb
pushf
or
fadds
dec
xor
loop
mov
jecxz
mov
xor
xor
xchg
inc
mov
sbb
cmpsb
adc
js
cmc
xlat
adc
push
roll
outsl
push
nop
into
in
stos
js
pop
add
cld
fs
mov
mov
and
rorl
pop
adc
dec
jg
in
dec
push
sub
sub
xchg
bnd
out
and
ljmp
sub
mov
add
into
pop
iret
push
cltd
clc
jnp
addl
xor
jnp
mov
out
jnp
cli
jl
sbb
xchg
out
adc
pop
imul
mov
sbb
cmp
lahf
mov
mov
pusha
cld
sub
jnp
test
xchg
imul
nop
push
adc
xchg
in
jp
jp
adc
adc
pop
mov
push
cmp
lods
add
xor
call
je
es
jnp
fdivrl
imul
fwait
sahf
mov
mov
jmp
pushf
or
popa
insl
push
add
dec
jb
jbe
or
mov
ror
and
sbb
pop
or
pop
cltd
pop
les
inc
gs
repnz
pop
inc
xor
or
inc
sbb
inc
xor
rorb
test
add
mov
xchg
xchg
xchg
sub
mov
idivb
lahf
stc
cmp
in
adcb
shrb
jl
xor
add
in
mov
xor
sbb
lahf
jns
cmp
mov
cltd
cmp
sahf
xlat
imul
iret
in
test
xor
fsubrl
fnstsw
nop
insb
cltd
scas
test
subl
inc
loopne
dec
cmp
cwtl
lods
jg
inc
pop
xchg
das
jl
xchg
jae
int3
jo
std
dec
mov
out
imul
inc
inc
dec
adc
and
mov
mov
iret
jp
testb
pop
fildll
sub
push
outsl
stos
dec
lods
loop
and
test
clc
and
cmp
cmpsl
xchg
loopne
addr16
cmp
cwtl
leave
xor
movsb
mov
fwait
int
jo
iret
add
cmpsb
adc
leave
inc
push
sub
es
sub
and
push
rorb
jae
inc
inc
sbb
fisubl
movsl
insb
push
rcr
inc
test
gs
lea
pop
movsb
fcmovnu
xor
bound
out
mov
cmp
lcall
ret
gs
sub
mov
cmc
push
repz
cmp
xor
xor
xor
lds
jecxz
jnp
stos
adc
inc
test
sbb
lods
dec
imul
sahf
dec
mov
push
bound
data16
jo
cld
pop
adc
mov
insl
lock
shll
jnp
jl
test
xor
mov
int3
and
mov
adc
mov
in
inc
into
push
mov
add
dec
fs
jl
scas
push
lock
cmp
test
or
inc
pop
mov
jg
mov
mov
fdivrl
push
out
in
lods
ret
aaa
stc
or
aaa
push
rorb
repnz
scas
loope
outsb
hlt
js
push
int3
dec
shll
fstpt
xchg
mov
and
dec
jle
mov
sub
jnp
push
xor
movsb
in
pop
stos
inc
movsb
adc
mov
leave
hlt
test
mov
cmp
sub
xchg
aad
testl
sarl
cmp
cltd
or
fcmovnu
lahf
inc
out
xchg
xchg
inc
cmp
adc
mov
xor
das
pop
inc
pop
in
and
push
loop
aas
pusha
shrb
cs
adc
mov
iret
ja
int3
jnp
lret
fs
jl
aam
and
aas
ss
pop
jge
push
subb
and
in
shlb
je
cwtl
out
fadds
mov
ds
dec
jle
insb
xchg
sub
pop
xorl
imul
in
sbb
and
ja
outsl
fidivl
rorb
push
dec
dec
mov
cmpsb
cli
mov
push
adc
adc
into
out
inc
cli
jnp
and
sbb
push
scas
sub
jle
in
rcrb
in
lea
ret
push
dec
inc
inc
fsubl
fnstcw
pop
cmp
xor
rcrl
dec
or
cmp
outsl
es
out
mov
jmp
fisttpl
cmpsb
sub
mov
jno
xchg
cmpsl
inc
or
ljmp
cmp
inc
fidivrs
xchg
mov
and
addr16
ficompl
subl
ficompl
scas
ret
jge
jne
adc
lahf
adc
sub
fwait
mov
lea
enter
fldcw
aas
addr16
dec
xor
mov
div
lret
rol
loop
dec
dec
cltd
jne
jno
pop
xor
mov
nop
fs
xchg
das
aam
mov
loopne
inc
dec
dec
lahf
jmp
cmpsl
push
imul
popf
int3
push
out
lret
add
xor
lds
mov
push
dec
jns
pop
jne
push
add
fldl
movsl
mov
call
sub
xchg
int3
mov
jns
rcll
test
repz
inc
addr16
loope
in
adc
jge
sbb
hlt
mov
push
push
rclb
or
dec
lods
cli
call
dec
pop
fsubl
and
jb
and
lcall
lds
adc
in
ds
sbb
mov
aas
addr16
es
and
loope
cmp
mov
mov
pushf
mov
jp
pop
popa
or
add
hlt
dec
hlt
adc
std
cli
xchg
out
xchg
jbe
and
popa
enter
ljmp
je
cmpsb
out
sti
jecxz
insb
mov
iret
testl
jo
dec
in
mov
mov
stc
addb
jo
adc
xchg
pop
lock
jnp
push
cltd
adc
jne
mov
and
mov
mov
and
lods
pop
cmp
adc
xor
imul
mov
push
push
xchg
add
fucom
ret
cmp
push
mov
mov
scas
nop
test
mov
adc
test
push
insl
xor
adc
xchg
in
fstp
xor
mov
xlat
mov
outsl
cld
icebp
and
lods
xor
add
movsl
std
xchg
push
sahf
and
cmp
xor
test
orb
mov
fnstsw
or
jmp
in
in
cmpsb
xlat
sahf
stos
mov
sbb
push
pop
sahf
xlat
mov
push
movsb
dec
mov
mov
andl
arpl
inc
sbb
lods
mov
ljmp
add
push
jno
jmp
jnp
aad
icebp
jg
adc
mov
or
loope
arpl
ss
in
hlt
scas
pusha
jns,pn
imul
call
xor
mov
subb
adc
mov
or
ljmp
test
sbb
or
in
xor
call
es
mov
aam
jae
mov
dec
pusha
fwait
insl
push
outsl
hlt
push
addr16
mov
js
xor
cmp
inc
push
xlat
jmp
cs
jge
lds
ds
sub
mov
jnp
or
mov
enter
push
andl
mov
out
mov
insl
sbb
jae
stos
sbb
out
adc
add
cmpsb
sub
ds
sub
pop
cmp
sbb
cmp
in
outsb
mov
push
sahf
sub
dec
inc
jb
or
xchg
jp
clc
mov
push
push
dec
out
pop
ja
repz
sarb
xchg
punpckhdq
repz
imul
jl
jne
push
in
or
jmp
mov
test
lcall
hlt
dec
loope
stc
in
jg
sahf
stos
mov
inc
lods
push
pop
dec
adc
push
sbb
or
sub
stos
inc
sub
out
das
xor
xor
int3
and
sbb
repnz
loop
sbb
cmp
cmp
fistl
push
adc
out
fidivl
pop
and
mov
and
sub
ret
sub
or
cs
and
rorl
cld
sbb
mov
fimull
incl
cmp
lcall
in
and
out
pmuludq
lret
outsb
hlt
pushf
xchg
push
cmpsl
psubusb
adcl
mov
lret
in
je
ret
loope
or
cmp
cmp
imul
adc
hlt
inc
andl
xchg
pop
xchg
shl
sbb
stc
sbb
jge
dec
cmp
jb
sub
xchg
arpl
ja
in
jg
xchg
sbbb
movsl
push
sub
lds
mov
arpl
sti
mov
fadds
sub
jmp
add
cwtl
push
popa
or
outsb
call
mov
arpl
inc
jno
clc
cs
iret
loopne
jns
leave
dec
scas
mov
inc
pop
rep
cmp
push
or
jbe
jb
lock
cmp
lret
xor
or
cwtl
ficomps
ret
sbb
mov
cs
out
lret
adc
add
dec
int3
mov
aam
mov
adc
cmp
pop
addr16
je,pn
adc
mov
outsl
sbb
xchg
mov
jno
mov
xchg
push
jl
jbe
lahf
insl
int
in
push
xor
popf
mov
scas
insl
dec
mov
mov
jae
sub
inc
fst
push
das
xor
add
cmp
dec
push
mov
sar
daa
outsb
adc
mov
andb
lds
or
jge
push
ja
lds
mov
jnp
mov
cmp
or
or
loopne
add
pop
shll
cmc
sar
add
in
bound
out
ret
sbb
shlb
enter
and
add
cld
stos
mov
fs
leave
ret
xchg
test
or
es
xchg
mov
inc
mov
push
daa
and
out
sbb
clc
jmp
fmuls
shrl
incb
xchg
in
decl
lret
cmp
push
dec
push
mov
sahf
add
mov
dec
scas
movsb
lcall
mov
mov
inc
pop
pop
daa
out
iret
inc
popf
xchg
scas
pop
jnp
push
pushf
mov
pop
xor
cmp
xchg
xor
repnz
sbb
lods
fistl
jns
jae
xor
pusha
pop
cmc
scas
aas
lods
sahf
pop
gs
jp
xchg
push
bound
test
aas
repnz
mov
sbb
xchg
dec
insb
mov
inc
insb
scas
xchg
xchg
push
sbb
loope
inc
dec
xchg
jp
mov
mov
dec
add
inc
into
mov
scas
push
jae
push
out
xor
outsl
push
inc
test
clc
xor
dec
pop
clc
or
push
or
stc
fildl
push
jl
cmpsl
cltd
sbb
mov
and
sahf
pushf
jbe
inc
dec
pushf
mov
dec
xchg
les
xchg
test
xchg
pop
inc
xor
mov
dec
inc
inc
dec
mov
cmp
aad
into
cmp
je
lahf
mov
daa
into
cmp
out
mov
push
pop
lret
mov
or
imul
testl
fldt
mov
push
mov
mov
out
pop
movsb
stos
ficoml
sbbl
jmp
dec
int
cld
pop
mov
jg
cmp
cmc
shlb
pop
imul
js
mov
fistpll
or
fldl
jp
sbb
arpl
loop
ljmp
pop
lret
and
xchg
xchg
jns
dec
cltd
andl
adc
adc
xor
lahf
xor
bound
push
jmp
cmp
bound
xor
push
cmp
hlt
jg
mov
xlat
sub
mov
pop
push
repz
xlat
push
sbb
mov
mov
sub
mov
mov
lods
mov
loopnew
test
stos
xor
xchg
int3
jecxz
jbe
jnp
lret
ljmp
cwtl
insl
ds
in
fwait
pushf
xlat
ret
jb
inc
push
xchg
fwait
xor
in
idiv
nop
loop
js
dec
andps
inc
xor
xor
or
das
sbb
into
rcrb
and
jle
jecxz
mov
push
jl
rorb
push
sub
or
dec
inc
mov
popf
out
mov
sub
dec
xor
sub
mov
in
jl
loopne
fistpl
pop
icebp
fisubrs
ret
fwait
cwtl
and
pop
cmp
sub
inc
cmp
aas
in
dec
sub
adc
std
mov
push
xchg
pusha
xchg
cmp
mov
pusha
in
or
fcmovnu
pop
int3
or
sbb
sbb
enter
mov
arpl
loop
mov
jmp
mov
xor
mov
dec
mov
xor
loop
mov
iret
fcoml
subl
mov
in
cmp
pop
clc
dec
lcall
cli
xchg
adc
pushf
mov
pushfw
out
pushf
fsts
ss
lods
inc
mov
icebp
in
je
sbb
insl
jne
xlat
test
sub
lods
cmp
xor
in
sahf
mov
pop
mov
cmpsb
mov
cmp
adc
dec
repnz
jecxz
inc
mov
inc
test
out
xor
movsb
test
pop
jae
mov
mov
stc
lods
das
mov
out
jne
fs
mov
rcrb
and
inc
in
jnp
and
dec
in
sub
mov
pop
mov
incb
insl
imul
mov
mov
shlb
lock
add
add
cmp
fwait
mov
repz
dec
mov
cld
js
sbbb
pop
cmc
xor
repz
aam
fidivl
mov
test
mov
mov
ret
aas
jbe
test
bound
mov
dec
push
jg
cmp
test
adc
mov
or
arpl
int
fs
pop
pop
mov
dec
psadbw
daa
jae
out
pop
ljmp
sbb
adc
xchg
insl
mov
addr16
cmp
add
ljmp
xchg
sbb
scas
pop
ja
sbb
pop
lcall
cs
es
clc
xor
fnstsw
cmp
rolb
dec
int
inc
mov
inc
sub
xchg
loope
shrd
fstps
out
frstor
or
push
cmp
int
mov
int
mov
pop
daa
sbb
sbb
lods
adc
pop
aaa
xchg
lahf
push
test
mov
jb
jbe
sti
repz
addb
inc
cmp
scas
cmpsb
dec
pop
in
ss
lds
pop
hlt
cmp
fldcw
bound
insb
loopne
cwtl
cmp
pusha
scas
ficomps
xor
dec
jmp
cmc
movsb
das
sub
out
stos
dec
ss
jge
mov
mov
cmpsl
add
and
inc
xchg
popa
shll
jbe
or
std
cmovge
adc
repnz
xchg
mov
icebp
sbb
jbe
and
rolb
fisubs
jl
push
aad
xchg
iret
pop
lds
mov
idivb
xchg
push
ss
shll
cli
sbb
mulb
popa
jmp
cmc
popa
test
lods
aaa
adc
out
pop
outsl
xor
jnp
sti
sub
cld
loop
fidivs
iret
xor
out
dec
mov
fldenv
push
out
sbb
mov
inc
rcl
add
pusha
into
and
call
push
ljmp
or
jp
adc
xchg
jno
test
adc
test
sbb
jns
jbe
ret
mov
loopne
hlt
add
dec
fsubp
add
lret
mov
jns
dec
mov
jle
lock
jp
jbe
fldt
dec
pop
or
loope
add
jecxz
rolb
mov
int3
mov
mov
lcall
test
popf
inc
neg
shll
lea
movsb
xor
into
push
cmpsb
mov
fwait
into
mov
and
test
ret
lock
arpl
mov
and
and
push
jmp
mov
mov
mov
sub
sub
in
pop
data16
mov
lds
iret
popa
or
outsl
sbb
fldcw
mov
mov
push
loopne
sahf
sbbb
in
les
loopne
sbb
mov
iret
xchg
jge
push
popf
pop
imul
das
mov
pop
in
outsl
insb
mov
out
pop
pop
fwait
pop
mov
adc
and
sbb
inc
mov
and
rcrl
lret
mov
mov
cli
push
push
in
or
inc
jp
shrl
aas
out
testb
ucomiss
xchg
pop
out
pop
mov
sahf
aam
or
daa
and
sbb
cli
test
popa
out
xchg
mov
popa
cs
repz
jb
push
gs
or
push
bound
jecxz
and
scas
jecxz
mov
dec
into
lcall
lret
std
faddp
pop
and
xor
xchg
or
and
mov
loop
jns
arpl
loopew
xchg
or
add
stos
andl
push
adc
std
adc
dec
xchg
jb
push
fildl
cmp
outsb
insl
adc
shr
jp
lea
mov
adc
push
mov
pop
xlat
inc
stos
insb
and
jns
imul
call
cmp
repz
adc
xchg
mov
ds
jp
adc
add
cmpsb
dec
mov
mov
imul
lcall
or
dec
fiaddl
out
ja
pop
int
arpl
fdivl
ljmp
into
sarb
jno
push
add
insl
aad
jb
nopl
dec
out
adc
dec
xchg
mov
mov
inc
mov
xor
pop
push
mov
inc
lahf
and
xor
fwait
js
and
jae
ljmp
stc
push
pop
or
lods
dec
jns
xchg
fmuls
sbb
cltd
pushf
xchg
movsl
pop
lret
xor
cmp
out
cmovs
fidivrl
nop
lret
cmpl
es
testl
out
mov
push
fs
in
inc
pop
lods
sub
in
ja
jne
jns
and
push
test
in
dec
jge
mov
js
ret
dec
dec
insb
les
mov
cmp
jge
stos
pop
add
sbb
ds
out
scas
das
mov
inc
insl
popf
mov
push
shll
lcall
adc
push
and
sti
loope
mov
inc
jne
push
pop
cmpsl
mov
sbb
orb
test
push
or
adcl
or
fwait
jns
cmp
lcall
ror
mov
outsl
add
xchg
out
shll
pop
mov
movsb
pop
and
into
call
idiv
xorl
lahf
cld
aaa
pop
cmp
xchg
adc
mov
fiaddl
insb
adc
pop
xchg
mov
test
xchg
xlat
push
aaa
adc
push
in
jmp
data16
mov
ljmp
pushf
arpl
pop
xchg
clc
addr16
outsb
mov
fsubl
or
stos
xchg
jp
arpl
popa
mov
inc
mov
cmpsl
dec
pop
sub
int3
pop
add
pusha
and
insb
xchg
lds
sub
push
ja
cmp
leave
cltd
repnz
orl
mov
fcomps
in
mov
inc
scas
scas
dec
cld
addr16
scas
dec
lock
outsb
mov
xor
int3
test
in
and
dec
mov
outsl
dec
fstl
lahf
cs
imul
je
lcall
leave
ss
cmp
rorl
loop
stos
ret
fsubrs
insl
xchg
xchg
or
jne
imul
pusha
pop
shld
cs
inc
lahf
fldl
jbe
clc
add
push
fstp
sub
lea
lahf
cmp
int3
dec
pop
xor
inc
pop
jl
sbb
adc
fs
bound
ret
add
pop
or
jecxz
fs
xor
inc
fldenv
cmp
sti
add
push
movsb
loopne
mov
movsl
dec
ficompl
mov
lea
jle
clc
js
cmp
fisubl
aaa
jo
mov
ss
mov
pop
sbb
aas
ficoml
test
sarl
adc
or
mov
mov
insb
ror
icebp
xchg
fmuls
and
es
pop
adc
fstl
fmull
fmull
push
mov
shll
jle
int3
pop
and
dec
jno
into
in
mov
lods
mul
mov
clc
in
jl
movsb
xor
je
cmp
sbb
scas
in
xchg
fists
aaa
decl
shlb
sub
lods
push
lods
add
sbb
popf
into
mov
cmpsl
adc
imul
inc
mov
test
ja
loope
jo
xlat
sbb
add
pop
dec
jo
sti
daa
pop
xchg
fcoml
out
in
xchg
repnz
scas
pop
shl
push
andb
test
or
xor
xchg
cmp
cld
lods
imul
test
jno
int3
ja
pop
loope
adcl
stos
and
pop
test
in
js
subl
xchg
test
dec
mov
pop
cwtl
mov
test
pusha
loope
aad
cmp
lahf
fdiv
adc
adc
adcb
mov
leave
fwait
xor
xor
cmp
jne
lcall
inc
shlb
and
cmpsb
enter
xchg
xchg
xchg
jb
add
mov
pop
mov
ds
jmp
fs
jl
adc
add
ja
rcrb
repnz
loopne
es
jno
push
xor
cmp
gs
jae
jmp
and
fs
int
rcll
pop
xor
cmp
xchg
jge
icebp
in
jo
je
push
lods
loopne
std
sub
jnp
in
sbb
adc
enter
repz
add
sbb
das
or
mov
push
mov
setne
imul
js
mov
aam
fisttpll
push
jne
jbe
xor
or
xor
mov
pop
sahf
push
call
mov
pop
mov
les
xlat
cmp
xor
outsl
aaa
and
mov
dec
adc
and
push
dec
js
adc
sbb
test
sub
stos
pop
enter
out
jno
lret
sub
sub
xor
clc
ffreep
jbe
out
inc
imul
leave
orl
push
dec
mov
ja
add
xlat
push
mov
test
dec
mov
cmp
call
push
add
mov
sbb
sub
shl
loope
fwait
sbb
sbb
mov
mov
push
sub
lea
es
mov
negl
jg
imul
imul
and
xchg
outsb
pop
lret
int3
or
mov
scas
inc
sbb
test
and
jle
adc
pushf
cmpsl
data16
mov
or
add
movups
mov
fisubl
push
mov
pop
push
in
dec
adc
fcmovb
sbb
aam
xchg
push
jne
sbb
jmp
sbb
cmp
jbe
cwtl
xchg
fs
pop
addr16
cwtl
test
repnz
shll
sti
fstpt
adc
mov
inc
mov
inc
es
and
cmc
mov
jg
and
cli
loopne
mov
leave
mov
fdivp
pop
pop
jne
xchg
add
jecxz
js
sub
jp
xchg
sub
push
xchg
sbb
mov
in
sbb
test
mov
aad
cmpsl
mov
pop
scas
iret
sbb
lret
test
nop
xlat
cmp
lcall
and
sbb
data16
and
mov
fmull
aaa
nop
dec
cmp
test
nop
xor
lcall
pop
fucomp
setae
mov
out
nop
sbb
inc
add
sbb
lods
mov
ss
sub
push
in
outsb
sbb
dec
xchg
pop
inc
push
dec
mov
out
hlt
and
jns
fldcw
mov
sbb
scas
xchg
test
lods
movsb
test
dec
dec
nop
mov
jecxz
and
xchg
fnstenv
lahf
daa
into
push
sub
mov
or
into
jl
or
mov
lds
pop
es
dec
add
jno
lcall
pop
cs
in
dec
idivl
add
sti
push
xor
lock
xchg
jns
dec
mov
ret
lock
std
lcall
gs
adc
arpl
adc
icebp
int3
popa
pop
add
and
std
mov
sub
push
pop
xor
pop
dec
pop
cmc
gs
loope
xor
test
ret
add
mov
push
jb
dec
aam
repz
sbb
fdivl
fiaddl
jne
cmp
xchg
xor
or
lock
ret
xchg
sub
lds
int3
out
jge
xor
dec
ss
adc
push
mov
or
outsb
in
inc
fildl
icebp
cmp
repnz
push
push
push
add
inc
xchg
adc
movsb
adc
xchg
cwtl
lea
jmp
sbb
fistpll
push
in
xchg
hlt
int
cmp
idiv
andl
xchg
or
xchg
cwtl
cmp
test
cmp
mov
int
mov
and
mov
test
pushf
enter
xchg
xchg
ds
pushf
insl
sub
roll
add
mov
or
js
push
mov
mov
out
int3
push
sbbb
stos
sbb
and
test
fisubrs
cli
xor
mov
les
clc
cmp
test
add
xor
xor
adc
jp
mov
push
sub
les
dec
push
fiadds
scas
mov
mov
out
imul
xchg
dec
shrl
fildl
roll
sbb
jb
lret
ret
insb
add
xor
cmp
xor
and
or
sub
xchg
aaa
add
and
add
pop
rcl
push
mov
mov
aas
mov
xor
dec
xor
mov
and
sbb
sahf
out
inc
addr16
xchg
push
fcmovnbe
lahf
xchg
or
leave
stos
and
lods
fbld
mov
xor
pop
ret
xor
das
xchg
shlb
rorl
sbb
stos
pop
add
stos
add
xor
es
aas
xchg
dec
add
adc
out
mov
push
shll
cmpsl
or
imul
mov
pop
addr16
push
xchg
cmpsb
dec
shl
std
mov
and
mov
or
xchg
fldl
lock
test
movsb
and
insb
test
fstpl
xchg
cs
push
fsubl
int
adc
dec
or
jb
adc
sbb
xor
int3
or
pushf
ficompl
sub
lahf
lret
lret
xor
arpl
or
add
xor
xchg
ds
jne
clc
jge
xchg
stc
jno
xchg
adc
dec
xor
inc
xor
roll
sbb
and
pop
mov
pop
and
cmpsb
xor
es
shrl
fldcw
test
and
addl
pop
jne
lock
popa
pop
jge
loop
cli
imul
push
jbe
subl
mov
dec
pushf
lcall
push
push
mov
shll
and
lods
inc
push
adc
cmp
dec
repnz
inc
testb
xchg
lahf
hlt
pop
xchg
insl
and
push
cmp
or
cwtl
popf
dec
xor
sbb
jb
push
xchg
shl
test
movsb
leave
jno
daa
inc
shrl
mov
and
clc
xor
adc
out
inc
call
jle
and
push
cli
push
js
pop
or
cmp
pop
sarb
xor
dec
or
mov
jae
addr16
xor
jae
ret
jle
decl
popf
mov
cli
pop
sbb
mov
push
add
fcomip
xchg
xchg
sbb
add
and
jae
jae
inc
adc
imul
addr16
cld
push
ss
das
pop
scas
outsl
mov
pusha
and
loopne
inc
cmp
das
sbbb
int3
mov
out
pop
inc
cmp
dec
sahf
stos
daa
dec
aam
stc
push
xlat
lock
mov
inc
and
and
push
enter
xchg
loopne
lea
mov
sbb
adc
lea
mov
or
outsb
insb
jo
cli
loope
arpl
mov
push
call
inc
popa
xlat
jecxz
dec
rcrb
cmpsl
xor
mull
ljmp
jle
sbb
dec
mov
xlat
roll
sub
push
sub
mov
mov
xchg
leave
sbb
cmc
or
imul
cmp
out
sub
sti
inc
lahf
sub
jae
and
jp
imul
jns
cmp
daa
push
sbb
dec
fcomip
and
in
outsl
ljmp
xchg
std
xchg
ds
dec
adc
pop
hlt
repz
imul
ficompl
stos
in
adc
sub
loopne
push
xchg
mov
call
add
xor
faddp
mov
lods
and
dec
test
xor
insb
lds
jmp
inc
mov
mov
dec
cld
fdivl
push
fsubl
push
loop
xlat
pop
sub
out
adc
out
or
cmp
cmp
xor
test
imul
xor
enter
pop
xor
pop
mov
sbb
das
fwait
xchg
and
cmp
imull
loope
lds
pop
mov
std
mov
mov
out
icebp
sbb
add
nop
shlb
or
jg
mov
popa
aas
test
js
mov
je
xchg
pop
ja
adcl
imul
sbb
shlb
push
pop
mov
jge
jl
dec
roll
xor
pop
pop
jae
push
jns
movsl
ljmp
imul
mov
mov
push
das
icebp
mov
aad
or
inc
sbb
cli
xchg
pop
add
xlat
notb
xchg
push
outsl
stos
jns
ds
cmp
call
inc
lock
dec
push
in
dec
add
outsl
or
xchg
faddp
ss
pop
jo
adc
add
push
sbb
ja
jbe
mov
lret
fdivr
cmpsb
pushw
jae
and
pusha
or
push
ja
or
mov
movsb
sbb
adc
gs
mov
clc
insb
mov
movsb
jmp
ljmp
inc
inc
imul
add
mov
adc
mov
out
add
sarl
sbb
pushf
mov
sti
movsl
sub
in
xchg
mov
mov
es
stos
inc
pop
sub
call
push
into
xchg
cwtl
mov
scas
lret
jmp
cmp
insl
lahf
shrl
out
xor
hlt
add
xor
popa
dec
pop
movsb
adc
xlat
lret
cmp
repnz
mov
jg
mov
dec
mov
out
shll
cli
out
gs
mov
in
add
jle
fisubrl
data16
nop
push
jl
mov
fisubs
pop
andb
add
int
mov
jb
int
dec
and
addr16
mov
cli
test
xchg
dec
jo
push
scas
xchg
test
sbb
pop
sbb
xchg
jmp
aam
inc
mov
loop
lods
lods
repnz
es
test
ss
push
cli
add
and
icebp
mov
cmp
les
and
sub
add
jge
mov
inc
push
sub
inc
inc
in
pop
loope
js
ss
and
xchg
enter
inc
sub
leave
dec
aas
in
pop
pop
sbb
push
xor
xchg
mov
mov
cmp
mov
push
das
sti
pushf
push
inc
add
adc
test
sub
cmp
push
jnp
cwtl
xchg
xlat
loop
nopw
cmp
jns
hlt
cmp
gs
pushf
clc
jnp
repnz
add
arpl
mov
addr16
xchg
fwait
jge
fwait
cmc
sub
ljmp
ret
or
xchg
movl
sub
xchg
insb
and
xorb
cmpsl
cmc
jbe
xlat
and
push
mul
dec
pop
jns
mov
or
sub
hlt
insb
sub
push
pop
sub
pop
pop
cmp
scas
lret
scas
push
add
pop
je
adc
add
insl
mov
mov
mov
nop
stos
pop
popa
cwtl
dec
fiadds
out
dec
sbb
push
gs
pop
sub
inc
sbb
xchg
lock
add
fwait
xchg
pop
icebp
outsl
aad
arpl
mov
das
push
popf
jmp
cmp
imul
ror
dec
sub
aas
xlat
add
ljmp
xchg
or
std
imul
fidivrs
or
mov
or
test
cmp
fwait
ja
leave
std
push
mov
and
loope
sbbl
or
outsl
loope
out
fldenv
mov
imul
cmpsb
add
mov
xor
cltd
pop
stc
mov
jmp
mov
loopne
jmp
scas
in
out
je
test
dec
add
repz
and
movsb
and
jbe
roll
xor
loopne
jns
push
push
xor
fbld
adc
or
mov
movsb
or
sub
test
shll
cmc
je
bound
insl
nop
push
and
or
mov
cwtl
sbb
cmp
adc
scas
lock
sub
lock
lahf
sub
js
mov
inc
adc
rcrb
mov
add
jle
mov
add
frstor
mov
loopne
or
inc
movsl
idivb
xchg
dec
clc
add
popl
aaa
pop
imul
arpl
xabort
ds
fs
xchg
and
lcall
int
jmp
cmp
ss
adc
xor
fdivrs
mov
pop
and
sub
mov
cmp
jg
adc
pop
sbb
into
out
hlt
pusha
in
aad
xchg
inc
push
xchg
sub
add
cmp
in
inc
adc
adc
xor
xchg
sbbb
leave
popf
mov
and
ss
mov
mov
lret
lret
jae
lods
mov
stc
arpl
cmp
adc
arpl
mov
mov
loop
int3
rcll
popf
mov
adc
jle
js
mov
popf
test
push
jnp
or
and
and
cli
inc
in
aad
add
inc
call
mov
xchg
test
leave
outsl
lea
stos
lea
sub
pop
movsb
in
cmpsl
aad
jno
push
xchg
or
sbb
dec
pop
fs
lock
or
adc
repz
mov
mov
loope
mov
xchg
fistpl
fisubl
xchg
jbe
in
bswap
loopne
icebp
jae
cltd
sbb
lcall
adc
mov
mov
dec
popl
std
or
iret
jp
addr16
jnp
repnz
cmp
pop
xchg
movsl
mov
aad
fldt
xchg
mov
test
setns
push
push
sbb
dec
push
push
dec
loopne
adc
mov
ficoms
arpl
and
push
mov
mov
jns
cmp
push
clc
inc
jp
mov
jno
add
scas
daa
lds
cli
add
mov
sub
repz
xchg
pop
mov
les
sti
mov
stos
pop
jae
jns
fldt
mov
or
rcr
mov
sbb
jb
insb
into
test
push
xchg
cmpsb
pop
mov
adc
xor
xchg
aam
xlat
fwait
push
pushf
cmpb
insb
repnz
dec
xor
fwait
into
in
cmp
add
lds
fcomps
mov
imul
mov
mov
es
and
ret
faddl
dec
mov
fisubrs
cli
mov
fucomp
jg
jle
outsl
push
jnp
loopne
sti
enter
sahf
aas
xchg
insb
lods
xorb
xor
pushf
jecxz
xor
xchg
iret
mov
xor
fnop
jle
inc
test
xchg
mov
or
sub
sub
mov
push
cmp
pop
ret
push
cltd
fisttpl
std
jg
ss
sbb
repnz
mov
pop
mov
inc
outsl
out
outsb
adc
push
sbb
repz
imul
push
fcomps
sub
icebp
adc
stos
stos
in
stc
mov
pusha
data16
arpl
sub
xchg
inc
jg
or
push
xorb
fwait
jle
pop
aaa
dec
jmp
pop
mov
mov
loope
cmp
fdivrs
push
mov
xchg
das
dec
negb
sub
cmp
outsb
pop
jno
roll
out
push
xchg
or
xchg
insl
pusha
in
xchg
lret
stos
mov
fcompl
sbb
jne
and
popa
enter
jg
dec
test
or
cs
cmc
sahf
sub
pop
sbbb
nop
dec
mov
fidivs
inc
sub
adc
loope
or
cld
clc
test
push
and
mov
das
dec
dec
fimuls
std
push
fwait
shrb
fsubs
mov
xchg
bound
xchg
sbb
fildl
mov
sub
lcall
add
lcall
aam
je
pop
loopne
lock
dec
jmp
sbb
xchg
sub
adcb
push
cli
dec
imul
cmp
pushf
adc
fidivrl
or
xlat
loopne
in
int
aad
lret
je
push
sbb
dec
icebp
pop
pusha
or
mov
dec
popa
mov
sbb
movsl
adc
scas
inc
int3
cmp
insl
push
mov
push
pop
scas
test
pop
dec
insl
lods
mov
mov
lahf
aam
outsl
lods
rcrb
mov
sbb
sub
sbb
pop
adc
loope
fbld
clc
js
add
or
adc
pop
dec
and
cmpsl
mov
push
sahf
fistpll
pop
jb
sbb
pop
sbb
pop
das
inc
test
sub
lea
jle
pop
popa
lahf
xor
pop
xchg
xchg
testl
ss
xchg
test
sub
inc
out
pop
stos
jge
and
mov
and
cli
mov
pop
outsb
repnz
jecxz
dec
scas
loop
jle
jmp
outsl
or
inc
inc
sti
popa
ljmp
mov
jns
or
lock
cs
fiaddl
jo
sub
mov
popa
pop
fwait
out
loop
inc
jns
das
lahf
out
lret
xchg
sub
nop
and
cwtl
sub
push
sbb
lods
imul
movsb
sarb
mov
in
ret
sahf
cld
cmpsl
adc
out
scas
scas
mov
push
stc
xor
pop
out
fisubl
jge
add
mov
out
push
inc
hlt
dec
scas
jnp
js,pn
ret
int
inc
sbb
add
andb
fiadds
hlt
shufps
cwtl
sbb
dec
daa
lods
push
xchg
in
rorb
pop
sbb
inc
xchg
push
push
mov
clc
fistpl
inc
jg
aam
inc
or
mov
fwait
nop
push
adc
xor
cld
icebp
adc
dec
arpl
divl
mov
les
dec
xchg
nop
jmp
mulb
loop
dec
xchg
push
sarb
ss
in
hlt
inc
dec
xchg
dec
fisubrl
xchg
cli
mov
cmp
dec
xor
leave
mov
xlat
ljmp
stc
or
or
dec
jg
push
divl
inc
mull
xchg
repz
jmp
ljmp
loopne
xchg
xor
mov
fwait
push
out
addr16
or
adc
mov
or
movsl
gs
jb
mov
in
sbb
pusha
add
cli
inc
fdiv
test
fcompl
pusha
scas
nop
arpl
int3
filds
push
pop
add
aad
jl
mov
call
push
mov
inc
stc
mov
add
int3
in
lods
pop
ret
or
loop
ds
aaa
mov
mov
mov
iret
pop
sarb
mov
jns
pop
xor
push
fwait
cmp
jnp
xchg
es
dec
mov
jae
push
xor
sti
dec
sub
jecxz
or
push
dec
cmp
jbe
push
mov
cmp
jg
scas
pop
out
shrl
imul
lahf
cmp
repz
ficompl
stos
stc
jns
sub
xchg
lods
inc
incl
push
lcall
mov
iret
fsubl
mov
sahf
test
and
outsl
or
or
jecxz
sub
clc
and
test
ficoms
mov
and
sbb
sbbw
das
jb
pop
push
es
repnz
daa
push
pop
sbb
pop
loop
inc
push
jl
fs
jl
xchg
push
adc
shl
iret
mov
xorb
shll
pop
pop
cmp
xchg
xchg
pop
test
pop
leave
fadd
mov
mov
dec
stc
ds
aaa
mov
jno
ja
jg
stos
int
xor
xchg
out
jo
mov
lahf
sub
ficomps
bound
mov
sti
aad
cltd
iret
insb
cmpsb
sbb
clc
daa
xor
mov
mov
mov
enter
jno
pop
clc
xchg
xlat
inc
data16
ja
jecxz
dec
sub
or
mov
cmc
pop
clc
in
jae
jno
stc
pop
lret
pop
fldt
xor
in
add
jo
aas
push
xor
adc
clc
mov
mov
cmp
push
xlat
xor
je
mov
cli
aad
xchg
adc
inc
ds
and
lret
in
inc
and
mov
in
xchg
mov
outsl
out
pop
add
sub
mov
imul
in
inc
mov
mov
mov
out
mov
fs
incb
fld
inc
mov
test
in
bound
lods
cmpsl
aad
ja
popa
ficoml
loopne
dec
jns
shl
inc
gs
iret
ja
cmpsb
jae
imul
cmp
mov
out
push
sahf
xor
and
call
xchg
cltd
sub
movsl
lds
xchg
mov
stc
rorb
jbe
pop
insb
push
hlt
and
les
dec
in
fildl
pop
idivl
sarb
and
mov
fcoms
cmp
fldcw
cmp
stos
mov
cmp
test
icebp
popf
mov
jbe
addb
lods
lahf
sub
repnz
loop
xor
mov
out
shrb
cmp
and
xor
adc
mov
mov
pop
cld
pop
fs
jae
rolb
adc
popl
sub
cwtl
jge
cmp
add
test
and
push
mov
imul
jbe
inc
adc
fs
cmp
dec
push
repnz
and
adc
inc
xor
leave
fwait
jg
sbb
pop
enter
adc
sub
cmp
clc
repz
popl
fnstcw
fs
jl
loopne
or
adc
dec
dec
inc
sub
out
xlat
in
div
jo
int
jo
or
or
and
sub
sbb
outsl
pop
cmp
mov
add
dec
filds
jbe
vxorps
inc
mov
pusha
xchg
sbb
mov
add
clc
repz
dec
aam
in
in
lret
and
movsb
incb
mov
imull
bound
test
or
lahf
int3
lret
cltd
mov
rorb
lahf
das
jmp
mov
sahf
mov
mov
xchg
jge
sbb
repz
in
mov
push
lret
sbb
stos
and
and
test
int
add
sub
push
or
fmulp
andb
dec
popf
jg
movsl
add
fcoml
sbb
mov
popf
jbe
pop
rcl
dec
adc
jno
shll
sti
jl
lea
pop
xor
addr16
mov
int3
ret
jge
popf
mov
add
stos
fisttpll
and
lods
fwait
ret
rol
fs
adc
arpl
cmp
adc
out
mov
int
inc
pop
cmp
ljmp
pusha
outsl
xor
push
sub
daa
lret
mov
sub
movsb
aaa
xor
pop
jmp
out
adc
mov
into
mov
bound
push
adc
in
jl
push
fimuls
xor
or
das
and
lret
movsb
mov
stos
enter
adc
pop
xchg
lods
test
dec
and
cmp
pop
aam
jno
aad
add
jae
int3
gs
cmp
je
push
nop
fwait
lds
sti
ret
outsb
mov
orl
sbb
pop
push
int3
pop
in
pop
into
hlt
sub
test
je
jg
and
sbb
aad
dec
test
ss
test
mov
dec
or
mov
xchg
and
cltd
add
jg
in
mov
leave
jne
shl
les
mov
mov
clc
xchg
scas
fucomip
jmp
daa
cmpsl
jns
ss
data16
inc
imul
imul
mov
dec
jno
mov
xchg
je
sbb
add
jecxz
andl
mov
pop
inc
push
mov
lret
repz
addl
fbstp
cmpsb
inc
and
cmpb
xchg
or
mov
jnp
das
push
mov
pop
out
in
sarb
xchg
xor
inc
push
mov
mov
jo
pop
stc
xor
negl
test
mov
cld
ss
jae
and
popa
sbb
loop
push
mov
sub
out
mov
dec
in
push
pop
mov
mov
jo
jge
push
xor
dec
or
adc
loopne
and
mov
pushf
add
dec
push
push
inc
popf
rolb
std
or
cmp
rcl
mov
into
sbb
rclb
mov
dec
aaa
call
stc
std
push
mov
les
sbb
push
and
push
out
sbbb
mov
mov
xchg
push
mov
lds
sahf
and
mov
and
icebp
or
icebp
mov
cltd
fwait
push
hlt
cmpsl
mov
push
dec
push
out
mov
mov
push
fs
and
or
pop
mov
inc
xor
subb
add
cmp
outsl
andb
mov
push
sub
adc
inc
adc
test
outsb
scas
dec
cmp
or
loopne
or
fwait
pop
shl
add
pop
rcll
and
fs
movsl
nop
xchg
jmp
into
lret
add
dec
cmpsb
shrb
out
pop
adc
dec
or
fsub
in
cmp
fdivs
push
add
lea
jne
and
xchg
mov
xor
test
stos
adc
adc
inc
xchg
sti
jbe
jmp
decb
sahf
jbe
mov
sar
dec
enter
xor
sub
xlat
int3
shlb
sbb
imul
adc
dec
mov
out
inc
jle
sahf
std
ja
andb
push
add
push
test
gs
pusha
and
sti
stos
lock
iret
int3
mov
hlt
inc
pop
or
push
addr16
sub
ret
ret
or
int
pop
sbb
and
sar
push
xchg
mov
xor
adc
jb
cmpsb
add
loope
mov
mov
inc
test
dec
inc
sbb
mov
and
or
mov
sbb
mov
jo
int
dec
sub
in
xor
sbb
fcos
jnp
test
mov
dec
pop
jnp
stos
repz
mov
jle
into
ja
cli
cmp
cmpsb
sbb
sub
or
bound
mov
std
ret
inc
push
inc
sub
fucomp
mov
sub
sahf
popa
mov
xlat
pop
mov
repz
popa
adc
push
xlat
les
hlt
sub
mov
lods
out
jl
jecxz
sbb
pop
fsubl
mov
xor
sub
aam
jp
sub
adc
int
fsubs
mov
cmpsl
popf
test
sti
aaa
loope
pop
call
sbb
mov
xor
into
lods
ds
pop
push
push
jb
xor
cmp
xor
mov
push
jne
rorl
mov
pop
xorb
jp
cmpb
testb
mov
inc
test
ja
push
out
lods
inc
xor
jmp
es
addb
lock
jne
push
push
icebp
pop
xlat
scas
ds
in
cmp
cmp
cmp
je
or
repz
jnp
andl
inc
push
pop
or
jae
popa
pop
ljmp
push
pushf
jp
sub
lret
mov
cmp
daa
xlat
shr
icebp
dec
mov
into
add
mov
mov
jl
pusha
add
sub
push
call
pop
in
push
repz
outsb
shll
adc
mov
fistpl
sbb
scas
mov
test
mov
push
xor
ja
dec
jno
adc
pushf
push
ljmp
and
adc
stc
int3
in
rcrb
ret
pop
subl
xchg
ljmp
xchg
scas
pop
or
xchg
push
xor
cmc
arpl
sub
lea
or
stos
lods
dec
test
xor
mov
mov
sahf
enter
inc
jb
sti
add
mov
mov
bound
fwait
inc
sub
push
das
das
pop
sbb
stos
jo
loop
mov
mov
aas
pop
lea
mov
ret
xchg
pop
sbbl
xchg
cmpsl
add
test
jmp
mov
and
sbb
or
dec
mov
sbb
sub
or
and
addr16
loop
adc
and
push
int
push
jno
pop
mov
pop
loope
mov
fisubrl
loop
cs
mov
pop
std
test
fs
insl
int
mov
or
shll
jl
cwtl
mov
mov
shl
xor
pop
push
insl
or
jnp
push
sbb
sub
cmpsb
popf
js
outsl
dec
jae
insb
or
cmpsb
xchg
mov
movsb
cmp
into
xchg
and
popa
push
mov
xor
cmp
cmp
and
fdivrs
std
shlb
inc
mov
or
and
add
inc
repnz
jl
jb
mov
dec
aam
pop
sub
xlat
pop
jne
and
stc
push
jo
inc
out
sbb
pop
lahf
cmp
and
jecxz
insb
pop
nop
mov
mov
jl
and
and
out
xchg
fs
mov
clc
scas
or
in
push
jp
fstpt
es
ficoms
movsb
leave
ffreep
mov
test
jnp
shr
scas
lock
inc
scas
inc
push
dec
cltd
mov
add
out
jo
inc
cmp
shlb
test
mov
lods
sub
adc
aas
xchg
dec
aam
inc
sbb
test
dec
or
ss
dec
push
xor
add
inc
stos
repz
pop
xor
subl
pop
mov
es
jecxz
xor
mov
push
ja
sti
xor
jb
mov
pop
gs
adc
aaa
cmp
ds
mov
imul
mov
hlt
push
pusha
push
dec
mov
fucomi
mov
into
adc
xorb
push
xor
cmp
pop
inc
push
lock
aad
dec
cld
gs
sbb
add
xchg
leave
cmpsb
rcr
mov
aaa
push
loope
mov
call
aas
mov
test
out
call
pop
icebp
mov
cld
lods
dec
xchg
pop
fnstsw
push
cs
aaa
add
xchg
or
lret
mov
mov
shr
dec
xor
xchg
sub
test
aad
xchg
sub
imul
push
mov
or
add
rcrb
ja
imul
sub
pop
jae
imul
inc
adc
push
mov
xchg
movsb
fadds
hlt
out
cmp
mov
inc
push
xor
scas
sbb
daa
sub
fmull
mov
subl
sbb
push
mov
add
scas
mov
addr16
pop
add
cmp
das
pop
mov
pop
jmp
jmp
mov
mov
lret
stos
mov
pop
outsb
rcr
adc
xchg
cmp
shll
lret
jmp
sbb
pop
das
pop
jg
pop
lds
xchg
stc
inc
rclb
aad
pop
test
push
lcall
or
cmc
lret
lock
and
push
jge
scas
fwait
mov
cs
add
adc
test
push
das
sub
or
cwtl
std
repz
sbb
in
and
fwait
adc
std
mov
xchg
insb
cwtl
or
jne
nop
les
push
int
mov
pop
es
dec
xor
iret
rcll
pop
pop
repz
adc
sarl
scas
out
lds
rclb
add
sbb
xor
les
shrb
pushf
sbb
jae
or
bound
sub
outsl
popw
push
mov
mov
das
push
stos
sbb
scas
add
or
insb
enter
pop
repnz
xchg
jp
fwait
sub
inc
ret
sub
ljmp
clc
bound
outsb
in
jb
hlt
icebp
jmp
mov
jp
push
sub
cmp
jne
outsb
dec
push
or
push
fisttps
pop
mov
and
std
int3
ljmp
psrld
sub
sub
dec
sub
icebp
adc
ret
bound
repz
cmp
lds
in
jmp
pushf
pop
out
push
pop
pop
fildl
mov
push
fcomip
add
mov
xchg
ds
repz
pop
clc
pop
into
push
mov
inc
rcl
mov
dec
je
sahf
inc
data16
faddl
les
in
or
aaa
sub
in
sbb
lea
bound
ror
sub
in
cmpsb
dec
bnd
inc
dec
pop
je
repz
rol
sbb
mov
fs
adc
jecxz
mov
ss
sub
sub
cs
daa
jne
insl
nop
mov
cmp
stc
jnp
movsb
scas
cmp
mov
into
call
add
push
jmp
add
subb
add
movsb
mov
add
mov
sti
mov
nop
les
std
or
test
btr
sub
xchg
rcrb
mov
mov
icebp
xchg
loope
push
xchg
dec
in
mov
push
outsl
negb
adc
notl
out
or
es
sub
sub
and
clc
push
ret
aam
icebp
mov
idivl
out
xchg
push
aam
xor
xchg
push
xchg
xor
fsts
push
xor
testb
std
jb
jae
jns
lcall
stc
mov
imul
shll
in
je
sbb
fldl
bound
pop
dec
jo
lds
mov
stos
insl
add
pop
xor
into
nop
dec
imul
fmull
fdivrs
xor
jmp
adc
cmp
xchg
dec
mov
pop
push
lds
std
or
fcom
add
jo
cwtl
xor
add
adc
int
insb
shll
cmp
ss
jbe
inc
cmp
xchg
fsts
outsl
cs
in
not
leave
int
sti
iret
test
push
jmp
pop
push
fmull
and
mov
lock
dec
pop
sbb
push
icebp
repnz
mov
and
add
adc
mov
pusha
mov
xchg
outsb
shll
repz
test
lret
inc
enter
les
inc
daa
notl
imul
push
insl
sbb
sbb
jno
mov
cmpb
fldl
call
adc
pop
mov
dec
pop
cmp
popf
daa
lods
popl
outsb
popf
outsl
xor
push
jg
stos
xor
pop
mov
pop
into
stos
pop
pusha
roll
pop
arpl
in
pop
mov
mov
cli
or
jmp
pop
mov
pop
dec
cmp
fnstenv
outsb
into
mov
dec
int
je
in
mov
clc
push
pop
rcll
cmpb
sbb
daa
psubsb
and
ret
xchg
push
mov
ljmp
or
cltd
lods
push
mov
xlat
cli
lds
push
arpl
mov
lea
fildll
bound
in
xor
mov
lahf
mov
fadds
cmp
mov
mov
xchg
mov
sub
mov
inc
jge
lcall
in
call
jbe
ljmp
add
fwait
movb
cmc
test
mov
push
pop
arpl
into
lret
outsl
lcall
mov
movsb
push
fidivl
fnsave
mull
sbb
mov
mov
jnp
jno
int3
dec
addb
sub
or
rol
mov
push
push
es
lea
in
inc
insb
xor
fs
decl
orl
mov
sbb
inc
cmp
push
gs
add
mov
xor
cmp
mov
ljmp
mov
inc
mov
addr16
push
mov
add
push
icebp
aaa
pop
daa
dec
insl
xor
push
pop
loope
jns
bnd
std
fnsave
aas
ret
dec
cmp
push
mov
mov
jno
mov
cs
jbe
xor
adc
pop
andl
movsb
jne
mov
iret
inc
push
pop
cld
inc
jmp
das
std
adc
jne
jp
and
ljmp
test
icebp
adc
mov
inc
rcrb
arpl
out
movsl
lock
test
adc
add
jl
movsb
pop
das
adc
into
call
adc
mov
pop
sahf
repz
rorl
in
shl
push
jbe
cs
lds
cmp
xchg
sahf
xchg
xchg
movsb
mov
fdivs
popaw
fistpll
inc
jne
aaa
adc
mov
add
mov
and
push
aas
sarb
mov
inc
test
movsl
cli
push
mov
xchg
loop
insl
jmp
imulb
push
loope
mov
daa
ljmp
cmp
xchg
fadds
inc
fsubrs
jo
notb
rcl
sar
jmp
test
fisttpl
fildl
out
add
lcall
lock
fisttpll
mov
mov
adc
mov
and
and
into
mov
fs
xor
pushf
pop
mov
sub
or
inc
jno
enter
loop
repz
pop
jae
jle
adc
flds
mov
aad
cmpsb
sub
andb
xor
addr16
add
fidivl
sbb
xchg
lcall
fstl
ret
add
or
mov
pop
inc
lret
test
adc
push
popa
push
int
lea
test
jo
fs
es
pop
pop
mov
iret
dec
call
add
imul
add
cltd
push
pop
xor
push
or
cmp
repz
outsb
mov
repnz
xchg
ja
inc
fmul
scas
loope
push
out
mov
je
imul
lock
adc
xchg
sbbb
sbb
and
inc
cli
out
mov
xchg
sahf
test
leave
popf
dec
stc
cmpsl
cmpsl
pop
pusha
outsl
scas
jp
cmc
test
mov
inc
sbb
sbb
test
leave
in
jge
mov
pop
fidivl
ficomps
add
xor
ja
add
push
dec
repnz
mov
scas
pusha
jns
add
scas
jge
stos
outsl
xor
add
insl
gs
ljmp
mov
outsl
and
cmc
jge
and
dec
repz
shl
icebp
iret
pusha
pop
push
pop
stos
adc
insl
xchg
push
pop
jo
pop
or
xchg
loope
aad
jle
in
fwait
addb
dec
dec
pop
mov
dec
mov
mov
dec
add
and
test
cmpsb
shr
add
mov
in
jns
fcmovne
imul
rcl
iret
data16
inc
daa
dec
xchg
add
pop
clc
adc
jmp
mov
xchg
sarl
mov
popf
sti
aad
xchg
dec
xchg
jmp
cmp
pop
fucomip
fwait
bound
mov
xchg
test
and
add
xor
jp
mov
sub
and
xor
lds
push
add
sub
divl
cs
push
test
sub
sahf
dec
inc
and
xchg
lcall
cmc
push
pop
pop
add
xor
jb
gs
adc
mov
xor
movl
aad
mov
dec
jl
out
lret
sub
stos
pop
pop
push
rcrb
sbb
or
push
popf
test
mov
mov
xchg
and
cmp
loope
mov
mov
cmc
out
or
adcb
je
lock
mov
leave
and
repz
mov
dec
pushf
jb
mov
ret
insl
icebp
dec
pop
movsb
pop
loope
in
dec
jne
inc
neg
mov
jne
loop
mov
cmp
dec
out
cmp
insb
das
mov
jmp
add
jnp
cmp
les
aaa
mov
jb
sbb
add
js
jmp
xchg
mov
in
push
inc
arpl
cwtl
cmp
icebp
jp
xor
into
movsl
push
lea
ljmp
or
lods
adc
rcr
mov
jmp
cmp
add
aam
push
xchg
mov
mov
jae
or
sub
ds
push
mov
cs
mov
xor
mov
leave
cli
lods
xchg
inc
enter
insl
sub
lds
pop
pop
jo
test
inc
xchg
jp
xor
ss
test
in
lds
xor
inc
insl
inc
inc
ret
or
pop
mov
mov
push
add
dec
movsb
mov
lahf
out
push
out
shrl
xchg
int
ret
jbe
inc
jae
xchg
xor
pop
fadds
push
lock
add
iret
adc
push
aad
pop
scas
pop
mov
pop
insl
addr16
ds
lods
movsb
inc
mov
mov
mov
test
add
xchg
cltd
aad
je
push
leave
inc
mov
int3
fmuls
xchg
sub
out
sub
mov
dec
outsl
divb
mov
loopne
lea
or
adc
adc
pop
xchg
aaa
les
mov
incl
nop
push
orb
les
mov
icebp
pop
dec
jns
or
or
xor
or
or
add
mov
pop
jno
sub
push
testl
lea
mov
xor
popf
addb
adc
call
sub
cmpsl
jecxz
fdiv
aas
xchg
lahf
xchg
sarl
in
dec
and
xor
pop
lahf
notl
rol
pop
sbb
push
cs
ja
repz
or
mov
xchg
dec
fnstcw
cmp
repnz
adc
mov
and
cs
inc
inc
enter
sub
push
aam
js
mov
out
push
or
add
add
pop
sub
inc
pop
cmpb
jnp
scas
je
insb
iret
add
ss
adc
fst
add
dec
mov
cmp
aaa
sbb
mov
into
xorl
mov
arpl
lds
xchg
and
popf
xor
dec
mov
xchg
js
rcll
sbb
lods
cmp
popf
mov
ret
and
std
and
push
stos
pop
lea
push
mov
jle
and
add
cld
adc
jne
cmp
ds
std
int3
add
std
xor
shr
sbb
or
shl
mov
add
popa
mov
jae
sbb
xor
ja
dec
pop
ror
adc
in
xchg
es
mov
icebp
add
insl
mov
outsb
adc
push
negl
test
sahf
lret
sarl
jb
inc
outsb
insl
insb
in
std
dec
lcall
inc
jae
sbb
bnd
testb
out
mov
mov
gs
lcall
enter
xor
add
adc
incb
push
daa
and
stos
fnsave
adc
popf
arpl
push
xchg
imul
and
xor
mov
loopne
dec
cmp
leave
lcall
enter
xchg
test
adc
jno
or
pop
test
mov
mov
jl
lods
addr16
and
stos
iret
sub
sbb
pushf
lea
sbb
mull
or
in
cltd
jecxz
pop
xchg
or
inc
pop
sti
and
inc
enter
inc
mov
add
les
ret
or
xor
or
sbb
cmp
push
mov
ret
inc
rcl
mov
testl
and
mov
mov
in
adc
inc
loopne
in
jae
jnp
jo
dec
out
ljmp
cs
dec
xchg
mov
mov
xor
sub
or
mov
ret
and
stc
jecxz
xchg
cmovbe
shlb
roll
je
push
pop
pop
dec
vprolvd
inc
jmp
jne
shll
jmp
lds
aaa
insb
lahf
popf
fiadds
aad
add
outsl
and
xchg
movb
loop
inc
jmp
in
andl
xchg
push
ja
pop
int3
repnz
xor
gs
jge
ljmp
int
jp
mov
cli
cs
movb
lods
and
dec
push
push
push
sub
in
jbe
and
adc
ljmp
fists
and
push
inc
lret
aad
pop
add
sbb
xor
mov
lahf
addr16
dec
repnz
outsl
jle
jg
fisubrs
sub
jmp
mov
mov
sub
sub
jo
push
dec
mov
add
cs
dec
call
nop
or
sarb
movsl
inc
imul
frstor
cmp
cmp
mov
bound
add
pushf
fdivl
shlb
and
cwtl
fadd
sub
or
aam
inc
imul
mov
or
push
xorl
ret
lods
cmp
enter
in
subb
sbb
jnp
jne,pn
and
ret
decb
ftst
out
das
dec
jns
push
gs
shrb
aas
lea
mov
ja
aaa
std
ret
test
movb
mov
cltd
add
lahf
stos
ret
stos
ljmp
fwait
pop
popf
lcall
xor
push
sbb
rorb
nop
sub
or
inc
pop
lcall
frstor
sub
lea
pushf
mov
ljmp
test
pop
lahf
adc
push
insl
imul
andb
sub
xchg
push
jbe
fldl
insl
sbb
sub
add
sbb
and
icebp
sub
movsl
adc
shrl
or
jle
xor
mov
mov
or
xorl
stc
xchg
dec
jmp
fprem1
dec
in
int3
sub
pusha
lods
ljmp
out
fcmovbe
mov
aaa
push
ret
sub
ljmp
adc
mov
pop
sahf
cmp
cmp
testb
sbb
mov
das
jae
aaa
xchg
ret
push
sub
or
sahf
sub
sub
adc
shll
call
dec
mov
mov
push
jo
stos
pop
lods
fs
add
lret
mov
and
popl
or
repz
lcall
cmp
pop
jecxz
jnp
rcll
push
loopne
jecxz
mov
xchg
call
jmp
cld
shrb
cmp
test
dec
sbb
cltd
jbe
popa
adc
das
sbb
fsubrl
mov
in
out
clc
inc
jae
mov
xchg
or
dec
push
mov
adcl
scas
repnz
dec
jb
push
cltd
or
jp
push
mov
adc
jo
xchg
fildl
jl
cltd
pop
xchg
aaa
jp
bound
mov
pop
test
cmp
nop
sbb
mov
cli
in
dec
out
lds
push
mov
insl
test
jg
cmp
sub
xchg
mov
inc
dec
add
mov
xchg
or
adc
loope
test
jnp
repz
inc
ljmp
cmp
jge
punpcklbw
out
pop
bt
ret
stos
sbb
push
sub
sti
jne
decb
repnz
jg
add
sub
dec
mov
jae
sbb
mov
in
ficomps
xlat
loopne
pop
outsb
or
jl
jmp
imul
fsubrl
add
sbb
js
loope
mov
test
inc
popa
lret
cld
loope
ljmp
aad
inc
das
insb
sub
inc
cmc
add
fcomps
pop
pop
jecxz
push
adc
addr16
shlb
dec
sub
push
cmp
hlt
leave
xchg
xor
xchg
loope
xlat
inc
or
mov
fmul
nop
dec
fdivrl
int
jg
gs
movl
pop
jle
lds
pop
and
inc
inc
and
loopne
insl
mov
mov
addr16
mov
scas
rorb
cs
mov
dec
lcall
sub
test
or
mulb
dec
and
xchg
pop
ss
and
test
arpl
inc
push
insl
scas
cmp
dec
jmp
adc
arpl
cs
stos
into
scas
mov
pushf
add
stos
inc
push
push
mov
popf
cwtl
movsl
mov
iret
mov
ds
insl
or
cmp
mov
frstor
sub
adc
fistpll
push
inc
lahf
nop
xchg
add
stc
int
or
fmuls
xchg
pop
jns
cmp
mov
pushf
cmpsl
nop
push
sub
push
jne
dec
jp
add
icebp
cmovae
loopne
fists
adc
lods
mov
aaa
int
pushf
mov
aad
xchg
mov
pop
jne
repz
inc
lods
loopne
jp
mov
sbbl
sub
jmp
pop
jbe
dec
pushf
insb
add
or
divl
mov
jle
cmpsl
pop
loopne
lret
pop
or
pushf
and
mov
xor
push
in
stc
push
scas
rcr
adc
fucomi
or
bswap
adc
adc
outsb
xchg
stos
dec
ret
dec
inc
jbe
dec
in
dec
push
xor
xor
and
cmp
mov
out
data16
adc
ss
pop
inc
adc
fistl
or
jns
fsts
test
cld
mov
pop
mov
sti
int3
ja
xor
sti
leave
test
jbe
mov
mov
push
jne
sub
sub
sub
sub
cmp
test
mov
das
jg
vpmaxuw
loop
cmp
sbb
mov
test
pop
mov
fldt
push
mov
adc
push
sbb
mov
xchg
mov
cmc
sub
mov
daa
push
dec
adcl
lods
add
clc
sahf
mov
sbb
cmpsl
mov
lods
xchg
inc
pop
pop
mov
lret
and
in
fsts
inc
int
icebp
inc
and
in
leave
in
scas
pop
mov
jp
test
cld
mov
pop
aam
movsl
out
or
xchg
lret
and
in
sub
cld
leave
or
xchg
stos
pop
xlat
sbb
sub
mov
mov
mov
fcompl
pop
push
loopne
mov
sbb
scas
testl
mov
lods
aad
and
push
loope
fsubrl
pop
inc
mov
pushf
mov
inc
sbb
dec
and
xchg
lret
je
cmp
dec
int
adc
fldl
push
push
cli
push
mov
adc
repnz
stos
jle
mov
inc
je
jae
sub
xor
sbbb
dec
fidivrl
ds
pop
inc
xchg
jg
jg
push
pop
movb
iret
cmp
push
sub
mov
loop
add
jge
scas
adc
inc
jge
adc
outsb
xchg
in
fimull
sbbb
movsl
cmp
dec
cmpsl
push
or
call
in
loopne
or
sti
lcall
int
scas
rol
mov
scas
movsb
lods
cmpl
mov
jne
lret
in
pop
sbb
imul
mov
dec
sti
dec
sbb
in
js
xor
add
mov
jg
mov
iret
lods
std
fadd
icebp
cmpsl
dec
adc
jae
in
mov
ljmp
je
mov
fsubl
jns
cli
mov
pop
xchg
fimuls
jae
pop
ficomps
and
cmp
jbe
out
in
loopne
bound
je
fnclex
cli
cmc
cmpsl
dec
lock
cmpsb
xor
xlat
jp
xchg
jl
repz
insb
inc
notb
shll
fcmovb
inc
sarb
adc
pop
mov
mov
push
aad
jge
jmp
xchg
sbb
mov
fcmovbe
gs
sbb
sbb
gs
call
bound
out
mov
aam
or
mov
jl
jns
adc
cltd
adc
mov
sbb
xchg
addb
int3
xchg
lret
mov
mov
out
cltd
cmp
nop
adc
sub
scas
push
xor
xor
std
iret
into
fmul
jg
mov
push
mov
cmc
das
dec
mov
pusha
sub
pop
shrb
sbb
in
mov
pusha
pop
cmp
cmp
ds
insl
jl
mov
mov
mov
mov
in
jp
adc
xor
push
inc
loopne
mov
jb
mov
hlt
es
lds
stos
xchg
cmp
icebp
faddp
nop
mov
fbstp
jo
jo
inc
jmp
lea
sbb
xchg
int3
push
negb
adc
xor
test
in
mov
jge
movsb
sti
sbb
loope
out
cmp
fs
push
add
sub
mov
xchg
iret
cmp
in
lret
iret
cmp
xor
push
jns
mov
xchg
sbb
xchg
sahf
les
aad
frstor
popf
movsl
push
aaa
cmp
test
insl
je
or
jmp
push
lods
inc
pop
dec
cmp
mov
dec
ljmp
in
cmp
mov
push
xor
add
lcall
push
mov
lcall
rcrl
flds
ljmp
jecxz
dec
mov
test
jbe
sub
pop
cwtl
sbb
xor
adc
dec
xorl
pop
test
cmp
imul
jle
mov
enter
test
leave
pop
pop
jne
xchg
test
out
es
inc
jnp
out
in
push
lret
je
push
pop
pop
push
push
jbe
and
add
pop
ja
outsb
repz
dec
xor
pop
dec
nop
subb
out
pop
cmpb
mov
fcoms
lahf
std
subl
test
jp
jmp
mov
jb
js
xor
dec
popf
ss
cld
xorb
insb
adc
out
ljmp
push
aaa
sub
sbb
mov
sbb
imul
pop
iret
inc
add
pusha
imul
or
jne
ja
dec
shll
bound
add
sub
dec
in
jecxz
lahf
pop
cld
xchg
jg
cmp
sahf
mov
mov
scas
mov
iret
sbb
xchg
or
fcmovb
jl
bound
push
lret
divl
and
addr16
data16
outsl
ja
inc
jp
iret
adc
mov
test
jmp
push
ret
add
pop
push
inc
jmp
push
stos
pop
sub
mov
lds
jo,pt
jmp
jo
arpl
pop
movsb
dec
adc
xchg
inc
inc
mov
lret
jmp
pop
aas
pop
push
popf
pop
add
cmp
jg
or
cltd
adc
dec
lods
arpl
ja
lahf
cli
sub
sbb
scas
mov
xor
xor
mov
dec
add
incl
add
mov
pop
mov
int3
jns
mov
aam
cmp
xchg
cmp
or
je
cmp
call
lock
cmp
jo
push
mov
push
cmc
cwtl
mov
add
xchg
enter
xor
push
cltd
ret
scas
mov
push
imull
and
call
xchg
jbe
lret
inc
out
lea
cmp
and
in
int
repz
ds
cmp
dec
in
popl
je
ret
in
lret
jg
mov
inc
clc
and
fadd
into
pop
fstl
cmp
dec
sbb
jo
enter
push
in
and
psrad
cli
fstpt
or
sbbb
insl
loope
jae
adc
addb
pop
sbb
sub
dec
lods
loop
mov
sub
mov
pop
aaa
pop
jno
movsl
testl
lods
in
dec
inc
cmp
and
pop
jmp
mov
out
test
xor
mov
push
cli
mov
lret
push
mul
in
imul
sbb
jae
leave
fucomip
addr16
sahf
fcompl
mov
call
movsb
pminub
ds
dec
adcl
hlt
inc
mov
sahf
cmc
inc
test
out
mov
sarl
imul
ficompl
lods
call
add
inc
jl
push
imul
sti
stos
std
negl
sub
int3
jb
mov
setb
sbb
dec
jmp
dec
inc
xchg
add
cltd
arpl
out
ret
loopne
movsb
fdivrl
mov
jno
adc
mov
dec
shrl
mov
in
in
xchg
aam
adc
sbb
jp
push
cmpsb
shlb
add
stos
mov
add
xchg
mov
das
mov
or
xchg
dec
cmp
mov
in
or
dec
jp
inc
les
iret
pop
and
pop
test
jecxz
mov
mov
pop
lret
hlt
mov
jb
lds
inc
rcr
out
add
add
sbb
shrb
inc
or
jecxz
cmp
xchg
inc
test
scas
inc
pop
sub
and
mov
sub
xchg
lods
stos
ljmp
dec
faddl
inc
sbb
jns
sub
inc
cmp
pop
xchg
aad
dec
fwait
rclb
test
cld
imul
pusha
stos
mov
ja
xchg
ret
popf
and
addl
fidivs
xchg
or
mov
je
sub
xchg
adc
sbbb
ficoms
mov
push
mov
mov
inc
clc
pop
push
ja
les
jo
clc
mov
inc
ljmp
mov
loope
mov
dec
jae
mov
sub
fmul
mov
and
fldl
into
pop
out
pop
addb
divl
cmp
or
aad
enter
movsl
jae
je
mov
mov
dec
idivl
sub
ret
js
mov
mov
xchg
mov
mov
inc
jl
xor
lods
cwtl
push
pop
jbe
jb
push
dec
xchg
jae
sbb
mov
or
lock
roll
sbb
aas
arpl
jmp
cmp
or
enter
out
jb
push
movsb
je
pop
push
cmp
imul
inc
add
bnd
pop
in
out
leave
in
inc
sbb
fwait
into
jmp
jb
inc
sbb
mov
pushf
ficoml
call
xchg
sub
scas
adc
out
mov
fstpt
lret
ret
mov
mov
push
inc
int3
inc
sbb
or
dec
orl
addr16
imul
inc
sbb
cmp
ror
sarb
push
inc
and
inc
jb
js
insb
jae
sub
jne
push
cmp
mov
out
fstpt
int3
movsl
xchg
repz
loop
popa
pop
cmpsb
popa
dec
subl
test
pop
out
fsubl
bound
sub
test
outsl
leave
sub
ja
pop
shl
cmp
mov
xlat
cmp
repz
std
jp
inc
gs
sub
hlt
xor
xchg
push
and
push
mov
rcr
jne
frstor
xchg
mov
popf
dec
push
in
fst
mov
mov
int
lret
adc
iret
push
ret
push
in
inc
cmpsl
andl
jnp
addr16
repz
push
adc
sbb
test
pop
sahf
bound
dec
adc
mov
test
aad
dec
cwtl
out
mov
fisttpll
mov
sbb
xchg
shlb
pop
cmpsl
in
xor
scas
stc
sbb
jnp
int3
add
sbb
in
repnz
gs
stc
adcb
jno
int
add
push
mov
sub
enter
and
fs
cmp
sub
fldt
mov
fisttps
fildll
jo
test
dec
dec
pop
inc
test
pop
and
jb
xchg
mov
adc
mov
cltd
mov
add
cmpsb
arpl
jns
jns
jnp
fnstsw
and
xor
pop
das
stos
das
xor
sub
outsb
mov
mov
xchg
std
call
dec
push
pop
test
push
stc
and
push
xchg
adc
out
push
inc
fadds
sahf
adc
bt
outsl
fdiv
push
mov
jle
shl
cld
movl
fidivrl
in
movsb
mov
rclb
dec
insl
shr
cltd
mov
adcl
test
out
cmp
pushf
jno
pop
cmp
cld
pop
movsb
addr16
lods
pop
dec
mov
fcmovb
xlat
dec
push
or
adc
sub
push
mov
idivl
lret
sub
push
inc
inc
andl
cmp
push
xchg
popa
leave
jo
lret
lret
lock
mov
add
scas
sub
xor
push
mov
sub
add
imul
arpl
inc
push
popf
adc
push
setge
loop
sbb
testb
test
insl
xor
adc
jne
insb
and
icebp
cmp
pop
add
push
leave
cltd
jne
xchg
lods
pop
gs
add
es
fcompl
xchg
push
cld
mov
mov
inc
rclb
mov
sub
shl
sbb
int
xchg
mov
imull
icebp
repz
repz
jns
mov
jne
inc
xchg
cld
nop
adc
in
mov
jne
sti
and
shll
out
inc
push
divl
sbb
dec
outsl
and
sub
data16
fs
and
mov
mov
push
jb
popf
dec
ljmp
dec
cmpsl
pusha
dec
xor
movsl
fidivs
and
mov
outsl
push
mov
xchg
jo
fsubl
inc
pop
and
cltd
xchg
jae
pop
cmp
stos
xchg
pushf
lock
sbb
lret
and
push
cmp
or
pop
enter
stos
cmp
insl
out
pop
mov
outsl
ret
std
faddl
jns
pop
add
dec
xchg
daa
pop
repnz
enter
jl
ss
sub
dec
inc
mov
xor
insl
mov
fcoms
lret
dec
mov
xor
jge
push
scas
test
jae
arpl
aas
cmp
dec
scas
stc
std
inc
addr16
push
enter
adc
dec
jmp
enter
jne
adc
inc
or
aaa
movsl
jb
inc
sub
push
repnz
xchg
push
jne
jl
dec
shrl
jae
inc
pushf
mov
add
pop
push
sahf
mul
pop
push
enter
or
fstl
testl
xor
adc
out
push
xchg
pop
add
jb
loop
hlt
push
or
cmpsl
daa
in
pop
adc
loopne
int3
arpl
ljmp
int3
dec
inc
add
iret
cmp
sub
leave
adc
dec
xchg
adc
adc
pop
and
jp
xchg
das
pushf
push
sti
dec
push
stos
aam
push
xor
xor
add
notl
jns
out
negl
jbe
sub
dec
pop
pushf
inc
ss
sub
rolb
fisubrs
mov
dec
mov
roll
ret
lods
pop
repnz
stos
sahf
sahf
divb
scas
aas
lock
stos
add
in
push
push
sbb
ja
cmp
jno
test
and
adc
jne
scas
into
cmp
xchg
mov
int
fldl
ficompl
or
sti
test
lock
add
nop
xor
or
insb
stos
and
lods
xor
out
push
daa
outsb
and
addr16
jo
or
bound
push
unpcklps
push
loop
ret
jne
das
add
fs
ja
std
adc
sub
sbbb
mov
stc
sti
icebp
scas
add
jne
cltd
test
inc
cmp
and
popa
fmul
fwait
pusha
inc
cltd
dec
psrlw
mov
adcl
push
mov
jns
xlat
push
shlb
mov
xorl
push
or
mov
pop
jge
nop
add
xchg
es
insb
fsub
add
fsubs
sbb
fprem
outsl
push
popa
sbb
stos
insb
daa
gs
mov
dec
dec
out
in
aad
inc
lret
jmp
test
push
sub
decb
pop
sbb
aad
mov
aaa
xchg
sub
mov
push
mov
ds
cmp
rolb
mov
insl
into
aam
mov
add
inc
dec
inc
je
cmp
push
cltd
or
mov
movsl
cmc
js
fnstsw
xor
data16
xor
icebp
and
std
inc
jnp
in
jae
aad
je
out
xchg
jl
std
mov
scas
pop
or
push
divl
or
movb
xchg
dec
push
push
imul
iret
orb
dec
xor
outsl
loope
into
jecxz
hlt
and
jns
ret
mov
filds
lea
idivl
adc
push
xor
in
adc
push
jnp
cmp
mov
loopne
push
cmp
dec
sti
xchg
roll
cltd
subl
push
mov
pushf
fstpt
pop
lahf
push
fimuls
and
mov
pop
inc
insl
push
inc
pop
push
pusha
sub
testl
cli
into
int
test
inc
aas
mov
jecxz
jns
jne
in
xor
mov
int
ret
push
cmp
sub
cltd
loopne
addl
mov
add
push
pop
scas
xchg
fnstenv
jae
scas
imul
stos
sub
pop
dec
and
fs
mov
or
add
mov
pop
lea
out
scas
cwtl
lods
adc
pop
add
mov
das
mov
insb
pop
lcall
scas
addr16
cld
push
xor
jbe
jae
addr16
push
pop
sbb
stc
pusha
inc
lea
mov
es
inc
lds
push
pop
cmpsb
rcrb
mov
movsb
xchg
sub
xchg
push
jmp
fstps
mov
cmp
bound
sub
subl
jp
xorl
jnp
jmp
mov
xchg
mov
lcall
lods
subb
rolb
fdiv
aas
cmpsb
cmpb
mov
lods
xor
xchg
mov
sbb
sub
sbb
rorl
dec
push
ja
sub
les
xchg
pop
fadds
insl
mov
push
pop
dec
mov
or
and
jl
test
aas
mov
lds
push
je
popa
mov
inc
movsb
or
jp
jb
idivl
std
mov
mov
cmp
repnz
xchg
sarb
arpl
add
lea
fnstsw
lahf
mov
inc
xchg
push
repz
sub
into
cmp
pop
rol
cmp
test
pop
push
and
jns
adc
mov
jle
hlt
addr16
sub
addr16
mov
orl
ds
cmpsb
xchg
push
adcb
aas
jns
mov
scas
lods
lds
mov
ret
or
movaps
pop
jmp
lds
and
dec
xchg
loop
or
xchg
or
xchg
stc
adc
adc
pop
fwait
jge
mov
or
sub
jnp
push
les
mov
push
out
sub
push
add
ds
out
loope
jae
leave
dec
xor
std
add
sbb
pop
in
gs
movsl
xor
fsubrs
ror
mov
aam
loop
sub
push
bound
pop
lcall
scas
and
sbb
xor
test
jmp
push
cmpsb
push
and
pop
clc
jae
or
daa
mov
jae
adc
aaa
in
jp
arpl
lds
jmp
jge
loope
add
jno
lret
iret
or
lods
mov
addr16
or
cmpsb
push
and
mov
cli
insl
imul
add
or
test
clc
jecxz
mov
inc
jp
adc
or
jg
enter
cwtl
iret
or
push
xchg
mov
mov
shll
pop
in
sbb
and
js
xchg
lcall
cld
fdivr
arpl
aad
dec
dec
repnz
les
les
cmp
mov
flds
adc
gs
bound
inc
loope
dec
es
pop
adc
movsl
mov
and
lock
push
lds
popf
je
pop
xchg
nop
in
repz
test
jno
adc
scas
inc
popf
shrl
fcomp
cmp
movsl
pmullw
inc
jge
and
mov
mov
jae
and
sbb
aam
cmp
push
push
adc
push
test
and
mov
mov
and
xor
mov
lahf
cmpsl
xchg
cmp
cltd
jg
and
jno
mov
pusha
xchg
cmp
iret
adc
mov
mov
xor
sahf
inc
fmul
fisttps
jl
cmp
popa
jno
dec
lcall
sub
lods
xlat
push
psubsb
sbb
cmp
shll
ret
push
xor
jbe
scas
ss
in
xchg
and
mov
sbb
xor
test
repz
xor
push
jns
fldcw
stc
loopne
xor
or
jno
popf
test
inc
fs
addl
xchg
test
adc
jno
xor
insl
add
fidivl
stc
fidivrl
filds
shrl
ror
inc
mov
dec
xor
push
jecxz
xor
sub
pop
mov
lret
lea
iret
jae
xor
or
or
stos
jl
decb
pop
mov
dec
push
dec
mov
jle
lea
mov
push
push
xor
into
push
out
lahf
or
mov
lahf
aad
ror
leave
into
and
imul
pop
push
mov
push
rolb
int3
push
push
sbb
cli
sbb
bt
or
in
aaa
push
fistl
sahf
dec
dec
adc
ljmp
addl
mov
jo
jg
popl
sbbb
icebp
mov
xchg
scas
insb
int
push
sahf
into
out
jae
pushl
dec
push
push
lock
fldcw
pop
add
jl
mov
pop
push
inc
push
lods
enter
loope
nop
ret
mov
xchg
add
xor
xor
mov
push
push
lret
and
shll
sbb
push
push
aad
test
mov
jmp
out
enter
adc
cmc
subl
fimuls
mov
dec
jne
loope
lahf
imul
add
push
and
in
lds
addr16
adc
cltd
mov
mov
mov
data16
imul
xchg
in
fstps
loope
push
or
fdivrs
add
jns
mov
cmpsb
sahf
sbb
or
sub
je
leave
or
js
int3
sub
inc
xor
outsl
sbb
int3
and
pusha
fcoms
add
cmpsb
cwtl
daa
inc
in
shlb
add
inc
in
test
out
push
pop
test
mov
enter
xchg
adc
cmp
xchg
imul
sbb
dec
ret
ljmp
add
lods
adc
jl
hlt
cwtl
cmc
mov
js
add
subl
out
loope
and
call
jmp
push
call
push
xchg
lea
stos
pushf
cmp
add
aad
push
sbb
inc
rcll
jl
rcl
mov
xchg
add
fsubl
jecxz
fwait
stc
jns
shr
cmp
andl
sub
jnp
jge
mov
cmp
rcll
fbstp
scas
test
mov
pop
or
test
ret
and
push
mov
into
notl
pop
or
je
leave
fs
pop
je
adc
test
xor
pop
inc
fsubrp
out
adc
data16
dec
jns
or
mov
arpl
jns
data16
push
push
mov
loope
out
sbbl
loope
mov
push
das
mov
mov
mov
sarl
aas
scas
sahf
ficoms
es
es
arpl
vmwrite
loope
dec
lret
inc
daa
mov
mov
ret
orb
js
or
outsb
inc
mov
jno
movsl
mov
inc
mul
enter
jns
pop
adc
loop
popa
insb
stos
es
sbb
fstpt
mov
cmp
and
stc
xchg
jb
mov
mov
mov
lahf
cmpsl
ja
test
pop
notl
xchg
pop
in
sbb
or
in
push
stos
xchg
popa
and
lret
sub
sub
mov
mov
sti
mov
jae
dec
mov
mov
mov
jge
or
movsb
pop
sub
dec
dec
xchg
jl
lock
dec
mov
fbld
ret
mov
loop
dec
jecxz
mov
adcb
mov
hlt
andb
jmp
adc
pop
das
sbb
push
iret
fs
mov
fs
mov
imul
mov
movsl
sbb
sarb
ljmp
lret
pop
adc
push
pop
xchg
je
add
in
daa
out
repnz
popa
cli
cltd
aas
push
sub
jo
dec
scas
out
adc
pop
cld
bound
add
dec
dec
mov
popf
jns
mov
mov
xlat
add
and
pop
cmp
sar
loope
test
push
sbb
ja
adc
mov
aam
cmpsb
cmpsb
out
leave
aam
ret
mov
ja
aad
data16
repnz
mov
es
rolb
roll
jb
add
mov
sbb
ficomps
shlb
xor
mov
inc
scas
sbb
out
inc
and
xchg
adc
xchg
call
pop
mov
dec
dec
fwait
mov
sbb
cmpb
mov
push
xchg
xor
outsl
outsb
dec
test
nop
testl
sub
mov
aas
rcll
xchg
sbb
orl
jmp
enter
nop
jge
jg
xor
push
xor
ror
mov
xchg
popf
stc
iret
roll
rcl
sub
pushf
jne
jle
xlat
inc
mov
dec
aaa
and
adc
mov
jg
dec
jmp
loope
push
jb
mov
cld
cld
mov
xchg
add
ret
cmpsl
mov
sbb
aas
fimull
lods
lock
imul
loope
and
jge
aam
inc
inc
push
adc
mov
sub
fsubp
ficomps
mov
pop
pop
dec
and
jb
or
rcl
cld
cmpsl
lret
cld
jne
ret
ja
movsl
push
inc
loope
jns
rclb
jmp
lds
mov
adc
call
imul
lcall
mov
mov
sti
inc
inc
out
jle
das
mov
das
xor
lcall
cmc
push
push
inc
jle
lods
fstpl
stos
rorl
push
test
cmc
bndldx
in
das
jmp
fistl
lret
inc
sbb
insl
xchg
push
mov
pop
into
jge
scas
cmp
enter
xchg
pop
adc
sub
icebp
sub
mov
lahf
into
xchg
push
lcall
sub
jbe
cmp
aas
lock
or
shr
fstpt
add
jle
ficoml
ss
sbb
sub
ja
mov
xchg
add
jmp
int3
mov
pop
jmp
jno
xor
gs
mov
pop
fwait
rolb
inc
lea
cmp
ds
insl
or
cmpl
or
mov
inc
adc
adc
nop
js
xchg
mov
cmp
mov
adc
aaa
inc
scas
nop
scas
sbb
cmc
ficoms
xchg
repnz
adc
hlt
inc
adc
sbb
mov
imul
mov
aad
scas
cmpsl
notb
lcall
inc
es
inc
dec
adc
jle
in
sub
std
xchg
jl
out
leave
clc
jnp
bound
out
nop
inc
out
xor
sub
decl
add
insl
in
lret
push
jo
or
enter
stos
push
mov
stos
dec
pop
xchg
inc
out
jne
jp
xchg
adc
mov
imul
cld
in
lock
pop
push
xchg
pop
push
shrb
mov
jne
push
cmpsb
icebp
xchg
and
sbb
outsb
out
in
loopne
and
dec
add
ds
jne
cmp
clc
push
push
dec
mov
pushf
cltd
outsl
add
out
push
xor
clc
lcall
dec
out
or
aad
dec
xchg
mov
hlt
sti
int
ja
movsl
ljmp
push
ficoml
jg
push
sbb
cmp
xor
pop
cmp
add
mov
jg
fs
es
lea
imul
gs
clc
cmp
js
cmp
out
cli
jg
pop
das
fidivl
insb
hlt
insb
pushf
out
pop
inc
adc
pop
out
and
scas
mov
fisttpl
sub
add
in
int3
push
repnz
sbb
mov
or
iretw
lret
hlt
xchg
xor
add
xchg
gs
das
dec
popa
into
mov
jae
rcll
mov
dec
sub
testb
clc
cvttps2pi
test
int3
xor
add
call
orl
pusha
scas
rclb
test
loop
xchg
loope
fisubs
lahf
movsb
imul
mov
into
hlt
out
cwtl
sahf
sbb
rolb
inc
cmp
cmp
pop
adc
movsl
jae
fdivrs
jl
call
pop
jae
fcoms
cmp
mov
dec
mov
in
dec
rcrl
pop
popa
xchg
cs
pop
mov
nop
mov
pop
mov
adc
pushf
mov
mov
dec
iret
xchg
mov
mov
cmp
sbb
loope
js
dec
pusha
pushf
stos
in
shll
jl
outsl
cli
fs
lcall
dec
call
mov
and
add
mov
scas
fadds
stos
push
insb
mov
push
mov
push
push
xchg
inc
lods
ret
int3
cli
lock
notb
andl
dec
scas
xchg
stc
shl
out
and
mov
or
popa
bnd
jg
mov
das
or
jno
sub
aad
ljmp
lock
xor
and
or
nop
mov
testb
mov
out
sbb
and
pop
icebp
inc
faddp
pop
es
repnz
leave
fisubl
in
dec
cmp
fcmovnb
push
xor
aam
mov
out
add
in
out
out
adc
inc
lea
or
push
mov
lods
clc
pusha
jmp
inc
adc
inc
add
jge
out
test
or
lret
mov
lahf
and
dec
and
dec
sbb
push
mov
in
out
push
loopne
lods
xlat
scas
arpl
inc
addl
inc
incb
lahf
push
in
xorl
fidivrl
dec
test
adc
jb
adc
inc
push
es
mov
push
das
cwtl
xchg
imull
aas
push
add
push
aad
pop
mov
lock
inc
sarb
sar
jmp
rcr
cmc
imul
mov
and
fs
scas
or
out
outsl
in
hlt
hlt
ret
push
push
clc
cmp
dec
xor
xchg
or
ficoml
fisttpll
mov
sbb
fstps
js
mov
lods
mov
sbb
sbb
ret
xor
icebp
mov
fs
popf
sahf
pop
imul
xor
imul
xor
cmc
shrl
mov
xor
xor
lock
push
mov
push
sbb
xorl
sub
movsl
or
jae
push
adc
pop
std
xchg
inc
lcall
dec
vrcpss
lcall
mov
and
dec
cmp
pop
inc
jbe
dec
pop
imul
shrl
pushf
or
sbb
aad
pop
call
push
mov
fcmovnbe
sub
xchg
sub
pcmpeqb
sbb
jne
mov
repnz
ljmp
inc
sbbb
jb
mov
stc
push
mov
xor
mov
dec
rcrb
push
inc
or
pushf
lsl
jnp
mov
flds
lret
pop
das
mov
loopne
je
aaa
frstor
bound
pop
ds
cmpsb
cmp
mov
frstor
push
fidivs
enter
adc
mov
inc
mov
lods
repz
jmp
push
fnsave
mov
jg
fstpt
adc
out
or
gs
repnz
es
hlt
jle
scas
and
and
cwtl
xchg
loope
xor
xchg
das
popf
sub
add
or
pusha
mov
lcall
mull
jle
out
addr16
cmp
cwtl
adc
notl
call
sub
pop
sbb
or
xchg
dec
adc
mov
and
cmpsl
inc
jb
inc
test
hlt
stos
cmp
push
and
test
icebp
jg
outsb
ljmp
push
xor
loop
mov
outsl
and
cmp
mov
pop
fs
test
mov
mov
stos
cmc
mov
mov
jno
scas
incl
xchg
cmp
dec
movsl
mov
cmp
adc
mov
scas
push
dec
nopl
in
mov
jmp
adc
enter
or
and
test
sbb
leave
aam
std
cmp
or
bound
sub
jns
std
shlb
in
incl
movsw
lahf
and
mov
loop
loopne
dec
mov
jae
popf
inc
insl
lahf
lcall
popf
mov
sbb
hlt
xchg
insb
daa
add
sti
outsl
jo
rcrl
jo
xchg
xchg
push
xchg
cmp
sbb
mov
andb
in
gs
xlat
mov
sub
inc
pop
jae
xchg
jmp
ss
cld
insl
add
dec
xorb
pushf
pop
out
sub
pushf
or
insb
sbb
test
jg
dec
rcrb
adc
jle
imul
mov
mov
roll
insb
in
xor
shrb
jecxz
sub
inc
mov
add
push
xor
push
push
push
sarb
sub
rcll
or
sub
icebp
xchg
cwtl
arpl
pop
jno
test
push
test
mov
jno
int
or
roll
stos
mov
insl
xor
rolb
mov
out
mov
leave
mov
cmp
sar
stos
inc
mov
arpl
stos
sub
pusha
rcrb
sub
add
addl
sbb
sbbb
inc
pop
jge
test
jecxz
or
xor
jmp
sbb
loop
jo
movsb
adc
in
arpl
loop
cmp
ss
rol
push
and
fs
shr
push
out
pop
mov
clc
iret
lcall
adc
adc
sub
shlb
cld
ja
or
ja
loopne
popa
mov
cmp
and
mov
popa
inc
jg
loop
fmulp
movsl
jno
fbstp
and
mov
aad
push
aad
popa
adc
int3
push
pushf
mov
fstpl
adc
sub
xor
lret
stos
dec
xchg
repnz
mov
dec
movsb
lret
jae
sub
push
loope
enter
and
push
add
iret
shl
das
dec
aas
pushf
aad
cmp
cld
pusha
inc
inc
ljmp
inc
cmpsb
add
push
dec
mov
cltd
nop
pop
dec
cmp
pop
lods
imul
repnz
rorb
xor
daa
mov
push
shrl
rolb
jns
and
rclb
and
fwait
xchg
fidivl
add
xchg
dec
push
mov
xor
dec
iret
or
cmp
data16
jl,pt
xor
inc
repnz
jno
mov
mov
jno
sub
mov
inc
cs
mov
jl
inc
bound
jmp
out
idivl
cld
dec
sbbl
jecxz
dec
or
mov
pop
lock
call
fadds
aad
add
neg
add
add
inc
cmpsb
fistl
push
jbe
stos
mov
and
or
adc
xchg
jne
adc
cmp
adc
jle
fdivrs
mov
lock
loop
insl
pusha
das
cmp
mov
cli
bound
sbb
popa
dec
scas
sbb
cld
dec
mov
in
fbld
and
cmpsl
out
or
mov
int
push
in
cmpsl
nop
mov
mov
jae
mov
mov
push
jno
lret
stos
lods
lods
lock
xchg
push
loope
inc
cmp
test
stc
dec
or
in
jnp
mov
sbb
lods
jb
hlt
out
cmc
xor
pop
inc
push
insl
xchg
mov
std
sti
in
imull
cmpsb
add
aas
and
aam
sub
adc
sub
adc
push
ret
scas
sti
in
outsl
push
push
pop
sub
lods
inc
xor
or
xchg
pop
jg
lcall
inc
decl
lret
aad
sbb
mov
sbb
nop
or
jmp
insl
arpl
adc
nop
aaa
cmp
mov
jecxz
aaa
out
push
add
pop
cwtl
loop
jle
and
shll
rcl
xlat
mov
fwait
jg
dec
xchg
jbe
cwtl
xchg
jecxz
aad
lret
add
popf
loopne
sub
ja
mov
gs
out
jno
imul
cli
mov
pop
jae
cmpsl
fsubl
pop
jge
daa
and
dec
aam
div
ljmp
dec
lret
das
jno
sbb
xchg
imull
pop
cwtl
xchg
sbb
adc
andl
adc
and
dec
cld
push
push
out
mov
mov
sbb
notb
pop
cmp
inc
cmp
jp
fcomps
jb
scas
call
aad
adc
mov
push
push
lods
aam
shrl
add
add
pop
cmc
pushf
pusha
jne
lret
subl
mov
and
lahf
test
std
sub
xor
mov
push
fsubp
push
mov
push
sub
or
pop
inc
pop
repz
scas
rorl
bound
push
mov
mov
enter
scas
fcmovnb
xchg
out
movb
adc
push
pop
int
mov
mov
into
cmp
sbb
mov
inc
scas
psadbw
ficompl
sub
js
dec
in
jno
sbb
insl
ja
mov
sbb
and
mov
xor
dec
push
mov
push
pop
xor
adc
in
outsb
sbb
lahf
jb
xchg
mov
call
jo
ftst
mov
mov
in
lcall
fcoml
xor
push
xlat
out
shrb
push
jl
test
fldcw
adc
std
movb
fwait
dec
jo
fdivrl
xchg
movsl
sub
cmc
shlb
enter
pop
or
popa
pop
push
bound
push
in
fmull
lods
adc
jo
dec
addr16
or
into
jle
push
fisubs
out
in
in
push
inc
sahf
call
jecxz
xor
mov
mov
popf
jae
pop
add
lods
push
sub
aam
sbb
into
testl
cmp
cs
xor
leave
sub
cmp
mov
inc
cmc
xor
packuswb
int3
inc
lods
mov
sbb
dec
lods
pop
lock
int3
sbb
imul
xlat
dec
mov
and
add
cmp
lods
mov
dec
incl
push
ficompl
sub
sbb
les
and
outsl
cmpsl
ds
mov
mov
scas
mov
xchg
lds
jg
ss
scas
mov
sub
lahf
jbe
and
xor
inc
xchg
imul
inc
fisubrs
inc
adc
or
adc
inc
mov
dec
jecxz
xor
pop
outsb
imul
fisttpl
mov
inc
jne
cli
pop
mov
shl
repz
aam
fcomip
out
jl
xchg
sub
fmuls
push
mov
adc
sbb
jl
fidivs
jno
pop
loopne
cld
loopne
stc
lea
cmp
imul
xchg
jmp
jns
shr
pop
jo
fsubl
mov
mov
or
xchg
loope
add
pusha
push
push
sti
packuswb
push
mov
cmpsb
les
bound
jg
scas
adc
imul
jne
push
into
stos
push
mov
lcall
pop
rcl
dec
xor
iret
cmpsb
mov
xchg
mov
in
cld
push
repnz
jnp
fisubl
lock
dec
dec
pop
mov
sar
and
sbb
imull
stc
xlat
incb
jae
into
add
leave
iret
ja
dec
xchg
lret
jne
aaa
rolb
js
fstps
outsb
cltd
lds
mov
mov
push
icebp
sbb
xor
pop
cmc
jg
std
mov
xchg
idivl
mov
xor
icebp
outsl
add
ret
dec
xor
inc
gs
jmp
mov
xchg
clc
pop
sar
dec
int3
or
scas
inc
pop
bound
mov
and
rcl
adc
cmpsb
int
retw
outsb
mov
push
hlt
and
adc
enter
ja
fimull
jns
inc
jae
mov
push
xchg
test
sbb
mov
adc
or
cltd
inc
mov
dec
ds
inc
fwait
leave
and
pop
cltd
movsb
xchg
lret
lds
cltd
pop
fimuls
scas
test
stos
lock
add
dec
pop
jb
sub
cli
lcall
sar
cwtl
fisttps
cmp
xor
push
mov
enter
aaa
add
dec
int
add
adc
insb
scas
cmpb
fucom
xchg
fbstp
inc
cli
mov
and
and
lea
and
mov
jecxz
mov
lret
xchg
mov
lahf
xchg
lret
xchg
xor
out
inc
dec
ret
xor
clc
push
and
clc
sar
loopne
dec
pop
xchg
aam
add
int3
bound
or
xchg
pop
inc
dec
push
aaa
add
stos
cltd
outsl
inc
mov
mov
dec
push
test
xchg
test
movsl
xstore-rng
cmpsl
inc
add
add
jno
add
jns
jecxz
xchg
lods
mov
sub
cmp
mov
sahf
fdivrl
xchg
push
popf
push
movsl
loop
push
cwtl
cmp
mov
xor
and
pop
or
add
push
pop
lods
push
or
daa
in
pop
lock
xchg
icebp
sbb
mov
mov
cmp
test
subb
add
mov
stos
nop
out
mov
shrb
fsubr
push
in
shll
enter
or
mov
xor
dec
sbb
adc
lret
cmp
call
stos
aad
add
or
arpl
leave
out
shrl
push
repz
jns
push
lret
repz
subl
sbb
push
jb
jp
xor
icebp
in
pop
lcall
adc
popa
push
hlt
insb
in
mov
inc
in
inc
sti
dec
rcr
insb
shlb
pop
pop
dec
mov
mov
mulb
sub
or
ss
insb
xchg
adc
pop
cmp
repnz
fnstcw
push
out
imul
out
xchg
leave
stc
mov
dec
dec
push
mov
loope
add
adc
fcomps
scas
mov
mov
push
xchg
das
add
adc
mov
and
out
test
cmp
lcall
mov
fadd
enter
mov
inc
push
inc
and
or
pop
push
test
in
sbb
lods
push
or
stos
scas
int
xlat
test
std
lods
adc
stos
arpl
push
lods
adc
bound
push
fsubrl
jns
notl
push
test
aas
ret
and
pop
js
sbb
das
push
fxch
pop
sub
adc
cmp
sbb
inc
push
jns
mov
jne
pop
ss
lcall
cmpsl
gs
iret
stos
push
mov
outsb
inc
sbb
out
loope
loop
xchg
jae
xor
and
fsubl
jle
mov
dec
adc
xor
push
xlat
fs
jmp
fiaddl
adcl
lods
jns
inc
arpl
inc
nop
cmc
mov
xchg
sbb
cmp
nopl
cmpl
stos
pushl
test
mov
sbb
push
and
shl
repz
sbb
mov
and
jle
push
mov
jno
scas
mov
mov
je
fcmovnb
cmp
aam
aam
in
repnz
mov
add
or
push
and
push
pushf
push
pop
mov
adc
push
inc
ret
test
push
pop
out
loop
lea
jp
out
or
pop
out
inc
xchg
addr16
aaa
clc
sarl
insl
fmull
test
xchg
push
ds
lods
sub
fstp
jle
sbb
inc
sbb
dec
leave
mov
lock
js
mov
xchg
rcrl
fbstp
enter
mov
pop
jne
jmp
fcomps
or
add
xchg
mov
mov
rcrl
sub
jno
jp
mov
jecxz
sub
xor
fistps
mov
ds
fcmovnu
insb
dec
push
inc
xchg
xchg
addl
leave
mov
sbb
push
imul
mov
nop
inc
stos
insb
fnsave
pushf
js
lods
dec
xorb
fnstenv
outsb
clc
ds
aam
lahf
mov
pop
or
loop
lret
dec
fwait
rcrl
lock
ja
mov
add
jecxz
push
imul
fistps
xchg
sbb
jb
pop
lock
fimull
outsl
mov
repnz
jae
dec
mov
sbb
lret
iret
sarb
push
in
mov
add
xor
cmpsl
aas
xorb
out
mov
enter
adc
stos
nop
fcoml
xor
xchg
jl
mov
fcoms
aad
pusha
movsb
push
pop
aas
testb
int
xchg
xchg
sub
xchg
loopne
xor
aad
inc
dec
ret
outsl
cmpsb
lret
pop
lcall
movsl
cs
out
pop
loopne
je
mov
fstl
xor
pop
mov
scas
inc
lods
in
push
ret
and
in
inc
je
movsb
pop
test
mov
pushf
cmp
cltd
mov
gs
add
push
sbb
cltd
jge
mov
pusha
and
sub
insl
jp
sbb
sub
inc
rorl
cltd
or
fdivs
add
mov
xchg
std
inc
imul
dec
jo
cmp
ret
in
je
nop
push
sbb
cwtl
push
cmpsl
roll
push
xorb
xchg
sub
push
and
cs
test
mov
sub
stos
adc
js
shl
jae
scas
xorb
add
mov
sbb
out
dec
loop
jg
push
test
cltd
scas
sub
pushf
mov
sub
add
cmpsb
push
popa
jns
cli
dec
fidivrs
aas
aaa
or
mov
movsb
in
int3
mov
mov
lahf
ret
mov
addb
js
rclb
out
lret
or
sahf
push
pop
mov
andb
loop
iret
in
mov
movsl
je
xor
push
fs
adc
jo
les
add
aam
movsb
aas
aaa
in
inc
push
leave
mov
xchg
add
cmp
and
imul
push
loopne
clc
push
push
lds
push
and
push
jmp
cmp
xchg
imul
icebp
inc
cmc
lret
jl
enter
enter
and
mov
pop
jg
repz
sahf
aam
push
push
aas
mov
roll
enter
in
lods
ret
push
mov
loopne
inc
sbb
rcll
popf
cmp
jnp
lods
push
test
jns
mov
mov
inc
cmp
hlt
jl
inc
push
subb
push
jnp
sbb
push
dec
fistl
out
loop
push
fsubrl
jmp
sbb
xchg
mov
loope
cmp
dec
js
adc
pop
push
loope
add
test
add
lret
ret
dec
and
lret
cmp
push
lods
and
imul
lret
icebp
jecxz
mov
sub
lahf
xchg
shl
push
add
inc
add
sahf
push
mov
cmp
adc
insb
cmpsb
mov
insb
xchg
mov
lahf
cmpsb
movsl
or
xor
mov
pop
lret
cmpsl
out
imul
pop
cmc
mov
icebp
mov
cmpsl
xchg
and
lret
mov
dec
push
xor
mov
sbb
cmpsb
pop
ds
or
into
insl
inc
loopne
clc
add
push
movb
add
mov
push
scas
pop
inc
insb
out
jno
jne
and
sahf
loope
sahf
jno
nop
push
xchg
stos
sub
loopne
pop
enter
lock
sub
mov
xchg
add
jb
sbb
sub
pop
and
aaa
daa
nop
mov
push
mov
mov
add
mov
inc
push
jbe
aam
insl
lock
lret
xchg
jecxz
scas
mov
mov
sbb
dec
pop
movsb
jbe
movsb
ficoms
lea
mov
push
arpl
jns
mov
shrl
xor
aaa
out
movsl
add
dec
inc
mov
mov
clc
scas
mov
loopne
in
jge
scas
jmp
mov
fisttps
jae
scas
mov
pop
push
mov
rcrl
mov
add
js
ss
or
push
mov
pop
fcmovb
push
adc
stc
insl
jl
and
jmp
or
test
aas
push
ds
lret
xlat
or
fisubs
or
mov
push
adc
xchg
mov
sbb
and
cmp
es
ljmp
dec
sbb
mov
out
int3
jge
jge
and
outsl
pushf
fistpll
xor
mov
dec
sbb
jbe
stos
gs
add
sbb
pop
mov
pushf
xchg
pop
mov
xchg
sub
loopne
pop
push
lahf
int3
fadds
mov
int3
cmpsb
popa
lods
mov
xchg
lcall
icebp
mov
jg
scas
cmp
stos
xchg
xchg
jecxz
mov
icebp
or
jnp
stos
testl
aaa
stc
addl
cltd
loop
shlb
or
mov
mov
pop
jbe
imul
lods
pop
das
push
mov
in
subl
dec
xor
mov
push
jnp
jbe
out
xor
movsb
xor
push
pop
mov
or
xor
stc
or
imul
mov
dec
mov
mov
gs
ret
pop
fiadds
mov
test
std
sub
iret
mov
stos
push
icebp
mov
fisubl
cmpsb
and
or
pop
push
fiadds
in
mov
add
hlt
pop
mov
jmp
dec
xchg
adc
into
and
adc
push
mov
lds
js
pop
inc
xor
mov
flds
cltd
movsb
jge
pushf
push
incl
ljmp
outsb
xor
cmp
movnti
inc
orl
jo
sbb
shl
push
imul
xor
adc
mov
in
push
shl
cmpsb
test
mov
pushf
out
stc
pusha
ljmp
jl
adc
or
pop
xchg
dec
xor
das
mov
cmpsl
cld
mov
xor
push
xor
std
inc
jb
pop
ret
sbb
sub
mov
push
or
push
inc
fistpll
dec
out
mov
cmpb
mov
push
adc
push
sbb
dec
pop
jle
cwtl
aas
bound
add
lea
jns
xorl
push
mov
std
sti
add
cmpsb
stos
dec
in
mov
sbb
mov
mov
jno
movsb
rcl
or
pop
std
mov
iret
and
push
imul
aad
mov
mov
push
xor
rolb
test
jbe
scas
and
aad
sub
scas
and
test
mov
xchg
inc
dec
test
sub
out
xor
call
aas
mov
loopne
adc
fstl
ficomps
out
push
mov
pusha
pop
icebp
test
lahf
add
je
repnz
movsb
jmp
pusha
out
lret
sbb
push
popf
mov
fimuls
push
xchg
dec
xor
mov
ret
xor
movsl
int3
je
lahf
push
lret
jl
decl
jmp
fdivrp
aas
cmp
fsubs
aad
idivb
cs
loop
pop
data16
push
inc
push
jne
daa
aas
bound
dec
insb
xor
mov
sbb
movsb
icebp
adc
push
rcrl
ret
adc
or
out
call
xchg
arpl
push
dec
lahf
or
add
lock
xor
fs
lods
mov
jb
jp
rcll
es
and
sti
adc
pop
stos
cmp
xchg
loopne
or
ret
add
lret
movsb
jp
sub
xor
inc
or
fdivrl
sbb
and
jnp
pop
ljmp
jp
lahf
cltd
push
daa
orb
add
push
adc
dec
mov
cltd
loopne
leave
xchg
in
jecxz
movsl
lret
cmpsb
imul
adc
iret
rcr
dec
lods
dec
push
das
ja
mov
imul
jp
pop
arpl
ds
pop
jns
lret
jl
push
xchg
into
mov
or
bnd
cmc
mov
dec
jge,pn
cmp
mov
fidivl
xor
fldcw
sbb
inc
jbe
and
mov
push
adc
xchg
loope
rcrb
mov
dec
mov
push
adc
pop
call
and
push
xchg
jl
neg
mov
mov
cmpsb
cmpsl
xchg
inc
call
xchg
loop
add
cli
adc
hlt
aas
iret
in
push
push
adc
int
adc
lret
add
cltd
ja
icebp
push
dec
xor
int
mov
or
pusha
mov
in
inc
aas
mov
jnp
lods
fs
mov
lds
jbe
testb
xchg
repz
pop
popf
jne
dec
adcl
pop
les
xchg
cmpsl
popf
jmp
fs
jp
mov
push
sbb
or
dec
aam
jecxz
mov
into
cmp
imul
sbb
sti
mov
in
mov
push
ret
fwait
neg
cltd
sub
or
cwtl
dec
out
jecxz
and
xlat
push
dec
fnsave
outsl
cli
cmp
addr16
cmp
cmpsl
and
push
dec
cs
popf
mov
mov
jecxz
test
bound
std
add
jecxz
sub
xchg
inc
lods
es
xchg
mov
sbb
rcrl
push
imul
sahf
and
das
dec
mov
test
sub
into
int3
jae
jbe
xor
int3
mov
fsubrl
subb
gs
aad
cmp
push
add
popa
xchg
lock
cmp
mov
scas
xchg
lock
xchg
xor
scas
aam
sub
push
adcb
insl
jmp
aam
mov
push
cmpsb
cmp
cmp
push
int
xor
aas
lods
adc
cmp
sti
nop
xchg
jnp
mov
add
popa
cmp
into
dec
les
xchg
push
scas
jnp
sub
shll
jae
pop
and
adc
push
jae
shr
test
daa
jbe
pop
sarb
test
jbe
xor
test
iret
lea
scas
and
add
inc
jae
or
xor
jmp
push
jmp
mov
outsl
mov
ljmp
adc
and
or
sub
in
subl
pop
cmp
jae
movsl
cmc
aam
test
icebp
jl
mov
int
or
sbb
sub
push
or
dec
xchg
jg
push
mov
jne
fwait
ja
cmpsb
hlt
add
nop
in
sub
cmpsl
cwtl
push
leave
cltd
orb
lret
jmp
lea
sbb
outsb
mov
cmp
pop
popl
and
push
mov
jmp
jo
fildll
inc
ljmp
movsl
mov
out
push
fcomps
xchg
lcall
data16
dec
ret
fists
cmp
sar
sub
adc
inc
cmp
orl
mov
push
stos
ljmp
inc
mov
mov
clc
icebp
aaa
test
stos
fsub
pushf
jnp
mov
cli
mov
dec
inc
xchg
into
test
cmp
mov
cmp
jbe
call
jb
xchg
loope
xchg
jmp
mov
jae
shlb
ja
cmp
jbe
pop
sahf
xchg
jp
std
stos
movsb
mov
add
jo
pop
inc
mov
lods
pop
das
ret
mov
mov
mov
sbb
inc
mov
and
push
cmp
inc
pop
sub
and
inc
les
shrl
daa
pusha
in
jnp
imul
test
aaa
pop
pop
subb
adc
jb
ret
int3
daa
cmc
jbe
dec
movsb
fadds
test
push
xchg
inc
pop
pop
cwtl
sub
adc
adc
xchg
stc
loop
dec
hlt
iret
std
xlat
aad
push
fidivs
xchg
mov
push
std
cwtl
pop
xchg
pop
fbld
aas
bound
sar
lea
mov
shl
xor
push
add
les
les
stos
sbb
mov
push
add
popa
dec
mov
repz
cld
mov
int
xchg
cmp
imul
or
mov
mov
xor
iret
jge
dec
and
and
jg
ret
xor
push
in
jnp
and
xchg
rorl
sarb
inc
imul
arpl
mov
sarl
pop
jno
pop
xchg
mov
fcoms
or
in
xchg
aad
daa
dec
push
sti
inc
mov
in
imul
dec
std
xchg
xchg
fcmovnbe
xchg
shll
aad
pop
mov
push
adc
cmpsl
loop
stos
jecxz
movsl
fsubrs
imul
insl
out
insb
adc
xchg
loope
mov
mov
sbb
fwait
sbb
pop
or
ror
bswap
mov
dec
sbb
xor
mov
mov
fcomi
xchg
mov
pop
ret
and
scas
and
jne
cmpsl
cmp
mov
mov
int
push
je
jae
dec
and
aad
jnp
jge
xchg
sti
jns
aam
cltd
repz
fstps
nop
cmp
arpl
ss
and
cmp
mov
cwtl
inc
adc
popa
je
xor
inc
in
pop
jecxz
fwait
orb
fucom
jae
add
loopne
inc
ljmp
xor
dec
lds
sub
lods
push
aas
push
inc
inc
test
sub
call
shrl
inc
stc
pushf
mov
popf
or
cmp
fisubrs
insb
jecxz
pop
mov
push
jae
xor
sarb
xor
mov
in
and
sahf
int
push
out
push
sar
push
cmpsl
dec
cli
mov
jae
aam
adc
sub
movsl
add
or
es
lock
les
cmpsb
pusha
mov
addr16
stos
jne
testl
and
cmp
lret
nop
cmp
out
imul
idivl
xchg
push
gs
cwtl
push
fcompl
push
cwtl
mov
roll
inc
add
mov
cmpsb
dec
fnstcw
dec
nop
mov
and
fistpll
in
sbb
lret
lahf
sub
lret
mov
xchg
fadds
call
imul
clc
ja
fsubs
and
lea
mov
adc
movsl
jp
popf
jnp
sub
test
outsl
shll
out
jg
popa
or
dec
in
ret
call
imul
xor
add
insb
ljmp
add
leave
fucomp
mov
adc
mov
sbb
in
mov
adc
mov
add
es
out
cmp
mov
adc
shrl
imul
mov
call
mulb
sbb
push
es
into
mov
call
xchg
jb
xchg
mov
xor
dec
push
loopne
or
popa
mov
stc
mov
repz
push
test
pop
push
xchg
or
leave
adc
sti
shr
jo
add
sahf
hlt
xlat
mov
mov
sbb
and
mov
mov
out
pushf
insb
dec
pop
xor
mov
in
cmp
sub
pop
cs
mov
jmp
insb
into
ret
lret
xchg
arpl
add
add
mov
lock
mov
stos
je
movsl
in
xor
pusha
push
mov
lret
sbb
dec
sbb
mov
repnz
mov
mov
push
and
clc
repz
xchg
imul
mov
sbb
mov
fdivrs
cmp
mov
out
les
push
shlb
shlb
imul
push
dec
fsubrs
sub
jno
mov
or
cmp
arpl
sbb
xor
cmpb
and
mov
gs
lea
adc
jle
mov
call
lahf
or
xor
loope
in
imul
pop
xor
pop
pop
xchg
lods
js
popf
mov
mov
add
loope
out
stc
fcomp
mul
sub
cmp
addr16
in
insb
xchg
js
lcall
push
or
lret
bound
dec
mov
cmp
insb
push
aas
jle
push
cmpl
fistpll
ljmp
pop
call
mov
adc
and
repz
cmp
push
aad
scas
pop
xchg
arpl
jno
cs
xor
add
adc
fistpl
dec
push
add
loop
mov
in
inc
push
jle
mov
jo
repz
cmpsb
dec
sahf
or
aam
iret
cmp
lcall
cmp
push
jmp
test
xchg
sub
dec
push
push
pop
out
insl
pop
je
adc
inc
out
dec
dec
cmpsl
add
mov
aam
lds
mov
arpl
mov
cltd
repz
jp
inc
rcrb
mov
popf
xorb
dec
or
fstl
adc
insl
pushf
add
rorb
mov
loop
add
cmp
lea
jecxz
lods
sub
push
icebp
ss
shlb
jmp
and
push
jle
aad
sbb
out
test
dec
cmc
sbbl
lret
shll
int
sub
ficomps
xor
lock
aas
push
pushl
sbbl
gs
adc
lods
and
add
pop
jo,pn
mov
mov
cli
cli
jg
cmp
jmp
lock
ss
enter
test
mov
pop
pop
jle
xchg
test
adc
int3
xlat
out
cmpsl
rcrl
in
cmpsb
fldl
mov
pop
rcrb
frstor
pop
clc
aaa
loop
ret
inc
and
push
cltd
jecxz
jnp
xchg
mov
mov
push
es
push
sub
pop
cmp
fmuls
add
clc
rolb
ja
add
jno
and
int3
clc
and
sub
add
test
fdivs
xor
call
mov
in
mov
mov
xchg
xor
mov
sub
cmp
sahf
push
mov
iret
insl
enter
xchg
mov
je
cmpsl
dec
fsubp
inc
adc
inc
pop
cmpsb
fwait
fadds
sbb
push
jg
push
push
mov
ret
ljmp
in
lea
ss
dec
mov
mull
lock
or
movsl
insl
inc
in
mov
lock
or
sub
mov
xor
loopne
xchg
jle
push
push
adc
sbb
shlb
xchg
iret
and
rorb
push
aaa
adc
and
pop
ja
andl
push
and
js
cwtl
mov
dec
or
sbb
shl
fmull
rolb
sub
xor
ljmp
gs
mov
adc
int
dec
adc
jle
add
out
cmpsl
sbb
xor
es
in
xchg
addr16
sbb
xchg
sub
sahf
ljmp
scas
insb
shrl
pop
dec
test
rcrb
je
mov
sbb
dec
push
lods
aaa
sbb
mov
push
lea
add
ret
in
dec
clc
push
push
and
sbb
enter
jmp
out
int
jns
fists
sub
hlt
mov
ret
xchg
dec
push
imul
in
adc
sbb
cmp
jg
cwtl
shlb
insb
xchg
push
pop
popa
das
xor
pop
outsl
cmp
xchg
mov
gs
cmpsl
arpl
sbb
sbb
out
sub
in
pop
loope
push
mov
mov
enter
mov
aam
and
test
sbb
add
add
mov
shl
mov
test
cmp
aad
mov
cmpsl
test
or
and
cmp
mov
cmp
fs
push
dec
jne
shl
mov
pop
popf
sbb
xor
sahf
push
mov
sbb
cmpsb
stc
mov
popf
sti
xor
push
inc
test
dec
or
out
jg
adc
mov
sarb
adc
pop
sbb
push
stc
sbb
xchg
repz
inc
insl
daa
in
push
loop
enter
add
mov
lea
pop
add
or
sbb
and
mov
jle
jnp
or
add
test
cld
imul
xchg
daa
and
shrb
movsb
mov
cmp
dec
test
mov
inc
sbb
and
and
push
ds
addb
in
insb
and
stos
in
and
mov
cmp
mov
pop
push
mull
push
frstor
add
in
es
aam
add
mov
mov
dec
push
fisubl
or
xchg
lret
dec
mull
inc
gs
cltd
adc
dec
inc
lods
ss
stos
fstp
pop
scas
test
pop
and
test
ret
jge
xchg
jno
add
pushf
sub
sub
clc
pop
stc
sub
rorb
sarb
cld
arpl
cli
test
dec
jnp
mov
fs
lret
push
mov
dec
fwait
shll
jo
adc
inc
mov
loopne
mov
dec
ljmp
cmpb
seto
aas
jecxz
int
dec
sbb
shll
cmp
jl
pusha
mov
loop
mov
notb
jo
mov
sub
add
imul
iret
inc
sbb
push
dec
pop
test
sbbb
fxam
jae
fwait
push
cltd
mov
cwtl
call
cltd
data16
ret
cmp
push
enter
push
cwtl
jae
sarl
xchg
movl
mov
rorb
pop
mov
mov
adc
out
jae
insb
adc
inc
imul
xchg
pusha
mov
data16
inc
clc
sarb
loopne
out
pusha
push
outsl
fdivrs
push
adc
mov
mov
inc
adc
pop
mov
pop
jne
sbb
sub
jecxz
decl
fwait
scas
cwtl
ds
push
inc
and
cmp
mov
or
lret
xor
push
std
test
es
jmp
out
lods
cmp
fnsave
movsb
xlat
mov
lds
xchg
jns
pop
or
push
lods
cld
dec
mov
mov
pusha
dec
mov
jns
dec
test
sarl
xchg
adc
sbb
sub
int3
xlat
jmp
jbe
clc
mov
jp
in
stos
test
cmc
icebp
data16
push
adc
inc
mov
imul
dec
and
movsb
and
cmp
push
adc
std
sub
dec
xchg
cmp
lods
loope,pn
push
in
cwtl
cltd
or
lock
fxch
push
loope
add
xor
mov
inc
addb
pushf
or
xor
dec
sar
jp
push
mov
dec
pop
cmp
shll
stos
cli
and
xor
fs
xor
fs
repnz
mov
xchg
filds
cmp
mov
inc
popf
push
dec
rolb
add
cmp
leave
incl
push
data16
data16
sbb
sub
enter
mov
push
jno
or
lock
jmp
xchg
push
xchg
loope
jb
jnp
and
dec
stc
push
mov
imul
sarb
jmp
jg
lret
aam
mov
mov
ljmp
jp
sub
pop
jns
cmp
je
xor
inc
notb
imulb
or
xlat
mov
mov
ljmp
in
inc
pop
ja
std
inc
and
test
imul
jo
aaa
sub
scas
in
xchg
mov
mov
pop
lcall
cmp
loopne
ds
pop
or
and
inc
jb
xchg
call
popf
sbb
stos
lcall
enter
inc
sbb
sub
mov
pop
imul
jge
mov
mov
mov
or
mov
jecxz
sub
call
lds
and
out
hlt
pop
and
pop
bswap
aam
fcoms
push
xchg
push
mov
adc
jg
xchg
repz
sti
lock
mov
fimull
xchg
sti
jp
fidivl
xor
aaa
std
sbb
daa
inc
jle
and
movsl
xchg
popa
imul
sti
mov
sub
fwait
les
adc
or
adc
arpl
outsb
mov
inc
dec
mov
test
lret
jnp
cmp
stc
bnd
push
sbb
mov
xor
jl
outsl
rclb
push
jmp
xor
jne
pop
add
andl
fadds
sbb
xchg
inc
mov
adc
or
enter
int
push
dec
mov
jp
sbbl
or
mov
jnp
jb
sbb
je
xor
xchg
xchg
push
cmp
pop
mov
int3
jge
sbb
mov
aad
test
jmp
aam
icebp
subb
pop
mov
into
lea
cmp
jge
dec
rcrb
mov
jmp
mov
fistpl
sbb
cmp
push
push
sbb
cmp
lods
lcall
cmc
add
adc
ret
in
sbb
sbb
jp
fistpl
fidivs
shll
dec
incl
out
mov
inc
dec
testb
stos
sbb
loop
mov
stos
or
test
std
add
cmp
mov
aam
clc
nop
pop
pop
push
shl
rolb
xchg
out
jae
dec
dec
in
js
aam
mov
xchg
popa
cmpsb
iret
dec
cli
inc
in
sbb
arpl
dec
fwait
fs
outsb
mov
xchg
pop
adc
rcl
test
addl
pop
dec
std
adc
frndint
pop
pop
popf
fwait
pop
sbb
shlb
or
dec
je
and
test
push
jmp
ljmp
subl
dec
outsb
lret
test
out
sub
fsubrp
loop
sti
jae
cmp
testb
loope
loopne
xchg
mov
fs
lcall
ficompl
xor
sbb
out
or
add
sarl
dec
mov
mov
insb
push
xchg
lret
out
out
inc
in
mov
xor
jmp
enter
or
loope
cwtl
aas
jmp
xorl
or
push
andl
sub
sub
mov
pop
aas
mov
out
lds
cs
js
adc
in
into
fidivs
scas
in
pop
inc
sub
pop
cmp
sub
push
inc
pop
adc
mov
push
outsb
cwtl
xorb
push
loop
xor
add
movsl
fcomip
pop
in
ljmp
xchg
subl
ss
mov
dec
pusha
in
iret
orl
jb
cmpsl
push
pop
sub
jmp
mov
push
test
mov
and
lcall
sub
jle
adc
lea
and
aaa
out
insb
repz
dec
pop
lock
data16
sub
sub
add
mov
je
aam
aad
ret
mov
dec
mov
in
mov
mov
outsb
add
stos
mov
mov
pop
lods
cwtl
jo
sub
popf
jmp
push
sbb
clc
rcl
push
rcrl
insb
xchg
mov
fnstenv
sbb
loope
mov
jmp
mov
cwtl
ja
pusha
stos
pop
mov
dec
ja
sbb
push
mov
ret
jle
push
frstor
sbb
insl
sbb
add
mov
les
les
mov
shl
pop
test
cmp
mov
and
add
mov
jo
je
je
xchg
sub
jae
imul
test
inc
cmpsl
sbb
out
das
fmul
push
xchg
mov
lds
gs
imul
dec
lahf
push
jne
mov
add
and
mov
jnp
scas
xchg
fldl
mov
jb
loop
jbe
add
xor
inc
jg
pop
stos
mov
jnp
gs
jge
imul
sbb
addr16
outsb
push
ds
daa
pop
lods
ficoms
cli
dec
fbld
jnp
jbe
loopne
mov
inc
mov
insb
xchg
bound
adc
or
cmp
cmp
in
mov
push
inc
cmp
mov
popa
mov
inc
xchg
jp
iret
lret
push
iret
jmp
push
cmp
sti
jne
sbb
repnz
or
mov
mov
popa
or
xor
or
pop
add
mov
sbb
dec
xchg
movsb
lods
leave
sbb
mov
gs
xorl
pop
xor
pop
xlat
les
in
lret
repz
in
pop
jl
push
mov
sub
pop
xchg
shl
dec
neg
mov
cmpb
pop
pop
xor
adc
mov
sub
clc
movsb
xor
aad
out
pop
outsb
dec
or
jl
ret
loope
lea
ret
pop
inc
pusha
loopne
dec
or
fidivl
jb
cltd
inc
es
je
sub
mov
add
xor
cmp
add
in
inc
shll
jns
je
in
hlt
push
xchg
cli
sarb
stos
mov
or
xor
sub
cmp
insl
cmpsb
ljmp
dec
xchg
cltd
and
sbb
js
in
mov
sbb
pop
jne
imull
fstpl
sub
pop
fsubrl
adc
pop
push
je
ss
cmp
loope
add
jb
jle
mov
or
lcall
and
popa
mov
adc
cmp
xchg
stc
mov
adc
adc
and
xchg
int
fs
gs
arpl
aad
jmp
adc
out
cs
or
pop
jb
mov
ss
mov
push
xchg
inc
in
jecxz
pcmpeqw
js
popa
push
ss
fists
aam
mov
mov
out
stos
arpl
jp
jo
pop
push
loop
dec
mov
sub
out
add
loope
pop
ds
dec
xlat
das
mov
jo
mov
ds
and
mov
mov
add
and
adc
xor
sub
xor
dec
sbb
roll
fcoml
jg
inc
in
cmc
fimull
push
xor
jle
js
push
pop
rcrb
lret
lods
scas
xor
cmp
ja
or
out
setnp
and
sub
hlt
adc
mov
mov
lret
cmp
xchg
repz
in
and
inc
es
cmpsb
mov
pop
mov
ja
dec
test
cmp
in
mov
lods
clc
cmpsl
pop
imul
ret
gs
mov
or
push
pop
mov
sbb
popa
out
cmp
and
mov
mov
jecxz
fs
mov
dec
push
sbb
fbstp
or
mov
nop
mov
stos
pop
les
dec
xchg
mov
clc
xchg
stos
fsubl
mov
stos
imul
rolb
fs
ret
bound
fcoml
xchg
xorl
mov
pop
and
jns
cmpsl
adc
outsb
insb
add
aas
xchg
and
push
ret
bound
incb
loopne
adc
jne
jo
pop
and
aad
in
xor
inc
jo
sbb
das
sub
push
cmpsb
cmp
sub
fwait
jo
cli
pusha
push
clc
xchg
and
adc
call
fwait
push
xchg
fs
movb
xlat
push
popa
push
and
push
cmpsl
and
jp
fmul
inc
mov
sub
insl
pop
test
mov
cmpsb
inc
jg
stos
sub
stc
xchg
mov
roll
xchg
loopne
mov
lcall
stos
aad
fistpll
inc
movsl
lock
pop
pop
push
clc
or
push
jle
out
popa
sbb
mov
loope
loope
sbb
sub
jb
mov
imul
adc
fucomp
fmull
jl,pn
cmp
stos
rcrb
lods
or
icebp
and
mov
int3
ds
std
adc
mov
test
ret
adc
icebp
mov
mov
aad
sbb
cli
dec
mov
out
jnp
xchg
push
mov
mov
mov
in
pusha
aam
and
pusha
lret
fsubs
stos
dec
inc
add
pushf
mov
push
mov
sub
jbe
cltd
push
arpl
leave
push
test
movsl
and
mov
in
xchg
mov
xor
stos
sarb
into
jns
push
xchg
and
sbb
xchg
test
mov
fidivrl
add
add
lods
pushl
cmp
push
out
and
jecxz
inc
or
pop
lods
std
xchg
inc
xchg
or
sbb
nop
or
push
add
or
in
out
pusha
fadds
shr
jge
sub
pop
aam
stos
loopne
scas
decl
rcrb
jae
jg
mov
aam
ja
mov
xchg
ja
cltd
pop
mov
sub
jp
dec
push
mov
cmpsb
repnz
inc
fs
data16
cmc
mov
mov
je
inc
sub
xchg
nop
xchg
outsb
or
imul
pop
mov
push
sub
loop
insb
call
jge
lock
inc
pop
mov
sub
je
mov
leave
cmpsl
cmp
mov
int3
add
mov
sar
pop
xchg
popf
rclb
fmuls
aam
push
push
sbb
push
out
ja
je
enter
mov
outsl
scas
push
jge
std
sub
rcrb
xchg
pop
cmp
clc
pop
fbstp
scas
es
lock
jns
ret
push
testl
iret
cmp
pop
mov
aad
xor
lcall
pop
push
inc
pop
fisubl
imul
aam
sar
les
xorb
std
xchg
jle
negl
fwait
imul
sbb
xchg
mov
testb
es
lods
pop
aaa
lss
pusha
sub
lods
mov
in
mov
xor
es
and
dec
shlb
fsubr
out
bndstx
mov
test
loope
shr
and
sbb
xchg
sub
sbb
stos
imul
inc
cmp
sti
movsb
mov
je
pop
pop
jne
sbb
pop
sbb
dec
enter
in
cmc
rol
cmp
popf
inc
xchg
and
push
test
lcall
mov
pop
push
adc
sbb
mov
sbb
popf
in
jnp
mov
enter
stos
mov
dec
jl
mov
and
jbe
sub
xlat
xchg
test
imul
ja
or
mov
pop
loop
mov
aad
mov
push
sarl
xchg
je
sbb
xor
sbb
jge
out
mov
loop
push
push
test
inc
out
inc
sbb
es
fstpl
insl
adc
sti
pop
out
int
push
out
or
push
shlb
jbe
xor
inc
inc
xor
cmp
mov
cmp
rolb
in
inc
les
cltd
stos
xor
or
xchg
pop
je
rclb
dec
in
imull
in
ljmp
sbb
punpckhwd
push
in
outsb
or
jmp
loop
mov
cmp
pop
lods
xchg
cli
hlt
aas
jnp,pt
jno
pop
aaa
and
je
push
loope
cld
inc
mov
pop
and
jmp
fwait
or
loopne
pop
mov
rclb
or
xor
testl
orl
outsb
out
mov
ret
add
mov
roll
lahf
add
inc
jge
cwtl
mov
movsl
les
xchg
push
jo
add
add
cmpsl
dec
cmpsb
push
jecxz
xor
or
rcr
add
in
mov
lds
sbb
arpl
add
jecxz
sub
iret
cmpsl
sbb
vmaxss
out
out
cmp
push
loope
and
aas
mov
pop
lock
fsubs
ficoml
lods
jg
dec
je
mov
sub
and
adc
cmp
xchg
fs
mov
mov
adc
shlb
jns
int3
sub
jge
test
mov
ds
movsb
mov
scas
mov
cs
rorb
mov
and
pusha
fidivrs
jo
ja
mov
stc
mov
inc
push
mov
adc
cltd
clc
jl
dec
sbb
lods
sbb
jnp
jns
arpl
jb
nop
ja
jae
and
xor
cli
out
adc
push
push
imul
loopne
cld
jmp
insl
jg
shl
cmpsb
test
xor
inc
data16
lcall
icebp
adc
aad
out
sbb
push
loope
das
push
cli
clc
iret
mov
cmpsl
pop
sbb
adc
cmpsl
leave
in
test
jp
mov
out
sbbb
adcb
cmp
mov
test
aas
sbbb
jae
mov
pop
adc
sbb
jp
dec
adc
jno
test
pop
loop
lock
mov
stos
mov
je
int3
icebp
shll
jbe
dec
daa
mov
mov
pop
xorl
dec
jb
jae
sbb
sub
sub
std
test
xorl
or
mov
mov
andl
xchg
or
mov
xor
icebp
xor
imul
pushf
inc
mov
xor
jae
dec
jnp,pn
mov
mov
add
out
sbb
into
cli
mov
mov
in
mov
mov
adc
ss
popf
lods
das
mov
jns
iret
lcall
sti
jmp
cmpl
mov
push
cmp
ret
fsubrl
sbbb
or
or
dec
cld
test
decb
add
sub
cmpsl
push
mov
sub
ja
in
and
jl
arpl
insl
ret
or
mov
loop
sbb
test
mov
mov
movsb
ljmp
cwtl
add
sbb
out
cmp
mov
mov
cltd
and
sbb
mov
cli
inc
pop
or
sbb
jge
inc
mov
sarl
lods
pushf
xchg
cmp
cmp
jnp
cld
pop
push
ss
ja
lods
lods
dec
das
lret
pusha
outsl
push
fcoml
pop
fwait
outsb
dec
pushf
mov
inc
or
adc
jne
mov
pop
cmp
push
mov
jb
lret
imul
xchg
jb
cmp
push
mov
lret
adc
aad
cltd
scas
xor
movsb
rcrl
and
sbb
aad
mov
push
push
dec
sub
aam
or
ljmp
arpl
ss
les
mov
lcall
mov
dec
bound
fbld
fmul
cmp
lcall
outsl
add
mov
sar
xchg
adc
iret
iret
out
inc
stos
cmc
xchg
xchg
cmc
imul
test
dec
paddq
dec
push
daa
push
scas
sbb
dec
roll
add
dec
or
insl
popf
push
pop
loop
sbb
testb
cmpb
ja
add
jbe
mov
test
jns
int3
mov
fisubl
mov
cs
push
in
in
adc
js
gs
std
adc
adc
movsb
mov
aaa
xchg
sub
scas
xor
push
xor
push
cwtl
insl
movsb
movsb
fsubrl
je
fmull
adcb
mov
mov
daa
mov
jge
das
enter
iret
jnp
xchg
in
shrb
pop
pop
jb
lahf
dec
je
sub
fxch
aaa
int3
ljmp
leave
je
sahf
mov
mov
in
fs
xchg
fiadds
add
mov
repnz
sub
push
pop
lea
ret
pop
inc
push
cmp
and
inc
jge
insb
icebp
insb
lds
int
hlt
mov
rcrl
adc
xchg
sub
xchg
scas
leave
or
pop
xlat
pop
mov
mov
fidivrl
or
fprem
test
fimuls
sub
out
xchg
mov
xor
mov
dec
movsb
pop
jbe
jo,pt
mov
push
stos
push
xor
xchg
adc
push
mov
ds
into
icebp
in
mov
cmpsl
inc
call
adc
xchg
mov
orb
js
not
dec
clc
push
pop
repnz
xor
mov
nop
rclb
xor
loop
mov
dec
cmp
pop
popl
je
or
orl
js
mov
or
sbb
lods
sub
jl
mov
idivb
enter
adc
mov
add
dec
push
ret
repnz
enter
addb
cmpb
jle
jne
loop
mov
add
out
in
push
or
adc
xchg
mov
dec
add
mov
aaa
adc
pop
dec
ret
jnp
xchg
into
jae
cli
pop
cmpsl
cmpb
arpl
shl
inc
jecxz
add
loope
sub
scas
xchg
pop
push
and
outsl
jg
js
or
inc
sub
push
xlat
add
push
jl
iret
jg
sbb
adc
mov
jl
mov
push
adc
mov
stos
add
ljmp
jne
daa
sub
out
icebp
mov
jmp
stc
mov
gs
mov
adc
xlat
scas
dec
lret
lods
adc
into
pusha
js
cmp
mov
mov
bound
inc
das
shl
cmpsb
adc
add
sub
bound
addr16
inc
mov
ja
xor
cld
cmp
in
sub
jae
inc
add
aad
je
lods
inc
and
sub
lock
dec
mov
sti
jp
jl
out
rorb
adc
fisubl
pusha
mov
idiv
mov
cmpsb
jns
lahf
inc
adc
leave
fnstcw
push
sarl
inc
into
out
outsl
xlat
cld
mov
lods
or
cmp
out
pop
sahf
and
out
push
xchg
ljmp
test
and
pop
dec
aaa
lcall
adc
push
enter
ljmp
clc
mov
xchg
jnp
pop
mov
jg
or
inc
int
int3
push
lret
sub
leave
dec
lcall
xchg
jp
loope
sar
inc
or
stc
movsb
out
add
ss
push
test
lods
fstl
mov
stc
pop
adc
imul
inc
fsubrp
and
scas
adc
pop
xchg
xor
cmp
adc
in
or
fwait
fwait
or
outsl
mov
test
js
mov
and
cmpsb
add
movsb
les
and
loop
rdmsr
add
jno
pusha
loop
dec
cmp
dec
bnd
and
shrb
cwtl
stc
xchg
outsb
dec
scas
cmpsl
xor
neg
push
push
arpl
push
aad
inc
rcrl
rol
imul
push
sbb
lock
fisubrl
cld
test
hlt
ds
inc
iret
ds
xlat
loope
jecxz
std
mov
dec
daa
xor
incl
lods
pop
fmull
test
dec
fs
xlat
and
inc
jge
sub
jo
xor
cmp
fwait
fstp
scas
dec
outsl
shll
mov
sub
inc
loope
pushf
jmp
lods
add
arpl
rolb
mov
dec
adc
repz
in
aad
sbb
jp
xchg
or
enter
movsl
jbe
add
movsb
scas
lret
fadds
fsub
lods
aas
cmp
jl
push
xor
sbb
mov
lods
mov
rcrl
jecxz
mov
aam
in
mov
sarl
mov
xlat
out
mov
lcall
pop
test
ja
cwtl
mov
xchg
test
call
cmp
inc
bound
sarl
test
dec
and
push
and
xchg
cmp
adc
add
mov
sbb
std
cmpb
fildl
scas
pop
imul
sti
jns
add
inc
fs
aad
sub
jns
sub
fs
aam
pop
test
cmpsb
mov
xor
mov
pop
jo
jae
ss
sbb
test
mov
jne
cmp
mov
jl
and
iret
jmp
or
and
ret
or
ja
adc
sbb
mov
or
lea
cmp
sub
out
ljmp
adc
push
or
add
or
loop
jno
or
inc
fldenv
push
sub
cmp
inc
pop
xlat
mov
outsb
movsl
jns
out
and
inc
xchg
out
mov
mov
pop
pop
sbb
add
imulb
push
int3
cwtl
add
ret
jnp
cmpsl
stc
hlt
andb
adc
dec
addr16
frstor
push
pop
movsb
sbb
stc
dec
popl
imul
out
and
xchg
movsb
and
push
lds
test
jge
shlb
adc
negl
outsl
scas
xor
cmp
xlat
mov
mov
dec
cltd
adc
nop
lcall
test
stos
mov
aad
mov
sbb
pop
leave
loopne
jmp
cmp
outsl
pop
out
nop
xchg
insl
insl
push
popa
pop
jl
jecxz
sub
movsb
inc
loop
mov
sbb
adc
pop
jnp
adcb
mov
mov
pop
js
loopne
ds
loopne
push
ss
ljmp
jmp
dec
gs
cmpsl
push
sbb
xchg
in
xor
dec
int3
je
imul
enter
sub
test
fisttps
imul
inc
clc
lcall
mov
out
loop
xchg
pop
cmp
imul
sar
outsl
lret
xor
in
das
mov
add
in
pop
push
and
push
divb
out
sub
push
xor
das
cmp
lds
into
int3
clc
jo
mov
adc
lahf
ljmp
cmp
cmp
add
sarb
sub
push
dec
out
pop
addr16
xlat
movsb
mov
fistpl
aam
pop
and
aaa
mov
pop
rorl
subb
mov
imul
jns
sarl
and
fcoml
pushf
xchg
loope
mov
mov
testb
mov
sbb
jae
ret
push
lcall
adc
xor
jne
or
jae
lods
mov
movsl
mov
mov
jb
imul
jge
mov
or
lret
addr16
lret
mov
mov
or
aad
and
xchg
jns
dec
adc
xor
jbe
add
jnp
aaa
mov
xor
mov
pop
mov
enter
adc
push
add
mov
push
sysret
cmp
dec
mov
repnz
js
cmp
popf
mov
push
and
xchg
hlt
ss
ljmp
push
cmp
stos
scas
fs
sarb
xchg
cmp
rcrb
and
sbb
aas
orl
ret
orb
fsubrl
lods
xor
lods
les
aas
loopne
loopne
and
pusha
jns
insb
jl
out
outsb
pusha
sub
cmp
sub
push
loopne
in
dec
insb
into
cmp
xchg
jg
xor
cmpl
inc
sbb
loopne
xchg
jle
pusha
cmp
mov
sahf
ret
cmpsb
in
cmp
jl
sbb
and
aaa
dec
test
ja
lret
aaa
shll
mov
sbb
fsubr
cmp
repnz
arpl
xlat
pushf
xchg
int3
xchg
stos
xchg
sub
add
sub
mov
aam
xchg
cmp
shrl
dec
jns
cli
cmpsb
mov
sbb
mov
dec
xchg
dec
sub
jp
inc
fimuls
lcall
add
adc
out
pusha
and
jg
jge
ds
stos
dec
cmp
mov
jecxz
stos
mov
mov
cli
lret
loope
pop
ds
jge
clc
mov
xchg
imul
je
ljmp
pop
jmp
cltd
mov
mov
lods
hlt
cmp
mov
add
in
add
mov
sbb
fiaddl
xlat
jmp
mov
movsl
xor
fstl
jno
movb
cmp
or
jns
xchg
pop
sbb
sbb
stc
cmp
push
mov
fisttps
mov
stos
mov
into
aad
mov
sahf
stos
test
cmp
aam
xor
idivl
add
jae
shrb
xor
cwtl
push
repz
sahf
xor
inc
in
xlat
sub
lods
inc
popf
inc
ja
pop
out
xchg
int3
and
shll
mov
pop
adc
out
lahf
push
jns
xchg
dec
subb
jno
clc
aad
mov
sub
mov
push
fs
adc
add
or
roll
and
fsubl
repz
push
push
ljmp
push
cmp
outsb
inc
xchg
dec
hlt
xchg
push
in
ror
push
call
jl
dec
fmuls
mov
test
cmp
fistps
imull
or
pop
out
bound
inc
xor
xor
loope
sbb
lahf
lock
jmp
xor
or
fldcw
in
outsb
jb
data16
push
adc
loop
cmp
jle
fists
fcomip
lea
xchg
scas
test
or
js
pop
mov
mov
pop
push
xchg
dec
xor
sahf
leave
adc
xchg
mov
ds
mov
cmc
loope
pusha
mov
lahf
in
int3
hlt
shlb
bound
movsl
fcoml
or
ja
clc
add
test
data16
xor
push
pop
add
out
cmpb
xlat
fwait
bnd
sti
mov
pop
cmpsb
gs
pop
shrl
iret
pop
sub
push
lcall
adc
movsl
clc
pop
cmc
int
andb
add
pop
sub
js
fs
xor
dec
push
shll
dec
dec
das
xchg
or
push
mov
ds
test
pop
cmp
add
hlt
adc
loope
cs
insl
test
mov
lods
out
in
xchg
xor
mov
dec
lahf
sbb
add
sbb
iret
jae
arpl
pop
or
pushf
pop
scas
push
out
jge
jo
pop
lcall
fwait
out
push
sub
jg
pushf
scas
fidivl
and
ljmp
dec
mov
xlat
out
into
adc
jmp
lcall
pushf
adc
push
cmp
in
or
shrb
cmp
lods
out
jbe
bound
gs
push
fldl
xor
iret
cld
and
or
movsl
adc
adc
add
scas
xchg
and
enter
sub
stc
xchg
pop
les
or
sub
mov
or
mov
jbe
inc
mov
or
cmp
adc
iret
dec
and
add
push
insb
mov
mov
push
int
xchg
call
jecxz
in
mov
outsb
adc
and
rclb
xchg
dec
daa
cmpsl
sbb
inc
pop
stos
mov
add
imull
adc
loopne
mov
add
jp
fstpl
mov
xchg
mov
out
nop
mov
xchg
test
mov
fcmovnb
cmpsb
cmp
xchg
and
jecxz
pop
pop
or
jo
popf
loope
xor
cmp
and
push
pop
ja
stos
out
fisttps
jae
dec
fmul
notb
cmpsl
nop
add
adc
push
pusha
insb
xchg
cmovnp
xorl
punpckhbw
mov
rcrb
std
js
ja
add
sub
inc
adc
stos
pop
add
decl
hlt
pop
ja
mov
xchg
popa
ja
aaa
mov
xchg
cmp
outsl
xchg
dec
lods
int3
lea
std
out
pop
pop
sub
fcmovnu
cmp
jns
std
notl
adc
movsl
test
mov
mov
rolb
inc
or
les
mov
clc
jp
sub
out
outsl
sub
int
inc
lods
cmpsb
addr16
xrelease
adc
jo
add
xor
push
sti
fs
cwtl
fldt
stos
lock
jle
cmpsl
dec
mov
jbe
aad
pop
push
xor
arpl
in
xor
ror
clc
popf
rcrb
cld
xchg
test
in
les
dec
and
roll
insl
out
pop
add
push
jge
mov
xor
jmp
mov
push
iret
outsl
aam
dec
pop
sub
xorl
idivb
ja
andb
push
ja
inc
add
mov
jmp
fadd
bound
rcrl
inc
pusha
adc
jbe
mov
in
stos
sbb
adc
sub
ds
jle,pn
icebp
sub
or
hlt
inc
call
inc
ret
and
fstps
addl
aam
xor
cld
xor
and
ljmp
cmp
in
arpl
ljmp
xchg
fwait
mov
arpl
jns
dec
jnp
jecxz
push
dec
aas
cmp
insl
sahf
test
aaa
mov
add
cmp
push
cmpsl
pop
shl
arpl
jnp
adc
pop
in
xor
xchg
lods
fisubrs
into
mov
adc
or
add
or
call
hlt
push
sahf
rorb
lea
cmp
nop
clc
mov
mov
mov
or
leave
stos
popf
push
stos
test
ljmp
jno
out
shlb
dec
insb
out
xor
scas
xchg
cmp
rorb
push
mov
in
in
aas
sbb
notl
mov
aam
add
xchg
adc
xchg
pop
lea
adc
arpl
cwtl
xor
xchg
push
xchg
adc
in
mov
cmp
jg
dec
ret
sbb
pop
push
mov
push
outsl
hlt
pop
test
and
mov
ficomps
jle
xchg
mov
jge
jge
push
sub
adc
adc
int3
fisubl
test
and
or
mov
nop
out
xchg
sub
movsl
imul
xchg
sub
push
dec
inc
inc
ds
xor
call
or
cmp
or
pushf
adc
sbb
pop
adc
int3
pop
xchg
push
inc
mov
or
leave
movsb
or
adc
push
test
adc
jg
ds
sub
loope
xor
call
daa
sub
pop
add
fistpll
push
flds
push
cmp
push
add
jne
push
es
xchg
aad
mov
icebp
cmc
jnp
inc
lret
dec
jle
inc
push
enter
add
xchg
jl
xchg
mov
and
add
scas
pushf
xchg
mov
test
dec
neg
neg
fnstenv
aad
push
mov
rcrl
adc
mov
js
out
sub
dec
add
pusha
out
push
jb
cmp
jmp
lock
icebp
flds
lret
jno
shl
outsl
stc
sar
in
lods
push
shl
cmp
dec
sarl
rcr
sub
cmpsb
dec
test
jmp
movsb
add
roll
inc
xchg
dec
or
in
mov
out
push
outsb
es
dec
adc
push
fiadds
xchg
pop
mov
lret
mov
loop
mov
xor
and
adc
es
dec
addr16
jg
lret
imul
mov
out
xlat
push
dec
daa
mov
popa
addr16
mov
xchg
pop
rclb
pop
dec
das
dec
jmp
enter
mov
cmp
and
push
ds
imul
sub
jae
and
pop
xchg
jno
inc
fadds
xchg
jp
jp
or
mov
sbb
sti
adc
icebp
pop
push
add
xchg
sub
fstps
pop
pop
test
shlb
xor
lret
dec
cmp
xchg
cmp
mov
lds
xlat
sub
test
mov
push
or
mov
mov
ljmp
sqrtps
bnd
pop
dec
push
adc
aad
lret
scas
jg
addr16
mov
mov
pushf
mov
aaa
jbe
and
inc
pop
sbb
adc
aaa
cmp
movb
adc
mov
sub
dec
push
inc
mov
mov
rcrl
call
cmp
out
mov
or
cmpsb
scas
fcmovb
jb
pop
mov
sub
xlat
cli
imul
jge
mov
pusha
cmpsl
sbb
inc
scas
aam
lahf
push
xchg
add
push
sbb
jae
test
lret
out
mov
inc
lret
xcrypt-ofb
cmpsl
push
sbb
or
xchg
jl
pop
xchg
mov
sub
leave
bound
sbbl
addb
mov
cmp
sub
push
mov
movsb
rorl
adc
es
push
lods
cmp
int3
sbb
lock
fisubrl
ss
push
loopne
shlb
add
test
cltd
xchg
inc
int3
or
cmp
mov
fistpll
xchg
mov
std
inc
aam
sbb
sub
or
or
or
lds
mov
outsb
xor
jg
call
push
imul
pop
shll
mov
mov
test
adc
jbe
lcall
ss
pop
mov
mov
push
int
xchg
mov
fwait
in
lods
adc
mull
inc
mov
mov
lea
int3
popf
jbe
insb
mov
xor
fnstenv
test
call
mov
push
sbb
aaa
mov
sbb
aam
push
movsl
rorb
test
mov
daa
pop
push
je
cwtl
sub
jns
mov
lret
inc
rcll
xchg
cmp
popa
int3
movsb
add
mov
adc
test
adc
jb
pop
sahf
mov
push
ljmp
add
mov
fimull
mov
scas
sub
shrb
daa
leave
or
rorb
fnsave
and
inc
xchg
loope
scas
aad
sbb
adc
call
iret
fcomi
loop
sbb
sub
outsl
push
push
insb
pop
int3
mov
inc
fnsave
jbe
imul
dec
cmp
daa
repnz
cmp
arpl
sbb
jne
mov
mov
ds
lcall
add
adcl
iret
jns
fwait
testl
js
or
pop
cltd
flds
fbld
push
mov
push
push
push
mov
or
repnz
bound
outsl
adc
loop
xchg
jo
mov
cmp
lock
insl
stos
fiaddl
out
push
pop
jne
jns
iret
scas
mov
sarl
sbb
and
add
or
dec
cld
xor
cwtl
mov
in
push
scas
data16
sbb
ret
insb
xchg
mov
repz
xchg
lahf
mov
jmp
fidivs
jle
dec
les
mov
inc
pusha
lcall
sbb
rolb
or
adc
cmp
int3
push
and
or
add
rorb
pop
dec
push
pop
inc
sub
jecxz
je
or
adc
or
inc
outsl
ljmp
lock
pop
add
and
push
mov
pop
in
cld
lods
mov
sub
mov
fdivl
shl
stc
or
loop
aaa
dec
jns
stos
push
dec
adc
les
sbb
fwait
lods
hlt
bound
add
jg
repnz
xchg
into
pop
loope
add
test
movsb
lods
sahf
adc
loop
dec
pop
sbb
fisubs
mov
or
addr16
arpl
xor
sbb
sub
inc
es
push
adc
jbe
cmp
xchg
test
and
cmp
lret
les
jbe
sub
js
jecxz
xchg
push
mov
xchg
sub
mov
mov
jns
and
out
aad
mov
aad
cmc
subl
xor
dec
sub
test
adc
imul
imul
cmp
mov
push
and
jne
inc
jge
test
mov
pop
pushf
jns
jb
ret
ja
mov
sub
ja
inc
pop
loop
loopne
cltd
mov
cwtl
nop
cmp
subb
adc
mov
nop
ficoms
incb
adc
mov
mov
mov
fwait
andb
xor
or
das
adc
lods
ret
jae
stc
cmp
scas
or
mov
push
dec
shlb
pop
pop
test
mov
les
bnd
in
insb
rorl
or
lret
mov
ljmp
jnp
pop
cld
dec
mov
int3
xor
dec
ror
sahf
dec
mov
repz
add
jae
js
jmp
hlt
jmp
xor
loopne
inc
push
dec
cmp
and
outsl
jb
movsb
stos
xchg
inc
xchg
cmp
jecxz
repnz
in
xchg
movsl
out
cmp
jno
mov
dec
lods
ret
xchg
and
adc
xchg
sbb
cwtl
lods
xchg
jmp
andl
jge
clc
in
mov
jmp
xchg
jl
iret
call
mov
pop
sub
out
mov
arpl
stos
iret
scas
pushl
and
icebp
cmpb
jo
js
adc
sbb
cwtl
mov
loopne
xor
xchg
add
jns
adc
sub
sub
pop
testb
test
pop
pop
or
mov
adcb
iret
sub
push
mov
mov
aaa
rorl
jmp
ja
cmp
xor
inc
je
inc
and
subl
jns
stos
int3
aad
in
inc
loope
mov
std
or
jbe
fnsave
jbe
lock
dec
cmc
daa
dec
pop
push
push
mov
call
dec
or
rcll
bound
or
dec
inc
loopne
lret
xchg
cmp
loope
int
pushf
mov
ja
int
jge
push
inc
jle
adc
add
push
clc
addr16
push
aad
roll
jno
in
ficoml
push
mov
and
iret
les
push
mov
cmp
jbe
cmp
loope
out
hlt
add
push
lods
stos
outsl
sub
flds
add
leave
addr16
mov
lcall
and
xchg
mov
data16
mov
test
repz
int3
jecxz
rclb
dec
or
insb
inc
sbbl
aad
bound
std
shr
add
push
add
mov
push
mov
mov
cmc
pop
and
repz
sbb
cmc
outsb
cmc
dec
loop
cmp
mov
cmp
pop
hlt
jo
test
mov
je
cmp
xchg
or
sbb
cli
cmp
jge
addr16
into
rclb
and
pop
shll
jle
dec
mov
ds
int3
fadd
stos
int
fsub
jg
pushf
pop
mov
jg
and
fs
push
xchg
in
jnp
mov
adc
push
or
mov
cmpsl
movsb
cld
mov
dec
cmp
test
popa
dec
dec
lahf
push
in
sbb
fcomi
movsb
jbe
xor
icebp
mov
shlb
pusha
xor
popa
sarb
push
xlat
dec
xchg
xchg
dec
mov
add
mov
cmp
xorl
and
icebp
push
inc
fisttpl
mov
pop
sub
sbb
pop
int3
push
xor
or
mov
push
cli
into
push
sti
adc
xor
cmp
jmp
jno
xchg
out
inc
icebp
retw
adc
popf
and
out
repnz
xorl
xor
inc
ds
or
enter
leave
loopne
cld
push
jnp
xchg
add
xchg
movsb
into
out
inc
ror
pop
push
mov
scas
int
ljmp
xchg
mov
xchg
loop
pop
iret
push
cmpsl
jecxz
xchg
cld
sbb
les
sbb
insb
sbb
mov
pop
cld
out
or
neg
jge
pop
in
lahf
and
in
movsb
inc
shl
cmp
xchg
pushf
mov
and
loopne
inc
pop
add
mov
and
xchg
sub
inc
call
insb
adc
test
lahf
pop
inc
in
xchg
mov
jnp
cvtdq2ps
jnp
mov
mov
stos
std
mov
insb
xchg
cli
clc
sbb
mov
lahf
ror
pop
and
jge
lret
in
inc
daa
push
cltd
fimuls
sub
lahf
cmp
jb
cld
mov
inc
add
ret
fcoms
and
lahf
jbe
out
pop
sub
or
and
fisttpll
mov
sub
ficoml
sub
push
pop
push
je
dec
dec
push
data16
fisttps
cmp
sbb
adc
test
jne
pop
fstpl
adc
js
cmp
mov
cmc
push
sbb
jnp
fists
pop
sbb
das
fwait
xlat
push
push
pop
or
cmc
sbb
inc
push
cmp
in
mov
aam
jno
jno
jno
add
shlb
adc
dec
sarl
fnstcw
popf
sub
out
mov
aas
add
dec
out
mov
imul
ds
xor
sub
push
lahf
insl
mov
cmpb
out
popw
iret
scas
cmp
lods
xchg
rcll
push
aad
adc
pushf
jg
movsl
pop
movsb
outsl
lods
hlt
insb
cld
add
cmp
aad
adc
std
push
cmpb
mov
dec
ret
dec
adc
repz
fsubrp
push
mov
jl
mov
or
push
add
lock
inc
mov
sti
imul
iret
dec
sbb
or
sbbl
dec
sti
sbb
arpl
add
or
lahf
scas
ss
jno
dec
pop
and
lock
ds
pusha
test
mov
push
push
lock
repz
lcall
mov
push
jecxz
lahf
lods
ljmp
or
add
jns
sahf
push
inc
push
pop
xchg
xlat
repnz
lret
sbb
push
in
clc
xor
and
mov
popf
mov
scas
push
rcl
cltd
imul
test
lea
insl
dec
ficoml
xlat
test
out
fnstenv
sub
dec
int3
andl
iret
js
nop
xchg
adc
sbb
aaa
outsl
mov
or
loop
call
mov
mov
push
pop
pop
fcoms
jb
out
rcll
cld
es
or
jecxz
in
mov
js
cmpl
rsm
out
sahf
add
xor
in
std
repnz
imul
dec
cs
mov
xchg
arpl
push
cltd
mul
xor
pop
gs
test
daa
lock
ja
dec
scas
jb
iret
pop
cmp
xchg
jmp
xchg
dec
bound
into
jl
push
imul
movsl
pop
lds
lods
inc
mov
out
and
divl
ja
jp
mov
mov
xor
lahf
xor
out
sahf
test
fdivs
iret
adc
and
outsb
sub
fildll
repz
pop
push
xchg
jp
push
roll
mov
sub
test
pop
pop
or
lcall
xchg
inc
aaa
test
jge
scas
lods
scas
and
lret
xor
mov
aam
pop
mov
sbb
inc
xchg
push
mov
testl
cmovbe
mov
loop
adc
adc
es
dec
cltd
xor
or
xor
cmp
cwtl
pop
test
jle
pop
faddl
imul
and
mov
push
data16
cmpsl
shrl
or
pop
stos
push
add
push
pop
dec
rcll
or
xchg
sahf
js
lret
or
les
pop
shrb
ja
repz
mov
shrl
add
xchg
repz
testl
bound
out
mov
popf
adc
adc
xor
fdivs
mov
or
loope
cmpsl
and
mov
shrb
push
push
mov
sub
arpl
inc
jo
aas
dec
and
lahf
outsl
and
mov
inc
clc
pop
aam
mov
stos
adc
jmp
fnstcw
scas
ljmp
lret
cmovns
fisttpl
push
addl
rcrl
xchg
xor
adc
pop
jb
mov
inc
push
mov
fildl
out
mov
scas
cmp
stos
test
dec
pop
or
divb
mov
mov
int
outsb
add
testl
movb
mov
pop
jb
decl
int
mov
sub
ret
insl
mov
adc
out
aad
popf
lock
leave
lcall
pop
sub
add
aaa
mov
shlb
cmc
dec
in
xchg
mov
sti
push
mov
pop
lock
aas
loope
push
lahf
mov
sub
enter
and
mov
lcall
push
fucom
inc
icebp
es
mov
jmp
push
loopne
imul
aaa
mov
lock
jecxz
test
aaa
imul
xchg
xor
dec
addr16
mov
inc
xchg
pop
int3
fdivs
or
pusha
cmp
fsubrs
fistpll
fsubrs
andb
pop
test
jb
adc
out
mov
mov
push
outsb
out
xchg
imul
push
jl
pop
cmp
insl
dec
sbb
aad
int
pop
pushf
pop
pushf
stos
xlat
cmp
je
or
pop
out
call
cmp
dec
inc
xor
sbb
mov
in
add
gs
out
cmp
xor
shll
pop
jb
enter
add
cmpsb
lcall
xor
sub
jns
sub
mov
stos
popa
aad
int
pop
adc
aam
cltd
fwait
mov
addr16
push
enter
in
mov
insl
push
out
popa
scas
shrl
data16
fdivrp
imul
xor
insl
jns
data16
mov
ds
push
xor
cwtl
pushf
or
xchg
lret
cwtl
fs
std
imul
out
jp
pop
stos
cwtl
mov
stos
mov
mov
push
xchg
cs
stc
popf
and
pop
inc
xchg
in
xor
les
and
nop
ds
xchg
in
lea
out
std
out
mov
push
cmp
xor
jge
out
mov
xor
pop
dec
inc
push
icebp
cmp
xor
and
sub
arpl
icebp
inc
mov
xor
enter
sahf
insl
fisubs
scas
adc
sbb
ss
push
mov
popf
dec
movsb
adc
fisubrs
cmp
adc
push
test
popf
xchg
mov
push
pxor
mov
dec
testb
xor
push
pop
xchg
mov
cmc
cmpb
xor
pop
sub
pop
adc
ret
rol
in
mov
xchg
call
add
mov
out
fptan
inc
out
dec
push
pop
jp
cs
shll
insb
jno
stc
loop
xor
mov
sbb
lods
mov
mov
jecxz
mov
pop
fcompl
pop
add
lods
mul
rcrb
xchg
jmp
sbbb
rolb
mov
add
cmp
cmp
sub
push
push
mov
out
add
pushf
jmp
inc
pop
pop
push
das
scas
or
adc
imul
icebp
insl
or
in
xchg
sub
addr16
push
sub
iret
jp
paddsw
popf
mov
pop
shrb
or
lret
js
or
jbe
dec
or
mov
sbbl
xor
fsubs
xor
pushf
xor
push
sbb
ds
adc
enter
jmp
sbb
imul
addr16
or
add
xchg
mov
mov
ret
or
push
fldl
or
in
xor
sub
out
xorl
xor
aas
int3
test
cmp
lods
andl
jne
push
add
pop
push
xchg
bound
rcr
out
xchg
sahf
daa
fistl
in
shll
enter
dec
flds
and
andl
lods
jecxz
push
fsubrl
sub
js
lret
pop
lea
inc
mov
mov
shl
dec
pop
mov
fnstsw
stos
sub
xchg
orb
pop
mov
scas
adc
outsl
leave
dec
or
test
cld
notl
loop
fbld
jne
mov
repz
and
gs
jb
and
ror
pop
adc
js
leave
leave
cmp
pop
lahf
subl
jae
xchg
mov
jns
push
jl
daa
xor
jo
pop
filds
test
test
push
xorl
push
push
pop
clc
ret
and
xlat
pop
lea
push
je
sbb
push
lds
xor
inc
inc
xor
adc
mov
xor
cmpsb
scas
cwtl
push
xor
icebp
add
pop
sub
mov
add
add
xorb
test
in
mov
inc
jne
or
paddusb
lds
scas
mov
or
sub
dec
dec
jmp
add
sbb
push
ljmp
fsubrs
xchg
jb
cmp
add
rorl
rcrb
mov
sbb
xchg
push
dec
xor
and
mov
xlat
lods
call
mov
pop
xchg
cmp
mov
es
aaa
push
test
jle
shlb
mov
adc
sbb
jae
mov
push
cmpsb
pop
pop
mov
jne
xor
jne
arpl
inc
outsb
mov
pop
rcll
mov
inc
cmp
xor
xor
sub
mov
sbb
dec
push
mov
xchg
in
jbe
rorb
add
nop
leave
scas
push
out
roll
or
mov
ds
test
inc
sahf
out
lds
pop
test
mov
mov
jno
sbb
cmp
or
mov
pushf
dec
adc
fisubrs
inc
sahf
jge
leavew
pop
pop
fistps
adc
call
rcll
shrl
dec
popf
unpcklps
adc
repz
mov
add
or
aad
pop
stc
cmp
jp
jge
dec
push
inc
lahf
fmul
jnp
sub
fdivrl
push
das
stos
jmp
ja
mov
mov
xchg
in
lds
nop
std
popa
aam
fwait
mov
rcrb
mov
push
dec
mov
in
fsubl
xchg
mov
out
adc
les
adc
inc
adc
and
adc
mov
ss
insl
jae
pop
cli
in
inc
dec
call
stc
mov
jg
adc
xchg
dec
mov
jbe
movaps
inc
sbb
push
lds
mov
push
test
inc
pushf
adc
push
icebp
push
test
xlat
adc
sbb
imul
popa
push
sarb
xchg
lods
mov
xor
cmpsl
push
or
aad
testl
dec
bound
cs
ret
or
or
jp
test
iret
stos
mov
add
lds
xchg
pop
dec
mov
iret
inc
sub
mov
inc
addr16
jp
xchg
aad
jb
pop
aad
mov
xor
xor
jecxz
ffreep
or
jle
mov
nop
pop
popa
test
outsb
dec
or
add
scas
fistpl
inc
jnp
cmpsb
xor
fidivl
out
popf
or
or
lods
and
stos
pop
push
sub
movsl
sbb
arpl
pop
cmc
imul
mov
pop
data16
adc
cmp
sbb
mov
lods
sbb
scas
xor
adc
aas
loop
fildl
adc
cmp
xor
test
outsl
pushf
jle
aam
aaa
and
setge
mov
dec
push
sbb
rclb
adc
cmp
movsl
mov
adc
jo
pop
mov
inc
inc
ds
mov
mov
xchg
fldcw
xor
add
inc
xchg
xor
push
mov
clc
js
nop
das
or
arpl
pop
sbb
lods
imul
pop
mov
push
lahf
push
dec
cld
adc
jmp
xchg
inc
push
shrl
mov
in
pusha
pushl
cld
out
int
dec
adc
pop
rorl
sub
mov
je
xchg
hlt
rorb
mov
aaa
mov
scas
jecxz
aad
lret
or
push
pop
xor
loope
inc
xor
rcr
fdivrl
filds
dec
sti
popa
and
sarl
add
cltd
adc
movsb
inc
cli
pop
loope
pop
fdivs
mov
dec
aad
cmp
inc
jge
jge
aas
xor
lcall
xchg
mov
out
test
push
mov
sbb
jge
je
push
ret
and
inc
mov
pop
jns
add
das
xor
sub
cmp
sub
movsl
sbb
iret
adc
mov
andl
aam
shll
cwtl
cmpsb
mov
lods
sbb
loopne
xchg
imul
sub
orl
pop
mov
push
fbld
out
pop
lahf
mov
sub
iret
xchg
mov
cli
jge
movsb
pop
stos
mov
pop
xchg
dec
push
xchg
mov
fidivrl
rep
je
outsb
insl
mov
out
movsl
adc
dec
fdivrl
pushf
sbb
xor
push
subl
fstl
xor
push
repz
fldt
add
cltd
loope
mov
pop
and
mov
jns
lea
fs
xchg
outsl
jae
xchg
push
push
add
pushf
sahf
or
push
jne
pop
cmp
adc
and
aam
movsl
push
dec
dec
pushf
xor
stc
in
mov
jg
dec
mov
hlt
cmp
pop
xorb
repnz
jne
add
add
mov
add
jns
aam
clc
xchg
cmc
sub
nop
orl
cmp
inc
cmp
shrl
push
jp
cld
fsubrs
mov
sbb
inc
stos
leave
push
scas
adc
fisubrs
cmp
in
fiadds
popf
sub
mov
cmp
mov
ljmp
outsl
das
pop
xchg
std
mov
je
mov
fstpl
lret
shll
pop
pop
fs
orb
pop
shrb
int
sbb
push
iret
and
push
xor
cltd
push
adcb
icebp
jp
fcoms
shlb
loopne
test
fmulp
out
jb
arpl
push
mov
pop
or
pop
add
xchg
add
in
jns
imul
mov
cmc
pop
mov
adc
incl
popa
hlt
rol
mov
xchg
jne
jle
mov
pop
add
repnz
out
add
sub
test
stos
ja
repnz
jge
mov
xchg
push
lret
inc
into
movsb
dec
jns
lods
push
cli
push
mov
jg
dec
xor
pop
lcall
push
stc
test
adc
jp
int3
rcl
xor
sti
orb
and
sbb
sti
frstor
lret
sbb
insb
pmaxub
ret
mov
dec
jp
pop
inc
mov
lret
dec
les
aad
loop
mov
sub
add
icebp
sub
subl
dec
lret
das
inc
dec
or
pop
stos
inc
lods
stc
mov
mov
jle
push
cwtl
mov
lock
push
and
ja
int3
pop
lahf
mov
cmp
roll
pop
out
stos
add
pushf
or
inc
jnp
sub
sub
add
shrb
adc
dec
fwait
mov
loope
sbb
in
and
mov
adc
andl
pop
cmp
jns
in
adc
rcrl
fyl2xp1
inc
dec
cmp
pop
gs
or
jl
inc
out
insb
repnz
inc
shll
sub
fbld
lea
xlat
push
pop
fldcw
andl
or
push
shlb
cmp
xchg
ret
mov
ljmp
jnp
and
ljmp
int3
jbe
aaa
mov
mov
out
and
in
leave
xor
add
or
inc
sbb
add
out
push
jge
cmpsb
xor
or
rcll
jl
adc
bnd
mov
addr16
fidivrl
js
dec
xor
xchg
lds
push
rolb
test
mov
pop
cmc
mov
add
mov
iret
pop
cld
cltd
cwtl
sbbl
mov
test
sbb
mov
leave
pop
call
mov
jle
push
xor
shrl
int3
dec
lock
jb
xor
mov
pusha
imul
es
aad
cmp
pop
pushf
orl
fprem
xor
and
sub
imul
push
aaa
mov
ds
not
rorb
push
mov
xchg
pop
mov
push
adc
addl
lret
xchg
dec
out
inc
and
inc
fistl
lcall
sub
lock
pop
ljmp
gs
mov
mov
cmp
adc
mov
cltd
xchg
test
call
lcall
repz
mov
mov
sbb
pop
add
lcall
sahf
sub
dec
movsb
scas
and
inc
xchg
jbe
gs
shlb
cmc
inc
movl
lret
outsl
into
imul
sbb
push
xor
pop
std
cmpsb
xor
sti
clc
enter
mov
pop
mov
jp
gs
in
dec
mov
test
addb
jnp
add
pop
xchg
cltd
xchg
in
sub
int3
shll
lea
shrb
push
sbb
inc
xor
je
adc
faddl
xchg
pop
pop
mov
popf
dec
push
xor
adc
movsb
mov
icebp
fwait
pop
insb
arpl
mov
test
adc
pop
ret
push
fcompl
pop
test
iret
sbb
subl
cltd
jae
fisttps
punpckldq
mull
adc
sbb
sbb
push
cmp
idiv
jg
jecxz
xlat
mov
stos
jns
in
loop
fdivl
divps
sub
fistps
push
mov
jl
hlt
push
mov
shrb
fcompl
dec
inc
cli
or
mov
mov
stos
cmpl
adc
push
mov
nop
jecxz
lcall
fbstp
cmp
call
add
push
idiv
cmp
mov
xor
rcrl
test
cmp
and
push
mov
nop
lcall
fldcw
cld
cli
in
in
fdivrs
push
scas
adc
jnp
ljmp
movsl
inc
push
movsb
mov
nop
sbb
jg
xchg
je
xchg
insl
xchg
outsb
frstor
call
push
xor
jecxz
lds
dec
push
or
insb
shl
xor
cli
xchg
dec
xorl
sbb
xor
lcall
xor
subb
jl
cmpsl
cs
into
push
insb
jmp
xchg
adc
aas
adc
add
sub
ja
sbb
push
test
popa
cli
pushf
mov
sahf
jmp
dec
movsb
xor
aad
push
sub
xchg
inc
add
and
loope
push
mov
jl
sarb
jae
pop
mov
inc
pusha
jmp
mov
jge
pop
in
data16
das
xor
pop
push
pop
mov
push
pop
xchg
and
shll
add
stos
mov
mov
out
outsb
mov
out
lods
jp
icebp
fisubl
ja
cmpsb
push
ret
jmp
scas
push
dec
in
mov
jo
fcmovb
repnz
ret
aam
sub
sub
cli
mov
xor
xlat
inc
aad
push
outsb
int3
scas
xchg
jbe
cli
xor
in
xchg
inc
stos
jle
stc
mov
dec
mov
mov
in
pop
nop
sub
addr16
sarb
and
daa
push
mov
repnz
dec
popf
lahf
das
aam
push
dec
xchg
jno
and
outsl
scas
dec
andl
push
add
popa
and
xchg
mov
cmp
std
add
push
cmp
dec
iret
dec
xor
mov
jbe
enter
in
leave
xchg
mov
data16
lds
dec
rclb
add
pop
mov
int
ja
arpl
push
stos
dec
push
sbb
aam
xor
adc
roll
into
add
jns
mov
xchg
dec
ror
sbb
mov
xabort
cwtl
stc
or
jge
scas
lods
daa
out
xlat
outsb
hlt
in
add
out
xor
sbb
out
fstpt
pop
sub
daa
mov
and
test
xor
sub
adc
js
rclb
negb
das
sub
push
lret
adc
js,pt
fldcw
inc
mov
lea
aas
daa
cmp
push
inc
lret
jecxz
fwait
dec
std
aam
loopne
je
pusha
adc
fisttpll
pop
xor
pop
cmc
jp
push
paddw
fwait
pop
mov
mull
ret
or
aad
ss
adc
xor
je
dec
jp
inc
fcmovne
sbb
cld
jae
pop
icebp
dec
sbb
ds
cmp
add
sbb
mov
xor
jle
out
adc
imul
rclb
enter
xor
cmp
mov
cmp
lcall
mov
mov
pop
pop
imul
adc
out
fcmovbe
dec
loope
jae
aas
mov
lods
divb
bound
ret
test
xchg
sbb
sub
popa
mov
xchg
or
out
mov
sbb
inc
fsub
lds
sbb
adc
xor
sbb
push
cmpsb
adc
pop
ficoml
mov
imul
sbb
or
xor
mov
insb
xor
inc
inc
pop
jbe
cmpsb
jno
fldln2
push
or
sbb
lods
pushf
jb
rorl
aas
outsl
fwait
out
jnp
cmp
lock
pushf
lods
dec
lods
outsl
and
movsb
and
xchg
test
xchg
dec
pop
jcxz
fsub
and
lea
dec
cmpsl
loop
push
sbb
and
jnp
mov
inc
mov
mov
xlat
inc
mov
inc
insb
stc
orl
orl
fadd
mov
mov
loope
push
cmp
das
cmp
es
jl
xchg
subb
enter
scas
or
cmp
xchg
or
add
cwtl
pop
js
test
jnp
adc
push
mov
into
and
decl
cmp
fwait
bound
sub
cmp
mov
inc
pop
jno
mov
cltd
inc
mov
pop
inc
nop
and
sbb
add
roll
pop
fimuls
rolb
inc
jl
movsb
or
pop
repnz
testl
dec
lret
lret
push
flds
xlat
insl
leave
adc
or
orl
repz
add
jle
in
dec
adc
enter
xor
pop
cs
pop
xchg
inc
ret
out
stc
pusha
add
shrl
xor
jg
lret
iret
cmpsl
push
or
outsl
adc
jae
pop
xor
iret
cmp
imul
or
into
je
push
and
ficoms
jno
imul
adc
cmp
je
mov
pop
pop
insl
push
sbb
aam
js
sub
sbb
cmovle
mov
dec
rcrl
dec
mov
xor
mov
repnz
pop
rolb
or
mov
in
jbe
imul
sub
repz
in
lea
insl
push
and
lods
inc
cltd
pusha
dec
cmp
lods
das
hlt
ja
push
xor
push
loopne
mov
lret
push
xorb
xchg
stos
push
xor
inc
add
cmp
pop
jge
insl
sbb
jbe
pop
out
adc
cli
addr16
push
or
dec
clc
xchg
adc
cmc
fmul
pop
mov
add
sub
pop
dec
mov
je
cmp
cs
xchg
push
arpl
xchg
inc
sti
cmp
into
fs
mov
lahf
aaa
scas
mov
mov
xchg
aam
sar
mov
inc
out
jbe
mov
push
push
fs
mov
dec
adc
imul
or
dec
out
jle
mov
mov
scas
add
das
cmpsl
xchg
cmc
xor
lods
adc
inc
sub
and
adc
leave
int3
xor
jo
stos
xchg
test
push
rorb
loopne
mov
lahf
movsl
mul
inc
aad
das
ljmp
xor
push
add
orl
in
mov
les
out
sbb
jp
push
fsub
negl
jo
insb
xchg
mov
jbe
mov
and
sbb
paddb
in
adc
push
ret
mov
push
xchg
or
fbstp
lret
mov
jbe
mov
out
sbb
lahf
jb
data16
mull
mov
int
mov
cmp
test
add
or
clc
fiaddl
and
push
pop
lock
icebp
cltd
pop
imul
fucom
mulb
lret
and
in
push
ljmp
std
push
lea
dec
out
stc
imul
jno
iret
or
cld
lea
cmp
cwtl
push
xchg
iret
mov
mov
sbb
ljmp
loop
fwait
bound
pop
mov
in
xchg
ficompl
clc
out
jle
cmpsl
push
mov
push
sbb
push
fdivl
in
int
and
iret
mov
cmpsb
add
stos
cmpsb
inc
mov
mov
pop
xor
lret
xor
lcall
clc
fdivrs
mov
mov
xchg
ja
inc
xchg
daa
sub
mov
cs
pop
pop
mov
stos
daa
push
adc
dec
clc
push
xchg
fsubrs
adcl
scas
jno
sbb
nop
push
sub
jb
jg
fnstenv
sub
dec
pop
mov
sub
cld
mov
push
hlt
shrb
out
push
xchg
stc
mov
jge
in
adc
add
add
xchg
fsubrl
ss
popa
scas
mov
jne
or
shrl
ja
enter
inc
loope
adc
out
jne
inc
sub
popl
insb
push
imul
in
push
inc
jmp
data16
adc
mov
pop
inc
pop
jno
aas
mov
adc
popf
jo
pcmpeqb
sub
cmp
mov
lods
push
data16
xor
nop
into
or
into
or
fsubrl
pusha
adc
out
pop
jg
push
and
jae,pn
cmp
cs
sbb
nop
clc
xor
cmp
lds
jmp
cltd
mov
int3
stc
xchg
add
pop
xchg
mov
movsb
pop
push
push
inc
sub
gs
jno
into
pop
and
dec
mov
js
xor
adc
das
icebp
pop
jecxz
add
repnz
mov
dec
cmp
cmc
loop
pop
mov
inc
lret
iret
repnz
ret
or
shlb
ljmp
mov
call
cmp
push
nop
jne
popa
pop
test
mov
js
mov
cmpsl
push
xchg
pop
mov
fistps
sub
adc
fbstp
outsl
in
stos
scas
mov
loopne
mov
or
adc
mov
das
xor
mov
cmp
shll
adc
sbb
sub
lret
dec
jmp
scas
or
sub
outsb
clc
test
js
je
push
or
js
cmc
loopne
aaa
add
mov
sub
adc
sub
inc
adc
lret
sub
std
pushf
cwtl
mov
mov
or
idivl
scas
pop
popa
adc
mov
jo
xor
mov
or
in
adc
movsb
mov
dec
movsl
jecxz
sub
push
cmpsl
cltd
sbbl
inc
xchg
mov
ret
call
cwtl
pop
xchg
pop
stos
add
push
inc
shld
outsl
push
or
stos
aad
mov
or
mov
xchg
push
adc
and
enter
frstor
pop
push
fiadds
mov
aad
pushf
xor
pop
or
test
inc
sub
aad
mov
cmp
add
bound
jae
fwait
lret
sbb
pop
add
sbb
cmp
enter
dec
mov
std
lret
dec
xchg
lods
jmp
cmp
mov
dec
jmp
std
jbe
cmpsb
test
jno
push
leave
jle
dec
in
dec
cmp
or
push
sbb
lret
mull
and
inc
cmp
pop
imulb
aad
xor
push
stos
mov
inc
mov
in
cmpsb
popf
ret
aad
xchg
movswl
pop
inc
push
aad
pusha
std
xorb
push
ja
in
cmp
outsb
cmc
dec
xchg
inc
clc
adc
or
lret
aam
popf
hlt
adcb
dec
add
or
aam
aad
lahf
jecxz
out
adc
daa
test
int3
outsl
mov
push
mov
notl
cwtl
push
ss
pop
insl
inc
jmp
into
fistps
mov
pop
mov
push
sahf
repnz
sbb
mov
div
adcb
jmp
imul
inc
cmp
push
ljmp
xchg
sbb
sub
pop
mov
mov
roll
ss
sbb
mov
inc
loopne
sbb
cwtl
ret
xor
dec
cmp
lods
push
jp
sub
cmpsl
lcall
cltd
fmull
push
mov
sbb
call
fiadds
lods
jbe
insb
jecxz
mov
fcompl
xor
rcrl
add
aaa
mov
ret
pusha
dec
aas
subb
and
sub
pop
sbb
jae
sub
dec
aas
dec
xchg
dec
add
mov
sarb
xor
or
xor
dec
cmp
sub
addr16
repnz
mov
notl
jae
and
repnz
add
push
test
in
daa
inc
pop
cmp
cmovne
fdivl
push
fimull
popf
repnz
xchg
lea
or
jns
push
mov
xsaves
clc
mov
push
add
jbe
mov
inc
inc
sbb
popa
inc
adc
mov
popf
dec
cmp
lret
push
mov
popa
adc
ret
adc
adc
movswl
sti
mov
imul
mov
loop
jl
repz
lcall
mov
repz
lods
xor
fmulp
and
or
mov
shl
inc
cmpsl
and
cmpb
testb
shll
les
mov
mov
cmp
es
jmp
and
add
push
imul
stos
adc
insl
gs
pushf
add
scas
sbb
dec
xor
repz
or
jo
xor
sbb
push
jecxz
pop
fstl
xchg
not
pop
divl
js
dec
sbb
lods
mov
add
pop
enter
stos
nop
fsubrs
mov
xor
mov
lods
addr16
cmp
xor
fcomi
add
mov
adc
push
sbb
mov
cmp
and
mov
loopne
aam
lods
push
jno
inc
ja
mov
cmpsb
xor
jae
lock
or
mov
mov
dec
sbb
outsl
shrb
or
pop
inc
mov
xor
dec
pop
adc
sbb
jge
add
xor
mov
add
xchg
push
pop
or
pop
mov
je
fsubrp
stos
ljmp
sbb
nop
imul
ljmp
fisttpll
cmp
xorb
imul
das
dec
and
leave
ss
inc
sbb
movb
mov
lds
lret
mov
xchg
push
scas
daa
cmc
or
insl
test
test
fsts
adc
dec
inc
jge
xor
in
or
test
inc
icebp
roll
sub
pop
jno
aas
and
jg
add
iret
addr16
and
lods
ja
ret
dec
std
pusha
or
inc
inc
popa
loop
call
push
fs
popa
lds
in
repz
in
xor
repnz
fwait
pop
test
mov
jnp
ljmp
orl
ss
pop
xorl
pop
sub
mov
je
dec
ror
popf
xchg
jne
pop
imul
aas
push
jg
adc
das
sbb
or
adc
les
int
lods
sbb
or
pop
fstl
test
mov
cld
int
ja
ret
mov
xchg
sarl
movsb
jg
adc
je
in
dec
jge
fs
enter
pop
cltd
mov
fwait
push
cwtl
mov
adcl
lds
mov
pop
pop
pop
leave
xchg
mov
adc
pop
add
sbb
cmp
or
lret
xchg
test
mov
cmp
push
mov
ss
sub
cli
in
outsb
aas
arpl
test
sbb
lea
mov
push
mov
push
add
jnp
xorl
push
jp
iret
sti
stc
mov
cwtl
add
mov
stos
jno
in
cld
mov
scas
int3
cmpsl
xlat
fwait
dec
out
outsl
mov
or
mov
mov
jle
dec
push
insb
mov
mov
mov
mov
bound
test
data16
stos
lcall
rcl
out
mov
jmp
cmp
cmp
in
xchg
scas
and
or
fiaddl
mov
stc
xor
fsubs
dec
pusha
pop
sub
add
mov
dec
or
and
add
jns
mov
pop
enter
xchg
add
push
js
cwtl
inc
dec
mov
push
hlt
or
mov
es
out
adc
dec
mov
jecxz
add
ds
lds
mov
pop
add
push
mov
mov
rolb
out
int3
push
call
and
cmp
adc
loope
sub
pop
jecxz
shll
add
clc
pop
cmp
fistpll
push
insb
dec
jecxz
push
mov
fnstcw
dec
lods
cmpl
and
mov
loope
dec
jne
or
pop
xchg
popa
scas
data16
stos
mov
or
and
inc
dec
insb
jecxz
xchg
loopne
lock
lret
lock
push
mov
lea
es
insl
repz
mov
cmp
mov
lods
xchg
jl
dec
jae
mov
fcoml
hlt
jle
rcrb
jp
add
and
enter
sbb
divl
lods
hlt
jbe
dec
or
xlat
dec
rol
xchg
test
sub
mov
mov
rclb
daa
cltd
cmpsb
and
jg
enter
das
push
sbb
sti
insl
and
cs
pop
bound
jnp
js
leave
es
movsl
ljmp
push
mov
mov
ss
dec
lock
sub
outsb
sub
adcl
scas
sub
xchg
gs
dec
stc
js
bound
int
cmp
xchg
push
std
cwtl
fstl
adcl
add
add
sub
pop
cmp
pusha
aad
gs
movsl
not
xchg
iret
scas
jmp
pop
sti
add
outsb
dec
call
lret
pause
addl
mov
push
imul
fadds
mov
jge
ret
xchg
cmp
lahf
adc
mov
jb
dec
lcall
pusha
or
scas
ja
push
stos
sub
loope
pop
mov
mov
rcr
setp
and
mov
sti
sarl
sub
and
pop
xchg
jle
ljmp
sahf
outsl
adc
movsb
out
pop
out
stos
xchg
loopne
xchg
mov
nop
int3
jo
aaa
jo
movsb
jmp
adc
xor
scas
inc
jns
xchg
lret
inc
sub
push
or
aad
dec
iret
movsb
movsl
sub
cmp
pop
sbb
lods
call
xchg
das
insb
jg
inc
xchg
mov
dec
popl
adc
gs
arpl
lahf
lods
cltd
pop
cmpsl
and
mov
shr
and
push
mov
adc
ss
push
pop
dec
push
inc
sti
mov
mov
cmpsb
mov
adc
xchg
dec
in
addr16
nop
pushf
lds
fistl
movsl
subb
imul
jle
dec
imul
out
loope
ja
imul
cmp
and
add
sbb
lock
pop
inc
pushf
jbe
fwait
repnz
mov
int3
in
push
pop
mov
mov
mov
and
sub
lds
mov
sbb
rcrl
shrb
insb
loope
adc
xchg
mov
push
mov
loopne
jno
or
rcl
sub
lahf
xorb
jno
mov
jmp
mov
sub
negl
push
xor
outsl
cmp
xchg
rorb
xchg
mov
test
loope
xchg
rolb
aam
jmp
stos
sub
and
dec
sbb
int
pop
loope
data16
daa
jp
or
sub
ds
into
stos
ss
gs
and
je
inc
jl
xlat
add
xor
mulb
xchg
and
sub
shl
rcrl
mov
pop
mov
loopne
rcll
xchg
divb
push
ljmp
mov
jle
add
push
addl
pushf
mov
aas
sbbl
push
pushf
cmpsb
xchg
lock
pop
mov
int
pop
pop
pop
repz
sub
jg
hlt
pop
xor
daa
jae
iret
dec
and
jge
nop
and
mov
fbstp
fsubr
arpl
shld
lahf
xchg
sti
loope
xchg
mov
lods
xor
jl
jnp
cmp
stos
push
xchg
outsb
popa
xlat
adc
push
cltd
bound
add
inc
pop
mov
cmp
daa
movsl
inc
cmp
lret
ja
sbb
add
mov
xchg
pop
add
push
outsl
imull
and
ss
shll
fwait
gs
xor
aad
sub
xchg
in
inc
lods
mov
and
xchg
pop
imul
xchg
mov
push
push
movsl
fisttpll
or
adc
arpl
mov
xchg
or
cmp
rcll
inc
sbb
addr16
mov
in
dec
shl
dec
mov
xor
sbb
xorl
js
fucomp
jle
jl
push
mov
push
in
adc
mov
sti
pop
add
scas
lret
jns
mov
je
stos
clc
or
cmp
outsb
jle
and
cmp
stos
lcall
pop
jo
les
hlt
enter
pop
sti
xchg
sub
xor
mov
cmp
std
popa
test
mov
bswap
jle
dec
outsb
movsl
mov
mov
sbb
push
sub
lret
es
push
inc
inc
arpl
scas
xchg
dec
in
clc
add
mov
data16
ds
fwait
sbb
enter
jne
mov
pop
push
inc
xor
ret
insl
xchg
ficomps
pop
push
aaa
ret
push
mull
in
shl
addr16
stc
test
jle
push
dec
test
fldl
fdivp
dec
add
jb
je
aad
jecxz
mov
cld
sbb
sahf
pop
or
and
jp
pop
movb
push
outsl
in
dec
aad
ja
rorb
pop
popa
in
cwtl
push
lods
lods
repz
cmpsb
test
adc
xlat
sub
pop
imul
push
mov
sbb
imul
mov
push
fisttpl
pusha
ja
mov
pop
sub
xlat
cmp
sub
mov
aam
inc
xor
test
xorl
push
cmp
leave
xor
rcr
gs
lods
sti
cmp
xchg
sbb
mov
xchg
push
lock
int
leave
out
adc
push
jbe
fbld
lret
jp
xchg
fwait
jb
xchg
js
push
pop
fldcw
rcll
insb
leave
sti
shr
mov
push
pop
outsl
mov
cmp
or
xor
cwtl
in
mov
pop
xor
enter
sbb
lcall
lcall
icebp
push
shl
mov
inc
push
ret
xchg
sbb
lods
or
mov
sub
scas
pop
adc
inc
adc
movsl
sbb
adc
inc
addr16
fwait
imul
test
mov
std
imulb
or
cld
int
sti
pop
lods
repz
andl
ret
cmp
and
xor
je
cmp
or
insb
ds
sub
test
je
sbb
imulb
dec
cmp
imul
inc
pop
mov
nop
pop
jle
loopne
xor
fimuls
lret
call
mov
and
scas
or
ss
bound
jecxz
test
pop
push
xor
add
and
cltd
test
ret
test
cmp
pop
jb
push
pop
sbb
mov
xor
outsb
loopne
ret
lea
loop
push
shl
xor
insb
lahf
push
xor
push
mov
lods
clc
jns
cmp
cmp
jecxz
jecxz
push
push
testb
incl
ret
lds
xchg
jbe
add
insl
call
push
sub
jmp
push
xchg
test
and
lea
mov
insb
xchg
aam
call
roll
mov
outsl
addr16
adc
cmp
ret
inc
mov
adc
cmp
popa
call
cmp
cld
lods
inc
subl
ret
cmp
add
or
mov
scas
test
push
fildl
movsl
stos
lods
pushf
or
mov
pop
mov
stc
xchg
das
xchg
loopne
out
add
flds
jbe
loopne
sub
rorl
fdivrl
fsts
cmp
pusha
insb
sti
sahf
sub
aaa
je
jle
pop
cmp
pop
fisubrs
dec
cmp
jae
xchg
test
fidivrs
aas
mov
xchg
ret
insl
mov
test
jbe
inc
cmpsl
or
cltd
xor
shr
xchg
enter
and
sbb
mov
stc
jg
aam
neg
mov
mov
mov
cmp
or
pop
loopne
je
mov
bound
inc
shlb
lea
mov
pop
or
dec
sbb
cld
stos
ja
test
push
mov
pop
pop
clc
xchg
fadds
call
insb
mov
jnp
sub
stc
push
in
inc
xchg
push
mov
dec
jle
xchg
cli
mov
pusha
ficomps
cld
shl
aas
subl
dec
shll
lds
sub
ljmp
movswl
imul
add
ret
mov
gs
jle
ficompl
and
inc
push
jge
loope
jle
and
popf
inc
loop
out
push
dec
cs
adc
test
in
pop
les
sub
jl
leave
xchg
repnz
push
in
xor
cmp
fsubs
mov
loop
fs
xchg
and
das
and
scas
dec
mov
push
xor
in
mov
adc
test
arpl
mov
sbb
cmp
sahf
pusha
jbe
les
sbb
push
mov
das
lret
push
mov
and
sahf
mov
pop
es
jbe
sahf
stos
inc
xor
ds
push
int
les
pop
mov
movsl
call
insl
pop
int
stos
and
sub
xchg
sub
testb
addr16
sbbl
push
pop
js
mov
push
repz
clc
sbbl
mov
sbb
pop
not
sbb
adc
xchg
sbb
arpl
mov
es
sub
or
and
cmpb
scas
push
stos
leave
js
jecxz
stc
jmp
sub
pop
leave
mov
ljmp
mov
pusha
xchg
sbb
pusha
jp
xchg
xor
addr16
jle
outsb
jne
adc
mov
push
mov
mov
and
mov
mov
mov
sub
pop
movb
pusha
scas
inc
scas
ja
pop
sbb
xchg
mov
jmp
lods
lahf
pop
dec
lcall
in
xchg
mov
sbb
test
add
dec
mov
sbb
mov
lahf
movsl
shlb
cmp
hlt
mov
neg
test
or
mov
xor
orb
and
int
dec
ljmp
or
lret
fstpt
mov
push
mov
mov
jne
popa
or
xchg
popa
cwtl
out
mov
mov
mov
lods
mov
jb
mov
lock
sub
mov
jp
push
aas
repz
imull
or
jecxz
shrl
imul
inc
dec
into
repz
jmp
outsl
xchg
pcmpeqd
mov
jno
pop
jae
push
fnsave
mov
mov
pop
sbb
mov
out
mov
xchg
negb
test
dec
xor
sub
jmp
and
and
dec
mov
and
xor
or
aad
dec
sbb
std
icebp
and
jo
mov
xchg
jge
iret
xchg
movsl
out
int3
bound
mov
sahf
ret
fsubrp
xlat
pop
js
pop
hlt
add
mov
loop
adc
push
adcb
ljmp
mov
jecxz
sbb
xlat
mov
adc
xchg
push
ss
lods
sahf
in
stos
pop
mov
sarl
fcmovne
fwait
or
inc
cmp
sub
xrelease
in
mov
stc
rolb
push
bound
out
mov
jb
nop
out
addw
jo
push
test
push
mov
lds
inc
adc
jmp
in
pushf
cmp
pop
dec
xor
popa
mov
sub
cwtl
dec
in
or
mov
jmp
repz
jg
jecxz
lds
addr16
hlt
mov
dec
ja
jnp
stos
push
add
shl
rcrl
imul
scas
or
dec
lret
xchg
sub
rol
fadds
adc
cmp
mov
sub
mov
enter
int3
std
lret
mov
int3
sahf
das
cmp
je
jmp
in
jb
pop
push
shr
push
mov
sub
int3
in
push
std
sub
scas
sbb
aad
or
cmpsb
in
push
cmp
fmull
xchg
xor
ficoms
cmpl
mul
out
adc
mov
out
pop
decb
dec
shrb
or
pushf
xchg
mov
mov
rcll
or
mov
jno
outsl
jle
xor
sub
cltd
mov
adc
jge
mov
push
jecxz
cmc
lret
push
mov
loopne
fwait
mov
test
xchg
bound
adc
aas
and
xor
push
inc
std
jge
loop
ret
insb
push
add
bound
inc
fdivl
push
jmp
in
push
pop
lods
in
fisubrl
xor
test
bound
outsb
outsb
jns
adcb
sub
jl
cmpb
xor
or
sbb
cmc
inc
ds
lods
aas
bound
xchg
into
adc
sbbb
xlat
mov
mov
shlb
mov
pushf
out
iret
loope
pop
dec
aam
scas
cltd
jo
xor
jle
push
dec
push
mov
jp
mov
cmp
js
and
es
and
mov
xchg
mov
dec
iret
sbb
ljmp
adc
das
aaa
mov
hlt
jns
scas
dec
cmp
cld
xor
xchg
xor
decb
mov
jp
ficoml
test
xchg
ds
shlb
xor
inc
mov
pop
push
jmp
loop
test
pop
xor
stos
es
cwtl
sti
stos
ds
jmp
std
imul
cmp
test
sbb
gs
xor
add
lds
scas
push
pop
or
in
mov
loop
sbb
shl
jmp
xchg
lahf
out
jne
test
cmp
out
movsl
movsb
in
mov
cmp
in
adc
nop
imul
or
mov
rcl
mov
sbbl
mov
test
dec
insl
fists
mov
cltd
pop
shlb
fdivl
inc
cmp
into
pusha
scas
jo
rcrl
insl
sbb
aam
inc
sti
ret
dec
dec
mov
pushf
fidivrs
and
test
xor
and
xor
es
gs
stc
loop
outsb
cli
mov
popa
fiadds
sti
and
xor
xor
xchg
add
loopew
pusha
cs
sub
push
jmp
mov
mov
xor
fwait
dec
cmp
ds
in
lods
sub
jne
push
js
lock
rcl
sqrtps
xor
mov
xchg
movsb
shr
add
insb
cwtl
xor
gs
pop
int
inc
lea
dec
cwtl
inc
fsubs
or
clc
fbld
insb
jle
xorb
dec
lods
sahf
adc
in
daa
pop
jmp
adc
aad
or
xchg
mov
mov
jno
xchg
inc
dec
mov
push
xor
mov
stos
jns
push
adcb
mov
add
jl
mov
add
push
ret
and
push
daa
cs
sarl
nop
repnz
and
lret
cmp
scas
push
xlat
leave
stc
mov
mov
lcall
outsb
jae
xabort
scas
mov
dec
scas
mov
sub
push
mov
out
xor
rorl
fldt
push
and
loope
dec
icebp
insl
popl
xor
pusha
subl
xor
push
sbb
inc
hlt
ja
add
push
stos
push
sbb
adc
mov
lret
xchg
mov
mov
dec
push
daa
cli
add
sbb
and
loop
out
pop
jmp
outsl
cli
and
pushf
push
hlt
ss
mov
aas
xchg
lods
test
data16
cmp
subb
cmp
out
cmpsb
mov
cld
lods
ds
mov
xchg
sub
dec
push
pop
add
shrl
lahf
test
test
and
std
cli
gs
or
inc
scas
rcr
pop
leave
xor
mov
fs
mov
inc
dec
leave
pop
mov
xor
jl
cmp
xorl
cli
adc
fdivp
pop
or
fwait
xlat
jge
jmp
test
iret
test
ror
sub
add
sbb
inc
adc
fadds
sbb
popf
jl
fwait
repz
ljmp
insl
sub
call
mov
fadds
inc
push
pop
dec
sbb
aad
jl
cmp
jecxz
fwait
dec
sbb
or
and
iret
out
inc
mov
ss
xlat
add
test
pop
ja
fsubl
cmp
pop
inc
adc
jg
dec
sti
and
loope
mov
js
sbb
mov
cmpsb
lock
lea
fnstenv
pop
loop
sub
rcr
jo
adc
lods
cmc
lahf
loop
je
lcall
xchg
loop
push
mov
popa
pop
mov
hlt
jmp
cs
int3
js
mov
popa
mov
mov
adc
sub
inc
and
adc
inc
xchg
add
jp
sub
idivb
or
insl
pavgw
sarl
xor
lea
mov
cmp
test
mull
push
mov
inc
aaa
mov
imul
push
test
dec
pop
and
repz
adc
mov
mov
xchg
int
popf
aas
add
mov
dec
jae
dec
insl
cmp
outsl
pop
push
cmp
and
mov
xlat
cmp
cltd
push
xor
push
sub
ds
in
add
xchg
cmp
inc
jne
pop
xor
stos
int
mov
jne
mov
aam
xor
xchg
scas
inc
lods
fs
aaa
lds
pusha
sbb
loop
mov
pop
clc
out
cmp
out
fs
push
arpl
sahf
nop
outsb
or
hlt
pop
inc
outsl
sarl
add
sti
xchg
lea
push
jle
and
lcall
ror
jecxz
loope
pop
pop
push
scas
sti
adc
jb
inc
xchg
inc
into
sti
aam
xchg
dec
xor
mov
xchg
or
mov
or
cltd
pop
lea
rclb
pop
pop
xchg
stos
repnz
jbe
sub
and
pop
mov
test
shlb
jp
lret
cmp
lret
dec
ss
and
fwait
xchg
adc
fisttpl
imul
xchg
xor
test
inc
sub
jae
or
jbe
sbb
dec
mov
adc
mov
sbb
es
fimuls
cltd
fsts
xor
es
cld
sti
aam
sbb
pop
push
cmp
lds
cmpsb
out
out
add
imul
cmc
repnz
xchg
addr16
sbb
mov
addr16
nop
mov
divl
scas
sbb
jb
sub
sbb
int3
test
inc
in
dec
rorl
outsb
cmp
lock
mov
dec
mov
icebp
mov
clc
cmp
inc
adc
testb
mov
pop
pushf
popf
mov
cmp
jne
inc
add
pop
in
out
daa
xchg
test
mov
xorl
sti
pop
jne
lea
pop
rorl
jmp
add
pushf
dec
repz
out
subl
iret
mov
dec
xor
repnz
xor
call
bound
xlat
pop
xorb
test
pop
sub
dec
xor
xchg
arpl
lahf
jp
stos
add
hlt
mov
jmp
fmul
mov
jmp
repz
push
mov
shll
js
out
and
xor
inc
int3
leave
sub
in
jb
inc
pushf
outsb
lock
mov
movsl
sti
add
sahf
aad
sbb
push
mov
cmp
inc
pop
loopne
setno
cmp
sbb
icebp
adc
lret
jle
jle
fdivrl
fstps
into
xor
adc
pop
push
xchg
push
rclb
icebp
adc
and
mov
dec
stos
inc
cmp
enter
in
sbb
jmp
cmp
sbbb
sbb
cmp
ja
lcall
lods
dec
lcall
dec
jae
scas
pop
stos
leave
mov
push
cmc
iret
and
lock
cmp
pop
int3
repz
cmpsb
movsb
and
add
les
ret
incl
add
rcrl
pop
scas
inc
test
insb
jle
aaa
bound
cltd
adc
pop
push
mov
cld
fidivs
in
cmp
xor
orl
push
iret
and
inc
cmc
mov
jecxz
or
push
js
iret
jge
ss
imul
mov
mov
jecxz
icebp
xchg
push
sbb
push
sbb
cmp
andb
pop
or
mov
rclb
repz
sub
mov
dec
mov
xor
cltd
add
dec
sbb
sub
sbb
stos
les
sbb
mov
pop
sahf
shll
sbb
cwtl
ljmp
iret
nop
adc
push
pop
popf
insb
movsl
aas
popf
pop
jmp
icebp
add
or
xchg
mov
mov
stos
xchg
mov
pop
dec
inc
xor
lods
push
pop
xchg
jno
sarl
call
pop
push
add
int
jne
push
push
lea
pushf
fdivr
cmp
popa
inc
lds
pop
push
mov
sbb
cmc
sub
sbb
mov
out
popa
cld
out
out
adcb
aad
xor
dec
cmp
mov
adc
in
xchg
xchg
fwait
mov
test
fistps
cmpsl
and
std
inc
dec
xlat
stc
jge
push
and
jo
cmpsl
or
sbb
dec
dec
popf
or
push
jecxz
xchg
pop
mov
mov
mov
adc
aad
push
sub
pop
jle
pop
mov
outsb
popa
nop
stos
inc
jmp
push
push
adc
sarb
jae
or
hlt
pushf
jae
sbb
jp
imul
cmp
xchg
push
ss
inc
pop
pop
loop
pop
rcr
sbb
jle
or
dec
or
imulb
lock
iret
jle
mov
ljmp
push
jp
cmpsb
mov
cmp
jle
les
mov
lods
rol
daa
mov
scas
jg
xchg
aaa
ret
mov
xor
movsl
sahf
inc
fcoms
sti
jg
dec
ljmp
mov
push
mov
xchg
or
inc
sbb
and
in
dec
test
sub
lods
sub
ret
imul
xor
and
adc
xlat
add
fstps
cmp
call
cwtl
ret
pop
je
sub
sub
sub
pop
dec
xchg
jp
push
sbb
outsl
cmp
jmp
iret
arpl
cmp
mov
popf
pop
mov
and
fdiv
arpl
and
stos
divl
push
adc
mov
cmpsl
xchg
shlb
call
sub
push
sahf
cld
or
jo
mov
jno
jbe
rclb
pop
jg
idivl
xchg
shlb
sub
and
mov
sub
leave
rcrb
inc
lahf
pop
repnz
mov
call
je
arpl
repz
loop
mov
fists
push
imul
jo
mov
in
jle
inc
mov
push
mov
and
mov
mov
outsb
and
sbb
aaa
ret
jbe
cmp
icebp
ds
in
mov
add
add
dec
cli
repnz
jo
inc
sarb
cli
inc
in
mov
or
mov
int
fcompl
popf
push
outsl
inc
jns
mov
movsl
pushf
loopne
mov
iret
jmp
sbb
lods
idiv
push
mov
daa
and
icebp
add
ss
test
fildl
fdiv
sub
cmp
mov
adc
mov
pop
test
stos
sub
nop
aad
mov
and
ljmp
lds
or
pop
test
mov
fs
sbb
das
jae
test
into
push
jb
arpl
sahf
mov
dec
cmp
mov
cmp
push
hlt
mov
filds
adc
sahf
test
cmp
xor
enter
int
inc
mov
pop
and
shr
mov
mov
mov
push
sub
inc
test
mov
xor
or
lahf
int
push
sahf
jp
cmp
add
int3
mov
or
addb
jmp
mov
inc
rolb
cld
xor
popa
int3
sbb
data16
add
jne
mov
out
xchg
out
lock
sahf
sti
sub
imul
push
xor
lret
int
xchg
xchg
push
mov
ret
popa
or
mov
push
xchg
xchg
out
dec
mov
in
enter
xor
jecxz
mov
xchg
inc
dec
or
adc
or
fadd
jle
pop
pop
sti
xchg
inc
loop
xchg
hlt
arpl
pop
push
aad
sub
or
push
push
icebp
pop
push
xor
pop
sub
push
cmp
sbb
mov
sub
jle
ret
inc
loop
mov
les
lods
lods
mov
clc
mov
repnz
push
out
push
mov
pop
stc
insl
test
jmp
jmp
push
cmc
fdivs
into
push
mov
pop
aam
inc
xchg
cld
orl
adc
adc
gs
dec
cld
popf
inc
dec
push
notb
sahf
out
lahf
fnstcw
jg
shl
pop
push
fwait
das
pop
pusha
xchg
aaa
jecxz
dec
mov
mov
add
out
xor
xor
mov
out
in
mov
dec
sub
stc
sub
rcll
xchg
push
xchg
cmp
fwait
push
into
in
push
xchg
and
dec
inc
jecxz
sub
std
pop
ss
mov
sub
int
jmp
test
jmp
call
lods
xor
or
cmc
add
xchg
testb
iret
jmp
fsubrl
push
or
push
dec
pop
cmc
jl
or
jle
adcb
adc
lods
sub
cmp
mov
insl
ja
ret
outsl
test
lock
cld
push
sbb
sbb
dec
movsb
pushf
adc
sbb
inc
aas
mov
cmc
ljmp
aas
jmp
scas
push
mov
add
test
push
adc
popf
mov
jmp
cmp
loope
enter
int3
mov
inc
jmp
pop
ljmp
lods
push
inc
js
mov
pop
mov
lds
sbb
sbb
and
dec
mov
inc
popf
pushf
cmp
dec
mov
push
cld
addr16
ret
loopne
jbe
jbe
sub
adc
or
into
sarb
adc
push
push
jns
aad
lock
mov
or
push
pop
mov
adc
mov
dec
lahf
es
push
inc
aad
in
cmp
pusha
test
add
jnp
movsb
lds
or
pop
cld
imul
cmp
jns
xor
jge
call
cmp
rclb
push
insb
dec
sti
or
mov
test
jo
popa
test
dec
mov
xor
sbb
xor
stos
mov
ds
mov
flds
push
insb
filds
lock
sti
jbe
in
ret
ljmp
insl
dec
test
dec
repz
xor
add
imul
ljmp
loope
xor
mov
pushf
pop
scas
xchg
sbb
fs
fisttpl
js
or
dec
enter
cmp
push
in
das
ljmp
ja
push
mov
gs
mov
and
and
pop
ljmp
pop
aas
daa
dec
call
inc
gs
and
insl
lea
lock
sbb
je
or
xor
adc
xchg
sub
jb
int3
adc
add
and
lock
adcl
and
pop
mov
movsl
jge
shl
push
jnp
and
int
sahf
dec
jb
xor
push
ljmp
rcrb
xor
push
adc
xchg
push
push
cmp
scas
cli
dec
lcall
stos
xor
mov
mov
outsb
dec
cmpl
mov
test
mov
sti
jae
ret
fucomip
imul
inc
mov
in
mov
xchg
mov
cwtl
fistl
lock
jbe
mov
in
in
push
pop
mov
test
push
jae
gs
xor
pop
in
xchg
sbb
movsb
dec
loopne
cld
loop
stos
filds
jns
rclb
or
cmp
das
sub
push
dec
sbbl
inc
gs
sbb
fsubr
push
pusha
fisubrs
jb
jecxz
sbb
data16
test
push
mov
shrl
mov
cwtl
jl
pop
hlt
test
jle
sar
cmpsl
cs
out
mov
mov
and
data16
mov
mov
fs
lahf
stos
dec
call
cltd
cmp
jo
mov
cmp
dec
pop
and
mov
fadd
mov
sub
cwtl
inc
push
std
cmpsb
adc
cmp
nop
xchg
mov
dec
subb
popf
sbb
stos
add
fcom
cmp
sub
scas
mov
sub
insl
lret
adc
push
test
fxch
inc
push
cmpsl
push
push
cmpsb
repnz
add
fwait
pop
sub
sub
mov
pop
test
pop
pop
movsl
ss
adc
push
xor
or
sub
mov
lahf
test
xchg
cld
inc
into
xchg
lea
out
sbb
mov
sti
mov
mov
decl
movsb
stc
loopne
fdivrl
lret
jmp
and
in
inc
mov
ss
xchg
pop
or
and
or
push
push
and
pop
ds
push
fdivp
adc
cmp
rep
inc
or
rcrl
xor
test
dec
jne
mov
sub
movsl
fdivrs
adc
mulb
shrb
sti
or
pop
fildll
sbb
mov
mov
jg
mov
loopne
adc
jo
bound
cwtl
push
cli
pushf
pop
xor
or
mov
movsb
adc
arpl
add
mov
inc
ds
mov
jp
inc
add
or
jl
lock
mov
mov
mov
out
xchg
add
sub
fs
lret
ja
ja
adc
lock
inc
or
jp
fidivl
push
mov
in
and
cmc
int3
pop
sbb
or
pop
push
mov
xchg
movsb
std
sbb
faddl
cmpsl
xorl
xchg
mov
rol
add
dec
jle
fs
aaa
pop
lahf
sti
ljmp
xchg
movsl
mov
or
mov
fistpll
or
cli
roll
std
dec
jp
cmpsb
mov
fdivrl
fsincos
mov
scas
mov
es
jae
aad
or
pushf
rcll
inc
into
jle
sbb
icebp
dec
mov
aad
test
out
sbb
out
add
insb
jb
sbb
cld
sbb
ljmp
out
or
test
ret
add
push
cmpsb
or
cmc
adc
and
or
add
jecxz
push
scas
lock
cmc
jle
and
out
and
dec
inc
mov
cmp
cmp
je
lods
or
sahf
push
dec
inc
outsl
pop
cmp
dec
in
aas
cmpsb
std
and
pusha
xchg
mov
les
jbe
pop
sub
rcrb
stc
lds
mov
sub
cmp
sbb
rol
addr16
jmp
cmp
fisubrs
and
xchg
lret
xchg
jno
cmp
cmp
cmp
hlt
pop
negl
lods
jg
lcall
int
xor
inc
cltd
stos
fcoms
outsl
mov
into
lods
adc
clc
cltd
out
jp
lock
aad
fidivs
pop
inc
inc
cwtl
arpl
test
inc
lds
je
mov
ds
mov
movsl
outsb
addr16
pusha
shll
sub
cmpsl
mov
or
ja
and
jne
mov
pop
in
push
scas
and
and
stos
jmp
mov
fisttps
mov
inc
mov
mov
mov
mov
gs
xor
leave
cmpsl
push
jg
loop
mov
pushf
repz
out
or
jmp
mov
adc
les
pop
mov
bswap
mov
cli
cmp
sub
outsl
adc
hlt
mov
stc
mov
das
xchg
mov
sarb
mov
das
jmp
mov
je
sub
add
lret
in
dec
lret
popa
les
repnz
xchg
or
in
xor
repnz
std
mov
in
mov
test
imul
push
imul
add
dec
push
imul
stos
cmpsl
fwait
xor
test
xchg
xor
fsubrp
sbb
adc
jnp
xor
int3
lahf
daa
popf
lods
hlt
xchg
lea
or
mov
es
ss
dec
aad
adc
jmp
in
jbe
adc
aam
popa
mov
xor
outsl
mov
cmp
xor
out
test
and
push
add
out
jg
lods
sbb
stos
sbb
xor
sub
mov
jecxz
adc
mov
xchg
fs
stc
imul
xchg
rep
inc
xlat
cmp
stos
xchg
roll
fcmovne
and
mov
getsec
xor
lret
lock
ljmp
sub
or
add
pop
add
out
adc
nop
aad
push
js
fwait
inc
add
out
push
add
lds
nop
jnp
or
test
push
add
js
jno
nop
nop
push
and
call
and
sbb
icebp
inc
pop
mov
popa
sub
sub
icebp
jecxz
sbb
pop
mov
xchg
setp
lret
pushf
sbb
cmp
repnz
cmp
adc
cmp
cmc
push
mov
sub
push
add
popf
mov
mov
rorl
inc
mov
inc
es
es
cwtl
shr
cmpl
mov
push
leave
push
mov
mov
adc
dec
les
inc
or
push
cmp
inc
int
je
dec
sahf
notb
adc
xor
out
dec
es
iret
jae
imul
roll
test
sbb
pop
out
push
mov
inc
imul
jge
pop
or
add
or
cli
and
in
ljmp
add
pop
sub
lods
mov
testl
bound
add
mov
dec
imul
add
or
add
mov
inc
pop
xchg
insb
sbb
dec
in
int3
pusha
cmp
jne
cmc
cmpsb
cmc
cwtl
adc
add
fnstenv
inc
call
hlt
nop
jecxz
adc
sbb
push
push
or
shrl
adc
arpl
outsb
ja
icebp
ret
inc
in
dec
insl
in
push
mov
lret
sub
cltd
lods
leave
or
or
mov
pop
jb
and
popf
test
mov
mov
or
mov
mov
js
addr16
adc
cmpsl
mov
mov
mov
mov
push
loopne
xchg
xlat
sti
fwait
loop
stc
mov
scas
sub
pop
out
mov
das
jp
lcall
dec
jl
insl
jmp
pop
lret
iret
testb
xor
cli
inc
or
xchg
mov
arpl
andl
stos
into
fucom
cmp
nop
lahf
pop
push
fisttpl
xor
pop
aam
enter
mov
or
xor
imul
lret
sbb
scas
push
jnp
xchg
arpl
cmp
in
loope
shll
out
nop
jns
mov
jne
sub
add
xor
cmp
scas
movsl
inc
push
and
scas
int3
inc
addr16
adcb
push
xchg
pushf
push
sub
jo
jmp
test
sub
xchg
in
aaa
test
call
jge
sti
dec
xchg
fwait
pop
mov
add
jns
mov
or
sbb
lods
aad
cmp
or
sub
loope
mov
stos
add
xchg
jle
xchg
rcr
nop
adc
sub
push
adc
lret
movl
adc
mov
or
fwait
jo
iret
enter
xchg
popf
or
pop
sub
imul
sti
arpl
mov
sub
leave
xor
fildll
mov
aad
xor
movsb
fstp
fildl
fiaddl
gs
mov
or
jle
cmp
nop
push
mov
stos
cltd
cltd
adc
push
je
std
jno
xor
aam
pop
aas
xor
loopne
mov
jnp
push
ret
mov
jecxz
loopne
mov
mov
pop
out
shrb
jge
push
call
ja
push
push
shl
imul
add
clc
mov
pop
dec
and
jmp
movsl
mov
hlt
xor
or
out
jle
mov
vxorps
mov
or
xor
pop
das
mov
movsl
fidivs
adc
sbb
into
das
je
lret
fisubl
lahf
pop
xchg
sub
lret
lock
lahf
pop
fdivrs
and
dec
jo
es
loopne
fcoms
fldcw
add
out
sarb
stos
push
aas
frstor
mov
pop
mov
pop
insb
pop
mov
sub
adc
push
mov
loop
fcomip
jmp
stc
loope
inc
lahf
inc
pop
or
pop
mov
add
adc
scas
mov
pop
nop
lods
add
fucomip
inc
mov
jmp
jecxz
rcll
stos
fidivs
repz
shlb
jmp
cmc
mov
push
scas
lods
xchg
and
jmp
loopne
xchg
mov
leave
dec
xchg
adc
movsl
add
push
cmp
ficoms
fcmovne
push
mov
negl
fucom
cmpsl
mov
imul
aad
int
shlb
dec
aad
mov
incb
push
xor
mov
pop
call
mov
test
pop
xor
mov
in
inc
ljmp
push
in
and
movsl
loopne
or
inc
in
jecxz
or
data16
imul
inc
adc
sbb
sbb
daa
xor
aam
jne
cs
mov
cmpsl
cmp
shll
cs
pop
popa
push
push
xor
shlb
push
sahf
in
addr16
dec
nop
xor
mov
aaa
add
push
jne
loop
in
cmpsl
in
cmpsb
aad
loop
push
lahf
jg
inc
lcall
sub
mov
ret
mov
add
and
xlat
cmp
and
fwait
sub
mov
pop
push
je
test
in
xor
outsl
mov
lods
pushf
add
jmp
xchg
mov
insb
jo
out
adc
out
add
inc
xchg
inc
xchg
sbb
mov
ss
imul
jnp
dec
dec
sti
repz
sub
mov
jbe
xchg
inc
aam
aaa
sbb
adc
dec
loope
shrb
stos
mov
inc
mov
push
hlt
ss
jge
cmp
sti
out
sub
rol
mov
jns
sbb
sarl
xchg
lds
add
mov
lods
in
mov
push
lcall
shlb
les
and
negb
pushf
addr16
call
push
aas
jge
jge
outsl
or
push
stc
lock
mov
addr16
pop
outsl
sbb
stos
adc
lret
add
ret
xor
lods
out
lods
fldcw
jo
data16
into
xchg
mov
mov
mov
pcmpeqb
push
and
inc
and
jecxz
jge
repz
fisubrl
enter
scas
into
clc
lcall
add
hlt
jae
rorb
or
mov
cmp
les
test
and
pop
push
cmp
push
mov
fisubl
rcr
push
sub
jmp
sub
add
cld
push
mov
icebp
rorb
xor
lods
or
xor
xchg
stos
clc
jl
pop
in
test
sar
std
push
push
call
pop
cmp
jo
bound
dec
ss
jp
ficompl
mov
or
notb
cmp
movb
adc
lods
loopne
add
pushf
adc
loop
test
mov
in
dec
repz
and
mov
or
xchg
test
add
pop
jmp
inc
and
test
fisttpll
cmpsl
dec
xor
sbb
dec
mov
mov
orb
sbb
and
sub
cmp
push
pop
cmp
add
mov
cmp
cmp
cmp
cmc
sbb
cmp
or
inc
aam
mov
xchg
or
test
jns
int3
mov
xchg
jmp
push
lcall
xor
mov
pop
or
mov
push
cmc
push
adc
std
test
cmp
stos
sbb
dec
adc
jle
xchg
das
stos
push
fbstp
push
jo
mov
pop
ss
ljmp
sbb
cltd
stos
jecxz
or
adc
into
lods
mov
and
mov
sbb
add
lret
xor
mov
call
sbb
cmp
cmp
xchg
movsl
adc
mov
repnz
xchg
das
or
mov
mov
sbb
movsl
inc
and
push
jmp
mov
dec
inc
mov
xchg
ds
lcall
les
mul
lods
scas
adc
icebp
mov
xor
movsl
js
es
cli
push
ja
jmp
and
int
ds
cwtl
mov
loope
stos
aam
in
stos
imul
inc
pop
inc
ds
jae
cwtl
xchg
push
adc
jns
lret
xor
bound
mov
shll
xchg
ret
xorb
and
inc
jmp
mov
xchg
or
dec
xor
jae
cmp
lcall
pop
sbbb
pop
pop
sub
or
fisttps
or
push
hlt
cmpsl
sub
push
outsb
leave
cs
aad
jg
testl
cmp
stc
rcrb
mov
and
mov
push
mov
mov
imul
aas
aad
shll
xchg
cmp
mov
lock
xchg
dec
lds
push
das
xor
loop
push
xchg
data16
mov
movsl
lahf
xchg
dec
rcr
push
or
mov
icebp
xor
iret
jmp
add
dec
push
pop
scas
mov
bound
clc
xor
loop
pushf
pop
int3
sbb
shl
in
arpl
and
inc
fists
sahf
sbb
cmpsb
lret
push
scas
cmpsl
repnz
mov
mov
pop
pop
xor
sbb
sub
daa
cmp
jle
and
mov
dec
xor
xchg
outsb
cwtl
cli
lahf
cs
pop
aaa
push
add
aad
jmp
loope
xlat
cld
or
ljmp
stos
push
test
add
int3
cwtl
mov
adc
ja
cmpl
mov
idivl
pusha
jl
dec
ds
jne
movsb
mov
int
sbb
cs
push
hlt
test
mov
add
scas
pop
xlat
int
fiaddl
icebp
and
in
pop
mov
or
popf
daa
dec
add
sbb
shrb
pop
sarb
fisttps
or
jbe
mov
and
mov
adc
into
dec
pop
outsb
sbb
dec
adc
mov
je
mov
jge
push
jb
cwtl
pop
jns
stc
scas
push
nop
push
je,pt
cmp
daa
mov
sbb
add
sbb
aam
sub
movsl
or
fisubrl
adcl
outsb
mov
out
pop
and
lock
or
jle
flds
enter
test
es
pusha
sub
sbb
ss
xor
dec
mov
jle
jmp
loope
addr16
or
aaa
mov
pop
sarl
push
cwtl
pop
push
pop
add
test
dec
dec
or
push
xor
mov
sub
cs
inc
sub
mov
cltd
xchg
cwtl
adc
cmp
adc
stos
push
dec
shl
addr16
sbb
dec
mov
and
adc
jg
lahf
sbb
mov
mov
roll
lock
jbe
inc
ficoml
sub
int3
into
mov
inc
test
repz
ret
push
xchg
fdivrp
push
mov
cld
iret
sti
ljmp
mov
sar
sbb
clc
add
sub
out
int
dec
repnz
mov
jne
out
and
aas
xchg
lcall
fldenv
addr16
xor
movsb
mov
push
out
xchg
push
fnstenv
sbb
push
xchg
mov
mov
mov
and
repz
sti
dec
mov
hlt
lods
mov
sub
dec
inc
mov
sub
mov
mov
mov
xor
mov
lock
fdivrs
push
adc
jns
or
out
xchg
in
fsubs
ja
jno
xlat
stos
xchg
mov
popf
les
cmp
mov
xchg
cmp
inc
aam
outsl
hlt
fdivs
ja
lods
enter
lret
adc
xchg
mov
ret
scas
inc
pop
dec
out
cmc
movsl
and
std
push
jns
pop
sub
shll
ret
imul
in
pop
jmp
pusha
mov
cmc
xor
mov
ja
cmpsl
dec
shrb
stc
inc
inc
arpl
cli
pop
std
and
testl
in
lahf
push
aaa
sub
sahf
sbb
in
popa
lods
cmc
ja
push
add
sub
inc
mov
out
das
push
push
pop
xor
add
mov
jmp
out
mov
loope
nop
fmul
mov
mov
sbb
ret
cmp
shlb
rolw
mov
dec
in
dec
rcrb
mov
idivb
call
clc
mov
and
je
mov
mov
push
jae
or
fidivrl
mov
push
insl
cmpsl
jge
mov
add
movsl
andb
mov
push
cltd
xor
mov
mov
fucom
dec
popf
sbb
imul
or
jle
pop
sbb
cmp
and
mov
clc
fs
popa
in
mov
mov
cmpsb
cmp
outsl
sbb
cwtl
test
mov
mov
aas
outsb
dec
sub
dec
xchg
int
dec
iret
std
pop
cmp
sub
mov
aas
push
push
pusha
inc
inc
adc
repnz
stc
gs
rcrb
push
or
pop
idivl
fdivl
dec
xor
adc
je
mov
lret
mov
popf
or
sbb
loopne
loope
dec
dec
or
push
pop
movsb
pop
cmp
mov
mov
sub
stos
push
jnp
popa
or
xlat
pusha
call
dec
push
sbb
stos
pop
xchg
js
cmpsl
sub
sub
add
inc
fxch
roll
jno
leave
es
int
cwtl
jl
adc
gs
mov
xchg
add
gs
es
insl
aam
ret
pop
push
xchg
fiadds
pop
movsl
and
loope
push
aam
fs
xchg
inc
jae
or
loop
imul
mov
or
and
sbb
icebp
aam
mov
cmp
mov
and
inc
pusha
fsubrl
inc
mov
jno
clc
ds
add
and
or
mov
mov
pop
mov
jo
in
cli
mov
fimull
fistpll
pop
ret
inc
mov
out
ficoml
jmp
pop
and
jecxz
mov
add
in
test
aam
orb
into
test
xchg
iret
pop
pusha
pop
insb
ss
incl
add
sub
dec
push
cld
arpl
wrmsr
pop
adc
cld
mov
sub
es
adc
outsl
or
imul
cmc
add
adc
iret
mov
filds
fsubrl
lret
and
xor
gs
mov
mov
nop
mov
mov
pushf
push
mov
jl
stos
sbb
fcmovb
cld
dec
insb
leave
and
into
pop
and
push
xchg
shlb
shl
loop
ret
jae
mov
inc
xor
imul
daa
ret
and
repz
test
test
jns
repz
pop
jnp
out
sub
and
xchg
add
pop
mov
popa
call
mov
pushf
call
ficompl
popf
or
pusha
add
scas
xor
xchg
outsb
jno
outsb
je
insb
mov
xchg
inc
mov
incl
add
mov
lahf
add
cmp
dec
dec
pop
adc
inc
mov
imul
mov
sbb
mov
pop
dec
inc
call
std
rcr
push
mov
jl
stos
jl
sbb
inc
ljmp
mov
dec
lods
fldl
iret
jmp
pop
mov
jge
sbb
fcoml
sbb
test
fcoml
cmpsl
outsl
cltd
popa
enter
fdivs
cmpsl
adc
ljmp
adc
lret
test
cmp
aam
shll
scas
call
xorb
push
ret
cmc
mov
sub
mov
add
xchg
inc
in
cmp
iret
shr
mul
xchg
mov
mov
negb
push
addl
mov
aas
ds
mov
push
and
lret
mov
fdivr
adc
and
mov
and
push
stos
xchg
sbb
bound
cs
inc
inc
xor
imul
cmp
data16
fadds
or
sbb
mov
mov
lret
js
xchg
call
sub
push
mov
mov
cmp
iret
vmovlpd
xchg
mov
xchg
mov
xchg
sbb
ror
xchg
in
aaa
pop
push
mov
imul
sbb
push
mov
clc
xchg
test
push
out
je
mov
sbbl
sti
loop
add
inc
sbb
inc
and
das
imul
cli
or
add
lds
fs
and
or
les
cltd
push
xor
out
bound
ficoml
aad
call
add
jb
cltd
mov
jo
mov
fnstcw
or
imul
movsl
leave
aas
xchg
imul
int3
inc
dec
sbb
mov
sbb
jno
xor
shll
inc
bound
push
testb
outsl
pop
pop
push
aaa
rorb
cmp
enter
std
je
lods
lcall
aaa
hlt
mov
cmp
cltd
mov
data16
cmp
xor
out
inc
push
es
stc
mov
sub
fmul
push
push
mov
addr16
ret
ret
xchg
sbb
jae
jno
adc
movsb
add
movb
popa
call
sbb
inc
shl
rcrl
and
jecxz
mov
mov
faddl
or
je
cmp
push
cmp
xor
iret
imul
xchg
scas
das
clc
outsl
mov
out
daa
mov
insb
out
xchg
ror
jg
out
add
aam
outsb
xchg
mov
enter
inc
add
pushf
add
repz
xlat
mov
pop
aam
movsb
mov
fidivs
subl
cmp
dec
xlat
jecxz
and
stos
fsub
cmpsb
popa
loopne
cld
enter
orb
icebp
push
lahf
movsl
out
mov
jo
repz
xchg
pop
sar
xchg
dec
dec
fwait
add
repz
jno
cs
fwait
jb
es
xchg
push
xor
cmpl
mov
out
loope
ficomps
rolb
sub
loopne
push
cltd
dec
mov
sub
mov
out
push
js
inc
mov
jge
jecxz
cmp
and
pop
mov
movsb
out
pop
into
lret
jne
mov
in
fidivl
pop
es
add
jnp
lcall
sbb
out
cmpsb
adc
and
repnz
mov
mov
cli
lcall
fcmovbe
js
repnz
rol
data16
inc
xchg
call
out
fimuls
subl
mov
xchg
in
cmp
icebp
movsl
les
mov
enter
dec
jae
push
dec
xchg
xlat
mov
mov
aad
addr16
cwtl
mov
lret
je
adcb
and
orl
or
imul
dec
cwtl
or
out
mov
inc
mov
add
cmpsb
or
ret
dec
jb
fiadds
push
jns
mov
and
pop
test
mov
test
mov
or
pop
inc
pop
pop
stos
outsb
xchg
adc
sub
shlb
int
sbb
xchg
es
dec
daa
insb
stos
scas
clc
xchg
mov
xlat
lods
pop
jb
xchg
dec
in
xchg
fisttpll
in
aaa
mov
adc
jl,pt
sbb
mov
outsl
repz
lods
lods
dec
outsb
sub
scas
repnz
jge
mov
add
pop
sub
sti
xchg
mov
mov
sub
test
cmp
jmp
ficomps
popf
popa
sub
pop
loopne
clc
fdiv
or
inc
xlat
inc
mov
mov
jle
sub
lods
push
fstpt
fucomp
out
outsl
outsb
pop
pop
mov
xchg
add
push
lock
inc
icebp
push
cmp
mov
xchg
rcrb
popa
js
inc
sub
adc
or
xor
in
stc
inc
cmp
movl
ret
stos
adc
mov
pop
lock
cmc
test
cmp
fldt
fstpt
pusha
cld
mov
das
stos
shlb
stos
hlt
mov
imul
sahf
test
prefetch
or
add
xor
inc
lods
imulb
pushw
bound
sbb
lea
jns
pop
lret
inc
mov
push
push
xchg
mov
mov
jle
xor
xchg
sarb
movb
jmp
cmp
inc
dec
sub
sub
rcr
pushf
insb
xor
cmc
mov
dec
test
or
addr16
stos
xchg
aam
push
adc
jge
ljmp
push
decb
aam
flds
dec
out
or
cmp
stos
jmp
push
fmull
push
push
mov
pop
cs
ja
and
mov
mov
les
repnz
bndldx
pop
push
jbe
popa
lahf
test
cs
out
lea
test
sahf
das
dec
xorb
pop
mov
push
push
pop
sub
fwait
sti
add
adc
dec
jno
push
or
add
lds
loop
push
les
add
and
dec
push
mov
cmpsl
add
jl
push
jg
cmpl
jbe
insl
xchg
ja
xor
es
mov
inc
xor
mov
cld
addr16
popa
fisubl
je
shl
fistps
ja
inc
stos
sub
pushf
mov
repz
sarb
or
out
test
das
cmpsl
scas
add
loop
ret
sub
pushf
rcll
jecxz
sbb
jecxz
not
fmuls
ss
ss
xchg
insb
dec
jg
jae
lock
push
sub
data16
rcrb
dec
cmp
cmp
push
xchg
call
rcl
ja
out
mov
scas
popf
mov
lea
push
mov
sub
xor
rolb
movsb
jmp
jo
push
sbb
mov
push
or
sub
in
mov
mov
loop
jmp
jge
mov
gs
cmpsb
jp
xchg
nop
mov
mov
test
test
xor
cltd
outsl
bound
push
cld
sarl
mov
sbb
mov
jge
jmp
mov
stc
scas
ljmp
scas
mov
pop
sbb
and
pushf
lock
ljmp
pop
arpl
lahf
add
scas
pop
scas
int3
xchg
out
add
or
inc
ret
mov
ret
xor
insb
ret
push
scas
mov
subb
mov
js
pusha
hlt
lret
jae
hlt
sbb
mov
clc
das
nop
scas
call
dec
movsb
jb
jo
outsb
sbb
mov
jnp
jge
dec
xor
test
into
mov
leave
in
cli
fcomip
cltd
add
inc
ficomps
stc
push
pop
int
stc
repz
and
lret
inc
pop
push
sub
addr16
sbb
popa
test
xchg
dec
aam
lret
inc
addr16
or
dec
inc
mov
in
aad
inc
rolb
insb
mov
mov
lds
cli
negb
insb
and
xchg
ds
iret
shlb
test
and
clc
testb
je
cmp
pop
sub
insl
push
test
or
in
aaa
pop
jne
adc
pop
out
sub
xor
int
xorl
mov
pop
mov
ljmp
stos
fldt
popf
push
lahf
adc
decb
xchg
sbb
dec
shll
into
xor
imul
movsb
cmpsl
cmp
and
js
repz
int
shl
ljmp
add
lods
jg
mov
fcmovnbe
cmp
inc
sub
jle
mov
jmp
cmc
sti
dec
outsl
in
pop
xor
outsl
out
xchg
std
xchg
out
jg
sti
add
iret
hlt
inc
lods
xchg
fs
fs
stos
fcoms
pop
fadds
orb
cmp
pusha
jl
sub
jl
bound
add
mov
add
push
addl
cmp
in
es
movsb
fbstp
lea
or
rclb
mov
or
aam
fs
loope
sub
dec
mov
cmp
inc
fstpt
mov
lret
push
pop
xchg
dec
jge
movsb
cmpsl
iret
push
xchg
aas
ss
pop
pop
jb
cld
adc
icebp
jb
addl
sub
mov
jnp
xor
jmp
cltd
ret
push
and
fldcw
or
xchg
inc
arpl
jl
add
and
jno
mov
pop
cmp
pop
pop
test
adcl
cltd
xor
xor
xor
hlt
in
mov
test
jns
sbb
gs
inc
cmp
lahf
lret
dec
inc
inc
lgs
inc
cs
in
mov
mov
xor
and
cmp
test
mov
inc
rclb
stos
adc
int3
add
cltd
mov
lret
xchg
lods
adc
inc
fadds
je
sbb
mov
outsb
push
daa
cmp
mov
and
enter
mov
arpl
push
mov
lods
sbb
add
out
lcall
lods
sub
push
rcrb
inc
inc
repz
mov
inc
mov
dec
shlb
and
lock
pop
and
sahf
push
test
test
test
inc
and
daa
dec
fdiv
cmp
and
mov
cltd
shlb
inc
arpl
pop
loope
cmp
outsl
fwait
jne
ljmpw
fsubrl
add
sub
ljmp
sub
aam
inc
movsl
or
add
gs
mov
movsb
mov
sbb
or
dec
or
in
imul
out
iret
js
repz
repz
dec
in
jecxz,pt
lret
add
jb
jae
inc
dec
cltd
lcall
gs
adc
mov
adc
and
jmp
mov
mov
out
cmpb
dec
dec
and
cmpsl
inc
and
popa
std
ja
cmp
push
lahf
sarb
fldcw
jmp
cli
mov
xorb
jbe
clc
psubw
in
fists
cmpb
mov
js
sbb
scas
sti
jae
fstp
loopne
push
xor
add
fdivs
popa
mov
daa
mov
lret
jb
ficoml
mov
add
jp
push
aad
push
cmp
xchg
push
insb
mov
mov
inc
dec
mov
out
dec
inc
out
sub
orl
add
bound
das
xchg
lret
dec
mov
xor
dec
mov
mov
push
add
es
nop
pushf
gs
pusha
out
test
cld
cmc
fcoml
clc
fwait
enter
mov
arpl
les
sbb
lea
mov
push
je
or
pop
xor
movsl
hlt
into
pop
and
jl
nop
and
push
xchg
repz
addr16
and
xchg
sar
sbb
xchg
popf
mov
sub
pop
and
rclb
cmp
mov
or
jle
push
ljmp
push
sbb
lahf
sbb
adc
sbb
lahf
stos
shr
mov
bound
mov
loop
add
insb
adc
loop
std
imul
ja
in
pop
push
cmc
insl
pop
cmp
addr16
in
jmp
lods
cmp
xchg
sub
cld
ss
mov
daa
out
lods
out
cmp
in
xchg
and
mov
aas
mov
sahf
cltd
insb
jne
repz
fmull
push
add
pop
bound
mov
mull
mov
inc
add
rorl
imul
push
add
loopne
inc
fisubs
fsubr
fisubrl
mov
push
incb
movsl
or
adcl
addb
inc
popa
mov
mov
aas
nop
push
xchg
dec
daa
cmp
mov
mov
jg
or
lock
aaa
jmp
mov
scas
fs
out
outsb
das
call
jp
mov
into
mov
fistps
push
sbb
insb
enter
cld
test
lretw
imul
out
rorl
sarb
cmp
mov
aam
inc
in
xor
fstps
sbb
xchg
iret
inc
ss
push
jp
pop
jl
xchg
adc
mov
jp
mov
movsl
aam
adc
fdivp
test
pop
jge,pt
shll
pop
pop
mov
push
mov
outsl
std
pop
or
jb
faddl
or
push
push
fcmovbe
inc
fwait
stos
add
popf
lret
aad
pushf
xchg
iret
stc
add
lods
add
and
in
dec
xchg
popf
inc
cmp
pop
and
rolb
test
sub
mov
and
jle
mov
and
push
mov
or
ds
sbb
pop
mov
or
cmp
aaa
sbb
pop
xchg
outsl
jns
adc
mov
in
fisttpl
push
out
pop
sub
or
push
inc
ss
mov
jns
mov
aad
mov
jnp
add
divb
or
arpl
and
and
je
leave
insb
pop
lock
and
test
mov
sarl
xor
jmp
stos
push
pop
jg
pop
or
pushf
inc
xchg
pop
jns
pop
inc
ret
adcb
stc
xlat
daa
repnz
repz
sti
jb
xchg
cmp
and
lds
test
add
push
outsl
out
mov
mov
and
mov
mov
jecxz
in
arpl
xor
daa
pop
sarb
mov
test
dec
or
or
adc
std
mov
push
push
adc
jnp
cmpsl
iret
sbb
jecxz
pop
pop
shlb
fimuls
mov
jo
sbb
movb
movsl
push
mov
scas
push
jo
enter
jae
cltd
sbb
test
ljmp
test
pushf
pop
cmpsb
out
xlat
in
aam
or
ljmp
cld
and
sub
in
jg
sbb
hlt
inc
adc
sahf
dec
inc
and
fst
std
mov
jge
fisubl
outsb
sub
add
xor
and
fwait
mov
imul
push
popa
outsl
cmp
imulb
in
jbe
lret
je
ss
clc
in
mov
sbb
dec
ss
pop
in
cli
xor
mov
jl
jge
xchg
sbb
dec
loope
add
pop
out
into
mov
cmp
cli
jle
pop
incl
push
push
mov
lds
outsl
xchg
mov
mov
mov
int3
fidivl
mov
std
cwtl
in
cmpsb
in
jg
mov
and
in
shrl
lea
jge
mov
adc
sbb
stos
bound
jne
clc
pusha
cwtl
icebp
hlt
loope
xchg
mov
test
or
fisubs
lcall
jp
inc
aas
scas
call
add
movsb
mov
mov
jb
out
bound
pushf
sbbb
test
xchg
iret
pop
cmpsl
dec
adc
mov
xor
cmp
or
aas
mov
aas
dec
or
test
rcll
jns
add
imul
sarb
mov
xchg
cwtl
adc
or
xchg
sahf
pop
sbb
xchg
das
int
roll
xchg
sbb
sbb
inc
out
sbb
mov
std
cs
xchg
in
scas
in
xchg
sbb
in
push
fdivs
popa
nop
lock
xchg
dec
in
adc
sub
xlat
data16
clc
adc
stc
mov
mov
adc
mov
cmc
pop
xchg
dec
push
enter
inc
cmpsb
mov
xor
dec
addl
cmp
sub
lods
xor
je
sbb
xchg
pop
mov
clc
pop
test
ds
dec
and
xor
out
cmpsl
arpl
arpl
pop
scas
push
insl
fsub
pop
or
test
push
lods
or
jmp
push
pop
jo
ret
ss
jns
subl
shll
out
adc
dec
sbb
dec
add
inc
and
and
cmc
push
push
pop
in
clc
mov
and
lods
sbb
xchg
rcll
or
ficompl
or
adc
push
cmc
imul
xchg
ret
xchg
sub
add
pop
pop
or
pop
sub
add
icebp
jae
xchg
pop
xchg
hlt
in
sbb
mov
fidivl
test
mov
jge
pop
inc
mov
mov
push
shrb
jge
ds
lcall
fmul
int3
pop
aam
mov
gs
xchg
cmp
lock
pop
xor
lods
negl
mov
data16
jnp
add
pop
push
adc
or
cmp
int3
adc
add
jmp
add
ss
sbb
and
add
xorb
inc
pop
mov
aas
pop
push
fbld
mov
jecxz
rcl
or
and
jmp
scas
test
int3
aaa
jo
lcall
and
les
adc
push
out
pop
clc
xchg
leave
je
mov
sbbb
lock
addr16
aad
pop
orl
xchg
mov
ret
mov
in
mov
inc
insb
into
pop
mov
inc
mov
adc
fnstcw
sbb
xchg
bound
xor
push
pop
xchg
or
mov
lods
pop
inc
mov
add
leave
xchg
gs
popf
adc
daa
mov
sub
in
dec
fs
jno
mov
adc
jg
sub
and
push
mov
xor
fldenv
push
push
sbb
push
pop
mov
out
push
and
cmp
call
sti
xor
addr16
push
jno
sarb
push
clc
sbbb
int3
xchg
cmp
jecxz
lahf
cmp
lcall
pop
pop
iret
push
jmp
jg
lods
sahf
fadds
cmp
and
xlat
cmp
mov
pop
jae
xor
mov
movsl
and
scas
cld
outsb
movsl
ffree
and
mov
cmp
adc
cvtpi2ps
jg
or
int
cmc
jbe
pop
nop
mov
ret
or
xchg
rorb
insb
inc
push
mov
es
ja
xor
jmp
push
and
mov
jo
mov
inc
cs
fiadds
inc
das
or
mov
insb
test
sub
rep
movsb
push
or
mov
or
popf
mov
mov
sbb
in
lock
push
dec
addr16
test
test
pop
mov
aas
push
mov
shrb
data16
xor
cs
jmp
mov
sahf
fwait
jb
push
cmc
ret
fwait
xor
test
add
xchg
int
jae
jbe
mov
adc
ficomps
fwait
mov
ja
mov
aas
push
jle
xchg
jb
jo
test
sti
repz
cmp
mov
mov
clc
xchg
vpsraw
cmp
jno
mov
sbb
mov
lock
mov
lcall
nop
aaa
jmp
stc
push
in
mov
pop
test
pop
daa
imul
add
jb
mov
bound
push
push
and
sub
es
cmp
dec
dec
adc
js
mov
call
cld
in
pushf
jg
and
jno
and
or
inc
icebp
push
adc
sub
out
xchg
sti
jl
lea
dec
pop
add
out
outsb
sub
mov
pop
sub
cmpsl
idivb
push
mov
sbb
mov
fldl2e
fbstp
push
sub
or
adc
cmp
xchg
mov
add
push
je
inc
bound
xor
pop
iret
das
inc
sbb
fsubrs
and
shl
mov
out
fists
jmp
sbb
mov
jecxz
pop
fst
sub
into
xchg
cli
lods
jp
call
lods
loope
jg
fbstp
mov
add
jo
outsl
xchg
js
mov
lret
std
or
clc
push
jle
sbb
clc
mov
pop
movzwl
fdivrp
loop
icebp
hlt
sub
mov
fstl
inc
mov
enter
scas
dec
in
sbb
fnsave
rcrl
test
push
jmp
and
dec
jne
jb
test
mov
into
xlat
sbb
or
or
fists
xor
scas
mov
mov
decb
mov
mov
or
dec
xor
and
mov
movsl
fmuls
and
mov
xchg
mov
dec
jne
std
shlb
jne
pop
jp
mov
lds
mov
mov
xchg
hlt
popa
clc
sub
or
cmp
dec
mov
dec
fisttpll
xchg
loop
mov
sbb
and
lcall
and
or
xchg
mov
mov
push
pop
shrl
sbb
shl
sub
xchg
pop
jg
repnz
xchg
cwtl
mov
rcll
xor
insb
push
in
push
or
xchg
mov
jmp
sbb
xchg
adc
jle
dec
xor
in
inc
fnstenv
cmpl
imul
fstpl
insl
jb
out
sbb
xchg
add
inc
fnstsw
shrl
inc
in
add
cld
loopne
fisubrl
cmp
bsf
push
push
or
stos
gs
enter
or
mov
dec
les
mov
xor
test
xor
shll
test
dec
in
in
dec
add
fsubp
sbb
pop
jp
push
test
idivb
mov
ds
jb
mov
sub
inc
sub
jnp
lahf
aad
out
cld
add
rolb
outsb
add
inc
aas
enter
dec
cmp
rcrb
or
mov
sub
xor
aad
insb
ja
xchg
pop
push
orps
push
push
xlat
stos
int
sub
cli
lcall
ret
sub
fnstcw
xchg
mov
sbb
push
dec
xchg
push
mov
xor
pop
fcmovu
xchg
into
mov
xor
adc
dec
insb
sub
jno
cmpsb
add
cwtl
pop
and
jne
mov
mov
add
lahf
push
mov
jecxz
xchg
and
cmpsb
sub
mov
add
orl
rcl
add
cs
in
loopne
insb
call
cmpsb
pop
popf
cmp
adc
adcl
xor
pop
daa
xchg
jmp
fs
pop
xor
inc
push
adc
add
mov
push
dec
pop
mov
inc
ds
andl
fsubp
xor
ficomps
cltd
clc
movb
popf
outsb
pop
sub
icebp
add
jns
repz
push
add
adc
sbb
in
cmp
notb
jne
sbb
loop
imul
fsubp
jp
and
xchg
insb
cmpsb
fimuls
jbe
or
sub
mov
std
call
sub
and
out
inc
dec
stos
push
cmp
shrl
mov
adcb
test
push
out
mov
popf
adc
shl
test
cmpsb
inc
mov
push
xchg
addl
and
mov
sub
sbb
inc
pop
adc
add
dec
inc
push
adc
psrld
test
fimull
mov
pop
mov
popa
mov
adc
in
ret
lret
jns
xchg
sbb
mov
adc
pop
setbe
mov
clc
cwtl
mov
in
xchg
out
call
data16
mov
cmp
mov
push
scas
roll
sub
out
xlat
adc
xchg
loopne
scas
push
mov
adc
push
loop
dec
mov
aaa
addr16
fld
pop
mov
test
pusha
pop
cmp
in
or
mov
pop
out
pop
pop
mov
fs
aaa
and
jmp
dec
daa
lods
repnz
jne
cs
jg
adcl
jnp
imul
int3
hlt
idivb
addr16
cmpsl
sbb
mov
jbe
out
push
mov
bound
fcmove
push
imul
insb
sarb
push
and
insl
stos
pop
loope
dec
testl
mov
sub
jg
out
xor
loopne
ret
sti
or
in
js
lods
ljmp
out
push
repnz
sub
lret
cld
hlt
sbb
adc
pusha
jne
mov
cltd
dec
sbb
cli
cmp
int
inc
decb
pop
scas
or
inc
arpl
dec
lcall
push
inc
shrb
arpl
mov
mov
sti
adc
js
or
lahf
fisttps
mov
mov
int
leave
das
xchg
fldenv
mov
arpl
sbb
lods
iret
xorl
push
xorb
and
int
xchg
adc
sahf
xor
xor
mov
jns
in
adc
or
add
daa
or
and
stc
clc
ja
mov
lds
shll
stos
push
cwtl
push
jmp
sbb
in
push
std
mov
pop
repz
aad
xchg
jae
scas
inc
iret
and
loop
sub
mov
gs
pop
loope
shlb
xor
cmpsb
sbb
lods
imul
xor
ficompl
aas
in
dec
mov
adc
loopne
ja
push
clc
sub
cmpl
and
lret
jns
in
pop
pop
xor
imul
or
mov
push
inc
loop
test
sbb
mov
or
ja
pop
sub
cmc
inc
push
push
pop
movsl
adc
call
inc
mov
mov
call
jns
and
aas
jbe
jo
out
cmp
dec
dec
cmpl
lret
inc
xchg
xchg
ret
outsl
or
xor
incb
mov
call
cmovge
or
ja
fisttpl
ss
push
fadds
sbb
mov
adc
ret
sbb
cld
xchg
cmpsb
scas
aas
adc
in
test
adc
mov
inc
add
xor
cmp
lock
insl
roll
jmp
push
mov
cmp
js
les
cmpb
pusha
pop
insb
fwait
pushf
movsl
xor
scas
subl
inc
lods
cltd
lret
imulb
mov
jp
and
mov
das
ss
fldl
cmp
and
pop
outsb
int
push
rcr
mov
add
out
jb
push
mov
sbb
jae
xchg
std
je
or
sbb
xor
repz
xor
and
cmp
push
jl
sub
test
lret
xchg
ljmp
stos
mov
inc
rcrl
jno
fwait
xchg
cmp
cli
inc
imul
in
fisttpl
xor
adc
xchg
shl
cmp
and
mov
out
pop
ret
cmp
cmp
shr
adc
push
and
cmc
out
inc
xor
jno
dec
int
fimull
into
sbbb
mov
ds
outsb
pop
cmpsl
pushf
pop
mov
hlt
call
sahf
adc
mov
std
mov
fs
adc
mov
sbb
lods
cmp
fisttpll
sbb
cmp
push
sbb
faddl
ffreep
and
push
sti
lea
cwtl
pop
sub
cld
inc
mov
nop
sbb
and
or
or
xlat
sub
mov
mov
push
mov
push
cmp
xor
xchg
out
xor
scas
aad
push
fldt
mov
xor
mov
sbb
jp
das
popf
push
push
mov
out
mov
jmp
cmp
adc
mov
push
pop
lret
xor
adc
mov
mov
dec
cmc
jb
dec
addr16
adc
jle
jge
mov
or
xlat
mov
jge
push
cmpsb
inc
or
lretw
in
inc
cmp
fisubs
int
aaa
iret
mov
cltd
mov
ds
enter
sub
add
sub
repnz
dec
popf
js
dec
mov
mov
in
push
ret
mov
and
adc
push
outsl
xchg
into
sbb
dec
hlt
loope
cmp
stos
mov
or
movsb
sub
and
dec
sub
mov
dec
punpckhwd
lea
mov
pop
ds
outsl
add
fstpl
inc
in
bound
cmc
das
dec
movsl
adc
orl
sub
mov
loopne
xchg
cli
push
cli
or
lods
popf
in
daa
inc
push
jne
fistps
sahf
xchg
outsb
aam
sub
dec
fwait
in
inc
int
stos
pop
loop
mov
add
repnz
jbe
mov
gs
ljmp
sahf
lds
xlat
cld
xor
mov
inc
sti
mov
cmpb
mov
pushf
cmpsl
sbb
cs
sbb
imul
leave
inc
es
pop
fptan
mov
jl
jl
lds
cmp
pop
cli
mov
popa
lcall
popf
xor
fstpl
mov
sub
xor
cld
and
repnz
inc
aam
cmp
or
popa
and
fwait
in
push
aas
imul
xor
cli
dec
mov
insl
add
mov
cmpsb
jmp
popa
sbbb
jmp
push
inc
pop
add
adc
ja
test
inc
mov
dec
jb
into
lods
int3
movsl
call
enter
mov
shrb
fidivl
or
out
cli
add
into
push
bound
mov
loopne
idivb
lock
idivb
notrack
mov
jle
lods
lahf
push
xor
and
xchg
cmpl
push
stos
test
lret
repz
jmp
fistl
pop
mov
mov
movsb
mov
pop
mov
and
or
ja
rclb
sbb
push
inc
mov
push
fstpt
pop
inc
ret
shl
add
stos
sbb
add
dec
mov
das
std
into
jl
leave
cld
loopne
adc
inc
lret
pop
pop
into
ret
fcompl
pop
dec
and
lods
shlb
push
jecxz
pushf
jae
cltd
push
inc
jg
xchg
filds
inc
das
fmul
movsb
jae
add
sahf
xchg
ret
adc
inc
stos
fdivr
jmp
test
imul
push
xchg
jae
sbbb
adc
xlat
push
dec
adc
bound
sti
sub
mov
daa
subb
mov
dec
dec
andb
mov
aad
mov
scas
dec
ret
fdivrp
loopne
enter
lea
repz
mov
mov
mov
and
das
mov
decb
test
xchg
add
test
jle
bound
test
pop
or
aas
cwtl
fsts
push
fbld
fcoms
add
cmc
jbe
cs
pop
pop
in
ss
inc
bound
dec
xchg
aad
fidivrs
cwtl
cmp
adc
and
or
inc
cmp
mov
or
sbb
cmpsb
mov
push
push
imul
jns
lcall
push
mov
push
dec
sub
loope
push
aad
adc
xor
js
push
stos
outsb
mov
mov
enter
ror
movsb
mov
fnstcw
lods
jle
push
and
gs
fisubrs
imul
pop
push
push
stos
cwtl
mov
les
push
xchg
bnd
push
or
int3
lock
xor
test
xlat
jae
sahf
pop
enter
xlat
js
mov
or
std
aas
popf
jo
stos
sub
push
lret
es
push
cltd
and
daa
dec
cmp
imul
jecxz
insb
cld
jbe
rcl
pusha
mov
je
test
xchg
fistps
pop
mov
stos
test
movsb
and
in
scas
xchg
shlb
mov
jecxz
and
in
lahf
push
insb
test
rclb
jge
dec
sub
adc
repnz
mov
hlt
push
xor
cmp
je
out
mov
sbb
cmpsb
and
push
repnz
popf
cmp
test
fdivs
jae
fwait
cli
mov
and
cld
movsl
repz
pop
jecxz
js
jg
insb
inc
pop
std
and
mov
lock
into
xchg
jo
cs
push
push
sub
fdivrp
dec
inc
cwtl
jg
push
inc
adc
hlt
push
mov
mov
push
xor
adc
sub
push
push
jge
add
fdivr
push
lods
fldcw
notl
and
cmp
cwtl
mov
loop
int
jne
fbstp
adcl
mov
dec
decb
arpl
out
mov
lock
outsb
add
sub
leave
cmp
dec
mov
push
ret
test
sahf
ds
jl
repz
lahf
andb
xor
sbb
pushf
inc
push
or
fs
fnstcw
push
sub
repnz
jecxz
popa
mov
gs
push
popf
into
popa
inc
and
pop
in
lahf
test
inc
ja
shl
mov
js
out
lret
es
adcl
and
out
out
cltd
xor
adc
add
add
pushf
push
sbbb
adc
popa
pop
push
add
lock
mov
sbb
cmp
cld
mov
mov
and
xchg
push
stc
jmp
les
andb
testb
loope
fst
dec
popf
mov
js
faddl
aas
cmc
mov
lds
mov
dec
out
push
or
jb
test
sub
roll
inc
leave
repnz
add
les
cltd
mov
jnp
sbb
jmp
xor
pop
jnp
xor
adc
fnstenv
cmp
mov
cmpsl
cltd
sbb
lds
jne
cs
xchg
popf
mov
movsl
inc
ja
mov
pop
mov
cmp
mov
and
mov
or
jge
dec
lret
mov
shr
je
mov
fstpl
and
or
sub
ss
push
hlt
jg
and
and
lahf
pop
sbb
test
dec
jns
iret
imul
push
lahf
fsubl
ret
sbb
iret
lods
sahf
fsubp
lret
ss
ret
and
cmpsl
mov
addl
push
hlt
stos
cmpsb
leave
jl
jbe
add
xchg
add
jns
pop
or
ret
ret
lret
xchg
inc
adc
push
xchg
lahf
call
inc
sub
hlt
out
mov
arpl
rclb
rolb
shl
movq
cld
cmpsl
mov
in
push
fsin
push
fists
cli
popf
jg
ret
call
sub
sub
pop
rcrb
lock
adc
sbb
sbbl
ja
push
popa
in
jecxz
ss
jns
cmc
inc
std
cmp
inc
aad
test
addr16
add
mov
pop
sti
mov
mov
in
aas
cmp
xchg
in
sbb
popa
pop
pop
jl
fs
adcl
stos
int3
in
fimuls
loope
jb
push
mov
mov
cs
lret
jb
sahf
std
sbb
test
jbe
xchg
aam
mov
xchg
pop
cltd
push
mov
imul
cwtl
jmp
fxch
addl
mov
cwtl
cmp
inc
lahf
adc
or
adc
cs
mov
push
imul
mov
dec
ret
cmp
or
cmp
fbld
enter
ja
inc
and
add
push
mov
lea
or
mov
mov
mov
xchg
mov
xchg
push
test
xor
mov
ljmp
jl
ja
push
imul
xchg
out
inc
jbe
or
aad
ret
mov
sbb
std
rol
les
inc
dec
inc
outsb
dec
pushf
add
in
push
sbb
or
pop
fstpt
stos
ret
ret
inc
cmpsb
pop
adc
sti
punpcklbw
jns
inc
ja
xchg
mov
push
push
mov
and
repz
xor
jecxz
jno
mov
ud1
in
inc
ljmp
add
inc
mov
or
sub
xchg
int3
movsl
inc
clc
pop
imul
rol
mov
pop
enter
push
sbb
gs
and
shll
jno
in
cmc
add
adc
je
inc
add
jo
sbb
loopne
aaa
inc
jo
sahf
jp
cmpsl
jge
out
jne
mov
adc
push
add
into
pop
mov
fcmovbe
popl
fildl
or
testl
sub
jns
mov
out
push
cmp
jae
mov
adc
shll
stos
jo
in
aas
popf
fcmovnu
repnz
shll
rcrl
jbe
and
xor
inc
mov
add
cltd
pop
xchg
repz
cmpsb
pop
test
stos
lcall
mov
in
test
cmp
fcmovnb
test
cmpsb
roll
xor
popf
sbb
inc
cwtl
mov
add
pop
sub
inc
or
pushf
inc
das
adc
movsl
add
lret
xor
sub
frstor
in
mov
int3
gs
out
add
fcom
pop
add
test
cmp
and
flds
lret
mov
or
cltd
pop
out
adc
xor
daa
mov
push
stos
adc
pop
xchg
mov
add
xchg
xchg
cmp
aaa
mov
xor
pop
add
dec
sar
adc
test
cmc
xchg
loope
ljmp
pop
add
pop
pop
mov
ljmp
xchg
xchg
lock
fwait
xchg
fldcw
jnp
or
push
sbb
pushf
push
adc
dec
mov
scas
sub
shl
js
lret
das
rcrl
int3
sahf
popa
jb
jp
lds
fisubs
push
fwait
out
loop
pop
in
mov
cs
popf
inc
and
xor
add
push
jo
lahf
xchg
test
jb
sub
xchg
repz
dec
fwait
and
adc
add
xchg
rcr
inc
jg
jmp
jl
lahf
pusha
cmp
dec
lret
insb
fcmovnu
cmp
mov
push
ficompl
mov
cld
and
push
mov
push
sbb
dec
add
and
push
sub
out
jb
sub
xorl
mov
scas
dec
mov
shll
sar
out
or
inc
hlt
in
xchg
xor
mov
pop
lret
push
lods
leave
divl
sbb
push
or
pop
shll
mov
xchg
int
into
xchg
dec
cmp
xchg
rolb
stos
adc
cmp
inc
ds
xor
jl
in
push
outsl
cmp
mov
pop
xor
xchg
in
pushf
adc
addr16
dec
pop
pusha
nop
lock
repnz
test
ror
inc
sbb
clc
xchg
or
insl
cwtl
dec
sub
xchg
inc
and
cli
mov
xor
aam
mov
inc
test
pop
mov
cmp
pop
test
insl
xor
lret
push
cmpsl
shll
mov
test
mov
jle
pop
fsubr
xchg
sahf
pop
jmp
out
mov
jne
insb
fs
sub
mov
push
jl
pop
into
jmp
sbb
xchg
sbb
jbe
or
mov
jno
int3
push
pusha
add
aam
in
pop
lahf
ret
stc
pop
pop
sub
sbb
cmc
test
js
out
xchg
inc
xor
xor
mov
sahf
push
mov
cld
mov
lahf
cmp
sbb
pop
jecxz
cmpsl
into
and
jge
push
stos
sbb
sub
mov
mov
ret
xchg
les
fadds
imul
cmp
pop
repz
icebp
rorl
test
add
mov
psubd
movsl
ret
addr16
jnp
dec
push
pop
jne
inc
cmp
mov
sbb
or
lods
add
cmpsl
mov
dec
sbb
jge
xchg
adc
jnp
sahf
jnp
mov
mov
xor
cmp
or
sbb
shld
adc
mov
iret
inc
xor
push
lods
das
iret
jecxz
test
mov
lock
push
pop
dec
rcl
test
inc
fnstcw
loopne
sarb
pop
ss
mov
mov
xor
jbe
jg
stos
add
test
sbb
mov
pushf
jo
cmp
mov
jmp
mov
mov
out
jae
shrl
pushf
out
or
xchg
push
sbb
xor
and
mov
ljmp
scas
push
inc
fwait
mov
bound
pop
jbe
cwtl
dec
cmp
or
inc
aas
fcoml
out
aad
jo
test
pop
js
and
das
dec
mov
and
pop
mov
cmpsb
repnz
mov
mov
icebp
inc
test
mov
bswap
add
xor
inc
mov
add
rcrb
outsl
sbb
add
dec
lahf
aad
sub
sub
fstl
inc
mov
loop
cmp
push
enter
loop
jnp
enter
imul
ss
sub
in
jge
fs
xchg
pushf
dec
pop
and
cli
mov
daa
adc
jl
data16
test
mov
cltd
lock
shlb
pop
sbb
pop
in
push
push
xchg
out
js
xor
mov
aad
mov
loope
testb
pop
jb
push
mov
in
ret
adc
inc
jge
repnz
fistps
jp
inc
dec
shll
out
mov
dec
jge
rcl
lret
xchg
dec
or
stc
ljmp
or
jmp
leave
dec
outsl
fistpll
ret
clc
and
mov
std
cmp
adc
icebp
push
ja
ss
scas
fucomi
cmp
mov
and
cli
pop
inc
push
jne
popf
xor
dec
mov
rolb
jecxz
shlb
add
jae
lcall
jne
sahf
test
pop
je
sbb
sub
inc
jno
cmp
scas
ret
das
dec
sbb
jecxz
bound
popf
into
les
push
leave
xorb
test
fisubrl
arpl
iret
gs
sbb
mov
iret
xchg
jns
jg,pn
mov
mov
adc
mov
into
std
imul
lcall
dec
mov
mov
mov
fs
and
pop
cld
jg
push
push
adc
mov
mov
mov
test
in
pop
mov
outsl
xchg
xor
in
jg
sbb
push
cli
leave
xchg
ficoms
lds
sbb
jp
gs
mov
cli
movsb
aad
lcall
pop
int
or
xchg
dec
pushf
lcall
ss
sar
sbb
and
aam
mov
ds
shl
cmpl
cmpsb
fiadds
push
mov
sbb
or
jne
out
out
inc
inc
andl
jmp
xchg
dec
xchg
ds
mov
cli
inc
and
sbbb
sti
xor
and
ret
in
push
in
scas
nop
mov
mov
mov
xchg
sbb
push
rclb
inc
xor
cmp
push
sub
pop
in
adc
pop
mov
cmp
or
xchg
mov
aam
arpl
mov
xor
jae
xor
xchg
dec
imul
xchg
dec
or
pop
out
jmp
sbb
push
test
push
cmp
jle
xorb
sbb
outsb
popa
aaa
das
lds
mov
lret
stc
pop
push
pop
jmp
push
fdivrl
sbb
mov
rcrb
pop
mov
xor
push
cmpsl
mov
mov
add
int3
lea
insl
xchg
dec
stc
scas
add
mov
sub
cld
aad
inc
rcrb
stc
and
ljmp
roll
popa
jp
dec
add
les
inc
cmp
cmp
inc
mov
adc
adc
mov
cmp
cwtl
jl
fnsave
mov
xchg
mov
sub
mov
hlt
call
jne
cmpsl
repz
add
insb
cmp
push
mov
mov
xchg
and
cltd
movb
inc
xor
xor
sti
or
push
mov
sti
cmp
push
jl
sbb
push
mov
add
push
pop
lret
push
xchg
sub
adc
jno
xchg
outsl
pusha
sub
daa
icebp
adc
mov
adc
add
dec
cmp
aas
cmpsl
mov
fisttps
xor
flds
incl
adc
ja
mov
movsb
mov
lahf
and
cmp
mov
add
je
aad
aas
stos
jg
jp
sbb
or
mov
jecxz
jne
lock
push
mov
sbb
and
scas
gs
or
mov
adc
push
into
xor
loopne
add
sbb
mov
jp
into
cmpsb
inc
divb
cmc
inc
out
sti
push
xor
jge
add
dec
and
inc
push
sbbb
sub
pop
sub
dec
je
aad
mov
lret
sub
or
mov
xor
clc
and
push
cmp
out
fistpl
cmp
sbb
mov
sub
adc
loopne
lea
in
in
xor
xor
push
dec
and
xchg
and
mov
call
jno
dec
sbb
mov
rcrb
lds
pop
lret
sub
sub
rcrl
inc
cmp
repnz
add
xchg
fsubp
push
xchg
lods
popa
sbb
mov
cmp
and
sub
cmpl
out
and
clc
arpl
enter
hlt
and
fsub
cmp
adc
and
jl
cmp
cmp
mov
pop
test
dec
cld
loope
incb
push
mov
pushf
cwtl
repz
popa
mov
dec
cmp
fwait
call
inc
loop
mov
xor
fisttpll
sbb
mov
dec
sbb
xor
mov
sub
rorl
iret
dec
int3
fcom
xor
loopne
sbb
sub
adc
in
push
gs
push
dec
sub
sbb
mov
pop
test
test
cmp
cwtl
mov
scas
and
and
jne
mov
cmp
adc
or
adc
add
addl
insb
loop
fstps
sti
sti
push
clc
imul
movsb
aas
jmp
mov
aad
mov
push
nop
sbb
hlt
jmp
xor
jmp
inc
add
push
add
mov
inc
lods
and
adc
sahf
notl
addr16
movsl
jo
mov
insb
pushf
push
inc
stc
lahf
scas
sub
fwait
je
andb
leave
xchg
add
addr16
add
fdivs
dec
out
ss
cmpsb
mov
test
subb
lahf
fwait
or
sub
pop
and
insl
adc
fisttpl
or
rcrb
push
dec
mov
test
stc
add
mov
sbb
mov
jb
ds
xor
stc
cmp
cmc
xchg
push
or
stos
dec
scas
jne
adc
sbb
fisubl
mov
stos
adc
sub
push
test
bound
sub
mov
cmp
pop
xchg
and
mov
adc
sbb
aaa
push
mov
outsb
subb
pop
lea
mov
stos
rcr
unpcklps
movsb
xchg
cmp
sbb
mov
jp,pt
jge
lods
xor
scas
clc
or
iret
mull
inc
jmp
xor
mov
xchg
jno
or
fcompl
push
inc
cld
pop
pop
sbb
es
stos
call
dec
add
jecxz
pop
fdivrs
mov
aaa
rcrl
fldl2t
mov
sub
xchg
pop
call
jle
std
and
adc
mov
cmp
jo
lods
divb
push
pushf
xor
pop
jb
jg
cmc
out
pop
in
inc
fwait
push
cmpsb
and
adc
lahf
pop
pop
test
scas
popf
icebp
lcall
and
leave
mov
bound
call
pushf
pop
mov
js
mov
sbb
mov
mov
mov
inc
popf
push
fbstp
mov
popw
and
adcl
and
push
lahf
cmp
nop
xchg
mov
jg,pt
in
xchg
loope
jge
addr16
inc
pop
repz
mov
movsb
xchg
addr16
fs
pop
mov
xchg
ljmp
clc
dec
cmp
fwait
xchg
and
push
ljmp
imul
jo
into
mov
mov
mov
out
shll
mov
push
inc
out
sbb
or
popa
add
popf
insb
sbb
or
or
loopne
inc
lds
ret
shrl
shll
sub
cmp
push
sbb
das
push
pop
clc
icebp
cli
cmpsb
test
iret
lods
out
sahf
sub
push
clc
mov
icebp
cwtl
lods
out
pop
and
xchg
xchg
int3
mov
je
pop
mov
push
mov
mov
outsl
xchg
fnsave
repnz
sbb
lcall
aas
inc
dec
push
sub
idivl
push
movsb
scas
jl
in
jp
ds
mov
pop
insb
push
and
mov
mov
mov
fdivrl
pusha
fisttpl
rclb
cld
xor
add
fcmovne
jmp
and
sbb
mov
and
data16
adc
aas
sub
insl
nop
mov
enter
inc
fcoms
add
addl
js
or
icebp
sub
xor
mov
shll
imul
lods
jno
ljmp
pop
and
fwait
cmpsb
jl
imul
sahf
lea
imul
mov
xor
fs
adc
leave
jo
ret
dec
fldl
pop
sar
test
mov
push
pop
mov
fwait
stos
shll
pop
shll
xor
push
clc
mov
sbb
loope
mov
mov
outsb
inc
aas
push
lods
ljmp
fstpl
push
or
mov
jecxz
jg
dec
call
mov
insb
push
push
push
pop
cmp
add
and
push
push
jb
xor
test
jge
sub
and
ljmp
pop
lcall
xor
js
bound
cld
sub
sub
pop
dec
fmuls
pop
movsb
dec
jp
sub
jne
cmp
rolb
popf
cmc
jmp
cld
dec
dec
iret
xchg
inc
fisttps
cmp
mov
jnp
jno
nop
es
xchg
sahf
inc
loopne
adc
lret
sarb
lret
loope
in
inc
adc
stos
pop
in
mov
push
push
je
shlb
ficomps
cmpsb
test
rolb
dec
mov
push
cmc
mov
add
stos
cld
sub
je
push
aaa
psubq
dec
push
mov
mov
enter
out
jb
inc
dec
push
stos
in
xchg
mov
push
leave
adc
push
sbb
sub
mov
aad
sub
ror
ret
popa
xor
subb
gs
imul
out
fidivs
test
jbe
hlt
cld
adc
test
mov
ljmp
cld
dec
push
cmp
and
fists
cmp
inc
idivb
xor
xchg
cmp
pusha
jae
movsl
out
lret
pop
fwait
sub
adc
xchg
pop
or
dec
xchg
jne
add
bnd
fwait
mov
cmc
adc
mov
in
mov
xchg
outsb
mov
push
ss
fidivs
jecxz
dec
adcl
mov
jb
push
push
sarl
sti
cs
imul
cmp
mov
jmp
insl
sub
sarl
mov
push
mov
rorb
dec
xchg
jne
pcmpeqw
packuswb
xor
cmp
ljmp
push
cs
push
xor
rorl
fwait
imul
dec
mov
sub
fistpl
sti
mov
sbb
mov
ja
pop
and
pop
test
fsubl
out
cmp
out
pop
rcr
or
or
xchg
in
rcrl
aad
out
int3
adc
jae
jnp
xor
insb
adc
addr16
sbb
in
dec
test
add
add
fmull
mov
incb
push
sub
div
fidivrl
or
xor
sarb
cs
add
inc
fs
xor
ljmp
movsb
imul
outsl
vmovaps
icebp
cmp
inc
add
or
pop
fidivrs
rcrb
call
clc
test
or
push
das
mov
icebp
xchg
aas
pop
push
rolb
fcmove
out
cmpsb
sub
xlat
inc
test
jae
fwait
pop
std
add
dec
into
xchg
and
insb
inc
push
xchg
rcll
xchg
out
mov
mov
add
lahf
jp
dec
xor
unpckhps
jb
das
fnstcw
jb
lods
pop
adc
cmpl
adc
test
and
or
iret
lret
sub
test
cld
out
leave
sbb
dec
fnstenv
shlb
cli
inc
ljmp
add
clc
mov
lds
pushf
lahf
push
jnp
adc
arpl
in
adc
scas
jne
cli
and
push
mov
pop
mov
pop
adc
clc
inc
je
pop
push
push
lahf
mov
inc
mov
sub
into
fidivrs
mov
divl
pop
adc
sub
lock
in
cwtl
repz
xchg
mov
stos
or
pop
jnp
mov
add
nop
mov
repz
sahf
add
jge
fs
jmp
pop
xor
out
fsubs
clc
and
fs
popa
adc
adc
jecxz
in
lea
adc
call
mov
mov
scas
inc
xor
frstor
fcmove
and
push
cmp
in
mov
xlat
sbb
lret
mov
cmp
cmc
arpl
jg
add
mov
sbb
mov
mov
sbb
pop
popf
mov
mov
in
or
das
pop
xchg
data16
adc
lcall
ja
cwtl
out
lret
fisttps
aad
sbbl
sbb
icebp
ljmp
inc
sbb
lret
dec
push
fwait
divl
leave
mov
ds
sub
push
divl
stos
aam
jo
das
xor
cmp
mov
add
test
test
add
push
mov
cltd
dec
mov
and
repnz
pop
stos
jle
xchg
mov
push
data16
push
mov
sbb
repnz
pop
fwait
pop
cmc
cmpsl
jl
in
jae
fcmovnu
inc
dec
mov
ljmp
or
orb
xor
or
ret
and
adc
push
stc
or
dec
mov
lea
jle
adc
js
lret
outsl
cmpl
data16
xchg
repnz
ds
lock
adc
lahf
shll
fisttpll
std
sub
int3
mov
xchg
hlt
out
jnp
fadd
sar
cmp
sub
pop
sbb
push
ror
and
test
fiaddl
xchg
mov
push
stos
adc
test
notb
jmp
faddl
insl
jg
sbb
jne
rolb
adc
xchg
pop
lea
clc
mov
mov
clc
jb
xchg
pop
pushf
mov
imul
into
cmpb
icebp
mov
push
or
shll
xchg
inc
and
mov
filds
ds
jbe
dec
je
imul
out
aas
test
popf
daa
test
mov
add
in
mov
jge
loope
dec
mov
addr16
jae
xchg
xchg
sti
jnp
divb
clc
or
xchg
clc
xchg
in
hlt
fcomps
sub
push
and
scas
cmp
daa
xchg
push
cmpl
add
inc
shl
mov
mov
addr16
and
add
insl
and
push
lea
dec
adc
movsb
loopne
fisttpll
fld
sahf
es
xchg
sar
adc
ret
cmpsb
mov
sub
jge
out
stos
xchg
out
loop
sti
imul
jl
je
movsl
add
rcr
inc
aad
loop
aaa
jmp
pop
fadd
repz
push
jne
push
and
out
xor
lahf
xor
insb
movsl
pop
adc
pop
and
xor
dec
cwtl
mov
or
out
dec
or
mov
jmp
sbb
add
sbb
cs
mov
movsb
popf
inc
jae
jge
pop
test
je
cli
mov
popa
push
dec
jecxz
mov
xchg
xorl
sub
mov
cmpsl
mov
add
call
hlt
addl
stos
aaa
pusha
xchg
cmc
sahf
and
in
sbb
pop
in
loopne
leave
pop
pop
inc
cli
xor
dec
or
xchg
fld
fsts
mov
out
ds
cli
jmp
xlat
adc
inc
and
das
out
pop
jle
hlt
sub
scas
mov
inc
hlt
dec
add
lcall
lret
lret
sub
adc
in
repz
icebp
inc
loop
lods
fs
pop
push
cmp
or
test
imul
mov
lret
es
bound
dec
inc
into
cmpsb
movsb
lcall
push
rcrb
and
dec
loopne
add
jae
lods
sub
push
leave
fbld
xchg
lea
adc
imul
or
pop
push
add
in
pushf
ljmp
pop
inc
xchg
cmp
lods
loope
loop
mov
fisubs
add
sti
pop
icebp
lcall
mov
aad
pop
iret
sub
push
push
je
inc
sub
rcrb
dec
stc
cwtl
in
inc
or
cld
sbb
sub
or
xor
popf
pop
int
lock
inc
lcall
cld
jbe
sub
popa
dec
dec
loopne
fwait
xor
out
popf
cmpsl
test
call
push
call
add
mov
add
add
pop
lock
out
repnz
cmp
push
cmp
imul
cmp
pop
xor
or
or
mov
rcrl
daa
cmpsb
mov
notb
sub
xchg
jns
btc
sbb
cmpb
push
int
loope
ret
aam
or
adc
outsb
aam
out
fbld
jns
mov
fcmovnu
push
xor
pop
push
dec
leave
mov
gs
clc
jmp
mov
iret
popf
push
mov
dec
shlb
jae
push
je
sub
jnp
mov
push
pusha
ja
imul
movsl
enter
xchg
or
inc
jecxz
xor
cmp
jbe
xorl
mov
test
sar
outsl
inc
jmp
aad
xor
or
fdivs
mov
jae
ret
inc
jno
mov
push
add
xchg
xlat
pop
les
ret
sub
lret
cmpsl
jge
xor
xchg
adc
adc
adcb
icebp
insl
scas
inc
in
mov
mov
mov
idivb
cld
out
dec
shrl
sub
push
sbb
into
aaa
sbb
call
xor
mov
bound
add
lds
int
inc
sahf
shrb
sbb
xchg
ja
pop
mov
test
cli
fwait
dec
ss
push
sub
popf
mov
xchg
loope
cmpsb
cmp
leave
jecxz
stc
add
mov
shll
cs
out
sbb
xor
push
lret
loopne
popf
mov
addl
jl
ljmp
addr16
ret
xor
mov
xlat
and
adcb
inc
lcall
xor
xor
jle
cwtl
pop
pop
mov
outsl
push
mov
lret
sub
ljmp
cltd
aad
jp
mov
icebp
dec
leave
dec
mov
in
imul
push
cld
popa
or
fdivrp
pop
test
pop
pushf
decl
or
std
fsubp
inc
mov
addr16
xchg
dec
sbb
ja
xlat
test
std
lahf
jnp
jmp
dec
out
popa
into
sbb
mov
insl
adc
and
mov
shl
adc
shlb
sub
or
pop
pop
sub
and
push
mov
shlb
push
cmp
mov
aad
or
fwait
aam
pop
pop
rorb
aas
les
out
loop
xlat
sub
mov
dec
xchg
leave
mov
mov
sbb
loope
mov
test
dec
mov
xchg
call
lret
sub
xchg
mov
icebp
xchg
enter
gs
jns
pop
sbb
cmp
mov
aad
mov
cmp
repz
push
pop
mov
xlat
jnp
jecxz
fdivrs
stos
and
mov
mov
jne
call
mov
fs
xchg
sbb
out
mov
cmp
mov
stc
mov
pop
xchg
imul
pusha
fmulp
sbb
sbb
fidivl
lea
xchg
aam
bound
jmp
insl
lods
mov
out
pop
xor
jmp
into
ss
cmp
sbb
into
mov
jl
cmpl
sahf
sysret
mov
pop
test
gs
mov
and
sbb
cwtl
jmp
mov
fistl
lcall
pop
in
or
sbb
mov
int3
les
lahf
push
jno
aas
inc
mov
adc
pop
ss
inc
xor
imul
in
dec
lds
mov
lret
sub
adc
loope
mov
fdivr
mov
movsb
pop
movsb
adc
push
jbe
and
pop
xor
dec
inc
lret
aas
add
sub
sub
jl
mov
adc
ja
xlat
addr16
in
xchg
sub
js
imul
mov
int
mov
mov
lret
jecxz
sub
je
push
ret
dec
inc
ret
mov
push
jg
fcomip
les
shrb
xor
xchg
lea
sub
add
push
ficomps
int3
pop
rcr
pop
sarl
or
cmp
xchg
mov
jmp
cs
sub
shlb
orb
loopne
pusha
jns
daa
push
push
push
push
cs
sbb
fidivs
rorb
leave
xchg
mov
dec
inc
int3
icebp
test
push
rcr
dec
fistl
fcomip
aam
cmpl
ja
dec
sub
in
push
jno
loope
popf
enter
aad
dec
dec
xor
outsl
les
dec
fs
xchg
data16
addr16
adc
pop
int
mov
mov
mov
sub
xchg
ret
sub
mov
mov
push
cmc
pop
cmpb
in
xor
mov
out
insl
adc
orl
add
ret
iret
xor
orl
add
ja
rolb
fimull
mov
push
jl
lods
xchg
daa
fnsave
dec
or
or
push
imul
or
paddsw
mov
mov
in
loope
icebp
or
mov
lret
ljmp
pop
iret
pop
inc
stos
jno
jns
push
movsl
mulb
jb
mov
filds
in
mov
xchg
mov
roll
mov
mov
and
push
das
imul
js
test
sub
or
dec
test
jb
mov
mov
pop
es
sbb
fcmovnu
cmp
cld
mov
jp
mov
push
xor
jae
loop
scas
imul
js
rcl
push
aas
adc
int3
aaa
sub
inc
ja
xchg
sub
jge
leave
fmuls
cli
iret
pop
or
into
xchg
js
stos
mov
jno
lods
xchg
and
clc
xchg
push
inc
push
mov
testb
or
xor
jmp
loop
stos
aaa
push
iret
and
cli
sub
push
pop
fsubr
mov
dec
and
rcl
movsl
or
push
test
sbb
dec
loope
test
sub
and
mov
enter
testl
push
inc
movsl
std
fxch
xchg
aam
pushf
push
inc
lock
fisttpll
xor
mov
lcall
xchg
mov
aaa
cmpsl
call
jp
lods
mov
cld
push
popa
inc
lock
mov
push
xor
adc
sub
leave
mov
jmp
cmp
in
mov
fs
jae
mov
dec
xor
negb
adc
sbb
mov
mov
pop
xchg
mov
ffree
jo
pop
mov
hlt
cli
aad
out
jnp
mov
in
xrelease
inc
sub
mov
cmpsl
cmp
imul
pop
mov
jnp
fdivrl
popf
lock
pop
or
cli
push
push
ds
shll
stos
cli
mov
xor
xchg
int3
out
in
int3
pop
lods
aaa
cmp
je
scas
loop
fbld
es
fmull
mov
mov
ret
jp
cmp
pop
inc
jnp
or
daa
out
pop
mov
pop
pop
fbstp
out
ret
cs
xlat
push
loope
lods
jmp
sarl
lahf
lds
sub
popf
mov
xor
pop
inc
loop
ret
rcrb
sub
inc
mov
popf
mov
mov
rorl
pop
push
or
push
dec
fdivs
push
add
not
lods
xchg
loop
dec
jmp
mov
pushf
mov
mov
pop
dec
or
cwtl
hlt
inc
pop
or
icebp
popf
pop
adc
inc
dec
jl
xchg
push
test
and
inc
shl
movsb
add
adc
dec
clc
out
arpl
mov
push
or
out
xchg
add
aas
add
mov
xchg
mov
cwtl
inc
push
fwait
push
jmp
enter
mov
add
scas
xor
in
add
inc
out
scas
cmp
fiaddl
cmp
jns
push
loope
mov
lods
int3
pop
int3
pusha
scas
decl
int
ljmp
inc
popa
sets
jecxz
mov
push
xchg
pop
dec
je
xor
mov
cli
xchg
insl
ss
movsb
lock
mov
sub
es
mov
mov
jae
pandn
ss
dec
adcb
mov
mov
ret
cld
or
jl
shll
mov
cmp
pop
ds
cltd
add
daa
movsl
and
jg
xchg
dec
sub
movsl
jnp
jecxz
imulb
repnz
cmp
shl
addr16
in
and
push
sbb
cld
mov
sbb
dec
cmp
sub
lods
jmp
sbb
xor
sbb
dec
mov
bound
jnp
sbb
enter
xchg
subl
aad
inc
es
arpl
inc
int3
inc
stos
and
fidivrl
nop
push
movsl
cmp
movsb
iret
gs
data16
add
in
lahf
loop
inc
sub
mov
lret
mov
call
insl
fidivrs
outsl
mov
jnp
pop
dec
xchg
push
divb
arpl
cmp
xor
mov
rorl
adc
ret
in
cmp
out
ja
scas
pop
ds
or
insb
mov
stos
adc
add
cwtl
pop
push
mov
cmp
xchg
stos
xor
in
adc
mov
cmc
in
and
cmp
out
mov
or
imul
ss
or
shr
loopne
jb
shl
mov
mov
adc
movsb
xchg
pop
stos
mull
test
xor
lret
idivb
cmp
stc
xor
mov
popf
jp
mov
pop
enter
je
andb
jb
ja
shrl
mov
mov
sahf
scas
xchg
sub
mov
loop
enterw
jne
sub
push
or
sbb
cmp
xor
das
jnp
xchg
scas
nop
jl
pop
movsl
and
repnz
jl
in
or
adc
add
jae
adc
js
imul
fwait
jg
fstpl
xchg
pop
popf
xchg
mov
xor
jns
loop
cmp
rcll
jne
mov
js
push
lock
vunpcklps
fsubrl
pop
mov
push
inc
jmp
aaa
push
push
mov
iret
push
fwait
mov
pop
into
sub
push
scas
popf
jo
gs
arpl
rclb
std
inc
loop,pn
into
and
enter
mov
out
dec
push
xchg
or
cmp
fildll
adc
jl
mov
xchg
mov
mov
jns
adc
es
push
js
sbb
xchg
push
movsb
into
cs
aaa
or
xor
test
int3
sub
push
rclb
inc
bound
dec
xor
add
jp
stos
sub
pop
xchg
shl
jle
daa
loopne
stos
jg
add
stc
jo
xchg
loopne,pn
mov
xchg
cmp
add
lds
lret
test
push
cwtl
xlat
aaa
hlt
dec
mov
xchg
xor
add
add
aad
es
or
adc
sbb
pop
aam
push
sbb
flds
fadds
in
sub
mov
and
jl
movsb
insl
dec
jmp
jno
add
bound
adc
xchg
ss
jmp
out
push
sub
push
ds
cmp
mov
hlt
test
lock
inc
push
insl
cmp
push
in
lock
dec
ret
mov
push
jmp
ss
inc
dec
mov
xor
addr16
xor
jb
das
dec
and
int
scas
aaa
inc
mov
fistpll
das
add
cmpb
sub
jp
daa
popa
pop
mov
and
js
jmp
scas
sbb
das
repnz
insb
test
stos
cmpsb
mov
add
xchg
xchg
mov
icebp
sub
sti
jp
dec
and
mov
adc
xchg
inc
mov
adc
adc
mov
addr16
cld
rol
scas
xchg
lods
push
sbb
xor
fsubr
fidivrl
inc
je
xor
rorl
xchg
cwtl
jno
sub
out
into
aaa
dec
cmp
movsb
mov
pop
push
mov
lcall
sub
gs
orl
out
mov
jb
pop
cmp
insb
xchg
push
fdivrs
je
lret
rcrl
xchg
ss
test
test
jae
popf
imul
sub
out
rcll
jle
lret
into
pushf
push
push
repnz
pusha
adc
mov
cmp
and
imul
je
ja
sbb
data16
test
add
push
fdivr
mov
mov
add
hlt
sub
mov
and
fidivs
sbb
dec
push
iret
or
out
in
inc
mov
mov
mov
push
jno
lahf
ljmp
std
mov
adc
cmpsb
jmp
jl
fdivrs
xchg
inc
pop
inc
stc
loop
lods
cmpsl
lcall
jns
pop
adc
call
sti
sub
sub
fdivrp
sub
and
and
cmc
jbe
pop
add
lcall
cmpsb
add
fwait
stc
fdivrp
movsb
mov
xchg
or
or
push
xor
cmp
fcompl
loope
fisubrl
mov
pop
shrb
jl,pn
inc
rcrb
add
repz
cmp
jg
mov
aam
sbb
jle
ja
movsl
mov
call
in
lds
xchg
bound
mov
push
in
jne
into
push
andl
rolb
into
dec
and
pop
fprem1
dec
shrb
enter
mov
lock
repnz
sub
shlb
lcall
sbb
sub
pop
xor
test
popf
add
adc
ds
xor
roll
gs
out
jnp
mov
mov
dec
or
loopne
jnp
cmp
into
rorl
jne
imul
fdivs
jl
fbld
dec
fsubrs
or
cmp
fidivs
cmpsl
cmp
aaa
fnstcw
sbb
cmpsl
int
in
insl
add
mov
cmpsl
add
out
xchg
sub
faddp
popa
loopne
fiadds
imul
aas
es
jbe
int3
mov
andb
adc
xor
shrl
mov
add
push
negb
xchg
les
or
adc
inc
jp
stos
xchg
movsl
xchg
cmpsb
gs
push
loope
aam
sub
inc
jl
roll
or
or
hlt
sti
jg
imul
cld
jmp
adc
xchg
aam
cwtl
sub
add
ss
in
jns
push
popa
nop
cltd
add
ljmp
popf
out
loop
jmp
ds
imul
xchg
ljmp
lds
mov
les
outsb
rcl
jecxz
aad
jbe
add
inc
cli
jae
xor
adc
iret
xor
inc
scas
pop
pop
rcr
push
mov
stos
fmull
sbbb
add
pop
cltd
aam
dec
dec
ret
adc
mov
and
jb
or
stos
filds
inc
add
loop
sti
push
fs
xchg
scas
adc
dec
lock
add
mov
sub
fistps
xor
fucomip
ret
mov
push
cmp
sgdtl
addl
mov
and
stos
pushl
jmp
pop
lcall
push
dec
call
ja
repz
pusha
sti
in
loop
outsl
mov
js
sahf
adc
add
lret
lret
int3
scas
xchg
xor
mov
repz
test
imul
push
imul
and
xchg
pop
jno
shll
arpl
bound
ja
orb
push
push
xchg
lret
mov
jo
lahf
fistl
fdiv
or
pop
push
jne
clc
insb
inc
stc
xchg
test
xor
pushf
shl
add
add
shrl
add
push
cld
mov
sti
dec
clc
mov
dec
sub
bound
arpl
hlt
movsb
outsb
out
mov
loop
mov
jb
aad
mov
adc
test
sub
pop
xor
enter
cmpsl
cwtl
into
ss
clc
mov
lds
aad
xchg
jle
jecxz
aad
jnp
mov
bound
jno
push
and
nop
outsb
inc
and
push
mov
adc
fwait
or
pop
je
pop
jle
lcall
xorl
bound
aam
push
or
inc
add
mov
rolb
adc
inc
test
cmc
in
cmp
out
hlt
cmp
call
repz
jle
dec
call
cmp
cwtl
xor
fldcw
mov
mov
dec
add
jb
pop
cmpsb
jb
ds
cli
dec
call
scas
sub
lods
les
mov
xor
dec
xlat
sub
cmpsb
sbb
rcll
add
stc
xor
pusha
cmpsl
es
imul
xorl
xchg
mov
pop
aam
pop
sbb
push
and
cmp
add
hlt
adc
cmpb
imul
inc
pop
pop
mov
movsl
cmpsb
std
xchg
lea
out
jnp
mov
mov
mov
mov
test
popa
or
lds
push
movsl
int3
out
stos
sub
stos
push
push
aas
scas
stos
push
dec
xchg
mov
cld
daa
andb
jb
addl
xchg
insl
sub
stos
aaa
jge
mov
or
dec
xchg
or
lods
jae
pushf
and
outsl
cmp
dec
jo
dec
test
pop
sbb
mov
mov
add
popf
sbb
insl
ret
pcmpgtb
add
jmp
fisttps
push
jb
stos
push
mov
xor
adcl
xor
xchg
jae
shll
push
shl
std
mov
sub
pop
push
pop
push
ret
gs
and
je
ja
sbb
lods
mov
leave
push
push
ds
xchg
loop
inc
aaa
xor
aad
inc
stos
fadds
imull
mov
stos
adc
dec
fistl
fsubrs
loopne
add
bound
jns
mov
daa
push
jno
xchg
pop
or
repnz
xchg
jns
push
or
loop
es
ss
xchg
les
into
pop
mov
jg
and
mov
bound
adc
fadd
arpl
pop
in
mov
mov
imul
fidivrs
cmp
test
lret
mov
js
orl
fbstp
int3
sub
adc
cmpsl
das
jno
sar
divb
mov
mov
mov
sbb
push
mov
xor
mov
xlat
add
pop
dec
mov
bound
popf
std
scas
cmpsl
pop
jns
call
push
dec
imul
xor
sbb
cmp
ja
jl
push
jns
jne
and
loope
subl
add
or
mov
lret
mov
mov
mov
pop
mov
pop
pop
mov
push
jne
aaa
adc
push
stos
jecxz
push
dec
jp
sti
xchg
je
aas
sbb
cmp
xor
fadd
hlt
mov
or
sbb
inc
pop
ja
jle
add
add
add
out
dec
or
pop
nop
leave
pop
push
hlt
mov
loopne
outsb
ljmp
or
xchg
xchg
rcll
adc
mov
out
test
fcomp
mov
xor
push
sub
jnp
lret
cmp
inc
iret
jns
jmp
out
int
pop
push
in
xchg
mov
loopne
clc
fidivl
js
repz
sbbl
jmp
loop
adc
lock
popa
xor
adc
cwtl
sbb
cmpsl
repnz
mov
shlb
addl
and
cmp
fs
sub
imul
stos
adc
repz
jae
and
stc
pop
test
out
ret
xor
push
ja
movsl
lcall
mov
out
stc
adc
mov
mov
jp
sbb
sub
fstps
pop
or
push
fistpll
loopne
adc
aad
inc
push
xchg
in
outsb
fs
fmuls
inc
or
imul
or
lcall
imul
in
int3
movsb
loopne
rorl
mov
es
and
jmp
ljmp
lods
xchg
out
dec
and
out
sahf
std
hlt
jns
inc
mov
or
mov
loopne
lret
cli
fsubrs
lret
adc
mov
pop
subl
jg
add
inc
test
push
add
in
mov
imul
in
ret
out
addr16
dec
stos
mov
fwait
in
pop
je
outsb
and
lcall
mov
lret
xchg
adc
pop
xlat
rorb
icebp
push
and
fs
dec
mov
xchg
daa
dec
xlat
clc
outsl
mov
pop
mov
gs
cwtl
test
int3
ffree
shll
and
sub
sbb
jecxz
aam
pop
or
sub
adc
cmpsb
jne
inc
dec
lods
cmc
imul
jbe
jecxz
fiaddl
jl
xor
cmpsb
or
jb
pusha
aaa
int3
enter
data16
jo
mov
outsl
and
fwait
mov
into
adc
push
rolb
mov
pop
sbb
inc
mov
jno
ja
sub
and
jno
sub
mov
inc
dec
ret
cmp
imul
inc
inc
fistpll
fsubl
jnp
popf
orl
inc
cmp
sub
and
or
and
loop
mov
push
add
jle
out
push
outsl
inc
adc
add
mov
sub
or
test
add
dec
xchg
push
sub
lcall
sub
add
std
pop
dec
adc
aam
push
addr16
out
jne
sub
into
lea
xchg
and
or
mov
jb
out
inc
arpl
jmp
or
sub
je
fadds
jle
mov
loop
lea
xchg
dec
data16
sub
cli
mov
les
sub
test
inc
push
sub
rolb
jge
jge
inc
cli
and
or
xor
dec
push
test
push
repnz
lds
aad
mov
push
adc
mov
fsubs
mov
jmp
cmc
cmp
imul
movl
int
mov
sub
outsb
dec
or
rcrb
mov
jo
push
popf
mov
mov
sbb
stc
jmp
push
dec
or
push
jp
js
mov
xchg
xor
xchg
imul
movsb
call
xchg
inc
leave
pop
inc
jge
int
iret
lcall
pop
js
mov
dec
sbb
nop
repz
adc
jo
clc
sbb
rcrb
add
ja
sbb
inc
sbb
out
roll
push
and
sti
ds
push
je
inc
mov
test
cmpsb
mov
mov
mov
orb
xchg
push
cmp
adcl
stos
dec
pop
sahf
push
add
and
ret
popf
push
mov
pop
sub
push
xchg
push
loopne
push
sub
add
fildll
stos
sbb
test
pop
push
inc
xchg
adc
repnz
mov
scas
test
xchg
inc
cmp
lock
cmp
loopne
scas
add
dec
rcll
into
addl
daa
stc
jecxz
push
movsb
adc
push
pusha
stos
cmp
data16
xchg
jle
in
dec
mov
fxch
add
cmp
test
push
sbb
sbb
xor
inc
jo
lret
mov
mov
and
dec
nop
call
stos
lret
dec
adc
push
xchg
arpl
mov
push
test
sahf
mov
push
or
mov
cmc
mov
sub
repnz
movsl
aas
in
xor
lock
pusha
dec
adc
jge
sub
mov
mov
dec
adc
push
rorb
mov
xorl
xchg
push
xchg
out
gs
sbbl
dec
aad
mov
push
out
pop
mov
sbb
mov
loop
mov
gs
nop
mov
pop
scas
adc
outsb
mov
and
push
jle
lcall
jns
fisubs
cld
sub
inc
loop
loope
jne
stos
and
ret
scas
lret
aam
push
push
add
lods
sbbb
sahf
negl
int
pop
sub
clc
and
aas
add
cmp
jl
xchg
mov
jno
sbb
arpl
and
imul
pushf
cmp
mov
inc
inc
scas
das
push
pop
addr16
mov
in
jnp
xor
sahf
pop
and
ss
stos
into
ss
cmpsl
dec
or
jbe
jg
mov
divl
xor
sbb
sub
aaa
jmp
leave
adc
lds
inc
sub
xchg
test
loope
push
lcall
sbb
test
jmp
jmp
into
push
and
mov
out
fsts
orb
js
cmp
lods
jp
lea
lret
outsl
sub
addr16
dec
jae
mov
sbb
xchg
pop
push
clc
and
mov
into
xchg
xchg
aaa
mov
xchg
lock
test
and
into
mov
sub
xchg
rol
xchg
pop
cld
mov
inc
jnp
sub
enter
in
dec
dec
pop
mov
xchg
sub
cmp
or
jo
dec
and
dec
dec
dec
jecxz
andb
addl
fistpl
and
js
dec
dec
push
lahf
mov
shrb
sar
xchg
sti
xor
pop
jne
scas
in
jo
mov
imul
dec
fldl
mov
fists
das
std
dec
inc
out
adc
test
xchg
push
xchg
add
or
or
ficoml
loope
test
fisubrs
dec
dec
xchg
xchg
pop
sbb
sub
sbb
outsl
jns
push
sub
jecxz
mov
and
loop
test
cmp
dec
cwtl
jmp
roll
adc
jnp
mov
aad
mov
stc
outsl
push
push
xor
shl
test
out
mov
adc
out
test
loop
aaa
push
arpl
mov
shll
pop
pop
sahf
aad
sbb
xor
xchg
js
test
ret
inc
mov
imul
mov
mov
xchg
mov
int
jg
imul
mov
in
add
xchg
pop
icebp
and
sbb
outsb
add
mov
push
pop
lcall
mov
mov
dec
pusha
dec
out
adcl
mov
test
dec
lret
in
xchg
mov
jg
mov
loop
mov
insl
jno
push
mov
push
push
ja
add
je
xlat
mov
push
dec
and
repz
sti
push
ljmp
pop
mov
add
pop
sub
in
das
adc
sbb
ja
adc
mov
xchg
aad
add
jecxz
cmp
and
push
fcmovnu
cmp
jae
lret
subl
xchg
int3
inc
imul
addr16
push
call
shr
jns
dec
jns
loop
xchg
cmp
ret
fwait
mov
faddl
fstpt
mov
push
jae
and
add
mov
push
or
sbb
movsb
cmp
repnz
mov
mov
cmc
mov
add
mov
das
add
in
es
or
scas
xchg
jb
mov
mov
mov
sub
sbb
loopne
mov
adc
mov
xchg
repnz
xor
jo
bound
leave
scas
jg
mov
lahf
xlat
push
pop
cmp
jo
ficoml
js
lods
call
and
mov
jae
dec
or
dec
std
cltd
loopne
dec
jo
scas
add
fistpl
and
lock
mov
mov
addb
das
or
mov
lock
mov
cmp
sub
push
arpl
mov
imul
xor
fs
sub
inc
scas
sub
out
cltd
xor
push
popl
push
popa
push
lea
fstl
loop
or
rorl
mov
inc
dec
pop
mov
xchg
fwait
mov
pop
and
mov
fldt
ss
das
xchg
icebp
sbb
jno
xor
lods
mov
jge
nop
icebp
test
sti
push
pop
rcr
sub
and
push
or
ficomps
dec
testb
push
xor
mov
mov
cwtd
pop
divb
insl
mov
cmp
gs
mov
jge
fnstenv
arpl
into
cmp
add
repnz
mov
je
lahf
pop
xlat
fld1
dec
xlat
insb
inc
sti
push
sbb
mov
popa
mov
inc
push
negb
arpl
stc
dec
jmp
movb
js
hlt
lds
mov
loope
in
leave
pushf
xor
push
cmp
sub
fs
add
add
ret
scas
jbe
inc
cmc
stos
clc
mov
fldl
xchg
jmp
push
fisttps
inc
jae
sub
clc
sub
inc
std
loopne
xchg
xor
inc
xchg
push
push
outsl
outsl
mov
and
sub
out
and
subb
cwtl
test
mov
sub
aas
cli
or
dec
enter
cmpsl
and
test
aad
cli
fldenv
scas
out
push
jl
mov
lds
cs
or
ret
push
and
xchg
xchg
repnz
mov
cld
push
inc
or
enter
xchg
pushf
fiaddl
insl
addr16
cwtl
mov
paddq
jbe
cmp
ja
jg
push
popw
and
insb
push
sub
out
sub
imul
xchg
das
pop
jnp
lods
mov
movq
push
sub
sub
jo
xchg
and
cmp
mov
pop
sti
int
pop
mov
fstpl
enter
and
inc
lods
sub
and
jp
push
push
sbb
out
xchg
imul
pop
xchg
int
inc
test
and
xor
imul
mov
ja
push
pop
fs
pop
movsb
push
into
push
jns
push
push
xchg
movsl
repz
add
xchg
mov
int
mov
fimull
mov
xor
mov
dec
std
xchg
mov
orl
iret
pop
sub
pop
dec
cmp
pop
fists
cmp
roll
enter
andb
jle
mov
lods
xchg
cmp
mov
repz
cmp
push
mov
mov
jp
jmp
push
repz
test
dec
les
in
push
or
shlb
cmp
pop
xor
cmp
pop
aam
lret
ja
sbb
jne
pop
sub
sub
dec
push
mov
sub
pop
subl
xor
fcoms
data16
hlt
lea
imul
push
adc
add
add
add
shlb
fiaddl
mov
cmp
or
jne
fsubrl
cmp
fsub
fwait
xchg
push
cmpsl
popa
movsb
cmp
push
stc
lcall
mov
loop
cmp
mov
in
jno
mov
cltd
popa
or
sbb
dec
or
nop
mov
fld
and
mov
push
xchg
xchg
leave
mov
jle
in
jno
pop
push
scas
mov
sub
lock
cmp
in
adc
sub
and
jbe
sti
int3
test
push
push
faddp
adc
push
gs
aam
push
inc
cmpsl
lds
pop
jno
movsb
je
lcall
add
hlt
cmpsb
jle
xchg
test
mov
clc
mov
xlat
lcall
es
mov
inc
adc
dec
mov
sub
push
fcmovnu
test
inc
sub
lret
sub
sbb
inc
xchg
sahf
loop
test
and
imul
or
int3
loopne
insb
outsl
push
inc
shlb
xchg
lret
pop
push
fwait
aam
jg
push
xchg
mov
adc
dec
or
xchg
in
mov
dec
adc
pop
xchg
js
cltd
dec
scas
jo
into
xor
stc
xlat
mov
dec
les
sbb
adcb
fnstenv
xchg
dec
adc
push
das
in
and
inc
mov
pop
sbbl
jne
and
mov
out
enter
mov
xor
ja
or
dec
sbb
pop
dec
push
mov
xor
sti
fidivl
movsb
xlat
pop
sub
cmp
sub
jbe
lahf
jl
add
out
add
cmp
mov
inc
cmp
movsb
aaa
pop
rolb
push
and
push
xor
outsl
inc
jmp
call
adc
push
ja
sbb
pop
jbe
sub
sbb
jne
es
cmpsb
sbb
push
jne
cwtl
scas
out
ja
xor
or
jmp
stos
and
cmp
inc
icebp
push
adc
int
jbe
push
mov
jg
or
in
jge
dec
push
push
jg
xor
jno
fs
lds
add
cli
pop
mov
lcall
sub
dec
test
add
sub
sbb
jmp
or
movsl
push
fs
je
pop
addb
jns
frstor
xchg
sub
loop
fcmovnbe
push
insb
dec
enter
outsb
negb
dec
or
mov
lods
cmc
mov
aaa
mov
dec
push
dec
sbb
fbld
pop
stos
xchg
ret
cmp
pusha
test
fld
inc
xor
or
inc
ds
cld
inc
ds
bound
mov
ret
cmc
into
int
mov
int3
pop
push
inc
movsl
mov
cmc
add
fwait
out
fisubs
es
xchg
mov
and
mov
jg
int
inc
stos
hlt
ljmp
push
aaa
pop
add
js
nop
mov
mov
or
and
push
push
pop
dec
pop
outsb
adc
jecxz
rcll
outsb
sub
push
mov
push
rcrb
addr16
stos
bound
mov
mov
push
dec
cmp
jbe
push
adc
fildll
dec
cmp
pop
movaps
push
cmc
mov
imul
jnp
xchg
pop
bnd
push
stos
int
stos
inc
in
addr16
xchg
in
sub
or
je
sub
rorl
xchg
mov
pop
mov
das
add
hlt
mov
xchg
adc
test
dec
cli
xchg
xor
lea
mov
push
xchg
inc
out
mov
loope
jno
add
mov
or
iret
lock
mov
fucomp
fmuls
hlt
out
jl
dec
pop
dec
pop
mov
stc
pop
push
and
cli
push
cmc
jl
pushf
js
jp
lea
jp
js
inc
mov
cmp
aad
into
mov
mov
jecxz
sub
inc
xor
or
and
dec
cmp
fcom
sbb
xor
xor
lds
aam
push
sub
arpl
fs
or
popf
add
sbb
mov
add
pusha
addr16
adc
mov
out
call
ljmp
xchg
lret
mov
mov
scas
add
out
bound
cmc
jle
adc
insl
push
xchg
xchg
push
rorb
rcrl
sub
push
hlt
in
xchg
and
call
or
sbb
and
jmp
xor
jae
cmpsl
mov
dec
jmp
or
rorb
mov
mov
xchg
addb
ds
inc
shl
clc
xor
call
int
push
loop
mov
jb
mov
and
add
shl
ljmp
insb
fistpl
xchg
ss
daa
adc
movsb
insl
xchg
xor
mov
adc
mulb
adc
aaa
lcall
adc
or
jmp
add
jo
orl
adc
daa
ficompl
xor
xor
js
dec
cmp
aaa
icebp
les
leave
mov
jecxz
data16
movl
pop
jns
and
aas
inc
mov
xchg
lock
jp
add
dec
cmp
dec
cmp
sbb
outsl
int
fisttps
xor
rcll
test
jno
push
in
lock
rorb
aad
movsl
icebp
sarl
mov
test
adc
dec
add
inc
in
xlat
inc
and
es
cld
aaa
int3
stos
es
xor
xor
xchg
jmp
add
pop
xchg
movsl
loop
push
cmp
pop
pavgw
ds
jmp
adc
bswap
push
xchg
cli
shlb
jns
cld
xor
jg
sub
push
mov
push
pop
xchg
andl
imul
dec
jns
add
xor
pop
cmp
mov
push
scas
sbb
rcrb
loope
xchg
jecxz
jno
lods
das
ret
mov
inc
mov
mov
loop
movsb
cmpsb
xor
add
fisubrs
insb
or
mov
add
popf
icebp
mov
or
and
inc
dec
jae
xchg
mov
cmp
les
sbbl
cwtl
cmp
mov
mov
jne
sarb
vunpcklps
testl
repz
incl
jns
push
push
xchg
roll
mov
dec
sbb
mov
push
sbb
inc
loope
mov
mov
add
movsl
cmp
push
repz
adc
or
sub
sbb
sub
jge
sti
sub
stos
cmp
adcb
or
int
jno
fldl
adc
cmpl
outsl
sub
into
enter
jbe
xchg
out
cmp
lea
jo
cltd
out
test
sub
xlat
rol
sub
dec
inc
push
popa
test
pop
in
into
pop
leave
in
mov
jb
pop
mov
and
icebp
loope
adc
aaa
adc
add
jne
ja
je
push
outsl
jae
mov
xor
push
inc
adc
lea
loop
fdivl
mov
or
xchg
adc
or
pusha
iret
adc
or
pop
xchg
fildll
cwtl
pop
iret
pop
sahf
insl
std
outsb
movlhps
jle
repz
gs
xor
xor
pusha
pop
int3
pop
sbb
sbb
icebp
xchg
xchg
ja
jb
xorl
test
mov
mov
mov
repz
popf
insl
inc
push
mov
sbb
pop
dec
cmovb
imul
mov
adc
jl
ficoms
rolb
lods
sahf
dec
dec
sbb
dec
mov
xchg
movsb
outsb
int
or
jmp
mov
adc
inc
inc
fisttpll
scas
xlat
in
int
cmp
in
scas
mov
xchg
push
outsb
mov
sub
test
ds
cmp
cltd
and
jge
and
aad
jg
insl
addr16
popf
dec
xlat
movsl
rcll
in
mov
xchg
xchg
test
mov
loopne
loopne
add
mov
out
movsl
inc
pushf
mov
ja
popa
or
cmc
pop
enter
dec
and
das
notl
sub
sbb
ds
add
aas
out
push
in
mov
iret
fdivr
iret
or
pop
pop
mov
adc
repnz
dec
add
bound
nop
sbb
divb
lods
icebp
jo
pop
dec
xlat
sbb
mov
xchg
jge
xor
jg
push
leave
lahf
mov
sbb
adc
mov
dec
fst
pop
fwait
inc
push
test
sbb
arpl
mov
cmpsb
insb
adc
jns
cli
inc
test
lds
sub
cwtl
sbb
sub
jne
pop
sahf
sbb
into
xor
mov
mov
xor
mov
mov
mov
mov
scas
inc
daa
rcll
adc
imul
or
jnp
aad
inc
adc
popf
inc
cmpsl
mov
adc
push
fildll
pusha
movb
dec
imul
fdivrs
pushf
lds
lret
and
pop
mov
fbld
arpl
fbstp
push
pop
or
push
mov
inc
lahf
repnz
or
iret
mov
push
add
aam
pop
mov
inc
outsb
mov
mov
and
lea
into
inc
and
xor
xor
jo
cmc
out
dec
push
jmp
adc
repnz
test
mov
jp
jae
add
pop
or
insl
xlat
nop
adc
dec
xchg
push
pushf
je
jo
adc
in
sarb
jmp
ljmp
test
inc
stc
lcall
cmp
jge
aad
push
adc
jmp
pop
cmp
and
adc
push
pop
fisubrl
inc
or
sbbb
and
rol
je
bound
mov
push
xor
pop
stos
jge
jns
dec
daa
and
pushf
fisubs
cs
mov
out
fdivrl
stc
jbe
xchg
repz
test
pop
inc
pushf
jns
pop
push
and
cli
mov
bound
inc
sysexit
add
push
enter
in
cmpsl
mov
xchg
or
or
js
rorl
sub
aad
dec
mov
pop
xchg
sub
lcall
jae
addr16
pop
pop
les
repnz
add
shlb
xchg
and
or
push
and
xor
jns
lahf
jnp
dec
lds
sub
mov
jnp
and
fwait
add
outsb
lret
enter
mov
or
jg
fs
in
test
les
pop
pusha
fcomps
lret
je
into
divl
adc
sub
push
adc
cmp
movsb
mov
pop
psrlq
and
popf
mov
test
roll
mov
sbb
mov
adc
stos
jg
cmp
cli
dec
xchg
mov
xchg
mov
negb
dec
xor
adc
mov
mov
or
pop
xor
adc
out
test
lret
xchg
fadd
add
ret
cmp
outsb
mov
ds
movsl
cmp
mov
mov
inc
les
or
sahf
xor
data16
xchg
xor
adc
leave
mov
bound
hlt
jae
add
jb
mov
mov
lahf
shll
jnp
lock
ljmp
ss
sbb
and
insl
mov
push
lods
jl
add
gs
js
xchg
pop
fs
push
mov
movsb
bound
cmp
push
xchg
scas
push
lret
mov
pop
mov
iret
or
sbb
outsl
les
mov
jo
data16
loopne
xchg
call
push
jbe
dec
in
bound
mov
sub
pop
mov
mov
adc
add
out
mov
push
lea
mov
dec
mov
fwait
loopne
loop
pop
ret
popa
arpl
and
mov
adc
aaa
or
pushf
inc
shlb
push
xchg
jno
aad
in
dec
div
incl
icebp
outsl
mov
jl
gs
ljmp
ret
jle
pop
stos
pop
in
rclb
cmc
push
cld
sub
add
es
cmp
insb
cmp
adc
mov
aam
inc
popl
mov
cld
in
outsl
xchg
cmc
xchg
leave
out
add
dec
lds
jmp
dec
or
or
lds
mov
push
insl
addb
mov
pop
in
shr
cltd
inc
dec
std
xlat
leave
jbe
das
push
push
xchg
dec
insl
clc
out
dec
outsl
mov
or
pop
popa
xchg
cmp
jl
xor
into
mov
into
scas
repnz
xchg
pusha
cs
mov
and
sahf
sar
xchg
mov
aad
jns
addb
lret
xor
mov
mov
sub
sub
mov
sbb
testb
mov
movsl
sub
nop
cmp
stos
lods
jl
test
add
stos
call
jns
insb
push
adc
jb
dec
push
movl
sbb
pop
xchg
ret
dec
or
dec
and
mov
les
jns
sbb
aaa
fiadds
sbb
xor
mov
dec
and
xlat
cmp
ret
jns
xlat
fucomip
jne
inc
andb
andl
ljmp
jg
dec
sub
mov
lods
shr
cld
lret
jne
insl
in
ljmp
add
in
andb
cwtl
mov
cmp
cs
adc
popa
push
bound
jne
cwtl
cmc
imul
xlat
aad
mov
or
xor
xor
scas
bound
ja
dec
xor
stos
xor
inc
sti
sahf
xchg
dec
dec
hlt
inc
jae
cmp
clc
je
nop
or
sub
jne
lcall
aam
adc
add
fisttpl
pop
jno
sbb
icebp
iret
inc
or
addb
and
inc
mov
idivb
xchg
mov
sbb
stc
mov
and
cs
dec
jae
push
icebp
jae
rcll
outsb
add
divl
xchg
pop
inc
outsb
inc
mov
mov
stc
xor
mov
loopne
mov
xor
adcb
mov
shlb
pop
pusha
and
xor
cmp
add
dec
pop
push
not
mov
in
es
outsl
jl
inc
and
xchg
gs
loope
jne
adc
xchg
out
xor
in
shrl
cltd
mov
add
jle
jb
cmc
loope
sahf
add
xchg
or
fstps
ss
outsl
sbb
mov
add
cmpsl
inc
hlt
outsb
decl
push
cltd
daa
outsl
sub
jp
sbb
xor
icebp
jae
insl
in
push
out
cmp
mov
rorb
dec
xchg
cld
mov
div
or
js
xor
sub
rclb
addr16
add
add
ret
sti
push
inc
pop
adc
dec
dec
adc
push
clc
fnstenv
pop
inc
inc
inc
movlps
pop
xlat
imul
enter
sti
xor
or
pop
aad
out
xor
dec
mov
pushf
test
scas
and
js
outsb
inc
cmp
testb
pop
cmpsl
inc
cmp
xchg
mov
outsb
cmpsb
pop
out
mov
push
dec
fidivl
and
adc
pop
test
fsubrs
or
xor
test
gs
popa
test
int3
enter
sbb
adc
jne
mov
pusha
fs
mov
nop
add
mov
movsb
es
sub
stc
int
lods
addr16
rorl
repz
insb
mov
rolb
insb
daa
aas
ret
adc
mov
xor
adc
sbb
sub
ret
cmc
mov
out
adc
adc
fmuls
cmp
fwait
or
adc
mov
insb
jb
dec
xchg
or
filds
adc
and
push
xchg
xchg
lcall
lcall
jle
jecxz
addl
and
int
add
sub
aam
sub
into
sub
sbb
jp
xchg
jb
mov
jb
pop
push
scas
and
addb
xor
cwtl
pop
js
or
sahf
push
xchg
sbb
xchg
sti
vmovapd
je
pop
aad
xchg
pop
mov
mov
dec
push
xchg
stos
outsb
push
mov
sti
add
mulb
jo
divl
scas
push
push
mov
fs
into
shrb
dec
int
pusha
and
inc
adc
xlat
es
jno
mov
pop
pop
sarl
xor
mov
cwtl
out
jns
test
scas
addr16
insb
in
cmp
jns
fisubs
sub
aam
sub
stos
xor
cmp
outsb
pop
dec
std
enter
xor
pop
jns
lods
add
in
loope
sbb
popf
stc
popa
mov
fstpt
cs
pop
add
jbe
or
scas
mov
inc
je
and
fstps
jmp
rcrl
fiaddl
test
sahf
inc
and
in
dec
pop
loope
cmp
xchg
mov
mov
jbe
pop
sub
std
das
jmp
add
in
inc
sbb
sbb
sub
sti
sbb
or
js
hlt
cmp
and
leave
mov
fmull
fidivl
hlt
bound
outsb
jno
or
mov
aaa
xor
jecxz
or
sbb
pop
shrl
shlb
orb
sahf
sub
dec
call
aad
mov
std
scas
dec
cmp
and
sbb
rcll
sahf
arpl
xchg
inc
dec
pop
push
xor
sti
iret
aas
popf
or
cmc
jne
addr16
pop
movsb
xlat
movsl
cmp
lahf
mov
add
cmpsb
fnstcw
lods
leave
in
dec
pop
push
mov
bound
and
push
je
daa
jle
sub
jmp
imull
push
js
xchg
sbb
loopne
call
xor
jmp
sbb
inc
mov
sub
jp
push
fnstenv
sbb
stos
cmp
into
sub
xchg
xor
cltd
dec
fs
lods
shll
add
sbb
mov
addr16
cltd
cmp
std
push
mov
insl
ja
sbb
mov
mov
jg
push
sbb
movl
lods
mov
add
cmp
cld
jns
push
je
push
jns
inc
mov
sahf
movsb
sub
sbb
loop
gs
pushf
popf
fs
dec
mov
clc
popf
add
inc
jmp
cs
aas
inc
test
stos
stos
and
mov
jne
cli
mov
push
mov
ja
shl
push
ljmp
mov
cmp
das
icebp
in
push
mov
jbe
es
push
aad
jl
add
shll
js
push
pop
int
out
xlat
pop
cmpsl
xchg
movsl
dec
vpsubusw
mov
inc
aad
inc
sub
loop
stos
xlat
pop
in
pop
fdivrl
pop
test
pop
adc
dec
jmp
sbb
sbb
mov
mov
nop
scas
xorl
add
popf
and
lock
rcll
in
inc
aad
clc
pushf
jb
ss
jmp
inc
mov
hlt
shrb
js
dec
sub
push
lahf
insb
dec
mov
out
push
aaa
insb
pop
xor
pop
mov
bound
xorb
jl
jmp
ficomps
xor
fs
sbb
push
popa
int3
mov
nop
lahf
ja
data16
scas
ljmp
shrl
mov
cmp
mov
dec
jbe
clc
shlb
cmp
out
xchg
xchg
or
push
push
mov
push
movsb
cmpsb
loope
flds
jae
cmp
jno
push
add
cmpb
ljmp
ljmp
or
pop
jle
jle
xor
xor
test
iret
dec
dec
push
push
aad
out
jp
jmp
add
int3
xchg
or
xchg
out
cmp
in
dec
cltd
adc
jg
out
pop
sub
jl
inc
jmp
rclb
mov
std
pop
iret
pop
push
xchg
ret
lds
dec
jns
lcall
sub
sub
out
fldl
mov
cmp
mov
stos
stos
mov
repz
adc
rcr
jmp
adc
push
sbbl
and
in
dec
cmp
or
shlb
pop
jae
and
lock
xor
test
pop
jg
lea
and
aas
cltd
out
or
or
adc
imul
es
jae
lds
mov
jg
jmp
push
test
fsubl
aam
xlat
xchg
movsl
mov
fists
sbb
and
loop
mov
jmp
push
inc
pop
or
inc
mov
movsb
repz
dec
fwait
outsb
push
sub
insb
jge
jmp
cmp
lret
into
aas
mov
xor
sbb
movsl
and
adc
add
mov
popf
addr16
add
dec
imul
out
mov
test
mov
adc
pmulhuw
or
scas
mov
sub
dec
mov
cmp
xor
cmpsl
andl
nop
fisttpl
adc
and
mov
lds
pop
outsb
test
imul
std
les
sub
stos
frstor
adcl
push
es
mov
xor
lock
cld
pop
outsl
out
cwtl
loop
xchg
subb
mov
gs
sbb
sub
notl
sbb
sub
push
mov
inc
lahf
stos
into
pop
sub
in
mov
lock
mov
adc
push
mov
adc
mov
test
mov
add
cmp
mov
sbb
faddl
jecxz
mov
push
daa
xchg
movsb
xor
test
gs
ret
sbbl
popl
in
mov
mov
sbb
je
jmp
dec
insl
test
pop
push
movsb
push
push
out
and
mov
fcomi
adc
or
scas
inc
shll
push
pop
jnp
pop
lock
outsl
fnstsw
mov
xchg
push
jo
cmp
movsl
repz
mov
or
mov
xchg
pop
or
in
cmp
lds
and
dec
movsb
movsb
leave
call
xchg
xchg
mov
push
mov
cmp
push
fcomi
iret
hlt
popa
cmpsb
add
mov
jae
repz
inc
sbb
pop
sbb
cmp
mov
inc
int
adcl
jp
ret
lret
mov
cld
pop
outsl
lahf
test
fwait
xchg
test
adc
and
sub
mov
pop
out
push
fcomps
push
jmp
xor
cmpsl
int3
dec
mov
or
xchg
in
dec
sbb
sti
inc
clc
ljmp
or
cmp
pop
cmp
mov
adc
xor
scas
push
int
daa
mov
hlt
push
mov
fists
aaa
mov
dec
test
or
outsl
es
mov
fdivrl
aaa
in
nop
sahf
jns
and
jecxz
lret
push
movsl
gs
outsl
ljmp
dec
test
pop
in
ss
mov
jns
jmp
adc
jp
je
lret
mov
sbb
cli
push
xor
xchg
dec
shll
jo
stos
mov
xor
pop
mov
aam
xor
shll
inc
push
insb
cmc
hlt
dec
addr16
stos
or
iret
pop
xor
sub
add
lods
lcall
loopne
ja
mov
mov
xchg
pop
fmulp
movsb
lcall
cli
adc
mov
std
ret
inc
daa
mov
cmp
or
sbb
cmc
add
fcomps
sti
xchg
jno
xor
jno
pop
push
xor
test
aas
cmp
cmp
stos
and
cwtl
mov
jbe
push
inc
pop
cmp
out
sub
ret
mov
scas
sbb
mov
pop
inc
out
out
and
mov
add
mov
sbb
rorl
inc
mov
inc
and
insb
jecxz
stc
mov
shl
decl
adc
jae
movsl
dec
out
cmpsb
inc
in
cwtl
pop
aam
fs
xor
mulb
ret
out
lcall
push
imul
out
pusha
enter
xchg
mov
mov
sbb
jne
shl
cmp
push
push
sbb
jp
cmp
mov
mov
lock
xchg
pop
sub
stos
dec
nop
aad
hlt
inc
mov
cwtl
and
inc
inc
mov
gs
push
dec
leave
adc
adc
and
mov
mov
dec
arpl
and
xchg
into
jl
ror
dec
imul
add
sub
jo
mov
ljmp
test
lret
and
std
mov
aad
mov
adc
cmp
pop
add
and
lahf
sbb
mov
mov
movsl
mov
mov
mov
push
shll
push
movsb
push
jmp
inc
and
xor
in
jecxz
ficoms
movsl
std
es
lret
fadd
subl
xchg
pushf
xchg
mov
insb
ja
fbstp
loop
cs
les
push
fmull
jg
xchg
outsl
bound
popa
fisubrs
mulb
lock
popa
push
repz
rcr
int
sbb
dec
dec
rclb
mov
xchg
data16
mov
adc
jns
or
movsb
pop
pop
cmp
incl
imul
iret
int3
mov
cmp
loope
cmp
mov
jg
movsl
mov
addr16
out
ds
mov
cmp
gs
mov
sbb
push
push
lds
hlt
sti
or
aas
hlt
pop
test
jmp
addr16
sub
mov
pushf
fimuls
sub
cmc
lds
adc
sub
fprem
imul
mov
lret
sub
cmpsb
dec
push
addl
ficoml
popa
lahf
pop
cmp
cvtpi2ps
test
ficoms
shll
ja
iret
aaa
js
and
xchg
lcall
cmp
dec
inc
loope
imul
bound
arpl
mov
dec
lock
sub
jecxz
insl
mov
cs
stos
dec
xchg
adc
xchg
pop
adc
mov
loope
addb
rorl
xadd
ret
ljmp
pop
xor
dec
mov
dec
addr16
add
out
add
add
mov
in
fwait
outsb
adc
les
loopne
movsl
mov
fcmovnu
shl
les
dec
pop
mov
ret
and
cmpsb
mov
or
add
or
loope
not
imul
call
pop
mov
cli
cmp
scas
test
adc
cmp
xchg
push
test
into
insb
xor
pusha
inc
xchg
test
aad
push
and
add
repz
xchg
or
cmp
xor
in
mov
adc
repnz
pop
jbe
and
ds
sub
xchg
push
xor
jbe
push
in
jp
out
popa
jno
mov
sub
outsl
punpcklbw
or
push
mov
inc
push
fldl
fistl
test
dec
fs
jg
adc
cmpsl
and
shrb
mov
fisttpll
out
mov
insl
push
dec
adc
or
sbb
out
sbb
mov
lcall
loop
pop
xor
js
or
jmp
adc
xchg
mov
ret
outsl
push
cli
or
movb
mov
cmpsb
repz
pop
sbb
lret
jnp
add
loopne
xchg
sub
jp
pop
jl
dec
sub
mov
pop
adc
aam
xor
dec
adc
and
insl
cmp
lea
movsl
xlat
lods
xor
and
push
xor
xchg
inc
in
mov
xchg
mov
cmp
movsl
cld
in
enter
rolb
cmovp
ljmp
pop
ret
mov
lods
cs
je
mov
popa
rolb
inc
stc
adc
scas
inc
sti
push
mov
pop
ljmp
lahf
lahf
stos
es
das
lds
dec
xor
in
leave
popa
jge
jne
out
imul
in
xchg
and
test
stos
int
fsubs
ja
ret
jg
addr16
test
add
frstor
mov
sbb
mov
call
mov
xlat
mov
mov
xchg
dec
ljmp
cwtl
xor
and
imulb
or
popa
or
inc
or
lds
or
pop
cmpsl
int
and
rolb
jmp
mov
lds
andl
ret
std
cmp
push
xchg
fucom
xor
icebp
xlat
bound
insb
fisubrs
scas
add
push
test
repnz
fldl
xchg
cmp
fsts
add
adc
cld
add
fwait
in
jne
imul
sbb
pop
lods
jl
mov
jl
push
lods
pop
mov
inc
movzbl
pop
xor
sub
shrl
jmp
sub
outsl
fsubrl
out
or
aad
jecxz
jecxz
repnz
icebp
sahf
je
js
test
stos
fisttps
cli
int
push
data16
fdivrs
ds
test
insb
jmp
addr16
stos
push
sbb
jae
mov
mov
inc
stos
cmc
or
add
dec
mov
shr
jp
subb
mov
mov
cmp
ret
out
inc
adc
cltd
xchg
sub
pop
fidivrs
sub
mov
outsb
bound
faddl
je
std
repz
lods
jnp
mov
jmp
adc
xor
popf
xor
ret
fs
rolb
pop
mov
push
nop
add
sbb
repnz
xor
pand
shll
lret
fdivrs
scas
add
loope
in
cltd
jnp
je
loopne
or
and
sbb
jb
incl
inc
fsubl
push
inc
dec
sti
outsb
aad
mov
mov
popa
mov
movsl
mov
push
cmc
decl
movd
pusha
dec
movsl
stos
call
push
ret
pop
adc
sbb
loop
aaa
test
jp,pt
in
movl
stos
push
or
loope
leave
xchg
dec
xchg
stos
mov
movsl
cs
mov
mov
sub
cmpsb
inc
fiadds
xchg
stc
push
or
sar
inc
sub
je
jl
xor
jbe
in
bswap
mov
mov
cmc
sbbl
cmp
sbb
sti
lods
lods
aas
and
jl
or
nop
dec
mov
mov
jo
mov
shl
jb
mov
repnz
inc
movsl
and
jle
sbb
aas
aam
loop
mov
cmpl
mov
popa
test
movsb
lret
orb
adc
incl
jns
mov
call
insb
pop
pushf
aaa
dec
push
mov
les
call
enter
scas
repnz
or
hlt
pusha
push
dec
repnz
data16
cld
popf
rcr
jmp
and
movsb
lods
lcall
fcoml
lret
mov
fildl
sub
fldenv
popa
pop
dec
aas
pop
test
movb
daa
dec
rcll
cwtl
popf
shrl
lret
cli
jmp
test
iret
and
xchg
mov
mov
xlat
mov
jge
push
or
inc
orl
sbb
testl
je
mov
daa
jo
enter
std
dec
pop
test
push
mov
cld
aam
test
and
in
sbb
pop
fimuls
lods
xchg
lods
orl
lret
clc
pusha
jmp
fadds
out
xchg
adc
xlat
mov
dec
xor
xor
iret
fldenv
mov
cmp
push
in
imul
lods
je
cwtl
xchg
jne
rorl
dec
incl
outsl
loopne
lock
mov
adc
stc
mov
jb
jns
and
jnp
or
mov
ror
daa
push
cmpsb
faddp
add
or
inc
xchg
lds
imul
xor
out
movsb
fiaddl
outsb
lock
sti
fistpll
shr
xchg
inc
aaa
jae
mov
pop
out
or
pop
xchg
test
jmp
imul
mov
fwait
sbb
mov
je
out
adc
mov
ja
int
test
cmp
sub
mov
mov
stos
movsb
enter
lret
ret
movsb
dec
add
mov
repnz
cltd
mov
shll
mov
popf
cmpsl
loop
enter
incb
xchg
add
push
mov
shl
addr16
sbb
arpl
out
xorl
dec
mov
ds
and
push
std
in
lds
inc
adc
mov
mov
or
pop
pop
call
xor
mov
inc
mov
push
pushf
outsb
out
inc
ds
testb
movswl
sbb
repnz
pop
push
pushf
fists
inc
popa
fs
xchg
mov
into
ss
adc
test
push
adc
and
ss
aaa
aaa
sbb
xchg
mov
xchg
int3
int
mov
aas
pushw
ret
jae
push
ljmp
gs
push
cmp
push
pop
or
in
outsb
jbe
adc
aam
icebp
cs
add
fstpl
xchg
jne
lahf
or
xchg
filds
rol
rorl
lret
sub
jnp
xor
xor
clc
inc
test
fcmovnbe
mov
mov
adc
movsb
outsb
sub
out
push
icebp
pop
fwait
test
cld
rol
add
sbb
pusha
out
repnz
and
cmp
add
repz
fcmovnbe
pop
or
imul
lds
sub
rcr
xor
mov
out
nop
push
inc
pop
lcall
int
dec
jns
loop
add
xchg
push
adc
stc
fwait
xor
mov
adc
in
outsl
mov
outsl
jnp
push
loope
mov
fninit
sub
inc
test
popa
shlb
inc
imul
popf
aam
sub
fstl
in
add
and
push
inc
insb
push
out
ja
cmp
fsub
mull
jl
fisttpll
test
mov
orb
cmp
cs
cmpsb
jl
ss
inc
sti
cmc
loop
xchg
xor
push
lret
dec
sbb
lock
repnz
pop
or
xchg
adc
jnp
push
test
inc
mov
cmpl
pop
push
add
ss
test
mov
stos
aas
das
adc
les
or
lret
adc
shlb
inc
cmp
add
cmp
or
test
push
ja
enter
adc
je
adc
xchg
mov
adc
inc
dec
daa
imul
inc
dec
in
adc
out
mov
inc
aaa
les
enter
into
lods
and
add
pop
jp
cmpsl
or
cmc
in
xor
fisttpll
sub
sti
rorb
push
push
pop
dec
jae
orb
pop
movups
stos
xchg
pop
out
stc
pop
xchg
pop
xor
mov
inc
cmc
out
sub
fiadds
xor
mov
pop
mov
inc
push
mov
cwtl
push
cmp
imul
cmpsb
outsl
mov
push
es
mov
jg
dec
dec
inc
js
outsl
ret
imul
dec
fcmovb
inc
cltd
pop
add
lods
or
ror
jns
sbb
das
insb
cmp
stc
sub
cli
push
mov
aaa
push
and
cmp
nopl
and
das
and
push
xchg
pop
pop
fisttpll
aas
dec
sahf
movsb
bound
ret
ror
cltd
mov
data16
mov
scas
push
mov
push
xchg
dec
dec
and
mov
ljmp
addl
xchg
adc
pop
stos
add
ljmp
fs
xchg
pop
sbb
loop
jmp
cmpsl
ret
iret
jmp
pusha
bound
popa
xlat
sbb
int
fs
pop
repz
jns
pop
xor
adc
fmull
xor
jno
loope
mov
mov
adc
inc
sub
mov
in
lods
adc
inc
sbb
push
adc
fcmovbe
jo
and
dec
cmpl
lret
cmp
imul
mov
fildl
lods
add
icebp
add
mov
cmp
push
sbb
mov
scas
push
cwtl
lea
out
mov
test
and
fwait
push
dec
inc
mov
out
sarl
test
xchg
mov
sub
cmp
mov
add
loopne
movsb
mov
test
aam
mov
mov
pop
cmc
fmull
add
ja
aaa
icebp
mov
int3
int
daa
es
fnstsw
sbb
mov
jne
mov
lock
stos
pop
jle
mov
xchg
clc
push
scas
pop
stc
movsl
out
mov
es
inc
pop
mov
nop
pop
adc
movsb
adc
sti
inc
loopne
sub
push
mov
fdivs
test
imul
popa
jnp
insl
inc
cmp
daa
adc
mov
cmp
sub
push
popf
fcmovu
pop
outsl
push
cs
mov
dec
xchg
xchg
add
imul
mov
or
insb
mov
outsl
lods
mov
push
add
loopne
orb
dec
lcall
aas
bound
into
push
jo
ret
repz
bound
aam
aas
subl
jge
lret
xchg
push
sti
cmp
mov
sahf
inc
inc
push
jb
pusha
fistl
dec
roll
mov
ss
sbb
mov
or
andb
or
xchg
jnp
lahf
inc
cmp
sbb
mov
and
cltd
xchg
int
or
lods
xchg
mov
push
int3
cmp
sbb
testl
into
shll
mov
add
int
dec
dec
push
pop
jl
or
scas
gs
xchg
mov
jmp
mov
xchg
dec
shl
leave
mov
repz
sbb
rol
push
sub
mov
pop
repz
and
jecxz
mov
fisubrs
sub
add
ret
fwait
inc
sbb
gs
int3
lods
outsl
push
stos
xor
fdivrl
push
mov
adc
flds
add
push
rolb
xor
jbe
mov
mov
sbbb
lds
ret
daa
cmc
push
add
mov
jge
push
jbe
mov
test
xchg
add
adc
loope
push
push
or
nop
sub
sbb
enter
dec
xchg
sub
shl
stc
clc
sub
mov
lret
inc
pop
push
das
pop
sub
ret
insl
lahf
mov
ss
push
inc
das
or
mov
int3
adc
leave
ret
xchg
or
lret
je
sbb
lods
cmc
cmp
cmp
lock
cmpsl
inc
push
xor
das
xchg
fcmovnu
cltd
in
mov
push
sub
xchg
push
sub
sub
lret
and
lods
aaa
arpl
mov
enter
ljmp
movl
mov
popa
push
outsl
enter
sub
out
pop
sub
xchg
and
push
test
cld
test
push
repnz
xor
aad
jo
loop
xchg
add
cmpsb
mov
pop
mov
arpl
clc
mov
adc
mov
lods
mov
pop
dec
int
jmp
loopne
dec
daa
insl
mov
shl
pop
in
and
adc
stc
pop
dec
test
jmp
xchg
test
out
inc
lods
cld
pop
scas
fmull
scas
fistpll
movsl
xor
sar
sub
adc
mov
or
adc
sbb
sub
push
les
aaa
les
inc
inc
xchg
fstl
in
lods
shll
xchg
sbb
jp
cmp
int3
aad
mov
loopne
or
ja
in
nop
or
mov
mov
out
in
out
in
lahf
loopne
mov
and
negl
jmp
lds
cld
fldenv
mov
adc
outsl
std
fcomp
pop
lods
sub
aaa
aam
add
ljmp
lods
lcall
mov
mov
aad
dec
ficompl
popf
mov
insl
lea
es
dec
aaa
mov
sbb
das
fnsave
push
dec
cmp
or
movsb
sbb
cmpsb
mov
push
jg
jle
and
sub
nop
iret
aaa
and
fiadds
or
xchg
pop
ljmp
mov
and
jns
mov
push
les
mov
repz
and
lea
popf
adc
add
out
or
dec
inc
xchg
xchg
push
je
jbe
ficompl
lret
jge
cmp
sbb
jns
xchg
das
leave
add
ja
cmc
jmp
imul
jb
or
out
dec
in
mov
jbe
int3
pop
shrl
test
scas
add
rcl
pop
lret
push
repnz
dec
lret
add
scas
mov
xchg
call
push
and
rcll
add
fsubrp
xchg
mov
imul
mov
ret
pop
push
cmpsl
into
out
mov
ja
xor
mov
orb
add
icebp
or
dec
jge
sbb
lods
stos
test
lcall
insl
test
mov
cwtl
sub
into
inc
lock
iret
xchg
pop
inc
lock
cmpsl
pushf
insb
jnp
movsl
mov
lea
in
int3
inc
pusha
fimull
pop
cmpsb
cmp
adc
or
cmc
mov
jb
sar
sbb
mov
push
add
gs
push
cmp
enter
xchg
stc
lahf
mov
push
push
icebp
inc
notb
cmp
call
cmpsb
ret
int3
or
fadd
fcompl
fcmovne
and
cmp
dec
jo
ret
jae
sbb
xchg
aam
lds
cmp
loop
inc
popf
push
icebp
sbb
popa
cmp
or
xchg
jnp
bound
cmpsb
leave
jno
lcall
dec
lcall
scas
shr
les
dec
subl
pop
mov
add
stos
push
mov
testb
hlt
ljmp
xchg
std
loop
cwtl
and
clc
inc
pop
addr16
sub
cmp
inc
notb
cli
jno
mov
fwait
xor
aad
xlat
dec
adc
testb
pop
cwtl
pop
call
aad
out
jge
xor
mov
push
andb
sub
and
out
dec
mov
idiv
mov
push
lds
fildl
push
xchg
mov
out
js
mov
andl
aas
shrl
xchg
and
xor
repz
scas
fildl
jno
idivl
jp
cld
adc
ret
mov
xchg
test
pop
dec
mov
arpl
push
sub
mov
iret
cmp
or
jg
jl
popa
or
mov
pop
fs
imul
mov
or
out
stc
mov
fstl
test
pop
stc
mov
scas
cld
arpl
out
std
adc
push
mov
inc
or
sub
mov
or
xchg
mov
andb
pop
mov
addr16
sub
or
lds
sbb
fsts
mov
fwait
js
mov
jl
mov
adc
movsl
jmp
sbb
push
int
in
stos
sbb
movsb
std
fwait
pop
xlat
aam
sub
jno
pop
push
je
fsubrl
mov
xchg
or
ds
and
jge
in
out
xor
cmp
dec
adc
inc
aad
sub
mov
cld
sbb
mov
xor
shll
push
jno
test
jae
xor
test
popa
push
sub
inc
pop
in
ss
mov
pop
mov
mov
mov
stos
push
dec
add
jo
adc
dec
pusha
dec
pop
xor
cmp
xor
dec
shr
jge
inc
add
mov
cmp
pop
cld
jae
filds
inc
or
leave
adc
sti
outsl
and
addl
mov
sahf
sbb
inc
fdivrl
les
push
sarl
mov
cmp
adc
aas
push
push
mov
and
cli
or
pop
mov
sti
mov
inc
rcrl
mov
jl
mov
push
xchg
repnz
sahf
in
test
flds
jb
std
lock
ljmp
xchg
repnz
adc
cld
inc
ja
test
jg
loop
mov
or
or
add
mov
xor
mov
addr16
aam
addb
jae
push
cmovo
inc
and
ret
jnp
ret
mov
daa
cmp
popf
cmp
cmovo
addr16
jecxz
xchg
outsb
push
adc
and
and
jp
rcrb
inc
mov
jg
jp
and
push
aad
in
insl
outsb
ficomps
ret
inc
lret
xchg
inc
movsl
sbb
stos
in
rol
leave
rolb
lods
bound
mov
jle
sub
movsb
filds
test
push
xchg
mov
popf
stc
jno
leave
mov
mov
mov
or
lret
cmpsb
adc
cmpsb
mov
jl
jmp
in
test
push
jae
xchg
sbb
rolb
mov
pop
and
sbb
sbb
cmp
push
mov
sub
in
in
js
es
out
and
inc
sbb
testb
lret
sub
inc
pushfw
int
or
and
inc
xorb
mov
fadds
cmp
jnp
push
ficoms
inc
xlat
int3
inc
orl
stos
mov
mov
lcall
js
mov
jns
xchg
hlt
stos
adc
testl
mov
push
cmp
mov
sub
cmp
push
cmpsb
mov
sbb
cltd
je
or
int
test
roll
loopnew
adc
fimuls
repnz
mov
jbe
fisubl
cli
notb
pushf
repnz
movsb
out
pop
push
add
ds
andb
out
xchg
hlt
mov
iret
mov
jg
sub
ljmp
je
jp
adc
into
aas
mov
and
test
iret
sub
sbb
mov
sub
lea
adc
push
sarl
and
sub
and
pusha
or
and
lds
mov
cli
pop
add
inc
cmp
and
push
test
stc
push
mov
push
das
xor
inc
xchg
sub
mov
sahf
jp
jg
sahf
out
or
sub
popa
jg
cmpsb
dec
orl
mov
cmp
imul
xchg
xchg
inc
dec
mov
insb
loop
lods
out
fidivs
sub
sub
loope
daa
mov
gs
mov
ss
test
cmp
xchg
xor
or
push
dec
rorb
xchg
js
push
jl
jge
and
pop
notl
out
push
into
fsubrl
clc
push
shll
lret
jo
push
pop
ljmp
mov
adc
or
daa
scas
mov
mov
cmpsl
push
sbb
jmp
out
cli
pop
fnstcw
loop
pushf
mov
cli
jbe
cli
loop
shrb
or
lret
add
pop
sbb
mov
int3
mov
jl
scas
cmp
xor
loope,pn
pop
bound
mov
sahf
cmp
sub
pop
push
sbb
cmp
xchg
addr16
out
inc
xchg
imul
dec
mov
add
rcll
addr16
aaa
repnz
xchg
mov
fsubs
ror
iret
xor
cvtps2pd
mov
inc
add
or
push
jecxz
jl
push
insl
shrb
cltd
push
jecxz
jno
lock
enter
xorl
insb
pusha
ds
loope
aaa
inc
insl
insl
xor
xchg
lea
dec
xor
inc
mov
xchg
mov
mov
das
cmc
sub
shll
or
push
cld
aam
mov
cmc
inc
out
or
in
filds
movsl
test
lahf
jge
lahf
inc
jno
stc
sbb
data16
lahf
mov
mov
cmp
mov
inc
clc
pop
lea
xchg
arpl
cld
fdivs
outsb
xor
and
div
in
mov
popa
fisttps
movsl
mov
adc
push
inc
sbb
loope
cs
pusha
je
add
mov
and
test
cli
test
addr16
nop
insb
aad
xchg
jecxz
je
data16
test
stos
insb
cmp
fildll
cmp
add
add
out
aas
and
push
clc
xchg
cld
or
rcl
ret
or
dec
test
test
push
and
ficompl
push
cmp
mov
int3
stos
sbb
test
xchg
jle
pop
sbb
insb
aam
xlat
lret
or
ds
sar
adcl
or
fisttps
lahf
in
and
das
sarb
sahf
adc
mov
aad
leave
imul
stos
mov
bnd
fbld
push
cmp
or
add
sub
shlb
shl
sbb
pop
inc
cltd
sbb
pusha
adc
mov
sub
pop
sbb
push
fmull
adc
and
or
cwtl
mov
sar
test
or
push
inc
xor
mov
es
lcall
ret
cltd
repz
imul
jnp
jb
push
mov
mov
push
pop
int3
mov
sbb
inc
popf
xor
mov
je
add
or
and
pop
adc
loope
and
lds
jbe
adc
jae
mov
jl
cmp
inc
xor
sub
inc
ljmp
push
insb
xchg
mov
lret
or
cs
out
lds
adc
add
das
stos
mov
fsubs
mov
nop
jno
xorl
negb
lret
orl
mov
arpl
or
xchg
sbb
sahf
das
sub
push
aas
fcom
cli
aas
sahf
pop
cmc
sbb
jmp
and
loop
icebp
imull
clc
pop
and
int3
jne
pavgb
and
inc
or
sbb
cmp
dec
push
out
push
sub
pusha
lret
and
adc
mov
cmpsb
jmp
es
sarl
xchg
lods
or
and
dec
jne
mov
cwtl
add
adc
jb
adc
arpl
sub
stos
and
mov
and
push
push
pop
outsb
mov
icebp
cld
loop
andl
xchg
cs
test
jnp
stos
xor
push
sbb
ds
xor
orb
daa
inc
xlat
aam
dec
lret
push
mov
jge
xchg
mov
std
leave
mov
fmul
pop
cmp
les
push
or
or
ja
inc
icebp
add
hlt
mov
lret
add
pusha
dec
and
pop
xchg
add
inc
cmp
cmpsl
faddl
cld
sub
int3
or
xor
or
inc
lods
mov
int
test
nop
or
push
popf
adc
jmp
in
sbb
add
xchg
into
outsl
fidivl
stc
lret
rcrb
test
mov
mov
insb
add
add
inc
pop
pop
mov
sub
inc
lods
mov
lea
or
or
push
mov
mov
dec
int3
shll
sbb
ja
and
xlat
push
in
push
pop
sti
movsb
xor
adcb
push
pushf
lret
fwait
insb
mov
mov
jb
sbb
mov
imul
mov
ljmp
outsl
xor
push
into
pusha
mov
outsl
rcll
loop
test
inc
jnp
test
inc
pop
dec
hlt
psubb
scas
pusha
or
mov
sarl
cwtl
popf
stos
sbb
inc
out
cs
dec
mov
popf
mov
mov
outsl
lock
mov
rorl
fdivl
add
mov
cwtl
pop
gs
mov
mov
add
cmp
cwtl
xchg
cmp
push
test
and
mov
out
lea
or
sti
jecxz
in
add
pop
jl
mov
nop
lahf
push
sbb
mov
or
dec
push
xchg
adc
push
loop
imul
shr
xor
or
call
sbb
negb
xor
fstp
push
mov
in
mov
fcoml
pop
and
mov
xchg
jp
loopne
mov
fmuls
mov
and
out
hlt
push
mov
jnp
incb
xchg
popf
scas
int3
mov
sbb
xchg
mov
push
mov
out
sbb
loop
sub
cli
sbb
stos
mov
sbb
scas
lret
test
mov
clc
jl
xor
push
hlt
loopne
out
xor
ja
pusha
movsl
enter
adc
in
mov
push
jo
bound
testb
mov
xchg
rol
pop
pop
mov
nop
xor
mov
mov
mov
lahf
out
push
andl
adc
inc
mov
cmp
movsl
push
sbb
or
bound
jnp
sbb
cmpsb
and
adc
dec
int
enter
mov
mov
sub
mov
out
lahf
insb
leave
sbb
cmpsb
cmpsl
movsl
xchg
cmc
fnstenv
scas
bound
adc
js
xor
inc
cmp
push
fwait
jg
push
loope
faddl
adcl
in
sti
rolb
push
ret
and
jge
ret
in
mov
rolb
mov
xor
pop
sbb
push
sub
mov
mov
and
adc
aaa
lcall
or
es
push
cmp
mov
xchg
js
xchg
mov
arpl
lret
out
ja
add
in
lods
ret
stos
gs
es
ret
xor
mov
sub
sbb
mov
push
je
mov
mov
add
icebp
xor
rol
rcll
test
jae
push
pop
or
fdiv
ja
sub
add
inc
lret
fnstcw
adc
mov
sarl
mov
mov
imul
pop
cmp
cmp
fs
pop
loope
xor
sbb
call
ret
push
adc
out
out
mov
cmp
pushf
arpl
adc
push
xor
sbb
adc
in
dec
adc
popf
push
pushf
cmp
in
inc
sbb
and
shlb
lret
dec
adc
repz
sahf
xlat
xlat
inc
sbb
sub
add
fs
lds
mov
shll
jg
sbb
adc
jno
pop
mov
addb
xchg
and
fiadds
daa
cmc
jmp
inc
push
push
sub
jecxz
inc
dec
jnp
pop
mov
xchg
inc
aad
cs
pop
xchg
mov
stos
jecxz
xchg
sub
inc
in
adc
lahf
dec
mov
ret
repnz
std
int
or
popf
divb
notl
cmp
movsl
int
adc
nop
aad
inc
jb
enter
push
out
xor
test
out
push
cmp
lcall
jne
stc
sub
rcrl
mov
fldl
fisubl
xchg
lahf
testl
and
dec
pop
jmp
xlat
ret
daa
sub
dec
mov
push
inc
sarb
xchg
hlt
inc
stc
and
jle
mov
mov
out
cs
mov
cmp
mov
mov
xor
mov
and
daa
popa
mov
pop
addr16
leave
shll
sti
push
pop
out
je
jno
pop
xchg
test
pop
dec
dec
lcall
sub
daa
dec
xchg
adc
inc
cmp
cwtl
mov
lods
roll
pop
mov
adc
push
mov
cmp
lods
mov
nop
out
xor
push
jg
xor
clc
jb
xor
cmpps
dec
mov
fidivs
mov
pop
pop
popf
mov
testl
add
fwait
inc
fs
repz
xor
ss
repnz
xor
popa
dec
or
xchg
sub
mov
adc
push
mov
cmc
sbbb
mov
xor
fcmovb
pop
insl
jg
out
jecxz
pop
loope
pop
xor
scas
loope
lcall
cmp
mov
insb
inc
pop
xchg
mov
cmp
mov
sbb
xor
lcall
stc
xchg
push
imul
roll
sbb
rcrb
pop
cmp
mov
jge
ja
push
inc
outsb
sub
jo
mov
hlt
test
sub
mov
mov
aad
xchg
mov
cmp
sub
aas
lcall
or
repz
ret
arpl
loopne
leave
mov
dec
pop
les
adc
cmp
dec
fidivrl
push
in
and
jb
sub
andl
sub
push
adc
sub
pushf
jns
mov
cltd
inc
and
int
adc
pop
mov
dec
mov
lods
mov
ljmp
xchg
subl
ret
ffree
pushl
daa
xor
sbb
cmp
loope
pop
in
test
dec
adc
dec
mov
pop
clc
cmp
xchg
jg
jnp
sbb
sbb
movsl
sub
int
out
jae
or
int
xor
inc
push
lahf
push
out
sub
or
enter
rorl
in
sahf
lret
repz
mov
shl
mov
mov
repz
sub
ficoms
clc
pop
sub
and
xchg
and
xchg
sub
sarb
mov
dec
xchg
jmp
movsb
mov
out
xchg
cltd
xchg
sub
or
sub
in
pop
daa
xlat
xor
adc
or
jecxz
insb
es
sub
je
push
popa
add
outsb
cmp
jmp
push
dec
push
es
ret
int
xchg
and
cmp
jns
popf
cmpsb
test
repz
pop
or
ss
in
fcoms
mov
addr16
or
subb
das
std
pop
sbb
clc
mov
popl
push
mov
sbb
jns
mov
lret
pop
inc
dec
dec
dec
add
xor
push
clc
mov
adc
jae
add
inc
mov
dec
or
dec
adc
jp
xor
push
lcall
push
leave
out
stos
adc
cmc
adc
mov
fists
nop
mov
cmp
push
adc
cwtl
int3
shrl
dec
adc
in
aad
and
xlat
or
in
inc
ss
xor
inc
cwtl
pop
stc
jp
cmp
mov
add
adc
es
xchg
jge
cli
shlb
adc
cmpsb
and
fs
xor
ficoms
dec
xchg
in
bound
into
fistpll
lret
in
sub
sub
or
add
rcrl
out
mov
mov
xchg
icebp
mov
mov
jp
lock
jecxz
dec
sub
lds
rorl
inc
imul
or
sbb
imull
hlt
inc
sti
jnp
push
or
cmp
decb
cltd
arpl
cld
dec
xor
ficomps
inc
dec
movsb
jns
test
add
aas
xor
in
dec
sti
dec
out
shl
push
or
cmp
int3
mov
insb
cmp
repnz
outsb
push
iret
pop
fwait
cld
arpl
xchg
xor
xchg
icebp
jns
pop
inc
jno
std
sarl
sub
cwtl
mov
mov
loopne
iret
or
cmpsl
mov
cli
mov
push
leave
push
faddp
pop
into
mov
xor
mov
jecxz
mov
xor
xor
mov
mov
mov
gs
test
xchg
mov
loope
inc
ret
mov
fwait
addr16
or
push
lock
sub
sub
inc
mov
outsl
mov
out
xchg
in
sarl
xchg
cld
push
jae
mov
gs
inc
in
xchg
push
push
sub
mov
dec
push
jmp
nop
pop
test
js
int
sub
mov
pop
push
cli
cmp
das
aas
aad
aaa
loope
push
out
pushf
lret
inc
mov
ret
out
dec
hlt
imul
xor
adc
fisubl
fs
sub
cmp
pop
call
ljmp
test
arpl
add
mov
dec
cmpsl
push
jecxz
cmp
jno
adc
dec
lcall
push
movsb
adc
jge
jns
adc
andb
fsts
xor
sub
imul
mov
repnz
mov
inc
and
call
clc
loope
imul
sbb
lcall
adc
add
sbb
ljmp
cmp
sar
stc
lahf
pop
jae
adc
mov
mov
loope
add
fisubl
jns
clc
mov
xchg
push
push
cmp
fcoms
push
xchg
je
addr16
cmp
lret
sbb
inc
mov
xchg
aad
xchg
push
mov
dec
cmpsl
adc
xchg
and
imul
int
fwait
data16
movsb
leave
or
push
cltd
xchg
sbb
sti
xchg
mov
int
sub
int3
lahf
xchg
dec
inc
cmc
lret
pop
adc
int3
mov
sbb
mov
clc
out
dec
repz
lahf
stos
push
inc
jae
gs
in
outsb
sub
sbb
ret
pop
sub
push
lock
frstor
hlt
dec
in
push
and
popf
push
es
into
fistps
aaa
fnsave
subl
add
arpl
or
mov
add
xor
out
lock
fdivrs
icebp
mov
inc
mov
dec
pop
daa
in
aaa
fsubl
clc
insl
std
add
mov
push
stos
mov
xor
xor
pop
or
push
dec
in
push
jge
xor
sbb
pop
outsb
sub
cld
pop
push
and
jmp
push
cmc
xlat
adc
jmp
inc
add
aas
out
pop
push
leave
daa
mov
xchg
pop
scas
adc
push
scas
sub
push
lret
shll
ret
inc
lods
mulb
push
mov
jo
xchg
dec
fs
sub
jmp
std
push
fcoms
rclb
jbe
jmp
and
pop
rcl
insl
test
rol
cmpsb
in
mov
sbb
sub
push
sub
jnp
scas
call
sbb
pop
loopne
xor
sub
je
notl
mov
js
mov
push
into
adc
sbb
push
pop
or
mov
psrlq
iret
imul
lret
dec
mov
lods
sub
and
or
dec
xchg
fisubrs
cwtl
mov
or
addb
aaa
sbb
jne
insb
ret
js
movsl
cmpsl
dec
jnp
sarl
cli
pop
shll
testl
scas
push
add
rcr
and
or
aas
or
xor
lock
ffree
and
aaa
scas
push
or
push
nop
shll
int3
pop
lahf
pop
push
mov
dec
rcll
aad
pop
sub
cmp
stc
out
shlb
test
aas
in
icebp
aam
les
cmp
sub
push
add
sub
cmp
pushf
sbb
xor
pop
popa
sub
push
mov
mov
xor
ds
pop
jae
and
xchg
lret
xor
fcom
fstpl
pop
adc
cmp
leave
xor
and
mov
in
xor
or
mov
dec
mov
rcrl
divb
push
insl
inc
and
popa
xor
imul
dec
popa
xchg
adc
adc
inc
arpl
out
ljmp
ficomps
and
inc
fmulp
das
mov
push
ret
or
and
add
push
sbbb
pop
js
popf
out
mov
push
inc
or
popf
lods
mov
jle
mov
out
scas
imul
push
cmp
or
js
icebp
ss
repz
pop
ret
jne
icebp
insb
sbb
scas
aaa
sub
fsubl
lods
js
shrb
or
gs
rorl
or
test
loope
insb
ss
fists
outsb
push
jp
xor
add
adc
ret
jb
int3
dec
lret
cli
leave
mov
sbb
cmp
in
or
mov
pop
xchg
or
test
pop
mov
mov
mov
gs
jp
mov
jo
mov
fisubrs
call
push
xchg
or
in
jl
cltd
outsb
mov
adc
dec
inc
loopne
inc
repz
lret
addl
mov
roll
scas
shll
leave
sub
and
and
mov
in
xlat
push
loop
mov
xchg
and
push
or
sbb
movsl
nop
lahf
push
nop
xchg
add
ret
xor
sarl
movsb
leave
xor
sub
dec
pushf
mov
sub
mov
fcmovne
insb
xchg
mov
and
xchg
push
pop
pop
rclb
inc
outsl
xlat
cltd
sub
lock
xchg
cmp
ret
loopne
sub
jb
es
shlb
cmp
sar
into
dec
sub
rorb
push
mov
hlt
or
sahf
andb
popa
out
inc
fcomps
mov
sbb
int
sbb
adc
and
inc
cmp
jmp
dec
sahf
pop
ss
inc
sbb
mov
lock
lret
jnp
ds
xchg
jp
dec
daa
aaa
pop
adc
xchg
jg
inc
pop
mov
shlb
gs
stos
mov
arpl
pop
add
enter
or
out
loope
push
sub
out
sub
pop
ja
mov
in
mov
inc
out
test
mov
jecxz
pop
and
sbb
push
iret
popa
shll
repz
imul
xchg
sbb
call
mov
mov
mov
clc
loopne
sti
mov
xchg
adc
jno
jbe
dec
push
scas
arpl
into
outsb
pop
or
outsb
pop
lret
or
fisttpl
mov
cwtl
loopne
push
aas
pand
es
shrb
and
sbb
jecxz
jae
scas
ds
add
es
push
ja
and
subl
fidivl
push
mov
es
xor
f2xm1
mov
adc
shr
pop
out
push
insb
lock
cmp
push
dec
outsl
mov
inc
jmp
add
pop
cvtps2pi
pushf
jns
sti
fwait
into
add
xor
push
out
fildll
pop
push
addr16
rorb
ret
add
addr16
mov
mov
mov
pop
xchg
out
fnstenv
arpl
les
arpl
movl
call
jle
test
nop
xchg
cmp
subb
push
cwtl
loope
imul
fidivrl
mov
loope
repz
xchg
xchg
push
mov
in
test
cld
stc
mov
jns
xchg
arpl
adc
xchg
pop
push
shl
out
mov
fdivl
lret
cli
enter
clc
data16
pushf
aad
inc
push
add
in
ds
dec
loopne
and
xchg
in
aas
push
sbb
lods
lods
xor
call
outsb
cmp
std
cmp
pop
sbbl
sti
inc
pop
leave
and
push
jg
mov
ds
in
test
mov
xor
lret
arpl
fcmovnu
push
arpl
les
sbb
ja
gs
xchg
xor
push
dec
imul
mov
aaa
sbb
jns
xorl
fiadds
adc
popa
xchg
adcb
jl
mov
stos
in
fucomip
stos
enter
inc
or
push
rcrb
ret
cmp
dec
pop
xchg
lea
jo
mov
es
xor
push
les
lea
inc
fs
icebp
add
stos
dec
out
xchg
dec
adc
jbe
adc
add
int3
push
cmp
mov
scas
or
stos
or
add
inc
cltd
dec
mov
repnz
leave
rcll
push
mov
sub
pop
adc
movsl
and
loop
les
cli
insl
aas
dec
test
gs
and
pop
jle
inc
iret
in
add
xor
mov
stos
xchg
fimull
mov
imul
adc
leave
push
jecxz
xchg
fbld
aam
cwtl
out
push
push
inc
int3
cmp
inc
push
lds
aam
dec
fcompl
sub
ret
push
lcall
adc
mov
mov
inc
mov
xchg
add
cld
mov
outsl
cwtl
jns
mov
and
loope
into
mov
jns
mov
dec
mov
std
pusha
icebp
pop
cli
xchg
and
or
shl
lock
xor
cmpsb
inc
pusha
adc
and
push
xor
inc
int
sti
sub
and
mov
fisttpll
test
jmpw
cmovae
outsb
or
dec
mov
in
jmp
je
pop
mov
mov
lods
mov
mov
and
enter
shrb
cmp
push
cltd
jmp
cwtl
fidivrs
xor
enter
ret
cwtl
mov
fsts
jno
in
push
mov
icebp
add
sub
and
and
popa
inc
rorl
rcrl
pop
xchg
sub
ficoms
cmpl
mov
xchg
xor
push
rcrl
xchg
and
ss
dec
xchg
mov
mov
out
cli
xor
mov
xor
sub
mov
mov
ljmp
push
mov
sti
add
mov
or
mov
fwait
lahf
repz
add
add
popf
inc
push
sahf
or
mov
ficoms
dec
or
push
call
and
pusha
push
push
lds
mov
or
dec
pop
cmc
add
cmpsb
inc
das
lcall
mov
repz
xorb
jmp
fdivrs
icebp
mov
movsb
pushf
push
mov
xchg
fisttpl
xor
mov
dec
aam
mov
cmp
cmp
sbb
dec
sbb
je
shl
loope
sarl
rclb
cld
movsl
loopne
or
sarl
movsb
idivb
insb
les
cmp
or
xchg
fcompl
sub
sub
adc
dec
sbb
int
adc
cltd
aam
out
sbbb
aad
out
add
add
movsb
sbb
or
or
fstp
ret
or
adc
and
and
and
xchg
pop
adc
push
inc
lcall
fmull
es
fstps
lahf
sub
movsl
notl
scas
inc
and
fbld
jae
xor
jbe
sub
xchg
pop
jnp
xchg
lahf
lods
addl
pop
subl
or
mov
mov
mov
dec
dec
inc
fdivp
adcb
or
cmp
fadd
mov
call
sub
pop
aam
fisttpl
loopne
and
and
and
into
out
jle
jbe
cwtl
jg
sti
sbb
je
mov
jne
loop
or
fcomp
fcmovu
xchg
push
lods
lahf
lcall
sbb
les
push
jne
fisttpl
xchg
in
call
aas
sbb
dec
inc
leave
add
xor
fcomip
mov
pop
test
inc
pop
push
mov
ds
add
rcll
daa
sub
pop
cmpsb
sub
pop
out
repnz
adc
jbe
mov
adc
jle
lret
xchg
push
pop
lret
loopne
lock
sahf
mov
ljmp
cmp
ja
cli
inc
std
std
xor
out
repz
mov
mov
rcl
aad
mov
rol
mov
fwait
cmpb
add
stc
cmp
cmp
or
fcompl
dec
cmpsb
aas
mov
inc
push
pushf
lds
stos
dec
and
xor
push
pop
xorl
fwait
mov
fwait
loop
xchg
xor
aad
test
push
xchg
lret
xor
fcomps
mov
out
mov
test
sbb
aas
jbe
inc
jmp
int
cs
cmp
push
dec
or
sbb
call
fidivl
xor
xor
xchg
push
jae
cmpb
cli
jns,pt
in
or
adc
jbe
cmc
mov
pop
jl
mov
leave
mov
out
inc
notl
cmp
cmpsl
rorl
in
imul
and
mov
jo
jmp
add
dec
cmp
mov
fcomi
fs
or
fsubrl
pop
inc
in
rcr
cmc
daa
add
cmc
mov
jle
ret
sub
hlt
mov
inc
addr16
mov
stc
inc
sbb
xor
sahf
dec
jmp
in
ja
scas
xor
mov
lea
pop
insb
subb
popf
mov
push
pusha
bnd
loopne
inc
cmp
lea
mov
hlt
jo
sti
xchg
cmc
fcoms
out
in
aas
dec
lds
in
mov
loopne
add
dec
adc
sbb
jne
xor
aaa
jno
das
aad
rorb
jecxz
rclb
xlat
mov
adc
pop
cmp
repz
xlat
lods
mov
test
mov
sbb
cmpsb
mov
imul
cs
jle
and
fucomip
jno
data16
sub
popa
sar
sub
adcb
xor
xchg
xchg
pop
ds
mov
les
mov
fsubs
scas
in
xlat
ja
cld
mov
mov
or
cmp
fs
lods
pop
push
pushf
jno
ffree
arpl
mov
cmp
jnp
imull
push
and
xchg
add
mov
mov
jns
js
sub
sub
push
int3
cmp
dec
xor
mov
jns
mov
xchg
fimuls
roll
jge
jae
sub
and
jge
xlat
movsb
test
movsb
test
stos
in
jb
movsb
mov
xor
push
mov
enter
sbb
ret
cmp
push
outsl
cmp
stos
push
adc
jle
push
mov
aaa
out
aaa
inc
cmp
jle
jg
jns
dec
shrl
or
or
xor
add
push
int
mov
dec
xchg
adc
fildl
pop
repz
in
mov
sbb
test
stc
adc
inc
lock
je
pushf
mov
mov
mov
xorb
into
out
mov
adcl
mov
mov
jae
out
mov
mov
aaa
push
das
pop
jbe
dec
xlat
pop
into
xchg
sub
scas
mov
xchg
push
and
mov
cmp
repnz
insl
pop
js
mov
and
pusha
xchg
xchg
and
xchg
mov
iret
in
call
sbb
mov
pop
shll
mov
xchg
add
pusha
xlat
push
mov
pop
lea
imul
mov
lret
sub
sbb
push
jo
out
xchg
add
add
mov
lea
js
pop
loop
movsl
fwait
pop
cmp
popf
inc
cmp
repz
add
mov
sbb
mov
ds
popf
jnp
pop
fmul
adc
inc
jb
dec
aas
popa
jl
in
jnp
loop
mov
sbb
adc
imul
mov
divb
sbb
push
mov
lds
popf
nop
inc
cmp
or
call
pop
jns
adc
push
adc
fcoms
out
mov
addr16
frstor
pusha
jp
xor
int
xor
jg
mov
repnz
pop
mov
jb
push
or
or
cmpsl
xor
sub
xchg
pop
lods
pop
adc
int3
mov
inc
bound
sub
sbbl
in
aaa
dec
pop
and
sbb
ret
jo
inc
mov
jmp
adc
fldz
out
or
xor
xor
jne
pop
xor
push
cld
movsl
mov
xchg
setne
rcrl
mov
js
jnp
mov
lods
sub
jp
js
pop
add
outsl
jmp
cmc
xchg
or
daa
sbbl
ja
arpl
adc
pop
aam
pop
mov
xchg
ja
xor
xchg
push
fldenv
cli
mov
sub
fwait
scas
repz
and
rcll
sbb
adc
jl
aas
or
sti
or
push
dec
adc
cmc
push
je
cwtl
dec
or
sti
xor
jp
mov
test
or
int
jns
movsb
pop
sahf
out
orl
push
cmc
xor
dec
sbb
pushf
xchg
imul
xchg
xchg
sub
inc
jno
ret
int
add
arpl
fildll
dec
pop
fwait
push
leave
push
movsl
gs
in
xor
fildll
pop
sbb
inc
mov
adc
in
sbb
out
pop
loop
push
or
push
inc
ret
fisubrs
inc
sbb
mov
cs
loopne
or
jge
pop
int3
cmpsb
push
add
mov
popa
add
mov
mov
dec
mov
inc
out
jmp
jo
ficompl
out
mov
inc
jecxz
jne
xor
mov
daa
scas
out
add
mov
neg
ja
rcr
bound
mov
ja
in
dec
sti
cmc
sub
je
jae
aad
fistpll
ret
popa
sbb
hlt
outsb
mov
jmp
jmp
mov
pop
jo
mov
ljmp
popa
dec
push
loope
daa
ljmp
in
adc
and
mov
test
test
push
movsb
xchg
lds
rolb
jae
push
stc
loopne
sbb
pusha
int3
je
decb
out
shll
mov
sub
mov
lock
clc
pop
add
into
aad
je
push
lods
inc
repz
bound
add
adc
lcall
pop
sub
hlt
inc
cmp
sbb
test
adc
popf
mov
rolb
jns
adc
sbb
aaa
aad
adc
mov
imul
adc
sbb
std
lcall
push
pop
repnz
and
fstps
sarb
xchg
push
mov
xor
xchg
add
addr16
sub
stos
add
flds
aad
mulb
push
sub
jnp
inc
jbe
adc
icebp
jp
and
ret
imul
imul
les
mov
cmpsb
orb
dec
jns
arpl
out
mov
sub
scas
imul
xchg
pusha
or
pop
pop
insl
push
int
scas
in
inc
sbb
inc
lret
pop
wbinvd
inc
dec
mov
fucomip
inc
xchg
addl
jns
negb
mov
inc
bsr
sub
loop
out
fwait
hlt
push
out
xor
jp
dec
add
adc
outsl
js
mov
imul
sahf
mov
cmp
faddl
jle
lahf
push
adc
adc
test
jg
mov
daa
sub
xor
inc
adc
inc
mov
mov
fisubrl
pop
push
add
inc
stos
adc
and
rorb
fwait
ret
lcall
pop
std
mov
fsubl
mov
popl
movb
hlt
add
mov
inc
sbb
sti
out
aas
fwait
stos
sub
cld
sbb
cmc
xchg
mov
cli
cltd
or
sub
ret
lods
clc
lods
add
adc
les
jle
fucom
cmpsl
xchg
sub
adc
cmpsl
in
pop
mov
ja
outsl
clc
mov
popa
dec
mov
fwait
cs
rcr
fsubs
mov
and
in
call
into
repnz
xchg
inc
jns
imull
xchg
pop
xor
cmp
aas
rcr
or
ret
mov
movsb
push
loope
ds
pop
sub
mov
cmpsl
daa
push
jae
xchg
or
mov
out
test
stc
or
lret
fwait
or
es
inc
inc
out
movsl
xchg
push
ror
cmp
outsl
mov
dec
jge
jnp
and
addr16
pop
inc
insb
xlat
fisubrl
dec
pushf
dec
out
mov
shrb
idivl
cli
mov
ss
jbe
fnsave
push
int
sub
adc
mov
push
test
and
loopne
jae
in
mov
adc
inc
cli
dec
and
je
int3
push
pusha
adc
mov
mov
push
shll
repnz
fadds
addr16
insl
lock
test
pop
pusha
xchg
and
call
xor
mov
xor
and
add
adc
fdivrs
mov
add
lods
push
stos
cwtl
sbb
mov
scas
jp
or
add
out
imul
scas
fldl
mov
stos
sbb
jno
push
mov
sbb
push
jle
popa
sbb
mov
jle
iret
push
lods
mov
in
test
cmpxchg
popa
idivl
jbe
adc
and
push
push
fwait
pop
mov
xchg
jno
ds
popa
adc
or
push
add
jg
xor
cmp
xchg
push
jp
int
repz
xchg
lret
rolb
cltd
pop
pop
mov
cmpsl
clc
or
cli
out
xchg
xchg
adc
mov
cmpb
arpl
stos
aas
out
lret
insl
inc
push
add
or
incl
xchg
sbb
or
and
pop
and
mov
mov
sub
dec
ret
out
and
or
xchg
mov
mov
rol
adc
or
mov
inc
cmp
push
vpmaxub
out
jecxz
sub
pop
inc
enter
or
pop
addr16
stos
movl
fldl
jge
or
pop
sbb
pop
pop
stos
std
or
sub
pop
cmpsl
add
out
cmpb
and
andl
push
rcrl
xchg
and
mov
cmpsb
sbb
cli
sbb
fiaddl
sbb
adc
push
push
dec
and
add
sub
lea
out
sti
aam
xchg
arpl
sbb
andb
std
dec
ja
lret
and
or
cmp
xor
xchg
cwtl
mov
jp
fs
push
mov
daa
inc
mov
fcomps
mov
adc
jecxz
frstor
mov
mov
aaa
enter
mov
pushl
out
sub
aaa
rcrl
loop
aaa
adc
cmpsb
inc
adcb
inc
sub
inc
cmpsb
mov
sub
jmp
in
or
daa
fistpl
sbb
cltd
sbb
sahf
add
cltd
repz
out
leave
xchg
jae
adc
push
mov
cmp
mov
mov
mov
cmp
icebp
aam
loop
addl
cmp
push
adc
nop
xorl
aam
and
jae
lahf
push
jl
push
jmp
lods
push
xor
sub
rcrl
mov
mov
addr16
outsb
loopne
xor
mov
jp
xchg
fsts
pop
clc
mov
dec
loop
xchg
scas
ret
xchg
pop
jae
pushf
hlt
and
pop
ret
mov
jp
jg
sub
mov
enter
dec
and
arpl
push
fidivrs
add
mov
scas
cmp
push
xor
pop
xchg
roll
push
inc
xchg
jmp
adc
mov
mov
push
out
adc
sub
out
jmp
scas
or
jo
scas
lods
out
add
xchg
xlat
add
inc
adcl
push
xlat
in
push
sbb
arpl
mov
inc
sbb
mov
inc
shll
cs
jg
jp
mov
fwait
xchg
fucomip
daa
dec
and
imul
xchg
sub
push
leave
xchg
imul
mov
mov
lods
fwait
pop
adc
int
and
imul
cmp
fnstsw
jl
repnz
dec
and
xor
jnp
fstpt
loopne
dec
loop
push
and
fmul
xchg
xchg
adc
test
out
cmp
in
test
ds
cs
pop
adc
xor
push
aad
rcrl
ds
sub
add
sub
fsts
hlt
and
cmc
cmc
and
mov
sbb
repnz
lods
jl
jns
xor
aas
out
mov
and
xor
arpl
or
lcall
sbb
insl
adc
jle
divb
push
add
mov
shll
push
and
cmp
shll
jns
cmp
jo
sbb
in
push
std
lods
xchg
test
repnz
push
imul
mov
rcl
cmp
push
loopne
mov
fistpl
xchg
push
cmpsl
les
imul
jno
xor
jmp
pushl
leave
pop
test
lret
push
lods
add
js
sub
cwtl
pop
pushf
wbinvd
enter
je
lcall
jmp
xor
lea
cli
lret
mov
pop
stos
or
add
jo
inc
js
shrb
stc
arpl
repz
jecxz
dec
xchg
lcall
lea
icebp
jbe
repz
pop
shl
aas
pop
cli
and
inc
mov
sbb
mov
dec
fdivrp
mov
pop
popa
in
mov
add
je
cmpl
cmc
dec
popf
sub
jl
rorb
gs
jno
pop
adc
mov
dec
cmc
stc
in
out
or
cmp
ljmp
mov
cmp
ret
fs
xchg
rcrl
cmp
mov
cmp
int
lds
leave
ss
lcall
nop
push
imul
bound
mov
cmpsl
jae
clc
mov
jle,pt
xor
mov
pop
dec
notb
rcr
cltd
mov
push
loopne
cmp
stos
xor
int
rcll
inc
hlt
push
xchg
mov
int3
mov
out
les
decb
fwait
mov
mov
movsl
or
rcr
mov
stc
jno
test
mov
dec
mov
push
mov
adc
shlb
addl
ljmp
fucomi
lret
push
adc
jg
push
scas
ds
cmpsb
rcrl
ret
and
shlb
pop
test
outsl
cmp
sub
ja
xchg
subb
push
and
sbb
test
ss
or
nop
xchg
cmp
jae
push
in
shrl
cmc
and
aas
dec
cmp
add
lds
insl
fwait
mov
add
movsl
pushf
sbb
sub
mov
push
insl
push
mov
fcom
dec
mov
mov
out
or
in
push
test
int
call
lret
xchg
xchg
lahf
shlb
nop
test
and
jle
sub
mov
push
sbb
fcmovne
sbb
dec
and
xor
add
enter
es
popf
pushf
ss
stos
sub
sub
ds
lods
xor
xchg
es
mov
push
xchg
loopne
push
dec
das
pop
loop
ja
mov
test
jae
xchg
addb
dec
cmp
dec
cmpsl
xchg
adc
dec
mov
add
decl
repz
int
xor
sbb
loope
in
sub
pop
out
xchg
divb
in
or
or
add
xchg
in
ds
outsb
mov
loop
cli
lcall
test
mov
sti
dec
mov
inc
sbb
and
xchg
push
inc
mov
mov
out
loopne
notb
shrb
sbb
mov
or
jg
add
add
popa
dec
sbb
cmp
xor
add
jmp
pop
in
cs
add
push
jmp
mov
push
xor
jl
orb
test
aaa
test
jae
ljmp
gs
sub
sub
testl
lock
fsubrp
lcall
xchg
out
in
dec
jno
cmp
and
sbb
push
push
lret
pop
inc
pop
lods
fbstp
xlat
mov
out
dec
loopne
mov
out
push
push
js
dec
or
pop
lahf
pusha
jnp
movsl
adc
sub
pushf
imul
aas
cltd
imul
pusha
cmc
mov
mov
mov
pop
jnp
ret
in
adc
fs
jle
gs
sbb
sti
jnp
pop
inc
adc
cmp
test
xchg
cmp
mov
fdivrl
mov
loop
cmp
or
mov
in
rorl
or
js
loop
cmpsb
mov
sub
aad
mov
dec
ja
push
cmp
pop
shl
repnz
in
out
sbb
xor
test
or
sbb
sti
xchg
and
icebp
mov
loopne
mov
dec
inc
in
aad
std
leave
lahf
js
mov
adc
add
sbb
or
or
loop
mov
pushf
dec
pop
cmp
adc
xor
xchg
mov
dec
shl
arpl
sbb
inc
movsl
jg
hlt
or
ficoml
lret
pop
or
fdivs
in
pop
dec
jl
popa
xor
push
inc
popf
jbe
pop
aas
jno
js
lcall
loope
fmull
pop
shll
aas
dec
mov
dec
cmp
and
sbb
in
or
fdivrl
sbb
call
cmp
je
cmp
push
je
movsl
jle
sbb
and
cmp
bound
scas
inc
movsb
adc
bound
mov
cmc
add
fbstp
cld
ret
mov
inc
clc
imul
int3
mov
add
cmp
dec
push
iret
jo
rolb
and
cmpsb
mov
push
out
jne
gs
adc
and
adc
lahf
loope
lds
mov
ja
movsb
shll
mov
dec
insl
enter
iret
pusha
aam
pop
mov
or
pop
nop
xchg
xor
scas
mov
mov
in
push
arpl
push
mov
ds
mov
pop
aaa
popf
cld
inc
pop
ret
in
pop
push
push
outsb
fcoml
dec
lcall
popa
aaa
push
ljmp
xchg
aad
je
lret
dec
insl
repnz
sub
push
cmp
adc
ja
out
outsb
push
jbe
lds
cmpsb
pop
jae
jg
addr16
jb
jnp
int
std
xor
push
psrlq
pusha
popf
dec
dec
cli
jb
imull
adc
enter
jecxz
push
jnp
dec
jae
xchg
clc
dec
push
adc
add
nop
add
int3
push
or
push
into
xchg
and
stos
jl
add
cld
inc
je
scas
es
adc
popf
andb
aaa
cmp
sbb
mov
aaa
adc
lret
js
jmp
sarl
leave
aad
jae
xor
adc
pusha
or
faddp
jo
fidivrs
sbb
mov
int
inc
jg
sbb
add
addr16
aas
cmp
jp
mov
fwait
lret
mov
enter
ljmp
cmp
mov
cmp
loop
xor
pop
je
add
cmp
rolb
cld
mov
aas
push
or
cltd
push
pop
insl
mov
mov
xchg
sbb
loopne
or
andps
dec
mov
mov
jecxz
out
cmp
mov
inc
in
push
int3
xchg
pusha
and
dec
push
in
ss
mov
mov
jnp
or
sarb
fistpl
sti
add
ja
les
ficompl
test
ljmp
int
cwtl
andb
popf
rcrb
sub
fcoms
jecxz
and
inc
popf
jle
sbb
fildll
inc
pop
outsl
outsb
push
fucom
das
aaa
js
adc
stos
repz
mov
xchg
sbb
in
pop
mov
aas
cmp
xchg
mov
stc
subb
out
lcall
push
xchg
es
cmpsl
out
dec
leave
sub
inc
jle
mov
xor
fnstsw
mov
aaa
xchg
aas
mov
or
jl
xor
movsb
cmp
ja
out
call
ss
push
imul
stos
dec
jno
mov
adc
test
out
clc
movsl
add
movsb
scas
add
daa
sbb
mov
mov
add
mov
stos
std
ljmp
cld
in
arpl
pop
mov
shrl
sar
out
lret
add
and
dec
ror
jle
rclb
jae
inc
cmp
outsl
cs
arpl
push
xor
aad
fwait
xchg
xor
xchg
sbb
xchg
mov
popa
iret
iret
scas
dec
dec
je
xlat
push
xchg
pop
orl
fistpll
pop
cmp
outsl
lahf
pop
clc
lret
ss
sbb
fldenv
cld
sub
mov
mov
in
pop
aad
jae
shr
stc
and
adc
mov
sbb
sti
dec
out
jg
push
sub
sbb
sbb
fs
cld
mov
arpl
fldcw
into
cmp
fimull
pmaxub
adc
xchg
or
push
cmpsl
mov
cs
lret
cmp
repz
mov
and
pop
ja
inc
pop
xchg
xchg
cmp
cmp
push
jbe
in
or
in
cmp
sbb
xchg
or
mov
leave
shrl
dec
pop
ljmp
fstpt
push
sbb
addb
movsl
xchg
lahf
and
ret
jo
mov
lods
pop
mov
sub
push
std
fsts
ss
push
ss
add
fsubrs
dec
jne
and
hlt
sub
dec
das
mov
mov
xor
test
and
addr16
nop
rorb
dec
jne
scas
movl
aaa
ljmp
lahf
jecxz
scas
cld
das
dec
daa
jb
int
roll
ret
loopne
int
leave
cmpsb
pusha
stc
icebp
push
lds
pop
cmc
lahf
add
les
push
push
or
xchg
lcall
adc
repz
aad
int
jp
sub
test
sbb
or
xlat
ficomps
ret
sub
push
imul
adc
xchg
sbb
fucomip
mov
ret
popf
outsl
cmp
adc
pop
jp
mov
scas
pop
fisubrl
jge
xchg
nop
mov
push
add
mov
xchg
fcomps
sub
xor
fs
pop
xlat
scas
aas
fildll
add
lea
pushf
and
add
das
mov
xchg
subb
xchg
in
insl
push
mov
sahf
in
mov
or
sahf
rolb
mov
jns
sub
aas
shrb
pop
test
add
xlat
leave
mov
cmp
ja
inc
lods
out
xchg
jb
push
adc
js
out
or
shl
sbb
test
daa
xchg
in
sub
imulb
leave
bnd
lcall
test
cs
dec
test
insb
sbb
push
pop
xchg
jo
ljmp
xor
insl
rsqrtps
subb
int3
cmpsb
pop
sub
ret
sub
push
xchg
or
stc
push
outsb
call
inc
imul
and
shll
aam
xchg
fwait
inc
jnp
push
or
pop
movsb
push
inc
movsl
dec
mov
dec
push
mov
je
mov
rcr
test
and
lock
in
push
aaa
xchg
aas
mov
add
popa
jmp
fcoms
movsb
xchg
sbb
cli
daa
icebp
xorb
push
push
push
rol
ja
add
sbb
fs
ja
std
lcall
ds
jp
push
cmp
mov
bound
xchg
ret
mov
push
jo
pop
mov
pop
mov
fimull
test
mov
hlt
out
push
add
imul
push
ret
push
outsl
mov
lock
int3
adc
mov
testl
pop
gs
jno
mov
ss
add
or
pop
pop
dec
in
int3
std
push
xlat
add
sbb
mov
pop
into
cmp
popl
inc
mov
inc
and
push
pop
adc
cmp
popa
cmpsb
mov
shlb
sbb
push
inc
orb
insb
push
sub
test
jo
stos
push
clc
adc
movsl
shlb
sbb
lret
mov
rep
xor
fcompl
xorb
add
dec
inc
fisubl
mov
and
push
lods
add
sbb
sub
mov
loope
cmpsb
jge
push
int3
add
mov
pop
xor
in
mov
mov
fmuls
adc
mov
mov
cmc
jg
jg
repnz
adcl
rcl
add
inc
sbb
adc
ret
add
cmp
jp
cld
lods
cmp
ficompl
mov
dec
mov
jnp
pop
cmp
cmpb
cmc
lock
sbb
pusha
push
scas
addr16
ret
dec
xor
stc
das
sbb
jae
dec
repz
xchg
xor
mov
cmc
cmp
jmp
outsb
adc
pop
mov
js
pop
cltd
imul
ja
and
cld
and
and
pop
or
sahf
mov
stc
add
lods
mov
sub
or
inc
jae
pusha
aad
clc
jl
cmp
lret
add
inc
pop
sti
fsubl
test
push
push
dec
mov
fwait
dec
mov
xchg
fsubrs
or
iret
pop
mov
aas
xchg
mov
iret
sbb
sub
cs
or
pop
fldenv
cmp
mov
call
nop
lea
pushw
cmp
mov
add
xor
hlt
int3
inc
lods
cmp
pushf
dec
movsb
adc
inc
fwait
xor
mov
cmpl
test
xchg
push
add
in
movsl
adc
sbb
sub
mov
or
xchg
xchg
in
add
mov
xchg
test
rcll
fcmovnb
add
mov
in
int3
mov
mov
repnz
inc
test
fwait
mov
ficoms
stc
mov
xchg
out
sbb
mov
in
enter
sub
mov
mov
rcr
xchg
shl
cli
or
mov
iret
stc
and
or
adc
pop
add
xor
sbb
aad
xchg
mov
insb
mov
cmp
sub
mov
mov
push
sbb
aam
add
in
rcrl
stos
repz
loop
jno
hlt
aas
xchg
mov
mov
inc
push
push
dec
jl
mov
add
popa
push
push
jo
fildl
mov
mov
bound
add
cmp
imul
inc
cwtl
xchg
jmp
inc
inc
test
adc
in
cmp
sub
cmp
nop
mov
movsl
add
stos
clc
jge
mov
lret
jae
cmc
popa
jb
in
repnz
jle
mov
ret
mov
xchg
rol
jae
inc
shll
mov
mov
int
fcoms
and
mov
je
inc
cmpsb
pop
dec
std
xor
insl
call
mov
xlat
pop
lret
int3
push
out
rcrl
faddl
das
data16
push
aam
mov
stos
lcall
cmp
insl
filds
add
dec
sub
mov
inc
pushf
repz
xchg
pop
dec
jb
ret
sti
mov
scas
push
fwait
aas
std
adc
bound
push
fisubl
call
lods
mov
xchg
dec
jle
scas
cwtl
sub
mov
lods
and
aam
movsb
sub
mov
aam
inc
dec
mov
arpl
xor
fmuls
mov
mov
jae
loopne
mov
push
insl
test
dec
mov
das
outsl
xchg
mov
test
add
jge
out
and
xchg
ja
adc
jge
int3
into
dec
icebp
or
inc
rorl
in
in
jns
and
push
add
lock
mov
adc
sub
icebp
mov
push
shlb
scas
pop
and
rcr
loop
inc
pop
insl
xchg
daa
pop
mov
pop
lock
xor
les
pop
js
push
aad
push
jbe
fistpl
dec
pop
jnp
mov
jl
stos
cmp
mov
xorl
sahf
sub
and
mov
inc
idivb
call
fs
outsl
lods
mov
cmpsb
mov
clc
icebp
cltd
stos
out
inc
sahf
cmp
and
mov
cmp
adc
fildl
sub
xor
out
push
sbb
add
push
aam
cmp
mov
jge
mov
xlat
jnp
bound
in
dec
jg
aam
jp
inc
adc
xchg
nop
and
pushf
add
shrl
jno
mov
inc
ficoml
imul
sbb
daa
fs
stc
adc
das
push
cmp
lock
sbb
repnz
inc
icebp
mov
xchg
js
inc
cwtl
jl
movl
insl
jl
or
jno
into
repnz
mul
jg
push
and
scas
mov
fsubr
mov
in
int
sti
push
in
popa
dec
mov
imul
xchg
cmp
cmp
pushf
data16
jp
insl
hlt
cltd
dec
lea
xor
cmp
push
push
push
aad
sbb
fisttpll
add
popa
mov
dec
lods
jge
cld
adc
mov
xchg
mov
mov
sbb
or
mull
int3
repz
shr
lods
push
insl
stos
or
pop
cs
cmp
outsb
sub
rorb
mov
mov
pop
mov
add
dec
leave
movsb
sti
push
adc
inc
mov
and
fwait
gs
xchg
shlb
out
add
lods
mov
icebp
aad
lahf
loope
rorl
repz
or
repnz
dec
push
lahf
xor
mov
xor
inc
mov
fnsave
xor
subl
insb
and
loop
dec
jns
sbb
into
stos
mov
fwait
mov
mulb
ret
ds
jl
rolb
in
insl
mov
scas
jg
hlt
imul
imul
mov
mov
inc
cmp
cmp
pusha
popl
jle
sub
popf
imul
lock
xor
repz
sub
ficomps
je
scas
push
fstl
dec
pop
out
push
jbe
xchg
jnp
mov
cmp
xor
sbb
and
repnz
movsl
mov
inc
ficompl
aam
and
das
cmp
loop
inc
xchg
sbb
lock
iret
or
cld
insb
stc
sub
add
icebp
xchg
cmp
stc
int3
push
pushf
xchg
or
xchg
sub
mov
push
jmp
sub
sbb
testl
and
mov
movsb
in
stc
rclb
out
mov
lahf
xchg
dec
or
mov
pushf
stos
xchg
loopne
jge
nop
xchg
iret
inc
push
jno
pop
add
sub
repz
cld
test
negb
sbb
out
andl
sti
mov
jecxz
xchg
ret
sahf
xchg
int
in
rol
xchg
repz
test
stc
nop
xor
inc
test
pop
add
test
pop
dec
lds
in
sbb
jmp
or
mov
and
fdiv
sti
jl
add
scas
lahf
lods
sbb
out
jmp
dec
test
ja
or
sub
fists
push
shl
mov
je
popl
test
cmpsl
dec
imul
xchg
in
test
dec
adc
inc
and
mov
adc
in
mov
dec
cltd
std
cmp
outsb
imul
inc
pushf
into
aad
les
into
mov
mov
dec
imulb
jg
sub
fcomi
std
jge
das
lods
mov
mov
fstpt
ja
jmp
imul
xchg
clc
cmp
cmp
test
rolb
imull
mov
sahf
mov
pop
xor
or
in
popl
pop
enter
addr16
mov
add
fwait
xchg
shrb
cli
lods
adc
shr
and
inc
pop
xor
aam
fidivrs
ss
add
js
and
xchg
pop
mov
or
pop
test
add
jns
mov
pushf
cmp
push
aas
fbld
outsl
sahf
cmpsb
inc
mov
xchg
sub
xchg
cmp
cmp
movsl
call
jne
jns
xor
or
xchg
adcl
out
aas
adc
dec
xlat
mov
dec
cmpb
mov
xlat
sarl
mov
sub
loop
push
push
mov
das
mov
lock
xchg
aad
mov
pop
sub
xchg
fists
xchg
jge
pusha
sbb
aam
ja
xchg
lods
arpl
cwtl
sbb
mov
ljmp
ret
shrb
adc
test
loop
jmp
sub
pop
mov
push
fcmovnb
mov
in
push
cmp
fnsave
add
into
inc
movsb
mov
adcl
adc
sub
mov
xchg
pop
popf
icebp
xor
in
xor
pop
fdivrs
shrb
cmp
and
lcall
int3
lea
adc
adc
jae
cmp
stos
mov
cmpsb
insb
cmp
lahf
xor
fcomps
ss
das
push
arpl
jbe
out
into
ret
iret
ret
loope
push
jp
push
sub
arpl
jno
ds
dec
ljmp
pop
mov
pop
xor
shl
mov
shl
outsl
int
sub
inc
jp
jmp
dec
pop
in
repz
pop
lcall
popf
mov
push
aaa
pushf
cmp
int3
mov
mov
or
jecxz
push
ja
cmpl
mov
dec
lahf
js
sbb
inc
shlb
push
sbb
or
cli
add
pop
or
out
adc
gs
xchg
jl
repz
dec
cmc
shr
subb
or
test
adc
mov
punpckhbw
ret
inc
lock
wrmsr
stos
ficomps
lea
aam
movsl
andl
out
jp
insl
hlt
xchg
mov
aam
dec
pop
in
sbb
cwtl
stos
xor
pop
aaa
and
xchg
xchg
fs
jle
dec
sahf
cltd
cmp
movsb
repnz
push
loopne
icebp
outsb
stos
push
cmp
xchg
int
and
movsb
repnz
cmp
ret
inc
movsl
stc
call
fadds
insb
ds
hlt
mov
jge
test
fwait
mov
scas
rclb
pop
xchg
xor
movsb
fucomi
mov
inc
jno
push
xchg
xchg
shl
outsb
cmp
jns
adcl
icebp
pop
jle
lcall
adc
or
cmp
stos
mov
add
mov
mov
pop
iret
neg
mov
mov
addl
into
push
add
insl
jns
pusha
negb
test
cmpsb
les
and
insl
xlat
mov
xchg
lret
pop
hlt
pop
jg
les
mov
mov
in
inc
negb
add
out
pop
orb
sub
outsl
mov
mov
add
cmpl
pop
push
outsb
mov
xor
ret
sbb
ret
in
or
add
cltd
mov
cmp
cmc
into
cmc
jge
inc
pop
pop
sbb
insb
sbbb
lods
sbb
cld
fnstenv
cmpsl
lahf
lods
xchg
out
push
imulb
xchg
jge
pushf
xchg
fstpl
dec
mov
scas
xchg
jmp
rolb
push
lods
fsubs
cmp
lret
sbb
rcrl
paddsw
dec
or
mov
sub
lea
jb
aam
xchg
stc
push
sbb
dec
push
insb
ror
mov
test
test
inc
cmp
jno
nop
pop
jbe
dec
test
adc
ljmp
mov
mov
fs
rorl
flds
call
add
in
out
dec
pop
pop
outsl
sub
pusha
jne
mov
or
ljmp
icebp
sub
xchg
mul
xor
ljmp
out
addl
mov
xchg
sbb
mov
sub
xor
dec
fcomps
xchg
cli
aad
popf
data16
cmpsl
mov
cwtl
push
pop
and
add
and
lock
notl
push
mov
sarb
in
es
push
lods
fisubrl
je
or
leave
sbb
dec
imul
lds
adc
inc
push
xlat
scas
lahf
ret
ja
movsb
push
sbb
push
mov
in
mov
cmp
mov
nop
cmpsb
pop
jno
pop
in
add
pop
xchg
dec
cmp
das
xchg
push
push
ds
frstor
outsl
push
sbb
loop
int3
dec
fldt
pop
sahf
adc
cmc
jmp
mov
mov
neg
lea
jno
insb
in
jmp
add
and
jmp
pop
ret
mov
inc
fstp
jno
jle
sbb
les
test
es
das
xor
aam
xchg
testl
test
das
jle
cmpsl
lds
nop
push
mov
movsl
aas
std
and
jmp
outsl
aas
movsl
je
out
js
or
je
hlt
sbb
pop
movb
mov
mov
ficoms
pop
or
sahf
test
dec
jo
repz
and
mov
mov
push
hlt
shll
fcoms
insl
sbb
mov
sub
inc
add
les
fistpl
xchg
mov
arpl
xchg
dec
add
outsl
mov
popa
cli
add
into
lcall
sbb
and
sbb
clc
xor
mov
mov
lds
pop
and
dec
lahf
xchg
js
inc
repz
inc
or
sbb
shll
lods
pusha
test
or
pop
rorl
cltd
pop
jge
push
mov
sbb
ret
push
add
pop
aad
mov
dec
add
inc
iret
in
xchg
mov
rorl
add
dec
push
notb
inc
movl
test
add
xchg
inc
aam
or
mov
dec
inc
call
call
mov
adc
cmp
mov
addr16
mov
adc
sub
mov
aas
call
cmovs
or
out
jp
test
ret
in
dec
mov
and
xor
in
imul
ja
cwtl
jno
mov
sub
pop
or
jns
and
mov
push
ret
mov
shll
iret
mov
pop
inc
xlat
jg
xchg
imul
sbb
es
insl
sbb
out
cmp
mov
filds
stos
or
insl
ds
push
push
mov
sub
jo
jbe
push
dec
leave
inc
jmp
mov
das
cld
in
sub
and
jge
sbb
push
pop
lea
cmp
jno
sub
add
xchg
cmp
and
pop
mov
jbe
add
repz
inc
adc
je
mov
lods
mov
into
xor
inc
inc
jnp
xchg
out
ds
fnsave
xor
pop
or
mov
cwtl
mov
mov
rclb
loope
jecxz
cmp
mov
push
push
cli
xchg
mov
mov
mov
test
das
pop
push
fwait
and
popf
jbe
mov
cld
add
ja
adc
roll
cltd
sbb
mov
and
xchg
movsl
sub
mov
ret
ret
andl
jecxz
ret
push
mov
mov
pop
inc
push
and
mov
out
js
outsl
cmpsb
adc
and
adc
in
cmp
mov
and
cltd
icebp
push
jns
movsb
or
jns
mov
lea
aam
jo
cmp
int
icebp
xlat
cmp
ja
lea
lahf
or
mov
adc
pushf
in
ljmp
mov
loopne
das
mov
ret
adc
shlb
mov
xor
movsb
pop
test
das
or
or
nop
xor
mov
iret
inc
and
sbb
lcall
jnp
hlt
fisttpll
adcl
push
rorb
rcrb
or
xor
add
push
jp
xor
into
in
dec
xchg
ljmp
js
imul
jne
fmul
mov
js
mov
mov
and
lods
insl
out
or
sbb
dec
mov
cmp
sarb
adc
mov
in
push
aas
scas
loopne
daa
pop
roll
mov
pop
mov
push
xchg
into
push
outsl
pop
es
popf
mov
sbb
lock
faddl
popl
push
das
or
adc
std
lret
cli
pop
sub
cmp
jg
into
clc
movsb
mov
add
pop
mov
pop
push
adc
or
lea
xor
inc
adc
outsl
inc
dec
mov
imul
sbb
add
orl
and
and
xchg
sub
les
aas
sub
in
lds
jo
sub
pusha
lods
push
lock
sbb
addr16
and
sbbl
add
mov
inc
fsubrl
das
pop
stos
push
xor
sbb
mov
cmpsb
pop
push
push
out
inc
adc
cld
inc
or
mov
jecxz
push
adc
cmp
aad
mov
ret
or
jmp
mov
mov
loop
aaa
in
or
inc
subl
scas
in
test
pop
data16
jne
loopne
adc
sub
pop
mov
and
cwtl
lods
popf
jbe
out
push
adc
mov
cwtl
stos
pop
stos
push
cmp
xor
sub
addr16
lahf
jae
stos
lods
add
mov
or
mov
je
push
movsb
xor
cmp
les
mov
dec
pusha
push
imul
xchg
pop
ret
inc
pop
mov
jb
popa
repz
sbb
adc
scas
ljmp
xchg
fmul
and
xor
xlat
sub
xchg
in
cmpsb
mov
inc
push
mov
imul
cli
ja
mov
cmc
mov
pop
rcr
inc
mov
jmp
mov
mov
lcall
push
loopne
cltd
shlb
sbb
fwait
int3
ss
les
jp
cmpsl
aam
insl
push
daa
jnp
jl
mov
lds
sahf
popa
add
adc
sub
imull
xchg
add
loopne
or
popa
aam
add
jg
rcll
cmpl
mov
jno
lahf
negl
and
cmp
jae
divb
mov
jle
imul
push
outsb
dec
shlb
xor
pop
in
mov
jl
adc
mov
in
push
push
xchg
test
or
fisttpll
fildll
inc
in
or
jle
mov
test
lea
add
mov
scas
adc
dec
shlb
mov
fs
leave
add
and
mov
xor
mov
push
add
add
add
iret
out
jne
and
movsb
es
negl
nop
add
or
ret
in
add
shrl
cmp
std
gs
cmp
es
push
xor
out
mov
xchg
mov
or
aaa
jmp
push
inc
or
in
pop
pop
xchg
stos
icebp
call
test
xchg
push
test
fsub
or
insb
test
sbb
into
jae
jmp
pop
adcb
and
mov
mov
repz
lcall
add
add
insb
les
adc
popa
or
fwait
adc
insb
jns
loope
and
imul
sarb
gs
fdivl
hlt
cmova
xor
gs
clc
dec
pop
mov
xor
mov
loop
cltd
and
sbb
mov
push
xchg
xchg
stos
imul
mov
jae
xlat
mov
xchg
adc
loopne
repnz
je
jp
lret
inc
push
jge
sub
test
adc
xchg
ja
mov
pop
and
jbe
aaa
sahf
dec
cld
gs
xor
cmp
or
adc
movsb
fisubrl
adc
adc
daa
jle
test
lds
push
fnstcw
dec
cmp
lret
inc
lret
mov
push
jl
mov
and
shl
xchg
fists
xchg
mov
xor
lds
mov
add
sub
lcall
and
les
loopne
inc
ffree
out
outsl
inc
adc
into
cld
lods
inc
mov
inc
mov
fisttpll
shl
sbbb
jp
imul
sbb
sub
int
cmp
xor
lods
cld
and
mov
test
scas
xorl
test
loop
mov
rcrb
mulb
lods
loopne
xchg
scas
mov
mov
icebp
and
aas
mov
and
xchg
outsb
out
jmp
scas
sbb
aas
iret
and
movsb
xchg
pop
insl
and
mov
pushf
mov
pusha
jge
loope
inc
mov
sahf
loopne
mov
lods
adc
inc
cmp
imul
cmpb
mov
sub
popf
les
jecxz
imul
adc
sbb
or
mov
add
dec
sbb
outsl
cmpsb
xor
iret
mov
inc
mov
add
mov
lcall
daa
scas
ds
icebp
push
adc
fisttpl
call
in
mov
clc
sbb
jp
push
popf
test
rorl
jge
push
popf
pop
mov
dec
sub
cmp
inc
sahf
push
fidivl
stos
cltd
ret
iret
jnp
xchg
adc
mov
push
lea
mov
sub
stos
sbb
inc
mov
loope
push
insl
orl
sub
lock
lods
hlt
pop
je
pushf
and
mov
fwait
cmp
xchg
pop
or
sbb
pop
jge
out
sahf
subl
in
test
es
mov
or
fldt
mov
adc
and
add
ficomps
pop
int3
inc
push
outsb
mov
insl
jmp
icebp
int3
xchg
ret
mov
int3
popa
popf
fbstp
mov
jmp
jecxz
inc
test
mov
mov
bound
jl
ds
or
std
and
or
test
test
add
call
mov
add
adc
push
sbb
mov
pop
cmpsl
sarl
loopne
dec
mov
jno
jo
cmp
mov
imulb
cld
out
out
inc
mov
mov
cmpb
jo
arpl
pop
push
or
xchg
loopne
ljmp
scas
and
push
push
push
mov
add
inc
ljmp
shl
cmp
push
cli
add
int
imul
out
scas
mov
roll
iret
cmpsb
loope
pop
push
je
adc
enter
push
incl
jmp
jge
jl
adc
cld
cmp
imull
lret
cmp
cmpsl
dec
sub
pop
or
or
xlat
xchg
cmpsl
cmpsb
and
cli
aaa
es
mov
adc
cmpsb
cmp
notb
jp
inc
pusha
jmp
pushf
andl
adc
fs
cmpsl
sbb
sub
loop
or
and
cmp
sbb
pop
test
xchg
xlat
decl
xchg
ret
rol
aas
inc
leave
inc
iret
jnp
enter
sub
pop
mov
pop
fnstenv
inc
lods
rcrl
mov
ds
int3
jl
mov
jmp
rol
cld
mov
jle
fsubl
test
xlat
in
movsb
add
int3
adc
cmp
in
fstpt
sub
xchg
inc
or
jg
lods
mov
call
stos
inc
pop
dec
test
cwtl
bound
mov
les
movsb
out
xchg
add
mov
jnp
in
cmc
popf
shll
shll
cmpsb
dec
adc
icebp
mov
sub
jmp
pop
dec
adc
les
pop
int
xchg
mov
inc
and
cmp
mov
adc
adc
mov
mov
jg
test
jmp
xchg
andl
and
sub
inc
loope
imul
outsl
clc
std
or
shll
push
sub
loopne
adc
lret
mov
push
sahf
dec
mov
xor
test
aas
push
cmpsb
push
insl
pop
lret
aam
decb
lock
xchg
mov
push
xchg
and
mov
dec
xchg
push
mov
or
arpl
and
pop
fdivs
push
std
push
jnp
push
scas
clc
push
and
cmc
push
or
scas
xchg
xor
mov
in
clc
nop
adc
inc
mov
dec
cmp
ljmp
fsub
call
sub
scas
ljmp
pop
daa
daa
jb
inc
fs
out
mov
sbb
pop
xor
xor
xor
adc
lcall
xchg
aam
out
and
lds
add
inc
jecxz
xlat
mov
or
mov
fidivrl
cmp
lahf
xlat
loope
adc
stc
sarl
lods
mov
mov
cmp
cwtl
divb
jae
jle
jnp
inc
inc
scas
mov
int3
out
cmp
jp
pop
ja
in
dec
dec
scas
lret
popf
cmpsl
cs
jae
nop
cmc
cs
mov
jge
ja
add
mov
cmp
jbe
aaa
enter
dec
out
sub
xor
cmpsb
dec
lea
filds
mov
mov
pop
fwait
clc
mov
jl
mov
shrb
jbe
rorb
loope
fsts
mov
shrb
cmp
test
lahf
sub
jno
xchg
es
jno
pop
mov
and
adc
mov
cli
fwait
cmp
testb
iret
and
movsl
int3
sbb
pop
in
or
xor
dec
loop
lock
into
lcall
ja
inc
sbb
test
adc
lcall
aad
sbb
cmp
fwait
pop
pop
sbb
in
scas
adc
mov
loopne
inc
push
mov
fsubrs
insb
fnstsw
or
xchg
arpl
fwait
into
out
mov
fidivrl
mov
lds
cmp
push
add
or
popa
sub
xlat
dec
out
mov
clc
push
loope
cmp
cmp
xchg
mov
ret
aad
ljmp
sbb
and
ja
lds
fwait
inc
xor
fldenv
pop
stc
mov
push
frstor
jns
popf
push
adc
pop
adc
out
fsubrl
fwait
ret
int
adc
and
jge
shlb
popf
mov
adc
aaa
pop
mov
cmp
stc
xchg
mov
mov
insl
jmp
add
mov
insl
sub
xchg
into
mov
cltd
mov
loop
mov
adc
adc
add
cli
or
into
ret
out
jno
cs
xor
and
xchg
dec
in
mov
add
mov
repz
xchg
mov
jmp
add
mov
sub
pop
daa
loope
add
cmp
fwait
rorl
dec
testl
ret
push
pop
call
fs
loope
popfw
in
mov
push
fildl
jmp
fs
movsl
into
lret
jle
out
mov
scas
xchg
std
daa
jge
lahf
xchg
mov
out
and
xchg
scas
cmpsl
dec
pop
push
push
lret
xchg
adc
out
in
mov
pop
inc
mov
mov
mov
out
xor
mov
push
ds
cmp
insl
sub
dec
pusha
or
xor
rcrb
in
ret
cltd
aas
add
lahf
mov
pop
and
sbbl
lahf
cmpsb
and
add
mov
lret
test
mov
xor
jns
leave
cmp
push
add
lret
adc
adc
inc
xor
jnp
icebp
sbb
test
test
xchg
or
popa
hlt
sbb
sbb
in
mov
ja
or
stos
jge
int
inc
hlt
push
ljmp
outsl
mov
out
sub
or
push
cmp
xchg
rcrl
pop
fldcw
adc
repnz
arpl
push
push
sub
shlb
cmp
ljmp
mov
repnz
imul
cmp
sbb
jns
test
or
mov
insl
pop
test
push
mov
out
cmpsl
out
cmp
repz
jmp
push
push
and
xchg
adc
inc
push
mov
lret
or
mov
rcr
mov
xor
jno
pop
push
dec
mov
mov
into
notb
loop
and
int3
and
repnz
jne
adcl
scas
lcall
jecxz
outsb
ficomps
push
enter
outsl
subb
xorl
cwtl
push
add
add
jmp
mov
xorb
shrb
cmc
scas
cmp
ror
add
stos
xorl
and
out
mov
pop
loop
dec
and
fisttpl
mov
cs
lahf
jmp
and
and
cwtl
sar
xchg
push
test
fnstsw
ljmp
mov
shrl
iret
cwtl
xor
scas
pop
inc
inc
push
pushf
bnd
stmxcsr
test
sub
cmp
cmp
fbstp
std
lret
dec
add
jae
xor
aaa
pushf
leave
jbe
pop
jle
push
iret
dec
scas
mov
lret
xor
ret
push
jmp
add
das
ror
dec
push
jge
lods
and
cmpsb
ret
aam
inc
mov
test
stos
das
sbb
pop
jns
arpl
in
mov
icebp
mov
jge
fucomp
mov
dec
adc
test
sub
mov
xor
sub
pop
sahf
in
arpl
jmp
faddl
arpl
push
arpl
cli
adc
lods
hlt
or
push
cmp
xchg
fwait
pop
leave
ja
mov
pop
fwait
repnz
out
mov
pop
xchg
sub
jb
cmp
in
int3
jne
mov
inc
push
gs
lea
add
adc
cmp
adc
stc
call
movsb
push
mov
cmp
add
and
ficompl
xor
cmp
and
fdivp
sub
mov
dec
inc
in
add
xchg
pop
les
pop
repnz
fnsave
dec
scas
pushf
imul
test
test
mov
push
sub
xchg
xlat
cwtl
int
lea
ja
xchg
out
and
cli
adc
loop
push
in
and
jg
jle
push
fstpl
in
arpl
daa
push
xchg
adc
inc
and
mov
iret
std
fbstp
mov
mov
ret
cmc
stos
xor
popf
loope
xor
je
mov
jecxz
xor
fwait
rclb
sbb
invd
inc
sub
jns
mov
add
insl
aam
gs
xchg
dec
jne
push
sbb
fwait
mov
and
leave
rcll
or
and
stos
mov
xor
mov
popf
add
mov
mov
xor
test
popl
cmpsl
mov
stos
pop
fists
or
mov
push
ja
xor
dec
cmp
cmp
pop
outsl
andl
repnz
or
push
popa
xchg
dec
sub
and
iret
xor
inc
or
cmc
aad
es
iret
fldl
aam
jmp
and
push
shrb
out
or
and
ror
dec
arpl
cmp
or
lahf
pop
lret
xor
push
addl
mov
sti
jae,pn
popf
iret
jo
rcl
popf
xchg
sahf
jle
imul
out
mov
inc
cs
fdivl
inc
and
sub
jg
int3
jnp
orb
ss
test
sub
addr16
xor
adc
ss
stc
insb
push
cmp
jns
pop
movsb
pop
push
adc
repnz
pop
jns
pop
nop
cmc
add
sub
mov
xor
xor
fisttpll
mov
mov
or
fcomip
int
adc
roll
rcrl
push
fildll
pusha
add
inc
pop
scas
into
cmp
inc
dec
stos
pop
ljmp
push
xchg
sahf
push
cmpl
into
jge
shll
jns
sbb
in
jg
imul
or
adc
push
fdivs
and
ds
in
mov
fs
sahf
dec
cmpsl
ret
cltd
cwtl
and
leave
popf
int3
testl
jns
or
push
mov
adc
lods
dec
ss
fldl
mov
jg
aam
push
xor
fs
sbb
or
not
es
je
pop
popl
xor
mov
and
cmp
pop
mov
and
cmp
popl
inc
arpl
in
sahf
inc
insb
scas
cmpsb
and
lcall
jmp
sbb
and
iret
cmp
push
int3
scas
imul
jp
adc
aam
ds
lret
clc
scas
enter
mov
fsubl
inc
ret
adc
fisubrl
js
test
mov
inc
push
.byte
jl
