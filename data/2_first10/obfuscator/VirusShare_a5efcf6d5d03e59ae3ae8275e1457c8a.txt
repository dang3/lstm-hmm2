int3
add
add
inc
ds
es
sbb
xor
mov
add
add
add
push
xchg
pop
aaa
dec
sub
mov
add
add
jne
call
mov
add
cmp
and
push
xor
incl
jp
bound
add
incl
add
mov
cmp
pop
call
xor
add
imul
das
int3
int3
add
add
add
add
test
sbb
inc
pop
add
xor
insb
add
add
nop
dec
and
adc
jl
jae
add
add
outsb
jne
cmp
inc
jno
xor
add
pop
sbb
push
int3
nop
ja
inc
incl
add
jne
adc
pop
adc
orb
decl
inc
inc
adc
xor
pop
pop
pop
pop
orb
add
adc
add
or
sub
dec
sbb
adc
add
jmp
repz
stc
es
scas
in
iret
mov
in
ljmp
xor
cmp
cmpsb
mov
add
cwtl
jge
xor
outsl
leave
fdivp
dec
aas
push
lret
or
das
xlat
sbb
inc
adc
push
mov
xor
shlb
sbb
int
repnz
test
in
loope
int
pop
lock
stos
mov
sbb
xchg
add
fimull
pop
cmp
sub
mov
push
shrb
imul
or
dec
sub
xor
push
or
scas
pusha
cmp
ds
adc
and
jb
cmp
cmpsl
or
and
and
lods
push
mov
pusha
cmc
or
ds
sbb
leave
clc
outsb
or
and
xchg
cmc
leave
imul
jmp
repz
fsubrl
enter
outsb
in
ret
iret
jnp
in
decl
mov
in
jmp
jno
mov
mov
inc
ret
jnp,pn
test
lea
es
aad
mov
xchg
fistpl
stc
mov
ret
sbb
ja
or
xor
daa
bound
pushf
std
jne
jmp
and
leave
lret
insl
push
add
sub
sub
cmp
mov
xchg
pop
fwait
loope
inc
leave
insl
push
jno
leave
or
mov
dec
je
cmp
rcll
lods
pop
pop
add
inc
inc
or
rcrb
push
mov
outsl
je
mov
mov
pop
and
lods
sbb
jb
lods
mov
cmc
clc
pushf
enter
push
or
jae
pop
mov
into
mov
arpl
dec
loop
daa
sub
mov
sbb
pushf
push
mov
cmp
sbb
jns
movsb
mov
sub
lret
cmp
push
xor
sub
lods
flds
mov
scas
fyl2x
out
in
fmulp
inc
mov
jp
xchg
testb
pop
or
lods
stc
cwtl
daa
movsb
and
pusha
popf
nop
insl
faddp
push
mov
inc
jne
adc
xchg
fimull
std
dec
dec
in
sbb
imul
rcll
popf
int
mov
test
jg
adc
adcb
ja
dec
cmp
outsl
sub
insl
xlat
mov
xchg
mov
repnz
icebp
inc
sbb
sub
pop
pop
xchg
add
ret
or
rcl
xchg
pop
repnz
sbb
fsubrl
jns
cs
movsl
ret
mov
mov
loopne
xchg
or
shl
in
pop
xor
dec
jge
stos
push
inc
shrl
lret
mov
sub
lret
sub
imul
in
mov
popa
push
xchg
cmpsb
in
stc
mov
adc
xor
movsb
dec
imul
test
mov
push
xchg
cmp
aad
pop
xchg
or
sbb
and
dec
adc
mov
gs
mov
xor
sbb
lds
push
jbe
mov
push
fldcw
or
gs
push
xor
cmp
push
push
loope
pop
push
insl
pop
dec
push
leave
ljmp
icebp
inc
mov
push
pop
dec
lea
daa
in
add
xchg
dec
jmp
push
push
cs
push
mov
jns
dec
lea
push
das
xor
or
mov
push
xor
pop
pop
cltd
rcl
inc
mov
mov
lcall
pop
and
out
les
xor
es
jmp
sub
shr
dec
xchg
cltd
push
mov
frstor
or
sbb
and
scas
or
push
dec
mulb
inc
outsl
push
push
dec
out
adc
aaa
shll
fmuls
add
xchg
cmpsb
cmpsl
and
push
adc
adc
fsubr
push
pop
call
mov
sub
add
je
cmpsb
inc
repz
lds
loopne
outsl
xchg
dec
mov
leave
call
pop
cmpsl
pop
push
xchg
jg
jno
mov
fadds
xor
mov
stos
add
lahf
lock
mov
mov
into
in
push
sbb
fisubrs
movsl
lods
jp
add
push
cmp
adc
sbb
movsb
imull
ja
jbe
mov
dec
lods
in
outsb
insl
pop
out
call
stc
push
outsl
test
and
xchg
add
imul
mov
add
or
pop
adc
loopne
pop
aad
pop
sub
fisubrs
cmc
movsl
repz
stc
cmp
and
and
lock
xor
jmp
es
lret
ret
outsl
call
jge
mov
push
cmp
xlat
mov
das
push
xor
stc
test
jo
fwait
cmc
jns
push
sbb
inc
or
jmp
lahf
xchg
add
jns
mov
sahf
mov
add
xchg
jge
cmp
into
enter
imul
jno
jo
mov
xchg
inc
stc
jnp
test
bound
aas
mov
dec
cmpsb
test
je
outsl
xchg
jo
decl
int3
xchg
shll
fildl
int
ja
ficompl
mov
push
dec
add
and
loop
pop
jae
fpatan
stc
push
popf
outsb
cwtl
lret
fisubl
ljmp
mov
adc
cmp
out
dec
dec
les
dec
in
insb
enter
adc
enter
mov
cmp
sti
or
outsb
cmp
adc
dec
fldt
cltd
push
pop
cmpsl
push
test
add
and
aam
lcall
subb
jae
or
lods
sub
xor
push
popf
cltd
ljmp
aaa
std
mov
mov
out
loope
pop
xchg
xor
add
cmp
mov
test
pop
mov
mov
mov
sbb
daa
cwtl
in
lcall
addr16
lds
and
nop
push
sub
repnz
inc
pop
daa
stc
in
jns
dec
std
loopne
jno
jecxz
shl
xor
xchg
mulps
enter
ja
insb
xor
mov
push
push
cmp
adc
mov
jge
fcoms
adc
xor
orps
push
shlb
je
xor
push
push
mov
ds
inc
js
cwtl
aad
sub
inc
mov
test
cmc
cmp
lods
cmp
cld
fisttpl
andl
idivl
inc
leave
push
fs
jle
cmp
mov
movsl
orl
mov
leave
pop
xlat
fistps
push
mov
inc
xchg
jne
adc
es
and
cwtl
fldl
ljmp
aam
in
sbb
aaa
or
dec
xchg
daa
adc
out
jmp
iret
cwtl
mov
cmp
rcrb
shll
dec
negl
xchg
add
dec
jle
aad
or
in
decl
mov
sti
jno
sub
mov
divb
insl
sbb
push
mov
pushf
inc
lods
push
ds
jmp
aas
shll
adc
lds
sbb
push
mov
pop
adc
mov
test
stos
dec
or
pop
les
xchg
fwait
rcll
push
stos
mov
mov
fdivs
call
push
nop
inc
jle
sbb
dec
shrl
cld
cmpsb
mov
xor
xchg
enter
in
adc
dec
ljmp
inc
lea
cmpsb
loope,pt
aas
push
xor
rorl
mov
filds
sti
fwait
push
adc
flds
jb
pop
lock
push
into
call
std
scas
cwtl
loopne
scas
arpl
pop
pop
or
insl
jecxz
jl
es
inc
ret
lcall
test
std
add
and
clc
dec
iret
stc
push
fstl
push
dec
fmuls
push
push
xor
add
mov
and
adc
jns
lods
fadd
jb
ret
repz
rcll
cmp
push
add
adc
pusha
lret
dec
pop
adc
fwait
mov
fcoml
lret
inc
mov
dec
jne
cmp
mov
jo
pop
jns
jns
setg
jo
dec
das
stos
out
sbbb
cmpsb
imul
push
xlat
adc
inc
inc
out
mov
pop
in
push
mov
sbbb
jg
dec
pop
add
push
in
pusha
testl
fwait
cwtl
adc
mov
jo
int3
shlb
jmp
enter
xor
jmp
clc
fwait
lret
push
mov
fadd
rclb
enter
inc
in
inc
mov
rorb
repnz
call
cmp
jp
outsb
cmpl
ret
jecxz
stos
out
andb
push
xor
ljmp
push
mov
push
xor
jp
push
inc
out
iret
jecxz
sub
insb
mov
icebp
lea
inc
adc
inc
aam
dec
dec
inc
stc
aam
xchg
mov
or
arpl
ret
or
mov
test
pop
jae
stos
insl
xchg
lods
push
out
push
mov
popa
aaa
imul
pop
mov
fs
pop
jnp
dec
mov
push
xchg
pop
inc
dec
mov
lds
xlat
movsl
sub
cmp
add
jns
pop
xor
adc
fnstsw
mov
leave
jp
add
andl
xlat
hlt
sbb
aam
in
jmp
add
scas
movsb
loop
xchg
inc
sbb
add
ror
xor
popf
jne
or
repz
mov
daa
or
or
push
xor
jne
pop
jae
sbb
dec
xlat
dec
int3
sub
add
adcl
cmp
mov
pop
add
adc
adc
jo
push
in
aam
mov
mov
and
or
mov
inc
mov
jb
mov
out
mov
sbb
add
mov
cwtl
outsb
repnz
fcompl
test
je
mov
js
lds
pop
mov
shll
inc
outsl
jno
lret
inc
stos
jmp
add
jbe
pop
lods
ret
es
out
mov
adc
mov
push
mov
jns
fwait
mov
pop
mov
outsl
sbb
aad
cmp
mov
jge
pop
and
out
sbb
loop
inc
push
sti
inc
sbb
xor
adc
mov
or
jl
stos
out
pop
ljmp
in
lds
shrb
jo
imul
inc
lods
and
aad
cmp
iret
add
dec
cwtl
push
lods
or
xchg
mov
push
ret
test
jne
pushf
stc
out
and
lret
mov
pop
cmp
test
sar
jbe
jb
and
push
push
out
int
scas
fists
cmp
mov
xlat
cltd
xchg
pop
push
dec
mov
mov
pop
fidivl
mov
insb
mov
mov
mov
and
and
xchg
mov
push
in
mov
pop
jae
dec
mov
arpl
sarl
jle
lret
loope
jle
cltd
in
xlat
cmpsb
inc
inc
vpaddd
cmp
mov
jnp
add
mov
ljmp
inc
push
cmp
mov
mov
inc
push
push
int3
loop
shrb
jno
lcall
loopne
ret
xchg
xor
xchg
lods
imul
rcll
lcall
inc
adc
cmp
outsb
pop
xor
imull
adc
dec
sbb
cmpsl
cli
jb
fmuls
mov
mov
lock
dec
push
bound
push
inc
push
mov
idivb
pushf
call
mov
notl
pop
mov
sub
or
inc
data16
aad
xchg
pop
filds
inc
mov
leave
xchg
repz
or
lods
and
pop
cmc
negb
mov
ss
xor
mov
mov
sub
pop
cmc
mov
sbb
in
cmpl
and
mov
in
aaa
out
pop
sbb
sbbl
cs
jmp
test
xchg
xchg
cmpsb
pop
shl
xchg
push
add
jg
or
jg
push
xor
cld
in
pop
add
pop
and
icebp
int3
jmp
sub
sbb
sub
inc
cmp
loop
ja
jmp
mov
mov
and
or
roll
popa
jp
in
or
int
call
imul
fiadds
pop
xor
mov
fwait
add
xchg
iret
pop
xor
jmp
cmp
sub
jne
push
push
ret
divl
inc
push
in
in
dec
loop
ss
mov
mov
cmpsb
movsb
imull
dec
je
lock
xchg
les
jb
or
call
out
pushf
cmc
xlat
mov
shlb
jb
nop
jge
sub
cmp
inc
testb
lea
js
incl
cld
jecxz
cwtl
sub
jno
sarl
gs
and
mov
ss
xorl
xchg
mov
push
sbb
and
test
xchg
gs
push
negb
pop
imul
jle
imul
xchg
mov
ret
clc
stos
dec
and
xor
testb
and
push
mov
jb
or
int
int3
mov
cmpsl
add
data16
inc
addb
ljmp
in
jbe
shlb
adc
mov
jbe
mov
pushf
jns,pt
pop
sbb
mov
xchg
fisubl
mov
insl
jg
stos
fmulp
and
insb
stos
push
int3
cmp
fidivrs
sub
jg
xchg
orl
jmp
stos
pop
cmp
clc
pop
mov
jge
test
dec
jb
call
test
dec
dec
inc
push
aaa
into
stc
xor
clc
jp
jbe
dec
xchg
roll
pop
mov
loop
jp
aam
push
xor
add
andb
out
or
xor
push
bound
cs
and
xor
mov
or
add
repz
stos
fisttpl
mov
or
rorb
jns
cmp
in
fcoml
xchg
mov
xor
scas
xchg
imul
jge
cltd
push
push
mov
test
negl
loope
mov
fisttps
and
popf
rorb
push
js
pop
sbb
cmc
test
data16
inc
repz
inc
fwait
lods
push
mov
rolb
notl
das
jge
imul
and
push
jo
movsl
fidivl
or
xor
lcall
fsubrl
js
test
lods
fs
jae
xor
call
fsubl
ret
enter
push
cmp
stc
enter
sbb
adc
sub
mov
xchg
sarb
test
sbb
rorl
sub
xchg
or
es
outsl
xchg
cmp
pushf
fcmovne
lea
dec
ds
xor
hlt
sarb
insl
aaa
cmp
test
aam
mov
cmc
xchg
and
movsb
jecxz
std
pushf
ljmp
xor
and
fs
ret
adc
add
adc
mov
addl
je
push
xchg
dec
xchg
push
test
je
mov
ja
jne
test
push
mov
cmp
pusha
mull
mov
xor
arpl
fmulp
fcom
sub
cmc
clc
ss
ret
cmc
insl
sub
add
fbld
test
jbe
xor
shlb
push
mov
jb
mov
pushf
inc
loop
jge
filds
add
cmc
add
push
inc
jo
xchg
std
shll
test
mov
pushf
lods
aam
movsl
push
inc
cmc
decl
aam
push
dec
imulb
leave
sarl
mov
xor
addb
movsl
test
popa
sbb
and
fnstcw
bound
mov
mov
mov
and
mov
xchg
mov
sub
mov
out
push
mov
movsl
mov
push
lds
xchg
aam
shrb
sbb
shlb
inc
lret
mov
pop
jg
pusha
fbld
clc
stc
mov
int3
cwtl
pop
cmpsl
cmpsb
rcrb
sbb
dec
dec
icebp
add
mov
inc
addl
lock
fcomip
js
test
and
popa
test
push
fst
mov
outsb
or
out
mov
adcb
movsb
inc
stc
lret
aad
xchg
popl
faddl
jno
adc
in
cli
and
scas
push
cltd
pop
je
pop
ja
rcrb
ret
cs
jge
sbb
daa
cltd
dec
push
adc
pop
repz
adc
mov
xchg
loopne
mov
loopne
jle
ss
pop
out
out
lea
mov
aad
negb
inc
sarl
scas
jno
sub
js
add
dec
in
sbb
gs
sub
add
sbbb
or
sub
push
into
test
push
jno
arpl
jl
js
cld
cmp
jo
mov
sbb
ss
stos
xchg
sub
data16
ljmp
sub
lods
repz
sarl
push
jl
aas
xchg
arpl
xchg
aaa
push
dec
dec
int
jbe
inc
or
shl
ljmp
dec
jge
mov
adc
mov
jne
orl
aaa
sahf
mov
mov
daa
sbb
add
adc
push
lea
lock
pop
nop
mov
arpl
pop
insl
fwait
bound
sbb
inc
adc
lret
dec
cld
mov
dec
popa
mov
xor
xor
out
pop
mov
push
or
push
sbb
ljmp
dec
xor
scas
ss
pop
les
add
js
xor
ds
cmpsl
jae
adc
test
pop
mov
arpl
pushf
push
sbb
fimull
mov
hlt
push
adc
pop
push
insb
mov
cwtl
insl
and
cli
fcomps
jmp
lahf
xor
jle
popf
pop
cltd
into
sub
jbe
add
mov
push
xchg
mov
mov
mov
dec
add
lahf
sbbl
xor
aaa
xlat
sub
jb
leave
call
mov
psllq
lahf
lret
xor
std
imul
repz
cmpsb
xor
and
flds
popf
xor
lods
adc
test
push
ss
inc
xchg
push
inc
and
jns
les
test
cltd
inc
loopne
push
icebp
xor
xchg
mov
into
sub
rorl
scas
mov
pushl
cmp
stos
dec
data16
jp
xchg
and
or
push
jmp
iret
rcrl
aam
push
xor
roll
mov
into
or
mov
xchg
sbb
aam
mov
jmp
out
or
pushf
cld
dec
loope
mov
js
cmpsb
aaa
cmp
cwtl
cmp
sbb
aad
or
add
insl
mov
je
arpl
shrl
lds
addl
jnp
xchg
aas
sub
fcmovne
filds
cld
inc
mov
aaa
aad
pop
pop
mov
mov
adc
imul
jno
das
test
xchg
scas
mov
arpl
push
cld
xchg
lcall
repz
pop
sub
addb
or
jge
pop
inc
pushf
arpl
mul
in
popf
mov
jmp
xchg
repnz
aaa
clc
dec
mov
rclb
in
jns
cltd
lret
subb
jno
jecxz
arpl
mov
xchg
xorl
sbb
sub
in
cwtl
mov
loope
imul
or
bound
mov
mov
mov
push
mov
jns
xor
mov
out
shr
and
call
jne
mov
addl
mov
shll
imul
mov
stc
outsb
ret
push
out
loope
or
cmp
int3
dec
or
mov
push
fidivs
pop
xor
mov
sub
dec
xchg
dec
jg
negl
mov
adc
inc
inc
fxch
xchg
dec
jns
je
adc
add
popf
movsb
mov
int
mov
dec
sbb
aam
jecxz
js
shll
xor
pop
mov
mov
in
dec
add
add
pop
jnp
bound
ds
pop
cmpsb
xchg
popa
adc
in
int
popa
popa
or
pusha
and
xorl
dec
outsb
lret
popa
int3
in
je
dec
xor
pop
add
add
out
ret
ret
cmp
cmp
mov
sbbb
dec
xchg
mov
fs
outsl
cli
shr
stos
jl
jb
or
lret
add
jecxz
xor
adc
fwait
push
outsl
loopne
idivl
je
das
clc
push
jg
adc
in
mov
sahf
inc
pushf
addl
aas
roll
push
cli
push
int3
std
pusha
ret
rorl
into
mov
sub
or
es
movsb
sub
mov
repz
cmpsl
insb
add
cli
xor
xchg
bound
stc
cwtl
lcall
cmc
je
adc
xor
inc
mov
rorb
sbb
push
jmp
popa
inc
sub
or
test
mov
in
add
ret
mov
movsb
or
push
dec
je
mov
add
jb
push
out
xlat
pop
push
jae
outsb
mov
mov
into
or
xchg
sub
push
dec
repz
push
sti
sti
jno
scas
sbb
aam
mov
in
mov
insb
jl
arpl
mov
pop
test
insl
xor
xchg
fidivrs
ficoml
push
mov
in
psubq
mov
rol
outsb
adc
insl
aaa
add
add
pop
mov
sbb
lea
lock
sub
popa
push
das
cs
push
push
cld
jne
dec
rcrb
mov
dec
mov
jmp
cs
pop
add
ss
cwtl
mov
pop
sub
arpl
hlt
jecxz
cmp
pop
mov
pop
jne
or
cmc
or
lret
insl
mov
dec
mov
push
jmp
pop
mov
icebp
add
es
xlat
rcrb
mov
js
shl
pop
adc
cltd
hlt
xchg
insl
or
inc
xchg
adc
stos
iret
sub
insb
js
hlt
lret
in
enter
jnp
sti
inc
mov
daa
mov
popf
cmp
sbb
xchg
outsb
jecxz
shl
mov
pop
sbb
sbb
mov
xchg
sti
in
sub
jecxz
andl
add
adc
jmp
xchg
mov
mov
or
cld
pop
lods
add
mov
sbb
lret
divb
and
pop
mov
pop
pop
dec
test
mov
movsl
push
and
lahf
and
cmc
in
in
xchg
mov
inc
out
adc
stc
mov
xchg
adcb
push
xchg
jbe
insl
cmp
call
outsl
imulb
sbb
rolb
push
arpl
mov
inc
sarl
js,pt
mov
repz
movsl
insb
xor
xor
add
popf
mov
clc
xchg
and
xchg
fwait
out
or
and
std
cmp
les
xchg
pop
sbb
xchg
insb
dec
cltd
jne
dec
fwait
dec
adc
push
hlt
dec
mov
fisubrl
rcrl
xchg
xorb
lret
jp
clc
add
cmpsl
cmp
mov
cltd
and
xchg
addr16
repnz
int3
nop
jmp
dec
xchg
je
test
dec
mov
fdivr
std
pusha
push
loope
and
jno
hlt
xor
jl
cmc
insl
mov
jno
lret
inc
dec
cld
sub
out
push
cmp
xchg
testb
cli
add
and
leave
mov
inc
ds
mov
aad
mulb
xlat
cli
cmp
mov
call
js
in
pop
divl
cmpsb
and
cmpsb
xchg
dec
xchg
pop
addr16
lods
inc
add
sbb
fnstcw
int
xor
or
mov
call
shlb
mov
and
adc
test
mov
sbb
out
cs
xor
repnz
lock
fs
inc
sub
aad
adc
lock
jmp
pop
pcmpeqw
out
lds
bound
lcall
pop
cmpsl
mov
cltd
je
enter
xchg
push
adc
jl
addr16
cld
or
popf
repnz
lret
xor
mov
add
pop
js
adc
dec
add
loope
popl
fs
mov
sbb
imul
xchg
xlat
cwtl
add
lret
lea
add
ret
and
int
es
mov
jb,pt
fwait
lret
jae
shl
add
test
les
dec
add
mov
dec
clc
insb
sti
icebp
mov
sti
cmc
addb
aaa
mov
or
out
mov
push
adc
mov
movsl
cmpsb
ret
mov
mov
and
fwait
cwtl
sahf
mov
pop
loope
sbb
fisttps
adc
xchg
movsb
xchg
adc
and
addb
hlt
mov
rorl
movsb
scas
lock
jo
iret
sbb
inc
mov
mov
and
decb
scas
das
testl
clc
cmp
sbb
mov
in
repz
sub
popa
ds
inc
arpl
je
shrl
cwtl
mov
mov
popa
pop
daa
xor
mov
mov
mov
je
cmc
and
pop
imul
sti
popf
dec
sub
inc
cwtl
fstl
shll
stos
data16
jl
sbb
out
or
xor
jns
xchg
fwait
insl
pop
loop
pop
mov
xchg
mov
adc
shll
popa
loope
int3
jns
nop
sbb
leave
inc
inc
sbb
std
cltd
mov
pop
mov
pop
jo
mov
xor
xor
les
loop
jge
popa
aam
add
loop,pt
fidivrl
movsb
jmp
mov
outsb
movsl
add
leave
or
add
inc
xchg
outsl
mov
mov
sbb
mov
test
mov
test
dec
sub
dec
das
push
out
lahf
mov
movsl
jle
aam
mov
or
lret
or
jne
je
xor
mov
iret
xchg
mov
push
jp
dec
add
int3
jecxz
cltd
jge
push
mov
pop
mov
ja
inc
fnstsw
sbb
inc
push
dec
into
mov
andl
fnstenv
cmp
adc
jle
sub
xlat
inc
pop
pop
dec
add
mov
push
xchg
cld
loopne
mov
stos
sbb
ja
push
lods
sbb
sbb
js
ficompl
push
inc
mov
mov
in
iret
orl
mov
or
call
shll
mov
bound
mov
xchg
mov
leave
adc
inc
notl
mov
push
jae
mov
ficoml
jmp
jl
sub
sbb
mov
loop
or
cmp
lock
sub
and
cmpsb
dec
cmc
in
div
pop
or
jnp
leave
mov
sub
cli
push
mov
gs
in
inc
sbb
clc
icebp
je
lcall
fcoms
mov
inc
lahf
and
and
sbb
push
xor
lret
add
lds
out
or
push
adc
out
in
dec
jns
xchg
or
or
cwtl
mov
test
lret
sub
cmpsb
sbb
out
test
int3
lret
inc
mov
test
xor
fadds
roll
jle
push
lds
cmp
jg
dec
mov
mov
adc
gs
jge
nop
repnz
cmp
loope
pop
xchg
pop
or
xchg
lock
test
out
jle
sbb
sub
into
fwait
mov
loopne
sub
ret
stos
popa
rorl
mov
mov
cld
das
clc
add
in
jg
push
scas
lods
push
pop
mov
pop
sarl
cs
mov
push
data16
sbb
lea
negb
lods
cmp
imul
inc
sbb
mov
in
js
adc
pop
fdivrs
sbb
movsl
dec
xchg
adcl
sub
out
ss
push
pop
mov
xor
mov
nop
mulb
lock
stos
lock
mov
mov
mov
mov
sub
enter
xchg
jl
cmp
or
pop
mov
shrd
push
cmc
jae
jp
repnz
in
out
cmp
insb
mov
adc
adc
ret
movb
rcr
push
inc
mov
lds
lea
cmp
mov
and
adc
iret
nop
pop
fistpll
and
and
repz
cld
icebp
int3
sub
test
and
add
clc
add
xchg
sub
call
cli
dec
xchg
movsb
and
xor
cmc
ret
inc
pop
aaa
jb
mov
repnz
out
sub
repz
mov
adc
sbb
sub
lods
insl
inc
or
add
jmp
and
arpl
mov
int3
psubusb
call
dec
lahf
test
stos
lods
mov
xor
and
mov
mov
int3
sub
fsts
out
and
shlb
mov
push
mov
adc
and
xchg
cltd
xchg
mov
nop
add
int3
icebp
add
out
lret
pop
and
fildll
lret
xor
jecxz
subb
iret
sbb
ret
loop
fs
sub
xchg
negl
jnp
jle
pop
fwait
add
inc
scas
fisubrl
jo
je
push
enter
or
jne
and
addl
xchg
daa
mov
adc
jle
js
mov
jns
and
jmp
fsubs
jnp
gs
sub
scas
loopne
jl
push
arpl
fs
loope
cmp
adc
jnp
mov
gs
popf
xor
popf
aam
dec
int3
adc
sub
insl
lea
ss
mov
jo
pop
add
mov
jne
dec
cli
aam
dec
inc
aaa
test
and
sbb
test
xchg
or
lahf
mov
and
or
and
data16
sti
imul
ret
mov
fcoms
cmp
cltd
and
add
xorps
mov
push
lcall
jb
add
into
lock
xor
sti
outsb
dec
insb
and
mov
shrl
pop
popa
mov
cmc
dec
dec
or
ja
inc
inc
sub
mov
lods
lds
int
sub
push
outsb
outsl
xor
aaa
and
xlat
jle
ljmp
int
mov
adc
jge
mov
das
cltd
lds
adc
adc
xchg
roll
out
js
imul
jne
push
sbb
pusha
hlt
inc
pop
jge
xchg
insl
stos
lldt
cmpsb
xor
pop
mov
sbb
dec
sbb
mov
mov
inc
imul
mov
inc
jl
int3
push
jle
jle
imul
pop
adc
xlat
insb
push
sbb
mov
pop
sub
mov
imul
xchg
cmp
imul
dec
or
xchg
push
xor
clc
ret
cld
pop
xchg
push
inc
cmp
out
into
inc
sti
mov
fs
ljmp
cmp
jae
pop
cmp
sarl
movsl
out
flds
test
fildl
flds
subl
jae
jecxz
jne
xchg
jle
sti
inc
and
lock
out
loope
push
xor
mov
hlt
cmp
push
ljmp
addb
dec
mov
movsl
jbe
xchg
mov
out
adc
loope
aaa
imul
notl
xor
stos
xchg
inc
sahf
push
cld
rolb
mov
mov
negb
xchg
push
jmp
mov
je
lret
cmpsl
xchg
inc
lea
call
push
add
jo
jl
jecxz
mov
cmp
inc
push
mov
iret
xchg
xor
out
lcall
leave
cld
dec
jnp
jg
out
fdiv
jmp
sbbb
mul
mov
fbld
and
sbb
loop
sbb
popa
adc
or
xor
cli
shll
mov
jp
xchg
andb
roll
imul
fsubs
xor
sub
xor
xor
mov
cmp
inc
sbb
and
push
adc
ja
xor
sbb
loopne
mov
rcll
adcl
aas
adc
add
arpl
jp
jno
je
adc
sbb
lcall
jae
sbbb
jbe
xor
adc
adc
push
push
pop
pop
in
ror
test
sbb
xor
xchg
lods
pop
or
push
and
popf
scas
mov
or
mov
or
lods
pop
mov
imul
inc
loop
sahf
lods
test
jb
fnsave
lock
stc
mov
xchg
mov
repnz
inc
xchg
inc
mov
in
jp
in
sub
cmc
out
xchg
frstor
mov
test
push
daa
inc
rol
js
aas
adc
jo
shlb
jmp
movb
adc
push
cmp
inc
cmp
xor
clc
iret
movsl
mov
insb
add
lods
xor
sub
pop
mov
cmp
out
mov
nop
inc
pop
leave
cmp
loopne
lea
and
push
or
push
mov
loope
jg
loope
imul
stos
jl
in
pop
imul
inc
sbb
mov
test
in
loopne
dec
gs
sbb
dec
lret
clc
dec
mov
out
imul
cwtl
das
hlt
mov
mov
adcb
cwtl
icebp
sti
lcall
push
out
jne
in
ret
jle
sub
dec
xorl
fstp
repnz
cmp
pop
mov
mov
out
andb
movsb
or
xor
xor
shrl
das
sub
mov
clc
iret
pop
in
sbb
adc
sbb
and
rolb
outsl
fnsave
out
and
jne
mov
aad
xor
or
cmp
out
in
cmp
out
jnp
and
jecxz
cwtl
xchg
ljmp
repz
add
xchg
add
cmp
or
adc
push
lcall
mov
push
jmp
stc
sbb
add
mov
sbb
repnz
jno
mov
sbb
xor
sahf
popf
mov
adc
lods
lods
cmp
test
rcr
sub
adc
wbinvd
xchg
xor
movsb
lods
out
fsubl
xor
fisttpl
aad
xor
xchg
adc
icebp
out
out
pop
mov
mov
lods
push
lret
mov
and
adc
mov
or
sub
outsb
and
dec
mov
vlddqu
test
sbb
rcrb
fldt
and
xlat
pop
xchg
inc
fistpl
sbb
lahf
mov
fstl
xchg
scas
aam
addr16
div
rclb
xchg
push
test
fidivs
dec
fsubrl
sbb
add
mov
mov
mov
adc
inc
jecxz
jns
enter
add
push
mov
or
scas
clc
push
mov
mov
rorl
in
sbb
inc
bound
fistpl
pop
mov
cmc
xor
int
jb
cmp
aaa
inc
push
idivb
inc
mov
push
xchg
outsb
addr16
sbb
xchg
outsb
hlt
shrl
cmc
pop
xor
lea
jno
cld
mov
nop
lds
jge
jmp
and
push
pushf
cmpsb
inc
adc
testl
mov
lock
mov
mov
xor
pop
popa
sub
inc
in
lods
fisttpll
rcr
mov
dec
pop
and
aas
sbb
xchg
pop
popf
into
jbe
mov
sbb
pop
clc
mov
lcall
icebp
push
addl
enterw
inc
xor
xchg
imul
cmp
std
mov
orb
mov
shlb
xchg
sbb
ja
stos
xchg
xchg
jmp
mov
push
scas
push
jo
and
mov
mov
cmc
pop
mov
dec
aam
dec
lods
stos
into
rcrl
fwait
rorl
mov
cmp
xor
mov
subl
xchg
xchg
mov
xchg
mov
ljmp
in
arpl
xlat
and
push
push
cmc
sub
test
incb
in
or
adc
pop
arpl
mov
cmpsl
sbb
xlat
fwait
cmp
jo
int
bound
xor
test
cli
aam
mov
or
jno
imul
clc
dec
out
fidivrl
xorl
test
add
mov
xchg
mov
pop
fisttpl
sub
and
cmp
sub
mov
xlat
or
push
inc
lods
sar
scas
in
push
dec
out
pop
pop
idivl
movsb
xchg
push
pop
test
xchg
fsts
into
xchg
dec
imul
enter
and
shl
repnz
sub
movb
sub
rcll
imul
daa
pop
mov
adc
lcall
aaa
testl
pop
mov
dec
insb
pop
lds
mov
inc
das
cltd
xchg
fsts
inc
lock
or
dec
addr16
adc
push
loopne
cmpsb
jne
pop
mov
loope
or
xor
jg
mul
jge
cltd
scas
sub
mov
daa
hlt
mov
xor
xchg
popf
pop
mov
in
sbbl
enter
dec
mov
leave
xchg
mov
aaa
mov
ret
arpl
das
out
aas
pop
xchg
sub
cmp
lods
into
in
mov
inc
daa
loop
mov
push
mov
aam
xchg
loope
scas
int
and
pop
mov
xor
mov
scas
lods
test
outsb
pop
mov
les
add
inc
daa
jnp
and
jae
inc
adc
dec
dec
cmp
sarl
dec
add
loopne
nop
jmp
sub
inc
imul
cmpsb
hlt
aas
outsl
movsl
pop
xchg
mov
dec
cltd
gs
in
sbb
sub
enter
repz
dec
cmp
popf
jo
mov
call
cmp
fwait
sti
outsb
in
sbb
sub
xchg
pop
push
fdivrp
push
into
jno
pop
cmpl
sbb
jae
lret
jmp
jnp
and
jecxz
fcom
pop
lods
mov
mov
pop
mov
rorl
pop
sti
cli
push
jmp
ljmp
jle
xor
xor
bound
jmp
adc
ds
mov
xchg
popf
mov
repnz
push
ficoml
stc
push
jb
sbb
insl
call
lock
jl
and
lcall
add
mov
out
outsl
push
jmp
outsb
fldt
dec
mov
pop
out
adc
sbb
dec
ja
cmc
mov
cmp
leave
push
ret
add
jae
addb
or
sbbb
dec
add
les
pop
stc
push
jae
or
xor
sub
cmp
and
dec
popa
adc
aaa
mov
fcompl
sub
scas
stc
mov
arpl
cmp
stos
mov
imul
gs
add
push
out
into
fidivl
jl
adc
test
push
std
call
xor
cli
mov
inc
sbb
das
cmp
into
rcll
repz
hlt
sti
adc
pop
jae
popf
mov
enter
inc
hlt
cltd
jns
pop
call
add
stos
dec
mov
xlat
lods
mov
repnz
fadds
in
nop
sti
ret
sar
cli
adc
pop
push
mov
xor
fsubs
int
push
push
or
inc
pop
jle
adc
pop
gs
mov
cmp
mov
out
shlb
cltd
ljmp
inc
loop
testl
rorb
cli
or
mov
dec
mov
mov
xlat
movb
aad
push
pop
outsb
jns
int3
les
pop
dec
mov
cltd
pop
out
cld
mov
dec
push
sbb
inc
scas
mov
aad
xchg
jnp
int
lea
xor
rorl
popa
and
in
inc
fsubrs
fsubrs
xchg
pop
pop
lods
or
cmp
popa
es
jne
es
ret
int
fsubrs
adc
mov
pop
inc
movsl
test
mov
mov
in
mov
or
mov
inc
add
inc
add
push
cmpsl
pop
cltd
inc
pop
jecxz
cmp
push
mov
and
add
jo
mov
inc
out
cmp
jecxz
popf
and
out
mov
mov
xchg
mov
mov
sbb
nop
push
into
push
daa
pop
sub
mov
sbb
adc
mov
push
mov
mov
dec
pop
movsb
int
add
ficomps
negb
nop
push
mov
pop
jnp
in
imul
and
std
pop
fmulp
stc
push
into
lods
push
lds
sub
pop
icebp
cmp
pop
jo
in
xchg
mov
je
jg
aas
iret
outsl
std
in
and
pop
xadd
outsl
add
aam
inc
sbb
xor
cmp
push
sub
xchg
jno,pt
push
cli
insl
push
or
mov
data16
jmp
sbb
mov
push
or
iret
mov
mov
popa
cmp
push
jbe
jno
imul
and
aaa
dec
inc
ret
or
loopne
mov
push
xor
xchg
inc
cmp
jne
sub
pop
fwait
dec
iret
or
mov
scas
int3
cmp
xor
jo
cmp
aaa
push
loop
cmpsl
pop
cmp
xor
push
jg
sub
in
xchg
mov
mov
jge
pop
mov
mov
jno
test
cld
enter
rolb
pusha
sub
xchg
test
les
push
or
lea
sti
lret
mov
adc
cmp
test
stc
fiadds
fstl
in
popf
xor
and
insl
je
addl
loope
sub
insl
clc
enter
subl
cmp
aam
push
mov
iret
sbb
int3
mov
div
icebp
orl
fisttps
mov
test
sub
ja
mov
test
fdivrl
cmpsb
pop
or
or
iret
nop
ret
pop
pop
lahf
stos
in
xchg
inc
cwtl
les
push
rcll
mov
mov
add
mov
out
lcall
dec
fistps
fistpll
xor
cwtl
scas
mov
sub
xchg
pushf
clc
mov
lods
xor
movsl
lcall
scas
sbb
hlt
leave
test
fs
pop
inc
aaa
push
xchg
orl
out
cwtl
ss
sbb
pop
je
sub
mov
test
idiv
dec
rcll
jg
or
mov
xor
mov
insl
int3
mov
leave
jo
fsubs
cmp
pushf
into
int
mov
mov
subl
into
call
pop
sbb
push
test
js
lret
xor
addl
push
cmp
dec
ror
inc
inc
push
adc
lcall
xor
dec
negl
bound
rol
pusha
mov
movsb
mov
or
xchg
mov
push
sub
in
mov
bound
imul
outsb
xor
dec
inc
xor
sbb
push
cltd
outsl
mov
push
shll
xor
ror
mov
imul
je
xchg
ret
push
pminsw
stc
call
lods
je
adc
mov
cli
repz
jmp
mov
bound
inc
call
mov
ret
lds
adcl
out
pop
ds
cmp
rcr
out
cmp
mov
das
xchg
cmp
add
fcompl
iret
sub
idivb
ror
cwtl
or
pop
xor
loop
adc
jbe
sbb
xchg
aam
inc
jle
sub
pop
shrb
divl
daa
and
or
test
insb
mov
fstpl
sub
xchg
pop
aad
mov
out
cmc
scas
jl
xor
iret
push
cltd
cltd
arpl
gs
in
sub
rcr
clc
into
jb
xchg
andl
inc
and
mov
jno
dec
popa
adc
orb
ret
sub
test
mov
jbe
popa
lahf
sub
repz
mov
fidivrs
push
cmp
test
fidivl
jle
insl
xchg
ds
xorb
clc
sub
mov
fdivrs
cmp
sbbl
jecxz
inc
xor
push
out
imul
cli
lds
add
scas
mov
ljmp
movsb
mov
and
fdivl
inc
jmp
cwtl
neg
sbb
shrl
lds
dec
jae
pop
das
mov
push
mov
xchg
or
enter
inc
movsl
in
sbb
gs
and
fdivs
jo
sub
inc
push
je
and
scas
lea
add
ffree
hlt
ret
inc
mov
rorl
jne
nop
jne
pop
inc
push
cmp
cmpsb
pop
mov
pop
mov
push
inc
adc
xchg
push
popf
std
call
dec
outsl
adc
jae
pushf
sub
mov
mov
outsl
pop
and
rorb
add
sbb
ja
xor
xor
adc
sbb
cmp
add
jae
and
pop
sub
cmp
mov
xor
rorl
cmp
add
pop
jo
repz
popf
push
int3
test
or
inc
gs
mov
sbb
jmp
jb
pop
adc
aam
and
pop
sub
cmpsl
pop
add
bswap
or
and
push
fs
and
data16
jns
inc
fisubs
dec
loop
sub
or
cmp
push
xor
add
jmp
cmp
icebp
pushf
cs
pop
aam
inc
inc
cmp
lods
rorb
lret
dec
push
stos
push
xor
jns
je
movsb
mov
push
pop
in
pop
out
add
iret
dec
pop
addr16
jmp
stc
xor
sub
mov
in
add
push
in
xchg
cli
add
imul
je
dec
xor
xorb
push
sbb
sahf
dec
fisubrs
sub
scas
testl
addr16
loope
mov
arpl
xor
sub
push
jge
js
jb
clc
and
popf
jno
and
sub
mov
sub
xchg
push
shlb
sbb
and
pop
dec
icebp
mov
pop
lcall
lret
mov
adc
sahf
popa
and
mov
aaa
pop
xor
xchg
jno
mov
push
push
cmpl
mov
sbb
jne
out
stc
sub
add
xchg
sub
movsb
xchg
repz
fidivrs
bound
insb
push
mov
test
pop
dec
mov
mov
fdivrl
lcall
push
pop
pop
hlt
lods
lret
mov
xor
or
in
cmc
mov
xchg
inc
movsl
rcrl
pop
pop
push
ja
cmp
lea
mov
mov
sbb
xor
mov
sahf
imul
sar
mov
test
and
cltd
call
movsl
pop
stos
repnz
xor
stos
lea
ja
leave
xchg
sar
std
pop
add
out
sti
push
xor
cmp
jns
lock
mov
lret
gs
adc
xchg
xlat
sbb
push
cli
and
in
cli
inc
stos
or
lock
or
and
cltd
sbb
and
rcrb
mov
xchg
inc
xchg
aam
dec
push
inc
mov
sbb
mov
pop
jb
xchg
mov
std
outsb
lods
add
mov
arpl
fstps
sub
data16
andl
pop
imul
test
xchg
jmp
adc
shll
sbb
or
and
inc
push
sbb
loope
mov
mov
xchg
lret
scas
ds
sbb
adc
adc
fimull
movsl
sub
mov
mov
hlt
xchg
out
or
push
loopne
inc
dec
cmp
out
mov
imul
leave
add
mov
pop
push
cmp
cwtl
mov
add
scas
add
shl
sub
xchg
xchg
cmc
mov
pop
xchg
movsl
lods
adc
lods
aam
fnstenv
mov
jmp
and
jge
out
jnp
mov
aaa
add
sar
xor
xchg
sbb
cld
movsb
int3
mov
loope
out
and
jmp
cmp
in
inc
std
test
outsb
jnp
and
mov
bound
insb
push
out
cwtl
jmp
scas
rcr
das
and
or
sbb
icebp
pop
and
scas
outsl
movsb
not
int3
rcrb
cmp
daa
stc
add
mov
xchg
adc
lcall
jle
iret
push
mov
or
dec
push
dec
mov
add
mov
mov
stos
call
jecxz
lcall
lret
jno
sub
push
jecxz
loope
jns
jb
stos
mov
sbb
push
outsb
or
scas
sub
mov
popf
add
cltd
nop
adc
daa
dec
enter
cmpsl
bound
aam
sbb
inc
mov
or
scas
cmp
or
mov
adc
push
jge
push
adc
and
cli
push
mov
or
bnd
iret
push
mov
cmp
adc
cli
push
aas
rorl
jns
fmuls
lahf
push
ffree
inc
lret
cmp
fnstcw
dec
clc
add
shrb
icebp
and
testb
dec
mov
or
fadd
mov
cmpsl
or
sbb
int
add
enter
inc
mov
cmpsb
movsl
clc
xchg
or
jecxz
mov
shll
cmp
push
sbb
test
shll
fs
cmp
xchg
or
inc
in
insl
push
cmp
xor
add
stos
stos
sbb
mov
stos
add
cltd
add
sbb
jmp
xchg
out
xchg
or
insb
fisttpll
std
fisubs
mov
cmp
andb
push
xchg
or
xlat
sub
std
sbb
pushf
fbld
mov
jge
mov
ljmp
or
jne
push
cmpl
sbb
repz
fldl
insl
ja
cmp
lds
imulb
clc
ret
dec
jns
push
xchg
filds
clc
aad
dec
jb
insb
and
pop
aam
rcrl
stos
fsubs
dec
adc
fs
jp
xor
dec
scas
les
mov
ud1
add
bound
stos
cmpsb
ljmp
in
sbb
shrl
inc
loope
cmpl
jo
xlat
lcall
outsl
jae
loop
mov
push
fs
dec
clc
fildll
shlb
pop
mov
cmp
call
pop
ljmp
push
xor
clc
cld
stc
shr
mov
mov
jo
jo
call
les
insb
inc
push
xor
out
adcl
xor
push
jle
inc
xchg
shrb
add
imul
push
sbb
cwtl
cmp
inc
lods
nop
sarl
lcall
inc
inc
loop
sub
cs
icebp
dec
mov
stos
out
shll
and
push
inc
sbb
pop
fwait
add
jle
repnz
test
xchg
push
add
dec
inc
xchg
xchg
aas
adc
in
mov
cmp
iret
data16
cmc
mov
inc
iret
shl
dec
arpl
add
or
and
mov
ret
subb
scas
push
insb
adc
inc
fdivrs
iret
xchg
pusha
sub
loope
pop
pop
daa
test
pushf
and
dec
daa
mov
aad
and
jecxz
adc
inc
cmpl
cld
inc
movsl
sbb
jne
or
xor
dec
fucom
inc
adc
imul
ret
and
or
sbb
aad
cltd
inc
xor
ret
add
outsl
iret
pop
mov
jae
inc
inc
popf
sub
pop
fdivrs
xchg
flds
push
cmp
add
jg
or
xor
add
call
mov
lods
into
xchg
sub
jg
sbb
inc
mov
push
lods
push
movl
mov
cmp
xchg
stos
push
inc
xor
movl
fdivs
aas
add
jne
mov
cli
xorl
and
insl
outsb
jge
dec
hlt
out
pop
mov
adc
test
jno
insl
movsl
push
mov
xor
xchg
push
and
jle
insl
outsb
xchg
out
addr16
mov
push
push
sahf
dec
and
adc
fwait
negb
and
mov
push
inc
cmp
outsb
orb
mov
shlb
jns
lods
push
movsl
leave
cmp
and
cmpsb
lods
or
jg
pop
fldt
fwait
jge
icebp
test
std
adc
cmpsb
packsswb
cmp
mov
jne
call
in
add
mov
fs
adc
adc
data16
inc
mov
add
cmpl
xchg
repz
add
lods
and
lea
lret
jecxz
mov
cmp
jmp
ret
mov
push
dec
in
xchg
rcr
mov
or
jno
xchg
shr
divl
imul
adc
test
in
mov
add
add
cmp
lods
push
outsb
jecxz
sarl
sub
jp
inc
lahf
mov
imul
out
sti
scas
mov
sti
lahf
sub
or
pop
ljmp
fwait
mov
mov
stc
jmp
xor
loope
sti
jecxz
addb
js
imul
into
sbbb
sti
sub
jecxz
add
inc
mov
fadd
int
cmpsl
insl
sbb
and
shlb
pop
adc
xor
pushf
pop
and
push
test
cli
mov
xchg
sub
cmp
xor
repnz
push
mov
pop
push
aaa
push
inc
push
rcr
push
f2xm1
andl
jae
in
call
jae
fsubrs
push
ret
lods
jge
adc
dec
mov
sbb
lods
stc
loope
push
insb
cmp
push
es
add
cmp
les
pop
fsubrs
dec
push
rorb
inc
jmp
mov
ret
xor
adc
addr16
gs
add
mov
jne
dec
dec
pop
popf
mov
sar
aad
mov
cmpsb
fwait
mov
pop
pushf
sahf
aas
cwtl
dec
imul
enter
cmp
mov
add
ljmp
hlt
push
lcall
les
cwtl
lret
dec
loop
cmpsb
loope
add
push
lods
and
fstpl
xor
jp
sahf
mov
pop
xor
or
out
in
sub
mov
inc
xlat
jb
lock
push
icebp
test
pop
in
in
mov
and
shl
fldt
inc
mov
popa
push
inc
xchg
stos
xchg
adc
pop
push
fsubrl
jecxz
shrl
xor
cmp
testb
jns
aaa
rcrl
lods
mov
lret
fstps
adc
icebp
mov
pop
sarb
jae
dec
cwtl
or
in
mov
mov
pop
test
or
add
inc
mov
and
add
pop
imul
mov
cwtl
fwait
and
fwait
ret
adc
mov
outsb
pop
fcoml
jp
ret
sbbb
movsl
add
mov
xor
in
xchg
sub
cmc
fldl
cmc
addr16
test
pop
pop
jae
movsb
cmp
andl
add
mov
jl,pt
clc
cwtl
inc
and
mov
adcb
aaa
jnp
cmpsl
sbb
idivb
mov
or
xor
and
sbb
mov
aad
adc
dec
pop
nop
cs
aaa
jl
sbb
push
fs
loop
ljmp
insb
pop
call
fnstenv
pop
into
rol
movsl
inc
xchg
mov
daa
mov
pop
cmp
dec
aas
mov
lock
inc
pop
in
cmp
xor
xchg
mov
stos
fsubl
bound
jl
gs
xchg
mov
out
stos
inc
scas
pop
rcrb
jg
dec
mov
rcr
cmp
pop
mov
ja
fnstenv
xor
test
and
pop
and
xchg
jbe
sbb
sbbl
pusha
mov
dec
pop
mov
xor
dec
insb
popa
mov
mov
movsl
add
cmc
cmp
or
sub
mov
mov
test
repnz
test
test
scas
out
adc
or
ss
and
das
ficomps
dec
aaa
push
imul
dec
or
cli
jmp
mov
fnstenv
push
es
sub
or
xchg
imul
jne
lret
or
mov
jg
xchg
cmp
mov
ret
jno
pop
or
xchg
push
mov
fidivl
xchg
mov
pop
test
mov
test
pop
xchg
inc
lret
sub
aaa
push
vandnps
outsl
lods
int3
outsb
sti
int
xchg
xchg
mov
loop
sti
aam
inc
gs
jle
add
jne
adc
mov
fstps
inc
in
sub
and
push
ret
sub
push
pop
jl
aad
and
add
xor
leave
mov
aaa
add
faddl
jl
mov
mov
popf
scas
jns
add
ja
and
or
imul
xchg
ret
pop
mov
add
dec
mov
nop
push
aad
leave
std
in
test
idivl
stos
sbb
mov
rcll
inc
clc
std
add
es
pop
jns
adc
mov
rcl
ds
insl
pop
jge
lods
rcrl
fisttps
xchg
fldcw
sub
add
imull
sub
inc
aas
adc
pusha
scas
sub
fstpt
mov
and
sub
and
mov
pop
jbe
cmp
push
adc
inc
daa
dec
cwtl
inc
clc
fwait
add
aas
fisubs
mov
mov
ds
fbstp
sti
cmc
ja
cmpl
in
cli
pusha
sub
repnz
cs
jne
int3
aad
mov
push
mov
jl
lahf
adc
mov
sub
xor
jg
lret
sbb
outsl
xor
fisubrl
mov
pop
les
aad
cmp
jbe
test
push
push
mov
adc
or
push
sbb
fldenv
mov
mov
adc
movsb
cmp
insl
jbe
lods
mov
cmp
sbb
mov
ret
mov
out
pop
aaa
push
mov
cmpb
cmp
lock
lret
shll
push
pusha
add
adc
je
mov
test
sub
pop
mov
es
push
aaa
gs
push
cltd
dec
or
mov
mov
in
pop
daa
xor
sbb
pushf
cmpsb
fcmovne
andl
jb
sub
mov
fsub
sub
inc
iret
in
sahf
mov
sbb
mov
mov
jno
jne
mov
push
mov
enter
faddl
push
dec
jle
or
dec
xchg
pop
mov
push
fs
and
pop
dec
sbb
adc
jns
fstps
mov
insl
popa
pushf
pushl
pop
clc
loopne
xor
cmp
xor
add
out
mov
push
popf
sahf
sbb
xchg
cwtl
enter
xor
es
fsubs
enter
hlt
in
mov
cmp
repz
dec
call
xchg
or
jmp
repnz
cmp
push
xchg
cmpsb
cmpsb
scas
fstpt
add
cmc
inc
mov
pop
jne
cmc
loopne
test
push
mov
and
lds
add
pop
xchg
cmpsb
dec
jbe
xchg
out
scas
xchg
add
mov
rorb
add
sub
add
sar
inc
fbstp
xorl
jl
mov
mov
pop
in
int
or
mov
addl
or
sub
pop
cmp
fwait
rorl
aas
mov
cmp
pushf
lods
outsb
scas
cmp
iret
cmp
push
dec
add
sbb
fldcw
loop
outsl
lret
sub
int
repz
pushl
xor
cmp
in
cwtl
mov
ds
movsb
icebp
lcall
or
xchg
xor
lods
jb
test
adc
ljmp
leave
fmull
es
fadds
lods
add
push
pop
mov
adc
jl
fwait
sub
lcall
push
ret
loopne
mov
fwait
sub
sub
pusha
push
imul
lea
push
xchg
mov
mov
lret
shll
rcrb
cld
jno
cmp
mov
add
pop
in
mov
add
xlat
rorl
test
xchg
adc
mov
xchg
test
or
sbb
inc
pop
aaa
xor
xchg
push
adc
cwtl
inc
loop
pop
rcrl
jae
adc
int3
mov
faddl
pop
jp
mov
loope
into
inc
cmp
pop
cmp
cs
in
inc
movsl
mov
in
lret
scas
mov
add
xchg
adc
pushf
shrb
cmp
inc
mov
dec
adc
ja
pop
cmp
push
lods
das
cwtl
or
xor
out
pop
mov
xor
lock
clc
repz
lret
pushf
jbe
in
lahf
xor
add
rclb
fidivs
push
push
sti
idivb
in
scas
cwtl
popa
jb
adc
xlat
xor
insl
pop
push
fcoml
cli
xchg
xor
and
cmp
dec
mov
cmc
mov
or
fsubrp
dec
arpl
pop
hlt
xchg
fidivs
ret
mov
inc
repz
fisttpll
sub
ja
dec
stc
mov
std
mov
call
push
push
sbb
sub
dec
pop
out
mov
mov
sub
xor
shl
ret
cs
inc
xchg
cmp
mov
pop
dec
inc
push
sub
cwtl
nop
dec
inc
mov
icebp
pop
sbb
cmp
sub
add
or
mov
cmpsb
push
sub
aaa
jns
dec
shlb
and
or
dec
in
sahf
loopne
lahf
aam
mov
mov
inc
mov
insb
jnp
ja
inc
mov
je
xor
mov
pop
xchg
fildl
adc
out
clc
inc
out
xchg
xor
or
push
dec
lods
cmp
pop
cmc
sbb
divl
inc
cmp
icebp
jecxz
int
test
xchg
loop
jmp
lea
in
inc
dec
add
xchg
mov
mov
jg
das
xchg
pop
mov
cmpsl
dec
mov
je
inc
loopne
jne
mov
aam
lods
cmp
cs
dec
mov
inc
push
push
lds
outsb
fcoms
mov
pushf
rcll
arpl
add
fcom
leave
inc
inc
xchg
loopne
and
rcll
mov
sub
fwait
pop
call
dec
or
ja
fsts
and
jge
xchg
push
imul
shrl
or
pop
push
das
xchg
lock
adc
jge
jg
sarl
sahf
or
jb
arpl
mov
xchg
mov
enter
jae
nop
inc
js
dec
sub
jno
lock
gs
pop
lods
aam
pop
dec
std
push
popf
xor
xchg
cmp
std
xor
aam
inc
jb
addl
loope
dec
adc
dec
inc
stos
jecxz
leave
vmovntps
fwait
sbb
test
xor
test
ds
sahf
dec
scas
jp
dec
popa
jbe
push
shr
push
cmpsl
adc
dec
dec
mov
jb
popf
and
orb
mov
cld
adc
cs
enter
loopne
push
pop
or
icebp
cmp
push
int3
das
outsl
pop
repnz
add
mov
adc
outsb
mov
shrb
cmp
loop
insl
movsl
ljmp
daa
or
test
or
or
and
mov
jge
inc
jmp
lock
aad
push
ljmp
es
rcrb
push
mov
cmp
inc
pop
jns
mov
xchg
outsl
test
icebp
dec
cmp
dec
mov
jge
xor
mov
jg
fwait
cmpsb
xchg
addr16
jne
clc
and
bound
int
sarl
ss
in
aaa
jecxz
adc
sub
out
push
push
sub
mov
hlt
jne
rcrb
cltd
cs
pop
xchg
mov
xchg
test
pop
or
insb
add
mov
push
dec
xor
xor
loope
ret
add
test
xor
test
and
adc
in
xchg
es
dec
pop
in
test
jmp
inc
arpl
mov
ja
jns
push
lock
loopne
pop
push
inc
fwait
ja
jno
insl
inc
cmp
call
pop
xchg
test
xor
sbb
int3
pop
xor
fs
pop
xchg
orl
into
adc
mov
pushf
or
inc
in
or
dec
dec
xor
fisttpl
out
fstpt
jmp
rep
es
test
cmp
pop
push
xor
inc
popf
mov
and
pop
call
ror
and
mov
pop
scas
popa
fmull
mov
ret
mov
mov
roll
sub
pop
mov
inc
inc
mov
jb
dec
das
add
divb
in
int
dec
pop
dec
xchg
pop
pop
sub
leave
loope
ret
mov
mov
icebp
dec
daa
cmp
arpl
sti
cmp
push
divl
ret
das
mov
sbb
mov
adc
ss
fcomi
pop
jg
dec
xorb
outsl
rcr
xor
repz
mov
aaa
jb
fcmovnb
push
lods
pop
mov
es
inc
into
cld
sbb
jg
xor
imul
lret
mov
fidivl
mov
mov
leave
mov
dec
and
aaa
int3
lahf
lods
fidivs
and
cltd
dec
addl
cmp
push
outsl
sub
rolb
cmpsb
xchg
or
and
iret
add
mov
mov
xchg
and
lods
inc
cmc
jne
add
ret
or
les
sbb
imul
pop
sbb
loopne
mov
mov
sub
adc
add
sub
rcr
mov
sbb
movsl
mov
sbb
mov
mov
mov
imul
xchg
dec
mov
je
int3
cmp
add
mov
mov
jmp
jecxz
fsts
iret
inc
push
scas
adc
jp
mov
shlb
jle
sbb
xor
in
les
iret
inc
cmp
js
pop
hlt
ret
int
inc
push
sbb
xchg
out
sub
jge
jo
pop
pop
lock
inc
aam
cmp
test
mov
int
inc
xor
mov
mov
pop
outsl
inc
lcall
repnz
cld
xor
push
push
sub
sub
pop
sub
cmp
aaa
les
in
cmp
cmp
lret
fimull
shl
mov
push
or
jle
dec
rcll
int
leave
push
lahf
cltd
nop
dec
loop
in
shll
popf
adc
lods
insb
adc
sub
sub
mov
ss
out
aad
lods
movl
cwtl
cmp
adc
fiadds
int3
jno
cmpsb
adc
dec
mov
push
mov
pop
arpl
xor
outsb
and
xchg
loope
sub
imul
mov
seto
aam
xchg
sub
jae
call
sbb
jbe
cwtl
dec
daa
daa
int3
cmp
mov
dec
ficoms
lods
push
pop
int3
popa
push
mov
xchg
lods
xchg
push
add
sub
jnp
xor
push
bound
mov
sub
pushf
mov
mov
xor
mov
ja
lahf
jns
fstpl
mov
jno
adc
jne
je
cmp
rcll
mov
outsb
mov
loopne
xor
adc
mov
sti
or
dec
movl
jecxz
push
jo
xchg
movsl
leave
insb
add
xchg
cld
sub
sarl
popa
aaa
mov
jmp
mov
test
xchg
addb
sbb
popw
loopne
sarl
lret
xor
adc
fucom
push
sub
in
ljmp
out
or
jp
or
leave
notl
mov
lahf
lods
je
dec
xchg
sbb
js
sbb
das
sti
mov
or
adc
test
add
lea
xor
lods
push
ds
adc
dec
test
cmc
cmpb
ret
pop
push
cmp
mov
pop
and
pop
push
scas
pop
mov
les
mov
ret
popa
sub
mov
imul
dec
fnstsw
inc
cwtd
ss
daa
cmpb
and
cwtl
rcl
sub
pop
int3
pop
repnz
in
mov
outsb
mov
daa
aam
rcr
or
cmp
push
daa
fs
or
call
dec
mov
sbb
add
inc
xchg
and
movb
mov
out
ret
das
jmp
jb
data16
aaa
mov
push
daa
push
and
and
shll
lea
lahf
sub
fbstp
adc
add
inc
out
jnp
scas
xlat
pop
pop
lods
aad
pusha
sti
mov
xchg
mov
mov
jle
fwait
ret
das
jnp
jbe
cmp
mov
add
sbb
lock
out
mov
imulb
pop
or
inc
cwtl
sarl
mov
add
add
outsb
stos
loopne
mov
scas
dec
fsubrl
xchg
and
negl
sahf
jae
mov
sub
jbe
aad
inc
sti
insb
scas
or
ficoml
loope
push
popf
addl
in
inc
imul
loopne
fldt
hlt
stos
cmp
dec
or
sbb
or
add
js
mov
test
and
adc
cli
and
adc
inc
shld
and
movsl
sub
and
loope
lods
fldl
adc
cmc
push
add
lods
pop
jbe
rcrb
and
or
cmp
stos
jp
pop
dec
add
testb
arpl
stos
fimull
push
popf
adc
xchg
js
push
pop
nop
icebp
sbb
jbe
mov
orb
push
ds
mov
rorl
ds
xor
cmp
or
out
xchg
xor
mov
js
das
cli
fsub
mov
addr16
ljmp
sbb
addr16
std
pop
dec
nop
sarl
loop
mov
cmp
pusha
loope
adc
or
sbb
adc
push
adc
loop
xchg
movsb
sbb
sub
roll
xor
or
xor
aam
jmp
scas
mov
jae
int
push
adc
loopw
and
vxorpd
jecxz
lods
mov
sbb
bound
addr16
pop
mov
push
push
mov
pop
popf
fmull
add
shlb
shl
dec
cmp
xor
mov
jmp
dec
sbb
ds
xor
arpl
test
sahf
gs
mov
loop
fucomi
insb
lea
xor
mov
test
xchg
fwait
enter
cmp
add
test
adc
js
push
add
sub
cmp
pop
sbb
enter
int3
jp
lcall
pushf
and
dec
mov
adc
or
adc
sub
pop
in
jns
cmp
pop
lret
adc
stc
insb
std
and
mov
cmpsl
ljmp
pop
lods
lds
adc
jno
inc
xchg
ljmp
mov
push
mov
pushl
in
mov
sbb
xorb
mov
lods
add
xchg
leave
rcl
add
jl
out
mov
imul
rcrb
xchg
outsl
lret
nop
cmp
and
pop
push
lods
insb
movsl
mov
cmc
loop
inc
aas
and
ffreep
in
jg
negl
dec
shlb
cmp
int3
test
out
in
mov
jns
jl
jmp
dec
lret
xchg
repnz
xchg
out
sub
mov
leave
push
dec
ficomps
jnp
mov
fwait
std
inc
mov
jp
js
sbb
frstor
push
sbb
test
mov
test
jb
cmpsb
mov
test
fidivs
loope
pop
mov
lldt
inc
cmp
cmp
adc
stos
scas
mov
lret
insb
sbb
pop
imul
fcoml
xlat
adc
outsb
stos
fs
cmp
scas
sbb
std
sbb
xor
lods
mov
int
jne
cwtl
dec
sub
ljmp
js
arpl
xchg
in
xlat
jbe
push
sub
sub
mov
cwtl
cwtl
mov
jno
cli
rclb
pushf
xlat
adc
sbb
xor
aaa
dec
pop
mov
in
out
xchg
aaa
jb
fstps
or
cmovb
and
incl
aam
add
xchg
sbb
jle
mov
loope
xchg
les
in
dec
jecxz
lret
sub
je
push
fsub
mov
bound
sbb
mov
leave
jg
cli
fsubr
js
popa
sub
popa
daa
xchg
and
lahf
xchg
pop
loopne
or
mov
jo
in
jl
push
ds
out
sarb
jg
lret
adc
cmc
and
stos
jo
inc
lods
mov
sahf
add
out
push
sti
rol
nop
aas
andl
push
jnp
xchg
popa
aam
or
std
test
sub
mov
aam
sbb
cmpl
inc
notb
add
test
jnp
mov
in
xchg
insb
xchg
jns
jg
in
fwait
mov
in
push
ljmp
mov
xchg
cmp
dec
jp
nop
xorl
mov
jne
cltd
pop
pop
test
and
xchg
sbb
add
pop
aaa
rorb
xchg
cmp
sub
cmpsb
test
roll
mov
imul
sub
lcall
push
push
push
das
push
test
cmpsl
inc
jge
iret
or
rdtsc
sbb
push
loop
int
dec
inc
add
jmp
jmp
cmpsb
mull
mov
add
les
fs
add
mov
pop
int3
jmp
js
cmp
or
movb
jnp
and
xchg
loopne
cmp
lret
arpl
adc
mov
stos
add
cmpsl
jo
dec
sub
mov
jp
add
sbb
fyl2xp1
and
lahf
mov
call
repnz
xor
loopne
mov
xchg
leave
lds
sub
jmp
sub
lods
cmp
xchg
add
or
out
mov
sbb
pop
cmp
jne
cmpsb
cmp
movsl
pop
and
adc
and
in
ret
or
jb
fdivrl
mov
insl
sti
gs
loope
mov
inc
leave
rcrl
pop
pop
sahf
das
add
or
adc
fisttps
xor
mov
sbb
call
inc
cmp
push
cmpsl
and
test
lods
and
outsl
incl
cmpsb
pop
adc
mov
cltd
sti
jl
int
jmp
inc
mov
repz
dec
filds
or
notb
sbb
test
inc
in
popa
inc
jns
movsb
jo
out
push
xchg
or
add
pop
xor
and
sbb
pop
movsb
inc
xchg
in
scas
sahf
lea
insl
test
xchg
push
enter
mov
stos
es
and
cmp
in
out
cmc
cltd
lret
inc
mov
and
push
cmp
incb
cmpsl
cmp
xor
sub
cmc
dec
inc
jmp
mov
jge
mov
mov
cld
cld
cmp
out
xor
ljmp
loop
fisttps
enter
std
inc
js
jne
inc
scas
sbb
xchg
pop
sbb
mov
jo
jnp
fcomip
cmp
inc
jo
inc
push
dec
pop
sbb
loopne
mov
or
add
cli
sbb
test
scas
push
adc
xor
dec
cmpsb
inc
stc
imul
clc
adc
xor
jbe
outsl
adc
push
push
rorl
stos
xlat
popa
popa
jae
inc
mov
or
leave
ret
jl
sbb
push
push
fstps
fmul
xchg
or
cmp
stos
or
xchg
inc
jl
pop
pop
in
mov
out
shrb
cs
sub
ds
and
push
cmpsl
mov
repnz
lods
xchg
lahf
jmp
cmp
push
aas
jge
cmp
xchg
lods
adc
push
xchg
xchg
lods
cmp
fldl
jp
lret
dec
outsl
out
imul
mov
popl
cmpsb
loop
dec
shlb
inc
sub
adc
dec
ret
data16
es
loopne
nop
lods
shlb
es
repnz
adc
jb
movsl
das
xchg
sub
dec
sub
jae
jmp
mov
add
orb
adc
lret
test
push
xchg
dec
outsl
cmpsl
jecxz
in
aas
out
es
mov
popa
xchg
push
repnz
mulb
lret
cli
pop
jnp
mov
and
imul
push
mov
cli
or
jb
imul
mov
push
xchg
sbb
and
mov
sub
cli
mov
xchg
xor
daa
push
stc
movsl
mov
sarl
aad
adc
cmp
adc
lcall
sti
aaa
pop
sti
dec
les
inc
std
rcr
pusha
and
fistl
insl
xor
cltd
inc
mov
inc
in
out
lds
ret
xchg
pop
sahf
cmp
add
sbb
adc
dec
or
inc
clc
inc
bound
add
xchg
and
insl
fcomi
mov
pop
ds
repz
das
cmp
jb
out
pop
roll
inc
or
pop
js
mov
pop
leave
sahf
mov
pop
add
cmp
les
mov
xchg
mov
in
je
movsl
dec
fdivl
jg
ret
imul
ficoms
arpl
pop
inc
pusha
mov
mov
adcl
ficoms
add
cwtl
jo
mov
mov
jb
rcrw
pusha
fwait
sbb
loop
std
sub
jns
vunpcklps
push
clc
cwtl
int
jnp
cmpsl
scas
adc
out
xor
test
dec
loope
adc
insl
je
push
leave
sub
xor
add
fwait
push
jb
bound
adc
add
xchg
add
mov
jns
mov
test
push
outsl
loope
fdivrl
dec
fwait
inc
lods
cs
sbb
xchg
repnz
jle
xor
out
out
test
jge
fldt
cltd
and
addr16
sahf
sbb
sub
call
out
nop
cwtl
adc
jne
es
cmp
out
lods
incb
popf
dec
arpl
add
jne
insb
cwtl
sbb
cltd
mov
pop
ljmp
hlt
repz
lea
mov
stos
xchg
mov
push
ds
sarb
or
cmp
xor
fidivl
pop
outsb
sub
pusha
pop
loop
fnstsw
jg
data16
jmp
stos
jbe
lea
jg
jecxz
dec
sub
fwait
inc
movsb
or
adc
or
out
mov
mov
loopne
mov
push
or
icebp
fadd
xchg
cmpsl
add
aad
gs
jle
add
cwtl
lock
frstor
sbb
cmp
movsl
decb
gs
sbb
push
or
notb
pop
xchg
push
enter
shrl
cs
pop
xor
xor
int
sahf
xor
mov
fcoml
js
xchg
sbb
bound
or
in
fcomi
popa
xor
sub
dec
push
rorb
add
fbld
dec
xor
cmpsl
addr16
lret
stos
push
jns
out
aad
icebp
lahf
dec
mov
std
lret
addb
shrb
sub
lds
jne
and
jle
in
sub
lds
dec
adc
pop
pop
pusha
popf
adc
lock
mov
mov
iret
movsl
sbb
cli
fs
pop
mov
loope
repnz
adc
shrl
clc
aad
fisttpl
add
js
add
sbb
push
jmp
js
fnsave
imul
jne
pop
and
lahf
sub
cmp
call
sbb
sub
imul
mov
insl
mov
dec
dec
sub
sbb
lahf
inc
dec
sub
mov
xor
push
xor
adc
mov
repnz
arpl
mov
fld
fwait
cmc
cmp
fdiv
mov
cmp
push
loope
mov
or
mov
sbb
imul
stc
mov
sub
and
scas
sub
shlb
push
cs
mov
xchg
inc
mov
and
and
adc
rolb
push
jmp
xor
pop
mov
jo
cld
sbb
cs
jecxz
xchg
repnz
dec
jp
pop
pop
faddp
xor
push
mov
das
adc
and
imul
shlb
icebp
jnp
add
mov
cmp
push
pop
insb
cmp
sub
inc
jns
fldt
scas
aas
daa
adc
nop
inc
pop
daa
pop
mov
cmc
and
sbb
notl
dec
popf
inc
scas
test
loopne
push
dec
jl
mov
dec
mov
data16
dec
inc
sub
out
ret
in
pop
idivb
pop
and
mov
out
imul
jbe
xchg
div
out
movsb
out
adcb
xchg
stc
addb
jmp
xchg
jns
sub
push
jmp
inc
sub
movsb
enter
pusha
std
ljmp
lds
inc
lock
pop
jmp
mov
sub
pop
aaa
mov
mov
mov
jno
aas
stos
in
push
leave
adc
icebp
mov
imul
cwtl
shlb
imull
jg
xchg
push
jmp
jp
in
sbb
andb
sbbb
or
push
cli
and
or
and
lods
push
loopne
fdivrl
cmpsl
sub
cwtl
enter
popf
sub
adc
pushf
push
lods
mov
fwait
pop
sub
pop
mov
adc
and
xchg
clc
in
es
das
int3
push
loope
cmc
nop
push
dec
and
loop
jp
cwtl
cmp
sarl
inc
sbb
lea
bound
cld
in
cmc
push
pop
aad
fcompl
mov
sbb
stos
outsb
sub
xchg
xor
in
repnz
add
xorl
lcall
mov
aaa
pop
das
ss
mov
push
fnstcw
mov
outsb
mov
inc
incl
add
call
mov
pop
scas
icebp
bound
scas
leave
int3
mov
add
into
dec
mov
sub
es
sub
nop
sub
out
lods
jns
adc
push
ds
cwtl
add
xchg
cli
loope
cmpsb
jle
fidivl
insb
sbb
sbb
mov
in
shrb
pop
adc
outsb
pop
sub
pop
cmp
mov
out
cmp
sbb
imul
and
mov
imul
mov
outsl
sbb
icebp
arpl
pop
mov
and
or
or
adc
lods
mov
pushf
mov
sarl
mov
dec
imul
push
shll
mov
and
loop
xchg
test
cmpb
lods
ds
lret
and
movsb
push
add
add
leave
mov
clc
jmp
cmp
xor
cmp
inc
into
adc
dec
imul
andb
insl
call
pop
mov
es
and
es
std
xchg
sbb
pop
rorl
xor
stos
es
sub
gs
and
in
leave
enter
popa
push
test
push
lods
negl
imul
add
dec
cli
pusha
shll
pop
push
push
sub
dec
pop
adc
adc
int
add
jns
sarl
jecxz
int3
mov
js
stc
dec
sbb
aaa
cmp
xchg
mov
dec
jne
inc
mov
fmuls
pop
cmp
mov
lds
test
lds
hlt
and
sub
std
data16
add
xor
mov
sbb
fisttps
out
loop
inc
in
mov
popf
mov
das
pusha
icebp
fcoml
jmp
es
call
test
enter
push
jmp
sbb
fildl
xor
popf
out
mov
xchg
adc
mov
outsb
mov
cs
cmp
push
sar
jmp
inc
es
pop
stos
sbb
sub
ds
and
inc
adc
inc
dec
ficoms
sbb
scas
cmpsl
mov
sbb
sbb
adc
mov
out
fmuls
or
outsb
cmpsl
sbb
enter
inc
mov
call
lret
push
sub
std
mov
and
insl
sbb
jb
mov
int
fdivp
mov
xor
dec
and
jecxz
fcoml
cmp
test
sub
bound
dec
cwtl
dec
mov
and
notl
js
stc
pop
in
push
clc
leave
and
xchg
fildll
imul
bswap
push
stos
out
pusha
mov
inc
and
cmpsb
cld
mov
lcall
mov
test
xchg
rcrb
pop
xor
lcall
ror
les
mov
gs
fwait
mov
jp
lcall
rolb
cmpsb
sbb
dec
push
clc
jno
cmp
arpl
sub
push
stc
mov
shl
sbb
cmp
fdivs
jecxz
call
cwtl
add
stos
pop
leave
sub
add
inc
pop
repnz
int3
test
lcall
jae
sbb
or
je
andl
xchg
test
mov
daa
jne
outsl
adc
mov
pop
sbb
mov
loop
call
int
pop
out
test
mov
or
add
cmc
andps
sarb
add
loope
jl
mov
popf
adc
xchg
pop
cmp
mov
cmovns
push
push
js
pop
mov
ficomps
aad
xor
mov
adc
cmpl
mov
aad
in
jns
pusha
and
cmp
mov
imul
mov
and
sbb
jge
in
jmp
inc
testb
mov
xor
fmul
push
cs
sbb
mov
mulps
push
js
pop
in
fnstsw
sbb
popa
mov
pop
insl
push
flds
mov
push
pop
iret
push
rorl
xlat
das
imul
scas
mov
cmp
fistpll
mov
inc
push
mov
jns
mov
les
in
das
add
out
xor
andb
jecxz
pushl
dec
insb
cmp
mov
inc
scas
insb
mov
or
aad
sub
test
in
mov
or
pop
cltd
push
fwait
cmp
or
ret
push
imul
sbb
icebp
mov
cltd
lcall
repz
mov
or
jmp
xorb
jo
out
inc
stc
mov
sbb
ret
dec
iret
adc
gs
cmc
loope
mov
mov
mov
pop
mov
jne
and
jnp
add
push
mov
mov
addr16
ds
pop
xchg
push
push
xor
cmp
pop
mov
mov
imulb
test
rcrl
xchg
mov
add
sbb
mov
pop
aad
rclb
xorb
fiaddl
and
sbb
or
and
mov
jl
xchg
aam
leave
pusha
xchg
test
mov
mov
dec
xchg
in
fimull
pop
fwait
dec
jp
aaa
sub
pop
loope
hlt
xchg
sahf
inc
sbb
mov
in
mov
push
mov
ret
mov
cmp
pop
dec
fiaddl
mov
cmp
push
jmp
ret
bnd
out
mov
fldl
sahf
loopne
push
dec
adc
cs
and
mov
fwait
rorb
aaa
add
mov
aad
pop
jns
sbb
adc
xchg
sub
in
or
jb
mov
cmp
fmuls
push
dec
jmp
clc
in
jnp
loopne
fwait
divb
cmpsl
mov
iret
dec
inc
aad
test
fsubrs
pop
jg
add
repnz
push
jp
jecxz
inc
dec
outsl
notb
cmp
cmc
dec
xor
add
mov
jge
sbb
push
aas
mov
cwtl
inc
jne
inc
cmp
jmp
outsl
decl
jbe
rol
fstpt
mov
mov
outsb
push
xchg
and
mov
imul
fisttpll
lahf
jmp
xchg
adc
leave
std
and
add
arpl
lock
xchg
icebp
inc
shrb
push
sbb
jmp
sahf
dec
addr16
mov
insl
dec
nop
mov
js
cwtl
in
push
push
ss
jne
sub
cs
or
pop
fwait
xchg
ret
mov
inc
jge
jno
scas
and
jmp
jp
cmpl
push
inc
xchg
sub
push
mov
ljmp
cmc
pop
mov
adc
scas
punpckhwd
push
lock
or
ss
mov
xchg
test
aad
les
pop
inc
sbb
out
jl
fbld
lods
mov
stc
mov
xchg
mov
lods
std
cmp
cmpsb
sbb
lock
add
mov
dec
fsubs
ror
xor
mov
mull
xchg
mov
jne
sub
mov
add
cmp
lods
and
xchg
xor
jmp
xchg
shrl
xchg
lea
pop
ss
mov
xor
test
mov
sub
shlb
cltd
jo
lcall
pop
or
or
sub
xor
enter
int
push
jg
mov
mov
push
mov
and
xchg
mov
clc
cmp
dec
gs
insb
xchg
roll
xchg
stos
mov
imul
das
add
xor
stc
pop
sti
inc
loope
fstpl
mov
aam
lret
lock
fwait
roll
pop
sub
test
je
jo
into
dec
test
stos
jb
xor
cmp
mov
or
cmp
and
xor
mov
mov
mov
mov
shlb
cmp
pop
popa
insl
xlat
gs
fmull
or
xchg
std
ja
adc
or
in
inc
and
enter
mov
stos
cmc
push
stos
inc
jp
addb
scas
xor
push
sub
shlb
pop
js
iret
pop
in
shrl
push
sarl
add
imul
lcall
cmc
jle
mov
push
xor
je
aad
pop
or
out
fstpl
idivb
or
int3
imul
imul
lods
and
pushf
adc
stc
mov
in
call
addr16
pop
stos
std
lock
scas
in
daa
rcrl
sbb
int3
sub
or
dec
addl
dec
leave
cmc
xor
int3
aad
jmp
push
in
mov
push
jg
xchg
fisubrl
pop
jbe
stos
jb
jecxz
sti
or
mov
mov
adc
movsb
inc
pushf
fimull
ret
or
scas
jl
enter
bound
jecxz
cwtl
xchg
sub
add
jg
cltd
inc
and
lods
lock
mov
inc
pop
aaa
aad
inc
sub
dec
cmp
lods
sbb
mov
into
insb
jo
push
push
inc
pop
cld
call
cs
mov
add
xor
xchg
adcl
mov
mov
in
sbb
fisttps
outsl
xchg
sbb
call
sbb
cli
cld
xor
xchg
dec
mov
mov
pop
fsts
outsl
jns
jmp
mov
out
inc
movsb
pop
push
cmpsb
out
mov
cmp
xor
and
dec
xchg
mov
jl
jle
pop
sub
mov
std
pop
cmpsl
or
ret
sub
sub
mov
es
mov
fstpt
mov
pushw
dec
imul
sub
movsb
and
out
into
subb
xor
jns
inc
mov
mov
lods
jmp
test
adc
orl
mull
je
ljmp
adc
xchg
inc
loope
push
mov
stos
int
popa
jnp
test
out
sub
sbbb
and
mov
out
mov
bound
inc
cld
jmp
pushf
and
pop
rcrl
xchg
jb
hlt
add
repz
loope
adc
icebp
jae
aam
into
loope
fs
mov
repz
cmpsb
jnp
push
outsb
jl
das
into
popf
ret
cmp
cmpsb
aaa
sub
xchg
enter
lcall
lds
cmp
mov
aas
or
in
testl
divb
jae
es
fwait
js
mov
adc
jno
bound
xor
sti
xor
or
inc
adc
cs
xchg
cmpsl
mov
jns
push
out
lods
stos
mov
cmc
imul
inc
push
mov
lods
mov
imul
jmp
shll
xchg
push
sti
dec
mov
pushf
dec
inc
imul
mov
repz
cmp
mov
inc
jnp
pushl
fnstsw
lds
lret
fstps
out
jmp
in
push
adc
cmp
lcall
out
rclb
aaa
leave
mov
add
xchg
outsb
sbb
or
dec
scas
push
dec
cmc
xchg
mov
icebp
mov
mov
adc
push
hlt
sub
lods
pop
cmp
mov
mov
sbb
xor
mov
jo
jecxz
fcompl
jb
and
cmp
lods
and
lods
cmp
xor
fcomi
push
push
inc
or
adc
cmp
and
in
cmpl
sub
mov
dec
jb
lret
movsb
or
insl
mov
inc
icebp
cmpsl
jge
faddl
stos
mov
inc
xchg
adc
fsubl
outsb
mov
add
or
test
jae
mov
pop
popf
test
push
aaa
sbb
ja
test
sub
fucomip
fwait
test
push
xor
and
xchg
dec
lods
and
cvtpi2ps
xchg
packsswb
rcl
mov
push
dec
adc
pop
add
std
mov
mov
fs
inc
loope
nop
cmp
call
and
push
xor
enter
repnz
push
test
shl
sub
mov
mov
sub
lock
adc
mov
and
lds
mov
jmp
lret
push
dec
daa
in
jns
jo
sub
jmp
iret
mov
pop
push
scas
syscall
fisttpll
or
adc
sub
leave
cmpb
adc
mov
mov
test
iret
and
jle
inc
mov
cmp
add
push
add
fs
adc
push
mov
out
cwtl
push
in
or
xchg
gs
movsl
sub
jmp
jmp
mov
cmp
inc
sub
inc
repz
or
jne
mov
mov
fsubs
mov
int3
sti
sti
outsl
mov
aad
cmc
pop
out
cmpsl
mov
outsl
in
imul
mov
test
daa
jb
lods
lret
rorl
mov
pop
into
addr16
iret
cs
shlb
sti
pushf
arpl
sbb
or
cmp
loopne
xor
xchg
les
jg
push
jecxz
lahf
adc
decb
ficoml
and
lcall
jle
mov
jbe
and
loopne
jge
rcrl
test
cmp
fdivs
push
cwtl
dec
or
push
xor
mov
dec
sbb
das
out
in
or
cwtl
cmp
cmpsb
mov
dec
sbb
xchg
pop
mov
xlat
movsb
pop
ss
aam
cvtps2pd
xor
xchg
push
jl
aad
dec
mov
xchg
cltd
xor
mov
mov
inc
sti
xchg
fwait
jb
andl
sbb
cltd
test
stc
mov
call
sub
shrl
sahf
outsb
xor
bound
mov
scas
mov
cmp
imul
push
test
aad
mov
insb
filds
aas
icebp
and
mov
pop
out
dec
sub
cmp
cmpsl
jnp
inc
inc
jmp
fmuls
xor
insl
and
mov
sbb
inc
and
cmp
nop
rorb
mov
ljmp
xchg
pop
das
or
push
je,pn
lods
leave
pop
mov
lret
xchg
inc
rcr
mov
cs
int3
inc
test
test
call
sti
xor
mov
dec
sahf
setl
pop
fisttps
insl
nop
lods
cmpsl
cmp
sbb
pushf
xor
jae
pop
test
leave
inc
xchg
mov
das
daa
cmp
mov
jbe
ja
mov
inc
jae
rclb
sbb
sbb
sbb
push
dec
out
adc
ljmp
push
xor
stos
out
sbb
mulb
enter
push
push
push
insb
lods
dec
fmulp
dec
icebp
push
insl
test
cs
addl
popa
push
and
rcll
aaa
pop
mov
or
aad
xor
inc
data16
push
popf
dec
mov
lds
cmp
pop
js
sbb
mov
push
pop
xchg
sbb
jbe
dec
dec
jb
cmpsl
fucom
popa
xchg
add
inc
ja
out
mov
in
jp
vdivpd
lret
pop
adc
push
ret
int
mov
mov
xor
imul
mov
xor
xchg
inc
and
sti
popf
jae
stc
pop
push
aam
mov
adc
push
lret
daa
push
sub
jmp
xor
push
sbb
jle
and
inc
mov
int
push
in
aas
cmp
mov
lcall
clc
shlb
push
xchg
xchg
ret
pushf
fdivrs
inc
out
and
jno
xchg
sti
sahf
aam
push
es
fisttps
je
cmp
insb
pop
xchg
popf
cmc
repz
push
push
xor
or
xchg
pushf
pop
xchg
std
arpl
movsl
out
leave
lcall
imul
pop
adc
and
and
cmp
push
iret
inc
pop
push
mov
dec
cmp
push
sub
testb
and
popf
out
sbb
popa
imulb
push
jns
inc
leave
and
dec
sbbb
aaa
sub
inc
jo
push
inc
fwait
xchg
adc
sti
xor
out
sahf
pop
cmpsb
adc
stos
outsb
sbb
mov
mov
and
mov
xor
bound
adc
mov
mov
mov
cmp
jge
or
test
push
adc
js
inc
call
push
and
pop
addr16
mov
push
into
sub
mov
cmp
pop
push
inc
lea
cmp
je
push
lahf
stos
mov
jo
aas
iret
movl
fldenv
movsl
mov
inc
sbb
gs
icebp
add
sti
dec
adc
sbb
lods
adc
jg
not
add
shrb
lea
adc
cli
sbb
imul
into
je
hlt
cmpsl
push
xchg
mov
loope
mov
or
inc
cld
push
fnstcw
jg
inc
jns
xorl
imul
sbbl
sbb
xchg
mov
or
or
arpl
dec
cmpsb
sub
daa
mov
dec
jns
pusha
dec
leave
aaa
dec
lods
scas
jp
in
or
mov
dec
adc
les
hlt
imul
pop
inc
mov
sbbb
adc
lahf
fs
and
adc
test
icebp
popa
pop
mov
in
test
jmp
add
stc
jecxz
push
scas
dec
jg
sbb
aaa
imul
dec
and
cmpsb
fucomp
pop
inc
xlat
inc
mov
sub
cmpb
mov
aad
jae
jl
push
js
pop
in
fs
lock
cmp
cltd
adc
sub
decb
xchg
outsl
inc
xchg
and
je
sahf
clc
popf
or
enter
sbb
xor
out
lods
stos
xchg
cmp
test
lock
mov
xor
mov
or
pop
out
mov
repz
cmp
mov
xchg
cmp
xor
loope
pop
mul
mov
fmul
mov
cwtl
dec
fidivs
arpl
addr16
adc
inc
mov
orl
cmpsl
dec
or
loope
stos
int
xor
lret
testb
cld
rorb
addr16
dec
nop
push
push
mov
test
xchg
mov
lods
aad
push
clc
push
iret
rcll
test
jecxz
sub
xchg
xor
ja
or
das
out
bound
out
xor
lods
mov
dec
adc
nop
out
push
pop
movsl
pop
mov
xchg
das
test
cld
scas
xchg
outsl
icebp
sub
and
xor
cmp
les
jo
add
sub
cld
xchg
jge
sbb
mov
idivb
push
mov
dec
cwtl
and
clc
dec
sbb
sub
dec
call
outsl
dec
jnp
sti
stos
inc
jae
mov
cmpsl
into
stos
aam
data16
popf
in
imul
pop
pop
stc
jno
mov
mov
sub
cmpsl
adc
jno
xorb
out
out
aas
aam
xadd
mov
sub
xor
mov
dec
mov
notl
loope
sti
lret
sti
fbstp
stos
negl
mov
addb
jle
add
out
push
js
nop
sub
inc
cltd
inc
or
pop
jnp
push
jp
loop
sbb
mov
push
sbb
data16
inc
ficoml
fwait
add
dec
sbb
sub
push
adc
mov
dec
ja
push
pop
shrl
daa
mov
sbb
test
dec
sbb
pop
mov
shr
cltd
mov
cmp
add
or
aas
in
jb
arpl
cli
mov
or
rolb
sarb
popf
pop
or
sub
xchg
in
inc
push
pushf
mov
cmpsb
push
xlat
shlb
push
pop
hlt
fsubl
iret
cltd
push
cld
add
aaa
mov
movsl
adc
into
xchg
nop
dec
lret
push
inc
ja
arpl
out
jl
ljmp
rol
subl
inc
jnp
loopne
or
aas
cmc
and
mov
mov
mov
pop
sti
jns
test
mov
mov
or
jmp
pushf
cmp
fcmovu
test
jns
hlt
bsf
gs
rorl
cmpsb
sub
inc
or
out
jno
cmp
add
andb
gs
inc
xor
mov
stos
scas
lahf
pop
xchg
lret
pop
cltd
push
ret
sti
repnz
push
jnp
inc
jbe
jbe
cli
fst
cmp
aam
testl
or
dec
xor
cmp
das
xchg
xor
add
xchg
cmpsb
iret
imul
shrl
stc
aam
mull
fstl
add
mov
mov
leave
jp
stos
rcrl
pop
outsl
sbb
fcoml
nop
sbb
cmp
or
jo
sub
ljmp
dec
cli
popf
sbb
xchg
arpl
in
loopne
cld
mov
xchg
leave
pop
mov
pop
mov
scas
les
out
mov
call
xor
sub
pop
xchg
in
jb
in
movsw
and
ljmp
add
call
pop
popf
mov
push
leavew
xor
sbb
out
pop
out
ja
lret
and
test
dec
mov
sub
xchg
ds
jae
js
js
lret
rep
cld
in
out
or
lcall
add
bound
call
pop
push
fldcw
push
mov
or
jo
jbe
mov
mov
movsb
popf
popa
and
jnp
and
cwtl
mov
pusha
xchg
mov
push
std
sub
sti
popf
jle
add
ret
xor
or
cld
lea
lods
push
sub
jo
xchg
mov
popf
dec
mov
arpl
xchg
ja
fistl
jns
pop
xchg
push
xchg
mov
or
icebp
sbb
mov
push
test
add
cwtl
or
xchg
inc
and
xchg
mov
push
mov
aam
imull
and
std
ja
lock
xor
jle
dec
nop
jb
or
mov
movsb
mov
push
lret
jbe
addl
pop
mov
cmp
mov
jl
xchg
sahf
fsubrp
insb
lods
push
dec
sub
daa
xchg
pop
add
mov
dec
xchg
inc
sub
bound
nop
out
jge
notb
xchg
push
push
testl
push
out
nop
test
mov
pop
ja
adc
enter
mov
outsl
pop
sbb
icebp
into
shlb
ljmp
sbb
stc
cltd
add
jb
dec
pop
dec
xor
sbb
test
adc
fldcw
stos
mov
cld
scas
std
cmpsb
lods
rolb
dec
mov
fildl
cs
mov
cld
xor
ljmp
imul
add
dec
mov
pop
in
pushf
gs
out
push
mov
jecxz
fmulp
pop
into
jge
jne
pop
ss
push
dec
or
lcall
cmc
fadd
or
push
xor
aaa
loop
pop
jns
xchg
daa
fnsave
pop
in
pop
popa
aas
lcall
popf
mov
sub
int
mov
loope
test
lcall
adc
dec
stos
push
das
xor
les
push
loop
cmpsb
stc
jl
sahf
enter
sub
add
jp
push
cmp
push
mov
jmp
sti
sbb
adc
aas
rep
out
push
jle
aad
repz
mov
aad
push
push
mov
xchg
add
push
sbb
cmp
fcomps
add
das
pop
add
sbb
sbb
pop
lock
or
adcb
fimull
aam
dec
fwait
jns
stos
pop
pop
add
pop
cmp
lods
xchg
jb
sbb
mov
sbb
jge
mov
and
int
inc
ljmp
sub
mov
lods
mov
adc
xlat
jecxz,pt
push
cltd
jns
mov
loopne
xlat
push
ds
xchg
and
push
pop
sub
inc
add
mov
jle
jecxz
ljmp
aam
ds
fidivs
pop
jo
aas
inc
fcmovnb
subb
sub
push
mov
mov
xchg
idiv
or
dec
lret
push
push
lret
pop
fimuls
xchg
and
into
push
lahf
pop
jb
fcmove
insb
cmp
cmp
pop
jecxz
pop
sub
pop
or
adc
jno
es
fbld
cmp
pusha
sub
xor
test
and
in
icebp
addb
add
mov
dec
add
dec
jns
jg
out
stos
leave
test
shlb
pop
mov
bound
in
aaa
cltd
pop
test
add
xchg
xlat
push
sbb
lret
mov
out
cwtl
jbe
mov
cmp
pop
loop
test
jbe
fcoml
test
xor
daa
sub
rolb
and
mov
push
mov
lea
adc
jns
test
dec
sti
mov
aad
jne
call
xchg
mov
shlb
jne
outsb
ds
mov
aam
mov
and
shrl
mov
daa
and
rcrl
mov
or
lret
shrl
jnp
pop
loope
stc
cwtl
out
ljmp
and
mov
jge
idivl
lods
lret
adc
jb
add
pop
mov
dec
fs
bound
stos
cmc
and
push
xor
pop
dec
js
out
pop
and
jae
jnp
mov
mov
js
cmp
mov
or
cmpsb
dec
lods
adc
mov
jl
ja
push
push
aas
inc
loopne
daa
push
insb
sbb
cwtl
call
arpl
mov
dec
rcll
xchg
into
add
xchg
ret
cmp
pop
rcll
js
lock
push
fwait
int3
add
push
orl
rcrl
cmp
sahf
loop
cli
mov
out
js
sub
xchg
lcall
data16
add
inc
scas
cmp
roll
add
std
dec
repz
test
rorw
in
xor
and
jmp
movsb
xchg
push
leave
dec
xlat
popf
insl
scas
aaa
push
pop
repz
pop
daa
iret
jp
jecxz
jb
pop
adc
jno
imul
or
rcll
inc
mov
aas
or
push
jp
repz
inc
insb
dec
sub
cli
and
dec
sub
add
push
xchg
add
mov
rorb
adcb
inc
sub
rcr
or
adc
sub
in
jne
mov
push
push
leave
cmc
adc
pop
pop
xchg
sub
jb
xchg
cltd
cmp
add
sbb
in
out
insl
addl
jns
imul
enter
push
lcall
sub
fwait
rcrb
jmp
and
lahf
fwait
jge
mov
adc
negl
inc
rolb
inc
into
push
gs
aaa
xor
cli
or
and
dec
pushf
repnz
addr16
or
insl
inc
dec
pop
bnd
mov
lods
ds
pop
mov
fsubrs
ljmp
mov
cltd
clc
jmp
or
or
cwtl
cwtl
subb
iret
es
or
cmp
sub
adc
setge
gs
cltd
cmp
shlb
add
sub
repz
xor
jbe
mov
pop
scas
mov
mov
lds
pcmpgtd
adc
mov
incb
sbb
js
xor
in
movsl
sub
mov
push
cmpsl
hlt
pop
inc
mov
inc
sub
add
jne
cli
pop
sahf
in
mov
or
xchg
ja
jmp
loopne
inc
lods
push
out
push
or
adc
ja
gs
push
pop
rcll
xchg
or
sbb
adc
mull
add
add
fs
mov
movsb
xchg
out
outsl
and
xor
mov
xlat
mov
jge
sub
or
xchg
cmp
mov
xchg
out
dec
or
inc
imul
loopne
lret
adc
lods
int
xchg
xchg
cmp
cwtl
loope
and
mov
insb
pushf
xchg
mov
and
sahf
hlt
pop
int
das
movsl
ret
dec
and
inc
pop
test
push
push
or
xor
mov
gs
test
pop
pop
cltd
push
test
in
outsb
inc
out
fsubl
xchg
iret
idiv
mov
mov
xchg
ret
aam
jno
jbe
mov
or
jmp
jmp
imul
mov
and
outsb
xchg
sub
int
push
adcl
jg
iret
in
mov
pop
adc
jecxz
rol
sub
xchg
dec
int
ljmp
idivb
sub
or
add
xchg
clc
mov
in
adc
mov
pop
push
mov
mov
ss
test
push
nop
jo
jno
imul
mov
stos
push
das
or
inc
xor
sub
dec
mov
shr
push
jp
fbld
and
std
lret
sub
mov
pop
shrl
icebp
jmp
les
mov
mov
outsl
sbb
pop
mov
inc
add
mov
mov
dec
cmc
pmulhw
incb
xchg
stos
in
sub
les
inc
fcmovne
movsb
xchg
dec
and
sbb
pop
jns
pop
cmpsb
inc
jb
mov
sbb
push
lds
in
in
ja
sahf
sbb
dec
xor
shll
or
adc
dec
mulb
xchg
jg,pn
add
movsb
xchg
sarl
push
in
pop
xchg
pop
outsb
ljmp
jp
jg
and
xor
imul
fmulp
inc
push
cld
ljmp
cmpsl
sbb
movsb
inc
push
stc
jl
and
dec
adc
les
nop
cmpsb
loopne
cld
xor
jmp
cmp
dec
or
xlat
push
jle
or
cmp
cmp
lods
int3
cmp
xchg
xchg
xor
arpl
subb
pop
xor
aam
sub
jae
add
inc
mov
dec
fs
inc
popa
xor
jge
jne
mov
xor
sbb
adc
cwtl
test
daa
sarl
mov
xchg
push
int
xlat
ffreep
movsb
sbb
popf
and
nop
pop
dec
sub
xchg
jne
inc
or
xchg
mov
lahf
jbe
or
clc
ljmp
adc
xor
and
fwait
ja
shll
pop
pop
gs
in
loope
daa
mov
jbe
mov
mov
mov
inc
movl
jno
das
inc
add
bound
or
xor
aam
es
sbb
cmp
jmp
fsubrl
lods
add
add
push
loop
jns
imul
dec
lds
xchg
pop
popf
dec
lret
jbe
imul
outsl
lods
push
mov
gs
psrlq
mov
addr16
mov
inc
pop
jnp
mov
mov
sub
clc
mov
mov
adc
movsl
and
pop
fadd
jbe
xchg
int
inc
shrl
pop
movsl
inc
fistl
xchg
scas
movsb
or
jge
push
and
cltd
and
icebp
xchg
push
loop
sub
mov
mov
pop
jle
loop
mov
push
mov
inc
mov
outsb
loopne
int
xchg
mov
jb
xor
mov
hlt
shll
outsb
push
jle
dec
push
std
loope
sub
push
cmpsl
mov
mov
mov
xchg
sarb
push
stc
push
inc
pop
sub
mov
ds
jmp
mov
jbe
lret
neg
or
add
imull
cmp
xchg
bound
xchg
call
call
cmpsl
mov
push
scas
dec
aad
mov
outsl
repnz
sbb
cs
pop
pop
fldl
fsubs
mov
jmp
fwait
js
aam
ljmp
jecxz
pop
dec
std
cmp
stc
and
jle
mov
aaa
cmp
jmp
sbb
stc
mov
in
gs
loope
dec
test
pop
fadds
repnz
or
jg
cmp
mov
shll
int
and
xchg
cld
push
clc
add
out
cltd
jo
test
movsb
inc
xchg
push
adc
mov
pop
idivl
in
cmp
sbb
mov
mov
or
pop
sub
jg
stos
sbb
das
mov
jns
imul
fbld
stos
repnz
iret
add
pop
jle
lret
fadds
rorl
stos
add
sbbb
int3
inc
cmpsb
dec
adc
mov
cmc
push
ret
xchg
std
outsb
test
cwtl
pop
ret
movsl
test
xor
inc
nop
stos
sub
xchg
xor
movsb
shrb
dec
leave
mov
cltd
fcompl
clc
imul
jae
mull
cmp
fmull
xor
rorl
enter
adc
and
sub
or
jne
pop
dec
mov
call
cmpsb
adc
mov
jbe
adc
aam
add
mov
loope
xlat
jge
sub
popf
mov
andb
pop
mov
pop
jno
sbb
pusha
leave
lods
mov
icebp
xchg
loop
rclb
out
and
xor
mov
test
jmp
lfs
xor
cmp
mov
negl
rclb
mov
dec
pop
aas
rcll
arpl
pop
lret
push
mov
fwait
insl
insb
inc
xchg
cmp
jg
pusha
sbb
fbstp
test
jle
mov
in
sub
data16
in
sbb
aam
cmp
jbe
and
ror
pop
lock
jo
outsl
sub
fnstcw
or
or
mov
test
mov
sbbb
jl
int
data16
call
mov
lods
es
sub
je
je
mov
or
mov
les
xor
shll
cld
fildl
jae
pusha
or
and
lahf
popf
lcall
dec
adc
rolb
pop
sbb
mov
lcall
pop
ficoml
pop
pop
sbb
mov
push
in
into
sbb
aaa
sbb
adc
xchg
push
in
xchg
jo
and
push
jg
xchg
arpl
je
xchg
adc
adc
mov
mov
out
jbe
sub
xchg
lahf
je
jb
xchg
daa
out
push
pusha
inc
push
xchg
scas
mov
lahf
jae
imul
jo
or
adc
adc
into
and
adc
repz
loop
test
jp
sbb
sarl
outsb
push
jecxz
dec
repz
jl
fstpl
mov
sahf
add
lahf
sub
lahf
mov
add
into
scas
rcll
jbe
or
sub
imul
stos
cmp
int
push
jecxz
sti
in
pushf
mov
in
pop
enter
lds
and
pop
sub
insl
nop
rcr
leave
xchg
inc
mov
stos
inc
jecxz
test
cmp
out
xchg
fwait
and
bound
xor
out
stos
push
xchg
sub
cs
pop
jns
mov
ljmp
subb
mov
push
enter
xchg
inc
pop
xchg
test
push
inc
xchg
xor
int
sahf
cmp
push
dec
movsl
sbb
imulb
xlat
iret
xchg
and
fiadds
mov
imul
push
fldenv
mov
lock
dec
inc
mov
push
inc
and
xchg
sub
add
ljmp
and
cmp
pop
mov
cmp
imul
sub
sbb
movsl
icebp
ss
cmpsb
rorb
daa
int3
test
jge
imul
fsubs
lods
lock
sti
lret
iret
loope,pn
lcall
ss
fs
push
xor
mov
es
fsubs
pop
cmpsl
or
arpl
sub
push
adc
or
jle
jg
jns
insl
sbb
stos
sub
push
andnps
xchg
push
push
sub
ret
cltd
loopne
add
or
es
loope
subb
mov
and
pop
mov
adc
cwtl
mov
leave
in
imulb
sarb
add
xor
sti
pop
js
repz
mov
mov
jle
lcall
addr16
sbb
mov
xor
adc
jae
push
add
and
mov
mov
adc
xor
dec
cmpsb
jns
bound
jle
sti
mov
jne
xchg
enter
jp
sbb
push
jno
fildl
popf
jno
dec
leave
add
and
add
insl
scas
xchg
push
insb
jle
xor
mov
pop
mov
jns
jg
mov
add
js
adc
movsb
lds
notb
mov
adcb
clc
call
inc
stc
stos
lods
frstor
cmpsl
loopne
sub
adc
cltd
jnp
fwait
je
imul
movsb
pop
and
mov
push
sub
stos
inc
push
rcrl
iret
cmp
repnz
in
jnp
pop
popa
push
aas
arpl
inc
jg
ret
out
dec
pushf
sub
icebp
les
repz
adc
outsl
insl
stos
popa
mov
ds
cmp
mov
dec
jnp
and
pushf
enter
and
inc
sbb
or
xor
sub
or
vpsubusb
test
enter
push
add
mov
adc
movsb
lcall
push
push
sbb
aaa
leave
or
xchg
lea
xor
ret
movsl
outsl
aam
lods
or
push
jns
adc
aad
fidivrs
and
fldl
insb
jns
mov
pop
push
jbe
enter
mov
or
int
in
jle
cmp
add
js
or
popa
cmp
fnstsw
enter
xchg
push
gs
jp
push
pushf
or
in
cwtd
and
mov
outsl
mov
inc
xchg
daa
out
aad
cltd
out
xlat
cmpsl
mov
cmp
dec
xor
jae
loop
xor
shlb
mov
push
or
adc
xor
mov
lret
into
push
stc
shlb
jne
aas
mov
cmp
inc
aas
repnz
sub
inc
ljmp
jg
imul
test
cmp
and
sub
sub
and
mov
mov
mov
cmp
test
inc
or
outsb
adc
cli
test
int
in
das
inc
ss
sub
mov
jb
xor
pop
aas
mov
add
stos
or
mov
xor
pop
mov
sbb
add
daa
pusha
cmp
dec
sub
xchg
sub
xchg
pop
add
dec
push
inc
out
dec
aaa
lds
mov
cltd
enter
out
jnp
dec
pop
mov
mov
stos
testl
nop
mov
repnz
add
push
xchg
add
insb
cmp
push
fildll
sub
scas
adc
out
xor
jbe
mov
mov
jne
pusha
push
push
popa
in
adc
xchg
leave
out
ljmp
aas
loop
xchg
enter
test
fsubs
mov
dec
sbb
jmp
mov
ljmp
popa
rcl
ss
cmp
outsb
ret
cmc
xor
cltd
cmc
incb
addr16
out
sti
xor
fistpl
jle
inc
arpl
lods
mov
dec
and
out
and
or
xlat
in
jmp
call
clc
imul
add
push
aaa
adc
push
sbb
pop
inc
push
push
add
hlt
ljmp
in
mov
push
xor
sbb
insl
dec
push
pop
or
fs
mov
pusha
xchg
mov
test
pusha
mov
inc
push
sub
sub
rorb
mov
scas
int
xor
out
mov
insl
mov
movsb
jge
or
inc
sub
iret
xchg
loope
std
icebp
mov
test
mov
cs
repz
mov
je
idivl
rcll
jl
pushf
and
cmp
sbb
xor
adc
insl
or
in
sbbl
pop
cmp
push
or
les
dec
and
add
das
lahf
je
jbe
xor
mov
ret
and
mov
adc
push
scas
filds
pop
lret
fcoml
sbb
inc
popa
xorb
std
xchg
mov
inc
cli
imul
jle
sbb
test
and
dec
push
movsl
popa
iret
lret
loope
rorl
pop
xchg
push
and
mov
sub
lea
dec
adc
or
nop
aas
fsubrs
clc
mov
xlat
sbb
aam
sub
mov
cmp
movsb
aam
push
push
out
push
int3
jne
mov
insl
xlat
cmp
imul
xchg
jno
std
cmp
repnz
and
add
xor
dec
stos
popa
dec
dec
push
sub
ret
add
out
cmpsl
jb
es
enter
fsubrl
outsb
inc
gs
std
add
xchg
xor
roll
stos
fsubl
ljmp
bound
leave
jne
out
xlat
insb
cmp
out
xchg
push
sbb
mov
stc
outsb
shlb
sub
mov
jno
sub
and
xchg
xchg
nop
jno
xlat
jp
sbb
jbe
dec
jl
cmp
inc
and
or
xor
xor
dec
cmc
popa
pop
pop
pop
xchg
mov
outsb
dec
cmpsl
push
jne
push
push
xorl
push
jns
das
repnz
sub
repnz
and
mov
into
mov
sbb
aam
cli
add
mov
sub
fbld
filds
mov
icebp
stos
mov
cwtl
daa
or
mov
inc
ret
iret
int
xchg
outsb
mov
mov
sbb
xchg
and
and
push
pop
stos
add
and
or
mov
stos
push
pop
adc
inc
int3
xchg
lret
ja
jmp
jmp
cmp
and
fwait
mov
mov
mov
jne
lods
mov
mov
push
adc
pushf
sbbb
rorb
repz
jecxz
leave
or
pusha
fwait
sbb
sbb
or
idivl
arpl
sbb
add
imul
das
xchg
outsb
pop
clc
mov
dec
sub
sub
xchg
mov
ss
and
std
add
test
pop
aaa
cs
mov
adc
js
mov
pushaw
filds
flds
jne
dec
imull
mov
aad
test
in
cmc
jo
or
lds
enter
dec
mov
scas
jno
ret
dec
push
loope
hlt
shll
cmpsb
cli
and
neg
gs
call
add
mov
leave
xor
inc
mov
lret
dec
enter
loop
jbe
ljmp
imul
mov
movups
mov
pop
mov
fwait
movsl
mov
push
lods
in
dec
stos
mov
inc
out
fs
push
xchg
fwait
aam
ficoml
test
mov
or
sbb
call
mov
mov
dec
pop
and
pop
jae
mov
roll
adc
jecxz
xchg
xchg
aad
xor
and
arpl
fsts
testl
adcl
push
mov
push
mov
sub
fbld
cld
test
pop
xchg
jg
jne
mov
mov
xchg
in
dec
cmp
inc
lds
sub
lcall
xchg
adc
sbb
shl
xchg
jne
dec
or
jge
cld
and
ljmp
sbb
lahf
xchg
cmp
push
pop
or
ljmp
shlb
push
jmp
xor
mov
fstpl
mov
xor
sbb
pop
fiadds
out
push
push
movsb
pop
movsl
inc
cld
clc
mov
inc
daa
push
repz
pop
mov
add
sbb
xor
adc
mov
jge
xor
cli
stos
dec
enter
push
in
push
mov
or
loopne
ret
out
lods
jb
outsb
sub
in
xchg
xchg
movsb
cmpsl
push
lods
jp
xchg
out
sti
fldenv
pop
fstpt
xchg
or
negb
cmpsb
xchg
xor
rorl
mov
test
jne
sbb
push
jnp
leave
lcall
sub
lock
sti
pop
test
les
sbbl
cltd
push
and
lcall
movsb
xchg
leave
leave
ss
sub
pop
xorl
adc
inc
jb
add
inc
dec
jl
cwtl
add
mov
push
sub
sbb
inc
fidivl
add
cli
inc
int3
cmpsl
sub
add
cmp
into
in
mov
lods
pop
mov
or
ret
arpl
sbb
mov
adc
inc
mov
adc
and
call
scas
lahf
dec
mov
in
sub
les
repz
aas
inc
adc
clc
das
inc
rcrb
insl
push
sbb
inc
je
nop
adc
out
xor
jmp
jo
icebp
inc
pop
ss
cltd
and
mov
mov
clc
pop
mov
dec
sahf
and
push
dec
sbb
popl
ficoml
mov
orl
fldenv
cmpsl
insb
xchg
xor
arpl
lret
lods
lds
leave
xor
xor
stos
or
pop
jl
sbb
cwtl
or
pop
sti
push
xchg
dec
mov
pop
pushf
push
das
push
mov
movsl
pop
sbb
jb
lods
fwait
sbb
int3
enter
pop
dec
sarb
mov
pop
lods
cmc
rolb
aas
push
push
ds
cs
inc
ror
pop
push
cld
mov
adc
xchg
in
dec
icebp
inc
lock
push
xchg
es
cmp
sub
pop
aam
cmpsl
mov
jge
cmp
gs
mov
mov
sub
incl
sbb
mov
xchg
adc
mov
mov
pop
inc
stc
or
imul
rcrl
js
jl
cmp
inc
sbb
cmovns
test
jmp
pusha
pop
jb
xchg
xchg
aam
dec
fdivrs
mov
arpl
bound
add
imul
sub
add
repnz
das
mov
in
fisubrl
mov
je
and
loop
outsb
push
pop
into
ret
popa
je
int
cmp
add
int
cmc
pushf
mov
lea
adc
fs
lods
pop
xchg
and
or
pusha
and
movsb
sti
rolb
mov
negl
stc
fldt
jno
mov
push
and
add
and
in
test
cmp
xor
or
shrb
loop
and
cs
in
pop
repz
push
mov
mov
lds
dec
ja
stc
sub
mov
xor
adc
aas
mov
sbb
pusha
sarl
les
adc
inc
and
movsb
shl
mov
push
loope
testl
popf
movsl
push
in
imul
xor
nop
outsb
jne
inc
mov
decb
jne
jo
pop
push
fwait
mov
in
icebp
stc
and
push
add
add
cmp
js
ret
pushf
clc
adc
mov
stc
or
xor
fisttpll
xor
jl
cmp
fstpl
pop
jbe
and
pop
jo
dec
imul
test
jg
inc
pop
mov
popa
or
sbb
pop
mov
xor
sbb
inc
xchg
xchg
lods
in
and
jg
sahf
or
std
mov
adc
push
adc
loope
sbb
fstps
lcall
repnz
dec
lea
xchg
push
xchg
xchg
test
xlat
movsl
pop
mov
call
inc
mov
bound
or
jle
outsl
jge,pt
jl
and
insl
pop
mov
jbe
xchg
hlt
xorb
dec
popf
std
push
mov
outsl
adc
sbb
cmp
fisubs
repnz
mov
loop
insl
mov
js
mov
push
sbb
xor
ja
vmread
std
stc
sbbb
ret
jmp
jge
push
cmp
fldt
and
fnstsw
xchg
xchg
ret
mov
cmp
stos
lret
mov
shl
ret
mov
cmp
mov
gs
mov
es
xchg
xchg
mov
ja
pop
adc
mov
frstor
aam
add
movsl
mov
in
xchg
fcmovnu
sub
xor
out
inc
sbb
dec
jl
mov
push
mov
sbb
ds
jmp
sahf
aas
int
stc
dec
in
aad
sub
add
xchg
das
into
adc
rorb
leave
stc
ljmp
push
add
jnp
xor
inc
nop
dec
rcr
ret
jge
mov
aaa
add
adc
imull
shl
adc
dec
and
leave
shl
cmpsb
dec
sub
xor
cmp
xor
cwtl
lea
add
inc
mov
push
outsb
aas
dec
int
jne
clc
pushf
pop
inc
mov
and
xchg
push
and
jmp
ja
gs
stos
pop
call
stos
jl
inc
stos
jne
cwtl
fidivl
stos
mov
arpl
fisubrl
lock
popf
lret
push
in
xchg
in
sbb
mov
sub
insb
sbb
in
jnp
nop
outsl
dec
in
sahf
sub
mov
iret
imul
and
xchg
imul
xchg
dec
xchg
dec
cwtl
stc
cmp
inc
jg
jmp
mov
pop
pop
jg
dec
mov
std
jno
fisttpll
scas
cwtl
sub
ds
push
inc
lea
out
dec
scas
cmp
push
and
mov
xchg
adc
mov
mov
pop
cltd
sbb
subb
mov
push
jnp
xor
test
incb
shl
mov
jmp
xchg
idivb
loopne
fbstp
xchg
imul
popa
stos
mov
ficoms
out
enter
cltd
push
cltd
je
push
inc
mov
dec
insb
int3
pushf
aas
scas
and
loope
mov
outsb
movsl
cwtl
out
popf
add
ss
dec
in
leave
xchg
cmp
dec
jge
and
mov
movsb
lret
cmpsl
data16
cli
push
add
insl
xlat
add
inc
mov
jae
shl
in
in
pop
stc
data16
mov
iret
insb
jnp
adc
jmp
push
cli
xor
xchg
imul
gs
cmpl
inc
int
cwtl
inc
arpl
inc
push
test
mov
xor
push
add
mov
cld
mov
xchg
outsl
test
lret
pop
adc
pop
outsl
jl
cmp
aam
or
pop
mov
xchg
jge
cltd
inc
movsl
cmp
enter
inc
adc
shrb
jne
cltd
das
mov
mov
cltd
push
movsb
daa
xlat
push
sub
mov
cmp
add
mov
addb
mov
adc
push
pop
adc
ret
dec
jae
adc
sub
into
fsubrp
and
add
test
out
out
lcall
in
shll
ret
fwait
out
fs
adc
xor
dec
xchg
jnp
cmp
adc
call
inc
popf
or
mov
lret
pop
aam
jle
xchg
cs
sub
add
es
pop
xchg
adc
or
into
shlb
dec
add
outsb
cmp
xchg
insb
mov
int
out
loope
adc
mov
rolb
fcoml
into
das
jg
pop
test
int
sahf
or
or
push
sub
cmp
sbb
inc
mov
push
sub
lcall
aad
adc
in
roll
insw
inc
jge
jns
adc
insb
imul
adc
ret
xlat
iret
pop
mov
jbe
lret
adc
cltd
pop
sbb
in
mov
xchg
popa
fldl
sbb
nop
sahf
mov
cmpsb
cmpsl
mov
cmp
cmp
push
mov
cwtl
jmp
cmp
sar
xchg
mov
or
pop
js
mov
sahf
xchg
lock
sbb
lods
mov
sub
in
pop
daa
push
jns
pop
cltd
jp
hlt
xchg
cmp
cmp
mov
insb
adc
mov
fists
mov
pop
daa
cmp
dec
mov
loope
adc
leave
repz
out
push
mov
iret
cmp
insl
icebp
jge
imul
jl
cmp
add
jp
xchg
shr
mov
xor
sub
fsubrs
mov
fsubl
or
push
leave
je
loope
sub
cmp
push
test
cmp
mov
dec
scas
fildl
pop
enter
pop
xchg
mov
mov
fstl
outsb
test
sub
xchg
in
add
cmp
or
xor
sub
das
pop
dec
push
aas
and
frstor
popf
mov
imul
je
and
rclb
inc
dec
test
pop
mov
leave
mov
jnp
pusha
pop
in
xchg
xorb
fldt
xor
scas
push
lock
pop
mov
cmovs
ss
and
ret
adc
popf
inc
mov
int
imul
mov
sub
shrl
scas
movsb
data16
bound
gs
in
xor
dec
xchg
fiaddl
cld
imul
adc
out
and
push
jo
dec
and
ds
or
mov
ja
aaa
and
xlat
mov
push
inc
andb
iret
sub
sub
jge
stos
das
stc
mov
mul
cwtl
mov
incb
sub
fildll
nop
xchg
stc
out
and
ret
xchg
movl
or
aaa
xchg
fwait
int3
test
test
mov
stc
shrl
jnp
jae
jmp
test
pop
adc
popa
test
xchg
dec
and
inc
cmc
mov
stos
ja
out
lahf
push
kmovw
push
mov
mov
push
mov
out
adc
sbb
add
jne
cltd
xchg
js
cmp
mov
and
call
cmc
dec
fisubl
push
sahf
and
jg
icebp
aam
xchg
xchg
or
xchg
shlb
dec
mov
in
stc
inc
push
push
outsb
sub
pop
sub
stos
shlb
in
push
dec
mov
lret
dec
xchg
dec
shlb
sbb
test
add
out
push
lods
outsb
and
jge
or
push
mov
loope
addr16
add
aad
out
cmp
xor
mov
mov
ja
cmp
push
jo
add
jmp
add
mov
ljmp
sti
in
pop
iret
or
aam
es
mov
rep
push
or
int3
popa
and
inc
mov
or
dec
jmp
popf
mov
inc
movsl
call
fildl
jecxz
icebp
adc
dec
pop
mov
cwtl
or
jle
aas
cmp
inc
leave
les
jno
and
or
enter
xchg
xchg
pop
adc
xadd
or
mov
movsl
mov
mov
outsl
xchg
xchg
lods
je
mov
push
in
cmc
jmp
mov
mov
insl
cltd
jmp
mov
xchg
dec
test
sub
mov
xchg
lret
xor
adc
loope
cmp
mov
mov
or
lret
xor
ljmp
in
jne
cmpsl
mov
inc
movsl
pop
cmp
nop
jns
mov
iret
or
dec
icebp
push
push
sbb
and
push
mov
in
into
test
imul
push
mov
cmc
fistpl
je
aam
aad
dec
lds
test
jge
xchg
mov
push
cmp
ds
inc
int
inc
sbbb
push
push
jbe
fidivrl
data16
add
out
jge
lret
out
jmp
lds
jp
sbb
pop
jns
mov
ss
push
lods
sub
das
movsb
cmc
ds
push
jge
mov
cltd
or
pushf
arpl
ss
pop
sbb
flds
dec
dec
imul
add
jl
xchg
xchg
mov
iret
in
inc
mov
xor
push
enter
mov
jno
cmp
leave
sti
fnsave
test
mov
push
lea
sbb
daa
cmpb
test
jl
sub
lods
jmp
inc
sub
jnp
clc
test
cs
out
std
clc
adc
out
inc
pushf
jmp
sti
incb
aam
fucomi
repz
rcr
push
test
daa
xchg
cmpsl
add
stos
mov
or
xchg
loope
clc
xor
or
mov
cmp
pop
mov
xor
pop
int
adc
adc
dec
scas
ja
jp
aas
sahf
mov
inc
mov
adc
jecxz
rcll
pushf
inc
ja
sub
data16
outsb
mov
sub
fstl
mov
pop
iret
add
xchg
inc
jecxz
fstpl
shlb
or
aam
jge
sahf
ret
or
add
pop
in
mov
mov
inc
inc
sub
clc
jno
leave
pushf
aad
sbb
cltd
jae
dec
add
xor
loop
dec
inc
pop
jmp
clc
cmp
jb
fcomi
das
xor
lret
popf
add
dec
loop
inc
js
sub
inc
popf
jle
mov
adc
xchg
outsb
jmp
fnstenv
xlat
sub
test
sar
push
leave
push
lods
xchg
pop
inc
clc
movzwl
sti
lcall
jge
rorl
mov
aas
pop
shrl
subb
outsb
push
add
mov
or
pusha
jns
push
cld
push
leave
mov
xor
mov
xchg
or
movsl
push
sub
or
cmpsb
cmc
loopne
add
fxtract
hlt
repnz
inc
rep
aaa
mov
xchg
lret
pop
sub
mov
push
push
sub
cltd
imul
inc
jbe
mov
popf
dec
pusha
outsl
dec
or
fwait
test
xchg
stos
popf
cmpsl
popf
jp
jmp
pop
stos
leave
sbb
xchg
aad
ficoml
in
xchg
sub
addr16
shlb
push
xor
ficoml
orb
aad
mov
movl
fwait
sahf
sti
mov
inc
repz
and
or
xchg
pop
insb
cmp
gs
jl
push
xchg
mov
lods
inc
mov
sub
mov
jmp
lods
add
out
mov
testl
in
xchg
xor
lahf
pop
mov
pop
rcll
push
sti
dec
cmp
or
shrb
gs
pop
loop
es
aam
pop
shlb
nop
out
mov
cmp
mov
cmp
mov
mov
xlat
sbb
mov
inc
aam
dec
jo
jno
mov
xor
in
out
pop
jmp
sahf
aam
lret
or
add
cltd
out
fistl
out
jle
into
inc
sub
pop
sbb
dec
mov
add
inc
push
xor
mov
push
scas
test
std
gs
cs
lods
adc
popa
popa
lds
adc
repnz
in
pushf
add
test
cmp
dec
mov
sti
xchg
jl
out
icebp
outsl
sbb
xchg
ja
addr16
int
pop
cli
arpl
add
jae
pop
xchg
dec
xlat
ja
js
pop
inc
paddd
push
push
cld
lods
movsl
out
jl
sbb
pop
adc
mov
cmpsl
jmp
inc
mov
lea
shl
jp
loope
fldl
push
cmpsb
mov
sbb
into
inc
in
xor
sti
mov
mov
hlt
mov
xor
addr16
les
pop
test
cli
add
pop
jo
add
addr16
sarb
push
arpl
cs
idivl
push
inc
mov
pop
into
mov
mov
push
cli
mov
fsubl
in
inc
lds
or
test
and
sbbl
pop
popf
xchg
dec
cltd
cmp
xchg
push
mov
mov
lods
and
add
js
cmp
and
dec
test
in
psllw
mov
mov
fstpl
xor
stos
popf
push
inc
les
pop
sbb
mov
push
inc
mov
testb
inc
mov
ja
shrb
xchg
mov
mul
mov
jbe
dec
adc
cmp
stos
mov
test
mov
in
add
push
jg
stos
adc
sbb
repnz
call
xor
cmp
hlt
adc
movsb
lcall
call
pop
int3
xchg
inc
insb
jge
jnp
mov
stos
int
pop
or
ljmp
add
xor
rorl
sbb
aas
sub
cmp
mov
test
xor
lods
fdivr
pop
aas
pushf
or
lods
icebp
nop
xchg
loope
or
mov
imul
es
int
fcmovu
pop
sub
rcll
add
cmpsl
push
shlb
jle
icebp
xchg
sbb
mov
mov
int3
cmp
sbbl
fwait
stos
jbe
jno
and
fildll
lcall
adc
test
pop
mov
ja
cmp
xchg
stos
es
push
mov
ja
test
mov
mov
mov
mov
dec
rol
es
mov
out
dec
movsl
jne
xor
and
pop
test
fimuls
ror
add
and
cmpsb
push
lcall
pop
imul
test
popa
outsl
push
push
mov
push
mov
loop
inc
insb
je
call
jns
xchg
jmp
shrl
cmpsl
loope
mov
repz
mov
fsub
invd
xlat
mov
cwtl
cmp
scas
fdivr
xor
outsb
add
insb
add
sti
int
pushf
les
bound
ret
clc
jp
inc
mov
fwait
mov
clc
loope
mov
jno
inc
arpl
or
mov
cmp
cwtl
xor
adc
sub
cmp
cmp
mov
inc
fbstp
rorl
enter
inc
xor
jmp
sub
nop
out
sbb
outsb
add
pop
je
popa
movsb
add
add
cli
push
mov
cmp
loopne
int
push
test
shll
cltd
aas
jbe
test
fcomi
pop
test
push
jl
outsl
sbb
xchg
adc
es
pop
xorb
bound
xor
insb
aad
pop
jo
rorl
scas
mov
lret
rcr
popf
inc
shrl
repz
or
das
mov
lret
fcom
sahf
mov
out
jo
out
mov
leave
cmpsl
in
idivb
dec
loop
sbb
mov
lods
in
aas
bound
dec
cmpsl
jecxz
ds
int
jmp
and
and
or
add
cwtl
ds
jns
fcomi
iret
xor
xchg
inc
bound
cmp
popa
cmc
sub
cmc
xchg
and
in
pop
push
pop
es
mov
movsl
es
test
enter
mov
push
adc
sub
mov
and
shlb
mov
in
inc
cmp
insl
jns
cmp
mov
dec
loop
jbe
inc
lds
sbb
or
jno
stos
pop
test
mov
and
scas
xadd
push
mov
test
lahf
xchg
test
and
sbb
mov
jg
sbb
pop
fadd
aaa
or
into
xchg
fcmovu
roll
mov
mov
cmp
sbbl
int
sbb
push
jp
mov
mov
lret
iret
clc
andb
lock
ljmp
cmc
test
mov
fstps
pop
cmp
jns
lret
adc
lret
xor
aaa
pop
subl
sub
add
call
cmp
add
add
add
dec
jno
lea
xorl
addr16
and
cs
jno
ja
add
xor
and
sbb
sub
das
ss
daa
sub
add
pop
jae
xor
imul
push
add
sbb
sub
add
xchg
outsl
jae
inc
push
pop
dec
addr16
dec
add
nop
cmp
push
nop
dec
add
int3
sbb
add
nop
add
inc
es
nop
add
int3
adc
pop
pop
push
test
outsl
das
nop
nop
test
add
pop
jo
jmp
sbb
sbb
add
inc
xchg
add
decl
add
pushl
and
dec
add
int3
add
push
pop
inc
jne
cmp
dec
adc
push
xor
jo
add
incl
lea
xor
nop
add
push
and
add
add
adc
incl
add
addl
add
add
add
mov
add
add
add
push
nop
mov
ja
add
incl
add
int3
and
jne
add
add
add
inc
ds
xor
sub
incl
add
bound
push
mov
and
add
add
nop
add
adc
nop
xchg
push
cmp
add
nop
add
jns
jg
imul
add
inc
js
nop
outsb
sbb
int3
inc
push
push
outsb
mov
outsl
daa
jo
push
outsl
push
sub
pop
add
dec
popa
sub
nop
add
pop
mov
nop
add
xor
push
imul
mov
pop
inc
sub
add
push
sub
sbb
add
add
xor
js
add
pop
incl
cmp
daa
xchg
outsl
xor
xor
pop
add
add
push
adc
jp
add
jnp
and
add
int3
add
jle
dec
insb
add
add
mov
xor
inc
add
add
adc
push
nop
add
add
mov
int3
nop
add
int3
push
pop
add
add
add
dec
jg
add
nop
add
push
cmp
jbe
dec
push
js
sbb
nop
add
push
imul
xor
jbe
pop
inc
cmp
imul
jl
mov
add
add
adc
pop
je
inc
adc
push
dec
add
in
add
add
mov
sub
sub
cmp
jg
add
add
mov
mov
push
sub
rol
pop
mov
sub
xor
jmp
add
mov
add
xor
xor
sub
mov
mov
mov
add
sub
lea
mov
add
sub
add
or
mov
and
mov
add
add
mov
sub
xor
lea
add
or
mov
sub
movl
mov
mov
cmp
je
sub
add
sub
add
sub
test
jne
mov
and
mov
mov
mov
add
add
mov
sub
mov
sub
sub
add
and
cmp
je
add
pop
mov
xor
mov
cmp
je
xor
lea
call
leave
ret
int3
int3
int3
push
mov
push
push
mov
mov
xor
sub
sub
mov
add
sub
mov
add
rol
mov
sub
sub
mov
pop
ret
int3
push
mov
push
push
mov
add
lea
jmp
inc
add
lea
sub
push
mov
call
add
pop
sub
mov
mov
sub
add
sub
mov
sub
mov
cmp
jne
mov
mov
sub
jmp
mov
add
add
add
test
jne
mov
mov
add
mov
sub
add
lea
add
mov
sub
push
rol
pop
add
lea
xor
sub
mov
mov
sub
mov
cmp
je
add
sub
push
sub
mov
sub
mov
add
sub
ret
add
sub
mov
pop
ret
push
mov
push
push
mov
or
sub
sub
add
movl
sub
mov
mov
push
push
call
mov
add
mov
mov
add
mov
add
cmp
jb
mov
mov
mov
sub
lea
sub
mov
mov
sub
cmp
ja
xor
mov
mov
mov
sub
or
sub
cmp
je
call
sub
sub
sub
mov
mov
cmp
je
mov
xor
add
mov
mov
mov
cmp
je
mov
ror
add
lea
sub
cmp
jb
add
push
call
mov
mov
mov
mov
mov
mov
shr
sub
mov
add
mov
add
mov
push
or
test
jne
sub
and
ret
push
mov
push
push
push
push
mov
dec
pop
mov
lea
lea
add
mov
mov
cmp
je
add
call
mov
push
mov
mov
pop
mov
add
add
sub
call
mov
sub
shl
lea
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
sub
and
add
push
call
mov
add
lea
add
push
pop
mov
call
mov
add
mov
sub
cmp
je
sub
mov
mov
sub
add
sub
pop
mov
mov
shl
mov
sub
sub
mov
sub
add
cmp
jne
pop
mov
xor
sub
sub
cmp
je
xor
mov
add
mov
add
mov
call
inc
sub
cmp
je
xor
mov
add
mov
mov
pop
ret
int3
int3
push
mov
dec
mov
mov
mov
sub
sub
pop
mov
dec
call
add
mov
mov
and
mov
cmp
je
sub
call
mov
sub
mov
push
pop
mov
cmp
je
pop
mov
xor
sub
mov
mov
mov
shr
cmp
jne
mov
mov
mov
mov
call
mov
xor
xor
sub
jmp
add
add
mov
mov
push
inc
xor
sub
mov
sub
add
sub
movl
cmp
je
sub
and
movl
xor
mov
cmp
ja
mov
add
dec
sub
sub
mov
add
jmp
mov
push
add
add
pop
mov
sub
add
inc
ret
int3
int3
mov
push
add
mov
mov
mov
mov
add
mov
sub
cmp
jb
mov
add
mov
push
sub
mov
cmp
ja
mov
mov
mov
mov
mov
sub
or
mov
cmp
je
xor
call
sub
mov
sub
xor
mov
mov
mov
mov
pop
add
shr
cmp
je
mov
push
mov
call
sub
mov
push
push
mov
push
mov
pop
shl
lea
lea
call
mov
mov
mov
mov
push
test
jne
and
mov
mov
mov
mov
pop
mov
sub
push
xor
push
mov
push
add
xor
mov
sub
xor
rol
mov
add
sub
sub
add
cmp
jb
xor
pop
or
mov
sub
add
sub
add
mov
dec
add
add
sub
cmp
jb
add
sub
pop
lea
add
mov
push
mov
mov
pop
mov
mov
add
sub
mov
lea
call
lea
pop
imul
sub
mov
lea
sub
sub
sub
sub
or
shl
add
sub
mov
mov
push
or
pop
mov
add
xor
and
add
mov
mov
sub
mov
mov
add
push
mov
mov
sub
sub
mov
xor
test
jb
and
sub
sub
and
add
push
add
inc
call
sub
movl
sub
mov
mov
add
add
mov
mov
cmp
jne
mov
push
mov
push
push
add
mov
call
sub
ror
sub
mov
or
sub
mov
add
sub
sub
sub
call
mov
mov
mov
add
pop
add
add
add
add
or
call
or
xor
mov
push
mov
mov
add
mov
add
pop
mov
pop
mov
add
mov
mov
call
add
imul
add
cmp
jne
sub
movl
mov
mov
add
add
sub
call
sub
mov
shl
mov
add
mov
add
sub
add
add
mov
mov
add
add
add
cmp
jb
xor
pop
mov
pop
mov
mov
add
mov
sub
add
lea
and
mov
sub
mov
sub
shl
sub
add
mov
push
mov
sub
pop
sub
mov
mov
pop
mov
mov
mov
sub
add
mov
xor
mov
mov
xor
mov
dec
movl
mov
mov
add
sub
add
add
rol
mov
pop
mov
sub
cmp
jne
rol
pop
mov
sub
add
push
sub
test
jne
add
add
movl
mov
ret
int3
mov
mov
pop
mov
pop
pop
call
add
and
mov
pop
sub
test
jne
sub
xor
sub
mov
pop
mov
push
mov
add
movl
add
mov
sub
sub
sub
push
mov
push
sub
mov
sub
add
mov
xor
push
mov
mov
sub
push
cmp
je
sub
add
mov
call
mov
push
pop
mov
add
add
test
jle
lea
add
mov
mov
add
xor
sub
pop
mov
mov
cmp
jne
movl
sub
sub
sub
push
xor
ret
int3
int3
sub
mov
xor
xor
sub
sub
pop
push
mov
pop
mov
mov
push
add
or
pop
mov
lea
add
movl
add
ror
movl
mov
xor
jmp
mov
mov
sub
add
add
sub
mov
ret
int3
int3
shl
mov
mov
mov
movl
add
mov
add
add
add
mov
imul
sub
add
call
add
sub
mov
jmp
pop
sub
pop
mov
pop
mov
mov
add
push
mov
inc
mov
xor
add
pop
mov
mov
mov
add
cmp
je
add
sub
lea
call
add
sub
mov
push
mov
xor
xor
mov
cmp
je
pop
mov
add
sub
call
xor
xor
sub
cmp
je
sub
mov
xor
add
sub
mov
add
mov
sub
cmp
ja
mov
add
sub
mov
sub
mov
push
pop
push
push
mov
sub
add
add
add
pop
sub
mov
mov
rol
xor
cmp
je
sub
xor
mov
mov
call
mov
add
mov
sub
cmp
je
sub
ret
int3
int3
int3
mov
push
mov
add
mov
mov
sub
add
push
lea
mov
shr
mov
add
mov
add
add
ret
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
sub
sub
xor
mov
call
mov
push
mov
add
mov
jmp
mov
push
ror
mov
push
add
add
lea
push
or
mov
mov
sub
xor
movl
mov
and
mov
sub
add
add
pop
mov
sub
mov
sub
mov
sub
cmp
ja
add
mov
mov
push
imul
pop
mov
mov
pop
dec
or
dec
push
sub
test
jl
sub
mov
sub
ret
ret
adc
test
push
sbb
test
dec
and
lea
imul
cmp
nop
add
int3
add
add
pusha
pop
sbb
pop
xor
fs
adc
xor
add
cmp
pop
add
xchg
insl
imul
pop
pop
pop
add
adc
push
jo
xor
jns
jae
add
sbb
inc
pop
jae
sbb
int3
int3
add
mov
pop
jno
add
jae
aas
mov
jne
add
add
nop
jge
cmp
add
int3
adc
aaa
cs
cmp
outsb
jnp
sub
dec
pusha
push
sub
mov
lea
inc
subb
nop
add
int3
add
andl
aas
jo
and
adc
dec
outsb
incl
push
xorl
int3
nop
adc
pop
pop
nop
popa
inc
sbb
sbb
nop
imul
xor
je
push
mov
sub
add
es
sbb
push
sbb
and
aas
add
.byte
pusha
pop
.byte
