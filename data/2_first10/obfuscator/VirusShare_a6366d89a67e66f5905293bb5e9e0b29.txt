xchg
inc
shll
pop
adc
push
rolb
call
add
inc
adc
call
add
and
adc
cmp
incl
and
or
or
add
inc
call
call
and
inc
inc
andb
fcos
aas
repnz
and
adc
adc
adc
sub
fcos
test
inc
mov
call
pop
adc
and
orb
dec
and
and
or
fs
mov
add
dec
add
std
pushl
add
sub
dec
mov
adc
leave
ret
push
mov
add
je
cmp
dec
rol
push
push
add
int3
mov
call
mov
call
pushl
call
cld
sbb
or
aas
call
mov
pop
inc
add
add
add
add
int
testl
inc
hlt
arpl
sti
idivl
mov
add
add
sub
shrb
jae
ljmp
mov
out
insb
insl
outsb
dec
add
inc
adc
js
lods
dec
inc
sub
push
push
inc
js
push
cmp
dec
inc
outsl
in
in
rorl
add
cmpsb
insl
insb
jb
outsb
xor
ja
fiaddl
out
inc
push
xchg
test
inc
inc
movsb
and
inc
cmp
mov
inc
mov
call
lea
push
call
adc
jnp
test
xor
mov
outsb
or
call
inc
imul
outsb
sub
adc
dec
dec
divb
mov
jbe
shrb
xor
jp
inc
loopne
dec
nop
dec
dec
push
data16
fistpl
or
adc
inc
jmp
pusha
or
imul
orl
fadds
jae
psrlq
mov
out
dec
inc
jbe
push
xlat
sbb
inc
add
inc
fs
loop
mov
int3
lock
aaa
outsl
jp
ss
dec
cwtl
ret
mov
inc
inc
push
ss
imul
mov
pop
lcall
fmull
sbb
sar
lock
arpl
inc
je
bound
add
xchg
or
enter
pop
popa
mov
push
push
aaa
inc
shl
out
dec
xor
cs
divl
xor
and
dec
inc
pop
pop
mov
imul
divl
or
dec
sbb
push
inc
xchg
fisubs
dec
addr16
push
jo
movb
push
xor
call
rorb
add
xor
sbb
outsl
dec
jmp
jbe
pop
mov
cmp
inc
xor
push
jno
xor
adc
mov
inc
ror
lret
out
inc
aam
mov
outsl
push
push
jno
push
lock
mov
dec
loop
push
mov
div
inc
jae
add
je
inc
add
hlt
push
sub
mov
sahf
out
push
pop
push
push
dec
fs
push
jl
unpcklps
insb
push
inc
jbe
bound
push
shrb
and
cwtl
jno
mov
gs
adcb
cmp
xor
aam
jbe
mov
jb
push
push
in
push
add
call
push
jle
test
or
inc
outsl
dec
mov
mov
xor
iret
imul
dec
lea
push
push
test
bnd
push
call
or
xlat
push
shrl
push
dec
sbb
test
rcr
in
sbb
add
push
push
sbb
xor
dec
or
pop
dec
cld
icebp
inc
push
pop
pop
insb
sub
data16
jne
stos
lods
jge
and
push
inc
dec
xor
xor
sti
lea
fisubs
push
addr16
xor
push
loopne
push
mov
mov
es
fs
sbb
ficomps
jle
lret
push
bound
repz
jmp
ret
out
shr
dec
xor
insl
inc
jne
push
jno
mov
lock
pop
push
ja
subl
adc
cmc
rol
dec
js
gs
mov
push
fs
dec
jns
adc
inc
mov
push
out
fadds
call
adc
push
ja
imul
sbb
hlt
in
jo
inc
add
push
bound
ja
push
dec
cmp
mov
inc
inc
push
adc
icebp
sub
shrb
loopne
ret
je
xchg
push
mov
outsb
inc
pop
fisttpl
mov
push
jne
test
insl
ja
loopne
pop
mov
push
pop
call
sbb
ja
inc
or
add
pushf
jmp
dec
push
in
jp
adc
add
xor
jecxz
mov
inc
jae
dec
or
popa
leave
jae
ret
pop
xchg
sbb
pop
aaa
push
mov
push
pop
outsl
or
notb
dec
inc
stos
dec
push
cld
jbe
inc
xor
pop
adc
push
dec
xor
add
out
cmpsb
fwait
push
jo
test
inc
call
fldl
lret
test
jo
imul
int
insb
mov
push
sbbb
push
pop
lahf
jmp
lahf
or
add
mov
inc
outsl
mov
ja
jns
in
call
pusha
mov
jmp
aam
inc
adc
dec
jge
cli
push
sbb
insb
jb
push
or
mov
sub
clc
insb
data16
push
lock
and
lods
push
out
cli
jge
hlt
js
push
rcrl
lret
out
dec
push
push
adc
popf
test
out
jns
lock
push
add
in
cmp
loopne
push
cmpsb
inc
je
mov
xchg
inc
mov
sbb
push
dec
subb
cld
or
jb
lea
lret
fisubl
or
add
popa
mov
rcrl
dec
push
push
inc
bound
jb
jp
data16
fisubs
inc
js
inc
mov
mov
jne
sbb
sarl
cwtl
dec
mov
add
test
jmp
test
daa
adc
cwtl
add
xor
insl
ds
insl
add
loopne
je
jae
xor
aaa
inc
test
inc
push
dec
rcll
jnp
lock
je
xor
stos
jmp
sbb
ds
gs
call
adc
xor
es
clc
adc
push
je
fbld
xchg
sbb
jp
inc
dec
dec
add
sbb
push
inc
mov
je
js
dec
xlat
je
add
xor
rcrb
cmp
push
loope
inc
or
imull
in
call
inc
aam
dec
popa
das
push
out
jmp
dec
inc
push
push
sbb
mov
sub
fimuls
incb
icebp
in
dec
adc
pop
dec
add
mov
inc
mov
js
fs
xchg
or
sti
dec
imul
les
push
push
mov
pop
icebp
jge
rcll
inc
pop
call
cli
lcall
pop
sub
imul
lock
pop
fistpll
mov
push
sahf
data16
inc
ljmp
mov
ss
outsb
dec
inc
call
sub
push
in
jne
aad
mov
fcomi
mov
xchg
cli
add
scas
inc
int3
cmp
repnz
cmp
xlat
jnp
push
dec
fs
or
imul
and
sbb
repnz
lret
loop
roll
into
clc
call
or
dec
cs
enter
add
cmp
push
xor
xlat
sti
dec
add
lock
or
pop
cld
push
mov
push
insl
arpl
jl
or
decb
setle
lret
push
push
mov
imul
jno
ret
push
push
mov
push
push
repz
call
sub
add
xor
mov
adc
push
iret
mov
jns
out
inc
bound
push
add
xor
mov
stos
rol
xor
data16
dec
inc
repnz
sarl
cmpsl
clc
ljmp
adc
ds
mov
pop
inc
call
push
incl
jnp
or
call
int
jmp
in
pop
lock
sub
adc
jbe
imul
adc
jp
call
xlat
icebp
push
inc
add
divb
aas
push
ret
jo
std
adc
sbbb
adc
jb
insb
mov
les
cs
mov
jno
iret
incb
push
mov
dec
inc
push
bound
popa
adc
insb
in
or
testl
ljmp
clc
call
pusha
hlt
fwait
mov
push
imul
les
js
clc
pop
add
fs
dec
dec
mov
mov
pushf
clc
push
xor
push
test
adc
pop
clc
add
mov
xor
xchg
or
inc
shr
mov
out
jne
cmp
sti
test
loopne
mov
xor
fwait
stc
mov
xor
insb
xor
popf
call
jbe
xor
and
test
jbe
notl
push
inc
add
jno
gs
jb
xchg
insb
dec
nop
mov
faddl
push
push
cs
call
call
pop
xchg
insw
push
push
rorb
ret
inc
inc
lods
outsb
fs
insb
inc
or
outsb
int3
stc
dec
push
mov
fs
pop
dec
inc
inc
clc
or
cli
inc
popa
push
add
adc
add
aaa
inc
adc
enter
jae
push
push
mov
cwtl
xor
clc
rorb
or
popa
pop
hlt
pop
dec
add
mov
xlat
inc
inc
add
fwait
mov
lock
dec
xchg
lcall
test
shll
mov
jae
dec
cwtl
imul
mov
movsb
imul
clc
pop
into
mov
pop
inc
add
push
imul
daa
dec
push
ja
add
nop
or
xchg
fsubrp
cmp
cmp
ss
dec
cmp
dec
inc
jno
fisubs
jno
push
jmp
and
cmpsb
inc
je
ret
push
push
mov
mov
fstpl
pop
bound
push
inc
fsubrp
cwtl
popl
inc
loopne
in
cli
push
mov
jno
call
popa
shlb
ljmp
ret
int3
dec
mov
outsb
hlt
stos
push
dec
push
push
xor
hlt
les
cwtl
push
jo
fmuls
mov
push
bound
pop
mov
adc
push
push
mov
ret
imul
cld
lock
dec
cmpsl
out
dec
data16
leave
cld
orl
inc
fistpll
push
fs
push
call
jb
push
or
cld
pop
sbb
xor
sub
push
fsubrs
stos
inc
shlb
dec
loop
aad
ds
jmp
pop
mov
cmp
inc
jmp
jne
xlat
fdivrl
cmp
fdivrl
cli
inc
mov
mov
js
outsl
dec
aaa
loop
pop
inc
sbb
sti
addl
lods
xor
add
adc
push
lcall
repnz
sarb
add
dec
push
push
clc
pop
sbb
dec
jne
call
rcr
push
or
inc
inc
xchg
pop
push
ljmp
out
push
jne
dec
ljmp
loop
cmc
inc
ss
imul
arpl
inc
shll
data16
jns
insl
sbb
push
jae
mov
add
adc
cmp
push
jae
inc
inc
sub
push
dec
cwtl
push
xorb
mov
xchg
sub
jg
inc
outsb
push
pop
mov
out
scas
fmulp
call
inc
push
inc
imul
sbb
js
push
pop
push
push
in
push
xor
outsl
push
insl
push
adc
rolb
inc
add
xchg
add
dec
call
or
hlt
jl
pop
or
outsl
sub
rolb
ljmp
inc
xchg
je
iret
hlt
cmpsb
cli
pop
ja
gs
mov
xor
sti
jns
add
pop
pop
xor
test
fistps
mov
int3
sbb
loopne
push
fisubrs
inc
dec
addr16
jmp
mov
dec
fs
in
push
sbb
xchg
testb
inc
xor
inc
ds
push
cmp
jmp
iret
push
lock
roll
call
subb
pop
inc
cld
push
fcmovbe
shr
mov
jno
dec
fisubs
sbb
fs
push
dec
outsb
ja
inc
add
mov
js
dec
pop
shrb
pop
idivl
xor
es
cmp
mov
lock
mov
cmp
jmp
pop
data16
or
imul
jno
ficoml
inc
xor
jbe
aad
mov
clc
inc
xchg
mov
cmp
rorl
ja
loop
ret
dec
pop
out
mov
inc
jb
insb
js
xchg
ds
ss
push
pop
mov
jbe
gs
inc
cli
add
bound
inc
jmp
sbb
fmuls
push
push
push
call
clc
jle
adc
lcall
test
cmp
dec
sbbl
push
clc
imul
jb
bound
jge
adc
push
push
outsl
xchg
jmp
push
inc
dec
push
call
xchg
xor
dec
dec
push
push
je
mov
leave
dec
pop
or
dec
cmpsl
pop
sub
pop
inc
call
cmc
sahf
aaa
dec
and
aam
insb
lock
lock
roll
push
inc
mov
pmuludq
dec
cwtl
push
orl
test
dec
push
je
xor
sahf
pop
add
sahf
scas
int3
xor
add
mov
dec
lock
outsb
shll
or
mov
lret
mov
lock
rclb
inc
divl
or
cli
mov
in
add
not
or
push
push
shlw
push
push
dec
push
call
stc
je
sbb
shlb
inc
pop
inc
xor
pop
push
xor
jnp
fidivrs
imul
xor
add
jno
push
jbe
dec
testb
push
push
or
int3
mov
mov
popl
repnz
dec
js
mov
lret
call
js
test
ja
mov
arpl
outsb
out
gs
gs
call
push
sbb
inc
mov
bound
adc
mov
pop
shll
jp
cld
dec
fmuls
test
add
outsb
jne
fwait
movsb
push
jp
dec
push
dec
dec
push
jb
push
sbb
jb
in
fldcw
imul
mov
ret
xchg
push
lods
mov
or
xor
int
ret
mov
arpl
pop
push
dec
sub
pop
fcoms
mov
inc
adc
gs
ret
add
js
jecxz
fstps
add
sub
xlat
pop
dec
mov
fsubrp
call
or
jmp
adc
outsb
sub
pop
cli
cli
cs
repz
jbe
mov
push
mov
decb
sbb
dec
and
inc
ret
cmp
sbb
out
pop
push
xor
bound
fisubrs
add
inc
xchg
int3
jo
jne
mov
aad
enter
jb
push
xchg
in
out
ficoml
lea
xor
adc
fwait
shlb
inc
jae
inc
fisubl
sbb
hlt
lock
mov
popa
fisttpl
inc
jno
cmp
jmp
pop
movsb
push
out
push
bound
shlb
hlt
je
jp
lret
pop
inc
push
sbb
scas
mov
mov
arpl
imul
push
shl
jnp
xchg
add
mov
stc
add
xchg
mov
cmp
shlb
out
incl
int3
jle
clc
imul
out
out
ret
shrb
call
or
iret
or
outsb
xor
add
xchg
hlt
ret
div
pop
pop
dec
arpl
cs
push
punpcklbw
repnz
sahf
sub
pop
inc
push
adc
dec
push
popa
movsb
inc
mov
pop
adc
sbb
imul
inc
cmp
dec
jmp
mov
push
outsb
inc
inc
jp
rcll
add
aam
call
insl
jbe
push
cli
lock
dec
mov
sbb
pop
jecxz
ret
insl
inc
jae
call
pop
lods
add
lock
dec
call
mov
push
call
push
cmp
ljmp
cs
add
je
shlb
pop
push
or
orb
imul
dec
mov
into
lea
xor
mov
and
scas
pusha
aam
or
out
pop
xchg
push
clc
ret
fbld
pop
out
xor
rorl
push
insb
ss
xor
jne
dec
cmp
lods
cld
pop
pop
mov
xor
insb
cmp
add
movsb
fs
bound
es
push
push
fildll
jbe
mov
pop
bound
lcall
pop
ljmp
pop
mov
inc
addr16
dec
inc
add
test
roll
jns
inc
mov
push
lock
enter
jo
imul
in
mov
push
and
push
xor
adc
dec
je
push
aad
jge
xchg
fprem
push
insb
inc
sbb
arpl
push
inc
xchg
repz
mov
inc
dec
shlb
xor
icebp
pop
jns
adcb
aad
add
je
aas
orb
pop
or
fimull
inc
mov
fcoms
push
aad
es
scas
dec
sbb
imul
mulb
push
dec
ss
sub
inc
sbb
repnz
xor
mov
inc
jae
inc
or
and
and
les
pop
ja
xor
cmp
push
flds
dec
jo
xor
push
mov
inc
jl
push
cmp
inc
cwtl
inc
call
jecxz
mov
xor
push
shll
push
xor
push
fsubrs
inc
fimuls
sbb
js
fidivl
pop
ds
cld
pushf
jmp
mov
sub
out
mov
mov
add
jbe
jb
addr16
push
js
aad
outsb
add
shrl
mov
mov
push
push
bound
sbb
arpl
jne
inc
inc
pushf
xor
lea
push
loop
data16
test
push
clc
xchg
sbb
popa
mov
sbb
xchg
sbb
mov
add
ret
sub
inc
loopne
mov
lahf
hlt
nop
sub
js
lock
adc
call
insb
jno
pop
mov
sub
inc
lret
mov
iret
push
jno
lahf
dec
jo
inc
data16
aaa
inc
mov
xlat
daa
push
pop
test
aam
lock
inc
outsl
inc
mov
cmp
int3
es
insb
jns
sti
add
adc
idivl
clc
aam
or
addr16
dec
out
inc
aam
push
dec
push
loope
xor
dec
xchg
xchg
jp
cli
lret
push
mov
jecxz
movsb
mov
sub
test
loopne
jle
xor
sub
gs
inc
loop
sbb
loope
loopne
jnp
dec
imul
inc
xchg
icebp
in
dec
fidivrs
idiv
jmp
dec
jns
dec
push
icebp
jecxz
sbb
shlb
call
add
add
into
pushf
clc
adc
xlat
je
jbe
dec
inc
sbb
add
les
out
stc
call
push
sarb
add
push
fsubrp
xor
sub
inc
add
sbb
ja
bound
adc
pusha
shrb
iret
mov
inc
sub
lahf
fiadds
rorb
aam
sahf
shl
mov
inc
dec
and
fs
mov
pop
push
push
push
call
jnp
mov
mov
fsubr
and
add
add
mov
test
inc
push
push
jp
mov
add
into
mov
aaa
je
outsl
lock
jo
dec
push
inc
dec
rol
add
inc
pop
cmp
rorl
movl
xchg
sbb
push
pop
orb
clc
jo
inc
lret
and
dec
dec
xchg
pop
ret
mov
fs
push
pop
int3
insb
xor
ficoml
je
xor
inc
dec
jae
jmp
sbb
out
outsb
push
inc
add
pop
fiadds
push
repnz
addr16
push
leave
xor
jnp
inc
pushf
xor
ret
or
dec
mov
sbb
adc
add
icebp
push
scas
cs
js
inc
and
mov
sahf
fsubrs
inc
xchg
adc
icebp
subb
clc
pop
xor
and
mov
into
ret
push
dec
xor
outsl
push
mov
into
in
call
push
mov
pop
inc
mov
cmpl
hlt
inc
gs
ja
lock
inc
sbb
stos
mov
mov
xor
push
add
outsb
insl
arpl
jle
sbb
inc
pop
inc
add
icebp
push
dec
or
dec
dec
sbb
test
outsl
mov
adcb
rcrb
fcom
push
dec
ss
ds
jb
rorl
add
dec
shl
inc
jl
cld
cmpsb
movsb
add
dec
movsb
cmp
icebp
sbb
jns
fs
mov
out
push
imul
cmpsb
out
dec
sahf
jl
mov
add
dec
jns
fsubs
push
add
data16
inc
clc
mov
push
dec
push
xor
notb
xor
push
pop
inc
dec
jns
mov
rcr
push
dec
pusha
arpl
sahf
fisubl
aas
jl
cwtl
sbb
sbb
pop
rcll
xor
imul
pop
or
xor
xor
push
pusha
mov
push
gs
jmp
xor
sbb
sub
push
dec
loope
inc
mov
adcb
fimuls
xchg
pop
ss
mov
and
push
jmp
sahf
movb
call
hlt
filds
insb
ds
and
fwait
add
out
push
inc
sbb
iret
dec
inc
cmp
cmpsb
and
movsl
xorb
into
inc
dec
and
movsl
mov
shrb
add
aaa
ret
jb
jbe
add
test
xchg
dec
fmull
pop
fcoml
dec
cli
pop
not
dec
mov
mov
in
cmp
xor
sub
pop
jp
adc
rol
xchg
push
sbb
pop
out
fnstcw
dec
cmp
push
lcall
jl
insw
ss
push
js
aad
out
push
call
xor
sbb
dec
inc
mov
adc
jle
bound
xchg
mov
aaa
jne
push
pop
imul
lret
xlat
jmp
shrb
add
jno
add
rorb
cmp
rorb
lock
mov
fdivs
cld
dec
mov
call
imul
icebp
jge
cli
mov
sbb
and
inc
adc
cmc
mov
fmull
push
mov
sbb
insl
and
xor
push
xlat
sub
movsb
int3
dec
mov
movsb
and
pop
cmpsb
pop
test
arpl
aaa
jmp
push
fldcw
aam
fs
jnp
je
arpl
call
jecxz
sub
outsb
dec
mov
jne
ret
aaa
inc
jmp
jle
cld
sub
lret
jmp
adc
out
call
dec
push
push
addr16
and
cmp
pusha
xor
xor
inc
cld
sbb
ja
jo
dec
je
dec
jb
sbbl
dec
mov
push
inc
pop
push
bound
push
xchg
dec
adc
dec
add
stc
pop
pop
mov
xchg
inc
or
dec
dec
or
fcmovnbe
mov
inc
shll
stc
psraw
or
jo
inc
insb
dec
inc
mov
jbe
pop
inc
clc
jb
pop
out
sub
int3
js
xchg
inc
clc
mov
xlat
push
nop
ja
loop
jmp
sbb
dec
push
xchg
pop
stos
mov
js
mov
lock
jbe
push
aaa
mov
and
ds
xor
xchg
mov
push
dec
cmp
cmp
push
clc
rorl
xlat
inc
dec
adc
cmp
imul
mov
push
xor
lock
loopne
pop
and
ret
ljmp
pop
push
gs
repnz
push
xor
mov
jmp
sub
cmp
or
sbb
push
into
inc
js
xor
jne
mov
je
cmp
faddl
scas
pusha
cmpsl
pop
xor
xchg
das
sbb
lock
dec
inc
jmp
stos
sbb
push
xor
fcom
popf
sbbb
cmp
pop
push
lock
mov
xor
out
xor
dec
xchg
outsb
push
inc
aaa
xchg
jl
jo
mov
sub
sub
pop
addr16
repz
sub
sub
inc
ret
imul
outsl
push
outsb
adc
push
fistpl
jo
insb
int
jno
dec
cmp
out
dec
pop
outsl
adc
add
cmp
iret
ss
mov
loop
sub
sub
push
aad
jne
jne
mov
dec
pop
insl
xor
scas
cmpsl
mov
and
test
ss
add
rol
pushf
xor
and
dec
add
xor
lahf
out
popaw
push
dec
or
xor
push
jmp
ds
icebp
mov
adc
jbe
xor
sub
mov
fcom
call
cmc
jae
dec
dec
cmp
cmpsl
jmp
data16
into
or
mov
sub
in
movl
dec
dec
movsb
dec
orb
into
out
xor
in
push
imul
repz
fldl
mov
mov
push
jmp
iret
testb
mov
lret
packssdw
fs
fdivrp
jmp
dec
push
imul
jb
push
jae
push
dec
test
xor
data16
push
adc
popa
stos
push
shrl
cs
mov
jmp
cmp
mov
pop
stc
mov
inc
add
adc
inc
add
jg
ljmp
je
add
add
push
add
jne
ja
jnp
or
dec
ss
popa
add
jae
gs
ljmp
imul
add
add
cmp
cli
xor
ljmp
xor
add
add
add
add
pop
in
out
out
push
data16
mov
mov
add
add
add
cmp
add
push
leave
inc
lcall
out
dec
test
cmp
inc
rcrl
pop
sahf
test
push
imul
pop
xor
xor
dec
in
or
xchg
push
bound
xor
add
push
mov
push
jae
lock
out
cmp
inc
loop
add
mov
cmp
je
outsl
push
add
xchg
or
jo
adcl
arpl
cmp
ja
adc
sbb
aam
loope
push
pushf
add
add
push
out
adcb
inc
add
sbb
sub
ret
jo
pusha
testb
arpl
push
xor
decl
imul
inc
push
inc
inc
ss
outsl
arpl
dec
aaa
imul
dec
cmp
jns
xor
imul
decl
insb
pop
push
push
outsl
push
dec
dec
addr16
inc
gs
insb
jne
popa
arpl
jno
ss
jns
xor
jno
pushl
bound
dec
push
push
addr16
jno
push
push
jns
inc
push
pop
jb
inc
outsl
push
xor
jbe
push
dec
outsb
sti
cmp
pushl
jae
xor
push
xor
arpl
mov
jb
dec
push
push
inc
filds
jo
cmp
insl
pop
add
xor
push
inc
push
dec
insb
ljmp
insb
xor
jno
pop
jo
dec
ljmp
xor
ljmp
jbe
jae
dec
xor
inc
imul
addr16
data16
ss
inc
js
mov
xor
dec
dec
popa
push
dec
data16
dec
push
xor
je
dec
insb
bound
insl
inc
clc
cmp
dec
push
dec
jb
popa
push
pop
push
imul
dec
js
jae
inc
dec
cmp
ljmp
aaa
cmp
dec
push
insl
ja
push
inc
push
cmp
jb
jae
jg
inc
inc
test
bound
data16
jne
inc
imul
addr16
xor
jnp
mov
xor
inc
pop
imul
cwtl
insb
dec
insb
jbe
adc
push
je
mov
ja
jno
push
dec
jne
mov
xor
dec
push
ja
jno
inc
or
dec
bound
imul
imul
mov
sti
dec
inc
dec
outsl
js
push
xor
or
dec
dec
jns
imul
adc
fs
push
jno
arpl
jo
jbe
jae
push
dec
push
xchg
jbe
push
jae
xor
dec
fs
inc
cwtl
pop
shl
ljmp
push
aaa
insl
dec
inc
bound
je
adc
addr16
arpl
add
imul
dec
inc
dec
dec
dec
inc
jb
insb
imul
imul
ret
insl
sub
push
jo
sbb
jb
add
pop
cld
jg
bound
push
pop
imul
inc
inc
push
je
lock
aaa
mov
xor
inc
outsb
js
call
xor
fstpt
data16
jae
push
jno
inc
jo
popa
cmp
push
cltd
popa
lds
bound
test
inc
andl
xchg
fimull
loopne
test
fidivl
push
cmp
push
sbb
xor
dec
ss
xor
dec
cmpsb
js
cmp
inc
jne
insb
jp
push
push
push
cs
loope
xchg
xor
xor
daa
shlb
xor
inc
inc
xor
jo
aam
push
jne
or
mov
scas
movsb
push
jo
dec
xor
push
ss
ja
pop
inc
lds
ss
inc
xor
bound
mov
inc
insb
dec
inc
push
inc
dec
push
push
ja
imul
jne
xor
push
pushl
mov
dec
jae
pop
inc
inc
pop
ljmp
push
xor
mov
rclb
ss
jne
bound
jae
insb
dec
push
sbb
mov
inc
dec
ss
push
jbe
into
scas
ret
push
xor
fs
mov
dec
inc
inc
push
or
mov
xchg
test
ds
push
inc
fs
push
jo
decl
jo
dec
inc
inc
xor
popa
js
lds
fbstp
dec
inc
dec
outsb
cmp
jno
gs
lock
and
je
popa
xor
mov
inc
cmpsb
jle
jo
bound
dec
inc
push
push
inc
insl
out
mov
imul
into
push
inc
imul
adc
dec
outsb
sbb
xor
insb
ja
xor
out
or
imul
inc
dec
inc
orb
insb
push
push
arpl
inc
popa
ss
jecxz
jns
inc
pusha
inc
insb
push
dec
inc
jb
arpl
push
push
adc
or
fidivl
jg
jmp
dec
imul
xor
call
aaa
dec
je
jo
outsb
pop
push
xor
fdivp
sub
fsubrs
jl
push
outsl
push
fistps
divb
inc
out
imul
mov
repnz
push
inc
dec
pop
xor
sbb
push
push
sahf
rol
jle
jb
int3
dec
xor
addr16
push
fs
mov
inc
popa
push
ss
arpl
inc
loopne
outsb
data16
imul
inc
cltd
mov
arpl
add
mov
and
pop
xor
inc
imul
incl
jne
aaa
xor
inc
cmp
bound
inc
insl
and
sub
cs
dec
popa
jbe
xor
xor
mov
mov
xchg
jbe
jo
push
ss
cmpsb
sub
jno
sbb
arpl
mov
inc
xor
push
dec
push
inc
inc
inc
or
imul
insb
pop
jo
and
fs
dec
mov
data16
jae
add
push
sbb
aaa
mov
inc
inc
aaa
push
xor
xchg
je
push
inc
gs
inc
shlb
pop
je
cmpsb
aaa
inc
ss
es
pop
mov
je
mov
incl
sub
enter
dec
inc
push
jne
jno
aaa
insb
arpl
xchg
inc
inc
inc
mov
push
outsb
dec
pop
cmp
ja
xor
ret
outsl
inc
dec
adc
inc
push
addr16
cmp
imul
sti
push
outsb
push
push
dec
xchg
lds
add
inc
divb
cld
int
jns
inc
mov
js
dec
dec
fs
dec
shlb
imul
bound
or
xchg
jne
mov
testb
shrb
pop
pusha
mov
sarb
cwtl
ja
lods
xor
sbb
nop
sub
call
inc
decl
imul
ds
cmp
inc
outsl
sub
mov
pusha
jbe
outsb
dec
mov
mov
insb
dec
inc
jbe
insb
outsb
cwtl
xor
cmp
stos
inc
xorb
push
loope
sbb
xor
pop
inc
addr16
xor
or
mov
dec
bound
addr16
push
xor
add
jae
pop
pop
sbb
inc
outsb
je
pusha
ret
cmp
pushf
inc
imul
jo
ret
dec
into
sbb
pop
dec
dec
stos
sub
movsb
dec
jbe
push
fs
jbe
rcrl
dec
outsl
jae
inc
cmp
adc
inc
inc
test
mov
xor
jo
inc
ss
inc
popa
xor
bound
xor
push
je
js
shrb
push
lcall
mov
dec
add
sub
ss
dec
push
push
insl
js
insb
fs
sub
xor
data16
jns
inc
sub
sbb
test
je
push
inc
xor
scas
stos
cli
data16
dec
push
imul
push
gs
insl
cmp
cmp
xor
push
push
insl
insl
mov
call
dec
dec
push
repnz
push
mov
gs
addr16
add
sbb
imul
insb
outsl
push
dec
cmp
sbb
xor
cs
pop
fistps
or
xor
rcrb
addr16
stos
push
sbb
pop
imul
fs
cmpsb
add
sbb
jne
in
xor
dec
ja
imul
mov
mov
sbb
push
xchg
push
xchg
dec
dec
bound
jg
add
aaa
arpl
push
dec
mov
xor
je
je
data16
outsl
pusha
push
shl
sub
arpl
add
fidivl
jno
push
mov
push
loopne
inc
incl
push
push
imul
scas
dec
xor
xor
imul
adc
in
arpl
cmp
xor
movsb
clc
pop
loopne
pop
dec
test
imul
je
xchg
dec
lcall
jbe
dec
pop
mov
aaa
xor
insl
fs
xor
jbe
xor
dec
adc
icebp
pop
xor
jo
inc
push
jae
pusha
dec
aaa
xchg
lret
pusha
idivb
sar
add
push
pop
dec
xor
adcb
mov
dec
dec
xor
jae
inc
ja
dec
xor
adc
loope
inc
pop
xor
addr16
jo
pusha
mov
loop
insb
pop
push
xor
mov
sub
push
pop
dec
push
ds
inc
xor
bound
cld
adc
dec
jns
xor
outsl
inc
or
imul
inc
je
jae
xor
cmp
jne
xor
xor
xor
lods
sub
into
inc
jns
scas
jo
dec
cmpxchg
in
aaa
imul
data16
add
push
ss
jns
or
push
push
pop
dec
pusha
or
je
inc
imul
dec
arpl
cmp
mov
pop
pusha
dec
dec
into
jb
dec
bound
mov
or
push
jne
inc
mov
xor
lods
cli
dec
ja
xor
stos
push
dec
loop
scas
xor
stos
jle
dec
jno
int3
shl
pop
pop
aaa
imul
incl
push
pushf
dec
xor
xor
xor
cwtl
adc
cmp
stos
jb
mov
and
data16
dec
hlt
xor
pop
fwait
ss
push
mov
jno
mov
test
aam
aam
jae
pushf
lock
call
clc
jo
ss
xor
dec
sahf
xor
dec
or
fdivs
das
push
pop
aaa
aaa
pop
dec
jno
jne
out
inc
ret
aas
rorb
cmp
bound
dec
fmuls
sbb
or
dec
xor
adcb
loope
sub
mov
dec
push
inc
js
movl
js
lcall
bound
push
pop
inc
dec
int3
ja
push
dec
pop
sub
pushf
push
dec
out
cmp
mov
and
push
andb
dec
jb
fwait
or
sub
addr16
cmp
add
dec
xor
dec
inc
xor
sbb
jo
imul
nop
int
cmc
es
fs
inc
bound
push
mov
stos
push
scas
int3
popa
cmp
push
ss
dec
fs
hlt
adc
fbstp
outsb
adc
xor
inc
inc
adc
push
mov
mov
in
jo
jbe
pop
mov
rorb
fmuls
xor
adc
inc
insb
push
jne
shlb
hlt
pushw
sbb
push
sub
add
push
dec
inc
insl
push
call
call
sbb
je
pop
jne
hlt
push
dec
movsb
call
js
push
push
xor
dec
inc
push
pop
push
in
outsl
js
sbb
imul
push
inc
sbb
scas
inc
jbe
sub
xor
js
lcall
inc
ljmp
pop
dec
add
xor
inc
ljmp
data16
push
cmp
mov
inc
push
push
dec
inc
push
push
dec
js
inc
jb
push
add
xchg
ljmp
inc
je
ss
xor
insl
jbe
lock
xor
jb
push
dec
xor
arpl
clc
pop
addb
aaa
push
inc
jb
pop
arpl
adc
jns
divb
dec
inc
popa
jb
dec
push
pop
sub
inc
inc
inc
dec
sbbb
inc
inc
ja
in
cli
pop
push
pusha
data16
outsl
xor
arpl
inc
outsb
scas
stos
jbe
and
xor
dec
test
fdivr
mov
popa
xor
aaa
bound
inc
add
dec
xor
jb
dec
mov
sbb
mov
push
jns
xor
insb
outsb
push
mov
dec
xor
cld
sub
loop
xor
xor
dec
call
inc
dec
push
ss
pop
gs
add
push
inc
mov
sar
inc
ss
mov
push
xor
bound
mov
xor
push
mov
mov
loopne
clc
filds
fs
xor
mov
inc
xchg
push
jo
push
inc
push
jno
inc
push
dec
inc
inc
xor
dec
inc
lret
jl
dec
dec
into
push
push
xor
fmuls
mov
inc
fcompl
dec
repnz
jne
insb
xchg
push
adc
or
fidivl
jb
ja
mov
mov
push
mov
fwait
popa
push
inc
call
dec
fs
decl
rcrb
dec
inc
dec
inc
jbe
jne
xchg
dec
popa
inc
jl
loopne
mov
dec
bound
inc
stos
jae
sbb
push
dec
outsl
xor
pop
push
shrl
popa
addr16
push
push
inc
hlt
inc
xor
mov
scas
js
arpl
push
pop
dec
jns
test
push
xor
fiaddl
pushf
js
xor
inc
sub
ss
jae
inc
push
push
insb
mov
sbbb
push
dec
push
xor
ret
scas
out
and
push
inc
or
dec
lock
jl
xor
ja
insb
inc
jns
cwtl
dec
sbb
adc
ja
bound
pushw
bound
mov
sub
inc
sub
jne
inc
push
in
pop
sbb
adc
imul
lcall
mov
dec
push
ja
push
pop
lock
add
dec
fs
xor
push
ss
scas
push
add
push
js
push
arpl
cmp
insb
mov
mov
aad
inc
xchg
outsb
dec
xchg
fs
inc
sub
pop
xor
jno
out
jns
data16
push
xchg
stos
sub
or
inc
jg
je
push
jo
insb
push
dec
inc
push
dec
xor
movl
mov
jbe
inc
test
insl
jne
shl
mov
imul
call
xchg
jno
dec
inc
push
xor
inc
imul
inc
loopne
mov
mov
inc
inc
push
bound
push
inc
aaa
jae
mov
gs
jae
imul
cld
add
imul
js
dec
push
push
dec
inc
imul
push
insb
rcrl
dec
pusha
outsb
cmp
push
sub
ss
sub
inc
out
sbb
pop
mov
loop
jae
data16
or
push
je
xor
mov
push
xor
push
clc
fidivrs
aaa
dec
xor
aaa
inc
call
xor
push
inc
jo
push
push
add
pop
dec
push
add
outsb
scas
je
sarb
ljmp
je
push
out
je
inc
push
stos
sub
mov
jo
dec
inc
mov
and
data16
inc
inc
push
inc
xor
js
sbb
jne
outsb
insl
in
push
xor
fmull
jb
jae
xor
push
mov
push
dec
imul
inc
xchg
push
std
sbb
ss
insb
imul
ret
xor
inc
push
mov
addr16
gs
scas
or
dec
dec
dec
inc
dec
adc
dec
dec
pop
xor
incb
mov
push
pop
inc
push
push
push
dec
popa
xor
pop
adc
ds
popa
inc
inc
dec
inc
mov
hlt
das
push
popa
insb
push
push
jno
inc
bound
dec
dec
test
aaa
cmp
bound
inc
dec
pop
jle
fwait
jmp
mov
xor
dec
sub
bound
in
jb
mov
push
pop
cmp
push
jno
gs
movsb
push
data16
push
bound
pop
push
jo
ret
out
stos
push
xor
jno
js
push
addr16
sub
push
cli
xor
jno
outsb
push
pop
jo
dec
push
adcb
push
push
push
movsb
jno
sar
fbld
js
push
push
xor
pop
dec
dec
push
xor
pop
jb
andb
and
dec
inc
ja
mov
pop
imul
push
pop
xor
push
mov
outsb
imul
dec
imul
adc
push
jo
jo
jo
push
dec
xor
outsl
push
jne
bound
dec
cmp
xor
jo
outsl
ljmp
insl
jb
loopne
popa
insl
pop
loopne
pop
shlb
push
push
insl
fs
stos
mov
cli
push
jbe
addr16
outsb
jae
arpl
stos
dec
bound
dec
push
ja
imul
sbb
push
movsb
into
xchg
xor
cli
push
sti
cmpsb
cmpsb
push
jp
jo
scas
dec
jbe
addr16
push
dec
insb
xor
inc
pop
ss
push
mov
dec
xor
insl
dec
bound
jne
dec
dec
imul
mov
pop
dec
xor
jae
loopne
xor
inc
push
outsl
dec
pusha
push
fmul
inc
push
pop
idivb
lret
scas
fcmove
addr16
sub
gs
jb
outsl
xchg
push
inc
push
ret
push
inc
push
dec
ja
push
jo
jae
xor
dec
mov
xor
cmp
enter
push
shrl
call
push
js
jbe
aad
in
and
lock
aaa
fmull
jl
pop
add
push
imul
ss
call
mov
jbe
insb
mov
push
popa
gs
jne
xor
ss
fcoms
inc
je
pop
dec
cli
xchg
push
push
ja
in
inc
dec
sbb
arpl
push
dec
inc
hlt
push
and
jb
in
out
gs
inc
inc
cmp
adc
dec
jb
push
dec
insl
jbe
push
add
imul
or
je
imulb
cmp
and
insb
outsb
pop
dec
gs
cmpsl
outsb
stos
dec
fsubl
outsb
fs
jmp
nop
outsb
xor
xor
jb
insl
stos
push
das
rolb
outsb
dec
push
imul
movl
mov
pop
popa
xor
push
push
xor
mov
ja
inc
push
dec
in
jb
mov
push
lods
es
jns
push
jbe
dec
imul
enter
dec
mov
addb
push
shlb
cmc
pop
decl
jno
push
inc
dec
js
gs
sub
mov
adc
dec
cmp
push
lods
push
push
xor
jb
inc
notb
outsl
out
add
xchg
inc
push
jl
mov
and
xor
shlb
inc
enter
bound
push
inc
jno
xchg
mov
push
sbbb
mov
js
push
push
ja
pop
and
jae
movsb
ss
mov
push
es
dec
outsb
dec
dec
xor
and
inc
lock
jno
xchg
push
push
push
insb
fdivrl
arpl
dec
incb
dec
aaa
arpl
jae
outsl
mov
mov
push
push
dec
ss
push
dec
jne
dec
fbstp
adc
pop
inc
js
fmuls
xor
jg
inc
bound
dec
add
imul
popa
dec
jb
js
jne
dec
test
ja
pushf
xor
ss
popa
arpl
lock
outsb
ss
outsb
outsb
push
push
jo
fiadds
push
and
outsl
stos
push
jbe
addr16
push
pop
dec
add
arpl
inc
inc
outsl
pop
out
frstor
inc
fs
pop
and
inc
xchg
jo
data16
mov
push
jp
inc
inc
jns
dec
push
inc
dec
inc
or
jg
inc
data16
popa
push
imul
movsb
jno
pop
fwait
mov
je
adc
in
push
dec
addb
push
jae
xor
out
js
inc
adc
jb
jne
addr16
cmp
xlat
mov
cmp
jns
inc
dec
movsb
in
mov
inc
lcall
mov
push
xor
push
inc
inc
dec
xor
jb
dec
stos
fwait
decb
arpl
js
imul
mov
dec
add
inc
popa
inc
inc
outsb
dec
jecxz
imul
push
jbe
inc
add
or
pop
jno
xorb
push
dec
pop
push
dec
add
jne
add
ss
mov
mov
mov
pop
movsb
loopne
cltd
dec
pushf
mov
fidivrl
xor
adc
or
cmp
jns
push
outsl
jne
dec
outsb
dec
push
mov
xorl
xchg
push
push
xor
pop
mov
ss
xchg
scas
mov
outsl
xor
jbe
aad
es
cmp
and
push
push
repz
data16
outsb
arpl
xor
inc
subl
mov
clc
orb
dec
push
dec
addr16
js
inc
push
addr16
push
sbb
sbb
xor
push
adc
dec
call
inc
enter
mov
jo
add
pushf
pop
inc
addr16
xor
cmp
ja
outsl
push
pop
outsl
adc
aam
es
pop
js
jbe
inc
loopne
int3
jno
mov
test
pop
popa
mov
push
insb
enter
testb
lock
push
in
stos
inc
fs
insb
gs
lret
mov
jns
dec
push
icebp
jg
push
push
inc
jae
inc
add
push
xor
jno
stos
rorb
ret
dec
mov
std
fwait
sub
inc
insb
push
inc
push
aaa
dec
xor
lea
jbe
push
mov
push
or
jo
dec
js
lods
dec
jmp
addr16
insb
jns
add
mov
dec
xchg
inc
imul
jae
pop
push
loope
and
js
ja
inc
sub
jno
jb
push
jbe
xor
push
outsb
inc
sbb
dec
pop
dec
adc
pop
push
imul
push
cmp
inc
dec
insb
test
push
mov
sub
fadds
sub
int3
mov
add
jbe,pt
cmpsb
inc
jb
outsl
ss
test
dec
sub
add
inc
jne
xor
ds
pop
aaa
test
push
inc
push
pusha
push
lret
jbe
inc
fdivp
inc
sbb
inc
push
dec
insl
ds
push
outsl
or
mov
cmp
repnz
jns
and
inc
lcall
clc
outsb
je
push
inc
stos
xor
inc
aaa
xor
addr16
xor
mov
outsl
mov
push
push
push
xor
subb
ss
push
mov
lcall
push
insl
pop
cmpsb
inc
dec
push
inc
insl
lcall
ja
jl
xor
jno
xor
jo
lock
dec
jno
insl
mov
xor
push
std
dec
jne
xor
out
ja
into
mov
and
xor
or
clc
jbe
jo
jb
testb
push
nop
push
dec
inc
arpl
lret
add
imul
cwtl
inc
imul
dec
pop
dec
push
popa
or
push
js
mov
outsb
sti
cmp
adc
cmpb
xor
inc
insb
int3
dec
cmpsb
or
imul
add
pop
imul
js
dec
or
stos
js
bound
jbe
aaa
je
xor
outsb
subb
shll
cmp
out
movsb
push
adc
add
inc
jns
push
mov
bound
xor
xor
jns
mov
je
gs
insb
insb
aaa
outsl
ss
add
test
jne
outsl
push
fs
je
push
sbb
inc
push
inc
int3
bound
cmpb
add
dec
inc
push
je
push
imul
clc
pushl
insb
ljmp
arpl
inc
jbe
dec
aaa
pop
outsb
insl
dec
imul
repnz
inc
outsl
dec
push
outsb
inc
decl
sar
push
push
push
push
push
xor
ja
jae
loopne
insb
cli
inc
aaa
ja
aaa
pop
inc
sub
insl
inc
jne
pop
push
mov
outsl
mov
test
popa
dec
lret
pop
loopne
mov
inc
mov
arpl
pop
dec
push
in
test
fdivrs
push
push
inc
jns
pop
xor
add
dec
js
mov
scas
adc
inc
je
dec
popa
xor
push
dec
ja
sub
cmp
pusha
push
addr16
jbe
enter
pop
and
jne
insb
movsb
jo
push
push
into
xor
mov
lds
out
ja
inc
xor
lcall
insl
inc
xor
push
pop
push
jle
jle
cmpsb
push
sub
bound
pop
jl
xor
inc
imul
add
sbb
inc
into
stos
bound
dec
push
arpl
jne
fbstp
fidivs
push
fmull
inc
dec
dec
adc
dec
push
dec
xor
adc
test
inc
mov
push
add
popa
xor
or
rcrl
cli
mov
dec
push
cmpsb
push
push
jns
test
es
movb
mov
jno
arpl
add
aaa
add
add
pop
mov
inc
dec
je
test
xchg
inc
test
or
scas
adc
insl
ja
mov
add
push
dec
popa
jo
mov
jle
loopne
dec
outsb
ret
aaa
xor
add
jmp
push
aaa
push
dec
push
xor
or
rorb
es
fisubrl
jb
pop
inc
add
jbe
inc
inc
insb
pop
jo
jmp
cmp
inc
push
push
pop
push
insb
cmp
push
jp
dec
jns
shrl
or
push
xor
int3
dec
jns
add
pop
scas
gs
mov
sarl
outsl
imul
cmpsb
ss
inc
push
push
mov
mov
add
arpl
sub
dec
jle
pop
movsb
sub
pushf
outsb
movsb
dec
lret
cld
push
ss
insl
inc
imul
mov
dec
inc
dec
sub
add
pop
jo
loopne
push
pusha
js
lods
js
bound
adc
cwtl
ja
jb
mov
push
push
loopne
fs
loope
add
xor
push
cltd
stos
mov
dec
fs
inc
les
outsb
ss
js
push
call
add
push
imul
lock
outsl
push
or
jno
gs
arpl
pop
pop
stos
mov
cmp
inc
addb
sub
push
or
xor
dec
push
je
outsl
inc
push
into
jo
mov
cmpsb
xor
and
adc
sub
dec
outsb
and
dec
inc
loop
shll
xchg
pop
popa
jl
and
test
dec
fs
bound
push
push
cld
pop
add
imul
popa
jno
mov
bound
lcall
mov
aaa
push
outsb
mov
or
jbe
out
arpl
xor
or
loop
push
jbe
mov
jle
push
inc
gs
sahf
outsl
jae
dec
lock
inc
jbe
popa
imul
push
push
inc
inc
fidivs
xor
je
push
inc
add
loopne
das
fdivs
push
xor
pop
imul
mov
hlt
insb
inc
inc
inc
outsl
cmp
cs
push
xor
dec
push
push
lods
imul
dec
xor
inc
loopne
popa
push
mov
xor
inc
icebp
cmpsb
jg
jae
inc
push
cmp
outsl
xor
dec
pop
push
push
xlat
loop
push
add
dec
dec
push
jbe
aaa
pop
sbb
pop
popa
jle
dec
push
inc
pushw
loopne
jo
dec
inc
push
jne
andb
sahf
inc
jb
mov
adc
idivb
jb
xor
call
dec
push
dec
jae
dec
imul
push
test
mov
test
scas
push
fsubrl
xchg
inc
jae
test
neg
adc
inc
push
xor
pop
pop
push
jl
arpl
push
pop
push
into
inc
jo
dec
mov
push
flds
pop
bound
xchg
xor
dec
pop
inc
dec
push
stos
loopne
inc
inc
pop
inc
jp
jbe
jne
scas
adc
xor
je,pn
pop
addb
adc
mov
stos
cmp
arpl
mov
mov
mov
loopne
aaa
push
adc
scas
outsl
push
xor
pop
scas
aaa
add
cli
and
push
jns
and
dec
xorb
cmp
push
test
les
push
jns
or
aam
mov
mov
cmp
xor
cmp
xchg
js
or
ss
ljmp
jbe
inc
xor
pop
inc
jo
arpl
push
cmp
dec
mov
mov
dec
je
jbe
sbb
adc
jb
gs
int3
adc
cli
jo
and
xor
jbe
dec
xor
cmp
jo
xchg
dec
xor
inc
imul
xchg
and
inc
cmp
xlat
push
outsl
lock
pushw
xor
testb
xor
add
imul
sbb
and
popa
dec
push
mov
js
xor
stos
inc
lret
adc
inc
je
inc
imul
push
pusha
pop
pop
fimull
push
push
inc
mov
xor
mov
popa
sbb
jb
and
inc
add
or
inc
ja
fcmovbe
pusha
push
out
js
dec
push
jbe
push
jne
push
outsb
push
ss
push
inc
sbb
jno
inc
jno
into
inc
cwtl
pop
in
test
push
fdivrl
jo
dec
push
mov
addb
jne
xor
jne
addl
jb,pn
jne
jae
pusha
inc
push
or
inc
dec
dec
ja
dec
push
push
mov
push
xor
pop
inc
arpl
push
and
push
mov
jbe
decl
andb
xor
outsl
push
push
push
dec
js
aaa
dec
push
dec
add
push
jo
insl
dec
push
pusha
push
loopne
cmpsb
xor
inc
dec
mov
pop
cmc
xchg
popa
inc
push
ret
jb
push
push
sbb
js
sbb
dec
push
sub
outsl
jne
arpl
push
lea
out
test
bound
aaa
xchg
jb
inc
jo
mov
or
inc
lods
arpl
add
and
lds
lock
xor
push
insl
gs
mov
mov
mov
dec
gs
imul
stos
dec
stos
bound
lret
dec
push
dec
mov
out
cld
inc
ja
fcoms
adc
jns
xor
push
push
inc
inc
inc
and
pop
shl
cmp
dec
push
jb
imul
outsb
push
popa
insb
dec
dec
dec
cwtl
pop
xor
outsb
inc
andb
dec
push
inc
xor
das
das
add
inc
insb
jae
xor
mov
jo
push
dec
bound
clc
inc
dec
dec
jae
mov
inc
adc
faddl
ss
push
push
shrl
bound
cmp
insb
popa
xor
movsb
fs
add
outsl
sbb
popa
inc
movsb
lock
dec
dec
sahf
jg
movsl
add
dec
popa
or
xor
subw
dec
push
jbe
imul
or
dec
xor
push
xor
mov
jno
push
dec
pop
add
outsl
testb
mov
dec
insl
pop
push
push
push
xor
jb
imul
jne
inc
inc
je
call
jo
push
push
insl
jo
js
push
push
jae
inc
insl
dec
inc
dec
add
enter
clc
pop
mov
pop
movsb
inc
imul
fs
push
gs
xchg
mov
cwtl
sbb
lds
inc
fcoms
dec
shlb
outsb
hlt
dec
je
and
add
jno
movsb
adc
cwtl
cmp
fisubl
stos
push
ja
jl
xor
dec
mov
jge
push
jb
out
pop
inc
popa
sub
ret
mov
loopne
cld
gs
ljmp
pushw
push
dec
push
lcall
jo
jbe
shlb
xor
aad
aaa
mov
jne
lods
clc
mov
ja
dec
jb
aam
jb
loopne
push
mov
frstpm(287
inc
push
dec
pop
inc
inc
mov
mov
inc
jne
outsb
push
jae
and
push
insb
inc
xor
dec
push
xor
fs
mov
pop
pop
fisubrl
jo
dec
addr16
xor
add
into
push
dec
inc
jbe
je
stos
roll
jno
gs
data16
inc
push
add
inc
es
inc
aaa
push
or
push
xor
aaa
jo
test
xor
roll
adc
push
push
js
add
gs
push
outsb
xor
sbb
adc
dec
lea
pushf
cwtl
dec
mov
je
xor
arpl
fs
leave
mov
or
xor
xor
and
jbe
cmpsb
es
loop
je
dec
xor
push
xchg
ds
sbb
jo
push
push
or
inc
push
inc
cli
aaa
fsubl
imulb
pop
inc
jbe
dec
int3
stos
fcmove
inc
add
jl
sbb
inc
bound
dec
push
jp
pop
in
add
dec
dec
imul
inc
inc
inc
insb
ss
ja
dec
mov
js
shr
pop
inc
push
push
xor
xchg
inc
cmp
leave
and
pop
jae
inc
push
jno
ss
cwtl
pop
jno
mov
inc
shrb
imul
xorb
xor
lcall
push
xor
inc
dec
cli
outsl
jp
and
xor
cld
pusha
sti
sub
xor
inc
pop
addr16
inc
shrb
inc
mov
dec
xor
and
jne
push
push
mov
inc
ss
lods
pop
jne
xchg
adc
inc
jbe
push
je
cwtl
pop
jno
jo
pop
ss
jp
xchg
cwtl
shlb
inc
jns
arpl
in
jl
jo
dec
mov
sub
dec
data16
xor
push
insb
inc
outsl
mov
xor
adc
cmp
jge
inc
hlt
je
jae
mov
push
dec
jbe
jae
andb
ja
js
dec
dec
adc
push
inc
xor
js
sub
stos
subl
jbe
add
sbb
ja
dec
dec
pop
xchg
xchg
jle
into
push
cmp
adc
ds
aaa
jns
jns
push
inc
out
pop
je
jb
add
xor
jno
jo
mov
rolb
jo
push
inc
inc
shrl
jle
cmp
insw
cli
jo
pop
pop
or
rcll
dec
dec
jns
out
push
jbe,pn
cli
jle
push
push
push
cmp
pop
push
inc
dec
inc
dec
dec
push
lods
push
lcall
inc
cs
dec
xor
pop
dec
jno
bound
jb
mov
leave
fidivrs
ss
sub
xchg
or
mov
ja
jno
shrl
je
push
push
pop
cmp
jle
sub
push
mov
mov
jns
cli
addr16
push
movsb
mov
loopne
outsl
data16
push
xchg
enter
inc
fsubs
es
test
push
arpl
fidivs
popf
shlb
inc
cmp
data16
outsb
je
mov
imul
mov
bound
je
push
dec
js
inc
ret
jp
push
dec
inc
inc
cmp
inc
mov
loope
push
push
push
push
ss
mov
mov
sub
gs
push
pusha
inc
xor
bnd
movsb
adc
xor
cli
lds
mov
dec
push
push
popa
ret
daa
lods
sbb
stos
dec
arpl
stos
sbb
inc
cmp
push
push
xor
loopne
sbb
xor
loopne
xor
cmp
ss
inc
push
js
xor
ficoms
cld
ss
cmp
xor
inc
sbb
inc
and
rclb
inc
or
push
fmuls
cwtl
jl
jo
dec
mov
not
fcoms
insl
outsb
pop
or
push
push
fs
addb
cmpsb
jo
stos
cmp
sbb
or
pop
mov
sbb
mov
or
dec
popa
cmp
repnz
dec
outsb
cmpsb
scas
push
pop
push
ja
push
xchg
ljmp
popa
push
push
inc
xchg
sub
push
jle
arpl
xor
dec
jne
mov
mov
rorb
inc
imul
push
inc
and
inc
je
lcall
dec
lods
outsb
and
or
gs
ss
mov
mov
jns
push
in
rcll
outsb
sarb
cmp
insb
clc
add
push
les
push
outsb
or
cs
outsl
dec
push
dec
inc
lods
push
cmp
inc
mov
xchg
push
sbbb
inc
pop
stos
sbb
jno
push
bound
fs
ret
dec
rol
pop
movsb
mov
dec
xor
cmc
stos
in
jne
xor
data16
js
ds
test
add
dec
xor
push
lds
bound
push
xor
bound
aad
push
jo
dec
ss
xor
dec
lret
or
ss
inc
js
fs
bound
imul
cmp
cmp
dec
dec
push
js
mov
bound
push
adc
into
outsb
sub
pop
add
mov
hlt
jae
cmp
jno
mov
xchg
push
mov
inc
jb
jns
arpl
dec
cmpb
push
popa
outsb
inc
jo
inc
dec
imul
xor
or
mov
inc
cmp
dec
dec
je
pop
out
stos
jo
hlt
mov
jae
dec
jno
xor
ljmp
xor
xchg
jb
adc
or
outsb
pop
out
jg
or
mov
jns
js
inc
xor
test
aaa
cmp
jne
push
test
arpl
dec
sub
push
shlb
cmpsb
cli
dec
gs
push
inc
inc
inc
push
xor
hlt
push
shlb
jb
jae
inc
stos
pop
push
imul
dec
dec
push
dec
dec
jne
inc
pop
hlt
or
xor
je
or
fstl
jb
push
jns
mov
mov
cs
adc
pop
cli
es
push
inc
insl
inc
test
push
pop
jno
push
jo
sbb
sar
pop
push
inc
jae
push
ljmp
push
push
ss
jb
sub
gs
push
xor
push
cmp
dec
test
dec
sbb
mov
js
outsl
mov
push
in
inc
dec
bound
push
push
push
push
xor
push
cmp
push
push
inc
popa
push
and
lock
adc
in
mov
jbe
push
jb
inc
sbb
push
xor
vmovaps
test
je
dec
sbb
aam
inc
shlb
mov
push
push
jo
bound
ja
sbb
push
repnz
ja
mov
xchg
mov
mov
aaa
add
jns
jl
dec
jbe
dec
fadds
lock
je
xor
push
in
cwtl
pop
cmp
inc
push
sub
adc
arpl
jne
jbe
sub
call
jne
inc
push
push
jns
aam
out
adc
jne
jno
jae
xor
nop
imul
dec
je
push
popa
repnz
mov
push
dec
xor
push
call
xchg
cmpsb
ret
gs
mov
push
cld
fisttpl
fcomps
cmp
jbe
je
insl
outsl
cld
aaa
sub
xor
dec
out
cmpsb
fwait
inc
aam
aam
loopne
scas
dec
insl
push
and
imul
bound
dec
pop
imul
sbb
push
in
or
push
push
inc
mov
push
xchg
leave
push
mov
cmp
hlt
inc
cmp
jg
xor
addr16
imul
fmuls
cld
mov
dec
dec
ss
arpl
dec
bound
inc
orb
xchg
ficoms
add
frstor
sub
ss
xor
popf
sub
pusha
xchg
sahf
xor
jbe
push
or
xor
addr16
push
add
jg
imul
inc
fs
inc
cmp
outsl
push
insb
in
pop
push
dec
loop
dec
push
xor
fwait
loopne
cmpsb
ss
dec
push
orb
das
sarb
ja
xor
ss
adc
aaa
ja
mov
or
inc
dec
inc
fs
jae
inc
pop
inc
inc
rcrl
or
xor
push
cmp
push
outsl
hlt
insl
push
xor
addr16
push
jae
inc
jne
push
and
cli
imul
mov
xor
pop
popa
or
int3
inc
jb
push
push
xor
push
push
sub
inc
pop
or
jb
enter
je
push
aaa
lea
insb
addr16
andb
inc
add
jns
jo
fidivl
inc
push
mov
inc
out
push
rorl
xor
je
dec
sahf
mov
sub
xor
dec
inc
insb
test
push
jo
jae
push
xor
aaa
or
push
ss
push
cmpsb
mov
push
ficoml
test
cs
ret
pop
dec
data16
nop
inc
xchg
jae
imul
in
adc
push
push
xor
mov
stos
jbe
pop
jo
jae
aaa
dec
je
mov
push
push
dec
mov
outsl
inc
pop
ds
xor
xor
jl
push
cmc
sbb
sbb
fs
inc
sbb
call
push
push
push
jb
dec
fs
lock
push
icebp
sub
gs
shlb
add
fs
xor
push
lret
cwtl
arpl
dec
and
mov
js
mov
aad
call
and
inc
push
push
xlat
cmpsb
push
push
sahf
cmp
incl
insb
jne
push
js
outsl
pusha
inc
jns
loopne
mov
ja
inc
push
pop
nop
jl
std
push
cwtl
fs
dec
inc
inc
push
push
xor
dec
xor
dec
hlt
push
test
sub
push
xor
xor
xor
add
dec
pop
xchg
call
dec
push
divb
push
dec
push
adc
pusha
fcomps
push
add
xchg
add
out
ljmp
inc
dec
dec
jo
pop
jb
push
dec
insl
je
loopne
push
dec
outsb
xor
push
xchg
frstor
or
outsb
sahf
inc
cmp
in
das
mov
sahf
fidivs
cmp
cmp
popa
inc
jp
data16
ja
hlt
dec
popa
enter
mov
sahf
js
js
dec
xchg
call
ds
inc
push
and
fisubrl
arpl
ficoml
jns
jp
cwtl
adc
mov
inc
dec
push
inc
xor
dec
loope
cmp
jne
jns
outsb
jns
inc
sar
insb
dec
push
insb
dec
push
push
dec
adc
arpl
adc
insl
jns
outsl
inc
pop
jbe
push
mov
shlb
xchg
xor
push
fs
jl
js
mov
jo
pop
clc
ss
fs
inc
repnz
insb
outsb
inc
lock
xor
fcompl
lds
dec
xor
push
mov
scas
test
call
lock
xor
inc
outsl
mov
dec
shlb
jae
push
push
jo
add
bound
xor
jb
jle
jns
dec
imul
add
push
dec
dec
push
jb
insb
inc
inc
int3
addr16
subl
push
push
jns
hlt
adc
adc
jle
dec
js
sub
ret
mov
push
push
add
pop
mov
pop
jno
push
pop
jb
push
push
pop
dec
ja
jns
mov
xor
push
fisttps
mov
push
popa
dec
fdivs
inc
push
outsl
imul
inc
jl
imul
mov
push
loope
ja
gs
gs
mov
sub
mov
insl
gs
addr16
ja
scas
popa
jb
pop
dec
cld
dec
dec
pop
popa
inc
arpl
insb
push
push
jle
inc
cmpsb
inc
jo
dec
bound
pop
subb
pop
push
dec
jno
fdivl
add
bound
jle
add
dec
adc
out
inc
xor
pusha
mov
arpl
jb
inc
cmpsb
gs
xor
push
add
outsb
bound
enter
pop
jb,pt
clc
cmp
push
push
dec
shrb
pop
dec
dec
or
sub
pop
mov
insb
adc
xor
rcrl
or
clc
insb
push
pop
fs
clc
pop
jno
dec
sub
inc
xor
push
jbe
cmpsb
filds
jae
fs
inc
imul
imul
dec
fimull
cmp
jp
push
push
pop
or
rolb
dec
cmp
xor
jne
or
push
cld
aaa
mov
insb
in
dec
push
imul
pop
push
mov
jne
ss
dec
imul
cli
cmpsb
xor
outsb
gs
idivb
push
jo
push
jbe
dec
inc
popa
lock
clc
mov
xor
jo
inc
jb
pop
pusha
sub
xor
shlb
mov
xor
or
inc
dec
ss
push
jb
push
in
jae
xor
aam
push
cmp
push
push
out
jb
sahf
add
mov
dec
xor
push
push
je
gs
push
mov
sub
push
dec
dec
pop
jo
popa
shll
movsb
inc
js
std
mov
dec
push
outsl
insb
jns
xor
outsb
inc
mov
ja
xor
inc
imul
dec
jle
or
pop
xor
sub
mov
repnz
jle
outsb
ja
aam
rcrb
outsl
inc
xchg
fisubrl
jno
xor
mov
ret
out
sbb
ja
aam
inc
test
xor
xor
mov
es
test
fdivl
adc
push
dec
jbe
xor
dec
xchg
or
sub
push
pop
xor
push
xlat
subb
ss
push
cwtl
xor
inc
rorl
cmp
arpl
lcall
imul
fidivs
js
xor
jle
cmp
dec
popa
inc
mov
stos
js
outsb
je
aaa
bound
imul
inc
je
jne
pusha
push
insl
xor
insl
xchg
fidivs
inc
call
xor
dec
mov
outsb
adc
dec
push
call
dec
loopne
jne
xchg
cmp
sbb
mov
dec
jbe
pop
xor
push
ret
push
aaa
pop
push
push
cmp
pop
imul
and
mov
imul
mov
mov
dec
fs
popa
out
bnd
inc
rcr
ljmp
adc
fisubrl
mov
jne,pt
dec
je
lods
push
dec
push
dec
repnz
jo
dec
cmp
aaa
mov
push
inc
dec
mov
pop
je
jns
pushf
jo
rclb
stos
cs
cmp
adc
outsb
xchg
dec
dec
icebp
pop
mov
cmpsb
je
dec
dec
push
jne
push
rorb
out
rorb
xor
gs
push
popa
imul
pop
subb
inc
data16
jae
dec
out
adc
outsb
xchg
xor
js
bound
sub
dec
push
in
pop
lea
outsl
out
dec
xchg
jae
push
xor
insb
push
jp
loop
adc
mov
gs
dec
dec
jno
add
ja
jno
jb
jae
pop
push
mov
dec
loopne
mov
push
movsl
adc
xor
xor
pop
lock
add
mov
jle
push
inc
dec
inc
pop
or
dec
pop
data16
add
dec
push
enter
out
outsb
dec
cld
test
xor
dec
outsb
jno
test
adc
ja
push
inc
xchg
and
jbe
rcr
push
inc
je
push
je
jbe
dec
push
pop
je
test
sbb
or
ret
jbe
xchg
push
lret
gs
inc
outsl
pop
dec
loopne
outsb
cli
sub
sub
push
fs
push
outsb
mov
add
fsubs
in
dec
inc
jno
push
push
dec
movsl
loope
cs
inc
push
ds
and
inc
out
gs
cld
push
xor
lret
outsb
int3
data16
push
ret
or
or
mov
xor
push
repnz
fidivl
sub
push
cs
xor
clc
pop
dec
xchg
xor
cmp
cmp
dec
jno
ret
sbb
imul
push
lods
cmp
pusha
int
pop
gs
mov
in
xlat
add
pushf
pop
dec
inc
ja
push
sub
jno
push
insl
dec
mov
xor
push
dec
xor
xor
fs
fs
inc
call
xchg
scas
out
lods
xor
popa
dec
imul
cli
push
icebp
xchg
mov
add
pop
dec
push
inc
add
inc
sbbb
sbb
inc
bound
or
inc
xor
ds
icebp
sbb
pop
push
cmp
cmp
xor
dec
xor
inc
push
cmpsb
adc
mov
test
xor
jo
push
mov
add
test
xchg
cmp
fs
mov
cmpsb
ja
pop
add
xor
sbb
outsb
dec
fildl
mov
cmp
pop
dec
outsb
adc
mov
push
mov
jbe
dec
mov
push
fadds
push
das
xor
or
ja
push
js
pop
addr16
ja
lock
sbb
mov
inc
insl
popa
push
dec
mov
xchg
sbb
std
push
push
push
imul
dec
xor
inc
cmp
cltd
out
push
push
ljmp
jne
dec
xor
mov
popa
xlat
xchg
xor
inc
add
inc
jg
inc
inc
insb
aaa
inc
imul
pop
jno
ret
xor
cmp
lock
js
fdivrs
mov
cs
data16
push
xchg
inc
xchg
jae
gs
sbb
inc
cli
cmp
rcrl
push
bound
dec
jb
lods
pop
dec
pusha
stos
dec
mov
stos
insb
push
push
cmp
jp
js
jne
je
inc
pop
inc
sbb
out
jp
jbe
xchg
pushw
inc
imul
addb
inc
push
inc
imul
push
aaa
popa
xor
jns
insb
dec
mov
push
insb
push
gs
in
popa
jb
arpl
push
lods
mov
pop
inc
push
nop
outsb
inc
and
clc
jbe
insb
dec
inc
jbe
mov
dec
pushf
pop
push
scas
fs
inc
push
dec
xor
jg
pop
ss
inc
loopne
push
insb
jo
insl
ss
or
xorb
push
je
inc
xor
pop
jbe
js
pop
out
bound
jl
push
push
dec
int
mov
push
sbb
pop
cmpsb
dec
mov
js
push
pop
push
xchg
loop
fdivl
xor
imul
fs
push
pop
shll
je
jae
ss
push
and
xor
cmp
jns
mov
push
fsubs
bound
mov
inc
sbb
or
inc
xor
sbb
dec
jae
insb
push
xor
push
push
bound
xor
stos
outsl
sub
test
mov
outsb
inc
aad
inc
mov
mov
fs
push
push
push
mov
imul
ss
clc
push
fsubrs
push
push
xor
data16
dec
dec
cmp
xor
cs
fs
push
dec
mov
dec
out
and
dec
mov
xchg
dec
fs
cmp
scas
dec
pusha
jns
inc
inc
jo
ficoms
ss
dec
xor
data16
mov
dec
outsl
ja
ss
inc
inc
jb
sbb
xor
js
inc
icebp
cmpsb
inc
push
jl
je
cmp
jno
inc
andb
loop
xor
addr16
insl
push
out
addb
loopne
dec
inc
xor
dec
test
jno
push
push
add
les
jb
jae
dec
bound
sub
inc
bound
cli
and
out
dec
push
bound
jl
push
es
adc
pop
xorb
push
xor
in
xor
testb
dec
inc
xor
mov
out
dec
xor
jns
push
push
test
or
jno
jne
mov
add
dec
push
inc
and
cmp
push
sub
xor
inc
mov
xor
pop
incb
push
cmp
gs
dec
data16
addr16
jbe
push
and
cmp
pusha
dec
xor
imul
lods
inc
xor
push
jne
into
das
push
cmp
imul
lock
xchg
push
xchg
pusha
imul
and
fwait
hlt
dec
push
les
hlt
xchg
xor
cmp
adc
xor
lods
xorb
imul
hlt
je
inc
xchg
mov
call
pop
insb
push
mov
jno
xor
sbbl
jo
cli
dec
push
jo
or
push
fs
hlt
scas
scas
xchg
ficompl
inc
add
push
jns
mov
pop
bound
pop
aaa
stos
dec
cmp
ret
push
xor
push
xor
lea
pop
ljmp
call
inc
push
sbb
dec
xor
sbb
push
mov
dec
jb
jb
insl
push
orb
mov
xor
xor
imul
push
inc
add
pop
xor
and
je
bound
add
popa
es
pop
jbe
adc
adc
fidivl
push
cmp
rclb
jne
jo
dec
or
dec
xchg
sbb
testb
dec
in
outsb
arpl
mov
dec
arpl
bound
hlt
pop
dec
mov
in
pop
push
xor
and
enter
push
stos
test
dec
arpl
push
xor
call
ss
pop
xor
inc
push
inc
push
push
or
jo
push
push
popa
jae
imul
push
decb
push
cs
imul
sbb
push
lret
adc
mov
push
inc
jle
inc
ja
bound
dec
cmp
call
sbb
dec
xchg
add
add
inc
jb
cmp
inc
push
xor
cmpsb
xor
jbe
inc
inc
insl
dec
inc
pop
push
and
into
push
xor
vmovdqu
imul
dec
shlb
dec
push
pop
sub
sub
js
dec
dec
push
jecxz
or
fs
push
jne
inc
xor
inc
mov
and
gs
xor
aaa
addr16
push
inc
add
icebp
pop
dec
xor
push
aam
test
out
gs
fs
dec
jl
addr16
jae
push
push
pusha
mov
push
insb
pop
inc
inc
jbe
mov
pop
loopne
rorb
dec
imul
push
or
rolb
xor
dec
js
inc
mov
fsts
adc
out
mov
jp
in
js
jae
dec
xor
mov
js
xor
jno
mov
insb
pop
ljmp
push
insl
push
dec
addr16
or
hlt
sbb
fisubrs
cmp
cli
gs
push
xor
push
fdiv
inc
rolb
inc
inc
aaa
gs
je
loopne
xor
dec
mov
push
ja
push
jo
jae
push
ja
nop
xorb
mov
xor
push
add
test
sbb
mov
inc
xor
dec
ja
mov
add
cli
inc
push
bound
sbb
jb
push
popa
cli
stos
sbb
inc
rcl
sub
dec
subb
inc
dec
arpl
xor
push
or
push
imul
cli
or
inc
ja
sub
inc
bound
cltd
push
sub
push
push
dec
test
pop
or
arpl
and
ja
les
dec
outsb
lcall
add
xor
xor
gs
cs
int3
aaa
in
aaa
dec
insl
inc
push
xor
xlat
cmpsb
push
xchg
ja
mov
push
imul
push
arpl
inc
sub
push
xlat
mov
bound
dec
cmpsb
xor
stos
push
mov
popa
add
movsl
fidivl
popa
ja
addr16
aaa
call
fwait
aam
js
push
cwtl
adc
push
imul
out
push
loop
mov
mov
mov
adc
push
inc
bound
call
pusha
insb
push
jae
repnz
imul
es
push
mov
aad
rorb
dec
xor
es
enter
xor
dec
jno
int3
dec
arpl
push
push
jbe
push
or
or
push
xor
test
scas
jae
cmp
inc
dec
push
push
push
mov
xor
push
inc
dec
push
inc
mov
and
fs
sub
test
scas
add
push
push
xor
push
xor
push
and
inc
mov
fcoml
mov
movsb
cmp
jo
xor
sub
xor
push
ja
jmp
push
insb
popa
push
outsl
insb
dec
dec
pop
or
sub
pop
es
push
dec
outsl
push
add
mov
dec
add
into
dec
loopne
jnp
add
push
insl
dec
inc
xchg
ss
push
ret
clc
inc
arpl
fs
movl
arpl
jo
aaa
push
xor
dec
jb
outsl
data16
ds
add
outsl
mov
dec
push
push
sub
push
xchg
lea
push
jno
jb
data16
jne
aaa
enter
inc
ljmp
bound
enter
mov
sbb
out
cs
test
dec
xchg
or
dec
mov
int
scas
clc
push
fs
jns
je
clc
inc
in
sbb
push
sub
sub
imul
dec
pop
inc
jo
loopne
inc
js
push
outsb
jp
push
push
sub
push
inc
out
dec
push
loopne
das
loop
xor
inc
mov
loopne
adcb
insl
mov
outsl
push
dec
inc
inc
add
push
push
sahf
dec
in
test
xor
inc
push
inc
dec
add
inc
data16
xor
das
int3
dec
xor
dec
js
push
insb
enter
pushf
push
pusha
loopne
inc
xor
add
js
imul
jbe
push
inc
orb
js
jns
adc
insb
jae
dec
push
push
push
dec
lret
call
pop
push
inc
fbld
dec
dec
jae
into
arpl
cmp
arpl
dec
and
pop
lock
fisubs
test
dec
jb
dec
and
jo
pushf
fs
and
nop
inc
pop
ret
pop
or
outsl
dec
push
push
or
jbe
mov
adc
lock
inc
pusha
insb
call
lock
dec
hlt
push
pop
push
dec
bound
pushw
xor
fs
outsb
adc
js
imul
inc
push
xor
mov
sbb
or
ss
dec
insl
mov
and
jb
ja
dec
mov
or
js
inc
push
push
pop
je
mov
push
subb
xor
in
lods
inc
into
push
outsw
xor
push
movsb
xor
enter
pop
dec
push
movsb
mov
dec
insb
ja
pop
push
incb
mov
push
lock
dec
shlb
add
dec
xor
cs
or
dec
push
cwtl
push
inc
mov
dec
inc
cwtl
nop
jo
sbb
push
cmp
loopne
fwait
push
into
jb
shrb
out
test
jne
push
lds
jo
inc
push
out
fs
sar
xor
inc
cmp
push
dec
popa
dec
insb
bound
into
push
jns
dec
xor
mov
push
inc
jb
lods
inc
and
and
les
sbb
aam
xor
xor
fs
pop
jg
xor
jns
ss
jl
xchg
dec
mov
dec
xor
insl
jns
gs
xor
cli
lds
inc
xor
ss
adc
sti
mov
push
push
enter
jb
test
lds
jb
imul
dec
or
ljmp
imul
dec
xor
dec
lcall
faddl
push
push
outsb
push
jno
dec
dec
ja
push
lock
shlb
outsb
cmp
pop
inc
outsl
sub
push
insb
cmp
arpl
dec
mov
jns
bound
mov
insb
jne
sbb
notb
mov
pop
xor
xor
pop
inc
push
pusha
xlat
adc
add
inc
and
test
inc
push
jo
insl
inc
mov
stos
cwtl
xor
push
inc
jbe
push
dec
dec
orl
addb
fcmovu
or
cmp
dec
orb
add
jno
push
aaa
enter
hlt
fisttpl
push
arpl
fs
inc
dec
arpl
pop
xchg
adc
and
js
ss
inc
int3
dec
adc
shl
jne
aaa
dec
or
jp
cs
dec
inc
push
cmp
xchg
imul
hlt
dec
testb
pop
inc
pop
inc
les
push
cmp
xor
dec
dec
lret
subb
pop
and
push
inc
xor
adc
add
add
subl
outsb
insb
lea
add
stc
out
stos
cld
cmp
add
add
xor
mov
and
sbb
add
or
mov
sahf
adc
mov
cmp
icebp
xor
call
sub
jge
add
add
pushf
pop
add
add
out
add
mov
xor
cmpsb
repnz
adc
add
repnz
inc
cmpsl
icebp
fnsave
jns
or
roll
or
incl
cs
and
add
sbb
inc
loopne
into
fstl
pop
sbb
jg
adc
into
add
in
add
add
in
pop
lock
add
sub
jl
add
xchg
push
fistpll
aam
or
rcr
xchg
dec
adc
rcrl
out
les
cmp
mov
push
inc
add
add
out
imul
clc
adc
in
pmulhuw
add
call
loope
das
ljmp
out
gs
add
add
imul
or
add
xchg
sub
jb
and
or
jle
xchg
clc
lds
cltd
inc
sbb
mov
mov
sti
inc
or
xchg
add
push
cmp
add
mov
add
jmp
cmp
sbb
std
loop
idivb
pop
out
femms
popf
add
or
pusha
aaa
push
xchg
and
call
jge
fsubl
pop
sbb
cmp
decl
into
mov
mov
loopne
and
add
mov
mov
insl
mov
js
fidivrl
inc
rolb
dec
js
add
add
xor
out
jo
add
add
add
sbb
mov
faddl
jbe
add
lcall
cmp
mov
push
add
and
call
test
and
xor
adc
pop
inc
addl
icebp
mov
jns
jecxz
mov
inc
pop
insb
add
sub
aaa
dec
mov
sbb
mov
loope
pop
push
push
push
add
push
jbe
pop
outsl
mov
test
rcrb
popf
mov
sub
cmp
hlt
ja
sar
lret
jl
loope
or
jecxz
loopne
in
cld
or
add
mov
and
ret
in
sbb
mov
add
pop
lock
cmpl
jmp
add
scas
sti
cmp
ret
daa
sbb
aam
ss
cmpsl
rcrl
es
adc
jo
cmp
mov
fcmovnbe
push
pop
cmp
cmp
mov
loopne
push
adc
jae
or
add
js
mov
xchg
fldl
adc
mov
mov
mov
xchg
aam
stc
sbb
pusha
push
movsl
push
sub
pop
fisubl
out
lods
enter
test
lcall
in
or
jle
xchg
add
sub
pop
mul
or
incb
adc
xlat
out
ja
sbb
sbb
lahf
mov
fstps
push
cmp
and
jo
pop
adc
jbe
test
icebp
fucomp
xchg
or
aad
cmpsb
in
lock
ja
arpl
cmp
mov
in
pop
dec
pop
mov
insb
cmpsl
xchg
xlat
dec
pop
pop
fwait
jns
jbe
mov
aam
or
bound
add
jnp
sar
adc
adc
jle
add
aam
loope
jb
or
add
xchg
fsubs
loope
pop
adc
decl
cmc
out
iret
or
lcall
lret
push
sbb
add
stos
daa
mov
jle
enter
mov
cmp
xchg
js
stos
and
add
jge
pop
cmpsb
adc
ss
mov
lcall
mov
add
xchg
jp
test
jo
insb
push
adc
mov
lea
lahf
push
xchg
cmpsl
xor
lock
sbb
pusha
jle
ds
cs
pop
loopne
int3
daa
scas
cmp
stc
mov
jecxz
pop
test
mov
add
dec
and
dec
xchg
pushf
fisttpl
push
mov
push
pop
add
mov
mov
jl
sub
sub
loopne
push
xor
cmp
orb
jge
data16
inc
add
and
jl
mov
xlat
cmpsl
icebp
pop
and
or
adc
fldt
sub
cli
ljmp
loop
mov
mov
add
pop
mov
in
xchg
mov
inc
push
lcall
jg
hlt
sbb
shll
add
pop
inc
loopne
and
dec
mov
jmp
pushw
ret
mov
xor
xchg
dec
roll
sub
fistps
fnstsw
mov
pop
pop
adc
and
loop
aas
jl
dec
mov
andb
cmpsl
mov
push
ret
sbb
clc
stc
int
xchg
movl
imul
test
adc
out
enter
mov
fmuls
and
cli
dec
sbb
add
out
sti
inc
cld
add
stos
mov
loop
pushl
pop
lahf
fisubrl
xor
and
les
xorb
mov
sbb
fs
jmp
sbb
xchg
repnz
nop
push
dec
push
js
mov
addr16
loope
xor
andb
in
jp
xor
and
cld
adc
or
mov
data16
loop
vcmpsd
out
jg
gs
mov
daa
push
adc
push
je
es
aaa
jmp
push
inc
lret
cmpb
outsb
mov
cmc
or
add
or
adc
lahf
out
mov
pop
mov
sub
or
ds
pop
psrad
in
mov
add
loopne
pop
adc
jbe
inc
push
pop
das
nop
jg
call
call
jge
or
and
add
pop
lock
or
dec
lea
inc
outsl
js
xor
ret
cmp
fcomp
pop
add
rorb
inc
dec
cmp
adc
jo
xchg
movsl
loope
inc
test
in
filds
inc
dec
mov
pop
ror
push
in
push
icebp
dec
xor
cmp
mov
lahf
les
inc
negb
ret
and
mov
mov
inc
mov
daa
add
dec
mov
adc
lcall
dec
add
dec
mov
pop
cmpsb
scas
push
lcall
add
xchg
mov
sub
and
out
add
pop
lock
frstor
insb
pop
jb
gs
cs
adc
andl
pop
lock
jg
adc
aas
jl
imul
dec
stos
jge
fdivrs
lcall
sub
mov
aaa
add
pushf
jnp
ja
pop
cli
ret
cmp
cmp
lcall
dec
test
jno
inc
pop
cs
push
inc
repz
gs
push
pop
loope
lock
cmp
or
push
orb
mov
and
or
lret
ljmp
ffree
movsl
and
sub
push
mov
enter
rcrl
jbe
sbb
inc
cmp
fists
call
movsl
inc
sub
push
stos
mov
add
xchg
add
mov
inc
cmp
or
cmp
in
add
stos
xor
pop
add
aas
push
jl
inc
js
sub
or
xlat
push
sahf
aad
dec
movups
faddl
loopne
aaa
ret
jb
mov
cmp
outsl
mov
push
adc
sbb
das
inc
repz
dec
cld
rorl
aam
insb
mov
or
push
or
or
bound
pop
rorb
lea
xchg
ss
xor
lret
push
cld
xchg
pop
andb
out
sub
sbb
add
mov
inc
das
cmc
push
inc
out
add
pop
loope
mov
fs
decl
xchg
pop
mov
push
loopne
repnz
call
add
fstl
xor
inc
xchg
int3
sbb
xor
jle
fnsave
ret
dec
out
jmp
je
push
xchg
rcr
pop
insl
mov
push
int
cmp
or
mov
cmpsl
xchg
stos
mov
ljmp
jb
mov
pop
dec
inc
mov
push
cs
stos
bound
push
push
repz
mov
repnz
fsubrl
sbb
and
std
cld
pop
push
mov
sub
fimull
rorb
aas
sbb
sub
push
sbb
or
out
idiv
sub
add
xchg
fstpl
gs
lock
loopne
mov
shlb
and
adc
push
push
lret
cwtl
fmul
cwtl
cld
fildll
outsb
add
dec
add
mov
imul
push
dec
lods
addb
icebp
dec
push
mov
cs
sub
sbb
dec
inc
lcall
mov
hlt
add
aad
sbb
add
sub
adc
cld
inc
bound
add
sbb
sub
inc
rol
stc
lret
or
push
cmp
sub
add
outsl
pop
xchg
mov
pop
je
loopne
push
sub
xchg
inc
cmpsb
test
push
jno
push
bound
mov
jecxz
mov
dec
add
jo
cmp
ror
inc
mov
push
add
cli
inc
mov
fucom
dec
xchg
or
or
pop
in
pop
jne
cvtpi2ps
mov
push
mov
stos
jne
cltd
cmp
lahf
icebp
mov
cmp
xor
xor
push
in
bound
daa
pop
sbb
xorl
in
fwait
cwtl
cmp
cmpsl
mov
cwtl
push
fwait
push
pop
sub
mov
roll
rcl
and
add
stc
add
add
aaa
mov
filds
ss
sbb
repnz
xor
inc
pop
jnp
bound
mov
sub
lret
lds
les
ds
pop
push
jl
dec
push
rcrl
or
and
in
mov
mov
push
outsb
add
dec
dec
out
sub
mov
loop
bound
pop
and
out
call
mov
pop
daa
mov
sbb
andb
test
out
mov
ret
sbb
icebp
sub
push
out
xchg
jno
clc
imul
rolb
int
pop
loope
and
mov
xor
mov
cmp
or
incb
int3
inc
lcall
xchg
lret
lods
inc
imul
clc
rcl
mov
int3
int3
aas
xchg
lods
and
adc
leave
jle
mov
pop
ret
loopne
sub
rcl
ljmp
inc
punpcklbw
mov
adc
xor
inc
mov
jns
ja
int
rcrb
xchg
cld
das
and
jnp
mov
sub
and
gs
mov
std
inc
adc
push
ficoms
rorb
add
and
ret
add
out
push
xchg
es
leave
cmp
mov
arpl
int3
inc
mov
xchg
iret
add
cmp
int3
inc
add
mov
fdivrp
bound
lods
cmp
sbbl
cmpsl
xor
sub
cmc
repnz
aad
ret
je
mov
repz
and
pop
gs
outsb
les
xorl
aaa
sbb
add
sahf
mov
pop
popa
mov
mov
adc
adc
sub
in
ret
jl
sub
xchg
add
jecxz
lods
push
xlat
fisttps
jp
mov
lds
roll
andps
push
lret
push
push
xchg
xchg
dec
inc
out
or
mov
aas
push
or
int
xlat
jb
sbb
mov
movsb
cmp
add
or
arpl
and
ja
rol
cmp
pop
test
lret
cmp
pusha
movsb
pop
or
sbb
lahf
dec
je
jmp
in
xor
and
paddusb
shrb
add
cmpsl
add
mov
outsl
pop
push
es
roll
lcall
dec
and
and
jecxz
fcomi
addb
jae
out
into
es
lcall
fldl
lahf
inc
jno
je
outsb
pop
jns
push
repnz
xlat
fnstsw
sbb
mov
adc
loop
dec
icebp
or
mov
cwtl
cmpsl
sbb
lock
fisubs
pop
scas
add
div
cli
addr16
pusha
add
sub
dec
or
mov
xlat
sarl
les
addb
sbb
das
mov
les
data16
enter
dec
pop
mov
imul
add
pop
sbb
scas
loope
lcall
mov
ljmp
push
jns
fnstsw
cmp
adc
jns
mov
fsubs
mov
shll
iret
icebp
in
in
inc
lods
pop
and
push
sarl
fs
adc
dec
xchg
daa
xor
aaa
or
in
pop
or
icebp
sub
push
sahf
mov
xor
sbb
cmp
je
stos
xchg
adc
xchg
xchg
repnz
arpl
outsb
ja
sub
mov
mov
sbb
adc
xchg
dec
jmp
xor
xchg
hlt
cmpl
mov
rcrb
popa
add
call
mov
cmp
or
add
sbb
dec
insl
or
cmpsb
xor
movsl
cwtl
pop
testl
stc
mov
push
je
cltd
and
and
std
pushl
jns
cmp
clc
stos
fwait
call
mov
jle
daa
fstps
adc
xor
mov
sahf
lods
shlb
push
xchg
add
fcoms
out
faddp
inc
mov
xchg
or
in
call
rolb
push
inc
add
int
and
jb
das
cmc
movsl
aas
mov
lsl
pop
fstpt
pop
je
and
xchg
or
sahf
notb
enter
add
pop
jae
push
adc
fwait
push
dec
mov
pop
or
and
sub
repnz
dec
loopne
repnz
loope
or
mov
clc
sub
enter
scas
insb
mov
ds
dec
pop
lahf
xlat
js
jecxz
mov
fidivl
aas
jns
xor
les
repnz
das
jge
stos
mov
aam
add
popf
dec
mov
and
int
mov
jne
int
rcrb
dec
cld
pop
fsubrs
imul
mov
les
jmp
xchg
add
inc
or
popf
pushf
xchg
loopne
cmpsl
outsl
dec
jmp
mov
adc
pop
pop
sbb
sub
call
pop
mov
add
xlat
dec
fldl2e
mov
push
add
shll
shlb
mov
mov
outsl
and
jns
add
ret
sbb
dec
push
rorb
push
ljmp
out
add
add
js
add
clc
inc
push
mov
scas
test
rol
xlat
sbb
pop
imul
popf
fwait
push
and
mov
daa
jae
cmp
pop
mov
fldt
mov
sub
push
pop
or
lret
pop
cld
add
lds
push
mov
out
cmp
rcrl
and
xchg
loope
mov
add
inc
loope
scas
jmp
mov
arpl
push
xchg
idivl
inc
gs
sbb
inc
xchg
fwait
leave
aad
cmpsl
loope
pushf
add
dec
mov
mov
ja
lahf
bound
pop
sbb
adc
in
mov
aam
enter
mov
and
pop
mov
sbb
bound
loopne,pt
sub
xchg
add
lds
sbb
aad
jnp
je
loope
add
mov
sahf
mov
dec
loop
test
sub
ret
xlat
filds
enter
jge
add
fnstcw
popa
mov
xor
inc
scas
int3
cmpsl
xor
xor
and
sbb
fdivl
das
ss
into
repz
adc
scas
cmpsb
rcll
sub
pop
lds
arpl
cmpb
test
cmp
inc
pop
fadd
adcl
mov
lods
lods
jb
int
dec
in
jns
push
jne
mov
xor
int3
fcomi
std
add
push
lea
add
je
clc
outsl
call
or
sbb
sahf
loope
adc
loopne
xchg
lds
mov
push
mov
push
jp
loopne
dec
mov
inc
sub
mov
ds
test
data16
in
es
int3
cmp
faddl
push
jne
movl
jl
mov
jns
int3
dec
mov
rcll
enter
dec
je
rcl
jecxz
es
popf
fsubrs
or
sub
push
fwait
jo
movsl
sbb
jo
mov
cmp
push
push
insl
scas
or
jge
subl
out
call
bound
cmp
imul
push
mov
mov
push
in
fldt
test
jl
mov
jne
das
sbb
ja
cwtl
push
adc
sbb
jae
orb
scas
daa
repz
stos
adc
inc
xlat
divl
testl
outsl
mov
and
int
pushf
or
lcall
push
sarl
shlb
int3
push
jbe
shll
mov
mov
jmp
in
pusha
mov
lea
xor
std
pop
jg
mov
sub
inc
inc
xchg
cs
pusha
rorl
pusha
cld
add
pop
xchg
out
test
loop
mov
adc
add
pop
sbb
xor
in
pop
sarl
cli
jl
mov
rcr
jns
xchg
mov
repz
out
mov
mov
shll
pop
testb
ds
popl
pop
push
add
ja
pop
incl
sahf
dec
mov
push
cltd
addr16
fldl
dec
daa
and
adc
or
inc
cmpsl
aaa
lcall
subl
pop
ljmp
repz
jmp
inc
mov
add
iret
or
and
inc
sub
negb
or
andb
or
int3
sbb
or
xchg
mov
mov
and
sub
lret
mov
jmp
mov
movsb
push
or
or
sub
jp
lea
call
insb
mov
das
int3
rolb
notb
cmp
xchg
rorb
or
xchg
lods
mul
repz
into
pop
mov
scas
sbb
jnp
xchg
xchg
pop
sub
dec
mov
add
std
push
adc
shrb
cmp
loopne
out
inc
bnd
ljmp
sub
pop
jbe
push
xchg
add
xor
or
or
int3
cmp
ljmp
aad
push
xor
push
lods
xor
mov
sbb
sarb
add
inc
jge
adc
mov
addr16
push
dec
pop
out
pop
add
addr16
mov
cmc
pop
lods
mov
out
inc
mov
sub
jge
mull
fsubl
imul
sbbl
add
sbb
mov
add
push
pop
in
jecxz
leave
push
fdivrs
cmp
cmp
or
xchg
cmp
loop
mov
push
cmp
js
push
push
add
mov
rorl
xchg
mov
scas
or
mov
jg
dec
fisubrs
cmp
cmc
sbb
cmpsb
xchg
and
cmp
das
cmc
pop
push
add
inc
inc
mov
in
jecxz
jecxz
lret
xor
pop
sub
pop
cld
stc
sbb
xchg
mov
sahf
pop
xchg
clc
loop
pop
mov
mov
add
loope
add
and
mov
or
push
fidivrs
out
lahf
mov
xchg
int
dec
gs
rorb
add
ljmp
cltd
and
pop
mov
fnsave
fiadds
lahf
dec
outsb
sub
jnp
mov
sub
fprem
repnz
ljmp
jle
adc
loop
adc
stc
add
mov
icebp
cmp
ret
mov
and
sahf
or
xor
push
push
jmp
lock
mov
or
mov
cmpsl
test
aam
cmp
aas
outsb
aas
popa
sub
inc
mov
add
push
in
mov
inc
lock
mov
push
rcrl
or
inc
imul
out
and
push
or
js
xor
push
nop
inc
lcall
int
loopne
adc
icebp
std
sub
stos
sbb
ret
movsb
xor
mov
lahf
add
push
sub
daa
aaa
or
stc
xchg
xor
imul
cli
in
inc
loopne
test
mov
aas
jge
cwtl
pop
cltd
mov
xor
es
mov
inc
adc
sbb
xchg
xlat
mov
sahf
movsb
mov
inc
arpl
push
rcrl
es
inc
jnp
or
xlat
dec
pop
inc
into
js
nop
jle
int3
sub
out
xor
cli
jne
outsl
dec
pop
ret
xorb
filds
mov
orb
aaa
jl
mov
cmp
add
jmp
xchg
cmp
int
xchg
cwtl
xchg
mov
stos
hlt
adc
loopne
push
cmp
push
dec
fisubrl
inc
inc
or
clc
shrb
inc
pop
orb
mov
inc
mov
sahf
push
fstps
sbb
sub
icebp
insl
mov
push
mov
pop
jno
lahf
icebp
add
clc
push
mov
sbb
push
jne
cli
and
aas
dec
das
pop
cmp
idivl
gs
mov
mov
cli
lcall
scas
sbb
adc
push
mov
scas
jo
orl
adc
push
dec
inc
ret
add
dec
cltd
dec
xchg
add
add
xlat
dec
outsl
add
stos
sub
insb
movsb
aam
jmp
sub
daa
ds
xor
push
aaa
inc
addr16
dec
jb
shl
mov
mov
shrl
cmpsb
inc
pslld
and
jb
mov
mov
repnz
mov
scas
mov
rorl
rcrb
push
xchg
adc
pop
mov
inc
cltd
mov
adc
mov
adc
cld
adcl
pop
icebp
mov
mov
into
jo
jmp
lea
push
icebp
mov
nop
ret
push
insl
adc
andb
push
test
data16
ds
dec
adc
xchg
mov
mov
dec
mov
add
clc
mov
pushf
adc
fldt
adc
push
xchg
cmpsl
movsb
lea
mov
and
jns
stos
out
movb
adc
negl
sub
ror
roll
mulb
push
sbb
lret
ja
and
xchg
fimull
dec
test
mov
sbb
ret
lock
ds
sub
mov
cmp
test
mov
cmp
push
into
sub
add
sbb
pop
in
adc
add
cmp
dec
in
mov
mov
push
leavew
arpl
sbb
cmp
lea
xchg
or
jae
sbbl
jbe
sub
aas
fstpl
lods
sbb
pushw
aam
cmpsl
jle
fs
ret
dec
mov
idivb
jmp
sbb
scas
shrb
mov
xchg
popf
sub
mov
jp
adc
cmp
mov
fsubl
xchg
movsb
idivl
stos
mov
repnz
stos
dec
push
pushf
xchg
popf
xor
lods
cmpsl
rorl
fsubrs
ljmp
xor
js
mov
decl
dec
adc
pop
lds
loopne
ret
sti
js
cli
xor
mov
add
decl
aam
int
cmc
xor
xchg
arpl
mov
mov
push
pop
andb
popf
outsl
push
push
imul
fisttps
sbb
push
add
icebp
inc
pop
pop
loop
xchg
bound
fistps
adc
repz
adc
cmp
add
inc
pop
push
mov
cmp
clc
adc
loopne
xor
push
push
cmp
test
jbe
jg
pop
push
sbb
add
xor
std
lret
dec
fistps
jp
pop
imul
sbb
sub
aam
test
adc
mov
in
pop
arpl
cmpsb
pop
imul
xchg
scas
rcrl
repnz
fimuls
bound
addb
dec
push
add
pop
cmp
ret
scas
push
mov
push
mov
cmp
and
out
xchg
hlt
nop
test
pop
dec
mov
cmp
aas
call
inc
cltd
out
mov
pop
xchg
enter
mov
popf
mov
mov
or
fisttpl
fcomps
decb
pop
mov
or
mov
sbb
and
add
cmp
insb
cmp
add
xchg
call
icebp
add
mov
aam
xor
cmp
adc
sub
adc
orb
ljmp
xor
push
loopne
jg
sahf
add
pop
xchg
in
xchg
jmp
ljmp
xor
push
or
cwtl
shll
mov
xchg
sahf
fidivs
inc
xchg
imul
scas
test
dec
xor
call
jg
jns
xchg
nop
pop
movsl
jecxz
ret
int
dec
push
push
enter
and
jmp
dec
imul
sbb
fsts
icebp
pop
clc
scas
sub
add
jp
std
or
adc
xchg
stos
mov
adc
lods
mov
js
dec
xor
push
mov
ret
in
dec
fbstp
cwtl
xchg
sahf
inc
pusha
mov
jg
orb
cmpsb
jg
clc
hlt
cmp
nop
mov
mul
adc
inc
adc
xor
shll
inc
push
cwtl
cli
push
push
mov
pop
cwtl
lret
jo
or
adcb
mov
icebp
or
jne
cmp
inc
sub
aad
dec
sbb
sub
inc
lods
inc
pop
lods
push
jl
leave
dec
daa
stos
xchg
test
fs
aas
xlat
pop
dec
push
js
adcl
mov
cmp
call
pop
loopne
inc
comiss
loope
dec
dec
in
dec
aad
adc
cmp
inc
sub
jb
mov
sbb
mov
and
into
lods
or
ljmp
adc
imul
aam
imul
fstps
shll
insl
jp
rcr
or
les
das
repnz
aaa
cld
mov
mov
mov
popa
mov
mov
ljmp
pop
mov
enter
or
and
ret
cmc
ds
insb
xchg
sub
cmp
inc
shll
push
icebp
adc
scas
xorb
pusha
sub
out
jbe
sbb
pop
pop
orb
mov
adc
and
xchg
pop
in
in
jmp
fnstsw
mov
or
loopne
dec
jp
mov
lea
pop
and
test
push
add
dec
je
lahf
outsb
push
mov
dec
or
outsl
jge
loopne
inc
ss
out
jo
outsb
adc
or
fnstenv
lahf
lret
shlb
push
or
add
xor
rcrl
and
outsl
icebp
test
fs
pop
not
push
iret
sbb
push
shl
sahf
lcall
and
push
sub
data16
inc
ja
mov
rcrl
jmp
jb
cmp
call
fdivrp
push
mov
or
sbb
movsl
aas
adc
sar
adc
cmp
adc
jmp
adc
add
sti
pushl
push
loope
xor
inc
mov
js
stos
icebp
iret
jge
push
and
sbb
outsb
test
pop
push
fnsave
filds
mov
stos
xchg
ds
mov
aam
addb
orb
inc
push
in
fmuls
test
add
lock
rorb
cwtl
sub
sub
jo
add
ljmp
jl
pop
jnp
sub
ss
mov
lcall
mov
lahf
cmp
cmpsl
aaa
je
sbb
dec
bound
xor
push
jae
mov
out
lea
inc
test
jle
push
push
pop
and
pop
movl
inc
data16
call
push
push
cmp
pop
pop
mov
je,pt
in
in
mov
inc
mov
pop
insb
xor
test
dec
xchg
scas
fwait
mov
cwtl
adc
xchg
push
inc
and
cmp
jno
mov
and
fisubrl
cmp
sarl
push
loopne
js
push
pop
sub
mov
add
sub
stos
jne
or
das
or
clc
adc
jns
add
lods
fistpll
inc
xchg
orb
cmc
mov
ds
std
push
jle
cmp
jo
push
adc
jle
es
cld
fidivs
add
and
xor
adc
int
notb
adc
aam
bts
cwtl
andb
push
sub
leave
repnz
icebp
je
cmp
xor
imul
xadd
push
fcoms
ffreep
cmp
xchg
push
shll
jle
xchg
cmpsb
adc
push
inc
mov
sub
test
jno
jp
cmpb
sbb
mov
call
loop
or
push
fmull
stc
jbe
inc
xor
std
lahf
sbbl
outsb
xchg
lock
pop
xchg
mov
mov
icebp
jmp
popa
sub
push
or
cmp
icebp
or
push
and
push
sub
sub
paddusb
lods
lods
inc
inc
aad
jg
je
xlat
lahf
mov
push
ds
sub
bound
sub
mov
push
push
adc
outsb
loop
stos
jmp
icebp
pop
das
adc
pop
jns
loopne
cld
cmp
inc
mov
or
insb
cli
adc
scas
inc
pushf
mov
cmpsl
push
scas
addr16
add
ss
cmc
jmp
movsb
enter
call
sbbl
mov
fistps
mov
shll
push
aam
mov
mov
mov
js
mov
lahf
mov
cmpsb
test
int
adc
xchg
bound
jge
lret
push
push
jnp
sub
cmp
jp
sti
lods
dec
fs
test
pop
mov
aam
inc
mov
jne
cltd
jno
lahf
addl
mov
pushf
mov
inc
sbbb
mov
loopne
push
jle
aad
add
movb
dec
and
gs
inc
cmpl
mov
sbb
mov
nop
inc
mov
hlt
push
add
jp
fidivl
lea
mov
xchg
out
daa
jbe
jecxz
aam
testl
loop
mov
jl
inc
loopne
rolb
mov
stos
ds
mov
orb
cmp
adc
insl
pop
lea
icebp
les
insb
testb
cmpsl
mov
xchg
mov
test
ds
shlb
push
mov
mov
imul
stos
andb
pop
std
push
pop
stos
add
repnz
or
mov
mov
add
ror
cmpl
insl
xor
cmp
cmp
dec
stos
jmp
int3
push
cld
fadds
mov
pop
jge
inc
push
out
lahf
add
adc
filds
mov
xor
data16
jno
lcall
sbb
fsubl
std
rorb
idivl
mov
insb
inc
push
and
mov
stos
mov
push
sub
test
notb
sbb
cmp
pop
fdivs
rclb
adc
adc
jmp
stos
or
call
mov
jl
sbbb
fildll
push
and
shll
test
mov
into
pop
testl
and
lea
cmc
arpl
push
shlb
or
shlb
hlt
jne
xchg
dec
jmp
pop
or
add
out
notl
xor
lods
fisubrs
mov
adc
daa
std
fisttpll
push
enter
or
rorb
xorps
push
cmp
adc
in
inc
cmp
xchg
inc
pop
dec
pop
scas
xchg
push
cs
push
sti
mov
out
clc
pop
mov
mov
scas
and
ja
jmp
adc
sub
xor
xchg
leave
add
orl
mov
scas
into
ficompl
sub
adc
lds
dec
mov
inc
dec
mov
insl
cmovo
mov
jle
pop
xor
gs
scas
push
daa
push
jle
cltd
fildl
lods
aam
push
clc
add
adc
mov
daa
insb
sbb
aam
out
add
fidivs
push
das
decl
mov
std
stos
imul
mov
clc
add
adc
ret
js
imul
cmpsl
jmp
js
xor
inc
ljmp
ss
shl
xor
ss
jl
sub
add
insb
rol
pmaxsw
adc
or
inc
shll
inc
sarl
push
push
mov
loope
xchg
cmp
outsb
movsb
mov
sub
or
cmc
js
lock
js
adc
mov
xchg
fucomip
lea
jge
xchg
out
pusha
push
mov
pop
dec
cld
sbb
jb
lea
insb
rorb
add
adc
push
jge
fcompl
mov
fisttpl
fisttpl
push
cmp
mov
xchg
adc
mov
loop
jne
xor
mov
test
fadds
xchg
xor
js
pop
loop
movsb
adc
mov
cwtl
cmc
shlb
fwait
movsb
mov
sbb
arpl
mov
xchg
test
sub
nop
sub
add
xchg
hlt
dec
lahf
stos
mov
ret
mov
mov
jg
in
pushf
jo
clc
mov
add
shll
cli
iret
mov
addr16
movsb
repnz
add
and
mov
lock
jle
pop
cmp
lcall
shlb
jae
inc
cmp
out
jge
inc
jnp
rcr
fldenv
push
xchg
ret
int3
mov
and
ror
mov
lds
sub
mov
mov
jbe
fwait
lret
bound
into
push
mov
lea
push
add
test
inc
sbb
cmp
dec
loopne
ljmp
inc
pop
daa
mov
popa
aad
test
adc
jnp
mov
push
popa
push
incb
add
mov
das
nop
push
imul
sbbb
aam
cmpsb
mov
in
loope
xor
orb
adc
mov
fiadds
jl
add
cmovbe
loope
ss
add
test
fwait
out
aas
aad
mov
xchg
int3
inc
loop
fmuls
rcll
xchg
inc
divl
sarb
icebp
aas
lcall
mov
gs
cmp
jecxz
shlb
aad
mov
mov
and
test
dec
sti
fimuls
call
xchg
test
sub
call
jl
mov
sbb
or
stos
adcb
sub
fs
lahf
je
cld
aaa
dec
and
pop
dec
jl
cli
dec
clc
cli
lds
js
cld
xchg
inc
pop
jno
ljmp
inc
pop
xor
sbb
js
mov
and
or
hlt
and
lret
aaa
lock
dec
aad
jns
pop
xor
sbb
adc
push
xor
lock
mov
inc
test
pop
dec
push
push
cld
fcom
cmpb
cmpsl
outsb
loop
js
sbb
dec
mov
and
mov
jo
das
mov
and
push
pop
mov
add
and
subb
xor
call
js
push
jnp
call
icebp
cmp
sbb
mov
mov
and
push
or
jp
cmp
aam
in
cmc
add
jns
sarl
push
mov
push
jne
nop
add
out
inc
sub
cmp
pushf
sbb
les
push
mov
mov
cmpsl
loope
sbb
clc
jg
xorl
cld
stc
call
arpl
ds
xlat
jle
dec
popf
add
xchg
sbb
lahf
daa
in
mov
pusha
add
jl
adcl
sbb
aam
jb
xchg
loope
arpl
ss
push
xchg
mov
pop
mov
orl
jns
inc
mov
cmp
sbb
enter
push
int
in
inc
mov
or
add
mov
cmp
push
negb
mov
mov
test
dec
int3
mov
pop
pop
sbb
xor
push
ljmp
scas
movb
add
scas
pop
sahf
or
jle
fsubrl
dec
faddp
std
cmpsl
ret
inc
repz
inc
jmp
or
push
adcl
or
mov
shll
in
jo
and
adc
cltd
fsubrl
movsb
rcll
push
and
add
call
mov
jo
mov
je
adc
dec
shll
sahf
outsl
adc
lahf
scas
inc
loop
mov
pop
mov
or
ficoml
mov
and
ljmp
adcb
repz
xor
dec
lret
test
jl
xor
add
dec
and
jne
sbb
ja
cld
fcmovnb
jge
cmp
les
test
sti
aad
std
adc
iret
lahf
test
pop
lock
sbbb
out
daa
jl
inc
add
jg
clc
or
and
sub
sbb
inc
dec
xor
ret
push
ljmp
mov
cld
into
jl
shll
sub
xlat
lods
xor
push
xor
out
or
pop
push
add
xchg
or
stc
dec
andb
push
pop
or
into
xchg
xchg
mov
lds
jmp
rcrl
push
mov
pop
clc
inc
pushf
push
mov
scas
inc
jp
rolb
jns
or
shrl
lret
in
adc
adc
cmc
bnd
incb
xchg
fldt
bound
inc
out
cmp
fsubl
filds
mov
pop
cmc
mov
sbb
outsb
call
pop
loopne
xchg
cmp
pop
cmc
mov
mov
push
push
mov
loope
mov
cmp
loope
dec
das
pop
ljmpw
mov
ds
and
jmp
cmp
adc
insb
xchg
inc
add
adc
repz
std
cld
push
les
jp
lea
stc
lret
test
mov
pop
repz
add
xor
cmpsb
mov
and
adc
mov
sbb
inc
and
ja
popa
mov
xor
add
adc
ret
loop
pop
jp
int3
add
scas
roll
lahf
mov
ret
test
rcr
inc
dec
clc
mov
movsl
repnz
icebp
cmpsb
loop
jmp
rorl
cmc
adc
and
jp
lahf
jb
and
loop,pt
mov
paddb
sbb
sub
jg
test
test
and
roll
sub
inc
data16
addl
xor
sbb
bound
push
bound
mov
mov
scas
pop
mov
lret
jo
sbb
loop
fcom
jnp
push
sub
or
inc
test
jmp
pop
aad
and
and
pop
andl
push
sbb
out
dec
jae
cmp
test
hlt
inc
pop
pop
mov
or
add
dec
movl
inc
arpl
adc
ret
xchg
dec
in
int3
push
aas
out
stc
fadd
dec
inc
pop
inc
sar
sbb
xor
xchg
push
fists
in
jbe
mov
mov
add
fst
repnz
xor
inc
jecxz
cmp
ds
fldcw
add
jo
mov
dec
stos
hlt
scas
mov
sub
ss
sub
and
mov
pop
mov
icebp
in
icebp
stos
or
push
push
sbb
ret
mov
pop
dec
loop
or
sbb
mov
jne
mov
ljmp
and
ljmp
and
xor
popa
cmpsb
adc
xchg
in
dec
jmp
loope
mov
adc
cwtl
jl
ss
push
or
xchg
jl
dec
mov
push
rcr
rorb
mov
and
std
sbb
sub
mov
xor
push
loope
into
mov
push
adc
push
dec
test
jae
mov
out
cmpsl
or
inc
pop
xchg
in
sub
aad
loope
mov
sbb
outsb
sbb
sbb
les
inc
rorb
test
lcall
arpl
jbe
dec
xchg
mov
xor
pop
imul
lea
xchg
popf
or
fisubl
lock
mov
jb
mov
notb
dec
addr16
mov
inc
push
fwait
es
adc
rcrb
jecxz
or
adc
loope
les
mov
popa
addl
clc
rcrb
add
xchg
push
mov
mov
add
sbb
aaa
cmpsb
dec
sahf
sbb
dec
xchg
mov
stos
scas
loope
jno
mov
and
inc
clc
jnp
add
cmp
lds
rcrl
daa
push
inc
stc
sti
dec
ja
arpl
test
mov
ds
scas
push
xor
push
popa
cld
repnz
pop
xor
rcl
imul
mov
push
js
outsb
jo
mov
or
subl
lret
sub
mov
imul
adc
stos
into
addr16
mov
fcomps
sti
xchg
push
sub
inc
stos
xchg
mov
mov
cmpsl
aad
cmp
lcall
out
sbb
not
lock
inc
cmp
cmpsb
xchg
jp
adc
subl
sbb
dec
ret
inc
xchg
inc
ret
jg
dec
mov
enter
cmp
ss
add
sub
mov
pcmpeqw
and
in
mov
adc
mov
popa
add
sub
cld
push
lods
ds
sbb
leave
lahf
sub
call
outsb
sbb
ja
sbb
push
hlt
lods
sub
aam
cmpsb
mov
xor
push
mov
add
jno
rorb
and
jp
pusha
mov
mov
loopne
push
sbb
inc
jg
push
jge
adc
mov
mov
mov
test
inc
cmp
xor
cld
pop
sbb
lds
cwtl
push
lcall
xchg
mov
cld
pushf
add
sub
int
dec
adc
movsb
push
jge
sub
push
ljmp
in
jbe
shl
lods
adc
call
loope
stc
hlt
add
test
mov
inc
xchg
or
daa
shrb
pop
pop
lret
dec
dec
fistpll
inc
dec
mov
push
and
test
pop
sbb
fdiv
dec
data16
jno
cmpsl
push
ficomps
ret
sti
std
and
mov
adc
sbb
fdiv
sbb
enter
movsl
pusha
mov
or
dec
repz
test
addr16
lret
dec
aaa
push
cmpsl
ja
jbe
loop
in
ja
mov
pusha
outsl
loop
jp
xchg
cmpl
jne
movsb
fidivrl
mov
cmpl
aam
add
xor
loopne
lea
orb
leave
clc
sbb
and
shrl
add
or
loope
out
das
nop
js
sub
stos
pop
sub
push
pop
cltd
cld
out
and
mov
repnz
fdivrs
lahf
lcall
stos
jmp
push
icebp
leave
dec
test
clc
cmp
and
negb
mov
push
cltd
push
dec
and
sub
bound
insl
and
push
jb
pop
add
mov
cwtl
pop
and
loopne
aaa
loopne
inc
or
add
mov
loop
mov
and
dec
pop
mov
inc
add
orb
jecxz
into
jp
int3
icebp
sbb
imul
in
loope
subb
xchg
orb
js
dec
lock
daa
cmp
mov
movsb
rorb
leave
push
mov
mov
test
jmp
pop
cmp
cwtl
lods
test
mov
mov
inc
jmp
xor
push
jb
mov
add
fcompl
lea
push
ss
mov
je
popa
xchg
sub
insl
jnp
test
and
stos
loope
jns
and
loopne
fidivs
pop
rorl
std
popa
cmp
loopne
mov
movsb
loop
inc
add
insl
mov
jne
push
sbb
xchg
sub
insb
inc
and
or
imul
insb
xchg
loop
jle
mov
mov
and
pusha
fistps
jmp
test
pop
mov
dec
adc
lods
ficoms
xchg
xor
call
xchg
mov
sbb
ds
push
movsb
outsb
jecxz
sbb
jle
jge
loop
shll
in
jb
or
sub
scas
inc
add
idivb
add
and
pushf
gs
or
pop
pop
fcoms
cmp
jp
lods
mov
pusha
push
jecxz
imul
sub
mov
mov
xchg
mov
push
stc
imul
lret
shl
ret
jb
repz
adc
lock
push
mov
popf
pusha
lds
shrl
call
inc
ds
cmpsl
outsb
jle
pop
cld
push
sbb
nop
ret
or
shll
xorl
ret
ja
rcpps
pop
insb
add
push
pop
dec
lods
ret
jge
jb
mov
sti
loopne
int
inc
sbb
pop
inc
shl
dec
aaa
pop
loope
mov
test
dec
test
in
and
dec
xor
aam
sahf
pop
xchg
pop
call
orl
add
dec
je
sbb
std
or
mov
mov
sub
ss
sbb
inc
sbb
mov
add
mov
fldcw
ret
push
dec
aad
daa
fbstp
xchg
and
les
mov
popa
insl
pop
or
mull
adc
lock
pushf
add
andb
adc
aad
or
pop
cmp
inc
mov
inc
ficoml
cmpsb
inc
jne
imul
push
imul
mov
or
sbb
jle
and
iret
pushf
out
loopne
fldenv
mov
or
cmp
xchg
adc
dec
hlt
and
les
test
mov
or
mov
mov
mov
push
leave
insb
push
sub
push
iret
bound
xlat
jmp
xchg
sbb
stos
or
jp
in
jp
push
fwait
sbbb
mov
push
daa
test
sub
dec
mov
mov
lods
sub
sar
mov
fwait
std
inc
ja
lds
mov
jg
ret
dec
js
ss
pop
jmp
iret
int
push
sbb
mov
int
jle
cmp
xor
nop
add
inc
sbb
dec
add
push
pushf
pop
jae
push
lea
aas
adc
add
mov
add
mov
cs
push
rolb
lret
ud1
aas
dec
jl
in
or
adc
and
imul
xchg
andb
dec
pop
adc
mov
dec
pop
jnp
add
and
pop
mov
pop
shr
cmpsl
push
mov
mov
add
subb
add
pop
xor
hlt
arpl
subl
rorb
test
xor
mov
pop
popf
dec
lahf
clc
sbb
mov
icebp
and
sbb
jo
and
add
cs
call
sbb
shrb
mov
cmp
movsb
adc
data16
add
cmp
mov
pusha
insl
fmuls
pusha
pop
pminsw
in
inc
inc
sbb
divb
loop
adc
lock
jnp
addb
cmpsl
push
cmp
push
add
pavgb
dec
or
xlat
pop
xor
and
sarl
enter
aaa
lahf
pop
mov
in
in
dec
loope
xchg
std
std
data16
push
out
and
insl
ffreep
sbb
inc
mov
or
mov
jmp
mov
sub
and
mov
add
add
xchg
aas
pop
inc
push
push
add
cmp
pop
jp
jne
dec
fistps
lods
jb
sbbl
outsl
fdivs
sbb
negb
fstl
add
inc
nop
scas
add
out
sbb
jecxz
xorb
insl
mov
or
or
inc
in
aam
call
add
imul
xor
add
js
jp
cmc
push
pop
pushf
scas
outsb
add
bound
lcall
and
inc
fcompl
aaa
hlt
dec
xchg
or
es
dec
cmp
mov
mov
inc
enter
icebp
push
outsl
fsubrs
and
lds
mov
pusha
nop
jno
je
pop
push
loop
and
jmp
mov
push
in
add
rolb
pop
push
add
clc
js
in
xor
scas
jge
lods
jp
jmp
mov
adc
mov
imul
pop
pop
and
pop
mov
mov
pop
lcall
xor
roll
fs
xchg
push
xor
in
pushf
clc
cmp
dec
mov
shl
in
ljmp
inc
xor
sbb
aas
das
pusha
shrb
adc
je
push
and
mov
rol
jp
hlt
sbb
xchg
xchg
negb
adc
xor
pop
or
mov
cmp
adc
xchg
xchg
ljmp
mov
pop
aam
sahf
jbe
xor
repz
loopne
mov
les
push
push
jl
add
mov
or
mulb
test
aaa
adc
sbb
dec
or
icebp
adc
mov
mov
jecxz
pop
clc
push
push
scas
cld
jp
fsubr
rcr
add
dec
sub
or
scas
roll
mov
cmp
inc
fs
and
in
cmp
jne
push
mov
das
push
pop
xchg
xlat
add
sbb
dec
popa
and
adc
fnstcw
pop
mov
subb
cld
mov
xor
lahf
jle
pop
pop
lock
mov
gs
mov
mov
inc
mov
ds
loopne
ret
cmp
iret
repnz
gs
jo
lea
cmpsl
test
in
xchg
fcoml
push
mov
aaa
xor
or
bound
test
aad
sar
rol
test
push
je
aam
fnsave
cmp
mov
test
stos
xchg
aas
sbb
mov
push
lret
bound
std
loopne
jno
xchg
rolb
xchg
test
push
ds
bound
andl
loop
loopne
je
mov
loop
outsb
pop
mov
mov
push
dec
xchg
nop
adc
dec
and
adc
and
nop
sbb
ret
mov
or
insb
mov
imul
push
xchg
pop
outsb
fldl
dec
xchg
mov
push
xor
jo
mov
and
and
push
sub
scas
xor
and
les
loope
rclb
insb
popf
outsb
shrb
add
cmc
xchg
push
lock
adc
in
jns
inc
mov
cld
sbb
xchg
lcall
xor
pop
cmp
outsb
shl
stos
nop
scas
adc
movsl
lock
pop
leave
into
lret
lret
adc
imul
pusha
js
in
lock
sub
and
fidivrl
test
iret
shlb
jne
or
xor
cld
shld
dec
cmp
add
js
pop
dec
int
insb
push
jo
pop
subb
cwtl
sar
add
ror
xorb
and
push
sub
cmpl
dec
and
mov
mov
jb
lods
arpl
movsb
xlat
into
mul
mov
rcrb
rorl
pop
jbe
push
in
loop
sti
shl
dec
out
adc
fcomip
mov
sbb
mov
out
cmpsb
lods
or
pop
hlt
dec
aas
sbb
ret
jmp
js
add
jp
in
xor
mov
fucomip
insb
inc
sub
rorl
orl
and
xchg
mov
add
push
or
mov
push
clc
jl
and
and
dec
lea
and
mov
push
mov
loop
dec
and
aad
add
lret
in
push
mov
js
addl
push
shll
scas
or
inc
xchg
mov
movsl
popf
ret
pop
xor
lock
xchg
rorl
cmp
mov
test
das
popa
add
mov
mov
das
xchg
adc
sub
daa
dec
lods
xchg
cmc
push
xchg
aam
sub
cmc
sbb
shlb
in
xchg
scas
jecxz
loop
jne
imul
lds
fcoms
xor
inc
mov
in
add
addr16
add
push
adc
bound
xchg
and
mov
xor
ljmp
std
mov
dec
inc
or
mov
jnp
js
cmpsl
sahf
arpl
fisubl
repz
dec
popa
fldl2t
sbb
idivl
cli
add
add
inc
test
dec
cmp
roll
sub
dec
push
fdivs
int
sbb
cmp
scas
jno
mov
mov
and
push
sub
jns
mov
aas
hlt
add
inc
cmp
icebp
int
js
cmpsb
in
push
fwait
sbb
cmp
sbb
imulb
shl
jmp
popf
jp
push
jle
cmpsb
clc
and
inc
sahf
mov
movsb
jbe
add
popf
fisttpll
jo
stos
aaa
pop
mov
mov
cmp
rcrb
push
ja
xchg
xchg
cmp
mov
addr16
mov
or
mov
mov
xchg
cmp
call
add
mov
sbb
dec
adc
cmp
cs
mov
das
loope
mov
jg
cmp
mov
fs
inc
int
xor
mov
mov
push
out
cmc
sbb
inc
push
loope
daa
adc
enter
push
addr16
lret
mov
stc
and
ds
fisttpl
clc
xchg
push
sarl
adc
push
mov
cmp
in
idivb
inc
jnp
or
or
filds
data16
dec
das
sbb
xor
pop
hlt
mov
pop
iret
push
test
jmp
fbld
mov
xchg
clc
sbb
push
pop
pop
js
outsl
bound
incb
out
mov
outsb
mov
mov
inc
or
shll
push
loop
mov
dec
add
aas
loop
push
shrl
dec
test
inc
inc
xor
lock
fisttpll
icebp
add
sub
fistps
vpsubd
lahf
push
inc
xchg
add
test
rorb
xchg
lock
mov
dec
push
incb
insl
sbbb
cmpsl
js
in
pop
loopne
sbb
mov
push
pop
xchg
pop
call
jg
repnz
cmp
lods
dec
clc
daa
sbbb
shll
mov
loope
mov
negl
rorb
push
in
jg
test
ljmp
sbb
xor
adc
inc
xchg
je
and
xor
scas
xchg
sahf
pop
xor
mov
mov
mov
div
mov
into
int3
xchg
sbb
dec
sbb
in
testb
cmp
movsl
pop
pop
pushf
js
rcll
mov
inc
call
dec
add
mov
notl
rcrl
jae
pop
xor
inc
fsts
ds
pop
xor
mov
leave
or
mov
push
rcr
inc
dec
pushf
xor
pop
popa
shll
daa
push
mov
mov
dec
inc
movsb
nop
insl
xchg
cmp
fwait
pop
add
sub
insb
and
leave
mov
xor
cli
cmp
push
pop
xchg
rol
cmpsl
mov
cwtl
jmp
adcl
and
mov
or
push
add
cmp
jge
shlb
out
inc
adc
inc
std
fsubrl
clc
in
mov
js
dec
dec
sub
pushl
jge
mov
enter
mulb
je
call
inc
hlt
aaa
jl
ljmp
add
jbe
icebp
mov
inc
inc
outsb
mov
test
rorl
idiv
sbb
pop
shlb
ss
xchg
scas
lret
fs
repz
sbbb
mov
loopne
and
mov
dec
cli
pop
fsub
call
mov
cltd
movsl
pop
xor
and
add
int3
loop
loopne
insb
orb
cmp
adc
inc
aad
mov
jg
mov
mov
and
lods
sub
cmc
add
stc
cmp
cwtl
or
cld
mov
iret
fdivrs
arpl
dec
loopne
movsl
push
push
aam
push
pop
mov
sub
xor
mov
dec
rcl
outsb
push
insb
dec
cmpsl
xor
stos
cmpsb
cltd
sbbb
dec
pop
sub
mov
fwait
in
jp
rcrl
shlb
js
call
push
cmp
mov
movsl
xchg
push
inc
xchg
mov
stc
fldenv
loopne
mov
int
mov
cld
aad
sub
adc
stos
ljmp
addb
jmp
pop
insb
dec
lds
mov
les
inc
scas
push
cs
push
adc
dec
js
es
mov
clc
add
xchg
lret
jle
js
xor
mov
add
push
mov
xchg
mov
pop
sbb
cld
or
movsb
adc
sub
iret
dec
jo
jbe
sbbl
push
pop
or
jb
rorl
xor
mov
loopne
push
push
cmp
orb
mov
mov
cmp
fistps
mov
sub
aaa
jl
in
cmp
pop
in
seta
add
sub
dec
cld
sbb
pushf
orb
inc
pop
push
out
add
pusha
loopne
out
fcoms
push
pop
ljmp
cmp
sbb
adc
movsb
sub
pop
mov
fldt
jecxz
xchg
xchg
mov
mov
jb
lahf
xchg
sbb
ret
loope
out
mov
xchg
cmpsl
lahf
cmc
mov
dec
lret
sbb
out
mov
push
jbe
push
inc
and
cli
jbe
push
and
in
pusha
mov
xchg
int
pop
inc
sbb
cld
jl
and
xchg
jnp
sub
pop
rolb
movl
lock
sbb
pop
add
sub
rcrl
int3
mov
mov
dec
mov
lock
cmc
fidivs
or
cmp
pop
push
je
and
cmp
mov
mov
shl
pop
out
fwait
rcrl
or
inc
mov
fcomi
push
mov
insl
inc
add
leave
ds
sbb
xchg
imul
or
rcl
test
jno
in
sub
cmp
pop
in
int
pop
pop
rcll
nop
aaa
push
out
in
push
mov
fsubrl
dec
movsb
and
cwtl
jb
jmp
lcall
int
add
ret
stos
push
inc
enter
ret
sub
push
mov
pop
mov
mov
xor
ljmp
inc
pop
cwtl
dec
dec
lds
jp
es
cmp
add
add
popl
mov
mov
mov
jg
and
fistps
adc
loopne
into
inc
loope
test
je
sbb
mov
or
pop
loope
adc
push
push
mov
inc
sbb
arpl
jg
cld
push
mov
push
cs
inc
sarl
aam
shrb
mov
pop
adc
fcmovbe
mov
adcl
mov
out
jbe
pop
sbb
das
xor
popa
push
adc
loopne
clc
shll
sbb
ret
arpl
subb
sbb
nop
add
add
stos
add
xor
repz
lcall
arpl
xchg
inc
sti
fiaddl
iret
ja
dec
loope
in
sti
mov
cmp
fstpl
xchg
iret
push
cmpsb
testl
jb
mov
push
inc
mov
sbb
add
insl
jno
push
xchg
add
pop
aad
aad
arpl
mov
pop
cmp
fsubrs
stos
insb
xlat
sub
or
push
in
call
aas
pusha
xchg
push
ljmp
ss
sahf
ds
add
cmp
or
lret
and
mov
mov
pop
loopne
push
fnstcw
andb
rcrl
adc
icebp
and
icebp
stos
sbb
rcll
sbb
mov
mov
jne
out
push
sbb
sub
fwait
icebp
stos
fisttps
add
push
add
ljmp
outsb
movsl
push
push
lods
lcall
dec
int
xor
push
icebp
cmc
clc
mov
fidivs
je
pop
aad
stos
cmpsb
insb
xchg
or
icebp
insl
pop
call
lods
or
rclb
stos
cmpsb
nop
mov
mov
rolb
iret
xor
jle
fs
dec
insl
lcall
push
ds
add
das
repz
imulb
mov
std
popa
add
cmpsb
jp
mov
jecxz
inc
jg
hlt
and
test
xor
lret
ljmp
pop
cwtl
clc
lock
outsb
mov
ret
cld
into
clc
inc
sbbb
popa
push
adc
add
div
add
bound
clc
mov
or
stos
dec
push
mov
mov
adc
lds
lock
aaa
in
adc
inc
call
adc
dec
jmp
jl
clc
adc
and
push
stc
xchg
dec
loopne
sbb
sub
mov
jl
pop
stos
inc
loopne
pop
sbb
stos
cmp
and
cmp
mov
cmp
aam
jmp
repz
mov
fwait
jae
jno
sbb
fs
push
lahf
push
push
jo
push
pop
sbb
sub
out
mov
cwtl
rcll
and
add
adc
out
mov
pop
subb
mov
xlat
add
adc
adc
mov
pop
push
ret
jbe
push
cmp
sbb
call
fidivrl
push
stos
and
fs
cwtl
in
push
jbe
inc
fisubrl
add
jae
jmp
mov
or
mov
xor
xchg
push
xorb
jge,pt
cmp
mov
sbb
pop
fstpt
mull
sub
sbb
or
sbb
and
js
or
inc
loop
adc
sub
or
ss
mov
adc
test
and
push
mov
jmp
mov
jg
xchg
mov
movsl
fcmovu
push
lahf
andb
popa
xchg
push
xchg
pop
pop
xor
mov
push
adc
fdivrs
push
ror
mov
in
jecxz
insl
shlb
movsb
lds
and
andb
fwait
mov
dec
inc
or
ds
inc
clc
aad
xor
mov
mov
and
loop
add
push
mov
hlt
mov
jl
cli
xchg
xorb
jp
test
inc
scas
adc
pop
js
sbb
lret
mov
push
inc
mov
fs
arpl
scas
cmp
lcall
mov
or
and
jnp
sub
jo
out
push
xchg
pop
dec
or
fildll
push
call
jbe
mov
loopne
or
sahf
dec
cld
cmp
shrb
sarb
mov
aam
cltd
jl
mov
adc
addl
stos
pop
icebp
pop
mov
mov
add
cmpsl
jno
rolb
inc
js
loopew
insl
cld
enter
xchg
push
icebp
stos
lods
adc
leave
out
sti
xor
jmp
scas
push
cwtl
pop
dec
fcompl
in
adc
popa
xchg
jle
pop
pop
pop
push
inc
and
pop
lahf
add
bnd
mov
call
arpl
mov
out
cmp
enter
jp
push
shlb
push
adc
lds
pop
out
xchg
jp
decb
dec
mov
nop
sub
adc
xchg
add
or
les
sub
scas
out
sbb
xor
cld
shrl
pop
sbb
push
pop
jle
adc
cli
jge
ds
jae
mull
lock
cmp
mov
push
movsb
push
shl
pushw
mov
int
imul
test
popa
jl
fld
mov
divb
mov
jmp
inc
rcrb
ret
sub
pop
stos
outsb
cmpsb
push
push
lret
icebp
lds
sbbb
pop
out
add
push
stos
shl
insb
sub
ror
hlt
mov
enter
inc
jae
aaa
or
sub
jno
int
shlb
mov
or
aam
adc
xchg
mov
in
lods
jne
pop
rolb
loopne
xor
les
cmp
mov
mov
sahf
cld
fs
sbb
sarl
pop
ret
pushf
xchg
arpl
sub
arpl
mov
mov
insb
jmp
arpl
lock
sub
push
cmp
lret
ret
insl
and
es
dec
test
jns,pn
es
sub
pushf
pop
add
lods
cmp
push
es
lds
in
repz
sub
xor
test
cmp
push
mov
push
idivl
sarb
rcrb
adcl
mov
subb
mov
lea
mov
jmp
insb
les
push
data16
cmc
push
test
or
nop
nop
pop
imul
push
inc
sbb
cmc
mov
and
mov
xchg
inc
fmul
sarb
cmp
fistl
ljmp
pop
pushf
push
sar
mov
lods
es
mov
fs
out
hlt
in
cmp
rcrb
adc
mov
or
in
mov
jmp
clc
dec
sbb
imul
jl
push
mov
mov
pop
bound
xor
push
mov
inc
xchg
adc
jmp
cmpsl
sahf
lea
subb
dec
sub
in
ret
repnz
nop
sbb
inc
cwtl
popf
repnz
aam
notb
sbb
xchg
jne
xchg
fsubl
js
pop
ret
or
pop
pop
jmp
lock
cmp
and
fidivrl
or
pmaddwd
sbb
cmp
test
call
pop
cmpsl
lret
add
mov
add
xorb
mov
add
xchg
pop
ja
sub
aam
movsl
leave
pop
jmp
loope
clc
lods
mov
add
sarl
ret
inc
inc
dec
stc
in
popa
inc
ss
xor
enter
stos
shrl
das
test
ljmp
cli
xchg
mov
imul
sbbl
or
jp
sub
sub
arpl
shl
bound
hlt
mov
pop
test
mov
ret
leave
lret
push
xchg
das
dec
sbb
dec
dec
cmpsb
xor
test
iret
and
sub
daa
and
testb
fucom
xor
sahf
and
jo
lock
daa
mov
mov
inc
popf
jb
int3
insl
icebp
sbb
jo
outsb
pop
add
lea
test
inc
sbb
cmpsb
cmp
imul
add
popf
xor
lods
cld
imul
ss
daa
lea
push
dec
into
xchg
lcall
sbb
cmp
jle
dec
lds
ljmp
inc
sub
test
push
add
loope
adc
xlat
fstl
and
js
mov
sarb
pop
or
mov
jp
sarl
inc
xor
mov
dec
jnp
add
rolb
fcoms
popa
scas
loope
lods
jmp
lods
incl
cmp
fsts
xchg
adc
out
or
or
hlt
adc
adcb
popf
clc
push
add
and
cmpsl
popa
pop
fsubrl
adc
std
fistpll
jmp
or
jo
cwtl
mov
and
sub
mov
cmp
sub
jno
add
loop
add
pop
jnp
incb
cmp
addb
mov
sbbl
sbb
jo
mov
ds
pop
es
into
mov
aam
mov
add
jnp
frstor
es
xchg
rorb
jp
dec
fimuls
mov
and
pop
adc
fistpl
inc
jle
add
push
add
adc
push
adc
and
jg
jns
or
xchg
or
push
mov
jmp
popf
push
pop
imul
mov
outsl
scas
in
adc
inc
jbe
add
cli
dec
mov
stos
jno
test
lret
add
mov
in
cmpb
push
mov
push
or
aam
rorl
lock
into
outsb
pop
adc
push
repnz
xor
push
inc
jmp
jl
xchg
jg
xor
cmc
sub
sbb
adc
popa
and
jp
sub
dec
movsl
inc
mov
subl
mov
and
xchg
repnz
inc
mov
jo
inc
sti
push
cwtl
or
andb
js
xchg
mov
adc
loope
pushl
pop
mov
scas
jne
mov
scas
in
std
jo
mov
leave
testb
xor
es
hlt
test
jle
mov
inc
jmp
or
movsb
adc
rcll
xchg
insl
pop
mov
sub
cmc
cli
and
pop
int3
in
inc
outsb
cmp
enter
pop
mov
jl
clc
aam
lock
pop
cmp
xchg
jo
rcll
aam
clc
push
insb
push
jbe
and
cmpsl
cs
dec
imul
mov
shrl
push
add
lock
vmaxpd
test
or
xchg
into
sub
test
out
fisttps
sahf
mov
lock
daa
push
addr16
xor
shr
sbb
and
clc
dec
cmp
outsb
pop
add
hlt
sti
pop
xchg
out
cmpsb
popa
je
aaa
inc
pop
and
es
push
push
adc
pop
test
js
and
testb
cmpl
out
jae
pop
mov
ss
fisttpll
pop
lds
mov
mov
out
xchg
fcmovnbe
push
pop
push
sub
mov
imul
shrl
lock
ret
xor
or
add
jp
push
inc
outsb
mov
add
add
mov
and
shl
dec
mulb
push
mov
dec
sub
divl
ss
xchg
add
rclb
inc
cmpsl
lds
lods
js
scas
xchg
in
mov
mov
les
add
lds
xor
scas
fisubrs
pop
push
mov
pusha
push
add
cli
fisttpll
call
inc
add
jp
out
out
aam
call
int3
ret
and
outsl
sub
and
sbb
roll
dec
adc
dec
adc
inc
mov
notb
fists
or
daa
xchg
ds
negb
push
hlt
dec
clc
adc
mov
mov
daa
cli
shrl
push
repnz
movsb
inc
and
outsb
adc
and
data16
jbe
ja
pushf
push
jbe
xor
adc
stc
shll
call
out
mov
loopne
jecxz
das
lock
cmp
mov
jb
shlb
gs
fwait
lea
mov
xor
lods
push
sub
shrl
scas
pop
rcrl
dec
into
imul
js
je
push
movsb
xor
in
pop
push
or
sahf
mov
jle
or
cmp
fwait
and
les
imulb
call
ds
add
fistl
clc
pusha
mov
icebp
in
imul
cmp
or
jae
or
shl
lahf
out
fcmovb
movsb
fldt
in
fdivr
fildll
push
out
stos
jecxz
rolb
mov
inc
aas
sbb
in
push
jns
stc
or
mov
cli
push
ljmp
push
mov
and
dec
cltd
ret
lock
loope
add
inc
outsl
call
xor
or
adc
or
xor
pop
cmpsl
aaa
scas
in
mov
mov
sub
orb
outsl
mov
stc
cmpb
scas
jecxz
icebp
mov
loopne
pop
dec
loop
sbb
mov
push
push
ret
cmc
repz
mov
lods
sahf
in
mov
clc
push
or
or
pop
cld
sarl
inc
sahf
stc
sub
sbb
jecxz
jle
shlb
adc
loope
sub
mov
jb
lods
sub
scas
clc
inc
push
mov
pop
pop
push
sbb
lahf
mov
out
shrl
stos
les
call
cmp
rep
cmp
push
and
loope
add
jge
lock
dec
adc
repnz
add
and
mov
xchg
mov
inc
cmp
pusha
arpl
pop
push
jle
and
adc
mov
mov
adc
fucomp
sbb
dec
lods
insl
aaa
mov
scas
ret
cmp
mov
mov
test
movsl
push
fbstp
addr16
sub
jmp
ficoml
pop
sbb
mov
in
xchg
and
rcl
loop
xor
mov
xlat
sbb
adc
andl
and
popf
jp
call
in
and
rolb
into
mov
clc
andb
or
test
pop
mov
clc
test
clc
adc
sbb
shrd
jno
js
pop
add
test
or
loop
test
jb
adc
add
mov
pusha
jne
adc
jo
mov
je
push
xor
mov
pop
cmp
and
xchg
and
sub
adc
dec
lcall
js
lret
mov
sbb
push
jo
or
test
mov
sub
xor
les
push
lret
icebp
test
mov
out
pushf
mov
add
push
ja
sbb
test
and
stos
cmp
mov
repz
jnp
cmp
in
cmpsl
dec
jo
pop
xchg
dec
xchg
sub
pop
aad
xchg
mov
mov
mov
jmp
sarl
xlat
and
cmpsb
int
cmp
cmp
cli
inc
and
shrl
cmp
xor
stos
out
adc
test
inc
inc
mov
push
aas
movsb
cmp
push
jne
inc
mov
addb
inc
push
mov
inc
ja
push
out
jno
out
clc
and
and
cmpsl
aam
push
adc
add
je,pn
push
or
lcall
or
push
mov
imul
mov
cmp
xor
nop
test
nop
js
sub
inc
clc
enter
imul
sub
dec
stos
push
adc
pop
jle
cmpsl
cmp
mov
rorl
and
push
cmp
or
out
and
xor
sarb
dec
in
negl
mov
xchg
lcall
mov
mov
lahf
add
dec
pop
lock
adc
xchg
or
adc
mov
or
mov
lock
jne
mov
pop
fadds
push
in
sar
and
sahf
mov
stos
iret
fisubs
sbb
aas
sub
mov
inc
icebp
aas
clc
inc
shlb
jecxz
add
je
js
pop
loop
dec
mov
fcomps
mov
or
cli
icebp
xorb
popf
fcomps
out
mov
mov
scas
sti
in
or
dec
pop
and
push
cmp
mov
call
sub
inc
xchg
mov
cmp
mov
clc
sub
rcll
sub
mov
loopne
dec
xchg
push
mov
adcb
adc
ficomps
pop
pop
test
ja
in
aaa
mov
enter
rorb
imul
inc
lock
shrl
ror
dec
imul
push
out
int3
test
fistps
cmpb
add
mov
xchg
mov
jecxz
cmp
mov
push
sub
jle
in
dec
ljmp
xchg
test
call
loope
sbb
loop
leave
jg
inc
fisubl
cmp
push
popa
fs
imul
or
push
inc
lea
call
nop
nop
stc
pushf
mov
pop
in
in
out
addb
pop
adc
jg
stos
lret
cli
inc
iretw
je
mov
pinsrw
lahf
dec
jp
mov
xchg
or
sahf
fidivs
mov
rcrb
sahf
jne
or
xchg
stos
sub
xor
enter
mov
jo
xorb
ja
pusha
cmc
cmpsl
add
push
test
sbb
mov
cmp
jecxz
inc
mov
loope
frstor
push
out
mov
fwait
clc
sti
rcl
or
adc
adcl
cmpl
cmpps
in
nop
lahf
sub
push
mov
movsb
jecxz
adc
jl
lea
mov
cmp
jmp
cmp
sub
fwait
pop
in
push
ljmp
hlt
filds
mov
andl
xor
jnp
mov
testl
mov
stos
mov
push
pusha
add
lcall
pusha
out
mov
push
pop
or
push
rcl
pop
loop
mov
cmpsb
mov
fists
sub
cmp
lods
loope
movsb
div
xor
add
cmpsb
mov
dec
shrb
clc
mov
or
aas
mov
lds
fisttpll
nop
push
call
xchg
ret
lret
xchg
shl
mov
push
dec
ds
sub
loop
push
push
cmc
out
out
inc
xor
pop
sub
xchg
pushf
outsb
mov
mov
repz
scas
enter
call
ja
mov
cs
rcrb
adc
sbb
out
xor
sti
push
sbb
outsl
outsb
lock
cmc
pop
dec
cwtl
mov
mov
data16
mov
pop
jecxz
adc
push
adc
add
adc
gs
sbb
and
fsubrl
fmuls
jge
inc
mov
jle
pop
cmpsl
call
lea
into
in
xchg
add
push
xchg
je
xlat
stc
xchg
xchg
xor
mov
lock
in
cmpsl
pop
aas
and
pop
jp
loope
stos
insb
mov
lcall
mov
scas
jo
je
and
les
decb
sub
in
in
add
mov
jg
and
xchg
add
aam
add
lret
nop
or
xchg
xor
push
je
out
sarb
inc
in
roll
and
inc
inc
mov
sub
inc
insl
ret
shlb
xor
pop
pushf
orl
sar
sahf
sbb
rorl
and
xchg
ss
adc
push
push
push
insb
movsb
sbb
dec
xlat
addb
push
or
les
mov
popf
ljmp
add
pushf
mov
call
xchg
es
lds
cld
jmp
xor
mov
sub
sbb
outsb
and
add
clc
sbb
lods
addl
adc
mov
xchg
sbb
imul
pop
addb
xchg
sub
outsb
xchg
dec
fwait
ret
and
mov
pop
je
add
mov
dec
mov
mov
lret
lods
add
ret
mov
mov
clc
outsb
loope
je
inc
pop
jmp
leave
jge
push
lds
push
push
jae
into
lock
inc
ss
loopne
inc
dec
aam
rep
jecxz
adc
dec
xor
adc
ss
cli
inc
add
add
fstpt
das
push
icebp
and
mov
aam
mov
fstl
dec
add
sti
xchg
sbb
jb
push
mov
loop
clc
popa
lret
mov
xchg
sti
add
inc
jp
inc
in
lock
push
cmp
push
pop
mov
jne
push
adc
sbb
ja
jns
inc
pop
sahf
add
jno
push
aaa
xchg
inc
arpl
ds
mov
loopne
sub
inc
xchg
xor
aaa
cmp
shll
mov
mov
cmc
sbb
mov
test
or
ljmp
mov
jle
popa
fcmove
scas
lret
push
mov
cpuid
mov
pusha
scas
mov
outsl
sub
jg
cmpl
mov
and
cmc
shlb
cs
xchg
dec
adc
scas
lock
pop
ret
inc
test
ret
and
mov
mov
add
es
mov
ja
in
mov
or
pop
outsl
mov
jno
data16
cmp
cmpsl
jbe
mov
inc
pop
xchg
fcoml
push
jle
add
test
push
lahf
ret
pop
popa
lock
nop
jle
mov
jbe
scas
push
mov
xchg
test
shl
push
aam
es
out
out
add
fiadds
push
push
icebp
jl
or
clc
into
idivb
imul
jp
sbb
xor
sbb
push
xlat
push
aam
sbb
adc
call
push
cmp
insl
jb
jge
add
ljmp
divb
out
aad
sti
roll
pop
fisttpll
repnz
std
lea
dec
and
jp
jl
pop
dec
les
dec
add
mov
xor
aaa
jle
push
outsb
fcomps
push
cmpb
jbe
jp
or
addr16
jle
adc
iret
sbb
in
pop
test
dec
xchg
sar
sbb
sbb
push
push
insb
iret
mov
nop
inc
sub
loopne
pusha
and
mov
sbbl
xchg
xor
xor
cld
adc
mov
mov
pop
jp
xchg
pop
into
daa
repz
pop
sbbb
in
testb
les
repz
shl
pop
fnstsw
shrl
mov
ret
mov
adc
lahf
mov
mov
and
or
dec
xchg
mov
cmp
aad
mov
gs
gs
sub
xchg
stos
add
pop
sbb
mov
jl
inc
mov
inc
roll
orl
mov
sti
fisubs
int3
movsl
and
dec
jmp
jl
inc
pop
xor
addl
add
adc
loopne
cmp
adc
adc
inc
test
push
push
mov
into
in
pop
xchg
jb
das
sbb
aas
ficoms
sbb
cld
dec
js
inc
ljmp
lcall
push
or
or
mov
rcll
icebp
pop
ret
sbbl
dec
jp
into
adc
jbe
loopne
fisttps
bound
add
adc
mull
fadds
loopne
aas
pop
jmp
loopne
jbe
setnp
dec
repnz
mov
stos
daa
fisubrl
sti
xchg
and
mov
adc
dec
xchg
movsb
loopne
xor
and
out
out
rorl
mov
jns
jb,pt
daa
or
divb
add
mov
aam
sub
call
xor
cmp
aas
push
pop
mov
xorl
push
mov
fldcw
jle
ficoml
scas
and
sbb
inc
scas
inc
ret
or
sbb
jo
cwtl
iret
stos
cmc
add
repz
movsl
push
dec
fiaddl
lahf
and
loopne
stos
out
cli
and
lahf
mov
int3
leave
xchg
fidivrs
addb
xchg
xor
inc
cmpsl
add
in
jg
or
out
ficoml
jge
enter
pop
inc
pop
and
xchg
push
fisttps
out
int3
sub
adc
mov
scas
mov
out
nop
jae
dec
loopne
jp
cmp
mov
and
push
adc
mov
int
lret
add
aam
push
xchg
loopne
movsb
ret
jb
outsl
jg
outsb
aas
mov
and
pop
scas
sbb
cwtl
into
pusha
cld
xor
aad
jb
call
jo
push
orl
leave
sub
cltd
jge
pusha
bound
andl
test
push
std
push
insb
iret
cmp
and
std
in
popa
mov
jb
add
icebp
or
stos
fistpl
or
cmpsl
lahf
cmc
repnz
nop
sbb
jno
fwait
jecxz
add
xor
dec
pushf
sbb
inc
inc
xor
pusha
bound
or
lods
enter
push
fldl
inc
sbb
xor
xor
inc
mov
test
add
rolb
pop
jo
pop
jno
mov
ss
js
sti
sti
in
add
add
xor
and
push
aam
movsl
lahf
pop
or
sbb
fildl
ret
fnclex
cltd
loopne
mov
rcl
xchg
jecxz
or
xchg
shll
adc
loopne
jmp
add
mov
loopne
mov
adc
lods
fisubl
test
mov
cmp
mov
push
pop
scas
sub
dec
pop
inc
insl
jecxz
fcoml
mov
or
mov
fistps
cwtl
pop
cltd
inc
xchg
mov
dec
adc
imul
insb
dec
repz
lahf
adc
dec
call
icebp
es
mov
jno
sbb
push
int3
mov
mov
popa
mov
add
cmp
jbe
shr
shl
cli
enter
mov
lret
push
jle
rorl
add
outsl
or
subl
and
and
jo
sub
imul
jb
inc
cmpsb
int
arpl
rcr
push
sbb
jl
insl
test
xor
loopne
mov
adcb
adc
jmp
stc
adc
loop
push
mov
pop
notl
push
ja
enter
or
stc
or
sub
jo
hlt
xchg
into
sbb
out
fstpl
sub
push
js
loope
out
xchg
insl
jns
pop
dec
dec
aaa
sarb
xchg
mov
mov
rcrl
arpl
sar
fdivrl
lcall
pop
aam
loope
in
ljmp
dec
sar
ljmp
adc
mull
or
cltd
mov
fstpt
pop
mov
pushf
subl
push
push
push
cmp
xchg
enter
les
cmp
add
stc
mov
mov
xor
lods
pop
clc
add
and
add
xchg
enter
pop
xor
aaa
mov
cmp
mov
push
aad
sub
pop
aad
pop
into
xor
dec
cmpsl
mov
mov
jb
aaa
cli
test
jbe
mov
lahf
sbb
jecxz
xor
jb
iret
or
mov
jbe
mov
push
pop
sbb
lea
insl
push
adc
ret
bound
mov
iret
or
pop
mov
pop
lock
dec
loopne
rcl
orb
sbb
add
sbb
aam
jnp
jp
jp
lahf
cmp
dec
xor
sbb
and
adc
mov
jnp
jge
mov
fsub
lock
xchg
dec
xor
leave
mov
out
ljmp
imul
lcall
lahf
adc
xor
jns
and
mov
adc
insl
cmp
rcrl
sub
xchg
daa
inc
outsl
jle
lods
fildll
fs
pusha
das
xchg
add
lahf
add
arpl
fsubp
lds
cld
add
cwtl
push
dec
imul
outsb
pop
loopne
pop
lret
shl
xchg
dec
push
xlat
sub
insl
xchg
sti
test
xchg
mov
std
add
loope
or
pop
cs
cmpsb
mull
mov
aam
fstl
hlt
mov
negl
and
arpl
jmp
pop
sbb
jno
jae
adc
sbb
lcall
mov
mov
dec
mov
mov
adc
nop
add
rcrl
push
fsubrp
movsb
push
jg
jmp
add
inc
dec
shr
xchg
call
cmpsb
xchg
sti
inc
sub
data16
add
sub
mov
psubusw
and
inc
lock
sub
xchg
add
inc
cld
out
cmp
jecxz
aas
inc
cwtl
dec
mov
and
shrb
lahf
jp
or
js
fs
call
fsts
xor
out
mov
pcmpgtd
adc
cmp
inc
inc
fwait
inc
mov
out
aaa
data16
jmp
mov
push
cmp
and
pushf
push
adc
sbb
aad
dec
mov
push
movsb
out
and
in
fistl
ss
cli
mov
roll
loope
mov
push
pop
fnsave
pop
cwtl
fidivrl
add
jnp
rclb
pop
dec
xchg
addl
sbb
xchg
add
or
pusha
push
pop
mov
fnstcw
add
push
dec
mov
push
mov
movsb
sbb
aas
arpl
int3
sbb
mov
and
mov
pop
jmp
mov
push
jbe
lcall
lock
push
push
hlt
mov
aad
push
fmuls
aad
xor
pop
imul
cli
push
lahf
mov
sbb
and
clc
add
lcall
test
fisubl
enter
call
movsb
icebp
stc
inc
xlat
ficomps
sub
sbb
nop
ret
sub
mov
add
sbbl
rorb
pop
push
cmpl
popa
shll
clc
mov
scas
sbb
insl
lock
popf
jmp
push
repnz
scas
fmuls
sub
or
fwait
push
cld
or
lret
pushf
shr
ds
mov
mov
mov
int3
pop
pop
clc
fcmovnbe
mov
test
push
push
cld
rolb
add
push
xchg
rcr
pop
inc
sub
jae
mov
sbb
jecxz
loopne
inc
sub
enter
cli
popl
arpl
adc
adc
pop
hlt
lock
test
adc
call
loop
pop
pop
ret
xchg
or
or
lock
popf
enter
ret
rorw
pop
insb
call
pop
aam
xchg
sahf
sbb
inc
movsl
outsl
pop
js
dec
inc
inc
in
test
and
push
add
jmp
push
pop
and
pop
decl
jp
out
cmp
xorb
shr
ret
btc
jl
pop
push
cmp
inc
aam
loope
not
ret
fadd
leave
in
xor
lods
sub
jl
dec
mov
mov
mov
xchg
lea
jp
adc
xor
or
and
loopne
jg
mov
xchg
jg
mov
sbb
mov
stc
jp
jo
sbb
lahf
dec
jns
xchg
adc
hlt
clc
adc
mov
add
incl
dec
lock
cmpsb
add
xor
paddb
cmpsl
mov
adc
shl
adc
lock
clc
je
jge
call
push
sub
daa
sub
mov
scas
pop
or
mov
push
addl
push
inc
sbbb
add
fisttps
rcrb
mov
ret
jge
ds
incb
or
popa
fdivrs
fadds
jnp
stos
ret
aas
repz
add
inc
xor
popf
inc
jge
inc
inc
pop
inc
das
jg
push
outsl
jp
dec
xchg
push
test
sub
pusha
xchg
lock
mov
dec
sub
test
xchg
shlb
je
add
mov
xchg
mov
pop
adc
fisttpll
add
ds
inc
lret
pop
movsb
pop
sub
pop
push
out
inc
hlt
mov
nop
jb
lods
add
mov
and
inc
mov
jle
pop
icebp
test
stos
pusha
aas
jl
sub
inc
lods
mov
fdivs
daa
mov
and
test
in
sarl
xchg
fs
lock
cmp
pop
lock
rep
out
je
mov
hlt
orb
mov
or
decb
lcall
cmc
call
push
test
insl
pop
push
sbb
test
pop
ljmp
popf
outsb
and
js
inc
mov
shrl
xchg
add
out
outsl
adcb
push
repz
stos
adc
shlb
sbb
outsb
insb
sbb
jno
es
les
jecxz
or
cmp
inc
clc
jg
dec
fidivs
repnz
sbb
push
or
pop
push
or
sbb
stos
push
shrb
repnz
pushl
mov
js
jae
add
push
mov
sub
mov
movsl
das
and
lods
aaa
ret
sub
jbe
adc
incl
sbb
dec
in
xor
in
in
and
or
test
and
push
stos
loope
mov
in
cmc
jg
test
pop
fstpt
daa
cld
outsb
cmp
movsb
sub
out
inc
jae
pop
mov
lds
jo
inc
mov
mov
adc
js
int3
and
jno
jmp
sub
repnz
dec
pushf
fmull
mov
mov
adc
add
push
data16
arpl
mov
and
jnp
cmc
outsb
fdivrl
pop
sbb
cwtl
ret
mov
push
std
adc
jg
ret
fwait
and
xor
jmp
clc
mov
loope
call
mov
call
popf
add
fdivr
or
jne
lock
sub
in
dec
mov
stos
sbb
add
or
div
loop
mov
fisubl
pusha
lahf
xor
sbb
bound
mov
ret
inc
inc
in
push
add
aam
mov
data16
in
ret
add
adc
fmuls
jno
adc
movsb
into
adc
xchg
ds
daa
push
nop
jp
mov
outsl
pop
push
xchg
outsl
clc
jb
pop
mov
movsb
lret
and
std
push
cli
mov
adc
cmpsb
pop
mov
or
mov
push
sub
movsl
add
shrb
cli
xchg
add
cwtl
aad
jnp
pop
imul
insb
push
frstors
mov
pop
xor
fildll
roll
je
incl
pop
imul
cmpsb
mov
rolb
inc
aaa
fstl
test
sub
in
inc
out
popl
mov
dec
mov
rclb
adc
push
ds
sbb
sub
dec
pop
jmp
shlb
test
mov
mov
and
sbb
les
shll
dec
sbb
jae
mov
add
sbb
pop
add
jl
or
xchg
pop
lock
xor
dec
ljmp
addl
inc
test
out
fisubrs
mov
jl
xor
inc
stos
ret
je
cli
xchg
add
mov
push
bound
xchg
loop
mov
std
cmc
mov
loopne
in
dec
mov
cmc
mov
filds
push
pop
test
loopne
adc
out
xor
sub
rorb
cmp
push
incb
roll
imulb
pusha
pop
daa
out
daa
shlb
cld
dec
data16
nop
xor
or
clc
mov
test
inc
xchg
enter
icebp
or
and
xchg
inc
jbe
ja
sub
pop
push
loop,pn
or
das
mov
cmp
jp
shrb
push
int3
or
add
aaa
incl
inc
movsl
xor
iret
test
add
xor
mov
popa
pop
pop
sub
xor
movsb
pop
pop
fcoms
inc
xchg
add
iret
jle
or
mov
lea
lock
xlat
rolb
je
and
sti
push
and
into
dec
xor
fs
and
jg
pop
xor
in
add
xchg
jbe
cmp
int3
or
jbe
mov
inc
orb
ljmp
push
mov
aas
repz
mov
or
dec
je
rorl
sarb
xchg
mov
and
push
inc
dec
popa
icebp
xchg
add
lea
lcall
inc
or
add
fadds
out
or
inc
mov
daa
icebp
push
fstpt
pushf
fwait
dec
adc
orb
pop
mov
insb
bnd
fidivrs
mov
cld
pop
mov
stos
push
repz
xchg
add
mov
or
ret
out
push
or
sub
and
push
enter
mov
push
aaa
insb
and
xchg
sub
mov
sbb
mov
xchg
pop
mov
push
or
rol
mov
push
cmc
call
add
mov
sbb
movsb
cmp
fists
scas
and
xlat
adc
add
fstps
push
aaa
out
dec
xor
aas
fildll
add
cmpsl
add
jmp
arpl
les
clc
ds
lods
rolb
push
jno
or
mov
loope
ljmp
jb
ret
lods
lock
pop
xchg
sbb
add
ds
mov
ss
call
fs
mov
or
int
ret
sub
pop
bound
repnz
cmp
scas
fidivs
push
sbb
and
or
adc
dec
xlat
jmp
push
ret
add
xor
adc
lret
mov
lcall
jl
push
icebp
jp
ret
mov
dec
pusha
mov
mov
xchg
repz
push
pop
mov
add
push
xchg
dec
inc
incl
lahf
addb
std
fisubl
ss
cs
xchg
lods
std
sbb
in
cmp
mov
jbe
add
testl
jg
int3
lods
mov
and
fadds
jae
iret
mov
push
dec
inc
fdivrl
aam
popa
frstor
xchg
adc
jecxz
sub
cmpsb
push
and
lock
decb
jns
push
jp
adc
mov
push
cmpb
jp
add
roll
inc
loop
cmp
xchg
fwait
sub
pop
loope
jl
lcall
sub
cmpsb
pusha
push
cmp
sbb
or
rorl
mov
adc
mov
hlt
or
dec
inc
adc
test
arpl
je
das
ljmp
xchg
mov
data16
shrl
aas
das
les
cmp
jne
add
stos
jp
fstps
insb
push
mov
int
in
add
lods
or
push
mov
ret
and
sbb
dec
lods
xor
jo
rol
sbb
add
or
inc
and
icebp
add
in
pop
xor
gs
mov
jne
in
hlt
pop
lock
push
and
xchg
or
lock
mov
xchg
out
xor
xlat
mov
pop
ss
lods
xor
mov
inc
shlb
xor
das
orb
mov
add
shlb
push
pusha
push
sub
mov
lods
insl
dec
mov
sbb
lods
push
fadds
sbb
loopne
f2xm1
lods
jg
outsl
fbld
inc
and
das
rorl
iret
xor
cmp
jg
rolb
mov
nop
nop
outsl
or
push
jp
stos
negl
mov
mov
push
out
xor
mov
cmpsb
xchg
jecxz
xor
rep
jnp
lea
cmpsl
inc
fwait
sub
mov
test
xchg
push
jmp
mov
and
xchg
mov
nop
or
pop
roll
jp
push
test
push
jo
mov
loope
les
clc
pusha
lds
pop
ret
xchg
int3
push
inc
xor
add
inc
xor
xor
mov
nop
dec
fcoml
xchg
and
dec
jecxz
push
xor
stc
cmp
inc
add
in
scas
pop
xor
mov
jle
inc
jne
aas
push
sub
and
xor
cltd
jno
add
pop
push
jb
sbb
inc
sahf
fildll
into
pop
and
movsl
xor
fs
subl
mov
outsb
lcall
pop
cld
repnz
mov
inc
sub
pop
loopne
or
rcrb
cwtl
push
adc
fiadds
clc
test
cld
fstps
aaa
add
push
outsb
je
bound
xor
ds
or
add
call
clc
aad
xchg
clc
xchg
outsb
mul
mov
call
inc
ret
insl
xorl
loope
cmp
popf
lea
xchg
out
test
jg
dec
push
cmp
lock
jbe
xor
adc
aam
scas
inc
sar
aaa
adc
or
push
inc
sbb
jle
sbb
clc
out
push
xchg
imul
mov
loope
jg
or
popf
not
shll
call
jge
dec
repnz
lahf
push
adc
add
shll
idiv
out
test
jae
and
cs
dec
adc
xor
add
add
test
icebp
pop
pop
pop
sbb
test
pop
js
mov
or
lock
push
and
filds
sub
enter
jge
mov
sub
shll
or
aam
test
cwtl
pop
int3
arpl
adc
mov
inc
nop
cld
xor
je
mov
sbb
jp
jge
push
mov
clc
xchg
xchg
flds
inc
push
out
mov
movl
fistps
sar
popa
xchg
inc
mov
jl
fwait
sub
pop
pop
test
hlt
xchg
push
dec
push
rol
add
cmp
mov
dec
mov
cld
popa
lds
cmpsl
lret
icebp
hlt
push
js
and
and
push
xlat
sbb
sub
xchg
adc
dec
rcrl
add
fidivl
add
in
test
jecxz
call
mov
loopne
add
add
add
add
ja
andb
pop
rolb
popa
jmp
mov
push
and
stc
pop
dec
jge
push
inc
mov
dec
or
mov
pop
ret
enterw
out
std
sbb
xlat
inc
push
out
popf
in
inc
stos
push
insb
xchg
les
loopne
mov
xrelease
int
push
cwtl
ficoml
add
out
call
shll
mov
push
in
movsb
jns
sarl
test
test
push
add
pop
cld
sub
or
inc
or
push
icebp
sbb
lds
movsl
loop
pop
or
push
mov
mov
xchg
pop
dec
pop
cwtl
mov
ds
test
push
out
shlb
lcall
fwait
mov
call
leave
pop
cmp
lret
std
insb
and
jle
outsb
mov
lcall
jne
mov
stos
or
xchg
ss
dec
nop
xchg
test
ret
cmp
sbb
or
loop
dec
and
enter
inc
mov
lret
pop
daa
test
pop
or
jo
adc
stos
adc
xchg
test
jg
cmpsl
mov
pusha
mov
sarl
pop
jno
jp
sbb
pusha
in
mov
ret
es
push
mov
pop
sysenter
sub
mov
or
shrl
cmp
out
les
fsubrl
or
and
or
out
inc
fidivl
jg
stos
test
xchg
or
lods
jno
push
cmp
xor
mov
sub
xchg
fisubrl
sahf
mov
cmp
aam
loopne
out
sti
out
xor
jecxz
push
jmp
ss
mov
jne
leave
xor
sub
daa
push
bound
jo
cmp
pusha
lods
jnp
outsb
and
leave
dec
fmuls
and
sbb
push
in
mov
dec
xchg
mov
les
ja
testb
shl
or
mov
adcl
jg
inc
pop
insl
pushl
rcll
push
lret
shr
mov
sbb
push
in
cmc
push
subb
mov
add
inc
iret
int3
rol
cmp
je
in
fwait
cmp
jno
xorb
xchg
inc
rclb
mov
rcrl
push
mov
dec
loopne
call
or
testl
cmp
lods
imul
data16
imul
add
int
jmp
xlat
cmpsl
and
mov
mov
pop
push
inc
push
flds
xchg
push
test
jp
sahf
add
xchg
xchg
orb
mov
and
mov
xor
pop
jno
jns
mov
sub
out
mov
jno
adc
pushf
jo
mov
push
scas
push
mov
or
mov
lret
sub
std
push
hlt
mov
les
clc
add
and
cmp
xor
movsb
out
dec
add
sbb
lock
ja
outsl
inc
ret
pop
jmp
add
loop
mov
sbb
imul
dec
push
rolb
or
mov
movsb
shl
or
mov
sub
or
lock
data16
out
cli
and
pusha
test
jmp
test
mov
pop
pshufw
ror
inc
popa
jmp
sub
adc
aam
sbb
xchg
fmuls
inc
hlt
adc
push
aam
cs
inc
cmp
push
sahf
lea
mov
jae
or
jne
incb
xbegin
das
xlat
pop
dec
jno
push
add
repnz
mov
inc
xchg
js
inc
or
jbe
mov
sub
xchg
mov
shll
test
fsubl
xchg
push
xor
subl
and
lret
mov
inc
jecxz
cmp
inc
ja
jge
aas
dec
jno
xchg
jo
or
inc
sbb
cltd
jno
jbe
hlt
movsb
mov
sbb
mov
sub
daa
scas
xor
pop
data16
aas
sub
cmp
aad
sub
sub
jp
add
pop
push
lea
hlt
or
lock
and
inc
xchg
daa
xchg
and
into
jne
lahf
xchg
cmc
xchg
sub
pop
adc
ds
sub
cmp
mov
stos
scas
and
icebp
decl
scas
add
mov
dec
fadds
mov
pushf
arpl
jae
pop
mov
jno
xchg
inc
std
repz
push
jecxz
and
sub
cmp
stos
aam
add
pop
scas
lea
lcall
shrl
fld
fists
inc
dec
add
jne
sub
scas
out
sahf
xchg
add
in
lea
cmpsb
xchg
mov
out
adc
ja
loopne
loope
add
loopne
stos
addr16
mov
and
or
jo
filds
mov
sub
xchg
lock
dec
cmpsl
mov
add
xlat
cmpsb
je
adc
pop
sbb
add
mov
sti
nop
sbb
fcomps
and
cmc
mov
cmpsl
fadds
and
lret
cmp
xlat
std
sbb
popa
hlt
xchg
xchg
push
out
push
scas
js
pop
xor
clc
xor
push
lods
push
enter
push
mov
test
aam
cmpsb
js
rcrb
and
mov
loope
cmp
in
cmpsb
ljmp
adc
inc
imul
pop
pusha
mov
pop
mov
pop
lods
jle
xchg
dec
pop
scas
adcb
jo
ret
jno
ror
xor
ljmp
call
lds
add
hlt
jge
inc
sbb
xor
inc
dec
shlb
rcll
les
daa
nop
bound
lret
mov
ret
aas
jecxz
flds
into
mov
mov
adc
loopne
insb
and
out
lahf
test
jae
fidivrl
nop
inc
adc
mov
out
fst
les
sbb
xlat
sub
nop
pop
push
xor
jo
inc
add
rorl
cmp
fs
hlt
dec
xor
jae
xchg
jp
shrl
fstpl
stos
pop
loope
xor
push
mov
pop
sbb
fsqrt
xor
xlat
xchg
lock
roll
lods
adc
imul
push
mov
into
or
cmp
pushf
pop
scas
addb
clc
sbb
cmpsb
cmp
push
push
and
and
xchg
or
daa
test
sub
lods
xor
jne
out
push
aaa
shl
jecxz
cmc
hlt
sbb
fbld
mov
loop
inc
stc
sti
movsl
pop
adc
sbb
pusha
ja
in
inc
xor
jmp
in
and
ret
xor
daa
repz
mov
fildll
ljmp
arpl
dec
dec
mov
cwtl
fstl
lods
dec
and
jmp
ret
lock
jecxz
pop
mov
scas
notl
loopne
outsb
jne
push
out
push
mov
loop
popf
rcrb
push
jae
lock
mov
sqrtps
out
jno
push
or
cmp
sbb
jecxz
jle
cmpsl
push
or
dec
shlb
xor
ds
jae
pop
sub
cmp
add
dec
popf
cwtl
scas
loopne
mov
mov
cmp
push
int3
sub
data16
push
outsl
push
push
jae
adc
pop
outsl
xor
leave
inc
pop
icebp
fisttpl
adc
inc
hlt
jnp
js
push
inc
xchg
cwtl
push
fs
or
adc
xor
fstps
sti
je
dec
inc
sub
pop
xor
mov
xor
ds
int3
inc
pop
lods
dec
inc
sarb
arpl
or
mov
lods
loopne
and
dec
in
lock
mov
lcall
sub
xor
xor
imul
test
cs
pushf
push
sub
jno
jnp
andb
in
push
dec
sub
mov
inc
int3
push
loope
mov
cmp
xor
add
mov
es
dec
push
test
adc
sub
pop
decl
out
pop
mov
fidivs
jle
adc
sbb
aaa
adc
and
xlat
pop
mov
inc
adc
shrb
lcall
imul
sbb
sbb
push
jle
insb
jno
rorl
xlat
movsl
add
xchg
lods
in
jp
sbb
pop
and
lods
enter
and
enter
sub
negb
fildl
xchg
jle
dec
test
arpl
cmp
outsb
cmc
std
xor
out
xor
fcmovnbe
sahf
sti
ficoms
mov
add
or
xchg
cwtl
mov
adcl
fdivrl
adcl
loop
add
cli
mov
dec
mov
in
cmc
test
add
cmp
or
fdivl
xchg
mov
sahf
mov
sub
fldenv
sbb
cmp
or
cli
fbstp
add
mov
cmp
insb
xor
popw
mov
pop
jl
mov
dec
cld
je
insb
xor
mov
mov
sub
jae
add
daa
orb
shl
or
push
xorb
and
dec
daa
jbe
loope
mov
add
cmp
das
jecxz
aam
cmpsl
or
mov
mov
les
sahf
pop
add
cmpl
movsb
sbb
mov
rorl
inc
cmp
sti
scas
mov
and
add
sub
push
mov
push
and
fisubrl
es
mov
nop
mov
sarb
mov
scas
adc
int
loope
lea
in
add
jne
addr16
fucomi
add
push
cltd
adc
ret
hlt
dec
in
pop
loopne
sub
mov
xchg
ss
pusha
int
pushf
and
xor
add
mov
and
mov
mov
xor
dec
mov
dec
inc
int
add
mov
xor
cmp
pop
ja
mov
je
enter
xchg
leave
adc
push
add
jecxz
xchg
jbe
mov
dec
movsb
test
js
sub
or
sub
cmovns
sbb
sbb
pop
daa
mov
jp
xchg
scas
hlt
shll
push
insl
mov
jbe
cmpsb
mov
xchg
call
dec
add
iret
pop
pop
jns
mov
add
inc
or
and
lods
les
fs
xor
subl
inc
dec
mov
add
xchg
jbe
push
dec
mov
sarl
mov
add
jp
cmp
cmc
add
pop
push
fisttpl
sbb
ficoms
mov
xchg
imul
es
push
ljmp
cwtl
pop
sub
or
mov
mov
les
out
mov
and
cwtl
xor
add
fwait
or
outsb
loopne
incb
push
inc
add
xor
mov
in
cwtl
or
sbb
pop
mov
push
insl
pop
push
jae
lret
pop
aaa
cltd
jo
cs
cwtl
int3
fisttpl
sub
or
xchg
sbb
cmpsb
call
mov
repz
mov
cli
push
and
movl
fcompl
xchg
or
es
out
in
jecxz
mov
ss
int
ret
jp
std
shr
pop
mulb
out
fisubrl
mov
test
clc
dec
pop
loope
rorb
ret
out
jle
and
add
daa
movsl
sub
push
fmul
clc
stos
adc
mov
mov
cltd
popf
ret
shl
pop
pusha
xchg
dec
stos
pop
push
jno
aaa
insb
xorb
movsl
in
fimull
cmp
ds
aas
mov
sarl
fisttpll
fwait
loop
or
dec
lods
xor
mov
vmread
push
pop
adc
inc
ss
jmp
xchg
mov
fisttpl
push
rclb
enter
and
push
pop
cld
adc
cli
pushf
and
dec
shlb
pop
mov
test
rolb
xor
inc
mov
loopne
clc
movb
adc
cs
and
sub
pop
sbb
push
sub
add
lret
fwait
mov
loop
sbb
out
dec
movsb
addb
jge
mov
aam
js
add
lods
adc
sbb
insb
lods
sub
adc
add
bound
lock
fistpl
imul
out
popa
lock
jg
ds
jns
xor
xchg
dec
js
adc
int
dec
cmpb
fimuls
add
sarl
orb
sub
ret
inc
mov
stos
inc
sub
rcrb
add
lock
pop
in
or
push
ljmp
adc
push
ret
test
movsb
mov
jne
out
and
xor
fcomps
pop
arpl
add
sbb
xchg
jecxz
in
sub
repz
cld
stos
xchg
lcall
add
mov
aaa
lcall
out
cs
inc
dec
mov
sbb
fldl
js
pop
or
xchg
push
xchg
lahf
jns
inc
push
faddl
xrelease
push
pop
ret
cmpsb
adc
nop
stc
or
decl
pop
xchg
sub
jae
jl
ljmp
dec
cmc
lret
rorl
insb
and
xorb
mov
adc
or
iret
loop
xchg
repnz
loopne
or
call
xor
addr16
mov
int
les
cmc
sub
arpl
sub
mov
inc
and
in
xchg
pusha
or
das
dec
mov
mov
ret
shl
gs
and
or
shlb
pop
test
fidivl
mov
je
cmpsl
je
mov
xor
xorl
dec
vmovntps
mov
cmp
adc
ret
outsl
pushf
repz
mov
dec
pop
jp
add
cltd
fdivrl
dec
mov
repz
jecxz
jle
pop
ljmp
adc
insl
or
cld
psadbw
add
repnz
test
inc
fnsave
add
pop
mov
lea
movsb
sbb
jns
push
or
out
mov
jle
mov
cld
les
and
sbb
popf
jle
push
aad
sbb
jb
pop
push
xchg
cmp
and
je
adc
jo
ftst
das
scas
sbb
cmp
fs
shlb
iret
aad
mov
mov
flds
sub
test
cmpsl
loope
xor
test
cmpsb
adc
push
pop
call
mov
dec
inc
pop
push
dec
or
pushf
adc
adc
dec
movsl
call
testl
aad
inc
inc
lds
adc
aad
pop
sbb
addr16
addb
mov
pop
jle
push
push
stc
add
popa
mov
push
xchg
mov
arpl
cmpsb
sbb
mov
movsb
or
inc
std
stos
insl
shrl
xor
andl
adc
lds
xlat
dec
insb
loop
and
mov
repnz
sahf
dec
mov
xor
cwtl
cmpb
mov
clc
loopne
inc
setnp
sub
sbb
push
xchg
xchg
bound
adc
mov
add
adc
pop
inc
mov
xchg
ja
clc
jl
stos
cli
setae
add
test
shlb
shrb
sbb
pop
and
jne
pop
and
lret
xor
inc
roll
adc
sbb
mov
arpl
pusha
in
jge
mov
pusha
pushl
fidivrs
jno
adc
adc
lret
ficoml
push
and
es
fstps
push
xchg
out
or
out
push
scas
fiaddl
sbb
pop
cltd
out
test
pop
mov
sbb
movaps
arpl
adc
push
inc
xchg
cld
stos
pop
push
dec
fimuls
shlb
out
sbb
push
jno
xor
or
movsb
pcmpeqb
add
insl
shl
fsts
inc
repnz
adc
mov
cli
shll
mov
jl
push
xlat
lahf
jne
repz
lcall
stos
imul
imul
xchg
in
lret
rcr
jo
xor
sbb
cmpsb
inc
sub
push
scas
rorl
cmp
out
out
sbb
sub
addr16
repnz
aas
add
xor
mov
jp
fwait
out
mov
pop
orl
sahf
imul
or
push
stos
clc
insb
repz
mov
pop
push
or
or
sub
rcll
jo
or
xchg
call
dec
xchg
sar
push
andb
lret
cwtl
push
js
repnz
movsb
mov
dec
rorb
ret
mov
adc
adc
int
in
pusha
and
cmp
fucom
adc
adc
add
call
xchg
inc
ja
pop
pop
push
daa
mov
in
xchg
cwtl
dec
jae
pusha
aad
mov
mov
push
and
push
incb
sub
cld
test
mov
cmp
sbb
stos
ret
mov
mov
test
lods
push
lock
xor
adc
mov
or
adc
push
inc
inc
repnz
test
xchg
mov
mov
lock
jmp
in
jnp
into
inc
xchg
inc
and
hlt
mov
and
je
call
je
adc
mov
push
mov
mov
inc
pshufw
inc
hlt
add
mov
cld
adc
or
mov
sbb
jecxz
ret
pop
or
push
outsl
mov
pushf
shll
loop
cld
lea
out
addb
xchg
add
les
iret
and
dec
jmp
jmp
add
mov
fwait
push
jg
xchg
dec
sbb
inc
das
mov
ret
xchg
and
push
cmp
aam
out
loop
xor
or
or
cli
adc
lock
jmp
inc
inc
cmp
call
or
popa
shrl
lret
les
loope
call
lods
outsl
mov
add
mov
mov
lock
inc
pushf
faddp
ret
and
sub
sbbb
jl
cmp
mov
adc
adc
jno
clc
outsl
es
xorl
mov
cmp
or
xor
test
pop
sarb
aaa
dec
ds
daa
loopne
dec
sbb
addb
mov
aaa
jg
mov
cmp
js
sub
stc
scas
clc
stos
stc
mov
inc
add
mov
repz
insl
mov
inc
sbb
pushf
addr16
and
cmp
jbe
push
clc
lahf
sbb
mov
clc
add
cld
scas
adc
push
add
sub
cmp
insb
and
sar
hlt
outsl
push
mov
pop
bound
into
movsb
add
fmull
imul
outsb
incl
push
push
ffreep
out
jl
filds
push
ret
pop
ds
mov
sub
and
mov
mov
adc
adc
mov
inc
pop
adc
nop
mov
cmp
int
xor
and
test
inc
and
pop
loope
add
push
push
les
arpl
in
mov
decb
ret
test
mov
fwait
rcrb
xchg
test
xchg
pop
cld
inc
add
push
push
dec
push
push
clc
dec
repz
aas
pop
lret
xor
aas
aad
pusha
clc
xchg
js
dec
pusha
push
fs
jecxz
ljmp
movsl
inc
xor
adc
inc
call
shrl
rorl
xor
rorb
pop
jecxz
jg
loopne
pop
add
or
enter
cmp
inc
leave
fidivrl
scas
and
xlat
cmpsl
shrb
push
lcall
push
test
and
into
pop
inc
jo
test
sbb
imul
aam
push
insl
lds
sbb
sbb
xchg
sbb
stos
lahf
lods
sti
cwtl
xchg
jmp
scas
mov
test
jbe
test
neg
cmc
adc
loope
ljmp
jno
sub
in
pop
icebp
scas
jp
mov
shlb
popa
jae
mov
mov
push
pushf
lret
mov
orb
fimull
push
dec
push
shl
sahf
fadd
xlat
les
mov
out
mov
arpl
pop
add
lods
adc
in
cmpsl
mov
push
adcl
lret
stos
cld
xor
sahf
and
pushf
es
lea
add
fs
dec
lods
cmp
fiadds
test
aad
pop
aam
xchg
lahf
jmp
xor
inc
jo
push
in
ret
push
lret
clc
movsl
addr16
sbb
sahf
and
in
mov
mov
das
bound
mov
lret
sub
cli
addr16
leave
or
lods
aam
sbb
stc
jno
outsb
in
push
cmc
mov
adc
dec
aas
cmp
push
rcl
ja
rolb
push
mov
jae
loop
and
mov
arpl
jb
iret
into
movsb
mov
cld
and
push
sbb
ds
add
jns
lock
mov
and
and
out
xchg
adc
pushf
fimull
lock
cmp
divb
or
outsb
push
or
fwait
adcb
in
movd
stos
sub
or
inc
sar
jmp
jecxz
mov
clts
call
adc
fwait
and
adc
push
cli
add
shlb
xchg
dec
push
stos
ret
es
insb
push
mov
je
pop
adc
jg
push
inc
inc
mov
mov
jecxz
es
xlat
jnp
inc
pop
fucom
pop
or
je
push
sbb
out
add
adc
jmp
cld
inc
dec
mov
std
mov
or
jg
sbb
xchg
or
mov
decb
lods
mov
sub
popf
jge
inc
xor
sub
loopne
sub
rclb
ret
loope
enter
cmp
test
or
clc
testb
dec
bound
sbb
inc
mov
std
pop
lock
adc
add
jecxz
arpl
sbb
push
adc
insl
push
cld
cmpb
adc
ss
aas
test
fiaddl
sbb
mov
popf
fwait
sbb
ja
insl
sub
mov
pop
mov
fsts
add
xor
aam
jnp
into
inc
xchg
cmp
and
sbb
pushf
in
add
ds
sarl
mov
xchg
aam
arpl
xor
cli
mov
adc
pop
inc
jmp
es
loope
repz
inc
push
xchg
adc
push
adc
add
sarl
stc
inc
testb
lock
ds
pop
dec
in
pusha
aam
dec
xor
jp
out
jle
sub
ljmp
inc
jecxz
jnp
or
adc
inc
negl
jnp
lcall
dec
xchg
and
testl
aaa
mov
cmc
dec
pop
notb
int3
jb
fucom
sbb
mov
sub
xchg
call
mov
mov
xchg
aad
pop
sbb
les
lods
sahf
push
push
push
jg
dec
ret
shll
xchg
jl
ja
inc
outsl
jl
repnz
push
inc
lds
bound
and
cs
inc
test
icebp
aas
jno
mov
orl
js
cmp
aaa
push
sbb
ret
pop
ljmp
xchg
rcll
mov
or
lret
or
movsb
xchg
mov
ja
fs
push
add
or
lock
push
push
and
mov
mov
rorb
adc
sbb
jg
xor
pusha
mov
popf
mov
aad
or
xchg
xchg
std
clc
enter
psubw
inc
sub
sbbl
or
adc
jmp
iret
jp
inc
lds
adc
mov
rcrb
ss
ror
outsl
push
ds
xchg
push
sbb
stc
push
mov
xchg
ds
inc
cwtl
scas
js
hlt
loop
loopne
sbb
mov
dec
or
adc
imul
inc
sbb
inc
dec
xchg
pushf
jecxz
cld
jb
orb
add
mov
js
movsl
mov
pushf
test
scas
cmp
push
fdivl
fxch
sub
out
and
cld
arpl
lret
xor
rcll
hlt
ja
jge
inc
jb
add
xor
imul
xlat
ds
jnp
sbb
hlt
test
stc
movsb
aas
hlt
jecxz
ret
cmp
icebp
cmp
or
dec
mov
jp
fisttps
dec
ret
lea
jp
adc
xlat
dec
pop
adc
inc
xchg
fdivrs
outsb
or
jmp
inc
clc
add
repnz
arpl
cltd
mov
sbb
mov
iret
hlt
into
cmpsb
lock
sarl
imulb
pop
lock
push
mov
ss
xor
outsl
sub
les
xor
sub
cltd
ret
sarb
dec
xchg
jmp
lahf
push
xchg
xor
mov
ret
jecxz
fdivrs
setg
pop
mov
lahf
ds
shr
xlat
orb
and
push
mov
xor
xchg
push
xlat
data16
clc
repz
ja
fadd
or
dec
rclb
lcall
inc
fmul
mov
adc
adc
call
sbb
sub
nop
adc
adc
xchg
bound
test
mov
pop
stos
xorb
mov
loope
sub
cmp
paddw
pushf
inc
pop
pop
inc
xchg
addr16
ret
xchg
idiv
lahf
or
xorb
jo
xlat
xorb
subl
mov
inc
mov
mov
pop
pop
in
inc
mov
jle
sbb
fs
sbbb
xchg
jmp
stos
mov
call
mov
cli
push
dec
clc
add
mov
fmuls
push
adc
xor
add
pop
shrl
mov
or
ljmp
pushl
enter
mov
aam
mov
dec
fsubrl
loope
loop
into
lret
lods
mov
mov
add
and
loopne
mov
cmp
add
sbb
add
imul
enter
les
or
or
cld
dec
mov
mov
dec
pop
dec
xchg
insb
jne
sbb
xor
ja
mov
stos
jo
mov
cmc
aaa
ljmp
xlat
mov
or
aam
addl
negl
push
or
das
iret
add
add
adc
call
mov
std
incb
xchg
rcrb
shl
lret
test
rcll
lcall
clc
decl
add
pop
fimull
lret
icebp
bound
lds
mov
mov
add
or
or
add
jp
add
push
out
pop
jp
cmp
adc
sub
mov
jl
ret
xchg
les
fwait
fwait
aas
xor
mov
cwtl
test
sarb
xor
popa
xor
cmp
loope
cmp
rcrb
mov
inc
lahf
cwtl
int3
inc
xlat
je
adc
lcall
dec
pop
lods
push
inc
rcrl
or
daa
push
and
stc
mov
les
lret
push
cmp
xorb
sahf
push
dec
push
cmp
orb
or
or
inc
cld
stos
mov
pop
add
imul
aam
inc
bound
pushf
and
add
mov
das
sub
cmp
xchg
loopne
cmp
push
lret
sbb
or
je
push
stos
cmp
not
mov
xchg
inc
imul
scas
imul
mov
pop
jns
inc
pusha
fdivrl
in
sub
push
add
andb
cmc
and
aaa
clc
arpl
sbb
sti
or
sbb
sarb
push
clc
repnz
in
sbbb
hlt
sub
pop
cmpsl
inc
add
push
push
cs
loop
pushf
pop
lret
add
adc
pusha
in
lret
out
jecxz
stos
ret
adc
and
jle
outsl
inc
sahf
divl
movsb
les
pop
scas
sub
sarl
jecxz
movsb
mov
pop
sbb
jb
lret
adc
dec
or
inc
std
add
fs
sbb
pop
and
xor
mov
les
js
mov
js
icebp
inc
cwtl
xorb
lock
les
sub
insl
jb
mov
imul
cmpsb
notl
mov
xchg
jl
adc
test
arpl
leave
loop
xchg
js
push
push
hlt
mov
inc
push
pusha
frstor
arpl
jo
xchg
jae
adc
ljmp
cmp
inc
loopne
loop
cwtl
movsl
pop
sarl
shlb
rol
rolb
sub
aad
cmpsl
js
outsl
xchg
push
mov
jmp
ljmp
jp
pop
jbe
aaa
pusha
lret
lcall
push
xor
out
xor
mov
mov
pop
mov
inc
adc
xchg
shll
mov
ret
add
pop
subb
lock
push
jmp
xor
sahf
mov
mov
cmp
and
jae
mov
mov
aam
jno
sahf
inc
shll
and
out
les
test
push
add
xchg
inc
push
push
imul
and
xchg
loope
sub
jne
test
mov
movl
sbb
dec
pop
or
jae
ljmp
faddl
int
dec
adc
jnp
jno
sub
lock
lock
mov
push
adc
pop
cmpsb
cmp
ror
scas
fidivrs
pop
and
andb
mov
lret
push
je
mov
into
sbb
cli
or
sbb
arpl
loopne
out
pushf
scas
push
mov
frstor
movsl
xor
fsubp
fnsave
negl
dec
int
sub
add
mov
sahf
lock
sarb
or
add
mov
aam
xchg
mov
mov
sbb
pusha
je
in
ficoms
xchg
mov
or
xor
rorl
add
adc
jmp
testb
pop
mov
loopne
jb
addb
or
lock
jecxz
jecxz
add
cwtl
mov
pop
aas
cs
mov
cwtl
fs
inc
mov
push
lods
std
jmp
mov
xchg
pushf
inc
inc
pushw
faddl
aas
mov
add
aam
sbbb
fistpl
int
pop
imul
cs
ja
lds
std
mov
es
adcl
popf
or
push
jae
pusha
push
clc
fnstcw
dec
clc
loope
repz
inc
jg
test
or
add
addl
pop
adcb
push
jmp
imul
rcl
and
jae
dec
add
mov
mov
dec
mov
insb
or
aaa
xor
fwait
mov
cmp
enter
shll
pop
sbb
jl
inc
insb
sub
push
out
mov
sub
mov
cld
cmp
mov
pop
cmp
jmp
mov
inc
or
sub
cmpl
sub
add
cmp
dec
inc
cmp
in
fdivrl
mov
out
mov
insb
or
or
cld
push
in
jg
mov
mov
das
insb
call
js
and
ljmp
fiaddl
jl
dec
mov
jb
add
sub
cld
scas
or
sub
enter
orl
das
pop
lcall
mov
sti
es
fs
and
jno
mov
mov
aas
jge
add
out
and
adc
mov
cld
xor
adc
cmpsl
sbb
cld
xchg
and
sub
ja
js
or
imul
call
add
mov
ss
inc
mov
inc
mov
pop
mov
out
inc
xor
mov
or
mov
das
adc
inc
push
inc
out
and
rorl
cmp
test
add
adc
jne
ds
add
fmuls
repz
push
mov
mov
dec
icebp
rcrl
fcoml
or
jl
ljmp
lds
idivb
sub
mov
test
push
int3
vsqrtps
xchg
dec
inc
dec
mov
ss
mov
sub
jbe,pn
xchg
jecxz
mov
orl
cld
clc
jle
dec
pusha
arpl
xor
and
inc
mov
mov
mov
lds
fisubs
pusha
dec
add
inc
mov
std
pop
mov
sbb
cmp
jle
add
sbb
insl
out
lret
xlat
mov
cwtl
fsub
dec
mov
dec
roll
pushf
ljmp
add
pop
aam
lock
jecxz
mov
repnz
js
mov
mov
ret
and
test
inc
xchg
mov
cli
cmp
enter
add
sbb
clc
or
dec
clc
shrb
mov
stos
add
mov
pusha
mov
bnd
test
and
out
je
adc
pop
lret
rorb
push
pop
aam
insl
pop
xchg
imul
adc
add
lret
shlb
add
addb
mov
ss
mov
mov
pop
add
sub
mov
push
xchg
in
xor
xchg
loope
pop
mov
jmp
fdivl
cmpsb
add
std
pop
or
sahf
scas
jns
aas
sbb
cld
jecxz
jge
loopne
fidivs
add
movb
dec
es
popf
shrl
testb
cli
aam
mov
or
or
push
lahf
sub
xchg
pop
mov
jge
mov
icebp
mov
in
mov
adcb
clc
shll
xor
sub
adc
shl
cld
ret
add
xorb
pop
rorl
ret
dec
push
inc
pushf
mov
inc
fucomip
test
push
shrb
js
outsb
pop
mov
add
lret
test
pop
add
inc
sub
adc
pop
mov
lea
pop
add
fistpll
stos
lods
mov
jg
decb
movsl
and
jmp
mov
out
popa
dec
pusha
roll
or
pop
or
inc
push
xchg
into
dec
lds
mov
mov
into
and
repz
jo
push
pusha
test
lea
mov
push
rcrl
inc
add
stos
int3
mov
pop
rcrb
cmp
adc
test
add
or
xor
mov
stos
movsl
sbb
leave
mov
gs
iret
js
fnstcw
inc
cltd
sub
inc
sub
out
dec
push
adc
and
inc
push
fnstsw
punpckhdq
or
pushf
jg
lret
rorb
adc
ret
jnp
sub
pop
negb
sbb
and
push
xor
fcoms
adcb
movsl
inc
stos
push
aam
inc
and
pop
add
sbb
jmp
mov
jl
scas
jbe
out
mov
cmpsb
icebp
out
push
loopne
dec
inc
iret
jl
nop
test
clc
mov
push
cmpsb
rclb
push
jns
ret
ret
sarl
inc
call
ror
sub
loopne
sbb
jge
jnp
test
xchg
xor
pop
mov
jge
mov
inc
cmpb
insl
lahf
xchg
lcall
pop
mov
icebp
push
jb
add
mov
loop
push
and
mov
pop
in
pop
orb
icebp
hlt
fsubs
sub
cli
std
mov
imul
jle
fstl
adc
dec
inc
lods
shrl
lods
xchg
sbb
jb
mov
inc
cmpl
fmuls
mov
and
ret
jl
push
pop
xor
sbb
pop
sub
pop
fs
icebp
daa
ljmp
inc
dec
pop
adc
mov
fsts
test
popf
frstor
leave
pop
ror
sarb
pop
inc
int3
loope
andl
mov
movsb
xchg
mov
movsl
outsb
fcomi
add
mov
mov
dec
aad
add
icebp
xchg
jmp
jecxz
cmpsb
mov
pusha
outsb
movsl
jnp
jecxz
hlt
mov
pop
and
mov
loope
sarb
cmp
cli
xchg
inc
imul
dec
test
inc
fst
cmpl
lock
mov
mov
iret
cmp
dec
mov
into
ds
add
arpl
cltd
lock
jno
out
ds
int
xchg
or
inc
xchg
cmp
fs
sbb
dec
pop
mov
mov
aad
jle
mov
pop
cmp
add
cltd
inc
push
add
addr16
xchg
enter
sbb
loopne
scas
scas
mov
in
xor
ss
hlt
enter
mov
fmull
lcall
dec
adc
lds
mov
mov
out
pushf
mov
xchg
call
jecxz
mov
push
shlb
mov
adc
les
sub
mov
aaa
pop
cmpl
jg
xchg
jo
movsl
cli
pop
cmp
adc
pop
imul
lahf
mov
cmp
arpl
jo
sahf
cwtl
es
mov
aas
sbb
and
inc
cmp
mov
xchg
mov
adc
jb
sbb
add
fwait
xlat
lds
lcall
pop
push
bound
je
cltd
mov
jp
jno
movsl
pop
shlb
push
out
in
jb
sti
dec
or
test
out
sub
and
icebp
rcrl
sub
lock
cmp
fwait
mov
jl
dec
stos
ss
scas
pop
adc
mov
lds
clc
shrl
push
sti
lea
or
adc
jle
shll
loope
inc
jecxz
movsb
out
shr
bound
mov
fs
ret
xor
fadds
jae
sbb
movsl
xor
push
mov
fadds
xchg
mov
lea
inc
add
xchg
jb
sti
call
cld
dec
inc
sahf
loop
stos
ljmp
mov
lods
inc
mov
push
rcl
inc
packsswb
mov
clc
into
or
jne
cmpsl
fldcw
pop
push
es
insl
icebp
aas
fiadds
add
icebp
push
and
nop
adc
inc
xchg
push
pop
push
xor
sbb
add
cmp
hlt
and
roll
dec
fstl
xorb
xlat
cltd
cwtl
sbb
mov
push
cmpsb
adc
daa
jge
cmp
imulb
cmp
pop
jmp
mov
shll
pushf
or
das
fsts
push
ja
xchg
jl
xor
hlt
pop
loop
add
std
cmp
adc
push
int
rcrl
in
dec
test
popf
mov
adc
inc
push
loop
mov
mov
repz
loopne
filds
mov
outsl
fadd
pop
mov
movsb
dec
mov
cmpsl
add
divl
cmpl
nop
mov
shld
enter
and
mov
lret
xchg
xchg
testb
xorb
pop
mov
mov
test
mov
adc
and
gs
imul
add
popf
repnz
cmpl
ds
add
jl
push
adc
lods
sub
int3
loope
call
out
cmp
jb
das
repz
dec
test
or
stos
test
inc
cmp
jae
xor
cmp
sub
je
jmp
mov
mov
in
cmc
daa
movsb
inc
cmp
cmp
adc
pusha
cmp
fwait
imul
in
dec
pop
int
loopne
popa
push
and
xor
adc
daa
cwtl
cltd
inc
mov
mov
xchg
pusha
fadd
sarl
xchg
pop
mov
pop
lea
jb
es
cmpsl
xor
stc
int3
shll
sahf
xchg
push
or
mov
lods
add
jecxz
push
jp
jmp
roll
xlat
imulb
aaa
jo
cwtl
mov
clc
pop
push
inc
dec
mov
push
adc
cmp
fwait
add
popa
mov
cmp
jb
out
fldl
cmp
mov
pop
ret
cld
dec
sub
add
ficompl
arpl
xor
sarl
fisttps
jecxz
in
dec
bound
ret
adc
jno
out
outsl
out
jbe
cmp
mov
xor
or
pop
dec
movsb
ja
into
jp
ret
inc
mov
mov
je
or
jmp
les
adc
fwait
pop
and
cmp
shlb
adc
rcll
mov
xor
aam
inc
add
sarl
lret
or
loopne
pop
aad
fildll
add
pusha
bswap
jecxz
push
jb
stc
lock
fcompl
shll
jge
les
sbb
leave
push
adc
pop
decb
jle
test
in
pusha
test
or
loope
add
loope
sbb
and
jmp
adcl
loopne
xchg
loopne
stos
fnstcw
test
les
xchg
cltd
das
adcl
lcall
test
adc
sub
cmpsb
cli
out
push
xor
aam
xchg
jl
imul
out
std
push
lahf
rcrb
dec
add
int
cwtl
push
cmp
jne
les
pop
repnz
popa
fimull
cmp
sub
push
scas
pop
sub
jnp
xchg
or
and
jle
aam
movsl
inc
aas
xchg
cmp
data16
jge
in
sub
xor
mov
xchg
pop
adc
and
adc
icebp
dec
pop
andl
notl
dec
sbb
mov
cltd
out
dec
dec
and
mov
aaa
incb
sbb
add
shrb
cltd
push
add
into
xchg
and
and
pop
push
mov
cmp
sub
cld
xchg
xchg
or
jmp
adc
lahf
ljmp
push
aad
dec
imul
add
in
pop
adcb
mov
les
push
sbb
xor
cmp
mov
aad
dec
add
adc
sti
dec
addl
pusha
mov
iret
jecxz
fisttps
test
cmpb
and
lock
cli
sbb
popfw
add
inc
inc
pop
mov
call
xchg
add
cmp
stos
pusha
cltd
cmc
mov
pop
cld
das
loop
test
xlat
adc
add
testl
mov
outsl
es
dec
jbe
push
fsub
and
in
inc
add
xchg
imul
lahf
inc
les
pop
lods
lock
mov
clc
cli
movsb
mov
icebp
outsb
add
add
push
jg
pop
dec
ljmp
sahf
mov
clc
fsubl
sar
xor
mov
xor
clc
adc
mov
sub
and
or
lds
adc
sbb
mov
dec
add
aas
nop
push
lock
or
push
sbb
in
mov
jns
and
mov
cli
xor
aad
and
in
push
inc
mov
or
and
mov
subb
fwait
stos
mov
xchg
pop
ret
incb
adc
jne
jbe
push
imul
push
mov
into
lods
orb
pushf
gs
dec
pop
or
push
add
xor
dec
or
mov
in
data16
insb
cmp
popa
dec
dec
xchg
add
xor
dec
data16
xor
jg
sbb
pmuludq
pop
add
data16
fwait
mov
push
sahf
lret
sub
kxnorb
ret
jo
inc
add
stos
xlat
sar
jmp
jl
rep
inc
adc
or
cmpsl
mov
nop
adc
mov
out
mov
xor
dec
push
shlb
rol
clc
call
inc
fstpt
sub
lods
stc
jl
xchg
rolb
loope
je
les
lds
sub
fstl
inc
pop
and
push
xor
mov
aam
add
test
mov
mov
in
inc
xchg
mov
jmp
add
sbb
mov
inc
daa
inc
imul
sub
std
test
push
mov
and
aaa
inc
ret
incl
push
mov
xor
pop
test
clc
xchg
fcomp
xchg
inc
push
add
add
repnz
mov
mov
push
cmp
in
not
xor
insb
add
jne
ds
movsb
mov
cld
rcll
icebp
cmp
hlt
inc
dec
rolb
ljmp
sbb
fsubl
sub
xchg
dec
or
dec
cmp
mov
push
rolb
pop
and
iret
int3
nop
mov
call
fsub
adc
cld
cmpsl
jmp
test
stc
sub
add
adc
inc
cmpsl
pop
popa
cmp
cs
mov
test
scas
ret
pop
fildl
cmpsb
sbb
out
add
call
pop
test
and
inc
pop
xor
imull
jbe
dec
notb
jmp
lods
xor
or
adc
xor
pop
jg
pushf
jb
pushw
mov
lods
and
mov
push
sub
pop
js
push
pop
and
inc
ds
jo
cs
scas
mov
jg
adc
push
add
andl
jb
or
clc
mov
adcb
fmuls
push
xor
pushf
add
dec
scas
cmp
lods
in
add
push
mov
add
jle
loopne
cmp
fwait
and
pop
add
push
cmp
or
sahf
pushf
xchg
fwait
sub
jmp
sbb
out
adc
aas
movsl
dec
lock
push
adc
mov
call
icebp
jmp
xor
xor
out
xchg
mov
dec
inc
movsb
icebp
inc
inc
or
nop
es
data16
xor
test
jecxz
add
and
je
into
mov
fdivr
jg
fs
add
ret
movsb
inc
bound
mov
add
lods
sbb
push
nop
jns
pop
loopne
cmp
inc
dec
dec
xchg
adc
icebp
fimuls
popa
div
cmc
lock
and
addr16
add
call
push
sbb
dec
jae
shrl
or
leave
dec
push
jmp
cmp
scas
rcl
sub
inc
int3
add
lretw
fisttpll
imul
xorl
sarb
lock
xchg
loopne
daa
add
fildll
fs
mov
pop
push
call
orb
adc
movsb
rorl
xchg
push
mov
lds
rcr
inc
mov
inc
wrmsr
xchg
inc
ret
negb
jmp
shlb
lea
into
xchg
xchg
std
ret
add
sahf
add
in
out
sbb
xor
ja
mov
pop
cmp
lcall
sbb
fmuls
sbb
jno
sti
or
cmp
inc
dec
add
popa
push
xchg
bound
gs
mov
cmpl
pop
pop
loope
bound
decb
dec
or
mov
cs
fisttpl
sbb
xor
xor
mov
ljmp
xchg
xchg
mov
xchg
sti
shlb
jnp
insl
jbe
fmuls
dec
jb
adc
into
movb
push
inc
pop
movsb
mov
sub
add
sbb
cs
ds
inc
or
div
mov
inc
into
filds
jno
pusha
dec
movsb
ret
add
sbb
xchg
lods
test
xor
jmp
push
hlt
fmul
xor
sub
adc
xor
jecxz
or
mov
pop
or
ja
rcrl
push
inc
pop
inc
rolb
es
jmp
dec
lcall
cmpl
dec
mov
push
rorb
ret
sub
lods
pusha
loope
cmp
pop
add
mov
test
push
mov
mov
cmp
push
jle
or
ret
cmp
jo
sub
pop
movsb
test
addb
adc
mov
inc
jg
push
xor
pop
pop
xor
jg
and
or
aas
fisttpll
enter
testl
scas
test
add
mov
or
cmp
or
push
mov
dec
jg
mov
scas
pusha
or
idiv
mov
jnp
lcall
test
int3
xor
jp
addr16
mov
sahf
idivl
sub
sbb
add
sbb
and
loope
iret
pop
or
add
sarl
aam
movsb
cmc
ja
push
push
movsb
sbb
jl
push
jle
push
mov
xor
cwtl
cwtl
iret
test
imul
push
pop
jb
cli
les
ljmp
shll
jmp
cmp
mov
shrb
pop
cmpsb
or
pop
sbb
pop
aam
sub
add
xchg
jle
lods
mov
iret
aam
aas
lods
dec
push
inc
lret
or
adc
sub
sub
adc
movsl
ds
popa
je
sbb
je
mov
cwtl
inc
pop
lods
jne
xchg
je
out
movb
fnsave
pop
out
mov
jo
das
fsubs
pop
int
in
add
cli
fcoms
ljmp
inc
and
cli
xchg
and
push
cmp
loop
jbe
sarb
dec
fcomip
fmuls
sub
inc
movsb
aas
adc
lods
pop
in
addb
pop
xchg
insb
and
sub
jo
mov
push
mov
shl
aas
aad
xchg
mov
pop
insb
jb
sub
sbb
das
mov
add
sbb
fildl
mov
push
inc
sbb
inc
add
xor
outsb
inc
sbb
sbb
test
aad
add
push
and
or
or
push
add
dec
jne
mov
xchg
stc
insb
adc
clc
pop
sbbb
stc
aam
mov
dec
mov
sahf
aaa
push
jecxz
dec
jecxz
pop
add
cs
and
shlb
jge
mov
data16
into
popf
sbb
add
mov
jecxz
mov
xchg
lods
xchg
inc
rolb
mov
mov
cmp
dec
arpl
pop
push
add
sbb
pop
aaa
adc
cmp
lcall
scas
lret
adc
cmpsl
inc
dec
mov
adc
roll
push
insb
lret
or
push
ja
add
xchg
nop
adc
inc
push
mov
les
dec
arpl
test
fcoml
nop
jmp
and
call
ds
sahf
mov
cmp
and
push
mov
xchg
fsubl
push
jle
mov
or
inc
cmp
and
pop
into
xor
das
xchg
xchg
clc
adc
cli
xchg
fsubl
test
shr
es
mov
mov
loope
outsl
sbb
daa
fists
fisubs
clc
inc
jl
cmp
mov
enter
sub
out
mov
xchg
lods
lods
hlt
push
pop
cmpsb
scas
mov
xlat
cmp
add
cmp
lret
frstor
sbb
jge
bound
sbb
xor
jp
out
add
cli
and
nop
dec
cmpsb
sub
outsl
jg
sbb
sub
fimuls
jmp
jg
nop
jno
sbb
and
add
out
rolb
imul
movb
pop
push
mov
xchg
lods
aad
mov
mov
add
cmpsb
hlt
cs
clc
cmpsl
add
aad
adc
lcall
pcmpeqw
pop
bound
or
sub
dec
pop
leave
mov
cmp
push
enter
fstpl
jp
je
adc
xchg
fcomp
add
hlt
test
dec
fcomip
add
adc
popf
popf
lcall
mov
lea
jnp
addr16
mov
je
mov
xchg
mov
and
add
fldcw
mov
lods
pop
clc
test
addb
pop
jg
jge
mov
push
pop
cmc
jbe
xchg
out
cli
or
cmc
mov
lea
adc
into
fsub
cmpsb
push
inc
dec
data16
call
sbb
fs
mov
cmp
or
fwait
gs
lret
pop
imul
call
ljmp
pop
enter
xchg
mov
sarb
stc
loopne
test
enter
adc
mov
or
cld
stos
in
rorw
fwait
mov
jl
and
adc
xchg
xor
jbe
dec
lds
movl
cmp
and
inc
repz
cmp
addr16
in
addr16
jg
dec
mov
sub
int
mov
out
pop
and
cmp
jmp
xchg
imul
sub
sar
jns
mov
push
sarb
cwtl
jg
shrb
int3
cmp
cmp
mov
insb
adc
jmp
inc
ds
aam
cmp
loope
insb
je
es
movsl
mov
fs
jp
pusha
xlat
xchg
aam
push
inc
loopne
inc
add
and
push
mov
lods
adc
dec
cli
or
data16
lcall
mov
dec
das
cmpsb
or
scas
dec
bound
and
js
into
mov
pop
aad
pop
sbb
stc
call
ja
outsb
icebp
mov
mov
lods
jmp
add
std
add
push
pop
shl
lds
inc
fadd
stc
imul
mov
sbb
lds
outsb
mov
das
and
rcl
test
cld
loop
bound
push
mov
push
cld
aaa
and
sbb
push
loope
enter
daa
jmp
inc
arpl
pop
pop
inc
movq
adc
mov
mov
xchg
inc
outsl
loop
imul
shll
add
in
mov
push
popf
sub
imul
jnp
push
outsb
pop
scas
mov
fstps
jnp
inc
push
pop
in
dec
pop
xchg
or
mov
mov
add
jle
mov
js
clc
lcall
or
pop
add
and
shlb
lea
addl
push
stos
lods
fcompl
push
push
sbb
dec
jmp
insl
jo
insb
lahf
les
jmp
rcrb
jnp
ja
adcb
ficoml
pusha
fadds
jl
hlt
js
dec
mov
cltd
in
cmpl
mov
inc
iret
pop
and
je
aam
aad
bound
stos
jns
outsb
sti
jb
xor
add
lock
xor
je
out
or
inc
jbe
in
jo
cli
out
xchg
or
dec
cli
std
les
xchg
mov
jp
das
test
std
xchg
cmp
mov
sub
aas
arpl
int3
call
xchg
test
in
in
cmp
xor
dec
dec
adc
jge
aas
nop
popf
scas
popa
lods
ret
cmc
aad
sbb
xchg
and
std
mov
cmc
mov
add
test
push
jecxz
xchg
out
jecxz
in
pop
mov
jecxz
cmp
rolb
or
cs
decb
out
bswap
fwait
mov
into
sub
add
sbb
xlat
mov
es
mov
cmpsl
dec
stos
dec
cwtl
cmp
mov
mov
sbb
or
ficomps
cmp
or
mov
and
cmp
push
mov
fs
xlat
push
sbb
js
push
adc
dec
and
inc
js
std
bound
enter
hlt
mov
shrb
outsb
pop
nop
sbb
jl
pop
add
mov
leave
pusha
cmp
mov
fidivrl
mov
push
add
rep
pop
add
mov
or
rol
loopne
mov
out
imul
push
psubq
add
out
push
frstor
insl
mov
enter
outsl
sbb
outsl
sub
mov
cmp
lahf
fldcw
mov
push
pop
sub
inc
mov
jmp
shlb
loop
notb
mov
add
push
and
fstps
shll
daa
push
inc
aad
lret
jecxz
pop
push
add
push
xlat
pop
lock
push
ret
stos
or
mov
sahf
cli
pusha
lcall
or
mov
test
jecxz
mov
pushl
xor
sbb
sub
dec
or
lock
mov
stos
lds
lock
movsl
daa
popa
jecxz
push
inc
loopne
lcall
push
fldcw
cmpsl
daa
lret
add
push
pop
pop
mov
orl
lcall
push
adc
pop
jmp
js
add
loope
test
outsl
push
stc
pushf
mov
int
sar
push
mov
aad
mov
mov
les
shll
jo
mov
out
cmp
cmp
xor
cmc
add
fnstenv
dec
sub
lcall
gs
jo
inc
cmp
orb
in
cmpl
push
dec
xchg
xor
xor
je
add
inc
lods
push
js
push
or
jo
pop
pop
cmpb
pop
cld
hlt
cmpsl
sub
xchg
xchg
xor
in
imul
rclb
inc
nop
adc
addb
and
or
push
nop
hlt
shll
push
ds
loop
loope
imul
setge
lods
clc
mov
xor
xchg
outsb
or
fs
fimull
cmpl
xchg
fidivs
rcrb
in
dec
mov
jnp
sbbb
push
sub
push
mov
popl
les
or
sarb
in
popa
sub
xchg
cmp
mov
mov
aas
or
and
stos
or
push
inc
jb
out
pop
xorb
push
and
cmpsl
test
int3
shl
push
out
add
fwait
pusha
rcrb
data16
mulb
mov
pop
bound
xchg
into
cmpsl
pop
cmp
mov
mov
ret
repz
imul
add
push
sub
std
outsl
pop
nop
in
push
in
psllw
ret
or
ljmp
jmp
aam
loop
sub
xchg
lret
int3
jnp
rol
add
inc
cmp
xor
sub
pusha
movsb
jno
dec
cmpsl
shll
sbb
ret
scas
dec
inc
arpl
loop
mov
dec
push
popa
add
or
aas
push
pop
dec
mov
adc
stc
mov
pop
out
inc
adc
aaa
adc
sub
test
movsb
mov
push
fimull
sbb
add
repnz
fisubrs
pushf
sub
pop
pusha
out
pop
inc
filds
or
add
lock
and
jmp
ss
jmp
outsl
sub
mov
inc
pop
and
jl
adc
jecxz
jmp
test
xchg
popf
inc
pop
int3
mov
mov
inc
cli
mov
sub
es
pusha
clc
cmpl
pop
stc
xchg
cmp
mov
nop
sub
enter
mov
pop
adcl
loopne
scas
mov
fildl
dec
jns
push
xor
mov
ds
push
das
sbb
pushf
jmp
out
add
rorb
dec
sub
sarl
push
enter
ljmp
cs
adc
in
data16
cmp
rorl
mov
fcomip
mov
cmpsb
cs
pop
sahf
lock
push
or
and
sarb
mov
inc
jl
bt
xorb
push
xchg
or
sbb
lods
sahf
cmp
sbb
arpl
and
sahf
push
dec
fiaddl
jmp
insb
rorb
aaa
fstps
jecxz
mov
arpl
or
ret
mov
dec
mov
clc
jecxz
out
xchg
sub
pop
mov
ljmp
shlb
lea
pushf
fisubs
xchg
roll
inc
cmp
push
mov
ja
or
data16
dec
xor
inc
and
push
adc
adc
push
add
cmp
pop
ds
adc
and
inc
mov
sub
add
test
xchg
pop
dec
mov
cmp
jp
pop
and
in
or
dec
aas
sub
popf
xor
icebp
xlat
xor
dec
mov
mov
sahf
mov
xchg
sarb
xchg
stos
sub
in
add
into
or
punpckldq
ljmp
std
sbb
icebp
stos
inc
popa
out
jle
inc
js
cmp
xchg
jb
or
cmp
pop
and
adc
es
into
dec
xchg
xchg
pop
mov
sub
int
jo
push
orb
or
in
stos
dec
dec
and
sahf
jp
cmp
cmc
mov
mov
cli
jb
cld
mov
mov
push
push
add
pop
and
test
out
adc
imul
sbb
stc
adc
outsb
out
xlat
xor
add
loopne
mov
push
orw
insb
jnp
dec
mov
jmp
sbb
fdivr
ljmp
cmp
push
or
xchg
or
sub
sub
lds
xchg
add
lcall
addl
mov
cmc
inc
lock
dec
mov
xor
js
dec
push
xchg
les
jae
or
push
jo
dec
cmp
sahf
push
rcl
fmulp
inc
fisubrl
orb
xor
mov
fcompl
cmp
arpl
mov
movsb
sbb
push
add
lods
ret
jb
xchg
cs
fdivs
jmp
mov
lahf
sbb
push
in
bound
dec
jle
sahf
push
sub
push
or
sub
lods
outsb
sub
push
int
popa
xor
fstpt
push
adc
cmpsl
add
aam
jge
mov
notb
mov
mov
ret
imul
cmpsb
call
sub
inc
sbb
subl
clc
es
lret
addl
andnps
lds
and
cmpsl
jg
jns
mov
mov
scas
testb
sahf
adcl
or
pop
push
stos
movsb
hlt
inc
dec
mov
inc
adcl
xchg
xor
or
cmpsl
mul
adc
add
push
out
and
cltd
sbb
xchg
bound
push
insb
in
xor
inc
ret
shrl
or
lock
jg
rolb
dec
pop
or
sti
adc
pusha
add
loopne
fsubrl
push
loope
mov
cwtl
mov
cmpsb
cmp
and
rolb
cmpsl
in
sarl
adc
popa
mov
push
je
call
mov
and
hlt
xor
jl
andl
cwtl
imul
lods
test
jo
inc
test
dec
loopne
clc
ficoml
bound
pop
lahf
movsl
cmp
xchg
sub
fwait
les
fwait
test
xchg
inc
pop
std
repz
jmp
mov
gs
ds
push
out
mov
push
pop
scas
loop
adc
rclb
clc
inc
cltd
adc
popf
jmp
adc
xchg
mov
arpl
enter
jge
arpl
xchg
mov
lret
es
and
shl
sub
test
loopne
cmp
and
push
sahf
into
and
in
and
adc
loope
sub
ds
dec
cmp
loopne
scas
js
mov
lahf
mov
adc
clc
xchg
test
adc
stos
loopne
cmp
jle,pt
sbb
adc
inc
dec
sbb
in
sbb
and
or
mov
inc
icebp
and
mov
cmp
mov
add
dec
sub
pop
std
cmp
pop
jecxz
rcrl
call
jge
clc
cmc
or
loopne
movsl
ss
push
and
mov
stos
and
cmpsb
popa
mov
mov
mov
mov
in
inc
sub
cld
fldenv
xor
mov
repnz
cs
aam
inc
fabs
sub
adc
add
aaa
mov
ja
nop
aam
xchg
cmp
iret
mov
ret
jg
push
xor
shlb
pop
inc
mov
jns
add
or
xor
dec
cmpsl
cs
cmp
popa
xor
adc
cwtl
inc
xchg
mov
adc
ss
adc
push
adc
data16
std
shrl
xchg
mov
jb
sub
xchg
test
fcomi
out
pop
push
subl
push
xchg
inc
ljmp
and
inc
mov
scas
notb
fnsave
test
and
jno
je
mov
iret
decb
mov
repz
gs
ret
popa
and
sbb
fisubrs
addr16
data16
faddl
fsubl
inc
push
test
rolb
add
cmp
inc
mov
mov
fistps
clc
lods
mov
std
xorb
sahf
adc
pushf
xchg
ret
mov
fsubl
fdivl
and
mov
sarb
lret
sbb
in
jbe
mov
out
test
fwait
jg
idivb
add
cmc
rsqrtps
ret
outsb
xor
mov
sub
mov
enter
inc
repz
fs
pop
lea
jg
inc
jmp
and
fimuls
testb
sti
sub
mov
rorl
fisttpl
add
js
aad
cmp
pop
incl
adc
push
mov
lods
dec
cmpsl
pop
cmpsb
hlt
iret
fists
xlat
push
fiaddl
aaa
enter
lock
xor
xor
mov
xchg
jge
es
add
aas
decb
cwtl
and
adc
mov
push
cwtl
cwtl
dec
xchg
inc
lahf
push
in
mov
mov
lea
adcl
mov
sbb
adc
adc
mov
rcll
jle
pop
out
xchg
sbb
and
ror
mov
pushaw
movsl
pop
cwtl
cld
data16
movsb
jne
adc
imulb
outsl
jo
insb
test
jb
push
jg
mov
movsl
push
iret
lods
xor
loopne
sbbb
incl
clc
aad
cmpsl
pop
jge
mov
inc
dec
xlat
push
fadds
ss
sbb
xchg
cmpsl
jle
adc
hlt
pop
in
cmp
jo
mov
clc
das
lds
mov
sbb
xor
mov
mov
inc
add
ja
fidivrl
and
hlt
push
mov
push
adc
shrl
and
inc
mov
addl
pop
inc
rorb
mov
inc
loop
les
sub
ret
cmpsl
or
repnz
sbb
mov
mov
repz
inc
pop
sbb
std
mov
dec
clc
add
add
jb
and
mov
cmpsl
or
add
mov
out
add
in
or
xchg
xchg
cli
xchg
xor
mov
pop
test
test
pop
loopne
iret
in
int
sbb
xchg
cs
ljmp
push
mov
sub
sbb
jbe
mov
push
inc
push
repnz
dec
clc
inc
mov
call
sti
test
les
gs
jns
xchg
xchg
push
roll
push
addl
and
aad
cwtl
andb
and
mov
xor
and
or
sub
mov
or
adcl
mov
pop
sub
insb
or
sub
cmp
aaa
mov
jg
aas
andl
lea
pop
push
mov
mov
lcall
inc
mov
cmpsl
int3
mov
hlt
inc
sub
rolb
adc
loop
sbbl
sub
lcall
scas
xor
jns
add
loopne
add
mov
cmp
loopne
imul
or
sti
les
sub
mov
mov
inc
popa
mov
pusha
push
mov
dec
sbb
or
or
and
xor
adc
add
mov
lcall
hlt
pop
sbb
xchg
popa
test
test
dec
cld
fs
jo
cmpsl
test
fwait
or
push
movsb
sbb
je
outsb
aaa
adc
and
xchg
adcb
xor
jbe
lds
jo
adc
sbb
mov
mov
pop
imul
arpl
sub
pop
fldcw
add
clc
xchg
or
insb
adc
cmp
fs
aaa
or
insl
scas
sahf
mov
mov
pop
add
or
sub
cmpsb
jo
inc
pop
das
fsubr
sbb
push
dec
scas
gs
mov
fiaddl
and
push
in
jnp
push
ljmp
jno
sbb
inc
fadds
jp
stc
loope
call
fnstsw
push
rcl
nop
int3
out
pop
mov
mov
add
nop
fimuls
and
jo
daa
rolb
es
std
popf
or
and
push
adc
in
mov
or
mov
sub
loop
push
adc
xorl
and
xchg
subb
xchg
rolb
inc
mov
xchg
push
std
or
adc
mov
sbb
push
mov
call
sub
mov
pushfw
out
cmp
lahf
or
scas
or
mov
dec
mov
push
cmp
call
sbb
sub
icebp
popl
loop
fcomps
outsb
xchg
mov
imul
iret
mov
mov
dec
and
aad
das
fldenv
pop
dec
mov
lea
lcall
adc
cwtl
inc
lret
js
push
xchg
sbb
jp
dec
add
insl
mov
lcall
gs
jo
sub
push
xor
pop
shrb
or
xor
sub
fs
mov
or
or
movsl
inc
cmp
loop
fs
aam
pop
adc
adc
sbb
push
add
scas
mov
sub
inc
xlat
xchg
dec
xor
push
and
xor
aam
add
std
push
and
fst
sub
iret
lds
mov
mov
out
scas
mov
pop
ss
pop
call
clc
sbb
push
or
mov
sbb
aas
jmp
ljmp
sbb
lret
loopne
cwtl
xchg
je
push
jno
sbb
mov
jp
cmp
inc
enter
inc
aad
roll
sbb
daa
xor
ds
daa
add
cmp
and
and
adc
sub
adc
mov
and
mov
mov
and
adc
aas
bound
ret
sahf
mov
icebp
mov
orb
aam
shlb
add
hlt
outsl
fcompl
mov
aad
iret
js
les
lcall
pop
xchg
jno
mov
sub
push
mov
inc
jb
jno
push
xor
sbb
or
push
sub
xchg
push
cld
pushl
cmp
mov
in
xor
adc
loope
sbb
sahf
ret
and
push
into
enter
inc
push
ret
inc
icebp
cmp
mov
xchg
and
mov
mov
test
gs
jo
xor
mov
inc
xor
xchg
aam
je
in
dec
dec
insb
fcomip
pop
mov
data16
xor
arpl
aad
enter
cli
pop
les
jle
adc
test
in
fidivs
or
inc
adc
add
adc
and
psubsw
fcmovnb
xor
ret
xlat
pop
aaa
and
xchg
mov
mulb
movlps
ljmp
aam
jns
outsb
and
pop
fcomip
or
inc
pop
adc
mov
push
and
push
outsb
addl
mov
adcl
adc
aad
adc
jno
popa
mov
out
call
icebp
jnp
lret
sub
sbb
mov
loope
fstpl
fsubr
mov
insb
pop
dec
xor
xchg
pushf
jle
and
xchg
mov
scas
cmp
mov
addr16
movsl
loop
push
lea
idivl
mov
mov
sbb
shll
xchg
jge
sub
cmp
es
lock
loopne
clc
cwtl
fistps
insl
adc
rolb
aad
pop
or
stc
sub
jne
adc
gs
fmulp
jecxz
jns
xor
int
out
iret
sub
xchg
in
icebp
jg
push
and
lock
adc
lret
cmp
push
mov
sub
rcrb
inc
and
push
mov
sub
mov
cmp
cli
cs
lock
add
adc
mov
imul
add
icebp
pushl
or
mov
xor
scas
imul
inc
or
out
lea
je
mov
ret
mov
cmp
scas
jge
leave
jmp
add
out
call
mov
lds
xchg
push
pop
lock
repnz
shr
cmp
sub
jl
mov
roll
int
shll
loopne
inc
mov
aas
mov
enter
pop
mov
mov
adc
inc
mulb
inc
rcll
aam
ret
out
dec
mov
and
test
fucom
insb
leave
sub
lahf
cmp
bound
lock
hlt
xor
sarl
push
pop
aaa
cli
dec
inc
jg
fs
xchg
lods
adc
push
jb
cli
aam
fiadds
and
jle
aaa
cltd
mov
fs
fwait
outsb
sub
pop
mov
pop
jo
add
rolb
sahf
lea
push
and
bound
sbb
fs
pop
add
popa
sub
jl
sbb
jns
out
je
mov
mov
inc
add
xor
add
cmpsb
repz
inc
andb
mov
cld
and
jmp
mov
mov
or
aam
cmovb
lea
xchg
pop
xchg
cmp
das
adc
out
inc
and
xlat
xchg
cli
ljmp
or
cld
fiaddl
sbb
jmp
stc
insb
adc
cld
das
ss
inc
cli
mov
clc
sbb
sar
aas
pop
std
mov
fcomp
or
notl
mov
in
pop
cwtl
adcb
mov
xchg
bound
xchg
sub
push
cwtl
jecxz
xor
sahf
inc
stos
icebp
add
cli
xor
fst
jle
mov
add
mov
stc
cli
call
mov
mov
mov
push
sub
mov
movsb
inc
inc
mov
subb
fnsetpm(287
fs
fsubrs
cmpb
cmpb
dec
orl
push
xor
lock
outsb
and
roll
lcall
fcmovu
lock
mov
dec
inc
js
jmp
je
cmp
rolb
test
sub
inc
mov
push
arpl
dec
movsl
push
push
in
push
or
sub
sbb
lds
lock
mov
mov
es
pusha
xor
cmp
adc
xor
mov
imul
sbb
mov
stos
add
in
fistps
sub
mov
les
lds
pop
orl
dec
lock
into
pop
loop
sbb
jne
dec
adc
icebp
cmp
test
shrb
sarl
push
pop
push
or
int3
lods
stos
scas
aam
rcr
std
xor
push
push
into
lahf
test
xchg
mov
pop
push
inc
iret
movl
push
cmp
jo
and
bnd
loope
hlt
ret
pop
test
pop
loop
jnp
lds
jb
sub
mov
arpl
mov
notb
mov
inc
out
push
imul
mov
mov
arpl
stos
push
loopne
add
les
call
sbb
sbb
xchg
mov
jp
fcoms
mov
enter
jne
shl
les
and
mov
mov
outsl
in
es
push
pop
lock
pop
xor
mov
loope
loope
mov
in
adc
cltd
adc
push
leave
xor
lds
xchg
stos
mov
xor
xlat
imul
inc
test
adc
mov
cli
mov
sub
sub
dec
fadds
scas
loope
jg
cmp
pop
pushf
and
pop
daa
scas
push
outsb
repnz
lock
sbb
jb,pn
push
mov
sub
sbb
add
xchg
daa
jbe
jp
and
outsb
jg
jecxz
and
int
xor
mov
sarl
xchg
mov
adc
xchg
dec
fwait
push
sbb
shlb
pop
cmp
cmp
and
cmp
pop
jo
lds
push
mov
dec
push
dec
inc
sub
xchg
inc
inc
dec
das
js
cmpsb
div
clc
xchg
jecxz
dec
shlb
hlt
nop
jge
and
insl
lods
mov
ja
push
push
adc
lods
jl
jno
dec
pop
lock
mulb
sub
popa
ret
pop
mov
cmpsb
cmc
cmp
ja
sbb
mov
mov
dec
sub
shll
mov
incb
cs
fmuls
js
hlt
mov
pop
decl
pop
cs
pop
sbb
cld
loope
hlt
addl
mov
add
jb
fimuls
sub
je
push
and
mov
ret
sub
insb
push
dec
mov
aad
fsubrs
cli
mov
pop
cmp
pop
andl
inc
cmp
sarl
mov
je
add
inc
jno
mov
push
mov
jmp
pop
jbe
xor
xor
lock
ss
adcb
movb
push
cmpsl
push
add
aaa
stos
aam
cmpsl
cmpsl
in
lods
dec
adc
pop
scas
sbb
xor
dec
cwtl
or
jge
lock
cli
addb
sub
mov
into
jae
xchg
ret
test
lock
sbb
dec
push
jne
push
test
jcxz
insb
rolb
sbb
cmp
test
aas
orb
mov
mov
mov
sbb
mov
add
std
test
cmpsb
inc
nop
je
gs
xor
test
pop
sub
bound
rcll
fwait
pop
xchg
lods
dec
mov
sub
mov
mov
cmp
test
divb
pop
lock
les
jecxz
js
cmc
mul
sar
pop
pop
add
ss
or
movsb
push
dec
cmp
add
out
add
pusha
pop
js
aad
pop
inc
int
mov
adc
aas
inc
xchg
mov
scas
aas
call
add
mov
lcall
xchg
bound
fadds
mov
inc
and
add
std
lahf
das
sahf
enter
nop
adc
xor
xchg
cli
push
dec
pusha
ss
je
cmp
cmp
sub
push
movsl
jno
outsb
nop
mov
data16
and
cmpsb
loopne
adc
ljmp
mov
vmread
sub
or
pop
mov
pop
cmc
aaa
outsb
cld
add
bound
jg
sub
mov
sub
daa
std
add
xchg
aaa
or
les
fdivr
fwait
pop
push
cmc
int3
and
lcall
sbb
sub
sbb
add
or
ljmp
cmc
or
popa
fisttpl
or
inc
fstps
sbb
pop
dec
rcrb
xchg
pop
sub
jl
call
leave
mov
sub
add
pushf
ret
add
je
xorl
sahf
mov
push
movsl
movsb
mov
addl
push
fistps
pop
sbb
add
xchg
loope
jne
dec
rolb
and
int3
int
rorl
lahf
je
dec
xchg
sbb
mov
repnz
cmpsl
sbb
sbb
inc
int
outsl
push
cwtl
enter
add
fld
cmpsl
add
icebp
sub
or
push
outsl
js
out
xor
shll
into
roll
dec
aam
sti
adc
and
sub
or
hlt
xchg
icebp
pop
jg
jmp
pop
adc
fxch
popa
mov
ret
xor
push
xorb
out
inc
jg
or
repnz
add
mov
js
mov
cmp
sub
push
xor
and
outsb
out
mov
shll
lds
push
outsb
jle
push
aas
jae
pop
push
push
pop
nop
mov
sub
cmp
xchg
push
jg
inc
clc
pop
sbb
aam
pop
xorb
outsb
inc
scas
cltd
or
sub
pop
adc
xchg
pop
xchg
sub
add
movsb
rolb
icebp
add
pop
sub
ret
cmpsl
stc
jno
mov
call
mov
mov
add
mov
shrl
xchg
in
bound
inc
inc
mov
fcomps
dec
cmp
or
mov
rol
push
xchg
cmpsl
or
repnz
stos
ja
addr16
movsb
pop
mov
pushf
sbb
jns
outsb
cmc
push
pop
mov
cmp
sbbb
pop
push
subb
lret
add
xor
inc
and
ja
loop
mov
clc
adcb
lret
pop
je
std
pop
mov
das
sbb
xchg
add
xchg
xor
clc
pushf
sub
je
mov
lret
hlt
inc
sub
cmc
xchg
cwtl
mov
mov
push
ljmp
pop
gs
jl
loopne
popf
loopne
ss
aam
inc
scas
jne
fsubl
push
push
cmp
dec
enter
or
inc
iret
and
jge,pn
pop
stos
ss
sbb
and
mov
scas
fmuls
mov
xchg
jle
sub
inc
jo
ret
mov
dec
jle
and
incl
jl
jl
sbb
xchg
sbb
or
xlat
std
lcall
jl
dec
mov
sbb
mov
pushf
testl
in
push
inc
mov
cltd
xchg
add
and
mov
lods
test
pop
andb
andb
dec
jne
sahf
sub
and
rol
mov
mov
pop
inc
ror
notl
rorl
inc
nop
sub
nop
es
hlt
push
cltd
hlt
xlat
fbstp
pusha
addr16
sub
iret
int3
imulb
int3
jle
lret
adc
cmp
pop
xor
lea
cmp
xchg
cmp
out
movsb
jb
dec
int
add
negb
sub
enter
sbb
and
mov
add
ret
push
sahf
and
sub
xor
push
push
rcll
sbb
test
jg
mov
fnstsw
sub
dec
push
in
sbb
lods
mov
sbb
lds
and
leave
test
popl
rorb
arpl
adc
ljmp
test
inc
xchg
jo
divl
aam
scas
hlt
dec
jb
push
repz
inc
pushf
mov
add
xor
imul
cld
call
das
psllw
and
or
aas
cli
or
mov
mov
loope
subb
pop
fisttpll
stos
mov
aam
pop
mov
pop
inc
add
pop
jno
cmp
sbb
clc
xlat
pop
in
ret
and
sub
pop
push
call
test
js
jno
inc
mov
and
xchg
in
adc
mov
inc
lcall
lock
inc
pop
cmpsb
pushf
jp
push
rol
test
bound
push
and
ljmp
xlat
lret
call
out
pushf
or
xchg
jo
push
cmp
xor
imul
and
mov
pop
lret
ljmp
sarl
in
not
add
and
lret
push
push
cmpsb
sbb
lods
sub
fidivs
push
icebp
push
mov
cli
out
lea
and
mov
js
add
mov
inc
sub
ficompl
or
inc
pop
stos
ret
out
mov
dec
nop
loop
cld
jg
repz
jo
add
xchg
pop
adc
xor
sbbl
call
or
idivl
inc
std
jp
adc
popa
push
stos
add
loop
mov
push
sbbl
and
mov
rclb
lcall
sbb
dec
pop
mov
add
pop
jb
jl
les
and
aad
loop
jno
xchg
and
pop
mov
cmp
push
outsb
add
stc
divb
imul
and
add
jo
xor
cmp
out
mov
lock
dec
sbb
icebp
push
aaa
add
add
js
adc
movd
test
outsb
loop
mov
je
pop
aaa
mov
adc
std
push
stos
mov
call
sti
scas
leave
cmp
lret
decl
xchg
cs
mov
sbb
add
loop
rcrb
pop
icebp
mov
jns
push
out
mov
cld
mov
lcall
js
sbb
shrb
pop
mov
ret
arpl
rcll
push
rorb
int3
js
mov
pop
sub
pop
inc
mov
ret
lock
rorl
and
inc
or
inc
dec
pop
fwait
mov
dec
sbb
mov
cmp
pop
jmp
mov
jp
sub
sbb
jle
inc
dec
lahf
rol
push
add
jmp
in
xchg
inc
push
push
adc
pop
ror
rorb
pop
add
mov
inc
cli
out
add
mov
cmpsb
outsb
sbb
js
test
jns
add
test
pushf
cltd
lahf
out
data16
rcr
lods
jmp
and
call
and
jle
shll
mov
mov
mov
scas
lds
ret
iret
stos
addps
aam
jne
and
cld
pop
js
cmc
inc
test
ljmp
subb
lock
movsb
inc
mov
repnz
add
or
fimull
push
xor
push
mov
push
jb
call
mov
adc
shll
pop
cmp
fimull
loope
push
gs
jne
cld
sbb
sub
ljmp
push
inc
mov
push
dec
aam
cld
adcb
cmc
movsb
in
ja
mov
mov
subb
lds
pop
filds
in
data16
mov
jg
cmpsl
inc
dec
adc
adc
lcall
sub
mov
ds
outsl
xor
jb
icebp
cmp
out
lods
loop
push
jb
cmp
sub
sbb
mov
xor
sub
fwait
scas
out
mov
dec
mov
jbe
pop
mov
shrb
add
cwtl
movsb
insb
pop
xchg
cmc
test
mov
ret
xlat
cmpsb
sub
dec
repnz
mov
pop
jo
jl
and
cmp
pop
mov
pop
repnz
inc
call
filds
or
into
pop
or
fisttps
mov
cmc
movsl
pusha
mov
scas
xchg
sub
mov
push
stos
xor
pop
mov
out
gs
pop
xchg
push
jo
fs
stos
cmp
push
leave
in
mov
add
pushf
sub
jp
jmp
add
fprem
push
push
or
mov
sarl
adc
je
or
adc
lret
xchg
pop
push
insl
add
mov
fsubs
rcll
jle
push
rolb
popa
ljmp
adc
sub
inc
xchg
in
push
inc
mov
loope
repnz
add
rcr
push
inc
mov
cmp
adc
dec
mov
mov
ljmp
stc
into
add
icebp
push
and
fstps
push
leave
add
aam
and
lods
out
scas
cli
inc
dec
sbb
add
sbb
out
sub
pop
je
lock
mov
lea
mov
orb
add
dec
enter
test
fldcw
add
mov
fistpl
xchg
or
aaa
xor
movsl
mov
js
repz
cmp
js
repz
rorb
and
or
lret
ret
fcoms
dec
add
loop
imul
mov
mov
dec
inc
in
aad
test
sbb
push
mov
fs
arpl
pop
int
rcrb
jae
fs
test
gs
xchg
mov
pop
es
stc
popa
loopne
sbb
and
add
jo
movsb
lds
pop
add
fisttps
or
push
xchg
andb
jno
lds
or
add
xlat
pop
gs
arpl
fs
mov
in
push
mov
xor
push
test
or
scas
cmc
or
xor
jmp
sub
inc
movsbl
push
add
mov
xor
fdivrs
inc
mov
ljmp
lods
or
ds
hlt
ret
xchg
pop
test
sbb
lcall
cmpsl
inc
xchg
in
bound
imul
sub
xlat
mov
jl
sahf
cld
adc
and
arpl
cmp
mov
clc
clc
jl
sti
dec
push
cmpsl
adc
loope
lahf
les
std
inc
imul
cld
jle
and
xor
cmp
mov
adc
sub
xchg
and
xor
inc
xor
push
sub
das
or
xchg
jg
add
insl
xchg
stos
sbb
test
jbe
lcall
test
push
sti
loopne
push
mov
xchg
inc
mov
push
sub
pushf
outsb
jge
mov
pop
inc
shr
loope
cmp
jge
mov
xchg
push
mov
clc
fidivs
hlt
fisubs
mov
xchg
jp
movsb
mov
in
xchg
clc
sbb
pop
mov
ljmp
aad
inc
push
add
div
fcomp
rorb
sahf
add
dec
outsl
mov
pushf
test
mov
adc
push
and
iret
sbb
mov
mov
mov
test
loope
xor
fisubl
xor
scas
cmp
push
xchg
cli
sub
fisttps
sub
cs
lock
mov
jmp
push
rclb
out
rorb
jp
adc
out
push
roll
fldcw
pop
sub
lea
movsl
inc
pop
add
push
pop
popa
fstps
adc
and
jp
add
cmp
fsts
inc
mov
mov
gs
fs
xchg
scas
mov
lcall
cmp
adc
xchg
xor
sbb
mov
sub
mov
and
push
je
roll
mov
pushf
mov
les
and
inc
mov
stos
push
cmp
sbb
push
mov
push
pop
movsl
bound
push
lock
pop
mov
hlt
cmp
test
repz
daa
mov
ljmp
push
sti
add
and
sti
jbe
les
insb
imul
ja
pop
cmp
pop
mov
mov
xchg
fisubs
xchg
test
dec
pop
andl
in
dec
sbb
repz
push
and
scas
ret
stc
cmp
pop
sub
mov
and
rolb
ds
push
insb
rcl
xchg
add
sub
dec
inc
leave
in
and
ja
push
mov
add
sub
push
add
loopne
lock
out
and
mov
jle
scas
stos
push
rcrb
out
sbb
bound
stos
mov
decb
xchg
adc
dec
dec
or
sbb
inc
enter
stos
xchg
cltd
dec
cld
and
subb
pop
mov
cld
inc
imul
dec
les
push
ds
ljmp
mov
sub
rclb
jle
mov
mov
add
mov
adc
and
push
pop
mov
cs
int3
nop
xchg
ret
and
lds
mov
xchg
clc
mov
push
and
inc
inc
jo
movsb
fsubs
lods
jge
hlt
insb
ficoml
and
out
testb
or
push
or
or
dec
push
out
xchg
jp
ret
test
fsubrs
mov
dec
pop
lods
push
pop
xchg
push
fsubp
imul
enter
cmc
mov
pop
sbb
mov
mov
inc
xchg
fisubs
ret
pop
push
das
dec
pop
push
shlb
hlt
aad
pop
xchg
push
lock
mov
inc
or
inc
or
dec
sub
sub
sbbl
ljmp
jmp
out
in
cmp
pusha
xor
lock
mov
push
lock
lods
sbb
adc
or
in
adc
mov
inc
ss
mov
out
scas
stos
jp
ds
dec
push
aas
push
sbb
repnz
and
mov
jl
or
adc
imulb
ljmp
sub
xchg
rol
pop
insb
je
aam
dec
ficoml
adc
bound
mov
dec
xor
and
flds
mov
cmp
lock
push
iret
pop
and
sbb
mov
xchg
fisubs
mov
adc
cmpsb
loopne
xchg
ds
sbb
add
into
rcll
mov
out
fisubrs
push
cmp
and
and
mov
dec
xchg
mov
add
fistl
xchg
push
fyl2x
jnp
or
jmp
scas
lahf
push
lock
std
push
jne
mov
out
test
sbbl
test
or
leave
inc
shlb
mov
ret
xchg
cltd
pop
in
mov
lea
testl
add
xchg
rcll
les
pop
xchg
cs
icebp
xchg
mov
adc
jbe
fsubrs
cmp
dec
flds
fisubrl
xchg
mov
and
shrb
rcrl
inc
les
test
arpl
cld
lret
in
cmpsb
mov
out
mov
push
arpl
mov
lcall
test
jge
jb
lret
clc
jmp
scas
mov
ret
adc
les
test
fildl
push
movsl
xchg
mov
xor
gs
test
enter
repnz
test
push
or
mov
jp
enter
rcrb
imul
inc
push
lahf
pop
or
xchg
inc
mov
sbb
or
mov
xchg
cwtl
cli
imull
inc
mov
push
pmullw
sahf
dec
push
outsb
cs
mov
jl
sub
insl
add
loope
mov
call
push
lods
ficomps
hlt
push
ucomiss
hlt
adc
xchg
pop
and
movsl
ficoml
push
or
js
fdiv
dec
xor
dec
mov
adc
je
ss
orl
mov
popf
jl
hlt
fldenv
inc
add
and
jmp
jge
xchg
mov
bound
jbe
adc
mov
ret
or
fcomps
addr16
lods
add
inc
push
push
fbstp
notb
mov
sbb
aam
xor
lds
and
adc
cmp
jecxz
test
mov
mov
lret
pop
or
lahf
cli
insb
add
pop
shll
xor
jb
mov
into
mov
int3
xor
imull
fsubrl
pop
xchg
add
jl
dec
das
fsubr
fidivs
js
hlt
bound
sub
adc
and
sbb
das
pop
dec
pop
and
repz
inc
sbb
push
xor
mov
and
gs
fwait
and
adc
sbb
test
int
lahf
xlat
add
xchg
shr
sar
fwait
clc
push
and
btc
cmpsb
pop
mov
inc
test
cwtl
inc
jo
gs
xorl
sahf
rclb
les
xchg
dec
mov
add
aas
rorb
in
mov
imul
jle
mov
add
mov
lock
test
aas
outsb
push
mov
mov
and
ror
nop
adc
lahf
in
sub
sub
in
pop
ret
inc
stos
mov
dec
test
sub
out
scas
daa
insb
add
push
sbbl
faddl
push
pop
and
sbb
imul
xchg
sbb
pop
xor
aas
adc
mov
into
xor
jl
out
dec
sti
call
jns
or
jbe
push
js
rol
jb
call
push
leave
or
adc
out
orb
pop
sub
push
inc
int3
or
push
adcb
popa
jle
jns
lcall
adc
mov
in
and
rorb
ljmp
ret
fcoms
mov
les
sub
hlt
scas
scas
mov
add
mov
insl
mov
sbbb
push
fs
fbld
in
rcrb
lods
movsb
les
xchg
stc
add
jp
jl
sub
cli
loope
nop
idivl
or
bound
pandn
sbb
in
pusha
cmp
ret
xchg
mov
mov
push
je
jl
mov
cwtl
pop
dec
cmp
ror
add
pusha
jno
mov
loopne
dec
add
mov
xchg
shlb
popa
sbbl
cs
cwtl
xchg
pop
mov
cmpb
mov
push
sbb
mov
push
dec
push
je
mov
xchg
outsb
dec
ja
push
je
out
adc
outsb
jg
fimuls
lock
loopne
sbb
cwtl
aam
sahf
or
cld
add
cmp
les
jecxz
loope
add
xor
sbb
orl
in
addb
add
xchg
ljmp
ret
dec
lcall
ja
push
cmp
clc
test
jge
cmp
xchg
jge
jb
push
jbe
mov
call
mov
mov
adc
sbb
ss
push
js
aas
xor
lock
out
testl
std
loop
lahf
dec
out
or
push
cwtl
jb
pop
and
push
jl
loopne
and
or
rcr
inc
enter
adc
iret
push
and
mov
cli
decb
test
jg
mov
stos
push
rolb
cld
push
mov
loopne
push
ret
hlt
sti
add
call
repnz
push
inc
or
mov
movsb
inc
sub
scas
sbb
add
sub
push
bswap
push
add
into
add
test
icebp
je
ror
outsb
jp
xchg
xor
push
cld
pop
cmp
insb
mov
hlt
in
mov
daa
fstl
mov
jnp
clc
sub
sub
dec
cmp
jae
in
les
bound
cmp
push
das
jo
and
data16
lret
add
dec
mov
das
jle
xor
cmp
lret
popf
or
mov
jp
mov
inc
jl
cmp
add
jno
mov
mov
in
xor
sbb
imul
mov
lea
es
test
xchg
insb
push
insb
cli
add
shlb
lods
stc
fnstenv
push
mov
pop
sar
popf
insl
mov
arpl
cmp
loope
mov
les
clc
add
cmp
xlat
fists
cmp
jmp
jbe
cld
clc
fidivrl
fidivrl
and
push
scas
test
data16
popa
jbe
pop
ffree
aad
sahf
lods
mov
cli
mov
je
inc
test
dec
xchg
rol
movsl
or
inc
mov
arpl
mov
notb
xor
push
and
aaa
data16
mov
fdivp
dec
mov
test
sbb
ficompl
mull
je
sbb
cmp
fiadds
xor
sarl
or
leave
push
inc
mov
mov
xchg
mov
pop
mov
gs
push
aas
pop
and
dec
insb
inc
cltd
sub
mov
xchg
mov
mul
pushf
xor
clc
adc
adc
mov
sbb
sub
xchg
outsl
or
mov
sarl
rcrb
sarl
inc
mov
add
fists
sbb
fs
rcr
sub
iret
mov
cmpsl
shll
adc
das
push
mov
pop
fidivl
ja
jns
addb
mov
fs
shrl
aam
sbb
dec
sub
lret
mov
fsubs
sbbb
out
lods
pop
inc
ss
push
imul
dec
mov
dec
xor
into
xchg
cmp
push
dec
aas
or
out
daa
pop
cmp
daa
mov
out
push
xchg
lcall
mov
ret
push
data16
sbb
js
sbb
sbb
adc
leave
lahf
daa
ss
loopne
pop
inc
inc
in
or
mov
in
iret
sub
adc
cmpsb
cmpsl
sbb
sbb
scas
fadds
mov
repz
fadds
in
fcmovb
lret
adc
lcall
pop
imul
shll
fidivs
mov
dec
pop
mov
xchg
jbe
mov
push
mov
es
inc
cld
push
adc
pop
mov
mov
cmp
pushf
mov
test
inc
sahf
or
addr16
incb
or
or
add
lock
mov
inc
fcos
push
mov
adc
lea
icebp
rcrl
shlb
leave
mov
jp
and
dec
insb
inc
insl
inc
cmp
imul
mov
jb
xchg
imul
adc
inc
mov
fs
aaa
push
pop
fs
shrb
mov
roll
nop
xchg
add
cwtl
das
jo
je
cs
leave
dec
pop
pop
sub
mov
les
xchg
push
test
add
addr16
fwait
test
xchg
or
out
rorb
shrl
das
das
in
rcrb
cmp
mov
movsb
iret
mov
iret
aaa
loopne
cmpsb
sbb
fs
inc
adc
inc
std
mov
mov
adc
sub
cmp
loop
jmp
push
loop
or
jg
mov
xor
stos
pop
push
js
sub
push
fidivl
fisttpl
pop
mov
rcr
mov
ds
and
imul
stos
mov
inc
and
dec
scas
fdiv
inc
test
fcmovne
sub
std
push
jno
int3
ljmp
sbb
cmc
sbb
cmp
sarl
insb
hlt
mov
and
jmp
aam
insb
ds
out
subl
ret
push
loop
adc
pop
test
cwtl
mov
xchg
movsb
push
iret
out
ds
cmp
mov
les
adc
fbstp
and
add
and
dec
cmp
scas
sub
int
jecxz
inc
movb
pop
rclb
and
mov
add
dec
inc
jo
xor
gs
faddl
lds
and
aas
mov
and
sub
xchg
out
adc
sub
pop
cli
inc
mov
stos
adc
mov
inc
sbb
rcrb
xchg
sub
sbb
js
xchg
fiaddl
push
enter
push
push
cmpsl
mov
hlt
cmp
js
adc
sub
mov
ret
xchg
cmp
push
fdivr
aas
sbb
out
pop
lock
loopne
mov
or
clc
loop
adc
sbb
add
mov
inc
sti
sbb
cmp
adc
push
orb
rcrl
mov
and
xor
in
ljmp
je
pop
mov
mov
mov
adc
cmp
xchg
adcb
jne
xor
fcomps
test
rcl
or
aad
daa
fimull
jecxz
inc
hlt
adc
dec
push
mov
mov
jl
sahf
arpl
sbb
push
imul
add
xor
aas
test
mov
enter
push
aas
test
xchg
mov
jb
adc
test
jecxz
and
cmp
cmpsl
add
shll
mov
in
xor
sbb
and
fwait
loop
mov
push
add
psubsb
fdiv
or
in
push
movl
sub
ret
pop
mov
and
and
out
cs
push
fsubp
out
sub
inc
mov
dec
int3
aad
push
mov
stc
test
les
inc
add
xor
cmp
jle
push
xor
shrb
pop
xchg
jne
mov
adc
adc
lret
cmp
es
test
sbb
xor
xchg
or
dec
sbb
mul
fsubrs
dec
aad
pop
stos
add
sbb
shlb
sub
cld
push
fisubrl
cs
xlat
rcr
lods
out
fwait
push
push
push
fs
mov
mov
add
add
sub
mov
xor
jns
adc
dec
or
or
movsl
and
mov
sbb
sbb
dec
pusha
push
arpl
push
ds
sub
lahf
movsb
out
pop
xchg
and
outsl
stc
adc
cmp
and
arpl
ficoms
sbb
add
ffree
dec
add
into
mov
jmp
sub
popa
stos
fwait
shl
in
fwait
lret
and
xchg
inc
xor
xlat
daa
push
es
in
not
jge
arpl
cmpsl
testb
ljmp
xchg
cmc
ficompl
arpl
add
sub
es
mov
mov
xchg
push
dec
push
dec
fiaddl
inc
pop
int3
and
cmp
inc
clc
or
sub
mov
xchg
shlb
pop
stc
sub
cmpsl
and
pop
in
add
mov
enter
or
data16
pop
push
in
lods
out
adc
sti
mov
mov
push
xlat
popa
dec
cmp
icebp
scas
jmp
cmp
sub
adc
cmp
jmp
insl
or
push
xor
dec
add
cmp
sub
xchg
movsb
dec
outsb
adcb
fstpt
sbb
add
jb
stos
std
jmp
xlat
dec
mov
popa
mov
leave
stc
jns
push
insb
inc
jae
fldenv
and
aam
push
mov
dec
push
into
cmp
push
mov
mov
loopne
push
mov
js
fs
mov
ficoms
sub
xor
mov
push
cmpsl
popa
inc
jmp
push
hlt
inc
stc
add
rclb
je
jns
mov
test
mov
inc
add
sbb
mov
pop
in
inc
cmc
adc
jno
mov
push
pop
orl
inc
inc
or
imul
out
push
pop
rolb
xchg
scas
loope
or
sub
push
xchg
cmp
sti
jno
pop
jle
jb
pusha
pop
or
ljmp
adc
ja
push
add
push
pop
sti
jne
pop
and
and
pop
and
sub
ds
cmp
xchg
daa
cmc
je
ret
scas
ret
dec
loope
jne
dec
jecxz
ficoml
xchg
lds
inc
push
cmp
rcrl
cld
inc
in
loop
jg
pusha
lret
add
lods
jno
hlt
addb
rcrb
jae
inc
cmp
dec
xchg
andl
test
and
jns
jmp
ror
stos
leave
xor
adc
test
scas
fldl
test
mov
pop
icebp
mov
dec
repnz
push
jle
xor
lret
xor
mov
scas
and
xlat
ret
out
or
xchg
push
mov
add
xor
sbb
dec
cmpsl
mov
out
andb
cwtl
sub
test
sub
and
cmc
pop
fistps
imul
cmpsb
ret
pushf
mov
scas
imul
xor
mov
int3
jge
cmovs
cmc
imul
ret
jns
push
shrb
stos
push
xchg
mov
cmp
pop
mov
xor
xchg
setge
mov
shll
sbb
xor
mov
jb
dec
or
sarl
xchg
mov
je
mov
or
insb
and
dec
cmp
das
sub
in
mov
fsubrp
xchg
subl
js
lret
dec
arpl
test
dec
cmp
ljmp
mov
fbstp
add
mov
bound
and
rcr
cltd
in
sbb
pop
jp
fiaddl
mov
xchg
add
cli
xchg
imul
sbb
test
push
lret
dec
mov
scas
xchg
popf
inc
xchg
add
xor
xor
cmp
repnz
call
sbbb
je
cmp
clc
enter
dec
movsb
xor
mov
dec
adc
js
es
mov
or
cmp
adc
les
popa
push
inc
dec
mov
jle
push
hlt
call
inc
cmp
rol
daa
xchg
mov
js
popa
enter
lret
aaa
test
jg
fsubrl
mov
loopne
lret
xor
ja
test
push
loopne
stos
jmp
bound
push
inc
pop
cmp
push
jl
xchg
inc
mov
mov
xorl
daa
inc
bound
mov
sub
cmp
loopne,pn
and
sbbl
movsb
and
popa
stos
rorl
lods
test
pop
popl
pop
jle
mov
xchg
sahf
aam
shrl
or
dec
mov
adc
adc
imul
les
leave
lock
xchg
cli
ljmp
fcompl
add
nop
cmp
xchg
ljmp
adc
inc
and
xor
loopne
je
nop
pusha
push
fcomps
decl
push
xor
jge
scas
out
inc
mov
jl
mov
xor
loope
rcll
pop
inc
orl
mov
or
and
mov
adc
mov
dec
lcall
std
mov
imul
adc
es
adc
dec
add
cmpsb
cmc
lahf
sbb
repnz
mov
sbb
sarb
jp
or
mov
pop
mov
xchg
add
pop
int
jmp
xchg
push
jne
xor
add
xchg
xchg
lock
rcrb
inc
mov
shll
lds
push
nop
lcall
fisubl
dec
pop
or
and
sub
bt
inc
sbb
sub
xchg
mov
nop
icebp
inc
js
jns
cmp
add
and
xchg
fnstcw
loop
mov
jo,pt
clc
lods
hlt
mov
hlt
hlt
mov
push
mov
testb
adc
mov
adc
xor
iret
and
ljmp
push
je
add
pop
push
fmull
testb
scas
jle
stos
mov
xor
sbb
sbb
push
and
sarb
data16
pop
push
ffreep
je
ljmp
ds
cwtl
decl
loope
sbb
or
sti
insl
mov
gs
mov
jo
leave
jl
hlt
jmp
test
in
sbb
das
rorl
inc
cmp
sahf
cmc
fadd
mov
xor
adc
nop
aad
mov
into
xor
mov
inc
sub
push
or
aaa
mov
pop
cmp
jg
adc
daa
mov
push
add
mov
inc
jg
test
xchg
rcl
filds
xor
and
xchg
mov
inc
push
ret
ret
dec
xchg
push
sbb
adc
lock
cli
sbb
mov
pop
inc
or
loopne
shr
pop
lods
dec
loop
pop
sub
mov
pop
mov
mov
cmp
lods
call
push
xor
iret
xchg
push
dec
mov
and
mov
icebp
mov
jl
jge
and
mov
sarl
cli
inc
outsb
pop
int3
pushl
inc
jle
loopne
or
xor
sbb
cli
gs
sbb
sbb
pop
shl
mov
in
shlb
fimull
js
test
adcb
fsub
jo
xchg
or
stc
add
push
dec
push
push
aaa
ror
push
xchg
jno
cli
les
fcmove
jae
xor
pop
test
pop
add
mov
ficomps
dec
cmp
bound
cmp
sub
lea
pop
sbb
push
mov
ja
aas
icebp
sub
jl
out
cmp
inc
shrl
mov
cmp
cs
add
pop
pop
xor
roll
push
loop
js
fsubl
xor
jp
dec
pop
cwtl
loopne
rorl
cli
inc
mov
lds
and
push
pop
js
cmpsb
clc
dec
and
mov
lret
add
into
sbb
and
adc
pop
cwtl
out
sub
dec
or
jle
ret
cmp
addw
xor
aas
sub
lret
mull
pop
fs
add
lahf
aam
divb
adc
lods
cmp
lret
sbb
mov
rcl
jnp
sub
sub
lods
std
in
imulb
push
test
out
ret
fchs
sti
cmp
jle
pusha
xchg
pop
loope
clc
dec
inc
rep
push
cmpb
mov
push
push
adc
pushf
in
lds
adc
lcall
adc
or
test
in
pusha
adc
repnz
imul
jl
lods
cwtl
mov
loope
std
cmc
lea
add
dec
sub
rclb
xchg
jb
idivl
cmp
push
es
adc
lock
dec
loop
add
sti
add
push
lea
js
mov
ja
shrb
inc
outsb
jl
enter
cmp
sbb
lret
sub
repz
fisttpl
sub
repz
arpl
in
sbb
jmp
ja
scas
out
mov
hlt
loope
mov
or
cmp
mov
mov
imul
xor
subb
shll
adc
cwtl
jl
out
xor
jbe
loope
mov
mov
nop
push
fbstp
lahf
push
loop
xchg
dec
sbb
push
mov
movsb
in
scas
inc
clc
gs
hlt
dec
jl
mov
out
jae
dec
jg
dec
inc
adc
sbb
xchg
add
sub
icebp
xor
ds
cld
fidivl
test
xchg
js
cwtl
and
iret
dec
pop
movsb
das
push
cmp
aad
cld
mov
fwait
out
sbb
pop
arpl
add
push
add
and
or
dec
sub
imul
clc
outsl
loopne
movsl
push
xchg
pop
sbbb
inc
jp
pop
popf
add
lahf
loopne
lea
ljmp
cmp
stos
or
add
or
mov
pop
pop
sahf
ds
or
mov
xor
cmp
jg
aam
ret
test
je
cs
mov
shr
rol
or
das
jo
fiadds
lods
adc
jb
jle
cs
rorl
push
or
ret
pop
loop
jb
inc
adc
es
lcall
pop
sbb
xlat
imul
aad
imul
jmp
jb
mov
fldt
dec
inc
pop
aad
test
and
gs
mov
movsb
jp
scas
jbe
or
nop
stos
popf
dec
mov
push
adc
mov
cmp
clc
shrb
data16
add
cmp
sub
mov
loopne
xor
mull
in
sub
int
loop
adcl
fdivrl
idiv
xor
adc
jmp
addr16
shlb
imul
pop
jne
xor
and
push
xchg
loop
ds
idiv
mov
bound
xor
mov
aam
outsl
push
andb
test
mov
insl
leave
xchg
popf
bound
test
fldcw
icebp
aam
push
add
push
sub
enter
or
push
pop
sub
dec
xchg
das
mov
mov
pop
sub
cmc
dec
data16
mul
mov
mov
pop
cmp
shrl
add
ljmp
xlat
xchg
gs
xor
xchg
fists
add
add
adc
imul
add
and
popa
out
pop
shll
call
sub
repnz
ret
lds
pop
jo
nopl
cmp
jg
es
push
hlt
das
out
pop
int
sti
sbb
and
aas
and
mov
adc
test
lret
movd
adc
je
sub
adc
xor
out
jnp
jp
sbb
lds
stc
arpl
inc
dec
jmp
popf
push
xchg
sbb
add
loopne
and
sti
dec
loopne
dec
add
sti
mov
adc
xchg
mov
call
repz
xor
cmpsl
stos
xor
mov
arpl
fmulp
fdiv
out
in
cli
or
or
sbb
add
inc
lret
adc
shl
xchg
subl
adc
int3
loop
inc
aam
test
mov
add
push
mov
pop
test
test
or
movsb
jne
or
push
push
jbe
sub
incl
mov
clc
or
sbb
sub
lea
mov
pop
in
icebp
xchg
stos
insb
xor
mov
into
jg
es
cltd
inc
test
mov
mov
pop
dec
dec
dec
cmp
xchg
adc
rcr
or
push
sub
cmc
std
cmp
sub
and
out
insl
lods
mov
add
aas
pop
mov
mov
adc
enter
lretw
stos
sub
lret
mov
cmp
enter
icebp
in
imul
cmp
mov
das
xchg
dec
dec
mov
adc
test
fsubs
bound
inc
int3
dec
outsb
or
loope
jmp
add
mov
push
je
sub
inc
and
inc
push
jb
or
jb
cs
rorb
or
mov
lods
ret
sbb
sub
pushf
adc
les
or
int
mov
pop
xor
push
and
add
sbb
arpl
inc
and
dec
lea
jecxz
popf
jmp
inc
add
pop
daa
addl
jp
push
and
adc
mov
xor
cmp
outsl
retw
cmp
push
cli
or
mov
mov
mov
aam
jl
gs
adc
pop
jbe
or
test
add
ljmp
test
push
rolb
adc
iret
mov
pop
popa
scas
jl
ret
xor
data16
push
sub
mov
jmp
mov
test
cli
lret
push
out
dec
xchg
inc
xor
cmc
loope
ret
dec
lret
jbe
mov
mov
roll
pop
lock
lods
les
xor
cmpl
cmp
and
rolb
call
pop
int3
and
cmp
adc
loope
jno
test
cmpsb
xchg
out
lds
arpl
xchg
mov
cmp
sbb
sbb
mov
push
pop
fwait
or
jnp
cmpsb
imul
js
lds
jb
rol
fwait
push
sbb
pop
inc
jge
sub
mov
loopne
inc
or
and
jg
push
iret
mov
icebp
mov
mov
add
std
push
ret
mov
dec
leave
call
mov
sbb
call
xchg
inc
aaa
jae
or
dec
lds
sti
pushf
mov
movsb
stc
add
jno
subl
imul
aas
add
mov
xchg
fwait
and
mov
xchg
movsb
jnp
cmp
jo
and
inc
fmul
xchg
hlt
daa
ret
push
inc
inc
mov
inc
mov
push
add
inc
inc
xor
je
nop
stos
add
je
icebp
cmpsb
in
or
cmp
push
and
jg
mov
or
ret
push
adc
shrb
pop
andl
loop
cld
push
nop
scas
jge
push
cli
fistps
fisubrs
in
pop
mov
mov
mov
lret
pop
loope
pop
sub
inc
shl
call
insb
test
ljmp
jo
rolb
xchg
jl
push
daa
jecxz
mov
add
cmp
and
int3
or
fidivrs
popf
jo
xchg
imul
xor
push
xlat
dec
iret
sbb
xchg
out
aad
out
push
test
pop
nop
pop
std
lcall
out
fdivrs
push
nop
push
jecxz
jno
mov
stos
lods
or
adc
and
cli
test
xor
stos
pop
push
fstps
mov
repz
loope
jp
fsubs
mov
rcrl
adc
push
fcoms
pop
mov
mov
inc
mov
dec
fstpl
lods
jp
or
fsubrs
lock
mov
sbb
inc
scas
push
sbb
addr16
mov
cwtl
test
sbb
loopne
xchg
addl
loopne
cmp
mov
jae
lahf
ret
mov
and
cmc
cmpsl
mov
das
repnz
push
int3
shll
push
xorps
add
pop
sahf
rolb
mov
lea
mov
hlt
jnp
clc
hlt
mov
sbb
add
in
sub
mov
adc
xchg
lds
adcl
push
or
xchg
jmp
mov
rcll
xchg
push
mov
das
ss
psrlq
cwtl
add
sbb
xchg
and
xchg
sbb
pop
add
cli
aam
inc
sub
call
adc
lea
out
ret
cmp
push
rcrb
call
es
xor
addr16
xor
test
push
shrl
test
adc
xchg
sub
add
pop
sarl
fadds
mov
ret
inc
incb
dec
push
loopne
or
mov
push
sarb
mov
dec
push
cmp
xlat
leave
pop
scas
aam
and
inc
shll
add
decl
dec
shl
sub
ds
ds
inc
dec
iret
lock
sahf
icebp
addr16
cmp
mov
mov
std
imul
data16
incb
pop
add
pop
push
or
ds
std
lods
pop
ret
in
add
push
mov
test
test
push
stos
sahf
ss
mov
fisttpl
je
loopne
lock
sub
call
setne
stos
scas
pop
into
out
rcrl
lahf
sub
add
jae
mov
addr16
push
ljmp
lahf
inc
inc
add
cld
sub
mov
adc
jno
mov
xchg
scas
mov
shll
pop
test
push
sbb
in
je
out
pusha
clc
nop
rcrb
xchg
pop
xchg
xor
popa
mov
add
sub
xchg
clc
insl
in
inc
dec
mov
out
pop
lds
nop
sbb
xor
xor
dec
jb
test
push
mov
outsb
inc
les
jg
cld
rol
push
xchg
add
or
mov
es
mov
addl
mov
sbb
pop
dec
xor
lahf
push
push
popa
mov
cmc
dec
dec
out
lock
dec
cli
pusha
mov
jp
lds
cmp
push
inc
dec
subl
das
int3
xchg
lods
adc
mov
loopne
cmp
cmp
dec
xlat
or
ss
jecxz,pt
adc
shlb
pop
cmp
sbb
mov
cmp
repnz
mov
mov
das
or
addl
lret
mov
rolb
test
cmp
or
inc
or
sub
mov
aaa
ljmp
shl
int3
test
xchg
in
inc
iret
shrb
mov
cwtl
or
dec
pop
fwait
icebp
inc
js
shl
sub
stc
out
rol
std
sub
xchg
icebp
js
inc
inc
mov
ss
jmp
out
jns
adc
push
in
jge
dec
jns
cmp
into
adc
shll
in
mov
xor
inc
or
stos
ss
lock
push
push
xlat
aam
js
mov
xchg
roll
adc
xor
sar
lret
icebp
and
sbb
les
xor
push
pop
mov
or
nop
inc
mov
jo
insl
outsb
jns
cwtl
jg
jle
test
mov
mov
or
push
stos
dec
lock
mov
cmp
or
add
sbb
jmp
rol
add
xor
cmp
mulb
dec
daa
and
mov
adc
aad
mov
or
js
mov
sti
or
sti
or
adc
shr
mov
mov
les
jne
cmc
dec
js
in
aas
pop
dec
add
mov
cmp
mov
stos
pop
pusha
bound
outsl
pop
ret
adc
adc
rorb
in
jae
bound
movsl
jle
dec
push
cs
sbb
sub
or
cmp
aas
scas
jmp
dec
shl
adc
lock
lret
fsub
mov
pop
cs
xor
repz
jl
push
notl
js
cli
xor
lea
jg,pt
sbb
xor
daa
cmp
jmp
xchg
mov
outsb
and
punpcklwd
xor
sahf
jl
les
pop
addb
or
cwtl
cld
mov
rcll
pop
fidivs
xchg
mov
xor
shrl
push
cld
fldl
std
shl
mov
sbb
mov
inc
nop
push
mov
pop
pop
xchg
xchg
clc
cmp
xchg
leave
mov
setl
cmp
arpl
mov
mov
pop
std
xchg
push
sub
int
jae
sar
jg
jb
mov
mov
adc
mov
test
mov
test
add
test
mov
inc
mov
incl
or
mov
popa
mov
jl
pop
push
add
flds
addb
mov
jg
push
jo
lock
movsl
lcall
and
or
adc
fldt
enter
pop
or
shll
js
add
movsb
test
mov
jno
pop
loope
int3
jle
cmpb
xor
dec
pusha
and
cmp
repnz
sub
push
pop
fdivl
fadds
mov
mov
pop
xchg
test
or
icebp
sbbb
je
arpl
and
out
pop
or
push
or
xchg
cmp
insl
std
das
cmpsb
dec
dec
push
and
dec
or
xchg
mov
push
jge
mov
mov
fs
xchg
mov
popf
mov
xchg
lock
and
adc
mov
push
addl
mov
inc
fldcw
or
xor
inc
adc
lock
jge
mov
mov
ljmp
or
fstp
test
movsb
fiaddl
sbb
add
and
mov
notb
pop
cmp
push
cmp
int3
mov
sub
loope,pt
sahf
adc
inc
push
push
bound
or
mov
xchg
insl
aam
inc
cmp
jbe
dec
mov
test
dec
push
lret
mov
lods
aaa
orl
or
add
icebp
dec
rorb
xchg
mov
xchg
mov
out
pop
xchg
cmp
clc
xor
mov
push
adc
pop
aas
mov
aaa
pop
data16
xor
aaa
out
add
mov
adc
xchg
loop
sbb
das
push
hlt
push
xor
jl
add
fcoml
add
hlt
mov
stos
call
aas
sbb
cmp
sbb
dec
vorpd
cwtl
daa
xchg
lret
cmc
insb
ret
inc
cli
pop
pop
cli
stc
or
jge
shr
mov
push
pop
or
and
test
icebp
adc
inc
jg
outsb
mov
pop
xchg
mov
fs
jecxz
fcmovb
lret
loopne
into
adc
loope
or
jl
leave
test
dec
into
stos
dec
rcrb
fcoms
cs
inc
andl
xchg
xchg
out
xor
sub
jl
stos
lcall
or
cmp
movsb
and
cmp
stos
bound
icebp
sbb
or
insb
mov
xchg
or
fsubl
mov
scas
pop
and
outsb
jmp
cmp
jns
popf
js
aad
std
mov
inc
int
jne
or
or
cmp
adc
test
enter
jbe
add
shlb
jle
mov
mov
test
jmp
daa
push
sub
adc
mov
mov
pusha
mov
jg
sti
sti
pop
rorb
mov
sahf
outsl
and
cltd
imul
addb
cmp
outsb
push
push
ljmp
mov
into
dec
clc
mov
dec
lret
sahf
cmp
mov
pusha
scas
jg
adc
dec
repz
js
bound
outsl
mov
adc
nop
ret
enter
fistl
xchg
push
mov
adc
stos
mov
cmp
scas
add
je
popa
sub
aas
std
xor
xor
int3
xrelease
call
sub
dec
out
or
js
sar
mov
add
sub
data16
ficoml
pop
inc
mov
lds
jb
and
mov
test
ror
xor
je
and
loopne
pop
nop
sbb
fadd
addb
into
and
ds
xchg
je
pop
ret
push
xor
pop
iret
push
rcll
dec
lea
cmpl
dec
pusha
call
push
inc
mov
test
fbld
cmpsb
mov
int3
mov
mov
push
lea
push
and
cwtl
jnp
mov
sbb
xor
in
add
push
inc
inc
repnz
or
inc
jg
sub
or
jle
scas
rorb
inc
loop
adc
mov
std
sbb
add
sbbl
mov
xor
mov
hlt
xacquire
mov
mov
add
add
sub
arpl
movsb
stc
cmp
sbb
je
jl
dec
or
clc
jge
jmp
push
push
add
inc
out
test
add
lds
mov
mov
stos
mov
adc
fnsave
outsl
js
stos
mov
inc
mov
shl
loope
push
sub
subb
push
pop
push
sbb
loop
loopne
out
sarb
out
outsl
cld
sbb
leave
adc
mov
sub
add
and
sbb
add
dec
popa
mov
aaa
mov
orb
out
sbb
inc
lret
rcrb
xor
int3
pop
addr16
pop
mov
les
jo
mov
cmp
sbb
jp
clc
push
cld
cltd
imul
wbinvd
xchg
or
push
mov
call
cs
into
mov
jl
push
test
inc
jmp
fstpl
bound
cmc
inc
dec
push
stos
sbb
mov
imul
incb
mov
movsb
aam
jbe
test
jbe
cmp
mov
sub
ds
sub
mov
cwtl
mov
cs
notb
dec
aad
pop
iret
push
fsubs
xchg
testl
and
filds
jae
bswap
loop
bound
xchg
lret
inc
fs
push
leave
testl
mov
or
mov
popf
push
jl
je
adc
xchg
sub
pop
dec
mov
mov
inc
mov
cmc
int
push
shrb
sti
add
add
push
daa
add
jbe
not
cmp
pushf
xlat
add
ret
testb
test
sub
sub
pop
adc
inc
cmc
sti
add
jns
test
pop
jmp
scas
fcompl
ret
push
outsb
or
iret
les
ds
out
stos
inc
mov
dec
jge
jl
outsb
test
jbe
adc
jp
loopne
or
shrl
in
insl
and
cld
push
push
rorb
push
xchg
inc
pop
out
push
inc
xor
in
ret
mov
mov
push
push
out
sar
mov
or
ret
lods
fldt
stos
or
stc
daa
and
lock
pushf
in
scas
dec
int
clc
sbbl
arpl
pop
loopne
test
adc
sbb
mov
sbb
push
mov
outsl
les
jmp
adc
ret
xor
jg
cmp
adc
in
cmp
stos
in
or
test
lock
stos
mov
ja
add
fildl
mov
sbb
adc
decb
xor
out
xlat
testb
mov
push
int
iret
xchg
cmp
fsubr
popa
jmp
adc
or
cmp
xchg
lock
xchg
movb
mov
mov
adc
mov
inc
movsb
repnz
popf
jno
mov
andb
or
popl
push
lcall
sub
pop
aad
cld
jno
imul
pop
nop
out
xchg
xchg
pusha
inc
inc
xor
inc
jmp
int3
cmp
cmp
repz
inc
push
jecxz
cmc
decl
push
xor
fwait
push
out
clc
add
pushf
fxch
std
repz
rolb
mov
enter
cmpsl
andl
add
mov
subl
fs
movsb
test
call
in
test
dec
hlt
out
psubq
push
pop
ljmp
or
xor
add
sti
lea
repz
add
lock
aam
jle
ljmp
adc
xor
addr16
cs
and
sub
or
ffreep
jns
jbe
cs
sub
inc
xchg
fisubl
das
or
jns
out
mov
ljmp
inc
add
daa
ret
cli
add
clc
stos
loop
rorb
movsb
or
lods
ret
les
mov
push
push
sbb
in
xchg
dec
push
dec
jp
xchg
into
sub
aad
out
mov
add
adc
cmpsb
fidivs
and
out
loop
lods
test
fs
sahf
icebp
push
cli
jmp
ret
movsl
sub
jl
mov
leave
rol
inc
and
mov
jl
mov
rol
stc
xchg
das
push
rcrl
xchg
lock
mov
out
push
sbb
and
fisubrl
out
adc
dec
add
scas
inc
cs
stc
pop
jo
pop
dec
shl
push
enter
cli
addr16
aam
sub
mov
mov
mov
or
or
add
xchg
negl
add
mov
adc
cli
out
ret
inc
xchg
pop
ret
dec
pop
out
inc
hlt
addr16
cmpsl
push
or
jp
add
aaa
inc
shlb
xchg
outsb
mov
xor
inc
mov
add
mov
xor
jb
adc
mov
adc
dec
sub
ljmp
and
testb
push
push
fidivrs
sarb
bound
sbb
lods
ret
insb
mov
in
push
stos
and
jmp
and
push
stos
aam
add
add
std
adc
sbb
cmp
jne
clc
ja
jmp
xlat
push
pop
add
jbe
icebp
xor
call
mov
jle
stos
ds
cmp
inc
and
incb
outsb
pop
cld
loope
pmulhw
and
subb
addr16
popa
xchg
dec
push
clc
frstor
ds
dec
sbb
push
push
mov
roll
imul
lret
subl
sub
dec
inc
fsubl
out
aam
cmp
scas
in
mov
enter
pop
add
adc
out
pop
xchg
and
adc
popa
mov
adc
fsts
push
fstpt
fs
xchg
add
cltd
and
jmp
test
ds
gs
ljmp
mov
cmc
pop
adcb
fiadds
cld
add
sti
inc
mov
sub
dec
cmc
xchg
movsb
inc
pop
je
jmp
sub
pop
pop
or
lret
mov
inc
and
jae
popf
repz
sub
or
xchg
sbb
pop
mov
sbb
sarb
add
insb
xchg
push
dec
sub
pop
std
rolb
lret
movsb
adc
repnz
sub
fdiv
aaa
lods
pop
push
popa
rorl
lret
pop
xchg
xor
hlt
out
filds
popa
shl
daa
sub
mov
popa
lcall
mov
adc
push
js
movsl
mov
je
mov
pop
add
mov
icebp
addb
lds
add
test
mov
insb
ret
cmp
subl
mov
js
sbb
inc
adc
sti
subl
adc
mov
jecxz
and
lret
push
add
lods
or
bound
push
push
mov
pop
mov
cmp
jns
mov
cmpsl
pop
mov
sbb
dec
add
jbe
mov
enter
inc
fisttpll
mov
cmc
cs
and
out
cli
mov
cltd
mov
mov
fisubrs
cmp
daa
bound
aam
cld
push
inc
fists
jle
push
and
ret
cli
fisubs
pop
lahf
xchg
aad
sub
pop
ljmp
icebp
shl
dec
cmp
cmpsb
and
adc
pop
je
add
pop
mov
and
mov
shlb
outsl
and
or
sbb
push
sub
sahf
mov
mov
mov
lcall
jbe
sub
mov
fdivrl
pop
je
dec
nop
mov
out
and
sub
sbb
push
rolb
imul
add
pop
pop
mulps
test
sub
mov
push
add
dec
fidivs
jmp
jae
fimull
dec
or
mov
fistpl
pop
clc
repz
loope
in
int3
add
outsl
sbb
das
dec
xchg
cmp
jno
mov
inc
sub
fcompl
mov
mov
adc
loopne
filds
mov
add
push
sbb
rcl
sbbb
dec
cmp
push
jecxz
lea
arpl
push
mov
sbb
or
push
ret
xlat
sbbb
lods
adc
add
push
aam
outsl
ljmp
mov
in
xor
mov
popf
xchg
inc
push
jb
cli
pop
mov
xchg
mov
mov
push
ret
or
jb
push
jns
cld
dec
jb
pop
mov
push
lods
add
push
cmp
adc
pop
sub
aam
dec
fdivl
or
dec
movsb
and
add
or
cs
cmp
inc
inc
mov
fcoms
mov
dec
je
adc
and
lcall
push
and
pop
jecxz
pop
fs
mov
inc
cmp
or
push
rep
jne
mov
dec
jge
int
xchg
mov
andl
sbb
sub
push
pop
aam
sbb
or
dec
scas
aam
pop
inc
lds
add
or
and
scas
mov
sub
xchg
movsb
shrl
leave
icebp
rol
cmpsl
cmpsl
xchg
or
sub
and
push
inc
lret
jns
repnz
mov
bound
jbe
adc
adc
addl
in
and
pusha
cmp
jle
insb
lea
pop
hlt
adc
adc
jl
ficomps
je
mov
es
lock
push
dec
out
push
adc
xchg
pop
aam
pop
popa
or
jae
lods
roll
push
pop
ret
or
jp
mov
pop
and
pop
mov
fdivr
stos
dec
adc
pop
jbe
notb
in
loop
pusha
loop
mov
mov
sbb
pop
add
lock
jnp
shrl
shlb
adc
and
testl
mov
and
js
xor
outsb
or
cltd
stos
cmp
mov
mov
inc
out
iret
sub
mov
sti
je
mov
lds
cmc
std
clc
adc
mov
pop
daa
inc
mov
or
scas
cmp
add
add
adcl
add
test
lds
dec
call
dec
xor
mov
dec
jg
mov
repz
or
sub
cmp
fcom
nop
loopne
add
nop
rorb
les
or
inc
jno
mov
jmp
xchg
fildl
ds
mov
ljmp
je
pop
push
inc
mov
pop
ret
sbb
push
ljmp
xchg
or
pusha
iret
ret
pusha
call
cld
inc
xor
xor
adc
or
mov
jo
jp
and
cmp
std
jne
and
push
adc
cmp
xor
xor
imulb
or
in
jecxz
pop
mov
add
aad
call
and
idivb
pop
les
xchg
rolb
add
popf
lea
loopne
and
cwtl
add
lcall
mov
mov
aas
insl
cmp
scas
or
popf
cmp
mov
jecxz
mov
push
lcall
dec
das
je
inc
sbb
in
scas
sbb
cli
out
mov
roll
loopne
pop
push
push
mov
dec
pop
andl
sbb
loop
mov
rcrb
stos
mov
inc
int3
lock
fistps
mov
adc
mov
sbb
subl
mov
xchg
sbb
mov
ds
push
es
mov
sub
sahf
add
jbe
shr
push
scas
cmp
ds
push
cmp
cli
xor
bound
shll
lahf
xorl
mov
sbb
adc
shlb
scas
xchg
or
adc
sub
add
inc
mov
xchg
test
ljmp
adc
je
mov
loope
jne
inc
stc
mov
ret
out
popa
sarl
jns
lea
inc
mov
mov
loop
add
push
add
sub
pusha
shll
jecxz
add
xchg
int
fldenv
jmp
or
push
add
push
idivl
mov
fnstenv
sub
daa
or
xor
cmp
add
xchg
cmp
add
cmp
push
mov
adc
mov
daa
enter
and
sarl
jecxz
loop
mov
mov
out
mov
dec
jo
std
xchg
lret
icebp
cmp
cmp
pop
and
out
cs
fnstsw
adc
sbb
les
shlb
cwtl
push
and
das
pop
and
ret
xchg
adc
mov
xchg
inc
cmp
call
in
es
ret
sbb
xchg
std
jo
hlt
shl
mov
push
xchg
jl
mov
xchg
pop
pop
fildl
mov
adc
adc
nop
test
cmp
daa
fsubrp
fsubl
jp
or
adc
add
out
jle
dec
or
in
ds
dec
test
cmpsb
stos
sbb
xor
ror
push
cmp
adcl
push
cltd
fnsave
cmp
cld
outsl
imul
sub
pop
cmp
dec
ds
mov
enter
out
lods
daa
cmp
push
or
fcoml
sbb
jge
or
pop
and
and
loopne
and
xchg
stos
xorl
in
jbe
fdivl
xchg
call
jns
lods
push
popa
mov
mov
fadd
adc
inc
in
movl
movsb
add
enter
fisttpl
mov
shlb
xlat
sbbb
lock
cmp
pop
mov
mov
or
inc
dec
pop
into
push
and
mov
jl
shrl
aad
inc
fwait
mov
cmp
rcll
xor
jne
pop
cmp
cs
call
cs
mov
pop
into
es
add
daa
clc
cmp
fimull
push
aaa
sub
clc
sahf
in
test
arpl
cmp
bound
das
mov
mov
imul
mov
out
stos
ljmp
dec
aaa
cmovle
and
sbb
data16
ljmp
xor
jbe
pmuludq
int3
push
in
inc
sub
add
mov
mov
jecxz
ret
push
push
roll
pop
cmp
ss
lock
mov
xchg
es
shll
and
cmp
insb
stos
out
lahf
cmpl
lea
ljmp
das
outsb
add
es
jo
add
mov
and
xchg
test
pop
test
fcom
xlat
loop
lods
fildll
mov
je
dec
dec
sbb
sub
enter
outsb
mov
pop
jle
mov
sarb
add
pop
popf
push
int
sub
pop
mov
mov
push
dec
xchg
jbe
movsl
fwait
xor
jmp
ja
mov
clc
xchg
and
stos
stos
cmp
and
aam
lea
sbb
mov
or
sbb
insb
scas
cs
pop
addr16
push
pop
pushf
mov
jb
mov
and
or
and
jnp
enter
add
add
xchg
push
clc
inc
daa
cmp
and
pushf
push
mov
push
jmp
aam
loop
adc
subb
loop
jo
add
mov
and
js
lret
add
and
imul
push
test
jb
imul
dec
xor
jp
push
fsubp
xor
pop
or
mov
adc
inc
xchg
lock
and
test
dec
ret
mov
ret
call
insb
pop
mov
fldenv
inc
inc
mov
mov
sub
xchg
push
mov
cli
hlt
sbb
ret
fldl
push
jecxz
sbb
pop
loop
cmp
jle
xchg
or
mov
xchg
test
and
jecxz
mov
movb
dec
movsl
xor
jl
mov
or
inc
jl
mov
insb
push
sub
pop
sbbb
add
mov
adc
sub
mov
lahf
das
js
subb
pop
pop
or
loope
inc
stc
or
mov
add
out
jecxz
push
sub
ljmp
test
pop
pop
inc
mov
cmc
or
outsb
shlb
sub
cmp
push
ffree
mov
push
jb
sub
aaa
sbb
lds
cmpsl
lahf
shl
lods
in
dec
rcrb
addl
cmp
lock
test
insl
test
mov
sbb
add
mov
and
push
loopne
aad
pop
aaa
mov
pop
fcmovne
les
test
rcll
call
aad
mov
loop
pop
test
pop
push
mov
ljmp
je
and
dec
in
sbb
sarl
mov
sub
jp
pop
cmpsl
adc
data16
sbb
stos
cs
je
mov
mov
adc
pop
js
lea
insb
lcall
loop
or
lods
mov
xor
add
adc
mov
arpl
lahf
or
ds
movsl
xor
inc
in
sbb
adc
adc
sub
into
les
adc
test
movb
or
inc
pop
int3
mov
pop
cs
clc
lods
pop
popf
pushf
cmp
test
mov
icebp
and
adcl
inc
inc
pop
repz
cmc
call
pop
or
jo
and
js
subb
mov
out
cs
call
pop
les
push
ss
inc
adc
jno
jmp
cmp
mov
test
push
lds
rcl
bound
scas
fdivs
push
rolb
lock
outsb
adc
repz
and
pushf
mov
cmpsb
inc
mov
jl
out
ja
add
loope
fdivrs
sbb
inc
sbb
cmp
or
outsl
int3
and
inc
movsl
dec
sub
daa
pop
push
or
jle
or
sub
xchg
bound
adc
and
xor
xor
test
mov
mov
add
ds
inc
test
data16
cmc
cmp
cmpsl
ret
push
ds
jle,pn
andl
dec
scas
mov
xchg
lcall
sbb
mov
pop
icebp
inc
dec
mov
outsl
cmp
jge
push
push
clc
cmp
in
fcoms
and
adc
dec
je
jmp
xchg
clc
xchg
jle
push
call
scas
fsubs
loopne
pop
hlt
add
roll
jge
leave
repnz
ret
jmp
bound
pop
filds
and
mov
dec
jge
cmpsl
out
mov
jo
cmpsb
or
push
pushf
push
xchg
pushf
jl
add
sub
orl
ret
push
adc
and
sub
rcrb
out
cli
idiv
pop
dec
mov
pop
insl
mov
cmp
mov
sub
inc
clc
sbb
scas
sarb
das
scas
dec
loop
das
sbb
sbb
fimull
fists
mov
mov
les
dec
adc
inc
dec
or
insb
popf
pop
dec
aaa
pop
and
aaa
sub
and
push
mov
lods
add
aam
push
jge
rcrb
xor
fdiv
idivb
imul
inc
xchg
xlat
faddl
cmc
pop
std
push
jp
sahf
adc
pop
xchg
and
mov
xchg
loop
pop
sub
push
adc
and
xchg
loopne
pushl
repnz
and
bnd
aam
xchg
popa
jg
scas
sub
js
out
dec
push
loop
inc
or
lret
gs
out
mov
xor
mov
adc
xlat
lock
nop
mov
push
fists
sbb
adc
clc
sbb
sti
out
mov
mov
in
in
sub
or
sub
rorb
push
or
mov
adc
aas
add
or
mov
push
xchg
filds
out
vpmacsswd
inc
out
push
sahf
scas
push
filds
pop
loop
test
cs
mov
cmc
xor
pop
sahf
ds
push
jbe
jg
adc
or
xor
stos
pop
loope
jb
mov
cmp
loop
push
jecxz
mov
mov
orl
or
dec
mov
jo
lcall
or
push
andl
pop
xlat
popf
xlat
lods
std
push
sarl
fadds
pop
lods
lods
mov
cld
inc
int3
cmp
jnp
cmp
mov
push
add
xchg
in
loope
pop
clc
mov
mov
loop
sub
xchg
mov
ret
xor
inc
enter
add
int
ds
or
xchg
in
xor
sahf
push
clc
and
je
test
cmc
push
inc
les
pop
jae
dec
inc
les
and
cld
jo
or
stos
add
aaa
cmovo
pop
cmp
lock
pop
push
mov
vmread
sbb
lods
in
pop
inc
sar
pop
add
jle
xchg
addb
ds
mov
cmp
or
cmp
xchg
hlt
or
cmp
daa
pop
es
pushf
add
xchg
cmp
repnz
loopne
test
mov
push
push
sti
ja
dec
loope
xor
or
lret
mov
ljmp
adc
data16
sahf
loopne
nop
lret
and
xor
lods
jle
je
mov
fs
sbb
mov
dec
stos
popa
pop
js
out
xchg
pop
jne
or
push
adc
pop
loope
add
fiadds
inc
inc
addl
xor
inc
jb
inc
andl
xchg
push
loop
das
mov
xor
jge
incb
pop
xlat
pop
fwait
inc
inc
nop
pop
scas
push
cmp
lea
jbe
inc
mov
dec
daa
rcrb
add
xchg
mov
sarl
push
adc
cs
xchg
xchg
pop
push
mov
stc
xlat
inc
push
mov
adcb
jp
mov
xchg
mov
stos
sbb
add
inc
and
movlhps
mov
mov
mov
or
pop
or
jo
xor
adc
lahf
push
in
arpl
and
push
mov
incb
es
add
insb
popf
pop
inc
xchg
or
add
and
cmp
mov
and
je
jmp
xchg
or
daa
cmp
scas
adc
mov
xor
mov
mov
shl
lods
loopne
ret
push
cs
sub
mov
das
pop
loopne
mov
into
movsl
sub
ljmp
adc
jo
sub
loop
lahf
push
adc
stos
scas
sarb
js
fs
push
bound
jne
add
xchg
je
ja
dec
ja
pop
rolb
ret
in
cmp
jmp
les
inc
mov
test
push
popa
cmp
clc
adc
ljmp
push
mov
mov
pop
xchg
or
cs
test
clc
pop
test
leave
mov
mov
xor
adc
cwtl
dec
dec
and
inc
rcll
loopne
stos
pop
je
into
xchg
out
inc
push
push
push
jne
mov
imul
jl
stc
loopne
dec
fistps
jg
movsb
dec
popl
xor
pop
loope
jo
pop
or
and
dec
fnsave
iret
fimuls
jb
mov
jecxz
xchg
sar
ss
add
out
mov
outsl
stos
sub
je
mov
mov
in
mov
cmp
clc
test
jp
ret
mov
pop
mov
cld
cmc
out
insb
sbb
sub
add
lea
aas
dec
mov
cmp
les
xor
imul
sbb
adc
dec
or
mov
or
jp
mov
in
pop
nop
mov
clc
sbb
add
fadd
push
and
scas
push
scas
sbb
les
sub
and
dec
and
stos
jb
push
je
enter
scas
sbb
xlat
jbe
push
sbb
clc
fimuls
and
xchg
inc
sub
mov
ret
mov
mov
stos
jecxz
mov
mov
pop
subl
dec
cmp
cli
mov
stc
sbb
add
mov
icebp
sub
test
or
inc
idivl
adc
outsl
movsb
mov
jne
ret
or
lods
push
mov
pop
push
inc
pop
xchg
cwtl
les
cmpl
push
rcll
call
lea
stos
push
lret
or
aaa
mov
xor
sub
jb
ds
lds
cli
cmp
mov
sti
pop
hlt
xor
sub
and
and
js
xchg
jmp
shl
sbb
addr16
xorb
insl
jp
dec
mov
sbb
jp
scas
cmp
clc
xchg
icebp
mov
loop
sub
dec
outsb
ss
xor
xor
xchg
hlt
add
test
in
addr16
add
mov
hlt
jg
push
xlat
rclb
mov
ficoms
mov
xor
rcll
xor
clc
sbb
xor
xor
inc
shlb
inc
shrb
addps
adc
mov
cmp
aas
inc
dec
xchg
hlt
lds
pop
pop
mov
test
fstpt
movsl
dec
xchg
jp
lods
in
shrb
inc
dec
jecxz
pop
push
jle
xchg
test
push
jle
shll
xchg
dec
das
movsb
add
jmp
out
sub
jbe
out
pop
sbb
repz
mov
cli
scas
mov
das
sbb
pushf
nop
or
lret
dec
pop
or
lcall
frstor
insl
jmp
negl
push
sbbb
jo
and
or
mov
sahf
test
push
popf
mov
sub
ret
adc
stos
lret
add
jle
mov
pop
and
pop
push
sbb
dec
mul
dec
test
xchg
insb
fisubs
and
sbb
lret
leave
add
push
inc
cmp
cmp
notb
adc
inc
jns
outsb
cmp
pop
adc
xor
mov
sbbl
lea
jle
bsf
test
sub
lcall
cltd
xchg
cltd
cmc
jo
and
cmc
cld
and
sahf
movsb
fisttpl
or
push
sub
and
push
mov
add
test
push
ud1
dec
inc
pop
jl
jo
mov
inc
test
or
loop
fistpll
mov
fisubrs
cmp
xchg
pop
enter
xorb
fiadds
push
jl
mov
xchg
dec
pop
mov
ss
xchg
ljmp
sub
addr16
and
xor
push
inc
ljmp
sub
aam
cmp
frstor
out
jo
push
cmp
push
cmc
mov
out
pop
jns
mov
xor
sarl
sub
insl
aam
mov
pop
cmp
push
andb
mov
fdivl
xor
andl
pop
test
fadds
sbb
mov
inc
mov
and
cmp
shll
sbb
jmp
cmp
popa
scas
mov
adc
lock
idivb
push
add
ss
cli
cmpsl
aaa
add
gs
mov
nop
ds
pop
adc
push
or
roll
stc
test
sub
sub
das
pop
rorb
or
xchg
pop
adc
mov
rcll
jg
insb
sbb
js
xor
dec
mov
xor
and
add
hlt
push
xor
dec
ljmp
and
pusha
adc
sbb
fidivrl
es
inc
ret
aas
xor
icebp
mov
push
les
push
and
jno
dec
and
aas
int3
dec
mov
into
jo
jle
les
movl
adc
jl
ljmp
jmp
cmp
call
fs
filds
mov
in
adc
and
in
subb
or
push
loop
jo
leave
mov
jl
or
push
movsl
mov
sub
fs
cwtl
insl
roll
mov
mov
xlat
fisubrs
sub
pop
inc
leave
xor
fld1
push
dec
sub
mov
sbb
sbb
movsb
icebp
ret
lock
mov
cmp
dec
and
loopne
clc
and
push
movsb
dec
loop
and
lret
cmp
push
adc
mov
js
or
adc
aam
nop
mov
mov
mov
sbbb
das
outsl
adc
loop
push
cwtl
jge
imul
fs
mov
and
sub
jp
cmp
mov
aas
or
out
inc
sbb
test
push
xchg
fs
repz
mov
shrl
or
lret
push
or
arpl
mov
pusha
mov
lret
mov
cmpxchg
cs
fadd
jp
push
sbb
rorb
mov
gs
lock
and
jno
data16
cmc
or
pop
xor
mov
jge
adc
in
mov
in
fwait
push
addr16
mov
push
in
push
push
icebp
add
lret
icebp
jns
sbbl
inc
jge
mov
addr16
mov
and
cmp
bound
mov
add
mov
mov
pop
adc
jg
js
lahf
add
xor
xor
rolb
mov
xchg
adc
add
and
xchg
pushf
xchg
lock
insb
sbb
rol
ret
xchg
mov
push
sub
jp
js
lcall
cmpsl
inc
lds
push
pop
jno
inc
lock
int
dec
push
scas
scas
xchg
adc
push
pop
sub
in
stos
int
pop
xor
shr
and
cmp
xor
or
xchg
loope
adc
insl
or
mov
mov
mov
hlt
cmpsl
cmp
push
add
jl
xor
ficoml
ss
rol
adc
or
and
lcall
mov
insl
cmp
cmc
cmp
repz
and
mov
outsb
and
stc
mov
fadds
adc
add
mov
lcall
sbb
sub
add
lods
aad
popa
inc
push
xor
adc
icebp
call
mov
xchg
pop
sub
push
xchg
inc
inc
mov
xchg
lret
mov
test
add
xchg
loop
push
fs
mov
push
pop
testb
std
push
shl
add
add
lods
inc
adc
pusha
scas
rcll
push
xchg
fstpl
arpl
fs
popa
and
out
mov
mov
sub
jp
out
jbe
sub
dec
and
orb
push
or
test
push
fwait
cmp
sub
lcall
push
mov
mov
lcall
mov
push
mov
mov
cmp
icebp
adc
inc
fdivs
sbb
stc
xor
lea
lcall
test
mov
jns
add
mov
ret
xor
jae
mov
push
int
sbb
adc
add
dec
push
cs
xor
imul
pop
xor
test
das
cmpsb
adc
mov
mov
ret
add
loopne
hlt
or
xor
xchg
push
hlt
lods
xchg
dec
sub
hlt
mov
pop
adc
jno
mov
push
push
cmp
cmc
xor
mov
dec
jno
ret
mov
jmp
rclb
inc
sbb
mov
test
xchg
jb
pushf
rcl
push
inc
ret
stos
rclb
mov
out
jle
push
jae
xor
adc
push
clc
mov
cmp
hlt
or
lock
jmp
jmp
pop
cmp
loopne,pn
stos
or
int
xchg
scas
sbb
rolb
jno
and
and
cmp
clc
test
adc
jecxz
push
imul
scas
lock
les
cmp
dec
jo
xlat
mov
sbb
pop
je
pop
or
mov
push
inc
cmp
xorl
mov
sbb
sbb
fistl
add
insl
mov
int3
push
cli
push
cli
movsl
std
ret
cmp
out
cmp
and
outsl
xor
add
dec
sbb
pop
and
push
dec
mov
mov
hlt
jmp
sub
sub
lods
adc
imul
lahf
lock
daa
adc
add
into
cld
mov
sbbb
cmc
push
decl
mov
lods
mov
and
xchg
sahf
jg
pop
das
or
and
pop
loopne
jo
adc
mov
fs
pop
inc
dec
add
and
pop
or
js
mov
xor
inc
or
clc
rolb
pop
mov
sbb
inc
jmp
jae
or
imul
jg
jecxz
sbb
add
sbb
loopne
outsb
ret
popa
fistpll
push
std
loope
aaa
mov
in
pop
inc
adc
mov
lock
out
stos
or
xchg
adc
jo
jo
cmp
mov
and
pop
sub
sub
out
adc
fdivs
xchg
stos
add
dec
jp
xchg
mov
cwtl
push
push
mov
cmp
into
popf
cmpsl
das
jp
add
add
sbb
loopne
xor
mov
push
les
jp
jne
cli
mov
sbb
adc
push
pusha
push
mov
shll
xor
xchg
mov
xlat
pop
jbe
hlt
sbb
inc
pushf
sbb
push
iret
inc
cwtl
adcb
ret
mov
push
iret
dec
or
or
sbb
lock
shlb
test
cmp
push
insl
bound
movsb
mov
es
sarb
mov
xchg
sti
push
and
je
sti
loop
repnz
or
pop
imul
inc
mov
icebp
popf
mov
jmp
jb
out
repnz
es
mov
xchg
pop
mov
das
icebp
test
mov
push
adc
sti
mov
pop
pop
lock
xor
mov
sub
movsb
out
andl
jo
xor
sbbb
pop
add
inc
nop
inc
bound
xor
loop
inc
mov
xorb
pop
mov
jb
test
sub
icebp
sub
jecxz
cmpsb
fisttpl
out
sub
dec
clc
lea
pushf
push
iret
adc
lods
outsb
xchg
in
pop
pop
jno
or
sti
xchg
aam
jo
add
cltd
sub
mov
lret
dec
pop
cs
shrb
outsb
adc
test
adc
outsl
sbb
xor
add
sub
ds
scas
lods
pop
jne
sub
js
cmp
mov
iret
mov
cmp
push
shlb
into
dec
cltd
arpl
subb
inc
mov
fs
add
rcll
ret
push
repz
pop
pop
xchg
pop
inc
jg
adc
jbe
arpl
adc
jmp
cltd
xor
jo
mov
push
pop
mov
sbb
mov
push
cmpsl
dec
inc
sub
mov
addr16
push
xor
and
xchg
xor
scas
loope
int
adc
or
fs
sub
mov
jnp
fsubs
jecxz
mov
mov
and
cmp
sub
aam
stos
pop
insl
push
fldl
movsb
adc
adc
out
xchg
push
mov
movsl
or
lds
jle
in
cmp
ja
mov
outsb
and
push
addr16
sub
jbe
cmp
mov
je
scas
mov
cmpxchg8b
lret
jno
leave
pop
std
adc
push
sbb
mov
add
testl
in
push
and
push
mov
adc
in
jnp
mov
jge
fdivrl
sahf
xor
xchg
ret
arpl
sbb
pop
xchg
ret
fsubrl
xchg
pop
mov
sti
push
aam
dec
pop
clc
jnp
fs
xor
dec
jmp
dec
or
leave
xchg
or
insl
mov
cld
test
out
dec
ss
pop
imul
je
movsl
addl
repnz
pop
loop
incl
jg,pn
out
test
mov
es
int3
cwtl
pop
xchg
xchg
or
aas
mov
lret
call
pop
jno
ss
and
addb
mov
pop
jl
pop
mov
cli
or
fdivs
jecxz
inc
and
fnstcw
fsubs
nop
into
loopne
enter
cmc
out
push
loopne
les
push
cmc
inc
hlt
lea
mov
pop
ret
dec
pushf
imul
stos
and
mov
ret
daa
or
fcmovu
mov
call
movsl
bound
add
cmpsl
cmpsl
mov
andb
inc
or
lret
cli
and
sarb
inc
push
iret
mov
push
mov
push
flds
push
sbb
lods
out
jle
shrb
push
lret
sub
xchg
lods
mov
lods
xchg
and
rorb
add
or
adc
pop
dec
add
sub
mov
or
xlat
ss
sub
push
or
popl
fwait
mov
push
daa
xchg
int
std
psubq
push
iret
add
sbb
add
or
pop
mov
pop
mov
sbb
cmpsb
push
adc
fimuls
cmpb
cmp
xor
push
cld
cmp
mov
sarb
sti
and
test
add
loop
fidivrl
lods
mov
and
aam
adc
adc
test
jmp
push
shlb
kmovb
sbb
insb
inc
mov
jnp
or
cmp
lahf
int
pop
mov
mov
push
xlat
cmovo
push
cs
dec
cmp
idivl
sub
cld
lods
iret
aaa
mov
stos
xor
mov
jns
mov
fiadds
add
sbb
ja
out
inc
sub
call
popf
inc
bound
mov
loope
push
adc
or
les
iret
or
pop
clc
jecxz
hlt
clc
xor
sub
cmc
lahf
gs
leave
aad
rcrl
and
ficoml
lahf
test
scas
and
loop
jmp
mov
inc
addr16
mov
call
fsubs
or
or
fcoms
mov
sbb
push
mov
cmpsl
leave
push
pop
cmp
cmpsl
dec
jmp
jb
xchg
dec
int3
sub
insl
scas
call
inc
incb
pop
mov
inc
insl
inc
lock
jmp
add
nop
movsl
inc
add
lret
int3
push
add
jno
data16
rcl
pusha
out
inc
loopne
add
pushf
popa
sbb
add
fsubrp
mov
inc
mov
shll
lcall
jbe
mov
fiaddl
push
xor
fdivr
popl
mov
jl
js
and
adc
mov
fcoml
push
test
movsl
lcall
shrl
fnstsw
add
mov
mov
popl
cmp
add
ds
jne
ret
fcomps
addr16
pop
and
pop
pop
xor
in
mov
or
lds
cmpsl
leave
sub
lock
fdivrl
push
and
cltd
nop
xlat
ret
das
adc
jl
cmp
js
mov
fdivrs
cmp
xchg
lods
fdivl
shll
add
ds
cmpsl
jbe
mov
stos
and
enter
adc
mov
mov
pop
adc
mov
inc
cmp
ljmp
pop
call
cmp
jge
in
shll
popa
jmp
inc
mov
pop
cwtl
addr16
mov
push
mov
test
and
out
ljmp
in
aad
je
loopne
out
jno
out
xchg
inc
sub
add
cmpsl
or
fs
lock
dec
inc
cmp
xchg
xor
jbe
dec
ret
cli
pop
jg
enter
loope
inc
and
xor
fcomps
es
mov
clc
or
lret
pop
push
cmpsb
mov
jmp
jge
xor
mov
mov
xchg
sbb
jne
push
dec
lods
sub
push
insb
or
pop
loopne
xchg
sbb
adc
lods
daa
mov
lret
push
sub
shlb
scas
pop
lock
adc
shrl
add
sub
push
rcr
mov
lock
mov
cli
ret
fldcw
incb
fdivp
jmp
loopne
push
stc
repz
mov
hlt
cwtl
fisttps
mov
jo
mov
push
cwtl
jo
or
or
jne
dec
scas
stos
daa
push
push
shr
enter
adc
repz
mov
xchg
orl
push
or
mov
xchg
push
pop
dec
mov
iret
sub
sbb
and
arpl
jae
cli
adc
test
push
lcall
cwtl
xchg
xchg
cmp
popa
and
jne
shl
out
add
mov
and
shlb
dec
or
jmp
sarb
js
and
icebp
pop
js
add
fcmovb
mov
in
pusha
in
jns
inc
inc
add
cmpsb
pop
push
adc
push
rolb
inc
adc
pop
xchg
jns
push
out
mov
dec
pop
sbb
sbb
pusha
pop
ret
xchg
and
and
sarl
sbbb
imul
pop
mov
jle
dec
or
es
jnp
dec
inc
or
cmpl
nop
pop
jne
adc
add
inc
adc
ja
xchg
adc
test
dec
pop
rcll
xchg
loope
mov
mov
jle
clc
fs
fdiv
fisttps
cld
sub
negl
xchg
or
std
sbb
daa
mov
out
and
es
and
arpl
nop
mov
mov
pop
lcall
fsubs
daa
push
xlat
das
sbb
jne
orb
loope
inc
rorb
ret
xor
mov
sbb
fwait
and
ss
cmovne
aad
loop
jo
arpl
cmp
or
movsl
popf
pop
rorl
out
shl
mov
in
push
out
sbb
filds
jmp
imul
fmuls
jle
into
cmovno
sbb
sti
decl
jne
xor
fcompl
dec
adc
pop
popa
mov
dec
loope
push
and
leave
and
jo
cmp
adc
push
mov
jmp
gs
dec
js
call
aad
aas
mov
frstor
ds
or
cmpsl
sub
sbb
xchg
jnp
xchg
cmpsl
dec
mov
fcoms
sbb
dec
stos
sub
xchg
cwtl
bound
icebp
xlat
mov
aaa
cltd
out
cwtl
imul
js
add
lea
xchg
iret
sahf
ja
stos
mov
inc
sub
mov
mov
ficoms
jl
std
repz
loopne
cmp
adc
mov
jbe
mov
xchg
rclb
add
jbe
jno
aam
iret
fwait
mov
inc
sti
aas
mov
sti
scas
inc
cmp
cmp
fs
jl
shrb
and
icebp
sarl
int3
push
mov
mov
test
or
jl
mov
push
or
ljmp
subb
repnz
adc
clc
xlat
loope
jns
je
cmpsl
and
jg
popf
es
mov
or
and
inc
out
repnz
pop
rol
arpl
jns
xor
sub
jo
push
add
out
mov
test
fwait
jmp
cmp
jb
mov
xchg
repnz
pop
or
addb
xchg
add
lock
popf
dec
int
adcb
imul
test
ds
mov
mov
ljmp
pop
mov
jae
xchg
inc
fildll
add
andl
jle
fucomp
out
sub
mov
jg
out
movsl
add
xor
and
data16
arpl
sbb
lcall
pop
les
sahf
movsb
dec
push
cld
xchg
and
xchg
roll
int3
shrb
aam
lods
jle
mov
adc
inc
in
in
pop
sub
je
stc
mov
hlt
daa
adc
insb
scas
sbb
dec
clc
rcll
adc
pop
add
mov
les
and
push
mov
xor
jmp
mov
push
jo
cltd
cmp
testl
lahf
xor
cmpsb
addb
rol
or
pop
pop
cmp
pop
stos
push
pop
cwtl
mov
adc
sub
mov
repz
mov
rcll
les
testb
test
je
test
addr16
cli
nop
imul
inc
xlat
xlat
push
in
js
or
in
inc
je
inc
stos
jo
sbb
or
aam
push
and
in
pusha
sbb
push
mov
sbbb
cmpsb
fstl
push
push
mov
xor
loop
inc
rol
mov
pop
mov
pop
outsl
loope
aad
nop
les
mov
orb
mov
imul
call
pcmpeqw
das
orb
sbb
push
or
dec
or
push
add
scas
pusha
pop
cld
mov
rolb
movsl
orl
xor
push
mov
mov
cwtl
adc
cltd
push
out
jg
sbb
xchg
lods
xchg
lahf
or
popf
loope
xchg
dec
gs
aas
push
rorb
xor
ja
jns
mov
aaa
bound
push
ja
fucomip
sbb
insb
ret
add
enter
xchg
push
inc
push
dec
scas
sub
fs
and
sbb
push
inc
shll
adc
dec
dec
loopne
pop
loope
jnp
test
pmuludq
and
push
fsubrl
fidivrs
es
loope
push
inc
cmpb
or
loopne
sbb
and
cmc
push
xchg
mov
gs
fcomi
scas
loope
adc
or
dec
adc
jne
push
das
scas
push
jp
mov
hlt
dec
lcall
popf
xchg
add
dec
add
das
test
mov
xor
fcmovnb
mov
mov
jo
ljmp
cmpb
pop
and
fdivrl
sub
rorl
lret
orb
lods
jo
arpl
add
push
adc
push
lret
insl
stc
push
fldl
aas
jns
xor
movsb
inc
add
aaa
or
outsl
mov
adc
mulb
inc
dec
mull
cmp
xchg
sbb
stc
fcomps
stos
in
imul
inc
or
mov
sub
fidivrs
dec
inc
dec
mov
dec
or
test
fimull
pushl
sbb
ds
push
mov
jecxz
mov
xor
push
mov
add
popf
movl
ss
dec
xor
dec
mov
outsl
pop
mov
negb
fimull
and
in
xchg
outsl
inc
pop
or
test
out
mov
std
fiaddl
das
xchg
xchg
nop
movsb
jl
jb
stos
pop
xchg
pop
or
das
jge
ret
add
test
add
mov
add
xchg
in
and
stos
pop
cmpsl
sbb
aam
lods
pop
dec
mov
in
pop
pop
inc
adc
mov
pop
je
icebp
mov
cltd
ret
cmp
addl
push
xchg
xchg
xor
mov
sbb
mov
dec
nop
mov
pop
and
dec
jmp
add
inc
mov
sbb
push
pushf
sub
mov
outsl
add
roll
mov
ret
adc
mov
scas
pop
sar
dec
movsb
clc
jo
imul
xchg
xchg
mov
imul
push
scas
adc
nop
in
aas
lock
cmp
movsl
fistps
fisubrs
adc
mov
add
dec
add
inc
push
mov
addr16
out
loopne
movsb
cs
mov
mov
movsl
push
insb
pop
cmpb
inc
and
stc
ds
or
mov
hlt
lcall
cmp
dec
cs
adc
dec
and
sbb
es
or
add
scas
lock
adc
inc
jae
cmp
xor
fsubp
push
sub
into
popf
adc
sub
das
xor
int3
hlt
xchg
mov
push
push
adcb
imul
jae
lock
xor
daa
or
mov
add
jmp
pop
push
and
cmp
xor
push
push
div
and
add
mov
lock
loopne
jo
dec
push
mov
mov
mov
scas
imul
push
jle
popa
or
out
push
ret
aas
mov
sbbl
pusha
loope
inc
mov
mov
pop
shll
xor
jnp
movsl
stos
sub
mov
sub
popf
push
lods
push
jecxz
outsb
cmpsl
add
mov
ss
xchg
jno
shlb
out
xchg
adc
leave
sub
dec
inc
sub
push
cwtl
pop
rol
xlat
xor
push
in
cmp
outsb
stos
sbb
or
mov
cmc
jne
cmc
subl
push
mov
clc
inc
mov
jne
fistpll
jb
xor
pushf
adc
push
mov
scas
xchg
mov
sbb
outsl
mov
or
insb
sub
inc
jge
lret
mov
ljmp
pop
pop
pusha
mov
adc
mov
into
outsb
push
jo
add
popa
jne
xchg
xchg
int3
out
adcl
mov
push
rcl
lods
test
das
sbb
jecxz
rcrl
mov
mov
mov
loope
sub
inc
xor
test
out
or
test
add
lret
mov
andl
lcall
lds
aam
dec
sbb
je
jmp
mov
mov
hlt
in
sub
rol
stos
pop
jge
xor
add
divb
pop
addl
bound
fsubr
sub
roll
gs
sbb
add
add
aas
sahf
xchg
xchg
inc
jo
inc
popa
es
push
das
adc
add
cli
jno
mov
xor
popa
inc
aas
fidivs
jae
icebp
mov
jge
bound
jb
push
inc
lods
pop
aas
rolb
lds
mov
std
push
imul
xlat
fsts
cwtl
shlb
sbb
xlat
pop
insl
clc
mov
mov
in
mov
mov
movsb
pop
xchg
dec
mov
xor
arpl
leave
xchg
adc
cmpsb
leave
sbb
push
dec
add
std
dec
xchg
roll
packsswb
enter
es
push
outsl
mov
pop
test
xor
jl
scas
test
adc
cltd
push
mov
dec
insl
pop
mov
pop
aaa
mov
retw
mov
jmp
call
push
popf
mov
add
xchg
pusha
pop
mov
xor
rcrl
adcl
and
xchg
xlat
pop
nop
mov
add
inc
rorb
dec
test
popa
orb
mov
aad
jns
jmp
mov
xchg
push
pusha
cmp
loope
dec
iret
jne
jne
cmp
lret
cld
mov
pop
sbbb
aas
jno
or
mov
push
add
int
push
in
movl
jl
aam
mov
adc
jge
mov
hlt
mov
cli
sti
outsl
mov
cmp
inc
pop
sbb
cmp
popa
loop
add
lret
insl
es
xor
xchg
js
jge
decb
nop
jecxz
push
push
enter
mov
test
int
mov
ljmp
add
jge
hlt
dec
sbb
fildll
cmp
enter
inc
bsr
scas
sub
sbb
push
out
mov
lret
xchg
adcb
lock
xchg
cmp
negl
stos
imulb
sub
in
cmp
xchg
xchg
sbb
ja,pt
stc
loope
test
and
aas
xor
pop
ja
push
cmc
mov
mov
and
jge
data16
or
adc
sti
jmp
cld
xchg
imul
or
inc
xchg
jl
push
nop
mov
sahf
xchg
scas
dec
mov
sub
lret
push
push
sub
pop
sbbl
popa
xor
loop
test
add
stos
out
mov
add
mov
call
inc
ret
add
popa
pop
and
dec
inc
and
add
dec
push
cmp
cmp
loop
cmp
cmpsb
mov
call
fs
pop
jo
or
inc
push
add
inc
push
mov
lds
mov
mov
xor
xor
dec
clc
xchg
jno
hlt
scas
ljmp
insb
addr16
adc
xchg
js
mov
dec
mov
fcmovbe
dec
mov
stc
sbb
lds
outsl
adc
xor
dec
inc
mov
jl
xchg
push
jg
call
cmp
dec
lock
loop
sbb
push
loopne
add
out
adc
clc
ds
mov
sahf
mov
or
ss
call
enter
add
cmp
ss
add
cmp
add
jo
ds
ficoms
sbb
js
sbbb
lock
sbb
adc
dec
adc
push
jg
lcall
popf
fadds
pop
xor
lret
push
testb
mov
ljmp
je
adc
addl
aam
sub
shlb
xchg
or
mov
js
mov
inc
xchg
pop
call
popa
in
add
adc
movsl
fcoms
js
bound
or
xor
ds
sub
scas
mov
xlat
xor
ds
rolb
out
or
push
pushf
push
int
add
and
and
ret
push
push
adc
adc
cmp
mov
add
xchg
imul
sbb
mov
fsubs
or
pop
sub
pop
mov
out
mov
fcomps
shl
pop
dec
stos
clc
or
cmpb
les
dec
ja
xor
or
jo
or
mov
pop
pop
lahf
popa
data16
scas
inc
and
pop
pop
mov
xor
cli
jmp
rorb
dec
data16
js
pop
xchg
sbb
xchg
xor
jecxz
mov
mov
lds
scas
dec
leave
jmp
push
into
pop
std
add
outsl
popa
lahf
xlat
xor
add
daa
xchg
les
fwait
dec
aas
or
mov
rol
mov
cmpsb
adc
pop
lock
mov
jo
rcrl
repz
mov
dec
xchg
je
xor
pop
adc
lcall
push
movsb
sbb
mov
mov
andl
les
jle
mov
sub
xor
cmc
mov
inc
es
das
mov
inc
lahf
and
lods
xor
roll
mov
in
shrb
xchg
test
lds
call
cmp
push
sbb
pop
pop
leave
aad
mov
test
test
faddl
dec
sub
aad
jg
sub
cmpl
push
rorl
or
enter
mov
xchg
and
ret
fiadds
adcb
jge
sub
add
mov
or
icebp
test
jecxz
mov
sbb
lret
push
setg
jecxz
and
sub
gs
mov
sbbl
aas
or
sub
adc
insl
dec
loope
fisubl
insb
inc
jns
mov
push
dec
and
lss
and
adc
pushf
jle
jae
out
mov
loopne
fdivs
dec
cmp
adc
mov
sbb
pop
push
shrl
je
lods
cwtl
cmp
loop
iret
repz
mov
rolb
clc
cltd
pop
pop
cmpsl
test
js,pt
add
mov
ja
jl
adc
ret
leave
imul
mov
out
pop
outsl
ficompl
aas
adc
ret
popf
pop
jns
pop
and
jl
mov
or
lcall
pop
test
popf
mov
shl
dec
fsubrl
icebp
insl
nop
cmc
dec
mov
adc
incl
test
test
dec
stc
mov
out
test
sub
dec
and
out
pushf
xor
rclb
mov
dec
ret
int3
jp
push
inc
out
popf
dec
in
pushf
pop
mov
sti
sti
mov
hlt
xchg
in
sub
mov
icebp
push
gs
jo
push
fldt
mov
lods
jg
mov
push
lahf
dec
cmp
repnz
lods
sub
xchg
insl
adc
xchg
inc
repnz
ljmp
mov
lds
repz
jb
pop
or
imul
jg
cmp
cmp
xchg
inc
hlt
mov
push
or
je
rolb
incl
mov
or
adc
fisttps
mulb
mov
lcall
enter
xorb
ja
or
dec
mull
dec
mov
es
sbb
cmp
in
lcall
or
rorb
lret
loopne
in
out
outsl
cmpsl
aas
or
rcl
adc
cld
lahf
decl
out
aaa
out
int3
lahf
adc
loop
clc
mov
mov
lock
mov
adc
outsl
es
xchg
inc
fstps
or
pushl
into
jl
pop
pop
cmp
xchg
sub
dec
std
stos
pop
or
mov
iret
jge
out
and
scas
dec
aaa
mov
xlat
int3
jb
enter
mov
call
push
pushl
push
lds
rcr
pop
sub
pop
mov
test
imul
mov
das
fimuls
movsb
push
add
test
dec
inc
ljmp
fistpll
add
jbe
mov
cmp
mov
add
fsubs
es
xor
jecxz
add
ljmp
lret
jl
xor
nop
ds
xchg
or
xor
sbb
lock
ljmp
pop
xchg
xchg
aas
pop
cwtl
cli
enter
sarb
inc
pop
fadds
fsubs
cwtl
sti
test
dec
jp
mov
jnp
cmp
in
mov
cli
or
out
xor
adc
or
aaa
mov
or
xchg
sub
leave
dec
lods
pop
or
jecxz
loope
push
insb
sub
mov
push
je
cwtl
fwait
and
xchg
mov
xchg
cs
scas
inc
push
aas
cmp
shr
push
adc
and
fistl
pop
stc
sbb
cmp
mov
fadds
push
cld
out
push
mov
dec
aam
and
lahf
jg
push
mov
adc
fwait
dec
clc
int3
aam
adc
mov
bnd
out
push
push
inc
xchg
add
mov
dec
insb
mov
jl
mov
test
out
arpl
test
or
xor
fsubrs
ret
cld
incl
or
jb
inc
lock
xchg
dec
or
jg
cmp
sub
and
add
mov
hlt
loop
shr
aas
fcomip
mov
ds
ja
mov
inc
adc
adc
sub
push
jae
sub
lods
push
ds
scas
ljmp
fisttpll
cli
aad
mov
out
imul
ljmp
fidivrs
jbe
pop
cltd
or
rorb
lcall
adc
xchg
jl
jmp
push
jp
je
push
iret
mov
sbb
pusha
mov
xorl
xlat
arpl
mov
add
movsbl
pushl
jnp
fadd
insl
and
adcl
test
out
ret
js
lcall
push
sub
nop
or
in
insl
rcrl
xchg
push
mov
fdivrp
cmpsb
arpl
jnp
fs
sbb
xchg
xchg
mov
adc
pop
test
jge
es
into
call
hlt
stc
stos
out
icebp
or
fisttpl
and
out
adc
lds
cmp
mov
jno
out
aas
push
aam
scas
loopne
push
pop
adc
mov
in
leave
pop
or
movsl
pop
je
sub
pop
cmc
scas
sub
jmp
imul
cwtl
jmp
pusha
push
int
lcall
test
jbe
sub
mov
push
sbb
pop
pop
add
je
pusha
or
out
pop
outsb
sub
daa
cwtl
popf
out
inc
outsb
sbb
loope
or
jb
dec
cli
repz
inc
jge
sbb
aam
sub
jnp
xor
jg
sahf
sub
adc
dec
inc
lock
outsl
mov
and
jno
aas
adc
mov
fcmovbe
ja
dec
jmp
or
adc
xchg
inc
jnp
cmp
rcrb
mov
xchg
les
aad
rclb
rep
inc
icebp
repnz
xchg
addr16
jns
enter
sarb
sub
mov
ja
mov
ret
in
stc
pop
es
add
jg
xor
ret
or
dec
pop
stc
cmp
int3
pop
mov
adc
ret
mov
push
cli
adc
pusha
incl
cmp
push
pop
add
or
sbb
daa
mov
out
xor
test
add
sbb
fdiv
add
and
or
sbb
pop
das
test
sbb
lahf
fisttps
xor
lock
flds
repz
lods
lock
cltd
adc
jo
gs
xchg
das
fisubrl
xchg
cld
jle
sbb
or
mov
test
jb
jecxz
jg
lods
pop
or
rorb
and
rolb
stc
adc
pop
call
pop
xchg
mov
dec
pop
lock
or
xor
cmpsb
dec
and
aas
jo
cld
or
daa
dec
test
sbb
mov
ljmp
lock
push
inc
dec
adc
adc
ss
cmp
orb
loope
fiadds
insb
xchg
sbb
cmp
loopne
lahf
stc
sbb
test
push
shlb
xor
in
ret
ret
jg
aas
loop
pusha
orps
or
xlat
and
add
data16
outsl
push
setb
test
loopne
pop
push
andb
clc
push
pop
and
jne
jne
cmpsb
mov
stos
popw
mov
sub
mov
into
fdecstp
lret
dec
dec
sub
sub
push
loope
cmp
pop
ja
or
jb
jmp
sub
lods
pop
sub
sbb
call
push
rorl
js
mov
call
jle
scas
cld
repz
pop
fsubl
movsb
out
fcompl
cltd
jecxz
cmp
or
or
adc
clc
pop
jbe
lcall
adc
xor
mov
mov
push
or
jecxz
daa
fistps
adc
out
cmp
aaa
pop
ret
mov
xor
dec
sbb
int3
arpl
xor
xchg
sub
loope
out
cmpsl
adc
or
mov
std
mov
ss
movsl
jl
jg
push
roll
mov
dec
mov
xor
lahf
mov
ds
ficompl
and
iret
into
cltd
adc
sbb
iret
jle
fildl
cmp
mov
sbb
jo
inc
or
mov
test
movsl
inc
loope
mov
in
sbb
shr
jno
mov
lock
jbe
aam
dec
sbb
outsl
ret
dec
loopne
je
push
mov
cmp
filds
mov
push
add
xor
js
push
mov
js
sbb
mov
sbb
or
hlt
xor
or
shll
ss
leave
xchg
inc
xlat
mov
cli
test
sbb
lcall
adc
jns
adc
in
jns
aad
jo
adc
outsl
clc
int
fnstcw
adc
out
lods
xor
lods
cs
cmpsb
aaa
cld
add
imul
dec
out
outsb
sbb
ror
or
cmp
repz
clc
add
mov
jle
imul
outsl
repz
ljmp
mov
or
adc
test
scas
inc
lcall
and
push
sbb
sbb
loope
rcrb
sbb
aas
lahf
pop
mov
es
adc
cld
lcall
xchg
dec
lock
test
or
mov
cmpsl
push
add
cmpsb
shrl
insl
push
test
setnp
xlat
cmp
push
mov
sbb
mov
in
lahf
lock
cmp
sbb
sub
pop
fwait
jg
shrb
and
test
sub
pop
stos
popf
ja
cld
jl
sbb
cld
sbb
test
push
out
mov
cmp
sbb
std
popf
test
decb
pop
mov
repz
jg
pop
je
add
push
call
aas
aas
sbb
add
or
subb
cmp
jp
les
test
mov
sbb
jecxz
jbe
push
loopne
test
jno
orl
repnz
add
xlat
mov
inc
adc
into
push
xor
push
xorl
scas
push
mov
xor
or
sbb
ljmp
clc
dec
rcl
call
outsl
cli
das
fs
inc
sbb
out
cmc
xchg
nop
int
sti
sahf
fs
cmp
lcall
and
fsubr
jl
out
or
jecxz
xchg
sub
clc
adc
ds
out
jmp
out
stc
jg
pop
dec
pop
ret
adc
xchg
push
repz
repz
loope
clc
or
mov
or
sbb
pop
aaa
mov
push
pop
jnp
in
xchg
das
popa
into
pop
adc
push
mov
and
ret
inc
cmp
pop
mov
push
icebp
or
mov
jne
push
ds
cld
sbb
jl
xor
cmpl
push
sub
inc
dec
mov
icebp
repz
daa
sbb
popl
test
push
repz
ds
test
mov
leave
adc
add
sbb
cmp
dec
push
data16
int
pushl
push
push
jp
cmpsb
es
in
outsl
pop
ret
test
jl
push
mov
insb
xor
dec
sbb
out
adc
mov
push
push
or
mov
fistl
sub
test
push
jns
in
sti
jb
stc
popa
dec
clc
cmpsb
outsl
clc
mov
adc
je
aad
in
cmp
ret
dec
inc
inc
mov
pop
aas
jnp
test
imul
cmp
imulb
inc
push
or
push
push
xchg
jo
icebp
cs
push
cld
shll
jp
sub
push
mov
xor
push
adc
adc
mov
mov
inc
lret
paddb
aaa
or
cmpsb
push
push
sub
jns
or
out
ret
dec
push
in
loope
mov
adc
adc
outsb
push
mov
outsb
in
inc
fld
outsb
or
enter
lret
adc
xor
cmpsl
ss
adc
andb
add
aaa
cltd
idivl
adc
mov
sub
int
mov
int3
pop
sbb
push
sahf
loopne
cli
outsl
mov
xor
lcall
cmpsb
push
jae
push
repz
or
cmp
or
cltd
outsb
or
push
dec
out
unpcklps
jo
mov
xor
push
mov
ja
cltd
roll
push
pop
in
loope
sub
pop
idivl
dec
pop
or
adc
cmpsl
out
and
sbb
lret
mov
dec
sbb
sti
outsl
in
cwtl
fs
xchg
xor
cmp
xor
adc
xchg
adc
shrb
sbb
dec
adc
ret
loope
mov
sub
sub
add
incl
stos
repz
int
sub
xchg
mov
xchg
stos
cmp
std
cmp
negb
frstor
mov
daa
lods
mov
mov
enter
insb
sbb
iret
jge
lock
sbb
jg
and
jae
cld
daa
shl
mov
dec
sbb
iret
mov
dec
hlt
add
loope
sbb
lret
sarb
divb
nop
scas
fwait
int
pop
or
rcrl
es
xchg
pop
adc
leave
xor
cltd
dec
ja
xchg
in
cmpsb
jbe
pusha
repz
sbb
popa
mov
mov
xchg
fwait
enter
loopne
mov
mov
test
hlt
sbb
outsl
popf
cwtl
sbb
outsb
sbb
in
push
rcr
jbe
jnp
mov
mov
cltd
jo
jmp
inc
out
popf
xor
stos
out
inc
or
jno
popf
jle
mov
lret
add
aam
sbb
inc
sti
repz
ss
repnz
add
sub
outsb
mov
or
mov
jle
in
or
decb
or
mov
xchg
or
add
push
add
add
clc
push
das
fidivs
loope
inc
xlat
pop
int3
ja
jge
cwtl
dec
pop
or
mov
repz
sbb
or
xor
sub
cwtl
xor
ss
inc
mov
insl
cmpl
mov
popa
fst
lret
sbb
or
xchg
jns
pop
stc
jo
cld
jo
pop
arpl
aas
int
or
hlt
iret
ljmp
dec
jae
shlb
xchg
stos
jle
dec
dec
movsl
xchg
push
fadds
inc
jl
or
mov
or
xor
jle
outsl
add
ds
aaa
jmp
xchg
insb
sti
mov
mov
in
cld
data16
scas
pop
es
push
cmp
andb
insb
jo
mov
jbe
les
fwait
push
movsb
dec
mov
notb
call
test
pop
imulb
cltd
or
ljmp
outsl
jbe
sti
xor
pusha
ljmp
dec
cld
and
mov
xor
call
or
add
mov
mov
mov
cmpsl
ds
popa
adc
das
in
daa
sub
dec
cmp
shl
in
out
mov
jnp
fisubrs
sti
xchg
out
adc
das
in
mov
orl
inc
mov
xor
fimuls
mov
jmp
popf
add
mov
dec
je
cwtl
sub
cld
cs
pop
imul
xchg
out
sub
addr16
jg
mov
adc
or
pushf
loope
adc
hlt
test
out
mov
leave
pop
jle
push
cmp
pop
shll
mov
repnz
and
loope
inc
scas
cld
mov
mov
aam
sbb
aad
add
adc
sub
xor
cmp
push
loope
pop
xor
mov
jg
iret
arpl
cltd
jo
push
and
out
aaa
push
mov
xchg
adc
sub
or
inc
test
stos
adc
jmp
pop
xlat
inc
mov
mov
fs
inc
iret
cmp
fcompl
xchg
adc
and
jbe
aam
cltd
divl
pop
cmp
push
fcmovnu
cmc
ret
jg
and
mov
int
jle
not
pop
aam
jg
sub
hlt
fisubrl
out
push
xchg
inc
fsubl
mov
cmp
fsubp
jp
fisubrl
imulb
jmp
cld
mov
fadd
xor
mov
fwait
not
xchg
stos
lret
shl
fisubl
sub
aaa
outsb
inc
push
push
or
movsl
cmp
jge
mov
sub
subl
ds
cld
lret
icebp
cmpsb
mov
vpmacssww
cmpsb
incl
adc
shll
jns
and
mov
fsubl
lret
sub
outsl
loopne,pt
out
pushf
sbb
sarl
jmp
pop
cmp
jl
jo
and
pop
orl
out
gs
cs
cmp
jmp
jg
scas
pop
fcmovne
jbe
mov
ss
push
jge
pusha
inc
mov
fimuls
dec
sbb
xchg
push
xor
mov
incl
dec
or
lods
lds
push
std
test
aam
jge
lods
sbb
sbb
mov
divb
dec
jbe
cmp
aaa
loop
xor
test
imul
mov
lret
es
scas
in
or
cmpsb
sbb
lock
loopne
cli
cwtl
sbb
std
aas
pop
ljmp
mov
imul
adc
out
pop
outsl
and
fisttps
xchg
imul
fadds
push
jne
xor
pop
or
int
sub
and
jecxz
popf
inc
adc
stos
je
movsl
lods
push
adc
jl
inc
mov
data16
in
mov
xchg
mov
cltd
imul
ret
fsubrl
adc
jbe
add
test
push
jmp
les
mov
jb
hlt
aad
or
pop
js
cmpsl
popl
mov
rclb
int
aaa
arpl
cwtl
mov
push
gs
incb
add
enter
enter
cmp
pop
or
mov
in
lcall
cmp
insb
int
or
mov
insb
pop
cmp
cld
pop
add
stc
cmpsl
dec
pop
loopne
out
push
js
popf
jo
sbb
adc
or
sbb
cld
jmp
jge
mov
push
dec
rclb
faddp
cmp
int
adc
xchg
sbb
sub
dec
xor
mov
aaa
insb
rcrb
lahf
ret
popf
xchg
jo
icebp
lahf
pop
cli
sbb
insl
pop
lret
mov
lods
pop
fists
ja
ds
jecxz
mov
into
mov
and
mov
dec
fnsave
imul
fstp
scas
sbb
push
incb
rcll
cld
imul
scas
pop
inc
sbb
xchg
shrb
or
repz
adc
xor
filds
push
lock
mov
jp
mov
sbbl
loopne
mov
jg
daa
out
es
lret
aas
pushf
jecxz
std
out
adc
adc
jp
fbld
xor
int3
jp
sub
dec
xchg
and
es
addr16
es
fwait
xor
stos
loop
xchg
fcomps
jnp
in
jo
sbb
je
jle
flds
dec
cld
pop
jg
adc
sbb
fisttpl
adc
subb
inc
insb
enter
inc
pop
xor
xor
dec
mov
sbb
sarb
call
or
out
test
pop
mov
pop
sub
mov
inc
ret
fcomip
push
xorb
xlat
das
xor
xchg
or
int
mov
outsl
push
mov
dec
jl
mov
imulb
mov
insb
ss
dec
nop
aad
arpl
ficoms
sub
insl
icebp
clc
xor
cmp
aas
cltd
mov
and
ljmp
jbe
xchg
arpl
jg
fmuls
or
mov
xor
mov
addr16
arpl
jnp
lock
mov
repz
sarb
aaa
out
cli
or
and
and
pop
or
jle
sbb
jecxz
xor
cltd
out
xor
lods
mov
cwtl
xor
inc
fldl
xor
aaa
ret
or
data16
ret
aas
jle
cwtl
add
cmp
push
xchg
adc
jecxz
or
mov
push
add
pop
and
iret
out
std
orl
cmpsb
push
sub
xchg
sbb
in
cli
aas
mov
call
mov
mov
cmp
adc
inc
scas
ds
leave
xchg
bound
dec
scas
or
push
es
mov
push
fsubrp
cli
mov
insb
sbb
cmp
iret
in
in
adc
inc
fstpt
fwait
xchg
aaa
lods
lock
jo
loop
adc
mov
popf
mov
data16
arpl
fsubs
sbb
mov
lret
jg
jae
cld
sbb
adc
pop
add
dec
aaa
fistpll
rol
cmp
daa
es
dec
ja
rcrb
mov
pop
cmp
mov
push
std
jmp
push
test
repz
shr
push
insl
jne
aam
or
lea
mov
sti
or
jbe
roll
sbb
daa
test
mov
xor
clc
pop
aaa
popa
iret
inc
popf
push
add
dec
rcl
sub
cmpsl
or
mov
jle
push
sbb
loop
in
mov
dec
jg
add
sbb
ss
mov
jmp
adc
pushf
adc
mov
fs
jnp
scas
add
fs
sbb
inc
stos
add
std
inc
ds
cmp
shll
loope
fiadds
inc
jb
sub
xor
fbld
scas
mov
cmp
je
mov
push
or
stos
and
lods
pop
sub
sbb
clc
das
cld
addb
or
int
mov
add
adc
pusha
std
aam
jp
xor
fsubl
iret
popa
ljmp
loopne
mov
and
lret
sbbb
mov
clc
mov
cmp
nop
fcoms
jecxz
dec
or
ds
mov
dec
xchg
fs
test
mov
jo
push
pop
ret
sbb
mov
in
pop
fimull
and
lds
scas
adc
cld
ja
lret
pop
sub
mov
ret
sub
jae
inc
cld
cld
lock
in
mov
or
or
test
call
andb
cmp
sbb
mov
jbe
pop
mov
adc
add
xchg
xor
nop
insb
add
or
cmp
push
xor
repz
lahf
adc
mov
cmpsl
dec
fwait
push
shlb
dec
repnz
sbb
test
xor
and
ljmp
cld
inc
lret
adc
fisubrs
lods
repz
inc
push
cmpsl
jge
pushf
lcall
adc
sub
out
or
or
pop
push
push
ret
je
mov
and
out
fwait
into
aas
cmp
dec
pop
loope
and
imul
dec
mov
popf
je
movsb
add
pop
movsb
rcll
cli
cld
mov
fmuls
push
nop
mov
mov
push
add
mov
and
jg
mov
fwait
daa
call
je
mov
fwait
out
mov
inc
movsl
dec
test
pop
aaa
sbb
test
stos
lods
dec
adc
lcall
mov
shrl
mov
cld
call
test
push
lret
pop
jge
lret
mov
out
xor
idivl
push
mov
and
test
adc
iret
scas
add
int3
add
xchg
stos
pop
lock
popf
jno
inc
or
mov
insb
dec
icebp
sbb
inc
xchg
cmpsb
gs
mov
loop
push
mov
xor
das
lahf
hlt
jl
jge
rclb
nop
lods
jb
push
push
rolb
mov
fcmovne
out
les
fwait
push
sub
cli
push
mov
into
jl
movl
pop
or
sbb
mov
push
adc
ds
enter
fwait
jne
loop
push
cmp
test
clc
jle
imul
es
xchg
jbe
mov
ds
repz
push
or
fwait
dec
loop
rclb
jle
add
repnz
cltd
cmp
mov
loopne
in
fs
fstps
pop
cmp
or
or
roll
popf
jbe
pop
or
cmp
dec
sbb
data16
repz
jnp
cld
jno
pop
sbb
or
repnz
sbb
repz
adc
lds
or
push
in
sahf
out
jg
and
inc
sbb
jne
out
jmp
rep
adc
leave
icebp
mov
sbb
dec
sub
pop
je
inc
mov
jmp
cwtl
pop
ret
xchg
out
push
outsb
insb
cltd
rolb
jbe
iret
aam
test
mov
mov
lea
xorl
or
leave
mov
rcll
int3
jb
sub
daa
dec
addb
jg
and
outsl
lods
adc
lahf
push
jle
inc
push
sub
pushl
repz
scas
mov
adc
test
ret
insl
ret
mov
aaa
shl
jo
shlb
repz
sbb
cmp
cmpsl
jno
leavew
mov
js
mov
and
mov
push
lods
fidivrl
shlb
sub
inc
cwtl
stos
or
imulb
daa
fisttpll
hlt
push
push
mov
lcall
cmc
xchg
mov
push
iret
decl
mov
xchg
xor
push
add
inc
mov
adc
add
sub
les
mov
loope
fcomip
icebp
push
push
fadds
in
xor
outsb
mov
mov
lret
loop
test
cmp
pop
or
mov
movsb
jp
lahf
icebp
add
test
dec
cwtl
outsb
and
jl
mov
adc
sub
mov
sti
js
mov
inc
ret
addl
mov
std
add
jmp
repnz
push
fsubl
cld
rcrl
subl
rolb
dec
cmpsl
inc
or
jae
int
inc
adc
xchg
outsl
sbb
lock
inc
aaa
sbb
sub
cmpsb
jmp
dec
fildll
dec
dec
sub
mov
ljmp
pushl
jg
inc
clc
rol
cmp
cwtl
scas
push
jge
fcompl
ss
mov
add
inc
mov
iret
clc
out
cmp
in
sbb
ljmp
xor
outsb
pop
sbb
ds
xchg
test
in
cmp
das
orl
aas
icebp
testl
cwtl
sbb
mov
or
stc
out
test
fnstcw
in
mov
imull
out
push
jl
fimuls
insb
pop
aad
js
pop
push
or
dec
mov
mov
pop
adc
daa
dec
mov
pusha
ss
sbb
mov
and
fnsave
dec
cmp
dec
popf
adc
lock
pop
pop
fstpt
jne
pop
jge
dec
mulb
rol
lods
sub
addb
push
cli
cmp
mov
or
and
aaa
shrl
jo
movsb
mov
jno
jmp
adc
inc
lcall
adc
mov
nop
stos
pushl
ja
push
add
xor
pop
sub
mov
shlb
aaa
ss
xchg
shlb
ficoml
jg
lahf
rcll
and
ds
pop
pop
outsl
mov
fs
pop
dec
in
jl
pop
repnz
cmp
aad
mov
add
inc
pop
les
mov
subb
rcrb
mov
addr16
popa
push
repnz
aam
cmp
stos
or
jecxz
sbb
cmp
adc
xchg
ds
dec
mov
push
dec
rcrb
xchg
enter
push
xor
jnp
adc
fwait
inc
leave
adc
repz
jns
fistl
mov
mov
es
xchg
pushf
out
repz
gs
mov
mov
jg
xorl
xchg
pusha
lock
int3
dec
adc
mov
ja
lret
dec
enter
sbb
lock
adc
imul
mov
mov
sbb
cwtl
testb
mov
iret
lods
es
and
mov
mov
nop
and
pop
xchg
or
daa
std
es
xor
mov
and
mov
jmp
pop
outsb
test
xchg
daa
bts
shll
cmp
sbb
rolb
cld
fmuls
pop
mov
lret
mov
xchg
sub
cmp
mov
sub
lret
mov
das
insb
sarb
dec
cmp
inc
xor
or
pop
xor
mov
outsb
xchg
subl
mov
inc
xor
sbb
std
mov
out
subb
scas
pop
jp
add
rcr
cmp
sti
es
dec
lahf
sub
cld
pop
or
cmp
pop
or
lahf
push
stos
js
pop
mov
pop
jle
out
cmp
mov
orb
jl
data16
or
test
cmpsb
jg
outsb
repnz
add
aad
stc
pop
dec
pop
cmp
mov
xor
pushf
xchg
push
xor
sbb
mov
inc
in
fbld
cmpsl
xchg
or
inc
mov
sbb
jmp
out
inc
repz
jbe
fdivrs
dec
jo
mov
and
fdivrp
lcall
jmp
sbb
mov
das
ss
test
shll
imul
xchg
push
arpl
popa
xor
call
inc
cmpl
stos
push
ljmp
and
in
or
inc
out
sbb
add
xor
je
xor
sti
test
pop
stc
cs
dec
xor
pop
mov
sbb
or
ss
push
fisubl
jge
mov
iret
pushaw
mov
ret
mov
push
sub
xor
cli
lods
mov
jg
inc
andl
sub
sub
adc
pop
inc
jp
fdivs
inc
adc
xchg
sub
inc
and
scas
jg
sbb
shll
push
adc
les
sbb
xchg
lea
mov
mov
insb
cmp
es
mov
xor
js
adc
inc
in
aaa
jle
lret
or
lcall
push
js
dec
dec
fisubs
sub
cmpsl
adc
lock
in
add
jg
outsb
mov
fdivs
dec
jo
rclb
je
sar
adc
push
lods
shll
dec
jecxz
outsl
clc
lods
sbb
cwtl
jle
into
call
bound
push
out
xor
scas
imul
mov
mov
call
mov
fdivrs
mov
negl
sub
dec
inc
mov
xchg
les
icebp
mov
imul
sbbl
and
out
popa
cli
mov
mov
sbb
in
sbbl
cmp
mov
lcall
xor
mov
sbb
outsl
cli
orb
adc
test
test
test
mov
mov
outsb
test
stc
xor
sbb
out
in
cmc
push
stc
fs
add
adc
in
shrb
jo
cld
inc
in
inc
mov
icebp
cwtl
jns
filds
lahf
decb
push
stos
aam
cmpsb
iret
in
jle
cld
adc
leave
or
inc
pop
mov
out
bnd
popf
clc
mov
fstl
addb
inc
sbb
push
ret
jns
push
mov
inc
lea
std
addr16
fisubrl
lret
xchg
sub
or
movsl
cmp
pop
xchg
pop
add
sbb
sbb
cwtl
ja
lahf
out
jp
fcoms
lret
jmp
or
popf
enter
sti
stc
test
sub
sub
xor
fisubs
jp
rsm
bound
rcrl
mov
push
stc
iret
popf
dec
in
push
push
mov
cli
int3
lret
pushf
sub
mov
std
push
mov
mov
stos
fs
pop
push
fstpl
cmp
ja
repnz
adc
and
add
mov
jmp
ljmp
dec
test
lahf
or
sbb
roll
inc
push
xchg
add
loopne
jle
or
or
sbb
xor
shrb
aam
loop
jo
mov
push
mov
gs
ja
mov
es
push
or
mov
int3
cli
push
cli
aad
xchg
or
mov
cld
cmpsl
into
repnz
aas
push
mov
adc
or
jg
stos
mov
sarl
vpmadcswd
shlb
ds
fsubs
mov
stos
and
into
jmp
lock
test
rcr
pop
cmpsb
hlt
jl
ret
mov
pop
incl
scas
out
inc
outsb
push
pop
out
movsl
jge
adc
pop
fwait
out
cmc
pusha
shll
imul
inc
lds
rclb
sub
faddl
and
cmpsl
lea
mov
mov
fs
pop
mov
mov
ret
rcrb
mov
repz
xor
mov
fldenv
scas
pop
fucomip
pop
lret
sarb
js
es
mov
add
push
rcl
jns
mov
inc
lret
aam
in
fwait
dec
dec
aas
adc
sub
xchg
loopne
stc
out
push
mov
mov
les
out
push
mov
jp
inc
jl
loopne
ljmp
js
mov
or
xchg
push
pop
outsl
subb
and
cli
jle
ds
jg
popf
sbb
jp
cmc
ret
mov
cld
jg
sbb
mov
sbb
pop
std
add
ficompl
lods
inc
cld
scas
jmp
lahf
dec
push
fimuls
int
test
test
inc
jnp
mov
inc
lret
adc
dec
clc
stc
bnd
xor
push
inc
mov
sbb
cmp
inc
sarb
lret
test
outsb
and
cmpl
push
sub
outsl
lret
js
ljmp
dec
fstpl
adc
ds
jecxz
inc
pop
dec
xor
mov
add
push
stos
mov
sti
adc
cmp
fcompl
cmpsb
test
stos
mov
jmp
arpl
mov
or
jbe
shl
bound
mov
popa
or
aaa
stc
xchg
pop
call
incl
push
sub
cmpsl
js
jae
lds
mov
mov
aad
cmp
inc
hlt
pop
ss
aas
popa
bound
jg
xchg
rorb
pop
dec
insb
cmp
fdivs
inc
js
dec
rolb
push
jmp
jbe
outsb
jg
js
pusha
aas
clc
xorb
in
sub
rorl
xor
rorl
add
call
and
inc
xor
mov
xor
jns
shll
cld
mov
or
mov
stos
jns
add
cs
mov
sarl
shrb
mov
je
dec
stos
push
pop
rcrl
sbb
rcll
sbb
pop
inc
mov
das
test
mov
nop
jae
arpl
rcll
daa
sbb
cld
stos
pop
xor
lock
les
out
cmp
out
and
inc
loopne
add
lock
sbb
adc
daa
icebp
xchg
sbb
adc
jb
jbe
movsb
in
rorb
data16
repz
or
mov
push
add
mov
mov
insb
decb
push
mov
and
loope
add
mov
insl
add
push
xlat
cwtl
das
aaa
out
mov
outsb
adc
lret
jns
push
loop
fisubl
sbb
sub
mov
pushf
jmp
sub
fs
sbb
add
push
adc
jo
rcr
filds
mov
pop
lods
push
dec
push
test
xchg
fwait
je
loopne
popa
push
repnz
test
pop
inc
jne
and
mov
daa
cs
repz
push
cltd
jbe
data16
dec
cld
lret
clc
stos
lahf
sbb
lret
gs
mov
add
pusha
pop
mov
aas
mov
jns,pt
add
inc
adc
and
add
mov
cmp
sbb
xchg
orb
fwait
lcall
or
dec
in
mov
fs
aad
push
sub
adc
cli
or
sbb
lock
popf
jmp
pop
add
mov
pushf
mov
xor
mov
push
jecxz
cmp
sbb
inc
sti
mov
and
dec
inc
xchg
roll
pushf
jg
push
mov
sub
aad
fwait
or
enter
roll
out
and
adc
int3
ss
mov
rcr
outsl
test
js
cmp
inc
ja
adc
and
aaa
ljmp
aam
or
scas
punpckhwd
sub
or
adc
xor
dec
pop
and
mov
cmc
loop
std
es
cld
mov
lcall
outsl
and
popf
ret
shlb
mov
and
aam
addr16
aam
jecxz
lcall
mov
dec
mov
fisttps
jnp
loopne
test
dec
push
ret
xchg
mov
clc
mov
mov
pop
and
fbld
inc
adc
pop
sub
jle
jg
test
push
xchg
pop
enter
and
mov
inc
fidivl
out
test
pop
add
loope
pop
adc
mov
fists
or
fwait
mov
sub
sbb
lcall
mov
outsl
adc
push
hlt
not
inc
in
test
filds
decl
mov
add
adc
or
sub
cmp
movsl
inc
mov
out
cmc
adc
mov
test
sub
lret
cmpsl
xchg
sub
popa
fidivs
ja
ds
mov
ds
inc
test
adc
aam
inc
jno
xor
mov
aas
out
daa
push
xchg
inc
pop
dec
jmp
arpl
xor
sub
dec
test
out
pop
and
cmp
scas
cli
inc
mov
or
ljmp
stos
inc
push
add
pop
and
cld
js
int
lock
loope
into
cwtl
jo
std
xchg
adc
les
or
insb
mov
cmp
ret
push
lret
clc
cmc
mov
out
ret
ds
or
jo
cld
lds
std
out
pop
mul
addr16
and
push
xor
test
add
idiv
sbb
xchg
imul
pop
cmpsb
jmp
mov
hlt
mov
jecxz
dec
loope
fs
decl
inc
cmp
jne
into
mov
fdivrs
sub
jmp
in
mov
pop
xor
mov
ret
push
pop
push
js
jg
shlb
loope
mov
inc
ds
xlat
sahf
sbb
push
lods
push
push
adc
mov
push
xor
repz
mov
push
adc
int3
outsl
es
loop
mov
jnp
mov
iret
adc
or
push
cwtl
xchg
ds
xor
arpl
push
add
clc
mov
jns
scas
in
jge
add
cmp
push
call
fdivp
addr16
je
faddp
imul
scas
in
roll
add
jmp
cld
dec
loop
dec
or
lock
xor
movsl
daa
or
xchg
pop
bound
mov
lods
adc
movsb
imul
lock
cltd
test
daa
xchg
or
int
rcl
stc
sarb
jl
daa
test
out
dec
mov
sbb
popf
fsub
loope
jge
push
or
dec
mov
jg
ret
xor
sub
sub
sub
gs
dec
je
insb
ret
cmc
sbb
inc
cmp
outsl
xor
adc
jg
lahf
lahf
cwtl
std
inc
xchg
xlat
sub
std
adc
push
push
xlat
bswap
adc
pop
pop
cmp
xchg
add
imul
lahf
xchg
cwtl
dec
add
cld
xor
add
sbb
lea
fadds
arpl
inc
xor
adc
pusha
xor
daa
ret
faddl
std
aas
icebp
lret
inc
mov
mull
lods
inc
clc
dec
xchg
popa
mov
dec
xchg
int3
loop,pt
pusha
jbe
cmc
aaa
sbb
pop
jbe
add
out
outsl
fidivrs
xchg
je
mov
lods
mov
or
jnp
div
fwait
mov
pop
mov
mov
outsl
popf
enter
leave
push
sbb
mov
fwait
iret
mov
or
out
insl
sar
dec
lret
adc
xchg
add
mov
pop
adc
or
fwait
pop
xchg
xor
lods
out
adcb
std
add
dec
fidivrs
lret
mov
out
aaa
sti
cmp
jecxz
lret
pop
mov
call
call
adcb
sub
sar
dec
clc
es
mov
cmpl
jp
mov
jg
dec
imulb
xchg
ja
mov
xor
loopne
add
iret
and
dec
fcmovbe
or
rclb
jbe
cmp
aas
pop
jbe
test
daa
jl
addr16
movsl
test
push
into
sbb
repnz
ss
add
sbb
jns
pop
hlt
shrl
lods
mov
orl
xor
mov
cmp
dec
adc
rcrb
ss
aam
std
xchg
dec
std
mov
xor
add
sub
outsb
ret
mov
out
popa
jbe
fldcw
jl
call
lods
popa
int
loop
jl
and
nop
mov
adc
xor
es
pop
pushf
not
sbb
add
movsb
sub
sbb
imul
cs
lods
mov
cld
jl
or
pusha
je
ljmp
gs
hlt
jp
and
add
push
cltd
sbb
dec
sbb
xor
mov
push
outsl
out
test
lcall
popa
xchg
orb
in
add
lods
jb
shlb
xchg
mov
sub
stos
mov
mov
pop
mov
fs
and
or
movsl
push
lods
adcl
iret
dec
push
shl
push
clc
xor
aaa
mov
test
jp
test
dec
inc
pop
repz
adc
stos
divb
clc
cmc
mov
adc
pop
subl
icebp
mov
scas
push
lret
mov
adc
or
jp
aad
cmp
jnp
pop
insb
jle
push
xorb
add
decb
es
adc
mov
outsl
jge
aad
es
pop
jl
cmp
lcall
ds
mov
xor
mov
js
shr
and
adc
arpl
lds
roll
call
stos
fdivrs
adc
hlt
incl
mov
sahf
fucom
mov
add
imul
xchg
jo
dec
iret
stos
shrl
cli
sbb
or
icebp
xor
mull
jbe
mov
repz
decl
into
cmp
mov
mov
or
cmp
int
rcrb
or
mov
inc
ficoms
dec
add
out
ljmp
jo
shl
lea
leave
fmul
jb,pt
adc
mov
les
sbb
mov
sub
repz
ja
in
xor
push
mov
xor
add
dec
fwait
mov
sub
nop
fldenv
cmc
sub
lock
mov
sub
cmp
cvtpi2ps
ljmp
mov
xchg
xchg
ljmp
add
jge
jl
and
sbb
xor
sbb
cmp
test
cld
dec
ss
stos
pop
or
int
jae
addr16
xchg
ljmp
jle
cld
hlt
mov
sbb
and
fs
je
dec
and
scas
jns
fs
loop
cmpsl
pop
mov
insb
es
dec
sub
adcb
cwtl
mulb
lock
mov
dec
hlt
cmp
xor
ss
pop
pop
xor
dec
in
insb
jmp
xor
mov
inc
xchg
sbb
orl
push
mov
jle,pt
push
ja
mov
enter
repnz
jbe
push
fidivl
cli
lods
fimuls
inc
sti
aam
jnp
jge
inc
addr16
loope
jns
lahf
mov
aas
mov
lret
sbb
xchg
test
add
mov
jp
loope
push
cmp
mov
xor
mov
bound
mov
gs
adc
push
mov
daa
push
repnz
pop
aam
rorl
cld
pop
lock
pop
pushl
mov
mov
sub
shl
jg
aad
mov
jg
dec
mov
outsl
movb
xor
fists
scas
pop
hlt
and
push
jle
loop
arpl
daa
mov
jo
cwtl
add
add
push
es
sbb
xchg
aas
add
xor
rolb
inc
leave
fimuls
test
jbe
je
xlat
sti
cmp
or
ret
ss
push
xor
sbbl
add
sbbb
or
push
pop
mov
mov
xchg
out
out
aaa
adc
push
andl
inc
sbb
add
mov
adc
mov
jecxz
adc
repz
mov
pop
jne
add
popf
jle
mov
bound
pop
out
jno
cld
scas
pop
dec
mov
in
sub
adc
divb
mov
sbb
xor
or
inc
inc
adc
movnti
inc
pusha
mov
xor
jmp
jl
cmp
mulb
mov
lahf
sbb
lock
aaa
call
cwtl
cmp
pop
fdivrl
jno
pushf
cmpsb
call
dec
mov
call
or
popf
dec
loopne
dec
jo
bound
xchg
pusha
mov
fcmove
mov
lods
sub
outsl
jbe
adc
mov
push
dec
incl
xchg
dec
pop
popf
ljmp
add
cld
mov
sub
xchg
ret
and
mov
inc
add
pop
mov
mov
sbb
or
mov
stc
jg
xchg
out
push
jecxz
inc
add
and
rorl
sbb
cld
pop
cmc
int
fabs
rcl
bound
xor
or
and
xchg
clc
inc
lret
dec
cmp
loopne
xchg
inc
xor
or
ficoms
mov
movsl
lock
aas
call
mov
fucomp
pusha
dec
or
pushf
mov
out
cld
cmpsl
rclb
lret
xlat
dec
loope
ret
lea
mov
hlt
adc
js
loopne
loope
xchg
stos
cld
push
pop
lods
mov
xchg
or
in
inc
das
jl
adc
loopw
fdivp
dec
mov
ror
xor
mov
clc
aad
xchg
mov
int
in
xor
lahf
aaa
sbb
std
jle
xor
cmp
jle
xor
popf
or
sarb
scas
pop
hlt
xchg
dec
xor
xorl
adcb
les
es
sbb
loope
pop
jp
imul
jne
cwtl
bswap
lock
cmp
repnz
dec
sar
fbstp
test
stos
repz
adc
pop
cld
and
push
in
subl
lret
iret
mov
sub
ds
adc
pusha
and
mov
data16
xor
js
incb
add
jl
repz
out
adc
cs
push
mov
clc
or
mov
jg
out
aas
add
xor
aam
pop
sub
mov
fdivrp
lea
xor
addr16
lds
pop
mov
jecxz
mov
mov
std
iret
jle
sub
out
out
test
pop
fistps
mov
mov
fs
pop
or
mov
clc
ja
cwtl
xchg
dec
fiadds
repz
out
cli
xchg
lds
call
sti
mov
clc
ja
daa
icebp
pop
dec
sbb
sbb
inc
dec
xchg
paddb
call
fsubrl
cmp
inc
loopne
lock
or
test
push
repnz
test
cld
mov
bnd
dec
mov
xor
sub
cmp
outsl
pop
mov
sbb
jp,pn
leave
pop
ret
outsl
out
mov
cld
fadds
sbb
xor
jo
bnd
cwtl
or
pop
movb
rep
cmp
cld
cs
xor
mov
jecxz
fsubrl
sub
outsb
pop
fisubrs
fiadds
fsubrs
mov
add
mov
js
pop
lds
mov
cs
and
lret
mov
inc
ret
je
or
sub
or
dec
shlb
sub
cltd
fisubrs
and
test
push
insb
jg
call
lret
pmullw
jg
std
or
lret
xor
fistpll
lret
lret
lcall
fs
adc
outsl
hlt
call
out
xor
rcrb
shll
mov
fadd
push
add
std
mov
jl
jge
xor
pop
xchg
test
mov
adc
test
sub
xor
jb
fstl
pusha
cmp
popf
clc
cmpsl
faddp
pop
jne
mov
repz
pop
stos
mov
xchg
insb
inc
add
nop
and
rorb
xor
ja
and
outsb
inc
cmpsb
xchg
lahf
hlt
sahf
cmc
xchg
fwait
inc
dec
push
mov
and
mov
fisubs
jne
daa
mov
addr16
out
daa
sbb
mov
fucomip
movsb
mov
sub
xor
rol
mov
and
xor
out
int3
pop
loop
sub
adc
push
mov
icebp
aad
push
movsb
adcl
mov
imul
movsb
xchg
dec
mov
jge
arpl
sbb
hlt
pop
sarl
cmp
shrb
jecxz
stos
pop
and
sub
scas
inc
pop
xchg
gs
mov
mov
icebp
push
cld
ret
dec
mov
cmp
call
rorl
fsubs
je
push
add
insl
jbe
and
outsb
ficompl
lcall
jmp
fimull
cltd
notb
int
mov
cmc
mov
movsb
mov
out
lock
outsl
clc
adc
lcall
mov
push
sub
mov
je
cli
sbb
or
adc
dec
cmp
dec
rclb
sub
mov
test
xorl
xchg
mov
mov
mov
and
jecxz
or
jecxz
inc
ds
pushl
jbe
push
pop
cwtl
test
pushf
dec
in
aas
aaa
jmp
es
test
inc
mov
dec
call
cmp
or
mov
idiv
subl
ja
adc
shl
inc
gs
pop
cmp
test
data16
aas
fbld
dec
and
mov
mov
mov
jo
sbb
sbb
cmp
sarb
push
in
popa
clc
xchg
cmc
cwtl
sbb
xor
jnp
jbe
jmp
cwtl
sbb
add
mov
lods
es
inc
adc
aam
fwait
iret
push
ret
or
test
jg
movsl
mov
mov
jp
xor
adc
clc
insl
stc
loope
sbb
std
mov
ds
lods
cmp
add
dec
jecxz
lret
mov
jne
fsubp
fmuls
in
mov
mov
push
into
push
add
ret
sbb
fsubr
push
lahf
xchg
ret
mov
lock
inc
mov
cmc
data16
push
insb
test
repnz
cld
xchg
or
xchg
add
mov
xchg
push
adc
pop
mov
cmpb
inc
inc
adc
pushl
movsb
jmp
pop
insb
movsb
jmp
adc
fimull
popf
mov
cltd
xchg
mov
cmp
push
adc
cmp
aam
in
lss
out
xor
jnp
fimuls
lret
insb
mov
sub
or
out
bound
mov
in
or
xor
jb
cli
cwtl
dec
movsl
pusha
clc
mov
inc
pop
or
cld
xchg
fwait
stos
scas
fs
sub
xlat
loope
loopne
xor
push
sarb
and
xor
pop
jle
dec
ja
jg
cmpb
xchg
cmp
call
and
adc
push
mov
shrl
mov
in
xor
xor
iret
mov
ljmp
std
jmp
push
mov
cli
ja
mov
fsubl
mov
dec
clc
xorb
pop
inc
mov
mov
mov
lret
mov
fdivl
enter
sub
imul
dec
push
clc
sub
leave
mov
add
or
outsb
fdivrp
or
mov
jp
and
mov
mov
mov
mov
xchg
dec
cmpsb
stos
xor
orb
mov
test
mov
push
pop
pop
or
xlat
call
sub
icebp
push
out
decl
adc
outsl
aaa
in
pushl
in
jg
jecxz
mov
adc
xchg
xor
inc
rclb
adc
or
outsb
xor
sbb
repnz
lock
jmp
fbld
push
adc
test
cld
push
das
fnsave
ljmp
jne
test
pop
lcall
mov
ret
daa
pusha
or
daa
push
add
das
xorb
jg
jo
xchg
data16
sti
nop
aas
stos
mov
mov
mov
cvtps2pi
lcall
xchg
icebp
es
test
outsl
pop
mov
iret
lahf
hlt
mov
and
rcrb
pop
xchg
sbb
je
xchg
inc
fwait
icebp
mov
mov
gs
flds
cmp
inc
or
xor
test
inc
xlat
cmovo
fdiv
jns
cmp
into
cs
sub
add
aaa
mov
mov
clc
jns
adc
aam
aam
or
dec
cmp
mov
test
rcr
or
push
adcb
or
xor
pop
imul
mov
lahf
aad
in
add
inc
shl
dec
cld
dec
mov
mov
xchg
fmuls
bound
fcompl
testl
sti
xor
repnz
repz
out
and
fisttps
or
jo
enter
push
ja
aam
xchg
jp
mov
lahf
jo
fistpl
inc
hlt
cmpsb
orb
out
hlt
outsb
push
bound
jle
cmp
lahf
popf
clc
push
negl
mov
in
or
repnz
mov
lret
rorb
push
and
rcrb
nop
jg
in
or
mov
lds
or
push
add
mov
push
test
fildll
test
mov
xor
fldl
stc
popa
push
jns
mov
xor
rorl
dec
test
sbb
or
dec
repnz
out
fisubrs
inc
lcall
push
xor
inc
out
jns
iret
lcall
pop
mov
xchg
mov
test
adc
jl
ret
insb
shrb
sub
cli
scas
sub
and
stos
pop
repnz
cmp
adc
in
cmp
push
or
adc
aas
cmp
mov
mov
inc
jl
jg
ja
cmc
cs
jmp
mov
sarb
lods
jmp
loope
cmc
or
add
dec
cmpsb
fcomip
and
mov
cmp
push
dec
or
or
aad
jns
xor
xchg
xor
sub
xchg
pop
es
sub
lret
call
mov
fmulp
out
and
std
cmc
mov
adc
xlat
dec
aaa
ljmp
popf
cmpsl
in
pop
out
test
sbb
js
pop
loopne
or
cld
test
sub
leave
jnp
inc
ret
mov
subl
aam
sbb
pop
push
aam
jno
stos
xchg
inc
jnp
cld
fidivrs
mov
jb
cmp
js
vmwrite
pop
and
jb
mov
je
jo
lcall
mov
outsb
dec
or
fidivrl
cs
and
cmp
scas
pop
jmp
stc
sbb
shr
push
cmp
lret
cltd
cmp
jno
lds
pop
data16
adc
cmpsb
call
cmp
mov
mov
pop
clc
sub
mov
insl
fdivrl
mov
popa
cli
push
jbe
adc
xor
jp
loopne
xchg
inc
sahf
movsb
jg
or
ret
loop
ffree
xchg
push
adc
ja
call
arpl
xor
sbb
xchg
push
iret
jl
je
xor
adc
pop
movsb
push
sub
sub
std
inc
in
inc
adc
cltd
push
paddw
cmp
add
insb
mov
mov
jne
cli
rorl
clc
add
aam
mov
ljmp
mov
sbb
pop
es
shrl
sub
and
fisttps
dec
inc
push
dec
lcall
ds
aas
orl
movsl
push
add
dec
and
gs
test
pop
jg
xchg
rclb
subb
insl
mov
lret
loop
adc
test
out
aam
sbb
leave
clc
dec
aas
lea
jmp
rclb
mov
lock
stos
into
mov
mov
incb
ror
cmp
xchg
push
repnz
loopne
aaa
mov
sub
leave
and
xor
push
push
push
sub
xor
int
xchg
xchg
sub
fsubrp
pop
ret
addr16
sarb
push
sbb
filds
cmp
and
les
mov
xor
dec
pop
cmp
hlt
pop
pop
fstps
mov
aaa
sbb
cwtl
xor
test
es
mov
bound
js
enter
in
and
inc
clc
cmpb
enter
pop
js
jp
mov
js
mov
and
pop
cltd
jbe
pushf
leave
push
sti
cltd
lea
int3
mov
incl
dec
addl
adc
dec
cld
sbb
lock
inc
mov
hlt
xlat
xchg
call
push
adc
mov
xchg
insl
sarb
loop
ds
enter
inc
push
mov
jmp
adc
or
pop
dec
and
loope
repz
repnz
mov
lea
sub
pop
xchg
mov
shrb
lret
bound
aas
cmp
add
jge
out
sbb
daa
push
or
daa
cmpsb
lock
mov
xchg
cmp
test
inc
and
dec
loopne
cmp
adc
clc
insb
faddl
icebp
fbstp
mov
ret
mov
es
in
ds
mov
call
insb
sub
clc
sbbb
push
xor
das
loope
andb
push
dec
sub
cmp
xor
shl
push
int3
movsb
mov
mov
or
adc
jl
lret
ffreep
lret
aam
cmpb
adc
gs
repz
mov
fistps
inc
cli
bound
rclb
pop
xchg
mov
std
daa
in
call
cmp
lahf
lahf
fiadds
lret
mov
clc
jns
mov
ja
sbb
pop
sbb
mov
sbb
scas
and
loope
imulb
sub
pop
fwait
mov
pop
imul
ja
mov
dec
loope
and
es
sbb
cld
mov
jns
into
dec
dec
incl
dec
rcr
dec
cmp
and
adcl
push
xor
xchg
cld
inc
scas
cld
inc
outsb
ss
lea
pop
mov
inc
js
ret
ja
dec
in
pop
or
stos
xchg
sub
clc
dec
subb
cmp
lods
dec
and
mov
arpl
mov
repnz
push
lea
icebp
jb
adc
add
repz
mov
cld
push
adc
shlb
hlt
mov
lcall
mov
mov
sbbl
push
cli
mov
mov
mov
shlb
imul
jg
in
pop
pop
cmpsb
pushf
pop
jnp
mov
dec
pop
mov
lret
mov
sti
jae
out
adc
jl
mov
in
inc
loopne
mov
sub
sub
cmp
push
stos
sbb
inc
std
dec
jb
adc
inc
out
aam
lret
clc
iret
mov
fs
mov
adc
push
out
xlat
shrb
es
jo
mov
loop
loopne
adc
mov
mov
xor
rcl
cmp
call
lret
add
dec
sub
es
lods
sbb
add
ss
rcrl
outsb
jb
push
fucom
sub
inc
xlat
das
dec
xchg
xchg
push
rclb
fiadds
add
add
or
aaa
mov
test
lea
mov
mov
push
jmp
pop
pop
add
push
addr16
jle
inc
sbb
xor
js
mov
mov
and
loope
xor
mov
repnz
push
arpl
or
fs
adc
add
sub
sub
dec
loope
mov
pop
testb
daa
jg
stos
and
loope
shrb
jecxz
mov
push
xchg
lock
clc
jns
in
rcll
fimuls
push
xlat
mov
or
pop
cmp
out
aas
ljmp
and
aam
sub
test
rcll
pop
jle
add
add
imul
hlt
pop
iret
pop
sti
xchg
int
jmp
push
cmpsl
sahf
dec
jns
lods
in
lret
xchg
cmp
or
push
lret
dec
mov
add
in
jo
ds
mov
mov
push
adc
xor
mov
inc
sahf
sbb
sbb
cmp
icebp
lods
test
adc
mov
xchg
xor
movb
in
push
jle
cld
das
xchg
sbb
mov
data16
stc
icebp
xchg
jmp
add
or
and
nop
add
scas
jl
mov
addr16
mov
rcr
jb
sub
jl
xchg
sbb
roll
insb
fdivl
mov
call
sbb
loop
and
jmp
lahf
pop
cmpsb
jl
es
and
aaa
push
cmp
jo
dec
xchg
divl
mov
in
lea
jmp
push
adc
cmpsl
add
and
jg
lret
jp
or
mov
mov
or
scas
lcall
mov
loope
xlat
out
mov
or
add
mov
mov
ficoms
sarb
adc
push
pop
cli
jl
ret
mulb
pop
and
shl
mov
pop
faddl
mov
mov
adc
dec
xor
pushf
inc
loop
ja
fs
sbb
in
mov
fcompl
int
arpl
rol
cmp
add
jg
fadds
cmpsb
push
mov
pop
dec
call
or
ffreep
lods
xchg
imul
jge
sub
and
mov
push
fcmovnu
sub
outsl
out
lret
stos
jbe
orl
mov
lret
out
sub
lea
fildl
cmp
ljmp
daa
push
or
dec
push
rorb
xor
ja
sub
add
push
mov
cli
icebp
jge
in
and
inc
fdivl
iret
and
sub
or
or
lock
push
xchg
add
jns
jg
ja
inc
scas
push
xor
inc
aad
pusha
add
aaa
rorb
int
pusha
and
clc
or
pop
mov
shl
mov
push
pop
fdivrp
fs
fcomps
mov
adc
add
cmp
inc
cmpsl
lods
mov
jle
pop
sub
and
add
or
push
ficomps
inc
mov
cli
add
stc
cld
jecxz
dec
andb
icebp
or
test
std
imul
pop
push
add
lock
push
mov
stc
pop
and
push
sbb
lea
xor
xor
fwait
adc
sub
dec
inc
sahf
push
filds
jmp
test
adcb
dec
lcall
fsubrs
push
lcall
xchg
jg
scas
xor
lcall
call
add
pop
daa
or
push
data16
xor
xchg
leave
loopne
mov
enter
pop
scas
nop
je
and
adc
inc
sub
addb
lock
fdivrp
add
in
sbb
adc
call
stos
and
push
sub
roll
mov
fdivr
jge
lds
push
movsl
mov
fstpt
cwtl
push
or
pop
mov
cmp
in
sbbl
xchg
loopne
xchg
enter
gs
cltd
add
fabs
mov
das
and
pop
call
cld
insl
fistps
pop
out
add
or
loope
mov
addl
add
mov
fmul
and
iret
or
test
cmp
adc
outsb
aaa
lods
jnp
and
pop
rol
outsb
dec
pop
sti
loop
nop
mov
fists
push
inc
cld
mov
add
nop
xor
pusha
sbb
pop
call
push
xchg
adc
cmp
clc
adc
sbbl
xchg
out
mov
adcb
adc
and
or
ret
outsl
sahf
hlt
insl
dec
cmp
jmp
test
mov
inc
jbe
clc
ffreep
and
mov
pop
lock
pop
push
aam
or
push
mov
dec
pop
xchg
out
or
and
daa
add
xchg
mull
data16
cmp
movsb
push
andb
pop
xor
inc
outsb
adcb
outsb
or
rclb
wbinvd
mov
fs
jmp
arpl
movsl
fldt
push
fwait
mov
aaa
and
push
fcomps
ljmp
jecxz
mov
adc
je
insl
and
lods
insl
hlt
sub
mov
ret
push
cmp
push
imul
hlt
test
cld
xchg
pusha
sbb
sbbl
testl
fiaddl
or
dec
push
repnz
push
lock
jp
fcoms
mov
add
pop
mov
pop
fildll
mov
loop
mov
and
and
shlb
lock
shl
rorl
push
mov
mov
mov
push
mov
jl
cs
push
es
push
test
scas
xlat
jg
xchg
mov
xchg
or
fisubl
lock
xchg
mov
or
jecxz
inc
cli
nop
push
test
mov
stc
fildll
cwtl
test
cltd
push
sbb
add
mov
fwait
or
outsb
stos
cwtl
or
sbb
cmp
popa
loope
jecxz
cli
lock
bnd
mov
aas
js
cmp
ljmp
sub
sbb
push
push
and
mov
clc
dec
add
inc
stos
mov
loopne
add
addl
outsl
xchg
ds
test
sbb
add
lahf
data16
push
std
pop
lahf
rorb
mov
jb
cmp
sbb
add
daa
jmp
push
int3
xor
int
fisubs
sub
and
pop
add
sub
int
stos
fdivs
inc
and
loopne
js
sbb
andl
pusha
jo
clc
and
inc
out
cwtl
add
jge
lret
push
adc
filds
and
pop
push
sbb
or
std
jne
add
gs
dec
inc
out
ret
jne
mov
cld
aad
add
fdivrl
dec
loop
jle
sub
sbbb
andb
or
aad
insb
pop
ss
addps
jmp
add
scas
adc
adc
outsl
adc
dec
mov
xchg
xor
ds
xor
rclb
and
pop
lret
xor
mov
iret
sbb
push
push
or
popa
mov
sbb
pop
and
shl
insl
rcrb
sahf
je
shl
loop
push
pusha
sahf
xor
and
clc
dec
jp
je
sbb
sbb
sbb
popf
in
sub
jle
or
sbb
lcall
clc
mov
popf
adcb
xchg
insb
cmp
cmp
sbb
push
pop
and
orl
mov
adc
movsl
inc
loopne
add
pop
pop
in
nop
inc
xlat
sub
pop
scas
mov
xchg
dec
and
pop
and
pop
cmp
xchg
ss
divl
dec
push
inc
cmp
pop
repnz
push
aam
test
jmp
push
movsl
mov
imul
in
ljmp
js
cmovs
mov
ss
xlat
mov
int
in
adc
mov
sub
fistpl
add
jns
jae
pop
shlb
clc
aad
mov
add
push
data16
mov
imul
sbbb
mov
jl
loop
repnz
jecxz
jo
xchg
mov
jecxz
pop
sub
insl
mov
lret
addl
nop
scas
ss
rclb
cmp
ja
aam
nop
cmpsb
loope
and
mov
int
xchg
xchg
jmp
pop
movsl
orb
add
or
adc
popf
sbb
xor
pop
mull
add
or
or
repz
call
mov
in
cltd
popa
shrl
add
mov
les
lds
popl
adc
inc
rcr
or
fisttpll
test
pusha
call
stc
test
dec
sbb
xchg
mov
add
outsb
pop
je
push
clc
icebp
add
hlt
fcomps
and
mov
enter
das
and
xor
inc
push
cmp
add
out
and
pop
test
aad
cmp
push
push
pop
outsb
sbb
hlt
jnp
movsl
adc
sbb
pop
ja
and
icebp
or
out
dec
int
add
out
sbb
mov
mov
dec
aaa
out
adc
push
pop
mov
mov
fdivrl
mov
fmuls
in
leave
jp
adc
in
and
mov
xor
imul
cmpl
cmovo
test
div
in
add
sarl
cmpsb
jle
loope
or
mov
push
imul
xorb
repnz
push
orl
mov
repz
fcoml
pusha
mov
xchg
ljmp
cmpsb
sub
xchg
shl
ret
jo
sbb
sub
clc
sub
sbb
insb
fnstenv
mov
cmc
add
addr16
lea
mov
mov
icebp
lcall
repz
clc
out
nop
inc
add
and
cmpb
leave
sbb
push
inc
and
push
repz
scas
aaa
pop
jle
shll
sarl
repnz
xchg
insb
shl
cltd
ljmp
or
jbe
cmpsl
xor
xchg
jle
cmp
xor
sbb
push
idiv
inc
push
movsb
loope
test
ret
adc
sub
in
adc
inc
gs
pop
movsb
pop
stos
add
out
call
mov
lock
cltd
aas
xor
jmp
daa
xor
cmpsl
inc
das
add
enter
jle
mov
loop
cmpsb
dec
mov
push
inc
les
idivl
adc
xor
mov
mov
xor
aaa
inc
cltd
mov
es
inc
xor
inc
cmpsb
dec
mov
es
adc
mov
cmc
insb
add
fwait
movsb
nop
rcrb
in
jecxz
xchg
imul
push
ljmp
xlat
pop
mov
push
pop
jae
add
jae
push
aaa
and
sub
or
xor
push
clc
imul
cs
jnp
jmp
adc
xlat
xchg
mov
mov
and
sbb
mov
leave
orb
ljmp
add
jo
shll
and
sub
xchg
clc
mov
or
ret
mov
cli
adc
mov
push
or
and
adc
xor
rol
or
push
fwait
mov
pop
scas
mov
mov
shll
inc
xchg
dec
pusha
out
or
shll
icebp
add
xchg
dec
cmc
inc
or
inc
sahf
add
jg
popa
mov
fdivr
xchg
pop
jns
push
lock
mov
test
mov
sarl
les
inc
pop
dec
cmpsb
cmp
push
sbb
inc
or
ss
pop
bound
and
sub
mov
inc
in
and
cli
jp
fucomi
sbb
pop
jno
xchg
jbe
xchg
jge
add
popa
jle
sub
mov
sbb
or
mov
adc
rcr
add
outsb
xchg
out
pop
pop
push
push
lock
xor
cmpsl
insb
sbb
mov
pop
icebp
jge
movsb
aam
inc
xchg
test
pop
mov
or
shll
or
lock
aaa
das
or
test
test
mov
push
fcoml
mov
rcrl
mov
sbb
loopne
test
fadd
or
dec
sub
mov
dec
cmpb
loope
mov
or
add
push
test
jmp
dec
jg
pop
and
cmp
outsb
cmp
ljmp
les
push
test
sub
aaa
or
fstpt
mov
test
aas
pop
mov
pop
lods
jl
sbb
mov
enter
les
mov
dec
adcb
jle
or
jno
mov
js
adc
outsb
mov
add
out
jecxz
daa
mov
bnd
xor
push
lock
lock
lcall
das
lret
pop
dec
andl
mulb
rcrb
jae
stos
scas
rcll
pop
stc
pop
sub
mov
jne
ret
iret
sub
cmp
mov
dec
dec
push
adc
dec
ret
mov
xlat
int3
jl
out
xor
mov
dec
push
icebp
inc
jmp
repnz
icebp
xchg
pop
roll
and
lahf
sbb
popa
pop
add
jno
and
je
or
inc
movsl
pop
int3
sbb
js
push
add
xchg
nop
mov
inc
daa
fsts
jg
mov
subl
out
xchg
lods
mov
pusha
sub
aad
adc
adc
rcrb
pop
lods
jns
test
sbb
loopne
les
js
rcll
aam
lock
mov
fs
adc
stos
sub
pop
fcmove
push
lahf
pop
push
mov
add
dec
add
shll
add
je
push
sbb
insb
rcll
add
mov
sbb
clc
adc
xor
mov
loopne
pop
stos
test
aas
push
jp
mov
insb
pop
repnz
mov
imulb
fs
shlb
dec
out
push
jle
xor
or
dec
push
lock
and
push
or
or
add
ljmp
push
xchg
or
and
push
ret
mov
incl
or
push
in
pop
ret
xor
in
pushf
enter
loope
js
or
icebp
xchg
clc
xchg
std
lds
rorb
pushf
fldenv
sbb
xlat
rcll
int3
and
jge
ds
xor
les
imul
add
cwtl
and
lea
mov
cli
in
lret
lahf
push
ror
les
arpl
mov
fdivl
ja
ret
adc
mov
lods
dec
pop
icebp
inc
cmp
ret
push
ss
call
sub
push
pop
nop
push
mov
inc
push
lret
sbb
ja
loopne
mov
adc
call
add
push
test
insb
cmp
outsb
sbb
mov
les
mov
movsb
scas
adc
push
add
pop
out
push
mov
jns
push
bound
xchg
dec
shll
data16
dec
pop
or
aas
ljmp
inc
rol
inc
lret
insl
icebp
js
jo
dec
inc
test
in
pop
call
mov
imul
cmp
es
sub
clc
lds
adc
fwait
mov
adc
or
lea
add
add
faddl
fldcw
mov
or
and
or
xchg
jo
cld
mov
add
stos
xor
daa
dec
lcall
hlt
push
repz
daa
sbb
push
rcll
mov
cs
call
add
inc
mov
mov
sub
cmpsl
push
bound
lock
or
jns
stos
or
imul
icebp
xor
mov
xchg
lods
outsb
minps
push
and
ficompl
push
ljmp
or
mov
inc
and
inc
inc
mov
sahf
lret
fsubl
mov
inc
call
jmp
in
les
daa
shl
add
fwait
insl
cmp
xor
inc
xchg
mov
icebp
popf
add
rorl
add
push
addl
js
sbb
push
mov
mov
cli
jne
mov
lds
mov
pop
cltd
repnz
ja
dec
sar
out
int3
jae
adc
push
xor
xchg
sbb
push
mov
lods
and
push
shll
insl
dec
inc
lcall
sbbb
jp
shl
add
and
test
fucomip
int3
jns
lret
shlb
lods
out
imul
inc
xchg
lcall
xchg
loopne
cmpl
jnp
cmpsb
mov
ret
mov
cmp
xchg
sub
or
adc
mov
and
jmp
pushf
and
adc
and
cmp
xor
rcrb
in
xchg
mov
mov
mov
shll
sahf
xchg
inc
pop
sbb
loopne
cmc
jnp
das
popa
xchg
int
scas
lods
mov
or
daa
pop
jnp
mov
mov
out
decl
imul
inc
inc
loopne
gs
mov
pop
push
into
cmpl
cmp
mov
mov
cmp
push
icebp
sarb
dec
iret
push
sahf
cmp
mov
mov
outsl
mov
inc
rcl
cli
les
ljmp
xor
fcompl
jnp
inc
div
aam
push
push
jle
jae
mov
xchg
mov
mov
pop
fs
jne
pop
out
loopne
and
xorb
cmp
loope
and
pop
hlt
jg
adc
cwtl
dec
mov
sbb
inc
adc
jmp
add
call
fldcw
push
iret
jecxz
mov
adc
xchg
test
push
fsubl
push
ret
aas
jle
aas
xor
mov
aaa
fldt
stc
addl
xchg
stos
nop
push
div
lock
inc
mov
mov
adc
mov
xchg
test
dec
adc
push
shlb
mov
and
sbb
lods
ret
add
addl
cmpb
mov
lahf
fcompp
push
loopne
or
jp
into
loope
shll
addr16
push
push
scas
leave
scas
lret
idivl
pop
fs
xchg
and
or
mov
sub
scas
pop
add
out
test
clc
pop
insl
xor
cmpsl
lcall
bound
add
inc
and
push
cmpsb
outsl
adc
sbb
sub
fsubs
jge
cmpsl
loopne
incl
mov
js
and
cmc
fxch
sti
pop
idivb
incl
pop
mov
and
sbbl
das
adc
cmc
ret
fs
cmp
addr16
in
mov
push
mov
jo
or
icebp
cmp
pop
mov
adc
nop
or
inc
xor
loopne
inc
insb
adc
clc
mov
arpl
mov
out
jmp
jbe
dec
js
lock
outsl
dec
sbb
enter
or
push
sub
jle
mov
xor
mov
add
loope
sbb
dec
imul
push
popa
cmpb
arpl
out
or
and
insb
ljmp
push
and
adcl
or
inc
insl
dec
aas
jne
fwait
cmp
lcall
pandn
adc
xchg
dec
ljmp
xchg
call
and
dec
aam
cmp
mov
lahf
mov
leave
es
aad
or
loopne
je
popa
pop
mov
push
cwtl
cmpsb
mov
or
xlat
ss
xor
mov
sbb
cmp
fstpt
xchg
mov
cld
xchg
mov
push
imul
xchg
sbb
popa
pusha
mov
lret
aad
cli
dec
sub
add
fsubl
or
mov
pop
add
scas
inc
rorb
xchg
jne
pop
mov
sbb
imul
lock
mov
sbbb
cmp
jo
cwtl
fdivs
aas
xchg
sub
push
je
inc
mov
fisubl
inc
cld
hlt
mov
xchg
sbb
int
or
movsb
lret
and
das
inc
js
out
cmp
test
cmp
sbb
sbb
adc
stos
add
cmp
cmp
lret
mov
fucomi
lods
dec
jle
cmp
pop
es
and
repnz
and
pop
push
add
ror
out
clc
shr
fs
xor
stos
and
push
popf
mov
inc
lods
mov
lcall
dec
xor
sub
cmp
or
and
hlt
xor
stos
pop
mov
sub
lods
mov
sbb
hlt
repnz
sub
xor
mov
mov
mov
loop
cmp
in
mov
add
out
sahf
mov
imul
fcomi
fldt
fimull
jmp
adc
cmpsl
mov
mov
add
insl
jns
mov
adc
and
dec
jecxz
out
jno
jle
cmp
mov
xor
or
test
inc
add
and
nop
movswl
mov
jge
vpmulhw
aam
mov
pusha
fs
jecxz
pop
mov
ret
aad
stc
and
sub
addr16
lea
pop
push
sbb
mov
cwtl
cmp
insb
adc
fiadds
ret
les
or
pop
cmc
aaa
sbb
push
sbb
loop
movq
inc
xlat
inc
mov
push
sbb
jnp
xor
sbb
mov
loopne
and
scas
xchg
pop
sub
lods
xor
lods
sbb
popl
scas
jle
mov
movsb
mov
std
jne
jecxz
mov
push
cs
dec
lret
mov
in
xchg
stos
pop
xchg
sub
dec
add
das
xchg
cmpb
lock
xor
je
inc
xchg
dec
test
add
loopne
sbb
mov
popf
movsl
bound
sbb
xchg
repz
dec
cmp
dec
orb
add
fwait
nop
or
ja
loop
pop
adc
add
cmc
dec
or
test
fwait
pop
subb
jo
mov
xor
fsubrl
inc
cs
sbb
mov
cltd
dec
popf
add
xchg
mov
cwtl
adc
lods
push
insb
test
loope
sub
xchg
in
ja
aas
xor
add
jns
mov
add
cli
push
add
add
adc
lahf
lea
dec
sbb
adc
fisttpl
lahf
xor
xor
das
or
push
and
fimull
push
ljmp
add
les
sar
pop
test
adc
mov
orl
std
sub
hlt
sarb
adc
rcll
push
negl
fnstenv
je
clc
dec
and
imul
sub
pop
mov
out
hlt
cmp
std
das
add
mov
test
inc
pop
sbb
lock
or
jnp
ret
sti
push
cmp
inc
pop
adc
jmp
hlt
fiadds
mov
jmp
mov
xchg
dec
push
in
mov
hlt
mov
push
mov
adc
cmpsb
mov
mov
pop
push
aad
addr16
adc
jne
or
cmc
pop
aad
add
adc
cs
sub
js
add
lcall
aaa
mov
sahf
mov
in
pop
loop
cmp
cmovo
hlt
mov
ret
sub
frstor
sub
lea
and
int3
xor
aaa
adc
ret
mov
cmpsb
mov
add
add
inc
enter
push
push
mov
sbb
add
out
nop
lock
int3
fidivrl
dec
sbb
mov
sub
push
dec
mov
add
sar
jbe
fmuls
mov
xor
into
outsb
movsb
enter
sub
cli
sbb
popa
pop
rcr
xchg
or
add
adc
jmp
insl
idivl
dec
pop
stos
sbb
lea
jg
lahf
jae
faddl
orb
stos
es
pop
xchg
push
in
adc
call
adc
cli
jp
mov
fdiv
jns
sbb
inc
jnp
or
push
cwtl
popa
add
test
or
ret
push
mov
cmpb
adc
arpl
daa
int3
and
dec
and
cmpsb
sahf
popa
sbb
mov
lds
or
repz
stos
sub
mov
popf
sbb
inc
jge
roll
xchg
popf
aad
mov
js
jo
fmuls
xchg
push
ret
mov
or
adc
shrb
xor
nop
sarb
mov
inc
repz
ret
je
jnp
sbb
stos
mov
out
ret
inc
movsb
or
mov
jecxz
int3
jae
lret
push
cmp
dec
repz
es
fs
mov
adc
xchg
clc
or
adc
cli
fisubrs
cli
out
js
mov
mov
popf
or
mov
shr
rcrl
add
inc
xor
sub
lret
mov
jmp
aad
and
jne
mov
shlb
ret
clc
mov
or
pusha
mov
ljmp
push
add
adc
lock
adc
sub
mov
cmp
mov
sbb
daa
jne
inc
jmp
add
push
daa
fmull
sbb
add
jecxz,pt
add
addl
mov
cld
sub
and
rorb
or
stos
adc
subl
sbb
inc
and
jo
decl
cld
add
ret
dec
add
or
mov
sbb
hlt
daa
jl
scas
nop
xlat
or
push
xchg
and
push
es
xor
lock
jp
mov
js
loope
inc
notb
push
mov
leave
data16
pop
subl
js
loop
cli
shl
cmpsb
cwtl
push
ljmp
mov
leave
mov
mov
xlat
aaa
clc
call
xchg
loopne
adc
addb
lret
sub
mov
ljmp
mov
pushf
mov
nop
in
sub
mov
mov
jbe
xor
lahf
int
pushf
pop
sbb
adc
sbb
adc
dec
lock
sti
cmc
add
int3
loope
js
incl
aas
cmpsb
into
scas
cmovns
leave
dec
push
add
andb
jp
inc
jno
inc
sub
or
aas
mov
sbb
int3
mov
je
test
push
divb
push
scas
test
inc
iret
cli
mov
add
nop
pop
xor
mov
mov
cmpb
xlat
dec
rclb
jmp
xchg
add
js
jg
dec
adc
xchg
dec
sub
adc
dec
sahf
stos
in
and
add
dec
xchg
cs
pop
cld
pop
cmp
fs
inc
stos
sbb
jg
pusha
divb
pop
push
mov
lea
pop
push
movsb
lret
mov
push
xchg
and
dec
and
inc
add
mov
es
add
adc
xchg
pusha
and
sbb
out
sub
lret
movsb
jecxz
repz
push
pop
ret
insb
imul
add
dec
pop
loop
nop
jl
icebp
sub
rcl
sub
pop
cs
inc
push
loopne
dec
lods
or
jno
xchg
rcl
fsubrl
icebp
push
bnd
jge
jmp
hlt
test
push
jb
fisttps
dec
ret
insl
popa
jl
mov
aam
es
mov
add
shll
clc
aas
cli
pop
scas
adc
test
mov
and
push
or
cmp
mov
mov
cltd
push
cmpsb
mov
inc
xor
jb
inc
aas
push
pop
mov
xor
inc
lods
push
rol
inc
fs
dec
cmpl
inc
ficoml
adc
xchg
mov
pop
inc
and
pop
pushf
push
pop
mov
adc
in
arpl
fstpl
and
ret
lds
sahf
pop
ljmp
push
jle
jnp
push
or
xchg
int3
into
rorl
xchg
or
xor
inc
orl
jmp
pop
rorb
mov
test
repz
gs
aaa
ljmp
movsb
les
stos
sub
mov
dec
xor
into
pop
add
cwtl
add
push
fs
movsl
lods
imul
pop
pop
inc
ret
adc
jo
mov
xor
pop
pop
mov
movsl
js
and
sarl
add
movsl
dec
xorl
out
ljmp
scas
dec
cld
and
movsl
mov
clc
or
push
cwtl
mov
arpl
add
adc
jmp
push
inc
out
xor
inc
inc
push
movsb
or
cmp
xor
jns
inc
dec
in
inc
dec
movsb
jg
mov
xorb
xor
cmp
pop
hlt
hlt
sbb
jmp
xchg
pop
shlb
or
lea
xchg
sub
jne
cmc
mov
xor
or
inc
push
xchg
adc
jmp
popf
ret
mov
icebp
mov
add
outsb
mov
or
xlat
loop
mov
inc
xchg
clc
mov
movsl
cli
mov
daa
shl
cmpsb
fisubrl
pop
ljmp
xor
add
add
sbb
int
jne
bnd
push
icebp
movsl
jmp
xor
ret
sub
mov
pop
jb
movsb
pop
xchg
mov
fistl
or
inc
and
push
mov
cmp
je
inc
out
cltd
mov
or
and
stos
popa
lea
push
jge
push
push
push
mov
stos
jle
mov
adc
push
enter
inc
repz
ss
xchg
mov
pushw
push
xchg
mov
int3
pop
in
shrb
sbb
lahf
mov
sbb
sbb
fidivs
jle
popa
or
mov
adc
sbbl
and
add
and
push
test
test
jle
jl
ss
dec
fcompl
push
and
fcmove
lds
add
sarb
arpl
lods
inc
xchg
push
cmp
dec
dec
or
push
sbb
xchg
mov
dec
mov
scas
jo
pop
js
ficomps
ficomps
cld
outsl
mov
dec
push
stos
pop
sub
js
and
sahf
and
int3
cmp
out
das
cmpsb
les
ja
sbb
jns
dec
or
fsubrp
mov
mov
cld
fdivl
not
imul
pop
inc
fs
mov
scas
out
xor
loop
test
or
pop
std
fdivl
cmpsl
push
mov
xchg
pop
lea
out
push
sbb
test
ret
inc
rcll
sbb
push
xchg
pop
call
mov
cli
outsb
sub
xlat
cmp
pop
sub
cmp
jno
out
in
std
xchg
inc
xor
popl
mov
cmp
adcl
add
mov
jne
mov
mov
cmc
pop
mov
dec
fcoms
push
lret
insb
xor
jmp
push
sub
hlt
cmp
cli
mov
popf
imul
aam
cmpsb
repnz
stos
jns
pop
sbb
xchg
fcomip
cmp
mov
xor
test
mov
cmp
clc
push
pop
lods
add
or
aad
pushf
or
les
pusha
lcall
aas
into
jns
cs
sbb
cli
bound
rcrb
jp
push
push
sbb
cwtl
leave
loopne
jmp
inc
mov
nop
lock
rcll
rol
cmpb
push
je
mov
xchg
imul
cmpsb
pop
and
sub
pop
push
cmp
xchg
add
jl
mov
lods
add
push
mov
jns
add
jecxz
out
jecxz
pop
jo
stos
xor
imul
out
dec
xchg
xchg
add
add
es
sbb
or
sahf
push
sbb
jle
xor
iret
test
push
or
lret
aad
jne
imul
into
jnp
shlb
imul
int3
popa
mov
fdivs
rclb
shrb
stos
push
pop
insb
push
stos
out
sbb
push
fadds
movsl
test
cmp
push
aaa
inc
mov
xor
sub
jo
pop
adc
lret
jo
lcall
bound
ret
icebp
sbb
mov
push
out
push
jno
loope
roll
add
push
push
adc
sbb
mov
push
hlt
shll
clc
cmp
inc
jbe
adc
cmpsb
data16
dec
clc
add
xor
comiss
subb
popf
add
cmc
push
push
es
cmp
pop
out
jl
mov
sub
es
pop
aad
sbb
repnz
je
xor
aam
mov
pop
jg
cmp
mov
shll
jnp
or
daa
and
ds
ds
in
push
push
lret
and
cld
mov
pop
adc
jbe
sub
sbb
lahf
std
jo
inc
test
xchg
and
insb
add
jmp
sub
push
mov
xchg
cmp
das
jmp
lds
push
xchg
in
add
cld
iret
inc
mov
stos
rclb
ret
clc
mov
sar
ja
arpl
mov
mov
bound
xchg
shrl
in
dec
out
jge
addb
gs
popf
mov
push
andb
hlt
mov
mov
mov
loopne
jne
sbb
dec
ret
mov
jecxz
pushf
cmp
xchg
lods
icebp
arpl
dec
pusha
push
leave
in
inc
mov
mov
inc
pop
jg
xor
add
ret
idiv
add
cmp
test
push
xchg
or
mov
lock
add
sub
mov
call
or
scas
mov
or
test
and
sbb
add
popf
pop
test
cwtl
mov
sbbb
das
dec
xchg
inc
insl
shl
or
test
loopne
cmp
jbe
scas
ret
sub
lock
pushl
xor
cltd
push
jbe
ljmp
pushf
push
nop
push
add
loop
fs
jno
outsl
mov
adc
xor
xor
mov
and
in
sbb
jmp
imul
sub
mov
ja
push
dec
jge
fdivs
mov
or
pop
jo
push
insb
adc
push
popa
call
in
push
insb
dec
or
or
adc
scas
jp,pn
sbb
or
xor
lea
mov
sub
add
das
pusha
dec
ret
xchg
sbb
adc
mov
xor
xchg
mov
dec
cmp
or
dec
ss
add
inc
test
push
std
pop
mov
sahf
push
insl
mov
aad
sub
cmc
adc
jbe
sti
std
shlb
mov
mov
xchg
int3
pop
repnz
xor
adc
lea
enter
push
addl
out
mov
adc
insl
mov
lds
lret
or
and
arpl
pop
in
fstpt
jmp
add
ret
jne
data16
mov
stos
xor
and
or
leave
std
adc
aas
mov
jae
or
cli
pop
scas
outsl
mov
daa
inc
xchg
push
add
rorl
lock
push
mov
sarb
cld
insb
popa
loopne
js
pop
xor
gs
js
into
mov
jno
mov
pop
dec
or
jae
adc
cmp
mov
jb
rcll
loop
mov
mov
sub
enter
sub
pop
jo
sub
lar
mov
adc
ds
push
orb
dec
bound
jmp
push
jae
jbe
and
jmp
xchg
ret
mov
and
inc
xchg
mov
fincstp
sahf
or
in
movsl
cmp
ds
iret
and
mov
push
jno
jg
jl
fsubrl
cmc
mov
jp
es
not
xchg
push
add
adc
mov
ljmp
cltd
out
xor
andb
push
jbe
cmp
int
lds
repnz
xchg
outsl
adc
or
loopne
mov
ss
adc
loope
icebp
scas
push
mov
in
enter
jo
jnp
fiaddl
and
xchg
cmc
ja
push
or
mov
cmc
into
rolb
mov
inc
je
loope
insl
hlt
sbb
jo
xchg
fldenv
fldcw
inc
call
dec
shrl
ret
cmp
int
cmc
nop
jnp
xor
les
pop
inc
pop
cmpsb
incl
icebp
sbb
adc
fs
mov
ret
lret
mov
mov
push
push
inc
mov
adc
fmuls
movsbl
dec
dec
jmp
loope
dec
inc
das
inc
and
mov
jo
xchg
test
in
jmp
rcrl
outsb
rcrb
mov
cld
xor
mov
xor
push
mov
xchg
fdivrl
ljmp
or
or
and
in
cmp
pop
sbbb
mov
add
daa
bnd
mov
and
push
aaa
xor
hlt
and
push
fildll
fldl
cmpsl
divps
mov
fisttpl
xchg
inc
test
lock
andl
add
push
pop
pop
cmp
lahf
cmp
popl
movsb
out
sbb
negb
xor
xor
je
inc
lds
push
roll
or
out
cmp
dec
mov
mov
jo
inc
or
cld
cmc
scas
shll
push
cmpsb
faddl
aad
adcl
dec
jb
cwtl
pushf
dec
push
add
popf
xchg
and
jbe
leave
ds
inc
fnstenv
pop
sub
jb
jnp
repz
pushf
sbb
push
cmp
out
push
in
test
push
and
xchg
xchg
rclb
shll
in
test
lret
dec
mov
fadd
mov
cmp
sbb
and
icebp
push
clc
add
inc
sbb
and
cmp
loopnew
push
sbb
fwait
pop
xchg
inc
add
js
and
push
sbb
lahf
xchg
out
lea
adc
push
mov
daa
add
outsb
rcll
or
in
mov
call
std
add
subl
ja
cmp
add
jb
sbb
pop
ret
cmp
fidivrs
loopne
out
das
jle
cli
push
cmpsb
dec
js
jp
cmpl
mov
and
lock
imul
ror
mov
retw
mov
mov
lret
mov
sub
mov
pop
add
and
or
adc
test
push
mov
push
out
ret
ljmp
lret
sbb
mul
xchg
adc
dec
jno
enter
jne
ljmp
xchg
pop
pop
mov
outsl
inc
mov
add
out
punpckhbw
ret
and
loopne
or
out
push
xchg
pop
popa
aas
sub
icebp
std
dec
jl
jae
pop
push
push
and
lcall
test
xchg
add
ss
mov
jo
pop
adc
inc
fidivrl
inc
sub
addb
mov
mov
push
mov
push
push
in
repz
mov
nop
inc
fcoml
pop
jmp
mov
mov
negl
fucomp
rorb
movsl
call
xor
enter
sub
and
cmp
ljmp
dec
fidivs
and
aaa
jge
add
mov
mov
mov
inc
loopne
enter
movsl
jecxz
leave
fsts
aas
xor
leave
adc
daa
std
lods
xchg
leave
and
xchg
dec
and
imul
icebp
std
mov
sub
lds
fdivrl
fs
inc
repz
add
mov
and
add
je
xchg
xchg
adc
pop
ret
adc
or
stc
add
mov
rcrb
test
dec
cli
ficoms
xchg
pop
push
xor
push
std
push
test
sahf
mov
push
ret
loopne
push
arpl
dec
and
inc
das
and
push
and
shrb
nop
adc
cmpsl
lea
lahf
subl
mov
addr16
out
adc
xlat
inc
or
cwtl
roll
xor
mov
jp
sbb
sbb
shlb
cmp
aas
adc
mov
cmpsl
jo
jle
in
lds
xor
test
xchg
or
ret
adc
icebp
ss
mov
lcall
cmp
fadds
push
popa
sbb
cli
ljmp
out
inc
ljmp
fs
cmp
mov
xor
mov
cld
jae
inc
daa
je
icebp
cmpl
fcmovnb
xor
jp
dec
sbb
lahf
or
add
and
mov
rol
or
ljmp
adc
stc
jae
les
mov
push
loopne
out
cltd
mov
inc
or
add
repnz
mov
movsl
rcr
sbb
out
mov
jns
ja
or
sbb
pop
lahf
inc
mov
movsl
aad
and
push
out
sbb
mov
ds
inc
mov
and
mov
jmp
aad
push
out
ja
dec
in
lahf
sub
pop
jp
stos
insl
xor
jo
add
push
data16
cmpsb
push
lea
shlb
clc
shl
inc
and
adc
adc
test
xchg
movsl
pop
shll
pop
xchg
jmp
and
mov
xchg
cmp
cmp
clc
test
push
hlt
jns
push
cmp
xor
jmp
sbb
das
xchg
lods
and
add
sub
push
pop
or
or
mov
cmp
loope
out
pop
std
hlt
and
adc
shl
lret
sahf
lea
outsl
cld
jmp
das
mov
ljmp
add
and
jne
dec
call
lods
xchg
inc
les
mov
adc
inc
add
push
ds
xor
and
mov
mov
ja
and
jmp
adc
cmpsb
and
in
and
xchg
pop
push
rol
lock
lahf
loope
jl
adc
and
ja
movsb
int3
dec
and
mov
lods
bound
and
shll
mov
rcl
lods
add
and
or
arpl
ud1
add
adc
push
incb
cmp
or
and
cmpsb
loop
into
jp
aaa
push
push
test
addr16
xor
jnp
cli
pop
push
popf
mov
push
cmp
aaa
pop
orl
pop
repnz
rol
popl
mov
xor
cmpsl
sbb
and
dec
xor
leave
adc
and
pop
je
and
add
mov
push
fcomi
push
push
loope
dec
mov
mov
mov
iret
movsb
xchg
mov
fiaddl
inc
or
es
jl
gs
dec
push
filds
jecxz
jmp
gs
and
icebp
push
dec
cmp
pop
dec
sub
icebp
adc
call
hlt
mov
ss
popf
xchg
push
aam
fidivl
mov
out
jl
js
mov
call
cmp
sub
cmp
xor
pop
popa
and
inc
sub
xchg
mov
lcall
or
lods
push
sub
ret
lcall
dec
cld
lds
fbstp
add
and
lret
push
sahf
adc
lahf
in
jmp
in
int3
xor
inc
mov
xchg
mov
adc
push
xchg
fdivrs
pop
in
sub
jno
pusha
es
fidivrl
cli
xor
jecxz
pop
and
sbb
mov
test
imul
scas
adc
loop
pop
dec
xchg
add
insb
cmc
dec
decl
addb
mov
in
movsb
prefetch
adc
shll
fwait
or
sti
or
ds
mov
lcall
sub
sbb
mov
insl
inc
lret
or
mov
cmpsb
sbbb
mov
mov
test
xchg
push
push
pushl
andb
call
pop
mov
out
in
mov
popa
gs
mov
jge
or
pushf
push
ret
inc
pop
pushf
sub
lret
cld
xor
mov
jp
jle
pop
and
das
fstpl
adc
sbb
mov
xchg
clc
jno
xchg
addr16
lcall
aaa
shlb
pop
push
bswap
sbb
add
cli
shlb
arpl
mov
subb
iret
rorb
popa
lods
xor
xlat
mov
jnp
or
adc
add
adc
cld
in
popa
stc
mov
mov
push
mov
dec
fidivrl
fs
decl
imul
mov
cmp
cli
inc
stos
out
xorl
lods
or
xor
or
test
ret
sub
jne
jmp
push
add
fadds
xor
adc
std
test
cmp
ficoms
or
jge
rcrb
inc
and
cmp
fwait
mov
mov
or
push
packssdw
sub
fimuls
cli
iret
pop
fisttps
add
cmp
lea
cmp
sbb
mov
das
scas
push
enter
xchg
nop
fucomip
cmp
into
je
jne
pop
push
jge
inc
adc
icebp
mov
push
fmul
fidivl
jmp
xlat
lret
xchg
xchg
aas
pop
sbb
aad
sbb
imul
sbb
aas
jecxz
arpl
and
cmpsb
in
bound
dec
inc
imul
mov
sub
shlb
inc
push
cmc
movb
inc
in
sarb
rolb
clc
push
dec
mov
and
subl
testl
jae
and
cmovae
xchg
imul
xorb
repnz
aas
mov
lods
es
test
push
dec
add
or
lds
pusha
rcll
push
mov
ret
jbe
mov
sbb
mov
shll
ljmp
clc
jbe
or
js
call
nop
nop
add
dec
fisttps
mov
add
popa
mov
pop
add
sti
and
mov
cmp
fs
shll
xor
dec
dec
test
xchg
mov
adc
subb
xor
aam
xor
mov
mulb
iret
pop
jbe
imul
test
test
adc
out
inc
sub
adc
xor
pusha
mov
scas
cli
inc
mov
or
or
adc
cmpsl
fsts
addr16
mull
sub
test
inc
or
movsb
lea
jp
xor
test
test
cmpsl
idivb
cli
or
or
scas
lds
mov
pop
dec
mov
and
mov
xor
sarb
cli
add
pusha
shrb
mov
idivb
lock
or
pop
repnz
inc
mov
mov
mov
inc
and
loopne
rolb
cmpsb
inc
inc
fwait
shrl
es
aas
lock
mov
lods
int3
mov
cmpsb
push
loop
fadd
imul
mov
jle
mov
lock
ss
push
lods
xor
movsl
pusha
lahf
fwait
push
pop
add
pop
test
stos
cld
jle
xchg
fldcw
arpl
aad
xchg
inc
mov
sub
gs
imul
mov
loop
movsl
adc
dec
fimull
push
or
scas
and
call
popa
mov
push
mov
push
fistps
loop
xor
aam
adcb
mov
testb
add
mov
cmp
stos
mov
clc
pop
sub
hlt
dec
fwait
cmp
fdiv
and
sbbl
sti
shll
shlb
dec
test
js
shlb
ja
movsl
dec
cmpsl
xchg
into
fwait
push
or
and
or
cli
dec
push
test
inc
push
pop
pop
sbb
hlt
mov
add
cmp
mov
cmp
lods
fldenv
repz
insb
jp
cmp
and
outsb
inc
push
xchg
fsubrp
es
hlt
dec
push
scas
mov
push
sub
jge
inc
stos
ss
imul
les
lods
push
jno
bound
mov
mov
js
sub
out
mov
js
in
adcb
adc
rorb
cli
lods
lds
cltd
xchg
flds
addb
mov
or
mov
loope
aam
sub
rcrl
mov
cltd
stc
fimuls
jp
and
int
ret
iret
mov
sbb
mov
or
or
inc
and
sbb
pop
push
scas
dec
sbb
mov
test
test
pushf
or
jo
add
sbb
xor
orb
int
sbb
fcmovne
mov
push
fs
inc
inc
pop
popf
add
xor
pop
inc
add
inc
mov
inc
push
push
adc
cmp
nop
repnz
lahf
les
inc
mov
pop
xchg
adc
and
cli
xor
jne
divb
nop
xchg
in
ficoml
test
pop
fnsave
mov
loop
sbb
and
jle
lock
pop
insb
inc
xor
inc
mov
ffreep
cmpsb
cmp
jmp
push
pop
jge
lret
in
rolb
loopne
xor
push
call
sbb
call
test
and
xchg
jmp
push
repz
pop
inc
and
jp
push
inc
sbb
sar
lret
and
dec
lcall
cmp
pop
sar
sbb
pop
lock
pop
inc
test
and
pop
incb
pop
in
push
stc
add
sub
mov
dec
pop
rclb
dec
out
mov
loope
fcoms
clc
sub
dec
sub
cwtl
sti
pop
and
or
js
dec
jno
inc
divb
mov
sub
xchg
lahf
rorb
pop
sub
das
dec
push
jecxz
or
js
jg
sbb
enter
call
fimuls
push
sub
mov
or
dec
sbb
add
das
pusha
mov
add
jge
push
add
ljmp
test
pop
out
push
inc
fs
stc
lcall
subl
adc
pop
or
stos
test
outsl
fucomi
add
mov
push
adc
sbb
mov
loopne
inc
addr16
je
hlt
sar
cltd
pop
sbb
scas
inc
pusha
ja
scas
dec
or
push
cmc
mov
out
stc
cltd
es
mov
add
insb
repnz
sar
rorl
cmp
and
insl
sbb
xchg
jge
scas
add
xchg
or
popa
add
arpl
dec
das
ds
adc
xchg
add
xor
push
lds
out
push
shl
push
mov
test
ss
movl
fwait
ja
stos
insl
pop
sub
mov
jae
fldenv
clc
add
das
jge
ret
push
fbstp
push
scas
bound
or
insb
fisttpll
repz
das
imul
and
les
pusha
cld
ljmp
dec
push
and
inc
sbb
jno
push
lods
mov
jne
pop
or
jge
mov
fisubl
outsb
cld
push
pop
int
xorb
rorb
out
loop
mov
or
or
imul
iret
adc
jo
cmp
mov
push
mov
add
adc
pusha
pop
jmp
sbb
cwtl
ja
out
xor
sbb
adc
mov
lea
mov
fdivrs
rcl
xchg
cmc
popf
or
mov
bound
pop
add
lahf
iret
lret
push
or
jl
mov
arpl
mov
jnp
fs
jmpw
xchg
push
arpl
or
xor
sub
lock
xchg
pop
jle
loope
lcall
adc
mov
sbb
rolb
stc
popa
cmp
testl
incb
cltd
pop
and
mov
push
inc
in
pop
push
add
sub
mov
sbb
push
in
or
xchg
push
imul
inc
repz
icebp
in
push
dec
inc
mov
push
mov
push
pop
subl
test
push
je
nop
scas
sbb
xchg
lcall
arpl
call
xchg
jne
push
in
lret
inc
cli
adc
rclb
js
add
xchg
popf
sbb
mov
inc
shll
jnp
lret
andl
loopne
pop
lcall
xor
xlat
pop
clc
int
cwtl
addr16
and
ja
jbe
jmp
sahf
pop
mov
shrl
outsb
dec
nop
jns
add
fiaddl
xorb
or
nop
mov
inc
insb
jb
stos
shll
lret
dec
and
xor
out
ja
lods
repz
add
mov
pop
aas
call
push
mov
not
int
xchg
cmpb
arpl
cwtl
ja
mov
sbb
lock
inc
cmp
repnz
bnd
fiadds
push
ret
cs
pop
inc
xchg
test
pop
icebp
dec
rolb
repnz
push
pusha
dec
or
mov
xchg
incb
xor
loope
imul
stos
and
clc
mov
icebp
das
cld
ret
sbb
pop
mov
or
popl
push
cmpsl
xchg
outsl
sub
xor
popa
movsl
add
mov
test
pop
or
pop
repnz
xchg
cli
lcall
aas
add
call
add
sub
aas
fcoml
ret
jp
loope
inc
and
jne
xor
xlat
mov
fstps
lcall
push
jecxz
call
xor
les
test
push
cmp
lret
jne
aad
bound
shlb
sbb
les
or
mov
inc
xor
movsl
or
fimull
fsubrl
mov
fiadds
into
lds
push
mov
xor
xor
lds
xor
repnz
ljmp
adc
sbb
lret
in
inc
jns
jge
fucompp
pop
gs
or
mov
test
sti
int
ja
sahf
jne
fnsave
daa
add
jle
pop
or
icebp
bound
push
cmp
dec
dec
jmp
shlb
push
or
into
and
dec
rolb
ret
pop
and
sar
test
addr16
imul
les
or
xadd
cmp
sahf
xchg
cmp
popf
cltd
sbb
push
pop
ret
fwait
mov
bswap
cltd
insb
adc
cltd
scas
cld
inc
xor
fmuls
jge
push
scas
inc
and
nop
jb
mov
icebp
inc
sbb
adc
out
adc
and
js
and
pushf
cld
icebp
nop
or
out
sub
adc
es
xor
mov
pop
push
les
cltd
dec
add
maxps
mov
jecxz
dec
mov
mov
hlt
add
push
pop
mov
xchg
pop
xor
les
test
mov
test
jmp
orl
addr16
cmp
cmp
jp
ret
inc
push
shrl
rcll
in
mov
fs
inc
pop
in
xchg
repz
adc
iret
lock
cmp
dec
fsubrs
insl
sub
add
mov
jmp
adc
mov
add
inc
or
je
aad
sbb
rclb
stos
adc
enter
mov
into
out
add
ljmp
ret
add
lods
adc
inc
or
mov
fisubrl
adc
dec
add
mov
imul
push
movsb
jo
lods
and
dec
sub
xor
imul
or
and
mov
mov
aam
and
std
sub
sahf
cs
popf
js
pusha
dec
mov
inc
jnp
sbb
das
mov
dec
sahf
xchg
jl
xor
sti
or
push
sbb
mov
xchg
loope
outsb
fcomp
dec
add
pop
mov
test
dec
loopne
xchg
and
mov
subl
ret
adc
mov
mov
sbb
es
in
inc
jne
in
add
test
stc
ss
xor
mov
inc
jle
cmp
mov
clc
sbb
push
sbb
mov
mov
or
test
call
lcall
xchg
pop
lock
inc
mov
cmpsb
hlt
and
cmp
les
movsl
adc
movsb
sbb
cli
ret
add
fs
leave
adc
xchg
fbld
jo
pop
dec
push
dec
mov
adc
fisttpll
inc
inc
or
push
dec
scas
mov
xor
int3
addr16
cmp
mov
dec
mov
test
sub
or
add
loope
mov
jge
cld
sahf
rcrb
jmp
push
sub
mov
stos
pop
push
jge
mov
dec
pushf
push
push
pop
shlb
cli
inc
ret
rcll
or
cli
pop
jge
out
pop
lahf
and
push
movl
dec
dec
popa
cmp
arpl
dec
cmpsb
adc
iret
push
test
push
test
jle
lock
arpl
mov
fidivrs
les
insb
mov
out
loop
xor
pop
lock
or
cmpsb
mov
jo
sbb
push
ror
adc
sarb
movb
adc
jo
push
call
popa
xor
aad
aaa
mov
pop
pop
out
jae
loopne
push
mov
je
movsb
pop
icebp
push
jle
mov
add
or
movsb
or
test
pop
push
pop
cltd
call
and
int
rorl
sbb
ljmp
pop
inc
push
xchg
scas
cwtl
dec
and
aaa
hlt
add
sub
inc
xlat
imul
pop
push
jecxz
sbb
and
mov
jle
mov
and
pop
out
sub
push
and
adc
rclb
outsb
jb
jno
mov
jbe
cmpsb
add
xor
loope
add
shlb
inc
xlat
push
clc
xchg
rclb
outsb
xchg
aad
loopne
cmp
sub
push
and
pop
dec
pop
sbb
dec
into
push
or
and
test
in
mov
jno
sti
push
iret
filds
sub
adc
push
adc
jne
inc
xchg
dec
rolb
mov
pop
into
dec
cmp
adc
adc
mov
mov
adc
pusha
inc
pop
sub
dec
out
or
add
mov
out
fs
jne
shrb
jnp
pop
mov
sbb
sub
in
lcall
mov
lret
fmull
test
xor
mov
hlt
push
imul
mov
aad
mov
mov
enter
cld
or
add
std
mov
lods
lahf
mov
sub
xchg
mov
pop
push
or
sub
cmp
insl
inc
idiv
clc
pushl
and
adc
jp
mov
and
xor
sbb
jmp
mov
mov
js
lret
pop
cmpsl
lea
cmc
jg
clc
push
push
push
outsb
and
mov
fadds
push
leave
xor
push
movsl
and
bound
test
mov
orb
mov
and
out
cld
scas
mov
pop
sbbb
in
inc
add
orb
mov
hlt
jecxz
inc
sbb
jl
int3
in
cmp
js
dec
or
lock
cli
movsb
or
pop
shll
stc
lret
mov
fmul
cld
push
and
pop
xlat
inc
sub
adc
mov
out
mov
dec
ljmp
dec
mov
dec
xchg
jmp
adc
ljmp
inc
push
inc
clc
mov
lea
mov
ficompl
inc
xchg
iret
movsl
cmp
pop
je
mov
and
adc
out
and
sbb
push
aam
out
mov
cmp
and
add
cmp
jo
add
out
mov
aas
sbb
insb
push
outsb
test
data16
inc
in
cmc
cmp
in
lahf
push
cmp
sub
int3
mov
lods
inc
inc
or
mov
sub
pop
jg
cli
cmp
add
jae
bound
pop
adc
adc
push
das
repz
inc
adc
jmp
sub
test
stos
pop
hlt
mov
test
repnz
xchg
mov
or
jns
lods
push
mov
packuswb
sbb
inc
mov
jmp
sbb
inc
divb
mov
movsb
pop
or
adc
movsl
icebp
outsl
popf
inc
rolb
jns
pop
daa
mov
cmp
and
push
les
push
dec
cmp
lock
pop
or
cmpsl
xchg
xchg
repz
pusha
and
clc
imul
and
cmpsb
dec
das
jo
or
push
adc
jecxz
sbb
pushl
xchg
lock
xor
sub
pop
addr16
lret
je
rcr
ja
out
dec
pop
cmp
cmpsb
xor
sbb
aaa
ds
and
mov
fsub
addr16
push
aas
lods
push
inc
or
mov
mov
cs
add
pop
xorb
shl
xchg
test
call
pop
aaa
shrb
inc
shl
jle
push
sarb
pop
jno
test
mov
fildll
push
call
stos
mov
add
pop
icebp
or
jl
popa
cli
xor
test
ret
insb
test
mov
in
add
int3
insb
and
jbe
rorb
idivl
sub
rcrb
mov
cmp
mov
and
into
xchg
ss
dec
rcrb
push
pop
sbb
xchg
dec
pop
mov
mov
jo
mov
xorb
into
adc
das
push
dec
mov
iret
ljmp
inc
push
movsb
jnp
stos
sub
mov
popw
jle
test
mov
add
pop
cli
jmp
xchg
test
push
aaa
fdivs
ljmp
add
push
pop
sbbb
aad
pop
push
push
popa
and
fcoml
stc
push
aas
loopne
push
dec
jb
adc
mov
cmp
shlb
dec
jno
xchg
ljmp
jle
sbb
mov
cwtl
outsb
fabs
pfrcp
jns
sub
adc
lcall
mov
add
pop
lret
inc
repnz
imul
mov
imulb
nop
add
push
xchg
adc
jg
mov
xchg
cmc
lret
int
dec
mov
adc
test
hlt
sbb
outsb
jns
sub
and
shlb
jle
mov
outsl
out
icebp
push
add
lahf
mov
mov
sbb
mov
cwtl
jmp
paddb
mov
es
add
addb
std
xchg
cmc
xor
jmp
negb
and
cmp
dec
popa
push
mov
pusha
jb
pusha
inc
or
or
clc
cmp
rcrb
lahf
lea
lret
ja
add
gs
int
mov
inc
and
sbb
stos
insb
lret
insb
lods
sbb
jp
and
inc
mov
inc
cmc
loopne
push
xchg
iret
add
or
rcll
mov
cs
xor
sbb
cmp
cld
sbb
sub
test
pop
test
fdivr
cmp
or
xor
sub
push
icebp
jns
pop
cmp
btc
cs
xchg
cmp
je
add
mulb
mov
add
data16
or
dec
test
cmp
les
in
mov
imul
nop
leave
sarb
inc
loop
rcrb
jp
in
push
mov
rolb
xchg
je
or
sub
fwait
pop
test
pushf
addb
out
rclb
fidivrl
cmp
pop
repnz
std
lock
mov
add
pop
mov
push
push
dec
les
stos
mov
ret
adc
mov
daa
hlt
push
sarb
push
add
xchg
movsl
scas
js
sar
sub
pushf
and
inc
std
cld
mov
in
pop
adc
adc
and
xchg
movsl
ret
jp
jne
fdivrs
jl
jb
es
xchg
fiadds
xor
aad
scas
loopne
aas
adc
push
add
shll
les
loop
outsb
movb
add
cmc
repz
add
sub
daa
xor
mov
stos
insl
call
and
aas
enter
icebp
xlat
push
xchg
scas
sbb
jl
mov
lahf
push
or
push
sti
pop
cld
inc
xchg
mov
cmp
std
aam
test
or
mov
push
add
scas
push
push
mov
bound
cmc
sub
jb
sbb
cmp
stos
inc
cld
pop
cmp
jns
pop
icebp
notb
clc
add
push
sub
movsb
mov
mov
stos
pop
and
outsb
les
insl
fcmovnbe
sbb
cwtl
mov
inc
lret
dec
fsubrs
pop
push
push
outsl
iret
xchg
scas
je
movsb
popa
lods
cmpb
inc
das
rclb
movsb
cmp
sub
shlb
lret
jo
or
jmp
insb
mov
sarl
aam
sub
popa
cmp
xchg
mov
push
mov
je
loope
mov
insb
cli
lds
dec
shrd
or
and
adc
clc
jnp
lahf
xor
rclb
sub
sahf
inc
inc
mov
mov
sub
dec
xlat
daa
pop
mov
push
xchg
loopne
sbb
xchg
adc
andl
xchg
lods
or
push
mov
mov
and
addr16
mov
sub
icebp
or
push
js
test
je
sarl
out
xchg
mov
mov
mov
aas
adc
lods
js
push
loop
stos
jo
mov
xchg
sub
daa
xor
in
hlt
adc
icebp
or
loopne
or
push
ja
add
and
inc
inc
stos
stos
lds
test
aas
dec
cmpb
sbb
aas
ljmp
jne
test
stos
sti
mov
int3
aas
inc
sbb
xchg
mov
clc
jle
adc
movb
dec
jmp
dec
push
imul
cli
jnp
js
int3
test
mov
fmul
xchg
rcll
data16
leave
sar
lret
mov
xlat
xchg
pop
and
loope
cmp
jl
dec
sbb
jl
gs
stos
xorl
push
cs
dec
inc
inc
lea
nop
ss
mov
dec
pushl
pop
or
jecxz
shrl
scas
push
loopne
leave
cli
xor
jb
imul
sbb
sbbl
xor
cmp
push
es
add
cmpps
stos
or
xchg
lret
pop
inc
adc
aas
test
jmp
sti
mov
lock
cmpb
mov
insb
mov
sbb
sar
bound
and
mov
cld
sbb
mov
rorb
es
add
repnz
mov
sbb
rolb
adc
jp
mov
mov
popf
adc
cmpsl
fmul
jnp
xchg
iret
inc
pusha
sub
scas
or
lret
xchg
mov
aad
leave
cmc
test
ret
push
insb
add
xor
push
mov
pop
into
clc
sahf
lahf
and
cmpb
sbb
popaw
imul
sub
sbb
mov
xchg
jge
sbb
pop
xor
ds
stos
daa
xor
loopne
jmp
incl
adc
fwait
dec
or
loope
jmp
add
xchg
data16
add
push
dec
insl
dec
loop
stos
shll
rcll
das
or
xor
mov
push
sub
lods
adc
dec
add
sahf
cld
stos
dec
inc
pop
je
adc
or
aas
adc
js
push
mov
dec
fdivr
ss
scas
lock
sarb
scas
je
test
xchg
mov
jl
into
cwtl
repnz
cmp
push
adc
call
lea
orb
jnp
sbb
jp
mov
fwait
adcb
clc
sbbl
fisttpll
lds
adc
and
or
imul
fdivrs
shlb
push
inc
jo
pop
fidivl
cmpsb
fldt
xor
adc
push
add
add
fsubr
scas
jl
cltd
test
testb
xrelease
popf
mov
cmp
outsl
fistpl
hlt
add
jae
loopne
push
or
pop
test
cmp
add
int3
and
sub
jg
add
pushf
clc
dec
and
push
fs
std
push
mov
mov
ret
add
dec
lock
jge
out
pop
adc
str
imul
sbb
frstor
sti
sbb
scas
daa
movsl
outsb
inc
rorl
pop
les
rcr
add
popf
jno
ffreep
mov
push
fldt
cmpsb
addl
in
xor
mov
inc
jl
mov
sbb
ja
push
add
inc
add
or
mov
js
push
mov
inc
lret
xchg
adc
mov
pop
mov
movsb
popa
popf
adc
icebp
pop
sbb
pop
clc
pop
in
mov
adc
push
xchg
or
xor
pusha
sbb
mov
mov
shll
cs
xchg
push
or
and
popfw
int
stos
sbb
or
cmpl
cmpsl
sub
sub
mov
aaa
test
mov
icebp
push
pop
orb
int
sti
xor
sub
roll
loop
mov
int3
fldenv
sub
mov
es
divb
add
push
xchg
and
add
dec
cmp
rolb
sbb
lret
test
imul
cmp
daa
dec
outsb
xlat
test
dec
popa
in
dec
inc
push
fcos
xchg
sbbb
adc
or
cltd
and
fs
aam
mov
pop
outsb
push
add
xchg
outsb
ror
inc
fwait
add
push
jmp
xchg
popa
pusha
xchg
cmp
add
rolb
mov
jg
mov
dec
dec
decb
sarb
adc
addl
cmc
or
mov
inc
sarb
mov
mov
dec
pop
and
lcall
sbb
loopne
or
shlb
and
mov
es
shr
in
mov
and
cmp
je
test
pushf
loope
aaa
cmp
mov
push
je
stos
jl
xor
imul
cmpb
repnz
mov
dec
je
fiadds
inc
loop
pop
into
xor
xchg
cmp
push
sbb
jb
xchg
adc
jl
mov
sbb
dec
sbb
orl
or
and
fists
incl
mov
jmp
cmpsl
shll
add
scas
mov
or
and
fsubr
dec
add
mov
leave
fimull
fsts
push
shl
xor
outsl
mov
and
cmp
add
sub
in
lock
xor
negb
call
push
mov
outsb
sbb
inc
sti
stc
mov
mov
pop
fnstcw
clc
jne
push
jp
pop
nop
pop
mov
push
test
daa
mov
pop
mov
mov
test
fsub
icebp
jmp
mov
push
xchg
jp
addb
jo
and
out
mov
cmp
mov
fisubrs
pop
jge
ljmp
pop
or
test
jnp
mov
and
pop
hlt
dec
scas
aam
sub
fucomi
lcall
dec
and
and
hlt
pop
clc
jno
mov
mov
fnstsw
mov
nop
mov
xor
cmp
inc
fsubl
into
mov
or
jns
lcall
dec
add
test
xchg
stos
clc
mov
jle
inc
jns
sub
pop
or
ret
clc
cmp
imul
mov
cld
add
test
or
js
xor
and
dec
shrl
addb
lock
gs
xlat
xchg
or
out
lahf
in
or
push
mulb
mov
cmc
or
pop
add
mov
lods
sbb
dec
xchg
into
mov
adc
mov
inc
daa
pop
clc
cmp
sbb
xor
pop
lock
inc
cmp
cmp
inc
lret
mov
cwtl
leave
sub
dec
in
test
pop
test
clc
push
or
sub
int
and
lock
pusha
idivl
jmp
mov
push
outsb
mov
fwait
into
lock
loopne
mov
popf
cltd
lock
shlb
nop
int3
ljmp
jg
mov
rcr
or
xor
or
daa
aam
sub
cmp
icebp
shll
push
push
sub
ljmp
adc
jle
push
mov
insl
jge
movswl
and
stos
push
loopne
sbb
inc
mov
mov
pop
sbbl
ja
arpl
lds
mov
stos
jecxz
int3
dec
ljmp
jmp
push
push
and
mov
dec
jnp
or
sub
jbe
sbb
mov
sbb
aad
dec
icebp
xchg
fdivrp
js
pop
mov
dec
sub
and
insl
mov
out
call
xor
xchg
imul
gs
xchg
inc
mov
sti
stc
mov
clc
pop
xor
mov
fimuls
aaa
pop
aad
jmp
test
test
push
fidivs
addb
loopne,pn
ds
sub
mov
mov
testb
in
push
hlt
js
pop
xor
add
xor
xor
mov
lock
loope
rorb
or
cld
ret
jne
pop
pusha
daa
push
sbb
inc
cld
sub
add
sub
and
into
test
stos
add
jnp
or
lcall
mov
mov
mov
rorb
mov
ret
lock
xor
out
insl
cli
je
outsl
aam
test
shrb
test
dec
in
or
jecxz
nop
das
add
jl
mov
pop
outsb
sub
ljmp
pop
movsb
loopne
aad
add
insb
ljmp
push
imul
xor
push
push
add
xor
sub
cmc
mov
push
sub
inc
mov
je
imull
lock
cmpsl
push
icebp
inc
hlt
ds
sbb
or
cwtl
and
and
jge
out
nop
pusha
and
adc
inc
sbb
mov
in
jne
xchg
sbb
mov
mov
jmp
movsl
daa
jg
ret
add
data16
ds
and
lods
aas
loope
ds
mov
xor
cmc
jno
xchg
cmpsb
loope
fwait
xchg
push
dec
int3
mov
stc
stc
stos
pmulhuw
and
dec
add
call
ljmp
inc
lea
cmp
xchg
push
imul
mov
sbb
mov
sub
repz
inc
cmpsb
loop
dec
loopne
mov
fmul
jnp
push
mov
lods
xor
mov
sbb
mov
js
shll
loopne
mov
jge
sub
stos
pushf
push
and
mov
dec
xchg
mov
std
popf
cmpsb
ror
or
xor
loope
lret
pushf
imul
mov
out
mov
or
cmpsl
jbe
sti
and
in
insb
push
pop
fiaddl
push
rcrb
je
pop
sarb
test
stos
pusha
mov
shl
pop
fcoml
stos
test
mov
jg
dec
cmpsl
add
mov
popa
into
icebp
mov
sbb
add
push
jge
and
sub
test
xchg
popa
xchg
lods
bound
mov
mov
inc
and
mov
jecxz
or
mov
inc
xchg
insb
or
call
sbb
movsl
lock
shr
mov
cwtl
sub
xor
repnz
xchg
enter
jge
jecxz
add
ss
xchg
std
xorl
sahf
pop
sbb
push
rclb
inc
inc
call
fisttpl
dec
push
mov
cmp
pop
sub
inc
sbb
jb
mov
jg
popa
fisttps
es
stos
mov
in
imul
add
aas
fwait
cld
sub
lods
xor
ja
jns
cwtl
cmp
mov
pushf
and
loopne
scas
daa
cltd
push
pop
insl
push
push
fwait
movsl
xor
mov
pop
rcr
lahf
mov
test
cmp
pop
lea
mov
push
cmc
les
ds
xlat
dec
arpl
and
pop
std
xchg
sub
push
mov
xor
enter
test
push
cmp
dec
fldl
and
bound
mov
out
xor
cmpsl
lock
leave
cltd
jno
jp
fwait
mov
and
and
xchg
out
mov
push
jbe
fcompl
sub
jo
std
mov
test
sbb
fistl
js
xorl
pop
iret
cld
or
cs
and
pop
test
outsl
cmp
out
add
dec
je
pop
and
pop
out
sub
adcl
lock
lret
pop
jmp
inc
jp
fstpt
add
idivl
nop
add
lcall
and
push
mov
xchg
ds
or
adc
pop
adc
cmp
stos
pop
adc
rcrb
push
cmpsb
ror
pop
jbe
dec
imul
xor
pop
and
sbbb
notb
dec
mov
mov
es
jle
push
push
sbb
and
jp
movsb
mov
aad
js
jmp
adc
adc
sahf
xor
adc
icebp
mov
daa
inc
lcall
lods
adc
inc
pop
out
mov
or
fisttps
data16
mov
adc
pop
sbb
lock
ret
ja
stos
cli
mov
sub
inc
es
cmpsl
sti
fst
icebp
lods
daa
lea
subb
xchg
dec
inc
inc
call
pop
pop
out
cli
popf
mov
pushf
cmp
mov
ja
mov
mov
je
cmp
xchg
insb
or
cs
ljmp
in
or
push
pushf
mov
imul
push
jmp
mov
js
xchg
sub
push
in
leave
pusha
out
and
in
jb
js
push
outsb
and
fninit
or
adcl
cltd
nop
insb
pop
ljmp
push
stos
lret
pop
mov
jnp
cmpsl
xchg
nop
leave
bound
pusha
lock
bound
push
jg
popf
scas
mov
push
insl
mov
xchg
scas
dec
pop
sarl
fsts
fsubrl
sub
inc
imull
aam
cmp
pop
xor
jnp
mov
mov
xchg
test
add
dec
cmpsb
test
mov
mov
pop
xchg
xor
ss
push
shrb
bound
or
filds
and
loope
sbb
pop
mov
stos
andb
lods
lret
push
xor
jl
dec
mov
xchg
aas
push
scas
sub
test
lret
push
js
push
sbb
inc
mov
xchg
and
and
add
and
lahf
mov
imul
sub
or
ret
insl
jno
and
xchg
neg
mov
pop
mov
ds
dec
sbb
cmpsl
dec
add
push
pushf
pop
inc
imul
add
sbb
je
inc
push
out
data16
inc
jb
adc
inc
mov
fs
inc
pop
hlt
pop
adc
cmpsl
imul
lret
roll
dec
add
inc
aam
movsl
add
pop
mov
loop
inc
mov
pop
loopne
pop
int
pop
fwait
add
out
mov
bound
pop
sti
adc
mov
stos
and
imul
jecxz
mov
push
mov
adc
fldenv
into
data16
bound
pop
adc
repz
mov
fwait
shrb
dec
dec
fiaddl
test
xchg
gs
jmp
pushf
xchg
aaa
jecxz
push
dec
inc
xchg
push
adc
xor
cmpsb
movsl
cmpsb
push
jae
or
or
inc
and
sub
adc
inc
in
ljmp
xor
jbe
mov
enter
stos
jnp
jne
or
bound
jp
int3
cmc
mov
pop
cld
jb
adc
adc
icebp
jmp
jo
cli
sub
and
jle
add
or
add
in
call
cmpb
loope
add
in
rorl
lods
pop
out
test
clc
stos
ss
jnp
shl
sbb
push
pushf
jno
add
daa
mov
dec
sbb
jl
inc
pop
sbb
jmp
aas
add
cld
cld
icebp
lock
mov
fsubs
mov
movsl
fists
dec
andl
push
dec
iret
repnz
clc
sbb
mov
into
mov
mov
cmp
pop
lret
mov
xchg
and
xchg
fimuls
inc
nop
cld
cmp
sub
cs
rcl
stos
inc
or
loop
inc
inc
dec
or
inc
xor
mov
in
nop
push
fs
imul
out
mov
mov
sub
xchg
sbb
xor
xor
jge
in
xorb
leave
push
xchg
std
pop
inc
aam
xchg
inc
mov
sbb
push
clc
xor
imul
dec
popf
inc
fninit
xchg
rorb
sahf
add
clc
js
out
sub
fwait
jns
pop
inc
iret
mov
adc
push
dec
psrad
mov
test
xchg
add
shlb
hlt
test
jle
ret
pop
jmp
icebp
or
fsubl
xor
cmp
xchg
inc
scas
iret
clc
dec
popl
fcoml
lods
in
stc
push
out
ja
xor
xor
cld
dec
loopne
mov
inc
dec
mov
test
inc
subl
inc
push
xlat
cmp
enter
inc
femms
mov
adc
xor
inc
pop
xor
cmp
cld
mov
xlat
test
cwtl
xor
pop
inc
xor
or
jg
inc
imul
aam
sbb
out
mov
pop
nop
loope
sbb
add
scas
adc
and
mov
sbb
test
stc
out
push
lret
mov
mov
jp
js
fisttps
enter
dec
lcall
jne
aas
push
fcmovne
pop
fists
cli
sti
mov
loopne
out
scas
inc
pop
fs
adc
jmp
sbb
lahf
pop
mov
sbb
jbe
call
icebp
adc
sbb
mov
call
pop
sbbb
or
xor
cld
cld
mov
orl
cmc
icebp
jl
xchg
arpl
jns
insb
xor
pop
inc
xacquire
pop
pop
pusha
inc
sub
int
pop
imul
xchg
sub
incl
mov
insb
sysret
clc
jg
pop
jle
loop
mov
mov
push
enter
jmp
orb
and
mov
push
mov
fcomps
adc
imul
xchg
iret
add
mov
pusha
add
dec
roll
mov
pop
push
roll
das
adc
jecxz
insb
adc
adc
inc
roll
xor
cwtl
push
repz
add
int3
pop
or
leave
fwait
jp
cmp
sbb
xor
enter
cmpsl
adc
jle
sub
inc
dec
lret
or
push
add
jbe
sbb
std
or
or
scas
lock
push
push
or
js
pusha
shr
mov
xor
clc
sbb
mov
leave
popf
add
fistpl
aam
dec
aad
test
addl
push
sub
movsl
negl
sub
sbb
jns
movsb
cmp
dec
icebp
cmc
arpl
sbb
xchg
rcr
movsb
rcll
dec
cmp
fstl
xchg
lds
pusha
mov
scas
cld
nop
dec
inc
or
push
xchg
fwait
in
push
fadd
mov
ret
mov
mov
pop
bound
dec
imul
mov
lahf
pusha
sub
adc
sbb
adc
xchg
shll
push
loop
cli
test
int3
inc
lcall
movsl
cmp
rol
enter
popa
adc
das
cld
dec
cmp
das
push
mov
pop
fsub
inc
jo
ret
mov
dec
leave
scas
inc
stos
outsb
mov
or
push
jecxz
inc
pop
sarl
mov
sbb
or
or
decl
movsl
lods
sbb
mov
sbb
add
shrb
pop
outsl
test
int
jp
es
inc
dec
aas
rolb
xor
test
mov
xor
add
mov
cwtl
jnp
or
push
cmp
jnp
and
mov
je
or
addb
sub
cmp
mov
pop
popa
popf
insb
loopne
dec
jle
or
aas
adc
and
fnstsw
iret
dec
cwtl
push
lcall
js
pop
popa
ret
add
add
pop
jno
lock
lods
push
push
cmc
jle
dec
or
mov
cmp
sbb
sub
jns
inc
mov
aam
xchg
lods
mov
mov
xchg
jb
ljmp
mov
lcall
jecxz
push
pop
inc
jp,pt
loopne
sub
jl
dec
mov
fidivrl
cmpl
xchg
fsubr
push
mov
jge
adc
sbb
inc
sbb
jmp
sbbl
sahf
xchg
cmp
xchg
mov
jg
dec
adc
shll
pop
or
fmull
stc
shrb
or
in
or
mov
arpl
xor
mov
and
test
call
mov
jl
incl
mov
pop
mov
jg
inc
dec
xor
adc
adc
stc
fwait
or
push
imul
mov
shufps
xor
ret
inc
jb
jns
ror
sti
jmp
frstor
xorb
push
frstor
test
dec
jge
ja
mov
mov
fimull
dec
jmp
fstl
pop
lret
sbb
push
mov
jns
inc
scas
mov
inc
add
mov
ret
mov
inc
add
adc
rolb
push
scas
ret
loopne
ret
mov
stos
sub
sbb
push
push
pop
dec
sbb
cld
stos
mov
fnsave
adc
mov
and
pop
jne
pop
lods
adc
sti
push
or
insl
push
scas
out
lret
add
cs
mov
mov
out
or
mov
pop
roll
popf
jle
fs
mov
and
vmovntps
lcall
cltd
cli
inc
xor
cmp
and
cmc
mov
xchg
test
xor
lret
mov
mov
or
sbb
push
addr16
sbb
push
jle
aas
mov
repz
add
mov
mov
and
outsb
ret
dec
xor
mov
insb
in
and
clc
test
cs
out
pop
bound
out
pop
data16
mov
sahf
xchg
repz
test
dec
xor
lret
js
mov
shrl
cmpsb
loope
cmp
mov
mov
push
xor
sub
mov
jns
inc
xchg
pushf
fsubrl
inc
es
pop
rolb
sub
push
and
fadds
call
and
push
or
xor
imull
test
dec
push
and
dec
xor
fiaddl
loopne
inc
sub
jp
dec
push
les
push
movsb
push
fistpll
jo
pop
inc
inc
and
xchg
insl
adc
aad
aad
test
int
data16
dec
scas
pop
int
rcrb
adc
lds
sub
xchg
cmpsl
movsl
pop
popl
mov
jp
in
adc
dec
sbbb
cs
orl
mov
push
das
xor
push
inc
mov
sub
outsl
out
and
or
sbb
cli
scas
cmpl
jbe
dec
testb
test
dec
mov
mov
xor
push
cmpb
add
pop
pusha
cli
loop
inc
adc
jo
xchg
cwtl
or
jmp
cld
int
out
lret
ret
cmpsb
movsl
dec
push
stos
mov
inc
mov
nop
fisubs
push
es
adc
les
jg
ds
cmpsb
rcl
popa
adc
enter
jo
xchg
or
mov
xchg
stos
outsb
repnz
dec
mov
test
insb
jmp
push
adc
lods
cmp
jecxz
jbe
test
inc
push
enter
je
imul
shr
in
or
imul
stos
push
pop
cli
xchg
sarl
jl
cli
js
inc
loope
jmp
mov
mov
outsl
mov
dec
pop
cld
jb
pop
xchg
jle
call
jmp
xor
lds
sub
movsb
pop
fbld
pop
cmpsl
out
nop
imul
push
pop
daa
add
lock
jmp
push
dec
dec
rcll
aad
or
addl
adc
push
fcmovnbe
sub
stos
add
rclb
pop
and
jp
ficompl
test
mov
stos
cld
mov
aam
loope
orb
ret
scas
aas
xchg
imul
in
mov
push
lods
jg
lcall
xor
pushf
cmp
scas
mov
adc
push
outsl
pop
mov
adc
ss
andl
ret
mov
sub
add
leave
loopne
dec
inc
jge
test
lea
xchg
loopne
sbbl
sar
add
add
std
push
sub
push
mov
cmp
mov
push
mov
outsl
mov
call
cli
loopne
sub
inc
getsec
ficoms
in
daa
mov
inc
pop
jle
inc
pop
xchg
pop
cli
inc
add
add
adc
and
mov
push
cmp
xor
or
lods
les
xor
loopne
std
int3
add
es
pop
mov
paddsb
ds
cmp
dec
cmpsb
movsb
js
jle
xor
fnstenv
mov
lcall
or
jl
mov
enter
cmp
imul
rcrl
mov
pushf
das
test
faddl
xor
adc
test
add
push
movsb
mov
jmp
fisttpll
cmp
sbb
mov
sbb
jb
cmp
add
insb
call
xchg
popf
dec
and
dec
fcomi
xchg
decb
sbb
xor
ds
repnz
mov
rolb
lods
push
loopne
test
jno
mov
dec
and
mov
push
stc
mov
or
and
and
push
jnp
or
aaa
aaa
mov
faddl
push
jb
sbb
lods
icebp
sbbb
std
pop
and
adc
icebp
cmpsb
ret
or
cmp
inc
jbe
and
loopne
les
lcall
les
pop
sub
aam
inc
es
mov
sub
mov
inc
fcmovb
rclb
sub
aas
xchg
sbbb
hlt
push
loope
adc
in
or
mov
sahf
out
xor
and
or
das
xor
out
push
ds
or
sbb
test
sbb
cmpb
mov
out
jo
jbe
mov
add
push
outsl
negb
and
sub
data16
push
dec
repz
xor
daa
inc
push
imul
inc
mov
divb
jae
xchg
test
sbb
jp
adc
mov
pop
cwtl
outsb
dec
or
movb
cmpw
dec
or
adc
inc
jbe
les
lock
jle
cmp
add
ret
and
mov
fldl
inc
xor
adc
decb
jl
adc
xchg
mov
subb
and
aam
and
mov
and
adc
fcoml
bnd
or
sub
std
incl
stos
jns
jle
cmp
dec
outsl
mov
pop
and
xor
or
mov
xchg
pop
lret
mov
call
jp
insl
xchg
pop
ficompl
mov
xor
mov
test
lods
lret
xlat
pop
mov
xor
adc
sbb
sahf
stos
sbb
ds
jl
push
pushf
xchg
or
outsl
lods
xchg
vmread
add
mov
fidivrl
push
rolb
dec
jmp
fs
mov
fstpt
jne
js
cmpsd
jp
fldl
loopne
or
pop
imul
test
fidivs
inc
cwtl
lahf
xor
ss
fiadds
sbb
mov
push
and
mov
scas
mov
cs
xor
jg
adc
xlat
sbb
test
adc
cmp
nop
push
push
punpckhbw
xchg
sub
loope
sbb
cmp
insb
das
stos
mov
jo
jle
xchg
out
push
cmpsb
sbb
xor
addr16
mov
cmp
shll
iret
adc
rol
mov
mov
test
mov
push
mov
aad
dec
xor
fisttpll
in
xchg
movsb
das
js
jmp
in
mov
jno
mov
inc
data16
push
outsl
aas
adc
inc
sbb
popf
aam
jmp
pop
fcmovbe
dec
stc
call
pop
mov
movsb
hlt
in
sbb
js
sti
inc
mov
or
leave
cmp
subl
push
or
test
hlt
sbb
pushf
jmp
inc
or
das
add
movl
pop
mov
and
cmpsb
xlat
mov
jmp
sbb
cmp
cwtl
icebp
mov
jge
adc
and
mov
aam
inc
sbb
and
out
dec
fdivr
mov
inc
sar
dec
inc
or
fucomip
mov
fwait
sbb
xchg
and
test
test
lea
ja
loopne
mov
out
subb
int
in
inc
mov
xchg
adc
fildl
push
cli
lock
or
or
sahf
or
sub
scas
test
jo
loopne
cmp
sti
cmp
dec
xchg
shlb
sbb
lahf
or
scas
add
pop
jbe
icebp
xchg
test
push
movb
jl
out
je
aad
outsl
cs
ja
jmp
pop
add
adc
dec
mov
add
cmp
jle
inc
jno
mulb
pop
dec
sub
hlt
cwtl
sbb
mov
lock
icebp
std
xor
or
mov
sbb
andl
ret
adc
inc
inc
add
inc
mov
xor
outsb
rcrl
jge
shrl
sub
push
ja
sahf
adc
mov
xchg
scas
mov
scas
push
xor
popa
jne
mov
sti
mov
es
les
adc
fcmovnbe
sbb
mov
cltd
pop
cli
shrl
cmp
cli
xchg
or
mov
aas
jmp
adc
nop
sub
mov
add
ret
shll
sbb
or
inc
pusha
jbe
cmc
bound
sahf
arpl
adcb
inc
push
sti
lods
stos
testb
adc
or
jg
fiadds
ja
mov
mov
iret
push
mov
roll
mov
pusha
xor
sbb
lret
push
pop
mov
mov
call
fstp
mov
xor
push
cs
das
and
test
pop
call
pop
out
cmpsb
push
or
add
out
push
xor
sbb
in
mov
pushf
mov
mov
push
pop
mov
pop
mov
lock
jmp
test
cmp
pop
xorl
int
cmc
mov
push
mulb
mov
or
fwait
loop
xor
dec
mov
outsb
pop
cli
pop
ret
icebp
jle
cmp
cltd
pusha
outsl
pop
mov
sahf
dec
scas
dec
cmp
cmp
fisttps
cmp
in
xchg
out
loop
and
sbbl
pop
mov
ljmp
cmc
cmpsb
cmpsl
and
xor
sti
test
cmp
pop
and
mov
sbb
scas
lcall
sub
cmp
in
cmp
lcall
fldl
shll
mov
sbb
sbb
das
jbe
inc
insb
clc
ret
int
pop
jmp
sbb
mov
rorb
jl
sbb
cld
push
es
push
sbb
or
test
jo
jbe
mov
jg
sti
sbbb
les
cmp
sbb
sbb
inc
xlat
dec
mov
popa
or
or
das
cld
and
lret
push
idivl
ja
mov
and
or
sub
mov
push
test
in
not
cmpsb
xor
dec
pop
jp
xor
call
pop
rcll
lahf
mov
out
lcall
mov
sub
pop
xchg
mov
push
movsb
in
sarl
jle
cmp
cmc
test
add
cld
lahf
mov
and
mov
pop
lock
js
outsb
fsubl
push
adc
cwtl
pop
stos
dec
xor
jbe
push
lahf
wrmsr
mov
add
dec
cmp
stos
les
cltd
add
mov
les
lret
pop
cmp
and
sbb
addr16
pushl
mov
insb
in
push
mov
adc
pop
cmc
jmp
aaa
inc
jle
clc
leave
cmp
insb
push
loop
jo
arpl
sub
jmp
imul
jbe
adc
clc
stos
mov
push
mov
stos
xor
sti
cmp
push
sbb
push
push
sub
loop
shrb
sbb
push
inc
sub
sub
mov
les
test
cld
dec
push
xor
ret
aam
jo
and
cwtl
test
jmp
mov
popf
pop
jno
and
pop
lods
cmc
loop
hlt
sub
scas
jge
sbb
test
lret
push
mov
xchg
cvtdq2ps
lret
sub
xchg
daa
mov
cltd
lods
outsl
push
lock
or
fidivrl
jno
mov
sub
dec
icebp
pop
fiadds
lods
mov
les
stc
xor
cmp
pop
loope
lods
insb
adc
push
pop
fsubrl
std
lret
and
or
testl
imul
inc
dec
mov
add
scas
inc
sbb
div
ror
enter
bnd
xchg
hlt
jo
cmp
push
pop
inc
out
jg
dec
mov
call
mov
jb
je
xchg
push
xchg
ficoms
stc
scas
fisttps
int
ret
pop
aam
mov
test
les
adc
mov
arpl
xchg
aas
sbb
rcll
dec
ret
in
jnp
jae
js
pop
fnstenv
and
inc
push
addr16
jns
mov
inc
cli
pop
es
jbe
fildl
cmpsb
inc
xchg
jo
or
jmp
int3
scas
out
pop
adc
sub
fistpl
inc
out
push
mov
dec
outsl
daa
lret
test
dec
pcmpeqb
or
lods
pop
push
aad
test
and
xchg
jno
or
movsl
ret
inc
jmp
insl
xor
pushf
shr
fsubl
inc
sub
add
lods
repnz
push
push
ljmp
outsl
ljmp
sbb
push
lret
sbbb
jno
gs
test
sbb
xchg
adc
jg
fcomip
add
mov
outsl
cmpsb
setae
xchg
shll
inc
aaa
jl
pop
jg
jns
push
mov
push
jno
int
cmp
jle
xorb
js
movlps
jnp
or
mov
xchg
push
in
andb
or
fbstp
push
lahf
pop
pop
enter
cmp
adc
push
cmpsl
orl
sbb
inc
sbb
or
movsb
cli
inc
scas
insb
cmpsl
adc
divb
and
inc
adc
scas
jg
ss
scas
mov
cmp
push
js
iret
jo
out
adc
test
nop
les
mov
repz
fcoml
push
test
inc
add
push
push
pop
inc
mov
inc
pop
mov
lods
and
dec
aas
cmp
cltd
dec
nop
int3
outsl
sbb
inc
or
adc
dec
xchg
xor
push
cmc
push
test
dec
loopne
js
sub
push
push
adc
mov
mov
repnz
and
sub
push
pop
sub
pop
adc
ja
cmp
jg
jp
cmp
mov
cmp
nop
mov
in
pop
movsl
mov
pop
jp
mov
test
rorb
dec
rorb
test
push
daa
cmc
fwait
icebp
add
push
or
inc
pop
sahf
jae
push
pop
add
test
pop
dec
aad
or
mov
loopne
outsb
fwait
mov
lock
pop
adc
xchg
mov
mov
lock
dec
and
lods
cmp
xor
jecxz
mov
or
aam
inc
xchg
filds
push
out
mov
xchg
in
jge
test
sahf
xchg
xlat
jo
mov
xor
ret
aaa
add
ret
push
xor
push
into
add
inc
sub
push
or
jne
mov
mov
and
push
pop
add
rol
pop
pop
dec
push
shrl
les
xor
adc
aam
push
shll
sub
test
ret
jmp
push
and
xchg
sti
adc
nop
inc
test
xor
adc
cmp
push
jnp
push
pop
jo
in
cld
aam
int
stos
cmpsl
adc
hlt
pop
jge
adc
gs
adc
sub
mov
je
cmp
dec
filds
insb
sub
aam
add
fcoml
cmc
push
jg
test
test
xor
loopne
push
xor
pop
ss
and
sbb
and
pop
inc
add
mov
call
sarb
std
sarb
loop
or
dec
pop
aaa
push
xor
ds
sub
mov
je
fldt
movsb
andl
xlat
sub
push
ret
les
fs
mov
ror
mov
gs
push
add
inc
inc
inc
mov
shll
gs
cmp
or
popa
rcrb
mov
and
cmpl
fldl
push
pop
cmp
jecxz
sbb
fs
sub
mov
xchg
je
es
sub
jb
out
cmp
rcrb
cld
push
add
jle
ret
jl
jnp,pt
lahf
repnz
sahf
inc
ret
xor
lret
mov
addl
adc
test
aaa
lock
or
add
xlat
sbb
sub
stos
movsl
sub
jp
movsl
jmp
shld
iret
jecxz
and
xor
inc
jbe
call
sbb
ds
mov
pusha
push
xlat
loopne
shl
fs
mov
pushf
outsl
dec
sub
cmp
jb
cwtl
sbb
lods
sahf
aaa
pop
jg
mov
in
pop
inc
push
jmp
scas
push
pop
lds
or
push
add
das
scas
cs
inc
negl
cmp
inc
es
mov
aad
sub
icebp
mov
addr16
out
aas
push
adc
push
in
scas
xchg
hlt
pusha
leave
ftst
cmpsb
push
out
sbb
rclb
rcll
stos
out
inc
and
das
sbbl
ret
xchg
adc
xchg
mov
cmc
pop
mov
mov
je
cli
movsb
popw
mov
sub
jnp
dec
loope
xchg
sbb
inc
push
pop
mov
call
sbb
cs
xlat
loope
inc
clc
out
bound
gs
and
lds
xchg
stos
fwait
push
iret
mov
jne
or
dec
psubusb
jne
cltd
push
into
jp
sbb
adc
cmp
out
cld
mov
mov
adc
inc
inc
add
lret
sub
cmp
add
sbb
sti
ds
dec
or
dec
out
sub
and
mov
pushf
sahf
cs
mov
add
arpl
ret
xchg
jns
jbe
les
mov
mov
jle
sbb
mov
sti
std
mov
imul
cmc
sbb
xor
add
sub
dec
loopne
or
cmp
ss
and
clc
inc
mov
icebp
lods
enter
cmp
les
and
mov
and
jnp
or
ret
sub
mov
in
cmp
push
pop
imulb
inc
repnz
sub
adc
lcall
dec
pop
mov
fisubrl
mov
lds
dec
mov
push
jns
cmp
rol
inc
iret
and
pop
pusha
fldt
decb
adc
mov
lea
adc
jp
cmp
shr
bound
xchg
adc
add
std
sbb
test
mov
or
pop
je
mov
mov
xor
test
xchg
test
notl
lds
xchg
jae
pop
ror
dec
xor
int
mov
int3
jmp
jbe
fsubs
or
addl
jo
lcall
dec
sbb
test
mov
sbb
lret
push
cmpsb
outsl
jg
mov
hlt
sbb
aad
mov
mov
jl
rcll
pop
test
pop
inc
jg
inc
mov
icebp
sub
push
sub
orb
rclb
push
scas
cli
pop
mov
xchg
out
adc
cmp
add
or
or
aas
cld
push
sub
inc
adc
inc
cld
dec
or
cld
xchg
call
dec
dec
inc
adc
idivb
jno
add
jle
cltd
repz
push
cmc
in
aad
call
ja
cmc
adc
insb
sbb
jle
lea
loop
sbb
data16
add
sub
call
mov
jnp
fsubl
push
lock
mov
xor
or
out
or
sub
mov
and
call
into
div
add
test
lock
pop
mov
fbstp
je
cmp
shll
push
fldenv
push
in
mov
ret
or
out
jo
scas
cmp
fistpl
add
xor
mov
mov
call
xchg
lock
cltd
mov
cld
sbb
adc
sarb
add
lcall
jne
pop
stos
push
aad
dec
adc
les
push
mov
or
and
sbb
mov
mov
js
add
dec
loope
and
xchg
sub
outsb
test
mov
mov
push
mov
adc
fldcw
pop
mov
roll
mov
loope
jo
cmp
in
pop
bound
loopne
cwtl
xchg
mov
dec
add
movsl
jg
repnz
sub
push
ret
data16
and
add
add
xchg
lret
movsb
stos
add
xor
mov
cmpsl
je
rorb
cmp
stos
out
ljmp
mov
mov
pshufw
xchg
insl
loope
jne
mov
dec
jp
push
xchg
adc
pop
inc
xchg
sbb
mov
int3
out
ret
scas
add
insl
cmp
in
aam
jp
pop
cmpsb
and
out
sbb
fldt
popa
ja
mov
adc
mov
cmp
sub
int3
mov
jle
enter
mov
out
pop
pop
xchg
je
loopne
push
mov
xchg
cld
lds
adc
sbb
xchg
jo
test
xor
sub
xor
dec
mov
test
adc
jb
fcmovnu
fstps
sahf
mov
int3
cwtl
sub
test
add
inc
cs
dec
mov
enter
add
or
xor
push
fwait
sub
dec
test
lods
add
ds
ds
mov
push
sbb
push
test
mov
dec
or
aaa
add
mov
aad
test
aad
mov
data16
or
mov
call
pop
outsb
cld
mov
popa
imul
mov
adc
mov
jae
lock
inc
imul
mov
dec
sub
test
out
incl
push
mov
and
xor
mov
xchg
mov
adc
push
aas
push
adc
xlat
mov
or
sbb
outsb
in
or
add
jb
and
bound
mov
mov
adc
roll
pop
mov
push
mov
shl
inc
xchg
xchg
cld
hlt
and
inc
xchg
test
call
dec
inc
ss
xchg
jle
in
add
jmp
sbb
adc
and
and
jmp
add
popa
pop
jl
enter
pop
addr16
call
push
mov
or
call
sbb
aad
aas
out
adc
lock
mov
imul
xchg
hlt
hlt
adc
push
clc
aas
jp
es
fsubrl
and
ret
lea
faddl
mov
test
mov
arpl
push
mov
data16
push
inc
outsl
sbb
xchg
lcall
test
nop
in
pop
push
clc
mov
push
lcall
push
jne
lods
lods
rcrb
iret
cli
notb
jg
xchg
divl
mov
xor
sbb
cmpsl
ret
call
xor
sbb
adc
mov
sub
inc
insl
cmpsl
add
jge
sub
xor
or
outsb
inc
loope
cmp
mov
sbb
jno
push
js
xchg
les
in
pop
xor
std
and
int
fwait
jle
cld
in
pusha
mov
cmp
cwtl
scas
push
rcll
jecxz
out
mov
aam
mov
sub
xor
mov
mov
in
js
jl
or
lds
inc
fildl
outsl
sub
out
into
sub
clc
popa
rol
mov
dec
push
mov
xchg
js
add
or
sbb
sub
ss
jle
jle
rcl
rolb
mov
and
shll
jns
push
nop
jo
inc
insb
bound
mov
or
std
pop
loopne
clc
outsl
arpl
or
dec
fmull
adc
dec
mov
inc
enter
or
lcall
lret
stc
jo
syscall
cmp
xchg
bnd
bndldx
dec
adc
inc
addl
cmc
mov
pop
inc
push
sbb
jae
fdivr
arpl
pop
mov
insb
sbb
ret
call
shr
imul
pop
cld
test
and
rcrb
mov
test
and
inc
inc
and
jnp
popa
cmp
lahf
ds
jge
insb
adc
fcoml
push
iret
push
out
push
xchg
xchg
adc
adc
jno
mov
dec
sbb
mov
outsl
aad
dec
or
inc
aam
mov
push
mov
in
dec
pop
inc
js
push
rcl
mov
push
neg
fcoml
and
sbb
inc
jg
pop
call
push
push
insb
cmp
loope
mov
ror
pop
aas
out
sbb
lret
pop
and
cmc
out
mov
xor
mov
push
aaa
ss
dec
ret
shl
adcl
pop
xor
lods
jp
sarb
add
cld
pop
push
sbb
add
ss
fstl
mov
dec
pop
arpl
jae
fsubl
sub
jge
aas
fnstsw
fucom
imul
in
es
leave
cmpsb
jae
cld
mov
dec
andb
sub
xchg
mov
mov
sbb
enter
cvtps2pi
push
pop
gs
xchg
push
adc
or
pop
mov
int3
adc
ljmp
in
lret
scas
pop
mov
xor
cmpsb
pop
cmpb
jns
dec
cmp
push
inc
xor
push
or
push
lock
nop
dec
rcl
fwait
mov
stc
rcrl
mov
mov
dec
mov
outsl
cmp
sub
in
push
push
mov
xchg
in
mov
daa
xor
add
fsts
pop
or
mov
jb
adc
data16
loope
icebp
stos
jg
jp
mov
fcomp
popa
int3
in
int
lret
mov
add
jmp
testl
pushf
sub
inc
ret
mov
add
xlat
or
lea
mov
pop
and
aad
enter
xchg
clc
call
fwait
test
subb
aas
fs
xor
fdiv
sbb
xchg
leave
gs
mov
sahf
cmpsl
mov
xor
js
xchg
icebp
imul
call
nop
hlt
adc
js
inc
mov
aaa
sub
mov
int3
sbb
dec
lods
mov
andl
pop
popf
push
sarb
es
mov
das
hlt
roll
scas
push
lods
test
or
or
ljmp
adc
sarb
or
movsl
add
adc
fisubl
stos
mov
inc
lret
mov
into
push
das
hlt
xor
rcrl
jp
loope
mov
cli
call
xor
ret
inc
xlat
mov
cmp
dec
pop
pushf
inc
lods
js
xor
ret
aas
loopne
fwait
icebp
pop
cmpl
pop
mov
xor
adc
movsb
shlb
mov
mov
fs
xor
mov
stc
jmp
daa
xlat
mov
cmp
or
sub
jmp
jp
inc
mov
push
cmc
mov
aam
loop
pop
out
fimuls
push
xor
call
sbb
mov
add
or
inc
out
imul
lret
scas
mov
rcrb
and
cwtl
fidivrs
sti
pop
mov
xchg
dec
dec
pop
test
inc
rcrl
out
mov
mov
fdivl
lret
lea
incb
push
xor
fnstenv
js
out
and
xor
pop
and
cmp
imul
cld
popl
and
int3
imul
mov
test
xor
mov
pop
loope
jp
mov
test
xor
cmp
daa
cmp
or
mov
adc
xchg
xor
jle
lret
subl
sbb
cmp
pop
xchg
fsubs
jecxz
inc
push
dec
pop
lcall
popa
sbb
fstps
js
shll
mov
adcb
cmp
cltd
inc
mov
jp
sbb
push
xchg
cmp
dec
dec
or
xor
xor
lahf
ret
or
lahf
icebp
cmp
fcmovb
repz
ficompl
inc
paddusb
adc
jle
xlat
cld
xor
add
adc
or
divps
lock
push
xchg
aas
jae
pop
sbb
push
cmp
push
xchg
add
jg
sbb
nop
into
in
leave
std
loope
xlat
stos
loop
add
and
lcall
cmp
imul
stos
xchg
or
leave
xlat
cli
xor
or
cld
xchg
add
call
inc
xor
inc
mov
lds
jne
in
adc
mov
cmp
inc
jbe
addr16
cmp
mov
push
sbb
and
jmp
xor
pop
xchg
or
gs
sahf
push
lock
cmp
dec
or
loop
dec
cli
aas
add
bound
and
adc
fwait
mov
movsb
sbb
xchg
cwtl
das
jecxz
les
out
mov
add
adc
mov
mov
scas
pushf
test
dec
outsl
mov
mov
sbbb
push
lds
popa
inc
fsubp
adc
aas
jl
mov
out
inc
fnstsw
sbb
mov
mov
rcrb
sub
xchg
sbb
aam
cmp
adc
push
shlb
mov
out
mov
mov
or
test
sub
add
popf
push
scas
lock
imul
call
mov
setge
push
clc
subb
inc
xchg
pop
in
mov
imul
stos
cli
push
clc
ja
imul
out
jno
subb
or
pop
sbbb
mov
cli
je
les
sub
out
cmp
mov
ffreep
inc
jae
sub
cmp
sbb
adc
sub
xor
loop
ja
adc
jae
lods
pop
xor
mov
pusha
mov
add
aad
pop
bound
movsl
imul
rorb
fdivrp
test
sbb
in
add
and
cmpb
add
jno
add
lock
clc
jge
loopne
ds
aas
ret
add
in
adc
push
fadds
lahf
std
scas
shll
sub
jecxz
mov
enter
pop
pop
pop
pop
jo
mov
lea
testl
cltd
js
lock
inc
test
inc
push
sbb
fsts
orb
xor
add
mov
ficompl
jp
jne
or
in
xchg
pusha
insb
add
in
cmpsl
and
add
mov
mov
addr16
cmpb
cmc
sbb
cmp
mov
or
jae
sti
sub
fimuls
xchg
ret
cmpsb
sarl
enter
jnp
xchg
js
incl
lock
jecxz
jno
xchg
sbb
sub
xlat
clc
push
inc
dec
sub
adc
and
mov
jbe
inc
icebp
add
shl
mov
pop
call
nop
test
xchg
sbb
cli
cmp
sbb
mov
xchg
adc
jge
pusha
cmp
test
insb
xchg
das
icebp
loopne
les
idiv
mov
mov
adc
shrl
je
pop
js
sub
jb
jecxz
mov
movsb
push
mov
push
les
sub
js
popa
jmp
negb
and
mov
bound
sahf
imul
mov
cs
sti
icebp
mov
sub
fwait
mov
adc
pop
mov
jae
clc
subl
outsb
sysenter
rolb
mov
xor
rcl
cmp
cmp
lock
imul
cmp
icebp
jecxz
mov
mov
adcb
dec
enter
inc
mov
pusha
add
pop
push
loope
mov
push
pop
subl
or
cmp
mov
fld
jo
or
fadds
sbb
shll
or
into
clc
mov
rorb
add
cmpsb
mov
jl
insl
outsb
popf
mov
inc
repz
test
sub
xchg
adc
add
sub
call
cmp
ret
xchg
fadds
aad
inc
imul
mov
sbb
scas
mov
sarl
jno
jmp
std
mov
pop
addr16
jp
lret
orl
dec
add
inc
divb
repz
mov
add
test
test
jle
dec
push
stos
and
sub
pop
jnp
shll
cmp
call
movsb
add
mov
mull
test
mov
cmp
aam
add
or
std
push
mov
pop
insb
clc
fstps
std
dec
xorb
push
orl
fcomi
add
mulb
push
adc
xor
repnz
movsl
cmp
mov
lock
aaa
into
or
je
fldenv
shrb
add
fisubl
lret
inc
sub
mov
test
incl
jo
addb
lcall
ret
adc
in
or
scas
pop
enter
and
or
dec
pop
loopne
lods
add
mov
fs
cmp
mov
mov
pusha
mov
mov
inc
pop
jp
push
icebp
jo
repz
aaa
cmp
jmp
jo
and
mov
or
data16
mov
std
mov
loope
xchg
and
pop
scas
rol
mov
stos
sbb
divb
jae
mov
aam
push
and
xor
mov
outsl
push
addr16
out
mov
lock
ret
mov
sub
popa
test
inc
js
mov
lods
aam
ljmp
or
rolb
out
aaa
cmp
scas
cmp
pop
ror
cmpb
inc
mov
mov
and
inc
jnp
jp
inc
mov
dec
dec
inc
sub
xlat
imul
pop
add
lock
imul
arpl
mul
lds
inc
decb
inc
scas
ffree
xchg
push
mov
dec
test
or
pop
repz
test
es
test
cld
cmp
and
push
cmp
mov
push
aad
xchg
js
and
or
subb
cwtl
pop
cld
add
inc
dec
cmp
mov
pop
xchg
sbb
sub
addb
rclb
outsb
call
out
popf
add
fdivs
out
mov
dec
cmpsb
out
pop
rorb
rorl
call
push
cmpsb
scas
sbb
lods
jle
add
pop
lods
movsb
shr
adc
or
mov
dec
jl
mov
push
ds
cmpb
cs
sahf
mov
inc
jmp
mov
aad
and
cli
mov
jle
and
mov
pop
push
scas
out
rorb
icebp
mov
push
in
shll
push
sbb
test
nop
lahf
pop
add
sub
popa
pop
lea
mov
mov
loop
push
add
and
pop
and
clc
add
xchg
loop
cs
sahf
sbb
dec
pop
inc
lret
repz
aam
cwtl
or
lods
jae
jg
push
mov
or
add
jbe
mov
dec
jge
lds
pop
xchg
cmp
mov
jne
inc
and
or
insl
mov
push
dec
dec
dec
fcompl
dec
ss
sub
push
idiv
and
cmpl
inc
mov
sub
ret
pop
imul
sub
or
pop
loopne
push
icebp
jo
fmul
xchg
es
mov
rcl
aad
mov
arpl
sahf
sub
pushf
mov
push
in
std
stc
push
mov
sub
inc
sbb
xlat
aam
cmp
fdivr
xchg
jle
jl
repnz
dec
add
or
int
and
cmp
pop
iret
mov
popf
inc
mov
call
lcall
sbb
mov
mov
push
xchg
ret
loop
mov
mov
jp
fildll
mov
popa
dec
ljmp
ds
ja
xchg
pop
test
xor
mov
or
lods
or
outsl
loope
mov
mov
lahf
pop
out
cmp
or
orl
xlat
mov
loop
and
cmp
push
incl
pop
mov
xchg
mov
ds
push
pusha
icebp
xor
sub
cmp
jp
xlat
jnp
test
out
in
rcl
loopne
movsl
xor
inc
loop
push
adc
loopne
add
push
movsb
dec
and
stos
sub
push
jecxz
sbb
add
sbb
mov
xor
sub
push
test
mov
pop
loopne
loop
test
sbb
xor
xchg
faddp
mov
ss
xor
push
add
adc
cmp
sub
xor
and
or
pop
mov
subl
scas
and
inc
dec
icebp
nop
dec
sahf
scas
movl
inc
xchg
scas
sbb
fcomi
jecxz
pop
out
mov
cmpsl
mov
add
dec
stos
data16
pushf
cs
into
cmp
das
push
ror
imul
xchg
jle
pmullw
cmpsl
sbb
pop
xchg
mov
sar
insb
add
xchg
pop
xchg
push
sub
inc
or
jle
outsl
sub
xlat
mov
sbb
add
xor
int3
rclb
popf
hlt
add
pop
outsb
sub
inc
test
in
jmp
inc
stos
orl
mov
mov
mov
int
call
jne
shl
jl
shlb
mov
pop
ret
test
addb
push
ret
dec
rol
and
xchg
xchg
es
and
hlt
dec
and
sub
jle
xchg
xor
stos
lret
jb
or
ret
inc
mov
psubsb
cmp
xor
push
mov
xor
mov
ss
push
dec
incl
out
das
add
or
push
loop
xchg
in
addb
xor
loop
outsb
inc
mov
push
outsb
jbe
pop
sub
dec
sbb
cli
push
ljmp
push
cli
pusha
scas
dec
std
sbb
stos
iret
sbb
mov
inc
mov
mov
rclb
or
mov
loop
push
outsl
inc
mov
add
or
xlat
push
orb
ds
jmp
dec
xchg
popa
or
mov
gs
aam
mov
adc
js
jno
je
sti
xor
int3
or
xchg
sbb
jle
aaa
fidivrl
and
cmp
loope
push
hlt
flds
cli
mov
pop
sbbb
inc
or
xchg
mov
push
sbb
shll
and
sub
loop
or
shlb
mov
fidivs
loope
and
lock
fwait
stc
int
lods
jge
mov
sub
or
inc
sbb
pop
getsec
testl
pop
out
add
fcoml
jb
jae
push
fiaddl
mov
xchg
rolb
sub
adc
pop
pusha
mov
call
xor
out
incb
sbb
js
sbb
call
xor
outsb
adc
add
fs
jnp
pop
pop
orl
adc
out
mov
scas
pop
push
jp
scas
aam
jb
pushl
or
je
incb
cli
sar
adc
mov
xchg
push
cmp
pop
hlt
xchg
pushf
pop
lahf
dec
imul
clc
mov
and
sbb
jg
mov
cmp
cli
add
cmp
cmp
pop
roll
xchg
push
sbb
or
and
lcall
or
les
movb
rclb
out
adc
or
ss
in
and
inc
mov
adc
push
jp
jl
push
jle
lods
mov
ret
mov
aas
and
adcb
sbb
and
cs
lret
pop
bound
push
mov
jbe
movsb
aas
in
cmc
mov
adc
aad
mov
cmp
lods
sarl
cmp
aad
add
sub
or
loope
movsl
cmpsl
inc
dec
decl
orl
shrl
jmp
addr16
fs
sbb
pop
loope
push
jecxz
or
aad
divl
je
mov
pusha
test
cltd
jmp
jne
push
inc
xor
pop
sbb
icebp
adc
insb
push
sti
push
push
test
sub
lds
aas
jp
push
or
jecxz
xchg
cmp
enter
push
push
es
push
jle
hlt
cmp
hlt
jp
mov
out
adc
or
cltd
loope
jo
and
sub
stc
movsl
xor
dec
dec
add
or
adc
pop
icebp
xor
or
sbb
push
scas
sbb
in
es
sub
cmp
lods
or
mov
negl
imul
loope
adc
imul
test
mov
or
jmp
xchg
mov
or
in
stos
mov
out
cmp
add
sbb
sub
shl
sbb
and
shr
mov
sbb
jecxz
inc
scas
cmp
mov
push
pop
mov
add
leave
and
mov
xor
jo
mov
xor
inc
jle
xchg
push
fwait
or
aad
cld
movsl
mov
push
push
jb
add
fistps
add
mov
push
xor
lcall
and
cld
enter
push
xchg
ds
sub
pusha
xchg
sbb
cld
loopne
mov
notb
inc
add
push
sub
adc
shll
or
adc
test
js
sub
rcr
rolb
dec
xchg
sbb
addr16
fsubrl
cmp
shr
mov
push
fs
lcall
add
shrb
shlb
add
stc
xchg
lcall
adc
mov
psrad
call
sarl
sbb
ljmp
xlat
mov
movsb
cmp
pop
jae
pop
mov
xchg
mov
fildll
fcompl
add
mov
loop
mull
jmp
lahf
out
xchg
fstpl
and
jecxz
pop
shll
add
sub
add
shll
push
icebp
int3
pushf
outsb
cmp
xor
inc
cmp
add
loope
push
xchg
adc
push
outsb
push
es
jnp
shl
movsb
fsubl
in
jge
movsl
or
ret
sub
mov
out
add
jne
cmc
arpl
scas
xchg
lret
jae
ret
adc
sub
xchg
or
lret
loop
cmp
sbbl
sbbl
mov
cli
inc
add
or
hlt
lret
aas
enter
pop
shlb
arpl
aas
hlt
inc
push
int3
cmp
inc
add
in
sahf
cwtl
jno
ljmp
dec
sub
sbb
jp
je
mov
mov
inc
sti
sub
not
dec
xor
pop
pop
push
pop
xor
daa
mov
gs
xchg
les
pop
sub
inc
gs
dec
sbb
clc
outsl
hlt
fcom
mov
or
pop
loopne
fidivrl
or
out
rorl
mov
leave
popa
aas
and
das
add
mov
mov
sbb
sahf
inc
cwtl
or
dec
test
shlb
inc
adc
in
pop
mov
adc
adc
cmp
mov
repnz
scas
jae
mov
jns
js
or
sbb
mov
xlat
mov
mov
push
int3
add
or
xchg
inc
lds
inc
mov
add
or
mov
add
push
je
mov
fmul
or
hlt
jle
fidivs
pushf
cmp
and
roll
xchg
adc
and
mov
and
out
push
insl
adc
mov
dec
mul
jno
inc
addb
call
push
call
dec
pop
mov
and
dec
leave
mov
or
lahf
scas
insl
jno
cltd
mov
pop
pop
mov
jl
rol
in
int
stos
aaa
mov
push
or
jns
adc
mov
xchg
pusha
jns
test
call
and
mov
sbb
ret
stc
inc
push
dec
mov
outsb
mov
mov
lcall
cmpsb
andb
add
imul
add
xchg
inc
or
dec
inc
je
mov
pop
iret
jecxz
stos
fidivl
or
fdivrl
jno
ret
mov
sarl
test
or
iret
js
jle
enter
push
mov
cmp
dec
jg
fcompl
call
subl
pop
jo
sub
shrl
repz
or
fldt
or
lahf
mov
loop
xchg
add
rolb
test
fsubrl
inc
mul
xorl
out
add
adc
pusha
sub
aam
sbb
pusha
cmpl
in
insl
pop
jno
dec
into
mov
adc
xlat
cmpsl
orl
ret
jl
pop
mov
pop
jle
mov
jecxz
js
adc
mov
xchg
sbb
push
test
insl
push
inc
xchg
addb
divb
add
mov
sub
mov
lret
xchg
jno
jle
in
adc
mov
cs
lods
adc
adc
inc
into
dec
xor
mov
icebp
lret
clc
pop
sbb
ljmp
orl
push
xor
xchg
jge
clc
out
and
in
lods
inc
out
xchg
shll
cmp
loopne
test
xchg
icebp
jp
stos
fwait
mov
xchg
inc
rcrb
sarl
jnp
or
subl
cwtl
int3
mov
test
cld
xor
rcrl
fcomps
inc
cld
mov
or
add
push
or
ljmp
add
cmp
dec
mov
cld
xchg
lock
xor
add
jb
insb
mov
adc
add
aad
xor
jle
in
hlt
and
sbb
fisubrs
sarl
andb
sbb
inc
inc
dec
xchg
pop
push
add
test
push
stc
daa
xchg
mov
xor
inc
cltd
leave
xchg
mov
mov
insl
sub
inc
insl
shrl
mov
cmp
and
and
mov
aas
ds
sar
jb
call
push
jmp
sbbl
or
rolb
js
adc
aad
not
shll
jno
mov
pop
hlt
dec
pop
ret
jbe
pop
cmp
lods
add
mov
cmc
cli
mov
add
je
lret
sahf
lods
push
sbb
in
cmp
cs
and
jno
fs
jne
fistl
outsb
xor
or
mov
pop
loopne
xlat
mov
push
sub
loope
mov
lahf
sub
dec
enter
mov
pop
iret
clc
mov
movsl
ret
push
mov
fists
dec
jmp
or
iret
incl
cmp
hlt
add
jbe
push
lret
cmp
jno
cwtl
cs
inc
or
inc
add
sub
test
aam
cli
push
xor
imul
nop
jnp
push
je
cmp
test
push
movl
cltd
mov
insw
movsb
or
aam
gs
push
es
mov
adc
xchg
and
xor
cld
cmp
jl
mov
les
inc
andb
lea
and
jg
jb
incb
ss
and
dec
add
and
or
cmpsb
push
lret
jge
sub
into
out
or
sbb
jmp
mov
jbe
fistl
loop
scas
add
mov
push
loop
mov
inc
mov
inc
mov
lods
cmp
lods
adc
sbb
rcl
popa
cltd
push
xor
mov
ss
in
out
data16
and
and
and
pop
lret
roll
je
pop
sbb
sbb
imul
adc
icebp
or
mov
jb
push
adc
cmp
icebp
jbe
or
jecxz
or
mov
mov
aaa
or
pop
ret
ss
sbb
addl
jb
or
icebp
rol
add
popf
xchg
xor
or
lcall
mov
or
loope
out
mov
fmuls
iret
scas
xchg
pop
push
and
xchg
fcmovb
xchg
push
adc
cs
mov
cmp
jno
or
loopne
sarb
loop
inc
mov
adc
out
jl
fisttpl
inc
mov
ret
pop
clc
jno
fsubr
inc
pop
pop
mov
fiadds
cmpsl
add
loop
jo
sbb
into
or
clc
push
adc
ja
sti
stos
pop
mov
sti
ds
adc
push
xor
aas
mov
std
mov
jmp
mov
stc
xchg
push
aam
and
dec
ljmp
enter
sarl
push
pusha
or
jp
inc
adc
scas
outsl
loopne
or
cmpsl
jne,pt
icebp
jmp
and
dec
push
test
jae
lds
pop
pop
divb
xchg
imul
in
add
or
jle
call
cmp
sbb
mulb
pop
mov
xor
and
inc
shll
adc
cli
xor
add
sbb
hlt
adc
out
repnz
orb
add
xchg
fsubs
cs
or
push
mov
mov
addr16
aam
test
xchg
mov
adc
xchg
jo
je
adc
ss
jl
icebp
mov
cmp
addr16
lcall
sub
add
lcall
mov
movsb
add
push
loope
jle
mov
dec
sub
dec
out
adc
pop
push
stos
or
push
xor
sub
pop
insb
test
scas
mov
test
sbb
call
xchg
lahf
fsubs
outsl
and
jnp
xchg
jl
rorl
inc
outsl
dec
mov
cmp
sub
push
icebp
and
cld
and
out
std
xchg
test
inc
mov
sbb
mov
sbb
sahf
adc
arpl
add
mov
dec
inc
push
dec
imul
aad
xor
pop
fidivs
sbb
jne
pop
jecxz
and
mov
lods
stos
mov
add
dec
pop
clc
xchg
inc
pop
push
dec
mov
add
inc
pop
jno
push
cltd
jb
jbe
and
xchg
cmp
out
movl
sub
andl
mov
outsb
jmp
icebp
insl
cmp
pop
mov
imul
fisubl
mov
and
inc
bound
adc
ss
mov
xchg
cmpsb
adc
ret
scas
jle
xchg
test
xchg
xor
negb
jecxz
call
push
jg
movsb
pop
add
push
cmpsl
scas
mov
mov
sbb
sbb
push
cli
push
shlb
xor
pop
mov
sbb
test
inc
dec
or
jle
or
cli
xchg
lock
jge
adc
adc
xorb
je
popa
faddl
or
stos
pop
insb
pop
sub
icebp
xor
test
and
push
jno
mov
std
mov
mov
sbb
repnz
scas
cmp
sahf
nop
mov
sbb
mov
out
lcall
andb
mov
mov
scas
inc
js
rclb
and
shrb
pop
add
pop
repz
cmp
jg
rcrb
xor
in
pop
push
pop
ret
sub
js
lds
lea
push
sbb
pop
es
rol
cmp
jbe
lods
hlt
mov
xorb
xor
stc
dec
adc
hlt
fs
andb
fdiv
sub
inc
addb
out
fdivs
xchg
dec
aam
and
cli
or
loop
adc
sbb
sti
divl
arpl
js
sbb
es
insb
loope
lock
dec
in
sti
xabort
aam
test
mov
aam
jle
imul
rclb
xchg
push
and
mov
hlt
int3
sbb
sub
scas
mov
rep
out
jl
xchg
pop
inc
cmp
and
or
pop
hlt
adc
sbb
std
pop
cmpsb
sbb
xchg
push
es
rolb
rcll
jns
cltd
jo
ds
popf
add
dec
pop
and
push
sti
lock
pop
ljmp
pop
repz
mov
dec
enter
pop
jno
ljmp
xchg
push
add
push
testb
push
jnp
xchg
jp
and
test
je
adcl
add
push
jp
lret
fildl
mov
or
mov
push
inc
ret
cmp
mov
add
lock
add
jl
jle
xchg
adc
fidivrs
and
inc
fwait
sub
aam
insb
cli
mov
jnp
lcall
dec
pop
and
mov
test
sub
stos
cwtl
mov
rclb
movsb
push
xor
jp
loope
jnp
mov
adc
mov
and
xor
fldt
and
lds
mov
adc
sub
pop
jp
xor
push
mov
push
jno
cmp
in
or
rcl
hlt
lret
leave
add
jbe
insl
daa
cmp
subl
adc
and
jp
jl
std
jne
inc
lods
jno,pn
dec
cmp
push
les
xchg
ret
sbb
movsl
and
sbb
pop
shr
push
lahf
mov
xor
add
fs
add
data16
add
js
fwait
push
and
and
and
sub
cmp
adc
mov
popa
jno
mov
scas
jecxz
sbb
push
push
int3
lea
iret
mov
rcl
enter
enter
push
mov
sbb
testb
sbb
mov
mov
repz
xor
inc
fcoml
push
push
fwait
sub
aas
xor
or
cwtl
dec
gs
push
popa
mov
sub
jbe
out
and
cmp
push
cmc
loop
mov
sub
xchg
in
inc
int
jecxz
xchg
inc
sarb
push
xchg
pop
out
mov
pop
cmpsb
adc
or
lods
sub
repz
jecxz
lea
adc
add
and
xchg
imul
aad
or
xchg
ljmp
mov
pop
push
xchg
push
dec
push
sbbb
rcrb
lcall
js
lea
and
jbe
jmp
fstl
jg
jge
inc
orb
es
rclb
xchg
data16
jns
inc
bound
nop
test
pop
pop
mov
mov
sbb
mov
inc
cld
xchg
push
movsb
jo
loop
xchg
mov
stc
add
inc
imul
push
dec
in
dec
test
xchg
lock
mov
sub
cli
stos
cmp
add
insb
gs
jb
adc
add
ret
stos
clc
jle
mov
les
adc
jne
jbe
xchg
sahf
fwait
pushf
push
les
or
imulb
fbld
and
std
and
pushf
aad
push
out
add
push
sarb
repnz
shrl
cmp
repnz
xchg
or
ss
xchg
sbb
bound
xchg
sub
inc
or
lahf
xor
add
jbe
loope
adc
xchg
pop
out
adc
jnp,pn
stos
cs
stc
mov
in
fisubl
icebp
adc
add
cmp
adc
pop
repnz
dec
add
push
mov
xor
push
xor
test
xor
loopne
inc
ficoms
and
bound
and
xchg
jno
cmc
mov
aas
sarb
push
insb
mov
cmp
nop
xchg
or
mov
add
inc
add
std
jo
std
inc
push
ja
lret
in
aaa
and
stc
dec
mov
xchg
or
addr16
hlt
sub
mov
xor
iret
adc
ja
jg
ret
aas
dec
not
cmp
sbb
mov
jo
je
mov
sbb
sub
fcompl
mov
fs
mov
and
into
sbb
pop
pop
dec
push
cmp
adc
push
sub
pop
inc
ret
jle
xchg
dec
hlt
pop
sub
insl
add
and
cld
test
add
mov
add
subl
xor
push
pop
and
sbb
push
inc
enter
cld
test
jle
mov
loopne
jle
popf
clc
hlt
inc
add
mov
adc
icebp
jb
inc
shlb
add
add
dec
imul
aam
cwtl
xchg
push
cmp
mov
int3
stos
push
pusha
stos
add
and
add
stos
dec
shrb
jle
sbb
pop
aas
sbb
cld
xor
adc
add
mov
ljmp
mov
add
out
insl
pop
inc
pop
cmpsb
push
xchg
push
ljmp
push
fwait
je
and
rorl
jns
decl
sbb
inc
das
jno
out
lds
sub
popa
jno
xchg
mov
add
jecxz
fsubrl
inc
mov
sub
push
push
mov
inc
adc
adc
mov
lret
call
ret
push
call
outsl
xchg
fcmovb
jnp
mov
fwait
pop
sbb
inc
testl
xchg
clc
mov
pop
sub
and
orb
dec
js
movd
pop
in
lahf
inc
call
pusha
fnstenv
adc
jb
fs
cmc
loope
xchg
push
inc
jo
out
daa
adc
popa
xchg
xor
es
jne
clc
sbb
out
or
lods
inc
fists
loope
fisubl
adcl
adc
and
push
pop
inc
in
loopne
ret
and
bound
jle,pt
loope
je
xchg
push
xor
sbb
out
jno
mov
lahf
xor
in
inc
mov
push
outsb
je
jb
cmp
or
jo
add
icebp
xlat
cs
in
mov
push
aaa
ret
push
jl
inc
adc
dec
mov
mov
and
repnz
out
push
loope
fdivrl
ss
pop
add
incb
pop
cmpsl
push
add
jle
jp
cmp
aas
cld
pusha
jmp
aad
mov
sbb
xor
mov
lods
insb
and
les
lea
fimuls
sbb
add
push
push
sub
fmulp
and
aad
cmp
cmpsl
sub
push
movsb
mov
cmp
sbb
adc
mov
push
xchg
push
loop
jns
sarb
inc
xor
add
ret
adc
add
inc
syscall
popa
adc
shrb
push
notb
push
inc
jle
out
mov
or
repz
icebp
or
cld
pop
sbb
gs
lock
inc
pop
mov
sbb
or
jmp
cmp
cmpsl
rcrl
dec
repnz
out
clc
xchg
adc
jp
inc
clc
pop
mov
test
dec
ror
lods
insb
js
xor
mov
hlt
test
andl
xchg
lods
or
mov
mov
push
pop
jbe
mov
mov
popa
adc
shl
mov
ds
mov
btc
push
mov
push
pushl
ficomps
add
or
enter
es
cmp
orl
adc
push
out
sarl
lea
mul
mov
or
in
mov
inc
fxch
lods
jo
cwtl
movsb
int3
aaa
or
out
push
mov
lds
xchg
jno
jg
xchg
cmp
mov
dec
add
or
push
lods
inc
xor
push
jp
push
push
cmp
pop
xchg
inc
xchg
icebp
addl
mov
fbld
adc
fnstsw
stos
fwait
inc
idivl
inc
ret
jbe
push
jl
sub
roll
cmp
aaa
les
mov
sbb
or
xchg
sbb
sub
sub
sub
xchg
xor
push
mov
jmp
ret
xor
rorb
mov
mov
xchg
pop
xor
adcl
repz
lahf
scas
testl
mov
les
mov
sub
scas
mov
lods
lods
lds
sbb
mov
add
mov
mov
mov
jmp
mov
mov
leave
shrb
and
outsl
ret
hlt
out
call
pusha
or
popl
push
or
out
scas
push
xor
loop
xchg
jg
call
sbb
fcmovnu
xorl
add
loope
enter
adc
add
in
sub
adc
dec
mov
push
mov
or
mov
outsb
fmuls
and
cmpsl
inc
jle
clc
add
std
in
mov
orb
ret
shll
int3
ficoms
imul
ds
clc
jne
movsl
aas
add
jp
inc
mov
fisubrl
loopne
stos
mov
ret
sbb
pop
mov
push
and
dec
add
dec
dec
push
rorb
and
sub
mov
in
xor
push
and
push
dec
sbb
cmp
inc
cmp
clc
and
sub
pop
hlt
adc
les
pop
scas
xchg
dec
push
js
in
cwtl
adc
lcall
fnstcw
jp
fnstsw
cmp
adc
insl
push
adc
xor
cld
adc
stos
mov
add
jl
push
stos
mov
popa
xor
incb
popf
ret
xor
sbb
fs
dec
and
aam
js
mov
enter
mov
pop
adcl
pusha
and
in
popf
xorl
popa
jno,pt
fxam
hlt
cmpb
xchg
into
loopne
inc
sub
sbb
stos
stos
mov
push
xor
ljmp
mov
pop
stos
cmp
push
mov
fcompp
pop
jno
cmpsb
int3
mov
push
adc
popa
loopne
fdivl
and
lds
and
add
mov
loope
pop
sub
pop
or
adc
dec
cmp
or
push
and
fiadds
xor
loop
dec
xchg
dec
xchg
repz
jl
push
jno
imul
rcrb
sub
js
leave
pop
and
and
stos
sub
jmp
mov
dec
dec
dec
ljmp
loop
or
push
repz
adc
sbb
push
dec
loopne
lds
rol
mov
outsl
push
pusha
decb
fadds
inc
inc
add
pusha
cmpl
rcrb
xchg
popf
sub
mov
imul
lret
data16
addb
sbb
push
jl
shr
and
pop
push
add
fsubrl
ffree
stos
inc
jle
jmp
xchg
jl
aaa
into
xor
mov
hlt
les
or
xchg
cmpl
push
nop
popf
and
mov
add
outsl
daa
roll
sub
cmpsl
mov
rorb
or
addb
mov
jbe
and
inc
jns
cmpsl
mov
pop
push
mov
inc
sarb
mov
cmp
pop
add
adc
adc
das
xor
les
sar
sub
inc
mov
jl
adc
cmp
push
jbe
inc
adc
adc
movq
sub
add
ja
es
inc
ret
movsl
pop
adcb
pusha
arpl
push
adc
push
mov
pop
push
ds
lock
dec
or
add
adc
scas
push
mov
push
pop
cld
pushf
icebp
negl
xor
popf
lods
pop
pushf
sbb
leave
jno
jl
insb
push
inc
inc
mov
fsubs
inc
aas
inc
mov
adc
add
sub
mov
push
mov
and
idivb
js
mov
add
shrl
xchg
and
out
xchg
push
clc
add
cltd
mov
rorb
vpshab
in
mov
notl
scas
and
mov
cmp
sub
pop
xchg
bound
add
mov
fwait
movsl
das
lahf
xchg
jecxz
jle,pn
jbe
lret
je
or
push
mov
in
push
jp
pop
je
sbb
cli
lcall
jecxz
icebp
pop
daa
inc
xchg
movsb
mov
inc
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
adc
push
adc
lcall
pop
adc
add
inc
gs
inc
dec
inc
push
push
je
jg
mov
imul
je
jb
arpl
jae
inc
jne
insb
fs
outsl
std
out
mov
inc
inc
inc
cmp
outsl
jne
jae
ja
jne
jb
outsb
mov
in
xchg
jbe
push
mov
fldt
jo
imul
xor
adc
mov
arpl
push
arpl
mov
popa
jb
jne
dec
outsb
outsw
out
mov
out
lods
insb
outsl
bound
inc
scas
gs
dec
lock
and
jo
cmpsb
gs
push
pusha
adc
imul
loopne
jo
mov
push
nop
jae
sbb
rcr
in
jns
jl
jb
inc
cld
jbe
aas
sbb
pop
imul
mov
je
add
push
dec
add
add
and
inc
incl
add
lsl
add
jne
imull
into
sbb
mov
adc
sbb
fildl
nop
pop
mov
mov
adc
fnstcw
mov
sbb
cmp
push
movups
and
aas
test
add
lods
inc
xor
add
int
daa
in
sbb
scas
dec
insb
and
mov
jne
jo
xor
or
xor
pusha
mov
fcoms
jae
testl
cmp
stc
jb
popa
je
xor
lahf
jns
jl
mulb
es
outsl
lcall
add
out
sub
jo
dec
cs
push
push
pop
cmp
dec
fisubrs
xor
jbe
cmp
in
jns
or
dec
mov
inc
xor
iret
add
cmp
jl
aaa
lods
jge
stc
sub
push
sbb
dec
mov
xchg
pusha
ret
inc
sbb
fimuls
test
sbb
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
bound
inc
bound
or
inc
