add
add
add
addb
add
add
inc
add
add
add
or
and
add
add
and
add
add
and
orb
add
add
add
or
add
add
add
add
add
add
add
shlb
add
add
add
test
add
and
add
add
addb
add
add
add
add
rolb
add
pusha
add
or
add
add
add
rorb
add
add
add
inc
addb
adc
add
sbb
add
test
add
add
add
inc
inc
addl
add
add
sub
and
add
and
inc
or
add
adcb
add
inc
addb
add
add
and
add
inc
and
add
loop
sub
inc
inc
add
add
inc
and
add
inc
xchg
add
orb
inc
or
test
add
add
add
adc
add
add
add
inc
add
bound
push
rolb
or
add
add
addb
addb
add
and
add
add
sbb
add
inc
mov
add
add
or
inc
add
addb
add
add
push
adc
movsb
add
add
adcb
or
adc
add
cmp
adc
addl
add
adc
pop
add
add
add
rolb
add
xchg
or
add
add
add
and
dec
or
push
or
adc
rorb
and
sub
or
and
dec
or
inc
add
inc
add
add
inc
add
and
sbb
add
adc
add
and
popa
add
add
add
inc
addb
add
or
sbb
xor
add
add
add
test
inc
and
pop
add
add
add
lret
jno
add
and
push
add
or
add
add
inc
add
add
adc
add
and
add
add
and
add
add
or
add
and
addb
or
or
adc
addb
inc
popa
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
pusha
add
adc
and
andb
or
add
adc
add
mov
adc
pusha
inc
inc
or
or
add
sbb
and
pop
add
add
pop
add
add
add
add
add
add
inc
inc
add
add
push
add
add
or
add
add
adc
add
add
and
add
add
add
xchg
or
add
add
and
and
and
add
and
add
add
add
add
add
adc
add
sub
or
add
mov
test
add
add
xchg
add
mov
add
or
add
add
add
cmp
add
dec
xchg
inc
or
or
add
or
xor
add
inc
add
add
inc
add
inc
inc
subb
add
add
nop
inc
lcall
addb
add
and
add
test
add
and
fs
add
add
add
or
add
adc
add
addb
or
add
add
add
addb
and
add
push
add
add
add
or
add
rorb
or
inc
add
add
add
and
add
adc
inc
inc
adc
adc
add
xor
inc
add
add
add
addb
add
rolb
add
push
and
add
addb
add
adc
add
inc
or
push
inc
add
add
add
add
add
and
xor
add
add
add
add
or
add
adcb
add
add
add
and
adcb
inc
add
mov
add
and
add
or
addb
add
add
add
add
add
mov
inc
mov
or
add
push
adc
add
inc
add
rolb
add
add
and
add
add
inc
adc
or
add
add
or
and
add
add
inc
add
add
adc
push
and
add
add
add
or
rolb
andb
add
add
adc
add
add
mov
add
add
dec
inc
add
and
sbb
add
add
inc
add
add
add
add
and
add
and
inc
rclb
add
add
and
add
add
add
add
add
or
add
add
sub
add
or
inc
add
adc
mov
adc
test
or
inc
add
xchg
add
add
and
adcb
xchg
add
add
adc
inc
add
add
add
add
add
test
add
and
push
add
inc
ret
adc
add
add
add
add
add
add
add
nop
add
mov
inc
inc
and
adcb
pusha
add
adc
adc
add
or
xor
add
add
addb
and
add
add
xor
movb
add
add
add
add
add
add
adc
cmp
addb
add
add
inc
add
add
add
add
add
add
add
and
add
addb
and
add
adc
add
add
add
inc
mov
andl
add
push
and
add
add
dec
inc
add
add
add
adc
rolb
add
add
inc
and
inc
or
loop
add
add
push
dec
add
sbbb
add
inc
add
add
add
adc
mov
adc
add
adc
add
sbb
or
test
add
add
adc
nop
add
add
add
inc
adc
add
and
add
add
pusha
and
andb
inc
inc
add
addb
add
add
inc
add
andb
add
les
mov
add
add
add
push
push
add
add
add
and
or
add
add
shrb
add
add
add
inc
add
addb
add
add
add
add
add
push
add
add
mov
add
test
adc
and
add
add
add
add
add
adcb
add
and
add
add
add
add
add
adc
add
add
xor
add
add
and
add
add
addb
push
or
add
rolb
add
add
or
xor
add
add
add
sbb
and
and
orb
add
add
add
cwtl
addb
add
and
add
addb
add
adc
xor
and
test
add
add
add
add
add
and
inc
add
adc
and
test
add
add
adc
add
add
add
and
add
dec
add
or
inc
add
or
add
add
add
adc
adc
add
add
add
sub
addl
inc
add
sbb
add
add
inc
add
inc
mov
adc
jo
or
mov
adc
add
add
add
add
add
adc
adcb
push
or
add
xor
adc
add
add
adc
add
pusha
adc
xor
add
add
add
adcb
add
add
add
add
add
add
add
add
movsb
add
orb
add
add
sub
test
rcll
and
addb
add
add
add
inc
addb
add
adc
add
add
add
or
inc
add
or
add
inc
push
inc
bound
add
rolb
add
test
or
pop
add
inc
addb
add
or
inc
inc
add
sbb
add
xor
sub
add
and
push
add
or
and
enter
add
add
addl
inc
add
add
and
addb
add
and
pusha
and
or
and
add
add
andb
add
add
addl
inc
addb
add
add
rolb
add
orb
addb
adcb
or
add
nop
adc
add
add
add
add
add
and
add
adcb
and
add
add
add
add
add
inc
adc
inc
add
and
add
add
adcb
add
add
inc
sub
add
adc
nop
add
add
inc
add
add
add
add
pusha
add
add
and
add
add
orb
inc
add
add
add
add
addb
add
add
add
ret
add
and
add
and
bound
nop
add
add
add
add
add
add
add
inc
mov
add
or
add
add
pusha
and
xchg
or
push
push
add
add
and
add
add
pusha
add
add
adcl
add
add
add
add
or
addb
and
add
add
and
dec
les
add
add
dec
add
inc
and
adc
adc
and
xor
and
or
add
add
add
or
and
or
addb
or
add
andb
add
add
add
dec
add
or
bound
add
inc
add
add
adc
inc
add
movsb
add
add
add
sub
add
adc
add
push
add
add
add
add
add
or
add
add
add
or
add
add
sbb
add
add
add
addb
popa
and
add
addl
add
add
adc
add
add
add
add
add
or
push
add
rolb
add
add
add
add
and
inc
inc
addb
inc
add
add
pusha
add
add
add
add
push
and
or
add
and
add
add
add
add
add
push
add
add
add
addb
add
add
or
add
dec
or
add
add
addb
adcb
add
add
adc
add
add
add
or
cmp
inc
add
add
add
add
add
add
orb
or
adc
and
add
add
aam
add
inc
add
add
add
push
and
and
add
add
add
add
add
addb
and
add
add
or
add
add
adc
add
add
es
add
add
add
adc
add
add
add
add
add
or
sub
and
inc
add
add
add
mov
add
adc
add
add
add
push
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
dec
orb
sbb
adc
add
mov
add
add
add
and
add
add
add
andb
addb
and
add
inc
shlb
add
jl
add
xorb
inc
add
add
add
add
add
add
add
inc
or
nop
add
add
adcl
add
add
add
sub
add
add
addl
addb
inc
adc
adc
add
add
add
sub
addb
add
and
addb
add
addb
add
add
add
add
or
add
add
add
or
inc
add
or
add
add
or
add
adc
or
add
adc
addb
or
rclb
add
test
inc
add
add
addb
add
addb
add
and
adc
addb
or
add
add
adc
add
or
or
add
or
add
add
add
add
add
add
inc
add
sub
push
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
or
add
and
and
and
ret
adc
add
add
or
add
add
add
mov
inc
mov
mov
push
add
add
or
addb
add
add
add
add
andb
inc
add
add
add
pop
add
adc
adc
adc
inc
add
addl
push
inc
inc
push
or
add
adc
add
add
add
add
add
adc
and
andb
adcb
add
inc
push
add
adc
adc
adcb
add
sub
add
add
add
add
add
inc
add
addb
and
add
add
add
addb
adc
add
add
xor
add
inc
addl
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
test
add
or
add
adc
add
and
xor
jo
or
adc
push
adc
or
add
xor
add
adc
test
mov
addb
add
add
add
adcb
adc
add
mov
add
add
inc
add
add
add
inc
add
add
or
add
adc
add
add
add
inc
add
add
addb
add
mov
sub
add
add
add
and
add
and
andb
and
add
addl
add
add
inc
and
add
add
addb
add
inc
add
or
adc
add
add
add
add
add
sbb
add
add
roll
pusha
add
add
xchg
addb
add
add
push
add
add
add
add
rolb
call
or
add
addb
add
adc
add
add
add
inc
add
adc
or
adc
adc
inc
or
add
adc
add
add
add
add
add
and
add
add
add
add
push
and
adc
sub
sub
add
add
add
inc
adc
add
and
adc
or
and
inc
inc
add
addb
adc
inc
xchg
add
or
add
add
add
add
addb
add
add
or
add
addl
and
sbb
and
adc
andb
add
orb
or
or
sbb
or
and
pop
adc
add
adc
add
mov
add
add
inc
or
add
test
or
add
add
or
add
add
add
les
add
add
add
inc
and
add
add
add
rolb
inc
add
adc
mov
addb
add
add
inc
adc
inc
add
mov
and
xor
add
add
add
add
add
push
add
add
add
or
adc
add
add
add
adc
add
adc
and
andb
inc
add
add
adc
add
inc
inc
inc
add
add
add
add
adcb
adc
adc
add
add
adc
add
add
add
or
inc
adc
inc
add
add
push
addl
add
inc
add
add
add
add
adc
adc
rolb
addb
shlb
add
int
add
add
or
orb
add
rolb
or
or
adc
add
add
and
adc
add
xor
add
sub
adc
add
add
or
and
dec
add
or
adc
and
add
and
add
inc
add
add
add
inc
and
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
xor
or
inc
xor
xchg
and
add
dec
addb
adc
adc
add
inc
inc
add
xchg
adc
inc
add
add
add
add
sbb
addb
mov
add
and
push
add
add
push
inc
sbb
add
add
add
add
add
and
xchg
add
adc
add
add
add
add
and
and
adc
sbb
add
add
add
pusha
add
pusha
add
and
add
add
add
add
add
add
sub
add
adc
add
add
inc
addb
xchg
stos
add
and
adc
pusha
add
add
add
adc
add
and
add
rolb
add
or
add
adc
sbbb
add
inc
adc
inc
movsb
add
add
adc
push
adc
add
add
add
shlb
add
add
add
add
dec
add
add
add
push
add
add
adcb
and
add
add
add
and
add
subb
adc
inc
adc
or
add
add
add
test
add
andb
and
add
add
inc
add
add
add
or
add
inc
inc
orb
or
dec
adc
inc
add
and
addb
add
add
test
add
add
add
add
and
addb
addb
add
inc
add
add
cmp
adc
add
mov
add
add
add
adc
add
and
add
add
add
add
and
add
add
push
add
addb
add
adc
add
xor
add
add
add
orl
push
add
add
add
add
sbb
add
add
add
or
add
add
add
or
add
and
add
push
push
addb
add
inc
add
and
sub
inc
pusha
addb
add
add
addb
addb
inc
add
inc
and
add
adc
test
adc
add
add
add
and
add
add
add
add
inc
or
inc
addb
adc
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
and
add
add
add
inc
add
addb
add
or
loop
xchg
adc
and
add
add
xchg
add
add
add
push
adcb
inc
add
add
addb
add
add
inc
or
adc
add
adc
addb
add
add
add
inc
add
add
add
add
and
ret
and
add
sbb
lods
add
add
adc
add
adc
add
add
or
add
add
adc
adcl
nop
add
adc
add
addb
add
adc
add
add
or
add
mov
add
add
inc
addb
mov
add
add
xor
add
mov
add
adc
add
add
add
rolb
inc
add
dec
add
add
add
add
addb
add
adc
add
nop
add
add
adc
and
inc
addb
adc
add
add
adc
add
add
add
and
add
sbb
add
mov
inc
add
inc
add
orb
adc
add
add
and
or
add
addb
add
add
add
add
cwtl
add
push
and
add
add
add
add
inc
add
inc
inc
add
add
add
add
and
add
inc
add
add
dec
add
add
or
mov
adc
adc
add
adc
add
pop
addb
add
inc
add
inc
add
xchg
add
or
addb
add
add
add
adc
xor
xor
add
aam
add
add
inc
add
add
add
adc
add
adc
nop
sub
add
add
dec
inc
or
add
add
add
add
and
rolb
adc
add
add
dec
add
addb
pusha
adc
add
and
mov
addb
addb
add
adc
add
push
add
add
add
add
adc
and
addb
add
sbb
add
les
inc
add
add
add
add
add
push
add
add
add
andb
or
or
add
add
adc
add
adc
or
mov
cmp
xor
or
addb
add
and
add
add
add
test
add
add
or
movsb
and
xor
add
add
inc
es
orb
adc
adc
inc
nop
addb
add
and
xor
addb
addb
add
add
add
adc
add
call
add
add
andb
or
add
add
adc
or
inc
add
sbbb
add
inc
and
add
or
xor
inc
add
nop
add
add
sub
or
sbb
add
add
inc
add
adc
add
and
adc
add
add
add
or
add
inc
addb
inc
and
add
or
orb
xor
or
or
add
add
add
loope
addb
add
add
add
add
or
add
mov
add
add
add
inc
pusha
and
add
add
movsb
and
sub
and
add
or
add
add
adcb
add
and
add
or
add
push
or
or
and
inc
add
add
add
pusha
or
cmp
add
add
inc
add
mov
add
add
add
add
adc
add
add
sbb
or
add
add
popa
cmp
add
or
and
adc
inc
add
inc
add
add
add
add
add
pop
andb
cmp
inc
add
pusha
push
cmpb
or
dec
or
add
dec
enter
addl
add
add
add
add
loopne
nop
add
adc
add
add
or
adcb
add
add
and
add
add
or
dec
add
add
add
inc
add
inc
and
addb
add
xor
dec
add
add
inc
push
add
add
addb
add
sbb
add
or
adc
add
inc
adc
xchg
and
add
add
adc
nop
inc
addb
xchg
add
adcb
add
inc
inc
add
inc
add
or
pop
and
add
adc
or
addb
inc
or
add
adc
add
and
addb
xor
add
push
push
addl
add
push
dec
xor
xor
or
inc
add
add
add
addb
add
adc
inc
add
add
add
sub
add
test
add
adc
inc
push
add
or
add
add
addb
add
or
add
and
adc
add
adc
pop
and
add
add
add
adc
movsb
xchg
adc
inc
add
add
adc
add
add
add
inc
add
add
mov
add
and
inc
sbb
adc
and
or
add
andb
add
or
addb
add
and
add
add
and
add
push
and
or
or
or
or
add
andb
rolb
addb
addb
or
sub
add
or
add
add
add
add
andb
add
loopne
add
adc
push
push
roll
or
add
test
addb
adcb
inc
add
add
nop
add
push
add
push
add
or
add
add
inc
add
or
nop
nop
add
add
inc
and
add
xor
add
dec
add
add
add
add
add
add
test
add
add
add
add
adc
nop
shlb
add
nop
add
add
add
add
push
addb
add
xor
add
sub
add
or
add
and
add
orl
add
add
add
add
add
and
add
or
add
add
inc
and
add
or
add
and
add
add
test
or
add
and
adc
mov
add
andl
add
test
inc
add
add
addb
and
inc
mov
add
add
push
and
add
add
add
pop
add
add
add
or
add
add
inc
add
add
inc
add
and
add
add
add
add
add
inc
add
adc
nop
add
mov
add
sbb
add
add
addb
add
add
add
add
add
add
add
or
sbb
add
add
adc
add
and
add
cltd
add
add
add
add
addl
orb
inc
xchg
add
or
add
add
add
or
inc
add
add
add
add
add
and
add
sbb
or
add
or
add
add
or
add
add
add
inc
add
adcl
and
push
add
add
and
adc
add
add
push
add
je
add
add
orb
and
add
add
add
add
add
and
push
cmp
inc
inc
and
adc
ret
add
add
or
and
add
or
add
add
sbb
add
add
and
add
dec
add
add
adc
addb
add
add
push
inc
add
adc
pusha
add
or
add
add
add
inc
dec
add
inc
or
addb
add
add
inc
add
addb
add
add
inc
adcb
andb
add
shlb
add
push
add
add
add
and
add
add
add
dec
xor
addb
adc
add
and
dec
add
add
add
or
add
inc
sbb
dec
add
add
adc
push
and
add
or
add
xchg
addb
add
or
inc
addb
inc
add
or
add
add
adc
add
add
add
add
add
inc
add
or
sbb
dec
add
add
adc
add
xchg
or
pop
or
or
add
add
inc
mov
add
add
add
addb
add
inc
add
cmp
inc
add
push
add
add
add
add
adc
add
or
ret
sub
mov
add
add
add
adc
je
add
add
add
add
sbb
adc
addb
add
add
xchg
add
add
add
inc
or
inc
add
inc
or
and
add
add
add
or
orb
add
add
pusha
add
add
adc
inc
and
add
inc
add
add
add
inc
add
or
test
add
add
add
add
adc
add
add
and
add
xor
add
and
addl
add
add
add
and
and
and
inc
adc
xchg
add
add
add
es
inc
add
sub
addb
addb
or
add
inc
add
in
addb
adc
adc
leave
adc
addb
add
adc
adcb
add
add
add
and
and
inc
or
add
add
add
and
add
add
popa
add
add
or
inc
add
mov
add
add
or
add
add
add
add
add
push
adc
adc
or
add
add
add
nop
add
add
add
addb
addb
adc
add
add
add
add
or
adc
add
sbb
adc
add
add
add
inc
inc
es
and
or
push
add
addb
or
bound
mov
add
add
add
add
sbb
and
sub
inc
add
add
adc
add
roll
and
inc
add
add
add
add
add
add
add
and
add
add
inc
add
add
add
add
add
add
add
add
jo
push
add
andb
addl
add
add
adc
and
add
add
xchg
xor
add
or
or
add
adc
add
int3
sbb
add
add
inc
add
adc
add
add
add
addb
add
add
addb
inc
nop
add
add
add
add
add
add
and
inc
add
rolb
add
add
and
and
add
addb
add
add
or
add
add
push
add
adc
add
nop
add
add
addb
inc
add
add
roll
addb
mov
dec
add
add
adcb
add
pop
inc
nop
and
and
adc
add
add
add
add
add
add
or
add
add
add
adc
add
add
and
cmp
adc
add
inc
loop
inc
add
add
and
add
add
add
add
dec
add
sub
and
adc
inc
add
add
add
add
loopne
addb
adc
add
add
add
add
test
add
add
and
add
add
add
add
add
adc
add
add
add
add
adc
add
add
or
inc
or
add
and
and
dec
add
add
add
add
and
adc
add
addl
add
or
inc
add
add
add
pop
add
and
add
add
add
add
inc
addb
add
add
add
and
add
pusha
andb
add
add
and
adc
and
nop
add
add
add
inc
add
or
add
inc
add
add
add
adc
xchg
add
add
add
add
mov
add
add
add
add
add
add
add
add
adc
inc
and
addb
add
or
add
inc
add
add
add
adc
inc
add
add
adc
adc
add
sbb
inc
add
and
add
add
sbbb
add
call
add
and
add
add
or
add
addb
dec
add
adcb
or
inc
adc
inc
add
add
add
add
add
add
and
add
add
adc
xor
push
inc
add
add
add
add
add
add
add
add
or
add
add
adc
add
roll
or
add
sbb
inc
pop
add
add
inc
and
add
push
adc
mov
add
add
inc
add
add
and
add
add
add
pusha
add
adc
add
subb
add
add
inc
and
add
or
add
add
inc
add
add
cmpsl
inc
add
add
add
add
add
adc
add
inc
add
add
popa
and
add
add
adc
add
add
mov
sbb
add
add
adcb
or
mov
adc
add
add
add
add
inc
add
sub
adc
inc
add
add
adc
inc
test
dec
add
and
add
or
addl
mov
add
inc
adc
add
push
or
add
add
inc
add
mov
or
add
inc
xor
inc
add
sub
addb
dec
add
adc
add
add
add
andb
dec
add
add
inc
inc
add
add
dec
add
or
addb
and
inc
adc
add
xor
or
add
add
add
and
add
pop
add
add
addb
add
inc
push
add
adc
and
add
sub
add
add
add
add
add
add
add
and
xor
add
add
adc
sub
and
inc
add
add
add
add
or
adc
add
add
arpl
adcb
add
add
and
andb
addb
inc
or
ret
add
adc
and
addl
add
inc
addb
adc
add
mov
inc
add
add
add
or
and
add
add
add
andb
adc
add
pusha
adc
add
add
inc
or
inc
or
add
add
adc
add
adc
add
add
add
add
add
add
add
and
add
add
and
or
sbb
add
addb
adc
or
add
add
sbbb
add
inc
sbb
add
or
add
dec
add
rolb
add
adc
add
adc
and
add
add
add
mov
xor
and
add
add
adc
and
adc
add
ret
add
add
sub
add
add
add
mov
addb
inc
dec
inc
add
or
and
add
add
add
add
rolb
add
test
add
sub
add
addb
add
sub
cmp
add
add
or
or
or
adc
sub
add
adc
movsb
adc
rolb
add
add
add
or
add
add
add
add
inc
add
rolb
add
add
add
add
add
add
add
add
or
inc
or
add
adc
sbb
add
sub
and
andb
addb
add
adcb
add
adc
add
and
add
add
addb
andb
push
add
add
adc
add
adc
and
add
add
add
or
and
add
push
or
add
add
add
add
add
inc
add
and
add
add
and
add
add
add
add
and
add
add
add
add
add
or
mov
add
add
inc
adc
push
push
add
add
add
adc
sub
add
add
adc
and
rolb
add
add
add
or
add
add
add
and
add
mov
add
add
push
and
and
inc
add
inc
inc
addb
or
ret
add
add
orb
sbb
add
add
add
addb
add
and
add
add
add
add
add
inc
or
add
add
and
add
les
add
push
add
or
call
adc
add
lock
add
add
ret
add
adcb
add
add
dec
and
add
add
andb
adc
add
and
add
add
adc
adc
add
inc
addb
push
adc
add
or
add
addb
add
adc
add
add
inc
add
add
add
cmp
add
adc
add
add
add
add
and
and
add
addb
adcb
add
add
adcb
add
or
add
add
add
bound
add
add
add
xor
or
pusha
add
adc
test
add
pusha
add
dec
inc
add
andb
or
or
adc
xchg
sub
add
addl
add
add
add
add
add
add
inc
add
add
add
and
sub
or
add
adc
or
add
xor
sbb
dec
add
adcb
adc
addb
add
inc
add
or
add
adc
nop
add
adc
add
or
add
add
add
add
add
adc
add
add
and
adc
add
add
inc
adc
or
add
add
add
orb
add
inc
orb
or
add
add
inc
add
add
and
or
add
test
inc
add
adc
addl
adc
inc
add
and
inc
sub
add
add
add
add
inc
add
sbb
add
adc
add
add
add
add
add
and
add
adc
add
add
add
inc
add
add
rolb
mov
add
inc
sub
push
add
add
add
add
add
or
rolb
add
pusha
add
or
inc
add
test
nop
add
add
push
adc
add
add
add
add
add
add
in
push
add
mov
add
add
addb
or
or
adc
inc
add
add
add
and
xchg
or
or
add
and
add
addb
add
add
xchg
addl
inc
adc
add
add
add
add
inc
add
add
and
add
add
add
add
add
xor
add
add
sbb
and
adc
add
add
and
add
add
addb
or
adc
add
add
add
roll
and
or
cmp
add
add
adc
dec
add
add
sbb
add
addb
add
add
add
dec
rolb
add
add
or
add
adc
add
or
add
pusha
and
add
sbb
adc
inc
add
and
add
add
add
add
add
add
inc
add
pusha
add
add
add
add
or
inc
add
add
push
addb
inc
add
or
add
or
add
add
or
add
add
add
adc
inc
adc
and
inc
push
sbb
adc
adc
and
add
addb
and
addb
add
add
add
add
add
add
add
and
adc
add
inc
add
nop
add
add
add
add
adc
and
add
add
adcb
add
and
orb
add
add
add
add
adcb
inc
nop
add
rolb
add
or
addb
add
add
pusha
inc
add
and
add
and
add
xchg
add
add
mov
add
add
add
add
andb
add
add
add
loopne
adc
add
adc
nop
or
add
add
and
add
add
subb
or
add
inc
add
orb
add
inc
andb
add
add
addb
or
nop
add
inc
add
les
adc
add
nop
adc
or
add
inc
movsb
add
add
add
pusha
add
and
add
add
addb
add
adc
add
andb
add
and
add
pusha
add
cs
add
add
push
xor
adc
add
add
add
add
add
add
add
add
inc
add
add
mov
addl
add
add
add
inc
add
or
and
test
add
and
add
sbbb
add
add
xor
add
or
and
add
inc
add
lea
add
or
adc
push
jo
inc
push
adc
add
adc
addb
add
add
add
inc
add
add
addb
mov
push
add
inc
or
add
sub
inc
push
push
inc
and
add
add
inc
and
add
addl
add
add
add
add
add
adc
or
add
add
and
or
add
addl
add
add
addb
addb
add
add
nop
and
inc
add
add
inc
add
add
add
adcb
add
add
addb
add
add
add
or
push
inc
adc
add
add
adcb
add
or
add
add
adc
add
add
xor
add
add
add
or
add
add
add
push
movsb
add
adc
and
or
add
push
xorb
add
and
add
add
add
add
add
add
add
or
add
add
and
inc
add
add
pusha
add
dec
add
add
inc
adc
push
add
adc
or
inc
push
addb
add
add
adc
adc
test
addl
add
adc
inc
addb
add
add
add
add
push
or
add
add
addb
add
add
add
add
add
add
add
add
adc
add
sub
add
inc
or
add
add
add
or
add
add
add
adc
add
add
add
adc
add
add
addb
add
add
add
and
and
add
sbb
add
adc
push
add
adc
xchg
and
push
add
adc
test
add
inc
adc
add
or
addb
or
add
inc
add
xchg
add
add
mov
add
pusha
add
or
or
add
add
add
fadds
mov
adc
or
add
orb
add
or
add
add
or
add
or
nop
add
xor
add
sub
orb
add
or
adc
add
test
and
addb
add
adc
add
mov
add
and
nop
inc
jo
ret
add
add
or
add
or
inc
add
add
inc
add
orb
inc
pusha
addb
add
add
addb
add
add
adc
and
inc
add
add
add
xor
add
or
add
add
je
adcb
add
add
add
add
add
push
or
or
add
cmp
addb
add
add
add
add
adc
add
add
inc
add
adc
and
add
dec
or
add
add
add
and
and
inc
nop
and
add
inc
add
add
or
add
add
add
add
add
add
or
inc
add
and
add
mov
or
add
add
add
add
add
pusha
add
inc
adcb
add
and
inc
add
andb
push
add
adcb
adc
xor
add
add
or
add
nop
add
and
add
inc
add
add
adc
add
add
add
or
adc
and
arpl
add
add
or
add
push
add
add
nop
adc
or
add
add
add
inc
and
add
add
inc
add
add
add
inc
add
add
mov
add
add
add
adc
add
inc
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
mov
or
add
or
orb
add
adc
push
add
add
mov
pusha
add
rclb
add
inc
andb
add
add
inc
add
or
add
add
cmp
add
add
rclb
add
and
mov
add
test
and
add
add
add
add
add
and
sbb
add
add
add
adc
mov
inc
inc
add
nop
adc
inc
add
add
add
or
add
adc
or
add
adc
or
add
add
add
test
add
add
adc
push
add
inc
add
or
or
push
and
inc
add
add
andl
add
sbbb
inc
adc
add
lea
add
loop
adc
add
add
inc
inc
add
add
adc
xchg
add
add
add
inc
and
add
addb
adc
add
add
add
add
inc
push
and
add
add
addl
mov
and
add
and
add
add
add
add
inc
test
nop
add
push
mov
add
or
add
add
add
add
or
inc
add
sub
add
add
or
add
add
and
add
orb
adc
or
and
add
add
inc
add
inc
rclb
add
add
adcb
add
add
and
add
add
add
push
add
add
lock
add
add
xor
add
add
inc
add
or
or
adc
add
add
add
test
or
adc
adc
mov
add
add
add
add
add
add
adc
add
add
add
or
add
inc
add
add
adc
add
or
pusha
add
addl
add
and
or
add
and
add
add
inc
and
add
add
push
mov
test
dec
add
sbbb
inc
add
push
or
add
adc
adc
push
inc
inc
orb
add
or
add
es
add
rolb
add
add
add
add
inc
add
add
add
add
or
orb
add
addb
or
and
and
add
add
adc
add
add
add
adc
add
or
adc
sub
and
adc
add
add
add
push
or
inc
add
or
add
add
adc
subb
and
push
adc
adc
adc
add
xchg
add
andb
add
add
add
add
adc
add
inc
add
inc
add
adc
add
add
sbb
add
adc
sbb
add
add
add
add
add
imul
add
adc
inc
push
adc
dec
addb
inc
and
and
add
cwtl
add
add
add
add
add
inc
add
inc
test
adc
add
add
push
add
and
add
add
add
add
mov
add
add
or
orb
and
or
and
add
and
add
add
add
add
add
or
adc
add
add
add
add
add
inc
inc
adc
add
adc
add
add
or
sub
add
add
add
adc
add
mov
and
add
or
add
inc
push
inc
add
and
and
add
add
addb
add
inc
xor
rolb
add
add
inc
add
add
js
and
adc
adc
adc
add
add
inc
add
push
add
add
add
add
rolb
bound
add
add
adc
or
add
add
add
add
add
add
push
inc
add
mov
sbb
add
adc
addb
mov
add
orb
adc
inc
adc
add
and
add
add
add
sbb
add
add
or
andb
add
inc
add
or
add
inc
add
addl
adc
add
add
add
and
or
andb
add
andl
adc
sub
add
add
add
or
add
add
add
add
add
or
add
rolb
sbb
adc
subb
add
inc
add
add
add
add
and
xor
add
add
sub
add
and
adc
or
add
add
and
or
addb
add
add
sub
addb
inc
add
add
and
add
addb
add
add
add
add
pusha
sbb
add
add
adc
add
add
adc
add
popa
add
add
xorl
and
or
add
add
add
inc
adc
push
add
add
add
push
add
push
add
inc
adc
or
adc
inc
add
add
adc
add
add
addb
add
add
add
mov
nop
add
add
add
add
inc
pusha
inc
add
add
adc
add
and
or
add
add
or
add
add
add
and
add
sub
add
xchg
add
add
and
add
and
add
leave
add
add
add
add
mov
push
sbb
add
adc
or
test
adc
or
add
inc
add
add
add
addb
add
ret
adc
add
add
or
add
add
add
and
adc
add
and
sbb
inc
adc
add
add
add
and
addb
add
or
pusha
add
add
add
inc
addl
add
add
orb
add
add
and
add
or
adc
add
add
inc
add
rcll
add
add
or
add
or
adc
add
inc
sub
and
add
add
add
add
addb
adc
add
add
and
add
or
inc
and
add
add
add
add
add
mov
or
add
xor
and
sub
nop
and
add
and
dec
or
add
add
add
inc
and
add
push
or
add
add
add
addb
addb
add
add
adc
xorb
add
adc
add
add
add
add
add
add
add
add
and
and
add
inc
add
add
adc
addl
add
or
add
inc
add
add
add
andb
add
inc
add
add
inc
add
add
or
add
add
nop
pop
inc
adc
or
add
add
add
add
add
add
add
add
add
push
add
mov
nop
xor
enter
inc
inc
add
inc
add
add
and
mov
add
add
adc
add
or
add
xchg
and
sub
adcb
add
inc
or
add
add
add
adc
adc
and
add
or
inc
and
add
add
pop
add
add
add
adc
sbbb
add
add
addb
adcb
and
add
xor
inc
add
add
adc
add
rolb
sub
adc
adc
add
sub
add
mov
add
add
add
add
adc
xchg
movsb
andb
adc
add
adc
or
add
aam
add
and
add
orl
addl
add
push
add
and
or
adc
add
addb
addb
add
or
inc
and
or
inc
addl
xor
add
add
add
push
add
add
push
xor
add
add
adc
or
add
sbb
inc
sbb
push
pusha
add
add
rolb
add
and
or
adcb
add
pop
inc
inc
inc
addb
add
add
and
addl
and
and
add
add
add
add
inc
addb
add
addb
add
and
push
or
add
add
add
add
or
add
add
addb
add
jo
add
add
add
and
add
adc
inc
add
add
addb
add
add
add
add
adc
popa
add
add
add
add
nop
add
add
add
and
add
add
inc
add
adc
orb
xchg
addl
add
sub
and
add
or
add
add
add
and
inc
push
and
add
add
adc
add
or
push
add
and
add
les
addb
or
add
add
inc
add
add
xor
add
sub
add
add
add
add
add
and
add
mov
addb
rolb
add
orb
add
sub
or
and
or
sub
add
push
rolb
or
or
addb
push
add
add
or
adc
sbb
arpl
or
add
addb
add
add
add
adc
or
and
add
mov
addb
add
addb
add
and
and
addl
add
add
inc
add
and
or
add
add
add
addb
add
add
add
add
add
or
rolb
add
add
push
addb
push
add
pusha
add
adc
and
mov
sbb
test
add
or
add
and
add
adc
add
add
and
add
add
or
and
add
loop
inc
or
add
adc
inc
add
adc
xor
or
add
add
add
add
or
add
addb
and
and
inc
add
add
add
addb
add
adc
addb
nop
add
and
and
inc
add
and
and
add
add
addb
adc
add
add
or
adc
inc
and
add
adc
addb
add
add
add
add
inc
and
andb
dec
adc
add
adcb
add
add
adc
addb
add
adc
and
nop
mov
and
add
or
pop
add
or
add
add
inc
add
add
add
add
add
add
inc
inc
add
and
add
ret
addb
orb
add
add
add
add
adc
add
addb
add
add
add
inc
or
add
addb
xchg
add
add
addb
add
add
mov
adc
add
add
add
add
and
add
add
mov
add
or
or
adc
xor
add
mov
addb
or
and
add
add
add
cmp
add
and
add
adc
add
inc
mov
inc
and
or
adc
add
add
and
add
or
pusha
xchg
add
rorl
addb
inc
js
add
inc
add
add
sbb
add
inc
addl
orb
nop
inc
add
add
or
add
add
add
add
and
xchg
addb
or
and
add
add
add
inc
add
nop
add
add
or
roll
add
add
add
add
adc
add
and
add
add
add
add
adc
addb
add
and
add
and
or
and
adc
sbb
or
add
lcall
add
orb
add
addb
add
or
add
add
add
adc
or
inc
add
mov
add
add
inc
add
add
inc
add
adc
inc
add
inc
inc
add
add
sub
and
add
add
add
add
add
inc
adc
add
add
add
or
and
dec
add
add
or
add
add
bound
add
add
adc
add
add
and
add
adc
adc
add
nop
inc
and
orb
and
or
add
adc
add
or
inc
add
add
inc
add
add
or
add
add
or
add
add
add
and
pusha
add
or
add
add
add
and
adc
add
add
inc
sbb
adc
add
inc
add
adc
add
inc
nop
inc
or
add
call
add
add
add
add
add
add
adc
add
add
add
and
adc
adc
add
add
add
add
adc
adc
addb
add
and
add
add
add
add
adc
aam
or
and
add
sub
add
adc
add
and
add
add
add
add
or
add
add
add
addl
push
inc
add
add
add
andb
add
add
adc
addb
inc
and
or
andb
addb
adc
add
loopne
sbb
xor
add
inc
add
add
inc
add
loopne
add
or
test
add
push
add
add
add
add
orb
add
add
add
mov
pusha
add
and
add
add
add
and
add
add
mov
add
add
add
mov
add
add
adc
inc
inc
call
add
add
add
adcl
addb
add
inc
add
add
add
add
add
or
addb
add
or
or
xor
add
adc
add
add
inc
add
addb
add
add
xchg
add
add
add
and
add
add
and
add
sbb
push
adc
add
add
add
adc
inc
add
add
adc
adc
addb
orb
add
add
sub
add
cwtl
add
add
sub
add
inc
add
add
xchg
add
ret
add
or
and
or
add
and
add
adc
add
add
mov
addb
push
push
andb
add
add
inc
add
add
inc
add
add
add
sbb
and
or
and
add
mov
adc
inc
add
nop
add
add
and
add
nop
add
add
add
add
add
add
or
adc
add
or
add
add
add
and
add
add
or
add
add
add
or
andb
test
add
adc
add
or
add
or
add
add
push
or
add
and
or
add
inc
add
add
add
add
add
add
add
push
or
addb
xorb
add
sub
test
add
inc
rolb
add
inc
add
test
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
adc
add
add
add
add
add
dec
add
addb
add
add
mov
and
inc
add
add
add
and
adc
add
add
add
adc
xor
adc
add
and
adc
sub
sbb
and
add
adc
add
or
add
push
add
adc
add
and
add
addb
addb
add
add
add
add
and
add
add
add
inc
add
and
add
inc
add
add
add
and
add
add
addb
or
add
and
or
and
inc
adc
add
add
add
and
and
add
add
adc
add
add
sub
add
inc
add
add
and
add
jo
mov
add
add
or
or
rolb
add
andb
and
add
adc
add
or
adcb
add
add
and
mov
add
add
add
push
and
inc
sub
add
add
add
enter
or
adc
add
and
add
or
inc
adcb
xor
add
add
or
dec
and
sub
add
add
inc
add
add
add
inc
mov
add
and
add
and
add
inc
adcb
and
add
add
add
inc
mov
add
add
and
add
adc
add
add
add
add
add
add
and
add
add
addb
pusha
or
inc
test
addb
add
add
addb
add
adcb
adcb
adc
add
add
add
inc
add
orb
add
and
mov
and
fs
add
add
add
add
adc
add
add
add
add
add
adc
add
ret
andb
and
xorb
add
add
and
add
or
add
inc
sub
or
add
gs
add
addb
and
add
andb
lcall
add
add
and
add
add
add
dec
push
and
mov
add
adc
orl
add
rorl
add
add
add
add
add
add
addb
and
addb
add
add
ret
mov
add
adc
add
add
or
add
sub
push
add
adc
add
and
rolb
or
add
and
add
adc
add
nop
add
or
or
add
add
and
add
adc
test
add
add
rcrl
add
or
add
subb
add
pusha
and
sbb
addb
and
adc
add
inc
sub
addb
or
and
add
nop
add
inc
add
xor
add
add
and
addb
and
bound
add
or
adc
add
and
and
adc
add
orb
and
sub
add
push
inc
rolb
add
addb
sub
inc
dec
add
add
add
add
inc
add
mov
add
and
dec
adc
add
add
add
add
inc
add
add
and
add
add
inc
inc
add
add
add
add
adc
add
adc
add
adc
add
inc
inc
addb
adcb
mov
add
add
adc
test
push
inc
add
add
adc
addb
add
adc
dec
sbb
add
add
adc
addb
add
add
or
add
or
add
add
add
adcl
add
or
add
add
inc
add
addl
add
add
or
add
add
inc
addb
nop
add
add
adc
and
rol
sbb
add
add
add
inc
add
inc
cwtl
addb
pusha
loopne
addb
add
add
mov
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
xor
inc
and
add
add
addl
and
addb
add
add
add
add
add
add
add
addb
and
inc
inc
or
add
add
and
test
sub
adc
addb
push
add
or
add
xorb
dec
add
push
push
add
inc
add
add
rolb
and
add
add
pusha
adc
and
and
add
add
adc
sub
adc
add
lea
or
and
mov
test
add
and
mov
pop
cmc
adc
negl
lds
and
js
dec
cmp
lcall
hlt
les
aam
mov
test
stos
xchg
fs
aad
jno
and
hlt
lods
shlb
int3
out
in
fldenv
movl
mov
or
jmp
or
cs
fwait
xor
icebp
icebp
stc
xchg
dec
sub
xorw
add
or
fdivrs
sub
sub
adc
outsb
hlt
dec
mov
jg
aad
out
movsb
outsb
jg
jmp
pop
xchg
imul
push
xor
hlt
fld1
andl
in
xchg
in
add
mov
mov
mov
xchg
xor
cwtl
imul
orb
nop
fisubl
pop
mov
les
sub
cltd
outsb
jg
mov
out
mov
fstps
sbb
push
ds
dec
or
es
or
fwait
sbb
pop
mov
movsb
sub
in
cmp
sbb
mov
mov
sti
jae
sbb
fisubl
dec
fldenv
call
les
sbb
es
or
popf
loope
pop
mov
sbb
nop
or
in
das
pusha
push
sbb
hlt
mov
in
sub
hlt
les
stc
hlt
fnstcw
inc
aam
movsb
hlt
fldcw
lret
outsb
xor
hlt
out
adc
in
fwait
nop
hlt
les
in
adc
adc
adc
jne
fadd
hlt
mov
in
shrl
testb
jo
dec
cs
aaa
jge
pop
dec
fstpt
mov
or
or
es
or
add
pop
repnz
shr
push
cltd
rcr
mov
sub
sub
add
mov
int3
mov
xchg
jge
rcll
out
fldenv
dec
fnstsw
in
fnstcw
mov
jmp
in
mov
in
sub
sub
cmp
or
mov
mov
push
outsb
or
push
test
aaa
jge
ja
int
hlt
cmp
movsl
inc
iretw
push
in
fnstcw
sbb
and
or
pop
sbb
test
add
test
ljmp
flds
mov
call
xchg
or
es
mov
shrb
xchg
and
mov
cmp
inc
ja
enter
pop
movsl
test
fbld
cmp
sbb
inc
in
les
cld
dec
movsb
nop
dec
clc
fsts
hlt
std
aad
xchg
sub
jg
roll
xor
outsb
enter
xchg
dec
lahf
fsts
mov
out
scas
cltd
in
xchg
es
lods
notb
or
es
jg
sarl
testl
roll
clc
out
ret
xchg
push
push
ljmp
mov
enter
dec
lcall
out
adc
outsl
push
and
jg
int
xorl
jge
stos
inc
pop
mov
add
sti
or
sub
fldcw
daa
mov
outsl
inc
fldcw
movl
or
pop
lea
sbb
sti
xchg
mov
dec
add
es
jg
push
shl
dec
ljmp
lods
outsb
idivl
lods
dec
sti
jle
stc
xchg
cld
test
mov
mov
es
ja
int
imul
jg
shr
scas
clc
repnz
mov
mov
jle
xor
xchg
repz
pusha
fldenv
les
fiaddl
hlt
dec
out
mov
push
out
inc
xor
pop
imul
aad
fstps
loopne
cmp
jg
rorl
ja
hlt
pop
in
flds
mov
fidivrs
fldcw
daa
and
add
outsb
hlt
lods
in
mov
in
cli
inc
sbb
movsl
scas
cltd
loope
mov
lea
xchg
sbb
lret
pop
dec
loope
push
call
in
fldln2
hlt
les
jg
sbb
hlt
cld
dec
scas
nop
pushl
lods
jmp
stc
movsb
mov
sahf
lds
in
cmp
nop
pop
sub
inc
jg
aad
mov
push
outsb
in
dec
mov
std
dec
fsts
pop
jmp
adc
xchg
scas
jge
rcrb
aam
fldenv
loop
stc
cmpsb
repz
xor
fyl2xp1
xchg
or
fabs
cmp
lea
loope
fs
fidivrl
or
xchg
lds
daa
call
les
cmp
popa
in
mov
lods
stos
mov
mov
lds
cmpsl
sahf
mov
mov
add
adcb
nop
mov
std
call
push
aaa
in
cmp
mov
fiadds
sbb
aad
hlt
incb
sbb
and
aam
fcmovb
xchg
stc
adc
test
ret
movsl
inc
es
jbe
or
inc
mov
jle
mov
cmpsb
lods
mov
lea
and
loopne
cmp
std
mov
ds
ret
in
and
fs
repz
int3
pop
rcl
lds
out
aam
inc
in
mov
cmp
lods
xchg
push
cltd
add
sbb
std
dec
ss
or
xchg
mov
les
push
mov
adc
mov
and
aam
aam
in
fsubr
sbb
fs
popa
faddl
sbb
cmc
mov
jmp
ror
int
call
jecxz
sahf
sub
daa
mov
push
in
out
add
ret
xchg
cmp
or
les
jg
xor
cli
aaa
roll
sahf
imull
cmp
cmp
in
xchg
loope
addl
sub
movnti
lcall
cltd
divl
loope
clc
ret
scas
sarl
repz
jmp
fiadds
popf
out
test
cli
enter
negl
nop
lret
ficoms
mov
adc
cmp
pop
hlt
mov
lret
hlt
scas
das
push
dec
icebp
cmp
add
in
test
add
movsb
cmp
jmp
roll
sahf
in
lahf
and
adc
in
mov
or
enter
je
in
jg
sbb
xor
ror
fwait
mov
mov
mov
pop
bound
subb
aas
sub
mov
rorl
sahf
dec
cmp
xchg
in
and
sbb
fs
push
daa
xor
mov
stos
xchg
out
repnz
cmp
lock
jp
mov
dec
add
inc
add
lret
repnz
inc
mov
sbb
mov
pop
xor
je
sti
lods
lea
or
mov
insl
push
in
dec
adc
test
adc
sub
xchg
or
lret
mov
add
push
in
repz
add
pop
fdivl
push
loope
mov
cwtl
xchg
jns
ret
enter
add
mov
insb
hlt
or
pushl
pop
lock
push
cli
in
aad
add
leave
hlt
pop
mov
sub
fstl
pop
sbb
mov
popf
mov
lods
mul
jmp
in
fsts
fnstsw
lds
sbb
jnp
adc
xchg
push
or
mov
sbb
outsb
push
ds
add
fdivrs
fsubrs
loope
sub
outsb
sbb
es
pop
mov
movsb
cmp
fs
std
hlt
jae
pop
ja
aad
and
shll
jl
out
and
and
cld
fcomps
js
xchg
loopne
sbb
inc
test
push
jecxz
pop
mov
xchg
fisubl
rep
pop
lahf
inc
or
stos
adc
cmpsl
cmc
cs
icebp
lds
add
aad
dec
lds
mov
std
sub
das
and
sbb
jne
movsl
push
fsts
xchg
push
jmp
inc
mov
stc
dec
pop
sahf
cli
jecxz
adc
inc
fiaddl
adc
sub
insb
mov
mov
add
cmpsb
hlt
rcll
int3
fs
ja
out
xor
pop
hlt
push
or
add
test
xchg
mov
movsb
testb
xchg
sbb
pop
or
mov
push
jp
clc
movsl
adc
xor
loope
pop
std
inc
flds
repnz
xor
gs
test
test
iret
xor
pop
add
xchg
out
adcl
je
dec
sbb
jb
out
dec
adc
lret
loop
adcb
in
leave
push
mov
pop
loope
popf
push
in
cmp
or
mov
and
cmp
sbb
cmc
xchg
push
xor
inc
or
pop
mov
jae
sarl
aam
lret
loope
iret
xor
sbb
push
add
sbb
or
xlat
or
adc
scas
add
jp
adc
out
xchg
jne
movb
fcmovb
mov
test
fnstenv
movsb
dec
arpl
cli
xchg
pop
push
sub
push
hlt
fnstcw
cmp
fdivp
mov
ret
in
popf
sbb
shll
outsl
xchg
ja
rep
loopne
mov
lret
mov
aam
jle
sbb
lea
and
sub
mov
insl
subl
sbb
arpl
lret
fmull
into
cmp
inc
push
lahf
clc
js
mov
inc
fcompl
cmc
xchg
mov
ss
push
in
jl
movsl
stos
movsl
pop
in
lret
cmc
clc
push
add
cmp
shl
push
mov
push
test
daa
scas
jmp
loope
sub
ficoms
pop
mov
call
mov
or
add
ja
nop
cs
dec
daa
xchg
clc
xchg
fnsave
negl
in
sti
and
hlt
sub
inc
jge
xchg
repnz
out
shll
xor
pop
sti
inc
sbb
pop
loope
test
sub
out
dec
hlt
je
mov
jns
xchg
pop
int3
pop
mov
lock
or
push
xchg
shlb
jns
add
clc
mov
or
push
test
sbb
into
mov
stc
and
js
push
mov
jne
cmp
jmp
inc
xor
jg
sbb
leave
sbb
cmp
popl
mov
cmp
rcrl
mov
je
ljmp
les
adcb
in
fldenv
aam
xor
call
das
and
hlt
xlat
cmp
les
push
xchg
push
and
jmp
repnz
jge
fisubl
out
loop
push
adcb
mov
imul
clc
lds
xchg
in
cmp
or
test
xchg
loop
fldcw
jnp
stc
mov
into
aaa
in
mov
in
sbb
pushf
and
cmp
lods
fcompl
lret
dec
cmc
ds
insl
sbb
icebp
cmp
cmc
push
inc
in
push
xchg
inc
and
repnz
xchg
xchg
hlt
mov
std
stos
subb
pop
dec
addr16
movsb
rolb
push
sub
sbb
pop
fucomi
cs
mov
shrb
and
rcll
stos
push
fwait
xchg
push
cli
mov
and
and
mov
inc
add
mov
fidivrs
je
mov
cli
jp
in
mov
jl
aaa
mov
leave
and
and
fbld
es
hlt
lret
mov
test
add
sar
xchg
leave
xor
imul
inc
in
rcrb
out
sahf
scas
mov
jbe
push
sbb
pop
hlt
hlt
mov
aaa
fiadds
loopne
jnp
shll
mov
adc
or
hlt
rorl
jbe
out
inc
ret
fwait
mov
movsb
aaa
xor
mov
xor
cmc
jl
mov
inc
stc
addl
dec
lods
loopne
in
jo
mov
out
outsb
int
out
jnp
stc
and
fsts
dec
clc
jge
movsl
test
sti
push
cli
loope
inc
stc
xchg
loopne
fwait
cmp
movsl
xchg
push
fdivs
popf
test
shll
insl
in
xchg
mov
les
mov
ficoms
sbb
ljmp
mov
stc
cmp
dec
push
jne
fnstenv
or
and
mov
xorl
push
jg
loope
cs
stc
les
mov
mov
mov
imul
pop
xchg
in
sbbl
xchg
adc
jl
fdivrs
xor
sbb
xchg
or
int3
dec
or
pop
inc
cld
out
push
push
lods
jno
push
lret
jbe
xchg
inc
fadd
lret
mov
fstps
xor
ret
push
add
or
fcmovnbe
adc
in
shrl
ljmp
rcll
rorb
icebp
lock
xor
mov
je
and
hlt
sub
je
adc
and
fldenv
mov
mov
shlb
xchg
or
in
mov
adc
shll
into
mov
aas
dec
lcall
fs
in
mov
pop
pushf
adc
lock
push
xor
idiv
stos
fwait
je
adc
fstpl
jns
das
pop
fnstcw
jecxz
xor
add
fwait
les
pop
mov
cmpsb
fldcw
jns
sbb
test
in
dec
push
xorb
cmp
pop
je
push
pop
and
sbb
dec
and
fisubrl
xchg
and
data16
pop
test
and
in
ficomps
inc
pop
leave
packsswb
mov
je
call
fisubl
xchg
enter
sub
lods
cmpsl
out
das
add
std
fsubrs
and
ficoml
sbb
daa
jns
daa
push
in
pop
pop
fwait
int3
scas
dec
hlt
add
addb
and
mov
sub
fs
test
add
sbb
xchg
and
in
rorb
enter
push
jl
gs
cmp
cltd
repnz
mov
xchg
lock
mov
cld
scas
mov
std
in
pop
fdivs
cmp
shrb
sti
xor
add
xor
inc
cmp
stc
and
ret
lods
cltd
in
js
cmpsl
loopne
aad
inc
call
sub
les
xor
sarb
insl
or
or
movsb
das
outsl
icebp
xchg
icebp
imulb
lahf
fbld
pop
xchg
flds
push
sbb
in
mov
mov
loopne
inc
push
jo
fnstcw
je
cs
call
ret
ljmp
fldz
cli
mov
xor
mov
add
cmp
cli
mov
jg
add
sbb
sbb
pop
in
data16
cmp
xor
sub
push
xor
negl
dec
dec
add
mov
jle
in
call
shl
cli
lcall
iret
cmp
cld
lcall
push
ljmp
cmp
inc
push
ljmp
jmp
lods
ds
push
mov
std
cmp
inc
imul
inc
bound
xor
add
inc
jns
fstpl
mov
and
mov
adc
les
or
inc
ret
cwtl
daa
fs
mulb
pop
pop
sbb
or
sbb
dec
inc
xchg
and
xor
mov
lods
xchg
sub
add
in
mov
inc
test
sbb
jle
out
sti
jge,pn
repz
mov
in
xchg
fsubs
iret
add
lock
in
cmpsb
repz
call
and
das
xor
test
dec
or
cmp
mov
fists
lods
sti
xlat
shll
mov
dec
test
aas
mov
pop
and
movsb
add
hlt
movsb
lods
sahf
ds
in
loopne
les
sbb
sbb
fsubr
or
lods
mov
dec
dec
pop
fcomp
adc
fidivl
mov
out
mov
les
les
loopne
das
das
insb
jecxz
mov
mov
addb
lret
fwait
pop
push
pop
jecxz
addr16
jmp
push
cmp
cltd
dec
fdivl
xchg
sti
mov
es
push
in
in
lds
sbb
fnstenv
adc
dec
shrl
std
xor
jno
sti
xchg
ss
sbb
aam
jnp
aaa
lret
jmp
fmulp
cltd
cmp
lahf
test
fistps
mov
in
mov
push
mov
in
pop
stos
iret
sbb
out
les
adc
jmp
fadd
cmp
adc
xchg
nop
in
ret
sub
loope
cmp
inc
jae
mov
push
loop
mov
xchg
mov
mov
jb
aam
and
xlat
add
lcall
cmp
out
jl
hlt
in
arpl
cmp
xchg
lods
jl
stc
or
fldenv
dec
jmp
xor
sub
xchg
cmp
jmp
adc
sub
adc
inc
xor
jge
test
cmp
int
out
adc
add
cmp
dec
fucom
movsb
scas
fcmovnb
hlt
pop
leave
repnz
push
fcompl
cltd
ljmp
cmpb
or
shl
xor
cmc
cld
xor
inc
iret
or
cmp
xlat
inc
hlt
xor
pop
imul
jecxz
movsl
lret
test
sar
pop
add
jmp
fs
jmp
mov
les
js
adc
call
mov
mov
jae
sub
shll
and
mov
loope
pop
ret
add
lods
outsl
cmp
adc
push
and
mov
sahf
enter
sbb
hlt
inc
addr16
mov
push
dec
rcl
aad
rol
cwtl
mov
sbb
sbb
inc
mov
or
jb
and
mov
xor
sub
mov
mov
dec
lcall
dec
addb
xchg
jae
push
mov
scas
jne
cltd
xor
test
flds
repnz
test
push
lcall
fld
imul
bound
pop
inc
add
xor
sbb
sti
lds
lahf
and
adc
lcall
mov
dec
test
pop
add
in
mov
mov
in
adc
push
cld
cld
std
std
stos
movsl
fimuls
ror
mov
or
movsb
popf
test
std
sahf
fcmovu
mov
in
jge
cmp
jge
aaa
lds
out
or
add
sub
adc
popa
lods
add
notl
sbb
mov
ret
push
sbb
in
pop
sub
ja
nop
ret
inc
jne
repnz
jns
mov
cmp
divl
push
push
or
or
repz
mov
enter
in
vpunpckhdq
loopne
je
out
sahf
lret
outsl
fnstcw
enter
fmulp
dec
movsb
xchg
jne
xor
popl
fstl
push
xchg
les
mov
jle
and
je
mov
les
ljmp
push
push
push
mov
cltd
fcomip
jl
leave
mov
sti
xor
shll
and
pop
fwait
pop
aam
test
arpl
pop
pushf
int3
push
sub
dec
in
or
fisttpl
test
clc
add
lret
icebp
cmpsb
pop
test
cmc
push
push
imul
sub
int
push
js
in
jb
cmpsb
hlt
xlat
loopne
xchg
and
adc
cmp
fnstcw
mov
bound
xor
sti
pop
sub
inc
mov
and
out
clc
out
xor
lcall
dec
cmp
mov
das
icebp
aaa
int3
fiaddl
movsb
adc
push
xchg
stos
push
mov
test
fsub
pop
insb
ficoml
sti
into
mov
pop
sub
aad
xchg
xor
loopne
fstps
iret
repz
gs
test
out
fistl
inc
out
jecxz
clc
push
dec
flds
bound
add
sbb
adc
test
les
scas
aas
add
add
ds
mov
ret
rclb
addr16
test
adc
add
mov
pop
in
in
std
pop
cmc
jno
xor
add
mov
xor
ljmp
hlt
xor
in
les
test
xchg
iret
es
leave
fldcw
ret
dec
icebp
pop
and
and
mov
stos
int3
std
push
jo
mov
daa
mov
icebp
xlat
rorb
lea
fnstsw
mov
adc
jg
or
push
push
mov
stc
daa
push
int3
or
mov
jmp
mov
and
push
in
rclb
in
fld
aaa
aas
ljmp
add
fsubs
rcrb
cmp
std
movsb
mov
push
xchg
stos
dec
push
scas
push
lods
mov
stos
addl
pop
sbb
xchg
std
pop
rclb
repnz
leave
xchg
in
push
in
lds
mov
pop
xchg
jle
test
jecxz
push
test
repz
xor
std
in
mov
fiadds
inc
in
popf
dec
sub
leave
cmp
push
jnp
es
pushf
sub
mov
adc
scas
fidivrl
leave
mov
or
int
lcall
imul
push
into
xchg
xor
and
sub
enter
jp
int
pop
or
idivl
sbb
jle
sbbb
fimull
cmc
cmpsl
sbbb
jg
in
and
sbb
mov
fucomi
fisubrl
fstps
xchg
ss
je
push
mov
testb
xor
mov
rcll
xor
push
jg
f2xm1
mov
sub
popf
repz
and
in
push
mov
pop
dec
adc
outsb
cmp
gs
adc
cmp
add
or
jl
dec
pop
hlt
lret
aas
mov
in
or
fnstcw
mov
mov
xchg
xor
jg
cs
mov
dec
xchg
imul
mov
mov
jmp
cli
and
hlt
leave
cmpsl
enter
jge
negl
sarb
xor
fsubs
mov
pop
lods
in
rorb
lahf
xchg
lahf
pop
sub
lods
gs
popf
add
notl
mov
xchg
pop
jbe
xchg
mov
xchg
inc
and
mov
int3
bound
ret
je
outsb
sub
sti
je,pt
aam
mov
movsb
out
mov
xor
jno
xor
not
sbb
or
ret
adc
push
mov
xchg
and
jae
xlat
push
push
jge
test
es
jle
add
cld
ficompl
jns
test
xchg
push
jbe
xor
mov
out
push
dec
pop
and
adc
inc
lahf
add
cmpsb
int3
adc
aam
in
mov
xchg
das
les
jge
mov
add
cmc
cli
dec
xchg
out
mov
test
sub
lods
xchg
rolb
cld
in
daa
xchg
lcall
adc
shl
mov
pop
imul
push
gs
out
fs
xchg
fsincos
out
pop
add
and
mov
out
adc
mov
movsb
fldenv
and
rcr
in
pmulhw
fdivl
iret
and
fsubr
js
push
insb
mov
out
xor
cmc
push
stc
adc
or
cmp
aad
jp
out
sub
mov
dec
loope
push
xchg
push
add
jp
jl
pop
call
sbb
stos
pushf
loop
faddp
das
andl
gs
in
enter
divl
xor
hlt
cwtl
ret
das
pop
jo
jmp
loope
ljmp
fabs
xchg
es
mov
daa
pushf
in
std
stos
mov
cmc
and
fldenv
fs
mov
or
test
hlt
insl
lds
lds
mov
add
inc
stos
inc
mov
xchg
clc
sbb
test
cs
sub
out
iret
icebp
mov
pop
jge
fdivr
stos
fistpl
and
or
sti
in
es
in
in
ja
std
jb
les
scas
je
ror
push
and
iret
ljmp
mov
cmc
stc
notb
fcoml
mov
cmpsb
push
add
enter
cmc
inc
in
push
and
loop
dec
mov
sbb
fsub
out
outsl
mov
cmpb
in
aaa
or
sub
cld
mov
cli
xchg
fisubs
sbb
clc
inc
jl
daa
mov
xchg
inc
mov
inc
inc
mov
sahf
mov
iret
fs
push
int3
mov
aad
aaa
div
inc
push
in
icebp
les
cmpsl
enter
fld
cld
mov
pop
pop
repnz
movsl
hlt
sbbl
adc
call
popa
cmp
pop
xchg
xlat
fsqrt
push
fwait
cmpsl
push
mov
stos
enter
lock
push
adc
imul
mov
repnz
push
add
in
repnz
push
xchg
cs
mov
xlat
in
dec
popf
ret
aad
mulb
lods
shr
sub
sbb
mov
lret
dec
je
repz
frstor
inc
lcall
jmp
xchg
loop
xor
or
push
cld
mov
xchg
adc
lret
lds
movsl
popf
pop
roll
cli
sub
js
enter
fldenv
loopne
ret
add
or
xchg
fsubrl
mov
ja
fildl
loop
hlt
push
xchg
outsl
pop
ret
test
fwait
jp
lret
xor
or
lahf
mov
movsl
pushf
std
iret
push
in
inc
cmpl
or
in
into
call
push
aas
cmpsl
enter
inc
bndldx
shlb
sub
movsl
hlt
jmp
and
jnp
xchg
jecxz
and
std
das
int
cmpsb
xor
mov
sbb
fs
push
loope
xchg
fstp
pushf
iret
fstps
and
dec
or
in
enter
out
test
test
jp
movsl
lock
int
add
mov
clc
out
jmp
push
andb
ficoms
pusha
pop
xchg
lods
sub
lock
js
inc
mov
les
shrb
pushl
into
fsub
out
fsubr
in
mov
jle
mov
jb
mov
imul
jmp
loop
nop
ret
cmpsb
or
loop
les
jb
adc
mov
sbb
xor
mov
mov
and
out
psadbw
push
or
push
icebp
ret
adc
repnz
or
dec
mov
cltd
hlt
dec
scas
adc
sti
cmc
fists
popa
roll
out
loope
dec
mov
mov
repnz
stc
out
test
jb
imul
add
hlt
movsb
loope
lods
repnz
push
pop
les
repz
cmp
dec
add
clc
fsub
push
adc
stc
aaa
mov
cmp
add
lds
out
stc
jecxz
in
inc
xchg
fcomi
pop
push
frstor
repz
sbb
push
dec
gs
daa
lods
or
das
in
out
ss
cmpsb
je
cmp
xchg
xchg
int
lods
mul
mov
leave
adc
hlt
leave
mov
stos
test
in
into
mul
and
xor
hlt
xchg
test
hlt
outsb
xor
lret
cmp
test
inc
clc
push
jnp
cmp
cmpsl
dec
test
stc
int3
int
jnp
ljmp
movsb
or
add
fsubrp
inc
add
sarb
lds
jne
xchg
fimuls
fwait
adc
ja
mov
pop
inc
imul
pop
lds
cmp
pop
in
scas
or
aas
dec
stc
out
mov
xor
les
push
cmc
push
push
cltd
sbb
call
pop
cmc
fsubrl
mov
add
fsubrl
ljmp
loop
rcll
ds
decb
xchg
and
ljmp
loop
fdivl
out
pop
mov
cmp
clc
aam
jle
loop
out
test
into
loop
daa
pop
in
ret
jge
jg
lea
aam
or
faddp
jle
sbb
xchg
lds
mov
mov
lods
scas
jne
lods
out
testl
mov
xor
sbb
push
inc
loopne
test
cli
lret
pop
push
mov
data16
imul
lods
or
pop
mov
dec
mov
les
cmp
inc
sahf
rol
sbb
lret
leave
and
test
in
mov
in
jecxz
sarb
repnz
gs
mov
mov
cmp
fidivl
aam
push
mov
insb
fs
cld
shrb
sub
cs
push
pop
and
dec
into
int3
mov
in
out
in
sbb
std
jp
xlat
jecxz
cmp
cs
repz
ficoml
inc
aad
jecxz
rcll
ret
mov
lea
nop
xlat
fwait
movsb
into
adc
add
daa
ljmp
cltd
and
imul
mov
fisttpl
inc
sahf
out
test
push
in
ret
hlt
loope
es
inc
xor
les
cltd
pusha
cltd
pop
das
sahf
inc
in
fcmovnb
dec
jmp
push
fstps
loop
jb
arpl
add
lcall
imul
mov
xchg
fnstenv
movsl
js
fdiv
cmpl
inc
int
test
dec
les
add
test
cmp
mov
add
divb
loopne
ret
in
mov
lds
mov
out
xchg
lret
push
inc
test
sbb
and
jl
sub
popf
fisubl
lret
idiv
dec
pop
in
ret
add
shlb
inc
dec
decb
mov
and
fcmovu
aad
lret
scas
fimull
mov
cmp
mov
add
repz
loopne
les
movl
jnp
rol
repnz
add
mov
fstpl
xchg
push
ljmp
jge
cwtl
mul
sbb
repnz
sbb
mov
sbb
add
add
and
fxch
jmp
repnz
hlt
jmp
nop
mov
fldenv
mov
or
lret
pop
mov
or
nop
ret
adc
lret
push
xchg
ror
mov
mov
popa
jg
out
in
push
into
rorl
leave
and
or
movsl
lahf
in
sbb
inc
cli
mov
sbb
flds
jns
stc
push
mov
jmp
lea
mov
mov
roll
sbb
movsl
jp
ret
pushf
sti
fdivrl
fnstcw
ret
addb
dec
fcmovb
mov
imul
xor
pop
shl
mov
pop
jg
push
jmp
cmc
jb
test
inc
xlat
jne
loopne
sbb
mov
jmp
fldl
inc
nop
add
push
mov
mov
loop
aaa
lret
fbstp
fnstenv
sti
out
fsubrl
imul
cld
pop
mov
push
out
icebp
jmp
inc
faddl
push
mov
imul
fcomi
adc
popf
cli
and
and
inc
sbb
pop
dec
xchg
add
cmpsl
dec
imul
cmc
insl
int3
sub
xor
xchg
mov
in
sub
jl
adc
sbb
pop
mov
es
jl
cld
int
cmp
adc
sbb
outsb
xor
fcomp
enter
lret
sbb
cmp
fnstsw
sub
popf
lds
repz
xor
adcl
mov
adc
add
sbb
mov
add
out
inc
push
repz
fchs
addr16
mov
push
jecxz
in
int
or
test
add
cmp
cmpsl
adc
sub
pushf
frstpm(287
or
in
hlt
push
scas
repnz
sbb
aad
lret
xor
cmp
fadds
nop
hlt
rcl
fidivl
mov
rcll
mov
mov
rclb
fs
std
add
loope
sarl
cli
mov
sbb
mov
push
lret
and
movsb
pop
les
leave
mov
cmp
aaa
push
dec
mov
add
into
mov
in
ret
in
hlt
aad
movsb
inc
mov
les
dec
out
add
ret
fnstenv
mov
movsl
jg
and
cmove
mov
xchg
hlt
xchg
sbb
cmpsb
scas
js
in
sub
mov
mov
or
ret
pop
loop
test
aam
stos
into
dec
pop
fucom
gs
or
dec
dec
or
add
stos
sub
cmpb
pop
les
cld
je
lds
sub
add
frstpm(287
xor
mov
sub
lods
gs
aaa
repz
cmpsl
in
mov
fdivp
cmp
fists
lock
movsl
jmp
jae
aam
in
ss
jmp
je
or
inc
icebp
leave
call
rcr
push
cmp
sub
leave
mov
flds
test
lock
inc
cmpsl
sbb
into
cmp
or
scas
aad
jl
xchg
xchg
out
xchg
shr
fadds
dec
clc
repz
pop
pop
shlb
popf
fyl2x
int3
xlat
pusha
clc
ret
cltd
insl
inc
inc
fisubrl
aam
out
cmc
xchg
add
mov
push
ljmp
jg
loope
hlt
insl
adc
std
les
add
xchg
test
fadds
lock
cmp
cmpsb
sbb
out
mov
js
lcall
std
xchg
daa
sbb
fwait
sub
xor
add
adc
mov
jle
lods
pop
jns
jmp
fildl
fsts
inc
in
outsb
mov
sub
mov
bound
test
add
xor
xchg
icebp
pop
adc
add
shrl
pop
jl
pop
mov
inc
and
std
inc
fchs
xchg
cmp
adc
das
mov
sbb
in
ret
cli
add
jae
imul
lret
xchg
fbstp
sub
cli
test
jmp
fwait
movsb
les
addb
shl
add
pop
test
jbe
inc
lods
jmpw
cwtl
pop
jae
add
cmp
out
ret
shll
add
mov
cli
sbb
bound
sub
pop
movsb
lds
mov
sbb
pop
loop
leave
xchg
mov
and
int
pop
fdivr
testb
push
shll
idivb
arpl
addr16
repz
cmp
aas
std
adc
addl
mov
out
push
lods
inc
fidivl
cli
add
cmp
insb
jno
cmp
daa
xlat
lea
push
lods
icebp
les
test
xor
test
fld
pop
or
mov
daa
rcpps
push
jno
sbb
mov
mov
sbb
fcomps
call
shrb
inc
and
or
cmp
lds
add
sbb
and
lds
and
gs
mov
jns
andl
xchg
les
xchg
sub
sahf
cmp
lret
and
pop
inc
and
negb
cld
fnstcw
rcll
out
inc
mov
xchg
xchg
aad
insl
jge
adc
lods
cmc
add
push
add
mov
ret
adc
popf
je
sbb
movsl
xor
icebp
add
cli
add
sti
out
xor
xor
sub
les
inc
xor
ja
mov
pop
xor
clc
xor
fbld
cli
mov
dec
insb
and
loopne
jns
push
ret
and
mov
and
mov
cmp
mov
add
leave
sbb
adc
sbb
fsts
sti
xchg
imul
cli
pop
out
sti
add
int3
fyl2xp1
mov
fmul
popf
cmc
movsb
jmp
addr16
mov
nop
sti
imul
mov
lds
cmpsb
jle
in
std
sbb
gs
mov
int
lahf
push
imul
aaa
nop
fistpll
push
cmp
leave
mov
xor
ja
ss
or
cwtl
fucomp
arpl
mov
dec
test
pop
and
or
outsb
mov
add
fwait
scas
ljmp
inc
test
cmc
divl
fnstcw
add
xchg
outsb
bound
rcrl
xchg
repnz
push
data16
mov
or
jno
cli
jmp
stos
call
mov
popf
xchg
push
mov
insl
out
stc
cmp
in
loopne
mov
inc
ret
sbb
aam
in
mov
mov
mov
fiaddl
sub
out
orl
les
test
out
in
xor
test
push
insl
es
xchg
adc
adc
sub
dec
repz
push
inc
in
lods
stc
out
mov
jae
ret
in
cli
fs
test
mov
pop
out
leave
mov
aad
adc
out
hlt
icebp
cmpsl
dec
mov
les
insb
pushf
in
xchg
mov
mov
adc
dec
repnz
cmp
fs
fimull
sbb
hlt
jne
dec
push
mov
fisttpll
inc
loopne
sub
negb
sti
mov
cmp
sbb
adc
aaa
xlat
out
leave
cltd
xor
mov
or
add
jbe
pop
xchg
stc
lret
mov
xorb
mov
xchg
mov
arpl
les
jge
mov
push
and
fsts
xchg
cmpsl
out
notb
in
pusha
push
push
ljmp
std
or
dec
jl
in
in
cmp
fistps
push
xchg
out
ja
loop
pop
dec
cltd
adc
xchg
xor
cmp
cwtl
fildll
in
ficompl
inc
cmc
dec
out
stos
call
mov
sbb
nop
pop
in
push
push
jne
xchg
rcll
pop
iret
out
xlat
ja
ficomps
sti
outsl
dec
jne
rcr
jecxz
push
add
les
in
dec
leave
xchg
mov
fdivl
jmp
aaa
in
das
xchg
sbb
je
inc
lea
roll
int
mov
and
imul
dec
jmp
loopne
scas
std
pop
loope
cmp
fcmovb
xlat
out
push
add
inc
lds
das
pop
push
mov
iret
mov
mov
mov
and
gs
push
mov
adc
mov
adc
out
mov
mov
and
icebp
hlt
test
out
mov
call
mov
xor
hlt
out
cmp
cli
adc
in
lret
fnstcw
jge
outsb
sub
div
in
xor
outsb
hlt
mov
and
sarb
popa
scas
jl
fs
inc
ljmp
mov
add
les
xor
pop
cmp
hlt
rorb
mov
jmp
jo
mov
shrb
std
cld
mov
sub
sub
fistps
icebp
scas
xor
lcall
cmp
or
mov
jo
mov
cmpsb
les
lods
adc
test
cmpsl
and
outsb
les
adc
out
mov
lret
jle
push
in
test
cwtl
jae
shl
mov
mov
in
mov
loope
mov
and
mov
fs
and
imul
loop
dec
inc
jne
jle
xchg
dec
ret
sti
sbb
fstl
jmp
roll
xchg
loop
in
lcall
cmp
fcoml
xchg
push
in
stc
lret
shll
xchg
xlat
addr16
les
nop
mov
les
push
jae
jmp
cmp
inc
in
dec
mov
int
dec
enter
data16
add
adc
repnz
in
mov
mov
cmp
mov
or
inc
hlt
xor
in
jo
cwtl
cmp
test
dec
cli
inc
xlat
jmp
pop
sub
push
fcompp
out
nop
adc
out
sti
or
into
jmp
int3
das
xor
loope
sbb
pop
ljmp
stos
ja
popf
mov
rolb
sbb
lcall
sbb
lahf
pop
test
lcall
ret
push
fnstcw
out
cs
push
test
stc
cltd
ret
inc
jnp
in
xchg
gs
fisttps
daa
sbb
xlat
mov
outsl
mov
movsl
imul
push
nop
iret
and
cld
jl
mov
push
in
jmp
ret
fmull
test
jcxz
js
out
pop
out
std
loopne
or
rclb
loopne
push
in
mov
lods
push
mov
or
cmc
and
les
jno
xchg
test
fiadds
cmp
cwtl
dec
in
adc
subl
pop
int
lds
mov
scas
fldcw
or
mov
fs
jmp
push
cmpsb
inc
test
jge
inc
xor
jg
pop
lock
mov
or
popf
lods
cmpsb
in
sub
xor
xor
movsb
outsb
loope
xchg
push
hlt
sub
andl
mov
cmpsl
negl
das
repnz
jns
xchg
ss
mov
or
loope
fcmovu
pusha
popf
fmuls
mov
ds
add
loop
rcrb
mov
icebp
negb
hlt
jp
addr16
dec
fisubl
divb
cmpsb
ljmp
mov
in
mov
jbe
out
hlt
xchg
xor
push
cmpsl
xor
ds
andb
xchg
sub
xor
pop
lcall
mov
fidivs
add
lock
xor
pusha
sbb
cmpsl
int
loop
les
jb
mov
xchg
lret
sarb
fmul
xchg
xchg
dec
dec
das
dec
fcmovu
jp
inc
mov
add
cmp
lods
jmp
imul
ljmp
inc
mov
test
stc
pushl
add
ret
movsb
add
push
outsl
ret
xor
fsubrs
jl
scas
loopne
inc
faddp
stos
push
loopne
out
int3
adc
cmp
shl
sahf
xor
mov
pop
push
add
fucomip
mov
shl
dec
xorl
shl
push
jmp
push
imul
cs
int
dec
loope
push
mov
les
fimull
loope
rcr
testl
bnd
push
ljmp
rorl
mov
shrb
mov
ret
in
push
sti
mov
fyl2xp1
dec
int
jne
xchg
insl
xor
xchg
in
push
add
popf
mov
fs
ljmp
inc
and
fnstsw
por
and
enter
fnstcw
push
stos
hlt
je
int
push
aad
mov
push
add
mov
jnp
lock
cmpsl
sahf
movsb
gs
pop
dec
xchg
aas
in
xlat
imul
inc
clc
aad
xchg
xlat
in
les
pushf
es
lods
adc
jg
hlt
push
add
std
add
jns
sarb
cmp
and
hlt
lods
and
push
stos
dec
iret
daa
sbb
aad
xchg
loopne
sub
jb
leave
jne
fiaddl
in
andl
out
ret
lret
daa
dec
cmp
cmp
repz
pop
and
fwait
and
cs
mov
enter
push
pop
push
mov
cmc
or
mul
aam
int
hlt
mov
and
insb
push
arpl
repnz
cld
mov
test
loope
in
sub
shll
insb
jecxz
jmp
cmc
sub
mov
sub
movsl
lds
jmp
hlt
inc
pop
divl
and
les
aas
or
fnstenv
pop
add
fbld
mov
cwtl
dec
inc
ljmp
dec
scas
inc
andb
mov
aas
les
fidivrs
sub
outsl
sbb
cmp
test
out
iret
inc
cli
add
inc
mov
and
inc
shll
cmp
iret
out
loop
in
sub
cli
add
inc
loopne
and
lds
in
and
stos
jmp
jmp
mov
cmp
jne
push
loop
mov
in
xor
mov
xchg
mov
loope
xor
iret
lret
fldenv
stc
mov
mov
and
xchg
insl
xor
mov
xor
jle
ljmp
or
hlt
fildll
cmp
or
in
ljmp
dec
sbb
sbb
lock
jne
ja
out
mov
jno
cld
xlat
fnstenv
jbe
or
and
jnp
fsubrl
in
push
mov
mov
push
pop
pop
mov
sbb
in
or
daa
hlt
dec
add
xlat
lret
pusha
add
and
sbb
xor
inc
sarl
jmp
in
push
int3
inc
push
sub
inc
and
movsb
mov
movl
sub
sbb
jmp
cmp
hlt
xor
inc
ss
xchg
je
inc
iret
pop
fldcw
cmp
jns
subb
inc
aas
sub
cmp
ret
adc
xchg
hlt
mov
xchg
or
mov
xor
fnstenv
popa
addb
test
imul
sbb
mov
xchg
lahf
pop
mov
hlt
push
and
enter
aad
xlat
fldenv
incl
jae
push
in
out
add
or
xlat
insb
mov
shrl
fstpt
add
pop
rcll
or
psrlq
and
or
into
shr
int
movsb
mov
xor
lods
movsl
xchg
mov
frstor
xchg
or
leave
in
xchg
fmul
hlt
add
mov
sbb
lods
and
push
aad
lods
fnstcw
lds
mov
jp
fwait
pop
fs
dec
cs
fldenv
notb
xchg
aad
inc
shll
mov
or
inc
pop
arpl
pop
in
das
fbstp
mov
adc
mov
jae
jg
mov
ret
mov
lock
sub
sbbl
jbe
imul
adc
xchg
mov
or
fsts
lock
cmp
dec
mov
loop
in
mov
add
les
push
pop
out
fldcw
sbb
push
mov
mov
into
xor
xor
sbb
xchg
add
or
bound
sahf
lret
in
rcll
mov
ds
dec
popf
inc
jl
jno
dec
stc
add
loop
dec
cltd
and
leave
jmp
ljmp
mov
fnsave
mov
sub
inc
sbb
in
xchg
pop
push
andl
xor
bnd
les
mov
shl
xor
fnstcw
adc
jno
seto
mov
lock
inc
jns
pop
fldcw
das
and
cmp
stc
or
fnstcw
xchg
sub
in
sti
mov
xchg
and
mov
int
and
out
in
mov
dec
lods
shl
pop
mov
xor
jbe
xchg
ljmp
sbb
jl
cmp
les
or
inc
fldpi
mov
add
out
push
stos
cmp
shl
mov
xor
push
jle
jp
pop
mov
inc
xchg
ret
rolb
iret
cmp
dec
test
gs
out
add
out
leave
sub
and
fsts
mov
fwait
pop
ja
icebp
in
call
leave
mov
loope
fdivl
in
xchg
lret
scas
in
in
mov
imull
mov
leave
mov
ret
jb
push
jb
ljmp
xor
jmp
out
out
leave
xlat
inc
adc
in
les
xchg
shlb
sub
movsb
push
xchg
shll
fists
movb
and
fnstenv
in
stc
call
stos
jp
inc
push
fsubs
and
mov
adc
push
out
pop
inc
out
mov
fsubrs
insl
lahf
and
cmp
stos
xor
ljmp
fnstcw
aad
scas
test
inc
in
xchg
pop
cmc
arpl
cmp
or
mov
scas
in
add
movsl
hlt
je
add
lret
popf
sti
cltd
cltd
jns
pop
fxch
add
mov
mov
lods
aam
in
jl
cs
mov
sbb
adc
add
filds
hlt
ljmp
movsb
and
pop
push
fdivs
hlt
int3
out
fnstenv
xlat
mov
lahf
sarl
lret
mull
push
xor
cwtl
cltd
or
mov
outsl
popa
adc
jmp
loop
sub
adc
addr16
mov
pop
enter
jmp
out
mov
xor
pop
fsub
in
jmp
ja
mov
gs
sub
xchg
fistps
mov
mov
inc
pop
and
fadds
out
and
je
lods
cltd
or
sbb
les
adc
sub
bound
fnstcw
aad
add
mov
add
hlt
ds
nop
jb
hlt
repnz
dec
mov
push
and
adc
dec
hlt
imul
jo
fisubl
cmp
in
fcmovnb
fadd
xor
sahf
adc
retw
dec
out
adc
mov
repz
ljmp
lods
bnd
out
stos
or
dec
fcoml
xchg
ja
mov
push
scas
movsl
out
cmp
rolb
xor
ficompl
xchg
pop
cmp
cs
adc
pop
dec
pop
mov
in
ret
dec
fnstenv
xor
fmul
xor
mov
jnp
fbstp
cmp
ss
enter
ret
gs
pop
xor
xchg
divb
cmp
inc
pop
movsl
mov
lret
hlt
je
push
xchg
mov
popf
xchg
repz
in
jl
out
mov
les
sub
sti
cld
ror
les
cmp
idivb
pop
inc
bound
fsubp
je
jl
add
xchg
enter
sbb
dec
jmp
push
add
or
sbb
add
mov
ret
sbb
frndint
dec
movsl
mov
lahf
insb
sub
sbbl
out
shl
in
cs
sub
les
data16
cmp
cli
mov
rol
hlt
inc
hlt
mov
jo
cltd
in
loopne
cmp
bound
int3
movsb
rol
hlt
mov
xchg
push
shlb
lret
out
lds
xchg
cmp
mov
hlt
insl
cwtl
inc
stos
lods
mov
in
fdivs
mov
sbb
lods
test
fnsave
test
jns
mov
sbb
xchg
hlt
or
out
mov
xor
fcmovu
cmp
push
jns
xchg
stos
repnz
in
movsb
ret
jg
lods
push
cmp
adc
js
sub
popa
hlt
mov
lea
imul
aas
test
xor
jnp
xchg
xlat
cmpsb
mov
and
jp
test
cmp
lcall
adc
out
decb
in
adc
movsl
mov
inc
hlt
frstor
jle
leave
jl
pop
fidivl
imul
addr16
out
or
aad
ds
stos
in
test
sti
mov
dec
push
push
and
test
les
xor
and
add
cmc
xlat
adc
cmpsl
aam
rcll
mov
hlt
inc
xlat
call
inc
mov
mov
icebp
pop
push
xlat
iret
repnz
mov
stos
loope
in
fs
shl
mov
inc
xor
stc
fcos
out
cmpsl
dec
cmpsb
fstps
adc
xlat
in
jl
push
sti
int
shr
aaa
cmc
adc
arpl
ret
inc
xchg
cmc
fisubl
jne
ss
jae
dec
test
in
test
int
mov
adc
dec
in
inc
mov
hlt
mov
and
cmp
mov
rcrb
movsl
dec
push
insl
hlt
sub
les
push
mov
and
sahf
std
les
decb
ret
fldenv
orb
repnz
fs
fldcw
ret
mov
in
cmp
add
pop
jecxz
mov
dec
cmp
in
pop
vhsubps
sub
pop
push
and
fnstenv
rcrl
popf
stc
cwtl
les
xchg
lods
xchg
dec
push
sbb
pushf
sahf
int3
and
cmc
bound
in
rorl
cmpsl
cmp
ljmp
push
and
cwtl
enter
les
imul
test
dec
pop
out
scas
orw
or
cmp
aaa
ja
adc
insb
in
mov
push
mov
jo
add
inc
pop
call
pop
test
aam
fstpt
adc
int3
and
mov
out
or
lds
shlb
daa
fwait
shrl
cmc
je
out
inc
mov
push
int3
mov
nop
cli
cwtl
les
insb
pop
pop
and
lds
nop
movsb
dec
out
aam
stos
movsb
mov
sub
push
pop
jecxz
pushf
and
into
popf
out
aas
cli
sub
xchg
or
adc
mov
and
int3
mov
xchg
dec
loop
shlb
mov
mov
cld
sbb
loop
aas
push
insb
mov
xchg
jns
imul
nop
pusha
jp
lock
jbe
in
jo
stos
mov
dec
insb
mov
repz
imul
hlt
or
imul
fbstp
nop
xchg
xchg
sub
fsubl
subb
and
pop
daa
in
bound
repnz
adc
push
clc
dec
mov
gs
imul
out
les
sub
and
jno
xor
clc
pop
cmp
fisubrl
test
cmpsb
push
inc
je
in
mov
ja
stos
fld1
ljmp
fs
fcoms
mov
xchg
xchg
xchg
int3
in
lock
inc
aas
in
xor
sbb
stos
lods
in
jnp
mov
addl
xchg
adc
push
adc
mov
ret
inc
jnp
mov
movsl
xor
std
testb
shl
loop
clc
repz
inc
aam
cld
cltd
out
cmpsl
ret
clc
mov
loop
jge
mov
lock
push
repz
dec
data16
fldenv
addb
fimull
jp
adc
loop
test
out
cmc
push
cltd
in
sbb
pop
repz
xor
daa
push
test
call
sub
lahf
in
xor
mov
ja
in
or
out
xchg
jp
sub
in
enter
mov
clc
in
sbb
lock
iret
lcall
cmp
fisubrl
jae
mov
mov
adc
hlt
test
mov
fcmovne
inc
leave
sbb
push
in
mov
cltd
outsb
movsb
stos
idivl
lret
sbb
jmp
mov
hlt
push
roll
pminsw
mov
add
fwait
out
sub
fisttpl
push
hlt
push
xchg
rol
inc
cmp
mov
les
dec
out
jmp
aad
or
cmpsb
loope
sub
fdivrl
xlat
mov
scas
in
sub
repnz
in
mov
popa
pop
ja
fnstenv
testl
in
test
hlt
mov
mov
repnz
xor
mov
xlat
jno
out
aam
adc
add
loopne
jecxz
sbb
lret
ljmp
orb
das
mov
fnstenv
jne
lea
iret
stc
in
push
cmp
fcmovu
ret
mov
push
scas
rorl
pop
fimull
jle
sarb
mov
cmpsl
lods
dec
add
fcompl
ret
flds
lea
mov
ja
clc
js
je
dec
pop
daa
shrb
aas
fwait
add
jae
mov
xchg
int
pmulhw
mov
pcmpeqw
into
les
mov
fsubrs
fldenv
lahf
lods
lret
inc
repz
out
in
mov
pusha
mov
cmpsl
les
mov
or
xchg
sbb
pop
cmc
lods
lahf
pop
movsl
scas
les
mov
movsb
xor
push
shl
hlt
dec
in
and
les
push
jb
andl
das
xchg
scas
or
fnstcw
int
testl
dec
cwtl
aas
mov
or
fists
lret
cmc
aad
pushf
hlt
movsb
push
pop
popa
push
cs
push
pmaxsw
push
mov
jns
insl
movsl
stos
dec
xchg
pop
add
std
lock
cmp
or
out
loope
es
idivl
push
loop
sbb
lods
jbe
and
fadds
jg
and
or
inc
movsb
pop
loopne
int3
and
fstps
cmpsb
out
mov
rolb
inc
pop
mov
addr16
aaa
daa
rol
in
stos
push
std
fdivrs
sub
clc
push
std
adc
sbb
dec
and
call
adc
dec
xor
fcomip
adc
icebp
cmp
push
loopne
imul
xchg
sbb
xchg
in
mov
in
mov
dec
or
test
jp
and
xor
outsb
inc
int
addr16
pop
adc
in
add
cld
add
jmp
adc
adc
jne
lods
adc
xchg
addr16
data16
addr16
xchg
mov
cmpsl
mov
or
adc
les
ret
lods
jg
and
andb
xor
sub
and
in
mov
xchg
sbb
push
lds
add
test
mov
aad
xchg
gs
into
sbb
push
bound
push
les
jae
pop
insl
imul
adc
push
or
pop
pop
push
lods
test
shll
cmp
icebp
push
repz
out
inc
enter
in
imul
hlt
sub
loope
aaa
jl
mov
mov
fldenv
jge
adc
sbb
in
cmp
inc
cmp
xor
cmc
aaa
out
aaa
sbb
xchg
mov
jle
je
sub
ror
popa
push
fistpl
jmp
xchg
pop
fnstcw
cltd
push
addb
fistps
add
fsubr
mov
cltd
outsb
xchg
and
ret
ret
mov
insl
addr16
sbb
aad
pop
insl
lret
mov
add
jl
lock
stos
syscall
xor
outsb
gs
push
test
cmpsb
jmp
or
push
or
filds
out
or
sub
xchg
movsl
sbb
push
push
inc
or
loopne
rcr
cmc
push
out
mov
sub
data16
in
push
in
inc
push
dec
push
into
push
enter
jmp
lods
mov
inc
idiv
mov
mov
imul
ffree
out
loop
cmc
ja
and
sbb
into
or
cld
adc
jmp
int3
into
lods
sbb
in
hlt
sbb
clc
pop
stos
les
sbb
jae
jbe
mulb
jge
loop
sub
pop
hlt
adc
inc
or
insb
inc
cmpsl
push
les
aas
pop
xor
hlt
inc
inc
mov
test
dec
dec
fs
test
subb
cmpsl
ja
and
ret
notb
xchg
notl
jg
mov
mov
rol
fwait
call
mov
push
into
dec
sahf
f2xm1
les
rcl
pop
sarb
andl
fnstenv
sub
mov
into
in
addb
mov
loopne
pop
js
stos
mov
int
adc
subb
mov
bound
mov
xchg
sub
testl
fsubs
add
in
add
mov
ja
dec
inc
or
lds
pop
or
rorb
test
ret
cmp
jne
rcpps
mov
pop
call
push
ss
mov
cmc
mov
popf
ljmp
rolb
fldenv
shrb
and
xchg
inc
mov
repz
cwtl
in
fldt
data16
push
fimull
pop
ret
and
pushf
mov
mov
rorb
mov
ret
xor
mov
in
pop
stos
pop
rclb
adc
or
fldcw
sbbl
mov
pop
cmpsb
cmp
or
dec
xchg
icebp
mov
les
xlat
xor
cmc
mov
mov
sbb
test
clc
sub
dec
out
int3
fldenv
ret
cld
xchg
push
mov
out
fwait
in
adc
out
hlt
test
push
call
lret
sub
mov
pop
mov
js
jl
shr
mov
xchg
xchg
test
or
loope
rcr
in
rclb
popf
and
out
adc
in
inc
test
out
pushf
add
call
xchg
icebp
fdivl
push
or
std
mov
in
push
divl
mov
in
cmp
lret
cs
in
or
mov
hlt
and
and
add
xchg
xor
aaa
loop
out
push
int
inc
mov
mov
sahf
xor
loope
lahf
mov
adcb
xchg
or
stos
adc
push
sbb
sbb
sbb
shll
push
out
repnz
fs
les
iret
aam
adc
mov
in
fcomp
jb
sbb
repnz
leave
addr16
cmp
pushf
add
cli
pop
and
in
dec
mov
movsb
xchg
fmull
enter
inc
mov
mov
fisubl
sub
jp
ljmp
addl
jmp
rorb
mov
dec
sbb
jmp
mov
adc
xchg
jecxz
pop
int
jecxz
fstp
popa
std
inc
xchg
sbb
fcomp
pusha
lahf
pop
call
mov
loopne
dec
mov
mov
les
ljmp
repz
lods
in
jbe
fnstenv
js
cmp
cltd
cmpsl
dec
xchg
mov
xchg
into
gs
int
fstl
xor
fcmovnbe
aas
or
adc
xlat
aas
test
fistpl
mov
andl
xor
sub
ret
lods
push
divl
push
fbstp
adc
jl
lock
orl
std
fldl2t
les
adc
cmp
aam
jnp
adc
sbb
ss
add
not
or
mov
sbb
adc
inc
and
dec
lock
sub
xlat
fidivrs
jo
sub
mov
cmp
repz
int
insb
cmp
in
aam
dec
and
pop
or
fldcw
je
fsubs
clc
xor
jge
rcr
jmp
xor
popl
test
or
sahf
nop
fnstenv
fidivs
clc
je
lea
adc
int3
dec
dec
sbb
lods
adc
pop
shl
mov
mov
pop
mov
les
cmp
sbb
xchg
mov
ds
or
js
bnd
test
icebp
mov
aaa
add
mov
cld
in
xchg
push
les
cmp
xchg
push
fisubl
push
pop
sub
in
lds
shl
xchg
mov
mov
ja
adc
or
mov
ret
roll
dec
nop
push
les
xchg
ret
outsl
xchg
lds
cltd
cli
sub
fdivs
and
mov
xchg
enter
test
pop
in
stc
addl
mov
jle
mov
jns
rorl
mov
dec
out
stc
push
push
je
icebp
jecxz
hlt
push
sbb
incl
incb
lock
out
fldenv
aam
dec
int
in
cmp
hlt
add
mov
push
les
rol
mov
out
in
stos
outsb
mov
push
mov
fs
out
repz
mov
repnz
imul
inc
or
xor
pop
in
add
mov
or
fdivl
push
inc
fimull
ficomps
xchg
arpl
xor
leave
jecxz
ret
add
dec
rorb
jne
pop
mov
mov
not
movsb
int3
test
adc
test
fwait
mov
jecxz
repz
lods
aad
cwtl
jns
mov
cmp
and
mov
test
mov
sub
lock
cli
aad
call
or
test
inc
iret
add
in
xchg
adc
hlt
daa
popa
xor
leave
fstpl
xor
jg
adc
push
pop
and
je
cmp
test
pop
in
mov
pop
in
in
shll
xor
loope
inc
decb
inc
mov
cmpsl
hlt
ret
in
push
mov
les
cmc
dec
enter
fldenv
dec
test
in
push
jns
hlt
mov
scas
push
les
icebp
sahf
add
aad
lret
push
out
cld
dec
adc
mov
dec
mov
pop
sbb
inc
add
jmp
nop
in
xlat
sbb
shll
sti
jmp
cld
scas
add
leave
sub
mov
jnp
pop
data16
imul
xor
into
shlb
loopne
push
popa
jnp
and
inc
movsb
xor
in
push
push
sub
sbb
hlt
jo
out
sub
loope
cld
mov
mov
adc
cmp
sbb
xchg
fadd
xor
or
data16
pop
ja
es
dec
cmp
movsl
gs
in
xchg
inc
mov
hlt
int3
sbb
ja
mov
add
cwtl
ds
in
imul
shlb
add
sbb
ss
mov
loop
add
xchg
push
mov
in
hlt
inc
add
test
adc
shl
and
fchs
sbb
into
scas
push
cli
test
mov
jne
loope
push
mov
inc
dec
repz
mov
hlt
push
aad
ljmp
and
dec
add
cmc
je
mov
dec
pushf
sbb
cltd
adc
in
mov
lods
js
in
je
call
hlt
jecxz
xor
jne
mov
add
mov
int
rcl
add
cwtl
push
mov
push
inc
mov
mov
pushf
mov
sbb
adc
imul
cmp
pextrw
les
out
das
sub
fimull
mov
stc
loope
scas
inc
mov
xchg
or
jmp
enter
mov
dec
loop
ja
mov
out
xchg
mov
faddl
movsl
aam
mov
popa
test
mov
add
std
sub
cltd
int
ljmp
sbb
pop
add
or
inc
rcrl
sbb
xchg
dec
xor
fwait
mov
repnz
sbb
rclb
jmp
jb
inc
dec
lock
imul
scas
insl
mov
pop
mov
int
enter
int
into
jle
lds
sub
into
sahf
push
int
daa
cwtl
cmpsb
dec
repnz
xor
in
ja
test
aaa
lcall
xchg
inc
sbb
movsb
cmpsb
mov
in
adc
jo
fsubl
je
cmp
int
cmp
cmc
fnstcw
add
shl
int3
out
shrl
add
cld
stos
jbe
add
push
aam
in
clc
aad
inc
ss
leave
fwait
mov
pusha
insl
scas
scas
out
jmp
push
lock
fucom
pop
mov
mov
loop
xchg
fcmovnu
pop
lods
aaa
mov
adc
pop
sbb
mov
jmp
aas
mov
repz
hlt
xlat
sub
cld
fwait
ds
adc
leave
pop
mov
mov
lods
repz
lds
lea
loope
or
je
loope
fwait
insb
loopne
cmp
push
mov
in
fmull
hlt
insl
fists
lret
mov
mov
push
xchg
test
pop
cmc
in
int3
mov
cmc
in
add
cltd
scas
xchg
cmpsb
arpl
int3
roll
popf
add
cmp
enter
xor
shlb
inc
or
icebp
aam
xor
xchg
int3
cmpsb
pop
jmp
xchg
les
jmp
fidivs
mov
shlb
dec
mov
jae
or
mov
repz
out
ja
gs
in
inc
sbb
imulb
cmp
fwait
ljmp
call
sbb
cld
pxor
shl
fstps
dec
call
and
lret
xor
std
mov
mull
ret
push
mov
cwtl
xor
mulb
xor
add
lds
call
ss
hlt
sub
xchg
push
pusha
in
lods
stc
test
fiaddl
push
pop
push
ret
leave
mov
mov
xchg
lods
xchg
in
je
pushf
test
stc
int
ror
rcrb
sub
les
call
fdivs
xor
cli
push
fwait
clc
insl
sub
in
cs
fsubrs
cmp
push
pop
dec
pop
loope
add
xor
bound
inc
mov
les
push
clc
dec
inc
js
shrb
jg
jle
push
insl
gs
cli
dec
push
or
movsl
lea
inc
or
stc
mov
inc
dec
int3
in
cmpsl
mov
testb
xor
adc
and
clc
cltd
popa
push
pop
les
lock
rcll
les
jle
dec
sbb
rcr
or
int
lcall
sbb
xlat
stc
cli
or
lcall
push
arpl
out
cmp
cmp
ss
ror
loop
hlt
xor
jns
cmp
hlt
addb
mov
cmp
scas
sub
es
popa
jmp
in
cmc
fucomip
in
pop
dec
std
mov
flds
dec
pop
pop
mov
sbb
in
xchg
xchg
mov
sub
xchg
imul
scas
imul
fsubrl
repz
xchg
popf
in
add
icebp
lea
in
cmpb
ljmp
fld
xor
pop
aad
mov
lock
adc
mov
flds
fidivs
mov
mov
hlt
pop
jg
pop
inc
test
and
pop
outsl
xchg
sbb
pop
and
xor
mov
mov
ljmp
flds
dec
mov
push
test
ljmp
ljmp
fisttpl
mov
xchg
movsb
jnp
add
pop
jge
in
sahf
aam
in
or
cltd
mov
movsb
clc
cmp
imul
mov
iret
hlt
and
dec
aad
cmc
add
cmc
cltd
mov
stos
mov
xchg
and
or
cmp
cltd
jno
mov
mov
fcmovnu
incl
xchg
adc
addr16
sahf
mov
mov
in
fmul
cmp
shlb
sbb
out
cmc
jmp
in
fcmovb
dec
ret
xchg
fimuls
or
cmp
xor
xor
xor
or
cmp
adc
pop
jnp
cmp
jecxz
test
rorl
les
arpl
cmp
sub
sbb
scas
outsl
pop
int
rcr
xchg
xorl
jle
inc
loop
loope
dec
fldcw
roll
imul
and
fldcw
in
ss
sti
push
cmp
mov
cmc
loop
xor
mov
rol
leave
loope
inc
cmp
sub
in
stc
lods
fdiv
cmp
rol
out
jmp
xlat
jae
or
pop
lret
roll
test
je
sbb
add
aam
jne
int
jge
xchg
ds
fiadds
inc
xchg
fisttpll
out
fcmovnb
xchg
clc
inc
subl
sbb
cmp
sbb
sbb
cmp
jge
ds
xchg
iret
cmp
fmulp
ret
and
inc
das
insb
sub
xchg
cmp
push
lods
notl
xor
or
and
stos
add
pop
in
in
mov
sbb
test
int3
or
dec
pop
sub
aad
repnz
in
xlat
inc
hlt
repz
lahf
outsb
mov
sti
fs
sti
pop
or
sbb
sti
and
pop
cmp
cli
push
shl
inc
inc
and
sub
mov
mov
mov
loope
dec
fidivrs
push
in
fiaddl
mov
nop
xchg
sbb
jb
push
out
jbe
test
jl
nop
fnstenv
add
pop
and
das
hlt
jl
cwtl
xor
adc
je
out
jg
dec
cli
mov
sbb
mov
les
jmp
mull
cmc
cmp
push
movsb
jp
scas
dec
lds
int
lods
in
das
popa
pop
and
fldenv
add
stos
lret
adc
dec
add
push
dec
hlt
xchg
mov
data16
test
push
rep
movsl
xchg
mov
in
xchg
call
mov
test
in
sbb
fstps
js
xchg
sbb
jecxz
xor
or
jge
jl
xchg
push
pushw
inc
scas
mov
les
lcall
test
fistl
mull
in
ret
mov
hlt
faddp
div
icebp
mov
and
jle
in
inc
mov
popf
add
push
in
mov
movsl
cmpb
clc
and
xlat
and
fadds
test
xor
aam
jge
out
nop
xor
aam
fsubrs
mov
cmp
jbe
dec
jmp
cmp
jne
scas
pop
hlt
cmp
scas
push
mov
leave
sbb
leave
ds
adc
push
lea
ret
lcall
popa
mov
cmc
ljmp
cld
jnp
xor
lret
in
cmc
ljmp
cmp
pusha
lods
pop
mov
ja
fstl
add
in
pop
and
inc
xor
mov
in
out
jns
cmpsb
int3
outsl
pop
cmp
aaa
xor
cwtl
test
fistl
mov
xchg
aas
icebp
xchg
fiadds
xchg
push
es
mov
cmc
xchg
jmp
push
repz
sub
xchg
ja
jl
jecxz
js
scas
mov
pop
in
pusha
dec
shl
pop
jmp
aas
xor
out
pop
xor
add
hlt
rorb
hlt
push
jnp
adc
cmpsb
mov
hlt
aad
push
or
mov
cmpsl
xchg
pop
inc
xor
loop
mov
rorl
or
test
or
push
mov
jae
xchg
xor
dec
ret
xlat
pop
adc
and
mov
in
sub
mov
loop
ficomps
in
gs
mov
sbb
test
adc
je
jb
pushf
xchg
scas
lcall
fildll
mov
gs
test
push
push
sub
hlt
lods
push
lahf
imul
je
popa
and
lods
pop
pop
imul
push
fisttpll
out
outsl
mov
add
fsubl
cmc
mov
pop
and
clc
popf
into
sub
popa
mov
dec
je
add
clc
hlt
sbb
js
es
mov
test
addr16
popa
arpl
cltd
mov
jo
fwait
testl
inc
cs
aad
adc
out
gs
fmul
jle
cltd
in
mov
pushf
mov
inc
stos
lahf
cmpsl
lahf
es
addl
pop
xor
call
mov
jne
mov
or
scas
xor
fstps
out
stc
push
inc
mull
lret
rorb
add
inc
add
mov
hlt
test
leave
imul
pop
and
stos
push
test
addl
cmp
dec
dec
fs
popa
dec
mov
jl
insl
in
xchg
xor
lods
insb
jp
clc
jge
jne
out
pusha
xor
imul
test
test
fsts
push
and
ljmp
rcrl
and
xlat
jp
frstor
inc
mov
cmp
add
in
pop
mov
sbb
cmpsb
shll
jp
xor
out
aad
icebp
jecxz
cs
les
cld
movsb
ljmp
push
clc
subl
aaa
dec
push
mov
lods
out
inc
pop
cmc
fistps
jns
int3
insb
pop
jne
mov
adc
pop
mov
cmp
push
leave
ficompl
and
mov
or
rcr
scas
adc
imul
rol
sahf
xchg
inc
mov
and
in
mov
les
sbb
flds
push
imul
call
les
and
push
and
pop
pop
xor
test
stc
clc
jne
sbbl
ljmp
mov
xor
leave
insb
add
or
mov
pushf
out
sub
add
ret
in
inc
loopne
inc
pop
and
fpatan
add
inc
mov
fldenv
adcb
cltd
jae
pop
dec
mov
popa
das
in
loopne
xor
sub
lahf
hlt
in
and
cmpsb
inc
testl
fcoml
cmp
cmovle
push
pusha
pop
inc
cld
pop
xor
push
mov
in
cmp
scas
movsb
jge
les
scas
jle
jecxz
sbb
push
enter
push
pop
into
jbe
or
xor
gs
sbb
in
adc
lock
or
sbb
stos
fidivl
std
mov
xor
mov
out
fcmovb
xor
out
cmp
hlt
jne
sub
jmp
shl
int
mov
mov
jmp
add
or
ret
xchg
jnp
xlat
lret
cmc
mov
add
shlb
sub
and
in
push
lods
xchg
sbb
jmp
sti
inc
in
js
lret
lret
cs
mov
jns
jmp
mov
movsl
sarb
loope
test
xchg
xchg
adc
sbbl
scas
in
insb
imul
scas
aad
sbb
into
cmp
pushf
sahf
hlt
cmp
cs
fcompl
cld
fistpl
in
hlt
loop
sub
mov
pop
cmp
flds
pop
mov
push
fmuls
cmp
xor
dec
dec
mov
lock
sbb
test
cmc
pop
cwtl
jmp
fsubrl
xchg
mov
mov
lock
movsb
in
out
lret
fdivs
push
cmp
sub
testl
rol
cld
cs
or
fadds
and
push
leave
xchg
fisubl
mov
cltd
bound
shr
in
orl
repz
aad
out
lret
fcomip
cli
xchg
test
or
out
mov
mov
stc
std
mov
fwait
xchg
fcmovb
cwtl
sbb
jae
test
cs
xor
clc
arpl
repz
jmp
stos
jno
roll
cmc
xor
shr
in
xchg
xchg
mull
dec
pop
shl
cwtl
bound
lahf
sub
jmp
fildl
xchg
dec
lods
push
dec
lret
icebp
mov
jb
ja
cmp
les
cmpb
jg
stc
stos
mov
mov
jmp
and
sub
adc
jecxz
scas
hlt
loope
js
mov
and
loop
push
sub
pop
daa
mov
sbb
lods
ret
insb
shl
add
outsl
lock
pop
fisttpl
pop
adc
les
out
nop
stos
call
loopne
leave
push
adc
aad
imul
xchg
push
push
pop
pop
hlt
test
cmp
ret
andb
and
stc
or
mov
popa
add
call
xor
scas
and
mov
mov
cld
or
stos
cmp
out
dec
push
mov
xchg
popa
clc
les
in
out
ja
fnstenv
jns
icebp
jb
xchg
addr16
push
inc
jae
fnstsw
jl
fstps
fidivrs
adc
xchg
fdivl
ja
xor
addb
mov
jnp
mov
popl
and
add
fimuls
arpl
ficomps
cmp
cwtl
xor
out
inc
cmp
ret
fldz
pusha
fs
jmp
jo
out
hlt
outsb
imul
mov
lret
pop
or
and
ja
fsts
cwtl
lret
es
mov
imul
xor
sbb
testb
fadds
lds
push
arpl
xlat
fstps
inc
cwtl
jg
fidivs
mov
in
pop
adc
jecxz
pop
nop
inc
loopne
dec
pop
push
in
sarb
xchg
fs
fcoms
sbb
divb
xchg
push
pop
cmp
lcall
mov
lret
divl
loop
sbb
xchg
mov
sub
mov
ret
jae
jle
jbe
fimull
xchg
sub
add
mov
sbb
pop
fldcw
je
mov
mov
test
rclb
and
mov
out
out
lds
arpl
pop
in
das
mov
mov
mov
cld
inc
test
mov
and
fistpl
cmp
arpl
cmp
fidivl
add
loopne
stos
push
and
dec
shll
dec
xchg
fyl2x
arpl
pusha
jo
cltd
mov
sub
enter
repnz
outsb
pop
sub
or
lea
gs
in
lock
sar
sub
pop
arpl
push
leave
inc
mov
mov
and
push
inc
loop
mov
sbb
adc
pop
ret
push
xchg
stos
cmp
xchg
add
sti
out
push
jno
inc
pop
je
lea
push
lcall
hlt
hlt
cs
xchg
push
les
rcll
xchg
mov
frstor
sbb
xor
inc
pushf
dec
fidivrs
xchg
adc
xchg
jo
arpl
rcrb
subb
in
xor
rcl
pusha
loopne
imul
scas
ficoml
mov
in
push
jl
dec
jmp
xchg
sub
jnp
loope
rcl
pop
loopne
fsts
sub
xchg
xor
cld
mov
call
ret
push
imul
cmp
cmpsb
dec
shr
mov
mov
cli
sbb
movsl
push
insb
fadd
fcomip
fsubrp
addr16
add
pop
popf
jmp
cld
add
rclb
cmpsb
into
jne
push
cmp
scas
and
cmp
inc
int
adc
shrl
dec
rorb
mov
shrb
push
xor
or
hlt
jmp
loope
and
stc
loope
in
negb
lcall
cli
clc
sbb
xchg
out
jl
mov
and
in
repz
bnd
ficompl
lock
sbb
cmp
dec
add
sbb
inc
fldenv
fs
nop
and
repnz
lret
int3
mov
jb
xchg
xchg
in
xchg
mov
out
test
jmp
pop
or
ds
movsl
out
jns
inc
cwtl
fld
in
imul
les
xchg
mul
or
cmp
ficomps
movsl
and
je
jns
les
daa
fldt
subl
popf
jl
sbb
xchg
sub
dec
and
sbb
xorb
clc
fdivrl
fucomi
inc
pop
int3
add
pop
xor
aam
lods
addr16
pop
test
mov
das
fdivp
mov
lea
pop
jmp
push
iret
jbe
mov
out
arpl
xchg
mov
dec
les
out
out
push
fdivs
pop
xchg
imul
xor
movsb
jno
js
xlat
flds
pop
fldcw
jmp
xor
jge
scas
or
in
xor
hlt
push
xchg
cmp
fnclex
sbb
dec
fs
lock
out
fdivrp
mov
cmp
loopne
test
xlat
scas
cli
sub
mov
mov
dec
add
mov
flds
push
loopne
push
mov
loope
inc
pop
sub
mov
xlat
clc
imul
arpl
sub
das
xlat
call
jne
clc
in
sahf
into
mov
shrb
xor
insb
cli
xor
nop
out
push
jge
pushf
cld
div
xchg
jnp
shll
repnz
aam
sbb
mov
and
rcl
xchg
cltd
cmc
mov
test
jne
mov
xor
lock
loopne
gs
int3
cltd
daa
adc
cmp
xchg
jns
aaa
ficomps
pop
pop
jne
nop
and
push
bound
or
jge
movsl
test
sbb
pop
enter
fisttpll
or
xchg
mov
xor
dec
in
push
aad
or
xor
incl
cmpsb
mov
push
fcomp
cmp
xor
loope
pop
cltd
push
mov
cltd
inc
and
mov
lret
pop
jl
out
ret
not
add
lcall
xor
fcompl
mov
cmc
mov
dec
out
pop
pop
dec
movsb
xor
lock
test
dec
fadds
sahf
gs
and
hlt
pop
xchg
into
rcrb
cmc
out
adc
mov
test
cmp
hlt
lods
std
inc
inc
flds
xor
movsb
inc
stos
adc
mov
in
xlat
enter
mov
fs
loope
in
ja
outsl
push
mov
jns
add
inc
xor
adcb
jmp
fidivrs
xor
out
fadd
jmp
je
loopne
sbb
pop
inc
aaa
bswap
inc
int3
dec
push
pusha
into
in
cld
push
push
cmc
arpl
add
xchg
dec
cwtl
mov
into
call
mov
mov
jp
cmp
ret
popa
sub
stc
fldenv
inc
rcll
lds
mov
mov
mov
jp
or
aam
pop
mov
cmpsl
cmp
pop
stos
dec
pushf
or
and
fcmove
jae
hlt
xor
dec
and
inc
imul
lret
out
xor
int3
clc
stos
sbb
inc
inc
mov
mov
stos
mov
pop
jo
mov
lds
sbb
xor
fiadds
push
mov
in
out
in
sti
adc
adc
enter
sub
sub
inc
hlt
lret
mov
shl
and
jno
sub
aam
in
mov
mov
inc
test
push
sbbb
je
in
mov
xor
and
test
adc
in
int3
jl
jmp
dec
gs
insl
pop
je
icebp
aas
xchg
les
and
test
xor
cmpsl
dec
into
jmp
add
mov
xor
pusha
and
fs
imulb
sub
add
dec
int
inc
into
pop
and
jl
lock
dec
aas
adc
jecxz
ret
inc
xor
mov
leave
sub
fimull
popf
testl
xor
or
or
fldcw
out
cmp
lret
cmp
jnp
sub
pop
mov
inc
movsb
lods
dec
in
add
gs
pusha
leave
pusha
mov
mov
cli
add
or
add
sub
push
push
jle
test
fldcw
sub
addr16
mov
cmc
in
sub
into
mov
sbb
fnop
jmp
in
mov
adc
xchg
fcomi
jo
and
sub
fwait
and
jl
pop
mov
mov
popf
inc
pop
dec
xor
or
enter
xchg
out
mov
push
daa
jns
in
lret
outsl
sahf
hlt
pushf
mov
push
les
test
es
out
mov
jbe
int3
mov
mov
es
pop
sbb
mov
stos
cmpsb
test
and
fcoms
mov
xor
mov
xchg
sbb
fld
lret
gs
ljmp
in
jne
hlt
xorl
sarb
jnp
test
in
inc
mov
clc
xchg
mov
je
cltd
push
loope
mov
add
fs
orb
rclb
pusha
pop
add
in
loope
jb
mov
mov
in
mov
mov
mov
in
incl
push
leave
in
xor
xchg
or
insb
mov
push
push
sahf
int
stos
jl
fdivrs
les
sahf
cli
adc
inc
lds
lods
pop
inc
or
and
xchg
data16
xchg
cltd
fists
xchg
hlt
sub
or
xor
adc
xchg
stos
fnstcw
jg
and
movl
rol
or
loopne
fabs
aam
push
stc
pop
andb
xor
iret
sbbb
rcll
xchg
aad
mov
loopne
inc
in
lcall
jmp
and
hlt
hlt
jae
jns
icebp
add
les
cmc
push
jo
pop
in
das
or
test
hlt
into
pop
xchg
scas
icebp
daa
outsl
inc
cmp
in
or
cli
int3
mov
test
lods
insl
pop
sbb
out
lret
inc
hlt
test
push
rep
jge
lret
xchg
mov
mov
jecxz
xchg
stos
iret
cwtl
daa
loopne
in
sbb
cmp
cli
test
mov
push
lret
mov
sub
mov
daa
lret
imul
leave
in
rol
jg
shl
inc
or
sbb
mov
sub
lret
movsl
fcmovb
jno
and
adc
sbb
inc
in
flds
imul
fisubrl
movsb
in
ret
adc
mov
enter
cmp
or
imul
inc
fnstsw
lds
popf
jns
push
stos
fldenv
decb
pop
adc
leave
fildll
in
xor
lahf
sti
cmp
fcmovnb
push
out
cmp
add
xor
test
mov
in
sarl
add
stos
fsubrl
out
mov
test
or
lret
jge
push
sbb
test
int3
call
hlt
aam
out
fisubs
push
xor
push
and
adc
jne
mov
xchg
in
addl
jmp
pushf
in
inc
fisttpl
cmp
push
sahf
pop
jbe
xchg
lods
aas
movsl
test
add
push
and
sub
xor
add
xchg
fcomi
popa
sbb
cli
ret
icebp
mov
cmp
hlt
movsb
stos
xor
notl
sahf
adcl
sub
addr16
cmp
scas
popf
mov
mov
sar
in
int3
fiaddl
ficoms
sub
addr16
or
out
int
fincstp
lcall
sarb
movb
loope
out
jge
addr16
dec
cld
xor
adcb
dec
ret
mov
and
stos
fcomp
pop
sub
xorl
add
cld
sahf
das
cmp
jmp
lods
sub
mov
es
pop
pop
xchg
repz
sub
out
push
cmc
cltd
or
jbe
daa
mov
add
push
je
mov
cmp
sub
fldenv
loopne
dec
bound
icebp
ss
les
or
xchg
mov
mov
fxch
cmp
les
gs
and
fldenv
lahf
je
lds
inc
add
dec
xlat
fidivrl
jns
sub
xor
int3
jnp
movsb
sbb
hlt
xchg
add
movsl
aad
jl
scas
out
inc
and
out
int3
xchg
mulb
fidivrl
dec
lret
rep
sub
js
js
outsl
mov
hlt
insb
lods
xchg
pop
xchg
popa
mov
lret
test
hlt
pusha
orb
les
sub
dec
pop
add
push
scas
fs
adc
shr
xchg
lock
adc
pop
sub
xor
lret
jns
pop
fbstp
sub
dec
adc
mov
sub
int3
inc
dec
les
testl
mov
jmp
mov
mov
jp
jecxz
cs
xchg
mov
in
out
mov
popa
xor
mov
jno
xor
inc
xchg
or
in
lods
and
call
in
sbb
das
movsl
xlat
in
pop
rcl
sub
dec
test
es
test
push
xchg
pusha
gs
mov
mov
mov
je
jl
xor
repnz
mov
xchg
inc
les
inc
and
fsts
jmp
pop
call
xchg
adc
pop
cmpsb
cli
les
xchg
jno
fcomp
aaa
xor
popa
lock
call
mov
test
stc
jbe
add
sub
mov
cmc
xchg
push
inc
add
push
rcr
xor
in
xlat
mov
loopne
add
jl
les
adc
inc
lock
test
aam
and
or
outsb
out
pop
shl
jl
inc
jecxz
xchg
fsts
sahf
faddl
adc
bound
xor
fldcw
xchg
test
out
jo
test
and
adcl
pop
popf
hlt
add
lea
sarb
es
fiadds
in
xchg
rorl
rorb
mov
hlt
out
movb
pop
fldcw
mov
mov
add
call
pusha
gs
enter
lret
shr
fidivs
fnop
aad
dec
push
mov
pop
repz
mov
sub
mov
adc
mov
or
sub
and
push
mov
pop
scas
test
mov
sbb
pop
repz
push
in
push
pop
int
hlt
adc
jne
insb
push
push
fprem
or
push
jne
sti
fsts
pushf
fwait
loop
fwait
sbb
mov
cli
in
mov
add
insl
push
call
adc
fdivrs
scas
push
shl
xchg
or
cli
pop
sub
movsb
movsl
daa
les
inc
in
shlb
fcmovu
fnsave
shr
push
ss
pop
faddl
dec
fldcw
xchg
inc
cmp
in
out
je
rcr
sub
movsb
lahf
xlat
mov
outsb
jne
sub
inc
mov
pop
sbb
outsl
scas
and
je
push
imul
sub
inc
movsl
js
in
dec
add
jge
dec
fildll
and
and
xor
push
adc
add
cmpsb
adc
fsts
enter
mov
pop
pop
mov
call
test
aam
in
and
and
mov
jne
push
push
shl
xlat
stos
pop
addr16
iret
fcmovb
dec
fdivl
fwait
xlat
xor
mov
popa
in
jb
mov
sbb
sub
xor
ja
addr16
lret
pop
ret
fmuls
lcall
xchg
mov
data16
xor
lret
push
hlt
rcrl
mov
pop
mov
lods
test
and
in
cmc
jmp
jmp
js
add
in
xchg
mov
ljmp
pop
push
das
loope
es
pop
call
leave
jns
fs
inc
movsb
in
dec
sahf
sub
cwtl
hlt
cs
adc
adc
scas
loope
jmp
out
inc
rcrb
fsub
iret
mov
add
mov
pop
add
push
sbb
jne
shr
xchg
add
scas
and
addr16
es
xchg
rolb
dec
call
lret
sub
ret
in
pop
in
loopne
cmp
push
and
dec
sbb
hlt
lods
pop
imul
pop
out
enter
cmc
mov
fistl
jg
gs
sahf
push
fbld
mov
popa
ss
mov
sbb
ljmp
mov
out
decb
testb
xchg
push
int
shlb
add
push
sbb
in
sub
sub
ds
pop
lret
outsb
in
popf
xchg
in
jmp
movntq
xchg
mov
inc
movsl
out
pop
adc
in
lret
jne
hlt
test
idivb
xchg
iret
push
lods
out
mov
pop
cmp
push
xchg
inc
icebp
mov
pop
fisttpll
fsubrs
and
sub
leave
ret
aam
adc
mov
mov
movsb
adc
jmp
push
sbb
out
popa
adc
stos
pop
imul
aam
pop
mov
loopne
mov
out
cmpsl
out
scas
aad
pop
mov
mov
add
mov
lret
jmp
cmc
cmpsb
xchg
arpl
xor
push
fstpl
push
adc
stos
dec
lret
aad
rol
imul
push
test
scas
push
jns,pt
sub
fstps
insl
sbb
xchg
pop
add
mov
aam
mov
outsl
inc
sub
sti
jns
js
addl
inc
call
xchg
in
pop
xchg
stc
std
les
sbb
cmovp
les
adc
into
fstps
dec
mov
inc
repnz
test
adc
hlt
xor
daa
sub
clc
ror
fwait
jne
xchg
jo
or
pushf
sbb
clc
jnp
jo
jl
loope
hlt
nop
rcrb
cli
inc
inc
les
cmp
inc
xor
les
jge
test
aam
xchg
push
popf
push
fcompl
cmp
decl
or
cld
sbb
ret
aas
aad
out
sbb
or
and
dec
mov
mov
sbbb
jge
or
push
filds
fisubl
lret
fs
jae
and
hlt
xchg
jmp
mov
stos
leave
movups
sub
mov
add
in
ljmp
cli
inc
xchg
mov
inc
imul
repz
mov
aam
clc
arpl
xlat
shll
jg
in
xor
inc
stc
pushf
dec
push
mov
nop
callw
inc
in
loopne
sbb
push
scas
cli
and
xchg
data16
jno
inc
dec
fsub
or
adc
leave
loop
aam
in
js
clc
and
aad
jae
ljmp
xor
or
lea
inc
add
hlt
inc
xor
cmp
les
mov
dec
repz
sbb
loop
mov
xlat
loop
hlt
mov
add
addl
call
aaa
das
daa
fwait
and
push
in
or
fsubs
cmp
les
test
mov
lods
dec
fidivs
ljmp
aam
xchg
xchg
sbb
popf
out
shl
cld
std
push
pop
and
les
jecxz
cmp
xchg
loope
cmpl
ds
xchg
les
adc
dec
aaa
fiaddl
pop
jecxz
scas
mov
fdivrs
lret
je
mov
sbb
lods
cmp
dec
js
loopne
pop
in
pop
sar
push
xlat
call
pop
mov
in
mov
inc
xchg
int3
ret
ja
sbb
into
adc
shl
xchg
fsubrs
int3
xor
in
std
popf
jecxz
incb
testb
imull
fnstcw
add
in
mov
cmp
adc
mov
out
decl
movsb
gs
stc
fstl
fiadds
push
movsl
enter
aad
pusha
mov
cli
in
es
mov
or
and
in
rcrb
aam
xor
es
sbb
inc
fistpll
add
mov
call
ret
xor
push
jmp
in
subl
and
mov
insl
insl
adc
lods
mov
mov
mov
mov
out
push
in
mov
jecxz
std
sbb
rep
pop
jns
fidivl
push
mov
std
arpl
mov
dec
scas
pop
int
adc
lret
sbb
ljmp
mov
lods
xlat
ficompl
ja
icebp
mov
pop
xor
leave
mov
pop
mov
lcall
jecxz
hlt
loop
jne
int
inc
ret
cmp
add
mov
test
sub
xor
jg
inc
div
fstps
loopne
sub
sarb
movsl
or
ffree
lock
into
xor
cmp
adc
inc
jne
mov
xchg
sub
les
or
jmp
insb
sbb
shlb
add
cmp
adc
inc
loop
je
inc
mul
cli
lods
mov
scas
test
or
dec
mov
mov
mov
data16
fistps
clc
jno
cmp
fs
mov
daa
loope
loop
push
popf
push
xchg
and
test
out
mov
lods
in
jg
jne
arpl
or
sbb
xchg
in
pop
fcomip
ret
sub
mull
leave
xor
xor
add
lret
shll
call
jns
clc
ja
mov
xor
imul
mov
dec
aam
imul
test
pop
cmpsb
lcall
jge
lret
in
ficompl
std
inc
icebp
in
mov
les
jge
repnz
call
repnz
push
lret
inc
aad
in
mov
xlat
les
insl
lods
cmp
jns
movsl
dec
outsl
and
rol
shl
fsubrl
mov
sbb
fistpll
aaa
xor
mov
mov
xchg
dec
lds
sbbl
cmp
push
notl
mov
cmp
imul
movsb
xor
iret
scas
and
ljmp
sbb
loope
push
jle
xchg
inc
movsl
sbb
pop
mov
jne
les
pop
fsubr
ret
lock
add
or
mov
mov
in
test
jo
pop
test
call
or
xchg
xlat
and
cmp
add
das
xchg
adc
rcrb
mov
popa
xor
mov
xchg
sub
je
xchg
and
fldenv
call
fnstcw
icebp
add
pop
xchg
stc
repz
hlt
add
inc
and
in
adc
xlat
int3
fistl
jecxz
in
js
mov
or
lret
adc
mov
je
dec
mov
movsl
jge
mov
stc
aad
inc
add
loop
xor
mov
pop
popa
scas
jecxz
or
jns
test
cmpsb
inc
sbbb
nop
in
mov
inc
inc
jae
icebp
cmpsb
ljmp
into
lock
cmove
push
ffreep
dec
bound
cmc
or
sub
xor
xor
ljmp
push
imul
loopne
xchg
insb
push
es
cmp
mov
hlt
lods
inc
mov
mov
dec
inc
cmpl
mov
inc
push
mov
mov
icebp
sbb
jle
dec
cmp
mov
shl
jno
loope
mov
mov
rorl
in
mov
pop
jns
in
cmp
repz
mov
jne
fmul
idivb
mov
xor
hlt
push
and
mov
mov
cmp
out
outsb
aam
xor
cltd
out
out
aad
les
dec
sahf
loopne
clc
xor
out
pop
loop
lock
pop
hlt
pop
mov
xlat
imul
sub
push
repnz
jne
out
imul
add
cmp
mov
mov
xchg
mov
jo
les
add
outsl
test
xchg
fnstenv
scas
aad
and
push
add
das
jmp
sub
ljmp
mov
ja
daa
inc
sbb
repz
test
jmp
cltd
sbb
push
orl
cmp
mulb
into
movsb
hlt
bnd
adc
and
test
fldenv
out
xor
rol
lahf
dec
out
adcl
xor
mov
mov
pop
add
inc
mov
test
lea
lods
cltd
dec
mov
lret
ss
cmp
adc
hlt
int3
cmpsl
repnz
sub
bnd
xor
shl
loop
mov
dec
iret
or
jl
or
add
test
sarl
push
les
lods
mov
mov
jne
mov
and
fwait
aad
xchg
sti
mov
js
inc
hlt
jo
test
ret
loope
mov
mov
mov
aam
in
mov
insb
xorb
dec
add
jne
out
ret
pop
adc
jl
les
divl
stc
sti
sbbb
mov
mov
in
loopne
or
jns
ret
sbb
sub
arpl
sahf
inc
mov
push
xlat
in
sub
xor
xchg
lods
fcoms
in
fimuls
and
dec
adc
movsl
inc
pmaxub
pop
dec
jg
hlt
xor
rol
lret
xchg
in
jg
xor
mov
pop
or
test
cmp
inc
sbb
jno
add
mov
inc
xor
cmc
hlt
pusha
jmp
in
leave
les
int3
fidivs
inc
iret
pop
fnstenv
dec
adcl
in
int
sub
cs
lret
inc
push
adc
dec
test
hlt
pop
out
out
dec
pushf
jmp
in
into
xchg
movsb
lods
ret
movsl
jl
inc
cmp
test
inc
in
stos
sbb
mov
push
ds
in
fs
mov
lock
jmp
push
adc
call
loop
cmpl
in
xchg
xor
les
jb
aaa
inc
movsl
in
jecxz
dec
les
and
fistl
test
mov
add
iret
add
sub
ss
rcl
mull
jo
out
cld
cmp
adc
clc
sbb
std
lods
add
lds
and
cmp
in
lret
imul
adc
orb
in
dec
pop
mov
inc
testl
xchg
mov
inc
cltd
les
add
sbb
repnz
ljmp
add
jmp
movsl
jne
js
in
add
sahf
aam
mov
lods
rcl
imul
ret
push
and
in
lea
xor
iret
inc
and
mov
aas
mov
sub
xchg
mov
adc
lret
push
fisubs
fistl
sub
mov
lods
adc
je
or
loop
adc
ret
push
mov
enter
leave
in
lds
ss
xchg
xor
test
mov
jecxz
add
in
les
jo
fcom
lds
fsubp
es
leave
hlt
fldenv
pop
mul
sarl
out
je
pop
andl
cmc
test
dec
cli
mov
mov
mov
or
out
inc
or
adc
fsubrs
call
cltd
faddp
cmp
cmp
xor
pop
mov
in
inc
cmp
mul
cmp
inc
ret
fnstenv
in
imul
push
loopne,pn
mov
mov
adc
dec
loopne
in
jne
xchg
mov
clc
jbe
cld
sbb
pop
lds
call
mov
lret
ret
pop
xchg
movsb
inc
cmc
and
sub
lods
js
cltd
push
mov
mov
int
shr
xchg
test
mov
pop
test
sub
or
mov
cmpsb
scas
addr16
adc
fsts
mov
and
lods
inc
jmp
les
jge
into
push
add
aaa
pop
hlt
lea
imul
cli
sbb
and
les
lds
aad
loope
std
xlat
pop
data16
inc
pop
jo
adc
mov
stos
test
call
inc
pop
daa
ja
shlb
stos
sub
mov
rcl
lds
cmc
mov
in
dec
inc
insl
in
sbb
into
shrb
cmc
mov
sub
std
xor
mov
in
fidivrl
fwait
pop
insb
jo
lds
mov
imul
push
push
mul
pop
out
lds
xchg
imulb
sarl
and
pop
or
cmc
cmp
popf
loop
out
gs
dec
pushl
fimull
int
and
cmp
sbb
aas
shrl
aaa
addr16
jecxz
push
fidivs
in
leave
ja
shr
cmp
stc
and
jbe
xor
hlt
push
jae
clc
jno
fnstsw
add
cmp
fldcw
dec
xchg
cmp
jecxz
inc
or
adcl
pop
adc
mov
or
cli
lods
sbb
out
and
ret
stc
jnp
mov
call
test
cmpsb
dec
mov
test
iret
and
inc
call
mov
jne
sub
jns
xchg
pop
xchg
push
in
loope
ret
hlt
in
in
rcrl
and
fwait
push
movsb
scas
movsb
es
out
pop
aas
mov
shrb
hlt
outsb
dec
repnz
flds
mov
sub
push
ret
and
cltd
sub
cmp
shl
or
jbe
jecxz
fisttpl
mov
fcomi
push
fstl
aas
outsl
xor
add
insl
test
fs
in
loopne
or
out
ret
mov
fsub
out
repz
mov
pop
xor
mov
aam
jmp
ret
mov
int
or
and
outsb
cmp
add
push
int3
adc
sub
and
add
cmc
jbe
pop
and
fcomps
xchg
adc
push
sahf
movl
in
cmp
int3
cli
or
in
xchg
cmp
adc
daa
out
int3
inc
xor
pop
lret
loope
push
inc
sub
xchg
add
test
lcall
jbe
mov
mov
in
cmp
pand
pop
add
sbb
scas
scas
in
mov
sub
adc
aam
dec
int3
push
push
dec
push
test
les
dec
ret
inc
rclb
xor
add
test
adc
lcall
adc
rclb
pop
cmp
xor
pop
imul
leave
out
ss
cmp
loope
jae
fadd
cmpsl
les
mov
leave
ss
hlt
xor
pop
mov
gs
notb
xor
rcrl
cld
mov
aaa
or
push
cli
push
movq
les
icebp
cwtl
andb
fldenv
xorb
jl
dec
and
les
xor
out
imul
sub
out
and
lds
fstps
je
push
jmp
jl
xor
fstpl
into
fs
or
add
inc
cmp
les
add
fnstcw
aaa
js
mov
mov
icebp
dec
adc
hlt
sub
int
mov
lcall
aas
add
inc
int3
xchg
nop
call
dec
stos
inc
loopne
add
je
movsl
dec
sbb
add
out
fsubs
push
sbb
cld
ds
or
pop
fdivrs
inc
cmp
jo
adc
call
mov
cwtl
les
iret
xor
jmp
cmp
pop
inc
ror
mov
cs
xchg
push
scas
jl
shl
rorb
push
rcrb
test
mov
jmp
xchg
mov
dec
fldenv
aaa
sahf
loop
xor
cmp
adc
jae
xchg
xchg
out
pop
punpckhbw
sbb
sbb
ja
in
in
fwait
into
movb
es
or
dec
pop
fiaddl
pusha
jmp
gs
iret
add
jp
dec
inc
or
sbb
push
mov
mov
iret
in
movb
mov
in
push
sub
jecxz
xor
jl
pop
rorb
adc
cmc
shlb
bound
daa
cmp
jmp
fimull
adc
sbb
hlt
jb
pop
test
add
std
mov
lea
mov
dec
mov
mov
and
mov
inc
in
hlt
repnz
filds
shlb
mov
dec
push
test
jle
mov
jbe
and
es
cmp
jmp
and
xchg
mov
mov
fdiv
xor
push
rcrb
xor
push
push
aad
nop
loop
lods
pop
mov
pop
jp
pop
mov
scas
les
push
xchg
sub
lcall
mov
loope
add
jmp
hlt
cmp
and
je
mov
popa
xchg
push
fidivrl
imul
cmp
and
xor
hlt
shrb
shl
pushl
fisubl
ds
js
xchg
sub
stc
ret
fsubrp
adc
pop
out
xchg
inc
jge
in
fld
and
rcll
jnp
les
push
jb
cmpb
push
sub
test
mov
flds
adc
mov
jge
in
inc
sarb
fisubrs
aam
cli
fs
jbe
les
shr
iret
fxtract
rol
pop
mov
and
in
sar
gs
and
push
clc
sbb
cmp
hlt
add
rclb
or
insb
fdivp
fs
ljmp
xchg
or
iret
andl
pop
ljmp
movsb
push
xor
cld
and
cmp
dec
loopne
jnp
int
mov
lea
shll
xchg
in
dec
lods
fsincos
jecxz
push
fs
inc
xor
xchg
push
cmp
loopne
cltd
sbb
mov
pop
in
mov
pop
repz
add
je
cli
cmc
pop
cld
xchg
cmp
les
push
push
inc
in
cli
and
fcomps
and
adc
stos
sti
outsb
lods
dec
imulb
mov
mov
push
cmp
fs
iret
pusha
cltd
sub
jmp
gs
in
mov
sub
ljmp
xor
sub
shr
ja
imul
lods
push
nop
jmp
cmpsl
inc
les
add
mov
sub
mov
cld
pop
mov
aam
xchg
lret
sub
fstps
out
fs
push
int
xchg
fnstcw
pop
jne
data16
sbb
mov
popa
lock
aaa
fxch
mov
jbe
pusha
jmp
cltd
ljmp
mov
movsb
hlt
into
rorl
xor
or
pop
fsubrl
in
les
inc
jbe
xor
add
ret
leave
repz
mov
mov
pop
add
xor
insb
adc
std
test
roll
sub
aad
mov
adc
add
ret
dec
mov
arpl
and
cmp
dec
nop
sub
les
adc
xor
in
cmp
cmp
sbbb
mov
scas
push
adc
loop
aam
fs
or
cwtl
out
lret
lods
add
pshufw
cld
ret
inc
pop
and
sub
stos
popf
mov
mov
hlt
rolb
dec
in
mov
adc
lods
iret
sarb
test
and
jg
xor
iret
lret
mov
mov
test
cmc
mov
std
mov
fs
sbb
stos
fdivrl
in
loop
aam
adc
push
hlt
adc
jne
xchg
ss
into
sbbb
dec
in
lea
mov
and
loope
dec
xor
pop
imul
xchg
lret
and
mov
loopne
out
adc
out
dec
or
add
push
jle
dec
rcrl
repnz
fldcw
add
pop
lock
sbb
in
test
call
push
dec
loop
int
sub
stc
popa
hlt
hlt
sbb
dec
mov
inc
jecxz
mov
jge
cmp
mov
jb
inc
icebp
gs
or
pop
and
loope
andl
mov
loope
sahf
pop
cs
iret
xchg
and
fs
lret
lea
cld
add
testb
in
sbb
shr
loopne
mov
test
pusha
jg,pn
and
negl
es
int
pop
loopne
gs
int3
sbb
loope
mov
mov
cwtl
les
sbb
lods
scas
mov
pop
xor
and
mov
int3
push
pop
sub
mov
mov
mov
sbb
movl
inc
repz
int3
xlat
ret
dec
and
and
test
xchg
nop
cmpsl
cmp
fxch
or
adc
sbb
pop
jp
adc
shl
push
sbb
popf
repz
xor
popf
sub
lret
gs
int3
out
lods
shll
jg
cmp
in
mov
in
mov
out
sub
cmp
dec
jbe
out
shl
addr16
dec
popf
dec
cmp
adc
mov
iret
or
stc
aaa
aad
ja
scas
push
into
outsl
inc
xor
adc
mov
cs
xchg
adc
fsubs
out
add
cmc
hlt
aam
lret
ljmp
dec
int
stos
cli
cli
add
push
or
icebp
xchg
ffreep
xlat
pop
or
cmp
out
mov
scas
fisubrs
dec
aad
dec
cmp
cmpsl
mov
leave
or
xor
sub
lcall
lahf
ds
inc
aaa
ds
in
pop
in
fs
jp
and
cmpl
aam
aas
repnz
fstps
outsl
ss
pop
and
mov
aam
cmp
lahf
cmc
cli
xchg
roll
cmp
rolb
in
les
shl
addr16
cmpsb
add
mov
das
shr
inc
ljmp
jb
cmc
or
shrl
in
in
nop
mov
hlt
fwait
test
xchg
xlat
pushf
aam
pop
xchg
lods
add
lods
mov
cmp
sbb
push
aam
rcrl
pop
cli
fsubs
pushf
sub
xchg
push
mov
orb
lahf
push
lea
jae
pop
fldenv
fwait
in
and
sarb
jg
mov
inc
or
call
fsub
loopne
mov
jge
add
in
xchg
ss
push
jg
push
aas
sub
push
imul
sub
or
das
adc
adc
jecxz
hlt
mov
sti
imul
fnstcw
fldcw
push
test
outsb
pop
loopne
mov
pop
arpl
leave
xchg
inc
mov
xchg
inc
jecxz
sti
dec
pop
andl
cmpl
sti
in
jb
pop
rcr
fimuls
into
xlat
inc
pop
negb
ss
lea
stos
das
mov
jns
sbb
movsb
inc
push
leave
push
xor
inc
fwait
ljmp
scas
and
dec
pop
jns
test
shlb
in
dec
scas
sti
hlt
xchg
popa
lock
dec
les
fsts
movsl
dec
int3
mov
adc
inc
cmp
adc
fprem
insl
adc
lods
cld
mov
or
sbb
push
hlt
jno
cwtl
call
mov
inc
fildl
loope
pop
lret
inc
push
push
cmp
sbb
je
cmp
fs
xchg
mov
inc
cmp
in
pop
test
add
xchg
mov
ljmp
lret
jne
into
pop
out
in
fs
jnp
scas
adc
sbb
call
imul
mov
sahf
loope
jg
aam
aad
loop
les
into
jns
iret
outsb
std
pusha
in
out
inc
test
adc
push
fwait
xor
cs
adc
movsb
add
jns
jecxz
int3
shll
lods
les
hlt
test
iret
mov
push
xchg
into
push
mov
inc
add
out
mov
adc
andl
aam
in
inc
repnz
pop
xchg
cs
mov
hlt
lock
inc
push
out
sbb
aas
cwtl
xlat
jge
stc
sbb
fdivrl
or
fcmovnu
lret
mov
or
fs
in
push
inc
hlt
in
clc
cmpsb
loop
xor
loopne
and
in
jno
jl
stc
iret
ja
mull
ljmp
lcall
xor
imul
loopne
push
aaa
sbb
pusha
push
out
xorb
pop
je
cmpsb
mov
std
jne
fldcw
int
jmp
popf
pop
sub
aaa
mov
pop
xor
mov
stos
out
movsl
les
jb
out
push
dec
lds
dec
fnstenv
lods
int
xor
lcall
cmp
ret
xor
test
lahf
mov
out
inc
les
xchg
in
fs
out
cmpsb
repnz
fnsave
test
lock
push
cmp
push
mov
divb
sahf
nop
jns
fwait
inc
sbb
popa
add
out
mov
mov
hlt
xor
pop
xor
or
sbb
in
sub
insb
xor
mov
push
inc
push
or
in
dec
pop
pop
mov
mov
mov
jg
mov
stc
in
lret
lock
enter
sub
and
and
fsubrp
mov
stos
std
xor
mov
fldt
iret
stc
push
jo
lods
xlat
sbbb
mov
push
repz
movsb
popf
stos
movsl
push
insl
inc
xchg
idivl
lds
inc
sbb
lock
jns
mov
shl
out
popa
xor
loope
mov
sub
les
out
shll
call
or
sti
inc
jae
jl
fisubrl
fstl
rol
aas
dec
add
std
movsb
daa
fcoms
sbb
stc
lret
rol
push
notb
jb
mov
pushf
xchg
arpl
push
sbb
adc
jle
hlt
push
out
add
mov
test
test
push
iret
cld
lock
out
add
mov
jge
decb
jb
pop
cmpsb
mov
add
sarb
jp
pop
int3
fldcw
or
adc
out
lods
mov
repnz
and
or
fdivrl
shrb
rcrb
nop
push
xor
in
imul
push
push
push
fisttpl
mov
fiaddl
test
notb
and
in
cmpsb
loope
outsb
mov
insb
lock
pop
stc
popa
mov
pop
in
xchg
add
and
jne
add
ja
inc
jne
scas
and
push
enter
or
int
inc
fidivl
sub
fimuls
and
test
lcall
mov
xchg
pop
shrd
add
out
hlt
xor
mov
push
test
enter
cwtl
fsts
fdiv
xchg
xchg
cmpsl
xor
adc
js
decl
adc
xchg
mov
lea
jp
pop
sub
mov
decb
iret
and
icebp
repz
push
pop
sti
imul
lcall
in
pop
lret
hlt
lret
subb
push
fisubrl
and
inc
fsubrl
and
hlt
lret
stc
loope
test
sub
dec
test
mov
js
hlt
inc
loope
inc
cmp
inc
and
mov
fnstenv
daa
jg
xchg
je
dec
dec
adc
fbstp
or
ljmp
and
adc
jbe
cmp
and
dec
stos
fldt
out
fwait
pop
hlt
icebp
popa
cmp
les
outsl
jns
sbb
push
dec
push
stc
les
pop
in
movsb
and
hlt
push
fwait
mov
test
repnz
sub
jp
or
fldcw
repnz
push
cli
add
jg
stc
jle
inc
enter
iret
cli
inc
mov
push
stc
imul
repnz
or
mov
push
test
xchg
int
stos
sti
cmp
jb
scas
xchg
mov
cs
xlat
add
loop
adc
jg
sbb
cld
mov
dec
lret
fcom
or
test
fadd
fldl
ja
jmp
lods
insb
mov
enter
mov
ret
shl
add
fisubrl
sahf
sbb
xor
inc
cmp
or
andl
sbb
nop
jnp
enter
jecxz
lods
scas
cmc
mov
les
fs
sti
sub
push
cli
inc
inc
cmp
cltd
add
in
lcall
int3
mov
stos
outsb
loop
and
movsl
mov
sti
pop
push
fcmovnu
xor
fcmovb
ftst
ss
mov
cmp
push
jmp
add
sub
ret
dec
and
hlt
cmpsb
mov
pop
xor
or
push
mov
fistl
je
rep
adc
jmp
adc
cmp
in
mov
jg
popf
add
in
dec
fidivs
les
aam
mov
ret
hlt
push
js
clc
mov
and
adc
ljmp
rclb
bound
sbb
inc
insl
scas
or
or
in
loopnew
rorb
mov
neg
in
mov
xor
mov
push
pop
icebp
sbb
stos
out
adc
data16
jg
add
dec
cld
test
mov
lds
and
mov
adc
mov
mov
jecxz
ljmp
xor
cmp
aad
mov
add
jle
hlt
dec
push
std
inc
xor
lcall
xor
mov
iret
dec
test
imul
ljmp
inc
jge
pop
test
lds
xor
stc
sub
xor
cmp
int3
xchg
in
add
movsl
mov
flds
aad
mov
rclb
cmp
fcoms
cli
fdivr
popf
test
loopne
inc
cmpb
in
lahf
mov
xor
ficompl
xor
outsl
fildl
in
test
add
int
mov
jp
and
fincstp
gs
jo
add
push
mov
xor
xchg
mov
adc
ljmp
and
hlt
jb
pop
pop
aad
pop
iret
lret
adc
loope
mov
popa
mov
scas
xor
js
mov
fwait
xchg
xor
fptan
mov
out
push
jecxz
mov
test
fisubl
pusha
ljmp
js
lods
mov
rorb
mov
cmpsb
add
gs
pushf
fnstsw
je
clc
mov
lret
or
std
lock
pushw
mov
call
outsb
and
xor
enter
mov
sbb
mov
or
clc
push
fstps
aam
sbb
cmp
stc
push
lods
and
hlt
xchg
sub
xor
fdivl
les
popf
and
flds
add
pop
jg
mov
fidivs
aad
pop
xchg
xor
outsb
bound
int3
es
xorl
mov
mov
inc
scas
inc
icebp
and
cmc
scas
dec
scas
hlt
lds
lcall
in
mov
and
in
pop
adc
repz
daa
scas
mov
test
sahf
in
push
dec
jecxz
decb
mov
es
ret
shll
cwtl
and
hlt
mov
clc
data16
les
pop
push
ffreep
mov
aad
jae
mull
push
inc
pop
test
jp
mov
sahf
pop
es
dec
ret
jae
jle
daa
mov
stc
enter
ja
xchg
imul
sti
mov
je
jmp
add
mov
call
in
rcrb
rsm
xor
aam
aam
notl
loopw
lods
pop
stc
or
adc
sti
xchg
das
mov
int3
fwait
jp
loopne
andl
rcl
leave
cmp
movsb
imul
mov
sub
jge
jl
test
leave
in
cli
and
aas
jns
rorl
movsl
jmp
mov
mov
movsb
pop
sub
hlt
adc
js
int3
cltd
cmp
divb
sbb
fsts
pushf
mov
add
inc
or
add
out
shrl
stos
fcompl
repz
fiadds
repnz
lret
dec
inc
mov
fidivs
pop
add
lods
sbb
xchg
icebp
aaa
movsb
in
xchg
mov
hlt
int3
adc
ret
in
iret
int3
int
stos
decb
aad
fnstenv
dec
stc
add
or
cmp
sub
fisubrl
cltd
addr16
stc
ljmp
loopne
aaa
clc
mov
mov
mov
std
jno
and
sub
repz
or
notb
cmp
sbb
push
in
aad
icebp
ret
in
mov
or
jb
cld
adc
mov
xor
shlb
les
sub
mov
cmp
mov
lcall
sub
jmp
in
xchg
xor
xchg
fldenv
decb
fmul
mov
jne
pop
test
jge
jne
xchg
outsl
lods
aas
outsb
jl
loop
hlt
xchg
mov
xor
pop
stc
xchg
xor
fiaddl
fs
popa
js
cmp
xchg
fidivrl
fadd
pusha
pop
mov
adc
je
cltd
jno
mov
mov
test
rorl
xchg
mov
scas
pop
xor
in
loopne
movsl
loop
mov
hlt
call
shl
sub
loop
les
popa
jmp
dec
repz
fs
fdivrs
adc
inc
ret
jns
inc
pushf
das
add
push
fucomi
fldcw
sbb
mov
push
or
fistpl
xchg
xor
hlt
xor
mov
cmp
xchg
inc
in
int
lds
jbe
lret
stos
ljmp
aam
cwtl
add
cmovne
lods
inc
inc
lret
addr16
cmpsl
dec
dec
les
addl
fistl
dec
mov
fbstp
data16
jno
fidivs
mov
movb
scas
mov
out
gs
and
aam
loopne
nop
pop
clc
fdivp
and
and
fidivl
icebp
pushl
frstor
fnsave
movsb
fcom
pop
in
sbbl
rclb
add
or
outsb
dec
add
iret
andps
push
xchg
cmp
xor
xor
ja
fld
jmp
popa
popa
sbb
in
inc
sub
rclb
inc
in
mov
cmpl
movsl
xor
fadds
sbb
push
pop
sub
adc
xchg
sub
mov
dec
cld
ss
aad
lock
in
in
cmpsb
pushf
fldcw
xchg
bound
std
lods
push
lret
xchg
lods
in
inc
ds
jb
jecxz
jl
push
aam
lds
mov
dec
fildl
inc
movsl
std
add
pop
jmp
xchg
mov
pop
fdivrs
movsb
jl
sub
clc
subb
mov
icebp
inc
mov
in
out
add
ss
dec
jmp
add
add
fisttpll
inc
in
xor
jl
loope
test
mov
mov
lret
mov
lret
stos
and
xchg
push
jge
sahf
pushf
mov
sbb
ret
ja
mov
in
mov
in
add
inc
hlt
rcrb
jno
lret
jmp
notb
fnstcw
fcomp
aaa
or
pop
fisttpll
mov
loop
scas
out
and
push
mov
ret
les
std
inc
mov
mov
sbb
lock
mov
in
push
in
repz
hlt
push
adc
dec
inc
cld
add
test
cmp
test
hlt
lcall
jg
push
in
xchg
mov
inc
popf
out
nop
jp
xor
mov
and
loopne
pushl
pop
push
jmp
cmpl
cltd
fsubr
pop
dec
adc
outsl
jb
pop
inc
std
inc
in
mov
inc
in
int
xchg
fldl
out
pusha
fmuls
imul
or
cld
mov
push
fnstcw
sbb
dec
xor
and
subl
add
mov
fadd
push
fimull
mov
push
aaa
jo
xchg
imul
add
xor
add
loopne
addr16
shlb
call
insb
in
les
je
popa
mov
sub
mov
xchg
pop
jmp
imul
xlat
icebp
jo
in
hlt
add
cmp
pop
imul
hlt
mov
lret
les
std
jns
mov
es
mov
cmpsb
ret
adc
fdiv
inc
jae
fs
bound
inc
fisubs
jo
jle
adc
xchg
xchg
fwait
pop
stos
in
sbb
hlt
ss
pop
call
not
int
mov
xor
cwtl
or
cmc
pop
repz
int
outsb
into
inc
mov
or
push
hlt
xor
cmp
adc
call
jae
popf
mov
fistl
in
dec
mov
in
mov
cmpsl
sbb
dec
lods
cld
inc
sbb
jecxz
repnz
bound
jno
adc
add
xchg
jmp
cmp
out
test
push
loope
les
rcrl
sub
add
icebp
leave
dec
repz
jge
mov
insb
loop
and
and
sarb
in
push
fidivl
faddp
pushf
cmp
or
mov
cmp
test
test
lods
shlb
inc
lret
pop
jg
sbb
in
cmp
mov
xchg
insb
inc
stc
clc
test
aad
cmp
sti
jae
mov
and
ret
int3
test
mov
mov
arpl
pop
shrb
inc
fsubl
jbe
fs
jg
push
stc
dec
dec
aam
das
testb
out
and
stos
outsb
push
inc
addl
adc
lds
int
int
mov
shlb
test
mov
test
iret
cmp
jne
insb
mov
add
ss
sub
xorl
in
cmpsl
dec
cld
test
fstpl
xor
ss
dec
arpl
pusha
mov
push
jnp
arpl
inc
std
in
out
ljmp
add
sbb
or
ficoml
sbb
sbbl
rolb
mov
fmull
cmpsb
insb
out
mov
jnp
adc
imull
xor
loop
aam
iret
adc
in
add
mov
jl
repnz
mov
push
in
lods
cmpb
hlt
pop
mov
jecxz
jmp
pop
push
in
js
xor
movsl
jo
or
aad
les
mov
addl
fmuls
and
xor
imul
in
sub
cli
gs
cli
lock
movsl
les
cmpsb
ds
in
xor
xchg
je
shll
rolb
and
stos
into
push
hlt
cmp
ss
stos
push
rorl
dec
test
lcall
xor
movsb
push
scas
les
mulb
in
jo
psubq
jo
and
or
leave
push
stc
mov
in
out
hlt
fs
and
jnp
ret
push
sub
cmp
out
adc
xor
hlt
xchg
push
nop
add
add
mov
push
movsl
shlb
call
xorl
lods
fldenv
in
mov
and
inc
jp
cmpsl
lret
inc
mov
fsubr
test
inc
dec
sub
es
les
cmpsb
xchg
hlt
sbb
popa
jbe
push
fs
adc
in
hlt
add
pop
int3
repnz
mov
aas
xor
jae
les
sbb
ficoms
mov
pop
aad
insl
inc
std
xchg
in
or
xchg
aaa
xchg
arpl
inc
les
fisubrl
data16
ret
xchg
cmp
and
les
repnz
lret
xlat
call
scas
test
lock
mov
aam
in
in
jmp
loopne
in
jmp
lea
sbbb
push
lds
inc
mov
ljmp
xchg
icebp
sub
cmpsl
out
mov
mov
add
ret
test
iret
imul
xor
daa
adc
pop
lods
sbb
jge
xchg
rcr
jbe
repz
pushf
test
mov
mov
popf
test
push
push
adc
and
into
loop
sub
xchg
imul
cmp
and
imulb
jl
mov
xor
push
imul
push
mov
mov
pop
cli
out
mov
jl
sub
and
aas
pop
in
xchg
fisttpl
jmp
fstpl
subl
in
push
addr16
jmp
inc
and
stos
dec
ss
inc
clc
push
xchg
hlt
pop
xor
in
ret
std
lock
repnz
gs
loop
sub
dec
and
fcmove
add
fbld
jmp
mov
lret
sub
xchg
in
mov
outsl
sub
pop
cmp
or
movsl
mov
ret
lcall
hlt
adc
sub
or
mov
and
pop
fcomi
sbb
adc
fnstenv
outsb
popf
cs
inc
cmp
pop
ljmp
rorb
jecxz
cmp
hlt
cltd
mov
jmp
or
negb
dec
fidivl
gs
mov
aad
lea
cwtd
fldl
int3
fstp
fisubrs
out
mov
jmp
mov
cltd
in
xchg
xchg
mov
mov
fstps
cltd
hlt
test
popa
scas
mov
xchg
repnz
inc
test
and
mul
dec
out
cmpb
pop
aam
stos
in
inc
xchg
mov
in
cld
sub
cmpsl
lcall
in
jmp
mov
push
cmp
inc
je
stos
stos
je
icebp
pop
xchg
add
sbb
add
xchg
mov
incl
frstpm(287
sbb
jae
test
push
or
mov
jp
dec
stos
std
push
push
in
jnp
stc
nop
jecxz
jmp
aaa
insb
cltd
pop
push
inc
mov
stc
lahf
lahf
adc
xchg
mov
imul
lods
divb
rcll
test
in
mulb
sbb
sahf
je
sbb
filds
mov
aam
pop
sub
xor
and
inc
fxch
dec
test
jmp
cmp
mov
fcoml
xchg
fldenv
stos
jno
scas
ffreep
testl
adc
lock
lcall
les
push
sarb
lahf
out
mov
fnsave
xchg
js
add
ljmp
stos
xchg
inc
les
push
in
rcl
xchg
pop
test
lods
adc
xor
stos
mov
sbbl
scas
or
fidivrl
out
jae
add
std
cmc
xor
roll
out
movsl
popa
jae
imul
cmc
mov
xchg
loope
cmp
mov
jnp
in
push
jb
out
test
mov
faddl
jecxz
xchg
dec
sbb
stos
add
inc
out
ret
ret
addl
rclb
stc
hlt
loope
jne
sbb
popf
ja
pop
mov
hlt
jno
aaa
push
in
clc
scas
insb
out
sub
pop
out
dec
mov
fnstenv
push
or
cmp
jno
and
mov
xor
inc
jbe
out
outsl
fs
pop
lret
rcll
iret
or
insl
inc
les
test
mov
inc
lret
ds
mov
jge
xchg
push
sub
test
cmpsl
test
jo
icebp
and
push
lds
sarb
add
enter
lret
mov
jge
ret
lea
lods
xlat
pop
repz
in
fiaddl
add
push
flds
int3
sub
jb
mov
jbe
rclb
adc
fnstsw
mov
adc
mov
scas
fdivr
mov
test
xor
push
out
call
cmp
push
stc
or
sbb
data16
rcll
jg
fsubrp
jns
imul
jno
xor
fldt
aaa
inc
les
cltd
mov
add
xor
mov
movsl
jge
shl
dec
jnp
inc
and
fdivl
lds
adc
repz
out
in
hlt
pop
lock
incb
mov
lahf
outsl
test
dec
in
ror
xor
iret
out
lock
shr
fsubr
fs
addr16
xlat
mov
aas
shll
les
negl
incb
mov
xlat
mul
pop
jmp
jne
hlt
adc
in
ds
and
mov
dec
pop
test
sub
fcmovbe
shl
xor
ret
loopne
stos
fs
ret
hlt
nop
out
das
fdivp
scas
sub
xor
test
fs
inc
rcr
idiv
cmpsb
jo
in
push
movsb
ljmp
xlat
repz
ret
lock
fmuls
arpl
iret
pop
lcall
fsubs
fsts
push
fldl
or
shlb
xchg
jbe
xchg
loopne
je
rcll
rolb
inc
les
mov
arpl
aaa
add
cltd
push
sub
rclb
in
ja
imul
cmp
xchg
adc
les
jge
inc
xor
les
push
in
pop
out
xchg
bnd
cmc
or
jnp
out
sbb
mov
cwtl
adc
loop
xor
fiaddl
push
pop
cmp
stos
iret
int3
dec
addb
ficompl
fcmovne
outsb
in
data16
mov
fwait
pusha
rcrb
jle
inc
mov
dec
jmp
dec
inc
cltd
jl
push
mov
push
xor
jnp
mov
out
test
orb
sahf
shrl
pop
lret
xor
and
mov
mov
mov
rol
data16
jno
data16
insl
lea
inc
hlt
hlt
fistpl
mov
inc
mov
les
inc
dec
cmc
sub
mov
inc
test
in
les
dec
mov
inc
mov
imul
mov
repz
and
add
xor
dec
pop
and
xor
arpl
xchg
push
lods
and
insl
std
stos
adc
es
dec
xor
sub
jns
fstps
jno
adc
loopne
xlat
in
pop
mov
in
loope
ljmp
push
outsb
dec
in
cld
enter
testl
fscale
js
lret
lea
insb
adc
clc
rcll
int
pop
cltd
in
add
pushf
lret
ficompl
sbb
inc
aas
idivb
and
pop
inc
and
hlt
test
xchg
jl
test
push
shrb
hlt
dec
sbbb
arpl
pop
adc
inc
pusha
jo
fnstcw
das
inc
out
jmp
inc
in
and
jmp
jge
int3
nop
cmc
inc
jns
mov
fadd
pop
in
aad
jno
lahf
in
ret
mov
adc
mov
xchg
les
ret
pop
rcr
xor
lahf
jmp
cmpsl
ljmp
sbb
fists
cmpsl
rolb
les
mov
cmpsb
xchg
pop
dec
iret
xlat
test
dec
std
dec
dec
fstpl
sub
in
add
icebp
into
jmp
std
lret
notl
or
ljmp
xchg
hlt
mov
rcl
xor
pop
les
cmp
sbb
rcl
lahf
xlat
out
sub
jl
aas
sarb
fldenv
test
push
push
aam
jmp
enter
iret
das
fisubs
ja
testb
into
lret
pushf
cmpsl
add
ret
movsl
into
pop
ficoml
mov
in
add
loop
incb
hlt
aaa
add
xor
out
sahf
rorb
jmp
cmc
lock
and
inc
bound
int3
out
cli
mov
fxtract
into
jg
mov
fcomp
jl
les
ss
loope
and
repz
mov
mov
in
fnstsw
arpl
adcl
dec
into
mov
mov
lcall
mov
test
orb
fldcw
sub
outsl
fsts
cmp
dec
out
aam
cmpsb
mov
roll
fsub
xor
pushf
pop
cltd
sub
and
and
sbb
test
divb
mov
fdivp
add
scas
popf
roll
fwait
std
les
out
inc
or
sbb
mov
insl
out
lret
nop
not
mov
cld
cltd
mov
sbb
stc
push
icebp
pop
test
movsb
mov
ljmp
fldcw
popa
in
mov
sub
dec
pushf
sti
ss
fldenv
pop
test
jecxz
and
out
lods
gs
jle
out
out
mov
xor
nop
pusha
inc
cmpsl
mov
test
and
pop
fchs
sbb
shr
xor
testb
push
movsl
dec
jmp
sub
leave
mov
leave
jmp
ret
sub
cli
adc
mov
ja
aad
cmpsl
cli
shll
sar
repz
xchg
mov
mov
cltd
in
test
inc
cmp
das
sub
adc
aaa
xchg
ds
in
pop
in
mov
les
mov
jns
push
lods
fnstenv
mov
push
sbb
cmc
aad
pop
out
cmpl
mov
push
pop
dec
sarb
push
out
int
dec
leave
lods
dec
stos
fldenv
shlb
fmul
fnop
test
add
jge
xchg
xor
aad
jae
jns
and
flds
popf
les
and
adc
outsb
data16
inc
divb
rcr
jne
aam
test
fldenv
push
sarb
cmc
sbb
in
pop
mov
jne
repz
mov
ret
lds
arpl
jmp
add
pop
fs
mov
sub
lock
loope
xchg
inc
and
pop
sbb
daa
jbe
or
or
arpl
loop
ja
int3
rcr
mov
adc
cmp
inc
or
out
hlt
sub
in
mov
clc
xchg
and
fidivs
negl
dec
xchg
cmovl
les
fmul
jne
and
out
lcall
cmp
mov
cld
jns
inc
mov
adc
or
cmp
xchg
mov
jecxz
test
sbb
pop
jmp
movsb
mov
pop
sti
mov
dec
out
negl
cmp
loopne
lock
sti
pop
adc
in
xchg
xorb
and
cmp
mov
les
into
outsb
jg
enter
enter
xor
js
and
fldcw
xor
inc
mov
lods
fldt
call
fstps
pushf
cltd
scas
popf
jnp
addr16
mov
xchg
xor
pop
fxch
frstor
addr16
mov
mov
push
cld
les
ret
shrl
mov
fldcw
push
rcrl
push
sub
in
dec
fsubrs
xchg
pusha
shld
movsl
xlat
push
add
aad
outsb
in
in
xor
hlt
lahf
cmpsl
pop
subl
sbb
inc
bound
ss
xor
push
mov
loopne
les
cli
stos
push
xor
repz
jns
cs
push
mov
stos
in
icebp
pop
adc
mov
mov
outsl
mov
insl
int
xchg
push
lret
mov
fprem1
iret
shl
jns
pop
push
sbb
sub
cmp
jmp
mov
fwait
arpl
ss
flds
es
xor
cmp
pop
les
sbb
imul
int
push
add
sub
cwtl
mov
gs
xor
aad
pop
loop
in
into
xchg
mov
adc
enter
dec
lock
fisubs
sbb
fstps
test
call
in
fs
pop
hlt
mov
cmpsb
ja
outsb
xchg
xchg
mov
sub
push
cmp
ljmp
hlt
cmp
add
xchg
and
es
int3
pusha
xchg
push
shll
mov
test
or
fld
nop
or
or
xchg
imull
rcl
sub
in
hlt
push
lods
repz
std
push
subl
cmp
scas
mov
xor
andl
mov
xchg
or
enter
leave
push
xor
fs
lahf
out
ja
inc
in
ljmp
fdiv
in
out
adc
movsl
mov
add
mov
outsb
lds
mov
repz
imul
adc
lock
fsub
inc
loop
mov
leave
sbb
and
cmc
pusha
sub
ljmp
xchg
xchg
and
mov
stos
testl
and
sti
and
xor
xchg
push
inc
mov
dec
mov
ficomps
js
inc
out
push
loopne
pusha
mov
add
fldcw
cli
add
pop
mov
repz
lods
jle
mov
xor
in
andl
jb
mov
xlat
cli
lds
mov
or
jns
dec
cmp
xchg
xchg
icebp
in
nop
xchg
mov
int
mov
pop
clc
mov
xlat
pop
hlt
jae
ljmp
out
adc
jmp
ja
in
pop
cmc
jp
dec
cltd
mov
int
add
cmp
xchg
mov
lcall
repnz
cmc
jge
mov
mov
cmpsb
xchg
mov
mov
fldcw
call
les
pop
addr16
lcall
cwtl
popf
mov
jns
mov
cmp
cmc
fincstp
fiaddl
jecxz
imul
hlt
push
scas
jae
hlt
cltd
in
sub
mov
rol
or
stc
je
imull
adc
add
stc
inc
sbb
in
or
add
xchg
jnp
xchg
cmpsb
repnz
inc
mov
outsl
jbe
aam
pusha
shlb
push
fldcw
in
cmc
pop
jbe
xor
vmovhps
sbb
pop
dec
shll
jo
adc
cmpsl
int
aas
jne
xlat
lahf
adc
inc
lea
jno
fsub
xor
test
lcall
out
and
hlt
lods
inc
adc
aam
arpl
mov
les
popf
iret
mov
mov
sbb
lock
push
daa
insb
fnstcw
xor
in
mov
sbb
mov
add
lock
out
mov
and
jg
repnz
jmp
add
mov
cld
aas
dec
cmp
or
lock
fwait
subl
std
icebp
call
fsub
push
mov
in
test
hlt
jae
pop
pop
imul
lea
push
mov
push
in
fildl
test
clc
in
or
int
enter
or
cltd
inc
sbb
pop
es
fldcw
call
imul
stc
sub
mov
xorl
mov
adc
gs
pusha
fwait
pop
lock
out
in
jmp
xchg
pop
dec
nop
int3
cmp
andb
loope
lods
adc
in
fsts
shlb
dec
mov
pushf
xor
mov
cli
fnstcw
inc
ljmp
jb
sub
iret
fldenv
loopne
cli
je
xchg
add
xchg
sti
cvtps2pd
adc
aad
dec
insb
fadd
mov
and
xchg
or
xchg
jne
fdiv
pushf
push
lds
xor
test
in
sbb
enter
dec
and
ja
movsb
shll
cmc
mov
out
enter
and
and
push
push
xchg
jl
and
or
and
dec
inc
ds
mov
sbb
arpl
lods
in
in
rcr
jge
push
scas
repz
test
cmc
ja
nop
cmpsl
clc
imulb
mov
push
cs
mov
in
cli
std
fdivp
or
mov
or
push
add
push
in
xchg
testb
ftst
xchg
fbstp
xchg
dec
push
lods
out
or
loop
call
jl
fistpll
mov
insl
xor
fildl
repz
mov
mov
mov
xor
rol
mov
into
jl
cltd
pop
mov
sahf
iret
mov
jle
in
add
lret
movsb
dec
mov
jne
stc
loop
and
push
pop
cs
cli
dec
adc
push
outsl
pop
rclb
rol
je
gs
aas
stos
cmp
cli
mov
rcl
test
jns
hlt
add
xor
out
lds
mov
sahf
add
pop
hlt
into
ljmp
les
fstp
loopne
jns
int3
sbb
ret
add
sbb
lds
fxch
adc
cmp
mov
imull
cmc
sbb
iret
push
inc
out
mov
jbe
out
mov
xchg
dec
push
test
into
cmpsb
fdivrs
popf
xorl
loop
aam
movsb
mov
sar
int
in
kortestw
or
mov
xchg
mov
xchg
mov
inc
inc
pop
xor
xchg
in
push
hlt
add
ret
ret
jbe
sahf
cwtl
loope
ds
add
shrb
pushf
sub
repz
sbb
mov
jge
adc
scas
mov
test
insb
mov
aad
dec
fbld
int
inc
add
mov
pop
jae
push
sub
cmpsb
or
jmp
xchg
dec
cld
mov
hlt
mov
je
mov
aad
mov
push
cmpsl
pop
leave
mov
fldt
shl
lods
lds
sub
pop
jne
lret
ljmp
push
fcomi
sbb
aam
push
scas
cmc
jno
jno
jmp
loope
cmp
loop
add
jecxz
fs
jns
mov
pop
cli
stc
call
andl
jb
push
fsts
shlb
xor
and
mov
mov
or
push
in
dec
cmpsl
adc
push
jp
shl
jb
dec
sbb
ret
scas
push
jbe
sti
mov
add
addr16
fwait
das
call
aad
movsb
push
addr16
and
mov
pusha
test
jbe
in
cmp
les
fimuls
lret
mov
in
roll
inc
hlt
movups
outsl
xchg
jo
pop
test
cmp
cmc
lret
sbb
fisubs
dec
pop
lcall
sbb
hlt
inc
nop
mov
rcrb
adc
dec
data16
xchg
aas
fadds
and
mov
xlat
lds
xor
xchg
fs
in
sub
sub
idiv
dec
sti
sbb
faddp
mov
enter
mov
sbb
or
cltd
orb
mov
sahf
mov
loop
push
lcall
sub
adc
inc
xchg
enter
inc
lcall
pushf
mov
push
inc
mov
push
jmp
outsb
ss
and
mov
in
xchg
add
pop
leave
leave
insl
fwait
or
adc
mov
lods
fisubs
nop
lds
mov
mov
repz
les
dec
sbb
fnstenv
dec
mov
xchg
push
in
jg
hlt
iret
aad
xor
call
pand
xchg
fldenv
bound
xlat
les
aam
jbe
push
pusha
cwtl
mov
aaa
clc
pop
mov
and
inc
pushf
in
or
sub
ss
xor
mov
in
fcoml
jo
add
mov
sahf
push
push
mov
clc
jmp
and
fsubr
rcrb
test
sub
inc
ljmp
repnz
xchg
mov
in
xlat
mov
and
jge
mov
cltd
adc
xchg
fcompl
xchg
xchg
pop
shlb
cld
add
xchg
fsts
or
movsb
mov
mov
fsts
test
das
ja
les
loope
jno
lods
fnstenv
or
leave
clc
lods
mov
and
xchg
iret
and
sti
inc
mov
loopne
mov
jge
scas
mov
add
fdivr
xor
loop
adc
cmp
jp
pop
dec
es
shlw
fwait
and
sub
shrl
ss
aad
popf
mov
jno
fdiv
fmuls
mov
and
xchg
mov
insl
mov
mov
out
cmp
push
xor
lods
mov
xlat
inc
call
pop
dec
push
lods
fldz
imul
ljmp
cltd
shlb
sahf
mov
pop
fstp
mov
loope
xchg
f2xm1
sbb
data16
test
shr
loop
and
out
imul
cmp
ret
jp
mov
inc
mov
dec
lcall
xchg
push
xor
pushf
xchg
jo
xchg
loopne
nop
inc
dec
rclb
out
ds
es
ret
mov
je
icebp
js
nop
sahf
sbb
fwait
or
push
hlt
cmp
add
jnp
xchg
sub
imul
adc
imul
sub
ljmp
mov
mov
js
or
cld
clc
pop
imulb
movb
add
mov
inc
lret
pushf
ja
jo
xchg
out
pusha
shlb
jecxz
lcall
andb
enter
add
cld
pop
orb
mov
pop
jne
mov
xor
notl
or
mov
in
mov
fnstenv
int3
or
inc
insl
mov
adc
outsl
cltd
sub
pop
cmc
ret
stos
bts
and
xchg
lods
inc
jne
adc
ja
stc
cmpsb
hlt
andb
pop
add
jecxz
push
fstps
pop
mov
adc
xchg
in
out
pop
cltd
jp
outsb
xlat
in
popa
push
outsl
or
shll
cmpsl
shrb
add
xchg
pop
pop
fstl
dec
pop
jge
mov
lods
and
adc
cli
dec
aad
pushf
frndint
sbbb
cmp
or
addb
mov
push
mov
sti
in
push
pop
jp
jbe
inc
fnstcw
sbb
into
lret
sub
push
xlat
mov
hlt
test
hlt
inc
mov
nop
cwtl
lahf
push
push
and
xor
add
pop
clc
aaa
pop
orl
pop
ja
icebp
and
std
clc
pop
rorb
pop
pop
cli
lock
dec
push
daa
sbb
mov
xchg
sub
pop
inc
or
sti
shl
fnstenv
test
imul
iret
lods
rorb
sub
or
mov
xchg
movsl
mov
stos
int
fiadds
leave
popa
pop
repz
stos
scas
sbb
dec
pop
jle
out
fs
and
mov
and
lods
repz
addr16
push
fadds
and
movups
fadd
aad
je
fdiv
test
push
es
jne
mov
je
add
leave
movl
mov
inc
decb
fdivrs
out
movsl
cmp
dec
mov
int
push
testb
aad
hlt
mov
repz
mov
fs
loop
and
clc
outsl
lock
add
mov
test
cmpsb
sub
cmp
fdiv
cmpsl
jnp
mov
mov
adc
ffree
dec
cld
push
push
loope
mov
in
xor
lret
rcr
mov
push
xor
call
lret
dec
inc
ret
xchg
xchg
push
jmp
int3
fnstenv
sub
aaa
push
jle
in
mov
jmp
or
les
dec
sarb
cmp
inc
stos
or
adc
cmp
sbb
and
out
inc
std
shrb
loop
inc
popa
adc
push
fpatan
jnp
pop
insb
add
bnd
mov
gs
les
lret
adc
pusha
aas
push
jecxz
nop
mov
mov
outsb
xorl
frstor
fstl
test
dec
addr16
pop
hlt
inc
fcoml
jb
jne
inc
sub
lret
in
add
and
lds
and
xchg
cmpsb
push
sbb
outsl
decb
loop
lds
jne
inc
std
fisubrs
in
js
jb
shlb
cld
in
or
fadd
jecxz
lods
enter
testl
fs
push
pxor
adc
mov
loope
mov
mov
rolb
xor
lods
divb
mov
lock
inc
adc
xchg
test
xchg
mov
pop
dec
test
insb
je
les
mov
hlt
movb
ja
idiv
movsb
ret
cmc
into
out
adc
push
xlat
jne
rsqrtps
repz
sbb
int
xchg
loope
pop
jae
mov
push
mov
sbb
or
cmp
jecxz
fldenv
lahf
cltd
rol
out
xchg
mov
mov
adc
aaa
in
hlt
lock
mov
in
les
ja
and
and
cmp
pop
cmp
les
ja
mov
stc
sbb
lret
js
jae
ljmp
inc
nop
aaa
stos
filds
or
cmc
or
insl
cli
rol
jno
add
popf
inc
ljmp
dec
fstpl
pop
cmp
xor
push
mov
lds
or
xchg
add
leave
add
les
loopw
cld
iret
in
mov
push
hlt
popf
stos
xchg
mov
jmp
ficompl
add
lods
mov
mov
lods
in
mov
dec
in
clc
xchg
aaa
hlt
stc
pop
cmpsl
pop
ret
nop
lret
in
lret
into
sub
add
fbld
shl
cli
jns
les
cltd
cltd
sbbl
lods
cli
hlt
daa
and
rorb
call
and
hlt
shrl
push
sub
test
sub
hlt
into
xchg
loop
in
dec
jecxz
movsl
ss
xchg
loope
inc
ficoml
mov
jp
jb
sbb
fcmovne
mov
add
jns
xchg
mov
je
lret
fmull
insb
hlt
je
lock
call
add
inc
sub
mov
sti
cmp
xchg
lds
add
aad
repz
mov
push
pushf
jle
rcrb
popa
inc
negb
outsl
movsl
cmp
inc
clc
pushf
movsb
sub
in
fadds
pusha
bt
mov
mov
jo
adc
lret
adc
cwtl
aam
imul
loop
push
xor
call
jno,pt
mov
mov
in
ret
hlt
adc
ja
mov
ficoms
push
js
cld
movsb
xchg
roll
fisubl
lahf
faddl
pop
and
jbe
rorb
test
dec
lahf
aas
mov
adc
loopne
stos
leave
add
lahf
int
dec
int
jmp
test
test
mov
jl
or
imulb
jb
pop
sarb
repz
inc
inc
stos
inc
pop
jne
pop
pop
jecxz
lret
cmc
sub
xor
and
ljmp
inc
shlb
ficompl
mov
mov
jge
aaa
lret
xchg
sub
bound
sti
roll
xchg
test
popa
pop
popa
mov
clc
int
icebp
push
lret
inc
ss
pusha
dec
jmp
sahf
aad
divl
pushfw
mov
int
lcall
inc
pusha
fs
push
out
or
dec
ret
rorb
adc
clc
hlt
or
psrld
rclb
jne
fld
idivb
push
dec
or
push
xor
inc
sbb
popf
movsb
push
mov
sahf
outsb
sbb
sbb
movsb
inc
jecxz
mov
lret
jmp
stc
movsb
scas
xor
xchg
call
sub
fcomi
outsl
dec
pop
pop
mov
xor
aas
fsub
pop
popa
mov
cli
xchg
push
dec
rorb
mov
cmp
dec
imul
cld
cmp
push
leave
les
aad
test
lock
pop
dec
pop
add
dec
pusha
fldln2
sbb
popa
mov
in
inc
inc
jecxz
pop
jnp
cmp
and
pop
lret
or
lods
mov
scas
hlt
jmp
cltd
jbe
shl
lock
daa
loopne
inc
shl
xchg
fidivs
dec
push
sbb
ja
mov
cmc
aad
ret
mov
sbb
aad
mov
cmp
les
xor
jbe
jg
jb
movsl
mov
dec
outsl
aaa
cwtl
cltd
je
xchg
rcr
lea
testb
mov
and
inc
ftst
push
mov
jne
les
clc
jne
in
je
lods
mov
mov
cli
mov
hlt
ror
aam
stos
rorb
jns
dec
scas
sti
add
push
movsl
mov
test
jp
fisubrl
sbb
mov
mov
dec
xlat
add
xor
jae
push
push
fdivs
lds
jmp
gs
fisttpl
leave
lds
hlt
fisubs
and
test
sub
sahf
mov
fimuls
insl
jns
add
push
loop
adc
push
add
fyl2x
nop
xor
imul
fsub
cmpsb
push
and
push
inc
scas
sbb
pop
loope
jae
ret
in
add
push
push
cs
inc
inc
lcall
pop
aaa
jmp
ret
mov
adc
cmp
loopne
fsub
arpl
clc
sub
inc
jecxz
fcompl
int
cmp
cmc
add
out
jge
aad
je
xor
hlt
into
movsl
out
iret
fsubr
jne
fisubrs
xor
mov
scas
mov
movsb
sbb
mov
shll
repz
lods
clc
hlt
nop
mov
in
lret
stos
sahf
jns
sbb
in
int
push
gs
fmuls
aad
pop
in
je
jg
mov
stos
pop
shll
aad
adc
popf
pop
outsb
ficomps
cmpsl
jl
cmpsb
jmp
sub
pop
fs
lret
mov
nop
arpl
jmp
mov
lret
insb
clc
mov
pop
les
ret
push
inc
xlat
push
loopne
leave
es
xor
dec
ficomps
movsb
clc
mov
in
and
movsl
in
sbb
popf
das
xchg
sub
pop
or
sbb
push
dec
cmp
sub
cmp
fldenv
mov
and
and
hlt
cmp
repz
leave
lock
push
mov
mov
jnp
out
gs
out
xlat
dec
xchg
dec
loop
fcmovu
dec
movsl
and
dec
movsb
popf
out
nop
mov
xchg
shl
xor
and
jl
fcom
push
ret
mov
hlt
imul
popa
movsb
cmp
movsl
icebp
les
adc
flds
xor
dec
sub
pop
icebp
in
mov
addr16
pop
fldpi
pop
pop
les
int
movsl
call
xlat
in
aaa
fsts
cmpl
dec
cmp
or
hlt
jo
mov
sarb
out
ret
leave
frstor
adc
js
sub
lcall
je
hlt
inc
xchg
pop
insb
popa
mov
mov
cmpb
add
dec
shl
sbb
jge
or
sbb
jecxz
dec
xor
test
dec
xor
pop
cmc
adc
sbb
imulb
nop
shl
xchg
in
lock
orb
mov
xchg
push
int
aam
cwtl
and
fnstenv
inc
or
push
lock
loop
xchg
fcoms
loop
sbb
loop
stc
fnstcw
gs
fcmove
push
cld
mov
lcall
mov
push
rorb
and
scas
sub
fadd
and
mov
push
sbb
test
lds
mov
stos
sbb
mov
jp
int
pop
cs
push
jns
pushf
fimull
xchg
ret
lods
push
dec
out
cld
shll
xor
mov
jo
call
jae
sbb
add
jecxz
cmc
int3
inc
xor
jns
in
mov
adc
xchg
jg
jb
in
pop
clc
orb
cmp
push
push
icebp
jp
cli
mov
adc
pop
mov
xor
pop
aam
test
repz
fadds
cmpsb
pop
and
xchg
les
pop
mov
sbb
jno
rorl
fadds
sbb
fmuls
testb
and
imul
movsw
or
ds
sub
jae
loop
stc
or
push
cmc
cmp
iret
dec
stos
jmp
xchg
pop
sub
dec
dec
movl
pop
lds
ret
fwait
je
dec
xor
inc
cmp
hlt
push
rcrl
ja
mov
in
inc
lahf
adc
xor
xchg
cmp
xor
jnp
test
loop
pop
ljmp
mov
push
mov
pop
mov
inc
add
add
fnstcw
xchg
repnz
or
hlt
rcrl
fdiv
xlat
add
mov
mov
cmp
mov
les
in
icebp
popf
add
lods
and
pop
cli
ja
shrl
cmp
fs
loope
sarb
xor
sbb
and
fsts
test
jecxz
xor
aam
add
mov
ret
fsubr
in
and
sub
xchg
test
xor
inc
pop
imul
pop
std
scas
add
ror
icebp
adc
movsl
cmc
int
popa
fsubs
push
stos
sub
inc
mov
xchg
mov
shll
and
in
sbb
les
negb
mov
jle
mov
cmpb
jnp
xchg
inc
mul
and
repnz
movsl
dec
mov
aad
inc
xor
mov
fcom
cmp
adc
inc
add
lret
stc
in
lods
pop
mov
sub
cmp
cmpl
clc
add
inc
les
rol
pop
pop
mov
lahf
lahf
or
inc
mov
mov
notb
jae
mov
inc
inc
lds
sbb
push
pop
cli
lahf
outsl
cmp
lret
mov
adc
fucomp
and
xchg
pop
aaa
rol
dec
xor
mov
dec
into
hlt
cld
lods
fmull
pop
adc
out
lds
mov
and
and
pushf
fdivl
out
xor
cmp
xlat
xor
xchg
out
pop
mov
rcll
fsubrs
dec
rcll
xor
pop
cmc
and
sbb
mov
inc
movsl
fsubrl
in
xchg
leave
push
hlt
cmp
pop
lea
cmpsl
jne
test
jno
clc
fmuls
and
push
flds
stc
xchg
adc
push
mov
fmul
movsl
pop
outsl
icebp
add
mov
bound
in
sti
fxch
cltd
cmp
push
jmp
lock
xlat
add
and
pop
push
shl
jno
inc
pop
es
mov
jb
hlt
sub
std
jmp
ret
xlat
cmp
lds
hlt
sub
jle
cs
in
inc
dec
lods
inc
lock
hlt
lret
jg
pop
sbb
lret
insb
cmc
cmpsl
out
lcall
fistps
inc
fisubl
and
and
sub
fcompl
hlt
pop
sub
test
les
push
pop
mov
movsl
fldcw
inc
jmp
imul
enter
ja
repz
loope
les
out
xchg
xor
adc
movsl
std
inc
adc
or
aad
loop
jmp
cmc
imul
xchg
decl
movl
pop
jl
leave
loope
sub
sbb
jl
in
xor
fistpl
in
dec
bound
mov
arpl
fwait
les
in
pusha
shlb
repnz
pop
xchg
mov
fildl
fcom
mov
mov
inc
or
leave
jne
arpl
icebp
js
mov
add
push
int
xor
sbb
or
in
push
push
das
add
stos
stc
addr16
adc
or
aam
in
xchg
xchg
in
insl
mov
or
pop
cli
jbe
cmc
ljmp
mov
jb
and
je
or
add
sbb
xor
sub
cmpsb
and
sbb
loop
and
lret
fsub
sbb
clc
add
lods
mov
in
loope
mov
inc
jae
dec
pop
insb
add
pop
div
dec
pop
push
repz
call
clc
inc
out
jns
mov
inc
shll
idivb
or
aam
pop
mov
repz
stos
xor
int3
loope
test
cmpsl
hlt
push
shll
push
aaa
add
test
sbb
icebp
loop
sbb
pushf
push
xchg
fcos
mov
in
inc
es
cmc
in
pop
mov
hlt
mov
xchg
out
fldcw
xchg
out
cmp
push
je
leave
add
in
push
gs
mov
andl
jg
shrb
xor
mov
outsl
xchg
nop
xor
iret
fdivl
cmp
cmp
ja
sarb
pop
clc
sub
inc
clc
stos
test
jl
lock
mov
aam
adc
xchg
fidivs
addr16
mov
xchg
int3
xchg
imul
cli
cmpsl
cmpsb
cmp
ljmp
inc
lret
aaa
adc
and
repz
icebp
aad
xchg
xchg
inc
daa
jg
inc
in
mov
pop
scas
xor
movsl
rolb
xor
hlt
repz
out
dec
adc
xchg
cli
jecxz
shl
cwtl
cmc
pop
ret
jecxz
dec
add
leave
fisttpl
arpl
jl
shl
flds
inc
sbb
mov
lea
mov
cmc
cli
jne
pop
gs
out
inc
je
push
push
aas
xor
jl
mov
inc
daa
pusha
push
stc
pop
stc
cmpsb
push
lea
ljmp
lea
lret
loopne
push
mov
stos
sahf
inc
push
xor
add
jno
dec
pop
cld
rol
out
mov
ficompl
and
fwait
in
push
in
fs
hlt
cltd
mov
pop
mov
lods
pop
enter
shl
arpl
add
inc
cmpsb
mov
pmulhw
xchg
insb
hlt
inc
movsb
cld
cmpl
or
xor
hlt
inc
add
jle
icebp
fmuls
jg
jbe
jp
xlat
mov
scas
mov
push
adc
in
outsb
pop
jbe
lods
loop
cld
mov
or
enter
mov
stos
hlt
xchg
mov
xlat
mov
sub
xor
mov
nop
sti
mov
xor
jp
ret
mov
int3
fs
dec
pop
in
lods
insb
hlt
test
mov
jl
dec
mov
cmp
dec
int3
out
or
sub
stc
movsb
pop
loope
movsb
xchg
xchg
push
fs
hlt
dec
lret
jmp
inc
les
pop
jno
mov
int
sahf
jecxz
movsl
jle
mov
mov
pop
pushw
push
fxch
jns
xchg
mov
mov
fdivp
lret
mov
pop
stc
imul
xchg
fucom
adc
add
popf
movsb
add
pop
or
loop
iret
cmc
mov
mov
test
fwait
ljmp
sahf
pop
sbb
test
std
push
mull
lock
or
jno
in
daa
icebp
sahf
mov
insb
xchg
cmc
mov
cmp
xchg
push
mov
cmpsl
lds
jge
jnp
aaa
xchg
pop
fdivs
fldt
in
cmp
outsb
add
bound
jnp
inc
push
sbb
and
jo
enter
dec
scas
int
lods
xor
jl
ds
decl
loop
xor
xor
fadds
rol
imul
xor
or
mov
xor
jb
and
inc
es
add
or
xor
aaa
fucom
stos
ljmp
popa
hlt
jl
push
add
ret
ss
xchg
dec
fnstenv
lods
xorb
dec
fstps
inc
loop
loopne
jl
hlt
ds
adc
mov
sbb
jb
or
insb
repz
fisubrl
sbb
rcrb
aas
xchg
test
adc
hlt
add
sbb
dec
ljmp
hlt
aad
ret
lret
adc
call
inc
bound
jae
into
push
mov
je
loop
adc
fbstp
mov
es
out
in
les
notb
inc
xor
pop
repz
mov
dec
into
add
dec
ds
and
mov
sbb
sub
outsb
addb
mov
dec
xor
ficomps
out
adc
cmpsb
push
push
mov
psllw
gs
push
pop
xchg
xor
pop
lock
lock
mov
dec
inc
inc
dec
add
cmp
fnstcw
mov
pop
xor
loopne
xadd
dec
shlb
shl
dec
cwtl
inc
insb
and
xor
pop
adc
mov
cmova
shrb
xor
xchg
jo
mov
add
cmp
lea
jmp
and
les
into
add
mov
adc
in
jle
out
mov
adc
hlt
pushf
add
jae
aad
or
add
int
into
fisubrs
or
add
fsts
jmp
pop
repz
leave
icebp
int
stc
or
mov
popf
or
imul
fwait
lahf
fsts
push
ror
jo
sbb
jp
inc
rcr
cmp
int3
cmp
pop
fcmovb
lods
loop
stc
or
xchg
fstps
je
adc
popa
sbb
mov
and
sub
mov
adcl
sbb
lods
fcomi
and
fcmove
jmp
arpl
inc
ficoms
pop
stc
fxch
xchg
ret
xchg
xor
dec
push
movsb
dec
cmp
ret
xor
add
fisttpll
test
jp
cmp
hlt
pop
clc
add
leave
rol
fmuls
and
rol
mov
push
cmp
lock
les
lds
sub
les
enter
cmc
test
sbb
lods
rep
mov
mov
add
bound
loopne
repnz
sub
lea
nop
jne
imul
and
sar
adc
gs
rol
adc
add
mov
pop
or
sbb
aam
push
pusha
std
js
jp
cltd
popa
pushf
fmull
leave
in
imul
sub
addr16
mov
jmp
dec
cmp
rolb
sbb
rorl
fmulp
loopne
mov
out
add
pop
insl
mov
xchg
fucom
dec
insb
mov
js
lret
push
les
cmpsb
pop
mov
mov
add
scas
popf
in
outsb
and
inc
js
not
mov
xchg
cmpsb
jno
inc
rorl
loope
mov
cwtl
xor
add
jecxz
xchg
sarl
aad
pop
dec
mov
rolb
xchg
dec
pushf
inc
xor
xor
lods
in
in
in
out
loope
outsb
fldl
fisubl
call
repz
arpl
pop
mov
sbb
mov
dec
inc
cs
test
xchg
shll
daa
mov
mov
in
xchg
lahf
add
xchg
aam
push
jns
enter
ret
inc
dec
loope
test
nop
xchg
jae
loope
lods
leave
cmpsl
test
movsb
or
mov
sbbl
das
mov
out
aaa
mov
fsubp
xchg
jmp
xchg
clc
add
icebp
inc
fsts
lods
xor
imul
mov
rolb
xchg
pop
fnstenv
jge
bound
xchg
shl
roll
mov
add
xchg
xlat
xor
shl
imul
je
and
adc
loopne
mov
adc
xchg
mov
mov
xor
lret
mov
jg
mov
lret
push
mov
pop
push
les
shr
cmpsb
mov
call
enter
xchg
in
xchg
mov
lret
ss
test
dec
adc
jb
fsqrt
testl
sub
inc
icebp
pop
adc
pop
fld
xchg
mov
out
add
fwait
sub
in
sbb
hlt
or
fs
les
xchg
subl
icebp
je
inc
fs
lret
fsubrl
jecxz
push
cmp
fisubl
cmp
push
scas
mov
filds
mov
in
leave
lret
jbe
xlat
and
xor
cmp
xor
int
push
adc
cmpsb
iret
mov
jo
mov
add
gs
testl
add
xlat
adc
push
mov
cmpsb
and
xor
push
mov
or
pop
cli
mov
fists
adc
mov
fmuls
cmpsl
in
push
lret
inc
mov
in
jge
jb
sub
fstpl
in
lds
nop
movsb
mov
push
fwait
gs
adc
pop
inc
cwtl
xlat
std
xor
add
mov
cmp
or
loop
ficoms
ljmp
cmp
loop
and
adc
lret
sahf
push
gs
stc
cwtl
adc
mov
testl
insb
sbb
lea
mov
rclb
call
inc
xchg
push
or
vpsubb
je
mov
xchg
out
insb
shrl
int3
jb
sahf
mov
pop
daa
iretw
cmp
out
std
jns
int3
xchg
icebp
xchg
out
and
add
repz
mov
mov
icebp
ficomps
out
lcall
push
jns
iret
rorb
dec
sub
fimull
fdiv
in
fs
push
jmp
iret
lds
iret
inc
stos
jns
sti
mov
adc
sbb
xor
push
mov
les
xchg
mov
adc
loop
aam
insb
pop
pushf
fisubl
cmpsb
jge
mov
xor
int
pop
lods
in
dec
test
ss
js
sub
mov
inc
out
jnp
sbb
flds
ret
and
adc
in
je
xchg
pop
arpl
aaa
ficoml
pop
cmp
inc
loope
dec
mov
lock
fldcw
mov
inc
xor
pop
or
add
loop
enter
daa
pop
fstp
rorl
nop
sbb
aad
xchg
aad
inc
lds
push
push
testl
stos
loop
popa
scas
sub
dec
jae
adc
or
cli
push
push
out
mov
scas
ret
testl
pushf
add
cmp
jb
std
jecxz
fabs
call
ret
popf
sub
add
mov
xor
add
cli
rcl
movsb
cmp
or
ljmp
mov
not
sub
add
sub
xor
push
imul
xchg
loope
sbb
mov
inc
add
out
cmp
jmp
shll
cmp
sbb
shr
or
sbb
push
mov
lea
aad
out
outsl
push
adcl
stc
pop
mov
fdivl
xor
pop
adc
xchg
or
fildl
sti
mov
mov
push
lock
cmp
loop
mov
dec
mov
adc
jg
mov
rcll
sbb
fidivs
insb
jecxz
xor
xchg
aad
fisttpl
inc
push
cmp
push
xchg
hlt
xchg
das
inc
pusha
fsubrp
enter
fadd
rcrl
add
shr
out
dec
mov
xchg
out
fs
rcll
aad
adc
xchg
dec
js
inc
adc
mov
in
or
nop
lahf
frstor
jno
xor
repz
clc
xchg
cmp
into
mov
out
fnstenv
adc
shll
and
add
mov
sbb
mov
movsb
fnsave
fcmovu
pop
inc
fsubrs
lret
lds
mov
and
imul
xchg
loop
loope
test
inc
jecxz
rcll
lret
out
in
das
scas
popf
hlt
fs
insb
out
sbb
je
shlb
and
pop
add
fcomi
sbb
push
aaa
js
fcoms
gs
repnz
xor
dec
push
xor
mov
jecxz
fcom
cmpsl
sub
loop
xor
and
lock
mov
fldcw
out
out
out
js
in
hlt
lret
sub
movsl
jle
xchg
jg
xor
xchg
jb
popa
or
fnstcw
orb
test
imull
mov
into
in
xchg
cmpsl
lahf
cmc
xchg
outsb
testb
es
xor
or
mov
test
in
shlb
fdivs
and
add
adc
or
dec
cmc
hlt
test
or
dec
shll
jne
pop
insb
les
dec
movsl
fdivp
mov
mov
out
jns
movsb
in
cwtl
sub
hlt
adc
xchg
ret
push
out
or
jne
out
pop
sub
pop
lds
jmp
iret
mov
in
fwait
call
jne
das
int3
cmp
jmp
xchg
push
jno
xchg
insl
and
push
xorl
mov
and
or
sub
call
inc
std
push
jg
mov
test
rorb
cmp
mov
loopne
adc
sub
cmp
inc
stos
mov
jle
push
call
push
daa
push
out
scas
dec
adc
jb
clc
aam
loope
flds
call
pop
movsl
cmp
neg
in
in
dec
sub
test
testl
mov
jl
cmp
xchg
pop
fcom
sbb
pusha
aaa
xchg
pop
into
dec
jns
test
dec
fucomp
mov
stos
jp
cli
out
adcl
xor
cmp
lea
add
popl
push
cld
mov
int3
xchg
cmc
xor
lock
in
pop
movsl
mov
sbb
sub
sbb
xchg
lds
insb
test
cmp
test
or
cltd
jge
jecxz
mov
into
gs
ret
sub
out
lret
inc
jle
push
push
fsubrl
fadd
js
xlat
shrl
cwtl
loop
gs
in
ljmp
out
dec
icebp
js
cmp
jne
fidivs
cmc
adc
and
xchg
mov
adc
cmp
jecxz
mov
cltd
push
lock
adc
mov
ljmp
ja
das
lret
in
mov
xor
cmc
jl
ret
out
or
loop
mov
jecxz
adc
rcr
inc
popa
outsl
sarb
decb
push
subb
push
xchg
test
push
loopne
pop
xchg
mov
lods
mov
mov
hlt
dec
hlt
xchg
and
xor
fiadds
dec
pop
daa
or
xchg
sbb
repz
addr16
mov
fdivp
mov
ljmp
hlt
dec
aad
mov
inc
aas
lea
cmp
xchg
push
rcll
popf
fnstcw
cmp
cmp
das
ljmp
adc
out
scas
inc
cli
mov
loop
scas
pop
push
sbb
sbbl
fs
jo
dec
lahf
sbb
enter
xor
add
hlt
mov
stc
in
jg
loopne
je
mov
insl
iret
ds
fstps
lock
fnsave
dec
enter
fcomps
insl
aam
adc
aad
in
xlat
add
hlt
mov
ds
and
mov
or
sub
cmc
jecxz
gs
and
add
jno
je
cmp
mov
aad
mov
push
rcll
movsb
adc
loop
aad
add
lods
mov
or
sbb
sub
dec
mov
stos
and
das
mov
mov
icebp
push
lock
shl
jo
loope
or
pop
ffree
cwtl
ret
rorl
icebp
push
fwait
loopne
rcr
cld
adc
lock
movsl
mov
nop
jg
jns
mov
popa
fsubrl
mov
xchg
out
sbb
nop
cs
cmp
push
idiv
mov
insb
mov
dec
jg
add
and
in
jmp
sbb
movsb
cwtl
mov
cmc
and
movsl
mov
add
xchg
xchg
bound
clc
mov
repnz
lret
les
and
pushl
repnz
fdivs
push
xchg
outsb
movsl
aam
sbb
fs
sub
xlat
movsb
mov
pop
add
mov
es
jle
fidivl
add
arpl
mov
ds
push
pop
push
fcmove
adc
aaa
fcompl
ljmp
ljmp
in
stos
push
dec
insb
shrb
rorb
cmc
hlt
cmp
add
or
scas
pushf
dec
mov
cld
mov
cmpsl
and
out
pop
movsb
mov
outsb
ja
shll
and
lcall
scas
int3
xchg
movsb
lods
fcoms
xchg
insl
sti
pop
ret
dec
cmpsl
and
push
dec
pusha
in
int3
adc
sbb
call
pop
xlat
fpatan
stos
mov
jl
xchg
sub
les
cmc
mov
sahf
jge
aaa
xor
es
stc
movsl
jge
les
repnz
mov
push
mov
ljmp
movsl
in
jns
inc
out
es
out
xchg
adc
cld
ja
xchg
in
out
xor
lea
hlt
das
and
jns
imul
xchg
mov
rcll
fdivr
fiadds
shr
cwtl
jmp
iret
mov
nop
and
xchg
mov
mov
mov
and
shll
mov
fbld
hlt
xchg
scas
cs
js
xchg
mov
mov
jmp
leave
cli
mov
inc
mov
hlt
fistpll
enter
push
std
bound
inc
cltd
movsl
mov
cmp
icebp
xchg
shll
in
addb
dec
mov
lcall
push
xchg
jo
insb
outsb
les
lds
xchg
xchg
ljmp
pop
push
cmpsb
add
mov
mov
lcall
xchg
les
dec
out
imul
out
cs
cwtl
outsl
pop
hlt
orb
mov
sbb
negl
jecxz
cmpsl
mov
mov
fs
int3
pop
stos
dec
push
lea
in
testl
xchg
data16
rclb
out
add
icebp
push
loop
jl
out
sbb
scas
shl
aad
push
ss
imul
or
es
fstpt
sbb
lods
jne
hlt
add
scas
mov
adc
add
xchg
loop
scas
hlt
push
ret
mov
inc
push
cmp
push
cmp
mov
cwtl
insb
fiaddl
iret
dec
ret
mov
adc
sbb
and
push
loope
in
mov
sbb
mov
xchg
je
mov
xor
mov
xchg
out
ror
gs
in
subb
inc
push
lret
cld
inc
inc
and
mov
jnp
jo
fstps
pop
dec
out
mov
in
inc
jnp
fprem1
jecxz
mov
int
push
mov
push
lods
adc
and
sbb
into
outsb
js
add
pop
cmpsl
jmp
cmpl
lcall
lret
jle
add
dec
jo
sub
sub
jmp
loope
stc
clc
push
or
mov
setl
in
pop
jmp
sti
hlt
mov
mov
mov
imul
mov
movsl
sbb
adc
cmp
rclb
test
sbb
movsl
sahf
fcomps
test
xor
lods
dec
popa
mov
mov
fneni(8087
sbb
js
jg
and
test
mov
push
in
xlat
xor
pop
clc
add
iret
icebp
pop
mov
cmp
clc
in
in
out
hlt
dec
mov
mov
imulb
mov
and
cli
jge
fdivl
push
push
rcrl
ret
pop
sbb
pop
clc
xor
add
arpl
push
adc
int
fcmovbe
xor
lret
and
dec
push
pop
dec
xchg
xchg
in
icebp
dec
daa
int3
js
ret
and
jecxz
sub
or
adc
hlt
jmp
hlt
jmp
and
cmp
or
fs
pop
repz
inc
xor
je
mov
idiv
jnp
aam
std
jp,pn
mov
out
je
rclb
xor
fldcw
aas
push
dec
jecxz
cli
adc
mov
out
dec
push
xor
xchg
jle
lds
fstps
in
minps
pushf
adc
movsl
fs
in
jae
sti
lods
jbe
inc
adc
lret
push
xlat
incl
xor
lret
iret
add
jg
pop
cld
in
rorl
sarl
cmp
inc
test
movsl
in
int3
andl
in
xchg
jns
rcrb
loope
nop
out
push
fldenv
popa
xchg
cmpsl
sub
cltd
outsl
les
inc
ljmp
lds
push
in
add
xor
or
jg
push
mov
movsb
lcall
ss
rorl
leave
mov
inc
adc
in
sub
insb
hlt
xchg
repz
daa
les
jp
roll
fsts
mov
lret
sbb
movsb
clc
stc
fs
fldl2e
mov
rcrl
rol
rcrb
cltd
xchg
sub
adc
or
fstpl
aaa
lcall
mov
repz
mov
cltd
rclb
out
nop
hlt
push
les
mov
jb
mov
push
dec
jmp
jl
stos
sti
push
add
mov
add
rcll
lods
lret
negl
cld
or
cmp
gs
cmp
fsubrs
fnsave
sbb
daa
xchg
xchg
mov
mov
mov
shrl
or
fs
dec
test
imul
flds
sub
xchg
mov
aad
shrb
fld
mov
mov
push
lods
cld
in
xchg
mov
repz
pop
out
fdivrs
int3
popf
out
and
bound
ficoml
xor
xchg
fldcw
add
push
push
dec
cli
loope
imul
xor
adc
or
and
cmc
je
add
lock
add
in
stos
adc
jns
shl
lods
dec
shr
icebp
sub
jns
insl
fmuls
sbb
adc
fdiv
jecxz
testl
call
jnp
fwait
mov
jmp
arpl
inc
test
jp
fstps
or
cmc
into
enter
pop
loop
in
mov
fstps
iret
cmp
xchg
add
loopne
les
push
imul
movsl
rcr
lcall
cmpb
std
jecxz
out
inc
or
por
cmp
and
movsb
mov
loopne
or
out
mov
ret
mov
xchg
fcomip
lds
push
ret
jb
shl
mov
addr16
enter
dec
adc
hlt
mov
adc
in
cmpxchg
push
and
lock
gs
divb
popf
in
test
hlt
scas
int3
addr16
lds
in
fidivrs
icebp
adc
je
dec
mov
inc
mov
xchg
inc
clc
pop
lcall
pop
sub
or
pop
aam
add
and
fisttpll
call
loop
test
xchg
daa
lods
les
sub
jl
jg
and
and
int
jno
fs
and
sbb
shl
xor
inc
mov
sub
les
sub
aaa
movswl
in
mov
daa
cs
gs
xor
push
mov
inc
or
movsb
lcall
repz
je
flds
scas
out
lahf
out
loope
mov
ljmp
or
cmc
inc
xchg
enter
movsb
jno
in
in
mov
xchg
in
mov
fdiv
jbe
and
xchg
iret
sub
int3
add
les
and
jb
jmp
cmp
and
sbb
stos
dec
push
out
loop
pop
cmpsb
out
stos
lods
in
jb
ss
lds
jp
aad
iret
pop
ds
lcall
std
cwtl
xlat
pop
xorb
in
sbb
mov
xor
in
roll
in
inc
sub
mov
outsb
push
ret
std
popa
iret
jb
fstps
std
inc
cld
ja
fldenv
incl
or
jmp
stc
shlb
mov
fimuls
mov
rol
mov
xchg
pop
cmc
inc
jnp
shrb
scas
mov
gs
loopne
orl
enter
lret
pop
in
sbb
loop
jp
mov
ljmp
xlat
xlat
shll
push
xchg
mov
jne
cmp
jne
mov
out
dec
out
hlt
mov
test
sub
mov
sar
es
lahf
imul
in
mov
and
ret
pop
fdivrs
cmp
fnsave
je
insl
ja
flds
rcrb
xchg
repz
in
dec
mov
xchg
fnstcw
enter
insb
pop
pop
in
cmp
fstps
adcl
lods
data16
dec
scas
and
lret
lds
mov
shll
and
popa
jmp
iret
outsl
icebp
js
cmp
movsl
dec
sub
xchg
push
mov
sub
dec
loope
je
loop
inc
jb
test
mov
in
dec
nop
hlt
push
add
lods
test
in
cltd
fildl
cli
jle
adc
lahf
adc
rclb
cs
dec
in
loope
inc
icebp
xchg
sbb
sbb
jmp
mov
lcall
push
rcr
fnstenv
rcll
rcr
es
daa
sbbl
shll
fs
jle
inc
aam
ficomps
xchg
inc
fs
and
test
dec
ffree
rcrb
gs
pop
nop
loope
in
dec
call
je
je
push
sbb
cwtl
xor
movsl
es
test
xchg
popf
jmp
cmpl
mov
js
inc
mov
pop
in
int3
stc
dec
sbb
mull
loope
ds
push
aad
lds
stos
mov
fsubl
xchg
cld
inc
cmp
ja
pop
cmc
in
jmp
add
sub
popf
fsubrs
lret
in
stos
pusha
push
jno
sbb
xchg
mov
call
mov
sub
scas
cmp
stc
cmc
sub
in
jmp
addr16
stos
push
mov
ret
shl
pop
jns
add
cmp
inc
loop,pt
push
imul
jae
gs
movsb
ret
hlt
xchg
roll
ljmp
les
cwtl
or
fldenv
and
mov
cltd
test
pop
in
scas
out
or
mov
call
int
sub
aad
adc
and
cmp
mov
and
dec
xchg
xadd
and
mov
jle
test
stos
les
insl
inc
xor
lret
call
cltd
push
je
pop
push
std
les
push
aam
fcomi
sbb
popf
mov
les
push
jmp
cmc
imul
repnz
lahf
js
or
pop
xchg
dec
pop
scas
jmp
lods
dec
and
mov
push
dec
fsubl
imul
loop
jg
rcll
lock
jl
pushl
hlt
inc
jns
rorw
lcall
jg
mov
lods
mov
mov
xor
jmp
call
mov
es
jmp
mov
fs
pushf
out
or
mov
js
repz
hlt
aaa
lret
cmp
mov
mov
into
and
pop
popf
sub
popa
stc
mov
or
pop
cmpsb
cli
cld
stc
aad
in
mov
bound
fcmovne
push
pop
out
in
push
fsubrs
adc
lret
jmp
cmpsl
les
push
xchg
pop
es
fidivrs
and
lods
shll
fimull
aam
loopne
jnp
mov
lods
and
movsl
ljmp
das
stc
adc
mov
in
leave
gs
push
mov
push
sub
out
sbb
xor
bswap
pop
clc
mov
outsl
push
and
sub
loop
test
lds
jno
xor
jbe
mov
das
fsubr
in
fstpl
repnz
jb
sti
and
in
jle
movsl
mov
xchg
in
in
xchg
in
push
out
roll
cmpsb
aad
or
iret
add
fisubrs
andb
jl
fsubs
fcoms
lret
mov
enter
faddp
or
xlat
fdivrs
sub
leave
push
into
getsec
int3
cmp
xlat
test
cltd
mov
test
out
dec
jl
sub
out
mov
cmp
add
out
jo
lret
sbb
fcoms
jne
fyl2xp1
inc
in
xchg
in
inc
fnstcw
neg
xchg
jns
dec
es
and
out
inc
fstpt
dec
mov
enter
xlat
jae
inc
les
loope
adc
pop
and
test
and
test
pushf
xor
in
push
shll
ljmp
ljmp
notb
shlb
inc
jmp
mov
lcall
insb
inc
or
pop
mov
cmpsb
jecxz
mov
dec
shlb
and
adc
and
push
xor
jmp
sub
imulb
fwait
xchg
inc
jbe
mov
fldenv
adc
in
jecxz
pop
adc
les
ret
mov
xchg
jge
mov
mov
cmpb
imul
inc
test
lahf
aad
in
add
mov
nop
in
sub
icebp
hlt
xchg
imul
jne
test
push
and
mov
pop
loopne
std
pop
add
lret
cmc
sbb
push
subb
in
imul
out
roll
lds
in
ffree
outsb
arpl
fadd
scas
aaa
addr16
arpl
or
mov
fisttpll
push
inc
flds
pop
xor
xchg
xchg
lds
sub
dec
or
sti
xchg
and
xchg
andl
into
adc
cli
shl
lret
dec
xchg
inc
mov
aaa
push
fcompl
lods
add
outsb
test
jge
enter
loope
stc
aaa
jp
cmc
mov
pop
out
add
add
daa
clc
out
les
leave
je
cltd
es
outsl
stos
xor
fidivrl
lds
stos
pop
cmp
or
loop
lock
and
shl
shll
hlt
fbstp
aaa
fldcw
inc
jmp
adc
mov
in
std
ja
iret
inc
stos
dec
add
push
gs
sbbl
pop
dec
dec
icebp
fnstenv
sti
dec
loope
rorb
in
test
mov
fsubrs
cmpsl
test
mov
jmp
mov
mov
jne
sub
fsub
push
dec
xlat
clc
hlt
mov
and
iret
sub
repz
into
push
das
fldpi
xchg
in
mov
mull
ret
mov
iret
pop
jns
fcoms
fstps
icebp
jno
add
test
mov
ret
and
arpl
sub
les
cltd
jge
int
push
cmp
scas
insb
mov
repnz
leave
scas
ret
inc
mov
sub
and
and
fsubrs
fistpll
in
hlt
leave
fistpll
hlt
ljmp
or
xorb
lret
pop
and
pop
insl
jno
scas
inc
loope
push
push
and
mov
jno
push
gs
cld
dec
fmuls
movsb
pop
daa
adc
mov
lock
mov
sti
mov
bound
cmc
cmp
cmp
int
jge
in
inc
ret
out
roll
divl
inc
sub
cld
call
jae
jnp
shr
jge
sub
pop
pop
insb
fisttpl
mov
fnstcw
test
cmp
in
int
mov
loop
lds
les
test
pushf
xchg
movsl
clc
xlat
loopne
rclb
ljmp
rorl
pop
jmp
cmpsl
les
jb
fidivs
hlt
aaa
add
pushf
inc
inc
shl
les
in
mov
dec
dec
arpl
pop
fidivs
cmp
cmpsl
pusha
outsb
rcl
rcll
fisubl
xlat
ficomps
jns
loope
loope
mov
fisubrl
test
sub
loop
xor
sub
or
mov
je
repnz
loope
pop
push
xor
mov
int
sub
sbb
gs
lods
in
jbe
mov
in
in
push
cli
or
loope
cld
push
jne
jmp
fisttps
jle
push
xchg
lock
adc
jg
call
xchg
lds
cli
out
jbe
in
call
or
push
xchg
into
lret
test
dec
dec
inc
push
inc
adc
dec
fwait
popa
push
nop
pop
shl
mov
add
cmc
pop
repnz
jl
rolb
cs
fwait
and
and
hlt
jp
cmp
add
cmp
fincstp
stc
mov
cmp
sub
in
jae
xchg
pushf
dec
or
fsub
mov
loop
xchg
hlt
stos
les
aam
je
hlt
sbb
add
sbb
sbb
jl
les
mov
mov
insl
or
sbb
add
sahf
dec
jo
mov
push
ljmp
adc
or
insb
pop
lea
xchg
ror
fcompp
lds
lret
in
ja
cmc
in
sbb
setb
out
or
jo
cmc
int3
std
or
insl
fldcw
mov
push
jmp
xor
push
xchg
cmpsb
xchg
fnstcw
je
loop
xchg
mov
xor
iret
mov
dec
jne
nop
mov
sub
fldenv
cmpb
ficoml
and
in
addr16
enter
inc
fidivs
mov
adc
push
lcall
es
inc
icebp
fnstenv
in
div
std
add
out
pinsrw
out
mov
fnstenv
aaa
adc
cltd
add
in
push
lods
cli
hlt
cwtl
daa
rcrl
fldcw
insb
mov
hlt
div
ret
mov
lret
inc
inc
sub
mov
fnstcw
ds
pop
icebp
insl
lret
test
les
loopne
fcoms
jnp
adc
mov
movb
cmp
push
push
jecxz
stos
or
mov
cmc
mov
mov
cmp
aad
pop
scas
ficoml
sbb
mov
add
dec
xor
mov
and
jle
mov
xchg
scas
in
cmp
pop
gs
icebp
sbb
mov
jle
mov
aad
dec
mov
cmp
cmc
hlt
lea
xchg
xchg
xlat
add
aam
dec
and
lock
sbb
jp
xchg
pop
xor
les
gs
mov
pop
fwait
mov
add
mov
in
js
sub
arpl
or
ds
out
ret
loopne
loope
hlt
xchg
xchg
incl
sbb
out
jecxz
in
in
addb
sub
adc
pushf
les
pushf
push
cmp
sbb
adc
cmp
mov
sub
push
add
xlat
std
orl
pop
xlat
xchg
in
or
cmp
xor
dec
rcrl
movsb
inc
fs
repz
sarl
shl
out
cli
addr16
mov
fisubrl
push
ret
mov
test
shl
add
inc
push
out
lret
push
scas
in
fdivl
xor
sub
mov
mov
or
repnz
aad
or
out
repnz
dec
add
lahf
icebp
ret
adc
lods
in
clc
dec
mov
jle
hlt
lods
rcrl
faddl
in
leave
mov
inc
fisubs
lret
xor
daa
fstpl
inc
enter
fnstcw
xchg
ror
cmp
mov
dec
inc
je
jns
xor
hlt
fs
mov
call
inc
sahf
dec
cmc
push
add
mov
in
dec
out
push
adc
ret
jecxz
ss
arpl
xlat
out
bound
in
int3
jne
mov
scas
pop
inc
mov
pop
out
xor
sbb
outsb
xor
leave
les
fmull
in
xor
cltd
leave
and
cltd
das
fxch
fs
xchg
test
rorl
push
pop
fldl2e
insl
cltd
push
ret
push
inc
mov
xchg
pop
lods
xchg
lret
lods
pushf
test
les
xchg
mov
xor
dec
enter
jl
push
cltd
push
mov
idivl
xor
fcoml
les
pop
and
testl
pop
mov
pop
adc
int
aam
add
cli
fcoms
test
mov
popf
fmulp
shr
jns
and
sub
push
out
jl
jnp
faddl
fs
inc
mov
ja
les
mov
leave
das
cmpl
xchg
fcmovb
push
std
in
arpl
int
rcrb
mov
mov
push
in
repnz
sub
add
sub
stc
out
jmp
flds
mov
mov
pop
sub
inc
xor
out
mov
test
mov
push
nop
int3
fimull
sbb
push
sbb
in
rcrb
cmp
mov
fisubl
cmp
xor
shlb
sbb
enter
lods
fdivrl
test
mov
dec
and
filds
test
xor
cld
mov
add
mov
ficoml
hlt
repz
nop
or
pop
mov
hlt
insb
dec
inc
and
adc
jl
cwtl
pop
lret
js
les
aam
mov
gs
push
mov
dec
lea
in
push
in
fsubs
jns
cli
icebp
rcr
in
and
scas
push
dec
cmc
mov
dec
push
adc
mov
jle
je
mov
hlt
and
adc
pushf
fidivrl
cmc
mov
lahf
sti
arpl
inc
fsubl
xchg
ficoms
xor
ret
loope
ficompl
pusha
ret
iret
push
dec
hlt
std
mov
xchg
sbb
inc
or
loop
out
jne
rcll
add
shl
ljmp
dec
stc
mov
mov
xchg
ret
fwait
call
imul
push
aam
sahf
mov
in
xor
pop
mov
mov
in
test
jge
icebp
sbb
stos
jbe
cwtl
popf
add
in
adc
stc
mov
iret
ret
fcomi
std
out
sbb
clc
sar
pushf
ds
movsl
push
dec
fsts
lahf
out
adc
ja
cld
loop
adc
pop
ja
jne
shl
hlt
lds
xor
inc
cs
out
adc
out
fidivl
lcall
mov
inc
fldenv
clc
js
movsl
cli
call
test
imul
xor
aad
fldcw
aam
sete
dec
or
mov
nop
cmp
xchg
jmp
test
xlat
xor
xchg
jl
mov
loop
nop
jne
pop
and
sub
shrb
jmp
jg
test
sub
daa
pop
mov
adc
and
shll
hlt
xchg
and
inc
mov
mov
ljmp
leave
and
cmc
xchg
rcll
insl
call
push
pop
lods
adc
std
jbe
jg
sarl
std
cmpsb
cmp
pop
repz
push
scas
xchg
cmc
add
lret
add
das
repz
adc
lods
les
rcl
mov
mov
insl
shlb
mov
inc
xchg
pop
xchg
ja
add
orb
mov
push
out
adc
mov
fdivs
jp
or
pushf
out
shll
je
stos
mov
loop
mov
sub
push
add
gs
test
test
popf
sbb
cwtl
pop
cmp
cmp
les
sbb
lods
lods
fnstcw
jns
mov
in
or
arpl
sub
int3
pop
repnz
pop
movsb
sub
repz
jne
cs
adc
int3
jno
dec
enter
sbb
stc
xchg
xor
cmc
mov
pop
hlt
cmc
insb
cmp
inc
cmp
iret
cld
aaa
inc
mov
test
push
mov
push
mov
fidivrl
and
jb
jne
in
jl
notb
cmp
in
out
inc
cli
adcl
sbb
add
mov
xor
add
fsubs
push
adc
pop
fnstenv
xlat
vpcmpgtw
rol
das
ficomps
jae
and
inc
mov
mov
cmp
in
out
aam
inc
shl
repz
aam
sbb
adcl
in
nop
xchg
imull
cltd
std
movsb
in
cmp
lds
movsb
mov
pop
cli
dec
xchg
pop
in
or
and
jle
in
inc
adc
mov
adc
sbb
sbb
jae
adc
in
les
rol
mov
fldcw
mov
xchg
mov
push
jmp
mov
rcrl
fsubl
call
les
fwait
out
push
test
lds
dec
push
mov
les
fcompl
in
xchg
ret
xchg
out
mov
cmpsb
adc
std
lods
sub
pop
add
pop
fnstcw
das
cwtl
adc
in
pop
aas
les
cwtl
push
repz
lahf
call
clc
movsl
mov
movsl
mov
les
inc
adc
les
pop
xchg
scas
sub
shlb
mov
jbe
push
or
imul
leave
ljmp
pop
sbb
cmp
jmp
data16
rcl
divps
rolb
in
and
in
xor
dec
stos
pop
xchg
call
in
hlt
push
in
adc
ds
scas
les
sbb
test
xchg
ficoms
scas
mov
add
das
arpl
fmul
mov
cmp
add
in
push
inc
jno
hlt
rcl
jg
sub
mov
shl
mov
mov
and
inc
xchg
jnp
data16
and
fadds
lods
cmc
insb
lods
addr16
sbbl
in
cmpl
fadds
in
loope
or
in
lds
mov
sbb
cmpsb
add
decl
and
mov
fnstenv
dec
sbb
cmpsb
jae
stos
hlt
mov
jnp
aas
push
add
out
inc
scas
mov
dec
dec
or
aad
push
leave
cmpb
in
lods
sahf
push
mov
push
xchg
xchg
or
ret
mov
lds
dec
mov
loope
les
jb
arpl
dec
jne
jns
inc
movsb
ret
enter
vmulpd
mov
jno
mov
mov
insb
mov
mov
repnz
cmp
rorb
mov
test
sti
popa
jne
mov
out
mov
fsubl
shll
pusha
call
pop
cmp
arpl
jmp
test
loopne
pop
testl
and
iret
or
stc
fildl
pop
and
insl
jno
popf
cmp
rclb
sub
dec
fiaddl
jmp
cmp
movsb
inc
je
insl
push
add
les
aaa
mov
adc
adc
andb
cmpsl
mov
stos
pxor
out
pop
xor
cmp
ret
push
xchg
lds
aam
inc
and
xchg
cmc
addb
jmp
push
stc
rclb
fdivs
imul
aaa
in
rol
outsb
hlt
add
call
mov
mov
test
shlb
notb
lock
ficomps
mov
aas
pop
adc
iret
sub
xchg
icebp
jmp
add
mov
mov
mov
fnstenv
lcall
xchg
lods
push
lret
add
cwtl
pop
inc
iret
sbb
cmpsl
pusha
push
stc
cmp
jg
out
lods
loope
push
sbb
and
flds
ret
subl
int
shlb
mov
lods
add
cmp
testl
movsb
mov
mov
add
cmc
out
mov
shll
sarb
in
lcall
or
fidivl
test
xor
fcoml
loopne
les
out
inc
cmpsb
in
inc
pop
out
hlt
ljmp
lahf
std
les
aad
cs
mov
cmpsb
fptan
push
icebp
mov
push
les
add
add
stos
movsl
cmc
xchg
lea
adc
xor
jg
push
push
iret
in
and
mov
sbb
and
mov
mov
push
cwtl
fisubrl
fxch
mov
mov
outsl
in
int3
push
mov
fs
ficomps
les
sbb
lret
leave
test
cld
shrl
fcomi
nop
das
push
or
pop
xlat
add
add
movsl
and
sti
mov
pop
hlt
loope
cmp
adc
daa
jbe
sub
lds
mov
dec
shl
movsb
xchg
and
or
fadds
fwait
hlt
fcoml
adc
xchg
andb
out
ret
dec
mov
xchg
fdiv
pop
popa
or
adc
xor
pop
add
inc
xchg
fbld
cmc
call
cmp
xor
and
in
std
loop
add
sti
xchg
fnstcw
aam
push
int3
movsb
les
nop
jecxz
pop
imulb
es
ljmp
and
cli
les
mov
fldcw
in
loopne
mov
inc
dec
in
add
xor
sub
popa
hlt
mov
test
cli
hlt
and
testl
lcall
and
sbb
pop
jmp
mov
movl
shlb
cmpsl
pop
mov
xchg
popf
aam
notl
sbb
inc
iret
lock
es
repz
dec
cs
fsts
add
fldl
cmpsb
aad
les
xchg
cmp
out
xor
push
call
cmc
insl
xchg
pop
leave
mov
xor
xor
loope
lret
xor
dec
into
popa
fsub
fsts
sar
jb
adc
in
add
lds
dec
mov
stos
mov
sub
ficomps
xchg
inc
lret
int
leave
test
mov
inc
aad
fildl
mov
or
sahf
ret
xchg
stc
int
sbb
jmp
aas
mov
in
mov
or
fwait
aam
adc
mov
jp
push
test
cwtl
sti
mov
dec
jno
mov
fnstcw
mov
inc
sbb
mov
gs
sub
pop
ljmp
xorl
xor
and
sahf
int
sbbb
leave
mov
popf
xor
or
outsb
xor
popa
out
sbb
rclb
popf
insb
les
mov
str
ljmp
nop
test
push
loopne
ret
mov
mov
lock
testl
movd
inc
out
in
lods
shrb
cmp
jb
pushf
scas
cli
les
push
sub
fneni(8087
push
hlt
dec
mov
sbb
push
adc
les
rcr
idivb
cmpsl
fisttpll
and
jne
or
xchg
adc
aam
mov
aam
fadds
hlt
adc
divps
ret
cmp
repnz
xbegin
shr
and
in
adc
add
lods
mov
lahf
rcrl
xchg
push
mov
mov
loop
pop
cmp
cmc
jmp
sahf
lods
add
add
bswap
add
in
jnp
push
les
ds
in
outsb
movsb
in
mov
fimuls
shl
adc
fstpl
aad
xor
push
dec
lret
push
push
notb
pmaddwd
mov
fwait
pop
negb
pop
cmpsb
sbb
aam
pop
test
sbb
jg
mov
and
push
shll
xchg
dec
int
negb
movsb
hlt
jnp
dec
test
lock
sti
jb
mov
or
fldcw
call
and
stos
mov
dec
cltd
aam
inc
inc
pop
pop
adc
inc
mov
mov
shl
lea
mov
adc
int3
rcl
and
je
jge
jae
scas
enter
nop
loope
mov
inc
ret
call
jns
jmp
in
xchg
xchg
pop
outsb
and
pop
in
mov
mov
cmp
mov
scas
add
je
ret
mov
jecxz
cmp
dec
insl
mov
in
pop
cmp
push
mov
addr16
mov
inc
enter
xchg
sbb
and
outsl
cmp
pushf
lret
or
mov
mov
fsubr
mov
aad
mov
or
add
in
ss
mov
test
mov
sarb
sbb
cwtl
clc
adc
out
movsb
sub
fwait
cmp
aam
xor
push
mov
xor
pushf
leave
cmp
stc
push
inc
xchg
popa
xchg
mov
and
xchg
cmp
lret
mov
or
sub
ds
adc
cwtl
cmp
imul
fldl
les
incl
mov
icebp
aam
sarl
sarb
dec
sarb
push
adc
outsl
js
cmpsb
and
in
add
outsl
hlt
je
lcall
stos
negl
mov
movsb
jmp
cwtl
imul
adc
jmp
loop
sbb
iret
filds
call
push
ljmp
adc
cmpb
ss
loope
mov
rcrb
mov
ret
mov
test
inc
les
mov
cmp
js
jmp
and
popf
dec
int
fstp
cmp
in
lock
push
xor
mov
or
divb
sbb
rorb
mov
ret
outsl
mov
popf
pusha
cmp
xor
imul
movsl
adc
mov
sahf
popa
ljmp
movsl
fs
out
lock
fs
movsb
and
jecxz
adc
iret
or
repz
push
jno
dec
clc
and
iret
into
je
ss
mov
test
dec
add
pop
push
sub
xor
jae
jae
lcall
and
cmp
jo
sbb
mov
daa
jg
std
cli
fildl
div
clc
loop
stos
dec
cltd
xor
les
cld
sahf
rolb
sbb
inc
scas
add
iret
lock
xchg
xor
jns
hlt
in
xchg
popf
les
test
clc
stc
ja
movsl
pop
mov
or
insb
jl
jecxz
mov
or
cmc
repz
mov
mov
sahf
fnsave
or
cli
test
leave
dec
js
jge
add
sbb
xchg
pop
xchg
inc
dec
xlat
lds
cld
push
adc
fs
mov
sbb
mov
and
jbe
std
push
add
or
adc
mov
xchg
les
mov
sub
movsl
cmp
pop
ljmp
jae
hlt
enter
insb
lds
les
enter
jbe
adc
and
inc
mov
mov
cmp
in
push
ljmp
test
xor
outsl
push
repnz
sbb
ror
cmp
mov
xor
jl
mov
inc
fnstenv
dec
imul
fstl
lock
and
inc
ret
cltd
loop
hlt
stos
ficoms
rol
fsubl
push
sub
iret
lahf
sbb
mov
cwtl
stos
sub
mov
add
push
lock
mov
aaa
sub
or
push
xchg
fldenv
jge
jg
mov
aam
adc
aas
cld
hlt
outsb
fucompp
adc
cmp
dec
mov
leave
in
adc
xor
iret
cli
rcr
mov
in
sarb
ds
sti
stc
xlat
pop
and
notb
cmpsb
into
negb
xor
mov
dec
hlt
ficoml
xor
and
mov
inc
hlt
lcall
jmp
mov
jae
sbb
roll
mov
pop
xchg
stos
add
pop
add
and
in
inc
aaa
pop
sarb
in
mov
es
mov
push
mov
or
fsts
pop
stc
mov
stc
rcr
hlt
push
sbb
out
dec
cmp
das
stc
dec
sti
add
mov
mov
pop
xchg
pop
pop
push
into
insb
pop
stos
push
mov
icebp
ljmp
mov
inc
pop
out
cmp
aam
test
sti
cmpb
push
inc
jo
xor
mov
iret
jmp
ljmp
pop
loope
scas
xor
mov
es
lahf
into
push
push
aas
sti
fnstenv
jmp
jecxz
jno
aad
dec
out
push
jle
add
adc
pusha
es
mov
movsl
xlat
sahf
inc
pop
adc
add
daa
mov
int
and
out
repnz
xor
add
or
out
test
gs
icebp
cmc
cld
test
idivl
inc
jmp
add
jnp
mov
shl
fcmovbe
cli
sbb
daa
call
loope
call
aam
mov
adc
dec
repz
add
mov
das
std
hlt
in
icebp
out
ljmp
outsl
sbb
mov
dec
por
leave
andl
xchg
in
mov
or
movsb
mov
rcrb
inc
push
xor
iret
sbb
mov
lds
add
mov
sahf
add
push
add
push
test
decb
jnp
mov
push
jge
push
movsl
sub
push
mov
mov
sbb
inc
sub
push
lret
or
dec
cmp
subl
gs
fnstenv
inc
sbb
sbb
roll
jo
rol
cli
loopne
pop
les
pop
add
leave
lahf
rcll
inc
fsubrs
cmp
sbb
inc
shll
jl
fsub
jb
or
incl
sub
or
loope
in
shl
hlt
xorl
ret
pop
leave
pop
pop
push
pusha
daa
les
data16
push
xor
xchg
pop
cmp
pop
cmc
jns
je
lods
or
scas
cltd
mov
and
and
imul
cmp
ds
fldt
xchg
cld
lds
pop
add
or
xchg
lds
inc
lock
lret
mov
cmp
iret
lds
addl
loope
cs
lods
sub
inc
pop
lds
dec
xchg
lock
mov
xor
mov
mov
je
mov
enter
repz
in
jo
inc
jl
xor
loopne
or
sbb
icebp
out
jo
shl
or
fcmove
out
cld
mov
jbe
test
and
jp
mov
movsb
sub
sbbb
mov
mov
fstps
fldenv
lret
add
cmp
aam
jne
cmpsb
pop
mov
stc
inc
xor
flds
call
faddl
mov
in
mov
decl
add
mov
movsb
mov
mov
mov
jmp
xor
push
lods
lock
aad
dec
cli
cmp
mov
ret
int
pop
jnp
xchg
adc
pop
out
and
les
enter
insb
jns
xchg
pop
cmc
repz
lods
or
out
out
movsb
sbb
sbb
mov
lds
les
lock
shll
cmp
push
jmp
mov
int3
and
xor
fcomip
loop
andl
or
sbb
jmp
xchg
call
repnz
lahf
lds
dec
jg
fnstcw
and
stos
orb
in
in
fdivrs
adc
das
loope
out
test
mov
sub
push
pop
xlat
pop
js
mov
daa
loop
mov
test
int
sub
jmp
mov
sbb
mov
mov
sbb
lock
push
push
les
xor
call
sub
pop
test
les
mov
int
cmp
pop
lock
xchg
mov
pop
faddp
lea
and
sbb
call
test
divb
test
sbb
out
adc
pop
mov
mov
xchg
pop
ret
test
cltd
xor
iret
mov
or
dec
js
insl
cmpsb
or
aad
out
ja
in
decb
mov
sarb
test
adc
jle
push
test
out
push
or
lds
mov
fxtract
popa
or
inc
mov
mov
dec
loope
pushf
int
mov
dec
es
sahf
mov
add
dec
in
addr16
pop
push
push
mull
scas
pop
fld
dec
push
mov
xchg
clc
pop
or
mov
jge
sub
test
push
mov
les
in
xlat
mov
scas
sbb
lock
test
mov
les
inc
cmpsl
pusha
jno
fstl
sbb
ss
imul
mov
ret
fldt
cmp
test
test
in
xchg
and
lds
xchg
movsb
hlt
xor
push
sbb
out
push
add
loopne
dec
cwtl
pop
shl
frstpm(287
stc
pop
jmp
sbb
in
insl
jne
cli
lea
movsl
sbb
into
lods
stos
jb
or
and
mov
enter
icebp
loope
fldt
es
das
cmc
mov
mov
mov
jge
leave
push
popf
xor
mov
ret
mov
lods
jge
or
scas
ljmp
int3
jmp
aad
mov
ljmp
insl
push
sbb
xchg
mov
inc
lret
lds
lds
mov
int3
xor
push
inc
and
hlt
aam
xchg
lods
pop
aad
sarl
sbb
notl
mov
or
xchg
insl
pusha
inc
xor
jge
in
lock
inc
fisubrs
sbb
mov
cmc
xor
fisttpll
insb
pop
sub
in
cmp
sti
xchg
and
mulb
pop
lea
mov
fstpt
add
jne
je
flds
into
xchg
movsb
lock
xchg
cmc
clc
sbbb
push
outsb
mov
lahf
jne
push
jne
cmp
pop
fidivrs
nop
in
in
arpl
lock
repz
mov
ret
loop
movsb
push
push
pop
cmpsl
fcmovne
movsl
xchg
lret
test
cmp
iret
call
push
sbb
lcall
rcr
sahf
xchg
and
rcll
in
add
in
adc
aaa
hlt
hlt
in
fisttps
jmp
popf
sub
lret
lods
pop
or
push
sbb
add
aam
orb
xchg
dec
push
or
aad
inc
dec
je
sbb
cmc
inc
les
xor
sbb
fdivl
stos
inc
cld
ret
dec
es
std
hlt
test
ret
fs
call
inc
adc
std
adc
insl
add
out
inc
cli
cmp
mov
push
fisubl
or
leave
sub
xchg
in
test
faddl
pop
mov
jl
stc
jne
iret
sbb
out
ficoms
xor
adc
mov
les
out
mov
insl
jmp
in
jge
js
les
or
je
cmc
adc
jge
shlb
mov
wrmsr
inc
ret
loop
inc
jp
push
rcr
cmp
xchg
xchg
push
lret
lds
mov
add
xor
sub
push
fisubs
or
movb
add
out
loope
pop
xchg
out
fsubrl
out
loop
pop
push
aas
push
add
jmp
repz
add
or
pop
in
lds
pop
ret
mov
int
mov
mov
cltd
mov
out
cli
mov
push
shrl
push
mov
pop
fmuls
test
ret
lock
adc
hlt
pop
mov
push
mov
lahf
mov
jecxz
sub
hlt
add
sahf
and
jmp
ret
inc
sbb
xlat
mov
jne
inc
hlt
mov
xor
jns
mov
fdivl
push
mov
adc
popf
in
fsubrl
addr16
popa
adc
testl
in
enter
orb
and
test
out
and
gs
cmp
jns
mov
popl
in
push
les
scas
pop
mov
mov
mov
iret
test
std
rorl
arpl
fstps
mov
or
mov
rcrl
mov
movsb
cmc
fs
fchs
xchg
fistps
jno
or
xchg
jp
iret
int3
stos
in
hlt
loopne
pop
adc
cmpsl
nop
clc
xchg
fidivl
das
mul
fs
iret
xchg
mov
mov
mull
pop
mov
rclb
shlb
pop
or
or
jae
es
into
gs
loopne
lock
xlat
ja
stos
aaa
test
lds
or
fisttpl
cmp
jecxz
ss
lods
mov
xchg
rclb
cmp
sbb
xorl
mov
out
pcmpgtd
and
push
clc
mov
test
cmp
shlb
fnstenv
in
inc
or
in
cmpsl
enter
scas
xchg
loope
xor
dec
xlat
push
dec
mov
fnsave
fsts
shrb
pop
loop
popa
lea
hlt
push
sub
push
bound
les
cmp
inc
movsl
inc
cld
insl
loope
out
ret
xchg
mov
jns
and
repnz
mov
xlat
in
ret
sbb
std
jmp
xor
fcmovne
sbb
sbb
aam
cltd
shll
jnp
jbe
jbe
out
sbb
mov
fisubrl
xchg
jo
arpl
mov
add
sub
ja
pop
repz
out
cmp
push
scas
adc
inc
hlt
lock
mov
rorb
xor
cli
movsb
cld
test
cmp
mov
repnz
push
xchg
adcl
lods
rclb
in
xor
stc
adc
xchg
or
pop
loop
icebp
divl
loop
pop
mov
lahf
mov
pop
push
stc
mov
sub
in
out
test
push
aas
sbb
or
or
in
sub
repz
mov
add
aas
in
hlt
push
cmc
int3
jbe
mov
mov
std
bound
sub
call
jns
push
inc
ret
xor
rcr
xor
mov
insb
xchg
out
call
flds
jg
and
pop
fucom
lods
pop
sub
pushf
in
int3
xchg
data16
sub
jge
xchg
div
loopne
sar
jne
les
arpl
shll
in
out
test
ficomps
and
mov
mov
repz
adc
and
int3
ret
pusha
call
loopne
sbb
mov
fidivrs
lcall
sub
pop
into
adc
flds
fcompl
xchg
mov
sub
in
add
dec
hlt
sbb
sub
xor
mov
jmp
test
vpunpckhwd
imulb
pop
test
sbb
xchg
je
stc
mov
sbb
out
insb
mov
pop
fninit
cmp
sub
fs
outsb
ret
xchg
add
pop
xchg
cmp
lcall
add
sub
shll
jmp
mov
mov
out
shll
inc
into
jl
ret
hlt
les
out
outsb
lods
cmp
push
xlat
out
xor
and
jmp
int3
mov
in
gs
out
repz
cltd
ret
std
out
cwtl
jns
je
fdecstp
sbb
in
xor
mov
popf
pop
add
test
push
sub
sahf
fisubs
pushf
aad
in
pop
jbe
xor
push
add
cmp
pop
in
leave
mov
adc
sti
in
das
fldcw
mov
mov
shl
sub
adc
mov
xchg
xrelease
ljmp
xchg
ja
out
shl
scas
test
ljmp
lods
lods
lret
jnp
adc
lea
les
imul
popl
out
mov
sahf
movsb
jb
jbe
iret
cli
outsl
arpl
mov
push
imul
insb
lret
rcll
pusha
push
flds
cmp
add
pop
xchg
pop
scas
das
in
aad
pop
divl
movsb
sbb
cld
repnz
flds
out
push
movsb
out
xchg
nop
rcrl
and
hlt
ljmp
jbe
pushl
sbb
bound
pop
xchg
in
xchg
push
jge
pop
jne
xchg
or
cmp
stos
aad
xchg
js
int
rol
fistpll
popa
stos
jge
mov
pop
pusha
repz
jmp
xchg
jo
outsb
in
adc
lcall
push
mov
dec
mov
push
sbb
shlb
lret
or
movsl
add
aam
dec
into
imul
sbb
popf
lock
dec
inc
les
in
flds
pusha
cmpsb
mov
jnp
sub
in
inc
outsb
dec
hlt
add
arpl
sbb
cmpsb
les
pop
xchg
or
data16
popa
test
call
clc
sub
hlt
adc
mov
ljmp
inc
cmp
sbbl
addl
push
adc
sub
dec
mov
call
and
dec
loopne
sub
movsb
repnz
int
hlt
pop
mov
or
pop
out
mov
loopne
in
xor
into
js
les
lds
jg
cmc
lods
jbe
pop
push
hlt
add
sbb
sub
adc
loope
inc
inc
les
bound
movsl
pop
fcmovb
xorb
rcr
xchg
aam
out
push
mov
pop
loopne
les
out
mov
fldenv
lds
jae
loop
xchg
pop
int
push
mov
jne
in
sbb
inc
sbbl
les
movsb
or
mov
js
mov
cmp
lods
fmuls
xchg
cwtl
jne
inc
jnp
mov
shll
jmp
sub
gs
sbb
mov
les
cli
jo
stc
push
dec
xchg
repz
ficoms
fbstp
or
mov
in
leave
xchg
lea
xchg
cmpsl
pop
and
push
jb
cmp
or
cltd
in
pop
inc
push
inc
or
sbb
inc
adc
vdivpd
movsl
add
push
fldenv
outsb
add
movsl
repnz
stc
cmp
test
jmp
out
test
std
arpl
dec
stos
test
imul
jo
sbb
dec
or
jae
and
and
jl
jle
inc
je
pop
rcl
loop
mov
inc
and
arpl
aam
and
xchg
loop
repz
dec
int
add
mov
pop
mov
std
sti
push
mov
imul
cmc
cmp
call
jmp
sti
mov
es
popa
mov
pushf
and
mov
sbb
jbe
hlt
int3
testb
cmp
sub
lret
popa
and
shrl
and
xchg
push
mov
push
popa
push
pop
loop
fs
dec
sub
mov
ja
les
pop
push
and
enterw
in
adc
hlt
in
ljmp
js
mov
lret
ret
lock
mov
mov
add
stos
das
xchg
sbb
pushl
in
cmp
pusha
test
push
mov
inc
pop
in
push
push
scas
hlt
mov
inc
fadds
inc
std
dec
daa
jae
mov
jne
rorl
xchg
fisubrs
in
pop
insl
sub
call
aad
mov
mov
pop
jb
test
scas
flds
call
add
outsl
hlt
aad
loope
std
xor
insb
hlt
pop
lcall
sub
mov
sub
or
xchg
lds
xor
fcmovu
mov
cmpsl
std
mov
mov
popa
push
sub
jmp
sub
mov
add
sbb
out
sbb
cmp
jns
shl
cli
stc
pop
in
or
aas
mov
sub
stos
sub
fxch
iret
push
xchg
fisubrl
ss
movsb
popf
pop
test
pop
fstps
das
sbbb
leave
dec
movsb
cmpb
lcall
sub
in
adc
fstl
fsts
lea
sub
jb
out
cmpsl
sbb
loope
cwtl
leave
hlt
xor
inc
ljmp
push
rclb
lret
mov
rorl
add
repz
mov
les
jae
jle
and
cmc
shl
pop
mov
cld
in
and
cld
dec
and
or
xchg
in
dec
or
xchg
push
call
inc
or
fcomp
sbb
out
jg
add
repz
jmp
sti
test
and
aaa
insb
hlt
sub
xchg
clc
cmp
je
repnz
ret
call
xchg
adc
cmp
ficompl
mov
or
sbb
fucomp
and
jns
lods
iret
scas
lods
push
pop
vpsraw
push
lds
and
pop
in
hlt
adc
xor
adc
out
xlat
adc
cmp
loop
jecxz
cs
xlat
jge
push
mov
test
inc
lods
in
jge
xchg
adc
das
add
imul
cli
scas
dec
test
lahf
fnstcw
mulb
insl
rep
cwtl
test
inc
sbb
emms
xchg
sbb
movsl
hlt
push
mov
enter
sbb
add
adc
fstps
rcll
mov
xchg
std
or
cld
les
cmp
xchg
loope
int
fistpll
in
movsl
test
hlt
inc
insl
jo
mov
cmc
out
movl
xor
pop
aas
and
cmp
aad
loope
dec
inc
loope
pushf
lret
jmp
daa
sub
mov
mov
cmpsl
sub
imul
add
jae
dec
repnz
test
jnp
push
scas
hlt
inc
lds
rcll
and
stos
xor
in
inc
push
sbb
ljmp
movsl
imul
loop
outsb
pop
sti
sbb
sbb
es
push
fs
push
insl
cmp
jle
jbe
fldenv
mov
int
xchg
sub
or
fbld
sbb
lods
xchg
or
loopne
mov
movsl
inc
mov
add
clc
xor
in
mov
hlt
out
push
shll
iret
xchg
cltd
popa
xor
sbb
loope
sbb
sbb
ljmp
mov
cltd
add
jge
popf
pop
fnstcw
or
shl
in
out
push
in
lock
iret
into
mov
mov
xchg
or
cmp
movsl
mov
mov
or
in
mov
les
roll
jecxz
les
xor
les
in
das
lds
orb
mov
out
iret
push
popf
in
cmpsl
fdivl
mov
sub
adc
jecxz
loop
and
sti
das
xlat
in
mov
in
gs
div
idivb
test
sbb
mov
xor
jo
stc
test
inc
int3
inc
pop
mov
out
clc
add
rorl
dec
sti
clc
mov
xor
divb
cmc
mov
xchg
fdivl
inc
mov
or
pushl
out
or
cld
stos
fs
fsubs
xor
cmp
mov
sbb
jmp
sbb
mov
ja
call
jl
inc
decl
sti
data16
in
sbb
int
ljmp
sub
jle
dec
mov
mov
cltd
or
fimull
in
test
sarb
mov
push
js
lock
outsb
xchg
test
hlt
inc
sbb
cld
jae
xchg
jge
mov
inc
fimuls
mul
aad
and
cmp
out
adc
xlat
jp
outsb
sub
fwait
mov
mov
ja
jle
movsl
hlt
lret
inc
fiaddl
mov
mov
xchg
mov
jge
int3
ret
pop
mov
dec
pop
lods
xchg
clc
dec
xchg
hlt
xor
pop
jl
xlat
repnz
aam
adc
sub
fnsave
outsl
push
xchg
std
pop
jmp
out
push
out
lahf
nop
je
inc
fdivrs
lret
clc
cli
jo
pinsrw
pop
or
shl
icebp
push
mov
mov
ljmp
cmp
les
cmc
mov
leave
cmc
cwtl
pop
adc
sub
xchg
ret
out
pop
pop
mov
fdivs
lods
or
mov
lock
dec
shlb
xchg
or
ret
mov
sahf
mov
jne
xchg
lods
rol
or
lock
inc
repz
sub
testb
sbb
xor
sub
outsl
pusha
mull
inc
test
inc
sar
sti
or
shlb
iret
rol
sbb
ret
inc
hlt
xor
mov
int3
daa
sbb
lods
sti
sub
and
pop
jl
fs
adc
mulb
outsb
mov
int3
mov
call
gs
and
push
nop
xor
dec
cltd
mov
and
lcall
fldcw
add
inc
dec
jne
aad
pushf
repnz
jmp
jnp
lock
fisubl
das
in
cmc
cltd
leave
sbb
sbbb
sub
lds
repz
add
mov
cwtl
cmc
repz
cmp
mov
imul
inc
divl
pushf
ja
pop
mov
into
les
movsl
enter
int3
sub
in
into
repz
mov
pop
data16
sbb
mov
daa
fbstp
inc
scas
fisubs
test
call
dec
ret
icebp
adc
and
repz
mov
loop
xor
push
and
push
and
lea
pop
pushf
popf
lods
clc
addb
negb
sbb
add
dec
in
scas
xchg
aaa
hlt
xlat
push
mov
jno
adc
mov
pop
jl
push
into
stc
stos
pop
fsubr
repz
pop
dec
enter
sbb
movsl
icebp
int3
in
fisttpl
dec
mull
in
cli
in
sbb
cli
leave
add
xchg
jp
scas
xchg
je
frstor
rolb
xor
push
loope
sahf
enter
enter
inc
push
in
rcr
mov
popf
mov
lds
arpl
sbb
into
sub
aad
mov
sub
in
xchg
mov
fs
test
push
push
mov
repz
movsb
sbb
jl
jmp
pop
pop
mov
jp
pop
jnp
lds
aaa
fmuls
sbb
push
dec
in
cmc
flds
fcmovnu
sub
loop
test
lcall
mov
mov
mov
cmp
scas
icebp
jmp
fidivs
or
push
bound
ffreep
shll
sbb
xor
fsub
out
ret
out
hlt
loop
push
sub
inc
nop
dec
les
out
rcrb
cmp
pushf
subl
lahf
adc
gs
ror
arpl
repz
hlt
add
repnz
dec
pusha
inc
sub
cli
out
push
ja
int
push
lea
sahf
in
aaa
ret
hlt
xlat
pusha
xlat
cwtl
out
shlb
fidivrl
sarl
mov
mov
hlt
dec
cmc
dec
inc
or
inc
mov
sub
push
add
pop
fdivrl
flds
mov
push
cmp
int
out
mov
push
fs
jmp
fwait
xchg
inc
repnz
mov
test
stos
push
sbb
ret
lock
mov
sub
fndisi(8087
push
inc
mov
jnp
fstps
mov
mov
xchg
mov
enter
push
lret
xor
inc
push
mul
ffreep
push
jg
add
ret
mov
stc
and
cmp
loop
adc
fisubrl
mov
and
cmpsl
or
scas
fists
nop
aaa
aad
ljmp
push
xchg
in
mov
adc
xlat
lret
push
aam
jmp
jnp
add
in
pop
sarb
fwait
push
out
mov
push
mov
jge
mov
leave
mov
pop
cmp
fcomps
add
fadds
movsb
ljmp
shr
aam
mov
in
inc
clc
and
adc
xor
pop
or
mov
test
or
push
sub
push
fadd
sub
les
repz
icebp
hlt
loop
pop
mov
out
lds
subb
dec
hlt
mov
cwtl
or
jns
hlt
repz
mov
push
mov
gs
psadbw
out
or
mov
daa
cmp
inc
jne
dec
in
lds
push
mov
xor
push
inc
xchg
je
adc
jge
jnp
mov
mov
cld
push
jo
fprem1
std
stc
mov
push
leave
add
jns
stc
xchg
pop
outsb
and
xchg
sbb
loope
mov
data16
and
mov
mov
inc
test
pop
nop
mov
sar
aas
scas
xor
cld
in
push
popf
add
push
mov
nop
push
in
cmpsb
fisttpl
push
iret
fdecstp
ret
push
xchg
xor
pop
std
cmp
ljmp
sub
int
gs
dec
sbb
push
and
xor
xchg
sub
movsb
mov
dec
fxch
jg
mov
in
jl
jge
xchg
aad
sub
mov
ret
aam
in
cmc
in
push
shll
inc
sub
mov
ret
mov
out
lds
clc
sub
in
test
and
hlt
movb
fcmovnu
stc
outsl
hlt
pop
repnz
mov
pop
lret
cmpsl
cmp
jmp
shlb
in
stos
ljmp
mov
je
pop
and
call
fwait
imul
shll
testl
jbe
dec
jnp
leave
mov
imul
dec
cmpsb
testl
fstpl
sub
jno
sahf
sarb
sbb
in
ljmp
jmp
lods
or
cli
sahf
dec
ljmp
out
jecxz
lcall
in
jno
jp
adc
mov
psubsw
mov
call
ss
mov
dec
xchg
arpl
iret
push
dec
pop
mov
test
popa
or
shll
js
daa
mov
insl
test
aam
aaa
pop
fmul
outsl
fsubl
mov
cmp
sbb
clc
pop
fsubs
push
leave
out
sar
stos
les
push
js
in
movsl
push
dec
lds
mov
push
cmp
cmp
or
insl
lods
test
cmpsl
and
les
push
jb
fcmovb
call
les
inc
inc
outsl
inc
pop
pop
jno
insb
bnd
mov
ja
inc
imul
xchg
lock
lahf
daa
mov
es
mov
aaa
push
pop
bound
and
fldcw
xchg
mov
xor
outsl
xchg
push
jg
push
in
lods
les
mov
fsubrs
and
sbb
xchg
cwtl
push
aas
or
jnp
imul
fsubs
ficompl
test
mov
mov
imul
loop
ljmp
int
out
or
dec
shr
lcall
mov
sub
mull
pop
jmp
into
sbb
in
and
sub
cmp
mov
mov
cli
aam
cmp
jge
sbb
je
ljmp
push
movsb
mov
repz
dec
mov
nop
and
push
les
mov
pop
cli
or
or
out
jne
mov
jo
lcall
dec
jne
jmp
mov
mov
push
and
pop
push
sub
out
adc
fldenv
mov
cmp
dec
jbe
in
dec
xchg
push
cli
mov
std
sub
rolb
inc
and
loopne
ret
je
and
push
jge
mov
inc
stos
aad
icebp
lods
xor
jg
sub
jne
jge
in
out
xor
cmpsl
lods
mov
fdivrs
ret
push
mov
pop
test
inc
fldcw
ds
out
testb
sub
fwait
add
scas
loop
push
orl
in
test
addr16
push
adc
call
loopne
in
imul
aad
gs
jl
inc
out
adc
mov
xlat
pop
xor
fnstenv
inc
dec
fstl
daa
sub
pushw
add
jo
je
pop
loope
push
mov
mov
dec
push
sbb
xchg
popf
push
mov
lods
test
sbb
stos
enter
mov
jnp
sbb
hlt
popf
dec
outsb
push
cmp
inc
jmp
outsl
ret
in
loopne
mov
int3
fld
int
lret
inc
jne
arpl
mov
into
out
out
unpckhps
xor
int3
mov
not
repnz
cmp
or
fs
ljmp
cmp
loopne
jge
les
aas
mov
test
lods
adc
loopne
hlt
mov
cmpsb
sbb
ljmp
mov
or
sahf
fisubrl
mov
loop
icebp
push
mov
adc
sub
push
add
hlt
add
jmp
mov
enter
in
scas
enter
pop
movsl
hlt
mov
inc
daa
sar
xchg
push
fisttpl
into
repz
pop
inc
xor
sub
clc
sub
and
adcl
mov
jge
xor
int
add
testl
loop
pusha
inc
out
cs
les
cmpsl
int3
lods
push
xchg
jb
loopne
lock
push
hlt
movsl
pop
and
cmp
repz
push
cmc
in
inc
lahf
imul
mov
imul
nop
andl
call
hlt
push
enter
ret
or
cmp
jnp
sub
fldcw
pop
pushf
pop
stc
ja
jb
movsl
add
in
or
fdiv
stos
push
mov
dec
or
push
loop
fidivrs
js
jle
movsb
xlat
cmp
inc
imul
hlt
nop
dec
sub
mov
icebp
in
test
int
cmp
scas
mov
jae
bound
fisubrl
movd
sbbl
in
push
inc
jl
mov
inc
mov
popf
xor
mov
sub
add
cmc
dec
shlb
dec
aam
mov
xchg
jp
jmp
hlt
inc
mov
loope
mov
push
aam
aad
xchg
gs
mov
sbb
or
sahf
mov
call
and
lods
push
iret
shlb
mov
lea
out
and
shr
push
jmp
std
xchg
pop
hlt
lds
pop
mov
push
test
cmp
dec
in
xchg
mov
les
adc
fmuls
subb
hlt
xor
call
loope
push
nop
leave
mov
xor
leave
or
lcall
xor
hlt
push
pop
xchg
test
xor
fstl
xor
mov
aad
or
cmp
dec
std
in
cmc
jae
psubb
push
out
loopne
addr16
out
lds
insl
mov
cmpsl
shl
and
jae
mov
lods
cld
cltd
loop
bound
sub
ja
into
pop
aad
and
in
fdivr
cmp
scas
lds
icebp
push
imul
cltd
lds
adc
hlt
inc
shll
mov
cli
in
xchg
xchg
hlt
rcll
or
ret
nop
pusha
jmp
int3
inc
cld
push
fs
sbb
mov
int
adc
movsl
cmp
stos
jnp
pop
rep
insl
fiaddl
pop
cwtl
xchg
fcompl
andb
push
rcll
jmp
xchg
ror
hlt
mov
stc
mov
jle
jb
push
adc
aad
add
fcomps
lods
pusha
inc
mov
loopne
repnz
xor
dec
xorl
mov
pushf
cmp
int3
cmp
int
fcoml
ret
fadds
gs
idivb
inc
nop
mov
fwait
mov
inc
loopne
add
test
cmc
jb
insl
cmpsb
fisubrs
fsts
cli
xor
mov
jecxz
nop
sbb
addb
or
negl
leave
out
fsubl
mov
mov
fwait
out
je
inc
xlat
mov
inc
xchg
xlat
jle
lock
fstps
lahf
aam
in
xchg
subb
test
ds
fmuls
pop
xor
push
pop
les
ja
mov
add
lock
icebp
sub
adc
or
call
in
lock
xchg
dec
ret
cmp
cmp
ljmp
xchg
out
shl
movsl
loop
test
mov
std
cmc
hlt
fcmovu
mov
push
ret
pop
mov
adc
mov
pop
xor
xchg
mov
nop
pop
in
hlt
sbb
xlat
movsb
fsubl
mov
cmp
mov
push
jl
mov
loopne
jb
inc
movsb
sbb
jo
or
test
ljmp
nop
in
cmpsl
jns
call
lock
xlat
fildll
jno
inc
jns
outsl
add
and
lahf
add
mov
jl
jnp
cmp
test
pop
sub
out
lods
popa
out
icebp
fldcw
clc
adc
add
int3
sbb
test
in
inc
cmp
xchg
sub
out
sbb
sahf
xchg
dec
aaa
inc
aaa
mov
movsl
rol
xchg
je
test
cltd
push
add
int3
lret
adc
in
pop
ret
jge
sub
mov
dec
scas
xor
jb
pop
jne
in
rclb
testb
jl
mov
add
iret
xchg
mov
push
scas
xlat
sbb
push
lock
add
sub
popa
xor
mov
sti
test
ljmp
jl
xchg
mov
rcll
in
pushf
cmp
inc
pop
jge
mov
ljmp
cli
daa
jecxz
jbe
dec
sbbl
cmp
in
mov
mov
fcmovnu
lcall
out
mov
scas
loopne
adc
xlat
sbb
in
pop
jne
hlt
mov
jnp
loope
int
ret
icebp
in
add
adc
xlat
add
pushf
ret
push
xchg
ror
xchg
or
push
cmp
movsb
push
push
mov
in
push
or
mov
pop
cli
sarl
jne
ljmp
dec
jmp
imul
sbb
pop
scas
mov
in
lods
mov
mov
add
into
shl
in
jae
cmp
shl
sahf
das
out
adc
sub
in
or
scas
hlt
dec
add
or
out
mov
push
adc
push
mov
pmuludq
mov
repz
les
xor
call
xchg
test
leave
add
cwtl
jl
lock
ret
or
les
pop
popa
fnstenv
pop
jecxz
pop
mov
jge
lock
mov
testl
add
fstpl
call
dec
std
and
dec
lods
xchg
popa
xchg
pop
shl
cmp
stos
enter
sbb
ret
shl
sub
insl
push
mov
pop
leave
ja
test
add
cmc
mov
dec
in
outsl
hlt
clc
hlt
xchg
inc
mov
leave
cmp
cld
sub
mov
les
in
rclb
aad
in
sarb
xlat
hlt
pop
mov
xchg
sbb
clc
les
mov
setge
xchg
sbb
jne
xor
xchg
xlat
ja
hlt
imul
mov
les
lea
int
and
into
lret
add
and
fiaddl
rolb
sbb
push
cmpsb
lret
out
call
aad
or
mov
icebp
ss
pop
pop
fadds
push
in
mov
xor
inc
fisttpl
repnz
scas
cmp
out
aam
cmp
mov
pop
sahf
fmuls
sub
lods
inc
fsubrs
test
and
in
movsl
dec
push
dec
pop
leave
ret
loopne
mov
push
sbb
cmp
adc
outsl
jmp
xchg
int
and
insl
pop
into
or
cmp
pop
xchg
lcall
movsl
jne
stos
out
aaa
shlb
repnz
shrb
adc
aam
mov
subb
leave
jge
test
pop
scas
push
cmpsl
sahf
movsb
and
mov
xor
std
cltd
lret
dec
sbbl
test
mov
rclb
shl
adc
repz
cmp
jne
pop
xchg
sub
push
fcoms
pop
hlt
xchg
xor
sbb
imul
shrb
ret
and
push
xchg
adc
cmpsb
sub
sarl
xchg
or
flds
pusha
xchg
pop
sub
icebp
xchg
les
sub
addb
and
das
mov
xchg
scas
fnstcw
stc
les
cld
and
gs
xor
hlt
test
dec
imul
fsub
push
mov
fnstcw
aaa
or
aad
rclb
out
sti
or
shrl
fbld
test
pop
in
sub
sahf
push
loopne
fldcw
cwtl
fcomps
sub
test
adc
jnp
xor
int3
or
nop
in
in
jns
hlt
inc
jle
je
push
push
movsb
les
mov
cmpsl
out
mov
fsub
cmp
xor
insl
iret
shl
mov
stc
and
cli
jecxz
fwait
mov
movsl
sbb
gs
outsb
rolb
fisubl
div
mov
add
xchg
dec
testb
movsl
aam
fprem1
shr
mov
xchg
nop
fs
movsb
daa
jle
dec
mov
dec
lock
inc
pop
rcr
mov
stc
jmp
xchg
jno
outsl
pop
cs
pusha
rol
out
mov
std
mov
fnstcw
sahf
lods
in
std
inc
ret
push
inc
stos
stos
mov
into
or
in
push
jmp
stc
add
mov
insl
pop
inc
xchg
sbb
xor
add
js
xchg
shl
test
lds
sar
test
mov
mov
mov
xor
scas
and
inc
fidivl
sub
mov
inc
adc
sub
ss
test
fcmovu
mov
mov
xor
rol
sub
mov
shlb
sarl
jl
mov
push
mov
fprem
xor
sti
adc
mov
cmp
int
mov
ret
adc
pop
or
popa
in
jecxz
push
push
xor
imul
repz
jecxz
hlt
ret
out
mov
mov
sbb
ret
lock
lock
sbb
and
or
sub
popf
jne
call
ret
or
andl
out
sub
ficoml
fwait
in
les
lcall
fisubrs
push
mov
pushf
mov
sbbl
out
js
fstpt
idiv
jmp
clc
mov
lahf
repz
movsl
cmc
mov
das
lcall
push
push
xchg
movsb
ret
enter
fwait
loopne
inc
xlat
out
or
lret
lret
xor
cltd
sarb
jl
loop
ss
movsb
pusha
lds
dec
imul
and
mov
pop
out
lock
pop
call
sbb
mov
shll
mov
jecxz
lds
mov
subb
sbb
hlt
jg
negb
imul
xchg
xchg
out
out
test
leave
call
hlt
xor
xchg
dec
cmp
cmpb
aaa
push
ja
sbb
repz
mov
pop
in
mov
mov
xchg
test
jns
mov
inc
fcomi
pop
enter
not
pop
sti
lret
mov
mov
push
js
inc
mov
fldl
std
push
sub
out
dec
jns
inc
std
jo
in
int3
push
cmc
shl
mov
ds
xchg
in
pop
cltd
jo
mov
mov
and
push
icebp
inc
fs
xchg
shll
push
das
mov
add
jo
jp
hlt
ret
xchg
cmpsl
fcos
mov
jno
pop
lea
xchg
flds
out
fidivrs
ds
in
and
in
fstps
mov
call
sub
in
cmc
scas
loope
add
add
push
movsb
mov
in
loopne
mov
hlt
add
lea
es
repz
fldl
add
stc
xchg
pop
and
js
lock
xor
and
loopne
add
push
mov
fadd
inc
cmp
mov
jl
outsb
jne
mov
scas
aaa
dec
call
xchg
mov
sub
push
dec
pop
cmc
movsb
enter
in
or
ljmp
xor
and
data16
cwtl
aad
push
pusha
fisubrl
pop
cmc
push
in
inc
mov
hlt
mov
movsb
xchg
ss
mov
add
repz
in
inc
cltd
out
icebp
sbb
jecxz
enter
bnd
int3
jmp
mov
and
fildll
sub
clc
push
dec
shlb
inc
mov
icebp
je
gs
mov
gs
mov
loopne
ljmp
mov
xchg
stc
lock
outsb
fs
div
pushf
push
pop
jmp
lahf
mov
loop
mov
cmp
arpl
inc
mov
out
jge
mull
jmp
pop
mov
add
or
test
call
sbb
movb
adc
enter
mov
dec
xchg
rclb
add
pop
add
mov
pusha
std
push
enter
sbb
andb
testb
add
fs
loope
scas
cmp
enter
fcoml
scas
inc
xor
push
pop
cmpsb
icebp
fsubrl
cmpl
xchg
rcrb
jecxz
call
dec
xor
outsl
mov
popa
into
cmc
mov
inc
fs
mov
fcmovu
rol
and
push
fwait
enter
push
fisubl
loop
in
push
fninit
pop
ret
out
inc
test
pop
enter
stc
test
lods
data16
inc
shll
pop
int
or
lea
lret
inc
fwait
dec
mov
jecxz
mov
push
cld
insl
lods
adc
jecxz
loop
mov
xchg
jb
cmpl
jp
rcrb
mov
fstps
lcall
js
out
in
aam
lahf
sti
jmp
push
flds
lock
inc
pop
in
incl
insb
aaa
je
adc
xor
xchg
mov
movsb
xchg
je
push
push
shrl
sbb
stc
movsb
testl
cld
frstor
mov
pushf
pop
sub
out
jae
inc
mov
in
clc
rcr
rcl
push
cwtl
jmp
sbb
ljmp
pop
inc
and
and
aad
lds
or
addr16
xor
repnz
sub
dec
les
mov
test
rorb
mov
xor
add
fs
shlb
adc
cmp
inc
mov
xor
lods
test
xor
test
fiadds
xchg
lods
fnstenv
clc
fcmovu
xor
push
in
aam
cltd
repz
mov
cmc
cmp
roll
mov
mov
mov
add
int
int
cwtl
or
clc
or
pop
inc
gs
es
push
lret
xchg
aad
loopne
or
mov
ds
xchg
sbb
outsb
nop
and
jmp
call
inc
std
out
jge
cli
stc
ds
int
clc
dec
cltd
es
rol
nop
hlt
push
fucom
fwait
cltd
mov
pop
in
repz
cmpsl
jb
inc
mov
pop
repz
jnp
ss
inc
ror
stos
mov
lds
cmp
sbb
jnp
std
mov
sub
adc
sbb
rorl
in
xchg
lea
iret
test
xlat
mov
fnstcw
and
or
cwtl
in
lock
mov
add
pop
or
out
ds
js
sbb
cmpsl
addr16
je
mov
xchg
inc
sbb
jecxz
lret
sub
sbb
xchg
add
fidivrl
fs
inc
cmp
adc
mov
jge
adc
mov
xchg
mov
jg
movsl
movsl
gs
fadds
lds
jg
lods
xchg
in
pop
jno
in
gs
mov
pop
cmovb
std
in
ss
pop
movsl
mov
aam
push
and
scas
mov
sbb
ss
movsl
jmp
gs
mov
inc
je
repnz
xchg
hlt
test
push
xor
repnz
scas
jl
sub
rcll
clc
movsl
cmc
lods
pop
mov
fiadds
cmp
xchg
pop
ficoml
push
fldenv
lcall
pop
or
repnz
adc
jl
cli
insl
int
loop
push
xor
jnp
rorb
dec
jecxz
in
mov
test
mov
stc
mov
fidivrs
inc
inc
fbld
fcmovnu
xchg
pushf
lock
scas
and
ret
leave
les
in
or
cwtl
push
sbb
dec
dec
insl
xchg
push
jne
mov
dec
fldcw
jmp
fmuls
jnp
add
imul
hlt
stos
clc
fs
int
sar
aam
je
adc
sub
and
inc
mov
rorl
xor
cmp
lods
lahf
xchg
dec
arpl
mov
xchg
or
bound
pop
xchg
sbb
fdivl
cmp
call
out
es
mov
cmpb
in
sbb
jg
out
mov
lods
test
addr16
aam
lods
je
pop
outsb
sub
sbb
scas
fcmovnu
lods
lods
in
aad
cld
negb
cmpsb
imul
fldl
scas
into
adcl
inc
ret
in
sbb
sbb
fwait
adc
pop
inc
pop
jns
sbb
jnp
data16
mov
inc
add
add
shlb
cs
pop
dec
xor
and
shl
mov
mov
fucom
xorl
pop
push
add
sbb
js
jae
int3
sbb
je
jo
notl
rcrl
jmp
hlt
cs
shlb
and
addr16
dec
push
out
repnz
mov
mov
sbb
mov
add
lds
hlt
mov
and
les
inc
xlat
inc
cmp
mov
mov
int
xchg
cmp
in
cmpsb
sbb
jbe
inc
jg
add
clc
frstor
mov
sub
pop
jg
pop
and
fisubl
test
jmp
and
adc
mov
shl
cmp
bound
xor
pop
loope
inc
in
rcl
adc
rol
scas
les
mov
adc
sub
lcall
cltd
pushf
adc
inc
xchg
sub
loopne
andl
movsb
mov
in
das
movsl
mov
adc
out
pusha
lods
or
pop
cmpb
fs
je
ficoms
js
pushf
fstps
in
std
push
cmpl
call
loop
icebp
lds
jle
pushl
xchg
cmpl
in
testl
shlb
aad
adc
lock
int
mov
shrb
test
hlt
leave
aas
add
in
les
test
test
push
xchg
int
jg
mov
push
pop
xor
mov
xchg
sbbb
pusha
xchg
fs
int
pop
stc
lods
cltd
xchg
jmp
idivl
popa
mov
cmp
sbb
call
ljmp
mov
sub
dec
mov
leave
pop
cvtps2pi
call
and
or
lods
hlt
hlt
sub
out
rorl
fs
movsl
cs
lock
and
jb
or
shrl
add
push
loopne
movsl
repnz
lahf
mov
dec
sub
xor
push
xor
hlt
outsl
loop
jno
icebp
fmul
mov
jmp
subl
stc
shl
inc
xchg
fwait
hlt
lods
adc
push
sbb
cmc
mov
bound
das
jne
std
in
popf
int
cmp
fimull
in
xor
mov
hlt
add
test
les
push
dec
ficoms
hlt
fildl
adc
lock
mov
test
leave
mov
mov
or
out
int3
or
xchg
sub
push
xchg
push
mov
cmp
mov
loope
push
rcrl
xchg
mov
lret
les
negl
push
dec
mov
enter
int3
rcr
cmp
jbe
test
jo
mov
in
pop
dec
sbb
cli
loope
push
jge
movsl
xor
mov
out
and
and
out
push
push
sub
sti
imulb
faddl
je
push
xchg
out
lods
mov
push
shll
fmull
sub
mul
sub
jmp
xor
jb
fidivrs
mov
orb
scas
sub
sub
les
add
mov
dec
test
in
fstpt
testl
fadds
shll
outsl
idivl
std
push
xchg
outsb
je
hlt
ljmp
loop
and
adc
push
fs
inc
call
or
jno
xor
cld
enter
hlt
test
in
mov
roll
adc
les
repz
test
and
xor
add
stos
dec
mov
or
out
jns
inc
cmp
mov
lods
das
les
insl
gs
movsl
pop
hlt
fmuls
mov
adcb
test
flds
adc
push
mov
mov
int
test
xchg
in
loopne
loopne
push
sbb
and
xchg
int
mov
mov
mov
leave
in
test
mov
fcmovu
lea
mov
in
add
shrb
add
push
ret
ds
rol
ljmp
fmul
mov
xchg
mov
repnz
pop
ret
push
movsl
cmc
outsb
es
in
xor
pop
inc
popf
pop
in
push
sub
hlt
test
dec
or
les
mov
push
xchg
or
and
push
fisttpll
mov
and
pusha
mov
imul
jp
fldenv
sbb
aam
stos
mov
xchg
popf
nop
jae
push
push
jle
fnstenv
lods
xchg
fisubrs
xor
jg
iret
les
cld
movb
hlt
scas
shlb
and
cmpsl
ljmp
jl
shll
test
pushf
insb
mov
push
fscale
adc
add
push
je
in
cmp
or
pop
pop
jge
cmp
inc
shrl
outsb
fwait
iret
ret
int
xlat
dec
mov
jle
out
mov
test
mov
in
adc
stc
push
mul
sbb
xchg
std
das
jno
sub
push
popf
mov
adc
fsincos
add
shlb
add
cmp
in
dec
cmp
or
jae
inc
inc
popf
jle
xchg
sbb
or
outsb
mov
popf
mov
and
pop
arpl
in
gs
popf
push
sbb
movsl
cmpsl
jg
and
push
cmp
in
xchg
mov
repnz
pop
adc
iret
lret
mov
pusha
pusha
ror
adcl
out
lret
inc
mov
aaa
lea
mulb
sub
inc
pusha
sub
shl
dec
in
and
out
xor
out
dec
lds
leave
jle
lods
movsl
hlt
add
daa
add
pop
cmp
stos
add
pop
pop
ret
cmpsl
loop
pop
and
das
cwtl
and
push
in
cwtl
cld
mov
pop
sbb
sbb
push
sarb
dec
cli
test
int
in
fs
int3
lea
bound
jno
hlt
xchg
sub
stc
push
imul
les
or
loopne
cmp
add
mov
sbb
sbb
in
fnstenv
sbb
cwtl
or
icebp
jge
hlt
in
cmp
in
and
sahf
repnz
xchg
lods
add
mov
lret
push
dec
fisubrs
scas
dec
push
nop
push
in
fs
rclb
lds
in
scas
ret
pop
adc
pop
das
hlt
push
pop
adc
mov
mov
les
faddl
aaa
nop
cmp
fidivl
sti
popl
je
loope
insb
cli
ror
hlt
xchg
fcompl
mov
inc
cmp
pop
notb
je
hlt
add
sbb
pop
loope
sub
dec
add
lret
sub
iret
addr16
or
jge
loopne
sub
lahf
or
stos
pop
nop
les
mov
inc
daa
sbb
andl
lahf
add
and
pop
pushf
aas
sbbb
or
or
sbb
cmp
xchg
jmp
push
mov
sub
xor
mov
mov
mov
push
xor
mov
and
or
mov
push
xor
or
sub
mov
mov
mov
mov
sub
add
mov
push
xor
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
or
mov
mov
xor
lea
add
cmp
je
mov
mov
add
lea
mov
sub
cmp
je
mov
mov
lea
cmp
jne
mov
mov
xor
or
cmp
jne
lea
lea
cmp
je
mov
cmp
jne
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jne
mov
lea
cmp
jne
cmp
jne
sub
sub
mov
cmpl
je
mov
decl
lea
mov
cmp
je
mov
mov
mov
add
mov
roll
mov
xorl
mov
mov
add
mov
jmp
lea
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
cmp
je
mov
xor
mov
mov
mov
pop
lea
mov
test
jne
sub
mov
lea
mov
mov
mov
sub
cmp
jne
mov
mov
lea
mov
cmp
jne
sub
sub
cmp
jne
sub
mov
mov
mov
or
cmp
je
or
xor
lea
mov
cmp
je
mov
mov
sub
mov
sub
mov
cmp
jne
mov
lea
and
sub
add
test
je
mov
cmp
je
lea
mov
test
je
xor
mov
cmp
je
mov
pop
cmp
jne
sub
lea
mov
cmp
jne
xor
lea
mov
mov
cmp
je
mov
lea
xor
mov
mov
add
sub
mov
pop
mov
mov
add
cmp
je
xor
cmp
je
mov
mov
mov
cmp
jne
and
lea
or
mov
add
mov
sub
cmp
je
mov
mov
mov
mov
mov
leave
ret
add
js
push
orb
jns
add
inc
add
pop
mov
add
or
inc
xor
add
push
mov
add
xor
mov
mov
mov
push
mov
push
add
mov
push
or
mov
mov
lea
lea
sub
mov
add
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
mov
push
lea
mov
sub
mov
mov
push
lea
mov
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
add
cmp
je
cmp
jne
cmp
jne
mov
mov
and
and
cmp
je
cmp
jne
cmp
jne
lea
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
lea
cmp
jne
cmp
je
cmp
jne
xor
mov
mov
mov
mov
movl
xor
mov
mov
mov
lea
cmp
je
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
mov
lea
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
and
mov
cmp
jne
cmp
je
xor
mov
cmp
jne
mov
add
sub
mov
mov
mov
lea
mov
mov
mov
add
and
mov
mov
xor
mov
mov
mov
cmp
je
add
cmp
je
mov
test
jne
mov
or
je
mov
repnz
xor
cmp
jne
mov
mov
addl
mov
jmp
lea
mov
sub
and
cmp
jne
mov
lea
lea
cmp
je
mov
test
jne
mov
mov
cmp
je
mov
mov
test
jne
mov
mov
mov
mov
cmp
je
mov
cmp
je
xor
lea
cmp
je
mov
mov
mov
and
mov
mov
cmp
jne
mov
sub
xor
mov
sub
add
sub
mov
mov
add
mov
cmp
je
xor
mov
mov
mov
cmp
jne
mov
mov
mov
and
mov
mov
mov
mov
pop
mov
mov
sub
cmp
je
cmp
jne
lea
cmp
je
mov
cmp
jne
cmp
je
or
add
sub
test
je
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
lea
mov
mov
mov
pop
cmp
jne
sub
mov
mov
add
lea
cmp
je
lea
mov
cmp
je
add
mov
cmp
je
add
cmp
jne
mov
mov
cmp
jne
mov
pop
sub
lea
mov
and
mov
mov
pop
ret
inc
cmp
test
adcb
add
and
inc
push
addb
sbb
add
add
add
add
loopne
or
push
mov
sub
mov
mov
push
mov
push
mov
push
mov
dec
mov
lea
or
mov
call
xor
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
cmp
je
mov
mov
lea
mov
sub
test
jne
mov
mov
add
cmp
je
mov
mov
add
mov
mov
mov
and
mov
add
mov
cmp
je
mov
mov
add
mov
mov
mov
sub
xor
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
je
xor
lea
mov
mov
cmp
je
mov
lea
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
xor
mov
add
cmp
je
mov
add
mov
cmp
je
mov
add
cmp
je
mov
mov
mov
test
je
sub
mov
cmp
je
mov
xor
cmp
je
mov
mov
cmp
je
lea
xor
mov
mov
mov
cmp
je
mov
push
call
lea
mov
add
mov
sub
mov
or
je
mov
mov
lea
mov
inc
cmp
jne
cmp
je
cmp
jne
mov
and
mov
mov
cmp
je
mov
mov
mov
xor
mov
sub
add
mov
or
je
mov
lea
cmp
je
sub
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
xor
mov
push
mov
and
lea
mov
mov
mov
or
mov
mov
mov
mov
mov
call
xor
lea
test
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
or
lea
or
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
and
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
mov
xor
mov
mov
add
and
mov
mov
add
cmp
je
mov
mov
sub
sub
lea
and
mov
sub
add
mov
mov
cmp
je
mov
divl
lea
lea
mov
mov
add
sub
cmp
jne
mov
mov
cmp
jne
mov
xor
lea
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
xor
cmp
je
cmp
je
mov
mov
mov
mov
or
cmp
jne
mov
lea
add
sub
mov
cmp
jne
lea
xor
cmp
je
lea
add
mov
cmp
je
lea
test
jne
mov
mov
mov
test
jne
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
and
mov
mov
mov
sub
mov
cmp
je
mov
mov
xor
mov
add
test
jne
mov
and
mov
lea
add
test
jne
lea
cmp
jne
xor
mov
cmp
jne
mov
mov
sub
sub
add
test
jne
sub
mov
cmp
je
mov
test
je
mov
and
mov
cmp
je
xor
lea
and
add
mov
test
je
lea
mov
mov
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
inc
add
mov
test
je
or
mov
mov
mov
mov
mov
mov
mov
push
call
xor
mov
mov
cmp
jne
mov
mov
sub
mov
mov
or
jne
lea
mov
mov
mov
mov
cmp
jne
mov
lea
cmp
jne
mov
cmp
je
mov
lea
mov
or
sub
mov
add
or
mov
mov
cmp
jne
mov
mov
mov
sub
mov
xor
sub
add
cmp
jne
mov
mov
mov
mov
add
mov
mov
cmp
je
cmp
je
sub
mov
test
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
sub
sub
sub
and
dec
mov
add
or
cmp
je
lea
mov
sub
cmp
jne
add
mov
lea
or
mov
mov
and
and
mov
mov
call
mov
lea
mov
mov
xor
mov
add
cmp
jne
mov
mov
dec
mov
mov
mov
mov
add
mov
cmp
jne
mov
mov
mov
and
mov
add
mov
add
mov
mov
movl
mov
pushl
mov
xor
mov
mov
cmp
je
lea
mov
mov
mov
sub
mov
and
cmp
jne
xor
add
add
test
je
mov
and
mov
add
cmp
je
mov
mov
cmp
je
xor
mov
mov
add
mov
mov
mov
or
test
je
mov
cmp
je
mov
lea
mov
and
mov
mov
push
mov
mov
mov
sub
cmp
je
mov
mov
and
mov
mov
mov
shrl
mov
xor
cmp
jne
add
mov
sub
add
mov
cmp
jne
xor
mov
and
sub
sub
add
test
je
xor
lea
test
jne
lea
mov
test
jne
mov
lea
mov
cmp
jne
mov
xor
mov
mov
add
cmp
jne
mov
mov
and
cmp
jne
mov
cmp
je
xor
mov
mov
mov
mov
sub
mov
pushl
call
add
and
mov
mov
and
sub
cmp
je
mov
mov
mov
mov
mov
or
cmp
jne
test
je
mov
mov
mov
mov
cmp
je
xor
cmp
je
mov
mov
xor
mov
dec
cmp
je
mov
xor
mov
mov
mov
mov
add
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
lea
mov
mov
cmp
jne
mov
xor
mov
sub
sub
mov
addl
cmp
je
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
and
test
je
xor
lea
sub
add
cmp
je
mov
cmp
je
xor
xor
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
xor
cmp
jne
lea
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
je
lea
mov
cmp
jne
mov
mov
mov
lea
sub
mov
cmp
jne
mov
mov
test
je
lea
cmp
jne
mov
lea
mov
mov
lea
mov
or
sub
add
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
pop
sub
cmp
je
cmp
jne
cmp
je
mov
xor
dec
mov
cmp
jne
test
jne
lea
xor
mov
mov
cmp
jne
lea
lea
cmp
je
cmp
jne
mov
mov
sub
mov
inc
sub
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
pop
mov
pop
xor
test
je
mov
and
mov
mov
mov
cmp
je
mov
lea
mov
mov
mov
leave
ret
xor
add
pop
xchg
or
dec
sub
test
and
.byte
