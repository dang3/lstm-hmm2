call
ret
add
mov
inc
mov
add
add
inc
add
push
pushl
push
push
xor
add
cmpsb
mov
ret
int3
xchg
nop
xor
js
arpl
rcll
add
jg
call
xor
mov
rcrb
push
mov
dec
add
dec
inc
mov
nop
sub
jmp
fucomip
inc
mov
insb
mov
xchg
leave
ret
std
and
stos
fsubrs
xor
add
dec
add
push
inc
in
fildll
push
push
jmp
mov
ss
gs
fcomp
inc
aaa
outsl
in
ds
rolb
dec
mov
add
ror
inc
inc
popa
insb
jns
mov
or
icebp
inc
dec
inc
js
mov
pop
pop
or
mov
or
xor
lret
pop
ljmp
cmp
mov
ljmp
lods
jle
int3
adc
imul
push
dec
dec
in
imul
sub
add
repz
sbb
cwtl
inc
dec
je
ret
push
xchg
push
sbb
nop
popf
stos
push
cld
filds
popa
inc
mov
push
cwtl
aas
out
ds
sub
dec
push
sub
add
inc
jmp
arpl
dec
xchg
enter
lods
ja
sub
mov
add
lock
pushl
loopne
ret
xchg
jmp
mov
imul
add
shlb
or
in
dec
inc
push
iret
xchg
ja
test
rcll
dec
inc
inc
xor
inc
insb
and
mov
cmpsb
push
push
and
sbbl
mov
mov
mov
add
das
mov
ret
outsl
and
jns
lahf
push
lea
push
jle
jg
dec
shll
ljmp
lea
test
xor
mov
stos
add
jbe
dec
add
test
loop
dec
inc
imul
pop
or
testb
popa
dec
popa
sub
xor
enter
jns
mov
clc
push
data16
jo
scas
adc
sbb
ficoml
jmp
mov
popf
mov
cmp
dec
jmp
js
inc
shlb
out
jns
pop
sti
icebp
inc
data16
mov
jae
inc
fildll
fstps
adc
repnz
jno
ds
cli
lea
cmp
clc
std
vpcmpgtd
out
imul
push
test
gs
cmp
dec
imul
dec
jno
or
push
inc
mov
scas
loop
popa
push
popf
and
pushf
xor
fidivs
cmp
cwtl
add
inc
sbb
xor
lock
push
or
imul
je
xor
sar
or
pop
addr16
ret
xor
sub
aas
mov
mov
mov
ljmp
mov
push
add
xor
inc
inc
xchg
add
add
fisttps
cwtl
cmp
dec
out
adc
push
mov
lea
sbb
je
in
adc
call
add
pop
sub
mov
hlt
loope
lret
xchg
adc
js
jp
push
insb
cld
push
scas
jl
lds
push
push
ds
sbb
pop
std
loope
push
sahf
adc
insl
out
mov
gs
dec
dec
mov
insb
rolb
inc
je
pop
pop
inc
mov
push
popa
sub
mov
aas
faddl
dec
imul
mov
fwait
pushf
cs
adc
mov
push
std
cmp
pop
sarb
fisubrl
and
popa
adc
mov
sar
mov
push
dec
sbb
je
xor
pop
test
aas
js
out
xlat
arpl
jnp
xor
jnp
and
nop
fwait
add
loop
out
cmp
dec
js
jno
add
jb
push
xchg
iret
addl
loopne
sbbb
cmp
stos
sbb
adc
dec
xchg
or
xchg
js
cmp
orb
cli
add
into
xchg
push
inc
insl
add
ljmp
shlb
add
lret
push
fimull
or
stc
pop
and
mov
lret
push
daa
mov
mov
in
adc
call
out
mov
xor
mov
sub
clc
fs
js
fists
shll
push
out
stos
shlb
jg
jb
pushf
or
jmp
jl
sti
push
add
jg
cmp
push
outsl
pop
adc
into
dec
fists
push
outsl
mov
push
ds
call
mov
sahf
mov
adc
sub
mov
push
push
loope
push
lods
stos
push
inc
popf
mov
jp
jbe
insb
fists
jle
add
jle
push
push
inc
add
inc
out
cmp
lcall
adc
xlat
inc
jbe
push
es
mov
pusha
inc
out
mov
mov
negb
mov
cwtl
dec
cmc
iret
cld
dec
or
cltd
xor
or
pop
shll
pop
out
mov
xor
push
aaa
push
das
push
push
decl
inc
jne
inc
pop
call
daa
inc
mul
push
outsb
fwait
xchg
dec
push
push
inc
mov
jb
inc
jp
push
or
mov
insb
jbe
xchg
inc
jne
dec
dec
cmpsb
aam
dec
insb
pop
xor
fsubs
ss
ret
lods
shlb
cmp
loopne
jmp
xchg
mov
cmpsl
les
xchg
fdiv
mov
pop
and
push
js
jl
and
sub
push
jle
jmp
dec
arpl
jp
pop
jno
mov
jge
push
sbb
xor
xor
push
insb
sbbb
lea
rcll
loopne
or
dec
push
sub
adc
pushf
adc
lcall
pusha
sbb
lods
push
dec
call
lock
int3
and
ret
shll
xlat
adc
mov
and
jnp
jo
leave
movsb
mov
push
jge
jo
sub
adc
lahf
js
push
lods
jle
lret
mov
je
into
je
cld
ret
dec
inc
push
out
addr16
imul
mov
dec
inc
mov
loope
jmp
sbb
std
xchg
fidivl
mov
adc
xor
inc
imul
pop
call
aaa
call
idiv
data16
call
bound
adc
xchg
pop
popf
flds
mov
cmp
xchg
lods
fiaddl
shrb
inc
push
dec
inc
out
jne
stos
sub
mov
cmpsb
insl
jne
mov
push
inc
jbe
ret
xor
ljmp
lret
out
gs
dec
push
push
lods
cltd
insb
inc
xor
dec
addr16
add
pop
repz
cmpsl
sub
cmc
in
add
pusha
loopne
cwtl
outsl
xchg
xor
imul
movsl
shr
add
mov
inc
icebp
push
push
inc
adc
push
inc
dec
into
dec
dec
push
push
push
jg
xchg
dec
push
pop
outsb
fistpll
and
lcall
xor
push
dec
inc
dec
inc
push
or
sarl
clc
or
pop
jb
arpl
push
dec
in
loopne
ret
xor
pop
into
add
bound
out
pusha
mov
into
jecxz
loop
adc
xchg
xor
cmp
add
inc
inc
dec
inc
fs
jbe
ljmp
js
pop
xor
mov
dec
dec
inc
push
repz
cli
push
pop
call
xor
daa
jns
mov
call
call
jp
jg
cmp
in
add
cld
aas
les
jns
push
add
outsb
ss
fucomip
add
subb
push
jae
out
lods
or
imul
pop
loop
cmp
xchg
pop
pop
int
cmp
inc
fs
rorb
lds
clc
js
jbe
inc
movsb
sub
push
imul
push
dec
push
insb
inc
mov
stc
cli
add
or
xor
inc
pusha
mov
out
test
pop
call
lods
cmp
scas
cld
sbb
mov
fldcw
push
std
adc
mov
cli
fidivs
inc
mov
push
and
mulb
in
std
call
sub
xchg
jno
mov
loopne
sub
dec
dec
clc
sarb
dec
fimuls
push
xchg
call
inc
js
pop
cwtl
es
inc
xor
dec
out
xchg
mov
arpl
sahf
inc
push
shl
rcl
js
addb
adc
xchg
push
lahf
lea
and
pop
ficomps
fmul
adcb
fs
aaa
push
ss
xchg
fsubs
push
jmp
mov
xchg
or
out
cmp
mov
rcrl
push
push
add
scas
cmp
dec
mulb
cmc
sti
and
xchg
loop
xor
lds
fcomps
add
enter
mov
clc
nop
add
dec
enter
add
cmp
mov
or
mov
pop
jge
pop
leave
nop
fsts
hlt
int
or
call
jno
popf
push
scas
mov
lock
pop
fs
pop
hlt
cli
cwtl
dec
fs
imul
mov
sbb
dec
dec
inc
jl
jge
push
push
inc
pop
push
push
mov
or
stos
std
call
xor
jmp
or
or
imul
sbb
jg
jecxz
or
mov
popa
andb
sub
mov
hlt
jmp
jns
rclb
add
js
jbe
loopne
pop
cmp
scas
andl
lods
xlat
or
fiaddl
bound
mov
stos
mov
xchg
adc
addr16
repnz
insb
lcall
xlat
scas
jne
in
and
das
cli
decl
adc
mov
cli
in
mov
inc
jge
mov
xchg
xor
push
mov
into
mov
aad
fdivrs
call
push
dec
sbb
mov
jmp
nop
sbb
test
repnz
jecxz
movsb
adc
out
inc
mov
push
pop
jae
jmp
mov
push
addr16
mov
xchg
sbb
dec
add
pop
mov
dec
movsb
push
xor
cmp
jl
cmpb
ljmp
negl
enter
dec
sbbb
cmc
xchg
dec
arpl
pop
add
push
inc
sbb
push
jo
dec
mov
decl
out
arpl
add
push
outsl
jbe
scas
mov
popf
sbb
mov
push
jb
mov
xchg
push
mov
inc
xchg
cwtl
and
dec
push
sub
inc
cwtl
sar
outsl
and
aaa
xor
test
dec
jae
test
xor
jecxz
incl
cmpsb
sub
mov
inc
mov
sarl
push
push
mov
jo
scas
inc
dec
nop
rorl
cmpsb
dec
data16
sub
incl
or
adc
add
inc
lcall
xchg
fcomip
mov
xchg
xchg
mov
push
add
push
imul
inc
xor
add
pop
push
xlat
adc
aad
shll
dec
dec
xor
mov
sub
ret
adc
ljmp
dec
and
xchg
shr
out
and
outsl
icebp
jecxz
adc
xor
inc
pop
inc
xchg
xchg
repnz
push
sahf
fiaddl
cmpl
inc
dec
push
pop
cmp
into
inc
ss
lock
pop
push
js
inc
dec
shl
movsl
cmp
mov
popf
adc
imul
xor
dec
inc
dec
pop
repnz
mov
std
push
mov
scas
int
ja
stos
adc
ljmp
xchg
ds
lods
ret
cmc
lahf
cmp
dec
ss
notb
dec
test
jne
adc
les
or
xor
out
fiadds
mov
xor
lret
mov
cmp
rcll
jle
mov
cmp
mov
mov
dec
jb
sub
pop
hlt
ret
pop
dec
cmp
lock
jg
test
lret
inc
mov
jge
loopne
mov
inc
mov
cmpsb
pop
or
je
xor
xchg
fimuls
push
movsb
stos
outsl
mov
dec
shr
push
push
inc
imul
sbb
adc
pop
sub
mov
aas
and
dec
popf
adc
cmpb
dec
push
xchg
xlat
nop
fmuls
inc
pop
lock
lahf
fildll
dec
ret
fsubrl
pushl
inc
cwtl
xchg
movsb
sar
pop
je
inc
dec
shlb
mov
mov
test
or
lcall
sbb
pushf
bound
cmp
adc
push
test
data16
or
pop
inc
shlb
mov
mov
aaa
inc
xor
lcall
mov
inc
adc
inc
call
inc
cld
push
mov
jecxz
lret
ret
call
imul
loop
icebp
mov
push
push
push
or
insb
jo
jle
gs
sub
imul
je,pn
clc
sbb
ja
jb
inc
dec
loop
call
cmp
ljmpw
push
in
pop
decl
and
pusha
sti
nop
ds
jg
call
aaa
clc
mov
cmpsb
mov
scas
shrb
in
cmp
push
or
push
cltd
sbb
sbb
js
lock
pushl
shll
and
dec
inc
inc
xchg
jb
push
xchg
fadds
rol
sub
jo
idiv
rcrb
testb
xor
push
js
or
lock
push
cmp
roll
xchg
pop
test
jns
int
scas
mov
clc
pop
xchg
fwait
and
cmp
ret
inc
dec
push
cmp
pop
cmp
lea
push
push
dec
mov
xor
add
push
jecxz
das
mov
cltd
mov
pop
popf
in
jnp
hlt
lcall
fwait
or
dec
inc
pop
insl
jno
outsb
inc
jno
push
cs
dec
push
dec
sbb
lret
adc
and
fistl
xchg
mov
push
mov
mov
cmp
shll
je
inc
push
push
mov
cmp
fmuls
sub
sbb
add
out
repnz
cld
dec
bound
inc
dec
movsb
imul
inc
dec
mov
push
mov
dec
call
daa
jp
push
std
dec
ds
je
aad
dec
inc
mov
js
testb
inc
pop
push
nop
ljmp
ss
dec
jo
fdivp
jle
jb
push
push
jno
cmp
mov
stos
pop
and
sbb
inc
roll
paddd
movl
push
pusha
pop
lock
mov
push
jb
inc
add
lock
mov
outsb
add
sub
gs
jae
les
icebp
dec
jo
xor
jl
js
lods
push
dec
xor
cmp
andl
jne
xor
mov
push
in
pop
je
adc
push
lret
inc
cmp
shl
inc
push
shlb
mov
and
pushf
jo
mov
outsb
cmp
loope
pushl
int
sub
jae
test
fisttps
cld
sub
loop
shll
out
mov
pop
loop
push
mov
push
push
cli
sub
ss
inc
ret
jmp
jg
pushf
fcoms
test
dec
sub
pop
cld
or
fmuls
int
pushw
mov
addr16
push
jecxz
int
cmpsb
cmp
adc
ret
xchg
scas
enter
lret
into
in
ss
gs
bound
inc
fisttps
aas
cmp
inc
push
lret
xor
lock
or
ljmp
je
aam
mov
outsl
or
cmpsl
cli
incb
sub
mov
insb
addr16
int3
dec
xor
in
ljmp
jbe
les
insb
dec
push
pusha
pop
push
sub
ja
pop
push
inc
into
add
dec
or
fisubs
push
fmull
dec
outsl
dec
jp
fcomps
loope
mov
jmp
pop
and
fistps
lods
jge
jbe
xor
dec
dec
insb
cli
loop
inc
dec
daa
nop
add
xor
push
pop
push
jg
push
sbb
out
arpl
out
sbb
dec
xchg
scas
inc
cli
out
push
test
fldt
aaa
add
pushf
les
push
cmp
pop
dec
mov
pop
cwtl
iret
iret
lcall
mov
fcomp
out
daa
sbb
in
test
dec
adc
pop
pushf
or
je
inc
jle
dec
inc
mov
clc
or
shll
gs
shlb
pop
roll
adc
xchg
add
imul
sub
fbld
jnp
push
xchg
inc
dec
xchg
push
das
xlat
mov
enter
mov
movsl
pop
push
add
dec
push
push
jl
cmp
addb
fdivrs
pop
dec
pop
sbb
cld
xchg
cmpsl
rorb
stos
fcompl
lea
jp
push
ret
push
js
or
or
outsl
popa
xor
lock
inc
shlb
push
push
mov
add
mov
jle
ds
movsb
ret
cmpsl
jo
pop
sbb
dec
mov
cld
out
push
pop
xor
push
aam
adc
jb
cs
push
inc
insl
bound
outsl
ja
ret
inc
int3
and
out
aas
sub
scas
clc
xchg
mov
cltd
shrb
sbb
and
mov
sub
xor
push
push
cwtl
cmpsb
inc
inc
dec
packuswb
push
dec
pop
push
fdivrs
std
ljmp
lahf
cmp
subb
dec
or
mov
es
and
xor
xchg
ret
dec
or
rcrl
cld
sbb
loope
outsl
addr16
jno
mov
xor
outsl
xor
in
mov
xchg
stos
dec
imul
mov
iret
dec
mov
push
sub
inc
sti
mov
cmp
dec
and
stc
fucomip
mov
mov
aad
sub
or
outsb
dec
dec
lcall
mov
push
and
push
bound
outsl
xor
adc
jge
jae
xchg
mov
sub
in
out
dec
fs
scas
dec
mov
outsb
dec
push
mov
data16
inc
into
into
int3
mov
dec
inc
lcall
fiaddl
js
add
sti
dec
xchg
sbb
test
cli
ljmp
leave
add
outsl
lock
push
xchg
sbb
dec
push
ffree
inc
data16
jns
xor
inc
sar
cli
aam
imull
repnz
push
xor
movsl
mov
mov
mov
dec
and
popa
imul
jle
sub
mov
insl
push
sbb
mov
insl
out
jmp
push
addr16
insb
and
xor
dec
mov
mov
jmp
data16
xchg
jo
fcoml
inc
cmc
jl
js
imul
dec
clc
cmp
cwtl
nop
ss
pop
push
jne
in
inc
mov
pop
jp
std
ret
and
xchg
rorl
pushl
mov
push
inc
xor
cmp
ret
add
stc
aaa
nop
fwait
dec
sub
jne
ret
pop
mov
inc
pushf
enter
stc
cld
fsubrs
addr16
scas
xchg
push
jg
test
add
sbb
push
push
cwtl
fiadds
ret
mov
jle
jmp
out
imul
jmp
dec
xchg
pop
sbbb
lds
jg
dec
mov
outsb
and
call
jmp
icebp
fs
push
divb
inc
jbe
and
dec
pop
inc
jo
add
jbe
cmp
or
pop
das
inc
cmp
daa
mov
jo
data16
imul
test
sbb
dec
mov
sbb
aad
cld
xor
aaa
push
inc
sbb
sub
dec
mov
out
sar
decl
mov
ljmp
rcrb
or
repz
call
xchg
xchg
mov
enter
xchg
scas
je
imulb
mov
cmp
out
push
xor
test
ljmp
loopne
or
jae
jle
pop
out
add
jns
test
push
mov
je
aam
cmp
jo
sbb
cmp
cld
sub
call
cmp
daa
sahf
xlat
cmp
jne
ljmp
testb
ret
jecxz
std
fisubl
sub
cmc
jae
incl
add
sbb
iret
pusha
call
jno
push
push
mov
shlb
call
push
mov
pop
fs
mov
std
imul
gs
jp
fcoms
add
popa
or
add
imul
mov
mov
fdivrs
mov
lcall
and
testb
int
pop
test
pop
int3
adc
lahf
adc
ret
insl
push
fs
and
sub
lods
jg
test
push
popa
cli
mov
rorl
shlb
sub
sub
repz
sub
xchg
dec
pushf
mov
mov
dec
int3
dec
out
jne
adc
out
fs
pop
call
out
js
aaa
ja
sahf
sahf
add
mov
sub
adc
xchg
fcoml
mov
add
inc
lret
fistl
cmp
sbb
inc
push
and
out
cmp
inc
pop
push
mov
lret
imul
add
fs
fcmovne
lcall
push
inc
dec
mov
jge
aam
add
rclb
push
clc
jg
pusha
mov
inc
stc
and
call
mov
lock
aam
clc
ds
dec
xchg
subb
ja
das
fucomi
jo
inc
inc
mov
dec
dec
outsb
push
add
sub
mov
pop
ds
repz
clc
mov
push
sub
jmp
add
pop
mov
outsl
push
fsubrp
js
ss
sbb
mov
ds
mov
push
inc
inc
aaa
test
lods
mov
enter
cli
outsb
int3
mov
mov
xorl
cmp
cli
or
inc
adc
jns
rclb
inc
dec
bnd
mov
dec
arpl
mov
jbe
fsubrs
mov
out
cwtl
mov
aam
pop
mov
aam
jae
cli
push
loop
imul
add
addr16
pusha
add
push
jg
call
push
cmp
das
cmc
dec
jp
push
lcall
jl
add
in
in
rclb
inc
jle
inc
inc
sti
rorb
inc
shll
js
mov
push
fwait
addl
arpl
mov
arpl
xchg
jno
pop
dec
xchg
add
push
jle
lods
outsb
movsl
pop
lock
adc
imul
sub
pusha
inc
cmp
inc
rcrb
cs
aas
push
cld
jo
add
pop
rorb
mov
neg
pushl
pop
rolb
dec
js
xor
lahf
in
int3
pop
mov
dec
test
add
mov
aad
cmp
inc
add
ljmp
pop
lock
dec
imul
fnstsw
sbb
cmpsb
mov
mov
ss
adc
out
scas
push
push
mov
push
pop
popa
cmp
sbb
jl
out
push
pop
sbb
jp
xchg
push
mov
jge
xchg
addr16
mov
push
or
dec
pop
outsl
push
mov
pop
movsl
xor
add
add
xor
mov
push
push
push
xchg
test
pop
rcrb
lret
jg
roll
gs
rolb
ja
mov
data16
sbb
movsb
cmp
cld
ret
push
cmp
add
rcrb
outsl
arpl
jns
mov
pushl
pop
bound
push
push
mov
cli
es
push
sub
mov
inc
inc
arpl
ljmp
mov
mov
dec
pushl
out
pop
ret
mov
xchg
jns
mov
decl
xor
cmp
sub
std
pop
jle
shll
push
xor
loopne
inc
popf
push
dec
cmpl
fldenv
call
pop
mov
mov
jl
or
sar
mov
shlb
push
addr16
enter
dec
cmpsb
repnz
ja
fldenv
ror
inc
lret
fwait
mov
lock
mov
lods
cmc
mov
movsl
xor
sbb
cld
out
adcl
gs
jns
inc
push
sub
decb
push
insb
mov
mov
sub
cmp
fs
add
hlt
adc
gs
fistps
push
mov
test
or
cmp
in
mov
push
popa
push
bound
ret
push
jp
jo
lret
xchg
inc
stos
shl
decb
inc
call
jecxz
es
andb
idiv
or
sub
jl
cli
xor
jecxz
loopne
test
xor
ss
jo
rolb
inc
xchg
nop
ret
jle
mov
cmpsb
lds
mov
repnz
cmp
cmp
mov
or
ja
jae
cmpsb
dec
cli
cmp
lock
add
dec
jle
leave
iret
sbb
ljmp
into
cmpsl
add
pushl
aam
pop
sti
icebp
repz
loop
scas
es
ss
push
cli
ja
xchg
bsr
xor
ja
mov
add
pop
outsl
inc
inc
mov
insb
xor
decl
nop
popf
sbb
ret
pop
popf
sbb
popl
jns
xchg
loope
jmp
popf
jo
inc
idivb
mov
lods
movsl
clc
sub
jle
outsb
js
lock
jle
pop
call
mov
inc
iret
mov
sti
mov
push
push
je
ds
inc
xor
inc
aam
jne
ss
sbbl
les
mov
loopne
jns
out
cmp
xor
mov
sarb
cmpsb
dec
push
das
test
test
dec
mov
dec
incb
repnz
insb
sbb
mov
jb
pop
adc
enter
outsl
or
call
mov
mov
mov
lock
jne
fadds
mov
stos
xor
dec
inc
push
jp
aas
ret
push
push
outsb
inc
jmp
lea
cmp
addr16
sub
fisubrs
inc
or
ds
lock
dec
mov
fidivs
sbb
loope
hlt
xor
jbe
sarb
lods
mov
add
aas
cmpsl
rcrl
push
adc
ficoms
pop
fdivs
shlb
ficompl
mov
dec
dec
arpl
cli
inc
pop
or
popw
loopne
test
xchg
orl
mov
xor
adc
xor
jle
push
and
sub
xor
fwait
mov
es
pop
lcall
xor
addr16
clc
jmp
sub
sarb
or
std
sbb
arpl
push
pop
jno
mov
stos
mov
cmp
dec
and
mov
inc
shlb
xor
negl
push
jne
loopne
xchg
mov
fisubs
adc
xor
inc
imulb
lock
ret
and
inc
mov
push
push
or
mov
clc
outsb
rorb
mov
insb
inc
push
xchg
ret
pop
add
mov
insl
sarb
mov
psubusb
mov
push
jo
in
or
clc
aas
sarb
stc
iret
dec
fisubrl
xor
pop
pusha
shll
mov
mov
fidivl
enter
and
scas
jl
addb
aad
fucomi
or
cld
xor
adc
add
jle
mov
pusha
icebp
push
call
fidivs
jo
push
pop
ljmp
adc
fdiv
test
dec
lret
data16
mov
imul
sarl
lcall
push
xor
cld
inc
orl
addr16
pop
jne
jge
mov
jne
cltd
pop
cmp
popf
add
sub
fwait
stos
rcl
int
hlt
add
popa
je
arpl
dec
aaa
lret
outsb
sub
fcompl
jae
pop
std
jmp
insb
inc
insl
push
cmp
outsb
dec
insb
inc
push
lcall
pop
mov
ja
sub
push
or
xlat
fwait
push
mov
pop
push
pop
push
mov
mov
add
insb
hlt
add
push
xor
call
rcll
pop
jl
ret
icebp
lret
out
pop
cmp
sbb
mov
insl
pop
mov
shrb
push
sub
aas
mov
or
push
dec
xchg
stc
cli
lahf
and
out
push
push
ljmp
xchg
dec
mov
lret
je
jae
jge
inc
unpckhps
fimull
lret
mov
mov
mov
imul
dec
js
jo
push
cmp
orl
hlt
push
movsb
in
rorb
xchg
in
imul
xchg
loopne
mov
push
scas
add
aas
mov
jmp
dec
imul
inc
add
xchg
loopne
xlat
xlat
mov
cmp
mov
cmp
cmp
push
fildl
push
sbb
xchg
dec
orb
jl
subb
pop
add
fs
xor
push
std
test
insb
push
popa
pop
movsb
xchg
int3
call
xchg
inc
sbb
int3
cmp
xor
sbb
xor
pusha
or
add
inc
bound
jbe
or
sub
test
and
add
push
dec
dec
insl
push
add
roll
popa
push
in
cs
adc
jno
xor
arpl
mov
jmp
in
cmp
pop
ret
inc
stos
int3
dec
add
adcb
rol
xchg
shrb
push
jecxz
sbb
push
into
in
jg
repz
pop
aam
xor
lret
enter
cli
aas
jg
pop
mov
ds
enter
movsb
add
add
mov
dec
add
push
in
and
outsb
stos
fadds
outsl
orb
dec
inc
data16
xor
add
adc
lock
mov
imul
clc
push
add
mov
inc
cld
rorb
aaa
mov
push
jg
mov
outsw
dec
dec
mov
xor
push
cmp
subl
mov
mov
es
jp
inc
jo
les
sbb
inc
inc
jns
fsubrs
call
mov
jns
ja
ja
js
into
movsb
mov
ljmp
sub
lahf
popa
andl
cmc
aad
sbb
dec
lahf
out
push
dec
scas
add
inc
je
dec
insl
mov
aaa
rclb
rorb
push
push
dec
push
mov
pushl
shlb
jno
inc
cmpsl
push
jg
mov
lods
mov
call
xor
sahf
loopne
push
xchg
hlt
arpl
inc
or
pop
cmp
add
cli
int3
fisubrl
jae
cmp
movsb
inc
and
push
sub
pop
jns
mov
xor
adc
lret
push
or
mov
pop
mov
add
pop
mov
dec
push
out
xchg
in
mov
push
push
add
or
push
xor
dec
lock
addb
or
inc
push
jo
stos
xchg
inc
and
mov
jg
pop
in
scas
or
add
or
jecxz
xor
cmovs
mov
mov
mov
mov
push
push
mov
push
xor
or
data16
push
inc
mov
mov
mov
das
enter
and
mov
push
add
cmp
out
movsb
dec
bound
movsl
cmp
clc
inc
jbe
test
or
sub
imul
in
pop
pop
inc
push
cmp
push
push
push
xchg
fcomps
movsl
out
lcall
inc
js
push
sub
push
sti
loopne
clc
add
mov
mov
shlb
test
insb
dec
clc
mov
nop
push
ret
imul
stos
jbe
xlat
in
fucomi
or
nop
jl
sbb
jbe
jo
js
in
cmpsl
inc
pusha
jp
testl
push
outsl
addr16
dec
outsl
mov
lock
push
xor
nop
mov
out
mov
mov
in
pop
insb
js
mov
lock
or
mov
pop
cmp
xchg
adc
xor
cs
add
fst
push
push
ljmp
aas
xchg
jp
add
in
sbb
and
gs
cld
jnp
or
pop
mov
push
push
fidivl
mov
daa
dec
lret
or
pop
adc
in
add
jl
inc
arpl
or
inc
ja
insb
mov
jne
shlb
pop
sub
add
push
add
dec
dec
fidivl
insb
pop
gs
les
jl
or
jne
cld
inc
pop
pop
fildll
scas
xor
dec
dec
test
or
enter
mov
jecxz
push
dec
push
mov
popl
stc
xchg
cmpsb
cmp
cmc
mov
into
test
repnz
ss
pop
adc
call
jbe
inc
outsb
cmp
pop
sbb
lret
insl
mov
jg
pop
aad
pusha
popa
adc
jp
loopne
dec
stos
jl
inc
add
pop
sbb
mov
lock
xor
add
jo
xor
dec
lock
push
cwtl
sbb
push
imul
das
jo
outsb
popa
xor
roll
mov
cs
cmp
fs
enter
and
pushl
loopne
sbb
push
cmp
dec
scas
aaa
jp
loop
loopne
ss
imul
out
rolb
sarb
lea
sub
mov
mov
push
call
dec
aaa
mov
outsl
cmp
loopne
test
test
dec
jecxz
or
sbb
dec
call
xor
xchg
popf
jns
xor
xchg
lahf
testl
pop
js
subb
push
fs
xor
inc
ret
xor
pop
mov
jo
inc
test
jo
aam
add
stos
popf
stos
jle
sub
push
aaa
xor
icebp
decl
cld
sub
push
xchg
mov
bound
imul
dec
dec
mov
inc
ficompl
adc
mov
ret
sub
test
xchg
jge
dec
dec
fmuls
sahf
push
mov
add
push
jno
push
cld
jg
push
out
add
subb
inc
mov
jns
push
bound
and
inc
dec
pop
dec
add
pusha
les
jb
jle
jecxz
or
pop
push
sbb
mov
call
cli
cs
or
sti
and
xor
cs
add
adc
hlt
dec
hlt
je
imul
or
inc
mov
shlb
adc
cltd
jbe
push
mov
push
jmp
mov
add
test
sbb
jno
pop
push
bound
adcl
xchg
lock
outsb
push
xor
mov
cltd
xchg
mov
adc
imul
inc
imul
mov
stos
rcr
and
rep
add
pop
push
jne
gs
inc
dec
imul
mov
call
faddl
mov
push
hlt
xor
mov
inc
add
inc
pop
mov
dec
xchg
xor
xor
mov
pop
pop
cs
adc
outsb
mov
add
jecxz
mov
mov
addb
mov
push
dec
lea
sub
jl
jne
and
sub
int3
inc
dec
push
sub
mov
xor
lods
test
sti
fstpt
cld
and
jp
call
mov
pop
and
int
shrb
shrb
inc
inc
ja
daa
jne
inc
pop
jmp
stc
dec
add
ss
xorl
int3
test
mov
adc
sub
in
and
pop
dec
gs
add
sbb
rcrb
push
icebp
orl
adc
call
aam
ret
ljmp
icebp
incl
lret
pop
mov
lret
test
pushf
dec
jge
mov
stos
mov
outsb
in
jge
ret
addb
add
test
out
inc
inc
lret
cwtl
mov
clc
ss
ds
outsl
xor
sbb
sbb
sti
or
push
jp
sbb
push
jns
inc
add
mov
cli
jg
in
mov
pop
sub
repz
test
add
inc
in
xor
push
adc
sub
mov
xrelease
js
pop
cmp
mov
clc
or
push
or
cltd
cmp
xor
add
push
jp
or
ret
stos
or
dec
ja
rcll
imul
mov
loopne
lcall
jl
pop
popa
mov
jo
push
and
lods
aas
test
push
mov
stos
lock
mov
ja
and
push
je
xchg
mov
ss
imul
filds
gs
xchg
inc
fiadds
mov
cwtl
test
adc
sbb
mov
ds
mov
rcl
nop
in
fcmovu
fisubs
inc
clc
cwtl
push
arpl
cwtl
adc
xor
add
jae
push
pop
and
add
pop
dec
cld
push
pop
ret
mov
ds
jns
xor
pop
xchg
fldl
sub
push
inc
pop
les
test
jmp
hlt
and
jae
in
inc
mov
push
cmp
aaa
pop
sub
ljmp
sbb
mov
rorb
out
and
cmc
insb
out
mov
xor
rorb
jmp
rcrb
insl
push
icebp
push
sbb
jbe
sub
rolb
sti
dec
mov
sti
lcall
movsl
out
mov
mov
pushl
rorl
pop
or
shll
dec
mov
imul
ljmp
push
sub
mov
stos
mov
mov
enter
inc
pushf
push
fmuls
add
popa
adc
fdivl
pop
sub
jae
ja
or
clc
sub
ss
mov
movl
jecxz
mov
es
cmpsl
shll
jns
addr16
jg
adc
shrb
aas
in
cmp
sbb
lea
jno
movsb
push
xchg
or
ret
ss
rol
je
push
dec
mov
sub
or
ljmp
int3
add
or
mov
loop
jecxz
fsubs
mov
cld
ja
adc
xor
rclb
push
inc
into
sub
push
fs
in
mov
xor
jg
stos
pop
shrl
xchg
imul
fcmovnbe
inc
sub
dec
repnz
lds
xchg
and
and
lods
cmp
inc
inc
call
push
cmp
popa
insb
shll
insb
push
lea
icebp
push
cld
jl
push
std
call
mov
inc
hlt
scas
fldcw
inc
mov
xchg
roll
or
js
scas
xor
jge
rcrl
outsl
insb
shr
dec
data16
xchg
popa
jb
loopne
inc
shrb
dec
cwtl
ljmp
cmp
jo
lahf
cli
xchg
andl
jmp
mov
cmp
push
cmp
jp
mov
out
loop
rolb
bound
add
rclb
or
popa
push
outsb
pop
fwait
and
jne
inc
aaa
ret
subb
jb
inc
or
mov
imul
pop
inc
cmp
in
js
xlat
push
add
mov
xor
and
in
inc
ja
cli
push
arpl
xchg
pushf
stos
mov
xor
xor
inc
jae
lock
xor
inc
cs
imul
insb
push
dec
inc
jg
xchg
sub
mov
mov
xchg
cld
mov
sbb
das
js,pt
scas
pop
fnstsw
scas
js
sbb
imul
ret
ret
mov
mov
xor
mov
sbb
mov
mov
sub
inc
dec
mov
push
push
mov
and
fsubp
xchg
lock
xor
or
cmpsl
outsb
mov
and
fwait
or
stos
push
ja
ret
lock
aaa
bound
add
push
pop
push
add
jecxz
add
push
push
add
jg
inc
clc
mov
sub
cltd
lcall
insl
pop
test
lahf
jle
inc
popa
imul
mov
lea
dec
bound
lret
ljmp
dec
sbb
or
dec
in
xchg
dec
movsb
test
adc
lea
je
jo
push
cmp
or
sbbb
add
into
push
dec
ljmp
jle
jb
inc
popa
inc
inc
dec
enter
pop
jbe
cmp
sub
fldl
adc
and
fneni(8087
rol
cmp
jbe
xchg
dec
dec
addr16
inc
test
aad
inc
out
rcrl
push
xor
dec
xchg
push
add
aas
cmp
push
mov
cmp
pop
movsl
rcr
jne
pop
push
xor
repnz
scas
pop
imul
inc
bound
es
xchg
push
data16
rol
sbb
push
jge
mov
das
pop
sbb
pushf
js
ret
gs
add
arpl
pusha
jne
loope
test
movsl
imul
cmp
push
in
call
or
inc
jl
add
aam
inc
outsb
push
lahf
cmc
mov
mov
add
jecxz
xchg
mov
test
scas
mov
mov
mov
call
or
mov
les
loop
inc
mov
and
call
jmp
dec
jb
stos
mov
push
mov
lea
pop
inc
sub
jbe
mov
cmpsb
arpl
add
mov
add
jle
loop
jns
xor
push
mov
sbb
ret
add
ljmp
add
and
js
mov
and
jp
inc
xor
dec
lahf
nop
stos
inc
shll
or
js
dec
inc
les
jb
in
and
jg
or
data16
cltd
and
in
outsb
dec
add
ja
or
mov
dec
cltd
mov
out
push
push
imul
dec
lods
inc
inc
pushf
xchg
popa
lds
jg
push
cld
lahf
jp
inc
lahf
push
fs
pop
jns
xchg
mov
jecxz
rorb
push
add
dec
int
rorb
dec
out
and
or
push
loop
clc
push
in
iret
nop
cwtl
push
movb
incb
cld
push
je
gs
repnz
push
add
es
dec
push
lods
or
insl
je
cli
jne
popf
sbb
fnstenv
rorb
push
incb
inc
nop
xlat
test
inc
pushl
fldt
pop
cmp
dec
icebp
inc
sar
sbb
aad
jne
inc
push
hlt
dec
and
pop
test
popa
adcb
add
pop
movsb
push
jo
aaa
rorb
pop
inc
xchg
dec
stc
bound
push
inc
or
decl
push
in
subb
sahf
xor
loope
xchg
shrl
xor
and
jno
pop
dec
dec
jmp
push
add
pop
test
mov
inc
push
push
mov
stc
cmp
or
cmp
lahf
adc
mov
popf
xlat
pusha
xchg
mov
out
push
js
loope
dec
xor
inc
push
fsubr
test
xor
stc
into
scas
add
jo
pop
fsin
ljmp
subl
out
movl
inc
lock
or
je
jb
inc
and
rclb
faddl
xchg
sbb
sbb
dec
cwtl
and
mov
dec
loopne
jnp
or
sbb
dec
push
subb
cld
jmp
aad
out
jg
sub
imul
cmp
clc
shrl
jae
pop
popa
cmpb
xor
pusha
xor
nop
cmp
mov
sbb
xor
mov
sub
mov
mov
xchg
cmp
lret
or
sbb
push
pushf
shll
sbb
cli
mov
pop
xchg
pop
repz
fisttpl
imul
jecxz
je
lock
dec
sbb
add
inc
lret
shlb
jnp
movsl
jae
icebp
and
push
pop
push
inc
jo
cmovbe
push
inc
add
inc
ljmp
pop
inc
ret
sbb
cmpsb
ss
aam
cltd
sbb
jl
sub
mov
mov
sub
jo
popa
aam
das
imul
xchg
ljmp
push
inc
out
les
fnstenv
or
call
fcmovu
lock
rorb
add
adc
inc
push
mov
inc
inc
xor
bound
push
push
lea
sub
inc
js
lret
addb
xor
push
ss
jo
das
aam
push
fcom
dec
mov
pusha
outsb
imul
push
sar
mov
int
loope
mov
adc
ret
lock
dec
xchg
mov
sbb
lea
cmp
js
loope
out
shll
out
je
bound
inc
mov
mov
push
mov
xor
jg
sbbb
ficoml
pushl
fneni(8087
stc
jmp
xor
or
push
add
rolb
outsb
addr16
sarl
add
ret
jbe
pop
jmp
bound
jl
add
push
arpl
adc
pop
pushf
push
push
lret
xchg
dec
xchg
mov
std
sti
scas
sub
fsubs
push
aas
stos
lds
inc
push
loope
rolb
lods
mov
dec
mov
icebp
pop
imul
imulb
js
ret
incl
inc
fnstsw
fldcw
mov
jg
jne
sbb
cmp
pop
mov
or
out
sti
push
jo
rorb
movsl
jno
push
idiv
cmpsb
ja
daa
or
ffree
dec
arpl
push
das
push
ss
lock
jp
jl
add
pushl
pop
fists
pop
popa
int
je
mov
pop
scas
jl
xor
mov
roll
aam
outsl
push
lods
loopne
mov
push
push
push
dec
pop
push
cmp
scas
push
addb
push
loopne
xorl
popa
sbb
lcall
mov
shll
xor
repz
and
mov
push
inc
outsb
push
imul
push
xor
js
insb
pop
push
ret
and
iret
mov
sbb
loopne
sahf
xor
push
call
inc
ret
lock
subl
or
into
fnsave
ficompl
inc
push
or
rorl
mov
jl
data16
inc
dec
rorl
jg
mov
cmp
dec
inc
ds
mov
push
nop
add
mov
jbe
inc
gs
popa
mov
inc
dec
inc
out
cli
incl
inc
lods
adc
fidivs
test
test
sahf
jl
sbb
xor
clc
fincstp
outsb
adc
filds
xor
into
push
inc
ja
loopne
je
inc
lahf
xor
out
lods
pop
mov
js
dec
jb
in
adc
popf
dec
jbe
dec
inc
shlb
in
ljmp
sub
gs
dec
jge
xchg
dec
aam
stc
lret
inc
movsb
call
jne
jno
int3
push
push
in
inc
pushf
cmp
lret
push
pop
mull
xor
lods
ffreep
scas
mov
rclb
mov
popf
xchg
je
pop
mov
fiadds
dec
test
mov
mov
call
or
mov
adc
in
movsb
or
push
addr16
adc
ret
inc
push
pushf
cmp
sub
dec
incl
push
cmp
call
xchg
fwait
mov
jmp
neg
fmull
dec
test
push
gs
nop
jne
repz
repnz
call
cmp
jge
cmp
jl
push
mov
sarb
bound
daa
insl
shrb
aaa
jb
xor
xor
fs
adc
stos
mov
push
push
cld
jmp
or
aam
repz
dec
or
push
dec
std
js
pop
sbb
mov
stc
push
dec
mov
dec
jl
xor
int3
dec
xor
outsb
addr16
aas
cmp
loop
cwtl
arpl
flds
cmpsb
subb
push
mov
lret
and
push
repnz
in
outsb
inc
push
or
dec
pop
inc
imul
ret
xor
sbb
and
and
add
push
inc
inc
clc
add
test
cmpsb
inc
fadd
decl
mov
pop
ds
adc
inc
scas
mov
xchg
jns
mov
clc
or
fs
mov
loop
lods
sbb
jl
xor
add
pushf
dec
mov
inc
mov
jmp
xor
aaa
add
lods
neg
fsubs
inc
sub
ret
lcall
jge
sbb
inc
mov
aaa
cmc
filds
adc
lcall
xor
push
fstpt
daa
test
jge
fcomip
popa
or
pop
mov
and
jp
mov
sbb
sub
jns
loope
neg
arpl
push
and
scas
pop
clc
incl
mov
add
jge
cs
dec
out
ror
orl
shll
call
mov
jne
and
adc
mov
and
popf
test
es
enter
push
push
imul
dec
aas
or
push
jmp
xor
rorl
das
loopne
inc
insb
mov
inc
loop
inc
loopnew
jle
leave
pop
cld
lcall
sbb
fisubs
out
sbb
ja
addb
pop
loope
lret
cld
cmp
xchg
rcrb
mov
fiaddl
mov
adc
ss
pop
cmpsl
cld
incl
mov
sub
out
into
jl
dec
mov
pop
icebp
xchg
inc
adc
push
outsb
sbb
and
push
enter
je
stc
lock
enter
aaa
inc
xor
ds
repnz
xchg
repnz
sbb
jmp
gs
mov
xchg
dec
jae
ret
cmp
xchg
and
faddl
outsl
pop
roll
arpl
adc
push
dec
adc
jg
push
and
jns
loope
rcrl
sbb
sarb
adc
andb
adc
mov
paddw
mov
mov
push
mov
xchg
mov
sbb
mov
pop
sbb
ja
jp
push
or
xor
xor
outsb
lcall
mov
adc
xor
movsl
and
jecxz
xchg
repnz
dec
hlt
adc
outsl
xchg
imul
insl
inc
push
out
jnp
and
xor
fistps
je
bound
sbb
add
jge
xchg
iret
clc
jae
push
incl
pop
fwait
call
adc
pop
mov
bound
pop
inc
inc
pusha
jb
push
xor
int3
cmp
push
dec
je
jbe
dec
push
cld
out
or
push
call
cli
sbb
cmp
data16
sbb
and
out
xor
push
jns
call
lods
imul
dec
into
inc
gs
inc
leave
mov
dec
js
xor
outsl
sub
push
or
inc
jnp
or
jecxz
jne
stos
xorb
ret
jae
stc
dec
sub
jne
adc
jb
sub
enter
dec
lods
ret
gs
pushl
inc
xchg
fldt
call
push
mov
insb
das
jae
and
xchg
dec
inc
lcall
sbb
fsubrp
loope
add
lods
mov
in
pop
scas
clc
mul
mov
xlat
add
sbb
cmp
inc
jo
loope
mov
sti
iret
jb
or
or
shlb
sub
fidivrl
dec
push
push
jae
push
mov
call
mov
leave
mov
dec
pop
xchg
mov
fiadds
xchg
push
pusha
loopne
inc
mov
ds
and
adc
movsb
mov
pop
jg
insl
imul
fsubrs
add
add
ss
sbb
adc
xor
lcall
dec
mov
ret
push
sbb
in
mov
push
cmp
std
call
pop
sbb
xchg
call
js
in
pop
add
adc
dec
pop
ss
rcll
ljmp
jne
fdivs
inc
icebp
dec
mov
xchg
fsubrs
pop
dec
lods
xor
dec
inc
jl
js
inc
jo
push
adc
popa
inc
inc
push
out
cmp
or
inc
push
scas
mov
fucomip
fs
dec
jo
pop
sahf
fcomp
iret
pop
dec
cwtl
push
sbb
pop
cld
sbb
and
lock
push
ror
xchg
scas
cmp
or
shll
sub
add
ss
mov
call
xchg
mov
ljmp
imul
xchg
jae
dec
pop
push
arpl
and
push
outsb
jo
gs
roll
adc
inc
xchg
push
popf
incl
mov
cmc
dec
cmp
shll
mov
add
mov
aad
cmp
mov
sbb
div
xchg
addb
cmp
inc
push
inc
mov
xchg
xor
jae
sub
xchg
push
and
lcall
cmpsb
add
push
dec
or
adc
add
mov
and
das
dec
jbe
xor
xor
push
dec
movsb
ret
pop
adc
addr16
ss
mov
dec
pop
push
shrl
dec
call
sbb
scas
push
mov
imul
pop
sbb
mov
jecxz
adc
adc
jae
jae
inc
mov
out
push
jae
jle
inc
loopne
jae
iret
inc
jmp
mov
and
dec
pop
and
in
cmp
test
ret
xchg
cmp
pushf
je
inc
xor
mov
pushl
inc
dec
mov
cmp
lret
push
int3
sub
or
ds
push
inc
lock
pop
inc
inc
jne
or
mov
adc
ret
jo
aas
pop
test
dec
push
je
pop
sbb
pop
add
lret
repnz
push
stc
jle
enter
mov
and
test
loopne
adc
cmp
push
aaa
push
lock
push
bound
dec
rcr
sub
fs
imul
jb
push
movsl
add
fs
dec
lock
mov
outsb
sbb
cwtl
jb
shll
vpmadcswd
ror
imul
fcompl
push
fadds
push
jg
mov
push
scas
jae
cli
cmpsl
lret
push
sarb
xor
ret
lcall
mov
xchg
bound
movsl
imul
add
sbb
sub
sbb
fs
les
mov
iret
sub
mov
loop
sub
ss
jae
cld
ja
dec
inc
movb
xor
push
dec
dec
mov
push
mov
xchg
add
lea
inc
pop
sub
push
ds
test
inc
fisttps
lret
lds
stos
mov
aam
or
adc
xor
nop
aaa
jns
ljmp
aaa
xchg
dec
and
out
cld
out
cli
enter
ljmp
cmp
push
adc
sti
cmp
mov
dec
sar
jo
add
loopne
sbbb
xor
in
lea
mov
and
ljmp
mov
pop
je
xchg
rclb
mov
orb
sub
fwait
and
xchg
push
xor
ret
push
inc
jnp
ss
les
test
xor
push
sti
pop
sub
nop
mov
push
dec
call
add
cmp
lret
mov
scas
adc
cmp
inc
push
ljmp
sahf
inc
mov
imul
mov
sub
dec
jo
iret
and
lea
stos
add
pop
xchg
mov
xchg
dec
pop
gs
arpl
gs
int3
and
jbe,pn
jg
loopne
jg
sub
test
testl
push
movsb
dec
clc
popf
gs
sahf
mov
fadd
cmp
mov
push
jnp
cmp
addr16
repnz
push
lock
mov
jno
mov
fcmovb
or
push
jb
dec
outsb
or
cli
sub
jbe
xor
inc
aaa
cmp
dec
es
jg
arpl
dec
mov
jle
adc
bound
loopne
and
sbb
fistl
outsb
inc
add
test
add
sbb
test
dec
inc
jo
xor
pop
mov
xor
cli
jp
pop
add
xchg
dec
dec
xor
lret
xor
lock
int
and
popa
aaa
cwtl
inc
jg
js
std
pop
pop
stc
in
add
movsb
cmp
jl
cs
aam
cwtl
inc
pop
dec
ja
loope
and
cltd
clc
scas
pop
pshufw
cmp
push
stos
out
xor
loop
pop
leave
or
or
aam
ljmp
in
icebp
ret
sub
mov
and
mov
js
mov
cs
or
clc
dec
dec
inc
inc
push
sub
sub
add
mov
and
xchg
xor
std
incl
nop
pop
andl
call
inc
bound
mov
inc
fs
mov
inc
ss
sbb
subb
ss
insl
adc
mov
out
inc
dec
imul
xor
xor
fldl
and
ss
cs
lcall
sub
cltd
pushf
and
scas
cmp
jae
dec
aaa
cmp
sub
nop
loopne
pushl
push
push
pop
push
fdivr
jg
int
inc
push
jo
ljmp
lock
cmp
lock
push
and
xchg
call
dec
cmpl
lret
add
push
in
sbb
sub
nop
mov
mov
push
dec
lock
aad
icebp
or
inc
out
int3
xchg
mov
out
push
pop
fucom
ljmp
ljmp
imul
shr
stc
loopne
sahf
fbstp
in
pop
out
xchg
mov
mov
pushf
jg
pusha
push
adc
mov
ret
pop
push
repnz
push
mov
rcrb
xchg
sbb
xchg
out
fdiv
jg
push
add
or
nop
jl
pushl
leave
stos
pop
dec
out
out
mov
mov
lock
pop
insb
gs
dec
stos
mov
pushf
lcall
dec
inc
add
imul
pusha
iret
popw
decb
push
xchg
divb
xchg
js
jg
lock
mov
je
out
xchg
scas
ss
enter
jp
jl
ret
rorb
and
repnz
mov
fidivl
jnp
in
cs
mov
iret
icebp
into
fldt
out
and
insb
aaa
fwait
xor
int
frstor
ret
xchg
les
inc
or
ja
popa
test
mov
sub
cmp
dec
sbb
decb
lcall
test
cmc
insl
lods
lcall
insb
sub
mov
sbb
pop
insl
or
ret
add
addr16
outsl
push
stc
or
jno
nop
pop
stos
jno
xchg
pop
mov
cmp
xor
jle
lock
push
mov
fdivrl
mov
test
push
jbe
mov
dec
jnp
inc
inc
xor
mov
fmull
jne
dec
add
push
movsb
fs
xchg
push
pop
mov
add
jo
or
inc
mov
xor
movsb
push
insl
inc
ss
into
loopne
ljmp
fiadds
inc
dec
bound
add
dec
push
pop
inc
gs
cmp
fistpll
or
mov
mov
xchg
xor
popa
int
fs
pushl
psubd
push
cli
mov
clc
aad
std
cmpsl
imul
or
clc
dec
mov
dec
push
jp
mov
jg
dec
cmp
jnp
push
cmp
das
pusha
xchg
in
push
push
push
or
inc
inc
bound
jne
ljmp
outsl
jle
mov
and
mov
mov
fmul
bound
aas
sub
addl
lcall
or
jg
loopne
insl
inc
jb
inc
push
mov
inc
jle
jecxz
into
enter
add
fisubs
negb
cmp
fimull
imul
dec
popa
adc
inc
pushf
pusha
mov
dec
push
pop
mov
aam
push
insb
xchg
adc
nop
les
icebp
cltd
call
and
sbb
sbb
arpl
jb
imul
in
inc
or
pop
xor
mov
inc
push
inc
out
stc
dec
loopne
mov
inc
mov
jns
push
mov
jae
dec
push
subb
roll
leave
std
je
ss
stos
icebp
jmp
jbe
inc
or
dec
inc
shlb
faddp
xor
sar
fwait
lea
mov
lock
sahf
int3
sub
out
sar
leave
imul
dec
sti
out
sbb
jne
inc
cmc
mov
xor
imull
jmp
sub
mov
xchg
mov
dec
mov
les
out
xor
jmp
push
sub
push
xor
sbb
cmp
lahf
addr16
cld
pushl
dec
lods
mov
mov
inc
sbb
rol
fdiv
insb
stos
aad
and
lret
fcoms
sbb
mov
push
push
sbb
push
pop
inc
addr16
popa
test
jmp
xchg
sahf
divb
jle
test
inc
ljmp
repz
sub
rorl
lods
adc
lcall
sbb
lea
push
add
inc
inc
pop
jg
pop
lahf
push
jl
adc
pop
cmp
pushf
xor
jo
xchg
divb
les
or
dec
push
enter
cwtl
push
lcall
into
jp
sbb
cmc
test
push
mov
adc
insb
push
imul
cmp
and
push
jp
nop
sar
mov
xchg
es
xorb
hlt
repnz
xchg
loopne
andb
arpl
inc
sahf
jp
dec
inc
push
stos
sub
jo
loop
inc
dec
jge
clc
jmp
push
outsb
push
inc
xor
test
xor
incl
push
repz
ss
ss
sbb
in
mov
int
outsl
pop
or
fisttps
dec
data16
xchg
add
cmp
into
jbe
imul
pop
mov
inc
pop
push
outsl
cmc
les
mov
or
pushl
bound
loop
js
je
jne
fsub
jo
fcomps
imul
lock
into
bound
add
sahf
ss
mov
andl
lret
dec
in
lcall
push
pop
setle
sub
aad
cmovne
push
mov
loop
sbb
push
xchg
mov
hlt
bound
cmp
ror
inc
add
jb
or
lret
jb
call
lock
sub
mov
cmp
xor
cmp
sbb
xchg
and
dec
dec
addr16
stos
testb
nop
mov
outsb
pop
adc
fidivl
jg
call
push
lahf
cmpsl
xor
and
sbb
cwtl
xor
or
bound
arpl
sbb
sbb
mov
jl
xor
add
inc
push
xor
cld
aad
insb
dec
jbe
inc
js
addb
stc
int3
xorb
decl
pop
xor
mov
push
pop
sbb
outsb
pushf
std
pusha
test
outsl
push
in
dec
xchg
add
push
pop
lcall
inc
xchg
jno
fistpll
call
or
out
xor
loopne
push
jb
stos
inc
sbb
xchg
adc
mov
test
xor
dec
and
jae
mov
sbb
xchg
and
mov
push
fnstenv
movsb
int3
push
dec
ss
ret
sar
hlt
enter
sub
push
enter
sub
or
pushf
aad
movsb
mov
jne
ret
lods
jmp
pop
in
dec
lcall
rol
stos
jle
mov
scas
lods
aas
lret
imul
jne
push
dec
imul
or
imul
lea
je
aaa
inc
push
call
pop
test
in
insb
inc
xchg
call
mov
mov
icebp
or
jno
pop
lock
xchg
lcall
mov
popa
outsb
inc
inc
mov
inc
insl
enter
jg
pop
add
mov
mov
mov
subb
fisubs
inc
rorl
inc
cli
lret
and
imul
lea
inc
inc
rcrl
test
imul
and
loop
sbb
lret
test
inc
jbe
int3
rolb
xor
jg
fs
or
lret
pop
les
add
ret
repz
pusha
lods
aad
lock
push
les
mov
cmpsb
or
jns
inc
pushw
mov
push
push
imul
aam
pop
lahf
icebp
ret
jmp
ja
pop
cs
inc
popf
jbe
aaa
push
push
loop
push
iret
enter
dec
xor
loopne
fnstenv
jne
dec
outsb
addr16
add
push
jne
push
js
mov
ss
hlt
and
mov
push
lcall
xchg
mull
nop
aad
movl
xchg
jbe
iret
sbb
dec
mov
inc
inc
mov
aam
repnz
std
and
shrl
inc
mov
gs
sbb
mov
xchg
data16
arpl
ljmp
scas
push
or
jle
sbb
sub
cmp
int3
or
jmp
adc
xchg
and
push
and
sub
incl
add
loope
inc
js
or
and
jl
ret
mov
loope
xor
loope
outsl
add
aas
pusha
xor
mov
mov
cltd
stos
mov
pop
test
pushf
shrb
mov
jg
mov
push
out
dec
lock
je
or
jo
cmp
insb
sub
jg
sub
mov
mov
mov
pop
mov
fs
dec
pop
test
loop
xlat
xor
hlt
ret
cmp
orb
dec
fisubrs
ja
push
sub
add
jmp
clc
inc
jl
sbb
pop
clts
not
cmp
fucomi
push
dec
xchg
repz
inc
icebp
xor
dec
jle
jo
jae
mov
movsl
jo
ss
test
lock
lcall
push
stos
das
push
jns
int
and
dec
pop
sahf
popl
pop
ljmp
push
and
push
shl
sbb
add
ljmp
cli
mov
mov
xor
cmpsb
xchg
fists
and
push
add
and
imul
loopne
or
xchg
fistpll
scas
popa
inc
or
lds
mov
ljmp
jge
pop
adc
xchg
inc
adc
xor
sbb
mov
inc
jbe
movsb
insb
je
xor
dec
cpuid
ds
fadd
xchg
cmp
fistps
js
and
jg
addb
std
fldenv
push
pop
dec
mov
cmpl
cs
sahf
mov
outsl
cmc
cwtl
cmp
les
inc
push
shlb
loope
rorb
mov
iret
dec
or
fisttps
sbb
in
iret
jb
cld
insl
ret
les
rcrl
mul
or
adc
sbb
xchg
cmp
decl
mov
inc
dec
mov
bound
dec
adc
mov
add
inc
xor
aaa
cmp
adc
xchg
mov
mov
clc
mov
ss
ja
xor
imul
aam
cmp
or
dec
inc
pop
mov
pop
fcompl
pusha
mov
xor
in
fcomps
add
clc
or
mov
mov
inc
jp
pop
aad
aam
xor
dec
push
pop
inc
pop
add
pop
aaa
cmp
cwtl
insb
cli
xor
lds
mov
push
push
inc
iret
push
mov
xchg
addr16
lret
sub
test
shll
mov
sub
mull
dec
outsb
dec
mov
ss
outsl
imul
aas
mov
es
xchg
jp
dec
fcmovu
ds
ss
push
push
sub
mov
mov
push
les
inc
icebp
push
js
sbb
lret
xor
loopne
clc
mov
stos
sub
mov
cmp
sub
dec
cmp
xor
sub
pop
sbb
dec
jno
cmpsb
insb
lods
or
dec
push
dec
jne
mov
sbb
mov
inc
insl
mov
or
inc
sbb
out
test
xor
push
pop
mov
and
xchg
out
add
fs
jae
dec
fmuls
std
sahf
xchg
in
jae
dec
mov
push
jbe
je
jo
push
mov
xchg
lahf
fs
push
pop
rolb
inc
dec
jne
ljmp
add
loope
lock
mov
ss
xor
cmp
push
sbb
adc
jle
popa
fadds
push
outsb
xor
fldl
scas
les
jle
mov
aad
push
xor
pop
xchg
frstor
jbe
ds
sbb
fcomps
and
inc
arpl
jmp
in
hlt
jp
xchg
and
rcrl
jecxz
fldcw
add
shlb
or
arpl
dec
sub
imul
mov
xchg
test
add
hlt
sahf
fimuls
aas
addr16
ljmp
or
cwtl
pop
std
fcmovnbe
cmp
mov
stos
and
ret
jne
out
pop
xor
mov
dec
dec
xor
or
idivb
int
test
cltd
js
stos
sbbl
mov
lock
xchg
push
aaa
add
jns
and
pop
push
lret
fidivs
js
test
test
out
xor
or
mov
das
clc
jbe
pop
jae
leave
xor
inc
test
and
je
clc
sbb
lret
sbb
cmp
dec
inc
sahf
or
add
cmpsb
into
popa
outsl
loopne
movlhps
xor
test
sbb
insb
jne
jmp
mov
mov
jne
adc
dec
decl
sub
movb
adc
jb
adc
jmp
cmpsb
inc
mov
dec
push
push
hlt
or
cmpsl
mov
aaa
adcb
xor
xchg
jmp
add
aaa
xor
jo
adc
inc
pop
hlt
in
jb
xlat
jg
jnp
es
inc
ss
dec
orl
es
je
std
call
add
sbb
push
lds
push
cmp
xlat
sti
push
inc
inc
in
fs
je
pop
dec
sub
call
mov
push
out
leave
out
or
sbb
and
xor
xchg
mov
push
dec
inc
dec
add
lods
inc
xor
sub
psllw
inc
out
push
push
push
dec
sbb
fimull
xor
test
iret
out
pop
popf
icebp
add
push
inc
push
lock
test
in
setb
mov
fs
mov
dec
jns
incl
rorl
pop
jbe
je
pop
pop
push
mov
rol
loope
outsb
cmp
dec
out
xor
push
add
cmp
pop
pop
dec
ljmp
decb
cld
in
sub
sub
arpl
jo
movsl
ds
mov
push
jle
mov
dec
in
jne
push
push
inc
dec
add
mov
scas
cmp
fidivs
xchg
outsb
rorl
mov
jo
xchg
push
sti
pop
outsl
clc
icebp
sbb
push
mov
xor
adc
dec
ss
dec
cmp
pop
in
or
xor
mov
or
jne
lods
jo
insb
push
daa
mulb
pop
add
call
fsubl
dec
and
push
in
ds
mov
add
adc
inc
std
ljmp
xor
inc
xor
jg
bound
shlb
js
push
jo
sbb
ljmp
mov
mov
rclb
or
xlat
in
rcl
test
pop
sub
add
fs
ret
sub
jne
ljmp
lret
ret
inc
pop
in
aaa
ret
xchg
outsb
insb
insl
add
adc
scas
lcall
insl
arpl
mov
lahf
fwait
jae
cmpb
shlb
sbb
inc
sahf
jns
inc
push
push
sbb
ss
outsl
test
xchg
sub
stc
inc
pusha
in
jmp
ret
xor
mov
xchg
fisubs
adc
out
inc
arpl
ret
inc
fwait
pushl
push
inc
dec
jl
mov
fstp
ljmp
sbb
sbb
fnsave
push
push
push
push
daa
inc
dec
mov
outsl
push
dec
inc
ljmp
xor
mov
ds
mov
call
loop
arpl
jae
addr16
jl
jmp
mov
jo
ds
imul
inc
and
int
push
icebp
xchg
jne
inc
add
cmp
lods
cmp
add
pop
inc
xor
cwtl
push
ljmp
add
insl
pop
imul
xor
int
mov
pushl
pop
addr16
mov
push
adcl
dec
jo
loop
fiaddl
push
dec
inc
push
xchg
clc
lcall
add
cmp
inc
adc
std
dec
sub
in
xor
movsb
push
mov
inc
dec
ja
movsl
push
popf
sub
mov
inc
dec
pop
loopne
adc
mov
or
fbld
cwtl
addl
or
ss
inc
fcoms
mov
sub
jo
and
add
adc
inc
sbb
and
insl
jne
mov
and
shl
add
decl
push
or
test
imul
mov
xor
inc
cs
xor
push
scas
or
in
je
aas
sbb
popa
jno
inc
pop
call
sub
pop
ljmp
rorb
lods
je
lods
mov
icebp
cwtl
lahf
shl
push
pop
mov
imul
dec
pop
adc
fs
scas
lds
mov
xorb
rorl
jg
pop
sub
mov
inc
mov
repz
and
and
enter
or
dec
push
ret
inc
pop
dec
das
aam
push
adc
inc
jbe
xor
push
pop
test
jne
data16
dec
cmp
pop
pushw
fdivrp
fisttps
pusha
dec
sub
cmp
xor
push
fsubs
pop
scas
sahf
fsubs
in
jne
adc
pop
jno
sub
pop
xlat
pop
test
popa
inc
sbb
pop
sub
arpl
lods
push
imull
push
lods
fbld
cli
pop
icebp
call
push
stos
pop
or
xchg
std
fistpll
in
sbb
or
int
jg
push
jl
rorb
inc
push
cli
push
push
xchg
push
cmp
aaa
or
push
inc
push
xchg
incl
cmp
xor
pop
js
fwait
jb
aad
xor
incl
test
mov
pop
loop
or
jge
addr16
movsb
and
sbb
fs
push
jmp
les
sub
js
inc
cmp
push
push
add
push
sarb
adc
das
or
sti
sbb
lods
cmpl
dec
push
popa
inc
lock
shrb
pop
cmpsb
dec
jne
jb
mov
ds
test
dec
inc
sub
gs
inc
fucompp
jb
push
bound
aaa
mov
cld
scas
lods
mov
mov
push
dec
test
jns
xchg
jp
xor
in
addb
push
je
cmpsb
fistpll
inc
xor
enter
lcall
inc
xchg
lods
test
jp
adc
fsubrl
inc
mov
in
sbb
lahf
cmc
xchg
lock
es
in
flds
mov
sbb
ds
jo
insb
xchg
aam
jo
cmpsl
insb
rorl
jbe
hlt
imul
lods
xchg
aaa
dec
das
icebp
and
sbb
inc
js
pop
in
and
icebp
ljmp
jecxz
popf
xchg
cs
mov
push
fisttpll
repnz
popf
jo
inc
dec
roll
test
test
inc
jg
push
lret
mov
cltd
hlt
jl
mov
sub
gs
adc
mov
xor
sbb
cmp
xor
ljmp
push
js
inc
xor
mov
inc
lahf
adc
push
xchg
inc
outsl
push
pop
push
ret
mov
icebp
jge
mov
push
pop
jns
push
fcoms
sub
dec
push
xchg
inc
sarl
js
dec
inc
adc
inc
push
pop
inc
xor
inc
jno
inc
inc
xchg
shl
popa
push
add
fsubrl
xor
push
pop
add
inc
pushw
and
shrl
lea
popa
adc
cltd
lods
xchg
stc
aam
sbb
pop
sbb
push
je
sbb
fcomip
test
adc
pop
inc
dec
outsb
dec
cld
xlat
fwait
aam
les
enter
dec
dec
add
ljmp
and
sub
outsb
add
push
loopne
out
jle
mov
and
pop
repnz
jo
pusha
dec
stc
clc
ss
jbe
dec
pop
cld
scas
movsb
dec
hlt
outsl
xor
enter
push
mov
sub
jg
pop
cmp
mov
popf
and
jae
and
and
and
lods
mov
adc
add
dec
push
push
cmpsb
add
ljmp
push
in
movsl
push
hlt
sahf
cld
sbb
fidivrl
test
pop
add
pushf
sbb
xchg
adc
lock
cmp
add
xchg
xor
rclb
pop
js
push
dec
aas
cmpb
mov
and
imul
outsl
pop
addb
std
add
int3
inc
into
inc
inc
test
loope
mov
int3
xchg
sbb
inc
cs
je
gs
fs
cmpsb
sub
jp
loop
outsl
or
clc
lret
push
orl
add
inc
and
mov
xor
inc
xchg
cltd
sub
mov
stc
nop
inc
js
bound
test
filds
dec
inc
bound
mov
popa
mov
add
xor
inc
sub
jb
shl
push
push
add
fsubr
jmp
inc
js
inc
cmp
imul
xor
mov
and
mov
and
ja
cwtl
movl
pop
mov
inc
insb
push
hlt
pop
nop
mov
pop
xchg
push
data16
imul
dec
push
inc
mov
inc
ja
dec
cmp
mov
les
jg
or
dec
and
xor
pushf
inc
dec
inc
scas
dec
xor
xchg
fiaddl
addb
clc
push
fistl
cmp
mov
xchg
push
repz
jle
cmp
fdiv
pop
clc
popf
jne
or
xor
nop
mov
fisubrs
test
cmpsb
or
and
and
aaa
inc
adcl
push
adcb
ret
or
xor
add
jo
mov
xchg
adc
fldcw
arpl
inc
outsl
xchg
movsl
lock
push
jo
jo
push
bound
dec
xor
ljmp
fwait
mov
push
pop
cmp
cltd
push
sahf
movsb
dec
lock
jle
fcomps
std
lret
fldenv
inc
ds
push
xor
add
pop
fs
movsb
mov
or
mov
mov
cmp
loopne
or
push
insl
dec
push
push
xor
jb
je
jle
pusha
xor
decb
imull
xchg
lods
fisubrs
pushf
mov
mov
push
xor
push
shlb
push
dec
mov
arpl
dec
aaa
add
jb
dec
inc
pop
jae
arpl
outsb
push
push
subl
out
je
popa
fldcw
jecxz
jmp
inc
outsl
int
scas
jbe
mov
jp
aam
imul
jecxz
push
xor
pop
loopew
js
dec
dec
clc
xor
inc
xor
cld
test
mov
fistpl
sub
cmpxchg
call
pop
sahf
sub
std
pusha
scas
and
cmp
sahf
add
dec
or
pop
xchg
xor
push
push
sub
dec
push
dec
inc
popf
fmuls
mov
loopne
incl
jns
jmp
loope
scas
adc
mov
dec
xor
cmp
shrb
je
dec
pop
js
xchg
fisubrl
pusha
imul
inc
push
xor
dec
ja
or
mov
inc
decl
cmp
inc
outsb
mov
and
hlt
rcll
dec
ss
mov
pushf
and
jp
and
lret
test
lods
xchg
ret
dec
or
aaa
icebp
xchg
into
ljmp
sub
cltd
xchg
icebp
lret
add
pop
mov
pop
pop
fistl
mov
dec
addr16
mov
push
xor
jnp
mov
add
addr16
fisttpll
sbb
lods
jno
sbb
bound
pushf
idivl
mov
jno
inc
mov
or
lret
es
cmp
hlt
inc
int3
cmpsb
push
je
jb
dec
pop
dec
jns
lahf
pusha
inc
and
cmp
push
icebp
pop
jp
lahf
mov
xor
adc
inc
std
xor
xor
mov
and
test
out
push
xor
add
inc
movsb
ret
xor
nop
add
push
push
push
fsub
xor
pop
or
ljmp
imul
scas
int3
test
clc
es
dec
mov
fwait
mov
pop
push
add
test
xor
dec
cld
stc
inc
std
ja
pop
cmp
daa
mov
dec
bound
xchg
and
lret
ljmp
push
xor
outsl
cmp
ficoml
insb
add
sub
pop
aaa
outsb
cld
clc
jecxz
mov
in
orb
outsl
ljmp
enter
or
data16
mov
cmp
push
mov
and
iret
dec
in
rcl
inc
push
enter
pop
jmp
aaa
jbe
mov
push
stos
push
push
pop
xor
sub
inc
xchg
or
subb
xor
out
cs
mov
call
adc
nop
push
iret
cmp
push
ret
add
js
pop
or
fs
jb
call
mov
imulb
mov
mov
dec
ds
or
imul
rclb
pop
mov
repz
xor
dec
sahf
test
shrb
jne
sub
dec
mov
cmp
stos
cld
xchg
mov
adc
loopne
aaa
cli
jp
xor
vrcpss
jno
adc
xor
ja
add
jbe
mov
sbb
xorb
insb
jae
loope
lret
mov
push
push
xor
push
xor
dec
mov
aad
bound
pop
dec
mov
cmpb
push
leave
sub
push
add
fadd
test
repnz
xor
jle
and
and
icebp
mov
or
aaa
cld
mov
repnz
push
dec
inc
xor
iret
shll
aaa
cmp
add
adc
imul
in
mov
sub
jno
mov
pop
stc
or
push
adc
pop
cmp
fstl
push
enter
push
das
stc
fnstenv
ds
and
xchg
aaa
dec
decl
dec
jb
jle
mov
push
mov
mov
pop
sbb
dec
inc
pushf
mov
aam
jbe
mov
fdivs
pop
dec
cmp
cmp
decb
jae
je
dec
sub
push
test
push
outsb
mov
dec
adc
jo
or
ds
enter
data16
and
jp
dec
arpl
or
outsb
filds
test
jnp
inc
inc
dec
insl
das
cmpsb
jp
jnp
fs
push
adc
fisttps
loopne
das
xchg
adc
fwait
cmp
add
sti
out
fists
mull
hlt
movsb
sub
test
or
dec
push
dec
fcomps
jne
cs
cmpsl
cmc
leave
jo
xor
nop
adc
icebp
aam
xchg
shrl
int3
inc
sbb
in
adc
jmp
jnp
movsb
push
mov
faddp
fwait
cmp
push
mulb
imul
push
push
pop
dec
iret
aam
mov
ret
test
enter
pop
add
aas
or
add
inc
push
cli
ljmp
pminsw
mov
jb
push
shr
out
xchg
mov
adc
test
shll
popa
ja
inc
dec
clc
mov
aaa
sub
jb
lcall
push
push
cld
lea
mov
inc
ret
push
push
sub
nop
mov
xchg
or
nop
sbb
mov
fidivrs
lret
jne
cmp
pop
outsl
ja
add
inc
push
mov
cmpl
hlt
ret
mov
add
cmp
je
push
adc
mov
pusha
sarb
cmp
sub
ss
inc
xchg
or
push
dec
mov
adc
out
dec
push
imul
inc
les
imul
push
dec
cmpsb
inc
jmp
xchg
scas
push
or
jmp
pop
dec
push
enter
dec
mov
iret
add
and
fadds
mov
cli
test
cmpsl
repnz
outsl
loop
pushf
jb
ret
sti
inc
jo
jne
dec
aam
mov
je
xchg
add
push
push
sub
dec
inc
pop
roll
xchg
add
fdivl
movsl
inc
jb
fsubs
jb
inc
fisttps
outsb
inc
adc
jne
cli
and
adc
add
lret
pop
sarb
push
ljmp
mov
cmpsb
imul
jl
add
cld
jmp
xor
dec
dec
mov
mov
cmp
loope
xor
adc
xor
adc
incl
xor
push
and
push
jmp
cmp
test
mov
pushf
add
push
add
sti
sbb
push
and
adc
dec
arpl
pop
xor
inc
xchg
int
scas
js
insb
fs
mov
int
aaa
add
bound
mov
fs
xchg
pop
cmp
adc
shrl
out
arpl
push
pop
inc
loopne
dec
cmp
rorb
adc
incl
pop
outsl
das
and
lret
adc
push
rolb
sub
adc
pop
mov
fs
fcoms
pop
out
inc
pop
cli
push
add
inc
stos
push
popf
fdivrs
sbb
dec
push
rorl
aaa
imul
ljmp
stos
add
jb
dec
test
dec
movsb
adc
addr16
add
call
dec
cli
sub
rcrb
lods
and
xchg
jo
push
or
add
inc
popf
push
imul
test
das
sub
pop
pushf
stc
pushf
mov
sahf
ret
jb
je
dec
pusha
sub
add
inc
dec
mov
imul
out
mov
or
add
addr16
xchg
push
adc
xor
sub
aam
sbb
aaa
lds
data16
mov
xor
cmpsb
lds
ljmp
pop
mov
mov
jmp
add
pop
or
not
repnz
inc
mov
and
sub
ljmp
bound
add
jl
pop
inc
ljmp
push
xor
inc
ja
jg
sub
out
movsb
add
xchg
push
arpl
aad
add
orl
add
jne
andl
or
push
jl
incl
inc
push
fcomps
int3
xchg
lea
inc
pusha
repnz
repz
fcoms
into
ret
dec
movsb
dec
jmp
adc
adc
mov
xor
or
fisubl
lret
cmp
iret
mov
pop
mov
cli
mov
test
xor
mov
dec
add
lcall
inc
sub
cli
and
mov
dec
pop
mov
push
xchg
cmp
push
adc
mov
pop
lahf
shll
add
faddl
jmp
jecxz
aad
cmp
addr16
jecxz
or
outsb
rcll
cmp
adc
loop
dec
sub
cmc
mov
dec
call
push
jg
pop
hlt
lods
mov
mov
push
sysenter
dec
push
pop
movsl
repnz
dec
das
stos
loope
xchg
cmp
aaa
out
outsb
cmp
popa
xor
shrl
inc
enter
add
push
sbb
adc
push
xor
adc
imul
test
pop
add
lret
insb
mov
clc
loope
fcmovb
push
jb
inc
dec
enter
shrb
outsb
mov
incl
stos
into
add
mov
fcompl
pop
cmp
mov
add
inc
pop
shl
mov
js
in
jbe
ja
je
push
imul
js
add
ljmp
or
jge
sbb
pop
inc
outsl
sub
dec
inc
inc
pop
cli
mov
add
push
ljmp
lcall
sbb
cmp
cmpl
mov
outsb
push
xor
ja
addb
xchg
jp
loope
add
dec
dec
inc
aam
stos
adc
inc
enter
int
inc
push
xor
cmpsb
in
pop
shl
add
inc
scas
je
test
dec
decl
push
and
xlat
dec
adc
fmull
jb
sub
iret
test
and
stos
movsb
inc
ja
dec
fwait
add
adc
dec
lret
sub
xor
divb
bnd
or
nop
dec
sbb
push
mov
loop
fmuls
rclb
rcrb
test
pop
xor
add
clc
inc
inc
stos
shrb
js
es
inc
rolb
clc
ficompl
aaa
jo
sub
adc
mov
jne
sbb
rol
inc
xchg
dec
mull
mov
pop
dec
xlat
push
outsl
jecxz
push
inc
and
addr16
cmp
jbe
dec
inc
push
insl
incb
mov
aaa
push
push
sub
push
clc
ljmp
push
test
jge
jnp
xchg
cmp
pop
xchg
lret
fwait
lea
loope
xchg
pop
stos
data16
dec
clc
neg
movsl
add
scas
mov
sbb
xchg
fdivrl
insl
je
dec
ss
ss
pusha
in
sahf
dec
cmp
aas
fstpl
fnsave
jb
dec
fidivrl
xor
add
fs
adc
movsl
dec
out
or
push
inc
mov
scas
lea
xchg
pop
aaa
push
sti
popa
fcmove
push
dec
cmp
std
das
inc
sar
lcall
mov
dec
lcall
leave
mov
add
imul
aad
push
xor
notb
push
add
iret
mov
xchg
decl
test
inc
adc
test
cli
in
jmp
fmuls
push
push
sbbb
mov
mov
outsb
dec
or
fs
push
mov
or
je
stos
test
push
jp
dec
cmp
mulb
aaa
dec
insb
cld
mov
dec
inc
push
out
pop
sub
lcall
mov
pop
stos
xor
addr16
add
in
cltd
dec
add
icebp
or
ret
xor
xor
or
in
aam
push
inc
cmpsb
jbe
inc
pop
movsb
and
stos
aaa
pop
ret
cmp
push
xchg
pushf
dec
cmp
add
scas
push
pop
pushf
ret
mov
shll
add
std
jmp
xlat
scas
mov
fnstsw
jge
cmp
push
hlt
inc
clc
into
sti
jb
gs
mov
pop
dec
fwait
daa
popf
cmpsb
js
pop
or
pop
adc
sub
push
fdivrl
stos
xchg
add
repnz
cli
pop
or
cmp
xor
ret
jg
push
into
lock
je
and
inc
adc
sub
sbb
push
cli
test
xor
aaa
insl
repnz
mov
dec
imul
lods
push
push
dec
push
aaa
jbe
mov
jo
out
movsb
sbb
inc
call
insl
push
outsb
xchg
mov
loopne
je
adc
clc
xor
push
test
mov
pop
mov
aas
rcr
shl
dec
push
je
call
dec
cli
cmpsl
dec
scas
out
dec
outsl
inc
inc
mov
jae
das
cli
add
lret
outsb
into
into
rclb
or
aaa
sbb
das
rclb
or
mov
xor
insb
sbb
popf
mov
pushl
imul
int3
test
hlt
xor
dec
push
out
cmp
jecxz
movsb
aaa
dec
jbe
scas
cs
dec
test
in
loopne
xchg
mov
jns
xchg
addl
sbb
pop
and
mov
lea
cmp
add
and
lock
adc
cmc
mov
nop
xor
sub
movsl
adc
addl
dec
mov
mov
call
add
push
xor
data16
push
das
jle
leave
sbb
loopne
push
xor
jne
xchg
cmp
push
rorb
inc
clc
inc
push
enter
push
ja
xchg
pushl
cmp
insl
jl
daa
mov
sbb
sahf
sub
sar
xchg
or
adc
jl
fdivrp
mov
std
mov
lea
adc
fisubrl
jb
cmpsl
dec
push
push
dec
imul
cmp
pop
test
call
and
outsl
xchg
stos
sarl
mov
lea
fcmovu
dec
sub
lods
or
inc
or
and
add
js
push
pop
lret
push
xor
jg
les
jbe
and
mov
sbb
add
mov
sbb
mov
mov
lea
mov
or
incl
cmp
sub
repz
pop
lods
movsl
lock
jp
push
pop
test
mov
cwtl
push
loop
adc
test
loop
pop
sbb
in
movsb
sti
jp
xchg
pusha
xchg
stos
cs
dec
fmuls
dec
and
jmp
mov
test
test
sub
sub
push
test
dec
or
repnz
cmp
push
push
dec
scas
in
stos
cld
ljmp
and
incl
jmp
lods
jo
and
push
lea
jb
add
or
ss
inc
push
or
dec
dec
push
push
dec
or
mov
insb
imul
pop
ljmp
test
push
data16
shrb
jo
hlt
dec
inc
inc
push
jp
sub
pop
insb
pop
jo
jo
js
xchg
xlat
inc
sub
jle
jecxz
daa
and
stos
jnp
adc
jg
lock
jno
outsb
loop
mov
or
mov
lock
jmp
pushf
jno
jmp
jo
jo
xor
aaa
xor
insb
lcall
ror
dec
sub
lcall
dec
jle
cmpsl
inc
mov
js
mov
push
lds
lods
rcrl
mov
inc
push
shrl
imul
adc
jnp
js
jle
push
dec
sbb
push
jo
mov
mov
pop
sub
cld
inc
imull
mov
loope
push
jl
cmp
jmp
sub
xor
stos
movsb
mov
int3
sti
scas
jp
insl
dec
cwtl
or
xor
jle
das
add
outsb
dec
push
inc
dec
inc
inc
insb
inc
push
clc
lcall
or
das
out
fsub
inc
inc
pop
hlt
dec
imul
lods
clc
add
je
push
push
push
sbb
scas
inc
or
adc
lret
push
push
push
dec
loop
popf
popa
push
or
add
fiaddl
arpl
test
jno
insb
adc
jb
add
push
rol
xchg
test
push
insb
imul
cmc
jmp
mov
cmpsb
pop
test
in
add
push
ja
or
sub
push
addr16
ret
inc
je
hlt
inc
dec
pop
test
mov
inc
rorl
mov
dec
adcl
mov
dec
jne
roll
ret
mov
push
mov
cmp
std
pmulhw
pop
mov
push
movsl
pop
fidivl
lret
jae
dec
mov
ret
repz
xor
test
hlt
inc
pop
push
xor
cli
or
pop
and
loope
xor
inc
mov
add
repnz
ret
roll
int
inc
popf
call
jp
pop
ss
pop
add
mov
or
mov
fnstenv
mov
and
add
neg
push
ficoms
mov
jp
jo
inc
sub
cld
push
or
fsts
je
adc
call
adc
xchg
push
shl
or
push
fs
fs
inc
call
add
mov
stos
cmpsb
call
sub
jo
xchg
enter
cmp
test
es
xor
add
mov
out
lret
dec
loop
divl
jae
push
inc
dec
push
push
xor
push
mov
fadds
sub
stos
mov
stc
fucomp
jo
pop
inc
push
inc
xchg
call
push
push
sub
imul
jne,pn
rcrb
adcl
cld
sbb
movl
ljmp
ss
mov
jns
int
push
js
cmp
and
out
mov
push
into
inc
pop
loope
enter
shll
mov
mov
push
sub
test
js
bound
fs
add
mov
gs
ljmp
fsubp
mov
pop
xchg
out
mov
add
shll
leave
popl
stos
lock
mov
aam
inc
test
int3
mov
jecxz
xor
cwtl
ljmp
fmull
mull
sbb
bound
sub
push
pop
test
sbb
push
mov
mov
xor
out
pop
push
das
push
call
loop
jle
inc
sar
fstps
into
std
in
inc
xor
hlt
fcomps
popf
xchg
xor
cmpsl
pop
rol
ret
jl
outsl
cmp
fs
xor
xchg
mov
pop
push
push
and
mov
decb
out
outsl
cwtl
sbbl
xor
push
jecxz
or
cmc
pushl
add
cmpsl
mov
nop
shll
jg
jp
inc
adc
push
jp
push
jg
pop
lahf
into
push
push
pop
jmp
insl
dec
cmp
dec
pop
pusha
xorl
xor
outsb
push
mov
lcall
inc
cmp
pusha
mov
fdivl
repnz
pop
ja
pop
inc
mov
inc
inc
aad
push
pop
repnz
dec
js
in
dec
popa
rorl
push
inc
xor
adc
ret
xchg
jge
sub
pop
or
into
roll
cs
xchg
in
pop
pop
dec
ja
add
mov
das
adcl
or
sub
xchg
lods
or
xor
mov
push
pop
lock
pushl
unpcklps
into
popa
xchg
cld
loopne
mov
out
jbe
ss
mov
nop
jle
sahf
push
sbb
das
mov
jo
in
lock
pusha
xlat
mov
dec
pushl
push
push
repnz
std
push
mov
mov
mov
xchg
dec
xchg
jle
and
mov
pushf
mov
lock
push
mov
push
addb
sahf
xor
adc
ss
and
aam
ret
mov
lock
push
or
js
pop
adc
add
sbb
mov
dec
dec
or
nop
add
cmp
movsb
jg
ret
or
mov
push
scas
insl
add
sub
mov
mov
cmc
pushl
roll
in
and
push
sub
add
mov
and
jo
mov
cmp
fadds
xor
lods
dec
lea
imul
adc
int3
dec
xchg
test
push
or
cmp
ljmp
inc
cmp
sti
inc
push
lcall
lret
adc
in
bound
faddp
cmc
adcl
or
rcrb
sbb
dec
sbb
or
imul
rcr
mov
or
xor
sbb
movd
push
ss
xor
incl
ficoms
in
in
pop
lcall
pop
sub
fistpl
lock
dec
fs
mov
movsl
push
pop
inc
inc
mov
mov
pop
add
inc
xor
adc
call
outsl
mov
pushl
addr16
stos
movsb
int3
into
in
mov
in
dec
call
mov
sub
dec
mov
xchg
inc
jne
dec
pop
stos
std
es
enter
push
xchg
ja
outsl
mov
inc
mov
mov
call
daa
call
pop
or
xchg
pop
out
xchg
insb
dec
push
loopne
or
dec
mov
and
imul
mov
jno
dec
adc
shrl
aas
aaa
out
dec
xor
pop
lods
test
or
imul
cmpsl
cs
icebp
adc
mov
cmc
fiaddl
push
push
lcall
lcall
xorb
mov
ds
addr16
ljmp
jle
cltd
xchg
and
push
or
and
dec
fists
int3
scas
shll
cmp
int3
aaa
loopne
jp
inc
push
adc
call
lcall
mov
xchg
shrb
negb
ja
add
or
push
sub
dec
lea
test
push
fwait
pop
subb
cli
dec
jb
mov
sub
shrb
lods
mov
fs
lahf
clc
pop
les
aam
loope
movsl
into
jno
pop
aaa
inc
push
js
add
lods
xor
rorl
cmp
push
push
mov
adc
jo
dec
ljmp
xor
cmp
and
add
jge
cwtl
cmp
adc
pusha
scas
and
cwtl
xchg
lret
cmpsl
aam
dec
fs
js
fcoms
rorb
cmpsb
sbb
mov
xor
or
push
inc
jbe
inc
push
mov
jmp
ret
sub
mov
mov
aam
jp
lahf
pop
ljmp
ret
jo
jno
outsb
inc
and
xor
mov
jne
pop
push
mov
fs
movsb
dec
mov
lods
ljmp
sbb
mov
faddl
jo
ret
loop
outsb
adc
lret
gs
add
clc
roll
cli
rolb
dec
inc
inc
sub
fidivrs
add
dec
fs
lret
scas
dec
stc
test
adc
push
jbe
outsb
xor
push
sbb
mov
add
push
sbb
jg
outsb
aad
pop
adc
dec
fwait
movsl
lea
adc
aam
lahf
and
ja
inc
add
inc
xor
push
push
cmp
xor
xor
inc
dec
inc
nop
pop
add
mov
icebp
xchg
les
inc
dec
inc
add
ljmp
cmp
and
fisubs
jae
repnz
dec
mov
xor
lcall
fwait
mov
inc
xchg
mov
out
leave
inc
pop
mov
mov
cmp
movsb
ja
dec
xor
gs
mov
jo
fdivrs
cmp
cmp
outsb
rcrl
cld
or
push
popa
insb
mov
call
shr
pushf
call
sbb
xlat
notb
inc
insl
or
icebp
fcmove
negb
gs
orb
jecxz
xor
jb
jg
icebp
and
stos
int
lea
cld
clc
sbb
push
inc
push
popa
dec
out
push
or
cmpsb
js
or
inc
push
rolb
cmp
aas
cs
jb
xor
sbbb
and
aas
mov
daa
inc
xchg
push
pop
rcrb
in
repnz
out
movsb
inc
loopne
arpl
and
cli
mov
lds
push
fsubs
push
sbb
pop
cmc
sbb
imul
mov
mov
or
rclb
and
add
fcmovbe
rolb
add
aaa
jp
test
push
cld
test
dec
mov
test
xor
fildll
js
push
fcmovnbe
pop
or
je
dec
add
sbb
xor
add
ds
subb
dec
xor
fs
std
or
mov
cmp
ret
jb
cmpsb
sub
out
arpl
shlb
dec
add
bound
mov
or
pop
mov
fidivl
push
mov
data16
lock
mov
push
jno
jmp
mov
mov
add
imul
xor
inc
jmp
insb
push
mov
push
xor
enter
test
imul
and
loope
out
mov
add
data16
movsl
hlt
test
inc
push
rorl
adcb
sub
cmp
mov
jae
je
test
data16
das
inc
push
out
or
icebp
js
push
dec
sahf
dec
jo
mov
testl
jne
inc
push
push
out
inc
bound
das
test
and
repz
mov
lret
dec
inc
icebp
jg
mov
repz
or
mov
roll
sbb
fists
or
aam
mov
jmp
adc
mov
ljmp
push
jne
movb
push
incl
add
xchg
loopne
pop
loope
dec
lock
test
pop
add
push
lahf
and
add
imul
js
insb
mov
mov
mov
push
insb
xchg
push
hlt
xor
mov
mov
fs
dec
dec
lret
dec
inc
lods
mov
mov
stos
mov
lret
scas
js,pt
cltd
cmp
cmp
stc
mov
into
xchg
or
lock
or
or
bound
or
mov
push
add
push
shlb
ret
add
dec
dec
sbb
push
ljmp
les
inc
jno
push
sbb
push
mov
cmpsb
repz
inc
shl
adc
or
incb
test
je
js
inc
cmp
mov
jle
mov
stos
scas
sti
jae
sub
push
mov
sbb
lds
push
xor
xor
fidivl
mov
insl
cmpsl
cs
jge
fcompl
push
dec
or
jns
xor
mov
sbb
xchg
xor
fsubl
ret
xchg
adc
inc
push
adc
aaa
add
or
dec
fsubl
ljmp
xor
out
aad
dec
outsb
ret
mov
add
les
adc
or
ret
push
push
dec
out
pushf
hlt
int3
inc
mov
cmpxchg
sbb
js
xor
and
xchg
mov
inc
in
xchg
es
or
scas
dec
stc
cmp
fiadds
bound
push
imul
jns
fs
call
xchg
add
aas
adc
sub
cli
xor
lods
mov
dec
pushl
xchg
cltd
scas
pop
rcll
ds
lock
push
aaa
aad
pop
in
inc
clc
and
imul
push
sub
dec
jb
movsl
mov
inc
out
cmp
jo
sbb
mov
inc
jbe
inc
lock
insb
lcall
and
mov
cld
xor
add
dec
sub
dec
es
jo
and
jne
stos
push
fiaddl
xor
aaa
pop
or
ret
nop
xchg
aaa
inc
jne
inc
ja
inc
rcr
adc
js
jne
std
dec
jmp
loopne
sub
pop
mov
mov
int
xor
and
mov
jbe
inc
icebp
sbb
ret
pushf
test
nop
sti
adc
sub
arpl
sarb
sbb
jle
aas
push
dec
lods
aam
ret
or
jp
inc
in
sarb
lock
or
stos
hlt
cmp
and
and
mov
dec
push
mov
call
push
jne
imul
xchg
pop
lock
cmp
jg
daa
jl
cwtl
test
adc
sbb
int
push
test
push
cmp
mov
pop
ja
adc
add
ja
dec
pop
push
dec
test
pop
jns
fisttps
inc
adc
xchg
int
mov
dec
jmp
mov
mov
push
sub
rclb
sarb
sub
push
xchg
xchg
ret
jns
push
push
jle
scas
mov
incb
pop
or
inc
imul
addb
inc
dec
jnp
cmpsb
aaa
jno
jmp
jbe
adc
addr16
xchg
or
push
inc
mov
jo
mov
jmp
sbb
mov
sub
jns
mov
loope
lcall
sub
ret
xchg
scas
daa
imul
out
imul
sub
jo
loope
push
push
mov
fs
adc
cmp
lea
mov
push
loopne
test
scas
or
inc
popw
push
xor
jl
scas
dec
rclb
or
leave
lock
mov
or
jbe
push
mov
ja
nop
enter
cld
dec
lock
jge
ss
popa
mov
test
push
xor
xchg
jecxz
or
push
sbb
fdecstp
cmp
scas
sub
pop
scas
and
daa
mov
mov
call
lcall
dec
in
jo
gs
adc
mov
lea
aaa
aaa
push
arpl
icebp
aam
fidivs
dec
dec
ljmp
cmpsl
mov
mov
loope
xor
dec
xor
push
add
push
jle
inc
push
dec
lds
lods
mov
stos
test
in
lret
lock
shl
cmc
cs
aas
jp
adc
push
test
adc
dec
xchg
shlb
jo
pushf
lea
fs
pop
dec
or
cwtl
xchg
sbb
iret
cli
dec
pop
das
mov
adc
fdivs
dec
mov
jl
lcall
push
dec
inc
outsb
jle
xchg
push
filds
add
sub
lcall
jecxz
pop
aaa
je
xchg
or
inc
mov
lea
addr16
cmp
mov
push
into
pop
repz
cmc
lcall
das
in
xor
dec
xor
jmp
addr16
dec
add
subb
pop
faddp
inc
push
sbb
push
or
mov
lods
test
dec
dec
test
shlb
cs
jg
rclb
jbe
imul
xor
push
pop
dec
ficoml
push
daa
push
aam
cmpsl
sub
pop
outsb
shl
cmc
xor
mov
loope
mov
sub
dec
test
pop
xchg
dec
ss
ljmp
les
xor
lret
shlb
and
cltd
std
xchg
sarl
in
popa
xor
lret
data16
jl
js
and
dec
loopne
fsubrl
in
cmp
dec
jp
jmp
jg
mov
ljmp
shl
dec
push
mov
stos
add
lock
loopne
or
mov
sbb
xor
inc
lret
or
pop
incl
xor
stos
mov
cmpsb
or
sar
ljmp
lods
mov
movsb
push
insl
loope
loop
lcall
mov
dec
stos
sbbl
movl
cs
inc
pop
or
adc
or
out
push
inc
lea
jnp
inc
or
wbinvd
aam
lcall
xchg
jo
push
jp
push
inc
xor
arpl
jno
xorl
daa
jl
dec
ja
loope
mov
ljmp
repz
imul
add
inc
xchg
insb
push
push
mov
inc
mov
fiaddl
stos
imul
cmp
push
mov
add
imul
sub
push
cld
cmpsl
mov
scas
enter
jg
sbb
aaa
push
rcrb
les
inc
jbe
xor
jg
aam
cmp
mov
xchg
in
stos
xchg
sub
pusha
aam
dec
inc
and
lods
xchg
jnp,pn
mov
inc
pop
xor
lret
jo
lock
popa
test
add
addb
mov
inc
das
movsl
dec
or
inc
call
decl
mov
aam
lods
mov
shl
lods
or
repz
jb
fwait
call
lcall
mov
add
test
mov
xor
cmp
jmp
sbb
icebp
std
jecxz
mov
scas
push
sub
icebp
mov
je
test
dec
inc
sbb
in
add
push
mov
lods
mov
push
jns
xchg
mov
andb
pop
sbb
pop
jp
mov
mov
imul
inc
sub
push
inc
pop
jae
in
or
aad
mov
arpl
shrl
decl
dec
jmp
mov
fcom
mov
stos
jbe
faddl
add
ss
repnz
cmp
sbb
add
add
dec
lret
daa
mov
clc
mov
out
push
dec
cltd
call
push
mov
lock
xor
or
pop
clc
jne
or
dec
push
lcall
subb
jno
ret
pop
repz
xor
loop
inc
cld
jp
lods
mov
das
mov
test
xor
push
dec
mov
add
out
fmuls
pushl
addb
fcmovne
jo
pop
or
std
mov
adc
ljmp
and
xor
and
imul
xchg
cmpl
outsb
lret
xor
divb
inc
arpl
dec
ljmp
ficomps
or
xchg
in
rol
push
jo
clc
fnstenv
mov
cmp
stos
add
push
out
inc
das
push
ret
sub
incl
adc
pusha
fstl
mov
cmp
fmull
mov
data16
cmp
ss
js
fisttpl
insb
push
mov
jns
lret
xchg
roll
out
mov
lcall
test
rolb
jo
sahf
js
inc
addl
push
jmp
mov
lcall
ret
dec
add
jo
add
sbb
rclb
sub
call
enter
das
je
xchg
lret
shll
lahf
addr16
jl
xchg
into
add
sbb
sbb
gs
insl
int
push
add
xchg
pop
inc
jle
pushl
sub
jle
mov
dec
aam
sarl
sarb
jmp
mov
aaa
stos
rorl
pop
push
add
sbb
jge
pop
shlb
cmp
or
cmc
ja
in
jg
xchg
stc
push
sbb
push
cmp
scas
dec
insb
push
push
add
mov
or
jg
jb
adc
in
clc
xor
punpcklbw
jno
mov
sub
xchg
fwait
jp
adc
inc
mov
sub
push
inc
jg
pop
call
sbb
lds
fbld
dec
xor
or
mov
ds
push
jo
jo
xchg
ss
lret
lock
push
outsl
add
push
in
mov
call
mov
imul
adc
dec
outsb
mov
push
cwtl
out
fsubl
pop
test
jo
inc
push
sbb
into
es
adc
cld
in
iret
test
movsl
or
sbb
lcall
daa
push
jg
fidivrl
iret
test
xchg
inc
test
aaa
orl
add
push
scas
dec
es
dec
lcall
mov
cmc
ss
sub
inc
out
sbb
mov
add
jmp
jne
jmp
dec
inc
arpl
xchg
xor
ret
fcoml
call
and
ljmp
xor
mov
leave
test
jecxz
in
ret
hlt
or
inc
jo
enter
scas
inc
xlat
pushf
pop
cs
mov
xchg
das
mov
cmpb
push
adc
into
enter
in
popa
cmp
xlat
mov
testl
shll
push
xlat
and
mov
fiadds
push
imul
jg
xchg
movb
fwait
xlat
repz
clc
loope
jl
ret
jno
ja
push
std
inc
sub
out
int3
popa
popa
inc
dec
xchg
lahf
xchg
or
mov
sbb
sub
bound
ret
in
jl
dec
bound
cmp
cmp
xor
mov
test
lcall
cmp
adc
xlat
lea
cmp
aaa
cmp
xor
pop
orb
daa
fistpll
jns
sub
adc
sbb
fisubrl
call
and
test
repnz
dec
rorl
inc
jmp
fwait
js
jecxz
out
test
jle
cltd
rorb
pop
xor
jg
icebp
push
cmp
push
jbe
sub
ror
xor
mov
fs
ljmp
mov
dec
dec
push
loop
mov
clc
sub
inc
xchg
adc
pop
cmpsb
mov
dec
aaa
repnz
sbb
cld
call
rorl
testl
lahf
inc
pushf
ret
shll
pop
mov
pushl
mov
jo
pop
sub
dec
push
push
xor
push
dec
fbstp
icebp
insb
xor
bound
call
out
dec
shll
test
jg
cmpsl
jae
dec
or
jo
push
rorl
pop
lock
bound
dec
subb
mov
pop
adc
adc
gs
inc
decl
in
mov
test
repz
xchg
mov
dec
hlt
int3
lods
xor
out
iret
cmp
leave
xor
push
and
sub
lret
dec
loope
push
push
xor
pop
adc
dec
ficomps
push
mov
cwtl
lret
repz
xchg
rcl
push
and
sub
das
and
pop
or
popl
pop
leave
mov
add
cmp
adc
hlt
jne
jno
into
bound
decb
jbe
lods
pushl
add
dec
jo
jb
push
lcall
xor
lds
add
out
and
xor
pusha
push
wrmsr
push
push
xorb
xor
jle
mov
pushf
ficoms
cmpl
dec
stos
aaa
out
ss
push
push
imul
incl
add
lahf
jno
enter
inc
ljmp
movsl
push
arpl
mov
xor
sub
inc
add
sbbb
dec
dec
push
xor
push
jmp
jo
sbb
mov
loope
dec
lahf
sbb
lret
and
or
repnz
fiaddl
pop
inc
scas
outsb
outsb
aaa
fdivs
fsts
dec
push
inc
pop
shlb
lods
mov
pushl
xorb
push
out
sahf
cli
clc
nop
adc
icebp
daa
mov
cld
pop
jge
sub
lret
dec
aad
shrb
add
pop
arpl
jl
inc
rcrb
jo
cmp
add
add
sbb
sbb
clc
jg
mov
and
push
insb
jp
clc
sub
and
in
cmp
aaa
lock
push
dec
xor
call
outsl
mov
add
sub
xlat
inc
xor
out
data16
push
add
and
add
jmp
hlt
jmp
in
jno
add
aad
mov
stos
aam
test
push
les
add
test
bnd
sbbb
dec
shrb
shll
add
les
jae
fnstsw
xchg
dec
or
jecxz
ret
dec
in
dec
cmp
sbb
dec
lock
jo
out
clc
dec
popa
popf
ja
jns
add
aas
jo
dec
mov
cwtl
or
imul
xor
push
cmp
add
jg
ljmp
add
sarl
addr16
rorl
fidivrl
loope
xchg
mov
shll
push
xor
xchg
jno
push
mov
and
popl
adc
int3
icebp
add
inc
aaa
pop
arpl
into
and
ss
decl
ljmp
fcmovbe
popf
xorb
dec
sbb
fcmovu
sbb
aaa
jb
mov
bound
mov
gs
rclb
insl
sbb
mov
add
push
ja
xor
jmp
lret
shrb
push
sub
pop
lock
int3
out
or
push
jge
out
std
xchg
repnz
mov
xchg
jl
test
je
orb
or
or
fbstp
stos
fidivl
jne
test
mov
sbb
xor
addr16
data16
dec
and
cmp
pop
les
adc
pushf
popa
xchg
mov
dec
ds
and
std
fisubrs
jmp
push
xlat
add
aam
in
call
gs
out
aam
cmp
sahf
sub
aas
mov
add
mov
pop
cli
jmp
inc
mov
cld
inc
clc
jle
pop
or
push
or
rcll
add
inc
dec
push
js
xchg
inc
loopne
loopne
inc
dec
arpl
aaa
cmp
push
arpl
insb
jb
jae
gs
push
cmp
decl
cwtl
xor
or
or
stos
mov
jl
mov
mov
mov
sub
xor
push
and
xchg
shlb
hlt
xor
fs
fistpll
adcb
ljmp
rcl
push
fnstcw
jnp
or
jle
imul
jmp
xchg
xor
fwait
shl
or
inc
jbe
hlt
or
adc
adc
ljmp
ret
sbb
mov
adc
push
fwait
ljmp
or
add
pop
stos
rcll
ret
js
or
or
add
or
sbb
lds
ret
call
mov
sbbl
fnstenv
add
into
outsb
push
out
xchg
call
jae
xchg
aaa
inc
adc
cld
push
fimull
xor
jae
dec
jbe
push
push
and
lahf
les
inc
outsl
push
scas
int3
cwtl
lcall
test
jmp
dec
outsl
ss
mov
push
insb
push
adcb
popa
mov
dec
lock
push
repz
fmulp
dec
xor
rcll
mov
inc
pop
sti
xor
lock
mov
aam
test
add
dec
add
insl
ret
dec
mov
outsb
jno
gs
adc
aas
stc
mov
lret
cli
lods
scas
mov
add
movsl
test
jecxz
dec
lods
les
jle
outsb
mov
push
mov
sub
dec
dec
dec
inc
les
xchg
out
aaa
ja
std
jg
add
insb
xor
std
in
or
outsb
sbb
jmp
aas
cmp
sub
insb
dec
pusha
pop
xchg
xor
pusha
int3
push
adc
movsb
mov
jo
mov
shll
and
push
lea
faddp
sub
cmp
inc
or
in
push
push
arpl
filds
sbb
and
insb
lret
jnp
cli
push
gs
inc
cmp
xor
jb
loope
sbb
lret
fisttps
push
rclb
imul
dec
xor
push
add
mov
ss
inc
adc
xor
xor
dec
jo
dec
sar
ds
add
addr16
mov
loopne
stos
sahf
mov
xchg
inc
pop
inc
clc
jge
movl
test
push
ss
add
or
aam
sbb
ja
cltd
lock
bound
fs
ss
push
xor
push
fdivrp
push
ljmp
jnp
enter
pop
sub
jmp
cmp
xchg
mov
mov
mov
adc
arpl
roll
xor
iret
ljmp
push
push
xchg
std
call
mov
lds
fwait
test
jg
cmp
jb
fwait
daa
loope
aas
inc
dec
ja
xor
xor
outsl
adc
push
or
gs
outsb
insb
fidivl
jo
lds
push
mov
jns
inc
inc
scas
add
xlat
lods
test
mov
lcall
pop
lock
js
push
dec
jmp
pop
mov
push
mov
clc
jmp
leave
push
dec
jae
stos
mov
cwtl
outsb
inc
pop
mov
mov
fadds
shlb
dec
xchg
imul
pushl
sbb
pop
cli
push
inc
push
je
xor
shlb
clc
pop
out
stos
jle
incb
cmp
dec
push
mov
add
mov
outsb
push
pop
pusha
push
dec
sbb
mov
push
dec
ja
xchg
and
or
insl
orb
xor
incl
cmc
xorb
mov
mov
scas
mov
decl
imul
inc
push
mov
xchg
add
push
push
test
in
andl
lds
mov
jns
dec
push
mov
call
mov
aaa
les
jne
cmpb
jne
xor
xchg
or
roll
dec
ret
insb
inc
xor
inc
dec
lcall
mov
jne
cmpsb
adc
insb
push
jp
mov
es
jmp
fs
sub
inc
arpl
jae
sbb
loope
cmp
je
incb
inc
outsb
inc
mov
xchg
cmp
cwtl
dec
jne
insb
jp
or
cmp
push
lock
pushf
pop
push
sbb
sub
mov
insl
sbb
pop
mov
xchg
je
mov
mov
flds
pop
incl
pop
ss
out
repnz
mov
sub
inc
ret
ss
mov
je
inc
insb
or
xchg
add
sbb
scas
mov
shlb
rorb
in
push
nop
lret
and
sbb
mov
push
cmpsb
call
xor
jne
cmpsb
mov
mov
outsb
dec
push
mov
xchg
in
cwtl
push
arpl
push
clc
mov
bound
add
aaa
dec
dec
push
dec
pop
dec
mov
xor
push
call
mov
aad
movsl
stos
jno
xchg
mov
neg
movb
iret
icebp
sbb
xor
lret
jno
push
pop
mov
sub
jo
or
dec
test
inc
xchg
fdivl
cld
add
pop
push
xlat
imull
xor
push
call
pop
push
cld
and
mov
cltd
std
lcall
pushf
mov
mov
xor
icebp
xor
inc
pop
movsb
pop
fcoms
inc
lcall
add
cld
je
fistps
pop
xchg
popa
loope
and
ret
jecxz
xchg
mov
or
test
pop
addr16
mov
dec
add
ljmp
out
adc
test
std
pop
cmc
mov
ss
jg
daa
pop
sbb
insl
sahf
add
and
cs
sti
push
mov
pop
push
shlb
push
cmpsb
push
stc
dec
insl
aam
addl
push
inc
sbb
mov
clc
dec
imul
xchg
jle
push
jo
aas
inc
pop
arpl
iret
or
rol
xor
test
mov
test
fisubrl
je
sbb
sbb
jae
cwtl
ret
xlat
sbb
insl
dec
or
adc
stos
dec
inc
insb
ss
xchg
xchg
push
dec
insb
addr16
out
adc
sbb
call
mov
pop
xchg
ljmp
fldcw
icebp
fistl
mov
sbb
lcall
xor
outsl
jle
add
jg
ss
out
xchg
scas
push
decb
popa
pop
lcall
fs
popa
add
xor
cwtl
lods
scas
clc
push
fcoml
mov
addb
dec
stos
bound
add
imul
xchg
clc
ficompl
sub
das
add
push
pop
push
add
icebp
addl
add
fsub
or
test
les
sbb
mov
rcr
dec
xor
adc
or
daa
jmp
cmp
inc
popa
aaa
imul
push
xor
and
fs
outsb
pop
mov
test
jb
ljmp
shr
insb
push
dec
push
cld
xchg
leave
lods
cmpsb
fnstsw
jns
sub
or
push
jmp
ljmp
push
ret
jo
jo
cwtl
imul
inc
clc
push
push
xor
sarl
inc
nop
icebp
test
fs
mov
or
or
mov
xor
mov
or
lret
inc
lcall
bound
xchg
arpl
push
mov
cmp
mov
add
fiadds
out
dec
cld
push
andb
popa
inc
js
test
jne
sub
adc
lcall
xchg
stos
pusha
dec
cwtl
adc
sbb
xchg
dec
dec
push
popa
dec
jb
dec
ret
jae
mov
adc
mov
add
loopne
push
aad
jmp
push
aaa
dec
data16
js
incl
les
lret
adcl
popa
sahf
push
cmp
andl
mov
inc
jb
scas
aas
push
dec
or
dec
push
push
or
or
cwtl
jg
fs
test
inc
testl
sbb
and
mov
ret
inc
out
mov
dec
fs
std
sbb
ret
push
mov
dec
mov
add
dec
xchg
call
mov
xchg
lock
dec
mov
clc
push
pop
dec
ret
pop
jne
mov
sar
cmpsb
test
or
adcl
shrb
jecxz
sub
andb
ss
lock
jo
dec
inc
inc
imul
ljmp
loopne
je
mov
pop
lret
push
jae
loopne
fimuls
jbe
dec
and
in
add
inc
add
dec
mov
gs
xorb
xor
add
xchg
ret
xchg
pop
cmp
cmpsb
sbb
adc
adcb
adc
imul
mov
dec
dec
aaa
or
inc
popf
ret
mov
adc
mov
mov
test
mov
mov
pusha
cmpsb
adcb
scas
inc
mov
push
inc
and
or
imulb
and
subl
test
jno
jg
movsl
sub
loope
dec
jbe
and
lea
adc
outsl
rcr
movsl
jle
pop
cwtl
jno
push
insl
shll
std
inc
jno
inc
js
mov
jns
fisttpll
or
aad
or
xchg
nop
sbb
insl
inc
mov
ss
je
lret
xor
sbb
je
mov
push
movsb
cbtw
mov
inc
or
stos
xchg
test
add
decb
sbb
pop
dec
push
in
pop
pop
cmc
call
jae
jge
inc
int
xor
mov
adc
and
out
int3
inc
dec
cmp
imul
dec
fs
ss
test
xchg
jle
inc
or
inc
flds
and
xchg
inc
dec
inc
jg
or
adc
pop
dec
jecxz
push
or
call
and
test
stc
test
inc
pop
test
ss
sbb
test
je
sbb
inc
addb
push
push
rolb
call
in
imul
add
data16
inc
das
sub
dec
xor
rcrl
pop
out
jae
imul
ss
mov
jno
ficoms
cmp
add
mov
and
insl
test
and
nop
je
mov
mov
mov
lcall
hlt
into
js
iret
adc
sahf
xor
scas
mov
mov
mov
lea
inc
add
sbbb
mov
in
dec
roll
jno
outsl
in
mov
add
and
mov
mov
sbb
jo
testb
imul
ficoms
test
jecxz
sti
lds
sbb
stos
cli
pop
pop
sti
daa
push
outsl
je
lock
dec
sbb
and
dec
orl
pop
inc
fdivs
and
push
aaa
inc
scas
test
push
into
lock
ss
out
xchg
inc
inc
std
incl
test
mov
fwait
aaa
dec
sbb
adc
mov
js
jbe
push
cwtl
lcall
xor
pushf
fsubs
jl
mov
test
daa
mov
hlt
push
out
lds
mov
jo
mov
mov
xor
pop
loopne
int3
popa
add
xor
ror
push
jnp
push
xchg
sbb
push
push
cmp
jo
adcb
jle
pop
xor
fwait
dec
ljmp
mov
inc
insl
xlat
js
dec
push
inc
out
xchg
cmpsl
jg
shrl
addr16
dec
push
push
hlt
js
loope
push
jbe
ss
inc
loop
cli
les
sub
or
push
sahf
data16
xor
add
sbb
lcall
ja
popf
fnstcw
lret
test
nop
xor
adc
cmp
lcall
jbe
mov
cmpsl
cmp
add
pusha
push
testl
cmp
mov
shrb
shrb
loop
cld
stos
icebp
in
sub
push
bound
dec
cmp
lret
pop
ret
dec
cmp
cmp
test
sbb
fs
dec
jg
push
pusha
fadds
pop
lahf
mov
femms
insl
gs
cmp
xchg
clc
sub
sbb
dec
mov
and
imul
lock
inc
stos
cmp
mov
jnp
mov
lret
cmc
cmc
mov
fdivl
push
adc
shlb
decl
lret
push
pop
aaa
jp
es
pop
push
cmp
mov
in
inc
and
shrb
out
cli
fs
push
cmp
imul
inc
clc
sbb
xor
inc
pop
fbld
dec
movsb
jmp
adc
aas
add
mov
inc
blsic
outsb
mov
jmp
test
aad
imul
mov
inc
and
lcall
arpl
inc
mov
lcall
imul
jle
push
dec
pop
or
mov
ja
pop
fs
jae
inc
push
mov
cmpsb
push
js
xor
mov
xor
jg
pop
or
cltd
pop
lods
mov
in
mov
in
movsb
ds
ret
mov
js
mov
ljmp
inc
push
push
scas
and
adc
dec
inc
pop
push
inc
aam
inc
add
mov
movsl
mov
xor
xor
ljmp
jl
addr16
pop
ret
adc
fdiv
xor
imul
or
ja
dec
inc
xor
rol
std
push
inc
aaa
jne
lock
les
clc
push
clc
xor
or
leave
sub
or
rcrb
xor
inc
lods
or
dec
je
lcall
or
dec
dec
dec
divl
adcb
xchg
popa
cs
icebp
cmp
pop
dec
lret
inc
cmp
push
iret
clc
add
pop
rolb
cmp
jp
inc
dec
inc
mov
mov
lcall
or
add
loopne
and
pushf
or
loopne
or
add
xor
jecxz
push
adc
ja
sbb
imul
aad
fwait
call
or
or
add
rolb
dec
lcall
out
mov
push
outsb
xor
stos
outsl
outsb
jne
ljmp
cs
dec
jb
std
and
push
and
rorl
scas
and
insb
cmp
jg
jbe
cli
inc
cmpb
ja
gs
xor
test
js
lea
xchg
ja
repz
or
adc
xorb
add
and
testl
mov
adc
shl
fdivs
cli
pop
sub
adc
jge
mov
xchg
mov
orb
xor
stos
dec
out
push
test
std
sbbl
jmp
push
hlt
fsubl
xor
inc
inc
out
push
jge
inc
cli
ds
out
xor
xchg
mov
xor
jo
test
lahf
mov
or
outsb
loopne
and
outsb
fs
ds
inc
xor
pop
ret
inc
adc
std
call
sarb
and
cmp
push
mov
popf
fs
call
inc
sbb
rclb
xor
sahf
inc
jae
inc
push
insl
mov
adc
rcrl
push
pop
sbb
pop
push
jg
push
shll
sti
call
loopne
int3
adc
das
shl
hlt
test
xor
enter
into
lea
jmp
inc
jbe
adc
and
aas
sbb
je
push
and
popf
clc
clc
insb
pop
faddp
clc
or
cmp
or
mov
mov
into
push
subb
inc
rorb
sbbb
sub
adc
jmp
icebp
pop
fwait
inc
test
ret
gs
mov
or
negb
inc
outsb
cmp
wbinvd
mov
call
out
test
sbb
fmull
mov
pop
push
xlat
loopne
ret
add
shl
notl
lds
pusha
push
push
js
mov
push
outsb
fs
pop
adc
mov
xor
js
dec
or
rolb
notb
test
ret
mov
inc
mov
dec
out
push
dec
mov
es
dec
push
loope
mov
jb
call
bound
stos
cmpsb
xorl
into
or
in
fwait
dec
fwait
mov
shlb
xchg
mov
aam
into
jl
sbb
inc
dec
push
push
push
jno
decl
mov
paddusb
dec
push
xor
lock
ret
cmpsb
clc
or
pushf
xor
inc
jns
dec
pop
xchg
sbb
push
test
sub
jbe
mov
insb
or
mov
and
jo
lods
and
cmp
adc
push
mov
mov
je
fists
ss
ret
lret
repnz
jns
lods
dec
inc
lea
clc
pop
xchg
and
inc
into
dec
filds
xor
push
jp
imul
js
push
pop
aaa
imul
mov
leave
inc
inc
dec
inc
call
push
push
call
mov
push
or
add
ror
test
inc
in
addr16
incb
repz
inc
inc
hlt
cli
xor
mov
pop
or
loop
imul
test
dec
mov
dec
jne
push
jl
stc
jg
xor
jnp
arpl
lds
movsl
add
scas
and
xchg
pop
and
jo
dec
ss
pop
xor
shrb
xchg
clc
popa
and
outsb
push
arpl
js
outsl
shrb
aaa
xchg
fidivrs
in
js
push
add
xor
insb
dec
xor
push
xor
jg
out
js
inc
not
and
push
push
mov
sub
in
pusha
or
jns
gs
sti
sub
sbb
inc
inc
fsub
jo
jb
pusha
mov
addl
or
mov
inc
fdivp
cmp
add
decl
xchg
sub
test
pushf
or
jns
or
ljmp
xchg
xchg
dec
push
fsubl
lods
inc
insb
push
subb
incl
sbb
ljmp
push
push
or
mov
mov
fsub
icebp
and
pop
mov
adc
push
jns
and
addr16
in
mov
in
lret
jge
sub
inc
cmp
imul
dec
inc
xchg
out
test
push
movsb
dec
fs
enter
add
aad
pusha
sub
adc
fdivs
sbb
call
loopne
cltd
pushf
push
movsl
aam
testb
lock
call
fwait
jbe
push
and
mov
mov
jns
stos
push
mov
mov
adc
inc
mov
mov
sarb
arpl
inc
outsl
push
sbb
and
adc
sub
decl
and
rcl
icebp
xchg
sbb
add
pop
lods
mov
mov
sub
inc
push
push
sub
xchg
divl
rol
xlat
mov
push
aaa
inc
jns
decl
sub
shl
xchg
or
mov
rolb
out
fsubs
addr16
daa
xchg
pop
push
or
xchg
push
mov
push
inc
dec
pusha
pop
mov
icebp
inc
mov
mov
sub
pusha
pop
jno
mov
mov
adc
push
lods
repnz
out
push
cmp
pop
push
inc
enter
int3
pop
dec
fistpl
cld
call
push
fwait
stos
pop
loop
mov
sbb
jne
je
add
inc
insb
xor
push
mov
pop
loop
mov
into
jne
inc
push
gs
test
adc
fimuls
sahf
cs
clc
adc
gs
push
jle
jp
jl
push
inc
icebp
pushf
push
inc
popf
add
add
dec
adc
dec
les
insb
incl
push
pushf
inc
fdivl
dec
xor
popl
cmp
inc
or
adc
jge
call
dec
xchg
lods
xchg
cs
cmc
push
pop
dec
xor
push
daa
adc
push
pusha
dec
push
cmp
push
lock
xchg
adc
mov
vsqrtss
xor
cli
lcall
ljmp
adc
jo
and
fiaddl
ss
fs
adc
xor
scas
shl
outsb
xchg
ret
mov
aad
dec
push
xor
sbb
incl
add
adc
push
or
push
lods
lcall
loope
adc
mov
pop
jbe
push
ret
clc
lcall
js
fcomps
jmp
test
leave
inc
jne
dec
ret
enter
xor
xchg
fildl
out
cmp
xchg
dec
rolb
es
nop
inc
aaa
rolb
insb
loopne
call
clc
js
inc
inc
jae
clc
es
lods
js
cmp
xchg
push
es
test
xor
pop
es
fs
xor
inc
popl
insb
jp
stos
lods
push
in
mov
xchg
scas
sub
jmp
adc
scas
inc
je
bound
andl
js
xor
pusha
shl
dec
inc
push
xlat
lret
or
pop
imul
rcrb
jle
mov
xchg
push
cmp
or
ret
mov
rorb
test
dec
inc
dec
mov
push
sub
pop
pop
adc
shll
cmp
repnz
jg
push
je
xchg
or
jo
hlt
loop
mov
jns
xor
hlt
in
jmp
jg
int3
cli
sarl
imul
jne
js
mov
aam
jb
outsb
sub
push
inc
dec
outsb
add
lret
clc
sub
jne
jne
call
pop
mov
pop
xchg
clc
sub
xor
inc
std
lcall
dec
mov
mov
mov
ljmp
inc
rolb
mov
push
into
add
lcall
scas
aad
jo
test
and
lock
ficoms
push
pop
test
adc
sub
mov
dec
inc
addr16
lods
inc
add
push
jo
mov
loop
cli
mov
dec
mov
cs
pop
pop
movsl
adc
mov
xchg
xchg
cmp
clc
bsr
xchg
bound
pushf
ljmp
mov
ficoms
lods
inc
lret
jo
inc
stos
dec
lock
add
push
bound
push
cli
decl
out
pop
mov
arpl
scas
cmp
sbb
imul
clc
add
sbb
mov
pop
dec
pop
shll
test
addl
inc
lret
outsb
add
jmp
jbe
daa
in
addr16
dec
xchg
dec
dec
cwtl
in
jbe
shlb
jae
mov
aaa
dec
jb
mov
push
push
jne
outsl
movsb
mov
out
mov
fs
mov
and
cmc
mov
nop
lcall
pop
jno
push
dec
cmp
pop
jo
sub
adc
dec
jmp
fwait
adcl
cmc
pop
cmc
pushl
outsl
movsb
in
mulb
inc
cmpsl
jg
fistl
add
outsb
out
outsl
cmp
mov
loopne
add
dec
nop
dec
add
mov
mov
sbb
enter
pop
add
xchg
lcall
movsl
mov
sbb
xchg
mov
out
push
cmpsb
lock
aaa
and
adc
lds
fadds
mov
clc
pushl
adc
mov
inc
lcall
mov
push
insb
aam
inc
dec
add
cmp
outsl
inc
add
cld
mov
pop
mov
and
dec
dec
dec
dec
loope
test
in
fdivr
popa
inc
xchg
incl
or
push
xor
stos
shlb
mov
mov
fdivrs
push
push
jbe
outsb
jmp
dec
test
mov
fxch
pop
pusha
aaa
insb
sub
push
and
adc
xchg
push
jnp
out
test
dec
or
sub
scas
adc
or
popa
inc
sarb
and
arpl
add
adc
sub
pop
adc
mov
ret
rolb
int3
dec
decl
rcrl
cmp
pop
jo
inc
mov
hlt
mov
scas
sbb
ficompl
cli
pop
jb
fs
inc
aad
sub
ljmp
es
push
xor
jb,pn
inc
dec
push
add
test
jg
gs
inc
loopne
call
cmp
popl
inc
dec
clc
dec
push
ja
lods
cmp
scas
enter
call
cmp
pop
jge
cmc
jmp
ss
jno
imul
jo
std
call
mov
sbb
xorb
or
jle
lock
mov
je
ds
iret
sbb
push
fnsave
push
aaa
cmp
cmp
inc
xor
sub
inc
inc
push
ljmp
test
out
idivl
mov
pop
mov
push
leave
lods
clc
pushf
xchg
ret
mov
es
xor
xlat
sub
ret
dec
in
ljmp
adc
sbb
hlt
xor
es
inc
popf
jge
lock
std
subl
call
aad
mov
push
mov
add
movsl
bound
and
clc
xchg
xchg
je
cmp
lods
mov
add
sar
inc
push
ret
stos
ss
lcall
sti
daa
sub
sub
mov
cld
fcmovu
loopne
dec
xor
add
insl
push
pop
inc
std
pusha
lret
or
mov
xchg
add
pop
sahf
adc
xor
fldenv
js
jbe
out
push
mov
dec
and
dec
das
in
inc
repnz
push
insb
mov
jae
shll
enter
or
mov
add
xchg
inc
inc
outsb
mov
cmp
arpl
sbbl
enter
or
push
jmp
lock
subb
sahf
mov
mov
lret
adc
std
nop
ret
mov
dec
inc
add
xor
add
inc
adc
and
push
and
ljmp
add
dec
ja
cmp
jnp
incb
cli
adc
mov
das
jno
clc
or
mov
scas
xchg
fs
ds
add
cmp
or
jbe
push
dec
cmpsl
or
decl
dec
lahf
mov
lods
jmp
cmpsb
sahf
xor
popa
adc
repz
push
shrb
dec
add
hlt
adc
xor
xor
std
and
xchg
pop
xor
inc
push
inc
movsl
rolb
mov
inc
cld
jg
repz
pop
pop
stos
adc
ja
das
je
fs
push
inc
sbb
sbb
and
orb
shrl
or
decl
push
das
cwtl
lods
clc
cmc
xchg
and
or
mov
mov
adc
mov
cwtl
push
adc
push
leave
cld
iret
dec
push
xlat
adc
and
pop
xor
aaa
adc
inc
ss
sub
push
xor
jg
inc
or
ret
pop
sbbl
bound
es
in
cmpsl
mov
data16
call
faddp
sbbl
ja
dec
dec
xor
out
or
movb
push
cmp
lcall
shlb
jmp
pop
push
mov
or
or
ret
pop
mov
push
sahf
inc
inc
fs
insb
cmp
sub
mov
cld
lret
adc
cmp
inc
inc
addr16
ja
xor
add
iret
in
inc
mov
rorl
jmp
push
and
xor
inc
bound
aaa
pusha
lods
mov
movsl
int3
xlat
jae
popa
outsl
incl
xor
lahf
xchg
leave
test
icebp
nop
adc
push
divb
aas
pusha
push
jb
push
xchg
ljmp
sub
enter
xor
jg
shrl
scas
sub
int3
ds
mov
addb
dec
xchg
aaa
lods
test
jle
xlat
dec
inc
addr16
jae
and
push
aaa
jle
sbb
js
adc
stc
sbb
lock
lock
leave
lea
stc
faddl
lret
or
mov
sub
adc
rorl
mov
lock
pushf
or
jo
jo,pt
add
repz
and
inc
aad
cmp
test
in
fs
popl
in
lcall
lock
rcl
or
adc
or
mov
xchg
test
call
jmp
popa
inc
or
add
shl
add
int
or
dec
jl
or
gs
out
outsl
mov
imul
out
sbb
sub
mov
int
call
sub
lahf
push
or
std
je
xchg
fmul
push
cmp
sbb
push
adc
push
dec
xor
mov
push
pushf
mov
xchg
push
push
aaa
clc
rcrb
aam
push
mov
icebp
incl
aad
cmp
popa
xchg
jge
push
fcompl
jmp
sub
inc
jns
push
adc
call
push
bound
daa
or
clc
jne
addb
movsl
xchg
gs
bndstx
nop
push
int3
push
xor
js
outsb
adc
mov
enter
mov
pop
ja
dec
jle
pop
sbb
push
dec
dec
sub
mov
mov
ljmp
cmp
and
pop
aas
push
es
clc
fdivs
imul
popa
xor
bound
sbb
xchg
xlat
mov
movsl
dec
out
nop
je
sbb
push
push
imul
mov
mov
xor
ss
add
cmp
jg
dec
inc
push
sar
inc
add
outsb
outsb
push
addr16
test
push
push
dec
push
pavgw
pop
mov
cmp
dec
add
daa
movsl
pop
mov
mov
fcoml
ss
push
add
pusha
cmc
test
inc
dec
cld
fnsave
jecxz
in
jno
push
mov
das
stos
lea
imul
jnp
call
jecxz
add
jnp
xchg
or
mov
aam
pushl
lahf
push
push
inc
mov
add
sbb
inc
into
adc
cltd
jp
mov
inc
dec
pushf
sbb
incl
inc
cli
lahf
outsb
or
adcl
push
adcl
lods
insb
and
data16
stos
mov
push
inc
sbb
imul
xchg
call
or
mov
xchg
test
notb
push
add
loopne
ss
sti
ds
push
jne
add
inc
mov
dec
fmull
into
xchg
inc
xchg
mov
push
dec
push
dec
dec
jmp
cvtpi2ps
out
ss
cmp
or
cmp
hlt
out
ficompl
jl
roll
sub
push
sub
fidivs
add
rcrl
xchg
mov
fnstenv
pop
addr16
adc
or
fsubs
cmp
lods
push
xor
adc
sbb
lcall
enter
adc
je
data16
into
addr16
ljmp
add
xlat
nop
lds
inc
lret
sub
dec
dec
hlt
mov
pop
inc
cmp
sti
and
ret
daa
xchg
push
dec
and
mov
add
ss
and
insb
inc
push
inc
je
shll
cmp
fdivrp
lcall
add
stos
test
sub
mov
in
or
add
jp
adc
add
mov
pop
xor
inc
loopne
xor
fdivl
shl
or
lcall
push
addr16
xchg
xchg
pop
push
aaa
ss
xor
mov
icebp
out
mov
cmp
mov
cmc
inc
icebp
filds
repz
xchg
adc
ljmp
jns
je
jg
sbbl
ret
xor
push
inc
xchg
call
add
cld
ljmp
xor
cmp
mov
cmpl
bound
lock
pop
mov
movsb
jmp
adc
or
dec
inc
movsb
shlb
pusha
push
inc
mov
ficoms
push
pusha
and
mov
pop
mov
repnz
ret
hlt
gs
push
cs
outsl
pop
mov
jb
outsl
push
je
mov
or
sub
inc
aas
ret
cwtl
fldcw
pop
add
cli
push
lock
ljmp
mov
popf
in
mov
push
pop
xor
jbe
mov
hlt
fisttps
mov
mov
test
adc
aam
and
xor
jg
lock
lcall
sub
scas
jmp
adc
push
pop
daa
ret
insl
mov
sub
dec
loopne
mov
jmp
sbb
fidivrl
das
mov
pop
enter
cs
jae
sbb
test
dec
push
sbb
shlb
jp
mov
ret
jmp
imul
and
and
add
data16
arpl
mov
imul
leave
adc
inc
movsl
push
push
testl
push
pusha
iret
sti
enter
push
addr16
sub
push
push
fnstcw
sbb
scas
lock
add
dec
repz
out
adc
dec
mov
push
mov
fs
jecxz
inc
js
dec
cwtl
dec
ret
mov
cmpsb
xchg
clc
mov
adc
jb
fs
ret
jbe
iret
pop
stc
je
jle
mov
loope
sub
fnstsw
decl
mov
cs
push
mov
or
inc
dec
subb
sub
pop
gs
pop
jo
sbb
sub
std
push
and
fcompl
sahf
mov
lds
cmp
push
scas
mov
dec
in
aas
mov
ja
mov
sbb
mov
ljmp
jbe
ljmp
cld
mov
adc
mov
and
and
sbb
inc
or
sete
mov
jp
inc
sbb
cld
xchg
sub
stos
cmp
mov
xor
add
lock
popf
scas
pop
mov
ds
stos
je
jo
in
xchg
daa
test
dec
jnp
inc
pop
inc
mov
xor
je
push
cmp
push
dec
jle
inc
clc
incl
sbb
fmulp
out
lret
daa
sub
je
daa
movsl
repnz
in
inc
dec
and
cs
data16
add
push
add
xchg
loope
fbstp
fs
pop
jle
scas
and
rorl
popa
pop
push
jg
dec
add
xor
stos
inc
js
rolb
jg
test
fsubp
mov
cld
mov
adc
scas
not
dec
add
add
sbbb
dec
lret
or
dec
cwtl
pushl
mov
push
sbb
push
mov
pop
push
dec
adc
dec
sbb
jb
ret
lea
xor
xor
dec
in
push
push
sbb
aaa
jecxz
jg
subl
cs
loope
clc
arpl
push
xor
insl
add
aam
dec
xchg
fsubrs
push
idivb
in
out
cli
ljmp
movsb
push
aad
lret
testb
aas
jp
clc
add
cmpsb
pop
inc
inc
push
xchg
xchg
pop
inc
aam
jp
or
and
cli
dec
imul
shl
dec
ret
inc
dec
sar
aam
les
push
arpl
rolb
push
int
imul
clc
les
xchg
repnz
dec
clc
jle
push
daa
hlt
dec
test
jne
clc
dec
xor
imulb
push
and
decl
mov
repz
out
adc
inc
push
pop
call
mov
popa
jae
inc
inc
test
push
push
xor
aas
and
jno
bound
imul
les
cld
xchg
shlb
xor
jbe
ljmp
adc
popf
and
inc
inc
fcomip
ljmp
mov
inc
aaa
aaa
addr16
repnz
clc
call
pop
lcall
sub
push
cmpsb
inc
add
and
push
pop
pop
sub
ljmp
sbb
mov
sbb
or
scas
inc
jl
in
xor
pushf
jo
jmp
in
push
jae
lods
mov
outsl
mov
add
sub
lret
jnp
call
cs
cmp
or
dec
fdivrl
sub
addr16
rclb
test
dec
ss
xor
push
fmuls
test
jecxz
lret
loopne
rcrb
lcall
ljmp
sub
jb
mov
sub
jnp
add
sahf
ds
movsb
and
or
addb
test
incl
add
dec
dec
pusha
push
or
mov
mov
test
ficoml
divb
movw
or
inc
dec
out
push
int3
rolb
loopne
push
dec
inc
jl
push
push
dec
lods
cli
ds
or
mov
aam
or
shrl
daa
cld
in
ret
sub
sahf
fistl
push
ret
push
inc
nop
mov
mov
pop
adc
or
or
sahf
mov
movsb
sbb
dec
mov
inc
inc
loopne
push
pushaw
inc
cli
jmp
cwtl
movsb
mov
or
in
decb
push
add
push
scas
add
push
sbb
outsl
cli
dec
adc
addr16
push
push
dec
cmpw
cmp
popa
das
jecxz
fimuls
dec
repnz
or
push
xchg
or
and
lret
lret
cli
xchg
movsl
mov
jge
adc
iret
add
adc
push
arpl
inc
jmp
sbb
add
outsb
mov
clc
adc
loopne
dec
mov
add
fists
loopne
lcall
sti
outsb
outsb
mov
rcll
icebp
popa
arpl
test
arpl
aas
rorl
andb
xorb
sarb
inc
movsb
push
inc
or
push
ret
je
js
shlb
push
push
xchg
push
jecxz
call
jo
into
cmp
sbbb
pop
gs
adc
dec
clc
incb
dec
push
jo
and
sbb
repnz
js
js
int3
mov
xor
push
call
leave
and
cli
jb
jp
mov
loopne
sub
aas
inc
clc
test
sub
sub
jle
xor
jns
lods
loope
mov
xor
sub
pop
lods
cli
lcall
sar
testl
xor
mov
jp
jl
add
adc
sbb
pusha
movl
or
xchg
inc
push
sbb
inc
adc
push
hlt
dec
pop
xor
push
sbb
imul
cmpsb
jl
push
sbb
push
inc
in
imul
andb
inc
pop
cmp
sbbb
fs
icebp
popf
outsb
cmp
aam
sbb
or
add
mov
into
dec
inc
inc
movsl
jno
xchg
push
jecxz
addb
movq
push
mov
cmpsl
jmp
jae
fstpt
std
pushf
cmp
insl
pop
pop
adc
pop
pop
ja
push
outsb
or
xor
xchg
lods
cs
pop
jb
sub
inc
movsb
push
sbb
adc
mov
cmc
ffreep
inc
dec
call
inc
jo
cmp
mov
sti
loop
add
das
xchg
and
mov
test
sbbb
scas
call
xchg
icebp
sbb
jo
jmp
cmp
wrmsr
mov
push
cmp
mov
mov
test
ja
stos
cld
imull
xlat
mov
lahf
inc
xchg
add
and
dec
push
jne
ja
add
inc
push
gs
push
dec
dec
mov
ss
mov
inc
addb
in
push
lock
or
push
xor
inc
aaa
xor
das
fsubrs
adc
push
cmp
daa
clc
sarb
dec
xor
add
cmp
dec
outsl
bound
pusha
in
mov
imul
or
movsb
xchg
cmovne
mov
test
and
push
or
je
ja
inc
adc
pop
cmp
inc
dec
js
mov
and
popf
pop
sbb
dec
or
outsl
imul
or
and
cmpsl
lods
mov
cli
jge
cmpsl
mov
jb
sbb
jg
xor
mov
push
pop
aad
pavgb
movsb
into
test
test
add
pop
mov
pop
or
push
pop
das
mov
test
jno
jecxz
and
sub
xor
lock
push
inc
xchg
out
insl
jno
push
scas
push
das
out
or
push
je
pop
test
daa
icebp
inc
push
jae
ljmp
add
add
cmp
pop
in
pop
or
or
push
sub
test
lock
icebp
cmp
xchg
inc
push
and
xor
shrl
shl
and
xchg
push
dec
popa
adcb
aaa
popa
mov
sub
aam
or
sahf
test
js
xchg
aaa
dec
dec
xor
sub
push
mov
xor
clc
sub
aaa
test
xor
scas
inc
aam
mov
and
mov
jmp
repnz
dec
or
stc
push
adc
icebp
int
jl
dec
hlt
fsubs
cmp
jecxz
inc
aas
sbb
inc
aaa
in
ds
pop
dec
fcompl
xchg
fs
fs
jbe
cld
sub
lock
xchg
xchg
icebp
sti
nop
hlt
pop
dec
aaa
fsub
les
cli
fstpl
push
jbe
sbb
cld
dec
test
rcl
inc
sti
fsubrs
dec
decl
rol
and
dec
jl
call
popf
or
mov
mov
stos
addb
xchg
sarb
xor
call
xor
cli
push
xchg
ret
push
jns
jae
push
push
pop
out
cmpsb
lods
mov
mov
out
rcll
mov
push
sub
mov
nop
mov
inc
pushf
or
xor
mov
push
xor
mov
lret
ljmp
mov
jb
scas
jp
pshufw
add
ss
sbb
xor
push
fiadds
fcoml
fisttps
cmp
cmp
inc
repnz
push
loop
jno
aaa
push
pop
popa
xor
mov
pop
cltd
jmp
add
incl
daa
call
push
jecxz
insl
push
addr16
push
scas
xor
sub
sbb
scas
mov
scas
xor
popf
es
incb
xor
pop
and
aaa
ds
hlt
loopne
imul
inc
jns
push
addb
inc
mov
sbb
bound
pop
aam
outsl
je
jg
add
add
movsl
xchg
sbb
cld
rcll
adc
push
push
lods
repz
or
pop
cli
and
ds
dec
fstps
outsb
and
lcall
cld
xchg
cmc
dec
cmp
sar
imul
inc
insb
jg
mov
enter
inc
push
fmuls
je
out
imul
sub
in
cmp
inc
or
dec
mov
pop
jns
xor
lcall
mov
mov
mov
lock
push
ret
dec
cmp
jb
add
nop
jo
inc
dec
cmpsb
sub
sub
std
dec
xchg
xor
pop
arpl
and
int3
loop
into
sub
cmp
lods
test
enter
mov
xchg
mov
les
mov
movsb
aam
loopne
inc
dec
sarb
ret
mov
inc
jge
sbb
cld
inc
frstor
int3
test
push
jne
sub
lahf
insb
xor
data16
push
sbb
les
push
add
je
inc
push
mov
jg
push
pop
test
jg
xchg
cwtl
or
dec
mov
or
sub
and
or
ljmp
jl
mov
sub
jp
jp
popa
shlb
adc
popa
and
lock
jo,pn
sahf
lods
push
fidivs
dec
push
fs
sahf
ja
push
sub
pop
sub
push
dec
loopne
outsb
push
ret
pop
pop
jge
hlt
mov
cmp
xchg
outsb
nop
adc
clc
aam
cltd
loope
test
das
clc
cmp
repnz
mov
cli
mov
aaa
cltd
addb
cmp
pop
lea
sub
inc
cmp
xor
sbb
shlb
ret
or
mov
jg
cmp
mov
in
adc
bound
data16
stc
dec
ret
push
mov
push
jge
push
inc
push
jb
sti
adc
lret
in
filds
mov
jl
or
or
insb
repnz
cmp
or
jmp
add
lods
rcr
pop
inc
sbbl
cmp
or
incl
mov
pop
sbb
pop
sbb
pop
lock
imul
push
dec
dec
xorl
dec
add
inc
les
sbb
push
xlat
xor
inc
or
pop
push
subl
inc
out
pop
adc
push
cld
add
xchg
lods
icebp
addl
jge
inc
push
jno
mulb
es
push
cmp
out
outsl
dec
das
gs
ds
ss
lds
flds
push
inc
inc
xor
add
fmull
bnd
imul
or
imul
mov
jbe
sub
call
jl
test
aam
push
mov
test
adc
insl
cmp
sub
push
inc
pop
movsb
jo
cmp
mov
pop
hlt
rcrb
sub
sub
xchg
cmc
jo
dec
stos
push
cmp
adc
pop
mov
ret
push
pusha
and
push
movsl
mov
jle
je
jbe
dec
jno
jg
nop
push
out
jnp
test
decl
push
imul
pusha
lock
sbb
pop
test
add
in
inc
dec
xchg
nop
lret
push
push
jb
pushf
inc
std
decl
out
test
mov
mov
add
lcall
ret
mov
dec
inc
mov
push
inc
pushf
cli
ret
cmpsb
ljmp
push
pop
decl
mov
push
inc
push
mov
add
push
loopne
lcall
push
pop
push
addr16
dec
inc
xor
shl
push
xor
jmp
ret
mov
mov
lods
and
aam
push
shrb
pop
mov
jne
js
std
pinsrw
dec
jb
dec
cmpsb
jle
xlat
push
ret
push
inc
push
push
insl
aaa
sub
test
subb
adc
xchg
push
jbe
dec
push
imul
and
sub
gs
mov
inc
or
dec
mov
sbb
inc
dec
mov
std
lcall
dec
inc
jg
repz
dec
inc
xor
push
jp
jecxz
addr16
pop
pushf
sub
push
mov
jae
cmpb
or
addb
jle
je
xchg
lret
xchg
icebp
sarb
xor
sbb
inc
add
cwtl
icebp
jo
dec
addr16
mov
lcall
mov
rolb
aam
and
enter
aas
add
ss
bound
push
and
pushf
add
push
icebp
xor
gs
dec
inc
aam
mov
out
inc
pop
jecxz
xchg
jbe
fmuls
add
jo
cmp
outsl
sub
add
push
mov
cli
iret
popw
ss
push
sahf
inc
hlt
loop
orl
lcall
ss
xchg
sbb
bound
dec
cmpsl
and
loopne
mov
dec
inc
push
dec
insl
arpl
xchg
outsb
inc
dec
mov
cli
cmp
ret
rolb
push
sub
add
pop
inc
loop
add
arpl
ja
mov
xlat
mov
push
mov
inc
pop
or
imul
xlat
adc
inc
aaa
ja
dec
arpl
andb
push
js
rorl
movsb
jg
fcom
dec
inc
inc
mov
mov
adc
add
and
push
mov
adc
add
push
xor
mov
inc
xor
ret
jb
sbb
mov
aaa
dec
lret
push
rcrb
cmp
xor
pushl
shll
lods
in
xlat
jbe
std
cld
inc
jns
or
mov
fdivr
lods
xchg
in
xor
cld
mov
rolb
push
imul
dec
push
cmp
and
std
fsubrl
cmpsb
xor
and
pushf
jnp
lods
pop
mov
mov
inc
add
fmull
xor
lcall
adc
pop
jb
aaa
push
es
test
gs
push
xchg
adc
filds
jg
pop
sub
stos
xor
xchg
and
xorb
ret
and
aaa
jne
data16
aaa
nop
icebp
dec
inc
mov
inc
shll
nop
sbb
sbb
mov
push
mov
mov
les
sub
inc
and
add
pop
aam
inc
fistpl
test
xchg
push
mov
sahf
fs
nop
add
loop
dec
push
mov
rorb
nop
insb
jbe
cmp
aaa
popf
cwtl
scas
int3
std
test
inc
pop
test
in
add
or
xchg
mov
aam
add
inc
pop
mov
pusha
mov
incl
daa
add
mov
inc
sbb
or
decb
jnp
cmpb
add
in
xor
imul
jo
adc
jle
imul
lret
pop
leave
clc
ljmp
mov
adc
add
push
inc
inc
dec
sbb
sbb
insl
wrmsr
sbb
loop
and
jg
aas
outsl
outsl
popa
pusha
dec
lcall
mov
dec
js
lods
xchg
push
mov
cmp
out
fsubrs
ja
sub
clc
test
dec
dec
xchg
dec
jns
mov
lock
repnz
cld
call
addr16
popa
jbe
sbb
arpl
mov
pop
cli
inc
cli
cmp
cli
popa
mov
lahf
and
xorl
push
rorb
sbb
call
incb
cmp
lods
and
lcall
add
add
mov
cltd
inc
push
dec
enter
inc
sbb
shrd
bound
push
movb
jmp
jmp
dec
mov
or
outsb
mov
lahf
xor
decl
jecxz
inc
arpl
bnd
xchg
movsb
aam
cmp
mov
inc
insb
lds
adc
arpl
pop
adc
js
push
leave
sub
jb
testb
sbb
dec
shl
idiv
iret
out
sbb
xchg
xchg
test
add
pushf
dec
and
xchg
js
repz
pminsw
ljmp
insb
rcr
add
dec
outsl
push
fcoml
clc
lcall
js
mov
adc
add
jmp
mov
test
addr16
mov
inc
xor
jbe
adcl
dec
dec
cli
fs
add
inc
rcl
fucom
lahf
into
cli
fsubrl
ss
cmp
inc
shrb
sbb
xor
movsb
jecxz
sbb
cwtl
notb
jle
pusha
fs
rcrl
add
or
inc
push
test
xor
or
adc
into
lods
mulb
cs
add
push
test
jbe
mov
clc
mov
outsb
adc
outsb
dec
xor
push
inc
je
push
ja
dec
cmp
xchg
sar
scas
cmp
fwait
stos
pushf
sbb
lods
shrl
jne
mov
jb
or
push
ja
int3
into
inc
insb
xor
adc
cs
bound
add
jno
push
dec
dec
bound
mov
mov
in
xchg
ds
testb
jo
mov
sbb
scas
arpl
sbb
fmull
jle
cmp
jle
sbb
mov
lods
pop
js
sbb
cli
dec
jne
dec
inc
xchg
jo
cmpsb
pop
push
jb
sub
inc
xor
jl
jle
dec
lock
adc
cmp
push
inc
or
insb
ret
inc
shlb
inc
nop
push
pusha
loope
pusha
ret
lock
subl
cmp
pop
icebp
pop
adc
inc
jb
ljmp
inc
lea
mov
in
adc
mov
jns
jb
mov
data16
lods
test
adc
inc
xchg
push
sub
push
mov
mov
lods
mov
jmp
inc
add
push
dec
mov
cmpsl
push
repnz
call
popa
dec
adc
js
push
mov
xor
pop
push
cmpb
cwtl
icebp
js
dec
adc
jp
inc
in
jge
fwait
or
jmp
movsl
test
cltd
jnp
jbe
insb
push
js
test
mov
arpl
imul
xlat
jbe
push
push
ja
push
mov
xor
push
pop
add
fld
dec
inc
test
je
ljmp
adc
mul
xor
stos
cmpsb
aas
fadd
push
dec
mov
mov
nop
mov
mov
pusha
push
shlb
pop
mov
inc
pop
inc
imul
jo
inc
clc
andl
jo
jmp
mov
or
stos
jo
iret
mov
mov
and
pop
test
cwtl
repnz
inc
call
stc
xor
jb
xchg
cmp
push
aas
sub
inc
lods
std
in
leave
orl
push
or
cmpsb
loopne
je
imul
sarb
daa
enter
sub
mov
mov
adc
call
push
mov
mov
dec
cwtl
sub
sbb
dec
xchg
xor
insb
loop
dec
add
setge
push
push
or
pop
and
xlat
rcr
jmp
mov
sar
cmp
repz
sbb
clc
jmp
and
add
loopne
xchg
xor
lock
mov
mov
scas
cmp
insl
ret
mov
dec
push
out
mov
cmp
je
gs
mov
dec
sub
jp
inc
mov
in
jae
outsb
mov
jle
mov
rcrb
sar
hlt
dec
xor
rcl
or
push
sub
cmpb
push
std
ljmp
xchg
jbe
mov
mov
outsl
inc
jge
or
repnz
dec
dec
into
pop
inc
pop
bound
cmp
dec
data16
in
sub
push
mov
inc
arpl
ljmp
sub
test
push
jne
mov
sub
enter
enter
jl
lock
inc
sbb
imul
scas
dec
inc
aaa
jb
roll
push
jmp
adc
sbb
jg
cld
enter
cmp
imul
roll
std
xchg
push
add
loop
scas
and
inc
push
and
dec
decb
bnd
in
push
subb
cwtl
cmp
icebp
lcall
xchg
lods
mov
ja
sbb
inc
add
xor
fidivrl
and
pusha
popa
and
sub
jo
pop
cmp
mov
fbld
sarb
rcrl
sub
stos
sub
jne
mov
outsb
dec
imul
sbb
and
dec
pushf
mov
subb
idivb
ds
xor
pop
imul
jg
subb
sbb
ljmp
jns
dec
out
popa
test
call
lea
pusha
int
gs
ret
mov
xchg
scas
push
pop
push
xor
imul
shlb
cli
dec
fdivr
movl
and
mov
in
push
rorb
dec
xor
cld
push
aaa
jns
icebp
sub
and
inc
daa
lock
lea
inc
jno
test
xchg
mov
shrb
sbb
push
cmp
jne
adc
adc
into
inc
and
or
push
push
or
dec
inc
shrd
lods
sbbb
dec
pop
ret
imul
jo
popf
add
lcall
inc
inc
mov
dec
mov
popa
aam
lret
arpl
sub
subb
inc
js
lds
push
orl
mov
pop
icebp
jo
fsubs
xor
dec
cmp
ljmp
mov
repnz
inc
push
push
mov
sub
fcmovb
dec
popa
jns
ret
fbld
cwtl
scas
js
add
xor
jne
ret
into
ret
dec
inc
dec
rcr
adc
pusha
mov
mov
dec
mov
jmp
dec
int3
push
pop
in
dec
jns
jb
cmp
jo
or
jno
sbbl
fldt
addr16
lods
cmp
iret
mov
fdivl
sub
push
xor
mov
inc
mov
lock
push
cmp
push
jb
push
jo
xor
mov
in
dec
int
test
aas
insl
and
rorb
push
insb
cmpb
xor
add
xchg
inc
dec
add
es
push
mov
pop
outsl
dec
dec
ja
insb
jbe
sub
in
addl
jge
popf
imulb
xchg
jmp
cs
pushf
mov
addr16
pop
inc
mulb
imul
pop
sub
je
inc
lods
lock
cmp
lcall
mov
pop
fistps
dec
mov
adc
or
inc
dec
mov
arpl
lock
es
dec
clc
insb
dec
jno
xchg
adc
push
push
pop
push
push
and
mov
jg
lret
xchg
adc
mov
shll
scas
adc
xor
ret
push
rcrb
outsb
add
xor
mov
dec
rcrb
lock
push
push
mov
bound
xor
ret
sbb
in
mov
dec
push
or
mov
xlat
mov
push
pop
test
inc
stc
mov
dec
ds
push
movsl
incb
inc
lret
cmp
push
repz
xor
pop
mov
jmp
xor
jmp
and
and
je
scas
int3
cld
test
adc
sbb
enter
cmp
clc
jb
jp
cmp
sti
push
bound
movsb
adc
mov
sbb
decl
push
cmp
fsubs
adc
adcb
shll
cmp
das
imul
xchg
mov
notb
push
popa
adc
movsl
adc
inc
xor
push
jb
shll
aaa
mov
insb
fadds
cmp
add
mov
pop
or
addr16
push
sbb
dec
adc
gs
push
mov
mov
jns
push
mov
inc
arpl
dec
dec
add
into
push
clc
lcall
js
int
push
push
pop
xor
test
and
test
rol
leave
jl
sbb
inc
dec
dec
mov
fwait
pop
fwait
inc
fmuls
xchg
in
lret
arpl
cwtl
mov
add
fadd
push
incl
mov
icebp
jg
test
dec
pop
lods
and
aaa
pusha
ret
push
dec
inc
ljmp
ss
dec
decl
sub
fidivrs
pop
sub
inc
jo
lcall
add
rorl
pop
nop
xchg
sbb
inc
jbe
cmpb
adc
insl
imul
das
push
mov
lcall
lret
addr16
push
jno
rclb
clc
mov
push
mov
and
daa
dec
add
loopne
dec
jg
ds
insb
xchg
push
dec
imul
mov
bound
dec
push
push
aad
mov
mov
cmp
push
xor
out
or
stos
push
jno
and
jb
sub
or
adc
sahf
inc
jns
push
ljmp
jp
les
fsts
lods
inc
movl
adc
xchg
movsb
fsts
push
jp
shlb
pop
lcall
xchg
cld
inc
push
imul
push
aaa
inc
xor
xor
jg
or
push
inc
outsl
push
js
mov
mov
dec
fs
stc
push
mov
mov
mov
push
insb
or
out
mov
and
loopne
ret
pop
je
outsb
jo
pop
loop
inc
dec
loopne
or
xchg
dec
out
mov
js
ja
mov
mov
loope
lock
xor
addr16
cmp
xor
jbe
dec
loopne
jge
push
xchg
push
sbb
xor
xchg
cmp
arpl
sahf
stc
dec
adc
fldt
xor
push
jb
push
mov
gs
xchg
aaa
icebp
pop
nop
aaa
je
inc
inc
dec
adc
pop
outsl
mov
pushl
mov
std
jg
scas
repnz
push
mov
sub
ds
add
push
pop
add
test
ljmp
cs
lock
dec
jbe
push
jmp
lahf
cmpsb
decl
jle
xchg
imul
ror
sub
dec
jmp
sbb
inc
or
aas
out
push
outsl
jae
xor
incw
clc
sbb
xchg
addr16
pusha
das
js
ret
add
or
jae
mov
inc
sub
imul
jp
sub
ss
inc
incl
test
fidivrs
lock
imull
and
dec
push
mov
lock
cmp
js
rorl
ret
lret
sub
shlb
dec
inc
jmp
pop
push
push
pop
cwtl
cmp
jecxz,pn
jb
xor
orl
loop
add
cmc
add
adcb
fwait
adc
xor
fcomp
jp
nop
xchg
fs
adc
into
push
or
mov
cwtl
fbstp
fistl
in
in
xchg
push
push
push
jns
xor
jo
leave
mov
divl
push
pop
mov
aam
call
std
out
cmp
stos
inc
xchg
insb
or
icebp
jmp
insb
mov
cmpl
mov
adc
repz
mov
xor
add
pop
insl
push
subb
clc
mov
sub
inc
pop
and
pop
mov
sub
fnstenv
inc
or
inc
or
xor
dec
in
int3
dec
pop
or
sbb
ja
orl
jmp
add
push
xlat
mov
or
pop
daa
or
jg
xor
mov
ds
lret
or
mov
mov
push
clc
adc
lods
xor
imul
sub
or
mov
sbb
dec
fs
push
out
xor
push
div
cmpsb
shlb
decl
cli
int
xlat
cwtl
mov
lret
dec
xor
les
or
test
mov
test
fdiv
cmp
stos
dec
sub
cli
lock
and
loope
bound
pop
test
addb
adc
mov
fcompl
outsb
dec
or
mov
sub
and
cmpsb
fimull
aas
mov
outsb
jbe
mov
mov
mov
cmp
shlb
add
shll
fdivl
jo
insb
sbb
sub
pop
adc
mov
jmp
jo
ret
mov
mov
dec
dec
scas
mov
push
insl
fs
fisubl
lret
cld
in
cmc
cli
nop
arpl
stc
push
sub
adc
sub
cmp
push
call
out
push
ret
jle
or
loopne
jns
dec
rclb
and
test
lock
mov
and
loopne
imulb
sbb
mov
dec
cmp
fnstsw
leave
les
xor
subb
xchg
cmc
movsb
scas
fisubl
shll
add
sarb
sub
or
mov
push
leave
inc
inc
jo
jmp
sub
hlt
shlb
mov
nop
mov
inc
cwtl
pusha
pusha
daa
cs
ljmp
cli
les
outsl
or
xchg
jno
movsb
dec
push
dec
es
addr16
sbb
xor
cmp
mov
pop
mov
sub
jo
inc
popaw
jae
mov
push
bswap
gs
dec
and
xchg
jb
aas
das
mov
dec
push
imul
inc
arpl
sar
subl
aas
pushl
enter
or
rorb
orl
cmp
aad
shlb
cmc
repnz
scas
movsb
mov
clc
or
pusha
jnp
insl
dec
inc
dec
push
hlt
call
js
mov
aam
dec
sbb
fstpl
loopne,pn
loop
into
cld
mov
or
test
xchg
dec
roll
xor
dec
ret
decl
ljmp
pop
mov
push
in
test
divb
push
shlb
xor
jle
les
orb
sub
dec
or
jmp
ret
repnz
lret
sub
cmp
add
pop
lret
js
lahf
xor
xor
stos
xchg
js
jae
ret
push
adc
inc
cmc
inc
inc
xor
shlb
xlat
dec
sbb
cmp
jp
nop
lds
inc
lcall
adc
push
sahf
lods
minps
mov
iret
xchg
out
xor
xor
push
xor
addr16
pop
dec
xchg
cmp
daa
cwtl
push
cld
decl
cs
sarl
xor
mov
out
fucomip
test
mov
data16
adc
dec
dec
out
mov
mov
mov
call
adc
mov
lahf
loopne
aas
mov
stos
xor
xor
mov
push
popa
bound
lahf
add
outsb
inc
jo
aaa
cmp
cmp
jne
outsb
fucom
icebp
xor
pop
lret
mov
xchg
mov
aam
call
lods
jp,pn
pop
inc
popf
icebp
ret
bound
xchg
fisubs
dec
push
add
test
icebp
sbb
push
pusha
mov
je
mov
xor
shll
or
mov
adc
xor
sbb
cmp
or
xor
movsb
push
cmp
inc
sub
or
jle
dec
inc
imul
mov
xor
cld
aam
jae
push
mov
push
imul
movsb
dec
dec
mov
xor
fcoml
es
addr16
jne
out
pop
divb
dec
inc
fsubs
jmp
sbb
enter
adc
sbb
add
nop
dec
sub
mov
mov
xchg
sub
push
insb
add
dec
or
cli
cmc
jge
jns
imul
dec
loopne
out
push
push
test
cld
mov
dec
ret
mov
jo
mov
orl
jae
adc
mov
ds
lret
dec
dec
je
mov
hlt
incl
aaa
xor
jae
lret
addr16
and
sarb
ss
imul
sbb
jne
addl
sub
inc
clc
ljmp
sub
rcrb
mov
and
mov
cmp
push
sbb
jnp
mov
lds
pop
add
sub
adc
call
in
pop
jmp
hlt
cmpsl
or
mov
inc
mov
jmp
inc
mov
dec
jb
je
popf
mov
jno
jmp
inc
repnz
push
fld
cld
daa
push
ficomps
cld
call
push
pusha
jg
sub
and
adc
sub
mov
adc
ss
inc
cld
insb
jecxz
repnz
inc
dec
add
jo
hlt
push
icebp
mov
inc
push
or
movsb
mov
push
and
add
inc
dec
xchg
jns
test
shlb
js
outsb
imul
cmp
outsl
ja
int3
es
ffree
jbe
loope
add
test
jmp
and
bound
add
dec
xor
or
dec
jle
fsub
out
push
inc
icebp
ficoms
rcll
cwtl
mov
inc
ret
push
js
dec
mov
push
loopne
add
mov
mov
jecxz
xchg
xchg
jo
jne
test
add
jg
inc
mov
xor
sbb
aam
mov
outsb
ss
dec
dec
loope
imul
jo
mov
xor
mov
mov
aam
cwtl
cli
aad
pop
pop
pop
dec
mov
sub
add
addr16
out
inc
cld
jo
pop
add
jl
cmpsb
xchg
addl
movsl
cmpsl
mov
push
lret
adc
push
aam
bound
push
sbb
and
push
inc
clc
sub
cmpsb
cmp
js
xchg
and
ljmp
loope
sub
movsl
sub
inc
cmp
nop
sbb
fisubl
push
test
adc
ret
dec
dec
insb
mov
mov
push
mov
scas
and
sbb
xor
pushf
mov
icebp
and
adc
lods
fimuls
clc
gs
mov
add
mov
dec
xor
or
xor
shlb
inc
lret
mov
cltd
push
jo
lods
mov
mov
rcl
cmpb
sub
lcall
iret
loop
inc
jb
shll
shr
push
lock
sbb
dec
subb
ja
mov
mov
jmp
stos
push
movsb
push
sbb
push
loop
inc
adc
js
arpl
xor
adc
hlt
cmc
mov
pop
add
and
mov
outsb
cmp
incl
ss
sti
sahf
divl
fcomp
popf
outsb
rcrl
in
popf
push
stos
or
dec
dec
push
sbb
shl
cmpl
int3
adc
push
push
dec
in
ds
sub
push
cld
mov
add
mov
jg
call
jle
push
sbb
mov
dec
xor
jne
adc
push
push
inc
lods
movsb
outsl
lods
lret
notl
loopne
mov
ljmp
cmpsl
add
out
or
or
xchg
push
rolb
or
push
or
pusha
dec
adc
mov
adc
stos
scas
js
dec
stos
repnz
popf
or
mov
mov
and
cmpsl
fstps
sbb
push
call
dec
cmpsl
push
test
push
ss
iret
push
mov
enter
dec
loope
dec
inc
inc
sub
jg
add
mov
pop
and
and
sub
push
adc
call
mov
cmp
sarl
jo
dec
add
dec
jecxz
popa
push
int
mov
enter
std
lcall
xchg
inc
push
add
xchg
orl
rorl
xor
mov
sbb
dec
inc
jge
push
popf
mov
jbe
enter
push
daa
push
push
ss
push
push
jbe
add
jmp
mov
leave
sbb
adc
sub
jp
nop
lret
dec
out
fcoms
movsb
aas
adc
test
insb
jb
cmp
push
cmp
jne
in
dec
inc
dec
mov
adc
fisttps
sub
and
add
mov
sbb
cmp
nop
sub
das
sbb
roll
imul
std
pusha
xchg
push
and
dec
or
pop
sbb
pop
out
push
int
push
push
out
jns
jbe
push
scas
push
xor
xor
aaa
fiaddl
fidivs
out
inc
clc
js
xchg
dec
pop
jl
push
gs
mov
int
inc
pop
inc
lcall
mov
pop
loopne
fistl
inc
cld
call
dec
int3
jl
bound
inc
dec
xor
loope
push
add
inc
pusha
xchg
add
cmp
dec
js
push
push
ds
roll
jg
jo
inc
dec
in
adc
pop
in
mov
out
mulb
cmpsl
sub
dec
mov
dec
dec
jp
push
or
adc
call
xchg
enter
popa
mov
or
aas
insl
adc
inc
dec
bound
pop
push
sbb
cs
jno
clc
decl
in
add
mov
popf
ret
or
hlt
adc
dec
inc
je
xchg
pop
push
mov
xchg
push
pop
dec
dec
cmpsb
add
sub
push
mov
cmp
cwtl
sahf
or
xor
lods
clc
jecxz
lahf
out
insl
je
or
imul
xchg
push
fcmovb
mov
in
ss
jae
sahf
jge
cmpsb
sub
lret
push
arpl
movsl
pop
insl
loope
clc
push
mov
jne
lcall
jae
mov
cli
xor
or
cmp
bound
not
jno
mov
mov
push
test
jg
and
sbb
and
dec
jmp
mov
int3
jae
jmp
mov
insb
or
pop
jo
mov
dec
int3
xor
push
mov
int3
in
adc
shlb
jg
es
cltd
out
movsb
std
insb
popf
cmp
pop
mov
xor
out
push
lods
pop
xor
cmp
xor
push
add
mov
or
and
jmp
or
dec
shlb
lcall
dec
pop
std
es
cmp
cmpsl
jae
mov
sub
or
inc
popa
pop
push
in
addr16
popa
es
rolb
outsl
test
and
jns
add
push
jecxz
sbb
jne
dec
push
sub
outsl
es
inc
fiaddl
ss
jb
adc
xchg
mov
push
ja
push
mov
push
mov
repz
add
dec
dec
xchg
add
cmc
xor
mov
cmp
dec
push
push
mov
insl
lock
push
adc
fs
mov
jg
inc
repz
call
ljmp
push
mov
lcall
dec
mov
add
aam
popa
xor
into
and
jbe
add
pop
push
scas
lock
jbe
mov
mov
jo
mov
sbb
sahf
adc
mov
mov
mov
xchg
lock
xor
mov
das
incb
mov
es
addr16
daa
jbe
ret
fstps
push
dec
inc
xor
mov
mov
dec
push
mov
dec
pop
fldpi
mov
mov
fidivrl
testl
adc
sbb
adc
jle
mov
aaa
ja
jecxz
ja
insl
jo
mov
ret
popa
mov
xchg
ja
mov
push
xor
cmp
imul
sbb
inc
push
push
cld
sub
outsl
sahf
xor
rclb
push
ljmp
shl
fmuls
aaa
cmp
inc
mov
and
imul
xor
addb
daa
adc
inc
popa
mov
cmp
adc
jns
rorl
roll
lcall
ret
add
dec
bound
add
sub
dec
add
or
into
add
push
arpl
xor
pushf
ljmp
lock
jmp
daa
lret
sbb
dec
dec
lea
mov
inc
cmpsw
mov
adc
xor
jno
popa
jp
push
fistpl
fdivrs
dec
mov
or
mov
lcall
mov
add
cmp
cli
mov
cs
ja
imul
int3
cli
mov
xlat
push
mov
dec
cmpl
jb
movsl
xchg
ljmp
loopne
inc
adc
dec
dec
gs
xchg
push
add
stos
adc
mov
jae
xor
insb
fcoms
rorb
mov
or
push
dec
xor
arpl
xorl
or
or
push
inc
outsl
xor
push
jb
fisttps
imul
mov
xchg
lret
insb
xor
scas
out
pop
push
std
or
dec
jbe
jmp
fsubrs
inc
dec
rolb
push
push
ret
notb
adc
push
jno
jle
pop
scas
pop
mov
cs
clc
xlat
decl
mov
cmp
insl
jno
hlt
xlat
push
sbb
ret
data16
dec
out
inc
dec
push
arpl
add
out
push
pop
sbb
pop
roll
push
lock
fwait
les
pop
push
cld
mov
add
shrl
xor
add
and
cs
insl
xchg
ret
lods
jecxz
pop
sahf
jl
rcrl
test
jo
pop
sbb
push
mov
icebp
cmp
dec
inc
adc
test
push
pusha
rolb
mov
or
mov
jbe
push
push
dec
outsb
push
das
pop
fstps
jecxz,pt
mov
xchg
in
adc
cmpsl
jle
pushl
push
mov
dec
pop
dec
xor
or
into
outsb
jns
sbb
push
xor
ds
and
jg
push
push
js
pop
jns
xor
mov
pop
jl
cmpl
mov
hlt
rol
mov
je
jne
bound
loope
fdivl
imul
xor
add
mov
inc
nop
rcr
fs
movsb
out
inc
xor
lahf
lret
inc
cld
adc
mov
out
xchg
push
sub
cltd
insl
faddl
push
jb
pop
push
cli
add
pop
insl
push
mov
pop
mov
movsl
scas
xor
cmp
push
jp
mov
jno
mov
adc
and
imul
int3
jl
pushf
clc
lcall
out
mov
sub
aam
pop
fisttpl
mov
aam
mov
clc
lods
and
sbb
imul
jbe
jae
sarb
ds
fmuls
inc
outsl
mov
inc
and
out
hlt
jmp
sti
mov
pop
sbb
das
sahf
and
xchg
adc
enter
adc
out
test
adc
mov
ljmp
hlt
out
inc
clc
jmp
inc
pop
push
sub
daa
stos
movsb
xor
inc
movsb
mov
pop
or
dec
mov
out
repnz
mov
sti
ss
pushw
lret
lods
subl
xor
cld
push
ja
dec
lcall
or
int3
jb
push
clc
insl
cmp
iret
and
xor
test
mov
jo
dec
arpl
push
test
stos
ret
stos
outsb
shrl
fs
jns,pn
inc
jmp
inc
jb
inc
pop
mov
bound
or
ds
mov
pushf
xchg
xchg
jl
lods
inc
cli
pop
xchg
jno
dec
push
insb
ret
mov
jae
mov
jno
fdivs
pop
int
ljmp
mov
pushf
mov
add
int
sbb
das
or
or
shrl
fstps
subb
and
or
jl
lds
fldenv
popa
lcall
addl
into
mov
cmp
jno
sub
shll
flds
xor
mov
imul
addr16
xor
xor
push
loop
push
push
fnstcw
mov
je
pop
sub
aad
pop
jg
push
mov
call
mov
pop
lock
js
fmull
std
imul
and
dec
push
outsl
cmp
fs
pusha
dec
sbb
add
push
je
inc
fiaddl
mov
mov
push
adc
cli
pushf
jmp
cwtl
ss
push
popa
push
push
fisubrl
and
sahf
inc
push
xchg
dec
lods
mov
pop
push
loop
cmpsl
jmp
mov
mov
decl
fs
push
rcrl
das
cmp
push
xchg
ficoml
cwtl
or
adc
sahf
xor
push
sub
xchg
inc
xor
xchg
test
and
inc
pop
cli
mov
cwtl
xor
mov
mov
int
adc
incb
lock
mov
adc
adc
cmpsb
push
lcall
jno
negb
lods
hlt
inc
dec
imul
sub
fcmovnu
mov
lret
jecxz
pop
adc
fadd
mov
cmp
lods
mov
add
sub
sbb
pusha
adc
icebp
loopne
out
imul
mov
pusha
sub
ror
movsb
in
xchg
movsb
es
xor
pusha
je
xchg
lock
cmp
inc
or
jno
in
nop
mov
inc
inc
imul
js
js
and
pop
adc
pop
inc
or
jmp
clc
outsb
test
mov
scas
cmp
mov
xor
loop
sarb
sar
mov
call
fidivl
xchg
xchg
stc
pop
sbb
mov
ljmp
iret
inc
shll
mov
inc
fdivrs
std
push
adc
push
sbb
cmp
insb
add
rclb
push
lock
add
addb
mov
or
outsb
jg
fsubl
in
or
nop
in
jns
inc
fnstenv
outsb
cltd
aam
enter
enter
inc
stos
insl
push
test
adc
xor
jne
dec
xor
push
addr16
xor
dec
lcall
push
out
sti
icebp
adc
jge
movsl
popf
sti
std
cwtl
loopne
jo
cld
out
clc
les
loope
jae
in
ret
testl
popa
fcmovnbe
inc
fadds
lock
dec
aaa
xor
cmp
and
enter
push
int3
mov
dec
adc
or
shrb
cwtl
fwait
lock
jg
out
je
cwtl
adc
xchg
pop
jne
jg
out
cwtl
jmp
add
aam
inc
jbe
imul
jo
leave
mov
jmp
push
pop
inc
dec
je
dec
pop
js
jp
loope
ss
insl
pop
add
test
push
push
push
lock
inc
jmp
add
push
xchg
sub
stc
mov
les
adc
sbbb
outsb
jae
dec
add
adc
imul
push
fs
push
mov
movsb
mov
aad
xlat
add
dec
std
inc
cwtl
jb
or
int3
ficoms
dec
pop
ljmp
enter
xor
loop
sbb
xlat
or
push
fucomip
mov
jge
daa
cmc
aad
jmp
add
fstpl
shlb
xchg
call
inc
push
inc
and
adc
or
and
ret
mov
add
mov
push
and
or
and
decl
xchg
adc
jb
lea
cmp
ror
dec
push
or
dec
js
dec
add
dec
cmpb
push
push
xor
pop
fidivl
fldl
les
roll
mov
jl
outsl
inc
outsb
repz
xor
mov
push
lret
pop
dec
xchg
add
sahf
jo
cmp
shll
or
push
xchg
loopne
push
dec
into
dec
lcall
xor
or
scas
shrl
lahf
pop
pop
pop
mov
mov
cmp
cwtl
movsb
bound
mov
add
xor
or
cmp
inc
or
fists
js
xor
insl
cwtl
pop
push
fs
hlt
pushl
je
test
xor
les
movsb
fistpl
add
aam
add
jne
dec
mov
dec
enter
push
xor
pop
arpl
ds
inc
shlb
sub
pop
into
inc
ljmp
adc
mov
adc
add
test
sub
fwait
mov
int3
jp
inc
in
inc
je
sbb
dec
inc
mov
inc
ret
push
ffree
mov
adc
dec
call
daa
rcl
dec
scas
shrb
mov
or
insb
fiaddl
jg
shr
and
sub
add
or
and
xor
sub
leave
add
or
add
test
or
add
add
or
add
add
sub
pop
sti
sub
sbb
or
xor
dec
sbb
fstps
xor
push
push
or
fstp
jae
xchg
or
cmpsl
sti
pushf
sub
sub
out
outsb
jnp
add
rcrb
jae
aad
cmc
push
iret
mov
and
pushf
sbb
popa
add
push
xor
jge
and
dec
loope
mov
in
std
xorb
out
and
je
mov
mov
scas
jmp
out
into
xchg
pop
pop
cmp
ja
mov
cmpsl
mov
movsb
xchg
fstps
sti
inc
xchg
push
xchg
xor
push
cmp
popf
jae
xchg
adc
pop
xchg
test
mov
push
lea
movsb
out
jae
mov
lds
fcomps
and
mov
fbstp
shll
leave
fistpl
or
addb
not
outsb
roll
sbb
movsb
clc
mov
pop
bsr
jge
daa
jnp
leave
mov
testl
sbb
push
pushf
sar
push
ja
and
pop
popa
jecxz
mov
mov
mov
push
stc
inc
mov
adc
xchg
lahf
push
out
sub
dec
fisttps
gs
pop
out
mov
int
mov
imul
and
cmpsb
mov
sbb
stos
sbbl
sahf
pop
mov
icebp
test
xchg
jae
mov
jae
push
push
imul
leave
dec
loopne
insb
insb
xorb
sub
cwtl
outsb
sub
pop
xor
dec
cmc
cs
ret
cmp
idivb
gs
xor
cs
addl
xchg
cmp
notl
mov
mov
pop
sbb
pop
out
scas
push
pop
pop
mov
cmp
imull
aad
sbb
xor
arpl
dec
dec
shl
sub
inc
cmc
ja
add
jmp
add
add
pop
lea
add
roll
pop
cmpsb
inc
xor
pmullw
push
and
jnp
push
add
xchg
stos
dec
ret
push
and
les
sub
leave
add
inc
sarl
push
sbbb
fistl
push
add
dec
xchg
mov
xchg
dec
push
xor
enter
enter
fsubp
ret
and
leave
dec
leave
push
orl
adc
add
mov
leave
push
bnd
jns
enter
dec
xchg
or
cwtl
add
fiaddl
mov
adc
mov
cwtl
test
push
jge
add
cmp
popa
add
pop
enter
std
mov
sbb
enter
in
pusha
inc
mov
sub
mov
loope
add
add
inc
xor
cs
push
sbb
and
inc
fidivrl
leave
mov
add
inc
and
mov
cltd
bound
sbbb
adc
sub
and
test
cmp
xchg
or
adc
sbb
outsb
movsl
dec
fstpt
xor
inc
and
test
inc
and
add
sub
sbb
mov
jns
nop
or
inc
inc
fmul
nop
or
mov
popa
pop
adc
push
jg
test
xor
add
or
xor
dec
or
pop
pop
sbb
mov
cmpsb
inc
push
sbb
nop
loop
add
inc
and
dec
mov
pop
movsl
add
pop
push
xchg
ja
subb
pop
sbb
mov
inc
adc
and
pop
or
sbb
sub
cmp
add
fmuls
mov
dec
and
push
popa
lret
or
lods
dec
scas
sub
add
stc
lahf
xor
in
push
pop
incb
xchg
sub
inc
jle
inc
xor
pop
cmpsl
adc
inc
inc
aas
shl
mov
sbb
add
mov
popa
sbb
sbb
mov
mov
xchg
add
stos
loope
lods
cmc
sub
repz
adc
pop
mov
xor
bound
inc
and
fisubrl
mov
inc
pop
mov
into
jge
orl
enter
aad
sbb
fwait
sub
orb
and
xchg
jno
insb
mov
test
test
sbb
out
movsb
mov
mov
and
pop
std
push
movsl
stos
jmp
mov
mov
add
add
mov
and
jno
fs
outsl
arpl
add
xchg
mov
rol
and
jb
and
dec
popa
inc
add
loope
jo
adc
adcb
jg
sub
mov
mov
icebp
shlb
mov
mov
sbb
sub
dec
push
jb
xchg
repnz
xchg
idivb
xchg
mov
test
test
mov
insb
stos
sub
pusha
std
pop
in
cs
lock
inc
push
inc
inc
dec
mov
sub
adc
and
push
dec
jecxz
orb
mov
and
adc
imul
pop
add
cmp
in
cs
lcall
mov
lret
sbb
pop
and
mov
dec
push
daa
mov
and
adc
mov
or
add
scas
test
and
leave
nop
cmp
cmc
mov
push
repz
xor
inc
inc
mov
adc
inc
leave
xor
jmp
mov
aaa
jne
add
xchg
xchg
adc
imulb
mov
ss
inc
pop
add
xor
sub
inc
push
cmc
iret
dec
xchg
mov
mov
sbb
mov
jno
sub
push
or
mov
std
and
rcll
jl
xchg
or
adc
push
mov
xchg
or
sbb
xchg
add
leave
and
jmpw
test
add
sbb
loopne
pop
xor
xchg
ret
adc
and
inc
pop
mov
and
add
call
cmpsb
mov
fmulp
subb
test
iret
call
fstl
lea
sbb
push
and
test
sub
jae
loop
push
push
jmp
or
sbb
and
or
cs
sub
ficoml
xchg
xor
pop
xchg
sbb
ret
adc
aas
adc
in
jae
xor
mov
dec
push
shll
inc
dec
mov
push
and
push
adcl
add
loope
test
dec
pop
push
mov
pop
cs
xchg
stos
xchg
jl
pop
stos
push
adc
mov
dec
scas
push
mov
inc
and
and
leave
cltd
leave
loope
push
pop
adc
divl
and
dec
and
xchg
das
mov
inc
inc
andl
insl
and
adc
test
or
or
call
mov
push
andb
mov
xacquire
dec
jecxz
cs
test
dec
adc
jno
cmpb
adc
pop
push
test
dec
pop
and
subl
adc
call
test
imul
mov
jecxz
pop
jb
adc
mov
cmp
inc
orb
movsb
dec
push
pop
rcrb
ret
and
add
push
dec
inc
adc
push
pop
push
adc
adc
xchg
or
setle
or
sub
pop
fildl
aam
jo
adc
add
xchg
fsubrs
dec
popa
sub
leave
xchg
add
inc
mov
inc
inc
xor
xor
dec
cmp
or
xor
fwait
cmpsl
cmpb
mov
dec
inc
enter
adc
out
inc
andb
pop
jp
or
inc
test
leave
mov
je
dec
imul
jmp
mov
and
jae
in
test
andb
in
sub
adc
pop
mov
inc
rorl
bound
in
or
push
dec
inc
jl
and
or
cmpsb
stos
popf
inc
sti
and
mov
adc
dec
mov
pop
out
or
int3
inc
roll
and
and
inc
vunpcklps
aaa
out
sbb
mov
dec
mov
push
add
sub
add
xor
push
xor
add
adc
and
aas
inc
insl
adcb
pusha
and
xor
loop
sub
mov
je
or
or
jl
loope
adc
out
test
inc
sti
loop
sbb
prefetch
ret
subl
inc
lds
adc
mov
icebp
dec
sbb
test
pop
adc
cmp
push
adc
rorb
adc
inc
popa
cmp
pop
call
add
popa
or
imul
push
adc
popf
movsb
dec
push
mov
cmp
call
cmpb
mov
mov
pop
pop
adc
inc
jge
dec
xor
in
rorl
popa
gs
xor
sub
add
or
sqrtps
push
and
std
inc
push
and
cmp
test
arpl
or
adc
cmpsb
sbb
jge
out
add
pop
leave
les
inc
dec
popa
inc
dec
test
pop
adc
sbbb
add
sbb
inc
adc
mov
add
in
push
or
or
mov
ss
or
lds
xlat
imul
xchg
sbb
aam
sbb
bound
and
add
mov
inc
adc
sub
dec
mov
adc
jb
arpl
inc
movsl
adcb
adc
push
and
fldl
rcrb
push
push
mov
xchg
or
data16
inc
jns
or
xchg
xchg
xor
pusha
popa
sub
mov
xor
movsl
pop
sub
xor
add
sbb
add
enter
jmp
add
adc
or
or
and
adc
xor
fs
mov
test
sbb
pop
adc
shll
inc
enter
mov
mov
fwait
orl
lahf
pop
adc
not
dec
dec
je
mov
xor
enter
and
mov
push
lock
xchg
or
mov
dec
sub
mov
or
pop
je
inc
push
add
enter
test
sub
xor
sbbl
loop
nop
and
or
cmpl
filds
dec
push
inc
pop
scas
mov
pop
es
pusha
xchg
and
add
sub
dec
adcl
mov
leave
push
adc
xchg
cmp
inc
or
cmp
or
mov
andl
adcb
adc
push
add
or
jg
add
arpl
loopne
or
dec
inc
rcrl
xchg
mov
pusha
add
inc
stc
adc
push
aaa
push
or
mov
and
bnd
sub
test
mov
inc
pop
pop
xor
or
or
sub
ljmp
insb
inc
leave
and
popl
mov
jmp
add
adcb
inc
dec
rolb
dec
push
xor
inc
xor
add
rclb
test
orw
loopne
push
jmp
lock
push
int
and
fdiv
pop
test
addr16
roll
pop
add
ja
jecxz
or
lock
mov
or
inc
test
and
mov
adc
pop
test
cltd
sub
push
xor
sbb
xor
or
push
jno
inc
add
in
pop
aas
scas
dec
ror
cs
xchg
fs
xor
imul
or
and
xchg
in
loope
int3
fistpll
inc
and
stos
jb
pop
jo
cmp
add
ds
inc
test
pop
leave
inc
jle
sub
push
pop
xchg
popf
dec
adc
xor
and
cmc
xor
push
add
in
addb
rorl
das
jb
push
inc
adcl
lods
data16
pop
int3
inc
push
xor
pop
adc
test
cmpsb
dec
shll
jae
adc
insb
and
lea
enter
outsb
and
or
sbb
mov
inc
sbb
xchg
pop
lock
mov
or
dec
adc
cmp
rolb
lock
and
cmc
aam
pusha
push
aaa
mov
ja
mov
or
inc
test
aas
inc
popf
inc
test
leave
shll
insl
andb
je
scas
js
and
aad
mov
inc
cltd
mov
jae
nop
cmp
add
push
xchg
loopne
es
imul
movsl
fistps
stos
mov
fbld
rclb
pop
push
sbb
repnz
mov
inc
and
or
lahf
pop
jo
and
xor
imul
sbb
mov
inc
jnp
inc
repnz
sbb
add
dec
addl
push
adc
lret
mov
and
mov
fstps
xchg
push
dec
jne
or
xchg
inc
daa
push
test
dec
mov
popf
dec
add
popa
mov
leave
aas
pop
inc
sub
mov
inc
aad
push
jno
loopne
push
fldl
xor
inc
lock
inc
push
xchg
pop
andl
enter
and
inc
enter
mov
inc
leave
pop
xorl
mov
or
fs
mov
ret
cltd
sub
push
les
adc
push
xchg
stc
push
and
or
jno
sub
mov
loope
movsb
repz
and
mov
scas
stos
adc
sbb
inc
xchg
cwtl
xor
adc
cmpl
or
loopne
test
popa
jno
mov
sbb
cmpsb
adc
scas
mov
in
enter
popa
movsl
cmp
push
xlat
sbb
jne
add
adc
xorl
mov
adc
adc
ljmp
ss
wrmsr
push
inc
add
add
pop
push
cmpsb
inc
adc
push
cmpsl
push
and
test
std
lock
or
scas
and
add
arpl
outsb
loop
mov
sub
adcb
fcoml
fwait
and
or
test
mov
or
xchg
sub
mov
inc
or
cli
cmpsl
ret
test
jae
adc
xor
es
sub
stos
jmp
shlb
adc
arpl
inc
push
imul
pusha
or
scas
adc
sub
push
mov
cmp
cmp
int
mov
mov
adc
push
sbb
call
aam
inc
sti
and
mov
jns
test
fists
lods
loopne
ret
cmp
or
cs
addb
xchg
mov
xchg
in
cmp
iret
add
mov
mov
scas
add
mov
inc
jg
xchg
dec
xor
test
imul
xchg
cmc
jns
imul
add
sub
adc
andl
hlt
mov
push
add
xor
dec
add
inc
ret
inc
inc
sbb
push
js
loope
adc
dec
or
sti
or
lea
aaa
xchg
and
push
loopne
cmp
cwtl
xchg
sar
mov
test
into
mov
adc
aas
mov
or
xchg
lds
roll
xorl
xchg
addr16
ret
jae
sub
sub
xchg
push
dec
add
sub
aas
bound
imul
test
xor
mov
jmp
frstor
dec
outsl
lods
loope
ret
movsb
and
mov
sub
in
mov
outsb
or
mov
orb
mov
out
cmp
arpl
cmp
dec
push
xchg
jecxz
mov
aaa
mov
and
push
rcl
cmovno
jo
dec
outsl
jmp
lret
sub
roll
popa
mov
adc
push
mov
xor
sbb
xor
jno
or
add
imul
mov
mov
adc
fs
inc
in
popa
add
mov
or
mov
xchg
fsubrs
adc
sub
inc
and
cmp
jae
push
and
hlt
xchg
or
sbb
push
push
mov
decb
xchg
xchg
call
and
out
push
movsb
mov
xchg
add
dec
adc
dec
sbb
cmpsb
mov
shrb
mov
inc
int
aaa
je
xor
sarl
loop
sahf
mov
insb
test
xor
out
lds
push
and
inc
pushf
push
inc
fisttpl
mov
push
cmp
test
adc
xchg
adc
xor
inc
movsl
stc
push
xchg
fs
lock
cltd
adc
pop
sub
or
push
jmp
loopne
xor
addb
ret
sbb
int
sub
cmpsb
and
or
ret
mov
mov
mov
es
adc
rorl
es
sbb
add
push
pop
mov
out
add
sub
dec
and
xchg
test
nop
add
bound
xchg
xchg
xor
pop
in
js
sub
pop
nop
pop
lds
xchg
ret
mov
lret
andl
dec
fmull
push
jge
xor
dec
dec
sbb
push
xorb
sub
xchg
arpl
xorl
adc
fisttpll
add
iret
mov
sub
inc
sbb
leave
les
cltd
fsubs
mov
outsl
sub
mov
flds
and
xchg
push
arpl
fldcw
xchg
in
and
bound
xlat
mov
outsl
push
pop
xor
mov
popa
stos
mov
adcb
add
xor
xor
inc
movsb
and
pop
or
jno
dec
jnp
movb
lock
aaa
add
or
pop
jge
adc
inc
mov
xor
inc
inc
pop
test
adc
push
jnp
push
jns
or
bswap
add
mov
dec
sub
add
test
cmp
sbb
push
sbb
inc
pop
pusha
add
test
loop
leave
inc
sub
mov
and
leave
pop
xchg
sbb
inc
dec
xor
xchg
and
cmpb
adc
pop
dec
sub
jo
out
add
mov
push
jno
dec
dec
jae
test
mov
cmc
and
push
or
dec
xchg
xor
add
aaa
inc
jecxz
mov
or
xchg
dec
cwtl
inc
inc
pop
in
je
mov
xchg
adc
mov
aas
push
sub
pop
xor
add
add
shr
xchg
xor
pop
mov
add
test
ret
pop
mov
arpl
orl
push
out
and
in
shrb
sbb
dec
xor
lea
adc
xor
cmp
subb
add
jmp
push
add
inc
mov
inc
mov
mov
mov
cmp
dec
dec
xchg
pop
adc
sbb
lds
test
and
repnz
fnstcw
test
inc
xor
addl
dec
dec
lock
and
stc
sbb
mov
es
jno
addr16
movsl
add
xchg
add
iret
repz
jg
cltd
jp
or
aam
ja
shlb
xchg
les
fildll
jno
or
pop
sbb
add
ja
dec
pop
je
mov
inc
sbb
sbb
add
mov
sub
movsl
fsts
sub
out
sbb
mov
inc
xchg
add
nop
popa
cmpsl
hlt
ja
rclb
lds
stc
and
iret
call
cltd
add
inc
repnz
pop
mov
sbb
shlb
hlt
and
dec
sbb
cmp
movsl
mov
xor
cmp
mov
mov
stos
add
xor
mov
movsb
pop
push
lea
push
adc
out
lock
lea
test
sub
fs
dec
inc
insb
arpl
xor
or
sbb
pop
out
movsb
pop
xchg
add
std
adc
push
push
les
dec
xor
in
sub
or
push
rcrl
orl
inc
and
mov
sbb
mov
mov
adc
fldenv
inc
and
push
adc
push
or
jecxz
sahf
daa
test
movsl
sahf
in
push
or
and
and
addr16
sub
sbb
pushw
sbb
adc
push
stos
add
push
jno
mov
jno
pop
jb
xchg
bound
inc
jle
sbb
cs
adc
shll
adc
fcomps
sbb
lret
adc
pop
adcb
loopne
xchg
or
sarb
dec
bound
mov
int
push
mov
mov
or
push
push
inc
dec
sbbl
rolb
adc
add
mov
mov
inc
push
pop
sbb
sub
adc
xchg
sti
and
sbb
loope
push
push
mov
call
cmp
imul
mov
orl
add
push
and
std
into
mov
sub
lret
inc
and
aaa
xchg
cs
popl
xchg
inc
test
test
dec
sahf
stos
jmp
fptan
add
stos
ss
inc
and
push
or
mov
xor
and
push
jae
cwtl
ljmp
jo
enter
loopne,pt
xor
lea
sub
xor
push
out
movswl
add
sub
lds
test
mov
cmpsl
lcall
stos
sbb
inc
int
test
shll
jne
add
inc
aad
mov
add
aaa
lods
scas
call
xchg
inc
or
push
inc
mov
dec
loope
mov
jno
pop
imul
sbb
sbb
jno
or
add
test
push
and
sarl
loop
pop
popa
inc
repnz
fstps
repz
jns
loop
loop
icebp
cmp
jecxz
push
sub
dec
lods
out
xchg
andb
je
pop
je
mov
sub
arpl
adc
in
iret
insl
cwtl
mov
adc
push
xor
frstor
jp
test
les
popa
jecxz
xor
xchg
push
dec
ret
addr16
fnsave
jne
test
jno
sub
adc
inc
shlb
leave
addb
or
xchg
jb
or
loopne
add
add
or
sbb
ljmp
sbb
or
pop
enter
pop
inc
dec
adcl
imul
and
or
pop
imul
sbb
inc
sub
je
dec
and
xchg
or
lcall
loope
adc
cmc
push
shll
leave
mov
xor
dec
aas
add
mov
adc
or
sbb
cmpsb
inc
dec
xchg
sbb
cmp
mov
add
lods
xor
adc
leave
push
push
lock
and
mov
or
adc
xchg
mov
mov
add
dec
add
test
or
fistl
add
leave
in
or
adc
leave
shrb
jge
pop
leave
pop
or
and
ret
add
sbb
stos
fwait
sub
mov
loope
and
mov
xchg
and
inc
mov
mov
test
aad
outsl
lret
subb
fiaddl
leave
jmp
cmpb
mov
xchg
and
add
jno
insl
sub
mov
or
rorb
mov
inc
adc
sar
add
stos
cmp
adc
or
pusha
roll
add
sbb
xor
addl
inc
rcrl
push
insb
fs
inc
inc
es
fistpl
test
loop
mov
or
adc
aas
jno
sub
cmp
cs
mov
dec
les
mov
adc
rcl
push
add
btsl
icebp
mov
xchg
pop
add
xchg
cmp
dec
sbbb
inc
mov
enter
ret
jmp
nop
cmpsb
cmp
xchg
push
and
repz
mov
shlb
lea
lcall
sbb
pop
push
or
pop
jg
inc
sbb
nop
inc
push
andl
lea
inc
leave
add
bound
inc
pop
pop
sbb
sub
mov
mov
push
or
push
xchg
and
mov
mov
mov
dec
or
orl
sub
loopne
std
iret
vcvttss2si
and
pop
add
jo
inc
dec
add
aaa
mov
test
sub
shlb
leave
in
cmp
nop
cmpsb
or
mov
or
push
andb
repnz
adc
inc
sub
and
aam
and
sub
pop
lock
hlt
rorl
xor
xor
inc
and
sub
pop
inc
std
aam
fsts
xchg
jmp
inc
mov
dec
daa
xor
call
cmp
xchg
mov
jne
fldl
mov
xchg
and
add
dec
mov
scas
inc
dec
adc
push
jns
xor
sub
rclb
mov
test
mov
enter
mov
mov
or
mov
arpl
or
xchg
or
inc
xor
xchg
xchg
movsl
jne
mov
push
xor
orb
stc
lea
mov
push
rclb
jae
add
popfw
add
lock
push
inc
adc
mov
xor
lods
and
add
sarb
mov
mov
in
inc
add
inc
and
mov
mov
add
cs
std
and
je
nop
sub
lods
lock
adc
mov
je
mov
cmp
test
outsb
daa
or
andb
popa
mov
aam
sub
inc
lds
add
jle
and
add
mov
subb
les
push
or
jecxz
icebp
push
and
inc
pop
mov
xor
push
test
lock
jne
iret
mov
add
mov
adc
mov
add
out
push
xor
and
ja
scas
bound
or
fwait
or
dec
xor
inc
xlat
add
xchg
mov
imul
movsb
addr16
xchg
popa
out
inc
xlat
out
lret
mov
inc
push
dec
pop
adc
cwtl
sbb
mov
inc
nop
outsl
push
repnz
jl
mov
in
cwtl
mov
mov
mov
or
xor
xchg
rcrl
mov
inc
and
inc
push
stc
jo
enter
in
insb
movsl
adcl
rclb
inc
and
add
lock
pop
je
cmp
ffree
inc
cs
cmp
cmpl
push
and
adc
sbb
xchg
in
inc
pop
repz
lds
adc
and
push
notl
arpl
or
and
xor
adc
pop
cli
pop
add
lcall
dec
mov
and
inc
sub
adc
inc
xchg
ret
mov
test
cmp
and
stos
jns
inc
daa
test
mov
in
test
add
push
lock
cwtl
and
fsubs
movl
test
mov
inc
ds
and
sbb
out
fs
mov
add
fmuls
test
bound
imul
push
jns
loop
sub
or
xor
popf
jl
mov
mov
inc
mov
xor
cmpsl
dec
xchg
mov
inc
or
mov
mov
add
in
pop
adcb
mov
push
xor
fs
lahf
loope,pn
push
jmp
movsb
and
or
icebp
daa
test
nop
add
mov
inc
adc
out
mov
daa
add
mov
lret
movsl
pushf
cwtl
or
jne
inc
cmp
push
inc
and
test
jae
and
sub
push
adc
mov
outsb
jmp
xor
add
and
aam
into
jmp
dec
and
xchg
and
mov
aam
and
mov
enter
xchg
mov
sub
mov
xor
dec
fbstp
stos
add
pop
sub
jae
in
mov
mov
push
ja
inc
pop
or
nop
cmp
scas
popf
jge
push
adc
or
adc
jo
mov
add
pop
add
ja
or
and
adc
and
dec
imul
aam
cltd
sbb
cmpsb
push
repnz
push
or
adc
imul
inc
or
out
inc
insb
stos
rclb
leave
add
shll
and
add
adc
xchg
xor
push
or
mov
jno
mov
imul
xchg
scas
dec
pop
test
add
adc
in
push
ret
cmp
xchg
cmp
sub
add
adc
and
xor
ds
popf
push
lods
bound
add
add
and
pop
enter
pop
and
leave
xchg
add
pop
mov
mov
xchg
fcom
adc
out
push
mov
add
xchg
sbbb
sub
or
inc
add
test
or
inc
movsl
mov
mov
rcrb
in
push
xorb
push
jecxz
jns
mov
pop
mov
push
cmp
sbb
subl
push
sbb
push
or
movsl
pushf
insb
cmp
repnz
and
jecxz
add
movb
dec
add
push
push
cmc
fldenv
cmp
jmp
inc
ret
add
scas
aam
test
push
push
dec
push
mov
or
dec
test
sbb
or
mov
imul
test
mov
push
aad
push
add
mov
dec
mov
adc
lock
mov
sbb
mov
in
jl
pop
sbb
add
sbb
pop
call
sbb
cmpb
add
in
nop
sub
mov
sahf
movsl
scas
stos
sbb
pop
dec
out
lahf
cmp
call
jno
and
aas
dec
lcall
adc
fwait
mov
xor
mov
add
sbb
shll
and
outsl
mov
or
gs
add
push
nop
xchg
mov
inc
cmpsl
push
cmpb
jecxz
mov
mov
aad
sbb
pop
add
addb
jo
cwtl
and
sar
fcoml
iret
dec
mov
mov
cmp
push
mov
add
xchg
movsl
xchg
push
adc
sbb
adc
cmp
jno
cmpsb
xor
mov
sub
mov
gs
data16
pop
pop
pop
and
or
pop
mov
xor
mov
or
lret
inc
pusha
adc
test
and
sbb
or
shll
cmp
loop
imul
or
jg
je
pop
mov
cmpl
or
arpl
je
pop
sbb
iret
inc
xor
inc
inc
jbe
push
lods
in
pop
enter
cmp
adc
adc
dec
pop
mov
in
mov
mov
xchg
pop
jb
scas
add
adc
push
pop
inc
pop
dec
ja
xchg
test
inc
shlb
in
lock
pop
loop
rcrl
cmp
xchg
mov
and
es
loope
stos
xchg
das
arpl
adc
imul
jmp
test
xor
or
push
xor
pop
fldt
xor
or
jecxz
das
adc
or
adcl
jo
lret
lcall
mov
and
xor
and
test
lret
icebp
sbb
in
mov
push
mov
sbbb
insl
mov
push
pop
lods
mov
lret
and
fldl
xor
inc
int
nop
inc
push
lock
pop
and
mov
pop
loopne
adc
dec
lea
jge
mov
or
enter
les
es
mov
jns
fadds
xor
pop
push
insl
pop
inc
pop
mov
inc
imul
cmp
mov
jae
aas
test
outsl
add
bound
xchg
andl
adc
dec
inc
pop
push
adc
bound
mov
push
adc
push
and
leave
in
cmpsb
dec
outsl
push
and
sbb
mov
movsb
mov
dec
add
xchg
enter
mov
sub
pop
and
in
xlat
pop
sbb
aam
pop
and
push
mov
pop
mov
push
daa
jge
pop
or
jp
nop
sub
lds
leave
inc
pop
mov
inc
in
push
push
jecxz
rcrl
xchg
sbb
inc
mov
mov
les
mov
mov
stos
xchg
out
or
mov
push
addr16
mov
je
pop
xchg
xchg
sbb
adc
jge
adc
cwtl
jno
mov
jns
into
addl
or
jno
mov
pop
sbb
ja
imul
rclb
fstpl
sbb
andl
mov
and
or
out
sbb
cwtl
dec
stos
nop
sbb
std
pop
scas
adc
cmp
dec
and
add
orl
das
lcall
test
addr16
xchg
dec
xchg
push
xchg
imul
xor
repnz
adc
pop
dec
or
cld
xchg
test
xor
jae
pop
addb
or
dec
jbe
adc
lea
dec
bound
jg
shll
push
es
and
and
and
nop
movsl
push
jbe
cmp
stos
mov
in
xor
sub
mov
shrb
sbb
or
nopl
add
test
xor
mov
sbb
adc
adc
push
mov
add
xchg
dec
jnp
adc
sar
fst
add
lahf
loope
movsb
xchg
sub
rorl
ret
gs
push
das
pop
leave
mov
in
sub
mov
lock
stos
test
or
mov
roll
cltd
xchg
icebp
repz
fs
inc
inc
and
test
lret
daa
popf
inc
sbb
mov
enter
adc
jmp
jecxz
pop
or
inc
lcall
cli
add
push
inc
mov
movsb
subb
mov
pop
mov
and
leave
pop
or
pop
pop
repnz
lds
xor
daa
popa
mov
leave
imul
jae
es
sbb
lcall
mov
push
sub
add
pop
daa
rolb
xchg
cmp
or
aad
bound
pop
and
cltd
repnz
stos
or
inc
das
xchg
scas
and
jne
xchg
lahf
cwtl
pop
sub
roll
xchg
pop
rolb
mov
push
fnstsw
adc
add
syscall
xchg
pop
mov
insl
std
pop
jecxz,pt
int
inc
or
adc
dec
ja
add
push
lds
pop
add
orl
inc
mov
cmp
pop
push
inc
dec
pop
test
xor
or
add
rolb
and
aad
inc
loope
add
pmullw
rcll
dec
mov
adc
mov
mov
mov
sbb
sub
xchg
add
mov
dec
imul
lcall
jno
mov
bound
sbb
je
xchg
mov
mov
cs
push
test
pop
or
cmpsl
pushf
or
setae
pop
sub
cmp
add
pusha
mov
pusha
dec
jle
or
mov
push
jecxz
andl
mov
or
xchg
or
mov
jnp
bound
es
add
mov
push
add
enter
arpl
rcl
adc
arpl
popa
sub
or
and
cmp
add
in
pusha
or
inc
add
movb
psubq
jmp
lret
xor
out
aas
arpl
cltd
dec
lds
xchg
jae
mov
cmpsl
inc
jne
add
mov
and
lcall
mov
push
add
mov
and
lcall
pop
push
in
adc
loope
push
xor
mov
rcrl
fwait
loopne
adc
push
pop
ret
mov
add
mov
cmp
loopne
fisttps
push
add
inc
test
andl
sbb
or
leave
test
imul
push
push
out
filds
and
test
xor
and
xor
inc
shr
sbb
cmp
lcall
stc
jo
jns
xor
fildll
pop
and
addb
mov
mov
fldl
loopne
inc
and
and
adc
pop
jno
repnz
outsl
sub
push
testl
and
cmp
xor
mov
jns
pop
fucom
push
and
test
mov
xlat
bnd
cmp
jmp
inc
js
push
pop
mov
inc
sahf
aam
int3
pop
mov
inc
movsb
push
bound
mov
push
test
dec
pop
sarl
mov
cmp
sti
cli
test
loope
or
out
and
and
rolb
pop
inc
mov
or
ficompl
rolb
orl
pop
sbb
mov
xchg
xor
lods
cmpsb
lds
loopne
fwait
leave
xchg
xchg
push
cs
jnp
and
push
ret
imul
jnp
add
jae
imul
mov
pop
je
icebp
dec
decl
addr16
les
fs
or
push
or
jno
dec
mov
and
orl
mov
or
imul
sbb
or
xchg
jl
cwtl
jnp
hlt
mov
xlat
bound
cmp
fldcw
mov
xchg
pop
xor
mov
inc
pop
dec
sub
dec
js
sarb
or
icebp
mov
add
mov
in
dec
add
lock
and
mov
pop
rcll
jne
or
mov
adc
push
test
inc
rcrl
dec
mov
cmpsl
and
rol
mov
lock
add
lock
neg
in
or
add
sahf
sbb
dec
push
stos
movl
gs
or
and
xor
mov
sbb
in
daa
lcall
xchg
mov
ss
test
mov
shrl
and
je
jmp
test
cmc
mov
dec
dec
add
sbb
and
fstpl
sti
jo
cmp
sbb
inc
lret
out
popf
addb
cs
jno
in
add
mov
xlat
mov
test
inc
add
sub
mov
adc
sbb
mov
xchg
adcl
inc
jnp
mov
test
lret
pop
mov
in
push
sub
lahf
orb
or
adc
mov
pusha
push
mov
mov
gs
or
push
push
outsl
movsl
nop
xchg
xchg
xchg
insb
addb
or
jae
or
sbb
mov
xchg
and
add
add
adc
sub
jb
dec
push
or
add
fdivl
mov
aas
dec
jbe
test
or
add
pop
jl
and
lea
or
pop
test
xor
shlb
add
sbb
mov
cwtl
cli
inc
in
push
sbb
fldl
inc
push
add
imul
dec
inc
mov
and
jnp
add
push
sbb
aad
insl
addr16
or
push
or
xor
or
insl
sub
pop
inc
mov
jp
orl
lock
xor
bound
pop
and
js
mov
inc
sbbl
lret
or
sysexit
mov
jns
pop
aam
or
pop
popa
adc
jb
mov
xchg
and
popf
and
cmpsl
lea
loope
pop
add
out
mov
imul
lock
pop
lahf
jg
ret
add
jns
loopne
add
cmp
ljmp
dec
xor
dec
rcl
add
and
clc
outsb
or
and
jb
inc
sahf
add
adc
jae
dec
ret
bound
addl
adc
out
lea
andl
adc
and
cmp
call
or
jle
loop
lahf
je
lods
rol
cwtl
call
shll
fwait
fmulp
das
mov
jl
ret
adc
cmp
cmpsb
mov
push
mov
pop
popa
push
fwait
cwtl
negb
push
inc
mov
pop
mov
jg
cmc
decl
bound
gs
push
push
lods
imul
lcall
and
xor
les
and
ds
sub
scas
xor
adc
fisubrl
sbbl
ret
mov
fdivl
fcomp
test
jne
loopne
jbe
cmp
ds
call
ds
ljmp
outsb
out
cli
inc
imulb
aaa
xchg
dec
sahf
hlt
xor
hlt
mov
mov
decb
in
lods
std
push
xor
or
lds
inc
sub
pop
mov
push
stos
mov
imul
int3
lcall
cld
dec
enter
mov
ljmp
fcompl
mov
pop
imul
into
sbb
es
mov
decl
jecxz
adc
test
jno
loop
lds
mov
mov
mov
cmp
es
and
fwait
lock
and
dec
inc
lock
ljmp
divl
std
adc
sahf
add
jmp
filds
rcrb
pop
call
or
mov
in
sub
out
mov
mov
stc
sahf
mov
jmp
std
jno
adc
cmp
push
aaa
and
cmpsb
into
mov
mov
push
jne
xchg
inc
push
ja
pop
out
cmp
jge
xchg
mov
sub
sbb
fidivl
outsb
jno
mov
fwait
cmp
scas
lahf
leave
inc
mov
cmp
aas
nop
in
loope
xor
sarb
xchg
sub
ljmp
icebp
leave
pusha
out
fwait
hlt
fcompl
cmpsb
cmc
dec
mov
clc
decl
mov
push
add
popa
pop
dec
pop
xchg
js
xor
push
lods
inc
and
pop
and
lret
adc
cmp
sbb
xchg
mov
push
insb
test
add
lods
pop
jo
das
clc
inc
js
sbb
pop
and
iret
and
and
xor
mov
adc
ljmp
andb
fisubl
lds
inc
xor
iret
aaa
mov
push
mov
lea
les
es
clc
out
cmp
ds
imul
in
inc
cwtl
popf
out
inc
in
jnp
test
lea
fs
ljmp
dec
or
stc
fucomp
ljmp
cwtl
xchg
or
push
xchg
dec
popa
scas
add
cli
mov
mov
or
int
scas
fimuls
push
sahf
sar
cmpb
dec
popa
ds
addr16
xlat
jnp
xorl
jb
jb
mov
lret
mov
or
and
rcrl
xlat
daa
jge
filds
decl
cmpsl
xchg
pusha
ds
xor
mov
inc
test
cmp
jg
aam
aam
or
inc
xchg
jmp
cmp
or
pushl
popf
repnz
dec
mov
mov
stc
dec
movsl
call
orb
stc
jmp
xchg
or
mov
jmp
dec
push
add
bound
lock
push
xchg
mov
adc
mov
sbb
add
sbb
xor
mov
jg
decl
inc
and
xlat
push
mov
test
xor
sub
sub
stos
sbb
cld
mov
cld
loop
mov
loope
push
cmc
loop
rcr
and
inc
jmp
pushl
call
fwait
in
inc
sbb
pushf
inc
pushf
icebp
cltd
xchg
cmp
mulb
dec
mov
mov
inc
sub
das
fcoms
add
mov
scas
add
ja
mov
subb
cmp
gs
ja
lcall
jle
test
dec
push
clc
lcall
sbb
cs
popa
decl
popa
pusha
and
push
or
adc
data16
sub
push
cs
loop
xor
cmp
and
xchg
hlt
mov
jno
jbe
cmp
dec
xchg
sti
push
inc
lcall
ficompl
int3
xchg
stc
dec
mov
pop
lock
rol
cld
cmp
lods
add
dec
sub
int3
pop
lock
incl
or
pop
jmp
cmc
sarl
insl
mov
call
xor
stos
aaa
cwtl
sub
lods
mov
sbb
cmp
jne
pop
std
dec
ljmp
std
xchg
sbb
sub
call
decl
lock
mov
sbb
adc
das
je
sbb
sub
jne
and
jmp
sbb
and
jge
xor
xlat
pop
cwtl
out
inc
adc
rcr
lock
pop
lock
stos
testb
inc
dec
mov
push
movsl
sti
mov
ljmp
mov
stos
pushl
or
sbb
push
mov
hlt
inc
pop
add
cmc
mov
mov
jo
out
dec
adc
lds
mov
lcall
adc
sbb
sub
xchg
push
jo
cmpsb
mov
xor
out
lret
push
paddb
adc
inc
cs
js
popa
adcl
mov
xor
pop
jmp
push
mov
xchg
jecxz
lcall
fdivrs
xchg
push
mov
test
gs
xchg
repz
test
jg
repnz
mov
dec
xor
pop
lock
push
cmpsl
mov
ljmp
test
pop
mov
in
les
sub
adc
lods
adc
insb
std
jg
jmp
popf
mov
jns
mov
or
add
add
sub
mov
cli
jmp
andb
sahf
adc
shlb
xor
mov
pushl
mov
cmp
dec
xchg
cmp
xchg
loop
mov
lcall
inc
dec
popf
repz
clc
subb
sti
jp
test
ret
lcall
cmpsb
mov
add
imul
push
scas
add
hlt
adc
leave
lcall
inc
mov
outsl
cli
incl
addr16
lock
add
jo
sbb
jns
out
fldl
test
inc
and
int
into
and
inc
push
cmp
jle
lahf
insb
aad
sub
imul
in
decl
incb
xchg
loop
cmp
rcll
xchg
call
xchg
dec
or
testb
fwait
lock
sub
jns
cmc
dec
sub
pop
sub
pop
call
jae
push
test
xchg
scas
in
ret
cmpsl
add
mov
ficoml
jge
push
daa
mov
popa
push
imul
dec
repz
mov
outsl
inc
stc
push
out
cli
adc
inc
xchg
jnp
jno
sub
sub
je
push
jmp
or
shlb
jns
test
jmp
jl
xchg
mov
insb
rolb
xlat
sub
incl
out
pop
dec
jne
ds
and
xchg
xchg
or
in
aas
jmp
call
xchg
fwait
enter
pushf
xchg
sahf
hlt
inc
jb
dec
call
cmp
call
push
cmpsl
lea
and
negb
add
adc
shrb
inc
mov
pop
jge
outsl
mov
in
mov
lret
das
adc
mov
and
mov
sbb
nop
push
sbb
mov
mov
in
push
jne
push
jne
push
sbb
and
ljmp
aad
pop
xor
pop
cmp
cmp
xor
jecxz
aad
add
adc
inc
jnp
cmp
pushf
sahf
cmp
cltd
out
jle
pop
std
cltd
repnz
xor
lock
xor
dec
add
mov
fcomip
sbb
push
xchg
stos
add
in
sub
mov
pushl
popf
imul
mov
adc
stc
dec
mov
push
mov
mul
vminsd
enter
push
jae
mov
je
ljmp
adc
insb
and
cmp
sub
jmp
cld
out
sbb
std
test
pop
mov
iret
inc
adc
out
jge
ds
ljmp
andl
fsin
mov
dec
adc
push
in
stos
std
push
mov
push
or
cmp
lcall
and
xor
cmp
adc
jecxz
adc
jae
mov
fidivrs
cli
or
cli
or
pop
test
add
ljmp
pop
ljmp
push
sub
mov
pop
sub
mov
mov
mov
xlat
xor
das
mov
ret
shr
xchg
loop
mov
int3
rcrb
call
test
inc
xchg
mov
mov
out
sub
fiaddl
repz
inc
aaa
sbb
dec
movsl
jle
xchg
lock
and
push
lods
xchg
in
aad
icebp
inc
call
mov
mov
mov
enter
gs
clc
add
inc
rcl
test
ret
cwtl
fstpl
sbb
add
push
cmp
pop
push
sub
push
incl
int3
mov
push
adc
stc
jg
out
xor
sbb
pop
pop
mov
inc
aas
cld
xchg
cmp
into
clc
sbbb
sub
inc
cwtl
js
lock
outsl
push
xchg
mov
cmc
xor
repz
adcl
lret
movsb
cld
push
xor
cmpsl
add
sub
outsl
xchg
mov
js
scas
insl
or
xorb
push
mov
mov
enter
jne
mov
cwtl
or
inc
mov
rcl
mov
incl
dec
pusha
xchg
leave
pop
mov
stos
cmp
adc
inc
int
cmp
xor
mov
mov
and
int
clc
incl
outsl
repz
cmp
fucomi
and
push
jmp
cmp
jmp
cltd
in
inc
cwtl
bound
inc
das
aas
out
inc
popf
dec
xor
incl
xor
push
hlt
fs
push
test
mov
nop
fwait
test
lods
add
or
dec
nopl
dec
orb
repz
das
das
incl
mov
push
sbb
adc
lds
or
xchg
pushl
mov
nop
or
lret
ret
cmp
push
and
fdivrs
inc
pop
jge
xor
sub
mov
int3
sub
call
xchg
jmp
popf
sahf
ja
cmpl
in
xchg
addr16
sub
push
mov
aas
mov
call
in
push
jmp
push
cmc
int
out
push
stos
push
inc
mov
les
adc
out
mov
push
pop
mov
inc
hlt
inc
xchg
cmpsb
cmpsl
negb
decl
fs
pop
bound
je
fcoml
push
imul
stos
mov
incl
mov
jmp
mov
jae
and
sub
adc
xchg
es
xor
shrb
cli
fmull
adc
inc
jae
xor
lret
insl
mov
cmp
inc
jnp
cmp
test
call
inc
call
lcall
call
jecxz
mov
fs
mov
sbb
jl
andl
call
add
scas
pop
test
in
xchg
stos
add
sbb
push
pusha
mov
movsl
adc
insb
addr16
jg
mov
cmpsl
popf
jl
mov
pop
xlat
jne
ljmp
lcall
mov
jo
pop
pusha
pop
pop
ja
pop
enter
shufps
inc
jg
sbb
test
test
and
cmp
xchg
xor
pushl
mov
mov
sub
loopne
jne
out
xchg
pop
ja
pop
pop
jle
cmp
jecxz
lcall
icebp
inc
push
movsl
sbbb
xor
in
dec
mov
inc
cmc
cmp
cmpsl
insl
xchg
call
jbe
dec
xor
imul
cli
mov
sahf
das
pop
int3
push
bound
jl
gs
mov
xchg
and
in
mov
jp
inc
inc
pop
adc
mov
aam
adc
js
lods
jp
fld
and
push
and
repnz
mov
popa
cli
jg
sub
mov
andb
repnz
pop
jo
ja
lcall
rcr
ret
shl
bound
xor
dec
cli
xchg
in
sar
incl
jns
push
fadd
lcall
pop
dec
adc
pop
xchg
inc
jmp
jg
cmpsb
push
jns
adc
cmp
push
push
xchg
and
idiv
inc
loopne
pop
mov
inc
call
or
pop
aam
mov
inc
dec
cltd
pop
mov
imul
sbb
ret
outsb
or
js
or
call
cld
jmp
mov
out
adc
xchg
cs
shlb
xchg
add
mov
cmp
mov
xor
ret
mov
clc
shrl
insb
ds
std
sub
subb
mov
fmul
lcall
mov
loope
les
addl
inc
dec
stos
add
lods
insb
pop
sti
pop
scas
push
jmp
pop
inc
fs
mov
or
das
pop
imul
addb
cwtl
ljmp
jmp
push
push
jp
outsb
les
fdivrl
push
je
cltd
imul
loopne
icebp
call
clc
jns
cmpsb
mov
and
jge
jecxz
inc
ljmp
les
mov
fbstp
mov
cmc
ljmp
and
movd
xor
jmp
jl
inc
cltd
push
push
add
cli
mov
mov
mul
clc
sahf
cli
dec
xor
lahf
inc
dec
mov
cli
ljmp
add
push
scas
in
jb
add
enter
in
or
jmp
xchg
add
lret
lds
cmp
and
cmp
or
pop
movsb
into
sahf
fwait
xor
das
sbb
jo
out
cmp
xor
push
jae
mov
sub
out
out
sahf
jge
test
mov
adc
adc
pop
sub
cmp
pop
xor
lods
orl
xor
lods
push
ljmp
push
add
mov
mov
push
xchg
fwait
mov
mov
or
movsb
js
xchg
add
push
inc
and
xor
push
stos
scas
popf
jl
push
stos
cmp
bound
xor
nop
sub
pop
xor
adc
aaa
stc
lcall
xchg
or
jae
cmpsl
test
jns
jge
push
and
add
jge
add
jo
xchg
mov
popf
wbinvd
cltd
jl
je
and
and
xchg
push
xchg
pusha
sbb
arpl
sbb
inc
add
dec
xchg
int
es
mov
loopne
adc
add
or
adc
and
imul
and
mov
lcall
sti
add
push
pop
add
sub
xor
mul
sti
add
or
xchg
lret
fldl
sub
je
cmp
or
pop
scas
inc
fs
xor
mov
add
or
push
jmp
pop
inc
add
jecxz
pop
dec
dec
inc
lea
add
rol
jno
add
inc
push
mov
push
pop
push
adc
push
lods
or
cmp
int
push
nop
icebp
mov
jne
xchg
push
cs
sub
sahf
jg
cmp
adc
into
inc
inc
and
push
les
movsl
sub
mov
fadds
mov
je
sub
inc
inc
pop
sbb
mov
mov
and
mov
aaa
and
cmp
sbb
xchg
xlat
mov
jae
cmp
cmp
cmp
add
add
adc
xchg
cmp
inc
mov
push
mov
mov
xchg
mov
sub
sub
pop
cmpsb
lret
rclb
int
mov
inc
add
mov
into
in
jae
add
dec
or
arpl
dec
mov
push
cwtl
stos
sub
mov
sbb
mov
pushl
inc
add
sbb
or
push
gs
sub
push
jmp
adc
ljmp
xor
aam
inc
and
imul
mov
cs
call
or
mov
cwtl
jg
cmp
mov
and
push
mov
mov
and
add
pop
scas
in
or
das
sbb
or
dec
pop
add
daa
mov
das
xchg
jns
gs
scas
outsl
xor
aaa
test
hlt
scas
or
loope
in
push
std
mov
add
je
xchg
jl
lcall
xchg
leave
jae
ret
pop
je
pop
lock
jo
mov
std
mov
test
out
btsl
add
xchg
in
cmpsl
jmpw
push
jae
mov
imul
es
les
cwtl
addl
and
popf
adcb
push
xor
xchg
inc
dec
push
mov
addr16
cmp
std
jle
arpl
addl
pusha
mov
mov
mov
cltd
mov
jge
push
mov
xchg
fists
or
adc
adc
push
sub
xchg
lret
cmp
jbe
rorl
add
push
pop
sub
push
and
je
cmp
mov
sbb
pop
shlb
popa
push
sbb
add
add
mov
or
in
rcrb
xchg
pushf
pop
pop
dec
iret
inc
das
dec
inc
mov
inc
iret
insb
test
mov
xchg
pop
call
cpuid
xchg
ret
push
ljmp
test
add
cmp
ret
shll
push
push
test
aas
scas
or
in
inc
jb
push
add
pop
sbb
mov
nop
adcb
mov
pop
and
jae
idivl
scas
jno
sar
dec
sub
lldt
xchg
add
out
nop
xchg
and
movsl
push
inc
mov
add
pop
int
add
inc
push
mov
inc
xor
int
xchg
out
mov
jl
or
pop
xchg
mov
add
xlat
pop
push
push
pop
add
les
test
out
inc
pop
jecxz
xor
ds
ret
repnz
adc
stc
inc
sbb
dec
clc
sbbl
imul
repz
sub
and
mov
jg
push
pop
les
sti
es
lods
addr16
mov
lock
mov
and
test
out
lret
xor
loopne
imul
and
mov
pop
lahf
inc
mov
mov
and
sbb
or
inc
cmpsl
jecxz
nop
push
cmpsl
repnz
sbb
push
lahf
sti
push
pushf
adc
cmp
mov
mov
cltd
pop
stos
movsb
add
fsts
mov
sbbl
dec
mov
mov
xchg
std
lcall
sti
jb
cs
xchg
inc
cmp
js
push
sahf
imul
add
movsb
add
xchg
lahf
sub
adc
xchg
mov
mov
ret
nop
xchg
push
xor
int
xchg
aaa
mov
mov
aam
mov
pop
dec
xchg
jg
xor
sub
imul
push
and
mov
push
fwait
cmpsb
mov
daa
mov
adcb
push
lods
mov
inc
dec
dec
sbb
mov
das
pop
sbb
pop
test
push
outsb
cmp
inc
push
adc
add
je
lds
std
aad
cwtl
fs
mov
and
cmp
inc
mov
cmpsb
dec
cmpsl
int
inc
inc
jo
adcb
outsb
adc
je
sbb
aas
dec
lret
mov
loopne
ret
cmpsl
mov
fisttps
inc
test
or
or
call
cltd
sub
mov
sbb
inc
popf
add
jmp
cmp
xchg
inc
sbb
inc
pop
jo
or
sarl
outsb
add
sbb
stos
ret
inc
imull
push
jo
insb
loop
mov
mov
and
sub
cmp
xchg
rol
jbe
pop
adc
jo
cmpsb
aas
insb
or
mov
xor
loope
and
mov
xchg
xor
or
outsl
repz
add
lahf
push
push
scas
push
xor
movsl
bound
xorb
or
pop
or
push
mov
shll
mov
push
xor
xor
cwtl
nop
iret
push
inc
je
add
adc
dec
fwait
push
dec
mov
pop
add
push
and
xchg
sahf
leave
test
xchg
leave
xor
push
pop
jmp
pop
in
and
sub
je
or
xchg
sub
push
test
add
fistps
inc
repnz
in
xchg
sti
jmp
mov
bound
inc
or
push
int
xchg
loopne
cmp
iret
es
xchg
mov
push
mov
cmp
or
fwait
adc
mov
shrl
add
call
mov
xor
sub
repnz
sub
cwtl
or
and
loope
arpl
xchg
xchg
pop
and
mov
xor
shll
add
xor
cmpl
lret
xor
add
pop
lock
mov
sbb
push
andl
ret
jno
dec
popf
mov
mov
pop
enter
scas
dec
rolb
sbb
sbb
and
jb,pt
sbb
sbb
xor
mov
jne
pusha
xchg
insl
nop
inc
mov
mov
mov
dec
popf
and
test
xchg
jae
push
push
inc
push
test
xchg
or
lcall
jecxz
in
inc
sub
jne
xchg
lret
dec
mov
pop
add
mov
enter
nop
aaa
pop
mov
sbb
mov
cmp
sub
push
pop
pop
push
enter
loop
add
dec
and
cmc
xchg
mov
mov
pushf
aas
aaa
sbb
pushl
cmp
push
inc
imul
xorl
xlat
test
push
inc
adc
xchg
stos
cmpsb
icebp
out
movsl
or
jb
rcrb
inc
push
aam
in
xor
sub
shll
add
pop
inc
mov
push
cmpsb
xchg
and
sbbl
fadd
adc
outsl
jno
and
jg
jne
inc
pop
mov
ds
lret
adc
subl
es
flds
bound
in
and
mov
pop
pusha
mov
nop
sub
pop
inc
cs
movsl
inc
inc
sbb
inc
rclb
or
xor
mov
mov
jae
nop
cmp
pop
cmpb
icebp
stos
mov
sbb
mov
adc
xchg
dec
shll
and
mov
xor
sub
cmpl
movsl
sbb
ret
or
call
popf
or
push
loope
lea
pop
mov
loop
sub
sbb
adc
cmp
pushf
jmp
inc
popf
shl
insb
sbb
add
adc
sbb
aam
mov
push
cmp
pop
cs
in
add
js
add
or
imul
or
inc
inc
xor
popa
pop
addb
cltd
mov
stc
pusha
jg
mov
movl
std
xlat
mov
ss
roll
adc
and
mov
popf
sbbb
frstor
add
outsb
add
mov
nop
mov
pop
pop
rorl
roll
pushf
xor
mov
cwtl
lods
in
rorl
jp
push
add
loop
and
out
adc
rcrb
pop
repz
jo
fisttps
mov
pop
or
scas
stc
ret
jne
adc
dec
adc
test
std
sarl
xchg
out
int3
adc
iret
xchg
sbb
lock
push
sub
gs
cmc
inc
repnz
shrb
mov
cmpl
pushf
cmp
in
dec
pop
cmovs
cwtl
inc
mov
xor
inc
sbb
nop
and
and
shll
or
or
and
jg
push
psllw
out
xor
sbb
add
xchg
inc
mov
cmp
iret
mov
sbb
sti
xchg
rcrb
call
dec
pushf
mov
movsb
xor
adcb
xchg
push
aad
jbe
xor
std
loopne
flds
cs
mov
sub
inc
repnz
dec
jnp
mov
addb
out
fs
addl
pushf
add
test
das
sbb
dec
inc
xor
sub
jno
adc
shlb
fs
imul
xor
sbb
mov
push
movsl
bound
and
andb
test
xchg
sub
sbb
fistps
addl
dec
cli
add
pop
mov
inc
pop
arpl
scas
pop
test
out
xor
and
cltd
in
in
adc
ret
rolb
imul
test
xor
adc
out
mov
inc
inc
push
push
xchg
mov
jnp
cmp
sub
inc
xchg
jg
inc
xchg
pop
mov
dec
pusha
and
xor
cmp
leave
dec
dec
xchg
cmc
sbb
subl
movsl
xchg
mov
test
inc
push
lahf
xor
add
and
dec
mov
ficoms
movsb
mov
sub
xor
andb
push
and
inc
std
add
or
xchg
push
outsb
sbb
push
ret
mov
mov
sub
lcall
xor
loop
mov
and
movb
and
add
and
fstps
roll
mov
pop
fbld
push
xor
add
in
and
sbbb
jp
mov
add
dec
lcall
adc
jmp
xchg
cmp
adc
int
xchg
pop
jp
scas
es
dec
sub
es
inc
dec
inc
imul
enter
movb
imul
inc
adc
push
jae
adc
insl
lods
lock
jne
adc
cmpsl
or
arpl
xchg
sbb
rcr
or
xchg
sub
popf
aaa
cmpsb
add
or
loope
pop
into
or
cmp
aam
add
xorl
xor
cmp
mov
add
andb
push
rcrb
sbb
push
xor
jg
int3
mov
jl
or
sbb
and
add
out
push
dec
push
sub
xor
pop
pop
inc
imul
mov
push
mov
push
xchg
addl
xor
repnz
insb
xor
lods
andb
push
inc
xor
mov
les
xchg
mov
icebp
mov
mov
in
lahf
or
shlb
aaa
insl
aaa
or
in
les
xor
or
mov
adc
xor
sub
adc
sahf
xor
loopne
xchg
sbb
enter
je
leave
inc
jmp
sbb
inc
xchg
in
inc
pop
inc
repz
jo
jb
push
mov
dec
push
enter
rorl
pop
test
rolb
xchg
jne
or
shlb
sub
and
movsb
xor
rolb
pop
bound
in
cmpsb
push
mov
test
inc
adc
xor
jmp
or
add
test
sub
orl
mov
stos
cmc
sbb
or
call
mov
inc
cmp
add
inc
lea
repnz
push
or
test
and
add
enter
ja
aam
push
sbb
mov
loopne
cltd
xlat
mov
jne
insl
pop
jne
dec
test
subb
leave
orl
inc
ds
push
cmp
test
pop
iret
scas
into
movsb
adc
dec
notl
les
pop
das
inc
loopne
pushf
popf
scas
add
inc
or
adc
add
les
jle
sub
sbb
mov
and
pusha
addr16
dec
add
outsb
pusha
out
push
lcall
push
sub
add
imul
xchg
push
stc
mov
cwtl
call
mov
or
inc
std
inc
mov
movsb
insl
inc
and
mov
sub
dec
stc
xchg
in
add
rcl
inc
sbb
aas
push
sbb
andb
xchg
arpl
movsl
inc
add
rcrb
loopne
lahf
fsubl
jo
sbb
inc
add
pop
insl
xchg
mov
adc
fwait
push
inc
sub
lret
mov
inc
jb
jle
aad
pop
jle
shr
xchg
xchg
nop
je
jne
lea
xchg
dec
inc
sbb
fimuls
jns
lret
pop
sbb
mov
sbb
daa
jno
add
movsb
pop
sahf
add
mov
and
fsubrp
mov
jge
je
mov
adc
jle
or
mov
inc
xchg
mov
stos
pusha
imulb
cmp
push
nop
movsl
sbb
dec
dec
sbb
and
mov
arpl
xchg
je
leave
ret
loop
add
add
cltd
shr
mov
jne
add
movsl
test
or
xor
ret
xor
xor
and
dec
jmp
push
loopne
shll
pop
cmpsl
repnz
popa
pop
xchg
rorl
in
out
push
sub
gs
lea
push
into
xlat
jbe
add
popf
add
decb
add
xor
out
rcrl
aas
bound
sub
and
adc
roll
testl
rorl
or
mov
jb
xor
mov
xchg
shrl
data16
or
repnz
adc
mov
pop
mov
cltd
out
ss
push
mov
or
lods
fmuls
repnz
or
mov
mov
cs
mov
xor
das
stos
popf
stc
fcmovnb
shll
and
imul
mov
adcl
and
mov
dec
push
movsb
cmp
lds
mov
int
and
adcl
push
mov
sbb
jecxz
inc
inc
xor
rorl
adc
dec
mov
push
test
sti
xchg
movb
fistpl
cs
add
mov
fucomip
rcll
test
push
adc
lds
in
push
pop
iret
xchg
or
sub
enter
insb
mov
add
test
sbb
test
mov
nop
lahf
pop
push
gs
dec
mov
shrl
lcall
inc
cmp
pop
cmp
sub
xor
add
lock
popa
loop
adc
out
and
int
mov
mov
rclb
sbb
loopne
in
add
add
add
pop
dec
mov
jo
pusha
filds
and
jg
jg
xchg
pop
jno
cmp
mov
pop
sbb
xchg
or
cmp
sbb
in
sbb
mov
jno
rcl
inc
pop
sub
push
punpckldq
push
bound
inc
xchg
cmp
out
jbe
vmwrite
or
fistpl
and
or
or
sub
stos
adc
push
jmp
out
addr16
enter
iret
mov
xor
push
mov
mov
adc
add
xchg
add
pusha
xchg
mov
add
addl
inc
in
xor
fsubr
sbb
insl
bound
pop
popf
sbb
movsb
nop
xchg
jmp
mov
daa
xchg
add
sti
lret
bound
xchg
or
inc
loop
pop
xchg
cmp
enter
movsl
cmpsb
ja
lods
adc
test
sub
dec
inc
sbb
stos
jne
cmp
push
mov
dec
jne
sbb
adc
rcll
adc
mov
addr16
divl
xchg
cmp
mov
dec
aas
aas
push
sahf
push
pop
add
dec
jl
or
gs
adc
lcall
push
rorl
sbb
fldcw
les
lods
add
les
out
mov
push
adc
inc
or
pop
push
inc
enter
dec
shlb
inc
add
mov
or
pop
inc
test
mov
andl
xchg
mov
sub
orb
movsb
orl
xor
add
mov
mov
fdivl
inc
adc
adc
jge
aam
cmp
push
jmp
sub
mov
divb
fst
mov
sub
and
add
dec
notl
jmp
std
add
out
test
push
in
daa
dec
test
sbb
push
adc
jno
push
pop
or
xor
dec
mov
and
inc
jge
jae
sub
mov
add
test
scas
xchg
fbstp
mov
gs
das
dec
mov
sub
lahf
loopne
pop
in
or
push
inc
add
adc
rorb
sbb
flds
les
std
cmp
fwait
clc
pop
dec
sub
fldenv
rclb
jno
add
push
and
ret
out
sub
push
daa
mov
sbb
xchg
dec
xchg
push
fs
mov
cmp
xchg
fidivrl
jle
push
lahf
add
add
test
loopne
mov
push
mov
movsb
xorl
dec
or
aaa
aad
pusha
xor
stos
mov
xorl
lock
cmp
jmp
fwait
pop
push
pop
xor
in
cmpsl
lock
pop
rorl
xor
gs
add
adc
mov
pop
dec
es
test
mov
cmp
lods
sbb
and
cmp
xor
cs
mov
sbb
aad
pusha
or
jns
pop
pop
test
andl
imul
sbb
out
test
dec
cmp
inc
mov
xor
in
adc
or
rol
and
xor
xchg
push
mov
push
loopne
repnz
dec
xchg
sbb
mov
cmp
or
jno
dec
xchg
lods
mov
test
xchg
adc
test
mov
inc
lcall
shll
mov
jl
lea
push
movsb
xor
pusha
add
filds
xor
ror
gs
das
nop
push
sub
ret
cmp
jo
lret
mov
mov
int3
das
pop
jb
cwtl
jbe
arpl
cmpsb
jne
inc
stos
push
cs
push
fiadds
fwait
stos
push
xchg
sub
and
mov
pop
movsl
out
lods
add
adc
inc
xor
mov
mov
enter
mov
adc
cmp
fisttps
push
adc
jns
lods
pop
or
fstp
cmp
je
daa
mov
xchg
sbb
ljmp
lahf
inc
sub
insl
into
inc
lds
sub
int
dec
and
and
into
sbb
push
push
sbb
push
mull
push
xor
add
jns
sbb
add
adc
pop
lock
jne
sbb
mov
adc
push
fistpll
mov
jl
addl
mov
jne
xor
dec
push
jmp
jae
pop
adc
movsl
adcb
stos
nop
shrb
pop
sbb
sbb
in
push
stc
daa
insl
test
or
add
dec
sub
push
and
dec
or
cmpsb
orl
popf
pusha
xor
lahf
push
and
popa
sarl
adc
jmp
cld
pop
aaa
loop
adc
scas
pushf
xchg
sub
cmp
dec
gs
daa
mov
mov
adc
loopne
or
sbb
ffreep
shrl
or
inc
cmp
push
das
nop
je
stc
idivl
cmp
push
inc
fldenv
lea
repz
sahf
add
nop
scas
push
enter
and
cmp
pop
cmp
dec
adc
jb
dec
jmp
sub
adc
dec
jbe
push
fmul
scas
arpl
pop
fnstcw
push
test
xchg
fstps
and
mov
call
or
and
scas
xchg
jne
jg
test
pop
pop
xorb
das
movsl
and
add
addr16
idivl
sub
les
jge
repnz
and
add
aaa
shl
inc
mov
adc
dec
and
test
or
add
add
add
idivl
nop
push
adc
and
dec
leave
jge
stos
inc
jo
ret
in
scas
xor
fwait
pop
pop
and
rcrb
daa
ret
dec
fildll
sbb
xor
pop
rclb
push
ja
es
add
cmp
aaa
xor
and
adc
std
jg
rcll
inc
adc
lcall
add
les
and
in
xor
push
mov
imul
mov
bsr
js
shrb
sti
inc
cmp
push
call
and
rclb
xchg
pop
in
imul
jmp
xchg
aad
jo
push
subl
jne
gs
push
add
js
dec
jp
testl
xchg
pop
add
xor
dec
push
subl
shl
push
loop
jecxz
pop
outsb
cmp
loopne
shlb
mov
negl
mov
add
imul
add
sub
repnz
loop
jbe
push
mov
and
lea
push
mov
shll
jns
movsb
inc
jecxz
cmp
std
pop
dec
jecxz
dec
or
mov
std
cs
mov
lcall
and
or
xchg
pop
dec
pop
mov
leave
add
lock
stos
cld
mov
and
sbb
push
lahf
mov
add
and
cwtl
sub
xchg
push
stc
push
mov
push
or
inc
xor
sti
sbb
mov
dec
ret
push
addb
leave
xchg
mov
in
dec
filds
stc
sub
jmp
mov
push
gs
cmp
adc
sti
cmp
test
shll
adc
int3
inc
sbbb
mov
xchg
fnsave
dec
mov
dec
pop
subb
lea
dec
mov
pop
aad
or
data16
cmp
adc
inc
mov
in
mov
xchg
or
mov
cwtl
push
jns
icebp
mov
out
or
pushf
pop
xor
loopne
jno
adc
pop
mov
inc
add
bound
scas
pop
int
jo
jns
push
pop
adc
aad
or
inc
xchg
es
sub
adc
jecxz
inc
mov
or
pop
mov
inc
decl
or
nop
mov
push
shl
movsb
aad
sub
sarl
xor
add
mov
fs
mov
rcl
cmp
mov
cmp
movsl
loopne
mov
int
xchg
push
cmp
xor
pop
sub
adc
mov
fs
and
bound
aas
sub
xlat
push
dec
daa
lods
xchg
xchg
xchg
sub
addb
sbb
inc
add
aad
mov
nop
sub
adc
lds
rolb
or
fbld
mov
xchg
mov
dec
int
mov
inc
popa
sub
mov
imul
dec
ds
das
iret
clc
pop
repnz
dec
lahf
lock
inc
or
in
xchg
nop
push
jmp
dec
pop
push
ret
stos
setno
out
mov
mov
enter
mov
sub
arpl
daa
push
mov
mov
add
fsts
outsb
lea
xchg
cs
xor
les
sysret
mov
add
fwait
sbb
push
push
and
in
mov
cltd
pushf
push
push
pop
pop
imul
dec
cmpsb
mov
mov
bound
in
xchg
les
push
or
and
xor
movl
or
xor
mov
iret
inc
inc
fisttps
insb
pusha
stc
push
mov
sbb
stos
mov
les
sub
loop
add
cmp
loop
mov
popa
fcmovbe
sub
sub
popa
movsl
add
sub
dec
movups
xor
mov
xor
adc
int
adc
aas
sub
sub
pop
icebp
jne
jmp
inc
push
test
cmp
out
or
jae
xor
pop
cmp
mov
aas
or
in
ja
pop
push
stos
push
dec
jne
cmp
jno
ret
xor
popa
add
rolb
cmp
push
mov
inc
inc
es
xchg
rolb
lods
add
cmp
xchg
push
mov
xor
xor
adc
push
nop
cmpsb
adc
testb
xchg
and
inc
xor
and
fisttpl
shrb
scas
inc
inc
or
mov
add
bound
aam
cmpb
rorb
xchg
lret
or
out
sbb
jne
xchg
addr16
out
movsl
data16
adc
sub
mov
sahf
xchg
pop
mov
mov
jno
fcoms
lods
xchg
mov
sahf
inc
xchg
cmp
cmp
loope
insb
sbb
fiaddl
sub
popf
scas
xchg
xchg
loopne
addl
scas
add
cmpsl
dec
and
imul
sbb
addr16
and
shll
sbb
stos
dec
rolb
insb
mov
cli
sbb
xchg
test
xchg
and
and
gs
fs
lds
or
add
xchg
enter
push
xlat
xchg
mov
jno
or
adcb
lret
xor
dec
sbb
pop
pusha
in
or
adc
pop
sbb
xor
sbb
adc
jno
adcb
jmp
xor
stos
test
xchg
mov
cvtdq2ps
and
sub
aad
dec
lcall
mov
xchg
in
xchg
pop
inc
jno
or
sbb
repz
and
pusha
into
push
inc
adcl
lret
inc
daa
test
loopne
lahf
push
xor
ret
andl
call
call
movsb
nop
mov
in
and
leave
sbb
pusha
inc
adc
add
xlat
xor
jecxz
mov
addr16
test
push
pop
fcomps
or
cmp
out
mov
sbb
adc
insl
mov
inc
jl
cmp
jbe
adc
mov
shr
push
xchg
call
mov
push
and
push
adc
jns
jmp
gs
mov
and
cmp
movsl
sub
push
jne
xchg
movsb
test
push
push
or
dec
cmovbe
ret
sub
idivl
jae
sbb
addr16
pop
stos
lds
mov
decb
ficomps
or
es
ljmp
stc
pop
jns
enter
add
mov
mov
loopne
ret
cmp
add
adc
inc
jecxz
sbb
inc
mov
mov
add
push
xchg
xchg
xchg
movsb
mov
hlt
xchg
sbb
into
nop
cmpsb
xor
xchg
sub
mov
jnp
mov
mov
sub
ror
xor
or
test
loop
paddsw
sub
cmp
adc
das
dec
and
add
stos
ljmp
add
ret
popf
movsb
ja
mov
cmc
push
mov
imul
adc
in
stos
dec
pop
dec
sbb
pop
sub
xor
sub
xchg
mov
test
inc
in
sub
mov
daa
lahf
xchg
pop
out
push
enter
xchg
lea
scas
or
dec
push
popf
push
cmp
bound
xlat
jbe
mov
jno
mov
ret
adc
push
andl
push
pop
xor
fdiv
pop
cmp
dec
sub
and
push
pop
mov
or
sub
cmp
jno
daa
xor
xor
sbb
sub
enter
mov
sti
sub
in
mov
stc
lods
mov
inc
pop
leave
in
adcl
mov
fmull
movsb
jmp
aam
sbb
stos
cmp
iret
dec
sub
lea
push
or
xchg
or
lds
cs
add
pop
shl
adc
repnz
pop
and
mov
inc
insl
jecxz
push
mov
stc
sub
push
dec
daa
cmc
xchg
pop
sbb
sarl
movsl
mov
push
lods
movsb
push
dec
fnstsw
imul
or
cmp
cwtl
cs
inc
in
add
sbb
push
mov
sbb
xlat
jmp
push
and
fstl
xor
jno
dec
add
inc
addr16
jne
les
test
add
adc
out
ret
xchg
inc
and
xchg
push
in
inc
mov
and
add
xor
testb
leave
movsl
mov
cmp
in
jg
xor
jbe
or
push
xchg
js
pop
inc
test
jbe
js
in
push
insl
inc
jecxz
mov
imul
dec
push
insl
rorl
fiaddl
pop
xlat
cmpsb
push
dec
xlat
roll
xchg
cs
orb
adc
fs
and
sbbl
loopne
dec
pop
dec
sahf
scas
hlt
rol
pusha
add
jb
sub
scas
aas
or
sub
and
adc
inc
pop
icebp
cli
pop
ret
cmp
loope
xchg
leave
fdivl
pop
mov
and
add
push
lea
sahf
je
insl
or
gs
loopne
xchg
jmp
or
sti
xchg
mov
xchg
cmpl
xor
icebp
jae
aaa
dec
shll
add
mov
ret
add
dec
pop
jno
jge
dec
sbb
or
pop
fistl
and
inc
jb
jne
add
jne
jge
mov
aam
adc
add
mov
and
movsb
mov
lcall
and
mov
add
ljmp
pop
inc
mov
mov
leave
pop
fildll
mov
pop
jmp
sar
leave
in
ljmp
push
xchg
sbbb
mov
pop
sub
xchg
xchg
int
mov
shrl
mov
out
imul
dec
xchg
xor
jecxz
cmpsb
xchg
mov
pop
fs
jg
fnstenv
xor
xlat
shlb
or
inc
ret
lahf
or
mov
push
add
das
int
das
or
inc
cmp
and
lock
jmp
pop
adc
movsl
loopne
and
fstl
inc
xchg
dec
adc
xchg
aas
test
dec
adc
inc
jp
test
xchg
loop
lock
and
mov
jnp
std
ret
cld
cmc
mov
mov
pop
add
andl
sbb
test
add
fimull
sub
sub
or
mov
sub
rclb
xchg
push
sbbb
clc
pop
jmp
and
add
pusha
adc
sbbl
inc
jge
mov
data16
mov
inc
and
or
cmp
xlat
xchg
test
push
cmp
xor
loope
jo
or
inc
sahf
push
sbb
subb
jmp
mov
pop
je
pushl
movsl
xor
popf
or
lds
stos
cmp
adcb
in
mov
xor
push
push
xlat
mov
orb
pop
sysenter
es
sbb
addr16
movb
sub
xchg
pusha
shrb
sub
pop
ret
pop
add
shr
inc
xchg
loopne
xor
inc
or
add
and
out
inc
mov
rolb
jge
mov
daa
int
sbb
rcl
je
push
insb
repz
pop
repz
test
mov
add
clc
pop
mov
xchg
ret
and
cltd
sarl
dec
adcb
push
pop
adc
imul
pop
adc
jg
arpl
stos
adc
mov
pusha
jge
leave
std
pushf
xlat
adc
inc
adc
imul
push
sbb
cmp
jne
push
mov
push
inc
push
cmpsb
test
xor
ret
in
push
imul
jae
cwtl
add
es
shlb
clc
mov
jge
and
pop
push
outsl
jge
test
in
nop
add
adcb
enter
adc
push
add
loope
dec
inc
sub
mov
fdivrs
push
add
rolb
popl
js
pop
add
lret
xor
xor
stos
jnp
pop
push
pop
lret
jle
pop
mov
cld
dec
inc
pop
das
loope
shll
sub
add
mov
jno
jmp
loop
stc
dec
push
imul
js
movsb
and
add
cs
stos
cmp
sub
ret
inc
test
xchg
fists
mov
mov
adc
ret
es
xchg
mov
push
xor
add
mov
mov
lock
add
and
aas
mov
not
jmp
in
mov
add
inc
xchg
dec
movsl
mov
sub
adc
mov
or
outsb
in
dec
add
push
pop
rolb
or
orl
icebp
mov
dec
insl
xor
mov
push
mov
bound
out
enter
sbbl
push
iret
popa
gs
mov
push
dec
or
sbb
les
cmp
push
pusha
pusha
out
xchg
loopne
cmpb
mov
pop
int
jg
push
add
stc
xchg
push
pushf
xor
adc
dec
add
rorl
jae
mov
mov
and
mov
inc
ja
jns
je
pop
mov
inc
dec
mov
and
jmp
and
jle
jmp
sar
or
mov
cmovno
adc
int
rclb
fnsave
jmp
imul
push
and
pop
lret
gs
dec
dec
sbb
add
jg
stc
mov
add
xchg
mov
out
insl
test
push
push
in
loope
jg
sub
lcall
pop
testl
jae
and
shll
cmp
test
std
mov
xacquire
jne
xor
mov
push
pop
mov
inc
xor
add
dec
lods
xchg
out
and
inc
adcl
int
mov
jb
or
jns
imul
test
imul
mov
idivb
dec
les
and
inc
sbb
or
jno
aad
cmc
ffreep
add
adc
pop
inc
imul
sbb
or
mov
add
ljmp
or
sbb
sbb
lahf
rol
sbb
jb
sub
loopne
ret
pop
fistl
inc
dec
push
and
cmp
data16
inc
xor
adc
xlat
adc
shll
sti
xchg
inc
xchg
mov
gs
mov
push
loop
fildll
and
arpl
jmp
sbb
sub
int
test
dec
inc
dec
cmc
jno
pop
xchg
aaa
jnp,pn
lds
sub
aas
xor
popf
adc
sub
fcmovnb
je
icebp
fdivrl
add
in
or
ja
movsl
imul
add
nop
xchg
mov
sbb
mov
add
push
xlat
jg
test
mov
pop
enter
add
push
xchg
rol
movsl
add
enter
iret
inc
clc
pop
mov
scas
sub
andl
and
mov
cmp
and
inc
in
mov
or
sysret
and
add
mov
das
cmp
add
push
sbb
dec
add
pop
push
pop
xchg
xchg
adc
and
add
add
lods
rorl
imul
loope
sbb
repnz
or
mov
shll
loope
adc
pop
push
adcl
cmp
dec
pop
mov
shr
and
and
adcb
sbb
xchg
bound
aas
mov
pop
xchg
outsl
js
test
movsl
fs
mov
lods
dec
jmp
dec
dec
cmp
shlb
or
movsl
push
int3
xorl
fldcw
iret
xchg
add
xor
ja
xchg
push
push
xor
mov
adc
inc
dec
jne
mov
repz
pushf
mov
pop
push
sarb
cli
cmpsb
jp
into
rcl
cmpb
cltd
and
movsl
rorl
xchg
pop
and
inc
mov
mov
iret
xor
jns
cmp
in
or
adc
add
movsb
jmp
mov
and
mov
sbbl
sti
loope
mov
mov
xor
div
je
dec
movsl
add
sbb
push
popf
je
sbb
push
adc
lret
fsubrl
cld
push
mov
dec
add
je
pop
cs
and
or
rol
mov
mov
aad
sbb
xor
shll
dec
rorb
jns
mov
push
adc
stos
test
cmp
imul
adcb
iret
leave
les
xor
out
nop
and
js
enter
mov
pop
adc
jmp
lret
gs
fcomps
add
dec
pop
leave
xchg
jecxz
into
adc
imul
ret
inc
data16
mov
test
nop
insb
inc
sbb
dec
call
mov
roll
pop
or
test
pop
rolb
inc
stc
sbb
pop
std
icebp
cmp
pop
mov
add
adc
add
dec
push
insl
dec
jmp
jl
les
mov
add
jae
and
jmp
mov
dec
xor
test
iret
xchg
pop
mov
dec
fsts
mov
mov
notb
dec
lea
movsl
sub
test
shr
frstor
inc
add
es
lcall
test
or
jbe
jne
add
adc
loope
mov
imul
pop
jg
jns
push
lea
sub
or
cmpsb
sbb
or
sub
ret
les
mov
pop
push
repz
jns
rcrb
imul
jg
cmp
push
rcll
sub
cmp
jno
shll
insb
xchg
pop
jns
add
push
or
inc
add
or
dec
and
mov
push
add
inc
and
pop
adc
shl
lret
repnz
cmp
lret
push
dec
sbb
xchg
cmpsb
push
mov
in
mov
sbb
test
stos
repnz
push
je
cltd
div
xor
pop
dec
xor
inc
pop
add
shl
xlat
cmp
bound
pop
mov
imul
adcl
lock
loope
xchg
jmp
pop
fiaddl
xchg
or
pop
or
test
lds
cmpsl
and
or
fwait
add
inc
shlb
xchg
jo
mov
ret
je
pop
sti
dec
or
loop
inc
adc
dec
js
push
or
leave
xchg
and
sbb
ljmp
mov
and
inc
fwait
adc
add
jne
pusha
rorl
and
add
jbe
push
or
les
add
sti
iret
arpl
fisubl
xor
ja
xchg
push
stos
dec
fadd
into
add
aaa
xor
mov
repz
out
xor
pop
pop
pop
xchg
sub
in
add
and
xchg
ret
fsubs
cld
add
sbb
sbb
dec
fists
jns
pop
mov
ljmp
aaa
call
mov
dec
mov
xchg
cmc
clc
or
imul
cmpsl
call
dec
jns
add
mov
rcl
add
dec
xchg
outsl
add
rcrl
lods
jecxz
movsl
lret
mov
imul
test
add
or
mov
mov
sub
add
jb
aaa
out
mov
mov
jbe
jbe
mov
inc
dec
jmp
push
daa
or
popf
out
addl
mov
popf
jmp
rolb
and
cmpsb
add
xlat
dec
adc
mov
adcb
inc
lods
mov
pop
rorb
pusha
jne
xor
add
std
xor
ret
test
in
dec
hlt
adc
cmpsb
cmp
in
sbb
ret
jge
push
adc
ja
fstpl
aaa
lahf
mov
mov
dec
sbb
jl
aas
sbb
xchg
or
inc
pop
mov
add
inc
push
dec
cmp
pop
jle
dec
dec
sbb
cwtl
cld
mov
scas
rcrb
rcll
pop
or
into
jno
or
jg
pop
add
nop
je
mull
adc
add
popf
xchg
popf
xor
ret
sbb
sbb
cmpsl
add
adc
sbb
les
inc
fstl
in
push
cwtl
and
jns
adcb
or
push
ret
int3
scas
loopne
mov
enter
sub
aaa
in
popa
sbbb
stos
or
and
and
adcb
fistpll
cwtl
or
lea
pop
xchg
scas
dec
adc
pop
pop
mov
arpl
add
dec
cmc
leave
and
inc
inc
in
adc
loopne
xchg
or
cmp
pop
inc
orb
fldenv
leave
mov
jl
call
mov
mov
mov
mov
les
aam
adc
jle
jae
and
sub
addb
mov
inc
sbb
jne
loope
inc
pusha
addb
or
mov
int
mov
adc
push
xchg
addb
lods
das
test
xorl
data16
mov
push
xor
lock
test
mov
loope
mov
inc
fs
loopne
andb
shlb
add
jno
outsl
mov
andl
sbb
push
cltd
cmp
cwtl
movsl
fwait
leave
insb
fs
enter
or
inc
inc
mov
cwtl
dec
sub
adc
int3
add
lcall
adc
xchg
lea
dec
repz
stc
or
adc
sub
add
or
pop
push
scas
scas
scas
pop
dec
imul
orb
sarl
mov
arpl
test
adc
jne
mov
lret
xchg
movsl
cli
mov
push
leave
jne
xchg
sbb
je
in
cs
add
sub
movsb
rcll
and
or
add
jno
or
pusha
inc
rclb
mov
pop
out
adc
sbb
in
stos
ret
xchg
iret
dec
xchg
dec
push
cs
mov
mov
rol
sub
inc
push
pop
adc
adc
je
inc
fildll
push
push
pop
scas
icebp
roll
jno
fsubs
lea
dec
test
sub
imul
jmp
lock
lods
stc
jle
inc
mov
enter
xchg
out
inc
rcrb
mov
jo
das
jo
loope
jg
push
and
xor
lcall
scas
xchg
test
mov
jmp
repz
data16
addb
adc
test
pop
xlat
mov
cld
iret
ss
sub
test
fsubs
orl
enter
sbb
cmp
mov
adc
mov
jno
mov
xchg
sub
and
dec
mov
cltd
add
push
gs
pop
inc
mov
sub
lods
imul
sbb
lea
inc
int3
out
push
jbe
or
adc
xchg
xchg
add
scas
sub
sti
stos
and
mov
scas
scas
add
adc
push
xchg
ret
sahf
dec
adc
inc
aaa
mov
icebp
jns
adc
and
xchg
xchg
imul
push
imul
xchg
ret
mov
and
add
rolb
jo
or
pop
out
xchg
int3
mov
loop
xor
inc
push
jno
outsb
bound
mov
sbbb
xacquire
test
mov
in
xchg
or
add
jns
in
aas
aas
test
and
dec
dec
and
test
lods
push
outsl
cmp
adc
sub
add
stos
lock
test
push
inc
mov
jo
movsl
bound
add
add
shll
add
adc
pop
mov
adc
pop
es
mov
pop
outsl
mov
mov
mov
dec
or
jecxz
push
pusha
pop
adc
pop
icebp
mov
add
inc
loope
pushf
imul
xchg
xchg
cmp
and
cmpsl
cmp
stc
add
inc
jecxz
mov
stc
ljmp
jnp
add
or
push
mov
sbb
mov
mul
add
xchg
ret
inc
jns
adc
or
jmp
dec
cmp
or
sbb
dec
push
rolb
add
adc
xchg
push
push
pop
mov
cmp
out
and
cmp
add
inc
pop
jno
xor
orb
int3
and
push
and
xor
push
inc
sbb
outsl
cwtl
ljmp
push
xchg
xor
cmpsb
pop
sarb
mov
add
dec
lahf
xorb
enter
inc
movb
xor
iret
lds
stc
pop
or
imulb
arpl
test
sub
dec
roll
bndstx
popl
in
sarb
push
mov
xor
sub
lods
out
pop
nop
ffreep
and
lea
data16
add
adc
sub
je
xchg
add
lea
mov
mov
imul
mov
aam
xor
sbb
cs
and
into
cmp
or
add
cwtl
iret
mov
lret
adc
jecxz
lds
xlat
push
in
add
in
push
pinsrw
rolb
rolb
scas
dec
mov
nop
add
jnp
dec
mov
jg
mov
mov
dec
leave
xchg
lods
pushf
sbb
pop
dec
sub
mov
ret
jmp
jge
and
stos
sti
jge
pop
in
xchg
sbb
push
lock
dec
popf
rclb
xchg
movsl
push
adc
test
and
rcl
xor
xchg
push
ja
xor
fstpt
sub
mov
loope
push
cmp
movsb
mov
or
lcall
push
xchg
fistps
sahf
lret
add
push
sbb
lock
call
rorl
aaa
lods
jne
fidivrl
pop
stos
mov
jmp
pop
adc
mov
test
mov
inc
mov
shrl
jmp
leave
adc
sub
cmc
jno
clc
sbb
xchg
subl
shll
sbb
dec
test
test
cvtps2pi
push
movsl
inc
push
in
or
and
mov
xchg
or
addl
in
imul
sub
sub
scas
leave
cmp
sub
shlb
cmp
xchg
loope
xchg
inc
xor
stc
or
sub
xor
xchg
xor
push
and
mov
mov
cmp
mov
and
sbbb
push
sub
xor
mov
xchg
mov
fstps
mov
push
cmc
jbe
inc
mov
mov
mov
arpl
add
arpl
xorl
es
jl
add
dec
jae
scas
jmp
lahf
lcall
or
insl
insl
sub
in
adc
and
in
add
xor
sbb
ds
inc
movsl
pop
mov
fbstp
xchg
iret
ficoml
pop
shll
mov
mov
sub
test
jnp
push
sbb
jo
xchg
sub
sub
mov
sub
jbe
cmp
push
test
popa
mov
in
movsb
fstps
shlb
inc
mov
lcall
mov
arpl
jns
pop
inc
fsubs
pop
jl
imul
mov
push
fldl
pop
fsubrl
cmc
inc
or
test
inc
jmp
cs
pop
shll
mov
mov
in
adc
sbb
sbb
xor
mov
lar
in
shlb
rolb
inc
movsb
sbb
mov
shr
pop
jmp
dec
and
cmp
inc
out
xor
xor
or
movsl
sub
leave
add
sub
ljmp
retw
repz
in
xchg
add
mov
push
test
push
in
int3
sub
pop
pop
mov
xor
imull
cmp
mov
mov
loope
cmp
cmp
negl
xor
sbb
dec
mov
lds
daa
jae
icebp
mov
sbb
sbb
leave
pop
push
adc
push
add
das
mov
mov
inc
cmpsl
jno
scas
sbb
xor
sbb
sub
ljmp
inc
lods
mov
shll
nop
lret
in
out
jne
xchg
mov
mov
mov
cmpl
xchg
mulb
mov
or
mov
xor
push
outsb
add
mov
sbb
in
add
adc
xchg
loopne
andb
xchg
in
das
bound
lods
fstpt
rcll
testl
aam
mov
addb
sbb
movsb
inc
test
mov
inc
mov
sbb
jno
imul
mov
mov
loopne
mov
adc
xor
rolb
andb
pop
adc
inc
xchg
sub
iret
mov
lret
je
cmpsb
loope
mov
call
xlat
jne
push
xor
lods
xchg
mov
jg
or
dec
repnz
push
add
sub
leave
xadd
xchg
std
cmp
jne
dec
movsl
out
xchg
lds
sub
aas
push
pop
stc
add
xchg
clc
jecxz
leave
cmp
mov
dec
sub
fnsave
mov
nop
hlt
or
jge
psubusw
adc
push
and
scas
sbb
pop
fsubs
cltd
add
into
lahf
sub
adc
and
imul
fldl
div
movsl
jmp
int
in
mov
daa
or
outsb
cmpb
jp
jmp
rorl
arpl
cmc
mov
or
push
lock
movsb
mov
fldenv
test
and
add
jmp
das
or
and
fisubrl
sbb
adc
and
jae
test
adc
xor
pop
cmpb
popa
pop
mov
fstpt
lcall
rclb
movsl
rcrl
pminsw
mov
cmpsl
adc
add
push
xlat
mov
adc
sysexit
dec
popf
cmpl
mov
inc
sub
in
hlt
push
inc
xor
cmp
sbb
mov
sub
mov
mov
test
ret
xchg
mov
test
shlb
fisubl
jecxz
nop
xchg
lret
testl
or
or
xchg
popl
sbb
mov
insb
pop
enter
adc
sbb
cmpl
js
cwtl
xor
out
loop
es
cmc
lods
and
subl
movl
out
dec
inc
sub
aas
adc
repnz
jecxz
jg
push
bound
mov
push
mov
dec
sahf
add
lds
imul
rorb
push
jb
add
and
pop
push
pop
mov
push
mov
cmp
add
loope
jo
arpl
insb
pushf
sbb
add
das
mov
and
bound
iret
les
mov
jge
pop
aas
or
mov
outsb
addr16
sahf
or
lods
dec
hlt
enter
mov
xor
xchg
leave
inc
movsb
push
sub
add
jp
or
xchg
push
pop
push
mov
sub
mov
mov
lods
gs
fisubl
push
dec
mov
aas
aas
inc
movsb
shrb
sub
inc
or
dec
insl
cwtl
or
sbb
push
sbb
xchg
stos
jno
pop
add
pop
out
jns
dec
jo
push
mov
mov
or
clc
fwait
xchg
cmp
in
cmp
sub
dec
stos
test
xorb
jae
mov
pop
sahf
inc
scas
jl
mov
sub
add
shrd
aas
dec
jle
nop
cmpsb
mov
dec
jmp
andps
cmp
shll
cltd
jmp
jl
pop
fmul
push
insb
enter
dec
adc
les
fsubl
push
iret
call
mov
lea
outsl
sub
mov
inc
subb
dec
cmp
add
testl
icebp
add
dec
inc
and
outsl
jno
movsb
pop
lcall
push
loop
mov
inc
jb
insl
popf
shrl
jp
test
adc
popf
orl
jae
insb
adc
jmp
icebp
call
push
popa
pop
out
rorb
xor
sub
mov
mov
jmp
arpl
jmp
cmp
movlps
sub
mov
mov
or
jnp
xchg
push
sub
je
push
mov
jmp
mov
fldenv
les
cmp
pop
jo
jo
test
outsl
mov
or
nop
pop
out
or
xchg
ds
sub
ret
aaa
fimull
rcll
mov
nop
fstpt
cmp
mov
cs
ficompl
jns
add
leave
cmp
dec
adcl
lret
xchg
leave
cltd
mov
cmp
xchg
test
cmp
cmp
loopne
mov
push
out
adc
outsl
mov
inc
pusha
xchg
out
rcrb
inc
sbb
jae
imul
sbb
aas
mov
dec
add
push
addl
cmp
repz
mov
icebp
xor
outsl
and
insl
loopne
jno
push
fwait
sub
mov
mov
in
xchg
xor
xchg
add
pushf
das
testl
pop
cmpsl
test
pop
in
adc
stc
stc
inc
push
test
sbb
mov
repnz
mov
repnz
pusha
fdivrl
enter
jmp
lahf
aam
js
dec
in
daa
pop
mov
sub
repz
hlt
notl
pop
xor
sub
mov
jo
mov
mov
gs
adc
mov
xchg
pop
leave
xor
xor
add
add
sub
and
adc
inc
pop
cmp
add
pop
out
icebp
pusha
and
mov
pop
lds
mov
adc
sub
nop
adc
call
inc
mov
mov
add
scas
and
and
or
jo
std
ret
sub
dec
sub
roll
gs
lret
inc
scas
mov
pop
jnp
pop
cmp
rcrl
mov
pop
lods
xor
cmpsl
adc
and
dec
add
adc
out
inc
pusha
idivb
out
push
inc
xor
iret
stos
pop
jmp
dec
icebp
iret
les
adc
in
ljmp
das
in
push
push
sarb
mov
push
cmpsl
dec
dec
mov
xor
ror
cli
and
and
add
jns
gs
call
xor
add
sbb
fstps
add
mov
sub
sub
loop
xchg
jecxz
int
lret
adc
pop
add
add
and
gs
pop
sub
orl
inc
icebp
repnz
inc
xchg
or
addb
inc
stc
shrl
test
lret
push
mov
mov
ss
pop
test
bound
pusha
dec
div
cmp
je
add
jne
les
dec
arpl
adc
xor
imul
sbb
call
mov
jno
mov
test
stos
cmp
mov
outsb
or
or
inc
dec
adc
sub
cmpsb
jbe
out
std
pop
and
cmp
stos
xor
and
scas
lcall
or
mov
adc
inc
stc
pop
push
or
insl
mov
sysexit
xchg
cmp
or
jb
movsb
pop
fildll
inc
sub
icebp
in
xorb
pop
mov
jl
and
pop
ret
dec
xlat
repz
inc
rorl
scas
mov
ljmp
mov
mov
sbb
inc
cwtl
mov
jl
cmp
cs
popa
inc
out
or
push
cmc
pop
out
dec
dec
ret
movsb
mov
cs
dec
sub
and
jbe
push
mov
dec
lods
inc
shrb
imul
adc
lds
pop
mov
inc
pop
xchg
inc
mov
jno
mov
sbb
arpl
leave
and
sbb
sarl
pusha
jb
das
inc
sub
inc
pushl
push
in
cmc
rolb
aad
mov
jne
dec
dec
or
movlps
nop
sahf
adc
inc
inc
movsl
fcoml
loopne
dec
add
out
and
mov
popa
cwtl
or
sbb
and
fstpl
scas
aam
popa
add
or
popl
das
cltd
test
mov
lock
dec
cmp
mov
jno
cmpsb
sti
mov
lods
insb
lods
cld
and
in
in
imul
inc
xchg
jl
adc
dec
jne
inc
dec
sub
leave
mov
jo
stos
add
pop
jmp
test
pop
pop
mov
or
iret
pop
enter
mov
jo
mov
mov
adc
dec
js
insb
push
shrb
jne
lret
inc
adc
pop
xor
xor
out
movsb
xorl
sbbl
dec
pushf
iret
xchg
xor
and
pushf
push
das
sbb
mov
stos
loop
pop
adc
inc
stc
dec
mov
pop
or
loopne
daa
cmc
sub
push
test
jp
jne
ficompl
nop
lea
mov
sub
aad
shr
lds
enter
push
push
pusha
push
mov
in
fidivl
adc
cmp
pusha
jmp
aaa
jle
inc
mov
inc
fsubl
push
leave
inc
daa
call
xor
imul
xchg
cs
and
test
mov
push
jb
dec
mov
inc
repnz
gs
jmp
or
pop
push
inc
pop
shr
add
cs
sbb
clc
stos
xor
xchg
mov
negb
pop
imul
pop
scas
addl
ficompl
stc
insb
add
adc
cmp
and
sysexit
ret
xlat
orb
out
push
push
test
imul
loope
xor
test
mov
jns
jbe
rolb
scas
sbb
loopne
xor
push
push
das
lock
das
inc
in
jecxz
je
sahf
cs
lock
cwtl
pusha
test
fstps
xchg
pop
mov
jae
aaa
cmc
les
xor
sub
jnp
sarb
pop
test
test
lcall
or
and
sti
into
fsub
mov
icebp
lret
mov
add
mov
pop
dec
std
ret
adc
add
and
nop
mov
xchg
xchg
xor
iret
pop
jnp
mov
xor
pop
lea
pop
adc
cmp
lods
std
pop
hlt
sbb
mov
repnz
stc
data16
aam
popa
mov
repnz
fsubrp
into
aaa
add
pop
out
test
movsl
roll
jo
push
push
lock
adc
iret
outsl
sbb
sbb
testl
faddl
std
fdivr
mov
aam
mov
les
lcall
lods
jo
mov
test
pop
sahf
lahf
xor
daa
loop
mov
dec
popa
fs
push
sbb
daa
rclb
push
fs
cmpl
addr16
adc
jl
cmpsb
ret
xor
nop
idivl
rorb
imul
or
sub
pop
push
inc
xchg
jae
test
hlt
xor
cmovbe
cmpl
lahf
test
mov
xor
adc
lcall
scas
push
ret
insb
loop
repz
addb
jecxz
les
cmpsb
adc
outsl
movsb
subl
jae
cwtl
adc
mov
push
pusha
shrb
inc
cmp
icebp
or
cmp
mov
push
xchg
inc
icebp
xchg
adc
mov
movsl
jne
das
rolb
sbb
mov
in
xchg
shlb
pop
sub
sbb
insl
popa
stos
mov
in
and
dec
mov
adc
arpl
iret
movb
sbb
or
sub
mov
mov
push
popa
loopne
subl
mov
pop
and
or
or
pop
jp
test
dec
negl
mov
xchg
ss
test
fistps
or
mov
mov
bound
sbb
test
repnz
xor
cmp
nop
pop
inc
je
mov
mov
fnstsw
cmp
cwtl
add
or
push
cmp
leave
int
jo
push
out
xor
adc
xchg
pop
imul
push
call
addr16
sbb
subb
ret
adc
out
data16
xlat
add
adc
jne
mov
imul
in
out
lods
cmp
adc
sbb
je
sub
stos
outsb
add
fxch
fadd
jp
aaa
inc
leave
inc
movsl
xchg
enter
pop
mov
jl
cmp
push
mov
inc
call
xlat
roll
mov
and
mov
andb
mov
lret
pop
add
ret
jg
inc
and
adc
sarl
scas
leave
mov
and
and
loop
stos
lcall
xor
test
add
cmp
add
flds
pop
jmp
fprem1
andb
and
jae
and
adc
fwait
inc
sarl
dec
push
adc
xor
add
fwait
pop
les
pop
pop
arpl
ja
addl
xchg
jg
flds
mov
pop
aam
pop
mov
push
test
or
inc
stos
or
test
inc
add
xchg
lcall
xor
test
jecxz
xchg
icebp
stos
mov
in
push
mov
nop
and
mov
adc
xor
adc
lahf
mov
xor
shlb
iret
push
mov
aad
cld
subl
jnp
pop
mov
lock
popf
pushf
push
mov
ret
mov
aam
push
ss
rol
lds
inc
inc
test
or
push
mov
jno
es
push
xor
repz
xor
ljmp
xor
adcl
xchg
dec
sub
test
push
push
fsts
js
push
cltd
xorl
add
or
cltd
test
dec
fistps
stos
movsb
fldenv
or
bound
xor
mov
mov
cmpb
sub
mov
arpl
and
and
cwtl
xchg
fcoml
mov
ret
dec
scas
pop
adc
mov
adc
jle
sbb
ret
pop
jbe
movsb
pop
test
dec
and
rclb
int
mov
or
mov
add
xlat
scas
aaa
xchg
imul
xchg
jmp
inc
xchg
sbb
arpl
add
popf
jge
push
sbbb
cltd
and
mov
movsb
sbb
pop
sahf
dec
sbb
test
or
test
inc
lds
cltd
out
fldcw
mov
pop
loope
test
scas
xor
es
repnz
pop
mov
adc
sub
and
sub
mov
cld
pop
mov
push
sub
sbb
aam
loop
cmp
jo
out
dec
mov
mov
lcall
cmp
idivl
ret
push
and
cmp
orb
aad
cli
bound
adc
mov
jo
add
cs
add
jns
fsubp
ljmp
pop
jmp
lods
pop
les
daa
mov
nop
xchg
push
lea
xlat
pushf
and
ret
iret
sbb
jns
nop
stc
and
add
mov
mov
adcl
xchg
cwtl
dec
jo
or
int3
xchg
fldcw
lahf
adc
jp
sub
adc
adc
scas
add
xor
add
ficompl
jmp
test
cmp
add
sub
mov
push
loope
mov
jmp
test
or
and
sub
xor
xchg
arpl
add
dec
jg
xchg
stos
cmp
pop
aad
mov
mov
mov
mov
pusha
bswap
or
ret
imul
push
mov
adc
lahf
xor
xor
cmp
insl
xchg
mov
cmpsl
dec
call
mov
mov
jb
mov
or
mov
or
push
or
pop
add
pop
push
push
movsb
outsb
push
mov
dec
mov
nop
mov
shll
sarb
cmp
jns
maxps
pop
imulb
or
add
jo
mov
add
or
cmp
out
mov
inc
or
pop
aaa
jno
jne
sbb
fnstcw
xor
lcall
cld
xchg
mov
inc
mov
ljmp
stc
push
inc
clc
mov
cwtl
aad
sbb
add
adc
xor
xlat
cmp
btr
add
aas
out
add
xchg
inc
in
bnd
sub
sarb
pusha
movsb
xor
adc
and
sub
nop
inc
pusha
push
dec
jmp
out
cmp
stos
mov
loopne
rorb
clc
mov
xchg
cmp
and
or
cmp
test
loope
nop
bndstx
outsb
ficoml
dec
inc
adc
fadds
xchg
cmpsb
adcl
insb
sbbb
lods
jge
push
adc
xchg
test
sbb
pusha
add
xchg
adc
mov
cmp
pusha
cmp
aam
scas
dec
adc
sbb
or
js
jne
insb
in
jecxz
cmp
adcl
mov
jecxz
sbb
sub
je
add
lret
inc
jl
jno
in
mov
xlat
add
lea
aam
out
mov
mov
or
xchg
sub
scas
hlt
and
push
and
and
mov
aas
test
dec
scas
xchg
xor
ds
or
adc
aas
or
or
int3
das
movsb
cltd
test
jp
or
je
xchg
jmp
loope
negl
and
and
xchg
dec
sub
movsb
sbb
cmp
and
mov
les
mov
repz
add
or
push
in
test
and
out
subl
xor
lret
cld
xor
sub
or
dec
jle
clc
jg
int3
add
or
cmpsl
cmpsl
push
rorb
jmp
js
adc
push
add
pop
es
aam
pusha
or
push
add
scas
jbe
push
test
dec
dec
repnz
dec
cmp
sarl
sbb
mov
dec
lods
add
cmp
jns
pop
dec
stos
jo
sub
xor
lds
jb
rolb
cmp
pop
xor
sub
or
and
fcompl
push
pop
ret
mov
enter
sub
mov
inc
jnp
dec
rorb
xchg
daa
inc
icebp
lea
cltd
ja
stc
sbb
fcmovb
xchg
fldl
dec
jbe
cmp
cmp
xsave
xor
sbb
jmp
test
mov
push
mov
pop
jne
sbb
mov
cmp
and
sbb
dec
sbb
and
mov
pop
mov
push
aas
les
or
fcmove
or
sti
arpl
add
loopne
sbb
mov
mov
pusha
das
cmp
sbbb
mov
repz
dec
and
dec
rcl
pop
ds
inc
push
mov
aam
insl
add
mov
repnz
and
jmp
pusha
stos
movsl
stos
pop
mov
or
and
mov
cmpsl
das
add
movsl
sbb
inc
outsb
out
out
jmp
pop
les
dec
xchg
lret
push
in
iret
xchg
or
lcall
jmp
loopne
stos
mov
jo
jbe
push
jmp
mov
sub
push
out
movsb
inc
cmp
add
cs
jge
add
inc
mov
inc
adc
and
or
movsb
xchg
arpl
lock
test
out
lea
add
data16
mov
fstpl
call
pop
bound
addl
enter
stc
movsl
or
mov
repnz
test
dec
imul
sbb
xorl
mov
orb
adc
inc
dec
lods
in
or
icebp
cmpsl
sub
dec
xchg
aad
les
push
orl
inc
imul
or
cmpsb
dec
pop
sbb
mov
inc
mov
push
in
dec
rorl
add
fisttpll
add
sti
gs
adc
les
addb
mov
je
imulb
pop
clc
test
pop
cmp
sub
and
sub
jns
lcall
push
add
xchg
sub
sbb
or
dec
ds
push
xchg
pop
xchg
stos
mov
pop
jno
dec
in
dec
push
negb
lcall
jnp
fcmovb
in
lods
add
inc
sbb
test
bound
xchg
adc
ret
ret
or
xor
cltd
in
add
iret
insl
push
cmpsb
add
add
rclb
cmpsl
popf
test
jno
xchg
jmp
push
dec
push
dec
cmp
dec
mov
xor
ss
or
adc
adc
sub
mov
pop
scas
lock
push
aas
aas
in
outsl
xor
xchg
xchg
xchg
int
sbb
jmp
mov
mov
sub
int3
push
and
ja
lea
or
add
xorb
lock
add
repz
cwtl
cmpsl
adc
xchg
adc
jnp
arpl
enter
mov
push
dec
adc
xor
mov
or
xchg
aad
imul
into
test
adc
repz
jecxz
stc
push
sbb
and
lcall
cmpsl
sub
push
push
jge
xchg
leave
pop
mov
or
inc
mov
lret
pop
adc
jmp
dec
rolb
jp
xor
push
notl
out
pop
sbb
out
ds
cld
xchg
ret
add
push
imul
stos
popf
in
cmc
inc
mov
add
lea
or
push
icebp
dec
sti
in
test
or
cs
js
or
push
outsb
dec
push
jo
stos
roll
xchg
xor
xchg
out
ret
xchg
sub
sti
pop
sbb
loopne
test
inc
mov
pop
es
mov
addr16
push
repz
mov
xor
mov
adc
les
mov
push
xchg
cld
cmc
adc
std
pop
stos
mov
popa
repnz
or
or
dec
mov
jecxz
or
push
mov
add
sbb
push
sbb
mov
test
fs
jmp
insl
std
dec
sti
lods
add
es
jno
mov
sbb
rorl
pop
push
icebp
es
sub
loopne
push
daa
fwait
loope
dec
inc
sbb
cltd
add
lret
outsb
sbb
mov
inc
inc
ret
lods
xchg
out
shrb
cs
pop
or
int
sbb
addr16
clc
xchg
clc
lea
inc
mov
mov
jno
cmp
repz
sti
test
rcrb
push
sub
inc
andl
cmp
rol
sbb
push
jl
inc
mov
xchg
xor
out
xchg
inc
aaa
mov
add
add
dec
cli
stos
popa
add
jg
xchg
sbb
data16
add
nop
icebp
or
sub
adc
xchg
sub
shrl
aad
jno
cmp
adc
cwtl
sub
movsl
out
xchg
inc
rclb
popa
xorb
jae
in
xchg
xchg
mov
lock
dec
lods
les
out
scas
jb
add
aad
xchg
sub
pusha
push
test
popa
add
or
outsl
stos
test
shll
les
aas
loope
cmp
mov
and
sbb
andl
mov
sbbb
adc
mov
xchg
cmp
int3
outsl
add
xchg
fdivl
repnz
adc
adc
add
jnp
movsl
sub
es
mov
shll
shrl
push
test
push
adc
das
pop
add
std
nop
push
lock
inc
push
cwtl
scas
ret
add
push
test
data16
jbe
and
sbb
ret
push
pop
xor
cmpsl
jmp
pop
out
aad
push
movsb
push
pop
outsb
dec
hlt
push
jns
nop
adc
xchg
xchg
fists
sbb
xchg
fsubrs
fisubs
push
push
leave
rolb
or
in
test
push
or
pop
stos
orl
adc
and
pop
pop
xchg
inc
sub
inc
sub
mov
jecxz
pop
push
xchg
jge
lds
or
stos
inc
jno
sub
lret
jmp
push
in
or
sub
adc
pop
nop
subb
lret
rolb
adc
mov
clc
jnp
adc
loope
test
ds
movsl
lahf
inc
lods
mov
jg
sbb
das
cmp
pop
or
test
mov
or
scas
push
xchg
adc
dec
ret
or
xchg
orl
addl
movsb
and
inc
fldenv
mov
popa
mov
sbb
fwait
jo
outsl
div
loope
sub
and
jg
test
js
test
cs
cmc
jl
movsb
pop
test
and
xor
aaa
cmpsl
mov
cmp
das
movsb
add
sbb
insl
imul
cmp
lock
dec
jne
lahf
inc
les
ror
ret
pop
or
add
xor
jle
xchg
les
aaa
ss
sbb
jmp
pushfw
dec
testb
adcl
mov
add
push
adc
dec
movsl
sub
es
repz
call
fisttpll
add
add
imul
or
pop
sbb
sub
rclb
bound
jno
jp
fisttpll
icebp
lds
push
lds
sub
inc
add
and
data16
xchg
int
mov
fadd
scas
sub
add
js
aas
orl
add
mov
lock
dec
je
lds
ds
lret
test
adc
inc
mov
pop
adc
loop
xchg
jno
and
inc
add
push
jno
call
adc
sbb
bnd
jae
aaa
ficoms
jge
stos
insl
dec
addl
push
mov
out
ret
hlt
adc
cld
scas
lods
xor
mov
pop
imul
lods
je
dec
outsb
cmpsb
mov
xchg
adc
sub
xor
testb
mov
xchg
dec
out
pushf
movsl
mov
cmpsl
rcrl
dec
xchg
cmpsb
sub
test
popf
shlb
roll
add
in
ja
inc
xchg
push
jecxz
xor
and
adc
add
push
jg
ret
jo
shrb
add
adc
push
mov
inc
add
div
mov
xor
push
mov
in
lds
mov
add
jo
xchg
mov
or
dec
pop
xor
inc
lcall
mov
cmpsb
mov
pop
adc
mov
add
mov
pop
mov
or
rcll
repnz
les
mov
xchg
inc
push
mov
sbb
add
xlat
push
cmp
fnstcw
add
adc
add
imul
adc
icebp
cmp
xor
or
and
or
add
add
orl
inc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
pop
out
or
or
add
xor
add
add
adc
adc
add
and
addr16
mov
cmp
add
mov
add
pop
adc
or
out
into
add
add
sub
js
mov
push
sub
mov
mov
bound
jl
jmp
call
add
add
insb
inc
imul
insb
gs
js
sbb
out
pop
adc
gs
popw
sbb
outsl
arpl
gs
testl
sbb
dec
imul
outsl
mov
popa
test
jb
je
arpl
push
arpl
outsb
fisttpl
outsl
outsb
sub
and
imul
in
insb
outsl
bound
push
push
pop
divb
dec
popa
outsb
fs
xor
gs
insl
xchg
imul
inc
and
je
in
fdivrs
int3
and
fs
lods
sbb
dec
push
js
ja
inc
mov
sti
push
lea
push
jb
dec
es
pop
jmp
jne
add
fs
je
scas
shll
adc
push
inc
jne
jns
mov
insb
les
mov
cmp
fsts
mov
rclb
mov
mov
add
in
push
inc
push
dec
add
add
loopne
sidtl
jnp
ja
add
add
xchg
daa
lock
push
and
mov
inc
pop
add
add
add
jg
mov
adc
rcl
jge
add
mov
bound
filds
popf
je,pn
je
push
pop
mov
addl
add
enter
jb,pn
lret
mov
inc
or
cmp
sbb
add
lds
out
mov
add
dec
data16
lahf
dec
inc
adc
push
cs
mov
xchg
sbb
sub
adc
inc
xchg
aaa
sahf
jae
into
ja
rorl
xchg
aaa
enter
jg
mov
add
dec
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
shrb
add
xor
