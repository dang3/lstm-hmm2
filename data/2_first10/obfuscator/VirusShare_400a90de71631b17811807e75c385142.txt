cs
aas
cmp
push
mov
jl
mov
xchg
pop
pop
mov
or
or
sahf
mov
mov
dec
mov
shll
add
insl
mov
test
outsl
icebp
loopne
sbb
arpl
cmp
rcl
clc
adc
jecxz
rcll
push
cmp
push
inc
aas
add
imul
das
jle
mov
xchg
out
pop
jle
sar
push
mov
insl
pop
adc
mov
mov
stc
jle
jns
add
xor
mov
mov
inc
jle
out
sbb
fs
lods
mov
sbbb
clc
ds
mov
lcall
push
jno
pop
push
inc
dec
divl
pop
mov
int
cmp
jp
movsl
mov
pop
sbb
push
jl
test
fsts
lods
fs
sti
adc
lods
lcall
xchg
xchg
push
mov
iret
imul
fbld
push
pop
lahf
faddl
pop
sub
cmp
bound
aas
into
push
cmp
cmpsl
hlt
cmpsb
xchg
mov
rcrl
and
cmp
in
inc
dec
mov
outsl
rcrb
ret
push
sahf
js
stos
mov
stos
shl
loopne
jo
imul
push
sbb
jbe
xchg
mov
and
push
das
repnz
decl
dec
popa
mov
push
cmp
jno
mov
mov
mov
clc
xor
fsts
cmp
mov
paddb
pop
sti
ret
jg
push
out
int3
scas
sbb
loope
dec
cmp
add
fnstenv
xlat
mov
dec
idivb
lods
imul
stc
cmp
lcall
mov
mov
cld
add
sub
pop
push
in
and
ficoms
add
shrl
xlat
insl
neg
pushf
jmp
jmp
movzbw
aam
or
call
outsl
insb
gs
cs
insb
add
xorl
cmp
and
jmp
xlat
jno
xchg
xchg
push
cmp
mov
mov
js
or
push
pop
xor
mov
lods
adc
adc
mov
psrld
push
mov
sub
xchg
cmp
cmpsl
push
and
fnsave
or
jl
cld
loope
sbb
enter
bound
add
ss
ss
out
sub
or
cwtl
cmpsb
dec
dec
fmuls
movsb
sbb
into
and
and
inc
not
not
mov
mov
movl
lea
jmp
inc
stc
xchg
inc
sub
pushf
clc
movsb
fdivs
lahf
mov
lods
les
cmpl
cmp
pop
rorl
aad
mov
adc
xchg
scas
rcr
out
mov
push
adc
mov
test
push
jmp
add
cmp
push
xchg
outsl
pop
stos
jns
lcall
mov
mov
scas
dec
and
cmc
shlb
in
stos
mov
add
adcl
test
std
popa
int
mov
int3
jmp
sub
fwait
xor
mov
loop
movaps
push
or
jl
push
call
lret
adc
cmp
aaa
fiadds
push
xlat
es
mov
xor
daa
sbb
inc
sub
orb
arpl
ret
mov
inc
or
mov
xchg
dec
repz
mov
adc
sub
cmp
pop
push
repnz
pop
cmp
mov
aam
cmp
imul
inc
popa
or
xchg
mov
dec
test
xchg
aam
movsb
inc
mov
sub
xchg
shrb
sub
cld
adc
or
orl
jecxz
scas
add
das
in
xorl
insl
mov
js
xchg
xchg
push
mov
jnp
sub
mov
jge,pn
and
pop
fwait
cli
push
jl
or
es
lods
fs
icebp
stos
fcomps
minps
icebp
xchg
cmp
sbb
lods
sub
and
sahf
sahf
sti
cli
push
jl
and
les
divb
or
pop
xchg
xchg
push
shl
call
mov
xchg
push
bound
ret
idiv
push
jl
mov
lods
shlb
adc
lret
ret
in
mov
push
pop
repnz
in
idivl
or
sbb
in
or
enter
xor
add
adc
je
repz
and
leave
xor
add
push
xor
cmp
loop
outsl
sub
enter
mov
enter
adc
push
je
lock
mov
and
push
jmp
xor
loope
pusha
cmp
cmp
call
call
add
dec
inc
dec
popa
jo
je
imul
inc
xchg
xchg
push
add
xorl
dec
push
daa
stos
xlat
dec
out
testl
ret
inc
sub
sub
lret
stc
pop
and
sbbl
sti
and
or
sub
std
repnz
sbb
popf
push
decl
fstpl
xchg
loopne
in
sub
adc
addr16
sti
jns
in
cmp
subl
fs
in
cmpsl
fcomps
xor
push
xor
or
ljmp
sti
pop
in
cmp
fdivs
and
jnp
repz
cmpsl
arpl
outsl
sbb
hlt
mov
xchg
jg
call
imul
push
insb
divl
in
dec
in
aas
mov
inc
out
pop
in
es
es
es
jecxz
sbb
mov
pop
pop
icebp
ljmp
addl
insb
gs
dec
bound
arpl
bt
cmp
ror
push
ror
mov
dec
push
inc
push
movsbw
push
dec
stc
movsbw
dec
push
jmp
mov
push
add
add
dec
in
cmc
mov
pop
in
cmp
ret
negl
mov
adc
fwait
nopl
out
mov
cli
mov
ret
insb
fildll
mov
inc
icebp
arpl
and
insb
testl
andb
dec
pop
jno
push
insb
push
pop
add
decb
inc
imul
adc
cs
add
inc
cld
cmc
jp
outsb
into
ss
imul
xchg
push
dec
pop
es
into
fisubrl
xchg
cmp
push
pop
pop
outsl
mov
iret
popa
jns
scas
ret
cli
mov
adc
jp
aas
dec
movsl
and
pop
cmc
leave
jae
sub
jo
lods
xchg
or
mov
add
cmpl
xlat
cmp
jge
aaa
xchg
jae
lahf
sub
into
rcr
lret
xchg
into
call
sub
fs
or
addb
cli
inc
into
sub
jo
cltd
cmpsb
push
in
or
std
inc
mov
call
xor
sbbl
xchg
mov
in
test
xchg
mov
pop
jle
hlt
pop
inc
popa
out
jle
mov
inc
pop
sbb
hlt
push
aad
push
xorl
add
mov
jp
and
in
adc
mov
movsb
shrl
inc
mov
lret
ret
sub
rol
in
xor
daa
rcl
cmp
enter
cld
bound
adc
test
mov
mov
mov
mov
jmp
and
ja
cmc
cmc
imul
push
bt
add
push
movb
mov
lea
jmp
mov
push
repnz
xchg
ret
dec
repz
sarl
rcl
xor
add
loopne
fstps
cmp
mov
lret
sbb
lea
icebp
flds
and
test
pop
pop
add
in
sub
jmp
mov
ljmp
sub
jmp
mov
repz
push
hlt
fimull
es
aaa
xchg
pop
push
lods
sarb
mov
pop
xor
jecxz
sub
sub
scas
imull
add
mov
rorl
or
and
out
mov
mov
stos
push
xchg
int3
fiadds
mov
lock
sbb
sar
jne
aas
sbb
inc
jg
xchg
lods
lahf
lods
mov
xor
jecxz
mov
or
shlb
test
jl
pop
sti
mov
sub
shl
fisttpl
stos
mov
popa
push
out
mov
xor
and
testl
dec
call
jmp
fwait
xchg
push
popf
into
loop
repnz
xchg
mov
adc
arpl
lcall
movsb
cmpsl
xchg
jmp
roll
loope
dec
ret
cmp
push
push
or
js
mov
test
xor
jp
mov
xor
sub
out
push
cli
pop
in
daa
in
push
mov
aad
sti
test
push
data16
js
mov
push
mov
dec
push
xor
mov
in
add
pop
or
mov
cmc
dec
xchg
dec
int
leave
xchg
sti
imul
push
imul
mov
inc
and
dec
mov
lea
call
or
xchg
push
shrb
jnp
shrl
mov
lock
pop
push
fstpl
fcomps
rcrl
sub
inc
jne
shr
pop
int3
int3
lret
lahf
mov
jmp
fmull
xchg
sub
push
pushf
push
pushf
insl
out
popa
in
insb
add
out
js
popf
inc
add
xchg
mov
adc
adc
sbb
aam
sub
aam
add
imul
push
mov
ljmp
out
or
pushf
mov
jo
mov
sub
je
pop
data16
cltd
test
cld
popf
xchg
push
out
loop
and
lretw
mov
ss
mov
fnstsw
push
gs
cmp
add
mov
pop
push
mov
punpckhbw
jl
push
scas
ret
inc
outsb
inc
test
pushf
scas
sub
in
das
inc
adc
daa
mov
sarb
lds
icebp
pop
sbb
adc
mov
stos
mov
sbb
add
cmp
dec
add
push
das
sahf
xchg
push
sbb
or
or
ret
mov
addr16
into
pop
xchg
fdivrl
sbbl
out
pop
arpl
inc
pop
es
out
test
outsb
push
dec
sbb
das
cmp
je
fdivrl
mov
mov
aas
addr16
cmp
inc
icebp
sar
into
sub
cmpsb
mov
cmc
cmc
push
jno
cmc
mov
sub
mov
dec
mov
xchg
lea
call
push
pushf
test
cmp
movb
push
lea
jl
jae
clc
cmp
cmp
call
mov
push
push
jecxz
mov
mov
out
stos
cmp
mov
cli
xor
sbb
stos
jne
inc
mov
cmc
jge
or
in
aam
icebp
mov
add
dec
adc
ret
and
adc
jns
cmc
andb
imul
rclb
and
mov
or
add
hlt
ljmp
dec
fistl
inc
lods
jnp
fisttps
loope
xchg
es
mov
mov
sahf
xchg
push
gs
stos
out
stos
push
or
ficompl
dec
inc
lds
push
dec
lahf
enter
mov
cmp
ficoms
xchg
push
xor
inc
insl
and
pusha
fdivrs
jle
cmp
sub
rol
xlat
addb
and
je
mov
lret
in
nop
push
les
enter
dec
cmpsl
sub
mov
mov
fsubr
add
xor
sar
not
neg
pusha
pushf
pushl
dec
rcr
setle
not
stc
rol
movb
pushl
pushf
call
stos
pusha
pushf
movw
lea
jmp
jno
cmp
xchg
push
cmpsb
out
cmp
push
pop
ss
outsb
fcmovu
xchg
jp
popf
fstp
in
rcr
arpl
adc
or
push
mov
pop
cmp
cli
mov
scas
movb
mov
imul
insl
es
xor
imul
stc
jmp
jne
cmc
pop
pop
pop
mov
and
test
lahf
or
stos
or
enter
frstor
push
jno
or
add
dec
scas
push
cmp
jmp
dec
aas
cwtl
dec
xchg
cmp
mov
adc
pop
shlb
sbb
in
sbb
std
adcl
insb
jbe
cmp
popa
outsl
sbb
sub
insl
sbb
adc
push
lock
lods
mov
out
outsl
int
inc
mov
mov
xchg
mov
push
dec
inc
in
pop
sbb
mov
add
into
inc
mov
ds
sub
sub
jmp
or
add
loope
fldl
loope
mov
into
rcrb
icebp
pop
divl
pop
std
jno
ja
insb
in
mov
bound
jle
cmp
sub
outsb
scas
out
fists
stos
cli
xor
sbb
sbb
push
inc
scas
icebp
imul
in
ds
inc
stos
insb
and
stc
mov
pop
stc
out
adc
jb
dec
jnp
jle
test
shr
stos
cmpl
jnp
and
rorb
xchg
pusha
fdiv
or
jmp
cmp
lock
add
fcmovnb
xorl
and
and
je
rcl
jmp
hlt
jbe
mov
jns
icebp
cmc
sub
aad
shll
jp
das
movsl
cmc
cmc
xor
push
xchg
xchg
clc
ja
test
cmp
jo
cmpsl
sub
pop
mov
int3
bound
mov
cmp
sti
lahf
movsb
mov
movsb
xor
sbb
loop
dec
sbb
rclb
push
pop
jne
inc
or
xlat
xor
or
or
inc
enter
mov
dec
jg
sar
outsb
or
das
sbb
xor
faddp
xor
push
aad
adcb
or
gs
cmpsb
and
sbb
jmp
in
pop
cs
pop
mov
or
lods
sbb
and
or
cld
bound
add
pop
mov
add
push
and
cmp
pushf
jmp
jmp
imul
sub
push
ljmp
out
cmp
sbb
jg
xor
cmp
test
xorb
cmp
mov
mov
dec
mov
fsubs
clc
and
or
adc
jbe
aaa
cmp
mov
fstl
je
sbb
and
pushf
fs
mov
aad
outsl
jns
ljmp
pop
enter
repnz
sub
insl
inc
sub
in
push
movsb
push
jnp
fucomp
mov
enter
test
xor
repnz
push
sbb
fistl
mov
std
jae
aad
or
add
xor
cli
inc
dec
or
call
scas
jnp
cs
enter
push
pop
xor
sub
pop
xlat
sub
mov
mov
nop
pop
pusha
insb
mov
xlat
loopne
push
and
ret
insl
mov
mov
clc
jbe
jp
into
scas
inc
xchg
or
push
pop
push
sub
push
fldenv
add
cs
mov
cmp
pusha
lock
faddp
repnz
lret
jne
hlt
in
inc
or
or
lock
xor
sbb
mov
add
aaa
loope
xchg
mov
fsubr
sbb
int
push
in
fdivrs
mov
in
ret
pop
dec
and
fisubs
lock
jb
scas
inc
mov
xchg
pop
into
fwait
data16
fisttpl
mov
lea
jne
push
stos
movw
pushl
lea
jmp
dec
lret
mov
xchg
push
cs
dec
scas
cli
inc
or
mov
out
lret
outsl
dec
push
rcrl
inc
movsb
or
addr16
mov
mov
stos
mov
mov
add
mov
push
mov
jbe
fimull
aaa
pop
sub
movb
adc
xchg
mov
push
cmpsl
imul
fsts
inc
adc
inc
xchg
dec
fistpll
loope
dec
cmp
mulb
or
ret
pushf
mov
pusha
movl
lea
call
pushf
call
inc
call
call
popf
pop
push
outsb
push
mov
incb
ds
fisttpll
inc
add
dec
dec
popa
adc
pop
push
xchg
cmp
addr16
pop
cmp
rcr
das
cmpsl
sub
fs
xchg
rolb
sub
shll
movsb
mov
addr16
lods
orb
ffreep
insb
addb
jl
pop
ds
ficoml
jb
adcb
sti
or
xchg
push
xor
jns
stc
fiaddl
notb
mov
sti
add
loopne
mov
jbe
cmpsb
ljmp
adc
sbb
mov
pop
add
cmpsb
pop
hlt
push
add
pop
movb
test
and
dec
fcmovnb
xor
jmp
cmpsb
xchg
push
pushl
and
or
fcoml
bound
popa
inc
inc
mov
mov
movb
lea
or
loope
hlt
push
aaa
dec
cli
xchg
sarb
push
outsl
mov
or
lret
fdivl
add
in
dec
das
jle
pop
push
pop
xchg
iret
jne
add
outsl
mov
je
nop
or
jge
lahf
cmp
add
dec
sbb
int3
sub
mov
dec
xchg
mov
dec
dec
out
mov
and
push
sub
js
test
adc
fcoml
jo
cmp
jmp
dec
dec
int3
add
dec
repnz
xor
mov
inc
add
out
jmp
jo
ds
ljmp
adc
into
rolb
jle
xor
fisubs
arpl
inc
inc
pavgw
into
adc
shrb
repnz
ss
aam
flds
int3
inc
xor
andb
xchg
pop
into
aaa
iret
xlat
in
jmp
shll
jg
mov
mov
pusha
mov
test
ja
pop
les
cmp
jge
inc
lock
test
mov
shll
stos
out
or
repz
sbb
jle
repz
dec
push
pusha
loop
imul
sti
push
loope
sbb
loop
add
mov
push
or
push
repz
test
mov
cmc
lods
inc
add
jmp
pusha
call
jns
sbb
xchg
push
sub
adc
and
addb
xchg
xor
into
dec
paddusb
push
pusha
subl
sub
aam
xorb
outsl
and
adc
insl
das
int
lret
dec
adc
xchg
push
fistl
add
rol
cmp
sahf
ss
sub
movsb
ds
sbbb
push
push
dec
mov
cmp
xor
cmp
incb
ret
sbb
xchg
xchg
xchg
movsl
mov
mov
xor
pusha
gs
mov
xchg
push
int3
pop
gs
jg
xor
cmp
iret
test
mov
mov
jns
inc
jl
and
or
pushf
mov
adc
adc
mov
mov
jge
mov
mov
les
sbbb
and
add
dec
sbb
sub
mov
xlat
dec
push
popf
les
push
mov
adc
ret
ficomps
cmp
xor
in
mov
clc
rclb
into
sarl
sbb
es
addl
xor
inc
jp
je
xor
cltd
sbb
in
sbb
xchg
adc
push
orl
add
add
mov
jmp
mov
xchg
mov
rcl
dec
adc
lock
hlt
inc
in
xchg
jne
std
mov
pop
inc
pop
or
adc
outsl
sub
and
xor
cld
mov
lds
ret
inc
test
sbb
lcall
add
mov
testl
fstpt
xchg
rorb
test
es
inc
or
pop
imul
jmp
xchg
push
imul
adc
ret
lahf
jnp
orl
in
imul
mov
xchg
cmp
mov
int3
mov
mov
sub
lea
adc
xor
rcll
popa
ud0
inc
fs
sbb
pusha
pop
jno
pop
mov
inc
sbb
sbb
cmpsb
pop
call
ds
scas
outsl
movsl
pop
pushf
inc
cmp
pop
loope
fstps
mov
mov
cmp
dec
icebp
inc
jmp
std
inc
push
jnp
cwtl
scas
mov
pushf
pop
xchg
jae
insb
fwait
mov
inc
push
int
cmp
shl
jecxz
std
pop
fsubr
iret
sbb
hlt
aam
mov
vmwrite
sbb
pop
cmc
sub
lea
aaa
js
in
xchg
and
jae
pop
aas
xchg
add
cltd
xchg
mov
cltd
fbld
fwait
jns
aad
sbb
push
and
ljmp
lea
movsbw
pop
not
lea
pop
push
movzbw
push
movsbw
mov
movsbw
mov
push
mov
movzbw
pop
pushf
pushf
pushl
ret
repnz
subl
jmp
lret
addr16
out
aas
jae
mov
leave
rcr
dec
xor
sti
and
hlt
mov
std
jge
out
or
add
and
or
fldcw
ja
dec
out
in
jno
push
movsb
pusha
cli
fmuls
shlb
inc
pop
mov
dec
leave
in
mov
repnz
pop
mov
xchg
outsl
and
cld
stos
out
imul
fmulp
add
pop
xor
pop
xchg
push
mov
cli
dec
mov
push
out
loop
pop
movsl
movsl
jae
adc
mov
push
subl
test
inc
xchg
insb
mov
imul
imul
int
addl
pop
sarb
push
or
lods
mov
out
repnz
sbb
stos
cld
test
dec
enter
xchg
adc
in
sti
sub
cs
or
and
sahf
sahf
push
je
nop
enter
jae
sub
push
mov
or
push
adc
sahf
push
inc
lock
add
test
mov
out
je
or
or
scas
pop
rorl
dec
cwtl
sub
lea
mov
aas
loop
loopne
mov
scas
and
fistpl
out
scas
push
pop
or
in
pushf
test
gs
lds
lock
inc
or
push
cmpsb
dec
and
inc
mov
xchg
lods
xchg
push
sub
enter
add
push
pusha
movsb
sub
xchg
mov
into
push
rol
mov
lea
jmp
test
jno
lock
iret
mov
add
cmpsb
or
adc
int
adc
outsb
or
sub
cmc
or
cmp
ljmp
cmp
cmp
or
in
into
dec
and
in
jno
addr16
aad
je
push
outsl
cmpsl
mov
jb
inc
add
xchg
push
lret
xlat
dec
cmp
mov
ds
lahf
mov
fwait
dec
cld
popf
add
lret
pop
pop
add
xchg
pop
mov
mov
cmpsb
in
mov
aaa
jbe
int
shlb
inc
repz
shr
ss
jmp
enter
mov
int3
call
test
mov
out
push
xorb
and
jl
add
rcl
fld1
inc
cmp
mov
addr16
shrb
adc
ja
stos
sub
cmp
in
add
insb
bound
push
xor
scas
xchg
push
or
gs
xchg
popa
jge
add
inc
bound
test
mov
sub
notl
xchg
gs
inc
icebp
pop
jg
aaa
mov
iret
xor
es
mov
jno
sahf
or
testl
das
mov
movsb
xchg
dec
add
cmp
add
ja
sub
fdivr
or
arpl
dec
push
xchg
sub
outsl
dec
mov
push
and
mov
shlb
jl
out
or
outsl
lea
jg
inc
push
addr16
xor
lods
shll
sbb
lea
jb
pushf
pushf
pushl
ret
push
fldenv
xor
lock
cmp
pop
test
js
popa
inc
cmp
push
bound
push
aaa
sub
or
cmp
int
mov
cwtl
out
or
arpl
sbb
mov
jmp
sarb
mov
addr16
dec
mov
scas
jg
cmpsb
mov
inc
imul
clc
inc
sub
mov
sub
pop
ss
sarl
mov
aas
xchg
sarb
xchg
out
jb
or
jmp
repnz
ljmp
jo
out
inc
push
cmp
sub
int3
pop
and
cmp
mov
sahf
insb
push
adc
pop
jae
dec
dec
inc
imul
push
mov
inc
mov
in
hlt
mov
and
das
sbb
into
cs
xchg
adc
psraw
cltd
stc
push
sub
gs
cltd
jg
pushf
add
cmp
test
mov
es
ret
aad
aaa
sub
rcr
jmp
lahf
xchg
out
add
mov
inc
xchg
in
movsl
insl
and
fcompl
fwait
pop
call
fmulp
mov
lcall
fbld
and
mov
ds
les
xchg
xchg
cmp
fs
je
jmp
lea
call
pusha
pusha
adc
pushf
jmp
add
dec
outsl
arpl
inc
jb
gs
push
jno
xchg
push
shlb
jns
rcr
icebp
popf
cmp
dec
sarl
divb
or
pop
popf
xchg
mov
dec
std
mov
add
jno
das
outsl
sub
and
jmp
leave
in
fs
loopne
push
mov
arpl
bound
mov
aam
push
adc
mov
lods
cmp
call
adc
flds
mov
jle
cmp
sahf
xchg
bnd
cs
call
add
pusha
cmc
xor
lea
pushf
jmp
andl
xchg
push
pop
fdivs
stos
push
movsb
std
xlat
jecxz
xorl
mov
pop
xor
mov
lcall
mov
mov
pop
incl
jecxz
std
out
ljmp
out
lcall
sub
cmp
xchg
mov
scas
add
push
jg
aam
cmpsb
mov
mov
push
sbb
cmp
rolb
dec
inc
repnz
scas
inc
ja
xor
dec
movsb
in
pusha
and
negb
mov
sahf
cli
ljmp
add
rcl
dec
pop
mov
pusha
pop
lods
les
xor
and
mov
das
inc
cmp
sub
imul
sti
or
adc
nop
sbb
cs
cmp
cmpl
lea
mov
negl
jbe
pop
out
mov
ds
sbb
cs
dec
push
ss
pop
xchg
mov
pop
imul
lods
mov
jmp
adc
mov
imul
add
jns
push
les
ljmp
push
loop
push
sarl
fwait
xor
pop
push
jg
popf
dec
cmpsb
in
pushf
imul
xor
aam
add
inc
imul
mov
cwtl
adc
jbe
sub
pop
pop
inc
repz
imul
inc
jge
fsubs
out
push
test
lock
pop
sbb
sti
pop
cmc
push
sbb
pop
dec
mov
mov
xor
inc
fnstcw
repnz
dec
xchg
push
scas
cmp
clc
fcomps
lret
adc
leave
fildll
out
bsr
rcl
mov
clc
jmp
and
mov
ja
scas
pop
xchg
cmp
fildl
xlat
jnp
inc
or
xor
dec
mov
add
sti
je
inc
xchg
push
aas
adc
or
ret
ret
sbb
jbe
pop
out
add
mov
movsl
dec
xor
iret
mov
mov
fcmovnbe
divl
std
test
sbb
mov
addl
lock
mov
push
lahf
jo
mov
sbb
lahf
or
xor
call
jle
mov
push
mov
mov
pop
mov
mov
push
push
fnstsw
push
in
xchg
int
int
in
adc
mov
lods
and
inc
sub
shll
or
xchg
push
or
int
shr
fstps
jge
add
add
icebp
cmp
popf
loopne
sub
aam
mov
loop
fidivs
into
lock
sub
lcall
fisubs
cmpsb
xchg
pop
or
push
or
out
mov
push
sbb
scas
rorl
pop
mov
lret
arpl
or
jnp
sub
rolb
sbb
sahf
stos
xchg
sbb
mov
in
in
aaa
pandn
sub
popa
js
inc
enter
adc
or
push
cli
cmp
test
outsl
cmp
bound
loope
mov
pop
leave
loope
xchg
scas
xchg
adc
repz
sub
sbb
xlat
xor
int
loope
cmc
jae
dec
arpl
in
jne
repz
xlat
mov
hlt
ljmp
push
xchg
pop
sti
imull
adc
fcmovne
pop
pop
dec
cmp
nop
jns
nop
test
cmp
mov
insb
mov
xor
test
lcall
psrlw
adc
and
out
lock
xor
cmp
xor
jno
pop
pop
mov
test
sub
in
xor
and
fiadds
in
add
fwait
jl
scas
sub
iret
mov
or
arpl
daa
xor
mov
fnstsw
pop
xchg
int
mov
lcall
out
add
bt
call
push
push
dec
clc
pusha
call
lea
ja
sub
and
neg
sub
bts
and
add
btr
rcr
dec
mov
cmp
mov
call
push
push
popa
mov
push
call
int
in
loope
push
push
inc
jge
dec
aas
mov
mov
int3
mov
xchg
and
test
fcompl
cmp
aad
cmp
inc
add
test
sbb
pop
lcall
js
cmpsb
push
sbbl
jb
test
cltd
ret
xchg
sbb
jecxz
fwait
push
sub
cmp
fwait
sarl
jecxz
pop
xchg
jmp
aad
sarl
jae
add
jbe
lock
std
std
mov
shlb
adc
inc
es
int
out
cmp
mov
pop
or
xor
mov
in
int
jb
in
cmp
xchg
and
aam
pop
ret
out
es
test
xchg
or
inc
push
adc
in
xchg
push
lods
movsb
gs
push
sti
int3
sub
xor
or
sbb
fiadds
iret
mov
xchg
push
cltd
es
and
es
inc
cs
mov
shll
aaa
mov
out
lock
bnd
fcoml
lret
pop
add
sbb
shrl
les
test
int
push
push
lahf
andl
mov
cltd
insb
orb
mov
inc
lds
rorl
pop
sub
add
cmpb
enter
xchg
push
fs
dec
xor
mov
std
addb
lret
pop
fisttps
fisubrs
add
sbb
sbb
fdivrl
loop
xchg
mov
sbb
push
rcl
add
jbe
or
ret
or
outsl
out
nop
mov
and
loopne
lods
jne
stos
bt
insb
lock
mov
xchg
int3
ja
mov
mov
cmpsl
lds
fsubrl
movsb
xchg
and
out
xlat
push
lret
mov
ja
imul
fisttpll
add
iret
dec
add
inc
lock
in
lock
inc
test
push
jecxz
jl
pop
sub
imull
divb
xor
or
mov
cmp
divl
scas
add
sub
jo
fdivrl
fidivrs
lods
insl
int3
dec
insl
insl
stos
sbb
out
into
or
out
xchg
insl
push
or
adc
sbb
jmp
gs
sarb
repnz
outsb
test
insl
cmp
mov
xor
push
or
ds
jbe
push
push
xchg
mov
and
fstp
out
cmp
call
jmp
cli
push
ret
pop
adc
out
sbbb
push
insb
shlb
sbb
lret
in
movsl
hlt
insl
imul
pop
jecxz
jmp
cmpsb
cmp
cmp
ret
jl
popl
loopne
add
jnp
icebp
cmp
xor
mov
jg
aam
jle
gs
mov
fs
xchg
sub
loop
pop
fs
mov
mov
xchg
cs
addr16
das
sub
pop
cmp
iret
sub
mov
das
movsl
inc
mov
inc
xor
cmp
scas
push
xor
jns
sub
xchg
push
sbb
sub
repnz
mov
adc
lds
scas
xchg
adc
mov
out
jo
stos
test
jne
xor
mov
mov
mov
fistl
push
ret
les
lahf
pop
or
lea
ret
fistps
in
call
inc
out
mov
imul
add
mov
das
xchg
jnp
pop
sub
add
sbb
sbb
loop
enter
jge
xchg
push
int3
cltd
jne
push
mov
aad
and
fdivrs
test
push
jbe,pt
mov
les
jae
dec
or
xchg
pop
cmp
mov
test
sbb
gs
or
mov
mov
mov
stos
sbb
and
xchg
addr16
push
sbb
cld
mov
add
lea
sbb
into
popf
sub
hlt
sbb
cltd
push
std
jne
mov
cmp
mov
lahf
outsl
mov
jecxz
mov
pop
outsl
pop
ja
fsub
mov
scas
popa
xchg
jae
add
arpl
mov
push
sub
iret
dec
iret
mov
dec
lahf
sti
psllq
mov
or
push
shlb
jge
cs
pop
jmp
lods
cmp
pop
aaa
push
stos
ljmp
inc
pop
js
push
gs
fs
jb
leave
mov
push
adc
imul
lock
loop
add
jo
out
ljmp
push
movsb
push
popf
cmp
or
and
cwtl
xchg
nop
ds
lock
pop
pop
fcmovnb
aam
mov
test
push
dec
and
mov
push
push
cmpb
iret
xor
fwait
lock
mov
xchg
sbb
cmpsb
dec
jmp
sbb
xor
fnstcw
out
or
cmp
enter
sub
add
lret
mov
mov
ret
dec
mov
data16
cli
testl
xor
xchg
test
xor
loope
shrl
sbb
mov
int
sbb
mov
inc
xchg
add
xchg
adc
in
int
sub
xor
mov
pushf
pop
and
xchg
lock
negl
lret
jecxz
jge
ds
je
daa
mov
dec
rorb
mul
fs
movsb
mov
insl
cmp
mov
fldcw
outsl
mov
mov
adc
arpl
push
ljmp
and
fsubs
dec
sub
daa
cmp
arpl
das
ret
mov
rcr
jmp
inc
insl
inc
adc
sbb
sbb
mov
add
pop
ja
int3
enter
addb
and
adc
or
mov
sbb
fidivs
into
lret
out
leave
clc
rdpmc
int3
mov
in
ja
cltd
sub
or
sti
jge
pop
fwait
pop
fwait
adc
inc
loop
xor
stc
or
imul
and
js
adc
call
mov
pushf
sete
lods
clc
xor
test
cmc
mov
cmc
sub
cmp
test
cmp
not
test
xor
pusha
pushf
pushf
cmp
bswap
lea
mov
lea
jg
pop
push
pushl
lea
ja
jmp
jmp
jns
cld
mov
mov
stos
xchg
cmp
rorb
bnd
inc
std
daa
inc
rol
ror
jb
xor
pop
jmp
sbb
lret
inc
sub
test
or
push
imul
xchg
push
add
xchg
pop
loope
dec
ret
movsb
sbb
mov
jl
mov
sub
xlat
dec
outsb
inc
not
movsl
inc
outsb
aaa
insl
add
mov
int3
ljmp
test
add
and
or
test
rolb
fildl
add
repnz
call
movw
pushf
mov
jmp
pushf
pushf
lea
je
jmp
or
mov
xchg
push
xchg
orl
leave
cmc
mov
mov
push
dec
cwtl
cmp
loope
andb
xchg
pop
adc
jo
push
les
rcl
jno
adc
xchg
dec
sbb
notl
test
das
push
pop
pop
sbb
lods
add
push
mov
push
and
inc
nop
or
sti
sahf
cmp
dec
daa
pop
cmc
aad
imul
fwait
icebp
mov
inc
mov
push
push
pushf
neg
popf
jns
ljmp
jg
push
mov
jmp
push
cmp
pop
xchg
push
xchg
clc
mov
xchg
shrb
mov
rcrl
outsl
popf
scas
movsb
xor
ret
pop
in
dec
xor
pop
mov
inc
and
jne
sbb
add
mov
sbb
adc
fstps
subb
and
mov
test
loope
and
mov
fadd
movsb
add
add
or
add
add
cli
ds
cld
dec
enter
loopne
adc
shlb
aad
lret
fists
stos
mov
inc
pop
push
aaa
mov
and
popa
test
add
lods
xchg
jo
cltd
jl,pt
sbb
int3
call
adc
adc
jnp
xor
jecxz
pushf
cltd
test
loopne
cli
pop
das
cmp
idivl
fildll
frstor
xchg
outsb
hlt
out
imul
ret
movsl
xor
add
clc
rolb
mov
push
mov
mov
push
dec
cs
xchg
cmpsl
jo
jbe
rclb
and
inc
in
cmp
hlt
sub
fadds
mov
shl
ljmp
stos
add
das
mov
call
in
iret
mov
xchg
push
xor
cli
out
stos
jbe
cmp
ljmp
sub
imul
pop
xchg
mov
out
inc
mov
lret
mov
je
and
test
repz
lds
mov
mov
jg
or
mov
fs
ret
xchg
mov
or
cmp
das
cmc
das
sbb
sub
dec
dec
rclb
cmpsb
dec
pop
dec
push
loop
pop
test
pusha
lea
jne
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmp
sub
std
test
stc
movsb
repz
adc
jp
adc
pushf
mov
and
imulb
insb
mov
mov
sarl
mov
sbb
push
dec
pop
stos
xchg
outsl
addb
icebp
inc
shl
adc
icebp
es
aas
mov
xchg
xor
popa
mov
nop
pusha
pushf
pusha
xchg
pushf
call
mov
push
adc
push
xchg
cmp
call
rcrl
pop
inc
cmpsb
ss
fists
fdivrl
sahf
mov
adc
push
lahf
xor
push
jbe
lret
xchg
push
inc
mov
mov
loop
push
insl
mov
mov
arpl
enter
rcrb
mov
lods
add
sahf
adc
test
push
jecxz
mov
and
rcll
stos
daa
mov
mov
fwait
push
das
dec
sti
sub
jbe
out
xor
stc
push
cmp
loop
jle
add
shrb
es
mov
pop
sub
pop
mov
lret
mov
cmp
and
inc
insl
add
mov
scas
jle
bound
fisubrs
mov
insb
les
push
fildl
les
mov
iret
sbb
outsl
mov
mov
dec
inc
cmp
in
pop
adc
inc
icebp
mov
int
test
arpl
test
pop
push
dec
sub
push
inc
push
push
sbb
shlb
sub
xor
sub
push
add
adc
cmpsl
push
xchg
jne
lock
sub
or
pop
or
and
dec
pop
dec
orl
jnp
push
jbe
push
lahf
mov
mull
insl
pop
sub
jnp
pop
or
xchg
daa
movsl
fnstsw
clc
lods
not
not
mov
call
lods
inc
cmp
xchg
push
test
xchg
push
and
shll
mov
push
loop
dec
pop
dec
dec
mov
xchg
pop
stc
js
scas
pop
stos
cmpl
push
or
movl
icebp
pop
cmp
inc
mov
dec
xchg
xor
les
pop
fcmove
and
inc
dec
aam
sbb
xor
pop
cld
dec
test
cld
pop
pusha
mov
push
sub
popa
pop
aaa
mov
xchg
jmp
xchg
push
pop
stos
xchg
add
xchg
out
cmp
es
mov
out
dec
sbb
test
xchg
mov
aad
ja
outsl
jae
movsb
jnp
or
pop
inc
mov
pop
dec
push
cmc
mov
and
mov
lahf
or
fsubp
dec
ljmp
xchg
aas
cmpsb
and
push
data16
lock
shlb
cmp
icebp
dec
roll
movl
in
cmp
mov
cmp
push
cmpb
pusha
pushf
mov
lea
jne
setns
sub
dec
mov
adc
pusha
add
rcl
rcr
not
sub
mov
clc
test
mov
pusha
pushl
lea
je
bt
jmp
dec
bt
shl
not
movb
lods
stc
cmc
mov
neg
movb
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
pop
data16
push
xchg
mov
sub
push
sub
sub
das
sub
add
cmp
xor
mov
ficoml
sarl
push
or
mov
movsl
rol
fisubl
cmpl
in
test
jb
xchg
mov
push
insl
in
insb
xor
jl
sbb
mov
dec
and
inc
jecxz
jg
adc
mov
pop
jp
sub
lea
mov
sbbb
lret
movsb
shll
mov
gs
rcll
int
and
out
iret
lahf
fsubl
imul
fbld
xchg
out
scas
sbb
mov
cmpsb
push
adc
das
xor
inc
pop
inc
push
aas
xlat
mov
xor
xor
xlat
cs
enter
lret
and
shll
sbb
cmp
push
inc
cwtl
sbb
dec
sub
xchg
testb
jl
test
nopl
push
jo
call
dec
xchg
xchg
cmpsb
cmp
push
into
xchg
xor
fs
cmp
push
roll
stos
add
pusha
adc
pushf
pushl
pushf
pushl
ret
movb
pushl
rol
movb
inc
test
pushw
popfw
jmp
jmp
loopne
and
movsl
loope
or
and
in
push
call
add
inc
jl
jne
gs
mov
decb
pop
xlat
fistpl
nop
or
fstpl
dec
push
pop
lock
roll
adc
fwait
mov
test
jg
mov
jno
cmp
or
ret
add
mov
mov
or
push
sub
mov
add
sbb
jb,pn
mov
in
arpl
jo
stc
in
jae
insl
cmp
or
lock
sub
inc
pop
add
cltd
mov
das
fsub
or
jecxz
add
dec
pop
inc
cmc
sub
shld
subl
pop
out
and
mov
xchg
jmp
out
push
inc
out
inc
pop
stc
xor
scas
jo,pt
xchg
dec
aad
inc
pop
test
insb
jo
mov
fnsave
dec
aaa
jno
fidivl
fldt
xchg
ljmp
inc
dec
loop
addr16
addr16
test
add
cmpsl
insb
pop
inc
xorb
enter
mov
aad
test
jg
inc
into
or
lcall
cli
xorb
push
pop
out
pop
repnz
negb
xor
loop
adc
in
add
adc
adc
jl
push
mov
and
or
jmp
das
inc
out
or
mov
jne
jns
mov
mov
dec
fists
and
sbb
cmp
shll
insl
lret
imulb
mov
mov
clc
and
mov
or
idiv
das
arpl
pop
push
dec
xor
inc
push
and
pop
dec
pop
in
mov
or
nop
push
inc
dec
mov
or
rclb
inc
mov
das
mov
fsubs
sbb
pop
dec
or
push
inc
test
or
mov
inc
push
or
pop
sbb
or
gs
mov
lea
fdivrl
out
xchg
mov
mov
bound
fisubl
push
loop
fidivl
or
das
enter
sub
roll
sub
loopne
mov
sub
test
adc
jp
push
or
push
lds
imul
into
pcmpeqd
mov
addr16
in
pop
mov
xchg
lret
jae
push
sub
loop
mov
push
stos
test
sub
es
ret
or
js
add
jb
es
hlt
sbb
inc
sub
xchg
push
repnz
ja
mov
fwait
pop
jbe
es
xchg
outsb
fstpt
ret
dec
mov
cmp
adc
dec
aas
mov
adc
jo
jb
decb
int
mov
add
mov
mov
sub
inc
mov
into
aas
fsts
mov
or
jmp
test
mov
mov
lret
adc
out
das
mov
dec
adc
cmpsl
pop
mov
jmp
pop
inc
stos
repnz
xor
push
push
dec
loop
popf
loop
xchg
push
add
dec
cwtl
cmp
aam
or
dec
loopne
or
lock
or
mov
mov
je
js
fcmovb
out
fcompl
mov
mov
cmp
movsl
mov
in
rol
test
sar
ss
out
jnp
add
pop
jmp
xchg
pop
push
xchg
leave
das
sub
dec
movsb
mov
jbe
xchg
mov
sbb
xchg
push
xor
jmp
cmc
pop
lds
mov
add
cmpsb
xor
movsl
mov
mov
fyl2xp1
mov
mov
inc
cld
push
out
test
mov
sub
sahf
lds
sub
mov
faddl
sub
dec
push
je
jo
lahf
iret
fnstsw
mov
jecxz
in
xorl
lods
outsl
jne
shlb
mov
inc
bnd
pop
dec
outsl
hlt
std
int
jo
xchg
fnstsw
and
scas
fwait
xchg
ret
mov
jmp
and
push
fsincos
xchg
push
out
xchg
dec
add
cli
jecxz
inc
pop
push
cmc
and
mov
adc
js
push
xor
cli
mov
or
popf
mov
push
push
andb
push
cld
jmp
mov
aad
adc
mov
lahf
jns
mov
add
or
inc
mov
jne
mov
test
mov
jae
cmp
lods
call
push
pushf
pop
mov
inc
pop
ret
pop
and
xchg
cmp
enter
shl
pusha
aad
push
or
popf
fldt
out
push
repz
mov
enter
and
bound
pop
add
fistpl
rclb
inc
rcl
in
shr
sbb
sbb
push
add
cmp
arpl
call
pop
inc
loopne
inc
fcmovu
jl
pop
stos
mov
add
fwait
xchg
pop
enter
jmp
or
mov
ljmp
pop
std
ja
ret
repz
bound
cmc
inc
pop
pusha
push
add
sti
xor
and
ljmp
jae
int
xchg
call
scas
loope
outsb
inc
arpl
mov
dec
mov
loopne
inc
xchg
out
add
std
sub
adc
and
pop
loopne
and
ffree
lock
cmp
sbb
fnstsw
xchg
je
jae
inc
arpl
mov
fcmovnbe
or
fcom
scas
mov
lds
fwait
dec
mov
cmc
in
test
mov
enter
sub
test
pop
roll
xor
jae
xchg
test
jae
iret
popa
jg
push
aad
dec
imul
add
in
lock
cmp
adc
cwtl
sti
add
add
push
push
clc
out
jmp
mov
sahf
push
imul
jmp
xchg
cli
mov
dec
cmp
outsl
sbb
xor
rcr
xor
repz
pusha
jmp
cmp
cmc
mov
out
mov
stos
jge
enter
cld
push
cs
pop
mov
mov
cmp
leave
sarl
cmp
std
pop
or
add
add
mov
faddp
add
imul
scas
dec
rcrb
icebp
cwtl
ret
sub
jae
lods
jecxz
jae
push
in
or
jge
addl
add
dec
inc
imul
fneni(8087
pop
daa
cmpl
js,pn
inc
pop
stos
imul
cs
cmc
adc
bound
jmp
mov
in
push
add
cmp
and
adcb
push
in
cmp
aas
shl
mov
leave
mov
gs
mov
jns
aas
mov
cmpsb
in
lea
dec
rcr
arpl
sar
adcb
sub
repz
test
pop
mov
sbb
cli
pop
outsl
into
lret
je
fwait
mov
inc
shr
lahf
jp
sub
test
fistl
adcl
jecxz
out
inc
fisubrs
test
pop
arpl
enter
cmpsl
out
mov
lods
jmp
rcrl
inc
in
xor
jae
in
push
sbb
xor
bound
sbb
fisubs
into
xor
pop
and
das
loope
jmp
cmp
pop
mov
mov
inc
cwtl
insl
addb
and
fchs
add
add
inc
lock
and
out
and
inc
lret
add
xor
test
jle
ret
sub
pop
orl
mov
add
or
fbld
push
leave
sbb
call
mov
ret
icebp
fdivs
inc
or
mov
sar
and
loopne
ret
stc
and
mov
jmp
ret
bound
test
mov
subb
mov
pop
mov
aas
imul
xchg
imul
pop
std
mov
and
mov
leave
mov
inc
repz
imul
xlat
mov
enter
jno
iret
xor
ret
rorl
fcmovnbe
mov
cmp
subb
cld
shrl
in
jmp
loope
insb
sub
xchg
push
add
cmp
pop
data16
adc
inc
and
and
loop
xor
in
mov
scas
jmp
dec
mov
lods
or
pusha
stos
inc
jecxz
mov
inc
sub
inc
ror
imul
fisttpll
enter
clc
mov
js
dec
lahf
add
jnp
push
add
pop
icebp
xor
xorl
sti
subb
sub
pop
push
add
shlb
loop
add
dec
movsb
xor
out
or
sti
cmp
rclb
mov
lret
loope
adc
dec
imul
cmpsl
mov
cs
xchg
data16
bound
jb
mov
lods
ret
enter
inc
push
test
adc
pop
shlb
rorb
cmc
push
push
nop
xchg
fldl
imul
fcom
add
divl
in
call
mov
xor
sbb
jnp
pop
fucom
push
sub
insb
push
sub
cmpl
pop
andb
xor
xchg
push
adc
fists
ljmp
push
xchg
pop
lcall
inc
scas
adc
fldcw
aad
popa
cmp
mov
pop
xchg
lret
repz
dec
in
mov
push
ret
shrb
out
sbb
hlt
xchg
dec
sbbb
pop
bound
cli
mov
icebp
push
jae
shlb
cmpsl
sbb
mov
es
rcl
xchg
add
or
fstl
sub
add
mov
xor
add
sti
cs
cmp
dec
sbb
push
clc
cmp
jp
sarl
mov
sub
mov
int3
loope
or
mov
cli
mov
inc
mov
stos
in
adc
adc
push
nop
hlt
mov
push
mov
xchg
jmp
cmc
mov
repnz
pusha
jl
sti
lret
or
xchg
dec
std
jnp
inc
mov
jno
mov
loopne
dec
jmp
je
icebp
dec
stc
mov
jecxz
out
mov
inc
stos
dec
stos
sbb
dec
mov
jb
jl
push
loop
jmp
idivb
pop
cld
fwait
sbb
push
ss
imul
js
push
repz
fucomp
fs
clc
sbbl
sbb
add
pop
cmc
negb
inc
sbb
jno
sbb
sub
dec
shl
loope
mov
repnz
loop
add
roll
sarl
pop
xchg
add
jl
clc
dec
or
adc
pop
mov
xlat
cmc
mov
cli
out
mov
ljmp
fwait
imul
cmpsb
pop
or
hlt
and
sub
push
mov
icebp
mov
out
js,pn
repz
sbb
mov
sbb
shll
les
mov
ffreep
in
mov
pop
add
cmc
stc
dec
xor
xchg
and
roll
ret
imul
xchg
or
lret
sbb
mov
xchg
aaa
mov
fistl
addr16
stos
fistpl
cld
add
ret
sub
pop
push
test
test
cmpsb
xchg
push
or
mov
movsl
push
xor
jmp
cmpsl
jne
bound
icebp
adc
mov
jge
sbb
cli
add
loopne
cs
into
fnstenv
jae
ret
mov
jg
cmp
jmp
jo
mov
mov
pop
cli
loop
inc
pushf
stos
add
cmpsl
lahf
xchg
popa
xchg
imul
or
inc
frstor
in
adc
outsl
imul
pop
cmp
orb
mov
aam
subl
sar
and
sahf
mov
notl
pop
test
scas
mov
incl
lock
roll
imul
clc
or
mov
mov
insl
rclb
into
imul
clc
pop
push
ret
aaa
pop
pop
jge
in
xchg
xchg
mov
stos
lcall
shlb
fbld
jns
xchg
mov
jns
xor
frstor
gs
clc
popa
js
jge
rcrb
repz
pop
mov
sbb
inc
push
stos
add
xchg
add
js
jp
or
in
jl
add
jns
pop
aam
ret
xchg
add
pop
jno
mov
in
out
xchg
jo
aas
cwtl
mov
mov
adc
addr16
and
icebp
dec
repz
and
cmp
sarb
testl
test
and
push
jge
sbb
mov
sahf
inc
add
call
xchg
xor
test
in
jo
fcoml
das
pushl
pop
test
pop
test
rolb
or
push
adc
mov
inc
jbe
xor
or
dec
push
push
sbb
aam
mov
xor
jbe
adc
outsb
xchg
add
dec
in
inc
imul
dec
fsubrl
sbb
mov
lods
mov
xchg
xor
into
les
movsb
inc
movsb
iret
add
cltd
loopne
add
sbb
inc
mov
adc
dec
cmp
lock
xchg
cmp
sbb
ja
incb
push
push
mov
xor
push
decb
jle
dec
lds
out
inc
jecxz
adc
mov
and
in
out
sbb
icebp
xchg
sub
xor
cmp
sti
jmp
bound
in
ss
mov
outsl
incl
sti
rorb
jne
and
movsb
bound
faddl
pop
and
mov
mov
jae
sbbl
pop
call
repz
fiadds
adc
and
sar
outsl
jo
outsl
or
pop
xchg
cltd
mov
and
jp
and
ffree
push
xchg
je
mov
clc
inc
repnz
shrl
jbe
add
fs
sub
int
test
xor
sbb
lret
je
fadd
push
add
xorps
dec
sti
or
sbb
bound
jno
aad
or
mov
and
test
add
lods
push
cmp
stos
scas
push
dec
shlb
adc
inc
jns
in
daa
dec
pop
dec
xchg
aas
xchg
lret
in
or
jae
xor
call
das
loopne
inc
xchg
shl
xchg
xor
xlat
imul
loopne
jbe
cmp
sarb
mov
dec
sbb
push
bts
shrb
xchg
std
or
test
mov
mov
in
loopne
ret
mov
scas
mov
bound
test
fisttpll
add
sbb
call
out
xor
insl
sar
sbb
jg
mov
or
out
adc
loopne
and
xchg
mov
xlat
push
mov
imul
mov
mov
mov
mov
imul
or
xchg
std
int3
scas
or
out
mov
pop
mov
pop
cmc
add
pusha
stc
adc
icebp
test
bound
cmp
shll
jmp
jge
mov
adc
pusha
cmp
flds
add
arpl
ret
sbb
shrb
cmc
jae
out
rol
xor
movsb
cmpsl
in
int
sub
jae
out
add
loopne
aad
pop
jno
lret
push
cltd
cld
mov
add
or
arpl
pop
nop
arpl
xchg
xchg
xorl
filds
sbb
inc
mov
add
pop
out
sbb
sub
std
clc
test
jno
inc
jmp
pop
arpl
cld
mov
jecxz
jle
scas
add
add
mov
inc
mov
or
lds
test
or
mov
mov
mov
dec
and
mov
dec
sub
xchg
out
in
int3
sub
mov
mov
cwtl
cmpb
mov
sub
mov
enter
cmp
jo
mov
sub
icebp
sbb
into
push
lock
clc
clc
push
imull
pusha
mov
mov
sub
dec
jo
dec
or
and
out
pop
cli
mov
stos
or
fidivl
jg
jg
mov
push
cld
es
xor
jb
and
addl
insb
int
jnp
and
addb
mov
stos
jb
filds
mov
repz
in
jecxz
std
mov
rorl
lahf
mov
mov
sub
adc
dec
xchg
rolb
mov
sbb
pop
mov
pop
not
jmp
pusha
dec
fwait
int
inc
inc
inc
push
or
jmp
clc
mov
test
sarb
xchg
roll
addr16
pop
jnp
mov
and
mov
fnstsw
aaa
and
or
adc
repnz
pusha
fstps
icebp
adc
clc
dec
insb
push
jnp
iret
lret
pop
int
jae
les
and
outsl
testl
lock
pop
adc
out
int
push
dec
addl
loope
cmp
sub
int
mov
fidivrs
mov
mov
xor
daa
pop
cwtl
ficompl
xchg
inc
mov
rorb
outsl
mov
stc
xor
adc
or
adc
aas
test
mov
outsl
stos
pop
fcompl
jnp
xor
xor
dec
int
xor
mov
int3
jae
mov
sub
mov
mov
leave
adc
stos
or
add
out
add
cmp
push
add
bound
cmp
mov
cmp
fmul
jecxz
jb
addr16
mov
xor
or
mov
cltd
xchg
xchg
sbb
in
insb
div
jecxz
fldcw
repnz
pop
sbbl
imul
scas
dec
loope
repz
dec
mov
stos
sahf
stc
xor
insl
enter
jne
or
xor
and
cmpb
sub
pop
xchg
push
cli
daa
cltd
into
in
and
and
adc
jle
clc
aas
sti
cmpsb
pusha
dec
mov
xor
loop
xlat
fneni(8087
pop
or
popf
sar
adc
outsb
or
popf
in
cmp
sarb
mov
mov
mov
addb
rcr
adc
lods
jecxz
mov
mov
in
ret
and
xchg
jge
bound
pusha
shlb
pusha
cltd
sub
pop
dec
xchg
dec
pusha
movl
pop
sbb
shll
ljmp
std
sub
push
jmp
rcl
or
repz
fs
cltd
or
test
mov
shrl
add
pusha
into
add
mov
sbb
inc
adc
adc
aaa
and
addr16
cmp
test
jmp
repnz
shll
xchg
rolb
int3
aas
rcrb
lret
enter
shl
mov
aam
mov
mov
cwtl
inc
inc
das
pop
into
test
xchg
add
pop
sarb
mov
mov
xchg
arpl
insb
call
mov
or
imul
mov
dec
add
addr16
cs
test
jmp
mov
imul
xlat
xchg
mov
fsubrp
sarb
mov
fdivrs
inc
push
int3
mov
mov
les
nop
mov
mov
mov
cmp
push
loope
cld
mov
inc
add
jmp
andl
imul
bound
mov
sub
push
fisubs
aas
lcall
pushf
mov
rcrb
add
inc
push
icebp
mov
adc
pop
pop
fwait
jno
iret
popf
fistl
xor
movsb
sbbb
mov
mov
sub
cmp
pop
shr
xchg
repnz
and
int
mov
mov
lds
out
fisttpll
jg
repnz
inc
xor
cmpsb
cmp
jb
inc
adc
ret
cwtl
cmpl
flds
xchg
sub
fbld
sti
xchg
or
shll
fcompl
and
and
repz
mov
and
fdivrs
lods
movsl
in
jb
pusha
stc
mov
rcll
pop
jbe
mov
add
mov
lcall
std
xor
jmp
repnz
xchg
popf
jl
and
fisubrs
iret
pushf
cmp
cs
loopne
sub
pusha
addr16
add
lret
icebp
enter
subb
ret
aas
fisttps
aad
add
je
xchg
adcl
adc
add
dec
cmpb
add
outsl
mov
imul
ficoms
push
adc
jae
xchg
xor
sbb
rcl
inc
addr16
ret
mov
sahf
adc
and
sti
mov
cmpsb
push
mov
and
sbb
loope
loopw
pop
lods
fwait
popf
mov
mov
aam
sub
shlb
sbb
into
inc
icebp
pop
cmp
dec
jb
std
pop
mov
subl
xchg
jmp
cmp
jmp
and
mov
mov
and
mov
pop
inc
or
sbb
ss
repz
les
mov
in
lea
insl
cltd
adc
mov
aas
mov
notl
jmp
dec
and
in
div
ret
mov
es
mov
shlb
cmp
xchg
test
insl
call
mov
and
in
test
dec
lock
dec
sub
pusha
das
mov
sub
mov
enter
inc
test
loop
jo
popf
lock
imul
push
pushf
or
sbb
push
daa
or
mov
xlat
mov
mov
popf
ret
xchg
pop
aaa
lds
mov
adc
jne
xchg
mov
mov
cltd
ficomps
mov
mov
cmpsb
pushf
std
leave
jne
out
lods
mov
std
nop
sbb
sti
sub
outsb
pop
push
dec
dec
or
pop
xchg
xor
lods
and
scas
jo
insl
sub
and
sarb
sbb
pop
loop
add
and
out
pop
mov
inc
push
repz
mov
sub
les
stc
out
jns
jmp
mov
clc
loope
nop
stc
jo
add
shlb
pop
adc
jg
mov
add
out
mov
push
icebp
mov
pop
mov
mov
icebp
lods
shlb
push
add
pop
sti
inc
sar
pushf
push
les
pusha
mov
sub
pop
xchg
fs
ret
loop
jnp
subl
push
add
push
popf
je
fsubrl
mov
popf
push
add
bound
sub
rcl
popf
fists
popa
ret
adc
iret
pop
faddp
and
clc
cmp
in
loope
push
xchg
inc
inc
push
sti
call
inc
jae
and
adc
dec
dec
pop
inc
cmp
rclb
sbb
inc
icebp
cld
movsb
fwait
clc
push
mov
and
jo
dec
sbb
insb
aaa
sub
add
lret
sbb
loopne
fbld
fstpt
stc
jno
jmp
xchg
lret
mov
cmp
cmp
and
ja
fisttpll
and
call
inc
fidivl
fs
andb
sbb
xlat
jmp
sub
dec
lret
stc
xchg
inc
ret
pusha
int
shrl
bnd
add
dec
and
daa
jb
sub
jecxz
xchg
imul
inc
mov
mov
mov
mov
push
jecxz
outsl
sub
sbb
fiaddl
add
add
push
sbb
subl
mov
scas
push
lds
xor
cltd
loop
cmp
aaa
cli
inc
xchg
mov
mov
jp
popf
orl
add
jno
out
mov
jmp
add
mov
push
adc
mov
jb
mov
cli
andl
insb
outsl
imul
jmp
loope
popa
xchg
shll
jecxz
mov
and
jl
cmpl
ret
mov
loope
xor
xor
imul
icebp
xchg
lods
inc
cmpl
adc
mulb
jp
jno
push
lea
repnz
ret
bound
jnp
int3
push
jno
add
jns
mov
ljmp
pusha
jecxz
lods
stos
add
jnp
add
mov
and
mov
xor
jae
ret
and
cltd
add
mov
jb
repz
mov
lods
inc
and
adc
xorb
cli
add
icebp
lahf
push
jg
sahf
icebp
jecxz
cli
mov
sbb
adc
loop
sarb
jecxz
pusha
imul
sbbl
or
jns
mov
cli
pusha
add
fisubrs
ret
mov
inc
xchg
adc
xor
mov
mov
mov
cli
add
fmuls
jecxz
xor
loopne
loope
inc
xorl
loopne
xor
mov
jns
mov
loopne
and
icebp
adc
xchg
movsl
imul
sbb
sub
sbb
lods
pop
pop
cmp
cmp
pop
mov
std
test
add
pop
sti
daa
in
fnstcw
mov
pusha
lret
and
js
jg
add
lret
or
jne
lea
jecxz
icebp
sub
mov
push
dec
add
or
push
adc
insb
arpl
fdivl
fbld
xor
ljmp
mov
and
lahf
lods
push
cmp
pop
inc
xchg
es
aam
into
adc
arpl
push
es
adc
dec
jo
or
popa
sbb
shrl
push
jmp
pop
mov
xor
push
cwtl
push
lret
inc
fsubs
jno
xchg
mov
pop
addr16
or
repz
aas
mov
js
push
inc
rolb
mov
xchg
push
outsl
out
aad
push
cmp
and
les
dec
sub
addb
mov
pop
add
das
std
test
sub
sub
jle
sti
xor
pop
loope
mov
rcrl
lods
dec
xor
aad
pop
jo
cmp
xchg
scas
sahf
mov
sub
insl
cmp
ljmp
leave
mov
test
dec
mov
pushf
xchg
jb
jno
fildl
push
mov
jge
lea
cwtl
sbb
pushf
sub
xor
mov
icebp
je
negl
dec
sbb
add
push
inc
std
mov
and
and
aas
test
ds
rclb
mov
leave
sub
out
mov
out
movsl
shl
int3
mov
xchg
sub
lods
stos
pop
dec
pop
xchg
pusha
mov
lret
pop
jmp
sub
and
repnz
mov
and
mov
mov
add
lret
ret
inc
ficoms
pop
dec
ffree
mov
push
jae
inc
pop
fs
pusha
jo
fcomps
ja
rcrb
test
cld
aas
push
shlb
mov
enter
icebp
pop
sbb
test
xor
push
cmp
and
mov
cmp
or
fwait
andl
inc
mov
lahf
pop
sarb
jmp
xchg
mov
les
fldcw
lock
mov
inc
push
mov
cmp
xlat
ret
or
lock
mov
pusha
insl
movsl
in
jns
int3
and
mov
pusha
inc
lret
aaa
test
movsb
xchg
ret
in
int
push
jle
pop
sub
xchg
gs
cmp
std
jb
movsb
idiv
call
pavgw
mov
or
ffree
add
std
je
aaa
sub
pop
stos
enter
pop
pop
imul
pushf
call
insl
xor
push
sub
lock
mul
in
mov
aad
jmp
cmpsl
or
mov
xchg
jo
addr16
mov
pop
stc
inc
lret
adc
inc
rol
popl
sbb
dec
les
sub
pop
pop
rcrb
pusha
mov
cli
in
int
pop
cld
dec
movsb
lret
jg
daa
and
sti
scas
bound
addl
jl
fimuls
bound
and
in
sub
repz
mov
jle
pusha
add
sub
icebp
out
and
push
pop
mov
cmc
push
int3
push
popf
sbb
sahf
add
stos
inc
idivl
imul
ds
clc
pop
mov
cltd
push
in
mov
push
mov
dec
push
jb
xchg
aas
pusha
outsl
push
and
movnti
loope
dec
sub
int3
icebp
jo
mov
jg
dec
cwtl
idivl
nop
lret
out
cld
pusha
sbb
cwtl
shl
jo
xlat
testl
dec
dec
adcb
adc
divb
jmp
inc
outsl
lcall
xor
pusha
cmp
cli
adcb
push
and
loop
cs
lock
inc
cmp
sbb
push
in
pop
movsl
roll
fisubl
nop
lahf
fs
and
sbb
xor
into
pusha
inc
pop
add
roll
bound
scas
outsl
push
pop
sahf
xlat
or
mov
cmp
sbbb
or
cmp
scas
sub
repz
fcmovne
popa
ret
jns
loopne
dec
pusha
movb
pusha
fcmovu
push
and
jb
sub
outsl
mov
mov
pop
inc
push
jns
pusha
pop
pusha
test
lret
repnz
and
xchg
clc
data16
pushl
inc
cld
adc
sbb
pusha
xor
out
icebp
pop
jbe
and
inc
fs
mov
jg
cmc
out
sbb
and
xor
dec
icebp
fisttps
arpl
xor
sbb
mov
mov
dec
sbb
cmpsl
jle
test
sbb
dec
ret
and
xchg
cmp
mov
pop
sbb
sbb
stos
std
out
mov
sarl
or
addr16
jb
lods
mov
lcall
xchg
lcall
loopne
int3
hlt
rorb
imul
pusha
daa
repnz
mov
call
sarl
add
iret
push
outsl
push
add
fdiv
and
imul
pushl
iret
mov
jg
mov
add
std
ja
push
push
repz
test
mov
and
mov
cmp
fisubrl
out
add
jb
or
mov
sti
sti
xchg
bound
arpl
dec
push
imul
and
pop
lds
sbb
fidivl
out
loop
bound
cmp
xchg
icebp
fsubrl
or
aam
adc
add
xor
sub
dec
out
iret
sub
sbb
add
pop
push
mov
shl
mov
lods
mov
mov
dec
lock
in
mov
inc
and
inc
dec
pop
jo,pn
daa
mov
inc
mov
loope
jecxz
dec
xlat
call
cwtl
fs
cmc
aad
aad
pop
inc
sbb
mov
stc
add
cmpb
ficompl
loopne
aam
shlb
sti
sub
xlat
inc
add
inc
inc
xchg
cmp
shr
jmp
mov
and
mov
mov
enter
popf
clc
push
mov
aas
inc
mov
pop
rcl
shlb
or
ljmp
lret
pop
stc
adc
jmp
popa
fwait
leave
mov
repz
int
in
orb
jns
pop
or
js
or
push
sti
fdiv
sbb
jno
fildl
xor
inc
sbb
test
xchg
xchg
xchg
mov
jne
pop
insl
lcall
pop
in
mov
pusha
lock
rclb
imull
jno
mov
sbb
shlb
sbb
outsb
or
adc
mov
adc
popf
cli
insl
mov
xchg
and
shrl
xor
adc
push
iret
incl
pusha
stos
xor
or
dec
mov
and
inc
fs
sbb
mov
jno
lret
rorb
jl
sti
pop
xor
xchg
or
out
xchg
lcall
sub
dec
push
dec
mov
inc
sub
mov
shr
inc
mov
push
rcr
push
ret
jecxz
push
mov
pop
jle
adc
and
mov
pop
cmpsl
cmp
ret
std
insb
call
ljmp
ret
out
outsl
int
ss
movl
push
pop
popf
jbe
fistps
or
aad
ss
sbb
bound
addr16
add
pop
dec
mov
xor
pop
and
pop
fbld
cmp
jge
mov
mov
fnstcw
adcl
adc
insl
shll
add
pusha
dec
cs
pop
clc
add
ljmp
sarb
loope
push
outsl
pop
adc
pushf
fwait
cmp
popa
mov
and
in
popa
pop
jns
pop
cmp
popa
inc
fs
out
or
fdivs
les
cltd
ret
push
inc
shll
sti
inc
sub
sub
pop
fcoml
je
fidivrs
mov
cs
in
out
adc
add
icebp
cmp
cld
dec
lock
rcr
or
clc
pop
lods
add
ja
adc
and
imul
sub
idiv
loopne
in
pushf
aam
pushf
pop
hlt
std
pop
mov
fsts
fisttpl
test
fbld
cmp
push
sub
mov
pop
pusha
mov
pop
popa
cmpsl
and
mov
lret
and
jns
pop
xor
in
sbb
imul
aad
loope
and
push
es
push
pushf
sti
xchg
mov
push
mov
fisubrl
push
imul
add
xchg
ja
mov
fstl
pusha
jnp
arpl
inc
divl
pop
add
jmp
add
jecxz
mov
add
push
imul
xor
pushf
dec
testl
repnz
push
xlat
test
pop
mov
and
ret
test
addr16
stos
ret
ljmp
sti
push
loop
lods
int
add
call
rol
gs
push
cmp
je
icebp
mov
sahf
loop
xorb
or
clc
inc
hlt
inc
add
pop
add
into
out
sbb
inc
add
loopne
mov
dec
roll
test
xchg
adc
int
or
lods
adc
iret
push
or
lods
inc
add
fistl
jbe
xchg
loop
imul
sar
ret
pop
cmpsl
int3
mov
bnd
in
pusha
into
scas
fdivrl
xchg
repnz
cltd
cmpsl
sub
cli
push
mov
or
pusha
inc
in
jmp
mov
loop
xchg
test
mov
and
iret
or
testb
mov
add
mov
cmp
aas
jle
int
ret
iret
dec
fmull
test
push
into
add
imul
shlb
test
xor
fnstenv
mov
mov
mov
xor
rcrl
test
into
pop
shll
xor
mov
xchg
add
out
adc
and
jns
xorb
push
cwtl
xchg
sti
jnp
and
cmp
stos
in
mov
mov
mov
aas
inc
mov
sbb
out
adc
les
jmp
int
adc
scas
out
leave
jns
mov
sbb
mov
mov
inc
outsl
sbb
rclb
xor
push
mov
and
icebp
mov
jae
inc
in
shrb
mov
sbb
shll
sub
cs
pop
mov
call
int3
mov
div
shll
ljmp
lcall
roll
jecxz
sahf
pop
in
dec
dec
mov
out
scas
adc
and
in
jae
jg
clc
shll
pusha
pop
inc
out
cs
dec
out
jp
xor
jnp
inc
movsl
cltd
ljmp
sbb
add
notb
in
dec
icebp
lret
sub
mov
jb
fbld
test
cs
pop
jp
shll
pusha
push
aas
mov
cmp
push
mov
outsl
je
cmp
push
pop
or
outsl
fildll
xorl
xchg
jno
adc
sbb
rorb
jnp
add
rcl
xor
lcall
add
push
and
add
out
adc
aad
fstps
call
mov
mov
leave
push
out
into
gs
bound
outsb
repz
scas
pop
sub
jmp
pusha
imul
adc
add
roll
repz
sarb
jne
or
xor
iret
xchg
add
scas
push
stos
arpl
imul
pop
scas
lret
inc
clc
xor
out
in
imul
inc
rcrl
out
inc
inc
lods
xchg
cs
and
mov
divb
test
dec
out
sub
pop
iret
xchg
repz
push
fstpl
xorl
jae
stos
push
push
pop
mov
aaa
mov
xor
cmp
ret
add
mov
loop
stos
ret
push
push
fiaddl
mov
adcl
xchg
add
or
inc
and
test
add
stos
sti
inc
pop
pop
xchg
enter
ret
pop
cmc
dec
sub
aad
call
xchg
movsl
mov
or
dec
cs
mov
dec
shrl
int3
or
pop
push
xor
lds
inc
ficomps
divl
cmp
in
push
shrl
pusha
push
add
stos
shlb
movsl
fisttpl
rcll
push
inc
push
mov
mov
popa
test
add
cwtl
sub
pop
inc
push
fld
out
xchg
ret
sub
sarl
lret
xchg
rcrl
pushl
out
mov
shl
clc
sar
sbb
xchg
bound
pop
pop
orl
xchg
mov
iret
and
jmp
test
cmpsb
stos
add
subl
mov
pop
divl
leave
push
enter
out
mov
mov
shll
and
sbb
movsl
add
leave
and
mov
adc
inc
movsl
loopne
fidivrl
or
test
popa
cmp
sbbl
inc
lods
shlb
into
xchg
lcall
dec
push
mov
mov
iret
cmpsl
inc
loope
stos
movsb
test
add
dec
dec
cmc
repz
cmp
lahf
xchg
dec
xor
scas
inc
mov
adc
fcomps
das
out
ss
je
test
sub
cmc
pop
add
xchg
aad
xchg
jne
xchg
stc
jmp
sti
aam
movsb
or
shl
pop
mov
pop
xchg
shll
insb
jle
xchg
daa
push
mov
in
ljmp
push
ss
pop
arpl
out
fidivl
std
fidivrl
shl
mov
push
in
jmp
in
popf
pop
xchg
es
mov
push
cmp
jecxz
push
shr
inc
jmp
outsb
pop
pop
lea
sub
inc
repz
jmp
cli
cmp
adc
or
mov
out
cvttps2pi
xchg
lret
pusha
dec
sbb
sbb
jbe
mov
cwtl
cwtl
pop
add
gs
cmpl
mov
adc
fistps
mov
icebp
cmpsl
pop
call
adc
xlat
xchg
cmp
mov
in
mov
je
add
rolb
scas
xchg
pop
mov
aam
clc
or
icebp
jg
sbb
leave
mov
iret
loop
dec
inc
xchg
shlb
js
pusha
aas
jne
dec
lock
dec
ficoms
setge
out
sbbl
push
jmp
sub
stos
mov
pop
aad
fistpl
mov
or
addl
ds
shrb
sub
or
loop
sbb
mov
aad
add
or
ret
pushf
stc
rol
imul
test
sub
xchg
push
rcll
push
jmp
outsb
inc
xchg
sub
and
shl
fstps
popf
pop
inc
push
sti
add
jmp
cmpsl
sub
rcr
sbb
in
inc
xchg
mov
mov
jnp
jae
add
and
mov
xlat
sti
fstl
fdivr
xlat
adc
cmpb
ss
hlt
in
inc
and
cmp
mov
pop
test
clc
fsubs
add
fldl
icebp
stos
bound
fsubl
iret
mov
cmpsl
mov
clc
pop
adc
mov
sub
loopne
xchg
xlat
dec
ss
jns
mov
bound
fisubrs
mov
sbb
lretw
iret
cmp
cmp
cli
lds
sar
lahf
sub
mov
xor
push
mov
int
test
pop
mov
fidivs
loopne
mov
int
push
scas
cld
aaa
bound
aam
aad
rolb
sti
fstpt
bound
mov
arpl
xor
mov
jno
push
inc
jbe
jge
stos
iret
clc
pop
lds
jnp
mov
dec
xchg
repz
sub
scas
mov
xchg
aam
out
inc
in
cmpsl
mov
icebp
inc
in
jge
mov
popa
mov
gs
nop
repnz
inc
lret
sarl
sub
lret
pop
lods
cmp
imul
andb
jmp
fucom
es
mov
lock
add
andb
call
sbb
stc
aam
les
mov
rol
pop
mov
rorb
push
leave
in
jp
mov
lds
cli
mov
push
in
mov
flds
mov
cltd
lock
mov
dec
sub
sbb
hlt
xchg
dec
std
mov
subb
cmp
jecxz
jmp
pusha
sbb
cmp
orb
aam
xchg
icebp
dec
test
cmp
add
xchg
push
mov
push
or
nop
insb
sbb
cmpsl
adc
std
push
dec
aam
mov
dec
xchg
jge
adc
xor
add
test
aad
cmp
sti
and
lret
sbb
xchg
ja
outsb
loop
dec
pop
inc
xchg
cmp
int3
negl
mov
xchg
jecxz
jne
dec
pop
out
icebp
sarl
sub
jl
pop
clc
xchg
xchg
cli
std
orl
bound
test
pop
in
xor
and
mov
imul
jbe
mov
loopne
jmp
cmp
mov
push
sub
add
fs
adc
pop
es
clc
jecxz
stos
loop
add
fisubs
cli
cmp
and
mov
rorb
aad
cs
pop
pusha
mov
jb
frstor
shl
sub
xor
popa
sar
ds
add
pop
inc
cltd
xchg
xor
gs
mov
and
mov
clc
dec
adc
dec
pop
push
mov
lock
std
inc
daa
jbe
mov
fisubrl
mov
push
mov
pop
sub
out
test
or
adc
add
rcrb
adc
sbb
xchg
xchg
dec
adc
clc
rcll
lahf
pop
mov
repz
rcl
frstor
jns
mov
and
ja
inc
inc
xor
lds
cmp
jnp
push
adcb
mov
jmp
inc
pushf
jmp
mov
mov
mov
sbb
cmp
les
iret
adcl
xor
lret
adc
xlat
leave
push
pusha
repnz
das
dec
push
and
push
fdivs
cmp
pop
mov
jno
int
mov
push
jg
pop
jnp
cmpl
adc
ret
mov
mov
sbbb
arpl
push
subb
and
sbb
fnstenv
loop
xor
addr16
jge
add
and
sub
sahf
or
lods
xchg
in
movsb
lea
push
stos
ret
scas
add
or
inc
int
sub
and
xor
mov
pop
lods
jecxz
sbbl
vlddqu
popa
lahf
cmp
inc
add
jb
cmp
movsl
ret
fcmovbe
mov
inc
bound
xor
push
add
fnstenv
loop
repz
bound
mov
je
jo
sbb
lds
bound
adc
mov
lcall
lret
inc
jle
fwait
es
test
sub
scas
mov
jo
outsl
push
clc
lret
xchg
xor
cli
sub
stos
push
loope
fcom
jp
in
fs
lds
jns
xchg
sarl
data16
ds
ret
push
sbb
xlat
jne
xchg
jb
cmp
pusha
add
jbe
mov
hlt
mov
call
push
addr16
xchg
clc
je
test
shrl
mov
shll
mov
pop
inc
out
mov
fstpt
stc
test
sbb
arpl
pushf
andb
arpl
rorl
nop
mov
jmp
and
out
cmp
lods
data16
mov
loopne
cmpsl
and
popf
add
pop
sub
sub
arpl
shll
xor
mov
aad
stos
mov
in
adc
pusha
je
incb
mov
rcll
ret
pop
push
arpl
fnsave
out
cmp
sbbb
repnz
bound
inc
push
jmp
rol
pop
out
jecxz
cmp
or
aam
in
adc
mov
push
andl
add
or
add
shrb
mov
lea
sahf
popa
mov
jp
xchg
xchg
out
adc
lea
pop
aad
loope
inc
lret
rcl
pushf
sbb
xor
xchg
pop
mov
push
fstpl
mov
inc
sbb
cmpsb
or
mov
and
filds
imul
or
iret
xor
xchg
daa
or
not
and
pop
les
decl
and
push
jge
inc
inc
sub
xchg
icebp
fdivrp
adc
sbb
std
dec
jo
mov
adcb
pop
mov
sar
add
test
nop
mov
xor
std
das
cmp
loop
fsubrl
xor
in
push
shll
pop
mov
add
pop
negl
mov
xchg
mov
mov
pop
or
cmp
jns
pop
xchg
add
sbb
movsb
fists
push
pop
xlat
inc
pop
push
sbb
pusha
xor
sar
in
sbb
movsl
cld
incb
aam
xor
lea
sbb
imul
add
fldcw
fwait
cltd
lahf
adcl
movl
xacquire
xor
ficomps
push
dec
mov
xchg
jns
mov
pushf
jb
pop
nop
jae
sti
cli
loop
xchg
sub
testb
movsl
inc
fs
mov
pop
ficoms
pop
mov
inc
subl
xchg
fbstp
mov
pop
xchg
outsl
cltd
je
cmp
rorl
roll
mov
pusha
ja
jo
out
mov
jbe
scas
push
push
cmp
mov
adc
and
mov
lock
jl
shrl
lret
cmpsb
push
inc
js
xor
stos
cmpsb
add
loop
rcl
cld
lret
or
mov
dec
and
add
add
mov
mov
int3
cmp
mov
fstps
mov
add
pop
cmpsb
inc
inc
inc
mov
in
fwait
in
rcrl
aam
negb
ret
aam
movsb
stos
mov
frstor
cmp
rcrl
hlt
in
loop
btcl
mov
subb
fs
jne
imul
into
pushf
cmp
test
push
js
movsb
ret
clc
adc
sarl
pusha
mov
push
aam
adc
inc
xchg
and
jnp
xchg
xchg
add
inc
mov
aad
mov
inc
mov
inc
jecxz
scas
stos
pop
shlb
cmove
inc
cli
dec
dec
and
cmc
mov
mov
fisubs
icebp
cmp
add
push
aas
mov
mov
test
jecxz
xchg
sub
jp
jbe,pn
xchg
push
fiaddl
in
inc
add
add
push
mov
call
mov
in
xchg
push
sub
out
sbb
jecxz
xchg
pop
mov
int
sbb
in
sbb
cmc
add
sar
dec
push
pop
xchg
push
mov
mov
sbbl
push
popa
inc
mov
fists
xchg
mov
pushf
dec
add
ds
std
xchg
in
mov
push
hlt
pop
dec
vphadduwq
or
pop
inc
out
js
push
rolb
inc
movsl
push
cmp
mov
out
les
fwait
out
andl
bound
jae
rol
lds
loopne
sub
add
into
inc
lock
sti
mov
pusha
stos
shll
stc
pop
test
add
in
or
addl
or
popl
mov
pop
loope
sub
dec
rclb
pop
pop
scas
push
sti
and
fcmovne
push
mov
cmp
ret
outsb
push
stos
pop
lock
add
xchg
pop
pop
enter
jb
outsl
addl
scas
xchg
shlb
int3
push
repz
shlb
iret
or
test
sahf
mov
fistpl
dec
scas
cmp
mov
shll
std
pop
imul
mov
iret
pop
ficoml
cmpsb
test
cs
and
sbb
cli
loope
andb
mov
mov
jb
pop
call
xorl
out
clc
shll
cmp
pusha
gs
sbb
inc
imul
xchg
pop
and
fwait
pusha
je
sbbl
push
int3
and
lret
fcmovb
filds
jne
pop
add
ret
fiaddl
std
mov
pushf
mov
mov
mov
adc
jg
sbb
ror
jg
push
or
repz
pusha
popa
movsl
ds
add
stos
mov
mov
jl
push
loop
mov
and
inc
adc
addr16
xchg
out
popf
xor
mov
mov
imul
mov
mov
jo
mov
repz
arpl
dec
es
clc
pop
cld
dec
fimuls
add
dec
jg
lods
pusha
loopne
sub
xchg
mov
pop
adc
pop
std
push
sbb
pop
addl
pusha
mov
cmp
test
adc
mov
xchg
bound
pop
repnz
lahf
stos
hlt
stc
mov
adc
test
cmp
push
sahf
mov
sbb
cmp
mov
lret
push
in
add
es
sub
lret
ljmp
sti
das
sahf
and
pop
jo
xor
inc
cmpsb
clc
lods
in
repz
push
cmp
imul
push
int3
ret
xor
lods
leave
mov
stc
mov
and
ds
adc
jb
test
pop
inc
lods
icebp
xlat
adc
pop
mov
mov
mov
loope
inc
mov
fsubrs
push
inc
fistpll
xor
in
scas
xchg
mov
gs
cmp
push
rol
adc
push
sub
mov
push
loope
fldt
std
or
test
repnz
cmc
gs
daa
aas
in
and
push
cmpb
mov
sbb
popa
test
sbb
pop
sahf
insb
nop
adc
dec
fstl
and
jb
lods
mov
bound
lret
xor
sti
jbe
or
jmp
jmp
sarb
imul
nop
mov
movsb
push
cld
mov
mov
jne
imulb
bound
inc
lret
pusha
xchg
inc
adc
jne
stos
int3
sub
adc
mov
outsl
jno
pushf
lock
popf
stc
scas
mov
push
sti
pusha
lret
loop
cld
jbe
outsb
dec
pop
fildl
icebp
scas
dec
in
pop
shll
repz
sti
nop
dec
bound
mov
sahf
mov
sub
push
fcoml
add
test
or
aas
ljmp
adc
jg
cmp
mov
push
daa
jno
std
ret
push
mov
jmp
xchg
in
pop
pop
pop
lcall
inc
or
cs
and
btsl
sbbb
mov
dec
daa
lea
dec
add
mov
or
shlb
insb
orb
pop
inc
cmp
mov
and
int
pusha
jns
mov
loope
sub
ret
dec
jne
fsts
and
cmp
faddl
xchg
mov
adc
pusha
cmpsb
in
sub
push
shl
ret
mov
loopew
adc
push
ficoml
fst
ss
cltd
insl
sahf
das
iret
fdivrs
cmpsb
jb
cmpsb
mov
aad
adcl
push
cmp
inc
sti
bound
push
sbb
insl
sbb
adc
inc
mov
xchg
insl
add
imul
idiv
sti
loope
fs
jo
roll
loope
mov
mov
insb
std
adc
stos
sbb
shll
mov
pop
push
xor
ja
and
mov
addr16
add
fisubrs
mov
andl
and
repnz
mov
addr16
rol
jns
fcmovb
mov
scas
repz
decb
dec
xor
pushf
and
inc
pop
not
jl
addr16
add
adc
mov
mov
push
mov
push
mov
dec
orl
pop
dec
jb
mov
push
mov
mov
and
ret
in
push
shrb
pushf
shll
aaa
subl
pop
shll
repz
mov
adc
sbbb
jo
cmp
int3
mov
lock
loope
mov
mov
mov
test
push
push
inc
sub
mov
shrl
pop
xor
xlat
arpl
stos
std
sti
sbb
cld
in
loope
cmc
sub
mov
ja
jno
testb
fbstp
inc
jecxz
mov
push
mov
xchg
cld
int
mov
std
test
popf
loop
sbb
xchg
addr16
nop
jo
idivb
out
pop
in
sbb
repnz
cmp
stos
mov
aaa
pop
sbb
jg
arpl
js
inc
test
bound
iret
xor
or
imul
dec
fildll
jns
test
bound
ficomps
adc
or
jbe
addr16
outsl
sti
shrl
flds
ljmp
xor
std
pop
lret
cmc
mov
addr16
add
or
popf
lcall
sub
inc
xor
std
and
push
adc
mov
add
dec
mov
xchg
movsl
movsb
cltd
and
cmpsl
stc
rcr
mov
xor
pop
sahf
lods
pop
dec
sub
sbb
adc
shll
insl
or
shlb
icebp
jns
add
pop
xor
clc
pop
bound
mov
and
clc
mov
lds
dec
shrb
addr16
lcall
fimull
int3
sbb
shl
ja
out
loop
mov
jge
out
idivl
jbe
mov
adc
mov
jae
shr
mov
repz
out
popf
inc
adc
lret
sbb
xorb
mov
inc
cs
mov
mov
dec
push
lea
ds
jmp
fwait
imul
mov
and
sub
aad
ret
mov
lret
sbb
cli
pop
aas
xchg
aas
sarb
in
nop
or
out
test
push
ret
mov
add
xor
jecxz
and
movd
mov
xor
loope
data16
add
adc
mov
cmpsl
lock
lret
pusha
fidivrs
ret
add
bound
inc
or
jb
push
loope
andl
shll
jmp
sub
scas
rcll
inc
pusha
lcall
les
dec
es
cmp
jno
pop
pop
sti
push
jl
ret
push
xchg
fwait
rolb
fcomps
ret
add
mov
sti
and
xchg
adc
stc
xchg
ds
cmpsb
clc
pusha
rcr
mov
inc
sbb
das
loop
nop
jae
mov
scas
dec
dec
lcall
add
inc
lret
xchg
push
into
dec
mov
pop
rcrb
adc
lods
cmp
std
iret
adc
xchg
cwtl
fwait
mov
ret
or
mov
or
cmp
adcb
fistpl
sbb
arpl
lcall
xchg
aam
mov
jb
imul
xor
arpl
jns
roll
out
jle
mov
cmp
dec
push
mov
cmp
inc
rcrl
mov
mov
push
hlt
cmc
add
inc
add
cli
mov
ret
pushf
xchg
mov
mov
lods
jb
pop
stos
sbb
aam
das
lock
mov
sbb
inc
mov
pop
call
xorl
fwait
mov
adc
pop
add
pusha
dec
dec
je
inc
jns
xrelease
mov
cmpsl
cmc
aas
cld
dec
push
nop
sbb
mov
push
in
add
mov
add
inc
add
arpl
mov
test
adc
out
mov
int
or
push
lret
dec
mov
mov
popf
imul
cli
mov
and
movsb
testb
bound
or
xor
mov
and
bnd
rorl
insb
fadd
push
and
mov
or
adc
aam
mov
addl
jecxz
data16
fbld
pushf
push
cmp
xchg
sbb
int
mov
js
mov
cmp
adc
out
xlat
push
pop
pop
dec
jb
scas
in
push
jns
loop
popf
xchg
push
repnz
rcr
test
lcall
pusha
pushf
hlt
sbb
jle
add
cmpsb
sti
sub
add
cmc
mov
add
stc
loope
iret
enter
or
jmp
pop
stos
adc
inc
aas
mov
mov
fdivp
xor
push
xlat
nop
sbb
xchg
inc
push
ja
push
dec
lds
and
add
out
push
addb
jbe
outsb
stos
push
scas
icebp
lcall
int
jb
jle
pop
xor
decb
pop
inc
mov
mov
inc
cld
pop
js
pop
xor
bnd
arpl
mov
int
xchg
stc
imul
dec
loop
movsb
popa
jle
sti
mov
insl
mov
fbstp
add
pop
jecxz
push
mull
ss
jl
shlb
imul
cmp
add
dec
jle
xchg
mov
lds
jmp
inc
rep
lcall
add
xor
cmp
add
jae
test
adc
ret
cmpsl
gs
lahf
lahf
jle
push
lahf
cld
sbbb
fs
and
fld
mov
cmp
mov
loop
sarb
repz
xor
jae
inc
addr16
in
lods
jae
sarb
loopne
sbb
add
repz
pop
pop
rorl
icebp
mov
in
fcomps
xchg
and
sti
xchg
stc
sbbb
cmpl
fwait
in
loopne
add
cmpsl
xchg
sub
cmp
pop
cmpl
add
fstpt
dec
fwait
stos
out
and
test
mov
pusha
scas
adc
sti
pop
ret
mov
jecxz
pusha
daa
pop
xor
scas
out
xchg
pop
outsl
mov
sub
sarl
push
inc
cmpl
and
or
mov
mov
jle
xchg
pop
ret
scas
push
aam
movsl
or
push
mov
pop
icebp
in
sbb
xlat
repnz
sti
push
cmc
mov
clc
out
jecxz
stos
dec
or
imul
adc
dec
mov
les
and
mov
xchg
cld
pop
sub
xchg
popf
sub
out
jge
cwtl
or
lcall
gs
jbe
pop
push
mov
fstl
lods
dec
mov
or
mov
fisubl
lret
int3
xor
popa
dec
mov
rcll
inc
stos
shll
fmulp
test
adc
int3
cmc
push
sub
test
lahf
scas
jns
adc
fstpt
int
sub
inc
xor
push
push
in
fistpll
jnp
xchg
movsb
sub
loope
std
lcall
repz
cmp
sub
fcoms
dec
rcll
test
loopne
shrl
or
incl
and
fnsave
sbb
mov
adc
out
lea
test
fdivr
jg
outsb
repz
jbe
call
sarl
repz
inc
shr
sti
add
xchg
fdivl
inc
mov
push
jp
xor
iret
lret
pop
mov
fnstcw
fiadds
jbe
loope
into
sti
dec
xchg
fucomip
dec
inc
rol
jns
mov
call
cmp
push
add
xor
mov
jle
dec
inc
loop
add
xor
mov
out
in
ss
pusha
or
arpl
popa
cmp
bound
nop
repz
fs
sbb
loopne
dec
inc
or
in
lcall
stc
cli
in
pop
repz
cld
xorb
or
push
xchg
sbb
int
or
in
xchg
fsubp
push
fwait
sti
orb
bound
inc
div
leave
pusha
push
mov
movsl
cltd
mov
cmpsl
ret
jne
push
and
jmp
ljmp
clc
xor
adc
fidivs
mov
sbb
sbb
mov
shll
outsb
popf
push
jno
fisubs
cli
mov
movb
dec
loop
movsl
shrl
cmp
xchg
mov
jbe
orl
out
addb
inc
dec
mov
or
add
pusha
mov
dec
jne
pop
imul
cmp
mov
jecxz
repz
aaa
dec
pop
adc
fwait
pusha
in
mov
pop
imull
push
fcompl
mov
push
clc
fbld
pusha
addr16
pop
pop
daa
loop
xor
lea
fnsave
addr16
gs
hlt
scas
push
xor
loop
adc
push
mov
inc
or
mov
jbe
sub
xchg
add
pop
cld
xchg
or
and
add
add
sub
xchg
lret
aad
or
dec
popf
mov
gs
pusha
insb
pushf
add
xchg
cltd
add
sub
add
nop
dec
mov
pop
adc
imul
cmp
mov
mov
cli
push
addr16
vpmadcswd
out
loope
es
xchg
fisubrl
mov
push
add
test
fcmovnb
lods
and
mulb
ffreep
imul
or
mov
jns
imul
test
into
jge
fwait
mov
shl
pop
das
test
push
cmp
test
mov
iret
push
jmp
pop
icebp
and
fstpl
xchg
mov
pop
jno
repz
scas
xor
and
rcll
jns
inc
repz
stc
and
ret
sub
jmp
rclb
mov
mov
xorb
shl
shr
mov
int
lea
mov
imul
int3
roll
sub
repz
stc
push
mov
stc
push
loop
test
xlat
out
out
cmp
sbb
cmp
hlt
roll
mov
sbb
rcrl
pop
or
or
mov
fstpt
pop
push
sarl
mov
or
push
mov
pusha
jp
outsl
ffree
sbb
pop
sbb
cs
and
sarl
ret
mov
xor
icebp
sbb
pop
xchg
pop
icebp
push
mov
inc
pop
stc
insb
or
xor
shlb
cli
stc
xchg
das
arpl
les
sub
stos
es
mov
cmp
mov
pop
mov
cmp
negl
sti
out
mov
xor
popf
jnp
xchg
mov
adc
adcb
mov
add
jge
addr16
mov
and
repz
push
mov
push
loopne
repz
cld
mov
adc
test
je
loope
mov
push
adc
es
jae
cmc
addb
and
add
fists
aam
add
xor
outsl
pusha
push
sahf
dec
xlat
fwait
pop
push
cmp
xchg
ljmp
mov
xchg
jp
adc
in
lea
dec
mov
and
sti
sbb
sti
push
pop
sub
push
cmp
xor
ret
aam
addr16
ret
add
fdivrl
sbbb
mov
xchg
leave
loop
daa
cmpb
fiadds
mov
mov
std
cmpsb
sarl
cwtl
shlb
xlat
aam
pop
subb
in
xchg
lret
pusha
adc
sub
aad
xor
imul
sbb
mov
out
movb
cmpsb
push
imulb
xchg
mov
int
add
add
mov
jno
imul
mov
sub
cmpsb
dec
ret
cmp
cmpsb
xor
adc
pop
jb,pn
cmp
pop
flds
lret
and
xchg
sbb
repz
sub
inc
inc
shll
cld
mov
mov
sbb
adc
push
call
js
pusha
xchg
jae
hlt
fucomip
or
sbb
pop
inc
jb
mov
shlb
adc
daa
pop
and
in
inc
in
jae
enter
lret
adc
test
in
in
out
dec
mov
pusha
mov
mov
inc
jecxz
adc
xchg
test
clc
add
mov
incl
cwtl
mov
sbb
sub
sub
out
or
and
cmpl
pusha
fs
int3
fnsave
sbbl
pop
addr16
pop
jmp
mov
sbbl
call
or
sbb
cli
mov
inc
and
push
dec
mov
xlat
cmpsb
or
jb
dec
mov
shr
lods
rcrl
fnsave
xor
xchg
test
pop
aad
jle
mov
jmp
bound
mov
addb
and
int3
mov
jp
add
bound
insl
mov
sbb
xor
js
mov
iret
dec
lddqu
add
pop
shrl
pop
and
test
pop
push
xorl
lahf
cmpsl
test
stc
rclb
popf
stos
incl
or
out
arpl
or
lahf
int
xor
mov
insl
aam
insb
pop
ja
scas
dec
dec
jecxz
ffreep
das
mov
mov
xlat
test
sbb
hlt
lret
push
testl
incb
pop
shll
sub
and
push
pusha
outsl
pop
cwtl
adc
out
xchg
jno
sub
xchg
sbb
add
pop
mov
fdivrs
push
fnsave
aad
stos
outsl
pop
push
mov
mov
out
test
aad
mov
jle
mov
inc
xor
jbe
adc
pop
cmpsb
leave
sbb
inc
jecxz
lock
testl
and
lcall
leave
pushl
repz
mov
inc
repnz
or
loope
cmp
cmp
lds
mov
icebp
dec
insl
inc
fildll
push
int
adc
sub
call
push
jns
lds
or
xchg
mov
loope
inc
std
or
popf
add
in
adc
mov
jg
pusha
test
jae
cli
subl
rol
push
mov
loop
addb
cmc
pop
mov
jo
popa
imull
jl
rol
cwtl
pop
push
fucom
push
push
and
or
or
ds
adc
jl
cltd
add
inc
inc
inc
fisttps
inc
mov
out
pop
in
adc
adc
pop
test
xchg
jns
and
outsb
xor
dec
xlat
fimull
pusha
je
inc
dec
mov
aaa
inc
mov
in
test
jge
rep
mov
ja
push
call
cmp
mov
pop
out
in
mov
inc
movsb
cmp
orl
and
movsb
pusha
or
repz
hlt
xor
int3
out
xor
andb
std
mov
imul
and
icebp
add
cmp
sbb
ja
stos
fxtract
add
mov
or
lcall
pop
sub
cli
loope
xchg
jbe
orb
pusha
fst
xor
or
mov
enter
pop
sub
iret
xchg
cmp
andb
mov
int
and
sti
cmc
add
xchg
cmpsb
push
adc
xor
enter
pop
adc
xor
inc
pop
cmp
andb
mov
cmp
mov
ja
xchg
lahf
enter
arpl
sub
dec
sbb
cwtl
hlt
jmp
int
into
sub
jo
pop
roll
pop
xchg
lret
call
jmp
sub
inc
add
lock
inc
imul
pop
adc
dec
sar
stos
adc
push
mov
std
jae
pop
xlat
adc
movsb
inc
adc
xchg
xchg
cmpsl
fsubl
outsb
fbld
jno
stos
shl
xor
sbb
push
mov
pushf
mov
mov
cmpsl
decl
inc
cmpsb
pusha
loope
xlat
add
icebp
mov
sub
shrl
xchg
scas
imul
test
add
mov
cmp
sar
pusha
xor
sbb
loope
stos
sarl
ret
mov
jg
mov
inc
sbb
cltd
clc
add
outsb
mov
js
fnstenv
jb
add
rep
jb
push
mov
cld
in
adc
cmpsl
sub
dec
xchg
mov
in
push
mov
lcall
icebp
iret
add
movsl
sti
loop
push
mov
std
testl
jge
int
inc
mov
pop
push
push
cmp
inc
inc
inc
imulb
stc
add
or
call
and
cmp
jg
xor
adc
jo
repnz
aad
popa
inc
loope
cmp
xor
cmp
in
jle
loopw
or
mov
iret
subl
data16
cli
mov
fmull
ret
inc
bound
test
int
outsb
lock
mov
arpl
pop
loop
pop
aam
inc
jne
push
add
hlt
pusha
cmpsl
or
mov
adc
and
scas
jg
adc
mov
mov
les
dec
loop,pt
sbb
cmp
test
pop
sub
add
ss
movsl
jo
xchg
addr16
mov
adc
shlb
dec
outsb
jg
sub
imul
nop
jmp
lods
pop
das
adc
lea
sub
fst
shl
mov
jae
outsl
jo
out
or
scas
inc
jp
stc
mov
pop
push
insb
icebp
mov
inc
aas
ret
push
push
mov
imul
mov
jae
int3
addr16
or
pop
dec
pop
sti
sub
sti
decl
div
jecxz
pop
xor
sbb
outsl
jecxz
call
bound
add
loopne
cli
fisttps
or
mov
jmp
pop
adc
movsb
fmull
or
jbe
mov
inc
jmp
xchg
jbe
loopne
and
xor
inc
jle
lods
popf
and
add
jl
add
iret
mov
outsl
mov
jg
out
add
xchg
inc
mov
inc
jnp
addr16
repz
jp
cmp
xor
orb
mov
add
jno
imul
pop
pop
mov
dec
pop
adc
pusha
test
pop
pop
mov
push
lea
jae
adc
xor
jno
ljmp
xchg
adc
inc
insb
insl
into
inc
outsl
jb
xorl
pop
daa
fcom
and
mov
sbb
ljmp
outsl
pop
mov
mov
stos
inc
aam
xlat
pop
stos
push
jns
repnz
or
loopnew
sbb
cmp
ret
mov
enter
rorl
adc
lods
inc
out
int3
jle
xlat
dec
xor
or
jns
cmpsb
cmpsb
xchg
mov
imul
mov
ja
mov
repnz
xchg
and
pop
sbb
cmp
xchg
arpl
orl
pusha
ljmp
test
add
sbb
adcl
cmpb
mov
sbb
punpcklbw
jmp
movsl
loopne
pop
pop
dec
jnp
sahf
lock
js
test
shll
addr16
sub
call
add
dec
ss
cmp
leave
insl
ret
stc
sub
outsl
fst
xchg
dec
sti
loopne
shl
inc
arpl
or
das
jb
int
lods
pop
push
mov
out
dec
pushf
push
or
push
mov
dec
pop
jnp
xchg
loop
fadds
add
xor
push
and
in
int
or
lock
mov
pusha
jg
mov
aad
dec
arpl
jbe
inc
push
lret
mov
xchg
sub
sti
psrlq
sub
pop
imul
int3
flds
popa
pop
rcr
fucom
xor
stc
xlat
lock
mov
cmc
push
sar
cmpsb
add
lret
pusha
call
mov
xor
daa
jp
mov
pop
and
cmp
outsl
sbb
loope
jecxz
sub
lock
and
xchg
pop
mov
mov
rcr
xchg
and
addl
shll
dec
arpl
xchg
faddp
sbb
dec
mov
hlt
adc
mov
add
add
cmp
dec
sbbb
jmp
mov
jns
xor
andb
cld
sbb
out
mov
add
cmp
or
test
in
adc
mov
add
repz
ja
mov
add
testl
fstl
fwait
add
adc
nop
clc
shrl
adc
and
aad
loope
mov
enter
enter
jnp
outsb
xor
lcall
dec
scas
add
or
lock
xor
ror
push
xchg
out
add
or
jl
adc
pop
adc
jle
inc
sar
jnp
push
xchg
lock
sub
cmp
scas
push
loopne
pusha
out
lahf
jnp
mov
lret
lcall
xchg
fmuls
testb
orb
add
dec
mov
pop
push
xchg
data16
stc
add
mov
arpl
mov
pop
punpckhbw
or
push
in
in
mov
pusha
pop
mov
lea
fnsave
mov
in
addr16
repnz
stc
inc
scas
pop
mov
imul
push
cmc
and
bound
lods
pop
outsb
in
fiadds
dec
shl
in
push
clc
iret
scas
outsl
mov
mov
and
sbb
lret
enter
clc
sub
jg
mov
ficompl
push
mov
push
jmp
mov
mov
dec
sbb
xor
cs
push
inc
mov
add
lret
sbb
repnz
mov
mov
sti
inc
adcl
mov
cs
jl
inc
add
add
imul
jmp
xchg
pusha
lods
movsl
cli
ffree
or
pop
sub
sbb
out
dec
pop
nop
pop
mov
push
fdivr
pusha
inc
adc
dec
xor
in
push
push
sub
push
idivb
out
jecxz
lds
inc
sarl
cs
test
rorb
and
adc
ret
aam
aad
ficompl
les
xchg
enter
xlat
lods
jae
jb
add
bound
sub
faddp
xchg
pop
addr16
int
out
mov
es
subl
mov
in
aad
mov
jno
sub
mov
xchg
xchg
fsubl
cmpsb
jmp
in
cltd
or
xchg
push
cmp
pushl
adcb
mov
jle,pt
jne
mov
and
test
sbb
inc
popa
mov
jno
mov
cld
cld
or
jmp
sub
or
movsl
mov
inc
mov
aaa
sti
js
stos
lahf
mov
mov
inc
lret
out
adc
in
repz
push
jae
outsl
pop
in
loopne
idivl
lret
adcl
fisubrl
or
pop
call
inc
js
enter
mov
push
dec
sbb
ror
xchg
lods
pushf
push
adc
jecxz
pop
addr16
rorb
adc
repz
or
std
lcall
push
insl
or
push
stos
ja
insb
cmovp
ljmp
mov
aas
jo
mov
push
mov
dec
imulb
mov
xchg
ror
into
mov
mov
xor
clc
test
cmp
aaa
cltd
stos
mov
fistpll
or
adcl
or
iret
jl
or
lods
clc
icebp
add
imul
leave
fucomp
out
enter
pop
jno
mov
jg
pop
push
adc
lcall
fld
cwtl
dec
push
inc
push
addr16
mov
jg
jecxz
push
fidivl
mov
mov
pop
adcb
aaa
push
mov
mov
xchg
bound
roll
mov
or
lcall
xor
addr16
xchg
pop
push
mov
mov
test
xchg
sub
push
jo
cmp
pop
test
je
mov
xchg
adc
xor
repz
lods
and
sbb
pop
add
pop
jae
iret
or
cmc
mov
mov
sub
rorl
js
shll
pop
test
cmp
pusha
or
pop
inc
push
fcmovbe
xchg
out
dec
bound
mov
mov
mov
xor
mov
lods
leave
lods
push
aam
mov
mov
mov
cmp
rorl
pop
push
clc
lock
maskmovq
testl
push
mov
sbb
jo
repnz
add
shrl
push
jnp
dec
mov
jae
sub
dec
inc
out
shll
dec
rclb
mov
loope
clc
jge
sbb
xlat
movsl
cltd
adc
ret
jb
lret
cmpsb
std
push
imul
xlat
aam
xor
repz
pusha
fadd
sub
out
adc
inc
imul
aad
jns
sahf
stc
pop
in
roll
mov
mov
repnz
sub
push
jnp
scas
adc
jmp
fbld
push
ret
movsl
pusha
dec
pop
dec
sti
sub
ds
cmp
lods
mov
xlat
cwtl
test
sti
sbb
aam
mul
loop
das
adc
mov
add
sbb
gs
rcll
addr16
adc
dec
scas
mov
mull
hlt
pop
mov
int
and
mov
fsubl
add
cmp
mov
roll
test
stos
sub
psubw
dec
fildll
cwtl
xchg
imul
fbstp
jbe
cmp
jge
outsl
je
stos
aas
ficoml
into
outsl
jmp
shll
pop
jo
fstpl
sbb
or
push
sub
movsl
aaa
jle
dec
jb
sub
inc
repnz
sbb
and
scas
loopne
loopne
sub
js
xchg
adc
out
roll
popa
sbb
sub
mov
lret
mov
push
cmp
mov
jl
jecxz
jnp
mov
jns
cltd
scas
jecxz
add
rcll
je
aad
mov
in
fcmovbe
sti
or
push
jb
movb
call
pusha
test
bound
dec
dec
out
xorb
pusha
insl
arpl
cs
push
xchg
cmp
stos
mov
sahf
mov
mov
cli
hlt
les
adc
pusha
pop
repnz
xchg
mov
iret
adc
loop
in
sti
fistpll
jp
lahf
dec
mov
mov
cltd
pop
inc
and
imul
mov
mov
addr16
xorl
pusha
push
dec
cmp
stos
and
stos
mov
sub
add
test
mov
in
out
xchg
jmp
je
xlat
stos
dec
mov
push
out
aas
mov
int
sbbb
cltd
ljmp
sarl
dec
rclb
int3
mov
shlb
shr
pop
mov
std
xor
int
pop
loope
add
loop
sti
lods
add
pop
ja
and
push
iret
and
imul
mov
xchg
inc
mov
negl
stos
pop
sub
mov
push
into
fbstp
cmpsb
mov
xchg
sbb
cmp
pop
xchg
test
popf
cmpsb
mov
aas
adc
and
jge
cmp
or
faddl
cld
pop
arpl
mov
sbb
insb
mov
ret
stc
testl
jp
sbb
and
jecxz
xor
add
cmp
cmp
jge
xor
push
push
pop
pop
adc
loop
add
add
sti
mov
cmpsb
movsb
sti
xchg
lods
lret
negl
ror
mov
xchg
into
aad
inc
sbb
jnp
insl
push
test
push
add
mov
jl
imul
xchg
dec
jo
sahf
loop
sub
imul
loope
aad
mov
sub
orl
adc
roll
cmpsb
sub
ret
adc
stc
xor
stos
pop
outsl
sahf
cmp
push
sbbb
cmp
fsts
lods
adc
mov
jmp
inc
mov
mov
sarl
stos
mov
mulb
inc
mov
pop
movsl
adcl
sub
jnp
xor
dec
xor
pop
sbb
mov
mov
shrb
dec
pop
mov
add
sub
orl
imul
dec
outsl
xchg
lcall
iret
dec
or
xor
pop
xchg
adc
pop
xlat
cwtl
loope
aam
gs
pop
mov
in
pop
xchg
in
ret
dec
int3
hlt
pusha
sub
fmulp
je
mov
xor
test
mov
call
movsb
cmp
mov
loope
push
xorb
and
icebp
bound
in
sbb
loop
fisubrl
dec
xchg
pop
loope
dec
sbb
ret
push
cli
idivl
push
enter
adc
push
xchg
pop
dec
sub
cld
pusha
sbb
mov
bound
in
fisttpll
clc
lahf
push
jge
jg
pop
add
ret
adc
outsl
pop
push
mov
pop
xor
bound
packuswb
popf
pop
mov
sti
mov
je
xlat
mov
mov
jg
cmp
aam
jmp
mov
adc
or
addr16
sub
and
pop
test
test
adc
sub
shlb
and
xchg
inc
xor
movsl
mov
or
rcr
test
pop
out
insl
jb
movsb
roll
adc
popa
mov
and
mov
leave
mov
inc
ds
mov
loope
dec
imul
dec
js
pushf
inc
mov
inc
cmp
int
repnz
inc
pusha
nop
or
xchg
cmp
xchg
in
push
adc
movsl
addl
aad
jp
push
iret
cmp
negb
add
xor
mov
popf
and
mov
sbb
add
sbb
pop
js
mov
pop
fcomps
sbb
in
add
je
mov
or
sarl
bound
repz
loopne
icebp
mov
mov
fstl
adc
roll
js
xlat
ljmp
and
lea
add
pop
mov
inc
das
cmc
pusha
stos
mov
pop
andl
shrb
mov
or
mov
dec
das
add
cs
xchg
cmpsl
sbb
mov
push
jae
aad
cli
or
xor
in
leave
fistps
mov
movsb
scas
loop
mov
dec
dec
out
or
xchg
aaa
movsl
addr16
scas
inc
repz
sbb
int
out
dec
mov
add
sub
xor
pusha
add
test
pop
divb
lods
ret
repnz
jne
pop
rolb
cmp
pop
mov
pop
jg
imul
jecxz
fstpl
pop
andb
nop
jmp
pusha
pop
inc
enter
test
aad
jb
add
push
stos
push
sti
and
xlat
sub
andb
and
jmp
fisttpl
mov
mov
push
stos
pop
and
fsubs
adc
icebp
pop
jae
mov
cmc
loopne
imul
jl
push
push
mov
mov
lret
out
out
fistl
mov
out
ds
repnz
movsl
dec
pusha
stos
filds
ret
jae
imul
adc
rol
lret
repz
mov
aad
add
pop
mov
cmp
inc
mov
push
popf
pop
idivb
movsb
sbb
xchg
push
xchg
outsl
mov
adc
outsl
mov
shl
js
or
xor
ja
pop
lret
mov
pop
push
jg
repz
mov
in
push
lods
inc
sbb
push
lods
sahf
fdivrp
xchg
adc
add
insl
cmp
jecxz
add
popa
adcb
in
inc
in
les
pop
pop
in
pop
push
data16
push
das
lcall
xchg
sbb
jbe
popa
notl
mov
mov
xchg
dec
jp
jbe
sbb
stos
ja
ret
mov
pusha
cli
dec
cmp
dec
mov
push
iret
xor
lods
push
jmp
dec
fstl
ds
jnp
push
sub
ljmp
mov
hlt
jno
sub
das
lea
push
mov
xor
mov
push
lcall
xlat
fcomps
and
and
addl
jae
xchg
out
mov
int
xchg
sub
pop
enter
dec
arpl
dec
mov
pop
movaps
xchg
popa
adc
bound
dec
in
pusha
sti
adc
jecxz
shrb
inc
movsb
int3
das
shll
imul
mov
icebp
and
mov
mov
cli
aas
xchg
and
mov
or
js
xlat
lds
rorb
cmp
in
xor
cli
or
call
ret
dec
rcrl
addr16
inc
lods
in
pusha
idivl
xor
stos
xor
mov
push
addr16
jns
sub
lods
add
jecxz
cmp
mov
adc
adc
fdivr
push
js
lret
shll
stos
mov
mov
enter
adc
out
fcoml
pop
es
call
jp
and
dec
scas
mov
push
cmp
lea
lcall
out
cmp
arpl
jns
nop
rcrl
pop
push
sbb
iret
lock
dec
adc
mov
jmp
and
mov
fcomp
push
sub
mov
pop
add
negl
cli
aad
aad
xchg
adc
sti
dec
sbb
ret
inc
out
pop
enter
cmp
aas
jge
cmp
cmc
inc
push
popa
xlat
ret
pop
push
mov
xchg
aad
shlb
stc
gs
push
xchg
scas
ret
gs
mov
test
or
push
push
cmc
fisttpl
loop
push
out
add
mov
movb
test
mov
add
push
xor
hlt
cmp
dec
cs
ljmp
pop
mov
add
leave
lret
or
repz
sub
insb
push
adc
outsb
in
sbb
out
adc
ja
pop
xchg
add
lahf
je
outsl
lock
xchg
scas
jge
mov
ljmp
clc
repz
out
jl
enter
or
repz
sti
repz
loop
xchg
jg
fcom
add
jmp
xchg
cmp
ds
lods
pop
mov
pop
mov
aad
ss
stos
dec
jns
clc
rcrl
dec
cmpsl
in
jle
add
adcb
int3
mov
jae
icebp
inc
add
xor
adc
mov
insl
mov
into
add
movsb
addb
outsl
inc
adc
addr16
add
add
jge
movsb
inc
dec
std
push
pop
mov
repz
sbb
xchg
mov
iret
fsubl
subb
cmpsl
pop
push
cmp
dec
fwait
push
daa
add
hlt
bound
mov
lods
adc
repz
push
ret
in
outsb
cmp
cmp
mov
adc
cmp
dec
xchg
mull
xor
push
addr16
mov
and
pusha
inc
into
jge
scas
lods
inc
pusha
outsl
mov
inc
movb
loopne
fstl
or
push
rcr
into
cmp
call
push
cmp
subb
sti
js
repz
outsb
add
popf
sbb
cli
jnp
xchg
sbb
xchg
mov
and
addr16
pushf
jne
pop
mov
test
rcll
rclb
cmp
test
push
cmp
mov
mov
xor
adc
sub
fmuls
in
out
data16
test
repnz
inc
sub
push
shl
int
add
xchg
outsb
and
add
jae
mov
sbb
mov
andl
mov
in
outsl
cmp
jl
mov
mov
mov
mov
push
mov
add
mov
pop
mov
sar
mulb
sahf
cwtl
add
cld
ljmp
push
call
or
imul
push
xchg
add
xchg
or
aam
gs
and
mov
mov
add
xor
ret
int3
ja
je
ficoml
or
sub
lahf
imul
insb
jl
pop
dec
fldcw
pusha
dec
mov
mov
mov
mov
je
push
sbb
mov
in
mov
xchg
aam
dec
push
dec
and
outsb
xchg
sti
sub
jl
mov
add
xchg
xchg
aad
sti
inc
pop
iret
push
ficoml
leave
js
xchg
xor
insl
mov
xor
jae
arpl
aaa
mov
cwtl
cmp
pop
mov
push
pushf
mov
bound
and
shlb
icebp
repz
dec
lahf
stos
mov
jno
jne
lock
mov
push
outsl
xor
in
xor
clc
xchg
jl
xchg
out
bound
fcompl
adc
jns
jno
xor
mov
mov
xlat
std
inc
arpl
sub
xor
jecxz
sub
sub
popf
jnp
inc
sub
andl
loope
lret
setle
in
out
sar
xchg
or
stc
pusha
mov
mov
rcll
sbb
jmp
adcb
inc
xchg
mov
dec
fildll
mov
rorl
bound
aam
cwtl
shll
scas
pop
cmp
push
loop,pt
in
test
mov
int3
aad
sub
test
adc
cmp
insl
xor
stos
xchg
mov
popf
sti
pusha
lock
pop
outsl
cmp
xchg
push
mov
mov
repnz
stc
lea
push
mov
cs
xor
cmp
inc
bound
outsl
fistps
icebp
stc
or
dec
cmp
sbb
xor
pop
push
leave
jge
pop
or
bound
pop
insl
inc
or
cli
test
mov
and
ss
sbb
jmp
gs
cli
xor
loop
mov
sti
adc
xchg
and
push
sbb
xor
sbb
das
mov
ss
fwait
sbb
jae
or
mov
es
int
in
ljmp
add
add
or
push
subps
and
stc
xchg
pop
inc
sar
mov
ficoms
and
ffreep
pop
cmp
cmp
aad
inc
adc
mov
push
add
jne
icebp
sub
imull
adc
mov
jno
fildll
mov
sbb
outsl
orl
inc
sti
mov
push
stos
mov
mov
mov
test
sti
pop
xchg
and
push
xlat
add
insl
sub
inc
jnp
mov
pop
push
adc
dec
cmp
mov
daa
fsts
add
adc
test
out
push
imul
insl
repz
int
pop
scas
inc
mov
jnp
popf
mov
icebp
adc
jo
leave
mov
imul
mov
and
xor
daa
mov
sarb
cmpsb
movsb
xchg
inc
fldenv
xchg
mov
lock
repz
je
out
pusha
push
hlt
aad
jno
loop
cwtl
mov
mov
or
cmp
leave
pusha
jecxz
aam
or
inc
mov
adc
fimull
cmc
mov
pop
nop
mov
test
jo
jle
pushf
outsl
dec
jne
lcall
loopne
add
add
pop
iret
or
in
mov
mov
sbb
inc
outsb
mov
aaa
jp
movsl
repnz
sbb
mov
jge
sub
xchg
pop
mov
mov
xchg
pop
cwtl
and
push
jp
sbb
dec
mov
fwait
outsl
cld
or
inc
jecxz
xor
mov
fiadds
in
loopne
xchg
cli
imul
cs
ss
mov
mov
jae
fbld
inc
sub
adc
jp
adc
fcompl
fisubl
push
mov
and
ret
cmpsl
xchg
movsl
cli
out
jl
iret
sub
les
dec
sti
jp
and
add
mov
xchg
inc
mov
dec
cmp
lods
insb
popa
imul
mov
sbb
xchg
push
rcrb
mov
ja
mov
mov
data16
push
enter
jl
sub
movl
add
pop
push
dec
sti
cmpsl
arpl
int3
dec
and
stos
fwait
divl
fucomp
std
insl
andl
sub
xor
mov
repnz
orl
jns
pop
repnz
ja
mov
mov
sub
jecxz
mov
mov
xor
lea
or
icebp
out
cwtl
sub
ja
loopne
cmp
pop
or
ret
mov
adc
ljmp
idiv
das
in
push
popa
xchg
or
add
ret
fimull
ret
sti
cmp
xchg
mov
sub
inc
mov
shll
in
into
int
push
xchg
out
mov
loope
stos
sti
inc
inc
scas
lods
push
pop
jo
dec
add
mov
subl
or
sahf
jmp
xchg
jno
aad
call
add
or
into
pop
fdivrs
mov
decb
cld
ja
xchg
or
add
cmpsl
aad
sbb
mov
fiaddl
sbb
lcall
dec
cmp
sarl
sbb
xlat
adc
cmpsb
push
adc
mov
pop
add
adc
faddp
test
xchg
pusha
mov
test
sub
mov
jg
pusha
xchg
pop
repnz
sub
test
stc
push
in
nop
inc
push
jmp
push
in
push
pop
pop
cwtl
xchg
sbb
bound
xchg
xorb
mov
imul
subb
jb
pop
xchg
ret
mov
mul
loopne
lea
or
mov
or
bound
mov
xchg
push
popa
mov
inc
jb
lret
or
cmpb
pusha
pop
pop
loope
push
movsl
leave
cmp
dec
into
nop
enter
cli
jno
addr16
outsb
and
ret
movsb
cmp
dec
insb
pusha
cmpsl
fdivl
add
xor
jl
and
pop
imul
add
loopne
sti
jo
gs
xor
or
xchg
cmp
cmp
repnz
pop
mov
cmp
dec
sahf
lcall
addb
outsb
mov
cs
xor
mov
lret
aad
repnz
xor
mov
pop
icebp
leave
inc
popf
sar
loop
cmp
ljmp
arpl
add
sti
xchg
xlat
mov
sub
cmp
shlb
dec
pusha
xlat
inc
mov
mov
frndint
mov
dec
loope
dec
jbe
andb
adcl
call
dec
aam
ficompl
leave
pop
jae
jl
xchg
orb
mov
mov
int3
orb
and
sub
add
cltd
jg
rol
lock
into
repz
stos
loope
pop
outsl
mov
pushf
add
mov
jecxz
xor
ds
in
push
cmp
leave
push
fildll
cmp
adc
sti
cltd
push
pop
push
inc
dec
push
mov
repz
mov
sbb
lret
pop
push
scas
xchg
pop
sbb
rclb
mov
rol
in
or
push
icebp
push
mov
jo
mov
mov
lea
lods
loop
fistpll
push
call
pop
add
inc
pop
jns
adc
add
out
fbstp
xchg
orb
lock
pop
xchg
mov
or
cmpsl
or
adcb
or
stos
bound
mov
movsb
inc
sbb
popa
repz
imul
popf
pop
aaa
stos
lcall
ds
cld
add
call
inc
xorl
loopne,pn
pusha
movsb
fcmovb
insl
popa
pop
add
iret
aam
hlt
or
addr16
inc
push
pop
dec
mov
cmp
dec
or
pop
lock
stc
mov
es
pop
xor
repnz
pop
inc
dec
mov
icebp
cmc
dec
loopne
mov
addr16
cmp
inc
pop
mov
lret
inc
imul
add
fcmovne
xor
gs
cmp
cmp
jl
jo
shl
jg
in
sub
das
cli
and
jge
adc
insl
rol
leave
aaa
fwait
mov
xor
sti
or
stc
mov
pop
fldcw
pop
sub
xlat
dec
sub
push
in
or
inc
hlt
push
rolb
xor
loope
mov
mov
sub
nop
xor
arpl
xchg
or
push
mov
ds
sbb
push
pop
mov
sti
repz
adcl
add
lret
mov
pusha
rcrb
dec
arpl
lods
xor
mov
mov
inc
lea
out
inc
std
sbb
sbb
mov
or
sbb
push
push
xchg
adcb
dec
push
stc
ror
pusha
dec
stos
dec
jae
xlat
rorl
stc
pop
sub
lcall
repz
push
mov
sub
jae
inc
xchg
mov
sbb
in
popl
push
mov
outsb
call
mov
mov
jno
stc
in
lds
mov
inc
xchg
mov
out
or
mov
mov
cmp
outsb
imul
mov
arpl
pop
push
mov
xchg
cltd
mov
mov
or
adc
jl
cwtl
subb
icebp
push
jns
mov
mov
rcrb
pop
cmpsl
adcl
int
insl
data16
mov
jae
xlat
jmp
bound
mov
cltd
mov
pusha
mov
mov
dec
xchg
lock
inc
cmp
lcall
insl
fstpt
inc
cmpsb
cs
popa
out
mov
bound
imul
mov
in
ds
shrb
in
xchg
xor
clc
loope
and
stc
call
shlb
lock
mov
inc
xchg
arpl
movl
jo
mov
push
ds
hlt
jge
mov
ffreep
mov
fcomip
cmpsb
mov
in
js
dec
push
jne
es
stos
aam
and
pop
fst
mov
dec
jbe
lods
pop
mov
shll
negb
scas
dec
lcall
pop
movsl
sarb
xor
xchg
push
and
xchg
fnsave
pop
lret
adc
pop
out
pop
add
or
cmpsb
popa
psubb
and
loope
aad
rcrb
inc
xchg
fprem1
sub
mov
add
pop
int3
fisubrl
jecxz
push
add
loope
movsl
jb
imul
xchg
push
dec
loope
ret
or
adcb
test
add
sub
cld
jns
sub
adc
or
add
cmp
in
pusha
mov
inc
xchg
aam
xchg
add
pop
icebp
pusha
lcall
shlb
repz
test
aad
cmpsb
mov
adcl
call
pop
xchg
stc
cmpl
mov
movsl
sub
aaa
pop
add
hlt
arpl
scas
gs
repz
hlt
sub
and
int
jmp
xchg
xchg
xchg
sbb
inc
and
cmp
addr16
jo
adc
push
xor
test
pusha
int3
shl
cmp
lret
fbld
xlat
xor
jmp
shll
out
bound
je
popa
mov
push
stc
icebp
fimull
imul
movsl
outsl
jp
pop
pop
jo
inc
pusha
jbe
push
push
and
dec
imul
push
add
daa
data16
lods
jg
sti
add
aad
cld
xchg
imul
and
cmpsl
pop
xor
push
pop
jg
mov
rol
push
pusha
ljmp
xlat
pop
roll
out
push
jb
mov
add
test
pop
sbbl
add
mov
int
scas
stos
sbb
dec
dec
mov
cmp
lods
enter
popa
aaa
movsb
lods
cmpsb
orl
enter
aam
rorl
mov
out
fldl
nop
mov
cmp
movsl
xor
push
sbb
scas
add
dec
jb
mov
fsubl
mov
pop
jb
lods
dec
cli
jnp
stos
dec
stos
mov
inc
test
mov
mov
jp
ret
out
xor
and
dec
mov
sub
repnz
clc
mov
stos
aaa
data16
inc
popa
ficoms
cmp
inc
je
dec
xchg
pop
mov
scas
and
or
scas
sbb
and
out
push
test
leave
xorb
fistps
xchg
stos
shr
stos
cmp
lahf
fxch
jp
mov
cmpsl
mov
mov
filds
mov
mov
jo
mov
jo
cmp
out
mov
sub
test
call
nop
into
aaa
cmp
dec
ret
into
jl
faddl
push
dec
out
inc
dec
incl
int3
lds
jnp
nop
stos
add
leave
ret
xor
inc
pop
push
cltd
push
adc
sarl
es
mov
out
fildl
mov
xor
mov
xor
out
mov
xchg
pop
push
inc
push
scas
clc
ljmp
lahf
fucomip
clc
test
dec
dec
repnz
push
cmpsb
cmp
bound
dec
fdivrl
icebp
scas
fisttps
aaa
rorl
pop
div
sbb
outsl
mov
mov
mov
jno
fisttpll
cmp
lea
fildl
loop
jno
repz
lret
xchg
jns
icebp
nop
mov
stos
icebp
push
or
lcall
bound
faddl
dec
out
and
addr16
pop
sbb
popa
add
rcl
loop
popf
add
mov
jmp
scas
add
mov
test
loope
jno
xchg
pop
aas
cmp
jle
inc
fsubp
or
mov
fnstsw
es
inc
pop
mov
sbb
mov
lods
mov
or
mov
lret
in
in
out
cmp
push
rcrb
mov
pop
aad
in
mov
add
dec
push
xlat
pushw
xor
imul
repnz
das
and
sub
add
add
stos
jl
es
ret
test
inc
insl
shrl
movsl
sub
sub
mov
xor
ret
pusha
daa
pop
mov
sub
movsl
push
cmpsl
adc
cmp
iret
std
add
jnp
adc
iret
jecxz
sbb
insl
jbe
pop
jp
int3
xchg
adc
scas
cli
mov
shlb
and
fiaddl
mov
ret
inc
xchg
push
fbld
fdivl
jp
mov
iret
repz
add
lock
popa
movsb
std
xor
imul
xchg
ficoml
addb
pop
lret
aas
sub
cmp
test
iret
loop
mov
mov
aad
pand
testb
sbb
clc
xchg
cmp
jle
mov
push
pop
mov
mov
push
dec
pop
jo
ljmp
dec
push
int3
sarb
loop
mov
push
cld
clc
bound
adc
xchg
add
bound
xor
jge
mov
inc
bound
or
add
stos
shll
push
outsb
adc
dec
fidivl
dec
and
mov
mov
jbe
or
loope
cmp
mov
mov
bound
lret
fcoms
scas
aam
fsts
aas
cmc
inc
mov
ljmp
pusha
cli
adc
mov
rcr
mov
test
loope
cld
lods
add
mov
out
call
mov
and
jmp
js
lods
test
xchg
sub
pusha
xchg
je
lret
pusha
sahf
inc
mov
inc
push
jnp
xchg
and
mov
add
stos
lods
stos
pop
dec
fwait
jge
sbb
gs
pop
mov
adc
adc
leave
iret
leave
call
sbbb
add
frstor
popa
mov
mov
dec
push
arpl
sub
dec
push
mov
adcb
ret
insb
lds
popa
and
mov
loop
add
movsl
sarl
push
sbb
sbb
shl
rcrb
jnp
sub
and
addr16
nop
fcmovnu
fdivl
pop
dec
or
inc
fcmovnu
push
imulb
sbb
or
loopne
arpl
dec
out
push
imul
mov
sub
pop
aam
mov
out
orb
sbb
sbb
in
dec
inc
repnz
out
sti
mov
push
cmpsl
adc
int
fcomps
mov
xor
stc
pusha
ror
repz
fisttpl
cmpsl
push
loope
inc
cmp
sub
cmp
inc
add
sti
sahf
mov
jg
rcrl
test
shl
outsl
test
loope
mov
sti
add
bound
addb
rolb
jg
fiaddl
sub
xlat
pop
push
push
sbb
int
dec
in
fbld
push
cs
mov
or
xchg
pop
rcl
cmpsb
bound
mov
add
push
fcomp
add
mov
pop
sub
inc
dec
out
push
ret
xor
negb
adc
cmp
pop
in
mov
test
pop
icebp
push
ret
pusha
mov
outsb
mov
jmp
fdivs
jecxz
into
push
std
fldenv
imul
or
popa
lea
mov
xor
and
or
negb
jns
popa
out
pop
aaa
testl
sub
pop
jns
shll
mov
and
jo
jp
sub
and
ljmp
lods
jno
fidivl
pusha
test
add
xor
xchg
imul
rcrl
push
in
cs
sbb
xchg
cmpsl
sarb
mov
cld
and
pop
or
and
out
sbb
call
aam
add
add
and
stc
enter
add
jmp
jne
add
std
je
popa
les
mov
adc
cltd
mov
inc
imull
add
mov
sub
xchg
sub
and
cmp
jb
mov
dec
fdivs
pusha
mov
fsubrs
jb
cmp
mov
mov
cmc
ret
dec
mov
adc
or
cmpsl
pusha
ds
push
into
leave
dec
lret
int3
and
mov
xchg
add
add
jmp
mov
cs
jns
jns
sbb
jp
xor
int3
pop
cmpl
mov
sarl
add
ljmp
mov
std
arpl
das
push
in
sub
sbb
xchg
and
xor
outsb
mov
aad
pop
or
fisubrs
pop
xchg
dec
and
mov
mov
add
fwait
leave
in
pop
scas
add
push
fldenv
pop
and
fsubl
adc
mov
aad
pop
jbe
inc
cmpsb
mov
pusha
loop
cmp
mov
daa
bound
and
pop
sub
int3
imul
mov
popa
mull
inc
mov
cwtl
add
ret
in
xchg
push
leave
lret
jnp
mov
shll
pop
dec
sarb
fldl2e
aad
mov
mov
imul
and
movsl
cwtl
xorb
fld
mov
add
cmpsb
jge
out
mov
and
loop
cmp
enter
ljmp
push
inc
pop
push
gs
mov
xor
mov
dec
addr16
xchg
sti
js
imul
out
out
mov
jp
inc
mov
lods
repnz
lods
adc
mov
test
rol
pop
in
xchg
out
gs
mov
sub
sbb
cmc
xchg
sub
xor
sub
cld
mov
inc
mov
lcall
out
cmp
je
cmpsb
ds
inc
xor
sti
lahf
ss
rcrl
xchg
mov
lea
paddsw
loope
jmp
aas
fisubrs
aaa
pop
sbb
lds
ret
mov
inc
push
lock
stos
pop
sub
pusha
scas
int
fst
mov
and
jb
mov
xchg
jae
inc
dec
nop
loope
sub
pop
sbb
pop
aad
popf
test
mov
andb
fmul
dec
jmp
jno
fprem1
fucomp
outsl
xor
pop
pusha
pop
sbb
pop
je
sbb
or
pop
mov
pop
xlat
int3
mov
mov
ja
bnd
mov
mov
pop
push
pop
mov
xchg
imull
pop
sarb
shlb
rclb
ds
in
outsl
and
bound
lret
inc
add
bound
loope
imul
pop
push
test
mov
dec
or
sar
sbb
inc
arpl
rcrb
mov
pop
fbld
or
stos
jb
mov
scas
scas
xor
fidivl
ret
mov
in
pop
cli
cmp
dec
das
xlat
std
mov
push
or
inc
inc
add
mov
stc
mov
pusha
std
mov
repz
lock
mov
mov
fldl
push
jnp
loope
mov
push
aaa
mov
xchg
stos
adc
out
cmp
jbe
in
jnp
jb
ret
shll
loope
sbb
pop
std
push
sbb
test
cmc
sbb
xorl
xor
pusha
mov
mov
aad
push
xchg
lcall
loopne
add
and
vmwrite
cmc
cmc
xchg
std
stos
in
inc
call
sub
and
insb
and
inc
rcll
push
adc
sbb
and
icebp
lds
adc
dec
push
stos
imul
mov
nop
dec
mov
mov
xor
cli
xor
sub
movsl
push
and
and
adcb
stc
mov
adc
inc
or
push
mov
in
push
mov
imul
sbb
add
pusha
fs
fnstsw
mov
xchg
and
dec
mov
imul
mov
dec
pop
jp
mov
lods
lea
cli
xlat
cmp
or
xchg
sub
mov
mov
sarb
mov
xchg
sbb
mov
out
push
pop
js
jp
wbinvd
cmp
out
xchg
hlt
fnsave
mov
ret
repnz
outsl
xchg
cmp
fstl
pop
shlb
insb
movsl
dec
daa
sub
push
pop
cli
shll
push
sti
mov
dec
ret
mov
icebp
sti
pusha
addr16
insl
jmp
jno
roll
ret
addb
push
insb
lcall
lea
out
or
pop
fisubs
jne
lea
lret
adc
xchg
jae
and
push
sbb
adc
roll
pop
les
stos
loop
mov
mov
ficomps
pop
addr16
in
push
test
cli
cs
cltd
les
xchg
test
push
mov
subb
and
arpl
fucomp
pop
sbb
aad
dec
mov
xor
std
push
push
push
cwtl
icebp
jb
xor
add
frstor
add
inc
pop
repz
dec
mov
icebp
popa
ffreep
adc
cli
stos
sub
jle
mov
test
js
jno
insb
dec
or
out
xchg
sbb
and
sbb
jle
pop
lahf
xchg
sbb
ret
inc
mov
popf
mov
jae
pop
xchg
lock
into
adc
xor
shl
rcll
dec
add
test
cmp
ds
inc
add
fildl
push
add
shlb
push
push
loopne
pop
sar
pop
pop
popf
decl
int3
loop
pop
in
add
cmp
mov
and
xor
or
xchg
outsl
cmpsb
mov
sti
pop
xor
pop
out
pop
jl
sub
stos
pop
scas
ficoms
mov
cmpb
sub
cli
mov
jae
sbb
dec
mov
fidivs
insl
xor
sar
iret
sub
pusha
cmpl
clc
es
rcrb
in
movsl
je
negl
sarl
jnp
pop
pushf
es
and
fwait
and
stos
frstor
test
test
push
test
mov
gs
cmp
adcl
mov
mov
fidivrs
fsubrs
mov
in
andb
add
add
fnstenv
testl
mov
loop
cmp
adcl
adc
imul
loop
dec
fldl
cmp
and
scas
les
mov
subb
jp
shll
pop
ds
sarb
jnp
mov
repz
mov
adc
outsb
push
add
fs
add
lret
pop
lods
pop
cmp
repz
mov
sub
cwtl
jle
inc
mov
call
mov
repnz
add
pop
shll
pop
fisttpl
push
adcl
inc
pusha
or
in
sbb
push
and
out
push
xchg
xor
into
cmp
cmp
mov
fwait
pop
jno
mov
pop
mov
cmp
cmpl
cmpsl
in
ja
div
fnstsw
xor
rorb
adc
fnstsw
test
bnd
lcall
gs
fidivl
int
mulb
push
lcall
ss
cmp
add
out
xchg
popa
xor
or
xor
out
sbb
add
iret
mov
imul
add
es
adc
lds
fwait
mov
loope
jmp
int3
repnz
jecxz
or
int
scas
jae
int3
push
mov
pop
pop
adc
mov
jp
pop
into
sbb
adc
add
pop
mov
mov
scas
inc
sbbl
movsb
push
dec
push
dec
mov
repz
lret
jmp
cmp
repnz
icebp
stc
loop
add
aam
inc
sbb
sbb
xchg
mov
or
cmpsl
jo
jecxz
mov
mov
pop
cmp
mull
mov
pop
dec
cli
cmp
repz
jo
add
arpl
xchg
xor
iret
mov
mov
leave
ret
pop
inc
add
jg
jecxz
subps
mov
in
into
cmp
out
push
adc
lods
addb
insl
andl
sub
mov
test
inc
daa
mov
frstor
jmp
push
push
lcall
push
inc
inc
jno
xchg
cmp
movsl
movsb
mov
scas
mov
pusha
ret
sahf
loope
cmp
and
sbb
pop
shlb
jle
push
sub
sbb
jle
or
pop
add
je
xor
cwtl
test
shll
pop
sbb
in
xchg
inc
je
or
lds
out
mov
push
sbb
gs
cmc
int3
mov
adc
pop
repz
jns
xchg
push
xor
shlb
aas
bound
xor
sti
loope
mov
adc
loopne
leave
ret
cmpsb
lock
cmpsl
arpl
negl
mov
pop
inc
pop
pop
sti
popa
jp
mov
fistps
pop
inc
cmpsl
out
rorl
push
cmpl
adc
aad
adc
mov
jno
lea
inc
cmp
imul
xchg
pop
sbb
inc
add
out
enter
sti
inc
sub
push
insb
add
enter
aaa
jbe
stos
pop
icebp
mov
psrlq
mov
sti
mov
add
xor
pop
add
jae
leave
push
out
aas
cwtl
pop
out
and
ljmp
adc
jae
rcll
sahf
ret
fs
shll
je
movsb
adc
jl
and
test
test
sbb
lahf
aad
jp
adc
cs
inc
arpl
stc
pop
insl
push
xor
mov
push
repnz
pusha
insb
push
pop
xlat
pop
pop
fildll
xor
adc
add
and
icebp
push
in
push
xchg
dec
cmp
fimuls
lock
out
pop
lea
push
outsl
hlt
cltd
push
mov
lcall
ret
dec
gs
mull
adc
xchg
inc
subl
lea
mov
pop
js
popf
call
mov
jmp
xchg
fimull
mov
nop
push
mov
lea
mov
popf
enter
sbb
lahf
cli
bound
pusha
aas
test
rorl
pop
jmp
jg
bound
cld
sti
xchg
cmc
inc
adc
xchg
adc
jnp
scas
inc
xchg
pop
cmpsl
jg
pop
add
inc
pop
sbb
int
push
xlat
mov
lahf
adc
testl
cmpsl
push
xchg
out
scas
lods
in
shrb
lods
idivb
pop
aad
jecxz
pop
outsl
push
rcr
ss
pusha
cmpl
cmp
call
or
inc
cmp
outsl
sbb
xchg
jno
pop
outsl
mov
mov
sbb
jae
push
je
notl
adc
test
jg
fbstp
iret
inc
pushf
push
or
mull
adc
popa
repnz
ret
shll
mov
scas
div
pusha
je
inc
jb
push
into
icebp
loop
insb
jbe
aam
xlat
sbb
adc
inc
ror
inc
loope
adc
js
fidivrs
ss
test
jle
in
cmp
les
xchg
mov
mov
ja
ret
shrb
dec
pop
ja
push
loopne
sarb
xor
mov
mov
xlat
mov
jp
mov
rolb
mov
jmp
cs
add
xor
fmuls
push
pusha
xchg
and
mov
sarb
jo
pop
xchg
inc
jae
dec
loopne
mov
fwait
movsl
add
cli
adc
sbb
pop
cmpsb
xlat
jns
ljmp
test
pop
cltd
inc
cs
xchg
or
cs
lock
sub
sbb
sahf
cld
or
es
jecxz
cltd
inc
jle
pusha
int
testb
lret
loopne
addr16
mov
bound
mov
fsubs
dec
popa
js
sbbl
bound
ret
mov
xchg
jl
pusha
xchg
repnz
mov
sbb
pop
fadd
imul
mov
jne
jecxz
fnsave
sub
push
jge
pusha
or
mov
cmpsl
test
mov
sbbb
js
ja
shrl
push
or
dec
xor
test
cmpsl
roll
mov
shr
ret
xchg
jo
and
mov
xor
dec
add
popf
stos
pusha
es
in
aad
shll
mov
sub
jb
push
ss
jno
sti
inc
int3
testl
lock
js
shll
xchg
jmp
sahf
mov
enter
push
clc
mov
mov
fstpl
out
lret
das
ret
sbb
push
push
sub
cmc
inc
push
mov
cli
imul
cmp
loopne
cmp
sarb
int
and
cmpsb
shll
cmp
adc
add
pop
arpl
stos
daa
iret
pop
mov
dec
ds
mov
dec
jnp
jae
jno
bound
ss
fidivrs
lea
mov
mov
mov
leave
inc
hlt
mov
xchg
adc
push
mov
xchg
loop
xchg
pop
hlt
mov
rol
subb
out
js
lock
movsb
add
dec
cltd
jo
sbb
jbe
and
dec
sahf
dec
add
in
cmpsl
adc
cmp
imull
mov
lret
mov
pop
std
sbbb
adc
or
mov
pop
ret
mov
cmpsb
fwait
pop
lahf
lock
inc
loopne
bound
inc
mov
push
test
jp
outsl
repz
push
test
or
cmp
dec
dec
sbb
jecxz
hlt
push
cli
mov
mov
pop
add
lcall
cmpsb
pusha
cwtl
sub
bound
cli
jmp
fisubs
rcll
push
sub
push
loop
stc
mov
pusha
cmpb
xorl
loope
adc
stc
xchg
push
mov
mov
sbb
stos
sub
icebp
test
into
mov
insl
push
adc
sbbl
xlat
sub
cmp
test
sbb
idivb
jge
mov
aad
cld
ja
fldt
call
stos
imul
jb
ret
pop
faddl
lods
cmp
das
jns
mov
add
mov
arpl
loope
popf
xchg
lock
aad
lcall
and
mov
sub
pop
mov
jmp
cmp
test
out
push
adc
pusha
dec
rcl
fwait
mov
sbbl
xchg
sbb
sub
sub
mov
rorb
fisubl
movsl
fbstp
add
mov
add
mov
mov
jae
xor
sub
fdivs
scas
mov
mov
inc
pushf
cs
dec
clc
dec
repz
cs
xor
repnz
sub
inc
xchg
cmp
aad
inc
sub
test
xchg
repz
imul
pop
fadds
mov
call
test
hlt
mov
negl
add
outsl
jmp
loopne
lods
bound
sbb
mov
ja
jge
mov
inc
dec
and
add
pusha
mov
popa
mov
loope
neg
cmpsb
sarb
repz
push
and
aad
idivb
scas
mov
sub
test
mov
dec
ds
jae
adc
js
xchg
test
fadd
pop
push
and
pop
sbb
add
xchg
sarb
ds
and
mov
inc
fistps
or
fs
je,pn
jl
je
sti
push
jge
sbb
add
rcr
gs
sub
mov
add
ret
andb
movsb
jmp
jmp
inc
push
js
sahf
jae
jbe
add
push
fst
repnz
fwait
leave
cmpb
icebp
xchg
cltd
stc
fisttpll
rcr
sti
dec
pop
mov
add
adc
test
std
data16
inc
addr16
jle
bound
aas
lcall
push
fbld
jbe
mov
ja
adc
ljmp
loop
jns
mov
push
fcmovnu
iret
incl
pusha
lea
xchg
outsl
push
out
mov
ret
ja
roll
push
inc
icebp
sahf
pop
pop
xchg
dec
push
xorb
dec
dec
jl
jle
pop
pop
in
or
pop
loopne
fisttpl
insl
repz
inc
int
jmp
mov
sub
std
loop
inc
insb
stos
in
jns
out
cmp
jb
test
fidivrl
js
loope
lock
test
stc
cltd
adc
dec
dec
addr16
xchg
stc
lret
rcl
inc
cmp
popf
aam
divl
int
xor
add
cmp
and
lahf
insl
loope
mov
out
push
xchg
jns
test
xlat
nop
push
add
adc
cmpsb
jg
or
pop
in
sti
mov
std
rcrl
fstpl
or
mov
pop
pusha
in
sub
jecxz
cmpsb
mov
clc
jle
cs
add
movsl
jbe
xchg
xchg
daa
stos
push
push
add
int
mov
int
test
fst
scas
push
loop
and
mov
cwtl
xchg
mov
and
mov
sti
test
sbb
inc
mulb
add
ljmp
movb
sub
mov
pop
outsb
or
pushf
jns,pt
iret
cmpsb
pop
and
sbb
push
insb
pop
aad
mov
adc
enter
sub
mov
mov
pop
inc
adc
dec
push
xor
or
jge
jnp
pop
mov
add
dec
test
das
xchg
andl
mov
ljmp
sbb
rolb
xchg
push
inc
aad
jge
test
inc
xchg
pop
test
pop
mov
std
andl
pop
int
loop
add
jo
pop
stos
push
clc
ret
push
addr16
stos
or
sbb
cmpsb
sbb
ljmp
lret
fmuls
sahf
inc
or
pop
jl
test
mov
mov
mov
pop
lahf
incb
mov
movsb
pop
cli
cmp
inc
stos
xor
xor
xlat
dec
add
rorb
lods
pop
sub
imul
or
repnz
lea
adc
mov
loope
imul
bound
xor
das
bound
mov
push
popw
adc
xchg
incl
push
sti
sbb
adc
pop
ret
test
int
fld
push
push
icebp
test
test
js,pn
fisubrs
sti
fistps
add
add
and
mov
cwtl
sub
mov
shlb
imul
outsl
movsb
jg
xor
push
lret
popf
scas
cmp
lcall
stos
xchg
dec
adc
mov
popa
lret
popf
icebp
in
mov
aas
scas
loop
repnz
dec
lods
mov
mov
inc
push
pop
or
aas
push
ret
lahf
repz
cs
add
lods
pop
cld
jp
jmp
insl
dec
ficoml
popf
sarl
mov
stc
out
mov
mov
ficompl
insl
mov
gs
bound
fbstp
cmp
lea
fcoms
mov
out
lret
or
mov
ret
repz
fadd
push
push
testl
jne
jl
shl
inc
iret
pop
bound
jae
adc
in
xchg
cmpsb
mov
and
add
insl
xor
cmova
ds
cmp
out
inc
add
repz
xchg
xchg
push
or
repnz
fsubrl
sub
repnz
iret
test
js
andb
fsubrs
xchg
pusha
fidivrl
lcall
aad
loope
dec
movsb
decb
jmp
sbb
sbb
inc
stos
sbb
pusha
je
in
push
rorb
xchg
mov
int
cmp
dec
test
push
adc
inc
cltd
mov
bound
jge
test
add
movsb
sbb
mov
pop
arpl
and
shrb
cmpsl
add
xor
pop
gs
mov
shr
pop
icebp
outsl
js
push
fwait
mov
mov
shlb
xor
hlt
lret
pusha
rolb
mov
pop
fcoml
mov
jns
cmp
out
inc
out
ljmp
sub
pop
adc
mov
int
popa
mov
imul
rolb
xor
adc
push
fcomip
push
or
out
fwait
lahf
xchg
cmc
bound
dec
lret
jnp
mov
ja
aaa
xor
adc
dec
ret
out
cmp
out
push
jge
jae
pop
fiaddl
inc
push
push
cltd
sbb
or
pop
out
mov
mov
mov
sbb
add
bound
xor
ret
mov
and
gs
cmp
aad
sahf
xlat
icebp
pusha
cwtl
push
xor
cld
push
mov
cmp
add
sti
fmul
mov
mov
movsl
insl
movsb
pop
push
ret
or
lret
lock
sub
cmpsb
inc
stos
push
push
rorl
pop
inc
cwtl
andl
mov
mov
mov
and
lods
add
pop
dec
addr16
pusha
mov
xchg
xor
mov
stos
fwait
xchg
push
mov
filds
pop
push
roll
cs
hlt
mov
sahf
pop
inc
mov
inc
fiaddl
add
fmull
sbb
sahf
mov
push
sbb
dec
scas
test
popf
fsubrl
sahf
add
inc
call
sar
and
pop
cmp
cwtl
jae
cli
sarl
adc
mov
jecxz
xor
dec
mov
addr16
add
lcall
xchg
pop
cltd
in
xor
push
mov
pusha
lds
xchg
pop
push
mov
movsb
push
jge
idivl
add
push
pop
shll
repz
xor
test
and
adc
nop
mov
mov
mov
ljmp
popa
fistps
cmpl
xchg
dec
imul
movsl
cli
xorl
push
xorb
push
sub
pushf
xchg
clc
jle
outsl
dec
call
pop
inc
cmp
and
pop
jle
dec
fsubp
pop
jo,pn
roll
mulb
sub
jbe
adc
rorb
rcl
in
lret
mov
pop
mov
adc
mov
dec
shrb
popf
mov
xor
in
push
pop
scas
fucomp
mov
bound
lods
pop
mov
xchg
add
bound
fwait
jno
sti
popf
in
jle
pop
bound
dec
jecxz
das
lret
repz
push
mov
pop
mov
repnz
cmp
std
js
stc
lds
or
decb
bound
shrb
scas
jo
inc
mov
in
clc
lods
icebp
call
xor
inc
inc
movsb
dec
mov
cmp
lret
sub
mov
sbb
sub
pusha
into
daa
shrl
leave
aas
sub
insl
cs
cmp
cmp
dec
arpl
mov
stos
add
aad
cmp
xchg
push
cmpsb
es
xchg
xchg
test
pusha
xor
and
aad
adc
shr
adc
lcall
sbb
adc
sarl
iret
bnd
into
sti
cmp
leave
pusha
sub
stc
push
inc
mov
mov
mov
rorb
cmp
dec
cmp
xor
shll
xchg
xor
mov
fcmovu
xlat
rcrb
insl
cmpsb
loop
sbb
pop
add
lea
mov
jns
mov
jns
cld
popa
fistl
push
and
js
cmp
fnstsw
aam
sub
es
mov
hlt
iret
fsubrl
jns
jns
sub
dec
jb
push
loop
ja
shll
xchg
mov
xor
xchg
mov
and
mov
jg
and
cmpsb
inc
repz
sbb
lock
adc
adc
pusha
push
xorb
fdivr
cmp
xlat
clc
sbb
inc
mov
test
adc
gs
dec
mov
jle
dec
in
pusha
jge
or
push
and
add
cmpsb
jle
xchg
bound
xchg
add
in
mov
push
add
pop
jne
adc
lds
insl
jle
adc
mov
inc
aas
pusha
ret
xchg
sbb
jmp
cmpsl
jmp
lret
insl
cmp
pushl
mov
jg
imul
jae
cmp
inc
filds
fstpl
lahf
jp
loop
out
cmp
jmp
adc
idivl
shll
dec
repz
dec
and
push
sub
sbb
jmp
mov
call
cltd
add
test
push
jmp
sbb
std
and
dec
lods
stc
ret
pop
das
push
cwtl
cli
test
insl
mov
xchg
insl
pop
sub
inc
jno
mov
mov
pop
je
xchg
in
sbbb
jg
pop
and
outsb
flds
jns
xchg
mov
jecxz
sti
mov
push
dec
movsl
adc
xor
mov
xor
aaa
pop
xchg
mov
mov
sub
cmp
push
pop
std
loopne
in
mov
mov
add
and
lods
jecxz
xor
adc
or
call
jne
bound
push
mov
push
pop
cld
pusha
test
push
jne
xchg
popa
sbb
sub
and
imul
xchg
pop
call
rolb
test
cmpsb
or
mov
mov
inc
mov
loope
in
xor
sub
test
xchg
lods
push
push
stc
mov
shrl
popf
stos
pop
and
rcll
loop
mov
inc
xor
push
mov
mov
pusha
cltd
adc
xlat
ja
mov
mov
or
xor
scas
clc
cmpsl
mov
std
jecxz
and
pop
jno
mov
pop
xchg
std
bound
dec
pop
in
fbstp
mov
and
adc
ret
dec
cli
jg
lahf
xchg
or
mov
cmpsb
xor
xchg
jmp
or
scas
push
stc
jg
or
test
push
jecxz
out
push
mov
stos
rcr
gs
js
mov
repz
jnp
mov
pop
cmpsb
aaa
lods
ret
push
repnz
xor
pop
push
pusha
mov
dec
loop
int3
ss
mov
rcrl
ret
sbb
insb
ja
repz
xor
scas
roll
int
mov
pop
mov
sar
push
in
jnp
inc
jns
int
dec
insb
cmp
leave
push
lods
stos
arpl
loope
sbb
pusha
dec
int3
adc
mov
rcl
pusha
fsubs
fisttps
push
sbbb
dec
fcoms
jae
push
rcll
sbb
inc
aad
or
out
mov
lret
mov
arpl
imul
or
mov
dec
aam
fldl
pop
pop
mov
in
add
addr16
pop
add
jae
jecxz
into
and
iret
in
ss
iret
outsl
mov
cmp
pop
andl
xor
andl
ret
mov
cld
divb
aad
aas
scas
cmp
adcl
jno
cmp
popf
add
cmpsb
pushf
inc
or
aam
ljmp
xchg
cmp
cmpsl
pop
xor
outsl
repz
sbb
sub
arpl
lcall
push
inc
repnz
je
loopne
jns
aad
mov
mov
rcr
pop
test
out
rorl
iret
jnp
js
jle
inc
loop
jmp
pop
loope
adc
inc
xchg
divb
stos
loope
lock
sub
cmp
lret
inc
adc
fcmovu
fmull
pop
push
dec
adc
ret
mov
jns
out
push
jns
and
insb
push
sti
inc
out
and
cmp
mov
jbe
icebp
jp
mov
or
add
cmpsl
adc
adc
out
lock
inc
shr
sub
pop
inc
shll
add
repnz
sub
test
dec
es
inc
jmp
dec
rcrb
jp
cwtl
enter
or
pop
aam
testl
clc
mov
aam
inc
mov
jge
std
push
pop
mov
pusha
das
orl
sbb
cli
addr16
push
jmp
mov
xchg
les
xor
or
bound
fbld
imul
cmp
aaa
fdivr
cmpsb
jns
loope
push
rorb
jne
shrl
inc
push
sub
cmp
jecxz,pn
fs
dec
aad
fimuls
inc
and
stos
xchg
and
popf
sti
loopne
pusha
dec
repnz
cmpb
je
dec
and
push
outsl
dec
or
fsubrl
lods
mov
test
orl
push
pop
imul
mov
sar
sbb
addb
cmpsb
sbb
ret
mov
shll
out
sub
iret
pop
mov
xor
xchg
push
xchg
dec
xchg
fistps
push
int3
sbb
mov
repz
aam
lcall
lret
and
scas
or
je
mov
lcall
xchg
mov
mov
sbb
lock
test
push
add
jo
bound
xchg
pusha
lds
sti
test
dec
jecxz
ja
jmp
lods
cmc
mov
setbe
in
inc
jno
xorb
mov
outsb
cmpl
dec
xor
arpl
repz
and
mov
fists
lods
jmp
adc
imul
or
dec
sahf
jo
pop
dec
icebp
test
jg
pop
inc
das
xor
pusha
adc
bound
filds
pop
xchg
or
jmp
pusha
cmpb
bound
in
sbb
add
xchg
xchg
and
adc
mov
jge
push
out
repz
loope
in
pop
xchg
mov
out
or
pop
cs
push
cld
lods
xchg
xchg
dec
xor
mov
sub
mov
sub
add
fwait
dec
mov
frstor
ret
out
dec
fidivs
repnz
ficompl
sbb
scas
andb
add
fimuls
loope
popf
call
sub
rorb
fs
push
enter
add
cli
mov
mov
enter
jg
sti
pushf
icebp
mov
mov
pop
add
inc
pop
jg
mov
sahf
out
and
inc
inc
rorl
fnstsw
push
cmp
dec
mov
xor
icebp
pop
adc
movsb
lods
pop
push
mov
adc
pop
aas
idivb
div
push
or
pushl
xor
lds
pop
leave
xor
fcmovnb
cmp
cs
out
jno
jge
orb
add
jl,pn
repnz
out
cmp
into
pop
mov
in
push
lods
or
bound
mov
mov
stos
jb
add
addb
pusha
decl
push
jecxz
adc
sub
ds
stos
rcl
loop
xor
mov
pop
in
pusha
lea
mov
mov
loope
lahf
adcl
mov
sbb
aas
outsl
jb
test
hlt
inc
xchg
pop
lea
clc
filds
mov
add
shl
fsubl
arpl
xchg
mov
mov
fdivl
sti
dec
mov
lret
cmp
lods
sub
aad
rcll
bound
mov
xlat
fidivs
fwait
repz
sarl
cmc
and
dec
stos
or
mov
insb
sbb
or
mov
sbb
mov
dec
cmp
loop
mov
imul
loopne
fwait
adc
aas
fbstp
xchg
inc
cmp
xchg
clc
adc
add
fwait
lret
ljmp
mov
xor
adc
adc
sti
jge
adc
mov
sub
stos
mov
or
jbe
imul
aas
imul
mov
xchg
xor
lock
std
mov
rcrb
ds
nop
repz
ret
leave
adc
insl
movsb
mov
dec
pop
gs
xchg
adc
lea
add
insl
ud1
inc
jg
mov
jle
movb
enter
mov
out
xchg
outsl
cltd
lret
cld
push
and
xor
jnp
pusha
daa
out
aad
and
jecxz
jl
pop
cli
jecxz
cli
js
mov
gs
jecxz
xchg
xchg
push
sbb
fldcw
mov
rclb
adc
dec
jo
push
scas
cmp
push
pop
lret
pop
sarl
dec
loopne
mov
loop
out
out
sbb
pusha
shll
fstpt
clc
daa
xor
and
push
inc
xlat
mov
jmp
adc
adc
ret
pop
out
mov
sub
stos
in
es
xchg
or
aam
cmp
dec
jne
pop
dec
clc
scas
lret
test
cmp
and
inc
sbb
aad
fwait
cmp
cmpsb
dec
mov
es
pop
scas
jb
and
add
out
paddsw
mov
push
incl
inc
bound
int3
scas
mov
pop
mov
shrl
push
stos
movsb
pop
in
dec
cli
push
pop
mov
nop
cmp
jns
out
outsl
lock
das
cmp
ljmp
cld
mov
pop
jg
pop
lcall
mov
icebp
pusha
fwait
or
mov
inc
jnp
lret
jae
add
leave
mov
shll
sub
fidivl
add
ret
push
pusha
scas
and
adc
scas
pop
sub
push
lret
clc
pop
jne
fidivrs
add
xor
lea
inc
pushf
std
adc
gs
ja
adc
andl
jb
mov
daa
mov
adc
hlt
stc
popf
fisttpl
repz
xor
add
aaa
jp
mov
inc
xor
mov
pushf
pop
mov
std
out
dec
adc
xor
inc
add
adc
pop
xchg
icebp
out
xor
or
xchg
pusha
jo
sti
fstpl
or
and
js
fwait
or
fbld
mov
clc
jnp
scas
cmp
lcall
imul
sbbb
insb
add
lds
outsl
adc
rcl
mov
cmp
das
fistps
jle
repnz
outsl
int
and
adc
add
orb
mov
rep
popa
jmp
and
loope
mov
sti
scas
pushf
roll
mov
andb
and
or
lods
sbb
adcb
imul
cld
bound
shrb
jge
aam
sahf
mov
iret
mov
jnp
clc
mov
pop
out
xchg
sbb
push
xchg
aam
cmpsb
jb
jnp
sti
lret
jbe
mov
pop
sahf
fs
mov
jp
xlat
push
xor
roll
or
xchg
sub
cwtl
insl
add
push
and
repnz
lea
mov
xor
mov
xchg
out
pop
xlat
int
sti
pushf
repnz
or
push
pusha
mov
mov
cltd
in
mov
cmp
or
ret
or
ljmp
popa
popa
insl
aam
or
xchg
xadd
aam
lahf
xorl
mov
sahf
cli
adcb
cmpsl
or
inc
ja
fldl
sbb
int3
loope
jg
push
popa
mov
fbstp
movsl
or
xor
and
push
add
sbb
pop
xor
icebp
push
popf
mov
pop
daa
stc
testb
pusha
orb
scas
xchg
and
lahf
movsb
dec
sbb
mov
bound
movb
cmp
je
and
xor
pop
dec
adc
lcall
push
mov
test
out
sub
out
mov
lcall
jl
add
aas
and
add
xchg
adc
jle
js
xchg
cmp
out
loopne
lret
jge
pusha
enter
loop
mov
ret
in
mov
add
repz
ljmp
mov
mov
ret
movsl
sbb
loopne
xor
lods
push
pushf
sub
scas
cld
sub
movsb
cmpsl
mov
jl
lods
test
ret
fstpl
lret
insb
repnz
pop
outsb
sti
xchg
or
movsb
inc
push
dec
pop
hlt
pop
out
mov
pusha
ret
icebp
in
lods
xchg
inc
ss
fsubl
outsb
push
loope
mov
aad
je
cmpsl
sbb
lea
loope
or
arpl
sbb
sub
jp
jp
adc
xorb
popf
add
outsb
lods
pop
daa
loope
rolb
repz
leave
xchg
sarb
cmc
pusha
push
sbb
hlt
sub
mov
js
fwait
inc
xchg
ss
in
cld
test
mov
mov
mov
sti
out
nop
iret
cli
inc
sub
movsb
xor
jg
pop
dec
dec
shll
mov
pop
xchg
scas
clc
popa
cpuid
pop
xchg
bound
test
adc
in
jnp
clc
loope
pop
jbe
adc
outsl
push
insb
movsl
mov
in
in
mov
ret
xchg
repnz
dec
fstpl
push
jl
or
lcall
shl
fistl
pop
pop
jns
add
mov
adc
jno
jecxz
xor
bound
jns
std
fsubl
push
cld
in
sub
data16
dec
mull
hlt
std
mov
nop
lcall
cmp
out
mov
test
mov
xor
jmp
add
pusha
jb
popf
dec
pop
add
lods
out
pop
int3
adc
adc
mov
lret
xchg
test
leave
mov
pusha
jae
or
int3
aad
popl
or
lcall
or
sbb
int3
int
inc
ret
xchg
pop
lret
and
inc
dec
xlat
cwtl
adc
or
xor
stc
fisubrs
leave
testb
fldcw
lret
enter
jno
imull
cwtl
js
addl
stos
and
mov
fchs
jo
repz
cld
sub
jmp
ror
mov
push
cmp
fdivrl
sub
cmpsb
je
mov
enter
xor
in
jmp
nop
int3
push
push
shll
lods
sbb
add
out
pop
xor
lret
aad
jno
and
xchg
fcom
test
adc
xchg
dec
dec
cmc
mov
or
jl
stos
cmp
add
jl
mov
mov
mov
adc
xchg
aaa
leave
insb
inc
in
out
xor
mov
js
cmp
or
aad
scas
enter
jle
inc
rcrl
ret
sbb
movsl
testl
nop
loop
inc
mull
insl
sub
add
adc
out
inc
rclb
and
jno
mul
bound
sbb
std
add
shrb
rolb
dec
cmp
pusha
std
ja
enter
das
push
adc
loop
ret
mov
ja
testl
jno
rcrl
xor
xchg
jle
out
adc
ror
jecxz
add
popa
push
pop
lret
adc
lahf
sbb
mov
mov
jo
add
leave
lret
adc
and
xchg
int3
pushf
xorb
pop
adc
sbb
inc
mov
mov
lret
ror
lods
pushf
sub
rorl
testl
out
test
leave
decb
int3
or
xor
fdivrs
orl
call
inc
or
ss
repnz
movsl
hlt
add
push
xchg
mov
cmp
lea
mov
popf
bound
dec
int3
out
stos
filds
loop
ss
scas
les
xchg
inc
cmpsb
xchg
xor
sub
and
jge
inc
ret
jmp
or
insb
inc
push
mov
xchg
lret
push
sarl
cld
scas
out
lock
leave
or
jns
sub
xor
pushf
lock
rcl
xchg
lret
loop
inc
daa
xchg
push
add
stos
lock
ds
jp
call
mov
push
lock
lret
xor
xor
mov
sbb
xor
leave
jo
add
inc
fisttps
jb
test
lahf
mov
add
fstp
jmp
push
fidivrs
push
mov
aas
inc
shll
inc
jnp
testl
dec
jmp
pop
adc
lret
xor
and
test
jmp
leave
jae
or
movsb
add
enter
jg
xchg
lcall
inc
cmp
inc
add
pop
shll
add
cli
adc
mov
test
mov
int3
clc
xchg
push
sub
push
arpl
xchg
pop
aas
xor
arpl
pop
inc
mov
xchg
mov
mov
xchg
add
adc
add
cs
test
loope
xor
insl
and
xchg
push
loopne
xor
pop
pop
push
inc
inc
addb
jo
sub
call
sbb
lcall
mov
inc
cs
or
stc
les
stos
or
and
cld
mov
and
movsb
add
xchg
inc
out
mov
xlat
shl
sbbb
clc
mov
cmpsb
imul
mov
mov
packssdw
jl
mov
scas
or
xchg
imul
xor
add
add
aad
js
cmp
pop
or
lcall
push
mov
ret
sub
stc
das
cld
mov
push
or
shll
shll
rep
insb
leave
mov
sti
push
aaa
test
sub
push
notl
lea
roll
out
inc
ret
add
cmc
rclb
cmp
test
jle
xchg
test
loopne
inc
cmpsl
sarb
fstp
repnz
inc
mov
or
imul
lea
ror
out
mov
push
mov
mov
cs
movsl
repz
xor
and
or
inc
test
ds
js
jle
cmp
jbe
ja
fcmove
jecxz
int3
cltd
test
fists
out
ret
add
or
xchg
and
mov
repnz
xlat
inc
loopne
out
repnz
sti
adc
pop
jmp
fistps
out
mov
es
xchg
xchg
push
mov
in
jo
loopne
cmp
jns
loop
inc
jae
hlt
ret
cld
mov
push
out
add
adc
jae
jne
jbe
icebp
adc
inc
repz
fadds
push
inc
jae
mov
mov
clc
sbb
push
aaa
xor
xchg
sbb
xchg
adcb
mov
sahf
outsl
leave
xor
xor
jl
push
mov
mov
and
loop
mov
loope
inc
add
fadd
addr16
in
int3
out
sbb
pushl
addb
std
movsb
mov
mov
sub
icebp
popa
repnz
xlat
outsl
jp
xlat
loop
inc
adcb
ja
ss
orl
cld
or
leave
pop
xor
add
fisubrs
adc
dec
adc
or
lret
js
xchg
add
fcomp
push
int
mov
jb
inc
aad
add
or
incl
test
aas
loope
inc
xchg
scas
push
add
mov
inc
sbb
sbb
rcr
xor
popf
inc
mov
xlat
adc
aas
xchg
sar
lock
clc
add
mov
push
mov
mov
out
lret
pusha
mov
out
inc
sbb
ljmp
xchg
xor
cmp
adc
xchg
shll
jl
sbb
mov
xlat
pop
or
lock
and
imul
fbld
pop
roll
loope
pop
repz
lret
jns
enter
xchg
xchg
mov
cmp
imul
rolb
pop
lds
sbb
sub
lret
leave
shl
cmp
dec
in
aam
shlb
cmpsl
cmpsb
mov
inc
lret
jno
lock
mov
loope
es
test
pop
rclb
mov
addr16
jne
loope
push
inc
hlt
mov
inc
sbb
popf
jb
test
ds
sahf
mov
xor
subl
pop
popf
adc
rcl
js
add
insb
mov
roll
sbb
sub
pop
std
add
inc
test
popa
mov
rol
std
ret
xchg
enter
sti
fxch
jmp
add
ret
jmp
or
inc
inc
jg
scas
jp
stc
cwtl
mov
jbe
lret
adc
rolb
sti
scas
push
pop
leave
int
repnz
inc
adc
cmp
jo
repz
jns
scas
push
clc
nop
jge
shll
add
xor
cmc
lret
bound
ds
dec
inc
pop
jl
push
leave
pop
andb
push
and
inc
mov
lods
test
xor
inc
sahf
movsb
fs
sti
in
popf
orl
popl
mov
sbb
adc
mov
xchg
cwtl
or
mov
insb
pop
pusha
adcl
fcoml
insb
lret
mov
add
stos
js
leave
mov
pushl
dec
mov
adc
xor
add
aam
in
movsb
lock
mov
ss
shlb
add
push
repnz
shlb
cld
jbe
sub
pop
mov
sbb
inc
call
push
in
lret
cltd
adc
ret
xchg
add
imul
notb
mov
sti
sahf
inc
add
mov
movl
inc
call
jl
clc
sub
icebp
push
mov
lods
mov
mov
dec
ror
mov
fbstp
jns
fistpll
imul
xor
roll
xor
in
shl
call
lock
pop
sub
jg
leave
mov
ret
std
mov
inc
and
iret
cmpsl
lret
es
bsf
adcl
jne
push
lret
sub
enter
pop
add
jae
mov
mov
inc
std
mov
notl
loop
call
out
shr
mov
or
inc
push
in
loope
inc
ljmp
pcmpeqw
popa
inc
aas
in
add
push
aaa
mov
pop
or
cmp
inc
dec
cmpsl
mov
stos
nop
rclb
jp
push
push
mov
insb
adc
cli
orb
data16
dec
cs
mov
les
inc
lret
imul
inc
lock
pop
jge
xor
inc
mov
stc
adc
les
in
adc
icebp
push
xchg
loope
inc
mov
movsb
push
jg
sub
sub
inc
jp
bound
mov
lcall
jo
mov
pop
or
mov
fwait
add
repz
lock
pop
lock
cmp
cld
jp
leave
cmpsb
push
loope
jg
mov
adcb
xorl
add
mulb
lret
movsb
sub
jecxz
pop
mov
adc
or
inc
jge
mov
gs
insb
pop
inc
pop
mov
pop
and
mov
mov
fistps
dec
xchg
adc
mov
and
jb
sti
cmp
xorb
inc
enter
jno
adc
shll
inc
ficomps
xchg
shll
addr16
cmpsl
ret
add
pop
mov
jbe
out
hlt
and
sub
sbb
or
adc
mov
sbb
mov
test
xchg
out
fnstcw
dec
aas
rolb
xchg
xor
cmpsl
addb
aam
shl
ljmp
in
popa
aad
out
paddb
out
fstpt
mov
leave
lcall
dec
jmp
xlat
rorb
add
mov
aas
leave
push
call
cmpl
xor
mov
push
add
add
jns
out
xchg
hlt
adc
and
jmp
and
mull
push
push
loop
sub
stos
add
jae
push
repnz
mov
lods
ret
sti
rcll
or
adc
cld
mov
insl
and
or
lret
push
sbb
and
and
stc
mov
jmp
aam
shlb
adc
sbb
pop
sbb
inc
mov
ret
repz
dec
out
mov
mov
insb
pop
jbe
pop
adc
mov
mov
cmc
std
push
mov
cli
xor
mov
hlt
push
sub
cmpl
fisubs
xchg
test
adc
add
movsl
adc
xor
leave
and
bound
inc
jmp
sub
inc
jne
and
jmp
lret
cmp
mov
and
leave
data16
inc
push
mov
loop
lret
xor
loope
or
pop
jmp
ret
mov
xlat
lret
or
push
lea
shlb
add
add
xlat
enter
dec
outsb
repz
mov
mov
pop
xor
add
jecxz
aaa
in
jl
mov
std
lods
push
sbb
jecxz
fmuls
sbb
xor
loopne
cmpl
and
mov
ret
sbb
adc
fstpt
outsb
xchg
mov
push
movsb
mov
incl
rcl
inc
data16
adc
fimuls
lret
cli
cmp
popa
testl
fidivrl
cmp
or
mov
enter
je
pop
fmulp
jg
andl
stos
bound
jb
call
aas
ret
ss
repz
adc
test
mov
addb
in
fldcw
loopne
sub
or
insl
popa
xor
mov
mov
mov
dec
and
push
stc
ds
xor
jp
movl
je
push
pop
inc
xchg
pop
mov
or
mov
dec
xor
inc
cld
mov
sub
lea
xor
add
and
and
mov
outsl
sub
shrb
mov
inc
mov
xor
add
inc
push
fldt
and
mov
imul
jo
sahf
mov
fnstsw
js
ret
mov
sarl
mov
pop
inc
leave
loopne
addr16
add
adc
cmp
ret
inc
cmpsl
cmp
in
fdivl
inc
and
or
shrb
push
test
stos
xchg
loope
or
or
adc
call
push
xchg
leave
xor
js
cs
inc
sti
inc
xchg
pop
rolb
icebp
mov
cmp
andl
cmp
sub
and
mov
xchg
jl
mov
jne
aam
pop
cmp
mov
xchg
sub
pop
mov
loope
xchg
repz
xchg
stc
loopne
ljmp
lret
and
loope
fcomps
leave
pop
lock
inc
cmpsl
lret
mov
movsl
ret
shrl
sub
jmp
loopne
dec
ds
shrl
pop
shlb
ret
cmp
fiadds
mov
scas
sarl
push
repnz
ret
xchg
stos
jmp
cmpsb
stos
leave
and
cmp
lret
pop
icebp
lock
add
fs
leave
or
popf
mov
inc
ljmp
jge
push
pop
xchg
div
and
cmp
add
pop
push
lret
gs
popa
icebp
inc
mov
std
xchg
leave
mov
loopne
cld
cmp
test
push
gs
enter
sbb
mov
std
push
pop
dec
xor
adc
out
lahf
dec
inc
in
mov
jae
inc
push
fbld
cld
mov
mov
adc
jl
nop
icebp
mov
cmpsl
jmp
adc
imul
sarb
enter
test
lock
mov
xchg
stos
leave
add
shll
xorb
pop
fidivl
mov
push
sar
movsb
std
mov
rcll
mov
jns
roll
cltd
add
add
mov
in
xchg
inc
cwtl
sub
add
mov
mov
loope
sbb
fistpll
inc
pop
xchg
xchg
hlt
push
mov
loopne
fistpl
cs
adc
incl
insl
adc
jae
hlt
adc
jnp
jg
and
cli
fwait
xchg
lret
mov
or
jae
inc
jno
cwtl
inc
and
leave
dec
xchg
mov
or
xor
mov
cmp
push
fimuls
adc
cmc
push
lock
ret
mov
and
and
add
adc
jmp
rorb
pop
mov
pusha
mov
loop
faddl
xor
divb
inc
fnstsw
mov
cmp
int3
cltd
add
add
xor
or
xchg
mov
call
mov
adc
fistps
lret
jne
loop
inc
fildl
xchg
xchg
ja
inc
sbb
or
sub
mov
add
jg
push
cmp
jo
pop
lret
cmp
jb
outsb
out
push
leave
cs
shl
lods
cmpsl
pop
pop
not
add
push
stos
or
add
mov
sbb
add
lret
xor
xor
cmp
mov
add
xor
lret
outsl
inc
xorl
push
leave
popa
dec
jo
xor
arpl
pop
xchg
divl
lods
leave
enter
xchg
push
stc
xorl
fcomps
jo
jmp
or
mov
push
fwait
mov
sbb
lock
add
inc
pop
mov
movl
out
leave
movsl
xor
bound
add
scas
imul
inc
xorl
jmp
or
and
into
test
jb
pop
mov
std
mov
adc
fbstp
and
loopne
sub
jne
scas
sti
popa
les
leave
inc
adc
mov
je
clc
xlat
test
inc
mov
adc
orl
and
nop
adc
and
adc
imul
mov
jecxz
je
adc
scas
jnp
add
mov
push
filds
jb
fbld
test
aaa
icebp
mov
int3
xor
xchg
in
test
addb
xor
or
add
cmp
popa
mov
popa
sti
jp
lret
shrb
ljmp
scas
lods
xor
add
xchg
out
mov
add
cld
fcomip
inc
sahf
loope
lods
rol
imul
data16
push
popf
repz
adc
lret
adc
enter
fdivl
inc
inc
leave
cmc
or
adc
imul
fwait
and
repz
inc
je
movsl
push
jl
clc
add
or
js
out
jp
repz
cmpl
sti
lret
xlat
adc
mul
adc
cmpl
sbb
pop
andl
jo
mov
lret
push
aaa
rolb
sub
movsb
and
add
inc
bound
loopne
lock
repnz
addr16
adc
roll
out
mov
add
aas
dec
cmpl
roll
pop
xchg
adc
mov
mov
out
rol
icebp
dec
lahf
imul
jne
adc
rcr
add
lds
sbb
jae
in
sbb
or
dec
cmp
jae
cmp
push
stos
jae
jmp
cmp
repz
iret
cmp
add
scas
mov
mov
nop
inc
xcrypt-cfb
cmpsl
in
dec
xorl
sub
and
push
dec
cmp
push
fs
dec
pop
xor
ds
mov
mov
repnz
popl
push
nop
int
lods
mov
add
mov
sub
xor
insb
testl
jle
sbb
in
pusha
mov
or
and
cld
clc
dec
adc
bound
xchg
sub
and
mov
lds
out
ret
cmp
ret
arpl
loope
int
jge
mov
outsl
roll
jo
pop
pop
mov
or
test
xchg
sbb
bound
stc
or
cmp
mov
fwait
ret
cmpsb
bound
ficompl
mov
sub
mov
lret
add
lods
insb
inc
fisubrl
mov
xchg
mov
dec
stc
mov
scas
roll
xchg
cmp
push
je
ret
pusha
push
movb
cmp
fadd
fnsave
jle
js
scas
sbbb
pusha
call
gs
cli
push
cli
test
pop
pop
jae
cmpb
fcmovb
xor
xchg
mov
loop
fiaddl
lret
add
jo
nop
pop
lds
jmp
sub
xchg
rcrl
sub
aam
jg
into
in
outsl
fcomp
ret
aaa
xchg
mov
xor
popf
xchg
in
pusha
aam
xchg
notb
sub
repnz
arpl
add
mov
in
enter
in
pop
das
cmc
push
jno
dec
jbe
repz
dec
movsl
js
movsb
in
rol
repz
pop
arpl
in
sbb
std
lock
sub
cmpsb
jb
inc
movsb
fcomp
sbb
mov
test
fisubrs
adc
frstor
test
pop
and
pop
test
sbb
ror
sub
cmc
add
xchg
icebp
or
or
dec
les
pop
mov
mov
imul
mov
test
adc
sub
push
je
out
lret
ret
pop
mov
cmp
inc
mov
add
xor
mov
xchg
mov
rolb
sbb
add
pop
pop
imulb
in
test
push
int
repz
push
ret
rcrl
inc
xor
and
pop
push
push
lea
jnp
add
nop
mov
fldl
rcll
faddl
adc
jecxz
mov
push
sbb
inc
pop
arpl
adc
test
xor
xchg
push
ljmp
std
imul
stc
pusha
sbb
hlt
dec
push
test
lcall
mov
shll
mov
mov
fcoml
xor
mov
cmp
push
es
mov
shrb
loope
subb
nopl
inc
scas
pop
mov
xchg
sbbl
test
and
xlat
sub
enter
pusha
clc
mov
inc
adc
pop
addr16
addr16
xchg
fucomip
add
pop
sar
icebp
mov
loop
xchg
ficoml
fbld
or
cwtl
xchg
adc
xor
jp
adc
std
repz
jp
pop
or
sbb
les
stc
les
push
mov
cmc
xchg
sub
icebp
mull
sbb
ret
adc
int
loop
jne
pop
rorb
bound
push
outsb
repnz
mov
int3
or
adcb
inc
outsb
xchg
out
test
xchg
mov
stos
cmp
mov
mov
jnp
push
push
pusha
repz
loop
sub
es
dec
cmp
outsb
shlb
mov
lret
fwait
sub
rcrb
pop
mov
sub
xchg
shll
push
sti
int
mov
cmp
push
adc
icebp
push
sbb
pop
fs
pusha
jns
pop
sub
iret
push
test
inc
mov
pusha
jl
int3
inc
ret
pop
xchg
ret
mov
loop
adc
ud0
mov
das
xchg
mov
lcall
jg
lea
or
xchg
outsl
push
mov
pusha
mov
test
mov
ret
sahf
adc
inc
shlb
inc
daa
sbb
inc
in
clc
mov
jb
mov
inc
daa
add
mov
mov
sti
lods
inc
xchg
ret
push
or
inc
push
mov
aaa
inc
dec
test
aas
cmp
stos
rcll
out
mov
xor
test
mov
mov
pop
lahf
inc
add
xacquire
jg
jecxz
sbb
pop
sbb
mov
ljmp
xchg
fistps
push
mov
int3
call
bound
pop
ss
rolb
jb
cmp
and
test
pusha
sub
sub
adc
jl
inc
xor
jp
xchg
or
test
rcl
jmp
movsl
sahf
mov
jne
xlat
xor
mov
repz
mov
sbb
dec
mull
sahf
add
push
int
lds
jg
inc
leave
sub
daa
ss
cmpsb
push
push
cs
popa
push
js
insb
lods
call
test
sbb
lcall
fistpl
mov
shrl
cmp
outsb
lcall
and
nop
addr16
xlat
mov
fs
fst
decb
inc
mov
push
js
lock
fsubrp
push
mov
cli
jecxz
pop
enter
or
xlat
dec
and
add
mov
mov
jmp
sbb
jbe
mov
mov
push
ljmp
ret
es
movzwl
repnz
repz
into
std
faddp
sub
repnz
or
sarb
movsl
enter
push
cmp
mov
das
shlb
xor
or
jbe
rorb
fsubrs
cmp
sub
push
sarb
pop
fnsave
test
outsb
xchg
faddl
mov
pop
xor
enter
jne
push
pusha
pop
push
lret
jle
cwtl
dec
fisubs
movsb
fwait
js
and
push
xchg
xor
bound
repnz
push
cmp
or
int
adcl
lahf
pusha
adc
or
mov
xchg
xlat
pop
popa
lea
cmpsl
xchg
inc
popf
aam
pushf
pop
xor
call
movsl
sub
and
lcallw
mov
xor
xor
sbb
movl
adc
insl
or
xchg
inc
imul
xchg
out
adc
cmpsl
pop
data16
je
shll
mov
mov
test
test
mov
mov
icebp
into
add
cmpsb
inc
mov
pop
push
add
adc
mov
shr
lods
imul
jecxz
fistpl
flds
imul
fstpl
cmp
andb
outsl
jl
xchg
add
cld
cmp
subl
inc
shl
mov
sub
pop
mov
adc
pop
out
cli
jp
aas
or
xchg
or
test
mov
pop
iret
ljmp
std
xchg
mov
jns,pn
dec
cmp
mov
mov
add
mov
pop
xchg
mov
xchg
fstl
mov
dec
push
xor
out
mov
pop
int3
mov
add
and
mov
call
jns
add
test
adc
lret
lret
sub
cmpsl
mov
fucom
sbb
cwtl
jmp
insb
nop
and
and
test
imul
icebp
arpl
xor
fwait
cmpb
and
ja
mov
pusha
and
xor
add
loopne
mov
lods
mov
xchg
repnz
imul
mov
repz
jo
rcll
dec
ds
cld
mov
fldl
subl
scas
jb
mov
sti
adc
shr
pop
add
xchg
jmp
mov
dec
push
or
xchg
fcomp
repnz
push
xchg
mov
imul
fwait
mov
fsubrl
cmc
sahf
push
adc
pop
int3
fnsave
pop
in
gs
adc
push
clc
or
cmp
into
sbb
ficoml
scas
mov
pop
add
lock
jmp
cli
stc
sub
insb
adc
sbb
test
hlt
push
into
or
and
fbstp
js
mov
push
hlt
dec
dec
cs
cs
fisttpll
mov
lods
lret
cmp
pop
or
inc
jns
stc
jb
inc
mov
xchg
and
cmp
out
mov
add
jno
sub
add
lds
loopne
push
jge
mov
lods
mov
pop
dec
rclw
sub
inc
push
mov
sbb
or
fidivrs
pop
sub
sub
dec
jne
shl
popa
sbb
xchg
add
jmp
pop
icebp
aaa
or
xor
out
pop
out
mov
je
or
pop
mov
adc
je
ret
clc
jb
sub
ror
jp
movsb
rcrl
mov
lcall
xor
rcll
mov
sbb
inc
cmpsb
shlb
icebp
movsl
sar
shll
and
cmp
sub
cmp
sbbb
push
sub
jmp
xchg
cmp
jecxz
add
jge
adc
xchg
cli
ficoml
pop
mov
cld
xor
sbb
pop
pop
movsl
jmp
pusha
or
add
mov
test
sub
push
jle
mov
sti
bound
cmp
fists
orb
gs
bound
roll
inc
repnz
fistpl
xchg
pusha
lods
lcall
je
popf
mov
aaa
std
fldenv
inc
test
xor
add
loopne
pushf
cmpsb
xchg
clc
sti
shrb
in
inc
mov
push
out
jmp
aas
add
cld
sar
mov
lock
lcall
stc
push
mov
and
js
ficompl
sub
mov
and
add
jbe
xor
xor
xchg
dec
push
mov
mov
idivb
sbb
mov
stos
inc
stos
xchg
mov
sbb
sbbl
push
clc
fs
in
outsb
ja
in
pop
les
jge
stos
adc
dec
out
in
push
or
not
adc
mov
add
faddp
or
or
and
clc
in
inc
test
adc
push
mov
push
iret
fisubl
dec
pop
inc
aam
in
add
cli
gs
add
aad
stos
mov
sub
pop
fstpt
pop
lea
xor
jo
rcll
sub
xchg
mov
orb
aas
lret
enter
mov
ret
mov
pop
inc
adc
test
mov
dec
mov
shl
xor
sub
inc
or
out
mov
lcall
imul
repnz
ficompl
xchg
add
out
clc
sbb
jl
inc
cmp
jp
push
fcmovne
repz
inc
adcl
add
pusha
jge
jg
inc
imul
loope
xchg
loope
jecxz
sarl
subl
or
sbb
add
or
out
iret
xchg
rcl
xchg
popa
jmp
dec
mov
les
inc
dec
sub
out
cmpsb
pusha
loop
adc
mov
repz
push
sbb
cltd
xchg
dec
cmp
std
std
jecxz
add
cmc
pop
stos
xor
mov
sbb
ljmp
cltd
mov
scas
ss
jae
jecxz
inc
jnp
and
pop
pop
aas
jno
or
or
dec
cmp
xlat
aaa
mov
cmpsl
repnz
mov
dec
sub
pusha
or
in
ficompl
mov
imul
test
jno
frstor
aas
add
lret
jg
pop
mov
les
sbb
std
add
inc
nop
mov
adc
nop
aam
clc
add
adc
mov
jb
inc
jns
enter
pop
adc
je
mov
fbstp
aam
movsb
sub
test
mov
lods
rolb
std
add
lret
pop
pop
cmpsl
lret
mov
mov
and
inc
jp
test
hlt
fldenv
and
xchg
mov
pushf
loop
ror
dec
add
mov
mov
incl
test
inc
fcompl
psubb
jg
push
jge
jge
iret
pop
movsb
adc
push
clc
cmp
enter
jne
sbb
cmp
fstpl
movsb
ljmp
bound
es
call
push
jne
mov
push
jecxz
cmp
rol
mov
dec
dec
test
mov
jmp
int3
divb
and
sub
fld
or
xchg
mov
mov
pop
mov
pusha
jae
pop
in
ret
jmp
ja
lret
dec
jae
inc
add
bound
adc
outsl
or
mov
jmp
adc
negl
ds
inc
mov
gs
jns
popf
dec
push
subl
popa
int3
mov
lods
scas
cmpsl
add
and
insl
cmp
pop
pop
int
test
jmp
mov
xchg
cmc
incb
loopne
shll
in
movsl
mov
fistps
add
xor
in
lret
mov
es
std
push
push
and
shl
pop
bswap
outsb
dec
fxsave
adc
shll
push
ds
mov
pop
jnp
shl
cmp
xor
rorl
xor
xor
cmpsl
sbb
sub
ret
fiaddl
and
mov
or
xchg
xor
movsl
mov
cmpsb
sub
test
xlat
fistpll
push
frstor
aad
or
adc
nop
popa
sub
jb
sbb
mov
lds
data16
add
mov
in
xchg
stos
xchg
pop
mov
daa
fstpl
in
movsb
and
add
push
add
jl
push
bound
add
and
cld
jns
iret
mov
push
and
stos
or
cmp
inc
dec
pop
sbb
sti
adc
cmc
mov
imull
sbb
aaa
adc
bound
inc
cmp
cmp
and
lods
gs
adc
or
pop
add
decb
ds
ficompl
and
cmp
sub
shr
repnz
mov
mov
adc
dec
outsb
add
les
lret
add
mov
aad
orb
mov
movsl
outsl
shll
cmp
lods
insb
popf
mov
inc
sarb
mov
nop
into
and
push
shrl
stos
sbb
xor
pop
loope
push
pusha
sahf
out
mov
hlt
xchg
popf
lret
mov
pop
xlat
sbb
xor
rcl
loope
mov
sbb
sbb
inc
pop
jecxz
mov
jbe
pop
pop
sahf
pop
data16
clc
add
test
or
jo
xchg
push
es
add
dec
loopne
arpl
fildl
or
mov
lods
or
mov
cmpsb
addr16
loopne
in
sahf
sbb
push
aad
cmp
test
lahf
loop
cmc
xchg
test
sub
dec
pushf
or
addb
lods
xor
lea
sbb
lret
adc
add
cmpsl
cld
and
and
cltd
filds
fistpl
or
jae
cmpsb
clc
cwtl
lods
gs
jns
movsb
aam
pop
mov
pusha
test
mov
addr16
xor
sub
mov
mov
idivb
subb
sub
lcall
mov
into
fisubrl
repz
aas
xor
lock
int3
dec
mov
cmc
cmp
cmpsb
loop
mov
push
ljmp
lret
jnp
xor
add
jmp
in
jnp
mov
add
add
bound
jno
push
push
lods
mov
nop
jg
xlat
mov
push
mov
repnz
and
ljmp
frstor
sar
sbb
xlat
add
jg
sbb
add
mov
neg
sbb
sbbb
fwait
stc
inc
adc
jp
cmp
lret
pop
mov
fldl
mov
jne
stos
iret
mul
bnd
dec
jnp
loopne
ja
jo
jbe
fadds
clc
js
and
aas
jns
test
add
subl
scas
mov
jns
fnstsw
int3
lea
xchg
sti
ret
stc
rclb
push
lret
inc
add
cld
cmc
imul
repnz
aaa
cli
pop
mov
test
lods
xlat
fwait
in
lea
mov
fsubrs
bnd
mov
dec
cmpsb
adcb
fistps
sub
cli
add
sub
push
inc
push
out
pusha
mov
stc
shll
stos
orb
add
pop
outsb
jns
jg
aad
xchg
fsubrl
add
push
frstpm(287
mov
or
add
into
cwtl
inc
leave
inc
fsubrl
dec
cmp
pop
add
pusha
imul
adc
cmpsb
int3
add
mov
pop
adc
adc
scas
stc
dec
push
jbe
rolb
dec
cmp
adc
arpl
test
stos
jnp
lret
loop
and
push
sbb
lock
jp
jl
pop
sub
pop
imul
imull
dec
out
mov
out
pusha
scas
lcall
pop
cs
cmp
and
lcall
pop
popa
popf
sbb
jmp
fisttps
fwait
cld
add
mov
add
mov
shll
out
pop
es
gs
cs
les
pop
ficoml
sbb
bound
mov
das
pushf
std
mov
or
add
dec
xor
pop
sub
adc
xchg
adc
xor
xor
ja
pop
mov
jmp
sbbl
loopne
fidivl
insb
in
and
push
sub
insb
or
mov
inc
inc
add
add
shrl
or
loope
pop
adc
push
jne
jg
mov
add
test
daa
int
lods
xchg
repnz
xor
nop
mov
dec
cli
lcall
and
sahf
inc
xchg
stos
cmc
lods
rorl
xchg
aaa
lock
sbb
scas
loope
inc
mov
push
lcall
push
loop
push
filds
pop
test
pop
test
xor
rorl
dec
loopne
test
fisubl
ja
cmpsb
xchg
mov
adc
and
nop
add
cmp
shrl
pop
aad
rcll
lret
and
ja
sub
push
imul
fsubrp
cs
sub
jae
cmp
cmc
in
xor
dec
ret
mov
cmp
je
cwtl
adc
movsl
rcr
scas
jl
shlb
dec
out
jnp
pop
mov
clc
test
jne
jnp
jbe
fisttps
adc
jnp
adc
jb
inc
lret
push
mov
fldt
rclb
stc
xchg
pop
std
add
mov
pusha
xor
mov
loope
sbb
fisubrs
mov
push
pusha
insb
and
or
out
bound
nop
fcoml
int
insl
movsl
push
adcb
sahf
leave
cli
jmp
xchg
lahf
rcll
xor
repnz
ljmp
sub
jp
dec
cmp
dec
cs
xlat
push
lock
sti
fdivl
scas
popa
push
outsl
andb
repnz
ret
cmpsl
or
aad
dec
dec
mov
bound
mov
pop
sub
lods
sbb
andl
out
adc
add
mov
mov
mov
add
push
inc
mov
pop
lds
je
xor
xchg
int3
ret
add
in
sar
hlt
or
xor
inc
add
movl
or
imul
das
mov
roll
int3
lock
sbb
add
ficoml
ret
scas
pop
jae,pn
out
movsb
fsts
int3
jns
sbb
rclb
cmp
cld
fisttpll
xor
push
mov
lods
sti
mov
bound
pop
mov
in
pop
mov
mov
mov
xor
mov
xchg
xlat
pop
push
fsubrl
shl
push
dec
xchg
mov
std
sub
ret
inc
xchg
or
sub
mov
add
and
xchg
cmc
inc
sub
jmp
or
and
insb
sti
ds
mov
ret
or
or
loopne
dec
or
data16
shll
and
rorl
dec
fcoml
mov
jne
adc
pop
inc
push
xor
pusha
cltd
inc
mov
pushf
shlb
inc
addr16
ret
and
jmp
insb
addr16
rol
in
ret
pop
or
inc
mov
stc
cmpsb
and
scas
pop
sbb
mov
repz
sub
sbb
pop
mov
pusha
or
mov
push
sahf
mov
xchg
or
bound
and
push
xchg
sarl
jbe
int
in
mov
bound
out
cwtl
ret
cmpsl
dec
aaa
call
mov
jle
add
out
push
aas
or
xchg
adc
jecxz
mov
fs
mov
pusha
jbe
and
sti
bound
push
inc
fsubr
arpl
xor
add
leave
mov
fs
push
xorl
ficoml
in
mov
mov
xor
lea
xchg
and
jl
pop
lcall
xchg
rolb
int
in
in
outsl
mov
fnstenv
sbb
sbb
cmc
pop
mov
rolb
dec
out
cmp
sarb
ret
lahf
test
imul
out
and
and
scas
push
mov
data16
pop
enter
arpl
mov
pusha
xor
pop
mov
fwait
div
bound
stos
add
mov
loop
sti
insl
push
cmp
out
xchg
in
popa
jp
inc
pop
cmp
dec
lret
mov
xlat
pop
outsb
or
out
sahf
sub
loope
std
mov
enter
shr
add
inc
push
jno
je
mov
and
cli
movsb
ret
sti
fidivrl
hlt
leave
test
and
mov
stc
mov
push
scas
popf
xor
je
push
mull
test
mov
mov
outsl
mov
hlt
cmp
adc
sub
fidivl
es
lods
div
xchg
xor
inc
inc
and
dec
sbb
push
repz
pop
jno
movsl
ja
cltd
mov
loop
cmp
decl
and
jmp
orb
arpl
movsb
xlat
mov
fisttps
mov
xchg
ja
jecxz
rcrl
nop
bound
out
test
insb
mov
inc
outsb
mov
mov
shl
ret
pop
fisttps
mov
push
icebp
movsb
lret
and
aam
push
aas
push
push
js
in
pusha
imul
lcall
dec
push
outsl
push
stos
mov
int3
mov
stos
mov
mov
pop
cmpsl
adc
inc
jle
movl
mov
xor
sbb
push
sarb
dec
cld
sbb
pop
js
not
sbb
add
jmp
cmp
xchg
mov
daa
outsb
ljmp
pop
orl
sbb
push
outsb
push
rcrb
xor
je
and
inc
and
dec
lods
aaa
jl
insb
test
loope
scas
aas
push
movsl
sbb
xchg
sti
dec
mov
xchg
sub
mov
push
inc
jmp
xor
fisubl
fdivl
imul
or
cmc
push
push
notl
sub
mov
bound
jp
mov
data16
jmp
arpl
mov
push
xor
scas
sarb
pop
aad
loope
or
pop
outsl
xchg
or
cmpsb
sub
sti
sbb
or
iret
xchg
mov
inc
mov
mul
pop
mov
push
icebp
or
imul
testl
cwtl
int3
sub
sub
call
sub
sbb
movsl
pusha
aas
aas
push
push
jne
lret
adc
inc
dec
xor
iret
cmp
or
out
mov
sub
pop
loope
dec
dec
filds
xor
sbb
sub
pop
push
in
push
aaa
fwait
jo
cmp
pop
and
dec
xchg
mov
inc
inc
pop
and
fbld
adc
jb
insb
inc
mov
jno
rclb
lock
mov
push
dec
dec
mov
outsl
push
rcr
pop
mov
fsubrl
push
js
xchg
mov
int3
add
rcr
xlat
xchg
ss
lret
lret
adc
jmp
adc
in
mov
xor
xor
jp
cltd
shr
mov
mov
pop
inc
mov
in
mov
inc
clc
es
sub
mov
xchg
lret
inc
push
outsl
punpcklbw
and
ficompl
divl
js
jmp
stc
jmp
shll
jae
add
adcb
sub
inc
mov
inc
data16
jo
xchg
aam
ficoml
in
lea
dec
xchg
mov
adc
cld
fnstcw
aam
inc
inc
inc
mov
sub
sbb
lods
gs
push
lahf
mov
pop
bound
jnp
xchg
xchg
lods
loope
ret
icebp
add
flds
xchg
pop
arpl
inc
sti
jns
and
ret
call
gs
xchg
push
int
mov
dec
lods
addr16
or
or
mov
bound
out
sub
shrl
jp
mov
shrl
dec
cs
cmp
and
mov
sbb
jg
jns
add
test
fld
xchg
mov
cmc
dec
xor
pusha
adc
movsl
mov
addl
cld
jno
sbb
movsb
loope
fwait
xchg
mov
std
notl
ljmp
mov
adc
testl
rcrl
mov
inc
in
cmp
adc
push
push
sub
xchg
xlat
out
outsb
int
mov
cli
mov
filds
loopne
rcrb
sub
xor
xor
push
inc
mov
jns
or
and
fiaddl
sbb
sub
mov
fimull
scas
loop
add
call
add
lds
sti
pop
bound
sbb
sbb
icebp
pop
pop
daa
inc
lods
pop
xor
mov
or
xchg
sub
andb
inc
jmp
pop
dec
mov
xchg
clc
std
ret
inc
xor
xlat
ret
pop
xor
imul
ficomps
sub
inc
mov
xor
cli
stc
or
pushf
out
add
syscall
mov
add
mov
icebp
mov
push
aaa
or
jbe
adc
nop
xchg
fnsave
mov
cmc
fwait
mov
cmpsl
mov
inc
stos
pop
adc
ja
pop
cmp
nop
cs
bound
pop
gs
mov
test
or
jns
xchg
cmpsb
inc
subl
lods
jb
ret
cmc
aas
mov
sahf
cmp
pusha
pop
jl
lods
add
int3
or
ljmp
adc
movl
jp
jno
cmc
and
out
pop
inc
loope
orl
jp
or
test
stos
or
aaa
adc
test
add
cli
mov
es
pop
loope
call
mov
jg
mov
push
in
loopne
fcoml
xor
inc
ret
or
filds
loope
pop
sti
fwait
push
dec
les
test
xchg
loop
lret
lods
and
add
cli
lcall
mov
roll
ds
jmp
fcmovu
rorb
lock
out
mov
test
inc
cld
icebp
faddl
notb
jge
frstor
xchg
or
cmp
dec
js
adc
sub
pushf
or
jno
xchg
sbb
subb
or
or
stos
pop
outsb
gs
imul
mov
outsl
mov
mov
mull
and
cld
hlt
outsl
fimull
jge
test
mov
jns
or
sbb
mov
xor
push
sbb
mov
outsb
loop
inc
dec
mov
mov
lret
xlat
mov
adcb
inc
push
jb
push
mov
xor
rorb
jecxz
or
add
cmp
pop
dec
mov
cmp
push
xchg
shrb
fcmovb
scas
cmp
and
shll
outsl
iret
sbb
arpl
lea
lods
jnp
std
jecxz
mov
mov
neg
out
xchg
inc
dec
mov
pop
clc
stc
stc
xchg
addb
mov
xchg
fnsave
cmpsl
jmp
andb
testb
pop
int
xorl
imul
ja
mov
lcall
jnp
and
fmull
cmp
xchg
push
jge
mov
int
insb
out
gs
rcrb
and
sbb
and
pop
into
outsl
sarl
jnp
test
aam
mov
shlb
push
call
icebp
adc
leave
rcr
cmp
aad
inc
nop
aam
push
lahf
cmp
add
or
add
fildl
or
xlat
ret
test
jb
mov
push
mov
and
lret
in
jge
cmp
mov
or
and
jle
jmp
lret
pop
adc
xchg
cmp
adc
aad
push
movsl
rolb
cmpb
popa
imul
mov
sub
aad
fldl
jmp
stc
rol
mov
mov
cwtl
push
add
add
jecxz
cmc
mov
in
outsl
rcll
jl
sahf
in
or
mov
stos
push
loope
outsb
mov
sbb
xor
arpl
or
sub
cld
cltd
sarl
mov
mov
mov
int
dec
movsl
jne
ret
dec
insl
pop
or
std
out
pop
and
pop
loope
pusha
outsl
xchg
sub
or
push
push
mov
or
dec
pop
push
lock
repnz
add
call
xchg
inc
js
data16
mov
xchg
fsubrs
jae
in
jo
and
pop
adcl
fcomp
lods
pop
inc
mov
rcrl
or
lret
mov
bound
fcoms
fnstsw
mov
insb
es
int
mov
cmpsl
in
repnz
mov
gs
ret
cwtl
bound
lods
enter
int
jno
mov
das
decl
pop
ret
lret
cmc
sbb
mov
mov
and
fisttpl
xor
sub
jns
cmp
pop
jg
ljmp
xor
test
iret
dec
pop
mov
push
mov
stos
in
out
mov
or
mov
and
xchg
cmp
decl
inc
sub
aaa
push
mov
dec
shll
cmp
jge
ja
int
ret
inc
mov
dec
sahf
test
aad
mov
adc
cli
pop
cltd
hlt
insl
stc
cwtl
pop
loopne
sti
sbb
aas
mov
js
frstor
imul
push
adc
cmp
test
shr
or
fistl
test
dec
cli
xor
cwtl
loope
fyl2xp1
jo
and
mov
dec
pusha
ret
lods
ds
scas
pop
cmpsl
pop
or
lret
or
inc
in
sub
or
sub
xchg
inc
pop
cld
addr16
cmp
popa
mov
repnz
enter
mov
add
xlat
lcall
lods
cs
sub
das
sbbb
mov
scas
mul
popf
shrb
push
rcr
data16
sub
add
popa
mov
aam
adc
mov
adc
js
lahf
pusha
mov
cmp
pushf
ret
mov
xor
pop
cmp
mov
sub
leave
loope
fistpl
icebp
add
add
ret
pop
outsl
icebp
adc
jns
cs
pushf
cmp
insl
jl
xor
call
fiadds
cmp
or
clc
mov
adc
xchg
les
jmp
sbb
leave
add
jae
mov
sub
js
insb
cmp
pusha
or
jne
or
in
or
shlb
out
outsb
xchg
jmp
mov
pop
mov
mov
fisubs
xchg
dec
das
and
and
mov
inc
fstpl
push
pop
inc
add
cmc
jns
push
and
icebp
xor
and
mov
aaa
dec
stos
mov
mov
rcll
lds
int3
cmp
imul
lret
popa
repz
adc
scas
call
addr16
or
xlat
pusha
sahf
dec
out
jno
pop
push
jbe
pop
cwtl
das
das
dec
dec
jbe
shll
mov
lock
mov
mov
rcr
mov
or
aam
jp
inc
enter
repnz
mov
jnp
movsl
lods
in
and
mov
out
std
xchg
stos
sbb
mov
xlat
push
repnz
mov
icebp
jecxz
mov
inc
mov
sbb
arpl
iret
ret
mov
loope
stc
xor
xlat
dec
xor
out
loope
fsubl
or
lds
cmp
andl
rcll
xor
jno
pop
cmpsl
outsb
js
add
or
stos
pop
outsl
cmp
mov
loope
jecxz
add
add
repz
call
xchg
pop
fisttpll
pusha
adc
and
and
pusha
aad
dec
pop
cmc
ret
fstpt
dec
add
ja
negl
mov
out
lea
fbld
xlat
cmp
sbb
out
mov
dec
dec
jecxz
or
push
and
movsl
adc
jle
in
pop
dec
cmpsb
aas
outsl
or
ljmp
fcomip
adc
pop
push
fbld
inc
test
jecxz
fs
gs
mov
mov
ss
mov
xchg
inc
movsl
mov
sub
mov
mov
and
loopne
ret
xchg
stos
push
sub
adc
xchg
jne
ljmp
adc
je
aaa
shrb
mov
and
std
ljmp
push
mov
in
lods
pop
je
cmp
mov
sbb
sbb
lret
in
pushl
sarl
xlat
sbb
leave
cli
popf
push
inc
add
pusha
fistl
insl
cwtl
ret
adc
sbbl
out
je
pop
shlb
sbb
bound
dec
rcll
sbb
pop
out
data16
mov
fistpll
adc
repnz
xchg
cmp
lahf
mov
repnz
mov
dec
ret
aas
sub
mov
insl
filds
enter
andb
scas
mov
push
mov
insl
fisttps
les
or
shrb
scas
out
or
push
cmpsl
addr16
xlat
int
inc
jae
clc
stos
xchg
or
or
cmp
jge
inc
sub
mov
add
mov
pop
jl
or
hlt
xorb
add
testb
xlat
pop
dec
ljmp
outsb
aaa
imul
adc
mov
pop
dec
in
out
xor
pop
mov
loop
add
or
adc
inc
mov
mov
outsl
pop
add
lahf
mov
rclb
cwtl
aad
and
push
xchg
scas
mov
mov
or
aad
mov
adc
ret
pop
mov
mov
inc
or
sub
call
mov
and
inc
scas
out
mov
lods
add
xchg
mov
sahf
arpl
xlat
popa
cmpsb
jno
cmpsb
call
fwait
les
dec
adc
push
int3
popa
xor
outsl
mov
enter
ds
cmp
imul
sbb
xlat
fdivrp
xor
repnz
es
test
xorb
movsb
popf
mov
je
cmp
aad
or
leave
lahf
mov
fwait
push
sbb
cmp
or
mov
sub
push
dec
cmp
pop
lahf
dec
and
jo
or
cld
cld
pop
jecxz
pusha
mov
sbb
aam
push
stos
jg
cwtl
jo
or
mov
scas
and
sti
pushw
mov
loop
bound
aas
cmpsb
fldl
sti
in
sub
inc
xorl
fdivl
test
fstp
add
stos
xchg
outsb
ljmp
mov
jg
arpl
pop
loopne
fcom
push
xor
sbb
inc
cmp
dec
hlt
outsl
sub
pop
sar
pop
scas
mov
xchg
das
int3
lods
cmp
loope
sti
fldl
dec
dec
jnp
jb
jp
jmp
bound
mov
insl
xchg
inc
aas
aad
leave
sbb
sub
icebp
aam
sahf
mov
jp
ljmp
jmp
icebp
pusha
inc
xchg
jno
sbbl
sbb
imul
mov
adc
pop
or
and
test
in
or
cld
mov
push
movsl
mov
loope
mov
hlt
xchg
sbb
push
call
sbbb
pop
repz
mov
bound
mov
mov
test
cmpsl
cmp
test
insl
or
add
test
xchg
fistps
or
test
pusha
shrb
cmpsl
andb
and
outsb
adc
xchg
add
mov
ret
and
out
test
jl
cmpsb
add
pop
iret
lret
mov
dec
shl
pop
imul
idiv
or
jns
mov
loope
js
fcmovb
addl
enter
mov
outsb
rcrl
shr
mov
mov
pop
mov
pop
and
scas
dec
nop
loopew
idivl
repz
mov
push
in
out
lea
or
push
pushl
or
xor
lods
call
lret
mov
push
mov
sarb
mov
test
stos
sbbb
les
loop
test
pop
pusha
cmp
xchg
imul
inc
aas
pop
xor
incl
fisttpll
xchg
pop
clc
sbb
mov
stos
cmpl
xor
xor
cmp
mov
pop
or
inc
call
adc
loope
xor
pop
and
push
icebp
inc
movsb
js
test
mov
mov
or
cli
sbb
xchg
mov
adcb
movzbl
and
iret
inc
test
stc
inc
and
mov
stos
pop
out
bound
addr16
lock
imul
sar
and
cmp
dec
pop
loopne
sub
roll
outsb
ret
ss
pushf
xlat
pop
pushf
adc
aad
ds
push
and
add
dec
or
idivl
and
add
pusha
rorl
xor
or
out
add
inc
and
sbb
jb
shr
sbb
pop
jno
test
cli
pop
cmp
sbb
pusha
and
mov
jp
es
xchg
icebp
dec
xor
or
inc
push
mov
pop
sub
out
or
adc
xchg
ret
sbb
sbb
and
cmpsl
nop
inc
dec
jo
add
andl
div
les
fadds
xchg
or
das
sub
cmc
jo
enter
bound
stos
rcrb
ret
pop
mov
sub
mov
inc
mov
movsb
or
xor
sti
stos
pusha
sub
pushf
sub
add
mov
inc
iret
sub
test
or
lret
ljmp
cli
mov
and
fidivrl
insb
jp
dec
aad
jb
arpl
ljmp
lcall
sbb
push
sub
jmp
pop
shll
mov
push
idivb
dec
cld
and
fldt
aam
outsl
mov
pop
jae
popa
stos
cmc
loope
add
or
cmpsl
std
imul
scas
cmp
iret
pusha
sub
cmc
orb
jmp
cwtl
test
pop
pop
std
pusha
sub
push
mov
xor
test
stc
cmpsl
iret
dec
mov
or
rcr
outsb
lret
sub
outsl
in
dec
decb
push
shr
jb
in
jns
jle
and
mov
pop
add
clc
xchg
dec
add
mov
pop
pop
xor
aaa
les
cmp
fistpll
sar
pop
jmp
mov
push
push
inc
scas
test
xchg
repz
mov
fildll
loopne
jmp
outsl
stos
add
jg
xlat
push
add
xchg
pop
aad
in
inc
pop
mov
ficompl
mov
sub
mov
dec
inc
outsb
cld
pop
and
pop
popa
in
cmc
lahf
push
mov
jp
mov
jle
mov
subl
loope
pop
mov
mov
pop
jp
repnz
add
nop
mov
xchg
clc
mov
adc
inc
lock
pop
ja
xchg
jb
cli
adc
mov
fiadds
add
setg
pop
mov
fdivl
pop
out
sbb
add
daa
push
fdivp
add
sbb
rolb
mov
test
mov
push
xor
adc
mov
cltd
push
push
rolb
insb
out
adc
fidivrs
pop
dec
imul
push
adc
adc
sahf
shll
lods
call
add
add
ljmp
mov
fsts
roll
popa
out
shl
pop
sti
mov
jb
stos
xchg
cmp
sbb
mov
faddl
inc
adc
mov
xorb
int3
shrl
test
clc
pop
das
setge
les
ret
mov
or
scas
movl
dec
pop
cmpsb
mov
xchg
lods
int3
loop
mov
cli
cmp
dec
std
test
pop
loop
repz
push
adc
fnstcw
sbb
inc
pop
jp
pop
test
mov
andl
cs
sti
pop
or
inc
movsl
stc
mov
in
push
scas
repnz
pop
xchg
in
aaa
ds
repnz
popa
cmpsb
fdivrl
sbb
mov
cs
pop
or
stc
fnsave
jecxz
pop
movsl
mov
inc
pop
imul
testb
sub
test
bswap
xor
or
scas
pop
lods
aam
stc
mov
or
sub
xor
xor
jp
sahf
cltd
ret
pop
int3
mov
dec
jge
lret
gs
jl
jnp
insb
inc
xchg
sbb
stc
movsl
arpl
sbb
or
mov
cmp
lods
jl
pop
mov
ds
dec
pushl
mov
out
dec
adc
rcll
bound
pusha
fdivs
jg
sub
pop
ret
out
sti
bound
stos
icebp
push
xor
push
xor
mov
outsl
fldt
push
testl
in
mov
idivl
sbb
jl
mov
popa
out
stos
out
ret
mov
cmpb
mov
nop
or
enter
xlat
or
sub
jp
sti
add
xchg
and
add
or
lret
aad
cld
push
and
push
dec
in
test
imul
test
mov
mov
cmpsb
inc
in
lahf
fisttpll
add
shr
pop
mov
add
jbe
lcall
outsl
scas
cmp
sbb
fisttpll
mov
fsubr
push
ret
pop
mov
mov
pop
push
in
sti
mov
mov
lock
cwtl
cmp
jns
sbb
inc
jno
orb
aas
push
add
cmp
jb
test
packssdw
inc
inc
subl
insb
pop
xor
and
test
in
addl
jnp
mov
mov
aaa
and
shlb
cmp
jmp
sti
lods
mov
sbb
aam
xlat
mov
add
popa
test
mov
cmp
add
push
dec
ja
xorl
cmc
gs
out
es
repnz
xor
push
movsl
xor
aad
push
xchg
lcall
pop
cmpsb
loopne
dec
cmp
or
xchg
ffreep
xor
sub
dec
and
xchg
pop
int
and
cld
jns
xor
aas
lret
mov
cs
cmpsb
dec
push
mov
mov
cld
bound
push
or
pop
xchg
cli
mov
es
dec
sti
inc
xor
and
xchg
pop
sbb
jns
or
mov
iret
out
outsl
fldl
xor
inc
mov
adc
mov
cmp
sub
xchg
and
cmp
mov
lock
sbb
repz
testb
pop
mov
or
aaa
mov
pusha
cmpsb
fadd
jp
mov
mov
ret
add
pusha
pop
fs
jl
cwtl
sbb
add
jp
lods
mov
jecxz
insl
sbb
repnz
scas
or
daa
fsubs
sbb
lds
stos
jecxz
cld
mov
sbb
stc
add
mov
mov
repnz
lea
mov
stos
out
lods
push
push
ret
add
sbb
rcrl
stos
sub
jle
xor
mov
xchg
cmp
xchg
jp
dec
fdivr
ffreep
ss
add
rorl
pop
rcrl
mov
and
mov
ljmp
mov
mov
xchg
add
xchg
mov
nop
pop
sbb
pop
or
stos
sbbl
int
push
outsl
notl
orb
pop
mov
fidivrs
out
stos
adcl
mov
mov
and
cmp
pop
and
xchg
jne
mov
inc
adc
dec
pop
mov
jp
lock
mov
mov
pusha
ja
testl
xlat
cld
and
lret
push
push
add
test
cmp
mov
fisttpll
repnz
call
or
movsl
ffree
adc
or
cld
lods
filds
sbb
insl
inc
icebp
sub
sub
lock
lcall
jne
push
and
or
bnd
xor
jge
inc
adc
jae
jbe
sbb
pop
and
icebp
xchg
or
dec
ret
mov
out
rcr
in
push
aad
or
subb
and
push
mov
cld
test
addb
test
or
adc
sbb
jo
in
movsl
in
sub
cmp
leave
loop
add
out
xchg
or
pop
or
mov
push
mov
mov
cmp
cld
dec
inc
mov
insl
sbbl
cmp
dec
fdiv
int
rcrl
stos
mov
pusha
test
mov
xor
jmp
mov
or
cld
push
jecxz
subb
popf
test
or
inc
inc
mov
shl
mov
or
pusha
xlat
daa
or
std
enter
push
xor
mov
fidivrl
sbb
mov
cmpsl
mov
fmul
loop
and
jge
lahf
inc
pop
cmpsb
mov
jne,pt
mov
subl
cmpl
ljmp
dec
adc
add
addr16
lcall
pop
insb
sti
inc
pop
stos
aas
pop
or
and
je
sub
gs
pop
sbb
scas
popf
and
fistps
xchg
xchg
nop
aaa
int
in
push
std
push
pop
jg
mov
fwait
lea
xor
or
scas
push
push
adc
push
jnp
ret
in
and
cmp
lds
div
aad
mov
shr
mov
add
sub
incl
out
adc
or
or
xorl
mov
sbbl
fldenv
sub
pusha
outsl
inc
test
in
rcl
mov
rclb
cmp
cli
scas
add
andl
mov
pusha
lods
or
repz
pop
idivb
pop
jno
mov
leave
shll
mov
out
fistpll
inc
outsb
outsb
mov
je
lret
fsts
fbstp
xchg
adc
xchg
lods
cmp
inc
sti
nop
je
pusha
push
xor
leave
sub
inc
dec
dec
outsb
lret
or
cli
xor
imul
xchg
scas
push
loope
mov
lods
lea
pop
shlb
cld
push
loope
cmpsb
jmp
bound
mov
faddl
inc
faddp
jg
push
fsubrl
loop
stos
gs
jmp
ror
xchg
loope
sahf
dec
insl
mov
lods
pop
jbe
outsl
push
inc
dec
int
cltd
stos
or
mov
push
jb
clc
sub
inc
dec
jb
pop
dec
jo
dec
pushf
sbb
arpl
out
add
sti
movsl
push
xor
scas
cld
and
add
and
pop
xchg
mov
movzwl
mov
lret
push
push
lcall
pop
cmp
mov
pop
mov
cli
or
pop
out
mov
out
or
adc
and
movsl
inc
jg
stos
mov
int3
leave
repnz
inc
dec
xlat
adc
pop
insl
loop
jl
in
les
xchg
mov
push
mov
push
mov
xlat
dec
pusha
test
push
xchg
mov
jg
testl
jmp
mov
mov
lods
insb
and
int
push
sbbb
dec
call
notb
sub
xchg
gs
lds
frstor
filds
lret
out
sahf
rcl
mov
mov
dec
dec
and
mov
jno
out
frstor
push
and
test
add
aad
adc
stos
scas
pusha
test
cmp
imull
mov
or
sbb
movsl
dec
stos
adc
in
shll
cmpl
jmp
stc
int
or
sbb
cmp
and
cmc
mov
jmp
neg
in
mov
mov
stos
pop
xchg
or
sbb
mov
jl
lods
or
mov
jbe
xlat
add
push
lcall
cmp
and
mov
and
inc
jb
fistps
mov
fidivl
jmp
sbbl
push
imul
xor
test
clc
imul
pop
or
stos
pop
pop
jg
scas
adc
outsb
out
xchg
pushl
je
daa
addr16
mov
shll
push
xchg
mov
sbb
clc
sbb
insl
orb
aaa
lods
lock
jecxz
outsl
add
add
bound
mov
aaa
push
sub
or
or
and
es
loop
decb
stos
xchg
add
cmc
or
aam
adc
test
xchg
jecxz
xor
sti
addr16
ja
and
lcall
mov
push
pop
jle
or
out
xor
lock
inc
add
int
push
stc
out
cltd
movsb
pusha
lods
cmc
push
scas
flds
cmc
ret
sub
ret
xchg
insb
and
push
or
cmp
popa
in
in
dec
test
dec
cld
ja
cmp
mov
jle
xor
std
es
ds
and
sarl
sbb
dec
xchg
mov
and
push
cli
adc
dec
stc
jp
mov
push
push
and
movsb
or
mov
aaa
fwait
mov
xlat
adc
mov
sbb
loope
or
shl
mov
pop
push
outsl
cltd
ljmp
inc
in
dec
sub
mov
outsb
push
xor
fdivrl
push
jecxz
adc
pop
pop
mov
ret
xor
xor
stos
mov
push
jns
add
mov
xchg
cmpsl
fs
mov
pop
aaa
jmp
outsb
add
sub
and
mov
cmp
pushf
fcmovbe
dec
mov
cmp
movsl
cs
call
fisttpll
imul
jo
rcrb
cli
ljmp
repz
and
add
popf
mov
jle
inc
or
call
mov
loope
and
loop
cmp
ret
adc
xchg
dec
dec
adc
les
push
std
bound
or
mov
sti
into
pop
fisubrl
pop
cwtl
jne
push
into
in
pusha
sar
xor
or
pusha
aam
clc
add
push
popf
sub
and
insl
adcl
ret
lret
mov
scas
adc
dec
loop
mov
jg
xchg
push
loope
in
inc
repz
xchg
adc
fstpl
and
gs
sub
cmp
fisttpll
mov
sub
out
xchg
addr16
and
loopne
fsub
inc
pop
enter
leave
fs
sub
sbb
std
sub
pop
mov
mov
mov
jl
pop
push
sub
loopne
sbb
dec
mov
adc
lods
pop
out
jle
jnp
mov
rorl
sbb
scas
jne
dec
dec
arpl
mov
xchg
pusha
jns
scas
adc
mov
mov
sbb
lret
fidivrl
push
push
mov
and
xor
sti
test
xchg
jmp
sub
scas
sbb
roll
loopne
mov
cmp
jecxz
hlt
stc
adc
sbb
cmpsl
pusha
mov
arpl
xchg
pop
loope
cmpsb
jo
std
cmp
imul
pusha
mov
xor
inc
sbb
int
push
subb
adc
and
inc
or
mov
mov
or
pop
and
popf
ljmp
fst
inc
push
lds
sub
incl
push
pop
and
movl
js
fidivs
jb
lcall
mov
dec
arpl
pop
daa
xlat
mov
mov
fsubp
ss
dec
outsb
mov
or
sub
inc
sti
adc
fisubrl
sbb
hlt
or
jecxz
xor
cld
pop
add
xor
data16
jno
xor
ret
mov
inc
arpl
ret
sub
lcall
mov
outsb
dec
insb
xor
daa
clc
fists
or
mov
test
repnz
maxps
mov
cmp
mov
add
insl
cli
xor
das
ljmp
scas
push
in
lods
pop
push
mov
pop
pushf
stc
lahf
inc
jne
repz
sbb
mov
dec
pop
and
mov
dec
lret
mov
mov
outsl
insb
jo
inc
addr16
divb
shrb
cli
out
cld
add
or
lods
add
es
sahf
pop
add
test
adc
ds
fabs
clc
roll
outsl
lret
jo
roll
cld
push
imul
mov
xchg
cld
sarl
negl
popf
lcall
loopne
cwtl
out
pop
pusha
mov
or
push
or
adc
pusha
sbb
or
pop
add
sbb
outsl
arpl
insb
mov
add
inc
lret
pop
mov
mov
jecxz
jge
pusha
fisubrs
cmp
ja
das
in
jecxz
pop
or
outsl
test
fcoml
roll
les
out
je
cmpsb
stos
inc
test
scas
sub
fidivrs
fnstsw
sbb
xchg
aam
mov
and
push
fcmovbe
pop
dec
mov
mov
loop
cmp
cli
push
or
adc
call
xor
push
dec
sub
lret
dec
jecxz
js
adc
push
stos
pop
jnp
out
mov
insb
mov
lds
mov
mov
test
icebp
repz
mov
or
or
cmp
mov
cld
cwtl
insb
jle
je
sub
pusha
mov
mov
adc
pop
mov
fsubs
jbe
jbe
xor
jo
lods
cmpsl
lret
mov
sub
dec
ffree
cmpsb
xchg
cwtl
jbe
jg
xchg
in
push
mov
sub
mov
xchg
or
push
cmpsb
xchg
in
insb
sbb
mov
enter
mov
sub
fidivrl
aad
ret
pop
mov
movsl
ret
fcmovnb
sub
mov
push
pop
adc
addb
gs
pop
pop
sub
stc
sbb
fiaddl
hlt
loope
mov
fnstenv
mov
mov
ljmp
xchg
mov
lock
shlb
or
sbb
inc
std
mov
ja
ficompl
repz
inc
leave
dec
jo
adc
xchg
cmp
push
pop
and
jge
shrl
and
jecxz
lods
movsb
jg
pusha
pop
lahf
sbb
dec
lcall
jge
lea
ficomps
xchg
repz
fistps
rcrl
pop
adc
push
lock
movsb
jge
ret
leave
scas
int
mov
push
mov
test
scas
bound
popa
xchg
shll
mov
jno
stos
push
add
add
loope
mov
sub
jo
jg
jecxz
repnz
adc
imul
cwtl
xorl
les
repz
cmp
push
dec
fstpt
shrl
mov
push
loope
push
mov
mov
loopne
jnp
or
loope
mov
adc
ret
xor
sbbb
add
aaa
pusha
jns
cmp
sarl
pushf
aam
adc
pop
outsl
jb
sub
out
add
mov
mov
mov
xor
xchg
sti
es
sbb
jl
in
push
xlat
jnp
fisubl
add
sbb
mov
jecxz
enter
cld
mov
jle
or
ret
icebp
push
cmpsl
mov
xlat
rcr
movsb
call
leave
test
and
fistpl
mov
sti
ljmp
xchg
loopne
arpl
mov
pop
cmpsb
ss
jns
sbb
and
das
fbld
dec
jae
test
loope
xchg
hlt
lods
or
add
pusha
adc
cmp
or
mov
fwait
inc
or
dec
sbb
push
clc
and
sti
test
mov
or
out
pusha
or
loope
in
mov
cmp
push
inc
xor
fstl
lret
xor
outsl
xchg
aaa
mov
pop
gs
inc
cmpsb
fbld
cltd
and
xchg
xor
adc
pop
notl
shr
adc
les
mov
sub
and
xor
ret
push
mov
shrl
mov
fadds
popf
jmp
insl
xchg
mov
rcr
add
fwait
adc
repz
add
cld
xor
mov
mov
lret
bound
stos
push
add
mov
mov
xchg
push
and
decb
mov
xchg
mov
repnz
cld
adcb
inc
popf
mov
shrl
pop
and
je
xor
shrb
and
pop
cmpsl
and
adc
lds
pop
add
nop
mov
out
out
mov
stc
adc
ret
sbb
pop
nop
cli
inc
loopne
popf
cmp
lods
add
mov
add
xchg
lcall
mov
sar
mov
adc
mov
mov
xchg
inc
js
inc
idivl
test
add
mov
push
xor
lret
pop
in
and
cli
aam
clc
es
shlb
jb
mov
sbb
jl
sub
or
jo
xchg
sarl
test
movb
cmpsb
mov
jb
adc
push
je
mov
pop
pop
cli
mov
push
mov
mov
data16
or
push
ficoml
adc
or
shl
es
xchg
mov
in
mov
divl
or
jae
dec
sub
and
lods
test
fdivrp
sub
mov
jno
outsl
xchg
gs
jle
adc
mov
push
xor
dec
outsl
pop
loopne
in
sarl
rolb
jb
sbb
push
add
jmp
lcall
popa
mov
xor
xchg
inc
pop
imul
pop
xchg
mov
jne
pop
mov
push
test
xor
mov
mov
mov
outsb
pusha
icebp
xor
int
push
movsl
xor
pusha
pusha
cmc
sbb
lods
cmpb
mov
xchg
imul
inc
xchg
pop
dec
sarl
imulb
test
mov
pushf
mov
ljmp
sub
add
sbbl
loop
insb
ret
test
push
cli
outsl
inc
inc
xor
adc
repz
and
push
call
pusha
mov
ret
xchg
int
outsl
addb
out
movsl
sub
lahf
mov
xlat
sbb
xor
mov
shll
mov
dec
pop
pop
jecxz
in
rcll
shll
sub
hlt
pusha
clc
ljmp
cmp
lods
nop
stos
ficomps
cs
insl
add
dec
pusha
roll
loop
mov
push
pop
sub
push
jmp
in
bound
push
push
cmpsl
dec
mov
das
out
in
mov
xor
dec
xor
out
xorb
fidivrl
aaa
cld
mov
push
xchg
push
mov
out
or
repnz
pop
mov
loop
outsl
push
and
orl
fwait
or
fcmovnu
add
imul
pop
mov
fcompl
stos
jmp
mov
xchg
xlat
sbb
mov
pop
or
cltd
stos
cwtl
inc
sub
repnz
outsl
xchg
out
xor
sub
pop
push
cmp
mov
fs
movsl
mov
out
dec
push
push
stos
inc
xchg
lods
test
fstpl
mov
mov
adc
int
lods
sahf
xchg
imul
fsubs
sbbb
lcall
mov
repz
cmp
cmp
and
pop
icebp
inc
aad
es
inc
pusha
xor
dec
jnp
and
pop
push
repnz
sub
sar
pushf
fidivrl
scas
andb
pop
popf
add
push
int
test
sbb
dec
neg
sub
jp
sub
and
imul
in
mov
shrd
or
fmull
push
push
fildll
aam
cmpsb
mov
lahf
out
xor
cmpsb
pushf
inc
sbbl
inc
jo
mov
pop
xchg
shlb
jo
cmc
mov
fsubp
sub
ljmp
xor
scas
pusha
dec
mov
or
sahf
xchg
inc
adc
pop
sbb
mov
in
loope
pusha
jae
push
pop
fstpl
aaa
sti
jne
aas
or
cli
mov
jle
xchg
mov
fwait
mov
mov
pop
sub
cld
data16
cld
ret
js
inc
lret
int3
mov
pop
add
pop
or
mov
mov
scas
xchg
arpl
mov
je
xchg
ret
enter
fdivp
insl
loop
dec
shll
lea
push
loop
xchg
xchg
arpl
int3
ljmp
repz
loopne
xchg
add
sbb
jp
rorl
push
arpl
clc
movsl
addl
sti
lcall
inc
xor
fistl
xchg
sbb
pop
ljmp
adc
test
int3
stos
lea
into
cli
mov
sub
xor
sbb
ffreep
stos
mov
vpshufhw
xchg
add
pop
add
xor
sub
mov
inc
rcrb
mov
daa
pop
inc
pop
in
fistpll
cs
repz
fcoml
add
insb
rclb
cmp
lea
cmpsb
dec
push
lock
xadd
inc
arpl
orl
pop
push
mov
movsl
ds
andb
in
cs
outsb
lods
and
ss
xchg
pusha
inc
stos
notl
scas
add
jnp
out
fnsave
mov
xchg
jle
lods
pop
jmp
pop
adc
or
pop
pop
pop
or
xchg
sahf
cmp
stos
add
dec
fadd
push
adc
rcr
nop
sbb
add
inc
lds
xor
jge
pop
mov
push
shrb
jle
mov
mov
push
ja
cli
adc
lea
js
or
adc
std
pop
les
add
or
sbb
js
lahf
pop
mov
daa
sti
push
cld
or
or
lcall
push
push
push
xchg
je
mov
addr16
pop
jb
shrb
aad
inc
adc
jno
dec
inc
fildl
add
jb
push
jae
jne
lcall
xchg
mov
cmpsb
sbb
pop
mov
push
push
jo
xlat
sbb
shll
add
test
call
insl
leave
dec
fiadds
bound
jmp
add
pop
in
xchg
and
movsl
push
xchg
pop
jl
push
das
stos
sbb
mov
fnsave
lods
sbb
lds
repz
push
inc
mov
or
sbb
mov
fs
add
addr16
dec
cmp
or
mov
popf
mov
xchg
jnp
push
es
stos
lods
mov
test
mov
jb
push
repz
xchg
sub
lcall
ja
ljmp
lret
mov
or
aas
nop
repnz
jo
push
pop
sarl
dec
and
sub
pop
dec
mov
adcb
dec
jp
pop
cmp
aam
push
add
scas
int
shr
lods
sub
xchg
insl
jb
pop
mov
add
leave
mov
adc
xor
xchg
cld
sbb
stos
addr16
cmpsl
xor
je
push
add
shlb
sbb
and
test
daa
dec
sahf
shlb
pusha
out
rep
mov
pop
mov
xor
into
fmul
popf
or
sbb
and
movsl
lock
dec
lret
pop
cmc
pop
jmp
sub
loop
xor
sbb
rcll
popa
icebp
repnz
sbb
mov
cmpsl
cmpsb
mov
xchg
sti
xor
mov
cmc
pop
loopne
jp
dec
arpl
pop
pushf
jl
inc
cmpb
sbb
ror
and
xchg
push
stc
push
push
jge
xorl
sbb
or
inc
test
sti
fcomps
push
mov
jnp
scas
push
pop
inc
movsb
pop
imulb
mov
bound
in
data16
xor
pop
inc
loop
xor
and
dec
out
pop
and
mov
ret
jecxz
test
add
bound
xor
xor
lcall
sbb
xchg
aaa
jnp
sbb
inc
mov
in
lods
subl
mov
ss
fnstsw
xchg
test
mov
push
bound
add
leave
pop
aam
jnp
cmpsb
fsubl
or
ret
xorl
cmp
dec
cmpsl
inc
pusha
sub
enter
mov
inc
pusha
mov
ljmp
repz
inc
andl
xchg
loope
fstpl
out
mov
pushf
and
or
ffreep
jns
out
pop
mov
jge
sbb
out
xchg
add
xchg
data16
leave
or
stos
outsl
aas
push
pusha
lea
dec
fisubrs
mov
outsl
lcall
scas
add
loopne
stos
mov
je
incl
jl
repz
aam
pop
inc
adc
jp
cs
ficoml
fs
test
dec
mov
ds
repz
shl
inc
mov
test
mov
movsl
sub
lcall
push
adc
ljmp
push
rol
push
aaa
insb
repz
add
int
int3
rol
jno
and
sub
icebp
fildl
sub
jmp
add
out
mov
and
xorl
mov
pop
or
jle
add
lods
mov
sbbb
popa
test
loop
cs
push
mov
jns
ss
call
out
ljmp
in
push
shrl
sbb
sti
sbb
or
rorl
lods
roll
in
xchg
fs
subb
add
add
outsl
xor
mov
scas
sbb
call
mov
jmp
in
pop
and
and
loope
cmpsl
pop
xchg
mov
inc
mov
jmp
add
inc
ret
xchg
loopne
jp
adc
and
dec
aam
add
sub
xor
sbb
lret
mov
fcmovne
xchg
inc
sahf
xor
fisttps
pusha
fimuls
pop
dec
scas
mov
dec
cmp
push
out
push
sbbb
sub
movsb
stos
pop
shll
sub
ja
ds
mov
xchg
xor
fistpll
inc
cmpsb
jnp
decl
and
andl
loopne
repnz
xor
adc
les
mov
jae
mov
lods
lahf
push
push
shr
jne
pusha
and
jns
add
stos
or
loopne
mov
loop
fst
inc
xchg
pusha
jbe
mov
jge
pop
test
mov
cmc
or
in
test
sbb
mov
enter
adc
or
pop
scas
mov
push
movsl
imul
inc
lahf
push
stc
mov
rcr
jmp
sub
mov
inc
fdivrp
push
pusha
lods
mov
inc
mov
sub
pushf
loopne
inc
dec
sbb
orb
ret
sbbl
sbb
xchg
add
pop
cmp
test
jb
pop
inc
pusha
repz
cmp
mov
scas
or
mov
jbe
bound
js
test
pop
xor
or
repz
push
arpl
mov
addl
fs
aaa
jb
sbb
out
jne
dec
jmp
adc
sbb
dec
pop
sbb
mov
sub
adc
loopne
nop
stc
imul
out
lahf
jp
inc
shrb
sub
or
jle
sbbb
inc
test
jecxz
jl
jns
xchg
sahf
lret
adc
fcmovnbe
insl
mov
xchg
divl
and
add
dec
jo
pusha
fiaddl
rcrb
adc
push
lret
mov
mov
test
scas
iret
loope
mov
rcl
pop
adc
repnz
push
outsl
mov
inc
outsb
cmpsb
sbbb
mov
xchg
mov
fisttpll
or
pop
jmp
push
mov
xchg
lock
insb
lahf
pop
cmpsl
mov
cmp
mov
sbb
sub
push
fstl
and
mov
push
push
xchg
jae
push
test
pop
int3
popa
dec
stc
or
jg
in
in
and
fwait
in
xchg
scas
pop
cmpsl
push
and
mov
jns
add
xor
pusha
leave
stos
imul
pushf
stos
or
push
push
inc
out
dec
test
mov
subl
adc
sbb
mov
sbbb
imul
jp
js
xor
mov
and
mov
pop
ds
and
test
out
bound
mov
sub
jns
imul
pusha
movsl
and
xchg
pop
mov
pushl
bound
sbb
dec
inc
stos
inc
ret
sbb
pop
inc
mov
pop
mov
sbb
je
lahf
outsl
xchg
push
outsl
out
ljmp
xchg
outsl
fcompl
xchg
cld
pusha
xor
clc
push
mov
cmp
cmp
in
jmp
stc
notb
sub
add
xchg
push
mov
cld
out
aam
jg
dec
inc
sti
and
or
scas
test
outsl
push
adc
inc
dec
mov
mov
mov
lcall
or
fdivl
pusha
ret
pop
cmp
outsl
sbbl
pop
mov
add
test
scas
lds
in
repnz
cld
loope
outsb
out
lcall
pop
aad
arpl
fwait
xor
add
inc
mov
pop
fmuls
xlat
add
jnp
scas
insb
in
lods
inc
pop
xchg
sti
push
mov
fildl
mov
xchg
shll
pusha
int
decl
mov
repz
scas
push
lret
pop
jno
loope
enter
inc
jb
ret
ja
movsl
mov
adc
mull
push
and
mov
loopne
jmp
jae
mov
cmpsb
leave
mov
push
sbbb
mov
sub
movsb
mov
scas
outsb
pop
pop
cmp
repz
js
int3
inc
sbb
add
dec
inc
lret
shlb
jnp
pusha
pop
insl
addr16
fcompl
les
jp
icebp
sbb
add
mov
dec
clc
cmp
and
scas
pop
mov
add
add
or
mov
jae
jecxz
dec
jns
iret
pop
notb
shrb
cli
jno
mov
scas
cmpsb
fdivrl
int
xchg
sbb
adc
and
std
sub
mov
inc
jmp
sbb
mov
jg
stc
movsb
push
inc
loopne
xlat
outsl
rorb
lods
sahf
mov
jo
lahf
popa
ror
cmp
xchg
adc
jle
fbld
or
test
jbe
pop
fcoml
hlt
sbbl
js
mov
test
cmpsb
adc
mov
mov
xor
adc
add
add
stos
cmpl
iret
jmp
pop
dec
mov
jmp
push
movsl
mov
mov
outsl
stos
mov
pusha
mov
jge
enter
push
or
dec
mov
shl
subl
pusha
lret
cmpsl
mov
hlt
cmp
sbb
cltd
pop
jge
jo
add
fstl
mov
call
push
subl
inc
popl
arpl
test
stc
inc
and
xor
stos
pusha
fxch
adc
sbb
sti
popa
ds
pop
hlt
movsb
sbb
outsl
ljmp
inc
hlt
in
cmp
fiaddl
jp
xor
es
ret
push
cmc
daa
and
xchg
mov
cmc
xchg
mov
jp
pop
mov
jmp
lea
out
mov
push
jnp
testl
notl
sbb
iret
or
dec
scas
stc
fwait
push
mov
mov
xlat
cli
dec
icebp
andb
je
lock
adc
sub
mov
mov
out
xchg
push
shrl
push
hlt
jle
cmp
int3
dec
pop
orl
stc
pop
add
mov
lret
dec
int
aam
nop
push
xor
push
xchg
call
inc
stos
pop
hlt
lock
ret
cmc
mov
jo
mov
movsb
push
rcl
lock
sti
bound
shlb
xchg
pusha
fcmovnu
arpl
mov
repnz
movb
pop
shlb
xchg
cmc
movsb
js
jo
mov
mov
add
and
fdivrp
jno
stc
rorb
push
xlat
dec
ret
pop
pop
and
mov
xchg
mov
mov
test
xchg
mov
test
pop
popa
imul
lret
pop
inc
popf
mov
imul
and
add
ret
sub
lahf
add
cwtl
adc
jl
mov
mov
fnstsw
scas
mov
pop
filds
dec
inc
in
clc
in
fwait
addl
jo
iret
or
jp
aad
xchg
movsl
int3
xorl
out
jns
mov
sub
sti
ret
popa
and
inc
mov
inc
std
cmp
push
lret
lret
outsb
cld
or
pop
pop
imul
or
add
adc
sbb
cmp
inc
mov
fstl
fxam
iret
push
stc
push
sbb
outsb
xor
mov
icebp
ljmp
shll
cmpsb
adc
shll
ret
sbb
mov
push
push
jo
shll
mov
xor
cmp
lea
and
je
inc
cmp
push
xchg
sarb
movsl
rorb
gs
inc
push
or
test
inc
mov
shlb
add
jg
pop
jns
pop
ja
sub
movsl
aam
pop
sbbl
pusha
and
pop
xor
jbe
push
add
adc
or
sub
shlb
lar
push
mov
inc
mov
icebp
jne
lret
fildll
outsb
popa
cltd
inc
movl
jle
pop
pop
iret
stc
testl
mov
and
sti
pop
mov
scas
ljmp
cld
mov
adc
repz
jle
mov
mov
xchg
sbb
fsubrl
scas
orl
cmp
repnz
out
aas
ret
cmp
js
lahf
idivb
sub
add
mov
cmp
repnz
xchg
insl
aaa
std
sysret
mov
aad
jnp
and
lods
mov
inc
mov
pushf
rcr
pop
addb
pusha
enter
cmp
or
mov
aas
dec
and
xor
arpl
mov
sub
loopne
fsts
mov
clc
or
cs
test
mov
pop
dec
sbb
inc
mov
ja,pn
dec
ja
xor
out
cmpsb
xor
push
push
mov
mov
jno
dec
sbb
scas
add
bound
pop
incl
mov
add
orl
stos
ds
push
push
arpl
and
pop
cmp
adc
adc
test
push
mov
lret
mov
movsb
jge
inc
in
shl
aad
push
or
sub
push
test
pop
cmpsl
mov
cmc
or
mov
rcl
xor
push
inc
add
or
enter
xchg
xchg
repz
cmp
push
sar
lret
fidivrs
ret
jae
or
and
rclb
xchg
adcb
mov
scas
cmpsl
sti
pop
adc
das
subb
push
pushf
sbbb
jo
aam
int3
cmc
icebp
pop
push
mov
cltd
add
push
loopne
clc
hlt
and
cmp
pop
jmp
popf
aaa
or
inc
jg
or
push
outsl
fdivrl
dec
mov
jns
pop
and
pop
xor
dec
scas
hlt
xchg
push
ljmp
int
ror
into
outsl
inc
xorl
lret
pusha
addr16
mov
fwait
push
scas
stos
sub
fimull
es
pop
mov
sub
add
dec
jecxz
lcall
mov
aad
lret
sub
ret
mov
jnp
xchg
stos
mov
call
dec
mov
and
ret
icebp
movsl
adc
and
loopne
mov
shlb
jae
push
jae
std
test
and
iret
std
dec
fstpl
arpl
xchg
cmpsb
mov
add
dec
iret
sub
cmpsb
sti
scas
out
out
lahf
mov
mov
ret
mov
inc
xlat
rcrb
fisttpl
xlat
dec
jne
rol
icebp
mov
mov
pop
dec
fmull
rdpmc
pop
sub
ret
mov
loop
mov
in
dec
push
mov
ds
jbe
pushf
incb
push
dec
and
pop
in
mov
and
dec
xor
stc
xor
aam
adc
pop
adc
mov
jo
adc
pushf
inc
stc
ret
pusha
ror
insl
jmp
pusha
xor
push
inc
or
mov
mov
sbb
pop
xchg
es
mov
fildll
pop
cmp
mov
inc
ret
mov
out
mov
je
jno
push
ret
inc
push
cltd
add
sub
test
arpl
loopne
adc
add
loope
je
xchg
push
jle
adc
loopne
std
movsl
outsb
cmpsb
xor
xchg
shll
jo,pn
sbb
das
add
inc
mov
sarb
arpl
stos
sbb
pop
stc
and
sbb
sbb
xchg
scas
fidivrs
and
daa
cmc
ret
fdivrs
stc
inc
cwtl
cmp
icebp
add
scas
aaa
les
mov
das
cmp
mov
xchg
mov
scas
lea
mov
ds
mov
dec
sti
add
lock
dec
jo
xor
stos
cs
stos
decl
loop
shlb
push
xor
add
int3
sbb
xchg
bound
loope
pop
decb
push
subl
mov
or
in
icebp
pop
scas
jmp
cmp
or
outsb
js
cmc
pop
xor
dec
push
or
add
enter
mov
pop
orl
and
stos
mov
jae
cmp
or
bound
or
movsl
adcb
mov
jmp
gs
mov
popaw
mov
and
jae
int
lods
or
cli
jg
sub
pop
mov
rol
pusha
xor
mov
pop
mov
pop
mov
aad
sahf
and
shrb
int
sbb
jl
xchg
lcall
adc
cmp
adc
push
mov
outsl
stos
and
divl
js
aas
push
push
fcmovnu
cmp
outsb
popa
add
lahf
out
lret
fwait
leave
flds
and
or
cmp
xor
or
sub
or
aad
push
inc
pop
stc
inc
sub
outsb
push
sub
cmpsl
pop
pop
ret
xlat
sbb
loopne
pusha
adc
and
xor
rclb
dec
mov
gs
xor
mov
insl
push
or
dec
aad
adc
sti
pusha
mov
cmpl
push
or
stos
lret
sub
lahf
scas
idiv
fstl
or
jp
dec
pusha
jno
daa
sub
lods
xlat
cmp
pusha
lea
std
arpl
lds
andnps
movsb
mov
mov
icebp
jmp
pusha
mov
and
sub
inc
xor
cmpsb
movsb
jnp
fwait
mov
andb
pushf
xchg
ds
xlat
lock
pusha
popa
sub
add
out
xchg
es
cmpl
cld
dec
pop
out
je
push
loope
adc
pop
inc
dec
cmpl
sti
aam
mov
sub
pop
sub
or
mov
xchg
inc
ret
xchg
bound
mov
xchg
jp
jb
mov
loop
sarb
cwtl
test
imul
stos
mov
repz
mov
push
xor
movsl
cmp
sub
mov
ret
arpl
jo
aaa
in
adc
cmp
mov
mov
cmp
inc
les
pop
leave
sahf
add
movsl
in
mov
aaa
stos
jge
imul
notb
jo
addb
xor
jecxz
mov
cmp
loopne
imul
and
test
push
inc
push
cld
xchg
bswap
ja
adc
jl
cld
dec
pop
mov
sbb
mov
fs
addr16
mov
andps
pop
sub
bound
test
add
sar
add
inc
int
xchg
cli
jnp
push
in
push
nop
mov
popa
fdivrl
les
and
xchg
divb
test
rcrb
scas
adc
orl
pop
std
jp
das
call
push
stc
stc
pop
pop
cltd
xorl
mov
lods
push
add
jge
xor
adc
mov
inc
push
jmp
xchg
jl
add
stc
ficompl
lea
shll
inc
dec
pop
js
pop
mov
pop
xchg
les
stos
sahf
inc
out
jle
xorb
push
jg
repnz
sbb
stos
insb
mov
stc
sarl
loop
aas
inc
maxps
adc
push
push
xchg
add
loope
add
repz
sbb
sbb
pusha
and
pop
mov
mov
mov
dec
iret
mov
mov
ss
ficoml
sarl
push
xchg
pop
mov
jno
push
call
inc
fcmovb
push
dec
fisttpl
pop
and
push
xlat
stos
xchg
cmp
jno
ja
mov
or
in
ror
int
adc
sbb
sbbb
mov
rcrl
movsb
adc
mov
nop
fnstenv
iret
in
sub
sarl
pushl
and
scas
fstl
push
push
pop
fdivl
inc
pop
xchg
call
jp
dec
sbb
and
ljmp
in
mov
add
cmp
movsl
push
insl
and
push
mov
lahf
lret
repnz
cld
inc
cmp
adc
out
rcrl
in
mov
inc
mov
dec
dec
mov
aad
nop
mov
xor
shrl
mov
fidivrl
add
out
out
loop
imul
cmpsl
jmp
pusha
jae
dec
data16
add
push
hlt
ds
pop
xor
insl
loope
mov
mov
movsl
outsl
mov
shrb
out
cwtl
sub
mov
push
sti
adc
or
jl
loopne
mov
mov
stc
movsb
outsb
push
jmp
dec
ss
jle
pop
or
mov
repz
pop
pusha
outsl
daa
pop
scas
push
inc
mov
js
aam
std
push
fwait
mov
adcl
or
push
adc
imul
xchg
sub
xor
pop
data16
aad
fiadds
or
ret
lret
mov
js
outsl
mov
insb
jecxz
xor
mov
dec
in
jle
mov
fistps
shll
ret
mov
ret
jb
and
or
jns
test
jge
mov
neg
adcb
movsl
adc
and
stos
dec
rol
ljmp
sbb
pop
shl
inc
fdivl
shrb
dec
pusha
dec
add
pop
shll
pushl
test
outsl
jbe
roll
or
mov
dec
xchg
clc
mov
rcll
and
std
gs
loope
adc
xchg
push
decb
push
push
pop
jb
rorl
dec
popl
popf
and
mov
imul
jnp
adc
out
test
test
insl
mov
out
push
or
ljmp
push
and
jp
pop
xor
mov
addr16
push
or
fnsave
movsb
fwait
inc
jb
movsl
adc
pop
pop
mov
scas
xor
mov
xchg
pusha
jno
and
js
add
mov
in
popa
pop
icebp
pusha
pop
addb
out
inc
repnz
lods
xchg
dec
jno
dec
and
pop
shl
xchg
jl
rorb
out
inc
lret
mov
lock
add
jle
cmp
pop
jo
test
and
rcrl
andb
insb
pushf
scas
rolb
push
jae
sbbb
sub
pop
jl
push
test
lea
popf
adc
push
mov
or
pop
sahf
jnp
push
sub
inc
xchg
pop
inc
lock
fisubs
mov
inc
adc
and
outsl
mov
lahf
jno
xchg
or
lods
mov
jle
push
mov
mov
ret
addr16
xchg
add
fcomps
cmp
xchg
or
outsl
xchg
out
mov
cmp
sub
in
rcll
ficoml
rclb
lock
sbb
mov
dec
aas
jno
neg
mov
pop
cwtl
bound
pop
and
pushf
into
dec
sar
and
jne
mov
jae
xor
stos
xchg
rolb
mov
cmp
lret
cmpsl
pusha
or
push
mov
cmpsb
insb
mov
mull
int
loop
pop
ds
cli
aas
cmc
testb
mov
mov
stos
arpl
push
mov
jl
lds
push
pop
out
data16
les
ffree
in
fisubl
push
dec
sub
mov
sub
pop
rorb
popf
add
call
pusha
adc
out
call
call
aas
out
int
and
jno
pusha
sub
pusha
mov
xchg
inc
out
cmp
notl
stc
loope
and
cli
xchg
out
pusha
test
ljmp
outsl
nop
push
mov
js
dec
or
sub
in
pop
pop
mov
loope
ret
push
iret
mov
das
or
sub
arpl
ljmp
out
push
pop
stos
hlt
das
adc
fs
push
inc
test
dec
dec
jnp
dec
test
sub
imul
cmpsl
push
rolb
pop
xlat
mov
scas
cmpsl
mov
or
ficomps
pop
pusha
push
and
mov
dec
cmpsb
and
mov
add
pusha
mov
lods
repnz
adc
pop
clc
pop
test
es
dec
adc
lds
lods
mov
popa
in
cmp
arpl
jnp
movsl
sbb
dec
movsb
ret
mov
push
cs
xor
rcrb
or
rorb
sti
and
mov
push
xor
shll
xchg
jecxz
mov
xchg
push
cmpsb
jp
stos
jo
out
add
mov
popa
dec
std
and
cli
arpl
mov
mov
xlat
repnz
sbb
xchg
rclb
mov
inc
fcompl
ret
cmp
and
xchg
pusha
jecxz
jl
add
mov
mov
fcoml
addr16
in
jecxz
je
mov
bound
pusha
mov
inc
xor
adc
cld
or
mov
ljmp
lock
mov
or
sub
mov
mov
jp
or
sbb
mov
cs
sbb
jmp
inc
fldcw
pusha
shl
mov
sbb
andl
pop
mov
dec
repnz
adc
out
mov
mov
jmp
sub
pop
xchg
stc
ficoml
adc
pop
pop
sti
xor
jne
xchg
jle
aad
loop
out
jnp
popa
ret
mov
loope
pop
and
cli
aas
push
inc
outsl
xchg
push
push
add
add
gs
xchg
sbb
mov
and
jecxz
or
pusha
jmp
repz
mov
sarl
stos
cmpsl
repz
mov
jecxz
rcrb
lret
xchg
neg
ret
ret
add
sbb
notl
mov
push
mov
pusha
mov
or
sub
and
jns
mov
loopne
xchg
test
aas
lods
pop
mov
lret
std
mov
call
xlat
xchg
imul
jns
ds
mov
aad
push
mov
mov
lock
mov
mov
cmpsl
out
inc
es
mov
add
xchg
std
jge
popl
jae
jnp
cmpsb
push
xchg
inc
movsl
repz
ret
roll
sub
hlt
sbbl
or
hlt
pop
cmp
ja
jae
jg
out
repz
ret
or
xchg
je
ret
imul
lret
pusha
dec
sub
or
or
xor
loopne
aam
in
push
dec
daa
lcall
inc
cs
mov
aaa
cmp
in
loopne
pop
roll
adcl
popa
or
mov
imul
rorl
inc
xchg
xchg
pusha
mov
sbb
pop
add
sbb
add
adc
es
cmp
or
fwait
out
ljmp
pushf
enter
or
sbb
add
pop
loope
aas
mov
sti
adc
stos
pop
or
movsl
popf
jo
pop
fisttpll
add
nop
js
fidivrs
lret
mov
inc
gs
lret
shll
or
pop
test
add
imul
mov
imul
jecxz
loopne
imul
mov
or
dec
mov
dec
cwtl
adc
outsl
pop
mov
mov
xor
icebp
setno
lahf
pusha
daa
mov
out
or
aaa
mov
sti
fcmovne
lock
push
push
bound
pushf
stc
std
xchg
or
mov
fists
arpl
nop
fimull
pop
in
pop
addr16
push
cwtl
mov
sahf
insl
add
cli
loop
pop
pusha
jae
push
cltd
xor
sbb
clc
sub
rcll
cmc
inc
sti
adc
mov
pushf
pop
jmp
in
testl
loop
insl
mov
jmp
das
xor
push
pop
dec
jge
imul
mov
daa
cmp
filds
std
fwait
jge
and
push
arpl
das
lret
popa
popa
inc
andb
add
cli
jno
bound
push
pop
test
sbb
int3
ljmp
mov
dec
cmp
xorb
lock
mov
fmuls
pop
repz
mov
pop
and
jl
aam
arpl
cmp
pop
lods
fcompl
aam
xchg
inc
add
mov
loop
cmp
hlt
mov
and
and
mov
pusha
incb
sti
or
jno
inc
call
in
shlb
repnz
popf
xlat
jmp
pop
nop
ret
push
mov
jecxz
dec
add
in
adc
test
cli
xchg
repnz
sti
sti
stos
jmp
scas
fldenv
scas
jo
addl
pusha
loopne
shl
pusha
test
adc
test
int3
imul
mov
mov
mov
mov
mov
xchg
cs
mov
push
cmp
dec
xchg
pusha
xchg
aad
js
faddl
inc
xorl
pop
in
ficoms
and
cld
gs
repz
or
xor
xor
sbb
sub
jb
push
jb
jecxz
shrb
lock
out
mov
mov
sub
pop
add
popf
and
cmp
pop
cmc
pusha
andb
arpl
mov
lcall
mov
out
push
add
clc
push
cmpsb
incb
shrb
mov
rcll
xchg
int
popf
add
aaa
aad
cwtl
sub
cmp
fwait
sbb
lods
add
hlt
stos
add
aad
fstpl
dec
sti
inc
jnp
loop
shll
popa
cmp
or
pop
jecxz
pop
scas
sub
mov
incb
bound
lea
in
bound
call
frstor
daa
jnp
xchg
push
test
push
adc
call
xlat
mov
pusha
popf
fs
shrb
adc
xchg
jae
sbb
dec
stos
outsb
repnz
lock
lods
adc
jge
add
adc
mov
add
rclb
inc
push
pop
mov
push
dec
sbb
out
aad
cmpsl
daa
add
imul
xor
push
test
jecxz
outsl
cltd
bound
mov
pusha
dec
pop
mov
sub
data16
std
stos
adc
sbb
ret
clc
ss
ljmp
dec
push
movsl
pushf
icebp
mov
sbb
mov
inc
js
jnp
jl
add
jne
int3
inc
pop
jl
push
sar
xchg
mov
icebp
mov
lock
test
push
xor
mov
aaa
push
rcrb
imul
sub
mov
insl
push
xor
cmp
mov
sbb
xlat
pusha
pop
and
mov
inc
hlt
in
sub
mov
inc
icebp
adc
int
dec
insl
bnd
insb
pushf
fstl
std
jns
dec
or
inc
iret
scas
das
popa
adc
popa
pop
add
out
mov
lahf
cmpsl
add
inc
fbld
and
jl
mov
rorl
les
sub
cmp
adc
sub
mov
dec
xor
loope
sahf
js
xor
ret
add
idivl
push
xor
inc
iret
or
fists
xor
inc
adc
cmpsb
fwait
jecxz
mov
std
scas
mov
xchg
mov
inc
dec
dec
or
repz
lea
out
rorb
pop
jg
movsb
push
push
push
mov
out
cltd
xor
mov
rcr
and
movsb
add
inc
xor
in
adc
sbb
repz
enter
add
repz
mov
mov
ret
es
cmpsb
push
dec
jle
shll
add
jecxz
shrl
insb
mov
in
mov
mov
mov
add
pushf
and
dec
xchg
loope
cwtl
xchg
xorb
repnz
loope
in
std
loop
inc
mov
cmp
xor
sarl
mov
pop
insl
lods
incl
add
lahf
dec
pop
inc
out
cli
pop
xchg
jnp
arpl
jle
pusha
lret
popa
add
and
or
push
jecxz
jns
out
dec
imul
jmp
xor
pop
movsl
test
mov
loope
pusha
addr16
mov
out
sahf
out
add
leave
xchg
push
test
pop
les
dec
data16
pop
les
fists
jl
idiv
xchg
mov
add
sarl
mov
repz
dec
dec
jae
or
sbbl
test
shr
cmpsl
out
cld
xor
bound
pop
fcmovu
push
aad
cmp
sbb
lea
sbb
sbb
es
hlt
stos
mov
push
in
xlat
or
pop
push
mov
and
mov
cmc
or
pop
jg
enter
iret
jmp
sbb
jge
rdpmc
clc
pop
movsl
jle
xor
dec
push
mov
ret
jnp
imul
aas
fistps
imull
jmp
dec
flds
push
xor
push
mov
xor
sub
fdivs
imul
bound
inc
cltd
push
lcall
icebp
hlt
xor
and
ret
ljmp
aas
pop
inc
in
mov
out
outsb
xor
sub
popf
xor
movsb
mov
aad
mov
ljmp
loopne
dec
cmpsb
inc
lahf
push
xor
movsb
inc
cmpsl
add
lcall
dec
push
das
pop
or
fistps
inc
mov
pusha
xor
clc
push
out
fistpl
loop
jns
xchg
inc
repnz
and
push
fcompl
or
inc
fcoml
jp
test
test
inc
pop
testl
pushf
rcrb
and
pusha
cs
hlt
icebp
add
stos
jb
inc
push
jbe
repz
sar
das
mov
pop
pushf
dec
and
sub
lcall
push
push
lret
and
push
inc
cmp
xchg
xor
or
add
jmp
and
imul
inc
cli
loopne
scas
sub
ret
ret
test
or
sbb
movsb
sbb
mov
stc
shll
xchg
xchg
cmpsl
mov
movsl
in
out
adc
aad
out
sbb
mov
stos
out
popf
dec
inc
fnstsw
test
mov
jmp
in
scas
pop
cmp
jge
push
lret
mov
pusha
sub
pop
stos
ret
mov
dec
lahf
scas
mov
mov
push
lock
div
fnsave
aad
lods
decl
popf
or
add
xchg
cmpsl
pusha
mov
add
add
adcb
pop
cwtl
sbb
jle
xor
adc
pop
push
inc
sbb
mov
pusha
in
or
inc
sbb
jne
mov
adc
cmpsb
mov
inc
push
fwait
dec
test
testl
lahf
push
cmc
mov
and
paddusw
ret
stos
pop
jne
adc
mov
out
mov
jno
mov
cmpsb
int3
jecxz
xor
adc
push
sahf
push
mov
rcrb
jmp
adc
adc
jo
lock
ret
mov
xchg
call
pop
bound
add
jno
pop
push
xchg
push
push
push
cli
daa
in
pop
sarl
sbb
fidivl
xchg
shlb
lods
jae
sbb
dec
sbb
or
jecxz
add
and
scas
mov
mov
adc
xchg
out
pop
dec
addl
aad
loop
mov
push
inc
mov
push
pusha
push
rolb
iret
pop
sahf
xor
movb
pop
adc
mov
pop
mov
cmp
std
or
std
repz
pop
mov
mov
cmp
dec
aaa
shlb
push
std
and
fsubr
fld
push
ljmp
adc
clc
shlb
lret
lret
fdivp
adc
push
mov
aam
push
rcl
inc
daa
test
and
jns
mov
loopne
mov
clc
push
aas
lret
jmp
adc
stos
aad
xlat
scas
mov
int
into
inc
sbb
jne
repnz
bound
popa
lahf
test
jp
or
sbb
andl
adc
das
mov
xchg
cmp
icebp
cmpl
add
fstpt
jo
lds
stos
or
sbb
cli
enter
and
inc
pop
jmp
mov
sub
mov
adc
fnsave
icebp
jmp
int
pop
into
sbb
outsl
das
inc
mov
int
into
xchg
cmp
cltd
add
mov
mov
cmp
mov
icebp
shll
xor
cwtl
pop
cmpsb
ret
add
scas
jge
inc
add
adc
jp
mov
sub
filds
rcl
inc
xchg
xchg
pop
mov
and
dec
cld
or
jnp
addr16
test
cld
fisubs
les
cld
pop
jg
into
stos
js
pop
repz
pusha
mov
in
sub
xor
adc
nop
mov
or
pop
push
mov
inc
cltd
pusha
imul
add
lret
or
outsb
fsubrl
xchg
mov
stc
cli
pop
iret
mov
adc
call
loopne
pusha
movsl
inc
fstl
push
js
insb
out
aaa
sub
mov
mov
push
sbb
mov
test
lcall
mov
sbb
aam
push
jnp
das
fisttpll
mov
int3
clc
push
dec
and
mov
stc
and
add
popf
arpl
fcmovbe
jae
adc
ds
and
sub
inc
cmp
daa
ficomps
xor
fidivrl
xor
or
dec
adc
push
lret
mov
inc
mov
mov
fidivrl
push
sub
xor
aas
xchg
repz
fsubrp
aad
lret
push
ret
adc
cmp
mov
pushf
and
repnz
popf
inc
sti
pop
mov
pop
clc
or
out
int
sbb
sbb
icebp
jmp
mov
test
ja
push
fcoml
add
xor
adc
adc
clc
icebp
cs
sub
pop
mov
inc
mov
xorb
or
ljmp
push
push
push
sbb
popf
push
or
je
fiaddl
or
mov
ret
imull
out
or
imul
mov
mov
xor
rclb
scas
lret
pushf
fwait
mov
xchg
add
jo
mov
repz
sub
and
leave
xor
pop
lock
push
adcl
xchg
sub
lds
xchg
nop
pop
movsl
mov
loopne
testl
fwait
test
push
or
inc
outsl
pusha
fidivs
sarl
adc
sbb
les
repnz
mov
sub
mov
enter
jle
inc
rorb
add
mov
ljmp
push
negl
ret
repz
inc
mov
nop
rolb
push
fbld
jg
xchg
lcall
frstor
stos
mov
add
push
sbb
adc
xchg
xor
mov
inc
xchg
dec
and
jno
sub
push
je
lods
mov
vpaddw
rorl
dec
loop
sbbb
push
inc
mov
jecxz
mov
fistps
xor
stos
or
out
test
mov
lret
jp
stos
pop
mov
xchg
jb
adc
mov
jbe
aas
into
shll
lret
movsl
add
pop
push
add
mov
pusha
mov
xchg
add
adc
inc
loopne
pop
jns
cli
shrb
xlat
sub
pop
push
push
lods
jp
mov
outsl
movsb
cmp
cmp
in
xor
sti
jne
dec
sar
and
sub
pusha
cmp
sti
pop
push
ret
xor
enter
sbb
jecxz
dec
insl
push
pop
mov
add
mov
cmpsl
movsl
dec
jp
adc
lock
movsl
arpl
sub
push
loope
sbb
filds
push
mov
lret
pushf
aam
xchg
jbe
lds
add
mov
xchg
popa
dec
arpl
sbb
sbb
addr16
inc
xchg
mov
and
rorl
add
dec
jnp
and
stc
xor
imul
out
std
int
push
imul
sarl
add
fisubl
mov
roll
mov
mov
aam
in
push
cmp
sarb
imul
jp
shr
ret
or
in
and
leave
pop
mov
sub
loope
xchg
mov
xlat
or
adc
dec
imul
stos
lret
addr16
xchg
ret
in
mov
addr16
js
adc
cmp
xchg
pop
mov
push
pusha
pusha
mov
loope
pop
xchg
std
mov
repz
xchg
fs
xlat
pushl
gs
jp
adc
xlat
sub
idivl
cwtl
pop
mov
inc
imul
lcall
cmp
jae
sub
rcrb
ret
enter
mov
pop
mov
xor
push
and
in
mov
mov
mov
xchg
push
pop
dec
mov
adcl
mov
or
rclb
push
es
aad
xor
cmpsl
and
lods
out
cmpw
stc
movsb
cs
push
ret
into
jecxz
je
inc
xor
inc
sbb
test
cmp
cmpb
jmp
subl
or
icebp
call
test
aad
push
lahf
fucom
dec
fwait
mov
fisubrs
push
sti
andb
push
sub
jmpw
aad
sbb
cld
in
fadd
lods
stos
mov
or
add
pop
je
sti
sahf
adc
add
roll
mov
push
pop
sub
call
adc
inc
out
jmp
stos
pop
push
fisubl
sti
je
xor
in
cmpsb
mov
rclb
loope
popa
cli
pop
bound
mov
stos
filds
push
icebp
fnstsw
sub
add
push
sbb
aad
shll
adc
xchg
xlat
mov
mov
xlat
pop
call
push
xorb
jle
pusha
scas
mov
jne
idivl
pop
fcmovbe
inc
fstpl
add
or
dec
inc
mov
mov
cwtl
xlat
cltd
cmp
sbb
lea
test
sti
insb
aas
pop
lds
or
jp
scas
xor
bound
cmc
sub
test
out
xchg
mov
jle
fst
sti
fnstcw
out
sub
xchg
sti
mov
sbb
ret
leave
ljmp
add
add
gs
sahf
push
sub
cmp
inc
cmp
pop
outsl
jg
sbb
add
inc
in
ljmp
aam
int
icebp
lods
add
xchg
or
or
stos
fistps
mov
sbb
scas
test
rcrl
fbld
imul
popf
mov
pop
cmp
add
in
dec
cld
adc
cmc
adc
fistl
out
cltd
imulb
mov
or
stos
cld
aad
pop
pop
push
dec
adc
lods
adc
mov
pop
cmpsb
mov
pop
pop
sub
mov
add
xchg
pop
add
mov
mov
inc
jo
loopne
bound
cltd
imul
pop
shlb
movsl
mov
mov
fsts
stos
ds
cltd
pusha
jno
lods
mov
ret
mov
cmp
bound
movsl
xchg
ret
fdivrp
ss
ja
sbb
and
xchg
fld
mov
hlt
jl
lock
lods
xchg
and
fcmovnb
xchg
aas
outsl
shr
jo
das
and
outsb
mov
repnz
shrb
jno
adc
lret
cmpsb
in
lods
or
push
repz
imul
push
xchg
imul
outsl
jmp
inc
icebp
test
mov
movaps
xchg
push
aad
sbb
jb
sarl
sti
cmp
sbb
repz
scas
mov
mov
bound
test
fimull
in
mov
addl
push
mov
xchg
or
loope
jo
fiaddl
pop
add
fwait
sbb
pop
mov
stc
gs
roll
jmp
daa
cs
outsl
roll
jmp
xchg
xor
lcall
add
repnz
testb
pop
outsl
lcall
xchg
or
fdivrl
add
orb
outsl
or
jp
jo
pusha
xor
and
in
xor
pop
xor
test
push
push
loopne
jo
mov
out
inc
imul
cmpsb
lods
in
sbb
jmp
jbe
or
rcll
add
mov
std
aad
and
rcl
fnstcw
cltd
xchg
dec
cmp
sbb
data16
xor
fwait
adc
movsl
enter
cmpl
pushf
pop
cmpsb
lret
ret
aad
pop
lcall
pop
push
jae
xor
out
fmulp
adc
sbb
and
push
ucomiss
daa
lret
sub
lret
scas
loope
js
movsl
xor
stos
inc
push
inc
push
xchg
or
jp
dec
stc
hlt
scas
pusha
mov
loop
sbb
test
bound
jg
das
shrl
push
sahf
lea
movsl
cmpsb
jnp
pusha
inc
loopne
bound
lahf
push
jo
adc
lea
outsb
xchg
jne
sub
inc
push
adc
out
push
xchg
cs
ljmp
ret
jbe
pop
sbb
mov
ficompl
rclb
inc
fsubrs
aad
std
bound
xor
imul
xlat
js
inc
mov
popf
inc
sbb
pop
push
jo
in
pop
fnstsw
pusha
ss
rorb
inc
sbb
lock
mov
popl
xor
stos
xchg
jae
jnp
push
pusha
push
and
add
mov
aad
add
lods
hlt
stc
es
jne
xchg
mov
jle
or
cs
add
mov
gs
mov
pop
fst
mov
cmp
pop
or
test
pop
cmp
fldl
cli
jl
fcmovb
scas
rcrb
xchg
dec
mov
cmpsl
test
jne
insb
mov
aaa
out
sub
jne
mov
popa
out
negl
or
aaa
xor
int
sbbb
fcoms
jl
jg
in
in
inc
shll
and
sbb
add
and
mov
subl
aam
mov
mov
jmp
sub
fnsave
scas
ret
aad
xor
push
push
stc
stos
aas
mov
loope
inc
gs
jle
test
ret
outsl
sarl
int
test
cmc
testl
cmp
loop
stos
mov
mov
mov
mov
loopne
xchg
call
push
pop
popa
movsb
movsl
cld
pusha
arpl
repnz
inc
mov
sub
in
test
and
mov
mov
cmpsb
mov
mov
jmp
and
out
or
xor
in
ret
das
xor
sbb
ret
andb
in
and
out
push
fbld
out
mov
xor
out
aam
lahf
and
mov
popa
leave
stc
jmp
es
aad
inc
cmp
and
xchg
gs
outsl
mov
stc
adc
pop
or
mov
jo
add
out
xor
push
mov
aas
push
pushf
test
pusha
xor
lods
loope
mov
imull
repz
mov
mov
jge
mov
daa
les
icebp
sbb
pusha
rep
sub
fisttpll
mov
push
mov
sbb
push
mov
test
mov
jp
or
or
loope
dec
adc
lret
mov
jmp
cmp
aad
jnp
mov
scas
lret
aad
js
jg
pusha
into
movsl
pop
mov
pop
shrb
lods
sub
lods
sub
frstors
lret
fwait
sub
out
dec
ret
call
jnp
mov
mov
xchg
inc
push
jo
add
sbb
sti
cmc
adc
jle
std
insl
add
scas
fstl
pop
push
add
outsl
jno
push
repz
lods
mov
aaa
xor
cmp
cmpsl
and
mov
mov
test
int
sbb
xor
test
mov
or
bound
add
loop
mov
mov
ljmp
test
idivb
jnp
inc
xor
sarl
xor
and
fdivs
add
mov
movsl
cmpsb
mov
pusha
iret
fldenv
bound
mov
dec
pop
mov
lcall
and
and
decl
shrb
cmp
fidivrs
cmp
icebp
push
inc
and
test
das
test
out
add
lods
test
mov
mov
out
and
ret
pop
mov
xchg
add
pop
sub
flds
mov
aam
popa
lret
sti
jge
stos
sti
cltd
pusha
push
push
mov
inc
stos
xor
mov
inc
leave
loope
shrb
out
ficomps
jl
aam
and
cld
or
mov
sub
arpl
call
dec
xchg
xor
mov
insl
dec
push
in
fistpl
adc
dec
ret
add
push
jecxz
int
insl
loope
or
sahf
lret
cld
xor
pop
jmp
jl
xor
cli
cltd
outsl
xchg
aam
pop
jge
lcall
aad
push
in
jbe
pusha
and
adc
shr
mov
or
jb
mov
ret
mov
ret
das
popa
fnsave
aam
pusha
movsb
bound
cld
mov
mov
lods
shlb
shll
xor
mov
xchg
jl
icebp
mov
mov
dec
in
cs
and
jne
popa
jns
adc
fcoml
and
lcall
mov
mov
dec
add
imul
cltd
jg
push
inc
fs
rorl
pop
jbe
xor
rol
lods
clc
cmp
loop
mov
fstps
sub
adc
aad
test
cmc
and
cmpsl
xchg
push
outsb
out
inc
shrb
push
xchg
lods
push
and
in
xchg
xchg
or
arpl
dec
or
jg
lahf
xchg
or
mov
pop
enter
push
aas
lahf
movsb
pushl
sbb
xchg
cmpsb
js
ss
jb
data16
iret
pushf
jae
ljmp
mov
outsl
sub
adc
mov
pop
jge
pop
fstl
insb
mov
and
cmpsb
cmp
in
in
nop
xor
mov
pop
pusha
movsl
dec
and
into
add
adc
cwtl
push
fwait
scas
mov
pusha
fisubrl
jp
ret
xor
addr16
cli
cli
in
pop
or
sbb
fnsave
iret
aaa
test
aam
insl
jo
inc
sub
jecxz
cmp
pop
jno
xlat
add
mov
stc
xlat
out
call
sub
lds
xor
xor
cmp
enter
lret
fisubrs
test
adc
sahf
dec
addr16
aam
xchg
add
ffree
lret
imul
push
fidivs
xchg
and
inc
or
mov
sti
insl
mov
xchg
lods
pop
cmpsb
scas
mov
sbb
xor
popf
clc
cltd
dec
loop
iret
mov
mov
movsb
test
orl
enter
jne
cmp
dec
arpl
mov
call
cld
inc
sbbl
or
stos
dec
lea
rcrl
sub
mov
mov
iret
shrl
mov
inc
les
pop
inc
sub
sbb
loope
xor
jns
loope
dec
aaa
sbb
add
ljmp
jle
movsb
or
xchg
repz
test
xchg
stos
jno
mov
loope
pusha
arpl
and
jbe
mov
pop
push
jns
iret
lahf
loop
cmp
jb
or
cmc
pop
pop
hlt
sub
int3
aam
dec
and
mov
fdivr
test
loop
in
jns
rcll
lock
add
xlat
pop
adc
jae
mov
movsb
add
pop
js
icebp
sbb
int
clc
pop
lcall
mov
pop
lods
mov
addr16
test
pop
and
add
mov
sbb
push
push
xor
icebp
repnz
pop
pusha
mov
repnz
jle
inc
and
adc
cmpl
fstl
adc
es
jns
cli
idivl
pop
mov
inc
mov
sub
dec
scas
aas
add
outsl
pop
rcll
popa
stc
add
fsubs
mov
mov
imul
popf
fcoms
cmp
inc
test
and
idivl
mov
dec
out
adc
clc
jb
pop
push
aaa
test
repz
jne
in
adc
cwtl
insl
pop
jns
fbld
lea
dec
cmp
test
and
flds
shl
lret
mov
sub
mov
push
outsl
and
push
mov
sbb
imul
rcrb
adc
xor
add
negl
imul
mov
jnp
pop
popf
adc
cmp
lods
je
fidivrl
mov
mov
add
mov
les
in
and
and
pop
imul
pop
pop
call
mov
add
jbe
add
sahf
out
fld
roll
roll
jb
repz
ficompl
push
loop
pusha
nop
push
mov
loope
in
xor
scas
js
inc
xchg
sub
push
xor
adc
rcl
pop
repnz
out
xchg
mov
outsb
aaa
xchg
lds
out
movb
cmp
shll
aas
lcall
cwtl
incb
dec
cmp
adc
dec
stos
int
jo
lcall
mov
xchg
lcall
and
rorl
mov
test
add
in
lea
adc
cmp
outsl
mov
pusha
and
and
movsl
call
xor
rcl
xor
pop
mov
jl
cmp
jns
sbb
push
or
and
rcll
stc
xor
adc
mov
cmp
push
outsl
sarl
pop
shll
outsb
dec
sbb
adc
incb
dec
jnp
mov
ja
sbbb
cld
push
fmull
sub
cmp
sahf
xchg
data16
bound
movsb
mov
jnp
stos
rcrl
pop
add
ret
ljmp
mov
pop
ficomps
std
repnz
rsm
push
stc
idivl
mov
add
jl
push
xchg
test
xor
pusha
mov
int
add
je
mov
bound
xlat
aaa
loope
sbb
lds
mov
jbe
subb
in
xchg
or
test
cwtl
nop
mov
shr
or
inc
sub
mov
push
xor
fidivs
cmp
jae
add
cmp
lahf
jb
xorb
mov
xchg
test
pushf
test
clc
test
pop
test
scas
pusha
jl
jge
push
pusha
push
in
add
leave
pusha
mov
xchg
sub
cli
jecxz
adc
icebp
out
lcall
ficoml
test
mov
jecxz
push
sbb
push
les
aad
dec
icebp
pop
sub
out
xor
cltd
push
push
loop
xchg
fstpl
imul
cmpsb
test
cli
nop
loopne
mov
imul
dec
cmp
ds
cmp
in
movsb
mov
imul
out
mov
mov
sbb
or
ljmp
mov
movsl
fisubl
sti
mov
ret
mov
pusha
push
call
orl
push
addr16
sub
fisttps
aad
or
scas
mov
jmp
dec
fsub
sub
sbb
xlat
mov
out
push
push
lds
out
jl
pop
inc
push
xlat
pop
xchg
mov
xchg
pusha
mov
dec
int3
out
inc
and
pusha
sti
mov
rcl
movsl
lcall
bound
mov
pop
and
lcall
cs
stos
sub
test
dec
jo
pop
push
mov
fldl
jo
push
inc
loop
pusha
inc
lods
mov
mov
and
aas
enter
icebp
mov
pusha
addr16
arpl
jno
mov
dec
mov
lods
mov
sbb
pop
aad
dec
fsubl
rcll
mov
inc
mov
pop
loope
jno
xchg
mov
out
xchg
xchg
div
call
adcb
jmp
decb
in
xchg
pop
mov
pop
xchg
mov
inc
mov
inc
jl
fimull
mov
outsl
add
or
test
xor
mov
stos
push
cmp
sti
adc
icebp
dec
cmpsb
and
fcmovu
push
pushf
add
lret
aas
mov
jae
xor
bound
sub
sbb
cmc
dec
into
jmp
sub
in
loop,pt
test
dec
mov
jo
add
out
test
adc
add
loope
pop
stc
sahf
mov
xchg
pop
fwait
jp
cs
push
add
aam
pop
sub
adc
jge
mov
inc
mov
adc
imul
add
mov
outsl
cs
lds
fwait
lret
jno
cmpl
and
call
adcb
js
jae
mov
mov
call
dec
dec
pop
cltd
pop
mov
testl
sbb
pushf
pop
pop
out
fmuls
mov
jl
outsl
orl
lcall
out
adc
les
in
mov
mov
or
sbbb
and
cmp
cmp
lret
pop
or
jns
sub
fucomp
xchg
pop
fidivrl
dec
add
pop
xor
add
dec
sub
xchg
cli
stc
pop
ret
mov
cmp
jp
cs
mov
cs
mov
mov
add
fimull
or
cld
fstl
imul
dec
ret
jecxz
add
ret
inc
nop
or
add
mov
sbb
add
outsb
mov
ja
leave
hlt
pusha
sub
mov
and
in
cmpsb
cwtl
push
sbb
pop
or
push
pop
fsubl
pusha
pop
cwtl
pop
mov
std
bound
dec
ficoms
lea
dec
push
ret
icebp
cwtl
andb
mov
pop
jae
insl
repz
jo
sub
xchg
mov
data16
cmpsb
fcmovb
inc
loope
bound
adc
es
dec
pop
test
ret
test
in
cmc
pop
dec
flds
ds
dec
push
mov
bound
inc
inc
push
imul
or
shl
dec
cmpb
cmpsl
mov
lret
lcall
push
xchg
sub
sub
ljmp
xchg
sub
loop
mov
aam
into
out
xlat
lea
push
jb
mov
add
cmp
push
repnz
inc
stc
cld
and
xchg
xchg
fbld
ds
inc
push
outsl
fisttps
cmc
xor
icebp
fcoms
xchg
lock
push
jnp
shlb
jns
in
or
push
sahf
int3
xchg
inc
add
jmp
or
unpcklps
addr16
pop
jnp
jns
bound
cli
sub
test
into
xor
cli
add
loopne
pop
jecxz
mov
or
mov
mov
xchg
xlat
sub
cmp
imul
ret
xor
outsl
stos
ret
sahf
mov
jle
or
pop
jo,pn
mov
frstor
enter
xchg
in
je
cmpsb
mov
fimull
test
jno
roll
leave
mov
fnstsw
jmp
xor
imul
pop
add
shr
pop
aad
pop
arpl
loop
hlt
sub
dec
inc
lock
pop
int
or
inc
mov
pusha
mov
movsl
pop
cmp
jp
lret
adc
inc
ficoml
pusha
fcomps
popa
and
mov
fsubr
repz
mov
add
pop
mov
into
stc
popa
xchg
add
xor
cs
shld
lea
sbb
dec
shlb
aas
inc
repnz
aas
lods
repz
ret
movsl
and
cmpsl
jns
fstpl
out
dec
or
shrl
shrl
les
fimull
lods
xor
pusha
push
stc
mov
icebp
stos
mov
orl
pop
outsw
scas
push
lahf
sub
cmc
xchg
mov
icebp
ficompl
cmpsb
out
and
xor
dec
out
add
dec
fdivrl
cmp
ljmp
test
fisttps
jp
push
mov
repnz
xor
jge
adc
mov
faddl
push
add
jge
and
cltd
clc
into
cmpsb
ds
outsl
movsb
js
cmpsb
or
cld
pop
or
ljmp
dec
pop
scas
fcoml
or
push
lret
das
inc
or
xlat
rolb
outsb
sarl
popa
cmpsl
and
and
in
mov
insl
push
jecxz
rol
fcmovbe
lock
int3
cmpsb
xor
dec
xchg
fnsave
mov
jp
or
sbb
insl
in
cmp
xchg
pusha
loop
test
sbb
loopne
cmp
repz
cmp
movb
lcall
aad
jb
push
pop
mov
sti
sbb
cmp
rcr
inc
fbstp
imul
inc
jmp
xor
bound
add
add
mov
pop
mov
pop
ret
jnp
inc
inc
fldenv
cmp
outsl
or
fbld
out
jb
gs
mov
add
flds
jl
lret
xorl
sub
or
sub
xchg
mov
xor
sbbb
mov
mov
lods
pop
movsl
popa
add
adc
sbb
or
dec
std
xor
fisubrs
shlb
pop
sbb
lahf
push
mov
std
push
mov
pusha
jne
mov
arpl
andl
xchg
pop
add
stos
pop
mov
sub
fs
in
push
cmp
int
mov
lods
or
lcall
xchg
mov
pusha
xor
or
mov
sub
push
clc
pop
dec
ljmp
das
addl
ret
push
fidivs
fistpll
pop
pushf
in
xchg
ret
dec
or
ficomps
mov
shll
mov
mov
js
sub
sahf
jae
cli
fiaddl
sub
stos
and
or
pop
and
out
push
aaa
add
and
xchg
push
xchg
ljmp
mov
mov
icebp
xor
mov
xchg
loope
cmp
clc
rcrl
sahf
sub
and
sub
xor
fists
push
pusha
lcall
xchg
pop
and
in
xor
repnz
jb
fpatan
fidivrs
mov
stos
xchg
sbb
pop
pop
pop
mov
or
push
fldl
xor
lea
aam
inc
lock
inc
pop
mov
test
sub
out
scas
pusha
xor
mov
inc
sbb
or
movsb
out
mov
shr
sbb
adc
ret
iret
sub
xor
andl
add
insb
or
int
push
ret
xchg
bound
nop
out
cs
sub
mov
cmp
rorb
add
pop
lret
push
dec
add
push
scas
div
inc
scas
jne
pop
cld
int
xchg
adc
cmpsb
xchg
push
mov
cli
and
jmp
bound
repz
mov
push
cltd
mov
icebp
mov
imul
cli
adc
push
inc
stos
insb
test
push
lcall
mov
pop
rcl
stc
jl
js
push
xchg
jae
loope
ljmp
xor
cld
addr16
fildll
fsubrl
and
push
add
rorl
adc
dec
scas
je
pusha
sbb
stos
imul
sar
cmp
sub
mov
sub
adc
fldenv
repz
jmp
push
jno
xchg
xor
sub
outsl
xchg
dec
cld
cld
loopne
mov
int
or
inc
vaddsubps
outsl
insb
cmp
adc
add
xchg
call
cmpsl
ficompl
fldl
ret
jo
movsl
pop
lds
mov
mov
and
xlat
xlat
cmovae
scas
mov
xor
lret
pusha
xlat
mov
sti
stos
mov
xor
adc
fcomip
push
xchg
ljmp
icebp
loopne
mov
shll
jno
fildll
ret
ja
je
sbb
loop
pushf
std
inc
jge
int3
mov
and
sbb
mov
decb
in
sbb
push
loop
std
or
adc
mov
ror
or
xor
jno
dec
sarb
sub
andb
add
mov
stos
jns
xchg
or
cmovo
pop
push
jecxz
roll
lcall
add
pusha
jo
lret
and
sbb
xchg
test
cwtl
shrl
mov
and
stc
neg
rolb
xchg
xor
mov
hlt
repz
out
jge
mov
xor
out
stc
sub
ffree
es
out
repz
or
addl
pop
ret
lods
es
xor
or
aam
rol
outsl
lahf
and
jns
push
pop
inc
outsl
ret
je
rolb
ret
bound
adc
add
push
jae
je
mov
movsl
mov
out
lcall
or
xlat
sub
imul
gs
fs
outsb
test
jge
test
ja
fwait
ret
data16
leave
jns
add
outsb
faddl
xchg
mov
fwait
xchg
es
repz
sbb
and
lcall
mov
dec
stos
sbb
pop
outsb
adc
push
dec
pop
cs
inc
aas
pop
and
lods
xlat
arpl
cmpsl
mov
sub
sar
add
jns
pusha
jge
cli
dec
es
dec
jae
pop
mov
sbb
mov
pop
cmpsb
pusha
push
pusha
xchg
lret
test
pop
pop
lods
addr16
mov
jo
cmp
shll
cmp
xor
adc
mov
adc
mov
rcl
dec
pop
xchg
adc
xor
mov
cli
ret
outsb
or
xlat
adc
jae
or
lods
jns
jle
cld
sar
imul
cmp
jb
ret
add
pusha
aas
mov
lds
push
push
mov
loopne
mov
mov
fbstp
mov
pop
addr16
fdivr
push
or
outsl
fs
sub
icebp
add
test
mov
andb
mov
and
cli
adc
cwtl
rorb
in
sahf
leave
or
aam
mov
loop
js
data16
add
sbb
test
dec
cmp
pop
mov
mov
adc
mov
mov
or
outsl
ret
push
scas
mov
cmp
fnsave
add
sub
xchg
cmpl
pop
sub
je
inc
add
inc
iret
out
jno
test
push
icebp
movb
jg
inc
sbb
aas
sbb
fcoml
incl
add
push
cmpb
rorl
je
add
jle
rol
lret
mov
dec
lret
sbb
aam
and
pop
push
xor
xchg
insl
test
ror
push
outsl
jl
mov
xchg
jle
mov
sub
lods
sahf
add
lcall
dec
pop
mov
std
bound
in
mov
loop
ret
or
insl
push
mov
out
or
add
xchg
test
mov
adc
pop
cmpsl
rol
insb
add
or
lea
popa
popa
and
and
xchg
movsb
push
test
jecxz
std
in
lret
dec
pop
negb
jb
pusha
hlt
test
movb
out
push
push
xor
cmpsl
pusha
jl
or
loop
rcll
jle
mov
xor
lret
inc
loopne
pusha
push
pop
dec
mov
pop
pop
dec
pop
or
out
faddl
xchg
mov
pop
adc
fst
aam
enter
sub
sub
daa
lds
and
outsb
mov
and
icebp
mov
mov
dec
dec
pop
inc
lods
mov
xor
loop
bound
mov
cmp
stos
call
push
cli
int3
roll
loope
mov
rclb
stos
pop
jmp
sbb
repnz
or
xor
or
iret
sbb
pusha
mov
enter
rorl
push
add
lock
loope
scas
push
mov
out
les
sub
push
movsl
sub
mov
cmc
sbbb
sbb
cltd
push
mov
enter
rorl
inc
push
mov
roll
jmp
adc
xor
rorl
pusha
inc
jecxz
mov
cmp
xchg
jno
inc
jle
or
out
cmp
shlb
movsb
push
xchg
imul
or
fidivl
add
pushf
bound
mov
xlat
pusha
mov
repz
in
roll
xor
lret
inc
push
fnstsw
stos
pop
pop
sti
mov
adc
cmpsl
xor
push
mov
pusha
dec
scas
pusha
xlat
jne
cmp
or
lods
mov
jl
jo
inc
adc
adc
ss
mov
add
loop
jae
arpl
sbb
pop
xor
cmpsb
xor
fnstsw
mov
insl
lock
lea
or
mov
pop
inc
push
push
adc
fsubrl
mov
mov
add
adc
les
sbb
aaa
sub
mov
cmp
push
sar
sbb
test
lock
aaa
es
loope
mov
add
lret
jnp
lds
in
adc
add
pop
mov
gs
inc
shll
out
push
sbb
imul
shrl
nop
inc
int
sbb
fisubl
popa
xlat
rcl
inc
pop
aam
dec
inc
adc
mov
sbb
sbb
inc
push
out
mov
dec
jne
imul
cmpb
push
push
ljmp
subb
lret
loope
imul
xor
push
and
xchg
mov
add
movsl
jns
jbe
jns
dec
and
scas
cld
ret
and
push
fucomip
std
jae
ret
dec
rcl
aam
and
push
mov
mov
dec
subl
and
movsb
pusha
or
insl
dec
test
mov
dec
push
in
sbb
sbb
add
fcmovbe
and
out
fcmovbe
inc
mov
bound
push
sub
mov
xchg
and
icebp
inc
fcomp
lret
mulb
dec
addr16
fs
mov
into
mov
xor
cmc
sbb
insl
pop
xchg
ljmp
dec
les
push
movsb
aas
stos
in
hlt
and
sahf
xlat
mov
ds
stc
and
inc
fidivrs
pop
stos
mov
mov
pushf
mov
or
lret
scas
popl
ds
adc
iret
icebp
int3
orl
loopne
mov
filds
cltd
push
push
lret
push
out
xchg
lret
cmp
xor
pop
dec
mov
xchg
icebp
adc
repnz
pop
mov
mov
xorb
cmpb
pushf
dec
mov
dec
mov
bound
xchg
and
cltd
inc
mov
and
mov
mov
into
xlat
cmpsb
jae
outsl
jmp
or
notl
movsl
jl
test
sbb
push
jl
or
bound
test
mov
pop
pop
jge
pop
inc
cld
in
aaa
sub
or
add
enter
cmc
hlt
mov
ljmp
test
and
cmp
cld
mov
icebp
xor
pusha
push
cmp
test
scas
clc
mov
cmp
dec
arpl
cld
xor
les
push
inc
adc
clc
popa
push
es
fidivl
jb
icebp
imul
insb
xchg
cwtl
pusha
pop
clc
pop
cmp
sub
int
dec
sarl
push
adc
inc
push
loopne,pt
jmp
jg
push
jg
mov
push
clc
add
arpl
dec
push
mov
mov
add
push
cmpsb
mov
xlat
pusha
fisubrs
mov
out
cwtl
sbb
xchg
fimull
xor
cmpsb
jge
int3
dec
sub
pop
aam
adc
push
mov
pop
test
mov
xlat
ret
je
jae
int3
sbb
inc
das
test
xor
jg
arpl
aad
fsts
sbb
imul
add
inc
mov
pop
es
xorb
mov
lea
pop
ret
mov
xchg
fisubs
lahf
cmp
ror
xor
xlat
pop
rcl
push
ret
leave
and
lods
pop
xor
icebp
sub
xchg
pushf
sbb
add
dec
ret
ljmp
pop
xor
push
subl
iret
outsl
insl
popf
movsb
add
test
pop
or
xor
loop
popa
arpl
mov
cmp
cmp
nop
push
jbe
repnz
push
ja
rcrl
movsl
sbb
sahf
dec
xlat
pusha
call
mov
out
sbb
mov
cwtl
enter
pop
push
sub
ffreep
in
mov
in
bound
mov
rolb
test
cmc
add
push
mov
adc
shr
pop
stos
imul
push
dec
je
loopne
cmp
cmpsb
pop
aas
inc
inc
xor
ret
mov
cmpb
or
and
mov
loopne
xchg
sbb
cmp
sub
scas
lret
ret
xlat
adcb
push
add
lods
xchg
int
cmp
shlb
dec
shl
popf
xlat
outsb
in
lock
pop
push
mov
dec
sbb
and
mov
mov
and
loope
fsubrl
cmp
pusha
cwtl
shrl
mov
pusha
int3
scas
pop
lcall
fstp
mov
loope
test
lret
jp
mov
lcallw
icebp
imul
cmp
jno
dec
inc
lret
mov
jecxz
mov
mov
out
xchg
cmp
mov
xor
decl
ds
xchg
test
pusha
loop
jp
nop
icebp
adc
xor
xor
xchg
lods
mov
mov
or
xor
adc
jmp
popf
jp
in
push
dec
shrb
outsb
xlat
sub
pop
inc
fidivl
push
jae
or
add
push
clc
xchg
cmpsb
push
jmp
loopne
adc
movsb
dec
push
insb
jp
sbb
add
sbb
lea
popa
jb
dec
outsl
mov
pop
cs
push
dec
mov
rol
jae
notl
idiv
fst
and
mov
cld
mov
lds
inc
or
pop
ret
gs
scas
push
out
fiaddl
push
jle
scas
pushw
cmp
aad
xchg
out
lods
sub
jnp
jl
es
cli
js
scas
push
lahf
aad
cmp
mov
out
mov
dec
mov
leave
stos
fdivrl
pushf
xor
icebp
mov
pop
cmp
push
push
pop
jns
inc
jp
mov
jae
insb
faddl
outsl
jns
xor
push
mov
mov
lahf
pop
aad
pop
mov
fstpl
repnz
sahf
in
pop
sub
jle
sub
ret
stc
lea
rcll
pop
mov
mov
loopne
pop
xchg
mov
pop
sub
add
shr
inc
ljmp
inc
out
sahf
mov
ret
hlt
push
inc
add
in
jns
aad
lock
push
ds
sub
cmc
sbb
shlb
pusha
lds
inc
sub
sti
int
sub
shrb
aaa
leave
or
sub
add
orl
push
push
xchg
inc
add
lods
pop
call
mov
or
stos
loope
mov
add
aaa
sub
cmp
int
sub
sbb
and
add
jno
cli
pop
or
mov
mov
mov
test
push
mov
cli
xchg
xor
fadd
cli
fwait
xchg
xchg
ret
mov
aad
fcmovb
ja
push
cmpsb
mov
sahf
sbb
cmpl
pusha
pop
lods
shll
mov
bound
mov
psubw
cmp
and
imul
pop
loop
push
dec
mov
ds
shll
xchg
cmpsb
jb
shll
fstps
bound
xchg
xor
and
xchg
nop
inc
clc
inc
test
xchg
mov
mov
movsl
xor
mov
mov
test
sub
ret
out
pop
push
fimull
std
sub
add
mov
sub
pop
pusha
pop
and
or
or
cmp
repnz
adc
inc
out
cld
mov
fs
lret
pop
shrb
je
std
jbe
mov
pop
mov
dec
subb
rorl
aas
lahf
lcall
xlat
sbb
add
jno
ret
cld
cwtl
mov
lods
inc
dec
rolb
mov
pop
adc
sbb
jle
and
jge
fcmovu
mov
push
adc
out
sub
fdiv
inc
movsb
adcl
scas
popf
add
mov
sub
cmp
addr16
enter
jno
clc
sbb
shll
mov
lods
add
jmp
popf
cli
loope
sahf
xlat
fdivrp
and
data16
or
pop
iret
sub
adc
and
ret
cs
dec
mov
pop
lods
mov
mov
movsb
call
nop
dec
and
icebp
inc
add
jge
mov
divb
pop
jns,pt
mov
mov
ficoml
aad
loop
sbb
test
int
lods
pushf
or
aaa
pop
and
add
fisttps
or
pusha
push
mov
int
sub
sub
sub
add
outsl
out
sbb
test
dec
fmul
lcall
fucom
push
sub
mov
cmp
loopne
and
bound
stc
leave
mov
std
inc
and
das
pop
mov
loop
add
lea
stos
jbe
fsubl
add
push
push
fildl
mov
sti
xor
imul
dec
xor
xor
aad
push
cltd
in
out
cmpsb
stc
inc
xor
stos
pushf
cmp
rcl
shr
add
aam
sbb
jne
cmp
ljmp
lcall
movsl
adc
inc
fsubl
jne
cmp
aad
cmp
xor
pop
gs
xchg
lock
sub
jnp
loop
xor
sub
or
mov
mov
pop
scas
fwait
adc
pop
cmp
and
mov
imull
cmpsb
and
mov
or
movups
je
test
lret
pop
mov
fs
cmp
in
cmp
or
popa
test
lcall
enter
sub
mov
pop
mov
shlb
pusha
pop
popa
rcrl
mov
and
cli
fstpl
fiadds
add
test
push
lea
lea
push
stos
mov
in
repz
repz
pop
nop
xor
rcrb
lds
adcl
stc
or
mov
lahf
xchg
test
ret
mov
lock
inc
aad
dec
pop
adc
iret
mov
mov
cmc
or
lahf
int
xchg
lcall
repz
daa
ffreep
mov
rol
mov
mov
mov
aaa
cli
in
sti
pop
clc
iret
pop
lcall
repnz
inc
fistpl
push
xor
mov
adc
rcrl
outsb
mov
lods
pop
sub
jnp
push
and
test
std
lcall
adc
mov
cmpsb
pusha
loopne
ds
in
pop
lahf
out
add
cmp
mov
cmp
pop
mov
rcr
fiaddl
cld
mov
hlt
adc
into
push
out
jno
in
mov
cmp
adc
adc
push
aad
cmp
pop
stc
cmc
loop
pop
test
or
outsb
cmc
jae
rcll
and
xlat
ret
dec
mov
icebp
mov
aaa
mov
aaa
test
and
fcomps
aad
pop
mov
push
add
cmp
mov
and
push
or
fwait
movsb
dec
sbb
push
jge
dec
mov
sub
daa
mov
inc
cmp
mov
or
int
and
dec
inc
test
xchg
hlt
inc
test
arpl
or
pusha
cmp
xchg
dec
push
dec
fucom
jmp
mov
inc
and
mov
lods
bound
mov
ret
arpl
mov
xlat
leave
sbb
fimuls
ljmp
mov
mov
rcrl
jae
fcmovnbe
fcoml
xlat
adcb
lds
add
aaa
add
xor
jle
pop
movsl
clc
cs
lds
imul
lcall
cmp
iret
sbb
outsl
insl
cmp
jle
mov
sbb
pop
mov
push
add
lods
sbb
mov
xchg
sbb
adc
lea
sub
and
mov
cli
out
pop
test
arpl
sbb
mov
push
in
jo
pop
xor
cltd
jmp
dec
punpcklwd
push
pusha
arpl
mov
dec
inc
pop
xor
and
add
sbb
jb
push
add
xchg
xchg
cwtl
outsl
push
jae
add
cmp
or
outsl
out
mov
inc
daa
sbb
dec
and
orl
std
xchg
xchg
mov
pusha
jge
movsb
mov
mov
cmp
cmp
out
scas
sub
cmpsl
pop
mov
aad
ja
leave
add
roll
fnstcw
lret
jge
push
sbbb
mov
fidivl
fcomip
cmpsb
loope
jne
add
repnz
mov
bound
sbb
xchg
sub
jae
push
push
lock
orl
rep
adc
sub
aas
mov
jnp
pop
mov
stc
rol
std
fiaddl
jb
popa
scas
xorl
push
inc
cmpsl
sbbb
sub
dec
xlat
mov
imul
pop
in
add
xor
xchg
fistpl
outsb
push
sbb
mov
sbb
scas
pop
movsb
sub
mov
push
mov
xchg
lea
push
dec
jg
clc
jge
incb
cmp
ret
mov
int
dec
aam
cmpsl
fldt
pop
mov
movsb
add
jo
je
cmp
ss
aad
testl
mov
inc
pop
out
cmovae
mov
fcoms
mov
iret
mov
pop
or
in
mov
outsl
lock
mov
fdiv
jbe
ja
std
andb
lahf
sbb
rcll
and
mov
shr
push
fadd
mov
sti
sarl
fldl
aad
les
push
test
subl
push
outsl
mov
movsb
inc
xor
add
xor
std
push
hlt
pusha
jo,pn
repnz
xchg
pop
push
outsl
xor
addb
pop
test
xchg
repz
mov
pop
sbb
mov
in
sbb
repz
and
and
clc
clc
cmc
data16
sbb
inc
les
sbb
lea
sub
test
add
gs
pusha
incl
cvtdq2ps
mov
js
sbb
outsl
xchg
mov
rclb
sbb
das
lock
rol
int
sti
call
movsl
insb
pop
std
int3
xchg
stc
pop
or
cli
dec
js
arpl
mov
inc
stos
std
in
ret
test
inc
pusha
inc
fisttps
sbb
cmp
incl
and
ret
xchg
call
pusha
leave
jecxz
rcrl
xlat
sbb
loop
dec
lret
dec
mov
es
xchg
insb
iret
fwait
xchg
inc
mov
icebp
xor
adc
jmp
dec
xlat
xchg
fsubrp
pusha
inc
or
in
pop
dec
or
test
rcrl
mov
popa
jae
fnstsw
repnz
outsl
and
imul
mov
and
pop
faddl
out
ss
cmpsl
mov
les
imul
fcoml
pusha
outsl
test
pop
cmp
pop
cmp
pop
jmp
gs
gs
adc
repnz
cmp
xchg
ret
loope
mov
sti
jecxz
pusha
xor
adc
test
push
mov
lods
int3
insl
sbb
ss
cmpsl
loope
lret
aad
lods
jo
cmp
out
int3
scas
fs
shlb
sbb
cmp
insb
pushf
jecxz
jo
cmpsl
dec
xchg
dec
mov
ret
xor
mov
jo
ret
jle
push
movsb
xor
and
add
stc
std
mov
iret
icebp
adc
hlt
and
push
xlat
push
pop
imul
sbb
lret
inc
sub
cwtl
push
shrb
fbld
fldl
out
fs
adc
inc
outsb
dec
orl
fcmovu
cli
inc
pusha
pop
jg
sbb
into
mov
and
cmp
adc
sbb
bound
aad
jp
shll
add
pop
cmpb
mov
inc
in
push
popa
clc
pop
pop
subl
or
ficompl
adc
sbbb
xor
xchg
sub
push
and
xchg
sbb
movsb
fwait
ljmp
scas
mov
insl
notb
subb
fisttps
outsb
xchg
out
jnp
cld
shlb
lds
push
add
inc
push
jecxz
cmp
or
arpl
or
push
cwtl
lahf
lods
push
cltd
cmp
push
push
pop
push
clc
shl
leave
mov
and
fucom
dec
out
inc
dec
mov
mov
movsl
sub
aad
loopne
insb
inc
cltd
mov
rorl
pop
sbb
adc
fstpl
testb
or
xorb
or
dec
icebp
mov
jne
xchg
fucomip
sbb
clc
mov
aaa
pop
fistpl
add
jo
xchg
mov
sub
pusha
cmp
and
sbb
fdivrs
cld
addb
mov
lcall
pusha
sarb
es
test
xchg
push
adc
repz
stos
loopne
mov
mov
sub
and
jecxz
lock
outsb
scas
js
jb
inc
dec
dec
jl
sub
pop
mov
insl
shl
mov
test
clc
jp
jb
or
repz
dec
mov
inc
popf
push
jae
mov
leave
outsl
movsb
pop
push
push
xchg
cmpsb
jge
pusha
cmpsl
xchg
insl
mov
int
addr16
imul
cld
pop
cmp
outsb
or
and
jge
sub
dec
mov
cmpsb
pop
sbb
les
mov
cs
test
xchg
loope
xor
xchg
fcmovne
mov
fidivl
cmc
pusha
lods
sahf
icebp
or
xor
cmpsl
das
data16
push
lahf
aad
mov
fcom
adc
push
outsl
pop
push
mov
sub
mov
adc
dec
dec
mov
xchg
sti
movsl
cwtl
and
and
fmul
xchg
repz
sbb
shlb
call
sub
mov
scas
and
mov
xchg
icebp
pusha
jmp
sbb
out
pop
mov
sbb
mov
fiadds
hlt
das
adc
addb
mov
mov
test
lds
rol
push
and
mov
stos
scas
test
dec
lods
add
cmp
adc
es
shll
lcall
repz
mov
bound
sbb
sbb
inc
stos
mov
or
pop
test
push
faddp
sub
pusha
pop
pop
icebp
fisubs
push
xchg
xchg
xchg
or
push
push
fisubl
add
xor
mov
mov
loopne
push
mov
or
lcall
mov
mov
sbb
stos
or
mov
dec
and
xchg
inc
filds
jmp
ret
jns
sti
adc
pop
popl
bound
mov
push
adcb
shll
push
mov
pop
jns
test
and
mov
outsl
cwtl
jo
cmp
sbb
and
and
mov
test
test
mov
movsb
push
jne
sbb
fistps
push
jb
push
pop
loopne
xchg
mov
jns
fistps
mov
leave
cmpsb
inc
scas
cmp
pushf
mov
aam
ret
pushf
pop
or
mov
incl
mov
enter
mov
outsl
jl
pop
or
ffree
inc
sub
leave
push
hlt
push
jne
mov
sub
movsl
xor
lods
adc
push
mov
lock
jbe
daa
and
xchg
sbb
pusha
dec
cli
add
pop
imul
or
mov
fdivrp
repz
or
loop
cmpsb
cmp
and
cmp
dec
enter
pop
das
sbb
or
cli
mov
jno
sbb
roll
xlat
pop
jno
mov
pushw
xchg
in
mov
fiadds
jns
std
call
fstps
repz
dec
push
mov
loop,pn
stos
and
inc
sub
flds
jp
loope
popf
pop
pop
dec
pop
jg
jns
repz
xchg
push
mov
outsb
out
insl
and
add
mov
aad
mov
jo
movsl
ds
pop
mov
mov
test
jmp
fdivrl
xor
jecxz
pop
jmp
mov
daa
xchg
int3
lods
sbb
push
cli
sub
loop
mov
adc
addr16
imul
mov
in
adc
icebp
pusha
dec
nop
cmp
fdivl
es
dec
jb
lods
aaa
gs
clc
sbb
icebp
jecxz
mov
jmp
xor
incl
in
jbe
sub
jge
jo
sub
sti
ss
and
fwait
cli
adc
jecxz
loopne
stos
lcall
and
jns
jae
daa
movsl
pop
imul
push
repnz
adc
imul
mov
ffree
inc
imul
cs
rcr
dec
adc
adc
xchg
push
aaa
xor
jecxz
adc
mov
xchg
ret
xchg
pop
inc
je
mov
pop
add
ficoml
std
push
faddl
xlat
insl
mov
xchg
arpl
inc
daa
cmpb
pop
xchg
mov
pusha
mov
sti
push
mov
andb
movsl
shrl
sti
scas
pop
mov
cmpsb
cmp
arpl
mov
ret
lahf
jecxz
xor
dec
xor
jnp
roll
fmulp
mov
stos
sub
sti
bound
jb
aas
dec
mov
pop
jmp
clc
iret
push
outsb
repz
mov
lods
adc
xor
add
out
adc
xchg
cltd
mov
es
leave
movsl
lods
mov
mov
lods
mov
lods
push
push
add
jmp
mov
stos
sub
outsb
pop
pop
xor
pop
mov
fdivr
jae
add
mov
lods
xchg
xor
rcrl
sub
adc
sbb
inc
add
ds
mov
roll
mov
push
sbb
gs
arpl
pusha
ficoms
sti
aad
cmpsb
cmpsl
mov
rclb
pop
and
inc
or
inc
sahf
aas
loop
adc
push
mov
pusha
pop
rcrl
mov
rorl
push
xor
dec
leave
add
lcall
cwtl
daa
push
aas
rorl
arpl
aas
or
ss
insl
js
xor
pusha
mov
or
jbe
mov
icebp
inc
std
mov
mov
lods
add
inc
dec
xor
sbb
hlt
aad
inc
sub
or
inc
out
add
push
mov
je
fwait
pushf
and
mov
sahf
hlt
shrb
lea
out
data16
roll
inc
sub
stos
mov
cmp
jo
add
aad
jge
dec
or
mov
mov
lret
or
or
xor
mov
jae
add
mov
pop
aad
stc
pop
out
lock
xor
sub
into
cld
and
cmpb
add
loope
fisubrl
ffree
xor
icebp
add
dec
mov
fsubrp
subb
push
add
int
test
sahf
lret
mov
xor
adc
mov
jp
fldl
push
mov
clc
mov
shrl
lds
pop
cltd
clc
pusha
int
or
sbb
jo
cmp
out
fsubrl
int3
sbb
ljmp
fdivp
jp
leave
lock
sahf
mov
pop
inc
out
sti
mov
dec
adc
add
cmc
xor
daa
sbb
sti
xchg
cs
scas
outsl
ljmp
popf
popa
rcrl
mov
cmp
pop
fbld
cmp
sub
fsubrl
shl
sub
jae
jbe
insl
sub
mov
push
mov
aam
mov
sti
mov
xchg
mov
jp
mov
sahf
lea
bound
pusha
movsl
mov
pusha
mov
rclb
lds
shrl
push
stos
xchg
movsb
icebp
test
xorb
lods
popa
sbb
adc
pop
bound
mov
shl
fwait
shlb
sbb
xlat
adc
movsb
inc
mov
adc
int3
into
dec
fistps
mov
ljmp
divl
loopne
or
inc
add
mov
push
in
outsl
loop
sahf
jno
iret
sbb
pop
pop
push
mov
jns
fcmovb
js
mul
lcall
pop
adc
pop
jnp
xchg
test
jno
mov
test
in
sahf
sbb
pop
je
mov
sbb
pop
or
or
fcoms
bound
and
cmp
xchg
dec
inc
ja
fistpll
fs
mov
scas
mov
xor
push
mov
xor
bound
inc
mov
mov
cli
sbb
xchg
mov
add
xor
mov
dec
mov
inc
incl
and
add
int
aaa
jno
sub
add
mov
call
hlt
pop
pusha
out
and
lods
cmp
cltd
dec
call
mov
cli
inc
daa
test
fcompl
rcrb
xchg
xchg
add
mov
test
push
push
mov
cmc
pop
push
xor
sbb
pop
push
inc
fsubrp
bound
dec
insb
outsl
xchg
ds
pop
cltd
push
idiv
bound
faddl
inc
pop
mov
mov
fsubs
or
dec
add
push
lock
ficoms
push
lods
fistpl
std
pop
and
pop
jnp,pt
enter
jle
cwtl
pusha
cmpl
mov
arpl
add
mov
test
lcall
cmp
sbb
fmull
aas
mov
js
jae
cmp
sbb
sti
inc
and
sahf
fnstcw
andb
ss
iret
data16
adc
add
sbb
inc
adc
clc
rclb
jb
dec
inc
push
xor
ficomps
mov
adc
lods
pusha
cmpsl
push
or
lock
mov
sbb
insl
bnd
mov
inc
xchg
mov
iret
push
int
testl
sub
jns
sti
rorb
dec
loopne
int3
out
ret
mov
ror
xchg
mov
mov
ljmp
nop
mov
dec
loop
loop
pop
stos
orb
adc
mov
mov
push
xchg
rcr
mov
xor
push
push
cmp
rolb
xor
stc
mov
movsl
sub
out
jno
repz
out
cmp
incb
xor
inc
sbb
stc
pusha
cltd
xchg
mov
shlb
movsl
jo
pop
sub
adc
addb
inc
pop
mov
stos
xlat
imul
adc
js
insb
add
sub
fisttpll
add
xchg
rclb
add
add
push
bound
cmp
cmpsb
lock
lods
xor
aam
push
js
cmpsb
repz
xchg
cmpsl
stc
cmp
add
sarb
xor
inc
mov
push
pushf
mov
bound
mov
aad
xor
fs
dec
cmp
rorb
xchg
test
xchg
rorl
cmp
inc
repz
dec
mov
test
mov
mov
and
sub
fadd
mov
xchg
dec
xor
imul
pop
in
outsl
das
mov
push
mov
incl
movsb
or
fstpl
jg
jecxz
pop
gs
inc
popf
fbstp
je
loope
cmp
lock
mov
sbb
imul
sbb
imul
dec
jle
xchg
lcall
jnp
movsl
dec
fsubs
in
add
in
sti
sbb
lret
dec
lret
adc
mov
mov
repnz
ss
pop
inc
push
in
loope
out
cmp
clc
pusha
cwtl
xor
aaa
cli
adc
dec
jbe
xchg
push
cmc
or
xchg
pop
lods
jb
add
outsl
sbb
cmpsl
adc
xchg
xor
mov
adc
in
sarb
repnz
insb
sbb
rcr
jle
sti
int
push
out
std
iret
mov
sahf
jg
or
out
ret
int3
cmp
lods
les
cld
bound
or
jae
int
fidivrl
movsl
insl
nop
js
in
or
or
cmpsb
xchg
xor
push
movsb
repnz
fmuls
andl
and
fildll
scas
lds
stc
lret
cmp
xchg
into
repz
aaa
cmp
in
outsl
in
andb
aam
ficomps
mov
pop
inc
cltd
dec
cmpsl
fsubl
jmp
in
mov
stos
and
and
inc
loop
xlat
pop
shl
pop
mov
imul
jge
xor
fdivrs
sub
mov
and
and
negl
fcom
or
cmpsl
pop
js
aas
cmpsl
mov
movb
loope
ljmp
ret
dec
pop
rcrl
pusha
bound
call
xor
push
push
jge
int
inc
mov
mov
sbb
outsl
insl
sub
add
lret
lods
pusha
mov
mov
add
fsubs
ljmp
lcall
xchg
lcall
je
pop
in
repz
rorl
dec
sbb
cmp
pop
pop
or
icebp
aas
sbb
data16
or
push
cwtl
mov
dec
nop
ret
push
enter
mov
pop
out
jl
lock
fcompl
arpl
loopne
lahf
inc
dec
test
in
cmpsl
insb
pop
push
addr16
mov
dec
sahf
loopne
int
xchg
arpl
cld
add
push
rcrb
sbb
pop
hlt
push
or
sbb
inc
mov
dec
bound
mov
xor
jbe
mov
es
xor
dec
subb
adc
push
mov
repz
jge
scas
xor
inc
xchg
adc
push
pop
pop
fwait
xchg
sbb
mov
push
mov
dec
jns
mov
mov
adc
jnp
jge
pop
push
pop
pop
loopne
loop
into
inc
mov
ljmp
jne
aad
jb
out
mov
add
cmp
push
jae
adc
jns
std
and
adc
fdivrs
das
pop
imul
xchg
xchg
cmc
push
xlat
pop
test
test
call
xor
sub
mov
fwait
pop
insb
push
dec
ficomps
test
sbb
imull
mov
xor
mov
inc
and
jp
pop
adcb
xchg
js,pt
or
fcoml
fst
jecxz
andl
lret
cwtl
adc
gs
clc
aaa
push
out
fisubrs
das
pop
mov
dec
js
lret
shrb
ljmp
or
fbstp
mov
insb
jl
incl
insl
push
or
adc
test
movsb
push
jo
fimull
in
xchg
std
or
ljmp
rorb
inc
jge
jecxz
outsb
inc
xor
adc
ret
pushf
nop
push
lret
inc
pop
je
pop
push
jae
out
addr16
xlat
xor
jne
sbb
inc
cmp
leave
aas
jnp
outsl
sbb
jge
in
in
sbb
jmp
jns
push
pop
add
je
icebp
std
xor
movb
push
mov
mov
pop
add
inc
shlb
dec
in
sub
xchg
pushf
sahf
inc
std
sub
bound
inc
lods
aas
jnp
cmp
stos
adc
and
sti
or
push
mov
pusha
bound
mov
in
sub
add
test
cmpsb
or
mov
pop
bound
mov
popa
clc
test
adc
xchg
sti
outsl
pop
into
inc
xchg
mov
push
add
mov
mov
lea
mov
insb
fldl
mov
jg
outsl
es
fisttpll
push
pop
test
dec
xor
outsl
data16
cmpsb
mov
jns
pop
mov
leave
inc
movsb
jno
rolb
ljmp
inc
jle
sub
pop
insl
popf
or
mov
sub
stc
aaa
cmpb
adc
cli
bound
decl
ret
sbb
stc
add
scas
push
arpl
cmp
test
dec
repnz
lahf
out
pop
and
les
lret
or
mov
mov
iret
jecxz
aas
rol
popf
pusha
jns
adc
shlb
movsl
push
loopne
fucom
pop
jnp
scas
cmc
mov
add
out
xchg
int
mov
and
xchg
shrb
gs
decb
jo
popf
sbb
loope
dec
cs
push
test
xchg
insl
lods
nop
std
add
popf
adc
fcompl
je
orb
dec
pop
jbe
loope
iret
mov
xlat
pop
xchg
jmp
sbb
mov
mov
call
je
jb
inc
sbb
and
xchg
ret
pusha
rorb
xchg
repnz
lcall
popa
push
mov
arpl
adc
scas
call
ret
cmpsb
mov
push
test
aas
clc
mov
es
or
stc
ljmp
adc
fsubl
addr16
mov
cwtl
mov
or
aam
mov
sub
insb
sub
fidivrs
stos
pop
mov
add
inc
loope
jl
mov
mov
mov
inc
lea
inc
lea
mov
inc
cmp
jns
push
pop
loope
icebp
inc
jge
jo
sbbb
adc
fcmovb
xchg
bound
int
or
clc
test
mov
stos
int
and
stc
and
std
jp
shlb
pop
push
inc
jl
fldcw
pusha
inc
in
sbb
movsl
repnz
hlt
mov
mov
jp
pop
cli
sahf
movsb
xor
add
push
push
jmp
imul
jp
cmpsb
inc
stos
pop
inc
fidivrl
pop
mov
lock
scas
loopne
jecxz
dec
movsl
sti
jbe
cwtl
inc
lcall
cs
mov
cmp
mov
or
sti
lds
mov
xor
adc
mov
imul
filds
repnz
cmp
pop
aaa
xor
cwtl
sbb
leave
mov
incl
pop
rcrb
sbb
add
sarl
cmp
jnp
in
int
lea
daa
adc
pop
pop
jns
jp
sbb
loopne
rolb
mov
jl
and
jo
push
stc
pop
out
pusha
xchg
test
jns
dec
orb
outsb
aad
js
cmpsl
mov
mov
add
pop
lds
ljmp
push
dec
fcoml
pop
push
inc
test
inc
mov
andb
mov
jns
mov
loop
jne
sub
xor
xor
cmc
int3
mov
add
lock
sub
push
pop
or
sbb
xor
enter
or
sub
les
pop
mov
mov
jmp
es
ret
jb
xchg
or
cmp
inc
xorl
or
aaa
cmpsb
lea
out
dec
out
movsb
in
adc
inc
pop
aas
pop
mov
push
pop
stos
inc
movsb
dec
sbbb
into
fstl
mov
lods
hlt
scas
movsl
cmp
mov
lcall
rclb
mov
test
mov
lea
test
repz
shlb
xchg
repz
aaa
mov
pop
jno
mov
add
ss
pushf
jno
inc
dec
dec
jo
jnp
testb
mov
pusha
push
push
std
scas
inc
fiadds
mov
enter
sub
stos
xor
sub
pop
movsb
sbb
imul
jl
movl
jbe
mov
pop
jp
xchg
xor
pop
mov
xchg
ror
xchg
mov
push
push
lea
fidivrl
mov
bound
mov
test
fcom
xchg
sti
lcall
shll
ljmp
cmp
and
loopne
sbb
fnstcw
xchg
aaa
or
jno
add
cmpsb
bound
fwait
fwait
cmp
out
sarl
stos
andb
out
es
xchg
outsb
jae
inc
out
adc
outsb
mov
psadbw
movsl
mov
jecxz
ljmp
pop
scas
cmp
sbb
sbb
push
loope
hlt
mov
sbb
es
clc
add
add
sub
out
aad
dec
xchg
repz
mov
cmp
push
push
jl
mov
or
adc
scas
sbb
or
ja
lahf
roll
mov
and
int
lods
sbb
push
lods
mov
addb
inc
repnz
mov
jns
lret
xor
jae
cmpsb
sbb
imul
stos
outsl
ret
sti
sbb
movsb
cmp
mov
push
f2xm1
dec
sub
sbb
dec
cmp
jl
pop
sub
fcmovnu
jge
and
xor
xchg
dec
dec
xchg
adc
ret
orb
aam
sub
jp
stc
mov
mov
push
cld
daa
fisubrs
cmp
sbb
lock
sbb
mov
xchg
inc
dec
gs
frstor
loope
pusha
dec
lahf
bound
lea
test
add
jmp
jb
cmp
lcall
push
push
push
push
push
int
mov
sbb
mov
mov
inc
sti
xor
mov
mov
and
fmuls
inc
daa
pop
call
mov
andb
shlb
mov
cmp
pusha
xor
xchg
sahf
mov
pop
xlat
divb
loopne
sub
fiaddl
sbb
rclb
lods
pop
leave
ficomps
or
fidivrl
adc
sbb
outsl
push
lock
pop
jno
fnstcw
or
mov
dec
in
out
inc
scas
pop
pop
lahf
mov
sbbb
fisttps
mov
add
pop
mov
mov
dec
push
mov
jecxz
in
pop
inc
movsl
repz
cli
inc
ds
add
jae
sbb
push
push
pop
test
sbb
aad
les
xlat
in
mov
add
sbb
ret
cmp
push
icebp
pop
lahf
es
add
js
cmp
push
mov
es
lret
addr16
std
dec
dec
push
insb
dec
pop
add
cmp
std
pop
xor
xor
adc
cmp
addr16
fs
push
fcmove
test
out
enter
loope
sti
xchg
add
in
fucom
pop
push
insl
mov
stos
dec
loopne
push
fidivrs
mov
mov
cli
aad
stc
ja
add
ss
inc
xchg
pop
nop
clc
test
clc
fstl
lahf
mov
ljmp
jne
pusha
fwait
inc
push
scas
inc
fstpt
gs
mov
out
xlat
cmpsl
out
leave
ret
xor
cmpsl
pop
mov
mov
nop
and
stos
pop
ss
push
pusha
fisubs
rcr
cmpsl
fxch
hlt
jbe
pop
ds
fists
nop
fsubrl
push
repnz
add
push
addr16
in
pop
xchg
std
lea
push
ret
nop
and
sub
dec
inc
xchg
mov
int
jae
and
fbstp
out
inc
xor
outsl
xor
movsl
test
les
mov
sti
add
or
lcall
fstl
call
fstps
jl
xchg
jnp
xchg
stc
mov
inc
fisubrs
lea
repnz
stos
xchg
push
in
int
movsl
pop
mov
xchg
sti
add
adc
xchg
dec
outsb
pop
repz
or
mov
add
ret
cmpsb
sbbb
cmpsb
push
cmp
and
loopne
pop
jae
mov
add
std
popa
clc
sarl
mov
lret
push
cmp
xchg
lock
sub
sbb
in
int3
xchg
aad
hlt
fsts
push
icebp
lret
or
mov
iret
adc
jno
xchg
sub
daa
loope
hlt
lds
testb
xorb
sbb
ret
lea
xchg
add
das
fistps
jno
adc
inc
cmp
cmpsb
sarb
dec
pop
push
push
sti
mov
sub
test
xchg
push
ds
and
pop
xor
dec
sbb
push
test
cmp
outsl
pop
sbb
and
mov
lcall
and
inc
call
ljmp
lock
xchg
dec
add
jl
jp
xchg
push
test
jecxz
mov
add
hlt
fisttps
cmc
in
lock
test
push
inc
xchg
mov
arpl
rorl
rcrb
dec
pop
mov
ret
iret
mov
out
add
int
stc
mov
or
fcmovnb
add
and
xchg
std
pop
fstpl
gs
popa
inc
lret
test
out
dec
movsb
stc
and
jbe
pushf
xchg
stos
cli
shl
ja
movsb
mov
adc
iret
adc
push
push
inc
pusha
xlat
fisttps
gs
lods
adc
test
ljmp
sbb
inc
lods
popf
call
and
es
push
cmp
jge
repz
out
inc
dec
clc
test
mov
jns
icebp
pusha
jo
popa
testl
sbbl
nop
dec
faddp
mov
xchg
mov
xchg
punpcklbw
inc
ret
push
xor
dec
nop
hlt
aad
add
stos
outsl
fwait
repz
fdivl
pusha
inc
rcrb
xchg
push
notl
js
pop
je
pushl
out
lahf
adcb
addr16
orb
leave
mov
sti
scas
sub
add
mov
out
aaa
mov
pop
insl
push
or
jns
or
push
lcall
sbb
mov
mov
lods
jo
inc
push
ret
fadds
add
fistpll
xor
mov
pop
outsl
loop
ret
es
xchg
addr16
push
push
out
nop
inc
pop
pop
lds
or
dec
xor
lret
int
ja
or
xchg
mov
dec
pusha
outsl
clc
inc
pushf
fistl
or
out
ret
dec
add
pusha
cmp
xchg
push
sub
and
jmp
cmp
inc
adcl
mov
aad
xchg
loope
pop
inc
arpl
or
and
ret
lret
jo
mov
sbbl
test
add
scas
dec
adc
sbb
fildll
jge
fstpl
sti
mov
cwtl
aam
out
xorb
jnp
fdivrs
cld
add
push
loope
frstor
std
and
test
jbe
inc
lret
mov
xchg
push
jge
cmp
mov
lods
jp
addb
clc
ret
bnd
push
out
sbb
inc
xchg
xchg
xor
sbb
cli
or
push
addr16
popf
scas
push
popf
ljmp
mov
xor
push
pop
push
shll
test
shrb
leave
sbb
scas
cmpb
addr16
lods
ret
inc
repnz
adcb
into
subps
xchg
add
cmp
mov
rolb
push
insb
xor
push
adc
xchg
cmp
or
arpl
inc
and
mov
mov
sbb
lahf
pusha
mov
mov
fcompl
addps
into
add
call
subb
push
xor
call
lcall
faddl
jmp
repnz
mov
mov
mov
push
fidivrl
inc
leave
mov
data16
scas
movsl
and
xor
stos
inc
shlb
push
rorl
lods
movsb
sbb
mov
xor
mov
orb
ljmp
add
decl
aaa
jl
add
dec
lods
jnp
jecxz
mov
mov
popf
sbb
or
lahf
mov
fstl
pusha
repz
roll
cli
add
sbb
test
xchg
mov
arpl
pop
push
jmp
enter
inc
xlat
fldt
out
bound
sub
push
mov
shrl
out
into
pop
mov
mov
mov
mov
mov
add
mov
movsl
or
sahf
fucomp
stc
jl
cmpsb
inc
push
addr16
scas
pop
inc
mov
out
add
gs
dec
mov
shlb
stos
xor
mov
add
aaa
sub
imul
addr16
adc
inc
xor
or
roll
outsl
popf
mov
mov
adc
add
push
inc
xlat
jmp
ja
or
xlat
fidivrs
and
cmp
stos
cs
sub
cmc
aaa
out
in
sub
pop
std
ljmp
lahf
repnz
gs
test
ret
fistpl
xlat
jb
xorl
ljmp
cmp
stos
js
aas
aad
jecxz
icebp
push
pusha
bound
xchg
inc
daa
cmp
cmpsl
outsl
xchg
adc
fadds
aaa
stos
jecxz
scas
pusha
movhps
sub
cmp
mov
and
push
pop
pop
fwait
adcb
add
xor
or
test
or
lret
push
sbb
aaa
jns
push
sarl
rcrb
repnz
ficompl
das
pop
add
sbb
ret
xchg
andb
lock
cltd
add
and
or
movsb
jg
and
mov
xor
fbld
jnp
inc
je
adc
jno
mov
or
mov
sub
pushf
xchg
push
push
jg
pusha
mov
insl
adc
dec
mov
mov
js
or
pop
cmp
faddl
xor
add
xlat
fnstsw
xchg
fcmove
and
sub
jp
aam
or
in
pusha
sub
mov
pop
xor
lock
fs
je
sti
in
and
movsb
in
aad
scas
clc
and
pop
cmp
lods
pusha
cmpsb
push
test
in
jg
rcl
cmp
aam
enter
jecxz
decl
call
mov
push
adc
mov
scas
std
das
bound
les
mov
cmp
mov
push
adc
std
out
mov
inc
addl
enter
sti
xor
jecxz
pop
out
and
test
fsubl
push
or
pop
and
aaa
push
test
fcmovb
mov
dec
rorl
sbb
push
stos
mov
stc
repz
lret
loopne
mov
mov
lret
outsl
je
enter
test
lds
ss
repz
outsb
fdivs
xchg
or
cmc
test
jno
movsb
sbb
dec
sub
ljmp
jecxz
mov
loop
shll
and
in
adc
clc
sbb
cmc
icebp
xor
lcall
nop
inc
cmp
xor
push
mov
scas
push
fstpt
pusha
mov
jns
mov
inc
push
and
push
sti
stos
scas
rorb
out
push
sbb
pop
and
jmp
jo
ja
mov
push
out
sbb
mov
or
mov
ja
add
ljmp
sti
loopne
push
sub
outsl
push
fiaddl
ret
aad
lcall
inc
xchg
bound
dec
cmpsl
aam
scas
and
sub
fnstcw
mov
xchg
out
sbb
movsl
test
adcl
jno
outsl
stos
pusha
dec
jg
mov
push
inc
and
jge
adc
movsl
sub
jmp
xor
hlt
neg
pop
pop
subl
adc
stc
push
pushf
insl
push
sarl
fists
outsb
rol
repnz
add
pop
popf
rcrb
stc
sti
mov
outsb
insb
lcall
xchg
xchg
adc
push
or
add
sub
cmpsl
movb
xchg
test
inc
hlt
sub
cli
xor
push
dec
shlb
sub
inc
xor
ja
sbb
cmp
outsl
jo
lret
mov
add
push
jle
pusha
lods
mov
pop
lock
repz
xor
mov
sbb
jb
xor
loop
pop
adc
popf
fwait
push
mov
xchg
push
jg
pop
rclb
pop
rolb
pusha
fldt
testl
xchg
jmp
add
push
sbb
and
inc
or
xor
mov
lret
mov
adc
or
jmp
mov
repz
shlb
aad
scas
pusha
cmpl
fisttps
scas
push
mov
fisttps
sub
cmp
cmp
addr16
cmp
icebp
int3
loope
xchg
add
jg
icebp
xchg
mov
sbb
jmp
scas
stc
mov
inc
addr16
rolb
fisubs
cmp
pusha
cmp
mov
mov
and
dec
cmp
xor
cli
xchg
add
mov
push
jne
shl
jmp
fidivl
sub
lea
sub
adc
cmp
lock
in
or
std
scas
sahf
fcom
pusha
jmp
test
pop
lock
mov
push
adc
arpl
cmp
and
jb
push
je
and
add
dec
pop
or
or
movsb
push
or
cmp
xchg
xorl
dec
xchg
outsb
and
icebp
sbb
push
notl
sbb
sub
test
test
fldl
and
icebp
imul
mov
std
xchg
pop
pushf
jp
js
sbb
cmc
cmp
push
mov
jle
lahf
xlat
jae
and
sbb
and
mov
jecxz
test
negb
fcoml
push
sar
inc
add
xchg
mov
in
push
insl
fs
cmpsl
fiadds
jb
mov
inc
xlat
jae
sbb
scas
push
mov
inc
or
cmp
in
sbbl
lea
repz
sbb
stc
addl
adc
shlb
mov
inc
faddl
stos
mov
mov
movsl
mov
gs
xchg
jo
inc
cmp
jns
popa
lods
sti
or
and
lods
push
xor
out
lods
push
inc
jecxz
cmpsl
cltd
fsubr
jae
adc
xchg
or
addr16
mov
adc
xchg
fisttps
sbb
pusha
jnp
call
sbb
pop
call
xchg
jb
mov
dec
sti
hlt
and
test
nop
int
jnp
in
imul
cs
push
clc
sbb
xor
pop
mov
lods
adc
rcrl
cltd
iret
lods
push
lods
dec
fdivrs
int
mov
mov
sbb
and
jecxz
adc
incl
rcrb
repz
lods
popa
out
movsl
sub
mov
test
stc
pop
jmp
ja
arpl
mov
es
inc
nop
repz
push
xchg
iret
and
in
gs
movsb
imul
gs
mov
xchg
fdivl
lahf
int
jl
sbb
jne
jbe,pn
jo
sbb
dec
adc
push
flds
mov
dec
push
addr16
fbstp
testl
add
fidivl
sub
iret
lcall
ljmp
shll
push
sbb
lods
out
lcall
xchg
pushf
imul
loope
or
xor
xor
jne
loope
addb
sarl
xlat
sbb
rcr
rclb
or
add
out
sub
test
cmc
lahf
pushf
out
mull
xor
adc
stos
mov
repnz
pop
int
repz
popa
fidivl
adc
pop
enter
shll
jns
sub
and
stos
mov
add
or
push
call
inc
add
and
mov
rolb
sub
aas
jb
cmc
in
sub
jo
jg
adc
dec
imul
xchg
sub
adc
pop
outsl
loopne
pop
rol
inc
xor
mov
vunpckhps
mov
sbb
mov
jl
push
mov
inc
push
icebp
rclb
repz
add
outsb
xchg
inc
push
ja
pop
jp
test
pusha
clc
rcr
scas
in
jbe
pop
addr16
add
fistps
fs
add
jae
arpl
jne
cmovnp
or
popa
pop
addr16
sbbl
jns
test
aad
mov
sub
cli
dec
push
or
rcrb
xor
test
roll
pop
jne
ss
push
aad
lret
and
les
inc
mov
jle
lahf
or
lods
pop
insb
cmpb
cmp
dec
jecxz
out
loop
iret
dec
jae
or
mov
inc
pusha
or
call
pop
jg
xor
lods
pop
daa
lahf
popf
mov
xchg
jg
int3
xchg
sti
ret
sub
or
loopne
cld
mov
mov
mov
xorb
std
mov
fst
pop
ds
adc
rorb
mov
pusha
push
lcall
fcomps
xor
lock
inc
rorb
int
insl
iret
sbb
add
dec
cwtl
jno
mov
dec
xlat
and
and
dec
call
dec
shl
adc
mov
repnz
xchg
jae
pop
fcoms
pusha
pop
mov
mov
insl
sub
shlb
mov
add
push
je
into
lea
test
dec
ret
and
fwait
jns
mov
mov
xrelease
cmpsb
pop
fdiv
sbb
pusha
ret
jne
loopw
test
orl
pop
pop
es
lods
xlat
pusha
cmpsb
lcall
jle
or
addr16
mov
mov
add
inc
out
or
xor
sbb
inc
cmovo
cmp
es
ret
fsqrt
xor
aaa
ret
mov
mov
xchg
and
lock
sarb
add
bound
subl
or
and
stc
mov
mov
test
cmpsl
mov
mov
call
pusha
jb
cld
mov
push
cwtl
loopne
std
arpl
rcl
jno
jb
pushl
int
outsl
inc
fcmovbe
mov
and
sub
mov
cmc
xchg
es
mov
loopne
ss
inc
sbb
cmc
fidivrl
dec
sbbb
sahf
dec
inc
mov
pop
cmp
in
add
lea
int
mov
lcall
imul
adc
xor
inc
xchg
je
mov
sub
mov
dec
loopne
adc
jge
sbb
mov
sti
repnz
ss
sarb
cmp
and
jo
jmp
jmp
out
repnz
sub
clc
sub
mov
sbb
loope
cmpsb
inc
mov
mov
lock
push
pusha
lret
mov
mov
sub
cwtl
jecxz
mov
movsl
jg
loope
repnz
lcall
incl
mov
lock
push
cmpsb
insb
clc
inc
loope
mov
cli
fwait
add
add
movsb
pushf
push
push
dec
push
pop
inc
cmpsb
js
mov
push
movsl
xor
test
mov
mov
push
mov
xchg
mov
in
jmp
push
fs
sti
stos
jb
aaa
sahf
dec
leave
fists
rorb
test
js
xor
or
or
scas
push
lret
sahf
std
jecxz
xor
outsb
jg
into
decb
add
int
jl
dec
ss
inc
sbb
loop
sbb
mov
addr16
xlat
push
sub
cmpsl
sarl
cmc
xchg
or
cmpsl
jp
pop
arpl
rolb
jb
or
out
stos
pusha
pushf
mov
jl
mov
pop
into
andb
bound
sub
mov
sub
sbb
sub
pushf
inc
rol
cwtl
ret
adc
cmpsb
out
out
pop
or
push
in
iret
lea
inc
lods
int
jno
pop
outsl
and
outsl
xor
testb
xchg
or
inc
lcall
les
jb
xchg
mov
xlat
jl
dec
jp
or
pop
test
add
xor
add
mov
mov
subb
subl
stos
int
jecxz
sarb
daa
iret
pop
popa
adc
test
inc
push
in
ret
stc
cld
or
out
cmpb
mov
cltd
pushf
xchg
xor
lods
mov
or
inc
jno
out
add
ret
pop
push
test
cli
pop
popf
add
rcr
or
les
cmpsl
ret
addr16
jmp
fwait
mov
mov
addl
ret
lock
dec
xchg
fs
or
addr16
push
pop
psrad
push
cmp
aam
cmp
imul
cwtl
iret
sbb
adc
mov
jnp
in
and
fstpt
call
mov
mov
loope
ret
sbb
aad
rcrl
xchg
addr16
add
add
mov
lret
pop
fsubrs
inc
ret
clc
lcall
pop
fs
sti
adc
std
pop
sbb
sub
pop
icebp
push
insl
pop
push
cmc
mov
shrl
xchg
mov
dec
inc
ror
jl
add
fisttpll
rcll
aas
push
out
or
sbb
dec
imul
pusha
cmp
add
pop
xlat
out
mov
lcall
sti
mov
fstpt
jb
mov
loop
pop
pop
in
adc
rcll
cmp
jnp
lret
fldpi
mov
lods
xor
cmc
sbb
ds
std
lods
sub
ss
jl
ss
pusha
rorl
sti
scas
pop
mov
jne
pushl
mov
clc
cmp
incl
add
xchg
pop
mov
or
push
js
xchg
stos
faddl
sbb
out
mov
add
aam
mov
mov
outsl
out
sbb
jnp
pushf
lea
repnz
leave
outsb
adc
mov
lods
sbb
pusha
in
inc
cmpsb
xor
sarl
and
cmp
sbb
movl
sahf
mov
jle
pop
pusha
mov
bound
push
mov
andl
xor
cmp
cmp
jge
andl
mulb
adc
shrl
in
clflush
stos
roll
popf
mov
in
pop
aad
fbld
sahf
adc
mov
cmp
sub
dec
loope
bound
xchg
sbb
int3
mov
xchg
enter
inc
out
mov
xchg
xor
dec
pop
ret
or
shlb
mov
pop
fiaddl
adc
sub
xlat
sub
sahf
daa
arpl
pop
fwait
adcb
push
xchg
pop
lea
popa
dec
cmpsb
ficoms
xlat
and
pop
add
adc
clc
mov
nop
lret
es
sbb
loop
dec
imul
add
bound
sbb
lea
pop
inc
pop
xor
std
lock
in
ficoml
xor
clc
loopne
and
out
xlat
xor
push
test
fnstenv
mov
repnz
pop
mov
movsb
shll
loop
sahf
lahf
andl
lret
or
lock
xor
and
out
pop
cltd
incb
aas
inc
notb
rcll
jecxz
sbb
lds
xor
xchg
into
mov
aad
mov
rclb
mov
iret
fwait
lret
cmp
pusha
sub
mov
pop
pop
or
cmp
imul
push
mov
cmp
insb
xor
mov
jl
or
rol
pop
inc
ljmp
mov
xor
mov
lahf
outsl
or
shrl
enter
pop
cmc
add
loop
cmp
pop
test
bound
and
jp
cmpsb
and
loop
ret
stc
aaa
xor
scas
xorb
jecxz
xor
mov
dec
fstpt
cltd
iret
cmp
jae
mov
js
pusha
xlat
js
mov
ss
sub
addr16
push
fucomip
mov
int3
sbbl
push
cwtl
ljmp
loope
dec
sub
or
adc
xchg
jp
fwait
jge
lahf
dec
pop
mov
push
pusha
scas
xchg
fstps
es
hlt
jecxz
out
fmull
loope
orb
bound
mov
xchg
and
jg
push
repnz
add
dec
mov
sti
or
imul
jne
je
sbb
add
sub
xchg
js
fbld
push
mov
test
fdivl
push
mov
imul
fidivl
loopne
add
filds
sbb
push
xchg
adc
cmpsb
xlat
insb
mov
lcall
and
mov
cmp
xor
aad
loop
mov
roll
sub
pusha
lock
addr16
mov
test
incl
fidivl
add
or
shrl
addr16
dec
or
xchg
decb
mov
fs
jnp
inc
movsb
jnp
mov
jns
pop
mull
mov
xor
adc
pop
pop
pop
sbb
in
add
int
call
clc
aam
popf
add
xchg
js
and
out
cs
movb
out
pusha
cli
stos
lret
cmpsl
dec
shrl
test
jg
stos
imul
push
rol
ret
pop
push
lret
sbb
add
icebp
cmp
xchg
leave
push
ret
dec
das
lret
jae
mov
mov
cmp
mov
jp
xchg
mov
cmpsb
jbe
and
or
inc
mov
lea
sahf
fcomps
outsl
dec
negb
in
mov
mov
imull
jne
shl
test
int3
sub
popa
lea
scas
mov
mov
mov
popf
pop
fnstsw
mov
inc
or
mov
pop
enter
pop
sub
test
pop
pop
xchg
jmp
fst
cmp
sub
mov
test
cmp
rorl
pusha
add
data16
pop
call
adc
pop
pop
cld
loop
mov
cmc
pop
cltd
in
outsl
aam
mov
pop
dec
or
sahf
xlat
add
lret
in
in
pop
rorl
mov
xor
push
mov
or
in
icebp
imul
cmp
mov
pop
cmpsb
popa
cmpsl
dec
cmp
lret
add
jnp
ficompl
xchg
and
cmpsb
mov
movsl
cmpsb
aad
sbb
shll
adc
xchg
xor
adc
movsb
pop
bound
scas
int
test
es
pop
pusha
mov
mov
ljmp
fs
stos
or
mov
fst
data16
adc
mov
xchg
xor
add
pop
data16
or
mov
push
mov
outsl
adc
inc
and
loop
shl
arpl
cmp
test
pop
inc
mov
push
movsb
xchg
sbb
and
sbbb
insb
dec
fdivr
pop
or
xchg
and
inc
mov
push
std
jnp
sahf
leave
ja
pop
sar
sbb
dec
subl
scas
testl
push
cmp
pop
or
bound
imul
mov
insl
cmp
stos
lea
or
mov
pop
and
aad
bound
or
jne
xchg
cmp
shll
inc
std
shlb
loopne
clc
fidivrl
push
int
mov
cmp
jnp
sar
sahf
sbb
sbb
lock
mov
insl
cmovne
and
sub
ja
andl
sub
add
or
outsb
mov
pop
je
rol
shl
shrl
jne
cmpsl
pusha
push
faddp
sarl
lahf
mov
mov
or
mov
sbb
vpshuflw
push
movsb
mov
mov
inc
xchg
fsubl
push
cwtl
addr16
pop
push
dec
int3
daa
ret
test
clc
pusha
fldl
mull
pop
lcall
in
fnstenv
pushf
cmp
xorl
sub
out
popa
js
inc
stos
mov
bound
pusha
adc
mov
imul
orl
jae
in
sahf
pop
mov
xchg
add
rcl
add
enter
push
pop
aam
insl
cmpl
cmp
stc
es
aad
lret
sarb
out
pusha
hlt
mov
jp
int3
adc
pusha
mov
or
fs
mov
pop
sti
cltd
cmpl
xchg
jae
pusha
pop
dec
lea
jp
in
test
push
mov
out
in
xchg
mov
jne
outsl
popf
cmp
mov
movsl
xor
es
sbb
xchg
cmp
sbb
jno
and
movsl
repnz
in
lock
xchg
add
lret
push
dec
adc
inc
mov
int
mov
lahf
inc
mov
push
push
lcall
insl
xor
or
fstpl
or
repnz
scas
and
mov
cmpsb
mov
out
aad
pop
rcll
sub
lahf
lds
sbb
andl
dec
sbb
loope
sbb
pop
js
aas
stos
fisttps
lock
adc
mov
adc
in
mov
lock
xor
xchg
shlb
sbb
sarl
cmp
jae
xchg
xchg
into
push
sti
sti
mov
jns
lret
cmp
push
push
mov
mov
das
fsubrl
pop
pusha
jp
fmul
pop
xor
stos
pop
or
lcall
xor
xor
icebp
add
es
push
movb
jnp
xchg
jne
xchg
and
lcall
or
jae
cmp
das
mov
daa
stos
mov
mov
nop
adc
ret
mov
mov
loopne
bound
pop
pop
cmp
scas
xchg
inc
mov
mov
mov
push
movsb
lock
movsl
test
addr16
andl
pushl
xchg
pusha
inc
rcrl
xorl
pop
leave
inc
cmc
lock
dec
xchg
lret
fcoml
mov
or
xor
xor
test
mov
dec
pusha
arpl
int
sub
pop
test
pop
incb
ret
or
test
fidivl
inc
mov
lods
sub
fsubrp
fstl
or
dec
stos
int
cmp
pusha
push
fs
jg
lea
test
mov
addl
push
xlat
xchg
add
test
and
add
xchg
loop
push
pusha
dec
sub
xlat
sar
adcl
xlat
xchg
out
jnp
mov
fnsave
adc
push
aam
int3
pop
add
out
inc
mov
adc
add
pusha
xchg
cltd
inc
stos
pushf
outsb
sti
ja
loop
out
pusha
mov
push
icebp
adc
push
jnp
lcall
lea
orb
cmp
inc
sbb
add
fidivrl
or
stc
pop
imul
bound
mov
adc
repnz
inc
int3
jmp
arpl
push
sub
mov
frstor
push
ds
fisttps
mov
dec
xchg
or
fstl
jnp
ficoms
aam
adc
pop
adc
out
push
shrb
mov
push
jmp
ret
adc
cmp
push
mov
xchg
std
stos
rcrl
sbb
and
clc
xor
dec
icebp
subb
aam
es
xchg
pop
mov
insb
and
das
xchg
shll
rorl
mov
pushf
xchg
repz
xchg
mov
rcrb
mov
push
mov
outsb
cmp
add
adc
sub
xchg
bound
mov
fbld
mov
dec
outsl
or
xchg
and
in
pop
sub
call
fcmovb
jo
repnz
mov
not
pop
xor
sti
and
nop
aad
adc
ljmp
sub
adcl
aas
sti
adc
sbb
cmp
addr16
inc
mov
rcll
lods
rclb
fists
decl
in
jecxz
sbb
imulb
xor
cmpsl
jl
shl
cli
cs
push
adc
stos
add
jmp
shll
adc
jl
cwtl
pop
mov
in
pop
decb
filds
sti
pop
xor
adc
imul
pop
add
cli
fdivrp
pop
xor
popa
in
or
loop
rclb
lods
cli
mov
cmp
sub
jb
std
into
or
dec
sbb
cmp
or
sarl
and
adc
ja
push
fldcw
mov
clc
das
andb
xchg
pop
add
mov
sub
stos
or
loope
add
pop
test
pusha
xlat
add
mov
and
inc
repnz
xor
stc
je
add
pop
adc
repz
inc
xchg
ret
movswl
jns
out
mov
loope
or
repz
repz
dec
pop
jnp
jle
adc
stos
add
repnz
lock
push
mov
in
leave
lods
pop
pushf
xor
orl
icebp
inc
add
xchg
push
cmp
push
and
lret
out
xchg
lock
mov
daa
lock
or
lahf
mov
stc
mov
sub
test
aam
mov
lcall
scas
jno
cltd
dec
cmp
add
lods
mov
loopne
repnz
add
pop
sbb
sub
test
mov
leave
outsl
in
call
jle
lea
push
sbb
in
sub
push
xchg
addr16
xchg
ret
cmpsb
sbb
cmp
rorl
test
lcall
xor
sbb
or
aam
aad
out
in
in
sti
push
push
enter
adcb
sub
push
not
fstpt
ret
cmp
repz
lcall
or
movsl
adc
and
sti
fwait
inc
dec
andb
mov
inc
loope
push
orb
push
data16
push
ljmp
iret
imul
aad
mov
adc
fimuls
pop
jnp
icebp
mov
jge
jp
mov
daa
stos
out
rcrb
outsb
mov
fisttps
cmc
add
mov
arpl
and
call
pop
sbb
aam
mov
inc
test
mov
scas
push
insl
stc
and
sti
jge
pop
fistps
test
adc
fiadds
out
jmp
mov
mov
cmc
fsubrl
pop
mov
sbb
pop
lcall
movsl
sahf
push
mov
xor
and
filds
mov
or
xorl
fiaddl
pushf
sub
pop
mov
loop
pop
mov
and
or
popf
sub
add
inc
repz
jnp
cmpsb
stc
inc
ret
ds
pusha
sub
sub
add
out
lock
pusha
jns
loopne
enter
push
mov
enter
test
cs
sub
or
out
dec
loopne
xchg
fwait
mov
mov
or
dec
in
or
jle
pop
add
jae
loope
mov
and
dec
mov
xor
aam
pop
fsts
loopne
movd
test
ficomps
sbb
cmc
mov
push
dec
dec
outsl
cmpsb
push
lock
ljmp
cmp
pusha
into
fnstcw
pop
adc
xchg
xor
fwait
inc
divb
push
xchg
nop
dec
xchg
mov
xchg
popf
ret
lahf
out
shl
rcll
hlt
bound
inc
fistps
cmp
dec
mov
inc
rclb
mov
sbb
call
in
scas
and
add
pop
push
loop
jbe
add
or
sub
jge
xchg
loope
or
pop
dec
movsl
lret
ja
mov
sbb
sub
dec
pop
dec
movsb
addr16
sbbb
mov
pushf
into
cwtl
xor
ret
dec
add
in
mov
roll
shrl
xchg
sbb
ret
fstl
add
shl
leave
loopew
fiaddl
mov
and
push
ljmp
lods
cmp
xchg
mov
das
sahf
subl
outsb
mov
out
repz
es
mov
test
adc
jae
filds
cmc
add
xlat
cmpsl
andl
call
bound
push
or
ret
push
pop
icebp
ss
scas
in
outsb
dec
jmp
aad
xchg
cmpsb
cmpsb
and
or
lret
xor
ret
ffree
pop
test
fldcw
ljmp
orl
jo
mov
push
std
xchg
aas
pop
loope
push
outsl
xchg
ja
fidivl
or
addr16
shll
fs
push
inc
cmp
cmpsb
stc
pop
inc
scas
mov
repz
popa
std
sti
pop
adc
call
in
fistl
mulb
adc
or
adc
mov
adcb
mov
in
xor
lock
xor
adc
pop
push
jecxz
sub
mov
ds
iret
in
sub
cmp
fnstsw
fbstp
ret
dec
std
cld
inc
jle
cmc
lret
fnsave
push
add
sub
out
sbb
cli
leave
push
xchg
shlb
das
mov
dec
aad
rcl
repz
push
fwait
mov
or
pop
das
sub
mov
fsubrl
mov
ljmp
inc
mov
test
mov
push
pusha
inc
dec
lcall
or
popf
addr16
lcall
test
test
repz
fcmovbe
fwait
or
push
mov
test
or
dec
and
int
jp
in
mov
push
jne
test
mov
imul
mov
jno
loop
mov
xchg
mov
add
lods
mov
ja
imul
outsl
and
cs
outsl
jb
rol
jae
fxch
mov
clc
loope
and
cmpsb
or
push
daa
imul
gs
ret
rcl
in
mov
mov
jne
ficoml
ja
and
mov
and
inc
scas
lret
lods
adc
push
and
loope
or
loopne
xor
adc
pop
xchg
mov
add
daa
popf
clc
ljmp
dec
adc
dec
mov
jle
mov
or
je
insb
stc
xchg
sbb
mov
sar
repz
mov
xor
mov
mov
aad
adc
add
popf
aas
or
test
pop
sbb
call
fnstsw
rorl
xchg
mov
pop
sub
outsl
dec
jmp
ljmp
add
xor
scas
pop
xor
arpl
cltd
jne,pt
pusha
or
sbb
out
clc
pop
scas
xchg
cs
dec
xchg
dec
pop
and
xchg
outsl
fwait
cmpsb
mov
orl
xor
push
xor
mov
or
pop
pop
call
outsl
arpl
test
push
cmp
xor
fcomps
out
cmp
imul
mov
dec
ret
xor
sti
or
pop
stos
aas
xchg
sbb
lahf
lds
rcll
inc
fstl
in
sbb
fsub
and
jnp
out
xlat
push
mov
icebp
push
xchg
push
data16
fcmovnb
sbb
jg
mov
lea
sub
xchg
fs
imul
not
pusha
xchg
ret
ret
mov
popf
repnz
push
les
mov
popa
subb
in
push
mov
aad
inc
pushf
mov
xchg
mov
std
jo
outsb
fpatan
add
jnp
mov
loope
mov
xchg
ud0
loopne
shll
iret
pusha
les
cwtl
stos
sbb
lds
sbb
imul
or
ficoml
loopne
rcrl
aam
ret
xor
xor
or
je
je
out
jb
addb
and
push
mov
cmc
and
mov
loop
and
xchg
notl
sbb
insl
cmp
incb
mov
push
inc
movsb
pop
dec
sarb
cmpsb
mov
lds
repz
adc
sahf
push
popf
inc
scas
movsl
xor
inc
shlb
ljmp
jmp
or
test
rorl
ds
jno
fistpll
mov
xchg
out
mov
xchg
jge
nop
pusha
mov
dec
cmpsb
xchg
pop
mov
sub
add
pusha
test
loop
xor
or
repnz
pop
orb
mov
lahf
js
repnz
dec
mov
add
cmp
test
shrb
hlt
pushf
loop
mov
stc
out
stos
cmpsb
xor
cmp
dec
rorl
or
das
push
mov
pop
lea
mov
jmp
jb
movsl
cmpsb
mov
xchg
cmp
mov
loopne
sub
and
mov
es
repnz
mov
insl
add
jle
pop
or
xor
adc
or
clc
xor
lods
xchg
adc
lods
inc
aas
sub
cmp
jo
out
xor
pusha
lcall
and
clc
pusha
or
mov
cli
mov
xchg
cmpsb
std
bound
daa
inc
addr16
rol
std
jle
and
mov
cmp
hlt
test
sub
add
pusha
xor
mov
adc
mov
push
bound
or
push
shl
xchg
add
pop
inc
dec
xchg
sub
inc
jmp
or
enter
mov
hlt
mov
cmp
push
push
cli
pand
mov
fldl
out
out
sarl
subl
dec
push
cmp
jmp
pusha
mov
stos
push
loopne
adc
pushf
add
lods
mov
movsl
fdiv
nop
std
pop
xor
jnp
ds
js
ret
dec
int3
mov
and
or
js
ljmp
stos
mov
push
dec
lods
xchg
rcrb
insl
sub
jecxz
std
jmp
lods
adc
pop
xchg
mov
mov
xchg
cmc
jecxz
lret
into
pop
in
cs
push
mov
dec
hlt
sahf
cli
neg
and
imul
dec
clc
pusha
xchg
cli
pushf
mov
dec
fsubrl
add
cmp
movsl
js
in
jae
int3
jmp
mov
rcl
xchg
and
cmp
aas
xchg
ret
je
int
add
test
mov
mov
pop
lahf
inc
pop
stos
ljmp
jecxz
cmpsb
dec
test
push
out
icebp
and
jg
cmp
mov
aad
pop
sbb
push
int
add
mov
cmpl
insb
dec
add
scas
mov
jbe
xchg
or
add
inc
xchg
pop
mov
and
ret
xchg
cs
outsb
and
pop
inc
and
mov
out
add
mov
ret
ja
mulb
dec
dec
adc
btc
xchg
sub
sbb
popf
ficomps
icebp
lret
mov
fildl
add
mov
imul
cwtl
inc
call
mov
add
pop
sbb
or
ret
js
sbb
mov
mov
clc
cmp
lcall
or
add
sbb
mov
pusha
add
adc
movsl
sbb
push
adc
bound
enter
adc
jns
xchg
pop
pop
repz
stos
sti
pop
fsubp
pop
push
fisubrl
mov
jb
sti
bound
mov
add
add
cmpsl
sub
xor
sub
jle
in
add
pop
mov
inc
fcoml
dec
aad
in
jo
xor
fildll
mov
lahf
add
hlt
sub
fdivr
ret
fdivp
mov
cli
pop
mov
cmpsb
mov
addl
and
xor
mov
xor
stos
shll
inc
mov
data16
incl
pop
xchg
stos
add
sti
inc
dec
push
ljmp
call
jge
pop
mov
frstor
nop
stos
pusha
inc
mov
scas
rclb
mov
insl
mov
stc
mov
outsb
test
sbb
cmpl
dec
movsl
mov
mov
lods
out
cmpsb
mov
lds
mov
stc
out
in
sbb
or
cli
js
cmpsb
inc
aad
stos
imul
js
lds
loope
test
fmuls
inc
inc
fists
cmp
sbb
mov
imul
inc
fiadds
or
leave
dec
add
or
adc
insl
mov
add
or
and
xor
add
push
addr16
out
mov
int3
inc
or
mov
xorl
stos
or
jno
cmpsb
clc
fnstenv
lret
imul
sahf
hlt
lock
jnp
es
dec
xor
add
test
fiadds
scas
shlb
cwtl
mov
loope
out
lea
movb
or
out
into
dec
jns
sub
or
mov
sti
add
fstpl
mov
mov
int3
and
sti
adc
test
into
mov
subb
or
pop
dec
repnz
inc
icebp
loop
jne
rorb
lret
test
jg
pop
add
fucomp
fcmovnu
cli
sub
pusha
mov
fildll
loope
push
adc
jno
or
data16
sub
outsb
xlat
pop
and
in
out
fnstsw
sti
cltd
insb
xchg
shl
outsb
adc
gs
cmp
cmp
mov
icebp
push
loop
jl
stos
push
pop
mov
in
in
sahf
push
insl
push
jne
stos
loopne
scas
dec
movsl
mov
out
xchg
jns
pushf
xlat
push
std
cs
fsub
pop
cmp
push
pop
mov
jbe
lods
dec
mov
stc
mov
test
sub
inc
mov
sbb
in
imul
cmp
mov
and
mov
mov
daa
and
pop
mov
mov
bnd
push
fsubr
xchg
mov
insb
sbb
std
sbb
pusha
icebp
xor
call
shll
repz
imul
sbb
imul
rolb
xchg
iret
dec
jae
loopne
jmp
sub
dec
sti
repz
mov
push
sbb
out
xor
push
cs
mov
mov
inc
xor
pop
xchg
add
std
aam
rcrb
sarl
dec
adc
in
mov
dec
addb
test
jp
xchg
mov
out
cmp
or
mov
gs
cmp
pop
fisubrl
loopne
xor
stos
cli
mov
daa
mov
and
hlt
sub
inc
sub
out
loope
adc
add
icebp
push
cli
lods
nop
mov
loopne
mov
mov
cmpsb
fwait
xchg
rorb
popf
iret
in
push
push
push
insl
fiadds
andl
cmc
inc
pop
push
xor
pinsrw
pop
sbb
mov
int
mov
cli
das
mov
mov
xchg
cmp
test
addr16
lcall
int3
pop
loop
adc
in
shlb
movsl
subl
rcl
pop
lea
mov
dec
mov
cld
xchg
or
fadd
repz
push
loop
repz
mov
popa
sbb
pusha
inc
jo
pushf
dec
int
loope
scas
call
sarl
inc
mov
adc
mov
std
into
sarl
pop
xchg
rorb
sti
sahf
and
cltd
aad
xchg
lcall
lret
mov
adc
mov
std
add
jp
loope
hlt
jl
ret
fimull
xchg
movsb
inc
add
sar
jl
pusha
mov
sub
icebp
repz
cmp
hlt
jmp
push
and
and
sub
mov
dec
scas
aaa
adc
test
mov
out
jnp
sub
insb
xlat
insl
push
xchg
shrl
shll
xchg
sbb
mov
dec
mov
and
xlat
ds
mov
push
enter
fists
outsl
imul
or
ret
xor
pop
popf
fldl
fidivrl
xor
sub
lret
jae
pop
mov
scas
ljmp
inc
fucomip
out
xchg
mov
imul
jbe
bound
pop
sub
stos
and
sub
jns
mov
xchg
pusha
mov
mov
inc
shlb
lods
addr16
into
mov
mov
jae
das
jle
daa
gs
mov
mov
add
sahf
xor
dec
cmpsl
call
pusha
and
lods
pop
xor
testl
int
iret
mov
xor
roll
nop
dec
js
stc
pusha
fwait
ret
add
shrl
shlb
push
icebp
movntps
ret
pop
sbb
add
pop
mov
js
mov
dec
loope
or
push
mov
push
out
gs
dec
out
icebp
cmp
mov
xor
stos
push
mov
mov
lahf
pop
push
add
lds
js
movsl
and
mov
adc
sub
dec
jle
jge
sti
cmpsb
sar
push
mov
or
bound
pop
fimull
fcmovu
sbb
pop
outsl
test
add
inc
mov
movsl
sti
test
fldenv
jecxz
pop
daa
mov
shlb
sbb
repz
pop
jo
and
ffree
jmp
loopne
add
and
sub
xchg
mov
xlat
loope
pop
ss
mov
xlat
mov
fs
sti
movsl
jo
cs
out
mov
call
std
jno
jns
aad
rcrl
cmpsb
pop
and
fsubrs
xchg
les
pop
sub
mov
sub
sbb
and
sti
cmp
mov
add
and
pop
aad
nop
dec
xor
cs
leave
mov
in
dec
cmpsl
jle
shl
pop
pop
gs
in
shlb
cmp
ret
fcom
sbb
fadds
inc
rcll
jo
loop
mov
mov
mov
cmc
ds
inc
mov
cwtl
stos
sti
mov
sbb
xchg
inc
mov
jnp
push
and
adc
fwait
stc
aad
inc
fimuls
cmpsl
bound
cmp
and
in
mov
mov
cmp
out
mov
cltd
inc
dec
push
bound
sub
mov
shlb
testb
mov
outsb
xlat
mov
mov
xchg
jae
popf
stc
in
mov
adc
filds
fnsave
cmpsb
adc
icebp
and
adc
sub
mov
jo
push
lret
cmp
jle
or
jmp
and
adc
loope
repnz
aam
ret
push
or
push
mov
push
lcall
or
int
inc
sub
pop
insl
orl
inc
push
xchg
repz
ljmp
nop
test
jne
aas
and
mov
leave
mov
pop
gs
addr16
add
scas
bound
jne
xchg
mov
inc
mov
cli
ret
sub
test
push
xchg
repnz
loop
fistl
mov
dec
lret
enter
pop
icebp
inc
and
mov
rolb
jbe
fwait
push
inc
dec
mov
dec
and
nop
xlat
jg
add
pop
cltd
shrl
loope
inc
pusha
push
inc
aad
push
and
cli
add
mov
jo
sbb
cmp
jp
mov
scas
add
pop
sub
inc
jmp
push
adc
fs
rorl
or
and
add
andb
inc
jmp
out
scas
adc
pusha
sub
mov
lret
mov
outsb
jp
mov
cmpb
daa
lods
out
mov
or
ffree
cmp
call
loopne
cmp
movb
inc
out
xorl
fildl
jnp
mov
adc
or
pop
pop
inc
jne
pushf
sub
add
sti
movsb
cltd
inc
mov
jg
decl
scas
fimull
roll
add
xchg
cmp
pop
daa
adc
test
aad
xchg
or
popf
dec
ret
xor
mov
shll
cmp
add
jmp
inc
pusha
lahf
adc
clc
fdivs
xchg
negl
adc
pop
cwtl
arpl
subb
lret
repnz
sarl
int3
xor
pop
add
int3
push
mov
cmpsl
fldl
xor
and
stc
cli
cmp
fdivl
push
or
mov
add
rorl
leave
add
push
fstpt
cmp
add
enter
push
sub
inc
stc
or
sti
test
pop
and
jbe
push
inc
popf
push
sub
mov
mov
sbb
dec
pop
push
lock
xor
push
dec
pop
and
decb
sahf
sbb
adc
sbb
mov
test
jno
lret
xlat
aaa
mov
repz
icebp
inc
inc
dec
dec
loope
cs
mov
add
fisttps
cwtl
jbe
popa
jo
fcom
cli
dec
aaa
jg
roll
popf
addr16
popa
leave
xchg
shll
cli
out
cmp
ss
repnz
das
fldl
push
xchg
loop
sub
popf
jno
fildll
arpl
inc
mov
cmpsb
cmpb
mov
mov
cmp
push
iret
pop
cmp
sbb
sub
lds
call
pop
rorb
and
dec
cmp
ret
divb
adc
jno
loope
outsl
xor
fistl
fwait
clc
cmp
bound
or
outsl
xor
popf
cmpl
mov
mov
lds
lods
push
pop
pop
fsts
jg
push
inc
xchg
add
bound
add
es
lcall
orl
in
ficoms
or
inc
push
mov
arpl
pop
addr16
mov
ret
popa
jnp
cld
stos
pop
shlb
outsl
in
add
shll
jo
shlb
xor
addr16
push
in
insl
outsl
sarb
push
js
std
aad
xor
shrl
sub
jmp
cmpl
adc
sub
pusha
mov
xchg
fdivr
ret
jl
out
repz
and
cmp
fs
mov
std
xchg
inc
mov
pusha
xchg
ja
pop
call
cwtl
mov
cmp
jo
mov
xor
aaa
and
jbe
stos
sbb
out
aas
mov
or
bound
dec
push
orl
aaa
repz
dec
sbb
mov
out
jnp
jmp
mov
stc
adcl
fldenv
aas
outsl
add
pop
xchg
inc
inc
pushf
out
cmp
loop
and
pop
cmp
hlt
xchg
sbb
xor
aas
lret
mov
incl
sub
pusha
add
mov
test
test
adc
imul
jnp
out
add
aad
pusha
jl
pop
mov
ljmp
cmp
mov
dec
loope
loope
cmp
arpl
mov
cmp
pop
push
fcmovnu
xor
iret
fistps
rolb
xor
ret
pusha
ret
inc
pop
lock
pusha
pushf
jnp
in
mov
jae
loope
pop
arpl
lods
or
xchg
repz
dec
xor
fcmovu
jbe
mov
into
rolb
xor
pop
negl
mov
cmpsb
dec
push
cwtl
fisubrl
lods
ror
push
lods
inc
icebp
mov
push
xor
fs
pushf
nop
adc
xor
xchg
jbe
imul
rcrl
add
rolb
or
out
pop
xchg
lock
inc
fidivrs
jmp
sbb
cmp
xor
pushl
and
cmp
addr16
sbb
movsl
dec
ret
stos
adc
insl
inc
rcrl
add
inc
shrb
popa
add
add
orb
xor
hlt
pop
sub
idivl
inc
lock
lods
cs
loop
pop
xchg
jg
fs
clc
and
stos
adc
lods
cmc
xchg
adc
repz
mull
add
mov
popf
xor
test
imul
in
mov
pushf
pusha
ds
add
iret
adc
cmpsl
push
in
adc
lret
fildll
and
fiaddl
fs
xorb
loop
es
adc
aam
repz
push
cmp
add
int
int3
ljmp
adc
fisubrs
mov
mov
adc
push
dec
mov
rcrb
pop
pop
mov
outsb
pop
arpl
jae
jmp
repnz
sbbl
js
lret
jae
pop
sbb
adcb
inc
jmp
lea
pop
aad
mov
std
mov
js
cmpsl
arpl
fildl
outsb
pusha
dec
sahf
fcomip
sub
js
test
sti
and
in
loopne
xlat
adcl
cmp
faddl
sub
mov
pop
test
jl
dec
in
pop
int3
adc
aam
cmp
pop
fiaddl
dec
je
dec
aam
sti
shrb
fstpl
inc
std
pushf
fsubs
mov
loope
test
xor
enter
sbb
rcll
adc
add
push
rclb
cs
rorb
int
dec
lods
lea
icebp
jmp
ja
xorl
jle
adc
jno
inc
xlat
lret
push
ljmp
mov
push
int3
lock
ljmp
pop
mov
jp
jl
add
clc
aam
push
cmp
lea
fiaddl
data16
sbb
dec
les
fstl
dec
push
in
mov
out
or
popf
bnd
rcr
push
js
or
movsl
jecxz
sbb
push
clc
sub
push
js
mov
fwait
mov
lcall
mov
mov
int
or
push
aas
cwtl
mov
mov
mov
je
cmp
insb
inc
sti
cmp
imul
sbb
push
pop
roll
popa
dec
test
mov
jbe
in
aam
sarb
mov
inc
and
add
sbb
nop
mov
cmc
xor
iret
ja
cld
fcoml
repnz
ret
jnp
imul
subb
imul
movsb
or
sub
fbld
pop
sbb
stc
ret
inc
pushf
cmp
mov
cli
cmp
test
jle
or
sti
mov
mov
add
scas
sbb
push
push
add
push
aaa
xchg
loope
aad
outsl
mov
add
cmpsb
lock
push
cmpsl
cmp
faddl
push
jbe
and
cmp
outsl
push
sarl
arpl
add
add
pop
in
xor
cmpsb
ds
addr16
orb
xchg
sub
push
mov
cwtl
pop
mov
jle
lea
ret
es
or
sbb
mov
xlat
sub
shl
rcl
mov
and
sub
imul
mov
push
xchg
jae
shr
mov
negb
cmp
mov
xlat
ss
pop
mov
pop
sti
aad
stos
sti
push
outsl
cmp
push
repz
pop
repz
xlat
or
filds
pop
cli
mov
jae
adc
notb
jnp
xor
cli
sarb
outsb
add
shrl
fstpl
mov
dec
add
fs
mov
xlat
push
lods
nop
lock
ss
movsb
pop
jl
js
aad
decb
lds
or
dec
imul
sahf
add
mov
psrlw
xor
popa
and
and
in
inc
andb
fldcw
or
mov
mov
ret
cltd
adc
in
js
pop
mov
pop
xor
stos
insl
test
icebp
pop
dec
divl
xor
add
je
ja
pusha
mov
popa
pop
xchg
fldcw
fdivl
test
mov
test
mov
mov
daa
cs
iret
dec
fnsave
pop
movsb
imull
mov
mov
sbb
cmpsl
fucomip
movsb
ja
ret
test
loopne
jno
mov
fdivrs
fldl
and
adc
sub
sahf
dec
mov
aad
mov
mov
fmuls
jmp
inc
adc
jae
inc
sub
add
fimuls
lahf
dec
dec
fsubrl
dec
jns
add
jp
imul
mov
fwait
lret
jo
jo
inc
mov
enter
cmp
sub
sahf
push
add
cmc
and
rorl
mov
shrb
and
js
je
ret
mov
adcl
decb
bound
mov
cs
jle
or
push
inc
nop
adc
pop
loop
psubsw
mov
aas
mov
bound
ds
popl
repnz
mov
inc
sbb
repnz
jbe
int
es
bound
jmp
mov
cmpsl
not
dec
scas
mov
fwait
lds
shrl
sub
or
jp
in
dec
jp
push
xchg
bound
mov
add
mov
pop
fisttpll
push
ds
insl
sub
mov
pusha
xor
cltd
mov
sub
cmpsl
cmp
pop
mov
pop
inc
aaa
jo
xchg
adc
mov
loop
dec
add
ds
adc
lea
mov
daa
test
sbb
dec
ss
pusha
dec
add
adcl
jg
push
jb
dec
loopne
mov
loope
hlt
mov
cli
leave
or
mov
bound
sub
inc
cmpsb
adc
outsl
pusha
or
mov
fdivrp
bound
ficoms
mov
bound
sub
fisubrl
jmp
fcmovnb
cmpsb
scas
fwait
pop
xchg
mov
mov
lock
cmpsb
mov
aad
psubb
adc
pusha
fimuls
ret
stc
jne
add
and
lcall
lcall
std
xor
jb
stos
fdivrl
mov
and
rcl
andb
les
pop
int
jp
add
je
jo
lea
sub
decb
and
mov
aas
fidivs
xor
lahf
dec
or
div
pop
sti
jnp
pop
scas
xchg
sub
pop
jmpw
jo
das
les
pop
stos
in
sub
shll
test
in
repz
popa
and
mov
cmp
jge
cwtl
xchg
dec
xorl
insb
sub
jmp
fisubl
dec
mov
mov
int
fimuls
neg
call
mov
test
push
or
je
fistpl
xchg
gs
jmp
xchg
sarb
push
inc
mov
jns
insb
or
rclb
adc
dec
aad
bnd
dec
mov
outsl
jl
xchg
cltd
test
movsl
mov
jnp
fists
add
pop
push
pop
mov
mov
add
xchg
pop
xchg
pop
mov
jge
dec
mov
mov
inc
mov
vcvttsd2si
aaa
mov
xchg
inc
xchg
pop
addr16
repnz
adc
xlat
adc
fwait
mov
mov
push
loop
rorl
xor
xor
outsl
dec
inc
add
ja
lret
movsl
in
add
pop
mov
es
pop
test
xlat
loope
lcall
movsl
scas
pop
dec
divb
push
mov
mov
stos
jl
sbb
jecxz
data16
mov
sbb
xchg
movsl
jmp
jp
push
cs
pop
cmp
fwait
inc
push
clc
insl
cmp
add
mov
loope
sub
inc
ret
sahf
mov
roll
pop
pop
sub
icebp
lret
out
mov
movsl
pop
xor
add
sbb
add
jns
jnp
xchg
cmp
cwtl
icebp
test
sbb
and
cmp
and
ss
pop
inc
roll
or
mov
mov
sbb
fucomip
push
movsb
lock
sub
mov
call
inc
mov
lret
dec
lcall
mov
insl
sbb
push
cmpsl
insb
icebp
test
xlat
sub
subb
rcrl
jns
jl
sub
push
or
les
out
mov
push
sti
roll
mov
jb
cmp
cmp
sbb
adc
mov
cmpsb
movb
push
and
pop
sub
repz
std
xchg
mov
js
stos
pushl
js
inc
pop
cltd
xlat
mov
int
push
adc
pop
mov
insl
stos
stc
mov
mov
fcmovb
pop
outsl
xor
inc
in
popf
jb
adc
outsl
pop
xchg
popl
or
or
loopne
sti
stos
aaa
fiadds
outsl
sbb
xchg
pop
repz
pop
sbb
gs
fisubs
mov
imul
push
or
xorb
sub
mov
decl
sbb
add
xchg
mov
loop
jbe
pop
mov
cmp
mov
out
jmp
lods
inc
cmp
fiadds
xor
icebp
sbb
dec
mov
fisubl
testb
sbb
mov
and
fstl
xchg
ja
bnd
out
push
jnp
rorb
out
stc
push
out
shlb
sbbb
mov
jecxz
or
dec
sub
decb
rorl
pop
fdivs
sbb
xor
sbb
fisubrl
xor
adcb
sbb
xchg
movsb
pop
repnz
mov
fmuls
fldl
lock
std
jns
or
xorl
cmpsl
pop
xchg
add
mov
push
dec
scas
roll
mov
ljmp
out
cltd
add
shr
clc
ds
orb
adc
pusha
dec
adc
add
pop
sbb
enter
loopne
fs
pop
adc
fsubp
dec
mov
mov
lods
push
mov
popf
adc
pop
inc
outsb
dec
pop
imul
push
dec
icebp
fs
in
dec
aam
notl
add
pop
daa
inc
jecxz
fwait
pusha
sub
and
repnz
cmp
push
pop
je
dec
cmp
ret
xchg
push
pop
gs
xor
xchg
sub
hlt
pop
mov
inc
xor
xor
loope
in
bound
rcrb
xor
jp
and
repnz
or
ret
or
fbld
jecxz
andl
lret
test
push
mov
out
inc
inc
sbb
flds
lcall
sub
es
cmp
xchg
adcb
cld
mov
and
sahf
stos
sub
dec
xchg
scas
mov
lods
cmc
pop
mov
imul
stc
pop
pop
cmp
push
push
xchg
or
cli
sub
pusha
or
pop
loop
movsl
cmpsl
sub
inc
mov
fadds
xchg
xor
lret
fdiv
pop
cltd
pop
push
xchg
and
jp
rclb
movsl
call
dec
filds
or
arpl
sbb
lock
ret
cs
pusha
pop
scas
xor
sbb
xchg
andb
fisubl
bound
les
sbb
cmp
call
fcomip
inc
mulb
push
pop
in
jb
shl
fldl
stc
pop
xchg
stc
mov
outsb
movb
push
xchg
test
aam
sub
push
loope
das
xchg
mov
and
sbbl
sub
bound
or
or
mov
or
xchg
lret
sub
fdivrs
inc
mov
jb
push
loopne,pt
push
cmp
sahf
and
ficoms
lcall
cld
pop
xchg
pop
pusha
sbb
repz
fbld
in
sbb
fisubrs
repnz
repz
xor
mov
sbb
pop
pop
sub
xchg
xchg
cmp
outsb
inc
add
cltd
mov
mov
pusha
or
jbe
cltd
lret
mov
leave
add
xorl
mov
push
add
test
xor
shlb
inc
jecxz
push
lret
jg
mov
mov
sahf
mov
js
out
clc
sbb
sub
cmpl
inc
mov
jb
lret
xor
rorl
mov
xchg
push
and
xor
pusha
popa
pop
cmp
and
test
out
cmp
pop
pusha
push
xchg
je
pop
pop
jbe
or
sub
fstps
jecxz
and
inc
or
xor
or
dec
xor
in
shlb
cld
sub
mov
shl
jne
add
sti
clc
stc
pop
cltd
sbb
jecxz
sub
sbb
push
mov
loopne
add
dec
dec
cs
lcall
adc
jb
sbb
fcmovne
ret
rcl
cltd
xchg
int3
jecxz
dec
push
push
insl
and
aam
jp
fbld
int
pop
addl
jno
icebp
or
out
jmp
and
mov
jo
les
popf
movsw
ljmp
repz
pop
scas
inc
fcmovb
ret
aad
lods
aam
fbstp
and
fisttpll
mov
mov
aas
stos
sbb
popa
pop
adc
sbb
push
iret
mov
adcl
addr16
iret
and
std
add
pop
out
aad
mov
fwait
jo
jne
xchg
and
pusha
in
dec
out
jp
mov
adc
push
pop
insl
bound
stc
push
cmpsb
cltd
cmp
in
jae
jp
xchg
mov
xchg
pop
repnz
loope
rcrl
xlat
mov
inc
xchg
xlat
clc
xchg
adc
xchg
adc
adc
int3
sti
stc
cmp
es
dec
repz
jge
es
mov
pop
push
test
outsl
pusha
es
mov
mov
repz
enter
pusha
sahf
ss
lds
repz
pusha
shll
pop
lret
mov
test
mov
mov
das
std
shrl
sbb
out
es
mov
pop
movsb
stc
xchg
sbb
adc
mov
repz
in
mov
ret
mov
jle
sub
inc
sbb
cmovge
add
pop
pushf
push
movsb
pop
scas
mov
ja
mov
xchg
ret
or
add
mov
add
clc
stc
pop
rcrb
xchg
lods
jmp
je
lret
and
inc
xchg
adc
xchg
cmpsb
out
pop
push
pusha
mov
test
lods
lea
xor
jno
mov
jb
in
test
stos
pop
cli
imulb
adc
mov
decb
clc
fistps
lock
cmp
pop
ret
pushf
int
add
push
pop
pop
xchg
daa
adc
mov
push
repz
insl
mov
dec
inc
outsl
cld
incb
sub
adc
lcall
sbb
adc
mov
and
js
scas
mov
outsl
jg
pusha
cmp
inc
bound
std
inc
loop
in
jecxz
stos
push
shrl
rcll
ss
inc
imul
pop
jb
adc
rorb
cmp
and
xchg
push
add
ljmp
adc
pop
rcl
cwtl
sbb
pop
mov
shlb
pop
jns
movsb
sbb
mov
jecxz
loope
jo
inc
xchg
pop
cmpsl
or
jne
sub
cli
add
mov
bound
aad
in
mov
sbb
ret
in
lcall
mov
out
andb
add
or
mov
sbb
out
cmpsb
cwtl
pop
scas
mov
dec
sub
aam
jne
mov
mov
test
cmpsl
pop
sbb
test
xchg
xchg
enter
bound
add
xchg
dec
push
jno
cld
cmpsl
and
out
pop
cli
mov
sti
pusha
gs
push
int
sbb
imul
push
out
push
pop
cmpsl
xlat
or
mov
outsl
rorl
clc
sahf
xor
push
cmpsb
stc
test
out
mov
and
mov
je
cmpsl
xchg
and
mov
jecxz
test
push
insb
maskmovq
dec
ret
or
int3
adc
test
dec
and
int
pop
inc
lods
insl
pop
push
cmp
dec
pop
out
aad
xchg
lcall
adc
test
inc
sub
lds
stos
scas
and
cmp
dec
mov
cmpsb
pushf
sub
dec
jne
arpl
and
jb
jo
lods
adc
or
sbb
ja
push
mov
fs
fdivrp
add
pop
mov
icebp
add
lea
pusha
adc
dec
into
mov
pop
cltd
rolb
repnz
inc
dec
sub
ret
pop
and
out
ja
mov
pop
xchg
in
mov
xchg
dec
xor
sbbl
loop
xchg
lods
pop
xor
mov
mov
add
icebp
icebp
pop
imull
jb
mov
jae
icebp
imul
cs
mov
fsin
or
enter
fs
and
add
push
outsb
test
jmp
lcall
push
cwtl
dec
jne
cs
andb
add
pop
adc
mov
lcall
pop
sbb
iret
xchg
sbbw
cmc
adc
mov
nop
xchg
nop
jp
in
fisttpll
push
lret
icebp
es
sbb
lea
mov
jmp
add
mov
insb
add
int
push
mov
or
out
ficoml
repz
cmp
iret
rorl
ret
fadds
cs
je
out
bound
jb
dec
mov
mov
in
in
test
cli
inc
loopne
inc
ror
pop
dec
and
pusha
das
std
add
push
mov
adc
add
int3
push
mov
adc
xor
loop
shl
incb
scas
mov
test
fsubl
adc
dec
or
jnp
xor
filds
cmpsb
insb
fadds
inc
test
movsl
push
loopne
sahf
in
push
dec
mov
lret
addr16
push
cwtl
pop
ret
jmp
aam
mov
dec
cmp
cli
jbe
inc
xor
pushf
ljmp
movl
push
pop
jecxz
mov
sarb
repz
sbb
mov
fisttpll
orb
shll
push
sti
lcall
bound
dec
fidivl
pusha
test
movsb
outsl
jb
dec
mov
or
gs
add
fdivrl
frstor
xor
test
pop
xchg
clc
pusha
jns
fiadds
arpl
xchg
ret
cmpsl
rcrl
mov
iret
lahf
loop
sti
inc
decb
jmp
jecxz
mov
dec
cmovb
insb
dec
dec
jb
cmp
sbb
or
pop
cli
or
loop
push
insb
xlat
bound
loope
pushf
inc
jecxz
cmpb
jne
add
lods
dec
ja
es
cmc
ljmp
jns
loopne
adc
sbb
scas
mov
cmp
push
jmp
push
add
add
bound
and
sub
aas
mov
scas
jae
pop
hlt
mov
dec
pop
in
jns
roll
pusha
repnz
scas
mov
aaa
sbbb
mov
jne
jo
lods
mov
stos
or
push
dec
cli
jmp
push
add
jnp
dec
negb
cmp
loope
nop
cmp
test
fistpll
movsl
lock
repz
pop
mov
xchg
and
xchg
inc
inc
xor
cli
cmpsl
cmp
pusha
mov
pop
pop
pop
jbe
fistl
xorb
test
repz
push
mov
popf
inc
mov
add
je
bound
int
fisttpll
out
push
or
dec
sbbl
mov
into
insl
add
lcall
adc
cmp
lock
mov
mov
xor
jbe
sar
fists
xchg
cltd
mov
mov
iret
fwait
pusha
lret
fisubrl
shr
cmpsl
addb
in
hlt
sbbl
mov
ret
add
cmp
pop
ficompl
inc
bound
adc
cltd
outsl
es
xchg
sti
stos
mov
inc
jle
mov
prefetchwt1
mov
cli
aam
adc
ret
push
sahf
mov
mov
sbb
loopne
cli
inc
xchg
sbb
mov
arpl
push
pop
in
test
lea
roll
int
fxch
std
dec
enter
leave
adc
xchg
lret
dec
adc
bnd
pop
aas
push
or
jno
cmp
jo
dec
lea
sub
mov
aas
movsb
sti
jmp
fcoml
ror
sbb
bound
int3
sub
insl
jge
pusha
xor
repnz
jl
sbbl
popf
mov
adc
fimull
lahf
fcomps
jmp
sbb
data16
inc
cltd
lret
loope
add
sbb
mov
mov
xchg
sub
jg
leave
loope
inc
cmp
stos
pop
xchg
or
mov
loope
and
rclb
push
rorl
lret
outsl
push
in
je
sub
jge
jecxz
scas
mov
jns
cmp
lock
loopne
add
mov
pop
inc
jae
mov
pusha
jecxz
or
insl
or
stos
loopne
repnz
cmp
inc
int3
dec
and
jo
jmp
test
in
out
add
jno
sub
in
pusha
sar
push
movsb
jmp
xchg
jecxz
aaa
pop
cli
mov
cmp
mov
fiadds
stos
pop
fildll
sub
or
jb
jle
imul
fnstsw
jecxz,pn
pop
in
and
fld
pop
push
pop
inc
push
jg
repz
cmp
jnp
sub
repnz
scas
addr16
cmpsb
repnz
fisubl
ret
rol
or
cmpsl
jno
int
mov
push
sahf
push
fisubs
mov
pop
insl
add
add
push
outsl
pop
push
adc
mov
mov
outsl
iret
inc
mov
shrl
mov
testb
adcl
ljmp
repnz
jecxz
mov
sbbb
jl
jne
fbld
shll
pop
adc
jb
push
ss
lret
jo
test
mov
push
xor
push
lock
add
inc
mov
and
out
adc
mov
jge
push
pusha
loop
rorb
orl
pop
cmpsl
sbb
adc
or
add
repnz
adc
push
jp
gs
mov
jge
push
xchg
cmp
jb
cmpsl
push
push
iret
sbbb
out
xchg
xchg
jae
dec
sbb
clc
pop
cmpsb
mov
jnp
xor
pusha
xor
ficoms
into
jno
or
jle
mov
pushf
mov
fiaddl
sbb
andb
data16
mov
movsl
ds
xor
cmc
lret
add
inc
or
mov
je
mov
je
xor
scas
mov
add
sub
fcomps
jnp
js
cmp
mov
enter
or
mov
stos
scas
xchg
mov
cmp
and
mov
gs
mov
subl
stos
les
inc
add
test
mov
aad
scas
test
insl
adc
pop
inc
loop
icebp
add
fnsave
loop
ror
jmp
cli
mov
pop
dec
dec
arpl
outsb
pusha
gs
xor
test
mov
and
jnp
mov
sbb
pop
pusha
xlat
pop
dec
mov
fildll
sarl
mov
sbb
ret
lret
adc
add
xchg
stos
mov
cmp
arpl
imul
insl
inc
xlat
idivb
cld
pop
arpl
dec
mov
lret
test
dec
push
inc
xor
mov
sub
dec
dec
mov
jb
and
pop
dec
mov
sbb
sti
bound
mov
loope
xchg
or
mov
and
arpl
ljmp
pushf
xchg
xlat
and
out
pop
lret
loop
cmpl
dec
xchg
insl
aad
xchg
mov
movsl
aas
jg
and
lods
pop
repz
out
mov
repnz
sbb
xor
or
mov
push
push
mov
pop
push
xor
in
xchg
cmpsb
xor
pop
fists
das
imul
movsl
pop
scas
lcall
add
pusha
fcmovu
insl
ret
jb
xchg
sti
iret
push
or
ljmp
pop
fstpl
dec
add
subb
repnz
in
and
xchg
in
dec
jno
adc
fwait
int
rcll
push
shr
ret
push
das
call
dec
pop
mov
jg
aaa
ret
loop
xchg
int
movhlps
xor
nop
bound
pop
push
mov
movsb
mov
mul
mov
add
or
std
or
das
xchg
push
push
sub
cld
pop
mov
and
dec
loope
iret
cmp
andb
sub
lret
push
lret
insb
inc
jnp
pop
mov
mov
std
inc
or
addb
jae
hlt
sbb
andb
das
cmp
mov
pop
in
push
mov
pusha
inc
cmp
cmp
insb
inc
jb
jo
rcll
xchg
in
add
or
xchg
cmp
mov
mov
clc
arpl
push
pop
rcrb
mov
cltd
adc
lret
shrl
fsubl
fs
inc
sti
add
in
jnp
mov
insb
es
mov
out
fbstp
push
loop
nop
jnp
cmp
mov
pop
fstps
push
test
cmp
xchg
sub
mov
jns
aad
inc
xchg
xchg
mov
add
es
lock
mov
push
xchg
iret
imul
dec
mov
fldcw
repnz
inc
adc
or
jecxz
aas
xchg
out
repz
stc
push
sub
out
ret
sti
test
pop
adc
xor
insb
ja
or
addr16
sub
popf
les
bound
or
mov
push
xchg
pop
icebp
cmpsb
repnz
or
mov
jbe
add
test
fistpll
pop
push
jmp
xchg
pop
je
cs
xchg
mov
cmp
repz
mov
and
in
stc
sub
and
add
or
pushf
inc
xorl
push
push
shll
or
out
xor
filds
pusha
rclb
add
push
iret
mov
inc
dec
cmpsb
std
enter
inc
pop
cmp
call
mov
stos
enter
add
repz
in
adc
mov
jg
pusha
sbb
mov
jo
sbb
mov
xchg
xor
cmp
pop
mov
inc
mov
mov
dec
xlat
push
sub
clc
movb
cltd
mov
je
cmp
xor
xchg
test
repnz
rorl
mov
mov
mov
or
sub
cs
push
xchg
into
mov
ret
fmul
mov
out
pusha
enter
fs
sbb
cmp
cmc
xchg
in
ret
stc
mov
lds
popa
add
cmp
bound
xor
das
xor
js
lods
lret
cmpsb
jno
aad
sbb
cli
push
in
cmpl
gs
cs
fisttpll
inc
xchg
movsb
add
pusha
sbb
call
in
pusha
fwait
mov
add
xchg
int
mov
push
fwait
std
adc
fcomps
inc
daa
cmp
fisttpll
add
cmpsl
or
pop
sbb
lea
adc
fdivl
movsl
mov
mov
xchg
je
push
loopne
inc
mov
insb
sbbl
andb
xchg
dec
cmpsb
repnz
mov
jo
bound
cmpsb
push
push
inc
loope
inc
xchg
xor
mov
icebp
inc
xor
sbb
dec
loope
mov
add
xchg
scas
push
sub
stc
mov
lds
subb
loope
out
pusha
lret
jne
mov
sbb
aad
jmp
lret
popf
sub
xchg
repz
mov
mov
lds
mov
in
jo
or
out
in
cli
subb
fstpl
mov
stc
stos
mov
lods
outsl
les
xchg
or
adc
fnstsw
xchg
xchg
jne
outsl
xchg
scas
push
mov
push
xlat
add
outsl
mov
jno
sbb
pop
adc
dec
mov
imul
movsb
lcall
out
insb
xorps
push
aaa
pxor
outsl
inc
mov
ret
dec
cmc
subl
or
push
or
jo
inc
outsb
cwtl
pop
sub
and
add
lahf
sub
mov
fstl
pop
and
sarl
inc
inc
push
or
or
sahf
push
dec
nop
addr16
push
or
add
cwtl
pop
or
iret
fldl
gs
xor
push
pop
int3
pop
mov
add
dec
icebp
mov
mov
add
adc
mov
or
pop
daa
leave
jo
mov
cmpsl
cmp
mov
insl
pop
adc
addr16
sub
lods
lahf
leave
fiaddl
aad
daa
out
xchg
pop
pop
sbbb
pop
or
test
xchg
fcompl
mov
push
les
jns
sti
add
cmc
dec
mov
arpl
lret
pop
add
jbe
sarb
or
rorl
or
inc
mov
fdivp
push
ret
lea
clc
sub
pop
push
jnp
stc
push
jno
cmp
or
add
test
xchg
add
inc
outsl
add
fsubrl
add
ret
jns
sbb
mov
jae
roll
inc
push
xchg
mov
clc
nop
mov
pop
dec
jmp
push
sbb
lods
cltd
pop
xchg
pop
pusha
or
arpl
mov
dec
mov
add
ds
dec
dec
push
adc
rcll
sti
out
daa
shll
cltd
pop
or
push
into
sbb
scas
mov
jle
roll
pusha
mov
incl
sub
loopne
jnp
lods
sti
or
fstpl
int
shll
daa
xchg
pop
mov
mov
adc
divb
cld
andb
clc
lods
mov
int
fisttpll
dec
jg
mov
lock
jge
clc
mov
cs
fsubr
arpl
inc
jg
inc
sub
arpl
into
inc
insl
adc
leave
mov
push
repnz
arpl
bound
imul
repnz
lret
jb
sbb
and
dec
scas
cmp
andb
addr16
out
or
je
xor
pop
mov
insb
mov
mov
inc
push
lock
inc
pop
add
popf
stos
dec
sbb
mov
in
xor
cmp
add
cwtl
pusha
movsl
jp
cmpsb
rclb
iret
cmp
out
sarl
movsl
sub
xchg
in
push
jb
fnsave
or
push
lahf
loopne
arpl
je
in
ja
or
addr16
and
outsl
fmuls
orl
lret
leave
jo
adc
jnp
pusha
std
subb
icebp
pushl
xchg
fsubs
lds
mov
bound
or
pushf
loope
arpl
dec
xor
fstl
mov
dec
xacquire
cmp
imul
je
push
lea
pop
sbb
ja
mov
cwtl
dec
push
ret
mov
dec
sub
xchg
loopne
xchg
fimuls
pop
aas
repnz
jnp
hlt
xchg
loope
dec
push
mov
mov
mov
lcall
push
rep
mov
dec
mov
xorl
ljmp
sbb
sub
sub
dec
pop
idivl
adc
dec
jns
xor
mov
add
cli
ja
dec
out
movsl
leave
lea
faddl
scas
mov
lods
mov
and
aam
and
ds
clc
es
gs
lods
outsl
cli
lods
popa
or
and
jmp
loope
shll
mov
stc
mov
or
enter
inc
outsb
pop
or
jb
xor
fwait
push
jmp
xchg
bound
jle
mov
stos
and
dec
sub
inc
cmp
nop
arpl
aad
movsb
cmp
outsl
cmp
arpl
adc
xchg
and
decl
or
jle
mov
orl
lahf
mov
adc
mov
pop
cwtl
xor
movsl
mov
inc
das
clc
das
xchg
jbe
jns
cmp
insl
pop
js
dec
mov
test
sub
insl
jb,pn
mov
mov
dec
mov
or
cmp
adc
add
cmp
pop
fstps
xor
cli
ret
pop
fsubrs
arpl
idivl
repz
outsb
cmp
and
push
adcl
popf
ret
out
ret
pusha
sub
mov
shlb
enter
mov
inc
sub
mov
and
jp
push
je
nop
fsts
mov
lcall
inc
repz
mov
xor
jp
stos
test
sub
jbe
fnstsw
push
or
lret
push
fimuls
push
lret
pushf
scas
and
test
outsb
cmpsl
hlt
ja
inc
lock
lcall
pop
push
test
das
sbb
mov
push
mov
dec
sub
and
pop
ret
shll
int
inc
in
cld
xchg
sub
and
insb
test
andl
mov
add
and
nop
xor
mov
into
ds
pop
xor
push
xchg
mov
sbb
bound
test
pop
dec
or
jo
ficoml
fadd
movsl
call
xchg
mov
jg
enter
xor
jp
sub
lea
sub
rclb
call
xor
jmp
cwtl
test
xor
cltd
or
or
xor
or
jg
pop
test
xchg
and
ficoms
dec
leave
aad
popf
outsb
mov
fcom
loop
stos
push
or
or
xor
fbld
repz
push
inc
xor
test
test
fucomp
push
dec
mov
xchg
or
pop
mov
jnp
xchg
stos
lock
pop
jl
test
cmc
and
pusha
test
xchg
fiaddl
ss
filds
mov
and
lret
add
sub
or
lods
xlat
outsb
mov
out
xor
leave
popl
pop
xlat
call
rolb
mov
xchg
push
and
fcomps
xchg
rorb
frstor
scas
xchg
inc
icebp
nop
and
loopne
xchg
dec
roll
adc
or
xchg
shl
inc
cmp
sbb
pause
jg
js
adc
xchg
mov
xchg
mov
jmp
jno
and
dec
fildll
out
int
mov
dec
mov
cmpsl
roll
pop
sbb
fsts
mov
add
xlat
ficompl
cwtl
icebp
inc
jp
jp
test
jl
or
adcl
jge
daa
sbb
xchg
jge
sbb
cmp
add
adc
lock
dec
fs
mov
push
and
cltd
jg
ds
cmp
testb
add
lods
repnz
addb
sahf
push
adc
xchg
sbb
fldl
push
pop
rcrl
lcall
mov
test
mov
mov
or
out
xor
adc
lods
ret
mov
lret
jo
fsts
add
jmp
loop
iret
call
sbb
mov
cltd
pop
rcll
repz
mov
pop
xor
filds
adc
mov
shrl
sbb
icebp
lret
pop
sbbb
push
add
pop
in
mov
bound
sbb
fwait
inc
ret
jnp
addr16
or
shrl
lds
and
ret
jnp
addb
xchg
shll
xchg
cld
lret
call
out
dec
cmpl
pusha
lds
dec
pminub
pop
pop
sub
lcall
mov
pop
jns
dec
xchg
jg
add
pop
xchg
cli
mov
and
jo
push
mov
xor
imull
pop
or
lahf
adc
and
mov
mov
outsl
loopne
hlt
incb
adc
stos
xor
popa
jbe
mov
sbb
sbb
mov
jno
cmpsl
arpl
das
xchg
rclb
out
pop
repnz
mov
in
inc
test
add
or
jno
add
lds
pusha
push
xchg
ret
mov
sahf
sbb
loopne
pop
sbb
jae
xchg
cld
jl
xor
sbb
test
out
and
push
mov
inc
cwtl
sbb
mov
subl
leave
mov
and
lret
ljmp
jae
or
es
lcall
repnz
cmp
or
jae
test
stos
loopne
sub
loop
mov
xor
xchg
push
mov
pop
jp
loope
test
mov
lds
sub
repz
popa
mov
andb
or
jl
mov
dec
inc
jae
xlat
mov
bound
pusha
xchg
lods
aad
add
aad
inc
mov
cmpsb
and
icebp
andb
pop
xor
jecxz
pusha
in
jmp
out
es
push
repz
loope
jp
rorl
jo
dec
ud2
test
xor
pop
push
sub
shl
mov
movsl
xor
jo
and
xlat
push
mov
cmp
inc
pop
dec
sahf
mov
mov
pop
xorb
bound
or
adc
pop
xchg
ret
inc
data16
cmp
jns
xor
aad
lock
in
stos
dec
test
adc
test
push
inc
cwtl
jle
and
and
pop
into
mov
loop
movb
or
inc
inc
aad
ja
mov
popa
adc
add
enter
dec
xchg
inc
imul
lods
lds
mov
pop
shl
in
mov
outsb
add
add
xor
mov
loopne
cmp
int
and
lds
pop
inc
out
pop
addr16
dec
cmp
add
sbb
dec
nop
frstor
pop
std
inc
pop
push
add
push
aaa
pop
dec
jg
or
fisubl
jae
sub
dec
dec
mov
sub
mov
jbe
imul
sbb
cwtl
sbb
pop
out
mov
pop
ds
aad
push
mov
gs
outsl
mov
inc
mov
inc
and
sub
pop
or
cmp
cltd
out
mov
cmp
ljmp
dec
or
sbb
bound
jmp
addr16
lret
mov
jp
push
add
fistpll
jo
sub
cmp
inc
rol
sub
addr16
into
add
push
lret
sub
mov
mov
mov
cwtl
pusha
test
dec
inc
mov
int3
or
repnz
push
into
mov
pop
scas
mov
and
pop
or
fcmovb
jp
dec
scas
mov
lods
aaa
pop
loope
repnz
pusha
out
lcall
call
inc
les
adc
mov
fnsetpm(287
adc
aaa
fisubs
sub
xor
and
inc
mov
addr16
pop
lret
or
adc
pusha
loopne
in
rorl
mov
rcl
or
fmuls
inc
lods
mov
fidivl
ror
mov
pop
xchg
mov
enter
movsl
pop
sub
sahf
xchg
bound
pop
fbstp
cmp
loope
xor
mov
jae
or
test
dec
shlb
pusha
pop
mov
jg
repnz
test
push
sti
mov
push
sub
sbb
outsl
inc
adc
mov
dec
mov
cmpsl
fidivs
pop
rorl
rolb
push
ds
mov
xchg
cwtl
push
jecxz
dec
sarb
out
adc
sahf
jo
ds
int
insl
mov
sub
mov
lods
scas
imul
xchg
inc
addl
mov
xor
mov
and
mov
leave
fldl
mov
cmp
dec
push
loop
or
mov
testb
mov
cmpsl
jg
lods
mov
xlat
pop
in
loopne,pn
xor
push
dec
jo
and
loop
test
pop
inc
jb
jae,pn
push
sti
pusha
lods
aad
je
rolb
ficompl
lods
jo
jp
mov
fidivs
cltd
dec
mov
jmp
inc
rcll
mov
iret
lret
int3
outsl
int3
adc
jmp
cld
jb
mov
stos
mov
sub
mov
ret
rcrb
add
loopne
mov
jl
movsl
cmp
sbb
shll
xor
into
ss
mov
outsl
loop
xchg
jb
ret
fsts
and
out
or
push
in
addr16
sbb
sti
fsubl
call
dec
in
movl
or
pushf
icebp
mov
jge
sti
ficoml
pop
ds
aaa
rcrl
pushl
xchg
scas
rcrl
aas
or
jnp
pop
mov
fs
movsb
push
icebp
adc
test
pop
out
aaa
mov
test
in
or
sub
mov
inc
adc
mov
push
popf
xchg
test
mov
or
inc
dec
clc
xor
xchg
jmp
adc
or
pop
lcall
lock
dec
add
adc
out
inc
inc
orl
dec
lret
scas
out
sahf
andb
aad
and
lods
ljmp
mov
xchg
daa
xchg
dec
out
jnp
cmp
add
movsb
pushl
push
jecxz
ffreep
shrl
nop
lret
lret
pop
xchg
mov
jo
mov
cmp
inc
loope
test
test
subl
dec
mov
ret
push
mov
call
mov
push
or
cmp
gs
adc
mov
aam
std
outsl
std
adc
in
cld
cmp
fcomps
mov
adcl
test
xchg
adc
sbb
cmp
ret
in
lret
xlat
sbb
xor
xchg
test
ljmp
enter
xchg
dec
jmp
ljmp
pop
out
or
mov
mov
repz
cwtl
out
pop
pusha
dec
dec
sti
repz
pop
adc
pop
es
fsts
movsl
ret
xlat
in
xor
movsb
pop
xor
pop
dec
imul
sahf
adc
std
sbb
adc
mov
icebp
es
jne
pop
add
push
xor
fcoml
loopne
sbb
repz
mov
rorb
jg
roll
xchg
push
ss
pop
push
xor
jb
mov
sbb
push
xchg
or
inc
test
push
jnp
insb
sahf
out
pop
xor
mulb
addr16
jns
sbb
and
xor
xor
mov
fidivrl
push
out
sub
xor
pop
xchg
push
out
or
jns
sar
xlat
repnz
imul
mov
out
rcll
lea
dec
cmp
int3
and
adc
or
mov
mov
and
int
cmpsb
rcrb
add
inc
test
or
insl
sbb
mov
mov
jno
rolb
divb
popf
aam
leave
xor
mov
push
stos
sbb
std
ljmp
fwait
mov
xlat
lahf
ret
mull
test
mov
pop
cs
mov
rol
lret
push
pop
sti
inc
dec
arpl
mov
inc
addr16
ret
clc
sbb
xor
pushf
or
inc
std
sub
xchg
dec
cmp
aam
fistps
mov
mov
shll
arpl
dec
add
jge
movsl
pushf
lock
dec
lds
pop
out
mov
xchg
jbe
cmp
cltd
iret
mov
mov
jp
inc
cmp
sarb
fistpll
cmpl
divl
dec
sub
jae
mov
loopne
and
pop
jle
repz
in
jnp
mov
cmp
sbb
ja
fcomps
out
pusha
nop
mov
xlat
cmp
aam
daa
mov
jmp
and
inc
add
mov
aam
rcrl
pop
mov
pop
call
mov
pusha
push
jo
add
cmp
out
mov
test
xor
xor
push
cmp
orb
fbstp
and
ja
lods
movsb
mov
cmp
fwait
pop
jno
or
sbb
insl
ret
pushf
cmp
pop
sbb
je
jnp
xchg
jns
fildl
ds
pop
mov
or
sarb
dec
and
mov
push
pusha
cmc
adc
shlb
ljmp
ljmp
rorl
out
sub
mov
pop
sar
stos
loop
xchg
jo
and
fwait
loope
popf
scas
cmp
mov
push
push
push
movsl
adc
push
inc
cmp
outsl
xor
dec
inc
add
mov
test
sub
add
lods
lods
mov
fiadds
add
adc
fcmovnb
and
and
adc
push
mov
mov
add
mov
shlb
or
and
or
jmp
xor
push
pop
inc
sub
cli
subb
add
mov
fstl
test
outsb
ja
pushf
adc
cwtl
fdivr
sbb
addb
cmpl
fldcw
or
subb
test
mov
push
aad
inc
sub
xor
orl
clc
jecxz
cs
ret
shrb
xor
sub
in
inc
mov
or
or
imul
lods
adc
mov
ret
icebp
xchg
sti
dec
nop
arpl
pop
cmp
sti
shrb
shrl
xchg
xchg
push
mov
stc
pusha
xor
xor
inc
cli
les
icebp
adc
loope
rclb
pop
lret
or
aam
push
jmp
mov
fisubl
pop
pusha
cmpsl
sub
ljmp
addl
jle
sbb
sbb
xlat
nop
or
clc
pop
in
test
bound
addr16
pop
cmp
and
fnstenv
loop
dec
or
dec
adc
repnz
and
or
popf
and
les
dec
mov
fldenv
dec
out
and
pop
repnz
andl
jno
sub
cmp
xor
movsl
icebp
loope
mov
cmp
jmp
dec
lret
in
inc
push
fisttps
mov
and
sbb
xlat
add
sub
add
jg
imul
in
mov
inc
sti
pop
and
enter
sahf
psubusw
mov
fwait
movsl
add
inc
cmp
cmpsl
stos
out
sbb
and
setp
xorb
add
add
mov
cmp
fcmovu
add
mov
or
in
pop
cmp
push
int
push
or
gs
mov
and
cmpsl
pop
xlat
insl
sub
jo
sub
shll
popa
dec
shlb
lds
push
clc
inc
ret
add
outsb
sub
mov
cmpsl
ds
inc
icebp
cs
or
aad
fdivr
ret
xrelease
test
jnp
dec
jns
xchg
subb
rorl
loopne
pop
loopne
push
sbb
jne
mov
aaa
rcrl
andl
mov
or
lods
out
xchg
xorb
xchg
in
lret
xor
aam
mov
mov
popf
stos
push
mov
dec
push
dec
test
addb
dec
or
scas
mov
sub
repnz
in
xchg
orb
inc
pop
push
fcmovbe
cmp
sub
aam
ss
imul
xchg
inc
adc
ret
xchg
sbb
jg
cmp
adc
dec
lcall
in
pop
or
pop
cmp
bound
fadd
divb
sbb
clc
pop
and
shrl
ret
stc
add
add
dec
std
cmp
in
ljmp
push
es
or
jecxz
inc
xchg
dec
and
add
repz
pop
leave
push
je
mov
adc
push
and
outsb
add
stos
xor
mov
xchg
inc
mov
lods
sbb
adc
push
inc
call
ret
adc
mov
or
push
mov
shlb
lock
or
xorl
push
movsl
test
adc
scas
pop
daa
sbb
xor
sti
nop
in
mov
lods
fsubp
jnp
lds
jg
jne
adc
gs
rep
push
mov
out
lea
and
sub
inc
lods
cmpsb
lock
clc
mov
ja
sub
sub
adc
jns
enter
sub
xor
leave
lcall
lahf
xchg
and
rolb
mov
test
sbb
in
ljmp
or
rol
test
push
and
inc
cmp
sub
sbb
push
in
sub
scas
pop
imul
icebp
sti
adc
mov
lods
mov
mov
pusha
push
or
jg
inc
fdivp
bound
cmp
sbbl
popa
imul
mov
mov
in
mov
jecxz
or
pusha
loope,pt
mov
jnp
sti
ljmp
push
lods
insl
rcll
cs
cmp
pusha
add
and
mov
pop
outsl
insb
push
sahf
repz
inc
jl
loopne
fsubl
xor
lret
xchg
js
mov
xchg
stc
or
lahf
lea
subb
and
inc
ja
popa
fsubr
lret
xchg
mov
movsb
shll
mov
mov
pop
fisttpll
add
mov
xchg
add
sbb
adc
xor
dec
pop
xchg
popa
fs
orb
sti
pushl
lahf
pop
mov
inc
cmp
mov
lret
lods
fldl
iret
jge
push
mov
sbb
mov
mov
jg
adc
push
clc
inc
push
pushf
gs
xchg
insb
push
mov
ds
loope
lods
dec
shrb
xor
jp
jo
jle
lock
dec
stos
stc
xchg
mov
or
out
xchg
inc
pop
sub
fimull
cli
jbe
fstps
add
mov
cmp
cmp
mov
nop
out
xor
push
filds
mov
mov
fcomp
movsb
jnp
addr16
inc
sub
lret
jne
pusha
shll
xchg
adc
push
push
adc
pop
nop
or
sbb
lea
adc
lock
dec
andl
rcr
ret
jno
xor
push
and
add
jo
je
fists
pop
movsl
mov
lock
push
add
fnstsw
sub
testb
mov
mov
and
sub
inc
inc
lcall
sbb
cmc
cmc
and
in
popa
mov
fcompl
mov
std
dec
push
inc
jg
shr
lcall
js
sub
mov
jecxz
hlt
pop
arpl
inc
inc
popa
imul
addl
ds
cmpsb
sahf
jb
arpl
negb
rcrl
icebp
outsl
test
mov
and
xlat
cmpsl
in
or
pop
sti
call
lcall
mov
mov
xor
sub
cmp
xlat
mov
sti
mov
dec
push
mov
mov
push
mov
or
mov
int3
xchg
cmp
xchg
fisttpll
cmp
pop
loope
fsts
jo
and
repz
ret
xorl
fldl
sbb
icebp
clc
sbb
dec
and
inc
mov
mov
pop
loop
add
call
fnstenv
inc
ret
push
xchg
add
sbb
jbe
sbb
mov
mov
aad
sub
jns
lea
push
insl
shrl
sub
mov
ret
bound
inc
loopne
sub
cmp
fsubrl
cs
loope
fdivrl
mov
addr16
cmpsl
bound
pop
mov
inc
int
arpl
cmp
mov
bnd
pop
pop
clc
lods
popa
sub
cmc
daa
xlat
mov
addr16
push
jmp
and
adcl
sahf
adc
js
popa
in
push
xlat
cmpsb
test
cli
dec
out
fildll
test
or
mov
stc
add
mov
mov
bound
lea
fstpl
rcr
nop
mov
mov
in
mov
sbb
movsl
mov
mov
add
mov
repz
add
enter
sub
shlb
das
mov
pop
adc
mov
pop
int
out
lcall
sub
mov
adc
mov
addr16
and
sahf
cs
cmpsl
pusha
adc
call
mov
insb
cmp
mov
pop
mov
cmp
popf
cwtl
add
push
pop
lock
push
jg
mov
and
in
push
ja
sbb
add
push
jae
adc
push
lods
cmp
clc
xchg
mov
pusha
ss
test
das
push
push
arpl
aam
outsl
adc
pop
cmp
jo
and
inc
data16
mov
leave
pusha
push
rolb
popf
or
data16
fs
jne
add
ds
pop
in
jns
or
cmpb
dec
jg
mov
cli
mov
daa
pop
int
add
fs
mov
sbb
pop
fistpll
xchg
inc
xor
jmp
cmpsb
in
addb
sti
add
and
lock
lahf
inc
rol
cmp
push
sub
daa
sub
inc
cmp
cmp
adc
std
mov
lods
xor
cmpsb
sbb
outsl
scas
cs
pop
and
pushf
dec
sub
shll
ds
mov
jnp
mov
loop
fsubrs
inc
loope
push
inc
pushf
stos
aad
sub
fs
or
popa
jb
push
mov
ja
pusha
push
sub
test
dec
jge
pop
jnp
mov
and
mov
push
mov
inc
lods
movsl
jmp
mov
aad
sti
adc
mov
daa
cmpsb
lcall
enter
gs
loop
xchg
pop
adc
ret
fists
inc
cmpsl
xor
jl
or
xchg
pop
push
mov
xor
jle
bound
scas
outsl
cmpsl
or
jle
dec
mov
aas
xchg
test
mov
xchg
sbb
out
add
inc
mov
jns
sbb
movsb
dec
iret
jecxz
jmp
sti
hlt
mov
es
adc
mov
sub
popf
mov
or
es
sbbl
cltd
popf
fdivrl
add
lcall
pusha
and
mov
mov
and
ret
inc
dec
xchg
and
movsb
out
pop
ds
test
jns
xor
adc
ljmp
or
mov
dec
imul
sbb
pop
addr16
inc
xchg
leave
push
mov
test
iret
loop
mov
test
push
test
push
cli
in
cmp
adcb
mov
xchg
inc
outsb
popf
push
rep
out
jno
adc
cmpsb
je
dec
stc
sbb
pop
pop
mov
rcr
lahf
sub
ret
mov
les
fists
cmpsb
sub
add
inc
fldl2e
xchg
out
lcall
call
scas
call
sbb
in
scas
jb
lods
push
sbb
cmp
or
push
sub
mov
outsl
mov
xor
in
pop
inc
ret
sahf
sub
mov
mov
mov
or
pop
fadds
sbb
fsubrl
or
jecxz
das
repz
jb
jge
pop
rol
sub
lods
addr16
stos
jecxz
xor
scas
mov
stos
pop
rol
cld
push
repz
sbbb
mov
loop
cmc
bound
push
cwtl
jp
mov
lret
in
in
jmp
sar
push
fcoml
int3
ja
dec
or
or
mov
fisttpll
das
fs
lea
jae
pop
pop
cmc
test
addr16
sub
std
out
xchg
movsb
push
out
fbld
ret
dec
addl
inc
hlt
fstpl
sti
scas
dec
cmp
mov
push
and
mov
push
in
xchg
push
lds
das
std
mov
data16
sub
xchg
ret
ja
scas
add
mov
out
inc
out
inc
dec
dec
adc
popa
cmpsb
add
adc
test
je
pop
push
inc
mov
popf
repz
mov
mov
or
call
subl
cltd
outsl
neg
push
adc
xor
xchg
mov
jecxz
bound
js
pop
test
mov
xor
lods
sbb
lahf
movsl
xchg
out
jno
mov
into
xlat
std
daa
mov
dec
and
icebp
pop
xchg
pusha
gs
sbb
test
sub
pop
cmc
mov
lea
xchg
cmp
loope
push
inc
pop
xchg
stos
mov
push
std
out
pop
xchg
push
xor
in
leave
push
sub
arpl
sbb
and
inc
cld
arpl
jo
stc
rcll
add
repnz
push
scas
sub
xchg
mov
ret
pusha
cmc
test
jae
out
rorl
fwait
in
dec
cmpsl
dec
cmpl
insb
adc
xlat
pop
pop
iret
sti
jns
stos
xchg
push
enter
jecxz
fadds
mov
push
dec
xor
ficoml
fbld
or
mov
lret
jmp
xor
dec
in
pop
js
fbld
cs
cmp
jno
or
in
stos
imul
clc
repz
in
lcall
jo
fisubrl
cwtl
dec
loope
xchg
mov
push
or
mov
dec
sbb
leave
push
pop
je
or
pusha
addb
xchg
adc
jbe
jno
je
pop
aad
mov
roll
mov
mov
cmp
pusha
loope
ret
out
and
test
dec
sbb
mov
push
out
mov
dec
cmp
mov
jg
imul
inc
pushf
fcmovu
movsb
sub
mov
pop
scas
mov
pmaxub
shll
xchg
icebp
fistl
cld
fsubs
int3
jae
push
inc
pop
add
addl
dec
jb
or
sahf
dec
push
mov
insb
int
lea
push
mov
bnd
add
add
xlat
decl
or
out
inc
add
loope
jns
out
pop
bound
fadd
in
lea
shl
adc
fistps
sub
mov
xor
jbe
imul
mov
ret
nop
int3
push
xchg
cmpsl
stos
jno
ret
cltd
pop
aam
add
ret
xor
and
adcl
scas
lahf
inc
scas
in
ret
lock
fildl
push
xchg
jae
pop
cmpsb
std
mov
add
mov
out
aam
pusha
add
mov
mov
mov
push
pop
jns
cli
mov
add
adc
jae
test
pop
mov
clc
push
sbb
add
or
mov
fstpl
lds
mov
push
les
mov
or
sub
je
dec
xchg
jecxz
fisttpll
lret
jnp
mov
bound
xlat
out
pop
mov
pop
jl
pop
les
xchg
cmp
pop
cltd
leave
sbb
pop
xchg
inc
add
adc
out
bound
movsl
dec
sub
push
adc
movsl
inc
push
push
decl
adc
pop
std
loopne
pop
xchg
in
dec
xor
mov
sub
sub
mov
lcall
sbb
pusha
fxch
sbbl
pop
or
psllw
push
ja
dec
in
daa
ljmp
mov
js
mov
mov
sub
clc
cmc
lcall
and
leave
or
cmp
and
push
push
dec
dec
push
sti
pop
xor
scas
mov
fsubs
es
es
mov
in
ret
mulb
mov
ret
in
vpmacswd
jp
adc
jb
push
rorl
aas
fisttpl
orb
int3
aas
cmc
jl
and
xlat
dec
lcall
sahf
or
pop
or
repz
add
push
stos
es
mov
fdiv
inc
call
cld
add
cs
jae
jmp
cmc
lret
add
pop
mov
xchg
mov
test
arpl
add
push
or
xchg
pop
lret
imul
cli
push
stos
test
add
pop
xchg
cmp
in
testb
data16
pop
dec
cmp
adc
movsl
negb
pusha
dec
xchg
adc
xor
sub
push
mov
mov
sbb
xor
hlt
arpl
xorl
add
in
repz
adc
or
mov
sbb
cltd
xchg
jecxz
add
sahf
jge
lret
ret
bound
pop
movsl
fimull
jnp
push
repnz
pop
int
cmc
sbb
out
and
mov
pop
jno
sbb
mov
adc
jmp
pusha
push
lcall
es
lods
movsl
cli
mov
lds
xchg
stc
pusha
xor
mov
aas
xor
dec
pop
pop
or
pop
inc
lret
je
sbb
or
clc
or
jb
or
imul
mov
push
xchg
push
sbb
mov
pop
add
mov
mov
iret
clc
xchg
push
js
sub
push
jp
aaa
inc
lods
cli
adc
shrl
ret
xchg
loop
add
lea
inc
add
xchg
scas
xchg
mov
adc
js
call
fbstp
rcrb
mov
pop
adc
pop
ljmp
jns
sub
loope
mov
jmp
popa
test
jnp
shrl
loop
sbb
ret
add
divb
mov
in
mov
test
pop
imul
scas
pushf
pop
insl
loop
stos
mov
stos
pop
and
mov
sbb
mov
jecxz
movsb
sub
test
mov
lcall
ja
stc
je
inc
sbb
test
mov
bnd
lahf
les
out
loope
ret
lods
popf
std
push
jnp
icebp
loop
pop
repz
lcall
bound
aas
clc
jmp
cmp
xlat
mov
dec
fdivl
dec
adc
push
fisubrl
dec
jno
fwait
sbb
push
pop
lcall
andb
movsb
push
push
shrl
pushf
jecxz
dec
inc
stos
fstpl
out
cmp
pop
call
repz
dec
loopne
xlat
mov
sbb
dec
mov
add
bound
inc
jmp
repz
scas
jge
dec
idivb
jg
imul
adc
insl
dec
nop
test
pusha
testb
loope
jl
outsl
xchg
inc
fcomip
sahf
frstor
out
inc
pop
inc
call
daa
movsb
push
mov
sti
sub
mov
cmp
inc
fldcw
push
ds
lock
fnstcw
mov
fstpl
mov
jl
and
test
mov
pop
cmpsb
cmp
inc
nop
arpl
xchg
push
mov
pop
and
xchg
cmp
mov
mov
cltd
mov
pop
enter
les
xchg
or
lahf
insl
sub
pop
cmp
es
inc
iret
cmp
inc
jecxz
cmp
or
mov
in
adc
cmp
dec
fwait
mov
push
mov
loopne
addb
not
push
inc
loopne
mov
fimuls
push
pop
or
add
pop
lcall
mov
in
aam
cmp
pop
pop
adc
movsb
pop
and
pop
jno
xchg
out
add
jg
addb
jnp
arpl
stc
add
fmull
mov
and
js
out
bound
xorps
jbe
aad
stc
repnz
jecxz
push
sbb
and
sti
adc
sub
inc
shlb
in
or
add
movsb
push
sub
pusha
loope
ret
inc
cmp
and
popf
dec
into
lret
jmp
pop
adc
aad
sti
xchg
jl
jmp
loopne
push
and
cmpb
xchg
push
or
jno
insl
dec
insb
sbb
mov
loope
add
and
pop
outsb
pushf
push
test
cmpl
test
mov
xchg
mov
add
mov
aaa
dec
xor
loope
inc
or
out
pushf
iret
jecxz
and
mov
nop
sbb
inc
dec
cmp
subb
es
out
adc
lock
sarl
xor
dec
mov
loope
adcl
dec
out
imul
jl
push
cmp
bound
add
dec
and
mov
cmovb
cmpsl
clc
and
int
xor
inc
inc
negl
pop
insl
fdivl
lods
addb
cmp
leave
pusha
pop
aam
arpl
cld
adc
outsb
jmp
mov
pop
xor
dec
sahf
mov
les
push
shrl
fmull
ret
adc
jecxz
xor
sti
pop
xor
push
repnz
ret
cmpsl
sub
loop
mov
push
add
inc
lods
ss
fdivs
out
jl
cmp
and
ds
mov
and
mov
push
call
mov
test
and
push
xlat
mov
scas
pop
jl
jnp
out
repnz
in
inc
in
fstl
jo
clc
xor
repnz
add
mov
mov
jle
fistps
mov
rorl
push
pusha
inc
dec
cmp
insl
test
mov
jb
arpl
or
addr16
aad
push
sti
xchg
bound
push
jbe
test
adc
repnz
inc
sti
xor
inc
jmp
mov
sub
mov
mov
subb
out
cwtl
pop
fstpl
cltd
mov
push
cmp
pop
adc
xchg
lcall
xlat
push
cld
mov
mov
mov
stos
stos
aas
jo
sbb
scas
loop
insb
loop
mov
stc
xchg
lahf
in
fldcw
hlt
dec
sub
or
sub
fwait
test
dec
xchg
mov
xlat
and
mov
push
mov
stc
orb
mov
xchg
loop
lods
call
push
jmp
mov
cmp
adc
dec
jb
test
pusha
xor
mov
xchg
sti
cmpsb
push
fiadds
mov
pop
dec
ja
icebp
pop
lods
lret
adc
scas
adc
sbb
jb
pushf
lcall
add
push
push
in
movsl
adc
mov
sbb
not
pushf
push
dec
push
fmuls
fs
scas
or
pop
add
addr16
adc
lods
pop
ret
inc
fdivl
cmpb
inc
fbld
loope
shl
in
mov
icebp
test
dec
lods
addb
or
movsl
push
xor
test
lahf
xlat
mov
lret
std
cld
bound
dec
fidivrs
jl
xchg
push
jmp
cmp
pop
sbbb
int
lock
outsb
lret
out
add
pop
je
mov
ret
mov
adc
call
jle
pop
into
out
icebp
jmp
push
mov
out
mov
aad
dec
mov
mov
mov
test
add
scas
or
add
pop
inc
xor
stos
adcl
cli
test
push
fistpl
sti
push
loope
popa
mov
inc
ret
pop
jge
test
arpl
xorl
inc
cmpb
decb
inc
mov
pop
dec
cmpl
sub
and
jb
sub
sbb
pop
xlat
aam
xchg
or
xchg
clc
jbe
push
je
pop
enter
mov
ret
adc
in
dec
inc
lret
push
addr16
push
jbe
sbb
incl
sub
das
push
push
test
das
lea
sub
and
mov
rcrl
xlat
adc
lods
sahf
decl
cltd
and
jb
cltd
jns
xor
inc
loope
mov
jne
test
inc
xchg
shll
sbb
adc
mov
nop
call
call
sbb
mov
cmpsb
dec
mov
mov
jge
mov
fimull
pop
lret
mov
pop
call
jns
xchg
jno
es
nop
push
fdivp
adc
mov
cwtl
pop
sbb
int
test
mov
xchg
xorl
xor
or
xchg
push
and
inc
xchg
test
mov
or
lcall
dec
inc
jge
pop
dec
pop
movsl
pop
jge
int3
fldl
repz
into
and
xor
lock
scas
lcall
jb
sub
lock
sub
ret
sub
incb
out
insb
outsb
pusha
stos
shrl
adc
in
xlat
cld
sub
pop
push
push
push
and
test
lea
aaa
stc
arpl
dec
js
shlb
xorb
sbb
sbb
add
jo
xor
shll
cmp
ret
dec
gs
outsl
dec
xchg
sbb
lcall
repnz
pop
pop
nop
rorl
mov
call
add
or
outsb
loope
push
sbb
fisubrl
rolb
jp
pop
inc
shll
sahf
cmpsl
add
bound
push
push
jp
divb
xor
out
cmp
cmc
rcl
mov
or
cltd
int3
test
cmp
inc
mov
push
sub
mov
add
leave
mov
mov
fidivrs
int
lock
sub
xor
js
shll
xor
push
mov
repz
jecxz
cmpsl
dec
out
jp
jnp
jae
popa
lret
mov
loope
out
xchg
dec
or
out
pusha
jno
jge
adc
mov
ljmp
mov
jmp
xor
mov
mov
sahf
and
pusha
push
sbb
fcoms
mov
inc
mov
and
rcr
and
mov
jbe
jg
arpl
movsl
test
inc
call
ret
adcl
xchg
pop
cmpsb
rorl
pusha
rcrl
scas
jecxz
and
outsl
scas
call
jmp
call
sub
repz
rcrb
insb
inc
das
or
mov
and
push
sub
push
or
stos
add
and
fdivrl
mov
or
pusha
jb
lret
mov
jns
add
add
mov
xor
das
xor
push
and
push
add
into
mov
outsl
sahf
add
ret
stos
push
push
es
imul
mov
push
xor
mov
inc
mov
lods
fistpll
add
lcall
js
shlb
xchg
push
xor
inc
shlb
shl
repz
fnsave
lcall
xchg
fisubrl
push
fildl
cmpsb
leave
or
lret
mov
push
xor
push
dec
xor
pusha
pop
inc
sbb
lret
xchg
mov
je
sbb
add
outsl
shl
mov
mov
jmp
cmpsb
movsl
sub
push
cmpsb
shlb
pop
jge
dec
mov
pusha
sbb
dec
cltd
mov
adc
and
out
jae
sbb
sbb
xchg
pushf
ljmp
adc
xchg
bound
sbb
add
adc
dec
in
adc
test
popa
push
xor
inc
outsl
ja
mov
xor
mov
sbb
lods
push
ror
or
mov
mov
sub
cli
sbb
fdivrs
testl
pusha
fbstp
inc
addl
mov
jge
sbb
xor
jns
leave
cmpsw
inc
xchg
aad
repz
sbb
mov
call
mov
xchg
or
dec
das
les
cmp
xor
xor
cmp
jle
sti
mov
ljmp
mov
roll
stc
pop
sti
push
std
repnz
sub
mov
clc
stos
scas
mov
jns
push
sbb
movsb
xor
pushf
pop
aam
sbb
add
mov
rol
ret
icebp
mov
xchg
mov
or
cmp
mov
jmp
push
jnp
ret
pop
lods
cmp
inc
mov
divb
dec
inc
mov
mov
jb
sti
arpl
and
mov
addr16
gs
sub
mov
in
jl
stos
ret
xchg
push
or
push
lahf
movsb
jns
pop
jnp
xchg
or
add
enter
pop
stos
out
cmp
es
ffree
or
aaa
ret
fidivl
scas
imul
int
call
ss
daa
pusha
aam
loope
mov
push
sbb
sbb
call
lea
and
rolb
lret
dec
imul
fwait
add
nop
lcall
out
movsl
lcall
sub
inc
outsb
pop
loop
fsubrs
xchg
mov
popf
xlat
sti
adc
addr16
push
push
outsb
and
shlb
clc
arpl
jmp
pop
xchg
mov
sub
aad
pop
shl
mov
jecxz
inc
fcompl
rorb
mov
dec
cmp
push
fistpll
mov
adcl
inc
sbbl
ja
dec
int
sbb
push
push
jne
aad
mov
jns
or
jns
or
inc
in
mov
add
xor
pop
sub
pop
repnz
cmp
sub
and
xchg
pop
loop
pop
mov
pop
add
jp
xchg
mov
cmp
cmp
inc
aam
mov
sti
mov
mov
fidivrs
xlat
and
fidivrl
ret
xchg
cmp
ficompl
ret
gs
adc
dec
or
cli
jno
adc
cmp
dec
jno
mov
ljmp
lahf
xchg
push
test
mov
mov
andl
cmpsl
push
jb
jecxz
cmp
xchg
jo
pusha
enter
scas
sbb
sbb
dec
mov
mov
sbb
ds
xlat
and
ljmp
lret
jae
pop
and
sar
and
cmp
andl
repz
pop
pop
shll
and
or
dec
cmp
xchg
mov
or
rclb
jle
repz
and
clc
xor
mov
pop
lods
add
movsl
push
jmp
jne
ret
std
das
inc
filds
or
pop
mov
mov
sbb
cwtl
imul
inc
jb
movsl
fcomip
add
lret
push
sub
jge
pop
pusha
inc
clc
cmp
cmp
mov
xor
repnz
andl
in
dec
jae
lock
push
push
mov
std
andb
pop
inc
cli
mov
out
sti
sub
and
nop
and
rcr
pop
adc
push
outsl
xchg
push
or
out
inc
in
js
adc
mov
xchg
push
mov
addb
mov
mov
popa
and
push
out
out
movsb
pop
std
test
test
inc
out
ret
jecxz
es
sahf
cmp
cwtl
in
lock
xchg
stc
rcll
mov
subl
mov
cmp
push
or
cmc
repnz
sbb
lcall
repz
xor
rcll
fdivrl
and
xlat
data16
adc
mov
out
or
pop
jnp
adc
inc
icebp
filds
fwait
xchg
dec
int
incb
filds
cmpsl
pop
stos
cli
loop
sub
shll
test
ffreep
jecxz
mov
testb
lcall
aad
test
shrl
jle
pop
lds
fcompl
xlat
sbb
mov
fadds
or
dec
fimull
fisubrl
pusha
fdiv
es
das
dec
xor
mov
adc
mov
test
lret
xor
out
pop
fpatan
lods
adc
or
xor
insb
dec
outsl
adc
push
imul
xor
fiadds
test
push
push
loop
adc
mov
es
loop
lds
insb
ds
pusha
or
jle
mov
mov
xor
cmp
andl
pusha
mov
push
xchg
sub
fidivs
sub
pusha
cmpsl
push
in
add
cmc
mov
sbb
std
outsl
test
jnp
push
popf
sarl
movsb
add
mov
sbb
call
mov
ljmp
roll
and
out
fdiv
pusha
mov
xor
push
xchg
adc
mov
cmpl
aas
in
int
mov
adc
and
movsb
xlat
inc
jnp
in
xchg
jb
adc
in
push
and
xlat
sub
pop
mov
das
push
push
cmp
icebp
in
pop
nop
mov
fst
roll
sub
imul
nop
loope
mov
push
jbe
shrd
out
fwait
or
sbb
outsl
xchg
imul
punpckldq
jmp
inc
pop
or
or
test
mov
cmpsl
mov
add
or
filds
jecxz
mov
js
jecxz
cld
sbb
mov
xlat
pop
cmpl
jmp
mov
je
xor
fstpt
xor
dec
pop
adc
leave
or
loop
scas
sti
pop
mov
repz
xor
fisttpl
loopne
mov
inc
and
ret
cld
movsl
gs
ret
add
popa
sbb
dec
jnp
and
mov
leave
repz
insl
or
stc
jae
pushl
mov
lcall
dec
int
fcmove
jg
jmp
xchg
enter
test
das
and
inc
test
repnz
push
outsl
aaa
sbb
xchg
data16
add
sub
fcoml
push
repz
adc
cmp
xchg
cmp
addr16
dec
lret
fwait
dec
stos
andl
sub
sbb
movsl
in
andb
mov
repnz
pop
lcall
aam
dec
in
add
ret
pusha
lcall
mov
xor
mov
mov
add
aad
das
lea
stos
arpl
lock
sti
stos
pop
sub
add
pop
pop
enter
xlat
push
cmp
xchg
jne
sti
lock
cmp
flds
mov
push
jns
cmp
push
bound
jns
cmpsb
mov
pop
ret
push
out
sbb
add
adc
hlt
add
push
cld
dec
rclb
cld
mov
testl
mov
xor
mov
movb
enter
mov
and
jl
pop
xchg
jb
push
fs
nop
ret
addr16
add
sbbb
or
mov
sub
add
arpl
sub
imul
fcmovnb
in
ficoms
shll
sbb
cltd
in
scas
cmp
sbb
aam
mov
mov
mov
jnp
add
stos
arpl
in
or
icebp
adcl
pop
push
jb
and
jbe
inc
pop
mulb
pop
and
sahf
jecxz
ds
pop
jge
popa
xor
pushf
cltd
movl
lock
loop
mov
sub
push
xchg
jmp
push
xchg
xlat
cmp
ret
ja
test
lods
movsl
rep
mov
mov
orb
sbb
fcomip
nop
mov
pop
pop
and
adc
cmp
jecxz
addr16
sbb
push
dec
arpl
mov
lock
jmp
adc
sub
mov
xchg
repz
out
mov
andl
jp
lods
ja
ret
fdivp
popa
jne
loope
pop
out
fmulp
out
into
mov
in
jno
int
cmp
iret
xchg
pop
jp
jg
pop
cmpsl
adc
xchg
dec
test
cmp
xchg
test
imul
rolb
les
arpl
pop
loope
xchg
lcall
push
push
add
test
and
cmp
jnp
scas
lcall
pop
addl
lahf
mov
pop
popf
in
and
lock
mov
xchg
push
dec
mov
cmp
repz
lret
cltd
or
inc
add
icebp
mov
jl
ja
sbb
pop
inc
dec
push
mov
mov
rcrb
outsl
sti
mov
mov
fnstenv
jnp
xlat
xchg
mov
sti
fdivrs
inc
loope
pop
orb
pusha
dec
imul
jne
add
push
jle
and
fisubl
pusha
cmp
repnz
xchg
mov
cmp
sahf
dec
xchg
or
sub
pop
jne
cmpsb
punpckhbw
adc
dec
fnsave
popf
push
jnp
jp
fcompl
adc
lods
push
mov
mov
movsb
cmp
bound
dec
aad
xchg
call
jg
std
mov
test
fisttps
cmpl
jne
xchg
add
fisubs
lahf
xor
add
sbb
add
mov
mov
psubsw
push
mov
xchg
sub
mov
fistps
sbb
test
mov
shl
in
std
push
cmp
loop
or
cmpsb
ljmp
out
add
jne
popl
adc
pop
icebp
repnz
loope
xlat
mov
cmc
sahf
cs
sbb
adc
mov
popa
and
loopne
sbb
repnz
jno
jge
pop
int3
sahf
push
push
or
add
mov
cmp
push
stos
popf
adc
fildl
pop
out
bound
jae
lahf
and
push
sub
pusha
and
lret
mov
add
andb
loope
xor
xchg
pop
js
dec
pop
sub
mov
adc
test
push
mov
sub
fdivr
hlt
std
icebp
popa
or
cmp
out
pop
mov
cs
nop
cmp
gs
das
cmpl
cmpsl
pusha
or
loopne
cwtl
call
ja
dec
adc
insb
jns
adc
add
dec
adc
pop
aam
addr16
and
popa
pop
inc
hlt
fstl
ja
movsl
jge
and
arpl
pusha
jnp
leave
push
dec
inc
xchg
ljmp
cld
sbb
and
or
sbb
or
inc
bound
imul
stos
pop
sub
push
movsl
fdivs
sbb
add
test
ret
out
push
mov
xor
clc
fs
daa
sti
sub
jo
lods
add
add
add
cld
and
bound
fwait
das
jg
push
movsl
dec
adc
out
or
mov
sahf
sub
fstl
adc
icebp
lods
add
sti
add
ret
jecxz
add
fcomps
push
imul
sbb
stc
rclb
sahf
sar
out
inc
stos
add
xchg
add
sti
inc
pushf
dec
negl
clc
jmp
ljmp
xchg
shrl
lret
divb
andl
lret
outsl
fiaddl
inc
mov
pop
inc
xchg
test
mov
in
cmp
clc
mov
xchg
xorl
dec
outsl
push
aad
xor
es
ffreep
cltd
pusha
cmpsl
mov
in
int3
fdivrl
fdivr
hlt
test
cmp
call
push
shlb
jecxz
test
cmp
xchg
clc
xor
repnz
jo
popf
outsl
pop
mov
inc
inc
mov
movsb
xor
pop
mull
jo
js
pusha
roll
xchg
orb
pushf
jns
xchg
push
es
std
lcall
push
cltd
mov
mov
mov
dec
add
out
xchg
push
push
repz
test
pusha
xchg
sbb
adc
pop
aam
dec
shll
fcmovu
push
push
xor
adc
lds
bound
lods
cmp
add
xchg
lret
jbe
arpl
mov
ret
ffreep
shll
xchg
outsl
jecxz
nop
pop
fdivrl
aad
mov
add
sbb
cmc
pusha
setl
xchg
sub
sub
jl
cmpl
xorl
lock
lock
push
push
mov
insb
rorb
xor
jns
rcr
jbe
adc
ljmp
out
jnp
daa
inc
adc
out
cld
jp
and
cli
cmp
xor
sti
cli
stos
movsb
ror
dec
jno
mov
push
mov
jno
add
fistps
call
jno
loope
push
mov
test
or
pop
nop
jb
imul
mov
in
xchg
clc
and
xchg
repnz
fdivl
data16
push
inc
push
and
cmp
out
mov
add
int
or
pop
and
int
mov
loope
push
stos
adc
cmpsl
ret
pushl
mov
mov
xor
aas
fcom
inc
pop
lods
leave
arpl
pusha
pop
and
cmp
stos
sbb
stos
popa
mov
jmp
pop
jns
fsts
sbb
call
mov
pop
loope
cmpsl
dec
pop
loope
xchg
loope
xor
loop
icebp
arpl
addb
inc
cmp
shl
sbb
stos
add
lcall
cmp
or
cmp
je
and
xor
dec
or
hlt
lods
or
ljmp
sbb
jecxz
sub
add
mov
pusha
cmpb
mov
add
dec
or
mov
lret
sti
bound
push
fmul
repz
scas
sub
inc
xor
jl
or
lock
pop
xchg
and
push
jle
xchg
mov
pop
adc
adcb
in
aam
fimull
push
scas
sbb
mov
fstl
add
jmp
iret
or
cld
and
cmp
sarl
shrb
jp
mov
adc
bound
pop
sbb
xchg
movsb
jb
test
add
sub
jne
into
scas
ljmp
pop
das
movsl
insl
adc
bnd
cld
nop
and
lahf
adc
addl
cmpsl
mov
push
ret
mov
sbb
popf
sbb
inc
movsl
cmp
dec
pop
test
push
pusha
lret
outsl
xchg
adc
xor
push
mov
call
adc
gs
scas
ljmp
jp
xchg
lret
imul
inc
jno
xchg
cmp
ficomps
cmp
push
shrb
outsb
or
jo
and
mov
in
scas
mov
insl
lea
cmpsb
push
ss
stos
repz
xor
ret
lea
xor
xchg
and
mov
cli
je
fmull
data16
mov
fcmovu
sub
push
mov
fs
bound
jle
hlt
pop
jns
mov
and
jle
sub
pop
and
icebp
out
fistpll
pop
sbb
add
jnp
lods
ret
push
xchg
xchg
mov
inc
fwait
or
leave
out
bound
daa
inc
inc
sbb
xchg
jp
ficoml
xor
jb
dec
pop
pop
stos
loopne
aad
pop
dec
mov
test
jno
icebp
add
ljmp
leave
in
daa
cmp
ret
sub
inc
lods
sbb
adc
jge
sti
inc
lds
jmp
dec
and
cmp
icebp
or
push
add
sub
sti
mov
loope
aaa
xor
cmpsb
dec
cmp
jle
sbb
push
dec
jge
sahf
fstpl
jae
sbb
in
inc
jnp
jecxz
mov
ja
aaa
pushl
xchg
mov
mov
pusha
iret
jo
icebp
js
or
sahf
scas
imul
rcr
or
sar
movsb
subl
xchg
mov
pusha
push
add
xor
aaa
xor
lea
lods
repnz
hlt
das
pop
inc
outsb
cmp
in
int
push
ljmp
or
sub
mov
imul
jg
add
fwait
and
sbb
inc
push
xchg
mov
outsb
inc
stos
das
test
outsl
lcall
pop
mov
add
les
mov
out
ds
pop
cwtl
push
jae
inc
rol
push
pop
push
lret
jno
aad
pop
in
cmp
pushf
inc
aam
cltd
fst
cmp
jae
push
push
pusha
adc
popa
ret
pusha
pop
mov
ret
add
jecxz
pop
fiadds
fistpll
cltd
sub
jbe
cmp
out
cmp
arpl
or
loope
add
loop
fnstcw
mov
test
ret
aas
or
mov
add
sarb
call
pop
loop
ldmxcsr
jecxz
loope
rcll
shlb
sbb
loop
gs
pop
hlt
inc
popa
dec
stos
pop
mov
push
imul
cltd
pop
je
jb
pop
push
adc
cmp
popf
sub
inc
add
dec
or
xchg
mov
pop
js
mov
or
dec
subb
xchg
nop
outsl
lods
cltd
push
nop
push
cmp
mov
sbb
in
jns
pusha
aaa
mov
sbb
sarl
dec
loope
ret
aas
add
insl
mov
pusha
add
mov
and
xchg
loope
dec
pusha
jae
xchg
loope
shlb
dec
inc
addl
sub
cs
lcall
dec
lcall
add
out
sub
push
stos
adcb
mov
fisubrs
push
xchg
outsl
fistps
pusha
xchg
lret
mov
movsb
pop
inc
push
push
gs
fnstcw
dec
icebp
jmp
adc
jge
adcl
ss
mov
and
sbb
cmp
cmpsl
pusha
mov
cmp
or
mov
aam
lret
int3
iret
and
sub
outsl
fstl
add
clts
push
mov
add
add
inc
sbb
inc
outsl
iret
xchg
sbb
cwtl
pop
xor
ds
dec
stc
lahf
mov
jge
js
push
cmp
mov
repnz
jp
pop
stc
cmp
mov
xchg
mov
test
cmpsb
rcrb
mov
mov
add
cltd
xchg
push
push
shlb
pop
push
adc
dec
in
jns
scas
push
push
cmp
cli
jl
jp
add
inc
or
loop
xlat
add
sbb
shll
inc
cltd
insb
mov
fcoms
arpl
mov
fisttps
repnz
das
jbe
xlat
jmp
adc
pop
repz
fld
in
jo
add
sub
jmp
das
pop
lock
outsb
fistpll
aaa
xchg
pop
cli
dec
out
add
pop
inc
pusha
stc
xchg
inc
pop
imul
outsb
sub
ret
test
cld
mov
loope
test
mov
pop
sbb
adc
lods
jg
add
or
adc
rorl
jle
iret
cmp
out
sbb
xor
adc
pop
inc
lret
clc
jno
cmp
pop
and
mov
jge
mov
and
sbb
ss
or
mov
fiadds
push
lea
and
cmpsl
jmp
pop
loope
inc
mov
xchg
add
pop
xchg
sbb
jae
icebp
sub
dec
ret
pop
mov
push
clc
subl
scas
insl
gs
pop
scas
popa
push
push
jno
fstpl
movsb
bound
sbb
jo
int3
aas
dec
xor
adc
xchg
dec
bnd
pusha
sub
mov
jbe
pmulhw
pop
and
dec
adc
pop
lcall
mov
dec
mov
xor
loopne
pop
xchg
push
or
dec
sub
bound
adc
cmp
ret
clc
fdivs
mov
js
cs
andb
imul
pop
fiadds
loope
pop
fmuls
adc
imulb
adc
pusha
outsl
jle
lcall
loopne
in
test
adc
aas
shl
jbe
pop
outsl
mov
mov
rcrb
mov
jecxz
cs
lods
hlt
shll
rcll
or
push
fstpl
and
jle
add
cmp
push
mov
add
inc
adc
repnz
out
jnp
call
js
movsl
mov
out
pusha
cmc
notl
adc
pop
movsl
xor
bound
addr16
ficomps
sbb
hlt
mov
bound
fiaddl
mov
or
std
ss
xchg
mov
mov
mov
jecxz
mov
mov
cmp
and
js
cmp
xlat
dec
gs
adc
test
pusha
test
lahf
lods
mov
loope
jecxz
xchg
outsl
popa
add
aad
bound
pop
jge
pusha
out
arpl
jmp
push
pop
jo
cmp
mov
mov
or
xor
les
push
outsl
popf
push
xchg
dec
sub
dec
xchg
nop
pop
xor
adcl
jnp
incl
mov
pop
scas
subl
and
insl
sahf
pop
loopne
dec
mov
loopne
jo
imul
imul
test
adc
call
sub
xor
fs
mov
sbb
and
dec
mov
adc
xorb
dec
out
aas
xchg
xor
mov
lods
addb
pop
pushf
jnp
dec
inc
inc
jb
and
jp
mov
sbb
stos
and
repz
std
mov
loopne
pop
mov
gs
pop
cmp
mov
pop
jmp
clc
mov
lods
mov
cld
repz
lock
push
adcl
pop
gs
or
loopne
pusha
or
push
xchg
call
lods
bound
and
push
loope
or
jnp
movsl
push
pop
std
je
divb
mov
cld
sbb
fs
and
mov
mov
lea
fists
loope
cli
sbb
sub
out
xchg
mov
icebp
mov
pop
int3
pusha
xchg
xorb
sbb
leave
cmc
inc
and
lret
cmp
fimuls
mov
cltd
cmp
lods
daa
or
sbb
push
loopne
push
xchg
outsb
frstor
inc
movsb
sahf
xchg
fdivrp
into
jge
add
and
sarb
cmpsl
mov
rolb
push
mov
pop
cmp
movb
ret
hlt
lcall
fsubrs
ror
fiadds
mov
mov
mov
shrl
jecxz
loop
jp
stc
les
cmc
into
data16
lods
in
in
repz
or
mov
pusha
push
dec
icebp
pop
jo
pop
mov
xlat
mov
cmpsb
test
imul
xchg
loopne
fisttpll
sub
adc
inc
imul
sbb
gs
bound
or
loop
pop
jecxz
pop
fisubs
xor
nop
call
or
mov
or
or
jp
cmpsl
fcoml
aaa
add
pop
out
movsl
ret
repz
or
hlt
pusha
mov
push
lret
mov
inc
sbb
ljmp
out
pop
push
pop
rcll
add
repnz
xchg
sub
lcall
mov
mov
xlat
das
pusha
packuswb
mov
push
and
xor
mov
mov
sbb
loope
in
sti
jg
push
clc
and
sahf
notl
bound
jmp
aaa
les
push
sar
pusha
jmp
cmp
lods
cwtl
shrb
jmp
aam
stos
xor
cmp
or
fs
sub
xlat
adc
add
pop
addl
js
mov
bound
out
sub
xchg
or
mov
inc
lea
rcrl
or
and
in
jg
dec
adc
stos
sbb
mov
mov
fstl
loop
clc
fsubr
das
mov
stc
push
icebp
mov
jmp
inc
ret
xchg
adc
jae
pushf
rol
pop
cmp
test
dec
mov
pusha
fdivrs
dec
shrl
movsl
xor
mov
loope
or
into
add
int3
or
std
lds
imul
sbb
lea
jo
jl
das
cli
call
pop
roll
fldl
push
pusha
or
nop
push
adc
cmc
cmp
xchg
adc
xlat
xchg
or
iret
xor
lahf
addb
pop
out
int3
jne
lcall
mov
sub
call
in
push
jp
scas
add
sbb
addr16
xchg
push
test
inc
xchg
cmpsb
fsubs
fidivl
in
imul
xchg
pop
xlat
out
dec
outsl
sub
sub
es
inc
push
mov
das
cmp
jo
xchg
push
push
adc
jmp
sbb
fiaddl
cltd
adc
lods
adc
xchg
gs
mov
push
test
popf
cltd
repnz
rol
sbb
ret
not
fucomp
repz
iret
adc
fsubl
mov
pop
jecxz
ljmp
in
outsl
loop,pn
pop
mov
dec
rcll
lods
jg
xchg
cltd
sbb
mov
addr16
mov
mov
sbb
dec
call
bnd
push
decb
push
push
cmp
fcomip
pop
lds
jge
cmp
fcomps
push
fimull
push
rorl
imulb
aaa
mov
jns
aam
ds
subb
loop
and
movsl
mov
fisttps
ret
dec
pop
sub
pop
cs
jg
and
ss
adc
fidivs
fmull
imul
push
lcall
cmp
xchg
pop
push
xchg
mov
mov
in
inc
dec
out
popa
clc
ja
jp
idivb
pop
shlb
lret
out
sub
jnp
sub
push
dec
insl
sub
pusha
jmp
xchg
jb
add
xorl
test
jo
loope
movsb
and
cwtl
and
add
inc
mov
sub
ficomps
daa
aas
push
mov
lods
jns
jno
or
dec
enter
shlb
decb
adc
aam
lods
dec
cmp
mov
dec
bound
es
and
aam
lahf
enter
pusha
clc
fistps
or
push
xchg
jp
ret
scas
add
jae
lods
outsb
arpl
cwtl
inc
mov
sbb
subb
aas
daa
fdivrs
stos
mov
in
and
out
test
mov
jmp
jecxz
add
pop
and
sub
push
pop
push
push
enter
fimull
test
inc
dec
mov
dec
stos
aad
sbb
xor
jmp
lods
mov
int
sub
xchg
dec
mov
stos
in
out
jge
stos
push
mov
std
pushf
jnp
mov
loop
xchg
jle
pusha
jge
sbb
fisttpll
sub
xchg
out
outsb
pop
jne
stc
pusha
dec
dec
jns
nop
fwait
add
and
push
repnz
cmp
fsubrl
sbb
pop
dec
sub
movb
bound
pop
sub
lock
mov
inc
mov
daa
pop
sti
fs
in
cli
cmpxchg
mov
sub
aaa
insb
and
cmp
popf
or
xor
sbb
iret
mov
jecxz
cmp
mov
inc
xlat
rcrl
ljmp
aas
cmpsl
xor
inc
lock
fs
pusha
jmp
and
rcrb
out
adc
sbb
outsl
arpl
pop
mov
pusha
sbb
mov
add
pusha
mov
stos
inc
and
sub
adc
outsl
xchg
add
pop
push
mov
pop
stos
jmp
sub
add
dec
inc
xchg
xor
push
or
hlt
mov
out
mov
inc
pop
int3
mov
or
xlat
jecxz
mov
sbb
cli
and
fsts
out
test
aas
out
lea
push
mov
push
and
icebp
roll
inc
xor
mov
inc
in
rcl
xor
sub
adc
xor
js
sahf
iretw
ret
movsb
mov
cld
adc
push
popa
mov
test
mov
rcrl
mov
mov
jmp
sbb
push
loope
cmpsb
mov
pop
mov
xchg
ljmp
push
cmp
lods
xor
adc
jg
movsb
repz
cmpsb
push
loopne
rorl
adc
je
sbb
mov
push
sbb
adc
dec
jecxz
enter
jg
xchg
dec
fnsave
sub
and
add
add
xchg
mov
ret
mov
sbb
mov
pop
insl
xchg
cmpl
fsts
pop
xchg
dec
int
pop
add
mov
rorl
pusha
pop
into
adc
inc
mov
ret
fadds
loopne
fwait
sub
mov
cli
and
jae
out
xchg
jecxz
jns
jmp
jle
xchg
pusha
shrb
cmp
rcll
add
and
mov
test
pusha
adc
imul
std
xlat
xchg
pop
lods
cltd
and
out
xor
lods
in
sbb
mov
lea
sti
int
not
bnd
jmp
push
pop
std
stc
push
jnp
and
push
test
push
or
push
add
jmp
push
fs
pop
filds
jno
aam
faddl
std
cmpsl
add
push
jle
mov
or
inc
test
adc
fisttps
xchg
outsl
cmpl
sub
cmp
push
lods
jo
dec
or
xor
pushl
pop
push
pop
cmpsb
in
dec
cmp
add
jecxz
inc
cmpsb
pop
or
mov
mov
les
decb
es
inc
mov
sub
mov
push
ja
xchg
push
push
inc
in
rcr
bound
addl
inc
stc
sub
es
add
lods
mov
scas
fs
inc
in
push
adc
adc
andl
bound
mov
sbb
xchg
and
gs
cmc
cwtl
ret
sub
cmp
dec
push
jecxz
out
jl
add
push
iret
cli
mov
arpl
mov
fstl
popa
sub
pop
dec
cmp
out
adcb
xchg
adc
mov
cmp
dec
mov
addl
sub
lret
cmpsb
xor
sbb
inc
pusha
int
add
test
pop
addr16
add
loop
jae
mov
stc
xchg
xchg
adc
lock
aam
nop
or
cmc
push
and
test
bound
sub
ret
pop
cmp
in
jmp
mov
xlat
and
xor
scas
mov
xchg
lds
enter
sbb
jnp
addr16
jle
mov
mov
cs
in
sbb
push
push
adc
ret
mov
sub
repnz
push
cld
mov
das
orb
movsl
xor
mov
lahf
stc
pop
push
js
push
adc
out
inc
xlat
pop
jae
or
out
sti
mov
jbe
adc
mov
in
cld
xchg
adc
adc
jno
fsts
mov
and
mov
cs
jb
mov
stos
outsl
inc
inc
sbb
pushf
jnp
push
add
cs
iret
mov
inc
js
or
arpl
iret
push
movsb
mov
cmpsl
push
or
sub
rorb
fistl
movsb
fcomps
pop
mov
pusha
es
xor
inc
push
jle
and
into
outsl
test
inc
cmc
pop
lahf
js
cmp
jecxz
testb
jb
and
mov
aam
mov
enter
bound
ret
dec
int
push
das
mov
mov
rcrb
cli
imul
shll
outsl
rclb
xor
icebp
and
xchg
mov
or
cld
mov
dec
mov
mov
in
stc
pop
test
lcall
mov
movsl
or
lods
mov
xor
mov
out
xor
jmp
scas
push
in
aad
inc
lahf
je
inc
inc
cmp
mov
dec
mov
in
jmp
push
bound
dec
xchg
inc
aad
test
cmp
sti
pop
out
pop
and
adc
icebp
into
sub
mov
stc
push
or
les
sbb
pusha
inc
outsl
jne
addb
pop
stos
mov
cmp
frstor
in
pop
fwait
jae
leave
xchg
xor
pop
bound
jle
pop
fstps
popa
push
sub
mov
or
sub
inc
mov
aam
rolb
fisttpll
xor
stos
fists
mov
repz
xor
mov
or
imul
adc
rorl
adc
and
cmc
sbb
xor
das
cltd
adc
fadd
xchg
and
addl
js
subl
dec
outsl
dec
add
sahf
ret
sbb
sti
icebp
add
stos
mov
jp
inc
in
push
and
dec
out
int
add
ss
jle
sbb
pop
or
frstor
jl
rcrb
lea
or
rolb
fistpll
jae
std
iret
cmpsb
add
push
insb
cltd
pop
sbbb
jg
das
pop
pop
push
orb
jmp
or
cli
movsl
in
pop
int3
inc
push
jae
add
arpl
or
sbb
outsl
pop
test
rep
test
add
jecxz
hlt
addr16
mov
es
sub
roll
andb
adcb
push
das
xchg
push
push
pop
pop
je
iret
pusha
inc
fcmovbe
mov
mov
incb
mov
rcrb
aad
mov
mov
and
frstor
les
inc
push
xchg
push
test
in
push
mov
test
lds
sub
fimuls
subl
lock
rorb
ret
mov
cli
shll
stos
aam
ret
nop
mov
pop
es
and
sub
pop
rcrl
int
aad
pop
and
mov
gs
fbld
aad
xor
xchg
pop
test
hlt
adc
mov
std
pop
pop
in
stc
bnd
pop
adc
std
pop
roll
add
into
push
fisubl
ffree
pop
mov
decl
xchg
mov
xchg
mov
stos
pusha
xor
bound
inc
jp
xchg
imul
movsb
outsl
add
pushf
jl
aam
mov
push
dec
jne
push
pop
pop
cmp
aad
cld
sbb
outsl
cmpb
clc
dec
movsl
xlat
ret
xorb
adc
movsb
js
cld
add
test
lret
mov
mov
jnp
push
data16
pop
jge
loope
jmp
add
ret
les
jmp
addl
fsubrs
stc
sub
lret
fcoml
adc
stos
fadds
dec
xor
pop
int
ret
jne
pop
adc
popa
pusha
cld
lods
je
jb
out
lock
push
dec
jge
and
jmp
idivl
or
cs
cli
jbe
loop
push
std
lea
add
mov
stos
pop
mov
sbb
push
orb
xlat
xor
jecxz
mov
pushf
xor
and
subb
aad
outsl
stos
xor
jb
outsb
push
xor
adc
or
pop
arpl
ret
ret
mov
scas
jecxz
xchg
mov
inc
sub
or
mov
movsb
insb
jnp
popl
in
push
inc
inc
int3
fchs
ja
lock
pop
test
bound
stos
pushf
push
stc
fcmovnb
aam
mov
int
addb
pop
mov
mov
dec
xchg
cltd
imul
cmp
ret
pop
sbb
addb
iret
vcmppd
int3
andb
stc
add
in
inc
fadds
and
sub
jae
push
movsb
leave
lcall
xor
pop
inc
lret
add
pop
sbb
xor
fldl
clc
lcall
mov
repnz
hlt
shrl
arpl
and
lods
lcall
mov
fnstcw
loope
hlt
dec
mov
cmc
in
ljmp
xchg
mov
push
fndisi(8087
cmc
mov
inc
ja
dec
or
pop
out
add
lahf
sahf
mov
mov
mov
dec
push
out
loop
or
mov
adc
mov
cwtl
mov
fisttpl
repnz
ds
and
adcl
or
jmp
lods
cmp
imul
out
pop
test
cli
test
arpl
loope
mov
outsl
push
movsl
js
icebp
shrb
or
es
dec
pop
je
push
repz
mov
add
pop
push
or
clc
xor
stos
mov
lock
add
add
jo
pusha
jae
and
mov
icebp
fdiv
mov
jl
repz
and
inc
mov
aam
cmpsb
push
fnstsw
mov
call
inc
insl
out
aam
xchg
fnstsw
mov
inc
sti
adc
xchg
subb
xlat
sub
ja
shl
mov
mov
sub
in
pop
cmpsb
fstl
cltd
xchg
stc
xor
fistps
jmp
hlt
or
dec
dec
lcall
lea
sti
or
mov
adc
cmc
jle
push
loopne
je
aaa
push
out
dec
repz
pusha
jecxz
inc
dec
outsb
lock
jb
adc
mov
cmp
mov
outsl
pshufw
cli
nop
int3
mov
pop
aas
pop
rol
cmp
cmc
in
repz
cmp
dec
lret
pop
inc
mov
jmp
mov
cmp
adc
out
sub
add
movsl
sub
cmp
loope
xchg
add
scas
pop
lods
mov
and
sahf
pop
push
fwait
mov
mov
pop
xor
push
cli
int3
adcl
xchg
push
jbe
pop
cmp
popa
mov
sbb
jp
or
pinsrw
lods
outsb
fcmovnb
mov
nop
pop
or
stc
std
sarl
orl
sbb
mov
mov
icebp
jecxz
sbb
mov
ret
daa
or
mov
fnsave
jns
cld
aad
or
bnd
dec
lods
xchg
sbb
xor
jbe
test
rclb
mov
fwait
mov
xchg
popl
add
add
adc
sahf
test
out
sbbb
andb
push
mov
insb
and
jno
push
std
rcrl
out
lock
addr16
sub
xchg
mov
test
inc
adc
insl
sub
dec
popa
or
bound
sti
addr16
mov
pop
icebp
xor
js
mov
inc
rorl
mov
and
arpl
or
loopne
aad
mov
mov
mov
mov
lods
xor
mov
push
jecxz
ret
repz
scas
stos
push
push
push
ret
sub
jp
dec
leave
pop
add
in
jns
daa
movsl
sbb
call
jecxz
adc
push
jae
inc
mov
popa
sub
xor
iret
jmp
push
int
outsb
fs
jmp
or
lahf
stos
pusha
pop
xor
adc
sbb
sub
sbb
inc
roll
adc
loop
shl
xlat
movsb
int
lret
popa
imul
lahf
lahf
cmp
ret
out
mov
and
adc
adc
mov
fisttpll
rclb
mov
mov
xchg
jbe
ficompl
adc
outsl
cmpb
loope
sbb
jle
xchg
pop
lock
add
xor
leave
push
pop
adc
lods
xchg
sub
mov
stos
loope
test
mov
sub
mov
clc
cs
adc
les
pop
outsl
pop
pusha
out
sub
std
sub
fstl
cltd
lea
in
dec
lods
out
cmp
dec
fldt
adc
std
lret
movsl
bswap
icebp
sub
pusha
jle
dec
jnp
jecxz
dec
jns
leave
mov
bnd
dec
jbe
push
cmpb
test
mov
rcr
add
loope
cld
jg
mov
andl
shl
je
lea
xchg
insl
test
in
scas
pusha
out
pop
lret
les
xlat
or
sbb
pop
icebp
shll
xchg
enter
or
dec
push
sarl
daa
cmpsl
orb
pusha
adc
fcmovnb
inc
enter
fs
mov
call
stos
out
xchg
in
out
inc
movsl
mov
sahf
ret
mov
add
fcoml
mov
nop
movsl
insl
fisubrs
pushf
inc
pop
mov
imul
pop
test
add
mov
jge
add
sub
and
lods
xor
add
rcl
into
mov
lret
cld
clc
mov
sbb
loope
mov
outsb
cs
shll
imul
stc
xchg
iret
dec
mov
mov
in
stc
addr16
mov
mov
pop
pop
into
clc
repnz
je
xor
adc
out
cmpsb
rcll
or
or
jo
fcmovnb
js
mov
add
lret
or
xchg
push
movb
or
xrelease
xchg
std
mov
jne
stc
cmp
pop
and
out
add
lods
mov
push
pop
adc
enter
xchg
arpl
les
jecxz
cmp
sbbb
gs
ficoml
xor
popf
dec
inc
addl
lret
fistl
dec
mov
bound
es
push
pop
add
and
sbb
sti
shr
push
pop
mov
jg
les
mov
jle
aad
add
addr16
pop
outsl
cmp
lcall
std
stos
pop
sub
jb
cmp
push
cs
add
dec
xor
sti
add
popw
xchg
call
fisttps
fsubl
cli
cmp
lcall
in
leave
mov
or
cmp
stos
mov
leave
adcl
aaa
mov
add
or
cmp
inc
mov
sar
in
mulb
test
xchg
stc
adc
icebp
repz
add
adc
dec
test
add
or
pop
imul
call
movsb
outsl
pop
imul
mov
adc
push
pusha
cmpsl
aaa
jo
pop
inc
add
cmp
ja
jae
push
sub
cmp
clc
pop
fmuls
mov
and
pop
popf
aam
addr16
adc
bound
in
push
xor
repz
add
popa
xor
repz
fldl
sbb
adc
inc
xor
and
xor
sbb
in
bound
gs
loopew
push
mov
shl
into
cli
test
sti
sbbb
daa
adc
popa
out
or
cmp
jnp
push
push
daa
xchg
and
test
mov
fs
inc
xchg
stos
enter
out
xchg
call
movsl
fucom
sti
pop
out
cld
in
sub
xor
call
outsl
ret
jle
mov
cld
test
pop
outsl
arpl
sub
add
lods
lcall
or
imul
imul
stc
and
mov
mov
mov
or
out
mov
iret
pop
pop
xchg
cmp
repz
xor
icebp
jecxz
int3
adc
movsl
mov
test
adc
jecxz
call
or
xchg
test
popa
ss
push
jl
mov
xchg
mov
out
scas
sbbb
mov
sarb
push
pop
sbb
sbb
scas
mov
inc
inc
mov
enter
ds
repnz
jecxz
adc
rclb
pop
lcall
jns
outsl
int3
or
or
in
shrb
loop
and
call
pop
jg
repz
movsb
mov
pop
fbstp
scas
add
js
xchg
sub
xchg
adc
stos
pusha
sti
in
pusha
or
push
jae
loope
mov
pusha
mov
mov
push
pop
stos
les
xchg
sbb
mov
sahf
ret
pop
push
mov
ds
dec
push
bts
outsl
andl
sub
pusha
aaa
pop
inc
bnd
mov
jb
arpl
mov
lcall
pop
aas
sbb
add
and
or
push
pop
fwait
pop
hlt
in
std
rcl
lret
mov
fnstenv
arpl
pop
cmpsb
inc
sbb
cs
mov
dec
jne
sbb
dec
repnz
sub
test
mov
and
pop
mov
and
dec
lock
adcb
mov
imul
xor
ss
outsb
xchg
jmp
xchg
out
mov
sbb
xor
imul
cmp
xchg
rol
cwtl
mov
jle
cs
and
push
xlat
jbe
adc
scas
pop
add
jmp
lcall
pop
mov
ja
pop
dec
mov
mov
dec
dec
xchg
sub
in
sub
xor
insb
dec
aad
adc
xlat
mov
pop
mov
pop
les
mov
popf
mov
xchg
popa
fwait
xor
int
shlb
xchg
push
mov
test
fcmovbe
adc
xchg
inc
push
fcmovnb
mov
push
ds
icebp
or
outsl
les
xor
jle
adc
push
add
fmuls
pop
movsl
xor
clc
call
mov
sub
stc
mov
sbb
hlt
es
loope
fs
jecxz
jecxz
bound
mov
out
mov
jns
sti
roll
xlat
xchg
jae
sub
mov
loope
xchg
sub
mov
mov
sarl
pusha
orb
xchg
pop
outsl
sub
jp
push
daa
imul
movsl
xlat
pusha
std
xchg
xchg
sbbb
shl
push
test
mov
int
cltd
loop
aas
aad
sbb
addr16
xchg
dec
pop
aam
push
sbb
mov
outsl
add
xchg
lods
fsts
outsb
jo
ror
ljmp
or
shrl
add
mov
mov
pop
bound
mov
fisubrl
das
xchg
xor
or
mov
mov
test
sbb
cli
xchg
push
inc
cmp
call
jae
add
dec
mov
or
leave
cmp
jae
arpl
out
shll
mov
addr16
cmp
leave
les
fbld
xchg
pop
mov
inc
pusha
lds
mov
insb
cmpsl
lcall
push
fildl
fistps
loope
shrb
cmp
push
mov
or
adc
cmp
mov
or
jae
punpckhwd
insl
addl
sti
bound
mov
pop
lret
mov
or
lcall
cmp
push
mov
and
lcall
jo
and
test
movsl
pop
push
pop
sbb
iret
pusha
adc
dec
dec
into
in
stos
and
pop
adcl
sarl
dec
stos
and
cmpsb
pusha
push
pop
cmc
aam
xor
mov
lods
and
int
pop
or
fxam
movsb
adc
lea
cld
or
push
adc
cltd
hlt
mov
repnz
cmp
shlb
loopne
mov
pop
ljmp
orb
or
sbb
idiv
lods
cmp
repz
mov
out
fmuls
ret
jecxz
push
push
gs
pop
imul
aad
cmp
mov
enter
or
mov
sbb
or
jo
mov
sub
inc
iret
mov
add
or
test
ljmp
push
inc
loopne
fsubr
or
mov
add
cmpsl
xchg
addb
and
mov
adc
imul
pusha
jg
sarb
fstl
xchg
stc
cmc
int3
or
cmpsl
test
jl
loopne
lret
repnz
cltd
movsb
cmp
or
jno
xchg
cmpsb
mov
xchg
inc
mov
mov
dec
dec
mov
clc
lret
mov
jle
sub
bound
pop
xor
sub
test
mov
dec
lds
into
mov
std
mov
mov
icebp
mov
cmpsl
lock
or
mov
dec
iret
sub
movsb
jns
call
aam
frstor
fsubrs
test
stc
pusha
xor
jmp
cmp
xor
jmp
decb
inc
sbb
push
fiadds
xchg
ja
iret
add
fbld
mov
pop
sbb
lcall
inc
add
ficomps
addl
lods
insl
pusha
ret
push
outsl
dec
pop
fldl
pop
sarb
decl
ret
inc
xchg
and
add
add
orb
aad
push
sbb
or
push
sbb
subl
jno
mov
lea
or
xchg
xor
icebp
and
jae
nop
add
xchg
loope
adc
jl
fsub
ret
and
in
inc
xor
stc
or
mov
xlat
gs
rorb
cs
sub
pop
adc
sub
push
jmp
scas
lods
jne
adc
jl
imul
adc
ss
lcall
lcall
loope
pusha
jno
inc
xlat
in
scas
adc
jae
and
bound
sbb
outsl
jae
push
adc
cmp
ds
jbe
mov
dec
call
pop
les
xchg
push
mov
dec
rcll
mov
jae
loope
pop
cmp
jb
mov
mov
push
xchg
or
dec
sbb
cmpsl
mov
dec
mov
out
jbe
sbb
mov
fadd
mov
cmc
xchg
cmpsl
pusha
movsb
fchs
pop
pop
inc
add
or
cmp
mov
jmp
fisubl
cli
xchg
add
mull
pop
mov
xor
adc
lcall
adc
decl
stos
out
or
addr16
push
push
mov
fbstp
imul
pusha
nop
or
cmp
inc
cli
roll
sub
jge
sar
aad
push
repz
or
cmp
adc
cli
mov
pusha
pushaw
loopne
sarb
jp
mov
jecxz
cmpsb
mov
loopne
mov
rcrb
test
inc
xchg
pop
add
or
shll
dec
rorl
jnp
sbb
imul
sbb
iret
adcb
pop
loopne
pop
scas
repnz
inc
and
sar
rorl
add
adc
mov
mov
jbe
pop
fwait
mov
cwtl
mov
clc
sarl
fnstcw
mov
shl
mov
andb
mov
inc
fwait
stos
cld
add
pop
xchg
insl
sub
pusha
push
cmp
sbb
add
test
shl
lock
repnz
jns
imul
add
test
fbld
mov
cli
adc
fnstcw
lea
adc
inc
inc
adc
outsl
mov
bound
lea
cmpsl
mov
jmp
hlt
sub
jae
xchg
lea
add
jns
shrb
inc
mull
dec
aam
imul
insb
movsl
sbb
mov
sbb
ret
inc
repz
iret
push
int
hlt
adc
or
movd
or
pusha
cmpb
scas
pop
rcll
and
in
and
fstps
mov
adc
mov
hlt
pop
arpl
bound
lds
and
and
mov
pop
nop
iret
or
outsb
fdivrs
mov
ljmp
add
flds
fistl
xlat
push
lods
mov
adc
ret
add
mov
xchg
push
paddd
mov
hlt
pop
fisttpl
jle
or
int
sbb
and
inc
in
or
je
mov
mov
std
loopne
imul
sub
jne
sarl
adc
shl
lods
cli
loop
ret
mov
push
std
pop
pusha
adc
clc
jne
out
leave
push
cmp
popa
add
mov
sub
inc
or
pushf
xchg
mov
fiadds
add
and
scas
push
aas
cmpsl
mov
cltd
shrb
pop
add
gs
sbb
cmp
stc
pop
cmp
xor
jno
dec
cmp
mov
xor
arpl
jae
jmp
cmp
cmp
pop
fldl
js
es
mov
pop
ljmp
orl
stos
bound
sar
cltd
pusha
icebp
or
cmp
in
cmp
sti
rorl
sub
insl
mov
std
push
adc
pslld
sbb
cmp
xchg
mov
pusha
mov
and
push
mov
pop
std
loop
into
fstl
cld
stc
pop
sub
lods
push
push
cmpl
aam
hlt
mov
mov
xlat
out
mov
add
outsl
xorl
jl
cmc
pop
or
rorl
ficompl
push
decb
dec
pusha
iret
sbb
push
push
jmp
cmpsl
or
outsl
xchg
mov
sti
mov
sub
sub
add
bound
lods
int
push
dec
or
xor
pusha
fucomi
fildll
arpl
inc
pop
aad
jle
pop
aas
int
je
mov
aam
test
aad
in
inc
enter
andps
cld
lock
mov
sub
push
movsl
stos
mov
pop
jo
jno
add
and
mov
sub
lock
cmp
inc
mov
xor
das
insl
je
icebp
xchg
pop
push
ja
xor
and
inc
jle
xchg
mov
pop
add
sti
sub
js
pop
mov
xorl
outsl
pusha
test
and
jmp
dec
dec
cwtl
ret
ret
mov
pop
and
in
idivb
cmp
sahf
bound
inc
pop
ljmp
test
cmp
add
xchg
adc
nop
adc
push
mov
mov
pusha
inc
bound
cmp
insl
and
data16
jo
lahf
dec
cmp
insl
mov
push
inc
dec
rorb
and
add
bound
jle
pusha
sbb
cmp
mov
mov
dec
and
or
std
xor
or
pop
add
aad
inc
or
lcall
clc
push
fisubrl
jecxz
in
nop
gs
sbb
inc
mov
xchg
or
sub
cmpsb
ss
imul
mov
rcr
std
ret
mov
pop
das
cli
clc
sub
dec
mov
jle
push
or
repz
or
sbb
push
mov
jno
flds
ffreep
sub
mov
sbb
clc
add
fldenv
fcoml
ror
fdivrl
xchg
xor
mov
mov
or
loopne
mov
xchg
mov
mov
js
lock
push
and
inc
sbb
adc
mov
jo
or
dec
fcmove
mov
add
pop
sbb
les
dec
cmp
lahf
sbb
cmp
inc
stos
jle
add
inc
xchg
adc
or
sbb
hlt
xor
jns
test
imul
bound
and
mov
adcl
add
mulb
pusha
inc
cli
xchg
ds
std
fmull
daa
adc
loope
cmpsl
call
mov
sti
adc
rcrb
fisttpll
mov
sub
insl
pop
dec
sub
imul
pusha
filds
addl
bound
xor
lcall
dec
or
jmp
pop
test
jmp
pop
hlt
fildl
int
outsb
out
popa
xchg
add
or
jnp
jo
repz
cvtpi2ps
nop
filds
mov
add
out
fisttpl
adc
pop
data16
sub
mov
or
ret
scas
decb
xor
in
push
aad
nop
xchg
js
stos
add
lods
xchg
xchg
repz
or
mov
and
cltd
nop
mov
les
or
test
cmpsl
stos
mov
jl
jle
or
sarl
or
test
stos
add
arpl
jmp
mov
shlb
jp
push
cli
rorl
sar
fldt
mov
ret
cmpb
cmc
mov
cmpsb
and
cmp
es
lods
stos
test
in
pop
mov
inc
mov
out
cmp
push
insb
movsl
add
test
fcoml
xchg
or
pushaw
cmp
pop
lcall
hlt
jl
pop
es
jmp
pop
xchg
sti
adc
mov
test
subl
bound
sub
xchg
jno
orb
fucom
mov
fdivr
xchg
pop
popf
sbb
jg
xchg
int
shr
stc
mov
jge
sbb
push
mov
jns
mov
iret
outsb
aaa
pusha
sti
xchg
out
out
and
or
addr16
xchg
loop
stos
and
push
mov
pop
rorl
jne
roll
outsl
xchg
ds
mov
dec
pop
xchg
mov
gs
jge
sbb
or
movsl
loop
sbb
out
xchg
or
and
scas
xlat
jmp
sarb
xorb
subl
sbb
popa
or
add
mov
pop
int
pusha
and
sbb
mov
and
movsb
mov
aam
pop
mov
fcoml
pushf
fildll
imul
pop
rclb
dec
scas
cmp
cwtl
push
stos
add
out
cmpsb
pop
sbbl
in
mov
mov
stos
xchg
sbb
fistps
mov
pushf
xchg
ja
out
subl
push
adc
cld
bound
out
push
insb
pop
push
dec
xchg
dec
outsl
rorl
pop
cwtl
mov
popa
leave
inc
std
test
sbb
xchg
sub
cmpsb
repnz
popl
nop
cwtl
cmpsb
sub
into
addr16
mov
lods
mov
add
mov
rcr
mov
testl
ficoms
jl
mov
movsl
add
outsb
mov
gs
ret
rclb
or
test
jb
jnp
adc
jb
roll
movsb
jecxz
into
mov
or
cmp
xchg
outsl
outsl
mov
stos
stos
mov
xchg
inc
aas
jp
cmp
mov
push
jns
push
loopne
xor
arpl
xchg
sbb
sbb
leave
push
lods
movzwl
stos
shll
aam
inc
inc
and
pop
xchg
xchg
lea
adc
sbb
in
or
mov
decb
pop
add
ss
add
sub
lcall
mov
jmp
loop
cmpsl
dec
lods
mov
enter
mov
pop
pusha
inc
aam
clc
and
bound
pop
loopne
add
jb
mov
xlat
lret
push
mov
push
cmp
cwtl
pusha
mov
jo
push
push
aam
stos
pusha
jg
jno
test
push
inc
dec
movsl
xchg
je
scas
shl
loop
lock
lods
mov
lcall
mov
xchg
and
dec
cld
clc
stos
pop
lret
mov
or
loopne
inc
int3
popf
push
mov
fisttps
lahf
stos
and
dec
and
pop
cmp
test
sbb
add
pop
cli
and
inc
sbb
les
repnz
fbstp
iret
movsl
insb
lea
mov
aas
outsb
jno
fcompl
add
sarl
adc
loope
ss
loopne
xchg
pusha
arpl
dec
dec
stos
add
in
inc
push
dec
outsl
dec
inc
in
pop
cmc
mov
mov
hlt
dec
xchg
mov
adc
cmp
ds
or
jg
call
hlt
in
cmp
in
adc
loopne
dec
xchg
lock
jecxz
mov
mov
xor
and
pusha
stos
jnp
or
cmp
adc
pop
add
jnp
in
stc
mov
fldl
add
js
and
cmpsl
sbb
repz
and
mov
add
or
and
xor
xor
loopew
pop
lea
adc
aad
fsubs
outsb
fwait
dec
xor
shll
add
sbb
push
scas
xchg
lret
mov
daa
dec
lods
std
imul
sub
jg
mov
jae
ss
mov
fs
adc
aas
xor
pop
out
outsl
cmpsb
pushf
mov
jg
dec
nop
lahf
jmp
daa
jl
xchg
mov
arpl
jbe
xchg
mov
push
dec
fmuls
icebp
shl
push
lods
sub
xlat
stos
fisttpll
adc
sub
add
and
adc
addr16
and
and
cmc
enter
pusha
lea
lods
lea
lods
out
push
cwtl
xchg
and
pop
pusha
in
ret
addr16
pusha
repnz
xchg
and
mov
leavew
pop
push
mov
lock
repnz
mov
push
jle
movsb
mov
jl
pop
dec
mov
and
fimuls
aam
inc
add
mov
and
xor
in
arpl
and
aam
roll
out
sbb
loopne
fstp
out
sbb
and
out
rorb
out
sub
daa
cmp
inc
or
inc
inc
or
pop
sub
adc
xchg
sbb
sbb
cld
mov
mov
loopne
jb
pusha
mov
mov
mov
cmpsb
mov
sbb
sub
push
mov
in
add
movsb
fwait
clc
add
or
xorb
lea
cmp
xor
adc
sbb
xchg
xchg
mov
movsl
xchg
gs
inc
pop
inc
cmpb
adc
push
xchg
jae
insb
mov
fisubrl
mov
inc
movb
call
mov
mov
daa
lods
xchg
in
cmp
and
cmp
or
movsb
jbe
lret
out
cwtl
pop
dec
jl
jg
push
cmp
repz
enter
ss
lret
adc
je
pop
fildll
dec
add
add
inc
push
lock
shrb
xor
mov
xor
push
outsl
cmp
stos
xlat
loope
adc
lock
xchg
and
cwtl
ss
inc
test
push
mov
mov
out
inc
adc
mov
pop
imul
pushl
add
dec
scas
add
cmp
mov
rcrl
jmp
pop
xlat
mov
xor
es
add
sbb
mov
sbb
sbb
stc
push
mov
out
add
bound
dec
rolb
cmp
shll
fucomi
fcompl
inc
sahf
mov
sbbl
mov
clc
and
cmp
rcrl
sub
addr16
sbb
push
fstpl
lcall
sbb
mov
xchg
fisttpll
jg
mov
and
dec
fstpl
loopne
or
push
pop
jno
push
or
jg
xchg
push
sbbl
scas
sti
xchg
and
adc
xchg
mov
sbb
adc
fstl
cltd
push
movsl
mov
ja
push
loop
insl
in
pusha
roll
fistl
cmp
fbstp
out
adc
lock
call
outsl
mov
out
xlat
cmp
inc
lods
push
push
std
shlb
rorl
mov
mov
ljmp
jp
lods
shrb
mov
daa
out
insl
cmc
push
cmpsb
jp
cmpsb
push
aam
xchg
scas
push
dec
mov
imul
aad
repnz
addr16
pop
inc
test
loopne
faddl
pop
sbb
pop
jg
out
mov
hlt
jno
call
and
mov
out
jl
testl
shll
int
sub
prefetchwt1
cli
sub
mov
add
aam
jge
int3
xor
xchg
xchg
push
shll
mov
add
jae
ret
lods
push
cltd
sub
in
fbld
dec
in
lcall
mov
sub
decl
xor
cmp
mov
inc
and
inc
fbstp
adc
inc
je
popa
call
mov
hlt
bound
dec
in
mov
lods
les
pop
inc
push
inc
pusha
sbb
inc
les
ljmp
pop
das
test
pop
sbb
cmpb
jo
cmp
mov
call
rep
pop
or
and
jno
pop
xor
les
fst
ret
repnz
sbb
push
cmp
cmp
inc
loop
pop
je
mov
pop
testl
test
mov
test
cs
outsl
mov
fwait
mov
imul
fdivl
and
lcall
stos
test
sbb
mov
shll
xchg
and
aas
gs
fbld
or
and
lahf
sbb
xor
sub
push
sbb
inc
xlat
push
lods
pop
add
mov
cmc
leave
push
cmp
daa
push
lds
out
popa
jo
mov
sub
pushf
repz
adc
lret
or
cmp
and
int3
cmc
push
and
std
pop
xchg
popa
dec
les
or
outsl
mov
push
andl
lahf
and
add
mov
pop
mov
push
sbb
pop
repz
icebp
add
mov
push
pop
mov
inc
jae
das
push
imul
test
jmp
fisubrl
stos
cmp
cmp
add
jae
aam
enter
push
data16
out
fistl
movnti
add
or
test
mov
icebp
jb
xchg
xchg
or
sti
mov
aad
push
mov
mov
stos
fisttpll
dec
sbb
add
bound
mov
scas
xor
xchg
test
inc
arpl
ffreep
fldcw
test
push
cmc
inc
pop
data16
orb
sbb
xlat
fidivrl
xor
lea
and
fcomps
adcb
test
push
sbb
sub
ljmp
jmp
mov
insb
loopne
xchg
ret
jnp
add
or
add
in
scas
pop
add
faddp
cmp
mov
in
dec
push
pop
ret
sub
jnp
add
aad
lret
cmpsb
dec
inc
inc
xor
jne
xor
jo
subl
out
outsb
inc
mov
mov
jmp
dec
jge
outsl
cs
mov
movsb
adc
mov
xor
out
clc
in
loop
push
cmp
orl
jge
decl
outsl
mov
mov
sbb
icebp
jg
sbb
inc
test
dec
lock
pop
filds
stc
pop
imul
mov
sub
or
cmp
mov
xor
dec
repz
jge
add
mov
or
pop
sahf
aaa
mov
fists
pop
sub
jnp
cltd
test
sub
daa
addl
addb
cmp
pusha
jnp
test
mov
or
nop
insl
or
ljmp
sbb
jnp
pop
jecxz
or
enter
push
ds
and
mov
jo
adc
mov
mov
mov
fidivrs
test
cbtw
shrb
push
pop
push
stos
cmpsb
xor
xchg
loope
test
fnstcw
cmp
loopne
fildl
aas
dec
sub
push
mov
jo
loopne
fcmovb
adc
dec
jle
int
jns
xchg
add
cltd
xor
and
mov
pusha
ljmp
stos
pop
enter
xchg
lcall
cmp
or
orb
sarl
cmp
xchg
loopne
inc
ret
and
jge
add
sub
fnstsw
pop
or
faddp
into
movsl
sub
aaa
orl
and
iret
mov
pop
jp
test
sub
pop
xor
fisubl
lods
cmp
imul
mov
movsl
pop
and
add
lret
fstl
mov
stc
pusha
cmc
xor
mov
push
ja
sub
insb
popf
arpl
jb
mov
stos
jge
addr16
sub
push
push
ljmp
lret
mov
jle
mov
scas
loope,pt
ret
test
loope
or
lcall
stc
add
sbb
jo
stos
dec
mov
jmp
mov
jae
pop
mov
add
jmp
in
insl
pop
imul
nop
mov
test
popa
push
dec
jecxz
test
mov
bound
jl
je
inc
mov
add
lret
test
pop
mov
xchg
cmpsb
mov
rcl
in
repnz
push
xor
pop
addr16
jae
rcll
push
jmp
bound
dec
xor
dec
mov
add
xchg
mov
out
in
fisttpl
stos
rcr
shr
imul
jne
mov
push
mov
outsl
fbstp
mov
xor
sti
inc
cmpsl
out
and
mov
call
cwtl
insl
test
stos
push
andb
adcb
mov
push
fisttpll
repz
dec
add
in
nop
push
xor
mov
testb
mov
pop
mov
aaa
sti
xor
push
in
shlb
xchg
or
jb
rcll
mov
mov
mov
sub
aad
push
push
fs
push
sahf
roll
outsl
pop
mov
lods
ds
fbld
sahf
add
loopne
popf
lcall
inc
xchg
mulb
mov
and
xor
fistps
inc
xchg
out
mov
sub
pop
pop
sti
pusha
jge
pop
pop
rol
jns
aad
movsl
repz
sti
mov
jle
mov
push
test
adc
jecxz
outsl
cs
int3
xor
jmp
cmc
fstpt
xchg
popf
jbe
ljmp
xor
lcall
add
ss
shrb
enter
dec
adc
lret
mov
pop
jbe
stc
push
jno
sub
cs
pminsw
jbe
rcrb
nopl
adc
std
xor
add
push
jmp
jae
in
loope
pop
bts
int
icebp
xor
mov
and
mov
pusha
leave
mov
adc
push
outsl
cwtl
int
push
loope
jmp
fdivl
lret
mov
lods
stos
inc
inc
in
add
fdivrl
mov
cmp
mov
rcrl
add
xchg
xor
and
fnstsw
cmp
es
mov
lods
insl
loop
jb
jo
ja
ror
fld
lcall
dec
ljmp
dec
cmpb
mov
sub
push
jge
nop
inc
in
cltd
inc
js
push
outsl
dec
pop
push
push
mov
pop
test
add
push
in
cmpsb
stos
mov
fs
and
xchg
or
xor
cmpsl
add
push
popa
fldcw
lret
inc
jmp
cmc
nop
cs
pop
faddl
aaa
mov
lock
push
test
or
mov
bound
ret
or
cmpsb
sbb
jns
aad
ret
xlat
ljmp
cmp
repz
pusha
add
xor
add
xchg
mov
scas
repnz
push
inc
cmp
arpl
test
fwait
push
fisubrs
repz
dec
shrb
add
dec
sbb
das
lea
into
add
das
xchg
jae
jle
lahf
in
subb
xor
push
and
xor
or
shlb
sbb
push
insb
dec
cmp
sbb
ret
mov
xor
clc
xchg
fdivs
adc
or
mov
cmp
cmp
outsl
setnp
add
jl
fimull
and
pusha
dec
stos
or
movsl
adc
test
std
jbe
sub
movsb
cmp
jnp
pop
andl
pop
mov
or
sub
subl
inc
jne
das
out
es
mov
push
stos
sysexit
icebp
not
test
push
incl
xor
popa
mov
xor
mov
fimull
inc
movsb
mov
cmp
fnsave
dec
jg
sbb
jmp
out
mov
in
sub
rcll
mov
cmp
cltd
jge
fstl
lret
das
cmpsb
in
out
push
inc
fnsave
adc
jb
dec
push
xchg
inc
push
pop
bound
in
add
bound
mov
cs
adc
mov
mov
or
ret
pusha
mov
push
test
mov
test
pop
mov
jnp
push
clc
xlat
ljmp
jbe
cmp
fdivrl
xchg
aad
repz
movsb
cmp
cmpsb
cmp
stos
pusha
inc
xchg
and
dec
mov
lret
int
mov
ret
mov
shlb
divb
jae
imul
or
sub
mov
inc
sub
or
iret
call
xchg
add
sub
or
test
or
adc
sub
mov
fistl
mov
sub
inc
sbb
out
add
pop
mov
add
sahf
int
xor
mov
xchg
pusha
add
sub
xor
gs
mov
add
push
in
mov
sarl
mov
jle
xchg
or
jnp
sbb
inc
mov
push
test
test
rolb
lret
and
adc
daa
jg
pop
push
ret
lods
push
add
pop
test
popa
xlat
sbb
pop
out
xchg
cmp
jne
xchg
mov
xchg
or
add
pop
cmp
xchg
gs
mov
sti
mov
addr16
shl
adc
add
add
xor
stos
out
bound
sub
mov
int
push
mov
call
bound
loope
test
cmpb
ret
push
lret
loop
cmp
pushf
xor
and
xor
mov
sti
ret
pop
cmp
cs
sbb
hlt
push
pop
inc
xchg
push
xlat
mov
pop
insb
or
mov
mov
inc
jae
les
ret
aam
sbb
pop
sub
push
outsb
mov
mov
in
into
sbb
and
pop
xchg
adc
xor
popf
or
fsubrs
ds
ret
pusha
or
in
outsl
in
clc
in
xor
imul
ror
je
fnstsw
pop
std
cmp
add
lock
icebp
jb
dec
inc
mov
mov
xor
bound
mov
sahf
mov
repnz
outsb
shll
stos
mov
push
dec
or
pusha
addl
xor
lods
mov
xchg
mov
shl
mov
out
cltd
es
or
pop
lret
jmp
repnz
in
adcb
das
stc
mov
adc
bound
and
shll
sub
lret
xchg
lcall
adc
subb
scas
jmp
lds
push
or
mov
fbld
mov
daa
test
scas
pop
xchg
ret
aad
adc
mov
mov
pop
popa
sbb
push
inc
or
hlt
dec
repz
push
sbb
call
xchg
xor
std
push
sub
dec
rcrl
in
mov
pop
adc
xchg
frstor
pop
int
jne
lock
dec
call
cltd
in
mov
push
aad
push
je
mov
les
cmp
ds
movsl
loop
cmp
jle
xor
repz
cltd
cld
cmp
fwait
arpl
xor
xchg
in
daa
test
dec
fs
imull
jge
adc
sbb
cmp
stc
sub
cli
aaa
cmp
bound
dec
sbb
insb
icebp
sbb
lock
cmp
jecxz
mov
inc
mov
fdivr
pop
xor
loopne
rcrl
mov
push
jbe
stc
mov
bound
outsl
lret
mov
sub
and
pop
mov
mov
mov
movsb
xchg
into
inc
and
ret
jns
sub
jns
addr16
cs
movsb
push
lret
lahf
in
push
mov
pop
mov
fldl
addr16
jmp
sahf
sub
out
out
sub
dec
mov
cmp
pusha
je
add
mov
or
aas
enter
add
or
jb
inc
pusha
ss
adc
push
sahf
repnz
jns
outsb
incb
jns
xchg
js
inc
mov
dec
bound
mov
add
in
mov
sbb
outsb
fsubs
ss
arpl
jmp
sbb
dec
cmpsb
adcb
out
mov
pusha
and
cmp
add
aaa
lods
jge
lock
fldl
aad
mov
clc
pusha
push
mov
push
test
mov
or
mov
jle
xchg
and
and
and
lcall
loop
sbb
mov
jo
ret
pop
mov
mov
xor
pop
aad
xchg
icebp
xchg
sub
mov
sbb
mov
jge
aam
jb,pt
pusha
dec
push
lea
cmp
lret
aad
sub
cld
cmc
sub
mov
imul
and
lods
sbb
lcall
shl
icebp
andl
fwait
jne
xchg
movsl
xchg
shlb
int3
jnp
ja
inc
fdivl
jg
push
pop
flds
dec
mov
mov
cmp
jns
clc
add
sti
mov
cwtl
scas
mov
push
popa
out
or
mov
or
ljmp
inc
jae
xorb
sbb
fidivl
repz
dec
lods
lcall
push
sub
sbbb
xchg
pop
jns
dec
es
push
rcrb
mov
mov
pop
jle
jne
xor
push
fldcw
mov
cltd
sahf
aas
sub
mov
int3
ja
ds
outsl
fisttpll
xchg
in
pop
xor
fcomps
dec
push
pop
scas
mov
mov
cmp
in
mov
push
out
mov
xchg
mov
sbb
sarb
stc
lcall
adc
inc
mov
jg
pop
scas
cmc
lret
std
mov
xor
out
mov
sbb
stc
aad
jns
mov
loope
jne
fnsave
or
inc
mov
cmp
fildl
jge
les
repz
and
hlt
adc
push
sysret
jp
roll
repz
mov
jns
mov
pop
inc
inc
jmp
insl
pop
push
mov
xchg
ret
ficoms
cmp
daa
mov
sahf
fwait
xlat
out
in
ficomps
mov
sbb
xor
repz
fs
jge
loope
popa
js
sarb
inc
bound
mov
daa
push
fwait
insl
push
mov
daa
cwtl
ret
test
sub
icebp
push
out
lcall
dec
lcall
mov
lock
sub
pop
push
movsl
push
and
cltd
bound
clc
add
or
inc
in
pusha
aas
cmpsb
and
popa
lods
push
jae
fistl
or
add
push
and
lahf
insl
inc
inc
push
push
imul
sbb
adc
or
jnp
sub
addb
repz
rcrb
push
xlat
add
scas
mov
push
add
repz
xor
pop
roll
insl
ss
mov
fnstsw
adc
movsl
mull
rolb
mov
jecxz
andb
lahf
lods
push
loop
or
cmpsl
es
pop
mov
mull
cmp
push
xchg
mov
nop
pushf
outsb
fists
add
cmpsb
fcmovu
test
xchg
sbb
in
ret
iret
jne
mov
scas
aad
clc
pusha
or
std
shrl
cli
and
mov
fs
mov
cmp
lods
fists
test
push
out
jnp
cmp
adc
clc
jns
mov
js
push
data16
stc
movsb
cmp
pop
loop
out
inc
inc
aam
andl
xchg
pusha
mov
rcrl
inc
das
dec
clc
and
test
aam
jle
push
sbb
cmc
test
inc
loope
test
rolb
ss
ljmp
push
add
insb
jle
pop
inc
mov
sbb
scas
sahf
dec
sbb
sar
xor
mov
in
xlat
sbb
dec
outsl
jecxz
dec
iret
loop
stos
xor
scas
shll
mov
rorb
pop
loope
adc
jno
sahf
mov
sub
mov
repz
cmpsl
aas
inc
data16
and
addb
dec
mov
aas
shl
shlb
dec
mov
pushf
dec
outsl
sbb
popf
adc
in
sbb
xchg
pop
fidivl
pusha
sbb
cmp
push
fcmovb
add
test
aad
mov
pusha
pop
jmp
sbb
andb
daa
mov
jne
mov
mov
push
inc
dec
outsl
lcall
shrb
and
push
out
mov
jp
hlt
rcl
dec
mov
and
push
cmpsb
insl
sahf
rcrl
repz
cli
xor
fwait
shrb
test
sbb
xlat
jg
aaa
sub
icebp
push
add
fists
pop
aad
sbb
push
in
mov
mov
inc
sbb
jmp
adc
mov
xor
add
fldenv
repnz
xor
lods
out
subl
mov
cmp
pop
fsubl
add
push
arpl
lahf
pop
mov
jns
ficompl
mov
repnz
inc
sub
mov
mov
cld
test
cld
or
outsl
bound
mov
mov
out
pop
popf
xchg
mov
mov
xlat
mov
scas
outsb
mov
nop
fistps
xchg
pushf
add
push
jae,pn
lods
jno
push
jne
inc
and
jns
mov
sub
stc
inc
jne
not
dec
xchg
dec
mov
jmp
mov
xchg
fistpl
shll
push
loope
mov
dec
fnstsw
ja
inc
scas
sbb
mov
sahf
lods
mov
insl
cmp
clc
andb
scas
push
sub
loop
jmp
scas
xchg
add
pusha
test
push
xchg
sub
int3
jle
repz
inc
call
mov
outsl
add
les
push
jo
fbld
cmpsl
shl
push
adc
lods
das
push
popf
lock
cltd
add
shrl
adc
xor
fists
jns
cmp
pop
push
xchg
sbb
fmul
fcomps
push
stc
es
fisttpll
jae
outsb
adc
pop
jle
jecxz
stos
rcll
sub
mov
sbb
dec
repz
into
fidivrl
adc
mov
lods
or
adc
aas
scas
dec
cmpsb
push
dec
mov
rcr
jle
sub
fwait
test
push
ffree
cmp
in
cld
add
leave
daa
jecxz
ljmp
dec
mov
jb
mov
and
pop
inc
mov
cwtl
insb
sbb
bound
and
imul
adc
pusha
jl
orb
outsl
arpl
sahf
fcmovnb
inc
xrelease
cmpsb
lret
push
mov
cld
adc
ja
and
rcll
in
je
jp
shll
stos
jge
cmc
in
pop
mov
subl
mov
pop
das
adc
mov
mov
mov
in
pusha
js
ffreep
mov
nop
sti
rcrb
icebp
popa
pop
int
sbb
push
xchg
add
adc
sbb
cmp
adc
or
push
inc
push
repz
test
jb
out
bound
dec
lods
inc
pop
inc
icebp
sub
mov
cltd
lock
adc
test
mov
insl
adc
xchg
or
jmp
add
or
out
dec
js
mov
jp
gs
scas
pusha
sarl
outsl
push
jnp
dec
inc
pusha
sbbl
mov
mov
orb
stc
push
inc
mov
out
pop
gs
bound
xchg
dec
scas
xor
enter
lock
pusha
xchg
adc
cmp
cmpsl
rcl
insb
cmpsb
pop
sbb
sbb
mov
mov
andl
xor
add
add
stos
cld
pop
cmp
outsl
ret
sub
int
adc
xchg
mov
add
dec
cmp
sub
lock
mov
mov
clc
ja
cmpsl
repz
cld
cmpsb
pusha
mov
mov
insl
cmpl
js
repnz
xchg
xor
lcall
outsl
dec
bound
sub
adc
xlat
jecxz
push
mov
ret
add
push
inc
lods
into
pop
inc
ficompl
repz
adc
sbb
mov
dec
add
bound
inc
rol
flds
nop
push
scas
inc
movsl
adc
jb
lods
loopne
pusha
shll
pop
inc
dec
js
adc
mov
jmp
fisttps
lahf
jb
mov
mov
mov
cmpsb
or
shrb
sub
lahf
jg
addl
pop
xchg
push
mov
mov
push
fidivs
and
repz
cmp
lods
xchg
dec
je
pop
sarl
stos
stc
sub
sub
mov
mov
outsl
add
pusha
jg
mov
aam
lret
idiv
mov
xor
stos
jl
arpl
jecxz
and
arpl
lcall
pop
aas
mov
pop
cmp
jae
mov
push
sbb
out
test
push
lods
and
push
dec
cmpsb
stos
and
xchg
push
add
sub
arpl
push
cld
pusha
iret
rclb
jmp
movsl
jb
subl
jecxz
imul
divl
mov
lods
mov
aad
pusha
test
int3
movsl
push
fbld
sbb
call
xor
add
fstl
pop
and
enter
push
pusha
or
jns
jp
dec
mov
out
cmp
pop
mov
mov
loop
popa
xor
mov
or
xor
jmp
stc
sub
jl
andb
pop
mov
cs
adc
lods
mov
cmpsb
jb
mov
fcmovnb
std
lock
aas
stos
lret
ret
xchg
or
mov
sarb
cli
pusha
mov
movsl
push
cs
mov
sub
push
pop
addr16
mov
xchg
rcr
mov
roll
outsl
scas
lds
sub
or
sub
fs
sti
or
pop
dec
xchg
lea
ret
jbe
scas
mov
vcmpeq_ossd
js
ret
jo
test
sbb
roll
or
pop
outsl
dec
shl
ljmp
fdivrl
fwait
push
mov
filds
pop
pop
mov
dec
adc
and
repnz
adc
fs
mov
mov
enter
xchg
sub
xchg
inc
std
fistps
pop
sbb
xchg
std
add
sub
pop
xchg
decl
sub
movsl
xor
mov
lret
mov
in
in
adc
aaa
sahf
out
add
cmp
inc
imul
enter
dec
jbe
decb
sbb
aad
movsb
lock
imul
cmc
leave
adc
out
cmpsb
shrl
pop
ficoml
ljmp
xlat
je
arpl
or
fisttps
pop
adc
ret
repnz
pop
cmp
mov
aam
rcrl
jae
xlat
xchg
rcr
xchg
inc
mov
les
data16
popa
mov
dec
jg
mov
cltd
pusha
push
inc
inc
adc
and
push
addr16
adc
fs
stc
int3
sahf
or
jb
rcll
insl
cmp
pusha
and
pop
xchg
cmpl
sbbb
in
jno
jnp
jp,pn
push
fisttpll
push
rcrb
ds
arpl
mov
dec
outsb
jno
dec
push
adc
stos
ret
loop
mov
fisubrl
sbb
cmp
xchg
pusha
stos
fmull
mov
arpl
clc
leave
out
pop
shlb
bound
popa
repnz
cli
add
ja
sti
jnp
xor
jecxz
in
ljmp
push
pop
daa
add
fldl
push
int
cmp
push
fwait
loopne
add
dec
repnz
sbb
sub
jmp
add
jnp
je
leave
sub
cmpsl
in
call
mov
push
aaa
fldl
mov
push
or
int
ss
bound
jmp
scas
aam
cmpsb
lock
cmp
fdivrs
lods
rolb
dec
bound
nop
imul
ficoms
fbld
sbb
inc
fnstsw
push
out
mov
mov
jl
and
loope
push
jmp
ret
jb
bound
or
or
cmc
aad
pop
loope
lods
in
xchg
sub
and
stos
cmp
adc
loope
lret
mov
mov
pop
jae
popa
pushf
adc
sub
cmpsb
pop
pushf
xchg
insb
insl
arpl
or
addr16
out
sub
jmp
inc
jmp
aaa
sti
mov
pop
int
add
int3
iret
or
shl
xchg
pop
outsl
psrlw
rclb
stc
push
sbb
outsl
ret
adc
insl
test
decb
into
xlat
and
ja
fisttps
adc
mov
loope
sub
sbb
jmp
inc
push
xor
popa
pop
aas
cmpxchg
pop
dec
imul
hlt
and
mov
push
fistps
pop
idiv
mov
sbb
add
ret
sbb
sbb
or
dec
push
sbb
xor
mov
jp
xchg
and
pop
cmp
ljmp
test
add
movsb
cmp
insl
loop
ret
sub
insl
mov
pop
add
cmpsb
jbe
cmp
stos
cs
mov
das
stc
mov
and
fstps
clc
lret
sbb
sbb
mov
scas
lret
lret
cmc
fcmovu
or
jnp
in
push
xchg
sbb
jl
sbb
arpl
jmp
xchg
gs
cmpsl
cmpsb
adc
mov
cmp
pusha
cmp
jp
ficomps
mov
pop
cmpsb
lods
seto
repz
dec
mov
lea
pushf
cmpsb
aad
out
xchg
add
cmp
es
sbb
repz
fsubs
cli
mov
xlat
inc
iret
jecxz
pop
bound
mov
cmp
bound
mov
arpl
adc
push
push
add
adc
repnz
jecxz
xor
cmp
lods
mov
popa
mov
adc
aad
cli
cli
lods
cmp
mov
loopne
popf
inc
mov
in
mov
mov
push
loope
lods
mov
mov
jp
mov
sbb
sahf
sub
popa
pop
in
outsl
inc
jecxz
mov
pop
outsl
std
xchg
lock
jno
adc
or
jne
lret
out
pusha
inc
cmp
shll
mov
sub
nop
imulb
movsl
jns
pop
mov
mov
popf
push
mov
fdivl
add
arpl
dec
push
xchg
popa
fdivl
sub
mov
les
and
sub
stos
pop
sbb
push
mov
pop
mov
inc
dec
fdivl
xchg
sub
dec
adc
shll
fistpll
inc
enter
pop
jae
mov
or
xor
inc
stos
push
cwtl
mov
mov
popa
dec
aad
and
in
mov
or
fcmove
fs
pop
mov
movsl
mov
mov
fdivp
jg
lret
add
cmp
add
cli
xchg
push
mov
dec
shll
outsl
repz
and
outsl
andl
ret
mov
or
inc
pop
insl
mov
pusha
ja
sbb
sbb
mov
fstpl
ja
push
cltd
sbbb
push
and
pop
adc
push
daa
add
leave
xchg
and
rcrl
xchg
roll
loope
mov
or
sbb
mov
sub
adc
cmp
xor
popa
repnz
leave
adc
imul
stc
or
lahf
cmp
incl
inc
filds
ret
sbb
loop
jae
lods
sub
loop
into
jo
in
dec
or
mov
pop
out
out
fucomi
loopne
out
jb
test
sarl
lret
arpl
jnp
mov
xor
cmc
jno
adc
lods
push
pop
sub
outsl
subl
adc
ffreep
fstl
imul
xor
outsl
data16
mov
pop
stc
pusha
mov
fidivrs
sbb
dec
xchg
or
mov
sub
or
repz
adc
inc
mov
inc
dec
pop
and
jle
es
inc
hlt
aad
rcrl
lock
or
push
addr16
lcall
pop
jne
mov
adc
sbb
sub
mov
xor
sub
cs
add
bound
stos
jne
aam
cli
sbb
lea
inc
or
push
mov
pusha
in
xlat
mov
jecxz
cmp
cmpsl
pop
xor
xchg
push
fs
sarb
dec
addr16
or
orl
sbb
pop
xor
dec
or
scas
fdivr
sbb
cmp
lret
inc
das
fnsave
bound
push
arpl
pop
sbb
push
ds
or
sbbb
movsl
xor
pusha
dec
push
jle
loope
mov
and
dec
adc
shrl
mov
jne
in
sbbl
test
inc
push
add
scas
or
xchg
jg
cmpsb
or
in
mov
arpl
mov
in
cmpsl
pusha
mov
adc
mov
dec
loop
stos
lcall
dec
cmpsl
pusha
pop
loop
xchg
mov
cmp
dec
mov
cli
pop
mov
jmp
jecxz
push
push
mov
jp
dec
jmp
ficomps
or
aad
xor
adc
cmp
addr16
mov
leave
movsl
and
jl
pusha
jb
push
mov
inc
add
or
dec
outsl
push
pusha
mov
fcomi
adc
pop
pop
push
xor
xor
push
fidivl
outsb
mov
cmp
mov
adcl
mov
sub
add
jp
push
sub
sub
shll
outsl
push
and
xchg
add
lahf
inc
sbb
outsb
fidivrl
std
sbb
rolb
mov
sbb
hlt
jmp
mov
scas
add
xchg
dec
adc
pusha
inc
movb
lds
jo
call
mov
test
sbb
scas
repnz
call
fs
outsb
adc
fcoml
movsb
std
insl
insl
outsl
adc
xorb
stos
add
add
fbld
jg
ds
jle
cmp
mov
jne
mov
sub
aaa
sub
sub
xchg
jns
mov
fiadds
mov
sbb
ficoms
std
outsb
lahf
sbb
aaa
jb
xor
xor
mov
add
fldenv
cltd
lock
xchg
push
xchg
pop
or
dec
adc
pop
cmpsl
ret
lods
push
xrelease
mov
pop
out
xchg
es
pop
and
lret
mov
xor
aad
mov
shrb
cltd
cs
xchg
addr16
imul
insb
xchg
inc
mov
loope
mov
add
ret
sub
or
mov
out
aad
mov
test
aas
mov
loope
sbb
out
out
sub
stc
mov
mov
xchg
xchg
mov
pop
inc
loop
popf
push
xchg
xor
test
sbb
pusha
dec
sub
pop
in
js
ret
push
mov
int3
xlat
mov
sub
mov
orl
push
bnd
push
mov
add
outsl
add
arpl
outsl
fiaddl
nop
xchg
and
shrb
xor
fisttps
sahf
js
push
sbb
loope
cmp
cmp
fmull
or
std
cmpb
push
and
xor
leave
or
jae
and
lods
xchg
rcl
pusha
or
orb
aam
mov
add
fstl
jecxz
xor
data16
cmc
jecxz
jle
jg
mov
frstor
mov
push
adc
pushf
xchg
filds
jb
clc
mov
mov
fsubr
adcb
repnz
lods
inc
clc
out
aas
popf
fcompl
arpl
jg
xchg
cmpsb
addr16
pusha
or
sbb
cmpsb
rorl
pop
mov
mov
rcll
inc
mov
ss
push
sbb
push
rcrl
mov
adcb
dec
in
fsubrl
repz
icebp
dec
rorl
enter
stc
das
gs
leave
cmpsl
pop
int3
push
or
in
cld
cmpsl
das
inc
mov
stc
ret
adc
push
mov
cmp
sbb
ficompl
fdivl
or
add
addb
ljmp
sbb
ret
dec
cld
divb
xor
xor
popf
add
daa
add
stc
and
jns
add
cmpsb
xchg
sbb
leave
xlat
fsubrs
jb
or
aaa
sar
mov
mov
mov
out
std
in
adc
clc
push
xchg
cmp
lods
dec
inc
icebp
dec
ret
push
or
or
push
jno
lcall
mov
jnp
les
fistl
mov
insb
and
loop
shrb
mov
push
sub
stos
xor
sub
xchg
lret
and
aad
mov
xor
stos
and
rolb
jo
cs
pop
mov
pop
pop
leave
pop
push
addl
jmp
jo
pusha
jae
arpl
lcall
add
test
jmp
ret
jecxz
push
mov
pusha
popf
pop
jmp
test
push
in
mov
mov
cmp
mov
inc
aam
or
mov
jg
pusha
push
icebp
add
jb
lcall
bound
sahf
gs
aad
mov
andl
fisttps
sub
sti
lret
mov
lret
pmovmskb
pusha
lret
xor
dec
je
scas
cmp
sbb
popf
stos
add
sti
movsb
mov
bound
xor
cs
lret
sti
xor
movsb
mov
inc
stos
int
xchg
mov
subb
mov
outsl
sbb
mov
lods
loop
test
out
stc
cwtl
lahf
fidivl
int3
inc
lret
jnp
mov
test
jo
outsb
xorb
fistpll
or
adc
push
sbb
pop
jb
push
repz
sub
imul
pop
mov
lock
mov
cmp
stos
lods
loop
loope
popf
sub
movsb
lds
out
cmp
mov
repz
out
rolb
rol
cmc
ret
mov
xchg
ja
stos
mov
js
loope
lods
mov
fsub
xchg
repnz
jecxz
aam
loope
shll
ljmp
jle
fldenv
movsl
xor
cmp
out
sbb
aad
std
push
sbb
in
jmp
movsb
mov
add
dec
pop
mov
mov
jbe
sub
xchg
je
cmpb
stos
xlat
insl
stos
cwtl
mov
jb
mov
mov
mov
ja
sbb
lock
cmp
adc
into
aaa
cld
ret
mov
pop
sar
aad
inc
dec
mov
cmc
add
or
movsl
adc
andb
lret
add
push
repz
adc
addr16
mov
iret
xchg
sti
xor
filds
mov
push
cwtl
popf
outsl
mov
and
adc
loop
arpl
push
sahf
stos
sbb
test
push
mov
cmpb
pop
rcl
in
addr16
divl
jnp
lcall
add
jae
jmp
push
sbb
dec
mov
xchg
cmpsb
and
or
pop
pop
subl
cmpsl
jbe
jb
aam
mov
aam
sub
xlat
rcll
mov
dec
cmp
lret
jecxz
pusha
fbld
sub
mov
int
insb
sti
ss
sbb
pushf
icebp
pop
fsubp
inc
stc
fdivl
jmp
mov
int
scas
call
xlat
mov
mov
sub
aas
mov
shl
mov
mov
pop
pusha
jl
pop
int
test
imul
rcl
mov
lds
lret
and
mov
sbb
mov
pop
fidivrs
cmpsl
gs
sar
subb
call
in
inc
jnp
rol
xchg
fstpt
jecxz
cmp
in
imul
xlat
dec
mov
lret
movsb
mov
aaa
cmc
add
fsubrp
mov
pop
hlt
rcrl
push
lret
cmp
mov
jnp
sbb
mov
push
and
jl
repnz
and
mov
add
pop
nop
inc
fcom
xlat
cwtl
lret
sbb
scas
inc
push
cmc
jp
hlt
call
aam
std
push
mov
movb
sbb
mov
incb
outsl
sbb
insb
addb
jbe
jae
pusha
aam
call
mov
and
pop
repz
push
mov
mov
mov
inc
lods
rclb
fwait
pusha
popf
stos
adc
lock
cli
xchg
dec
fcoml
incl
pusha
adc
lahf
jg
inc
sahf
pop
fcmove
repnz
test
roll
in
inc
inc
jg
pusha
pop
push
adc
dec
stos
or
cli
mov
out
mov
stos
jno
pop
jns
sub
int
push
sbb
mov
mov
arpl
pusha
add
sub
sub
or
push
outsl
shr
pop
int
mov
sub
inc
sti
imul
sbb
in
sub
bound
xlat
ja
and
outsb
aad
xlat
test
test
xlat
ds
repnz
adc
xchg
popa
jo
movsl
mov
jno
dec
jno
mov
mov
fdivrp
ret
setno
mov
cmpsb
and
mov
and
andb
cmp
mov
sbb
icebp
les
push
sbb
xchg
outsl
push
icebp
cmpsb
jecxz
inc
repnz
add
negb
imul
pop
xor
addb
daa
test
sub
lret
dec
cltd
sbb
lea
pop
lret
imul
pusha
mov
xchg
sti
fistpll
push
sub
xchg
or
xchg
pop
push
or
mov
xor
subb
add
outsl
repnz
daa
dec
scas
rcrb
ja,pn
push
mov
std
lret
roll
je
aad
ja
es
cmpsb
mov
fldl
sti
bound
mov
ficoms
cmp
test
pop
adc
orl
ret
lcall
ja
sbb
js
leave
shlb
jb
xchg
push
mov
mov
pusha
pop
out
sbb
and
adc
xor
scas
idivl
mov
add
or
lods
arpl
lret
xchg
dec
inc
pop
test
add
jno
fisttpll
addr16
push
mov
cmp
scas
mov
xchg
inc
jae
pop
test
test
and
dec
leave
test
movsl
lock
faddp
cmp
mul
push
push
lcall
repz
icebp
push
js
xchg
popf
xchg
mov
jmp
xor
inc
ljmp
rorl
jb
and
ror
jo
xchg
sbb
repnz
pop
lods
aas
pop
jae
add
jnp
ljmp
sub
jne
xor
mov
ret
ficoml
pop
fmull
lea
shrl
imul
pop
mov
dec
fsubp
pop
sub
inc
addr16
xchg
push
scas
and
popf
fimull
xor
aad
clc
cmpsl
mov
cmp
mov
mov
rcrb
fiadds
pop
mov
aad
cmp
test
ljmp
ljmp
and
push
sbb
sub
lcall
cltd
in
pop
cmp
sub
adc
fwait
ret
jno
test
pusha
mov
add
push
add
ss
rcl
mov
imul
cmp
lods
jne
mov
mov
jmp
inc
inc
or
inc
loopne
in
test
dec
or
fisttps
mov
dec
xor
pop
loope
icebp
push
mov
imul
pop
mov
bound
jle
cmp
sub
or
clc
adc
mov
bound
cmpsl
lcall
fldl
jmp
movsl
jbe
or
pop
sbb
movsl
pushf
cmp
movsb
inc
add
dec
hlt
mov
movl
nop
jmp
cmpsb
mov
inc
inc
movsl
mov
dec
mov
ljmp
cmp
adc
lcall
insb
stos
jecxz
or
adc
pop
pop
pop
push
cmp
shl
add
pop
dec
cltd
cli
rcl
loope
pop
pop
or
or
stc
ret
mov
xor
adc
mov
int3
fldenv
andb
cld
mov
lcall
sti
jle
mov
jmp
cmp
xchg
lret
repz
stos
mov
iret
xor
jae
outsb
lahf
loopne
sbb
fcmovnb
mov
xor
into
sti
cltd
outsb
xor
outsl
subb
test
cld
pop
daa
popa
pop
and
lret
xchg
cmp
fcomip
cld
sbb
dec
mov
stc
inc
pop
imull
inc
cld
mov
fadds
mov
pop
xchg
xlat
scas
pop
xor
stos
pop
repnz
bound
or
cmpsb
mov
gs
add
sarb
cld
iret
fldl
cmp
fistpll
add
outsl
add
scas
jge
sbb
dec
mov
sbb
cmp
daa
ret
idiv
adc
and
cmp
jnp
push
xchg
mov
repnz
jp
jecxz
divl
sub
repnz
add
jmp
repz
mov
imul
sbb
xorb
arpl
push
sbb
lds
mov
mov
mov
dec
ret
rclb
mov
sbb
loope
andb
js
xchg
lea
popf
inc
mov
adc
xor
xchg
cmp
int
loope
loop
ret
lcall
icebp
out
lods
into
mov
inc
jp
arpl
je
push
xchg
add
mov
in
sub
add
shlb
aam
in
push
lock
cmpl
rclb
lock
fsubrl
adc
pusha
jp
mov
xchg
inc
mov
lea
jae
outsb
lret
hlt
hlt
lock
dec
popa
out
xor
mov
mov
loope
rcr
pusha
int
push
mov
and
in
dec
mov
lock
fwait
les
cmp
pusha
dec
inc
pop
sbb
inc
aas
and
out
sbb
or
mov
les
cwtl
mov
lret
add
mov
dec
mov
mov
pop
cmpsl
push
ja
icebp
cld
cmpsb
add
je
push
push
jno
bound
mov
outsb
addl
adc
or
jnp
lcall
mov
jge
mov
fbstp
fnstenv
pusha
inc
clc
mov
stos
pop
mov
add
lret
xlat
mov
je
mov
cld
mov
js
dec
mov
out
jl
ds
cmpsl
repz
shlb
pusha
add
iret
dec
iret
pop
ljmp
fistl
pop
xchg
shrl
fwait
xorb
ret
cli
xchg
inc
or
sub
icebp
sbb
or
add
mov
sbb
insl
xchg
aad
cmpsl
fucomp
inc
faddl
stc
cmp
scas
pusha
enter
push
mov
cmp
mov
cmpsl
decb
mov
roll
and
push
sahf
iret
das
imul
inc
enter
push
std
inc
jb
pop
mov
das
ja
sub
add
leave
sub
xor
ffree
rolb
sti
push
add
push
or
mov
mov
sub
mov
outsb
mov
pop
adc
shrl
pop
lret
inc
mov
inc
push
rcrl
jle
jge
push
ret
scas
cld
cmpsb
jg
sbb
loope
sub
jle
notb
mov
add
jecxz
arpl
iret
daa
insb
xchg
sub
std
bound
pop
stc
pusha
mov
movsl
mov
lock
xchg
adc
ret
out
popa
lock
mov
jno
cmp
cmp
mov
cmp
fiaddl
adc
inc
push
push
xchg
f2xm1
adc
andl
dec
orb
lods
add
xchg
outsb
sbb
xchg
sub
sti
in
lds
test
xor
cmpsl
cmp
push
faddl
ja
pop
movsl
push
push
pop
mov
dec
lock
and
lret
and
mov
xchg
push
popa
lods
jae
arpl
xorb
aam
inc
sbb
sub
and
add
jecxz
mov
adc
dec
pop
orl
sub
adc
mov
mov
inc
sub
scas
mov
add
pop
into
stos
xor
mov
subb
xor
lahf
sbb
push
dec
addb
aad
scas
add
in
mov
pusha
movsb
fsts
push
pop
pop
shlb
adc
mov
cmc
or
inc
adc
push
mov
call
xchg
repz
push
sbb
mov
movsl
ds
push
fs
xchg
pop
scas
and
fisubl
adc
jb
xlat
pop
movsl
rolb
xchg
mov
out
ss
rcl
add
mov
ljmp
out
pop
dec
and
pusha
stos
pusha
mov
pop
movsl
adc
cltd
cmp
jecxz
bound
pop
out
fsqrt
arpl
test
pop
sahf
es
xchg
or
into
inc
aas
mov
rcrb
ljmp
mov
cmp
cmc
bound
inc
pop
cmp
jle
scas
mov
push
test
jne
mov
xor
cld
sub
inc
cmp
mov
stc
inc
sbb
or
int
mov
cmc
out
cwtl
xchg
mov
paddd
fwait
push
cmp
fisubrl
iret
pusha
xchg
jp
jle
ret
cwtl
mov
test
les
outsl
mov
stc
add
rorb
jp
adc
xor
mov
in
xchg
mov
aad
and
push
ja
adc
sbb
mov
mov
cmc
and
xor
out
pusha
cld
imul
mov
pop
mov
mov
out
adc
xor
cmc
mov
fwait
test
bnd
lock
mov
xchg
cmp
pop
push
sbb
sub
lcall
outsb
mov
dec
test
lods
outsl
nop
jno
bound
test
jbe
arpl
adc
add
or
fsubr
femms
call
jb
loopew
inc
cwtl
mov
add
shlb
add
sbbl
xchg
cld
and
js
cli
or
jecxz
sbb
loop
mov
call
adc
jl
aad
sarb
mov
fs
arpl
fistpl
shll
insl
or
mov
mov
sbb
mov
out
sarl
or
jle
je,pn
rorb
in
lods
add
xor
adc
lret
push
dec
mov
pop
stc
add
or
jb
push
fadds
or
cmp
insl
pop
push
aam
pop
aas
jmp
cwtl
mov
mov
rolb
int
int3
cmpsl
das
cmpxchg
ret
mov
loop
outsl
rep
cld
sbb
fistps
andl
cmpsb
inc
mov
arpl
fwait
ljmp
sbb
xchg
add
add
scas
leave
loop
mov
lret
negl
sub
dec
sti
fcompl
dec
pop
scas
pop
lock
sti
dec
popf
jmp
test
mov
push
ljmp
sti
mov
je
or
mov
imul
xor
std
fidivl
lds
loopne
jmp
int3
adc
ljmp
pusha
insl
sbb
sbb
in
and
mov
add
xchg
arpl
inc
pop
mov
cld
cmp
mov
mov
dec
and
and
xor
mov
lea
fisubrl
pop
adc
mov
jnp
xchg
scas
jle
movsb
adc
clc
cmpsb
or
pop
push
mov
movsl
adc
jg
xchg
pop
pop
repnz
pop
scas
push
shl
scas
add
mov
sub
or
pop
popf
pop
and
out
jle
inc
fwait
push
jb
sub
xchg
sub
mov
fmull
push
mov
gs
rcrl
mov
stos
cli
or
pop
sub
ds
test
es
pop
mov
movsl
xchg
insb
loop
xlat
shll
shll
sub
jo
rcrl
out
push
mov
into
cmc
mov
addb
mov
enter
mov
pop
test
fisubrs
and
jg
sbb
xchg
push
int3
sbb
cltd
xchg
or
add
lock
or
mov
stos
cmp
aad
repnz
imul
xor
push
sti
inc
mov
daa
sub
pop
mov
mov
test
popa
add
outsb
pop
xchg
cmpsl
bound
mov
pop
jp
rclb
xlat
pop
loope
fwait
mov
nop
cwtl
movsl
mov
add
lea
pop
mov
insl
loope
shlb
mov
out
jno
mov
mov
int
and
leave
mov
addb
stos
and
lret
inc
rol
xor
cmc
add
push
ljmp
into
jb
xlat
ljmp
dec
pushf
push
repz
xchg
xchg
in
adc
pop
dec
push
pop
test
mov
jbe
jno
xchg
pushf
addb
push
cmpb
in
shll
leave
lret
ds
roll
mov
ds
shrl
sbb
jne
sub
test
xlat
stc
fisubrs
les
cli
lret
pusha
out
mov
or
inc
ret
push
push
mov
xlat
jmp
fwait
mov
flds
stos
ret
pop
loopne
pop
mov
repnz
adcb
and
movsl
ja
pop
mov
pop
or
cmc
xor
stos
lret
or
cmp
inc
in
mov
gs
and
or
mov
pusha
iret
dec
and
leave
pop
insb
pop
jg
sbb
sbb
das
mov
push
mov
cmp
loop
xchg
aad
mov
insb
xchg
mov
outsl
ds
jecxz
inc
pop
xchg
add
pop
sbb
xlat
inc
xor
rorl
add
pop
cmc
lcall
add
lret
decl
cltd
inc
xchg
jmp
out
bound
jne
xlat
mov
stos
ds
adc
xor
insl
mov
sbb
mov
fxch
out
inc
add
jl
jge
test
mov
inc
mov
xlat
and
aad
mov
cmp
and
mov
fcmovnbe
mov
mov
scas
push
xchg
lcall
mov
iret
in
xor
or
xchg
test
out
gs
jae
fsts
mov
icebp
sub
imul
cli
repz
mov
mov
jp
push
fcoms
sarb
mov
cmp
cmc
mov
loopne
es
sbb
imul
adc
sbb
xor
sarb
stc
cli
in
sbbb
mov
leave
mov
cmp
rcrb
mov
sbb
pop
dec
mov
ret
bound
aas
sbb
sbb
mov
pop
movsl
jmp
push
test
cmp
xor
fucomp
jo
dec
xor
cmp
lcall
daa
cmp
mov
ss
sub
push
rcrb
addb
sub
xchg
xchg
nop
addb
sub
sub
mov
stc
roll
xor
data16
jno
movsb
aas
movsb
movsb
xor
addl
mov
push
cmp
out
xrelease
pop
sub
mov
lret
mov
sub
pop
test
pop
out
and
xchg
or
orl
mov
mov
or
imul
sahf
popa
pop
mov
jns
mov
scas
int
pop
sub
int3
jle
pop
or
in
mov
fsubl
xchg
jecxz
ja
dec
push
adc
cmc
ret
mov
aad
cmpsb
push
aas
ds
in
and
adc
test
into
test
movsb
mov
mov
adc
pusha
mov
cmpsb
add
cltd
sbb
in
into
pusha
push
out
add
lahf
stos
aaa
sti
ja
les
sarl
xchg
mov
add
nop
je
call
imul
out
mov
test
mov
gs
clc
in
mov
stos
pop
push
mov
pop
pop
push
loop
and
mov
and
sbb
xchg
pop
sub
adc
xchg
sbb
push
fsubrl
cmpsl
andb
inc
xchg
cmp
mov
fiaddl
dec
mull
or
xor
int3
cmp
mov
add
sahf
xchg
dec
movsb
repnz
adc
int3
mov
mov
jecxz
loope
add
shr
call
ret
pop
loopne
inc
lea
inc
aad
push
push
incb
repnz
les
ficomps
mov
aas
ret
sub
jmp
xchg
sahf
mov
push
outsl
or
and
jmp
xchg
inc
cmp
fxch
or
sti
bound
pop
sahf
fists
sbb
add
mov
fisubl
mov
or
inc
push
mov
jle
mov
mov
cld
mov
inc
pusha
adc
call
push
insl
je
xchg
in
inc
inc
mov
mov
test
fcoms
dec
in
cmp
or
mov
lods
insl
adc
mov
xchg
cmp
add
jl
je
sub
mov
fimuls
stos
pop
scas
scas
push
mov
int
sub
in
shrl
lret
pop
add
bound
inc
pop
inc
mov
aad
cwtl
rcrl
movsb
sub
stos
add
ds
jp
push
es
ja
pop
loope
fstpl
cmpsb
arpl
push
fdivrl
outsl
test
mov
addb
mov
sbb
mov
xchg
and
jo
in
or
pop
xchg
into
repnz
shrb
dec
clc
jp
test
cmpsl
and
add
je
push
bound
pop
lods
mov
inc
push
int3
and
adc
pop
or
cmc
pop
sbb
or
xchg
shll
test
aam
insl
fsub
icebp
mov
les
repz
iret
and
or
out
jne
test
out
ret
sub
movsb
dec
jg
xchg
mov
test
pusha
addl
stos
fnstenv
roll
sub
mov
ja
push
push
ret
repz
adc
xchg
in
outsb
enter
inc
xchg
test
sub
mov
stos
cmpsl
mov
or
and
call
jmp
inc
loop
sub
insb
mov
adc
enter
xchg
xor
daa
idiv
cmpsb
insl
jp
out
loope
cmpsb
outsb
dec
push
mov
stos
mov
loope
sub
mov
std
xchg
pop
sub
call
cld
test
inc
mov
pop
popa
push
or
int3
or
jge
ja
adc
xchg
lods
mov
ficomps
lods
sbb
ret
mov
pop
ds
and
inc
imul
sub
xorl
outsb
sbb
add
ss
cmpsl
fs
loopne
fistl
mov
jb
and
dec
mov
inc
cmp
rep
ficoml
cmp
mov
shlb
out
les
ljmp
adc
es
ret
xlat
xor
mov
test
out
jecxz
inc
ret
fwait
pop
int
jp
aaa
adc
or
lock
push
pusha
stos
scas
and
lds
push
or
rcrb
stc
xlat
jl
lock
mov
mov
invd
fmulp
addr16
test
bound
sbb
inc
nop
pop
pop
mov
aas
xchg
les
repnz
cs
cmp
scas
cmp
outsl
sbbb
pop
sub
inc
cli
mov
pusha
sub
int
inc
add
mov
or
sbb
xchg
cmp
sti
xchg
and
pop
pop
loop,pn
movsl
push
pushf
xchg
rclb
add
mov
aad
lahf
or
or
out
mov
int3
pop
fsubl
mulb
cmovge
mov
addr16
inc
lock
pop
pop
jae
lahf
xor
dec
dec
push
add
push
sbb
leave
and
addr16
sets
cmp
xor
and
stc
shlb
in
gs
push
xor
roll
insl
bound
push
push
mov
outsb
pop
push
ja
out
shl
fbld
aam
mov
dec
aas
sbb
push
xor
scas
xchg
inc
inc
mov
pop
push
sub
ret
push
subb
pop
inc
fst
pop
push
popf
mov
adc
jnp
movsb
sarb
test
test
repz
sti
pusha
or
sbb
arpl
imulb
mov
or
add
shl
pop
mov
pop
push
stc
jmp
aaa
cmp
inc
sahf
cs
cmp
cmpl
call
sbb
ret
or
mov
cmpsb
dec
fadd
dec
mov
pop
push
imul
add
mov
push
cltd
mov
leave
mov
mov
bound
mov
out
cmp
xor
cmp
cmc
push
mov
xor
jg
jmp
lods
lcall
repnz
stc
lcall
mov
jp
jle
mov
mov
sbb
inc
shll
push
outsb
and
pusha
sbbb
inc
cmpsl
fistps
add
push
push
sbb
inc
cmp
lea
fcomip
lret
xlat
rcrl
pop
loopne
enter
adc
mov
jg
cmp
loop
outsl
pop
sbb
sub
push
popf
imull
push
mov
cld
fidivrl
arpl
pusha
movl
cs
outsl
std
mov
andb
loopne
mov
jmp
imul
adc
stos
ret
fdivrl
xor
subb
in
mov
imul
repz
addr16
mov
fldenv
scas
inc
ret
in
xchg
mov
and
mov
into
mov
add
stos
out
adcl
and
xor
mov
pop
inc
shrb
clc
in
jne
repz
out
cmc
lds
cmp
ja
inc
fisubrl
sarl
into
mov
pop
sbb
loop
es
movsl
sbb
cmc
or
xor
mov
fcompl
cmp
or
ljmp
inc
jno
movsb
cmpl
lods
inc
pusha
or
mov
xchg
dec
cld
ret
repnz
dec
js
mov
inc
adc
popf
xlat
and
pop
rcrb
repnz
nop
xchg
jb
adc
pushf
out
cmp
pusha
popf
inc
or
cmp
fldt
int
jne
dec
mov
mov
popa
jmp
xor
push
out
aas
add
hlt
ret
movsb
inc
addr16
rorl
push
sbbb
sahf
pop
xlat
shrl
jnp
dec
nop
out
jmp
add
mov
or
xchg
fidivl
repnz
out
cli
push
pop
mov
mov
out
xor
cmp
test
imul
xchg
fs
xor
lea
cwtl
sub
imul
movsl
mov
lret
sahf
sub
and
xor
decl
or
or
arpl
test
repnz
lret
mov
lahf
pop
add
leave
stos
pop
xchg
mov
xchg
cltd
inc
popf
call
bound
pop
ret
out
outsl
mov
js
es
pop
jge
bound
jno
jl
jbe
push
arpl
adc
sub
pusha
pop
testb
pop
cmpsb
inc
popa
xor
shr
mov
sti
out
fstp
ret
push
mov
push
aam
orb
in
mov
xchg
mov
mov
mov
testl
fstpt
call
pop
scas
or
clc
and
shlb
inc
out
mov
mov
jb
repz
test
dec
dec
xchg
inc
pop
fwait
pop
sub
xor
lods
mov
in
jge
loopne
add
jno
ret
mov
push
mov
adc
mov
stos
test
sbb
cmpsb
jmp
xchg
scas
lcall
pop
das
pop
repz
daa
out
mov
icebp
lods
addr16
jb
cld
leave
mov
out
imul
mov
or
or
push
inc
lahf
jo
cmp
mov
xorb
push
fidivrl
cmc
xor
dec
cmp
std
mov
shrl
rcrl
roll
sti
jecxz
ret
ds
jo
push
arpl
xor
sub
aas
cmpsb
xchg
and
imul
jl
mov
jnp
xchg
incl
icebp
add
sbb
and
or
pushl
shlb
dec
movsb
dec
push
and
aam
in
inc
xor
mov
lods
add
fidivrl
js
or
pusha
inc
pshufw
outsl
fnstcw
cmpsb
mov
xchg
xchg
dec
mov
mov
sbb
cmp
add
loope
xchg
rcll
std
jnp
cmpsb
pop
fistpll
subb
sti
ja
push
shrl
jnp
rorl
clc
in
and
push
mov
lret
adc
leave
arpl
bound
inc
ret
cmpl
ret
push
and
loop
add
repnz
pop
ffreep
pusha
inc
lahf
sti
mov
sahf
xchg
arpl
imulb
loop
xor
ds
sti
or
and
xor
imull
xchg
lock
pushf
mov
lcall
mov
and
xchg
add
push
ret
std
mov
test
sub
jnp
jl
sub
stc
inc
xor
cmpsl
xchg
pusha
das
dec
xorb
addr16
xor
pusha
xchg
xchg
insb
imul
push
inc
push
mov
jecxz
pop
je
mov
ret
sbb
rclb
lret
int
mov
call
sbb
sbb
frstor
aam
xchg
stos
push
xbegin
daa
rcll
jns
in
jge,pn
testb
sbb
sbb
aas
push
or
and
cld
pop
pop
dec
push
clc
scas
mov
cld
add
jb
sbb
fsubs
or
stos
jp
pop
andb
pop
loopne
jp
bound
in
pop
popa
out
mov
or
xchg
pop
cld
outsl
shrb
loop
cmpsl
sahf
jo
adc
mov
int3
sub
xchg
pusha
mov
loopne
add
sbb
cwtl
or
jl
sub
out
and
sbb
cmpb
shrb
mov
push
inc
cmpsl
pusha
mov
negb
in
mov
repz
add
push
pushf
jp
mov
xor
adc
mov
or
adc
inc
mov
andb
cmpsb
push
es
sub
sarb
adc
inc
shrl
loop
sarl
inc
mov
enter
add
loopnew
orl
movsl
loopne
insl
pop
cmpsl
pushf
scas
loopne
add
jns
jge
or
sbb
push
movsl
pop
jns
out
pop
mov
fcmovnu
mov
cmp
mov
mov
cmp
sbb
jae
lret
pushf
in
add
sbb
cs
push
outsb
mov
mov
fmuls
lret
jbe
sbb
shrb
xchg
and
pop
mov
nop
and
shll
and
out
inc
inc
les
jae
add
xchg
lret
lods
push
mov
fisttps
jge
push
pop
mov
xchg
jno
cmp
jb
push
push
sub
pop
cmc
inc
mov
shlb
pop
arpl
or
cmp
xchg
push
pop
lock
arpl
or
pop
mov
mov
stos
dec
mov
bound
pop
dec
mov
sbb
fildl
stc
stc
loop
and
ja
xchg
jb
mov
jmp
cld
in
sbb
pusha
fwait
adc
sbb
sahf
int
je
lret
fs
xlat
xchg
mov
mov
mov
jns
shrb
xlat
jle
dec
inc
mov
mov
jmpw
bound
popa
loope
lea
push
push
imull
loope
and
js
std
adc
and
push
jg
lods
clc
stc
inc
repz
stos
jle
pop
mov
fdivp
subb
subl
xchg
xor
icebp
pop
sub
push
lret
xchg
push
fisubrs
cmp
cli
sarb
ret
xchg
jno
xor
pop
jp
ljmp
xlat
ss
push
mov
ljmp
pusha
inc
xchg
mov
mov
aad
sub
mov
xchg
pusha
pop
nop
data16
cld
mov
stos
fisubs
xchg
imul
out
push
mov
lods
cmp
mov
stos
inc
stos
push
adc
movsl
jne
xchg
mov
andb
add
sub
mov
and
and
das
jns
xlat
cmc
xchg
repnz
icebp
fisubrs
and
aam
mov
fwait
sbb
dec
push
fucomip
mov
loop
repz
ficompl
mov
cmpsl
repz
repnz
pop
movsb
or
mov
rorb
mov
pop
cmpb
and
jmp
adcl
ret
jb
cmp
and
stos
and
lret
xor
in
push
addl
sbb
sbb
out
adc
inc
xchg
push
add
arpl
lcall
add
and
push
scas
and
vmovmskps
pop
out
xchg
ja
cmp
xchg
lods
xchg
or
mov
xor
sbbb
mov
add
rolb
arpl
pop
in
repz
pop
rorl
pop
bnd
jecxz
imul
fsubl
dec
sub
cwtl
fists
ret
adc
fimuls
stos
inc
arpl
pop
jb
sub
push
repnz
xchg
fstl
adc
and
cmp
loope
lahf
mov
pop
mov
stc
mov
dec
loope
int3
cmpsl
pop
sbb
sub
ret
js
cld
pusha
fldl
cmp
cwtl
dec
mov
fwait
sbb
add
or
xlat
jae
int
inc
fbstp
mov
rolb
fucom
mov
lods
inc
fwait
stc
cmp
or
jb
sti
bound
adc
jmp
dec
scas
add
mov
mov
lock
popf
push
orl
repz
add
scas
ret
mov
cltd
lods
jb
push
arpl
lret
dec
mov
sarb
test
movsl
xchg
fimull
xor
lock
insb
and
cmpsb
pusha
scas
jl
pop
clc
xlat
scas
sub
add
mov
addr16
mov
and
or
sub
mov
addb
fcompl
hlt
mov
adc
scas
add
lods
mov
xlat
pusha
push
gs
jae
xchg
icebp
mov
xchg
mov
push
pop
cmp
mov
ret
mov
sahf
test
xchg
roll
jae
bound
push
test
inc
cmp
lret
mov
loope
addb
cmpsb
mov
inc
mov
jb
jo
cld
sub
mov
roll
fmul
cmp
je
xlat
repz
orb
fldcw
test
inc
xchg
push
pop
add
sar
add
xor
xor
scas
mov
mov
xor
pusha
rcrl
push
mov
pop
jg
mov
cli
jbe
mov
gs
fsub
jmp
push
ds
mov
cmp
xchg
jecxz
sub
fldt
outsb
sub
sbb
mov
out
outsl
lcall
sti
mov
push
ret
mov
xchg
mov
sahf
cmc
and
subb
cli
imul
enter
shll
and
fidivl
cli
add
lods
ret
leave
dec
ds
int
or
test
xchg
in
fldt
pop
or
les
or
js
ret
pop
xor
call
fists
nop
add
repnz
repz
xor
mov
sbb
push
sub
lahf
pusha
pop
cmp
movsl
test
repz
push
fstl
and
ds
orb
adc
shrl
pop
outsl
push
mov
add
pop
jbe
or
xor
mov
cli
es
pop
negl
stos
push
xchg
mov
mov
adc
fs
cmp
dec
adc
pusha
out
push
adc
rcrb
popf
add
pop
dec
popf
aam
aad
mov
fildll
sbb
scas
xorl
inc
adc
aad
inc
scas
inc
ret
or
mov
fmull
mov
xor
mov
aaa
outsb
imul
xchg
xchg
das
push
dec
mov
pushf
aas
or
aad
idivl
sahf
sbb
in
pop
out
dec
or
in
add
pop
dec
in
mov
js
sahf
jno
pusha
cmp
jns
mov
out
stos
ret
dec
push
bound
in
push
fs
sar
adc
push
mov
xor
add
lea
jae
mov
into
in
inc
dec
inc
sbb
repz
pop
inc
lods
leave
notb
xor
jle
dec
cwtl
test
inc
jb
jmp
nop
and
lret
sbb
inc
daa
mov
insl
enter
xchg
or
jle
cmp
and
lea
popf
incl
dec
inc
bound
loope
mov
xchg
xchg
fistps
enter
xorb
iret
test
dec
lahf
sub
jle
sbb
mov
in
xor
add
mov
cmp
add
pop
lcall
sbb
ret
fistpll
in
jno
dec
hlt
push
popf
mov
into
push
sub
shll
jl
ret
mull
out
jl
add
pushf
test
xchg
bound
ret
stos
adc
xlat
lods
add
sbb
pop
mov
push
pop
add
pusha
in
fisubl
idivl
in
sub
or
inc
js
int
pop
mov
sbb
enter
fwait
jo
mov
pop
lret
loope
sbb
adcl
or
inc
dec
insb
aad
stos
mov
xor
mov
adc
fidivs
push
cmp
push
loope
pop
dec
test
mov
jge
imul
sti
rcrl
leave
cmc
and
or
cmp
loope
pop
dec
sti
mov
movsl
out
icebp
decl
cli
popa
add
addr16
ljmp
xchg
or
pop
push
add
fs
sub
mov
xchg
add
imul
jle
mov
aaa
pusha
lcall
cmpsl
adc
pop
dec
adc
xchg
lret
cmc
lock
mov
movsb
filds
ret
out
loopne
mov
into
movsb
sbb
xor
aad
fs
mov
out
repnz
adc
xor
jae
pop
arpl
pop
test
cmp
mov
jmp
push
lret
mov
cld
aam
push
loope
push
adc
add
scas
test
cmp
gs
pop
lods
into
jmp
pop
xchg
in
or
popf
movsl
repnz
cmp
gs
push
lods
xchg
and
sub
in
push
add
leave
inc
or
out
inc
in
fimuls
add
scas
aam
icebp
lea
pop
jne
xchg
add
scas
inc
jno
inc
shr
xchg
inc
mov
push
arpl
sbbb
je
in
adc
fdivr
test
daa
cld
inc
ds
adc
outsl
loopne
push
addr16
jp
sub
enter
dec
push
lods
int
or
sub
bnd
jge
loope
cltd
add
sub
mov
daa
or
jnp
or
outsl
push
loop
dec
out
push
pop
jne
mov
mov
jbe
addr16
pop
jmp
fstpl
test
loop
and
xchg
in
sub
lret
divl
mov
push
lret
adc
jg
bnd
inc
sbb
rcrl
pop
push
add
sub
mov
imul
in
push
or
dec
ror
jmp
adc
xchg
mov
add
mov
push
loope
sub
mov
mov
mov
xor
mov
andl
add
mov
loope
adc
inc
pop
mov
outsl
sub
repnz
outsl
andb
push
inc
xchg
dec
adc
dec
and
gs
pusha
push
mov
gs
sbb
jns
popf
pop
mov
or
jl
jle
pusha
sahf
inc
in
sbb
add
fidivrl
mov
insb
mov
add
and
movsl
adcl
jg
in
push
mov
roll
lods
cld
dec
and
sbb
push
pop
mov
cli
cs
pop
fsubrp
rol
int3
mov
addr16
not
out
mov
loop
push
aam
ljmp
xchg
pop
sub
or
scas
inc
pop
in
stos
out
adc
sub
insb
dec
bound
push
inc
roll
and
dec
int3
ret
or
test
cmpb
pop
pop
push
cmp
bound
iret
mov
int
sti
je
movsb
and
js
mov
sahf
lcall
xor
lret
xor
mov
jo
jecxz
dec
rolb
adc
dec
loop
out
xchg
cmp
fidivl
sbb
fdivrp
test
pop
movsl
mov
inc
insl
and
insl
adc
jo
ljmp
push
mov
pushf
filds
inc
lcall
sti
pop
insl
mov
rcr
repz
jge
mov
mov
mov
pop
neg
pop
shlb
add
rclb
cli
stc
scas
mov
fidivl
rcr
pusha
loope
push
xchg
sbb
stos
test
ror
out
mov
dec
sbb
xchg
pop
adcl
dec
sbb
xor
sbb
inc
sbb
popa
sbb
fdivrp
xorb
inc
cmc
xchg
dec
leave
mov
je
js
lret
out
imulb
push
hlt
sub
push
pushf
jns
cltd
add
lret
imul
incb
mov
inc
pusha
stos
out
pop
mov
xchg
stos
dec
sub
pusha
mov
pusha
mov
bound
sbb
and
repnz
xchg
lcall
mov
mov
add
dec
and
jo
cmp
cmpsb
fcmovb
int3
mov
shr
xchg
jecxz
cli
in
jae
fimull
les
pop
lret
inc
adc
jns
or
xchg
cli
jnp
adc
pusha
dec
adcb
aam
jne
mov
out
pop
aaa
push
add
pop
pushf
aam
xchg
mov
cwtl
cli
adc
pusha
jmp
out
jno
shrb
fimull
loope
xchg
imul
in
cltd
in
dec
or
icebp
fxch
pop
mov
adc
fildll
xor
ret
add
pop
sbb
push
bound
fwait
adc
andb
mov
and
mov
rorl
and
sti
xchg
lea
pop
push
mov
push
ficoml
into
xorl
inc
mov
cmp
xchg
aaa
fstpl
xor
int3
sti
in
les
test
add
rol
or
lret
mov
adc
mov
sarb
xchg
dec
stc
mov
in
pop
addb
mov
les
add
pmaxub
inc
mov
add
or
flds
xchg
loopne
pop
imul
push
fwait
sti
xor
cwtl
or
and
push
stc
or
mov
pop
adcb
cmp
imul
ficompl
fdivrl
mov
stos
jmp
mov
xchg
imul
sbb
pushf
dec
test
mov
imul
and
mov
inc
pushf
aas
or
jo
pop
inc
ret
movsb
icebp
fidivrs
scas
loope
dec
cli
repz
pushf
testl
sbb
jae
xlat
mov
adc
in
or
inc
adc
test
adc
roll
jge
stos
or
cli
jns
roll
adc
loopne
jmp
stos
xchg
stos
rcrl
xchg
cmp
mov
subl
sahf
mov
lret
adc
add
cs
cmp
lock
push
sbb
mov
mov
imul
or
sbb
sahf
test
xchg
and
cld
icebp
in
push
or
fdivrl
xchg
lods
nop
push
mov
std
mov
mov
idivb
xorl
stos
add
fwait
mov
mov
stc
shrb
aad
andl
mov
push
xorb
mov
xchg
push
mov
pop
lret
xor
cmpsl
iret
push
repnz
pop
jo
in
xchg
and
dec
dec
addl
outsl
out
mulb
into
cmp
or
or
xor
out
int3
inc
aad
mov
sti
int
out
pop
push
add
movsb
pop
lcall
mov
ss
aas
cld
ret
movsl
jnp
xlat
pop
movsb
and
cmp
xchg
xor
je
shll
lret
jle
fwait
and
fldln2
and
mov
int3
cmp
test
ret
xor
test
add
mov
push
je
inc
ret
and
xor
fidivl
jg
inc
mov
mov
jne
sub
insb
popa
mov
test
pop
iret
xchg
and
cmp
icebp
or
push
add
cmp
ret
lcall
ret
or
jbe
addr16
jle
and
add
pop
sahf
push
mov
aad
cmpsb
mov
mov
pop
flds
pop
push
or
xor
sbb
rcrb
push
inc
inc
stos
cli
mov
lret
pop
aad
gs
add
pusha
pop
lods
lea
sbb
mov
mov
xchg
xor
pop
push
sbb
jp
out
popf
test
inc
es
inc
push
cli
stc
lea
lds
aam
xchg
ss
rcrb
es
mov
mov
cs
mov
cmpl
out
mov
jb
inc
aam
xchg
mov
pop
cmp
testb
popa
or
dec
movsl
addr16
nop
hlt
or
arpl
sbb
pop
je
js
or
lret
subb
nop
lods
mov
fists
and
loop
pushf
lock
adc
pop
push
jno
or
pushf
adc
icebp
sub
jns
lods
xlat
add
enter
addr16
jo,pn
jae
lahf
mov
pop
adc
xchg
aas
push
icebp
outsl
or
imul
outsb
mov
sbb
in
bound
or
mov
mov
mov
xchg
loope
cmp
sub
cwtl
lea
fcomip
loopne
xchg
inc
xor
mov
adc
outsb
cmpl
in
test
mov
dec
into
aad
outsb
sbb
push
loop
jl
nop
dec
bound
pop
xor
and
aad
mov
mov
pop
mov
lahf
pop
sbb
aam
addb
repz
setp
sbb
add
int
inc
mov
outsb
mov
in
in
dec
aad
rcrl
imul
int
js
imul
add
hlt
jae
dec
rolb
cld
pop
lret
lods
dec
mov
mov
nop
jnp
inc
je
sbb
and
je
sahf
and
sbb
xor
xchg
ret
xchg
shrl
xchg
in
outsl
scas
fbld
and
lcall
scas
and
out
add
mov
fisttps
add
shlb
cmp
mov
test
pusha
mov
sub
cld
fwait
mov
dec
lcall
adc
push
or
lahf
cmpsl
outsl
jecxz
or
out
pop
mov
nop
pusha
pop
sbbl
and
sub
and
xchg
shr
sub
fcomps
popf
pop
xor
add
xchg
imul
push
loopne
xchg
pop
cmc
sub
pop
imul
shll
lcall
sahf
outsl
loop
mov
sbb
adc
imul
mov
push
pop
inc
test
cmpsb
repz
ret
addb
pop
roll
mov
push
inc
int
mov
xor
mov
lahf
lods
xchg
lea
mov
hlt
lods
test
in
test
mov
dec
sbb
sbb
push
mov
lods
fisubrs
dec
xor
mov
fcmovnb
or
jnp
cmp
fcomp
mov
and
add
mov
mov
inc
inc
shrl
dec
pop
sub
pop
call
adc
push
adc
idivb
push
xlat
stos
xlat
pop
gs
shll
inc
inc
sbb
sub
or
mov
icebp
adc
cli
pop
add
xchg
int
out
push
scas
cli
movsl
mov
sbb
push
mov
shr
mov
pop
and
jge
testl
sub
pop
lret
out
xor
lcall
not
mov
jge
lcall
lock
xlat
lahf
add
aas
lods
dec
mov
xor
leave
hlt
sbb
xchg
in
dec
push
cmc
adc
lock
mov
sbb
rcll
out
mov
std
loope
std
xchg
adc
gs
sti
bound
push
jbe
lret
jne
std
jnp
add
loope
scas
or
xchg
fs
dec
jle
add
xor
push
mov
scas
pop
insb
jb
cld
pop
add
daa
pusha
xchg
imul
sahf
fiaddl
and
cmpsb
loope
and
jp
sbb
cmp
dec
mov
dec
or
enter
test
negl
mov
addr16
adc
dec
inc
cmpsb
mov
jge
bound
mov
popf
ret
repz
adc
pop
repz
inc
pop
jp
loope
je
push
inc
ret
push
or
nop
repz
test
xor
pop
xlat
add
mov
jecxz
scas
xlat
ret
lds
in
pop
leave
dec
repnz
lea
jl
lea
cmc
sbb
bound
scas
add
or
pushf
sbb
cli
push
sarb
or
and
call
int
out
inc
ljmp
inc
aas
jmp
stos
mov
pop
js
stc
leave
fs
fcomip
fdiv
ja
enter
bound
sbb
cwtl
dec
pop
mov
aam
mov
and
in
decb
add
or
out
shrl
fistpll
xchg
lea
stos
and
je
sbb
dec
jnp
andl
jno
fsubp
push
test
xchg
inc
fidivrs
mov
jbe
or
adc
dec
or
cmp
lret
push
int
sbb
add
pop
popf
test
dec
push
cmp
lahf
hlt
sub
pop
lret
cwtl
pop
add
pusha
mov
and
and
push
sti
lcall
js
rclb
pop
sahf
ss
push
cli
lret
or
or
sub
orb
ficomps
push
ret
andl
in
inc
add
cltd
sub
repnz
aaa
ja
push
or
pop
std
insb
ret
or
fwait
inc
add
inc
aaa
adc
push
inc
sbb
sbb
cld
pop
andl
mov
sti
movsl
in
aaa
pop
loop
dec
shrb
sub
popf
lods
stos
in
movl
dec
jge
jne
cmp
imul
and
rcrl
jbe
xchg
push
scas
fsubrl
cmpsb
fcmovnbe
cld
leave
scas
imul
nop
dec
push
xchg
das
movsl
or
stos
fadds
pop
dec
int
ret
mov
adc
mov
shll
ja
lret
mov
mov
subb
out
pop
std
pusha
pop
cli
adc
int
arpl
stos
or
xchg
std
cmp
cmp
sbb
push
or
scas
pop
ds
pop
sbb
mov
add
fneni(8087
cwtl
es
rcll
lods
and
cmp
sub
and
lret
punpckldq
and
stos
jge
fst
sub
sub
leave
pop
movsl
cmpsl
xchg
call
bound
push
daa
filds
movsl
movsb
subl
lods
cld
shrl
jnp
jg
push
sbb
cmp
pushf
jp
in
aad
adc
stos
insl
xchg
jo
sbb
rcrb
inc
paddw
and
adc
push
subl
and
xor
fldl
cmp
scas
pop
and
out
lock
xchg
cmp
ret
xchg
xor
cmpsl
pusha
enter
mov
pop
and
add
mov
mov
cmp
xorb
add
pop
inc
das
fistps
es
or
cld
sarl
lret
fs
test
xor
jns
xchg
and
das
arpl
fsub
int
subb
and
mov
out
mov
or
insl
mov
clc
xor
icebp
gs
fsubp
add
test
pop
ret
add
jbe
xor
adcl
jns
adc
pushf
jmp
outsl
xlat
xchg
aaa
std
test
adc
push
xlat
push
pop
xlat
adc
inc
sbb
dec
sbb
filds
mov
xor
int3
out
dec
jae
cld
mov
and
adcl
cmc
mov
sub
xchg
out
out
xorb
rorb
jo
push
rol
adc
adc
mov
sub
repnz
cmp
out
adc
cwtl
push
adc
mov
mov
imul
mov
pusha
sbb
jo
xor
incb
sti
les
dec
repnz
xor
xor
lcall
gs
cmpsb
mov
dec
mov
inc
push
xchg
xchg
ret
loop
ja
mov
push
mov
and
jmp
or
sub
outsl
cmpsb
ss
pushf
push
mov
out
sbb
lcall
add
or
cmpsl
pusha
jecxz
js
jecxz
sbb
cmp
jg
jge
xlat
leave
arpl
test
outsl
add
inc
push
inc
mov
mov
cmp
adc
in
sbbl
pop
add
int
mov
bound
xchg
xchg
adc
in
sbb
mov
pop
cmpsl
xor
mov
lea
add
loopne
xchg
fcomps
xorl
imul
xor
pop
adc
loope
jae
mov
mov
jns
pop
push
iret
stos
sbb
mov
ja
xor
or
inc
push
jns
std
push
bound
jge
add
fwait
cmp
stc
fimull
fisttps
cmpsl
iret
insl
push
push
fiadds
test
adc
outsb
inc
popa
mov
and
lock
jecxz
pop
mov
aas
inc
mov
push
jl
or
xorb
repnz
rorb
arpl
push
in
js
scas
filds
mov
adc
inc
mov
jl
addr16
fldt
push
test
lret
aaa
int3
ffreep
pusha
scas
mov
mov
bound
test
aaa
shl
insb
push
popf
sbb
mov
or
inc
icebp
sahf
add
aam
ds
xor
addr16
push
mov
stc
test
scas
xchg
int
lods
fisttps
lcall
scas
loop
je
fiadds
mov
xor
loopne
mov
mov
xchg
inc
mov
pop
cmp
inc
mov
loopne
mov
push
mov
out
mov
add
in
jbe
or
xchg
shr
add
rcll
cwtl
sbb
cli
lock
aad
mov
jnp
ret
fwait
inc
scas
bound
dec
sub
pop
mov
dec
mov
sbb
repnz
fwait
add
les
js
lcall
in
addl
dec
cmp
das
adc
ss
movsb
xchg
orl
mov
add
movsb
and
jbe
cmpsl
inc
add
pusha
mov
push
dec
cmpsb
cmpsb
xchg
adc
mov
dec
add
xchg
inc
add
ret
jmp
and
jb
push
inc
lahf
pusha
push
mov
cmp
hlt
enter
in
pop
insl
cmpl
cmp
fbstp
shrl
jns
sbb
add
pusha
and
push
dec
mov
outsl
loope
adc
mov
fisttps
add
xchg
pop
mov
dec
ret
in
or
sub
shlb
inc
andb
ficoml
mov
sbbb
xchg
add
mov
or
lods
add
sbbb
rol
in
mov
cmpsb
jbe
pop
pop
and
xor
out
mov
inc
jns
lcall
mov
push
fstpt
push
xchg
in
or
movsl
call
lock
out
cmp
cmp
xor
test
shll
stos
icebp
xchg
and
xor
outsb
lret
dec
mov
jbe
cwtl
lcall
pop
testl
mov
in
out
jnp
inc
adc
stos
inc
mov
pop
xchg
jno
inc
lods
icebp
dec
loopne
mov
dec
or
outsb
dec
outsl
insb
pop
imul
sbb
in
push
arpl
dec
scas
repnz
lcall
call
dec
push
clc
push
mov
imul
cld
inc
ret
jae
lret
add
sahf
sub
scas
or
xorl
scas
push
movsb
inc
adc
mov
push
and
test
mov
popf
lods
sbb
mov
ds
sub
pop
repz
sbb
and
sbb
or
enter
ret
mov
and
cli
xlat
je
mov
xchg
push
sbb
dec
xor
cmp
mov
jl
xchg
arpl
stos
and
stos
adc
xor
or
pop
fisubs
mov
cmp
cmova
out
xor
adc
fcoms
iret
pop
xor
sti
push
sarl
test
adc
sbb
inc
push
cmp
and
mov
shll
mov
iret
push
jmp
mov
mov
aaa
pop
jae
sti
popf
pusha
lcall
pop
mov
rolb
pop
movsl
push
clc
sti
shl
add
xchg
xchg
pop
pop
testl
jle
and
or
das
inc
aam
pop
cmpsl
outsl
rcll
mov
clc
cmp
ret
subl
pop
push
adc
in
lock
jne
fsubp
rcrb
mov
popa
enter
repz
leave
cmpsb
dec
xor
rorl
pop
repz
repz
fsubl
cmpb
addr16
xchg
and
out
icebp
sbbl
scas
ret
inc
mov
das
cmp
jecxz
push
lahf
inc
mov
jle
std
pop
mov
nop
add
rorl
sti
adc
pop
fldl
mov
mov
mov
mov
sbb
adc
pusha
push
movsl
std
bound
shll
stos
lods
fcmovb
inc
mov
xchg
rcll
dec
sub
mov
les
or
std
sbb
xor
test
and
sbb
cmpb
cmpsl
dec
or
lds
outsb
fbstp
xchg
mov
dec
mov
dec
mov
pusha
fiaddl
sub
push
jl
mov
les
push
or
stos
sahf
scas
sbb
fcoml
ret
std
jnp
arpl
mov
rcrb
and
and
xor
mov
test
out
out
sbb
lock
outsl
lcall
stos
add
xchg
xchg
xchg
shlb
out
pop
ret
jg
int3
out
ror
idiv
adc
fstp
jle
into
rorb
popf
sbbb
cs
and
movsl
jmp
or
jp
stc
mov
xchg
int3
lss
cltd
sbb
sub
pusha
and
cmp
movsl
cwtl
and
push
dec
push
shl
in
xor
inc
cmpsl
inc
xor
insl
insl
ja
mov
jb
pop
scas
in
mov
lret
cli
ret
xchg
xchg
sbb
les
and
dec
xchg
push
push
fsubrs
mov
pusha
jp
mov
inc
fisubrs
fsubrs
fdivl
cmovno
int
inc
aad
mov
jne
mov
and
or
loopne
adc
test
testl
pop
jp
cmp
and
xchg
jecxz
and
add
sahf
jl
shlb
mov
flds
mov
mov
pusha
test
inc
adc
outsl
push
add
inc
loop
ret
cmpsl
andb
int3
inc
push
stc
jnp
push
pushf
cwtl
inc
add
aas
fsubrl
xchg
xchg
or
or
fistpll
loop
int3
lds
movsb
push
sub
test
inc
clc
jecxz
push
lods
sti
xchg
bound
or
jge
push
pop
fsubrl
insb
out
jo
push
lods
adc
loope
cmp
jns
mov
inc
push
mov
fisubl
jns
inc
xor
mov
insb
sbb
pop
lods
sbb
sar
arpl
jae
dec
xchg
mov
cmp
jbe
xchg
cmp
mov
iret
pusha
cmp
mov
cmp
jecxz
movsl
imul
mov
bound
inc
popa
les
in
clc
scas
lcall
mov
mov
mov
lock
jecxz
pusha
mov
add
lea
inc
leave
lret
pop
insl
adc
dec
push
sti
cmp
sbb
or
push
pusha
pop
outsb
loope
adc
mov
testl
adcl
jbe
xchg
mov
imul
xchg
mov
push
aas
out
test
jo
mov
add
and
mov
jo
inc
stc
push
mov
arpl
jp
cmp
std
push
neg
push
mov
mov
jnp
sbb
inc
or
test
shll
pusha
xor
and
sbb
stos
lods
sub
add
movsl
loopne
cld
mov
cmc
sarl
out
adc
pop
adc
fucomp
mov
fsubl
lret
scas
int
push
subb
and
pop
shrb
mov
add
adc
into
pop
fisubs
pusha
cmpsl
lods
fsts
push
cmp
sti
movsb
pop
stc
into
and
mov
push
stos
in
add
push
cmp
cmpsl
mov
outsb
push
ljmp
lods
push
fwait
cs
xor
dec
jg
pop
push
fstpt
addr16
mov
out
dec
sbb
inc
or
fildl
mov
fdivl
test
fwait
es
lods
aas
fwait
pushf
repz
pusha
stc
dec
ficoms
gs
lret
cli
pop
int3
fisttpll
add
xchg
scas
movsl
data16
push
sbb
pushf
stc
add
push
repnz
jo
pop
push
mov
mov
loope
add
push
bound
jle
lret
pop
xchg
xor
mov
cs
out
mov
dec
call
xchg
sbb
je
xorl
pop
movsl
dec
sbbl
pop
orl
arpl
in
fstpl
or
fdivrp
push
repnz
mov
push
mov
aas
popa
out
icebp
mov
lock
ds
and
push
fs
add
jp
xor
jbe
outsb
aaa
pop
test
cltd
mov
cmp
jb
rorl
and
pop
jecxz
in
cmpsl
add
sub
sbb
mov
xchg
jg
pusha
lret
xlat
xor
or
mov
in
dec
add
mov
push
in
andl
adc
cmp
shlb
dec
out
cmp
dec
aaa
add
repz
mov
es
in
scas
popa
das
imul
push
std
bound
dec
dec
sub
int
sti
hlt
sub
jg
pop
push
aaa
jecxz
inc
xlat
repz
dec
mov
pop
cmp
inc
push
mov
mov
fstpt
cli
jl
mov
fisttpll
lods
mov
adc
add
jb
ret
movsb
sahf
lret
and
cmp
push
adcl
pop
test
out
mov
sub
pop
dec
loop
movsb
test
enter
mov
mov
inc
leave
dec
mov
cmp
arpl
adc
pop
cli
sbb
mov
jmp
inc
push
xchg
mov
incl
loope
cmpb
and
movsl
add
ret
xchg
mov
mov
xchg
mov
cmp
xor
cmpps
and
lds
and
popa
iret
in
bound
fistpl
loope
mov
roll
repnz
aaa
xchg
mov
scas
stos
mov
or
push
cmpsl
mov
in
ret
inc
scas
enter
pop
xchg
add
cmp
xor
jp
xchg
in
mov
push
xor
add
sub
or
push
sub
push
shr
xchg
addr16
sub
mov
fidivrs
stos
push
icebp
aaa
sbb
mov
test
daa
sti
loope
and
stos
add
out
add
mov
sub
aam
push
mov
pop
jp
mov
jo
pop
stos
repnz
jb
in
adc
and
rorl
inc
pop
inc
sbb
dec
in
dec
mov
xor
stos
loope
insl
mov
ds
lret
out
in
insl
adc
sti
bound
rol
lret
mov
adc
scas
xchg
inc
in
leave
push
rcrb
mov
pop
xchg
inc
fsubrl
sahf
sbb
xchg
cmc
lret
sub
or
mov
pop
push
lcall
adc
std
outsl
incl
or
dec
jmp
in
dec
cld
fs
dec
and
jnp
sti
dec
xchg
sub
xchg
xlat
jecxz
pop
push
cmp
bound
sbb
out
jae
pop
cmp
loope
push
lret
bound
popa
jno
dec
fcmovbe
push
mov
adc
sub
pop
inc
adc
inc
fiadds
pop
mov
sti
shll
add
stos
pusha
addr16
mov
jp
ficompl
xorl
test
push
mov
add
pusha
popf
sub
cmp
xor
cmp
jle
fucomp
xlat
mov
stc
shll
push
mov
sbb
inc
rol
pop
xchg
int
cmp
sarl
dec
mov
bound
loope
outsl
mov
inc
pop
mov
and
pop
and
popa
lret
add
add
mov
fwait
pusha
xor
roll
xchg
lret
add
xor
sahf
mov
aad
movsl
and
pop
cli
inc
mov
pop
into
pop
jb
into
inc
jnp
subb
test
and
mov
mov
pop
xchg
fmull
lahf
popl
lea
jae
mov
rorl
adc
loop
insl
stos
cmp
fists
cld
pusha
and
in
cmp
aam
flds
inc
fistps
inc
push
scas
sbb
mov
js
cmpsb
xor
clc
mov
rep
mov
jo
mov
lods
adc
fdivr
lds
sbb
push
jne
clc
std
mov
jns
decl
insl
sub
aam
adc
clc
cmp
inc
lods
clc
ret
stos
loop
add
ds
iret
mov
aad
xlat
adc
fsubrp
xor
jg
ja
insl
add
jecxz
sub
pusha
adc
pusha
or
incl
pop
arpl
mov
js
shrb
dec
adc
sbb
and
test
push
mov
pusha
faddl
int
xchg
push
fwait
int3
hlt
imul
xlat
repz
pop
iret
pusha
cmpsl
mov
pop
or
jg
lahf
clc
shll
rolb
or
int3
xchg
test
mov
xchg
pop
adc
sub
hlt
popa
cmp
addr16
sarl
ret
mov
cmpsb
jae
repz
out
cmpsl
fiaddl
sbb
nop
dec
daa
jno
sub
xchg
jl
pop
xor
lret
add
roll
jne
dec
jno
scas
sbb
lock
outsl
shrb
aad
sbb
rcl
icebp
adc
add
push
leave
lahf
movsl
adc
addr16
fdivrp
stos
xchg
insl
add
ficoml
mov
movsb
test
add
and
adc
jo
shlb
int
lea
jmp
cmp
ret
idiv
sti
dec
ljmp
inc
movsl
add
cwtl
sub
daa
popf
push
push
jbe
fwait
shlb
popa
clc
jno
push
ret
cmc
cli
mov
in
pop
jge
sbb
lea
mov
lea
adc
dec
arpl
pop
mov
scas
dec
movsl
dec
aas
pushf
rclb
inc
negb
jo
mov
sahf
mov
daa
or
xchg
fdivrs
sahf
fdivrl
outsl
pop
dec
fs
xchg
mov
mov
out
bound
mov
aas
icebp
sub
rclb
fst
hlt
mov
inc
jno
loop
repnz
gs
adc
movsl
xor
mov
dec
test
popf
rcl
and
mov
jnp
jl
sub
lds
scas
pop
dec
imul
mov
pusha
mov
push
cmp
mov
push
inc
nop
xchg
mov
push
std
jb
mov
pop
xchg
add
adc
fldenv
iret
jecxz
fistps
mov
dec
sbb
xchg
add
sbb
mov
mov
repnz
lret
mov
mov
xchg
out
mov
pop
xor
jbe
lds
bound
xchg
cmp
lcall
rorb
cmp
sbb
push
and
cwtl
dec
pop
jb
loopne
fstp
jno
adc
cmp
dec
clc
push
dec
or
jno
cmpsb
repnz
movsl
jl
mov
xchg
hlt
gs
loopne
xchg
or
sbb
addr16
stos
leave
test
jae
sbb
fcmovbe
popf
mov
xor
xlat
adc
icebp
xchg
sahf
push
std
dec
addl
pop
dec
outsl
call
and
add
rcll
scas
fs
mov
jnp
scas
xor
mov
cmp
inc
mov
hlt
subb
mov
dec
subl
dec
ret
ret
xlat
stos
fisubrs
pop
daa
cld
ret
push
add
jnp
ja
adc
and
lods
mov
mov
mov
add
cmp
sahf
aaa
iret
lods
outsb
jb
add
iret
daa
xor
cs
xchg
xchg
inc
scas
cltd
dec
sub
movsb
insb
mov
lret
jae
inc
cmp
mov
pusha
das
pushf
cmpsl
shl
ja
in
or
movsl
or
jnp
jo
insl
add
adc
jl
mov
jae
dec
in
mov
mov
cmp
mov
pop
fisubl
popa
arpl
pop
push
sub
and
mov
sbb
shr
stos
jnp
pusha
sbb
fld
mov
subb
xchg
push
xchg
cmp
push
sbb
push
int3
and
js
scas
cmpsb
push
adc
jl
and
sarb
test
int
out
push
xor
cmp
test
inc
in
xchg
or
sbb
imul
mov
in
inc
lock
les
pop
int3
stos
cmp
addr16
fistl
mov
push
bound
roll
out
pop
fnstenv
fldenv
and
int
sti
stos
je
pushf
xor
jecxz
add
cmp
loopne
hlt
xlat
shr
leave
sub
in
sbbl
pusha
outsb
mov
xchg
out
mov
dec
repz
pop
lahf
inc
fs
lcall
jbe
xchg
insb
rorb
je
mov
xor
movsl
or
jbe
in
cmp
sbb
and
popf
adc
outsl
inc
inc
or
in
push
int3
sbb
sub
sub
mov
dec
xor
jmp
mov
out
jg
cmpsb
std
imul
xor
loope
cmp
pop
mulb
jbe
or
lret
xchg
adc
es
scas
adc
pop
fldenv
jnp
ret
mov
dec
cmpb
pusha
pop
push
testb
ljmp
repz
push
rol
js
sub
rcll
inc
xchg
loope
pop
nop
push
hlt
dec
or
push
lods
pusha
repz
sbb
cmpsl
rorb
sub
in
push
push
add
inc
movsl
xor
push
mov
sub
test
push
loop
test
stc
push
pusha
push
add
popl
inc
andb
push
jl
imul
inc
lods
loope
popa
ret
imul
andb
mov
inc
arpl
lcall
add
sbb
daa
int
imul
sbb
test
out
pop
mov
shlb
xor
sub
xor
mov
xchg
scas
jp
xlat
mov
addr16
shll
jecxz
add
stos
js
push
dec
adc
inc
bound
or
insb
ss
mov
xor
das
mov
les
mov
jp
sbb
pusha
dec
out
insl
mov
dec
shll
dec
jno
adc
jae
arpl
rorl
jo
das
xor
repnz
jmp
dec
pusha
adc
lods
lods
shll
add
xchg
add
mov
inc
mov
dec
shll
ja
mov
jp
ret
and
movsb
inc
sahf
lock
mov
jl
xor
roll
lcall
stc
push
rorb
push
ret
fldenv
cmp
add
push
mov
dec
mov
stc
ret
pusha
lods
xlat
arpl
or
add
cmp
jle
or
ja
mov
bswap
mov
popf
rol
ret
frstor
mov
add
push
daa
mov
pop
and
mov
cli
sbb
call
jmp
sub
ret
bound
into
dec
mov
push
sahf
xchg
lea
and
pop
inc
cs
roll
or
mov
xchg
sar
addr16
mov
cmpsb
mov
mov
pusha
adc
shlb
pushf
lcall
push
jno
out
add
ficomps
iret
rorl
aas
imul
sbb
pop
and
mov
scas
nop
jle
pop
dec
andl
aas
adc
inc
mov
cmp
lret
stc
movsl
clc
pop
lds
js
inc
fistps
adc
test
pusha
fwait
or
xchg
dec
into
lahf
and
sbb
pusha
addr16
loopne
jle
jae
jge
inc
imul
mov
inc
sarl
aad
and
rorb
push
adc
and
mov
fwait
loopne
out
lahf
cmpl
test
outsl
in
jns
fsubrl
sbb
mov
inc
and
fstl
bound
cmp
sbb
cmpsb
inc
mov
faddl
sbb
mov
stos
sub
jl
adcb
ds
lret
xor
popf
out
outsl
insl
mov
sub
xchg
push
cmc
pop
lods
enter
cmpsl
xchg
pop
jp
roll
cmp
push
pop
inc
fbld
arpl
adc
jno
push
push
jno
filds
adc
add
mov
bound
add
mov
cmpsl
mov
test
pusha
pop
cmc
or
add
call
insl
mov
lods
in
push
cmp
ljmp
jnp
add
or
mov
iret
inc
mov
rol
and
pop
insb
xor
gs
sbb
bsf
rorb
mov
in
aaa
mov
dec
jle
gs
and
sti
xchg
sti
jbe
scas
mov
dec
fst
repz
or
mov
inc
sub
xchg
fadds
lock
outsl
roll
cltd
mov
cmp
mov
adc
sub
pusha
xlat
xorb
das
loope
push
aad
mov
outsl
mov
popf
or
pop
test
addr16
cmp
in
stc
mov
or
xor
fidivs
cmp
out
push
out
xchg
push
roll
ljmp
adc
icebp
rorl
sar
cmp
subb
push
inc
bound
repz
pusha
pop
inc
or
test
mov
fiadds
pop
subl
popa
fnstcw
dec
push
rcr
pop
mov
aaa
fstpl
mov
je
ret
mov
cmp
std
sub
push
repnz
mov
mov
inc
push
loopne
das
and
inc
enter
call
cld
mov
xor
push
iret
es
sti
std
push
and
and
stos
dec
xor
pop
leave
fsubr
popf
clc
mov
xor
lret
cmp
jne
sbb
push
and
mov
test
dec
pop
jb
and
fistps
push
ficoml
cli
test
add
mov
add
mov
jae
out
arpl
cltd
or
mov
or
outsl
sbb
mov
sbb
pop
adc
sbb
lock
sbb
lcall
push
addr16
sbb
test
int3
mov
pusha
sbb
fnstsw
sub
dec
jns
repz
sbb
and
cmp
jo
adc
xor
mov
inc
sub
inc
repz
mov
or
jo
mov
jmp
sub
rcl
test
pop
scas
add
cmc
addr16
repz
mov
arpl
enter
sbb
cs
push
cmpsb
stos
aas
pop
mov
lret
mov
and
xchg
scas
pop
inc
stos
adc
outsl
fdivrs
and
push
dec
mov
push
pop
orl
sub
jge
addl
loop
bound
cmpsl
cltd
mov
out
in
and
fistps
imul
frstor
jb
jno
xlat
mov
fs
pushf
xchg
test
rorb
sbb
mov
sbb
adc
and
sbb
or
mov
jb
or
std
lods
lock
add
adc
mov
mov
fiadds
rclb
shl
jnp
inc
aaa
sahf
cmpb
iret
sub
pop
je
arpl
repnz
gs
fsubs
fs
inc
sahf
mov
pop
jmp
lods
hlt
pusha
aas
mov
mov
iret
pop
int3
pop
push
inc
push
mov
cmc
lret
fsts
jno
and
push
cwtl
cs
int3
push
jnp
mov
out
adc
push
or
jmp
mov
fsubl
push
loope
xchg
cmp
scas
mov
mov
loope
repnz
mov
loope
fsubl
dec
mov
ss
and
jl
in
rcrb
push
mov
mov
xchg
cmpsb
push
dec
fdivl
inc
sti
jecxz
and
dec
jle
and
insb
ljmp
mov
jo
push
aad
jmp
cltd
and
push
lods
addb
mov
sbb
mov
sahf
mov
mov
cmc
jl
out
aas
icebp
xlat
insl
cwtl
fs
add
sub
pop
jmp
je
lods
daa
repz
jp
jns
xchg
test
mov
inc
pop
lcall
add
push
add
sarl
pop
stos
adc
sti
xchg
cmp
repz
imul
and
xlat
pop
pusha
xor
int
bound
push
rcll
aaa
flds
mov
pop
hlt
or
out
or
das
pusha
icebp
repz
call
ds
add
jae
outsl
lcall
xor
mov
lock
push
cmp
pusha
hlt
mov
repnz
sbbb
sahf
xchg
jno
add
xchg
rcl
mov
fstl
jle
in
jns
mov
cmp
in
ret
vpandnq
popf
mov
imul
xor
subb
push
enter
pushf
pop
mulb
fiadds
sarb
mov
loop
movsb
adc
dec
loope
sar
stos
cmp
mov
fcomps
out
lret
addr16
mov
xchg
rorb
cmpb
bound
loope
aaa
and
fmull
out
xor
add
stos
ret
xchg
inc
or
icebp
mov
es
push
int3
sub
loopne
jmp
jmp
mov
cmp
sub
push
xlat
lret
aas
bound
xlat
mov
or
push
pop
fucom
pop
subl
jg
sbb
ret
loope
dec
dec
pop
pop
fnstcw
iret
cmc
mov
mov
inc
repz
std
cld
cmp
jmp
rclb
pop
lret
std
mov
jl
sbb
and
icebp
fisubl
mov
aam
cmc
jg
dec
mov
add
pop
repz
ljmp
mov
add
inc
aam
rcl
sbb
test
jmp
sub
jae
adc
cmp
mov
fists
xchg
hlt
pop
jg
mov
rcr
pop
gs
mov
dec
sbb
sti
jle
addb
pusha
into
test
in
loope
dec
std
sbb
iret
jmp
mov
in
bound
fbstp
out
repnz
cmp
sahf
and
lcall
mov
mov
dec
cmp
push
fucom
sbb
or
inc
ret
test
jae
fisttpll
pop
add
inc
or
pop
pushf
pop
stos
xor
mov
dec
fs
sti
cmc
pop
pusha
adc
xchg
inc
xchg
data16
out
xchg
xor
mov
xchg
or
push
xchg
mov
xor
enter
shll
push
outsl
rorl
scas
push
push
shl
push
mov
cs
decb
fsubl
push
mov
jb
pop
cmpsl
jbe
and
bound
dec
or
xchg
sahf
push
jbe
nop
shlb
or
or
rcrb
jecxz
shrl
dec
loope
pop
jmp
sbb
adc
lods
rcll
mov
inc
add
jge
jo
add
outsl
mov
or
pop
addr16
mov
lods
scas
cltd
in
pop
xor
cmpsb
aad
or
mov
mov
mov
pop
shl
lds
scas
mov
call
dec
mov
sbb
mov
daa
mov
lret
arpl
enter
mov
es
fisubs
pusha
bound
dec
jnp
and
mov
xchg
add
das
dec
mov
aad
stos
out
mov
xor
icebp
mov
insb
dec
loope
fiaddl
shlb
lret
pop
add
popf
add
fimull
mov
mov
xchg
pop
mov
mov
dec
jae
mov
pop
inc
insl
pop
push
mov
adc
int
mov
leave
or
enter
loop
xchg
out
or
ret
rcrb
push
inc
cmp
mov
push
mov
inc
push
clc
xchg
sbb
mov
arpl
pop
sub
sub
aas
les
lcall
mov
out
sbb
nop
xchg
push
mov
pop
mov
ds
jecxz
bound
sti
adc
outsb
mov
cmpsl
pop
adc
and
add
lds
xchg
xor
mov
call
imul
movsl
inc
and
push
jns
fwait
das
cmpsb
pop
movsb
test
jns
or
push
jno
and
addr16
mov
pusha
inc
add
clc
mov
out
pop
xlat
insb
jg
into
fiadds
and
xor
test
cmpsl
repnz
pop
nop
nopl
xchg
repz
sub
outsb
in
loopne
add
pop
and
pop
daa
pop
sub
xchg
pop
add
pop
and
aas
js
insb
loop
push
icebp
movsl
adc
loop
pusha
sbb
mov
sub
push
sbb
and
test
subb
or
in
jo
je
in
add
jne
push
inc
mov
popa
pusha
pop
test
sub
cmp
int3
mov
fmuls
daa
inc
cmp
cmp
pop
add
mov
pusha
sbb
inc
fcoms
loope
mov
xchg
rclb
mov
jno
iret
das
pop
aad
adc
ds
xchg
les
data16
pusha
icebp
out
imul
jae
mov
dec
dec
test
stc
push
xchg
outsl
xchg
mov
inc
add
into
aas
mov
xchg
push
add
adc
aad
jg
sahf
xchg
aas
pop
jb
dec
or
inc
sahf
repz
mov
lret
int3
mov
fldl
inc
sbb
mov
mov
push
pop
fimuls
leave
pop
inc
or
dec
or
add
mov
pop
add
fcoml
gs
mov
xor
inc
inc
hlt
cmp
out
lret
ljmp
sub
mov
or
and
sahf
add
fsubr
leave
cs
sbb
incl
test
push
and
sbb
stc
je
sti
in
test
out
fildll
dec
outsb
mov
xchg
cmpsb
xchg
test
mov
sbb
adc
nop
sbb
jae
pop
xor
fidivrl
adc
add
fmull
loope
int
cmp
outsl
mov
pop
or
push
int
in
in
xchg
je
pop
jg
jae
or
xor
mov
add
bound
or
add
adc
jl
fisttpll
repz
add
loopne
mov
scas
fildll
xor
subl
repz
xchg
inc
cmp
cmpsb
push
cmp
dec
mov
ljmp
std
mov
addl
pop
hlt
pop
testl
xlat
call
adcl
movsl
enter
popf
adc
xchg
test
sbb
pop
sub
in
mov
in
fcomip
faddl
mov
fistps
fadds
push
pop
mov
sbb
cwtl
sarb
xchg
loop
or
sub
xchg
push
xchg
scas
lret
sub
ja
push
imulb
repz
ficompl
ss
out
loope
or
and
or
and
ljmp
dec
cs
mov
push
outsl
pusha
fwait
shll
push
mov
fisubl
xchg
cmpsb
or
inc
mov
add
jns
clc
and
mov
shll
shrl
arpl
push
lahf
in
adc
icebp
pusha
add
fcmovnu
sbb
sbb
mov
push
test
add
jno
inc
ret
mov
cld
mov
mov
rcll
movb
pop
std
xchg
addl
rclb
pop
mov
fs
gs
sub
cmpsb
popf
mov
or
out
scas
sub
mov
sub
adc
jno
add
leave
outsl
mov
xor
sbb
addb
lods
dec
inc
or
loopne
jp
popf
loopne
add
jge
in
dec
jg
mov
sbb
movsb
pop
cmp
adc
cmpsb
mov
dec
rcl
dec
lcall
test
mov
adc
sar
dec
stc
bound
mov
push
mov
or
sbb
add
fwait
xchg
into
ljmp
dec
push
mov
clc
je
lock
enter
lock
xchg
fimuls
movsl
and
test
jg
decl
xchg
push
pop
sbb
cmp
in
adc
fadds
cmpsl
push
mov
dec
inc
and
lods
mov
push
sbb
decl
into
sbb
pushf
add
pusha
or
mov
ljmp
rorl
adc
je
xor
dec
aad
sbb
adc
loop
fcomip
pop
lds
pushf
sub
mov
or
adcb
jmp
jp
adc
aas
lcall
pop
mov
sbb
adc
fimuls
cmp
faddl
movsb
test
jge
and
xlat
ret
iret
cli
jecxz
adc
ja
iret
dec
cmpl
cmp
dec
pusha
addr16
inc
pop
push
lea
sbb
stos
ret
xor
jns
popf
jno
lret
mov
and
mov
or
repnz
sub
test
popf
mov
push
sub
stc
xchg
fldl
sti
loope
mov
mov
pop
test
cmpsb
aam
add
les
stos
pusha
dec
push
insl
xchg
rep
push
xchg
mov
mov
aas
push
lods
mov
insl
ja
adc
adc
jno
cmc
aad
inc
ficompl
in
xor
jg
jecxz
pop
or
mov
xchg
pop
sub
sub
lcall
test
dec
leave
imul
push
loope
xchg
sub
test
pop
sbb
mov
or
xchg
sahf
lock
pop
cmp
daa
sub
cs
sub
sbb
outsl
cmp
not
cld
xor
out
mov
lcall
pusha
add
js
cli
and
scas
movsl
cmp
cmp
mov
pop
pop
aad
shrd
scas
and
lea
and
enter
sbb
cmp
adc
xchg
pushf
shr
pusha
adc
sub
pop
mov
jno
out
pop
mov
test
and
and
cli
int3
pop
fldenv
cmp
cmp
or
out
notb
fst
in
mov
lret
mov
xchg
lods
adc
jb
jno
cmpsl
fcomps
mov
dec
pop
stc
lock
pop
pop
ss
es
dec
ret
scas
ljmp
adc
dec
pop
or
pop
lcall
in
dec
in
xchg
arpl
jnp
mov
cs
outsl
or
sub
mov
mov
xlat
xlat
sti
inc
xchg
jmp
lcall
mov
mov
cmp
pop
pop
push
jmp
and
fadd
icebp
aad
lret
jo
add
jns
push
mov
clc
inc
cmpsl
aad
js
cltd
or
xchg
dec
pop
filds
outsl
rcll
mov
test
jns
ljmp
aad
dec
cmpsb
mov
in
jo
xor
push
sti
aam
adc
add
out
imul
pop
adc
ret
fadds
mov
xor
loop
cmc
push
pusha
dec
fidivl
cmp
stc
shrl
xlat
repz
rcrl
enter
rolb
sahf
sarl
mov
dec
iret
inc
mov
movsl
in
xchg
pushf
cmp
dec
das
inc
add
sbb
popf
add
add
pop
xlat
pop
pop
lds
fldl
js
push
sbb
loop
mull
scas
outsl
jno
cmp
outsl
ret
xchg
add
mov
pop
imul
pop
les
jle
mov
test
or
pop
iret
push
test
ret
mov
mov
mov
sbb
popf
push
mov
daa
lods
in
fdivrl
ljmp
repz
movsl
jmp
xchg
mov
repz
jmp
rcl
imul
lret
jns
das
mov
or
xor
call
inc
inc
pop
jo
hlt
icebp
push
je
fbld
test
lods
mov
cwtl
push
inc
mov
addr16
ds
xchg
fcmovnb
xchg
dec
jb
and
sub
addr16
scas
fldt
aam
pop
mov
jns
cmp
jecxz
xor
daa
nop
dec
mov
xor
loopne
jge
jmp
pop
mov
sarb
push
add
jo
popf
aaa
mov
clc
jecxz,pn
cmp
dec
cmp
jmp
mov
inc
inc
pop
lahf
pop
push
addb
adc
jb
add
imul
rcl
lahf
aas
mov
or
std
mov
insb
addr16
pop
mov
lock
wrmsr
out
leave
push
bound
fbld
cmp
shll
or
fucompp
mov
mov
xor
jnp
xchg
test
mov
push
add
je
test
and
xchg
fisttps
out
ret
xor
xchg
rcr
jge
stos
jb
ss
pop
imul
mov
pop
mov
or
out
and
jae
mov
dec
test
cmp
icebp
mov
fsubs
fbld
xor
bound
mov
leave
add
lock
daa
mov
bound
mov
sbb
movsb
in
mov
mov
mov
std
jnp
cwtl
push
shlb
stos
lcall
or
inc
push
stos
ret
movsl
xchg
stos
stos
and
pop
jg
or
mov
dec
sub
or
dec
adc
cmpsl
jmp
fidivl
jg
jns
rol
dec
repz
mov
xor
pushf
lahf
test
icebp
shll
pop
popa
mov
lods
sbb
jne
push
or
mov
push
pusha
into
movsb
mov
xchg
in
sub
xor
xor
dec
push
mov
cmp
in
imul
outsl
out
and
sub
loope
out
clc
test
push
xchg
scas
sbb
into
cmpsb
adcb
mov
mov
and
xchg
mov
imul
mov
or
or
dec
rcl
mov
pusha
in
sbb
jb
outsl
mov
aam
ss
push
pusha
xchg
test
pop
pop
je
mov
mov
pushf
andb
xlat
push
pushf
mov
and
or
fwait
jns
add
mov
aad
and
outsl
test
mov
popa
lds
push
shr
loop
dec
or
outsl
mov
or
sbb
sar
jne
lret
adc
sbbb
add
dec
pusha
mov
dec
in
stc
shl
stos
incb
dec
das
inc
sub
negl
mov
icebp
fldt
sbb
neg
sahf
pop
ret
cmp
lock
in
cmpsb
mov
and
push
in
test
add
bound
inc
dec
faddl
scas
jle
les
test
subb
loop
inc
scas
jmp
dec
insb
xor
sub
outsl
arpl
pusha
or
xchg
fwait
jl
push
push
sbb
lgs
adc
cmp
add
mov
or
mov
sub
sarb
fnstenv
movsl
sub
movsl
rcl
aas
mov
mov
mov
in
jmp
imul
fdivp
jecxz
orl
sub
xlat
pop
and
aad
cmpb
into
data16
and
stos
adc
mov
aad
xchg
mov
pop
dec
fidivs
cmpsl
ret
jmp
fnstsw
mov
lods
cli
loopne
mov
or
xchg
and
jle
cmp
jle
mov
add
push
pusha
js
and
inc
insl
mov
or
out
mov
jg
icebp
leave
inc
in
cld
clc
pop
out
andb
out
cmp
lods
ret
jecxz
dec
xchg
mov
mov
mov
adc
sbb
push
adc
aad
scas
lret
mov
aad
xor
push
fists
cmp
pop
cmp
icebp
in
in
jns,pt
cmp
push
addr16
cmpsb
xchg
jp
mov
sbb
cmp
loopne
inc
mov
scas
push
aas
out
in
mov
cmpl
jmp
adc
pusha
addr16
sub
test
in
pop
sbb
or
and
cmp
popf
aas
or
inc
pop
push
cmc
cmp
inc
xchg
dec
mov
inc
pop
sarl
popf
sahf
test
rcrb
mov
mov
dec
dec
mov
call
bound
test
push
inc
pusha
jecxz
cmp
aaa
int3
push
sbb
fildl
lret
scas
cltd
add
add
mov
add
fisttpll
mov
jnp
addb
popf
mov
jno
mov
push
jge
mov
lcall
or
shlb
jmp
mov
xchg
jmp
bound
out
fidivrl
ret
mov
outsb
aaa
fiaddl
stc
ffreep
sbb
icebp
add
inc
popa
sbb
push
xchg
imul
jl
stc
cmp
push
sbb
sar
addr16
mov
in
and
xor
cmp
adc
or
or
rol
sbb
and
movsl
inc
jmp
xchg
sbb
mov
insl
in
inc
jl
dec
cmp
push
and
fiadds
cmpsb
pop
add
mov
out
andb
and
inc
cli
mov
aad
popa
gs
stos
addl
fmuls
mov
xor
push
dec
dec
in
loopne
fcomps
frstor
inc
mov
rol
sahf
stc
leave
test
mov
bound
xchg
inc
cmp
mov
sub
pop
faddl
xchg
cmp
pop
aam
addb
cs
fdivl
call
cmp
mov
xchg
mov
dec
sbb
pop
jmp
and
loop
sbb
dec
xchg
pusha
adc
sub
dec
js
mov
aad
xor
pop
std
jp
jb
xchg
pusha
loop
mov
clc
adc
lods
loop
rolb
fwait
mov
fiaddl
lea
dec
es
movsl
mov
mov
int
push
mov
xor
mov
sbb
sahf
sub
sarl
mov
jecxz
lock
push
adc
sbb
xchg
pusha
inc
lret
mov
icebp
xlat
pushf
int
repz
dec
inc
jae
test
pop
cld
mov
ret
cld
jecxz
outsl
dec
pop
mov
and
cmp
mov
pop
pop
orl
xor
insl
push
insl
jb
pusha
movsb
lret
stos
scas
adc
xlat
fsts
scas
shrb
push
mov
imul
mov
jmp
in
aam
mov
sub
xchg
xor
pusha
mov
lcall
push
daa
mov
sub
adc
push
fistps
lods
sbb
xchg
gs
rcll
es
aad
jle
or
into
clc
inc
dec
xchg
shll
jp
or
add
pop
sti
dec
cmpsl
sub
add
dec
sub
hlt
les
ffreep
imull
pop
lods
push
pop
jecxz
out
rolb
into
push
dec
adc
fidivs
lods
xchg
jae
mov
hlt
jecxz
aad
xlat
jae,pt
push
push
push
pop
push
stos
sub
lret
scas
jb
shl
sbb
insl
jo
pusha
xchg
mov
xchg
push
inc
mov
out
out
mov
nop
or
xchg
ficoms
inc
shrl
shll
pop
and
inc
daa
mov
inc
pusha
mov
or
jns
ret
sbb
fcmovnu
inc
jo
fwait
in
cmpsb
clc
sti
sub
mov
adc
ss
jae
push
adc
jns
lcall
inc
mov
fiaddl
inc
lods
cld
jl
jge
int3
push
cmp
mov
or
jmp
xchg
or
lods
out
sti
pop
lret
or
mov
and
push
xchg
add
fisubrl
ds
add
mov
inc
loope
xor
cmp
and
out
sti
xor
mov
push
push
push
mov
dec
pusha
push
mov
add
xchg
scas
inc
inc
sbb
jge
ret
in
icebp
xor
pop
dec
inc
bound
aad
cmp
mov
mov
ficomps
rcl
xchg
add
pop
movsl
mov
aas
pop
push
xorb
shlb
shll
int3
std
bound
pop
cmpsl
mov
push
stos
lret
add
pop
jae
mov
pusha
xchg
loop
repz
ja
clc
pop
add
idivb
cld
sbb
mov
add
stos
scas
das
cmc
inc
fsubr
sahf
adc
and
adc
sub
repnz
aaa
adc
movups
ljmp
mov
or
inc
icebp
mov
jb
inc
xor
in
push
mov
adc
daa
lahf
loop
pop
movsb
pusha
stos
jge
push
xor
adcb
pop
dec
leave
push
popa
in
jecxz
add
out
sbb
arpl
test
dec
mov
js
sbb
outsl
es
imul
jmp
outsl
adc
xor
dec
test
adc
ret
dec
leave
lock
fwait
lods
outsb
enter
push
shll
sbb
add
or
pop
adc
or
clc
sbb
cmp
call
sub
sti
or
mov
arpl
into
jno
mov
addr16
pop
rolb
sbb
add
pusha
or
dec
mov
ret
loop
lret
fstpt
fisubrl
out
pop
sub
sbb
pushf
testl
mov
sub
jae
push
mov
mov
mov
out
lock
xchg
fldlg2
cld
add
or
mov
add
lcall
dec
ret
cmc
push
adc
mov
jo
hlt
outsl
mov
ret
int
negl
aad
lahf
adc
sub
out
cwtl
adc
nop
and
aaa
jnp
xor
loopne
add
mov
or
push
fisttps
mov
out
mov
xor
loop
mov
sbb
push
andb
mov
cld
add
and
mov
pusha
mull
jns
xor
cs
sub
inc
je
test
sbb
inc
stos
fisubrs
test
out
push
mov
ret
aam
insl
fnstsw
push
mov
int
sbb
rcl
test
jb
fbld
pushf
adc
mov
jo
es
cmc
out
cmpsb
jns
int
ds
mov
sbb
jo
bound
xor
mov
adc
fwait
push
lret
push
mov
sbb
or
mov
lock
pusha
fldl2e
lcall
xchg
shll
and
in
xor
dec
mov
aad
pop
lods
mov
rclb
jns
in
inc
mov
pop
pop
sbb
aas
fsts
out
xlat
test
pusha
mov
or
sti
xor
aas
loope
xor
jg
add
fisttpll
subl
pusha
mov
push
mov
push
mov
lods
mov
mov
lcall
daa
gs
lahf
fldenv
js
inc
loopne
arpl
adc
inc
fiadds
fnstcw
jl
xchg
and
mov
loope
frstor
ljmp
cmpsb
or
insb
xchg
inc
roll
mov
mov
mov
insl
jnp
add
or
iret
pop
xor
add
addr16
sbb
lea
sub
jns
pop
mov
mov
outsl
sub
mov
adc
bound
loopne
in
sarb
pop
scas
int
pop
mov
add
pop
cmp
mov
clc
bound
mov
adc
and
pop
add
jbe
add
add
sub
mov
lea
mov
or
gs
push
adc
xchg
xchg
lahf
or
mov
jo
int3
fisttps
rcrb
ret
pop
fwait
bound
inc
sti
sbb
mov
or
or
pop
pop
outsl
dec
jnp
scas
or
mov
or
jmp
call
bound
push
movsl
lret
hlt
das
pusha
imul
cs
mulb
xchg
int
pop
aad
xchg
and
fldl
roll
mov
cld
mov
repz
sbb
ss
vmread
scas
add
mov
xchg
add
fdivs
mov
shl
pop
or
lock
in
pop
arpl
rorl
cmp
inc
scas
cmpb
mov
cli
xchg
push
fs
or
les
add
and
add
lret
inc
pop
int
dec
icebp
and
fwait
pop
addr16
push
in
stc
cmpl
dec
cmpsl
mov
fstpt
or
and
sub
jnp
add
fdiv
or
xor
nop
sub
push
xor
mov
mov
dec
sub
int3
xchg
xchg
lahf
pop
shll
cld
loope
mov
fnstcw
or
loope
pusha
or
mov
adc
xor
mov
popa
lock
push
or
iret
mov
ds
fldln2
rcrl
add
xor
cmc
adc
roll
inc
jp
mov
add
in
push
out
sbbb
xchg
sbb
imull
cmp
cmc
mov
sarl
inc
mov
pop
in
push
movb
xor
xchg
inc
xchg
xchg
ja
fists
inc
pop
xor
sbb
xor
in
fcompl
aam
add
jecxz
xor
xchg
cli
fbld
sub
stc
cld
ljmp
cmpsl
pop
lds
das
popf
sbb
jcxz
imul
cmp
repz
push
cwtl
adcb
push
inc
stc
sahf
rcll
dec
fcmove
dec
mov
mov
stos
dec
jbe
rorb
jnp
jns
xchg
ret
and
lcall
pushf
cmp
outsl
jecxz
push
jmp
sub
pop
xor
fdivrl
mov
and
adc
pop
stos
mov
push
out
test
xor
ja
xlat
scas
push
add
ja
xchg
sbbb
test
mov
jno
loop
jge
push
push
cmp
push
mov
mov
inc
js
mov
jbe
insb
mov
sbb
adc
fsubs
inc
sti
sub
pop
and
iret
arpl
lock
mov
scas
loop
ret
lds
pusha
ja
andl
xchg
inc
mov
pop
cmpsb
iret
add
test
out
rcrb
adc
sti
jns
sbb
push
clc
or
in
sahf
data16
arpl
aam
cli
jge
cmc
push
bound
fucomip
ret
in
popf
test
loop
pop
dec
pop
fsubs
lret
bound
sti
es
gs
mov
jp
test
or
fwait
pop
fnsave
loope
inc
out
add
jge
sub
in
lock
les
in
cmp
jmp
vphaddwq
incb
mov
xchg
xchg
push
sbb
adc
or
sti
and
dec
add
in
add
in
shlb
sub
xchg
test
xchg
jmp
dec
cmc
jns
inc
inc
loope
jmp
mov
jne
xchg
adc
inc
scas
ja
mov
sub
jle
mov
jae
cmpsl
fidivrs
dec
sbb
das
push
mov
add
icebp
dec
xchg
sbb
movsl
bound
aaa
xor
cmp
inc
sub
pop
xchg
and
mov
stos
repz
stos
adc
push
and
test
ror
aam
outsl
lock
dec
repz
jmp
outsl
in
iret
and
pop
popf
test
add
mov
clc
cli
xor
ret
dec
add
pop
push
andb
inc
or
push
in
sub
rcl
jb
mov
inc
cmp
call
stos
xor
leave
mov
push
push
fucom
movsb
inc
cs
jns
sbb
pop
shl
mov
mov
mov
aad
shlb
movl
stc
dec
icebp
xchg
dec
ds
movsl
adc
stos
std
mov
mov
in
stos
mov
add
mov
inc
xchg
popf
jo
rorl
lcall
sub
repnz
jmp
inc
add
mov
cmp
decb
push
cmp
nop
sub
in
pop
dec
ffree
or
jbe
lret
in
add
push
sub
test
dec
icebp
sub
xlat
and
cld
sbb
lods
repnz
jne
pop
aad
push
out
loop
inc
dec
idivb
push
jae
jmp
mov
jmp
push
ret
clc
dec
scas
push
mov
sub
push
xor
add
dec
pop
push
das
cmp
pusha
sbb
pop
lods
mov
xchg
add
dec
and
pop
mull
jno
jo
loope
sbb
jecxz
data16
mov
dec
clc
sub
repz
and
sub
addr16
sbb
push
stos
xchg
dec
sbb
std
xorb
test
inc
je
shl
jo
adc
jp
pusha
scas
data16
scas
jb
arpl
movsb
mov
sbb
xchg
xchg
shrl
stos
loop
push
cmp
xchg
bound
mov
stc
sbb
xor
mov
ror
punpckldq
sahf
push
out
pop
test
movb
daa
lods
rcrl
flds
cs
mov
sbb
xchg
mov
mov
and
add
mov
push
mov
sbb
adc
pop
mov
imul
gs
mov
adc
and
insl
pop
add
cmpsb
aad
lret
cmc
rclb
xchg
sub
repz
xor
scas
and
xchg
add
mov
les
mov
fs
hlt
outsb
addr16
push
lock
jge
xchg
or
sub
je
test
jb
push
mov
andl
sbb
pop
rolb
mov
in
mov
rcr
jl
pop
xor
ja
ret
pusha
cmc
ficomps
inc
repnz
pop
dec
push
andl
notl
cmpl
popf
scas
gs
pusha
cwtl
sahf
aas
adc
xorl
bound
mov
js
idiv
pop
pushf
insl
inc
js
lret
add
mov
and
into
xor
adc
call
out
or
mov
jecxz
jecxz
cmpsb
int3
xchg
mov
xchg
inc
pop
adc
mov
jae
mov
adc
ret
mov
mov
cmp
inc
loopne
mov
mov
inc
cmc
jmp
outsl
test
movsb
mov
jae
je
jne
push
mov
add
sti
cli
mov
fdivr
bound
push
iret
pop
pop
mov
sub
test
cmpl
xchg
pop
imul
mov
out
pop
and
aad
cmp
mov
repz
or
es
cmp
stos
mov
popa
cltd
outsl
xor
and
addr16
mov
xchg
add
cmpsb
bound
iret
sbb
in
pop
mov
shll
in
xor
scas
mov
cmp
or
repnz
pop
jno
in
arpl
addr16
mov
insb
sub
lret
aad
inc
push
cltd
int3
jbe
inc
fcmovb
rol
jne
lods
xor
lds
cli
out
xchg
out
pusha
addr16
bnd
jo
pop
loop
xchg
mov
les
movsl
jnp
fstpl
pop
orb
jo
dec
xlat
sub
repnz
pop
cs
mov
and
sti
mov
loope
cmp
xchg
bound
iret
push
pusha
popa
stos
test
add
sarl
sarb
cwtl
pop
push
push
pop
push
addr16
std
add
jle
add
push
loopne
sub
cld
mov
pop
mov
jae
shr
inc
icebp
flds
jns
outsl
mov
out
pop
insb
push
idivl
test
mov
shll
xchg
mov
pop
aad
fbld
and
push
enter
jecxz
xlat
mov
lcall
dec
aam
dec
sbb
add
pop
xchg
fdiv
movb
movb
subl
xchg
xchg
movsl
in
pop
xchg
sub
aad
lods
adc
xchg
shlb
sahf
lret
fwait
mov
dec
inc
ja
loope
rclb
mov
or
rorl
shlb
pop
adc
or
lock
add
nop
and
mov
int3
adc
xor
loop
loopne
xchg
xlat
pop
xor
or
mov
mov
or
pusha
sub
sub
sbbb
roll
lea
shl
or
add
clc
sub
jmp
mov
call
sbb
sub
stc
roll
lret
mov
das
stc
sbb
popf
out
bound
int3
clc
je
sub
pop
jae
cmp
xchg
xchg
call
ss
imul
mov
xor
inc
es
adc
and
jb
int
cmpsl
sbb
mov
pusha
push
in
lcall
fbld
pop
mov
mov
dec
mov
in
adc
dec
xor
in
leave
cmpsl
jp
mov
mov
dec
mov
mov
jle
stc
shll
lods
xchg
adc
jae
mov
test
clc
fldl
xchg
lods
push
fwait
mov
and
iret
shll
dec
pusha
xchg
pop
pop
fstpt
aad
subb
push
pop
fidivs
loopne
in
bound
lds
int3
icebp
pop
sub
or
pusha
and
mov
inc
aas
or
xchg
faddl
mov
clc
mov
adc
shr
pop
mov
js
or
jo
mov
add
and
mov
push
test
cmpsb
pusha
nop
sub
mov
xchg
cmp
arpl
cli
adc
in
pop
mov
icebp
sti
jnp
lret
xchg
jmp
arpl
or
repnz
push
stos
pop
inc
add
bound
mov
xchg
dec
mov
lock
mov
dec
subb
sub
push
cmp
jns
fwait
jo
daa
pop
movsl
cmp
xchg
bound
pop
and
jecxz
push
insb
pcmpeqb
fiadds
adc
pop
xorl
inc
and
mov
push
adc
mov
jge
adc
aam
xchg
mov
mov
aad
test
shlb
imul
ja
inc
arpl
aad
pushf
pusha
fucomip
lret
bound
movsl
mov
push
mov
out
cmp
shrb
mov
stos
clc
subb
movsl
jmp
and
in
mov
mov
jne,pn
mov
push
inc
lcall
fldlg2
sbb
adc
ljmp
pop
icebp
cmpsl
stos
pop
pop
cmp
xchg
sarb
fcoml
adc
add
fmuls
loopne
bound
pop
popa
out
sti
push
push
in
sbb
mov
fsubrp
loopne
mov
pop
sti
sub
jo
sahf
ret
ret
rolb
pop
jns
fwait
inc
mov
add
xchg
cmp
repz
adc
fdivs
int3
inc
idivl
and
in
sbb
lock
and
push
sar
xor
ret
xchg
repnz
movsb
push
imull
xchg
xchg
cld
ffreep
aam
lock
inc
mov
scas
add
bound
or
outsl
shlb
dec
xorb
scas
icebp
out
ffree
lods
mov
int
dec
bswap
mov
mov
or
sahf
xchg
push
enter
cmp
out
loope
ret
int
lahf
in
xor
stc
pop
adc
sub
mov
jns
data16
aaa
mov
pop
dec
pop
nop
cmp
test
mulb
cmp
ja
mov
push
nop
cld
pusha
scas
into
or
mov
adc
mov
jno
pop
insb
ds
mov
out
sbb
dec
xchg
cs
in
add
cmp
movsb
mov
and
pusha
psrad
adcl
adc
in
inc
xor
orl
sub
dec
sub
int
fstpl
lock
inc
rcrl
repnz
lods
push
mov
jbe
mov
loop
daa
mov
sbb
push
scas
jb
and
sbb
or
pop
inc
xor
or
adc
in
inc
test
imul
add
lock
mov
mov
loopne
adc
inc
dec
push
jae
push
shrl
or
or
insb
movsl
jg
cld
cmp
inc
sub
dec
add
jmp
adc
pop
dec
mov
pop
xchg
or
jmp
mov
dec
add
stos
push
pusha
or
push
int3
mov
mov
inc
adc
movsl
cs
testb
fldl
sti
xor
scas
jo
ss
xchg
subb
ret
movsb
ret
dec
aad
mov
lahf
lods
iret
movsb
fidivs
loope
xchg
int
mov
pop
add
loope
in
stc
sti
xchg
pop
lret
mov
jg
or
loop
add
or
or
in
mov
cmpsl
test
cmp
scas
cwtl
nop
bound
and
pop
pop
or
mov
nop
outsl
cs
jmp
add
adc
out
cmpsl
push
mov
xchg
sub
cmpsl
roll
sub
scas
sbb
insb
pop
push
xor
add
push
cmp
sub
das
pusha
ret
and
mov
xor
rcrl
mov
jg
es
pop
push
je
pop
inc
or
mov
or
pop
loope
xchg
add
leave
sub
add
mov
icebp
mov
test
shrl
nop
test
xchg
mov
clc
add
movsb
pusha
fildl
add
lds
jl,pt
mov
mov
dec
xlat
ret
pop
cmp
jo
pusha
inc
stos
cmp
or
xchg
mov
or
outsl
xchg
scas
mov
mov
inc
shlb
pop
and
jns
jbe
stos
mov
mov
jns
push
insl
add
mov
ret
std
pushl
push
pusha
icebp
mov
sbb
add
jecxz
mov
add
mov
pop
das
add
outsl
mov
pop
sbb
sbb
pop
mov
cmpsb
jl
clc
inc
loope
cmp
in
mov
cli
push
in
scas
clc
jl
pusha
orl
mov
outsl
adc
test
dec
enter
mov
in
cmc
clc
lret
mov
movsb
scas
xor
pusha
pop
pop
repnz
stos
out
pop
and
gs
sti
pop
pop
push
adc
out
es
or
xchg
pop
imul
dec
cld
rolb
popa
or
or
jmp
push
mov
pusha
or
add
pop
addr16
xchg
out
xchg
lret
sbb
jo
nop/reserved
mov
aaa
xor
nop
ror
loope
jge
mov
xor
jp
push
leave
es
dec
out
cmp
testb
and
ret
xor
mov
repnz
cmpsl
sbb
mov
out
jno
repnz
stc
test
mov
xor
ret
xchg
sub
pusha
push
xchg
inc
or
pop
dec
out
push
mov
jae
xor
mov
xor
inc
mov
lret
sbb
sub
std
jg
mov
int
movl
inc
mov
imul
fmulp
ret
fistpll
mov
pusha
xchg
fstp
bound
mov
cmpsb
mov
pusha
xchg
subb
or
cld
sub
pop
imul
jae
xchg
pop
xor
fldenv
fimull
int
push
cmp
inc
sbb
inc
adc
sbb
ds
out
imul
loope
dec
test
scas
jb
andl
movsb
cs
cmp
mov
rorb
out
mov
pop
jmp
shl
jnp
inc
adc
cmp
jle
rcl
jbe
sub
pop
imul
push
pusha
lods
int
fcomps
sbb
pushl
bound
orb
add
roll
bound
adc
sub
push
push
or
xlat
movsl
dec
aam
outsb
adc
jge
jnp
movb
dec
dec
pusha
fwait
sub
mov
pusha
pop
mov
mov
hlt
xor
ljmp
jge
mov
jo
add
cmp
push
jns
icebp
pop
sub
jae
ret
mov
xchg
out
or
add
orl
mov
inc
pop
jnp
call
lods
xchg
loop
adc
hlt
mov
dec
sbb
jmp
ret
mov
arpl
ds
mov
push
jno
xor
push
sbb
aad
lcall
aam
ret
mov
dec
std
bound
adc
dec
push
jle
loopne
or
out
pop
lret
mov
or
mov
das
dec
cli
lret
cs
mov
add
or
inc
movsl
xchg
movsb
out
addb
es
aas
cmp
test
dec
add
and
sbb
out
scas
jge
pop
pop
fwait
ja
outsl
leave
xchg
bound
pusha
out
es
js
repz
add
je
xor
xor
or
in
stc
jo
ret
push
xchg
loope
es
insb
push
clc
fbstp
loope
test
ret
mov
sahf
sub
mov
fucomp
xchg
add
repz
stos
int
icebp
pusha
add
scas
mov
mov
orb
mov
cmp
clc
pop
sti
movsl
pushf
xchg
out
push
frndint
or
fwait
rclb
cltd
xchg
je
jno
cmpl
rcll
cmp
cmpsb
pop
loope
sub
lods
or
popl
sbb
dec
outsb
inc
jb
xchg
mov
mov
pop
decb
mov
mov
loopne
in
sbb
mov
push
push
repz
arpl
push
rol
pusha
addr16
pop
xor
mov
incb
sti
mov
push
add
sub
dec
fidivl
push
shll
xchg
dec
pop
pop
call
lret
stos
or
add
jnp
mov
rcrl
jle
je
lods
xchg
repnz
mov
mov
lret
mov
fists
push
jle
pusha
ljmp
mov
xchg
sub
jbe
sbb
sbb
mov
sub
movsb
shrl
out
cmp
push
push
mov
dec
mov
stos
bound
lock
inc
inc
jns
cmp
cmp
mov
sbb
inc
sbb
dec
push
mov
ret
and
cli
div
pop
outsb
ret
dec
addr16
add
xchg
cmp
cmpsb
pushf
pop
inc
push
lret
cld
hlt
and
stc
mov
dec
outsl
or
lret
inc
iret
test
inc
int
int3
jmp
pusha
mov
insl
mov
inc
or
inc
pop
rorl
outsl
mov
or
push
jns
push
ss
push
push
test
out
cmp
fnstcw
das
loope
test
mov
xchg
cmp
aad
cmp
adc
add
out
mov
lock
int
mov
or
or
cmpsb
add
xchg
cmp
data16
dec
and
pop
and
add
sub
fs
push
testl
or
adc
pop
fisubl
and
pop
pop
xchg
mov
cmpsb
mov
scas
mov
ret
ds
jmp
cli
inc
xor
lret
or
xchg
pop
pushf
movl
lods
or
lea
ss
fistl
mov
fisubl
andb
and
sbb
push
pusha
mov
lcall
rol
shrl
stc
mov
and
loope
jae
mov
inc
pop
mov
es
scas
push
fiaddl
pop
dec
dec
fdivl
pop
movsl
mov
mov
inc
sub
jo
sbb
add
add
and
mov
jmp
jo
aam
clc
mov
daa
dec
aad
pop
pusha
stc
cs
inc
mov
arpl
or
ds
dec
push
into
push
imul
lahf
add
dec
sar
sub
mov
mov
mov
insb
fistps
and
outsb
and
or
inc
pop
mov
cmp
iret
mov
scas
push
rorl
into
enter
mov
dec
cmp
xchg
dec
insl
cs
mov
sub
push
pushf
cmp
lods
jb
mov
notl
cmpb
mov
xchg
cli
out
mov
jecxz
bound
lock
cld
iret
scas
daa
cmp
scas
fistpl
cli
mov
xor
hlt
insb
fxch
jnp
clc
mov
pop
test
sbb
adc
push
jb
je
cmp
outsl
adc
out
pop
ss
repnz
xor
rorb
test
into
xchg
inc
mov
mov
lcall
movsl
js
sub
cwtl
adc
mov
sti
mov
repz
push
ret
mov
daa
mov
test
or
pop
test
inc
jp
or
shl
and
xchg
inc
outsl
mov
inc
movsl
lret
inc
das
adc
push
int
scas
pop
inc
mov
in
push
mov
imul
jle
pop
add
movsb
sti
iret
xorl
mov
adc
arpl
and
les
in
andb
test
cli
lods
or
pop
or
hlt
xor
pushf
cmpsl
int3
js
iret
call
and
stos
incb
push
stos
xchg
mov
test
mov
rorb
out
movsb
loope
decb
dec
test
stos
push
jp
push
or
shlb
push
int
movl
mov
pop
sbb
rcr
aad
aam
cmp
cli
dec
and
jne
fcoms
add
std
pop
lcall
stos
sbb
pusha
daa
icebp
cli
das
cmp
cmpsb
mov
add
push
lret
test
or
test
call
mov
jne
adc
mov
push
dec
outsl
sub
mov
fs
bound
hlt
push
jne
mov
pop
add
jno
pop
dec
pop
stos
cmp
mov
pusha
out
in
test
inc
xorb
dec
test
push
scas
fisttpl
sti
mov
mov
xor
mov
mov
fimuls
add
sbb
xor
insb
add
inc
mov
testb
and
or
sbb
mov
test
repnz
or
stos
out
int
or
loopne
repnz
mov
je
sub
pusha
fucomip
test
lcall
lcall
mov
jne
add
aam
pusha
sbb
sarl
sbb
jne
popa
pop
pop
stos
cmp
fneni(8087
cmp
dec
pop
xchg
iret
fs
jmp
pop
inc
xchg
js
mov
mov
sbb
std
mov
or
mov
pusha
or
in
loope
ljmp
mov
imul
xchg
push
xor
loopne
and
in
clc
fsubl
xchg
mov
fists
lret
lret
sbb
out
orl
xchg
test
repz
loope
adc
mov
adc
ds
jmp
imul
in
inc
cmp
lea
mov
mov
add
xchg
xor
out
jmp
bound
add
mov
inc
int
scas
lea
mov
ficoml
shrb
test
add
add
scas
jbe
call
sub
imul
addr16
push
stos
outsl
ja
and
fldenv
cli
pusha
out
jb
int3
xor
dec
in
add
movsl
push
test
pusha
jge
dec
imul
lea
push
pop
xor
mov
loop
lds
add
sbb
ret
adc
inc
mov
xor
out
push
cmp
cwtl
mov
mov
ljmp
out
adc
pop
pop
push
mov
mov
lcall
sbb
xchg
pop
lods
mov
rep
test
pop
nop
ds
mov
pop
xchg
jle
xchg
inc
sub
arpl
xchg
lods
pop
test
jp
out
add
inc
stos
mov
push
add
pop
xchg
push
bound
pusha
pop
adc
jecxz
adc
aam
ds
mov
push
mov
aad
cmc
sbbb
cmp
dec
inc
sbb
inc
sub
addl
nop
dec
orl
xchg
and
ds
or
stos
fistps
xchg
cmp
rcrl
mov
and
iret
imul
pop
push
icebp
bound
adc
mov
aaa
scas
and
jae
jne
shrl
mov
ss
insl
inc
in
jmp
in
loopne
sbb
mov
mov
inc
pop
bound
fisubrs
mov
dec
push
jns
mov
inc
aaa
lret
xor
sub
add
rclb
out
rol
mov
jo
sub
xchg
clc
bound
aas
cmp
mov
xor
adc
cld
jecxz
cli
jo
pop
mull
xor
adc
and
inc
mov
fbld
inc
inc
mov
fsubrs
pop
shl
pop
sub
popa
adc
pop
repz
orb
loopw
jb
outsl
inc
pusha
add
bound
in
sbb
or
fiadds
inc
mov
movsb
enter
aaa
xlat
jle
popf
pop
popa
loop
xor
pop
dec
cli
lret
pop
sbb
mov
dec
sbb
or
aaa
loopne
pusha
in
fisubrs
jns
inc
ret
jne
out
loop
mov
fisttpl
test
nop
add
insl
orl
pop
out
inc
aas
xchg
ds
loopne
mov
xchg
push
and
push
ret
and
mov
sbb
pop
push
jge
pop
inc
mov
push
xchg
cltd
jecxz
pop
fadd
jl
adc
jmp
cmpsb
rep
stos
xchg
test
mov
sub
pusha
das
inc
sub
xchg
outsb
mov
add
cmp
lock
les
out
adc
xor
xchg
sbb
adc
sub
rol
push
pop
sub
pop
inc
shrl
movsl
in
aaa
cltd
popa
in
shlb
cmp
xor
dec
mov
mov
mov
and
test
iret
test
in
mov
jno
dec
cltd
xchg
pop
aam
jl
mov
jae
add
pop
incl
shll
repnz
loop
das
ja
lods
mov
rcrl
pop
js
hlt
pop
cmp
jmp
jae
repz
add
cmp
cs
and
int3
xlat
jg
and
xor
popa
inc
mov
sub
push
out
xchg
mov
xor
xchg
dec
mov
or
daa
bound
rorl
and
sub
xorl
ret
cmpsb
pop
cs
sub
bound
or
leave
adc
cli
in
loope
mov
mov
stos
dec
pop
leave
sub
add
insl
jecxz
pusha
mov
flds
mov
hlt
cwtl
fildl
arpl
in
inc
xchg
outsb
sub
scas
inc
lock
pusha
call
ffree
mov
adc
sub
test
loope
loope
rcll
or
scas
add
xor
mov
sti
and
addb
lret
fs
sbbb
outsb
mov
inc
rcll
add
adc
mov
sub
adc
jge
fcmove
sbb
aad
loope
jne
xchg
sub
sahf
sbb
fucom
in
inc
hlt
int
outsl
and
inc
adc
cmpsb
bound
xchg
sbb
es
cmp
pusha
imul
and
dec
ss
mov
clc
ret
es
mov
dec
cmp
xor
mov
into
out
loope
xchg
xlat
flds
mov
ss
lahf
lods
and
mov
sub
fsubl
pusha
mov
sti
dec
bound
and
mov
pop
push
movsl
or
add
sub
or
movsl
mov
pop
cmpsl
xchg
sub
shlb
std
dec
adc
dec
and
push
shll
test
insl
std
dec
sbb
fbstp
test
xchg
ljmp
or
ret
inc
jbe
jne
xchg
inc
frstor
inc
insb
or
sub
aas
sub
xchg
lcall
adc
cmp
inc
notb
data16
jge
xchg
add
sbb
insb
iret
loopne
and
dec
shrl
pop
jmp
fxam
adc
fbld
mov
popf
add
jbe
mov
cli
push
fidivs
rcrb
shll
dec
xchg
rorl
inc
icebp
loope
cld
dec
mov
in
push
mov
sub
jo
or
int3
dec
aaa
sbb
rcr
test
aam
mov
or
daa
pusha
out
loope
sbb
aam
adc
or
aas
add
xchg
in
pusha
lret
sub
stc
lret
scas
pop
cmp
repz
xor
jno
iret
mov
sbb
mov
cmpsl
inc
insb
adc
and
mov
pop
jo
pop
stos
or
mov
pop
enter
xchg
inc
out
dec
loope,pn
scas
sbb
loopne
sbb
adcl
mov
shrb
divb
imull
addr16
push
popf
daa
out
outsl
sahf
movsb
xor
lea
jae
or
stos
fnstsw
pop
aas
arpl
mov
mov
clc
cltd
mov
cli
mov
sbb
pop
mov
or
pop
fidivrl
cmp
adc
cmpsl
nop
sbb
push
bound
setle
fbld
mov
jecxz
pop
dec
popf
push
sbb
mov
enter
mov
cs
cmpsl
adc
shlb
scas
inc
in
mov
inc
jmp
mov
xlat
adc
jecxz
jl
jge
fs
imul
xor
aad
pop
sbb
cltd
sub
mov
test
cmc
add
inc
or
xchg
mov
xlat
stos
arpl
pop
and
scas
cmp
pop
and
out
popa
sti
dec
jge
push
mov
js
mov
cmpsl
pop
xchg
mov
ljmp
int
outsb
mov
rorl
aad
pusha
jae
dec
nop
gs
rolb
sub
mov
rcll
pop
xor
stc
test
mov
xlat
pop
dec
ljmp
jne
clc
stos
cmp
push
pusha
cmp
inc
push
cmp
repz
ficoms
mov
int
adc
outsb
pop
pusha
daa
or
jmp
push
xchg
xlat
jl
mov
jmp
repz
jae
fidivl
scas
cltd
insl
mov
or
xlat
addr16
pushf
std
stos
mov
lret
cmp
scas
shrl
jne
shrl
repz
jno
inc
shll
cwtl
or
stos
shr
arpl
or
jmp
mov
clc
inc
cs
xchg
jno
xchg
mov
nop
cmp
pusha
jns
inc
ret
jmp
push
pop
mov
cmc
jb
sbb
test
jno
mov
cli
test
out
push
fidivs
cmpsl
sbb
mov
mov
int3
aaa
cltd
push
xchg
inc
aad
jb
sbb
outsb
sti
mov
loope
aad
xchg
andb
pusha
push
inc
sbb
add
in
push
push
xor
sbb
xlat
xor
sti
or
shll
push
loopne
in
clc
jmp
sbb
fsubs
push
sbb
inc
adc
loopne
pop
cwtl
xor
fninit
inc
jne
out
arpl
add
cltd
repnz
roll
jp
sub
in
push
sbb
ss
adc
jmp
jb
lea
mov
mov
mov
inc
pop
adc
sub
inc
mov
filds
aaa
std
sbb
mov
call
imul
arpl
fwait
push
dec
pop
daa
xchg
out
cmp
call
rcl
sub
inc
jl
ja
fsubl
pop
mov
out
pop
pusha
push
js
rorb
cltd
lea
or
stc
sahf
mov
filds
jp
xchg
xchg
sar
mov
cs
xor
sarl
push
push
cld
iret
pusha
cmp
lcall
push
loop
inc
fbld
pop
gs
ljmp
dec
jmp
movsl
add
or
repnz
mov
pusha
dec
push
push
jb
incl
mov
sub
ret
mov
mov
ds
inc
cmp
push
outsl
or
out
add
sbb
aaa
bound
out
ret
test
mov
push
mov
cmc
pusha
movsb
dec
cs
xor
stc
rclb
push
mov
mov
sbb
cmpl
pop
stos
loopne
test
pop
cmpsl
sahf
mov
adcl
sarl
mov
mov
loop
mov
xor
cli
and
or
decl
and
das
fistpll
ret
stos
outsl
push
test
ds
push
cld
arpl
popf
cmp
sbb
repz
or
push
push
pop
jns
es
repz
scas
xor
aas
xlat
addr16
jnp
fsubrl
add
inc
addr16
mov
or
jno
push
outsl
and
lahf
jmp
inc
sub
imul
cmc
je
inc
inc
fildll
mov
bound
test
not
jbe
mov
push
or
lds
aam
inc
push
jbe
push
scas
cmp
add
mov
inc
pop
add
andl
pop
cmp
andb
imul
lods
pop
insl
mov
sbb
dec
and
ljmp
mov
test
shlb
adc
pusha
mov
pop
dec
cmpsb
xorl
push
out
cmpb
pop
mov
mov
lcall
mov
fildll
repnz
cmp
fadds
in
into
add
add
stc
mov
xor
gs
inc
call
jp
cs
pop
inc
ret
xchg
jmp
das
out
fcompl
mov
adc
lea
sti
repz
jb
push
xchg
notl
lods
sti
lret
xor
ja
add
popa
add
and
loop
adcl
jg
add
cmp
xchg
bound
add
sbb
movsl
std
mov
mov
js
jmp
lahf
pop
push
repz
jne
shll
cmp
pop
mov
ss
frstor
sub
iret
stos
leave
fldl
push
mov
sahf
add
mov
pop
xchg
jmp
hlt
jl
inc
mov
ret
inc
pop
xor
leave
xchg
add
pop
repnz
xchg
pop
jb
jo
cmpsl
lcall
add
out
push
mov
adc
andb
sbb
mov
mov
xchg
xchg
das
movsl
fs
push
mov
bound
lret
push
jo
and
adc
jo
inc
mov
icebp
mov
or
je
js
mov
xchg
daa
jp
sti
jns
pop
fistpl
cmpsb
pusha
or
stos
adc
push
aas
pop
aaa
jg
pushf
dec
shlb
mov
mov
jle
inc
xchg
xor
mov
repnz
cmpsb
add
outsl
pusha
xchg
or
mov
add
addr16
xchg
add
out
mov
adc
inc
fnstsw
dec
sbb
xchg
mov
ficomps
jb
inc
bnd
adc
sbb
cld
mull
inc
mov
stc
idivl
leave
lret
insl
fdivr
or
dec
mul
mov
imul
push
test
andb
mov
in
subl
mov
and
inc
pop
shrl
add
mov
cmpsl
xor
ret
inc
cmp
aam
mov
xchg
jo
pop
jb
rolb
shlb
mov
add
pop
cmpsl
les
xor
shlb
leave
pop
mov
loop
sub
cmp
xchg
xlat
in
inc
and
add
bound
sti
repz
adc
decb
pop
xor
push
fisubrs
or
pop
pop
and
out
inc
andb
cli
adc
mov
or
cwtl
test
jge
call
rorl
adc
cmpb
pushf
mov
sbb
add
fsub
scas
fstpt
icebp
adc
mov
insb
dec
mov
mov
decl
add
mov
je
xor
mov
imul
adc
leave
sbb
sbb
adc
lods
lock
repnz
stc
loope
pop
sbb
jge
cld
pop
fld
jmp
pusha
lods
fs
inc
int
sub
cmc
dec
inc
sub
add
dec
xchg
sbb
mov
lods
push
dec
push
xchg
scas
mov
arpl
sarl
fcmovu
mov
sub
lods
fidivs
and
call
or
mov
fildll
cmp
ret
bound
pop
push
gs
mov
and
push
stos
cld
push
inc
mov
push
add
das
sti
mov
pop
stos
fsub
and
xchg
lret
inc
jb
lea
or
mov
xchg
ljmp
jle
sub
clc
dec
mov
pop
mov
sub
mov
pop
xchg
adc
outsb
icebp
mov
xchg
or
faddl
inc
repz
ja
icebp
pop
mov
pusha
daa
pop
xchg
mov
pushf
push
je
notb
imul
add
cmp
push
cmpsb
lcall
and
xchg
mov
test
push
stos
push
cmpsb
bound
sbbb
out
bound
or
lods
loope
mov
xor
jecxz
rep
idivb
lods
cmp
xor
icebp
stos
lods
rorl
into
popa
adc
mov
outsl
test
stos
mov
push
stos
or
xorl
push
xchg
add
sbb
dec
lods
xor
cmpsl
sub
xchg
mov
pop
pop
cmpsb
push
add
das
xchg
repz
mov
or
add
mov
jp
je
shlb
fcoms
jg
push
ja
repnz
cmpsl
out
push
loope
ret
fiaddl
xor
inc
cltd
inc
xor
inc
lods
jecxz
dec
outsl
sbb
push
dec
pushf
popa
mov
or
out
mov
pushl
sub
in
xor
xchg
mov
pusha
sarb
or
jle
and
push
ror
and
push
jnp
xorl
jne
aas
push
shrl
cmpl
or
pop
add
jmp
pop
in
lret
mov
ds
xor
adc
add
idivb
push
dec
push
mov
xor
dec
push
pop
mov
add
aaa
sbbb
and
arpl
push
bound
lods
mov
xlat
orb
lods
mov
enter
stos
push
cmp
ret
or
outsl
test
mov
xchg
popa
push
out
push
cmp
sbbb
mov
lcall
adc
jne
mov
pop
ljmp
jno
dec
popa
repnz
inc
repnz
push
popa
movsl
add
mov
and
or
pop
inc
js
js
or
pop
outsb
cmc
stc
add
pop
js
bound
pop
inc
push
fildl
mov
outsl
jmp
sub
jbe
pop
add
adc
aad
pop
cwtl
cmp
jl
cmp
adc
daa
shrb
sti
bound
and
leave
sub
and
insl
lcall
xor
cmp
or
test
xor
jo
loopne
int
sub
pop
fstp
scas
pop
pop
int3
icebp
outsl
outsb
pop
insl
fstpl
stc
into
cmpsb
ret
add
test
xchg
dec
add
addr16
mov
movsb
jge
pusha
pop
sub
int3
int3
repz
dec
cli
and
cmpsl
xchg
or
int3
mov
fbld
push
and
movsl
loopne
ret
mov
or
shll
xor
je
sbb
mov
mov
cmpsb
mov
loope
sbb
sub
lret
or
lret
bound
xchg
test
jle
popa
jl
loop
jns
shrb
cmp
mov
push
outsl
adc
stos
inc
pop
push
ret
xor
mov
xor
mov
pop
xor
sub
add
xor
add
cmp
dec
add
xchg
test
int
sub
inc
mov
addr16
mov
cmp
data16
pushf
or
dec
mov
sbb
scas
es
mov
add
xor
stos
or
add
jp
mov
pop
cli
xchg
mov
test
add
mov
lock
insl
dec
neg
cs
ret
addr16
xchg
repnz
or
sub
mov
ret
cmc
xor
mov
mov
test
push
jo
test
loop
sub
and
bound
pop
stos
add
mov
popf
lods
mov
mov
bound
dec
inc
ret
cmp
add
ljmp
pop
ljmp
and
enter
cmp
dec
xor
add
cli
jbe
sub
and
push
cmp
dec
int3
fsubrs
addb
pop
cs
jp
popa
sar
or
cmp
push
addb
dec
add
add
bound
add
mov
scas
addb
sbbl
out
mov
mov
lds
jb
cmpb
or
in
xor
add
cwtl
mov
in
movsb
push
push
sub
cltd
test
lods
insl
push
or
mov
mov
neg
push
adc
and
fstl
add
enter
outsl
addb
lods
mov
xchg
jb
sub
nop
pusha
fnsave
ja
xor
mov
loopne
cmpsb
mov
rorl
inc
rcll
push
add
in
cmp
mov
add
ds
lods
adc
pop
insl
mov
add
jo
jb
ljmp
xchg
cs
jg
cmp
or
cmc
mov
mov
and
xor
cli
movsl
call
cmp
mov
adc
fdivs
jl
mov
add
inc
sbb
scas
popa
adc
jl
and
cmpsl
add
push
cld
sahf
std
xor
inc
push
jns
dec
xchg
hlt
push
mov
jmp
pushf
and
ss
lea
loope
bound
nop
xchg
and
push
pop
xchg
adc
add
push
sar
mov
add
cld
jmp
pop
xor
sarb
and
xchg
jb
out
push
fdivr
scas
jb
pop
rorl
stc
outsl
jle
mov
ljmp
pop
arpl
push
clc
inc
sub
pop
cmp
test
icebp
rcrl
mov
xchg
dec
popf
mov
cmp
test
or
cmp
jbe
adc
mov
nop
xlat
pop
addr16
sbb
cmp
fnsave
in
das
aam
xlat
hlt
aad
push
pop
pop
add
bound
iret
outsl
ret
clc
cs
lods
mov
mov
outsb
mov
jno
scas
and
xchg
sahf
jle
and
pop
and
ss
inc
out
add
mov
sti
pusha
insl
sbb
aaa
pusha
pop
in
dec
xlat
int
or
jle
roll
add
iret
pop
pop
pop
out
sbb
imul
leave
xlat
sbb
int3
fnstsw
call
mov
sbb
push
mov
add
add
movsb
adc
cmp
jnp
cmpl
push
inc
pusha
arpl
fisttpl
pop
jne
imul
aaa
push
push
adc
call
adc
mov
std
fldlg2
movsb
lret
into
imul
lods
mov
iret
std
lret
iret
sbb
add
pop
inc
imul
das
dec
sbb
outsl
mov
xor
lds
pop
jge
jb
ret
cmp
mov
adc
test
sbb
cli
clc
jns
dec
mov
add
bound
pop
cmp
jl
dec
fbstp
mov
pusha
rolb
mov
mov
pushf
inc
es
mov
add
fnsave
mov
dec
call
inc
andb
push
out
ret
addb
andl
lods
cmpl
into
movsb
jmp
sbb
mov
mov
fsubl
icebp
mov
mov
jns
mov
xor
sbb
or
or
dec
lret
aaa
addl
ror
cmp
and
adc
mov
push
sub
daa
jmp
ss
push
sub
popa
out
mov
pop
cmp
jb
ret
rcl
loopne
push
pop
xchg
rcl
shrl
sub
adc
dec
xchg
fadd
mov
sbb
or
scas
fimuls
pusha
sbbb
jl
push
sbb
push
aad
xchg
mov
scas
xor
pusha
xchg
test
test
add
push
dec
cmp
or
inc
clc
adc
mov
jb
jns
mov
push
fldenv
mov
cmp
insb
xchg
add
mov
xchg
ss
outsl
scas
sub
sbb
adc
out
pop
xchg
aam
addb
inc
mov
cmp
jno
xchg
cmp
mov
mov
stos
insl
sar
pop
loope
sbb
jge
dec
mov
push
icebp
fildll
dec
sbb
int
push
loopne
shll
in
std
into
or
frstor
jb
dec
mov
aam
xchg
cld
movsb
dec
pop
adc
dec
sbb
sub
and
lea
dec
adc
repz
outsl
add
movsl
aam
add
pusha
gs
sub
bnd
mov
stc
nop
push
dec
inc
adc
mov
in
cmpsb
pop
mov
movsb
lret
add
and
pop
or
test
loope
repnz
cld
adc
lret
fstl
jns
cwtl
and
shll
push
rolb
xor
or
icebp
push
rorl
sbb
cmc
pusha
sub
roll
test
insl
add
bound
adc
cmpsb
hlt
sar
dec
cld
lahf
imul
inc
leave
clc
outsb
mov
out
int
aad
je
dec
fadds
stos
adc
loopne
in
mov
and
jne
lods
jg
call
insb
sbb
ja
jne
test
movsb
cltd
jo
loope
fisttps
cmp
cmc
pusha
lahf
or
aam
adc
jne
stos
xor
adc
push
arpl
jle
stos
jecxz
lock
push
sub
add
cmp
cmp
sbb
dec
sub
xor
out
aad
and
adc
ret
int
sti
dec
or
cmpsb
aaa
fidivs
shlb
add
inc
mov
lret
sbb
cli
scas
stos
fucomi
cmpsl
pop
adc
add
dec
sbb
arpl
adc
sbb
inc
and
test
or
into
enter
and
jb
and
sbb
pop
bound
addr16
jbe
call
jp
lahf
sub
mov
mov
stos
lcall
or
jno
mov
and
xlat
cmpsl
in
lret
stos
imul
mov
scas
pop
mov
xchg
orb
std
repz
and
mov
aad
push
ffreep
cmpsb
push
sbb
icebp
incl
mov
movsl
inc
shlb
insl
das
add
and
movsb
dec
bound
push
dec
dec
mov
outsl
sub
mov
inc
cmpsl
test
aad
mov
incb
inc
xor
inc
hlt
mov
lds
add
and
push
xchg
ja
jnp
and
bound
int
inc
lret
mov
inc
mov
pop
pop
xchg
loop
pusha
push
or
pop
scas
fstp
cmc
cmp
push
mov
pop
dec
dec
mov
ss
daa
movsb
mov
pop
cli
or
repnz
pop
pop
fmull
pusha
imul
rorl
adc
mov
mov
inc
push
pop
loop
jnp
insb
pop
cmpl
mov
cmp
cmp
pop
pusha
int
addr16
jo
fcompl
or
cs
jl
push
imul
xchg
ljmp
cmp
and
sbb
adc
push
xchg
lds
adc
lock
pusha
add
fildll
cmc
loop
rcr
ret
and
enter
imul
or
clc
shll
stos
je
testl
je
pop
mov
fwait
andb
movsl
xchg
mov
mov
jle
xchg
jb
or
jb
lcall
aad
adc
inc
lsl
mov
mov
inc
shlb
mov
jle
dec
cmpsb
mov
imul
push
push
ds
aad
in
push
sbb
imul
lahf
out
rep
and
clc
inc
daa
or
push
sbb
les
fsub
es
and
cmp
xchg
hlt
add
enter
incl
xor
sarl
and
outsb
xor
add
gs
and
bound
sbbb
push
out
std
rorb
dec
js
jae
push
aas
repz
inc
stos
mov
negb
dec
mov
adc
pop
lea
adc
fiaddl
fsub
imul
mov
ds
pop
cwtl
add
push
and
testb
sbb
insb
loopne
xchg
scas
cmp
lcall
xor
or
add
sub
xchg
cmp
sub
dec
or
jp
cmc
or
sub
mov
cmp
push
mov
and
inc
bound
mov
cmp
inc
ljmp
pop
out
in
ss
inc
pusha
nop
je
scas
and
adc
inc
push
xor
bound
call
xchg
stc
xchg
int
insl
andb
cmp
mov
mov
add
cmp
and
or
in
mov
inc
inc
pushf
ljmp
bound
push
int3
cmp
shl
fmull
push
js
and
mov
imul
fistps
aam
mov
xchg
dec
repz
jns
inc
sbb
cmp
xlat
jo
outsl
popa
andl
aad
scas
sahf
cmpsl
test
sarl
cld
adcl
xchg
xlat
out
jecxz
lret
cmp
ret
jle
cmpsb
mov
aam
cmp
icebp
in
rorb
add
mov
inc
mov
dec
sahf
xor
xlat
pusha
test
insl
or
int
sub
test
pop
add
mov
push
pushf
out
movsb
daa
clc
xchg
pop
out
js
fs
rorb
fsubrl
shll
pusha
xchg
popf
fcmovnbe
in
inc
imul
sub
jg
xor
push
aad
das
jecxz
jmp
int
out
or
lods
adc
adc
jge
pop
loope
xchg
add
push
push
mov
rcrb
pop
jo
icebp
jecxz
sub
shll
cmpsb
pop
pause
es
xchg
pop
push
popf
mov
xor
xlat
mov
dec
xor
pop
repnz
scas
test
jae
pusha
xor
push
cmpsb
repnz
popa
daa
mov
mov
pop
mov
jmp
orl
aad
and
dec
add
mov
bound
jnp
mov
lret
stos
loope
mov
or
dec
and
inc
and
xchg
rcll
fimuls
ss
mov
test
push
xor
repnz
pop
add
dec
jae
inc
mov
xlat
cwtl
jecxz
leave
push
fdivp
and
xlat
aaa
fwait
or
popf
or
ret
add
stos
mov
into
and
jne
rcl
hlt
ret
xlat
in
fsubrs
lods
adc
or
jno
xor
icebp
lock
jno
push
xor
add
iret
inc
repz
cmp
loop
jp
repz
fsubp
add
test
sbb
push
jp
mov
sti
test
adc
fstpt
int
insb
fwait
outsb
gs
cmp
mov
add
mov
adc
repz
mov
stos
jp
subl
push
sti
jecxz
icebp
imul
mov
jae
xlat
fists
jl
or
fcoms
fisttpl
stos
xor
and
movsl
dec
xor
sub
mov
jge
aam
or
push
mov
or
int3
sub
adc
pop
test
mov
push
mov
repnz
add
push
mov
xor
fidivrs
ss
sub
aam
adc
mov
push
mov
call
or
pop
push
int
aam
xor
mov
sahf
loopne
iret
movsl
adc
loope
pusha
push
mov
lock
jns
test
and
mov
and
in
mov
insl
mov
subl
jp
out
pop
outsl
jo
lods
rclb
mov
pop
inc
jl
rcrl
test
jg
das
mov
sti
jg
or
mov
insl
insl
pop
sarb
xchg
cs
inc
pop
mov
sub
pushf
jmp
jg
sbb
mov
inc
fcmovu
push
addr16
popa
ret
dec
aaa
andl
arpl
inc
frstor
mov
adc
dec
popf
or
cmp
cmpsb
loop
fisttpll
lcall
es
push
fldz
fistps
add
int
test
aas
xchg
xor
fbld
mov
rcl
ret
stos
pop
inc
in
cmp
cmp
mov
cli
push
es
xor
and
es
and
xchg
or
aas
es
ficoms
cld
lcall
jns
fldcw
out
out
std
and
inc
inc
add
sbb
jns
add
stc
add
test
mov
fcompl
sbb
pop
lods
and
adc
and
adc
mov
jb
hlt
fcompl
imul
pusha
cs
stos
jecxz
icebp
and
pop
imul
fstpt
mov
mov
xor
xlat
inc
pusha
xchg
fisttps
leave
arpl
sbb
xor
xor
xlat
push
pusha
and
dec
lahf
cmp
in
jle
pop
sti
sbb
xchg
leave
pop
mov
loope
jmp
lret
xor
ret
xor
dec
arpl
cmp
data16
lods
sbb
mov
fisttpll
arpl
in
shrl
adc
loope
in
fstps
scas
shlb
test
mov
sub
lret
xor
bound
xlat
xchg
and
test
pusha
lcall
loope
out
add
out
outsb
push
bound
xor
jnp
push
fists
xchg
adc
arpl
lds
cmc
mov
shl
aad
mov
xchg
pop
fs
sbb
push
jl
andb
imul
in
stos
fnstsw
cmc
xchg
es
xor
mov
sub
pop
movsb
popf
or
gs
or
xchg
or
sbb
ljmp
addr16
and
cmpsb
cmp
fs
lock
ret
and
test
lahf
mov
and
jecxz
data16
scas
subb
mov
ret
lock
movsl
adc
test
into
inc
or
jo
sbb
mov
xlat
sub
pushf
and
mov
sbb
cmc
cmp
stos
or
pop
repnz
push
fnstcw
or
mov
rolb
push
xchg
mov
xchg
pop
add
out
repz
out
gs
jo
add
xchg
mov
pusha
push
addb
lea
jae
test
inc
mov
es
inc
mov
cmp
push
stos
cltd
pop
stc
arpl
movsb
jo
or
into
mov
leave
inc
das
adc
or
cmp
inc
test
inc
jmp
push
adc
push
mov
notb
test
sub
and
in
test
lahf
mov
mov
ljmp
mov
test
stos
bound
pushf
in
mov
push
xchg
movsl
pusha
mov
adc
pusha
or
mov
adc
mov
mov
inc
mov
mov
fisubs
push
and
popa
sahf
mov
adc
mov
leave
in
xor
mov
mov
out
fdivl
outsl
dec
stos
adc
addr16
xor
add
mov
in
addr16
test
call
insb
or
push
imul
push
rorl
or
xchg
stos
lock
cmp
push
push
sub
add
nop
cltd
add
mov
cmp
lcall
aaa
lods
sti
inc
frstor
cmp
cmp
jecxz
pop
iret
fisttpl
cmp
inc
xor
call
fnsave
mov
cwtl
dec
xorl
insl
xchg
dec
adc
movb
shlb
fisttps
jecxz
cmp
xchg
cmp
stos
sbb
add
add
sti
ret
out
nop
mov
std
movl
frstor
dec
andl
inc
xchg
stos
imul
xor
inc
lret
movsl
or
mov
sbb
std
outsb
cmp
jae
pusha
mov
std
fisubl
fstp
inc
std
mov
cmp
outsl
mov
and
or
scas
shll
aas
mul
pop
mov
xchg
iret
xlat
gs
mov
mov
pop
cmp
push
jnp
ret
cmpsb
call
pop
push
sbb
pop
lcall
fistpll
xchg
outsb
pop
sub
mov
pop
das
sti
test
dec
mov
lret
dec
aad
js
sub
inc
push
ss
outsl
inc
cld
adc
loopnew
sub
sub
cmp
adc
mov
fstpl
ds
mov
enter
ss
mov
cmp
inc
andb
pusha
lcall
mov
fucom
adc
or
adc
add
cmp
or
aam
add
dec
adc
fisttps
mov
inc
int
je
jmp
or
and
cmpsb
and
int
dec
push
nop
addr16
int3
sub
mov
ret
pop
xchg
pusha
mov
test
xchg
js
mov
call
out
sub
sub
inc
negl
add
dec
test
imul
fsubrs
ljmp
inc
idivl
iret
icebp
and
in
sub
dec
sub
mov
xchg
sbb
dec
clc
mov
push
sti
bound
in
inc
fabs
xor
lock
fdivr
lcall
mov
xchg
stos
adc
sbb
add
clc
push
lahf
and
jae
popa
js
mov
cmp
repz
pop
dec
popa
push
and
inc
push
clc
mov
fnstsw
cmp
sbb
mov
xchg
cld
or
mov
push
and
sub
mov
lret
xchg
stos
sbb
rclb
dec
cmpsl
pusha
dec
pop
sbb
push
sbb
or
mov
xlat
fists
outsl
mov
pop
cmp
mov
test
bound
xlat
xchg
pop
xchg
pushf
mov
push
popa
cmp
lea
jecxz
dec
pop
lea
bound
pop
rclb
sub
leave
outsl
ffree
or
mov
scas
add
and
movsb
mov
and
mov
cmp
inc
add
sbb
je
ljmp
sbbl
mov
stos
xchg
and
pop
cli
test
inc
mov
jo
add
sub
addb
inc
fiadds
cmp
rcrb
ss
aaa
push
jo
imul
scas
shlb
lret
movsl
xor
push
inc
jg
out
js
add
movsl
jae
xchg
loope
cmp
lret
xchg
repnz
nop
shl
jmp
icebp
add
push
sbb
push
enter
lods
push
fwait
out
mov
mov
outsl
xor
inc
push
push
jl
outsl
je
push
jmp
outsb
xchg
push
push
push
sbb
inc
jl
mov
and
int3
mov
xor
or
ja
test
xlat
ret
fnstsw
xlat
pusha
inc
fnstenv
dec
ss
mov
push
push
popf
inc
ljmp
cmp
lods
loopne
mov
std
xchg
add
push
imul
pop
fnstenv
xchg
lcall
add
test
mov
pusha
nop
sti
dec
push
test
lea
dec
sub
int3
xlat
nop
add
jnp
mov
notb
sbb
jnp
gs
and
lcall
dec
loopne
mov
mov
mov
pop
add
ja
repz
sub
add
faddl
fistps
andl
shrl
sbb
fistpl
inc
rorl
jne
outsl
jae
out
pop
inc
sbb
or
sti
repnz
and
test
out
add
dec
cmpsb
mov
repnz
das
pop
mov
add
bound
das
daa
xchg
and
cmp
mov
nop
arpl
lcall
or
fiaddl
adc
loop
sbb
push
fildll
xchg
lret
mov
hlt
mov
push
fst
out
ss
fcoms
dec
mov
and
xchg
sub
pop
push
mov
or
das
imul
cwtl
push
mul
iret
sub
fisttps
icebp
mov
lods
mov
cmp
jns
mov
jne
test
inc
jnp
arpl
inc
jmp
mov
dec
or
call
in
ret
ret
lea
mov
mov
xchg
mov
popf
sbb
test
or
sti
jle
adc
std
mov
lock
mov
lahf
cltd
lret
js
add
movb
sub
mov
pop
movsl
andl
loope
adc
andb
fimull
mov
mov
add
sbb
sbb
std
fists
call
xor
jge
cmp
mov
imul
mov
scas
adc
sbb
fldenv
test
dec
push
shr
mov
inc
inc
pusha
in
dec
loopne
xorl
test
add
hlt
enter
sbb
repnz
ret
pop
mov
sub
stos
cltd
inc
rcrb
fcomip
mov
mov
dec
mov
mov
pop
add
pop
imul
adc
jae
mov
push
fs
mov
pop
lahf
add
pop
inc
mov
arpl
or
push
mov
movsl
rep
sub
xchg
fimull
js
bound
loop
movsl
fnstsw
fnstcw
sub
pusha
mov
cmp
test
pop
xor
mov
pop
test
xchg
aad
ljmp
jge
pop
add
bound
add
inc
jne
xchg
adc
mov
xchg
fsubl
mov
les
mov
fsubs
bound
mov
and
pop
sub
scas
push
xorl
in
ss
fidivrl
xchg
addr16
lock
pushf
push
repnz
jne
test
stc
lcall
or
sbb
push
sub
cs
xchg
movsl
sarb
roll
mov
mov
add
add
mov
pusha
int3
faddl
std
lods
cmpsb
ret
fistps
xchg
or
jb
outsb
adcb
rcrl
aam
shlb
loopne
fnstsw
dec
inc
aas
pusha
push
rorb
mov
push
push
pextrw
andl
cmp
mov
in
adc
jns
add
aam
jo
and
pop
jns
sarl
mov
stos
inc
xchg
movsb
leave
sbb
loope
fisttps
pop
xor
gs
std
bound
rolb
pusha
test
sbb
mov
jb
sbb
loop,pn
xchg
xchg
rolb
mov
dec
mov
das
gs
arpl
cmpsl
inc
jae
dec
fidivrl
clc
mov
xchg
pop
mov
into
scas
push
ret
xchg
scas
xlat
xchg
sub
mov
mov
bound
add
sub
cmp
add
and
lcall
pop
mov
mov
and
pusha
cli
xor
fs
jl
pop
xchg
test
sbb
enter
mov
dec
dec
ret
popf
push
inc
addl
aam
adc
mov
xor
outsl
xchg
fstpl
inc
push
inc
leave
pusha
inc
test
mov
mull
xchg
push
repnz
push
fcompl
dec
fs
jl
sub
pop
adc
add
inc
scas
pop
sbb
add
fs
int
cmp
inc
push
pusha
ret
xor
inc
cltd
rcl
jmp
add
fst
dec
mov
fwait
xchg
mov
adc
das
or
dec
enter
cmp
xchg
leave
sub
mov
pop
std
sbb
push
out
and
sarl
sbb
or
sbb
mov
in
aam
mov
scas
ds
add
mov
inc
stos
jns
pop
push
fimull
jmp
add
rep
and
dec
loope
xchg
lea
mov
adc
mov
imul
aad
movsb
jo
out
or
test
das
cmpl
lcall
push
and
ret
sub
mov
repnz
jmp
sbb
dec
ljmp
in
cmpsl
push
mov
daa
xorb
into
dec
shll
and
lods
jg
cmp
adc
jge
fimuls
or
repz
lock
mov
jb
fucomp
movsb
in
clc
dec
push
or
push
xlat
adc
ljmp
test
repz
enter
loope
adc
rclb
in
in
mov
push
xchg
pop
xor
outsl
pop
aas
lock
pop
mov
fistpll
mov
add
push
jecxz
pop
popa
mov
test
pop
xor
or
pop
ja
and
and
pop
add
mov
adc
jmp
ljmp
pop
adc
mov
stos
mov
adc
std
bound
pushf
pop
adc
repz
or
lods
add
mov
bound
dec
movsl
mov
ds
mov
es
cmp
cld
mov
loopne
sub
and
test
or
adc
fldl
inc
xor
bound
xor
in
mov
jle
loop,pt
das
out
add
xchg
mov
out
or
movsb
pusha
cwtl
and
dec
aad
outsl
repz
pop
shll
or
js
push
xor
pusha
imul
or
addl
mov
in
pusha
ja
jb
sbb
data16
jecxz
sub
push
pop
loopne
mov
cmc
or
mov
ret
pop
sbb
out
mov
ret
shrb
push
dec
cltd
jbe
pushf
imul
mov
movsb
xchg
std
cmp
push
sarl
mov
jp
jecxz
sbb
pop
pusha
cmpsl
std
mov
shlb
ret
xor
pop
push
daa
mov
popa
or
adcb
jg
xchg
adc
out
mov
sti
cmpsl
fildll
mov
xchg
add
or
xlat
sub
popf
or
ret
xchg
adc
mov
sti
cwtl
mov
adc
addr16
and
sti
or
mov
stc
push
jnp
lret
jo
mov
gs
in
ret
sahf
addl
aas
push
cmp
movsb
cltd
gs
out
subb
jb
cmp
dec
push
ret
mov
roll
stos
push
push
xchg
cmc
cld
pop
imul
inc
outsl
mov
pop
mov
inc
inc
inc
push
bound
fistl
fistpll
pop
loop
pusha
loope
stc
mov
addb
add
xor
pop
sub
xor
inc
mov
stc
stos
xor
cmp
add
or
adc
aam
and
lret
and
incb
push
js
xlat
pop
cmpsb
xchg
popf
repz
xchg
pop
cmpsb
popa
pushf
int
out
or
pusha
dec
fucomip
in
inc
xchg
and
adc
stos
push
mov
testl
add
lcall
push
push
test
dec
mov
inc
pop
scas
shll
sub
cltd
xor
in
jge
movsl
je
push
fs
ljmp
mov
adc
int
aaa
in
jl
js
insb
or
imulb
js
out
add
add
iret
and
frstor
jl
int3
sub
imul
inc
js
push
xor
add
ret
loope
call
add
cmp
loope
adc
das
pop
notl
mov
add
lea
xor
jmp
inc
xlat
lret
mov
sti
negl
adc
int3
jno
lock
push
imul
pop
js
outsl
arpl
repnz
pop
stos
or
cmpsb
xchg
sub
test
sub
lcall
jnp
xchg
adc
mov
lret
mov
and
pusha
sub
jns
adcl
or
jecxz
andb
xor
jo
sbb
ds
lods
jle
mov
clc
and
iret
sti
inc
push
jns
dec
mov
ja
ficoms
adc
xor
iret
movsb
pop
sbb
mov
sub
out
dec
icebp
or
test
pop
inc
sbb
lcall
jb
inc
add
push
adc
mov
xchg
ss
outsl
push
insl
clc
loope
ljmp
mov
sub
test
movsl
add
lds
xor
js
lods
in
pusha
movsl
mov
adc
jbe
test
aas
pop
loope
adc
in
out
clc
ret
loop
cmp
push
or
icebp
xchg
pop
push
pop
sbb
dec
mov
cmp
cmp
sub
ret
jbe
push
mov
cld
cltd
pusha
fimull
das
mov
mov
add
lret
popa
adc
dec
mov
mov
lea
lds
lahf
repz
push
jecxz
cli
jecxz
sub
and
insb
pop
dec
or
mov
sti
testb
xchg
jp
mov
mov
jae
shll
pop
xor
push
fiadds
orl
mov
addr16
rcll
and
pusha
inc
push
icebp
fistps
xor
push
mov
mov
mov
aaa
popf
loopne
push
lods
push
push
push
sti
and
out
add
mov
sub
faddp
xchg
mov
mov
lea
icebp
xchg
pusha
cmp
add
imul
icebp
inc
jbe
mov
cli
ja
mov
sbbb
loope
inc
aad
sahf
int3
sbb
add
shl
inc
rolb
mov
ficomps
sar
jo
pop
cmpsb
sti
arpl
insb
sbb
shll
dec
add
bound
in
mov
test
pop
xor
scas
add
out
mov
movl
shll
fldl
push
into
rorb
push
xchg
xor
mov
mov
inc
in
adc
mov
mov
pop
lock
fcoms
in
add
mov
daa
cwtl
push
lock
or
rorb
inc
notb
pop
jbe
repz
mov
and
xor
test
fbstp
add
adc
dec
int3
dec
pop
ret
imul
out
out
int3
mov
int
push
and
inc
fcmovne
hlt
and
and
adc
fisttpll
xchg
xchg
lahf
sbb
jne
repz
sar
sub
adc
and
enter
lahf
or
in
out
icebp
movsl
or
adc
push
inc
outsl
std
adc
sub
push
std
bound
fcoml
mov
jb
mov
bound
and
mov
add
jno
xor
xlat
insl
lock
mov
sarb
out
addr16
mov
stos
fisttps
mov
add
cld
clc
cmp
sub
inc
fisubs
filds
test
jl
rcll
inc
lret
inc
mov
stos
pop
movsb
inc
hlt
or
in
jge
xchg
inc
sub
orb
test
sbbl
mov
out
jno
mov
fdivrl
cltd
insb
mov
test
movsb
cltd
loopne
loopne
pop
dec
sbb
fisubrs
test
addr16
sub
pusha
adc
xchg
testb
repnz
mov
sahf
xlat
push
aaa
add
mov
int
sub
daa
repz
test
or
gs
add
jno
lods
jo
sub
les
xor
dec
outsb
sbb
aas
inc
sub
inc
int
dec
insb
inc
or
inc
call
and
fisttps
bound
pop
popf
or
pop
push
mov
mov
jb
inc
add
jle
insl
mov
add
push
mov
aam
sbb
out
insb
push
subl
cmp
add
cmpsl
pop
hlt
or
cmp
loope
pusha
js
cwtl
and
dec
mov
rep
repnz
sub
pusha
pushf
add
aam
clc
pop
adc
mov
push
pop
sub
mov
fbld
dec
dec
or
aad
or
pop
pusha
mov
js
adc
icebp
push
xchg
mov
or
xchg
pop
loop
stos
repz
sbb
cld
jmp
mov
inc
sahf
sbbl
and
movsl
sar
and
bound
js
inc
fcomi
cmp
mov
movsb
dec
mov
sub
pop
ss
mov
sar
call
cmp
xchg
cmpsb
sbb
xlat
cltd
inc
mov
pusha
mov
adc
jb
jbe
inc
jl
push
lea
jo
dec
rcll
cmp
and
or
xor
in
in
outsl
pop
inc
mov
rcrl
mov
fisttpll
cmc
push
pop
mov
pop
sub
dec
xor
jne
or
test
push
mov
push
cmp
lcall
ja
outsb
mov
mov
loope
or
mov
add
lods
pop
daa
sarb
push
movsl
sub
xchg
and
int3
fldl
push
fwait
data16
aad
add
loop
mov
or
mov
sub
leave
jns
lods
mov
sub
pop
ror
or
scas
mov
fdivrs
inc
jbe
sbb
shll
outsl
andb
push
icebp
pop
cld
loopne
int3
xor
into
iret
loope
inc
jg
and
mov
mov
loope
es
data16
xchg
or
xor
sbb
push
adc
movsl
insb
sbbb
xor
inc
pop
loop
jg
or
sub
jge
cld
mov
pop
pusha
movlps
add
andl
cmp
cli
pusha
dec
sbb
mov
mov
fdivr
jns
jb
andb
out
and
xchg
out
pop
rorb
arpl
call
mov
jnp
xchg
or
scas
add
out
sub
pusha
mov
loopne
adc
je
and
ret
jmp
test
pop
fdiv
mov
bound
je
outsl
stc
enter
mov
mov
sub
dec
adc
ret
mov
cmp
xchg
add
add
pop
jg
cmp
stos
sahf
sbb
jnp
cmp
or
ja
cld
cmp
cmpsb
inc
cmp
aaa
repz
mov
subl
ljmp
add
mov
xchg
sub
sub
in
ret
fldenv
fstl
mov
adc
sub
adc
jle
adc
mov
mov
inc
ret
inc
notl
push
loopne
popf
mov
adc
add
mov
adc
and
push
xlat
mov
mov
jae
xchg
jno
cmpsl
sbb
out
adc
fldl
or
pop
std
cmp
push
sbb
cmpsl
and
dec
dec
xor
lea
dec
out
repnz
rcr
call
ds
inc
fisttps
add
dec
xor
xlat
dec
sbb
sbb
lods
out
xchg
in
mov
pop
sar
mov
hlt
mov
pop
imul
mov
out
cmc
mov
and
fsubrp
in
cmp
enter
ljmp
bound
mov
std
inc
daa
mov
daa
xor
adc
in
jbe
testl
pusha
es
loop
shll
jp
insb
stos
inc
repnz
xor
adc
push
xchg
pop
mov
or
test
fidivrl
cs
mov
mov
xor
clc
shll
iret
outsl
or
add
mov
xchg
or
roll
aad
icebp
jle
dec
push
inc
sub
nop
std
fisttpll
loope
loop
dec
inc
fdiv
outsb
add
push
in
mov
stos
aad
sbb
loopne
mov
sbb
addr16
inc
xor
dec
pop
pop
out
push
mov
loope
xchg
jnp
or
jbe
pop
jb
pop
pop
fstp
scas
sbb
movsb
test
add
cmpsl
xchg
clc
testb
icebp
jecxz
iret
inc
pop
jnp
inc
mov
in
inc
pop
pusha
sbb
sub
jecxz
pusha
xchg
xor
ja
dec
jb
js
and
sub
shll
or
popa
jmp
inc
sub
pop
andl
mov
add
loop
bound
add
push
sbb
out
inc
out
jecxz
pop
sbb
mov
sbb
pop
insb
adc
mov
xchg
cmp
shrl
xchg
jo
mov
fstl
pusha
imul
fwait
mov
xor
adc
sti
xchg
add
sub
and
mov
sub
popf
rcrl
dec
adc
jnp
mov
cmpsb
popf
cli
and
xor
adc
scas
xchg
adc
loope
outsb
or
imul
mov
int3
outsl
inc
or
in
aam
ret
cmpps
push
dec
insl
adc
test
ss
adc
icebp
jecxz
push
scas
and
icebp
stc
pop
dec
ja
into
in
add
jne
adc
push
sahf
xchg
pop
pop
add
push
or
mov
pop
in
add
test
das
int3
jmp
mov
jo
mov
mov
cld
cld
mov
fs
stos
xchg
mov
push
lods
out
ljmp
xchg
aaa
std
cmp
push
add
lea
rol
xchg
insb
aas
icebp
add
mov
sub
xchg
push
pop
repnz
sbb
push
shll
sti
fstpl
mov
shll
sbb
mov
das
outsb
mov
adc
sbb
popa
fs
popa
adc
dec
add
sahf
sbb
xorl
insb
add
or
jg
in
aas
dec
push
adc
mov
in
out
cli
cmpsl
mov
je
pusha
outsl
or
popa
xor
insl
andl
and
outsl
sarl
lds
sti
xchg
js
lahf
cli
repz
roll
scas
push
arpl
xor
call
pusha
fsubs
xchg
jo
fidivs
in
gs
cs
hlt
movsl
lahf
inc
addb
lret
sahf
pop
test
add
bound
add
pop
dec
lods
cs
lods
adc
icebp
adc
xchg
out
xchg
mov
mov
daa
jmp
rolb
stos
cmp
push
mov
push
test
push
mov
nop
sub
ret
test
adc
lds
imul
adc
and
jle
pop
sub
imull
std
addr16
xchg
or
stc
pusha
inc
mov
out
lcall
dec
stc
inc
scas
stos
xor
in
or
push
dec
pusha
icebp
mov
in
push
std
adc
pop
inc
data16
call
ficompl
popf
js
jno
pop
xchg
push
adc
sahf
call
xchg
pop
fadd
into
roll
stc
stc
aad
mov
ret
loopne
sub
mov
loopne
xor
bound
or
cli
roll
mov
push
jle
adc
jb,pn
or
fidivs
cwtl
shll
std
cmpsb
and
lcall
lea
icebp
out
jecxz
mov
and
imul
ret
push
adc
popa
das
mov
mov
icebp
mov
incb
add
or
in
mov
pop
push
pushf
jmp
adc
sbb
popa
pop
mov
sti
insl
hlt
lahf
adc
xchg
bound
aaa
movsb
arpl
enter
sti
mov
fwait
mov
cmpsl
sbb
mov
repz
or
outsl
pop
fstp
push
push
push
lods
add
dec
jnp
rorl
dec
dec
add
and
push
jns
stc
mov
cmp
mov
rol
lock
jecxz
mov
sbb
enter
xchg
setbe
mov
pop
pusha
enter
xor
mov
jo
arpl
loopne
pusha
xchg
push
out
mov
sub
xor
inc
subl
jno
hlt
dec
in
adc
jo
dec
outsl
test
xchg
add
add
sub
sub
addr16
imul
movsl
ja
and
pop
pushf
cwtl
mov
fs
call
out
nop
xchg
mov
add
mov
mov
adc
jno
stos
xchg
pushf
push
dec
push
arpl
push
lock
xchg
mov
mov
inc
movsb
loop
push
jne
in
jl
mov
sti
shll
sbb
sbb
out
std
fldl
clc
int
repz
lcall
cwtl
push
out
out
cmc
and
es
mov
adc
sbb
sahf
js
sbb
push
add
pop
mov
aas
stos
sbb
arpl
mov
mov
jmp
push
inc
ja
int
popa
adc
lahf
push
in
xchg
dec
add
inc
scas
push
int
gs
cmpsb
pop
sub
cmpsl
call
fwait
mov
add
enter
mov
sbb
and
sbb
or
aam
mov
fdivp
out
cmp
cwtl
mov
stc
jmp
shrl
int3
ret
sbb
rclb
out
rol
lcall
adc
cmpsl
shl
adcl
mov
xchg
je
fisubrs
inc
or
and
fisttpll
test
mov
flds
into
adc
loopne
add
cmpsl
cmp
sbb
je
mov
pushf
fisubs
adc
sti
pop
scas
pusha
or
adc
push
and
mov
repz
pop
mov
sbbb
sub
mov
add
stos
and
stc
mov
push
or
notl
out
adc
stc
mov
cmp
add
loope
mov
mov
loop
jo
mov
and
lcall
jns
cmp
stos
cmpb
insl
cmp
outsl
xor
push
in
leave
push
jne
aad
scas
ror
and
adc
imul
pop
test
push
and
pop
xchg
mov
jecxz
mov
pop
scas
pop
repz
pop
and
clc
aad
mov
dec
adc
adc
mov
rcr
or
add
add
frstor
iret
mov
fiaddl
pop
sbb
dec
jecxz
pusha
fwait
pop
addr16
lods
mov
jnp
subb
fidivrs
mov
pop
addr16
sahf
scas
icebp
shll
out
adc
repnz
xor
jae
loope
mov
bound
mov
flds
mov
sbb
nop
sub
mov
and
je
cmc
and
hlt
aam
mov
ja
fisttpll
aad
sub
inc
arpl
insl
pushf
ret
outsb
lods
push
inc
cltd
xchg
call
xchg
js
push
pop
cli
ret
jl
or
cmp
fldt
ret
lcall
ficompl
xchg
or
cmp
fists
xor
cmp
pusha
rorb
mov
xlat
and
mov
add
sub
cs
sahf
or
cli
and
mov
inc
mov
cli
mov
jnp
cmpsl
jmp
push
pop
sub
or
xchg
or
jg
mov
aad
imul
mov
xchg
lock
adcl
loop
frndint
sbb
pusha
mov
int
push
mov
xor
test
or
xchg
xchg
xor
aam
mov
std
call
lcall
push
jnp
xchg
ret
loop
add
pop
adc
imul
dec
xchg
mov
lods
in
loope
cmp
jbe
inc
sbb
xchg
fucom
movsb
add
add
mov
sahf
pusha
dec
data16
ds
ret
xchg
mov
out
inc
shll
imul
ljmp
clc
rcl
repnz
push
cmp
push
cmp
lcall
mov
mov
notl
shl
pop
hlt
pop
ret
in
ret
bound
jb
dec
inc
or
inc
outsb
repz
pop
mov
outsl
jnp
or
or
push
pop
rorb
mov
insl
add
adc
push
idivb
cmp
ret
jg
sbb
mov
jmp
pop
sub
mov
jmp
into
pop
push
inc
push
aam
scas
pusha
mov
rcr
push
xchg
xor
orl
stos
cmpb
mov
add
inc
push
ja
adc
sti
mov
pop
sar
out
sbb
sti
aad
xchg
mull
sub
daa
je
sub
scas
and
or
add
mov
hlt
adc
loopne
cmpsb
in
sub
cmpsl
icebp
rorl
loopne
mov
imul
cmp
mov
jmp
inc
inc
ljmp
cmp
push
loope
push
mov
das
cli
mov
fcomps
leave
imul
les
insl
dec
pop
dec
ljmp
mov
outsl
mov
add
pop
call
ret
jo
dec
arpl
dec
sbb
pushf
das
add
in
testl
sub
or
mov
mov
push
es
mov
or
jno
fdivrp
out
imul
inc
jns
pusha
andb
fsubrl
xor
jecxz
sub
shll
inc
jns
mov
into
mov
adc
test
jmp
lcall
les
fidivl
push
inc
ds
add
arpl
std
daa
sub
mul
ret
xchg
ds
hlt
clc
fst
sub
insl
inc
and
sbb
bound
mov
xorl
fcmovb
jno
ret
lock
push
add
mov
std
repnz
into
pop
fistpll
scas
add
repz
test
xor
mov
push
cmpsl
jecxz
pop
mov
cwtl
fs
lcall
lock
push
cmp
xchg
frstor
add
push
cmpsl
push
into
orl
filds
test
es
cs
loopew
mov
xlat
bound
loop
leave
in
frstor
push
test
inc
rolb
int3
cltd
out
add
jmp
lods
mov
dec
clc
add
test
rclb
dec
out
pop
inc
xor
in
shrb
sbbb
cmp
add
in
xchg
iret
stos
jp
gs
stc
and
sti
pushf
xor
add
subb
pop
xlat
inc
dec
gs
adc
loopne
in
mov
shll
call
mov
test
cmp
and
out
push
jmp
int
insl
xchg
xchg
sub
repnz
shll
pusha
xchg
mov
es
mov
rorb
cli
cmc
or
lock
jecxz
mov
jle
aad
movsl
movsb
dec
fstpl
inc
xchg
lods
sahf
int
sbb
dec
sahf
mov
ja
sbb
in
stc
mov
stc
fwait
stos
or
mov
sahf
scas
add
pop
dec
add
int
or
rclb
inc
inc
fwait
and
in
and
shl
add
fsub
outsl
jle
push
jo
xlat
jnp
or
dec
jg
dec
sub
push
xor
dec
mov
xchg
mov
sarl
ret
sub
xor
frstor
fisubrl
insb
sbb
pop
cli
aam
adc
pop
jmp
or
das
aam
std
ds
xor
insb
mov
inc
sub
das
mov
ficoms
es
or
stos
ret
loopne
js
lea
cmpsb
in
pusha
lds
pushf
and
or
pop
outsl
popl
xorl
jnp
sbb
test
mov
jle
xchg
dec
sti
cltd
mov
mull
add
xchg
cwtl
adc
ds
repz
xlat
lds
cmp
pop
std
or
mov
xchg
movsl
xchg
mov
test
mov
fstpl
inc
jb
movsl
mov
inc
pusha
dec
sbb
add
jecxz
or
hlt
push
xchg
popf
stos
fcoms
rcll
and
outsb
mov
je
mov
repz
lock
fs
adc
mov
loop
pop
jb
pop
icebp
lcall
sbb
fwait
es
icebp
pop
mov
push
fimuls
std
rclb
mov
sub
mov
into
push
sbb
lret
roll
scas
int
outsb
movsb
outsl
mov
or
ds
lret
mov
pop
jmp
iret
addr16
daa
shr
sbb
sbb
lods
xlat
andb
shl
fidivl
shrl
xor
mov
mov
adc
aas
push
push
icebp
sarl
mov
jo
cmpsb
push
mov
push
push
loopne
ret
int3
xchg
push
push
pop
pop
or
mov
ret
mov
xchg
inc
or
out
fisubs
test
pop
xchg
mov
dec
in
test
enter
sbb
fbld
jp
popa
mov
cmc
jno
pusha
push
lret
mov
gs
lcall
push
sbb
pop
adc
lahf
pushl
inc
jl
pop
sbb
out
inc
dec
stos
jge
push
mov
dec
dec
xlat
pusha
int3
inc
xchg
xchg
fisubrs
or
push
shlw
and
pop
iret
ficoms
cltd
dec
fistps
add
mov
in
pusha
sbb
cli
xchg
popa
into
fs
loop
aad
inc
bound
or
or
clc
cmp
inc
cltd
sub
mov
lcall
jmp
push
sti
xorl
add
lock
shll
push
dec
inc
xor
std
xchg
out
ret
repz
cltd
push
andl
xchg
shlb
xor
dec
addb
addr16
dec
mov
lds
bound
test
xchg
inc
iret
lock
shlb
fists
push
sar
xor
mov
inc
in
cwtl
pusha
cmpsb
je
lock
inc
aad
sub
jae
cmp
add
inc
movsl
insl
inc
fldl
cs
add
mov
or
repz
mov
fs
negl
andl
mov
out
add
daa
xchg
inc
inc
daa
out
pop
adc
hlt
xor
ljmp
data16
add
test
jno
stos
mov
dec
cltd
or
daa
jne
mov
lds
fidivrl
dec
pop
inc
pop
adc
in
int
inc
sarl
pusha
xchg
xor
mov
scas
and
jmp
fs
push
fisubs
fcomps
adc
loopne
lock
cmp
xchg
lea
popf
mov
dec
adcl
sub
bound
mov
or
mov
adc
hlt
pop
in
dec
cmpsl
ljmp
xchg
ljmp
mov
clc
or
cld
lret
cmpsb
adc
sub
outsl
jg
xchg
jge
ret
sub
fsubl
and
pusha
arpl
fisubrs
xchg
je
fistpl
or
arpl
fsub
xor
mov
cmp
icebp
push
adc
stos
or
das
pusha
mov
movups
repz
je
xlat
or
cwtl
jnp
stc
sub
pop
cmpsl
stc
addl
lock
fimull
test
jle
adc
shrd
mov
pusha
push
xor
ret
es
mov
popa
mov
insb
popf
or
test
andb
imul
jmp
sbb
repz
adc
mov
aad
xlat
xchg
jl
jle
jg
repnz
stos
pusha
sbb
shll
lahf
leave
sub
mov
lcall
mov
addr16
mov
mov
sti
mov
test
popf
cmp
dec
pusha
in
push
cmp
dec
mov
sub
xor
xorb
xchg
fstps
cmp
pop
sbb
hlt
mulb
jge
adc
pop
cli
mov
mov
and
mov
imull
dec
dec
or
pop
and
loopne
fwait
sbb
push
fst
repnz
dec
pop
pop
jns
ret
orl
pop
or
repnz
push
jae
rcll
mov
mov
or
adc
pusha
outsb
pop
outsl
xchg
add
out
loope
frstor
inc
add
push
aam
add
ds
inc
imul
and
mov
mov
inc
jmp
xor
or
xor
rcrl
or
pop
sar
sub
pusha
fsubl
scas
mov
push
test
out
mov
icebp
xor
pop
inc
mov
nop
jg
popa
cltd
push
shll
dec
std
push
movsb
jg
rcrl
xchg
test
test
sub
push
cmp
insl
jb
inc
or
inc
cmp
dec
lcall
in
mov
cmp
hlt
add
scas
inc
leave
sar
cmp
insl
inc
and
xchg
cmp
stc
fwait
popa
dec
xor
xor
mov
out
mov
ret
cmp
movsl
adc
push
xlat
scas
mov
xor
dec
lret
adc
push
js
add
scas
pop
xor
sub
inc
pop
fisubs
sahf
mov
inc
fnstsw
fmuls
push
adc
test
stos
popf
rcr
aad
hlt
cmp
dec
hlt
mov
pop
stos
jecxz
lcall
or
cmp
push
test
das
inc
inc
jno
jecxz
pusha
pop
mov
xchg
add
stc
pop
decl
and
add
mov
pop
loope
loopne
test
ja
push
adc
stos
dec
xor
mov
cmp
adc
in
cmpsb
mov
and
int
std
fwait
mov
pop
popa
sti
inc
mov
push
cmpsb
test
jo
inc
sbb
adc
and
mov
jo
cmp
pusha
push
xor
repnz
andb
shrl
fcoml
add
sub
pop
add
ficompl
stos
repz
fsts
js
inc
dec
jecxz
cltd
mov
jp
cmpsl
aas
inc
push
mov
mov
sarl
je
mov
jmp
ljmp
repnz
or
shl
rorb
push
nop
pop
jmp
stc
test
and
mov
or
out
scas
dec
aaa
mov
dec
pop
xchg
repz
mov
subb
outsl
jnp
xchg
inc
nop
or
sti
pushf
cltd
lock
pop
adc
loopne
and
bound
mov
movsb
jle
fcoms
pop
js
fisubrs
sub
scas
mov
pop
lret
nop
push
jmp
pop
out
call
stos
pop
mov
in
lods
sub
pop
dec
jp
adc
loope
repnz
sbb
js
dec
push
inc
repnz
cwtl
out
mov
lea
out
out
add
mov
pop
xchg
jle
mov
or
and
mov
dec
or
xchg
cltd
pop
aaa
pop
push
sbb
ret
sbb
pop
lcall
jle
inc
imul
out
xchg
mov
mov
sub
movsb
scas
jl
pop
jno
pusha
shlb
loope
rcl
xchg
cmpsl
test
loope
sub
xor
lret
outsl
mov
ljmp
in
sbb
into
jl
mov
jge
insl
bound
scas
mov
sbb
pushf
lock
cli
dec
cmp
xchg
mov
stos
sbb
leave
xlat
inc
xchg
and
ficompl
add
cmp
das
mov
out
cli
ret
xchg
in
out
cmpsb
inc
push
pusha
es
je
lahf
cmp
adc
xor
cmp
pusha
adc
loop
jne
shrl
ficoms
xlat
adc
fcmove
pop
mov
adc
mov
cwtl
idivb
in
mov
js
sub
pop
stc
xchg
adc
xchg
clc
int3
push
es
test
movsb
jnp
aas
inc
lods
jnp
es
or
sbb
and
fnsave
cmp
test
or
xchg
jne
add
sbb
pop
jb
jae
fmuls
inc
imul
repz
clc
int3
cltd
or
pop
pop
lea
in
std
movsl
cmp
jmp
movsl
cli
clc
push
call
loope
pusha
inc
pushf
pop
mov
xor
stos
ret
pop
xlat
jg
pop
insb
xchg
jmp
jmp
ret
mov
lea
push
gs
cmpb
imul
out
mov
sub
dec
cltd
lcall
and
sub
subps
cli
cmp
mov
xchg
push
inc
xor
mov
int
insb
add
push
and
popa
rcl
hlt
jle
mov
mov
stos
mov
adc
pop
icebp
loope
sarb
lods
enter
fwait
sbb
lret
shrl
xchg
dec
mov
push
mov
inc
inc
lcall
sub
pusha
cmpsl
mov
inc
andl
xchg
mov
and
mov
stos
sbbl
outsl
xor
iret
out
andl
bound
jl
cmp
xchg
into
sub
jle
pusha
pushl
cli
decb
adc
jecxz
cltd
mov
movsl
or
call
mov
or
sbb
sbb
sbb
ret
cmp
or
mov
movsl
jo
add
lcall
jecxz
push
or
or
jbe
imul
xchg
push
mov
shll
enter
cmp
int3
adc
arpl
push
nop
imul
jae
ljmp
stc
cmp
xchg
loope
mov
mov
fists
test
jp
inc
pushf
xor
xchg
xlat
stos
and
mov
shrl
push
call
jns
mov
sbb
or
aaa
popa
mov
xlat
cld
fisttpl
push
xchg
arpl
shrl
jl
dec
sbb
push
shlb
test
or
lahf
mov
stos
mov
pusha
and
mov
jecxz
cmpb
mov
mov
mov
in
lods
jo
inc
jle
push
sbb
pop
mov
movsl
popa
xor
jg
popa
mov
cli
jmp
mov
decl
mov
mov
popa
enter
cmp
inc
lea
or
mov
jae
pusha
into
sbb
imul
xchg
sbb
std
mov
jl
pusha
ljmp
inc
mov
fisubl
sbb
bound
inc
pop
out
inc
or
sbb
sbb
pop
sbb
cmp
inc
dec
push
call
lcall
adc
out
mov
stc
xchg
rcrb
dec
adcl
out
outsl
fsts
rolb
cli
pop
dec
push
stc
adc
add
pop
sti
pop
pop
test
inc
ffreep
mov
push
xlat
int
mov
or
or
pop
call
xchg
xor
add
cli
sahf
sarl
loopne
add
cmpsl
cmpsl
cmc
xor
dec
mov
sub
dec
sti
mov
lods
in
adc
movsb
shll
pop
pushf
sbb
adc
arpl
insl
jmp
xor
les
mov
sub
sbb
cmpsb
pop
pop
addr16
xchg
jb
jo
sar
sbb
inc
xchg
and
mov
test
sahf
xlat
mov
cmp
mov
mov
loope
in
dec
cld
fimuls
or
mov
orl
jg
add
movb
adc
sarl
or
mov
and
mov
mov
ret
icebp
out
push
pop
or
mov
inc
add
jecxz
pusha
aas
mov
insl
jp
dec
shrb
pop
dec
test
fsubrs
adc
jp
std
aad
lods
xchg
mov
sbb
xchg
xor
cmp
xchg
cld
mov
sbb
cmpsb
aad
xchg
xor
mov
jmp
mov
dec
pop
fbld
cmp
sti
addr16
push
repz
pop
dec
lret
mov
mov
out
into
pop
jb
or
mov
adc
mov
rcrl
xchg
fbld
cmpsl
cmpb
out
movsl
call
shll
adc
and
mov
xchg
outsb
xchg
pop
clc
cli
addl
push
cmp
xchg
push
or
fdivrp
sub
je
bnd
jns
mov
shlb
add
fidivrl
sbb
mov
inc
mov
add
fists
mov
inc
adc
cmc
sti
pop
aas
test
xchg
pop
stc
xor
mov
xchg
cmp
inc
add
inc
sar
inc
lods
insl
mov
cmp
push
mov
out
inc
rol
jl
mov
mov
movsl
or
xor
cwtl
and
iret
pop
ja
mov
or
or
push
and
adc
gs
inc
mov
mov
jge
jbe
dec
fldl
jo
inc
xchg
pusha
ficoms
push
lcall
mov
outsl
lock
adc
mov
or
or
add
scas
fisubl
cwtl
xor
xor
cmp
fidivl
sub
lods
mov
dec
sbb
add
push
jnp
pop
fwait
gs
pushf
jo
sahf
sub
xchg
jle
pop
mov
inc
xchg
outsl
push
movb
cmpsl
dec
xchg
and
addb
mull
not
ret
push
les
fbld
ljmp
cmpsl
cmpsb
push
and
scas
hlt
pusha
cld
jbe
inc
or
cwtl
lret
outsl
jl
js
repz
icebp
dec
enter
xlat
push
jo
mov
addr16
popf
mov
mov
mov
add
mov
cltd
out
bound
mov
ret
imul
adc
inc
in
push
stos
insb
mov
sti
sbb
iret
or
int3
push
sar
mov
adc
pusha
push
and
sub
arpl
push
cld
movsl
out
fstpt
lods
jp
cmpsb
jb
mov
pusha
rcrl
fwait
mov
pop
lea
pop
mov
sbb
outsb
xor
clc
jmp
out
fdivl
aam
add
dec
xor
out
mov
js
in
ds
pop
jle
jp
repz
sbb
jecxz
popf
jnp
sub
fstl
lods
rcr
in
repz
outsb
mov
dec
dec
pop
mov
and
mov
arpl
lds
and
jae
pop
and
xchg
loopne
rcrl
fnstcw
incl
and
xor
xchg
ljmp
adc
mov
inc
je
jcxz
rcl
jmp
push
icebp
cmpsl
ret
adc
dec
xlat
xchg
mov
mov
lcall
jae
xchg
add
pushl
lods
mov
push
jo
or
and
mov
or
cmp
mov
repnz
push
lods
pop
cmp
lahf
xor
fcoml
jns
scas
pushf
mov
stos
cld
arpl
push
popa
iret
stc
jecxz
xchg
mov
add
mov
cmp
jl
arpl
movsb
sbb
inc
inc
ljmp
jp
ss
shll
inc
mov
cmp
ret
pop
xchg
and
mov
out
enter
repnz
sbbl
add
out
aam
mov
dec
mov
and
jmp
sbb
ret
mov
fs
stc
jbe
orl
inc
repnz
sub
addr16
push
mov
sub
mov
pusha
out
and
cmp
repz
xor
pop
mov
das
lds
dec
inc
mov
pop
xor
mov
addl
pop
stc
mov
xchg
cmp
popa
and
in
adc
lahf
pop
in
push
or
repz
mov
push
xchg
jnp
jmp
rol
mov
xchg
cld
pop
mov
add
les
mov
add
jecxz
int
lods
iret
xchg
inc
sbb
cmp
out
jns
cmpsl
sbb
jne
mov
lcall
and
mov
test
inc
stos
test
dec
rcrb
mov
mov
and
xchg
push
std
pushl
dec
sub
out
sti
push
fdivs
pop
cli
inc
push
cltd
inc
add
loope
nop
or
lods
sti
and
jno
insb
add
aad
pusha
test
xchg
add
xor
repz
xor
jp
popf
out
adc
roll
xchg
bound
pop
les
lock
ret
test
subl
imul
xchg
movsb
pop
inc
pop
mov
insl
push
addr16
test
mov
in
jecxz,pn
push
pop
xor
xchg
dec
inc
add
bound
mov
pop
jns
cmp
jmp
xchg
in
cmc
jno
loopne
inc
aaa
ret
lods
pop
test
sbb
mov
cmovge
in
test
arpl
lcall
xor
push
lea
or
lods
pop
lock
pusha
mov
lds
xorl
mov
icebp
out
and
fnsave
icebp
in
aaa
cmpsb
outsl
pusha
out
test
addl
test
movsl
movsb
out
fisttpl
ret
pop
push
out
push
and
xor
cld
push
clc
add
pop
push
mov
rcll
mov
inc
aad
mov
jg
icebp
int3
icebp
mov
add
clc
shlb
fsubrs
dec
sub
push
or
cld
cmp
push
and
repz
addr16
adc
cmp
imul
pop
out
sub
xor
ret
dec
daa
jae
les
mov
push
cmpsb
cmp
jne
pop
in
adc
add
pop
push
sub
mov
test
call
sbb
int3
push
repz
push
jb
dec
cmp
in
shrb
in
add
ds
addb
cmp
icebp
pop
mov
stos
cmp
pop
mov
xor
mov
int
sub
and
push
jb
scas
xchg
adc
or
bound
push
in
pusha
pop
pop
jno
stc
mov
xchg
addr16
xor
cltd
mov
jecxz
lret
repnz
sarl
mov
loop
xor
sbb
adc
dec
mov
jbe
pusha
sub
pusha
add
sub
mov
or
mov
cmpsl
pop
dec
loope
repz
pusha
mov
sub
div
test
jae
inc
call
lea
int
stos
push
repnz
xchg
push
adc
out
loopne
jne
lcall
das
xchg
subb
fwait
add
idivl
add
inc
ljmp
clc
outsb
xor
outsl
call
pop
sub
or
lahf
sahf
lret
idivb
cmp
pusha
mov
mov
imul
stos
pushf
and
mov
popa
jmp
sbb
scas
pushf
pmuludq
mov
xlat
lret
ljmp
inc
fcom
testl
xor
stos
dec
xchg
enter
add
pop
std
and
add
test
dec
out
scas
pop
mov
jns
fdivr
lods
mov
cmpsl
sbb
or
loop
mov
testb
hlt
pusha
fstpt
xchg
mov
or
fmull
pop
mov
jno
cmp
pop
lods
or
enter
pop
orl
mov
dec
mov
insb
adc
addb
mov
mov
inc
dec
dec
sub
in
fbld
jmp
int
push
sbb
mov
jecxz
or
fs
mov
inc
aam
lret
mov
xor
mov
sub
pop
xchg
pusha
addr16
mov
xlat
and
mov
cmp
add
mov
pop
sub
mov
rcrb
cmp
stos
cs
orl
movsb
mov
ret
sbb
je
jmp
mov
mov
and
sub
jg
pusha
xchg
cs
repnz
push
mov
push
ret
add
and
lcall
out
lds
mov
out
fstpl
xor
mov
cld
aad
add
adc
push
outsl
popf
sbb
and
and
or
inc
pop
or
mov
dec
call
push
sbb
outsl
std
ret
xchg
adc
lret
cmpsl
push
mov
sub
outsb
and
fs
call
cmp
dec
out
mov
dec
psraw
xor
fwait
loope
shlb
repz
inc
les
jle
imul
cmc
lret
pop
stos
pop
outsl
dec
jp
jl
add
ficoml
or
xchg
test
cmp
sub
add
fdiv
push
sbb
fldt
pop
out
pop
cld
bnd
jl
sub
shll
mov
cmpsb
jmp
dec
push
loop
push
push
add
xor
mov
jo
mov
adc
loopne
cmp
adc
mov
or
sarb
stos
hlt
xor
jb
mov
inc
cmc
clc
mov
pop
jp
mov
mov
sub
xchg
movsl
nop
push
subb
and
lcall
inc
and
mov
inc
dec
insl
ret
test
movsl
mov
nop
mov
shrl
jle,pt
shrl
pop
and
push
movsb
outsb
mov
mov
shrb
jge
cli
loopne
push
sti
add
inc
and
xor
jno
mov
lret
jae
and
add
jmp
add
fiadds
stos
int3
or
mov
sbb
pop
mov
xor
mov
dec
pop
in
inc
jo
cmpsl
scas
pop
repnz
dec
mov
cmp
mov
out
mov
scas
nop
sbb
cld
testl
sub
add
mov
push
bound
xlat
push
sbb
outsb
mov
leave
xlat
or
jnp
jp
push
mov
cs
ret
push
iret
cmpsl
mov
mov
cmc
pop
inc
in
jb
add
add
cs
mov
lds
outsl
test
push
mov
faddl
xchg
fstpl
fstps
push
mov
ret
push
sbbl
clc
stos
cli
jno
sbb
mov
sub
insb
xchg
jg
or
lret
and
mov
mov
adc
adc
into
cmp
inc
jo
mov
fwait
pop
pop
je
outsl
mov
test
adc
xlat
sbb
loopne
jecxz
inc
dec
aas
add
push
inc
or
rorl
shlb
jl
scas
insl
bnd
fildl
std
cld
dec
out
pop
divl
sbb
mov
jo
fbld
pop
out
dec
push
mov
outsl
xlat
iret
out
sbb
pop
dec
pop
or
xchg
push
frstor
add
mov
sbb
ljmp
int
jno
sub
outsl
jb
xchg
push
jp
testb
sbbb
pop
push
inc
clc
pusha
clc
jbe
cltd
ljmp
pushf
lahf
mov
and
movl
scas
dec
jb
ja
push
mov
lock
in
jne
rclb
loope
add
mov
and
mov
movsl
lods
or
cli
loopne
pop
mov
mov
mov
fbld
mov
shlb
sbb
push
ljmp
jp
test
dec
insl
jbe
int3
dec
cmp
mov
flds
jae
and
jno
mov
mov
pop
add
test
js
testb
add
cmp
fiaddl
ja
push
out
and
shll
sbb
fisubrs
addb
lods
fcoms
sti
mov
sbb
wbinvd
shl
pop
mov
mov
sbb
pusha
pop
xor
pop
cs
es
sub
xchg
or
pop
lahf
fdivr
cmp
ret
push
lea
mov
adc
jecxz
mov
sbbl
icebp
outsl
stos
jno
jmp
jp
inc
sbb
pop
testl
fs
test
xlat
pusha
sbb
mov
push
ret
lods
repnz
xchg
lods
jns
jnp
movsb
mov
fcoml
jb
mov
out
into
inc
fisubl
mov
jae
cmpsb
pusha
les
cli
dec
frstor
in
fldt
pop
pop
ljmp
stc
sbb
pop
inc
push
popf
xchg
xor
inc
daa
repnz
cs
insl
or
int3
xor
movsl
fsubrl
pop
or
aad
xor
lcall
sbb
add
xchg
or
jl
mov
fisubrl
dec
add
bound
xchg
fiaddl
mov
pop
xor
pop
add
or
aaa
test
repz
cmpsb
add
outsl
jo
mov
pop
sbb
xor
test
pop
pop
pusha
cld
xor
xchg
scas
pop
shl
jl
cmp
inc
arpl
mov
xor
shll
or
out
pop
adc
test
push
pop
mov
scas
mov
or
cld
mov
ja
mov
sti
mov
pushf
inc
push
cmp
pusha
dec
mov
fisubs
idivl
rcl
xor
repnz
fs
sub
mov
rcrb
mov
pop
sub
add
fst
xor
std
xchg
cli
fistps
nop
test
ret
sbb
push
clc
mov
dec
and
cmp
aam
mov
iret
lods
imul
aad
push
das
sub
arpl
stc
addr16
mov
ret
add
addl
jno
cmc
lret
insl
pop
push
inc
les
and
lds
aad
cwtl
std
xchg
add
push
xor
outsb
hlt
popl
add
stc
inc
mov
lock
sarl
cmc
pop
pop
mov
aam
jno
pop
pop
mov
pop
or
loop
or
jmp
test
adc
xlat
imul
mov
add
loopne
sub
or
shlb
std
repnz
push
test
cmpsl
pusha
dec
xchg
daa
push
adc
jo
mov
cmp
mov
pop
mov
ss
aas
pop
sbb
js
pop
jae
sbb
popa
mov
in
int3
inc
xor
mov
mov
mov
insb
add
fcmovnu
enter
jae
push
imul
adc
xlat
mov
movsb
push
lods
addr16
ret
mov
lock
dec
pop
popf
sti
out
cmpsb
mov
movsl
out
inc
cmpsb
loop
add
shll
loope
pop
adc
bound
out
push
and
mov
leave
scas
repnz
shr
mov
lahf
stos
int3
push
dec
fildl
xchg
push
shll
popa
shrb
or
add
cli
push
shrb
movsl
rclb
out
jp
mov
clc
cmc
hlt
sub
pop
arpl
sarb
pop
add
dec
dec
cmpsl
inc
pop
sub
mov
mov
pusha
or
js
fucomip
inc
subb
or
pop
push
aad
in
xorl
mov
cmp
or
sub
stc
cld
pop
ja
loopne
and
orb
pop
cmp
mov
jp
in
pusha
cmpsb
sub
pop
int
jo
mov
inc
popa
cmp
adcb
sub
outsb
andb
mov
insb
dec
pop
fcoml
xchg
repz
push
xchg
lods
sbb
mov
jns
stos
mov
and
xchg
mov
cltd
out
fiaddl
inc
cs
arpl
shlb
outsl
insb
cmpsb
cmp
ds
bound
mov
and
es
sbb
sbb
cmp
movsl
add
jnp
xor
xchg
mov
push
push
ret
in
rolw
lods
lock
xor
push
shll
shlb
sarl
int
push
icebp
mov
loopne
pop
mov
shll
xchg
je
mov
adc
cld
daa
sbb
out
in
add
mov
dec
arpl
test
jmp
mov
cmpsl
pusha
std
lret
add
adc
mov
mov
mov
stc
loope
rolb
aad
inc
lret
call
out
bound
pop
jae
adc
cld
ret
jl
mov
inc
sbb
pop
dec
repnz
shlb
xchg
adc
cltd
jbe
out
pop
lods
inc
lret
push
shrl
cmp
xor
aam
ret
sbb
sbb
in
jp
out
ds
add
pusha
inc
and
movsl
nop
dec
sub
xor
jo
xor
adc
pusha
sub
push
adc
call
xor
xlat
xchg
fdivs
xchg
mov
sarl
lret
scas
rcrb
fsubp
imul
push
stos
mov
jge
stos
add
lahf
loope
cli
repz
sub
mov
or
push
fisubrs
jnp
jo
mov
in
outsl
fadds
or
pop
ret
fisubrl
mov
mov
mov
outsb
stc
lret
mov
mov
icebp
in
in
jo
pop
in
push
stos
or
or
fcomps
dec
mov
out
mov
inc
sbb
sti
int
or
orl
cmpsl
popa
adc
clc
out
sub
bound
ret
test
das
cld
jge
pop
int
inc
jne
bound
xlat
or
mov
sahf
sbb
fistl
jno
inc
call
pop
cs
aad
fcomp
push
sti
aad
cmpsb
mov
mov
add
aad
dec
popa
icebp
mov
pop
ret
mov
and
cmp
add
mov
cmp
shrb
test
repnz
fwait
push
mov
or
mov
arpl
cmpsb
push
cmp
fcoml
mov
mov
adc
cmp
cmpsl
sbb
inc
ljmp
pop
mov
sub
sar
jb
lcall
jmp
inc
repz
repnz
mov
out
pop
popa
pushf
outsw
xchg
push
push
jmp
test
mov
sub
inc
push
mov
ret
outsb
cs
ficomps
ss
ljmp
jmp
std
pop
sub
sbbb
lock
mov
movsl
ret
pusha
cmc
cwtl
jle
repnz
pop
xor
pop
cmp
mov
adc
lock
ffreep
je
adc
inc
std
fistpll
mov
inc
adc
leave
pusha
lea
popa
push
xor
int
pop
call
pop
xor
pop
jge
lock
sub
cs
inc
cmp
inc
mov
cmp
add
inc
mov
repz
imul
cmpsb
lea
lock
fistpll
cmp
iret
mov
sti
addl
xchg
dec
mov
fnstsw
add
or
rcll
notl
iret
jbe
andb
popf
shrb
or
clc
in
rcr
sbb
lods
mov
jae
inc
dec
movsb
and
jae
in
add
ljmp
cld
sbb
dec
mov
jae
push
push
fnstsw
or
cs
lcall
xchg
cli
mov
mov
pop
negl
adcb
test
icebp
aad
sub
es
cmp
mov
jl
lds
jb
repnz
xorb
lea
sbbl
orl
cmp
or
push
sub
dec
lods
jne
mov
data16
jne
jle
pop
push
sti
repz
js
mov
xchg
mov
dec
outsl
mov
pusha
movsl
nop
bound
repz
jno
rol
mov
outsb
ja
rclb
pop
lods
clc
sbb
mov
push
into
pushf
or
hlt
add
scas
xchg
out
adc
add
lds
mov
shlb
xchg
test
ret
mov
out
inc
addl
pop
daa
mov
mov
lods
xor
jmp
aas
push
mov
scas
jb
in
cmp
push
jns,pt
leave
adc
in
shll
loop
pushf
or
fcoml
loope
pop
pusha
cmc
adc
mov
insl
in
addr16
je
pop
sub
in
sub
mov
js
push
stos
dec
pushaw
add
arpl
mov
xchg
mov
jns
repnz
ret
andl
xor
push
and
std
xchg
in
cmp
sbb
pop
jg
pop
loope
arpl
mov
fildll
idivl
sbb
js
add
mov
dec
std
mov
popf
dec
cmp
xor
pop
add
xor
or
and
daa
pop
mov
mov
ja
int3
repz
dec
rcll
and
bound
mov
sbb
sub
xchg
fcmovnb
popf
into
mov
dec
fldl
inc
or
or
mov
js
cmpsl
test
dec
jb
adc
push
mull
fs
les
mov
jo
or
push
psubw
mov
into
jle
stos
sbb
inc
stc
data16
dec
fldt
pusha
mov
addr16
inc
subb
sub
mov
cmpsb
stos
fbld
movsb
ds
mov
mov
xor
stos
test
fldl
jmp
mov
jmp
and
xor
clc
cmp
mov
add
adc
sbb
sbb
loop
mov
mov
mov
push
xor
fimull
pushf
lret
xor
stos
loop
test
mov
mov
jns
ret
or
stos
or
mov
popf
das
bound
mov
or
dec
or
jl
push
xor
in
cmp
mov
lea
or
mov
xchg
and
jns
mov
pop
mov
add
lods
repz
add
xor
mov
jle
mov
lret
push
mov
pusha
arpl
add
xchg
xor
in
outsl
mov
mov
lret
mov
push
lea
js
outsl
jns
push
push
stos
push
lret
push
in
dec
push
pop
loopne
push
mov
scas
movsb
sbb
pop
mov
cmp
xlat
ds
push
sahf
std
test
xlat
lods
mov
dec
jg
sub
repnz
pop
xor
lcall
std
bound
aas
or
push
aaa
stos
mov
push
add
pop
lock
add
outsb
bound
roll
or
mov
pop
push
repnz
jecxz
mov
enter
test
ds
xchg
cmp
imul
xchg
adc
lods
pop
mov
dec
ret
lcall
movsl
shl
sahf
sbb
dec
xor
inc
cmpsl
repz
mov
mov
loop
mov
pop
shlb
and
out
in
test
xchg
lods
in
dec
fisubrs
jecxz
mov
pop
pop
xor
mov
testl
jo
fisttps
in
subl
inc
dec
daa
dec
cs
addr16
and
icebp
insl
fs
ds
mov
add
int
dec
mov
jl
pop
add
cmc
xchg
pop
std
int
rol
cmpsb
push
aas
mov
movsl
xchg
sarl
dec
and
sbb
xchg
ret
mov
xor
push
sub
bound
mov
cmp
and
xlat
mov
push
lock
inc
or
sub
ds
and
xlat
insl
fbstp
cmpsl
or
outsl
jl
dec
movsl
lock
or
add
pop
test
sbb
icebp
push
dec
pop
pop
sahf
and
inc
add
jne
loop
hlt
mov
pop
mov
ja
sbb
xchg
bound
push
aaa
gs
push
out
pop
arpl
jecxz
pop
fxch
jne,pn
add
pushf
out
loope
or
repnz
mov
arpl
out
pusha
lock
and
aas
inc
fdivrs
add
and
pop
adc
push
les
jp
push
or
sarl
pusha
cmp
in
inc
push
sub
mov
mov
adc
jmp
adc
xor
cld
inc
xor
fucom
pop
pop
stc
xchg
ljmp
out
sub
mov
sub
lods
cmp
add
lock
repz
xchg
push
mov
pusha
pushf
btr
fdiv
repz
pusha
mov
dec
dec
sub
sbb
lods
sti
push
lret
iret
sbb
imul
sub
rcr
and
fdivl
test
stc
push
mov
push
fstl
fldl
pushf
popf
prefetchnta
xor
xchg
enter
bound
mov
insl
add
dec
or
imul
or
dec
and
iret
hlt
mov
pusha
add
pop
addr16
mov
stos
xlat
sub
or
mov
cmp
jbe
lock
push
test
inc
loopne
int
mov
sbb
jae
fildll
loop
or
pandn
in
shll
mov
sbb
xorl
lret
sub
ficoml
adcb
outsl
sbb
xchg
shrb
sbb
jp
icebp
pusha
cld
shl
cmp
fmulp
mov
jo
lahf
mov
fildll
jns
fidivrl
enter
cs
dec
loopne
pop
sub
test
adc
pop
and
sarb
popf
iret
clc
mov
mov
testb
pop
int
popa
scas
insl
repz
inc
adc
mov
or
lcall
xchg
push
adcb
add
ret
jmp
sbbl
mov
fmull
xor
push
and
aad
or
mov
sti
roll
xor
dec
iret
jno
repnz
inc
pop
jecxz
mov
mov
je
sbb
mov
iret
adc
stc
mov
adc
sti
outsl
lret
add
add
pop
cltd
sbb
call
inc
pop
sti
mov
fiadds
inc
fsubrs
mov
pop
add
lret
push
insl
xor
subl
mov
xchg
fdiv
pop
out
pop
push
sub
and
inc
add
sbbb
outsl
mov
mov
xchg
add
or
mov
pusha
lods
mov
adc
ret
cmp
pusha
bound
adc
stc
lret
mov
add
int
xorb
scas
and
lock
xor
cmp
pusha
inc
flds
add
test
mov
pusha
addr16
lret
push
pop
adc
pop
sub
mov
xor
pop
xor
mov
xchg
stos
inc
xor
andl
shl
push
xchg
pop
sarb
mov
adc
sub
pop
lds
popa
mov
jecxz
call
fsubrs
ss
sub
xlat
andb
out
rcll
push
mov
xlat
pop
mov
sti
jecxz
xchg
pusha
movsb
add
lahf
xchg
lock
adc
ret
push
xchg
cmp
int
inc
mov
imul
sti
and
ja
aad
mov
xchg
xchg
xchg
sub
jo
add
int3
add
add
jl
ljmp
push
gs
jne
in
and
fld
push
js
mov
test
inc
inc
movl
cmpsb
push
xorb
cmp
cmp
lcall
xchg
pop
and
xchg
adc
rcll
imul
sub
test
mov
and
fdivr
sub
mov
clc
xchg
sti
aaa
mov
and
gs
fisttpll
bound
out
dec
jae
jg
pop
jo
jnp
shrl
pop
sahf
and
out
fs
cmpsl
shll
aam
loop
push
xor
jg
xchg
mov
outsl
ret
push
jmp
xchg
cmpsl
shll
insl
mov
cmpsl
push
sub
mov
adc
lcall
cmpsb
loopne
xor
mov
xchg
cmp
cmpsb
sub
or
jp
pop
rcl
mov
or
pop
xchg
rorb
mov
push
insb
mov
push
xlat
clc
sahf
xchg
leave
adc
pop
outsl
xchg
and
sarl
in
rcrb
inc
pop
loope
shlb
es
dec
jno
jmp
rep
jb
jmp
jns
shl
rorl
jecxz
pusha
dec
gs
xchg
xchg
mov
ret
mov
std
mov
pusha
dec
xlat
and
pop
popa
push
lea
js
loope
lea
mov
loop
pop
push
xchg
repnz
jae
push
sbb
ljmp
mov
or
add
or
pop
add
mov
mov
test
test
icebp
and
inc
fists
xlat
or
mov
pop
pusha
inc
in
int3
dec
dec
mov
pop
clc
push
rorl
ljmp
mov
dec
sbb
ret
pusha
xor
mov
cmp
aad
push
push
shll
leave
sbb
add
pop
aad
dec
cmpsl
das
jb
mov
inc
in
xchg
scas
jp
fisttps
add
or
cmp
test
adc
xchg
mov
dec
repnz
pop
inc
cmp
xor
pop
cmp
cmpl
jae
or
and
or
inc
and
pusha
dec
repnz
push
dec
pushf
xchg
mov
lock
test
ljmp
mov
loope
mov
addr16
and
adc
fisubl
insl
bound
fwait
scas
jmp
add
cwtl
aaa
mov
add
mov
xchg
mov
dec
push
adc
int
orl
and
dec
fisubrs
mov
lcall
les
insl
mov
push
or
lods
mov
push
shrb
lock
je
incb
pusha
cmp
push
jl
mov
jge
xor
mov
rcl
mov
sbb
mov
std
pushf
stos
pop
pop
pop
inc
mov
xor
or
fistps
mov
or
ret
add
pop
mov
dec
fsubl
dec
adc
in
ret
rorb
lods
mov
or
andl
lock
repz
ja
inc
jl
or
fisttps
sbb
or
cmpl
pop
cwtl
pop
and
mov
inc
pop
mov
mov
sbbb
bnd
lret
outsl
mov
pop
mov
adc
adc
out
mov
out
push
push
stc
inc
int
xchg
add
leave
push
scas
pop
jle
mov
adc
arpl
xlat
mov
addr16
js
repnz
add
mov
cmpb
sti
dec
aad
pusha
sbb
mov
iret
add
and
testl
cli
andb
rorl
cmpsb
mov
movsl
stos
adc
adc
into
pop
push
loop
fwait
arpl
loope
icebp
add
inc
iret
add
or
dec
cli
fbld
pusha
stos
push
rclb
cmp
adc
addb
or
ja
mov
adc
dec
add
pop
pusha
sbb
ss
pop
jg
adc
mov
jl
das
sub
or
push
outsl
dec
addb
sti
bound
in
pop
adc
pop
mov
cmpb
lret
test
sbb
outsl
iret
sbb
pop
push
mov
mov
push
fbstp
hlt
leave
sbb
add
gs
pop
push
mov
push
add
lock
js
dec
adc
add
fdivrl
lods
stos
arpl
mov
fisttps
adc
adc
imul
add
movl
arpl
pusha
sub
movaps
aad
outsl
and
sub
xor
or
sbb
test
ds
pusha
jp
and
mov
inc
xchg
adc
mov
outsb
les
inc
lea
push
mov
lods
sti
popl
shrl
push
mov
mov
add
mov
sbb
xchg
frstor
mov
popf
enter
push
add
in
mov
mov
jmp
insb
push
in
add
mov
mov
and
sbb
or
add
lods
mov
xchg
pop
mov
sbbb
xor
lea
sbb
push
sarb
sti
bound
fisubl
ret
pop
lcall
add
xchg
mov
pop
lcall
mov
pusha
mov
rcrl
pop
std
cltd
leave
xchg
adcb
test
mov
jns
pushl
bound
mov
bound
xlat
loop
pop
sti
scas
aas
hlt
pop
jp
loop
repz
cld
out
out
xchg
mov
dec
loope
mov
out
mulb
mov
cs
outsl
and
xchg
ljmp
adc
inc
pop
inc
adc
bswap
sbb
inc
push
mov
lods
pusha
gs
test
cmp
add
mov
pop
jb
mov
cwtl
aas
ret
stos
and
and
push
mov
sub
shl
dec
push
in
lcall
fmull
jl
addr16
test
sbb
into
sub
xchg
sbb
stos
dec
push
lock
insl
adc
out
push
fildl
inc
dec
adc
dec
loope
mov
pop
sub
sbb
add
les
popf
and
xor
stos
cli
jg
lds
subb
push
imul
add
ds
rcr
scas
and
push
stc
enter
jecxz
popa
pop
ret
xchg
fcomi
pop
iret
jb
inc
or
xchg
xchg
sti
xor
mov
leave
sub
add
mov
mov
insl
dec
xchg
mov
lock
add
out
jnp
ret
fiaddl
xchg
nopl
out
add
or
sbb
ja
jnp
ret
je
mov
cwtl
rcll
and
adc
aaa
push
aad
xchg
mov
dec
sahf
in
leave
pop
lods
mov
fiadds
cmpsb
push
jp
dec
xchg
bound
adc
jbe
les
mov
xchg
test
push
mov
dec
xchg
sbbl
pusha
pop
ljmp
pop
lcall
mov
movsb
push
insl
addr16
rcrb
sbb
pusha
dec
and
das
shrl
push
stos
clc
scas
pop
shll
jnp
inc
and
and
jmp
pusha
cmp
rorl
jns
hlt
mov
fstps
movsl
icebp
pop
xchg
rcrl
xor
outsb
sub
jecxz
lret
xchg
sbb
sub
popa
divl
mov
rolb
lret
push
and
outsl
jbe
dec
lods
push
cmp
loop
pop
shlb
jno
and
repnz
shl
jo
push
loopne
rcrb
cli
cmpsl
lods
aas
push
mov
mov
and
sbb
gs
inc
mov
xchg
sbb
pop
mov
stos
jmp
push
xchg
mov
push
mov
adc
stos
outsl
ret
mov
rol
sub
xor
outsl
xchg
ja
sbb
pop
xchg
xchg
sbb
dec
pop
or
xor
test
cmp
adc
std
mov
insl
in
dec
or
jecxz
adc
mov
out
dec
sbb
imul
adcb
jno
fmulp
xor
xchg
js
jecxz
call
mov
cmp
test
dec
push
cld
mov
mov
mov
mov
in
sbb
mov
adc
adcl
imul
xchg
dec
add
movsl
stc
push
or
lods
and
add
mov
dec
push
lds
jp
jge
pusha
jg
or
mov
adc
mov
pop
dec
sub
xchg
xlat
pop
imul
or
popa
fwait
add
mov
inc
push
push
sbb
imul
mov
fstpl
jb
push
or
ret
mov
cmp
sbbl
lods
jp
movsb
mov
pop
das
arpl
inc
inc
mov
mov
fcmovnbe
pop
jns
movsl
outsb
xor
mov
push
lods
ret
arpl
xchg
jno
xchg
jmp
and
fwait
mov
push
xchg
adc
fistpl
std
mov
movsl
ja
push
movsl
rorl
out
stos
pop
mov
or
cmpl
arpl
inc
ror
xor
je
fbld
jns
jecxz
and
movsl
or
add
pusha
lea
mov
push
push
ficoml
popfw
cmpsl
dec
pop
outsb
inc
pop
mov
adc
bound
lret
adc
pushaw
xor
jne
xlat
mov
push
andl
sbb
jnp
mov
mov
leave
cmpsl
and
or
jns
fsubs
mov
lcall
sti
inc
pop
mov
loopne
mov
push
add
out
pusha
xchg
iret
insl
push
les
stos
ja
scas
es
mov
adc
sbb
lods
scas
ret
testb
addr16
jo,pn
fwait
add
aas
adc
and
stos
xor
bound
pop
aad
loopne
jne
mov
mov
lea
call
insl
dec
mov
dec
adc
aas
push
lret
xchg
mov
push
in
xor
push
fisubrs
scas
popf
scas
repnz
push
push
and
xchg
mov
cltd
adcl
jmp
inc
pop
in
sbb
out
arpl
mov
lret
sbb
fistps
cld
sub
inc
xor
or
xchg
push
addr16
imul
fbstp
popf
and
add
cmp
cmp
or
push
lock
push
nop
pop
movsb
repnz
bound
cmp
std
adc
pop
jae
das
sbb
push
dec
sti
cmp
or
xchg
or
xrelease
add
pop
stos
mov
cmp
js
mov
jmp
aas
ja
mov
inc
addr16
loope
mov
mov
and
incb
lret
xorl
insb
push
out
ret
sahf
loope
das
xor
sbb
popa
scas
jnp
push
jne
shrb
jmp
dec
xor
push
pop
lods
call
stc
repz
adc
fisubrl
add
call
outsl
xchg
dec
cmp
xorl
cbtw
xor
xor
repnz
adc
cmpsb
or
push
insl
ret
imul
and
jecxz
sub
sub
add
fsubrs
mov
ret
mov
adc
or
jp
dec
xchg
inc
fnsave
inc
xchg
mov
and
cli
in
pop
jge
pop
dec
xchg
or
xchg
cmp
push
cli
pop
add
jb
in
pop
bound
xchg
lret
sub
or
jge
divps
mov
jno
es
inc
push
lods
mov
repz
std
in
xchg
popf
mov
popa
popa
stc
add
mov
repnz
inc
in
jno
pop
int
sti
in
xchg
mov
fdivrl
enter
jns
or
sub
inc
pop
pusha
xchg
jmp
pop
xor
mov
jns
pop
push
sub
lds
and
stos
mov
mov
pop
jo
test
dec
cld
ja
lods
inc
push
pop
mov
pushf
mov
cmp
mov
push
mov
fstp
dec
loopne
and
popf
bound
aaa
fstpl
in
jmp
popf
xchg
push
repz
pusha
mulb
pop
or
cwtl
fs
ret
fisttpll
rcrb
test
xor
adc
xor
mov
rcll
cmp
outsb
push
ficoml
shll
mov
data16
roll
cmpsb
mov
stc
and
sbb
sarl
out
loopne
call
lds
insl
dec
mov
addb
andb
fists
inc
ret
lock
dec
dec
rcll
pop
or
decb
std
xchg
popa
rorb
lahf
cmpsb
inc
or
pop
dec
mov
pop
pop
iret
enter
adc
filds
jge
lret
lods
ljmp
dec
xor
jae
or
pop
mov
push
sub
shll
inc
cmp
bound
jp
cmp
pop
arpl
push
mov
decb
rcrl
cmp
inc
inc
adc
mov
pop
sub
gs
gs
pop
scas
psubw
mull
xchg
push
cmc
add
adc
lods
cmp
pop
jle
add
inc
sarl
push
test
outsb
cmpb
jle
mov
sti
push
lret
scas
popa
ljmp
pusha
sbb
mov
stos
rcrb
iret
adc
fcoms
adc
cmpsl
fdiv
ds
adc
outsb
std
cmp
les
andl
xorl
jp
xchg
test
loope
cmp
addr16
ds
fisttpll
in
int3
push
or
dec
stc
pusha
or
push
jne
outsl
test
sahf
das
js
addb
outsl
dec
sub
insl
cwtl
dec
outsl
xchg
stos
idiv
popa
sbb
test
add
fiaddl
call
and
xchg
sbb
lock
pop
adc
rorl
xor
jb
ret
push
js
loopne
aad
rorl
and
shlb
add
and
jno
int
pop
fbld
cmp
movsl
cmpsl
scas
popa
fucom
sti
adc
test
int3
aam
push
cltd
movsb
cwtl
or
shrl
ret
xor
lret
incl
or
ja
and
nop
xchg
cmp
push
imul
test
mov
repnz
bound
out
and
subl
les
dec
lods
loop
sub
pusha
test
xchg
sti
or
pop
dec
std
jp
push
inc
pop
inc
cmp
shll
inc
fwait
cmc
jnp
or
mov
jp
mov
mov
fidivs
mov
jg
movsl
ja
mov
pusha
pushf
jl
fmull
std
cmpsl
pusha
js
aad
sbb
sub
dec
rcl
ja
imul
mov
pop
mov
rclb
cmpsb
cmp
xlat
cmp
ret
sbb
ja
lods
jge
pop
inc
cmc
push
je
xchg
mov
outsl
xchg
xlat
shll
imul
fdivl
lcall
jge
push
dec
pop
cmp
adc
cmpsl
mov
add
ret
mov
outsl
adc
cmp
or
mov
and
in
cmp
js
adc
ftst
and
adc
int3
icebp
mov
jl
ljmp
mov
or
bound
cld
or
enter
dec
mov
test
mov
fsubrp
xchg
pusha
enter
loope
pop
mov
movsb
stos
xchg
out
out
push
mov
sub
jmp
xlat
adc
mov
xchg
mov
inc
add
jmp
sti
mov
inc
xor
inc
aam
jle
inc
pusha
xchg
insl
adc
mov
jle
sub
aaa
mov
clc
cmp
scas
or
data16
into
fbstp
pop
mov
mov
hlt
leave
xchg
inc
outsl
ret
inc
push
xlat
stos
testl
scas
push
or
xlat
mov
ljmp
adc
insb
adc
pop
rclb
mov
ret
sbb
push
sub
andb
add
shlb
push
mov
mov
andb
jb
mov
lods
adc
fidivrs
cmp
mov
outsl
pop
insb
mov
iret
pop
dec
mov
jne
jle
sub
stc
cmp
add
popf
mov
pop
or
xorl
add
in
push
push
sbb
inc
ret
dec
out
outsl
ds
sub
pusha
lods
stc
pop
sahf
mov
mov
cmp
sbbl
stos
push
sbb
lret
pusha
mov
aad
dec
pop
fistpll
movb
lret
cltd
xor
clc
xor
mov
cmp
mov
or
sub
loop
add
mov
and
mov
movl
scas
dec
sub
rcrl
xor
repz
cld
out
jle
adc
or
les
fildll
push
xor
pop
lahf
pop
lods
mov
jo
pop
stc
mov
into
or
cmp
inc
mov
inc
push
and
popf
test
jo
mov
aad
and
iret
mov
call
mov
aas
out
sbb
dec
pop
mov
pop
addb
sub
jmp
or
inc
adc
pop
jnp
ret
mov
ficomps
repz
and
add
and
mov
and
sbb
adc
in
les
rol
pop
cli
dec
dec
or
cmp
test
jae
arpl
pop
cmp
stos
loop
or
fimuls
and
mov
push
mov
iret
pop
mov
push
and
adc
sub
lds
dec
ret
subb
xor
mov
mov
outsl
loope
xchg
mov
push
sbb
pushl
jns
dec
dec
push
mov
sub
out
pop
mov
sub
out
mov
lds
or
popa
outsb
out
xchg
xor
pop
sbb
jge
fists
out
in
or
pop
repnz
xchg
adc
add
test
jp
arpl
ret
dec
stos
ret
cwtl
mov
cmpsl
add
mov
notl
xor
mov
dec
rorb
push
push
or
mov
inc
pop
pusha
das
and
lahf
in
pause
cmp
lods
sahf
dec
xlat
cmp
shrb
jns
cmpsb
jnp
or
pop
test
dec
loopne
loop
mov
cmp
shrl
adc
clc
out
es
mov
adc
leave
pop
movsl
inc
jmp
int
out
or
std
mov
jge
in
xchg
jmp
jmp
push
jl
push
and
xchg
lcall
and
repnz
mov
inc
push
or
push
movsl
test
stos
fstpl
jne
repz
fisttpll
sysexit
cmp
adc
std
lret
pop
lret
mov
stc
inc
popf
cmpsb
jmp
nop
cld
jp
lahf
jne
pop
cmp
mov
loopne
rcr
fs
shll
movb
sub
stc
stos
jns
or
mov
or
sub
in
jb
mov
test
sti
dec
inc
xchg
push
outsl
mov
int
sub
mov
pop
xor
loop
pushf
pop
addr16
sbb
jno
popa
nop
call
add
pop
jae
sbb
jmp
add
int3
jle
inc
push
mov
aam
adc
push
icebp
insl
test
sbb
dec
lcall
stos
rcl
int3
mov
std
xlat
mov
out
xchg
bnd
ret
xor
sbb
inc
push
pop
stos
mov
push
movsl
xchg
dec
and
iret
pop
pushf
or
jmp
leave
or
movsb
push
mov
push
outsl
cwtl
lods
aam
rcll
shr
dec
cmp
jae
mov
shlb
arpl
insl
fiaddl
xchg
nop
pop
lret
clc
push
mov
movsb
inc
shrl
scas
shr
loop
out
xchg
mov
mov
js
mov
loop
imul
sbb
jne
into
fidivrl
aaa
xor
push
movsb
mov
lds
mov
stos
sub
push
sahf
bound
fimull
cld
orb
push
pusha
fdivp
jp
xlat
rorl
push
pop
mov
cli
cld
mov
sub
pusha
fimull
in
cmpb
sub
sar
adc
mov
cmp
pop
icebp
lea
xchg
add
adc
cmp
js
bound
add
lcall
cmp
cmp
sub
int3
repnz
iret
gs
sbb
inc
fsubr
inc
push
lcall
sbb
mov
shrl
daa
inc
adcb
enter
jb
sbb
adc
mov
sti
outsb
xchg
out
in
sub
cmp
fdiv
dec
push
lods
lahf
jmp
push
jne
jecxz
xchg
push
fiaddl
inc
addr16
jmp
into
movsb
jmp
push
mov
rcrl
mov
in
test
fadds
xlat
ret
aam
and
add
frstor
int
iret
fcmovnu
or
sbb
push
mov
mov
jecxz
cltd
shll
test
arpl
or
and
jmp
bound
ret
mov
sbb
sti
add
and
push
sub
add
lcall
or
test
fcmovb
fcomi
and
mov
jae
xchg
inc
icebp
sbb
aas
faddl
int
pop
ffreep
jmp
js
ret
cmpsb
mov
addr16
ss
rorb
dec
sbbl
jb
mov
loopne
inc
pusha
test
or
and
movsb
shll
test
xchg
mov
inc
jg
hlt
imul
nop
pop
mov
and
loop
dec
lcall
mov
dec
out
jb
inc
xor
adc
mov
inc
add
push
pop
or
jg
push
fcmovnb
call
mov
mull
cmpsl
push
jle
repz
mov
xor
push
or
add
ficompl
fisttps
mov
jge
js
sar
cld
xchg
jo
xchg
subb
cmc
mov
push
pop
mov
pop
push
pop
push
or
popa
faddl
dec
pushaw
lock
out
push
ljmp
sub
and
inc
xor
add
pop
mov
aad
inc
add
out
pop
pop
mov
push
movsl
insl
mov
mov
bound
jbe
mov
ljmp
cmp
repz
lock
es
ss
jnp
stos
sub
mov
jbe
pop
mov
mov
pop
popa
inc
or
cld
test
or
icebp
lock
pop
xlat
jmp
out
jo
sub
cs
or
mov
cmp
outsl
mov
testb
stos
and
dec
lods
mov
mov
add
es
mov
ret
int3
or
ret
sub
mov
stos
lret
mov
dec
adc
je
mov
pop
add
xlat
orb
add
cli
mov
cmpsb
roll
je
mov
fisubs
iret
sbb
fiaddl
cs
dec
sub
xchg
in
add
and
push
sub
aad
shrb
sbb
cmp
pop
sub
stc
out
adc
int3
lods
pop
xlat
or
arpl
fsubrs
and
xorb
orb
and
daa
pusha
pop
lret
stc
dec
sub
inc
mov
stos
mov
mov
inc
gs
and
jmp
int
xor
mov
mov
loope
and
pushf
or
cmp
xchg
sbbb
jecxz
lock
push
jnp
mov
lret
sbbl
adc
fstl
push
popf
repnz
out
cmpsl
inc
loope
stos
mov
jnp
inc
clc
inc
jl
sti
jmp
add
dec
pop
push
mull
stc
sub
mov
pop
outsb
pop
push
jno
mov
dec
inc
lret
sbb
roll
aaa
aad
pop
inc
inc
bound
jge
pusha
fidivl
fwait
repz
adc
and
lods
mov
scas
pop
popf
pop
insl
loop
repz
sbb
or
mov
xchg
xor
xor
bound
jns
dec
arpl
xchg
push
rcrb
jle
sub
aad
sti
mov
xchg
cmpsl
loop
mov
sbbl
aam
lret
dec
out
and
int
sbb
in
adc
mov
out
fwait
cmp
mov
adc
push
shrl
clc
clc
cmp
sbb
push
sbbl
and
into
mov
dec
outsl
jb
push
imul
scas
cmp
js
and
movsl
data16
adc
adc
push
imul
jns
pop
mov
inc
mov
andb
aas
iret
sbb
test
jb
pop
mov
adc
pop
lret
jnp
push
mov
lea
pop
leave
mov
popf
pop
mov
or
out
mov
insb
jp
push
mov
adc
xchg
imul
sub
icebp
incb
add
xchg
stos
test
popa
adc
mov
in
dec
fucomp
inc
dec
jg
imul
adc
sub
ret
loope
sub
push
xor
xor
sarb
je
mov
adcb
xorl
pop
scas
xor
mov
lret
mov
and
inc
adc
pop
and
mov
dec
rcll
sub
jb
sbbl
pop
lret
arpl
repnz
inc
push
jl
add
push
add
ficoms
xchg
daa
xchg
cmp
mov
and
mov
repnz
pusha
and
mov
pop
add
and
add
cli
jno
mov
dec
cmpsb
outsl
push
xchg
sti
fnstsw
aas
add
ljmp
inc
fstpl
dec
mov
sbb
adc
int
and
sbb
inc
push
mov
aad
push
sbb
jns
fnsave
and
icebp
mov
and
jns
cs
adc
add
enter
dec
dec
lock
xchg
lret
mov
cmp
bound
pop
cmp
lahf
adcb
or
mov
push
adc
roll
inc
aaa
cltd
inc
bound
and
jns
add
testl
add
incb
call
lcall
sti
bound
lcall
add
xchg
lock
mov
push
ljmp
inc
inc
outsb
std
sbb
popf
mov
sub
fcomp
add
cmc
test
iret
push
inc
filds
insb
jmp
into
inc
jae
divl
sbb
out
mov
and
rclb
mov
in
add
ljmp
mov
dec
jae
sti
pusha
inc
jg
in
adcb
inc
loopne
shrb
fldl
dec
clc
xor
push
out
inc
sbb
outsl
adcl
xlat
data16
fadds
cmpsb
inc
push
xchg
pop
insb
arpl
push
decl
mov
mov
movsb
subl
add
or
jb
stos
or
icebp
add
inc
fidivrl
fstp
mov
inc
sti
nop
lahf
mov
add
clc
or
pushf
aam
inc
or
shl
jg
das
out
inc
loopne
adc
stc
nop
fsubrl
lret
dec
jae
mov
xchg
lock
mov
fs
push
push
add
imul
sti
xor
ljmp
repnz
add
popf
pop
add
int3
mov
orl
jp
add
push
clc
testl
dec
mov
out
cmpsl
and
out
add
es
insb
mov
jae
mov
mov
add
mov
add
sar
dec
out
mov
cmp
ret
xor
xlat
or
pop
dec
cmc
add
inc
xchg
es
neg
std
movsl
mov
sbbl
cmc
ret
inc
push
jg
jb
nop
out
jnp
ret
movsl
inc
lret
jno
adc
adcl
insb
jg
inc
push
out
jae
mov
stos
les
xchg
mov
mov
decl
dec
testl
stos
pop
and
dec
insb
sarb
repz
mov
mov
add
mov
cs
push
push
pop
aas
popf
imul
inc
push
add
or
insb
mov
jae
mov
subl
scas
mov
cmp
movsl
js
ret
imul
ljmp
xor
jmp
sub
mov
and
mov
fs
incl
es
stc
hlt
mov
inc
and
sti
jecxz
cmpsl
loop
in
push
or
push
xor
ret
imul
mov
ret
pop
sbb
imul
lret
xlat
sbb
nop
shll
add
mov
js
test
ror
in
cli
mov
fwait
pushf
lret
int
je
xor
addb
es
add
fdivr
call
jg
xchg
nop
movsb
cmpsl
pop
add
ret
and
push
cs
insb
jle
mov
jne
jb
nop
mov
jo
push
fcmovb
xor
add
mov
sub
repz
sub
xor
int3
loope
cli
or
push
xchg
mov
idivb
xor
mov
filds
aas
scas
sub
cmp
cwtl
pop
and
ss
out
lcall
push
jle
xor
enter
jne
shrb
adc
sub
mov
xor
add
mov
repz
sub
shlb
mov
mov
xchg
testl
scas
lods
data16
inc
mov
xor
dec
xchg
add
cs
dec
jns
mov
lahf
mov
in
test
pcmpeqw
jp
add
xchg
xor
and
add
and
pop
shl
leave
pushf
xorb
ret
inc
rorb
add
dec
and
adc
outsl
adcl
ret
sbb
rorb
push
fwait
xor
cmp
lahf
idiv
push
mov
mov
ljmp
cmp
xor
int3
scas
or
add
rorb
negb
fwait
dec
add
hlt
add
jne
jl
imul
mov
pop
jnp
rol
xor
fistpll
stos
mov
mov
shll
mov
mov
lock
mov
or
test
xchg
out
xor
xchg
mov
pop
jns
mov
xchg
mov
dec
pop
cmp
fs
repnz
inc
shrb
lods
pop
xor
fwait
and
insl
xchg
idiv
cs
arpl
mov
mov
cmpsb
scas
sub
inc
jmp
add
cmp
pusha
add
outsb
lret
insb
cmpsb
jg
jge
xor
mov
add
scas
jae
jae
jno
jns
push
xchg
sti
dec
cmc
inc
mov
inc
add
push
lret
or
ljmp
mov
es
mov
stos
jns
and
sub
cmp
jno
mov
cmp
das
jae
mov
add
adc
xchg
xor
daa
aam
in
dec
imul
push
movsl
xchg
nop
mov
call
jg
fcomi
mov
jecxz
cwtl
stos
lret
mov
enter
cmp
bnd
negl
mov
out
sub
xor
pop
cltd
lahf
inc
cmp
dec
push
cmpsb
fcmovne
ret
ret
in
aas
in
mov
lret
sbb
repnz
lea
add
rclb
adc
stc
xlat
ss
testl
add
mov
in
inc
inc
mull
fwait
into
dec
add
mov
jns
fcoml
jg
push
repz
sub
mov
pushl
repz
in
add
xor
add
jp
mov
xchg
xor
cli
jmp
mov
pop
ficompl
insb
dec
dec
das
repz
pop
sbb
adc
adc
mov
test
adc
jno
cmpsl
and
imull
mov
pop
xorl
cmpl
add
xor
cmp
movsl
lahf
icebp
cmp
dec
loope
cmpsb
jg
jg
in
outsb
and
mov
out
push
and
jg
pop
pop
or
stc
mov
cmc
std
loopne
mov
and
jge
mov
add
xlat
repnz
es
jnp
shlb
jns
mov
xchg
inc
cltd
push
xlat
ret
dec
decl
lods
jp
mov
loop
add
mov
lcall
fsub
lahf
sbb
data16
pop
ret
adc
movsb
jecxz
mov
cvtdq2ps
jb
add
aaa
xor
mov
lret
and
mov
pop
ds
sbbl
lahf
movsb
push
jno
sbb
xor
cmp
mov
movsb
add
mov
mov
pop
stc
stos
scas
mov
mov
sbb
loope
rolb
inc
pop
jne
ss
mov
clc
cmc
or
rep
mov
inc
nop
add
mov
cli
out
test
mov
popf
push
cmp
mov
inc
cli
imul
jno
adc
lods
jle
add
mov
push
arpl
sbb
nop
jnp
out
repnz
rolb
lock
cmp
test
sub
pop
adc
popf
xor
add
pushf
mov
fwait
and
out
cmc
dec
mov
mov
mov
outsb
mov
push
arpl
mov
mov
ss
xor
add
sbb
fnstsw
pop
jecxz
cmpsb
pop
add
outsl
inc
ret
fnsave
arpl
subb
pop
sti
xchg
out
jbe
add
jb
lret
pop
mov
sub
ljmp
push
add
les
cmpsl
dec
cli
ret
add
xchg
stos
push
pop
add
cmpsl
lods
jbe
das
push
xchg
jo
push
add
xchg
insb
xor
add
loope
pop
ficomps
jecxz
dec
push
sub
adc
movsl
loopne
jecxz
movsb
mov
faddl
jecxz
enter
xor
fwait
jae
dec
repz
in
ss
pusha
pop
jg
andl
frstor
fwait
push
inc
sub
xlat
cmp
lods
lahf
add
jl
leave
push
sbb
add
je
xor
mov
testl
pop
andl
mov
jecxz
cmc
out
and
sbb
mov
sahf
xchg
pop
jecxz
sub
aad
add
xor
fwait
stos
add
sti
push
loopne
add
jmp
jge
lea
mov
mov
or
outsb
jb
popa
cmp
imul
add
xchg
lods
dec
pop
loop
jno
xor
xor
add
mov
lods
shll
mov
orb
adc
insl
mov
lret
inc
pop
inc
jae
mov
mov
pop
js
mov
add
lahf
or
shll
mov
in
pop
decl
adc
inc
mov
cmp
aaa
cmp
out
xor
cld
jg
sbb
loopne
adc
mov
cmp
xorb
xchg
out
out
stos
xor
mov
jb
subb
dec
xchg
mov
pop
leave
addr16
lret
jmp
inc
add
aas
sarl
cmp
pusha
sub
pushf
das
test
pop
jg
pop
out
loopne
or
xor
adc
pop
add
shl
pop
inc
xchg
aas
je
lret
repz
fisubrs
dec
jo
pusha
outsb
pop
das
sub
arpl
popf
negb
daa
jl
pop
and
sti
pop
pop
xchg
lret
fstpl
and
rcll
adc
jg
mov
ds
pop
testl
cmc
cmp
incb
loopne
aas
xchg
jnp
fimull
in
lea
lock
das
xchg
sub
fnstenv
sbb
in
and
pop
sbb
out
out
adc
shufps
inc
jle
or
mov
lea
pop
cmp
adcb
cmp
cmp
aaa
xlat
xor
jne
jge
das
loopne
shlb
pop
and
adc
sub
sbb
mov
pop
jle
jns
adc
mov
subl
lock
push
aad
mov
inc
mov
pop
xor
pop
cmp
aaa
hlt
lret
repz
fsubs
pop
das
inc
lret
fldt
push
lret
pop
hlt
pop
ret
xor
lret
adc
test
or
cltd
xchg
lahf
add
and
inc
inc
lods
jo
add
iret
aaa
out
xor
mull
cmp
fistpl
mov
cltd
jne
inc
mov
pop
jo
pop
negl
mov
jns
icebp
stc
shlb
lret
ja
pushf
lret
dec
cmp
mov
subl
divb
mov
push
sti
lret
daa
bound
int3
notb
pop
es
gs
sbb
sbb
pop
psubsw
sub
or
dec
sarb
cmp
jo
pusha
add
lds
loop
fdivs
lret
loope
test
sbbb
cmc
push
pop
xor
lods
jo
xchg
paddd
jno
mov
loop
inc
xchg
inc
xchg
mov
cmp
fmull
mov
jbe
adc
das
dec
sbb
lret
mov
les
cld
cmc
adc
movsb
mov
jns
jbe
test
mov
out
fst
fs
movsl
inc
xchg
mov
jns
and
lea
cld
mov
sbb
leave
imull
dec
div
sub
or
jo
pop
and
negl
xor
adc
pop
aaa
lret
adc
sgdtl
nop
or
jno
jb
mov
push
aas
push
insb
add
clc
jo
pusha
aaa
mov
xor
das
adc
inc
mov
orl
pop
imull
rorl
jo
pop
bswap
sbb
pop
fidivs
loope
test
rclb
cmp
cmp
xor
xchg
push
cmp
add
cmp
or
pop
jp
imul
stos
daa
lret
add
jo
cmp
enter
sbb
mov
stc
mov
jns
loopne
lret
sbb
gs
into
loop
lret
cmpsl
cmovbe
lods
leave
pusha
enter
dec
mov
lods
int
and
mov
in
std
mov
out
icebp
fcoml
or
rolb
stc
lahf
jg
pop
dec
pusha
mov
rcrl
out
daa
iret
and
pop
decl
sbb
pop
out
adc
or
popf
mov
roll
jbe
cs
aas
and
push
popa
pop
mov
mov
xchg
in
sub
mov
xchg
call
and
jne
dec
pop
dec
std
fistps
std
pop
mov
sti
jns
arpl
packssdw
les
fimuls
mov
popa
jmp
xchg
out
daa
sub
movsl
pop
sbb
push
xchg
fwait
pop
cmc
lea
adc
outsl
mov
push
pop
and
and
aaa
shll
push
push
imul
dec
xlat
in
inc
addr16
add
scas
and
dec
pop
xchg
xchg
addr16
bswap
inc
pop
sbb
je
jne
out
inc
sbb
cmp
fstl
stos
inc
cmp
xor
xchg
sub
mov
sub
rclb
and
icebp
pop
lds
cmp
xchg
pop
inc
out
jne
hlt
mov
fdivs
popf
jecxz
xor
stc
aas
push
loop
insb
cmp
cmc
aaa
xchg
xor
in
das
into
jg
sub
mov
mov
mov
pop
out
sbb
out
data16
xchg
or
loopne
pop
mov
stc
flds
fsubl
insb
fadd
xor
sbb
pop
shlb
jmp
mov
adc
mov
sbbl
add
jnp
mov
bnd
neg
inc
cmp
pushf
cmp
loopne
xor
arpl
out
nop
out
das
pop
sub
adc
xor
jle
rcrb
negl
add
sti
or
lret
push
pop
sahf
mov
pop
pop
xlat
push
fsts
loope
popf
ret
xchg
and
aas
inc
lret
dec
cmc
cmp
in
icebp
cld
ljmp
jo
cmp
xchg
and
addr16
aaa
sbb
lods
pop
cmp
adc
mov
jns
enter
outsb
ficoms
and
idivl
shrl
movl
and
sbb
lret
iret
sbb
lret
cmpsb
pop
aam
cmp
psubd
push
fimull
out
inc
jp
idiv
fwait
addb
cmp
out
das
std
outsl
fs
xor
jns
subl
aad
sbb
pop
movlps
sbb
orl
cmp
ljmp
aas
cmp
sahf
loop
lret
lea
or
pusha
xor
lret
daa
or
dec
xchg
dec
mov
sub
or
or
xchg
ret
mov
shll
pop
inc
imul
xorl
aaa
push
jo
pusha
loope
das
jl
xchg
push
lea
popl
sbb
in
outsb
pop
inc
aam
test
adc
mov
lea
jbe
insl
lock
jnp
xor
fsubrp
andb
aas
cmp
orb
rcrb
sub
dec
inc
sub
adc
daa
xor
scas
aad
popa
add
call
pop
jg
sbb
pop
mov
pop
adc
jae
icebp
out
in
clc
or
mov
jecxz
mov
je
inc
ljmp
out
sbb
pop
rclb
add
data16
aam
lret
loop
negb
mov
mov
jne
inc
push
daa
lods
lret
and
addr16
sbb
xor
fcompl
dec
xor
add
or
xorb
xchg
fimuls
cwtl
out
sub
addr16
xor
cmc
pop
cmp
xchg
adc
fdivr
fcoms
xchg
adc
orb
jb
pusha
in
mov
push
jnp
ret
testb
enter
loopne
das
cmp
sub
daa
std
icebp
mov
sbb
mov
or
lret
aam
fs
lahf
pop
fsubr
add
aas
jo
cmp
pop
cwtl
ret
add
mov
jl
andb
mov
loope
add
lret
mov
jb
dec
add
and
jmp
pop
cli
fcompl
jl
mov
mov
sub
xchg
mov
jno
fidivrs
fcomip
push
add
negb
daa
stc
out
fisubrl
lods
stos
cmc
mov
adc
pop
and
mov
mov
xor
inc
pusha
mov
movl
popa
loop
ljmp
scas
fisubrs
imul
mov
das
int
outsl
sub
cmc
xor
xlat
xchg
pop
push
adc
addr16
ljmp
loopne
or
inc
fisubl
rcll
mov
std
mov
xorb
loop
cmp
lret
mov
loopne
sub
cmp
jns
fnsave
shll
jo
pop
pop
dec
fistps
adc
subb
cmp
sub
loope
inc
cmpb
ficoms
lret
sahf
cmp
testl
cmp
sub
dec
push
in
daa
mov
mov
loopne
lret
pop
adc
mov
ljmp
pop
lds
jle
mov
inc
pop
test
xor
jo
and
xor
xor
imul
test
lret
incb
rolb
shl
aad
fildl
in
aas
adc
movsl
cmp
xorl
lea
pop
xchg
lahf
xchg
sahf
xor
xor
mov
aam
pop
sbb
jnp
pop
pop
xor
repnz
je
push
jns
lock
shlb
xchg
or
add
jo
pusha
arpl
leave
mov
lock
pop
pop
cmp
xor
rcrb
lret
mov
leave
mov
lret
mov
jns
out
cmpb
pop
mov
enter
rorl
cmp
movsl
fwait
imul
lea
lret
jecxz
xor
add
add
mov
insl
xchg
mov
and
dec
jae
mov
imul
lret
cmp
cwtl
add
push
sbb
mov
pop
push
loop
inc
pop
jge
jo
fcomps
xchg
ret
inc
cmp
aas
imul
shll
pusha
mov
sti
test
or
mov
cmp
sbb
xchg
cmp
loop
push
push
fistps
xor
arpl
lret
sbb
sub
pop
aas
sub
cmp
adc
xor
lods
inc
ret
sti
loop
pop
loopne
aas
mov
jae
popa
lea
out
aaa
insb
jg
xor
xchg
popf
insl
rol
and
cmpsb
pop
xchg
jno
or
sahf
cli
or
pushf
pop
sub
add
push
mov
inc
sbb
outsl
cmpsl
mov
or
icebp
lret
push
cmp
mov
and
repz
cmp
and
cmp
mov
lret
rcll
ljmp
jae
mov
jmp
adc
xchg
adc
daa
jmp
addr16
repnz
xor
jo
pop
xor
lret
lret
das
in
test
out
mov
mov
jo
pusha
adc
divb
movsb
jo
xchg
jno
mov
inc
xor
iret
pop
adc
lret
mov
or
pop
in
jo
sub
add
mov
fbstp
mov
aaa
nop
pop
fs
out
sbb
gs
xor
into
daa
inc
loopne
and
lcall
out
pop
in
fisubrs
add
adc
push
sub
or
mov
in
pop
aas
rolb
icebp
cmp
pop
xor
or
cmp
xchg
leave
and
mov
sbb
pop
dec
rcll
xchg
movntps
cmp
xchg
shlb
mov
fildl
jo
dec
aas
adc
sbb
out
aaa
mov
out
jbe
xor
lret
cmp
inc
je
sub
sbb
xor
adc
sbb
repz
dec
mov
add
loopne
aas
clc
imull
shlb
leave
mov
sbbl
ljmp
and
pop
je
or
pop
cmp
xor
cmc
loopne
stos
push
or
cmp
ror
dec
inc
dec
fsts
fbld
dec
cltd
mov
cmpsl
nop
mov
inc
and
ret
in
jo
lods
ljmp
pcmpeqb
inc
outsl
xor
dec
pushf
pop
dec
loop
shll
ss
xor
das
cmp
daa
jae
inc
leave
sub
dec
fiadds
lcall
adc
insb
aas
shl
jns
push
xor
jp
aas
mov
ja
xor
or
xchg
daa
dec
in
es
jg
push
mov
ljmp
jo
aaa
jge
jns
mov
push
mov
sti
dec
lods
loope
stc
imul
adc
dec
xor
adc
sbb
mulb
dec
inc
ret
lahf
or
jecxz
icebp
fnsave
cmp
jo
fmull
sub
add
sub
out
pop
mov
sbb
test
sbb
lret
or
hlt
and
xchg
sti
adc
movntq
incl
jp
rol
scas
push
jne
mov
sub
cli
jae
popa
cwtl
lret
imull
pop
lret
and
pop
scas
and
decb
jl
adc
subb
pop
aas
lea
decb
cmp
add
shr
outsl
in
push
pop
lods
std
ljmp
cmpsb
xor
xchg
mov
lea
pushf
add
fisttps
and
pusha
mov
sbb
sbb
in
repz
xchg
jae
sbb
jns
getsec
jl
fnstcw
das
sbb
lea
add
test
lea
sbb
adc
jg
pminub
sbb
xorl
ret
inc
mov
inc
add
dec
aaa
xchg
shll
fimuls
jno
push
sub
pusha
out
daa
dec
and
mov
sbb
mov
inc
and
xor
imul
leave
xor
jnp
ret
ret
jnp
xchg
pop
inc
pop
mov
mov
mov
lret
pop
jmp
das
jo,pt
pusha
outsb
or
hlt
cmp
inc
daa
pop
and
pop
ja
inc
xor
lret
mov
cmova
testl
hlt
mov
xchg
pop
lea
mov
into
pop
inc
cld
mov
cmp
cmpsl
repz
lods
xor
fmuls
gs
fsts
loopne
and
ror
and
pop
mov
mov
dec
push
shlb
pop
or
pop
cmp
repz
or
mov
cmp
mov
sub
cmpsb
enter
sub
into
cmc
andl
or
cld
cmc
adc
imul
jo
outsl
add
cmp
or
hlt
shlb
or
hlt
nop
xchg
mov
mov
push
cmp
or
mov
adcb
addr16
jo
xchg
and
mov
mov
loope
inc
adc
or
lret
fbstp
and
divl
popf
daa
adc
and
loopne
lret
mov
adc
loopne
or
andb
in
mov
jo
pop
aaa
inc
xor
sbb
jo
pusha
and
jo
xchg
mov
fyl2xp1
push
jae
jb
sbb
stos
jnp
adc
mov
or
loopne
inc
mov
mov
cmpsb
and
sbb
inc
aaa
xchg
mov
out
pop
testb
daa
jbe
test
mov
stc
push
jae
jge
lods
scas
arpl
inc
loopne
sbb
xchg
or
je
cmp
mov
outsl
aas
pop
sub
cmp
mov
int3
jg
sub
jae
in
fildll
ficompl
cltd
test
cli
xchg
adc
cmc
in
ficomps
stos
add
push
aas
sarb
push
adc
pop
xor
loopne
sub
push
in
jg
pop
mov
call
mov
or
stos
outsl
adc
dec
inc
pushf
jo
idivl
pop
aaa
jecxz
mov
mov
push
jmp
and
addr16
inc
in
jge
inc
cmpb
lcall
and
mov
hlt
jo
pop
cmp
lret
lahf
aaa
inc
ficoms
mov
dec
loopne
daa
cmp
xchg
add
insl
icebp
sbb
adc
mov
sbb
pop
adcb
movsb
fildl
repnz
adc
mov
lret
mov
add
loopne
xor
mov
lock
add
daa
mov
fdivr
mov
push
fsubl
lcall
adc
outsl
jae
mov
loop
shlb
jae
inc
xchg
lcall
add
mov
bound
repnz
push
pop
daa
inc
mov
cli
jp
sbb
movsl
fstps
push
push
inc
jns
pop
sbb
mov
inc
mulb
cs
cmp
push
aaa
push
ljmp
enter
mov
inc
sbb
xlat
mov
cmp
mov
andb
cmp
mov
dec
addr16
cmpb
pop
push
shl
ss
daa
rcrl
outsl
pop
out
or
sahf
pop
testl
repz
and
mov
cmpsl
popa
in
inc
sbb
dec
sub
out
cmp
das
jae
and
adc
dec
cs
lret
lret
popa
insl
fdivrp
and
mov
adc
jnp
sbb
add
cmpsb
sub
shrb
mov
lcall
push
shll
sub
lea
repz
jp
fdiv
pop
pop
int3
shr
push
jo
jae
push
std
mov
fcoml
sub
inc
faddl
cmp
loopne
repnz
inc
in
loopne
xor
in
mov
sbbb
pop
das
mov
jl
je
ret
pop
fwait
sbb
outsl
inc
in
mov
sub
imul
lcall
mov
stos
inc
jge
inc
sti
add
std
push
aas
and
fsts
xlat
shll
into
jl
mov
dec
outsl
or
lods
rcr
cmp
lret
stos
mov
hlt
stc
xchg
jne
sub
sub
pop
mov
jmp
cs
add
adc
add
xchg
adc
and
les
int
push
pop
xlat
js
mov
mov
xor
mov
push
fmull
bound
push
xchg
stc
xor
popa
stos
mov
jne
xor
mov
iret
stos
xchg
sar
cmp
cld
jp
aam
pop
gs
push
sbb
pop
aas
xchg
mov
stos
daa
jmp
mov
jns
jp
dec
les
xlat
pop
inc
dec
xchg
sbb
pop
lds
xchg
daa
xchg
mov
push
cmpsb
imul
sub
lods
xchg
and
mov
and
int
xchg
jae
jno
add
test
xlat
jmp
xor
sbb
iret
testl
jp
cmp
jnp
mov
pop
add
movsb
sahf
pop
cmpl
dec
lret
add
insb
aam
rolb
xor
xor
out
int3
jo
sbbb
sbb
mov
mov
outsb
imul
ljmp
int
jno
gs
icebp
push
mov
sbb
mov
jl
and
or
fiaddl
int
pop
rcr
sub
pop
pop
cli
mov
xchg
dec
cmp
pop
ret
push
or
ret
ret
rcll
rcrb
cltd
push
or
outsb
and
mov
pushf
lret
push
cli
rorb
hlt
std
int
lock
xlat
push
mov
and
movzwl
pop
xor
mov
stc
pushf
push
add
cmc
mov
pusha
test
movb
test
jmp
xlat
jno
mov
xor
shlb
call
mov
jno
jb
mov
mov
mov
add
or
mov
mov
out
mov
add
out
fs
adc
not
mov
addr16
jo
push
sub
xchg
pop
adc
mov
scas
outsl
hlt
mov
add
bnd
or
fldz
outsb
divl
iret
das
pop
mov
mov
pop
jle
add
cmp
fwait
xchg
dec
psrad
repnz
inc
fadd
mov
or
or
mov
xchg
and
jmp
rcrl
mov
sub
stos
pop
ret
idivb
out
mov
lret
in
nop
pop
add
mov
mov
ja
shrl
push
mov
push
sbb
inc
inc
shlb
rorb
ja
and
cwtl
loop
clc
and
add
and
mov
or
popf
ljmp
xor
loopne
lods
inc
test
es
data16
pop
lock
push
xchg
aaa
js
xor
movsl
sub
pop
push
loope
jmp
push
mov
mov
sbb
aas
out
outsl
mov
addr16
mov
inc
xchg
cli
push
ss
loope
loope
mov
rcrb
dec
lods
cmpsl
sbb
jle
jg
or
jbe
or
cli
pop
pop
and
call
ja
je
jl
jle
xchg
jl
fnstcw
jno
push
outsb
ret
xchg
mov
test
pop
cmp
aam
push
in
idivb
adc
or
movzbw
pop
pusha
movw
pushl
ret
pushf
pushf
mov
lea
jae
pusha
mov
call
shll
mov
js
pusha
movsb
js
and
sarb
addr16
sub
jbe
repz
jle
mov
jge
out
sub
lcall
outsb
push
push
or
pusha
sub
stos
aam
fstpt
inc
push
jae
mov
enter
stos
add
jle
jnp
xor
mov
dec
pusha
mov
cltd
jns
jno
stos
mov
xor
insl
lods
cmp
ss
inc
out
xchg
add
iret
sbb
dec
mov
pcmpgtd
or
mov
inc
push
dec
xor
cs
insb
add
dec
cmp
fscale
test
sub
sub
xchg
ja
repnz
aas
out
fwait
lret
js
mov
clc
jo
sbb
sti
outsl
pop
push
push
pop
jnp
pop
in
and
xor
dec
pop
adc
sbb
ds
icebp
xchg
xlat
inc
or
es
pop
inc
cmp
mov
xchg
xchg
pop
insb
pop
int
sub
mov
bound
xor
pop
movsb
mov
jne
enter
push
call
jae
cmp
dec
fmuls
test
loopne
lock
enter
ficoml
cltd
push
cli
mov
popf
pop
pop
outsb
adc
xchg
push
sarb
imul
mov
or
shrl
xor
es
cs
jb
stos
pop
dec
lcall
jecxz
jnp
jb
add
jle
mov
push
les
mov
movsb
mov
inc
mov
mov
cmp
mov
mov
jne
jno
gs
xlat
loopne
sti
in
push
xor
cmpsl
pop
shrd
sahf
sub
push
mov
pop
xor
out
and
jb
jmp
inc
push
inc
repz
shll
dec
and
push
push
movsl
rcr
shlb
inc
daa
cld
and
in
shrl
leave
fsqrt
cmp
daa
mov
pop
add
aas
push
shrb
nop
jbe
dec
mov
fcmovu
out
sub
fsubrs
jl
mov
cmp
or
les
scas
call
sub
mov
das
mov
pop
fwait
mov
addr16
cmpsb
arpl
ret
push
jl
aam
aad
les
std
dec
gs
ret
jl
sub
cs
fdivrs
ja
negl
dec
mov
mov
daa
mov
incl
dec
sbb
mov
scas
cmpl
shll
iret
jne
loope
aaa
mov
or
dec
insb
shlb
test
lea
jne
xor
inc
mov
cmpsl
lods
test
adc
pop
nop
aas
out
stos
mov
sbb
adc
movsb
mov
lea
stos
or
inc
cld
popf
movsb
push
stos
jecxz
ret
jg
add
fadds
mov
popa
inc
nop
mov
iret
jmp
push
gs
sbb
cmp
incl
leave
outsl
dec
sbbl
in
jno
xchg
mov
push
cltd
push
fadd
add
into
nop
xchg
fsubrp
movsb
jp
jp
add
mov
push
mov
mov
push
pop
fidivs
xchg
mov
bound
add
divl
adc
push
mov
dec
push
leave
lea
xor
cli
ss
dec
xor
push
adc
adc
popf
adc
add
mov
enter
dec
and
push
mov
mov
mov
push
je
in
in
add
xchg
icebp
add
loop
ljmp
lahf
mov
fdivl
mov
enter
mov
dec
xchg
lock
pop
cmpsb
outsl
cmp
dec
orl
mov
push
inc
inc
jo
pop
and
inc
sbb
add
dec
prefetcht0
into
adc
ja
and
popf
add
sbb
add
mov
and
daa
stc
dec
cli
push
not
idivl
xor
addr16
cli
push
inc
add
xor
rorl
out
fidivl
out
sbb
mov
jmp
enter
sti
fcmovnu
xor
xchg
popf
dec
push
aad
negb
mov
xchg
xchg
push
pusha
test
jbe
ljmp
cmpl
out
aas
sub
mov
push
adc
sub
syscall
cmpl
push
push
pushf
inc
xchg
arpl
aaa
mov
add
stos
xor
add
mov
test
js
jno
les
les
xchg
xchg
mov
fstpl
je
xchg
lret
ss
stos
fistps
je
aas
clc
hlt
fs
mov
dec
scas
ss
xchg
and
xor
add
cltd
push
fs
call
mov
jmp
inc
xchg
dec
sbb
dec
ror
into
adc
cmp
test
inc
sbb
or
ret
adc
aad
mov
shll
pop
sub
sbb
insl
mov
out
mov
mov
xor
aas
dec
enter
movsl
test
add
push
inc
adc
ficoms
loop
or
enter
outsb
xchg
pop
adc
or
into
mov
dec
xchg
mov
and
jl
jns
pop
cmp
jmp
lea
jne
pushf
shrd
bsf
mov
stc
add
call
push
pushf
movl
jmp
mov
call
pushf
cmp
cmp
mov
lea
je
bt
cmp
cmp
pusha
pushl
pusha
movb
lea
je
pusha
lea
jmp
push
or
cltd
push
imul
mov
adc
out
ret
in
popa
and
call
jmp
xchg
aas
out
addr16
sbb
or
fs
mov
inc
cmp
mov
jo,pt
xchg
mov
inc
repz
pop
cmpb
inc
cmp
mov
push
xor
pop
or
mov
jl
mov
loop
insl
cmp
sbb
mov
flds
or
test
pop
and
pop
leave
xchg
pusha
loopne
sub
lret
int
nop
cltd
push
xchg
mov
mov
adc
loopne
and
data16
push
out
sub
add
pop
inc
std
push
adc
aas
push
or
loope
lods
adc
add
add
popa
inc
xor
in
test
mov
addr16
fists
lret
add
es
scas
sbb
loopne
mov
push
push
or
loopne
les
jle
lcall
test
cmp
push
xchg
inc
cmp
test
and
mov
inc
and
pop
mov
ret
inc
cli
fbld
aaa
sbb
sub
roll
cli
andb
sub
sub
or
in
cmpsb
mov
or
jle
xchg
leave
idivb
outsl
push
sub
mov
mov
jb
xor
repnz
mov
scas
sbb
mov
cld
mov
dec
mov
lret
hlt
xor
inc
pop
sbb
test
fcomps
push
lret
addb
xor
cltd
push
jae
add
pushf
and
pop
in
adc
js
lea
mov
bound
add
pop
shll
dec
pusha
hlt
arpl
mov
addr16
out
outsb
xchg
pop
or
mov
inc
or
fildll
into
inc
and
cmpsl
inc
sub
sbb
shlb
lahf
sbb
orl
insl
jecxz
addr16
sbb
ds
scas
inc
gs
sub
fwait
xchg
cltd
push
inc
mov
fildl
or
imul
outsl
call
in
pop
ret
dec
push
cmpsw
jge
popa
ds
cmpsl
cmp
or
pop
imul
scas
push
pop
out
mov
das
das
xor
sub
jno
jp
jo
mov
jl
cs
xchg
pop
hlt
aam
mov
and
out
sbb
xchg
push
sahf
jbe
cmp
jle
arpl
cmp
lods
rcll
aas
dec
jg
outsl
sti
jnp
mov
orl
and
inc
jg
in
cmpb
inc
jo
xchg
pusha
dec
lret
ret
jg
pop
notl
mov
fcompl
adc
aaa
mov
cmp
popf
lret
jmp
aaa
fsubr
push
test
addb
hlt
mov
xchg
adc
mov
and
inc
add
test
xorl
adc
test
fdivp
clc
movzwl
add
test
shr
btr
mov
pusha
call
stc
mov
insl
into
push
or
cmpsb
push
outsb
and
pop
jae
mov
fnstsw
test
out
cmp
lds
jae
sub
cmp
scas
pop
dec
shl
ljmp
xchg
jb
push
call
sub
adc
dec
iret
notl
mov
pop
mov
pop
lahf
jne
adc
jnp
pop
lea
inc
in
scas
mov
ljmp
mov
jg
lahf
lret
out
pop
jecxz
leave
out
movsl
arpl
repz
daa
test
or
push
and
imul
or
or
inc
add
xor
std
js
enter
pop
inc
and
sub
cs
mov
adc
jecxz
mov
xchg
cltd
push
fimuls
mov
adc
xchg
ja
addr16
cmp
or
xor
inc
add
inc
jge
lock
scas
push
in
jo,pt
or
out
push
jb
aaa
aad
pop
inc
xchg
and
jecxz
adc
mov
mov
xchg
cmp
and
or
scas
xor
repnz
cs
sbb
jno
jo
and
ja
and
addr16
lods
or
insb
adc
cmpsl
insl
jg
iret
mov
outsb
adc
xor
das
push
das
xor
add
mov
test
xchg
and
push
jmp
pusha
jmp
sbb
cltd
push
loop
repz
daa
cmp
or
imul
int3
push
ror
jno
sub
out
lret
and
or
mov
cmpsw
or
ljmp
cmp
inc
inc
and
jg
sub
aam
andb
pushf
or
sub
add
jno
jp
test
push
push
movsb
ret
mov
dec
dec
cmp
jp
inc
scas
dec
mov
xlat
mov
cltd
push
mov
inc
mov
dec
xorb
pop
insl
jp
or
jg
xchg
popa
add
lods
fimuls
push
mov
mov
ret
into
push
cltd
loopne
adc
adc
push
jmp
add
loopne
add
add
sbbl
imul
dec
cli
mov
add
imul
aas
repz
scas
js
push
xchg
mov
jbe
stos
pusha
push
push
xchg
and
out
add
ret
adc
fistl
stos
xchg
cltd
push
xchg
imul
arpl
stos
inc
mov
add
pop
mov
data16
loope
mov
sbb
mov
lret
in
fdivrp
in
cmp
jnp
into
daa
mov
sub
mov
jg
outsl
jge
jne
call
sbb
mov
movsb
mov
cmc
or
mov
nop
rol
xchg
pop
shlb
sub
cltd
mov
mov
dec
js
imul
inc
fcompl
sub
jns
sbb
iret
mov
movb
dec
jmp
xchg
pop
es
cltd
push
and
dec
or
nop
movsb
sbb
mov
data16
add
mov
add
mov
cmpsl
sahf
fsubrp
jecxz
mov
les
xchg
push
sub
jg
frstor
or
mov
fsincos
jge
mov
sub
dec
aad
adc
popf
xchg
shr
test
jns
shl
dec
mov
jge
aad
lods
popa
mov
dec
popa
cli
mov
xor
mov
xchg
clc
lcall
outsl
sbb
cmpsb
push
in
dec
inc
into
je
nop
ss
leave
sarb
dec
fs
jmp
xchg
jnp
add
or
xor
xlat
sub
testl
stos
add
shrb
xchg
aas
out
xchg
sbb
inc
mov
hlt
mov
test
cwtl
cs
sub
je
sbb
popf
mov
push
add
inc
lahf
jns
in
mov
xor
jge
cmp
lds
mov
test
movsb
sub
cmp
inc
incl
pushf
movzbw
mov
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
repnz
pusha
lea
jne
lea
neg
ror
inc
mov
bsf
cmc
bt
dec
sub
btr
shld
dec
mov
cmp
pushf
sub
bt
stc
pushf
pushf
pushl
popl
cmc
bt
cmp
pusha
jmp
push
push
and
test
add
cmpl
or
sbb
rcr
push
cmp
xchg
aas
out
or
mov
xchg
mov
add
xor
sbb
fwait
scas
aaa
std
fucom
test
adc
test
jmp
not
xchg
imul
jne
push
mov
jmp
scas
movsl
jecxz
test
in
xor
mov
push
xor
andb
in
dec
push
sub
push
and
ficompl
sub
and
adc
mov
stos
fwait
leave
jmp
mov
push
fnsave
negl
sti
adc
fcmovnbe
push
or
push
jno
movb
mov
adc
xor
cmpsb
fnstsw
mov
cld
mov
add
sti
jge
or
inc
mov
fstl
aaa
xchg
fwait
jno
movsl
fldt
aad
or
rclb
jbe
fisubrs
movsb
and
repz
pushf
pushf
movb
movb
lea
jb
pushf
pushf
lea
jmp
cmp
push
cltd
cltd
push
hlt
rorl
lods
pop
cmp
daa
jmp
push
shlb
rorl
xor
jge
out
pop
aad
mov
xchg
addr16
ljmp
cmp
push
inc
aad
shlb
lods
adc
push
test
fisttpll
pushf
mov
test
leave
fwait
cmp
mov
dec
push
xor
movsl
cmc
sbb
mov
pushf
push
adc
mov
in
sbb
shrl
adc
stc
mov
xor
cltd
push
fsub
loopne
mov
les
int3
jo
in
cmpsb
cmpsb
pop
jmp
ret
enter
imull
cs
push
imul
sub
or
push
orl
dec
add
pop
icebp
imul
mov
inc
insl
gs
test
ja
js,pt
out
push
push
inc
sar
xchg
outsb
sub
shlb
enter
mov
push
mov
xchg
pop
jae
push
add
scas
movsb
pop
push
push
push
jp
cs
jecxz
cmp
mov
fldenv
lea
ja
pushf
call
push
fsubs
mov
ret
out
dec
pop
ja
cmovnp
mov
xchg
pop
cmp
rorb
adc
mov
std
pop
sbb
jmp
loop
pop
inc
ljmp
stos
sbb
scas
add
xchg
test
pop
jb
and
mov
hlt
lcall
loopne
addr16
push
scas
cmp
sub
insb
lret
fisubrl
lods
push
lahf
fisttpll
mov
jnp
inc
cmp
jmp
insl
jno
jns
loope
mov
add
ds
pop
cltd
rorl
lahf
jbe
pop
jg
fsubs
push
sbb
leave
test
cmp
cltd
add
inc
or
int3
lcall
loop
jecxz
xchg
mov
push
push
xchg
adc
or
jns
push
mov
xor
cld
lcall
insb
shlb
sub
cltd
roll
jmp
mov
push
jns
push
out
mov
jb
mov
pop
add
shl
dec
in
rol
mov
mov
out
les
xchg
imul
faddl
push
jmp
and
pushf
mov
cltd
int
cld
out
jne
out
aad
mov
mov
cmc
lock
aaa
idivb
repnz
cmp
adc
xor
pop
outsb
xchg
stos
mov
jne
lods
dec
sbb
ret
pusha
call
shr
bsf
mov
ja
neg
add
rol
rcr
mov
push
clc
test
call
pop
sbb
out
enter
mov
fs
je
push
sub
push
mov
lcall
fldl
shlb
push
xchg
sahf
push
inc
dec
int3
or
sbb
jge
pop
jo
pop
xchg
das
pop
mov
dec
out
ljmp
sub
cld
insb
sub
pop
lret
jmp
mov
rolb
test
fucomi
pop
test
fstpt
lock
xor
dec
lcall
stc
push
sub
imul
push
xor
fwait
scas
dec
cmpsl
dec
scas
mov
pop
mov
pop
push
pop
inc
or
xor
inc
sarl
lds
sbb
cwtl
mov
js
inc
fisttpl
push
adc
sbb
jge
sbb
push
ret
jmp
inc
mov
mov
mov
mov
rep
ficoms
insl
mov
sbbl
cmp
sarl
cwtl
dec
xchg
sbb
pusha
sub
out
mov
and
test
push
test
jno
test
and
dec
icebp
mov
sbb
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sbb
dec
mov
pop
ffreep
psllq
inc
xlat
push
jbe
mov
and
push
pop
adc
popf
shrb
xor
call
pop
in
jnp
insl
xor
push
adc
mov
repnz
fsubr
rclb
divl
ja
inc
sar
jecxz
lret
add
mov
push
sbb
inc
clc
stc
pop
jnp
int
sub
shr
mov
add
or
xlat
movsb
nop
dec
rorb
in
xor
and
cwtl
or
mov
xor
aas
out
flds
enter
fmull
std
dec
dec
sbb
subl
popf
sub
adcl
mov
push
xor
ret
cmp
daa
sar
mov
xabort
mov
cmp
stos
inc
xchg
ret
pop
imul
in
lahf
cltd
push
pop
leave
adc
push
insl
adc
lret
inc
xchg
pop
push
cli
mov
repz
push
pop
or
or
das
fs
xchg
test
xor
mov
xchg
test
negl
and
push
jmp
aas
inc
mov
cmp
jbe
sbb
pop
hlt
iret
jnp
icebp
xchg
cmp
call
adcl
sbb
stos
sbb
cmpsb
movzbl
mov
lea
lea
pusha
jmp
jno
je
cltd
push
outsb
push
adc
ljmp
pop
ljmp
xchg
into
movsb
mov
jno
js
aas
out
dec
addr16
dec
jmp
sbb
xchg
add
adc
imull
repz
iret
jg
mov
push
dec
bound
in
xchg
sbb
xor
mov
mov
cmpsb
sub
insb
add
xchg
mov
bound
outsb
mov
ret
scas
lcall
mov
push
jl
xchg
cmp
jne
repz
push
imul
adc
xor
dec
stc
enter
mov
and
lea
and
ss
sbb
mov
cmpsb
mov
pushf
scas
sbb
mov
and
jo
cld
cmp
jle
inc
add
adc
pop
es
inc
test
cltd
push
scas
dec
nop
cld
and
scas
xor
adc
jl
leave
jge
jae
bound
ficoms
or
xchg
mov
das
lret
inc
cmp
test
push
push
call
das
xor
mov
mov
adc
push
pop
fdivp
push
cmp
lock
gs
aam
mov
jne
cmp
jnp
jne
gs
or
ret
test
sti
repnz
jp
sub
movsb
cmp
adc
pop
xor
arpl
sub
mov
mov
inc
and
cmpsb
mov
and
xor
pushf
jmp
call
cmp
outsb
ss
cs
jbe
dec
lret
divl
dec
aam
push
jb
cmpl
push
aaa
arpl
iret
inc
fistpl
dec
xchg
ljmp
mov
rcr
mov
out
mov
lea
lret
out
xchg
not
cli
pusha
ret
fs
mov
jae
out
into
pop
push
jg
pop
jb
jae
mov
adcl
enter
mov
mov
mov
xchg
pop
das
notl
cmpsb
fmulp
aaa
cmp
out
xchg
hlt
out
xorl
xchg
add
cmp
ss
adc
inc
fiaddl
pop
arpl
sub
adc
jb
inc
fwait
and
jae
xor
xchg
mov
sbb
push
jnp
jmp
jle
cmp
inc
lea
into
fdivs
filds
repz
ret
add
jmp
shl
scas
ret
call
jle
mov
pshufw
mov
mov
fbld
fildll
sub
jae
ret
adc
and
inc
mov
icebp
cmp
or
and
push
sti
addb
inc
inc
mull
xor
lock
jg
mov
xor
jbe
stos
adc
aaa
jecxz
xchg
inc
inc
adc
mov
jnp
xacquire
fstps
sbb
loopne
mov
jmp
xor
jl
pop
jge
stos
pop
decl
repz
repz
add
mov
pop
loope
or
testl
cmpb
adc
jl
xor
and
jg
roll
pop
xor
add
mov
jle
fucomip
xchg
adc
mov
dec
jnp
rolb
cmp
fistps
repnz
lds
fists
test
jg
fisttpl
out
mov
cmc
shrl
lahf
jmp
repnz
add
lock
mov
testl
sarl
inc
enter
sti
sbbl
and
and
ret
subb
in
loop
sarl
dec
faddp
and
repz
icebp
add
faddl
loop
add
mov
add
fistpll
add
in
aam
loope
rol
repz
and
in
aad
cmp
repnz
out
ffree
cmc
mov
data16
pop
rolb
repz
subb
out
add
push
mov
sar
mov
sti
rol
mov
out
sti
adc
cmpsb
mov
fs
jecxz
shlb
mov
incl
push
jecxz
mov
out
mov
add
mov
int3
mull
add
test
rolb
add
ret
flds
inc
ss
in
push
add
inc
or
out
add
lds
jecxz
inc
inc
scas
add
lds
jns
sbb
adc
shll
add
inc
imul
cltd
jle
inc
arpl
xor
int
xor
add
jecxz
in
and
test
jns
in
pop
sahf
add
jecxz
call
xchg
push
mov
adc
nop
jl
sbb
rcr
add
inc
jne
inc
lahf
jmp
jg
in
pop
popa
mov
push
inc
xchg
aaa
push
jecxz
imul
xchg
aaa
xor
lret
roll
das
lcall
and
es
scas
inc
push
mov
mov
ret
push
and
pop
xorl
mov
fnstenv
inc
scas
icebp
jno
repz
repnz
add
loope
in
dec
sarl
jecxz
push
jl
push
jl
and
test
jo
inc
fnclex
cli
xchg
or
mov
roll
jle
mov
rcll
hlt
cwtl
fwait
cmpsl
mov
pop
mov
rorl
cli
cwtl
cmpsl
cmpsl
mov
sbb
inc
rcl
repnz
shll
cmpsb
pop
mov
pop
pop
inc
cwtl
and
mov
or
mov
jl
shll
pop
fldl
inc
loop
mov
loop
punpcklwd
mov
fisubl
pop
mov
js
out
fs
mov
out
and
mov
add
sub
mov
xchg
cmp
jge
fldl
popf
push
adc
jecxz
stos
jae
nop
add
movb
xchg
mul
xor
jnp
and
fsubp
divl
mov
sti
loop
iret
xchg
xchg
loope
sti
iret
loop
sti
std
lret
jge
add
inc
mov
push
loop
mov
dec
loop
cmp
push
loop
push
pusha
push
loop
sub
cwtl
push
sub
loop
pop
nop
push
loop
cli
add
mov
fdivs
mov
std
mov
dec
pop
sbbl
pop
loopne
jno
lret
cmp
sbb
jns
ljmp
xor
jmp
aam
out
ret
push
mov
stc
notl
lds
out
mov
mov
mov
push
adc
out
popa
push
mov
push
out
add
sbb
iret
and
mov
ds
xor
ret
pushfw
and
sbb
out
mov
and
repz
movsb
loop
push
loopne
scas
cmp
stc
cmp
sarl
aaa
shll
and
mov
fsts
fiadds
mov
xor
gs
arpl
lret
in
mov
int
call
int
in
ret
mov
inc
jg
push
andb
ljmp
adc
mov
xlat
mov
pop
rol
in
fwait
jb
loop
dec
hlt
mov
hlt
mov
ret
fldcw
scas
xlat
push
fidivs
lret
cmpsb
shll
sarl
lret
mov
cmp
mov
insb
mov
or
xor
xorl
bound
out
sbbb
xlat
out
pop
fidivs
mov
in
stc
jl
cmp
into
add
mov
add
mov
outsl
jecxz
xor
outsl
iret
mov
or
loopne
xchg
movl
lcall
sub
mov
xchg
mov
cwtl
adc
shlb
arpl
ret
and
xorl
push
pushl
and
dec
inc
cltd
imull
int
jnp
and
int
mov
pop
xchg
lea
mov
or
push
and
pop
mov
arpl
icebp
stos
and
jo
or
out
pop
aas
shll
out
out
out
dec
add
scas
xchg
jb
ljmp
mov
adc
xchg
push
stos
push
lret
lret
lretw
outsb
lret
scas
jecxz
push
sahf
not
mov
addb
orb
jmp
ret
lret
mov
mov
out
lret
cmp
mov
fbstp
sub
in
loope
add
xor
mov
cltd
xchg
lock
stos
ljmp
jecxz
add
jecxz
inc
loop,pt
sub
fistpl
mov
out
or
jne
jae
jecxz
mov
cld
pop
cld
push
sahf
ret
cmp
rolb
out
jg
jg
scas
inc
sarb
xor
arpl
mov
jge
loope
outsl
shlb
imul
fneni(8087
stos
mov
orb
cmp
adcl
mov
mov
out
sbb
add
jb
sub
pushl
push
into
repnz
out
orb
jp
data16
push
mov
jnp
loopne
lcall
jbe
mov
shl
int3
movsl
sub
and
xor
fcom
xchg
mov
insl
fadd
jae
out
cmp
imul
popf
sarb
add
addb
pop
jl
std
into
xchg
dec
js
arpl
fucomi
xor
cli
xchg
aaa
out
fwait
pop
ds
scas
dec
sti
clc
arpl
xor
push
mov
jge
push
repz
stos
call
repz
lcall
cmp
inc
aaa
fidivs
lret
inc
dec
jb
fldt
bound
loop
xchg
pop
out
xchg
scas
ret
push
loope
mov
andb
jmp
push
arpl
out
push
aaa
leave
div
repz
scas
mov
sbb
stos
out
jnp
out
sbb
xchg
pop
jg
scas
mov
cmp
test
mov
dec
jns
stos
insl
adc
jmp
mov
sti
call
vsqrtpd
fwait
cmpsb
sti
and
loopne
mov
jb
shll
addb
mov
loope
idivl
sahf
mov
repz
jp
push
repz
rolb
repnz
jb
and
iret
mov
push
jb
repz
imul
mov
and
aad
fs
insl
das
arpl
add
cmp
jne
sub
adc
ret
imul
lea
mov
sahf
sarl
and
xchg
xchg
inc
loopne
jb
mov
xchg
mov
cmc
daa
stc
mov
pusha
icebp
cltd
in
in
jmp
aad
pop
mov
mov
inc
mov
push
sbb
mov
ljmp
jecxz
loop
inc
xor
inc
sbb
stos
xor
ds
imul
adc
or
cmc
scas
add
pop
std
repz
mov
divl
pop
mov
inc
mov
lret
rcl
pop
and
cli
mov
adcb
repnz
stc
mov
enter
fcmovne
rorb
pusha
mov
int
jmp
mov
shl
push
push
adc
mov
xchg
mov
scas
adc
fldt
inc
fidivs
mov
jmp
and
repz
cs
fidivl
adc
xchg
inc
cld
jb
sbbl
jae
loopne
push
xlat
xlat
loopne
jb
inc
outsb
add
loop
loop
rorl
xchg
loope
repz
inc
outsb
negb
push
lock
dec
jg
rcl
push
jmpw
or
and
shrl
pop
push
or
outsb
xor
jp
popf
ret
xchg
out
nop
mov
jb
add
or
sub
jb
fimuls
or
lahf
mov
push
and
rcrl
std
cltd
xchg
pusha
or
mov
mov
mov
xorl
or
jmp
mov
out
mov
jae
fiadds
xchg
and
jbe
addb
mov
div
xor
and
out
push
sub
sub
movl
push
jmp
xchg
mov
imul
mov
xchg
loop
mov
add
leave
ljmp
stos
pop
shl
cmp
push
out
dec
clc
jge
incl
repz
ret
int
sahf
imul
mov
in
ljmp
cmpsl
mov
push
mov
mov
mov
ret
shl
xorb
cmp
mov
dec
inc
fs
jl
sbb
scas
sbb
jmp
roll
adc
lret
jno
mov
mov
movsl
jno
adc
daa
jae
popf
sbbl
dec
dec
push
sbb
ret
jnp
fdivl
dec
adc
xchg
adc
or
mov
pop
bound
shll
fisubs
cmp
jo
popa
mov
shll
iret
push
mov
leave
sbb
push
sub
sub
inc
test
lret
rep
shll
loope
push
fstp
outsl
jp
push
add
push
pop
xor
arpl
nop
lret
sbb
dec
enter
jo
xor
mov
test
inc
inc
lods
out
ljmp
dec
jne
sub
ret
jns
popa
pushf
imul
and
js
movsl
out
xor
push
lds
sub
aam
lret
cmpl
ja
xor
or
addr16
ret
push
sbb
cltd
xchg
or
arpl
mov
mull
cmpb
jbe
arpl
add
aad
sbb
fs
movsl
cmp
into
shl
scas
sub
lret
mov
mov
mov
roll
popa
fs
repz
outsb
jg
pop
push
ret
cmpsb
xor
mov
cwtl
adc
inc
test
and
xchg
and
jg
outsb
loopne
jo
dec
jecxz
or
xor
movsl
ja
pushf
lock
aas
out
mov
fwait
cmc
and
inc
outsb
sbb
fdivp
cmpl
xchg
outsb
xchg
push
out
aaa
mov
adc
ret
and
jno
arpl
repz
mov
jb
scas
cmc
shrb
fcoml
mov
add
sbbl
dec
mov
jnp
loop
mov
jecxz
jo
fstpt
outsb
jb
xchg
xor
orb
xchg
inc
nop
mov
xor
fwait
lret
sbb
and
imul
sbb
mov
sub
xor
fnstsw
mov
mov
xor
xor
jb
shl
inc
test
add
mov
gs
xchg
push
mov
sbb
cmp
in
sti
pusha
shlb
outsl
div
jmp
addr16
dec
fdivl
xorl
mov
adc
mov
pop
mov
jp
aam
mov
in
cmp
incl
iret
lret
sbb
movb
inc
and
lods
aad
stos
imul
notl
test
repz
pushl
stc
int3
jb
mov
and
xchg
fcomi
int
dec
ror
push
and
in
mov
int
mov
ss
ret
inc
aad
xor
jge
clc
and
inc
out
repz
outsl
int
ret
jae
pop
ret
jae
xchg
or
arpl
stos
mov
fwait
push
outsl
and
xchg
mov
aam
sti
pop
arpl
or
mov
pop
xchg
addr16
enter
rcrl
addl
fnstsw
pusha
push
shll
lds
fnstsw
jo
fiadds
push
cltd
add
or
and
outsl
jae
mov
pusha
push
sarl
jae
sbb
add
sub
sub
or
ret
jecxz
jecxz
add
ret
adc
xchg
lahf
ficomps
push
into
sbb
jp
stos
jp
or
bound
imul
push
rcr
cli
mov
mov
mov
fst
lcall
add
jbe
fwait
lret
mov
xor
nop
mov
lahf
mov
adcb
inc
mov
add
pop
sbb
jns
mov
loop
push
data16
adc
add
lods
outsb
mov
clc
add
mov
rcll
mov
shrl
sarl
in
je
lods
cli
mov
scas
popl
cmpsb
xchg
arpl
xor
rcrl
arpl
push
loope
mov
jp
inc
jbe
dec
mov
ds
xor
repz
loopne
pushf
jbe
cmp
insb
popf
xchg
inc
inc
jno
sbb
in
adc
ret
out
addr16
mov
mov
xchg
push
mov
fwait
mov
bound
mov
and
in
rcrl
test
mov
int
xchg
sbb
test
pop
mov
ds
mov
inc
jl
fcoms
rcl
sbb
aaa
fwait
mov
call
mov
jmp
xchg
fucom
les
add
sub
xor
push
popf
ljmp
mov
mov
mov
dec
mov
out
mov
add
pop
cmp
cli
cmp
xchg
jecxz
icebp
jmp
push
cmpsl
push
cmp
loopne
cltd
xchg
mov
jno
stos
jae
loope
fisttpl
cwtl
imul
sti
xorb
lock
rol
test
in
int3
jns
mov
rorl
shrl
arpl
fbld
dec
or
ror
push
cmp
xor
fdivr
inc
out
mov
out
mov
xor
loop
test
fisubs
jle
aas
mov
stos
pop
or
test
xor
inc
mov
in
lretw
pop
pop
aam
sbb
mov
push
jno
push
fisttpll
cmp
stc
fcomi
fstps
sbb
scas
insb
adcb
mov
mov
cli
push
and
fstps
jp
lock
insl
jp
fidivl
repnz
mov
vpxor
lret
inc
xorl
stos
popf
repnz
mov
int
lds
mov
filds
cwtl
jae
das
loop
mov
cmp
adcl
xor
xor
stos
pusha
popf
cli
mov
out
arpl
mov
fistps
lock
mov
xor
int
jg
bound
je
jmp
mov
popf
add
repz
xor
sbb
test
ljmp
lret
xor
xchg
inc
in
bnd
fmulp
out
je
fists
add
inc
insl
jns
test
popf
cltd
lods
rcrl
jne
jae
lcall
pop
dec
push
cmpsb
push
jl
std
ljmp
adc
fs
movsl
mov
test
inc
pusha
pop
add
mov
popa
lock
push
or
movsl
popa
repnz
rcll
cmpsl
arpl
out
pop
add
cld
in
mov
push
and
int3
cld
cld
int
addr16
cmp
ret
xor
mov
es
push
pop
movsl
jge
and
loopne
mov
push
stos
aaa
xor
lsl
sbb
sti
inc
and
jb
pop
or
push
jle
adc
xchg
mov
sbb
push
repz
dec
lret
xor
fdivrs
dec
idivb
sti
das
iret
mov
mov
sub
ja
jne
sub
mov
pop
sub
or
lods
sbb
leave
sub
dec
sahf
inc
jbe
pop
cmpsl
popa
push
mov
push
les
push
movsb
mov
test
fsubs
jb
lds
and
adc
dec
fstpt
or
or
pop
pop
shll
or
mov
mov
test
dec
fmul
cmc
pop
cs
movsb
add
addr16
stos
sahf
mov
rorb
jg
lea
mov
mov
je
mov
movsb
pop
sbb
mov
test
adc
mov
pusha
idivb
pop
mov
cld
cmc
add
xchg
xchg
mov
fcmovne
mov
cltd
push
xchg
je
in
or
mov
mov
lahf
cmp
and
aad
js
push
sahf
dec
lods
ret
std
xor
xor
test
aad
jle
shr
push
in
push
dec
push
js
push
inc
repnz
into
push
jns
or
jl
xchg
xor
mov
pushf
inc
idivb
scas
ret
mov
sub
fcmovnb
lret
cmp
fs
fmulp
jl
iret
jnp
icebp
insl
xchg
daa
aaa
mov
pop
repnz
int
adc
add
push
pushf
arpl
xlat
addr16
hlt
fisubl
das
push
mov
push
xchg
lcall
dec
add
inc
cmp
cmpsb
adc
rcll
rcrb
and
xchg
sbb
cmp
inc
adc
jb
shll
jns
xchg
pop
sbb
jno
adc
bound
int3
stos
rclb
hlt
in
popf
jb
push
push
out
mov
jo
push
jns
cli
mov
fidivrl
adcb
mov
into
adc
mov
pop
frstor
lret
repnz
push
lock
aam
in
inc
jo
inc
les
cmp
jo
jl
arpl
adc
dec
ror
jae
xlat
push
sbb
ss
sub
sbb
inc
jmp
jmp
lret
jecxz
push
out
xchg
adc
call
mov
cmp
xchg
pop
imul
fstps
jl
push
push
mov
enter
xchg
pop
mov
in
ret
xchg
fs
jbe
neg
cmp
inc
mov
shl
not
add
add
rcl
movsbw
mov
add
add
test
shrd
setnp
setae
movl
mov
bsf
mov
stc
push
cmp
pushf
lea
je
push
lea
jbe
xor
pushf
sub
sub
clc
mov
mov
xchg
pop
bsr
shr
mov
sar
btc
add
xchg
not
test
shr
stc
adc
mov
add
bswap
add
call
jmp
push
dec
cmp
mov
xchg
push
inc
and
or
out
mov
xor
adc
or
cli
xor
divb
pusha
test
nop
pop
lea
aam
mov
lret
js
roll
jle
fstps
imul
ficomps
mov
or
sub
pop
pop
and
in
xchg
fs
mov
push
lea
jae
not
mov
not
inc
setae
jb
mov
mov
mov
pushf
call
clc
loop
mov
sbb
jns
jge
dec
test
scas
int3
out
mov
mov
cld
mov
sbb
push
mov
lret
dec
cmc
pop
add
pop
mov
push
hlt
daa
ljmp
ja
push
cmp
pop
inc
and
xlat
call
fiadds
and
das
out
pop
sbb
cmp
sbb
jp
jle
ljmp
push
xchg
mov
mull
push
test
cmp
xor
mov
mov
xchg
xchg
adc
fdivp
sub
xor
leave
xchg
jle
jne
sbb
jb
sbb
add
and
push
inc
test
and
jmp
xor
sub
jmp
mov
inc
lea
pusha
pushl
lea
call
push
adc
push
jmp
mov
lods
call
lea
jb
pushf
pushf
movb
lea
jmp
jmp
mov
adc
mov
stc
push
cmp
cmp
pusha
lea
jbe
bswap
mov
neg
call
loopne
int
cltd
push
jl
cmp
cmp
icebp
mov
mov
pop
xor
hlt
pushf
xchg
sub
jns
adc
jle
icebp
xchg
push
xchg
lret
arpl
lret
inc
pop
ret
and
xor
ficomps
pusha
cltd
xchg
or
cmp
repnz
lods
cmp
mov
inc
into
out
inc
xor
rcrb
nop
cmpsl
mov
scas
xchg
push
dec
cli
sbb
inc
mov
jb
xor
data16
or
mov
js
hlt
mov
xchg
or
pushf
mov
pop
cmpsb
jb
mov
stos
jbe
pop
mov
aad
xor
push
mov
loope
clc
mov
popa
icebp
inc
je
addl
jle
fidivrs
mov
test
sub
lds
ss
out
dec
pusha
in
stc
out
rcr
sbb
push
jmp
lods
rcr
gs
insl
cs
ret
out
sub
mov
or
mov
ds
int3
rorl
xchg
movsb
adc
fidivs
fwait
adc
cmp
adc
cld
subb
sarb
and
sahf
scas
xlat
and
mov
movw
test
pusha
jmp
ja
inc
mov
je
aam
les
insb
sbb
add
xchg
fmuls
pop
mov
pop
subb
lcall
xchg
mov
adc
adc
stos
mov
sub
mov
ljmp
sbb
rcll
in
xor
iret
jae
cmp
or
movsl
dec
pusha
mov
or
mov
mov
pusha
pushl
ret
das
shrl
or
and
mov
cmp
cmpsl
jns
inc
add
or
arpl
outsb
jnp
cmpsl
outsl
sub
sub
mov
jmp
xchg
ss
test
sub
inc
pushf
mov
mov
xor
divb
and
shrl
cld
mov
sub
cmp
dec
pop
push
fnstsw
lahf
jg
adc
and
roll
push
cmp
gs
out
fisubrl
mov
jae
out
xchg
loope
xchg
pop
dec
add
leave
popa
outsb
push
add
mov
incl
and
xor
loopne
jecxz
jle
mov
add
loope
decl
icebp
data16
xor
lock
fisubs
in
mov
decl
loop
mov
psrad
pushl
in
push
cmp
decl
or
or
lock
pushl
xor
cmp
loope
decl
cmpsl
aas
lock
cmp
loop
call
xor
loopne
loope
decl
lret
popf
sub
js
mov
and
dec
cmp
add
cmp
jae
cmp
or
cmp
loope
lcall
in
sbb
loope
decl
aas
cmp
shl
decl
roll
divl
rolb
in
fwait
in
lds
xor
loope
incl
adc
and
call
mov
decl
adc
jo
loope
decl
mov
pop
xor
mov
or
xchg
data16
mov
decl
jnp
pop
sysenter
cmp
adc
jne
call
in
dec
jmp
cmp
adc
cmpsl
jne
mov
decl
pop
call
lock
incl
iret
dec
ss
cmp
adc
decl
mov
test
mov
aas
add
cmp
jecxz
jmp
mov
add
cmp
sub
sti
loope
lcall
inc
fs
jg
cmp
loope
mov
lds
shlb
ljmp
mov
decl
xlat
push
fistpll
decl
dec
into
add
push
pop
add
stc
fimuls
sub
add
xor
call
jl
ror
mov
pusha
cmp
lcall
and
or
imul
decl
fs
sub
mov
add
push
call
xor
adc
lcall
xchg
pop
add
in
lcall
xor
pushl
pop
das
ljmp
decl
inc
xchg
enter
inc
or
out
xchg
push
out
test
add
adc
add
mov
decl
test
fistpll
decl
shlb
rdpmc
cmp
aas
in
lcall
cmp
xor
adc
mov
cmp
adc
add
in
ja
mov
pushf
mov
pushl
ret
adc
sarl
insl
cmp
icebp
mov
jge
iret
push
cmp
xchg
mov
fs
in
dec
cwtl
mov
test
xor
adc
and
scas
subb
push
pop
test
mov
mov
xor
push
xor
sub
stos
cmpsl
call
jg
in
lea
cltd
bound
orb
add
aad
push
sbb
push
xor
cmpsb
jl
dec
cmpsl
mov
cmp
xor
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lds
jno
push
outsb
xorb
es
ss
dec
push
push
cmp
sub
notb
or
out
test
mov
pop
movl
dec
addr16
daa
xor
testl
or
mov
push
addr16
fdivrs
push
call
pop
mov
push
or
mov
in
call
test
scas
lea
call
call
movl
push
mov
pushf
lea
jmp
inc
cmp
cltd
push
add
fistpl
mov
add
dec
dec
cmp
and
xor
testb
test
dec
divb
aas
repnz
fwait
push
jge
in
xchg
test
sti
cmc
cwtl
push
dec
mov
daa
jecxz
pop
fstps
mov
push
adc
scas
sbb
jo
mov
inc
int
pop
adc
mov
push
in
adc
out
jge
rorl
push
mov
data16
add
insl
imul
insl
push
jb
jo
jb
jns
mov
push
or
subb
cmp
push
mov
adc
pop
stos
mov
stc
pop
and
sbb
sbb
lock
pop
push
dec
cld
lods
ds
js
and
out
testb
outsl
hlt
loopne
mov
xlat
lea
adc
data16
inc
test
push
movsb
shrb
movsb
loopne
out
adc
jle
stos
add
and
inc
push
xchg
sub
out
sub
pushf
cmp
lahf
movzbl
lea
lea
pop
mov
pushf
lea
ja
pusha
push
pusha
lea
jb
call
jmp
add
inc
js
je
jb
arpl
jae
push
shrb
ret
out
arpl
jnp
add
push
pop
pop
inc
das
call
xor
and
mov
xor
xchg
push
push
daa
aas
mov
sti
sub
sbb
gs
ret
arpl
test
sbb
scas
pop
xchg
adc
test
mov
hlt
xchg
push
cld
pop
push
xchg
add
and
jae
test
pop
fldenv
loop
dec
in
pop
sbb
mov
scas
jb
in
inc
lret
je
shlb
loopne
movsb
add
out
neg
ss
lea
adc
cltd
push
iret
pop
incl
lret
out
jnp
jmp
push
das
ja
cmp
cmpsb
mov
fld
addr16
mov
inc
mov
cmpsl
mov
shll
jle
scas
inc
iret
sbb
shr
cltd
push
pop
pop
pop
dec
lahf
out
inc
repnz
lret
jecxz
mov
dec
out
pop
pop
ret
jecxz
jle
jmp
inc
pop
fwait
inc
pop
gs
imul
inc
lea
call
call
dec
inc
not
setbe
jmp
stos
test
ret
cltd
push
dec
sub
sti
xchg
aas
sub
lahf
fstps
mov
or
in
rcll
fwait
xchg
cmpsl
stos
pop
push
or
xchg
push
pop
cmp
pop
mov
nop
outsb
and
xlat
out
mov
jg
mov
arpl
into
push
sbb
push
and
pop
es
mov
xchg
lcall
mov
lods
push
or
repz
mov
dec
or
or
push
outsb
mov
clc
scas
cmc
cmpsb
or
ret
popf
push
xor
ret
gs
lret
add
daa
push
jecxz
pop
outsb
daa
and
pop
iret
push
or
clc
mov
shll
and
mov
loopne
pop
movsb
adc
mov
sbb
push
dec
add
mov
scas
or
and
jecxz
push
mul
dec
enter
iret
jge
lahf
rcr
movsl
test
fldt
inc
jo
sub
sar
loop
cmpsb
stos
rolb
dec
mov
daa
int3
fistpl
insb
sub
mov
test
fbld
insb
jecxz
jge
adc
push
pop
or
out
arpl
leave
ret
sbb
frstor
push
adc
sub
push
inc
or
pop
xchg
js
mov
inc
nop
push
push
cmp
out
cmpsb
dec
testb
js
icebp
dec
add
add
inc
xor
cltd
push
jecxz
js
pop
add
dec
mov
mov
jmp
add
inc
jb
stos
and
in
xchg
mov
pop
jnp
dec
sub
rolb
cwtl
push
xor
lods
out
aad
adc
xor
cmp
addb
mov
mov
sti
inc
jo
repnz
adc
mov
mov
inc
cmp
inc
sub
out
mov
jnp
das
and
pop
out
stos
and
popf
arpl
stos
pusha
lds
fs
inc
jmp
cmp
jge
sahf
jp
and
pop
pop
push
or
das
sub
dec
insb
dec
jbe
jp
orl
pop
fldt
cmp
pop
push
inc
push
stos
and
fcompp
aad
xchg
lock
or
in
rorb
dec
inc
and
icebp
in
test
mov
mov
or
cli
cmp
pop
sub
movsb
cmp
pop
or
adc
or
incb
data16
fsubrl
xchg
add
cltd
push
mov
addr16
mov
dec
sti
iret
or
enter
push
add
cmc
pop
adc
sbb
xchg
outsl
fdivs
int3
into
js
lret
mov
or
inc
test
fisubl
and
out
mov
or
mov
jne
jge
and
fcoms
cmp
dec
scas
and
cld
popf
in
mov
or
xchg
adc
inc
cld
test
fnsave
xchg
sub
test
test
xorl
int3
adc
sub
inc
cltd
push
add
inc
pop
cmp
subl
mov
cs
cltd
int3
inc
xor
push
xchg
je
dec
and
dec
xor
div
repz
in
das
pop
pusha
fsub
orl
xor
push
je
stos
pusha
dec
js
fiadds
icebp
xor
ret
jnp
fcompl
mov
insb
mov
sub
loopne
inc
lock
xchg
adc
test
dec
mov
scas
add
popa
lods
dec
adc
aas
popf
imul
repz
pop
fcmovb
lret
imul
cmc
mov
cltd
push
cmpsl
test
mov
add
push
dec
cmp
mov
rol
ja
and
mov
lahf
aas
repnz
pop
pushf
or
xchg
or
xchg
push
pop
jns
mov
mov
imull
in
xchg
jp
pop
iret
out
orl
add
hlt
add
lods
mov
xchg
dec
cmpb
pop
push
mov
dec
mov
add
insb
lret
mov
inc
arpl
mov
inc
cltd
push
ljmp
inc
push
rcl
cmp
daa
mov
imul
aaa
mov
mov
cwtl
ffreep
aas
out
lock
push
mull
mov
rcr
roll
incb
inc
adc
sti
pusha
inc
leave
mov
je
push
mov
arpl
dec
add
je
mov
data16
ret
je
sbb
jle
je
sbb
push
mov
add
lea
jne
pusha
movb
lea
call
pushf
push
lea
jmp
push
pushf
pushf
lea
call
pushf
test
jmp
push
shrb
sbb
mov
dec
mov
sub
aas
xchg
lea
mov
dec
and
lcall
leave
adc
iret
cmp
movsl
loop
push
sub
rolb
inc
or
mov
adc
cmp
adc
pushl
push
repz
leave
call
xor
loopne
add
mov
mov
jnp
outsb
imul
aaa
and
cltd
push
shll
or
or
pop
push
and
jb
sub
sub
sbb
out
sti
jns
sbb
jnp
cwtl
pop
adc
insl
sub
rolb
xor
mov
test
push
fwait
push
hlt
ret
jge
hlt
xor
rolb
jmp
movsl
shrl
orb
dec
mov
push
mov
fdivs
pushf
shrb
pop
bound
adc
pop
imul
cli
leave
cltd
push
dec
int3
jo
inc
in
inc
pop
aam
je
movsb
hlt
push
jmp
sub
push
sub
dec
dec
xor
cltd
mov
sub
ljmp
xchg
in
aaa
dec
or
push
fxch
jle
lcall
rcrb
or
or
pop
or
das
aad
xorb
cmp
xor
pop
scas
scas
outsl
pop
in
mov
mov
pop
xchg
fwait
mov
adc
popa
mov
xor
dec
add
leave
cltd
push
into
or
cmp
jg
pop
or
arpl
add
push
sti
incl
and
rol
jo
and
pop
lret
xor
lcall
test
mov
je
mov
lret
cmp
xchg
pop
add
movsl
ja
or
jge
leave
inc
adc
js
iret
or
xor
icebp
int
sub
cmpsb
or
js
push
iret
pop
xlat
mov
and
ds
xchg
mov
or
imul
fstpl
jecxz
xorb
dec
pop
fisubrl
jmp
cmp
cltd
push
xor
imul
shrb
mov
jnp
xorb
out
mov
jb
mov
shl
mov
cmpsb
mov
andb
jne
jecxz
cmp
popa
or
sub
scas
sbb
xor
and
in
sub
out
ret
dec
flds
pop
add
push
loop
scas
sbb
sub
cmp
scas
sbb
test
inc
lods
icebp
cmp
fstps
xchg
roll
shl
adc
cmc
loope
hlt
int3
aas
out
stos
dec
add
std
dec
pusha
bound
mov
mov
leave
test
sub
addb
dec
or
cmp
xchg
daa
mov
in
fisubs
jge
sub
inc
insl
and
movsb
xchg
dec
cmp
jno
prefetch
or
arpl
inc
ljmp
lea
jbe
dec
test
mov
sub
dec
not
xor
xchg
mov
sub
pushf
and
movsbw
mov
bts
or
sar
add
btc
shl
dec
rcl
shr
shr
mov
stc
bswap
add
movw
push
not
call
mov
jmp
call
push
arpl
cltd
push
out
pop
or
sub
push
jecxz
add
jecxz
fwait
shrb
push
inc
pop
xchg
add
or
sbb
fwait
push
in
add
jb
mov
mov
pop
or
sbb
inc
sbb
call
fdivrs
in
lock
rcl
imul
cmp
push
stc
dec
mov
cmp
fsubrs
stos
dec
into
movsb
mov
fnsave
pop
jmp
pop
xor
int3
cltd
push
xchg
aas
fwait
dec
imul
fwait
mov
fbld
iret
out
xchg
push
sub
push
inc
pop
xchg
fisubrl
sub
push
jns
fldt
stos
mov
data16
sbb
pop
adc
imul
xchg
lea
adc
dec
out
mov
inc
cmpsl
lret
addr16
inc
in
xchg
and
push
pinsrw
insl
sbbl
popf
mov
addr16
pop
dec
mov
or
int3
cltd
push
out
sub
or
cmp
sbb
pushf
inc
push
repz
sti
call
aas
out
rorb
repnz
ljmp
sub
mov
jae
lods
mov
sbb
mov
add
push
lahf
pop
jo
fs
or
and
cmp
out
add
mov
ret
push
lea
jmp
add
push
cmpsb
ljmp
mov
scas
or
push
cwtl
jns
dec
lea
jns
jle
js
cmp
imul
loop
mov
test
leave
mov
jle
and
insl
out
inc
pusha
test
ficompl
dec
stc
push
icebp
xlat
pop
xor
lret
mov
aaa
repz
or
add
jmp
mov
cs
mov
mov
ficoms
inc
ja
and
adc
pushf
push
pushf
lea
jmp
lahf
mov
int
push
jnp
mov
mov
insb
mov
pop
or
sbb
les
cs
ss
xchg
fwait
cs
fstpt
cmp
movb
push
push
int
or
adc
in
stos
push
push
cmp
adc
dec
sub
in
mov
out
test
inc
sub
in
lods
fwait
or
gs
mov
dec
test
jnp
sbb
mov
sbb
pop
xor
icebp
mov
or
imul
jns
and
dec
in
inc
pop
imul
cmpsb
aaa
fildl
faddl
sbb
xchg
sbb
dec
mov
pusha
ret
xchg
orps
mov
xor
add
test
add
decl
jmp
repnz
fisubrs
mov
movsb
pusha
in
pushf
inc
push
mov
fdiv
mov
mov
push
pop
aaa
mov
lock
mov
adc
add
shlb
adc
push
sbb
pop
push
fisttpl
jae
and
push
cmc
sti
decl
test
add
bts
mov
cmc
test
stc
stc
add
clc
movzwl
bswap
shl
neg
mov
pushf
add
test
jmp
sub
xlat
jae
jnp
add
cmp
jmp
sbb
fldz
es
es
cmp
in
stc
fistl
push
adc
xchg
adc
mov
sbb
test
adc
fstpl
repz
jb
xor
movsb
add
mov
inc
jae
cmc
xchg
jb
dec
pop
mov
xchg
ret
add
jle
nop
xchg
push
pushf
bound
out
mov
sbb
into
xchg
shl
clc
stc
lcall
sub
push
jle
ja
jg
mov
jecxz
sarl
dec
sub
mov
mov
xchg
pop
or
dec
divl
inc
data16
filds
clc
xchg
shl
into
sbb
push
inc
fidivs
ss
negb
sub
mov
leave
sbb
mov
fidivl
cli
lods
jle
adc
pop
xor
pushl
mov
mov
fdivp
adc
xor
shrb
cltd
push
iret
xchg
xchg
lahf
sbb
and
fwait
and
and
lods
addb
aaa
out
sbb
das
fisubrs
andl
pop
add
movsb
inc
and
icebp
pop
add
in
or
push
pop
dec
pop
mov
imul
incb
mov
mov
aas
and
fstl
jb
add
push
pop
stc
add
push
lea
jmp
lea
jae
pusha
lea
jne
pusha
pusha
stos
push
pushf
mov
movl
lea
jmp
arpl
fs
xor
cs
insb
add
jmp
je
sub
cltd
push
mov
and
imul
lds
and
test
sub
adc
mov
loope
or
jp
adcb
add
mov
pop
stos
xchg
adc
and
divl
mov
or
adcb
in
inc
mov
sub
add
cmp
cmpsb
lahf
dec
and
jnp
push
out
push
std
std
fstpt
das
in
dec
ja
add
pop
xchg
pop
int3
add
xchg
push
add
sbb
in
sbb
push
adc
sbb
pop
insl
sbb
pop
adc
sbb
test
add
add
sbb
daa
sbb
and
xor
sbb
stos
cmp
add
add
sbb
mov
adc
sbb
jp
add
sbb
outsl
lea
mov
sbb
out
adc
add
sbb
pop
xor
and
bound
sbb
imul
and
push
sbb
inc
jb
add
sbb
das
sbbb
adc
sbb
test
adc
sbb
and
and
mov
sbb
pop
insl
sbb
int3
adc
add
add
aad
popf
inc
fisttpll
jno
popf
jmp
jmp
adc
dec
outsl
sub
push
mov
out
push
add
sar
pop
push
jno
push
sarb
pop
mov
mov
daa
pop
add
aad
repz
ret
push
push
cmp
dec
mov
push
in
je
aas
sarl
shrl
push
jns
xor
dec
movsb
inc
xchg
insb
mov
data16
cltd
push
notl
addr16
imul
cmpsl
mov
lock
inc
outsb
nop
stc
xchg
ja
aad
add
pop
lcall
jne
and
cli
call
fldenv
xor
mov
and
jno
jb
cwtl
dec
aad
pop
pop
cmp
stos
xchg
adc
aas
das
sub
pmaddwd
pop
stos
sub
mov
mov
add
dec
adc
icebp
shr
std
mov
scas
or
cmp
add
push
xchg
adc
bound
add
pushl
mov
push
lea
call
pushf
call
pushf
pop
and
cltd
push
sar
and
sbb
pop
and
bound
sub
cwtl
xor
ror
add
fisttpl
xchg
dec
push
orb
mov
popl
and
adc
dec
out
dec
int
in
fmuls
jmp
fistl
leave
sti
xchg
inc
push
push
or
sbb
dec
mov
xlat
mov
adcb
mov
clc
bt
mov
clc
cmp
cmp
mov
shr
rcr
dec
mov
clc
cmc
bt
movb
sub
lea
jno
rep
pushf
lea
mov
pusha
movb
push
lea
jmp
jmp
movl
pushf
pusha
pushf
pushl
lea
jmp
lods
xchg
call
bound
out
out
jbe
ret
sbb
jge
pop
xchg
mov
aas
out
inc
adc
jns
or
dec
popa
cmpsl
pop
pusha
test
jns
adc
js
shlb
inc
pop
pop
and
mov
data16
pusha
ret
sub
insl
rcr
aaa
imul
add
pop
repnz
dec
test
sub
and
nop
push
xchg
rol
ror
push
rol
btr
movzbw
push
lea
mov
xor
dec
clc
mov
rcr
rcr
rol
call
lods
mov
and
xor
xor
xor
outsl
xchg
push
push
daa
push
cmp
fsts
fs
mov
scas
decb
jo
js
pop
mov
and
inc
add
aad
out
jp
push
and
testl
pop
cmp
add
clc
scas
jp
add
mov
cwtl
xchg
jns
jle
cmp
ss
push
test
test
and
stos
sbb
sbb
pushl
dec
fistps
lret
adc
and
in
cmp
xchg
stc
push
inc
sub
cmpsl
sahf
les
cmp
mov
test
cmpsb
loope
xor
pop
std
mov
adc
cmpsl
insb
dec
addr16
jp
sub
shr
adc
cmp
adc
push
loopne
xchg
insl
fidivl
jmp
cmpsl
or
sub
lahf
cmc
mov
cltd
sbb
jbe
add
mov
push
add
add
in
push
sub
add
lock
push
xchg
add
jns
cmp
inc
push
sbb
inc
add
sbb
hlt
int
das
je
mov
loope
mov
jle
sbb
test
movb
jecxz
inc
call
pop
xor
mov
in
cmp
xlat
iret
cli
fcoms
pop
mov
xchg
adc
cmc
stos
jno
cmp
push
push
or
mov
inc
push
sbb
cltd
push
jnp
inc
sub
jnp
jae
cmp
xchg
sbb
add
rcrb
xchg
push
or
mov
lret
cwtl
icebp
push
std
sub
fs
push
les
inc
outsb
dec
std
ja
loope
sbb
cwtl
lret
fimull
mov
insl
add
lret
add
mov
sub
push
sbb
jg
jmp
mov
add
mov
pushf
mov
lea
jb
jmp
bt
pushf
or
call
mov
fcmovnu
cltd
push
push
div
inc
and
out
repz
aas
jnp
mov
sahf
adc
add
sbb
jns
mov
mov
lock
in
mov
jle
mov
cmp
xor
xchg
inc
or
inc
adc
mov
mov
bound
popf
or
daa
push
push
mov
movsb
adc
daa
or
mov
rcrl
and
cli
cmpb
mov
inc
loopne
enter
xor
icebp
aad
cwtl
xorl
dec
arpl
jae
ret
aaa
push
pop
xchg
sbbb
push
icebp
adc
xchg
imul
orb
movsb
mov
je
push
ljmp
add
aam
js
add
and
popa
stc
push
add
iret
or
int3
mov
inc
hlt
mov
std
xchg
outsl
jecxz
mov
xchg
pusha
cmp
mov
pop
xor
add
mov
imul
sub
hlt
pushf
jns
dec
rcl
cli
adc
xchg
rol
xor
jno
test
xor
or
cli
loop
and
loope
cltd
push
push
lea
fadds
cli
adc
sahf
neg
ja
arpl
fildll
cmp
cmp
push
fisttps
mov
mov
xor
movsl
je
xor
lods
int
lods
repz
lcall
xor
mov
cmpl
jl
scas
xchg
or
data16
xchg
or
into
aaa
xchg
js
xor
repnz
sub
into
mov
adc
arpl
adc
xchg
ds
mov
aaa
pop
push
sbb
pop
ljmp
push
pop
frstor
push
mov
cwtl
hlt
sub
imulb
pop
xor
loopne
mov
jl
or
jae
and
xchg
sbb
dec
push
adc
aam
stc
adc
cmpsl
sub
jmp
loope
cli
imul
add
dec
inc
add
lret
xchg
addl
cmc
mov
lret
lahf
pop
xchg
les
push
ds
fistpl
test
cmp
cmp
inc
int3
rcrl
push
and
das
popa
xchg
mov
aas
out
pusha
mov
dec
pop
lret
lret
xchg
mov
mov
ficoml
xchg
pop
fwait
jl
loopne
addr16
incb
ret
xor
scas
clc
js
push
pop
mov
pop
pop
ss
popa
xchg
jns
into
push
sub
add
cld
fcoms
loop
mov
jae
les
add
inc
cmc
cmpb
jmp
mov
push
pop
xor
or
sbb
pop
dec
adc
mov
and
adc
neg
lahf
sti
pop
leave
xlat
test
pop
xor
and
fcmovu
mov
iret
pushf
je
and
adc
ja
in
mov
pop
lret
jecxz
xor
pop
lock
fcmovu
ficompl
xchg
enter
mov
loope
aad
repz
cmp
es
or
fcmove
neg
inc
inc
sub
jl
test
fdivrl
dec
mov
int3
mov
call
fs
imul
in
es
fistpl
leave
in
and
icebp
jge
into
out
sbb
xchg
xorb
daa
and
mov
leave
bound
test
mov
mov
cli
call
ds
jle
cmp
fcoms
cmp
and
xlat
jbe
xchg
sahf
inc
cli
mov
jae
mov
test
mov
mov
pusha
aaa
in
lret
mov
shll
movsl
data16
sub
xor
lods
mov
dec
cmpsl
dec
icebp
jmp
mov
insl
std
hlt
cmp
loopne
enter
lcall
cli
sub
pop
ja
jnp
jae
or
sbb
inc
adc
or
xlat
and
dec
data16
lock
pop
fsts
jae
dec
jb
fcmovu
int3
sbb
fstp
notb
fidivs
push
cmpsb
dec
sub
ret
xor
inc
mov
ljmp
push
js
sbb
fildll
push
js
fs
xchg
inc
pop
xor
in
dec
mov
jb
mov
scas
rcr
cltd
push
popa
rolb
mov
mov
jbe
out
pop
rcr
icebp
sbb
jnp
shr
jl
sub
mov
inc
xor
sahf
lret
adc
loop
add
icebp
cmpsb
or
dec
jmp
xor
sub
jecxz
int
push
jecxz
mov
cld
stos
cmpsb
pop
ds
or
xor
xchg
pop
lods
jg
xor
or
fdivrp
bound
shrl
pop
dec
inc
clc
xor
call
jge
inc
ficomps
lcall
jle
pop
rcr
call
jns
enter
mov
cmp
fmulp
jge
lahf
int3
cmp
loopne
test
mov
in
mov
out
mov
jmp
cmpsb
enter
mov
sti
jo
cld
fs
insl
push
add
ljmp
inc
xchg
adc
aaa
sub
add
or
adc
addb
repz
lcall
add
push
mov
and
adc
and
pusha
xor
lea
jmp
jo
std
ficomps
popf
mov
mov
in
xchg
sbb
push
mov
xchg
into
push
addr16
call
sbb
sub
sahf
or
push
loope
pop
out
cltd
stc
fcmovnu
ror
xchg
sarb
aam
push
pop
dec
adc
lock
lcall
div
mov
jl
xchg
insl
in
std
cmpsb
js
add
xlat
xchg
mov
and
mov
pusha
xchg
inc
nop
ds
dec
fcoms
idivb
nop
and
fwait
and
cmp
clc
add
pusha
lea
jmp
or
sbb
push
and
adc
sub
insb
cmp
push
push
fldcw
jns
cli
lock
aad
sar
cmp
xchg
xchg
mov
test
mov
or
mov
xor
cld
xchg
adc
loope
jecxz
shl
jl
or
mov
loope
mov
add
sub
and
lcall
cmpsb
and
ret
loopne
xchg
cmp
push
jb
fsub
fsub
movsb
mov
test
decl
sarl
jg
nop
push
sub
sub
mov
xor
shll
test
cmp
incl
and
and
pop
and
clc
shlb
fmull
nop
inc
inc
addps
jo
ja
mov
fwait
jge
add
inc
push
rcll
lahf
sti
imul
pop
push
adc
les
std
mov
sub
and
aad
ffreep
mov
xchg
and
cmp
xchg
ss
into
and
mov
inc
icebp
aas
lds
dec
int
jnp
les
stos
in
dec
out
sahf
and
pop
fbld
mul
sahf
xacquire
jle
pop
cmpsb
adc
cmp
pop
insb
sub
in
xlat
fwait
mov
stc
stos
nop
dec
mov
and
pop
cmp
int3
jbe
test
pop
in
js
and
sub
pop
inc
adc
lret
mov
lcall
lds
int
ljmp
insl
jno
pop
mov
leave
pop
dec
mov
xlat
xor
inc
pop
dec
dec
inc
fidivl
das
push
loopne
push
stc
mov
push
or
cmp
push
shlb
inc
pop
lock
cwtl
shrd
enter
fwait
or
jo
rol
xchg
and
inc
or
fisttps
repnz
fs
mov
popf
scas
int3
adc
cmp
jns
cltd
push
shrb
mov
push
insb
roll
adc
mov
jmp
sbb
add
insb
lock
pusha
les
and
movsl
sbb
lods
jb
stos
xor
adc
xor
pushf
jge
add
les
push
fldl
sub
xchg
or
clc
and
mov
cltd
push
xchg
and
fcmovnb
mov
and
jge
mov
xor
push
inc
mov
sahf
add
pop
je
add
ret
leave
push
lcall
dec
sbb
mov
dec
mov
loopne
mov
aas
das
add
mov
scas
lcall
stc
addb
sarl
fsts
daa
adc
fnsave
jno
cmp
push
mov
mov
mov
pextrw
xor
jge
mov
mov
dec
push
jnp
cltd
push
addr16
ret
mov
fists
lret
daa
fwait
jae
outsl
int
or
sub
vpacksswb
mov
stc
lds
jl
adc
dec
popa
adc
xchg
ficoms
jo,pt
or
inc
faddl
mov
push
lret
mov
push
inc
pop
rorl
ret
push
loop
out
cmp
daa
xlat
std
sbb
mov
xor
pop
lret
jbe
push
lock
inc
cmp
cltd
push
adc
dec
test
std
leave
cmc
leave
add
jae
stos
js
jno
pop
sbb
std
and
cmp
push
xchg
das
outsl
cmp
mov
xchg
or
ss
int3
cmp
push
lock
test
adc
inc
ret
cli
mov
dec
pop
jl
mov
hlt
int3
fmulp
int3
popa
push
xor
in
jns
sti
shll
flds
mov
cmpl
fwait
push
lahf
xor
jecxz
shll
inc
xor
xor
sti
in
xchg
loop
push
lahf
inc
cmp
sub
or
dec
mov
add
push
adc
mov
add
mov
aas
out
lret
cmp
popa
into
fmul
pop
sub
xchg
or
mov
fmulp
xchg
add
or
mov
xchg
sub
sbb
jnp
in
add
mov
lret
pop
ds
jne
pop
incl
lahf
jne
dec
jl
sbb
jae
or
sbb
ret
test
pop
inc
shll
sahf
pop
mov
in
lahf
loopne
cltd
push
imul
ror
dec
dec
popf
adc
or
xchg
ret
add
xchg
cmpl
in
inc
mov
sbb
fucomi
add
popa
mov
rclb
leave
loope
and
adc
loop
push
pop
pop
jnp
mov
or
sbb
fisttpll
or
insb
in
testl
es
aad
jmp
cmp
pop
jae
lahf
push
stos
jns
add
inc
repnz
mov
fmul
andb
pusha
call
lea
call
call
or
stos
in
push
cmp
adc
cld
cmpb
fcomp
sbb
adc
int
adc
mov
enter
enter
cld
xchg
push
sti
lds
mov
or
fsts
int
dec
pop
fs
xchg
mov
xchg
dec
hlt
push
push
or
rcll
iret
mov
or
pop
lcall
cmc
xchg
paddd
std
mov
lret
jae
mov
xchg
mov
or
jmp
shl
mov
sbb
jbe
pop
pusha
sbb
outsb
mov
pushfw
popw
add
mov
movb
pushl
jmp
cmc
mov
rol
call
push
lea
jae
clc
stc
call
not
pusha
movl
pusha
xor
pushf
test
cmp
lea
movsbl
lea
push
lea
mov
jmp
ret
in
push
pop
outsl
inc
jg
ja
jg
cmpsl
add
fistps
es
std
je
shl
cmp
jbe
sub
fistps
std
sbb
and
add
mov
pusha
imulb
inc
inc
pop
cld
jb
in
dec
push
jb
add
insl
leave
test
cmp
test
mov
or
jmp
jne
jae
loope
loopne
jl
jmp
mov
cmp
dec
in
push
ljmp
xor
jo
inc
enter
fdivl
pop
lahf
mov
arpl
arpl
cmp
push
arpl
pop
sahf
push
shrb
jmp
mov
mov
nop
ja
mov
xchg
push
testl
es
cwtl
scas
rcrb
adc
leave
lcall
xchg
and
out
outsb
inc
xor
mov
mov
mov
push
test
push
jae
repnz
imul
push
fwait
cld
sub
test
mov
inc
sbb
push
mov
adc
cmp
setns
push
in
pop
cltd
das
inc
cmp
cltd
cmpl
cmp
movsb
aam
or
mov
inc
jbe
jo
rcll
push
sbb
rorl
hlt
mov
or
xchg
mov
popa
sub
mov
bound
dec
mov
pop
ret
pusha
xchg
push
push
test
fwait
outsb
hlt
int3
je
adc
add
ret
pop
or
into
inc
xchg
sub
sub
rolb
pop
xchg
mov
fstpt
mov
dec
out
push
xchg
cld
call
pushf
add
in
or
mov
stos
sarl
xchg
clc
mov
adc
pushw
push
jecxz
fiaddl
cmp
jecxz
sub
sbb
mov
ja
xor
push
shlb
aad
inc
fldenv
xor
mov
jecxz
dec
push
int3
in
cs
movw
lea
jne
lea
movzbw
movb
movzbw
call
test
sub
jmp
mov
call
out
out
out
push
rep
jg
xchg
mov
shll
sub
jecxz
mov
dec
cli
pushf
and
movsl
push
sbb
cmp
xchg
and
adc
mov
xlat
xchg
sbb
ja
mull
mov
xor
cmp
lret
jmp
stc
or
ds
pusha
imul
cli
inc
pop
mov
xchg
jl
mov
ret
pop
or
bswap
pushf
mov
lea
jnp
lea
movzbw
xchg
pop
jae
pop
js
pusha
push
pushf
mov
bswap
pop
push
pushf
pushl
ret
mov
push
inc
xor
inc
rcrb
clc
dec
shlb
push
push
xchg
dec
sbbb
sub
or
popf
cmpsb
add
mov
movsl
int
negl
mov
mov
pusha
call
and
ret
xchg
add
loope
adc
mov
testl
std
int3
test
ds
dec
ret
fwait
xchg
addr16
xor
add
int3
jp
repnz
call
icebp
popf
mov
cltd
gs
xchg
xchg
cmc
xor
mov
mov
loope
ss
les
push
out
int
cmpsl
inc
ret
add
adc
in
and
jge
cltd
incl
pop
pop
push
jmp
and
add
and
flds
aad
mov
das
dec
add
inc
std
hlt
lods
jecxz
movswl
pusha
push
pushf
icebp
jae
cltd
sub
pushf
lea
call
jmp
add
testl
cmp
mov
jnp
subl
mov
imul
test
sbb
loope
pop
std
shl
fisttps
iret
xchg
mov
add
testl
shl
xor
arpl
jecxz
nop
out
out
sti
ret
inc
push
divl
bound
aam
jno
repz
and
sub
rcll
jl
fistps
cmp
mov
dec
repz
jle
incb
mov
das
jecxz
inc
ja
rcr
jmp
ds
xchg
jo
xchg
xchg
xlat
xchg
rcll
mov
out
xchg
out
jmp
notl
lret
out
cmpl
add
xchg
push
xlat
sahf
and
je
jecxz
dec
inc
pushf
in
gs
cmp
in
mov
pop
cld
je
adc
or
lock
call
or
mov
xchg
in
bound
divb
call
and
jo
pop
out
or
or
push
fisttps
jge
mov
loopne
xor
mov
sub
int3
pusha
cmp
test
xchg
cs
fbstp
pop
sti
mov
sti
loopne
shll
ret
fdivrs
jecxz
test
hlt
push
icebp
ret
xchg
xchg
jmp
pop
adc
jecxz
dec
ret
imul
and
outsb
inc
xor
dec
add
in
dec
cmp
inc
xor
cmp
mulb
ljmp
shr
jns
sbb
cmpsb
rcl
orl
jne
dec
ret
hlt
mov
xor
mov
jge
jo
add
lock
andl
dec
pop
pop
adc
cld
aam
mov
sahf
cmpsl
fmul
scas
or
inc
jbe
fcomi
jecxz
and
popa
movsb
inc
add
cmp
cwtl
inc
sar
fbld
adc
jecxz
mov
inc
mov
rcl
fcomip
push
push
jg
into
cmp
add
mov
dec
cmpsl
rcll
ret
fcmovne
dec
pop
jge
mov
sub
pop
sbb
sahf
sub
add
push
insl
mov
pop
dec
arpl
rcrl
jo
pause
jg
stos
rcr
or
xor
mov
fcmovnbe
jecxz
sbb
fisubl
adc
or
sbbl
push
ja
jns
outsb
sbbl
ljmp
fbstp
loope
lret
mov
fisubs
sub
push
add
xor
cmp
push
decl
xor
pop
jne
jb
cmpsl
ret
loope
dec
popa
mov
movsb
mov
pop
rorb
lods
mov
and
inc
or
mov
cmp
add
dec
loope
ret
jb
lds
cmp
mov
pop
mov
push
mov
loop
and
inc
mov
ffreep
mov
dec
rorl
sbb
adc
push
lds
jo
mov
mov
mov
mov
sub
mov
loope
mov
mov
push
dec
mov
in
mov
fidivs
adc
mov
loope
jcxz
push
mov
jge
jecxz
cmp
or
adcb
and
repz
pusha
dec
test
push
push
jb
outsl
loop
movsl
and
loopne
fcmovbe
pusha
sub
mov
insl
pop
insb
xor
mov
xchg
mov
test
add
lea
loopew
adc
jns
pusha
push
insl
mov
dec
mov
imull
adc
push
add
adc
es
insb
push
mov
lods
popa
adc
fmull
cs
fucomip
rcrb
ret
jecxz
repz
aam
insl
xchg
jo
ret
push
addb
popa
movsb
repnz
test
or
and
repz
inc
fadds
mov
jecxz
or
inc
xchg
or
cli
loopne
rorl
sub
and
es
mov
jg
jo
fidivrl
repz
mov
jne
jecxz
sti
add
repz
mov
icebp
bound
scas
es
and
xchg
rclb
push
loopne
cli
enter
lret
cmp
je
in
iret
or
push
aaa
cmp
adc
jae
dec
sti
fidivrl
ljmp
repz
popf
sti
pop
xor
fiaddl
lock
fcmovnbe
inc
mov
fbstp
popa
sbb
adc
inc
rolb
roll
inc
lret
rolb
jo
push
iret
mov
dec
jecxz
add
andb
pop
test
repnz
cmc
sti
pop
sti
or
std
jmp
mov
jl
mov
lods
mov
out
lret
sti
repz
popf
jecxz
daa
mov
imul
mov
push
repz
ljmp
lea
pushf
cld
cld
mov
lods
jecxz
add
enter
out
cwtl
sbb
and
scas
or
jecxz
dec
push
jl
mov
add
lahf
add
ret
adc
pop
inc
adc
sti
push
icebp
mov
incl
loope
inc
mov
jg
cmp
add
mov
fimuls
rorb
dec
out
sbb
adc
xchg
xchg
mov
shll
fbstp
fnsave
mov
pop
and
sbb
pusha
sbb
dec
loope
xchg
rorb
inc
dec
aad
movsl
mov
dec
or
dec
js
sbb
adc
mov
sbb
inc
dec
and
lahf
imul
jnp
jecxz
jnp
push
jg
fcomip
add
addr16
add
sarb
mov
fdivrp
inc
xchg
aam
pushf
mov
jae
loop
cmc
mov
outsb
push
loope
cmp
jb
sti
into
inc
cmp
mov
jle
pop
xchg
scas
out
imull
lret
out
arpl
adc
arpl
aam
sarb
or
lods
xor
add
mov
add
test
sub
insb
movsb
pop
add
jne
mov
enter
xor
add
xor
out
cld
je
cmp
cmp
mov
lret
add
mov
cli
aam
mov
sarb
xor
aam
leave
cmp
xchg
gs
adc
jno
sbb
sbb
add
jecxz
lret
ret
adc
jo
push
adc
lods
test
roll
in
les
int3
xor
or
add
sub
call
and
sub
enter
loop
inc
fwait
add
insl
in
jo
stos
mov
mov
loopne
and
clc
mov
repz
data16
mov
sbbb
mov
lock
in
xor
or
ja
or
js
or
add
pop
repnz
mov
mov
pop
cmp
ss
xor
xchg
inc
jb
es
jg
add
bnd
mov
popa
js
outsl
add
mov
xorl
inc
xor
insl
ret
xchg
dec
sub
mov
int3
in
mov
mov
fildll
int3
jnp
fcmovnb
ret
xchg
shlb
push
leave
inc
inc
les
jbe
dec
dec
jle
pop
dec
bound
xor
jecxz
icebp
cmpb
xor
sbb
std
or
ret
push
or
mov
jae
hlt
sahf
bnd
mov
jno
insl
test
mov
in
inc
dec
xchg
enter
cmp
pop
mov
mov
rcrb
mov
mov
cwtl
xchg
test
xor
mov
add
and
mov
and
int3
add
jle
movsb
add
add
and
adc
adc
push
sbb
rol
sub
add
call
jnp
fsubs
nop
push
push
int
loop
stc
incb
outsl
mov
clc
cwtl
js
cld
imul
mov
xlat
loop
sarl
lock
imul
xchg
movsb
add
inc
jg
data16
adc
je
repz
push
xorl
jecxz
jg
xchg
cmp
fisttps
outsb
dec
fisttps
repz
sti
repnz
ljmp
fdivp
mov
ret
xor
or
mov
and
imul
or
enter
push
mov
and
imul
rorl
shll
adc
in
jo
inc
cld
arpl
sbb
ret
push
add
xchg
mov
mov
xor
jecxz
mov
cmpsl
mov
or
loopne
insb
adc
push
sahf
adcb
add
add
filds
out
repz
inc
xor
jae
testb
pop
pop
loop
scas
je
and
inc
sbbl
scas
scas
stos
sbb
xchg
cmpb
iret
xchg
sbbb
cli
mov
push
jae
mov
add
dec
addr16
popf
ret
test
jbe
push
mov
fwait
inc
mov
jecxz
pop
cmp
shl
jp
rcl
int
roll
jae
cli
imul
scas
inc
fldcw
jmp
out
xchg
rcrl
fiadds
adc
jae
mov
outsl
xchg
rol
sti
xchg
nop
sarb
outsb
sub
fbld
mull
dec
data16
xor
and
push
xor
repz
mov
jmp
cmovbe
jne
leave
xor
notb
fwait
dec
add
icebp
push
jmp
lret
cvtdq2ps
leave
cli
nop
loopne
pop
in
xlat
jmp
imul
xor
mov
xchg
adc
dec
out
pop
sub
jecxz
mov
mov
sti
dec
out
sti
sub
and
mov
xchg
inc
inc
ljmp
outsb
fbld
xchg
jne
dec
addl
rcll
lds
clc
add
jae
fiadds
icebp
xchg
sub
or
push
leave
dec
mov
subb
mov
iret
cltd
out
fimull
sub
mov
push
into
mov
sbb
mov
pop
pop
xor
ficoml
cmp
cltd
push
das
icebp
mov
cmpl
cmp
lret
fidivs
or
repz
jecxz
jae
mov
sahf
imul
imul
jmp
mov
repz
shlb
jnp
dec
cltd
jecxz
or
mov
mov
bound
dec
xchg
inc
xchg
lds
cmp
sub
cli
push
dec
arpl
sub
jecxz
jns
iret
repz
ljmp
lods
mov
mov
add
cmpsb
pop
dec
ljmp
mov
mov
js
call
shrl
sub
filds
shr
popa
mov
roll
jecxz
lds
cmp
push
popf
neg
mov
fnstcw
cmc
in
mov
frstor
and
data16
aas
push
aaa
icebp
lods
and
jecxz
test
shrl
pop
gs
rcrl
loope
idivl
add
fstl
mov
out
xor
repnz
push
mov
xlat
mov
or
xchg
mov
mov
ret
sarb
mov
bnd
repnz
jae
loop
mov
inc
lahf
fstl
and
jae
fldl
jnp
repnz
xorl
jg
sarl
repnz
mov
rep
loop
mov
addr16
frstor
jo
pop
loop
mov
push
mov
jae
loop
mov
inc
loopne
inc
mov
add
aaa
and
xor
inc
mov
daa
popa
leave
bnd
add
push
bound
push
add
dec
inc
cmp
xor
sub
and
sbb
lock
out
add
sti
iret
xlat
jmp
out
add
mov
cmpsl
mov
jle
scas
outsb
ss
inc
leave
push
rclb
inc
mov
popl
push
jae
ja
lahf
mov
xchg
push
aas
jnp
cmp
dec
pop
mov
inc
daa
dec
push
pop
mov
pop
push
push
add
push
jle
outsb
mov
xchg
mov
ja
mov
fwait
scas
shll
sti
jge
jg
incl
xchg
xor
sti
stos
notb
sti
mov
ret
out
push
jmp
rol
xchg
jno
xchg
out
jecxz
jecxz
fists
stos
fcmovnu
push
cmp
xchg
sbb
xlat
add
shll
int3
lret
cmpl
sti
out
ja
sarl
scas
sarl
mov
mulb
mov
lret
mov
loop
sub
pop
sti
mov
xchg
sti
push
mov
out
lahf
add
jg
push
stos
add
mov
xchg
jg
fwait
mov
sti
test
mov
sti
sbb
ja
mov
ja
roll
mov
cmpsb
jg
jb
sub
and
sti
mov
ret
jns
sbb
jae
jecxz
outsl
scas
daa
sti
push
pop
adc
pop
imul
pop
aaa
jae
sub
dec
xlat
ja
jp
arpl
adc
lret
arpl
sbb
xchg
pop
jmp
subb
add
andl
push
add
cmp
dec
adc
in
inc
fcmovnb
mov
xorl
mov
adc
sub
fstpt
add
cmp
push
and
xor
sti
mov
sti
je
push
andl
dec
jo
and
pop
add
mov
gs
lahf
pop
arpl
loop
sbb
scas
sti
jns
mov
cmp
jae
jno
cmp
pextrw
or
pop
int
jae
jno
das
and
ret
cli
push
ja
lret
test
xchg
mov
out
jg
fwait
repnz
sti
mulb
xchg
in
clc
ljmp
insl
jbe
loop
lahf
sti
popa
faddp
into
sti
sbb
rcr
add
fwait
insl
sti
jo
push
ja
cli
add
ja
sti
rolb
cli
jmp
lahf
lret
sti
shlb
mov
jb
or
xor
pop
mov
pop
push
dec
sti
xchg
mov
in
scas
cmp
jg
hlt
lret
jg
xchg
sub
fwait
pusha
mov
add
mov
inc
ret
stos
sarb
sahf
mov
sti
lcall
jb
push
arpl
lahf
xchg
rorb
ret
dec
roll
sti
mov
daa
pop
xchg
shl
sbb
pop
sti
fwait
jle
scas
sti
mov
cli
jp
mov
add
push
sti
outsb
jb
das
and
cli
sub
outsb
add
shll
rorb
push
dec
ds
xchg
repz
xor
repz
into
jecxz
repz
fcmovnu
push
sti
push
fistl
jecxz
dec
xor
sti
outsl
std
dec
adc
inc
add
push
sbb
out
jmp
fbstp
cs
cmp
sti
pop
sub
lret
lock
and
push
mov
sbb
aas
loopne
mov
in
sahf
daa
mov
push
mov
sti
xor
sti
jo
and
mov
stos
cmp
daa
push
lahf
sbb
ror
jg
std
adc
adc
xchg
sti
cmc
inc
jmp
fwait
sti
sahf
mov
jecxz
mov
sti
ja
in
add
fmuls
lahf
lahf
in
arpl
sti
loopne
sahf
pop
xchg
pop
fnsave
ja
cli
loope
icebp
jmp
fstpt
sti
ljmp
cli
jg
aad
shll
int
mov
int
xchg
jne
adc
jmp
sti
fnstcw
lahf
shr
push
les
loopne
mov
outsl
cmp
xchg
mov
lods
push
lret
lods
inc
sti
loopne
sub
cmp
lahf
test
jg
jo
dec
lret
movsl
add
ljmp
inc
cmp
rcrl
sti
fistl
fldpi
jg
sbb
fstpt
lea
fwait
mov
test
mov
or
add
jns
andl
mov
lahf
lahf
jecxz
mov
pop
sti
shrl
insl
cmpl
popa
push
out
push
in
pop
add
lods
push
sti
cmp
aas
adc
test
jnp
pop
add
jmp
cltd
push
scas
sub
daa
dec
arpl
fsubs
sti
nop
out
jg
add
roll
cmp
sti
cmp
sbb
xor
xchg
lahf
jg
xor
outsl
shl
sub
gs
test
shll
pop
arpl
and
ffreep
out
pop
call
das
sti
and
jp
jg
cli
xchg
in
add
adc
xchg
repz
roll
loopne
adc
add
mov
sti
loopne
jo
loop
sahf
testl
outsb
add
add
in
insb
daa
and
clc
pop
add
stos
rorl
lock
in
pop
call
sti
cmp
jg
sbb
sti
cld
aam
rorb
cli
push
daa
int3
and
sti
in
enter
repz
lret
pop
shl
outsl
sti
idivb
clc
mov
inc
mov
mov
push
out
aas
std
lods
adc
addr16
imul
daa
test
mov
popa
movsb
jp
iret
inc
mov
pushf
mov
fwait
cmp
ja
xchg
lahf
sub
inc
jg
shll
pop
fisttpll
cmp
cwtl
add
das
jg
jg
xchg
pop
xchg
outsb
iret
fwait
cmp
mov
dec
nop
and
mov
idivl
bound
loop
xchg
test
pop
sti
ja
incb
xchg
sti
int
scas
xchg
sti
ja
jo
pop
mov
add
cmp
add
lods
sub
jl
add
jmp
cmp
jecxz
iret
in
sti
ds
xchg
arpl
pop
sti
sahf
daa
fwait
in
push
add
dec
push
add
outsb
inc
ja
xor
imul
out
ja
lahf
cmp
das
sti
scas
sub
cmp
lock
add
mov
arpl
cmp
sub
pop
sti
rorl
jmp
xchg
fsincos
cli
fistpll
and
push
fistl
xchg
inc
sti
rcrl
xchg
sti
mov
sti
rcrb
pop
jecxz
sbb
sar
sub
inc
adc
mov
push
push
vxorpd
inc
lahf
xlat
loopne
test
jg
pushf
pop
mov
lock
cmp
pop
push
das
sti
xchg
pop
jecxz
add
cmpsl
jg
cmp
push
iret
mov
mov
cmp
adc
sti
sahf
lahf
jecxz
call
in
sti
mov
and
inc
mov
std
cmp
xor
int3
ret
fcmovnu
and
xlat
or
sti
rcl
outsl
iret
jecxz
push
sti
lret
lahf
sti
mov
std
shll
sti
sub
std
iret
sti
mov
ret
jns
mov
inc
mov
int3
mov
lret
sti
loopne
mov
addr16
std
lret
pop
imul
dec
push
xchg
daa
stos
xchg
imul
mov
pop
sti
sahf
inc
fstpt
lahf
mov
cmp
sti
cli
stos
jg
jmp
out
xchg
xchg
sti
cmp
jg
inc
std
cmp
sti
jne
or
insl
sti
cmpl
test
aas
daa
jg
fsincos
sub
adc
arpl
clc
jnp
sbb
cmp
scas
xchg
ja
sub
sti
fnstenv
pushf
outsl
mov
pop
pop
sti
ret
insl
stos
jp
addr16
popf
repz
sti
sarl
mov
jg
xchg
pop
std
pop
aam
fwait
jae
cmp
sti
call
test
addl
xchg
dec
out
jp
jg
sti
inc
aas
loop
xchg
push
sti
fwait
icebp
inc
cmp
mov
adc
aas
aaa
mov
sti
jb
push
ja
pushf
sub
das
mov
sti
mov
dec
daa
sbb
arpl
ljmp
rorl
subl
pop
std
mov
adc
pop
popf
repz
or
sti
outsb
pop
jae
cmp
cmp
jle
std
loop
jmp
sub
in
mulb
arpl
pop
repnz
jecxz
sti
andl
out
jae
sti
loopne
mov
das
int
bnd
sti
in
inc
sti
daa
sbb
cmpsl
add
xchg
fistl
jg
sub
sub
out
in
ja
test
cmpsl
sub
das
jnp
pushl
jp
mov
push
rcrl
rclb
dec
sub
stc
scas
ja
pop
mov
xchg
fwait
movl
loop
addr16
add
repz
mov
stos
xor
jmp
addr16
daa
dec
lahf
xchg
xlat
jg
shlb
dec
or
ret
mov
repnz
mov
cld
push
xlat
ja
leave
into
std
jmp
daa
mov
aam
insb
and
or
iret
jmp
test
sub
mov
das
adc
jmp
inc
mov
fists
sti
xchg
out
and
jmp
sub
arpl
std
pop
out
push
mov
arpl
jnp
rcrl
sbb
stc
mov
mov
lret
xor
mov
das
sti
clc
mov
xchg
cmp
or
insb
cmp
loope
xchg
rolb
cmp
iret
cmp
arpl
mov
loopne
imul
cli
jp
rolb
cmp
xchg
push
xlat
pop
or
mov
inc
jo
addl
xor
cmc
dec
arpl
mov
lahf
jmp
rol
adc
push
negl
xchg
arpl
imul
iret
pop
jae
and
mov
xchg
ret
inc
rcrb
daa
pop
arpl
cwtl
xor
loope
lock
jbe
and
cmpsl
mov
push
mov
loope
add
jmp
inc
mov
jns
test
and
das
pusha
cmp
add
fwait
mov
fsqrt
jmp
pusha
fildl
xor
dec
mov
inc
mov
vphaddbq
cmp
mov
sbb
pusha
jns
jp
jae
daa
add
ret
inc
scas
and
fidivrs
jp
adc
jae
dec
mov
pop
jno
dec
arpl
sar
cwtl
mov
and
lret
pop
jmp
mov
shll
inc
cmp
mov
pop
fisubrl
add
call
mov
stos
testb
subb
icebp
outsl
jecxz
mov
cmpsb
std
inc
pop
shll
xchg
push
imul
sti
icebp
arpl
mov
sahf
adc
lods
pop
jns
xor
outsl
adc
cli
fstps
jg
pop
fwait
xor
lcall
mov
cmp
cmp
add
mov
push
mov
add
jecxz
jae
mov
inc
outsl
in
cwtl
xchg
fisubs
popa
push
icebp
addl
mov
and
mov
ret
aas
fstp
xor
and
xchg
sbb
jno
or
imul
mov
and
push
pusha
idivb
inc
xchg
std
sbbb
pop
mov
push
daa
jp
jmp
xor
subl
int3
ret
pop
xor
cmc
xorl
shl
imul
jb
loopne
adcl
mov
jo
cmpl
addl
shrl
dec
aas
mov
pop
ljmpw
scas
add
jae
xor
lcall
xchg
std
mov
mov
lahf
imul
mov
jae
cmp
ret
jno
mov
mov
repz
out
jg
rorb
fiadds
aas
xchg
mov
inc
and
loop
xchg
fwait
sahf
aas
push
scas
and
cmp
mov
sbb
sbb
adc
mov
dec
mov
pop
out
sti
jp
mov
repz
mov
mov
rcl
jae
das
jno
mov
mov
cmp
jg
mov
xchg
dec
mov
push
or
push
push
stc
jmp
fistps
mov
inc
fmuls
fwait
mov
das
sarb
push
mov
fisttpl
rcll
repz
outsl
loop
adc
popa
sbbl
cwtl
dec
jg
call
sti
pop
loop
decl
out
push
outsl
sti
inc
cmp
mov
mov
hlt
cwtl
mov
fcmovnb
pusha
icebp
ds
in
rcr
jecxz
mov
lock
js
iret
shll
in
popa
xchg
ret
ss
loopne
xor
pushf
fdivl
aaa
cs
jcxz
fninit
rcll
rcrl
scas
mov
and
fwait
repz
push
repz
shll
pop
dec
mov
pop
ret
add
in
rcll
lahf
sub
scas
mov
mov
das
out
mov
mov
sub
lcall
clc
mov
mov
repz
jns
nop
xor
xor
std
cmp
mov
add
shlb
xor
mov
icebp
inc
adc
lret
or
mov
mov
lock
push
std
adc
aaa
out
or
push
adc
dec
jb
out
stc
xchg
mov
mov
fdivp
sbb
bound
mov
sub
imul
addb
push
shl
xchg
mov
aam
stos
pop
lock
cwtl
repz
orl
mov
roll
aad
leave
mov
mov
loopne
in
mov
cli
and
xlat
mov
mov
ret
lcall
jmp
lcall
pop
arpl
cwtl
in
rcrb
sub
xchg
xchg
popa
mov
pop
and
imul
and
repz
ret
mov
mov
add
mov
xor
cmp
jae
fstpl
xlat
fnstcw
cmp
mov
mov
jno
cmc
icebp
out
ret
test
jle
pop
push
incb
mov
test
ljmp
jo
xor
nop
mov
arpl
sub
pusha
das
cwtl
and
xchg
jmp
fbld
sub
sub
push
sub
cltd
popa
pop
cmp
mov
xorl
push
lret
jae
mov
mov
dec
push
xor
fisttps
xor
std
sti
xor
mov
jecxz
mov
mov
jnp
pop
iret
arpl
aas
call
aad
insl
jns
mov
xlat
jecxz
jnp
mov
xchg
mov
push
mov
inc
mov
sub
mov
std
or
das
icebp
loopne
push
addr16
aaa
loope
imul
lcall
xlat
imul
inc
cmpsl
int
and
stc
stc
jp
jp
ret
jmp
repz
stc
test
nop
fcomip
in
sbb
xchg
mov
cmc
mov
inc
jbe
jp
ror
std
inc
add
subl
xchg
cli
xor
enter
and
std
xchg
xor
clc
fwait
sub
xor
jp
subb
fsubl
mov
mov
xor
repz
inc
fmull
stos
nop
xlat
sub
outsl
xlat
dec
mov
fwait
mov
pop
jmp
call
repz
test
arpl
sbb
jp
mov
mov
inc
mov
adcb
rclb
fsts
mov
mov
out
test
inc
lock
sbb
xor
push
mov
das
fucomi
xchg
in
xchg
popa
pop
mov
mov
imul
dec
imul
iret
mov
pop
imul
test
ret
dec
aas
dec
add
rorl
scas
mov
out
xchg
jg
pop
in
xchg
jmp
jle
jle
pop
mov
rcll
push
rcrl
arpl
add
shrb
jle
por
icebp
scas
loopne
sub
jae
pop
aaa
xchg
jno
xchg
jb
push
stc
sub
inc
mov
add
jmp
xchg
sub
pop
clc
cltd
adc
bound
cltd
cmp
pop
shl
mov
imull
sub
add
add
fists
mov
mov
add
mov
xchg
inc
mov
out
cwtl
cmpsl
lods
adc
add
and
pop
icebp
inc
jmp
fneni(8087
clc
pop
fisttps
jnp
or
jnp
int
loop
pop
jmp
xchg
sbbb
insl
sub
jmp
sbb
xchg
cmp
lret
add
arpl
xor
push
mov
filds
ja
xorl
add
mov
stc
pop
out
imul
sarl
inc
ret
mov
xor
icebp
cmp
stos
mov
mov
pop
mull
fwait
pusha
shll
push
mov
mov
jmp
and
mov
cmp
and
shl
adc
adcl
subl
mov
jno
push
jge
rep
icebp
fwait
inc
inc
sti
aam
xchg
imull
jecxz
ret
jns
std
push
inc
popa
xchg
cwtl
cmp
aaa
lock
jne
xchg
icebp
fidivrl
cli
cltd
push
mov
and
or
dec
cmpsl
fcmovnbe
mov
push
aad
fistpl
icebp
mov
adc
jp
stc
aas
push
xor
mov
cmpsl
xchg
test
fwait
jno
loope
mov
clc
adc
dec
dec
iret
push
mov
sbb
sti
jg
push
rcll
scas
leave
aas
cmp
sub
xor
int
jecxz
lret
insl
std
cmp
pusha
gs
jno
addl
mov
arpl
popa
clc
popa
pop
std
jb
stc
iret
lahf
pop
ret
bound
adc
sarl
sub
and
xor
pop
xchg
pop
jg
adc
mov
jb
cwtl
and
push
push
mov
mov
leave
testl
cltd
xchg
sbb
dec
addr16
inc
mov
push
jo
jecxz
decl
mov
repz
push
mov
sahf
sub
xor
out
inc
insb
xchg
pop
loope
mov
outsl
clc
mov
cmp
iret
repz
repz
stc
push
mov
nop
mov
push
iret
push
jecxz
pop
repz
mov
shll
or
cwtl
xchg
push
rclb
shl
pop
ja
fistl
jmp
mov
mov
add
pop
dec
loopne
fwait
jecxz
lahf
rcll
aas
inc
jg
out
inc
cmpsb
xor
mov
lret
in
lock
fidivrl
rorb
and
repnz
mov
fistpl
testl
dec
dec
push
xchg
shrb
enter
ret
lcall
std
mov
into
pop
imul
xor
sub
cltd
test
xor
xchg
out
jbe
sub
pop
jecxz
cltd
cld
inc
std
jle
repnz
hlt
mov
clc
cmp
ja
add
ret
sub
movsl
xlat
xchg
inc
push
jge
jecxz
mov
pop
mov
inc
push
aas
test
mov
rclb
mov
xor
roll
xchg
mov
or
fstpt
xlat
testl
sahf
adcl
lea
scas
movsl
js
iret
stc
push
jle
out
mov
imul
sub
sbb
jns
jb
loop
ret
jae
xchg
mov
push
xchg
cli
fstps
rorl
aam
lret
jp
fimull
sub
pop
sub
mov
and
push
cmp
cmp
ret
jno
rcrl
push
xchg
mov
pop
repz
cmp
pop
neg
or
inc
pop
add
das
pop
decb
xchg
std
outsl
sbb
movsl
out
pop
xchg
lret
mov
adc
addr16
scas
and
divb
in
sbb
sahf
xchg
jp
imul
jae
add
xchg
sbbl
or
fwait
adc
mov
mov
xchg
inc
jae
addb
xchg
cltd
push
subb
fldcw
mov
mov
dec
xchg
mov
ja
ljmp
loop
fwait
ret
push
lds
mov
inc
shrl
nop
mov
xchg
loop
stos
call
push
ret
call
mov
stc
cli
ret
cmp
add
nop
xchg
dec
icebp
test
sti
outsl
jle
sub
dec
mov
pop
xor
ficompl
clc
and
push
mov
jmp
or
lock
stc
fistpl
inc
bound
iret
pop
push
cli
fwait
cli
mov
icebp
sarl
clc
jg
das
mov
addl
rclb
xor
loope
ret
enter
sub
lock
ret
incl
icebp
mov
xchg
mov
mov
shll
addr16
hlt
add
lcall
adc
xchg
stos
das
loop
mov
xchg
pop
mov
in
pop
adc
or
stc
fidivl
cli
add
cld
jecxz
das
adc
imul
popf
mov
xchg
add
xchg
daa
mov
adcl
dec
scas
iret
dec
js
imul
jg
jle
fstpt
jle
dec
mov
cli
dec
cli
mov
roll
shrb
mov
sub
inc
js
mov
mov
loope
rolb
mov
imul
popa
repnz
adc
mov
popa
ret
mov
mov
xchg
and
push
icebp
test
jno
mov
mov
mov
inc
dec
mov
in
repnz
stos
clc
ror
pop
rcr
mov
leave
xchg
mov
dec
repnz
cmp
mov
and
orb
dec
outsb
xlat
xor
mov
std
xor
fists
sbb
mov
inc
or
stc
push
arpl
shlb
mov
mov
sub
imul
ret
fbstp
and
mov
nop
sbb
lock
cmp
notl
push
add
add
jb
bswap
aam
rcl
push
xor
repnz
inc
out
jo
shrb
or
push
arpl
cmp
out
fistpll
pop
arpl
and
rcrl
subb
sbb
jae
int3
cmp
insl
mov
in
jae
dec
sub
enter
in
and
jno
jecxz
adcb
rcr
gs
mov
jg
outsb
inc
arpl
bound
arpl
bnd
jno
mov
adc
arpl
mov
sti
adc
mov
jo
push
test
cmpsb
and
lea
jae
xchg
and
fcmove
shlb
icebp
rcll
cld
xor
enter
adc
popa
jae
dec
and
imul
out
arpl
cltd
inc
mov
push
lods
fdivrs
mov
xchg
add
mov
imull
fildll
and
shrb
repz
adc
xorb
ret
outsl
fcoms
lcall
mov
xor
xlat
mov
jle
ds
push
lahf
xchg
shrl
rorb
sbb
cmc
popa
call
lret
stos
clc
mov
div
cmpsl
test
mov
cmp
int
pop
jmp
orl
rorl
insl
inc
and
jo
and
dec
push
fbstp
jmp
jle
mov
dec
repz
movsb
adc
xlat
lock
mov
pop
and
iret
sub
mov
fwait
sub
push
rcll
xchg
or
jmp
imul
iret
arpl
mov
mov
in
pop
cmpb
repz
popa
inc
pop
incb
mov
mov
push
mov
repnz
jp
test
repnz
mov
sbb
mov
clc
cmpsl
mov
xchg
add
xchg
jo
mov
jge
fldt
mov
in
adc
mov
sarb
clc
dec
iret
xor
sub
scas
or
mov
mov
test
loop
mov
sub
mov
pop
sub
cmpsl
mov
xchg
dec
xchg
mov
dec
xchg
xlat
inc
loope
xor
pop
mov
jge
addl
sbb
push
subb
test
das
lods
inc
xor
icebp
jecxz
push
pop
loop
mov
lret
inc
int3
lods
mov
lahf
repz
push
psubusw
rcrl
stos
mov
xor
inc
iret
cwtl
std
fistpll
mov
fmull
pop
xchg
jp
jnp
xchg
iret
bnd
pop
ror
imul
das
lret
pop
push
push
add
push
shr
pop
adc
jecxz
jno
and
mov
std
aas
lret
arpl
jo
push
fstpt
pusha
andl
jecxz
push
stos
lret
lret
lcall
sbb
sub
xchg
jp
xlat
adc
and
inc
pop
aad
dec
xor
cmp
shlb
cltd
and
lods
in
inc
pop
fildll
xchg
sub
mov
xor
fdivs
jp
inc
dec
sub
stos
adc
xor
inc
adc
mov
inc
add
cmp
fdivrs
mov
outsl
jno
sub
mov
mov
imul
sti
jne
fldt
add
sbb
pop
jno
add
ja
loope
lods
lcall
push
jg
and
xchg
inc
cmp
int3
pusha
arpl
or
adc
pop
mov
ret
hlt
fnstcw
adc
mov
stos
xchg
dec
xor
jae
add
cwtl
push
and
and
in
icebp
aas
in
cmp
pop
stos
push
icebp
jae
mov
cli
push
fists
loope
sbb
std
icebp
mov
inc
adc
xlat
xchg
out
dec
out
sub
fdivrs
call
mov
aas
andl
rcrb
lods
push
xlat
enter
jl
fbld
notb
lods
mov
xchg
add
xchg
mov
and
jge
xchg
jg
imul
loopne
test
jnp
cwtl
jecxz
push
stos
pop
outsl
sub
sub
jmp
loop
fiaddl
daa
jmp
add
xchg
fwait
mov
jb
xchg
adc
popa
xor
cmp
in
add
jae
test
cmp
jmp
cmpsl
test
cmp
jmp
and
cwtl
orl
xor
pop
jecxz
add
pop
mov
jmp
outsl
adc
aaa
pop
das
sub
sub
and
jecxz
sub
sub
mov
ja
sbbl
xchg
jmp
xchg
push
fdivrs
inc
or
adc
out
pop
jnp
pop
jns
jmp
push
cmp
iret
jge
jmp
xchg
aad
xor
mov
outsl
int
aas
cltd
sbb
fdivs
jnp
lahf
loope
test
repz
stos
push
ficoms
push
jmp
jg
mov
lcall
sub
rol
xor
outsl
rep
rol
scas
ja
pop
iret
xchg
xorl
das
adcl
jno
jp
lods
jmp
hlt
ljmp
stos
cli
ja
or
test
dec
shrl
iret
dec
iret
jns
cmp
iret
mov
xor
cwtl
sub
jmp
ljmp
jp
jae
daa
arpl
cmp
jmp
jge
out
loopne
inc
xor
jmp
xchg
mov
icebp
jmp
ljmp
jecxz
xchg
lods
daa
lret
mov
pop
mov
stc
rorl
jmp
and
inc
cwtl
jb
or
sub
pop
icebp
icebp
dec
mov
das
fnstcw
repnz
mov
movsl
mov
ret
and
incb
mov
jmp
or
xlat
popf
or
shr
mov
iret
jl
jmp
mov
cmp
inc
sbb
clc
pop
pop
test
mov
daa
cmpsl
into
ret
mov
clc
test
popa
sar
inc
jmp
ror
fwait
cmpsl
mov
jmp
lahf
pop
xchg
mov
mov
rcrl
pop
in
jmp
repz
push
jnp
jnp
cli
jg
fwait
add
in
ja
cmpl
das
mov
push
iret
ja
bound
out
sbb
jecxz
push
jmp
adc
or
popa
popa
out
xchg
sbb
lock
cmp
inc
jbe
pop
iret
addr16
mov
dec
sbb
adc
sub
repz
xlat
push
jnp
xchg
insb
mov
test
ja
cli
mov
lret
rcrl
mov
mov
iret
push
testl
aas
aad
icebp
mov
inc
rorl
loop
mov
sbb
push
mov
mov
sbbl
jmp
sti
repnz
or
sbb
adc
jecxz
push
inc
mov
mov
gs
adc
dec
xchg
inc
iret
js
lahf
dec
jg
xchg
shll
adc
jmp
ret
jnp
dec
sub
xor
cli
xor
shll
mov
cli
not
test
sub
fistpll
iret
mov
mov
cmpsl
sub
add
mov
pop
pop
jle
jecxz
dec
cmp
jg
jnp
xor
shl
das
daa
jns
cmp
in
jmp
mov
mov
adc
cmp
outsl
jnp
test
xchg
icebp
or
mov
dec
loopw
adc
jne
sub
shrl
cmpl
in
fdivs
jmp
sub
xor
jnp
pop
jecxz
jmp
sarl
aas
out
fwait
push
jmp
lret
inc
jecxz
sbb
mov
inc
imul
popf
fldcw
push
ret
mov
pop
xchg
adc
fnsave
mov
divb
jecxz
mov
insl
shrl
jae
push
mov
xchg
jb
adc
gs
cmp
or
mov
fdiv
jne
mov
icebp
test
or
pop
jmp
mov
mov
insl
iret
mov
dec
xchg
push
scas
into
cwtl
adc
jnp
mov
fld
ret
mov
shll
xor
jmp
mulb
xchg
adcl
mov
out
fisubrs
shrb
scas
outsl
sbb
mov
xchg
loope
mov
pusha
daa
jne
mov
dec
fsubl
ret
pop
dec
cmp
mov
out
xor
mov
pop
subl
push
pop
stos
adc
out
or
sbb
faddp
jb
loopne
mov
pop
jae
mov
in
lret
jecxz
jae
stos
gs
xchg
iret
jle
jp
lret
fisttpl
mov
or
pop
mov
icebp
mov
scas
daa
and
sbbb
inc
addr16
dec
loope
mov
jnp
rcl
imul
xor
loope
mov
push
mov
mov
inc
sti
jecxz
sbb
and
fnop
cld
mov
mov
sbb
arpl
aas
rorl
arpl
cltd
outsl
mov
rclb
sub
arpl
jae
outsb
js
xorl
jmp
push
xchg
loop
jge
dec
jp
jp
incl
stos
pop
cmp
mov
jmp
inc
mov
mov
cmp
jmp
pop
cmp
cltd
jp
iret
out
repz
mov
leave
pop
pushf
ret
inc
sub
xor
mov
popa
lahf
icebp
stc
and
icebp
and
arpl
imul
mov
mov
xor
fcmovb
cmp
ja
adc
sbb
xor
sub
aam
sti
repnz
mov
mov
jg
ja
dec
das
sbb
stos
rorl
nop
dec
jno
mov
xor
repz
rcll
dec
push
rcrl
in
stos
sbb
stos
pusha
loopne
add
icebp
mov
jae
mov
enter
lods
push
arpl
dec
movsl
pop
mov
cmp
imul
xor
mov
loop
iret
adc
adc
mov
fldcw
loopne
cs
jle
lahf
jnp
dec
mov
repz
aad
and
inc
and
and
lret
mov
popa
and
cs
es
mov
daa
pop
jmp
sub
in
cmc
mov
xchg
sarb
jbe
sbb
loop
mov
bound
jmp
push
fcomip
dec
xor
jb
push
dec
loop
mov
jbe
fistps
mov
lods
test
and
mov
lret
lcall
orl
divl
push
adc
clc
fs
and
xchg
orl
pop
sub
inc
adc
outsl
mov
adc
ret
out
fmull
xor
xchg
jmp
cmp
cmp
fbld
movsb
jns
js
rcl
ret
or
lret
roll
or
xor
cltd
mov
adc
call
fwait
add
shlb
mov
loop
hlt
mov
movsl
fisttps
mov
fdivrl
xor
stos
pop
ror
fisubs
loop
xchg
push
xchg
adc
shll
xchg
push
mov
xchg
xchg
xor
jge
pop
in
movsl
cmp
icebp
icebp
lea
into
jmp
sbb
mov
add
arpl
jae
xchg
jnp
and
cmpb
mov
inc
popa
fnsave
xorl
jnp
repnz
mov
and
andb
add
and
mov
xor
jnp
repnz
push
mov
loope
adc
repnz
rcr
adc
shl
adc
repnz
frstor
mov
jecxz
fcomip
cli
neg
repnz
out
loop
fdivp
fcmovbe
fst
mov
mov
mov
scas
jae
loop
mov
lcall
leavew
dec
mov
or
xor
inc
mov
repnz
cs
and
xor
out
js
mov
jnp
cmpsl
loopne
out
cmp
jnp
pop
cmpsl
loope
out
cmp
adc
jo
jnp
cmpsl
loopne
out
popf
sti
dec
fisttps
xor
fimuls
mov
xor
push
mov
pop
push
inc
ljmp
lds
and
lds
out
loopne
sbb
xchg
jo
ret
clc
mov
push
inc
gs
dec
mov
and
movsl
push
in
clc
mov
roll
adc
jg
in
pop
cmp
and
daa
xchg
sub
out
ja
mov
dec
repz
xchg
cli
enter
or
sub
dec
cli
imul
cmp
sahf
pop
mov
stos
ja
mov
mov
xchg
leave
out
ja
mov
fidivrl
ficomps
loop
out
out
ja
mov
cli
loopne
divl
enter
in
dec
imul
mov
lret
cli
into
adc
mov
jmp
scas
mov
adc
pop
ljmp
xchg
cmpsl
out
push
out
ljmp
out
imul
cmpsl
out
fdivs
imul
icebp
xor
sbb
xchg
dec
inc
xchg
outsb
jnp
mov
inc
push
and
mov
xor
outsl
popa
jnp
adc
dec
sarl
rcr
jae
loop
mov
pop
loop
fstl
out
pop
push
jb
or
mov
rcl
xor
fadd
add
mull
ret
or
mov
loop
sbb
fstpl
mov
loopne
and
repnz
mov
xor
xor
fnstsw
mov
js
inc
mov
jae
repnz
mov
push
push
frstor
loop
mov
inc
pop
repnz
jae
loop
mov
je
fnstsw
adc
loop
mov
jnp
repnz
mov
adc
nop
mov
mov
fstl
mov
mov
adcl
repnz
jno
mov
shl
add
mov
loop
mov
enter
mov
repz
jnp
repnz
cmpl
call
repnz
hlt
or
xor
jg
cmp
loop
loope
imul
rcr
cmpsl
loop
adc
xchg
fstpl
loop
mov
sub
jae
repnz
outsl
jecxz
mov
push
cmp
icebp
mov
inc
mov
ljmp
push
pop
mov
and
xor
adc
dec
jnp
add
inc
addr16
jge
ja
fistl
aam
popa
xor
rol
and
mov
push
cmp
mov
rol
sbb
in
pop
add
or
jp
not
sub
xchg
rcrb
roll
or
fwait
or
mov
mov
mov
les
xor
cmpb
xor
test
sub
shlb
cmp
mov
cmp
icebp
cmc
jle
add
in
test
icebp
movsb
test
mov
sub
mov
rclb
mov
pop
insl
cli
lahf
sbbl
fsubrl
cltd
or
rorl
lret
cli
or
jae
mov
arpl
mov
loopne
shll
fnstenv
lods
stos
loop
mov
fistps
push
add
xor
loop
and
sbb
jno
jb
jmp
les
push
mov
sbb
rclb
cli
push
rcr
cmp
shrb
icebp
movsb
je
fildl
mov
jg
sub
xor
dec
mov
mov
mov
ja
arpl
mov
push
adc
jne
loopne
loop
xorl
mov
inc
sub
or
add
mov
insl
pop
inc
jnp
sbb
rolb
push
mov
pop
jns
andb
rcr
cli
cmp
xor
stos
mov
mov
add
rclb
lret
cmp
mov
aam
ret
mov
ljmp
cmp
dec
flds
sbb
add
fwait
loop
jg
fsubp
sbb
ja
loop
loopne
mov
add
sub
add
outsb
stos
push
or
sti
or
loop
shrl
fidivrs
shll
jg
mov
pop
repnz
in
mov
mov
hlt
adc
jne
das
inc
mov
mov
inc
call
in
std
popa
sbb
inc
jne
call
sub
jns
rcll
rclb
enter
pop
and
lea
adc
dec
repnz
push
ror
inc
adc
push
sti
mov
and
cmp
sti
adc
ret
jb
in
addl
mov
lret
jno
loopne
push
cmpsb
jg
cmpl
enter
cmp
sbb
stos
push
je
inc
mov
mov
mov
aas
sahf
mov
in
fnop
lock
std
adc
jecxz
lock
pop
sbb
jp
insb
int3
adc
cmp
inc
xchg
data16
lret
mov
lcall
mov
mov
jb
movsl
push
mov
movsb
and
xchg
cli
push
add
cli
mov
jno
cmp
and
clc
and
xchg
adc
mov
pop
dec
loope
negb
inc
push
ljmp
cmp
pop
jbe
pop
jns
mov
adc
mov
sbbb
push
dec
lea
out
jecxz
mov
pop
mov
add
xor
andb
fsubp
jg
nop
scas
mov
mov
outsl
cli
imul
jge
decb
mov
mov
adc
mov
sbbb
rcrl
ds
loopne
xchg
push
roll
fadd
cmp
out
mov
pop
clc
inc
scas
or
popf
adc
sar
cmp
sub
mov
push
in
adc
and
shll
icebp
rorl
call
xor
jb
dec
jg
lcall
repnz
jae
loop
mov
shll
fbstp
xchg
mov
jnp
and
inc
pusha
loope
aam
bound
mov
jg
sub
jecxz
push
imul
jnp
sbb
dec
icebp
jecxz
xlat
cli
ret
xor
and
lcall
or
pop
bound
jno
out
pop
and
add
stos
ss
cmpb
inc
movnti
bound
xchg
clc
sbb
fidivrs
cmp
sti
cmp
js
aas
sub
loopne
jecxz
mov
jecxz
outsb
lods
and
push
inc
ret
mov
outsb
repz
rcll
loope
add
mov
and
push
inc
ret
cmc
stc
bound
repz
ja
jecxz
mov
loop
mov
bnd
mov
sbb
inc
mov
arpl
popa
repnz
push
sti
jmp
mov
ret
xor
and
jg
sbbl
ret
add
inc
mov
xor
mov
sbb
or
shl
xor
in
add
icebp
in
sar
rcr
adcl
movsb
clc
loopne
mov
jecxz
lock
inc
lds
clc
test
add
mov
mov
and
adc
bound
add
shl
ret
mov
xor
imul
jmp
in
loop
nop
mov
loopne
loopne
jg
fcomi
push
add
jno
inc
data16
bound
cmpsb
jle
or
push
inc
jecxz
fdivs
and
and
inc
outsb
dec
jmp
movsl
push
movsl
push
inc
test
ret
into
adc
push
push
xor
push
testl
pop
xchg
cmp
mov
divb
loope
push
orb
outsl
mov
fdivrs
xchg
xor
push
cmp
movsb
andb
icebp
out
add
and
out
ficoml
ljmp
mov
xor
mov
mov
ffreep
push
sahf
loop
jg
sbb
xor
jb
mov
sti
ret
nop
jecxz
push
inc
pop
arpl
bound
and
mov
pusha
jg
loope
loopne
mov
jno
aas
sti
mov
aaa
fdivl
xor
imul
xchg
push
outsb
sarl
dec
mov
jnp
sub
outsb
inc
jg
dec
mov
jae
cmp
mov
lock
xchg
out
ja
mov
fisttps
aas
sarb
mov
rcrl
aad
adc
dec
repz
jne
cmp
and
repnz
repz
subl
mov
lret
fists
push
out
and
cwtl
sbb
call
inc
add
call
xchg
and
pop
sarb
loop
idivb
movsb
mov
and
xor
cmp
sub
lret
mov
jle
sti
scas
mov
and
cmp
xchg
das
lcall
mov
sbb
jmp
push
pop
adc
fs
insl
fnsave
enter
iret
les
sbb
fs
sbb
hlt
push
and
push
shll
add
xor
mov
fs
lods
push
mov
inc
or
ror
test
cmp
enter
sbb
sbb
inc
add
pop
push
outsb
mov
rorb
mov
lock
add
dec
fsub
and
adc
inc
inc
xor
mov
jmp
push
push
pop
adc
push
les
and
xchg
or
sub
cwtl
pop
fistl
pop
push
lret
insb
cmp
ljmp
outsb
stos
loop
mov
loop
cmp
xor
push
xchg
pop
mov
hlt
mov
ret
sub
ret
mov
cli
inc
data16
adc
icebp
xchg
pop
sbb
sub
lds
inc
jb
xor
mov
inc
inc
sbb
cmp
push
loope
xor
jae
push
stos
sti
adc
or
sar
clc
mov
cld
dec
cmp
icebp
mov
test
push
dec
jnp
xor
mov
icebp
loope
jmp
sti
imul
imul
cmp
iret
cli
add
mov
xchg
fildl
test
fwait
xchg
jae
punpckldq
and
jge
adc
jns
sbb
aam
aad
push
cltd
mov
and
enter
and
icebp
insl
out
jp
mov
imul
sub
pop
pop
inc
push
mov
dec
xor
inc
insl
test
add
jge
jno
stc
lcall
fidivs
or
jns
adc
shl
and
mov
imul
fcomip
test
call
mov
aaa
lcall
push
pop
repz
inc
mov
repz
and
sti
int3
pop
cmp
mov
pop
int3
fsubs
xor
and
nop
arpl
mov
sub
and
xor
fbld
idivb
ljmp
jl
adc
sbb
mov
sub
add
cs
fbld
mov
inc
lahf
stos
jno
dec
push
pop
sti
cmp
add
loopne
jg
inc
sbb
stc
mov
call
hlt
add
cmpb
repnz
ret
sub
loope
movsb
mov
repz
sbb
test
rcrl
xor
mov
fstps
sbb
pop
sbb
cli
scas
and
jno
mov
sbb
pop
xor
mov
pop
sub
jo
outsl
rcrb
out
lret
pop
add
mov
cmp
jg
loop
into
and
cltd
das
in
dec
das
outsb
stos
lahf
or
movsl
dec
fidivl
in
shr
mov
dec
cmp
rolb
jo
push
pop
shl
sbb
push
push
enter
mov
clc
xor
dec
jne
loopne
inc
sbb
ja
movb
xor
rcrl
lock
fidivs
jb
pushf
rcr
aaa
and
xor
fiadds
mov
lret
adc
pop
add
adc
clc
xlat
or
sub
cmp
or
mov
loopne
ficompl
xor
into
lret
inc
sbb
cmpl
dec
inc
inc
andl
mov
xor
fisubrs
out
push
sub
cmpsb
or
mov
das
lods
sbbl
decb
out
pop
inc
push
lods
mov
and
lret
loop
xchg
fdivrl
dec
jo
xchg
ja
loope
jp
fidivl
jno
cs
ss
jle
jbe
xor
push
ficomps
add
jge
cmp
sbb
out
loop
fcmovbe
ror
lret
ret
mov
scas
stos
cmpsb
stos
mov
mov
xor
roll
aaa
add
das
sub
and
push
inc
adc
rcrb
mov
div
xorb
mov
push
adc
out
test
xchg
sub
sub
xor
pop
into
out
dec
stos
sbb
push
pop
out
inc
or
push
inc
push
imul
fisubl
cmp
jbe
fs
lods
and
cs
jg
fs
sbbb
lock
sti
jp
testb
push
adc
imull
sahf
les
cmc
lret
outsb
add
mulb
pop
sbb
mov
mov
jp
inc
ret
and
movsl
inc
xchg
mov
call
dec
push
mov
jmp
sbb
divl
dec
cmp
fucomip
xor
int3
lret
jg
scas
out
rol
repnz
fnsave
add
ljmp
mov
repnz
mov
not
jp
mov
icebp
fwait
jmp
scas
mov
orl
ret
movsl
sbb
dec
mov
orl
xorl
gs
sti
mov
dec
mov
or
cmp
leave
xchg
dec
mov
mov
jle
adcl
sub
pop
xchg
inc
adc
inc
sbbl
inc
daa
dec
fldt
adc
repnz
ss
adc
adc
ss
cmp
test
sub
mov
cmp
pop
cmpsl
xor
add
test
mov
inc
cltd
cmp
sub
gs
ljmp
sub
fst
mov
mov
aam
sbb
inc
jg
xor
xchg
push
mov
testb
push
sub
cmp
push
lret
push
mov
cmpl
cmp
sahf
rorl
in
jae
and
sti
mov
fsubrs
sbb
lret
mov
repz
jecxz
xchg
mov
fists
ficomps
loop
popf
mov
xor
mov
lret
dec
inc
mov
xor
adcl
push
inc
aaa
mov
mov
dec
inc
bound
mov
flds
mov
push
arpl
and
bound
pop
leave
rolb
xchg
and
mov
pop
and
mov
mov
mov
inc
jne
and
outsl
mov
scas
bound
mov
pop
ss
loopne
mov
inc
loope
mov
and
outsb
ss
lret
loopne
mov
test
inc
scas
jl
pop
fnclex
js
scas
dec
jnp
jb
jl
repz
add
pop
mov
push
xor
sub
mov
mov
xor
pushf
cmpsl
rorl
jbe
pop
xor
mov
aaa
repnz
adc
add
cmp
pop
inc
out
sahf
pop
jbe
add
cli
xor
ret
pop
mov
jp
cli
push
and
lock
icebp
push
jae
or
rcr
ret
popf
xchg
jo
andb
inc
jge
data16
shll
push
jno
or
outsb
add
sbb
mov
testb
repnz
shr
ja
jo
adcl
cld
mov
xchg
jbe
push
jns
ret
in
cltd
out
roll
loopne
or
xchg
ficoml
repz
addb
or
cmpsb
fmulp
xchg
and
into
and
add
inc
jno
jae
test
jge
ret
rcrl
dec
ss
mov
cmpsl
sbb
jae
dec
mov
pop
sahf
sub
lsl
out
jb
or
mov
loop
into
outsb
dec
cs
add
xchg
jp
pop
out
jecxz
imul
cmp
bound
and
pop
xchg
push
dec
jbe
cmp
or
imul
mov
pusha
mov
mov
xlat
enter
aad
jge
inc
ja
test
jecxz
shlb
mov
pop
rcr
scas
inc
scas
fiadds
xor
inc
out
cmpl
mov
mov
xchg
loope
ret
ret
jno
xor
or
cmp
out
sahf
add
cmp
sbb
and
mov
push
inc
test
xor
out
mov
lret
push
inc
out
roll
and
insl
test
incb
shr
adc
stc
orl
jbe
xlat
aaa
dec
jae
cmp
add
loop
into
sar
inc
in
jecxz
gs
cli
push
xor
mov
test
loope
cmp
inc
jbe
in
outsb
push
push
mov
jp
sbb
jne
stos
sarl
cmc
mov
jle
inc
out
inc
sbb
int
mov
sub
cmp
mov
bound
mov
and
lea
jg
pop
mov
loop
into
add
cmp
jo
xchg
into
dec
mov
cli
sbb
repnz
out
sub
ja
bound
pushf
ss
fisubrs
jno
in
mov
insl
inc
fstl
cmpsl
inc
ja
loopne
stos
in
jge
xor
in
stc
dec
sbb
inc
scas
insl
in
inc
inc
std
push
xor
imul
ja
jns
lods
arpl
mov
loop
dec
roll
addl
cmpl
mov
pop
loop
pop
arpl
sbb
rcll
insb
movsl
mov
ret
cmp
or
popa
dec
jecxz
stos
xor
mov
ficompl
repnz
inc
xor
rcll
stos
pop
pop
jecxz
mov
pop
fwait
cmp
insb
aam
test
cld
cli
cs
lret
add
sub
mov
repnz
add
push
out
std
iret
push
lahf
stc
addb
je
in
and
lods
jb
in
stos
divl
mov
add
icebp
sbb
ret
or
jecxz
arpl
leave
sub
mov
mov
xor
or
lods
xchg
or
sbbl
lcall
outsb
ret
pop
sar
inc
ljmp
call
lock
pop
stos
into
ret
imul
inc
lahf
rcr
loop
bnd
loop
mov
arpl
dec
mov
inc
repnz
pusha
fnsave
xorb
mov
repnz
mov
popa
mov
inc
loopne
mov
adc
frstor
xchg
jae
loop
mov
inc
clc
enter
adc
negl
jae
loop
mov
out
fucom
xchg
mov
xchg
jg
insb
stos
xor
fninit
mov
mov
jecxz
jg
das
cmp
pop
notb
mov
mov
sbb
adc
cmp
inc
mov
mov
inc
fadds
xor
jecxz
popf
xor
icebp
imul
mov
ret
jge
shll
and
jb
mov
sti
repz
loope
mul
cmp
jae
nop
add
test
mov
test
or
mov
cmp
std
mov
mov
inc
adc
lret
les
lret
insb
les
xchg
test
sarl
mov
mov
jl
xlat
add
aas
or
in
xchg
xlat
aaa
xchg
ja
repz
leave
mov
push
mov
mov
notl
andb
push
rclb
std
jae
push
roll
inc
xor
js
xchg
loopne
negb
and
cmp
loop
js
jae
mov
jnp
add
lahf
jae
loop
mov
arpl
loope
or
sbb
fstl
mov
add
jecxz
loope
ljmp
add
adc
movsb
lcall
iret
add
mov
not
sti
mov
pop
ss
inc
test
sbb
test
fidivrl
ss
loope
clc
bound
cwtl
fcompl
cli
inc
jl
aas
mov
leave
repz
push
arpl
inc
mov
and
mov
mov
fnstsw
adc
loop
mov
jno
ret
mov
mov
mov
repnz
loope
shl
add
scas
inc
fstl
loop
mov
mov
loop
cmpsl
loop
mov
ja
fnsave
xor
pop
push
and
and
loope
inc
repz
repnz
arpl
ficompl
fistpl
loopne
pop
ret
mov
dec
jnp
fdecstp
jecxz
pop
cs
fcomp
push
mov
and
outsl
pop
fldl
sub
loop
mov
push
or
cltd
mov
enter
xor
iret
mov
mov
js
cmp
jae
loop
mov
jnp
repnz
loop
mov
cwtl
test
sbb
or
xorb
mov
lea
clc
mov
sti
jle
jnp
addr16
or
push
sbb
mov
fadd
jecxz
stos
addb
repz
push
push
sub
repz
adc
arpl
add
ret
lds
inc
ljmp
xlat
xor
add
insl
sti
sar
ljmp
push
mov
dec
xor
stc
roll
or
rolb
cmp
pop
pop
jno
ljmp
lock
out
xor
cmpsb
mov
or
dec
iret
mov
pop
cmc
mov
dec
mov
ret
push
xchg
in
ret
add
push
std
std
adc
mov
push
in
adc
mov
and
sahf
mov
xor
ret
inc
mov
insb
cmp
fiadds
jnp
out
add
sti
add
pop
repnz
push
jnp
imul
mov
jecxz
add
mov
repz
jle
incl
loope
out
inc
sbb
in
adc
xchg
roll
hlt
in
icebp
jae
mov
mov
or
lahf
push
add
jecxz
mov
in
mov
add
inc
push
popa
dec
in
lea
rorb
leave
lahf
push
adc
add
test
out
int
pop
inc
mov
sbb
xor
lds
adc
inc
and
add
adc
add
fsub
sbb
in
push
scas
addr16
int
inc
xchg
leave
mov
pop
mov
add
pop
inc
icebp
std
imul
arpl
cmpsl
pop
and
je
or
sbb
push
gs
and
jl
sbb
lods
out
outsb
shl
mov
sbbl
cs
jmp
into
mov
mov
pop
das
and
out
mov
in
pop
adc
xor
inc
jge
add
jle
or
lcall
sbb
pop
lods
and
xchg
add
fcoml
sti
mov
cs
int3
shl
ret
call
sti
pand
add
int
dec
mov
mov
push
outsb
lahf
js
cmpsl
and
rol
icebp
out
rcll
adc
add
pop
push
inc
out
or
add
movups
sbb
mov
test
hlt
clc
or
enter
mov
add
xchg
jl
into
lock
mov
cs
mov
cltd
inc
add
pop
out
dec
mov
ja
js
adc
pop
aas
jle
sbb
add
out
adc
dec
inc
int
jmp
mov
add
pop
andb
popa
pop
and
add
jo
jb
ljmp
push
jmp
ja
mov
cmc
add
std
sbb
add
aas
add
adc
mov
inc
and
or
pop
nop
loope
jecxz
idivl
testl
cs
xchg
dec
negl
aaa
ds
mov
fiadds
rcrl
cmpsb
mov
sub
add
sahf
and
fidivs
sub
mov
dec
enter
sahf
repz
add
call
loope
cmpsb
mov
cmc
jnp
lret
jp
inc
jmp
push
mov
enter
mov
mov
sub
out
cmpsl
mov
addl
lods
and
pop
sbbb
movsl
loop
mov
out
int
mov
out
jmp
les
out
outsl
xchg
lret
fcomps
out
xor
nop
mov
out
jmp
test
mov
test
mov
sub
xchg
mov
mov
adc
mov
jne
adc
xchg
mov
lret
hlt
aas
fstpt
xlat
and
mov
aaa
test
sbbb
xor
push
das
or
adc
stc
mov
ja
push
daa
in
rcr
or
cli
pop
xchg
push
pop
ret
arpl
add
jae
hlt
adc
stc
xchg
ja
stc
psubw
ret
cmc
jecxz
push
roll
jecxz
shr
jecxz
cmpb
insb
cmpsb
push
inc
push
dec
outsb
fucomip
adc
mov
lods
addr16
adc
sbb
outsb
lahf
ret
scas
fists
pop
lret
fisubs
nop
mov
mov
dec
fstps
fistpl
push
and
stos
pop
xchg
pusha
out
repz
jno
mov
daa
mov
push
xchg
xchg
repnz
ljmp
out
out
pop
jnp
or
xor
or
stc
add
icebp
add
repnz
push
cld
rolb
mov
jnp
xchg
and
std
sub
or
push
pop
bound
outsl
sbb
sbb
addr16
outsl
dec
jbe
js
fisttps
lds
jp
cli
push
out
inc
dec
repz
push
aas
dec
repz
jg
push
cld
adc
out
dec
cld
or
jecxz
push
enter
mov
fnstsw
inc
jge
jne
mov
cmp
scas
jmp
insl
pop
mov
push
test
mov
mov
scas
pop
cli
iret
dec
pop
in
scas
inc
gs
hlt
fildll
xchg
mov
in
icebp
out
xor
jnp
sbb
out
icebp
repz
adc
sti
mov
dec
loope
push
jno
add
bnd
mov
sub
jnp
dec
repz
repz
mov
fistpl
fstps
dec
and
repz
add
test
ljmp
call
push
fisttpll
pop
scas
lret
cmpsb
repnz
and
xor
push
mov
imul
dec
push
sbbb
clc
or
mov
das
lock
sbb
mov
cmp
dec
into
scas
push
adc
into
and
stc
std
adc
test
add
xchg
cmp
insl
icebp
sbb
mov
cltd
aad
imul
xlat
sbb
in
inc
clc
mov
lcall
mov
mov
daa
cmp
mov
mov
add
imul
or
fisubrs
push
int3
hlt
mov
bnd
jae
push
mov
cld
into
adc
mov
push
and
mov
fdivs
cmp
sbb
xlat
repnz
imul
xchg
stc
pop
dec
lret
and
stos
adc
lods
lcall
push
clc
xchg
lcall
sub
dec
pop
push
dec
ds
pop
ljmp
and
lods
shr
push
mov
sub
les
stos
mov
jl
nop
rcrl
jne
mov
mov
add
add
add
adc
add
add
add
add
add
lahf
sbb
add
add
std
sbb
add
add
add
push
and
add
add
call
add
add
add
add
add
add
cltd
sbb
add
add
addb
add
adc
add
add
mov
add
add
divb
sbb
add
add
mov
sbb
fcompl
pop
add
xchg
sbb
ficompl
add
enter
lcall
xor
sub
aam
sub
and
sbbl
mov
enter
int
mov
idivb
inc
test
pop
sbb
and
scas
jle
out
add
or
repnz
sbb
mov
inc
test
push
push
or
inc
and
in
imul
testb
cmpsb
das
icebp
pop
filds
jmp
hlt
addl
push
dec
leave
mov
insl
dec
sarl
mov
scas
sarb
push
jns
cli
out
sub
fisubl
cmp
jb
cs
mov
add
shrb
out
stc
cmp
inc
or
mov
add
sbb
popl
mov
out
rcr
dec
mov
gs
cmp
sarl
jbe
popf
add
mov
cwtl
adc
xor
pushf
sbb
add
xchg
mov
jnp
repnz
jge
je
mov
jne
hlt
testb
cmp
lods
jmp
pop
fisttpll
not
sbb
cmp
push
lock
cmp
push
push
fcmovnb
pop
mov
xor
push
or
mov
pop
fstps
xor
imul
call
sbb
push
loopne
jae
fs
jmp
movsb
xchg
aas
mov
into
popf
and
test
fldpi
mov
jge
cmp
insb
pop
xor
sbb
sub
mov
or
push
jae
xor
push
cmp
lcall
iret
mov
addr16
bswap
push
addr16
adc
clc
outsl
aam
rolb
inc
pop
cmp
das
cmpsb
or
sbb
mov
clc
sub
xchg
rol
mov
mov
sbb
ss
mov
ss
leave
xchg
sbb
add
test
cmp
dec
xor
icebp
adc
fs
xlat
adc
cmp
pop
dec
add
push
repnz
pop
mov
jg
sub
cmp
xor
sub
fisubrl
outsb
fwait
insb
stc
stos
push
mov
loope
dec
mov
xor
jp
aaa
iret
and
add
dec
mov
xlat
mov
push
enter
pop
sbb
mov
dec
shrl
push
sub
mov
scas
lcall
push
daa
jecxz
fnstsw
test
jo
mov
loope
icebp
sbb
and
jmp
push
dec
or
insb
mov
inc
outsb
adc
adc
xchg
mov
lea
jae
stc
jmp
orl
lcall
add
movsb
sbb
or
cld
push
sub
sbb
sbb
les
pop
arpl
sub
cmp
test
fisubs
in
or
movsb
arpl
loopne
adc
aaa
mov
imulb
loop
sub
dec
and
out
cmpsl
lock
sbb
std
push
push
icebp
sbb
leave
icebp
push
fisttps
cmp
ja
arpl
xor
or
repnz
xor
fs
insb
add
push
pop
stos
sahf
cli
scas
or
lret
pop
into
inc
lcall
xlat
outsb
jecxz
jmp
or
loopne
sub
in
imul
cld
and
in
dec
in
les
divb
mov
inc
push
cmc
inc
shll
pop
ss
push
push
push
pop
dec
jge
pushf
out
sub
dec
mov
adc
rcrb
and
mov
cmpsl
scas
fldcw
add
leave
popf
dec
ss
lcall
and
cmp
cwtl
mov
and
mov
xor
or
clc
add
movb
lock
scas
pop
ljmp
xor
sarl
pop
mov
dec
arpl
mov
mov
ss
jmp
out
js
aam
clc
push
aam
mov
push
push
fwait
mov
dec
mov
dec
mov
lcall
mov
sbb
scas
cmp
mov
mov
cmp
lret
mov
fldl
es
out
mov
fistl
inc
insl
inc
push
xchg
dec
pop
mov
aam
jmp
daa
fisubrl
and
popf
jp
fldenv
in
and
xor
fstpt
lret
imul
loope
mov
inc
and
repz
jne
hlt
out
push
and
shlb
int3
pop
inc
xor
and
gs
adc
enter
or
insb
sub
jmp
jns
xor
inc
sub
imul
mov
fdivrs
mov
inc
test
add
shlb
mov
js
and
dec
mov
mov
shll
imul
pop
adc
test
sub
xor
lret
adc
loopne
xchg
xor
xor
or
mov
lcall
cmp
inc
xor
xor
addl
sub
pop
data16
sahf
sbb
push
stc
sub
dec
enter
inc
or
int3
sbb
mov
rcll
into
xchg
shlb
stc
lahf
das
cwtl
subb
jecxz
cmp
add
ljmp
jae
iret
lds
pop
dec
sti
test
mov
cs
pusha
add
pushf
call
pushf
mov
mov
stc
movw
movb
mov
push
pusha
xor
movw
cmp
stc
not
clc
test
add
clc
clc
xor
movb
push
cmp
call
bt
add
mov
test
stc
call
lds
imul
fimull
notb
andb
cmp
aaa
or
push
push
xlat
arpl
movb
pusha
mov
insb
xor
jne
stc
out
or
xchg
mov
out
mov
or
mov
sub
add
jno
mov
pop
pop
mov
or
pusha
loope
add
cmc
andb
mov
lock
add
inc
dec
in
push
sub
xchg
gs
stos
fidivl
insb
add
outsb
cld
sbb
popa
push
fistps
movsl
jae
out
push
inc
lcall
sbb
or
mov
fcomp
ret
data16
bound
enter
clc
mov
sub
scas
cld
in
add
mov
mov
arpl
ljmp
clc
out
add
cmp
stc
inc
mov
inc
inc
fsubr
xchg
icebp
out
lret
shll
lds
daa
fucom
mov
jge
inc
jp
cli
cmp
mov
pushf
mov
mov
mov
lea
jmp
pushf
lea
call
push
mov
push
pusha
lea
jmp
sbb
push
xchg
push
stos
cmpsb
mov
out
add
and
stos
mov
sub
sub
dec
jbe
fisttpl
jns
mov
stc
pop
jb
sbb
jmp
pushf
loop
pop
dec
pop
std
aad
push
inc
xorl
int3
pop
fsubl
or
ret
cmp
test
scas
divl
dec
int
stos
addl
loopne
mov
dec
xchg
leave
testl
dec
mull
push
cmp
inc
and
jmp
cmc
sbb
btr
cmp
add
btr
movsbw
mov
cmc
cmc
add
test
bt
mov
rol
bt
sbb
mov
clc
pushf
jmp
push
shrb
mov
pop
jmp
jmp
jmp
repz
aas
jl
xchg
pusha
and
mov
out
sub
jmp
outsb
cli
cmp
lds
jmp
push
inc
lahf
sti
cmpsl
test
bnd
pop
sarl
aas
sbb
rcl
mov
push
lret
add
sub
or
hlt
lock
sub
enter
mov
adc
out
xchg
rclb
inc
lcall
cmp
mov
mov
aad
adc
lcall
xchg
test
ret
lods
insb
scas
aas
dec
addb
stos
sub
test
lock
mov
js
adc
outsb
cld
lcall
cmp
sub
push
sbb
jg
add
adc
adc
stc
seta
xchg
or
bsf
shr
bt
mov
rcr
mov
jmp
or
push
mov
sahf
add
sub
jp
push
push
loop
jp
cmp
mov
mov
insb
cs
bound
add
dec
int3
jmp
out
mov
adc
out
push
mov
or
sarb
xcrypt-ecb
cmpsl
int3
inc
jle
and
xchg
in
jb
scas
add
loopne
mov
xchg
arpl
mov
outsb
sub
call
outsb
cs
fistpll
push
mov
mov
pop
inc
lcall
pop
pop
repnz
mov
pop
dec
inc
xor
in
jne
mov
or
arpl
xchg
mov
jne
out
bound
push
in
shlb
popa
xchg
idivb
sahf
pop
add
scas
cmp
inc
mov
adc
lea
mov
mov
inc
inc
lea
test
adc
xor
frstor
jg
cmp
lahf
in
jnp
xchg
mov
xor
stos
xor
inc
mov
and
inc
idivb
mov
out
repnz
inc
insl
in
or
sbb
jmp
out
stos
sahf
sbb
int
jle
jnp
aam
adc
rep
jne
ljmp
jp
divb
lcall
mov
push
xorb
filds
xor
test
add
xchg
lahf
pop
mov
in
add
mov
loop
scas
inc
jno
out
ret
xchg
cmpsl
sbb
mov
scas
xchg
dec
add
inc
pusha
pop
int
jg
add
adc
add
cmp
lea
jae
jmp
call
pop
pshufw
shll
scas
add
inc
scas
cmp
in
shrl
xchg
test
mov
push
std
outsb
or
jg
pop
out
rorb
and
and
daa
out
stos
push
or
or
popa
idivl
cwtl
jb
mov
arpl
inc
push
cli
shrb
loop
aam
rcl
sahf
and
enter
orb
pop
sbbb
setne
lcall
in
je
add
mov
sbb
popf
in
stos
sbb
xor
dec
cmp
jge
inc
out
sub
jge
sbb
add
mov
and
push
and
xchg
sbb
aad
push
jae
xor
mov
mov
xor
fcoms
cli
xlat
adc
jmp
arpl
cmpsb
dec
mov
mov
rcll
dec
xchg
pop
mov
push
add
xor
add
mov
or
mov
sub
mov
mov
jmp
sub
lods
adc
gs
pop
mov
das
testb
inc
push
push
loop,pt
aam
insl
lds
imul
les
shll
and
int3
sbb
cmp
test
jp
push
daa
jg
mull
cltd
cmp
lods
xrelease
sbb
ret
leave
jge
push
jnp
outsb
cmpsb
pop
fsubl
fs
ja
pusha
call
or
push
cmp
dec
push
loop
add
push
push
add
mov
test
out
xchg
xor
jp
loope
sub
in
repz
dec
mov
pop
cld
inc
xor
sbb
fsubr
mov
mov
inc
ss
pop
imul
cmp
hlt
cmp
or
ss
pop
push
iret
xor
add
mov
test
fstl
js
fs
adc
pushf
pop
inc
jp
int
add
jle
sarb
mov
fisubl
xchg
int3
imul
lcall
xchg
dec
mov
mov
pusha
movsb
pushf
in
inc
scas
stc
jno
mov
pop
stos
mov
inc
push
add
jno
pop
cli
mov
clc
fidivl
adc
leave
xchg
xchg
dec
pop
loop
or
mov
loop
push
push
leave
test
sub
sub
mov
lods
xchg
cmp
and
dec
movsb
ss
mov
lcall
sti
fcomip
rdpmc
out
ljmp
add
xor
ljmp
adc
clc
and
inc
lock
mov
sub
rcr
lcall
jo
add
pop
pop
mov
jg
in
lcall
inc
jecxz
dec
iret
push
fistpll
pop
in
cmpsb
es
pop
rorb
xor
int3
sarb
in
jp
sub
mov
pop
or
lret
bsr
setp
bsf
mov
test
and
cmp
add
push
pusha
pushf
pushl
lea
jmp
ss
dec
lcall
push
cmpsl
pop
xchg
dec
pop
pop
out
xlat
mov
mov
pop
je
jp
and
popf
sbb
mov
pushf
lods
add
mov
hlt
rcr
sahf
push
mov
mov
in
inc
pushf
jle
hlt
ja
test
push
dec
fisubs
test
gs
cmp
xor
push
fsubl
es
cmc
in
mov
add
inc
pusha
sub
lcall
movsl
loope
pop
sub
xor
xchg
leave
test
orl
push
test
jnp
jl
jge
jle
andl
in
sahf
mov
cmpsb
out
mov
push
imul
adc
xor
sbb
std
outsb
pop
cmp
inc
in
cmp
mov
loop
lahf
inc
xor
mov
sub
adc
repz
cmp
jnp
and
pusha
and
jo
jno
push
pusha
hlt
test
movsl
lock
mov
pop
sbb
call
dec
push
pop
ds
aas
lcall
dec
lcall
sub
fisubrs
sahf
xchg
out
mov
enter
sub
inc
and
loopne
inc
and
das
negb
lock
dec
loop
sub
mov
enter
cmp
sarl
sub
int3
in
add
daa
icebp
jb
loope
xor
cmp
mov
movsb
loop
sbb
add
out
sub
clc
xor
and
fsubrp
stos
add
or
ljmp
mov
rorb
push
mov
lcall
xchg
dec
pop
test
stos
and
iret
repz
mov
sti
dec
inc
out
mov
push
inc
adc
mov
and
jo
push
outsb
fdivr
jmp
push
daa
jecxz
fucomp
pushf
test
sbb
aaa
repz
jecxz
xorl
jbe
mov
xchg
mov
mov
movsb
xor
xchg
xchg
int3
and
test
mov
pop
xor
loopne
xchg
mov
push
ja
and
fcoml
sbb
jl
rolb
push
sbb
push
lcall
xchg
aaa
sbb
sbbb
test
pusha
test
in
fdivrl
decb
sub
repz
push
sbb
xlat
push
pushf
jl
sarl
xor
ljmp
sub
adc
inc
inc
jns
mov
out
fwait
test
sbb
xor
adc
pop
jnp
fdiv
mov
mulb
out
add
xor
clc
mov
mov
aad
dec
lcall
cwtl
sbb
adc
adc
test
jo
in
stc
xchg
movsl
mov
sti
sub
dec
push
sbb
mov
xor
in
icebp
mov
inc
aad
jnp
sbb
pop
addr16
nop
xor
xor
jne
push
fidivl
adc
sahf
les
out
js
add
jecxz
lret
inc
addr16
mov
xchg
ljmp
pusha
fistl
mov
repz
testb
movsl
inc
adc
adc
cmp
mov
xchg
and
out
cmpsb
scas
mov
xchg
das
xchg
lcall
inc
arpl
mov
movsb
lods
mov
in
jae
rcrb
arpl
push
mov
aaa
jae
add
sub
sbb
les
and
dec
sub
into
sub
push
and
adc
cs
fwait
shlb
shlb
popa
push
and
ret
test
idivb
call
cmp
sar
je
add
fs
jae
pusha
pushl
mov
lea
jne
pushf
jmp
les
dec
lcall
push
mov
mov
stc
jne
lea
outsb
mov
lock
das
test
mov
fsts
xchg
jp
xlat
sahf
mov
or
jbe
lret
push
mov
and
outsb
test
jp
loop
mov
fiaddl
inc
lahf
inc
push
fcompl
cmp
pop
hlt
dec
gs
cmc
sbb
or
cmp
mov
push
das
pop
xor
cld
adcb
pop
loopne
ffree
inc
das
insl
and
xlat
add
stos
jnp
std
xchg
dec
mov
jl
xor
add
stc
mov
cmp
pushf
stc
pusha
test
call
iret
xchg
out
dec
lcall
pusha
sbb
insb
xor
adc
push
and
mov
push
lret
ret
movl
repnz
pop
out
adc
adc
in
inc
mov
jecxz
lcall
fidivs
lret
dec
icebp
ljmp
aad
shll
lret
mov
outsb
popf
leave
ficomps
sahf
mov
loopne
clc
sahf
xchg
mov
mov
mov
push
push
xchg
xor
call
cmp
incl
and
jae
pushf
movb
call
test
popa
jge
test
jno
and
movsl
xor
pop
add
test
enter
inc
enter
or
cmp
mov
sbb
and
sub
cmp
popf
add
mov
lods
mov
mov
or
mov
gs
std
or
ret
sub
push
xor
sub
or
imul
cwtl
lcall
pop
movsl
dec
xor
lahf
inc
sub
dec
fnsave
push
lcall
ficoml
jp
jp
cld
xor
aas
pop
cmp
divl
cmp
mov
xlat
jb
adc
rcrl
mov
pop
test
aas
mov
lds
push
pop
outsl
mov
inc
push
xor
test
push
mov
daa
pop
push
aaa
sbb
mov
lods
cmp
pop
lods
arpl
mov
mov
shll
lods
stos
jns
pushf
inc
in
ss
fsubs
btc
and
lods
mov
pop
mov
test
or
sti
add
repnz
add
mov
inc
sahf
nop
notl
inc
xor
sub
cmp
fidivs
adc
sbb
cmp
inc
loop
popf
jmp
jnp
xchg
adc
lahf
int3
inc
leave
cmp
call
push
lcall
in
test
dec
nop
test
cld
or
mov
cmpsl
sbb
jl
push
sbb
mov
out
aas
clc
sbbb
ret
jmp
cwtl
andb
or
adc
and
or
fisubrs
xor
sub
mov
sub
inc
cmc
mov
cmpsl
adc
movsb
movsb
notb
and
sbb
sub
stos
and
or
loopne
faddl
cmp
fldt
inc
sbb
lcall
movsl
popa
in
mov
or
pushf
int
cmovl
mov
fs
sub
data16
lret
mov
cmp
sti
or
andb
js
mov
mov
ret
fiadds
push
pop
or
pop
enter
jl
leave
scas
pop
das
lods
add
jno
sbb
jp
jg
mov
dec
cli
dec
adc
pop
or
sbb
scas
mov
sub
xor
test
and
xchg
sub
add
push
lcall
cld
or
pop
test
enter
add
test
xchg
push
mov
inc
out
sub
scas
outsb
add
fisttps
add
cmpb
in
in
xchg
sbb
popf
mov
adc
into
shl
adc
sub
jp
xchg
xchg
dec
fsubs
ss
mov
push
push
xchg
sbb
push
jns
or
mov
push
fdivrl
mov
sbb
or
and
popf
es
shlb
cmp
and
nop
sbb
push
cld
mov
mov
xchg
ja
clc
sbb
and
xor
and
and
in
lcall
mov
cmp
cmpsb
pop
push
jb
iret
pop
insl
fndisi(8087
das
sbb
jnp
sub
movsl
cmp
push
push
fdiv
sub
in
sub
sarb
sub
in
sbb
adc
mov
fbld
push
aam
xor
push
pop
fists
in
shr
cs
cmp
cmpsl
or
mov
xchg
insl
sub
in
fidivrs
jne
jae
test
das
cmp
jno
add
movsl
ret
enter
lea
sbb
add
in
mov
fadd
int3
mov
xchg
xlat
xor
andl
rcrl
and
cmp
adc
inc
xchg
test
stc
push
bswap
not
movsbw
mov
and
ror
cmp
mov
sub
xor
shr
btc
mov
pusha
call
xor
rcll
js
mov
sub
adc
jg
mov
sbb
or
mov
push
lret
adc
dec
pushf
rclb
es
les
jp
pop
js
mul
outsl
imul
cld
mov
cmp
ljmp
jmp
ss
dec
stos
shrl
adc
fs
jl
out
push
or
mov
mov
push
mov
xchg
movsb
bound
aad
cwtl
dec
xor
cmc
mov
mov
xor
push
xor
pusha
mov
xor
jns
sub
std
ss
scas
test
subb
add
cli
shrb
iret
and
mov
xor
xchg
add
pop
ljmp
out
inc
fwait
inc
sbb
mov
sti
xchg
ja
ret
inc
pop
in
pop
mov
or
icebp
pop
out
mov
mov
xchg
inc
pop
xchg
jnp
xchg
stos
sub
xor
cmc
shl
push
insb
popf
sbbl
dec
jecxz
cmpsb
sub
shr
jae
and
sbb
gs
out
int
add
fdivrs
inc
push
add
iret
push
fstp
dec
dec
imul
mov
lods
add
push
fs
call
or
sbb
cltd
imul
stos
call
pushl
popl
bt
cmc
bt
cmp
call
push
out
xchg
push
lcall
andl
in
mov
fildll
test
int
xchg
repz
jmp
test
lret
aaa
movsb
ss
insb
ret
mov
sbb
movsl
push
outsb
sub
insl
iret
enter
outsl
sarb
hlt
fwait
inc
dec
xor
inc
fidivs
cmpsl
xchg
das
or
mov
scas
inc
cli
push
inc
xchg
add
jg
dec
addl
mov
cmp
roll
dec
ljmp
mov
adc
xchg
lods
ss
pushl
xor
push
sbb
sahf
mov
stos
xchg
push
int
int3
subl
jp
mov
gs
js
arpl
mov
cmpsl
jmp
lea
js
daa
or
int3
and
insl
jge
rolb
cld
push
scas
cmp
or
push
xchg
data16
stos
adc
sbb
cld
add
sbb
dec
xchg
popf
scas
adcl
mov
ret
jo
inc
xchg
xchg
lret
mov
mov
mov
jno
pop
adc
push
mov
out
sti
inc
xlat
mov
sub
adc
mov
sbb
dec
int
cmpl
add
scas
or
mov
inc
push
push
xor
cs
insb
add
cwtl
out
lcall
das
mov
imull
aaa
fucomip
push
mov
mov
test
pop
push
insl
adc
push
test
mov
bound
or
lods
push
cli
mov
cmc
xchg
cwtl
icebp
inc
fs
fildl
jmp
push
mov
sbb
filds
mov
sbb
jnp
push
mov
pop
jg
int
adc
lret
fdivrs
and
push
inc
add
sub
stc
xchg
dec
pop
imul
jmp
xlat
mov
cmp
inc
test
test
inc
stos
jae
adc
arpl
mov
fmuls
rolb
mov
jl
xchg
xchg
in
cltd
stos
xlat
aad
cmp
dec
cmpsb
and
dec
mov
add
lcall
in
ss
push
pop
fmuls
xchg
jbe
ja
hlt
data16
mov
mov
pop
sbb
or
mov
sub
add
fisubs
lcall
jnp
adc
jb
pop
test
and
je
mov
ja
adc
fs
jne
rcr
rcr
dec
and
mov
test
cmc
clc
bt
add
test
stc
call
jmp
adc
pusha
movb
pushf
push
lea
jae
call
add
inc
gs
popa
jbe
inc
imul
add
leave
add
pushf
call
pushf
test
pushl
call
cmp
cmp
push
pushf
lea
jae
pusha
pusha
add
pushf
pushf
call
mov
dec
pop
pop
xlat
xchg
addr16
pop
xor
int3
pushf
in
into
fadd
lock
lea
inc
out
mov
mov
sub
add
movsl
cmp
jge
arpl
fmull
push
movsb
cmp
jae
xchg
and
inc
cmp
sar
or
dec
inc
mov
inc
loopne
lods
xchg
shlb
dec
xchg
lock
fadd
rclb
test
bound
mov
dec
fildll
xchg
pop
lcall
loope
adc
mov
int
cwtl
jns
push
packsswb
dec
lock
jmp
int3
push
fldcw
pushf
and
xorb
dec
pop
xor
mov
dec
and
cmp
cmpl
pop
scas
imul
cmp
jbe
jle
pop
rorl
les
jnp
or
call
stos
mov
mov
shl
inc
dec
test
aas
jge
orl
xlat
sbb
cmc
pop
roll
push
int3
inc
dec
xor
push
jne
and
jns
mov
daa
xor
pop
sti
mov
jp
sbb
fs
push
mov
add
pop
and
es
jbe
fistpl
insb
test
xchg
scas
je
sbb
int3
and
push
adc
sbb
jmp
in
push
aas
sahf
push
das
pop
lcall
pop
sbb
jecxz
jae
dec
dec
inc
cmp
xchg
rorl
insb
sub
test
les
jp
and
pop
dec
mov
out
mov
xchg
inc
add
add
xchg
test
xor
jae
enter
push
mov
int
add
jmp
xor
jae
out
out
add
lea
pop
cmp
stc
stc
movzwl
neg
mov
pusha
add
jmp
repz
ljmp
clc
mov
or
sbb
mov
fwait
ret
jmp
and
sub
inc
out
hlt
ficoml
inc
fcom
lock
ljmp
pop
jg
adc
or
call
add
inc
jo
adc
push
mov
popa
jecxz
add
rclb
arpl
xchg
adc
jmp
aaa
outsl
xchg
sbb
mov
add
xchg
in
icebp
outsl
adc
pop
pop
or
mov
sti
in
xchg
pop
lcall
les
mov
cwtl
push
and
fsubrp
dec
shrl
out
cmpsb
shlb
lahf
cltd
mov
and
cs
lods
mov
insb
mov
outsb
cmp
loope
sbb
ja
fsubs
rolb
stos
fcmovnu
scas
rcrb
jns
add
adcl
inc
inc
out
mov
sahf
leave
push
daa
pop
aas
ds
inc
aaa
sub
inc
arpl
test
or
sbb
dec
jo
mov
mov
jo
sbb
sbb
fstps
jno
dec
in
aaa
notl
xchg
pop
movsl
lcall
in
pop
stos
dec
mov
lds
xchg
subb
mov
hlt
mov
jl
imul
test
aas
popf
stos
and
jmp
add
into
push
stc
inc
repz
pop
dec
and
repz
movsl
inc
mov
inc
shlb
outsb
jp
pop
pop
nop
into
call
xchg
cwtl
sbb
rcrb
outsb
fcomps
fidivrs
ja
cld
mov
fidivrs
mov
cmpsb
xor
test
and
sub
push
inc
dec
cs
loop
push
jg
int3
mov
cmp
pop
sub
mov
cmp
xlat
push
leave
sbb
push
leave
bsf
cmpsb
aaa
mov
sbb
xor
out
adc
mov
or
adc
ja
lret
mov
or
jne
or
adc
das
inc
cwtl
fsubl
pop
pop
lcall
xor
xlat
orl
push
stos
repz
aas
xchg
dec
sub
lahf
popf
subl
outsb
and
gs
fcmovb
imul
push
test
add
pushf
fstps
test
lods
imul
out
push
pop
test
xchg
stc
sbb
jg
adc
jl
pop
adc
mov
add
sub
jge
xchg
js
pusha
add
xor
sahf
jae
fwait
or
pop
outsb
add
add
add
xchg
cmp
dec
sarl
mov
addr16
push
pushf
shl
mov
jl
cmp
les
pop
ret
aas
push
movlps
add
push
das
sti
bswap
std
xchg
mov
or
mov
int
movsl
jle
dec
mov
ja
pop
addr16
xchg
jbe
mov
fwait
mov
adc
jbe
rcrl
add
ja
push
mov
cltd
or
push
movsb
dec
ss
sbb
inc
push
push
push
testb
cmpsl
imul
lcall
xchg
aas
out
test
push
cmpsb
pushf
lret
dec
or
pushl
das
in
pushf
call
ljmp
xchg
scas
jmp
add
xorl
push
mov
lret
mov
add
xor
subl
repnz
mov
cmc
cs
pop
and
cltd
repz
add
enter
jmp
out
ret
andb
insl
mov
or
sbb
arpl
adc
lret
imul
fiaddl
or
jle
js
mov
aaa
dec
aad
mov
fs
sbb
cmp
cmp
cmc
push
loope
mov
xlat
mov
test
ret
std
pop
lcall
xchg
int
lods
xchg
popf
imul
nop
enter
leave
aas
xor
push
pop
pusha
inc
out
or
xchg
leave
and
mov
pop
pop
jno
adc
cli
mov
aam
push
adc
xlat
xor
inc
dec
cld
int3
test
test
mov
outsl
xlat
xchg
jns
adc
cmp
pusha
cld
jl
test
xor
fs
std
ljmp
adcl
jbe
cmp
pop
mov
or
dec
test
out
pop
lcall
and
icebp
lods
cltd
jne
loope
xchg
cwtl
stc
icebp
dec
outsl
sub
push
xorb
out
ss
cmp
rcrb
jnp
je
cwtl
mov
or
xor
aam
cmp
and
adc
adc
psubusw
dec
adc
fistl
pop
psubb
or
jecxz
pop
sbb
xchg
gs
fcoms
adc
push
cmp
loop
jp
jp
sub
test
adc
xchg
sub
dec
aas
xchg
stos
mov
inc
inc
lcall
loope
pusha
dec
add
sarl
bound
xor
mov
iret
out
xor
ds
push
and
add
xor
iret
jecxz
adc
fidivl
mov
cmpsb
cs
ja
xchg
mov
ret
adc
inc
sbb
les
out
sbb
scas
xchg
sub
notl
cmp
push
adc
out
dec
mov
fs
sbb
lea
pusha
mov
sub
rcl
mov
call
push
bound
or
or
inc
mov
jg
mov
cmp
test
jo
imul
jmp
inc
pop
das
push
in
cmp
int3
dec
mov
adc
xchg
pushf
inc
mov
nop
cmc
mov
cmc
icebp
popf
sbb
outsl
mov
ss
fmuls
add
xchg
dec
ret
jecxz
daa
push
sub
ja
dec
outsb
lods
adc
adc
imul
jnp
xlat
and
stos
xor
jl
lret
enter
push
sub
dec
pop
jecxz
repz
mov
jns
push
sbb
add
iret
les
idiv
lcall
xor
jnp
nop
add
fldl
out
and
jl
jb
mov
inc
divb
test
xchg
dec
sbb
testb
outsb
inc
data16
pop
shrl
mov
mov
jmp
stos
test
pushf
cli
mov
cld
dec
andb
fsts
aaa
sbb
mov
bound
ja
pop
cmp
imul
cmp
in
or
das
pop
shrb
repnz
scas
lahf
and
leave
xor
or
push
mov
pop
mov
mov
sbb
cli
loopne
cltd
icebp
xchg
stos
xchg
jmp
nop
jg
mov
loop
push
inc
out
shlb
fadds
stc
mull
fwait
xchg
xchg
cmpsb
fistpll
xchg
sahf
or
xchg
icebp
pop
mov
inc
mov
xchg
in
xchg
inc
mov
sahf
int3
cmp
pop
mov
adc
test
inc
and
mov
pushf
movl
jmp
mov
out
arpl
fmul
fs
and
push
cmp
inc
pop
push
sbb
sub
popf
xlat
ljmp
inc
inc
leave
insl
push
andl
pop
testb
outsl
pop
lods
pop
adc
mov
lcall
cli
rclb
ss
mov
insb
push
jbe
arpl
xor
pop
aaa
xchg
mov
lcall
pop
push
stos
scas
repnz
mov
call
lods
cmp
dec
aaa
xor
mov
dec
sbb
shl
mov
int3
jge
out
lcall
mov
int
mov
lock
mov
mov
xor
or
in
ja
outsb
repz
add
or
sbb
into
dec
mov
or
and
sub
arpl
fadds
inc
pop
push
js
xor
gs
cwtl
mov
push
mov
shll
push
out
jbe
cwtl
mov
out
fidivrs
dec
and
xchg
std
insb
iret
addl
pop
pop
push
xchg
jmp
test
push
ljmp
or
mov
xor
int3
sbb
arpl
clc
adc
dec
hlt
add
orb
ret
jp,pn
clc
jle
mov
cwtl
push
cmp
cmc
incb
sub
movl
and
ja
call
insb
ds
gs
xor
cmp
push
lea
push
mov
mov
push
inc
out
lea
inc
pop
or
dec
push
nop
repz
ljmp
sub
in
lcall
iret
adc
idivl
and
mov
mov
adc
and
mov
xchg
push
out
int
loope
sub
ds
or
nop
gs
push
sbb
push
loop
xor
xchg
xor
and
dec
xor
inc
out
iret
outsb
loope
and
les
repnz
ss
shrl
mov
jbe
or
cwtl
ljmp
daa
stc
in
pushf
je
sub
cli
lods
pop
out
sbb
sub
sbb
sbb
mov
cs
imul
fisttpll
hlt
mov
push
push
out
xor
rol
sbbl
out
aaa
xchg
imul
adc
sub
cmp
aaa
in
test
outsl
aam
test
adc
test
push
adc
fnstcw
addr16
sahf
mov
leave
cmp
insl
divb
mov
inc
mov
fsubrl
sbb
imul
cmp
mov
subb
cmp
sbb
fs
aad
mov
jo
leave
mov
testl
movsb
dec
fimuls
xorb
mov
cmp
pop
xchg
test
jns
jae
adc
pop
sbb
push
sub
int3
mov
add
sbbb
imul
sub
add
jmp
or
popa
repnz
lds
sbb
cmp
jmp
out
scas
adc
fadd
shrb
shr
add
mov
test
and
pusha
bt
mov
pusha
add
add
clc
jmp
jns
insb
lcallw
ds
push
xchg
inc
inc
cs
lods
sti
fcmovnu
add
daa
cmp
inc
xor
movl
int
pop
mov
ljmp
dec
loope
jne
jge
sub
pop
xchg
fwait
pop
inc
aaa
xchg
lds
jecxz
addr16
sbb
cmp
cmp
movsl
add
inc
mov
loopne
mov
mov
adc
push
xchg
jecxz
push
mov
bound
xlat
jo
mov
xchg
lahf
cmp
lret
addr16
mov
dec
loop
mov
xchg
mov
jl
push
rcl
int
inc
cld
xor
inc
test
sub
sub
aaa
sbb
das
adc
mov
fucom
mov
sbb
and
daa
or
std
fwait
movsl
push
ret
cmp
mov
pop
inc
mov
loop
sub
and
out
inc
or
lds
outsl
cld
adc
fcoms
xchg
vcvttps2dq
jns
enter
lcall
outsl
and
push
movsb
push
idivl
pop
ds
lea
jecxz
cmpsl
test
inc
out
out
testb
mov
jge
sub
faddl
dec
and
js
jmp
cli
pop
xlat
std
std
mov
icebp
push
in
leave
lds
mov
xor
cmpb
xchg
seta
aam
les
add
insb
stos
inc
or
inc
adc
jmp
sbb
inc
lods
sub
xchg
push
daa
mov
dec
and
roll
and
and
lea
test
stos
push
and
stc
not
nop
pop
dec
iret
imul
ficoms
and
nop
insb
int3
jb
mov
lret
dec
add
loopne
cltd
xor
push
leave
repz
iret
pushf
push
les
fsub
mov
pop
cli
in
loope
jg
leave
jns
mov
out
je
push
inc
sub
shlb
gs
ret
rolb
and
scas
cwtl
inc
jno
pop
lods
push
and
xrelease
xchg
mov
stc
outsl
mov
aas
jmp
dec
sub
mov
pop
or
xor
test
jno
push
fldl
mov
fisubrs
sbb
test
push
mov
sub
ficoms
mov
mov
adcl
mov
das
xchg
sbb
bswap
lods
insl
mov
sarl
jecxz
pop
cmp
mov
stos
enter
call
test
mov
popa
stc
cmp
inc
loopne
cld
jns
pop
std
arpl
movsl
or
test
test
andb
mov
insb
pop
sbb
push
xor
subb
jp
scas
dec
mov
cltd
pop
out
pop
pop
pop
mov
call
jecxz
mov
mov
dec
or
mov
cwtl
xor
pop
adc
inc
dec
inc
pop
jno
mov
pop
ja
push
and
sub
cmp
xchg
sbb
xchg
out
rcr
and
inc
push
xorl
cmp
loopne
mov
and
data16
or
shll
clc
adc
mov
out
pop
xor
out
lea
push
js
mov
push
dec
stos
lahf
xor
fistl
cmp
push
mov
jg
mov
inc
mov
fs
jl
push
add
fdivrs
test
sub
lahf
clc
mov
add
mov
call
movsb
push
movsb
mov
add
inc
cmp
sub
push
sarl
or
sub
jae
mov
shl
out
movb
xchg
xchg
sbb
arpl
icebp
add
add
sub
test
int
lcall
flds
pop
sbb
push
add
dec
ret
in
add
out
pop
adc
adc
insl
xor
in
repz
sti
js
inc
cmp
aad
cmp
jb
cmpsl
out
lcall
pusha
pop
icebp
sub
xchg
cmpsl
sub
mov
dec
sub
mov
pop
lea
inc
movsb
mov
cmovae
push
pop
cmp
inc
lods
cmpsb
rol
dec
mov
dec
cmp
push
add
mov
push
jp
rclb
fmuls
sub
xchg
add
mov
and
enter
add
push
aaa
pop
jbe
mov
xor
imul
outsb
sub
outsb
test
shlb
stos
in
add
jb
xchg
scas
inc
imul
xchg
hlt
push
insl
test
inc
or
jge
jle
mov
and
mov
push
push
out
mov
and
dec
xorl
push
fidivl
test
ficoml
cs
insb
hlt
adcl
and
jne
pushf
jmp
inc
mov
mov
cltd
xchg
cmp
mov
and
mov
push
pop
add
jae
ret
pop
sub
in
loopne
jae
out
int
xor
xchg
pushf
inc
xchg
pop
loope
aaa
jge
push
fbld
pop
movsb
or
pop
adc
pop
lds
shll
inc
cwtl
sub
mov
mull
insb
enter
mov
je
jbe
xchg
outsb
or
daa
outsl
sub
inc
out
mov
adc
repz
mov
sbb
andl
fwait
addr16
dec
add
faddl
test
fmuls
mov
ljmp
sbb
mov
adc
pop
sbb
mov
xor
fmull
xlat
mov
xor
test
sub
add
pushf
mov
add
sub
shl
sub
dec
call
jb
xor
push
push
inc
out
push
mov
xor
ret
iret
mov
sub
cmp
pusha
sub
cmpsl
inc
popa
std
hlt
cmp
and
pop
push
adc
lea
icebp
dec
fdivs
push
test
cli
popa
add
and
in
pop
or
inc
lock
adc
lds
imul
sub
out
lret
add
rclb
push
pop
mov
rcr
movsl
insl
lcall
pop
pop
jmp
xchg
sbb
xor
jge
xchg
fwait
cwtl
pop
cmp
xor
hlt
shlb
jno
mov
movsb
mov
mov
xor
mov
sti
clc
notb
iret
dec
pusha
scas
cwtl
dec
repnz
push
add
fdiv
cmp
inc
out
fcompl
cmpsb
xchg
ret
loope
je
loop
xchg
xchg
inc
repz
movl
call
adc
test
test
jg
add
and
int3
scas
cmp
add
push
cld
pop
gs
orl
and
sbb
mov
test
mov
mov
and
mov
inc
sarb
test
push
push
rcl
mov
mov
mov
popa
mov
and
in
push
sub
dec
jbe
mov
xchg
sbb
test
xor
dec
push
lcall
adc
in
aam
popf
add
hlt
ljmp
sarl
sbb
sub
outsb
lret
addl
jecxz,pt
jne
je
xor
jecxz
jae
dec
mov
or
mov
jb
push
pushl
bt
cmpb
pusha
push
mov
lea
jne
or
clc
test
ror
mov
cmp
add
stc
call
add
dec
mov
cwtl
xor
cmp
pop
rcrb
cwtl
mov
shl
inc
sub
divl
xor
mov
adc
bswap
ja
cmp
adcb
sbb
inc
jp
int
xchg
sti
jno
mov
sub
outsb
int3
dec
xor
out
xchg
pushw
xor
push
daa
mov
pushf
push
lea
jmp
push
cmc
mov
push
mov
inc
sarb
adc
fwait
mov
popa
cmp
sub
sub
popf
sbb
in
xchg
xchg
jns
jbe
push
pushf
popf
push
ja
cli
mov
ljmp
adc
rorl
adc
aad
iret
mov
roll
dec
jmp
outsl
cli
xorl
sub
xchg
pop
hlt
push
jbe
not
rcl
scas
xchg
dec
aad
subps
sub
pop
xor
movsl
sbb
push
movsl
mov
xchg
test
sti
mov
push
jno
push
fdivl
dec
mov
fdivrl
jp
add
pop
jle
adc
test
gs
mov
adc
jp
roll
aam
cli
cmp
xchg
iret
out
and
fsubrl
addl
inc
mov
and
push
add
popa
cmp
imul
dec
test
fadd
add
iret
mov
ret
out
ficompl
pop
lods
jb
fdivrp
movsb
dec
xlat
or
inc
mov
shlb
mov
loop
cmp
cmp
xor
xor
add
aam
ret
add
repnz
aas
mov
dec
and
mov
push
sub
xchg
loope
sarb
mov
pop
cmc
sti
scas
add
int
mov
std
mov
clc
pop
push
adc
je
rcr
ja
push
jecxz
lock
or
mov
or
scas
xchg
jno
xchg
into
imul
add
cmp
pop
sbb
mov
cs
pop
or
mov
cmpsl
xchg
stos
mov
lea
cmp
jmp
sahf
jno
push
stos
mov
dec
sbb
sub
faddl
enter
mov
xor
sbb
mov
fimull
and
cmp
cmp
ja
sbb
sub
ret
aaa
ja
call
inc
jb
mov
and
mov
push
or
mov
or
orb
push
lcall
je
pusha
xchg
dec
cmpsb
xchg
dec
jo
leave
mov
sti
pop
popa
xor
lcall
sar
call
mov
xchg
jl
call
push
add
inc
out
int
daa
es
push
scas
lods
sub
and
insl
mov
mov
aad
in
dec
test
dec
daa
scas
imul
sub
or
mov
cmp
lahf
and
lret
mov
xor
jecxz
mov
pop
xchg
mov
jbe
push
sti
incl
loope
jb
push
stos
test
mov
andb
mov
cwtl
cmp
pop
rol
mov
jae
out
xor
mov
xor
cmp
add
xor
or
in
gs
outsb
fcmovne
scas
mov
ret
inc
mov
test
imul
test
int3
shlb
or
insb
push
mov
or
lret
fsubrl
xchg
xchg
sub
loop
out
loope
not
mov
push
movl
call
and
push
jbe
push
ret
jno
add
inc
fcoml
popf
daa
inc
push
inc
punpckhbw
sarb
shlb
push
out
imul
push
mov
jge
mov
movsb
jb
dec
je
aas
mov
jecxz
xor
scas
imul
aam
jmp
popf
popa
or
xchg
and
pop
inc
jns
add
jnp
mov
sub
fldl
add
in
mov
jg
and
xchg
pop
rorl
lcall
lds
icebp
mov
mov
mov
pusha
add
bound
adc
test
cwtl
sub
loopne
dec
cmp
sub
stc
inc
dec
cli
adc
mov
mov
cltd
jmp
dec
sbb
repnz
out
push
in
mov
xor
je
xor
cltd
cmp
push
jl
shl
xor
lock
call
push
pushf
icebp
and
out
scas
aam
ja
cmc
jle
xchg
sub
lahf
pop
les
cmp
lcall
out
jbe
leave
and
test
ja
iret
jl
aam
jns
flds
push
in
popa
cmp
insl
imul
mov
stc
inc
mov
push
lods
sbb
push
sub
lds
fsubr
mov
and
inc
jecxz
xchg
aad
jmp
cltd
cmp
add
push
and
js
sub
pushf
sbb
mov
jmp
xor
jno
sahf
xchg
test
enter
jnp
into
sbb
movl
je
push
push
xchg
inc
pop
add
xor
xchg
xchg
in
xor
dec
sub
inc
xor
jo
mov
jecxz
stos
lods
xorl
lds
data16
pop
sub
cltd
fbld
inc
hlt
fbld
fstps
cmp
push
sbb
pop
pmuludq
push
pop
daa
sarb
adc
dec
fucom
inc
jmp
jne
jecxz
call
cmp
or
inc
or
stc
push
mov
rclb
or
gs
cmp
push
push
sbb
inc
xlat
adc
inc
jnp
fwait
xlat
rcll
sub
and
outsb
in
dec
pusha
jnp
mov
xchg
loop
xor
xchg
cli
pop
pop
xchg
inc
dec
imul
test
jl
lods
pop
xchg
data16
mov
push
or
xchg
bound
arpl
ss
out
mov
ss
cs
mov
cmpsb
call
jg
push
sbb
inc
cld
aam
daa
jg
inc
lods
inc
or
jecxz
jo
inc
outsl
test
add
push
xchg
lret
pop
iret
jge
mov
mov
into
cmp
not
call
jecxz
cli
jbe
push
dec
in
nop
int3
sbbb
and
mov
int3
rcl
leave
xor
dec
or
data16
nop
and
int3
dec
stos
shlb
les
sar
jno
dec
dec
jno
mov
xchg
pop
mov
push
loopne
push
dec
pop
in
movsb
jbe
mov
mov
push
push
data16
lcall
cltd
xlat
out
and
jmp
xor
test
and
mov
int
and
xorl
mov
mov
mov
cmpsl
outsl
mov
mov
test
aam
xor
fnstcw
mov
inc
out
add
cmpb
pushf
pop
pop
imul
fwait
push
repnz
fcomp
mov
dec
in
and
mov
dec
out
mov
addr16
dec
dec
sub
fistpl
ret
rcll
pop
js
xor
push
shll
and
add
cltd
pop
out
loopne
bound
cmp
push
mov
cmp
cmp
leave
in
jno
jne
sub
mull
mov
leave
pusha
cmp
sbb
inc
bswap
cmp
cmpsl
aas
scas
lretw
xor
gs
mov
adc
xchg
jecxz
fcmovb
scas
movsl
inc
cmp
xchg
inc
xor
jnp
repz
lret
jo
popa
or
mov
dec
add
jl
lock
mov
push
mov
icebp
xchg
into
mov
lcall
sbbl
add
js
pop
mov
out
out
loopne
dec
push
mov
add
fwait
jl
sbb
push
bound
adc
cwtl
scas
sahf
mov
pop
xor
push
add
xchg
push
or
cs
or
xor
inc
pop
mov
sub
jbe
rcrb
into
ss
out
sti
shll
pop
adc
stos
or
test
test
xlat
outsl
addr16
or
push
xchg
add
fsubrl
je
shl
movsb
ret
test
cmp
jns
xchg
dec
pushf
sbb
push
leave
shll
lods
leave
lods
imul
insb
inc
adc
sub
fstl
add
fisubl
mov
push
or
fidivrs
addr16
insl
or
mov
ljmp
pop
and
sub
scas
add
pusha
xor
popf
enter
sub
or
pop
enter
inc
movsb
push
push
addr16
sub
into
inc
inc
dec
and
negb
xchg
adc
and
dec
add
test
xchg
dec
movsb
fmul
sbb
mov
ds
dec
inc
daa
andl
cmp
mov
push
add
fdivr
mov
sub
rcr
xchg
jecxz
xor
sub
leave
xchg
lcall
lahf
addr16
mov
sti
iret
xchg
repz
sub
pop
xlat
scas
sub
xchg
push
cs
xor
push
movb
je
push
cmp
loopne
in
cli
pusha
mov
xor
mov
imul
or
push
mov
ljmp
pop
xchg
jne
stos
xchg
pop
adc
push
inc
shr
push
push
push
or
outsl
xchg
adc
test
sub
cmpsl
xabort
push
lock
push
xchg
jno
ss
cmp
je
test
mov
fmulp
xchg
icebp
into
lcall
jg
shl
nop
jmp
mov
sbb
aas
lea
cmp
ret
sub
int
dec
pop
push
adc
iret
cld
sbb
jbe
fsubr
nop
lock
and
jne
call
not
js
mov
push
stos
jmp
mov
lea
jae
cmp
push
pusha
xor
call
mov
add
push
outsl
mov
pop
fistl
cmp
daa
dec
ja,pt
loopne
push
or
jge
int
test
inc
arpl
test
stos
inc
adc
test
sbb
inc
clc
ljmp
inc
add
sub
jl
sub
mov
dec
std
fisubrl
mov
pop
fsubl
call
jbe
rcr
fistpll
or
loope
and
sub
xor
jbe
add
jo
cmp
sarb
popa
loopne
popf
test
pavgb
mov
lcall
mov
jns
sbb
in
cltd
jb
cmpb
inc
dec
and
pop
xor
insb
or
cmp
pop
pop
aam
stos
cmc
or
adc
lret
out
dec
sbbb
sahf
repnz
inc
sub
lret
pop
aad
fs
mov
inc
lcall
inc
shlb
je
mov
shrb
push
pop
cmp
clc
rclb
cmc
aam
aas
push
ss
adc
inc
arpl
sub
mov
mov
sbb
mov
movl
push
call
jae
push
push
pushf
sub
pushf
lea
call
pusha
pusha
call
cmc
add
pushf
mov
stc
test
pushf
mov
push
jmp
in
sarb
mov
scas
rcl
sub
ficompl
je
jb
cmpsl
inc
pop
ljmp
jl
sbb
mov
aas
fldt
adc
adc
inc
mov
cs
int3
push
add
scas
inc
add
jp
sahf
mov
pop
pop
fdivrs
arpl
push
jl
imul
lods
jae
addr16
fisubl
cmp
push
aam
cmc
mov
call
mov
clc
jl
push
ljmp
push
cmpb
rol
pusha
jl
sub
addl
and
fwait
ret
sbb
jp
pop
xchg
movups
jmp
push
push
lret
rcrl
mov
or
mov
pop
outsl
xor
inc
ret
fwait
cwtl
and
inc
mov
imul
cmp
setg
xor
je
pushf
call
lcall
add
xchg
inc
xor
and
pushf
aam
adc
or
out
gs
jno
sub
and
xchg
xor
cmp
mov
pop
xchg
cmc
push
ja
mul
cmp
pop
scas
gs
jo
sbb
lahf
cmp
mov
inc
std
out
mov
pusha
adc
or
mov
sub
mov
dec
pop
and
mov
jno
icebp
movsl
sbb
leave
shlb
repnz
fsubr
xlat
test
testb
mov
jmp
mov
mov
aaa
push
adc
lods
jbe
repz
cmp
mov
nop
jno
aad
movsb
cmp
and
cmp
mov
push
adc
mov
jb
idivb
adc
in
bound
and
cmp
lds
jge
lcall
mov
sub
mov
xor
imul
push
xor
mov
dec
jmp
loope
gs
in
jmp
adc
fmull
stc
or
popf
xchg
rclb
gs
push
push
in
out
sub
mov
jp
ret
es
jge
and
pop
lods
sti
mov
xchg
jnp
lahf
mov
divl
fldt
fidivrs
push
push
xor
jl
xor
adc
adc
insb
jo
dec
ss
insl
mov
inc
fisubl
mov
sbb
out
dec
sbb
mov
pushf
fcompl
sub
push
les
lods
push
outsb
mov
mov
ret
aad
fwait
inc
xchg
scas
sub
or
mov
mov
jge
mov
cmpsb
pop
inc
pop
out
je
sub
mov
cmp
sub
push
mov
xchg
out
inc
cmp
sub
stos
push
loop
sub
jp
cmpsl
test
pop
jp
subl
into
adcl
into
scas
adc
push
imul
add
stos
repnz
dec
or
icebp
imul
mov
sbb
jo
idivl
inc
ja
mov
xlat
jne
jns
xchg
negb
es
xor
and
ja
pusha
sub
shl
rcr
ror
and
add
add
sbb
ror
mov
ror
mov
clc
bt
pusha
repnz
jmp
pusha
movl
movb
movl
push
lea
jmp
lea
jne
bsr
test
mov
neg
sub
add
shr
call
iret
loope
jg
push
stos
dec
mov
js
push
mov
hlt
mov
in
iret
addr16
jb
cli
out
jle
aaa
add
cmp
or
adc
cmp
movsb
or
push
cld
and
mov
add
add
xor
inc
mov
out
jg
mov
loopne
add
and
ss
jmp
push
ljmp
insb
lcall
movsl
ja
adc
adc
push
sbbl
rclb
add
push
subb
ds
jb
mov
jae
stc
push
cmp
and
ja
dec
dec
jecxz
nop
bound
cs
xor
cmpsl
mov
clc
and
out
out
jo
jo
xor
repz
scas
pushf
cmp
inc
insl
or
jp
sub
popf
out
inc
mov
fisubrs
mov
sbb
ljmp
mov
mov
jecxz
not
sbb
mov
add
push
or
sbbb
iret
arpl
jnp
sbb
xor
lock
mov
jno
sbb
cmp
stc
mov
adc
inc
or
js
es
xchg
sbbl
addb
imul
sbb
decb
ficoms
xor
in
xor
push
cmp
jl
sub
insl
outsl
and
inc
inc
fmull
add
movsb
xchg
and
lods
stos
mov
push
jmp
popf
movl
pushl
pusha
lea
jmp
mov
push
ss
and
arpl
stos
cmpsl
fwait
pop
pop
pop
adc
aaa
insl
jl
dec
or
sub
dec
sbb
cld
pop
pop
or
std
popf
stos
mov
cmp
out
pushf
adc
jnp
rol
dec
pop
sbb
jne
test
inc
addr16
pushf
or
mov
inc
xchg
sbb
jae
insb
hlt
mov
enter
pop
stos
cmpsb
les
inc
and
pop
sbb
lods
mov
out
mov
imul
xchg
lods
fimull
mov
rcrl
sub
xor
push
insl
sub
scas
mov
sbbb
daa
sbb
push
por
subb
insb
test
xor
and
xchg
scas
pop
cmp
push
fistl
movsl
jns
mov
mov
ror
pop
dec
lock
cwtl
mov
leave
f2xm1
jge
test
pop
andl
fstl
push
jl
lcall
movsb
and
mov
fsubr
jno
dec
sbb
and
push
jne
sub
xchg
lret
bound
mov
push
into
test
cmp
jae
addr16
push
jnp
stc
fnstsw
push
fxch
into
dec
jle
out
outsb
inc
cmpsb
sbb
adc
xchg
jp
push
pusha
xor
lods
add
je
and
and
jge
mov
ret
pop
sub
orl
scas
imul
gs
test
addl
push
les
rorb
std
adc
adc
sbb
dec
mov
push
addr16
js
enter
fs
dec
add
outsl
cmp
xchg
inc
inc
jbe
cli
pusha
ss
mov
scas
popf
mov
lcall
add
sbb
or
jecxz
lods
jns
mov
jbe
inc
pop
inc
std
and
fistpll
sti
adc
pop
jo
fstpl
push
pop
stos
pop
fsubl
and
xchg
adc
aaa
lret
repz
popf
addr16
sub
pop
mov
cltd
negl
pop
jns
aad
inc
sbb
fmul
sub
imul
test
in
pop
fidivrs
leave
xor
add
pop
out
mov
xor
in
jl
test
mov
lret
sbb
lret
rol
pop
sub
pop
fists
and
pushf
imul
jmp
addr16
fwait
test
out
xchg
cmp
subb
fisubl
popa
inc
pop
and
stc
movsl
pop
movsl
xor
dec
xor
mov
aaa
push
or
mov
or
insb
cld
cmc
pop
mov
cmp
push
or
and
daa
subl
imul
mov
sbb
mov
cwtl
push
popa
mov
mov
test
push
adc
cmp
mov
lret
sahf
push
or
and
pop
cmp
out
out
dec
dec
fadds
or
ret
rcrl
and
adc
lret
in
cld
inc
dec
and
lcall
loopne
inc
dec
cmp
fs
adcb
dec
pop
aaa
negl
mov
xor
xchg
sub
lods
out
mov
insb
push
cmpsb
mov
ds
dec
jge
xor
iret
mov
sahf
sub
cltd
push
pusha
inc
cmp
movsl
mov
ffree
xor
mov
pop
dec
pop
repz
or
push
bound
out
adc
in
repnz
scas
ds
lcall
ja
fs
je
pushf
add
call
pushf
push
sub
or
dec
cmp
jno
push
in
jle
aam
or
mov
aas
movsb
popa
and
sub
mov
clc
sbb
and
push
dec
loope
sub
push
out
xchg
or
add
out
sub
push
mov
inc
not
push
add
repnz
sbb
inc
pop
cwtl
or
insl
lret
jns
xor
mov
call
sub
lods
test
jo
je
pop
xchg
jge
sbb
es
xor
dec
idivl
mov
repz
push
sarb
sbb
sub
ficompl
mov
ja
stos
test
add
cmc
jmp
aaa
pushf
pop
cmp
mov
cli
lods
mov
clc
rorl
scas
push
pmaddwd
push
data16
test
mov
pop
pop
xchg
shll
xchg
lods
jns
leave
sub
imul
mov
rclb
ss
pusha
jns
push
das
cmp
cmp
fisttpl
jecxz
cmp
call
out
push
mov
jl
adc
or
xor
sbb
cmp
shl
push
dec
cmp
cwtl
xor
add
cmpsb
xchg
nop
cmpsb
push
lret
jle
int3
xchg
mov
aas
movsl
aam
leave
xchg
dec
shrl
push
dec
hlt
lret
cmpsb
jne
push
out
aam
pmulhw
adc
pusha
hlt
push
sub
mov
in
sub
enter
sub
pop
rclb
sub
int3
mov
lcall
addr16
mov
xchg
or
scas
int
outsb
dec
sub
push
gs
int
ljmp
dec
out
lret
and
dec
bound
pop
popf
or
jmp
inc
mull
jns
lahf
out
push
jmp
in
xor
mov
fistpll
mov
movsl
sbb
out
or
push
ficompl
and
add
lcall
or
xchg
inc
mov
jo
stos
into
repnz
add
add
push
push
and
imul
xchg
popl
movsb
movsb
adc
xchg
pop
fs
mov
push
loope
push
fsubrl
insb
outsb
dec
xor
cs
mov
sbbb
outsb
adc
not
xchg
pop
mov
and
loopne,pn
xlat
in
shrb
adc
cmp
xor
mov
jno
aam
adc
mov
imul
push
ret
rorb
divb
test
pop
insb
xchg
mull
mov
xchg
mov
mov
aam
daa
fldl
jge
ss
cmp
inc
ss
jnp
test
adc
adc
daa
jns
gs
xchg
fnstsw
sbb
xchg
xchg
negb
in
ror
mov
loope
dec
and
mov
jecxz
mov
inc
push
xchg
pop
pop
ds
aaa
lock
test
or
into
repnz
loop
stos
push
call
jns
movsb
je
xor
call
lcall
mov
adcl
daa
cmp
cld
add
jae
ret
inc
les
in
movsl
fidivl
mov
loop
subb
pop
pop
cmp
sbb
imul
push
pop
sbb
and
and
orl
pop
mov
pop
insl
dec
add
mov
xchg
mov
mov
shr
bswap
mov
movsbw
bts
mov
add
pushf
setne
bsr
sbb
add
lea
mov
mov
test
test
shr
test
pusha
cmc
cmp
pusha
mov
lea
je
test
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
push
add
pop
iret
stos
outsl
pop
xchg
adc
xchg
cmp
ret
insl
add
cmp
mov
sbb
stc
cmp
fldcw
xorb
sub
outsl
jg
fdivp
xor
sbb
xor
ss
scas
neg
int
push
and
cmp
xchg
pop
mov
mov
orl
out
setp
cmp
lret
call
pusha
mov
push
lea
call
jmp
lds
cli
push
mov
ljmp
mov
arpl
daa
mov
inc
out
jb
fsubrl
sbb
notb
imul
test
lahf
aaa
repz
cwtl
xchg
mov
out
mov
xchg
xor
push
pushf
inc
pusha
cmp
sbb
enter
addr16
dec
mov
sbb
sub
sub
hlt
les
mov
jae
xlat
mov
push
xlat
test
js
push
lods
clc
lods
test
xorb
es
and
test
pop
ja
scas
push
push
push
xchg
pop
fwait
in
mov
mov
repz
adc
bound
pop
stos
in
cmpsb
daa
inc
and
cmp
sub
loope
and
test
lods
filds
scas
pop
mov
and
xchg
jae
ja
push
pushf
iret
mov
push
cwtl
pusha
push
mov
sub
popf
leave
int
dec
dec
lds
sub
lret
push
cmpsb
ja
in
jp
out
fstl
shll
and
push
add
mov
xchg
in
push
sub
jg
adc
lahf
push
fisubrl
loop
mov
sbb
adc
and
stc
add
pop
hlt
mov
rcr
inc
movsb
xor
pushf
dec
sti
xchg
fwait
mov
cmp
mov
push
test
mov
add
pusha
dec
push
xchg
sbbb
adc
icebp
aad
cmp
add
xchg
out
into
sbb
add
cli
inc
stos
aas
add
cmp
incb
cmp
sti
scas
fsubrs
fsubl
shrb
nop
dec
test
inc
repz
imul
add
pop
ss
mov
xchg
out
or
push
push
mulb
push
hlt
and
or
cmp
mull
lock
adc
xor
cltd
push
add
insl
inc
jno
ljmp
mov
aad
jp
adc
jns
dec
push
ret
push
sti
js
dec
hlt
sarb
mov
in
mov
psubusw
cmp
les
in
xchg
imul
mov
mov
jns
arpl
jbe
dec
xor
loopne
clc
faddl
adc
je
test
jl
mov
fwait
sub
shlb
push
jno
hlt
pushf
enter
dec
cwtl
mov
push
adc
add
movsb
outsb
jnp
in
stos
bound
ja
xchg
mov
repz
pop
jle
pop
mov
shlb
xor
jb
enter
sub
cmc
xchg
mov
insb
sub
push
pop
mov
jnp
data16
aaa
aaa
cmp
shl
cmp
sub
aaa
pop
addb
test
addr16
inc
addr16
int
cmpsb
mov
mov
or
shlb
adc
call
push
pop
inc
ret
sahf
fiaddl
jb
jle
outsl
daa
or
jb
out
cmp
jmp
fisubrs
out
mov
fcom
cmpsl
pop
mov
jo
push
jl
mov
cltd
lret
add
adc
cld
in
mov
sub
incb
push
stos
pop
movsb
inc
xlat
jmp
add
push
dec
push
pop
jb
outsb
inc
addb
sbbb
movsl
ret
jno
std
orb
fcoms
mov
push
and
sti
fs
mov
xchg
in
pop
repnz
push
cmp
orb
mov
pushf
mov
xor
jecxz
js
adc
in
mov
push
adc
pop
clc
imul
leave
pop
bound
dec
push
inc
fimull
inc
lods
jbe
mov
dec
fcoml
add
inc
push
es
mov
fs
push
iret
aad
sub
inc
lcall
movsl
mov
movsl
icebp
test
or
bound
add
xor
cmp
push
call
mov
hlt
push
jg
rorl
adc
jo
mov
jecxz
cmp
aad
lea
adc
mov
xchg
cmp
jae
jg
inc
jns
das
ret
pop
push
fs
xchg
push
lea
je
bt
stc
test
add
bt
cmp
pusha
pusha
lea
jb
push
mov
lea
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jmp
mov
not
mov
jmp
stos
pusha
lea
jmp
sub
ja
sbb
jbe
jo
insb
fstl
push
dec
mov
sbb
int3
nop
jl
mov
call
xlat
mov
hlt
pop
fdivr
lods
dec
shl
xchg
adc
xchg
adcb
mov
cmpsb
lds
hlt
push
sub
scas
sub
cmpsb
outsb
negl
mov
sub
add
push
and
mov
mov
divl
dec
insl
mulb
xor
ftst
sub
sub
inc
pop
jne
mov
ficomps
add
test
ljmp
lcall
jp
dec
fidivs
loop
bound
mov
xchg
push
dec
jmp
jmp
loope
xchg
lcall
xor
or
pop
mov
dec
add
and
dec
mov
pop
lret
lds
adc
inc
test
aad
sub
clc
and
pop
dec
and
push
aas
mov
mov
cmp
sahf
mov
or
test
pop
sbb
push
pop
dec
and
nop
lcall
or
aas
or
imul
stos
xchg
jno
mull
imul
mov
pop
jno
roll
xlat
jne
mov
cmc
gs
mov
nop
sub
test
push
mov
mov
mov
inc
jno
loop
imul
dec
inc
out
fisubrl
push
int3
in
ret
insl
out
incl
mov
fwait
pop
in
notb
scas
mov
push
pop
mov
fwait
xchg
pop
sahf
popa
jecxz
mov
pop
sarl
mov
mov
je
dec
shlb
mov
xlat
pop
fdivr
mov
dec
cli
insb
test
sbb
in
lods
push
push
adc
xorb
sbbl
xlat
dec
dec
dec
xorb
pop
sub
adc
sub
sub
lahf
dec
aad
push
loope
and
sub
jge
and
jle
leave
fisttpll
jge
pushf
jae
cmpsl
jl
cmp
stos
jnp
pop
lahf
jge
imul
mov
and
add
je
fldt
pushf
push
rep
movsbw
not
mov
pusha
lea
jmp
lods
das
push
xchg
lcall
repnz
ret
idivb
loop
push
gs
or
outsb
and
mov
shrb
xchg
sahf
jle
jb
daa
fsubrl
mov
mov
loop
xchg
pop
cmp
test
sub
cld
jge
sub
popf
xchg
sarl
cmp
in
popa
jmp
aaa
jne
or
movsl
dec
in
inc
out
xchg
mov
push
call
lea
jae
pusha
jmp
inc
pop
es
lcall
jle
iret
insb
mov
sbb
mov
push
test
or
cmp
pop
mov
push
and
adc
push
test
cmp
pop
mov
add
mov
push
mov
mov
loope
pop
adc
subb
sbb
cmp
lcall
sahf
fdiv
and
ss
jl
xor
in
cmp
fsub
cltd
xchg
lcall
lea
aaa
dec
jnp
mov
jnp
mov
ss
mov
xorl
pop
mov
pop
jge
lods
movsl
jns
and
sar
loope
arpl
cli
ret
pop
shll
cmpsl
insl
jmp
inc
jge
rolb
lods
xchg
lcall
subb
ss
sub
les
push
lods
lcall
mov
stc
adcl
movsb
test
dec
inc
pop
test
jno
into
mov
je
or
hlt
xor
je
and
ds
adc
push
mov
cmp
in
stc
je
cmp
cld
push
push
pop
cmp
loop
fs
cmpsl
and
out
loope
mov
frstor
dec
das
push
xor
iret
pop
sub
dec
xlat
js
scas
ljmp
mov
cmp
dec
stos
scas
sub
ret
gs
jmp
fnstcw
gs
aad
aas
pop
out
push
xchg
inc
pop
sbb
cld
dec
sub
jle
xchg
sub
out
movsl
cmp
dec
shrl
cli
mov
iret
jg
pop
cmp
mov
xor
pushf
mov
inc
sbb
xchg
push
fimuls
jl
test
loop
ss
jne
or
imul
insb
jne
jbe
dec
lods
add
mov
and
movsb
jp
lock
ljmp
sar
iret
xchg
lcall
pop
stos
jnp
jae
jae
sub
bound
inc
ror
icebp
and
fs
cld
xchg
fs
in
loop
ljmp
nop
adc
cmp
or
test
js
jnp
jno
js
push
fldl2t
add
and
xchg
sbb
adc
popf
mov
loopne
lock
cmp
inc
faddl
mov
jb
push
insb
iret
mov
push
cmp
into
inc
lods
and
mov
pop
add
scas
jg
push
repz
xor
adc
or
adc
daa
jne
adc
fwait
xor
call
repz
es
mov
stc
push
neg
lea
je
dec
call
setnp
push
mov
movb
pushl
call
lea
jne
movsbw
mov
pushf
cmp
stc
cmp
pusha
lea
ja
pusha
pop
mov
jmp
lea
add
stc
jmp
push
pusha
movw
movl
movl
push
lea
jmp
adc
fs
lcall
scas
inc
sub
add
pop
xor
inc
xchg
nop
test
cltd
inc
into
jo
mov
cmp
out
pop
or
and
mov
jge
pop
hlt
jbe
xchg
jne
leavew
jl
fs
fs
dec
mov
dec
cmp
movsb
adc
cmp
pop
movsb
push
lods
popf
pop
jle
movsl
xor
pop
jno
sti
jb
pop
dec
scas
pop
and
repnz
adc
xchg
test
mov
arpl
push
call
mulb
sbb
mov
aaa
push
lods
mov
xor
bt
sub
pushf
test
test
cmp
not
mov
jmp
jne
sbb
mov
jp
pop
push
pop
data16
mov
out
in
mov
fmuls
pop
cmpl
imul
or
push
ljmp
and
leave
mov
dec
mov
inc
data16
adc
test
cmpsb
or
lods
imul
test
sbb
js
test
mov
pusha
inc
inc
push
jp
popa
out
pop
es
sti
stos
cmpsl
jl
push
add
ds
mov
cwtl
jl,pt
xchg
pop
daa
in
cmc
sub
adc
lcall
inc
stc
gs
sbb
pop
lcall
or
sbb
or
pusha
sbb
xor
mov
xor
pop
or
push
jae
imul
jne
pop
pop
jg
cmpl
daa
jnp
xor
or
inc
cmpb
data16
jmp
jns
sub
jns
fldenv
mov
sbb
sarb
xchg
push
repz
lock
gs
test
inc
xorb
std
mov
push
inc
push
push
sbb
sub
fmull
das
and
addr16
mov
fsubrl
cmp
aaa
dec
adc
in
in
xor
and
xlat
in
jae
and
lret
mov
push
daa
fbstp
jnp
mov
jg
pop
inc
add
loop
andl
push
mov
movsl
aaa
push
or
pop
lret
inc
cmc
xchg
cld
lcall
shll
mov
std
lods
pop
jmp
mov
dec
out
rclb
popf
pop
hlt
sub
aam
and
mov
iret
cmp
test
test
push
lahf
mov
leave
push
mov
jno
icebp
pop
jb
mov
cwtl
mov
push
out
hlt
jb
out
add
xchg
mov
lods
cs
std
call
pop
inc
cmp
sbb
roll
inc
sbb
push
adc
mov
pop
ret
pop
repnz
mov
pusha
dec
xor
mov
clc
fldpi
pop
mov
lock
xchg
dec
xorl
aam
lea
dec
xor
pop
mov
adc
cs
and
clc
dec
push
fimull
mov
jge
dec
sub
fsubrl
mov
xor
outsl
int
xor
lods
adc
lods
jne
pop
lods
xlat
cltd
lcall
cltd
lcall
rcrb
ror
mov
call
inc
outsl
xchg
add
jg
cmp
js
das
push
push
das
lock
dec
pusha
sti
mov
add
xor
mov
loope
fdivs
out
pop
sti
fiadds
repz
jns
in
mov
xor
xlat
ret
add
mov
sbb
push
sahf
dec
jb
push
xor
adc
add
insl
xor
pop
xchg
dec
fistl
fs
call
pushf
pusha
movw
jmp
mov
dec
cltd
lcall
repz
push
scas
mov
xor
test
ret
xor
stc
shr
pop
and
test
in
pusha
pop
jo
sbb
mov
push
in
sub
mov
xchg
or
dec
and
mov
loope
daa
or
dec
pop
scas
mov
loop
inc
mov
jo
pop
repz
shr
fldcw
push
push
int
cli
scas
lds
mov
jmp
or
inc
pop
pushf
daa
out
or
pop
push
push
lods
vpaddsw
mov
aad
std
and
fldt
or
scas
hlt
and
out
and
xlat
movsl
lret
add
xchg
mov
dec
or
sbb
clc
hlt
xlat
cltd
xor
iret
cwtl
cmp
xor
ds
mov
xchg
cmp
and
es
enter
push
stos
ljmp
dec
test
pushf
mov
pushf
not
bswap
mov
lea
bswap
mov
pusha
pushf
pushl
ret
cmp
pusha
call
sahf
mov
lcall
and
and
sbb
and
push
jnp
jl
add
inc
jg
int3
aam
sub
int
cmpsb
dec
add
repz
loopne
ja
lret
push
divps
cmp
outsl
loope
stos
outsl
divl
pop
insb
inc
lcall
ljmp
enter
xlat
out
sub
shrl
push
pop
ficoms
scas
push
int3
lods
sbb
mov
cmpsb
mov
adc
je
int
loop,pt
xchg
pop
adc
pop
fwait
lcall
push
xor
xchg
data16
and
inc
jo
pop
mov
int
pop
adc
mov
dec
into
pop
pop
push
pop
xchg
gs
addr16
je
js
cli
setnp
stos
cld
sub
stos
iret
les
cmp
and
test
fwait
xchg
xlat
sbb
xor
arpl
mov
sti
fdivs
or
add
out
jns
push
push
in
adc
or
xor
insb
loop
add
add
aad
cli
int3
mov
lcall
xchg
fistpl
fwait
aas
sbb
fcoms
jle
dec
repz
mov
ret
sub
sbb
fsubr
gs
outsb
out
stos
dec
mov
call
pusha
xor
popf
loope
js
xor
outsl
jge
adc
adc
xchg
push
pop
push
xchg
test
inc
mov
aaa
data16
cwtl
xor
pusha
ljmp
inc
sbbl
rolb
push
add
push
inc
sbb
ds
push
sbb
pop
das
sbb
lret
xchg
xchg
xor
pop
stc
in
inc
scas
mov
push
adc
inc
inc
push
inc
push
dec
xor
cs
insb
add
in
xchg
pushf
lcall
daa
sub
sarl
add
push
mov
xor
lea
dec
lds
push
lret
sbb
xchg
fwait
xchg
addr16
repz
pop
testl
xchg
pop
push
jge
xorb
add
out
xchg
adc
nop
mov
lcall
xor
repz
sbbb
sahf
dec
in
jne
cs
mov
out
mov
mov
cmp
mov
ljmp
pushf
repnz
push
cmp
insb
adc
xchg
inc
sbbl
idivl
outsl
imull
pop
inc
cmp
pop
rcll
or
iret
mov
loope
jle
imul
mov
repz
adc
add
leave
in
int
push
pop
fldl
lcall
push
gs
movsl
jnp
mov
repz
jg
dec
repz
sub
xor
dec
divb
ja
stos
aad
lcall
lea
mov
inc
mov
rcrb
std
and
or
lods
jmp
std
and
pop
in
insb
cmp
push
daa
or
push
jo
mov
inc
test
mov
cwtl
out
lds
sub
sbb
nopl
inc
or
and
fsts
inc
stos
or
popa
dec
mov
and
loopne
outsb
out
jmp
std
in
mov
ds
repnz
insb
gs
int3
mov
dec
stos
mov
movsb
rol
ret
cmp
jecxz
out
sbb
aam
dec
pop
dec
hlt
or
mov
cltd
push
or
push
inc
popf
xchg
in
pop
lds
push
inc
sbb
in
rcll
and
mov
rorb
dec
outsl
popa
fs
imul
add
shrb
fisttpl
aam
lcall
jae
call
sarb
ret
xchg
pop
lahf
lret
daa
jnp
sub
lret
cmpsl
popf
jg
dec
fadd
fimuls
push
inc
in
xchg
inc
out
add
cltd
cli
mov
fadd
jge
imul
cmp
adc
movsb
add
dec
or
test
mov
fs
rolb
cld
repnz
push
pusha
cmpsb
cmpsb
dec
jbe
push
xor
xor
cs
insb
add
clc
sub
bt
push
sub
jge
test
cmp
call
ret
mov
and
mov
pushl
daa
iret
fnstcw
push
dec
sub
test
data16
xor
sahf
inc
ja
xchg
mov
ss
sbb
aaa
dec
cmp
ficoml
scas
pusha
ror
xor
mov
ss
aaa
mov
psubusw
xor
into
mov
cmp
or
rep
sbb
es
cmp
xor
adc
scas
xchg
or
mov
mov
leave
lods
cmp
icebp
and
in
aad
sbb
jmp
dec
mov
pop
push
ret
or
push
repnz
mov
jo
pop
and
popa
jno
ficomps
sub
pop
inc
sbb
add
xlat
cmp
test
movsb
movsb
and
or
add
xor
test
dec
ret
sbb
addr16
fs
jl
pushf
movb
rol
pusha
call
imul
in
data16
scas
xor
adc
movb
and
dec
into
jnp
add
push
or
dec
pop
adc
rol
int3
cmp
push
xor
int3
jge
outsl
aaa
test
mov
adc
cmpsl
jmp
or
imul
sbb
notl
cmc
and
inc
pop
and
mov
or
xor
in
rclb
and
jns
out
or
inc
cmp
dec
dec
xchg
std
stc
movsl
leave
mov
and
rorb
mov
fistps
mov
xchg
inc
out
push
jle
mov
push
int
cwtl
adc
xor
addr16
rclb
sub
ret
or
shrb
ss
popf
xchg
outsb
jo
sub
jne
jle
cltd
jae
mov
xorb
push
out
hlt
pushf
push
jp
dec
sahf
outsb
imul
mov
aad
mov
or
sbb
push
push
ret
cld
or
inc
pop
pop
loopne
mov
fsubr
jmp
fs
push
cmpsb
inc
jo
xor
int3
sbb
lret
filds
pop
sbb
aam
sbb
cli
pop
sbb
clc
rclb
push
mov
add
ficoms
and
dec
insb
loop
cmp
and
cmpsb
jl
out
jae
inc
std
sti
dec
xchg
pop
xchg
cmpsl
or
cltd
data16
loopne
sub
mov
add
shrl
fistl
adc
push
pop
xchg
enter
mov
dec
sbb
ret
jnp
scas
lds
loopne
cld
test
out
mov
push
mov
lret
jle
clc
popa
and
fs
rcr
setae
push
movsl
sahf
push
imul
cltd
xor
cmp
add
jge
jmp
in
jecxz
mov
dec
jnp
inc
lret
or
pop
add
into
mov
lcall
mov
lds
cltd
int
int
and
daa
dec
dec
add
scas
jbe
in
rcrb
loope
iret
cmp
testb
jmp
insb
sub
popf
ret
add
inc
add
sbb
add
das
lcall
sti
dec
jecxz
or
ds
dec
aam
xor
push
xchg
arpl
aas
push
mov
fxch
sub
mov
cmp
inc
sbb
mov
push
daa
repz
sbb
pop
jnp
lret
and
push
and
lock
pop
or
in
aad
inc
adc
add
cmp
repnz
aas
mov
das
inc
aam
jp
and
outsb
or
pop
fnstcw
add
js
cli
repz
xchg
and
js
xchg
scas
test
jns
daa
les
insl
int
in
add
dec
push
in
outsb
and
jmp
jl
cmp
mov
ss
push
aam
xchg
ja
cmp
popf
mov
pop
add
in
frstor
and
push
push
xor
xor
fs
insb
add
scas
shll
adc
add
lods
add
into
ja
dec
orl
cltd
mov
shll
or
movsl
push
mov
add
mov
and
cwtl
jge
and
push
test
mov
fiaddl
cmpsl
or
xorl
dec
or
xchg
push
add
les
and
mov
subb
int
in
shlb
shll
leave
fwait
or
lret
mov
rcll
bound
jecxz
pop
pop
and
iret
adc
ljmp
ret
mov
mov
out
outsb
loop
or
mov
mov
and
dec
xor
sahf
push
repz
add
add
mov
mov
das
ds
sub
add
test
stos
cmpsb
ficoml
pop
movl
and
ror
cltd
pop
ljmp
in
mov
push
add
dec
xor
in
pop
jns
test
sbb
cmpsl
dec
leave
outsl
inc
jecxz
inc
data16
jne
lea
push
jmp
pushf
pushf
lea
je
cmp
stc
add
call
fdivp
movsl
lcall
mov
cmpsl
fwait
out
xor
or
fdivs
dec
push
negb
ficomps
push
pop
mov
xor
mov
add
sub
lods
jae
dec
push
inc
stos
mov
inc
ljmp
jbe
adc
fwait
push
adc
lods
push
iret
jecxz
mov
test
ret
add
cld
cmpsl
shlb
xchg
adc
pop
cld
push
adc
repz
push
insl
repz
daa
int
sub
jno
jnp
sub
or
lcall
mov
mov
add
and
dec
push
jnp
testl
out
inc
pop
aas
out
cmpsb
and
and
out
xchg
mov
and
add
loope
jmp
test
data16
adc
stos
push
hlt
push
in
test
dec
cmp
insl
test
pop
pop
ja
je
mov
lcall
lret
sahf
bound
jle
add
push
inc
jecxz
fnsave
mov
pop
mov
jmp
push
fcompl
pop
ds
sub
insl
xlat
sub
mov
xor
xchg
xchg
stos
sahf
jnp
jae
mov
inc
fisttpll
aaa
sub
ret
mov
pushf
cs
loopne
das
sub
and
popf
xchg
xor
xor
push
es
cmpsb
mov
dec
stos
jnp
in
dec
ss
push
lods
mov
inc
sub
rolb
inc
pop
out
ss
pop
cmp
adcb
enter
mov
xor
push
and
adc
and
in
sti
cmp
xchg
jecxz
mov
inc
scas
push
push
xchg
push
xchg
out
adc
mov
icebp
pop
dec
adc
jo
cmpsl
xchg
iret
jns
adc
add
sub
sbb
xor
mov
xor
mov
sub
jnp
inc
and
and
ljmp
cmpsl
lcall
inc
mov
jb
sub
out
dec
inc
mov
jns
dec
adc
xchg
xchg
pop
sub
mov
jo
fsubs
sbb
and
xlat
ret
js
aam
test
fwait
xor
in
stc
jge
jo
aas
xchg
test
xor
cmp
lds
add
movsl
lcall
adc
ja
jne
in
mov
or
arpl
out
fwait
sub
xlat
sbb
pop
xchg
jmp
pop
mov
es
int3
or
js
or
dec
or
dec
cmp
cmp
pop
pmuludq
xchg
xchg
sbb
test
aas
inc
mov
add
cmp
xlat
jmp
push
arpl
push
dec
lods
ror
test
jmp
xchg
mov
add
lea
cltd
lods
fbld
sarb
inc
jbe
fwait
mov
pop
adc
jne
aas
outsb
into
lretw
sbb
shr
inc
leave
aas
clc
ret
xchg
hlt
cmp
xchg
ret
push
jb
and
repz
out
sub
js
stos
lcall
sub
sti
mov
das
mov
inc
push
cmp
lret
scas
push
mov
inc
pushf
mov
add
bound
pop
movsb
cmpsl
ja
popf
push
orl
shrb
cmp
mov
bound
or
ja
lods
jl
lea
pusha
std
dec
andw
jg
and
jne
sti
hlt
fdivrl
imul
mov
add
xor
add
js
push
out
mov
pop
xlat
repnz
adc
loop
jge
dec
push
sub
mov
lcall
lods
aas
in
xchg
ds
pushf
test
cmpsb
mov
push
jb
jp
fimull
dec
dec
scas
xlat
mov
push
xor
incl
xchg
add
xor
sbb
or
push
push
lods
jp
add
jmp
cltd
xchg
cmp
add
pop
xchg
test
xlat
aaa
push
loopne
mov
mov
sbb
xor
inc
xchg
jb
mov
push
sub
inc
out
xchg
jp
or
shrl
hlt
cli
mov
add
add
and
jl
or
adc
stos
lcall
cmc
test
movsl
test
inc
xchg
add
imul
jne
popf
inc
out
lods
hlt
push
add
call
mov
and
cmpsl
arpl
cmp
test
add
and
sbb
adc
aaa
or
stos
subb
clc
sahf
lods
bound
push
sbb
push
adc
into
mov
lcall
cmp
cmp
inc
in
aad
faddl
outsl
jl
dec
push
dec
dec
adc
mov
pop
xchg
and
in
cmp
repnz
addr16
cmpb
adc
leave
jl
leave
setnp
or
inc
lods
xchg
ret
jmp
mov
sbb
imul
add
js
xor
jnp
pop
fisttpll
fiadds
outsb
xchg
aas
mov
mov
xlat
dec
out
jne
cmpsb
xor
sbb
out
sub
jg
lea
popa
push
cli
pusha
mov
inc
and
fs
adc
lea
push
pusha
pushl
ret
ljmp
jae
sub
mov
mov
bound
jns
pop
push
js
cmpb
xchg
addb
into
in
pop
and
dec
add
cli
sub
cli
stos
mov
xor
sbb
push
in
mov
jo
mov
pusha
out
cmp
fsubp
or
mov
loopne
in
pusha
inc
pop
xchg
das
sahf
outsb
scas
push
push
imul
je
jb
gs
gs
fs
imul
lcall
add
mov
stc
in
shll
dec
xor
sbb
ret
test
jne
and
lods
mov
sbb
jo
clc
xor
nop
insl
xorl
outsl
into
xor
fnstsw
mov
aaa
stos
cmpsb
fsts
sub
dec
adc
fwait
push
jbe
inc
mov
cmpsl
add
cmp
add
mov
daa
test
jge
xor
and
mov
out
sar
rorb
mov
cmp
push
pushf
movb
pusha
lea
jb
pushf
lea
jmp
popf
scas
shrb
push
dec
mov
sbb
data16
add
iret
std
cltd
testl
or
xchg
fs
loop
push
mov
ljmp
int
repnz
js
jb
mov
cmp
or
push
and
fdivp
jno
adc
ss
mov
push
lahf
cmp
adc
xor
jg
rol
gs
add
inc
cltd
aaa
gs
repnz
call
lods
lcall
cmpsb
rclb
jbe
lcallw
inc
out
xchg
repnz
outsb
dec
test
in
movsl
mov
es
jecxz
pop
stos
repnz
or
cmc
out
mov
sarl
mov
xor
mov
cmc
add
enter
int3
push
push
push
and
daa
mov
sub
cmp
cmc
jnp
in
mov
nop
sub
inc
pusha
push
add
push
jns
jp
repnz
jb
pop
data16
shlb
xchg
sub
or
adcl
mov
mov
subl
sub
std
pop
mov
insl
insl
push
popf
jo
push
shr
shrl
or
rorb
adc
jb
mov
pop
sti
popa
mov
insl
repz
xlat
sub
shl
lcall
inc
not
xchg
add
aad
and
lahf
mov
cmc
jmp
out
jo
scas
lcall
not
aas
sbb
dec
testl
cmp
add
movsl
mov
aaa
out
int3
jb
es
aam
lock
inc
cmp
dec
mov
out
dec
xor
add
incl
sbbb
adc
pop
pop
xchg
cmp
push
icebp
or
xor
ret
cltd
xchg
fucomp
lret
test
pop
int
into
les
incl
mov
push
ja
pop
jecxz
sub
dec
fwait
pop
push
cwtl
add
out
pop
imul
inc
sub
aas
cwtl
dec
inc
push
dec
cmp
xchg
lods
push
aas
mov
cmpsl
movb
clc
loop
gs
in
scas
cli
ljmp
push
cmpsb
inc
outsb
les
mov
cs
inc
or
dec
les
pop
cmp
loop
mov
push
push
dec
inc
dec
dec
xor
cs
insb
add
sub
nop
or
rorb
mov
xchg
lock
mov
hlt
sub
xor
add
or
stos
sub
mov
adcb
sub
jmp
cmpsl
fs
insb
int
sbb
mov
mov
cmpsl
ja
test
mov
int3
movsl
and
mov
push
stos
sub
and
movsb
ljmp
test
jmp
call
mov
arpl
mov
mov
or
push
aad
dec
inc
mov
lock
cmpsb
push
or
push
mov
roll
inc
xorb
jns
mov
lret
out
dec
mov
pop
stc
mov
cmc
inc
enter
pop
stos
sbb
mull
xorl
call
iret
scas
mov
les
sub
mov
vdivsd
mov
xchg
clc
sahf
dec
mov
iret
sub
sub
add
jmp
sub
data16
push
sub
fldln2
cmp
adc
dec
sarb
test
pop
mov
sub
das
out
xor
mov
gs
ret
cmp
movsl
jge
mov
sub
mov
popa
pop
stos
insl
in
xchg
aas
aas
sarb
jmp
ffree
sub
sbb
inc
pop
jl
lea
popa
scas
jge
mov
and
clc
mov
mov
push
scas
inc
test
mov
mov
push
test
push
push
or
test
xchg
inc
inc
in
inc
pop
mov
sbb
aam
mov
cmp
fwait
cld
adc
rolb
test
mov
sub
loope
mov
sbb
faddp
jns
xchg
push
pop
xchg
sbb
add
ja
rorl
sti
leave
scas
pop
xchg
pushf
mov
in
adc
fs
push
int
stos
sahf
sbb
stos
jle
sub
test
mov
scas
cwtl
daa
popf
jns
cmp
icebp
out
shlb
or
outsb
movsb
test
fcompl
xchg
mov
mov
idivl
movsb
ret
pop
ror
daa
push
loopne
dec
fsubr
or
xchg
mov
push
push
call
adcb
imul
xchg
mov
lds
out
xchg
jnp
imul
movsl
mov
dec
pop
dec
sbb
inc
ljmp
aaa
inc
ret
jne
movsb
pop
push
push
dec
xor
cmp
xlat
dec
stos
mov
in
mov
cmp
sbb
xchg
into
pusha
jo
pop
aad
pushf
mov
pop
mov
sahf
out
addr16
testb
push
call
ret
mov
test
lahf
inc
xchg
stos
inc
lods
push
out
out
insb
mov
pushf
pushl
pusha
inc
pushf
jmp
and
xorl
push
jno
and
jge
xor
cmp
cmp
in
mov
rorb
iret
fldt
cmc
ss
jl
in
out
mov
pushf
gs
lahf
dec
pop
dec
jo
sti
into
mov
cmp
out
xchg
mov
add
imul
fisubs
test
lock
pushf
rol
movb
pushf
inc
push
pushw
popfw
movb
movw
inc
push
pusha
adc
movb
pushl
ret
sbbl
lcall
dec
hlt
test
cwtl
cmp
test
cli
sub
push
clc
pop
cmp
xor
movb
and
into
enter
adc
jne
sbb
xor
mov
push
lret
loopne
xchg
out
dec
xor
movsb
imul
and
in
test
push
popa
inc
imull
xchg
je
dec
addr16
lods
jl
xchg
sbb
test
pop
add
ljmp
cmp
flds
adc
arpl
outsb
vmread
mov
call
add
push
push
dec
outsl
je
data16
arpl
inc
add
add
je
outsl
fs
gs
imul
add
test
lods
jmp
shrb
rorb
loopne
sub
mov
or
add
or
clc
test
shl
mov
cmc
test
push
jmp
mov
mov
push
fucom
jno
inc
xor
sbb
cmc
dec
mov
cmp
ficoml
adcl
fistl
daa
popa
xor
mov
repz
mov
sbb
inc
ss
cmp
in
mov
popf
sbb
fs
test
push
cmp
pop
mulb
les
dec
cmp
mov
test
shlb
lea
jg
pushf
lea
jne
setnp
not
push
pushfw
popw
rcl
neg
mov
stc
neg
call
inc
loope
mov
push
inc
sub
pop
fadds
mov
int3
pusha
movsb
cmp
rolb
cltd
rorb
add
sbb
mov
rcr
cmp
jns
inc
out
add
adc
lods
add
mov
mov
inc
in
outsb
push
add
xchg
mov
mov
sbb
pop
cli
rcrl
lock
daa
mov
fstps
mov
and
aaa
mov
push
cmpsb
mov
bound
dec
ds
adc
rorb
aaa
add
and
enter
pusha
out
cli
call
sarb
xor
aad
int
cmp
sub
aaa
jae
shr
lock
mov
fisttpl
jg
pop
mov
insb
mov
les
mov
jmp
pushl
xor
idiv
push
xor
fcmove
les
push
push
leave
dec
jns
jmp
bound
imul
lock
cmp
xor
sbb
clc
mov
insb
push
imul
fstps
lods
in
lds
insl
addr16
gs
pop
xchg
xchg
stc
xchg
dec
out
jg
inc
xchg
lods
fdivp
lret
enter
mov
add
loop
data16
mov
jns
add
cli
adc
inc
repnz
xchg
bound
out
mov
cli
out
gs
popf
aas
inc
mov
push
mov
add
stos
es
jo
sbb
adc
iret
loope
shl
add
jae
mov
dec
cld
xchg
add
xchg
test
xor
lock
int3
in
jne
push
mov
mov
ret
repz
movsb
movsb
mov
lock
push
adc
fisubrl
mov
sti
js
gs
sub
mov
cmp
pusha
nop
mov
cli
iret
sbb
icebp
cli
dec
ds
mov
data16
xchg
pop
lcall
lahf
sbb
scas
shlb
and
ret
data16
sbb
adc
jge
imul
cltd
pop
fstpt
fidivrs
pop
ficoms
mov
jne
xchg
add
pushf
dec
mov
cs
nop
cmp
xchg
dec
cmpsl
aaa
inc
aaa
dec
mov
push
jmp
loop
mov
push
sub
inc
dec
sbb
dec
pusha
insl
outsl
js
and
outsl
pushw
inc
loop
jne
xor
leave
iret
out
mov
mov
mov
in
aam
insb
loop
jge
inc
xlat
or
lret
jno
lea
sets
loop
scas
shlb
loop
mov
stos
movb
bound
xor
ljmp
mov
adc
xorb
push
mov
lahf
aaa
pop
icebp
scas
fcmovu
adc
jge
mov
xchg
push
je
arpl
adc
lea
cmpsl
fs
loop
aas
daa
lea
cltd
pop
push
lret
imul
notb
add
ds
lock
std
std
xchg
outsl
popa
mov
ret
jl
jno
lret
into
cmp
mov
pop
insb
ss
dec
lahf
mov
popa
js
inc
frstor
aam
push
rolb
shll
adc
test
fwait
jno
into
addb
movb
push
push
scas
add
out
sahf
iret
ret
mov
insb
sbb
dec
fnstsw
jno
xor
push
cmp
bound
cmp
ds
popf
xchg
rol
mov
and
sub
fnstsw
xchg
lahf
clc
imul
add
lods
sahf
pop
sbb
jo
mov
pop
shll
ret
shlb
or
repz
rol
xor
xchg
int3
lcall
dec
cmpb
cmpsb
sti
movsl
jle
mov
in
xchg
jb
push
lret
add
or
jp
imulb
cmpsb
dec
or
sbb
adc
mov
fimuls
xor
sbb
dec
and
jb
es
xor
xchg
mov
cmp
mov
xchg
adc
jnp
aam
pop
cld
xlat
push
pop
addr16
cmp
lock
hlt
cmc
fwait
jnp
mov
std
outsb
rcrl
mov
mov
cmp
repz
mov
in
fldl
cmc
or
test
add
or
ja
jge
mov
pusha
les
lea
pushf
lea
call
pusha
pushf
movb
adc
pushf
lea
jb
jae
pusha
push
pusha
lea
jne
push
push
call
popa
add
or
mov
jbe
mov
mov
inc
mov
mov
inc
out
idivl
inc
cli
dec
rclb
sbb
shrl
mov
add
mov
insb
pushf
cmp
xor
mov
pop
neg
dec
inc
cltd
inc
mov
mov
dec
dec
sahf
and
add
data16
bound
inc
sbb
lcall
divl
jp
pop
pop
rcr
mov
mov
out
jo
inc
roll
xchg
icebp
add
push
pop
fisubs
add
mov
loope
sbbw
aam
cmp
repnz
out
ljmp
sub
pop
call
mov
sbb
test
push
add
cmp
add
in
add
jo
adc
fcoml
leave
pop
add
int3
lods
add
repnz
mov
rcl
imul
imul
or
add
xchg
cmpsb
add
cltd
nop
xlat
pop
repz
sub
xor
sbb
mov
sar
in
lret
stc
push
jle
add
pop
push
adc
adc
popa
cmpl
sub
cld
mov
dec
xchg
add
cmp
test
data16
scas
std
rolb
jae
notl
push
lahf
daa
push
fs
sub
add
fcomps
pop
lret
cmp
scas
mov
dec
ljmp
jo
ret
out
xor
repz
and
shl
inc
add
xorl
arpl
mov
add
dec
ret
jp
pusha
mov
inc
xor
add
jle
rolb
pop
imul
lret
neg
out
push
cmpsb
arpl
icebp
data16
sub
fsts
popf
dec
lcall
push
out
jb
ss
add
lds
add
pop
mov
add
xchg
sbb
xchg
sub
inc
inc
mov
add
and
push
push
leave
sub
jne
sbb
hlt
aad
add
cmpsl
sbb
mov
mov
dec
scas
push
test
add
fsubrs
add
enter
mov
cmpsl
ljmp
insl
repz
daa
sbb
nop
and
aaa
jge
push
jns
jecxz
sub
sarl
or
fcmovnu
or
popa
cmp
or
inc
mov
xchg
jle
mov
add
cmp
pop
inc
add
mov
adc
cmpsl
insb
cmpl
adc
push
movsb
add
jmp
sti
xchg
jle
inc
cmpsb
add
outsb
jge
sub
fisttps
fsubrl
xchg
add
dec
jb
mov
fnstcw
mov
test
add
mov
aad
iret
movsb
cltd
fidivl
es
jae
outsb
inc
jns
push
sbb
imul
push
mov
sbb
mov
imul
and
fs
jge
mov
adc
popf
ljmp
mov
sbb
add
add
fucomip
dec
pop
leavew
add
adc
mov
lahf
aas
or
jbe
cmp
sbb
pop
lds
jmp
mov
in
and
push
mov
pop
jb
add
dec
inc
push
lock
lret
lods
inc
push
mov
adc
and
xchg
loopne
mov
adc
aad
pop
sbb
inc
mov
and
add
addr16
rolb
xchg
add
dec
loopne
sahf
aaa
testb
out
dec
filds
mov
nop
lahf
out
das
test
cmp
xchg
cli
divl
subb
dec
add
ror
mov
xlat
popl
scas
cmp
stos
das
pop
bound
repnz
out
xor
add
scas
mov
ss
das
rcrb
mov
mov
subl
in
gs
add
lea
in
cmpl
jmp
add
loop
push
out
shr
enter
add
add
mov
sbb
mov
leave
jne
arpl
jle
xor
lahf
xor
ljmp
lcall
das
outsl
sub
out
or
jl
bound
add
negl
inc
add
mov
cmc
sbb
test
sub
cmp
das
cli
cwtl
dec
fimuls
lret
add
mov
add
sbbb
das
push
adc
pop
out
movsb
dec
cli
in
add
dec
push
int
test
jl
lea
stos
aad
cmp
pop
cmp
pusha
mov
test
outsb
loope
cltd
movsb
jmp
rorb
add
push
imul
mov
xor
push
push
aaa
add
pop
xchg
test
sbb
xchg
in
add
xchg
inc
fisubrl
mov
iret
xchg
fwait
xor
or
sub
push
cltd
imul
movsb
loopne
push
and
add
rclb
cli
xchg
push
in
cmp
fcoms
cmp
add
inc
jp
dec
cwtl
insb
rclb
in
xor
mov
pop
call
jo
test
adc
add
sub
jne
push
dec
add
in
int3
xor
add
cmp
cmp
andb
mov
fs
ss
pop
cmpsb
sub
enter
and
stos
dec
mov
dec
mov
cmp
inc
dec
inc
cld
arpl
icebp
addl
xchg
mov
add
sbb
inc
aad
xchg
popa
test
fiaddl
mov
jb
dec
and
push
jnp
jne
rclb
enter
fdivp
stos
sub
adc
add
cmpsl
out
pop
inc
enter
test
pop
subb
add
fbld
sti
jl
add
out
push
sbb
pop
test
push
jbe
xor
and
jno
jecxz
and
push
xchg
andb
mov
xchg
jl
mov
and
sti
mov
mov
add
cmp
or
add
not
ljmp
fcmovnb
std
das
fisttpll
add
jl
mov
jo
push
jno
and
push
or
add
dec
push
lahf
pop
sahf
adc
add
push
leave
dec
aas
into
add
add
std
add
icebp
add
add
dec
add
icebp
enter
mov
push
push
pop
sub
iret
shl
outsl
clc
add
dec
andl
nop
fisttpl
bound
xor
lods
std
sub
xchg
inc
and
add
mov
pop
jle
movsb
mov
add
bswap
xor
or
jge
inc
and
movsl
pop
int3
subb
outsl
add
sub
jecxz
cmp
add
int3
add
dec
xchg
neg
les
cmpsl
es
jnp
rolb
push
cs
movsl
das
jp
mov
leave
sbb
inc
push
mov
add
jp
loop
stos
push
stos
insl
and
add
dec
divl
pop
in
js
jo
push
push
push
add
or
test
pop
xor
cmp
adc
cmpsl
ret
fdivr
cltd
add
xor
sub
add
js
push
xor
fcmovnb
lea
cld
ljmp
pop
insl
rclb
inc
in
negl
fbld
int
inc
icebp
add
mov
aad
or
imul
test
mov
faddp
ret
imul
mul
hlt
call
mov
ret
add
jb
loop
adc
jmp
rcrl
repnz
arpl
lock
arpl
adcl
repnz
fldl
repz
jecxz
mov
repz
fucomp
mov
fistpll
ror
mov
mov
repnz
loop
mov
xchg
fisttpll
loop
mov
jae
addr16
loop
add
mov
inc
mov
cmp
fnsave
mov
daa
mov
sbb
fstl
mov
outsb
mov
int
fstl
sbb
loop
mov
sbb
fists
sbb
loop
mov
dec
sbb
hlt
mov
xor
repz
mov
pop
pop
ffree
mov
stc
mov
inc
or
in
movsb
jae
loop
loope
dec
mov
mov
stc
jae
loop
mov
lock
jnp
dec
rep
loop
mov
test
outsb
jle
data16
mov
les
aaa
cmp
and
xor
ret
jbe
outsb
and
jae
pop
mov
mov
xor
add
jb
pop
xchg
mov
xor
xor
jne
movb
jb
fcmove
leave
dec
or
stos
add
es
push
inc
sbb
sub
pop
dec
mov
xor
mov
push
sbb
push
sub
std
xlat
fiadds
icebp
jb
es
fisttpl
cmp
mov
cs
xchg
fdivs
fiaddl
xchg
dec
out
fidivs
jae
mov
adc
fwait
mov
loope
mov
lret
or
mov
push
cmpsb
out
lcall
loopne
mov
mov
mov
pushf
sbb
add
jp
adc
pop
stos
ficoms
inc
push
cmp
push
mov
lahf
loop
bound
movb
sub
icebp
lahf
pop
cs
pop
stos
dec
test
xor
xor
dec
fldenv
jg
lods
cwtd
fwait
cs
pop
or
sub
data16
les
lret
xor
jbe
cs
stos
and
cltd
out
mov
adc
ret
arpl
jmp
mov
mov
mov
pop
lret
pop
ss
or
stc
cmc
addr16
or
shlb
xor
jge
xchg
lcall
cmp
inc
or
rcl
outsb
push
jp
cmp
into
adc
mov
push
add
dec
mov
inc
push
pop
clc
cli
xlat
in
popa
sub
add
popfw
mov
daa
shl
inc
push
sbb
cmp
xchg
movsb
out
xchg
shll
pop
stos
jge
cs
ja
ljmp
cltd
aaa
add
dec
pop
pop
stos
mov
ret
mov
mov
loop
inc
imul
pop
enter
jno
sbb
xchg
aam
xchg
imul
inc
adc
repnz
push
add
outsb
cs
cmp
adc
add
out
jecxz
mov
ljmp
mov
aaa
aaa
fbld
dec
enter
fsts
mov
inc
cmp
jg
bound
sti
idivl
add
aas
jecxz
mov
jl
or
adc
adc
adc
dec
shll
jg
jo
and
lds
xchg
shl
mov
and
push
mov
scas
ret
and
divb
movsl
add
dec
aaa
das
xor
inc
ret
sbb
jl
imul
add
xchg
das
lock
gs
push
adc
jb
pop
push
aaa
xor
fs
inc
les
adc
xor
daa
in
das
add
sub
aam
lock
add
pop
jle
sub
loope
inc
in
roll
inc
xchg
filds
addb
mov
push
mov
ret
add
sahf
push
lds
aas
mov
test
xor
fstps
daa
push
int
inc
daa
jge
sahf
das
pop
cmp
xchg
sub
inc
pop
pusha
pop
xor
std
cmp
ljmp
inc
scas
les
and
inc
or
sbb
xor
jns
test
sub
enter
pop
or
testb
sti
movsb
and
cli
sub
shlb
jp
roll
das
inc
aas
xor
repnz
sub
jp
xlat
xchg
mov
cmp
jbe
out
cli
add
cmp
fldl
and
pop
in
idivb
sub
ret
leave
dec
shrl
aaa
and
daa
les
repnz
idivb
fcmovnb
test
outsl
shlb
hlt
cli
jbe
aaa
xor
push
cmpsl
xor
mov
adc
ss
outsb
push
xchg
out
insl
cld
pop
int3
and
cmp
addr16
inc
pop
xchg
sbbb
test
std
add
lret
faddp
push
mov
inc
jl
mulb
push
gs
add
fiadds
sbb
ret
and
std
add
push
fwait
jnp
jp
fiadds
xchg
xorb
repnz
test
mov
test
inc
mov
xor
ret
imul
inc
out
cmpsb
movsb
hlt
or
or
mov
jae
addr16
in
or
and
ficoms
pop
dec
shlb
scas
fiadds
jg
out
xorb
add
cltd
rclb
and
jg
push
push
xlat
cmp
dec
insl
mov
sbb
pop
cmp
push
fcmovnu
xor
rcll
outsb
decl
rol
cmp
cwtl
cmpsl
mov
and
ret
dec
ret
mov
sub
sarb
add
pop
xor
lds
popf
jne
loop
pop
add
jge
adc
nop
call
dec
mov
jg
std
shl
fneni(8087
sbb
test
pop
mov
mov
pop
mov
out
pop
in
add
jle
outsb
ficoms
adc
and
mov
sub
in
jns
adc
pusha
xor
dec
push
push
mov
jbe
inc
xor
insl
cli
cs
inc
dec
popf
ret
cmp
add
jecxz
jno
ret
and
lret
ja
dec
out
and
loop
dec
push
push
ret
inc
sub
test
lcall
xor
cli
adc
jecxz
jnp
push
jg
fcomip
add
addr16
add
sarb
mov
fdivp
lret
outsb
and
jne
out
mov
aaa
aas
filds
add
sbb
xor
jl
or
in
les
in
pop
loopne
add
mov
enter
jne
jae
or
xor
sbb
add
xor
clc
mov
xor
jae
push
repz
in
cmp
orb
pop
mov
mov
add
push
sbb
cmp
xchg
scas
jne
fistl
add
sub
xor
mov
stc
jl
sub
xlat
fbstp
push
popa
mov
into
lcall
add
mov
xor
pusha
xchg
add
fucomip
int3
jg
call
fildl
mov
pop
addl
fisubl
xchg
dec
in
xor
outsb
push
xor
movsb
push
mov
dec
inc
jb
dec
iret
jge
jae
repnz
lods
mov
inc
je
mov
stos
ret
test
sbb
or
adc
ficomps
fwait
inc
sbb
pop
jnp
loopne
addl
xor
xchg
sar
jmp
out
imul
dec
lret
jg
xlat
pop
sbb
xlat
and
insl
mov
ret
mov
cmp
mov
xorl
cmp
out
push
mov
push
movsl
xor
loop
out
adc
add
jl
pushl
popa
repz
ds
push
fsubrl
sti
fwait
idivb
mov
dec
cmp
pop
add
or
adc
repz
incl
fsub
dec
shrb
aas
fldl
inc
cltd
jecxz
arpl
add
outsb
cmc
stc
and
sub
mov
fcmovnbe
rolb
jbe
addr16
add
inc
and
mov
sub
mov
jnp
cli
add
adc
cltd
add
in
add
bound
scas
mov
add
notb
xor
inc
inc
lret
jb
pop
cmpl
cmpsl
aad
iret
jecxz
jbe
repz
iret
mov
sti
add
hlt
rol
aad
lret
jae
cmc
pusha
lret
xor
loop
push
lahf
repz
ficompl
fs
pop
idiv
roll
and
shl
cli
mov
mov
pop
shll
or
roll
jne
push
dec
mov
iret
fldenv
add
mov
xorl
cmp
mov
add
xor
inc
sbb
subl
cli
out
lret
mov
clc
mov
mov
and
mov
movsbl
in
mov
bound
push
arpl
xor
xor
scas
push
jmp
xchg
jbe
mov
mov
mov
test
add
mov
outsl
test
fists
inc
push
popf
fbstp
lret
push
mov
fucomi
jle
pop
add
loopne
inc
jge
mov
out
push
pop
inc
bound
pop
rolb
aad
bound
inc
pusha
mov
mov
xor
mov
add
cmpsb
fldl
out
lea
lret
loop
pop
ret
aas
mov
mov
inc
faddl
cmp
out
push
sbb
cld
dec
or
adc
xor
push
loopne
clc
cmc
jl
testl
pusha
push
or
ret
sbb
xchg
cmc
push
mov
add
xor
pop
jb
ret
ss
jae
inc
jecxz
or
cmpb
out
loopne
shlb
sbb
add
out
lods
std
inc
in
sub
repz
call
xor
xor
sbb
add
mov
mov
arpl
sub
aas
shr
repz
push
mull
inc
in
loope
jp
ret
jne
neg
pusha
cmp
xorb
xor
jge
std
std
fxch
pop
sarl
mov
inc
mov
shll
iret
cld
popl
push
and
inc
sti
imulb
icebp
icebp
loopne
push
jb
dec
jae
jne
jge
pop
sub
sbb
mov
lods
notl
popf
jmp
xlat
xchg
out
ficoml
shrl
or
mov
pop
ret
or
add
loopne
xor
out
pusha
aas
cs
mov
xchg
test
shl
push
notl
lahf
jl
sahf
cli
add
loop
and
daa
pop
or
mov
cli
aaa
fcomip
psrlw
xchg
imul
sar
lds
jge
xchg
mov
stos
mov
std
jnp
roll
lods
clc
jae
push
ret
push
adc
pop
fucomp
rcrl
ret
hlt
jae
sub
mov
imul
das
pop
aas
jg
cmc
push
out
add
icebp
jp
jecxz
das
push
aad
fiaddl
mov
push
cmc
es
arpl
mov
nop
scas
int3
push
add
mov
sahf
xor
mov
add
sahf
mov
jge
lret
test
cmp
add
jl
xchg
xchg
jge
hlt
mov
out
jle
shll
cmpsb
mov
xchg
into
test
pshufw
out
inc
das
repz
inc
mov
loope
nop
mov
in
jnp
mov
add
pop
inc
cmp
mov
ljmp
das
ja
ss
mov
loop
mov
out
mul
lock
and
xchg
repnz
xchg
xchg
or
out
mov
stc
out
fnsave
leave
jecxz
push
inc
jae
iret
pusha
xor
push
push
mov
ss
xchg
ds
xor
mov
cli
scas
add
icebp
hlt
aam
sbb
jmp
pusha
call
mov
stos
add
icebp
ss
adc
call
fnstenv
and
cmc
lret
jp
fucomp
mov
pusha
push
gs
loope
xor
mov
iret
cli
xchg
hlt
inc
test
cmp
jb
in
cmpsb
ljmp
pop
xor
rolb
imul
mov
sti
pop
mov
fnstsw
push
rorb
sub
in
hlt
arpl
pop
mov
in
iret
ret
lret
xor
ljmp
out
iret
cmp
shr
ljmp
xchg
lock
aas
repnz
jno
std
mov
gs
pop
fcmovnbe
mov
cmc
jnp
mov
lret
bound
cltd
inc
scas
pusha
push
iret
sub
cs
sti
std
add
das
pop
pop
mov
pop
std
loop
mov
mov
and
addr16
jne
inc
gs
cmp
mov
out
and
icebp
jbe
adc
mov
insl
jb
call
repz
adc
inc
jecxz
and
sti
shl
jo
bound
stos
xor
repnz
jle
mov
cmc
icebp
arpl
int
cmc
in
ss
icebp
and
pop
lock
aad
test
mov
std
cld
std
faddl
adc
sub
mov
or
in
pop
adc
jecxz
sbb
addr16
mull
movsb
xor
sbb
fcmovbe
filds
xchg
inc
nop
ja
loop
sbb
addb
jmp
add
push
std
or
jecxz
xchg
loope
xchg
cmc
icebp
sub
adc
aaa
xchg
icebp
xchg
addr16
cmc
adc
add
xor
mov
push
cmpb
sub
loop
int
mov
fld
jo
sub
mov
cli
fisttpll
jp
add
add
mov
fisttpl
cmpsl
jecxz
mov
add
cmc
adc
adc
jge
mov
xchg
mov
or
imul
and
xchg
out
xchg
jb
push
cli
fsubp
movsl
mov
js
shrl
pusha
popf
fisttpl
imul
jmp
add
and
je
mov
sti
add
add
jmp
hlt
lret
xor
out
shrb
iret
mov
adc
je
mov
sbb
inc
xlat
popf
adc
pop
xor
cmp
outsb
mov
add
popa
adc
cli
and
rcl
adc
aad
sahf
mov
jnp
or
in
hlt
mov
mov
imul
xchg
sbb
orb
fmull
pusha
jo
inc
fisttpll
fldl
lods
repnz
mov
ja
mov
fisttpll
xchg
inc
sahf
jl
scas
push
xchg
add
loope
or
cs
push
pushf
ret
mov
into
jecxz
add
pushf
arpl
lods
jg
fucomi
cmc
lock
mov
inc
data16
adc
adc
ret
sub
mov
lea
jns
mov
cmp
inc
cmc
jg
fisubrl
ret
inc
js
inc
in
cmp
jg
rcr
roll
and
repnz
fld
incl
inc
sbb
out
icebp
mov
mov
stc
cmpl
repz
fnstcw
loope
clc
and
shrl
in
outsl
xchg
arpl
in
sbb
mov
add
fstps
mov
int3
orl
mov
jge
loop
lock
cmc
outsb
inc
mov
xorb
fistl
arpl
mov
aad
or
mov
xchg
shrb
notb
add
hlt
call
outsl
mov
dec
out
add
clc
jnp
shll
aad
clc
push
testl
mov
mov
push
sarl
in
out
mov
testb
ljmp
loope
nop
add
pop
fcmovnbe
mov
add
push
dec
mov
gs
jmp
cmpl
out
xchg
testl
fistpl
mov
div
addr16
add
mov
hlt
fcmovbe
jge
xchg
pop
mov
adc
lret
ret
pop
cld
loop
cmp
fldt
adc
inc
push
arpl
lock
adc
mov
sti
ljmp
std
mov
rol
clc
loope
pop
xchg
mov
push
add
mov
cmp
inc
inc
jp
test
jmp
das
jecxz
cmp
push
add
sub
pop
push
fisttpll
aaa
loopne
aaa
dec
pop
ret
dec
aas
sbb
cwtl
into
repnz
adc
ja
cmp
test
hlt
push
mov
jbe
shrb
jmp
adc
fildl
adc
dec
out
sub
xchg
test
enter
gs
xchg
sub
adc
clc
mov
call
cmpl
addr16
sahf
aas
dec
pop
cmp
push
and
lcall
xorb
out
loope
mov
xchg
pop
ljmp
mov
mov
int
in
cmc
andl
out
loope
fwait
jmp
cmc
or
mov
out
cmp
jmp
sub
rol
adc
mov
mov
aaa
stc
int
out
jg
lea
jmp
mov
call
jle
jecxz
sbb
repz
and
lahf
cs
cli
negb
jnp
jecxz
pusha
lock
lods
testb
fwait
cmp
jb
addr16
or
stos
sbb
xchg
ret
std
pop
dec
mov
xor
sbb
adc
loopne
push
lret
add
pop
rorl
jmp
pop
loope
pop
aaa
xor
cwtl
sbb
mov
mov
negl
cmp
scas
push
dec
js
ret
rcl
arpl
subl
aad
push
hlt
xchg
iret
bound
sahf
push
jbe
hlt
mov
add
movl
aad
push
lret
stc
mov
stos
push
cmpsb
fisubrl
mov
mov
jge
xchg
pushf
adcb
xchg
repnz
add
sub
push
add
sub
mov
call
out
adc
arpl
xchg
mov
jno
sarl
shll
and
ljmp
pushf
add
out
sub
and
insb
pop
push
adc
bound
bound
jecxz
pusha
mov
int
sahf
aaa
leave
lea
jmp
inc
mov
and
stos
jae
das
mov
decb
add
mov
cmp
lods
cld
cld
push
xchg
in
clc
jl
and
jno
push
push
je
leave
loopne
movsb
fscale
sbb
cmp
xchg
aam
clc
imul
jbe
daa
mov
mov
out
popf
cmpl
cmpsb
adc
jecxz
pusha
lahf
or
add
pop
fwait
aaa
ret
addr16
cli
lret
dec
cmc
jecxz
pop
testl
cmpsb
and
xchg
addb
cli
mov
iret
js
push
jno
cwtl
xchg
sub
mov
das
cmp
arpl
lock
test
xchg
or
mov
aas
fcompp
subl
mov
int3
mov
mov
pusha
jmp
adcl
jb
ret
xor
jb
repnz
and
imul
pop
addr16
add
mov
or
cli
adcl
repnz
xlat
shlb
xor
jecxz
mov
xchg
fsubs
pop
push
adc
dec
pop
jp
cli
fdivr
dec
jo
xor
out
or
sti
out
mov
cld
mov
pop
mov
or
out
sbb
jecxz
addl
bswap
popf
or
jno
sub
mov
scas
pop
add
arpl
pop
shl
fldt
jge
xchg
fcomp
outsl
jecxz
cmc
push
mov
pop
movl
jo
or
dec
inc
stos
neg
or
push
xchg
dec
mov
in
imul
aad
push
jo
pavgw
sbb
adc
mov
out
les
xor
pop
in
or
mov
jl
push
loop
test
push
hlt
inc
add
pop
das
xor
in
repnz
in
pop
lock
mov
cld
pusha
adc
mov
insb
mov
or
aaa
xchg
shrl
stos
pop
jecxz
test
cmpsl
cmpsl
repz
repz
mov
lea
inc
and
push
mov
mov
mov
into
loop
xchg
jg
dec
pop
cwtl
pshufw
stos
in
sub
pop
push
xor
lods
outsb
jmp
imul
pop
int3
mov
ds
add
push
mov
lret
shlb
jmp
stc
and
in
test
cltd
repnz
faddp
add
lahf
mov
bound
repz
mov
lods
insb
mov
scas
mov
jne
push
sub
xchg
push
adc
sahf
push
loope
adc
repz
jo
xchg
xchg
jb
sahf
cs
mov
mov
cmp
das
mov
negb
dec
jae
fdivp
fidivs
adc
mov
jnp
loop
daa
clc
dec
pop
jmp
mov
sub
popf
jns
push
mov
mov
out
dec
repnz
push
mov
mov
out
dec
stos
push
xchg
push
lock
adc
int3
sub
cmc
repz
jae
jge
imul
jmp
lret
pop
int
mov
push
movb
cmpsb
and
mov
fcos
icebp
push
mov
cmc
cs
and
add
js
sbb
adc
inc
aaa
clc
out
repz
out
ret
std
xor
aaa
adc
ja
jo
fwait
push
jae
cmp
xchg
mov
pop
int
sub
iret
fisttpl
jno
fisttpl
aaa
fistl
pop
hlt
roll
lret
mov
out
jbe
xchg
inc
jecxz
bound
mov
pop
lods
mov
jle
adc
clc
pop
cltd
mov
cmp
xchg
mov
out
scas
iret
pushf
mov
adc
mov
test
add
out
fwait
sti
pshufw
js
ljmp
or
jg
jb
xor
xlat
lahf
pusha
sbb
adc
lods
addl
sahf
pop
into
rcrl
cs
sub
dec
in
xchg
cmc
mov
and
xor
inc
psraw
fcoms
mov
inc
cmp
in
inc
jg
jle
cmc
outsl
jae
cmp
push
jmp
addl
push
pop
fnstsw
jmp
push
dec
xchg
jle
adc
into
inc
in
add
outsb
sub
clc
inc
mov
sub
add
andb
cld
int
mov
push
pop
pop
mov
arpl
pop
or
fnstcw
and
sbb
add
es
scas
adc
mov
lcall
ds
jae
pop
outsb
fbstp
hlt
jecxz
pop
fcomip
cmp
cmpl
jne
insl
clc
add
cltd
sub
jg
lock
jne
mov
cmc
jecxz
pop
fucomip
out
sbb
lahf
jns
jecxz
ud1
ret
mov
fcmovb
mov
repz
out
rol
mov
push
addr16
push
orb
xchg
mov
popf
xchg
lock
pop
shll
mov
pop
jae
add
mov
xor
dec
imul
stc
add
and
push
out
or
scas
xor
jmp
cs
jge
arpl
fwait
jns
imul
in
xor
in
stos
cmpsl
fistpl
iret
and
hlt
and
pop
idivb
mov
out
loopne
cmpsb
pop
cmp
sbbl
test
out
jg
jo
ret
mov
mov
outsb
in
shrb
rol
loope
icebp
out
push
pop
ret
out
xor
out
cmp
addl
jae
xor
xchg
fucomi
pusha
pop
cld
xchg
push
sar
and
mov
nop
leave
pop
cli
dec
fsts
pop
cs
rolb
sbb
leave
loop
cli
ret
cmpsb
fldenv
add
xchg
stc
jae
or
fisttpl
das
stc
pusha
out
popf
jae
xlat
frstor
daa
jge
mov
xchg
aam
int
ss
push
sti
sub
pushl
stos
push
repz
arpl
repnz
sti
xor
jp
mov
sbb
xchg
mov
scas
out
filds
in
push
xor
mov
orl
fiaddl
mov
fistpl
es
rclb
pop
pop
push
stos
or
movsl
or
subl
mov
jns
das
out
jnp
or
fidivrs
dec
mov
jl
xorl
out
call
std
and
stc
and
out
in
push
mov
push
push
js
sbb
jecxz
pop
xor
add
lods
inc
loope
icebp
aad
sbb
push
rcll
andb
clc
inc
in
adcl
pop
sarl
nop
inc
filds
xchg
ja
fldpi
loope
out
ljmp
inc
pushf
mov
jno
rclb
inc
fimuls
aad
xor
in
mov
jae
ljmp
add
push
push
jnp
jb
xchg
mov
sarb
negl
leave
jo
push
lds
out
pusha
mov
out
inc
mov
out
and
scas
fdivrs
jae
jnp
push
out
add
mov
xchg
pop
rorl
mov
pop
xlat
jne
jmp
xor
rcrb
pop
fiadds
loopne
inc
iret
or
jo
loope
addl
pushf
loop
rorb
insl
sarl
dec
mov
popf
lahf
mov
loop
pop
dec
adcb
jge
sub
bound
dec
mov
shrl
cwtl
xchg
push
ret
inc
jno
shr
lcall
popf
nop
fbstp
push
jae
loop
popf
repz
cmpsl
mov
mov
out
mov
jae
ret
rcrl
dec
mov
mov
iret
and
mov
and
sub
loope
ret
mov
divb
sub
sub
adc
pushf
outsb
and
xchg
ror
xchg
out
es
adc
std
repnz
out
or
subb
ret
adc
and
and
repz
cli
inc
sbb
sbb
decl
adc
sbb
into
mov
xor
sub
or
shll
icebp
add
adc
lds
cmp
sahf
jbe
jmp
inc
xor
in
lret
adc
and
iret
pusha
mov
xchg
jmp
cmpsl
push
mov
jnp
repz
dec
mov
ljmp
and
ret
add
cmpsb
xor
or
pop
rep
pusha
int3
jle
xlat
jge
adc
sbb
pusha
or
js
push
xlat
stc
ret
test
mov
fidivl
repz
mov
daa
ret
ss
sub
pop
and
sub
sub
and
in
icebp
pop
mov
repz
fildll
cmp
test
ret
jne
fldenv
sbb
mov
and
xchg
jae
jmp
dec
clc
inc
sar
mov
push
cs
xchg
xor
ret
sti
shl
std
push
inc
lret
out
es
and
pop
cld
mov
pop
rcrl
in
jnp
xor
cmp
out
and
imul
aaa
jns
and
xor
stos
and
inc
sarb
adc
pop
and
xchg
pop
sbb
cli
add
hlt
push
or
jb
lret
rcr
bound
mov
mov
mov
and
bound
mov
and
pushf
mov
std
cs
xlat
mov
cld
je
stos
mov
cmp
stos
repnz
aam
sbbb
les
std
jl
rep
cs
outsl
loopne
mov
out
xor
insl
push
hlt
cmp
aad
adc
mov
mov
andb
cmp
scas
jae
loop
jmp
sarl
pop
or
inc
out
or
adc
shrb
mov
rol
stos
pop
out
incl
jne
or
mov
out
and
fidivs
ret
fstpt
xchg
cmpl
jle
xchg
push
arpl
mov
imul
outsb
mov
mov
test
cld
push
fprem
pop
mov
lret
cltd
xchg
out
clc
in
jmp
inc
mov
dec
je
ficomps
jle
not
or
test
fistpl
rcr
sbb
shl
mov
mov
pop
movsl
clc
mov
int
loop
mov
pop
shll
out
pop
in
jmp
loopne
lock
add
ret
push
outsb
lcall
xrelease
cmc
xchg
outsl
adc
mov
inc
and
fucom
sub
inc
lahf
dec
jl
ret
dec
xchg
int
add
repz
loope
mov
adc
and
sbb
add
sub
insb
pop
mov
mov
or
pop
adc
and
xchg
inc
aaa
sti
les
repz
jge
sar
bnd
add
inc
aad
fisubrs
cld
adc
mov
push
aaa
lret
mov
int
push
les
rol
jne
mov
jnp
or
sbb
pop
sub
pop
sbbl
cld
addl
fdivs
and
jg
xchg
and
or
arpl
inc
int
sbbb
xchg
out
jmp
pop
sahf
repz
mov
sub
fstpl
lods
add
mov
stos
mov
inc
je
movsl
xor
jl
outsl
cld
adc
repz
mov
mov
mov
sti
aad
push
push
mov
test
outsl
pop
iret
cwtl
xor
cli
mov
leave
or
add
adc
xchg
or
scas
test
xor
sti
shl
repz
pop
addb
jne
sbb
mov
fcmovu
lret
inc
push
cmc
pop
jae
les
icebp
push
adc
cwtl
icebp
cmp
xchg
mov
xchg
mov
mov
cmc
rcll
mov
cmpl
cld
dec
lahf
outsl
add
push
stc
lret
jnp
mov
dec
in
xacquire
mov
ret
data16
imul
pop
icebp
rcrb
leave
jmp
repnz
cmp
rcrl
and
sbb
ret
aad
xor
cld
jmp
mul
shrl
fldl
mov
arpl
xchg
jle
ret
aaa
sbb
loopne
jno
mov
or
mov
add
push
andl
or
add
pop
mov
xchg
inc
shr
sub
lret
loop
aad
daa
xor
hlt
loopne
dec
add
sarb
xor
inc
lock
movsl
stc
pop
add
stc
inc
pop
out
icebp
ja
add
dec
jecxz
cmp
out
fnstsw
mov
ljmp
aas
aas
int3
cmpsb
fistl
stc
dec
rorl
adc
cmpsl
stos
cmc
jl
out
ja
sbb
fisttpl
orl
mov
jae
dec
je
push
xor
mov
mov
xchg
les
pop
test
ja
dec
ja
mov
cs
cmc
hlt
mov
mov
call
cs
aad
pop
mov
out
ja
push
ss
add
cli
and
scas
iret
xchg
mov
pusha
and
push
inc
in
xchg
pop
xor
xchg
aad
sbbl
add
push
fisttpll
arpl
loopne
scas
adc
xor
dec
repnz
fldl
inc
jae
repz
mov
call
pop
mov
out
pop
in
cli
in
add
xlat
movsb
xor
pop
mov
add
jle
fiadds
cmp
inc
pop
adc
in
faddl
adc
mov
aad
divb
push
xchg
or
lret
pop
sahf
or
imul
xchg
jnp
mov
in
push
aas
inc
jp
lcall
call
xchg
loope
test
fisttps
and
jg
push
in
fadd
leave
scas
out
push
repz
lahf
cwtl
mov
loope
dec
pop
jmp
mov
sbb
push
test
fwait
jecxz
mov
add
xlat
adc
add
ljmp
shll
mov
add
jmp
loope
push
mov
es
outsb
outsl
call
mov
push
fists
xlat
jns
adc
addl
iret
int
adcb
push
mov
fxch
adc
dec
jp
jmp
and
aas
xlat
fstp
insb
cmp
mov
add
cmp
adc
adcl
fwait
pop
rorb
popf
mov
jns
out
inc
mov
int
repz
mov
inc
cld
aam
sbb
inc
inc
orb
sbb
loope
in
lods
mov
xor
fucomp
xchg
mov
imul
jecxz
jae
jl
inc
lock
xor
fucomp
add
pop
pop
repz
mov
scas
adc
push
sub
fcomps
jno
mov
xlat
push
lret
call
lods
out
jbe
icebp
cmc
jnp
call
push
jl
cmpsb
push
ds
cmp
xchg
xchg
hlt
faddp
mov
and
lcall
and
add
jmp
xor
mov
jmp
mov
push
test
pop
rcl
cwtl
mov
add
movsl
push
shrb
outsb
out
loop
xor
loope
das
sub
adc
add
mov
sti
loop
in
nop
into
subl
in
pusha
sti
shll
and
int
enter
fcmovbe
adc
jb
repnz
xorl
imulb
mov
push
add
neg
and
sbb
imul
mov
ret
mov
mov
adc
int3
or
bound
or
fimull
ficompl
ds
pop
lods
aad
out
add
mov
iret
fwait
mov
xor
out
pushf
cmp
inc
mov
fcmovnu
dec
jne
jecxz
divb
push
fldt
arpl
std
xchg
das
cli
pop
out
or
int
mov
sbb
mov
or
push
xlat
dec
sbb
pop
cmc
or
clc
fidivl
shr
fstp
cmp
ret
mov
or
loopne
adc
lret
cmpsb
pusha
aam
cvtdq2ps
outsl
div
mov
lds
pop
out
mov
inc
les
push
nop
push
xlat
pop
addr16
mov
jg
xor
dec
push
mov
lds
int
xor
icebp
push
xorl
das
inc
mov
pushl
divb
cmpl
mov
insb
inc
repz
pop
mov
iret
mov
ss
cmpsb
ret
add
daa
dec
pop
repnz
xchg
bound
jno
jae
pop
les
cmpsb
imul
test
sbb
movsl
add
xchg
sbb
iret
xchg
loop
movsl
mov
mov
lret
inc
xchg
iret
std
push
out
cmc
inc
inc
in
xchg
push
cmp
enter
xor
push
mov
push
int
sbbl
mov
mov
cmpsl
jno
pop
imul
fwait
mov
mov
call
sub
and
dec
popa
mov
cs
fbld
std
push
cmp
subl
pushf
lret
add
dec
loopne
push
loop
push
cld
xor
and
lret
mul
aaa
and
shll
ret
cld
sbb
rorl
mov
sub
mov
or
jecxz
aad
cmpsl
jecxz
adc
jecxz
jmp
andl
jno
movsl
push
add
popf
cltd
imul
jle
inc
aad
pushl
mov
push
call
sub
sbb
sbb
sbb
sbb
fcmovb
xchg
pop
xchg
mov
scas
mov
aas
sbb
call
mov
cli
mov
adc
xor
lret
or
aad
mov
into
mov
sbb
pop
adc
sbb
std
and
push
and
mov
mov
pop
notb
mov
jecxz
arpl
pop
inc
and
movsl
jmp
rcll
sub
aaa
push
pusha
and
shlb
mov
mov
addb
sti
jb
or
dec
lods
lcall
mov
jl
orb
outsb
pop
push
repnz
out
hlt
sti
push
and
insl
pushf
adc
mov
xor
add
xor
outsb
ret
or
popf
fidivrs
mov
clc
lret
cmc
cld
mov
out
test
pmaxub
aas
pop
loop
pop
arpl
ss
pop
and
pop
inc
push
cmp
jmp
out
aam
add
push
pop
cmp
hlt
adc
shr
add
jmp
push
pop
xor
adc
jp
xor
lahf
loope
cmp
cwtl
mov
mov
jnp
out
pop
ret
std
mov
cs
in
dec
cmp
dec
int
lahf
int
cmp
sti
sbb
jg
repz
loope
add
out
mov
fcomip
jle
clc
clc
cmpsl
fldenv
subps
std
lret
mull
or
xor
cld
and
xor
neg
mov
cmp
mov
inc
repz
push
jbe
jno
lret
into
in
and
cmp
pop
scas
mov
mov
push
out
and
pusha
or
and
or
inc
stos
bound
repz
jmp
sbb
cltd
mov
out
xchg
mov
push
push
fwait
lahf
pop
mov
xor
aas
loope
mov
sti
clc
ss
out
stc
pop
cmp
add
dec
hlt
lock
inc
adc
mov
cli
loope
mulb
and
mov
jae
cmpsb
rol
xchg
lea
xlat
cli
bound
sub
out
data16
testb
cmpsb
add
test
leave
lcall
ret
fidivrs
jne
push
mov
scas
rcll
stos
add
push
jp
lret
jge
jno
arpl
mov
out
hlt
mov
scas
lret
mov
aas
inc
shll
cld
cs
xor
stos
and
neg
dec
pop
and
leave
push
jns
push
jg
cwtl
xchg
jmp
fidivs
outsl
icebp
das
mov
push
fstpl
je
xor
jg
cmova
lods
icebp
mov
adc
pop
jecxz
fldenv
push
mov
aaa
mov
stos
pushf
lahf
inc
jb
aam
inc
cmp
shr
stos
sbb
pop
mov
roll
call
std
js
inc
imul
lret
and
fcomi
aaa
mov
push
fcmovnu
cmp
repnz
mov
jge
imul
mov
sahf
inc
adc
lcall
in
shll
ljmp
sti
repz
pushf
mov
mov
aad
xchg
movsl
loop
mov
enter
aas
xor
sub
loopne
fiaddl
testl
sub
fdivp
rorb
sti
mov
xchg
aad
dec
push
xor
shr
cmp
popa
fdivs
psubusw
xor
and
div
rolb
add
pop
or
hlt
cmc
jb
das
inc
dec
lods
push
or
das
adc
addb
add
dec
sub
arpl
shrl
aad
xor
loop
inc
adc
xorb
pushl
rclb
add
inc
add
mov
repnz
aad
add
pop
cs
or
xorl
inc
adc
xchg
cmc
aad
adc
mov
fistps
jmp
inc
imul
shl
stos
pusha
cmp
pop
les
lods
test
mov
insb
push
repz
mov
cs
js
test
repnz
jecxz
in
int
sub
cmp
out
stos
scas
fstl
inc
mov
cmp
or
into
mov
pop
or
fdivp
repz
stos
fwait
mov
jecxz
inc
sar
or
adc
push
pop
push
out
xor
jge
jl,pn
xchg
into
fcomps
decb
mov
mov
lods
scas
inc
addr16
pop
jbe
xchg
ret
mov
mov
ja
mov
pusha
push
sti
out
cmpxchg
cs
bound
jbe
fistpl
jp
pop
mov
jae
push
jnp
cli
push
ret
shrb
mov
jge
sti
icebp
xor
fcoml
ss
cmp
ficompl
repnz
push
dec
xchg
fsubr
mov
std
jecxz
ficomps
and
pop
mov
test
mov
xor
inc
jae
and
repz
sub
loopne
loopne
aad
nop
jo
pop
test
pop
xchg
inc
lcall
and
pusha
jmp
test
lock
ficoml
mov
test
lret
sub
shlb
daa
push
cltd
pop
jp
repnz
mov
cmp
aad
mov
cmp
out
iret
repz
add
or
test
mov
jno
lds
loopne
cmp
sub
mov
mov
cmpb
ficoml
xor
stos
aam
xchg
xor
jp
jecxz
jmp
int
mov
test
xor
pop
lcall
pop
push
out
mov
movsl
repnz
int
mov
and
loopne
xlat
aad
ficoms
mov
icebp
outsl
clc
xchg
xchg
mov
mov
sub
mov
adc
mov
stos
daa
mov
imul
xchg
stos
xchg
fcmovb
mov
mov
sbbl
mov
xor
lods
fwait
out
jge
ja
xor
test
das
jg
jecxz
mov
dec
popf
icebp
xorl
loopne
int3
add
dec
xor
mov
inc
adc
inc
push
scas
pop
shl
xor
jbe
fsubrl
rcll
icebp
test
mov
pop
mov
subb
gs
insl
stc
mov
pop
xchg
sub
adc
mov
sub
loopne
aad
mov
loope
jle
sahf
fisttpl
pusha
addl
aas
cmpsb
mov
pusha
hlt
aad
nop
mov
movsb
pop
fbstp
mov
inc
repnz
xchg
je
cmp
pop
sbb
scas
sbb
jecxz
bswap
inc
xlat
mov
fstpl
ds
roll
negb
cmp
out
imul
stc
cmpsl
std
adc
repz
arpl
xor
cmc
in
xlat
mov
repnz
push
hlt
push
push
mov
mov
mov
and
ljmp
loopne
repnz
add
popa
aaa
outsb
fcomi
loope
mov
push
imul
inc
loope
testl
mov
js
xchg
ja
adc
popa
mov
ficomps
ja
cs
cltd
outsl
lahf
push
iret
iret
or
jecxz
cmpl
std
sbb
in
rorl
and
and
adc
add
cld
sbb
mov
leave
or
loope
mov
fwait
and
mov
ret
or
in
xchg
add
sti
mov
ss
rcr
mov
loop
sarb
shll
lock
rcl
xchg
filds
fldcw
shlb
jg
popf
pop
push
mov
repnz
mov
add
loop
sar
cmp
sbb
jae
mov
or
shll
pusha
shlb
jo
shlb
lahf
mov
dec
add
xor
popa
sub
pop
rcll
fbstp
push
mov
lock
adc
iret
cmp
xchg
pop
mov
cmpsb
cmp
clc
aad
xchg
mov
xchg
xlat
sti
sbb
pusha
dec
cmp
jl
imull
jo
xchg
sti
lahf
lahf
push
mov
pop
inc
repz
sbb
mov
pop
xchg
out
addb
jnp
clc
ljmp
mov
aad
jbe
andb
popa
push
shlb
mov
pop
cld
test
lds
sarb
popa
ret
xor
jg
mov
sti
push
repz
xor
aad
adc
push
scas
repz
mov
push
xlat
add
pop
je
xor
fildl
aam
ret
mov
out
xor
js
inc
add
orb
and
jle
out
lock
cmp
adc
cmpl
fs
cld
in
mov
add
or
push
and
out
xor
cmc
setb
stos
push
and
lahf
push
scas
arpl
fbld
ret
lfs
fnsave
xchg
negb
mov
mov
inc
outsl
jge
pop
jnp
scas
mov
cwtl
fnclex
mov
xlat
and
push
into
jne
out
hlt
adc
movsl
cmp
xlat
cmc
icebp
pop
scas
cld
add
xchg
rorl
xor
arpl
mov
xor
rorl
cmp
lret
nop
es
inc
push
fucomp
add
cs
fisubrs
sub
fdivrl
pop
add
jmp
fdivs
pop
ffree
inc
dec
ja
pushf
test
mov
aam
incb
ret
push
lock
ja
mov
inc
mov
cmp
cli
inc
aas
ret
jl
ffreep
xor
int
sti
jo
or
lret
sub
jecxz
aam
cli
sbb
push
cmp
jae
gs
fsubrp
mov
lahf
ret
adc
cmp
scas
jle
mov
loopne
xchg
shrl
add
xchg
sub
mov
and
cmovo
jb
loopne
repnz
ljmp
mov
mov
mov
lret
call
aaa
leave
inc
stc
push
fwait
inc
arpl
aas
iret
clc
mov
ret
jae
loop
sbb
mov
ret
push
loopne
adc
pushf
sub
adc
pusha
orl
pop
clc
fisttpll
in
pop
jmp
add
popf
roll
sub
repz
outsl
pop
das
xor
fcmovbe
std
jae
and
cmpb
fbstp
push
xor
mov
jp
mov
pop
mov
icebp
jbe
xchg
inc
xchg
push
cmp
repz
pop
call
mov
jo
push
loopne
rol
dec
clc
jg
and
imul
jecxz
fincstp
jl
mov
add
outsl
lock
push
call
cmp
clc
mov
jnp
repnz
mov
fnstcw
xchg
fistps
and
sarb
repz
bnd
fstpl
and
loop
mov
fnstcw
and
sti
pop
pop
loopne
xor
cmp
mov
xor
push
std
sarl
dec
mov
mov
leave
jae
loop
mov
pop
push
push
mov
mov
mov
leave
xchg
pop
and
pop
ret
push
and
divb
into
push
stos
xchg
mov
push
stc
mov
movsb
loop
aam
gs
enter
fcmovnbe
jecxz
icebp
mov
fidivrs
fmulp
out
xor
into
imul
cmp
mov
jle
push
add
inc
xor
aam
dec
sbb
sbb
inc
and
or
bound
ss
inc
jle
loop
lea
pop
pop
xchg
imul
fs
mov
xor
cli
das
roll
cmp
xor
jbe
jae
inc
fwait
cwtl
mov
or
stos
insb
and
out
pop
je
sbb
pop
and
jb
push
jg
xor
pusha
insl
push
mov
pushf
jb
fwait
stos
mov
fs
in
push
push
pop
dec
mov
jnp
cmpsb
push
inc
lods
mov
insb
pusha
xor
cmp
xor
jns
adc
pop
gs
stos
cli
stos
push
ret
xor
mov
add
cs
ss
push
mov
dec
data16
adc
das
pop
pop
outsl
addr16
stos
add
dec
das
clc
rcrl
push
stos
sub
repnz
and
push
adc
mov
mov
arpl
ljmp
jg
stos
ret
sbb
pop
adc
jl
into
lcall
and
shll
ret
shl
lods
adc
and
imul
test
out
xor
jle
push
scas
mov
and
cs
inc
arpl
outsl
cmpsb
mov
cld
cs
add
cmp
and
divl
adc
ret
inc
mov
std
xor
pushf
dec
test
jnp
into
push
neg
push
mul
inc
or
jecxz
repnz
jp
mov
lret
sbb
pop
xlat
xchg
mov
or
add
jb
mov
jecxz
adc
sti
inc
jbe
jnp
outsb
push
adc
ficompl
xlat
sarb
shl
repnz
push
repnz
repz
in
jb
repnz
ljmp
imul
mov
fwait
out
sbb
fcmovnbe
into
dec
repnz
adc
arpl
xchg
repz
dec
outsl
aaa
xor
mov
mov
mov
mov
mov
mov
jbe
xchg
push
push
pusha
mov
jecxz
orb
bound
pop
rcll
nop
pop
mov
lock
dec
sub
mov
outsl
ljmp
mov
jecxz
notl
dec
pop
cmp
push
mov
mov
fwait
jbe
inc
fucomp
sahf
shl
out
mov
fcmovu
xor
mov
mov
test
shr
and
das
xchg
test
scas
dec
mov
push
cltd
mov
gs
repz
sub
ljmp
in
cltd
movsb
in
mov
idivb
sub
sub
jecxz
testb
sbb
mov
ss
mov
mov
push
mov
mov
mov
in
push
mov
outsl
and
test
sbb
fisubrs
insl
adc
xchg
mov
or
sar
lret
pop
mov
mov
cld
ds
mov
push
xchg
push
popf
xor
out
xor
arpl
lods
nop
jne
lock
jb
jae
in
mov
jb
scas
cmp
fiaddl
mov
inc
pop
mov
mov
mov
icebp
inc
scas
lods
test
cli
idivb
inc
mov
cmp
outsl
jae
push
sbb
fisttps
mov
rcl
sub
out
dec
xchg
and
mov
mov
lret
push
sti
mov
pop
mov
xchg
push
nop
mov
jno
jb
mov
incl
lods
nop
scas
fisttps
fwait
imul
mov
mov
loop
add
jae
scas
xchg
lret
ficoml
shll
dec
sar
test
dec
xlat
fildl
mov
addr16
sub
xor
cld
mov
mov
popf
pop
jb
or
aaa
push
jae
sbb
repnz
loop
arpl
into
sarl
dec
jns
or
rol
testb
xor
in
pop
sbb
jp
dec
insl
es
mov
fwait
into
jp
insl
sub
and
cmpsb
cmc
enter
mov
xor
jg
aaa
je
sbb
jmp
loopne
inc
mov
stos
mov
test
repz
pop
mov
repz
add
ja
mov
ret
ret
in
inc
mov
jecxz
jnp
add
mov
jnp
ret
mov
repz
inc
adc
std
lret
mov
repnz
data16
mov
popa
mov
mov
out
sti
mov
imul
jg
rcr
leave
sti
fcomip
int
adc
jg
cld
xlat
cld
sar
iret
and
inc
cli
hlt
jecxz
aad
cmp
addr16
sub
cmp
and
outsl
mov
rcll
cmpsl
out
mov
mov
jp
sarl
xchg
fldt
jno
pop
xlat
pop
data16
aaa
lahf
iret
sub
xor
adc
outsl
out
cmp
cmpsl
inc
jge
es
dec
cmpsb
or
movsl
scas
inc
pop
mov
pop
fnstenv
push
mov
cs
mov
mov
pop
loop
test
push
cmp
mov
xor
xlat
pop
out
incb
dec
ds
scas
sbb
js
push
fcmovbe
xchg
shll
inc
ja
insb
sub
push
loop
loope
jle
cli
mov
cld
shl
lock
or
ss
fdivs
push
and
lods
sbb
subl
add
sbb
mov
ret
mov
dec
or
sti
ja
jbe
stos
jecxz
inc
jae
loop
adcl
ret
xor
mov
cmpl
lahf
repnz
loope
jle
xchg
mov
adc
push
xchg
fstpl
mov
loop
add
and
xchg
and
xchg
lcall
xor
je
mov
add
shl
mov
int
jecxz
leave
jg
jo
adc
mov
lods
adc
bound
jle
sti
repz
jno
testb
jp
test
jecxz
insl
shl
std
test
add
popa
hlt
jle
jne
mov
std
or
adc
cmp
pop
sub
les
insb
inc
inc
insb
push
pusha
inc
xchg
dec
cmp
jge
fstpt
mov
clc
cmp
sbbb
or
mov
repz
rclb
cmp
lcall
pop
push
mov
ret
out
sub
lahf
pop
cmp
stos
outsl
sti
cmp
negl
jae
loop
mov
out
fucom
xchg
mov
xchg
jg
insb
stos
xor
fninit
mov
mov
jecxz
jg
das
cmp
pop
notb
mov
mov
sbb
adc
cmp
inc
mov
mov
inc
fadds
xor
jecxz
popf
xor
icebp
imul
mov
ret
jge
shll
and
jb
mov
cli
lods
adc
repz
adc
arpl
add
pop
inc
sti
jg
sbb
jnp
std
sti
loopne
xchg
in
stc
push
sti
sti
in
sbb
adc
loopne
dec
imul
decl
and
cli
inc
icebp
bound
outsb
popf
ret
and
xor
pusha
mov
mov
fldl
mov
cmpl
mov
add
xor
bound
rolb
repnz
mov
xorl
mov
jo
nop
dec
mov
mov
repz
push
imul
sarb
inc
push
mov
fcmovu
mov
pop
sarb
repnz
xchg
push
adcl
cmp
fstpl
shrb
mov
fcomip
lret
aas
xor
pop
loopne
es
mov
ffree
popf
mov
push
jecxz
lods
sub
call
repnz
frstor
sub
mov
inc
push
sub
push
popa
jnp
xchg
mul
cmp
pusha
sti
mov
cmp
jecxz
test
jecxz
not
js
arpl
mov
xchg
out
cld
mov
xchg
lret
iret
ljmp
or
out
decl
mov
pop
repz
outsb
xlat
push
xchg
xor
xor
pop
orb
pushf
ret
push
jae
fmulp
faddp
jmp
fbstp
aaa
jp
iret
sti
mov
dec
int3
out
outsb
jle
shll
pop
pop
cld
out
mov
aas
push
imul
lret
jb
aaa
shll
dec
xor
fcomip
jbe
rorl
lea
popf
mov
jg
out
out
out
mov
lods
push
pop
jp
scas
xchg
iret
data16
in
jae
ret
cwtl
sarb
stos
push
shll
repnz
aas
cmpsl
push
adcb
insl
jmp
aas
mov
mov
inc
pop
xor
rol
pop
push
cmp
jecxz
pop
popf
repz
pop
jno
or
rcrb
sub
sub
sbb
sar
data16
imulb
add
jp
xor
dec
cmp
xor
mov
adc
mov
cs
pushf
outsb
and
push
nop
arpl
mov
push
test
stos
pop
dec
xor
sahf
cmpl
xor
sub
mov
shlb
pop
jmp
inc
jg
inc
jbe
xor
sub
sbbl
repnz
mov
adcl
jne
loopne
mov
dec
popf
sti
jae
fcompl
mov
add
xchg
rcl
rcrl
loopne
jns
push
xor
sti
bound
adc
mov
push
add
outsl
add
mull
jecxz
out
sti
iret
mov
push
and
dec
out
out
es
flds
and
in
inc
out
inc
loope
mov
insl
sti
and
icebp
xchg
test
mov
ja
xor
stos
or
cli
inc
cltd
jg
loope
sbb
push
adc
push
decl
jg
pushl
add
loopne
sbb
fisubrs
repnz
xor
mov
rcl
jbe
flds
xchg
push
repz
insl
lahf
jecxz
in
ret
aaa
push
or
jl
mov
pop
xchg
inc
fisttpl
xchg
imul
or
or
or
or
or
or
or
or
and
xchg
jg
sti
daa
mov
je
xor
xor
xor
xor
adc
xor
xor
xor
inc
stos
cmp
push
rolb
xor
pop
aaa
pop
sbb
pop
loopne
xchg
vmread
cmp
sbb
repz
lret
fwait
test
hlt
mov
pop
xor
xor
xor
xor
inc
arpl
divb
pusha
dec
push
sub
xor
and
adc
adc
adc
out
sub
adc
ud2
or
pop
jne
or
pop
dec
pop
sbb
add
shll
xchg
lret
pop
movb
popf
les
mov
lahf
mov
jne
xor
cmp
xor
inc
fistps
pop
jo
pusha
jbe
int
xchg
xor
and
sbb
xor
push
cs
in
xor
and
or
pop
iret
jo
pusha
mov
xor
and
pop
adc
testl
lcall
cmc
out
or
and
pop
cmc
ja
fidivl
pop
dec
jno
out
pop
inc
arpl
dec
pop
sbb
fimull
mov
pop
in
pop
mov
pop
cmp
pop
cwtl
pop
js
cmp
idivl
pop
lret
repnz
mov
ffree
mov
clc
sarl
mov
xor
inc
je
xor
cmp
cli
cli
gs
fs
fs
fs
jo
mov
cmp
sbb
shll
mov
pusha
xchg
push
push
inc
cmp
or
cmc
adc
adc
pop
sbb
push
adc
and
pop
das
aad
adcl
pop
sub
sbb
add
icebp
fdivrl
sbb
call
pop
pop
lahf
sbb
pop
add
jle
push
or
pop
push
pop
cmc
pop
cltd
pop
inc
pop
sub
pop
rolb
lret
fistpl
mov
xchg
pop
int3
aaa
ficompl
jmp
sbb
sbb
sbb
and
cmp
out
mov
adc
or
or
sub
outsl
sub
movsl
xchg
test
lods
test
and
data16
push
gs
lock
xor
xor
xor
cmp
fidivrs
push
pushf
inc
jl
pop
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
jae
arpl
push
sbb
or
add
mov
cmp
cs
and
sbb
or
inc
jno
xor
cli
pop
loop
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
test
jo
repnz
xchg
sti
daa
jecxz
rclb
sub
shr
cmp
xor
arpl
dec
sbb
into
or
jae
sti
test
test
pop
cmp
out
data16
je
fwait
adc
push
mov
negb
mov
sbb
and
jge
xchg
pushf
das
jl
pop
idivb
sbb
sbb
sbb
and
mov
pop
cs
icebp
insb
insl
fmull
mov
cmc
pop
aad
pushf
aas
js
pusha
pusha
xor
inc
negl
cmp
imul
test
mov
out
aaa
jo
outsl
xor
fsubl
cmp
xor
sahf
push
stos
add
xor
inc
pop
xor
and
or
add
push
sti
pop
and
mov
jo
mov
or
mov
imul
pop
push
ds
xor
and
adc
repz
sbb
gs
cmpsb
sub
adc
lods
or
or
or
inc
or
or
scas
cli
adc
js
ret
nopl
in
pop
addb
pop
push
pop
inc
pop
xor
jo
dec
sub
and
sbb
adc
fdivp
mov
cwtl
les
les
mov
push
out
bound
add
jg
filds
fdivl
jl
inc
sarb
cmp
and
and
push
push
xchg
adc
and
push
into
adc
dec
loopne
test
ds
cmp
inc
add
xor
jb
nop
adc
cltd
or
or
mov
mov
xchg
and
push
adc
sahf
adc
pop
icebp
lret
shll
lret
xchg
add
add
adc
push
aam
xchg
xor
adc
fcompl
rcrl
mov
sbb
sbb
sbb
sbb
sbb
xor
adc
add
lock
adc
adc
adc
adc
adc
inc
adc
cmp
or
jl
lret
mov
sbbl
sbb
out
xor
adc
cmp
inc
in
pop
decl
dec
pop
xor
fisubrl
fs
repnz
cmp
xchg
mov
pop
sub
mov
mov
js
sbb
sub
push
mov
pop
and
movsl
dec
inc
and
cmp
imulb
push
add
mov
jl
and
sarb
sbb
jge
add
js
and
inc
adc
out
pop
ss
pop
data16
xchg
mov
mov
pop
sbb
in
out
inc
xor
mov
rcrl
xlat
jbe
pop
out
lret
movsb
mov
outsl
jnp
cmc
mov
add
add
jl
adc
imul
mov
add
xchg
lods
jg
add
jnp
jbe
scas
gs
ss
in
shrb
aam
add
fcom
js
xor
mov
push
jne
hlt
js
push
xor
mov
clc
pop
and
mov
sub
jge
fwait
js
adc
out
push
inc
je
cwtl
and
adc
inc
inc
dec
mov
fdivr
ret
stos
jmp
pop
stc
push
out
aaa
sbb
bound
and
push
and
jle
push
mov
loopne
popa
mov
cmp
add
fsubs
nop
fdivs
or
fcmovne
pop
cmp
jg
cmpsb
out
repz
sbb
ret
in
jmp
loopne
mov
ja
push
jb
adc
and
and
ror
into
fcmovnb
pop
lret
bound
xchg
jp
pop
popa
adc
imul
mov
pop
nop
xlat
mov
jg
push
mov
add
jne
and
push
sub
popa
add
xor
inc
andb
cmp
aas
sbb
lcall
xor
mov
fiaddl
and
jp
ds
cmp
imul
retw
in
ret
pop
push
ret
in
dec
ret
cltd
sbb
jp
jge
es
mov
cmc
cmpb
test
stos
test
push
xchg
xchg
sub
jno
adc
dec
lock
jg
cmp
or
movsb
push
dec
cmp
pusha
mov
repnz
aad
test
loop
imul
xchg
jbe
outsl
dec
jbe
data16
les
or
pop
ss
jne
loopne
ja
jge
popa
into
mov
mov
dec
aas
daa
push
jmp
add
insb
fists
sbb
jp
lret
jle
xlat
lods
popa
add
cmp
dec
sub
mov
repnz
xor
lcall
movsb
popa
jp
mov
xor
dec
pop
dec
call
cmc
mov
xor
dec
mov
cmp
cld
xchg
adc
mov
decb
fmull
pop
hlt
rorb
shl
popa
mov
pop
and
mov
shr
loopne
adc
imul
jo
adc
fldl
jge
xor
sbb
and
shrl
inc
fistpll
clc
cld
aad
fadds
push
sbb
iret
sbb
mov
scas
mov
jne
ret
sub
cli
dec
shrb
outsb
cs
stos
add
aas
or
sarb
scas
les
xor
jb
mov
jecxz
loopne
or
mov
push
adc
push
loopne
add
daa
test
push
add
or
hlt
adc
jle
imul
xor
pop
aam
repz
jae
ret
mov
je
sub
addl
jmp
mov
jae
je
cwtl
fldcw
jmp
or
push
inc
cli
vcmpunordss
insb
or
mov
fistpl
sbb
sbb
push
clc
dec
cltd
arpl
sarb
add
adc
arpl
inc
xor
arpl
pop
mov
leave
add
and
sbb
nop
or
test
and
incb
dec
int
sub
mulb
call
cld
xor
add
fsub
pop
adc
push
add
inc
mov
int3
jae
imul
jns
push
das
xorl
jne
pusha
pop
in
jo
clc
or
cmc
sarb
int3
and
pop
mov
lock
or
paddusb
pop
dec
das
pop
cmp
pop
adc
and
push
divb
ja
xchg
add
nop
jo
jns
fstpt
adc
or
mov
pop
mov
popl
sub
or
dec
push
aaa
add
or
ret
sahf
pop
cld
in
sbb
adc
fwait
add
aad
pop
mov
inc
adc
push
sbb
mov
sbb
cmp
ss
or
das
mov
sub
insl
jle
mov
cltd
dec
rolb
sbb
mov
aam
dec
add
push
pop
aam
repnz
push
pushf
mov
arpl
push
sbbl
pmullw
jb
mov
jnp
jns
dec
dec
sub
sbb
pop
cmpsb
xchg
inc
sbb
ja
sub
jge
pminub
pop
dec
fiadds
rol
push
cmpsb
add
cmp
push
pusha
or
ljmp
bound
sarb
xchg
popf
sti
xchg
gs
dec
adc
jb
orl
pop
push
mov
cs
dec
push
jb
pusha
pop
jge
aas
lret
clc
scas
mov
scas
sahf
aas
fistpl
ljmp
repnz
aas
daa
testb
adc
test
ljmp
mov
rclb
xchg
cmp
xor
sub
add
pop
cli
div
out
ljmp
adc
add
rsqrtps
lods
xor
add
ret
int
add
fmull
adc
loope
in
cmc
pusha
adc
lcall
add
lret
sub
imull
xchg
into
out
jmp
cmp
shlb
test
lahf
inc
push
pop
mov
pop
sti
cmpsb
sbb
cmp
arpl
test
pop
inc
movsb
or
push
repnz
xchg
pop
push
pop
out
lods
dec
add
cltd
cmp
lds
enter
mov
add
adc
lods
mov
sarl
bnd
insb
mov
adc
enter
aaa
ja
std
jnp
pop
je
stos
adc
fisttps
loope
sarb
xchg
fisttpll
loop
mov
jnp
repnz
loope
cmp
cmpl
mov
lahf
sti
push
fwait
sti
rclb
test
cltd
repz
mov
testb
sub
repnz
les
ljmp
mov
fwait
ljmp
fwait
jnp
pop
mov
sahf
mov
and
repnz
jg
cmp
cmp
push
push
push
jecxz
push
ljmp
cmp
xor
or
int3
jecxz
roll
ret
popa
push
ret
or
add
jbe
ret
imul
subl
test
sti
sub
sti
push
mov
jne
cltd
mov
add
push
push
xor
mov
push
adc
jae
adc
aas
fbstp
mov
push
mov
mov
sahf
cmpsb
xchg
push
ljmp
adc
xor
js
sti
adc
sti
adc
popa
lock
jnp
repnz
test
notb
push
cmp
mov
into
mov
loopne
jecxz
insl
or
and
loop
push
sarb
movsl
xor
fnstsw
rcr
ret
adc
or
inc
shl
push
fstpl
cmp
jl
add
adc
add
pop
xorb
pushf
sub
xor
inc
mul
pusha
sbb
push
fstpl
stc
sbb
adc
cmp
cmpsb
call
jge
mov
cltd
inc
xor
fstpl
rcll
fcompl
adc
fdivr
dec
and
add
sub
dec
xor
inc
shl
or
adc
inc
test
xchg
push
jb
cmp
sub
add
leave
mov
xor
shlb
or
mov
cltd
and
sbb
add
xchg
bound
mov
adc
pushf
icebp
in
sbb
add
cmp
inc
shl
and
adc
test
jp
sbb
mov
lahf
sub
and
pusha
or
xor
adc
xor
loopne
jg
cmpsb
inc
sub
xor
loop
repnz
orl
test
shrl
loopne
in
jno
jecxz
mov
je
addr16
leave
xchg
sbbl
ret
std
hlt
mov
nop
sub
mov
repz
adc
cmp
fcoms
dec
cmp
xchg
mov
lock
mov
jae
push
push
push
jb
std
mov
mov
rcll
sbb
repz
icebp
adc
repnz
out
adc
imul
push
pushf
sbbb
xchg
jecxz
xor
adc
and
push
cmpsb
inc
or
cs
push
inc
fisttps
inc
repz
inc
mov
lea
mov
nop
xchg
cmp
jo
rcll
fdivrl
outsb
adc
pushf
sarb
dec
loopne
fists
call
adc
mov
bnd
lcall
popf
test
dec
and
xchg
inc
mov
push
mov
loope
jp
adc
push
or
xchg
mov
adc
ss
push
adc
cltd
push
ss
or
or
push
int
sub
pop
dec
bound
push
cmp
rclb
push
adc
adc
sub
push
jecxz,pt
out
scas
xor
test
rcrl
loope
and
xor
pop
fs
outsl
adc
rcl
jecxz
test
cmp
js
test
ret
adc
je
stos
or
shll
aam
mov
push
scas
aad
xor
adcb
in
add
dec
data16
mov
rorl
popf
and
dec
lcall
xor
xchg
add
cmp
pop
inc
add
repz
xchg
xor
adc
jl
dec
add
mov
mov
mov
fwait
xchg
or
push
sbb
mov
lods
imul
cmp
test
clc
adc
jecxz
mov
and
adc
xor
je
mov
pop
push
add
xor
nop
dec
and
lea
push
push
add
xlat
add
mov
or
push
popa
insb
insb
jb
xor
inc
adc
adc
jp
mov
xchg
sub
adc
stos
xchg
or
cmc
xor
divb
push
sub
pushf
jp
pop
mov
pop
into
adc
test
inc
sub
leave
data16
sub
adc
or
js
xor
and
sub
adc
sbbl
dec
enter
in
adc
jns
sbb
push
push
mov
sub
and
xor
loop
movsb
pushf
mov
flds
mov
push
inc
sahf
jno
inc
outsb
adcb
repz
add
fs
or
sub
out
cmp
xchg
dec
mov
bound
in
adc
sbb
xchg
adc
adc
shll
ja
add
adc
int3
push
mov
add
jge
adc
xor
mov
shrl
and
push
push
add
popf
dec
add
dec
or
sbb
xor
and
xchg
or
adc
mov
xchg
add
repz
or
adc
mov
pop
sarb
mov
dec
add
xlat
add
mov
in
pop
sbb
mov
push
adc
add
dec
push
fsubrl
orl
mov
popa
add
sub
lcall
movsl
lock
dec
mov
jne
daa
in
test
loop
test
inc
xchg
sbb
stos
repz
mov
adc
ss
mov
mov
adc
fdivrl
add
cwtl
xchg
adc
int
cmp
cmpsl
mov
sbb
cmp
mov
dec
adc
mov
push
push
jo
sbb
in
adc
dec
repz
mov
shrl
mov
js
orb
stos
cmp
aad
dec
mov
inc
add
fimull
push
fs
rorl
in
and
orb
mov
icebp
adc
sub
pop
popl
stos
lret
mov
jecxz
jns
popl
or
add
adc
std
fisubl
or
movsb
mov
sbb
or
nop
sbb
pop
mov
pop
push
shl
sbb
aad
push
orl
add
addb
add
les
movsl
or
adc
jno
sub
or
xor
call
mov
ret
popa
mov
mov
lods
adc
mov
pusha
adc
popf
add
repnz
cmp
daa
mov
cmp
push
aad
xchg
mov
mov
inc
mov
push
js
gs
and
sbb
dec
and
mov
adcl
cmp
add
cmpb
lar
cmp
jb
mov
pop
mov
addl
jp
movsb
das
rep
jb
jecxz
loope
mov
sub
gs
adc
mov
clc
adc
jecxz
mov
sbb
or
stos
xor
xrelease
xor
sbb
sbb
mov
rclb
shlb
mov
push
fists
and
xor
push
fs
xchg
shll
mov
xchg
push
adcl
mov
dec
shll
pop
dec
jp
dec
nop
popa
push
sub
gs
cs
fisubrs
mov
cs
out
rcrb
lds
outsl
cmpb
mov
fcmovb
mov
sbb
mov
mov
mov
jne
rcl
daa
push
popf
xchg
and
sub
test
pusha
dec
imul
cmp
adc
lock
jo
mov
repz
pop
xor
xor
test
mov
scas
jo
ficoml
andb
popa
xor
dec
rcrb
adc
sbb
repz
and
es
xchg
or
push
sahf
nop
push
xchg
insl
loop
push
mov
adc
popf
add
shlb
scas
adc
inc
and
pop
nop
pusha
test
adc
xchg
pop
cld
data16
mov
loopne
mov
push
or
xor
xor
in
ds
inc
or
test
leave
mov
ja
ss
pop
cmp
aam
mov
pop
subl
call
push
pop
jo
adc
cltd
test
ficoms
pop
test
out
xchg
pop
and
fisubl
ret
mov
mov
int
outsl
in
cmp
push
sbb
and
xchg
rcrb
ret
or
adc
sbb
arpl
gs
cmpsl
inc
sub
mov
cmp
lret
or
mov
cmp
pop
aas
xor
inc
adc
mov
inc
xchg
nop
or
loope
pop
xchg
jb
add
mov
adc
adc
adc
mov
adc
les
sbb
mov
sbb
cmp
inc
lds
insl
sbb
xor
enter
test
test
nop
test
add
add
imul
data16
sub
jo
inc
add
leave
add
add
lds
repz
loope
or
js
adc
sub
push
mov
jle
push
mov
mov
xor
inc
loope
mov
mov
fidivl
shlb
add
mov
push
test
aaa
jle
aam
fbld
test
outsb
popa
pop
test
cld
rorb
cmp
pop
mov
or
xchg
cmpsb
mov
mov
or
les
cmp
insl
mov
in
popa
xor
sbb
es
jo
repz
aad
pusha
cmpb
rcrb
fists
popf
mov
add
xchg
movsl
add
inc
add
xor
xchg
les
add
dec
xor
mov
xor
pop
test
pop
lds
push
mov
jno
loopne
or
cmp
xor
mov
adc
frstor
sbb
in
adc
push
repz
add
cmp
mov
sub
gs
js
mov
lock
sub
and
jecxz
and
arpl
pop
xchg
add
dec
out
pop
in
jo
or
push
push
lahf
repnz
lcall
in
ds
jecxz
loopne
gs
or
adc
clc
adc
lock
das
popa
fstl
xchg
add
repnz
aas
mov
mov
adc
lea
int
sbb
add
jno
push
jo
rclb
sub
movsl
add
adc
subb
les
pop
enter
imul
cmpsb
sbb
mov
call
push
test
repz
jne
xchg
xor
in
popa
inc
adc
cmc
pop
lods
test
movsb
mov
sub
sbb
jge
mov
adc
sbb
adc
push
fisttps
or
adc
adc
and
dec
sub
push
mov
jns
dec
push
pop
subl
xor
cli
mov
adc
xor
push
popa
push
xor
adc
shrb
lds
pop
test
rclb
cmpsb
rorb
popf
and
int
cmp
test
xor
in
mov
int3
adc
push
loope
outsl
test
fisubs
adc
lock
push
jg
nop
sbb
sbb
int
les
int3
add
scas
mov
mov
repnz
add
push
fisttpl
lcall
lock
imul
subl
ja
jb
add
xchg
fst
push
push
pusha
add
pop
sbb
mov
jge
xor
js
push
xor
add
mov
jne
ret
adc
mov
mov
xchg
mov
inc
insb
rclb
lcall
or
imul
rcll
xor
xchg
sub
xor
and
adc
lods
inc
clc
adc
xchg
push
rcll
fbld
mov
ret
cmp
and
rorb
fsts
popf
xchg
pop
or
cmp
call
push
aad
aad
in
xchg
xchg
xor
mov
sbb
and
push
xor
sbb
mov
push
add
mov
outsl
mov
xor
xchg
in
lods
jns
dec
sub
mov
dec
add
adc
xor
dec
pop
loopne
push
in
adc
mov
enter
js
sti
adc
test
mov
mov
and
mov
mov
mov
pop
ret
ljmp
fisubrl
xorl
lock
xor
lods
lea
or
lds
mov
lock
jecxz
mov
jb
stos
repz
jb
xor
mov
add
movsb
jbe
adc
adc
or
les
mov
adc
mov
add
int
fidivrl
orl
xchg
xchg
cli
cmp
cmp
adc
push
dec
dec
jae
mov
dec
loope
sub
xor
scas
popf
add
or
pop
mov
outsb
pusha
push
test
and
and
cmp
shrl
aas
inc
sbb
push
add
loope
add
sub
push
mov
xor
adc
xchg
test
mov
sbb
loopne
push
sbb
and
call
shll
add
push
test
xchg
out
adc
dec
shlb
repnz
mov
dec
sarb
or
mov
popl
movsb
push
repz
mov
outsl
sbb
adc
ret
adc
shll
cmpsl
repnz
jg
movsb
sub
popf
arpl
cmpb
mov
arpl
pop
add
mov
loop
sbb
ret
mov
sahf
lods
mov
mov
repz
mov
xchg
inc
cmpsb
loop
loope
es
pop
or
fildll
or
dec
cmp
ret
pop
popf
pop
cwtl
fcomip
popf
sahf
jne
push
mov
cmp
sub
shlb
test
loop
popf
in
cmp
mov
or
loopne
sbb
adc
filds
inc
mov
scas
ljmp
dec
pop
jl
cs
insb
popf
mov
inc
adc
push
push
hlt
insb
sbb
rorl
and
and
adc
mov
lods
fs
xchg
repnz
mov
ret
adc
push
adc
mov
insb
push
cmp
adc
mov
lods
jno
dec
flds
inc
subl
sbb
push
test
inc
mov
sbb
adc
adc
jns
in
sbb
popf
pop
aam
or
popf
mov
outsb
mov
dec
test
gs
pop
push
jb
add
loopne
sbb
sub
lret
mov
imul
fcompl
or
repnz
add
jno
clc
adc
movb
cmp
addr16
adc
mov
push
in
ret
sbb
push
add
add
jno
inc
mov
mov
mov
pusha
ret
jns
adc
repz
test
scas
shll
push
mov
mov
inc
adc
xor
test
mov
sbb
push
inc
adc
xchg
and
push
adc
popa
js
mov
push
lods
xlat
inc
push
movsl
shrb
inc
push
in
ss
and
sbb
rcll
jecxz
pusha
loope
inc
mov
sub
imul
sbb
adc
cmp
mov
and
add
inc
sub
push
cmpsb
sub
lcall
xor
movsb
mov
fcompl
mov
sbb
sub
push
fstl
cltd
lods
rcll
lcall
inc
cmp
clc
cmp
add
dec
cmp
xor
dec
pop
and
lods
add
push
pop
movsl
pop
mov
roll
pop
jecxz
loope
inc
test
xchg
push
push
and
icebp
push
loopne
mov
in
inc
dec
je
inc
outsl
xchg
in
and
cmp
insb
pop
js
dec
stos
adc
enter
mov
pop
xor
push
or
jns
shll
cmp
adc
push
faddl
pop
lods
inc
xor
clc
arpl
adc
lods
rcrl
stos
fiaddl
mov
inc
shl
push
lods
daa
mov
bound
add
shrl
sarl
adc
and
mov
dec
stos
adc
imul
or
test
mov
outsl
mov
repnz
add
mov
push
and
jo
cmp
sbb
add
in
pushf
movsb
int3
pusha
xor
mov
mov
and
les
jns
out
add
movb
bound
popa
push
mov
inc
sarl
jb
loope
adc
xor
sarl
adc
test
outsl
adc
insb
jecxz
and
push
cmpl
nop
xor
jbe
loope
push
cmp
or
icebp
adc
cmp
repz
push
lret
rorl
xor
jo
aad
cmp
xchg
mov
inc
data16
push
adc
cs
test
mov
mov
pop
aam
add
push
fs
je
jo
repz
aam
outsb
xchg
nop
push
adc
lods
outsl
dec
arpl
sbb
mov
adc
push
or
test
sub
mov
cmp
push
and
xchg
mov
stc
add
add
xchg
and
mov
inc
mov
push
push
ret
dec
lret
inc
js
xor
cmpsl
xchg
jne
dec
inc
mov
repz
dec
and
out
fsubrl
push
mov
test
and
push
gs
adc
add
dec
lds
test
add
aad
movsl
push
aad
jl
sub
adc
outsl
call
out
lock
xor
and
sbb
cwtl
rep
in
and
adc
mov
or
pop
or
mov
and
adc
pushf
rclb
adc
movsl
sub
es
outsl
adc
inc
adc
adc
inc
adc
fidivs
das
adc
xor
in
lds
and
jne
add
pop
cld
mov
dec
adc
push
pop
fwait
cmp
outsl
lods
push
push
test
push
sbb
shll
dec
stos
mov
test
adc
adc
jmp
add
fimuls
or
dec
cmp
stos
bound
mov
popa
adc
push
icebp
add
cltd
pop
jg
cmp
mov
adc
mov
scas
mov
mov
pop
xchg
inc
adc
mov
inc
mov
push
mov
enter
jge
push
sub
lods
jno
js
icebp
or
icebp
push
mov
sub
and
movsb
mov
xchg
sub
mov
scas
lods
ret
in
sbb
inc
or
sub
adc
xor
orb
and
add
outsl
adc
popa
sbb
push
xchg
insl
inc
jns
adc
xor
cmpsb
add
outsl
js
sub
jecxz
mov
nop
movsl
nop
icebp
mov
jno
test
in
ds
add
data16
data16
test
jno
mov
mov
insb
insb
push
jg
arpl
inc
ret
nop
fidivl
xor
or
jo
add
fnsave
push
xchg
mov
fcom
and
dec
addr16
cmpsl
shrb
xorl
and
adc
sbb
pop
rcrb
sub
adc
hlt
repz
xchg
add
adc
xlat
adc
das
jo
adc
add
sub
xchg
test
add
mov
test
mov
pushf
xchg
mov
in
adc
test
cwtl
inc
mov
pop
add
sbb
test
popa
add
or
mov
fadd
rorb
mov
mov
fsubs
push
lods
mov
jo
push
inc
dec
aas
jae
xor
adc
add
adc
shll
fidivs
mov
cmp
jecxz
mov
jae
inc
subl
xor
aad
cmpsl
repz
or
cmp
jo
mov
out
loop
inc
dec
push
hlt
ret
adc
arpl
andb
std
js
dec
cmp
dec
push
mov
cmpsb
aam
cli
and
dec
or
dec
push
lret
shlb
adc
stos
repz
adcl
fcompl
sub
scas
push
jecxz
mov
or
adc
xchg
add
adc
dec
stos
adc
je
and
cmp
nop
test
mov
xchg
lods
movsb
cmp
dec
pop
xchg
popa
or
js
inc
xor
mov
xchg
pop
adc
push
mov
add
pop
jno
lds
adc
vmovhpd
daa
les
mov
adc
mov
inc
icebp
xchg
inc
sbb
pause
add
mov
dec
cmpsb
das
add
int3
popa
loop
sbb
xorb
adc
inc
das
adcl
adc
inc
pop
adc
sub
jns
outsl
pop
inc
add
sub
mov
push
lss
mov
xor
xor
popa
jb
pusha
jns
filds
nop
pop
loopne
xor
insl
mov
sarb
xor
lods
sub
inc
shl
adc
sub
inc
test
inc
rcl
jle
loop
icebp
dec
xchg
shl
jl
push
popaw
xor
push
sbb
inc
in
adc
and
add
jae
mov
lcall
sbb
sub
xchg
dec
in
outsb
mov
in
mov
pop
push
test
stc
add
or
dec
mov
jo
dec
push
xchg
mov
xchg
adc
mov
nop
mov
adc
aam
jns
pushf
arpl
adc
stos
mov
push
mov
jae
mov
push
das
inc
pusha
mov
push
in
pushf
jbe
dec
adc
sbb
mov
inc
imul
pop
stos
add
sar
adc
or
pop
loope
jb
xor
cmpsl
sbb
lea
jb
or
jo
mov
adc
mov
sub
and
add
and
rclb
add
insb
sub
lods
ljmp
push
sbb
fbld
xor
fbld
lret
xor
sub
cmpsb
cmp
inc
inc
push
pusha
insb
and
mov
add
mov
bound
xchg
repz
inc
loopne
adc
mov
loope
gs
push
jns
dec
roll
mov
repz
mov
notl
jnp
ljmp
mov
mov
inc
add
push
gs
add
shll
sbb
push
cmp
or
les
push
xor
xchg
adc
inc
adc
lahf
xchg
push
loope
frstor
popf
mov
cmp
popf
bound
cmp
sub
subb
push
sub
ljmp
xorl
adc
mov
jno
push
jo
loop
test
or
xchg
ficompl
test
mov
sbb
mov
mov
test
test
fldt
jbe
dec
mov
pop
push
inc
sbb
pop
add
sub
outsl
mov
mov
mov
das
jg
fldl
dec
mov
push
movsl
repz
test
repz
adc
pusha
xchg
and
or
imul
rcll
pusha
stc
scas
insb
shll
adc
icebp
ror
lock
icebp
jbe
stos
cmpl
and
add
pop
mov
adc
adc
pop
xor
xor
adc
mov
stos
adc
fcom
loop
dec
test
gs
es
bound
and
or
pop
mov
icebp
mov
aam
jno
cwtl
jo
adc
jbe
jo
popa
push
xchg
cmpl
mov
mov
rclb
adc
outsl
sbb
push
adc
pop
jo
dec
pusha
inc
lcall
add
adc
xor
shlb
fnsave
lcall
or
and
add
xor
adc
xchg
rcll
push
adcl
adc
xchg
adc
xchg
mov
es
mov
cmp
popa
mov
icebp
adc
xchg
add
cwtl
in
and
adc
adc
add
idivb
cmp
nop
shll
mov
inc
xchg
nop
in
aam
pop
push
adc
mov
xchg
push
push
mov
and
into
hlt
addb
repz
push
mov
pop
inc
les
sub
adc
shll
or
and
lds
adc
rorb
adc
xchg
addb
mov
repz
cmp
or
addl
jb
pop
sahf
rclb
lret
inc
scas
adc
mov
or
push
jo
icebp
push
sbb
sbb
je
inc
adc
xchg
xchg
rcrb
push
add
xor
xor
loope
xor
ret
dec
dec
sbb
sbb
icebp
pop
inc
adc
rcll
adc
lock
adc
outsl
or
and
xor
pushw
fsubl
insb
outsb
ret
pusha
rol
jg
dec
sbb
outsl
or
rep
adc
mov
cmpsl
adc
les
and
loopne
xchg
mov
push
pop
mov
fcomps
stos
leave
mov
push
adc
arpl
ljmp
dec
xor
js
in
adc
mov
cld
jns
test
inc
adc
arpl
mov
adc
repz
dec
inc
and
leave
dec
pusha
dec
xor
je
loop
stos
add
lock
mov
repz
push
int3
add
or
shrl
mov
rcrb
mov
mov
flds
push
mov
sub
orl
loopne
std
adc
mov
repz
outsl
cmp
pop
push
dec
adc
cmpsb
mov
nop
xchg
push
cmpsb
jns
lea
sbb
xchg
xor
xchg
adc
jp
mov
add
add
jbe
cmp
mov
out
cmpb
inc
jno
mov
adc
mov
arpl
and
add
dec
mov
ret
insb
jo
push
rclb
push
repz
orl
push
jnp
inc
jg
or
sbb
and
push
pop
xchg
jo
shrb
mov
or
fs
pushf
ret
fstl
repz
mov
pop
sub
adc
push
or
inc
cltd
xchg
lock
adc
and
push
and
sbb
lock
mov
sbb
loop
add
dec
jae
xchg
rcrb
pop
push
xchg
ret
adc
aam
aad
adc
inc
push
xchg
cwtl
shlb
sahf
pushf
push
insl
cli
adc
repnz
subl
push
aam
mov
repz
adc
arpl
push
push
xchg
mov
cmp
sarb
loop
mov
cmpl
adc
inc
dec
mov
lea
inc
outsl
es
xorl
or
andb
fidivrl
push
mov
popa
loopne
xchg
sub
jno
mov
pop
fnstenv
mov
jbe
lds
fnstsw
lock
mov
adcb
dec
sub
push
mov
push
adc
mov
pop
adc
loop
add
mov
or
lock
cmp
stos
test
repnz
push
adc
movsl
xor
mov
or
add
jno
push
test
mov
nop
sahf
rcr
inc
aam
dec
stos
adc
gs
lds
mov
dec
loopne
xlat
adc
xchg
jge
es
into
notl
arpl
inc
and
mov
divb
sbb
xor
lods
shlb
inc
jne
adc
popa
popf
rcll
arpl
jo
mov
test
call
fistps
xor
adc
stos
popa
inc
cmpl
stos
inc
mov
pusha
lea
es
nop
or
push
lods
outsb
push
nop
test
sbb
jb
add
xchg
pusha
and
fistps
inc
inc
cmp
lods
rorb
sub
push
mov
add
adc
add
xor
test
xchg
sbb
lods
call
cmpsb
int3
subl
and
mov
dec
mov
orl
xor
fisttps
inc
das
mov
inc
push
dec
sub
xor
mov
mov
adc
in
aam
push
fidivrl
test
xor
repz
loopne
adc
cmp
sub
cmp
cli
add
lods
mov
inc
sub
cmpsl
add
pop
or
lcall
mov
dec
jns
jno
inc
repz
pushf
jbe
or
lock
test
push
ss
push
mov
sbb
xchg
sbb
leave
ret
lock
adc
outsb
add
push
test
mov
cmp
push
cmp
lods
xchg
loope
lea
adc
push
xor
fdivs
pop
insl
mov
mov
cwtl
jo
push
xor
sub
adc
and
jecxz
adc
dec
pop
repnz
jmp
cmpsl
xor
jg
fsts
sub
sahf
movsl
mov
add
mov
mov
dec
dec
mov
cmp
mov
mov
loopne,pt
cs
mov
lock
sub
gs
daa
and
mov
adc
adc
inc
add
add
cmpsb
sub
lods
inc
xor
mov
sub
mov
clc
or
scas
pop
jno
mov
dec
pop
mov
ret
jno
xor
insl
adc
add
push
repz
aam
and
ljmp
pop
ficoml
mov
sarl
out
mov
loope
mov
loope
or
movsl
xchg
pop
scas
inc
xchg
push
inc
jb
sbb
or
sbb
push
jp
and
loopne
mov
pusha
shll
and
cmc
repz
xor
xchg
jp
mov
add
mov
repz
je
jo
test
pop
shll
daa
add
sbb
add
push
pop
shll
test
insl
pop
push
push
imul
rorb
jno
nop
xor
insb
pop
jno
cmpsl
loopne
xchg
and
adc
add
dec
mov
mov
push
push
push
stos
adc
push
jecxz
mov
int3
lea
push
insl
add
dec
mov
addr16
inc
xchg
sub
call
pop
or
inc
add
cltd
dec
add
lret
ficompl
nop
mov
stc
and
push
pushf
pusha
lcall
arpl
inc
pop
scas
jae
sub
mov
mov
add
adc
xor
push
ficoms
dec
push
mov
outsl
adc
test
lock
rorb
repz
bound
mov
jno
rep
mov
adc
and
aas
push
adc
movnti
inc
xchg
sbbl
mov
inc
push
clc
jae
adc
repz
ljmp
and
bound
pop
popa
es
mov
and
movsb
icebp
jno
inc
lock
mov
push
andb
mov
cmp
sahf
push
push
pushf
mov
mov
adc
orl
and
sbb
lret
popa
adc
fdivrl
mov
and
mov
jl
mov
mov
fiaddl
adc
les
lock
adcl
or
popf
sbb
jecxz
mov
mov
pusha
aad
xchg
add
xchg
mov
jb
std
jns
daa
and
pop
cmpsl
mov
mov
mov
loop
mov
xchg
sub
adc
xlat
adcl
test
inc
aam
push
into
int3
xchg
adc
mov
xor
xchg
sub
jp
push
cmp
mov
jb
jo
test
in
adc
pop
jb
mov
adc
xor
pop
xor
dec
xor
arpl
add
lods
cmp
test
mov
into
mov
mov
pusha
mov
pop
test
cmp
xchg
sbb
adc
mov
push
xchg
loopne
xor
in
ret
and
adc
pop
cld
movsl
adc
mov
loop
mov
rcll
jb
jo
cmp
jns
xchg
xchg
sub
rolb
pushf
adc
dec
or
mov
mov
xchg
dec
inc
ret
xor
inc
aad
pop
mov
mov
and
jno
addr16
add
or
sub
ret
dec
sbb
push
outsb
xor
pop
nop
shrb
lock
jae
jae
mov
xor
loopne
push
shl
jb
repz
test
lods
ret
dec
adc
cmp
scas
xchg
xchg
bound
shlb
xor
jno
inc
jae
add
or
push
cmp
pusha
test
pop
lock
in
pop
pushf
repz
imul
or
adc
inc
lods
in
mov
test
xchg
sbb
adc
mov
cmp
add
jecxz
xchg
inc
xor
mov
jl
jg
int3
inc
sub
sub
addr16
adc
rcll
sub
and
push
insb
adc
sbb
push
data16
cmpsb
aas
ss
repz
sbb
sub
adc
out
push
mov
jbe
pop
and
das
aaa
aas
add
insb
cmc
test
icebp
repnz
incl
push
enter
or
add
popa
push
sti
fistpll
jg
insb
out
push
mov
dec
sti
mov
xchg
bound
out
sbb
es
and
lea
ds
outsb
xor
pop
dec
inc
push
je
pop
mov
pop
dec
test
dec
mov
xor
test
or
or
aaa
cmp
mov
pop
fcmovnb
pop
adc
aas
lock
jecxz
mov
xor
pushl
arpl
add
jecxz
jnp
jmp
xchg
bound
loopne
out
sub
enter
sub
cmp
add
or
ret
fsubs
clc
stos
je
and
outsl
inc
xor
insl
push
pop
repnz
arpl
mov
pop
arpl
out
out
add
xor
mov
jecxz
rcll
outsl
xor
pusha
arpl
rorl
sbb
and
lcall
or
push
rcrl
mov
or
cwtl
xor
and
jno
mov
mov
nop
loope
mov
cmp
insb
dec
mov
sub
mov
jne
sbb
fdivrs
loopne
call
sub
stos
jl
jb
movsb
dec
sar
lods
push
mov
imul
movsb
pop
sbb
repnz
out
fcomps
rcrb
stos
pushf
sub
cmpl
pop
fistpll
adc
or
lock
in
mov
add
sub
in
rorb
mov
xchg
xlat
and
cltd
std
test
icebp
adcb
cmp
shll
sahf
adc
push
inc
das
les
mov
inc
insl
fisubl
push
or
pop
fdivs
test
jo
adc
roll
fistpll
das
cmp
xorl
js
out
xor
jae
cmc
xchg
arpl
or
adc
pop
push
fisttpll
xchg
ds
pusha
jae
fidivs
pop
and
push
lock
and
loopne
cmpb
ljmp
add
mov
repnz
stos
mov
outsl
sub
push
mov
or
rclb
mov
popa
jno
out
fwait
xor
push
xchg
out
js
mov
jae
jbe
pushf
fbld
addr16
loope
ljmp
xchg
jb
or
movsl
jb
out
and
jno
mov
fnstsw
outsb
lret
mov
push
mov
jle
jl
xor
xor
jae
cld
movl
fwait
in
inc
pop
jnp
andb
add
rorb
sahf
mov
enter
out
mov
inc
and
cli
lret
std
mov
mov
jecxz
out
xor
jecxz
frstor
or
add
aas
imul
ret
leave
out
mov
jecxz
or
filds
popf
jecxz
lahf
popa
mov
decb
out
ret
cmc
aas
into
lahf
jecxz
adc
imul
sbbl
scas
stos
repz
adc
push
inc
sbb
call
jnp
inc
aas
mov
inc
fdivr
out
or
mov
lds
out
jae
cmp
arpl
fld
in
mov
out
ja
in
inc
loop
fistpl
mov
mov
push
mov
std
icebp
xchg
repnz
addl
outsb
add
cmpl
inc
add
jp
fidivl
scas
mov
and
loope
fbld
cmp
ret
les
mov
ror
mov
int3
loop
ret
adc
shrb
insl
mov
pop
adc
inc
inc
inc
pop
lret
dec
cmp
repnz
sbb
aas
mov
cmp
mov
scas
mov
adcb
pusha
ret
jecxz
add
mov
xchg
add
mov
fildl
ss
and
jg
add
rorb
push
jecxz
mov
loopne
clc
and
or
addb
mov
cmpsl
popa
roll
ffreep
jecxz
inc
mov
loopne
fldenv
bound
mov
rcr
ret
rcl
addl
sti
mov
mov
testb
shrl
ror
adc
add
add
iret
std
scas
lret
and
in
lret
test
inc
flds
sub
mov
jl
mov
add
ja
mov
movsl
arpl
inc
lret
pop
jecxz
lret
sub
ret
movl
pop
add
and
mov
xorl
mov
mov
mov
mov
call
movb
andl
lahf
lret
mov
inc
and
lahf
inc
sbb
mov
icebp
xorb
or
xchg
ja
insb
ret
out
or
fwait
inc
adc
jo
ret
jecxz
es
sahf
mov
xchg
xchg
add
add
xchg
test
mov
mov
add
addl
cmp
icebp
ret
lcall
andb
lea
inc
arpl
and
push
shll
shll
pushf
loopne
leave
mov
and
ret
ficoml
arpl
ret
xorl
pop
xchg
inc
pop
pop
add
testb
push
icebp
add
mov
push
push
add
orl
adc
stos
cmp
inc
mov
cmpl
idivb
jl
inc
xchg
cmpsl
inc
or
mov
ret
orb
testb
mov
adc
mov
mov
and
xorb
jecxz
das
adc
das
cmp
inc
inc
xchg
cmpl
aaa
adcb
mov
lea
testl
sbb
inc
pop
lret
add
test
faddl
movsl
lea
jg
mov
inc
mov
add
icebp
add
les
inc
mov
into
xchg
icebp
add
fildl
mov
mov
inc
add
ret
idivb
shlb
loope
loop
inc
xchg
movsb
fldl
lret
and
ret
mov
mov
repz
ret
add
mov
clc
and
mov
scas
push
inc
and
sti
bound
pusha
adc
stos
test
mov
add
fbstp
loope
sbbl
pop
and
ret
push
ret
ret
std
loope
sbb
popa
mov
shl
or
shll
xor
fbstp
insb
and
or
lcall
sti
ret
outsb
loope
inc
decb
add
add
cmc
ret
ffreep
lds
xorb
and
sti
cmpsl
jg
out
mov
ljmp
pop
jb
ffreep
loop
mov
push
mov
lret
xchg
arpl
inc
ljmp
jnp
xchg
cmpsl
add
add
mov
fistpll
jecxz
loope
jg
adc
cld
ret
add
nop
jecxz
push
addr16
mov
das
cmp
fs
jle
test
dec
mov
add
add
xor
lcall
jo
jno
test
dec
mov
ret
scas
inc
jl
icebp
inc
dec
push
mov
or
subb
call
inc
sub
shrb
shl
inc
adc
call
jecxz
mov
add
lock
std
and
aas
inc
add
cld
shl
fildl
mov
sub
mov
lock
jnp
mov
adc
andl
repnz
shrl
and
pop
mov
xchg
addb
pop
ret
inc
jnp
fisubl
xor
inc
inc
lahf
in
inc
inc
cmpsl
call
ljmp
movsl
subl
shlb
call
jbe
aas
lods
into
ret
jecxz
push
jnp
and
jp
mov
adc
dec
lahf
jae
ljmp
shlb
scas
xor
ss
cmp
jp
sbbl
repnz
cmp
inc
push
jae
test
and
sub
jbe
mov
stos
dec
fists
push
pusha
cmp
inc
push
jmp
mov
jo
repnz
fcmovnb
and
sbbb
ret
adc
jns
inc
inc
xchg
cli
lods
lea
inc
mov
xor
cli
cmpsb
pop
rol
inc
add
lds
repz
outsb
xchg
shll
or
inc
lcall
test
push
push
orb
adc
push
mov
ret
sub
test
insl
mov
iret
cli
push
cmpsl
subl
idiv
add
cmp
je
sub
ljmp
icebp
dec
idiv
xlat
loope
add
andl
icebp
sub
cltd
addr16
rolb
out
inc
ja
jne
lcall
jne
xor
and
inc
scas
add
add
rcr
je
js
add
jns
inc
ret
mov
stc
mov
bound
sbb
mov
in
dec
rolb
and
mov
add
mov
fisubl
jp
push
inc
aaa
orl
shlb
repz
outsb
bound
out
repz
mov
ret
inc
mov
lock
dec
jecxz
mov
push
jle
mov
xlat
mov
ljmp
movl
ret
adc
mov
sub
mov
and
fidivs
and
jecxz
cmpb
inc
inc
fwait
popa
or
shl
call
jecxz
in
pop
cmp
mov
pop
loopne
and
inc
add
cld
xor
xchg
mov
push
xlat
lock
mov
subb
cmp
subb
or
cmpsl
lret
divb
aas
sbb
test
ljmp
bound
push
addl
inc
sti
in
js
ret
adc
mov
dec
scas
mulb
inc
rep
loop
push
mov
lret
bound
jecxz
repz
outsl
inc
mov
and
inc
cs
mov
cmovae
subb
and
pop
out
clc
adcl
and
push
repz
inc
pusha
scas
addl
xor
dec
into
and
aas
mov
mov
ret
outsl
and
cmpb
jns
and
cmp
shll
ret
ret
cmp
jne
adc
fcomps
inc
pusha
inc
scas
and
addb
inc
ret
in
lods
or
pop
ret
jb
jecxz
mov
jge
and
or
jae
add
insl
add
or
movsb
icebp
rcrb
rclb
push
jecxz
addr16
mov
jg
push
clc
mov
mov
out
mov
jo
mov
add
mov
inc
stos
sub
pusha
insb
add
lret
push
inc
jnp
pop
fisubl
cmp
and
sub
in
jg
out
jno
ret
loop
pop
add
jnp
pop
xchg
inc
in
shlb
leave
testb
ret
xlat
js
dec
mov
cmpsl
loop
inc
adc
mov
cmpb
inc
xor
in
mov
push
loop
dec
repnz
sbb
stos
repnz
shll
in
fstps
pop
xchg
in
mov
rcll
in
stos
vpackuswb
cmp
pop
adc
cmc
sub
add
sbb
adc
das
mov
inc
testl
andb
jmp
add
jno
pop
sbb
addr16
stos
cmp
inc
add
mov
out
sbb
mov
add
stc
stos
and
xor
cmp
loop
jecxz
ds
cmpsl
loop
inc
mov
mov
xchg
jno
cmpb
rcl
orl
cmp
mov
shl
rcl
in
adc
inc
pop
dec
popa
js
or
cmp
and
clc
subb
arpl
jae
cltd
addl
mov
les
inc
pusha
and
sbb
rorb
mov
out
cli
add
add
ret
cmp
cmp
inc
inc
loopne
sarl
add
and
dec
loopne
sbb
ret
adcb
jecxz
dec
repnz
jle
aas
repnz
inc
aas
repnz
insl
jnp
and
xchg
popa
sub
adc
jg
aaa
xchg
jg
aaa
and
add
test
add
aam
xchg
stc
jo
arpl
loope
std
sub
repnz
ret
repnz
div
in
add
and
cmp
mov
cmpb
icebp
add
add
xchg
or
lret
rcr
and
ret
repnz
ljmp
and
mov
mulb
stc
jno
popa
lock
icebp
adcl
lahf
cld
xchg
and
cmp
or
loope
loop
ljmp
mov
fstpt
mov
jnp
repnz
xor
fistpll
adc
or
mov
loope
jmp
jae
popa
pop
xchg
sbbb
jae
fidivs
inc
sub
jno
loopne
outsl
mov
sbb
fnsave
mov
xchg
fisubl
mov
loopne
adc
inc
daa
fisttpll
mov
add
sti
mov
loop
sbbl
dec
int
dec
ret
aaa
add
or
fistps
cmp
mov
or
loop
mov
add
stc
scas
add
test
cmp
jne
popa
mov
adc
jp
ret
testl
decb
jp
ret
xor
cmpsl
mov
and
jg
sbb
cmpsb
mov
xchg
rorl
mov
add
stc
addr16
xchg
or
arpl
dec
inc
mov
cmc
xchg
add
repnz
shrl
inc
ret
and
xchg
test
jle
cmp
add
inc
into
mov
lcall
push
inc
jp
cmp
adcl
out
add
pop
add
sbb
cmp
add
inc
inc
rcl
adc
div
aaa
xor
les
popa
inc
inc
rcl
add
adc
divb
add
rclb
xchg
nop
ja
mov
inc
inc
add
ret
add
mov
inc
add
and
lock
xor
out
daa
and
loope
and
icebp
repnz
add
adc
add
mov
mov
push
push
xchg
xchg
cmpsl
movsb
add
mov
mov
push
push
xchg
xchg
movsw
cmpsb
add
clc
cmp
lret
enter
cld
aas
cmp
int3
add
cli
cmp
leave
lret
add
cmp
push
add
mov
mov
jg
mov
mov
jns
mov
mov
jge
mov
mov
fcmovnu
sbb
jmp
sub
add
fcompl
sbb
in
das
sub
sbb
jmp
fstp
sbb
add
fwait
cwtl
imul
add
lahf
pushf
outsl
insb
scas
lods
add
cltd
lcall
pop
popf
sahf
insl
outsb
lods
scas
inc
ljmp
and
pop
packuswb
mov
and
xor
sub
push
ljmp
arpl
inc
loop
stc
test
xor
out
and
ret
loope
out
sub
pop
out
add
rolb
into
in
push
lock
push
adc
popf
add
arpl
add
ret
daa
mov
rcll
imul
inc
dec
ret
adc
add
jo
loop
jo
inc
jnp
out
ja
push
inc
and
push
adc
push
pop
rclb
addl
push
add
or
jg
cli
shl
movsl
xor
mov
add
out
fildl
out
in
jle
out
fwait
dec
adc
xchg
aas
pop
xchg
jecxz
lahf
inc
mov
inc
filds
daa
add
push
ret
mov
fidivrs
add
std
pop
repz
es
in
fpatan
je
ljmp
push
shlb
adcb
faddl
dec
or
ffreep
inc
loope
test
fwait
ret
sub
scas
out
incl
ret
push
cmp
inc
rcll
push
ret
div
subb
xor
sbb
sti
push
cld
xrelease
inc
mov
and
jns
pop
addb
jle
shll
ljmp
sbb
loope
xor
sbbl
movsb
out
jns
pop
cmp
loop
fisubrs
xor
pusha
or
jecxz
cmpsl
or
int
popa
pop
jb
xchg
mov
test
inc
lds
xor
daa
and
test
in
dec
mov
or
into
outsb
dec
mov
lcall
inc
mov
cmp
mov
push
add
rcl
andl
inc
scas
add
dec
jecxz
jp
cmpsl
mov
outsb
cmp
xlat
out
jno
lock
sbb
lock
ret
cmp
pop
aas
xor
mov
inc
mov
outsb
int3
arpl
repnz
es
and
icebp
xor
shrl
ffreep
stos
and
mov
gs
adc
jge
rcr
imul
loope
lds
insl
mov
out
inc
jb
jp
pop
aas
jbe
add
ja
roll
add
mov
jo
faddp
add
loop
data16
push
gs
jle
sub
mov
arpl
and
add
pop
xor
jle
mov
aas
jnp
gs
and
add
cmp
ss
rorl
outsb
cmp
test
ja
mov
xor
incl
roll
jle
cli
nop
fdivrl
arpl
cmpsb
clc
lret
es
xchg
out
push
pop
outsb
push
mov
jl
mov
stos
and
pop
and
scas
outsb
cmp
shlb
mov
cs
push
and
dec
rcr
addb
jle
popa
mov
repnz
jp
or
jb
jae
loop
loope
outsb
mov
imulb
xchg
xchg
push
mov
xchg
mov
mov
jnp
pop
daa
inc
mov
rcrl
and
imul
fst
ret
ret
jmp
mov
mov
loop
lea
and
mov
mov
int
repz
gs
popa
aas
in
loope
ss
mov
xchg
lock
test
fldl
data16
xorl
mov
loope
js
mov
cs
mov
mov
aas
outsb
testl
mov
mov
xchg
mov
mov
pop
add
in
clc
jle
mov
push
sarl
lea
nop
mov
btc
les
jg
loop
push
sub
xchg
into
mov
jmp
inc
cmp
push
xchg
bound
lds
repnz
adc
clc
pop
mov
xchg
mov
in
cmpsb
dec
jb
arpl
mov
cmp
divb
mov
and
mov
mov
xor
sub
jo
pop
jg
sbb
cmpsl
mov
push
mov
popf
jecxz
jae
stc
movsl
ret
ja
js
and
xchg
cwtl
das
inc
inc
add
sbb
push
mov
inc
mov
loop
or
stc
aad
in
out
cmpl
and
aaa
scas
insl
inc
jp
aaa
out
xchg
push
mov
std
mov
jnp
bnd
lds
movsl
inc
test
cmpsl
loopne
insl
cmp
jp
cmp
das
out
add
jb
lock
mov
repz
push
jb
sub
jbe
cmp
mov
ja
fwait
ss
div
cli
lret
sbb
jle
addr16
repnz
fsubrp
fnstcw
outsb
mov
gs
pop
scas
sub
inc
adc
pop
shll
out
outsb
push
into
jnp
in
fisubs
lods
in
cld
cs
repnz
inc
mov
jle
mov
push
orl
ss
mov
mov
mov
xchg
mov
ss
mov
sti
scas
mov
mov
dec
ret
cmp
xchg
imul
jmp
lock
popa
and
mov
loop
lds
test
pop
cli
inc
shll
mull
mov
mov
lret
pop
faddl
pop
not
ret
test
and
or
into
je
shl
dec
dec
repnz
lods
std
pop
mov
rcll
xchg
add
inc
xchg
adc
inc
movsl
pusha
mov
or
rol
aaa
push
lahf
cmpb
mov
push
ljmp
ret
adc
in
loop
xorl
and
and
and
xor
adc
loopne
lahf
and
mov
loopne
dec
cmp
adc
or
pop
pusha
add
jecxz
jg
lods
jp
std
cmpsl
xor
stos
jecxz
add
add
mov
loop
lcall
bound
in
out
or
in
inc
sbb
fisttps
loope
mov
in
push
jle
add
cmp
aas
lds
jns
mov
popf
xlat
lock
jecxz
mov
stc
std
in
jo
loop
mov
cmp
addl
faddl
incl
lock
stc
jmp
lods
ret
jle
aas
inc
push
jge
xchg
incl
fs
loop
sub
aas
popa
pop
push
add
scas
repz
sbb
mov
lds
call
push
jecxz
mov
shl
hlt
mov
push
and
test
ret
imul
popf
out
add
data16
shll
movsb
inc
imul
js
dec
and
aas
jecxz
jg
lea
inc
inc
jle
add
jl
popa
pop
push
arpl
adc
sbb
filds
jns
and
xor
fnsave
sahf
mov
sbbl
push
out
inc
lret
mov
mov
push
dec
ret
out
ret
sub
nop
jle
cmp
xchg
fnsave
outsl
shll
loop
inc
push
jb
push
jge
push
xchg
ljmp
xchg
ret
cmpsb
or
xchg
jns
stos
jno
push
loopne
popa
push
ret
jno
xchg
xorb
pop
test
arpl
shll
mov
mov
and
sbb
push
cmp
test
mov
call
fnstsw
shll
sub
add
lea
loope
insb
nop
addl
es
xor
adc
repnz
mov
ret
sub
jb
jg
lret
jg
popa
imul
push
sub
jbe
pop
sub
ret
push
fbstp
push
lock
ss
mov
xor
leave
and
dec
jb
xchg
aaa
add
dec
leave
cmp
pop
insl
adc
add
xchg
in
rorl
jb
fnstsw
jmp
xor
xchg
jno
pop
xchg
call
loopne
shrl
fmulp
mov
jl
dec
inc
add
and
jle
mov
xorl
shll
adc
shll
inc
in
mov
inc
addr16
jecxz
rcrb
loope
fisubs
sbb
add
cltd
jle
shr
popa
ds
jno
ret
inc
roll
into
aad
mov
fildll
ret
and
jge
jns
outsl
pop
stos
ret
jp
pop
loop
mov
dec
cs
jnp
insl
cmpb
loop
subl
mov
push
imul
fadds
repnz
daa
pusha
mov
testl
xchg
loop
ret
nop
aaa
aam
dec
cmpsl
aas
fidivl
adc
insl
mov
mov
into
adc
adcl
xorb
inc
mov
repnz
ds
jb
push
outsl
pop
inc
cmp
cs
out
mov
mov
rol
aas
repz
pusha
dec
aam
lock
imul
repnz
les
mov
jno
xchg
jle
jp
cmp
inc
add
loope
je
sbbb
ret
inc
push
and
andb
jecxz
mov
mov
mov
sbbb
addl
pushf
mov
shl
jecxz
sub
inc
mov
arpl
sbbl
hlt
mov
xor
loop
mov
inc
mov
outsb
mov
push
out
sbb
push
out
into
mov
enter
mov
push
xorl
repnz
js
in
mov
jecxz
mov
jnp
repnz
ljmp
ror
icebp
mov
mov
inc
cmc
mov
inc
jo
mov
jg
filds
mov
pop
inc
mov
push
pop
aas
loope
sbb
shll
test
clc
mov
fdivl
out
push
inc
lock
repz
xchg
fistpll
loop
call
cmp
jmp
repnz
jecxz
mov
ret
and
mov
inc
mov
ss
fistpll
jbe
xor
repz
jge
jecxz,pt
repz
lods
jle
in
dec
lcall
outsl
xor
jmp
fidivs
jle
xor
aaa
jecxz
jg
outsl
mov
fcomip
ret
repnz
scas
lret
enter
out
cmp
mov
dec
mov
scas
loop
fucomi
repnz
mov
filds
push
push
cmp
add
cmc
leave
jo
adc
jnp
bound
adc
les
shl
sarl
cmp
js
hlt
jns
and
shll
push
adc
aas
or
fcomip
and
add
cmp
jae
fidivrl
rorl
pop
cli
mov
dec
pusha
cmp
inc
loop
rclb
xchg
shll
std
test
mov
cmp
cmp
mov
lcall
xchg
cli
jns
out
mov
push
inc
xchg
jae
mov
dec
ret
test
loope
insl
loop
ja
stos
pop
es
mov
cli
lock
mov
dec
adc
aas
lret
push
xchg
and
mov
adc
cmpb
jb
sub
repz
push
xor
out
xchg
icebp
cmp
lds
mov
das
dec
jbe
mov
sbb
lcall
xchg
push
mov
jp
pushf
call
out
shl
cmp
jae
cmp
jle
sarb
inc
dec
dec
xor
xor
dec
pushl
mov
adc
mov
shll
ret
push
dec
xor
xor
addr16
arpl
jp
cmpsb
pop
or
repnz
mov
sti
repnz
frstor
mov
cmpl
add
sti
sub
mov
add
mov
jg
jb
mov
mov
fistps
add
sub
jecxz
add
repnz
jns
mov
cmp
jno
mov
ret
insl
aaa
mov
mov
mov
sti
sarb
repz
call
popa
jnp
cmpl
arpl
jo
aas
lret
aas
dec
loope
pusha
pop
mov
add
mov
arpl
cmc
mov
pushf
jmp
fcomip
mov
fnsave
cmp
pop
jnp
fsubp
xorl
cmc
push
mov
lret
fucomip
mov
push
mov
aas
xchg
shlb
fsts
and
andl
jb
fildll
mov
cmp
mov
pop
xorb
or
mov
cli
xor
dec
xor
repnz
fstpl
mov
mov
mov
mov
lahf
outsb
pop
fisubl
pop
ret
sub
add
pop
lock
aam
andl
aad
push
mov
sub
aaa
fsubr
mov
repnz
jae
and
mov
incb
mov
and
push
nopl
arpl
lock
jle
mov
test
and
or
jns
es
inc
test
inc
call
in
jge
enter
jp
jb
iret
cli
sti
ret
ds
in
add
cmp
cmp
and
xor
dec
loope
mov
pusha
jb
adc
loopne
mov
push
mov
fcomip
out
sar
jno
fldcw
fbstp
fistps
inc
xchg
xchg
stc
ljmp
loope
not
jnp
mov
sbb
shlb
mov
iret
adc
and
shll
or
push
loop
cmpsl
cs
nop
sbb
aam
subb
push
fs
and
xor
xchg
mov
xchg
xor
cmp
inc
rolb
mov
fisubrs
mov
dec
adc
jle
or
xchg
xchg
inc
sbb
mov
pop
jae
frstor
adc
data16
jp
inc
out
imul
cmpsb
repnz
mov
pop
jg
scas
das
roll
cmp
stos
jmp
lcall
inc
xor
dec
or
inc
mov
out
or
clc
orb
mov
push
je
cmp
xchg
inc
inc
inc
insb
dec
fstpt
mov
mov
test
pushf
xor
sub
add
push
cs
push
xor
lahf
mov
jns
push
into
pop
fisttps
and
adc
ret
xor
inc
mov
jg
pop
mov
loope
in
shll
and
mov
cmc
outsl
pop
push
cmpl
loop
sbb
repnz
fstl
jecxz
sti
jae
adc
mov
jo
arpl
mov
lock
nop
mov
and
cmpl
rcr
ficoml
insl
push
mov
adc
jae
mov
popa
loope
mov
adc
mov
jecxz
jo
inc
loope
adc
lahf
and
arpl
leave
cmp
jg
js
pop
push
xlat
jb
icebp
leave
push
inc
pusha
push
fbld
inc
and
ljmp
rorl
repz
ret
arpl
jl
mov
out
jbe
dec
adcb
cmp
rcll
lea
dec
push
and
inc
pop
jb
jmp
into
notl
push
inc
notl
inc
and
inc
shlb
inc
mov
jbe
push
addr16
scas
lret
rcr
mov
mov
inc
mov
dec
scas
fsub
addr16
fsubrl
aas
icebp
push
mov
icebp
mov
jp
into
jle
add
ljmp
jae
mov
addb
loop
repnz
push
repnz
adc
xor
das
stos
sbb
push
loope
mov
fsubrs
mov
cmpsb
outsb
enter
pop
mov
fldt
adc
mov
shl
and
inc
ret
arpl
addl
inc
jne
jne
fstpt
xchg
jg
push
in
loopne
shl
add
js
lret
rol
cli
decb
sub
push
out
divb
into
sbb
add
cmp
xorb
mov
adcl
stos
adc
adc
mov
lret
xor
cld
mov
out
mov
imul
shrl
inc
cmp
mov
mov
adc
cltd
push
aad
lds
xchg
bound
jecxz
daa
decb
xor
bound
cmp
and
jge
pop
pop
xchg
pop
and
das
popa
cmp
mov
mov
xor
adc
outsb
nop
cwtl
mov
or
stos
insb
and
out
xor
cmpb
mov
cmp
inc
pushf
xor
jg
inc
pusha
mov
cmp
aaa
leave
pop
jae
fwait
pop
mov
adc
ret
push
lods
lods
jnp
jbe
inc
insb
dec
mov
ljmp
dec
pop
dec
jmp
test
test
enter
or
ret
bound
mov
and
fcmovne
cs
mov
jle
push
push
aas
test
repnz
push
mov
cli
stos
aas
add
jg
insl
clc
bound
repnz
and
push
adc
mov
mov
ss
ljmp
jg
stos
ret
sbb
adc
js
mov
mov
add
or
ret
mov
lock
ss
lret
cmp
cmovl
xlat
out
mov
jae
outsb
push
add
inc
inc
incl
inc
pop
push
sti
das
clc
add
jns
fmull
add
add
inc
push
push
cli
xor
jmp
inc
inc
push
push
or
aas
stos
xor
push
inc
daa
pop
std
dec
inc
jb
xchg
bound
add
mov
imul
mov
cmpl
into
ret
out
and
hlt
jbe
inc
mov
mov
xchg
jp
cmp
lahf
jle
cmp
jecxz
ret
cli
aad
sub
jmp
mov
inc
jecxz
sub
inc
jcxz
int
es
stc
cwtl
inc
notb
decl
ds
in
fimuls
ss
ljmp
sar
cs
in
pop
fisubl
je
push
insl
bound
loopne
sub
xor
mov
mov
mov
push
sbb
ret
push
xchg
fucomip
cmp
mov
adc
sti
out
jecxz
lcall
and
mov
out
cmpsb
test
sbb
mov
notl
jmp
mov
shl
outsb
shr
pop
aaa
icebp
arpl
add
mov
movsl
adc
loop
arpl
ret
adc
inc
inc
cmpsl
inc
int3
mov
fidivrl
pop
arpl
mov
add
mov
jge
rcrl
call
mov
aam
mov
mov
test
adc
outsl
jbe
jne
inc
push
cs
mov
jae
adc
lret
into
fadd
cmpsb
fildll
in
imul
in
xor
xchg
cld
lret
xchg
leave
add
aas
ja
lret
hlt
adc
bnd
inc
lods
inc
push
out
and
dec
fwait
call
in
fists
mov
jnp
addl
mov
out
loopne
sbb
clc
adc
icebp
ret
incb
mov
rol
or
jl
pop
sbb
dec
addb
add
js
aam
jnp
loopne
xchg
enter
repnz
xchg
cmc
sbb
rcll
jo
adc
lds
add
xchg
loope
add
loop
adc
adc
cmp
fwait
cmpsl
ret
icebp
dec
push
mov
cmp
xchg
ret
outsb
sti
push
add
ret
dec
mov
inc
add
mul
sub
insb
fwait
or
lret
daa
ret
cld
jnp
dec
subl
ret
movl
xchg
add
and
mov
add
push
ret
mov
mov
test
inc
out
or
stos
lcall
and
cmp
xchg
repz
in
jmp
jg
sbb
loopne
or
fstpt
xlat
xchg
rcll
iret
in
lret
pop
jg
sbb
movl
cmp
cmpsl
in
mov
fwait
loopne
stc
inc
inc
sub
loop
xchg
pop
loopne
or
idivl
repz
out
adc
in
mov
cmp
inc
or
jl
enter
lret
inc
arpl
idivb
pushf
inc
sarl
adc
xlat
loopne
shl
addl
adc
stos
and
mov
shll
rol
adc
arpl
ror
ret
mov
and
in
adc
stos
and
shl
loopne
mov
ret
ffree
mov
cmp
repnz
movb
int3
dec
push
mov
bound
and
add
add
popa
sbb
repnz
mov
ret
adc
lds
mov
ret
inc
ljmp
repnz
add
loope
bound
lret
and
xor
add
mov
ret
mov
bound
pushf
bound
loope
inc
les
cwtl
out
repnz
ret
ljmp
pusha
shlb
and
cli
shlb
out
rcl
add
in
push
add
mov
add
in
and
loope
inc
jb
filds
mov
mov
mov
adc
mov
andl
mov
add
and
inc
dec
mov
mov
jecxz
and
pusha
cli
mov
add
mov
gs
add
xchg
test
scas
inc
mov
mov
adcb
jnp
xchg
loope
add
imul
ret
out
rcl
arpl
ret
and
adc
popa
mov
add
std
shlb
mov
jecxz
mov
out
rolb
mov
dec
add
mov
ljmp
stos
out
shlb
add
mov
mov
mov
cmp
lods
mov
repnz
inc
lahf
repz
and
cmpb
test
pop
and
jmp
and
xor
mov
mov
inc
faddl
nop
stos
mov
pusha
mov
rol
ret
ljmp
repnz
mov
ret
daa
mov
loope
jb
lds
lock
test
jno
neg
loopne
ret
mov
gs
jecxz
movsb
cmp
repnz
mov
ret
ljmp
repnz
mov
gs
inc
ja
pusha
repnz
mov
and
test
jecxz
mov
ja
mov
mov
inc
mov
andb
mov
mov
shlb
or
shlb
mov
mov
xchg
ret
inc
arpl
mov
ret
fimuls
inc
sub
cmp
xchg
ret
loope
mov
ret
inc
push
fs
insb
loopne
ret
mov
sahf
add
out
xor
fimull
ja
clc
inc
fidivs
xor
cmp
outsl
mov
inc
pop
adc
mov
jb
sub
xor
lock
mov
adc
cwtl
xor
sti
repnz
popf
mov
lret
ret
xchg
xchg
add
xchg
inc
and
fstps
jns
dec
rorl
add
loope
mov
fiaddl
loopne
fcomi
mov
ret
nop
jl
nop
mov
repnz
mov
ret
lea
add
xor
add
sbb
mov
mov
gs
js
mov
add
mov
mov
mov
adc
mov
mov
gs
clc
loop
stos
bound
loop
and
rol
pop
add
mov
push
inc
mov
loopne
out
orl
shlb
popf
mov
loope
orb
cwtl
out
repnz
mov
insb
push
or
jae
jecxz
jg
rolb
shl
call
fnstsw
ret
or
ja
clc
add
arpl
stos
ret
mov
lret
repnz
fadd
ret
inc
add
sbb
sbbl
mov
shl
ret
sahf
addb
add
rcl
mov
inc
ret
mov
mov
loopne
rorl
repnz
mov
loop
bound
subb
js
sub
std
repnz
shlb
mov
inc
jl
std
repnz
mov
gs
push
nop
inc
cmp
xchg
ret
shrl
popa
ret
jae
pop
ja
pusha
repnz
mov
rol
jae
js
nop
ja
js
repnz
mov
inc
xchg
fld
lret
imul
adc
in
xchg
rcr
loope
out
shlb
aaa
mov
insb
les
andb
popa
and
jns
into
je
test
arpl
inc
add
repnz
mov
test
and
mov
loope
inc
mov
loopne
repnz
mov
push
add
mov
jae
xchg
repnz
fldl
mov
inc
ret
ret
and
data16
fisubs
pop
and
rolb
mov
add
xor
push
cmp
insb
mov
repnz
bound
inc
xchg
lea
inc
xor
repnz
inc
test
add
pop
ja
pusha
repnz
mov
inc
ret
ret
push
arpl
xor
and
xorb
sti
repnz
mov
cmp
jecxz
in
jb
lret
and
add
repnz
mov
add
mov
inc
lds
mov
mov
mov
bound
std
repnz
shlb
jl
xlat
fldenv
cwtl
out
adc
mov
test
rclb
add
pop
icebp
loop
push
sti
repnz
xchg
jecxz
add
pop
mov
and
adc
flds
fcomi
xorb
jecxz
mov
xor
in
and
repnz
mov
sbb
ret
push
loope
aas
jmp
enter
fcoms
out
orl
mov
movb
and
bnd
mov
bound
pop
in
in
ret
sti
adc
xchg
jae
xorl
int3
out
repnz
loopne
dec
add
jo
jnp
repz
ret
mov
andl
arpl
add
inc
insl
add
jecxz
rclb
add
loope
push
nop
ja
enter
loope
orb
xorb
ret
and
add
out
shll
sbb
or
jg
add
xchg
loope
movsl
roll
arpl
xchg
jecxz
lahf
mov
jecxz
push
mov
les
shr
idivl
mov
orb
mov
lock
and
adc
popa
jecxz
bound
les
dec
int
les
andb
arpl
ret
loope
jb
inc
ja
mov
and
leave
out
loopne
mov
lret
and
loop
ret
inc
loopw
adc
aad
rorb
cmp
jae
inc
jnp
sub
mov
orl
fimull
and
and
push
add
out
ja
mov
or
mov
mov
loop
xchg
loopne
jecxz
imul
aas
cmp
mov
arpl
mov
loope
inc
nop
testb
mov
sarb
bound
inc
lret
and
rol
and
clc
ret
mov
insb
and
mov
rcll
stos
mov
cmp
add
ret
xchg
cmp
jbe
mov
adc
mov
loop
rol
xchg
loop
imul
push
popa
add
jbe
test
sahf
inc
xchg
and
pop
divl
mov
fstl
inc
add
push
inc
fpatan
jecxz
cmp
ja
push
rcll
inc
cmp
call
pushf
jecxz
jo
push
pop
and
arpl
add
jecxz
pushl
xchg
shll
ds
inc
loop
bnd
insb
cmpb
fbstp
inc
pop
add
mov
imul
mov
pop
pop
jecxz
xor
fdivrs
and
inc
sbb
rcl
xor
loope
js
shrl
pusha
mov
xor
int
jb
ret
mov
inc
test
inc
lods
arpl
stc
sub
scas
roll
jne
mov
mov
adcl
lret
sub
inc
mov
ds
add
stc
out
stos
stos
inc
inc
and
test
loope
dec
arpl
ret
arpl
lock
mov
sub
test
add
add
ja
mov
fdiv
ret
jb
loop
mov
loop
inc
dec
arpl
daa
mov
mov
inc
loopne
dec
mov
ljmp
loop
ret
mov
mov
and
cmp
inc
pop
leave
jecxz
popf
add
mov
and
lds
movsb
and
and
sub
and
and
into
add
lcall
loopne
push
mov
add
xchg
loopne
and
sbb
lock
adc
and
push
inc
mov
in
ret
cmp
mov
add
loop
add
sbb
mov
mov
in
aad
arpl
rol
loope
jecxz
shll
addl
inc
lcall
in
ja
sahf
adc
ja
push
stc
cwtl
in
scas
inc
arpl
jmp
jecxz
in
and
arpl
adc
ret
mov
inc
mov
jecxz
mov
mov
add
inc
arpl
adc
and
pusha
xchg
loopne
jo
cmp
arpl
cli
repz
shlb
mov
mov
jmp
adc
loop
mov
fildll
fstpt
stc
mov
iret
mov
lret
mov
sbb
mov
jo
mov
cmp
adc
ror
mov
cmpsl
jae
loop
mov
ljmp
jp
xchg
mov
or
jae
mov
inc
add
popa
add
inc
pop
andb
ja
push
stc
mov
cmpb
adc
adc
ljmp
adc
adc
ljmp
adc
adc
adc
ljmp
adc
adc
ljmp
adc
adc
ljmp
adc
adc
ljmp
adc
adc
out
mov
out
push
fnstcw
ljmp
bound
add
sarb
xlat
mov
ret
inc
inc
out
xor
lret
xor
pop
fsub
pop
out
mov
add
arpl
nop
clc
mov
ret
mov
add
call
push
loop
dec
arpl
cmp
popf
jecxz
xchg
and
add
add
bound
rclb
and
pop
loopne
outsb
add
pop
andb
inc
inc
testb
loopne
mov
add
and
jmp
mov
sbbl
rolb
loop
std
lods
sahf
add
loopne
loope
clc
cmp
mov
pushf
mov
or
cmpsl
pop
jl
add
lock
lock
lock
lock
fbld
rolb
test
add
pop
ljmp
cmp
std
fisttps
add
mov
in
loope
aaa
aad
xor
fidivrs
push
add
pusha
decb
mov
push
jl
mov
test
jge
adc
aad
push
inc
loop
rclb
mov
loopw
ljmp
ljmp
testl
out
adcb
mov
ss
or
adc
rol
inc
xchg
and
out
jnp
repnz
ja
mov
outsl
popf
arpl
pushf
add
repz
fld
jecxz
mov
bound
add
repnz
fnsave
out
ja
mov
inc
fsubrs
cmp
cmp
pusha
fldenv
test
arpl
mov
lock
add
cmpl
add
push
arpl
int
add
popa
int
adcl
adc
and
jo
cmp
inc
ret
insb
popf
add
test
inc
idiv
and
mov
mov
mov
jb
out
adc
enter
cmp
test
inc
mov
insb
aaa
add
add
out
inc
and
addl
xchg
mov
mov
and
inc
les
mov
pushf
out
xor
pop
and
ret
inc
clc
mov
shr
jg
enter
and
mov
inc
sti
jecxz
sbb
cmp
lahf
xchg
xchg
gs
add
loop
dec
push
add
loopne
mov
mov
ret
xor
mov
fs
add
ja,pt
push
ret
sarb
les
adc
fistpll
imul
loop
sub
subb
subl
jmp
pusha
ret
adc
add
inc
test
ret
mov
ja
push
rcll
addr16
ret
push
inc
lcall
cmp
sbb
loope
rolb
add
push
cmp
pusha
pop
inc
mov
pop
enter
add
daa
xlat
sbbl
arpl
loop
inc
jmp
in
rcll
inc
mov
mov
shll
daa
mov
ret
sarl
rclb
je
dec
mov
inc
inc
mov
in
clc
ret
pop
scas
clc
loope
adc
ds
leave
cli
xchg
andb
cli
sarb
scas
jo
inc
ret
jmp
mov
ret
loop
cmp
mov
frstor
xchg
mov
pushl
pop
dec
cltd
and
inc
iret
cmp
in
loope
iret
nop
imul
addl
int
pop
leave
mov
loop
and
in
and
pop
xchg
stos
shl
inc
popf
adcb
jecxz
push
mov
loope
push
in
loope
sub
loopne
ja
inc
ret
add
das
arpl
rcrl
lcall
mov
jb
inc
ja
mov
add
add
mov
arpl
pusha
daa
popa
in
sub
loop
push
arpl
int
add
or
cmpb
jae
loop
mov
cli
cmp
pop
xor
push
loope
ret
nop
jg
ret
inc
pop
jo
and
inc
daa
bound
mov
popa
inc
mov
shll
aaa
frstor
push
jbe
aam
jbe
lock
or
and
mov
and
lods
push
sarl
loopne
lock
lock
les
mov
inc
adc
ljmp
adc
adc
adc
ljmp
adc
adc
ljmp
adc
roll
cmp
cmp
mov
ljmp
ljmp
loop
mov
fidivs
mov
outsl
jae
loop
mov
cs
add
pop
mov
jge
fstl
dec
jae
loop
mov
int3
inc
frstor
mov
xchg
jp
ret
mov
stc
inc
push
mov
and
mov
mov
ja
ja
sahf
ja
data16
ja,pn
cmc
ja
mov
mov
mov
mov
xor
jecxz
inc
in
loope
loope
push
loope
pop
loope
cwtl
ret
cmp
bound
ja
inc
mov
mov
ja
std
ja
shll
movsl
inc
add
arpl
inc
daa
mov
mov
adcl
add
mov
push
test
flds
arpl
push
ret
add
and
inc
jg
jo
inc
jg
jo
inc
inc
idivb
icebp
mov
jo
inc
ja
mov
xorb
and
xchg
inc
mov
ja
std
ja
rcll
in
loope
jns
in
loope
and
in
loope
enter
loope
jo
in
loope
sbb
clc
out
xor
insl
cmp
xchg
arpl
mov
loop
aas
pop
mov
pop
and
and
push
mov
and
push
and
or
and
adc
clc
inc
xor
and
inc
les
mov
push
inc
mov
sub
mov
add
push
dec
loop
roll
fsts
loop
arpl
dec
add
ss
lock
push
add
dec
inc
jb
cmp
pop
ds
jg
mov
repz
mov
mov
mov
sub
cmp
and
jecxz
sub
pusha
jecxz
ja
leave
inc
mov
fldenv
sti
jmp
test
sbbb
ja
push
add
adc
loope
fwait
int
add
loopne
pushf
push
jg
mov
jecxz
shlb
sbbb
jecxz
xor
subl
and
add
fs
add
bound
xchg
lock
jb
aaa
ret
stc
in
xor
loope
nop
imul
andl
add
subb
push
roll
andl
ja
mov
lock
in
and
dec
arpl
loope
push
loop
fadd
inc
and
adc
data16
xchg
outsl
inc
and
add
filds
pusha
cli
mov
stos
call
mov
mov
ret
xlat
loope
push
mov
sti
icebp
loop
fmuls
cmpsb
adc
and
ja
adc
and
in
popa
inc
cmpl
mov
push
and
pop
ljmp
mov
cmpsb
loope
mov
lcall
xor
add
add
inc
rol
ret
mov
popa
and
jnp
icebp
xchg
pusha
out
inc
cli
xchg
scas
js
xchg
jl
shl
jmp
add
inc
loopne
mov
mov
add
repz
mov
jns
ja
imul
loope
mov
call
add
xchg
insl
cmpl
popa
ret
xor
icebp
inc
and
add
arpl
jo
inc
jg
jo
inc
ret
ret
sbb
inc
daa
mov
mov
call
jg
inc
mov
popf
mov
push
inc
ja
push
rclb
adc
out
jnp
ljmp
cmp
and
ret
mov
ja
ds
mov
mov
cmp
and
enter
cmp
cmp
pop
repz
add
pusha
jecxz
inc
cmp
test
clc
ret
adc
add
arpl
mov
ret
ljmp
and
add
andl
jo
mov
in
clc
adcb
dec
ret
popa
rolb
out
and
adc
xchg
cmp
negl
xlat
mov
out
lock
and
push
push
xchg
push
popa
jl
jae
icebp
inc
adc
in
add
adc
push
inc
push
lods
ficoml
pusha
add
outsl
adc
jl
adc
icebp
and
push
pop
clc
mov
popa
loopne
loope
lock
or
add
movsl
cld
repnz
arpl
mov
sbb
xor
sbb
and
ret
adc
and
and
xchg
jecxz
out
or
mov
arpl
and
lahf
inc
vmread
js
sahf
js
data16
js,pn
loopne
cmc
loope
mov
in
loope
adc
in
aad
xorb
inc
inc
or
and
test
inc
mov
xchg
xchg
mov
add
or
mull
int
add
loope
popf
jecxz
and
push
inc
xchg
and
js
add
das
and
loopne
mov
sbb
add
ja,pt
push
add
and
mov
outsb
mov
mov
inc
dec
loop
add
loope
inc
ljmp
mov
leave
fsubp
add
inc
pop
andb
sub
push
ret
stos
mov
sbbl
scas
pusha
rol
loopne
mov
repz
insl
ret
adc
out
jnp
repnz
leave
leave
out
ja
mov
and
leave
out
ja
mov
mov
addl
subb
mov
and
mov
add
ret
push
dec
jg
jo
inc
ja
mov
xorb
xchg
jecxz
imul
jecxz
aaa
add
sti
and
arpl
mov
mov
loope
insb
push
push
inc
and
jo
cmp
pop
xchg
loop
mov
cmpl
mov
mov
fcoml
ret
push
or
out
ja
fildll
in
cwtl
loopne
stc
dec
daa
jecxz
imul
inc
dec
inc
cmp
mov
ds
jo
cmp
stos
inc
adc
adc
loopne
popa
sub
and
pop
and
popa
iret
icebp
inc
and
shll
ret
in
mov
repz
add
andb
scas
mov
and
adc
mov
jnp
fadds
sti
jecxz
mov
ljmp
and
loopne
and
int
add
push
ret
stc
out
mov
adc
inc
lds
daa
mov
idivb
xlat
jae
inc
ja
mov
jecxz
inc
dec
mov
in
outsb
add
ret
loope
rcll
ja
sub
inc
sbb
cmp
mov
mov
pusha
ret
and
imul
loope
frstor
mov
pusha
cmp
out
jae
mov
add
dec
add
sar
aas
fiaddl
orb
shll
rcl
das
sarl
flds
mov
int
jb
cmp
push
lock
sbb
add
inc
mov
cmpb
popf
bound
addr16
adc
out
shr
adc
pop
dec
jecxz
and
mov
loopne
and
js
inc
jecxz
cmp
les
mov
ljmp
add
mov
jecxz
inc
jo
cmp
imul
mov
and
adc
adc
fsubp
jbe
mov
imul
mov
xchg
mov
out
jnp
repnz
mov
lods
ffree
mov
fistpll
and
arpl
jp
dec
jecxz
nop
ja
fists
mov
ja
mov
inc
cmp
sub
and
inc
xchg
loopne
jo
loop
mov
cmp
mov
mov
mov
inc
jnp
subb
clc
ret
fstpt
adc
arpl
out
ja
mov
mov
shl
leave
mov
xorl
loope
iret
out
pop
mov
loopne
mov
mov
imul
mov
gs
add
push
stc
xlat
out
adc
inc
adc
ret
inc
cmp
daa
mov
in
add
subb
popa
adc
leave
mov
mov
popa
jg
js
daa
daa
mov
and
rcll
shll
adc
leave
out
data16
mov
cli
push
xor
lcall
jle
mov
add
stos
and
and
add
fbld
mov
fbld
and
mov
loopne
or
sarl
ja
adc
nop
mov
and
push
inc
pop
inc
arpl
inc
jg
jo
inc
jg
jo
inc
jg
jo
inc
mov
push
arpl
inc
jecxz
nop
mulb
jne
adc
ja
push
ret
mov
add
and
ja
push
rol
mov
in
and
xor
and
add
and
popa
sub
in
sbbb
addb
sar
nop
dec
andl
mov
mov
outsl
xchg
lret
xor
ds
inc
mov
xchg
and
inc
test
shll
loopne
sbb
orl
mov
cmpsl
ret
lret
pop
ret
cmp
mov
jl
jnp
fwait
lret
bound
and
mov
mov
iret
outsl
xchg
ljmp
ret
or
cmp
mov
and
xor
mov
int
outsb
loope
addb
adc
mulb
sti
frstor
or
daa
mov
loope
daa
mov
and
stc
pop
daa
mov
arpl
arpl
rol
ret
jo
and
shll
andl
loopne
loopne
push
inc
xchg
loopne
jo
repnz
xor
jecxz
mov
and
push
arpl
int
add
sti
jae
inc
push
mov
rcll
cmp
daa
shl
icebp
decb
nop
shll
sub
add
adc
xor
ret
push
xlat
loopne
sbb
mov
add
push
and
and
adc
xchg
xchg
frstor
sahf
add
xchg
fadds
push
rclb
cld
notb
lcall
int
mov
push
adc
loopne
jo
cmp
jae
inc
jnp
std
jmp
js
mov
xor
shl
dec
adc
fwait
addl
stos
add
add
fimuls
jae
add
cmp
rcll
inc
push
add
int
mov
push
adc
int
add
or
mov
jecxz
ljmp
adc
nop
fisubl
and
xchg
mov
inc
push
rcl
mov
mov
dec
cmpl
cmp
jnp
out
mov
and
fdivl
vxorps
and
sbbl
arpl
lret
loopne
ds
inc
test
inc
mov
add
popf
jecxz
sahf
add
loop,pt
in
add
and
xlat
push
ljmp
andl
inc
push
rolb
add
and
out
loop
and
cmp
shll
loope
mov
cmpsb
xor
pop
adc
mov
loopne
mov
jl
fisubs
and
loop
and
and
data16
xchg
loop
and
dec
add
out
in
aaa
add
ficoml
sbb
arpl
loopne
xor
out
call
aaa
jecxz
lock
add
cmp
bound
lds
adc
js
daa
scas
loopne
adc
in
rcll
sarl
cmpl
rolb
lock
arpl
push
mov
shlb
push
fpatan
jecxz
cmp
test
cmp
jo
arpl
mov
jmp
cmp
popa
and
xchg
shl
and
cld
into
daa
add
in
into
fisubl
jns
sar
add
xchg
into
push
jo
ret
mov
xor
loopne
xchg
adc
das
push
ljmp
cmp
lods
mov
pop
loope
cmp
lret
push
mov
bound
and
stc
aas
ret
js
clc
arpl
cmpsl
repz
loope
and
hlt
jbe
fsub
inc
test
mov
notb
mov
and
ds
ja
push
arpl
loopne
inc
mov
in
mov
mov
arpl
mov
and
jno,pt
sti
frstor
jecxz
and
out
arpl
ret
cld
cli
jns
sbb
add
sbb
lods
andl
jae
repz
jo
loop
jge
clc
adc
cmpb
cmp
clc
inc
mov
jne
and
mov
xchg
sub
cmp
cli
add
add
mov
ret
loopne
gs
add
ret
js
mov
ret
adc
mov
loop
jl
mov
and
loop
loope
rcrl
cmpsl
mov
pusha
mov
add
mov
mov
arpl
and
rol
andb
loopne
mov
out
push
push
inc
and
jo
ret
imul
cmpb
scas
mov
in
outsb
nop
aaa
inc
jo
mov
jge
scas
push
aad
loope
outsl
mov
pop
subb
add
inc
adc
xchg
pusha
ljmp
mov
or
add
mov
jecxz
mov
ret
insl
jae
loop
inc
mov
loopne
jo
cmp
xchg
ja
mov
in
adc
add
inc
mov
lock
mov
add
inc
pusha
arpl
mov
bound
adc
and
insl
inc
jp
lods
in
scas
inc
rcll
lret
add
stc
mov
sti
mov
and
pop
push
and
pop
add
popa
and
loopne
push
and
ds
mov
ret
or
pop
bound
rolb
mov
adc
rcrb
jl
sahf
xchg
loope
and
lcall
inc
lcall
lahf
pop
flds
sbbb
sbb
loopne
mov
rclb
add
js
sbb
push
jo
xor
inc
imul
out
aam
aas
add
out
aad
pop
add
xchg
push
fidivrl
stos
jecxz
std
andl
repnz
mov
xor
movsl
lea
push
out
je
jp
or
mov
sbb
adc
pop
push
or
call
rorb
jmp
and
dec
sti
out
imul
xor
xchg
xor
push
sub
clc
pop
out
std
add
loope
jg
xor
sbbl
shl
dec
pop
cmp
es
inc
push
loope
fsubs
mov
xchg
mov
ja
cli
mov
mov
add
xor
push
push
sub
push
pop
idivl
daa
inc
outsb
xchg
pop
push
jl
movsb
jp
dec
aam
add
ljmp
test
fistps
mov
sub
das
xchg
jp
pusha
push
mov
fst
out
jg
sbb
jge
or
jl
xchg
sub
jp
mov
outsl
subl
xchg
push
fwait
sahf
rcrl
rcrl
cmp
lods
lods
test
test
lret
imul
rcr
add
mov
mov
add
stos
pop
ds
mov
test
cmp
ret
cli
filds
jae
mov
push
jnp
repnz
fnstsw
mov
add
mov
frstor
xchg
inc
mov
dec
bnd
mov
xchg
mov
pop
sbb
mov
cmp
popf
popf
mov
adc
cmp
rclb
fistps
rorb
cwtl
jnp
repnz
add
lret
fisttpll
loop
mov
mov
call
popf
inc
cmp
jnp
repnz
fisttpll
sti
add
push
mov
repnz
jnp
stos
subl
movsb
mov
mov
fildll
repnz
jae
loop
int
fidivrs
repnz
dec
mov
loopne
inc
mov
jae
repnz
jecxz
loope
sub
std
mov
inc
repnz
jae
loop
mov
mov
repz
cltd
jnp
repnz
sbb
mov
xchg
pop
cli
loopne
xor
jecxz
add
fst
mov
jns
fnstcw
bnd
fst
mov
cmpl
std
cmpb
mov
and
cmpb
mov
jmp
add
fstp
mov
jmp
and
fcomip
repnz
jecxz
mov
sbb
xchg
mov
push
mov
add
fwait
inc
mov
cmp
cmp
repnz
jecxz
mov
mov
cmpl
repnz
fcomp
and
adc
jno
add
mov
mov
mov
sti
ffree
mov
jge
sbb
jmp
repz
out
xor
mov
inc
jbe
mov
negl
fildll
dec
ficompl
inc
fildll
sub
jns
dec
jnp
repnz
mov
repz
rcr
arpl
mov
cmp
fst
mov
push
mov
pop
adc
lret
push
std
mov
lret
jnp
repnz
ffree
mov
lock
cmp
loope
push
std
stos
mov
fidivrl
mov
xor
mov
hlt
ret
filds
jnp
repnz
fstpl
mov
pop
fisubrs
filds
sti
dec
repnz
std
jno
shll
cmp
and
fstpt
jae
loop
mov
jnp
repnz
fisttpll
mov
lret
loope
dec
mov
fmuls
mov
loop
mov
dec
mov
repz
fcomip
mov
mov
loop
mov
adc
ljmp
or
loop
mov
lock
jnp
adc
fwait
loop
mov
xor
add
mov
mov
loopne
mov
jo
sub
fists
add
mov
repnz
or
test
cmp
adc
sub
loope
imul
xor
dec
movsb
mov
subl
stos
jmp
sub
std
js
mov
sbb
popa
mov
pop
mov
jae
add
mov
lock
sbb
outsb
cmp
pop
mov
and
mov
icebp
loopne
ss
out
fldl
xlat
enter
cld
push
clc
xor
loop
std
add
jae
or
fildll
out
cli
clc
imul
nop
fbstp
jb
fistps
jp
xor
mov
sub
pop
xor
add
sbb
xor
je
clc
push
in
shl
mov
xor
cld
jns
jmp
aas
ror
xchg
add
inc
fmulp
ret
adc
mov
repnz
pop
lods
sub
mov
int
jb
cmc
mov
inc
mov
jne
inc
jg
push
or
mov
adc
xchg
cld
inc
push
jmp
push
add
dec
std
push
add
movsl
rolb
sarb
mov
push
jmp
or
add
hlt
xor
xchg
scas
cmp
xchg
loop
add
xchg
enter
jo
dec
mov
sar
add
xlat
cmp
xor
mov
addb
ja
fstl
inc
add
mov
decb
repz
mov
fsts
sbb
xchg
jo
cld
cmp
and
inc
add
arpl
add
xchg
mov
fstpt
lar
das
inc
daa
lcall
adc
rcll
shll
out
arpl
daa
ret
sub
cmpb
loop
fidivl
inc
hlt
loopne
and
loope
add
fwait
lret
inc
jl
adc
lret
push
mov
out
pop
int
cmp
test
rcrl
push
add
in
pushl
ja
mov
or
rcrb
rorb
push
add
cmp
pop
xor
cwtl
xchg
xchg
shlb
pop
jge
add
and
mov
out
cs
cmc
mov
mov
cmp
cmp
cmp
les
adc
cmp
mov
add
aaa
pushf
out
stos
dec
outsl
movb
imul
lds
cltd
and
into
push
xchg
cwtl
mov
mov
add
add
loopne
stc
shr
jl
push
sub
jae
adc
push
xchg
pop
add
push
pop
repz
pop
iret
jle
roll
adc
addl
cmp
cmpsl
and
cmp
pusha
ss
imul
inc
pop
leave
adc
fwait
inc
and
sar
mov
pop
sub
orl
in
inc
inc
out
inc
mov
xor
fsubl
add
adc
popf
ds
jo
jne
fstps
mov
in
lods
mov
inc
movsb
pop
xor
add
mov
add
into
lret
pusha
add
popa
ja
repnz
mov
insb
std
push
add
outsb
push
jne
adc
ret
sbb
or
pushl
arpl
cmpb
into
push
pushf
sbb
add
cmp
loope
push
mov
stc
aas
xor
insb
push
clc
push
ret
mov
mov
add
jbe
lock
shlb
lret
jmp
or
dec
add
inc
inc
mov
xor
sar
mov
icebp
cmc
push
ficomps
loop
loope
inc
add
xchg
test
sbbb
jae
cmp
rcll
and
icebp
mov
ja
shl
fdivrl
add
adc
inc
mov
add
add
stos
popf
movb
push
imul
je
out
mov
dec
add
adc
mov
sahf
or
xchg
mov
add
orb
add
insl
or
add
xchg
ret
lock
dec
dec
jl
sbb
sti
andl
fsin
pop
or
fcoms
stos
into
add
movsl
xchg
jle
scas
mov
mov
mov
addr16
sbb
movsb
pushf
cmpsl
dec
mov
loope
ja
es
dec
cmpsl
movsb
push
inc
jo
out
mov
add
push
iret
xchg
lret
push
dec
pop
sub
dec
push
add
pusha
push
rol
stc
imul
and
fs
mov
int
mov
aaa
pop
decl
dec
imul
jo
adc
xor
inc
sub
je
pop
andb
sub
add
sub
loope
jmp
fnstenv
jge
dec
test
test
rcl
int3
out
add
cmc
repnz
loop
cld
fdivrp
sub
stos
adc
enter
add
inc
jo
dec
mul
into
xchg
sti
mov
mov
dec
mov
mov
sbb
xor
sar
fdivrs
xor
leave
and
aad
test
stos
out
decb
das
inc
lret
add
mov
add
aas
jmp
mov
out
add
add
cld
xor
xor
out
imul
pusha
mov
fs
sbb
ret
add
xlat
ret
out
bound
arpl
mov
mov
imul
icebp
ds
jge
daa
and
hlt
fbld
ds
stos
xchg
clc
xchg
mov
out
call
adc
test
add
add
shll
jge
xchg
movl
or
mov
add
sub
orl
inc
push
lret
divl
mov
arpl
movsb
nop
push
lea
test
loopne
add
test
mov
dec
rorl
mov
jecxz
xchg
mov
or
add
fisubrl
add
shl
xchg
sti
into
imul
dec
popa
mov
lea
in
add
outsl
xchg
pop
mov
push
divl
ret
popa
adc
add
mov
dec
sub
jmp
std
and
xor
decl
add
or
jne
jecxz
out
push
or
jg
test
mov
lret
add
loope
iret
negl
insb
sub
arpl
jns
lods
arpl
int
jo
insl
xchg
aad
std
xor
ret
sub
fsubs
das
pop
mov
xor
roll
or
mov
arpl
popa
pop
shrb
std
jo
je
add
mov
sub
add
dec
adc
pop
fists
mov
test
cld
imul
pop
add
sbb
add
dec
aas
jns
jb
dec
or
sub
inc
push
lret
fdivrl
pop
lcall
or
and
cwtl
cli
ret
add
mov
and
sbb
loopne
push
rcl
add
in
cmp
xor
xchg
shll
push
arpl
dec
and
mov
test
add
sti
ret
jle
rolb
clc
add
cmp
cmpsb
xchg
jb
add
lahf
inc
lods
mov
add
push
jnp
repz
aas
popl
rcl
testl
xchg
add
jnp
jne
xor
add
inc
lahf
outsl
rolb
shl
xchg
add
push
add
cwtl
in
sbb
ret
sub
sbb
lcall
addl
lret
add
test
mov
mov
xorl
add
mov
stc
in
pop
and
subb
push
stos
mov
incl
dec
rorb
dec
add
cld
pop
add
cmpsl
fidivs
stc
xor
add
out
mov
call
jb
xchg
sub
add
push
nop
mov
add
push
and
fwait
hlt
xlat
test
and
lea
push
mov
ja
call
jns
add
add
push
fsubrs
push
sbb
sbb
addb
insb
shl
aaa
loopne
add
add
movsb
adc
sbb
fs
pushf
ss
lcall
sbb
push
mov
adc
xchg
movsb
dec
add
pop
and
icebp
test
add
sbb
dec
psubw
and
enter
gs
sarb
cmp
decl
xor
sbb
add
jns
clts
jmp
stos
in
mov
xchg
call
sub
sahf
jmp
andb
add
lret
shrl
pop
enter
sbb
xor
add
popa
mov
lahf
loopne
adc
pop
jae
rcrb
pusha
mov
sbbl
fwait
inc
repz
pop
dec
xchg
push
xchg
or
add
fildll
int
lods
add
clc
sbb
leave
arpl
cmpl
loopne
cmp
adc
int3
xchg
cld
aas
inc
outsb
iret
add
repz
and
sub
sbb
add
sub
cmp
clc
outsl
std
inc
loope
mov
flds
or
or
ljmp
cmp
lret
jne
loopne
dec
jmp
or
mov
inc
inc
add
mov
jno
bound
pop
daa
add
das
out
test
lods
add
pop
mov
clc
testb
outsl
in
movsl
cld
sti
mov
sbb
mov
mov
movsb
icebp
subb
xor
negl
jge
pop
jge
or
jp
add
int3
enter
add
mov
push
add
in
and
out
mov
popf
adc
inc
adc
outsb
add
mov
imul
inc
in
hlt
out
adc
add
hlt
je
stos
mov
jb
rorl
mov
sbb
jmp
jl
add
negl
orl
adc
xchg
test
add
iret
add
mov
mov
jns
xchg
add
adc
sahf
add
xlat
cltd
xchg
push
sub
loopew
orl
xchg
ret
sbb
imull
arpl
adc
pop
dec
mov
sub
pop
nop
repz
dec
fbld
dec
dec
incl
mov
inc
jo
aaa
pusha
test
xor
or
mov
rolb
and
mov
imul
mov
or
add
push
loopne
aas
mov
sti
inc
flds
cmp
rolb
test
xchg
stc
sub
add
out
xchg
out
mov
sub
out
push
cmp
pop
cld
xor
and
fwait
inc
mov
fimull
xchg
xor
popa
xor
psrlw
inc
xlat
rclb
dec
inc
negl
daa
loopne
and
repz
adc
add
rcl
inc
pop
jg
out
cmpsl
fcoms
ja
ljmp
pop
sahf
iret
mov
fadds
sub
into
gs
cmpsl
inc
dec
dec
cli
js
loopne
adc
sbb
fnsave
arpl
inc
neg
addl
cmp
adc
ret
sbbl
fildl
lds
jp
popf
add
and
fs
addr16
and
push
das
icebp
add
pop
leave
repnz
cltd
mov
xor
in
rclb
push
xlat
stc
loopne
add
push
int3
or
insb
add
mov
test
push
pop
stos
cli
fisubrl
xchg
add
insl
or
sub
jle
mov
lret
loop
mov
add
mov
add
in
mov
cmp
repnz
xchg
mov
dec
add
sub
push
testl
adc
test
mov
lds
shlb
jae
loop
lret
aaa
jbe
jmp
into
xor
or
adcb
inc
mov
cmpsl
sub
sbbb
xor
mov
add
pusha
addr16
xchg
sbb
andb
xorl
jp
cmp
inc
sbb
xchg
repz
fxch
sarb
xchg
push
or
std
or
mov
insl
mov
add
ljmp
dec
dec
sbb
insl
and
xchg
mov
or
xchg
sarl
xlat
dec
lods
mov
dec
test
shlb
jbe
shl
mov
arpl
loop
push
loop
push
add
or
xchg
data16
out
mov
fwait
mov
add
aas
sahf
jecxz
lret
mov
or
pop
pop
add
mov
and
bound
out
push
outsb
and
addl
aas
xor
addb
int
cmpsl
outsl
ds
pop
insl
push
cmc
fstpt
ret
xchg
into
repz
mov
rcrb
repz
pop
mov
lret
cmp
leave
add
test
inc
movsl
and
jmp
push
mov
push
mov
rolb
xorl
mov
cmc
push
dec
popf
cmpsl
loopne
xchg
add
and
add
or
ds
pop
mov
cmpl
adc
cmp
out
std
lods
lds
inc
loope
insl
xchg
add
inc
jnp
sbb
ds
loopne
xor
cs
add
cld
in
test
lret
scas
ret
add
pop
xor
call
scas
cmp
dec
imul
add
je
or
lahf
ljmp
dec
scas
jb
leave
clc
xchg
pop
aas
fsubr
xor
loopne
addr16
test
lahf
cld
pop
movsl
and
add
mov
dec
mov
inc
cli
xchg
xchg
jge
inc
push
loop
lds
ja
test
call
xchg
xor
daa
faddl
xor
icebp
shrl
push
mov
or
call
inc
and
insl
mov
sub
sti
mov
arpl
add
out
xchg
or
jmp
and
sbb
add
aas
scas
jge
xchg
fcomps
icebp
arpl
in
lret
std
repz
cmp
cs
push
mov
bound
jp
inc
mov
lcall
or
bound
or
rolb
sti
mov
mov
mov
sbb
shl
and
sahf
aad
out
push
lret
popa
and
scas
ret
dec
mov
lret
sbb
xchg
cmpsl
dec
xor
lea
repnz
push
ljmp
add
int3
mov
push
test
and
loope
inc
movl
xchg
add
jnp
sbb
add
dec
rclb
xchg
fbld
mov
xchg
sub
fs
leave
add
flds
les
mov
mov
push
rorb
pop
jge
negl
lret
push
add
rolb
loopne
insb
lret
leave
cs
xlat
ret
jmp
cmp
push
and
sub
out
adc
outsb
jmp
add
out
aas
mov
fwait
pusha
sbb
iret
xchg
or
pop
xor
xor
add
pop
inc
mov
or
inc
push
je
arpl
add
mov
xchg
repz
orl
sub
imul
push
add
sti
cmp
push
push
sahf
cmpb
adc
push
push
cs
and
push
sub
sub
add
sbb
sub
outsl
pop
mov
xchg
out
aas
mov
shll
insb
cld
cmp
outsb
cltd
inc
mov
pushf
jbe
push
add
fidivrl
push
lock
xchg
xorl
cs
mov
sub
push
loopne
xor
xchg
mov
xchg
outsl
inc
movsl
add
dec
add
insb
cmp
int
ret
clc
out
xchg
std
add
dec
dec
aad
sbb
mov
adc
inc
rcrl
dec
sbb
fnsave
loope
je
xchg
add
cmp
fisubs
imul
outsb
xchg
pop
addl
dec
mov
jle
mov
addl
add
fiadds
out
xchg
push
mov
inc
data16
adc
ja
xorb
in
or
lahf
ss
loopne
cmc
add
ljmp
cltd
dec
xchg
aam
fidivl
pop
jmp
sahf
insl
in
rol
xchg
push
inc
pop
xor
mov
push
pop
sbb
decl
push
pop
iret
nop
push
add
enter
inc
leave
sti
cmpsb
js
sbb
faddp
movsb
add
sahf
adc
mov
pop
roll
sub
pop
cmp
sbb
add
mov
rcl
leave
xchg
clc
pop
mov
js
int
add
or
fsubl
sub
and
mov
lcall
dec
sub
fimull
xor
xchg
add
out
out
sub
lcall
jp
mov
addb
add
dec
lds
mov
mov
xchg
adc
xchg
in
sub
out
out
mov
add
xchg
shlb
add
pop
jge
pop
sbb
shl
test
out
rorb
xchg
ret
stos
fldenv
lock
add
cmp
fsubrl
add
push
adc
sbbb
into
shl
jge
add
add
xor
imull
xchg
ss
dec
imul
repz
push
cmp
cwtl
subb
lret
lcall
cmp
test
in
test
inc
hlt
push
add
jns
sbb
shll
lcall
jmp
ljmp
test
dec
mov
outsb
adc
jmp
data16
cltd
notl
push
ds
lods
add
jb
lret
or
stos
mov
cmp
cmp
xorl
sub
dec
xor
add
addr16
orb
inc
sub
pop
pusha
js
add
orb
in
pushf
dec
or
mov
push
sub
das
test
add
sub
mov
add
mov
iret
or
ds
jno
jb
pop
mov
out
in
inc
xchg
stos
sbb
arpl
out
sbb
jle
decl
push
mov
mov
imul
jbe
mov
ds
push
jno
mov
dec
lea
and
add
pop
push
in
adc
out
js
in
jno
dec
mov
daa
xchg
mov
push
mov
dec
and
and
ror
sub
sub
push
xlat
nop
or
add
pop
xor
test
mov
add
in
sahf
pop
cli
pop
call
sbb
jp
inc
mov
iret
xlat
mov
dec
add
add
repnz
lods
fmuls
ljmp
or
xchg
adc
rolb
std
mov
test
je
loop
fucomip
sbb
pop
aam
aas
xchg
movsl
out
push
mov
jle
add
pusha
std
dec
sbb
pop
aas
test
repz
lcall
or
int3
cmp
out
mov
pop
jnp
movsb
rclb
aad
xchg
cld
mov
mov
leave
arpl
jae
repz
popa
add
lret
cwtl
mov
push
rorl
testl
cmpsb
stos
xor
movsl
out
push
das
jp
dec
rorb
adc
add
dec
imul
test
sti
or
adc
pusha
out
ja
stos
roll
cmpl
jbe
adc
sbb
inc
mov
fisubrl
cmc
cmpsl
shrl
sti
add
or
add
mov
test
shll
lahf
into
push
jle
xchg
call
push
xchg
xchg
cli
ss
lock
mov
mov
lahf
add
lret
jns
movsl
fimull
test
mov
xchg
pop
std
sbb
dec
add
add
daa
inc
es
add
stc
repnz
pop
mov
loope
inc
add
push
movsb
and
test
adc
mov
add
dec
int
xchg
lret
scas
push
dec
rolb
out
movsb
jmp
xchg
out
jne
add
or
out
mov
pop
cmp
cli
jnp
and
testb
dec
jmp
subl
dec
push
cmp
cld
inc
mov
hlt
mov
mov
and
add
out
pop
inc
outsb
mov
rorl
das
lods
xor
xlat
cwtl
out
pop
div
inc
add
sti
dec
adc
ret
ret
add
dec
jg
mov
mov
and
xor
inc
adc
mov
dec
sbb
adcl
out
lods
pop
popf
jecxz
xchg
loopne
out
addb
inc
add
inc
loop
push
imul
pop
add
or
lret
and
xor
outsb
in
mov
add
mov
aas
cmpsl
out
jecxz
jle
andb
pusha
xchg
inc
add
ret
loope
cmpl
test
dec
aad
sbb
js
mov
loope
cmp
aam
or
and
mov
lret
and
push
jmp
notl
jb
and
pop
adc
jae
movsl
mov
adc
pop
xchg
imul
push
rcll
lret
add
int
in
add
push
aad
out
mov
test
mov
cmp
ds
sub
add
scas
jmp
sbb
stos
lahf
push
adc
insb
add
pop
cmpsl
je
mov
and
mov
mov
mov
je
add
push
addr16
add
popa
push
add
sbb
repz
mov
inc
cmp
aas
arpl
mov
mov
dec
cli
pusha
subb
xor
jp
outsl
sub
ror
push
or
call
add
cmp
dec
and
addb
push
lea
push
adc
into
cmp
cmc
in
jle
rol
test
add
lods
push
inc
fnsave
mov
mov
xor
xor
shlb
mov
push
push
mov
dec
lock
jno
outsl
test
add
pop
inc
pop
popl
or
stos
push
lret
mov
loopne,pn
ja
aas
in
mul
push
faddl
cmpsl
add
sti
loope
push
mov
cmpsl
mov
mov
int3
jb
mov
fsts
pop
mov
mov
std
mov
dec
es
cmpsl
sub
sahf
dec
mov
cmpsb
scas
cmp
das
mov
push
cmp
aam
jg
pop
insb
call
add
or
adc
fsub
xchg
out
or
dec
cmpsb
and
aad
in
sub
add
pushf
dec
subb
xchg
jbe
outsl
mov
mov
lret
adc
enter
rcl
mov
stos
add
and
jo
add
sub
aam
pop
cmp
scas
lods
int3
push
xor
lock
jo
jp
aad
sbb
adc
popa
shlb
testl
and
inc
shl
dec
mov
loop
rcrl
add
ret
jle
enter
dec
mov
or
clc
cmp
sbbb
sbb
repnz
andb
cmp
fmuls
add
sub
jo
sbbb
xchg
add
std
jno
popa
stc
pop
mov
popa
incl
dec
xchg
or
sahf
sbb
push
pop
push
mov
xor
imul
lock
pop
dec
lret
cmp
lcall
mov
lret
cmpsb
push
cmpl
in
push
add
shl
test
call
cmpsb
add
cmp
or
push
fldenv
std
lods
xchg
cmc
ficoms
loopne
scas
xchg
ja
and
inc
inc
sbb
add
xor
inc
pop
xorl
pop
daa
mov
fwait
add
mov
negl
jmp
push
js
popa
add
je
gs
daa
xchg
xchg
or
in
rcr
es
insb
lcall
adc
out
add
and
test
jb
mov
jp
in
sbb
sub
xchg
sbb
push
xchg
cmp
inc
push
and
cmp
in
arpl
xor
adc
add
stc
sbb
jge
scas
xor
in
test
stos
add
mov
jmp
adc
icebp
and
mov
out
dec
jbe
jmp
divl
pusha
mov
pop
jecxz
xor
scas
xchg
fisubl
or
imul
add
pop
xor
frstor
add
cmp
std
call
sti
add
ds
xchg
add
sbb
test
dec
adc
aaa
and
xchg
jle
add
dec
lea
cmp
mov
mov
add
lock
dec
and
shl
fdivr
je
dec
cwtl
insb
movsb
sti
fxch
mov
sbb
mov
and
xchg
xlat
ret
scas
idivl
bound
jae
fs
add
and
push
xlat
jns
jmp
add
ds
lret
xchg
dec
inc
and
adc
int
add
mov
ljmp
sub
arpl
jno,pt
jp
mov
add
adc
mov
lret
roll
push
pop
popf
xchg
push
mov
dec
or
je
add
sbb
mov
scas
lcall
rorb
sti
dec
xchg
inc
cmp
jge
stos
add
ljmp
and
cmp
fiadds
jbe
mov
ljmp
xchg
cmp
jge
lock
jb
rcl
les
ret
xchg
add
daa
fsubp
sbb
jns
divl
pop
xor
pusha
or
add
pop
lods
and
sbb
add
inc
add
inc
xchg
rorw
add
or
and
xor
push
pop
lock
mov
das
sbb
jb
xchg
subb
lods
pop
mov
or
xchg
les
mov
adc
pusha
add
loopne
fsubs
sub
hlt
inc
mov
icebp
push
dec
or
jnp
fildll
stc
sub
jmp
add
jae
cmp
addl
shl
add
dec
insl
pusha
movsl
fwait
loope
add
mov
and
push
sbb
inc
cmpb
mov
or
cli
ret
pop
rclb
push
mov
subb
jae
int3
iret
push
in
std
mov
lods
es
scas
test
add
insl
add
inc
andb
stc
jbe
inc
fnstcw
xor
add
je
ljmp
adcl
es
jnp
idivl
out
mov
mov
push
sub
xlat
jb
ds
sub
pushf
and
add
cmp
jae
jno
test
xchg
inc
out
subl
jl
add
mov
in
add
mov
lret
mov
add
push
jmp
xor
mov
sti
lcall
mov
dec
jge
and
psubq
dec
cmp
out
xchg
inc
dec
adc
push
in
push
or
testl
mov
js
mov
sub
cmp
add
push
pusha
xchg
mov
push
flds
out
push
ss
inc
lds
call
dec
out
das
push
mov
pop
push
faddl
inc
negl
aaa
sbb
pop
add
in
cwtl
and
mov
stos
insb
mov
insb
movsb
cld
xchg
push
outsl
sbb
sti
mov
enter
clc
je
jmp
outsb
and
pop
stos
cltd
sub
add
push
add
pop
push
add
fisubrs
inc
mov
daa
dec
repnz
mov
push
mov
leave
gs
shrl
mov
pop
xchg
out
xchg
out
int3
pop
ds
sub
dec
sti
push
sbb
dec
add
lret
int
add
add
xor
js
shl
cmp
repz
dec
and
or
das
test
stos
popf
fldl
test
flds
lret
sbb
std
add
es
je
pop
mull
das
lods
sbb
mov
mov
cli
cmp
out
out
test
lret
adc
adc
mov
cmp
out
push
jno
frstor
mov
fs
dec
es
scas
loope
xchg
cmp
mov
add
push
test
xor
pushw
je
jl
dec
add
push
push
cmpsl
add
mov
div
xor
mov
fldl
push
jno
sub
test
in
and
sbb
adc
aam
inc
nop
cmp
rolb
dec
push
cli
and
add
mov
mov
or
and
out
nop
add
or
sub
repnz
add
sbb
sbb
int
fstl
hlt
popa
mov
and
roll
push
es
sti
stc
je
pop
sarb
and
mov
test
add
jecxz
cmovs
incl
mov
ds
imul
lcall
aam
push
inc
orb
lods
sar
fidivl
add
notl
or
js
mov
xorb
fistl
rolb
mov
lock
outsb
out
add
mov
cmp
ss
add
enter
add
icebp
xchg
dec
inc
add
inc
lea
and
ret
incl
mov
mov
xchg
xor
aam
mov
sbb
push
jns
daa
and
adc
repz
cmpl
pop
mov
adc
lret
pop
pop
inc
bswap
mov
sbb
fcmovnb
stos
sbb
mov
test
mov
shl
add
cld
xchg
mov
or
push
sbb
sbb
mov
jl
jbe
push
sbb
push
fdivrl
inc
into
fcoml
jo
xor
adc
aam
sbb
insl
add
je
fwait
push
mov
cmpsb
mov
out
push
add
push
mov
es
aam
iret
bound
or
xchg
frstor
cwtl
mov
xchg
mov
pop
dec
punpckhbw
subl
mov
mov
adc
je
ficomps
cmp
mov
mov
stos
sbb
cmp
stos
jmp
cmp
es
or
repnz
in
cmc
pop
je
fistpl
fnstcw
cli
fisubrl
dec
mov
xor
call
sbb
push
lods
clc
clc
xor
stc
clc
sub
test
clc
bt
jmp
lcall
outsl
jnp
jmp
fistps
or
push
push
and
cld
and
and
inc
repnz
jne
sbb
arpl
sub
stos
movsl
imul
xor
xchg
lods
pop
sbb
call
push
xchg
cld
outsl
loop
int3
mov
adc
aaa
das
pushl
into
jbe
popl
pop
dec
mov
or
cli
insl
cmp
call
bound
repz
lahf
sbb
loope
and
add
mov
lods
sub
ds
and
mov
lea
ja
call
mov
ret
movsb
fwait
push
pop
mov
mov
pop
cmp
mov
pop
mov
mov
or
jp
and
lahf
in
jmp
popf
and
fld
daa
mov
nop
inc
dec
faddp
int3
mov
mov
mov
cmp
call
mov
push
aaa
xor
call
repnz
mov
in
or
lock
mov
data16
add
dec
sub
ficomps
xor
aam
xchg
movsb
aaa
push
scas
jg
cmc
xchg
xor
push
xchg
sub
pop
pop
fdivrl
icebp
dec
or
in
push
jnp
iret
push
ljmp
leave
fimull
fs
mov
or
add
sbb
and
adc
outsb
idivb
xchg
xor
aaa
dec
gs
mov
push
dec
arpl
push
mov
into
mov
ds
jns
cmc
push
xchg
sub
cltd
add
push
adc
aas
pop
outsb
adc
insb
jp
lret
stos
push
jle
add
mov
cmc
sti
push
aas
in
repz
insl
sti
repz
stc
insl
mov
nop
pushf
call
pop
insb
adc
daa
sti
xchg
mov
ja
jnp
mov
jl
dec
mov
xlat
adc
or
or
pop
out
mov
popa
jg
mov
dec
sbb
test
sbb
loopne
lods
inc
jg
ss
out
sbb
jo
clc
jl
or
and
jmp
cli
push
inc
aad
cld
ljmp
stos
cmp
sbb
call
repnz
pop
xor
sbb
lret
add
pop
mov
cmp
push
bound
push
jbe
push
out
push
fldl
pop
mov
cmp
inc
jmp
fistl
bound
or
inc
shll
push
daa
and
adc
cli
adc
adc
add
add
xchg
loopne
and
and
add
fxch
out
adc
int3
out
inc
incb
popa
inc
inc
or
xchg
dec
je
add
std
arpl
int
dec
pop
int
fyl2x
add
pop
mov
mov
dec
xor
add
mov
data16
inc
xchg
inc
pusha
or
or
mov
ljmp
or
int3
adc
mov
insl
jecxz
push
mov
jnp
xchg
add
fs
push
pop
loop
dec
scas
cmpsl
mov
cmp
ret
out
lret
jl
mov
sbb
and
popa
xchg
push
aas
xchg
jbe
xchg
inc
xchg
stos
and
es
lcall
xor
sbb
sub
shlb
hlt
inc
lret
mov
cmp
cmc
mov
neg
adc
bswap
add
add
movl
pushf
not
mov
add
bt
pusha
test
cmp
push
pushl
call
loop
add
xlat
jmp
arpl
jnp
fcomi
cmp
lret
pop
or
fisubrl
inc
mov
lahf
rol
sub
call
adc
sub
mov
in
jno
lock
nop
pop
or
test
cwtl
ret
stos
or
xchg
mov
jnp
flds
mov
mulb
xor
mov
push
push
mov
mov
adc
or
int3
loop
dec
mov
adc
movsb
xchg
cmpl
imul
sub
stc
or
jl
ret
sbb
or
dec
push
sbb
divl
sbb
lcall
cmpsl
jmp
data16
jno
mov
dec
add
add
inc
mov
inc
cmp
out
inc
push
fcoms
pop
adc
inc
scas
inc
shll
fists
sbb
pop
clc
sar
lahf
mov
ds
jp
cmpsb
jl
xor
sbb
cmp
hlt
xor
pop
and
in
in
add
and
inc
sub
inc
pop
sub
sbb
dec
mov
arpl
jg
stc
inc
sahf
mov
jo
in
push
push
xchg
adc
cmpsl
arpl
push
sub
out
shlb
shrl
jl
sub
add
rol
cmpsl
idiv
andl
sahf
push
repz
test
xorl
sbb
sti
pop
xchg
cmp
fstps
sbb
movsb
repz
test
test
push
in
in
adc
inc
mov
push
jg
leave
repnz
add
inc
out
pop
je
mov
repnz
inc
pop
jb
pop
stos
mov
jnp
inc
sbb
adc
ljmp
adc
cmp
add
sar
push
mov
inc
sub
in
and
pop
cmp
jle
sbb
daa
cmp
std
xchg
jecxz
ljmp
call
nop
mov
decl
sbb
aaa
daa
mov
sub
push
cmp
fbstp
sti
aas
rorl
fistl
mov
scas
ficoms
out
push
and
jle
push
pop
fnsave
mov
jnp
enter
push
mov
push
shlb
pop
pop
cmp
mov
fsubrl
imul
jne
je
jbe
pop
outsb
mov
test
in
jmp
mov
xchg
cmc
testb
sbb
js
hlt
and
jbe
mov
std
bound
xchg
mulb
leave
jne
xchg
call
incb
cs
aam
push
push
or
sbb
mov
ds
pop
dec
cld
jb
sbb
fisubrl
fidivrl
out
cmp
sub
lock
adc
mov
arpl
into
les
cli
dec
ret
sahf
fsubrs
imul
adc
push
loop
inc
cmp
dec
add
test
lds
add
imul
fists
lret
or
out
andl
or
cmp
js
addr16
xor
in
xchg
mov
outsl
push
dec
imul
int
or
jp
cli
mov
inc
je
cmp
xchg
cs
out
dec
clc
mov
xor
push
push
push
mov
mov
jmp
push
adc
mov
pop
push
cmp
push
orl
movsb
fstpl
jl
jp
pop
popa
fistl
cs
sbb
out
push
jecxz
shlb
addr16
mov
mov
pop
cmp
ficompl
test
adc
inc
hlt
mov
and
mov
lods
or
in
cltd
adc
inc
dec
jmp
imul
lcall
sarl
jne
sub
out
mov
push
xor
cmpb
loopne
mov
ss
pop
push
das
xor
shrb
sbb
push
loope
stos
xor
inc
stc
add
push
int
adc
sarb
mov
test
push
lods
mov
jmp
jmp
sbb
dec
sub
adc
or
and
mov
mov
cmp
or
push
mov
jne
xor
add
mov
pop
mov
sbb
repz
rorb
xchg
push
cmpsb
add
test
sub
lds
pop
push
or
shrl
gs
push
and
fisubrl
xchg
test
mov
dec
cltd
in
pop
push
rcl
jnp
sahf
repnz
sub
lcall
enter
mull
and
scas
lret
xchg
sbb
aam
xchg
gs
sub
lahf
popaw
sbb
xor
imul
pop
cmp
add
dec
pop
in
stc
cmc
inc
xor
sub
sub
rorl
jp
xchg
testb
repnz
stc
lcall
xor
mov
fs
hlt
jb
addr16
push
pop
insb
lods
dec
push
lods
call
push
lea
jb
push
cmpb
pushf
call
lock
lods
fwait
push
lods
sbb
push
fstp
mov
and
cltd
rolb
cmpl
aam
lea
jmp
in
cmc
mov
in
add
jge
test
into
sub
adc
ja
test
mov
push
or
adc
ja
jbe
sbb
aad
ss
call
loop
xor
and
push
ds
inc
pop
out
dec
and
pop
jno
pop
das
mov
and
rolb
cli
sbb
and
inc
pushf
mov
fnstenv
jmp
nop
out
scas
fwait
push
inc
ret
mov
jg
inc
fwait
addr16
inc
cltd
dec
inc
in
mov
fcmovnu
push
xchg
cvtps2pi
mov
stos
adc
int3
stos
push
sbbl
mov
xchg
es
add
jmp
pop
cld
neg
jae
dec
fwait
mov
push
pushf
mov
loop
add
popa
mov
cmpsb
sahf
mov
add
or
inc
pop
sbb
xor
movsl
test
mov
jmp
inc
pop
mov
pushf
jmp
je
popa
scas
fwait
push
call
or
loope
lods
adc
cli
fwait
pushf
jns
clc
inc
xchg
fbld
and
mov
push
xchg
inc
cmp
dec
sbb
mov
cltd
lods
sti
in
cmpsb
pop
shlb
xchg
out
enter
mov
adc
fadds
fsubrl
scas
inc
xchg
mov
lahf
pop
adc
pusha
lea
jmp
pop
cltd
out
fwait
push
arpl
mov
clc
xchg
rclb
mov
out
sub
add
ret
and
mov
insb
xor
cmp
sub
dec
push
aaa
mov
fcoml
xor
or
cld
dec
movsb
cmp
negb
mov
xor
into
mov
xchg
inc
gs
xor
out
xor
sbb
in
adc
lods
lret
jns
fstl
pmulhw
out
outsl
lods
xchg
ret
out
nop
scas
fwait
push
mov
sub
xor
add
inc
mov
inc
hlt
mov
cmpb
jge
leave
inc
into
ljmp
pop
jmp
push
or
jbe
sti
mov
mov
xchg
daa
cmpl
mov
fmull
into
bound
je
inc
jb
fstpl
lods
bound
rcrb
pop
add
push
test
adc
cmc
xchg
cli
jae
inc
inc
sub
sub
cmp
fdivrs
lds
jg
jne
cltd
out
jnp
xlat
xor
cmp
in
dec
mov
push
popa
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
cmp
mov
push
push
xor
or
lret
outsl
xchg
out
jnp
dec
push
sub
sar
pushf
or
mov
inc
std
es
test
jle
xlat
xor
sub
pop
into
loopne
daa
push
or
movsl
xor
jge
pop
xor
out
lahf
mov
in
ja
inc
sbb
mov
mov
mov
lea
pop
out
push
inc
jb
sbb
push
xor
push
sbb
cmc
repz
jle
leave
into
sub
mov
jne
sub
adc
jmp
xor
js
fimuls
push
cmc
sbb
pop
in
push
mov
sarl
adc
lret
shll
pop
cs
xchg
sub
imul
std
lret
pop
and
sub
sbb
adc
mov
sub
rcrb
xor
jno
mov
sbb
jl
orl
es
nop
pop
dec
xor
push
in
xlat
xor
dec
sbb
or
inc
imul
pop
or
cmp
out
or
int
inc
jbe
arpl
sahf
pusha
or
mov
jns
push
xor
xor
sub
scas
jp
mov
xchg
out
rcll
jnp
mov
cmp
pop
mov
or
sarl
notl
rorl
out
stos
cld
push
push
loope
sbb
adc
mov
xchg
mov
xchg
add
in
inc
or
gs
sbb
jg
jmp
cltd
sbb
pop
popw
jo
dec
ss
in
lods
popf
ja
pop
loop
push
movsb
lcall
and
dec
cmpsl
imul
int
pop
icebp
sti
test
xchg
push
pop
cs
adc
rcl
ret
pop
mov
out
cld
dec
arpl
jbe
mov
shll
pop
data16
cli
pop
dec
jnp
or
fwait
outsb
inc
outsl
cltd
stos
and
jle
xor
aad
push
loope
cmp
and
fisttps
add
sti
sbb
out
cwtl
lock
sarl
lds
jnp
pop
and
shrb
arpl
fwait
push
out
lcall
es
dec
fidivl
cmpsb
test
add
jmp
fcmovne
adc
push
test
repz
jl
jne
jecxz
stc
leave
movb
adc
shl
mov
into
stos
cmp
mov
iret
jecxz
int3
mov
stc
ret
fstp
xchg
and
popf
mov
aad
jecxz
ljmp
imul
popf
sub
sub
popa
jno
std
sub
aaa
pop
or
int
fwait
push
enter
mov
push
or
mov
inc
dec
adc
mov
in
imul
stos
clc
xchg
les
inc
out
mov
lods
cmpsb
jle
mov
jb
jnp
cld
dec
jmpw
sub
loop
loopne
xor
xor
ljmp
mov
ret
mov
in
int
cmpsl
mov
pop
sti
out
adc
mov
cmp
cmc
loope
dec
movsl
xorl
sbb
negl
xchg
push
push
out
ja
hlt
inc
mov
je
add
push
pusha
pushf
lea
jmp
mov
cmc
stc
add
push
mov
cmc
test
pushf
push
pushf
pushf
lea
je
bt
add
pusha
movb
bt
call
enter
fwait
push
aad
jmp
aad
push
icebp
xor
xor
inc
ret
pop
pop
cmp
ss
sahf
fisubrs
rcll
inc
and
ficoml
cmp
pop
mov
mov
popa
lock
test
lret
add
jge
stos
add
pop
aas
sti
dec
arpl
repz
test
gs
je,pt
sbb
dec
clc
xchg
dec
nopl
aas
popf
movsb
movsl
shlb
adc
cltd
xor
mov
sbb
aad
cmp
xlat
add
pop
gs
aaa
pop
fistpl
adc
mov
nop
aas
mov
xorl
enter
lock
test
iret
push
inc
mov
in
scas
or
fsts
mov
jae
mov
mov
cmp
add
mov
inc
insb
je
jns
xor
sub
sbb
aad
fisttps
add
xor
mov
cmp
dec
imul
stc
pop
test
imul
mov
cmp
xchg
jb
jo
std
xlat
test
fwait
push
mov
cmpsb
xchg
testb
stos
fistpll
lcall
inc
adc
inc
lahf
mov
push
mov
xchg
loop
out
pop
inc
or
dec
fsubrl
xchg
ljmp
int3
xchg
push
push
stos
std
cmpsl
aas
in
cmpb
xorb
dec
inc
mov
cs
sarb
sbbb
and
lods
cltd
sbb
mov
fwait
push
cwtl
push
jmp
movsl
jns
jmp
push
xchg
cmp
dec
mov
gs
jnp
inc
out
in
push
imul
adc
jb
mov
sub
jmp
ds
scas
adc
inc
inc
dec
mov
enter
les
adc
gs
xlat
push
insb
jmp
test
xor
xchg
xor
xchg
aaa
mov
push
lods
test
push
push
dec
dec
dec
dec
inc
push
cs
insb
add
push
in
push
lret
pop
inc
mov
shlb
cli
loop
out
cmp
cmp
out
xchg
jbe
loop
xchg
pop
inc
int3
and
pusha
fxch
shll
orb
mov
subb
add
adc
sbb
filds
jp
dec
jae
and
sarl
dec
fldl
insl
adcl
aad
sub
and
xor
pop
hlt
jmp
je
sub
or
push
sub
or
cmp
sbb
lret
icebp
fs
add
push
into
inc
xor
lds
insl
and
scas
jno
rolb
rolb
mov
pop
sub
push
insb
mov
test
cld
imul
testb
lahf
cmc
jmp
jecxz
in
ffreep
pop
jmp
dec
jno
inc
out
ss
pop
mov
aad
icebp
iret
fstl
mov
xchg
mov
fwait
push
jmp
mov
mov
or
sub
cwtl
fisubs
aad
mov
popf
lret
lock
mov
mov
testb
loop
subb
xchg
daa
jecxz
aaa
sub
mov
je
bound
cmp
lret
cwtl
lahf
and
daa
sarb
dec
mov
add
lds
scas
cltd
xchg
push
testb
out
sbb
or
or
and
xchg
pop
and
mov
dec
xchg
cmp
fnstcw
insl
dec
xor
or
jg
sahf
cmp
cltd
daa
jo
mov
iret
out
mov
test
in
lds
xchg
iret
addl
stc
fstpl
idivb
and
repz
pop
sub
xchg
cmp
and
push
or
jnp
ja
rcl
pop
std
subl
fadd
lcall
nop
mov
push
inc
cmpsb
jb
inc
push
cmp
ljmp
aaa
xor
or
add
mov
pushf
pop
cli
jle
fcoms
std
rcrb
int
mov
mov
mov
mov
mov
push
adc
and
sbb
sbb
call
and
mov
pop
mov
push
data16
adc
mov
sub
iret
lds
mov
int
push
cmpsb
dec
mov
pusha
lea
je
stc
push
pushf
pusha
add
clc
jmp
hlt
cmpsb
fnstcw
push
mov
gs
test
jno
xor
sub
in
jge
mov
lods
inc
out
inc
sbb
jge
sbb
pop
dec
insl
sahf
outsb
sub
imul
pop
sub
nop
ficoml
mov
lods
push
cmp
bound
iret
mov
pop
shl
lret
iret
inc
ffreep
ss
mov
loop
cmpsl
fisttpll
xchg
ja
mov
jg
cmp
das
dec
jo
out
pushf
pusha
lea
jae
call
bt
jmp
mov
push
je
insl
leave
int
popf
inc
movsl
cltd
jge
sbb
xor
mov
popa
dec
jne
pop
rolb
out
popa
in
xchg
scas
out
xchg
cld
scas
imul
jmp
divl
out
inc
outsl
arpl
sarb
pop
lret
and
jo
jle
dec
mov
out
cmc
hlt
std
push
insb
div
jecxz
push
aas
pop
psubsb
jmp
push
xor
out
pop
rcrb
xchg
fsubrl
push
arpl
loope
pop
out
movb
lea
ja
dec
setne
inc
pushf
call
outsb
cmp
fwait
push
ljmp
inc
pop
mov
repz
xor
cmp
int
jo
in
xchg
xor
and
jb
sbb
fucomp
ret
adc
fnstsw
adc
dec
adc
mov
out
pop
add
mov
lods
mov
repnz
aad
jnp
in
jl
stos
fdivs
xchg
sub
pop
dec
lock
inc
fcmovbe
stos
inc
popa
push
adc
mov
push
in
rclb
add
xchg
orl
lock
xchg
insl
cmp
push
pop
and
fwait
push
and
fcmovu
cli
mov
xor
jmp
mov
mov
jl
cmp
mov
xor
fisttpl
imul
lock
adc
inc
cs
mov
jns
clc
push
fwait
btr
je
push
or
jne
sub
movsb
popf
inc
pop
fnstenv
mov
sub
shlb
sbb
push
pop
sbb
fwait
add
push
or
jecxz
mov
push
int3
cmp
push
movb
cmp
mov
lea
jae
pushf
cmp
pushf
pusha
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
cmp
shr
push
lea
je
pushf
pushl
push
jmp
adc
je
popf
cmp
mov
std
dec
jge
test
xlat
push
push
inc
xor
data16
into
or
cmc
xchg
push
mov
mov
push
mov
out
push
adc
cmp
push
and
sub
jae
jae
cmp
push
cli
fucomp
jnp
sbb
lea
addr16
pop
rcrl
inc
mov
or
pushl
and
js
addr16
cwtl
mov
lahf
out
and
inc
stc
mov
test
movsl
mov
mov
fwait
push
stc
push
pop
xchg
jle
jle
jb
addb
cmp
cmp
inc
inc
mov
inc
jmp
xchg
imul
or
hlt
and
sbb
les
xor
cs
hlt
mov
ljmp
jbe
fidivl
jae
in
test
lahf
cmp
mov
dec
fsubs
xchg
in
pop
lods
fscale
cmpb
cmp
xchg
int
push
and
mov
rcrl
mov
sbb
mov
shl
shrb
jmp
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
adc
mov
inc
ret
out
xlat
dec
pop
mov
ror
lods
and
mov
into
inc
aaa
sub
xchg
inc
xchg
stos
xor
fadd
test
dec
ja
fdiv
movsb
xchg
or
inc
cmp
jo
rcrb
jno
mov
pop
pusha
adc
movsb
fcomip
loope
mov
rcr
mov
arpl
stos
and
mov
xchg
bound
test
mov
pop
ja
jmp
push
popf
mov
mov
jecxz
sub
cs
clc
movb
sub
bt
not
clc
push
xor
mov
cmp
cmp
bswap
call
icebp
ret
mov
mov
jns
pop
icebp
ret
addr16
xchg
and
scas
adc
std
repz
pop
repz
inc
xlat
mov
inc
cltd
imul
push
pop
cmp
adc
pop
cmpb
mov
shlb
fwait
js
jle
sub
fldcw
popf
xchg
scas
push
and
imul
rclb
mov
pop
fistps
jbe
jbe
xor
sbb
negl
mov
and
out
xor
out
dec
add
cmp
xor
fistpll
mov
daa
iret
test
mov
lret
or
cmpsl
aad
add
cmp
adc
cmp
and
or
mov
nop
in
dec
hlt
js
push
xor
test
cmp
xchg
inc
push
jecxz
lcall
ret
repz
push
out
push
and
xchg
test
jle
shlb
and
push
mov
dec
lea
push
fisubrl
push
mul
fnstenv
push
bound
cmp
sbb
rolb
and
rcl
rcrb
shlb
cltd
jnp
repnz
xchg
aad
pusha
mov
seta
bswap
movzbl
pop
mov
call
pop
pusha
mov
pushf
mov
pushl
ret
mov
push
pop
jo
test
mov
mov
adc
hlt
dec
das
pop
add
fiaddl
jbe
inc
outsb
push
mov
mov
push
jl
aam
mov
cmp
clc
les
ja
sub
adc
testl
inc
or
cmp
and
xor
mov
pop
mov
adc
nop
scas
popa
cmpsb
adc
das
daa
jecxz
sarl
leave
test
pop
int3
mov
cmpsb
pop
call
xchg
fistpl
mov
lret
cltd
aaa
int
mov
and
push
test
inc
mov
lea
jns
not
stos
call
xchg
bsr
neg
not
setb
mov
sbb
sub
sar
setnp
push
mov
and
push
shrd
neg
push
bts
lahf
push
call
lods
inc
cmp
fwait
push
stc
lcall
push
xchg
push
and
xchg
sbb
ljmp
xor
std
xchg
sub
sub
cmpsl
inc
iret
push
jl
mov
sti
outsl
jns
push
data16
in
mov
add
stos
enter
mov
pop
out
out
adc
hlt
mov
out
dec
pop
inc
clc
rcll
loope
xor
jle
sub
push
cmp
subb
and
mov
jae
mov
test
test
aaa
jae
mov
mov
mov
lret
aaa
sbb
xor
int
mov
inc
pushw
fstps
add
xor
das
nop
and
into
mov
mov
inc
ficoml
cmp
cwtl
fidivrl
movsl
add
cmp
in
mov
repnz
ret
jp
and
pop
pop
xchg
or
push
or
sbbb
scas
mov
ljmp
jno
push
sbb
mov
movsb
cmpsl
and
adc
fisttpll
xlat
insl
sbbl
xlat
sbb
fsubrl
ret
mov
fwait
push
cltd
push
cmp
and
pop
es
xchg
xchg
mov
mov
sbb
sub
daa
mov
pop
test
je
faddl
sti
test
cltd
push
jl
jae
xchg
fisubl
imul
bound
pushf
push
iret
cmpsl
arpl
out
and
inc
and
cltd
inc
and
pop
movsb
dec
push
or
in
xchg
bound
xchg
mov
push
insl
pop
sub
cmp
adc
mov
insb
adc
enter
pushf
jecxz
fwait
push
dec
dec
stos
cmpsl
xchg
out
xor
mov
and
mov
sbb
inc
call
cli
xor
fimuls
les
mov
imul
adc
pop
pop
cmp
inc
add
ficoml
fwait
adc
jle
mov
sti
mov
insb
imul
pushf
pop
and
or
sub
jo
push
test
pop
jns
sbb
insl
cwtl
lea
push
stos
jbe
je
xor
add
sbb
rorb
jae
notl
cmp
or
xchg
fsubs
or
pop
sarl
shrb
pop
mov
push
faddl
pusha
pop
movsb
mov
imul
xor
inc
push
push
movl
lea
scas
and
mov
jae
lahf
pushf
sbb
mov
or
lds
cs
daa
mov
sub
mov
mov
mov
outsl
shlb
push
loope
pop
pop
pop
pop
aaa
test
or
mov
in
cmp
add
push
cmp
inc
mov
loop
ret
test
ret
fwait
push
into
sbb
out
jg
cmpsl
fwait
xchg
mov
shr
xor
test
sub
xor
stos
adc
daa
push
xchg
pop
int
push
repnz
pop
sarl
leave
lahf
pop
push
lods
and
inc
dec
or
scas
repnz
xchg
add
sbb
push
push
push
xor
jb
stos
pop
in
rcll
stc
adc
push
add
cmp
aam
dec
cmpsl
popa
mov
lods
sub
dec
mov
aaa
incl
hlt
rcl
jae
mov
xchg
mov
fdivl
jmp
add
mov
filds
xor
inc
testl
sti
sbb
push
fisttpl
jle
jnp
jo
xchg
cld
or
xchg
sti
lahf
stos
push
div
lret
shl
cld
repz
clc
push
sub
mov
jmp
mov
sti
cli
std
aaa
push
sahf
je
arpl
sub
popa
mov
cmpsb
mov
int3
mov
sar
push
mov
aad
aam
mov
mov
icebp
rclb
rol
cmp
aad
sbb
xchg
out
cmc
inc
cmc
aaa
clc
and
xor
adc
xchg
inc
jae
add
movl
hlt
je
rorl
loopne
jb
imulb
add
cmp
ror
adc
jae
in
adc
inc
jecxz,pn
mov
cmc
call
add
sti
sahf
call
push
out
in
fisubrs
pop
sbb
xchg
pusha
stos
push
repnz
add
and
cmpsb
shrl
fmuls
jno
out
call
insb
mov
xchg
std
imul
lret
and
loop
fstp
int
jmp
pusha
dec
add
mov
fs
fbstp
imul
mov
js
pop
stos
repnz
repnz
das
mov
jne
pop
sub
and
fcmovnb
in
ja
or
lret
icebp
jp
jmp
insl
jmp
jae
decl
xchg
add
add
dec
adc
sub
mov
ret
pop
mov
add
outsl
sar
stos
jo
pop
pusha
fisttpll
test
jg
jo
jle
inc
clc
icebp
inc
mov
sub
lock
ja
rorb
repnz
repz
mov
jne
pop
and
div
cs
pop
pop
xchg
arpl
mov
pop
jno
pop
sbb
xchg
sub
sbb
or
ffree
arpl
mov
sbb
jae
mov
jmp
out
and
or
fmuls
mov
push
and
out
jno
lahf
div
add
mov
inc
leave
out
fstpt
loop
mov
rolb
jle
mov
mov
pop
mov
push
add
jae
inc
cld
xchg
or
test
dec
push
repz
fnsave
inc
pop
call
xor
in
xor
in
jmp
push
bound
sbb
pop
push
repz
lret
and
dec
inc
ror
in
adc
jno
popa
jecxz
jae
ja
aas
adc
out
cld
pop
imull
aaa
fisttpl
movzbl
lods
and
loope
xchg
daa
mov
and
xchg
sub
inc
fadd
and
or
mov
pusha
stos
ss
aad
das
pop
in
push
es
stos
fucom
movl
std
sbb
or
or
sub
pusha
cwtl
push
cli
mov
push
std
sti
ja
jb
jecxz
stc
insb
pop
xchg
push
ljmp
mov
negl
inc
in
mov
mov
add
push
bound
xorl
pop
sbbb
mov
cmp
mov
xor
cmc
push
mov
dec
lock
cmc
fldl
fstps
jge
inc
or
mov
loopne
cmpb
mov
ret
push
sar
pop
cmpb
cmp
les
in
movsl
pop
or
push
popa
in
cmpsb
shl
inc
and
jmp
pop
icebp
mov
push
pop
fisubrl
scas
jae
jge
jb
pop
pop
call
jnp
and
in
jl
ja
xchg
fdivr
cltd
mov
in
rclb
cli
fisttpl
fbld
inc
test
jbe
mov
bound
sbb
jbe
xor
jno
jp
out
mov
jno
mov
jecxz
shrl
push
icebp
cli
out
ljmp
and
pop
jg
and
xchg
ficoms
in
jnp
test
shll
in
aad
jp
shll
stc
cmpb
icebp
addr16
fisubs
xor
jp
jp
xor
insl
loop
mov
xchg
cli
sub
ret
fisubrs
sbb
jmp
pop
jp
outsl
jno
rcl
jae
inc
movsb
xor
mov
mov
inc
daa
jne
push
and
fdivrp
adc
or
jle
xor
pop
repnz
inc
cmpsl
cli
jne
xchg
aam
xor
int
js
sub
mov
push
loop
mov
cwtl
adc
insl
movsb
loope
jle
inc
jle
jle
sub
ret
pop
in
ja
daa
call
mov
jmp
decb
lret
shrl
mov
mov
pop
or
push
std
dec
sti
in
and
pop
adc
fcmovnbe
adc
push
jecxz
xlat
ret
or
jp
testb
sbb
adc
ret
xchg
in
mov
outsl
andb
mov
mov
icebp
sub
xor
je
inc
adcb
imul
sbb
pop
pop
xchg
mov
jp
xchg
jns
pop
dec
ljmp
lods
loope
push
and
imul
sub
mov
mov
test
out
jmp
cli
out
ret
repnz
xor
mov
imul
out
andl
xchg
loope
sub
jge
and
pop
and
xor
add
cs
and
cmpl
jecxz
inc
and
arpl
or
daa
cwtl
mov
sahf
jns
aaa
clc
lret
push
mov
adc
into
push
jge
mov
mov
dec
dec
push
sar
jl
and
jge
mov
repz
aaa
add
xor
fs
popa
int
pop
dec
sbb
aas
sub
aam
cmpsl
mov
cmp
mov
push
data16
mov
mov
inc
mov
adc
add
jno
cs
adc
mov
inc
xchg
jno
mov
fsubr
pop
mov
aas
ret
repnz
rcrl
shr
jae
repz
xor
loope
cli
in
xchg
xchg
push
in
aam
negb
repnz
rcrl
mov
mov
mov
insb
test
inc
test
fidivs
mov
jnp
lock
pushl
jbe
push
or
and
xchg
les
in
pop
push
pop
mov
aas
ja
lock
or
icebp
stos
jge
loope
enter
inc
sbb
loop
fsts
fs
mov
gs
and
jo
jnp
push
ja
xchg
test
pop
into
push
pusha
jg
int3
lea
dec
mov
out
dec
aam
stos
daa
cli
roll
or
push
xor
in
add
push
arpl
or
popf
scas
and
loopne
outsl
lret
and
sub
lock
mov
imul
pushf
and
mov
push
cmpsl
addr16
mov
xchg
imul
lds
lock
push
repz
repnz
mov
aas
push
xchg
jmp
mov
rcll
pop
mov
inc
add
loope
sahf
leave
mov
fdivp
nop
jecxz
ret
mov
test
outsb
jmp
jbe
lock
addr16
mov
gs
jb
icebp
xorl
cmovnp
es
insb
out
daa
add
das
ret
mov
and
mov
mov
outsl
mov
ret
inc
mov
in
pop
outsb
in
pusha
std
loope
mov
aaa
push
mov
inc
cmpsb
jecxz
cmpsb
xchg
ja
and
xor
xchg
scas
jb
arpl
jae
pop
outsl
ret
xlat
xchg
cmp
mov
push
loop,pn
jl
stos
lret
lock
xchg
pop
mov
jg
fs
stos
pop
jbe
adc
inc
lds
daa
mov
aam
lock
dec
jns
scas
adcb
mov
xor
push
mov
pop
out
jecxz
vcmpsd
scas
inc
pop
xchg
mov
mov
sub
inc
xchg
xchg
dec
jg
pop
mov
adcl
js
adc
push
fimuls
loope
bound
xchg
xor
loope
pop
inc
sahf
mov
shl
enter
loope
sbb
lock
jecxz
imul
jb
inc
cli
in
mov
add
ljmp
outsl
ss
hlt
inc
cmp
mov
repnz
sub
push
addl
rolb
jecxz
inc
iret
cli
into
and
pop
add
pop
lahf
fisubl
mov
cwtl
or
mov
adc
adc
lret
cs
jns
xchg
in
adc
or
pusha
mov
movsb
filds
andb
inc
mov
mov
into
xchg
dec
inc
cmp
rol
jnp
mov
divb
loope
xchg
ljmp
dec
scas
in
out
ficompl
fisttpl
or
mov
sbb
jecxz
faddp
xor
mov
loop
stos
xlat
sbb
sahf
mov
sub
cs
push
or
or
andl
insl
lret
daa
push
cltd
aad
leave
fsubrp
mov
mov
mov
jg
sbb
lock
arpl
in
mov
cli
inc
loope
cmp
imul
sbb
cmp
jecxz
notl
dec
mov
insb
cmp
sbb
mov
ret
in
xchg
ret
push
into
ret
push
ret
cmp
xor
scas
push
fisttps
ret
pop
push
mov
jp
sub
lods
repz
mov
jge
jecxz
jp
jne
mov
or
and
mov
mov
pop
loope
or
jb
pop
lock
sub
jl
lret
lods
lret
lret
sub
lret
cli
lret
cli
lret
lret
xchg
jp
lret
mov
cmp
inc
jecxz
or
inc
fiaddl
cmp
adc
mov
mov
xchg
ret
jns
lock
das
adc
sbb
aam
dec
aad
push
xor
das
sub
iret
adc
ljmp
incb
repz
mov
pusha
sub
into
addr16
dec
into
mov
pop
mov
filds
sbb
mov
cld
xor
stos
fptan
pop
xor
sti
shlb
and
out
icebp
sub
and
shlb
fisubrl
xor
dec
call
mov
and
sar
shlb
popf
bound
jne
xchg
cmp
leave
divb
pushf
sbb
mov
stos
imul
ficoml
loopne
mov
outsl
out
push
fists
add
jmp
pop
test
outsl
jo
rcl
in
ret
cmp
or
lods
in
pop
sbb
lds
mov
mov
xlat
add
loopne
dec
cmp
adc
insl
xchg
insl
cli
repz
pusha
dec
test
push
out
das
mov
rorl
jae
fcmovbe
dec
sahf
out
xchg
pop
cld
adc
int
aas
mov
xchg
mull
imul
inc
mov
fwait
clc
std
ficompl
addb
out
fldcw
frstor
andb
mov
sbb
ficompl
sahf
fidivrl
loopne
mov
sub
fidivrs
std
mov
hlt
pusha
mov
movq
and
insl
ds
or
imul
loopne
mov
sbbl
movsl
repnz
lcall
pop
imul
mov
icebp
mov
adc
or
shll
test
sub
fstpl
push
lret
jnp
divb
shlb
push
jno
mov
outsl
bound
fisttpl
leave
lods
mov
mov
dec
mov
in
xor
andb
pusha
iret
add
loop
cmp
pop
mov
shlb
out
push
ljmp
pop
scas
or
adc
mov
push
popa
imul
movsbl
mov
xchg
mov
push
arpl
frstor
out
pop
in
pop
cmp
xlat
ret
sub
shl
ljmp
adc
push
adc
push
mov
adc
push
ret
xchg
ljmp
rcrb
cmp
cmp
fs
pusha
mov
xchg
jg
out
pop
clc
lds
out
andl
adc
mov
jo
outsb
fwait
and
cmp
adcb
adc
cli
repnz
mov
jl
test
xchg
jnp
fsubs
mov
adc
inc
pop
cltd
aas
xchg
jecxz
loope
mov
inc
pop
sub
mulb
mov
mulb
inc
dec
cmp
pop
arpl
jno
ficompl
mov
or
pop
fdivrp
fstps
lahf
movsl
jecxz
test
insb
push
sub
push
outsb
in
outsl
jge
adc
add
iret
pop
adc
mov
add
cmp
cmpsl
ljmp
adcb
mov
stos
pusha
cmpsb
ret
mov
rorl
cmpl
or
cmp
fsubrs
push
negb
pop
xchg
aas
lea
sub
adc
icebp
ja
cli
jp
decb
mov
jg
pop
mov
or
sub
xchg
jg
cmp
jmp
sbb
loop
add
aam
pusha
add
pop
sti
leave
daa
mov
ret
mov
add
inc
mov
xor
in
sarl
xor
mov
in
xchg
add
aad
dec
mull
das
xchg
add
iret
mov
xchg
fsubrp
add
repnz
push
mov
mov
pop
adc
aam
fcmovnb
sub
xor
and
fsts
movsb
mov
sahf
push
out
mov
push
lock
pop
push
in
and
fidivrl
jns
ret
ret
pop
xchg
push
adc
cmpl
arpl
pusha
xchg
sbb
test
add
xchg
fidivrl
add
mulps
pop
repnz
xor
jnp
sti
jg
or
dec
adc
lock
je
push
or
fcmovnbe
mov
pusha
adc
inc
dec
pop
sub
leave
or
enter
xlat
bound
test
loope
adc
mov
jg
shl
adc
in
iret
adc
pop
aaa
aam
rorb
pop
fmuls
cli
mov
call
mov
push
loop
jnp
and
icebp
mov
cmp
out
out
xor
lret
repz
ss
imul
inc
ret
movsl
cmp
sti
lods
sar
pop
push
mov
mov
jb
insl
or
mov
mov
mov
cmovnp
push
jo
mov
mov
or
sbb
out
or
ja
ss
jg
sahf
ret
mov
shlb
loop
cli
cwtl
jg
jecxz
sbb
and
das
jg
mov
test
pushf
test
cmp
mov
shll
dec
stc
imul
lret
mov
rcrl
xchg
int
in
inc
pusha
cli
dec
insl
pop
mov
adc
aas
jb
pop
pop
pop
loope
jo
cmp
mov
xor
xlat
fcmovu
das
insl
jmp
int3
ffree
pop
in
jp
shlb
mov
adc
dec
mov
jl
adc
lret
fbstp
push
and
icebp
popf
and
pop
loopne
jp
and
lods
mov
je
xchg
addr16
mov
stos
jg
daa
inc
in
daa
leave
push
adc
jecxz
daa
mov
inc
sub
in
mov
in
mov
pusha
arpl
jb
arpl
inc
cmp
sarb
pop
jecxz
lret
cmpsl
shl
pusha
or
nop
sub
aam
fsub
xor
xor
shr
jb
push
sti
jo
outsl
mov
push
xchg
loop
push
mov
jne
push
push
jecxz
int
jg
mov
sbb
loopne
adc
xor
repz
mov
xchg
xchg
cmp
mull
mov
jecxz
mov
pusha
mov
pop
int3
add
aas
pop
sbb
popf
dec
mov
sub
fcomi
scas
xor
mov
jle
daa
mov
jne
push
mov
fists
addr16
push
popa
push
das
jmp
idivb
aam
pop
icebp
sub
sbb
push
xchg
pop
mov
jp
divl
and
mov
dec
sub
mov
xchg
xchg
imul
push
sarl
jmp
loop
loope
adcb
jg
pushf
xchg
ja
xor
and
lods
ret
adc
aaa
jnp
and
push
test
aaa
cmp
scas
scas
push
add
rcl
movsl
test
push
in
lock
sbbb
shlb
aaa
fmul
sbb
sub
add
sub
mov
or
adc
outsl
aaa
mov
enter
jne
arpl
pop
iret
cmpsl
popa
sub
jecxz
in
xor
std
out
push
mov
ret
sub
in
std
cmp
arpl
repnz
jno
test
push
adc
jecxz
aad
fidivl
inc
cmp
mov
jg
enter
cmp
mov
jle
ss
gs
int
mov
lock
xchg
aas
mov
xchg
xor
sbb
jmp
lahf
mov
adc
mov
lock
aas
aad
lcall
cmc
cmovno
and
fcompl
les
xor
lea
test
sbb
dec
and
loopne
movlps
add
mov
aas
imul
jp
cmpsl
mov
aas
sub
cltd
dec
and
ret
and
pushl
inc
cmp
pop
nop
test
cli
inc
movsl
jns
ret
mov
movsl
js
lock
inc
inc
shlb
cli
in
pusha
and
pop
cmp
push
jg
inc
jo
repnz
fistps
dec
dec
nop
xor
cmpsb
loop
jnp
pusha
fisubl
cmp
icebp
jnp
xor
add
mov
inc
pop
mov
outsb
mov
mov
lock
lods
jmp
adc
pop
dec
sti
imul
pusha
xchg
dec
xchg
dec
jbe
into
ret
lock
mov
ja
add
jecxz
clc
sahf
icebp
push
pop
mov
pop
adc
out
addl
outsl
jns
or
inc
roll
std
scas
cmpsl
jmp
iret
add
test
xchg
jae
dec
xchg
jno
inc
xchg
pusha
incl
mov
mov
push
add
icebp
movsb
dec
push
clc
add
call
clc
xor
dec
out
cmpl
mov
xor
icebp
mov
daa
sub
pop
jmp
sub
sti
push
mov
imul
mov
dec
push
pop
addr16
fstp
clc
sbb
popf
fisttps
dec
xchg
bnd
mov
pop
aad
sub
loopne
icebp
pusha
cwtl
dec
xchg
addr16
in
call
fwait
icebp
aas
mov
dec
xchg
pop
mov
pop
icebp
test
and
xchg
and
jbe
in
or
xor
fidivs
arpl
lret
xor
jp
aas
mov
sti
cmc
sarb
out
out
jp
mov
push
jno
cli
rol
sub
aam
lret
push
inc
mov
mov
gs
out
loope
sbb
add
xor
mov
cmp
sbb
mov
jg
scas
mov
jns
or
loope
pop
pop
ret
jnp
mov
or
clc
scas
and
xor
lods
jg
pusha
les
jp
outsl
mov
outsl
sub
or
pop
mov
jne
loopne
loope
push
jo
and
cmp
and
addl
and
pusha
loop
inc
ja
jne
mov
repz
xchg
es
in
loope
fabs
mov
andb
out
nop
mov
and
jecxz
pop
mov
sbbl
lds
sbb
push
push
xchg
fidivl
pop
pop
push
inc
inc
repnz
jb
pop
dec
idivl
jecxz
jae
fstps
pop
ljmp
out
jnp
cmpl
pop
ljmp
lcall
mov
repnz
add
pop
fadd
lds
mov
fstps
mov
dec
fidivrl
icebp
aaa
pop
push
pop
xorl
add
outsl
add
aas
mov
andl
jg
outsl
loop
lock
js
scas
loope
arpl
sahf
pop
mov
pop
fs
sti
jg
sarl
mov
cmc
ss
xor
ss
pusha
mov
ret
bnd
lret
xor
arpl
cmp
sub
push
scas
js
pushf
jl
xchg
fwait
jg
and
push
loope
addr16
rorb
push
xchg
in
add
test
mov
adc
push
mov
cli
or
mov
inc
lea
notb
loope
add
and
xor
js
imulb
jmp
sbb
mov
stc
sbb
imul
vunpckhpd
in
add
cli
insb
loopne
cmp
imul
jno
out
jle
imul
push
aas
ret
mov
nop
mov
cmp
dec
mov
pop
out
addr16
loope
mov
pop
aas
popa
mov
adc
add
rorl
jecxz
sub
or
sub
and
lods
loop
popf
loopne
jecxz
ljmp
mov
or
jae
cmc
push
adcl
sbb
pusha
jae
or
sub
shrl
mov
mov
jae
or
fistpl
lahf
gs
cmpsb
in
sarb
inc
or
testl
push
sahf
pop
fcmovnb
push
ret
mov
add
icebp
mov
inc
ds
sahf
and
cli
jae
inc
les
dec
imul
scas
add
mov
bnd
cmpsb
jne
or
or
bound
arpl
scas
jae
clc
cmp
scas
andl
dec
js
lds
push
jno
jae
out
out
and
or
add
int3
lcall
dec
mov
in
lcall
cmpsb
in
jo
ds
test
pusha
pushf
arpl
mov
xchg
test
out
cmp
xchg
add
repnz
mov
adc
dec
sbb
pusha
rcr
jnp
cmp
mov
jo
lds
jno
pop
out
add
or
xchg
fsubl
xchg
add
and
and
jo
jg
jg
pop
in
inc
mov
icebp
xchg
out
adc
leave
and
mov
inc
nop
pusha
cmp
pusha
fdivs
or
lret
insl
call
fdivs
pop
shll
aaa
popf
push
mov
jp
loope
in
shlb
dec
arpl
jg
sbb
inc
inc
jmp
pusha
xlat
lods
ds
leave
sub
cmpl
xlat
sbb
jg
mov
sbbl
or
mov
lret
pushf
jne
xor
mov
stc
and
jecxz
mov
test
je
pop
mov
mov
sahf
and
icebp
push
clc
xor
xchg
mov
icebp
mov
lock
xchg
add
icebp
loope
and
in
pop
and
into
mov
stos
call
rep
adc
adc
mov
and
imul
gs
orl
dec
outsl
push
mov
xchg
fptan
iret
loop,pt
fiaddl
inc
in
sub
or
lods
xchg
xchg
ds
das
addr16
push
sub
fidivrl
dec
dec
ret
in
int
cmp
mov
jns
lcall
push
iret
jo
inc
mov
int
bound
std
mov
leave
jecxz
mov
xchg
mov
add
add
shl
call
mov
aad
inc
insb
xor
push
jecxz
pusha
dec
in
emms
popa
cli
movsl
mov
ja
data16
adc
shl
dec
jp
lods
pop
lret
sahf
jno
cli
dec
push
mov
repnz
outsb
adc
mov
je
xchg
mov
ret
fimuls
xor
je
rcr
mov
push
xchg
inc
pop
dec
pop
addr16
pop
fwait
sar
pop
in
pop
jo
outsb
test
stos
and
sub
mov
mov
xor
iret
cmp
jle
jge
imul
mov
outsl
mov
xchg
out
mov
incl
in
jp
xchg
dec
cs
mov
cs
and
jnp
pop
pushf
in
and
stos
xor
xchg
xchg
pop
jle
mov
dec
in
pusha
dec
lahf
sbb
push
sbb
in
dec
dec
clc
jle
jbe
lcall
hlt
enter
jl
fwait
xchg
out
adc
cmp
clc
jo
fwait
or
ja
fwait
push
and
pop
xlat
push
fwait
sbb
mov
movsl
push
fidivrs
xor
aad
pop
adc
push
cmp
add
inc
or
popa
xor
aad
outsl
dec
inc
push
add
cmp
and
out
filds
hlt
outsl
dec
jecxz
aaa
cli
aam
mov
out
bound
ret
xor
pop
cmp
xlat
test
aam
das
jnp
xor
data16
mov
sub
push
std
inc
and
lock
lahf
mov
mov
ret
and
sub
bound
in
jp
xchg
jns
cmp
mov
bound
or
jmp
sub
mov
cmp
xchg
jb
mov
out
sbb
daa
jnp
lahf
xor
ja
push
add
pop
bound
shll
jo
mov
sbb
inc
mov
cmpsl
push
jmp
mov
insb
mov
or
mov
outsl
mov
mov
outsl
jecxz
popf
outsb
add
adc
cmpsl
sub
cmpsl
adc
jb
mov
shll
testb
in
or
mov
lods
stos
push
mov
mov
js
stos
stos
jo
xchg
sub
add
fs
push
roll
ja
cli
es
sub
jp
jecxz
fsubrs
in
jecxz
stos
ret
mov
push
mov
stos
push
cmp
scas
les
fdivrl
jge
scas
mov
sbb
ja
fsubl
push
in
cli
repnz
mov
mov
ret
push
mov
mov
mov
clc
cmp
outsb
pop
jno
lock
xor
lods
pop
mov
jae
insl
xchg
cmc
loope
popa
jp
mov
outsl
pop
and
outsl
popf
cmc
jne
out
ja
outsl
sahf
pop
fcompl
cmp
ja
jge
jo
and
dec
jnp
mov
xchg
insl
and
icebp
sub
fwait
movsb
loop
dec
push
push
or
adc
adc
lahf
xchg
loope
xlat
ret
push
mov
insl
cld
fs
stos
mov
mulb
test
ljmp
fmull
outsl
xor
into
cmp
lret
jl
mov
inc
aad
xchg
mov
jg
push
frstor
out
pop
mov
lahf
into
ljmp
and
dec
pop
jecxz
stos
mov
aam
nop
fsin
in
inc
call
js
nop
fidivrs
push
shll
idivb
push
daa
lock
and
lds
push
or
mov
mov
dec
push
lock
mov
and
sub
out
mov
dec
nop
mulb
loop
dec
sbb
sbb
xor
insl
lock
imul
add
mov
mov
or
mov
rcr
mov
adc
inc
fcomps
enter
add
xchg
xchg
mov
or
int
xorb
icebp
outsl
ret
pop
mov
pushf
xor
int
lods
loope
movl
dec
ret
adc
insl
fs
mov
pop
pusha
jo
pop
or
fidivrs
mov
sbb
sub
cmp
push
lods
mov
jns
cmp
fnstsw
sahf
lret
mov
fxch
ljmp
cmp
and
iret
inc
nop
fistps
les
mov
std
jns
aaa
and
or
dec
xchg
add
mov
pop
mov
xor
sbb
jae
lock
nop
fs
js
push
xchg
int3
add
mov
xchg
repz
push
cwtl
and
mov
and
push
shrl
shll
daa
shl
and
lds
repz
lcall
nop
xlat
leave
pop
cmpb
nop
clc
mov
in
mov
daa
shll
scas
sub
in
ja
rcll
ljmp
cmpsl
loope
xlat
lock
mov
pop
inc
push
mov
xor
add
fimull
jne
outsl
inc
sbb
cmp
outsb
pop
stos
out
jg
inc
js
fldt
jl
mov
cmp
stos
inc
das
pop
icebp
jg
fcmovnb
adc
adc
jns
mov
js
out
in
pushf
dec
popf
mov
cwtl
xor
lods
jg
pop
fisttpl
stos
jo
inc
jl
fisttps
push
lock
ret
test
fbstp
popa
mov
cmp
xchg
xchg
jmp
cmc
xchg
arpl
xchg
jecxz
adc
addl
nop
mov
mov
shlb
ret
adc
jnp
test
je
jg
jp
fildll
scas
push
sbb
lock
subl
stos
ja
jecxz
ret
repnz
dec
jns
mov
cli
pop
cmp
mov
push
cltd
add
mov
repnz
xor
cmp
jne
loope
out
push
shl
aam
dec
aam
pop
loop
imul
out
loopne
cltd
or
lret
ret
lret
fistpll
fptan
pusha
cmp
cmp
loope
push
inc
jno
movq
fimuls
cmpsl
fdivrs
lea
mov
outsl
rorl
pop
fnsave
pusha
test
jge
or
ret
jno
xchg
cmp
adcl
cwtl
lcall
sbb
adcl
loopne
ss
jb
fidivs
loope
insb
xor
arpl
cmc
pmaxub
stc
clc
pop
arpl
jne
adc
adc
adc
jecxz
inc
or
inc
jmp
xor
push
fwait
jmp
das
pusha
and
js
and
push
ret
sarl
enter
sbb
out
in
jp
out
adc
ret
adc
insl
negb
cmp
push
xchg
mov
out
xor
icebp
adc
int
inc
outsl
mov
loope
int
test
jecxz
das
sbb
and
repz
out
dec
fnstcw
repz
push
bnd
lods
insb
outsb
or
dec
or
ret
pusha
xor
mov
cmp
and
inc
pusha
stos
and
test
mov
jg
clc
sub
adc
cli
das
js
or
jecxz
xor
xchg
mov
or
negl
xor
or
mov
loop
repz
dec
in
pop
sub
cli
idivl
loope
inc
sub
cmp
cmpsl
mov
sbb
adc
jge
lret
jo
sbb
push
jge
testb
cmp
pop
mov
mov
mov
cs
cmpsb
mov
cli
sbb
bound
xchg
lds
test
mov
in
push
ja
ss
xchg
lcall
loopne
lods
pop
dec
test
pop
mov
sti
dec
jo
xor
sub
push
scas
movsl
data16
sahf
mov
mov
pop
in
fsubrl
rclb
in
inc
call
popa
ret
add
pusha
xchg
movl
fdivrp
cmpb
dec
mov
lcall
mov
fdivrs
push
ljmp
daa
hlt
mov
adc
sbbb
lcall
movsb
cmpsl
lods
inc
lahf
adc
xchg
adc
sbb
scas
xchg
jge
pusha
mov
push
pusha
stc
ret
shl
andb
adc
jbe
cmp
add
mov
mov
push
xlat
mov
xchg
je
mov
adc
pop
xor
pop
dec
pop
adc
and
cmpsl
shlb
hlt
stos
add
mov
xchg
jmp
add
mov
adc
inc
jb
cmp
lahf
repnz
jmp
and
jecxz
ljmp
out
arpl
jmp
in
inc
std
jae
loope
out
test
in
jnp
xchg
cmpsb
in
sbb
faddl
add
dec
cmp
divl
xchg
fstl
push
lods
xchg
fisttps
out
adc
fistpl
cmp
inc
popf
sbb
ret
daa
xor
mov
lret
div
cs
xchg
push
jecxz
imul
icebp
icebp
fwait
fs
popf
xchg
out
push
mov
dec
adc
pop
movsl
sub
sbb
int3
mov
icebp
jnp
outsb
mov
xor
js
test
inc
push
nop
iret
leave
pop
add
daa
idiv
pop
mov
inc
ret
or
mov
into
mov
mov
mov
fcomip
lahf
roll
jp,pn
mov
shlb
daa
xchg
push
imul
filds
aad
jae
in
fcoml
xlat
or
xchg
arpl
scas
pusha
popa
sbb
inc
cmp
mov
fs
add
mov
mov
jmp
aad
xchg
xchg
mov
es
outsl
adc
lahf
repnz
fnstcw
lret
push
xor
cmp
icebp
pop
xchg
and
push
mov
lret
fwait
scas
cs
lret
and
push
ret
mov
icebp
mov
jle
mov
xor
filds
fcomp
mov
fdivs
xor
icebp
fbld
lret
and
hlt
pop
sti
jmp
jmp
bound
pop
push
arpl
ret
sub
incl
or
and
mov
add
call
pusha
or
ss
out
jmp
psubq
pop
je
mov
iret
popa
hlt
push
movsb
adc
shlb
into
jecxz
ret
pop
lock
jns
mov
hlt
andl
pusha
sbb
xchg
xor
cs
outsl
push
jbe
mov
xchg
mov
xor
push
inc
cmpsb
cmp
icebp
fldenv
and
fiadds
scas
fisubs
mov
or
loope
xchg
dec
jg
xor
ret
dec
add
loop
add
sub
sbb
xchg
idiv
add
ret
std
js
ret
scas
mov
jae
inc
jbe
sahf
lock
lds
cmp
jmp
lods
xor
sub
xlat
mov
push
jmp
pop
call
sbbb
cs
pop
ja
sbb
mov
jne
ret
sarb
jecxz
js
fisubrs
push
lret
dec
lcall
clc
fidivl
and
loopne
mov
out
testb
shll
fmull
aaa
pop
inc
sbb
adc
xchg
cld
loopne
cmp
ja
add
mov
push
call
mov
out
sub
sbb
pusha
stos
or
jo
push
and
add
lock
xorb
in
mov
repz
ret
ret
inc
and
or
aam
mov
lahf
xchg
jns
add
xchg
inc
stc
sub
push
loope
mov
and
loopne
sbb
pop
dec
cmp
cmc
push
test
fcmovnbe
pusha
and
test
mov
push
mov
mov
cmc
sbb
inc
mov
and
cld
push
add
int
sti
mov
repz
loopne
mov
inc
repnz
out
mov
xor
mov
mov
ret
pop
jge
or
fstpl
pop
std
pop
addl
in
popa
stc
fcmovbe
ficoms
pop
jmp
loop
inc
sti
and
xchg
add
loop
cli
mov
ljmp
sarb
jne
pop
movsb
cs
dec
or
call
ljmp
push
xchg
push
inc
mull
out
imul
xor
out
sbb
push
adc
outsb
jnp
xchg
in
xchg
leave
sub
int3
sti
jle
sti
test
lock
pop
and
dec
lahf
fisubl
push
jbe
fildll
adc
addr16
addr16
decl
xor
push
addr16
ret
cmp
shlb
mov
loope
push
sub
pusha
mov
fsts
data16
pop
arpl
lret
mov
sub
add
lahf
bound
lret
repnz
jp
aas
mov
in
cltd
sarl
or
bound
out
jb
jge
lods
inc
push
outsl
sub
push
stos
int
je
sbb
arpl
jg
in
add
and
addr16
lahf
push
add
fstpt
fidivl
inc
ret
mov
sub
pop
icebp
jecxz
mov
cmp
in
sbb
out
pop
and
inc
out
arpl
cld
pop
dec
flds
loop
dec
push
dec
add
cmp
sti
mov
push
loop
test
cld
in
repnz
and
dec
and
ret
int
ret
jno
fsts
insl
cmc
jo,pt
sarl
pop
stc
mov
mov
or
pusha
mov
mov
cmp
add
sbb
loopne
fbld
add
lea
sti
jecxz
mov
cmpsl
mov
imul
ret
pusha
fistpl
jmp
ret
repnz
subl
xlat
lock
push
sbb
movsb
mov
in
push
mov
or
cmpl
sarb
lahf
and
rep
mov
fstl
jecxz
test
bts
push
lahf
mov
mov
call
sub
jp
xchg
sbb
or
lret
or
sbb
mov
push
ret
xor
inc
xor
add
mov
iret
xchg
adcl
mov
or
cmpsl
aad
loope
rcrl
out
fdivl
add
mov
mov
incb
inc
xchg
lret
scas
cmp
jl
push
jmp
and
lods
inc
nop
sti
ljmp
sub
mov
lcall
scas
mov
out
dec
subl
pop
mov
xchg
sub
cmc
arpl
jo
dec
jmp
sti
xor
fldenv
ret
pop
xchg
jae
adc
jg
sbb
clc
stc
stos
shl
pop
ret
and
and
jmp
sbb
jnp
jmp
mov
ljmp
andl
pusha
std
outsb
fs
test
call
addr16
mov
push
shll
aad
sub
lahf
and
xrelease
mov
out
cmpsb
pusha
jle
sbb
lcall
ljmp
stos
push
push
or
aas
int
int
xor
inc
jp
mov
subl
sti
xor
xchg
hlt
mov
movsb
fucom
pop
insl
lahf
roll
loope
repnz
int
jns
notl
aad
shr
and
pop
loop
out
push
gs
jl
sbb
lahf
out
repz
xchg
mov
dec
inc
loopne
lock
out
and
xchg
jl
add
cmpsl
adc
mov
bound
mov
push
cmp
push
jb
sti
fildll
lret
sar
repz
sti
out
mov
loop
ret
jmp
jp
arpl
sti
jecxz
xchg
jnp
cli
testl
xchg
fildll
std
jae
out
jmp
outsl
pop
imul
jecxz
xchg
cmp
cmpsb
adc
fwait
push
xor
subl
mov
icebp
repnz
mull
pop
out
push
repz
xchg
dec
jp
call
inc
push
hlt
push
inc
incl
arpl
push
pop
mov
push
pushf
shlb
xchg
fbld
aam
in
jb
loope
insl
sbb
icebp
lahf
jno
xor
aaa
outsl
jae
jge
test
mov
xor
daa
std
or
or
push
aad
divl
iret
mov
xor
push
xchg
loopne
mov
mov
sti
imul
xchg
int
ljmp
andl
repz
int
adc
clc
sarb
aam
mov
jecxz
loop
jnp
mov
ror
jb
cmp
lret
pop
jecxz
inc
dec
repz
inc
push
mov
das
lock
inc
in
jmp
aas
ffreep
jo
lea
cmc
hlt
movl
mov
mov
nop
pop
incl
ja
shll
outsl
loop
push
lock
mov
inc
fstpt
ffree
push
clc
loope
jp
outsl
sbb
ja
jns
ficompl
push
lock
jb
add
mov
out
xor
repnz
xchg
or
xlat
hlt
push
orb
cmp
pop
pop
mov
xchg
fadds
shrl
cltd
mov
mov
and
outsl
add
out
push
jnp
mov
mov
ret
jb
jmp
xchg
in
cltd
int
test
xchg
les
jno
shrl
bound
inc
jecxz
push
cli
enter
mov
sti
icebp
adc
rolb
cmp
out
out
mov
gs
mov
mov
jnp
mov
sub
movsl
icebp
cmp
xchg
dec
cmc
call
mov
mov
es
scas
and
jl
pop
mov
dec
mov
sbb
loop
push
int
jb
movsb
repz
repz
inc
addr16
mov
push
ret
fmull
push
pusha
lock
and
jnp
mov
into
pusha
insb
mov
jmp
inc
jbe
mov
adc
cmpb
ret
stos
jno
jecxz
pusha
shlb
dec
out
mov
inc
pop
xor
int
sub
lds
loop
pop
roll
mov
and
fucomi
push
test
jecxz
sbb
aad
jecxz
insb
dec
xchg
sbb
loop
into
xor
dec
mov
adc
add
pop
push
mov
jmp
cmpsb
dec
pop
xchg
fmul
fcomp
pusha
xchg
inc
movsb
mov
flds
adc
pop
sbb
push
jecxz
bnd
gs
mov
lret
stos
div
mov
jnp
fstl
stc
fucomip
nop
inc
arpl
not
ljmp
inc
test
stos
mov
test
inc
clc
loop
int
xlat
inc
ret
add
pusha
push
loop
sbb
std
mov
cs
xor
movsl
mov
pop
test
pop
mov
inc
test
out
arpl
repz
out
jmp
or
jg
pop
loope
mov
clc
fidivrl
inc
mov
jle
mov
ret
inc
loop
pop
dec
cmp
cli
mull
fcoml
pop
repnz
xchg
or
rep
das
cmp
mov
add
jmp
xchg
pusha
loopne
xchg
adc
jl
push
inc
roll
push
test
mov
repz
mov
inc
mov
rorl
dec
loop
jb
jge
adcl
mov
pusha
mov
adc
push
rorb
int
add
mov
cli
aad
cmpsb
sub
add
in
loop
jl
lret
int
outsl
push
ret
pusha
out
jb
mov
stos
mov
pop
mov
lods
pusha
pop
mov
xchg
mov
and
lea
jnp
cwtl
ret
jae
push
dec
cmpl
adc
loopne
pop
add
cld
mov
sub
jae
push
xchg
mov
xchg
push
rolb
jl
cld
jae
xor
cmc
fnstcw
pop
cwtl
repz
ret
aam
dec
cmpsl
arpl
cld
or
jno
push
add
bound
jmp
xlat
shl
lret
cmp
or
pushf
xor
xchg
fimull
cwtl
aas
xchg
aaa
add
ret
jge
jb
adc
hlt
cs
hlt
adc
repnz
push
adc
popa
mov
fcmovnu
pop
sarb
xchg
incl
fstl
dec
cld
mov
mov
jg
pusha
jb
add
cmp
jge
fcmove
mov
je
mov
data16
int
add
jno
or
cmp
cmp
out
xor
dec
xchg
push
inc
ds
mov
nop
pushf
cs
jmp
add
pusha
lods
dec
dec
mov
or
lret
cmp
pushf
adc
rolb
sub
rcll
int3
adc
pop
fistl
mov
push
ret
jne
sub
cld
inc
iret
in
cs
fwait
sbb
mov
jno
jl
negb
inc
popa
jg
pop
push
sti
mov
insb
ss
fbld
filds
jp
jecxz
jno
bound
pop
mov
mov
xor
or
mov
jae
jmp
stos
mov
in
xchg
fdivrl
adc
rorb
mov
pop
test
dec
lret
iret
pop
cli
pop
psadbw
stos
addr16
adc
push
adc
add
cmp
push
imulb
ret
push
call
inc
xlat
loope
idiv
outsl
cld
and
lds
in
stc
insl
add
into
out
xchg
sahf
dec
pop
mov
mov
addl
add
sar
push
shl
repz
mov
aas
outsl
pop
jmp
lret
mov
fisubl
cmc
add
jg
fwait
mov
cs
cli
dec
fwait
push
std
dec
fcmovnb
add
pop
rorb
aad
mov
mov
pop
pop
add
xor
jb
add
mov
in
mov
sub
jg
les
mov
adc
popl
push
repnz
shrl
sbb
sti
mov
shlb
or
arpl
dec
add
repz
loopne
out
test
cltd
adc
stos
jae
fwait
int3
xlat
cmc
and
mov
or
ret
xor
lock
ss
pop
pop
xchg
ljmp
call
mov
pop
ljmp
das
mov
fnsave
jbe
adc
imul
fcmovb
mov
insb
mov
and
mov
cmpsb
int
cmpb
loop
and
ror
out
cmpsl
add
addr16
das
push
mov
xor
rol
in
xchg
cmpsb
aad
dec
mov
pusha
mov
xchg
adc
sub
shrb
and
adcl
jecxz
lods
imul
outsb
mov
dec
aam
or
out
sub
pushf
adc
xchg
lock
pop
sti
or
adc
add
jp
lds
push
cli
xlat
and
test
jo
fadds
sbb
insl
cmp
mov
int
dec
scas
inc
rol
subl
popf
sbb
jo
ret
pop
cmpsb
or
call
insb
out
loope
jno
stc
insb
inc
mov
inc
stos
mov
mov
clc
ret
loop
and
cmp
add
test
into
ret
std
js
inc
out
xor
lock
fimuls
or
pop
and
inc
and
push
inc
and
out
mov
data16
jae
stos
rcll
push
fs
xchg
push
xchg
jns
xor
mov
cwtl
movsl
outsl
cli
jl
cs
ss
mov
push
aas
daa
pop
pop
sti
pop
mov
mov
das
outsl
xor
push
jno
call
rcrb
jnp
cs
mov
adc
inc
sub
add
sti
test
mov
stos
fstpt
mov
daa
mov
into
scas
ja
loop
dec
ret
push
ret
decl
movntq
int
or
push
pop
sbb
out
stos
mov
imul
or
shll
pop
xchg
pop
imul
sbb
lock
dec
addr16
lret
push
pushf
fnsave
je
xchg
movsb
in
or
inc
jg
mov
pusha
sub
ret
cltd
pop
sub
pop
mov
hlt
icebp
push
cmp
rclb
jge
out
jne
fisubrs
cmpsb
jecxz
lcall
out
shlb
outsl
dec
ret
ljmp
arpl
mov
mov
xor
mov
mov
cmp
jle
sahf
out
popf
jg
pop
and
icebp
divl
cmp
repz
decl
push
std
loopne
cwtl
mov
xlat
nop
cmp
jge
fmull
ret
sbb
mov
xor
in
stc
jl
sub
ss
int3
pusha
push
mov
jno
mov
in
mov
into
and
sbb
mov
repz
push
mov
dec
adc
push
loopne
adc
adc
cwtl
divb
inc
cmc
jmp
pushf
cmpsb
xchg
dec
mov
pop
pop
mov
stc
mov
push
ss
sbb
bound
and
and
push
testl
cmc
add
fidivrs
jge
fimuls
push
dec
jmp
jo
mov
fisubrl
imul
out
jle
sub
adc
cli
test
xor
int
add
fwait
sub
std
sbb
ljmp
mov
mov
lret
jne
jg
mov
cmpsb
mov
cmp
movl
ret
pop
xor
mov
add
cmp
shl
sbb
cs
insl
jb
cltd
cmpsb
ljmp
mov
mov
out
lahf
fnsave
push
bound
shll
ret
dec
inc
ja
dec
inc
cmp
dec
dec
ret
xor
and
loop
bound
sub
cmp
adc
push
ret
loop
icebp
nop
mov
jmp
cmp
and
cmp
cmp
jg
add
pop
jg
bound
xor
jmp
lret
mov
iret
leave
hlt
xor
rcrb
sti
cmpsb
xor
mov
stc
out
shll
arpl
and
jmp
out
outsb
in
mov
inc
call
inc
shll
daa
scas
and
arpl
mov
mov
sub
push
pop
call
loop
lahf
aam
push
cmpsl
push
scas
loopne
jmp
add
pop
push
in
push
add
mov
push
pop
add
leave
in
sbb
mov
pop
cmpsb
scas
popf
xchg
mov
test
adc
leave
push
stos
repnz
push
shlb
pop
out
pop
xor
dec
ja
add
xchg
push
shl
add
ffreep
pushf
fwait
xlat
jp
jae
push
popa
adc
mov
popf
mov
lahf
into
add
ret
push
fisubs
and
addl
push
fwait
mov
xchg
mov
or
sub
or
and
stos
cmc
pop
daa
ret
imul
fstps
stos
lods
xchg
mov
hlt
int
add
insb
fstl
xor
xchg
sar
ud1
orb
mov
stos
scas
hlt
xorl
lods
xorb
mov
mov
xchg
adc
cmp
pop
xorb
and
int
sbb
std
lahf
ret
adc
lock
insl
ret
addr16
xlat
arpl
sti
mov
mov
mov
scas
lret
adc
sub
cmc
fnstsw
lret
and
out
sbb
jnp
in
inc
push
and
shrb
cli
xor
and
lret
add
ret
or
pop
jmp
push
sub
fisttpl
stos
bound
adc
and
cli
add
fwait
dec
xchg
jp
js
cwtl
cmpl
rcll
jno
lods
jae
xlat
jns
iret
pusha
dec
xchg
aaa
pop
imul
fucomp
adc
ret
imul
shlb
jge
jecxz
in
fisubrs
pop
ja
aas
call
push
ret
cmpsl
adc
repnz
clc
imul
stos
adc
push
xchg
mov
loope
ss
jge
repz
inc
and
lahf
or
mov
sub
sbb
jle
inc
loop
mov
cmc
data16
add
sbb
loopne
addr16
aas
mov
loop
jecxz
loope
gs
xchg
or
fcoms
jg
add
loop
ret
int
mov
pop
ret
sti
std
cmpsb
sbb
in
jg
pop
mull
xorb
ret
and
ret
pusha
ret
nop
stc
jle
add
int3
cmc
mov
loop
pusha
sbb
jl
push
lret
mov
bound
push
in
cmc
fistps
and
mov
movsb
cmc
call
jl
pop
fidivl
out
sub
lret
bound
pop
pop
hlt
negl
push
popa
adc
adc
movsb
dec
addr16
cmpsb
out
mov
out
int3
idivb
push
jp
xor
bound
mov
shll
ljmp
add
jge
cld
inc
jae
and
push
push
hlt
adc
pop
out
pop
std
loop
movsl
int3
lahf
and
ret
dec
test
aaa
repnz
aas
in
mov
sti
test
xor
jle
xchg
dec
lock
cmp
lea
orl
shlb
push
iret
jnp
cmp
int
inc
and
scas
fwait
rol
scas
adc
repz
mov
cs
repz
repnz
and
repz
sub
lcall
in
jecxz
or
mov
xorl
ljmp
xor
and
adc
add
push
repnz
mov
pop
outsl
mov
mov
pop
xor
cs
sub
arpl
and
rcl
mov
ret
insl
xchg
pop
add
add
lods
sti
icebp
pusha
pop
push
fwait
xchg
sub
or
in
popa
movsl
not
ss
mov
not
mov
jecxz
mov
fists
push
and
inc
test
jecxz
int3
rcrb
mov
arpl
jmp
mov
adc
sbb
pop
adcl
arpl
xlat
aaa
cmpsb
inc
mov
cwtl
pop
jno
xor
lahf
and
mov
cli
adc
movsl
jb
pop
dec
lret
sub
in
repnz
add
ja
pop
and
cli
loop
hlt
clc
jg
scas
and
loopne
bnd
mov
clc
jnp
xorl
mov
fdiv
mov
xchg
fisttpll
xchg
out
pusha
aas
sti
aas
gs
sbb
cmp
inc
cmp
and
jb
and
cmpsl
xchg
pop
cld
pop
jae
fbld
xor
xchg
call
mov
xlat
stos
xor
xlat
cli
xor
shll
inc
jb
jnp
ret
inc
push
loopne
leave
mov
fcomps
cmp
xchg
jg
fadds
loop
mov
jae
sti
lahf
scas
ret
sarb
adc
ret
push
loope
arpl
push
ljmp
mov
mov
cmp
and
pop
or
sti
mov
scas
out
repnz
iret
sub
sub
push
jg
repz
mov
push
out
fiaddl
push
adcb
pop
aam
outsl
enter
xchg
mov
fidivrs
dec
mov
and
popa
xor
jno
ja
mov
cltd
lcall
loopne
fsubrl
repnz
mov
aas
xor
xor
or
and
call
jae
ficoml
mov
or
aad
mov
fsubr
dec
fcmovnb
mov
addr16
sti
adc
mov
inc
dec
push
in
mov
xchg
rolb
shll
sbb
mov
stos
pop
clc
dec
enter
sub
sbb
clc
inc
and
pop
ret
mov
pop
dec
iret
loop
jmp
jb
int3
les
js
and
xor
cs
pop
jne
or
imul
ret
test
shll
out
fcomi
jns
cwtl
and
loop
stos
jmp
dec
sub
repnz
cmc
push
sub
jecxz
ret
lret
loope
jg
cmp
xor
cmp
jle
sti
push
testl
xorl
loopne
jmp
jge
ret
jae
data16
lods
repz
mov
popa
notb
inc
cld
push
out
outsb
cli
add
lods
inc
imul
test
fcmovnbe
int3
std
fmull
adc
rcr
cmp
lock
stos
les
sbb
ljmp
sbb
pop
imul
xchg
aas
cltd
or
dec
mov
ret
fbstp
add
mov
adc
loopne
shl
aas
mov
jl
sti
movsb
icebp
shlb
repnz
sbb
loop
and
pop
fildl
pusha
outsl
mov
rorb
and
xor
mov
dec
pop
xor
lods
and
lcall
loop
bnd
mov
aad
pop
inc
repnz
mov
cmc
add
push
mov
fldt
jno
pop
lock
sub
jnp
adc
fcoms
xchg
mov
mov
jl
out
add
ljmp
outsb
jge
sbb
jecxz
fistpll
dec
movsl
mov
jb
roll
jmp
mul
push
mov
popf
sbb
mulb
mov
mov
imul
xchg
imul
add
xor
xchg
mov
or
rcrl
xchg
pusha
lock
mov
lea
addl
lods
mov
rolb
adc
mov
adc
outsb
lret
or
xlat
pop
mov
mov
jbe
jns
add
faddp
popf
scas
fildl
bound
or
daa
subb
inc
push
pop
push
mov
sti
lea
out
mov
sahf
lret
push
adcl
pop
aas
push
sbb
dec
test
push
mov
andl
adc
fucom
adc
mov
into
repz
mov
mov
sti
enter
jle
addr16
int
test
jg
scas
lods
xlat
insl
mov
arpl
and
jb
add
pop
xor
lea
pop
pop
out
aaa
gs
push
sti
sub
fisttpll
push
arpl
mov
inc
repz
xor
jmp
or
push
jecxz
xor
cmp
add
enter
mov
fcmovnu
mov
mov
cld
imull
fistpl
popaw
jg
cmp
push
jnp
aaa
fistl
lods
jge
mov
and
sbbb
pop
aam
dec
mov
pop
cmp
sub
andl
negl
jmp
jmp
mov
std
pop
inc
test
dec
jne
jecxz
mov
lods
xor
mov
mov
mov
pusha
xchg
das
mov
xor
sub
add
das
push
mov
andl
inc
fiadds
xchg
ss
mov
pop
adc
notl
cmp
inc
call
mov
and
rcrb
jnp
shll
jb
adc
dec
ja
dec
fwait
add
rcll
lahf
and
mov
dec
lret
fdivl
scas
cmp
call
mov
xchg
lret
shrb
out
push
and
dec
lea
cmp
jb
push
daa
mov
sti
nop
rcrb
cmp
iret
jmp
leave
test
xlat
cmp
lcall
aam
lcall
adc
and
stc
and
mov
mov
enter
stc
xchg
mov
add
pop
push
leave
sti
mov
sub
adc
xor
jmp
cld
mov
shrl
jg
cmp
jae
mov
sti
flds
pop
push
fistpll
stos
xor
cmp
ljmp
pushf
push
rcr
sarb
imul
hlt
icebp
dec
mov
pop
mov
mov
sub
leave
push
faddp
mov
inc
loope
cld
pop
jp
lret
add
pop
jge
cli
push
lock
pop
scas
add
mov
dec
inc
popf
scas
arpl
cli
and
aam
cmpsl
pop
jb
mov
push
ret
rcrl
rolb
test
sarb
addr16
frstor
aam
xor
int
in
mov
push
arpl
mov
or
push
outsb
pop
xchg
repnz
jmp
mov
or
shl
jb
dec
mov
push
out
jp
xchg
fistpl
xchg
clc
jg
push
push
aad
repz
xchg
pop
sbb
mov
sub
inc
ljmp
jnp
cmp
xchg
sub
and
dec
add
cltd
loop
mov
jnp
repnz
jnp
inc
repz
loop
loope
cmp
cmp
fsts
popa
les
cmp
sub
stos
and
xchg
mov
loope
and
loopne
int
cs
pop
lods
lcall
aam
fldt
sbb
out
jg
ljmp
xchg
loop
mov
ljmp
aaa
call
repz
loop
or
cmp
or
bound
push
pop
lods
inc
adcb
jo
dec
inc
std
out
call
aas
mov
test
jne
leave
fucom
imul
cmp
cmc
daa
pop
jno
mov
inc
fcoml
stos
fcoms
cmpsb
imul
mov
add
stos
fsubrp
mov
sbb
js
mov
not
dec
mov
xchg
add
rcll
mov
cld
or
enter
adc
movsb
std
mov
and
mov
xlat
mov
mov
outsb
push
sub
xlat
pusha
mov
icebp
out
test
mov
push
mov
mov
mov
fcoms
add
adc
leave
mov
dec
loope
sub
repnz
mov
jae
repnz
sub
lock
and
add
rcrl
iret
lods
add
pop
shl
pop
and
inc
push
add
orb
jns,pn
mov
pop
jecxz
outsb
dec
pop
xchg
pusha
inc
mov
xchg
std
stos
andb
xchg
clc
add
xor
out
xlat
in
or
aad
movsb
xlat
cmpsb
test
add
aad
jae
loope
lods
dec
adc
cmp
iret
pop
cmpsl
or
dec
jge
popf
lea
mov
xor
lock
aad
xchg
ret
pusha
and
jb
ja
adc
lret
cli
xchg
daa
ficomps
cwtl
lcall
stc
out
jb
adc
push
add
adc
jp
rorb
ret
gs
mov
ret
sti
push
jg
ror
xchg
mov
push
pushl
lea
aas
je
xor
repz
inc
mov
sub
andb
movsb
testl
imul
jnp
mov
js
or
lods
cld
fdivrp
jl
les
aaa
imul
popl
in
inc
jg
ljmp
dec
jge
xchg
ret
leave
scas
icebp
test
std
ret
inc
lret
jge
incb
stos
push
in
and
or
andl
rclb
mov
pusha
ss
jmp
cmp
adc
lods
stc
mov
inc
es
jg
or
add
aas
in
sub
mov
jno
mov
idivl
data16
loopne
jecxz
ret
cmp
js
inc
ljmp
xor
lods
add
mov
xlat
loop
shr
adc
push
jge
add
and
or
push
rolb
loop
cli
int3
sarb
cmp
cmp
in
or
imul
int3
add
mov
sub
mov
in
mov
popa
jp
xchg
or
call
sub
sbb
loope
dec
mov
scas
subl
hlt
loope
nop
pop
mov
scas
lea
loop
pop
mov
or
clc
lock
movsl
sbb
int3
notl
popf
xor
iret
xor
roll
jmp
sub
sbb
cmp
sbb
sub
mov
gs
dec
ffreep
popaw
jo
shr
sub
ficoms
out
or
mov
pop
int
mov
sarl
jp
mov
ret
or
pop
mov
xchg
xchg
lret
shrl
xorb
jno
iret
jmp
dec
jecxz
push
jb
repnz
pop
jns
mov
and
mov
in
subb
fucomp
lcall
out
pusha
movsl
adc
leave
xor
inc
cmp
lahf
shlb
inc
sub
jno
lods
jle
xchg
pop
mov
lcall
shll
int
shrl
js
shlb
and
push
pop
push
lods
and
lds
xchg
hlt
jmp
inc
rol
ja
jo
push
mov
rcll
cmp
ficoms
lods
dec
test
adc
in
sbb
repz
dec
pop
jmp
out
xor
int
mov
fwait
jmp
lret
mov
pusha
xor
hlt
mov
cld
mov
addb
jne
pop
xchg
in
fbstp
jecxz
jo
mov
repz
fwait
pop
incb
or
inc
add
clc
mov
pop
jp
mov
and
imul
ljmp
cmp
xor
aam
sub
sub
ret
lret
or
push
push
mov
xchg
adc
mov
sbb
mov
xchg
push
cmp
pusha
test
pop
xchg
loope
pop
push
cmc
push
out
xchg
lcall
pop
insl
mov
iret
xor
sbb
addr16
fcoml
out
cmpsb
iret
lret
cmp
push
xor
dec
mulb
ja
push
sahf
pop
pop
pop
xor
shll
mov
mov
or
insl
dec
adc
mov
rcrl
mov
in
imul
std
es
ficompl
xchg
ret
cmp
mov
push
cmp
inc
bound
mov
in
shrl
fiaddl
mov
pop
pop
pop
xchg
loop
xor
mov
lods
and
mov
xchg
lods
inc
jns
cmp
mov
sub
adc
xor
jecxz
loop
sti
pusha
push
mov
inc
pop
data16
out
or
mov
and
mov
hlt
pop
aaa
cmpsb
xchg
sub
pop
fwait
lcall
shr
je
faddp
data16
sub
mov
arpl
cmpsl
mov
stos
bound
mov
pusha
ret
and
mov
adc
adcl
incb
sub
repz
call
rcrl
xlat
mov
cmp
cmp
cmpsl
ljmp
arpl
movsl
add
pop
mov
sti
icebp
push
enter
xchg
mov
popa
rolb
movsb
cmpsb
test
mov
adc
fsubp
adc
push
mov
in
sahf
scas
jg
jecxz
daa
pop
cmp
icebp
cld
xor
push
es
movsl
mov
loope
lock
dec
add
popf
addr16
xchg
fs
icebp
xor
mov
sbb
pushf
scas
les
sbb
iret
in
xchg
ret
lahf
adc
ret
aam
mov
mov
jmp
loope
cmp
jecxz
jno
lock
xchg
aas
cmpsl
loope
fiaddl
mov
mov
popa
lock
cmpsl
jecxz
js
fisttpll
fxtract
shl
arpl
test
bnd
aad
sti
sti
jecxz
mov
stc
mov
inc
jb
mov
mov
inc
mov
sti
mov
scas
xchg
icebp
hlt
inc
dec
inc
mov
stos
xchg
and
or
sub
sbb
add
xchg
sti
mov
out
add
andb
insl
inc
frstor
mov
mov
arpl
icebp
pusha
sbb
mov
sub
addr16
and
std
icebp
xor
lahf
ret
inc
push
dec
int
push
adc
xchg
cltd
lfs
out
addr16
cmp
daa
fcomi
pop
int3
jp
and
xlat
not
mov
fistpll
out
dec
mov
fbstp
mov
aad
xor
mov
mov
ds
pusha
int3
pop
stc
into
push
hlt
sahf
sbbb
dec
or
div
and
mov
xchg
mov
fs
stos
fisubl
mov
out
dec
jae
aad
test
sub
pop
loop
ljmp
xchg
hlt
cmp
ret
mov
mov
mov
not
cli
add
call
inc
cmp
cli
mov
imull
jmp
or
repz
mov
dec
or
fisttpl
xchg
jecxz
cmp
pop
sub
fstpt
out
pusha
sbb
add
stos
aad
stc
mov
jmp
rolb
mov
repz
inc
sti
aas
push
fsubl
inc
out
psubusw
push
stos
mov
mov
movsl
insl
icebp
lcall
fisttpl
out
pop
pusha
mov
loope
clc
pop
mov
push
push
loopne
lahf
repnz
psllw
and
push
ret
sbb
cltd
or
sti
out
xlat
icebp
lahf
jle
push
ret
jge
xchg
cmp
jecxz
outsl
cmp
lret
add
aas
adc
sbb
andb
jge
sub
mov
ss
and
out
xor
mov
inc
add
mov
lret
xchg
fwait
push
add
xlat
jg
jno
outsl
xor
pop
clc
mov
pop
jmp
inc
sbb
aas
scas
data16
jecxz
arpl
sbbl
xchg
decb
pop
out
clc
mov
push
mov
adc
mov
jno
out
divb
stc
dec
jno
aad
mov
nop
mov
inc
jno
add
lahf
sbb
ljmp
fldl
pusha
push
and
mov
pusha
mov
cs
loope
ret
in
pusha
outsl
jle
xor
popf
sub
and
adc
shl
fcmovnb
adc
loopne
dec
loope
loopne
mov
xor
les
aam
outsb
shl
pop
subb
xchg
je
pop
cmpsl
pusha
fiadds
out
inc
jns
lods
push
pop
stc
insl
ret
mov
adc
sarl
xchg
ret
fldl
sbb
mov
inc
push
xor
cmp
sbb
fisttps
loop
fldcw
adc
inc
inc
lock
xor
add
lock
mov
mov
repnz
test
jp
adc
or
nop
lods
leave
icebp
jns
scas
sbb
and
test
mov
hlt
jge
ror
jmp
mov
xchg
xchg
fisubl
fcmovu
loop
popf
aad
or
mov
pop
jge
and
dec
arpl
cmp
lds
adc
rcr
xchg
add
mov
in
mov
pop
fidivl
shlb
outsb
pop
stos
leave
jne
or
jae
loop
mov
add
into
gs
rorl
rolb
outsb
pop
loopne
dec
test
push
push
mov
mov
xchg
inc
pop
mov
pusha
fcoms
pop
stc
es
mov
fisubl
mov
add
sub
aad
pusha
adc
lret
cmp
fsubrl
addr16
add
lahf
xor
js
jmp
fnstcw
aas
mov
and
rcrb
mov
sahf
adc
repnz
xor
outsl
sahf
clc
mov
lahf
sbb
test
xchg
cmp
inc
into
jecxz
faddl
out
xchg
mov
jmp
test
adc
sub
movsl
sub
fdivp
push
fistps
push
or
pop
push
shrl
cmc
push
xor
jne
incb
jp
insb
jp
mov
pop
mov
loop
roll
lcall
cmc
push
adc
mov
ret
and
je
and
imul
sub
cwtl
xchg
sub
lret
inc
test
test
rol
mov
js
jo
xchg
jge,pt
mov
aas
ret
mov
shll
mov
adc
cmp
pop
dec
mov
fsts
cmp
in
shl
mov
sbb
repz
jnp
in
mov
push
loope
test
addr16
popa
dec
inc
cmc
fimuls
ds
stos
cli
inc
cmp
adc
arpl
ficompl
shlb
cmp
stos
xorl
sub
dec
mov
xor
leave
adc
xchg
daa
push
mov
mov
adcl
std
jl
cmpsb
cmp
xor
or
adc
outsl
push
arpl
sbb
inc
outsl
bound
loope
inc
notb
sbb
jecxz
call
cltd
mov
scas
xchg
pusha
insl
hlt
shl
xor
pop
jae
std
sbb
orb
ljmp
fcomps
xchg
cmp
addb
bound
dec
push
shll
jae
sbb
and
add
jecxz,pn
test
or
fistps
add
ret
ljmp
inc
inc
push
rcr
sbb
call
pusha
fs
jge
push
out
push
mov
leave
push
push
jns
popa
jp
mov
xor
mov
jnp
fdivr
xlat
cmpsb
rorl
imul
and
cmpb
bound
imul
sub
in
xor
pop
shl
cld
cwtl
mov
aam
mov
test
jo
jecxz
and
pushf
fcomps
mov
imul
mov
shll
repnz
ds
into
cmpsl
pop
leave
imul
in
sub
stos
test
shll
fldenv
push
or
or
lea
pop
scas
push
jne
into
jb
push
cmp
scas
mov
jns
pop
fwait
xor
cmp
out
mov
js
pop
xor
leave
in
and
outsb
dec
fwait
xlat
push
addr16
pop
and
scas
jp
fsts
test
pop
ljmp
popa
mov
fimuls
push
lahf
cmpsb
xchg
mov
xor
push
outsl
mov
aas
flds
lods
jg
fstps
jmp
mov
fnsave
aam
pop
ljmp
jecxz
push
add
inc
stos
mov
fisubs
sbb
cwtl
jg
leave
inc
adc
lcall
mov
loope
inc
lock
mov
in
jle
stos
bound
or
pusha
out
adc
shl
mov
ret
xor
mov
inc
icebp
jl
cmp
pushf
dec
lcall
iret
or
test
adc
bound
mov
and
sub
jp
add
mov
jo
iret
pusha
sbb
push
lcall
jne
fcom
add
jmp
mov
pop
mov
stos
or
std
jo
faddl
mov
test
jno
dec
ret
sbb
fwait
sti
adc
out
out
xchg
or
lock
stos
movsl
jb
jg
repz
cwtl
cmp
test
sarb
mov
mov
fstp
add
movsl
jge
mov
ret
jns
push
jp
dec
push
lahf
int
cmp
fcmovu
out
pusha
mov
arpl
mov
lcall
sbbb
sarb
push
mov
mov
loop
imul
push
fidivs
mov
push
xchg
mov
arpl
push
loope
mov
test
add
push
lea
mov
pusha
mov
pop
int3
push
inc
int3
ljmp
mov
xchg
mov
cmc
and
cs
mov
add
mov
mov
mov
jae
cmp
push
mov
jne
aas
fsubr
repz
dec
std
jg
rcll
test
cld
outsl
fwait
stos
hlt
insl
bound
in
inc
add
repz
icebp
sbb
mov
mov
mov
repz
fbstp
nop
daa
aaa
lock
ret
cmpsl
adc
shl
rorb
mov
test
ret
inc
pusha
int3
or
aas
loop
sub
outsl
loop
or
in
xchg
pusha
mov
stos
jo
dec
lret
cmpsb
push
cli
jae
ss
fucomip
out
gs
jecxz
js
ret
xchg
add
leave
mov
sbb
mov
jae
lret
lds
or
popf
pop
mov
lahf
cmpb
ja
cmp
pusha
mov
xor
jnp
orl
daa
or
inc
cmp
jno
mov
mov
inc
pop
jnp
sbbl
jns
mov
inc
test
push
movl
dec
aaa
mov
jb
cld
cmp
std
xor
lods
pushl
notl
repnz
iret
add
jae
loop
loope
mov
repnz
xchg
mov
push
inc
xchg
adcl
incl
dec
nop
inc
in
adc
inc
sbb
sbb
and
ffree
mov
call
idivb
cs
hlt
mov
loop
add
pop
aaa
int
add
repz
out
jb
cmpsl
push
inc
stos
lock
loope
cmp
add
fidivl
loop
pushf
add
cli
bound
pop
loope
adc
sbb
xlat
loopne
sbb
loopne
cwtl
cli
mov
lahf
add
mov
cmp
sub
jmp
std
cmpsl
mov
dec
mov
lods
pop
fisttpll
mov
pop
loop
mov
push
insb
lock
movsl
jno
push
fst
inc
mov
push
xor
loop
cmp
sbb
rcll
pop
dec
int
inc
stc
dec
mov
sahf
lods
sahf
fcoml
xor
add
mov
ret
adc
ja
repnz
xor
adc
arpl
mov
jnp
mov
mov
cmc
mull
outsl
ja
mov
xchg
sti
pop
fstl
movsb
pop
xchg
sub
loopne
or
mov
jo
jnp
subl
lods
ss
outsl
cmp
clc
adc
mul
lcall
into
jno
adc
scas
inc
adc
sub
fs
inc
xor
sub
adc
shll
outsl
add
nop
mov
shlb
or
pusha
lds
jmp
cwtl
pop
xchg
sbb
push
or
ja
and
sub
adc
mov
sti
int
lock
incl
cmp
mov
out
adc
jmp
out
jl
adc
stos
sub
sbb
mov
cli
xchg
xchg
scas
jecxz
mov
movsl
ds
pop
arpl
cmp
push
sub
mov
repnz
cmp
push
mov
dec
xchg
in
jl
ror
and
es
daa
ret
das
jecxz
pop
xchg
out
pusha
imul
push
loop
pop
sub
xchg
or
cmp
xchg
sti
ds
cmp
loope
xchg
imul
outsb
pop
fcoml
adc
lea
and
ret
ds
xlat
popa
push
cli
pushl
push
cmpb
and
ja
lea
pop
mov
or
add
sub
mov
xchg
pop
add
lret
cld
mov
fwait
lret
lahf
gs
jg
ret
push
loope
clc
in
divps
int
rol
stc
lods
mov
aam
inc
cli
pop
notl
mov
mov
jmp
lret
inc
test
mov
push
lods
loop
mov
js
lods
shll
test
outsl
hlt
mov
push
sahf
and
std
push
xchg
insl
mov
fdivl
xor
add
lods
iret
test
mov
fadd
loop
movsb
and
loopne
rcrb
cmpsl
out
and
clc
mov
jmp
pop
in
movsl
repnz
dec
or
mov
std
xchg
sbb
lret
mov
inc
or
into
in
mov
push
add
and
ds
xor
loopne
jb
fbld
loop
mov
dec
inc
aas
negl
bswap
push
jge
jnp
call
data16
xchg
jae
jmp
out
inc
mov
push
push
out
rcll
jg
cmc
pop
add
xchg
sub
jecxz
sarl
loope
into
cli
in
xchg
rorl
push
and
lock
jecxz
call
jl
fistpll
sti
mov
push
in
fisttpll
mov
outsl
and
insb
lds
jmp
jp
inc
fst
and
hlt
adc
jmp
jmp
and
outsb
xchg
adc
ffreep
mov
mov
mov
push
or
and
fwait
or
pop
pushf
fdivrl
lret
pusha
fwait
shr
lahf
xchg
mov
xor
xchg
jmp
jns
popf
ror
xchg
int
cld
cmp
adc
repz
out
mov
mov
dec
scas
stc
cli
aad
sahf
xor
cli
test
push
addr16
sbb
lret
testl
xor
jo
mov
ret
repnz
sbb
adc
pop
lea
dec
mov
sti
daa
mov
gs
pop
xlat
notl
jg
ret
pop
mov
pop
cmp
jo
adc
rorb
jmp
jnp
in
sbb
rcr
test
or
push
sahf
add
and
scas
mov
rcll
pop
cmp
push
pop
mov
dec
mov
jae
inc
outsb
ret
xchg
xor
les
repz
jmp
bound
out
in
negl
cmpsb
pop
and
leave
scas
rep
pop
push
dec
js
outsl
aad
fdivrl
in
mov
iret
cli
mov
repnz
lcall
insb
daa
mov
shlb
int
aas
push
cmpsb
lret
pusha
decl
fistpll
int
sub
lret
pushf
call
mov
clc
ljmp
mov
test
sarl
pop
add
mov
mov
cmp
mov
icebp
std
push
add
loopne
andb
cmc
push
push
pop
aaa
dec
inc
out
fstl
xchg
out
stos
pusha
filds
frstor
test
icebp
push
out
fldcw
mov
mov
loop
xchg
dec
insl
cmp
pop
dec
sarb
leave
insb
subl
push
movzwl
push
fistpll
repz
cmp
sub
pop
dec
ja
bound
pusha
popf
data16
sbb
and
pop
mov
and
and
mov
sti
jp
lcall
cmpsl
cmpl
int
imul
mov
pusha
outsb
add
bound
jl
pushl
arpl
mov
fstl
pop
ds
daa
jecxz
icebp
xchg
adc
popf
jnp
inc
jnp
pop
ret
mov
in
lahf
mov
pop
push
pop
dec
pop
idiv
xchg
outsb
insl
sahf
and
add
cmc
inc
lock
shll
or
int3
xor
dec
mov
cmp
aad
or
in
add
shl
cmpsb
inc
andb
jae
jmp
aaa
jno
fadd
mov
test
aad
test
push
pop
cmpsb
jae
push
dec
icebp
jae
push
mov
call
lods
mov
adc
add
inc
loopne
push
movsb
push
mov
sbb
imul
cld
out
inc
mov
xor
shll
stc
scas
pop
push
out
in
jecxz
pop
mov
neg
ja
cmp
add
mov
stos
sub
out
fidivl
gs
lods
xchg
jb
lret
adc
lods
mov
cmp
mov
fisubs
fucomip
popa
scas
push
test
cld
jmp
add
mov
ret
cmp
rolb
lods
push
and
jnp
xor
test
xchg
mov
mov
mov
stos
add
xchg
dec
ss
jb
jmp
repnz
or
jo
test
sarb
mov
dec
shll
adc
stos
jl
imul
pop
jp
pop
mov
jl
jb
sub
jmp
incl
aaa
hlt
out
lea
out
xor
stos
stos
popa
mov
mov
loopne
popa
xor
iret
push
arpl
xorl
dec
shll
ljmp
inc
pop
stos
cmp
push
cmp
loop
ret
loop
lret
pop
mov
pop
inc
stos
in
mov
sbb
mov
pop
push
inc
cmp
jmp
sub
testl
push
push
rol
test
mov
je
addl
mov
into
loope
cmp
loopne
out
mov
mov
in
into
in
mov
test
sub
pop
scas
jae
test
push
mov
pusha
testb
scas
jl
mov
outsb
mov
xchg
in
adc
test
ret
enter
lock
test
cmpsb
sbb
xor
roll
in
fdivr
inc
ret
rolb
stos
or
inc
data16
xor
adc
xchg
push
or
or
inc
sub
repz
pusha
inc
xor
icebp
dec
jp
addr16
loopne
aad
icebp
or
pop
adc
mov
mov
jecxz
loop
mov
sub
inc
jp
ljmp
icebp
add
aas
cmp
loope
jmp
push
fdivl
xor
jp
xor
push
jmp
loop
lods
add
cmpsl
lahf
fcoml
repnz
scas
sbb
mov
mov
ffreep
pusha
test
pop
arpl
xchg
out
pop
sub
add
inc
ficoml
and
out
cmp
aam
inc
inc
in
xchg
or
dec
lods
push
jecxz
ret
popf
dec
notl
xchg
cmpsb
fimuls
sub
int
or
fstl
dec
andb
xor
mov
or
dec
mov
jmp
xlat
xlat
out
cs
jmp
mov
lds
mov
rcl
clc
in
adcl
ret
xchg
jecxz
test
decl
loopne
jp
fildll
fidivl
mov
fadds
ret
ds
clc
pop
out
scas
shlb
sbb
lret
fdivrs
mov
adc
rorl
repnz
cmpsl
imul
int
add
mov
dec
inc
sbb
pop
in
adc
pop
outsl
aas
xchg
stos
and
fadds
arpl
inc
xorl
pop
rcl
jb
xorl
jmp
adc
popf
test
adc
sti
push
mov
jnp
sub
orl
insl
dec
insl
stc
push
ret
mov
jp
sbb
cld
sbb
rclb
bound
lods
sti
out
and
jmp
dec
push
add
lret
adc
jb
test
ja
jo
sub
mov
adc
jbe
lret
dec
out
mov
frstor
es
movsb
loop
xchg
aad
push
fwait
push
jmp
add
repnz
inc
pusha
aas
dec
mov
inc
cmp
data16
cli
mov
jecxz
pop
fcomip
mov
dec
lea
repz
mov
add
pusha
or
jmp
jbe
xchg
lds
leave
push
clc
test
jg
inc
icebp
push
fdivrl
jmp
subl
pushf
leave
or
fimull
gs
inc
cli
divl
jmp
xor
or
sarb
cmp
ret
test
movl
sti
mov
fwait
pusha
jp
xlat
int
dec
fisubl
das
mov
mov
ds
ret
sbb
cmpsl
subl
xor
fimull
xor
cmp
xlat
pusha
inc
scas
arpl
mov
iret
xor
add
frstor
lods
pop
sub
sbb
push
xor
sbb
xchg
jle
mov
pop
out
and
dec
and
xchg
mov
jp
sub
pop
aaa
bnd
xchg
mov
xchg
push
cmp
out
mov
arpl
mov
lock
fisubl
into
push
testb
jmp
add
mov
pusha
scas
xchg
rol
scas
fsubs
mov
xchg
jnp
push
jne
lods
jmp
inc
ret
pusha
cmp
mov
scas
gs
or
repz
adc
pusha
cli
xor
jg
test
jb
push
addr16
push
cmp
stos
mov
lcall
outsl
sahf
icebp
mov
sarl
pop
or
mov
leave
outsl
jbe
jb
mov
loop
fldt
daa
test
fmull
dec
dec
addr16
out
pusha
cld
repnz
jecxz
pusha
push
in
push
dec
xor
scas
jecxz
pusha
movsl
les
stc
jbe
loopne
fisubrs
roll
jl
and
out
sbb
jg
sti
repz
clc
xchg
mov
sub
add
and
pop
xchg
sub
dec
inc
jl
movsl
jmp
call
mov
sbb
adc
inc
push
pusha
mov
pusha
xor
dec
xchg
inc
cwtl
dec
sub
addr16
mov
adc
dec
and
push
pop
push
xor
jg
lock
mov
push
pop
lock
es
pop
cs
mov
jl
sbb
je
js
xchg
addr16
mov
inc
icebp
frstor
clc
inc
mov
adc
adc
rorb
sbb
jge
iret
xchg
add
jecxz
pop
and
cmp
push
lock
iret
sbb
xor
lods
in
add
pusha
fcmovnbe
repz
cmp
repz
xlat
jge
sarb
mov
repz
add
add
inc
sahf
inc
xor
out
jg
push
rcrl
es
mov
inc
pop
sbb
ja
pop
sub
adc
adc
jb
and
jbe
int
ljmp
popa
popa
mov
and
pop
push
js
add
scas
jmp
pop
sar
mov
cmp
push
and
mov
sbb
loope
gs
loop
xchg
out
xor
adc
xchg
mov
adc
mov
mov
jmp
mov
mov
mov
ljmp
pop
mov
xor
pusha
test
mov
mov
in
inc
add
dec
lcall
pop
cmp
mov
stos
outsl
push
mov
cld
fadd
jle
cmp
sti
stos
loopne
cmp
sbb
rclb
xchg
sub
sub
dec
lods
add
mov
in
or
loop
in
fcoml
pop
mov
cli
fiaddl
sahf
jmp
push
loop
test
mov
cli
subb
ret
xchg
test
aad
sbb
xchg
add
inc
cli
in
stos
lcall
pop
push
mov
pop
dec
jge
mov
cmp
cmpsb
ljmp
aas
jecxz
roll
mov
adc
cmpl
fisttps
movsl
mov
mov
push
adc
and
and
ret
in
cli
inc
sbb
mov
outsl
mov
lock
jbe
mov
movsb
pop
aaa
stc
sarb
mov
and
xor
sub
xor
ret
cmc
pop
enter
add
sub
fsubrl
push
cmp
lods
mov
xor
push
inc
fprem
adc
cmpsl
ret
repz
scas
mov
mov
sbb
call
or
inc
inc
ljmp
sub
cmp
xor
in
add
or
ficoml
push
push
xor
push
outsl
or
add
lahf
fwait
std
mov
jae
sbb
mov
cld
inc
icebp
jb
and
test
scas
jecxz
cmpl
inc
add
aas
pop
shll
js
sub
rcl
pusha
rorl
cmpb
dec
and
jbe
dec
sub
pop
add
cmp
xor
stos
rcrb
jae
sarb
aas
lcall
fstpl
adcl
dec
aam
aad
into
add
out
int
xchg
cmp
jb
pop
stos
push
cmp
inc
pop
out
imul
dec
jg
enter
lock
ds
jg
clc
scas
ds
cmpl
test
iret
ds
sbb
mov
mov
xchg
aad
ror
mov
dec
in
lret
pop
jecxz
mov
mov
xchg
mov
inc
lock
mov
call
out
andb
aaa
dec
out
push
in
push
jns
ret
mov
jge
sub
adc
ret
inc
xchg
loopne
lcall
test
jp
xchg
push
andb
cmp
mov
notl
sbb
out
add
fcoms
aaa
scas
mull
xor
push
shl
add
ret
pushf
pop
andl
xchg
ds
add
mov
jb
sahf
repnz
cli
and
push
pop
outsl
adc
out
mov
mov
xchg
xchg
aad
fisttpll
jo
repz
aam
push
ret
add
inc
test
or
movsb
out
inc
hlt
cmp
jmp
fistpll
push
std
out
pop
jg
out
fldl
out
je
cmp
dec
icebp
cli
xchg
arpl
mov
mov
and
lahf
fcmovnbe
pop
stc
insl
sbbl
sahf
pop
xchg
sub
mov
jb
sbb
mov
cmpsl
mov
mov
xor
call
xorl
lea
jle
add
cmpsl
dec
xor
sub
movsb
stos
cmp
mov
test
stos
aad
cmp
mov
stos
ss
pushw
dec
mov
test
mov
imul
mov
adc
xchg
push
lea
es
or
repz
nop
aam
imul
xor
add
mov
int
sub
mov
scas
xor
cmc
push
leave
mov
sti
cmpsb
int
mov
xchg
and
dec
xlat
loope
hlt
mov
jae
xchg
push
xlat
adc
out
mov
mov
mov
cwtl
fldt
mov
jp
push
mov
idivb
jae
cmpsl
pop
push
fcmovnbe
mov
lock
out
jg
xchg
mov
xor
div
push
xor
fists
repz
repnz
lret
dec
in
ret
out
and
fwait
ret
jmp
jp
push
sub
cmpsl
mov
ret
into
jo
cvttps2pi
and
cmp
cli
xor
inc
imul
call
pop
lods
sub
dec
mov
jb
sbb
or
sub
add
ret
cli
and
adc
lahf
push
ret
fldt
mov
dec
cmpsl
int
mov
fnstcw
jecxz
inc
pop
dec
mov
test
pop
movsl
js
loope
mov
mov
enter
lods
fists
nop
jnp
jge
sti
mov
lds
push
mov
jg
arpl
test
in
and
fistpl
mov
or
inc
imul
inc
cli
push
cmp
arpl
jmp
iret
cli
sarl
daa
xchg
repz
and
pop
mov
sub
sahf
add
jbe
out
ror
fcomip
imul
shrb
lods
inc
inc
jmp
in
jp
shll
push
fimuls
mov
mov
fnstsw
ljmp
icebp
inc
pop
mov
sbb
push
pop
ret
mov
shr
jg
roll
loope
shlb
pop
dec
or
and
cli
xor
jge
pop
mov
xchg
adcb
arpl
test
xor
int
ljmp
xor
inc
xor
ja
decb
out
xlat
or
roll
sti
pusha
xor
dec
arpl
icebp
fdivp
mov
xor
loop
daa
xor
dec
outsb
test
fisttpll
sub
cmpsl
and
mov
inc
lret
and
adc
add
imul
out
adc
mov
and
shl
imul
fistpll
inc
jb
lret
xchg
xor
pop
repnz
and
clc
xchg
fnsave
ret
and
int3
push
mov
cli
jno
ret
fstpt
sbb
ret
jg
inc
and
in
cmp
xorb
test
jae
dec
jnp
mov
stos
mov
pop
shll
dec
mov
mov
inc
add
lea
jns
cmp
mov
pop
shrb
not
data16
loop
lret
mov
inc
mov
jbe
pop
pushf
repnz
mov
call
mov
repz
jbe
orl
xchg
inc
push
test
je
out
daa
stos
mov
pusha
or
xlat
imul
ret
stos
movb
jb
fists
repnz
loop
out
icebp
push
mov
jecxz
shlb
push
mov
mov
fcmovb
lock
sarl
repz
leave
cmpl
icebp
repnz
mov
ret
xor
inc
hlt
daa
or
clc
and
sub
fbld
mov
std
jle
pop
scas
inc
ret
fcmovb
cmp
jecxz
jne
sbb
mov
cld
popa
xchg
cmpsb
aaa
add
jne
in
dec
aad
jb
inc
or
mov
repnz
inc
adc
ja
pusha
sub
xchg
or
jnp
loope
repnz
jecxz
es
lahf
ret
add
ret
push
add
xchg
sti
mov
cmp
jmp
sbb
or
sbb
ljmp
pop
jne
icebp
push
loope
shll
cli
mov
add
jl
jecxz
mov
xchg
outsl
pushf
popa
sub
push
lret
rcr
jle
in
icebp
aaa
mov
repz
cmc
cld
cmp
notb
mov
cltd
insl
lock
cwtl
clc
pop
add
aad
mov
js
sbb
lds
dec
pop
decl
bound
fxam
icebp
test
insb
call
loop
iret
cmp
jae
jecxz
mov
iret
rcr
sbb
js
sbbl
mov
aaa
out
xchg
icebp
popf
adc
fisttpl
mov
aad
loope
data16
in
push
test
aas
dec
out
repnz
hlt
sub
test
mov
int3
cmp
sti
mov
out
rcr
sbbl
mov
sub
jne
repnz
jne
mov
mov
popa
popa
mov
adc
mov
pusha
test
pop
pminsw
lock
jne
pop
push
cmpsb
lods
int
mov
push
repz
add
clc
cwtl
mov
mov
fst
lods
xor
cmp
lods
xchg
inc
ret
and
icebp
dec
fdivs
sbb
adc
mov
dec
mov
ds
mov
mov
or
add
scas
adc
ret
sub
pop
pop
xor
inc
jle
int
inc
or
add
repnz
testb
mov
out
aaa
xchg
cmpsb
pop
std
add
dec
sbb
scas
mov
call
cs
loope
mov
push
je
xchg
mov
bound
mov
jmp
adc
jae
mov
data16
fistpll
sub
movsl
push
add
lahf
add
xor
mov
orb
lcall
sahf
fists
sub
bound
inc
xchg
scas
in
std
push
add
adc
into
out
jge
ret
fs
test
call
mov
mov
pushl
sbb
pop
add
mov
repz
jle
lods
hlt
mov
icebp
scas
xchg
xor
addl
test
adc
lret
jb
ret
jns
mov
push
dec
jg
shrl
arpl
mov
iret
pusha
lret
mov
aam
lds
outsl
adc
je
ja
inc
pop
ret
mov
movsl
adc
bound
and
repz
call
js
test
xchg
stos
shld
mov
rcr
jns
pop
lret
aad
mov
test
mov
inc
pop
jno
xor
push
dec
pushf
xchg
dec
mov
dec
inc
push
and
mov
fs
jns
into
xchg
rcrb
sub
and
mov
mov
imul
popf
aad
loope
outsl
push
jb
shll
imul
and
movsb
xchg
notb
mov
ret
jle
xchg
insl
mov
mov
or
repnz
fstl
mov
jb
lods
xchg
sti
insl
xor
dec
imul
test
cmc
push
mov
xchg
or
lods
fldenv
ret
int3
aam
ret
pop
pusha
xlat
mov
mov
aam
mov
xor
pop
rcrl
pop
repz
lahf
mov
mov
out
daa
bound
dec
mov
mov
mov
add
clc
clc
daa
mov
xor
jge
xor
fs
cmp
lret
aam
lret
ffreep
cmp
addr16
dec
mov
jo
lret
pusha
fs
sbb
jle
addr16
scas
pop
repz
aam
sub
rcl
mov
xchg
mov
jmp
movb
dec
mov
pop
add
mov
push
cmp
cmp
sbb
js
dec
dec
xchg
idivb
repnz
in
dec
lret
mov
mov
lds
dec
jne
mov
push
fisttpll
pop
adc
mov
and
jecxz
jns
test
add
xor
int3
fisubl
mov
xchg
popa
xor
sarl
mov
cmc
idivb
cmpsl
jnp
xchg
mov
psubb
stos
cs
cmc
mov
mov
jp
not
js
jnp
mov
lods
mov
jecxz
adc
adc
int3
cmp
jmp
into
negb
inc
adc
lods
and
mov
cmp
out
or
js
jg
inc
lcall
cmp
arpl
sbb
mov
rol
xor
lret
mov
add
in
movsl
test
mov
hlt
mov
ljmp
lods
inc
add
mov
loop
fbld
js
xlat
ljmp
stc
lods
pop
in
cmp
repz
sar
ja
movsb
test
pop
stc
or
push
push
mov
lods
fiadds
cmp
sub
imul
xlat
push
gs
shll
push
popa
ret
xchg
dec
push
jge
mov
push
sti
mov
pop
and
and
push
pop
mov
fsts
push
fcomps
loope
aam
ret
fists
mov
leave
es
sub
mov
mov
inc
loop
shlb
stc
mov
dec
pop
or
jbe
cmpsb
dec
mov
xor
data16
sti
and
nop
and
fndisi(8087
outsl
in
popf
outsl
jp
stos
mov
cmp
mov
xchg
fbld
mov
adcl
mov
sbb
xchg
loopne
mov
jle
xchg
movsl
inc
xor
shlb
ret
cmpsb
jl
and
sub
roll
int3
xor
or
jp
pop
push
insb
sub
mov
jbe
sbb
enter
xor
jl
mov
jecxz
jg
inc
or
outsb
inc
loop
adc
imul
mov
mov
pop
xchg
call
repnz
mov
loope
jg
in
pop
js
mov
and
and
idivb
adc
scas
inc
jnp
xlat
repz
push
rcll
xchg
xor
adc
jp
inc
stos
mov
jle
cmpsl
dec
xor
sarl
mov
rcll
pusha
pop
out
jae
sub
sbb
push
cmp
sbb
mov
rcll
push
pop
ja
out
and
xchg
sti
fwait
push
cmp
loop
es
mov
add
imul
add
movsb
dec
and
std
stos
mov
mov
xchg
and
imul
xor
jecxz
add
addr16
mov
aam
jmp
push
pop
push
icebp
jg
pusha
mov
call
push
mov
pop
bound
fdivrl
fnstenv
pop
jnp
in
sub
cmp
push
mov
repnz
lock
mov
sub
and
pop
mov
and
ret
inc
jnp
out
xor
mov
daa
or
pop
outsl
inc
add
sbb
sbb
mov
inc
mov
push
imul
jmp
loope
stos
mov
outsb
ret
ret
imul
aaa
mov
clc
dec
cmc
sarl
in
mov
dec
lcall
fcmovu
xchg
rolb
loope
imull
sub
mov
pop
and
mov
pop
fsubp
pop
repnz
push
je
neg
das
out
jns
lcall
xchg
scas
cmpsb
sarl
shll
inc
xchg
lahf
mov
outsl
mov
mov
push
or
fucom
push
push
int3
outsl
clc
dec
push
xchg
add
mov
enter
decb
xor
cmp
jmp
sbb
dec
test
pusha
adc
mov
cmpsl
push
mov
xor
fcmovnbe
ret
jecxz
mov
inc
out
insb
or
cmc
pop
or
mov
push
ret
ja
icebp
movsl
mov
xor
mov
pop
and
pushf
push
fwait
xchg
fidivs
fisubs
pop
jne
lock
dec
stos
mov
mov
and
inc
cmp
or
cmp
sbb
or
fwait
mov
fcoms
dec
lcall
mov
outsl
inc
fistpll
in
jnp
pop
scas
jle
mov
out
jle
pusha
sbb
cmp
push
test
mov
inc
inc
in
imul
ret
mov
mov
add
enter
mov
loopne
jno
pop
xlat
jg
clc
push
repz
js
mov
mov
data16
pusha
repz
sti
push
movsb
popa
in
repz
icebp
loopne
pop
lds
cs
adc
sub
lret
jle
jne
sbb
ffree
pop
adc
jp
fiadds
and
enter
into
sbb
mov
and
js
frstor
cmpsl
fwait
pop
sahf
xchg
das
repnz
adc
dec
jae
lock
cmp
cli
pop
xor
xorl
js
sti
cmpsl
xlat
cs
pushl
test
inc
and
sbb
cmpsl
inc
lret
movsl
sahf
movsl
scas
andl
inc
dec
aam
add
pop
lea
es
mov
inc
stos
nop
sbb
scas
shl
std
push
lea
stos
in
mov
mov
sub
mulb
mov
push
xor
jae
pop
mov
shlb
push
sbbb
lods
scas
fwait
jns
jb
mov
mov
test
pusha
xchg
call
idiv
cmc
dec
or
clc
inc
inc
xchg
ds
cmc
push
andl
or
mov
lahf
jmp
mov
or
xchg
push
xchg
icebp
dec
pop
xchg
andb
popa
mov
push
lods
xorb
test
xor
shrl
cmp
xor
cli
imul
sub
clc
inc
imul
outsl
sahf
xlat
mov
inc
mov
ret
xor
movsb
push
pop
shl
mov
shl
sbbl
xchg
jg
and
lcall
mov
xlat
outsl
repnz
loope
fisttpll
arpl
loop
xorl
xchg
loope
loope
in
add
in
jmp
add
jbe
subl
or
subb
lods
sbb
push
shrb
add
inc
out
xor
shll
stos
dec
fidivrl
pop
push
scas
cli
cmc
sbb
div
jecxz
out
ja
imul
mov
jo
popf
push
pusha
lods
jae
enter
sub
sbb
adc
imul
jg
xchg
jl
ror
ja
jecxz
and
jp
and
loopne
pop
cmp
xor
frndint
rclb
xorl
fcomi
arpl
sbb
inc
lcall
jmp
xor
adc
xor
fsubrp
test
cmp
fcompl
out
adc
enter
sbb
mov
in
pop
inc
cmpsb
enter
inc
lods
insb
stos
mov
inc
fs
and
insl
out
push
in
int
ret
pop
jg
ret
int
in
ret
push
cmp
dec
aas
ss
xchg
in
out
push
add
xchg
cmpb
addl
add
xchg
jnp
mov
fldt
repz
arpl
jecxz
sbb
test
icebp
inc
add
and
and
sbb
push
cmc
leave
ret
ds
jg
cwtl
rol
divb
pop
add
jg
jecxz
fnstenv
clc
out
scas
bnd
add
jo
pop
fstl
fldenv
mov
cmp
loopne
nop
idivb
leave
jo
fcmovnbe
mov
mov
sub
cmp
inc
mov
rolb
aas
ja
inc
lret
jae
mov
out
pusha
jo
cmp
inc
bound
ret
cli
incl
mov
add
and
cmp
addr16
aas
stos
lret
adc
addr16
out
inc
cmp
pop
outsb
sbbl
xor
daa
jg
stos
cli
sbb
jne
in
negl
cmp
pop
ja
adc
repz
push
lret
mov
pop
inc
out
fwait
and
jns
adc
stc
ret
mov
nop
pop
mov
mov
add
xor
lret
cmp
or
xor
jg
jb
pop
xchg
sub
aaa
pop
int
jns
mov
mov
clc
xchg
lea
xor
cmp
inc
xor
and
jnp
xorl
cmp
icebp
jg
in
mov
jecxz
inc
scas
mov
and
dec
sbb
mov
mov
inc
xor
in
bound
xor
call
cld
fcomi
jb
jle
pop
bound
and
mov
repz
xor
jmp
js
scas
xlat
aaa
fadds
ret
mov
std
pop
pushf
inc
adc
jo
outsl
mov
cli
or
mov
ja
push
cmp
ja
adc
and
inc
rclb
mov
loope
cmpsb
lods
sarb
dec
lods
inc
push
lea
mov
leave
sti
mov
push
mov
out
into
fucomp
cmp
icebp
js
pusha
lods
xlat
xchg
or
ror
xchg
add
xor
adc
jmp
and
shl
xchg
mov
in
or
icebp
sbb
lds
cmc
pop
setno
or
mov
pop
repz
pop
test
push
repz
mov
pop
pop
adc
int
add
rcr
fcoms
fisttpl
inc
lcall
cli
sarl
mov
aas
xor
icebp
mov
push
push
push
mov
jl
gs
cmp
ret
add
sahf
mov
in
add
out
mov
loop
cmpsl
cmpsb
loopne
clc
mov
out
adc
pop
outsb
pop
aas
mov
push
adc
push
ret
xor
fnstsw
or
shrl
sarb
cs
icebp
mov
stos
ficomps
and
xchg
add
dec
ja
in
pusha
leave
sarl
cmp
mov
cs
out
int
adc
roll
fucomp
lcall
ficomps
adc
mov
inc
sti
add
pop
lret
push
ret
mov
xchg
mov
or
xchg
imul
ret
or
or
outsl
and
mov
repnz
sub
xchg
enter
ret
cmp
jge
lcall
not
and
in
sbb
loop
sbb
mov
push
mov
pop
pop
xchg
out
sbbb
lahf
jmp
jg
out
pop
cmpsb
lds
stos
xor
clc
cwtl
stos
bswap
pop
xlat
xchg
dec
mov
lret
jge
adc
dec
jl
sbb
pop
out
fisttpll
out
aad
add
jne
adc
mov
dec
stos
jno
ljmp
jne
sbb
and
into
push
repz
sbb
dec
jnp
add
jne
out
jecxz
shl
bnd
push
in
mov
pop
idivl
mov
dec
adc
xorl
arpl
inc
loope
or
repnz
loop
or
ret
mov
mov
cmpb
jnp
lahf
xor
adc
ljmp
mov
ja
add
shll
out
cli
mov
cmpl
popa
out
push
icebp
mov
repnz
and
hlt
scas
cmp
lock
pop
sbb
or
hlt
scas
jle
stc
jo
jb
xor
mov
pop
xlat
in
inc
rcl
daa
xchg
mov
adc
jns
push
loop
stc
mov
jae
nop
repz
cmp
popf
stc
pop
pop
pop
cwtl
mov
roll
ljmp
rep
mov
mov
mov
jo
mov
push
clc
push
stos
dec
cmpsb
mov
cltd
push
shlb
push
in
addr16
xchg
ds
cmp
or
xchg
hlt
cmp
or
mov
stos
xchg
mov
mov
push
xchg
push
xor
and
mov
sbb
pop
mov
test
in
mov
xchg
mov
inc
mov
pusha
int3
push
jmp
mov
sti
jp
icebp
push
dec
icebp
das
pop
clc
outsl
ds
pop
jno
repnz
jae
inc
jg
add
jecxz
push
aas
lret
stos
jmp
jecxz
cld
jae
push
xor
jg
scas
fistpl
iret
jne
bound
sahf
ss
loopne
adc
inc
sti
pop
loop
mov
xchg
fstl
cli
pushf
cmp
jne
loopne
ret
pop
clc
ret
aaa
xchg
mov
xor
imul
stc
ror
pusha
daa
inc
out
icebp
or
ret
ret
mov
push
ja
mov
int
or
pop
mov
xchg
nop
loop
fdivs
jae
movsl
and
jg
or
cmpsb
pop
adc
fdivrs
xchg
mov
scas
pushf
adc
jecxz
loop
lods
out
pusha
dec
mov
and
jno
inc
faddl
repz
xchg
sbb
ret
lods
jno
je
movsl
xor
inc
dec
sub
fisubl
lcall
mov
mov
pushf
and
or
mov
cwtl
xor
xor
jb
das
or
or
sbb
popa
icebp
test
push
enter
ds
ja
push
fdivrl
add
jne
stos
sbb
repz
xchg
sub
rclb
mov
fstl
fiadds
mulb
pop
pusha
xchg
sbb
test
call
int
pusha
nopl
rol
jb
dec
add
push
mov
jns
fwait
arpl
adc
and
push
jb
jmp
pop
sti
mov
scas
pusha
das
cmp
addr16
add
leave
jnp
mov
dec
cmp
std
les
push
rolb
xchg
add
push
ret
xchg
mov
stc
push
xchg
or
inc
fldenv
inc
cmpsb
jb
bound
mov
bound
sbb
stos
fstpl
mov
cmp
push
jecxz
inc
jl
andb
and
dec
mov
cmpsl
xchg
lods
insb
sbbb
pop
jmp
pusha
jg
inc
nop
add
std
outsl
in
adc
fwait
pop
lret
cs
jp
dec
jns
movsl
jno
shl
adc
in
jecxz
mov
popa
call
ret
addb
test
lahf
testl
inc
fstl
ret
jmp
movb
insb
sub
orb
push
mov
testb
sar
mov
jecxz
js
pop
gs
adc
xlat
stos
pop
into
das
cmpl
inc
stos
pop
out
ja,pn
je
mov
imul
or
jno
xchg
fndisi(8087
addr16
mov
lret
inc
test
rolb
mov
pop
lods
nop
and
push
or
mov
mov
jb
ret
ds
mov
fwait
rorb
adc
adc
jno
push
dec
loopne
loop
push
pop
cmc
or
push
out
or
jnp
in
fdivrp
outsl
adc
dec
aam
or
aam
scas
mov
mov
jmp
lock
and
filds
xchg
mov
mov
push
pusha
pusha
out
sti
icebp
mov
sbb
scas
es
xlat
mov
cli
xchg
pusha
pop
rclb
ljmp
jae
mov
dec
std
insb
inc
mov
push
outsl
or
xchg
jmp
add
jmp
into
mov
gs
ja
mov
clc
jae
bnd
add
push
lods
sbb
les
jecxz
imul
shrl
lret
mov
jb
pop
loop
icebp
stos
bnd
iret
lea
mov
clc
rorb
scas
adc
sahf
pop
call
add
out
jge
mov
ret
rorb
mov
imul
sahf
xchg
bound
push
jp
lock
daa
arpl
stc
push
sbb
and
cmpsb
mov
pushf
out
pusha
mov
idiv
test
and
mov
ret
jecxz
mov
add
jg
and
popf
fwait
push
enter
jge
aam
nop
popf
hlt
push
and
fbld
jp
add
das
aad
repnz
imul
push
xlat
inc
dec
outsl
cld
mov
repnz
ljmp
mov
jp
lahf
sti
in
add
dec
inc
sbb
andl
adc
sub
push
mov
push
gs
repnz
cld
or
loop
xchg
jae
jno
insb
add
xor
lods
jns
cmp
icebp
pop
xor
cmp
sub
std
mov
data16
iret
pop
ja
mov
sarb
mov
lods
pop
cmp
jg
movsb
jp
sub
adc
inc
test
cmpsb
subb
rclb
add
sarl
adc
mov
iret
mov
adc
pop
mov
sti
ja
cmp
jp
scas
test
out
xchg
jnp
mov
popa
mov
push
lahf
mov
ret
and
sbb
add
cli
lock
xor
jno
out
mov
nop
insl
imul
pusha
out
jne
fucomi
inc
ret
mov
loope
jb
jae
jne
rep
adcl
jle
shll
lret
jno
ret
out
jne
fucomi
mov
loope
mov
loopne
repnz
inc
fiaddl
repnz
dec
loope
sub
jnp
mov
jge
loop
lahf
fisubl
jnp
mov
xchg
jg
roll
push
mov
cmp
ja
mov
test
pop
aas
or
std
in
iret
xor
and
popa
adc
mov
cs
loope
rol
shl
in
mov
cmpl
jmp
ret
and
adc
add
out
clc
loop
lock
sarb
xchg
mov
xorb
pusha
loopne
repnz
jnp
mov
addb
repz
out
jecxz
shrl
cli
mov
mov
in
jae
out
imul
arpl
push
jnp
mov
negb
jg
ret
add
repnz
and
lret
mov
ljmp
jb
bound
mov
xor
mov
ficoml
aam
cmp
lock
jnp
sti
outsl
icebp
xchg
push
call
outsl
lcall
or
push
roll
loope
in
scas
int
out
aaa
rorl
aad
mov
ljmp
into
xlat
imul
jp
call
sub
shll
popa
jge
cmp
xlat
push
cmc
lods
sub
cli
pusha
add
fldcw
imul
imull
loop
outsb
ret
pop
jns
ficoml
addl
pop
scas
out
out
aaa
jae
imulb
out
hlt
cs
mov
inc
sub
xchg
lcall
add
mov
mov
fsubs
loop
loop
xlat
inc
dec
lock
mov
out
subb
shll
mov
push
xlat
jl
mov
out
jo
inc
pusha
fisttpll
sbb
inc
pop
test
cs
adc
pop
mov
daa
add
mov
pop
and
adc
mul
add
or
jmp
test
dec
adc
cmc
sbb
not
xchg
adc
faddl
cmpsb
cld
test
mov
cmpb
mov
pusha
and
or
mov
hlt
jne
lcall
cli
ret
xor
hlt
xor
pusha
xor
mov
iret
mov
pop
out
ret
loope
addb
jno
mov
sub
mov
jg
dec
repz
loop
lock
jp
xor
jmp
ja
je
push
sub
inc
mov
stc
pop
cld
rorl
xchg
cmpsl
scas
mov
sar
rorb
mulb
adcb
or
fistps
out
iret
mov
jge
cmp
adc
lret
pop
clc
xor
push
cmpb
stos
pusha
xchg
cld
mov
jno
fidivrl
mov
dec
jl
aas
push
mov
clc
push
test
lods
lret
in
cld
pop
xor
mov
jg
js
cld
lods
mov
and
nop
pop
dec
xchg
mov
lahf
ret
cli
xchg
test
scas
loope
adc
scas
mov
hlt
xor
mov
stos
jae
cmp
pop
mov
jb
jmp
bound
shrb
stos
xor
outsb
mov
push
cs
mov
cmp
pushf
pusha
xor
pop
adc
push
std
pop
and
mov
out
xchg
push
mov
lods
rorl
cmpsl
mov
sub
mull
add
and
ss
enter
ret
cmp
inc
push
stos
xorl
loope
sbb
stos
sbb
mov
cmpsb
ja
add
cmp
lahf
rcr
ja
addr16
iret
pushf
dec
dec
push
sub
outsb
and
pop
cmpsb
ret
and
mov
cmp
dec
aaa
out
bound
add
test
push
in
adcl
ljmp
pop
xchg
mov
insb
lahf
lcall
inc
sub
sbb
ret
add
out
adc
shrb
push
sub
in
pop
out
mov
sub
fisubl
test
loope
es
push
pusha
hlt
inc
fcmove
or
cmpsl
sub
mov
cld
jl
sti
sbb
mov
ret
sbb
cmp
mov
mov
jb
out
out
ljmp
insb
mov
fisttps
in
popa
mov
test
inc
xlat
ljmp
add
sbb
sahf
test
inc
repnz
stos
jg
fst
xor
mov
mov
mov
in
mov
addr16
stos
ret
mov
repnz
imul
mov
cmp
insb
jecxz
jecxz
in
push
enter
mov
aad
fmull
xor
sbb
push
lods
jbe
jecxz
jp
mov
lret
sahf
mov
push
aad
lahf
and
adc
mov
xchg
xchg
and
addr16
cld
stc
mov
inc
add
mov
jecxz
test
xchg
in
fisttps
inc
stos
mov
test
dec
sbb
outsl
mov
jae
xor
inc
xchg
ss
pop
outsb
in
jns
andl
out
sti
and
push
ljmp
or
ljmp
xchg
cmp
or
jno
adcl
add
mov
lods
insl
push
mov
mov
cmpsb
lods
gs
stos
push
mov
dec
mov
fdivr
loopne
xchg
add
jmp
adc
inc
jp
add
xchg
in
pop
inc
ret
mov
aam
pop
mov
xor
and
popf
xor
mov
loopne
xchg
xchg
out
pop
aas
lock
xor
ret
repz
inc
jecxz
not
jo
push
inc
cmp
inc
fbld
cwtl
xchg
pop
lahf
or
push
lcall
je
inc
gs
cmp
mov
xor
cli
xor
pop
xchg
push
rcrb
dec
repz
inc
cmp
das
mov
lretw
mov
inc
mov
jle
pusha
movsb
xlat
jg
jns
icebp
sar
shlb
std
aad
mov
sti
jns
xchg
pop
fcomi
push
pop
push
sbb
icebp
cmp
out
adc
jne
divb
in
mov
out
hlt
push
xchg
mov
sahf
cmp
in
jecxz
mov
js
fistps
mov
xlat
mov
lock
or
repnz
mov
stc
add
mov
dec
jecxz
divl
or
shl
pop
mov
lcall
mov
or
sbb
xchg
fld
add
sbb
fdivl
mov
ret
cmpsb
push
sub
cli
cmpb
loop
clc
push
jmp
negb
imulb
addl
mov
mov
mov
shll
ds
fs
sbb
mov
cwtl
or
ret
loop
ret
inc
fld
xor
adc
ret
inc
jns
stos
test
xchg
push
sub
ret
fildll
xchg
call
sbb
xchg
bound
and
nop
sub
out
jecxz
pop
mov
mov
das
mov
lds
xor
hlt
mov
pop
popa
cmpsb
lock
pop
mov
mov
adc
sbb
push
stos
and
rorl
mov
rorb
bound
push
imul
flds
sahf
mov
sbb
scas
bound
push
fimull
and
loope
imul
lds
add
ss
push
or
js
jno
pop
test
mov
xor
rcl
mov
lea
imul
xor
lock
jb
loop
xor
add
hlt
ret
jns
xor
xorb
insb
add
push
sahf
cmp
out
loopne
jo
inc
aad
cmc
mov
lret
jmp
mov
popl
dec
xor
clc
jecxz
inc
xor
push
test
and
mov
shrl
adc
ret
xchg
ljmp
push
ja
cld
or
add
rcr
adc
sarl
mov
and
mov
inc
jge
hlt
cmc
pop
cmp
cmp
pop
fnstenv
js
shrl
std
inc
repz
sbb
into
clc
mov
ret
fnstsw
andl
or
fwait
mov
jecxz
faddl
std
jno
pop
faddp
fbld
push
jno
pushf
jecxz
push
ret
fimuls
daa
mov
loop
lcall
mov
outsb
lret
inc
push
xchg
adc
pop
mov
xor
fstpt
or
enter
mov
jbe
nop
loopne
cmp
jmp
mov
mov
add
and
in
int
lods
xchg
dec
lret
xor
and
scas
int
jne
aad
mov
lods
or
jae
imul
cmc
and
ja
cmp
aam
in
xor
sbb
push
add
cmpsb
push
enter
add
mov
or
mov
cmpsl
pop
clc
out
scas
aad
xchg
xchg
mov
scas
out
push
or
cmpsb
inc
fwait
lea
pusha
les
pop
out
mov
pop
cmp
pop
int3
mov
fisubs
or
mov
lds
cmpsl
pop
ljmp
fistl
push
mov
cld
adcb
inc
cld
in
mov
pop
adc
mov
mov
sahf
fstl
add
mov
mov
xor
mov
addl
mov
rcr
mov
cwtl
popa
cmpsb
push
aad
mov
cli
mov
jp
sarl
mov
bnd
pop
lret
outsb
inc
sahf
push
cmp
pushf
in
dec
push
roll
sbb
idiv
cs
adc
arpl
lcall
add
stos
fstp
fwait
push
out
jns
rorl
pop
ss
shr
and
fisttps
fs
xchg
xorl
loopne
jnp
popf
icebp
push
dec
cmp
ret
add
and
lock
cmc
in
repz
ljmp
push
stc
cmp
sahf
int3
fisubrs
mov
pusha
and
inc
aad
mov
xor
mov
xchg
int
cld
ret
and
pop
cmp
mov
or
iret
mov
aad
aad
or
or
ljmp
xchg
xchg
push
int
mov
xor
or
mov
cli
sbb
loop
lahf
mov
stos
das
jg
ficoms
ret
sarl
cld
pusha
sub
or
mov
mov
icebp
pop
stos
cld
rorl
inc
xorl
sbb
nop
xlat
sub
push
cmp
addr16
inc
and
mov
sbb
mov
push
dec
push
mov
adc
aad
fucom
xor
xlat
cli
xchg
jbe
mov
or
add
pusha
xor
sbb
jbe
fcos
mov
mov
imul
movsb
in
cmp
push
mov
xchg
scas
stos
inc
cmpsb
lahf
icebp
xchg
dec
pop
dec
idiv
push
repz
fisubrl
rorb
push
int
pop
test
out
add
lods
fcomi
cmpsl
rclb
loop
jg
jge
idivl
iret
dec
xchg
or
iret
adc
mov
cld
fistpl
jecxz
pop
insl
xor
mov
stos
mov
mov
loope
mov
shl
xor
aad
or
jno
sub
mov
insb
adc
push
sahf
pop
jb
cmp
cmp
add
lods
pop
inc
mov
inc
push
dec
rcll
andl
cmpsb
std
sub
cmp
add
inc
ret
outsb
and
ret
cmpsl
sub
subl
test
repnz
addr16
shll
mov
rorl
adc
outsl
push
loopne
testl
and
add
mov
xchg
lods
push
cmp
cmp
mov
mov
loope
repnz
fldl
fwait
rcl
jno
xor
lret
inc
call
arpl
mov
idiv
jnp
inc
daa
aaa
mov
mov
imul
es
leave
int
sti
outsl
push
cmp
mov
clc
inc
xor
or
jecxz
mov
and
test
scas
stos
or
sub
mov
xchg
test
adc
hlt
cltd
ja
fcomi
push
pop
sbb
xchg
in
dec
mov
mov
pop
mov
mov
arpl
ret
push
mov
sbb
mov
mov
pop
cmp
shlb
pushf
mov
ret
xor
outsb
std
and
addr16
jno
pop
jns
or
mov
imul
mov
push
test
lods
pusha
mov
jb
daa
jae
mov
lods
imul
xchg
std
ror
mov
lds
or
mov
inc
add
jne
ljmp
jge
and
jb
cmp
push
cmp
leave
dec
cmpsb
popf
push
out
clc
lods
mov
outsl
cwtl
pop
cmpsl
pusha
push
int3
pusha
push
sub
enter
xchg
ljmp
ret
inc
shrb
jnp
arpl
loope
cmp
lret
jae
mov
xor
lcall
pusha
adc
xor
adc
hlt
stos
mov
pop
xor
int
and
dec
mov
pop
jmp
int3
das
in
and
in
sahf
call
adc
xor
push
or
enter
push
pushf
fisttpll
cmp
repnz
mov
mov
jno
jecxz
or
pop
mov
and
xor
and
loop
push
cmp
cmp
ret
dec
cwtl
jns
stos
inc
adc
test
pop
in
imul
inc
pop
into
xchg
pop
mov
mov
das
jno
jge
es
int
cltd
push
lds
in
imul
idivb
push
mov
sub
pushf
addr16
hlt
inc
nop
orb
sub
in
xchg
roll
movsb
popf
lret
add
aad
ljmp
ret
mov
push
scas
xor
repz
and
call
arpl
lret
adc
cli
cwtl
js
cs
aam
adc
pop
out
push
add
aaa
dec
scas
mov
mov
out
popa
cwtl
cltd
jecxz
lds
scas
pusha
or
xor
or
into
movsb
fwait
mov
mov
notb
int
jecxz
xor
dec
aaa
in
loope
adc
call
bound
sbb
lods
push
dec
mov
loop
test
inc
cmp
loope
movswl
cmpsl
inc
cmp
fdivl
ret
ret
fisttpll
mov
inc
out
push
sub
popa
in
add
sbb
jo
out
xor
xchg
cmp
mov
dec
sti
push
fsubr
mov
outsl
mov
dec
pop
ja
addr16
xor
cli
mov
xchg
dec
out
sbb
out
lock
mov
subl
mov
xchg
pop
push
inc
cmp
cmp
add
cmp
shll
sub
add
mov
dec
sbb
sbb
push
sbb
jg
add
or
xor
cmp
jno
roll
add
or
mov
push
push
ss
xor
xor
adc
addr16
and
mov
xchg
adc
test
mov
repz
cmpsl
push
arpl
jns
lea
add
xor
inc
mov
lcall
and
xchg
pusha
pop
dec
mov
or
and
outsb
add
and
cmc
loopne
push
pushf
inc
pop
sbbl
add
out
rcr
xchg
imul
loop
cli
push
pushf
and
sub
jecxz
inc
jmp
mov
cmpsb
shrl
xor
ret
sub
jo
scas
aad
and
sahf
mov
dec
jns
lock
sbbb
push
repz
insl
mov
mov
test
lret
jnp
stos
cmp
gs
imul
adc
jmp
sub
repz
lret
popf
push
mov
sarl
sti
push
inc
rolb
loop,pn
push
divb
outsl
pushf
aaa
repnz
lea
outsl
aam
pusha
loopne
xor
fwait
push
call
pusha
outsl
out
jp
lds
out
mov
jnp
repnz
mov
add
inc
xor
mov
lret
aaa
mov
inc
pop
iret
adc
out
movsb
outsl
cmp
pusha
cmpsl
inc
mov
xchg
addr16
mov
adc
roll
mov
push
frstor
ret
int
std
push
into
lcall
rorl
mov
jae
adc
aam
inc
mov
shrl
adc
js
in
add
sbb
dec
inc
jae
mov
outsb
inc
pop
pushf
mov
lret
mov
int3
pusha
stos
push
aaa
popf
aaa
inc
ret
and
mov
or
jecxz
jno
rolb
lods
cmpsl
jnp
loope
ret
arpl
cs
jge
loop
and
popa
rolb
and
adc
cmc
call
sahf
xchg
inc
loope
mov
outsl
repnz
mov
repnz
test
dec
ljmp
dec
mov
aad
push
and
xchg
xchg
out
adc
add
sbb
mov
mov
fistps
pusha
out
cmc
cli
dec
xor
add
xchg
lea
adc
inc
lods
pop
jmp
gs
loopne
rclb
ror
arpl
enter
fldt
repz
pop
loopne
add
fldl
jne
fcomip
int
jecxz
cltd
aad
fisubs
push
icebp
xor
and
insb
adc
mov
mov
in
pushf
sahf
aad
sarl
sti
je
inc
fucomi
out
pusha
sbb
hlt
roll
dec
out
adc
aad
push
outsl
es
loope
nop
mov
in
popa
sub
mov
inc
jmp
push
lods
lcall
lret
ret
xor
lret
stc
nop
ret
mov
hlt
mov
out
ja
inc
icebp
repz
int3
aas
sar
out
es
int
jecxz
cmpsl
in
repz
adc
push
jmp
mov
pop
in
notl
mov
xor
out
loop
xor
ja
ret
jg
inc
aas
lret
ja
jecxz
cmpl
lahf
call
lods
clc
leave
add
dec
pusha
fldt
call
xor
aas
xchg
lret
fisttpl
loope
and
adc
shl
jp
leave
shr
pusha
mov
repnz
icebp
testb
icebp
test
addl
mov
xor
std
fwait
pusha
rclb
adc
push
add
push
arpl
jmp
jmp
mov
sbb
jecxz
inc
je
pusha
jl
out
sarl
loopne
jb
cmp
ret
mov
hlt
bound
mov
cmpsl
jmp
jnp
sub
cmp
jg
lods
cmpb
jg
shll
inc
jp
sti
add
scas
lret
and
outsb
shl
mov
popf
cmc
push
mov
mov
jmp
jb
aaa
lock
jnp
lahf
rcl
xor
arpl
pusha
stc
mov
cmp
loop
mov
or
fsubs
test
imul
call
cld
sbb
adcl
jbe
subl
cli
push
sub
add
xchg
int
ds
shl
jns
xchg
xor
int
xchg
bound
loope
or
sahf
rol
or
mov
loop
and
test
sbb
sbb
mov
es
pop
lock
adc
fisubrs
in
loop
jle
pop
ret
push
ficoml
add
cli
in
pop
mov
fs
jge
pop
out
ds
jg
repz
mov
push
pop
pop
jle
lods
jle
jnp
rclb
pusha
lods
pop
sti
aad
lock
stos
add
mov
shll
rcr
je
out
push
es
xchg
retw
jb
outsb
mov
insb
fisubs
jg
push
mov
xchg
ja
mov
jp
enter
sbb
int3
mov
mov
ret
xchg
push
inc
lret
push
sbb
cmpsl
loopne
jb
cmp
leave
out
jg
mov
mov
sbbl
xchg
or
out
ja
shll
cmp
cmp
loope
mov
ret
jecxz
pusha
pop
push
test
fcoms
outsb
iret
cmp
rcrl
stos
sub
xlat
roll
fcomps
divb
ja
mov
xor
out
loope
or
jmp
cmp
or
inc
mov
jp
push
sti
aad
in
jnp
jecxz
xor
jae
addr16
jecxz,pn
mov
xor
jbe
ljmp
fstps
mov
ret
ja
stc
sti
pusha
sub
mov
pusha
imul
xorl
and
cmp
inc
xor
or
mov
sbb
xor
icebp
fisubrs
bound
std
call
xchg
test
hlt
sbb
divl
lods
cmp
xchg
aaa
dec
jo
xchg
add
mov
pusha
adc
xor
in
mov
idiv
call
mov
push
cli
pop
ja
jle
pushf
outsb
andb
dec
xchg
cmpsl
cs
pop
jne
sbb
mov
in
stos
std
lret
add
aam
lds
testl
outsl
and
and
jle
add
jge
xor
sbb
jns
mov
push
jg
scas
aaa
test
mov
cmp
dec
jmp
push
rorl
push
push
test
aaa
xchg
pop
repz
mov
out
sbb
jnp
loop
cmc
in
jg
dec
movsl
xchg
pop
sbb
call
cli
jg
repnz
movsl
in
sar
and
scas
mov
xchg
pop
xor
addb
and
inc
cld
daa
icebp
fnstenv
movsb
bnd
pusha
lcall
out
ja
addr16
mov
scas
add
std
test
call
sbb
cltd
movsl
sub
pop
call
xlat
call
pop
cmpsl
xor
arpl
cld
pop
pop
in
mov
int3
jle
xor
insl
jb
call
add
xor
sbb
xchg
cmpsb
out
cltd
cmc
mov
push
loop
bnd
jp
mov
loop
dec
jae
pop
rcr
fisubrl
out
cs
xor
sbb
jmp
cli
fwait
imul
cmc
insl
repz
mov
insb
bnd
add
pop
pop
out
pop
xor
cmpsl
pop
rclb
add
and
outsb
sahf
movb
jl
neg
in
data16
cmp
mov
mov
pop
mov
dec
iret
xor
xchg
data16
ja
mov
repz
add
enter
cmp
fildll
sbbb
sub
mov
or
jmp
pop
testb
call
xor
jg
je
mov
and
lods
movsl
ljmp
jmp
jo
xchg
mov
dec
pop
sub
orl
mov
test
cltd
lcall
ffree
pushf
adcb
leave
pop
add
subb
testb
aas
jmp
mov
push
cmp
ljmp
xor
aad
std
rcrl
xor
movsb
jno
push
inc
lahf
mov
sarb
add
push
mov
xlat
mov
cli
loop
mov
cmp
push
xlat
int
mov
jg
sbb
div
or
jmp
mov
iret
or
mov
icebp
mov
call
jle
jns
test
mov
xor
jecxz
out
das
and
in
cltd
push
out
mov
adc
jecxz
cltd
mov
sbb
jnp
pop
loope
mov
cmp
jp
push
loop
mov
call
shl
je
call
jmp
xor
out
add
dec
and
cld
pusha
dec
sbb
or
mov
call
xchg
cmpsl
cs
xchg
adc
stc
or
sub
mov
pop
dec
jb
shlb
or
and
fsubl
in
arpl
in
sbb
leave
jne
aas
pop
jg
popf
xchg
int
mov
xchg
bound
mov
pushf
test
mov
xor
ret
int
or
dec
ljmp
fisubl
or
lahf
clc
pop
sub
ljmp
mov
sbb
rolb
fs
pop
je
lahf
mov
pushf
arpl
scas
jmp
mov
push
fists
mov
cs
cld
xor
push
cmpsl
jno
ds
test
push
es
pop
in
lcall
push
iret
scas
fwait
arpl
xor
push
dec
mov
push
sarl
mov
sar
jae
adc
lret
cmpsb
jg
xchg
call
push
inc
mov
push
mov
xchg
out
repz
pop
adc
ret
into
pusha
fdivp
pop
hlt
mov
cltd
push
aam
cmp
xchg
mov
cwtl
inc
int
in
popf
cmc
jnp
mov
out
fldl
repz
out
sbb
mov
and
add
push
rcll
ret
addr16
shl
pop
rcrl
icebp
mov
lret
sub
sub
inc
fistpll
shrl
mov
into
fimuls
sbb
test
push
cltd
xchg
dec
xchg
add
lods
and
ss
ret
out
ffreep
addr16
jmp
aad
cs
and
test
and
cs
in
mov
adc
pushf
divl
mov
jbe
fwait
repnz
jae
cmp
mov
push
shll
mov
sarl
pusha
mull
jg
mov
push
push
pop
dec
cmp
jmp
push
stos
add
jp
sti
int
add
negb
in
pop
out
ja
lock
inc
push
inc
test
outsl
fdivrs
pop
aaa
movsl
stos
and
sbb
push
out
popa
xor
mov
mov
ja
insb
ja
xor
nop
sti
ret
idiv
imul
ret
add
and
loop
sti
ss
sar
jmp
ret
mov
fstl
rcll
mov
out
arpl
rcll
cld
push
ret
push
dec
pop
or
push
shlb
testl
mov
or
ret
leave
cli
arpl
xchg
popf
and
adc
pop
and
add
mov
out
ret
outsl
sti
leave
xchg
in
jecxz
popf
push
sub
dec
outsl
cwtl
repz
outsl
inc
mov
rcll
mov
and
test
mov
jb
jae
cmpsb
sub
fcoml
pop
popa
sbb
mov
xor
aad
into
in
jle
mov
sub
mov
in
mov
push
or
and
sbb
rcll
out
cmp
jbe
outsl
xor
insl
xchg
sarl
mov
les
aad
jmp
dec
repz
mov
lahf
movsb
push
jo
stos
mov
in
ret
push
mov
push
mov
dec
in
xchg
repz
push
and
xchg
or
repnz
push
and
xchg
scas
adc
mov
pop
test
lret
mov
int
jecxz
out
sbb
daa
fwait
pusha
mov
add
add
out
xor
jnp
or
push
mov
adc
xchg
addr16
out
outsl
stos
mov
out
pop
cmp
movsb
mov
ret
jb
jnp
loop
push
addr16
sbb
mov
lahf
test
xchg
psubd
pop
jecxz
inc
adc
push
cmp
in
xchg
sbb
lret
adc
jmp
push
jecxz
xchg
dec
loope
icebp
std
cli
mov
sbb
outsb
mov
gs
aas
pop
cmpsl
adc
repnz
xor
fisttps
out
ret
mov
jnp
repnz
xchg
or
push
mov
jae
loop
mov
imul
and
lock
sar
rcll
movsl
fstpl
sbb
aas
add
stc
aaa
dec
jge
cmp
pop
loop
loope
cmc
mov
mov
inc
movsl
lods
js
jnp
pushf
and
data16
add
std
pusha
mov
dec
rorl
imul
in
mov
cli
in
and
ret
out
xchg
cmp
das
cmp
cmp
mov
pop
mov
and
xchg
xchg
ja
pop
out
cld
out
adc
roll
mov
or
jo
outsl
aad
pushf
sub
int3
mov
xchg
mov
stos
repnz
inc
shl
dec
aad
sarb
mov
shlb
jbe
pop
dec
mov
pop
pop
ljmp
subl
in
jecxz
cmc
or
sbb
jg
xchg
pop
cmp
mov
add
pusha
adc
jecxz
andl
ja
mov
and
mov
xor
lcall
pop
fiaddl
cmp
pop
in
and
mov
mov
test
mov
xlat
cmp
sahf
mov
cmpsw
or
int3
lea
mov
or
and
sub
sbb
outsb
inc
cld
inc
jmp
inc
xchg
jo
out
push
xchg
pop
lods
mov
int
mov
into
rcr
andb
adc
stos
shrb
incl
jmp
push
push
scas
cmp
xor
inc
push
hlt
sbb
frndint
xchg
lcall
mov
loopne
lock
es
lcall
jmp
and
aas
add
cmp
mov
ja
dec
jg
pusha
sbb
xlat
sarb
or
shl
lds
mov
add
mov
lcall
jmp
jl
xchg
loop
scas
shll
sti
fst
andl
sub
mov
mov
movl
push
xor
sbb
xlat
std
in
mov
pop
ljmp
adc
std
xchg
pusha
call
jecxz
adc
xchg
cltd
flds
mov
jns
daa
mov
mov
aad
leave
jo
or
loop
pop
inc
inc
lahf
jge
outsb
lret
mov
incb
xor
jecxz
cmpsl
adc
cwtl
cmp
mov
add
test
adc
pusha
test
mov
decb
and
mov
shll
out
mov
mov
pop
int3
shrl
jp
adc
cmp
pop
mov
js
jecxz
int
dec
cmp
jb
mov
arpl
mov
imul
nop
jnp
cltd
pop
mov
icebp
pop
fnstenv
std
push
mov
xor
pop
test
mov
mov
das
mov
jae
aad
mov
xchg
inc
push
addr16
int
out
les
sar
call
pop
xor
fstpl
cmp
dec
ja
inc
lods
sti
loopne
xor
xor
xchg
jbe
cmc
adc
iret
mov
popa
and
outsb
sub
scas
push
pop
pop
add
pop
jbe
sahf
lcall
std
lock
dec
stos
xchg
xor
mov
out
mov
cld
les
rcl
jnp
icebp
mov
and
adc
add
out
pusha
fsubrl
daa
repz
xor
or
mov
fyl2x
mov
fimull
mov
jnp
xor
ret
orl
stos
arpl
addr16
mov
add
fbstp
pop
ljmp
movsl
lock
mov
pusha
sub
push
or
imul
adc
jae
aad
xchg
bound
adc
movsb
jnp
mov
aad
mov
inc
mov
leave
or
mov
faddl
jle
xchg
mov
fcom
mov
push
lret
in
arpl
sbb
pop
push
aaa
push
pop
mov
xorl
xchg
xchg
mov
pusha
sub
mov
rcl
inc
jg
fisubrs
fs
cmpsl
pusha
fcomp
shrl
mov
push
jae
jbe
xchg
mov
cli
psubd
inc
push
cmpsb
stos
sub
rclb
cmpsl
mov
cmp
jecxz
cmc
js
aaa
inc
scas
jmp
push
jmp
pop
sbb
stos
jb
push
mov
cmp
das
cltd
and
sub
cli
adc
lret
jno
sub
cld
and
fbstp
ret
in
jmp
or
std
inc
xor
and
in
jb
mov
ja
xchg
repz
push
daa
aad
int3
dec
pop
pusha
push
mov
jge
mov
push
ds
sub
stc
sti
xor
xchg
add
or
int3
lcall
icebp
scas
int
cmpsb
jp
pop
mov
jb
insl
shll
aam
and
jne
lret
popa
mov
aaa
lahf
mov
ret
jo
loopne
push
jo
fidivs
icebp
push
clc
inc
xchg
js
add
sub
dec
jns
jno
mov
jbe
unpcklps
xchg
les
loop
mov
into
insb
pop
add
in
push
mov
mov
fcmovu
addr16
addr16
inc
pop
test
jb
inc
mov
mov
mov
mov
cmc
hlt
fstpt
insb
or
cmpsl
pop
insb
xchg
push
mov
stos
test
hlt
inc
dec
mov
adc
loope
lds
or
repnz
pop
inc
std
xchg
ja
lea
pop
pop
lods
rolb
and
fcmovnb
mov
sbb
sbb
cmpsl
aam
sbb
andl
mov
xchg
xchg
sbb
lods
mov
into
rcr
mov
mov
pop
lock
mulb
rcll
arpl
inc
mov
xchg
or
push
bound
call
mov
subl
xchg
rcrl
xchg
pop
pop
or
or
andl
test
push
jmp
xor
cmp
xchg
ds
push
and
and
sub
add
pop
pushl
cmp
mov
xchg
ret
loopne
pusha
dec
inc
aam
sbbl
push
sarl
sbb
stos
jge
pusha
enter
add
jl
mov
dec
js
jb
ucomiss
testb
push
lea
jno
fbld
lock
fadds
dec
mov
cltd
inc
dec
push
stc
es
sbb
jp
jae
loop
iret
push
xor
pop
fsubl
dec
inc
cmp
fiadds
cmp
insl
mov
sahf
into
jl,pn
shlb
fisttps
mov
mov
xor
bound
jecxz
mov
fbstp
in
xor
out
mov
and
test
fs
mov
inc
dec
cwtl
loop
add
lcall
arpl
sbb
xchg
jno
jge
popf
in
pop
leave
stc
pop
inc
mov
adc
pop
push
in
xchg
push
das
sbb
cmpsl
jns
jg
jnp
pop
ret
add
xchg
mov
fsub
and
pop
pop
fcmovnb
loopne
cld
dec
scas
xchg
jl
out
sub
mov
sub
xlat
call
ljmp
push
stos
movsb
mov
rcl
xor
xlat
jo
ja
nop
lock
pop
adc
repz
loopne
xchg
add
int
and
push
out
xchg
mov
insl
lret
fstl
std
call
jecxz
out
fcmovbe
or
out
sub
shll
lcall
ss
js
repnz
push
scas
xchg
ret
mov
int
push
bound
and
ljmp
mov
dec
pusha
mov
xchg
pop
fwait
pop
pusha
andl
fsubs
inc
mov
cmc
push
fwait
mov
push
add
cli
cli
jb
lret
pop
pop
dec
pop
and
push
jbe
mov
sahf
repz
fdiv
sub
dec
test
xor
jae
in
jno
pop
jmp
rorl
call
lds
scas
or
arpl
sbbl
add
mov
pop
ret
push
mov
add
mov
or
xor
xchg
pop
push
pop
shl
mov
push
mov
jo
fidivl
sti
int
shll
lock
cmp
test
loopne
repnz
mov
add
xchg
fdivrl
jae
pop
loopne
add
push
mov
into
lods
sti
in
sbb
mov
jp
stos
btr
outsl
xor
in
fiaddl
jg
not
adc
mov
ret
jp
je
and
negb
jle
or
movsb
mov
lret
inc
and
call
scas
inc
or
jbe
jp
push
cmpl
mov
int
mov
mov
adc
pop
les
sahf
sub
scas
jg
repnz
xchg
pop
push
lret
lcall
mov
je
xor
insb
in
leave
ljmp
out
mov
xchg
mov
fnstsw
or
aad
stos
arpl
dec
ja
cld
mov
les
sbb
jnp
repz
aas
mov
adc
ds
and
pop
mov
mov
lods
sbb
add
xor
stos
cmpsb
ret
cmp
jnp,pn
rcrb
arpl
scas
lahf
mov
bound
jl
rep
jb
test
xor
in
sub
in
dec
cs
jl
repz
push
push
fcmovbe
arpl
rolb
cmc
seta
adc
popa
das
xchg
pop
and
sahf
clc
add
xchg
mov
sub
rorb
cs
mov
cld
inc
notl
icebp
lret
mov
stc
mov
mov
test
mov
mov
int3
sbb
xchg
or
mov
and
bound
loop
in
mov
jmp
ljmp
test
push
mov
out
pop
inc
adc
mov
mov
pop
mov
addb
pop
sarl
dec
repnz
repz
addr16
adc
loope
loopne
testb
data16
hlt
fmuls
lret
test
loopne
push
fidivl
cmp
fsubl
scas
ret
insl
mov
js
mov
mov
sarb
inc
push
or
ret
sub
fistpll
call
in
shl
loopne
and
fwait
or
jbe
lods
xor
xchg
push
insb
sub
arpl
push
dec
pop
movb
fwait
jle
mov
popa
in
pop
mov
pusha
cmp
repz
shlb
pop
cmc
ss
inc
fsubrp
adc
dec
ss
xor
int
pop
lea
sub
fisubl
fcmovne
lock
pop
stos
mov
or
pusha
cmp
or
rclb
scas
xlat
mov
xchg
nop
mov
jecxz
dec
xchg
outsl
jg
mov
push
mov
pop
mov
sbbl
inc
mov
imull
mov
icebp
mov
mov
bound
push
mov
gs
test
push
sub
test
movsl
aas
das
push
stos
roll
in
movsl
mov
ljmp
jno,pn
push
les
jp
incb
stc
add
outsb
xor
insl
push
inc
clc
scas
xchg
jmp
pop
test
out
shlb
addb
out
add
push
xchg
rcll
pop
push
or
mov
inc
ret
sub
push
in
aas
mov
arpl
mov
jb
rcrl
inc
inc
test
cs
pop
js
xor
inc
and
icebp
add
pusha
sbb
pop
loopne
xor
push
xchg
cld
cmp
loopne
or
mov
ret
xchg
mov
repz
add
out
dec
push
pop
sbbb
fdivl
call
xchg
mov
mov
jecxz
adc
add
and
into
cmp
movsl
pop
jo
test
lea
popa
mov
xlat
jecxz
in
mov
fiadds
cli
lods
mov
into
dec
sbb
mov
mov
stc
and
sahf
inc
mov
shrl
lods
faddl
mov
xor
imul
adc
mov
insl
mov
jb
dec
addb
mov
jg
leave
add
fadd
jmp
les
stc
mov
daa
stc
pop
test
sbb
mov
sbb
imul
xchg
xchg
js
and
in
roll
sub
jnp
mov
loopne
pop
test
mov
cmp
out
sahf
lcall
xor
jnp
sarb
mov
mov
in
cmp
mov
add
repz
xchg
icebp
aaa
mov
xchg
cmpsl
bound
xor
ret
push
mov
mov
pop
lahf
mov
mov
sti
or
fs
or
pop
mov
sbb
inc
rcrl
stos
addr16
faddl
add
mov
fistl
push
pop
inc
addl
jecxz
sub
aaa
stos
and
xor
insb
xlat
fisttpll
popa
ret
or
movsb
ljmp
pop
mov
push
mov
or
lds
sbb
aad
push
repnz
adc
fs
pop
mov
cmp
adc
out
cmp
ss
or
cmp
push
movsb
push
sub
lods
and
imul
adc
mov
push
cmc
and
fistps
push
aas
scas
sahf
sub
mov
aad
rcll
out
test
push
ds
pusha
fcomi
iret
xchg
push
adc
dec
sar
push
lret
cmpsl
ret
push
pop
add
icebp
lods
sub
mov
inc
push
mov
jl
lods
adc
fwait
jg
or
sbb
xchg
pusha
ds
incb
out
clc
mov
mov
int
mov
or
cwtl
in
push
das
outsl
xchg
scas
stos
and
sub
aam
aam
mov
lret
lods
mov
adc
mov
jg
jne
cmpsl
repz
loopne
mov
cmpsb
int
inc
mov
outsb
sahf
loop
pop
jo
ret
out
inc
test
pop
loop
sbb
inc
pop
cmp
cltd
pop
ret
mov
mov
push
mov
loopne
out
call
icebp
std
mov
cmp
mov
inc
mov
mov
test
outsl
in
mov
xchg
mov
or
cs
sub
jb
js
push
add
loope
or
mov
int
out
pop
sub
jns
xchg
cwtl
push
sti
fcmovne
ret
jns
test
inc
cs
repnz
inc
bound
cmp
mov
movsl
lret
rcr
mov
subl
fildll
adc
mov
pop
xchg
divb
clc
adc
inc
xchg
pop
jg
gs
roll
add
and
cmpsb
gs
aad
ret
scas
xchg
clc
popf
stos
and
icebp
add
mov
je
aas
mov
pop
sbb
add
dec
xchg
push
fstl
imul
repnz
int
in
cmp
dec
dec
out
stos
ret
xchg
pusha
jecxz
pop
dec
fsubrl
inc
stos
pusha
jbe
fiadds
sub
inc
int
lea
push
shrl
mov
mov
out
pusha
clc
mov
test
mov
call
cwtl
stc
xchg
loop
inc
mov
sbb
loop
xchg
inc
xchg
pop
daa
mov
adc
cmc
pop
mov
rep
pushl
icebp
js
add
pop
sti
pop
cwtl
das
push
push
orl
xchg
or
scas
or
loope
jnp
mov
mov
mov
subps
pushf
push
fbstp
mov
jle
cs
out
lcall
out
stos
xchg
inc
nop
in
shl
std
or
pop
adc
cli
popf
or
mov
inc
xor
inc
pusha
and
test
fidivl
mov
fiadds
pop
icebp
mov
aam
aaa
pop
in
daa
sti
in
dec
clc
inc
lret
lcall
test
xchg
mov
out
jg
mov
std
fwait
mov
lock
jnp
repz
icebp
inc
aad
xchg
push
xor
das
push
jb
clc
inc
mov
xor
dec
mov
shl
pop
aad
hlt
sbb
shll
mov
or
lods
leave
sbb
push
js
dec
clc
call
jge
lods
mov
pop
mov
cmpsb
in
roll
imul
adc
inc
bound
cltd
fmuls
into
ds
into
sahf
xchg
inc
add
pop
les
cld
inc
dec
cmc
mov
cmp
aas
xchg
add
lahf
bound
enter
xchg
sub
ret
mov
fwait
mov
sub
bound
mov
dec
pop
xchg
in
and
adc
ds
shl
sti
sbb
xchg
shr
mov
in
xchg
repz
clc
pusha
std
jne
into
xor
pop
pop
mov
fiaddl
inc
mov
fadds
lret
mov
loop
mov
hlt
cs
int
popa
jle
movsb
ret
loop
and
push
xor
repz
scas
adcb
push
pushf
pop
inc
add
mov
lret
enter
fdivrs
js
jo
movsb
stos
mov
jmp
xchg
hlt
jg
rorl
inc
push
xor
xor
cmc
int3
add
mov
aad
or
nop
clc
scas
mov
out
filds
pop
lret
xor
adc
cmpb
or
cmp
aad
int
insb
pusha
or
aad
push
dec
call
ljmp
mov
xor
dec
imul
sub
cmp
and
lahf
ret
ja
lods
loope,pt
mov
loop
add
or
xor
stos
and
xlat
cmpsb
repz
push
les
int
lods
fbstp
xor
dec
ds
cmc
add
xchg
inc
ret
dec
sarb
xlat
pop
cmp
ret
lea
inc
ret
mov
rcrb
xorb
sbb
popa
shlb
mov
int
fistps
mov
jl
cmc
cld
and
inc
iret
in
cs
ret
leave
push
call
xor
jl
inc
or
les
test
push
rolb
sub
addr16
stos
mov
clc
jl
push
pusha
jns
hlt
in
fiadds
cmc
orl
pop
mov
pop
je
push
cwtl
and
sti
pop
daa
flds
enter
and
in
sbb
in
std
mov
xor
pop
ficoms
call
cmp
lods
adc
rclb
shl
xchg
out
and
pop
icebp
shrl
xchg
push
loope
mov
sbb
repz
pusha
daa
sub
mov
push
mov
xchg
add
je
jo
aaa
or
push
xchg
jnp
and
in
mov
and
fisubs
out
adc
push
and
or
loopne
cmc
jmp
mov
lahf
ret
inc
insb
pushf
cmpsb
aaa
jge
or
scas
jb
test
stos
imul
out
outsl
cmp
fwait
sbbb
mov
lcall
push
mov
pop
pop
xchg
test
flds
sbb
inc
mov
xchg
mov
pop
ret
or
lret
insb
outsb
mov
push
pop
mov
mov
shlb
xchg
xor
jns
cmc
jo
call
iret
stc
out
sbb
lahf
inc
mov
sbb
sahf
inc
mov
inc
aad
inc
fiaddl
cli
or
mov
add
push
lods
js
pop
inc
jecxz
sub
jno
push
jb
xor
or
stos
xor
xchg
pusha
inc
stos
lock
stc
push
sti
pop
ljmp
xor
repnz
push
pop
lods
sub
dec
popf
jb
mov
popf
aas
and
daa
or
jge
shll
das
pop
fisubs
push
pop
xchg
pop
jnp
dec
pusha
test
xchg
ljmp
mov
mov
js
mov
jp
out
mov
out
fnstcw
pop
loopne
ljmp
rorl
into
popa
aaa
outsb
aam
movl
mov
scas
mov
mov
in
ret
mov
pusha
inc
cmp
and
push
popf
cmp
push
aam
jmp
ret
ret
or
xor
mov
mov
mov
cmp
repnz
lret
cld
lret
iret
jg
dec
xlat
ficoms
lods
adc
fnstcw
js
mov
ret
lahf
add
rcr
stos
mov
fcmove
mov
mov
inc
mov
mov
mov
es
das
jmp
or
inc
jmp
into
repnz
into
mov
or
add
xchg
sbb
fstp
int3
movsl
mov
mov
mov
popa
push
lret
test
sti
fistps
fildl
or
popa
pop
lods
pop
bound
add
jmp
inc
cmp
inc
sarb
fdivl
mulps
xor
ret
pusha
testl
fnsave
stos
mov
notb
jb
push
mull
cs
xlat
fwait
divb
xor
jle
addl
cmp
std
lea
mov
jbe
aaa
add
fisttps
xor
arpl
xlat
leave
adc
xchg
sbb
inc
and
outsl
test
adc
int3
sub
cmpsl
roll
ja
push
iret
lahf
sbb
out
repz
xlat
cli
fs
xchg
jp
push
jno
icebp
jnp
jno
loop
jbe
xchg
jecxz
pop
mov
popa
cli
leave
cmp
xor
mov
push
sarl
pusha
push
pop
repz
lret
ret
cmp
inc
jae
jecxz
rolb
or
sbb
dec
jno
add
push
mov
jnp
rcll
jae
inc
imul
loop
mov
xchg
mov
mov
jne
ret
mov
std
lret
and
mov
hlt
sbb
xchg
call
pop
xchg
aam
fdivrl
and
inc
adc
cmpsl
mov
ja
pusha
loope
push
inc
xor
dec
jp
xchg
pop
mov
jmp
adc
xchg
int
jnp
hlt
or
push
into
jecxz
cmp
xor
stos
je
add
fiaddl
cltd
sarb
leave
loop
aad
loope
test
icebp
cs
pop
mov
cmpsl
cmp
sahf
mov
jecxz
sub
mov
cwtl
mov
jnp
xor
mov
loop
ret
push
jle
mov
nop
icebp
repnz
or
loope
repnz
lock
ret
bswap
push
xor
push
lock
push
mov
mov
nop
push
mov
xchg
pusha
pop
xchg
scas
xlat
int3
mov
pop
repz
and
lret
add
xchg
mov
pop
cli
movsb
jo
add
mov
pop
lret
cs
ret
nop
jge
stos
add
rorl
mov
outsl
lods
pop
js
and
movb
mov
xor
xor
mov
nop
sbb
add
inc
fsubr
jl
es
add
repz
push
loop
and
rol
in
ret
ss
mov
arpl
and
iret
jae
rol
jbe
fucomi
lahf
pop
mov
repnz
push
fiaddl
mov
fst
or
mov
jno
and
cmpsl
mov
scas
jnp
cmpsb
mov
fists
pusha
or
mov
addr16
repnz
pop
or
ret
cmp
ret
mov
outsl
ljmp
push
push
enter
ret
jb
fildll
loop
mov
mull
decl
sti
outsl
repz
mov
pushf
pusha
bound
inc
sub
js
outsl
loop
lds
add
test
xchg
pusha
add
inc
out
scas
bound
movsl
inc
mov
ret
xchg
pop
repnz
jns
inc
loop
ret
in
scas
xchg
mov
push
or
daa
mov
inc
repnz
inc
adc
or
test
js
lahf
andb
jmp
out
ret
sbb
ds
fisttpl
negb
pop
aad
jp
jae
addr16
mov
jmp
out
jmp
or
push
imul
or
int
mov
xchg
xchg
adc
mov
mov
pusha
mov
or
pop
sub
xchg
icebp
pop
int
aas
mov
out
adc
lods
cld
dec
mov
mov
mov
jb
xor
mov
mov
outsb
add
daa
ret
inc
jno
push
stos
cmp
jns
adc
mov
in
das
cli
cld
std
in
or
adc
mov
repz
divl
jnp
icebp
std
lret
mov
cs
sbb
push
push
mov
push
dec
lods
call
cmpl
push
or
imul
shrl
xchg
js
jno
cmp
out
mov
jo
push
cmpsl
outsb
sbb
push
stos
call
pusha
xchg
stc
jl
jmp
cmp
fldt
mov
mov
fisubrl
mov
repnz
insl
jo
ja
aam
nop
leave
mov
pop
cmp
loop
push
jo
pop
jnp
notb
jl
lsl
and
fimuls
es
pop
pop
mov
lcall
mov
cmp
lahf
fucomp
pop
add
mov
push
mov
sbb
clc
mov
jmp
scas
inc
bound
dec
and
mov
hlt
and
pop
insb
lahf
mov
iret
push
sbb
sub
adcl
mov
dec
jb
pop
mov
pushf
popf
push
sbb
xchg
mov
xlat
mov
nop
movsb
xchg
inc
push
fbstp
filds
pop
ja
loope
xor
jne
movsb
loope
sub
adc
sub
pop
push
sbb
sahf
inc
cmc
imul
or
add
mov
mov
mov
pop
insl
stos
jge
push
mov
lods
test
sbb
jp
in
rorl
dec
dec
scas
adc
insb
sbb
pushf
xor
shll
sbb
and
sub
dec
xor
pushf
rorb
stos
cwtl
or
ficompl
inc
dec
mov
add
push
daa
cmp
push
jg
adc
mov
fdivrs
test
mov
sub
lds
jnp
cli
mov
inc
adc
int3
shl
pop
ret
shr
fstl
jle
cs
in
sbbl
aas
dec
adc
aas
notb
aam
cli
or
mov
push
or
xor
imull
daa
shl
push
outsl
cmp
rorb
subl
popf
jns
arpl
in
add
imul
outsb
aad
arpl
mov
adc
mov
adc
in
cmpsb
mov
jno
mov
adc
jl
lods
or
push
push
xor
insl
push
stos
sbb
mov
ret
mov
xlat
push
mov
fcompl
xchg
and
addl
leave
inc
outsl
sbb
and
sbb
mov
jae
xor
fbld
pop
aad
jnp
fsubl
repnz
std
js
sti
ljmp
stos
push
cmp
push
pop
xchg
scas
out
cltd
popa
out
cli
pop
out
scas
clc
xor
or
pop
cmp
pop
or
push
cmp
icebp
icebp
mov
pop
lret
push
jno
movsl
cs
sbb
aad
dec
push
in
pusha
or
and
loope
shr
mov
push
sbbb
add
pop
adc
ret
jl
sub
push
pop
jno
sbb
sti
cwtl
cmp
out
test
stc
or
std
jl
inc
sbb
adc
cld
add
addr16
nop
pusha
jnp
mov
mov
nop
mov
enter
jo
stos
sti
add
ljmp
xchg
aad
push
scas
add
jno
cld
sub
cs
stos
loope
fstpl
mov
xlat
ret
rorb
in
inc
mov
cmp
bound
mov
jo
int3
jnp
and
xor
int3
filds
leave
sti
sti
out
repz
out
leave
jmp
or
repz
orb
fiadds
fnsave
push
jae
cmpsb
imul
pop
aam
rcrb
ja
stos
stos
ficoms
stc
popf
popf
sti
mov
loop
pop
in
in
adc
insl
insb
inc
arpl
inc
sub
aam
push
lret
mov
lahf
or
sti
inc
push
aas
stc
push
mov
xor
fisubl
repnz
jmp
sbb
repz
call
mov
mov
outsl
or
push
fucom
sarl
pusha
jae
lods
or
xchg
ret
bound
nop
xchg
movsb
sbb
int3
xchg
movsb
inc
lret
mov
movsl
xchg
mov
pop
add
or
push
mov
fsubrl
sbbb
jecxz
dec
sub
stc
jno
cltd
jg
iret
pusha
mov
cmp
mov
or
and
adc
fwait
repnz
push
mov
push
lcall
xor
scas
push
add
lds
rcr
andl
out
repnz
xor
aas
and
shrl
pop
imul
sub
lea
add
fldenv
jge
xor
lret
or
shrb
into
mov
scas
aad
or
jle
pusha
ret
es
fwait
cmpsb
fsubrl
in
push
add
shr
xor
fistpl
jmp
pop
fnsave
mov
mov
loop
rclb
ret
mov
jae
jge
orl
ja
mov
dec
out
outsb
sub
push
mov
out
xchg
sti
pop
dec
out
in
fimull
xor
jbe
mov
xchg
adc
outsl
sbb
jecxz
adc
jecxz
repz
pop
mov
cltd
xor
pop
and
and
or
mov
sub
decb
push
push
outsl
pushf
mov
push
push
jnp
lds
dec
mov
leave
and
sti
cmpsl
ret
mov
pop
nop
jbe
mov
jnp
in
dec
jecxz
movl
push
rorl
mov
frstor
push
cmp
fsubr
mov
and
xlat
sahf
lea
push
xor
pop
and
cs
push
nop
pop
mov
test
test
mov
lahf
add
std
add
lods
mov
sbb
mov
mov
fisubrs
sub
jae
cmp
push
add
xlat
rcrl
das
rolb
push
cltd
add
dec
imulb
mov
pop
mov
stos
inc
repz
mov
mov
cmp
pop
cmpsl
cmc
xor
out
sbb
push
cs
xchg
rorl
xor
shrb
jo
addr16
mov
or
ret
xchg
sbb
inc
mov
dec
xchg
lahf
mov
js
or
cmpl
add
cmc
jmp
adc
mov
dec
mov
and
inc
xor
cmc
sbb
insb
xor
fldl
sbb
mov
jns
jnp
scas
fwait
and
xchg
mov
clc
mov
sbb
xchg
gs
repz
nop
dec
das
xchg
dec
jbe
mov
cmp
fnstsw
pusha
aas
jecxz
mov
mov
mov
mov
sbb
es
mov
dec
fwait
dec
loop
ret
pop
mov
pop
cs
add
dec
movsl
loop
mov
xor
sar
call
js
jnp
aas
rcl
add
xor
cmpl
mov
out
mov
and
xchg
ja
mov
ss
fidivs
pushf
mov
or
dec
cmpl
in
movsb
xlat
ret
add
pop
fwait
mov
fucomip
add
cmpsb
leave
inc
cmpsl
sub
push
sahf
add
xchg
pop
ljmp
pop
loop
cmp
mov
jnp
test
inc
jb
std
mov
xlat
mov
jge
push
shr
xchg
fidivrl
pop
fdivrs
sbb
push
shl
inc
bound
sbb
adc
bnd
jnp
fnstcw
sti
in
push
xchg
mov
stos
icebp
mov
ret
repnz
xchg
ror
sub
xchg
xor
mov
cli
xchg
jg
lock
mov
lock
sub
js
jnp
pop
int
fnstsw
push
shll
mov
leave
adc
xor
mov
sbb
pop
ficoml
call
shrb
mov
and
repz
fs
mov
nop
mov
mov
or
push
rcll
add
out
push
out
xor
movsb
inc
int
mov
pop
sub
pop
loopne
jecxz
call
dec
stos
dec
loope
fildll
ret
xor
push
sub
loop
int
dec
aas
cmp
in
sub
les
je
in
sbb
in
jne
movsl
sahf
mov
negb
xchg
aas
rolb
movsb
mov
jl
adc
aad
int
dec
fstpl
daa
jbe
push
iret
or
or
pop
or
pop
mov
push
in
push
aam
insb
add
mov
pusha
jmp
shl
outsl
cmp
sub
outsl
push
fistps
popa
test
and
rcrl
jg
frstor
outsl
or
jp
mov
loop
xchg
stos
clc
mov
dec
in
ret
xchg
in
pusha
pop
mov
xor
xor
pop
mov
xchg
ret
daa
mov
push
sti
test
fistps
xorl
cmpsb
jmp
mull
lods
cmp
rcr
lds
inc
jno
stos
dec
loopne
scas
add
imul
test
fcoml
or
sti
daa
pusha
insl
lods
mov
in
cmp
cmc
ret
rolb
jae
aas
fdivr
push
das
pusha
dec
shlb
push
jb
xchg
jl
fucom
out
shrb
dec
rcrb
mov
data16
mov
lods
call
inc
rcll
mull
lret
pop
and
gs
sub
popf
add
push
test
inc
jnp
cli
dec
cmp
mov
lods
mov
std
and
int
xchg
xchg
cli
mov
enter
jecxz
jno
mov
rorb
adcb
ljmp
sarl
jbe
inc
mov
jnp
xchg
jp
mov
jns
inc
cmpl
xor
aaa
fdiv
aaa
dec
test
outsl
mov
pop
mov
push
dec
jp
mov
cmp
cmp
out
loop
jae
sbb
lods
xor
arpl
mov
rcll
scas
pop
dec
stos
scas
jmp
push
cmpsl
insb
pop
cmp
adc
jno
add
pushf
inc
andb
sbb
arpl
xchg
cmp
sarb
or
xchg
jnp
clc
jbe
dec
hlt
clc
pop
stos
bound
outsb
mov
and
mov
sti
insl
add
daa
imul
jl
add
cmp
push
mov
mov
push
inc
repz
dec
cmp
jecxz
xlat
sub
push
or
inc
pusha
cmp
cmpsb
jo
add
icebp
les
jp
rcrb
and
xchg
bnd
lock
xchg
or
loope
frstor
dec
inc
cmp
pop
push
jecxz
js
out
mov
xor
push
and
xchg
ds
call
stos
mov
inc
sbb
dec
mov
movsl
cmpsl
and
pop
inc
jecxz
push
adc
adc
lock
shl
and
lods
mov
std
lahf
lea
cmp
daa
xorb
add
addr16
mov
mov
in
mov
xchg
lock
iret
mov
movl
xor
mov
enter
and
les
or
mov
ficompl
sti
fwait
jecxz
cmpsl
shll
push
sqrtps
push
pop
ljmp
mov
jl
lods
mov
fisttps
xor
mov
in
push
sysenter
neg
in
cs
pop
and
mov
cltd
add
icebp
cmpsl
sub
popa
xor
add
loopne
pop
xor
cltd
lock
push
shl
fisttpll
xor
mov
push
jmp
cmpsb
sub
mov
pop
mov
repnz
scas
adc
ret
mov
lret
mov
pusha
pop
iret
test
ljmp
lea
rcl
cli
popa
adcl
mov
scas
lea
jp
loop
scas
lret
jle
push
fxch
test
loop
sub
fimull
lret
jns
sub
or
shlb
shl
call
lret
lea
in
xchg
arpl
jle
pop
incl
ds
or
cmp
cmp
xor
mov
lea
repz
outsb
mov
mov
pop
jl
ja
jo
jb
outsb
ljmp
in
xchg
cmp
out
test
out
mov
popa
je
jg
xchg
mov
cltd
sub
pop
mov
cwtl
int3
dec
shl
or
loop
cmp
or
push
adc
pusha
arpl
in
inc
test
mov
jne
stos
xor
inc
fnstsw
inc
hlt
jecxz
lock
jmp
aas
inc
mov
loopne
and
and
repz
loop
mov
adc
aam
sbb
push
shlb
xchg
fimuls
push
incl
shrb
jo
inc
add
scas
shr
lahf
jg
xor
or
in
lcall
lea
mov
fbld
lods
add
mov
sub
jg
scas
add
mov
xor
xor
aas
leave
adc
mov
cli
xchg
repz
in
pop
sti
dec
xor
and
mov
and
xchg
mov
jnp
std
aad
push
xlat
insb
movsb
aas
pop
jmp
jnp
rolb
push
stos
xchg
or
cmp
out
xchg
inc
fsubrl
cld
inc
xor
adc
add
and
xchg
ljmp
enter
add
push
in
jecxz
clc
scas
fisttpll
xlat
add
scas
hlt
and
arpl
push
popf
xor
xor
and
pushf
aaa
dec
ret
repz
sti
push
pusha
push
stc
mov
or
jmp
arpl
lods
jp
lret
fdiv
jmp
loope
shll
outsl
dec
out
scas
inc
jbe
add
insl
subb
imul
jno
and
test
adc
cmpsl
mov
or
in
repz
stos
lods
scas
test
repz
sub
shrl
mov
mov
and
les
mov
pop
stos
jb
adc
test
bound
loope
jb
jnp
lahf
and
rcr
and
jae
ret
pop
cmp
inc
adc
notl
push
in
jae
fidivrl
mov
pop
lods
icebp
pop
mov
xchg
movsl
loope
jg
cmp
lret
pop
in
imul
jmp
sti
lahf
or
mov
int3
mov
sti
mov
jns
inc
lcall
iret
jmp
pop
push
arpl
jecxz
push
lods
out
or
mov
scas
xchg
rcll
jo
and
cmp
pop
repz
and
mov
push
inc
xlat
int
mov
stc
rorl
pop
jg
ds
loopne
xchg
imulb
jg
mov
sub
and
pop
adc
ds
xchg
out
pushf
icebp
lret
loopne
sub
loope
dec
xchg
lret
loope
sub
cmp
imul
sbb
mov
or
mov
outsl
adc
or
push
add
call
or
shlb
cmp
jmp
inc
out
xchg
add
pusha
and
lods
lret
mov
jp
sbb
in
push
test
inc
cmc
mov
mov
xchg
lods
popf
dec
out
in
imul
add
mov
sub
mov
and
hlt
pop
jg
mov
or
pusha
lret
nop
jl
mov
pushf
js
lahf
inc
sbb
cs
sub
jmp
out
rolb
sbb
xchg
xchg
xchg
ret
cmp
mov
roll
aad
dec
cmp
mov
cmc
fnsave
in
cltd
add
xchg
push
int
inc
cltd
pop
in
push
add
orl
test
lea
clc
mov
repnz
repnz
mov
leave
pop
ljmp
int
mov
call
sarl
stos
aad
pop
push
xchg
rorl
xchg
mov
dec
popf
xor
pushf
push
hlt
test
jne
cs
decb
movsl
dec
dec
andl
sbb
push
xor
loop
lret
or
fsubs
dec
jns
ljmp
sub
jno
or
fistpll
fnstenv
sub
xor
pop
mov
leave
dec
sub
popa
xchg
mov
cmp
add
cmc
push
jae
arpl
xor
out
sub
push
mov
rorb
test
and
pusha
stos
scas
sarb
xor
mov
cmpsb
adc
out
lods
mov
xchg
arpl
xchg
jl
sub
iret
subl
jne
xchg
jb
add
popf
inc
xchg
mov
add
mov
sbb
pop
and
out
inc
xchg
nop
vmwrite
jge
stos
xchg
iret
ret
repz
sti
pusha
cmp
dec
rcll
inc
mov
pop
es
pmaxub
xchg
push
bound
jg
or
ret
sub
lods
fwait
adc
push
jl
mov
ret
inc
repnz
or
mov
lods
popf
hlt
adc
adc
xor
stc
mov
movsb
lcall
lods
sbb
pop
out
pop
stos
push
stos
in
adc
fmull
clc
repnz
pop
fdivrs
and
test
pop
mov
cs
leave
add
push
xchg
sub
mov
dec
sti
inc
out
xor
std
xchg
nop
pop
cli
imul
enter
push
xchg
ret
or
sub
ffree
sbb
fwait
in
stos
sti
insl
int
es
into
cmp
mov
test
cmc
inc
loop
imul
lahf
rclb
adc
fisubl
fldt
lret
add
pusha
xchg
inc
sahf
mov
push
in
cmc
aaa
popf
pop
clc
jle
mov
mov
push
mov
testl
sub
add
jge
js
mov
mov
ret
mov
add
clts
imul
xchg
or
mov
xor
scas
mov
xor
and
jmp
outsb
xchg
repnz
lods
stc
cmp
loopw
nop
jmp
inc
push
hlt
movsl
inc
adc
repnz
jecxz
shrb
jmp
mov
adc
add
test
testb
sbb
sbb
mov
push
fildll
cmp
and
inc
shll
mov
in
mov
shlb
mov
aaa
sub
cmp
xor
data16
push
jecxz
adc
mov
pop
in
mov
mov
mov
aaa
adc
out
inc
mov
pop
sbb
lahf
aam
sbb
bnd
xchg
inc
xchg
sbb
push
dec
repnz
leave
push
or
pop
lret
loop
pusha
dec
ret
inc
stc
orb
inc
aad
add
addr16
in
clc
and
ret
xor
or
jnp
lods
sub
cmp
sbbl
ficoms
push
pop
add
jg
std
rol
or
jmp
xor
jb
mov
addr16
cwtl
inc
mov
shrb
aam
in
mov
cmp
push
adc
pop
mov
outsl
sub
mov
mov
or
mov
push
scas
andl
jp
out
jb
jnp
je
pop
add
lods
movsl
and
cmp
outsb
pop
in
ss
or
adc
mov
push
iret
imul
aaa
cltd
cmp
aad
push
repz
xor
push
lret
push
lock
les
push
dec
xchg
push
mov
iret
out
test
pop
daa
mov
shrb
adc
stos
push
push
or
jo
xlat
scas
adcb
cli
lcall
sbb
pop
test
or
sbb
jp
test
mov
xor
ja
xlat
mov
cli
jb
insb
pop
cmpsb
fwait
ja
fisubs
xchg
addb
sbb
xchg
pop
mov
push
cmpl
lret
add
int3
int
sarl
dec
mov
jns
bound
daa
js
sub
imul
stos
and
out
lods
das
dec
or
xchg
shrl
subl
mov
jae
or
xchg
jno
bnd
rorb
adc
or
pusha
sbb
sub
jae
test
bound
sbb
not
pop
jae
out
mov
and
stc
push
out
or
inc
cmp
mov
pop
sub
outsl
orl
repnz
fucomip
subl
xor
popa
aaa
shll
aam
shrb
and
cwtl
push
inc
in
mov
pushf
mov
hlt
addr16
or
push
pop
les
loope
jb
fisubrl
jb
push
stc
jp
hlt
pop
jmp
push
adc
cmp
lds
imul
jae
scas
xchg
mov
idivl
sub
sahf
movsb
jb
scas
sbb
push
inc
mov
xlat
dec
add
xlat
sbb
pop
es
popf
iret
push
and
ret
add
mov
xchg
pop
or
cmp
mov
fisubrl
xchg
xchg
inc
jle
xor
leave
push
mov
cmp
mov
ror
xor
test
testb
jg
arpl
stc
pusha
xchg
jbe
fisubs
lock
ja
ret
mov
push
pop
sub
add
loop
or
mov
pop
dec
scas
lcall
fldl
dec
fsubs
push
xor
add
pusha
gs
or
mov
pop
repnz
or
sub
push
movsl
sbb
mov
or
sarb
xor
jmp
jo
dec
aad
out
jne
in
xor
cmp
lds
test
pop
or
in
lock
mov
cltd
faddl
mov
mov
inc
mov
mov
repnz
fucom
mov
repz
repnz
jl
mov
push
cmc
fstl
js
les
push
pop
push
fcomip
dec
fnsave
mov
push
fistpll
test
cmp
xchg
sti
lahf
rcll
mov
xlat
add
xor
ljmp
repnz
stos
pop
mov
jae
loop
sub
mov
lcall
inc
sub
mov
mov
dec
nop
cmpsb
fwait
out
mov
jae
dec
mov
mov
add
cmp
push
lods
lods
shll
int
add
cmp
fwait
lret
loope
push
mov
push
sti
imul
pusha
dec
fnstcw
xchg
mov
mov
pop
jmp
loope
cli
mov
mov
loop
mov
divb
push
fildl
fisttpl
ds
test
adc
loope
xor
lock
mov
inc
fnstsw
fildll
repnz
ds
mov
adc
jnp
repnz
ffree
mov
les
lret
push
ret
pop
jl
mov
xor
push
or
in
in
or
and
push
add
dec
lea
out
popa
into
mov
jno
push
sti
loope
jns
icebp
pop
jnp
dec
xor
shr
ret
pop
roll
push
aaa
fsts
mov
sub
mov
popa
xlat
jnp
loopne
mov
pusha
out
jns
xor
xchg
lds
rcrl
lea
xorl
mov
mov
jg
xlat
movsl
mov
inc
pop
notl
jge
sti
cmpsb
fnsave
jg
repnz
in
insb
jecxz
and
mov
popa
ret
icebp
arpl
call
sbb
xor
fisttpll
nop
pusha
jmp
iret
mov
es
imul
stc
pop
scas
fidivs
call
out
mov
and
ret
insl
lods
ret
stos
loope
sahf
scas
cmp
mov
jecxz
pop
mov
xchg
bnd
ret
repz
xchg
jg
ret
dec
cmp
mov
mov
pushf
dec
pop
in
cli
dec
scas
adc
movsl
push
mov
mov
mov
sarl
lea
loope
xor
jg
scas
lcall
xchg
xor
xor
dec
jmp
or
or
pushf
divb
mov
mov
mov
js
mov
sahf
scas
mov
dec
or
in
jle
gs
xchg
xchg
aaa
stc
mov
push
loop
xchg
leave
mov
into
lds
or
jae
or
mov
xchg
jnp
or
xor
ret
adc
mov
push
push
xchg
or
dec
xchg
sahf
mov
mov
add
xchg
rcrl
jecxz
xchg
xor
loopne
pop
sti
mov
loopne
jmp
and
lds
dec
daa
out
push
clc
pusha
sbb
xchg
xchg
repz
pusha
outsb
mov
fnstsw
insl
fiaddl
inc
in
dec
xchg
js
nop
sub
addl
cmp
add
inc
fcmovu
fdivrl
ret
mov
push
clc
xor
jnp
or
mov
scas
mov
and
cmp
xor
cmp
push
arpl
cmc
mov
aaa
loop
pop
mov
or
lock
rorb
mov
iret
jae
scas
out
iret
jg
imul
jno
sbb
cmpsl
xor
add
idivl
xchg
sub
hlt
in
sbb
outsb
mov
pop
fisubrs
fisttpll
mov
mov
push
jge
insl
or
cmc
jg
mov
and
jb
cmp
mov
rcll
jmp
jmp
jmp
lods
sub
and
popa
imul
inc
mov
stos
cli
lret
jge
je
mov
stc
outsl
xchg
rolb
aaa
ficoms
or
or
xor
rcrl
and
jl
lret
lret
pop
pop
rorl
jle
in
dec
xor
push
andl
clc
int
mov
push
fcoms
xor
mov
push
jae
lds
cli
aaa
insl
jae
xchg
pop
add
and
mov
ret
mov
addr16
test
jae
fbstp
push
gs
out
ret
push
jno
and
pushf
cli
jno
sub
lock
loope
mov
stos
cmp
fisubs
imul
rorb
inc
push
inc
popa
add
ret
or
pop
popa
mov
icebp
jae
pop
out
movsb
cld
gs
jb
mov
bound
fsubrl
push
xor
popf
roll
es
arpl
loop
cld
or
pop
insb
arpl
mov
add
sbb
ljmp
subl
ret
les
loop
sti
mov
and
xchg
je
xlat
jecxz
pop
test
add
ret
sub
xorl
jns
outsl
xchg
or
test
test
add
cs
fimull
jle
fldenv
mov
stos
ret
push
into
stc
add
sbbl
adc
loopne
mov
mov
xor
push
cwtl
and
dec
cmp
mov
data16
clc
lcall
add
arpl
and
xor
in
fidivl
lods
lods
jmp
mov
dec
and
add
pushf
in
xchg
lret
out
jo
cmpsb
jno
push
addr16
mov
mov
sar
test
in
out
mov
fisttps
dec
pop
mov
xlat
mov
cmpsb
sbb
xor
test
cmp
icebp
ret
jb
jp
or
cmp
dec
push
sub
and
jb
xor
pop
clc
out
cs
push
xchg
mov
mov
xlat
jb
cwtl
mov
pusha
mov
mov
adc
mov
mov
scas
mov
jg
add
jns
adc
fldl
push
ret
mov
js
in
lock
frstor
or
cs
sbb
shrw
push
mov
cli
add
cmp
fnstsw
and
fisubrs
mov
test
int
ds
xor
faddp
xor
xchg
and
add
dec
mov
adc
sti
push
std
and
iret
fwait
stos
lahf
sbb
cs
push
fcoms
imul
add
sbb
push
cmc
lds
mov
bound
arpl
jns
mov
in
sub
cmpsb
loopne
sbb
push
xor
adc
rorl
movsb
cmp
daa
test
repnz
pop
in
cs
daa
mov
jecxz
and
lret
mov
and
out
mov
sbb
xor
jl
jecxz
adc
xchg
mov
add
scas
and
incl
jno
sbb
aad
popf
xchg
cmc
js
mov
in
cmc
cld
sbb
xchg
and
jp
mov
pusha
mov
cmpsb
stos
mov
inc
stc
pop
repz
es
jmp
insl
sti
xor
xor
mov
or
aaa
mov
btr
jne
push
ficompl
mov
pop
aaa
push
sti
jnp
int
xor
mov
push
fcmovnbe
jns
clc
mov
es
push
sahf
mov
push
pop
sbb
fwait
ss
loop
std
call
jae
andl
stc
mov
sub
into
stc
es
fsubl
daa
mov
pop
ret
xchg
inc
ds
fcmove
addb
mov
dec
fidivrs
mov
fists
gs
lret
mov
les
nop
sub
jb
mov
inc
xor
push
and
xchg
jl
addr16
sbb
mov
out
shl
lcall
jb
push
adc
out
pop
icebp
inc
imul
pop
mov
or
mov
mov
mov
and
mov
pop
aas
es
ret
cmc
comiss
mov
push
loop
jecxz
fwait
addr16
outsl
outsl
jbe
icebp
mov
sbb
cmp
iret
mov
xlat
cmp
inc
inc
lods
je
ret
mov
stos
pusha
int
xchg
aas
dec
cmp
into
pop
or
sub
cmpsl
lds
test
lret
inc
mov
mov
outsl
scas
lods
lock
inc
mov
cmp
ds
repnz
hlt
jp
cmpsb
xchg
inc
lcall
cmp
push
push
pop
ja
xor
mov
lock
dec
mov
cs
adc
xor
loopne
enter
imul
mov
xchg
pop
aad
movsb
test
jbe
inc
jnp
add
repnz
adc
inc
out
mov
test
inc
push
pushf
xchg
imul
cmp
les
js
inc
mov
ss
loopne
push
popa
jecxz
mov
mov
sti
cli
cmc
sbb
cmpsb
cmp
cmc
sti
icebp
ret
lods
jo
ficoml
dec
repnz
or
ffree
or
dec
loope
adc
lock
push
call
in
cwtl
adc
jb
xchg
mov
mov
xor
in
scas
pusha
jg
loope
orl
stos
push
std
jmp
xchg
popf
mov
leave
jle
mov
loopne
jecxz
mov
in
jb
xor
popa
add
add
rcrl
push
adc
cmpsb
mov
xlat
push
jne
mov
jg
add
ret
arpl
dec
ret
xchg
fnsave
push
mov
sub
mov
nop
mov
adc
and
xchg
scas
sbb
mov
stc
mov
pop
cld
stos
mov
sub
mov
repnz
add
pop
sahf
mov
repz
pop
ret
pop
jge
cwtl
push
mov
cld
in
xchg
push
in
lock
push
popf
mov
test
loop
shrb
es
mov
ret
aas
mov
mov
scas
or
push
inc
fists
rorb
cmp
or
jecxz
and
repnz
es
xchg
inc
lcall
ret
or
iret
xor
push
scas
mov
mov
inc
mov
cmp
xchg
adc
clc
rclb
jnp
cmp
xor
call
jns
loopne
cmpsl
adc
scas
jnp
mov
mov
test
mov
sahf
push
sahf
pop
js
roll
mov
dec
out
cmp
mov
out
fildll
outsb
sbbb
repz
sub
stos
test
insl
stos
ficoms
pusha
push
sbb
sahf
dec
sbbl
fidivl
mov
lock
lods
aad
adc
and
mov
and
sarb
orb
cmpsb
xchg
push
or
iret
sbb
mov
dec
stc
pusha
fdivl
arpl
sub
mov
xor
shll
add
adc
or
cmpl
sub
pop
nop
mov
arpl
mov
sbb
popa
mov
push
and
xchg
jne
test
mov
or
dec
xor
imul
and
out
out
aad
ficoms
add
sub
jnp
arpl
nop
das
data16
mov
dec
scas
jne
lock
stc
fiadds
cmp
popf
jecxz
filds
out
mov
xor
jmp
mov
mov
cmp
inc
mov
aam
add
inc
jecxz,pn
lahf
shl
push
pop
mov
fsub
scas
aad
in
or
stos
in
shlb
out
sub
int
cmp
ljmp
in
rorb
fisttpll
and
div
call
jl
rorb
mov
movb
cmp
pop
sti
mov
push
loope
xor
ret
lret
pop
mov
lahf
or
push
cmp
xchg
outsl
lret
cwtl
pop
sub
fwait
mov
dec
mov
inc
pop
pusha
fistpll
mov
in
inc
shlb
or
ret
scas
shrl
ljmp
pop
push
xor
jg
mov
dec
inc
inc
pop
push
lret
lret
aaa
rorl
push
cltd
xor
mov
ret
jg
in
or
das
mov
xchg
jno
std
roll
mov
dec
xchg
add
lods
sbb
or
xor
lcall
add
mov
insl
fwait
pop
xorb
out
fldl
cmpsl
dec
mov
div
sbb
adc
popa
push
jne
or
cwtl
mov
insl
add
std
inc
dec
cmp
into
jae
aas
jo
mov
cmp
xor
xchg
jle
rcrb
dec
inc
mov
rcl
outsl
add
and
or
cmp
movsb
lock
and
fidivrl
pop
imul
pop
pop
mov
fwait
xor
je
xchg
imul
mov
scas
xchg
rolb
xchg
lret
cmpsb
jecxz
jg
aad
jle
bound
xchg
pop
imul
push
cmp
mov
ret
sahf
movsl
sub
push
mov
es
add
arpl
fstps
push
enter
mov
and
mov
fpatan
push
cmc
mov
jl
pop
mov
mov
inc
repnz
rol
std
mov
sub
sbb
rcrb
cli
lock
xchg
jbe
lock
lds
mov
lods
in
pop
push
cmp
pop
pop
lods
sub
add
xchg
repnz
inc
out
ficoml
xor
scas
sub
sbb
dec
pushf
push
repz
jmp
rcl
pop
out
mov
mov
je
jbe
add
or
mov
in
pop
or
sub
jno
cmp
lods
jb
jns
add
repz
mov
je
push
imul
cmp
enter
pop
out
pusha
xchg
pop
mov
leave
xor
ljmp
repz
jmp
pop
out
je
jl
insb
mov
lea
jae
add
cmc
js
or
mov
lret
xchg
push
push
mov
jecxz
fucomi
cld
jmp
inc
adc
push
add
fs
cmp
cmp
pusha
stos
aaa
outsl
or
jns
mov
mov
call
dec
pop
pop
mov
xor
mov
and
jo
movsb
rcrl
cmpsb
std
xor
xchg
cmp
mov
adc
shl
or
mov
mov
xchg
push
cmp
mov
jecxz
push
dec
lahf
ja
push
lods
aam
push
cmp
ret
mov
pop
inc
mov
xchg
faddl
push
and
adc
and
les
jne
mov
pusha
pop
out
stc
xor
repz
rclb
sub
std
jne
mov
adc
dec
mov
lods
repz
cmp
mov
mov
imul
mov
xor
push
and
pop
xor
sub
mov
aas
icebp
fidivl
dec
ljmp
xor
xor
rorl
es
aas
fs
mov
jecxz
dec
movsb
sahf
mov
or
sahf
fsubrl
js
call
aaa
pop
fisubl
mov
pusha
js
scas
repnz
scas
sti
cmpb
lret
and
ds
leave
hlt
outsl
in
mov
mov
mov
or
dec
push
fcmovne
dec
mov
into
lret
cmp
push
inc
or
data16
pop
stos
push
movsl
jbe
jb
mov
or
movsl
iret
sub
fstps
cmpsb
imull
rol
fstl
decl
ret
cmpsb
into
pop
mov
mov
fbld
adc
flds
push
or
lret
xchg
mov
hlt
iret
add
cmc
lahf
mov
sbb
clc
push
sub
inc
loop
rep
lahf
or
pop
mov
arpl
imul
enter
addl
fsub
push
test
dec
mov
mov
repz
jno
and
int
stc
pop
lahf
or
and
pop
cmpl
jno
mov
adc
lcall
jne
sub
repz
mov
jle
push
icebp
cli
mov
lock
movsb
mov
fstp
loop
in
cmp
sbb
outsb
jae
add
cld
inc
sti
cmp
mov
insl
aad
and
cmp
int3
movsl
and
loop
adc
mov
ljmp
pop
dec
shll
int
add
rol
jnp
xrelease
outsl
ret
test
sti
xchg
cmc
pusha
add
lods
xor
dec
fisubrl
cld
enter
xor
jns
ret
cs
xor
pusha
cmp
sarl
xchg
adc
add
pop
sbb
cltd
ljmp
lret
negl
dec
aas
orb
jge
push
cmp
mov
fucom
sar
in
and
fbld
jb
shr
xor
jmp
sarb
mov
repz
pop
cmpsl
and
add
dec
cli
push
test
adc
outsb
mov
or
pop
or
lock
pusha
adcl
sbb
add
fbld
rcrl
clc
inc
stc
pusha
cmp
mov
mov
pushf
inc
aas
xchg
xchg
mov
stos
sub
cmp
movsb
sub
hlt
xlat
nop
add
add
mov
jns
xlat
movb
jnp
xorl
inc
fnstenv
sbb
xchg
ret
mov
sub
nop
pop
movsb
roll
loope
orl
mov
inc
or
icebp
test
xor
test
iret
mov
mov
in
dec
sub
cli
stos
fbld
popa
out
mov
lea
push
lcall
movl
pop
adc
mov
lods
outsb
push
movsl
das
xchg
out
xor
push
adc
lcall
pop
je
add
dec
mov
dec
clc
cwtl
gs
xchg
movsl
sub
add
inc
in
sub
stc
inc
gs
push
jge
ret
adc
mov
mov
cld
and
adc
or
mov
mov
sub
jb
mov
aad
xchg
jns
or
xchg
add
notb
ljmp
mov
loopne
dec
mov
xor
mov
jecxz
movsb
push
mov
mov
aaa
frstor
inc
adc
cld
lret
je
xor
inc
jo
xor
pusha
fisttpll
cmc
or
inc
pop
or
test
jnp
adc
jb
add
push
and
fimull
fstl
es
adc
xchg
out
xchg
inc
sub
orl
jecxz
dec
hlt
mov
inc
mov
and
pop
out
clc
push
and
dec
rcrb
push
add
rorb
test
adc
pop
fldenv
fnstsw
or
push
orb
loope
addr16
mov
shll
subb
jno
cltd
out
cmc
or
adc
iret
jecxz
cmc
js
ret
jo
arpl
dec
fidivrl
int
or
into
or
repnz
test
sarl
ljmp
fimull
jnp
mov
icebp
jnp
in
push
and
push
jno
loop
cmpsb
mov
pusha
stc
cs
aad
ljmp
xchg
sbb
cmpsl
xchg
jbe
arpl
mov
add
xor
rorb
lret
jno
jg
xchg
shll
mov
sbb
aas
mov
pop
arpl
mov
sbb
mov
mov
cs
fisttpll
add
in
cmp
push
cs
adc
mov
stos
dec
cli
subl
xchg
ret
push
and
mov
imul
sbb
xchg
mov
inc
mov
jecxz
cltd
subl
jb
ret
sub
xchg
stos
push
into
xor
fs
push
pop
add
mov
mov
xor
ljmp
xor
sub
cld
ret
or
mov
mov
dec
lock
mov
adc
into
or
loop
cld
cmp
imul
frstor
jb
cmp
lea
popf
or
mov
xor
dec
inc
jo
adc
xor
mov
loop
and
cmp
mov
mov
jnp
mov
mov
xor
xor
icebp
clc
dec
in
leave
push
out
popa
mov
inc
call
into
ljmp
inc
nop
lock
adc
sbb
inc
fldt
mov
int
mov
mov
es
xlat
js
jns
stos
loop
dec
pop
sbb
xlat
clc
xlat
in
loope
jns
fwait
cmp
jmp
jp
movsl
cmp
sub
mov
hlt
flds
pop
mov
xor
dec
mov
je
push
and
stc
daa
cs
cmp
or
stc
test
mov
int
dec
out
cmpsb
arpl
shrb
repz
mov
sbb
sbb
enter
xor
pop
sbb
sbb
adc
pop
xlat
mov
test
mov
jno
shlb
cmp
push
mov
push
test
std
shrb
pop
sti
fcmove
lock
sub
mov
inc
ffreep
mov
lcall
or
jno
add
xchg
xorb
ja
fcoml
cs
lods
xchg
xor
pop
daa
je
mov
add
in
adc
fwait
loope
icebp
std
push
repz
and
mov
add
cs
pusha
sti
shlb
shl
add
fildll
fbstp
or
pop
in
je
xor
or
mul
mov
pusha
test
sbb
enter
rcl
imul
outsb
into
bound
mov
in
and
adc
cld
inc
mov
addr16
lods
sbb
vpavgw
neg
outsl
loopne
mov
ljmp
fistl
fildl
cli
mov
sbb
cmc
or
jno
mov
ret
mov
pop
icebp
es
imul
out
jns
jne
xorl
lods
and
fcmovu
es
cmpsl
inc
mov
stos
sub
test
in
sub
cld
xchg
test
icebp
or
leave
imul
jecxz
sub
rcr
pusha
mov
dec
fdivrl
mov
std
lcall
cmp
xor
out
stos
or
scas
insb
in
xlat
push
mov
xor
add
arpl
out
addr16
out
loop
jnp
adc
in
xlat
jo
rorb
mov
xor
loope
push
ret
pusha
xor
lret
in
push
out
fiadds
push
cld
fwait
scas
mov
cmp
push
lahf
pop
fmull
ret
jg
insb
inc
fidivl
inc
push
push
push
addr16
fcmovnb
shll
xor
pop
fwait
icebp
ja
loope
xlat
sahf
inc
test
daa
cmc
pop
pop
mov
je
and
imul
scas
add
adc
ffree
sbb
cld
adcb
in
fisttps
loopne
or
pushf
cmc
adc
adc
jecxz
pop
or
pop
or
mov
mov
xchg
pop
pop
cmp
ljmp
cli
sbb
push
cmc
cltd
gs
es
and
xchg
add
aam
xlat
mov
imul
scas
cld
jl
out
jne
dec
pop
mov
lods
and
outsl
xchg
punpcklbw
dec
repz
mov
mov
hlt
lea
mov
dec
mov
sbb
nop
jns
mov
nop
icebp
int
push
cmp
fistl
fbstp
aad
mov
stos
sub
jecxz
in
mov
mov
inc
repnz
adcl
shl
std
movsb
cmp
sbb
out
stos
dec
ljmp
fwait
xchg
mov
cmpl
lds
mov
mov
stos
ja
jb
aas
cmpsb
gs
add
fwait
cli
push
mov
mov
and
fists
rcrl
or
fcoml
gs
xchg
mov
shlb
test
pop
push
negb
lods
aas
push
mov
repz
mov
cmp
xlat
xchg
or
js
sar
pushf
jno
jge
rorb
and
xlat
inc
or
out
mov
inc
mov
ficoml
shl
pusha
arpl
ret
or
cmpsl
repz
nop
adc
xchg
mov
into
call
loopne
lds
mov
jmp
jne
pop
shrb
push
loop
inc
ret
popa
ss
jo
out
pop
mov
xchg
add
inc
arpl
ret
mov
ret
movsb
scas
stos
sub
inc
rcrb
jb
xchg
fsubrs
addr16
inc
pop
inc
cs
mov
jne
aad
sub
insl
dec
cmp
mov
cltd
fmull
cmp
mov
push
sbb
int
outsl
add
aas
mov
arpl
shl
subb
ljmp
push
sbb
scas
fildll
jbe
mov
cmp
stos
stos
insb
fisttps
cmpsl
icebp
mov
outsb
mov
xchg
call
cmpsl
lock
in
jb
movsl
mov
cmpsl
mov
testl
pop
call
stos
xor
jns
jb
lods
mov
shll
xor
daa
popf
lcall
push
inc
jae
test
pop
cmpsl
xor
arpl
std
inc
adc
mov
js
in
add
stc
add
lret
addr16
shlb
inc
cmp
cmc
pop
mull
inc
mov
jo
mov
add
xchg
imul
inc
fldl
js
sarl
mov
shl
add
shll
push
mov
add
faddp
fcmovnu
popf
pop
jns
scas
ret
out
mov
xor
arpl
add
sub
jg
fldt
pusha
mov
jb
push
push
popf
aaa
mov
inc
shl
loopne
in
out
in
jg
add
jecxz
std
sbb
testl
xor
and
cmpsl
pop
mov
insb
adc
cld
pop
ret
mov
jle
add
adc
push
xchg
pop
mov
pop
ret
mov
sti
cmp
aam
pusha
sahf
movsl
cmp
jp
scas
adc
xchg
jno
jecxz
cltd
ret
dec
xchg
and
pop
cld
xor
fucom
sti
or
test
sbb
aad
jns
and
popa
rcrb
xchg
loope
adc
xchg
jmp
mov
jne
rorb
pop
gs
and
mov
js
jmp
mov
jno
arpl
test
je
sbb
jns
cmp
pop
fcomip
pop
repnz
fwait
mov
loopne
ret
mov
repnz
call
dec
sbb
ljmp
or
inc
jnp
aas
lret
inc
fcompl
lods
or
insl
pusha
subl
mov
cmpsb
and
repnz
xchg
cs
call
fimull
mov
mov
inc
test
ja
xchg
sub
fs
xlat
cmp
mov
sub
test
sbb
movsb
aad
mov
lods
xor
push
jg
out
xchg
inc
addr16
mov
ds
movsb
sbb
arpl
add
mov
mov
shll
xlat
in
cmpsl
sub
push
xchg
sbb
dec
pusha
cmp
or
loopne
xchg
mull
inc
int
push
mov
jecxz
in
orb
mov
sarb
xlat
aad
and
add
jecxz
lea
stc
push
mov
pushf
mov
dec
xor
out
push
imulb
pusha
mov
sub
jmp
jb
pusha
xchg
scas
lds
mov
das
frstor
rolb
inc
dec
adc
aam
lock
pop
nop
sbb
jl
push
js
fnstsw
flds
xchg
int
data16
bound
mov
out
sub
push
ds
testl
adc
cmpsl
and
mov
xchg
add
sub
stc
negb
sbb
fldt
fmull
cmpsl
push
idivl
and
mov
adc
dec
arpl
icebp
test
rcr
daa
xor
add
xor
fisubl
jo
push
call
jne
cwtl
shrb
fidivrs
push
lcall
mov
scas
mov
lret
sbb
inc
mov
adc
or
dec
into
fwait
adc
mov
cmp
pop
mov
adc
sbb
loopnew
ret
inc
add
sbb
imul
pushf
xchg
popa
std
push
or
orl
fcmovb
ljmp
in
outsl
imul
sub
mov
gs
add
sbb
add
lcall
mov
mov
jae
mov
cmpsb
cmp
push
les
insb
add
jne
and
repz
loopne
nop
je
cmp
stos
lcall
insl
insl
push
and
cmpsl
add
inc
cmp
mov
xor
and
xor
fsubl
aam
mov
inc
mov
pop
mull
xchg
ja
ficoml
mov
fsubl
inc
mov
push
out
aam
repz
push
fsubr
mov
xchg
scas
stos
mov
cmpsb
mov
fcmovu
aaa
xor
dec
test
ljmp
lods
ljmp
rcll
mov
lcall
sub
ret
mov
xchg
mov
jp
or
stc
or
scas
push
int
inc
outsl
subl
std
arpl
xchg
xor
push
fisttpl
mov
mov
sub
pop
test
inc
xchg
add
mov
or
vcvtpd2psx
jmp
pop
sahf
adcl
push
ds
stc
cmp
fisubrl
pushl
jecxz
addr16
mov
push
inc
out
cmpsb
mov
push
jno
and
mov
stos
jne
in
shlb
movsl
scas
fwait
lea
jp
in
gs
sub
mov
divb
pop
sti
outsb
xchg
scas
push
adc
jne
rolb
mov
mov
shlb
sar
repz
jg
sti
mov
shlb
ds
xor
fucomi
mov
mov
mov
push
pop
xor
mov
std
rcrl
inc
and
cmp
faddp
fildll
fisubl
lret
jmp
push
repz
stc
outsb
mov
xchg
in
rcll
pop
in
add
scas
std
sbb
mov
adc
arpl
push
lret
shll
cld
inc
ja
pop
sbb
jg
cld
outsb
jb
insb
dec
add
lock
clc
pop
jl
xor
sub
cmpl
ret
push
pop
cmp
xchg
stos
mov
stos
pushf
xorb
repz
cmp
out
mov
jecxz
ret
xorl
mov
es
repnz
add
xor
test
xor
pushf
or
pusha
scas
sbb
mov
test
in
repz
adc
xchg
or
hlt
cmc
push
or
pop
push
jmp
cmc
pusha
incl
push
cmc
leave
into
sub
push
adcb
mov
rol
ret
imul
lea
int3
jae
or
stc
sbb
stc
inc
mov
mov
add
scas
out
fnstsw
mov
in
inc
shl
je
shlb
mov
pop
cmp
int
shll
or
shrl
xchg
out
pusha
cld
js
mov
ret
sbb
mov
xor
lcall
inc
dec
fwait
mov
ret
out
adc
in
jl
sbb
sbb
sub
adc
int3
mov
push
xchg
lods
jp
mov
scas
push
pop
inc
jae
mov
jmp
jecxz
arpl
std
push
pop
sub
jl
pop
mov
jb
mov
loop
repnz
lret
iret
xchg
pop
gs
sti
lret
rep
arpl
fucomip
in
xchg
mov
imul
in
sbb
int
mov
push
or
inc
push
pop
cs
jle
and
push
sbb
push
std
and
jmp
push
cmpl
mov
push
xchg
cmp
xor
add
div
ss
xor
jmp
outsb
pop
js
loope
mov
jmp
inc
arpl
fwait
push
jmp
cltd
es
fcmovnu
xchg
loopne
xor
rorb
mov
mov
cmp
into
sti
std
shrb
fsubr
or
mov
pop
cmpsl
or
cmc
lock
jp
nop
fbld
push
xlat
mov
mov
aas
xor
push
repnz
movsl
aaa
shr
not
fadds
sahf
jns
mov
lahf
repnz
imul
xchg
out
jle
out
inc
rclb
sarb
ds
in
rcrl
mov
sahf
add
sbbl
std
ljmp
ja
fiaddl
inc
outsb
jecxz
rcrl
pusha
in
xchg
cmc
pop
ret
insb
andb
jae
xor
pop
sbb
ja
push
push
inc
test
shl
mov
adc
aas
fdivrs
leave
ds
jnp
shrl
in
xor
jge
imul
sahf
ljmp
push
jae
pop
push
sub
push
mov
cltd
push
mov
mov
sbb
mov
and
xor
gs
adc
scas
jae
aaa
jae
mov
out
push
add
outsb
testl
imul
js
or
cmpsb
popf
es
cmpsb
xchg
lods
sbb
bound
addr16
sub
sbb
mov
xchg
or
mov
cmp
sbb
rcl
sbb
sbb
cmpsl
cli
icebp
mov
loop,pn
aad
sbb
movsb
adc
xchg
sub
mov
jbe
cmpsb
pop
es
mov
roll
mov
dec
mov
ret
enter
in
mov
int
shrl
add
mov
imul
lods
mov
xchg
push
adc
sbb
xchg
cli
jb
push
js
subl
inc
xadd
lods
jae
negb
mov
outsl
add
cmp
pushf
xor
cltd
xchg
in
pop
ds
test
loop
pop
mov
fiadds
test
push
sbb
jecxz
mov
aad
push
or
pop
es
std
call
mov
movsb
sbb
scas
subl
add
add
inc
mov
mov
push
xor
dec
add
push
inc
push
xchg
cli
add
cmpb
mov
jle
or
out
out
fcmovnb
addr16
out
lea
aad
fucomp
stos
sbb
adc
lret
lcall
cli
xchg
imul
cmp
fidivrl
test
dec
jne
scas
sub
adc
loop
orl
dec
in
rcr
push
repz
stc
mov
push
out
loop
loopne
add
jle
xorl
dec
adc
ret
cmp
or
or
out
sbb
pop
ret
fstp
pop
sbb
add
pop
and
and
and
fiadds
push
fld
sti
cmp
hlt
ja
loop
xor
mov
loope
xlat
fldt
shr
out
add
pushf
push
mov
out
addb
mov
fistps
lds
xchg
andb
mov
testl
xchg
add
pop
iret
aas
out
pusha
stc
lock
add
inc
lret
popf
aaa
clc
push
cmpsb
ret
push
add
and
jl
nop
cs
mull
push
dec
pushf
fimull
iret
jecxz
pushf
cmpsb
mov
mov
bnd
jns
xchg
test
add
jnp
inc
dec
leave
scas
in
out
xchg
mov
cld
jmp
sahf
mov
pop
pop
cli
jb
lcall
popl
dec
mov
xor
cmp
aas
mov
fadd
mov
mov
xchg
subl
loopne
push
arpl
xchg
sub
xor
mov
rcrb
lahf
mov
push
jle,pt
and
lds
test
and
loopne
jecxz
pusha
sbb
repz
pop
loopne
shll
insb
push
or
lods
jnp
inc
jns,pt
ret
xchg
test
les
dec
xchg
mov
or
in
jns
loop
repz
cmp
popf
in
sub
add
and
add
movsb
pop
shl
ret
fldt
outsb
dec
loopne
ret
xor
adc
adc
rolb
loop
jae
ret
mov
and
jg
rcpps
aad
mov
shr
add
bound
mov
adc
dec
lds
and
movsb
xchg
cmpb
mov
mov
xor
inc
das
mov
pop
cmpsl
jns
test
loop
hlt
ret
push
or
ret
loop
push
gs
xorl
dec
mov
sbb
sub
movsb
mov
xchg
lret
push
xor
out
rol
scas
xor
stos
pop
xor
lret
xchg
fld
out
add
add
ja
or
add
sub
mov
jbe
fbstp
aad
xlat
inc
pop
outsl
popf
repz
in
or
adc
cmp
shlb
mov
stos
push
adc
leave
mov
das
add
mov
jns
pop
adc
sub
add
inc
cs
mov
ljmp
or
cmp
or
xchg
adc
jae
and
xchg
aaa
sub
or
imul
outsl
or
jge
fcomps
sti
fldenv
negl
pop
mov
jnp
mov
add
xchg
xchg
ret
xchg
fninit
icebp
fdivrl
test
inc
cmp
pop
and
mov
fs
jl
rorb
test
and
xor
xor
inc
lods
jnp
fisttpl
jae
mov
mov
popf
cmp
ret
out
push
pop
lock
cmc
add
adc
addb
cmp
mov
sbbb
mov
imulb
jecxz
jnp
push
fucomip
adc
bound
push
jnp
or
jno
das
addr16
pop
jnp
repnz
insb
cli
dec
xchg
xchg
fildll
test
outsb
push
push
aad
xor
loopne
pop
decb
jg
fsubrs
pushf
sub
jcxz
icebp
mov
dec
push
mov
xchg
les
inc
test
in
jne
and
cmpsb
mov
mov
in
sbb
jp
xchg
xchg
adc
arpl
mov
mov
scas
push
xor
adc
aad
repnz
les
pop
lea
iret
xor
add
in
mov
stos
mov
adc
lret
mov
adc
in
sub
adc
jns
cmp
ja
cmpsb
or
aam
and
data16
add
adc
in
loop
dec
aaa
xlat
pusha
sub
xor
dec
inc
inc
mov
outsb
inc
fs
mov
out
dec
shll
lcall
scas
add
jo
cmp
push
mov
add
js
lahf
shll
rol
outsl
mov
or
movsl
mov
or
cmc
sbb
add
push
pushw
add
repz
sahf
xchg
mov
es
and
sbb
lahf
adc
testl
cmp
xor
sub
add
shl
subl
repz
out
push
hlt
cmp
sbb
ds
jecxz
shll
cmc
adc
and
dec
adc
and
pop
stc
into
mov
fwait
stos
or
cmp
sti
scas
test
push
add
pop
fmuls
iret
pop
testl
push
cmp
rcl
lcall
das
and
jmp
or
mov
ret
insl
jge
dec
addb
or
sub
mov
xor
lret
fsubrp
mov
dec
sbb
lret
jmp
hlt
cwtl
or
mov
jecxz
cmp
repz
dec
out
or
test
or
lret
into
adc
out
xchg
ret
movsl
in
daa
inc
pop
scas
cmp
shl
push
xchg
adc
inc
out
adc
pop
out
adc
aad
mov
hlt
pop
adc
ljmp
sbb
mov
mov
icebp
loop
and
leave
lea
out
repz
ret
pusha
dec
pop
or
mov
mov
lahf
mov
add
lock
jno
cltd
mov
inc
cmc
mov
fisttpll
xchg
push
pusha
movsl
push
pusha
xor
mov
leave
movsl
jecxz
lock
mov
das
jp
adc
mov
ret
arpl
jnp
add
ds
and
add
add
sub
movsl
loope
push
cmp
sbb
mov
in
pusha
cmc
dec
and
fstl
push
mov
xorl
hlt
pusha
dec
cld
ret
stc
push
mov
into
push
jns
push
pop
mov
pusha
pop
mov
push
sbb
aad
test
and
les
push
adc
mov
aas
rcrl
daa
stos
rcr
sub
pop
mov
daa
lahf
adc
inc
js
fcmovb
in
sarl
push
and
adc
iret
pusha
fldl
adc
add
es
mov
cmc
call
mov
push
pusha
lock
push
xchg
fcos
pop
mull
adcl
xlat
repz
cmpsl
mov
insl
scas
mov
hlt
outsl
push
rclb
addr16
xorb
xor
push
mov
ja
add
xor
loope
addr16
inc
jmp
loope
in
jae
in
arpl
repnz
js
rclb
adc
mov
jl
pop
cmpsl
inc
mov
fnstenv
ret
sbb
cwtl
orl
jnp
add
push
iret
mov
jb
dec
je
mov
xor
dec
mov
arpl
out
jae
cli
ret
stc
lea
cmp
add
cmp
ss
jne
icebp
jg
shr
and
xor
clc
leave
push
in
add
stos
ja
rol
ret
bound
mov
mov
orb
add
test
xrelease
cmpsl
out
popa
dec
imul
xchg
stos
repnz
cmpsb
inc
and
cli
dec
lock
inc
pushw
mov
push
or
test
testl
pop
ja
mov
push
fwait
sub
mov
ret
cmp
lahf
add
sub
loope
or
sbb
cld
fadds
pop
call
pop
clc
adc
push
or
dec
or
test
frstor
rcll
stc
inc
push
jmp
shl
xchg
or
shll
mov
fisttpl
lret
and
lahf
jl
sub
pop
mov
push
pop
inc
inc
ret
adc
pop
cmp
xor
adc
or
push
test
lods
mov
pop
mov
icebp
addr16
loope
hlt
jge
pop
jge
gs
jecxz
mov
dec
jnp
and
lock
addr16
pop
mov
repz
jmp
out
cmp
fbld
cli
inc
pop
pusha
adc
std
mov
add
popa
xchg
sbb
stos
lcall
and
sub
repnz
out
shr
fbld
cmpsl
mov
fs
fstp
clc
add
mov
cmpsl
or
lods
lahf
or
insl
mov
xchg
sub
push
jecxz
ja
ficomps
jl
ret
gs
xor
out
mov
xchg
cmc
xor
inc
xlat
dec
mov
call
add
xchg
pop
loop
mov
adc
test
inc
fldpi
inc
adc
add
shrl
lret
bound
push
ds
xchg
cmpsb
xor
adc
or
sub
roll
and
jmp
inc
stos
imul
repz
fldl2e
jl
nop
jnp
jne
ret
mov
push
sahf
push
jecxz
ret
idivb
rcrl
and
cmp
popa
jns
or
loopne
and
sar
and
es
pop
mov
cmpb
hlt
mov
push
add
xlat
outsb
xor
shl
cmpsl
mov
lock
gs
sub
or
mov
and
idivl
mov
or
into
push
dec
jecxz
je
andb
pop
mov
pusha
icebp
mov
into
mull
add
jge
rcll
inc
xchg
in
lret
gs
pop
out
das
ja
xchg
xor
mov
cli
cmp
pop
pop
add
pusha
das
push
test
flds
ljmp
inc
lret
sbb
imul
decl
xchg
push
fstl
push
adc
pop
inc
outsl
roll
cmp
mov
icebp
test
add
sbb
xor
fcmovnb
ror
fstpt
cs
adc
lahf
daa
sub
push
jae
mov
and
shrl
loopne
rcr
inc
roll
shll
rcrl
xor
jnp
jb
cvtdq2ps
add
jmp
inc
mov
andl
test
mov
jmp
jo
xchg
call
jecxz
mov
xlat
test
test
loopne
int
das
add
ret
sbb
add
push
cmp
int
mov
jecxz
ret
or
pop
cmp
mov
sub
jae,pn
std
clc
daa
push
and
sbb
xchg
pop
xor
and
pop
cs
adc
adc
sbb
sbb
dec
push
adc
ret
ja
adc
mov
jno
arpl
fsubrs
stos
aaa
jnp
mov
cmp
mov
pop
adc
push
mov
mov
pop
loope
outsl
and
xrelease
mov
mov
add
mov
shrb
in
cmp
stos
mov
outsl
sub
jns
sti
pushf
in
ja
mov
add
and
std
cli
fscale
loop
mov
cmp
jg,pn
pop
ljmp
lods
mov
lock
stos
inc
shl
sub
push
xabort
mov
mov
xor
das
cmp
loopne
aam
cmp
and
mov
mov
push
pop
xchg
into
gs
dec
loop
xor
aad
aam
jnp
faddl
sub
mov
jmp
add
mov
rolb
sub
or
sub
data16
adc
in
out
sbb
mov
outsb
or
mov
daa
shll
sub
faddl
arpl
mov
out
call
or
iret
pop
neg
dec
int3
jo
movl
fsubl
loope
rcrb
cmp
loope
mov
repz
popf
and
xchg
ljmp
aad
mov
dec
push
sub
pop
sub
fxam
outsl
push
lds
xchg
loope
mov
jge
sbb
je
adc
mov
add
or
movsl
in
shr
stos
clc
inc
ficoms
cs
inc
repnz
add
ljmp
in
cli
int3
pop
dec
lret
lahf
inc
pop
mov
pop
dec
rcr
xchg
insl
xchg
arpl
or
fistps
push
jecxz
jmp
into
rcll
cmp
rcll
out
fs
and
fyl2xp1
xchg
inc
pop
sub
mov
addr16
imul
popa
imul
sbb
jecxz
ds
jle
das
push
sarl
mov
arpl
ret
loopne
cld
push
jp
repnz
push
fstp
ret
ret
into
push
xor
js
leave
lea
pop
mov
nop
enter
cmp
or
mov
and
add
inc
cmpsb
mov
int
mov
cld
adc
ret
lea
add
popf
pop
clc
cld
and
in
in
fnstsw
movsl
mov
mulb
lret
mov
or
arpl
cmpsb
into
fwait
push
jo
jns
fcmovnbe
inc
xchg
rcrl
out
mov
int
push
fstl
movsl
jmp
xor
shll
hlt
pop
arpl
adc
jge
rolb
lock
push
ret
and
jb
pop
push
in
or
arpl
or
mov
mov
mov
mov
lock
scas
shlb
loop
xchg
out
icebp
adc
ds
mov
stos
adc
aaa
mov
dec
mov
adc
lret
jae
ds
les
push
mov
adc
ret
mov
pop
bound
std
mov
jmp
or
aad
loop
sbb
push
loop
jnp
loopne
sub
outsl
ret
xor
push
outsb
cmpsl
mov
mov
popa
push
fsubrs
pushf
mov
and
mov
xor
shr
shlb
dec
mov
xchg
xchg
lahf
xor
mov
dec
adc
or
rorb
adc
sbb
cs
lock
out
pop
sub
pusha
icebp
dec
imull
mov
out
scas
fisttpl
out
pusha
je
repz
or
stc
mov
jg
std
mov
in
mov
xor
aad
and
mov
mov
pop
pop
sub
mov
lods
sbb
dec
outsl
insb
fisubrs
xchg
loopne
pusha
sub
out
xlat
xchg
mov
cmp
mov
subb
lods
outsb
add
cmc
or
sbb
ljmp
jb
jle
imul
fstpl
loop
pusha
dec
adc
nop
outsb
data16
jns
rolb
push
gs
xlat
loop
fdivl
lods
in
lret
sbb
loope
call
or
cmp
mov
repz
mov
mov
push
cmpsb
push
andl
sbb
or
ljmp
psrlw
cwtl
aam
pop
sub
pop
aad
movsb
sub
xchg
jnp
xchg
jbe
lret
adc
or
shll
outsl
jno
cmp
cmc
out
or
and
dec
loope
sbb
ljmp
mov
cmpsl
add
mov
mov
dec
stos
stos
int3
imul
fwait
mov
inc
popf
jg
cmp
pop
push
add
mov
push
rcrb
pushf
addr16
sbb
xchg
xchg
ffreep
sbbl
mov
mov
lret
ucomiss
adc
dec
inc
mov
jbe
jno
test
jecxz
mov
js
aaa
xchg
test
fbld
cmp
jmp
je
ja
mov
rolb
dec
fidivrl
jl
sub
pusha
hlt
xchg
lcall
jle
xor
inc
jg
cmc
sub
test
pop
cmp
sbb
pusha
ret
sbb
lret
mov
push
xor
mov
add
loop
or
inc
mov
aas
loope
sub
outsl
mov
xor
das
lods
icebp
fst
mov
fisubs
call
loop
lea
addr16
rorb
fsubl
lcall
pop
loopne
pop
test
add
orb
notl
clc
scas
repnz
jnp
fidivs
lahf
adc
and
mov
dec
xor
mov
or
loop
push
jns
xor
sbb
test
push
xorb
fiadds
jbe
add
in
nop
jns
outsl
test
lahf
adc
sbb
loop
aad
mov
repz
inc
pop
xorb
jg
movsb
jge
mov
sbb
dec
in
pop
mov
pop
call
mov
divl
inc
jp
sub
fnsave
jbe
mov
mov
push
rcrl
xor
and
loop
into
pop
mov
fidivrl
xorl
mov
jo
add
adcl
jnp
mov
jb
add
xchg
hlt
mov
dec
jne
ret
ret
push
stc
stc
lret
ljmp
out
movsl
xchg
into
or
popa
sub
ret
repnz
sar
jmp
movsl
jg
arpl
jmp
and
push
lret
bound
cmc
push
lret
std
test
loop
adc
mov
cld
add
mov
movsb
mov
inc
test
jmp
fwait
and
xchg
in
adc
imul
mov
loopne
add
loop
fdivl
mov
jnp
aas
mov
xchg
xor
cmpsb
jo
mov
xchg
pop
repnz
push
dec
out
xchg
mov
xchg
sub
int3
jecxz
out
js
cmp
mov
cmp
mov
sbb
ret
push
sti
sbb
jg
outsb
inc
rorb
loopne
sub
inc
clc
lcall
repnz
adcl
icebp
jp
dec
repnz
add
add
pop
enter
cmp
in
out
jae
lcall
and
cli
mov
pop
movsl
aam
mov
dec
and
inc
clc
inc
sahf
jno
stos
shrl
pusha
icebp
arpl
pop
lds
das
in
xor
fstl
jb
int
cli
testl
jo
fs
and
mov
test
fadds
sti
jmp
mov
pop
push
mov
lahf
push
lahf
sbb
lcall
fcomip
loope
pop
inc
ljmp
push
fisttpl
shll
out
pop
sarl
cli
push
add
or
popa
cmp
push
or
daa
mov
xchg
out
fstp
push
ljmp
add
add
pop
add
jge
add
mov
out
out
loope
dec
loop
loope
push
sbb
mov
ss
mul
in
shlb
mov
and
repz
mov
jl
sahf
jno
xlat
rclb
daa
jb
leave
jae
inc
lahf
xor
push
push
repnz
lahf
gs
xchg
addr16
push
push
pop
jb
jg
aaa
xchg
aas
data16
mov
jecxz
rcrb
mov
jne
cs
xchg
imul
adc
mov
ss
jp
sub
push
fisubs
cmp
sub
sub
mov
fstpt
jb
lea
add
dec
loopne
rorl
mov
push
xchg
and
adc
add
sub
sub
out
sbb
shrl
inc
cmp
xor
xor
test
mov
add
dec
shrl
loope
sub
adc
ljmp
cmc
sbb
and
call
out
loop
insb
aam
loop
cmp
pop
test
scas
inc
jle
pop
pop
push
mov
jae
daa
loope
adc
pop
push
pusha
stos
pop
dec
rep
stos
sbb
mov
cli
push
xor
lds
dec
xor
test
adc
divl
fwait
jo
mov
push
cwtl
xor
mov
call
add
bound
mov
jbe
idivl
out
inc
inc
xorb
lock
idivl
push
mov
mov
cmpsl
stos
scas
xchg
inc
xchg
bound
fbld
out
shl
loopne
jbe
dec
rcrb
in
or
sahf
mov
repz
scas
cli
pusha
jg
or
mov
rol
mov
mov
call
out
fildl
sub
imulb
sub
sar
ret
in
sub
aas
data16
push
xor
or
fimull
and
adc
mov
cltd
add
clc
push
orl
repnz
cmp
nop
cs
pop
test
mov
icebp
sar
stos
incb
out
dec
movsl
jbe
cli
pop
jp
je
iret
cmpsb
mov
jge
pop
adc
jnp
mov
dec
mov
les
lock
les
enter
lret
or
xlat
repz
xor
or
pop
and
aaa
popa
mov
test
insl
imul
out
cli
pusha
fimull
and
sub
cmpsl
into
rorl
out
loop
lahf
jmp
push
sub
pop
loope
insl
testb
cs
sti
mov
cld
js
push
sub
cmp
xchg
sbb
lea
mov
mov
lock
lcall
repnz
mov
adc
mov
xchg
sub
or
mov
adc
jo
mov
rclb
jae
push
out
mov
pop
out
out
pop
fidivs
jnp
stos
ret
pusha
mov
jne
in
ds
call
mov
roll
pusha
inc
fdivl
mov
pop
add
or
dec
mov
out
into
jo
hlt
dec
test
shrl
mov
dec
imul
dec
sub
insb
f2xm1
mov
fs
and
shl
pop
jmp
lea
in
les
pop
and
mov
scas
jb
stos
adc
lods
and
pop
out
mov
sub
push
outsl
ret
std
in
jo
lods
out
inc
outsb
aas
jg
xor
loop
scas
push
xchg
stc
loop
imul
std
repz
jbe
mov
cltd
xlat
and
mov
push
imull
mov
dec
xchg
pop
lret
pusha
cmp
sbb
es
inc
shr
out
jno
enter
jo
int3
and
cmp
xor
mov
mov
into
fcmovnbe
lret
popf
cmpl
xor
fnsave
mov
movsb
pop
fisttpll
ret
outsb
insb
xor
repz
mov
scas
mov
outsb
lret
push
ret
ja
jecxz
mov
cmp
push
call
int
adc
push
sahf
push
bswap
pushf
shll
cmpsl
pop
adc
aad
repnz
lea
in
or
sbb
fistl
push
jns
out
mov
mov
jecxz
inc
inc
jle
loopne
mov
lahf
ss
fcmovbe
and
inc
lahf
and
cmc
in
and
jge
jle
mov
or
pusha
addr16
inc
sbb
mov
loop
xor
loope
push
imul
or
add
les
cld
sub
push
lret
in
pop
pop
jnp
aad
mov
xor
cmp
shll
xchg
clc
jne
mov
dec
cs
xchg
jnp
lea
test
flds
xchg
sub
mov
pop
xchg
push
and
fdivs
aas
adc
or
and
jnp
arpl
ficoml
add
mulb
clc
or
adc
sub
xor
aas
pop
sarb
lcall
andl
out
mov
mov
fninit
pop
mov
in
mov
aaa
xor
fadds
dec
jp
mov
mov
loopne
repnz
orl
imul
lcall
or
decl
outsl
leave
adc
jno
ret
repz
inc
ret
sti
pusha
xor
stos
add
push
pop
icebp
notb
repz
xor
stc
xor
addr16
sub
add
repz
pop
pusha
xor
sub
or
out
repnz
repnz
dec
lods
adc
fisttpl
mov
loopne
sub
stc
mov
xor
std
pushf
cmp
jb
cltd
mov
push
jl
mov
jl
aad
push
xlat
scas
mov
add
pop
xchg
and
inc
mov
jp
fistpl
pop
fidivrl
ds
js
rcll
fcmovnbe
pop
cmpsb
lods
jp
xchg
enter
fsts
out
aam
xchg
pop
mov
xchg
aaa
cmp
lahf
pop
movsb
jg
repnz
jb
jle
push
sub
xchg
push
repnz
sub
cmp
push
mov
fnsave
imul
push
lods
icebp
pop
imul
mov
fildl
daa
jno
lock
subb
pop
sbb
ficompl
jle
out
mov
loop
push
jle
pop
push
xchg
nop
out
and
lcall
or
test
push
mov
pop
mov
mov
ficompl
int
mov
mov
movb
xor
lea
mull
sbb
outsb
ds
fwait
add
pop
sub
cs
scas
call
bnd
cmpl
fwait
mov
xchg
push
pushf
ret
mov
loopne
cld
cwtl
lock
lcall
cmc
xchg
mov
test
xchg
add
mov
data16
mov
scas
in
ret
cld
xchg
in
mov
jb
fists
mov
xchg
xchg
mov
test
inc
and
clc
jp
mov
lods
jecxz
adc
outsl
hlt
mov
adc
mov
cmp
mov
ret
mov
push
and
add
sub
add
xor
gs
cmpsb
enter
pop
inc
ljmp
aaa
mov
xchg
es
push
es
push
fisubl
scas
push
lea
add
and
je
pusha
out
es
and
lahf
mov
lods
sbbb
cld
out
inc
repz
ja
jmp
lret
mov
jge
add
dec
xor
out
lea
repz
mov
mov
mov
jnp
mov
xor
lret
out
jnp
xchg
xchg
addb
fldcw
inc
mov
stc
jbe
movsb
mov
cmp
or
xchg
mov
add
mov
xlat
mov
add
in
jo
bound
loopne
ror
leave
stc
incl
pusha
push
lods
mov
jmp
dec
cmp
in
adc
inc
fsubrp
cmpsb
lcall
or
cmpsl
pusha
popa
sbb
aam
mov
and
adc
cmpsb
pusha
add
mov
bound
dec
outsl
xchg
loopne
push
and
add
inc
lock
rorb
xor
and
push
pop
push
cs
in
dec
or
in
sub
dec
leave
and
cwtl
ficompl
inc
je
pop
movb
stos
arpl
xchg
jg
jnp
bound
fldt
aaa
xchg
push
hlt
xor
pop
loop
in
imul
adc
sbb
hlt
lret
aas
sub
out
imull
xchg
or
jns
or
sti
fisttps
nop
inc
sbb
fcmovnbe
push
mov
cmpsb
pop
hlt
scas
mov
mov
and
or
lret
sbb
push
mov
jo
xor
lds
xchg
adc
sub
push
not
inc
pop
testl
push
pop
ja
inc
das
pusha
rolb
ret
notb
mov
mov
out
bound
pop
dec
addl
lret
mov
xlat
call
sahf
aad
pop
outsl
fnsave
decl
inc
add
sti
sbb
lock
ljmp
fwait
adc
adc
fldenv
mov
pushl
xchg
xchg
into
push
les
pop
xor
xchg
outsl
das
ret
cmp
imul
mov
mov
scas
push
scas
pop
test
aas
add
fcomp
xchg
add
mov
jns
scas
adc
jle
ss
pop
fsub
out
out
insb
mov
ret
ret
lock
addr16
repz
shr
mov
cmp
cwtl
fs
jle
push
fmull
xlat
sbb
mov
in
out
fisttpll
mov
je
fdiv
jbe
mov
push
xlat
loopne
mov
rorl
fdivrs
mov
movl
in
out
sti
ret
inc
pop
mov
mov
loope
sub
xchg
push
jecxz
mov
outsl
divl
jp
lahf
mov
ja
loope
imul
pop
aam
movsb
dec
cs
les
imul
sbb
jge
sbb
cmp
pusha
stos
cltd
mov
mov
and
xor
sahf
xor
sahf
repnz
inc
in
cli
loop
es
iret
stos
outsl
outsl
std
push
inc
data16
shll
dec
aam
sarl
sti
rorl
outsl
dec
jp
daa
jb
and
pusha
jp
cld
nop
sbb
fucomip
test
loope
dec
jle
add
test
int
pop
dec
inc
cmp
out
out
aaa
mov
repz
jg
pop
stos
mov
add
in
pusha
push
ret
jecxz
mov
inc
mov
xchg
jg
jno
xlat
cmpsb
mov
in
pop
cmp
inc
add
mov
shlb
data16
pushl
push
cmc
jl
incl
outsl
mov
cmpl
mov
mov
mov
sbb
mov
jne
pop
subl
push
mov
test
push
adc
jne
mov
ljmp
stos
jle
mov
int
adc
rorl
out
jmp
lret
and
and
pushf
pop
orl
lahf
adc
and
mul
jecxz
repz
ret
mov
flds
pop
adc
push
xchg
nop
aam
xchg
lock
repz
push
dec
inc
fmul
scas
sbb
icebp
aas
mov
cmp
push
xchg
xchg
sub
cmp
in
jb
mov
push
cmp
out
cs
loopne
mov
push
xchg
cmpsb
pop
jmp
push
imul
aam
test
mov
lcall
in
push
lock
scas
inc
and
sbb
sbb
popa
subb
in
pop
pop
in
mov
fmull
add
add
and
test
mov
xchg
ficomps
pop
std
hlt
inc
xchg
rorb
aad
mov
stc
stos
rcr
xchg
sti
call
stos
fidivrl
adc
js
fiaddl
add
aad
mov
dec
adc
lods
scas
add
lods
add
outsl
mov
std
push
cmc
cmpsl
lahf
sub
call
dec
es
pop
les
stos
fdivrl
and
lods
mov
clc
outsl
add
xor
imul
mov
icebp
aad
ret
data16
or
enter
xlat
bswap
std
inc
in
or
repz
out
push
dec
and
ret
or
lock
dec
jmp
dec
push
js
sbb
shr
push
mov
mov
pop
dec
subb
aad
lahf
mov
xor
cli
das
int3
not
dec
xor
lods
mov
mov
repz
mov
jge
adc
mov
jns
icebp
stos
mov
aam
jb
lcall
inc
fdivrl
shll
pop
neg
sti
add
mov
sbb
and
aad
sti
cmpsb
sub
in
cmc
push
add
out
mov
fwait
mov
test
cs
mov
cwtl
shlb
sarl
and
loop
bound
mov
icebp
push
mov
jl
lock
adc
ja,pn
lock
and
imul
xchg
loope
pushf
jbe
xchg
lret
dec
jle
out
sar
mov
jg
and
jl
xlat
mov
lret
sbb
xchg
in
dec
in
loop
inc
aad
cli
dec
push
imull
jbe
rcrl
in
fsubrs
add
lock
mov
xchg
push
cmpsb
push
popf
mov
jne
rol
jo
sub
shr
push
fwait
daa
pop
push
sarl
int
jecxz
pop
stos
fidivrl
jg
mov
xchg
mov
loope
cs
mov
jg
mov
outsb
orb
cmpsl
ret
js
cmpsl
out
sub
mov
arpl
ret
mov
sub
cs
xor
loop
enter
sbb
add
divl
fsts
dec
jae
imul
xchg
inc
push
pusha
les
es
fucomp
lods
pop
scas
dec
into
into
neg
inc
dec
roll
jg
imul
jno
ret
pusha
bound
stos
repnz
lods
dec
push
test
xchg
and
inc
mov
js
ret
pusha
xchg
and
xor
lock
pop
fistpll
fildll
pop
mov
in
lods
addr16
jo
mov
jns
xchg
push
jl
add
pusha
icebp
mov
sub
xor
sub
mov
pop
push
int
cmp
mov
mov
push
mov
xor
mov
js
loop
xchg
or
inc
testl
loope
mov
scas
jle
sbb
mov
into
int
sti
or
stos
or
mov
fnstenv
in
cltd
out
add
mul
mov
lret
mov
jge
out
dec
inc
movb
decl
scas
mov
pusha
cmp
mov
mov
dec
insb
pushf
pop
leave
sub
aam
push
push
test
mov
aaa
sub
aas
xlat
or
orl
or
jecxz
stos
sub
mov
push
inc
dec
subl
clc
mov
xor
mov
jge
hlt
adc
xchg
cli
jne
movl
add
add
jge
stos
cmpsb
aas
lret
xor
nop
clc
daa
pusha
cs
dec
cmpsl
mov
jle
add
push
sbb
mov
sub
add
cld
mov
sbbl
mov
adc
mov
mov
mov
test
das
out
cmp
lea
loope
lea
sub
or
mov
rcll
or
add
jo
cmpsb
pop
aad
ret
hlt
pop
stos
lahf
repz
or
sti
int3
pop
out
leave
jmp
jne
jmp
out
add
divl
push
sbb
cmp
rcl
in
push
mov
out
mov
aaa
jns
shr
movl
in
test
mov
cs
mov
leave
pop
or
sbb
cmp
push
mov
repnz
mov
lcall
add
shll
jae
movsl
dec
adc
pusha
push
lods
pop
fstp
jns
lcall
sti
pop
fmul
push
stc
or
mov
out
or
push
pop
scas
iret
sar
cmc
in
mov
dec
adc
push
mov
xchg
movsl
jno
fidivl
mov
int3
lahf
adc
clc
xchg
pop
clc
icebp
les
ja
inc
sub
inc
pop
xor
mov
pusha
inc
lea
xchg
mov
sbb
xor
sub
icebp
and
aaa
mov
repz
hlt
aas
sbb
inc
pop
mov
movsl
jge
mov
mov
lret
xor
jl
std
pop
or
jbe
fwait
push
push
fldcw
popa
popa
repz
out
or
cmp
sbb
jecxz
dec
cltd
incl
ret
loop
mov
sarb
mov
mov
mov
stos
push
scas
std
enter
stos
inc
insl
mov
mov
scas
scas
loope
adc
fucomi
outsl
dec
cmp
or
sbb
fisubs
add
jno
jae
fwait
jge
xor
jnp
loop
dec
add
ret
fidivl
loopne
inc
adc
fistl
icebp
fbstp
push
cwtl
push
xor
imul
push
lds
mov
push
loop
mov
mov
imul
dec
jo
mov
or
add
ret
ret
in
arpl
ficoml
jecxz
xor
and
mov
dec
cli
cmp
shrl
inc
clc
mov
mov
push
sub
sub
mov
xor
mov
orl
cmc
or
negl
ss
cmp
inc
test
or
jmp
mov
mov
lret
mov
xchg
lret
aas
sbb
stos
pop
pushf
pop
dec
arpl
rolb
out
mov
imul
fnsave
bound
dec
sbb
jne,pt
out
sub
mov
movsb
fs
sub
pusha
scas
jnp
pop
enter
repz
and
xchg
add
dec
addr16
mov
dec
xchg
scas
adc
cmp
jge
mov
fldt
fbld
cmp
ret
xor
movsl
or
xchg
mov
scas
stos
adc
pop
test
sbb
movsl
lret
push
movl
sbb
out
push
add
cld
or
cmp
sbb
mov
sti
mov
aad
mov
iret
stc
in
movsb
int
mov
loope
fnstsw
lea
mov
xchg
js
inc
test
divl
cld
or
mov
mov
sbbl
jns
jge
pusha
lock
movsb
mov
js
rcrb
sti
push
or
pusha
popa
push
mov
cli
mov
je
and
das
and
add
in
mov
cli
pop
or
insl
cmpsl
adc
inc
roll
and
popf
mov
dec
outsb
inc
mov
movsb
and
mov
mov
xor
jne
mov
fld
lret
mov
sub
sti
push
shll
cli
into
pop
fcomi
mov
arpl
frstor
cwtl
std
push
rorl
out
lret
pop
lret
pop
inc
and
js
addb
inc
hlt
mov
dec
xchg
pop
cmp
outsl
push
aas
rorb
mov
inc
pop
hlt
jl
stc
pop
push
and
cmp
ret
fcomps
aad
cmpsl
add
ret
pop
mov
dec
mov
ret
or
add
out
mov
pop
je
xlat
mov
pop
sbb
cmp
test
pop
mov
push
movsl
mov
push
xchg
add
cmc
adc
dec
out
xor
pop
jb
fcoml
daa
mov
adcl
mov
and
movsb
fisubl
sub
out
pop
pop
pop
repz
sub
xor
shrb
mov
ss
loopne
pop
mov
sbb
movsl
adcb
jns
mov
lcall
loope
fists
popf
jo
lock
divl
popf
dec
stc
inc
add
pop
cmp
mov
repz
clc
add
adc
mov
imul
int
std
pop
xor
jnp,pn
sub
out
idivb
adc
stos
sarl
adc
push
pop
sti
mov
inc
jp
fistpll
push
lahf
add
xchg
mov
out
lds
and
add
inc
mov
repnz
add
divl
iret
mov
push
lcall
mov
push
inc
into
cmpsb
pop
jo
mov
sahf
xor
mov
mov
js
pop
adc
stos
sub
mov
or
sub
fnsave
fsts
cli
imul
push
int
inc
push
xor
lods
mov
int3
dec
cmp
lcall
inc
inc
inc
fcomp
xor
pushf
cltd
mov
in
imul
shrb
shll
sbb
test
pusha
add
inc
push
ror
stc
lret
jmp
mov
fstl
inc
out
pusha
ja
repz
imul
mov
jecxz
fldl
xchg
rol
xchg
cmp
jge
xor
add
aad
sbb
add
and
sub
mov
in
nop
fistps
bound
dec
push
and
jmp
in
shlb
div
jno
add
pop
mov
lock
sbb
in
divl
mov
ja
pusha
jmp
mov
rdtsc
loopne
push
or
dec
xchg
bnd
int
into
fcomip
ljmp
jb
arpl
lock
test
fisttpl
pusha
mov
lret
inc
xor
nop
fs
repz
ja
imul
nop
lds
lret
bound
mov
in
and
ljmp
jb
xor
gs
outsl
lahf
out
xlat
mov
hlt
repnz
sti
in
jo
jnp
rclb
inc
loope
add
pop
movsl
cmpsl
inc
insl
cmpsb
pop
dec
mov
pop
lahf
xchg
mov
and
xchg
cltd
add
arpl
jmp
orl
imul
push
sti
out
in
sbb
cmp
ret
ret
mov
pop
icebp
add
dec
mov
repz
push
lods
ja
push
mov
xchg
fwait
shrb
xchg
ljmp
xchg
inc
iret
mov
mov
ret
fisubl
jne
inc
cmpsb
push
pushf
or
mov
jecxz
roll
sbb
pop
lret
cli
cmp
lods
negl
cli
fimull
fnstsw
push
rcll
lcall
mull
in
sarl
cmc
mov
stc
sbb
out
dec
or
or
lods
mov
jecxz
lret
rcrb
sarl
xor
mov
mov
in
mov
lret
adc
jb
sub
mov
inc
stos
and
inc
cmc
mov
cmp
fldlg2
jge
les
jecxz
mov
cmp
fcomi
xorl
jb
push
imul
repnz
and
pop
xchg
and
int
pop
int3
sub
pop
jae
jg
add
out
or
sub
inc
lods
mov
mov
mov
mov
lds
jecxz
mov
popa
ja
lret
sub
mov
in
in
das
ret
add
mov
lods
xlat
repnz
jle
inc
sbb
jno
lods
dec
xor
loope
mov
cmpsb
mov
inc
imul
xchg
imul
int
mov
mov
out
or
loopne
sub
cmp
jg
mov
shrl
lret
ja
mov
mov
xchg
cltd
push
lock
clc
scas
pusha
je
jb
xchg
rorl
cld
js
mov
leave
daa
add
or
imul
fidivrs
and
add
lock
imul
cmp
xchg
cmp
xchg
ja
dec
rcrb
adc
jnp
aas
cltd
adc
xchg
packuswb
cmpsl
or
adc
jno
les
aaa
call
jp
adc
lret
stos
jecxz
push
or
jg
outsb
repnz
stc
xchg
jo
lods
repz
push
and
mov
pop
lret
mov
pop
fisttps
xor
mov
xor
add
pop
inc
jecxz
testl
mov
dec
mov
pop
push
push
fsubrs
mov
jge
mov
fs
ret
clc
mov
repz
leave
fisubrl
xor
sub
scas
xchg
or
loopne
lds
cmp
inc
jmp
push
dec
dec
xchg
jecxz
pop
filds
popa
test
pop
cld
cmp
and
mov
lods
push
fists
lret
xchg
push
lock
push
notb
and
sub
adc
pop
js
jmp
fildl
in
cld
mov
mov
iret
pop
ds
mov
push
mov
or
addr16
je
out
loop
jp
xchg
or
test
pop
or
adc
clc
cs
dec
adc
loope
loop
repnz
mov
pop
jg
sar
mov
and
sub
leave
adc
loopne
aad
pop
aad
mov
int
sub
mull
lods
cmpsb
icebp
and
repnz
mov
push
mul
add
ljmp
int3
push
cmc
pop
push
js
cmp
out
pushf
pop
mov
sbb
lods
loopne
dec
outsb
sub
inc
mov
subl
jb
fdivl
call
or
push
fsubrs
sti
clc
sbb
push
les
jno
sti
clc
jne
sbb
scas
repnz
clc
mov
and
lret
or
stos
fisubrl
cmp
out
in
add
jmp
sub
rcrb
adc
adc
fs
sub
jle
add
cld
sbb
xchg
mov
add
fcmovnb
shrb
ljmp
iret
mov
repz
mov
fwait
pusha
cmp
dec
outsl
mov
cmp
incb
add
mov
fs
clc
int3
incl
and
addr16
push
jg
mov
and
lcall
or
cmc
hlt
sti
popf
dec
popa
into
lds
fldenv
clc
mov
ret
lahf
in
lock
sti
inc
ret
out
das
in
repz
rorb
mov
jg
mov
loop
mov
aam
test
mov
arpl
ret
leave
and
stos
repnz
idivl
lods
mov
or
pop
jae
aas
sub
jnp
std
sub
adc
xlat
jmp
push
pop
imul
cs
xchg
inc
int
jnp
movsl
popa
stc
fldenv
shll
imul
fstl
ds
mov
push
pop
test
or
int
add
and
sbb
adc
and
add
movsl
and
xchg
and
xlat
cwtl
cmc
fistpll
xchg
int3
iret
aad
sbb
xor
mov
fcompl
push
popa
popa
add
push
add
sub
xchg
add
fst
fldenv
cmpb
and
mov
fsubrl
in
xchg
xor
cltd
sub
cli
mov
xchg
mov
cmp
push
in
incb
push
inc
js
jp
jecxz
push
sti
jmp
lahf
repnz
add
mov
or
popf
mov
int
ss
and
dec
jg
sub
push
ja
out
in
popf
movsl
and
shrb
lcall
shl
inc
popf
adc
loope
adc
push
pop
sti
push
inc
aad
add
jecxz,pn
out
test
mov
clc
xchg
outsl
lret
stc
lods
mov
lahf
repz
fwait
test
rol
rcr
mov
cmpsl
repz
jmp
outsl
add
fcmovbe
pusha
mov
jg
xor
xlat
mov
adc
pop
add
xchg
sti
mov
add
addl
js
cmp
aad
rcrb
mov
repnz
add
mov
xchg
lods
nop
push
and
cmp
je
mov
fstps
sti
cld
jg
out
mov
jmp
dec
inc
jns
mov
inc
xchg
push
andb
inc
jge
mov
push
mov
or
mov
lahf
mov
inc
jl
out
arpl
std
mov
inc
lods
jmp
push
imul
cmp
stc
stc
ret
adc
pusha
mov
movsl
mov
shlb
ret
pop
cmpl
fiadds
mov
sbb
xor
cwtl
mov
xchg
ss
insl
add
xchg
repz
cmp
add
and
dec
cmpsb
div
xor
fcoms
movsb
and
ret
mov
adcl
jge
pop
dec
outsb
sub
push
pusha
std
hlt
push
fdivrs
mov
and
jne
mov
mov
pop
mov
fbld
pusha
mov
jge
inc
adc
cltd
lods
xlat
pop
inc
mov
cli
arpl
sbb
mov
adc
ja
push
adc
in
in
and
jno
mov
movsb
xor
sti
mov
decl
sbb
xor
leave
adc
inc
mov
in
push
enter
dec
mov
fidivs
cmc
inc
leave
enter
test
mov
orl
in
pushl
mov
mov
jnp
jecxz
rorb
add
jle
scas
gs
xchg
mov
aas
jmp
leave
push
cli
cmovg
das
ret
repnz
clc
popf
addb
test
sub
cli
dec
inc
mov
cmp
pmaddwd
or
ret
int
xchg
test
mov
cmp
gs
outsl
out
pusha
stc
push
stos
fisttpll
jnp
movsl
mov
arpl
jne
inc
shlb
and
push
push
jmp
stc
adc
mov
gs
mov
adc
jo
fisubrs
jnp
push
cmpb
add
adc
jb
and
push
xor
fstpt
or
scas
and
cmp
or
lret
push
daa
jge
pusha
scas
adc
inc
lret
hlt
and
jecxz
or
mov
jae
ret
pop
mov
jbe
iret
inc
fsubr
pop
adc
cmp
jl,pt
and
clc
aaa
jb
jae
sbb
adc
ret
mov
push
pop
loopne
cmc
imul
repnz
out
fildll
mov
ret
mov
repz
sub
pop
pop
sub
mov
les
shlb
insb
adc
mov
rcl
out
aam
lock
mov
out
insl
mov
orb
je
cld
push
and
push
shrb
mov
aas
inc
out
jecxz
scas
arpl
iret
dec
rcrl
mov
xor
in
movsl
xchg
nop
inc
adc
dec
xorl
mov
roll
jne
faddl
cwtl
mov
shlb
push
mov
sub
cmp
xchg
sbb
aad
push
loopne
and
jl
movsb
mov
cmpsl
add
sbb
mov
cmc
ss
and
add
adc
lock
dec
sbb
lds
or
xchg
push
mov
jnp
ret
xchg
fs
call
dec
add
call
jp
stos
cmp
outsl
mov
mov
mov
ss
arpl
jmp
or
mov
xchg
cmp
jae
xchg
jge
mov
sub
ja
mov
inc
loop
adc
sar
mov
ficompl
xor
js
xchg
mov
scas
fbld
ret
mov
nop
mov
mov
sbbb
xor
aas
pop
pop
jns
sbb
xchg
mov
jb
adc
aas
xor
push
enter
mov
adc
mov
push
dec
lea
or
lock
push
cmpsb
cld
xchg
and
push
jne
push
xor
imul
cltd
pop
dec
mov
inc
daa
mov
xchg
mov
add
pusha
mov
repz
add
inc
movsl
mov
out
or
ja
lahf
xor
push
frstor
xor
cmpsb
push
rcrl
loope
and
loopne
shl
fiaddl
in
and
mov
imul
push
dec
pop
sti
xchg
call
pusha
daa
xlat
or
jnp
movsb
mov
lcall
mov
jae
enter
gs
mov
outsb
mov
mov
cld
mov
cltd
mov
clc
sbb
mov
test
fwait
push
jno
into
jb
dec
jne
push
insl
adc
arpl
or
inc
or
divl
shll
cs
popa
inc
inc
xor
rcll
sub
gs
jae
or
clc
sbb
mov
ret
or
outsb
jnp
mov
xor
mov
mov
jo
les
pusha
xor
mov
loop
sarb
loopne
jge
xchg
dec
jno
sbb
push
mov
arpl
jmp
pusha
push
pop
sub
scas
inc
sbbb
inc
push
andl
mov
jo
mov
mov
sub
ror
lret
mov
jecxz
ljmp
jbe
jmp
xor
push
jae
xchg
inc
cs
in
jecxz
sub
lods
adc
fisubs
test
in
outsb
xor
mov
sub
shrl
mov
adc
imul
and
fldenv
mov
xor
cs
movsl
js
fnstsw
jmp
leave
ret
sbb
fisttpl
outsl
shl
adcl
imulb
adc
mov
jg
dec
push
jns
cs
xchg
andb
mov
mov
mov
mov
xchg
popa
arpl
lcall
arpl
stos
int3
loop
xchg
or
insl
jno
xchg
xchg
popf
cld
out
inc
stos
adcl
jecxz,pt
xor
bound
pop
or
imul
add
aaa
push
in
add
ror
cmp
cmpsb
add
fsin
es
into
gs
add
and
fdivr
repz
shll
xchg
pop
ljmp
cmc
imulb
mov
data16
push
out
popf
je
addl
lock
xor
adcb
rcll
sub
das
outsl
or
cmp
aam
jno
sub
push
lret
add
push
fidivrl
mov
lahf
inc
out
sbbl
bound
xor
stos
mov
pop
shlb
jnp
adcl
fistpll
shlb
adc
inc
mov
xchg
mov
mov
pop
pop
in
sbb
int3
rcl
fbld
sub
ljmp
xor
jo
test
mov
stos
adc
fisubrs
insb
in
add
orb
shll
sub
fmul
mov
out
inc
inc
sbb
mov
fcoml
sbb
fs
aas
push
sbb
jnp
adc
ret
inc
fistl
das
lahf
or
mov
or
ljmp
mov
loop
fucomi
aad
mov
pop
cmp
jae
xor
ret
mov
xchg
cmpsb
lahf
xchg
cmp
pop
jne
outsl
adc
jb
mov
repz
jne
fisttpll
sub
add
mov
push
out
ljmp
mov
movsb
jnp
mov
or
shr
add
push
jp
add
arpl
mov
sub
shl
mov
jmp
cvtps2pi
jae
lods
decb
push
mov
std
andb
inc
iret
and
subl
mull
test
mov
jb
ret
mov
scas
aas
mov
sbb
pop
out
and
out
popl
inc
loopne
add
xchg
mov
imul
lahf
inc
sub
adc
cmpsl
stos
mov
fcmovbe
pop
and
loop
das
add
mov
int3
std
lods
imul
dec
lret
inc
ret
bound
jmp
mov
bound
jmp
cmp
jmp
and
icebp
idivb
push
cmp
rcl
scas
sub
cli
adc
addr16
fiaddl
pop
shlb
aam
jecxz
inc
fidivrs
pop
xchg
dec
stos
inc
dec
mov
jb
xchg
xor
and
sub
sbb
pusha
fcoml
fst
fisubrs
push
in
test
mov
lea
mov
subl
fs
inc
pusha
lret
lock
pop
xchg
mov
mov
sti
ss
shlb
cmc
and
cmp
in
xchg
scas
cmp
mov
fwait
rcr
js
lea
movsb
cmpsl
mov
mov
sbb
jo
mov
or
imulb
mov
mov
mov
mov
push
mov
and
hlt
push
jno
push
dec
shll
mov
test
or
inc
xchg
subb
xchg
sub
fistpl
mov
in
nopl
add
mov
repz
into
add
pop
jns
sbb
mov
mov
cmp
loope
mov
outsl
push
lea
imul
dec
aad
ja
sbb
fisubl
adc
or
mov
arpl
or
pop
out
dec
xlat
shr
xor
mov
rcl
imul
adcl
test
xor
pop
adc
cwtl
ret
stc
xlat
scas
mov
mov
call
fiadds
mov
daa
cld
lods
cmp
cmp
repz
add
adc
mov
lcall
js
sbb
xor
cmp
mov
addr16
pop
jns
push
aam
iret
gs
outsb
or
stos
push
stos
jb
das
mov
rcl
xchg
fptan
ror
sbbl
pusha
cmc
lods
xchg
ret
fnstcw
fisttps
cmp
sub
mov
stos
nop
push
shrb
push
jb
sbb
mov
xor
out
push
jne
mov
test
cmp
mov
mov
lods
shl
pop
xor
addb
pop
bound
add
mov
adc
ret
jae
scas
lahf
pusha
push
jno
fiaddl
xor
stos
and
xchg
popa
mov
xor
jb
jmp
jecxz
mov
roll
inc
xorl
sbb
loopne
movsl
rorl
xchg
repz
test
aam
add
cli
movsl
mov
mov
clc
xor
call
mov
loope
sbb
hlt
sbb
repnz
inc
shl
icebp
mov
xchg
pop
out
orl
rcrl
push
frstor
test
xchg
add
lahf
cmp
sbb
filds
jnp
repnz
loope
aaa
xlat
xchg
pusha
push
rcrb
pop
clc
and
sub
in
test
mov
mov
pop
js
in
je
dec
ja
pop
popf
mov
rorb
add
adc
sub
adc
jl
mov
xchg
mov
add
fmulp
cld
mov
in
dec
jp
aad
push
pop
in
incb
pop
mov
inc
cwtl
das
gs
stc
cltd
shll
iret
mov
aas
pop
xchg
mov
xchg
pushw
push
pop
mov
inc
scas
pusha
jge
or
mov
stos
mov
inc
insl
xchg
push
cli
sub
out
jp
sbb
fcmovnbe
jae
add
mov
cmp
int
xchg
arpl
stos
mov
or
pop
movsl
rcr
pushf
push
sbb
scas
mov
aaa
add
jno
inc
popf
sbb
inc
sbb
pop
roll
add
mov
stos
jecxz
clc
fcmovu
repnz
es
ss
inc
shrl
aaa
dec
add
pop
in
xor
jns
hlt
xor
jmp
add
mov
sub
out
int
cmp
mov
clc
sbbl
push
mov
addr16
out
adc
or
xor
repnz
push
inc
icebp
dec
fisttpll
cmpsb
ret
fcomp
lahf
mov
jecxz
ljmp
loop
jns
push
add
jns
pop
xor
dec
mull
repz
xchg
sarl
jmp
addr16
call
push
pop
dec
pop
jo
mov
in
incl
ss
pop
dec
std
js
add
jecxz
cli
mov
insb
cli
bound
pop
or
jg
bound
aas
sub
loope
shlb
in
jp
iret
stos
negb
jae
xchg
addl
incl
stc
jno
xchg
xor
cld
scas
pusha
lods
lret
jg
mov
je
sbb
push
mov
sbb
call
pusha
loope
mov
repz
mov
xchg
dec
xchg
dec
inc
adc
pushw
mov
data16
pop
data16
ret
mov
push
rcr
xchg
or
add
ret
add
cli
inc
cs
sub
into
and
arpl
add
mov
pushf
adc
or
pop
mov
loop
sub
cli
negl
jo
xchg
mov
repnz
ficoms
in
sti
ljmp
xchg
flds
fimull
daa
xchg
shlb
jle
sbb
ret
out
es
ljmp
adc
jecxz
mov
cmp
out
add
push
insl
call
mov
nop
sbb
repnz
jo
jmp
xor
cmpsb
test
mov
mov
cs
aas
adc
out
mov
inc
js
lock
jbe
jae
icebp
sub
rorl
pop
insl
out
ret
js
outsb
cmpsl
loope
push
and
stos
jecxz
rorl
add
outsb
sahf
jecxz
mov
inc
repnz
xchg
stc
mov
jnp
mov
pusha
data16
outsl
rcll
mov
pop
stos
push
mov
fildl
pusha
mov
mov
iret
sti
arpl
subl
jnp
bound
mov
and
cld
sbb
cmp
lret
add
push
and
sbb
jl
push
out
pop
mov
jo
arpl
stc
and
pop
aam
daa
fwait
mov
movl
xchg
roll
cs
into
lock
push
jecxz
pushf
loop
xchg
sti
js
mul
push
push
in
and
sbb
inc
push
push
cmp
inc
sub
and
sub
mov
lcall
repz
int
jle
adc
mov
rolb
mov
lret
dec
add
and
inc
jl
insl
jne
test
imul
stc
dec
pusha
or
ret
jbe
jb
inc
shl
and
or
lret
dec
cltd
mov
cmp
jno
inc
sub
mov
in
arpl
cmp
fisubl
push
fistl
pop
mov
and
mov
jge
jp
push
sahf
adc
iret
stos
dec
adc
cmp
neg
stos
pusha
fdivrl
sub
and
cmp
int3
push
call
jp
ja
bnd
and
mov
ret
cmc
push
std
addr16
jecxz
mov
subb
popf
hlt
ret
cs
jecxz
adc
inc
mov
inc
dec
mov
into
mov
cmp
xor
mov
pop
stos
loop
mov
aad
mov
or
jg
mov
popf
mov
je
jae
lret
leave
and
popa
jae
cmpsl
xchg
adc
push
imul
and
mov
hlt
mov
inc
mov
cmc
rolb
fdivrp
inc
mov
jbe
add
fcmovbe
inc
mov
in
out
ss
adc
add
rcrb
pusha
shrl
mov
ret
dec
jno
lods
mov
popf
xor
cwtl
cmpsb
int
repz
icebp
jg
sub
mov
frstor
fisubrs
inc
add
je
jo
add
in
frstor
mov
sbb
pop
popf
outsl
ficompl
mov
add
cli
cmc
and
out
mov
xchg
call
or
test
inc
cmpsb
aaa
out
lahf
or
loopne
testl
cld
pushf
sub
inc
and
test
mov
mov
xchg
push
cmpl
push
adc
scas
ror
jmp
cwtl
adc
sbb
loop
mov
and
xchg
or
sub
decl
mov
xchg
mov
xchg
jg
jne
outsl
lods
shrb
iret
xchg
lods
stos
icebp
scas
mov
pop
in
lahf
fldenv
inc
inc
jecxz
shlb
or
adc
in
in
and
jle
cmpsb
pop
aam
xorb
in
or
gs
mov
or
aam
push
cmpsl
addr16
adc
mov
sbb
ret
mov
hlt
or
push
xchg
cmp
mov
lret
xchg
push
mov
sar
jmp
xor
sbb
lcall
pop
hlt
js
popf
mov
mov
rolb
lahf
push
scas
nop
mov
jmp
and
adc
int3
fcoml
loope
mov
stos
pop
xor
push
cmp
std
lods
jae
push
sbb
inc
jno
jle
fcomps
push
insb
rcll
xor
mov
movsl
xchg
lock
xchg
jmp
incb
repz
and
add
xor
jae
jecxz
iret
loope
xor
cmpsb
xor
daa
xor
xor
push
dec
jecxz
mov
hlt
jge
jae
mov
inc
push
movsb
pop
mov
mov
rcll
sahf
sub
fwait
add
push
lret
and
inc
lock
fnstcw
pushf
aaa
mov
les
pusha
shlb
mov
out
dec
pusha
xchg
pushf
pusha
imul
aas
pop
and
mov
xor
mov
jp
jne
jecxz
mov
jmp
rcll
mov
adc
jno
push
or
mov
cmp
inc
int
jmp
lahf
push
rcrb
inc
leave
jp
lahf
pusha
notb
sbb
enter
cmp
test
outsl
dec
enter
adcb
pop
ret
cmpsb
pop
jae
inc
mov
xchg
loop
out
es
jb
sbb
outsl
pop
cli
adc
pusha
aam
sub
pop
pop
lock
pop
mov
test
add
mov
gs
ret
mov
jnp
or
jmp
and
pop
fiadds
xorl
push
inc
mov
xor
sub
iret
add
ret
std
mov
shl
jl
vandps
aaa
add
ret
xor
ret
push
sub
push
pop
lahf
mov
sub
jecxz
mov
sbb
rol
xor
cs
fildl
rcrl
lods
push
fwait
inc
sti
inc
test
mov
inc
mov
inc
int3
adc
and
scas
xchg
adc
and
xorl
popa
shrl
pop
fbld
lock
xchg
pop
dec
inc
movsl
mov
push
push
jle
les
dec
and
out
sahf
push
adc
movsl
push
cmovo
repz
pusha
jnp
out
cmpsl
stos
inc
sub
xor
fidivs
cld
xor
pusha
shr
int3
aaa
xchg
mov
mov
scas
and
mov
movsb
xchg
adc
add
aaa
push
dec
mov
cmc
in
pop
loop
and
mov
imul
cmc
jecxz
push
popa
sub
cmpsb
dec
jmp
ds
aad
subl
jb
roll
iret
fistl
ret
cmpsl
sbb
ja
pop
out
jb
push
mov
sub
nop
cli
stc
fs
dec
in
or
jnp
orl
jp
out
mov
sarl
ret
push
jb
or
out
mov
sti
push
popf
imul
mov
scas
push
stos
sbb
dec
push
test
nop
das
imul
pusha
mov
lods
test
cld
inc
sti
int
cmp
dec
filds
xor
pusha
out
ret
in
xor
lahf
pop
push
arpl
lods
arpl
xchg
andl
in
out
fiadds
out
lea
pop
push
push
arpl
in
or
and
frstor
mov
jle
sub
xor
lret
and
dec
mov
jmp
jmp
pop
xchg
in
arpl
hlt
mov
add
in
outsb
inc
inc
insb
ss
adc
push
pusha
sbb
sbb
pop
pop
lods
mov
aad
mov
ffree
out
xor
or
pop
pop
shlb
push
cli
and
push
or
push
mov
mov
add
cld
add
push
cltd
sub
call
add
jne
pop
sub
or
out
idiv
push
pop
add
push
jecxz
mov
ret
add
rclb
lock
push
orb
data16
fstl
mov
faddl
pusha
jne
mov
xchg
loop
fsubr
scas
and
movsl
shr
stos
out
rcr
das
add
cmc
cmpsl
call
fld
add
loope
outsb
xchg
repz
adc
test
ljmp
int
sbb
push
push
mov
sbb
jp
cmp
push
jecxz
xlat
orl
fninit
ret
cmp
pop
push
ljmp
push
sbb
fwait
lcall
dec
aas
and
dec
pop
inc
scas
pop
or
xor
std
push
mov
push
repz
fmull
cs
fwait
test
mov
arpl
push
in
xchg
insb
inc
in
cmpb
icebp
add
push
std
idiv
mov
mov
jae
and
js
push
jb
gs
repz
dec
int
add
lea
and
imul
cs
adc
sub
xchg
adc
dec
mov
fs
add
sbb
xchg
dec
enter
mov
mov
mov
fcomp
push
jno
xlat
roll
or
push
lret
push
jmp
loope
hlt
xchg
neg
xlat
and
out
jecxz
pop
enter
lds
fldl
mov
and
push
jbe
or
mov
mov
in
iret
loope
icebp
mov
sbb
xchg
push
and
push
stos
sub
repz
jmp
jmp
movsb
lret
repz
mov
fcmovnb
int3
jae
movl
or
clc
push
pop
jo
lcall
loopne
jge
push
pusha
je
add
ret
test
cld
fisubl
xlat
or
repz
dec
dec
and
scas
xchg
xor
call
fidivrl
or
bound
aad
mov
adc
mov
stos
push
pop
hlt
pop
dec
scas
inc
and
push
xchg
fbld
adc
mov
adc
loope,pn
xchg
dec
or
xlat
jge
loope
push
sbb
and
mov
pop
adc
adc
push
faddl
in
mov
xchg
and
movb
dec
out
mov
cmpsl
mov
std
mov
add
push
rcll
push
sbb
cli
and
jge
or
int3
nop
dec
sti
pushaw
das
out
lcall
or
jmp
mov
lcall
fwait
dec
mov
mov
jle
testb
outsb
addb
ret
pusha
cli
mov
sbb
xchg
push
ficompl
sbb
shl
sahf
xchg
jno
pusha
ret
bound
adc
jge
jl
lahf
mov
subb
into
scas
test
jmp
jecxz
ret
addl
inc
in
add
jb
test
push
xor
test
mov
sub
inc
pop
js
adc
incl
push
jnp
xor
mov
xor
cmp
mov
test
inc
xor
jb
add
enter
lret
push
sbb
push
dec
sbb
push
loop
ffreep
cli
rol
repnz
mov
jmp
mov
shlb
out
aas
frstor
jmp
sarl
rcrl
scas
std
and
adcl
push
dec
repz
mov
xchg
xlat
repz
arpl
mov
lods
test
cwtl
mov
aad
pusha
call
out
addb
lock
sub
repnz
sub
ja
in
popa
pop
rclb
cld
pop
ret
xlat
fcoms
outsl
pop
mov
fwait
inc
arpl
sbb
mov
sbb
xchg
aad
ret
jmp
dec
sub
jecxz
add
mov
lea
dec
test
pop
mov
adc
fldenv
xchg
inc
jmp
shrl
pop
sahf
inc
int
pop
ds
cli
mov
into
cmpsb
and
jg
lods
stc
add
pusha
ss
stc
cs
pop
dec
mov
mov
push
ja
ja
ret
ret
movsb
cmp
jecxz
loopne
push
pop
js
addr16
pushf
addl
das
int
or
ret
jle
add
mov
icebp
jmp
push
jp
mov
mov
scas
sub
loop
out
xchg
mov
aaa
push
mov
push
bnd
jmp
jmp
std
pop
out
cmp
in
jne
sbb
js
mov
mov
mov
mov
lods
mov
cmp
mov
lcall
aas
stos
pop
jecxz
pop
out
aas
pop
negl
divl
call
int
ret
mov
xchg
repz
fsubs
push
and
mul
mov
test
push
xor
outsl
and
movsl
fildll
push
in
fidivl
pop
push
in
clc
pop
pop
jno
mov
test
arpl
push
dec
gs
sub
jb
mov
aaa
clc
push
in
and
arpl
add
mov
ljmp
mov
fidivs
jg
mov
add
mov
hlt
cmpl
mov
mov
mov
xor
shlb
jmp
add
mov
pop
in
imul
out
and
pop
scas
xchg
cli
cmc
and
repnz
adc
xchg
add
int
lahf
ds
fnstsw
push
add
aas
mov
hlt
jo
mov
lods
int
jae
rorl
xchg
test
ret
aam
addr16
in
test
call
loop
mov
aam
mov
sub
stc
mov
sub
fnsave
inc
dec
xchg
stos
mov
rorl
inc
mov
pop
dec
stc
xchg
adc
mov
cmc
insb
mov
jb
cld
jecxz
add
jae
cs
xchg
mov
insb
stc
stc
mov
loope
pusha
test
inc
jl
adc
inc
push
add
jnp
jecxz
scas
pop
jae
mov
in
dec
push
cwtl
jecxz
sbbb
sbb
arpl
stos
movsl
jp
hlt
clc
shrl
lcall
cmp
push
loope
xchg
stos
mov
inc
push
aas
rol
lret
xchg
jb
xchg
pop
fcomip
mov
xor
mov
cmpb
mov
out
loopne
dec
clc
popf
out
cmc
call
xlat
xor
xchg
hlt
mov
sub
lret
cmpsb
popa
add
sahf
loop
xlat
arpl
test
stos
adc
jmp
not
jg
rcll
cmp
jmp
imul
add
leave
sub
pop
mov
dec
jno
popa
jg
and
mov
pop
cmc
inc
mov
test
adc
pop
filds
or
scas
inc
xor
inc
cli
leave
jno
inc
adc
dec
add
cmpsl
jno
pop
xchg
sbb
rorb
das
pop
mov
xchg
loope
repnz
mov
xchg
shl
lods
cli
outsl
cltd
jp
mov
push
aaa
add
xchg
mov
sub
in
cmpsb
popa
je
outsl
lret
mov
cli
jmp
popf
inc
sub
add
leave
pop
cld
ss
mov
mov
pusha
sbb
push
jg
adcl
ja
scas
sbb
jge
iret
sti
in
push
outsl
mov
sbb
pop
into
pop
fisttps
out
sub
jge
fisubl
lock
arpl
ficoms
test
sbb
cmp
pop
inc
mov
sbb
sbb
sub
repz
shl
jmp
repz
jmp
xchg
add
mov
mov
inc
repz
cli
mov
test
add
cs
mov
fcompl
loope
out
repz
in
jecxz
mov
int3
push
test
stos
loopne
push
out
fcomps
sbb
loope
jbe
das
add
dec
rsqrtps
pop
cmp
inc
xchg
sbb
xor
inc
repz
add
rcrb
jg
int
xchg
testb
lret
inc
lahf
and
push
outsb
jp
in
sub
jne
repnz
pop
mov
inc
or
jb
sarl
jns
in
add
je
out
loope
inc
ss
lock
lods
jecxz
sbb
or
shlb
mov
pop
xor
mov
rorl
scas
add
fstp
push
out
in
fsubrl
inc
jb
sbb
sarb
xchg
loop
jno
into
fstps
fmuls
out
cmp
out
adcb
add
push
out
inc
or
movsb
into
cli
push
sub
sub
leave
fidivl
pusha
lock
jo
clc
and
adc
mov
icebp
js
mov
repnz
out
cli
movsb
mov
stos
pusha
sub
cltd
stos
cmp
daa
ljmp
xchg
sub
sarb
push
or
aad
pop
jbe
hlt
cli
ret
repz
int3
xor
cmp
addb
push
pusha
add
and
fdivl
aas
mov
mov
xor
xchg
add
mov
into
add
out
loopne
fdivr
cmpsb
cs
arpl
sbbb
push
push
hlt
add
in
xchg
pop
scas
ret
movl
out
mov
test
in
pop
pop
stos
and
xchg
fcmovne
inc
repnz
sub
sarl
ss
inc
xor
mov
std
cld
add
out
add
and
xor
jg
sar
loop
aad
scas
add
rcll
pusha
in
ret
add
inc
mov
push
call
fidivrl
fnstenv
jmp
mov
roll
cs
xchg
xorl
std
adc
inc
xor
cmp
add
and
mov
push
loop
imul
sub
xchg
mov
test
notb
adc
pinsrw
in
pusha
xor
mov
lcall
and
or
push
shl
jnp
cmp
cmpsb
sti
mov
add
int
arpl
sub
das
dec
push
push
lea
xor
pop
sub
repnz
inc
fsubl
mov
xchg
inc
icebp
mov
arpl
int3
scas
jnp
inc
cmc
push
subb
pop
int
popa
pop
aam
movsl
cwtl
sbb
dec
lock
stos
dec
add
add
repnz
mov
repnz
stc
xor
ret
call
addr16
push
filds
jae
pusha
push
lcall
jmp
in
mov
negl
and
xor
inc
jmp
mov
and
sbb
lret
sti
pause
mov
ss
inc
sbb
push
in
leave
shll
loope
and
jb
rcrb
icebp
sub
addr16
lods
lret
cmp
inc
mov
lar
fisubrs
jecxz
daa
aas
mov
loope
test
aad
add
or
clc
scas
adc
push
cld
je
test
fstl
stc
cmp
sbb
icebp
stos
cmp
jg
fcoms
mov
mov
inc
mov
rol
pop
pop
out
xor
inc
nop
out
mov
mov
and
sub
push
xchg
pop
std
shlb
ret
movsl
repnz
cmpsb
mov
pop
sub
mov
xchg
adc
adc
and
icebp
shr
lret
pusha
ret
adc
dec
xchg
xchg
pop
insl
push
jno
stc
or
movsb
cmpsl
mov
decb
mov
negl
push
out
mov
xor
hlt
mov
ror
or
and
icebp
push
adc
das
xchg
mov
pop
jno
xchg
fadds
mov
dec
jp
enter
sti
idivl
lret
push
adc
fprem1
in
pop
rorb
in
mov
xchg
dec
cmp
repz
sbb
xchg
movsl
mov
pop
ret
imul
mov
add
xlat
ret
aad
xor
stos
loop
adc
rcr
mov
cli
pusha
add
lret
loope
sbb
cmp
int3
dec
cmp
test
and
xchg
jno
jp
add
xor
shll
mov
adc
jecxz
negl
mov
cmc
mov
ret
cmpsl
scas
mov
fstl
sti
add
xor
xchg
std
movsl
lret
cmp
leave
pop
jecxz
rcl
lock
loop
sub
xchg
mov
cmp
xor
jg
push
ret
outsl
stos
jl
pop
pusha
ror
rorl
cmpsb
jno
pop
sti
sub
in
push
bound
iret
je
imull
test
push
ret
or
dec
loope
or
dec
fistl
jbe
ss
call
adc
mov
lock
jl
pop
sub
push
out
arpl
icebp
mov
cmc
push
aad
gs
jecxz
sti
inc
subl
xchg
xchg
pop
inc
xlat
jmp
sarl
icebp
popa
mov
cmp
aad
out
mul
test
sub
ljmp
push
in
xor
xlat
dec
add
mov
push
pop
xchg
inc
fldl
leave
mov
cld
jge
into
lret
pop
jmp
dec
sahf
loop
stos
aam
std
jecxz
pop
adc
cmp
mull
fidivl
ret
aad
rorl
leave
clc
mov
rorl
rorl
insl
dec
pop
sarb
inc
push
xchg
jbe
dec
mull
ret
adc
pop
shrl
jae
stos
faddl
or
stc
jecxz
subb
aaa
add
jae
dec
jae
rorl
aad
scas
mov
clc
fisubrs
fimuls
inc
or
xlat
rolb
pop
rcll
lods
xor
lods
cmc
jb
mov
mov
aam
fsts
jae
ljmp
dec
fwait
int3
pushf
mov
push
mov
xor
push
pusha
pop
icebp
push
sti
jl
aas
iret
cli
test
andb
dec
lea
cli
jne
out
jb
inc
stc
repz
mov
inc
jg
xor
inc
cli
cmc
add
je,pn
jbe
imul
cmp
and
cs
jge
jecxz
sbb
push
test
pushf
or
call
dec
insl
mov
xor
mov
or
outsb
mov
pop
hlt
add
cs
xorl
sbb
pop
mov
ss
inc
das
neg
cs
js
add
mov
into
test
mov
xchg
mov
sub
roll
mov
leave
push
ret
cli
mov
push
fists
aas
xor
pop
mov
jae
jecxz
movsb
jne
scas
inc
mov
fsubrs
xor
mov
lret
sub
mulb
and
mov
xor
lock
clc
out
cs
dec
divl
sub
stc
mov
shrl
test
mov
int
movsb
push
jl
jne
test
sub
xor
fs
rorb
and
fnstenv
xor
loop
ds
mov
inc
mov
push
mov
test
stos
xor
adc
icebp
repnz
push
gs
jecxz
push
loope
mov
rolb
jno
pop
add
out
in
cld
jl
pop
int3
orl
cmp
cmpsb
add
or
pop
jnp
mov
std
test
mov
pop
xchg
mov
int3
dec
dec
out
out
aas
aad
add
pop
mov
jp,pn
lods
pop
pop
cld
subl
mov
push
decb
frstor
imul
repz
push
jecxz
xor
mov
test
lret
jae
mov
call
mov
mov
cmp
in
sub
push
dec
andb
inc
test
sar
movsl
lds
fsubrl
cmpsl
mov
rolb
loope
and
and
shlb
int3
ss
jle
lahf
mov
mov
enter
stos
add
cwtl
int3
call
pop
or
ret
fistps
lods
pop
cmp
stos
je
push
fnsave
repz
mov
xchg
scas
xor
mov
shlb
iret
inc
push
int3
dec
mov
fisttpll
ficoms
dec
shlb
filds
sarl
inc
pop
add
cs
rcrl
mov
fldl
mov
dec
add
inc
adc
pop
push
jae
xchg
or
push
cmpsb
das
and
repnz
jnp
repz
out
aaa
push
les
movsb
arpl
add
stos
test
sbb
pop
outsl
fsubs
mov
shlb
frstor
xor
pusha
test
imul
push
lods
push
inc
mov
sbb
scas
pop
fbld
loope
jb
mov
outsl
leave
jl
mov
pop
sarl
mov
pop
js
test
lcall
jne
add
addr16
sbb
lret
add
push
ret
jae
xor
xchg
mov
ja
pop
jp
mov
imul
mov
sarb
xchg
sub
fiadds
xor
mov
imul
sarl
pop
sbb
repnz
ljmp
lret
aad
or
xchg
sti
xlat
mov
lds
jb
jne
jg
ret
mov
sub
cltd
mov
inc
jge
cltd
imul
ror
cmp
and
fiadds
jge
pushf
jno
pop
mov
cmp
jns
loope
mov
stos
xchg
cmp
add
add
cmp
inc
arpl
dec
in
mov
jae
xchg
sbbl
mov
or
out
shl
lahf
jg
pop
jge
mov
out
cmp
sub
lcall
push
cmp
xchg
sbb
dec
jae
pop
inc
xchg
pop
lcall
ret
scas
addr16
cmp
push
cwtl
pop
and
xor
sub
mov
jmp
pusha
aad
xchg
pop
sub
icebp
mov
pop
loopne
cmp
pusha
jmp
or
or
mov
ljmp
push
dec
inc
inc
cmp
rcr
cmpb
lahf
dec
cmp
xor
decb
in
push
movsl
adc
insl
es
mov
jae
out
insl
lods
movsl
insb
jg
jb
push
arpl
add
shll
inc
mov
push
push
call
inc
push
out
jge
int3
movsl
sbb
sbb
jns
jmp
xor
jnp
mov
or
mov
decl
jns
sub
cld
stos
push
mov
fistl
or
mov
das
inc
fisubl
mov
sahf
call
in
fisubs
cwtl
cmpsb
stc
xor
xlat
jae
or
push
pusha
loope
xchg
and
push
clc
inc
push
cli
movsl
inc
int3
scas
lods
mov
pop
mov
loope
rcll
mov
inc
add
add
lcall
repz
sbb
aad
std
push
test
push
fwait
repnz
lock
imulb
sbb
pop
xor
xchg
push
shlb
mov
sti
stos
pusha
mov
ret
add
xchg
mov
jg
and
stc
iret
and
jecxz
fcoml
push
adc
ret
pop
push
orl
jne
and
xor
cmpb
sti
lret
jnp
mov
jle
add
jnp
fs
sub
jb
xchg
lods
into
imul
push
in
xchg
repz
outsl
xchg
dec
lea
std
or
stos
mov
sbb
imul
mov
adc
aam
pop
xchg
jb,pn
std
xchg
enter
subl
out
push
cli
pop
cld
pusha
sti
mov
out
inc
inc
ret
xor
inc
adc
cmp
mov
sti
xchg
scas
sub
and
in
mov
jnp
hlt
add
iret
das
xor
loop
pusha
rclb
frstor
sahf
loopne
test
cli
rcrl
jecxz
adc
xor
icebp
pusha
cli
push
icebp
movsl
cmp
push
lcall
xor
jns
scas
adc
jb
ja
in
pushf
or
sti
stc
xchg
pusha
nop
adc
repz
hlt
aam
jnp
mulb
clc
hlt
and
movsl
outsl
repnz
mov
xor
xor
loopne
jg
inc
xlat
cmpsb
orb
jae
pop
pop
stos
shll
loope
call
loopne
pop
or
sbb
rorb
mov
pop
xchg
sti
je
cld
and
fwait
add
rorl
inc
cli
push
outsl
or
inc
insl
aad
xor
scas
or
inc
lods
in
arpl
mov
sub
mov
mov
adc
nop
adc
jne
hlt
sbb
test
movsb
pop
mov
and
mov
into
dec
and
push
repz
filds
ret
loop
xchg
add
mov
lahf
popa
mov
bnd
std
ds
mov
clc
or
outsl
out
dec
mov
out
push
arpl
addr16
xchg
adc
jb
scas
jecxz
jbe
mov
pop
loopne
mov
cmp
push
rcll
rcrl
int
xor
fimuls
sbb
sti
mov
xchg
in
inc
mov
push
mov
sub
ret
pushf
in
loope
pop
hlt
xlat
pop
stos
sti
scas
loopne
repnz
popf
icebp
out
loopne
repnz
push
mov
clc
sbbb
mov
adc
vcvtps2dq
adc
mov
mov
mov
add
sti
push
out
pop
mov
xchg
jno
imul
xor
mov
mov
mov
mov
pop
mov
loop
mov
xor
loop
lods
sar
mov
rcl
fldl
lods
lcall
insl
pop
cs
bound
jb
inc
cmp
mov
stc
mov
jl
pop
dec
sarl
push
les
jmp
inc
jnp
mov
cmp
shrl
fnsave
data16
push
scas
out
loopne
daa
push
xchg
push
ss
mov
pop
pop
push
push
cmpsl
mov
xchg
push
jne
mov
and
imul
pavgb
or
cld
pop
xchg
ret
adc
rclb
sub
fs
pusha
cmpb
jp
ret
inc
cld
adc
and
inc
xor
mov
je
push
test
aad
mov
aas
dec
arpl
sbb
sub
add
dec
jge
inc
clc
ljmp
push
adc
fisubrs
stos
stos
fidivs
mov
aad
jg
hlt
xor
add
sub
mov
lret
movsl
jecxz
aas
pop
xlat
lea
add
xchg
incl
pop
xor
adc
sub
lock
push
rcll
mov
aas
adc
pop
inc
push
filds
cltd
add
inc
cmp
movq
mov
dec
cmp
or
xor
jecxz
rcrl
insl
cmpsb
add
daa
sub
stos
aaa
lods
sub
hlt
rolb
add
in
mov
push
iret
push
jmp
add
cmpsl
insl
dec
mov
ret
push
sub
in
rcll
xchg
nop
lock
sub
adc
mov
pusha
mov
aad
addr16
repz
fadds
add
pusha
aaa
xchg
sbb
add
pusha
cli
or
add
jb
movsl
pushf
enter
out
loope
sbb
lret
rolb
aas
mov
add
jb
stos
or
ret
pusha
jo
test
insl
out
add
add
mov
xchg
dec
enter
mov
or
test
loop
mov
andl
sbb
stos
js
ret
pusha
xor
rcll
jne
and
int
fsubrl
pop
adc
mov
push
pop
inc
dec
out
add
or
std
addr16
stc
insb
mov
shl
xchg
icebp
das
ret
xor
icebp
push
inc
ret
push
xchg
cmp
cmpsl
jecxz
or
mov
ret
ljmp
incb
out
inc
xchg
and
into
jb
push
inc
pop
ret
or
adc
sarb
xchg
ja
mov
fwait
pop
insl
inc
mov
out
cmc
cmp
push
ret
shll
jno
aam
nop
fidivrs
xchg
arpl
mov
xor
mov
push
sub
cmp
ret
jo
pop
mov
pop
outsl
movsl
or
xor
jg
or
adc
mov
adc
jae
lcall
imul
adc
lahf
pop
push
jg
lahf
mov
shl
jno
inc
ljmp
pop
mov
and
jecxz
push
xchg
lea
ret
push
or
pusha
pop
cmp
roll
jl
pop
insb
movsb
fidivl
shlb
enter
aaa
push
or
imul
xor
push
mov
mov
jp
addr16
add
lcall
push
inc
scas
inc
pop
outsb
scas
and
lea
test
mov
outsl
lcall
repz
or
push
mov
sub
mov
xchg
jl
cmp
sbb
mov
or
mov
push
test
mulb
addr16
cmp
orl
fs
inc
aad
push
jno
xchg
inc
imul
fs
jne
bound
loopne
outsb
fiadds
mov
sbb
push
stos
add
sarl
and
in
loop
ret
iret
adc
scas
or
dec
outsl
push
cmp
subb
faddl
loope
dec
rol
lea
mov
adc
ret
inc
adc
xchg
mov
dec
mov
mov
and
sbb
cmp
xor
leave
pop
and
cltd
cmp
adc
mov
mov
mov
jmp
jae
aaa
push
ret
sbb
mulb
ljmp
xchg
jl
adc
lods
out
sbb
inc
frstor
fsts
fld
ret
fldt
repnz
loop
scas
lods
mov
shlb
or
mov
cwtl
and
mov
jl
sbb
aas
out
push
ja
push
jns
stos
leave
outsl
add
fnstenv
clc
std
andl
xchg
xlat
sbb
out
pusha
repz
je
lods
jo
inc
inc
in
inc
cmpsb
adc
ret
aad
scas
sbb
popa
mov
mov
and
lahf
push
sub
lahf
aam
cmp
jnp
nop
ja
mov
shlb
sub
sub
test
pusha
mov
cmp
repnz
inc
fstl
fstpl
mov
std
pusha
sub
adc
into
pop
cmpsb
fnstcw
roll
mov
mov
xchg
inc
mov
sbb
mov
ret
nop
out
movsl
adc
add
lret
rep
mov
mov
adc
dec
mov
subl
out
aam
lret
xchg
add
or
or
jae
pop
mov
jp
out
xor
sub
add
or
add
lret
rcrb
add
out
ret
jecxz
rol
leave
jns,pt
lcall
push
dec
cmp
xor
jmp
scas
daa
push
mov
cmpsb
out
adcl
sbb
icebp
cmpsb
jb
lock
iret
cmc
dec
sarl
out
xor
mov
pop
cmpsb
fisubs
xchg
icebp
iret
sti
and
push
xchg
pop
add
lahf
ret
pusha
adc
ret
lock
cmpsl
add
push
loope
mov
cmpsl
pusha
sbb
inc
stos
pusha
mov
add
sub
sarl
xchg
xchg
xchg
cmpb
cmp
pusha
rolb
in
in
ret
pusha
dec
jnp
popa
mov
mov
push
inc
lret
pusha
ljmp
cmp
jb
cli
sti
mov
repnz
xlat
ja
fadd
adc
rcll
mov
fistpll
arpl
hlt
mov
ret
in
mov
pop
loopne
jmp
fisubs
jo
shlb
jno
test
out
pusha
andb
pusha
mov
mov
pusha
add
xchg
cmp
jno
mov
jg
imul
in
aas
add
lcall
inc
mov
movsl
repnz
lret
jl
aas
aaa
sbb
cmp
jno
cmp
jecxz
cli
out
cmpl
addl
inc
pusha
ds
mov
cli
test
cli
test
cli
test
cli
movsl
sbbl
pop
pusha
sbb
movsl
andl
addr16
mov
cmp
subl
outsl
pusha
pop
cli
movsl
gs
pusha
lods
movsl
fcmovnbe
ja
and
adc
movsl
cmp
cmpl
push
inc
mov
pusha
out
shlb
pusha
aas
movsl
popa
mov
pusha
push
lods
popa
pop
pusha
subb
lods
popa
xchg
mov
fwait
pusha
xchg
lods
jl
jg
jno
mov
or
mov
ret
jge
hlt
mov
fwait
stos
outsb
jp
jmp
add
cli
scas
inc
mov
ret
jl
mov
sti
jns
leave
add
test
out
inc
rcl
jg
leave
inc
stc
jnp
test
push
or
push
sbb
mov
xor
test
sbb
mov
out
mov
mov
xchg
ret
test
pop
mov
aam
push
fiaddl
jp
loop
bound
mov
ret
push
push
out
lcall
stc
stos
ss
xor
stc
mov
cs
lret
inc
adc
ret
std
lods
stos
scas
dec
out
mov
mov
cli
ja
mov
ret
test
or
repz
ret
test
sub
ret
xchg
mov
push
cmp
push
aas
jecxz
mov
test
int3
scas
sub
jg
xchg
stos
shll
jl
push
fdivp
xchg
pop
adcb
and
insb
pusha
cmp
testl
dec
or
xchg
and
data16
xchg
mov
fistl
out
mov
addr16
mov
jg
jg
xor
lods
in
xor
stc
cwtl
inc
out
add
int
jnp
and
mov
inc
mov
scas
js
js,pt
ret
cmp
inc
sbbb
mov
int
pop
jae
mov
jle
arpl
sahf
test
divl
mov
mov
mov
and
repz
mov
nop
movsl
icebp
fisubs
jbe
inc
fisubs
rolb
jns
xor
xchg
out
aad
add
rcrb
movsb
out
bound
dec
xor
bound
es
js
rorl
pop
lods
cld
xor
in
stos
stos
dec
mov
and
fisttps
mov
xchg
jno
mov
sahf
out
pop
adc
ljmp
mov
cs
std
xor
lcall
pusha
in
stc
xchg
cmc
adc
jmp
mov
or
pop
pushf
or
or
and
jmp
mov
xlat
ljmp
loop
in
xchg
jecxz
bound
call
mov
mov
push
test
aaa
sub
mov
ret
pop
push
sti
outsl
mov
movsb
bnd
cmp
daa
jno
jmp
add
jle
xor
jne
or
loopne
loopne
xor
lahf
cmp
mov
xor
add
or
clc
sub
pusha
mov
mov
jns
mov
or
inc
not
out
arpl
neg
cmp
push
rclb
imul
fwait
shll
push
dec
xor
mov
adc
mov
lret
or
movl
mov
cmp
or
pop
shlb
and
or
loope
iret
xchg
cmpl
pop
aad
insl
outsl
arpl
mov
movsl
ss
inc
bound
adc
mov
jecxz
lods
sub
xlat
cmp
rcl
imul
loopne
pusha
sub
jo
add
dec
fmuls
pushf
das
stos
pop
jg
mull
or
adc
cli
out
es
loopne
sbb
inc
xor
fisttpl
cs
adc
sti
mov
xchg
dec
mov
scas
xlat
out
sbb
xchg
push
pop
sbbl
xchg
mov
mov
enter
jecxz
addl
inc
sti
inc
das
jecxz
xor
inc
or
mov
xchg
push
xlat
scas
inc
ret
loop
dec
mov
inc
test
and
mov
cmp
push
lods
mov
in
mov
xchg
dec
jo
dec
push
pop
and
mov
pusha
fsubrl
outsb
test
inc
mov
mov
cmp
cli
pop
pop
pop
outsb
test
pop
fucomp
inc
xor
push
xor
jnp
mov
fcoml
push
stc
cmp
sbbl
add
add
lcall
shr
adc
mov
or
fucomp
scas
push
repz
pop
adc
push
fcmovnb
das
and
pop
sub
cmpl
inc
fwait
xchg
cld
enter
inc
insb
lret
shl
pusha
out
fiadds
pop
xchg
or
dec
push
in
js
mov
push
scas
loopne
cs
xor
fsub
dec
inc
daa
push
out
or
add
or
push
adc
cs
add
xchg
push
and
jmp
xor
pop
sbb
pop
lock
sbb
lret
push
jne
push
push
pop
repz
jae
inc
jae
fldt
fnsave
fiadds
push
pushl
orl
test
sbb
push
loop
cmpsl
pop
popa
or
mov
cmp
out
sti
push
leave
add
pop
imul
mov
rcr
bound
incl
call
div
pop
clc
or
pop
xchg
or
inc
out
push
or
loop
cltd
loope
fisubrl
pop
cmp
jnp
inc
fisttps
stos
loopne
cli
push
xchg
int
dec
imul
rorl
js
bound
fisubrl
fisubrs
add
dec
mov
lds
cmp
push
cs
inc
clc
cmp
and
fpatan
mov
stc
fildll
loope
in
std
dec
rorl
xor
jo
jecxz
mov
mov
mov
cmpsl
or
push
xor
ret
sub
mov
pushf
xchg
ret
adc
fwait
stos
mov
sub
jg
push
mov
outsl
mov
push
xor
mov
fldz
sti
adc
ja
adc
and
jae
stc
mov
inc
push
inc
push
pop
inc
pushf
loope
pop
or
xor
and
cmpsb
xor
cmp
lret
sub
ret
add
sbb
fdivl
mov
ret
cs
adc
add
fs
mov
sub
mov
sbb
scas
sub
jae
jg
xor
mov
xchg
mov
dec
comiss
pop
jnp
movsl
inc
out
test
add
or
add
addr16
sahf
fs
dec
es
cmp
pusha
sbb
pop
int
adc
push
jecxz
jmp
xor
jp
cs
fimull
fbstp
or
shl
jno
stc
inc
add
push
fbstp
pop
and
shl
push
inc
dec
scas
out
jae
outsb
dec
push
xor
out
lret
mov
stos
and
dec
mov
lret
lcall
jmp
mov
repz
mov
test
add
fisttpll
mov
sbb
and
mov
or
fisubrs
inc
and
mov
cmpb
out
mov
ljmp
jl
jae
xlat
add
dec
int3
popf
shrb
jl
push
or
jl
xchg
adc
dec
inc
mov
sbb
ret
clc
dec
xchg
or
stos
jne
fwait
movsl
mov
ret
repnz
jmp
adcl
lahf
out
xor
rcrl
cmpl
fbld
xchg
mov
xchg
pusha
lock
adc
stos
jae
sbb
shll
jecxz
cmpsl
mov
lahf
push
mov
jmp
lret
mov
lods
out
fnstcw
aad
xchg
and
adc
mov
or
and
out
outsl
push
mov
xchg
nop
or
lds
ljmp
out
sbb
sbb
jno
xor
sub
jge
jnp
cs
rol
mov
dec
jnp
lods
rcrl
fs
idiv
cmpsb
test
ljmp
pop
pop
jae
sarb
sarb
jae
jnp
lret
sbb
inc
mov
cmpsb
cmp
xor
repz
lds
pop
lret
sbb
loop
mov
mov
outsb
sub
and
add
cmp
int3
xchg
add
push
dec
int
jp
mov
add
jmp
dec
fistl
outsl
call
add
shlb
pop
lds
ljmp
jbe
dec
aaa
in
enter
and
sbb
inc
cmp
loop
pusha
fidivl
int3
inc
sub
inc
out
fs
cmp
cmp
pop
inc
or
call
and
fdivrp
imul
loope
hlt
lahf
sub
add
pusha
mov
xorl
mov
xchg
sbb
cs
xor
mov
out
movl
or
dec
cmpsb
sub
push
stc
outsl
es
cmp
xor
add
imull
bound
mov
and
add
out
or
jo
and
mov
in
xor
inc
jecxz
inc
ret
imul
fsubl
mov
iret
jmp
mov
sbb
clc
int
sar
sbb
push
mov
or
arpl
leave
mov
jmp
pop
loopne
andl
push
and
mov
notl
ret
jmp
xchg
fsubrs
int
pusha
adc
xchg
stc
pusha
add
fisubs
popa
jb
icebp
and
mov
stc
aas
stc
jge
out
adc
and
inc
repnz
cmp
rcl
sbb
mov
mov
addr16
sbb
sbbb
ja
outsl
pusha
cmpsl
inc
in
movsl
push
sub
testb
mov
xlat
mov
ficoml
sbb
in
shlb
leave
adc
test
jns
inc
int
arpl
pop
xor
loopne
roll
dec
mov
xlat
stos
push
rcrl
rorb
xor
jno
pop
fistl
mov
and
cmp
arpl
pop
pop
and
leave
mov
fmuls
jne
std
jp
pop
pushf
cmpsb
aad
jo
es
inc
clc
sahf
shlb
mov
jp
ss
repz
pop
jecxz
stos
mov
cli
xchg
fiaddl
loop
mov
cmpsb
pop
inc
lods
xlat
stc
push
pop
adc
dec
mov
les
testb
push
cmpsb
int3
mov
sahf
imul
arpl
mov
shrb
push
lret
cld
mov
ret
or
cmp
push
sub
call
insl
jp
cmp
in
divb
cmp
pop
mov
pop
xor
negb
xchg
pop
add
dec
add
es
mov
xor
sarl
sbb
adc
adc
sbb
test
pop
in
sbb
ret
or
arpl
loope
cmp
repnz
arpl
clc
je
outsb
scas
sbb
icebp
out
imul
insb
mov
mov
mov
xchg
mov
mov
ret
mov
jle
cmpsl
or
dec
inc
pop
or
int
fstpt
inc
inc
test
xchg
scas
pop
sub
clc
pop
mov
addr16
shll
shrl
pop
aaa
or
scas
mov
jecxz
ret
cmp
daa
andb
adc
jnp
sub
and
pop
pop
cld
imul
adc
bound
mov
cs
jmp
push
mov
fwait
pusha
mov
xchg
adc
mov
push
mov
enter
js
ficoms
adc
xlat
cld
jns
stc
jle
push
outsb
or
xchg
jecxz
call
out
lods
push
xor
dec
ret
popf
out
bound
or
mov
lods
hlt
fcmovb
add
out
pop
clc
rcrb
rcrl
fs
negl
xchg
aas
pop
and
mov
add
xchg
add
repnz
pushf
outsl
or
cs
inc
aas
pop
inc
mov
fstpl
cmpsb
xchg
test
cmpsb
ds
out
inc
mov
push
jns
sub
xchg
out
bound
xor
cmp
pop
xor
aaa
out
rcll
dec
jb
mov
enter
jae
mov
movsb
lcall
fstpt
outsl
ds
push
call
mov
push
adc
test
mov
imul
xchg
lods
aas
in
jbe
aam
xor
out
in
cmc
repz
pop
cmp
and
call
add
scas
mov
jecxz
pop
dec
shr
cltd
and
jb
popa
pushl
mov
mov
mov
jnp
xchg
leave
and
int3
repnz
jg
pop
xor
ret
and
mov
mov
je
imull
adc
xlat
mov
nop
adc
pop
cmc
lock
mov
xchg
xchg
js
mov
in
bound
inc
cmc
mov
mov
cmp
jl
aam
xchg
js
iret
inc
insl
daa
jle
scas
gs
jne
addr16
lods
and
cmp
xchg
pop
in
out
loopne
mov
shll
das
faddl
testb
stc
mov
repnz
jecxz
xor
leave
jbe
clc
mov
frstor
adc
cmp
shl
jb
lret
fwait
stos
mov
pop
cmpsb
dec
push
mov
stos
lcall
shll
ljmp
cltd
jge
mov
divb
push
out
mov
lret
cmpb
inc
repz
mov
stc
nop
mov
dec
jp
ljmp
scas
xchg
xor
aad
jbe
jbe
jecxz
in
add
ljmp
in
jae
cld
iret
pop
movsl
pop
jae
cld
and
addb
dec
mulb
mov
jg
cli
mov
jg
jp
mov
mov
data16
test
vunpckhpd
stos
testl
mov
pop
mov
cmpl
lahf
pop
pop
xor
push
shrb
movsb
faddl
add
jle
outsb
ret
mov
xchg
pop
xlat
andl
mov
lods
jecxz
inc
xchg
shl
ret
in
sbb
shl
loope
sahf
add
fs
adc
fstpt
xlat
mov
mov
sub
push
std
mov
leave
scas
cmpl
arpl
pop
sarl
dec
ret
lea
mov
mov
iret
es
ret
push
jle
mov
out
jno
lea
loop
repnz
adc
adc
inc
shlb
mov
inc
push
sahf
testb
mov
sti
sbb
adc
repnz
sbb
test
mov
insb
repz
xchg
into
andb
decb
fnstsw
xor
lock
xor
lods
adc
iret
cmpsl
pop
in
add
add
push
and
fimull
mov
pop
ret
mov
std
cld
sbb
pop
sub
shr
leave
mull
adc
sti
mov
and
jg
xor
cmc
sbb
stc
gs
mov
pop
pop
sub
pop
gs
push
pop
imul
leave
xor
jp
jnp
mov
out
jne
movsb
and
xchg
jae
aas
mov
jle
cmp
flds
popa
mov
xlat
xor
stos
in
pop
add
shlb
mov
pop
add
mov
stos
xchg
inc
push
sbb
lcall
mov
jmp
sub
dec
pop
movsb
roll
cmp
xlat
jno
sti
xchg
add
cmpsl
mov
sahf
sar
pop
clc
pop
test
mov
stos
ret
shr
push
mov
jp
xchg
lahf
jecxz
bnd
xchg
js
lcall
lock
jbe
data16
into
outsl
addr16
hlt
or
ret
xchg
push
fistpl
jb
fwait
push
jg
xor
xor
cli
mov
pop
push
add
pop
lret
fisubl
ret
outsb
jnp
ret
mov
ret
mov
push
inc
sti
mov
lea
jno
jnp
mov
out
ficoml
repz
sti
cmp
jg
or
outsl
cmp
addr16
mov
lahf
sahf
insl
sub
lock
or
lret
sahf
mov
stc
stc
adc
push
cmpsb
mov
pusha
mov
clc
add
push
jb
jno
nop
pushf
lret
cmc
sub
cmp
push
xchg
pop
or
in
call
in
in
add
out
into
cmpl
xor
aaa
inc
jbe
jnp
xor
add
les
adc
out
flds
xor
iret
iret
sbb
add
jae
mov
jge
loop
xor
push
adc
xchg
xor
add
inc
mov
push
fdiv
pop
stos
sub
outsl
ja
cmp
addr16
inc
loope
xor
cmpsl
std
push
push
stos
movl
xor
xor
adc
aaa
dec
ret
fstl
icebp
in
scas
pusha
jmp
outsl
sti
and
push
les
int3
push
lahf
adc
enter
pop
dec
mov
xor
nop
adc
outsl
aam
jnp
rorl
movsb
xchg
fcoms
sahf
lret
add
icebp
mov
jnp
sub
fisubl
push
daa
mul
mov
xor
lret
int
xor
xchg
pop
lock
xchg
pusha
mov
loop
mov
call
lcall
sub
push
jno
scas
shrl
into
icebp
dec
iret
cmp
push
mov
imul
mov
arpl
int
int3
js
pop
mov
mov
push
and
je
mov
ljmp
mov
movsb
pop
cmp
test
cmp
arpl
fstpl
mov
jno
lods
nop
mov
or
lods
adc
ja
mov
push
cmp
mov
add
loop
mov
adc
cmp
xchg
dec
mov
idivl
clc
lods
in
or
xchg
std
dec
mov
xor
pop
in
mov
out
rorl
sbb
cmpl
mov
mov
js
dec
mov
push
pusha
cmp
lea
pusha
mov
cmp
mov
repz
cmpl
popa
data16
push
cmpl
ret
jns
test
inc
dec
push
out
rcrb
jnp
xchg
outsb
mov
mov
fwait
add
ret
jnp
repnz
xchg
jno
insl
pop
fucomi
ret
cmpb
fstl
sbb
jb
mov
ja
testb
mov
bound
mov
pop
jmp
or
jo
pop
mov
push
std
das
aaa
xor
sahf
jge
xchg
mov
lahf
adc
lods
sbb
inc
pusha
push
jp
mov
repnz
mov
xchg
or
fdivrs
mov
xorb
std
xlat
mov
cmp
mov
and
cmp
push
adc
cmp
lods
pushf
aaa
scas
jne
jb
rcr
xchg
repnz
mov
pusha
jns
outsb
scas
insl
lods
adc
push
imul
dec
mov
imul
faddp
lods
cld
jecxz
push
and
pusha
dec
adc
cltd
data16
out
repnz
pop
les
cli
addr16
pusha
mov
xchg
add
mov
xchg
mov
and
jle
jb
mov
push
pop
inc
lret
mov
out
icebp
in
add
loope
dec
loop
add
outsl
push
enter
xor
mov
xor
lods
jl
jmp
pusha
cli
mov
mov
pop
inc
mov
pop
in
and
xor
loop
pushf
push
push
stos
scas
fcoml
inc
popf
pop
inc
add
es
ret
and
push
outsl
cs
or
fldt
iret
mov
jb
or
ret
pusha
adc
arpl
mov
mov
add
sbb
stos
and
loope
sub
in
cli
data16
out
loop
sub
inc
and
mov
enter
push
jno
insl
push
cmp
rcr
and
dec
jo
push
pushf
mov
insb
mov
mov
pop
fdivrs
mov
adc
add
sbb
cltd
mov
lods
mov
int3
arpl
xor
repz
ljmp
xchg
les
fcmovnbe
outsb
arpl
cmp
mov
and
shrb
loop
inc
mov
mov
adc
loop
and
adc
jl
xchg
inc
mov
rolb
ljmp
adc
push
clc
mov
xor
add
std
ret
add
pop
push
imull
mov
test
lods
push
andl
pop
sbb
mov
imul
ljmp
sub
out
rcl
ljmp
mov
repz
mull
mov
push
cli
andb
fisubrs
mov
imul
icebp
push
stc
enter
jns
mov
daa
shlb
jb
xor
mov
lret
jae
jo
mov
scas
pusha
shr
or
push
push
scas
rcr
icebp
cltd
cmp
or
stos
call
rolb
stos
icebp
xor
mov
dec
jnp
scas
out
shl
mov
repz
dec
ffreep
dec
cmc
bound
lret
dec
mov
bound
sti
popf
pop
imul
add
pop
xor
repnz
in
sti
jb
cli
leave
xor
cld
incb
pop
clc
dec
xor
cmp
xchg
adc
add
inc
dec
sbb
mov
push
jb
pop
xchg
inc
xor
inc
mov
sub
into
or
sbb
and
outsl
int
push
pusha
sub
loope
xor
jns
aas
stos
test
or
scas
cmp
test
gs
adc
insb
adc
mov
cmc
add
ret
xchg
mov
adc
xchg
push
jecxz
cld
movsl
mov
dec
xchg
pop
xchg
dec
push
lds
loopne
in
jl
ret
pop
jmp
mov
push
rolb
add
test
pop
bnd
xor
int
dec
cli
pop
imul
dec
mov
repnz
icebp
in
fs
lret
inc
scas
in
adc
lret
mov
pusha
push
jnp
cmpsb
cmp
mov
jbe
push
jno
jge
mov
jae
icebp
xchg
lcall
sbb
divb
clc
push
adc
shl
cltd
sti
xlat
cs
mov
clc
rolb
push
pushf
xchg
dec
cltd
icebp
jnp
sti
inc
jmp
sub
mov
pop
jns
jb
lea
xlat
outsl
lods
jecxz
loopne
mov
xlat
fists
rorb
mov
mov
scas
inc
fstl
add
inc
xchg
mov
outsb
cwtl
mov
in
call
and
push
xor
mov
ret
push
jecxz
cmp
xchg
mov
adc
mov
mov
adc
or
cmp
mov
dec
rcrb
mov
js
inc
inc
mov
ljmp
push
pop
xchg
insl
ljmp
add
insl
or
int
ret
fbstp
mov
cmp
shlb
ja
pop
adc
and
sbb
loop
in
cli
or
cmpsl
fisttpl
pop
imul
into
icebp
add
fidivs
and
xor
loope
bound
int3
add
aas
sub
pop
jp
in
or
test
jge
cmp
cwtl
sub
gs
jecxz
shll
adc
inc
cli
pusha
mov
fsub
repnz
jb
sahf
or
mov
pop
pop
ret
pop
pop
cs
loope
pop
jns
stc
or
repz
pop
int
pop
push
mov
jge
jecxz
arpl
leave
out
test
daa
mov
or
xor
nop
mov
gs
sbb
lods
arpl
push
pop
jae
clc
in
mov
test
loop
shl
negb
ret
mov
ret
out
mov
mov
mov
and
fstpl
dec
push
cmp
and
in
rol
aam
imulb
jg
cli
outsb
fs
ret
xchg
shl
loop
pop
dec
mov
stos
inc
mov
ljmp
sbb
and
insb
jnp
push
jae
mov
js
mov
add
xor
jb
cmp
pusha
xor
stos
icebp
inc
dec
std
xchg
or
int
sub
fcoml
push
xchg
and
shll
test
loop
pusha
dec
loopne
jnp
xchg
subb
pop
fucom
scas
in
jb
and
mov
adc
xor
and
jo
or
ljmp
xchg
push
shrl
addr16
mov
clc
mov
pop
pop
push
mov
aas
xor
int
insb
mov
arpl
push
out
aaa
xorl
cltd
lea
mov
es
cmp
push
xor
mov
dec
mov
into
mov
outsl
dec
or
xor
outsb
adc
push
or
js
adcb
cld
xchg
sbb
push
cmpsb
out
icebp
scas
js
in
pusha
pop
jae
repz
lret
fistpll
dec
icebp
mov
sbb
ret
push
icebp
mov
xor
xchg
lret
cmp
fidivrs
out
or
mov
repnz
add
mov
clc
repz
mov
movsb
stos
lcall
cs
mov
sahf
in
add
int3
xlat
push
inc
and
mov
outsb
jb
adc
out
inc
pop
addr16
sbbb
ljmp
jecxz,pn
jmp
icebp
mov
sub
adc
decb
adc
popa
ljmp
and
pusha
mov
jb
mov
push
loope
call
ret
cli
inc
js
mov
push
cmp
inc
fstl
stc
adcl
sti
cs
adc
jb
mov
lea
aaa
add
inc
xchg
push
loop
inc
add
push
xchg
les
loop
jae
ss
arpl
mov
loope
out
jnp
std
fdivrl
jbe
movb
mov
xchg
aas
arpl
fwait
mov
call
pop
pop
ret
sbb
out
in
mov
cli
jl
test
test
test
jae
pop
jg
jle
pusha
ljmp
jle
and
mov
rcrl
push
scas
cmp
ljmp
loop
cmp
mov
ret
addr16
pop
mov
mov
mov
fisubs
in
imul
or
xor
repnz
mov
push
push
add
and
pop
adc
mov
pop
jb
sbb
aad
mov
cmp
repnz
and
stos
out
cmp
sbbl
inc
sti
std
scas
pop
ds
or
inc
lea
fldenv
and
ret
jno
sbb
mov
pop
mov
mov
mov
mov
push
xchg
xchg
pop
clc
ljmp
movsb
mov
aas
fbld
inc
mov
arpl
push
ret
mov
loop
mov
lahf
fdivp
icebp
xchg
shll
ds
test
jno
xor
inc
scas
pusha
ljmp
stos
pusha
loopne
sar
xchg
add
cli
dec
jae
popa
outsl
push
call
pusha
ljmp
scas
mov
pusha
cmc
out
mov
mov
sub
xchg
jecxz
pusha
lock
inc
xchg
pusha
ljmp
xchg
pusha
cmp
jno
jl
orb
add
ljmp
arpl
loop
mov
add
add
stos
adc
sbbb
inc
lret
push
gs
jmp
out
jnp
ftst
mov
pushf
mov
movsl
ljmp
sbbl
mov
adc
shll
add
mov
movsl
mov
leave
push
or
data16
arpl
loope
mov
and
in
xchg
or
test
jmp
ret
fcmovu
pop
out
decb
dec
mov
mov
ret
xor
fwait
push
mov
cmp
inc
or
xchg
jmp
insb
add
mov
loop
mov
dec
xor
and
dec
rclb
fnclex
lret
test
xchg
sbb
mov
add
clc
and
xor
cmp
mov
mov
test
ret
lahf
jno
lock
pusha
mov
jnp
cmpsb
mov
mov
mov
xchg
rclb
movsl
imul
ja
ljmp
cmp
loopne
push
jo
cmpsl
pusha
push
sub
mov
pop
and
lock
jb
scas
and
in
jae
lods
mov
ficoms
fldl
jbe
adc
lods
lods
jl
adc
and
cmpl
cmc
xchg
adc
ss
sub
sub
jb
and
mov
lret
pusha
test
ret
out
jp
adc
xor
add
stos
gs
scas
shrl
nop
mov
push
mov
mov
incb
xchg
inc
cli
pusha
aaa
movlps
scas
test
fcmovnbe
and
ret
mov
pusha
cmp
aaa
sbb
mov
cmp
push
xchg
sarl
aad
mov
cmpsb
mov
rcl
pop
scas
popa
fisttpl
stc
and
in
mov
sub
pusha
sub
movsb
adc
cwtl
lahf
mov
mov
aam
movsb
or
rolb
inc
scas
ret
aad
cmpsb
fcmovb
jg
ss
out
shlb
arpl
sarl
push
in
or
dec
inc
insb
push
loopne
jno
sbb
mov
xor
ret
xchg
jnp
or
and
in
mov
inc
es
jg
xor
mov
mov
and
mov
aas
addl
cld
dec
pushf
inc
mov
cmp
addb
pop
mov
es
xchg
cmp
jmp
lret
sti
insl
es
rcll
pop
mov
sub
push
rcll
sahf
sbbb
mov
pushf
sbb
xchg
shlb
into
fwait
imul
mov
cmp
mov
cmp
xor
mov
shlb
and
scas
cli
test
in
xchg
and
movsl
inc
fsub
pop
jbe
xor
test
ss
rcr
sti
pop
inc
and
insl
lods
pop
add
mov
or
mov
sahf
xchg
in
jp
pushf
js
and
sti
subb
out
xor
hlt
or
roll
mov
loop
pop
in
push
pop
mov
das
fcmovnbe
push
mov
repnz
xchg
outsl
cmp
scas
shr
adc
jns
sbb
std
inc
int
mov
fstl
insl
push
popl
and
rorb
lahf
jnp
pop
repz
jmp
xchg
cmp
dec
push
mov
ds
sti
push
push
jae
int
mov
lcall
lds
mov
mov
fbstp
movsb
call
clc
or
and
daa
pop
jecxz
push
repz
or
outsl
pop
or
dec
pusha
cmp
loop
dec
lret
and
xchg
popf
sbbl
adc
mov
inc
lret
push
mov
pop
mov
mov
cwtl
push
sbb
or
imul
dec
mov
sub
lret
pop
dec
ret
orl
push
stc
push
mov
cltd
fidivrl
movsb
cmp
rcr
jne
xchg
loope
add
fmuls
ret
mov
outsl
jnp
xchg
out
push
sub
sbb
lods
cmp
in
loop
sbb
mov
xchg
loop
stos
adc
xor
fsts
fidivl
add
lret
inc
cmp
add
add
adc
lret
mov
movnti
pop
inc
ss
mov
push
shlb
and
fyl2x
xchg
xor
repz
shll
cmp
outsl
adc
lret
adc
xor
and
jg
or
adc
mov
xor
push
iret
addr16
sbb
sub
mov
sub
pop
loop
iret
mov
jl
inc
arpl
cli
inc
les
fcomps
mov
in
fidivrl
lock
cmp
or
or
repnz
repnz
ss
nop
jae
int3
fdiv
ret
fmul
clc
mov
ret
dec
sbb
sbb
popa
mov
pop
cmp
jnp
sbb
or
jno
sti
fsubrs
xchg
pop
hlt
scas
pop
stos
jl
ret
pop
mov
mov
cmpl
mov
pushf
cwtl
lods
repnz
out
mov
jecxz
es
jmp
mov
loop
xlat
mov
xchg
mov
fadds
stos
andb
mov
jo
xchg
movsl
ljmp
imul
movsb
orl
jecxz
mov
pop
inc
add
aam
inc
dec
sbb
testl
dec
rorb
loop
enter
fdivrl
add
fmull
fiaddl
outsl
les
cmpsb
pusha
mov
mov
mov
insl
sbb
sbb
and
push
lret
jg
sti
mov
faddp
ret
call
mov
mov
cltd
jns
fmuls
pop
shl
and
pop
test
jg
mov
xlat
mov
hlt
push
fstpt
or
xlat
scas
arpl
iret
inc
push
xlat
daa
sbb
sub
xchg
pusha
dec
dec
dec
shl
rclb
add
push
ret
pop
lret
inc
inc
jno
jo
inc
inc
fmuls
mov
mov
jecxz
faddp
test
xchg
fbld
xor
mov
data16
fstpl
push
icebp
js
mov
cmpsb
std
lret
insl
sub
and
call
mov
loopne
cltd
or
mov
xorb
arpl
sub
cmp
loopne
repz
xor
loopne
pusha
adc
pusha
cmp
push
shrl
sub
inc
inc
movsl
inc
inc
call
into
mov
push
mov
mov
addr16
icebp
or
jg
adc
ret
xor
dec
lods
jg
pushf
bnd
das
mov
jne
pop
xchg
iret
adc
shrb
adc
mov
outsl
push
repnz
xchg
adc
shl
imull
icebp
xchg
int3
adc
xchg
xor
clc
xchg
ret
fisubl
sarl
out
fldl
iret
inc
jae
xchg
lea
ret
jmp
dec
cmpsb
add
imul
lods
mov
aaa
test
jl
daa
fwait
jnp
lods
or
out
mov
sbbl
jle
push
mov
testb
loop
cmpsl
lds
aad
aad
sub
or
sub
xor
jle
mov
add
test
test
mov
and
cmp
cmpsb
push
cmpsl
negl
mov
and
mov
dec
fldl
idivb
repnz
mov
lahf
movsl
and
imul
add
addb
push
fidivrl
in
clc
xchg
daa
pop
jb
mov
and
pop
pop
sub
fidivrl
xchg
push
jae
mov
xorb
jecxz
sub
out
arpl
jg
mov
xor
out
xchg
pop
jnp
icebp
push
cmp
adc
push
sbb
jo
fisttpll
fbstp
xlat
and
stos
test
ficoms
stos
xor
mov
mov
in
pushf
add
fwait
pusha
stos
mov
in
ljmp
mov
add
pop
ds
mov
cld
mov
mov
adc
xlat
pushf
popa
jb
clc
or
mov
int
shrl
js
mov
fxtract
movsl
cld
int
loop
mov
popa
jno
xor
insb
out
adc
fildll
fbstp
cmpsl
mov
cmp
test
stos
outsl
mov
cmp
xchg
fnstenv
ljmp
xlat
mov
pushf
pop
add
cwtl
push
jnp
push
mov
icebp
xchg
shrb
je
arpl
xor
and
jo
lahf
jg
mov
lods
sbb
fstp
shrb
inc
loopne
in
sahf
arpl
jbe
in
add
arpl
and
xchg
sbbb
xor
loopne
fmulp
pop
pop
aam
jb
test
scas
push
jo
pusha
mov
out
shlb
les
popa
pop
stos
in
mov
clc
and
icebp
repz
fbld
pop
jl
push
xchg
cli
add
mov
das
add
stos
stc
stos
or
out
push
fisttpll
jb
cli
xchg
cmp
mov
inc
cmp
loop
fstpl
int
int
int3
xlat
mull
mov
xor
cmp
shrb
add
mov
out
xlat
loope
out
cmpsb
test
sarl
xor
aad
adc
fwait
ret
sbb
test
pushl
add
ljmp
iret
push
out
mov
aad
mov
test
add
mov
sahf
subl
xor
push
pop
lret
lea
mov
pusha
les
sub
mov
inc
arpl
dec
or
xchg
sbb
inc
pop
sbb
xor
repz
inc
xor
pusha
movsl
xor
movsl
cmpsl
pop
rorl
inc
cli
insb
cmp
nop
dec
ja
pop
cmpsb
xor
fisubl
jnp
jecxz
call
cs
loopne
outsb
pusha
scas
xlat
repnz
clc
mov
push
fucomp
test
mov
ror
lahf
xchg
mov
stc
out
pop
or
cmc
aas
addl
clc
pushf
dec
stos
mov
lods
icebp
cmpsb
mov
xor
insl
jmp
adc
aaa
cs
cmp
and
ror
sub
mov
pop
insl
xlat
into
movsl
cli
test
jb
lcall
out
and
lret
pop
jo
sub
scas
xchg
push
movb
int
mov
pusha
dec
clc
or
xlat
dec
mov
cmp
push
cmpsb
xchg
xlat
xor
js
cmpsb
mov
pop
jecxz
imul
inc
in
pop
add
fucom
mov
cwtl
dec
test
fsubrs
jecxz
jno
pop
icebp
mov
ret
mov
testl
cmpl
inc
and
mov
popa
sub
idivl
xor
push
ljmp
xchg
push
std
ret
mov
mov
sub
lahf
std
jp
sub
stos
sbb
fidivrl
ret
xor
xor
sbb
adc
or
in
sub
mov
mov
and
cmc
sbb
popf
out
lods
clc
fidivrl
js
xchg
sarl
in
popf
mov
arpl
mov
add
pop
push
pop
dec
repz
int3
add
or
stos
repz
aaa
movsl
and
in
not
jo
xor
xorl
loope
das
jne
jle
es
push
pop
cmp
push
mov
lret
stos
inc
mov
loop
gs
jge
xor
jp
repnz
bound
mov
push
rolb
xlat
mull
jnp
push
out
mov
mov
push
ret
mov
lret
popa
mov
sub
mov
mov
mov
mov
push
loop
into
jl
pop
sub
mov
inc
dec
jg
dec
push
fbstp
sub
pusha
sbb
push
stos
sub
xchg
inc
ds
xchg
or
adcl
jae
fucomi
and
rorl
cmp
sub
mov
lahf
addl
roll
pusha
push
idiv
fcomi
pop
iret
cmp
cmpsl
insb
mov
or
inc
inc
mov
movsl
ljmp
repz
loope
or
icebp
leave
arpl
cmp
ret
outsl
mov
add
sti
jp
int3
mov
or
ret
call
cli
stos
test
cmc
mov
scas
fnstcw
fdivrl
jmp
mov
outsl
es
sub
cli
inc
popf
push
push
cmp
push
mov
cmp
pop
sbbl
filds
pop
icebp
cwtl
or
lock
lret
fistpll
jecxz
cld
adc
lods
sbb
aas
ret
mov
mov
imul
pusha
cmp
mov
inc
mov
loope
pusha
lds
es
xchg
ret
into
dec
mov
bound
and
cmpsl
xchg
dec
out
dec
adc
sub
cli
push
xlat
clc
cmp
jp
cmp
mov
mov
cmp
shrl
out
push
mov
bound
int
loopne
push
lods
inc
and
in
xor
push
mov
sbb
movsl
mulps
or
hlt
out
xchg
rcrb
jae
and
or
lods
test
ret
mov
shlb
ret
pusha
mov
iret
fistps
mov
divb
adc
jge
sti
xor
xchg
hlt
xchg
clc
push
testl
mov
data16
repnz
popf
xchg
pop
cli
jg
mov
jbe
or
loopne
test
xchg
outsl
add
adc
or
loop
in
xor
adcl
int3
aad
xchg
xor
imul
xchg
xor
inc
inc
mov
sbb
or
xor
fldenv
jecxz
mov
fsubl
cmp
jge
mov
inc
cmp
ret
dec
dec
push
pop
bound
push
leave
aad
lret
jnp
sub
mov
cmpsl
sub
les
push
repz
repz
pop
stos
sbb
cmp
sub
cwtl
or
mov
mov
int3
arpl
push
add
adc
dec
push
daa
repnz
sbb
std
pop
mov
jle
jnp
fdivrl
adc
int
push
or
and
xchg
bsf
mov
fidivrs
cmc
or
test
sbb
dec
faddl
clc
imul
je
jns
sahf
mov
push
in
add
pop
std
jecxz
xchg
push
repz
loop
sub
test
mov
into
mov
and
mov
in
imul
inc
in
xchg
or
mov
into
mov
cmp
rcrb
cs
inc
mov
test
add
outsl
xor
jge
popa
or
dec
sbb
mov
testl
push
add
dec
sbb
dec
xlat
aad
jae
movb
push
aaa
aam
dec
push
repz
cmpsb
repnz
mov
clc
repz
cmpsl
mov
adc
int
lods
ds
inc
stos
inc
ds
xchg
adc
int3
jp
jno
iret
pop
loopne
add
clc
mov
push
imul
jge
xor
mov
push
xchg
stos
pop
iret
leave
mov
cwtl
daa
mov
cmp
push
roll
add
aas
mov
shrl
pop
lcall
adc
clc
jge
call
xlat
cmp
shr
or
xchg
cwtl
xchg
loope
dec
rcll
xor
mov
xor
add
mov
and
pushf
mov
hlt
cmc
adcb
mov
lea
add
jecxz
inc
addr16
push
jnp
cmp
adc
leave
outsl
push
mov
movsl
popf
xchg
shrl
jo
bound
mov
insl
cmpsb
push
xchg
xchg
add
push
or
add
xchg
xchg
in
pop
push
push
int3
arpl
sarb
mov
ret
icebp
ljmp
rcrl
sub
push
mov
jae
sahf
jnp
repz
scas
xorb
adc
ficoms
stos
mov
sahf
jmp
mov
xchg
adc
in
test
sti
pusha
cmp
push
aad
in
outsl
notl
mov
push
mov
jae
and
scas
cmp
fcompl
mov
std
jl
cmp
or
daa
pop
inc
xchg
mov
xor
mov
xchg
lock
cltd
cld
or
icebp
mov
mov
xchg
shll
lods
inc
js
lock
mov
mov
int
cld
sub
shll
popf
xorb
pop
inc
andl
jle
frstor
fcompl
xchg
sbb
enter
les
mov
add
pop
push
pop
pop
fnsave
cmp
fstpl
sbb
cli
inc
mov
pushf
ficoms
loopne
test
in
cmpsl
adc
loope
rcrb
pusha
mov
inc
pop
or
jg
icebp
ds
mov
mov
cs
ljmp
mov
mov
push
jg
jp
add
dec
dec
scas
repnz
ds
lock
and
stos
pop
sub
push
fdivs
cltd
lock
dec
inc
aas
xor
imul
loopne
mov
xchg
push
ret
jb
sti
ficomps
ds
cmp
out
xor
pop
mov
addr16
movsl
push
push
addr16
loopne
ftst
stos
test
adc
dec
add
adc
iret
int
mov
inc
out
ljmp
push
out
fistps
jns
jnp
ljmp
aaa
add
pop
test
adc
cmp
pop
ret
ds
push
stos
imul
loop
fiadds
fcomip
fucom
mov
jecxz
pusha
jle
mov
icebp
out
and
jmp
jecxz
lea
or
add
cmpl
sbb
mov
inc
inc
rcll
mov
push
pop
fcoml
push
fldenv
sub
inc
ds
clc
push
iret
icebp
jnp
jae
adc
mov
xchg
mov
adc
xor
and
mov
fdivrp
lods
les
cmp
sbb
push
xchg
pop
jg
xchg
inc
mov
push
mov
repnz
pusha
adcl
jnp
rcr
mov
fadds
cwtl
mov
into
sub
std
sbb
cld
fimull
mov
nop
push
add
xchg
sbb
sub
push
xchg
aaa
fdivp
mov
pusha
cld
pop
mov
scas
lds
cmp
hlt
aad
jge
mov
arpl
push
mov
mov
adc
dec
adc
mov
sub
adc
in
insb
sbbl
xor
loope
jns
xchg
fmull
aaa
fsubl
test
and
and
or
mov
pop
jmp
mov
push
int
icebp
jp
frstor
repnz
and
movsb
sbb
add
sbbl
sbb
nop
ret
cmp
aaa
fsubl
add
sbb
mov
mov
shll
lcall
imul
sbb
out
xor
ja
incb
jnp
daa
xchg
imulb
lret
inc
jns
adc
push
sahf
pop
imul
in
and
inc
ljmp
mov
aam
mov
lods
aas
scas
shll
jae
sar
add
loop
leave
add
test
mov
jmp
mov
out
loop
shlb
cmp
loope
mov
cltd
stc
ss
notb
pushf
out
test
in
or
cmp
loope
mov
jecxz
push
shrb
int
popa
xchg
xor
in
stos
pop
mov
xchg
xchg
mov
mov
inc
sub
xchg
in
jge
scas
js
in
out
adc
pop
aad
sub
and
pushf
jmp
jnp
loop
jnp
pop
cmp
cmp
cmpl
ret
add
icebp
into
dec
imul
dec
push
cmp
pop
jb
divb
stos
repnz
xchg
sub
xlat
iret
add
repz
lock
andl
push
jg
pop
xchg
cmp
cmpsb
push
jp
mov
and
div
xchg
call
sub
sub
in
push
push
ljmp
push
mov
add
mov
incb
addb
iret
ljmp
mov
ret
mov
mov
fadd
add
add
xchg
ja
mov
loope
leave
rcll
bound
fists
repz
loop
mov
pop
sub
ficompl
mov
repz
jmp
xlat
incl
sahf
fildl
jne
js
mov
faddl
or
inc
divl
adc
cmp
xchg
cmp
outsl
cmpsb
shl
mov
sti
jb,pn
mov
mov
jg
mov
inc
cmc
repnz
sti
jnp
mov
fldenv
int3
leave
leave
push
sbbl
xlat
mov
insb
or
sbb
leave
lcall
dec
arpl
push
pop
fcmove
mov
test
or
int3
xorb
sbb
sbb
or
push
call
in
cs
mov
inc
daa
push
aaa
stos
loopne
cli
mov
cs
stc
fidivrs
sbb
fwait
int
mov
cmp
das
loopne
pop
ret
mov
and
pop
je
adc
sub
lock
or
ljmp
adc
mov
xchg
cld
out
stos
loopne
rcll
imul
stc
enter
cltd
cmp
js
mov
and
jae
adc
jg
stos
ret
fnsave
push
sbb
aaa
add
loop
rorl
and
pusha
arpl
sbb
fimull
lret
mov
outsl
lcall
out
pop
lock
in
jmp
cmpsb
ret
xchg
pop
mov
add
movsb
jg
sahf
or
cmp
loopne
dec
rcrb
and
mov
ret
inc
pop
mov
push
push
lock
es
pop
repz
xor
fcomps
sbb
jns
sahf
jnp
nop
push
stos
loop
fcoms
mov
test
int3
fnsetpm(287
jmp
cmp
sti
and
pop
xchg
and
ret
stc
add
inc
testl
jnp
jne
cltd
jecxz
mov
mov
mov
rcrl
cmp
xchg
repnz
call
mov
subb
popa
and
fwait
jns
xlat
xor
ret
jns
mov
loope
mov
pop
pop
sub
jae
sub
pop
adc
es
xchg
insb
pop
mov
rorb
lahf
stos
fsubs
data16
mov
mov
jb
xchg
lea
xor
jp
pop
in
subb
insl
xor
clc
pusha
sbb
mov
sahf
fsts
fsts
sbbl
sbb
dec
cmp
aam
pushf
xchg
iret
mov
sti
add
push
lret
sti
cmpsl
mov
stos
loop
into
lcall
sub
add
xor
mov
cmp
mov
sar
out
inc
cld
fbstp
pusha
adc
movb
lock
lcall
mov
xlat
xor
hlt
mov
inc
imul
jns
scas
icebp
dec
cwtl
loop
test
out
inc
xlat
jge
mov
push
leave
push
and
or
stos
fcmovbe
jnp
bound
cwtl
stos
dec
imul
pop
cmc
mov
jg
push
cmp
int3
das
pop
cmp
inc
xchg
pop
sbb
xor
mov
inc
add
and
mov
fstpt
mov
lahf
sbb
mov
dec
sarl
jg
pop
fdivs
cmp
ljmp
ljmp
inc
lahf
push
xlat
xchg
sub
xchg
nop
or
insb
movsl
push
in
cltd
ja
movsl
lcall
push
mov
mov
insl
shlb
aaa
xor
hlt
loopne
popl
outsl
arpl
pop
gs
xor
or
pop
jle
lcall
loopne
sbb
lret
push
push
popl
lock
mov
dec
or
xchg
add
pop
push
fnsave
dec
das
xorl
and
roll
in
inc
lret
xor
and
popa
pop
ret
sti
inc
lcall
pusha
lock
dec
or
lods
and
addr16
sub
stos
inc
adc
inc
js
pop
cld
sub
rcr
mov
leave
fstp
mov
and
mov
popf
aaa
push
mov
add
jecxz
push
mov
aas
stc
rcll
jle
rolb
inc
pop
inc
in
mov
mov
shlb
push
pop
in
icebp
jmp
mov
stc
push
xor
cmp
fs
in
inc
ret
inc
mov
add
jo
in
movsl
lea
pushl
mov
pop
xor
outsb
mov
std
fnsave
lret
icebp
push
jmp
ret
ja
lahf
mov
mov
xchg
xchg
xchg
lret
fistps
and
pushf
cltd
xchg
repnz
inc
add
mov
sub
mov
mov
jecxz
lock
mov
lret
pusha
aas
push
sub
aad
inc
push
sbb
sti
cmpsl
mov
pop
stos
scas
mov
repnz
cmc
fucomip
dec
cli
ret
cltd
inc
repnz
jg
inc
sub
fdiv
push
cli
inc
or
and
mov
cs
adc
hlt
lret
pop
pop
ljmp
and
and
pop
arpl
fistl
adc
mov
sbb
pop
loope
fistpl
aas
inc
dec
and
push
sub
add
sbb
mov
aas
push
push
test
movsb
jg
jb
arpl
dec
push
mov
repnz
push
mov
nop
pop
fdivrl
ret
dec
and
cmp
mov
ret
mov
pusha
push
shlb
xchg
imul
push
mov
xchg
fucomip
xchg
imull
add
pop
lret
push
testl
push
inc
mov
mov
in
dec
push
lea
lea
ljmp
inc
xchg
xlat
imul
mov
cwtl
pop
repz
mov
mov
mov
lock
mov
scas
int
cmp
adc
cli
and
lods
lods
into
or
cmc
addr16
call
loopne
xor
lods
push
sbb
pop
cmp
outsl
sub
jo
xchg
gs
iret
jns
loop
adc
adcb
mov
add
fidivrs
dec
iret
or
mov
push
aaa
xchg
stos
pop
xor
dec
jl
into
xor
iret
add
and
imul
pop
stos
cmp
loopne
frstor
or
lods
lock
sbb
lock
lea
mov
repnz
popf
in
pop
mov
xor
loop
push
adc
jmp
jne
clc
push
pushl
rorl
mov
mov
jae
mov
call
addr16
adc
jno
and
jb
cs
and
cmp
jns
aas
loop
dec
notrack
inc
rol
aas
mov
fmuls
jmp
add
dec
loope
shll
sbb
add
add
sti
stos
pusha
dec
jno
jg
cmp
jno
and
mov
incl
aaa
cmp
mov
xor
dec
xchg
xor
shl
push
lahf
push
or
icebp
loope
push
xchg
push
pop
cmc
push
xor
rol
xchg
mov
push
cmp
xchg
mov
adc
fidivl
fstp
sub
mov
push
popf
stos
out
xor
sbb
pop
mov
xchg
mov
cmp
int
mov
int
mov
xor
icebp
scas
pusha
adc
mov
leave
push
popa
sub
xor
fnstcw
shl
lret
enter
cld
push
jecxz
lock
cmpsb
xor
or
adc
sbb
shll
les
ljmp
cli
mov
imul
push
sbb
sbb
fisttpl
sbb
pop
sbb
ret
mov
rcrb
or
imul
insb
pop
icebp
int
out
ja
aam
adc
xchg
mov
mov
shrb
cs
movsl
arpl
repz
loope
mov
in
push
movsl
mov
stos
cmp
movnti
mov
fwait
inc
xchg
lcall
testl
or
cmp
lods
cwtl
loope
test
mov
pusha
lahf
lcall
sarb
pop
inc
adc
inc
inc
test
mov
xor
or
pop
cwtl
push
into
div
jnp
movsb
dec
and
call
add
popf
xchg
mov
push
pop
jnp
std
and
icebp
gs
insl
xlat
aaa
xchg
adc
jno
out
cmp
inc
sahf
sub
sub
shrl
cli
fbld
push
or
outsl
fldt
in
loopne
inc
std
or
dec
or
add
cmpsl
adc
shll
xchg
jno
mov
push
call
mov
push
pusha
test
stc
fidivl
es
test
lock
ret
mov
push
repnz
ljmp
adc
sti
nop
sub
shrl
mov
sahf
sub
xor
repz
lahf
cmp
stc
test
cmp
addr16
mov
sti
aas
and
pop
xacquire
cmpsb
mov
sub
scas
cmp
sti
cmp
stc
or
xor
jge
adc
jl
cs
arpl
fisttpl
xchg
adc
cmp
add
je
jo
outsl
imul
cld
mov
in
pop
push
dec
bound
sub
jb
inc
fwait
imul
js
negl
in
fdiv
mov
iret
adc
push
adc
mov
pusha
cmc
clc
sbb
cmp
adc
cld
pop
fldl
and
cmpsb
mov
rcrb
mov
loope
into
xor
cld
cmp
jg
aaa
jnp
jmp
jg
lahf
add
mulb
mov
mov
xchg
repnz
loop
les
mov
push
and
or
mov
adc
mov
jnp
aaa
cmp
outsl
add
push
mov
cwtl
sbbb
add
pop
leave
add
or
adc
sbbl
adc
add
popl
and
fidivs
mov
movsl
cmpsb
mov
loop
data16
insl
popa
sarl
testb
icebp
lret
imul
daa
mov
pop
enter
movsl
stos
sub
mov
ja
or
or
icebp
movsl
mov
xchg
mov
std
loop
inc
fistps
cmc
inc
mov
mov
xlat
loop
fidivs
or
mov
mov
mov
aas
test
fwait
jle
dec
mov
sub
add
aas
or
orl
rolb
ret
push
pop
cmp
out
jb
mov
iret
ret
lahf
lcall
fists
adc
punpcklbw
cmp
pop
mov
mov
cmp
in
fidivl
jbe
xor
sti
dec
mov
mov
cli
aad
mov
aam
push
and
aaa
fisubrl
repz
mov
stc
repnz
mov
icebp
test
cmp
les
push
or
adc
add
cmpb
movsb
push
testl
mov
jae
rclb
outsl
cmpsl
mov
add
out
ret
push
push
adc
clc
int
mov
movsl
sarl
imul
or
jb
jmp
push
jmp
mov
push
sub
jnp
mov
inc
dec
xchg
test
mov
push
jg
in
add
sbb
push
lods
cmp
and
int3
sbb
test
and
test
jecxz
cmc
fistpll
cld
pop
adcl
mov
outsl
xchg
mov
call
mov
add
lcall
outsl
push
jecxz
pop
jb
pop
mov
mov
adc
push
push
sub
pushf
mov
xor
pop
cltd
xchg
inc
cmpsb
aam
push
repnz
in
inc
stc
sar
lods
fwait
inc
stc
je
or
dec
xor
sbb
call
dec
and
xchg
decb
into
jnp
repnz
hlt
gs
test
in
icebp
negl
xchg
xchg
ja
cmc
divl
sub
lods
or
xor
mov
adc
stos
mov
in
add
inc
gs
bound
insl
dec
adc
shrb
fisubrs
imul
and
mul
mov
adc
mov
movsl
adc
and
ds
xor
pop
push
ret
cs
pop
mov
stc
xchg
mov
push
jbe
clc
dec
push
add
sub
inc
sub
pushf
outsl
es
iret
mov
sbb
scas
jns
mov
xchg
sub
jnp
lds
xchg
add
inc
pop
xchg
push
push
mov
sub
clc
ficoms
push
bound
fidivrl
mov
rorb
jno
xchg
add
or
out
mov
add
imulb
ds
mov
aas
xor
scas
add
ja
fstl
adc
mov
dec
aas
inc
cmp
sti
aad
rolb
mov
in
jo
add
stos
dec
jb
add
fbld
sub
adc
lahf
loop
mov
xor
fcomi
lods
pop
idiv
mov
mov
sub
sahf
mov
fistl
lock
pop
and
xor
les
filds
mov
adc
jecxz
pop
sarl
adc
push
notb
xor
xor
or
push
adc
dec
mov
fisttps
sub
rorb
mov
dec
add
jae,pt
xchg
call
inc
sub
adc
mov
xor
repz
stc
cmp
cmp
loopne
test
stos
fidivl
pushf
ljmp
inc
xchg
int3
jg
xchg
sub
sub
inc
xor
ja
loopne
pop
aam
jge,pt
pop
inc
pop
sub
mov
stc
jnp
mov
push
mov
mov
xlat
outsb
and
add
subb
ja
mov
push
out
cltd
js
jg
lods
daa
push
testl
mov
cmp
xchg
and
mov
cltd
adc
hlt
jb
pop
negl
mov
iret
lret
sbb
mov
ror
sub
adc
repz
mov
call
loop
jge
scas
into
cmc
pop
jbe
loop
div
push
loopne
push
add
ljmp
push
pop
in
and
mov
inc
loop
enter
cmp
adc
pop
outsb
test
adc
xchg
cmc
pop
xor
js
cs
fsubs
sahf
cmc
out
pusha
into
int3
pushf
mov
loope
dec
ss
mov
pop
jbe
loop
push
xor
sbb
gs
pop
xlat
lds
in
xlat
scas
or
fistpl
arpl
cmpl
adc
dec
ret
in
movsl
ret
pop
inc
fsubl
stos
scas
ret
cld
pop
xor
cltd
pop
repnz
jns
mov
mov
mov
push
call
ds
stos
shll
mov
cmp
fbld
jb
pop
arpl
mov
mov
mov
push
loope
fsubs
jg
mov
imul
cmpb
std
push
jo
sbb
mov
sti
jb
mov
in
ljmp
push
insb
jo
cmc
out
test
mov
and
rcrb
idivl
xlat
sub
lods
push
xacquire
dec
mov
jg
pusha
movsb
popf
es
or
mov
cmc
pop
or
xor
jno
mov
mov
jmp
xchg
call
xchg
jp
les
cmpb
popa
cmpb
mov
add
push
mul
jecxz
mov
pop
test
idivl
pop
stos
es
or
inc
push
imul
cltd
scas
cltd
js
sahf
xchg
sbb
pop
jmp
inc
sub
sbb
jns
mov
outsl
icebp
cmpl
mov
mov
mov
jae
mov
fs
hlt
notb
cwtl
fucomip
sbb
test
dec
pop
rolb
loopne
dec
pop
ret
xor
decb
ret
fwait
adc
arpl
lret
hlt
aad
int3
rcrb
jp
xchg
inc
fisubrs
enter
movsl
lods
out
or
mov
jnp
ljmp
out
ljmp
aad
jp
jae
jp
jae
jp
jae
jp
jae
jp
jae
jp
jae
aas
pusha
lret
pop
movsl
jl
sbbb
mov
or
inc
repz
int
jecxz
lahf
cmp
ja
in
out
pop
popl
sub
iret
dec
lock
xchg
jecxz
int3
ret
jle
int
fiadds
ja
lcall
pusha
mov
mov
add
popa
loope
xchg
sbb
mov
mov
cmp
scas
or
ret
stos
roll
push
sbb
mov
push
int
fadds
cld
jbe
sahf
mov
loope
adc
enter
jge
pop
jge
xchg
imul
aas
stos
inc
cmp
out
mov
cmp
mov
lcall
je
movsl
add
shll
in
aam
jo
adcl
pop
xchg
sbb
and
imul
jle
xchg
pop
mov
sbb
adc
and
loop
add
jo
cmpsl
sbb
pop
mov
shl
add
pop
mov
andb
stc
rcrl
cli
mov
xchg
mov
mov
xlat
into
add
int
inc
pusha
rcr
std
xlat
aaa
add
int
mov
cs
pushf
cld
repz
mull
jg
mov
in
xchg
sub
incl
or
fildl
pop
call
sbb
xor
leave
shr
xor
sub
aam
insb
in
icebp
dec
pop
or
jmp
fstpl
out
sub
pop
mov
mov
mov
rorl
push
or
jecxz
add
dec
fs
pusha
sbbl
pop
outsb
lcall
cmpsb
mov
push
ret
pusha
lods
mov
shrl
pop
stos
and
xchg
push
js
mov
mov
fcoml
jnp
outsl
stos
imul
mov
iret
mulb
ret
adc
pop
sti
inc
mov
ja
shlb
mov
and
cmp
jns
outsl
pop
cmpsl
cmc
mov
cli
mov
jge
jo
push
inc
in
pop
cs
mov
jmp
aam
aaa
arpl
pop
mov
fcomi
mov
jnp
test
mov
cwtl
pop
in
jle
pushl
jg
clc
cmp
xchg
mov
adc
push
xchg
add
xor
dec
mov
imul
ljmp
sbb
inc
or
or
xor
adc
fsub
scas
mov
subb
lret
pusha
sub
mov
rcll
enter
mov
add
cs
mov
imul
jecxz
clc
cltd
xchg
mov
mov
ret
jae
jmp
lret
mov
ljmp
mov
add
cli
idivl
adc
xor
hlt
cmpsb
loop,pn
arpl
nop
xor
fwait
push
inc
repz
in
inc
or
aad
add
and
ss
test
jge
out
ja
mov
sbb
sbb
repnz
cmp
pop
cmp
jecxz
push
test
mov
push
nop
push
jae
xor
jg
scas
cmpb
nop
data16
push
and
jnp
rcrl
mov
stos
add
or
test
test
dec
icebp
sub
pop
sbb
out
movsb
jo
cmp
lcall
or
xor
add
sarl
xchg
add
out
cmpsb
dec
jle
lahf
out
cmpsb
mov
jbe
or
outsl
or
pusha
or
lea
dec
outsl
popf
inc
jg
push
fisubl
addr16
ret
mov
into
xor
clc
pop
inc
out
adc
outsb
adc
lcall
jns
jbe
xor
aad
push
push
mov
xchg
int
sarl
mov
hlt
mov
sub
push
js
fwait
jne
jo
or
scas
and
or
inc
jecxz
arpl
cli
xchg
aad
imul
addr16
sahf
jecxz
outsl
out
xor
out
inc
mov
sub
xor
test
xor
and
sbb
sub
cmp
or
mull
ret
hlt
movsl
xor
and
add
mov
mov
cmp
mov
or
div
adc
es
and
scas
fldcw
stos
addl
adc
sub
push
push
xor
lds
lds
mov
fisubl
test
inc
shll
fldl
jge
das
in
dec
leave
cmp
mov
jg
jo
pminub
call
dec
mov
insl
out
notb
jno
cli
dec
mov
int
xor
pop
in
or
jns
push
aas
xor
or
jp
arpl
inc
and
call
pop
shlb
add
mov
sbb
push
adc
mov
ds
rcll
loop
lret
rcll
lock
stc
add
adc
or
and
and
jb
lock
mov
push
mov
mov
repz
push
ret
xchg
inc
loope
stos
xor
stc
out
out
pop
mov
and
shll
sub
adc
mov
xlat
ljmp
in
rcrl
clc
arpl
loope
in
mov
std
sbb
xor
sub
sbb
stc
f2xm1
or
inc
jp
int
mov
mov
sbb
scas
repnz
push
dec
arpl
es
ret
pop
mov
sbb
adc
jp
loopne
pusha
ficompl
mov
or
rcrl
cmp
scas
loop
sbb
or
leave
jnp
fbld
ret
add
pop
push
or
aaa
mov
push
cmpsb
in
ficomps
jge
divl
lahf
and
sbb
fstpt
adcl
jecxz
loopne
rorl
sbb
fcoml
lock
fidivrl
ficoms
mov
stos
xrelease
shlb
cmp
loope
sti
shlb
or
in
jmp
aaa
test
xor
testb
outsl
int3
mov
mov
into
insl
mov
fwait
xor
push
fisubrl
add
jns
cmp
cmp
mov
jecxz
out
xor
inc
xchg
xor
sbb
sub
mov
daa
test
jle
jecxz
xor
push
loopne
pop
cld
add
and
fs
jae
fistpl
insb
mov
or
sub
xor
addb
leave
movsl
scas
fbstp
inc
enter
push
jb
mov
lret
push
lret
mov
repz
nop
std
pop
fdivr
je
sbb
popf
push
ljmp
adc
adc
push
pushf
mov
cmpsb
push
pop
ljmp
ljmp
daa
ret
push
mov
outsl
cmp
ret
pop
mov
pop
jl
ds
ja
pop
stos
fiadds
xchg
mov
out
into
pop
xor
xchg
or
ss
les
daa
cmp
xchg
mov
and
mov
pusha
dec
cmp
clc
mov
mov
inc
mov
xor
mov
mov
cli
loope
in
loop
ret
pop
sti
das
shrl
aas
idivb
jns
stc
rcrb
mov
inc
sub
cmp
sbb
int3
mov
sub
aas
mov
in
jg
lret
xor
outsl
ljmp
and
int
or
test
jmp
rcl
pusha
mov
nop
or
ret
inc
fucomp
cs
jp
stos
or
mov
pop
js
insl
xor
inc
inc
ljmp
mov
fcmovb
repz
jecxz
popf
repz
loop
daa
adc
and
lods
pop
imul
andb
and
test
mov
sbb
mov
loopne
dec
xchg
mov
loop
rep
adc
inc
inc
jno
or
aad
add
scas
mov
sbb
testl
daa
jae
dec
sbb
arpl
nop
test
inc
lcall
mov
int3
mov
cmp
ljmp
and
arpl
jb
jno
jmp
sbb
xchg
shufps
lods
fbld
jl
jecxz
cmp
mov
pop
cmc
jmp
imull
xchg
xchg
divl
jo
adc
dec
es
jg
or
into
addb
rorb
pop
nop
mov
add
inc
jg
imul
mov
mov
push
inc
inc
xchg
mov
loop
jp
out
fimull
or
cwtl
pop
cli
push
subl
jecxz
arpl
inc
idivl
pop
jl
pop
jns
sub
add
scas
jae
add
outsb
jmp
cmpsb
push
mov
mov
inc
movsb
pop
jecxz
std
insl
xchg
lahf
sbb
and
pop
sbb
fsubrs
jae
jb
int
mov
jmp
or
out
fistpll
and
mov
xchg
jecxz
pusha
loop
dec
repnz
add
into
push
or
jb
pusha
mov
mov
movsl
jns
pop
inc
xor
dec
cltd
inc
cltd
push
mov
jg
mov
inc
lahf
stos
fcomi
call
lcall
loop
sbb
and
cli
sbb
jne
lret
add
xchg
and
pop
fstl
call
adc
aam
add
cli
aad
push
cmp
pop
aas
ret
loopne
jle
into
mov
pusha
in
cmp
fldl
mov
inc
orl
dec
pop
cwtl
sahf
insl
cmp
xor
iret
or
popa
jno
adc
xor
mov
or
xor
sbb
mov
mov
mov
push
or
les
pusha
push
dec
mov
dec
int
jb
pop
cmc
pop
into
repz
std
push
push
enter
push
or
es
pop
incl
add
adc
fstpl
sbb
cmp
test
adc
lods
dec
sub
and
mov
iret
or
out
push
or
push
and
movsb
scas
aas
pop
jg
lock
arpl
fstpl
jecxz
push
or
sbb
xor
jg
insl
das
fstpt
xchg
andl
adc
fisubl
scas
loop
outsl
mov
mov
mov
sbb
mov
and
int
cltd
adc
xchg
inc
incb
mov
adcl
fdivrl
repz
loop
mov
jo
mov
outsl
pop
push
inc
xor
jae
loop
popa
dec
cmpsb
cmp
mov
hlt
insl
in
cmp
add
jmp
sti
enter
repz
mov
cmpsb
sti
arpl
lcall
add
icebp
mov
xchg
dec
push
mov
and
jmp
push
jecxz
pusha
into
pop
mov
xlat
pop
push
mov
gs
sbb
stos
call
sbb
fisubl
sbb
jecxz
push
testb
inc
negl
xchg
dec
fstpl
pop
xor
xchg
and
lock
int
mov
push
inc
mov
js
push
test
push
fst
arpl
mov
mov
mov
aas
in
xor
out
xlat
aam
mov
cmp
pusha
stc
lcall
fildll
aas
mov
cmp
add
push
leave
rclb
movsb
cmpsb
idivl
sahf
inc
add
push
jae
cmpb
mov
push
fsubrp
jo
xor
mov
sub
and
mov
xor
mov
jnp
call
popf
out
out
and
mov
dec
adc
aas
jg
jmp
mov
mov
loope
and
mov
pusha
jne
sarl
xchg
push
bound
push
jg
loop
ja
push
xor
lea
jmp
adc
pusha
jns
pop
xor
mov
icebp
mov
and
rcl
and
push
xlat
pop
pop
mov
xchg
push
fisubl
sbb
in
movsl
push
sub
mov
outsl
clc
fxam
ret
into
nop
in
imul
and
push
enter
xlat
push
jae
jno
imul
aam
lea
neg
fnstsw
inc
int3
jmp
pop
les
repnz
fldt
sub
mov
test
call
fdivl
pushf
mov
pop
sbb
jae
call
bound
pop
fnstsw
lea
adc
xchg
nop
mov
pop
mov
xchg
ss
add
push
test
xchg
jmp
mov
movsb
iret
sub
cmc
jo
das
leave
inc
mov
mul
mov
push
jno
rol
leave
cmp
xchg
cmp
sarl
sbb
lret
cli
add
sbb
in
mov
test
mov
out
lret
sbb
jnp
fstl
add
out
pop
mov
push
out
jmp
aas
pop
and
dec
jecxz
repnz
in
out
out
pop
aaa
iret
xchg
adc
pop
lahf
stos
shl
cmc
popf
pop
stos
jecxz
and
dec
adc
dec
adc
jecxz
mov
ja
outsl
shll
push
jecxz
scas
pop
dec
in
mov
sti
pushf
out
mov
icebp
and
pop
lret
clc
xor
mov
nop
pop
mov
cmp
sahf
push
jge
mov
pop
iret
arpl
or
insl
cwtl
xchg
in
jno
push
xor
or
lcall
mov
inc
filds
pop
push
dec
call
jl
mov
push
push
mov
cmp
and
aad
dec
jno
jmp
es
push
push
dec
notl
xor
xor
cmp
push
divb
outsl
mov
icebp
sti
nop
movsl
and
add
fiadds
pop
loope
cmp
neg
jecxz
jae
loop
mov
push
push
mov
lea
scas
fiaddl
in
jns
mov
cs
testl
mov
std
lret
mov
nop
xchg
repz
cld
inc
xor
imul
arpl
xchg
dec
into
fucomp
and
cmp
pop
movsl
and
out
cli
icebp
int
inc
aad
movsl
mov
or
testl
sti
scas
mov
jecxz
ja
out
adc
mov
repz
jnp
and
call
ss
mov
and
aas
push
es
push
or
int
inc
ss
pop
mov
sub
jbe
jle
out
in
in
arpl
fisttps
mov
pop
add
cld
sti
xor
adc
idivl
iret
iret
bound
fbld
mov
adc
lret
adc
sbb
jmp
addb
aad
cmc
outsb
add
fists
movsb
popf
aad
loopne
js
jb
fcoml
stos
jle
nop
adc
cmp
clc
outsl
and
arpl
add
sbb
jnp
fistps
rcr
arpl
add
cld
je
push
pushf
loopne
cmpl
add
into
xchg
jmp
rclb
xchg
loope
ljmp
sub
add
mov
mov
xchg
scas
xchg
lret
into
pop
movsl
addr16
pusha
jecxz
pusha
imul
xchg
aaa
fcompl
aas
inc
fld
push
iret
daa
jecxz
adc
xchg
xchg
xchg
and
ret
std
hlt
ds
ds
push
mov
xchg
xchg
adc
mov
push
out
popa
mov
sub
xchg
imul
cwtl
lahf
in
out
lods
sub
mov
ret
fiaddl
shrl
fildll
push
jecxz
scas
push
ret
mov
jecxz
mov
imul
loop
divb
movl
sub
add
inc
icebp
mov
and
ret
loopne
jb
xchg
hlt
lea
add
test
cs
adc
insl
sbb
xchg
sbb
jecxz
popl
adc
lods
cld
ljmp
mov
sti
add
cmc
pop
test
test
ret
dec
xor
icebp
and
inc
or
inc
movsl
stos
mov
cwtl
mov
push
sbb
mov
pop
xchg
pop
sbb
mov
je
sti
stc
pop
lods
add
inc
aam
dec
cs
mov
add
pop
js
mov
stos
and
test
imul
fisttps
sbb
ret
dec
ret
mov
pop
jo
mov
push
int3
inc
xor
fwait
rcrl
jne
shll
icebp
adc
addr16
dec
xchg
jge
repz
sub
gs
lahf
sub
loopne
insl
mov
out
push
mov
xor
ret
mov
cmp
fstl
in
cs
xchg
repz
filds
mov
div
adc
jecxz
xchg
pop
jge
sub
stos
ret
test
or
inc
out
pop
ljmp
sub
jmp
ljmp
pop
ffreep
popa
and
add
ret
sub
push
dec
mov
adc
jg
clc
ljmp
addl
cmp
and
xchg
mov
loope
and
push
xchg
mov
or
fldenv
mov
cs
mov
rcr
push
or
push
aas
ret
cli
cli
aad
in
dec
xbegin
mov
jbe
mov
fnstenv
push
mov
insl
inc
jo
aad
push
enter
adc
pop
xor
scas
stos
ds
scas
cmp
loop
mov
out
int
jge
orl
mov
aam
cld
clc
xor
xchg
jecxz
pushl
mov
mov
ds
sti
ret
vmovsd
push
into
adc
and
pop
push
cmp
scas
lods
int
imul
addl
sti
jl
lahf
dec
jmp
lock
jecxz
sub
pop
add
or
shl
fucomp
fcomi
cmpsb
push
inc
je
add
sti
jg
insl
dec
push
xor
pop
lock
scas
mov
jno
mov
add
ret
sbb
adc
add
xor
and
fs
lock
ficompl
xchg
sbbb
push
repz
sbb
shl
push
push
fcmovbe
rorl
mov
mov
mov
xlat
clc
xchg
mov
push
pop
aam
rolb
push
mov
out
inc
mov
outsl
fstp
js
xchg
xchg
push
or
repnz
ljmp
cmpsl
push
pop
dec
mov
outsb
xchg
mov
idivb
cmp
lock
dec
shrl
int
mov
fldcw
dec
cli
data16
sbb
mov
insl
mov
sahf
aam
rcrb
popf
push
push
inc
ljmp
out
inc
popf
push
or
int
sbb
ret
insb
jmp
adc
sbb
push
add
in
or
fcomps
rorb
mov
andps
lock
out
shll
pop
fcmovnu
sti
in
mov
push
mov
leave
add
dec
ljmp
shl
ret
mov
ffree
dec
sbb
pop
mov
jecxz
cmpsl
mov
aam
jae
or
movsb
xor
iret
push
mov
jnp
push
push
sbb
mov
mov
push
mov
movsb
pop
mov
cli
add
mov
cmpsb
test
fwait
or
icebp
sub
sub
adc
pop
add
xor
outsb
or
loopne
pop
ret
cs
xor
or
mov
fs
mov
inc
dec
shr
jae
and
int3
and
xor
ljmp
pop
or
jmp
ret
jno
out
arpl
arpl
add
lcall
and
arpl
push
loop
out
lock
mov
mov
and
add
clc
lret
sbb
movsl
add
inc
es
pusha
mov
je
or
sbb
mov
xor
xlat
sub
test
repnz
or
test
lods
push
and
lods
icebp
cmp
das
mov
popa
xlat
dec
push
repz
cmp
enter
mov
adc
pop
mov
fisttps
scas
iret
decb
leave
xchg
test
popa
gs
mov
dec
loope
push
jno
mov
jno
popf
lret
pop
pusha
int
adc
xor
cwtl
pop
jb
cs
mov
or
es
and
push
cmp
sahf
mov
jmp
xchg
add
out
jbe
or
sub
jmp
jo
mov
add
cmp
lods
inc
jg
mov
iret
nop
cmc
pop
push
ds
scas
and
out
lods
lret
and
jnp
ret
cmpl
ret
xor
pop
sbb
mov
mov
mov
daa
iret
ret
or
dec
adc
inc
cmc
and
ljmp
mov
dec
sti
adc
lahf
dec
popf
repz
shl
xor
stos
jb
cli
ret
andb
xor
mov
mov
or
and
xchg
pop
daa
pop
and
jns
jge
stos
in
mov
mov
shr
add
in
movsl
scas
aaa
ficomps
mov
imul
fbld
add
mov
push
push
xchg
mov
adc
sbbb
pop
aaa
mov
pusha
ret
sub
pop
fdivl
cmp
out
mov
and
shlb
push
lods
std
mov
sub
pop
cmpsb
push
xor
sub
adc
adc
aas
push
xchg
icebp
clc
ds
push
out
jns,pn
mov
enter
loop
mov
mov
jbe
sub
int
aad
jne
jne
icebp
int
sti
and
and
loop
mov
ljmp
pop
lret
mov
repz
lahf
mov
jmp
test
xor
ljmp
out
sbb
mov
push
jle
or
jge
jecxz
insl
lea
nop
ljmp
xchg
imul
mov
pop
or
gs
push
mov
aad
fnsave
inc
push
cmpsb
fnsave
into
jns
xchg
pop
fwait
or
insb
jle
sub
jl
and
in
push
and
push
mov
mov
out
push
adc
outsl
ljmp
das
push
lret
scas
loope
jne
pop
mov
push
or
sbb
icebp
mov
andl
sbb
adc
push
repz
in
xchg
stc
cs
cld
ss
jecxz
xchg
ret
push
mov
xchg
dec
sbb
fisubrs
pusha
sub
pop
in
push
xor
pusha
or
mov
stos
inc
jae
adc
js
aam
lea
dec
sub
mov
push
stos
stos
pusha
sbb
pop
and
inc
xchg
mov
and
imul
dec
or
aam
mov
jbe
cli
push
je
push
sub
push
push
mov
push
xchg
fstl
fisubrl
pop
and
lret
push
sub
xor
aad
cmp
xchg
arpl
xlat
mov
dec
push
imul
fprem
inc
mov
ret
ja
mov
int
lret
mov
xor
inc
mov
icebp
or
cmp
repz
mov
clc
inc
add
rcr
adc
mov
inc
jecxz
add
lret
mov
lret
int3
jb
mov
aad
jecxz
xor
mov
xchg
pop
scas
add
fnstsw
adc
stos
shrl
lahf
pop
fistpl
mov
jnp
mov
std
fistps
or
push
jb
cmp
push
cmp
loope
add
lret
sub
outsl
cmpsl
ret
ljmp
stc
jne
fstp
and
in
jle
push
xchg
or
sub
push
push
adc
push
sub
roll
mov
jno
stos
pushf
cmpsl
cmp
fsubrs
sbb
jl
dec
repnz
mov
hlt
test
clc
sub
pop
or
add
or
jge
and
ret
fiadds
jne
pop
imul
cmpsb
xchg
das
xor
ret
fimull
pop
fnstsw
or
divb
add
fstpt
adc
xorb
add
jno
pop
arpl
sbb
enter
inc
mov
pop
loope
cli
and
js
mov
inc
dec
mov
jns
scas
adc
push
xchg
xchg
ret
sbb
cmpsl
or
push
xchg
imul
repnz
mov
xorl
adc
cmc
sti
and
inc
or
mov
ret
pop
popf
into
and
mov
mov
mov
pop
jp
add
loop
ljmp
scas
pop
dec
push
loop
jg
mov
xchg
adc
not
inc
addr16
xchg
xor
test
add
and
jns
xor
lcall
jmp
in
fidivrs
mov
bound
pusha
sahf
loop
pop
aam
add
fsubrs
xchg
shll
sub
popf
repnz
test
push
out
cltd
andb
cli
jl
loope
xchg
fwait
mov
fldcw
call
xchg
enter
jp
push
sbb
cmp
mov
ret
fidivrs
adc
mov
filds
mov
jl
mov
aam
mov
scas
sbb
insb
pop
das
repnz
pop
adc
mov
dec
xchg
sahf
cmp
call
mov
pop
loop
jnp
loop
test
mov
jecxz
sti
pop
cmp
stos
rclb
imul
jg
in
stos
sti
fisubl
lea
shrl
adc
pop
jo
push
rcll
in
mov
push
pop
push
cmc
pop
cmp
and
mov
jb
aam
push
mov
sbb
jno
rcr
out
repz
add
jae
idivl
loopne
rcll
lahf
pslld
fidivl
addr16
mov
jle
rclb
cmp
mov
ja
ret
ljmp
mov
add
pop
das
mull
out
fucomip
sti
jg
cwtl
pop
push
int3
repnz
cmc
pusha
sbb
mov
int
inc
sub
mov
or
jae
call
ret
int3
push
out
xor
mov
dec
fidivl
mov
cmp
mov
pushf
rclb
inc
and
xorb
sbb
sti
push
ret
repnz
push
fidivl
loop
ret
loope
xchg
mov
loope
sti
lahf
push
xchg
mov
into
push
inc
cmpsl
arpl
inc
push
loopne
mov
adcb
pop
fidivrs
repz
fnsave
xchg
push
addr16
pop
stos
insb
pushl
aaa
fsub
imull
je
xchg
into
sub
jge
out
aas
push
sti
pop
push
xchg
xor
xchg
imul
sti
test
pusha
gs
sbb
pop
shl
imul
mov
fsubr
outsl
jbe
js
jne
stos
int3
gs
mov
fiadds
mov
movsl
stos
inc
mov
and
pop
sbb
cmp
dec
rorl
cs
std
mov
roll
cmc
xchg
cmp
outsl
repnz
les
cmp
ret
jecxz
aam
mov
repnz
outsl
fs
ret
repnz
jge
fdivp
ds
cmp
mov
lret
cmc
jp
pop
mov
lcall
arpl
loope
leave
mov
push
adc
mov
repnz
mov
mov
push
xor
dec
sub
jle
fnstsw
pop
fstl
push
sub
pop
cmc
hlt
and
mov
and
or
push
dec
call
orb
pop
pop
and
or
jl
push
mov
dec
aas
ret
xchg
je
inc
fiaddl
cmpsb
mov
sub
cmp
aas
dec
jecxz
lret
pop
subb
mov
xchg
pusha
faddl
pop
rolb
inc
rorl
mov
movb
mov
scas
out
inc
pusha
sbb
xchg
sub
pop
hlt
movsb
xchg
mov
mov
popa
and
jp
js
sub
mov
jl
out
stos
loope
loope
xchg
mov
pop
cmp
loopne
push
xchg
push
mov
pop
fimull
popf
fldenv
mov
push
dec
icebp
dec
lock
jecxz
jle
pop
ja
out
enter
cmp
cli
mov
xchg
jg
aad
cltd
fstpl
dec
add
jg
fsubrp
pop
adc
push
xor
rcl
aad
adc
hlt
xor
adc
inc
movsb
in
mov
mov
sbb
cmp
xchg
call
in
mov
inc
dec
push
inc
mov
mov
popa
inc
frstor
lods
in
dec
mov
stos
arpl
mov
jb
cli
out
aam
jge
cs
inc
outsb
pop
jns
mov
int
fwait
and
int3
dec
ret
push
pusha
sbb
adc
shlb
xlat
test
stos
mov
cmpsb
loop
sbb
in
xor
in
repnz
daa
xor
cs
push
outsb
xor
jecxz
pop
mov
push
bound
jns
dec
movsl
jno
cwtl
pop
stc
test
jbe
jns
jmp
jns
dec
adc
inc
loop
xchg
aaa
into
sti
out
pop
xchg
push
xchg
out
insl
push
int3
bound
and
jl
or
ret
repnz
mov
and
lods
xchg
push
pop
enter
imul
xlat
add
das
loop
sahf
mov
or
ja
sti
addr16
and
dec
sub
mov
leave
push
jns
iret
in
and
call
rol
mov
pop
or
inc
cld
inc
inc
xor
dec
xchg
or
mov
or
je
jmp
push
ja
cmpsb
aad
ficoms
pop
test
fbld
adc
ja
fsubrl
cmpsl
push
jns
inc
add
packuswb
mov
ja
movsl
jp
aas
inc
cmpsb
add
icebp
add
int
mov
pop
pop
or
pop
fistl
push
cmpsl
test
xor
out
scas
stc
cli
and
mov
inc
sbb
mov
hlt
mov
or
imul
sub
out
mov
inc
ret
push
in
sbbl
jae
xchg
lcall
in
and
ficoml
outsb
push
mov
mov
xor
pop
cmpsb
insl
mov
mov
pop
lret
fdivrl
cmpl
ds
or
mov
lret
ret
jecxz
inc
arpl
xchg
cwtl
outsl
fstl
add
and
xor
cmp
and
xchg
cmpsb
adc
mov
adc
xorb
out
mov
sbb
inc
sbb
adc
cmp
in
xchg
repnz
jae
clc
xchg
int
push
jle
xor
nop
popf
insb
clc
fdivr
push
cmpl
data16
mov
scas
mov
loop
push
cmp
cltd
sbb
xchg
xchg
mov
out
fisubrs
xchg
shll
mov
mov
and
mov
inc
aas
lahf
add
push
and
fimull
xchg
subb
mov
push
arpl
mov
xchg
call
in
or
jb
in
adc
out
jnp
cmc
mov
ds
and
into
scas
push
bound
ficoml
add
mov
jae
outsl
push
ja
icebp
sbb
out
jle
loop
loop
add
mul
mov
outsl
push
fwait
stc
xor
mov
xchg
jmp
loop
ror
jle
int
mov
mov
mov
inc
add
mov
movsb
mov
adcb
cmp
iret
or
sub
mov
popf
ret
inc
repnz
notl
jmp
call
sbbb
jb
das
cmpsl
fstp
dec
aad
pusha
inc
xor
add
hlt
pop
jg
cmp
rorl
cmp
test
pop
into
outsb
rcrl
or
add
or
sbb
aad
pop
mov
inc
dec
shll
movsl
rorl
pop
std
jae
sti
loope
and
arpl
pop
test
aas
stos
pop
mov
out
out
add
int3
rcr
in
add
mov
fisubl
ret
mov
jne
jo
mov
ret
hlt
pushf
add
rcrb
add
mov
dec
cltd
add
movsl
stc
int
jb
push
sub
pusha
xor
idivl
out
call
push
xor
pushf
cld
pop
xlat
add
pusha
push
imul
scas
enter
dec
loopne
lahf
adc
mov
jecxz
jns
cmp
inc
or
sub
cld
push
inc
cmp
add
mov
shll
jae
add
data16
es
fidivrs
mov
mov
mov
push
cmc
popa
add
mov
cmpsb
jnp
jae
aaa
lret
lret
sarb
inc
mov
adc
fnsetpm(287
shl
xchg
ljmp
in
and
jno
lds
loop
notb
scas
jnp
popa
cmp
shl
orb
stos
sbb
pop
roll
dec
or
ror
gs
jp
aam
shr
ret
pop
mov
icebp
dec
jle
fcomip
movsb
in
aaa
inc
jmp
add
fsubrs
daa
test
mov
add
mov
pusha
sbb
push
cmp
mov
sub
in
dec
or
or
mov
mov
cmp
shlb
andl
lahf
je
testl
stos
xchg
xchg
stos
mov
outsb
jo
repnz
fmulp
loop,pt
xor
adcb
movsl
jns
nop
mov
shlb
lods
or
sub
mov
lcall
pop
pop
xlat
movl
lret
aad
cmp
jg
mov
shlb
mov
call
add
jmp
mov
std
push
mull
outsl
sbb
stos
xor
jge
cs
pop
dec
call
mov
pusha
cmpl
pop
mov
cmp
sub
ret
add
mov
dec
int
mov
push
lea
repz
mov
add
xlat
in
push
lods
popf
adc
mov
mov
jns
jne
dec
movl
ss
or
shlb
imul
sti
cmpsb
arpl
pusha
cmp
xor
icebp
cmpsb
outsb
mov
xchg
xchg
stc
adc
mul
mulb
inc
test
and
repnz
fstpl
push
adc
out
sti
jo
mov
and
out
out
add
fisubrs
ret
dec
cli
lret
gs
cmpsb
pusha
or
enter
in
inc
std
push
bnd
mov
mov
push
push
mov
lock
dec
cmp
pop
mov
jae
fsubl
gs
into
push
psrlw
loop
lds
pop
pop
and
dec
insl
mov
mov
scas
inc
push
mov
jge
test
rolb
scas
push
adc
test
ret
clc
cmpsb
inc
push
add
movsb
mov
sbb
fimuls
fidivrl
cmpsb
leave
and
ret
push
xor
out
mov
scas
out
fadd
fbld
push
ficompl
cmc
mull
sub
sub
or
ret
fucom
testl
pop
xlat
lods
mov
movsb
dec
jle
negl
mov
mov
xchg
add
push
shlb
popf
jecxz
mov
stos
xchg
add
push
jge
mov
mov
inc
sahf
out
mov
ljmp
cmp
dec
out
out
mov
call
outsl
jae
and
int
jp
mov
inc
push
pusha
adc
cltd
out
pop
add
mov
pusha
push
iret
fistpl
dec
rcll
pop
fwait
stos
stos
xor
sbb
aaa
and
das
jmp
rcll
jmp
pop
ret
push
mov
mov
loop
adc
test
aad
push
aad
jle
call
loopne
inc
not
out
lret
adc
loope
icebp
cmpsl
roll
fimuls
mov
call
mov
cmc
sbb
std
mov
cmp
add
mov
jp
hlt
cmpsb
out
inc
jp
fiadds
in
xor
inc
movsl
xchg
lock
jne
and
mull
ret
pop
pop
scas
jmp
adc
pop
test
les
lahf
test
jnp
mov
cmp
andl
inc
pop
ja
pusha
xor
jns
dec
sti
jecxz
test
jecxz
dec
jp
adc
enter
decb
outsl
test
lods
xchg
repz
inc
outsl
sub
push
inc
icebp
pop
clc
jge
mov
scas
jge
cmp
aas
add
pop
negb
xor
mov
mov
repz
sbb
mov
lock
es
mov
lret
std
outsb
enter
stos
mov
add
shll
push
add
push
or
cmc
sub
xor
mov
and
xor
sub
fmuls
mov
hlt
sbb
outsb
ss
inc
cs
imul
or
rorl
inc
jnp
cmp
xchg
popl
push
out
jecxz
pushl
bound
leave
push
push
pusha
cmp
insl
loope
or
xlat
test
out
cmp
or
xor
jns
mov
mov
into
or
popl
xor
add
hlt
jg,pn
fld
sbb
mov
scas
mov
mov
mov
add
sar
push
call
push
and
sbb
lcall
repnz
pusha
imul
jl
mov
pop
adc
or
rcll
xor
push
dec
inc
rcr
mov
ljmp
js
inc
fmul
loop
cld
test
bound
icebp
pop
jl
stos
push
addl
or
xor
fistps
mov
and
jae
sbb
mov
fbld
or
fwait
mov
lahf
lret
push
inc
push
dec
lods
test
arpl
ds
mov
sbb
shlb
adc
inc
shll
sahf
dec
sbb
frstor
adc
int
push
leave
andl
jmp
gs
rolb
andl
push
lahf
inc
shll
pusha
mov
inc
test
add
or
ja
adc
and
jne
lds
sbb
jmp
mov
mov
filds
mov
push
mov
lea
jae
into
sub
out
mov
pusha
mov
bound
loop
loope
mov
frstpm(287
xlat
mov
sbbl
shr
addl
dec
shl
mov
jno
mov
cmp
xor
mov
scas
pop
rcll
pop
cmp
mov
jmp
jmp
fcomip
and
and
adc
xor
nop
xchg
das
mov
dec
repnz
enter
jb
push
and
cld
jecxz
dec
testl
mov
push
pop
fsubrl
mov
xor
out
mov
and
jae
shll
inc
adc
or
mov
mov
aaa
sbb
jnp
mov
mov
test
leave
fnsave
mov
sbb
fimull
push
dec
jb
ljmp
push
xchg
push
push
cli
fwait
sub
pushf
push
fistpll
pop
shll
jb
lret
lods
xchg
jle
filds
cmp
iret
ret
cwtl
xor
nop
lock
add
insb
aas
xchg
sti
jmp
xchg
jmp
icebp
test
popa
pop
sti
std
test
mov
inc
inc
idivl
fnstsw
pop
push
mov
jmp
in
daa
ret
not
loopne
xor
ret
popf
jp
stos
mov
in
out
lahf
jb
repnz
test
mov
jecxz
jnp
scas
outsb
cmpb
repnz
in
stos
pop
mov
push
ret
pop
testb
push
mov
cmpsl
inc
add
cwtl
lret
addb
js
dec
int3
cmp
popa
pop
cli
loopne
in
mov
adc
jb,pn
and
fstpl
rcll
cwtl
movsl
xor
or
sbbl
andb
jl
sbb
pusha
shr
loop
bnd
mov
imul
sahf
pop
dec
pop
inc
mov
icebp
lods
jge
push
lock
pop
jbe
ficomps
adc
mov
sarb
icebp
jnp
repnz
fcomps
aam
xor
inc
fldt
sub
jecxz
push
sarb
dec
push
add
notb
sti
push
push
arpl
fsts
pusha
xchg
push
pop
sub
mov
fwait
mov
aad
daa
jmp
or
frstor
movsl
pop
push
outsb
mov
cmp
inc
mov
pop
jae
test
in
sahf
push
or
mov
shll
fnstcw
addr16
inc
mov
jmp
outsl
stos
cmpsb
fildl
mov
inc
add
or
mov
dec
jb
pushf
scas
mov
ret
cmp
movsl
jns
arpl
loop
mov
and
add
outsl
fisubrs
mov
and
dec
dec
adc
mov
cmc
sbb
stos
lea
std
inc
scas
out
stos
arpl
out
push
xchg
cmp
mov
subb
mov
jp
mov
and
add
testb
add
xchg
ljmp
sbb
fnstenv
xlat
jno
cli
and
icebp
pop
mov
cmp
int
sbb
add
out
jnp
inc
shll
dec
push
repnz
sbb
mov
push
int3
push
imul
imul
pop
jae
cmp
lods
movsl
fwait
jae
fidivs
sbb
mov
fcmovnu
loopne
pop
mov
imul
es
dec
cmp
dec
cmp
pop
fstl
fmuls
fiadds
scas
lcall
es
out
xor
mov
popa
cmp
sbb
jns
mov
dec
cli
dec
into
mov
push
push
pop
jb
aaa
mov
sbb
jb
xchg
cmp
fwait
stc
popa
cwtl
lods
mov
fistl
fcoml
mov
mov
mov
imul
mov
fildll
repz
pop
into
cmpsb
ret
inc
adc
sarb
cld
pop
mov
push
lret
sub
mov
rorb
cmpb
mov
mov
jle
pop
leave
js
clc
out
test
cmpsl
scas
icebp
add
mov
mov
sti
pop
leave
loop
sbb
inc
jmp
mov
pop
mov
ret
xor
lret
sbb
cltd
mov
cmp
jae
mov
mov
mov
arpl
sbb
loope
xor
mov
mov
jmp
cs
ret
lret
out
scas
mov
sar
loopne
push
and
fwait
addl
push
stos
ja
xor
xor
repz
xchg
push
sub
pop
xor
sub
push
adc
cmp
mov
test
adc
jmp
mov
popa
mov
mov
fnstsw
leave
add
fstps
mov
adc
pushf
mov
pusha
adc
dec
shll
xchg
fldl
jge
icebp
loopne
stos
ret
ljmp
mov
sahf
sarl
imul
xchg
push
dec
mov
ja
inc
dec
xor
mov
cmc
pop
jle
ficoml
mov
add
ret
cltd
movsl
test
cmp
outsl
push
pop
mov
cmp
sub
inc
mov
loope
mov
addb
dec
pop
nop
sub
jmp
adc
es
mov
fidivs
xor
cmp
decl
in
mov
into
in
repnz
je
push
push
ret
push
outsb
arpl
mov
iret
lret
test
stos
cmpsb
stos
adc
sarb
ds
shrl
xlat
int
add
add
xchg
shrl
push
repz
mov
and
loopne
and
mov
lock
fbld
int3
out
movsb
in
popf
inc
sarl
mov
arpl
test
ret
mov
xor
push
mov
pop
mov
and
mov
or
fldenv
sub
rcrl
adc
inc
cmpsb
dec
in
jno
enter
cli
mov
mov
sti
addr16
adc
pop
std
dec
cmc
or
mov
mov
add
push
xor
arpl
mov
push
stc
out
test
lock
fsubp
lods
jp
ljmp
std
sbb
repz
xor
pop
cs
pop
out
jle
inc
aaa
add
out
out
jmp
mov
jbe
into
jecxz
out
mov
mov
inc
and
add
xor
cmc
jl
aam
mov
mov
bound
gs
add
repz
inc
mov
push
mov
cmp
in
sub
dec
sub
iret
push
and
fldenv
push
dec
push
div
in
push
fisubrs
push
cmp
ljmp
ret
cmp
ljmp
out
xor
pusha
pop
cmpsb
jns
fnsave
and
scas
ljmp
sbb
cmp
push
jge
mov
jno
add
xchg
jp
mov
xor
pop
mov
lea
cmc
cmp
sbb
call
ljmp
adc
mov
insb
mov
jno
add
repnz
ds
pop
out
scas
pop
cmp
imul
sahf
repz
hlt
cmpsb
add
sub
xor
cmp
out
ja
inc
ljmp
xchg
fld
mov
aad
rcr
cmc
add
in
incl
mov
cmpsb
cmc
mov
repz
ljmp
dec
cs
add
insb
frstpm(287
lock
jb
jp
outsl
add
xchg
mov
js
fdivrs
dec
and
jno
flds
jnp
fidivrl
int
call
andb
pop
int3
sbb
loope
out
mov
dec
lret
sbb
outsl
add
fcmovne
ret
jns
mov
fstpl
and
orl
xchg
idivb
mov
fildl
and
xchg
iret
mov
ja
xor
int
push
cmpsb
clc
shl
xchg
sbb
push
mov
mov
mov
test
ret
jg
mov
mov
mov
lcall
sbb
adc
sahf
hlt
pusha
xor
aad
or
aam
jecxz
mov
idiv
dec
repz
sti
adc
je
mov
repnz
sbb
in
bnd
inc
js
jnp
cmp
xchg
jmp
loop
mov
fists
lret
jmp
mov
mov
fimull
imull
xchg
ror
push
add
jb
lcall
or
outsl
inc
cld
es
addr16
arpl
aas
ret
stos
cmpxchg
pusha
outsl
sub
sbb
lret
out
xchg
loope
and
mov
fmuls
inc
sbb
adc
mov
sbbb
lea
sbb
push
or
out
and
sbb
sahf
push
in
je
bswap
lret
je
xchg
sub
add
jmp
mov
out
add
ja
sti
fs
mov
pop
adc
leave
shll
xor
push
mov
dec
sti
pop
scas
test
into
incl
leave
sbbl
idivl
jmp
add
loope
mov
bound
std
fnstcw
fcom
pop
fucom
cmp
adc
loope
xlat
out
lock
jecxz
add
pop
and
ret
leave
or
lcall
arpl
negl
test
pop
mov
jmp
cmpsl
out
scas
sti
fnsave
mov
icebp
out
pop
stc
sti
nop
push
out
orb
jnp
lea
aaa
fwait
lret
fstpt
push
push
push
push
repnz
lahf
lretw
ret
shrb
adc
aad
movsb
push
mov
loop
pop
cmp
ss
ljmp
bound
test
pop
cld
cmp
fldcw
je
fistl
mov
aam
cmp
shll
flds
mov
push
push
or
cld
push
mov
or
push
ret
pop
inc
les
jns
cmp
and
jns
cmpsb
mov
push
mov
mov
mov
popa
ja
aam
pop
lret
mov
add
add
jg
sahf
test
arpl
out
mov
fcmovu
dec
mov
fdivrl
push
daa
loopne
stos
push
pop
jnp
loope
push
loopne
loopne
es
pop
aam
fucom
icebp
imul
mov
flds
pop
mov
imul
jecxz
lcall
dec
popa
fcmovne
mov
xor
test
fstpt
mov
loop
fsubrs
mov
je
or
sub
jo
ret
push
fsubr
xchg
stos
lods
in
push
aaa
dec
std
sub
mov
sub
push
mov
repz
pop
fcomp
push
adc
jg
ret
mov
lods
fsubrs
movsb
cmp
or
loopne
jle
std
loop
mov
inc
jae
icebp
fstsw
mov
mov
sbb
xor
dec
test
clc
gs
and
jmp
ret
pop
adc
xchg
or
insb
mov
pusha
pop
adc
fistpll
faddl
loope
enter
cmpsl
mov
xchg
xor
fdivrp
inc
scas
cmp
aaa
mov
fninit
shl
jo
repz
jecxz
jo
ss
js
mov
cwtl
ficomps
xchg
repz
mov
int3
xchg
jnp
ror
ret
inc
jecxz
cmp
mov
negl
mov
fchs
outsl
jp
cld
mov
mov
mov
push
or
add
in
loope
dec
fldl
pop
adc
push
mov
lods
sub
lsl
loop
shrl
out
sub
ret
in
fwait
and
sbb
add
mov
push
cmc
adc
sti
push
pop
mov
push
repnz
out
lcall
lcall
xor
dec
pop
mov
fidivrl
loope
decl
inc
sbb
mov
adc
stos
xor
idiv
push
lea
popa
dec
or
call
lret
sti
in
int
sti
call
mov
fucom
cmp
sub
int
fisubs
scas
repz
mov
hlt
and
mov
pop
cmp
aas
jb
enter
pop
aad
jbe
cs
insl
sti
rcrl
mov
push
or
lret
push
add
imulb
cli
stos
out
xchg
push
or
pop
add
cmp
not
fmuls
mov
cmpsl
in
ret
imul
push
aas
loopne
outsl
cmp
lahf
mov
int3
lret
adc
xchg
lock
mov
lock
call
mov
and
ljmp
mov
inc
mov
cs
shl
repz
and
or
cwtl
out
ret
mov
loop
xchg
loope
cwtl
loop
lods
add
jns
mov
xchg
sbb
mov
mov
out
sbbl
xor
mov
out
pushf
mov
jae
arpl
lea
rcll
in
rcl
into
iret
xchg
nop
mov
data16
xor
cmc
cmp
cmp
fidivs
jecxz
mov
bound
mov
adc
out
adc
insb
mov
cmp
dec
popf
xchg
mov
pop
ja
loop
popa
add
xorl
mov
xor
xor
scas
jb
xchg
mov
mov
addr16
jmp
std
adc
jnp
repz
cmp
fmuls
xor
dec
jnp
mov
gs
xor
jae
mov
xor
jno
loopne
xor
xchg
adc
rorb
hlt
aas
add
sbb
mov
push
push
enter
mov
fistl
cmpsl
cmp
add
pop
or
mov
jmp
js
mov
in
in
test
loopne
ja
jae
mov
repnz
es
lock
ret
xlat
test
mov
mov
and
test
insb
pusha
mov
push
fdivl
lock
or
dec
js
stos
inc
inc
xchg
dec
icebp
pop
cs
rolb
enter
loop
pop
pop
add
stos
xor
cmpl
fs
pxor
fwait
or
push
insl
push
jnp
add
movsl
stos
push
mov
iret
xor
ret
pusha
fwait
mov
pop
sub
fisubl
sarb
dec
std
ds
repz
mov
pop
rolb
mov
jbe
jecxz
fmuls
hlt
pop
sti
jns
fidivrl
mov
jmp
mov
or
cmc
cmp
cs
jae
rcll
pop
stos
mov
and
cmc
test
xchg
stc
lcall
mov
cmp
sbb
test
in
in
jne
mov
sti
mov
mov
jp
push
rcrl
rorl
hlt
testl
mov
mov
or
fldenv
cmp
ret
loopne
sahf
mov
jns
sub
jne
cs
xor
fsubrs
pop
sbb
mov
jge
adc
and
pusha
incl
es
push
movsb
cmp
pushl
jno
pop
adc
add
adc
test
stos
dec
icebp
enter
cld
jl
inc
jno
and
pop
mov
add
call
cs
xchg
inc
or
cmc
pusha
push
push
mov
adc
inc
cmc
pusha
mov
dec
push
fstpl
xchg
jae
dec
repnz
or
fs
xchg
dec
mov
sarb
xor
xchg
mov
dec
and
ret
pop
shll
cs
pusha
fstl
hlt
mov
loope
or
pop
jb
mov
mov
sbb
arpl
mov
stc
fnstenv
pop
aad
repnz
cmp
inc
push
daa
mov
pushf
mov
sbb
jp
push
or
fxch
testb
mov
mov
xchg
insl
push
jnp
xor
out
xlat
notl
inc
cmp
pop
adc
or
out
push
xchg
cmp
xor
jle
loop
mov
cmpsl
enter
pop
dec
mov
ret
cli
push
ret
nop
jno
ds
jge
popf
push
and
cmp
loopne
aas
rcr
daa
add
sbb
push
dec
xchg
or
mov
stos
xor
ret
pop
sbb
pop
test
aaa
insl
shlb
cmp
lahf
lret
jg
dec
fldenv
cmpl
and
sub
cmpsb
hlt
sbb
test
pusha
pop
dec
movl
int
jecxz
pop
push
jb
test
pusha
rclb
mov
es
xchg
adc
add
adc
jecxz
and
pop
loopne
jbe
and
pop
xor
and
dec
sub
daa
pop
shlb
xchg
neg
gs
bound
cmp
loopne
test
ja
push
arpl
mov
and
mov
cmp
jae
sbb
mov
je
jmp
inc
sub
jb
cli
pop
cmp
dec
movsl
js
fwait
mov
jecxz
sub
stc
push
test
dec
lds
sub
or
cli
mov
repnz
push
stos
or
ret
fisubrs
mov
push
sbb
shrl
lahf
in
bound
insb
in
sbb
imul
aam
jns
add
mov
inc
je
adc
push
les
pop
not
nop
and
shrl
jge
pop
aad
cmp
push
sar
cld
sbb
cmc
sar
pop
push
sbb
scas
mov
push
pop
xor
outsl
push
mov
je
sub
add
xchg
inc
fwait
testl
mov
push
test
or
mov
mov
outsb
or
les
dec
mov
sub
hlt
clc
push
cs
int
mov
aas
andb
rclb
shl
call
je
jno
fistps
sbb
cmpl
jecxz
or
lahf
out
cmp
fiaddl
xor
sbbl
dec
arpl
mov
enter
ss
repz
aaa
mov
inc
insl
test
aas
rcll
mov
fmulp
mov
xor
cmp
ret
testl
jno
pop
push
sub
inc
xchg
repnz
push
pop
inc
xor
add
add
inc
insl
add
fidivs
mull
mov
sub
fisttpl
rep
xor
aas
mov
mov
test
pusha
shlb
push
shll
and
enter
ficomps
nop
sbb
inc
mov
jbe
loop
icebp
lret
push
xor
xlat
stos
test
push
inc
dec
fisttps
jecxz
daa
nop
adc
stos
mov
adcb
mov
shl
cld
je
negl
xlat
fsubr
sti
clc
xorl
imul
pop
out
or
and
out
lods
jg
aad
mov
lock
mov
mov
div
adc
xor
mov
push
push
jns
and
fwait
dec
scas
xorb
push
or
push
inc
ljmp
fists
sbb
and
and
mov
pop
jl
iret
cmp
sbb
cmpsb
jg
int3
ret
lea
cmp
dec
call
stos
stos
incb
jle
loopne
nop
dec
jecxz
test
pop
mov
outsl
scas
repz
jmp
pop
mov
cmc
lods
fmull
movsb
cltd
inc
push
test
lret
les
pop
int
lock
adc
jne
std
lcall
push
ja
pop
shl
call
jnp
xchg
pop
fistps
arpl
mov
adc
aad
aaa
stos
mov
xor
xchg
mov
mov
add
pop
call
xor
add
adc
enter
xchg
inc
fnsave
fwait
add
incb
adc
imul
lret
mov
add
into
jecxz
or
sub
cmpl
mov
adc
jbe
arpl
mov
xor
cmp
dec
stos
leave
daa
fiaddl
stos
imul
int3
popa
lods
or
or
int3
pop
pop
mov
cmp
movsb
mov
sub
xchg
push
xlat
mov
dec
repz
dec
mov
adc
stc
and
xchg
rorb
xchg
mov
jno
aas
lcall
fcomps
test
js
cs
ljmp
add
cmp
fisubrs
cmp
xchg
aaa
mul
jp
jecxz
fisttpll
scas
idiv
push
push
decl
dec
addl
mov
loopw
stos
lock
loopne
mov
fst
mov
inc
cli
pop
push
mov
sub
js
jg
scas
in
popa
dec
or
loop
test
lahf
xor
xchg
add
mov
mov
sti
and
popf
std
mov
xor
mov
out
pop
shlb
push
mov
pusha
fwait
cmpsl
imull
es
mov
pusha
jmp
mov
inc
shll
add
adc
aas
ljmp
sbbb
inc
jg
ret
test
sub
dec
ret
lret
ret
fwait
sti
xchg
cmp
aad
add
ret
ret
cmpsb
scas
nopl
fisubl
cmpsl
incb
imul
jae
out
jecxz
sti
fistpll
pop
cmp
scas
add
outsl
lret
push
mov
mov
mov
lahf
xor
clc
arpl
dec
sbb
lea
js
inc
jo
mov
int
dec
xchg
xchg
test
ss
rcr
lret
icebp
jecxz
loope
in
loop
jnp
les
sarb
or
std
cld
xchg
pushl
repnz
ja
rcll
leave
inc
shll
adc
inc
outsb
cld
pop
mov
mov
fnsave
sub
pop
adc
inc
imul
ficoms
clc
pop
cmp
jp
repz
mov
out
lahf
or
arpl
ja
repz
ljmp
in
bound
cmp
shlb
ljmp
ljmp
outsl
mov
int3
icebp
mov
shl
push
cmp
push
ret
pop
seto
das
jmp
into
loopne
pusha
pop
popa
pop
add
adc
leave
lock
and
xchg
testl
pusha
jbe
jnp
ljmp
ret
mov
mov
or
jns
loope
sarb
sti
pusha
mov
xlat
rol
add
aad
pusha
dec
cmc
or
mov
mov
idiv
mov
jge
jecxz
fwait
cmp
pop
cs
mov
pop
imull
ja
addr16
andb
aas
and
push
mov
idivb
mov
int
shrb
cmp
mov
and
test
leave
cmp
ret
bnd
shll
movsb
test
lret
icebp
fildll
clc
push
jle
call
and
sbb
push
add
loope
jbe
fbstp
sti
call
inc
rorl
lea
insl
mov
js
icebp
scas
xlat
test
push
push
inc
pushf
dec
push
pop
popf
addl
outsb
rcl
fidivl
cmpl
xchg
out
in
xchg
repz
repz
jns
out
fdivrs
sbb
pop
and
cwtl
mov
pusha
repz
or
mov
push
mov
xor
mov
fistps
jmp
and
push
or
cmc
mov
adc
jmp
ja
add
out
sub
test
push
pop
xlat
pop
mov
push
sub
adc
inc
jno
test
ret
push
ret
int
pop
cmp
adc
repnz
xor
inc
adc
push
and
test
inc
dec
push
sahf
mov
jp
push
inc
pop
div
mov
mov
test
push
push
inc
icebp
add
cmpsl
sti
push
sbb
and
adc
jecxz
inc
lock
outsl
test
mov
iret
stc
adc
jb
pop
inc
int3
cmp
ret
push
pop
lds
ss
repnz
mov
jmp
andl
lods
popa
or
pop
repz
add
in
popa
pop
arpl
mov
ja
mov
cmp
cs
add
int
jmp
jno
push
movsb
adc
pusha
lahf
rorb
out
mull
and
xchg
scas
int3
loopne
pop
add
mov
stos
and
fsubs
mov
js
jns
loop
test
and
ja
or
testl
mov
inc
sbbl
inc
or
mov
cwtl
ja
and
jne
js
ja
imull
ljmp
adc
sub
out
negl
fnsave
push
lahf
fistps
jmp
or
xchg
push
dec
icebp
and
adc
and
ret
xor
notl
fdivl
ret
aam
adc
cmpsb
xor
sub
in
jecxz
std
rcrl
hlt
andl
sub
mov
inc
popa
jnp
repz
hlt
adc
cld
ljmp
xchg
mov
insl
pushf
mov
sub
outsb
mov
cmp
inc
mov
cmpsl
mov
mov
cmp
mov
mull
sbb
icebp
fsubl
or
repnz
cld
and
loopne
mov
rol
sbb
icebp
hlt
mov
cmpl
xchg
add
mov
jmp
mov
lock
and
mov
mov
mov
sub
pop
cmp
jnp
rcll
sti
out
int3
loop
lods
rclb
cld
mov
mov
rcr
imul
lahf
in
mov
push
imul
faddp
pop
jno
jb
outsb
outsl
cld
cmp
xchg
dec
xor
test
notl
jg
xor
inc
or
sti
pop
dec
rorl
jns
xchg
out
rol
dec
add
roll
call
mov
fnsave
mov
out
cmp
xor
sbb
shlb
adc
xchg
xor
shl
add
imul
ret
lret
sbb
lret
ficoml
cmpl
in
cmp
fs
cltd
cld
jae
loop
jae
sahf
xchg
rorb
hlt
xchg
cmp
jecxz
clc
mov
lcall
push
jbe
repz
repnz
jnp
repz
in
inc
mov
sub
ret
aam
push
jnp
mov
lods
popf
push
test
xchg
adc
push
fs
fdivrl
jns
repz
jbe
mov
adc
or
dec
ret
pop
push
fiaddl
inc
imul
popa
imul
mov
ret
mov
daa
hlt
mov
int3
xor
xchg
or
cmp
mov
rorl
mov
mov
int3
cmp
subl
lcall
imul
loopne
mov
imul
xchg
pop
jecxz
imul
arpl
mov
jecxz
jne
adc
inc
jnp
pop
sbb
in
adc
icebp
adc
sbb
mov
shll
xchg
rcr
ja
popf
adc
mov
add
mov
mov
outsb
stos
repz
les
les
lock
sbb
fstps
stos
repz
test
aaa
mov
pop
rclb
std
sub
in
sbb
jge
stc
mov
fisubrl
jne
aaa
cmp
and
cmpsl
jnp
jle
dec
ret
push
icebp
daa
ret
or
xlat
stos
stc
sti
mov
aaa
movsb
insl
jo
daa
ja
pop
sti
ret
shll
insb
jmp
mov
out
adc
movsb
aaa
clc
ljmp
pop
or
push
xchg
std
repz
pop
aaa
fadds
mov
jbe
andl
cmp
inc
lret
add
int3
xchg
adc
adcb
cmc
andl
cmp
cmp
adc
ficoms
inc
adc
cmpsl
mov
fst
aaa
jmp
sbb
out
and
or
clc
icebp
and
pop
sbb
xor
xchg
xchg
shrb
negl
addr16
cltd
lods
roll
popf
mov
scas
movsb
xchg
adc
mov
loop
inc
mov
cmc
clc
pop
jne
in
test
out
loope
ret
imul
add
aam
jo
pop
shlb
sbbb
loop
dec
mov
mov
mov
lods
scas
repz
jb
xchg
add
adc
xchg
add
sbbb
test
hlt
jmp
pop
xorl
mov
outsb
stos
push
lock
mov
loopne
fisubs
aaa
ljmp
pop
repnz
in
mov
mov
pusha
enter
movsl
add
mul
stos
std
fldt
arpl
sbb
fsubrs
mov
jno
add
popf
stc
xor
arpl
stos
and
fadd
movsb
push
hlt
sahf
xchg
outsb
pop
dec
dec
es
add
cmpsb
movsl
cmp
cmpsl
inc
adc
add
mov
pop
fisttpl
test
mov
mov
loopne
mov
loop
inc
push
bound
xor
inc
add
mov
lock
sub
jge
or
bound
subl
shll
ljmp
out
or
ret
xchg
jg,pn
adc
xchg
jnp
sti
mov
subb
in
jno
das
jge
push
scas
push
jno
and
xor
icebp
idiv
jne
pop
pushf
movsl
add
out
cs
es
mov
push
fcmovb
pop
and
lret
insl
cs
sbb
call
repz
orl
and
inc
bound
mov
sbb
jmp
testb
inc
cltd
bound
xchg
lcall
pop
aaa
lods
or
mov
cs
jmp
aas
ljmp
ret
negl
xor
cmc
imul
mov
xchg
fs
fwait
sub
aad
push
out
inc
mov
xchg
pop
xchg
push
in
test
call
aaa
int
mov
fistl
cld
sbb
push
les
add
mov
push
mov
cmpsb
sbb
in
shlb
loop
repnz
sar
ja
data16
ret
int3
inc
add
mov
cmp
clc
xchg
rcrb
inc
add
outsb
or
xor
int
cmp
lret
mov
ret
mov
jecxz
ret
jecxz
sarl
mov
add
pop
movsb
cmp
jmp
mov
mov
xchg
xchg
dec
adc
outsl
mov
orb
xchg
cmc
addb
and
cmp
sbb
loopne
in
jle
adc
inc
mov
adc
outsb
sbb
mov
outsl
loop
movsb
insb
popa
out
call
out
rclb
es
xchg
jmp
mov
loopne
popa
lods
aad
add
xor
mov
push
sbb
or
and
fadd
push
shll
xor
xor
adc
rcrl
insl
mov
pop
shrl
clc
xchg
int
int3
push
insb
arpl
lahf
test
fnstsw
and
inc
or
or
push
cld
cli
sbb
int3
fst
imul
and
sahf
mov
fldenv
mov
mov
or
cs
sar
pop
sub
ss
cmp
xor
mov
xchg
pop
in
xor
push
stos
inc
mov
jae
aas
add
cmpsl
insl
cmpsb
and
mov
dec
push
cmp
or
xor
std
mov
dec
into
inc
adc
mov
mov
mov
inc
jle
fucomp
inc
and
push
inc
pop
ret
in
arpl
sbb
mov
out
mov
mov
sbb
movsb
loopne
bound
mov
add
pusha
sub
add
xchg
add
jecxz
push
pop
dec
add
mov
inc
dec
xorl
fildll
jae
mov
hlt
sahf
xor
pop
enter
xchg
fisubrl
xlat
xor
outsb
sti
mov
adc
ffree
ficomps
xor
mov
adc
pop
inc
inc
pop
jnp
pop
shlb
sub
ja
or
popa
xchg
shll
fnstcw
and
lcall
sbb
cmpsb
cmpsl
xchg
fnstsw
cmp
fwait
cmpsl
push
jp
mov
in
mov
and
mov
push
mov
insb
add
push
sub
std
cld
icebp
jge
sbb
mov
add
cmp
or
or
shlb
pop
sbb
mov
jge
sbb
mov
jmp
adc
sbb
adc
mov
test
aaa
mov
jg
fisubrl
push
dec
jecxz
cld
sbb
loope
sbb
aad
mov
dec
lods
jp
or
pushf
mov
add
mov
or
and
cmpsb
nop
popa
les
add
cs
hlt
pop
add
pusha
and
xor
das
push
fsubrl
pop
mov
and
dec
sub
xchg
ret
dec
repz
and
int3
pop
loop
pushf
into
ja
dec
push
xor
pusha
roll
jb
stc
xchg
add
iret
mov
push
lret
leave
in
jmp
mov
aaa
sbb
push
mov
push
lea
xor
inc
pop
arpl
cmp
in
fcompl
cmpsl
aad
add
mov
mov
das
add
pusha
jecxz
int
dec
and
xchg
in
sti
sbb
xchg
bnd
mov
or
pusha
sub
pop
shlb
imul
jmp
inc
sarb
fwait
nop
popa
nop
pushf
jo
repz
add
pop
push
and
fxch
or
nop
cmpl
fldcw
xor
mov
imul
mov
adc
arpl
lahf
lret
lcall
pop
pop
xlat
cmc
push
sarb
and
fists
pusha
sub
push
pusha
sub
sub
imul
movsl
ret
push
arpl
inc
jmp
sbb
inc
and
in
popf
out
lret
add
neg
mov
jae
cli
xchg
ret
lahf
fmul
dec
xor
popf
jle
inc
nop
inc
mov
shll
cmp
push
daa
sub
jne
jmp
or
arpl
push
adcb
adcl
scas
inc
xor
flds
outsl
int
pop
lret
fnstsw
mov
pop
adc
inc
fldl
push
lods
test
lock
int3
and
loopne
xchg
rcrb
out
out
inc
sahf
nop
loope
mov
js
shl
call
test
mov
fdivs
inc
or
std
loope
or
shll
ljmp
fwait
jp
add
lret
pop
hlt
int3
lock
repz
jnp
jg
sti
out
and
inc
out
add
add
js
adc
lea
ja
in
andps
cmp
sti
mov
out
pop
add
cld
adc
dec
loope
sub
adc
sub
push
mov
cmpb
sti
push
clc
popa
imull
sbb
das
loop
movl
sub
mov
mov
pop
ret
loop
mov
outsl
or
sbb
push
dec
jle
pop
hlt
dec
out
imul
push
sub
push
jno
mov
or
xor
push
test
lret
mov
clc
sti
pop
cmp
pop
rorb
out
cmpsb
add
fsts
or
lahf
fildl
stos
lret
inc
mov
fcmovnbe
fisubrl
js
cmp
jle
xor
xor
hlt
ret
pusha
imul
or
pusha
ss
js
scas
test
mov
push
jo
ljmp
out
loope
mov
push
adc
loop
ret
mov
jb
insb
jecxz
dec
jp
jnp
and
mul
jecxz
mov
movsl
jecxz
aas
shrl
mov
ret
movsb
adc
and
mov
adc
or
jecxz
adc
jno
in
scas
jmp
movsl
sub
cld
in
and
adcl
aam
bnd
jns
cmp
lea
cmp
bound
cmp
lea
inc
std
lcall
mov
out
jns
int
xchg
aas
aam
mov
xor
ret
jp
jae
adc
leave
repnz
insl
loop
loope
loopne
rcll
mov
pop
jmp
mov
cmp
add
pop
lahf
mov
jecxz
insl
inc
mov
xlat
cmp
pop
fstpt
inc
mov
push
and
shl
hlt
push
bound
ja
mov
cmpb
jae
adc
divb
subl
mov
roll
mov
mov
inc
loopne
jo
ficoml
shll
mov
loop
scas
pop
push
ret
shr
cmp
leave
out
arpl
ficoml
pusha
pushf
pop
inc
loope
ror
in
add
mov
pusha
data16
pop
jns
add
jecxz
push
add
xchg
add
imul
lea
out
and
push
dec
andb
add
test
mov
jae
icebp
shr
sub
jmp
scas
mov
loope
ret
mov
and
cmp
sti
jecxz
jmp
sti
test
hlt
pop
and
jg
test
ret
xor
jp
and
jg
and
jl
sbb
mov
sub
jecxz
jmp
mov
mov
cmp
sub
sbbb
cwtl
lahf
rcl
jmp
out
loope
jb
aas
loop
jecxz
jmp
call
xchg
jmp
gs
and
add
sub
ja
aaa
sub
inc
in
xor
pushf
test
push
sar
sbb
cmpsb
aad
mov
imul
lods
add
dec
ret
stc
and
jp
jo
sti
inc
stos
pop
ret
bound
out
leave
mull
ret
inc
aaa
and
push
mov
hlt
xchg
xchg
rol
mov
cmpsb
std
fadds
add
mov
out
fsts
add
pop
mov
push
nop
xchg
lret
ret
aad
pop
in
mov
orl
and
adc
jb
push
xchg
and
xor
addb
aad
negb
in
mov
pop
push
lret
sbb
stos
push
stos
test
pushf
jmp
mov
lcall
imul
dec
dec
xchg
mov
mov
in
fisubl
lods
pop
pusha
mov
mov
add
clc
repnz
jl
or
in
or
pop
bound
xchg
mov
xchg
jecxz
dec
or
xlat
in
call
mov
mov
mov
lahf
dec
into
fndisi(8087
dec
xchg
sti
add
xchg
xchg
pop
decl
dec
into
add
mov
imul
xchg
lods
stc
ret
pusha
push
lods
fidivl
ljmp
cs
in
int3
pop
push
outsb
lret
mov
iret
pusha
mov
mov
jo
nop
inc
sub
loope
adc
pop
jns
cmp
jne
jns
out
fwait
movl
jg
adc
mov
mov
lock
stos
sbb
push
out
adc
inc
push
lahf
and
incl
decl
xor
pop
in
mov
inc
out
or
incb
push
test
js
mov
mov
dec
cmp
mov
repnz
repnz
ljmp
xchg
xchg
lea
mov
xor
roll
sbb
cmp
dec
mov
rorl
xor
push
and
hlt
xchg
andb
pushf
jle
pop
inc
or
mov
mov
lods
fwait
dec
mov
inc
repnz
clc
mov
and
inc
sti
xchg
ret
mov
loopne
lods
popa
inc
adc
ljmp
cmp
scas
jp
out
mov
xor
mov
xor
in
adc
sub
cltd
sub
es
arpl
push
stos
stc
sti
sti
bound
pop
cmp
mov
pop
mov
mov
mov
sbb
sarb
aad
lcall
mov
mov
fbstp
incl
negb
icebp
xchg
and
repnz
lcall
cmp
mov
xchg
sbb
cmp
mov
jp
shll
jno
shl
out
xchg
iret
stc
push
adc
mov
faddl
mov
dec
ljmp
in
jecxz
rcll
cmpsb
stos
pusha
pop
js
pop
cmpsl
mov
clc
repz
ret
je
adc
movsl
scas
adc
call
xor
lods
sbb
jecxz
test
mov
mov
aas
pusha
sub
xchg
repz
idiv
pop
sbb
push
pop
je
mov
cld
xchg
add
filds
pop
push
cli
adcl
std
in
scas
stos
subl
cmp
mov
pusha
lahf
xor
das
jmp
ret
inc
mul
sub
icebp
ljmp
repnz
mov
ljmp
jae
jg
shrb
ret
mov
mov
dec
pop
ljmp
mov
mov
icebp
push
jp
dec
mov
or
inc
fldenv
imul
pop
pusha
jg
mov
hlt
in
mov
jle
bound
inc
test
pusha
mov
lret
pop
or
in
jmp
hlt
cmp
or
pop
push
inc
mov
mov
repnz
add
push
cs
xor
out
in
push
xorl
aad
mov
mov
ds
push
lcall
cmp
out
and
stc
pop
jnp
sbb
ljmp
pusha
scas
pop
scas
push
mov
int
mov
das
mov
out
mov
in
pop
mov
adc
mov
jmp
out
pop
mov
testb
pop
jmp
in
push
shrb
fsubr
pusha
lea
mov
mov
jo
lcall
xchg
fmul
scas
call
rcrb
mov
sbb
push
out
scas
mov
inc
repz
loopne
icebp
or
leave
popf
ljmp
jnp
rorl
mov
cmpsb
mov
cmpsb
mov
dec
cmpsb
push
lahf
inc
stc
outsb
mov
faddl
cmp
mov
clc
idivb
icebp
mov
sub
js
or
and
std
xorb
mov
mov
sbb
pusha
cmp
mov
push
and
xchg
mov
repnz
bound
dec
jae
movsl
push
pop
js
out
xchg
mov
lea
jecxz
dec
jb
mov
js
movb
and
es
lea
mov
and
jl
fisttpl
ret
nop
pop
decb
repz
cmp
xchg
negl
roll
rorl
outsl
js
and
add
or
test
jne
jecxz
add
nop
fnsave
je
daa
cmc
iret
or
adc
mov
xor
mov
iret
iret
push
mov
fldl
pop
cmpsl
int3
mov
test
lea
pop
jg
call
stos
push
in
sbb
xchg
jg
inc
cmp
and
dec
js
ret
jg
loopne
jo
push
cwtl
lret
stos
ret
push
add
and
cli
frstor
mov
ds
jecxz
lods
cs
out
dec
fldt
test
jb
ror
stos
push
leave
sbb
mov
sbb
mov
push
iret
mov
loopne
mov
loop
jae
push
movsl
shr
push
jmp
mov
sti
mov
xor
cli
ljmp
or
and
ss
add
nop
xor
dec
or
loopne
jo
mov
sahf
pusha
jecxz
ficoms
jmp
jecxz
push
scas
in
movsb
jae
and
ljmp
xchg
in
outsb
jne
jecxz
pop
outsl
and
sarl
xchg
jl
xor
test
xor
int
xor
mov
push
je
mov
iret
jb
imul
lock
loope
enter
fcoml
add
outsb
leave
xor
stc
pop
pop
out
inc
push
xlat
addr16
fwait
bound
loope
inc
cwtl
jno
xchg
adc
andb
push
push
icebp
test
mov
mov
outsl
mov
cmp
repz
xor
fwait
pusha
and
xlat
dec
and
jns
cs
mov
inc
enter
mov
stos
pusha
lret
push
sbb
shrb
and
dec
addr16
sahf
hlt
inc
repnz
ret
push
or
mov
es
repz
cmpsb
std
inc
in
dec
and
cmpsb
and
jb
jnp
aas
in
adc
icebp
sbb
hlt
iret
lock
int
popa
stc
cmc
add
gs
jecxz
rclb
xor
loopne
mov
add
loopne
mov
mulb
jle
pop
inc
insb
add
and
scas
inc
xor
dec
shl
bound
ljmp
mov
add
loop
mov
add
jnp
repnz
fsubrl
jb
fbld
mov
iret
xchg
cmp
fwait
outsl
imul
rorl
icebp
xchg
add
xchg
push
pop
pop
or
lcall
or
popa
dec
iret
movsl
stos
mov
arpl
or
stos
nop
push
xor
add
mov
inc
jg
jecxz
mov
ds
scas
jecxz
pop
out
ja
bnd
ficomps
and
loopne
ret
mov
xchg
add
inc
lods
int
mov
insl
inc
aas
loop
lahf
movsb
aad
out
xor
jmp
fucomp
std
and
mov
mov
icebp
adcb
mov
loop
mov
pusha
arpl
push
icebp
cmpsb
mov
pop
fstpl
mov
push
add
jae
loopne
rolb
ret
aad
bound
inc
mov
mov
xchg
xchg
ret
into
sbb
fs
movsl
pusha
fcomp
inc
xchg
loope
adc
jecxz,pn
add
add
cmc
jae
shlb
cmpsl
xchg
or
andl
jle
sbb
dec
insl
insb
sbb
movsb
jae
jmp
fmulp
stos
iret
jb
insb
mov
xchg
call
sub
repz
and
ret
xchg
popa
mov
loop
cmp
mov
mov
test
negl
and
das
popf
mov
out
inc
rorb
jne
andb
xor
sub
popa
fcompl
sub
notl
cmp
xchg
andl
cmp
hlt
pop
fidivrl
test
adc
ret
mov
adc
mov
or
mov
test
les
pop
imul
pop
stos
stos
xor
dec
or
sti
scas
pusha
in
mov
stc
mov
std
adc
sahf
add
jp
ja
mov
xchg
in
jp
pusha
add
mov
pop
lea
cwtl
ficoml
outsb
enter
lahf
roll
stc
cmpsb
jecxz
cmp
fiaddl
sub
mov
imull
jo
add
xlat
clc
push
or
loope
arpl
outsb
in
dec
cmp
mov
and
daa
fildll
int
cli
push
loope
xchg
jp
outsl
movsb
dec
sub
repnz
jae
cmp
pop
fs
xlat
lods
xchg
pop
imul
xlat
in
mov
nop
push
jp
loopne
popf
insb
xor
push
push
inc
sbb
pop
jne
pop
hlt
inc
ret
adc
sbb
inc
jo
inc
iret
xchg
inc
and
xor
mov
in
daa
cli
rcr
out
jnp
mov
ljmp
mov
or
xchg
mov
pop
pop
call
push
daa
js
mov
imul
push
repz
nop
pusha
dec
push
inc
call
icebp
jae
dec
imul
fildl
mov
ret
fbld
xor
adc
xorl
mov
ds
jg
mov
lcall
arpl
jl
fwait
mov
adc
fwait
jecxz
push
sti
sub
int
shrl
fcmovnb
jnp
jno
add
out
dec
mov
pusha
and
ficoml
lea
sar
and
sub
ret
xchg
sub
cmpl
add
imul
lea
dec
inc
je
pop
or
icebp
push
adc
rcrb
rolb
outsl
xor
xchg
xlat
mov
mov
movsb
pushf
xchg
xlat
iret
cmp
out
cs
int
add
loop
xor
daa
adc
negl
out
rorl
aas
jmp
adcb
lret
stos
and
mov
ret
mov
cmpsb
rorl
sbb
add
mov
and
sbb
es
test
jno
xor
lret
in
mov
fmul
mov
fstps
aam
mov
aam
ja
ret
lock
mov
pop
les
dec
jle
lret
and
icebp
ljmp
idivb
popa
mov
movsl
ret
dec
cmp
add
push
movsb
lahf
lret
js
adc
pusha
inc
xchg
mov
out
mov
inc
ret
scas
dec
inc
arpl
push
clc
xor
imul
sbb
mov
pop
push
out
ljmp
jae
neg
cmpsb
nop
lret
jp
fildll
xor
cmp
es
jno
cmp
fcmove
pop
jge
dec
push
loop
xchg
pop
ret
sub
out
jecxz
cmp
fsub
clc
rcr
pusha
push
sti
inc
inc
dec
cmp
enter
dec
test
iret
lret
pop
and
mov
dec
gs
shlb
ret
xlat
out
mov
hlt
and
shrb
pslld
pop
adc
stos
inc
pop
and
sarl
mov
mov
stos
lahf
mov
pop
adc
arpl
dec
ds
xor
fsubrl
insl
ss
and
inc
pop
sub
dec
fisubl
push
shr
jl
and
mov
scas
negl
xor
adc
fxch
inc
fisubs
clc
ret
push
clc
push
or
mov
shrl
mov
mov
mov
sub
lret
xor
push
add
inc
push
jne
or
jmp
xor
out
lcall
pop
ss
or
jae
fsubr
push
and
movsl
sbb
cmp
enter
stos
out
es
adc
cmp
inc
mov
mov
lret
cmc
dec
sbb
jg
push
mov
push
pop
and
dec
mov
movb
xor
outsb
mov
gs
hlt
inc
movl
imul
cmp
testb
fstpt
lmsw
xlat
and
cli
outsl
sbb
loope
fcmovne
repz
int3
pop
fists
ds
mov
cmpb
xchg
repnz
gs
mov
ret
inc
icebp
dec
clc
and
cmp
push
pop
dec
loopne
pop
fstl
test
int
jns
loop
cmp
int3
adcl
aam
mov
and
fcmovb
icebp
test
mov
adc
aaa
into
repnz
xchg
xor
jbe
mov
xchg
mov
push
mov
mov
push
sbb
cld
movl
bound
xchg
out
lea
mov
or
icebp
adc
and
sbb
push
test
arpl
mov
loopne
cli
xchg
cld
inc
jl
jnp
and
lods
lock
jb
pusha
sbb
testl
pusha
stos
dec
xor
xor
inc
stc
and
loop
or
inc
es
lcall
mov
dec
sbbb
fwait
xchg
ret
cmp
fdivr
popf
jecxz
outsl
sbbl
mov
ljmp
pop
out
push
cli
jge
nop
push
lret
mov
imul
pop
xor
addr16
movsb
and
xor
out
outsb
jle
or
leave
and
inc
int
test
clc
xchg
mov
xchg
mov
push
ja
xchg
dec
pop
adc
inc
filds
es
mov
cwtl
cmpsl
stc
pop
push
xchg
jb
jns
out
clc
in
mov
mov
mov
push
mov
sti
leave
xor
mov
or
mov
xchg
adc
push
sub
out
xor
rcll
lea
repz
dec
cld
pop
imul
test
push
jecxz
add
out
dec
inc
mov
es
arpl
xchg
pop
xor
arpl
jb
sub
mov
ret
jb
inc
push
xor
xchg
iret
stos
inc
push
pusha
jae
data16
mov
sbb
xchg
mov
adc
sahf
in
mov
pop
lea
jg
stos
lods
aaa
pop
stos
pop
ficoml
dec
test
adcl
sub
pop
decl
jmp
pushf
add
pop
jnp
adc
pop
jno
filds
repnz
or
and
rcrl
mov
sbbl
ds
cmp
pusha
push
mov
and
mov
pop
sub
cmp
dec
ret
jb
mov
test
fisubrs
push
lahf
cmc
mov
xchg
pop
pop
faddl
cmp
lcall
daa
loop
jg
int
and
jno
jp
and
or
inc
cmp
sbb
test
in
jecxz
pushf
rcrb
xor
lret
bound
cmp
pop
dec
mov
pusha
inc
jns
ja
adc
movsb
jge
dec
icebp
popl
dec
xchg
mov
mov
aam
in
addl
mov
clc
push
mov
cmpsl
mov
sbb
fdivl
mov
mov
or
jp
sub
lea
loopne
xchg
xchg
cltd
ret
in
fcoms
cmp
data16
mov
clc
pusha
push
cmpsb
js
mov
roll
fs
shll
mov
inc
or
push
int3
pop
pop
sbbb
lock
mov
in
in
and
mov
pop
xor
repnz
cli
xchg
jecxz
pop
call
sbb
cmc
data16
sbb
cli
push
mov
cmp
shll
adc
xchg
pop
fucom
arpl
cli
cmp
mov
mov
mov
dec
adc
jae
or
rolb
loope
and
pop
jmp
jecxz
jbe
test
popf
call
xchg
aad
ja
add
sub
ljmp
lock
stos
jp
call
jo
arpl
and
sti
int
sbbb
mov
and
stc
fcoms
xor
push
stc
push
test
and
insb
decl
add
pop
popf
mov
imul
cmp
jp
mov
xchg
mov
iret
push
ret
add
arpl
inc
dec
cmp
mov
pop
scas
stos
push
jb
mov
push
jnp
inc
pop
dec
or
and
xlat
pop
mov
gs
mov
jne
mov
jle
mov
jne
cli
pop
roll
divl
push
shlb
sbbl
push
cmpl
ficompl
cmp
insl
subl
sahf
inc
jnp
and
xchg
add
out
mov
loopne
mov
xchg
xchg
mov
xor
aas
cwtl
data16
pop
int
mov
xor
mov
js
orl
dec
add
adc
cmpsb
addr16
inc
mov
andb
mov
and
shr
out
in
add
test
lock
inc
jle
xor
or
scas
push
xor
fcoml
movsb
pop
daa
test
mov
loop
insl
jmp
out
sub
and
lea
pop
cld
jns
push
repz
aaa
add
mov
subl
xchg
out
in
sub
les
push
rcl
into
pop
int3
dec
sub
out
adc
cmpb
popa
push
lods
mov
lahf
out
jp
fs
stos
dec
add
mov
add
loopne
scas
cwtl
or
fcom
adc
out
aas
mov
add
jmp
mov
cmc
addr16
es
rolb
pushf
fldt
sub
aad
scas
cld
jmp
jge
pop
xor
cmp
push
es
lret
cwtl
xchg
xor
icebp
pop
out
shrb
test
pushf
lods
outsl
aam
add
ljmp
push
shlb
imul
fbld
aad
xchg
inc
sub
sar
xor
imul
jae
cld
ficoms
cmpsb
and
xchg
out
lahf
jg
xor
inc
mov
adc
stc
cmpsb
ds
xchg
pop
fbstp
sti
cmpsb
mov
inc
pop
notl
std
xor
xchg
pop
mov
stos
pusha
pop
cmp
scas
cmp
and
mov
sbb
scas
lret
add
repnz
dec
lret
mov
mov
and
into
inc
icebp
push
adc
arpl
pusha
in
mov
insl
jo
ss
lea
mov
lods
dec
ja
push
repnz
ret
cs
jmp
aaa
jl
aas
insl
outsl
subl
test
mov
adc
cmpsb
loop
mov
popa
and
scas
push
jmp
jge
sti
mov
ljmp
ret
mov
sbb
shr
xchg
les
and
test
xor
sub
orb
testl
xchg
lods
repnz
mov
xchg
push
ljmp
push
insb
sbb
stos
loop
add
in
repz
nop
sti
adc
jl
push
and
mov
push
repnz
int3
mov
sub
cli
add
add
dec
and
add
loopne
and
ret
mov
stc
stos
bound
mov
stc
and
lods
popl
xchg
jp
loop
std
push
or
mov
xchg
dec
inc
movsb
lret
in
sbb
pop
out
jnp
scas
scas
sbb
jb
scas
aad
repz
mov
clc
xchg
fcom
test
pop
lock
push
je
std
outsb
inc
hlt
ret
aam
push
mov
cmp
xchg
jle
dec
cmp
mov
das
lock
xchg
imul
iret
ds
mov
lahf
xor
rolb
jae
bound
add
rorb
fimull
cmc
call
and
xchg
bound
sbb
aas
inc
push
push
push
push
or
cs
jnp
inc
imul
jnp
jb
std
inc
xchg
sbb
stos
mov
mov
jnp
push
mov
mov
pusha
pop
pop
aam
pop
nop
xor
jno
mov
mov
fcmovnb
mov
mov
mov
loope
in
push
mov
popa
inc
cmp
ret
add
mov
mov
fnstenv
sbbl
rcrb
loopne
out
cmp
mov
mov
sbb
add
mov
movsl
add
stc
sub
mov
add
icebp
rcll
scas
hlt
repnz
jae
adc
gs
push
dec
inc
jecxz
or
aad
mov
dec
testl
addl
xor
fs
xor
sbb
sbbl
jecxz
or
cli
scas
or
add
daa
push
aam
jb
outsb
addr16
mov
mov
push
jge
ret
dec
repz
mov
outsl
jb
push
pop
jae
fmulp
mov
and
pushf
repnz
mov
iret
mov
and
mov
jns
sbb
inc
lds
aaa
dec
sub
jae
mov
add
lahf
in
iret
push
pusha
in
sarb
xchg
in
push
sbb
cmp
add
in
xor
adc
mov
xchg
push
shrb
push
mov
out
pop
je
lahf
push
mov
mov
xor
jbe
push
stos
int3
fnsave
sbb
and
fcoms
sti
push
sbb
mov
push
fcomps
and
pop
inc
ficompl
dec
movl
daa
in
cld
leave
mov
push
movsb
inc
dec
in
insl
push
xchg
inc
or
adc
sub
jmp
add
pushw
scas
or
adc
jl
bound
inc
jns
dec
data16
mov
fildll
push
pop
mov
or
sub
mov
xchg
mov
cmp
insl
sti
cmpsl
jge
scas
xchg
lcall
sti
pop
or
sub
jnp
insl
and
pop
mov
push
mov
hlt
stos
pusha
pop
jle
push
fiadds
aas
aaa
repz
movl
mov
mov
cli
sub
xor
mov
out
push
mov
leave
sbb
stos
punpckldq
les
enter
or
jo
push
rorb
xchg
mov
mov
pop
sbb
mov
push
mov
mov
fbld
xor
sub
push
cld
mov
jbe
out
movsl
adc
mov
sub
cmp
ret
testl
lock
adc
fwait
push
lea
imul
into
icebp
mov
ret
pusha
mov
mov
jge
mov
push
rcll
aaa
inc
xor
out
mov
insb
fldlg2
mov
jg
jae
outsl
lods
jp
jae
mov
ja
fnsave
addr16
mov
dec
sbb
cmpsl
adc
repz
cld
rcll
and
xor
notb
mov
daa
push
arpl
loop
js
clc
dec
aas
sub
sahf
mov
int3
push
mov
adc
imul
in
negl
rcl
cmp
mov
into
daa
testl
fistpll
sbb
je
push
imul
cld
in
clc
push
hlt
loope
adc
or
lret
int3
sbb
hlt
int
push
out
pop
mov
and
xchg
in
cli
adc
stos
mov
mov
out
pop
and
adc
lods
push
loop
addr16
mov
xor
mov
mov
fidivs
dec
ret
aam
push
mov
adc
sbb
inc
shll
pop
loopne
jg
clc
shrl
pop
mov
fld
ret
nop
add
sti
in
jecxz
add
loop
push
inc
dec
adc
mov
ss
cs
arpl
in
inc
jne
mov
lock
xchg
cmp
scas
stos
popa
rcll
xchg
mov
call
jmp
stc
loop
pop
sahf
cmp
fstpl
mov
jno
aad
aad
push
dec
push
cmp
bound
cmp
in
xchg
or
out
and
test
sub
mov
int3
pusha
sbb
insl
es
cmpsb
arpl
icebp
sub
outsl
push
movsl
fldenv
and
std
push
lods
negb
stc
mov
add
dec
pop
dec
in
pop
adc
cmc
jbe
add
jmp
imul
scas
jmp
scas
xchg
ret
fcmovbe
in
dec
or
ja
sub
and
mov
pop
push
mov
xor
out
mov
shll
xchg
push
xchg
out
inc
pop
mov
popf
mov
pop
pop
cltd
out
out
xor
iret
out
jno
sub
sti
testb
addr16
mov
mov
shl
dec
loope
adc
adc
fisubs
lret
or
nop
jb
fsubrl
jecxz
mov
and
xor
test
inc
and
cmp
inc
lret
inc
pop
int3
mov
inc
dec
test
lods
cli
aam
xor
mov
mov
mov
fdivr
int
rcrl
stos
cwtl
shrl
in
jne
mov
ficomps
mov
insb
cmp
stc
dec
mov
out
push
fidivl
jge
or
iret
xor
xchg
repnz
or
shl
mov
out
or
mov
inc
clc
sub
lcall
aas
pop
addr16
and
lods
movl
fdivr
shlb
insb
cmp
push
je
push
sub
enter
or
or
lcall
cmpsb
pop
jb
outsb
lahf
inc
inc
fucom
push
adc
jmp
add
addr16
int3
mov
or
add
dec
lds
xlat
push
repnz
sti
lds
daa
jb
inc
mov
in
fsub
jecxz
lock
xchg
cld
sbbl
lret
in
jge
jo
mov
pushl
stc
and
std
adc
cs
mov
int3
and
or
cld
mov
xchg
sbb
xchg
xchg
sarb
repnz
je
push
mov
mov
sub
cmc
test
das
andl
pop
int
push
rcll
lahf
inc
out
bound
push
xchg
test
repnz
ret
cmp
fs
mov
out
xchg
mov
cs
pop
or
or
icebp
ret
les
repz
inc
sub
or
mul
xor
fsubrl
ljmp
bswap
and
push
or
jge
shlb
mov
imul
add
leave
cli
jmp
or
in
shll
les
loop
inc
test
in
loop
pop
outsl
or
lret
outsb
xchg
ljmp
xchg
inc
jg
sar
push
and
xor
push
ret
mov
push
push
out
inc
ror
mov
lods
notl
mulb
cmp
push
addl
in
popf
inc
xchg
fcomi
mov
ror
fmul
out
movsl
sti
outsl
in
jno
std
repnz
sub
fsts
out
scas
lcall
enter
fidivrs
add
pop
into
sbb
dec
jmp
add
stos
cmpsb
cli
push
ja
fsts
jo
arpl
push
sbb
frstor
pop
xchg
mov
test
inc
sti
or
shrl
shlb
shll
xchg
adc
push
in
mulb
dec
aas
mov
jecxz
and
xor
fildl
xlat
scas
bound
scas
pusha
in
pop
mov
cmp
gs
out
add
sbb
andl
in
inc
inc
sub
ljmp
or
jne
pop
fcomip
push
ljmp
xor
es
add
ret
xchg
xchg
ret
or
imull
jbe
lcall
popa
mov
sbb
mov
hlt
mov
es
int3
roll
adc
sub
pop
push
xchg
hlt
or
sahf
mov
stos
shrl
les
mov
pop
es
mov
xorb
cli
or
stos
hlt
mov
mov
rorl
aad
dec
cwtl
dec
fcmovne
mov
mov
outsl
hlt
jbe
das
xor
iret
pop
in
cmp
pop
and
iret
fstp
ret
loop
xchg
jmp
clc
jnp
mov
mov
adc
pop
in
fadds
xor
push
mov
cs
pop
clc
push
sti
mov
adc
cld
outsl
ret
nop
daa
outsb
ret
add
adcb
xor
sub
or
jmp
fiadds
popf
subl
inc
sbb
lock
cmpsb
dec
out
popf
sub
and
add
inc
xchg
mov
or
push
jecxz
in
add
adc
pop
mov
cli
add
inc
jl
movl
call
or
adc
movsl
aam
pop
add
rcr
mov
fadds
gs
dec
or
fisubs
xor
mov
pop
repz
pushw
add
addr16
ret
loope
push
lret
jecxz
icebp
push
aad
mov
cmc
mov
pusha
jg
stos
jno
add
mov
in
mov
bound
mov
pop
or
mov
in
jecxz
dec
xor
push
scas
xor
mov
pop
add
adc
adc
sarb
cmp
jb
rorl
hlt
inc
addr16
pop
push
sbb
stc
lcall
xchg
repz
mull
xlat
mov
jo
inc
stc
add
jmp
idiv
pop
or
jb
aaa
push
arpl
cmpsl
sahf
xrelease
popf
pop
or
movsb
outsl
mov
subb
repz
test
xor
lahf
mov
test
sbb
or
cld
sub
ret
in
or
ficoml
and
cmp
or
cmc
add
add
lret
cmp
and
xor
jg
fsubrl
mov
shrb
fwait
push
inc
sbb
ret
test
call
lahf
mov
lock
or
jnp
xchg
in
xor
scas
cld
jnp
scas
outsl
lret
pop
hlt
or
js
setae
in
and
cwtl
int3
jmp
xor
cmp
mov
mov
pushf
mov
mov
neg
mov
pushf
adc
mov
fidivrs
ljmp
enter
fisttpll
repnz
mov
cmp
pop
jns
icebp
mov
push
lock
mov
jl
insb
pop
xor
sub
xor
ror
cmpsb
shrl
cwtl
or
sbb
hlt
fucomp
push
xor
cld
inc
cmpsl
int
inc
mov
dec
sub
pushf
neg
lds
mov
inc
mov
sbb
in
into
sarl
shll
fnstenv
fisttpl
mov
lods
mov
mov
inc
repz
int
orb
ja
roll
lods
mov
les
cmp
mov
inc
stos
pop
cld
sbbl
push
push
movsl
mov
js
mov
lret
mov
pusha
push
xor
inc
dec
mov
dec
jecxz
shll
lahf
loopne
push
inc
or
outsb
aas
out
sbb
stos
in
jg
jge
pop
shr
mov
idivb
inc
stos
sarb
outsl
insb
and
mov
dec
adc
mov
pop
pop
leave
sti
mov
popa
add
int3
pusha
xchg
lea
sub
xor
jp
mov
adc
ret
push
or
rcl
inc
sub
xchg
testl
stos
push
pop
mov
addr16
jecxz
iret
fcoms
cmpsb
xor
xchg
add
stc
in
shll
mov
addr16
mov
push
ret
out
add
ret
inc
fbld
out
sbb
js
mov
xlat
popf
lcall
mov
ficomps
inc
jg
xor
mov
ret
adc
mov
cmpl
adc
mov
in
jno
mov
push
inc
push
rcll
loope
fwait
outsl
mov
stos
cmc
js
movsb
jne
sbb
push
sbb
dec
xchg
fs
adcl
in
aam
adc
loope
xchg
rclb
adc
outsl
std
add
dec
xor
dec
ret
sub
jmp
movsl
imul
mov
stos
rcrl
sbb
out
pusha
mov
dec
ficoml
inc
cmp
sub
mov
xor
or
sbb
sub
xchg
mov
jns
in
cmpsl
aad
ret
cmpsl
nop
cld
fbld
jmp
add
add
std
lock
jge
stos
int
inc
call
ret
sti
loop
into
add
aad
adcb
add
in
test
mov
pop
adc
or
insb
push
or
scas
and
mov
test
cwtl
adc
xor
in
mov
dec
jp
aam
jmp
ja
inc
jecxz
out
xchg
pop
ret
push
pusha
ds
xchg
mov
fcoml
add
sbb
std
out
scas
mov
dec
fildl
xor
pop
push
mov
inc
dec
and
jg
pushf
cli
cmpsb
pop
shlb
xchg
inc
repnz
stos
or
push
mov
stc
mov
clc
insl
stos
inc
fildll
ret
pop
stos
in
clc
xor
push
lret
ret
mov
fwait
inc
inc
mov
mov
adc
into
cmp
mov
arpl
mov
mov
xor
test
pusha
lods
test
and
out
cltd
dec
jno
and
push
xchg
pop
add
pop
outsl
or
and
stos
idivb
pop
imul
mov
mov
or
stc
stos
out
js
popa
aas
mov
sbb
test
xchg
test
repz
out
xorl
inc
or
subb
cmp
mov
mov
rorl
sub
rcll
xchg
mov
fistpl
jg
adc
aas
dec
dec
test
add
daa
mov
idivb
loopne
scas
mov
mov
mov
inc
scas
test
push
addr16
dec
jns
mov
mov
out
es
cmp
jae
lret
pushf
stos
movsl
or
in
movsl
xor
xchg
stos
adc
arpl
inc
push
in
sbb
pop
ds
mov
cmpsb
ret
sarb
adc
repz
sbb
cmp
mov
pusha
cmp
cmpsl
jae
shr
jb
sbbb
cmpsl
mov
aas
les
fcompl
icebp
gs
adc
mov
mov
inc
xor
js
std
cmc
outsb
push
lret
cld
mov
mov
mov
int3
adc
pop
test
mov
pop
ret
cmpsl
mov
int
mov
cs
lret
pusha
nop
pop
inc
movsl
sarb
cmp
jne
jmp
jns
mov
sub
cmp
ret
out
ret
xchg
cmpl
xchg
bound
xchg
aad
repz
mov
repz
push
enter
movsl
or
add
sti
ret
cld
sarl
xlat
mov
rolb
popf
xchg
idivl
movsl
insb
lds
ret
mov
lods
mov
fdiv
xchg
push
jge
push
ret
inc
imul
ret
mov
mov
lret
mov
stos
adc
aad
aaa
xor
cld
mov
mov
popl
mov
pusha
fwait
test
repnz
and
mov
cmp
flds
fiaddl
in
xchg
mov
pop
and
push
mov
stos
jnp
dec
lods
lods
aas
jno
cmpsl
loop
jb
pusha
lret
icebp
mov
jnp,pn
pop
push
or
fsubrl
or
out
xor
aas
jg
mov
dec
inc
test
shr
outsl
mov
out
inc
cltd
adc
call
push
inc
lea
or
les
imul
sbb
and
sub
push
mov
push
stos
test
lods
pop
pop
push
lock
push
aad
movb
shll
xchg
div
and
fisttpll
jmp
add
mov
mov
ljmp
aad
stos
cmpsb
sbb
or
stos
test
and
in
ljmp
jmp
aaa
aaa
mov
mov
jmp
mov
repz
push
fldl
adc
mov
sub
pusha
in
lcall
ljmp
cmp
sbb
jmp
sahf
movsl
data16
ret
pavgb
insb
test
test
ss
adc
xor
fidivs
xor
outsl
movb
loope
cld
mov
pop
arpl
sti
jp
hlt
add
test
adc
in
out
insb
cwtl
add
push
decl
inc
mov
jecxz
fadd
aad
sub
xchg
ret
xor
pop
aad
xchg
mov
dec
mov
xor
push
in
fdivrs
mov
incb
loopne
stos
xchg
shll
pushf
fbld
mov
mov
repz
pop
dec
adc
jns
test
or
push
push
pop
or
inc
jae
arpl
lahf
ds
add
loop
loopne
fldl2t
arpl
arpl
std
pop
mov
mov
out
cmp
or
or
xor
jnp
mov
xor
lret
arpl
mov
jae
pop
sahf
pop
mov
cmpsb
mov
push
jnp
add
ret
rolb
inc
mov
mov
sti
lret
inc
addr16
out
arpl
sbb
sub
lea
mov
rol
lods
sti
in
idivb
jb
jbe
xchg
xchg
dec
sbb
shll
jmp
push
xor
xchg
cltd
jmp
imul
jne
cmp
shll
jae
mov
bound
data16
loopne
out
xor
mov
inc
cwtl
add
fmull
pushf
push
fwait
xor
xor
xchg
fdivrp
mov
ret
fists
rcr
xchg
jp
inc
pushl
mov
inc
cmpsl
mov
in
jae
and
push
lret
mov
or
jne
inc
lock
or
and
shll
mov
add
add
insb
lahf
hlt
aam
ljmp
mov
cltd
dec
jecxz
mov
mov
daa
cmp
sti
push
imul
mov
adc
xor
xchg
jecxz
scas
loope
xor
mov
mov
jecxz
push
jno
movsl
stos
js
stos
dec
cmp
pusha
push
push
dec
and
rorb
mov
push
push
cmp
out
dec
pop
mov
mov
jg
xchg
cmpsl
shll
xor
sub
int
mov
push
sbb
in
scas
jnp
stos
out
pop
leave
cli
sub
cmp
jno
aam
sbb
sub
out
or
push
fidivs
mov
adc
jp
out
fbstp
cs
repnz
std
lods
clc
out
int3
mov
aas
vorps
sub
outsl
leave
push
add
cmp
add
mov
movsl
jecxz
add
ret
pop
test
mov
rcl
ret
pop
mov
jnp
sub
cmp
repz
mull
out
pop
lret
mov
hlt
and
xchg
and
xchg
mov
xlat
add
rcrl
rol
js
icebp
ret
mov
jp
mov
sti
xchg
mov
push
lods
movsb
mov
pushl
push
xor
sub
mov
mov
nop
jae
mov
out
aas
addr16
jg
pop
dec
fidivrs
call
lcall
ss
xor
adc
pop
and
insb
movsb
mov
push
sti
sub
or
sbb
pop
inc
leave
mov
inc
dec
hlt
push
cmp
dec
pop
cwtl
scas
out
enter
cltd
sbb
aam
das
roll
aaa
mov
add
jnp
mov
pop
inc
pop
inc
lahf
jmp
repz
inc
pusha
stc
loopne
xor
and
adc
jp
and
ret
fidivrs
pop
addb
cmp
mov
dec
push
xorl
jb
shll
sbb
sahf
sbb
out
adcb
pop
lea
fsub
add
in
jecxz
adcl
aas
ret
mov
push
mov
das
sub
jb
sbb
ret
shll
aas
clc
sbb
test
neg
subb
scas
mov
clc
jb
into
inc
shl
dec
sub
and
mov
or
pop
cltd
pushl
and
sbbb
fcoms
cmp
mov
popa
sub
mov
jne
insl
rcll
dec
addr16
repz
add
sbb
pop
daa
inc
stos
pop
xchg
mov
outsl
rcr
mov
rol
idivb
orl
cmp
lahf
mov
pushf
roll
jnp
and
popa
inc
gs
mov
or
subb
mov
mov
adc
repnz
xchg
push
lahf
mov
xchg
icebp
mov
xchg
test
push
xor
xorl
ds
sahf
jb
jmp
jecxz
addr16
cs
pop
aad
test
mov
mov
or
es
je
loope
popa
mov
js
dec
in
xchg
leave
xor
mov
push
mov
rorb
pusha
and
mov
ret
ljmp
outsb
movsb
jg
leave
cmp
fistps
or
call
pop
mov
sarl
push
xor
and
loopne
cmp
repnz
and
insl
ret
lods
lcall
cmp
movl
jae
testb
leave
xchg
loope
mov
fisubs
fstpt
inc
test
xchg
add
rcll
stos
lods
add
mov
add
faddp
jg
repz
lds
out
inc
lds
cs
adc
dec
add
or
push
xlat
and
and
ljmp
mov
mov
jbe
pop
pop
ljmp
or
out
sbbl
shll
push
mov
lea
mov
push
ja
loopne
loope
jns
cli
mov
mov
xor
fucom
fidivl
adc
mov
inc
lret
fldenv
cs
mov
dec
push
orb
mov
xchg
stos
stos
push
hlt
or
xchg
xor
dec
jne
rolb
xchg
xchg
push
fnstenv
pusha
mov
jbe
hlt
fisubl
mov
jno
and
mov
pusha
add
outsl
and
mov
mov
pop
cmp
push
mov
or
pop
lret
xor
xchg
mov
or
sub
stos
int
sarl
adc
dec
xchg
andl
lcall
arpl
inc
icebp
jae
adc
stos
push
adc
cli
loop
shrl
ljmp
pop
mov
fdivl
jae
lcall
xchg
dec
cmpsb
loop
lret
arpl
scas
shll
ret
or
sbbl
inc
fucom
mov
lret
movsl
adc
or
std
dec
push
popa
xor
xchg
mov
inc
cmpsb
jmp
shrl
pop
lahf
stc
dec
ret
fcoms
cli
sub
and
mov
add
cli
lods
adc
pop
inc
rclb
in
mov
test
mov
mov
inc
cs
mov
pop
adc
out
hlt
addl
pop
shrl
xchg
jbe
sub
jne
std
or
outsb
push
inc
out
mov
rcrb
push
ljmp
out
cld
add
int
mov
cmc
js
clc
jmp
pop
cli
insb
and
movl
stc
pop
add
idivl
scas
cld
cmp
mov
xor
jmp
dec
pop
dec
xor
scas
imul
fsubrl
xlat
cmpb
add
mov
xchg
mov
inc
cli
xorb
inc
loopne
sub
in
sub
xchg
enter
or
loope
jns
add
pslld
stos
pop
aad
aas
test
sbb
push
cli
jle
xchg
daa
xor
int3
inc
sub
adc
mulb
sbb
scas
mov
jnp
out
in
dec
arpl
push
clc
std
mov
sti
push
fnstenv
mov
ficoml
mov
mov
pusha
mov
ficoml
inc
xchg
icebp
mov
shll
add
mov
loope
incb
andb
jl
inc
jb
roll
dec
repz
test
add
pop
in
ror
das
push
push
inc
ljmp
vcvtsd2ss
lahf
fistl
pop
das
ljmp
and
push
pusha
ret
fidivl
mov
mov
and
push
mov
imul
fstpt
jno
int3
mov
push
and
jp
out
lds
pop
dec
xchg
daa
add
lret
cld
out
cmp
xchg
lret
mov
mov
or
ss
add
cmpsl
lret
mov
mov
add
inc
adc
cmc
cmc
pop
stos
lret
adc
sub
fincstp
mov
inc
ljmp
add
lahf
stos
fisubrs
mov
dec
mov
adc
jg
jae
xor
mov
jle
push
sub
hlt
daa
fwait
imul
test
or
mov
push
sub
xchg
pushf
iret
loopne
inc
inc
fs
test
decl
jecxz
mov
pop
leave
sbb
iret
mov
push
ja
test
test
or
mov
pop
test
lods
fstpt
jb
jb
cmp
mov
inc
adcb
loopne
xor
xchg
push
stos
mov
jno
addr16
gs
jge
or
or
xchg
ret
aaa
pop
push
mov
mov
mov
ret
cmp
clc
xor
mov
cmp
stos
add
xchg
ret
dec
repz
fstl
lret
mov
dec
stos
dec
xchg
das
lcall
xlat
loope
push
test
sarl
cwtl
cmp
mov
cs
scas
jb
faddp
stos
or
cli
cmpsl
or
pop
mov
inc
loopne
scas
sbb
addr16
sbb
vcvtss2si
lods
mulb
arpl
pop
ret
popa
stc
xchg
jp
ret
push
js
repz
insl
lods
or
mov
lcall
scas
mov
mov
add
repnz
mov
dec
cmp
mov
xor
gs
pop
test
repnz
ret
scas
add
mov
dec
add
xchg
or
mov
out
mov
fdivrs
ret
insl
and
xchg
lea
dec
push
in
fsubrp
inc
add
add
or
aas
js
adc
ret
mov
pop
idivb
pop
lcall
je
mov
sub
jmp
add
sbb
int3
mov
in
pop
loope
mov
rcll
stos
scas
pusha
and
out
pop
and
out
sbb
ret
sub
neg
rol
mov
mov
jb
cmp
mov
inc
mov
and
cli
loopne
jp
xlat
stos
testb
stos
dec
lret
ret
push
or
inc
inc
mov
sarl
mov
sarb
cmp
mov
jb
cmp
mov
mov
loopne
sbb
push
push
xor
inc
addr16
test
mov
cmp
popa
incb
pop
orl
mov
lahf
mov
jnp
repnz
fnstsw
loope
rcrb
aas
fbstp
popf
jg
mov
ffreep
dec
mov
ret
incl
push
call
add
hlt
out
imul
xlat
ror
push
add
jmp
mov
mov
xor
repz
pop
sahf
push
xor
adc
int
xor
and
loope
inc
loop
sub
popl
int
dec
pop
pop
test
fisttpll
adcl
push
repnz
out
push
jmp
mov
pushf
adc
arpl
retw
scas
out
repnz
in
mov
jge,pn
cmc
dec
in
sub
cmp
bound
fiadds
daa
fdivr
cmpsb
ffree
dec
std
jecxz
sti
xchg
dec
inc
mov
mov
lret
loopne
or
jg
push
sarl
mov
ds
jl
xchg
jnp
xor
inc
in
xchg
dec
inc
sub
addr16
rol
dec
jg
mov
outsb
mov
mov
pop
xchg
xor
icebp
mov
cli
testb
xor
ret
and
mov
aas
notb
lret
mov
push
loopne
xlat
ret
mov
aam
pop
pop
clc
aaa
xor
icebp
mov
fdivrs
cld
mov
ret
mov
dec
fisttpll
pop
aas
outsl
mov
leave
cmp
ja
mov
lahf
mov
mov
outsl
push
jmp
cmc
add
sbb
shrb
js
rcrl
mov
inc
mov
rol
scas
cmp
imul
push
fsts
lds
mov
mov
adc
clc
push
inc
pop
mov
adc
ss
cmpsb
aaa
aaa
pushf
or
gs
gs
inc
repz
cs
add
fstpt
sti
jae
lret
into
fxch
notb
mov
ja
jmp
das
sub
test
out
jl
mov
idivb
shll
outsl
mov
call
push
and
sbb
push
push
shl
fisttpll
pop
arpl
out
clc
pop
inc
inc
mov
cmp
inc
ja
mov
stos
sub
cmc
test
push
xchg
std
out
cmpsl
xor
lods
jge
fcoms
dec
and
mov
mov
je
xorb
pop
mov
mov
test
mov
insl
insb
out
arpl
loopne
jne
fs
jecxz
fwait
int
and
rcrl
out
cmpsb
ret
jae
xor
cmpl
or
sahf
mov
sbb
popf
in
ret
sbb
jl
stos
mov
cmc
loope
gs
test
inc
aad
add
lret
test
mov
mov
in
mov
gs
pop
mov
in
bound
or
aam
aaa
jnp
mov
stos
jmp
addr16
mov
loop
dec
ljmp
jae
cmp
xchg
adc
clc
ljmp
negl
fdivr
pop
fsubr
leave
or
or
movsl
jo
push
pop
loop
out
sbb
pop
mov
loop
or
push
inc
cmpsb
sbb
mov
loope
inc
rol
fnstenv
add
cld
adc
loope
inc
bound
mov
test
adc
xor
fists
cmp
aaa
push
mov
test
ret
fldenv
xor
and
xchg
in
xchg
xchg
inc
jp
jmp
jae
not
fldcw
out
loop
xchg
jge
leave
fimull
addr16
jne
mov
push
out
adc
jae
imul
data16
dec
arpl
jae
movl
add
mov
mov
adc
xchg
test
shlb
sub
jge
cmc
or
or
mov
rorb
mov
aam
xlat
imul
push
sbb
mov
push
pop
out
in
add
xchg
or
dec
fnsave
leave
jmp
xchg
xchg
mov
scas
adc
stc
shlb
out
scas
push
cmpsl
xchg
adc
sbb
mov
xor
pusha
jo
adc
dec
mov
ds
push
popa
lret
sti
aam
out
xlat
xor
mov
lods
xchg
mov
addb
mov
es
inc
cmp
xchg
shll
loope
nop
xchg
pop
mov
inc
xor
insl
pop
pop
mov
sub
push
std
shl
ret
mov
roll
outsl
fiadds
scas
insb
bound
push
orl
cs
scas
ret
xor
loop
dec
jmp
ljmp
ja
in
sbbl
jecxz
incl
fidivl
jg
lock
inc
clc
mov
mov
ljmp
arpl
cmc
adc
jecxz
mov
scas
shll
adc
xchg
les
aam
mov
cs
ret
inc
movsl
mov
push
stc
icebp
mov
aam
pop
jg
jp
push
mov
das
adc
jno
in
xchg
mov
push
clc
stos
or
jmp
mov
jb
push
mov
lret
icebp
xchg
ljmp
cmovo
push
xchg
fcmovb
roll
frstor
push
out
sti
adc
icebp
movsb
test
stc
cs
es
mov
pop
outsl
in
nop
and
xor
fstpl
inc
push
lock
sbb
and
pop
cmp
sbb
sti
in
popa
mov
mov
lret
dec
xchg
xlat
mov
popf
inc
scas
insb
ja
ficoml
mov
fucomp
mov
inc
mov
pop
sahf
pop
sbb
cmpb
stos
ljmp
outsb
push
jmp
testb
adc
or
jo
loopne
mov
mov
popf
insl
cmp
insb
jmp
inc
push
aam
pop
pushf
pop
sub
inc
es
outsb
test
mov
mov
idivl
jmp
sub
cli
inc
xlat
frstor
mov
subb
cmp
aad
mov
mov
call
sbb
fcmovb
xchg
inc
cmp
push
repnz
jae
hlt
ret
lea
es
sbb
ljmp
mov
xchg
pop
xor
pop
lret
cmpsb
xor
xor
dec
ret
sbb
repz
push
out
jecxz
adc
roll
inc
ret
inc
push
icebp
jg
shl
inc
or
ret
add
stc
jae
cmc
ret
arpl
dec
push
int
adc
mov
pusha
inc
cmp
bnd
add
es
fisubl
jne
jae
dec
outsl
es
mov
dec
cmp
and
mov
jg
pop
or
dec
push
out
dec
xor
cli
into
cs
test
sbb
jo
pop
push
adc
xorl
popf
sbbb
mov
add
push
lods
lahf
cld
sub
scas
pusha
iret
push
add
pop
sbb
sub
sbb
dec
xchg
mov
js
data16
push
roll
out
pop
and
fistl
xor
cmp
rcr
jg
in
push
cmp
xor
lds
pusha
ljmp
pop
mov
pop
sti
scas
int
or
jae
cmc
ja
dec
mov
cmp
test
jmp
fcomps
mov
push
loop
sbb
push
cmp
stos
mov
int3
inc
push
mov
jecxz
fildl
push
sti
pop
negl
fucom
repz
inc
js
mov
in
push
fnsave
lret
mov
inc
mov
call
mov
mov
pop
adc
inc
push
mov
fbstp
sti
inc
inc
dec
out
ret
ret
push
pushf
jns
int3
sub
icebp
test
sub
imul
cmpsb
jns
clc
ffree
push
push
and
shll
ret
mov
adc
outsl
in
adc
cmp
push
test
mov
ret
mov
filds
mov
xchg
rorl
rolb
fildll
mov
shll
inc
cmp
aad
repnz
add
movl
sbb
xchg
cmpsl
or
scas
loope
test
test
decl
hlt
fisubrl
sub
or
cmp
sahf
xchg
test
inc
cmp
stos
ljmp
addr16
xchg
aas
fs
popa
jg
mov
push
sbb
xchg
lods
adc
dec
icebp
inc
adc
clc
mov
lcall
test
mov
inc
stos
inc
ret
arpl
les
jns
adc
mov
ljmp
rcrl
jns
xor
cmc
repz
aaa
sub
xor
mov
mov
fdivl
xlat
fdivrs
mov
push
popf
jl
repnz
mov
xor
mov
shll
movsb
lret
out
lret
or
add
push
lret
mov
sbb
lods
xchg
sub
sub
dec
cmc
add
jle
ljmp
rcrl
mov
test
xchg
ret
push
outsl
dec
into
push
stos
insb
test
movsb
movsb
int
mov
cltd
mov
and
pusha
sti
pop
sahf
shll
fidivl
mov
pop
and
push
mov
into
rol
mov
lret
jb
jmp
pushl
sub
mov
pusha
repnz
sbb
out
xchg
arpl
daa
stos
ljmp
int
inc
jbe
orl
aad
dec
inc
bound
aas
loopne
repnz
pop
ficoml
sbb
inc
ret
push
mov
shll
cmc
daa
fisttpl
pop
out
jno
lret
mov
popf
notl
lret
pop
mov
cmp
sub
faddl
cmpsl
cmpsb
mov
dec
js
add
pusha
int3
jl
dec
jae
ret
pop
dec
mov
fcmovne
icebp
push
pop
adc
push
sti
pop
xchg
pop
shll
or
aas
or
nop
stos
mov
lret
pop
icebp
mov
mov
mov
push
inc
mov
cmc
dec
jecxz
and
stos
or
cmp
mov
ljmp
int3
push
jecxz
inc
aas
push
adc
mov
aas
stos
and
int
pop
mov
xor
fwait
mov
mov
cmp
aam
std
iret
jns
xor
mov
cmp
std
mov
adc
xor
push
stos
xchg
stos
repz
test
lock
or
aam
hlt
mov
jmp
sbb
sarl
add
xor
mov
ljmp
cmp
leave
inc
fstps
inc
cli
cmp
mov
mov
popa
int
push
test
mov
mov
mov
jo
and
in
or
mov
adc
xchg
cmp
shll
mov
pusha
jge
pop
es
mov
fneni(8087
or
xchg
cmp
repnz
jnp
or
das
mov
cmp
test
mov
push
mov
stos
mov
fs
or
fstp
subl
popa
daa
jae
sahf
outsl
icebp
adc
ffree
push
mov
addb
xor
and
xchg
movb
and
ret
cmpsb
and
lods
push
jbe
xor
push
xlat
jae
cmpsb
mov
pop
fisttps
and
mul
pop
mov
or
fldl
int
mov
pusha
nop
nop
adc
loop
pop
push
out
insl
in
mov
mov
jne
or
inc
loope
xor
roll
mov
sti
jecxz
push
xor
push
shll
or
js
lret
hlt
mov
cmp
add
mov
and
in
cmp
pop
sar
mov
pop
add
pop
in
out
pop
lods
mov
mov
add
out
loop
mov
dec
and
testb
fnclex
xchg
shrl
inc
ljmp
addr16
mov
es
pop
pop
or
xlat
mov
gs
mov
xchg
fstps
xor
sub
push
or
mov
sarb
push
icebp
add
push
and
mov
mov
push
pop
cmp
sti
xor
nop
cmp
cli
repz
inc
sbb
stos
pop
popa
test
mov
lock
xchg
in
mov
jae
out
push
mov
jecxz
lret
cmp
sbb
sahf
adc
shll
addr16
xchg
inc
das
pop
mov
cmpsl
andb
mov
push
out
add
adc
pusha
addl
mov
repz
cs
das
aad
jg
cmc
in
mov
jecxz
cmpsl
fisubrl
out
icebp
inc
sbb
pop
arpl
mov
imul
je
out
pop
push
adc
xchg
adc
mov
in
mov
pop
sbb
cmp
loopne
repz
jmp
movsl
frstor
fists
mov
in
idivl
adc
or
fcmovnu
push
out
pop
mov
jg
rcr
int
fidivrs
sub
insb
popf
repz
push
inc
pop
inc
xorl
pop
fidivl
inc
stc
push
lods
popf
and
pusha
fidivl
and
mov
mov
mov
dec
mov
into
aad
mov
or
sub
xchg
faddl
test
or
sar
push
or
incb
ret
fwait
aad
mov
pop
add
iret
pop
mov
mov
add
adc
ret
in
fisttpll
dec
in
inc
flds
loope
shl
rorb
enter
cmpsl
outsl
push
ret
cmpsb
rorl
call
cmpsl
jle
ret
fstl
rorl
into
movsl
idivb
dec
mov
jmp
mov
push
out
xchg
pop
add
jb
std
push
pop
jae
shll
ds
repnz
movsl
pop
jae
jns
outsl
adc
shrb
xor
rsqrtps
idivl
loope
popa
xchg
mov
mov
dec
push
je,pn
jge
push
or
arpl
mov
sbbl
mov
mov
mov
or
mov
lock
iret
jbe
bound
icebp
sbb
ljmp
fwait
ljmp
add
dec
inc
mov
pop
sbb
loope
sbb
mov
mov
mov
call
les
shll
cmp
and
cmp
outsl
les
mov
mov
jne
imulb
cltd
or
fs
out
add
fldl
leave
mov
push
stos
scas
mov
sbb
iret
jne
lcall
pop
cmp
fcmovb
sbb
roll
sub
enter
in
bound
fstl
jb
sarb
insl
fadd
and
adc
icebp
rcll
ret
enter
data16
add
mov
cli
lret
xor
xchg
ret
push
arpl
pop
aad
or
cmpl
fistpll
iret
pop
jae
sbb
loopne
es
mov
mov
and
xlat
lret
mov
sub
xor
mov
dec
cmp
sbb
jae
test
push
mov
cwtl
push
loopne
jb
xlat
mov
sub
mov
int3
popa
fstl
faddl
sub
push
jne
and
icebp
push
jp
cmpsb
jecxz
rol
mov
jmp
jno
mov
push
iret
loopne
in
fucomip
sbb
shll
mov
outsl
pop
fdivrl
xlat
clc
cli
or
ja
xchg
mov
jo
shrl
push
outsl
lds
pop
fcoms
dec
push
fld
aad
sbb
push
mov
and
mov
pop
xchg
mov
jecxz
das
pop
fdivrl
insl
add
sub
hlt
add
inc
push
add
cld
movsl
push
mov
les
jecxz
cltd
mov
popa
addr16
fwait
std
jg
add
icebp
mov
or
sbb
subl
int3
dec
into
hlt
clc
jmp
xlat
cmp
cs
push
outsl
fsubrl
js
mov
xorb
in
mov
push
ret
pop
loope
andl
hlt
ret
ret
mov
xchg
jns
imul
das
xchg
jns
inc
ret
pop
ret
push
repnz
cmpl
add
testl
int
add
inc
loopne
xor
cld
push
sub
cmp
and
push
fisubs
jecxz
mov
stos
les
and
hlt
dec
add
jge
mov
loopne
out
and
cmp
sbb
nop
sub
lret
jnp
adc
mov
push
inc
add
mov
mov
lock
adc
and
xor
stc
pop
out
test
push
repz
popf
bound
add
int
sarb
jmp
lret
mov
jle
push
jecxz
mov
divb
sub
mov
mov
sub
push
jnp
mov
popf
repz
mov
pushf
inc
outsl
repz
inc
jno
jmp
fwait
cmc
pop
pop
adc
xor
repz
mov
add
mov
pusha
arpl
into
jmp
jecxz
ret
inc
xor
xchg
imul
out
inc
imul
addl
or
mov
mov
or
scas
pop
pop
add
leave
shl
dec
int
dec
pop
sti
cmpsb
cmpsb
fisttpll
add
aas
xor
jnp
cli
and
loop
xchg
jno
cmp
xor
rcrl
pop
js
pop
jmp
or
sti
lret
clc
or
cmp
push
pop
jo
enter
fsts
test
push
outsl
mov
stos
mov
push
mov
or
push
inc
sarl
mov
shr
test
rclb
sbb
sub
cmc
loop
out
sub
loope
pop
inc
dec
adc
cs
push
decb
fmull
in
push
pop
std
test
pushf
fcmovu
adc
fisubrs
out
hlt
push
sbb
xor
fnsave
rcll
xchg
mov
add
push
pop
mov
add
lret
cmpsb
add
pop
test
inc
sub
es
dec
clc
movsl
mov
inc
and
int3
cmpsl
xchg
dec
dec
xor
dec
mov
inc
inc
push
testl
mov
dec
iret
cs
push
xchg
mov
rcrb
push
clc
out
cmp
fistpll
in
pop
push
aas
add
rorb
outsl
xchg
repnz
xor
pusha
inc
js
mov
in
adc
add
imul
outsl
scas
add
stos
shrb
std
mov
sbb
insl
std
rol
cmp
sti
pop
arpl
cmc
test
mov
pushf
inc
xor
mov
fstpl
out
fbld
push
push
cmp
mov
add
jl
push
outsb
cmp
aaa
lods
frstor
xor
push
stc
xchg
loop
mov
jns
or
adcl
inc
inc
cli
pop
cmpsb
lcall
imul
scas
sbb
leave
ret
in
imul
dec
movsl
sbbl
cli
inc
aas
xor
stos
nop
rclb
inc
or
or
shlb
mov
and
cmp
or
aad
push
pop
test
mov
mul
mov
or
sbb
or
scas
push
xchg
adc
repz
cmpsb
movsb
lahf
xchg
sti
jno
adc
cs
or
sub
cmp
int3
sbb
sub
xchg
hlt
mov
xchg
xchg
in
inc
in
mov
rcrl
addl
pop
and
xlat
sub
hlt
mov
bound
xlat
xchg
test
daa
lock
pop
fistpll
lea
ret
sub
mov
lret
shll
mov
in
in
pop
repz
or
cmp
inc
or
pop
shrl
sub
cmp
andl
adcl
or
mov
mov
pop
out
xlat
pop
push
les
emms
fcmovnb
sbb
pop
cmp
fldl
jg
cmpsb
sbb
sti
inc
inc
lods
and
mov
fstl
inc
mov
cli
mov
push
into
inc
pop
jae
jle
imul
xchg
out
add
xor
jge
ficoms
repz
and
repz
adc
stc
mov
andl
lret
addr16
jns
movsl
scas
mov
jnp
inc
mov
add
cwtl
lcall
int
cltd
popa
add
repz
mov
rcrl
mov
sbb
mov
mov
loop
test
int3
popa
adc
xor
ret
jge
sbbb
inc
ret
add
xchg
add
shrb
cmp
std
ja
cmp
pop
mov
cmp
aam
fisubl
dec
mov
jae
push
mov
ret
adc
popa
jnp
inc
push
scas
cld
jg
pusha
add
push
inc
or
inc
cld
scas
jmp
scas
arpl
cltd
insb
rcll
add
jge
cmc
fisubrs
clc
adc
mov
xchg
fdivs
mov
add
int
sbb
sub
in
loop
andb
or
lock
and
ror
sub
stos
mov
ss
pop
stos
jg
inc
sahf
flds
mov
imul
ret
mov
int
push
jo
xchg
and
repnz
jne
out
shl
lret
sub
aaa
jp
cmc
adc
into
mov
pusha
rorl
fbld
xchg
cmp
test
sbb
ret
fists
jb
scas
subl
sub
jmp
das
dec
adc
push
jns
cmp
sub
call
push
fisubs
incb
and
int
xchg
loope
add
mull
add
mov
add
xor
push
adc
mov
cwtl
push
stos
xor
mov
addb
push
lods
xor
push
jg
inc
adc
sbb
mov
push
xchg
mov
mov
daa
out
loope
sbb
jo
cmp
lret
out
jns
mov
cmp
xor
out
jb
adc
mov
imul
or
cmp
ljmp
stos
add
pusha
dec
sahf
stos
aad
notl
ret
inc
insb
dec
push
mov
pop
test
rorl
xchg
adc
cmc
dec
push
inc
mov
inc
sbb
inc
popf
int3
sbb
mov
dec
mov
mov
pop
dec
mov
jnp
xchg
das
add
pop
push
fs
ficoms
loop
inc
xorl
push
xor
test
sahf
lcall
cmp
sub
xchg
nop
mov
mov
jae
int
push
in
adc
test
dec
push
cwtl
popa
pop
addr16
adc
xor
and
dec
movsl
or
inc
xor
movsl
into
in
outsl
addr16
pop
mov
movsl
sti
mov
insb
out
hlt
and
mov
std
xor
cmpsl
div
call
jle
dec
push
dec
pop
push
and
xchg
sbb
adc
pushf
adc
sbb
mov
cld
das
aam
lret
lcall
std
int
add
popf
mov
fcoml
add
stc
xchg
jecxz
dec
mov
pop
mov
ret
test
imul
add
fists
outsl
loope
mov
inc
dec
jns
fnstsw
push
roll
xor
xchg
call
dec
outsb
mov
cs
mov
xchg
jp
stos
outsb
jmp
rcrl
mov
jp
cs
in
pop
leave
xchg
int3
push
add
push
in
sbb
adc
mov
and
fcom
jbe
sbb
mov
mov
loopne
mov
cmp
lods
push
out
and
push
add
ljmp
cmp
adc
idiv
test
rcrl
sbb
or
mov
or
jge
dec
adc
rcr
hlt
and
push
cmpsl
xchg
cmpsb
dec
fwait
pop
mov
outsl
lret
pop
icebp
shl
lods
std
in
add
mov
cmpsl
and
lods
jp
xor
mov
pop
das
loop
or
xchg
ret
fcmovnu
mov
jge
push
scas
outsb
mov
ss
dec
or
cli
sbb
out
jecxz
add
xchg
jbe
push
mov
xchg
mov
add
pop
push
movsb
aam
nop
push
xchg
dec
stos
or
movsb
mov
loope
and
jmp
pop
test
xlat
mov
lds
jae
stos
repz
ficompl
jge
push
outsl
es
fcoml
inc
sub
shl
jo
addr16
xchg
in
loop
fwait
rolb
imul
xchg
rcll
cmc
and
popa
sti
loopne
jmp
push
add
and
mov
out
pop
aad
jae
inc
subl
cmp
andl
fistl
popa
outsl
xchg
push
out
mov
fs
fstps
mov
call
pop
mov
dec
cmp
push
dec
mov
aam
in
push
aad
pop
xchg
adc
add
mov
dec
adc
clc
in
push
or
add
pusha
repz
lret
push
loope
jmp
incb
stc
xor
icebp
mov
jne
add
div
xlat
pop
loopne
mov
and
jg
aas
sbb
cmp
add
sbb
mov
lea
fwait
rcr
sub
scas
mov
adc
stos
int
xlat
xchg
sub
dec
inc
dec
sub
out
sarb
sub
and
into
rcll
inc
ss
cld
jae
sbbb
push
test
cmc
cli
jecxz
adc
xchg
mov
cli
xor
jnp
sub
add
lret
cmp
aad
or
stos
push
cmp
mov
int
loope
rclb
int3
fldt
shlb
fidivrl
dec
xor
icebp
mov
or
das
mov
pop
jae
cmc
sub
lcall
loopne
push
jb
loop
jb
loop
mov
cltd
in
addr16
repz
aaa
fldt
add
leave
xchg
push
cli
mov
fwait
cmpsb
mov
gs
out
js
in
fists
sti
mov
repz
into
lahf
mov
and
test
fmuls
shr
adc
je
stos
mov
movsl
pop
clc
mov
jmp
sub
mov
fucomp
mov
std
cld
jmp
sub
xchg
mov
filds
hlt
jb
stos
push
aam
mov
outsl
xor
mov
mov
jno
cmp
push
dec
lea
push
mov
jmp
ss
dec
ret
mov
xor
ljmp
outsl
popl
mov
out
ficoml
dec
clc
mov
addb
mov
xor
dec
push
mov
sbbb
idiv
popf
mov
or
or
addr16
mov
mov
sub
cli
add
push
xchg
ret
lret
js
ja
mov
mov
xchg
loop
jecxz
cmp
lahf
data16
popa
sub
push
inc
jae
pop
rcrb
fdivp
rcll
icebp
mulb
aaa
ds
out
into
xor
repz
jmp
cmp
inc
adc
in
and
jle
pop
loopne
fldl
push
xchg
inc
mov
adc
popf
inc
jne
test
shl
fs
testb
pop
stos
jmp
mov
dec
jmp
fbstp
out
mov
xchg
mov
scas
xor
sub
fxch
mov
std
mov
lods
stos
jno
test
adc
mov
inc
xchg
adc
stos
and
jbe
push
inc
aaa
jb
gs
and
fcoml
dec
xor
ds
and
movsb
jb
aaa
aas
push
adc
icebp
mov
ffree
jmp
scas
movsl
in
call
shll
xchg
imul
ja
adc
push
inc
push
xor
xchg
mov
hlt
cmp
in
ds
bound
out
push
jne
in
sbb
dec
movsl
pop
xchg
adc
repz
xchg
jp
jne
test
push
xchg
out
sbb
ret
xor
lahf
inc
mov
push
jbe
fisubl
lcall
push
and
movl
cmpsl
shl
test
int
repz
clc
mov
adc
hlt
inc
fwait
ret
push
fwait
adc
cmp
lods
pop
call
sbb
test
cld
fldcw
mov
mov
xor
mov
pop
pop
test
cmpsl
xor
adc
outsl
shrl
add
xor
pop
mov
lods
aaa
sub
out
add
lahf
clc
scas
or
xor
dec
inc
ret
jbe
mov
idivl
pop
jae
test
jae
add
incb
jmp
in
imul
es
inc
std
in
mov
call
or
lret
mov
and
stc
mov
xchg
shlb
mov
xor
fstpl
mov
sub
cmp
jecxz
rep
loop
add
arpl
loope
fcmovnu
cli
addr16
pop
test
xor
pop
ret
mov
icebp
pop
jbe
fwait
ret
enter
pop
cmp
or
push
xchg
pop
mov
mov
lret
fadd
sti
push
or
loop
mov
stos
int
fsub
sbb
test
js
mov
mov
pop
lods
push
jecxz
int3
xor
jmp
add
and
sbb
mov
push
dec
pusha
xor
in
fldenv
xlat
jmp
pop
fldl
push
adc
aas
cmpsl
aad
add
sub
xor
sti
cs
push
in
test
mov
loope
rcll
insb
or
xchg
stos
dec
ret
push
adc
sbb
lcall
fs
test
addr16
push
push
mov
dec
add
jo
divb
mov
loopne
xor
mov
mov
mov
movsb
sbb
or
pop
fisttps
add
jb
mov
xor
jno
es
pop
or
ss
insb
call
sub
mov
out
cmp
lock
movsl
notb
enter
jb
clc
push
xchg
repz
pop
mov
pop
jae
stc
stos
std
mov
push
cmp
roll
daa
fstps
xchg
andb
call
and
ja
gs
pop
loop
outsl
arpl
roll
mov
into
or
xor
outsl
sbb
outsb
jmp
add
or
adc
xchg
mov
hlt
jecxz
ret
mov
sahf
xchg
pop
jb
shll
leave
sub
mov
test
lods
call
rolb
adc
mov
adc
jno
loope
or
xor
pop
adc
or
mov
inc
int
repnz
push
ret
jb
cld
int
lea
sbb
jnp
adc
in
dec
ja
xor
mov
xor
xchg
in
lcall
sbbl
shr
jecxz
ret
shl
mov
sbb
lcall
push
repnz
icebp
outsl
mov
push
xor
daa
cmpsl
adc
call
js
mov
jecxz
push
icebp
mov
jnp
or
ret
testb
or
mov
push
or
fnsaves
push
fisttps
or
xchg
int
jb
rcrb
lcall
mov
push
add
or
cli
scas
imul
sbb
sub
mov
pusha
mov
xlat
add
push
pop
test
out
jp
push
or
loop
aad
mov
adc
add
mov
mov
inc
cmp
mov
psubusw
xchg
aad
rclb
fbstp
xchg
push
repnz
pop
inc
mov
mov
mov
xor
mov
ds
arpl
int3
add
jl
xor
adc
shrl
fidivl
pop
mov
inc
cld
idivl
push
sti
jb
xchg
xchg
jns
adc
addr16
mov
arpl
xchg
jecxz
cli
in
push
cmp
sbb
ljmp
push
sbb
dec
or
mov
fwait
mov
cli
xchg
adc
jg
or
test
sahf
sti
push
pop
into
mov
sbb
jl
or
mov
rorl
outsl
addr16
add
xor
push
ror
addr16
mov
adc
in
fcoms
dec
arpl
lds
sarb
in
loope
or
cli
ficompl
mov
adc
pop
xchg
aad
rorl
xlat
push
jecxz
lods
cs
mov
sub
pop
pop
xchg
pop
outsl
cwtl
xor
movsl
mov
cmp
mov
jl
pop
enter
cmp
xor
mov
jecxz
fstl
mov
push
leave
xchg
xchg
xchg
mov
sbb
cs
ja
xchg
mov
mov
xchg
mov
dec
or
pop
icebp
jle
push
sub
pop
or
pop
mov
out
popf
and
enter
cld
and
inc
sarb
nop
rcr
aad
aas
xchg
idiv
hlt
push
in
sub
mov
je
aad
nop
lock
sti
clc
adc
lock
ret
ffree
jae
je
mov
aas
sbbl
mov
js
dec
push
add
stos
repz
loop
jmp
iret
insl
xor
mov
ret
mov
rolb
push
mov
or
xchg
cmpsb
sbb
aad
xchg
pop
or
pop
mov
add
jne
push
cmpsb
or
hlt
js
mov
adc
pop
dec
push
cmp
repz
enter
sbb
adc
push
cmp
ret
mov
rorb
sti
ret
iret
push
dec
int3
or
loopne
inc
push
jne
cmp
popf
int
mov
dec
jmp
mov
outsl
nop
addb
addb
loopne
stos
pop
lcall
fldl2t
mov
mov
adc
repz
xor
mov
fisubs
pop
and
mov
cmp
repnz
test
int3
ljmp
fadd
mov
repz
xor
or
xlat
add
xchg
mov
fnsave
mov
jecxz
cmp
stos
mov
dec
push
adc
out
mov
dec
push
mov
cs
ffreep
dec
int
sahf
push
and
sbb
dec
add
js
push
cli
sub
scas
repnz
push
icebp
jecxz
and
mov
mov
cmc
ffree
adc
rcrb
mov
mov
mov
xchg
jecxz
nop
fbstp
arpl
cmp
repnz
xor
ret
in
jnp
adc
and
mov
sbb
cli
push
shrl
sti
cmpsl
sbb
cmpsl
out
add
call
int
add
cmp
fidivs
mov
xor
cli
xor
add
add
ror
lret
in
sbb
or
dec
movsl
lcall
int
jb
inc
dec
outsl
sbb
dec
jb
xchg
sbb
imul
popf
outsb
fdivrp
pop
xor
push
mov
push
add
mov
dec
jg
adc
xor
cltd
or
js
loope
ds
push
xor
pop
enter
leave
rcll
roll
jo
pop
dec
adc
int3
movsl
ret
cmpl
mov
movsl
iret
mov
cmp
inc
out
sub
lods
add
fadd
jbe
lcall
mov
scas
and
sbb
fnstsw
mov
arpl
jo
pop
lds
push
rorl
cld
out
pop
fistl
outsl
ret
xchg
insb
xor
jns
dec
push
into
mov
and
stc
inc
adcw
mov
fsubl
mov
ljmp
xchg
shlb
pusha
imul
out
scas
std
cs
add
xchg
xchg
jecxz
mov
lret
jge
test
pop
lcall
ss
mov
dec
aam
push
xchg
ret
adc
push
lret
mov
shll
mov
stc
mov
push
sub
push
xchg
cmp
pop
lcall
jb
adc
lret
ja
lock
and
idivb
test
xchg
xor
xchg
mov
inc
icebp
divl
clc
arpl
test
push
inc
xchg
fdivrp
xor
xchg
cmp
stos
mov
movl
loop
ret
pop
fcoms
cmpsl
repz
pop
push
or
aam
adc
daa
pop
hlt
push
lcall
cltd
insl
leave
flds
in
lock
add
testl
fsubs
inc
lock
mov
dec
fstpl
ffreep
jo
pop
mov
lock
lret
mov
std
cmpsl
xchg
aas
sub
pushl
and
inc
pop
pop
pop
add
inc
in
inc
fidivs
cmp
movl
jmp
out
arpl
in
add
cmp
adc
xchg
adc
lock
stc
xchg
cmpsb
mov
xchg
sub
or
push
pop
mov
add
dec
inc
leave
inc
xor
ficomps
sti
scas
sub
push
cld
xchg
push
retw
push
gs
xchg
outsl
mov
mov
cwtl
jg
inc
fstpl
mov
loope
xchg
leave
fxch
cmc
rcl
loop
mov
push
daa
aam
les
mov
aad
jg
mov
scas
sbb
pop
aad
cmpsl
fildll
inc
dec
arpl
jg
bound
in
ja
cmpsb
ret
pusha
fsts
xlat
xor
leave
outsl
adc
fmuls
mov
pop
arpl
in
addr16
sbb
xor
sub
into
test
out
pop
fbld
and
vpunpckhdq
lea
mov
insl
xor
cmp
dec
xor
pop
xchg
clc
mov
and
mov
pusha
hlt
dec
in
loopew
idivl
frstor
roll
xchg
stos
mov
lret
hlt
mov
outsl
mov
cmp
push
mov
and
and
icebp
dec
aaa
imul
cwtl
lock
add
sti
jns
push
int3
repnz
insb
scas
or
pop
inc
repnz
aad
rcll
lret
mov
push
jg
test
dec
in
in
lret
inc
mov
dec
rol
arpl
pop
out
or
push
scas
mov
cmp
stos
mov
fwait
mov
xor
stc
cmpsb
adc
imul
mov
xor
add
mov
ljmp
push
out
and
out
in
mov
adc
fcmovbe
push
mov
adc
out
andl
lods
ljmp
lcall
movsl
jle
pop
dec
cmp
xchg
cmp
out
gs
shr
pop
call
outsl
mov
dec
outsl
xchg
popa
decb
shlb
out
fimull
popf
jae
les
aaa
lock
faddl
mov
cmp
cmpl
push
sahf
xchg
lods
xchg
loope
inc
adc
pop
cwtl
and
insb
mov
or
xor
xlat
jmp
jno
cld
in
mov
addb
jnp
sti
ficomps
into
stos
shr
imulb
movsl
mov
popa
rcrl
push
rep
mov
add
xchg
or
mov
sbb
out
in
cmpsb
xchg
adc
cli
lods
sbb
jle
lds
pop
test
mov
imul
sub
outsb
pop
cmp
mov
addr16
out
shll
jns
push
jno
push
in
stos
adc
dec
scas
pop
call
dec
xor
mov
ret
adc
inc
pushf
cltd
pop
fsubrl
inc
dec
loop
lods
stos
ret
subl
mov
push
enter
push
out
and
ss
push
in
push
sbb
adc
mov
call
or
xor
pop
pop
fists
movsb
cmp
insl
mov
mov
sarl
ret
xor
outsb
and
in
repnz
add
stc
mov
int
mov
rcr
rcll
push
ss
ja
out
jbe
notl
divb
jb
jmp
pop
loopne
push
dec
pop
add
ret
arpl
lock
add
imul
loop
scas
mov
adc
mov
mov
jg
shrl
pushf
and
lea
iret
push
xchg
xchg
adc
adc
xchg
in
and
shr
hlt
cmp
xor
jecxz
ds
pop
insb
jb
mov
icebp
mov
jle
seto
and
lret
pushf
xlat
lcall
std
or
mov
cld
mov
lock
and
imul
outsl
fisttpll
gs
pop
sti
jns
fsubr
mov
hlt
dec
repnz
sahf
adc
jne
repnz
xor
ja
pop
dec
aas
andb
pop
adc
outsl
cs
mov
pop
mov
mov
or
xor
mov
cmp
jecxz
repz
fstps
mov
push
loope
out
subl
shrl
aas
addr16
xor
lea
push
repz
sbb
subl
leave
jecxz
js
inc
ret
pop
cmp
scas
arpl
cmp
adc
int3
mov
sub
inc
cmc
outsb
pop
cwtl
inc
jg
xor
mov
mov
cmp
iret
mov
mov
fnstsw
jecxz
mov
cmpsb
xchg
repz
ret
out
int3
inc
imul
mov
xor
lcall
pop
das
rclb
mov
stc
mov
ljmp
adc
repz
scas
addr16
std
test
jecxz
cmpsb
cmp
rclb
mov
fsubs
leave
repnz
cmpsl
ret
inc
jns
dec
push
mov
lea
js
out
cmpsl
mov
daa
ficoms
add
mov
insb
repnz
lock
pop
lret
add
sub
cmpsl
insl
push
arpl
push
jmp
insb
fsubs
js
daa
cmpsb
out
jb
cmpsb
mov
jg
movsl
test
icebp
arpl
movsb
movsb
push
xchg
leave
inc
sub
shrl
sub
repz
mov
repnz
jecxz
xlat
jmp
loopne
cmp
and
fwait
stos
lods
or
xor
ljmp
mov
orl
dec
mov
mov
repnz
mov
sahf
mov
xorb
insb
clc
xor
xchg
mov
pop
std
cmpsb
int
loope
xor
std
ret
out
in
gs
jg
dec
push
test
mov
notb
pop
jne
insl
sbb
aam
scas
mov
cld
fisttpll
fcomip
ret
cmp
repz
push
clc
ret
loope
in
mov
pop
or
shlb
jmp
arpl
jp
cmp
or
sbb
fildl
mov
push
ljmp
fistps
cwtl
inc
push
out
jo
jae
mov
sub
aad
or
pop
test
stos
xor
sbb
or
addr16
subl
rep
add
repz
sub
sbb
cmpsl
ret
inc
loope
or
pop
push
mov
popa
push
repz
sub
out
call
inc
in
mov
sbb
and
movsb
dec
pop
shlb
lahf
jmp
sub
jmp
push
stos
int3
mov
int
lret
mov
push
ret
into
ret
jnp
sbb
inc
xor
shl
aam
adc
repnz
into
iret
addr16
mov
adc
xor
add
ss
repz
aas
outsl
inc
dec
xchg
bts
dec
pop
pushf
shlb
mov
xchg
outsl
mov
xchg
shll
mov
xchg
lahf
inc
loope
sub
mov
lret
add
clc
incb
mov
pop
pop
test
aas
xchg
xor
push
mov
push
ret
clc
mov
mov
idivl
jb
xchg
ret
rcrb
push
mov
or
rol
movb
dec
call
xchg
push
sub
xchg
pop
xor
ret
idivb
das
inc
pusha
cmc
push
loopne
cmp
addr16
lret
aam
stos
jmp
stc
xchg
into
sbb
call
out
xchg
push
test
enter
pop
in
mov
mov
in
stos
add
jg
adc
add
push
jecxz
ret
dec
xor
push
inc
or
jne
lret
xchg
out
aas
lock
rcrl
add
add
xor
shll
ljmp
test
imul
cmp
cmp
mov
imul
push
or
add
testl
fcos
mov
fiaddl
fnstsw
mov
icebp
je
pushf
data16
fidivl
shlb
sub
or
shll
sbb
filds
mov
push
ret
mov
lods
xlat
dec
mov
dec
bound
clc
jno
inc
pop
xchg
lods
and
cmp
arpl
dec
sub
lret
xor
adcl
and
js
xlat
add
pop
mov
inc
adc
or
popa
inc
sarl
fldcw
out
fwait
cmp
pop
inc
mov
adcl
mov
mov
sahf
cmp
sub
cmpsb
fstl
mov
xorl
or
shlb
mul
mov
incl
mov
dec
call
sub
scas
sarl
mov
jecxz
icebp
mov
imul
pop
fcomp
std
inc
fadds
dec
push
daa
and
iret
jns
or
out
add
lahf
mov
int
mov
sti
cld
sbb
add
rorl
or
dec
sub
aaa
mov
call
jg
incl
inc
mov
into
mov
fstps
call
add
insb
jg
inc
push
sub
xorl
lcall
sarl
add
sub
xchg
inc
bound
mov
jecxz
mov
mov
mov
jg
sub
sahf
mov
cli
mov
ljmp
jmp
adc
adc
fsub
jecxz
sahf
add
fdivrp
pop
js
push
mov
cmpsl
cli
incl
pop
sub
cmp
cmp
ret
leave
rolb
add
fwait
sub
and
mov
ret
mov
stos
out
mov
xlat
test
push
jns
xor
lcall
pop
xchg
hlt
into
xchg
sub
push
mov
aas
cmp
sub
sti
aaa
mov
bound
cmp
fldt
in
jecxz
jmp
push
cli
mov
ret
in
mov
sub
pop
jo
sar
jb
mov
sti
loopne
into
mov
nop
mov
ljmp
pop
clc
sub
xchg
mov
in
cmpl
xchg
add
shl
enter
or
fdivr
mov
xor
xor
pop
push
fs
jg
mov
push
test
out
arpl
loop
daa
aaa
cmp
jp
pusha
sub
movsb
push
lods
mov
ret
pop
js
inc
mov
pop
lcall
int3
lea
cmpsb
fwait
stc
sarl
push
sub
xchg
cli
imul
push
cs
mov
jns
push
jb
sti
pop
filds
add
mov
mov
sbb
lret
sbb
inc
fcmovne
mov
push
dec
jbe
arpl
movsl
pop
add
mov
cmp
mov
inc
cwtl
sbb
fs
pusha
fstl
dec
and
push
ret
ret
fcompl
repz
sub
sub
ljmp
jae
popa
push
addr16
cmp
dec
sbb
mov
out
mov
mov
pop
xchg
lret
add
sbb
sbb
into
and
inc
dec
mov
xchg
arpl
clc
pop
push
sarb
in
in
jns
ret
hlt
mov
rorl
pop
andb
mov
cmp
in
inc
or
out
mov
bound
mov
add
rorl
inc
mov
add
dec
xor
loope
mov
mov
adc
leave
outsl
test
add
adc
fiaddl
in
lods
fucomp
ret
rcrl
test
lods
mov
negb
add
jmp
or
push
inc
pusha
jae
adc
sbb
xchg
scas
lahf
neg
xchg
and
cmp
lods
adc
iret
cmp
pop
loopne
testl
stos
xor
or
sbb
push
pop
cmp
sahf
or
jb
adc
lret
cmpsl
movsb
and
add
bound
fdivl
sbbl
lcall
mov
movsb
cmc
and
cmpsl
jo
repz
loop
dec
jmp
sbb
bound
arpl
cmpsb
mov
out
xlat
pushf
jae
shl
repnz
xor
call
fstps
popa
jmp
sub
cmp
mov
lret
int
sbb
mov
pop
cs
inc
mov
jno
lret
adcl
out
pusha
push
add
stos
ret
xchg
jae
lods
inc
pop
sti
pop
rcl
inc
cli
xchg
mov
mov
inc
fldl
cmp
ret
mov
movsl
jg
sbb
push
lds
lret
fwait
xchg
inc
repnz
aas
pop
call
pop
rorb
add
inc
shl
add
fwait
and
pushf
aas
mov
mov
mov
push
mov
push
pop
clc
repz
loop
les
fistl
push
mov
icebp
sbb
inc
cwtl
push
xchg
inc
or
add
xchg
mov
xchg
jmp
outsl
and
xchg
lret
mov
aaa
hlt
adc
mov
push
jecxz
xchg
cmp
cmpsb
into
adcb
pop
mov
fldl
clc
add
fisubl
add
and
and
inc
out
jns
arpl
insl
sti
xor
dec
je
xor
roll
lods
nop
cmc
lret
mov
cmpl
dec
mov
jb
sarb
add
fabs
les
jb
and
xchg
ds
xchg
loopne
ds
loope
adc
inc
mov
adc
fadds
jnp
add
imull
or
adc
adc
cmpb
add
cmpsb
cmp
xor
jae
inc
scas
insl
push
jb
test
mov
lret
mov
adc
lods
ljmp
or
movsl
jecxz
add
out
testl
push
adc
pop
sub
jbe
rorb
fcoml
mov
and
outsb
repnz
into
mov
insl
jnp
mull
jne
push
les
mov
testl
xor
fiadds
roll
dec
cmp
xchg
clc
sbb
lock
mov
in
mov
aam
out
pop
cmp
add
push
mov
jbe
mov
lret
mov
xchg
mov
pop
add
cmp
push
aas
adc
insb
cmp
jp
mov
out
scas
in
add
xor
mov
mov
repnz
lock
imulb
cmp
push
test
fcoms
dec
sbb
mov
pushl
mov
sar
inc
out
testl
mov
xchg
pop
lahf
cmp
adc
pop
out
enter
jb
jecxz
imul
pop
aad
pop
inc
cmp
sbb
mov
lods
mov
subl
out
inc
scas
pushl
out
pop
stos
add
jne
jg
or
popf
int
lods
xchg
and
test
inc
fndisi(8087
and
fistl
ret
rol
fucom
sti
ja,pt
cmp
inc
mov
mov
mov
and
ficoms
mov
jae
or
int
dec
dec
cmp
and
sarb
lods
mov
repnz
inc
ds
lcall
adc
enter
scas
out
out
fnstsw
setb
push
addr16
dec
test
test
xchg
inc
fidivs
dec
rcl
mov
scas
xor
xor
pop
push
cltd
idivl
insl
loope
fcmovu
adc
adc
pop
jge
sti
arpl
push
loopne
mov
roll
or
stos
in
negl
aaa
dec
mov
out
push
lcall
mov
mov
sub
into
mov
icebp
sub
mov
xchg
cmpsl
xchg
mov
pop
popa
and
mov
pop
imul
movsl
notl
lods
jb
pop
sahf
loop
in
cmp
cmp
pop
sarb
mov
gs
mov
mov
mov
sub
xchg
xchg
aad
hlt
rolb
push
loopne
jp
test
ret
add
lcall
cmp
dec
test
or
mov
push
insl
add
test
or
sbb
and
adc
mov
adc
jne
pop
daa
std
mov
pop
pop
outsl
and
rol
lret
lcall
clc
sbb
mov
enter
adc
inc
movsl
sbb
test
dec
pop
pop
inc
lea
jo
mov
test
jle
andl
cs
pop
fsubrp
inc
dec
imul
movb
bound
out
dec
insl
out
pop
and
pop
or
mov
outsl
inc
out
data16
in
sub
jno
inc
push
cs
inc
add
and
inc
aad
dec
and
cli
mov
xchg
cwtl
pop
mov
pop
je
aam
sbb
xchg
std
push
jo
push
mov
or
adc
push
pop
call
cmp
mov
pusha
sub
mov
xor
icebp
cmpsl
js
adc
add
scas
push
cli
insl
aam
inc
xchg
mov
inc
test
repnz
push
pop
rcl
or
mov
cmp
adc
ja
mov
sbb
xchg
adc
loop
add
daa
mov
loope
pop
and
inc
shlb
sub
and
or
aas
pop
mov
stc
mov
mov
stos
popf
das
stc
mov
jcxz
pop
cs
pop
or
pop
inc
outsl
sub
icebp
bound
inc
leave
and
lcall
out
in
dec
sub
sub
rcll
mov
sti
cld
pop
jmp
sub
pusha
cmp
mov
repz
dec
hlt
xchg
in
mov
shl
loopne,pn
push
mov
xor
adc
ret
pop
ret
stos
sub
jmp
pop
cltd
cmp
incb
inc
jecxz
leave
xchg
and
xorb
inc
arpl
leave
xlat
push
subb
push
aad
addr16
mov
lret
adc
xchg
cmc
sbb
or
sbb
stos
sub
xlat
fs
lds
cmp
jnp
pop
jg
dec
push
loopne
push
dec
pusha
xor
add
or
loope
into
adc
fcoml
jg
arpl
je
je
pop
lret
test
cs
ds
push
icebp
xchg
xor
mov
adc
sub
lahf
jl
loopne
xor
rcr
or
add
cmp
fwait
sub
add
je
xor
or
in
mov
stos
ret
push
faddl
mov
arpl
inc
mov
mov
mov
cmp
xor
cmp
add
xchg
jl
pop
subb
push
scas
shll
pop
loop
repz
int
popa
aad
mov
jp
daa
enter
daa
mov
aad
mov
inc
fwait
notb
jg
inc
stc
mov
sti
jl
ret
jno
daa
sub
icebp
push
dec
cmp
adcl
lahf
jne
and
rcrl
loop
loope
jl
std
or
sub
xchg
cmp
in
bnd
xchg
push
pop
inc
xchg
mov
mov
dec
mov
arpl
mov
mov
pop
lcall
jg
add
imul
pop
mov
imul
jecxz
sub
push
jbe
ss
outsl
xor
repz
pop
cld
push
sub
arpl
cwtl
sbb
cmpsl
xchg
rorl
add
les
dec
aad
push
and
leave
xchg
dec
mov
int3
loop
jb
sahf
mov
push
xlat
push
add
push
shl
or
pop
call
gs
int3
or
shrl
les
dec
sbb
int3
insb
mov
xchg
cmp
aam
ja
outsb
xor
push
scas
xor
mov
and
push
adc
enter
or
loopne
rol
xor
pushf
scas
sti
sbb
mov
push
xor
cmp
mov
aam
dec
or
aas
dec
hlt
dec
outsb
stc
add
repz
cmc
cmpl
ret
sub
addb
inc
add
das
aam
adc
in
aam
sub
sti
outsl
cmpsb
sbb
push
and
cwtl
in
mov
in
sti
sbb
addl
and
loop
mov
fnstenv
dec
dec
and
cmp
icebp
pop
repnz
add
xchg
mov
dec
sbb
ficomps
jecxz
ret
add
jg
jmp
notl
mov
push
sub
scas
ja
test
in
and
repz
out
fstl
cs
aaa
and
lock
pop
adcl
xchg
jecxz
pop
pop
or
dec
lret
mov
add
fcomip
into
cs
sub
in
andl
xchg
xchg
fsubrp
out
xchg
cmp
inc
or
out
stc
sti
xchg
fldcw
push
rcr
int
xchg
test
xchg
fcoml
pop
jg
sti
jmp
addr16
stos
xchg
or
mov
xchg
push
lock
icebp
lock
push
loop
int3
daa
push
and
dec
js
pushf
mov
ror
std
sti
jnp
insb
push
cltd
aaa
xor
add
push
inc
sub
pop
sti
or
lret
sub
mov
insb
mov
rdmsr
dec
cwtl
out
inc
cs
mov
pop
js
call
shrl
or
loop
add
inc
stos
ficoms
insb
xor
andb
lods
mov
arpl
inc
daa
ret
or
fnsave
call
xor
fsubrs
imul
sarl
xchg
mov
xor
fnsave
sbbl
adc
stos
cmp
adc
pop
lea
ror
xchg
arpl
jge
sti
sti
sbb
shll
stc
xchg
adc
ljmp
test
jns
scas
pause
mov
jecxz
mov
popa
cmc
mov
outsb
imul
sbb
xchg
icebp
push
sub
ret
pop
mov
rolb
loop
stc
test
sarl
mov
lcall
mov
lods
es
into
push
xchg
inc
loop
loope
mov
xchg
push
cmp
cmp
jb
repz
jns
xor
test
push
inc
scas
lea
pop
cli
pop
test
sbb
jo
pushf
jecxz
sti
mov
js
xchg
dec
mov
test
shrb
out
repz
or
int3
xchg
xor
outsl
gs
jb
inc
pop
outsl
xor
std
and
out
hlt
jmp
xor
mov
cld
cmpsl
in
sub
sahf
shrb
adc
gs
test
call
jb
iret
mov
xchg
inc
repz
xchg
dec
jae
dec
lahf
aad
test
dec
frstor
rorb
test
mov
aam
cs
adc
pop
int3
lea
mov
mov
cltd
xchg
and
and
out
mov
roll
aad
mov
fidivs
pop
cmp
outsl
in
jnp
sbb
mov
cmp
pop
xorl
inc
inc
cmpsl
lock
fldl
clc
sbb
inc
bound
xor
xor
mov
jb
mov
jo
inc
sar
ret
fldenv
jo
mov
inc
inc
fstl
adc
aam
add
fadd
or
test
mov
xlat
pop
and
add
sti
test
popa
push
out
in
push
popf
out
stos
pop
in
mov
xchg
or
mov
cmc
clc
les
mov
movsl
insl
jge
push
mov
lock
sub
data16
adcl
push
repz
adc
aam
sti
stc
or
mov
hlt
and
lret
mov
sub
imull
in
fstl
push
mov
daa
sub
xlat
push
push
loope
in
stos
sbb
jb
fisubl
xor
push
push
add
sub
mov
mov
pop
and
daa
sub
in
icebp
xchg
icebp
out
pop
outsl
mov
call
adc
ror
dec
cs
pop
aam
xchg
mov
dec
or
and
mov
jge
adc
pop
push
mov
xor
dec
in
jecxz
shl
or
push
in
and
in
cmp
pop
arpl
fstpl
xchg
repz
fdivl
out
lret
dec
cmp
push
cmpsl
ret
mov
jmp
scas
ret
outsw
scas
push
inc
adc
adc
ljmp
sub
test
nop
inc
in
sub
clc
cmp
lret
test
in
cs
fcmovne
add
sarl
cmc
jg
mov
pop
cmp
mov
push
jno
xorl
ds
mov
push
sbb
int
mov
arpl
stc
or
adc
mov
movsb
push
jne
push
fstp
lcall
push
data16
scas
mov
adc
mov
sub
cmp
xor
xor
divl
lret
mov
pop
pop
popf
in
adc
aaa
dec
sbb
cwtl
stc
cmpsl
pop
stc
mov
fisttps
mov
xor
outsl
push
setns
mov
push
and
sub
cmp
mov
pushl
sub
add
sti
mov
cs
mov
pop
inc
mov
js
lret
clc
jge,pn
sub
in
pop
xchg
adc
shrb
leave
and
mov
cmp
push
ret
pop
pop
xor
mov
dec
icebp
int
fisttpl
jno
or
sarb
mov
jbe
inc
and
cmc
cmp
int
xor
pop
dec
shll
stos
xchg
mov
jno
mov
mov
adc
pushf
stos
pop
repz
or
xor
ds
shrl
or
popf
clc
loop
int
sub
fisubl
notl
in
or
cld
out
or
cmp
fstpt
into
daa
lahf
aaa
or
loope
pop
mov
js
push
add
lahf
repz
arpl
jne
stos
or
adc
mov
scas
inc
ret
nop
sti
mov
jmp
mov
out
imul
mov
hlt
sahf
lds
xor
test
xchg
inc
mov
mov
push
movsl
jo
xchg
cli
rcll
pop
test
aad
sahf
adc
cmc
add
jo
cmp
xchg
add
xchg
rolb
mov
jo
pop
fwait
mov
and
add
pop
popa
mov
xchg
push
adc
cli
ret
iret
xlat
jo
dec
ret
aaa
fimull
push
mov
xor
adc
fsin
sub
dec
jbe
push
loopne
jle
push
cs
mov
insb
sub
inc
pop
inc
mov
outsl
loop
stos
xchg
sti
push
bound
sti
addl
push
mov
aad
outsb
fcmove
testb
ljmp
into
scas
repnz
cmpsl
and
pop
fmull
ja
push
sub
add
jnp
pushf
movsl
pushf
test
xchg
mov
fs
daa
mov
mov
fwait
lret
dec
jae
mov
js
mov
xlat
or
add
shl
sub
addr16
push
fwait
jg
cmp
pop
push
jb
adc
jmp
sbb
mov
mov
adc
and
sar
fidivl
loope
or
jns
call
dec
or
repnz
jae
push
js
xor
mov
sub
rclb
fwait
adcl
fucom
push
push
rcll
loopne
std
cwtl
subb
xchg
cmp
roll
or
or
fnstsw
mull
ret
cmp
out
int
subl
stc
add
and
lcall
pop
mov
jns
ret
mov
xor
lret
mov
hlt
leave
hlt
mov
call
dec
push
es
pop
stc
ljmp
pop
or
xchg
or
pop
jmp
stc
pop
outsl
stc
or
mov
mov
push
cld
aam
sub
add
inc
negl
pop
enter
adc
lods
mov
mov
adc
add
popa
outsl
push
jo
js
icebp
mov
cmp
sbb
mov
fidivl
js
push
repnz
sbb
icebp
mov
inc
cmpsl
aam
cmp
sub
test
mov
or
cmc
or
pop
hlt
or
int
rolb
and
pusha
push
cmc
stos
adc
push
add
jmp
or
in
xchg
enter
xor
lock
std
add
leave
jae
pop
cli
inc
in
mov
inc
aas
jecxz
cmp
cmpsl
adc
inc
into
in
xchg
iret
int
pushl
mov
push
addr16
add
sarl
fcompl
ret
mov
popf
mov
lods
movsb
mov
push
cmp
shll
shll
inc
cld
push
fiaddl
in
mov
clc
stos
aad
xlat
or
lret
mov
cs
popa
xor
inc
or
divb
fisttps
sub
inc
adc
popa
and
ret
xchg
fisubl
mov
sti
mov
mov
mov
ds
daa
aaa
hlt
xchg
mov
repnz
enter
pop
call
mov
add
fidivrl
inc
sbb
and
in
in
sub
repnz
mov
cmp
cmpsl
call
xchg
ret
outsl
popf
fadd
stc
dec
push
pop
fptan
sbb
push
add
ljmp
imul
int
ds
sbb
stos
popa
mov
out
pop
lret
push
push
adc
loop
jl
lock
mov
pop
jno
cmpb
popa
int
mov
mov
pop
xchg
sbb
lret
inc
fmul
push
fbstp
cmp
mov
mov
test
cld
scas
jnp
and
push
es
jle
or
inc
aaa
dec
sub
push
mov
jmp
lods
lock
xor
shl
mov
inc
shrb
fldl
cmp
cmp
inc
loope
shll
mov
out
add
add
mov
and
sub
pop
fimuls
jne
insb
mov
sarb
inc
add
scas
cmp
inc
xor
addr16
aaa
lods
push
in
adc
out
mov
pop
or
xor
insl
addr16
loopne
dec
stc
or
pop
push
inc
push
sub
cmp
inc
addr16
leave
cmpsl
call
repnz
xor
adc
out
rorb
cmc
ljmp
outsb
sub
sarl
scas
cmp
jne
pop
inc
addb
sti
xlat
add
sub
push
mov
subb
out
inc
pop
clc
repz
cwtl
andl
mov
cwtl
fmuls
push
or
sub
scas
cmpsb
nop
mov
and
push
xchg
mov
mov
je
leave
xchg
jp
mov
sarl
aam
orb
inc
sub
fsubl
inc
add
add
mov
andl
add
push
cs
loope
add
cs
push
sbb
arpl
loop
xchg
aaa
shlb
pop
mov
push
add
mov
add
sbb
add
xchg
ds
sarb
inc
pushf
jnp
fimuls
or
push
mov
xchg
fldl
inc
movsl
ret
sub
mov
sbbl
sbb
lods
pop
test
adc
in
aam
and
int
jg
lahf
loope
mov
test
push
pop
das
inc
jne
mov
pop
mov
jae
jnp
xor
and
in
fsubl
ljmp
jecxz
or
xor
lods
jo
arpl
and
fldl2t
cli
sti
adc
push
pop
add
mov
in
jmp
xor
push
pop
adc
adc
push
xchg
adc
out
adc
mov
roll
and
and
cwtl
mov
enter
aas
and
cmp
inc
fcomip
hlt
std
mov
imul
pop
xor
or
inc
ret
ds
cli
adc
in
xor
fsts
stc
sub
das
out
cmp
jle
mov
inc
jge
push
jnp
cli
xor
movsl
addl
fldl
sbb
insb
inc
das
in
imul
and
pop
imul
mov
and
iret
sub
inc
cmp
cld
lret
jl
idivl
sbb
add
cmp
dec
enter
dec
mov
fwait
rcll
or
int3
cmp
mov
sub
cmp
cmp
test
mov
lret
and
repnz
repnz
roll
mov
stos
pop
movsb
mov
cli
push
outsl
adc
jnp
lea
add
xchg
repnz
and
mov
lods
fdivl
push
repnz
cmp
lahf
add
adcb
bnd
mov
mov
ljmp
mov
jbe
dec
rorl
div
ret
pop
xchg
mov
inc
es
mov
xor
dec
pop
loop
and
pop
les
out
repnz
frstor
out
shl
xor
inc
sti
push
mov
push
lret
and
sbb
inc
mov
jmp
or
push
incb
sub
test
test
imul
lods
pop
aas
roll
sub
in
loop
hlt
sub
add
int
or
mov
popf
mov
gs
enter
jecxz
mov
cmp
sbb
sub
xor
xorl
and
ljmp
and
mulb
or
rcrl
push
fdivrl
cmpl
adc
aad
fucomi
dec
push
lock
mov
adc
cmpsl
std
push
and
adc
mov
ret
popa
mov
push
mov
pop
xchg
dec
mov
mov
push
ss
out
push
ret
aad
arpl
inc
mov
jecxz
jg
xor
or
out
jmp
xchg
rolb
cmpsb
dec
int3
and
pop
fidivrs
repz
idiv
movsb
sti
adc
fstp
lret
add
incb
movsl
and
pop
cmpl
movsl
repnz
enter
lock
stc
test
jnp
cwtl
push
jnp
jmp
int
inc
lahf
jge
add
divl
push
inc
ret
sub
jmp
stos
mov
xor
in
cmp
add
push
dec
jl
iret
xchg
push
ret
ret
jmp
imul
aad
mov
adc
rcl
and
jmp
push
mov
add
stos
xor
push
push
mov
xchg
out
in
gs
mov
xchg
or
mov
inc
xor
mov
ds
adc
sarb
sbb
rorl
inc
cmpsl
fwait
mov
mov
cmp
shl
movsl
lcall
ret
mov
test
mov
mov
outsb
mov
iret
cltd
xchg
push
add
hlt
aaa
ret
add
idivb
rcll
sbbl
cli
outsb
ret
call
scas
sahf
jle
rcr
loope
xchg
aad
and
jo
xlat
sti
shll
arpl
push
cs
and
fsub
loope
jns
pop
mov
pop
mov
fildll
out
push
ja
pop
gs
adc
push
mov
xchg
daa
mov
shrb
xchg
mov
or
jl
imul
addr16
dec
mov
or
dec
mov
push
add
sbb
mov
xlat
shlb
jae
and
pop
adc
or
fwait
pop
jae
cmpl
xchg
dec
add
adc
outsl
jno
in
ret
arpl
sahf
add
sbbl
pop
into
call
arpl
arpl
push
push
jno
pop
and
adc
mov
aaa
test
mov
jecxz
repnz
ljmp
divl
cmp
stos
xor
es
repz
inc
jecxz
mov
sarb
xchg
insl
roll
jmp
pop
shld
addr16
xor
xchg
std
imull
pushl
testl
repz
mov
mov
jecxz
in
sub
mov
std
rorb
sub
stos
jne
nop
mov
imul
jmp
mov
das
je
and
inc
inc
faddl
xor
fmull
rol
ds
mov
push
dec
addr16
mov
aas
add
or
fs
xchg
jns
mov
xchg
loop
sub
mov
pop
push
jne
sbb
mov
xchg
jae
icebp
lods
popf
xchg
rcrl
shll
ja
add
cmp
pop
mov
add
pusha
cwtl
outsb
rorb
xchg
repnz
data16
pop
insl
cmp
adc
xchg
loope
fnstsw
clc
pop
jae
fcomp
mov
mov
test
loope
jno
mov
mov
rolb
pop
std
mov
push
js
push
jmp
and
mov
mov
pop
and
push
and
lahf
in
mov
hlt
lods
scas
sbb
outsl
and
arpl
xchg
std
jmp
inc
icebp
mov
jb
data16
fidivrs
sub
movsb
cmpl
test
and
addr16
push
inc
sahf
cmpb
mov
dec
mov
faddp
or
cmp
test
mov
lcall
repz
stos
call
fists
add
sbb
fistps
cmp
cltd
mov
jns
lcall
push
pop
jmp
jae
pop
cmc
push
sbb
sti
push
pusha
and
push
js
dec
fadds
orb
dec
push
mov
mov
fiaddl
loop
orl
mov
mov
popf
jb
or
movsb
lret
arpl
pop
xor
lret
sub
lods
jle
mov
roll
push
and
mov
pop
repnz
insl
test
scas
arpl
sbb
aam
aad
cmp
xchg
jecxz
adc
jae
push
inc
stos
or
mov
mov
rolb
lahf
fwait
mov
jl
pop
and
lods
int
test
lods
sbb
loopne
sti
sub
jmp
mov
push
iret
mov
pop
fistpl
adc
pop
xchg
lock
shr
mov
add
dec
divl
out
je
and
clc
cmp
test
push
xor
fcomps
fnstsw
pusha
push
jo
arpl
arpl
cltd
sub
shrl
fwait
mov
add
xchg
add
les
mov
in
pop
mov
ret
ret
mov
xchg
jae
push
pop
dec
mov
xlat
jecxz
fs
mov
fiadds
faddl
xchg
xor
in
jecxz
sahf
shrl
lds
push
pop
ljmp
icebp
cmp
push
push
ret
push
push
mov
pop
insb
loopne
ret
pop
jmp
ljmp
pop
sbb
arpl
inc
mov
loope
xchg
sbbl
repz
ret
jmp
out
loopne
filds
fadds
or
sbb
sti
pusha
mov
pop
adc
mov
dec
cmp
shll
inc
arpl
loopne
mov
xchg
sbb
dec
pop
stos
inc
sbb
js
sbb
test
inc
mov
roll
aad
mov
icebp
jg
faddp
sbb
scas
jns
ret
je
popf
test
arpl
cmc
outsl
mov
jno
mov
mov
daa
fwait
push
lods
mov
sub
push
out
adc
loope
insl
adc
out
arpl
sub
mulb
repz
sub
xchg
shll
loop
cmp
sbb
add
or
inc
sbbl
sub
sarl
mov
jmp
push
pop
mov
or
insb
mov
fistpll
push
cltd
push
push
mov
dec
outsb
sbb
mov
popa
or
adc
mov
inc
jae
ljmp
mov
repz
std
hlt
fmull
push
cmp
mov
jmp
jecxz
cmp
mov
jmp
cmc
cmp
adc
das
cmp
pusha
mov
cmp
sub
out
sub
adc
aad
adc
inc
fildll
shrl
mov
mov
lret
aas
mov
pushf
outsl
aam
push
push
adcl
addl
mov
fiadds
mov
sbb
jbe
jecxz
push
cmp
mov
arpl
lahf
iret
jecxz
iret
pop
stos
je
pop
repnz
dec
sub
js
mov
cmp
inc
loop
incb
scas
adc
sbb
subl
xor
movsl
imul
lahf
xchg
shll
sahf
fwait
pop
ret
in
repz
jge
mov
pop
mov
outsb
mov
mov
in
add
adc
mov
push
pop
jb
xchg
and
scas
cwtl
pop
add
push
push
mov
pop
ret
mov
test
and
mov
inc
sahf
mov
xchg
pop
mov
mov
mov
fwait
lret
cmc
aam
mov
rcll
in
jecxz
sub
pushf
mov
sub
aad
loop
imull
sbb
push
fcoml
jmp
mov
jo
sbb
ja
mov
loope
sbb
push
xor
fcoms
jmp
push
or
sbb
lret
adcl
pop
fucomp
xchg
mov
adc
stos
mov
jl
mov
stos
scas
inc
pop
mov
push
dec
xchg
jae
mov
addr16
mov
lret
pop
lret
scas
sbb
out
mov
cmp
push
js
add
jmp
mov
mov
cmpsb
jmp
pusha
sbb
mov
xchg
out
sti
pusha
xchg
addr16
fwait
xchg
repnz
add
or
push
dec
jl
lahf
lahf
inc
mov
fs
cmp
xlat
in
sbb
mov
or
sahf
or
ret
enter
popa
mov
aaa
push
dec
xor
je
push
jbe
nop
adcb
jb
mov
jge
rcl
ret
incl
sub
repz
das
icebp
inc
es
mov
insl
and
fldl
mov
cmp
sbb
jnp
dec
inc
pop
fistl
shll
mov
xchg
subl
sbb
and
fnstsw
cmp
add
cltd
lds
enter
adc
pop
add
mov
push
push
jnp
add
aad
movb
out
ret
dec
pop
and
add
out
test
roll
call
add
add
or
les
inc
in
in
cmpsb
shll
jb
sbb
lret
ret
mov
pop
subl
cmp
sbb
mov
jb
pop
push
sbbl
icebp
mov
outsl
out
enter
imul
inc
stc
shrb
mov
leave
cli
push
dec
mov
rorl
mov
arpl
shr
daa
popa
dec
push
pushf
sbb
pop
add
and
pop
lods
popa
aaa
mov
fstp
pop
jg
and
lcall
adc
outsl
mov
rcr
incb
add
mov
mov
sub
ss
cmpl
pop
mov
dec
addr16
xor
loope
in
xchg
mov
lds
or
movb
jle
inc
pop
test
fldl
mov
add
ret
test
icebp
mov
xchg
jnp
mov
cmc
arpl
lods
xor
add
xchg
jno
mov
fdivl
inc
push
je
mov
mov
cmpsl
loopne
test
sub
jg
popa
scas
cli
or
push
jne
mov
lock
cmp
inc
push
or
mov
add
pop
push
xor
aaa
jmp
clc
mov
repnz
xchg
aad
jmp
push
push
lea
fstpl
insl
rcrl
inc
cs
addr16
xchg
aaa
cmp
fnstcw
outsl
pop
sarb
out
cli
mov
jmp
mov
mov
mov
pop
jb
cmpsb
sti
dec
out
test
fsubrp
push
ljmp
and
cli
inc
push
sbb
sbb
movb
mov
loope
scas
clc
cmc
jecxz
and
inc
sahf
int
aaa
cmpsb
xchg
pushf
cmc
addr16
cs
mov
sti
mov
inc
icebp
bound
in
loop
jo
push
mov
or
mov
cld
add
pop
mov
std
scas
pop
mov
mov
pop
ljmp
pop
imul
mov
inc
mov
cli
sahf
mov
stos
mov
pop
orb
sub
mov
enter
push
lods
add
sbb
mov
fisubrs
push
aas
jecxz
mov
push
xor
add
pop
clc
sti
ret
stc
fcmovnu
xor
lcall
mov
jg
movsb
mov
dec
in
out
mov
je
push
mov
les
repz
bound
testl
ret
mov
repz
out
adc
sbb
push
xor
xchg
cmp
mov
jae
pop
rcll
xchg
cmp
cmpsl
cwtl
frstor
mov
push
pop
shrl
mov
ret
call
lods
sbb
mov
jecxz
sub
cltd
xchg
dec
rorl
arpl
jb
fstp
dec
add
push
in
loop
scas
loop
sarl
fistpll
sub
xor
mov
jecxz
idiv
fyl2x
incl
adc
mov
repz
inc
out
mov
add
cmpsb
sbb
scas
mov
mov
pop
idiv
dec
bound
leave
inc
fnstenv
ret
mov
cmc
call
xchg
or
in
inc
std
push
repz
adc
cltd
lods
es
jmp
repnz
adc
hlt
fninit
push
inc
lcall
ficomps
paddw
mov
repz
jnp
repz
loop
repnz
jecxz
sar
iret
mov
xchg
ja
mov
xchg
dec
mov
mov
xor
push
aam
fbld
jle
mov
jne
mov
call
ljmp
xor
jg
ret
mov
iret
lret
mov
iret
enter
cwtl
pop
xor
cmpsb
das
int
shlb
xchg
sti
adc
notl
dec
repz
jecxz
aad
movsl
or
sbb
mov
dec
or
je
test
push
inc
insb
sarl
iret
xor
in
jge
roll
mov
add
lret
lods
lea
pop
andl
jg
xchg
add
in
pop
cs
dec
in
outsl
push
adc
cmpsb
cmc
pop
orb
lret
cltd
add
movsb
movsl
cld
das
mul
mov
mov
bound
mov
pop
call
ljmp
add
xlat
cmc
pop
out
pop
ret
dec
sub
add
lcall
or
jne
rol
aas
in
out
fistps
mov
add
popa
push
ja
lret
pop
add
xlat
mov
inc
test
bound
sti
push
cmp
jns
push
mov
lret
adcl
std
shll
add
in
into
scas
int
outsl
add
push
das
out
fsts
mov
stos
fcoml
and
push
decl
lahf
mov
mov
pusha
aaa
jp
jbe
push
scas
mov
cmp
inc
inc
stos
cmc
xchg
sub
mov
inc
lret
mov
das
arpl
push
movsl
fsub
aad
jle
lret
push
adc
mov
call
xchg
out
int3
inc
dec
adc
and
cmpsb
mov
pop
add
pop
stos
mov
adc
hlt
icebp
outsb
pop
and
push
int
push
sbb
vcvtsd2si
push
shr
in
lret
and
lds
leave
aas
fidivrl
stc
ret
mov
pop
cmpsb
scas
popf
xchg
mov
icebp
jb
leave
cmpsb
sahf
sub
add
pusha
imul
xor
dec
call
pusha
xchg
add
shl
icebp
mov
bound
xlat
push
sbb
and
jecxz
mov
sub
setg
std
and
loope
sub
in
and
pop
ret
mov
outsb
mov
movsb
inc
jle
and
ljmp
xchg
mov
jp
adc
test
aad
jb
push
addr16
ficoml
lret
pop
ljmp
mov
and
jmp
repz
aad
and
and
addb
leave
nop
push
cmp
inc
cld
ret
pop
xchg
imul
xchg
in
movsb
jb
loope
jmp
mov
xor
push
mov
mov
sti
hlt
lret
rcrl
and
adc
mov
fbld
jb
addr16
popa
xchg
inc
movsb
stos
test
lret
cmp
cmp
fwait
in
lret
aad
daa
out
mov
pusha
mov
inc
test
sub
call
xor
cli
aad
add
sbb
push
sahf
stc
shrl
ret
jmp
inc
stos
mov
insl
inc
aaa
test
sub
ret
jo
sub
push
out
mov
pusha
fbld
sti
mov
negb
sub
dec
fsub
cli
ret
push
lods
and
jno
push
push
mov
push
cli
fldcw
xor
adc
sub
and
gs
bound
in
sbb
mov
ss
rclb
movsl
mov
into
adc
fnsave
int3
adc
mov
aas
mov
xchg
out
out
ss
mov
and
daa
pop
out
pop
shlb
xchg
sub
inc
dec
jp
mov
sub
outsb
jl
into
mov
mov
xchg
stos
and
scas
dec
dec
mov
mov
and
fwait
std
sub
aad
lret
xchg
cwtl
pop
lods
sbb
jge
pop
sbb
lret
out
rol
or
les
xor
jno
mov
in
pusha
cmpsl
pop
push
jns
xchg
rorb
xchg
jp
pusha
xor
lret
xchg
cli
sar
xchg
jae
mov
pop
xor
sahf
xor
fs
rorl
and
movl
push
sti
cmpl
loope
push
cmc
adc
mov
fistpl
push
insb
cmp
aaa
mov
out
out
ret
mov
and
mov
loopne
pop
cmpsb
mov
ja
aaa
xchg
outsl
cmpsl
bound
adcb
push
mov
add
aad
mov
jb
and
push
jae
shl
cmp
xor
adc
adc
hlt
cs
std
testb
lock
cmc
sarl
xchg
ja
xor
xchg
jg
pusha
jnp
mov
inc
xchg
std
push
arpl
add
pop
idivl
bound
lcall
stos
pushf
mov
ret
jb
aad
mov
mov
das
xchg
ja
sub
sbb
jmp
nop
inc
mov
mov
nopl
mov
add
outsl
push
push
add
pop
outsb
inc
loope
imull
scas
sbb
pusha
lahf
loop
jno
iret
xchg
pusha
lret
pop
mov
stos
addr16
add
adc
shll
mov
aas
mov
lods
jae
repz
jb
push
mov
insl
outsb
and
lock
jae
rcrl
out
jmp
xchg
sahf
repnz
popl
call
cmp
jg
sti
dec
cmp
mov
xchg
cli
out
pusha
clc
lcall
xchg
ja
xchg
dec
shll
push
out
jae
sti
stos
jl
pusha
and
stos
mov
sub
fistps
fidivrs
test
jl
jecxz
xchg
ljmp
cmpl
cmp
leave
not
pusha
ja
incl
push
lret
rcr
hlt
cmp
aas
mov
push
or
nop
pop
push
add
and
cmp
pop
adc
nop
jg
fs
rcr
icebp
jmp
loop
aas
rcr
mov
ret
xchg
mov
xor
jecxz
and
cwtl
dec
mov
es
jnp
dec
push
mov
in
mov
mov
mov
xchg
sbb
jmp
out
lret
add
fidivs
mov
sub
and
cmpsl
inc
lods
xchg
clc
imul
arpl
mov
shl
push
add
scas
mov
sti
adc
sti
or
xor
dec
lds
mov
jp
mov
pop
mov
xor
jnp
hlt
adc
jae
adcl
cmp
xor
mov
xchg
dec
aam
dec
sub
scas
ret
xor
out
sub
filds
mov
pusha
cmp
mov
cwtl
sub
add
dec
xchg
pusha
outsb
jo
lcall
or
pop
jg
ret
int
xor
sbb
in
addb
mov
fcomps
cs
mov
jno
stos
lea
jecxz
xor
pusha
dec
cmp
sbb
xchg
mov
mov
test
adc
cmp
ret
lds
pop
rolb
in
rorl
repnz
dec
mov
mov
lahf
mov
sbb
add
adcl
jb
std
inc
sub
jg
loopne
mov
idivb
test
lods
lods
mov
cmp
mov
mov
jmp
repz
jae
stos
out
pop
in
inc
stos
movsl
stc
push
push
push
add
cwtl
jno
mov
icebp
xchg
mov
scas
sub
outsb
int3
js
jl
xor
sti
add
ss
or
push
push
jl
movsl
cmpsb
cmp
sbb
xor
inc
adc
cmc
mov
call
dec
inc
cltd
cmpsl
out
mov
push
insl
mov
push
lods
push
int3
pop
call
in
dec
inc
int
add
idiv
sub
aaa
and
addr16
push
ret
push
out
jnp
outsl
jecxz
jo
inc
push
lock
in
and
xchg
mov
jp
loope
ffree
mov
xchg
and
mov
push
sbb
push
jae
bound
out
fnstenv
loopne
adc
xchg
cld
loop
insl
repnz
lahf
adc
jecxz
std
repnz
jecxz
mov
rcr
mov
frstor
in
loope
pusha
jp
std
adc
cmp
push
xchg
sbb
sub
and
mov
hlt
inc
loope
sub
add
sbb
cli
repz
outsl
sub
jb
mov
jg,pn
inc
stos
movsb
repz
cmc
movsb
loope
in
push
sti
pop
xchg
xchg
popa
lahf
stc
cs
pop
sub
insb
mov
mov
popa
fs
and
btr
insl
addr16
test
and
cmc
or
loop
pop
mov
mov
test
pop
mov
cmp
push
jne
ljmp
mov
cmc
repz
pusha
shlb
inc
cmpsl
ret
inc
aam
scas
cld
scas
iret
pop
adc
outsb
fstpt
mov
dec
jg
test
clc
scas
or
enter
mov
sbb
mov
jns
fimull
hlt
inc
dec
pop
push
jecxz
xchg
mov
xor
aad
movsl
cmp
add
mov
fnstsw
icebp
add
fdivl
mov
xchg
and
cli
lret
push
jg
mov
sub
pusha
xlat
fisubrs
std
push
mov
cli
ret
xor
lahf
and
jne
insb
sub
inc
insb
sub
jnp
jecxz
add
pusha
jge
push
mov
sti
repz
ja
and
pop
ret
incl
mov
stos
mov
jle
mov
mov
sbb
pop
mov
sbb
shrl
pandn
dec
cmpb
lods
cmp
addr16
xor
mov
mov
in
andl
ret
adc
and
ja
lods
aad
daa
out
popf
adc
sahf
push
xchg
fdivrl
stc
push
mov
and
cmp
adc
mov
mov
cltd
lods
mov
icebp
loop,pn
js
xchg
int
jb
adc
mov
bound
cs
add
rclb
or
hlt
test
xchg
fistpll
inc
xchg
mov
lods
pusha
mov
imulb
ljmp
jno
clc
hlt
inc
rcrl
dec
and
pusha
stc
and
cmp
mov
and
stos
ljmp
imulb
or
xchg
jecxz
repnz
fst
fdivrs
pusha
imul
iret
aad
test
or
ret
sbb
add
adc
std
xor
push
ja
xor
js
cmpsl
sahf
pop
xor
add
sub
ss
mov
add
or
cmpsl
pop
aad
or
cmpl
cwtl
shll
xorl
jns
and
jmp
loope
addb
cmp
jnp
jg
aaa
faddl
mov
lods
cld
fidivs
mov
adc
incl
sbb
sar
add
add
add
jo
out
loopne
sbb
xchg
jo
adc
lds
mulb
es
ret
js
add
mov
lahf
and
pop
lret
sti
or
or
movsb
sbb
mov
lds
fisttps
inc
mov
adc
jns
mov
fstp
adc
jle
adcl
jecxz
mov
jle
lcall
sub
dec
inc
push
or
lods
mov
cmpsl
cmc
pusha
out
push
out
loopne
mov
jae
imul
incl
adc
orb
cmpsb
jmp
pusha
dec
lods
iret
jae
out
call
and
nop
add
cs
frstor
cmc
ftst
out
fisttps
mov
rolb
icebp
aad
filds
xor
loop
fisubl
mov
divl
loop
subl
lahf
inc
mov
roll
bound
outsb
dec
sbb
xor
fildl
inc
adc
cmp
xor
pop
loopne
inc
mov
pusha
fisttpll
xchg
mov
adc
hlt
xor
push
mov
into
push
mov
bound
addr16
cmpsb
icebp
and
push
and
loope
or
inc
call
cmc
and
mov
mov
mov
ret
scas
lods
mov
sbb
cmp
adc
aam
int
jle
jno
imul
jge
test
and
popf
loop
pop
xchg
stos
xlat
popa
and
mov
pusha
aas
sahf
stos
subl
sbb
loope
cmpsb
jl
dec
add
xchg
in
arpl
lds
pop
stc
insb
mov
arpl
xor
push
fnsave
aad
jecxz
push
lods
ja,pn
outsl
pusha
lock
shrl
imul
jl
test
sarb
lret
xchg
xchg
pusha
or
and
je
enter
in
adc
data16
call
jnp
mov
sti
and
mov
out
lods
and
adc
inc
call
jno
fsub
hlt
mov
mov
stc
out
test
iret
adc
lahf
test
pop
and
pop
xor
jo
mov
js
xchg
inc
jge
int
addr16
fidivl
or
mov
aas
fnstcw
sub
cmp
jge
mov
das
mov
mov
add
js
in
aam
ret
push
pop
ljmp
add
out
in
add
loope
lcall
push
mov
jne
adc
iret
mov
sti
push
flds
push
jo
mov
mov
ljmp
enter
repz
ror
and
popa
ss
sbb
add
or
add
cmp
ret
mov
arpl
pop
mov
cmp
inc
in
push
repz
jecxz
mov
sti
cmc
cld
loop
mov
in
or
int
shlb
ljmp
arpl
outsb
mov
sti
lret
int
adc
mov
cs
push
mov
cmpsb
ja
pop
shlb
jae
mov
stos
jnp
add
mov
pusha
stos
jmp
icebp
xchg
sbb
aaa
dec
pusha
jle
outsl
pop
sti
ret
out
sbb
sbb
stos
jg
mov
cmp
les
inc
sub
mov
xchg
mov
into
pop
push
loop
jecxz
clc
mov
adc
mov
mov
daa
pusha
adc
lods
mov
test
add
mov
or
dec
cmp
jl
fcomi
pusha
data16
xor
fcomps
out
pop
xor
adc
adc
dec
js
stos
ljmp
in
add
das
fnstsw
ds
aas
jmp
adcl
lret
mov
and
icebp
jg
shlb
jo
jnp
add
add
iret
shl
stc
push
mov
mov
loop
sarl
cmp
mov
icebp
andb
lcall
outsl
inc
and
loop
xchg
cli
es
xchg
xchg
push
jb
jge
aas
in
pop
inc
pop
mov
into
xor
xchg
icebp
sbb
push
bound
add
gs
pop
add
mov
adc
and
dec
into
xchg
mov
jo
jo
dec
hlt
mov
and
xchg
xor
sahf
movsl
jno
cld
dec
jbe
loop
ds
mov
jle
sbb
jmp
add
sarl
push
ror
jae
jp
insl
iret
repz
and
pop
add
cmp
pop
outsl
push
into
fisubrl
in
push
pop
add
fadds
cltd
mov
and
push
bswap
sbb
mov
aad
out
mov
dec
xorl
iret
and
mov
xchg
xor
mov
outsl
imul
sbb
cmpb
fcompl
lods
nop
fs
fildl
push
ffree
fdivp
xchg
faddl
icebp
xchg
les
xchg
ret
mov
or
aas
cli
mov
sub
or
add
popl
xlat
repz
adc
mov
cmp
rcrb
xchg
cmp
cmp
loope
jmp
or
out
or
aaa
add
and
gs
pushf
ret
icebp
scas
test
add
test
int
popa
fisttpll
jb
jmp
add
pusha
sti
mov
lods
cmpsb
xchg
call
add
jecxz
jo
fcmovu
rclb
stc
xchg
out
add
and
jae
push
push
mov
scas
std
jmp
popa
jno
subb
mov
adc
mov
cmpl
mov
push
mov
xorl
in
pop
lea
dec
enter
icebp
mov
cs
xchg
mov
scas
add
aad
pusha
outsl
add
repnz
stos
mov
ret
jmp
repz
lahf
jo
stc
inc
dec
jno
jecxz
sti
loope
jb
mov
jnp
lea
inc
push
aad
loopne
mov
lret
jo
push
ret
bound
pop
push
shll
iret
lret
or
pop
pop
cs
into
jmp
aam
push
sbb
or
jl
mov
pop
stos
test
inc
cli
xchg
add
sarb
cs
xorb
mov
mov
mov
in
movsl
rorb
mov
xor
iret
jbe
and
ret
xor
fldt
jo
mov
pop
push
test
sarb
div
loopne
push
push
jg
jo
ja
jno
fwait
add
jp
ffree
add
xor
lods
movb
fsubs
mov
lret
or
test
shll
add
rolb
or
xor
inc
cmp
out
mov
ljmp
insb
mov
les
xchg
add
push
clc
or
or
jbe
sub
sahf
filds
fisttpll
arpl
add
cmp
test
dec
inc
jecxz
lret
aaa
dec
jmp
mov
pusha
add
fbstp
mull
and
in
push
jg
test
pop
ja
mov
cmp
adcb
sub
jns
arpl
int
shll
pusha
jmp
rcrl
das
xor
adc
sar
mov
add
hlt
repz
out
std
pop
mov
mov
stos
stos
inc
mov
into
mov
xchg
jg
fnsetpm(287
incl
inc
xchg
cld
or
dec
mov
mov
push
rcl
ret
jmp
add
gs
mov
jge
sbb
pop
adc
adc
loope
ret
fistpll
aad
add
mov
cs
add
aam
repnz
repz
and
cwtl
sbb
stc
lahf
push
mov
loope
decl
scas
xor
nop
sbb
in
jl
out
int
jne
xchg
cmp
pop
jge
imul
repnz
in
pop
cmp
shll
xlat
int
mov
mov
loope
or
out
push
lea
add
mov
or
in
es
jmp
cs
pusha
or
push
mov
insb
push
in
xor
cld
popf
out
repz
adc
mov
mov
add
sbb
popf
add
rcll
int3
adc
xor
push
dec
mov
ret
out
sub
xor
sahf
les
jno
repnz
xchg
stos
inc
rcl
icebp
dec
cmp
pop
pop
lret
push
push
ss
or
push
xor
movsb
sbb
inc
xlat
test
cmp
loop
out
fimull
xor
sub
in
sti
inc
xchg
icebp
push
cltd
sub
dec
mov
mov
sbb
daa
cmpsl
mov
sub
stos
pop
pushf
jge
es
ret
stc
push
push
adc
pop
and
push
sbb
ss
decl
or
pop
lock
add
clc
cld
and
scas
call
fisttps
loop
stos
xchg
fld
jae
inc
xor
lock
out
lods
add
int
jo
or
out
out
xchg
inc
test
fsubl
test
outsl
hlt
rcrl
je
push
pop
imul
sbb
pop
push
and
les
push
std
enter
jg
pop
incb
inc
xor
cs
push
and
push
sub
mov
adc
inc
hlt
mov
mov
dec
scas
mov
add
and
pop
dec
das
or
lcall
pop
mov
add
mov
xchg
decb
movsl
test
insl
rclb
fwait
xlat
xor
mov
jecxz
or
sti
pop
insl
ds
arpl
dec
hlt
mov
ror
bound
push
mov
sarb
jne
mov
or
shlb
pop
mov
or
sysret
rorl
clc
add
fsubl
test
arpl
xchg
push
rol
push
sub
jl
jae
mov
jnp
outsb
call
cmpsb
ret
cltd
pop
lahf
sbb
add
cli
pop
jmp
pop
neg
mov
not
cmc
push
shlb
xchg
arpl
cmpb
in
dec
insb
sti
ja
mov
mov
nop
lods
mov
push
sbb
test
push
arpl
idivl
mov
add
in
lret
cmc
mov
inc
jno
fimuls
jb
push
iret
or
scas
fdivr
mov
leave
sbb
stos
mov
cmp
pop
xorb
fmul
xchg
jle
out
pop
les
mov
addb
pop
les
call
sarb
inc
mov
out
xlat
mov
or
fptan
cmp
aas
repz
int3
and
xor
js
xchg
lahf
push
repz
jae
lock
lds
jae
scas
pop
das
mov
mov
mov
fcmovnu
adc
jl
jno
push
xor
aad
add
push
mov
ret
mov
adc
jb
out
in
or
data16
lcall
pop
xor
push
pushf
add
int3
rolb
cmpl
push
idiv
repz
mov
mov
roll
adc
mov
arpl
ljmp
mov
outsl
and
call
loop
add
mov
fdivrl
cld
adcl
pop
mov
insb
insb
into
mov
test
mov
mov
ret
cld
pop
xchg
incl
ret
mov
dec
sub
sub
jp
mov
add
movsl
jno
sahf
sbb
mov
push
or
in
mov
pusha
in
movsl
or
fstpl
dec
add
push
es
mov
mov
mov
sti
sub
fnstenv
cmp
xchg
iret
cwtl
xchg
cs
jnp
repz
adc
sbb
inc
pop
ret
or
rcll
inc
stos
mov
addr16
cmpsl
into
xchg
mov
push
adc
xchg
push
subb
and
add
cli
jnp
sbbl
int3
inc
xor
call
in
dec
adc
std
push
rcrl
fsubl
lods
mov
pop
mov
inc
dec
mov
adc
xorl
lock
es
jbe
xchg
sbb
imul
outsl
lret
jecxz
inc
rep
or
mov
jmp
rcr
jge
lret
fimuls
xor
pusha
fwait
pop
inc
xacquire
adc
cmpsb
ret
or
push
sbb
rol
gs
lods
jecxz
int
in
inc
cwtl
push
dec
movsb
adc
ljmp
sbb
int
aas
shl
out
hlt
push
jb
fsubp
pop
pavgb
mov
sbb
out
repz
mov
bound
jno
push
xchg
fimull
packuswb
cmpl
cmp
data16
add
xchg
add
push
dec
mov
jge
push
mov
lods
push
fcmovbe
in
or
or
cltd
lock
sub
pop
mov
mov
ret
cmp
sbb
inc
push
pusha
xchg
ret
cmpl
jmp
jmp
mov
inc
xor
add
adc
and
bnd
loop
mov
ret
mov
xchg
mov
bound
xchg
mov
adc
js
test
cmp
fdivrl
out
pusha
xchg
dec
adc
cmp
and
jbe
mov
scas
call
stc
int
repnz
mov
aad
xchg
dec
in
xchg
xor
mov
repz
loopne
and
decb
mov
jecxz
add
fiadds
pop
pop
dec
mov
std
mov
lock
sbb
xchg
scas
mov
or
leave
dec
pop
ret
inc
jns
mov
movb
mov
sti
and
in
mov
stos
iret
rcl
or
mov
insl
jo
loop
dec
mov
and
and
jp
sub
pop
shl
mov
cmpl
xchg
push
add
popf
jge
ja
imul
adc
cmp
pop
xchg
ret
in
pusha
and
scas
movsbl
stc
arpl
cmc
insb
cld
xor
and
xchg
mov
sarl
repnz
lret
xor
push
int3
lods
push
pop
xchg
jnp
sbb
ss
shlb
pusha
mov
push
pop
and
pop
push
or
sbb
arpl
mov
mov
push
lcall
popa
and
dec
hlt
popa
test
jp
and
hlt
mov
mov
mov
mov
mov
add
inc
push
ffreep
xor
sti
stc
aad
sarb
jmp
pop
aad
aad
and
push
ret
icebp
fstpl
faddp
lret
push
lock
cmp
mov
out
pop
inc
cs
cmp
loop
stc
mov
jp
mov
mov
dec
cmp
loop
sbb
sbb
jmp
outsl
rcrb
add
les
outsl
int
dec
mov
and
scas
int3
fwait
inc
cmc
pop
push
sbb
mov
mov
mov
fcoms
jle
shrl
inc
jmp
mov
int
push
xlat
in
xchg
popa
ret
mov
imul
push
shll
movsb
aaa
repz
jo
xor
fcmove
jmp
out
mov
pop
pusha
xor
adc
push
pop
or
out
lods
cmp
scas
rcrb
inc
cmp
dec
inc
jb
cmpsl
xchg
lock
cmpsb
hlt
mov
rcl
push
mov
mov
jp
imul
jns
or
push
arpl
ja
fwait
inc
ret
sbb
clc
cmpsl
pusha
jle
fsubl
daa
jp
shl
inc
push
mull
rorb
jo
or
push
jg
ljmp
jg
push
scas
in
mov
ret
cmpsl
ret
and
imul
sbb
inc
scas
and
movsl
mov
adcl
add
dec
jl
and
cmp
out
xchg
push
lea
or
mov
xor
push
inc
aad
jle
inc
xchg
mov
rcrl
fsubr
lds
jnp
cmpl
xchg
push
daa
aad
mov
or
mov
dec
pop
jle
test
pop
arpl
test
dec
inc
xchg
pop
insl
jns
pusha
in
pusha
sbb
jecxz
loopne
xor
stos
and
jns
out
push
lahf
mov
dec
mov
pusha
jmp
jne
mov
addl
mov
cs
add
cli
push
xlat
push
std
xchg
pusha
cmp
cld
out
xchg
adc
popl
jo
neg
js
mov
stc
cld
adc
adc
testl
pop
mov
fiadds
mov
pop
cmp
mov
call
scas
mov
cmovs
jnp
jmp
movsb
ljmp
adc
test
pop
subb
cmpsl
sub
ret
adc
sub
cmp
dec
xor
cmpsb
mov
test
xor
jae
sub
rcrb
pusha
mov
sub
mov
jg
lret
repnz
mov
mov
loopne
mov
add
xchg
pop
out
sbb
mov
pop
adc
ljmp
icebp
jecxz
jmp
inc
cmp
rorb
cmp
fbld
sub
dec
lds
orl
push
jecxz
pusha
divl
jmp
xorb
mov
stc
fstpl
mov
addr16
insl
lods
jnp
xor
stos
xor
xor
cld
pusha
dec
xor
push
mov
test
adc
loope
arpl
and
cld
shl
xchg
imul
repnz
sarl
ficoms
jo
bound
jmp
or
pop
push
ljmp
lret
mov
push
sbb
aas
push
arpl
shlb
or
jbe
bound
repz
rorl
fstl
add
loop
fldcw
jmp
orb
vandpd
mov
jle
ljmp
sbb
push
inc
jnp
push
cmp
nop
setge
mov
aad
fisubrl
cmp
fcom
cltd
mov
xor
shll
adc
pop
mov
pop
jno
out
jecxz
pusha
pushf
lock
cs
add
ja
inc
jbe
xor
mov
aam
mov
mov
inc
int
or
iret
lock
mov
mov
inc
filds
outsl
sbb
lahf
push
fisttpll
inc
jnp
fldenv
aam
cmpsl
scas
subb
in
mov
lock
push
iret
movsl
or
fildll
sahf
hlt
push
sti
mov
ds
loop
push
call
ret
and
cmp
inc
ss
cmp
sub
mov
xchg
mov
fnstenv
cmp
call
imul
leave
out
icebp
in
pop
and
into
out
xchg
pop
adc
mov
pop
inc
sbb
sbb
out
dec
jle
es
clc
fcoml
mov
dec
mov
lock
mov
inc
gs
or
or
add
inc
pop
cmp
inc
aaa
js
xchg
and
arpl
cmp
pop
fsubrl
test
pop
jns
adc
movsl
aad
lods
or
add
jmp
push
sbb
jecxz
pop
repz
idivl
jl
xor
sarb
icebp
or
push
adc
fimuls
xchg
popf
sub
jp
sub
clc
str
roll
ljmp
pusha
les
jl
push
lock
xor
and
movsl
loope
lret
cli
inc
in
es
cmp
int
xor
and
pop
ret
inc
or
ja
xchg
mov
cltd
inc
jg
lcall
mov
sbb
adcl
push
and
in
lret
ljmp
sbb
cmp
jl
das
adc
notl
sub
lds
test
adcl
test
or
stos
adc
aad
ficomps
mov
mov
in
rolb
bound
into
cmpl
repnz
add
loopne
enter
ret
mov
mov
add
loope
mov
int
fbld
jnp
pop
mov
test
imul
add
inc
les
jo
fnstcw
cmpsl
push
inc
mov
jmp
pusha
mov
cmp
pop
jb
inc
cmpl
mov
mov
lods
test
mov
dec
jae
aas
pop
cs
inc
call
ret
mov
sbb
jne
lods
sub
inc
pop
clc
mov
aam
push
test
mov
mov
jae
xor
sbb
mov
xchg
repnz
popf
fstp
imul
arpl
push
ret
pop
sbb
in
pop
shll
popa
mov
movsb
adc
xor
stos
push
xchg
out
ja
pop
sbbb
cld
arpl
sub
fwait
neg
cld
int3
inc
cmp
mov
mov
sti
xlat
mov
jb
mov
xor
lahf
bound
jae
push
fadds
out
fucom
sub
insl
cmp
int3
pusha
movsb
push
icebp
lock
mov
stos
jecxz
sti
inc
fnstenv
bound
test
imul
in
dec
and
sti
dec
cmpsl
bound
dec
mov
pop
push
mov
fcomip
and
jmp
cmpsb
scas
pushf
ret
xchg
icebp
xchg
outsb
add
xchg
repnz
gs
fisubs
push
jg
clc
push
sarl
lret
adc
pushf
out
sbb
ret
lret
add
push
adcl
jg
pusha
sbb
jg
imul
mov
ljmp
pop
sbb
mov
and
int
pop
mov
fwait
dec
lret
ror
xchg
mov
mov
pop
mov
int3
lods
decb
subb
xor
fs
insl
shll
jg
clc
push
push
lahf
cmpsl
in
imul
pop
jg
filds
std
push
xor
stc
push
mov
inc
jb
mov
push
jecxz
pop
cli
xor
out
cmp
stos
fcomip
xor
mov
das
and
in
mov
hlt
in
jns
popa
mov
sbb
inc
mov
loope
mov
mov
notb
lods
cmpsl
mov
adc
lcall
mov
and
sarl
ret
dec
pop
outsb
cmp
sub
and
jb
add
pop
mov
mov
nop
cmp
test
movsb
mov
cmp
pop
push
insb
fldcw
mov
mov
inc
xchg
stos
xchg
adc
mov
clc
mov
movsb
inc
mov
inc
pusha
fcmovne
repz
mov
jns
movsl
repz
lock
jle
push
mov
jae
and
addl
mov
jle
xlat
addl
stos
aad
lret
xor
das
mov
xchg
mov
xchg
push
mulb
add
icebp
daa
cmpsl
pop
out
filds
push
pop
out
mov
outsl
xchg
mov
ror
mov
lret
jae
mov
inc
aaa
std
xor
jb
pushl
call
insl
sub
mov
out
cmpsb
ret
addl
cmp
loope
bound
push
popa
sub
sub
or
pop
out
sub
add
out
mov
loop
mov
in
leave
xlat
sbb
inc
pop
repnz
add
loope
pushf
dec
fistps
mov
mov
inc
loopne
bnd
push
jle
pop
pop
int
fdiv
imulb
xchg
mov
aad
xor
mov
mov
cmp
lds
add
xlat
jae
and
mov
arpl
pop
iret
jae
out
loop
xchg
fucom
icebp
and
stos
pop
push
or
xchg
loopne
imulb
or
notb
sti
cwtl
sub
test
in
pop
aas
mov
jecxz
cmp
or
dec
fwait
push
jecxz
addr16
jle
mov
repnz
adc
xor
lcall
pop
add
scas
roll
jg
lret
popa
ret
scas
xlat
xlat
pop
or
fstpt
jmp
repnz
fiaddl
jnp
pop
mov
mov
or
inc
add
popf
add
outsl
bound
mov
stos
fdivs
lret
pop
or
adc
push
inc
popa
andb
out
ret
cli
imul
icebp
ret
fnstsw
mov
addr16
lods
sbbl
test
ljmp
push
jo
aaa
sub
xchg
gs
jb
addr16
imul
repz
pop
push
pusha
fwait
cli
imul
aas
aad
scas
ret
mov
xchg
sbb
in
loopne
xchg
cmpsb
test
mov
cmpsb
mov
lea
divl
adc
inc
out
jecxz
pop
cli
js
insl
enter
dec
outsl
xchg
ret
mov
outsl
mov
fs
rcrb
lea
mov
xlat
arpl
jno
cmp
dec
inc
push
ret
loop
sbbb
out
bound
cli
add
es
cs
int
aam
stos
adc
sub
ds
sbb
icebp
dec
je
cmpsb
dec
shrl
divb
rcl
xchg
jecxz
mov
stos
jmp
dec
cmpsl
push
dec
daa
mov
shrl
int
add
jg
add
test
jb
push
sub
insl
popf
xchg
sar
mov
jno
jne
xor
adc
das
add
int
stos
cld
scas
pop
aam
testl
in
adc
lock
mov
adc
mov
dec
jnp
mov
mov
in
inc
mov
imul
int3
xchg
lahf
or
push
or
cmp
mov
mov
dec
sbb
sub
xchg
int
push
aam
mov
mov
sub
fmull
push
mov
jl
addr16
divb
pop
fcoms
pop
das
repz
cltd
adc
ret
jno
loop
out
dec
or
jnp
movsl
mov
mov
pop
add
sub
ficoml
pop
sbb
mov
aad
stos
mov
xor
bound
mov
fstps
popa
subb
jge
fwait
icebp
je
jne
in
push
int
arpl
pusha
xchg
jle
ret
lahf
lcall
mov
stos
jecxz
clc
sti
fcmovnb
in
ds
mov
sahf
cmp
sbb
loope
sti
cs
bound
jnp
scas
test
push
adc
addr16
push
inc
into
push
sti
aaa
jbe
aad
scas
fbld
repz
aad
test
sbb
inc
mov
scas
pusha
rclb
or
stc
xor
mov
call
cs
inc
arpl
jo
sub
mov
add
or
outsb
inc
inc
push
out
mov
xchg
mov
movsb
cs
cmpsb
ret
pop
iret
mov
jp
mov
int
imull
sti
add
lret
lret
cmp
add
push
out
scas
inc
sub
cmp
cmp
mov
cwtl
pop
add
mov
addr16
bound
imul
sbb
pusha
clc
in
out
sbb
jl
xor
xor
inc
dec
xchg
cli
xchg
jg
ret
imull
and
jae
mov
inc
pop
mov
ljmp
mull
jns
mov
pusha
and
lret
and
jge
shl
push
test
or
das
xchg
or
and
xchg
es
loop
pop
sub
jg
leave
dec
fldz
mov
bound
adc
or
pop
sbb
icebp
cwtl
inc
pop
or
add
fwait
pop
xor
out
cmpsb
mov
rorl
das
ficompl
adcl
stos
cmpsb
jae
mov
sbb
xchg
enter
loopne
mov
sub
inc
ja
mov
pop
scas
push
mov
out
loopne
decb
mov
pop
lret
mov
jle,pn
mov
stc
ja
push
es
repnz
adc
pop
movsb
cltd
dec
adc
repz
sub
rcrl
mov
test
imul
ret
sub
movl
mov
iret
sahf
bound
pusha
mov
cmpl
push
xor
xorl
loope
loop
rcl
add
sbb
adc
int3
int3
jae
aam
xchg
mov
push
lret
jb
lea
repz
fdivs
pop
adc
and
loop
fcoms
jnp
popa
outsl
out
mov
sbb
sbb
push
rep
outsb
lods
subl
and
int
loope
bound
xchg
xchg
imul
jb
jo
aaa
xor
cmpsb
pusha
adc
pop
pop
mov
arpl
ficoms
jle
xchg
jle
std
lea
lods
scas
mov
adc
xchg
jl
mov
push
cltd
mov
lcall
mov
fmuls
sbb
out
fistpll
call
dec
jno
je
xor
mov
sbbb
out
rcrb
jbe
push
mov
lods
xor
aas
sub
cs
mov
inc
xor
or
and
and
movsb
jae
xlat
dec
dec
adc
push
sahf
push
shl
mov
cs
in
ficomps
and
mov
add
push
mov
xchg
mov
in
outsl
movsb
jo
int3
js
lahf
pop
test
mov
popf
cmp
fmuls
dec
xchg
clc
stos
add
jb
and
shlb
ret
or
xlat
sub
pop
jb
pop
jnp
mov
push
pop
dec
cmpsb
test
xor
push
pop
loope
xor
sbb
ss
fidivs
cmp
clc
jmp
pop
stos
jmp
faddl
icebp
add
mov
lock
shll
nop
dec
iret
das
out
pop
xchg
and
loopnew
call
and
mov
jb
mov
xchg
movsl
leave
ret
sbb
pop
sub
repz
xor
jno
mov
adc
pop
ret
ret
mov
xlat
or
mov
js
xor
addr16
and
add
xlat
inc
mov
mov
pop
adc
sbb
lret
xchg
and
sub
cld
icebp
inc
fwait
scas
cltd
and
push
and
lret
lods
ja
test
xor
xor
mov
inc
pop
dec
mov
jg
fdivp
sbb
icebp
mov
mov
hlt
and
sub
mov
and
lret
cmpl
mov
sub
mov
pop
in
lods
loope
movsl
call
jecxz
cmp
cmp
pop
movsb
cs
adc
dec
dec
cmpsb
addr16
cld
sbb
rol
fldt
sbb
xor
cltd
cmp
cmp
loope
adc
push
fwait
cmc
pusha
or
xor
mov
stc
push
jge
adcl
jo
dec
pop
jnp
in
push
mov
ds
jb
mov
sbb
cmp
or
fisttpll
lahf
inc
jae
bound
add
xchg
mov
lret
in
jb
repnz
push
sbb
fistps
sar
adc
adc
lods
mov
mov
and
cmp
adc
pusha
mov
shrb
and
pop
shlb
sti
and
pop
fstl
cs
rcrl
mov
mov
cli
gs
movsl
addr16
ret
cmp
xchg
rorl
movsb
mov
les
mov
arpl
sub
call
mov
pop
mov
sbb
mov
test
or
sbb
movb
loopne
and
int
leave
dec
or
test
gs
xchg
or
mov
jg
int
jmp
pop
mov
lods
ss
ljmp
dec
insl
mov
inc
jmp
adcl
mov
push
jbe
ja
xchg
ja
lret
mov
push
fmull
test
movsl
outsl
and
or
cmc
push
mov
lret
sbb
add
inc
pusha
sarl
cmp
xchg
out
loop
movsbl
dec
mov
add
insl
decb
ret
cmp
sbb
inc
call
dec
sub
les
sbb
orw
add
ror
stos
cs
inc
int3
xchg
pop
divl
repnz
aaa
jno
mov
add
cmc
add
jae
adc
add
aad
stos
sub
arpl
and
ret
popa
jg
mov
dec
mov
out
cs
jl
ds
std
mov
jmp
or
cld
cli
cld
cs
neg
repz
sbb
pop
lahf
out
adc
push
scas
lret
loop
add
lret
or
stos
bound
int3
sub
jnp
dec
cmp
ds
aas
fsubrs
popf
lahf
shl
lcall
testl
jno
and
lea
popa
xchg
cs
jecxz
mov
xorb
push
or
pop
stos
shll
push
mov
std
test
adc
dec
in
test
loop
mov
mov
or
arpl
mov
shll
out
sub
jecxz
imull
cmp
pop
jb
xchg
aaa
and
xor
fwait
mov
sahf
cmp
mov
mov
inc
insl
cmpsb
mov
outsb
add
mov
pop
and
jno
test
aad
int
cli
into
mov
sub
frstor
rol
xchg
fldt
jae
lahf
cmpsl
dec
shl
mov
push
xchg
xor
or
sahf
adc
cmpb
imul
fistpl
push
xor
shrb
push
rcrl
jmp
and
mov
mov
add
mov
fstl
xchg
jmp
mov
aam
fwait
sti
pushf
orb
mov
mov
pop
xor
fdivr
xchg
jae
push
rcrl
mov
lcall
popa
add
stc
push
mov
mov
in
and
mov
add
mov
ret
inc
das
movsb
nop
ljmp
icebp
cmp
mov
xchg
jae
call
jbe
in
scas
jecxz
ja
sub
outsl
nop
dec
dec
sahf
call
xor
xchg
fbstp
pop
out
cmp
sahf
aad
test
loop
xchg
imul
xchg
sti
add
push
leave
pop
xchg
mov
int
out
arpl
das
outsl
aam
inc
xor
aad
fisttpl
or
cmp
inc
in
xchg
xor
out
test
pop
aas
jle
cmp
scas
inc
movsb
cmp
xchg
jnp
loop
mov
mov
jmp
xchg
outsb
cmc
cmp
and
xor
mov
pop
or
jp
rorl
loopne
mov
mov
adc
test
out
jno
nop
sub
rorl
pop
fistl
dec
ljmp
and
or
shr
and
or
mov
aad
jmp
inc
xlat
jb
arpl
ss
dec
fisttpl
jecxz
jnp
or
adc
dec
fildl
mov
jns
rcr
mov
repz
lods
movsb
outsl
mov
xchg
roll
cmp
out
add
cli
arpl
add
lea
jg
flds
mov
jmp
jl
jecxz
nop
push
cmc
stos
sti
jno
sahf
mov
inc
xorl
rcrl
clc
aaa
shll
pop
adc
mov
les
sahf
inc
lcall
xlat
push
and
xor
or
push
imul
out
xchg
xor
mov
or
inc
fdivr
add
fists
jbe
icebp
push
inc
lret
lahf
repz
pusha
jb
mov
xorb
nop
out
rorl
lcall
cmc
add
inc
mov
jo
je
sbb
pushl
push
xchg
nop
mov
loopne
and
cltd
icebp
xchg
adc
out
incl
hlt
pop
jmp
lock
in
dec
pop
rorl
cmp
nop
sbb
mov
clc
xchg
fisttpll
pop
xchg
fbld
dec
cmp
push
sahf
loop
mov
das
stos
mov
push
icebp
cli
sarl
ret
jecxz
mov
adc
push
lcall
test
repnz
outsl
ficoml
push
jecxz
or
fs
mov
or
nop
xchg
mov
imul
sub
push
stos
cli
data16
sbb
xchg
jmp
sti
mov
ret
jecxz
add
mov
jge
mov
jb
cs
pop
inc
test
mov
jnp
xchg
int
ret
adc
xor
jmp
mov
ret
lret
orl
cmp
mov
das
adc
push
and
test
inc
sbb
jbe
and
dec
sbb
mov
pop
in
xchg
adc
adc
test
mov
xor
int3
mov
xchg
mov
rolb
pusha
push
call
sbb
rorl
mov
add
faddl
je
repnz
mov
mov
and
ret
mov
pop
mov
pop
decl
mov
std
lret
and
add
jge
cwtl
push
mov
repz
stos
add
and
jns
pop
outsl
fstps
jae
cmp
into
jecxz
repz
sub
in
sub
and
xor
addr16
mov
in
outsl
adc
mov
addr16
mov
cmc
push
pop
jecxz
fucomp
mov
sub
add
mov
mov
pushf
jnp
out
sbb
fistps
cli
mov
ljmp
loope
or
mov
sbbl
xchg
loope
jge
pop
aam
mov
or
iret
ficompl
psllq
pushf
add
mov
jae
stos
orl
ret
aas
mov
pop
xchg
jno
mov
fisubrs
cmpsl
decl
sar
ret
jno
jbe
repz
mov
insl
push
add
imul
cli
mov
iret
xchg
fsubrl
jge
push
adc
jecxz
mov
xchg
and
add
stos
add
movb
push
ret
add
cmpsl
sahf
repnz
rorb
xor
and
adc
sub
shlw
cmpsb
out
test
hlt
jne
mov
sub
push
repz
push
inc
icebp
ret
punpckldq
and
adc
icebp
ret
xchg
bound
and
rcrl
data16
push
jb
cmp
lahf
and
in
out
push
sbb
xchg
jg
mov
ficoml
push
sub
daa
inc
imull
xchg
int3
cmp
sbb
xchg
shlb
mov
movsb
cmpsl
jmp
fbld
cmp
sub
xor
push
add
pusha
in
pop
lcall
out
push
fisubrl
clc
lock
inc
dec
dec
subb
insb
cmp
mov
mov
push
iret
jg
inc
outsl
test
mov
pusha
out
cmp
jmp
scas
pusha
lcall
cwtl
add
mov
aad
call
xor
jb
lds
pusha
enter
jmp
fnsave
repz
jecxz
fwait
inc
subl
cwtl
outsl
testb
int
mov
cs
insl
push
dec
loop
inc
mov
pop
ret
shlb
xchg
cmc
hlt
arpl
imul
lahf
add
pushf
insl
iret
ret
test
jp
jno
fistpll
xchg
sbb
pop
hlt
mov
jnp
or
pop
cmpsl
mov
jbe
mov
and
sarl
pop
cli
movsb
ja
xor
cli
insl
fstps
scas
aas
loop
rcr
jmp
sbb
dec
int3
leave
movsb
ret
adc
xor
xor
adcb
loope
jno
jnp
into
inc
pop
pusha
imul
roll
push
in
push
test
push
or
ret
dec
fsubrl
jecxz
int
mov
ja
decb
cmc
stos
int3
push
stos
scas
add
jne
icebp
ss
jg
js
mov
ja
pop
out
pusha
and
mov
stos
test
outsb
pushf
cmp
inc
add
shlb
ljmp
mov
or
sub
and
sbbl
push
movsl
scas
xor
lret
push
fcoms
scas
pop
ret
test
pop
mov
int
jns
lods
icebp
jae
fstpl
pop
shlb
arpl
das
stos
push
mov
mov
push
inc
aam
fistl
xchg
test
mov
push
jnp
mov
adc
jge
push
std
push
cs
xor
and
pop
add
stc
xchg
push
mov
mov
loop
cwtl
or
xchg
cmp
aas
mov
pop
in
pop
adc
addr16
inc
mov
inc
or
xor
stos
lock
movsb
sti
add
xchg
pop
fisubl
loop
testb
xor
mov
lcall
dec
rorl
mulb
mov
sub
faddp
fs
out
jecxz
fistps
sub
frstor
pusha
mov
push
arpl
sub
add
push
jl
loop
popa
jmp
ljmp
ret
jmp
jno
pop
jae
sub
stc
in
es
sub
outsb
cmpsb
adc
repnz
cmpsb
dec
sarb
xchg
int
adcl
push
aad
jae
pusha
int
mov
addl
lea
or
stos
jns
xor
test
xor
hlt
push
arpl
pop
in
in
jno
and
pushf
scas
dec
subl
pop
daa
hlt
add
mov
fidivs
mov
int3
or
mov
fisubrs
dec
cld
sar
push
mov
arpl
jae
adc
xchg
mov
push
and
inc
jg
jecxz
xchg
bnd
mov
into
ss
jg
adc
mov
popf
dec
mov
mov
pusha
mov
loope
cli
push
mov
dec
cmp
mov
arpl
adc
sbb
add
xchg
pop
or
mov
xchg
loop
pusha
mov
rcr
inc
sub
dec
cmp
iret
mov
mov
in
lahf
dec
stos
push
jb
mov
mov
stos
ds
cltd
shll
fbld
and
push
scas
out
cmc
nop
xchg
pop
mov
mov
cwtl
push
mov
push
mov
out
cmp
cmpsb
xor
mov
jg
mov
pop
jae
or
repnz
xor
push
pop
mov
lret
cmp
mov
aaa
shl
jmp
pop
rorl
mov
mov
dec
xchg
and
fisttpll
jecxz
or
or
cmc
mov
mov
pusha
lds
leave
push
inc
add
and
push
push
in
jae
or
filds
ror
mov
mov
add
std
xchg
add
or
xchg
mov
mov
adc
add
inc
enter
add
js
sub
inc
dec
cmp
pop
mov
rorl
cmp
jmp
out
or
repnz
sub
mov
shr
mov
adc
mov
mov
les
das
inc
subb
clc
icebp
mov
inc
das
stos
fwait
pop
daa
repnz
scas
int
sbb
jno
sti
int3
pop
cmp
shlb
xchg
bound
cmp
into
aad
dec
pusha
jg
mov
outsl
jecxz
rorl
into
push
sub
adc
cli
repz
push
xchg
enter
sarl
push
mov
shll
pop
popf
fisttps
sbb
dec
aaa
xchg
xchg
inc
test
xchg
dec
mov
inc
fwait
adc
add
pop
mov
xor
mov
fmull
iret
xlat
leave
stos
imul
pop
and
inc
ss
pusha
and
sti
mov
repz
iret
push
mov
loop
subl
push
clc
lahf
and
ret
mov
mov
out
mov
out
cmc
xchg
fcom
insl
lds
and
test
loope
out
cmc
sub
lds
mov
mov
add
rcr
leave
add
aad
jno
cmc
imul
loopne
roll
mov
stos
add
lcall
retw
adc
sub
add
fstpt
mov
jmp
jg
jb
xor
bound
daa
sub
pop
lahf
sti
fisttpll
pusha
bound
popf
or
imull
push
sbb
push
add
jmp
aam
cmpsl
aam
out
outsl
fcmovbe
enter
push
pop
nop
mov
and
xor
cli
jg
jb
jecxz
dec
ret
mov
loope
jae
arpl
push
inc
pop
lcall
xor
hlt
jecxz
lahf
clc
loop
js
stos
add
das
lahf
sbb
loop
or
xlat
mov
ret
xchg
jg
ret
jbe
inc
cmpsl
push
inc
scas
pop
mov
cmp
xchg
mov
push
mov
pop
testl
push
icebp
test
push
push
mov
insb
push
scas
adc
mov
mov
inc
scas
add
jb
push
insb
adc
cs
push
mov
iret
or
mov
pop
sub
enter
ror
or
and
enter
mov
mov
mov
dec
mov
std
aam
inc
sarl
movsl
fsubrp
and
subl
cmc
sbbl
xchg
or
ror
xchg
sub
jb
xchg
push
cwtl
sahf
mov
dec
aam
inc
fisubl
ds
lret
add
xchg
dec
inc
mov
imul
repnz
sahf
xchg
stc
rorl
cmp
es
jns
jecxz
adcb
test
pop
rclb
imul
pop
outsb
cmp
scas
or
sub
inc
mov
test
push
fimuls
mov
icebp
push
lahf
gs
aaa
mov
mov
shl
sbb
iret
loopne
cmp
and
lods
cmp
addr16
jnp
outsb
inc
ljmp
ret
addr16
pop
mov
or
push
mov
sub
test
jle
sbb
repz
orps
pusha
mov
shl
jp
dec
xor
inc
leave
imul
add
pop
inc
sti
xor
mov
stc
xor
add
xor
mov
and
icebp
add
lods
pop
ret
in
cli
loopne
or
add
add
icebp
notb
add
mov
pop
mov
cmp
lods
stc
dec
ret
lahf
jl
inc
mov
loope
out
mov
and
pop
ret
inc
ret
sub
push
jg
mov
mov
popa
mov
popf
movsl
xor
adc
lahf
inc
push
aad
jae
mov
pop
imul
cmp
clc
aas
ljmp
lods
pusha
jns
addr16
in
pop
and
mov
jae
cwtl
dec
jae
mov
loop
mov
inc
pusha
stos
cli
inc
rol
adc
mov
ljmp
lods
mov
mov
mov
push
cmp
rclb
xchg
clc
mov
cmp
mov
xor
jecxz
push
mov
nop
jp
scas
sub
push
call
or
jo
fcompl
or
ret
push
jo
imul
add
shlb
xchg
dec
sbb
push
fcomps
xor
xchg
clc
into
sahf
add
mov
mov
xor
das
ss
repz
into
cmp
stos
pop
stos
push
stos
inc
fucomip
mov
mov
stos
in
loope
cmpb
mov
decb
shlb
xchg
shrb
pop
inc
lret
out
adc
lret
lret
stc
sbb
cs
stc
imul
repnz
hlt
bound
xlat
xor
movsb
std
sbb
dec
out
mov
fdivrp
mov
bound
icebp
pusha
lock
mov
inc
sbb
fldl
pop
mov
test
mov
std
push
sti
pop
add
in
add
fbstp
fwait
push
not
fstpt
sti
or
sub
lret
xor
xchg
push
mov
into
pop
or
xor
ret
out
cwtl
xlat
ja
cs
hlt
add
add
ja
cli
mov
repz
add
stc
adc
icebp
add
sbb
clc
lcall
mov
out
sbb
neg
cs
add
loope
push
mov
int
pusha
add
and
mov
cs
hlt
cmpsl
loopne
shl
loop
adc
jecxz
jo
movsl
cmp
out
pop
jecxz
sbb
test
pop
mov
xor
push
mov
enter
mov
out
xor
fcomp
jecxz
and
lret
pop
in
pop
notl
sub
into
push
pusha
dec
sahf
fimull
out
stc
lods
mov
xchg
jmp
in
jae
dec
fidivl
sub
in
bound
cmc
jae
pop
sub
aam
icebp
stos
js
aad
aaa
jnp
dec
mov
stos
ljmp
aaa
fsubl
jl
push
and
add
ljmp
xor
imul
je
jnp
jle
or
push
xchg
enter
mov
xor
out
call
xor
imul
cmpsb
iret
cs
add
and
loopne
xchg
andb
aad
jmp
dec
shll
adc
imul
xor
mov
rcrb
cmpl
sub
rcrl
mov
pusha
nop
or
xchg
jmp
neg
lret
and
cmp
xor
mov
xchg
pusha
in
aad
and
ret
add
movsl
mov
ss
shl
mov
xor
jno
je
inc
mov
insb
cmc
scas
dec
in
jae
inc
xor
pusha
lret
push
inc
shrl
pop
push
xchg
lret
xlat
sub
scas
push
std
int
jnp
stc
fcmovnb
lahf
addl
lret
lcall
mov
pop
idiv
cld
cmpsb
out
mov
pop
cltd
inc
mov
pop
inc
clc
nop
jl
cs
add
clc
jp
dec
cmpsb
jno
and
ljmp
mov
scas
imul
icebp
pop
jl
cltd
xchg
sarl
adc
push
mov
jb
xor
lret
add
out
movsl
pop
cmpsl
cmc
in
adc
inc
sub
push
inc
xor
popf
stos
shll
sti
ret
repz
jecxz
xchg
out
in
jmp
iret
xor
cmp
mov
int
and
xor
cmp
addr16
push
mov
lcall
pop
pusha
mov
jae
mov
jg
inc
test
lahf
lcall
xor
jmp
adcl
filds
sti
shrb
out
out
and
ret
repz
in
testl
xor
mov
mov
lahf
mov
adc
cmp
sub
mov
fstpt
jne
fucompp
sarb
rol
sti
xor
sub
das
jae
jle
jb
xor
cli
add
test
jo
cld
andl
dec
mov
popf
inc
rcll
sarb
popf
jno
enter
cmpsb
pop
mov
push
in
sahf
xor
rol
sub
and
pop
arpl
ret
loope
adc
lret
inc
inc
push
clc
jo
xor
shll
daa
jo
lcall
shll
scas
test
gs
std
ljmp
test
retw
fs
fimull
xor
add
orl
out
cli
rcl
cs
jecxz
rorl
mov
addr16
jbe
inc
stos
cmpb
scas
cmpsb
and
sub
adcl
add
scas
imul
aaa
out
pusha
mov
push
int
into
xchg
adc
movl
mov
es
and
test
add
xor
cmp
lock
sti
loopne
pusha
mov
addr16
or
cmp
mov
ficoml
sub
sub
neg
push
scas
decl
gs
and
inc
mov
lahf
or
loope
nop
arpl
shll
sbbl
xor
out
nop
xchg
jmp
aaa
mov
dec
or
dec
ljmp
aas
cli
add
inc
icebp
inc
repz
or
shll
pusha
in
ss
pop
inc
sahf
popa
aam
shll
push
loopne
mov
push
adc
xchg
and
inc
adc
jae
ror
rcll
adc
shrl
mov
fmulp
cmpsb
sbb
push
xchg
andb
in
mov
in
std
std
mov
inc
pusha
mov
and
inc
movsl
jmp
mov
lods
int
add
jns
fcmovnbe
out
xchg
sub
mov
insb
mov
sti
shll
sub
inc
or
test
into
gs
in
pusha
sub
das
movsl
stos
xor
mov
fxam
cmpsl
je
add
inc
test
and
shl
inc
mov
mov
pusha
rorl
xor
loope
and
mov
mov
neg
or
add
dec
jns
xor
pop
mov
test
aam
fistpll
mov
mov
push
loope
scas
mov
loope
mov
mov
push
mov
dec
sub
stc
mov
jae
adcb
jle
test
sub
add
outsb
or
cwtl
stc
repz
pop
rcrl
sar
mov
mov
add
sub
fisttpll
arpl
in
and
sub
push
lret
pop
adc
add
mov
ret
or
jae
out
xchg
xor
jne
inc
cmp
cld
add
jmp
ja
iret
sub
jo
pop
xor
mov
xchg
inc
and
xchg
sub
scas
mov
or
out
jbe
inc
push
out
inc
fadds
cmp
insb
cmp
test
inc
int
mov
sub
subb
add
lea
sub
dec
pop
popf
popa
insb
faddp
mov
inc
pop
or
sti
adc
fsubrs
fstl
test
ret
out
popl
jb
in
mov
jns
jnp
out
insb
or
adc
mov
mov
jle
std
fnstcw
fnstsw
ds
xchg
xchg
stos
sbb
ficoms
inc
pusha
push
mov
dec
mov
outsb
mov
add
out
mov
or
adc
xchg
aas
xorl
aam
push
xchg
cld
cmc
xorb
repz
xlat
push
push
push
adc
mov
jb
rcll
jmp
or
sbb
lock
add
xorb
popa
imul
test
xor
arpl
insl
popf
mov
xchg
inc
or
je
jmp
add
sti
dec
out
fs
mov
dec
jo
push
loope
jmp
rol
jmp
sbb
mov
jno
in
and
shrl
roll
fnsave
lock
shl
loope
xor
out
sarb
jg
mov
pop
ret
mov
jb
stos
mov
fldt
add
cmp
pop
inc
dec
xchg
push
aas
and
in
mov
loope
mov
into
cmp
scas
insl
cwtl
jnp
xor
push
pusha
push
mov
add
int
mov
cmp
adc
psraw
scas
bound
mov
jge
sub
jb
cmpb
loopne
ret
mov
and
push
repnz
fisttpll
aaa
fists
mov
mov
sar
xor
push
stos
shrl
xor
adc
sbb
stos
xchg
stos
xor
mov
mov
xchg
or
pusha
test
mov
pusha
push
pop
jno
bound
arpl
out
fcmovbe
mov
sahf
icebp
jp
addr16
mov
xchg
and
out
push
push
or
inc
jp
lods
js
mov
test
push
mov
pusha
negl
popf
and
jns
lahf
js
pop
out
stc
adc
pop
scas
pop
jmp
adc
lret
xor
mov
inc
sub
xchg
and
add
mov
lea
cmp
call
icebp
jg
cmc
mov
push
pushf
mov
add
fnsave
xorl
pop
mulb
pusha
mov
inc
push
push
push
mov
mov
repnz
out
and
mov
in
nop
push
imul
mov
rcrb
shll
xchg
arpl
arpl
pusha
aas
lods
loope
test
inc
mov
and
shll
mov
push
push
les
nop
test
out
stc
idiv
cmp
cmc
cwtl
hlt
cld
push
cmp
ljmp
mov
sub
jns
das
pop
test
fldl
cmp
les
bound
lock
shrl
jmp
int
addb
out
mov
cmc
push
add
and
int
jae
mov
lea
ret
sbb
loopne
loopne
rorb
push
stos
xor
mov
fiadds
lret
pop
cmp
add
ret
add
jno
mov
cmpsl
mov
push
pop
popa
cmpsl
fsincos
aad
stos
pop
adc
into
ret
inc
push
test
cmpsl
cmc
shlb
ret
sarb
repnz
jl
ja
out
fninit
adc
mov
lret
adc
aas
mov
mov
jo
cs
xlat
xor
xchg
subl
ss
daa
pop
xorb
jmp
mov
jb
stos
jns
pop
stos
xor
movsb
jmp
jmp
fnsave
jmp
xchg
mov
sarb
adc
sbb
jmp
std
xchg
iret
repz
mov
shr
mov
ret
and
jae
xlat
jbe
xchg
cld
outsb
mov
xlat
shlb
mov
cli
arpl
ret
cmc
cld
ret
cli
jp
in
jecxz
sub
and
xchg
fidivrs
mov
xchg
and
jmp
ret
adc
push
or
xlat
push
xchg
adc
pop
mov
sbb
push
sbb
inc
adc
add
imul
in
adc
jno
jg
adc
xchg
jg
cmpsb
ficoms
sub
mov
adc
sahf
icebp
mov
mov
mov
mov
cltd
jb
push
lock
dec
sarl
pushl
imul
mov
mov
mov
add
lahf
mov
jmp
sti
xor
and
mov
pop
push
and
mov
sub
stc
add
mov
push
lret
fucomip
mov
adc
jb
cmp
xchg
mov
adc
push
push
mul
repnz
xchg
rcll
das
xchg
cli
inc
push
fwait
clc
scas
jno
xlat
popa
shll
xchg
jle
jno
das
inc
lahf
lock
xor
jns
xor
lahf
and
pop
jnp
lcall
rol
addb
push
outsl
mov
sbb
adc
push
jecxz
or
jb
test
cmp
pop
insl
test
insl
jecxz
in
pop
divl
and
sbb
lods
clc
sarl
lahf
jns
push
mov
dec
jno
rcl
imul
mov
xchg
lret
jp
mov
cmp
std
call
pop
fcom
mov
xor
aad
xchg
cmpsl
xor
jbe
sahf
in
fdivl
test
jl
xorb
xchg
data16
push
aam
mov
mov
jecxz
rolb
inc
push
int
aaa
je
xchg
cs
pop
stos
xchg
incl
jmp
adc
ret
inc
add
add
cmp
push
adc
loopne
pusha
dec
inc
mov
mov
mov
or
dec
or
or
push
rol
ss
pop
mov
faddl
cmpl
int3
mov
test
pusha
pop
and
jae
ret
insb
cmp
cltd
pop
ret
rol
stc
mov
xlat
add
popa
fnstsw
outsb
add
filds
je
jnp
fst
inc
sub
dec
or
push
pushf
cmp
inc
cltd
cmp
mov
loop
mov
jg
loope
jnp
xchg
sub
lods
jge
xor
and
iret
sbb
sbb
mov
shll
xor
ja
cmp
sub
push
adc
mov
jge
mov
scas
arpl
pop
and
test
cli
cmc
jo
lret
xlat
daa
mov
jmp
adc
outsl
jno
cli
mov
sar
daa
push
repnz
je
shll
xor
fwait
jecxz
xchg
das
xchg
cmp
xor
aaa
jmp
mov
out
pushl
inc
test
in
arpl
and
push
ret
rolb
into
mov
or
ss
xchg
push
mov
fbld
mov
cs
arpl
mov
or
decl
cmc
fldl
fstl
mov
test
sub
rcr
pop
fimuls
add
shl
imul
daa
cmp
mov
add
add
jecxz
into
and
outsl
in
lahf
sbb
fst
out
and
mov
pop
xchg
push
and
arpl
outsl
xchg
shrl
subl
and
fnsave
test
ds
out
xor
jnp
loop
mov
scas
arpl
mov
loope
loopw
or
sbb
movsl
rorb
outsb
xorl
push
js
bound
sbb
cmpsb
hlt
pop
xor
rolb
pop
bound
sub
push
push
pusha
xor
daa
mov
sub
add
into
call
lods
aam
ret
aaa
rorl
je
mov
cli
adc
loopne
rorl
pop
pop
and
jmp
mov
stos
insb
and
cmc
adc
adc
xor
adc
mov
sti
aas
mov
adc
and
repnz
bound
scas
cmp
and
inc
and
arpl
insb
adc
jmp
sub
push
sarb
inc
scas
test
push
fnstenv
ljmp
lret
pop
xor
push
outsl
ret
cmc
int
xor
sbb
shlb
sub
jmp
arpl
fnstsw
mov
mov
imul
cwtl
test
mov
fildll
mov
and
and
ret
les
ficoml
jae
loop
jno
and
cmp
push
jns
adcl
in
or
adc
test
or
leave
jecxz
ret
push
repz
inc
sub
pop
mov
sti
std
lcall
cmc
cld
jmp
cld
rcll
aam
out
popf
int3
sbb
lret
mov
test
jmp
cmp
jge
ljmp
add
push
or
ror
sbb
pusha
bound
adc
cmp
stos
shl
sbb
insl
daa
pusha
sub
mov
test
push
or
sahf
mov
mov
ljmp
jp
ret
in
faddl
cmpsb
sbb
addl
mov
and
and
popw
or
push
xchg
in
aas
clc
pop
cmpsb
xchg
cli
fwait
and
and
iret
cmc
push
add
jbe
pusha
mov
std
jecxz
mov
addb
mov
push
lahf
loope
ljmp
arpl
mov
sub
ljmp
mov
mov
jecxz
mov
cs
test
mov
bound
or
jle
pusha
add
fwait
iret
test
imul
xor
dec
arpl
add
lock
out
add
add
lcall
lret
jb
dec
add
sti
push
ret
mov
fisttps
fisttps
cmc
js
mov
stos
stos
shlb
lret
int
cmp
mov
dec
stos
and
xchg
mov
sti
lea
cmc
ja
add
mov
adc
cmpsl
jmp
outsb
sti
iret
mov
hlt
ret
in
jmp
test
addr16
ret
and
jno
fstp
js,pn
push
cmp
push
fdivrl
mov
mov
jle
mov
mov
shll
repz
jo
jnp
sti
inc
jns
fdiv
mov
sub
cmp
pop
fadds
enter
xchg
jl
xchg
notb
std
fs
xlat
or
out
mov
mov
movsl
enter
pusha
ffreep
cmp
or
jmp
std
les
push
andb
jle
cld
jns
jo
stos
sbb
frstor
or
mov
push
ljmp
lret
repz
dec
sub
arpl
jnp
mov
sarb
test
sti
sbb
cmp
stc
loopne
shlb
jge
jmp
inc
sti
bound
jmp
jg
sti
shlb
clc
cmpb
lea
xchg
jp
push
cmp
inc
jmp
ja
push
xlat
in
ret
dec
or
mov
cmp
sti
movsb
and
ja
mov
jp
push
lods
ret
iret
fbld
test
imul
mov
jnp
inc
out
mov
push
xor
pop
mov
mov
aad
sub
sar
cmpsl
shrl
mov
popa
or
fucomi
jg
jg
test
outsl
xor
xor
cmp
shlb
sbb
lahf
jg
xchg
mov
add
nop
stos
out
ss
loop
mov
int
inc
ret
mov
cmp
xor
lahf
jb
jmp
std
idiv
jbe
outsb
and
cmp
lret
ficomps
out
outsb
inc
repz
test
call
adc
cmp
lods
icebp
add
xchg
jle
rcr
sbb
adc
adc
cs
inc
xor
cmpsl
and
mov
pusha
cmpsb
cmp
fdiv
push
loopne
arpl
mov
sahf
push
out
mov
lahf
pop
fdivr
jbe
dec
stc
lret
int
jecxz
inc
mov
or
xlat
mul
mov
icebp
sub
pusha
push
push
and
xchg
rcll
repz
jecxz
cmp
xor
outsl
mov
inc
clc
xchg
push
ffreep
int
les
cmp
mov
add
hlt
fbld
xchg
jns
adc
cld
xchg
mov
inc
push
andb
push
add
mov
jg
cmp
mov
andl
jmp
jno
mov
sti
cld
inc
div
fs
sbb
adc
shr
mov
xchg
out
inc
xor
mov
aam
cs
hlt
mov
xchg
fldl
lcall
push
outsl
sub
fbld
mov
lock
add
mov
insl
jmp
add
inc
xchg
adc
or
add
jl
mov
rcr
ret
repnz
push
testb
imul
cmpsb
fstl
mov
lods
cmp
lds
fdivrp
pop
movsb
xchg
jnp
gs
cmp
hlt
fwait
sub
lcall
add
cmpsb
cli
pop
pop
pop
jmp
xchg
cmpsl
mov
ret
out
push
js
pop
aaa
cmp
cs
jmp
lret
xor
mov
std
dec
xor
mov
arpl
movsb
xchg
mov
repz
addr16
cmc
or
cmp
pop
xchg
mov
and
and
rcrl
cmp
es
cmp
out
imul
mov
sub
lcall
mov
insb
loop
shl
imul
jle
mov
sahf
out
lcall
mov
int3
icebp
pop
inc
xor
and
mov
frstor
mov
xchg
loopne
sub
ror
xlat
cmpsb
leave
inc
mov
ret
std
ljmp
jp
mov
xchg
xor
rorl
repnz
aam
pop
mov
sub
repz
sbb
push
xor
cmpsl
cmp
lock
mov
push
mov
inc
rcl
mov
jg
dec
inc
xchg
ljmp
push
dec
adc
call
inc
cmc
sahf
jns
sub
sbb
outsl
out
pop
mov
bswap
xor
add
add
and
sbb
lea
xchg
frstor
mov
out
jg
pop
fcomps
pop
cmpsb
add
or
fcompl
sbbl
in
add
shrl
outsl
out
rcrb
ret
mov
loope
out
pusha
add
ja
mov
inc
mov
fnstcw
dec
bound
icebp
xchg
sbb
bound
cmpl
ss
inc
loope
xor
fwait
push
sub
mov
pusha
add
outsl
fiadds
xor
mov
ljmp
add
es
inc
mulb
arpl
xchg
ret
push
dec
fstpt
cmp
inc
outsb
int3
xor
mov
bound
jno
out
jecxz
add
imul
addr16
cmpsb
push
push
fcoms
cwtl
cmp
push
leave
addl
loope
sub
incl
dec
shlb
rcl
lods
fldl
pop
fdivs
es
add
neg
adc
mov
sbb
mov
lret
dec
mov
sub
movsb
lds
pop
je
mov
aad
jnp
xchg
mov
outsb
leave
scas
addb
dec
mov
mov
adc
pusha
inc
ss
cmc
stos
mov
add
or
mov
fwait
mov
jmp
dec
xor
push
jecxz
imul
fisttpl
jns
mov
mov
and
mull
lods
adc
or
dec
push
sub
repz
inc
xor
pop
inc
adc
pusha
shr
push
ret
stc
xor
mov
in
pop
imul
hlt
xchg
rcll
ret
cwtl
push
lcall
sub
mov
jecxz
mov
jmp
and
les
fbstp
js
cmp
jbe
mov
jl
in
add
jecxz
push
shlb
scas
push
loop
or
adc
pop
sbb
stc
pushf
ret
sub
mov
sbb
sbb
add
cmc
ret
sbb
ja
xor
fwait
icebp
loop
outsb
sub
xchg
jns
xor
arpl
rcr
pop
in
mov
outsl
or
mov
add
stc
sti
out
jae
sbb
rcl
mov
or
inc
inc
call
xchg
out
mov
repz
pop
fcoml
dec
ret
mov
int
sarb
pop
and
in
dec
iret
mov
insb
jne
inc
add
leave
jo
sti
jb
cmc
nop
rolb
std
jo
pusha
fldenv
es
in
add
cmp
test
int
je
test
sbb
bound
push
arpl
cmp
fcom
cs
push
aam
in
scas
pop
in
lahf
cmpsb
push
out
lock
adc
fsub
cmp
xchg
push
inc
or
or
sahf
mov
aad
mov
hlt
out
xor
add
push
fistpl
clc
jg
sbb
sbb
std
imul
fnsetpm(287
in
addl
mov
inc
mov
cs
cwtl
cmp
cltd
sub
stc
dec
mov
jne
jae
cmp
xor
and
adc
cmp
xlat
sbb
cwtl
add
add
xchg
push
lcall
aaa
and
out
cli
jecxz
xchg
jmp
jge
pop
xlat
cmpsb
mov
cli
gs
cmp
mov
mov
cld
xor
add
sti
arpl
push
jae
ret
add
jg
clc
ss
lea
pusha
loopne
cmp
lods
push
fldenv
shll
jmp
jecxz
pushl
hlt
cmp
xor
and
adc
pop
mov
loop
fnsave
jmp
sub
push
lret
adc
push
pop
cmpb
dec
mov
mov
or
xlat
nop
sahf
dec
in
cltd
rorb
dec
mov
ficoms
inc
es
loopne
sbb
ljmp
ljmp
movl
icebp
mov
frstor
ficoms
rcr
add
xchg
rolb
testl
ljmp
ret
jmp
adc
nop
xor
xchg
fidivl
mov
sahf
insb
rcrl
push
xchg
fcmovnb
inc
xchg
push
or
and
and
sahf
outsl
and
mov
and
fdivrp
stos
popf
popf
aad
cli
sar
pusha
mov
jge
rcl
pop
aam
push
mov
adc
inc
sbb
shr
ret
adc
lahf
mov
movsl
shlb
cmp
mov
mov
add
pusha
data16
lahf
add
mov
adc
lds
shl
fisubrs
push
scas
enter
call
int3
xchg
loop
xor
sbbl
pusha
pop
jge
mov
repnz
mov
icebp
out
cmp
and
sub
in
or
js
ret
mov
movsb
xchg
js
inc
adc
loopne
jae
mov
xor
sbb
fucom
incl
cmp
fucomp
and
cmpsl
lods
nop
push
sahf
in
push
mov
idivb
jg
fistpll
jb
jl
mov
xchg
dec
or
repz
sub
inc
pop
test
xor
outsl
pusha
jnp
mov
inc
imul
fstpt
add
aaa
xchg
pop
fistps
or
call
sti
xor
or
std
mov
rclb
out
xor
sub
mov
loop
sub
mov
xor
loop
sbbl
and
or
pop
into
mov
pop
add
xchg
mov
mov
add
and
jb
sbb
lea
or
es
pop
pop
out
mov
repnz
les
push
push
imul
mov
leave
or
pop
cmp
cmpsb
bound
int3
dec
clc
mov
test
inc
aas
dec
inc
call
pop
xchg
mov
dec
notl
int
inc
mov
test
into
push
jo
push
rcl
repz
sub
in
push
mov
sub
dec
aam
jg
xor
mov
jns
xchg
mov
outsl
jae
cli
mov
xchg
ss
orb
stos
test
ret
stos
pop
sbb
mov
mov
dec
push
fildll
scas
lea
lods
inc
dec
adc
in
mov
sub
enter
imul
add
inc
lret
fdivrs
inc
ds
mov
call
add
adc
jns
jmp
xchg
and
inc
jg
jle
std
push
pop
fsubrp
mov
jge
repnz
mov
mov
mov
icebp
push
jl
dec
xchg
sub
push
shl
pop
in
add
dec
loopne
push
sub
push
scas
int
stos
mov
xchg
std
clc
mov
movsb
adc
push
ret
adc
nop
xchg
push
adc
roll
outsl
jb
outsb
stc
inc
mov
dec
in
adcl
pop
lret
push
test
bound
stc
movsl
repz
shr
ret
std
mov
pop
mov
inc
mov
aas
sub
repz
mov
ret
or
inc
inc
xor
or
int
sbb
pusha
mov
aaa
jbe
pushf
push
sti
cmpsb
xlat
and
jecxz
dec
sub
fadds
pop
adc
nop
inc
pop
jo
add
iret
mov
divb
lods
xlat
daa
int
xchg
pusha
mov
loopne
inc
repnz
sub
ss
cmpsb
fcmovnbe
bound
or
and
filds
mov
call
cmc
push
xchg
pop
sarb
add
dec
ret
pop
jp
and
jno
popa
out
inc
and
xor
and
sti
nop
adc
mov
push
cs
hlt
pop
repz
ficoml
je
shll
aaa
fdivl
pop
lock
loopne
shl
cmp
sbb
and
pop
in
cmp
in
rol
jb
shlb
aam
xor
pop
test
jns
aaa
xchg
popf
mov
out
pushf
rolb
loope
sbb
fwait
cmp
mov
xlat
jae
je
hlt
arpl
add
and
xorb
mov
sub
mov
gs
stos
cmpl
rorl
mov
hlt
fucomp
sbb
or
into
pusha
cs
xchg
cmp
mov
push
mov
test
sub
sbb
or
push
pusha
cmc
jae
cmpsb
loopne
mov
xor
clc
cmp
lret
fwait
jnp
das
mov
addr16
cltd
ret
or
popf
sti
mov
fcomi
outsb
and
sub
push
or
xor
test
sub
stos
xchg
orl
cmc
js
sti
fisubrl
mov
mov
mov
mov
sub
cli
into
mov
add
lret
cmp
arpl
adc
out
iret
jp
adc
inc
je
mov
push
adc
xor
sarl
fsts
xor
in
mov
into
insl
int
push
jecxz
cmpsl
loope
mov
xlat
ficomps
mov
cmp
fwait
popa
xchg
mov
ret
popf
stos
mov
ret
adc
rclb
aas
sti
lds
ret
das
aad
inc
lret
outsb
xor
jo
ds
stos
in
cltd
icebp
scas
pusha
pop
push
fwait
cltd
es
out
sti
xchg
cmp
test
jo
mov
mov
les
add
adc
lret
jbe
mov
fcom
sar
push
repz
xor
push
push
add
repnz
push
xlat
fbld
sub
fcoms
mov
mov
or
sbb
cmpb
xor
xlat
int
sub
and
lea
push
stc
leave
iret
xor
mov
mov
or
pusha
bound
shll
xchg
outsb
icebp
scas
mov
or
mov
js
orb
cmpsl
or
aam
ja
not
mov
in
inc
subl
and
push
out
xlat
mov
xchg
shll
out
stc
or
aaa
add
ret
int3
das
mov
pop
les
push
repz
repz
mov
cmpsl
lods
je
or
stos
mov
mov
mov
sub
xor
dec
lock
rolb
scas
in
cmpsl
pop
xlat
ljmp
testl
pop
popf
das
dec
inc
jl
scas
pop
cwtl
or
lds
repz
clc
cmpsb
mov
in
pop
jnp
lds
cmp
arpl
jg
cli
push
cmpsb
add
inc
and
or
ret
push
std
push
int
addr16
dec
dec
out
dec
loope
and
jp
nop
cli
mov
and
cmp
add
out
mov
imul
pop
icebp
inc
jno
pusha
pop
fmuls
push
scas
jmp
ret
pop
or
lea
loope
sti
cmp
push
mov
mov
cmp
jp
mov
jae
mov
pop
lret
mov
inc
cmc
cmp
add
cmpsb
ret
ret
inc
and
aad
or
sub
loope
mov
out
sahf
cmp
mov
xor
fidivrl
icebp
lcall
and
test
jmp
adcl
push
lds
inc
push
ret
jae
jbe
xchg
mov
pop
mov
xlat
and
ret
mov
arpl
jmp
xchg
xchg
mov
frstor
sbb
fnsetpm(287
add
xchg
pop
mov
ljmp
shl
loop
repz
rorl
push
mov
mov
xor
loop
add
fwait
push
cli
aad
jo
lods
push
outsb
push
cmp
xchg
popa
push
sti
inc
cmp
push
gs
iret
iret
jle
popa
pop
sahf
daa
inc
es
lahf
mov
xchg
or
mov
sbb
cltd
pop
mov
ret
or
aad
mov
out
bound
or
jmp
into
mov
pop
inc
fstpt
stc
rolb
jecxz
pop
outsl
jecxz
xchg
in
sti
adc
add
movsb
mov
loop
jb
pop
mov
lret
sahf
and
dec
fwait
and
or
imul
or
add
and
or
adc
jle
subl
pop
mov
repnz
mov
sahf
pop
jb
xlat
popa
push
arpl
mov
cwtl
ret
arpl
pusha
hlt
sub
dec
push
lret
mov
vpsrlq
mov
or
push
jae
pop
xchg
pop
out
cmp
ret
mov
push
cs
pop
xchg
cwtl
push
iret
call
add
add
xchg
std
cld
add
mov
xchg
mov
push
sub
ret
mov
pop
xchg
ljmp
pusha
inc
pop
add
cmp
cmp
push
jg
mov
and
mov
xor
xchg
jno
jmp
int
mov
jl
clc
mov
pop
inc
xor
push
jno
xor
cmpsl
je
fisubrl
lret
pusha
and
aam
jg
and
cmp
pusha
outsb
sub
xor
or
sub
fwait
shlb
pusha
mov
jmp
iret
ret
pop
icebp
lahf
in
add
inc
cmpsl
shl
lea
adc
mov
pop
push
into
jp
jno
and
lret
and
pop
fisubrs
jae
popf
sahf
add
sar
stos
push
and
loop
arpl
imul
mov
sbb
inc
cwtl
adc
lret
lods
clc
xor
leave
mov
push
mov
mov
mov
inc
sbb
sbb
add
xor
test
sti
mov
xor
or
lret
pop
mov
cmc
jb
and
or
jecxz
adcl
stos
in
sbb
mov
inc
mov
add
lock
dec
rcll
mov
and
in
inc
ret
fcmove
cmpsb
or
inc
lods
lods
mov
iret
imul
faddp
out
bound
jb
stos
dec
dec
movsb
dec
xchg
icebp
jae
aad
jae
jns
shll
sahf
xchg
dec
pushf
add
pop
mov
mov
mov
dec
mov
xor
add
out
loop
mov
test
mov
xchg
aam
and
jno
add
fsubrs
cmpl
and
insl
mov
sbb
add
lock
fldl
arpl
pop
dec
pop
xlat
lret
sbb
popa
leave
lahf
ljmp
add
imul
inc
pusha
iret
cld
add
and
mov
aaa
cmp
rorb
push
hlt
mov
std
push
jnp
add
mov
icebp
dec
mull
sub
test
movsb
mov
into
loop
ret
jnp
sti
lock
mov
cmp
aas
jl
lahf
std
shr
pop
mov
loope
stc
lock
jg
inc
cli
or
insb
inc
repnz
stos
sub
xor
out
in
out
xchg
push
jle
filds
mov
in
inc
in
pop
add
dec
fiaddl
lret
fisttps
dec
xchg
cmp
repnz
pop
push
xchg
repz
jp
adc
call
shl
out
push
cwtl
fstpl
into
xor
inc
and
xor
nop
sub
pop
ljmp
jecxz
and
loop
shll
jge
push
in
ret
push
fnstenv
cmp
xchg
pushf
fldz
xchg
dec
adc
inc
stos
fbld
in
aas
arpl
add
sar
fisttps
adc
fbld
es
hlt
mov
and
pop
in
xchg
sub
push
inc
pusha
cmp
jno
ret
ds
fisubl
jecxz
out
nop
push
cmpsb
mov
adc
sub
out
pusha
push
arpl
sub
xor
pop
mov
addr16
daa
pusha
inc
jmp
jg
pop
repnz
incl
mov
jns
test
scas
shll
adc
loope
and
jg
jne
xlat
lock
aas
jg
mov
into
adc
and
repnz
pop
mov
negl
jnp
xchg
inc
test
push
pop
cmp
loopne
icebp
mov
shl
sub
mov
test
in
leave
flds
loope
ljmp
cltd
mov
loope
mov
jecxz
enter
roll
dec
fdivrs
push
dec
loopne
test
popa
fisttpl
push
cmp
xchg
xor
mov
jns
arpl
fstpl
push
fisttpl
clc
mov
xchg
xchg
pushf
dec
xchg
mov
push
jnp
repnz
cmp
or
adc
icebp
movsl
and
pop
mov
xchg
jb
or
repz
pusha
es
pop
jmp
mov
push
sbb
enter
flds
mov
leave
out
in
icebp
addl
arpl
add
aaa
pusha
adc
roll
mov
inc
mov
cld
pusha
or
mov
sub
das
mov
pushl
dec
aam
out
fadd
adc
mov
inc
sub
pushf
testl
push
loopne
push
push
add
fdiv
cs
jae
adcb
adc
je
sbb
jno
cmpsl
pop
dec
pop
cmc
jg
jno
xor
jg
das
inc
cmp
test
and
push
aam
add
out
xor
icebp
pop
test
mov
mov
jecxz
push
jl
or
lods
sub
fmull
inc
loop
mov
rolb
mov
clc
popf
sub
fwait
leave
incl
insl
fistpll
add
mov
jecxz
ljmp
xlat
cmc
push
push
lods
subl
mov
in
repnz
lahf
into
inc
jmp
push
sbb
mov
jge
jmp
fisttpll
clc
pop
cld
stos
xor
dec
cmp
push
fists
idivl
enter
loope
add
cmp
or
add
outsb
lock
pop
pop
mov
inc
jbe
popa
xor
pop
and
add
xor
mov
ja
dec
loopne
jp
insl
pop
mov
inc
aad
out
divl
mov
add
jmp
xchg
fldl2e
shrb
jo
sbb
call
or
popf
lret
loope
and
repz
sbb
bnd
cmc
imul
add
sub
in
ret
mov
jne
mov
push
jno
ret
sahf
dec
jnp
enter
cltd
sub
cli
jp
mov
pusha
mov
sbb
xchg
mov
pusha
in
cmp
std
push
push
adc
imul
mov
sub
or
aad
mov
xchg
movsl
shll
addb
jnp
arpl
pushf
daa
lock
jl
adc
xchg
cmp
jb
push
mov
fsubp
pop
sbb
mov
fldpi
or
sbb
aam
cs
jns
cld
or
jae
pusha
arpl
test
mov
mov
push
shll
adc
outsl
into
inc
loope
lcall
ret
xor
in
inc
pop
dec
repz
push
fdivs
bound
add
mov
test
icebp
jmp
jle
roll
mov
push
xchg
stos
ret
sarb
fdivrl
dec
adc
ret
mov
mov
mov
xchg
jecxz
sbb
mov
dec
jb
clc
les
cmp
mov
outsb
mov
pop
push
aam
insl
cmp
repnz
shl
mov
dec
pop
sbb
ljmp
xchg
movsb
jg
cltd
jmp
in
dec
cmpsb
pop
out
pop
jae
pop
push
jmp
fistpl
sbb
in
mov
mov
pop
mov
out
jmp
jg
xchg
mov
lock
mov
fstps
shr
inc
stos
adc
shll
not
pop
push
xor
push
icebp
cli
push
cmp
loopne
push
jg
ret
notb
sub
shr
out
mov
iret
push
ja
shrl
sub
inc
arpl
mov
mov
test
idivl
cltd
jns
mov
mov
sbb
ret
mov
negl
inc
fwait
int3
push
mov
mov
adc
sub
rcll
sbb
addb
fstps
fcom
ljmp
aam
loopne
cli
lods
popf
scas
mov
test
xchg
lret
movb
xchg
cmp
mov
mov
dec
jp
pop
aam
test
popf
dec
ret
jecxz
rcrl
popa
dec
inc
leave
cmpsb
daa
cs
jmp
mov
rol
addb
sub
pusha
out
stc
mov
loope
mov
int
add
arpl
mov
pop
xchg
lret
shrl
popa
fwait
sbb
pop
mov
cltd
mov
inc
mov
xorl
mov
pop
arpl
fnstenv
pusha
movsb
dec
imul
mov
leave
mov
cmpsb
icebp
loope,pn
or
sub
mov
imul
icebp
stc
dec
jne
pop
mov
out
fstl
es
jmp
fsubl
inc
shlb
clc
xchg
stos
daa
pop
xchg
inc
sti
shrl
rclb
pop
adc
cmpsl
add
xchg
cmc
mov
inc
ljmp
push
out
push
pusha
or
js
repnz
push
pusha
clc
pop
push
push
shrb
mov
clc
pop
test
adc
sub
lock
pop
cmpsl
pop
subl
cld
js
ffreep
jo
shr
lock
std
cld
jno
pop
je
lret
inc
xlat
mov
les
mov
popa
dec
shlb
add
xchg
and
cli
fnsave
bnd
andl
test
in
pushf
fdivrl
mov
mov
test
xchg
jecxz
out
push
stos
nop
cmpsb
rolb
inc
fisubrs
pop
and
inc
enter
mov
popa
pusha
mov
scas
notb
xchg
enter
pushf
mov
aad
push
lret
lahf
shll
out
mov
add
imul
lcall
jns
adc
test
loope
jbe
sbb
cmc
clc
inc
shl
stos
pop
js
jb
cmp
shlb
mov
jecxz
or
sub
xor
push
push
bound
ret
jmp
call
sbb
xor
mov
jnp
jecxz
movsb
jae
sbb
lock
or
or
repz
stc
cltd
filds
mov
scas
jle
mov
clc
fisttps
xor
scas
pop
mov
cli
xchg
sbbl
lods
mov
repz
test
inc
aaa
mov
addl
adc
jnp
xor
repz
lock
jp
xchg
xchg
sub
mov
subl
cmp
pop
cld
leave
jecxz
mov
rcl
pop
push
xor
mov
mov
addr16
xchg
xchg
inc
mov
add
cmpsb
sub
or
test
sbb
dec
mov
repnz
out
aaa
mov
xor
push
push
cli
loop
mov
fmuls
inc
out
sub
js
mov
dec
cmp
fdivrp
jge
xlat
shlb
xchg
aam
cmp
aad
cmp
adc
fcoms
or
repz
fstl
mov
jle
pop
sbb
pushaw
dec
push
push
sbb
hlt
push
aas
sub
sub
pop
mov
fcmovnb
jnp
xor
pushl
lock
push
inc
dec
cwtl
mov
mov
in
inc
lcall
or
mov
incl
shll
inc
fstp
pusha
out
lock
rolb
mov
repnz
push
pop
das
les
cmp
jae
int
cmp
lcall
or
sub
movsb
sti
sbb
movsb
and
shr
pop
iret
lcall
push
sbb
add
lret
cmpsb
ret
in
pop
popa
loop
jo
xchg
in
enter
pop
pop
push
out
lods
push
jmp
sub
pop
mov
sbb
sub
and
pusha
lods
es
fcoms
mov
filds
adc
in
lea
js
cmp
sub
fwait
cmpsl
xchg
aad
jnp
pop
lock
mov
xchg
jecxz
cli
mov
cli
adc
mov
xor
or
sti
jns
cmp
add
mov
dec
enter
pop
fwait
idivl
push
jb
cmp
push
fistpl
mov
test
mov
loop
mov
push
in
jns
sub
sub
mov
mov
adc
and
cli
outsl
jb
pop
sub
add
repz
xchg
cmpb
out
or
jns
xchg
mov
jmp
es
sub
pop
cmc
or
out
aaa
jp
xchg
mov
mov
xchg
gs
nop
bound
pop
aam
lcall
fistpl
pop
pop
fcoms
cli
pusha
das
shll
ret
ja
cmpb
repnz
sub
xchg
add
xor
cmp
int
sbb
jb
scas
cmpsl
shrl
jp
out
inc
jmp
add
lret
sub
stos
inc
xchg
out
push
mov
cmp
cli
mov
iret
pop
repnz
add
cmp
stos
fnstenv
arpl
and
jne
fs
fcmovnu
add
cmp
mov
jp
pusha
out
cmp
imul
cmp
or
push
adc
pusha
or
add
push
outsb
xchg
cwtl
pop
mov
fnstsw
jae
loop
imul
xchg
or
xor
lahf
incl
dec
jmp
jge
pop
fwait
jg
cli
xchg
pop
fcmove
gs
mov
add
hlt
xor
loop
jnp
xchg
mov
inc
mov
adc
and
push
xchg
sbb
fiaddl
adc
and
repz
jno
mov
sbb
push
push
pusha
pop
lods
daa
mov
xchg
push
mov
adc
jmp
pusha
jge
das
and
arpl
push
int
mov
xchg
iret
or
xor
lcall
cltd
push
sbb
lea
cmc
stos
push
mov
xchg
out
out
insb
scas
shll
jnp
out
mov
push
clc
sahf
xor
aam
filds
subl
fcmovnbe
pushf
push
xlat
fdivrs
push
test
sub
mov
lret
pop
sbb
inc
mov
sub
pop
test
push
push
ret
in
xchg
xlat
rcll
fadds
outsb
adc
aas
daa
mov
into
jmp
pop
fbld
fsubrp
cmp
xchg
mov
jb
add
mov
inc
loope
lods
pop
jae
mov
pusha
mov
push
data16
test
push
adc
inc
inc
insl
cmp
repz
lret
notl
mov
shrb
nop
mov
jnp
pop
sti
xor
push
jmp
ffree
ffreep
pusha
push
pushf
lods
frstor
pusha
imul
sti
outsl
sbb
sub
jge
cltd
sbb
cmpsb
and
call
hlt
lea
dec
push
mov
in
fisttpll
push
addr16
repz
scas
popa
adc
cld
out
cmc
loop
or
jecxz
faddl
repz
addr16
jp
sub
push
ja
je
xor
int
insb
outsb
push
mov
int3
mov
jns
imul
pop
cmp
out
ret
cmp
push
fstpl
mov
adc
fcmovnu
sti
xlat
add
popa
push
neg
int3
repz
jne
cmpsb
gs
pop
lcall
jae
cmp
aas
lret
icebp
leave
dec
ja
sahf
outsl
jmp
cld
cli
jbe
pop
out
lret
out
push
adc
xlat
add
adcl
sub
push
repz
cmp
test
stos
mov
shr
pop
cmpsb
mov
ljmp
cmp
pop
aam
push
mov
jmp
ss
nop
xlat
xchg
aam
insb
mov
cld
add
loop
mov
popa
aad
xchg
xchg
mov
stos
std
cld
rclb
inc
rorb
xorb
in
dec
sar
sar
stc
jle
repnz
movsb
jb
jl
imul
push
add
push
mov
mov
loopne
popa
popl
sub
pushf
sahf
push
push
pop
js
mov
and
fs
fs
out
push
loopne
fbld
xchg
test
cmp
fistpl
imul
sti
frstor
shl
mov
addr16
fwait
jae
xorl
inc
mov
mov
into
aad
mov
cli
jmp
and
push
and
sbb
mov
mov
dec
mov
lahf
lret
ret
subl
pusha
cmp
repz
or
jne
add
cs
mov
ljmp
fbstp
jg
push
xchg
gs
sbb
jb
lcall
es
mov
popa
icebp
mov
pop
inc
dec
leave
add
pusha
add
mov
dec
ffree
in
cmpsb
aad
stc
or
inc
pop
movsb
outsl
shrl
add
xchg
outsl
stos
inc
aad
inc
ds
gs
jecxz
mov
push
pop
cmc
xchg
lods
sbb
outsl
clc
inc
pop
movsl
ljmp
jnp
sub
jo
inc
sar
movsb
or
aad
push
add
cmp
inc
scas
test
es
sbb
xor
jb
sub
aas
xor
aas
sub
and
mov
loope
lock
icebp
push
cmp
xor
insl
or
mov
dec
ss
sbb
mov
add
ret
cs
scas
pop
push
jg
inc
mov
call
sub
repz
push
lret
mov
inc
imul
xchg
inc
xchg
ds
mov
test
pusha
mov
movsl
cwtl
imul
je
loopne
mov
mull
inc
stc
lods
imull
xchg
test
mov
daa
notb
lcall
push
cmp
push
out
in
jae
xchg
test
imul
xor
mov
icebp
and
shl
and
fistpll
rcrb
mov
and
xlat
sub
jae
or
or
stos
popa
push
pusha
jbe
adc
jae
pop
std
mov
cli
fnsave
testb
sti
jno
pop
jg
mov
je
insl
mov
pop
out
adc
push
pop
cmpsb
jnp
adc
push
pop
pop
mov
aaa
adc
mov
xor
mov
and
adc
sub
and
movzwl
popf
iret
jp
das
insl
mov
shlb
outsl
out
jg
pushf
in
mov
cmp
out
jnp
mov
mov
or
cwtl
dec
fidivrl
sub
xchg
aad
jo
mov
mov
shr
fs
inc
mov
aas
bt
outsl
sbb
inc
pusha
testl
mov
js
cs
out
stos
rclb
hlt
dec
shlb
jns
cmp
mov
push
clc
outsl
sub
mov
lcall
insb
decl
or
loopne,pn
adc
pop
and
mov
call
fsubl
lret
xlat
loope
pusha
or
mov
adc
cmp
pop
inc
jae
or
subl
adc
xor
cmp
cmp
repz
lcall
pop
arpl
movsl
cmc
addb
shl
mov
xchg
mov
stos
and
shrl
scas
push
lcall
xchg
cltd
xchg
mov
jecxz
into
add
pop
fwait
add
sbb
addb
mov
cwtl
push
pushf
adc
cld
addr16
ret
shrb
and
xchg
aad
pop
cmp
sub
xchg
shlb
mov
push
pop
mov
mov
jmp
mov
sub
jno
aam
sti
dec
sahf
push
inc
outsl
jl
cs
inc
mov
loopne
je
call
jp
mov
mov
enter
popa
ret
inc
sub
sub
popa
data16
sbb
shl
cs
fistl
mov
gs
mov
push
stos
ret
or
shl
sub
mov
dec
fisttpl
das
xchg
mov
ds
and
punpckldq
cli
aas
jnp
lods
sbb
arpl
push
add
aad
es
out
jg
adcb
addr16
into
leave
nop
insb
dec
out
jae
nop
mov
shrl
cs
pusha
cmp
stos
xchg
ljmp
stc
sahf
jmp
insl
or
test
xor
mov
mov
mov
test
mov
jo
ficomps
mov
mov
fnsave
dec
inc
ljmp
cs
movsl
es
rorl
push
mov
jecxz
bswap
mov
fildll
adc
and
aam
orl
xor
push
dec
pop
adc
mov
adc
pop
sti
dec
mov
xchg
pop
outsl
xchg
sbb
mov
dec
sbb
pop
jmp
pop
mov
or
add
movsb
sub
inc
mov
xor
fsubrp
outsb
adcl
push
xor
fs
and
mov
icebp
ret
lret
sbb
fists
scas
subl
mov
pusha
fcomps
jns
mov
out
out
daa
loopne
sub
xchg
pop
sbb
lret
not
fsubp
pop
or
sub
fcmove
mov
add
sbb
mov
mov
shrl
lock
ret
clc
shlb
pop
mov
out
sti
mov
xor
icebp
iret
dec
sahf
shll
dec
xlat
cmpsl
das
mov
sub
lret
mov
jae
adc
dec
outsb
mov
xchg
jecxz
inc
loopne
cli
lods
adc
push
lods
imul
sti
out
mov
cmc
sub
mov
lret
imulb
push
inc
xchg
ret
addl
jnp
mov
leave
popf
into
inc
outsl
test
std
es
dec
loop
dec
jmp
mov
mov
leave
test
arpl
js
sahf
int3
aas
push
adc
push
addr16
sub
push
jecxz
dec
push
adc
mov
and
and
mov
sbb
mov
mov
pop
gs
xchg
popf
cli
lea
stc
shlb
fcomps
pop
mov
adc
filds
and
fwait
lds
adc
in
jg
xor
movsl
mov
dec
jl
sub
popa
cli
gs
dec
faddp
ret
mov
pop
mov
dec
jmp
cmc
and
or
std
push
test
mov
xlat
sbb
cld
cld
mov
das
jne
jg
stos
stos
cld
jnp
inc
cmp
mov
mov
pusha
push
clc
pop
mov
pop
mov
bound
jl
jb
inc
adc
mov
mov
xchg
addr16
aaa
mov
add
loopne
and
std
jl
popa
testb
neg
shrl
xor
mov
adc
outsl
push
xchg
inc
addr16
fdivr
mov
clc
mov
jb
mov
mov
jne
jo
xor
mov
frstor
ret
mov
setl
mov
jno
mov
push
pop
inc
xchg
pop
lret
xchg
sub
rolb
xor
mov
insb
stos
pop
shll
push
fs
int3
mov
dec
push
into
mov
dec
and
jp
popf
dec
pop
cmc
mov
xchg
lods
push
and
pop
xor
outsb
push
mov
addr16
into
jns
mov
cli
stos
loope
lods
sahf
imul
hlt
mov
shrl
shl
and
xchg
push
loop
xchg
out
adc
mov
out
xchg
mov
and
adc
mov
jg
mov
add
test
leave
and
mov
mov
daa
int
xchg
mov
mov
out
xchg
pushf
adc
cmp
imul
inc
sub
sbb
mov
nop
jmp
lahf
fistps
stos
sub
push
jae
add
lcall
push
or
sbb
inc
sti
cmp
cli
adc
push
push
jle
ss
and
sbb
pop
inc
out
ja
hlt
pusha
ficomps
lcall
sub
sub
jmp
aaa
mov
and
jl
in
shll
inc
jg
mov
stos
mov
cld
xlat
fldcw
ret
pslld
xor
fcmovnb
outsl
dec
cli
std
js
orl
xlat
cs
sub
and
adc
aad
mov
add
sub
jle
outsl
sahf
sbb
fs
mov
inc
test
add
add
jecxz,pt
lock
lcall
fwait
xor
aas
pusha
and
add
cmpsl
dec
rcrb
ja
icebp
int3
mov
and
shrb
ss
cmp
ret
pop
jno
shlb
and
mov
fs
and
fistpl
icebp
fcoml
jmp
mov
lea
mov
push
cmp
sti
mov
cmpsl
nop
iret
inc
loop
or
jge
mov
pop
hlt
dec
lods
sbb
pusha
or
or
pushaw
pop
push
addr16
test
out
xor
lea
gs
adc
out
pop
dec
push
stos
out
and
or
adc
bnd
outsb
out
daa
mov
jnp
out
mov
loop
mov
out
push
mov
shlb
pushl
mov
mov
push
mov
nop
out
dec
ret
into
push
xchg
mov
dec
sub
mov
jecxz
sbb
push
out
fs
bound
aaa
push
mov
dec
pusha
bound
fmulp
das
aas
jge
xchg
nop
outsb
sub
mov
adc
dec
lcall
jle
fistl
jecxz
rcll
mov
dec
mov
out
repnz
mov
mov
mov
cmpsb
fimull
stc
je
pop
pushf
dec
jno
and
mov
or
or
add
fldcw
add
lret
sbb
imul
jmp
aad
xchg
mov
mov
lock
loop
sub
sahf
cs
jb
fnsave
lods
cs
and
dec
repnz
jnp
fwait
mov
in
adcb
push
inc
insl
push
fdivrl
xchg
rcl
push
call
push
sub
lret
std
mov
jmp
hlt
subl
lahf
lds
in
ret
pusha
data16
jb
pop
cmp
xor
pop
sbb
or
jl
mov
shlb
shrl
roll
imul
fwait
jecxz
mov
sub
imul
and
xchg
fdivs
fimull
shlb
pop
shrb
push
push
cs
les
sahf
loop
in
lret
cmp
mov
push
cmc
xlat
sti
push
sbb
add
sub
mov
mov
xlat
fldcw
xchg
mov
and
cmp
mov
xchg
xchg
shrl
jns
out
loop
sub
sub
xlat
stos
mov
add
pop
xlat
and
ret
pusha
mov
call
jb
fwait
pop
imul
imul
std
std
push
imul
aas
add
jo
lock
hlt
stos
pop
shll
es
push
ret
lods
mov
and
push
call
popa
aad
stc
iret
das
shlb
xor
pop
test
xchg
and
inc
ret
ret
lods
pop
lahf
cs
adc
movsl
jecxz
xchg
cmp
movsl
int
xchg
cld
sbb
cmpsl
add
adc
ucomiss
aas
cmpsb
mov
sub
out
sbb
mov
repnz
mov
fcoml
fldl
fs
jb
pop
mov
mov
pop
jb
pusha
sahf
mov
jb
xlat
add
sub
sahf
in
bound
out
mov
xchg
scas
pop
loopne
add
fs
adc
aas
fst
adcb
push
jp
or
pop
and
sbb
mov
adc
mov
jge
leave
gs
lret
pusha
jge
sbb
mov
dec
fidivrs
sbb
into
lock
xor
flds
xor
add
sbb
xchg
push
int
push
jns
mov
stc
dec
imul
leave
and
cld
sbb
inc
and
jecxz
mov
ljmp
cmp
xor
outsl
pop
mov
cmp
loope
jecxz
loop
mov
fstp
sbb
mov
lret
inc
sub
jae
jmp
or
mov
pusha
add
hlt
mov
mov
cmpsl
mov
pop
sahf
pop
lods
inc
stos
mov
xchg
fs
jp
mov
or
in
jae
inc
ljmp
dec
pop
mov
test
sti
pop
cmpsl
out
js
push
xchg
sub
and
fwait
xlat
pop
xor
test
das
xchg
push
push
push
adcl
push
into
mov
push
stos
or
ja
es
xacquire
notl
adc
cmc
or
out
pop
ret
std
xchg
adc
lret
sub
shl
push
inc
lret
mov
pop
loop
jecxz
clc
xor
imul
loop
fadds
fstpl
shll
mov
add
jb
shll
fstl
in
mov
lods
data16
push
out
add
mov
dec
mov
jp
inc
mov
mov
dec
das
lcall
ja
push
movsl
add
cmc
jb
adc
mov
das
jge
mov
pop
xor
leave
and
subb
xor
in
adc
add
pushl
rclb
add
inc
add
mov
adc
cmp
iret
icebp
mov
push
repz
scas
ss
cmc
push
mov
cwtl
out
cltd
xchg
aad
adc
mov
cmp
jmp
and
xchg
es
jmp
add
mov
sbb
std
xor
jne
mov
fpatan
sar
sti
jnp
xlat
imul
push
mov
mov
add
addb
add
mov
xor
push
jb
push
scas
out
push
pushf
in
pop
clc
jns
rcll
dec
subl
sbb
scas
aaa
xchg
repnz
jle
jo
jno
pop
xlat
jge
ret
inc
xor
sub
jbe
aas
xchg
ljmp
orb
cs
and
mov
mov
sub
jns
cmpsl
fimuls
imull
popf
jo
dec
xchg
loope
push
xor
int
jge
popf
push
jmp
fldt
cmp
jle
mov
mov
adc
mov
adc
lods
sbb
sti
mov
pop
mov
dec
loopne
mov
loop
mov
test
in
iret
shrl
fcomip
push
and
pop
iret
sbb
mov
stc
jge
mov
xchg
lods
rcrb
loopne
cmpsb
mov
jns
stos
pop
fnsave
lahf
cmp
ds
jae
mov
sbb
push
add
sub
jge
enter
stos
fnstenv
and
xor
aaa
pop
mov
rclb
hlt
ljmp
js
repnz
or
xchg
push
push
subl
gs
jp
jbe
push
jne
movsb
lret
cmp
push
sahf
add
std
loop
jns
sbb
sahf
jp
in
pop
mov
cmp
sar
jg
jmp
push
jb
mov
lods
adc
iret
and
mov
xor
or
mov
push
and
cld
das
icebp
in
push
jl
jmp
and
mov
jmp
push
ss
push
mov
xor
and
ret
jp
out
or
sub
xchg
and
dec
hlt
addr16
popl
push
jl
ret
ss
cs
and
aad
jmp
add
xor
std
dec
addb
mov
push
jle
cli
xor
icebp
or
repz
scas
not
ljmp
in
adc
loopne
jmp
jecxz
jecxz
clc
ret
sbb
dec
mov
test
cmp
in
add
clc
loopne
and
stos
and
lods
jecxz
inc
mov
in
mov
add
pusha
out
xorl
mov
cmc
and
push
popf
mov
pop
xchg
jns
xchg
out
xchg
add
inc
cs
fnstenv
lahf
cmp
push
mov
mov
mov
pop
clc
mov
imul
lods
lea
push
lret
pop
mov
je
sahf
sub
lret
jae
outsl
sub
and
mov
cmpsb
inc
test
and
aad
loop
mov
push
cli
xchg
loope
jns
sub
shl
and
push
lret
or
mov
jp
rorl
cmp
mov
ret
adc
shll
sub
lret
test
sbb
mov
mov
addr16
addr16
cmp
imul
jg
sbb
out
and
stc
and
mov
pop
sti
adc
rcrb
sti
insl
add
lods
bound
frstor
sbb
cmp
bound
nop
mov
adc
lret
aaa
int
pop
rorl
add
xchg
xlat
adc
filds
lock
jge
ljmp
inc
mov
in
jg
jp
fidivs
popl
mov
jae
ljmp
add
xchg
sarb
repnz
fstl
jae
xchg
mov
mov
lds
mov
cmpsl
loop
xor
frstor
cmpsl
loop
adc
dec
int
jge
in
jae
and
jb
loop
xlat
rcrb
fimuls
idivb
scas
xlat
mov
aas
rclb
mov
in
iret
or
jo
cmp
jno
and
jae
inc
mov
inc
mov
push
jg
or
hlt
nop
shlb
cmpb
div
pop
subb
jecxz
sub
out
xorl
mov
cmp
test
js
in
push
inc
jae
stc
ljmp
xor
adc
fcomip
mov
nop
jo
and
loop
xchg
sbb
mov
mov
out
sarl
out
repz
lahf
ret
iret
mov
adc
andl
fld
adc
in
push
and
cli
jbe
dec
mov
xor
shl
call
mov
sbb
outsb
les
cmpsb
adc
adc
sub
jmp
hlt
cmpsb
cli
add
inc
loope
in
xchg
es
nop
jg
fcompp
cmpsl
push
dec
mov
fists
sbb
cmp
aas
aaa
add
ret
fistl
dec
sub
push
push
push
stc
movsl
lock
mov
push
and
mov
out
add
dec
adc
popf
xor
mov
mov
mov
outsl
add
mov
xchg
out
add
jmp
ljmp
je
fstpl
sarb
push
insl
mov
pop
cmp
mov
addl
sub
bound
orl
fdivrs
or
xchg
hlt
lock
lret
fxch
sbb
stos
add
inc
fdivrs
push
sbb
clc
mov
xchg
jmp
sbb
ss
fldt
cmp
dec
shlb
jl
dec
pusha
int
mov
shrb
sub
bound
jl
sahf
add
sbb
sti
mov
mov
jno
mov
cwtl
les
adc
pop
ss
mov
loop
dec
out
scas
in
jmp
out
aad
fwait
pusha
jl
push
aam
ret
and
sub
mov
out
cs
mov
lcall
adc
imul
jbe
lea
mov
pop
jmp
push
mov
jno
loop
push
cli
repnz
out
dec
dec
mov
xchg
sbb
xchg
fbld
out
fmul
xchg
loopne
lock
test
lahf
xchg
loop
add
js
stos
je
fsts
les
shlb
outsl
cmpsb
ret
sbb
cs
scas
test
fucomp
testl
push
sbb
inc
push
jg
ljmp
std
mov
sub
push
xchg
add
pop
xor
jg
cmova
dec
pop
fidivrs
cld
cli
hlt
sub
ret
fxch
push
mov
aaa
mov
stos
jbe
aam
fisttpll
cli
loopne
xchg
sbb
decb
aad
test
clc
cmp
out
ret
std
xor
push
mov
clc
sahf
cmp
shr
jecxz
aas
cs
mov
lret
cmpsl
jecxz
push
scas
mov
push
fcmovnu
js
stc
subb
dec
cmp
nop
popf
jb
pop
jnp
cltd
cmp
std
lods
ds
jge
rol
icebp
sbb
sti
pop
pop
fbld
sub
adc
or
jo
sbb
xor
push
mov
push
cmc
js
mov
hlt
mov
mov
outsb
dec
fidivs
test
cmp
imul
repnz
lea
call
xlat
jb
stc
out
pop
int
mov
fldt
and
pusha
adc
cmp
xor
outsl
xchg
mov
inc
imul
xor
mov
jecxz
xchg
addr16
bnd
pop
mov
mov
fldenv
addr16
test
rcll
das
xor
pop
bnd
jb
push
mov
aam
cltd
mov
daa
dec
pop
mov
outsb
arpl
movsl
mov
lret
inc
sbb
inc
sbb
push
ret
mov
std
lcall
lock
imul
cld
pusha
popa
xor
iret
mov
cs
stos
push
test
pop
hlt
lcall
jae
ret
jmp
clc
or
cmpb
mov
or
push
jmp
test
and
push
inc
hlt
mov
xor
aas
jg
imul
pop
mov
lret
sub
fsubrl
rcr
scas
sbb
or
fimuls
xor
arpl
pop
loope
sbb
stos
or
sub
jge
int
add
push
push
sahf
int3
addr16
clc
cmp
sbb
mov
pusha
cmpsl
jbe
cwtl
add
sbb
xlat
mov
repz
push
mov
sbb
cmp
sbb
jb
dec
and
add
int
inc
sbb
push
mov
mov
xlat
mov
pop
jecxz
rorl
inc
mov
xor
push
cmp
mov
out
icebp
cmp
clc
cmp
ja
in
mov
jae
cmpsl
lret
xlat
sahf
push
out
cmp
btl
rdmsr
ret
ret
xchg
jecxz
cltd
adc
fsts
out
pop
xchg
mov
out
sbb
es
loop
push
in
push
out
xlat
shl
ret
test
call
push
pop
sbb
sahf
fnclex
hlt
xchg
fstp
pusha
rorb
sahf
ret
iret
pop
shll
jge
popf
sub
jne
shl
bound
adc
into
mov
pushf
and
mov
out
push
mov
pusha
addl
mov
jne
enter
vphaddubw
push
jmp
pop
mov
cmpb
call
pop
pop
in
xchg
test
sbb
iret
adc
test
mov
cmovb
mov
push
ret
sub
inc
ds
movsl
cmpsb
mov
xor
jg
mov
push
ror
push
arpl
mov
pushf
inc
push
mov
arpl
sub
push
jmp
mov
shl
add
sub
add
popf
outsb
loope
mov
push
mov
xchg
cmc
into
xor
adc
shll
cmp
divl
js
pusha
bound
adc
jg
inc
ret
cmpl
mov
jmp
push
iret
iret
push
or
push
cld
popl
mov
mov
sti
add
mov
sbb
notrack
insb
jmp
and
push
mov
out
and
pop
scas
jle
xlat
dec
jmp
xlat
cs
jecxz
lods
idivl
or
add
jle
icebp
jo
arpl
add
and
imull
mov
ja
mov
test
lock
fprem
pop
sbb
add
and
mov
push
leave
outsb
cmp
aad
or
push
and
shl
idivl
and
and
inc
mov
inc
jns
ljmp
sbb
mulb
sub
adc
add
mov
cmp
ss
int3
popa
ja
mov
mov
add
xchg
xchg
cli
insl
cli
push
imul
frstor
lock
pushf
and
mov
cs
xlat
mov
je
and
daa
sub
inc
inc
aam
sbbl
les
std
jl
mov
xchg
outsl
loope
mov
out
pop
jmp
add
mov
cli
adc
mov
and
ret
cmp
pop
imul
nop
addr16
mov
test
lcall
adc
ffreep
jno
add
and
fld
addl
xor
adc
jp
or
jb
jns
mov
cmpsb
inc
imul
dec
mov
jmp
dec
sub
mov
mov
mov
cmpsl
in
add
ret
int
ds
cmpsl
in
fucomi
test
out
jb
int
xor
and
popf
and
fs
fildll
in
mov
jb
dec
cld
dec
pop
fldl
pusha
mov
jge
mov
int
cmpb
push
xor
xor
mov
add
mov
sub
insb
aad
mov
popa
ret
sti
pop
or
mov
dec
neg
shrb
xor
cld
mov
adc
cli
push
xchg
aad
repnz
cmpsl
mov
stos
fisubl
and
jnp,pn
and
sbbl
mov
daa
jnp
xor
push
shll
dec
std
xchg
jno
aaa
jo
fidivrs
cmc
mov
dec
cmp
dec
inc
inc
cmp
mov
out
jecxz
test
out
call
cmc
add
fisttps
loop
sub
fsubl
pop
mov
stos
int
jg
jnp
fdivs
or
ficoml
sahf
ja
push
sub
cmpsl
roll
shl
xchg
xor
lahf
mov
pop
rcrb
lds
aad
jae
cli
mov
mov
imulb
callw
jbe
mov
cmp
outsl
imul
mov
dec
xchg
sbb
mov
mov
push
outsl
ret
mov
fidivs
cmpsl
pusha
data16
jns
orb
sub
sbb
add
push
add
fs
mov
xor
imul
xchg
mov
leave
jno
cmp
xlat
dec
iret
outsb
fwait
mov
ja
rcrb
rclb
mov
pop
das
push
shlb
inc
mov
out
mov
pop
pushl
rcrb
nop
sub
fimuls
inc
add
push
inc
scas
enter
xlat
pop
lcall
inc
mov
sarl
f2xm1
push
ret
faddl
les
ljmp
adc
ret
sub
and
add
adc
movsb
sub
cwtl
es
cmp
outsl
loopne
test
faddp
addb
out
xchg
into
addl
lahf
or
int
and
sahf
loope
sarb
outsb
stos
jb
mov
ja
cmp
and
cmpsb
scas
mov
and
mov
popa
fwait
iret
and
mov
jbe
sbb
subl
add
nop
and
stc
inc
and
pop
xor
lcall
mov
ret
pop
loopne
ret
jge
add
cmp
call
test
dec
imul
loop
fxch
fstpt
jae
call
xor
pop
lret
outsl
mov
dec
fnsave
mov
mov
stc
dec
pop
call
outsb
push
jle
and
arpl
add
inc
cs
loopne
lahf
xor
sahf
pop
xchg
sub
in
xor
mov
push
dec
test
jnp
nop
jle
addb
adc
jp
sahf
push
arpl
in
jp
push
js
outsl
mov
pop
pushf
es
mov
mov
fisttpll
fldt
mov
loop
aas
mov
mov
mov
bnd
lahf
imul
pop
sbb
sbb
imul
mov
rolb
sbb
inc
iret
mov
push
fcmovu
push
stos
pop
pop
ret
jnp
lcall
out
neg
stos
cmpsl
mov
xchg
mov
lods
jnp
nop
aad
lcall
insl
stos
notl
lahf
les
out
push
push
xor
movsl
cmp
jbe
jae
popf
mov
out
mov
mov
test
shrl
mov
arpl
lock
loope
cmp
shr
adc
ss
out
aad
cld
push
repz
pusha
pop
adc
add
or
jae
push
jg
pop
mov
sbb
mov
inc
jo
jge
addr16
repnz
dec
mov
fidivl
outsb
fcmovnb
scas
fdivp
cvtdq2ps
out
testb
sarl
pop
pop
mov
stc
jb
mov
lock
cmpsb
aas
arpl
mov
adc
mov
pop
lahf
xor
xor
ficoms
cmpl
shrb
scas
mov
cs
jbe
mov
test
jp
lock
push
inc
ret
lods
test
idivb
sbb
ss
scas
xchg
push
mov
mov
rorl
add
add
jb
adc
xor
outsl
push
jecxz
call
sub
adc
repz
add
add
call
mov
jmp
and
into
or
into
sub
inc
mov
pusha
mov
push
pop
push
out
xor
jge
fisubs
xchg
sbb
test
ja
cltd
addr16
clc
lods
scas
stos
popf
lret
jp
ret
mov
aad
orl
cmpl
inc
fcoms
nop
and
push
stc
nop
orl
push
into
cmpl
add
popf
push
fbstp
xchg
jae
loop
mov
scas
adcl
cmpl
pop
addl
ljmp
arpl
ljmp
mov
das
subl
and
adcl
xchg
mov
add
push
jnp
repnz
nop
pop
sub
and
inc
iret
and
mov
pop
pop
or
mov
pop
shrb
stos
mov
or
ret
add
adc
sub
mov
mov
dec
insl
cmp
push
stos
int
ffreep
hlt
xchg
sbb
cli
repz
int3
mov
rorl
fcmovb
hlt
test
insb
fwait
xchg
loope
fstpl
mov
xchg
aam
in
pop
add
rorl
jae
and
xor
aad
cmpsb
in
call
fidivrl
sub
mov
mov
jb
or
aam
ficoml
xchg
int3
rorl
push
dec
imul
mov
mov
or
dec
xor
pop
mov
loopne
pop
bound
out
fstp
das
mov
adc
jmp
dec
push
es
mov
cwtl
popf
iret
repz
xchg
pusha
inc
fldl
mov
hlt
fsts
mov
mov
mov
icebp
jge
pop
out
jecxz
ret
in
sahf
ret
xchg
inc
mov
andb
mov
mov
xor
decl
push
out
and
pop
testl
stos
mov
out
scas
ljmp
jle
call
adc
test
pop
dec
mov
mov
jno
jg
cld
testl
push
in
add
pushf
iret
test
pop
add
or
adc
jae
push
add
ret
icebp
sub
inc
ret
ss
ret
loopne
or
dec
pop
nop
mov
bound
lcall
mov
mov
dec
lret
loope
xlat
icebp
pusha
jecxz
sahf
xor
fcmovnb
xchg
jo
sbb
mov
in
test
add
test
add
clc
les
stos
xchg
inc
mov
pop
mov
test
mov
lock
sbb
and
cmp
sti
pop
xchg
scas
fwait
jecxz
mov
fisubrl
jns
xlat
movsb
pop
in
adc
shlb
flds
lret
sbb
cs
out
test
movsb
out
ffree
pop
dec
cmpsb
push
scas
pop
dec
jle
lret
pushaw
mov
mov
test
push
xor
mov
fldenv
stos
sub
sub
push
sti
stc
sahf
lds
testl
add
and
aaa
cs
adc
lret
mov
cmp
jmp
pop
outsl
int3
loop
dec
jae
imul
or
mov
insl
loopne
shr
inc
xor
test
out
jo
jg
pop
push
sbb
cmp
push
xor
adc
dec
cmpsb
and
mov
incl
aad
ds
cmp
cs
pushf
pop
cli
popf
pop
aas
shl
pop
sbb
cmpsb
jg
call
scas
loope
pusha
jl
pop
cmp
adc
ret
push
mov
adc
andb
loopne
push
push
xchg
pop
xor
cmpsb
pop
sbb
mov
xchg
ret
and
mov
repnz
adc
mov
pop
js
aaa
cmp
inc
pop
pop
loopne
jp
aaa
loope
pop
scas
mov
xor
xchg
dec
andb
jns
mov
mov
data16
xor
pop
out
pop
loopne
cwtl
test
pusha
cli
popa
jnp
repnz
js
jns
mov
cmpb
mov
in
test
adcl
pop
xchg
push
mov
aam
mov
or
stos
mov
jae
mov
idivb
insl
testl
mov
cli
and
ret
cmp
push
mov
fmull
inc
sbb
lret
sbb
sub
xchg
cmpsl
xor
dec
or
rorb
mov
std
movsb
ficompl
pop
mov
outsl
or
stos
jge
mov
outsl
ficomps
sbb
jge
maxps
inc
pop
push
ret
in
cmp
pop
pop
mov
ret
outsb
loop
adc
enter
dec
jle
adc
jl
popf
aad
es
punpcklwd
rcrl
pop
sahf
jnp
popf
add
divb
mov
pop
stos
orb
cmc
xor
adc
lcall
or
negb
jne
xchg
push
dec
in
mov
inc
aas
sbb
fcmovnu
inc
orl
sub
mov
and
lcall
shr
xchg
push
sbb
jg
in
fidivl
add
adc
filds
mov
jecxz
rorl
cmp
sbb
repz
rep
mov
inc
bound
into
rolb
add
dec
roll
push
mov
inc
out
mov
mov
aas
xor
repz
fisubrs
fwait
push
add
sbb
mov
cwtl
faddl
add
lret
xor
cmp
addr16
ficomps
mov
lahf
mov
lret
out
push
cmp
outsl
and
jbe
add
ja
xlat
in
out
iret
jmp
sbb
mov
mov
shll
mov
shll
rcl
and
pop
xchg
fmulp
mov
mov
lret
jae
add
adc
push
push
sbb
movsb
lock
mov
lcall
push
sub
or
mov
jg
popa
jnp
pusha
outsl
mov
mov
ret
jmp
aas
sub
insl
sahf
jge
lea
jne
adc
adc
pusha
sti
cs
mov
pop
pusha
mov
mov
jb
mov
and
pop
inc
cltd
addr16
iret
stos
dec
inc
jmp
scas
pop
or
mov
pop
imul
outsl
dec
add
fcomp
loope
idivl
mov
push
mov
repnz
loop,pt
fsubr
ret
xor
mov
lock
sti
bound
pop
lcall
cmp
shll
loop
popa
fcomi
call
sub
idivl
std
inc
lods
sti
inc
rcrl
mov
mov
repnz
xor
dec
lods
movsl
cmp
jmp
push
scas
nop
ljmp
into
xchg
mov
enter
pop
cmpsl
add
sahf
sarl
sbb
test
jmp
out
cmpsb
out
pop
sub
pop
or
popa
faddl
dec
mov
jg
sarl
lcall
jecxz
arpl
popa
out
cwtl
incl
xchg
sbb
fcmovnb
pop
iret
pop
or
inc
test
inc
mov
mov
mov
push
faddp
mov
icebp
xor
mov
cmpsl
jnp
mov
sti
xor
popa
dec
in
aad
ja
call
ror
shlb
pop
mov
addr16
jg
xor
push
pop
mov
pop
mov
sbb
jmp
pop
scas
fidivl
imul
pop
incb
xor
push
stc
inc
hlt
data16
pop
mov
cmc
mov
pop
jmp
and
jno
pusha
idiv
imul
and
mov
mov
ret
ret
arpl
xlat
adc
or
pop
dec
mov
xchg
aad
jecxz
gs
xor
ljmp
call
push
rcrl
loope
mov
xlat
fildll
inc
ljmp
pop
out
ds
pop
xor
loop
push
loop
clc
jae
xchg
in
ss
add
adc
pop
shlb
aad
xor
sub
sbb
popf
add
ficoms
call
mov
imul
lret
sti
fstl
mov
imul
out
ljmp
mov
cmpl
repnz
mov
popl
fcompp
mov
lahf
les
adc
sub
mov
filds
mov
insb
stos
idivl
iret
shll
xlat
jo
jnp
lods
jmp
ss
fldcw
add
clc
xor
inc
loop
adc
mov
shll
dec
cmpsl
xor
test
nop
fsubs
fcmovne
ret
jle
xchg
push
mov
push
mov
mov
leave
mov
jns
add
data16
stos
flds
jecxz
test
lea
out
shrb
jnp
ret
in
cs
add
cli
pop
pop
cmp
les
in
jmp
dec
pop
lret
add
out
in
jle
lds
loop
pop
cmp
bound
pusha
cmpsb
mov
loopne
bound
mov
sbb
add
fisttpll
pop
adc
shl
loop
lahf
lret
push
xchg
xchg
out
pop
rcrb
mov
mov
add
sbb
fildll
loope
mov
adc
xchg
and
icebp
push
add
outsl
scas
nop
pop
loope
mov
pop
pop
cmp
in
clc
jb
push
pop
icebp
shll
push
loop
out
xchg
js
ret
jmp
adc
pop
sti
scas
in
rorl
mov
stc
stc
sahf
pop
dec
mov
push
xor
rcrb
add
ret
mov
jo
sub
fnstenv
push
mov
mov
cmc
sbb
stos
loope
repz
lret
loope
pop
pop
in
popa
cmp
push
arpl
pop
mov
mov
loopne
lret
ret
jecxz
and
cltd
sbb
and
mov
and
into
push
xchg
push
popf
in
repnz
cmpsb
stos
fdivl
jb
pop
lret
sbb
adc
ficompl
mov
inc
xor
xchg
test
hlt
xlat
stos
mov
mov
insb
fstpt
mov
sti
add
bound
shr
xlat
pusha
push
pushf
or
jne
icebp
jnp
add
jge
clc
push
sahf
or
scas
jg
mov
mov
pop
xchg
cmovo
mov
aam
in
and
push
mov
or
fimuls
movmskps
loope
pusha
jge
adc
cmp
fnstsw
mov
adc
inc
cmp
cmc
dec
repz
xorl
inc
cltd
loope
repnz
adc
adc
imul
xchg
xchg
xor
je
mov
xchg
stc
leave
pop
mul
xor
cmc
jnp
jae
iret
int
pop
fbstp
aas
pop
popa
fdivl
iret
dec
ds
mov
xchg
xchg
dec
jle
sub
call
gs
xchg
imul
mov
pop
jo
adc
mov
push
ljmp
ficompl
dec
cli
inc
xchg
rcrb
mov
sub
mov
mov
shl
in
xchg
or
stos
das
in
cmp
fwait
cld
fistpll
jle
nop
add
lea
cmp
mov
fdivrs
addr16
jae,pt
mov
inc
lods
cwtl
or
int
jno
insl
xchg
outsl
dec
rcl
or
inc
iret
mov
mov
insl
push
scas
ljmp
std
js
mov
sbb
fcomip
testl
subl
outsl
push
cli
aaa
lret
add
lock
arpl
mov
xlat
inc
inc
mov
add
cmpsb
fmull
add
inc
loop
mov
idivb
js
jg
and
filds
mov
push
repz
push
sub
mov
test
xchg
cmp
ljmp
sub
cmp
hlt
mov
adc
or
add
adc
dec
dec
std
cmp
mov
sbb
xchg
xchg
push
stos
pop
aas
mulb
mov
shrl
mov
add
mov
lds
mov
adc
mov
outsl
mov
fldpi
adc
and
iret
mov
mov
icebp
mov
jmp
cmpsl
mov
repz
fwait
mov
ljmp
inc
fwait
add
push
or
popa
pop
lock
sbb
jecxz
or
jne
inc
cli
js
jmp
arpl
push
mov
hlt
pusha
imul
pop
daa
ret
ss
mov
dec
mov
cmp
shrl
pop
mov
add
ffreep
inc
lock
idivl
and
adc
pop
jb
repz
fwait
shll
or
mov
push
popa
repz
out
cs
insb
mov
add
std
push
mov
xor
jmp
push
pop
mov
mov
jmp
jmp
scas
outsb
xor
jae
sub
xor
imul
jns
daa
and
cmpsb
mov
andl
sbb
or
inc
popf
hlt
aas
sbb
mov
xchg
xlat
lret
sub
in
cli
and
stos
mov
hlt
xor
add
mov
sbb
movsb
cs
es
pusha
cmp
and
adc
and
sub
mov
std
sbb
mov
scas
mov
add
mov
jecxz
inc
mov
mov
sbb
or
nop
fiadds
gs
mov
out
mov
push
out
cmpl
mov
adc
push
sub
mov
push
cmp
stos
add
clc
shll
mov
shl
push
mov
inc
sub
sti
inc
rep
loopne
or
cmp
add
mov
test
cld
in
idiv
fs
jno
add
push
ljmp
xor
push
stos
dec
mov
pop
mov
dec
inc
jp
imulb
xchg
xor
icebp
jnp
adc
push
je
inc
push
lods
push
mov
ss
out
fsub
fiadds
roll
jmp
aad
push
fcoml
gs
ljmp
pop
push
xchg
in
mov
mov
scas
shr
fisttpl
push
adc
sbb
pusha
mov
pusha
dec
push
mov
lcall
imul
jp
add
jecxz
in
and
pusha
outsl
push
fnstcw
lret
mov
mov
and
repnz
push
push
fcoml
cmp
aaa
xchg
pusha
xor
mov
dec
ds
push
cmc
push
add
mov
cld
mov
pop
fucom
jp
sbb
testl
add
fstps
inc
sbbb
test
ljmp
pop
lret
inc
adc
mov
and
cmp
rorl
movsl
neg
jmp
fnstsw
iret
fwait
icebp
mov
xchg
pop
add
dec
or
testl
add
xchg
test
jae
repz
mov
jmp
cmc
hlt
sbbb
loopw
ret
out
pop
out
mov
or
mov
dec
pop
adc
icebp
in
mov
mov
lret
sarl
mov
jecxz
inc
cmp
push
cmpsb
push
imul
adc
fprem1
jle
jae
aas
mov
xor
push
dec
add
mov
lea
nop
jb
call
sub
pop
inc
dec
pop
inc
mov
mov
lods
stos
and
testb
xchg
inc
cli
push
sahf
jae
or
mov
insb
ret
add
xchg
in
jg
mov
cld
outsl
inc
xor
orl
mov
mov
dec
jmp
dec
in
je
test
mov
jnp
inc
push
sub
incb
dec
adc
mov
mov
mov
repz
jnp
dec
ret
fwait
mov
pop
pop
mov
lods
adc
push
es
push
rorl
pop
in
mov
scas
adc
xchg
mov
shl
add
and
test
mov
pop
arpl
test
repz
pop
cli
ds
xchg
int3
pushf
test
cli
pusha
enter
bnd
ds
pop
sahf
jne
jae
mov
mov
mov
inc
jns
add
cmpxchg
ret
sarb
mov
in
mov
pop
repnz
sti
decl
setae
cmc
addr16
pusha
popf
xchg
xlat
pop
rorl
jmp
jmp
cmp
scas
or
ret
out
les
iret
cld
ss
pusha
aas
lcall
jge
fsubs
mov
divl
jb,pn
fcmovne
dec
mov
hlt
and
negb
ja
jo
cmpsb
xchg
cmp
sbb
xchg
orl
xor
rolb
outsl
stos
ret
mov
fisttps
sbb
lock
stos
fcoms
or
add
icebp
out
push
pop
pop
mov
pop
cmp
fldz
sub
ret
addl
int
scas
xor
fucomi
sub
or
loopne
adc
and
or
cli
in
fxch
add
pop
rolb
sbb
mov
bound
pop
push
mov
mov
pusha
aad
shlb
in
fcoml
popa
loopne
mov
xchg
mov
push
mov
xor
fnstenv
roll
xor
sar
addl
jns
cli
fsqrt
out
jge
add
mov
lcall
cld
orl
fiaddl
mov
fistpl
es
rclb
pop
pop
push
stos
or
movsl
or
xorl
mov
mov
push
cli
fst
push
ret
test
stos
popa
xor
inc
sub
arpl
ret
stc
lods
add
xor
mov
js
addr16
mov
jp
scas
addr16
cld
and
arpl
test
add
xchg
out
lahf
cmp
dec
mov
mov
or
xlat
sbb
pop
roll
mov
pop
iret
add
mov
push
shll
in
sub
jl
inc
cmp
inc
out
sti
neg
call
xor
cmc
and
bound
sarb
flds
push
jecxz
add
lahf
fldt
testl
adc
repnz
inc
add
ficoml
mov
mov
cmp
out
out
or
xchg
xchg
jno
rcll
sub
repnz
pop
mov
mov
xchg
repnz
and
fidivl
jg
pop
xor
sbb
out
adc
cld
fs
or
mov
repz
mov
add
sahf
adc
ljmp
popa
add
jecxz
mov
jle
notl
and
inc
mov
outsl
xchg
push
jge
ss
fisubl
jb
and
popa
and
out
mov
jmp
ds
mov
and
sahf
mov
push
arpl
sub
cmp
sbb
cs
push
sbb
mov
sub
or
push
and
ret
ljmp
lret
aam
popa
xchg
imul
cmp
daa
aam
jbe
push
cmp
jmp
cmp
jne
mov
loopne
add
bound
loopne
sub
xlat
or
jge
aad
aad
inc
mov
push
repz
adc
inc
push
int3
mov
daa
jmp
cmp
inc
or
jge
xchg
pop
jae
add
push
fwait
stos
adc
repnz
outsl
lret
ja
incl
cli
or
jb
orl
xor
roll
jmp
clc
hlt
xor
mov
pusha
andl
addr16
push
pop
icebp
pop
scas
mov
pop
fstl
push
fmuls
cmp
inc
out
sbb
jnp
int
pop
inc
xor
rorl
sti
or
mov
in
adc
mov
push
iret
adcb
fsubs
addr16
mov
or
es
lock
pop
cli
popl
cli
testl
cmc
adc
fucompp
inc
cmc
cmc
ljmp
xadd
std
ret
lret
mov
fstpt
repz
bswap
arpl
icebp
ret
mov
lds
ret
lret
psubd
out
push
mov
mov
xchg
jg
fwait
mov
ljmp
inc
shll
fiadds
inc
and
sub
jp
cmp
clc
js
ja
jmp
clc
pop
add
repz
inc
cs
daa
jnp
fldcw
lret
xor
jae
pusha
decb
das
movsb
push
pop
sub
cs
outsl
inc
mov
mov
or
inc
mov
ljmp
std
ret
fistl
subl
add
fwait
inc
sbb
outsb
repz
and
xor
xchg
jg
mov
adc
in
ret
sub
jmp
sti
inc
jne
pop
push
mov
or
ljmp
xor
mov
and
inc
mov
cmpl
inc
sahf
out
add
mov
scas
adc
mov
inc
jmp
adc
sub
call
or
fmull
pusha
sbb
fnstsw
jg
and
popa
mov
fdivl
and
pop
add
or
sub
sub
dec
inc
lret
jae
jge
loop
mov
and
push
adc
into
loope
and
fistpl
fimuls
jns
nop
fs
pop
sbb
inc
push
movsb
fucompp
and
cwtl
pusha
cmpsl
sub
jnp
loopne
lea
int
inc
cltd
cld
pop
mov
lret
push
jg
sub
in
cmp
dec
inc
daa
and
pop
add
add
push
add
sbb
push
or
daa
roll
and
inc
jmp
push
pop
ljmp
enter
inc
int3
sbb
sbb
idivb
fildl
fstps
xor
int3
andl
dec
mov
fcomip
loop
cmp
aad
add
movsl
outsb
mov
mov
mov
arpl
testl
mov
mov
sti
sub
cld
ljmp
and
mov
push
sub
fcomip
outsl
mov
std
dec
iret
add
inc
jnp
jne
mov
mov
cmpl
mov
sub
repz
sbbb
call
cmp
std
mov
add
mov
pop
sbb
mov
je
jmp
fcoms
sub
dec
repz
pop
or
daa
subl
loopne
div
addr16
cmp
fimull
jae
add
mov
jmp
cmp
fldt
adc
inc
push
arpl
xor
out
adc
std
adc
icebp
cli
xchg
jnp
movsl
cmpsb
fbstp
mov
repnz
ret
push
pop
mov
adcl
clc
mov
out
push
fucomip
xchg
adc
fistpll
rorl
add
movsb
sub
pop
push
xor
std
aaa
mov
lahf
pop
mov
ja
sbb
pop
into
repnz
jae
dec
cli
mov
std
aad
fisttps
fxch
mov
cld
ret
mov
ficoml
imul
cmp
xor
in
in
jbe
add
and
out
sub
push
imul
xlat
jmp
lods
push
fmull
push
arpl
inc
mov
jnp
popa
nop
or
jnp
pusha
sbb
or
mov
mov
cmpsl
cmpl
inc
mov
or
cmc
sbb
call
jge
push
xor
incb
and
aaa
and
icebp
inc
fcompl
and
mov
pusha
outsl
and
and
jb
pop
ret
push
fwait
stos
or
xchg
inc
mov
lock
mov
icebp
inc
xor
loope
in
ss
icebp
and
pop
lock
aad
sbb
mov
std
cld
std
aam
popa
in
cli
adc
jns
mov
stos
dec
push
add
fincstp
popa
inc
xchg
movsl
stc
or
mov
stc
push
cmp
enter
add
int
jmp
pop
lcall
and
insb
icebp
pusha
ljmp
cld
jle
iret
fidivs
cmc
adc
std
add
xor
cs
in
cmp
out
sub
loop
pop
data16
sub
lret
lahf
add
or
shlb
cmpsl
int
pop
xchg
rcr
lds
outsl
popa
rcr
or
insb
jmp
fcmove
stc
and
or
cmpsl
jecxz
sub
cmp
push
adc
adc
pusha
xchg
dec
psrlq
xchg
repz
test
cli
int3
cmp
iret
mov
jne
mov
pop
or
fsubp
pop
insl
jne
cmp
push
ret
jl
mov
sahf
cwtl
fwait
idivl
cmc
das
add
mov
add
cmp
and
lods
push
popa
lret
mov
jmp
rcll
push
jmp
xchg
mov
or
pop
jno
pop
and
icebp
sarb
iret
jnp
out
pop
push
mov
and
test
sbb
out
arpl
loop
inc
xchg
and
imul
add
push
and
lcall
adc
iret
idiv
fchs
fwait
loope
pop
add
xchg
dec
ljmp
mov
test
cmp
jecxz
jge
pusha
fsubl
cmc
jnp
and
mov
out
cmp
ja
sti
jno
push
mov
add
nop
mov
cmp
jno
lods
sub
ficompl
and
call
jle
jecxz
sbb
repz
and
incb
cmp
or
push
pusha
dec
cmp
jecxz
jmp
jb
fdiv
pushl
sub
rcl
or
xchg
ret
add
call
divl
or
mov
out
or
out
lret
add
sbb
pusha
loope
mov
adc
mov
mov
mov
fisubs
cmp
mov
loope
add
push
imul
mov
aaa
lock
cmp
lds
push
mov
repnz
lock
mov
outsb
aad
cmp
fwait
cs
bound
sub
fcomi
mov
mov
and
push
push
jle
mov
jbe
push
iret
inc
negb
and
jns
jno
jge
arpl
inc
sahf
xchg
push
imul
push
lods
mov
sbb
pusha
mov
fldl
and
dec
cmp
dec
mov
pop
test
xchg
cmpsb
aaa
dec
and
pusha
fstpt
dec
sarl
pop
sbb
mov
dec
test
push
dec
shl
cs
mov
rclb
pop
pop
insb
mov
or
ret
add
jno
int3
ret
aas
mov
lret
cmc
orl
bound
fwait
inc
dec
xlat
out
mov
xor
outsb
cmp
push
call
mov
push
mov
cmpsl
loopne
jne
cmp
arpl
sarl
push
xchg
xchg
cld
pop
aas
pop
pop
dec
addb
mov
xchg
xchg
das
xorl
jns
mov
lods
dec
cmp
aad
pusha
mov
iret
mov
sbb
inc
leave
out
xchg
or
jmp
test
xor
mov
mov
add
mov
pop
and
jno
sub
ret
shl
popf
movsb
and
cwtl
cmp
repnz
cld
adc
inc
dec
mov
fisttpll
cmp
repz
cs
iret
icebp
cmpsb
push
jmp
adc
ljmp
cmp
cmpsl
fsubrl
xor
push
sub
cmpsb
mov
rcrl
sbb
xor
jae
pop
pop
lahf
iret
iret
add
xor
push
dec
daa
mov
les
inc
dec
sbb
ret
cs
fnstcw
loope
stos
sub
and
movsb
in
xchg
mov
jle,pn
xchg
dec
cli
shlb
and
outsl
xchg
frstor
fucom
adc
cmp
pusha
insl
xchg
mov
sub
arpl
mov
inc
ficoms
push
xchg
scas
imul
test
stos
dec
mov
stos
faddl
test
fmul
ret
pop
sbb
mov
sub
pusha
fildll
mov
dec
mov
xor
inc
jmp
mov
in
popf
sub
bnd
jg
jge
jmp
out
int
jp
into
or
fdivr
sti
aad
rcrb
outsb
fisttpll
sub
icebp
loopne
into
shl
in
xor
mov
mov
call
repnz
push
out
and
mov
adc
adc
or
lret
push
cwtl
inc
fucomi
dec
xchg
dec
mov
in
dec
fmulp
ja
adc
pop
mov
les
loop
fwait
insl
and
push
ret
cmpsb
dec
repz
mov
rcrl
scas
xorb
sub
repz
lock
scas
and
mov
or
jbe
mov
lock
jae
sahf
cmc
inc
inc
and
sub
icebp
mov
inc
sahf
dec
add
sub
out
or
push
push
outsb
or
adc
cmp
jecxz
std
mov
mov
inc
es
sahf
rcrl
stos
sti
fcmovb
pop
fadd
repnz
adc
pop
loop
cmpsb
mov
or
stc
and
clc
fildl
sbb
pop
outsb
jnp
mov
and
std
cld
adc
hlt
push
into
jnp
mov
push
cs
xor
dec
mov
mov
push
scas
jae
mov
out
cmpsl
and
js,pt
ret
cltd
sub
iret
jle
push
popa
iret
bound
pop
lret
repnz
jno
out
pop
push
mov
mov
insl
mov
fstl
dec
scas
ss
jae
xor
in
mov
jae
movb
in
inc
add
fisttpl
pushf
cmp
mov
push
iret
mov
pop
mov
or
iret
cld
sub
jle
xor
mov
fwait
inc
arpl
mov
cmp
add
or
or
xor
roll
pusha
ljmp
leave
dec
adc
pop
popa
pop
lock
test
jmp
hlt
pushf
dec
fidivrs
movsl
xchg
ds
cs
jnp
aas
cltd
out
hlt
fcomi
es
mov
xorl
xchg
dec
ficomps
les
icebp
push
lret
pushf
dec
dec
fstl
test
sti
lahf
dec
jae
jmp
insb
xchg
dec
iret
mov
mov
insl
pop
jg
xor
movsb
ljmp
in
idivl
inc
cmp
sub
pop
cwtl
cmp
jg
lods
addr16
xor
mov
and
inc
notb
mov
mov
xchg
add
fdivs
sti
push
aaa
and
ret
cmp
sub
iret
add
xchg
jmp
imul
idivl
xlat
pop
xor
ret
xor
jno
stos
inc
add
add
out
cs
cmc
movsl
mov
sti
mov
pop
push
repz
cmpsb
mov
fisttpll
sub
loope
dec
test
lret
sarb
xchg
push
in
movsb
jg
add
sbb
mull
mov
push
fbld
adc
jnp
pop
push
insb
fmull
in
xor
mov
jo
pop
fcomi
roll
cld
mov
push
inc
test
scas
push
sub
lods
jg
sbb
pusha
ds
or
dec
jmp
adc
add
jecxz
icebp
into
out
add
nop
out
repz
mov
and
leave
inc
dec
jmp
scas
insb
sbbl
test
loop
iret
fadds
push
pop
stc
fwait
gs
inc
arpl
pop
jns
andl
fbld
clc
sbb
fsubp
push
push
pop
js
or
xchg
dec
ds
mov
negl
jnp
stos
nop
jl
sbb
cld
out
sub
sbb
and
jae
push
rolb
pushf
push
call
movsl
mov
pushf
repz
inc
cmp
adc
and
pxor
rorb
fcmovne
fldl
dec
jmp
push
add
jno
xlat
cld
jl
or
xor
imul
mov
shl
repnz
mov
and
je
jne
ja
adc
arpl
fucomip
shll
jecxz
outsl
pusha
pop
iret
inc
fidivl
cmp
jnp
lock
mov
xor
push
out
xchg
sahf
pop
ret
jg,pn
ret
mov
mov
scas
aad
es
out
xchg
clc
cltd
and
cmp
sarl
push
mov
push
jbe
ja
add
repz
mov
jae
test
add
stos
aaa
cmp
in
ret
jnp
and
add
out
mov
xor
cs
fisubs
es
lret
in
cmp
pushf
fs
push
xchg
sbb
inc
ljmp
ja
jb
pop
lcall
push
xchg
icebp
clc
shrl
aas
stos
cmpl
mov
or
xchg
rcrl
clc
add
push
outsb
xchg
adc
mov
pop
mov
stos
divb
stos
cmc
or
push
cwtl
ret
out
push
mov
ret
aas
movsb
mov
dec
outsb
mov
ret
xchg
mov
in
jns
cmpb
fidivs
xchg
mov
das
addb
into
pop
pop
sub
cmpsl
mov
ja
pop
sti
test
fadds
cli
fcmovbe
aas
and
inc
enter
cs
hlt
call
dec
aad
ljmp
pusha
jmp
cmpsb
fildll
cmp
lods
test
in
jg
inc
pop
pusha
shl
mov
rolb
or
testl
or
push
je
inc
adcl
fmull
in
imul
movsl
mov
aas
push
inc
xor
lea
add
cmc
shlb
bound
in
sbb
shlb
fsubrl
stc
or
scas
dec
push
xchg
push
dec
mov
flds
cmp
iret
cmpsb
jo
sub
add
filds
repz
mov
cmpsl
sti
push
icebp
aam
mov
arpl
shll
fsubl
je
inc
ret
mov
inc
and
fcomip
xlat
fadds
dec
pop
xchg
das
cmc
imul
cmpsl
mov
adc
cld
pop
divl
les
or
xlat
cmc
icebp
movsb
arpl
pop
add
ret
popa
repz
xlat
add
xor
and
adc
mov
subl
push
addl
xor
or
xchg
jecxz
rcll
cld
cs
cmc
mov
mov
les
mov
fldl
mov
icebp
div
adc
sti
rorb
jnp
jecxz
je
fwait
fs
repz
xlat
xchg
iret
rorb
stos
orb
or
pop
mov
enter
ret
cmp
mov
push
loop
mov
push
daa
addr16
ret
inc
push
xchg
repnz
add
cmpsb
mov
pop
js
push
push
push
inc
lret
jbe
pop
sub
test
mov
repnz
repz
sti
incb
mov
sbb
push
in
cmp
cmc
mov
pop
jmp
xchg
loope
add
call
push
cld
ror
insb
adc
int3
shl
cli
repz
std
in
jg
insl
push
mov
fnstcw
ret
mov
sarb
pop
push
hlt
and
ja
shl
gs
out
mov
je
xchg
je
mov
inc
rolb
cmpsl
xor
mov
push
repz
es
fcoms
mov
stos
shrb
inc
dec
roll
out
pusha
jle
fwait
adc
inc
fxam
or
xor
adc
mov
jnp
and
ja
inc
loope
std
sbb
pusha
pop
mov
pop
mov
ljmp
out
les
dec
xorl
push
mov
stos
js
dec
pop
arpl
xlat
mov
mov
loope
xchg
adc
lahf
stc
cwtl
or
jne
sti
mov
shl
lock
xor
aam
push
xor
mov
jl
inc
ds
cwtl
stos
sbb
xchg
fistpl
repz
icebp
or
enter
fbld
push
rcll
mov
mulb
inc
loop
mov
insb
std
lret
jmp
addb
cld
icebp
cmpb
jnp
std
bsf
xchg
and
sbb
mov
dec
adc
ret
jns
push
pushf
scas
orb
cmp
sub
fnstcw
xlat
pop
and
mov
mov
jmp
xchg
lods
mov
roll
icebp
jae
into
jmp
pop
test
mov
sub
popf
push
arpl
les
andl
jmp
call
lcall
jl
jae
pop
incb
repz
push
incl
testb
loopne
or
cmpsl
pusha
add
scas
data16
in
xor
mov
mov
int
lret
and
lret
mov
repz
jae
jl
push
xchg
push
add
stos
cltd
xor
in
imul
fsubrl
or
mov
bound
lret
stc
shr
pop
jbe
inc
dec
add
xlat
mov
jl
dec
std
push
shl
inc
fbstp
stos
fdivs
jb
jbe
lods
and
push
pop
fucom
push
shlb
nop
cmpsl
shlb
push
mov
sahf
xchg
ret
out
out
sahf
pusha
jo
repz
dec
imul
lock
add
shrl
xor
aam
outsb
cs
cmpsb
cmpsb
aaa
imul
mov
jecxz
sub
outsb
sarl
mov
fwait
jecxz
push
mov
inc
mov
shll
mov
or
cmp
mov
cltd
aad
ljmp
outsl
orl
std
dec
or
out
xchg
and
push
imul
pop
xchg
js
xlat
jnp
inc
push
loopne
sub
xlat
or
sub
pushf
dec
and
loopne
pop
fnstenv
xchg
dec
orl
mov
xchg
pop
or
push
mov
xor
xchg
sahf
xchg
ficoms
mov
xchg
insl
cmp
mov
mov
imul
inc
lock
mov
push
push
scas
jmp
mov
out
mov
idivl
or
movsl
cld
daa
lods
sbb
adc
scas
stc
out
or
cmp
pop
jmp
out
pusha
mov
testb
push
sbb
mov
or
cli
jmp
call
jmp
dec
or
xchg
or
subb
rolb
scas
mov
fstpt
and
add
in
lahf
inc
lods
std
lret
fucomp
cmp
sub
test
insb
stos
xchg
loopne
scas
in
fcmovnbe
in
mov
jae
dec
mov
hlt
scas
jnp
or
cmp
pop
test
or
repz
bound
sub
out
xchg
xor
iret
mov
dec
jg
and
loopne
js
jmp
ret
mov
loopne
neg
dec
sub
sub
mov
adc
xor
rorl
add
push
or
rcll
stc
xchg
notb
insl
lock
mov
out
fdecstp
lret
stos
sub
or
aas
xchg
pop
jae
push
add
mov
cmp
and
adc
xor
mov
mov
paddq
pop
std
mov
pushf
jno
xlat
arpl
dec
sbb
das
daa
pop
cmp
aad
or
xor
rep
addl
cmc
push
pop
das
fbld
pop
out
out
xor
mov
add
xchg
add
inc
add
mov
push
jg
xor
ret
pushf
adc
jae
dec
dec
pop
imul
sub
xor
fbstp
mov
mov
cmpsl
mov
outsb
aaa
jecxz
out
xchg
jne
mov
cmpsl
and
das
push
icebp
lods
mov
cmp
in
xor
outsl
mov
pop
push
jecxz
ljmp
cmp
loop
add
pop
and
and
push
adc
pop
adc
in
mov
push
hlt
push
jmp
and
mov
icebp
cmpsl
sbb
mov
enter
andl
pop
fdivl
pop
jge
repz
mov
loope
pusha
mov
ljmp
out
mov
imul
mov
out
lret
jge
sarl
inc
or
xchg
bound
in
ja
jge
roll
jno
fsts
stos
icebp
push
mov
push
aam
jno
fcomp
xchg
inc
sub
shlb
pop
arpl
mov
push
mov
mov
fcom
mov
popf
jno
xchg
jg
lods
xchg
ljmp
pop
iret
cli
rcll
mov
mov
shlb
rclb
push
int3
jno
sarb
divl
stos
ljmp
jg
or
jg
loop
out
inc
jp
shll
mov
int3
mov
push
enter
notb
xchg
hlt
cwtl
stos
adc
cli
and
jno
addr16
and
mov
mov
mov
fmul
mov
popf
jno
xchg
jg
lods
adc
stos
mov
jg
bound
mov
jno
pop
and
shll
mov
mov
stos
test
pop
ljmp
arpl
cli
add
add
test
xchg
and
aaa
pusha
and
jp
in
push
and
push
mov
jns
cmp
rorl
repz
rcl
cmp
loopne
mov
cmp
jg
mov
nop
sarb
adc
inc
loope
test
fwait
lds
repnz
jg
or
or
adc
or
sub
adc
pop
out
loopne
sub
or
dec
or
jb
sbb
addr16
mov
fsubl
push
add
scas
das
mov
sbb
out
in
xchg
cmc
xor
pusha
fcmovbe
add
add
xchg
xchg
or
mov
xor
stos
out
add
xchg
ret
dec
pushf
mov
mov
fwait
cli
aas
push
adc
loope
repnz
jb
mov
andb
mov
mov
loope
mov
fistpl
cmc
gs
inc
repz
sbb
hlt
rcl
data16
ret
loope
out
sbb
add
mov
clc
loop
jecxz,pn
sub
arpl
xor
fcoml
dec
cmc
fwait
add
pop
mov
adc
js
std
scas
outsl
cmp
mov
jl
jno
shll
push
cs
push
mov
sarl
nop
sti
cmc
pop
ljmp
jo
ud1
sahf
xchg
xor
mov
and
arpl
xor
add
xorl
stos
push
xor
mov
add
sub
xchg
adc
xor
xlat
vmovaps
xor
std
jb
repz
xchg
xchg
in
test
fcoml
fwait
mov
xor
jmp
repnz
xor
pusha
mov
repz
lcall
repz
xor
call
fdivr
leave
or
sub
lret
xor
adc
jbe
xlat
mov
lcall
adcb
inc
in
adc
lock
fstpl
mov
mov
push
jg
push
jb
push
ja
push
movsl
sbb
jg
mov
mov
lahf
std
roll
test
pushf
xor
jmp
and
sub
jo
mov
test
mov
lock
divb
mov
adc
push
subl
or
cltd
call
and
mov
sbb
mov
push
mov
xor
xor
lret
mov
inc
sub
jl
cmp
jp
push
popa
push
es
and
or
push
es
in
sub
out
hlt
mov
stos
push
inc
push
lcall
stos
movsl
aad
outsl
out
pop
mov
int
ret
testl
sarb
cmc
mov
inc
pop
xor
or
repnz
rolb
scas
cli
test
lock
xor
lahf
pop
outsl
rclb
cmc
cmpsb
and
and
inc
sub
jmp
or
and
adc
push
test
inc
and
cld
and
add
sbb
lcall
mov
movl
mov
mov
sahf
jne
call
lea
or
add
mov
repnz
pop
test
icebp
insb
mov
xor
cs
fmuls
sub
aad
repnz
clc
pop
stos
mov
fildll
xchg
adcb
cmc
pop
xchg
mov
int
frstor
movsl
arpl
cmpsl
xlat
and
ljmp
cld
sbb
pop
sub
adc
jno
inc
cmp
push
fisubrs
sbb
sarl
adc
pop
sbb
int
sub
mov
sbb
arpl
inc
shrb
cmc
ss
repz
dec
adc
call
sub
dec
aas
or
daa
jae
dec
jmp
pusha
and
and
xchg
mov
mov
mov
test
aas
shll
test
lea
or
repnz
repnz
lret
adc
loop
or
ss
iret
sti
and
repz
paddd
mov
push
out
stc
adc
and
jbe
hlt
ret
rclb
movsl
add
lret
xchg
hlt
fwait
jae
mov
ret
incb
pop
cli
dec
iret
sub
push
ret
cmp
movsl
cs
dec
jns
mov
out
test
hlt
repz
sbb
aad
sahf
in
push
pop
scas
imul
in
pop
sub
pop
aad
pop
xchg
mov
cmpsb
lea
mov
ja
fwait
lock
and
add
iret
mov
or
jecxz
or
imull
hlt
roll
lahf
fnstcw
loope
cmpsl
out
in
dec
push
out
or
icebp
stos
bound
dec
push
data16
xor
sub
or
ror
movsb
in
pop
xor
pop
push
out
out
fcmovne
push
mov
sahf
pop
add
mov
xor
or
mov
and
xchg
push
xchg
or
inc
push
push
ret
pop
inc
mov
stos
jne
pop
pusha
divl
and
or
ret
fbstp
dec
andb
cmpsb
in
ficomps
pop
or
jae
dec
loopne
stos
sub
in
xor
jecxz
jae
jbe
fucomi
xlat
mov
xor
add
scas
add
adc
xor
mov
pop
mov
dec
adc
mov
add
jp
cs
mov
mov
addl
adc
xchg
inc
or
mov
pusha
and
push
mov
dec
inc
pop
push
js
out
sbb
dec
inc
loope
push
adc
leave
out
jb
mov
mov
aad
inc
sbb
repz
imul
jo
cmp
sbb
lds
out
adc
test
and
sub
addr16
ret
xor
jb
cwtl
sub
int
and
shl
mov
sub
aaa
daa
jp
stos
ud0
pop
fwait
mov
and
jnp
or
data16
xor
stc
ret
or
clc
push
push
daa
xchg
cmp
fs
imul
push
insl
push
loope
mov
pop
xor
add
out
ds
fiaddl
hlt
int
loope
sbb
flds
mov
outsl
pop
mov
icebp
fisubrl
mov
bound
and
sub
movsl
ss
inc
in
or
icebp
jg
in
ss
mov
jle
push
mov
nop
lret
sahf
dec
mov
out
outsb
jmp
add
adc
cmp
jecxz
loop
stos
sbb
ret
mov
call
pop
std
call
sub
inc
push
gs
adcl
in
int
pop
decb
repz
or
or
sarl
pop
sti
jle
lods
out
fisubl
popa
lcall
xor
push
inc
js
ficoms
sub
xchg
inc
test
outsb
pusha
mov
xchg
adc
pop
stc
inc
xor
out
xor
popf
xchg
mov
xor
mov
repnz
insl
stc
shll
push
call
gs
rorl
fwait
mov
insl
sbb
iret
scas
jno
daa
xor
and
cmpsb
inc
inc
inc
mov
xchg
inc
subps
push
inc
int
clc
mov
inc
mov
mov
cmpsb
push
jl
xchg
ret
stc
pusha
stc
add
sbb
sub
lcall
jae
arpl
fucomp
dec
ss
mov
pop
fidivs
dec
out
xchg
outsl
xor
pop
cs
loop
inc
mov
xchg
leave
mov
dec
nop
xor
dec
mov
insb
add
stos
jo
inc
roll
jge
mov
dec
mov
xlat
movb
mov
outsb
test
add
cli
add
fnstcw
mulb
das
out
orl
loop
dec
in
sbb
pop
test
stc
lods
adc
xor
push
xor
xor
icebp
push
jo
icebp
pop
test
outsl
std
pop
ret
pop
pop
cmc
mov
pop
ja
xchg
mov
mov
clc
inc
addr16
int3
shl
popa
xor
pusha
int3
jge
adc
dec
aad
push
mov
mov
mov
popf
pop
enter
loop
xor
es
and
push
out
pop
scas
mov
adc
ret
mov
inc
xlat
repnz
push
mov
into
mov
addr16
test
push
adc
mov
lahf
out
mov
sbb
mov
jnp
xor
inc
push
mov
ss
push
inc
jo
cli
inc
int3
mov
stos
push
push
in
cmp
or
in
or
aaa
aad
ja
xor
aam
jecxz
push
movsl
xor
push
stos
fldt
sbb
ljmp
xor
rcrb
push
sbb
pop
adcb
mov
arpl
sub
sbb
pop
pop
in
inc
sub
jecxz
ret
shll
in
mov
xchg
popf
mov
rcl
mov
xchg
jb
test
addr16
mov
pop
lock
hlt
movsb
dec
jnp
xchg
bound
mov
je
mov
and
shll
cli
push
jae
and
jb
jle
repz
dec
orl
cmp
cmp
xchg
cld
clc
xchg
sbb
cmpsb
enter
scas
pop
sarb
incb
out
ljmp
pop
mov
ret
loope
out
pop
sbb
shr
sahf
push
jb
xchg
test
cmpsb
pushf
inc
cmpsl
jp
clc
pop
inc
adcb
xor
ja
aas
sbbb
xlat
addr16
sarb
jb
out
add
jge
mov
arpl
stos
push
fisubrs
or
das
testl
int
mov
repz
adc
hlt
mov
scas
sub
push
mov
push
dec
add
or
mov
sti
lea
add
and
fildl
stc
stc
sub
lahf
std
in
push
push
inc
push
cmp
and
xor
dec
mov
shlb
sbb
std
and
mov
dec
cld
sbb
mov
repnz
add
mov
shr
or
ds
loopne
fucomi
jl
adc
pusha
lahf
sub
int3
sti
mov
ja
pop
pop
and
xchg
mov
ret
dec
lods
aam
jl
mov
pop
xchg
loopne
lahf
push
mov
mov
fs
add
cltd
rcll
insl
mov
fsincos
cli
aad
jb
jbe
and
iret
popa
push
andl
repnz
shrb
andl
pop
outsl
ljmp
bound
mov
in
imul
jecxz
stc
jae
jnp
cli
mov
mov
xlat
lods
mov
in
rorl
pop
pop
push
mov
or
shll
pop
jge
mov
repnz
pop
popa
call
mov
mov
sbbb
pop
cmpl
mov
sbb
shlb
pusha
mov
and
jl
addl
inc
add
test
popa
jae
int
xchg
add
js
sbb
and
lock
pop
push
mov
pop
cmpl
cmp
mov
fistpll
repnz
cmp
gs
xchg
and
cmp
sub
iret
repz
xchg
addr16
xchg
nop
imulb
out
test
mov
push
aaa
mul
sub
dec
push
xlat
int
loopne
jbe
out
or
test
ret
subb
mov
mov
xor
pop
icebp
addr16
add
scas
xchg
sar
cs
push
jmp
sarb
ret
sbb
rol
add
ds
call
pop
fldl
test
pop
lret
fwait
and
repz
cmp
add
mov
bound
icebp
xchg
clc
insb
push
cmpsl
inc
outsl
rcll
mov
inc
fidivl
or
push
lock
cmp
adc
jl
jg
push
jmp
xor
mov
inc
pop
push
pop
and
out
mov
mov
xlat
push
mov
mov
iret
addr16
fildl
dec
and
inc
std
and
ret
shl
addr16
mov
sub
mov
and
imul
aas
mov
inc
pop
mov
lahf
push
stos
out
aad
push
push
loopne
ret
repnz
or
pop
outsl
mov
push
xchg
cmp
ficoml
jo
jmp
aad
cmp
repnz
fsubrl
insb
pop
shl
push
loope
mov
repnz
xor
mov
pop
cmp
push
ret
ret
repnz
lds
xlat
ret
rclb
lods
mov
shl
mov
pop
pop
mov
jl
cmp
in
mov
adc
ljmp
bound
out
adc
inc
xor
jl
xchg
iret
push
loope
mov
addl
inc
jecxz
loope
and
out
push
ret
iret
lahf
repz
shlb
adc
loope
sub
call
cld
inc
adc
pop
addr16
lcall
lcall
lahf
aaa
mov
test
hlt
mov
int
test
xor
stos
adc
sub
inc
adc
push
add
cld
sbb
pusha
pop
mov
shl
cs
xorl
adc
loop
cmp
repz
jg
and
repnz
arpl
mov
jo
jg
xchg
xchg
and
jg
out
jmp
sahf
repz
or
mov
hlt
aam
mov
dec
scas
shrl
jecxz
aas
stos
mov
pop
je
ret
mov
xchg
push
adc
das
adc
sub
pop
mov
sbb
aad
rcll
fstpl
xchg
pop
test
gs
xor
enter
or
incl
cmc
adc
xchg
or
aam
mov
and
jg
sbbl
mov
sti
jae
andb
lods
xor
cltd
aas
sbb
stos
movsl
xor
nop
mov
lret
addb
mov
test
xor
cmp
mov
mov
mov
xchg
xchg
cmc
rcl
pop
mov
jae
flds
into
or
xchg
lahf
mov
push
cmp
lret
out
cmpb
fptan
dec
pop
adc
loop
data16
imul
mov
arpl
ret
jo
lcall
call
or
jns
xor
pusha
mov
in
dec
cld
jl
fwait
mul
shrl
incl
addb
mov
add
jno
fnstenv
mov
jecxz
fistps
xor
cwtl
push
jg
or
not
mov
mov
push
pusha
popa
out
fcomip
xor
stos
mov
pop
adc
mov
mov
lcall
aad
scas
xor
repz
mov
in
pop
push
inc
inc
sarb
loop
stc
add
fdivr
lock
iret
inc
mov
out
ja
sub
out
dec
jecxz
int
aaa
mov
out
fisttpll
mov
sub
and
dec
jb
aas
int3
cmpsb
fistl
stc
dec
outsl
add
sahf
inc
ja
cld
sbb
fimuls
orl
xchg
cli
xlat
fiaddl
fisttps
orb
xchg
sub
mov
push
or
xlat
jecxz
lahf
inc
ja
xchg
ja
lea
int
loope
push
mov
mov
aaa
cmp
cs
aad
sbb
out
loope
push
ss
push
pop
scas
push
ret
imul
iret
xchg
repnz
dec
loope
pusha
mov
mov
xor
xchg
lods
idiv
pop
and
dec
and
push
fisttpll
insb
dec
sbb
loopne
adc
xor
fnsave
dec
ja
inc
xorl
mov
xlat
jbe
or
icebp
pop
and
pop
js
hlt
xchg
pop
xlat
movsb
adc
pop
pop
cltd
sti
mov
push
fisubs
mov
data16
pop
adc
pop
inc
jnp
idivl
mov
fistl
xchg
mov
call
jge
or
mov
aad
inc
jnp
add
add
in
sahf
push
call
les
and
add
push
ja
loope
repnz
fisttps
and
sahf
into
push
jg
push
and
mov
push
test
jmp
popf
jmp
cmp
loop
fstpl
inc
xor
mov
pop
xlat
adc
add
ljmp
shll
mov
add
jmp
loope
push
mov
es
outsb
outsl
call
mov
push
fists
xlat
jns
adc
addl
iret
int
adcb
push
mov
fxch
adc
dec
jp
jmp
test
adc
fcmovnu
cld
call
pop
xor
push
mov
cmp
movsl
subl
push
orl
fwait
pop
popf
dec
adc
mov
cli
out
inc
inc
outsl
fucom
int
cli
repz
test
dec
inc
mov
inc
mov
push
das
lahf
movsb
mov
mov
xor
outsl
fwait
xchg
mov
xlat
stos
lock
into
ljmp
stos
pusha
ljmp
ret
xor
pusha
cmp
out
cmpsb
pusha
shll
js
in
fwait
roll
sub
pusha
mov
inc
push
lret
stc
call
out
jbe
icebp
cmc
jnp
fisubl
dec
mov
ds
imul
xor
hlt
jle
pop
sub
xchg
lcall
and
jecxz
jmp
add
mov
cld
xchg
fs
push
shll
ret
repnz
rol
ficomps
xor
mov
cld
mov
and
sbb
adc
out
loop
xor
loope
push
sub
es
in
cmp
idivb
mov
jmp
repz
pusha
ja
scas
out
repnz
in
sbb
aad
and
out
and
jmp
xchg
push
sarl
jb
bnd
lret
fldl2e
negb
stc
shl
add
loope
and
repz
and
sbb
cltd
sti
pop
and
jg
jle
hlt
ss
inc
pop
lea
int
cmpsl
push
lret
pop
cmc
push
jle
cmp
inc
adc
sahf
pop
mov
push
xchg
mov
and
ret
adc
fwait
leave
xchg
and
mov
pushf
mov
sahf
aaa
xchg
sahf
cmp
pop
jnp
sub
inc
sahf
fnstsw
inc
inc
loop
xorl
cmp
sar
xchg
cmp
sarl
jae
mov
shll
pushf
gs
fucomip
mov
ret
push
das
enter
jno
leave
lcall
sar
add
daa
fnstcw
inc
adc
xchg
or
xchg
dec
add
ljmp
mov
xchg
cld
shl
sti
add
mov
sarb
repz
jl
les
icebp
push
les
jg
lock
and
dec
dec
dec
mov
jp
stos
repnz
mov
adc
mov
sbb
or
adc
int
mov
cmc
test
sub
xchg
aaa
outsb
insl
sub
mov
cmc
or
js
dec
aad
and
cs
fidivrs
testl
push
enter
mov
push
loopne
ds
sub
sbb
es
lds
push
cmp
daa
push
pop
inc
sub
pop
lock
mov
jp
das
dec
lds
pop
mov
mov
loop
jp
lret
nop
jae
not
fbld
lea
pusha
filds
scas
aad
div
or
dec
lahf
push
xchg
xchg
addl
inc
xchg
mov
cmp
pop
rolb
xor
cwtl
iret
xchg
inc
js
icebp
pop
lods
pop
jl
pop
push
xchg
cltd
xor
ret
lcall
aas
and
mov
jbe
shl
xchg
mov
or
mov
jmp
fists
fistpll
in
pop
lcall
or
lret
pop
aam
jge
sbb
xchg
clc
fidivl
push
loop
mov
xchg
or
adc
loope
lds
int3
inc
adcb
hlt
pop
and
xchg
add
movsb
mov
std
lret
out
imul
jno
outsl
push
nop
sub
cmpsl
xor
out
and
std
or
ja
cmc
addr16
icebp
push
xor
sbb
nop
iret
aas
sbb
lcall
das
inc
add
and
cld
mov
adcl
test
cmpsl
pop
mov
mov
iret
ljmp
outsb
cmpsb
push
xchg
addr16
dec
ds
xchg
jno
popa
bound
inc
pop
dec
sbb
cli
cs
js
mov
mov
add
lods
subb
ret
iret
outsl
mov
imul
jb
in
mov
fs
add
std
push
addl
dec
push
cmp
ffreep
cmpsb
fnsave
std
xchg
push
mov
int
sbbl
jnp
jg
mov
jecxz
out
mov
cmp
push
fisttpl
ret
lds
cmpl
call
ret
sub
in
test
xor
push
dec
popa
imul
cmpsb
mov
jno
std
mov
add
mov
ficompl
loopne
pop
js
cld
sbb
and
mov
lea
push
loop
mov
loopne
and
imull
mov
jae
and
cmp
out
jae
icebp
push
jmp
lods
loopne
jno
pop
cmp
sbbb
cmpsb
adc
mov
jecxz
pop
cmp
adc
aaa
adc
clc
pop
sbb
inc
sti
ss
and
and
add
fwait
pop
xchg
sub
sbb
dec
fisttps
in
cli
arpl
loopne
jmp
std
lret
or
imul
in
inc
cli
xchg
dec
out
pop
adc
dec
jnp
pop
sbb
std
and
push
and
mov
mov
pop
notb
mov
arpl
xor
mov
aam
rcl
cmpsb
lds
pop
xchg
xchg
shlb
mov
mov
addb
sti
jb
or
push
jecxz
rcrb
stc
inc
pop
mov
movsb
jns
shlb
xchg
sub
lret
mov
stos
pusha
jecxz
or
scas
adc
in
mov
xor
add
xor
outsb
ret
sbb
mov
mov
mov
pop
loop
sti
adc
test
ud1
jp
shll
loopne
ss
shlb
out
pop
push
jle
xchg
xchg
add
jmp
lret
cld
add
insb
dec
adc
pop
xor
jmp
dec
xor
pop
subl
lahf
insl
int
jns
sub
mov
mov
jnp
pop
ret
std
jns
mov
stc
adc
data16
fistpl
int
cmp
popa
cmpsl
sti
shll
loope
imul
pop
xlat
leave
push
fcomip
mov
imul
pop
or
mull
or
leave
add
xor
pop
xor
neg
out
mov
mov
mov
or
push
and
jno
lret
into
fbld
idivb
cmp
mov
inc
vandps
out
xorl
pusha
or
and
or
inc
stos
bound
mov
add
insl
mov
outsl
testb
xchg
mov
jge
lahf
jge
popf
movb
loope
jae
push
add
ss
pop
out
pop
jae
xor
push
dec
lock
testl
clc
mov
loope
orb
mov
push
mov
jg
jo
stos
jmp
ljmp
add
rcll
into
mov
adc
mov
notl
loope
inc
pop
out
jl
push
xorb
pop
divl
outsl
inc
shlb
sbb
sbb
sub
cli
fldl2e
test
or
repnz
mov
fst
and
and
add
adc
imul
notb
jbe
add
dec
push
push
mov
lret
pushf
inc
loope
fsubrs
call
sarb
movsl
je
mov
dec
sarl
or
daa
ljmp
dec
arpl
lret
add
hlt
mov
push
iret
iret
mov
cmc
dec
push
push
nop
rcl
push
out
rcll
adc
xorb
add
andb
jle
icebp
cld
and
dec
sub
mov
jae
mov
dec
popa
jl
out
sbb
loopne
mov
adc
movsl
adcb
xor
fcomi
pop
dec
out
jecxz
in
xchg
mov
pushf
pop
xor
inc
push
lea
push
repz
add
fdivr
mov
jecxz
mov
jg
cli
out
mov
int
or
and
adc
aad
or
repnz
push
pop
push
sub
add
and
xchg
cld
scas
pop
stos
pop
push
in
pop
pop
mov
adc
fistl
mov
add
fbld
mov
ret
fsubs
les
mov
or
pushl
xchg
lret
ljmp
arpl
dec
outsb
lock
aam
add
and
add
rclb
push
adc
mov
rorb
dec
push
inc
pop
and
mov
lds
call
xchg
test
jae
mov
mov
mov
jge
pop
ss
fists
ror
in
mov
mov
inc
stos
dec
jnp
lods
out
adc
pop
jge
jle
rorb
push
mov
inc
shlb
fstps
xlat
fists
addr16
jge
lahf
cld
loopne
lret
clc
mov
push
xor
scas
mov
or
pop
add
fiadds
add
fstl
das
cli
and
pop
out
fdivrp
dec
rcr
subl
scas
fnstenv
loope
movsl
xlat
inc
das
cs
xchg
inc
decl
cmp
add
push
xor
fldt
fistpll
in
loop
sti
jge
pop
adc
rcr
pusha
xchg
sahf
mul
jb
inc
jae
loop
fwait
xor
mov
jecxz
add
loop
movb
add
push
cmpsl
mov
xor
dec
cmp
push
mov
fistpl
popa
pusha
shrl
push
aam
lds
lret
arpl
and
ja
jae
sahf
out
mov
pusha
jecxz
in
jae
jb
push
stc
or
fcmovb
or
lret
mov
dec
add
js
fstp
and
adc
xor
mov
push
cmp
xchg
dec
pop
cmp
pushf
jmp
push
lret
mov
jmp
cmpsb
sub
icebp
sahf
jno
scas
shr
sub
dec
fwait
jae
jle
xchg
cmpsb
pusha
stos
inc
sti
add
lret
sub
jmp
xchg
or
inc
or
inc
mov
repnz
mov
adc
cli
mov
int3
ljmp
mov
xor
test
popa
daa
and
jecxz
or
flds
fiadds
movsl
jnp
lahf
xor
pop
inc
aas
repz
loope
push
popf
jnp
jecxz
or
scas
loopne
mov
scas
loop
xorl
fisttps
pop
iret
jecxz
out
mov
pop
psubq
cmp
push
fistpl
stc
push
xor
jno
fwait
cli
sahf
push
cmc
or
jg
iret
add
shll
mov
add
mov
and
jg
pusha
mov
adc
shl
arpl
mov
je
push
lahf
adc
dec
stos
ss
adc
jl
jnp
ret
sub
mov
and
push
mov
mov
pop
out
cmp
fcmovnbe
adcb
ret
nop
cltd
popf
fidivl
movsl
inc
sbb
pop
push
jecxz
shll
pop
ret
inc
adc
xchg
mov
iret
dec
add
inc
cmpl
and
rorl
loope
push
inc
int3
inc
push
xchg
jns
test
xor
loope
lock
iret
add
jg
incl
sti
dec
loopne
lds
xor
sub
hlt
dec
imul
fsubrp
jno
dec
push
mov
jecxz
push
sub
std
sti
dec
xlat
mov
inc
sbb
les
shrl
lods
inc
not
pop
je
mov
fstp
out
pop
stos
into
lcall
cmp
pusha
and
fwait
mov
inc
jecxz
pop
pop
mov
aad
test
adc
or
adc
push
out
mov
aad
pop
nop
rcrb
sahf
inc
loopne
xor
int3
mov
mov
mov
adc
push
and
sahf
and
lods
jl
and
or
sbbl
jb
jecxz
loop
popf
out
ret
mov
lods
cmp
add
add
repz
xor
sti
orb
jno
loopne
mov
stos
mov
ret
cltd
add
or
testb
mov
fbstp
popf
aaa
or
push
je
rclb
add
xor
push
xchg
dec
push
add
dec
jb
mov
daa
loopne
into
ret
js
ss
in
adc
jge
jno
cmp
incb
popl
cmp
lock
rol
sarl
divl
or
pop
xor
sub
into
popa
inc
inc
orb
in
movsl
or
inc
aad
push
jo
rdmsr
adc
push
leave
dec
add
cmp
mov
xor
loop
push
mov
out
jnp
sub
mov
pop
dec
jne
pop
es
neg
cmpb
sahf
rclb
add
ja
outsl
mov
jecxz
lcall
mull
mov
and
add
adc
cmp
lock
mov
mov
js
lods
jo
arpl
xchg
testl
stos
inc
cmp
pop
repz
insl
scas
push
loopne
iret
sbbl
lret
push
or
mov
pop
pop
cltd
loop
mov
lret
dec
mov
in
cwtl
push
dec
xchg
loope
cmc
jae
sti
out
jge
adc
xor
mov
jl
push
outsb
fcoml
iret
cmc
icebp
scas
in
jl
cli
adc
fisttpl
addl
pop
cmp
push
jecxz
cs
je
dec
loopne
out
clc
pop
jecxz
jmp
iret
pop
jmp
add
pusha
adc
xchg
cmc
push
movsb
pop
cwtl
inc
cmpsb
jne
pop
aad
adc
clc
xchg
stc
add
lret
test
cld
dec
inc
int3
jl
xchg
push
pop
fcompl
jp
mov
and
addb
out
xchg
jl
sub
and
push
enter
outsl
or
add
xchg
sbb
fucomi
repz
insb
add
ret
iret
aad
loop
inc
aas
jmp
sub
fs
int
and
ss
hlt
push
jns
lret
xorl
mov
mov
inc
lret
xor
fiadds
fldcw
jo
out
xor
loopne
imul
out
adc
jmp
nop
es
js
xor
loopne
mov
cs
fisubs
mov
add
mull
pushf
lea
nop
insl
sahf
lret
ds
xchg
aad
pushf
inc
add
ret
in
aad
dec
insl
pop
pop
inc
mov
xor
ja
mov
inc
fidivrl
fisttpl
xchg
test
pop
mov
mov
sub
cmp
jo
cwtl
pop
lret
sub
xor
inc
jns
mov
arpl
sbb
inc
aam
sub
pop
icebp
mov
repz
test
mov
mov
rcrb
add
std
outsl
lock
mov
outsb
push
adc
fistl
icebp
add
rol
push
cmpl
lcall
out
add
fists
rcr
push
sub
aas
cmpsb
int
jp
fisubrl
cs
hlt
jmp
mov
stos
push
lcall
mov
dec
add
outsl
inc
enter
sarl
fbld
pop
loop
mov
data16
adc
mov
xor
xor
popf
lret
rcr
out
pop
cwtl
jno
repz
push
xchg
add
ss
mov
jo
out
divb
push
outsb
jmp
adc
push
or
aam
pop
jbe
je
mov
pop
fcmovnu
sbb
or
push
lea
sub
push
cld
sar
xor
ljmp
es
mov
push
addr16
ljmp
aas
mov
push
daa
and
cmp
dec
push
jmp
hlt
jmp
into
lock
add
cmp
scas
movb
imulb
dec
adc
mov
push
sahf
adc
ret
dec
mov
or
das
and
xchg
repz
dec
fdivr
mov
cmc
inc
inc
push
lock
ret
jbe
mov
push
push
xchg
insb
sub
dec
sub
xlat
xchg
sub
cmp
stc
fistl
sti
jecxz
out
push
loopne
mov
or
leave
mov
jb
jp
aas
leave
pop
jge
data16
jmp
je
xchg
cmpsb
sti
fstps
inc
lret
nop
sarb
lds
xlat
pop
jb
cli
or
imul
cld
push
int
adc
pavgb
dec
cs
loope
rcl
jnp
fdecstp
ret
push
js
cli
scas
inc
dec
loope
cmpsb
pusha
pop
enter
add
push
push
testl
inc
xor
or
scas
jnp
lods
sub
jle
rcrl
cmp
dec
or
insl
jnp
jg
imul
xor
mov
inc
std
adc
aad
push
insb
xchg
mov
mov
xchg
mov
jmp
pop
ljmp
sbb
sub
mov
mov
fucomi
in
outsl
sub
mov
jmp
daa
lods
dec
jp
cs
icebp
jmp
push
push
fsubl
insl
push
loop
mov
scas
xchg
gs
mov
jecxz
mov
cmp
jns
push
jno
out
popf
nop
testl
int
ret
xor
rorb
loopne
ret
loop
cmp
pop
mov
mov
pop
in
mov
or
imul
rcrb
aad
add
inc
jg
sti
inc
jmp
test
mov
mov
gs
pop
imul
repz
sbbl
jp
std
xlat
out
jmp
fiaddl
loope
int
and
jae
pop
cmp
loop
test
test
push
sahf
mov
aad
mov
sti
stc
lahf
fwait
lret
mov
enter
pop
lds
and
mov
stos
inc
popa
pop
jge
and
sub
pop
inc
xchg
pop
or
sbb
adc
pop
and
ret
jo
xchg
pusha
add
clc
addr16
inc
out
push
es
and
lods
cmc
inc
pop
mov
cmp
std
or
scas
aam
out
adc
sbb
xor
or
inc
add
sub
sbb
cld
push
jecxz
dec
push
add
jg
aaa
cmpb
pop
aad
outsl
clc
or
fbstp
add
or
mov
fldcw
jl
xchg
pop
adc
stos
in
jb
lods
lret
stos
push
cmpsl
push
das
mov
shl
lret
popf
neg
test
pop
lahf
icebp
fwait
cli
mov
in
cmp
aad
loopne
call
lcall
js
insl
add
stos
ror
xchg
aaa
aam
mov
les
mov
arpl
mov
iret
push
xchg
das
cmp
clc
add
imul
dec
fistpll
inc
mov
negl
sbb
aaa
cmp
clc
xchg
icebp
jecxz
xor
cli
mull
sbb
insl
arpl
enter
bound
je
cmp
jmp
cs
sbb
cmpb
dec
xor
fdivr
cs
call
mov
fsubs
push
in
je
fldl
or
test
inc
shll
movsb
mov
jb
arpl
cmpsl
mov
mov
in
pusha
mov
xor
adcl
lret
xchg
push
ret
aad
pusha
mov
inc
inc
cs
std
and
push
mov
ret
dec
scas
in
dec
xchg
mov
and
test
inc
fwait
mov
inc
pop
jae
jo
sub
mov
arpl
cli
sti
add
icebp
nop
dec
adc
or
fwait
pop
lock
fld
ja
shll
pop
fildl
sbb
loope
mov
cli
sub
add
notl
int
add
lret
divb
adc
bnd
sti
int
xchg
adc
xchg
adc
sti
and
cli
shr
xchg
sbb
or
loop
fcompl
stos
mov
inc
cld
cmp
push
ret
mov
xor
jp
fsubl
jmp
or
rorl
imul
data16
imul
hlt
adc
xlat
scas
mov
xchg
mov
mov
arpl
ret
outsl
or
push
or
sbb
repnz
push
popa
pop
xchg
jb
movsb
lock
jne
arpl
ljmp
push
jnp
ss
imul
fcompl
and
fsub
repz
sub
stos
or
pop
push
or
cli
mov
jg
push
mov
out
mov
push
jg
add
shlb
fistps
fistl
sub
add
mov
mov
xor
push
xchg
es
inc
ja
xlat
sahf
add
add
jmp
sbb
pop
aad
and
mov
inc
adc
jns
mov
in
and
cmp
xor
rcrl
lock
mov
or
and
bound
xor
ds
cs
ret
mov
loop
mov
nop
lahf
xor
ret
mov
iret
jae
mov
or
dec
mov
mov
or
lds
xchg
cmp
jle
out
jg
out
pop
sub
mov
cmpb
test
je
xchg
mov
lock
lahf
inc
stc
xchg
bound
xor
ljmp
jmp
mov
lock
outsl
scas
pushf
in
data16
xchg
mov
jnp
mov
push
lds
pop
aas
jb
and
stos
push
cmp
icebp
sub
fistl
xor
repz
jo
addr16
mov
jno
xchg
fstl
flds
out
adc
mov
repz
ret
loope
mov
int
jmp
inc
out
fisttpl
dec
outsl
mov
xor
inc
aas
outsb
int3
cld
scas
jae
pop
xor
aaa
lret
out
je
out
mov
or
shrb
inc
adc
ret
jae
stc
push
cmpsb
jmp
mov
mov
aam
jmp
call
sbb
stos
in
or
sbb
lods
roll
push
sti
jae
adc
lcall
sub
lret
mul
pop
cld
and
shl
flds
dec
mov
mov
sub
pop
mov
jmp
mov
and
sti
push
mov
test
ss
sahf
fidivrs
shl
fists
popf
ja
inc
das
mov
ret
movsl
scas
imul
incb
xchg
mul
sti
repnz
out
push
pop
pop
push
out
adc
hlt
movb
mov
push
mov
shll
mov
add
mov
stc
or
and
jmp
popa
add
loope
push
leave
in
data16
dec
push
xor
or
int
mov
xlat
movsbl
int
mov
cmpsb
pop
pop
mov
pop
jl
cmpsb
dec
add
mov
jl
jns
ret
jecxz,pn
clc
xchg
shll
enter
icebp
jae
test
pop
inc
negb
ret
into
pop
or
dec
inc
dec
cwtl
mov
sbb
ljmp
mov
icebp
std
mov
lahf
ret
inc
mov
aad
jecxz
jae
shlb
jbe
outsb
mov
aaa
and
jnp
or
into
push
add
shlb
cs
push
xor
jecxz
cmpsb
xor
int
xor
cmp
fwait
mov
bound
mov
adc
outsl
lahf
cld
fs
inc
cmp
push
out
and
out
xorl
in
pop
jbe
mov
jecxz
addl
ret
arpl
insl
xchg
fucomip
xchg
jmp
lods
scas
call
les
lea
mov
aad
xor
mov
dec
cwtl
or
repz
mov
or
jnp
push
cmp
push
fwait
test
idiv
xor
xlat
mov
cli
hlt
or
sub
or
into
and
cmc
mov
adc
jecxz
jmp
push
adc
test
pop
mov
cld
mov
out
mov
call
xor
loopne
lods
repz
push
fcoms
stos
adc
push
cmp
push
cli
lret
mov
cli
fnstcw
xchg
jmp
imulb
add
dec
xlat
mov
sub
stc
mov
fld
cwtl
xor
inc
in
inc
xchg
mov
cmp
shlb
stc
stos
mov
mov
rorb
sub
sbb
int
xor
mov
out
add
xor
and
add
push
lcall
std
xchg
sbb
push
mov
lret
outsl
insl
xor
mov
pusha
nop
ret
xchg
icebp
push
cwtl
loope
push
ret
inc
lods
enter
aaa
add
lcall
jne
jle
sti
or
jnp
cli
push
repz
push
xor
ret
sbb
jne
ss
addl
push
enter
mov
push
pop
sbb
or
mov
lret
rcr
imul
leave
stos
out
ljmp
xchg
inc
imul
mul
out
cmp
aad
jb
push
add
ss
std
dec
jge
fcoms
mov
fbstp
xlat
mov
lock
repz
mov
call
stos
mov
in
pop
fdivl
mov
sahf
adc
mov
push
adc
xchg
mov
in
or
xorb
leave
jno,pt
aam
xorl
add
xor
cmc
adc
ja
mov
nop
cmpsb
lods
inc
or
movl
inc
mov
xor
pop
fnstenv
sbb
mov
xchg
das
jecxz
cwtl
inc
mov
rorb
jo
add
xor
ret
mov
lret
mov
pop
js
lock
jge
inc
sub
cltd
mov
ss
dec
scas
mov
sti
popf
bound
add
mov
scas
mov
mov
out
lret
pusha
xor
mov
mov
mov
cmpsl
jecxz
inc
push
cwtl
aad
adc
outsl
rcl
add
fxch
and
out
movsl
or
mov
lret
or
cmc
mov
sahf
fildl
repz
or
ljmp
pop
lods
sbb
push
fmull
nop
or
shll
inc
sar
pop
inc
xchg
xchg
mov
je
loopne
push
adc
into
mov
stc
jne
scas
jle
jle
inc
add
int
mov
adc
inc
adcl
cmp
cmpsl
incl
mov
popf
loop
xchg
jmp
adc
lods
cmp
or
pusha
out
lods
rol
sahf
push
cs
jne
jnp
rcrb
rcrl
loope
aas
mov
pop
iret
loope
xchg
cli
and
fisttpll
or
lock
pusha
mov
decb
or
iret
and
mov
pop
pop
fimuls
jnp
iret
inc
jae
stc
mov
insl
jne
divl
je
add
push
dec
std
push
lcall
mov
cmp
push
sub
scas
call
xor
mov
ret
fdivr
jne
cli
push
shl
leave
ret
daa
shll
lock
movsb
ret
and
insl
jmp
add
push
mov
mov
push
xor
push
sbb
mov
mov
add
xlat
pop
xor
push
stos
inc
loop
add
aam
adc
inc
jp
mov
inc
popf
pop
pop
mov
pop
xor
mov
mov
ss
fwait
bound
mov
out
pusha
cmpsl
mov
data16
push
xor
sub
mov
cmp
sbb
in
xchg
pop
notl
dec
jl
mov
push
push
xor
mov
ljmp
inc
aad
loopne
fcoml
xor
inc
inc
add
out
pop
inc
push
testl
cs
or
scas
sarb
mov
inc
fistl
xor
ja
mov
arpl
es
jecxz
mov
jmp
xor
xchg
add
mov
jnp
pop
aaa
dec
arpl
adc
push
mov
mov
push
fsubrl
in
push
xchg
mov
scas
insb
jle
xlat
das
pop
outsl
pop
xor
xor
loope
into
lcall
mov
shr
pop
test
mov
adc
int3
mov
iret
fmulp
pop
lahf
mov
push
mov
icebp
loopne
fnstenv
jg
mov
mov
jmp
ja
push
mov
in
cmpsb
sub
popa
lret
incb
push
push
in
mov
and
ja
shll
arpl
mov
rclb
xchg
and
pusha
test
push
cli
jp
cmpsb
xchg
sub
jg
push
mov
cmp
adc
fs
fcomi
loope
andb
daa
jge
xlat
inc
lret
rcrb
mov
int3
mov
in
in
loopne
fsubl
adc
push
fwait
ds
sbb
adc
ret
jae
cmp
lods
mov
repz
and
movl
outsl
cld
movsb
push
fcmovb
ret
rcl
fwait
inc
mov
icebp
push
sar
sub
jle
mov
mov
fwait
cmc
outsb
cltd
idiv
test
in
adc
mov
dec
scas
push
jnp
push
mov
xchg
fistps
xor
add
cmpsb
cld
and
inc
sbb
out
test
sbb
xchg
in
addr16
and
pushf
mov
push
ret
out
push
clc
testl
jae
inc
pop
mov
and
jecxz
sub
ret
loopne
pop
enter
pop
out
xchg
scas
fnsave
sar
out
mov
test
inc
add
jecxz
cmp
push
cli
jae
rcl
xchg
ds
pop
arpl
and
fsts
sarb
scas
push
scas
push
jg
jmp
sub
ja
sbb
push
iret
mov
imul
std
iret
pop
clc
adc
stc
movsl
popa
mov
shrb
mov
icebp
shrl
cmp
cmpsb
stos
and
mov
ret
fucomip
test
sahf
mov
add
mov
mov
lret
xor
sti
add
push
scas
dec
fisubs
dec
add
sub
cli
dec
lret
lret
fiaddl
inc
or
lods
mov
inc
sub
xchg
pop
or
je
aaa
repz
cs
ja
sbb
push
pusha
test
aam
cli
outsl
bound
push
jnp
loop
dec
lock
cwtl
std
sarb
jne
pop
xor
bound
jno
inc
popa
and
fwait
add
rcr
ret
rolb
popa
jg
out
mov
mov
mov
scas
lret
jg
push
and
dec
stos
stos
cmp
push
lods
cmp
test
shlb
jecxz
mov
or
dec
inc
negb
fs
pushf
dec
jo
xchg
fsubl
mov
loop
addr16
movsl
sbb
sahf
mov
aas
popa
scas
sub
jbe
negl
mov
sti
shl
or
inc
movl
jae
xchg
xchg
int3
cmpsl
jecxz
dec
aam
aad
or
adc
in
test
inc
loopne
xchg
loopne
jecxz
rep
test
dec
mov
insl
mov
mov
ja
mov
or
xchg
int3
fs
int
mov
into
orb
sub
pop
ret
xchg
lcall
push
cs
loop
lcall
incl
jg
out
aad
sbb
loope
or
lods
mov
daa
or
dec
mov
dec
jecxz
xor
int
lcall
rol
mov
lret
aaa
sti
in
clc
mov
ret
aad
ret
xor
sbb
push
popf
sahf
and
in
sub
test
cmpsl
out
fdiv
jg
mov
and
and
push
mov
and
push
mov
adc
adc
xor
pop
cwtl
mov
mov
jns
mov
xor
scas
jno
addb
daa
pusha
imul
jle
and
scas
add
mov
inc
repz
or
fs
filds
pop
xor
sbb
pop
jbe
fcmovnb
hlt
mov
int3
aad
mov
mov
jns
bound
aad
adc
mov
jg
cs
out
inc
sbb
xchg
stos
lret
inc
mov
sbb
je
jg
in
and
dec
pop
cld
in
das
scas
fildl
lea
dec
lret
mov
mov
and
inc
fnsave
jmp
fisubrl
sub
or
daa
xor
xchg
sub
mov
repnz
stos
outsl
add
pop
inc
fcompl
pop
outsl
add
outsl
stc
les
mov
jns
or
addr16
stc
loopne
scas
enter
pusha
xlat
or
imul
or
jnp
inc
cs
mov
xchg
cs
jecxz
ds
pop
test
movl
je
ret
fstpl
gs
jle
lods
pop
and
orb
fdivl
pop
loop
fcmovne
pushf
inc
inc
add
jmp
sbb
lahf
xor
pop
je
sub
push
mov
shr
adc
add
pop
stos
adc
dec
push
popf
xchg
dec
jae
add
jae
or
sahf
orb
mov
dec
enter
loop
xchg
ret
xchg
push
movsl
mov
movb
cmp
rorl
sti
adc
mov
mov
rorb
mov
in
insl
loope
or
jmp
mov
sahf
cmp
pop
adc
out
xchg
arpl
shll
dec
aad
es
daa
idivl
mov
add
and
jnp
divl
fsubp
lret
adc
cld
mov
push
ret
cli
mov
shlb
inc
lret
xlat
cmp
push
nop
popl
lcall
in
pop
jmp
subl
push
loop
push
fsubl
stc
and
or
xor
xor
push
push
mov
jb
popa
in
add
clc
in
or
shrl
and
jae
dec
or
lcall
mov
ficoml
add
xchg
xchg
mov
stos
xchg
sti
adc
movsl
fnstcw
or
repnz
lcall
cs
test
jmp
mov
iret
dec
push
fs
add
sub
or
fs
mov
mov
cmpsb
xlat
mov
fistpll
or
mov
inc
cmpsb
push
lea
std
sahf
popf
mov
jecxz
inc
xchg
inc
mov
test
xchg
out
xchg
sbb
push
subl
sub
out
cwtl
xor
sub
test
inc
cwtl
jbe
or
mov
cmp
punpckhdq
cli
jmp
add
addr16
loopne
or
cld
cld
pop
ja
outsb
xchg
adc
sarb
push
add
sbb
in
inc
sahf
xor
addl
adc
arpl
jg
movsb
mov
cmp
iret
mov
loopne
ljmp
lret
push
dec
scas
add
sub
es
mov
cs
aad
neg
sbbl
mov
in
sbb
test
xlat
les
and
mov
add
mov
shl
imul
jbe
sub
lahf
mov
sti
stos
xlat
stos
jg
out
cs
pop
ret
push
and
jmp
jb
adc
mov
and
mov
xchg
sbbb
je
mov
jp
daa
and
push
fldt
or
jno
frstor
jl
jbe
sarb
int
mov
icebp
xchg
adc
shrl
pusha
hlt
outsb
popf
jg
in
mov
lcall
lahf
jmp
push
inc
inc
call
or
xchg
ret
pusha
lock
xchg
outsb
mov
cs
cmpsb
and
ret
arpl
imulb
xchg
fisttpll
jmp
push
ja
cli
mov
decb
dec
pop
xchg
push
ret
sti
mov
out
jg
mov
aas
mov
xor
pop
ret
stos
dec
xlat
jl
mov
mov
xor
mov
jg
sub
repnz
or
mov
dec
push
pop
sar
cmpsl
pop
fidivrl
mov
mov
push
gs
mov
lock
and
mov
adc
adc
stos
int
lock
andl
lret
addb
jns
add
lock
cmp
or
and
shlb
sbb
fistpll
jecxz
cmp
icebp
fsubrs
dec
add
imull
and
insl
or
aas
and
roll
test
jmp
das
js
pop
sbb
pop
fbld
mov
movsl
add
sahf
stc
xchg
les
jp
add
xlat
jp
add
jne
out
sarb
in
push
lods
scas
mov
std
xchg
cmpsb
loope
aad
ficomps
cmp
mov
jae
push
test
push
jnp
jno
lahf
push
outsl
pop
mov
aam
push
mov
xor
xchg
sarb
mov
and
lret
sbb
in
into
xor
cmpsl
outsl
js
push
aam
sub
mov
inc
lret
xchg
pop
xor
outsb
aam
push
arpl
daa
jge
mov
repnz
push
imull
push
outsl
in
xchg
add
jno
sbb
and
lds
adc
mov
add
jo
and
push
icebp
add
sbb
in
xor
cs
fcmovnb
mov
mul
push
push
fdivrs
add
push
in
sti
and
call
adc
pop
fdivrl
sbb
push
push
mov
or
mov
lret
ds
push
in
xor
mov
pushfw
jg
mov
adc
insl
or
movsl
xchg
loope
jnp
fnstcw
fisttpl
push
testl
leave
ffree
sti
mov
jb
xchg
push
aaa
outsb
fadd
cmp
mov
jmp
fdivrp
jl
js
jecxz
imul
stos
aas
mov
shll
clc
add
scas
add
pop
or
in
xlat
xor
jns
std
push
push
lret
pop
lds
ja
or
ss
lock
cmp
das
push
inc
rcrl
sbb
pop
or
repz
pop
clc
add
iret
jmp
cs
inc
pop
mov
fisubl
rcrb
mov
repz
mov
jecxz
fldt
mov
lods
inc
mov
dec
mov
and
add
int
or
shll
repnz
jp
jb
jno
pop
lahf
jecxz
outsb
cmp
cmc
pop
sub
lock
mov
fcmovnbe
pop
adc
jg
mov
pop
and
fildll
repnz
cld
mov
xor
sub
xchg
xchg
mov
cmp
xor
cmc
xchg
out
add
std
icebp
adc
rolb
jge,pn
lods
mov
test
xor
xchg
add
inc
push
xchg
fwait
aad
mov
out
pop
inc
jmp
or
mov
mov
hlt
and
sub
ret
fidivrl
das
jns
pop
rol
in
pop
xor
jb
or
dec
js
repz
mov
sub
std
push
adc
or
gs
cmp
xor
pop
jg
add
mov
cmc
jmp
cmp
daa
cmp
push
mov
push
mov
push
scas
add
cs
test
ret
mov
stc
xchg
xadd
or
dec
insb
addr16
inc
jno
jmp
push
sarb
and
mov
cmc
push
mov
inc
insl
push
test
cmpl
adc
pusha
cmc
xlat
adc
scas
jo
clc
jecxz
mov
nop
cmp
mov
mov
mov
cmpsl
lcall
je
xchg
ds
sahf
sti
push
fucomi
mov
mov
hlt
pop
ljmp
jecxz
mov
mov
sti
fnstenv
loop
loope
in
mov
sbb
jmp
hlt
dec
pop
push
sbb
mov
mov
int
add
aaa
out
addb
lret
mov
pop
sbb
push
ret
test
dec
dec
push
out
in
xchg
pop
mov
and
xchg
js
push
pop
lret
xor
sti
mov
outsb
mov
inc
stos
jle
cld
jmp
loope
mov
dec
dec
mov
jl
and
sahf
mov
sbbl
mov
or
pusha
adc
jae
pop
inc
icebp
gs
shll
push
shrl
pusha
addr16
fcmovu
push
mov
fisubl
mov
adc
popa
mov
xchg
repz
mov
cmp
or
jmp
mull
or
mov
out
mov
jge
ss
xchg
clc
ret
in
xchg
ljmp
pop
pop
pushf
out
push
out
scas
pop
mov
in
or
jno
fimuls
scas
insl
inc
xlat
fadd
add
or
push
into
aad
aam
jle,pn
add
push
lcall
lock
push
aas
nop
inc
inc
pop
jp
rclb
inc
jbe
out
dec
jecxz
lods
cld
or
stos
js
test
fcoml
loope
cs
in
scas
cmp
pop
in
xorl
or
mov
add
mov
fs
insl
clc
mov
jmp
sub
mov
fsubrs
sarb
nop
jecxz
inc
adc
adc
outsl
dec
mov
out
and
xlat
subl
fnstsw
arpl
out
add
pop
add
inc
mov
and
jns
arpl
mov
mov
jae
cmpsb
mov
pop
hlt
scas
popf
fdivrl
push
mov
jbe
push
in
dec
clc
inc
ljmp
arpl
fildl
pop
jmp
mov
pop
ljmp
add
jg
mov
cli
subl
inc
arpl
pop
insl
movsb
sbb
icebp
pop
pop
icebp
int3
negl
xchg
mov
sub
inc
es
insb
sub
ficoml
cmpsl
stos
aas
push
icebp
mov
pop
lahf
pop
aaa
sahf
push
js
xabort
pushf
mov
xor
pusha
mulb
mov
rorb
mov
xlat
mov
add
cs
aad
pop
mov
cmpsb
inc
rcrl
lret
hlt
xchg
mov
push
jae
aas
imul
mov
popa
sahf
sarl
xlat
negl
cld
mov
inc
insb
aas
in
jl
int3
jb
adc
pop
loope
add
negl
pop
inc
adc
sti
ffree
ficoms
mov
scas
mov
bound
mov
xchg
lahf
cmp
pop
mov
adc
movsl
repz
mov
fnstsw
scas
in
clc
mov
adc
pop
inc
outsl
icebp
xor
push
daa
lods
rorl
daa
pop
fcomps
out
enter
gs
adc
mov
or
ror
inc
daa
in
aam
mov
jno
push
mov
inc
pusha
and
jnp
xchg
test
cmpsl
and
jbe
inc
adc
and
enter
add
pop
cld
pop
xchg
xlat
cmp
loop
push
movsb
jne
push
pop
pop
mov
out
daa
ret
mov
and
sbb
fisttpll
jecxz
fs
fs
push
xor
fcoml
cmpsl
pop
clc
stos
bound
add
fnsave
jmp
sub
xor
xchg
push
inc
insl
push
xor
or
adc
cmpsb
aam
mov
mov
sub
dec
or
adc
jg
movsl
mov
adc
jbe,pn
loopne
pop
ficoml
xor
repz
adc
imul
popa
push
cmp
sbb
jl
repnz
or
mov
out
or
push
mov
xor
in
sbb
jb
test
scas
xchg
or
push
nop
inc
ss
nop
ret
xchg
jle
add
lret
das
sbb
ja
nop
xchg
cmpsb
ljmp
push
jae
loop
mov
dec
dec
add
mov
gs
rolb
idiv
dec
push
repz
jmp
mov
rolb
daa
xchg
lahf
jp
idiv
add
inc
pop
or
push
push
mov
add
and
adc
and
or
jae
movsl
in
xor
icebp
sub
rcrl
push
cs
int3
ja
xor
mov
imul
out
loopne
pop
dec
mov
fisttpl
add
clc
aad
cmpl
ret
in
aas
fistpl
inc
pop
or
adc
sbb
fmul
xchg
sub
xor
jo
adc
and
or
cmp
movl
jp
ret
jp
std
out
push
sbb
cmp
jo
ljmp
sub
xor
notl
push
jecxz
cmp
loop
push
or
or
arpl
test
ret
pop
inc
adc
std
in
xchg
jecxz
pop
std
icebp
dec
or
decb
sahf
cs
add
and
std
push
iret
mov
std
inc
ljmp
sub
cs
adc
cs
push
icebp
mov
outsl
repz
push
adc
jecxz
test
mov
jo
aad
fmuls
aam
mov
xchg
addl
dec
mov
loop
aam
add
ror
icebp
stos
adc
pop
cmp
dec
mov
jmp
loop
cmp
sbb
add
testl
mov
rclb
jge
mov
sarl
inc
negl
pause
cmc
inc
add
icebp
jo
mov
insb
outsl
addr16
dec
dec
fisttpl
imul
push
lea
jo
ljmp
divl
and
rcr
fs
inc
shrl
jae
xchg
or
and
mov
icebp
push
jg
dec
in
or
cmp
jns
mov
imul
stos
push
mov
sahf
pop
push
pop
mov
test
add
orl
mov
xchg
lea
mov
adc
mov
jmp
add
popf
cmp
push
shr
mov
cmpsb
sbb
fsubp
call
mov
pushf
stos
sub
jmp
push
inc
jbe
mov
mov
mov
lock
jl
hlt
dec
stos
xor
sbb
sbb
into
pusha
loopne,pn
adc
sahf
push
push
xchg
int3
repz
add
push
dec
or
sahf
arpl
lods
lock
adc
repnz
out
mov
js
out
cltd
stos
dec
lret
pop
push
inc
addl
aad
adc
push
pop
and
loope
jle
pop
xchg
lret
mov
movsl
les
aad
loope
cmp
setnp
mov
push
jbe
sub
mov
out
lahf
cmpsb
push
inc
aas
hlt
mov
mov
mov
and
in
pop
aad
gs
xchg
jbe
pop
xlat
in
lret
lret
mov
pop
lahf
lret
jo
jmp
mov
repnz
mov
add
mov
shll
jecxz
fildl
adc
cmp
incb
push
not
adc
pop
cli
sbb
ret
dec
aam
js
pusha
jnp
stos
cmpsb
xlat
cmc
hlt
mov
pop
imull
out
repz
mov
push
clc
xor
xor
jb
pop
stos
js
jg
cmp
ja
fmull
push
scas
hlt
adc
or
movl
or
insl
mov
xchg
outsl
xor
lds
dec
stos
push
in
pop
mov
out
mov
clc
mov
decb
jecxz
in
imul
scas
mov
scas
setnp
inc
loopw
mov
dec
insb
hlt
adc
add
mov
lahf
sub
mov
std
xlat
hlt
sub
int3
icebp
pusha
test
enter
inc
adc
mov
fs
or
clc
mov
rcl
repnz
shlb
pop
xchg
popa
and
ffreep
lret
or
bound
ljmp
jns
in
sbb
sbb
rcrl
out
sbb
xchg
call
ja
adc
adc
push
in
mov
fwait
mov
xchg
icebp
movsb
sub
shll
cs
jo
xchg
jge
lods
mov
or
sbb
gs
sub
insl
test
icebp
shlb
xor
fwait
lcall
call
jmp
and
cmpsb
push
ret
in
mov
dec
scas
xor
sub
pop
mov
xor
sar
or
cli
dec
ret
mov
push
sti
aaa
fimuls
add
test
jno
std
sub
pop
or
add
push
clc
inc
test
cmp
push
sub
cs
ror
xor
sbb
mov
lcall
push
inc
add
into
mov
mov
adc
jge
sub
cwtl
fwait
scas
sub
jp
divb
call
ret
lret
mov
push
inc
jp
and
add
and
xor
fistl
mov
mov
pop
shlb
mov
inc
or
and
mov
add
gs
ja
test
mov
push
fldt
cmp
sub
lea
icebp
clc
push
sub
insl
and
adc
pop
push
cmp
jmp
and
jo
cmp
enter
shrl
push
pop
and
mov
push
add
pop
jmp
fnclex
and
mov
sbb
xchg
mov
dec
outsl
push
jmp
dec
push
mov
movsb
inc
and
outsl
xlat
push
sti
iret
mov
mov
insb
and
imul
aaa
sub
adc
stc
and
jbe
fwait
mov
repz
lret
ret
adc
dec
xor
sub
jl
inc
adc
or
xor
pop
cs
jp
arpl
scas
xor
cs
or
jp
addr16
push
push
mov
dec
cmp
jg
scas
mov
jb
js
jnp
icebp
cmp
scas
pop
jno
pop
dec
mull
scas
sbb
xchg
pop
xor
sub
arpl
subb
push
fnsave
int3
sar
leave
add
cmp
cmc
inc
ljmp
dec
ret
fwait
ss
lahf
mov
rcr
lcall
xlat
imul
gs
icebp
jl
cmp
adc
pop
ret
daa
sahf
push
xor
in
jecxz
test
rolb
cmc
mov
pslld
and
mov
cwtl
mov
sarl
shll
lcall
pop
pop
and
add
scas
sub
imul
jnp
jae
xchg
and
es
repz
pusha
push
or
mov
mov
jns
addr16
push
dec
bound
jp
mov
pop
repnz
je
gs
jecxz
and
mov
int
or
das
not
fistl
lock
aad
xor
mov
mov
adc
sti
adcl
mov
sbb
in
shrl
cmp
mov
cmp
or
test
xor
andl
out
sub
push
jae
and
hlt
icebp
popf
adc
push
and
repz
adc
in
cmp
cld
push
or
mov
cmp
inc
mov
push
dec
stos
pusha
dec
cmc
fiaddl
cli
sub
test
and
mov
int
or
xor
mov
xorb
jge
movsb
pushf
dec
jg
insl
or
icebp
dec
shll
jmp
jecxz
aas
stc
mov
push
sub
mov
filds
xor
sub
and
mov
icebp
mov
pop
jbe
jg
jecxz
stos
out
cli
sub
and
mov
inc
jbe
and
inc
add
mov
jg
or
sahf
testb
jns
inc
cmp
loopne
int
mov
cltd
rcrl
loope
pusha
das
cmp
fistl
xor
xor
mov
adc
fsubp
mov
push
ret
in
ret
cmc
cmp
rclb
xor
insl
push
gs
cs
bound
inc
mov
jb
jmp
lahf
popa
xchg
add
jg
pop
arpl
mov
lahf
xchg
or
orb
xor
jmp
pop
shlb
in
cmpb
inc
lea
movsl
push
repnz
icebp
and
inc
stos
mov
aaa
leave
inc
scas
out
aad
mov
loope
test
jnp
jmp
iret
adcl
sti
loope
fucomip
lock
jecxz
mov
lcall
iret
or
icebp
mov
repz
fmulp
mov
pop
jmp
fistps
push
xchg
pop
stc
mov
mov
cli
or
mov
sbb
add
cmc
xchg
pusha
sbb
aas
in
mov
mov
js
mov
bound
pusha
mov
pop
add
mov
cwtl
movsl
push
in
cmp
xor
pop
loop
xchg
jmp
xor
mov
into
repz
push
pop
enter
jg
jg
add
scas
xchg
pop
aas
pop
sub
xchg
in
cld
xchg
push
loopne
ljmp
fldl
add
xchg
jp
sub
fstpl
aaa
inc
xor
ret
addb
adc
sbb
or
pop
scas
lock
in
fs
fildl
push
andb
sub
ja
repz
xor
add
mov
lcall
aas
adc
jne
and
cmc
jbe
and
xchg
xchg
cmp
mov
or
push
inc
fucomi
jne
jecxz
xlat
mov
inc
and
or
dec
sti
lret
sub
rclb
psllw
xor
icebp
or
stos
lea
dec
mov
addr16
lock
int3
lret
push
push
dec
mov
into
insb
jb
and
loope
int
sub
mov
stos
cltd
fbstp
jae
ss
leave
roll
sub
rorl
fcomi
pusha
inc
xchg
sbb
clc
cmpsl
sti
shl
outsl
mov
cli
cmc
and
jmp
aas
mov
xchg
mov
pusha
les
rol
outsb
in
es
loop
sub
test
icebp
dec
or
jecxz
sbb
and
outsb
xor
pop
jge
cmp
mov
call
inc
adc
push
loopne
pop
add
dec
adc
jecxz
jo
aad
loopne
out
sahf
mov
ret
dec
cmp
sahf
pop
addr16
scas
cmpsl
pusha
sub
adc
out
adc
push
nop
mov
jne
xor
adc
or
imul
fisubs
and
pop
loop
xor
mov
ret
mov
mov
add
mov
mov
ljmp
mov
mov
imull
pop
push
stos
out
mov
call
pop
xor
mov
fdivrs
movsb
add
jae
mov
clc
xchg
dec
or
jecxz
ljmp
mov
loope
daa
gs
repnz
cmp
push
dec
push
push
pop
xchg
or
cmp
cmpsb
sbbb
push
fnsave
jg
sti
dec
adc
inc
lret
or
jae
dec
aaa
jge
push
push
and
ret
inc
cmc
nopl
pusha
sarl
inc
das
repz
lret
jecxz
cmp
jo
mov
mov
mov
jnp
sar
leave
push
or
mov
stc
xchg
lcall
jno
addr16
enter
push
in
rcrl
jp
pop
jno
ds
bound
ret
or
in
repz
mov
daa
fidivrl
xchg
es
and
pop
ret
mov
ret
jp
loop
fists
dec
stc
fucomip
mov
mov
movsl
inc
pop
mov
imulb
cmpl
xchg
add
inc
pusha
sub
push
out
out
dec
add
push
dec
and
lahf
mov
jecxz
jmp
jecxz
sti
test
sar
cwtl
int
sub
push
pusha
xchg
cltd
dec
popf
mov
xor
lods
adc
push
dec
ss
andl
mov
ja
outsb
mov
hlt
das
pop
movsl
ret
push
mov
in
adcb
xchg
mov
add
outsb
push
xor
cwtl
push
xchg
sahf
aaa
aas
mov
std
cs
add
rorb
mov
xchg
cmp
inc
mov
cmp
clc
or
faddl
cs
sub
push
into
mov
mov
inc
pop
or
movsl
sub
lahf
push
ret
in
sbb
mov
clc
add
adc
jp
pop
jno
xchg
bound
xor
stc
jne
loopne
icebp
rcll
jnp
aas
push
jecxz
sar
xchg
ja
ret
loope
push
push
call
fisttpl
mov
pop
jl
mov
movq
inc
insl
xchg
jo
clc
mov
mov
pop
js
cmc
and
mov
sbb
das
lock
jge
insl
mov
xor
lods
outsl
filds
outsb
loopne
and
push
jl
push
sbb
jecxz
xor
jp
xchg
sub
inc
cmc
imul
adc
jmp
pop
lcall
mov
out
push
jg
inc
imul
jmp
movsb
adc
or
popa
mov
clc
ret
lock
clc
fwait
pusha
shlb
sbbl
mov
call
mov
aaa
push
push
push
push
jp
mov
xor
repnz
jmp
push
loopne
outsb
rcl
adc
mov
imull
jge
push
stc
sbb
lods
cwtl
loop
cmc
sarl
scas
ss
in
ror
mov
lods
adc
mov
pusha
rcr
mov
imul
lods
xor
arpl
inc
in
mov
cmc
mov
add
ds
bnd
lea
xchg
inc
fnstsw
push
lret
loop
xchg
adcb
rcr
jo
xchg
jnp
jecxz
cli
andb
add
jno
dec
mov
out
mov
fsubl
shrb
jmp
mov
mov
xchg
xor
dec
sti
call
arpl
sub
mov
xchg
bound
pushf
int3
xor
or
mov
xor
pop
fildl
sub
and
loop
pop
aas
mov
adc
jno
jecxz
pusha
addr16
icebp
dec
dec
pop
in
pop
fildll
pop
push
dec
xor
xlat
mov
add
add
mov
mov
iret
ljmp
insl
ds
sbb
mov
cmp
cltd
mov
cld
sti
mov
cmp
popf
jmp
fnsave
popa
pop
xchg
incb
mov
inc
cmc
or
jg
loop
mov
jmp
bound
sub
or
jmp
cmp
adc
mov
loopne
jecxz
scas
cltd
rorb
pop
jne
lret
loopne
mov
mov
ljmp
xchg
mov
addr16
lds
imul
xor
mov
imul
arpl
or
jle
stos
jae
pop
fsts
inc
loop
repz
add
dec
jl
pop
gs
mov
cs
stc
dec
scas
mov
jns
hlt
dec
push
subl
aad
jmp
xor
repz
cmc
cld
xor
push
mov
pop
movsl
insb
mov
cltd
jno
mov
mov
mov
mov
push
mov
pop
lcall
add
je
fwait
dec
mov
adc
or
xchg
mov
js
or
xchg
xlat
pop
jp
bound
xor
pop
aam
lock
add
call
popf
mov
fiaddl
mov
loopne
fdivl
sub
fidivs
lret
fbstp
mov
sbb
add
repz
mov
insl
xor
xor
sbb
stos
xchg
pop
inc
push
insl
popf
adc
lds
scas
mov
cmp
pushf
cli
lahf
ret
lahf
inc
push
idiv
call
and
orl
pop
out
bnd
pushf
jno
lahf
outsb
lret
cwtl
mov
nop
arpl
fs
xor
inc
inc
pop
sbb
stos
fisubrs
stos
arpl
add
pusha
cmp
xor
jl
push
packuswb
stos
mov
icebp
jp
rclb
iret
in
or
mov
cld
mov
cmpl
outsl
cmp
rol
popa
movsb
adc
or
scas
pop
adc
sahf
mov
ljmp
ret
scas
cltd
lock
arpl
cmp
push
jno
xchg
shll
add
cmp
xchg
pop
mov
mov
cmpsb
push
aam
icebp
inc
in
lcall
fcmovnu
sub
mov
push
sbb
add
xor
inc
pop
in
push
insb
mov
pop
test
sbb
jns
icebp
inc
in
ds
inc
test
dec
dec
mov
mov
das
and
cmpsl
xchg
xchg
sbb
gs
push
jbe
jmp
pusha
js
jb
lcall
mov
fwait
push
mov
pop
and
js
fdivs
stos
pusha
insl
cmpsb
into
ficompl
mov
cltd
lcall
cmp
loop
mov
mov
add
mov
push
fadd
push
addl
dec
iret
jl
mov
and
and
jmp
pusha
lods
xchg
jno
xchg
imulb
mov
clc
sbb
push
cmpb
jecxz
mov
cmp
jecxz
mov
jecxz
test
lahf
in
xchg
ja
ficompl
mov
aaa
cmp
push
lret
ret
out
push
jno
btr
addr16
daa
insb
cmp
lret
lret
cmpsb
xor
jo
xor
mov
insl
cmpsl
aas
pop
xchg
iret
and
outsb
jecxz
frstor
pop
outsl
adc
cld
je
mov
jb
cwtl
mov
sub
lcall
adc
cmp
mov
mov
pop
or
shrb
iret
pop
mov
jmp
cld
js
mov
das
jmp
rcr
sub
ja
pop
fadds
adc
clc
dec
out
iret
push
jecxz
or
mov
clc
adc
sbb
out
pusha
push
lret
xor
add
sub
repz
cld
jl
adc
fnsave
jg
test
sub
lods
popa
cmp
pop
ret
mov
scas
cli
pop
lret
xchg
jnp
ret
outsl
rcrl
cs
add
shlb
inc
mov
iret
fstpl
and
fstpl
lcall
cld
cli
inc
decl
mov
push
repz
cs
mov
push
fwait
jae
out
and
sbb
test
jle
in
aas
loop
out
and
push
and
mov
movsb
push
loope
mov
push
push
lret
or
in
jnp
mov
or
loopne
adc
jecxz
jae
les
outsl
sub
mov
fstl
rcrl
inc
xchg
inc
test
xlat
es
sub
push
or
fisubrs
cmp
pop
pop
es
xlat
int
lcall
out
add
int
inc
or
mov
or
pop
test
hlt
and
lret
mul
push
xor
arpl
add
dec
mov
andl
cld
out
pushf
cltd
mov
mov
xchg
out
sbb
xor
mov
div
dec
and
sbb
and
mov
cmp
cmc
test
pop
addr16
insl
push
adc
adc
out
aad
sbb
jnp
mov
jg
push
into
lods
jg
addr16
ret
xor
ret
mov
jl
mov
ljmp
xlat
mov
add
and
repz
fs
adc
loop
ret
xchg
fisttpll
mov
addr16
cltd
push
cltd
push
sar
xor
stos
add
rcl
mov
xchg
pop
jns
cltd
inc
push
mov
rclb
std
les
std
repz
xchg
lods
pusha
xchg
in
jo
jnp
das
and
mov
jae
mov
test
mov
fndisi(8087
icebp
cli
add
test
and
jne
and
ljmp
jae
pop
dec
fisttps
fucomip
cmc
loope
outsl
mov
jo
cmp
sti
mov
test
test
and
xor
inc
in
inc
jg
add
push
jecxz
outsl
mov
outsl
shll
jecxz
lods
loopne
xchg
icebp
xchg
push
xor
stc
pop
push
notl
aaa
cmp
or
fst
adc
call
mov
mov
sbb
repz
xchg
jg
jecxz
jl
sub
or
adc
mov
clc
jecxz
fwait
jg
jb
pop
ds
jle
rcrb
test
mov
cltd
cli
xor
xchg
mov
xchg
and
pop
jp
ja
mul
in
lahf
mov
sbb
pop
cmpsl
adc
mov
mov
sbbl
sbb
shll
sub
jp
cmp
pusha
xor
icebp
popa
jmp
sbb
and
mov
pop
push
loope
add
data16
fmulp
mov
pop
jnp
stos
jae
jg
mov
push
mov
insb
pop
sub
cwtl
xor
cld
dec
int
push
mov
lahf
and
pop
jecxz
xor
mov
sahf
movsl
test
movsb
hlt
dec
lret
sub
loope
add
ljmp
mov
cmp
cmpsb
out
pusha
int
dec
cs
pusha
stc
sbb
nop
or
xchg
xor
into
push
dec
ror
les
sarl
mov
aaa
add
sub
mov
jp
push
leave
sarb
ret
mov
mov
movsb
mov
inc
retw
inc
sarb
imul
cs
lahf
arpl
push
lods
lahf
out
mov
and
dec
data16
test
adc
adc
shr
pop
add
cs
sbb
loop
call
sub
ds
mov
mov
shll
out
aas
mov
mov
fcmovnb
test
repz
sub
add
int
enter
sub
and
sub
rcrl
fdivrl
inc
mov
ret
leave
cli
and
insb
sbb
lods
mov
nop
hlt
mov
sbb
lcall
sub
imul
mov
in
test
and
push
xor
cmp
lock
ds
adc
cmpsb
xor
sahf
test
in
lock
add
sbb
push
sbb
je
xor
pop
dec
aam
or
into
repz
js
mov
inc
lea
es
ficomps
cmpsb
aam
mov
xor
lret
scas
pop
sarl
mov
arpl
mov
mov
pop
test
xor
shrb
and
pusha
adc
pop
ret
into
mov
cmc
mov
lahf
jecxz
movsl
or
xchg
imul
mov
sbb
add
arpl
xorb
pop
lahf
mov
mov
int
rcrl
ret
mov
xchg
push
pop
cmp
push
mov
dec
jae
inc
cmpsl
xchg
push
jo
xlat
loopne
shlb
mov
pop
data16
pop
or
cmpsl
xor
mov
xlat
pop
jo
ss
mov
fildll
aaa
dec
pop
dec
jg
cwtl
cmpsb
push
push
add
sub
adc
lahf
mov
push
shl
pop
push
mov
cmp
xchg
sti
je
sub
addr16
pusha
inc
adc
shl
xchg
stos
repnz
arpl
cmp
cmpsb
aaa
mov
aas
pop
jle
ficoms
mov
inc
subl
ret
inc
xchg
adc
sub
fsubp
mov
xchg
inc
adc
div
data16
test
sbb
fbld
cmpsl
icebp
gs
push
jno
pop
std
int3
idiv
and
dec
mov
outsl
loope
xchg
xor
sar
mov
cltd
decb
sbb
add
sub
push
test
adc
outsb
mov
xchg
or
pop
in
add
mov
push
pop
or
dec
mov
jmp
pop
push
stos
pop
out
out
les
std
lahf
ja
arpl
adc
stos
and
loopne
push
test
adc
fabs
fucomp
xlat
mov
pop
int
push
adc
bound
jge
lods
pop
iret
iret
ljmp
cmpsl
ja
lods
mov
scas
mov
and
js
outsl
adc
js
mov
setle
jne
add
call
adc
js
jns
push
stc
das
addr16
mov
mov
jmp
aas
cmp
testl
pop
xlat
pop
cmp
pop
ret
jno
jp
mov
icebp
adc
stos
or
cmpsl
pop
ss
inc
mov
sbb
jb
jnp
aas
arpl
in
cli
ret
decl
icebp
or
data16
push
jnp
jnp
gs
mov
sub
push
mov
jo
pusha
pushf
mov
jmp
push
bound
cwtl
push
mov
cmp
fistpll
pop
outsl
xchg
aas
out
jne
push
push
nop
jg
test
sti
addl
inc
jno
fnsave
inc
iret
add
shr
sbb
call
in
incb
adc
sti
hlt
paddusw
ret
mov
and
mov
push
mov
data16
pusha
das
or
clc
jmp
loop
pop
iret
mov
cld
fdivp
repz
stos
jb
pop
add
int3
gs
mov
push
test
xorb
xchg
icebp
jo
inc
jnp
scas
push
out
sbb
fwait
bound
imul
out
outsl
daa
cmc
js
inc
aas
xchg
dec
jnp
and
pop
mov
jp
mov
pop
xchg
and
pop
and
insl
lret
incl
out
pop
hlt
adc
jnp
repnz
mov
cmp
fdivr
mov
loopne
adc
je
xchg
mov
cmp
notl
sbb
dec
stc
shlb
cmp
sbb
mov
imul
ret
dec
mov
mov
insl
ljmp
fwait
pop
xor
dec
hlt
mov
xlat
and
mov
cmp
or
mov
cmp
lahf
mov
mov
fwait
jp
cmp
and
fisubs
fnsave
leave
and
cli
push
fucom
mov
xchg
jne
idiv
xchg
aad
aam
xor
or
dec
int3
mov
stos
out
shll
and
stos
dec
pushf
lret
add
xor
sub
fisubrl
jnp
inc
jnp
xor
std
jge
mov
hlt
lcall
cld
mov
xlat
push
fimull
rcrl
add
sti
es
adc
mov
dec
mov
pop
adc
stos
out
insb
cmpl
test
jno
dec
loopne
fucomip
int
xchg
mov
scas
jp
cmp
mov
mov
lahf
push
mul
sub
xchg
xor
xlat
jnp
stos
je
shlb
fstl
pop
jp
fisttps
lea
jbe
mov
sbb
push
call
or
or
mov
adc
les
test
dec
jae
outsl
pop
cmpsb
repz
ret
mov
and
jg
dec
popa
sbb
fsubrs
shll
push
mov
jge
xor
adc
lods
in
mov
or
lods
int3
push
rclb
int
jge
push
or
std
popa
mov
pop
ret
addl
mov
in
lcall
fsts
mov
sbb
ret
jg
jno
mov
fcmovnu
mov
std
in
sbb
fsubrl
lock
mov
push
lcall
clc
xchg
xchg
dec
inc
xchg
add
inc
shrb
sti
sbb
mov
int
inc
pusha
imulb
adc
mov
repnz
dec
fwait
xchg
dec
jnp
jo
and
mov
lret
and
mov
xchg
xchg
outsb
push
jnp
jmp
shll
shll
lock
decl
mov
cld
sub
lods
in
xlat
fmull
jo
mov
mov
mov
xor
rol
mov
add
call
inc
andl
loope
inc
add
cmp
pop
pop
xor
mov
mov
dec
pusha
push
ficompl
cmp
call
add
xchg
int3
adc
fisttpll
xlat
in
fcompl
or
rclb
test
cmp
fsubrl
icebp
adcl
stc
and
jns
xor
push
xchg
jb
lea
xlat
pushf
push
insl
bound
adc
fs
fmuls
fiaddl
mov
push
adcb
jb
inc
add
inc
stos
jge
jle
int
ret
mov
arpl
in
jo,pt
out
jae
repnz
out
stc
les
mov
shl
mov
add
mov
pop
jp
aaa
xor
ds
in
sub
jg
fisubl
jnp
repnz
cmc
or
clc
add
or
or
rolb
sbb
daa
sub
test
mov
sub
aaa
jne
push
adc
jne
mov
in
jge
dec
arpl
jmp
repz
lahf
pusha
xchg
xchg
leave
scas
icebp
bound
fisttps
out
adc
inc
mov
shll
js
dec
arpl
jecxz
rcll
addl
frstor
pop
popf
outsl
insl
mov
push
std
lret
int
data16
fs
sub
aam
stos
and
shlb
shrl
xchg
and
loopne
test
inc
xor
cld
movsl
push
repz
out
mov
mov
out
add
out
int
loop
mov
filds
xor
jae
xchg
movl
cs
mull
sub
cli
outsb
and
dec
movsb
and
cld
xlat
pop
out
mov
fstl
insl
imul
addb
and
out
push
testl
sbb
scas
xor
test
fldl
and
testl
stc
or
push
xchg
mov
sbb
pop
push
push
jnp
mov
loop
dec
push
fnstcw
int
adc
fisubrs
sbbl
int
push
fiadds
mov
fildll
pushf
cs
fisttpll
jp
daa
mov
pop
and
aas
fwait
shrl
lret
lea
pop
es
pop
mov
pop
pop
xor
iret
iret
pusha
cwtl
ja
jmp
mov
push
call
mov
lea
lret
mov
cwtl
xchg
arpl
push
lock
mov
adc
xchg
sub
das
push
imul
nop
stos
fmulp
hlt
mov
lret
ret
xor
add
mov
ficomps
fdiv
and
in
incb
leave
out
stos
mov
mov
mov
dec
sub
stc
mov
xchg
std
mov
imul
ja
mov
lds
push
test
pop
pop
mov
lret
pop
neg
lret
mov
jl
dec
icebp
popa
fs
iret
into
mov
add
lret
or
cmp
mov
pop
sub
das
cmpsb
sub
cli
iret
mov
dec
movsb
mov
xchg
and
popa
lret
imul
rcl
popf
hlt
cmp
pop
ffree
sbb
cmc
xchg
in
mov
jae
push
mov
jl
xchg
test
nop
outsb
fdivs
sub
pop
sbb
out
inc
clc
lea
xor
lock
sub
mov
sti
cs
enter
xchg
rep
push
jecxz
popa
jno
fcmovb
pop
imul
cli
out
xchg
rcl
mov
mov
inc
insl
sub
or
aas
imul
scas
jecxz
or
insb
aaa
xchg
shl
mov
or
push
pop
mov
adc
movl
jnp
outsl
sbb
nop
insl
mov
loop
icebp
iret
ret
mov
shll
jecxz
cwtl
cmpsb
cmc
stc
lret
mov
mov
mov
push
pop
out
mov
mov
loope
mov
mov
push
scas
jge
roll
ds
cltd
in
sbb
arpl
cmp
ret
pop
pushf
in
mov
push
mov
ljmp
fcmovne
stos
cmp
add
cmpsl
std
push
and
js
jae
das
leave
ret
mov
xor
enter
mov
imul
imul
and
ljmp
sahf
cmp
xor
call
out
rclb
idivl
lahf
push
rorb
test
lahf
rorl
jmp
pop
pop
or
aas
gs
sbb
pop
movsb
mov
mov
xor
fdivrp
cmpl
jae
sti
add
mov
movsl
jecxz
fcmovb
les
xor
mov
mov
pop
jl
jbe
mov
mov
imul
dec
mov
in
test
adc
xorb
out
aam
mov
shr
fdivs
or
sbbl
xchg
cli
mov
push
enter
in
xchg
mov
add
cli
ror
sub
ds
lods
sub
dec
icebp
or
mov
div
insl
mov
or
jno
stos
cmpsb
adc
addr16
or
shl
shll
add
adc
mov
sub
mov
inc
stc
cmc
cs
xor
xlat
scas
adc
int
rcrb
ljmp
hlt
xor
bnd
sub
cmp
jbe
rcl
cwtl
dec
nop
outsb
xor
jo
orb
movsb
mov
xchg
cmp
cmpsl
pusha
rol
je
insl
adc
popf
mov
pop
or
fsub
mov
icebp
sar
xor
jo,pn
add
inc
std
imul
mov
in
repz
nop
cmp
in
stc
addb
jae
sti
test
push
test
enter
arpl
jns
push
test
bound
adc
data16
fadd
cmc
lret
jecxz
jb
pusha
std
fsubl
add
xlat
out
push
pop
je
adc
jo
jno
mov
mov
pusha
mov
sub
xchg
rcll
aaa
inc
lret
jp
push
inc
mov
out
pop
cmpsb
loop
pop
js
icebp
add
aam
clc
fidivl
daa
jg
mov
push
sub
jno
ja
mov
mov
push
lret
jae
jge
mov
jl
xor
shrb
push
jle
and
adc
add
lahf
mov
gs
add
or
pop
fiaddl
pusha
cmp
movsl
insb
add
scas
lea
sbb
adc
and
mov
adc
jae
sbb
dec
fistps
sub
push
jg
mov
mov
add
push
je
outsl
pop
rclb
sbb
iret
sti
or
cmp
test
jnp
adc
push
in
jno
mov
jp
fisttpll
fisttps
mov
lcall
aaa
jo
loop
or
outsl
in
xlat
mov
mov
mov
ljmp
inc
sub
cld
aaa
addl
mov
mov
fists
cs
and
cmpsb
cmp
paddsb
jno
pop
mov
lds
xchg
das
imul
push
fisubrl
xor
mov
iret
out
jbe
aaa
push
xchg
ret
mov
push
xor
xchg
xchg
sti
pop
in
mov
inc
pop
repz
sub
out
mov
test
jp
fisubrs
pusha
xor
bound
jg
fwait
cmp
push
push
cmc
rclb
scas
jg
loope
ret
inc
xor
lea
loope
xor
sub
sub
ja
lahf
ret
inc
pop
jnp
push
inc
jae
jns
jns
mov
jecxz
scas
out
cs
sbb
daa
sbb
xor
or
lcall
add
icebp
push
jmp
jb
pusha
mov
hlt
aaa
pusha
in
psraw
cld
lods
aaa
mov
cmp
add
pop
cmpps
mov
mov
mov
mov
push
dec
sub
shr
shlb
stos
sbb
mov
jo
push
stos
push
jne
repnz
mov
adc
test
pop
lods
pusha
popf
shl
mov
lahf
fcoml
sbbb
or
dec
or
mov
mov
loopne
xor
in
cmc
dec
loop
xchg
jle
ljmp
outsl
fstpt
mov
dec
iret
inc
rclb
sub
fdivrs
or
cmp
ja
dec
mov
imul
push
cmc
sub
sbbl
sub
or
mov
sub
push
dec
mov
mov
gs
jbe
cmc
push
pop
mov
repz
repnz
std
mov
loope
aad
hlt
icebp
ror
mov
in
test
dec
mov
mov
sub
std
or
jno
lret
adc
mov
mov
jecxz
scas
fildl
and
pushl
dec
and
fdivs
stos
repz
sarl
jbe
push
mov
pop
adc
mov
inc
add
into
jo
in
int3
dec
dec
mov
mov
sarl
mov
push
sbb
jnp
arpl
out
xor
fimuls
popf
lods
mov
inc
je
outsl
jne
jle
hlt
push
cmp
iret
mov
sub
add
stos
jb
cmp
outsb
jae
out
flds
iret
mov
jnp
mov
xchg
dec
inc
adc
js
jecxz
repnz
in
sti
gs
fstps
or
jg
rcrl
mov
scas
addr16
fisttpl
rorb
cli
bound
shll
push
popa
addr16
sbb
xor
in
push
or
mov
mov
jae
and
out
cmpl
fistl
push
mov
int
jle
dec
loop
repnz
es
test
arpl
xchg
push
pop
and
pop
and
ja
xlat
stos
mov
cld
aas
pop
pop
mov
gs
addr16
mov
mov
mov
pusha
dec
insl
xlat
jnp
xlat
mov
mov
out
int
inc
iret
xorl
sub
fwait
notb
add
popa
fmul
sub
dec
jae
lret
loopne
cmpsl
lods
sbb
push
mov
cmc
divl
sbb
pusha
mulb
or
pop
ret
lcall
jecxz
into
inc
cs
cltd
in
cmp
xor
jo
xchg
sti
emms
dec
call
fcomps
fisubrl
sbb
popf
xchg
rep
inc
and
xor
or
lock
mov
mov
lahf
pop
push
in
push
ficoms
add
jg
adc
out
dec
fsubrl
aam
bound
repz
fldz
ficompl
cmp
test
mov
fistpll
ficompl
js
cmpl
rclb
sahf
pop
shrb
jae
ret
out
pop
inc
xor
fiadds
loop
xchg
push
aam
aam
add
dec
and
push
gs
xlat
push
pop
lret
pop
push
mov
loope
pusha
inc
mov
cmp
jle
add
divb
sub
xor
insl
mov
adc
gs
sub
sti
inc
notb
pop
and
xor
and
xchg
mov
or
jns
sub
dec
adc
aad
rol
mov
shll
cs
pop
cli
pop
adc
push
xor
add
sub
popa
in
xor
push
call
push
cmp
shll
push
lcall
popa
sbbl
in
and
push
xor
add
add
stos
or
jmp
add
ljmp
stos
movl
test
xor
ds
add
stos
and
xchg
and
lock
loope
xchg
adc
mov
xor
aad
mov
ljmp
xchg
bound
test
mov
mov
inc
mov
sub
aaa
cltd
pop
fisubrl
icebp
cmpb
mov
jmp
mov
jmp
imul
sub
mov
inc
xor
mov
or
xor
fwait
in
or
aas
into
pop
cmc
push
shlb
add
roll
cmp
or
stc
popf
jnp
cmpsl
pop
jbe
sbb
test
divl
subl
dec
fcmovu
and
lahf
dec
dec
fdivl
inc
inc
or
loopne
mov
cltd
or
mov
fwait
int
adc
cmpsl
inc
cmpsl
push
fsubrl
pop
es
icebp
dec
dec
loope
fwait
xor
or
fistpll
lcall
inc
aam
fidivrs
inc
push
shlb
fidivrl
es
cmp
or
out
cmpsb
js
ret
xor
push
loop
cmpsb
fsts
dec
int3
rcll
mov
test
or
inc
mov
and
fldenv
sub
mov
xor
lock
add
aaa
xchg
ret
mov
push
fwait
or
push
mov
mov
mov
xorl
bound
fistpl
dec
xor
les
mov
adc
mov
add
out
push
mov
out
adcb
mov
and
out
and
jae
bound
fiaddl
push
into
outsl
inc
mov
add
jmp
jmp
andl
daa
and
xor
inc
push
sub
fisubs
enter
pop
stos
pusha
cmpsl
xchg
aaa
test
xchg
ss
movsl
push
sub
sbb
push
mov
xor
or
imul
div
mov
xchg
rclb
repz
pusha
adc
or
repz
inc
mov
pop
pusha
out
push
add
sub
sbb
mov
ss
js
pop
mov
mov
cmp
repz
mov
lret
jl
push
cmp
arpl
aas
cmpsl
or
push
push
inc
stos
push
loop
jbe
leave
ja
inc
cltd
and
mov
icebp
rcrl
sub
in
xlat
xor
jb
cmpsb
or
clc
jle
fidivl
andb
ljmp
inc
loope
inc
jb
sub
adc
mov
mov
arpl
jo
push
and
sub
in
popl
stos
fisubs
add
push
scas
mov
cmc
mov
mov
or
fsubrp
es
popa
or
adc
push
mov
enter
adc
xchg
push
fldt
outsb
stos
pop
cmp
lahf
pusha
dec
jg
add
mov
mov
stos
aas
stc
cmpsb
loopne
and
mov
test
cwtl
cmp
pusha
or
cwtl
imul
idivl
push
loope
cmpb
xor
ja
sub
and
mov
push
mov
xlat
std
pop
dec
sarl
mov
xor
ds
in
pusha
dec
adc
mov
sbb
fucomp
push
adc
dec
or
int3
and
add
pusha
and
mov
adc
icebp
mov
xor
or
cmpsb
xchg
push
cmpsb
js
scas
xor
in
xor
push
movsl
push
test
outsb
adc
sbb
push
scas
loop
mov
repnz
mov
inc
inc
shll
mov
xchg
sbb
inc
push
lret
lret
jnp
scas
or
add
cmp
push
and
adc
and
xor
repnz
or
push
mov
arpl
mov
or
ljmp
xor
fcomps
fadds
je
rolb
and
xor
call
mov
nop
outsl
aam
and
jmp
and
and
mov
and
mov
mov
hlt
sti
bound
jnp
xor
add
cmp
and
rol
jae
xor
mov
arpl
aad
rcrl
xchg
dec
outsl
int3
popa
jle
cmp
dec
mov
and
sbb
add
es
imul
push
jae
mov
lret
mov
fbstp
enter
fsubr
stc
jp
push
loopne
xchg
sub
rcl
out
imul
pop
dec
faddl
test
dec
xchg
mov
jae
es
icebp
mov
scas
pusha
lods
jb
mov
xchg
orl
xchg
daa
mov
clc
mov
loopne
sub
outsl
stc
xchg
mov
fisubs
jmp
lods
imul
add
es
inc
sbbl
mov
xchg
ret
and
ret
lret
push
xchg
xchg
sub
mov
xchg
mov
lret
mov
addl
cmpl
mov
popa
subl
inc
mov
jae
dec
mov
test
loope
and
pusha
sbb
test
stos
push
out
mov
mov
push
jbe
jl
into
inc
push
jnp
arpl
int
xor
xchg
mov
push
push
mov
mov
out
inc
sub
adc
sbbl
arpl
push
out
xchg
push
add
ret
mov
out
dec
lea
cld
cmp
ss
cmpsl
jmp
aad
adc
push
nop
cltd
lock
inc
cmp
aad
outsl
insl
xchg
popl
and
arpl
sub
push
xchg
pusha
pop
cli
test
xchg
pushf
test
jge
or
mov
adc
sub
mov
add
cmp
or
dec
cmpsl
aad
xchg
orl
rorb
in
cmpsb
lea
icebp
fildll
lock
repnz
lret
dec
add
push
xchg
jno
mov
cs
jg
repnz
sti
mov
lods
fadds
repz
andb
cmp
cmp
push
inc
dec
decl
dec
sbb
inc
mov
inc
mov
dec
stos
inc
push
outsl
aad
push
cltd
stc
mov
and
lock
xor
cmpsl
adc
out
add
shl
and
aaa
pop
jae
push
js
xor
out
mov
ss
stos
add
pop
cmp
mov
mov
xor
iret
lcall
shll
mov
mov
leave
into
ss
movsb
or
mov
dec
mov
lods
imul
xchg
mov
xor
lahf
push
ret
jne
adc
push
aas
scas
loopne
iret
out
lods
adc
lea
mov
scas
mov
sbb
ret
sbb
les
lret
xchg
call
adc
popf
test
pop
sub
jl
xor
outsb
jmp
loopne
and
stos
ret
xor
and
mov
inc
push
das
fdivrp
shl
cmp
mov
iret
xchg
sub
mov
jb
or
das
icebp
xor
mov
cmp
in
mov
dec
mov
mov
add
jmp
ret
mov
mov
inc
lret
mov
pop
pusha
push
in
sahf
inc
out
pop
test
stos
movsl
add
in
inc
jg
call
fadd
daa
insl
and
inc
mov
push
mov
loopne
cmp
rcr
push
mov
or
xchg
movsl
mov
and
ret
loopne
xlat
aad
es
test
xor
jnp
and
pop
ret
ret
jne
pop
push
mov
push
repnz
cmp
out
arpl
sbb
mov
mov
cmc
inc
and
loope
cmp
sahf
jmp
mov
mov
xchg
add
mov
sub
lcall
cmp
inc
mov
roll
test
push
outsb
mov
rcrb
jns
xchg
clc
mov
js
ret
pop
jecxz
mov
inc
jnp
jnp
add
repz
mov
stos
fwait
ret
push
xor
shr
loopne
mov
xor
mov
out
push
jle
mov
xor
push
neg
pop
dec
pandn
cmpsl
hlt
sbb
xor
mov
ret
pop
pop
std
insl
hlt
mov
xchg
cs
jecxz
mov
rorl
push
out
repnz
mov
xchg
popf
xor
nop
and
aad
or
in
dec
dec
clc
rcll
scas
jmp
cmpsl
jnp
mov
lret
loop
and
jg
out
jp
outsl
mov
in
test
cli
std
adc
in
test
mov
xstore-rng
cmpsl
ret
loop
pop
test
stos
stos
cmc
adc
inc
clc
insl
ret
xchg
cmpsl
fldl
movhlps
std
mov
pop
repz
pushf
flds
dec
mov
jmp
sbb
int3
pop
xor
or
lods
ret
daa
popf
pop
jmp
notl
push
fsts
addr16
and
mov
cmp
loopne
out
pushf
jp
icebp
and
loopne
push
add
or
push
pop
mul
lods
addr16
xchg
repz
das
dec
ret
popa
xor
imul
ljmp
int3
nop
fnstsw
xlat
enter
push
jmp
fsubs
jg
pop
fdivs
stos
lcall
mov
or
pop
add
push
cltd
lahf
and
mov
jle
xor
sub
jmp
scas
jecxz
mov
outsl
sti
cmc
add
mov
push
loope
pop
out
leave
cmc
jbe
and
pusha
xor
mov
notb
test
pop
xor
ja
push
jecxz
test
shll
or
repz
xchg
add
mov
loop
add
in
and
push
out
lods
add
inc
daa
call
cmc
lret
lock
and
inc
cmpsb
andb
and
inc
stos
lret
ret
fmulp
imul
sbb
movsl
mov
lret
dec
or
cmp
push
mov
pusha
pop
inc
mov
out
push
insl
add
int
loop
pusha
push
enter
divl
ficoms
mov
test
cld
add
mov
mov
push
dec
sub
dec
andb
nop
ret
or
testb
xchg
ss
push
imul
test
sub
mov
sti
mov
dec
sti
push
addr16
and
add
stos
out
mov
pop
fistpl
pusha
xor
mov
jg
fcoms
loope
mov
xor
push
fstpl
pop
push
and
adc
cmpsl
push
inc
cmp
es
mov
pop
inc
inc
jno
daa
cmp
xchg
insb
or
and
inc
repnz
fadds
mov
xchg
lret
rcl
decb
mov
fisttpl
xor
dec
cmc
pop
enter
push
cmpl
cltd
andl
push
pop
jnp
fsubr
imul
outsl
in
aas
imul
add
xor
push
fimull
in
rep
popf
cmp
or
insb
jg
ss
es
sub
stos
out
ds
mov
and
jo
outsl
rclb
and
cmc
movsl
xchg
outsl
and
fadd
stos
loopne,pn
frstor
movsl
fnsave
je
add
roll
xor
mov
scas
push
or
addb
pop
movsb
cmp
xor
repnz
pop
xchg
stos
divl
push
jnp
jb
fildll
lea
ret
or
shlb
out
pop
mov
xchg
xor
lcall
outsb
mov
out
rorb
icebp
ja
rcrl
aad
mov
arpl
and
mov
in
mov
cmp
movsb
clc
xchg
out
fnsave
arpl
dec
and
scas
push
je
mov
ljmp
sbb
push
push
cmpsl
mov
mov
call
mov
push
mov
adc
or
xor
cmpsb
ficoml
xchg
mov
pop
mov
and
xlat
xor
movsb
pop
sbb
cs
push
ss
int3
rcl
movsb
lret
in
add
mov
or
adc
ret
jecxz
push
fldl2t
fs
cmpsb
jo
mov
fldenv
cmpsb
outsl
jae
cmp
jecxz
jbe
stc
lahf
sar
fdivl
lret
xor
out
call
pop
and
cmp
add
jmp
xchg
sar
popf
pop
mov
push
ss
ret
inc
test
inc
sub
lods
nop
push
cmp
test
das
loop
xlat
xlat
addr16
jnp
pop
inc
and
pop
fists
insb
adc
repz
push
repnz
std
movsl
sahf
xlat
sub
xchg
jno
push
out
shlb
roll
cld
dec
cmp
shr
dec
inc
xchg
cltd
aas
fbld
sub
repnz
andl
jecxz
fsubl
pop
xor
pushf
mov
mov
xchg
add
mov
lret
test
lret
jno
fstl
les
hlt
movsb
js
lcall
test
dec
out
pusha
cmpsb
pop
lret
dec
es
lret
sbb
xchg
mov
iret
pop
sti
cs
mov
adc
add
and
iret
pop
lds
gs
stos
lret
cmp
mov
push
push
fsub
ret
inc
xchg
stos
xchg
fs
bound
mov
scas
push
dec
mov
push
mov
push
inc
mov
xor
bound
cmp
push
aas
cmp
fnstenv
pop
in
lods
and
dec
shlb
cmp
sbb
lret
xchg
mov
jo
jnp
lods
xchg
rcrl
sub
aad
aad
sti
in
lods
loope
aad
push
xchg
fimull
fdivrl
jo
ret
das
dec
pop
jg
mov
push
in
inc
and
dec
xor
mov
fwait
aad
dec
or
mov
ret
dec
and
insb
sahf
sub
mov
xor
inc
add
jae
popa
mov
repnz
sbb
ja
and
pop
lock
jns
inc
repz
imul
inc
ljmp
out
push
movsl
out
cmpsb
xor
push
call
into
push
and
ds
in
add
jge
lret
scas
shll
mov
data16
sub
lret
int
sahf
xor
inc
je
inc
push
sub
mov
and
xchg
add
adc
jmp
mov
std
or
inc
jnp
and
dec
repnz
fnstsw
popf
inc
mov
add
xor
cmc
xlat
and
stc
aam
sarl
pop
ror
fcmovne
cs
mov
popa
jnp
ret
mov
mov
mov
fstps
ljmp
and
or
lods
inc
fcos
lds
enter
add
loop
jae
scas
in
sub
push
test
dec
insl
add
jo
or
xor
pop
mov
jl
inc
mov
dec
pop
mov
xlat
out
enter
push
mov
movsb
mov
sub
das
bound
pusha
cmpsl
stc
pop
pop
daa
xchg
or
jae
push
sbb
lods
bound
popa
sti
movl
inc
clc
jne
cmp
scas
pusha
xorb
sub
test
fwait
cmp
call
or
aam
cwtl
dec
mov
sbb
adc
scas
outsb
mov
mov
lahf
and
jnp
mov
arpl
in
inc
out
dec
ficoml
notb
std
mov
movsb
sbb
stos
scas
jnp
icebp
xor
cmp
ds
jb
jbe
ret
pop
loop
scas
and
inc
lock
fistps
jge
jecxz
cmc
xlat
outsl
adc
call
or
aaa
mov
xorl
xlat
xor
in
icebp
mov
pop
in
hlt
shll
fwait
and
add
mov
xchg
stc
and
mov
xchg
or
jle
xchg
inc
ljmp
hlt
pop
mov
lods
or
mov
movsb
movsb
pop
fs
insb
mov
mov
test
jne
insb
mov
repz
inc
outsb
push
pop
aas
mov
pop
call
pop
cmp
mov
js
pop
stos
mov
jbe
cmpsb
cli
inc
pop
pop
mov
lahf
jecxz
mov
mov
jae
popf
adc
das
dec
cli
js
push
sarl
scas
adc
sbb
je
add
push
pushf
ret
daa
stos
push
cli
leave
pop
mov
xchg
dec
push
sub
pushf
dec
pop
mov
cmp
jl
mov
sbb
arpl
push
inc
pmulhuw
je
fsubrp
cmc
lret
mov
movsb
push
stos
mov
cmpsl
xor
in
jns
push
cs
mov
shll
and
adc
out
cmp
mov
xlat
iret
lock
imul
rol
pop
or
outsl
fstl
jp
nop
jg
idivl
popl
fimull
jmp
cli
inc
jo
mov
subl
insl
xor
icebp
dec
mov
jnp
xchg
dec
add
or
sub
mov
push
cmpsl
and
xchg
push
stos
lds
jmp
into
pusha
and
push
jecxz
imul
fdivp
icebp
cmpsb
or
adcl
fdivrs
jecxz
jae
inc
mov
loop
in
stc
xchg
mov
add
mov
sub
sub
dec
enter
fsubrl
fldl
repz
or
xchg
or
and
sub
add
xlat
cmp
out
sbb
test
sahf
fst
bound
adc
sti
xor
push
lret
popf
fildl
out
in
aad
mov
lahf
pop
inc
sub
add
arpl
out
pop
adcl
insb
sub
arpl
sbb
mov
or
push
icebp
into
cmpl
sar
inc
pop
test
xor
jecxz
call
pusha
push
mov
mov
lret
or
add
into
fnstenv
outsl
pop
push
push
inc
popf
push
dec
test
mov
mov
icebp
cmc
out
add
mov
pop
or
mov
idiv
push
inc
mov
adc
xchg
push
in
scas
hlt
scas
mov
sbb
and
xchg
xchg
shl
popa
mov
mov
pop
subb
push
pop
push
mov
sbb
out
jecxz
lea
xchg
cs
daa
xchg
push
ret
pusha
cmp
mov
or
mov
push
dec
push
pop
scas
jo
call
sahf
and
mov
fistps
cli
outsl
add
pop
mov
push
pushf
xor
imul
repz
bound
mov
jns
jbe
dec
in
xor
ret
cmc
lods
jle
lahf
loopne
mov
test
mov
and
arpl
and
test
fmulp
xchg
push
fcmove
jge
mov
push
sub
idiv
rdpmc
mov
mov
and
shll
fwait
idiv
out
sub
mov
mov
add
sbb
and
adcb
jmp
bound
jmp
in
lcall
enter
sbb
push
movsb
icebp
fidivrs
push
and
in
xor
push
push
xchg
mov
jg
bound
sarb
fstpt
mov
test
rcll
out
jp
cmpsl
sub
adc
es
fwait
outsl
push
pushf
dec
xor
inc
subb
shlb
xchg
cmp
and
add
mov
cmp
push
or
dec
lret
sti
add
loopne
and
inc
addl
imull
mov
pop
sbb
push
add
out
pop
outsb
mov
lret
roll
pop
xchg
shrl
pop
cmpsb
mov
mov
xor
int3
into
jle
sbb
addr16
add
ret
pop
test
xchg
out
mov
outsl
rcll
push
xchg
mov
ja
jecxz
mov
jp,pn
push
xor
pop
adc
mov
jb
shl
push
test
lret
sti
sub
pop
fisubrl
or
repnz
fs
cmpsl
push
stc
iret
xchg
test
pop
jae
cmpb
ljmp
in
mov
inc
mov
mov
adc
xchg
lcall
cltd
mov
xchg
stc
dec
rclb
jecxz
ror
lds
xchg
fildll
and
xlat
bound
xchg
stos
stos
pusha
loopne
cmp
xchg
mov
or
add
adc
dec
iret
pop
mov
push
xor
fiaddl
pusha
xchg
pushf
pop
aaa
sub
sub
es
or
add
mov
ror
addr16
push
cwtl
outsb
jae
imul
jge
mov
inc
xchg
sahf
ret
push
std
enter
or
int3
loope
into
repz
xchg
jne
sti
add
jecxz
jo
outsl
mov
mov
out
sarb
add
cwtl
aad
sahf
mov
shlb
stos
inc
out
imul
std
add
dec
dec
xchg
fcomps
cmpsl
jbe
cmp
jmp
or
inc
scas
jns
pusha
mov
add
xchg
add
rcl
cmpl
adcl
cmp
mov
push
pop
mov
cmpsb
shll
push
repz
mov
cmp
push
pusha
cld
push
or
inc
call
outsl
rcll
xchg
cwtl
imul
dec
fwait
sti
xlat
xor
jmp
xor
andl
xlat
inc
add
outsb
jecxz
add
out
xor
scas
ret
xchg
add
das
add
cmpsl
lea
sbb
and
pop
xchg
aam
mov
xor
ret
mov
rcrl
jb
cmpl
jecxz
xor
imul
pop
ret
push
neg
and
jg
ret
add
push
push
dec
ret
vpsllq
lds
icebp
out
push
add
push
fistpl
hlt
pop
add
jg
pop
cmp
xor
push
fistpll
mov
ja
sbb
shl
mov
fwait
adc
jno
dec
fwait
push
fildl
jno
add
push
jo
std
lods
cltd
dec
add
sub
movsb
sbb
cld
pusha
iret
pushf
test
fiadds
cltd
mov
loopne
jne
scas
int
mov
mov
xlat
cmc
or
cmp
push
add
mov
dec
xor
test
lahf
cmp
addr16
xor
add
mov
add
inc
sbb
int3
add
shrl
inc
and
and
shl
je
arpl
mov
sbb
xlat
js
xlat
cmpsl
mov
pop
pop
addb
std
xor
jo
sbb
mov
dec
leave
test
adc
lods
mov
sub
or
jb
push
inc
xchg
rol
and
cmp
xlat
mov
adcl
test
sub
outsl
and
jo
and
ret
mov
stos
jo
push
iret
sub
adc
push
xor
in
rcrl
add
pusha
out
iret
xor
jne
jp
fwait
mov
loope
ljmp
scas
xor
fisttps
ficoms
cs
cmpsl
cmpsl
mov
aas
loope
xor
adc
dec
jae
inc
mov
push
lret
mov
js
or
mov
or
push
mov
icebp
inc
and
mov
addr16
sar
pop
into
jns
idivb
fwait
xchg
scas
insl
ret
xor
lahf
pop
xlat
mov
mov
decb
fstpl
call
or
repnz
jae
bound
mov
mov
std
lods
dec
lret
imul
cmpl
cmp
mov
popa
loope
imul
add
xor
or
sbb
mov
mov
lea
fbld
xchg
pushf
call
lock
xor
cmp
pop
xor
push
aad
xchg
insb
pushf
dec
mov
and
push
fcmovbe
je
mov
shrl
test
stos
sahf
cs
mov
cmc
cld
addl
scas
xor
jae
pop
jl
jmp
fucomp
xor
inc
jae
mov
pusha
stos
mov
push
inc
mov
outsb
or
out
pusha
mov
push
lock
inc
mov
sbb
dec
mov
add
or
outsl
call
outsl
frstor
jg
sbb
jg
mov
adc
in
rcl
stc
jg
or
idivb
xchg
jno
adc
jo
xchg
stos
outsl
mov
or
in
pop
mov
fiaddl
fucomi
leave
clc
lcall
jne
je
int3
mov
inc
aad
xorl
add
adc
stc
in
jmp
clc
ret
jmp
push
pop
mov
sbb
and
dec
cmc
insl
mov
mov
aad
push
add
push
add
jmp
push
cltd
cmp
cmpsb
pusha
and
movsl
inc
cli
mov
sti
jp
and
rclb
jns
out
jae
out
or
jnp
push
imul
mov
pop
xchg
and
ds
pop
xchg
ret
repz
add
push
cmp
addr16
lret
sbb
push
mov
fucom
icebp
cmpsb
cltd
jmp
fistpl
xor
mov
pop
mov
xchg
lods
mov
lret
xchg
cmc
vpmadcsswd
pop
mov
jno
add
clc
jge
lds
out
hlt
int
inc
bound
into
fisubl
ret
in
push
scas
cmp
cmp
mov
ret
divl
dec
shll
ret
mov
or
mov
repnz
mov
mov
es
lahf
scas
dec
ficomps
out
stos
adc
pop
mov
add
jl
iret
cmp
decl
push
jmp
add
add
fistpll
test
outsl
pop
in
jb
adc
pop
pop
adc
aad
loopne
lret
loope
pop
jp
or
nop
sub
jo
lock
jb
and
mov
sub
jmp
or
icebp
out
pop
cli
add
sbb
xlat
fcoms
fstpl
push
push
sub
push
jnp
popf
inc
jmp
inc
dec
add
or
push
aaa
mov
dec
dec
jae
cld
pop
mov
jmp
cmp
mov
and
mov
or
cmpsl
pop
cld
fcomps
cmp
jns
iret
test
lcall
pop
pop
cmpb
xchg
sarl
inc
loop
cmp
ret
or
stos
xlat
bound
mov
inc
test
scas
mov
pop
aad
mov
movsl
cmp
out
xlat
flds
rcll
ret
inc
push
jge
dec
lret
andl
ret
or
addb
and
mov
ljmp
loop
mov
and
sbb
fldcw
adc
mov
nop
or
fs
or
inc
pop
jne
lret
sbb
add
mov
ret
push
aad
outsl
lcall
inc
dec
movsl
loop
ret
mov
fs
mov
push
loop
lret
stos
aad
pop
jl
cmp
mov
int3
stc
xor
js
xchg
inc
ret
in
mov
pop
xor
pop
sahf
stos
neg
sbb
repz
cmp
or
jns
pushf
rolb
mov
pop
ret
xchg
xlat
aad
adc
lcall
lods
mov
fnstsw
sbb
stos
push
mov
dec
jmp
shlb
cs
sub
xlat
scas
xchg
ret
cmpsl
stc
and
xchg
sti
lods
in
pusha
jbe
lret
or
clc
hlt
pusha
lret
add
jmp
mov
shll
dec
andl
mov
icebp
push
jle
adc
push
xorl
inc
pusha
out
loopne
cmc
dec
xor
clc
jns
jp
and
leave
psubusb
jmp
test
data16
sbbl
mov
ss
cmp
or
out
rcr
imul
jecxz
adc
and
test
or
testl
ficomps
in
lret
pusha
lock
and
lret
cmp
lea
push
cmp
decb
clc
pusha
jmp
push
push
leave
sbb
imull
xchg
cmp
addr16
hlt
mov
pop
pop
rolb
and
inc
adc
jle
lahf
xchg
ljmp
mov
xchg
jecxz
subb
aam
mov
sbb
es
movsb
adc
cs
inc
cmp
mov
cmp
arpl
or
or
xor
fcmovnb
ucomiss
pavgw
adc
cmpsb
cli
iret
xchg
lret
das
loope
cltd
frstor
in
pusha
xor
jmp
mov
idivb
outsl
add
repz
and
shll
outsl
fists
xlat
in
jp
xchg
ljmp
xchg
stc
sub
pusha
repnz
push
dec
pop
rclb
and
iret
shl
fiaddl
xor
outsb
dec
dec
out
in
aam
dec
aaa
add
clc
lcall
test
out
mov
push
pop
push
roll
dec
push
mov
xlat
jno
fnsave
vpslld
shrl
repnz
pusha
push
xor
xchg
jae
movsl
push
repnz
mov
pop
mov
dec
inc
push
imull
push
out
mov
stos
push
add
adc
int
sbbb
inc
mov
repnz
addr16
stos
ss
cli
jb
shr
jge
xchg
fisubl
mov
rclb
mov
jae
inc
pushf
xchg
pop
std
or
data16
lahf
ret
xor
test
fwait
mov
xor
and
pop
mov
push
mov
jb,pt
fs
scas
inc
mov
orb
add
add
hlt
inc
out
aaa
dec
stos
pop
push
ljmp
std
dec
aad
xchg
adc
pop
or
fwait
in
cs
mov
ret
push
inc
adc
fildll
mov
sti
mov
scas
lret
push
daa
cmp
dec
dec
out
nop
stc
bound
es
ret
pop
xchg
das
cld
pop
dec
xchg
xor
jge
mov
xchg
ret
xor
ret
add
jecxz
adc
movsb
mov
mov
idivb
aad
outsl
orl
shlb
cmc
leave
mov
out
push
lds
ficoms
fstps
inc
repz
adc
mov
dec
xchg
or
icebp
loope
fisttpll
loope
sbb
mov
loopne
repz
lret
in
cmpsl
scas
aaa
add
add
add
cs
sub
jle
push
xor
push
xor
dec
mov
mov
iret
repz
gs
mov
add
push
imul
sub
mov
cmc
loop
scas
fisubl
shll
adc
adc
xchg
hlt
in
xchg
pop
sbb
pop
jb
inc
xchg
lods
test
mov
xor
mov
aaa
outsb
xchg
push
mov
nop
dec
repnz
mov
shlb
push
pusha
sbb
outsb
add
loop
stos
mov
lret
or
push
xchg
mov
pusha
lods
adc
dec
lret
mov
outsl
repz
movb
jg
cmpsb
lds
inc
movsb
fisttpll
pusha
mov
mov
stos
std
and
push
daa
cmc
lret
fdivrl
fucomp
or
imul
xchg
xchg
loopne
test
out
cmpsl
mov
lret
fdivrs
lea
lcall
adc
cmp
hlt
xor
cs
dec
push
adcl
lods
sti
negb
in
jle
xchg
jae
outsb
decb
add
repnz
xchg
inc
pop
lock
sbb
and
cli
cwtl
aas
sahf
iret
mov
ds
fstpl
inc
xchg
shrl
popf
icebp
push
std
psrlq
xor
ss
int3
fwait
in
lods
add
outsb
ret
sbb
sbbb
jae
mov
andb
ljmp
mov
mov
sbb
adc
add
int
sbbb
cmpsb
stos
xor
adc
add
scas
pusha
sub
pop
inc
xchg
pop
xchg
and
pop
mov
mov
add
pop
out
nop
stos
js
orl
mov
xchg
adc
outsl
ljmp
pop
lret
int
inc
mov
inc
and
std
or
fidivrs
jbe
cs
cmp
arpl
inc
scas
inc
adc
mov
sub
mov
mov
pop
xor
cmpsl
stc
repz
sub
mov
jo
xor
in
add
mov
xchg
stos
jg
push
mov
and
and
insl
add
stc
push
lods
rcr
xchg
mov
push
mov
jge
jne
aas
dec
and
jnp
ret
cmp
repnz
clc
sbb
inc
fwait
negl
fstp
mov
jg
ljmp
lahf
popa
lcall
test
iret
jmp
loope
fwait
mov
ja
ljmp
add
and
cmp
subl
test
lock
add
jmp
adc
nop
mov
mov
push
lock
pop
mov
lcall
sbb
arpl
out
push
inc
ljmp
in
push
lea
stc
push
ljmp
sub
add
rol
pop
popf
shll
call
fistps
cld
in
xchg
icebp
or
jmp
xor
sbb
cwtl
stos
stc
cmc
push
pop
or
movzwl
ret
sti
adc
push
addr16
adc
repnz
subl
inc
xor
mov
mov
push
lret
in
addb
fists
xlat
pusha
sbb
ljmp
mov
addl
jecxz
cmp
clc
or
mov
jecxz
testb
es
adc
aaa
xor
aas
sub
pop
nop
mov
lock
nop
insb
into
xor
stos
pop
cmc
clc
sti
lret
in
inc
jecxz
and
shll
mov
pop
and
sub
aas
mov
scas
jb
sbb
pusha
iret
pusha
hlt
rclb
push
inc
inc
jmp
out
jle
pop
jg
xorl
sbb
xor
dec
mov
add
sub
and
inc
cmp
mov
pop
pop
es
jb
scas
sbb
ffree
dec
and
arpl
xor
mov
aas
iret
mov
lds
imul
je
negl
cmp
mov
jno
rcrl
jg
scas
bnd
cld
popf
inc
mov
jnp
mov
mov
mov
mov
jecxz
inc
cmp
je
repz
mov
je
inc
andl
or
pusha
lds
das
xor
loopne
dec
scas
scas
inc
jp
lret
rorb
stos
and
or
pusha
inc
add
mov
and
dec
mov
cwtl
mov
fnstsw
adc
mov
mov
sbb
jae
cld
roll
loope
jecxz
mov
imul
test
or
jo
cmp
adc
xor
add
cmpsb
test
fcomps
adc
ss
and
call
sub
mov
inc
push
pop
popl
aad
lea
divl
or
dec
daa
inc
mov
jge
mov
hlt
push
or
pop
pop
mov
in
hlt
fildll
aad
sbb
shrl
lea
push
repz
sub
fildll
ret
or
lods
push
push
in
mov
mov
div
xchg
call
mov
mov
lods
push
mov
sbb
adc
xlat
and
clc
shrb
mov
pusha
mov
in
fadd
jecxz
jecxz
push
mov
cmp
mov
and
leave
sub
aad
push
and
mov
xor
add
pop
pusha
lret
popf
ljmp
or
stos
sahf
in
and
pop
pop
jge
test
mov
ds
fwait
dec
push
fbstp
mov
lods
loopne
and
jns
leave
or
cmpsb
mov
repz
dec
push
lea
and
mov
loopne,pt
or
mov
inc
push
mov
add
cmp
lret
daa
or
or
and
ret
mov
cmpsb
decb
mov
xchg
cmp
pusha
mov
mov
mov
add
add
push
loopne
or
sti
inc
cs
cmc
fists
xchg
add
fcompl
adc
xor
xchg
stos
lods
and
add
lods
fucom
lcall
aas
ljmp
dec
sub
nop
push
into
cld
das
or
add
iret
mov
push
ja
push
mov
mov
lahf
stos
mov
ss
test
jbe
push
cmc
sub
xchg
xrelease
push
push
sub
sbb
popf
cli
out
xlat
test
mov
cmpsl
stos
fcmovnu
jmp
aas
iret
push
ret
push
push
loop
ffree
cmp
sub
outsl
sahf
iret
ljmp
ret
pusha
cmp
cmp
icebp
fadd
pop
int
and
mov
ret
inc
push
pop
push
sti
andb
movsl
stc
fsubrl
and
add
cmc
cmp
movsb
fisubrl
ret
sub
js
pop
call
xor
cmc
jg
fnsave
fwait
push
pop
neg
jmp
pop
sti
mov
cs
xor
lret
jg
mov
clc
lods
sub
pop
dec
in
xor
out
xchg
repnz
cs
sub
dec
inc
push
sub
push
lcall
dec
cli
out
xlat
sub
add
rcrb
adc
xor
jo
inc
movsb
out
out
xchg
cld
dec
shll
outsl
sub
push
and
ss
jge
dec
loopne
ljmp
pop
add
lahf
out
adc
inc
xlat
es
je
pusha
out
mov
popa
add
pop
adc
sub
dec
add
mov
mov
fstp
aaa
fdivrl
insl
repz
clc
lock
loop
fdiv
inc
jmp
pop
mov
stos
aaa
xor
push
cmc
aam
sub
nop
lcall
ret
mov
and
jp
lock
stc
add
aas
mov
push
sbb
xor
push
ljmp
xchg
mul
imull
add
imull
ljmp
jp
icebp
mov
mov
xlat
push
clc
or
popf
in
gs
push
rorl
rcrl
mov
sti
adc
add
pop
testl
pop
fbld
ret
adc
ljmp
pop
xchg
cwtl
in
mov
or
shll
add
mov
jecxz
or
sahf
repz
lea
inc
lret
push
call
popa
fincstp
enter
add
and
loop
dec
mov
or
cltd
js
rcrl
repnz
in
xchg
mov
in
sub
xlat
popa
hlt
sub
xchg
add
popf
push
mov
xor
xchg
xchg
xchg
movsl
or
int
nop
fdivl
mov
movsb
test
out
inc
cmp
jo
lcall
mov
and
jg
jl
out
adc
test
mov
push
notw
sub
not
xchg
or
push
mov
pop
mov
cmp
inc
mov
mov
inc
jmp
xor
ret
or
lahf
fwait
and
mov
cmc
cmp
add
lcall
sub
fst
sti
jecxz
out
bound
jns
dec
push
test
pop
mov
lcall
pop
mov
or
ret
or
jbe
leave
xchg
fdivrs
xchg
sahf
dec
aam
sbb
fstl
repz
pusha
js
inc
jnp
pop
and
lret
fisttpll
icebp
push
fidivrs
stos
aas
gs
xchg
popf
rorb
mov
out
fbstp
push
jb
loopne
clc
xchg
ret
or
icebp
and
ret
in
jmp
xchg
stos
and
xor
addr16
and
xchg
popa
lcall
sti
jnp
lds
lods
mov
rcll
int
dec
sub
mov
int
aas
or
push
movsl
out
inc
cmpsl
cmp
dec
jns
pop
pushf
inc
mov
hlt
mov
inc
xchg
cli
cld
sub
andb
out
jnp
or
mov
dec
out
xor
pusha
test
aad
iret
or
ja
push
pushf
xchg
mov
stos
adc
pop
fcoms
inc
fisubl
int3
inc
call
push
xchg
fimull
xchg
arpl
mov
divl
adc
pusha
mov
ret
push
sbb
mov
jno
mov
sub
scas
shl
mov
movsb
pop
pop
xor
out
push
out
scas
and
fistpll
pop
cmp
fiaddl
cmp
jl
sub
clc
outsb
add
xor
xchg
sub
lea
int3
fs
xor
popf
mov
mov
add
xlat
in
xchg
std
cmp
repz
movsl
mov
jnp
fucomp
cmpsb
das
rcl
push
aad
insl
and
cs
and
push
jo
sahf
mov
dec
lcall
dec
fwait
in
or
or
sbb
pop
jno
movsb
std
mov
jge
not
pop
lcall
idivb
or
and
xor
mov
sbb
lret
jg
mov
mov
loop
imul
pop
jo
push
mov
daa
fmul
lods
cltd
fwait
test
int
jmp
clc
rcr
rcrb
out
fcmovnbe
cmpsb
loop
iret
shrb
jmp
fdivl
lds
lahf
mov
cli
mov
and
xlat
jno
clc
xchg
sub
lods
shlb
dec
in
mov
xor
mov
dec
push
mov
xlat
xchg
add
xchg
pop
cltd
cmpsl
pop
das
jae
xor
mov
cmpsb
cli
jl
push
sub
pusha
sub
and
pop
js
lret
inc
rorl
jmp
add
scas
andl
push
jae
xor
add
stos
dec
pop
leave
pop
mov
andb
lret
cs
push
lahf
sti
dec
adc
xlat
mov
scas
sti
js
pop
lret
ds
shll
int
xchg
mov
mov
mov
pop
add
mov
push
jno
mov
jbe
pop
dec
push
sub
adc
xor
icebp
outsl
ja
mov
pop
or
push
sahf
mov
cld
mov
enter
fmull
loop
pusha
ljmp
jnp
imul
mov
aam
and
into
cld
scas
pop
mov
int3
sub
repnz
pusha
popa
ja
xor
mov
ficompl
push
cmp
repnz
mov
test
pop
sbb
daa
sbb
loopne
mov
pop
loopne
mov
pusha
lods
dec
inc
cmp
push
push
add
jmp
and
repnz
imul
push
fcomip
call
adc
js
mov
test
mov
dec
ret
sbb
movb
push
pop
jge
inc
cli
cli
mov
and
xor
arpl
sbb
mov
sub
xlat
jge
mov
js
and
leave
ja
sub
mov
xor
sub
mov
aaa
lret
jb
cmp
xor
ror
jge
iret
xor
lock
sti
dec
lock
and
ljmp
push
cmp
jbe
in
aam
mov
ja
mov
mov
add
dec
jp
scas
jecxz
shll
shlb
call
jo
mov
dec
cmpsl
xlat
dec
aad
loopne
and
cmc
sbb
inc
inc
sub
clc
mov
mov
arpl
xor
mov
xor
dec
pop
jmp
cmp
ret
push
icebp
mov
in
popf
xchg
mov
pop
xchg
clc
scas
cmp
ret
mov
mov
fistpll
mov
mov
cmp
and
enter
cmp
outsl
sbb
adc
shrb
sbb
push
iret
or
jecxz
clc
ret
mov
std
sbb
in
in
or
pop
mov
push
sbbl
je
stos
arpl
push
ja
hlt
sbb
fldt
iret
xchg
bound
mov
mov
xor
scas
test
lret
cld
or
jmp
sub
adcl
adc
mov
adc
icebp
push
push
xchg
sar
jne
jo
mov
outsb
adc
push
repz
and
mov
mov
mov
push
ficompl
mov
in
jbe
int
sbb
inc
or
cltd
pop
jnp
jmp
sti
push
lret
call
out
sub
push
cmp
hlt
jbe
mov
push
out
fwait
clc
add
mov
ret
mov
movl
pusha
call
jp
leave
das
popa
sbb
icebp
and
push
repnz
mov
pop
inc
jmp
mov
mov
mov
push
mov
icebp
inc
lret
cmc
mov
inc
gs
jmp
fisttpll
cli
push
out
in
adc
movsb
lock
pop
stos
mov
mov
ret
and
ja
inc
add
jle
cltd
and
and
lods
jmp
mov
sti
repz
loop
jge
push
mov
adc
ret
outsb
push
ret
stos
pusha
loopne
inc
sub
lods
arpl
stc
pop
cld
mov
loop
mov
and
gs
sbb
addl
mov
mov
mov
mov
aas
xor
enter
jg
push
pusha
daa
into
mov
mov
pop
les
add
inc
or
mov
jge
insl
push
pop
and
sbb
out
pop
cmp
jo
push
sbbb
mov
push
add
nop
shlb
outsl
subb
movsl
mov
stos
aad
add
stos
loop
sbb
scas
test
push
adcl
dec
out
dec
fucomp
and
into
stc
es
jb
mull
test
and
les
in
and
scas
push
xor
mov
dec
insl
stc
and
dec
fwait
out
notl
int
icebp
inc
dec
fistl
adc
nop
pop
sbbl
shll
ljmp
in
repz
mov
aaa
mov
aam
jg
fwait
loopne
and
pop
iret
inc
xchg
enter
pop
mov
cs
mov
xor
in
xorl
mov
in
xor
push
sub
dec
decl
xchg
push
loop
mov
arpl
mov
leave
push
clc
and
xor
add
pop
les
std
push
mov
push
ljmp
mov
jne
ret
lahf
add
lahf
and
mov
dec
pop
push
or
xchg
in
scas
mov
xor
mov
xchg
imul
hlt
fstps
int
add
sbb
mov
ficoms
sub
sti
inc
or
push
fstpl
bound
xlat
mov
xchg
mov
pushl
ljmp
loopne
push
mov
push
jg
and
clc
cmp
idiv
fcmovne
enter
push
jmp
and
pop
incb
sti
cwtl
mov
push
icebp
sub
lret
ljmp
aam
jle
fcoml
insl
adc
jo
dec
dec
add
std
sbb
xlat
das
es
dec
push
ljmp
int
or
aam
add
repnz
frstor
xor
imulb
cld
push
lret
push
push
xchg
mov
mov
insl
rorb
fbstp
jno
cltd
jmp
shll
scas
clc
ds
sub
jg
roll
mov
jmp
aam
and
mov
push
in
adc
repnz
inc
cli
pop
stos
add
add
mov
add
cli
gs
cmp
ret
mov
fdivrl
into
sbb
mov
jns
adc
out
ja
out
push
fcmovnb
rol
lock
hlt
xchg
pop
or
stos
sbb
movsl
popf
mov
pop
xchg
xchg
sub
pop
dec
rcr
pop
stos
inc
cmp
fistpl
roll
sub
shl
stos
xchg
xor
out
popa
and
dec
mov
xor
or
cmp
xchg
cs
pushf
pushl
sbb
mov
and
ljmp
jmp
mov
es
mov
das
leave
or
jmp
lcall
ret
cmp
sub
lahf
scas
xor
loope
inc
sub
mov
aas
pop
fcmovnbe
pop
fwait
add
pop
sub
mov
jb
mov
cmp
jmp
jae
out
mov
mov
mov
xor
push
je
push
aaa
mov
cmp
adc
mov
and
fcmovne
outsb
ja
push
dec
stos
dec
dec
inc
cmp
fidivl
push
or
ret
jecxz
mov
test
imul
add
lret
sub
sub
int
stos
pop
outsl
movsbl
sub
fdivl
addr16
lcall
mov
pusha
mov
jge
sahf
sbbb
ret
adc
mov
jns
adc
jb
lcall
cmp
jno
mov
xchg
ret
cmp
jge
and
pop
add
icebp
sub
and
in
in
adcl
fbld
mov
sti
shlb
jbe
ljmp
add
cmp
incb
aas
fidivs
or
mov
mov
shll
mov
xchg
mov
rcl
repnz
fidivl
sub
pop
out
pusha
dec
add
adc
pop
cmpsb
fisubs
mov
xor
xchg
shl
int
inc
insb
or
cld
adc
lock
pusha
mov
sti
rorl
test
xor
ret
clc
inc
stc
xchg
jno
mov
aad
jecxz
jge
mov
mov
dec
fists
test
notb
ss
cmpsl
dec
in
cmp
fisttps
and
and
mov
dec
nop
push
xor
stos
inc
frstor
call
cli
mov
mov
pushf
inc
pop
jb
stos
mov
idivl
js
or
ss
xor
adc
mov
fdivl
stos
mov
stos
adcl
mov
inc
idivb
icebp
push
iret
sar
aas
out
mov
in
lcall
jb
xchg
xor
dec
xorb
mov
jne
fistpl
test
lahf
add
sbb
xchg
push
mov
add
or
cld
clc
xlat
jb
add
fildll
push
stos
fistps
rcll
out
add
jno
mov
push
addb
cli
mov
pusha
gs
and
bound
or
mull
push
mov
je
sbb
xor
pop
addl
mov
adc
cs
mov
jno
sub
fldl
mov
addr16
loopne
test
aas
sub
cmc
mov
sub
xchg
scas
jg
xchg
ficompl
or
sbb
sbb
inc
sub
pusha
and
adc
ljmp
ret
bound
pop
ja
cmp
pop
mov
lock
or
sbb
imul
hlt
and
mov
mov
repz
push
fcomi
adc
or
and
xor
mov
xor
test
push
bound
aam
xchg
js
lock
sti
jmp
es
aas
inc
das
xchg
add
fwait
int
push
or
mov
arpl
fcomp
out
or
inc
fisttps
mov
fnstsw
cmp
push
fwait
ret
xchg
push
mov
sbb
jle
add
inc
scas
mov
push
test
mov
sbb
insb
push
mov
and
loopne
cwtl
xchg
fnstenv
sbb
in
push
sbb
jecxz
adc
aaa
inc
leave
lock
movsl
sbbb
stc
xchg
sahf
jnp
mov
lahf
shlb
dec
subb
pusha
cmc
mov
mov
mov
jg
mov
or
popf
fdivs
iret
mov
add
leave
sub
or
loop
sbb
hlt
rcr
and
or
push
sar
sarb
mov
inc
xchg
ds
and
movsb
in
cld
and
add
test
cmc
ja
ret
mov
bound
idivb
dec
mov
iret
mov
outsl
jb
jmp
or
pop
orb
add
lcall
adc
out
ss
mov
fucomp
jno
mov
into
mov
jecxz
cmc
imul
mov
cmp
fnsave
addb
fldl
repz
lea
pop
mov
mov
and
ja
push
aas
ret
cmpsb
push
xor
mov
xlat
jp
inc
cmp
ret
jno
cmp
and
mov
mov
xor
es
nop
lret
cmpsb
jns
adc
xor
insl
or
mov
pusha
push
mov
out
push
or
aas
mov
sub
sbb
sub
mov
pcmpgtd
cld
jno
cld
dec
xor
push
jp
es
lahf
push
frstor
aad
xor
xor
loop
inc
filds
mov
dec
ret
and
or
clc
pop
sub
addr16
inc
cmp
jp
jecxz
jno
repz
movsb
lock
outsl
add
in
xchg
cmpsb
lahf
or
or
bound
push
cmpsl
adc
shrl
jl
inc
repnz
xchg
bound
imul
cmp
gs
jb
or
mov
sti
or
mov
mov
and
outsl
incb
out
adc
repz
push
jge
je
in
cld
lcall
or
cmc
pusha
scas
and
xchg
aas
out
pop
out
mov
jae
jno
repz
les
mull
cld
push
test
hlt
sti
divb
mov
jne
mov
and
dec
fprem1
mov
mov
lret
inc
pop
jne
repnz
addr16
call
push
clc
jno,pn
mov
ror
mov
jecxz
push
insl
push
mov
pusha
out
fldcw
jmp
out
push
int
pop
pushf
adc
fwait
addr16
or
rcrb
cld
mov
mov
lret
jge
test
int
jne
loope
sbbl
xor
je
inc
lret
mov
and
out
cmpsb
mov
sar
sbb
fcos
jae
xlat
test
mov
mov
fstl
cmp
adc
loope
flds
pop
and
test
xchg
mov
loop
fcomps
xchg
mov
mov
sub
or
outsl
mov
mov
xlat
pop
sbb
xchg
enter
loop
mov
and
jg
lods
jg
lret
sahf
call
add
inc
dec
jae
xchg
pop
adc
icebp
xorl
mov
xchg
ss
aad
mov
dec
cmc
and
mov
cmp
out
push
mov
adc
and
xor
in
rolb
outsl
pop
loop
jnp
xorl
gs
sbb
stos
mov
pop
push
repz
daa
and
test
insl
ret
in
fnsetpm(287
jns
xchg
cs
mov
xlat
clc
pushf
sub
inc
mov
movsl
xlat
les
fisttps
mov
cld
enter
pop
cmp
jo
negb
mov
mov
outsl
iret
push
scas
mov
in
lock
mov
fcmovnb
frstor
cltd
jecxz
icebp
and
cmpsl
xor
fcos
jp
test
loopne
addr16
ss
loope
mov
std
pop
push
notl
pushf
insl
sbb
popf
jg
mov
shl
cmpsb
bound
test
cli
loopne
fbld
cwtl
xchg
add
aad
cmpsb
aad
mov
sbb
in
repnz
ret
adc
popa
movsb
inc
test
push
jns
mov
mov
mov
xchg
frstor
adc
mov
mov
addr16
idivl
or
shl
jnp
stos
in
push
insl
fadd
xchg
js
loop
mov
mov
adc
lods
mov
out
fidivs
and
mov
xor
call
mov
mov
enter
inc
ret
outsl
lea
es
cs
xor
mov
jge
aam
incb
fbld
inc
les
int
insb
fsubrs
jmp
and
adc
mov
xor
inc
cmp
jle
ret
divb
add
out
cmp
mov
jg
jb
adc
fnsave
in
xor
dec
push
mov
sub
test
xor
sbb
add
fistpl
add
pushf
outsl
shl
ss
cmpl
lret
jg
lds
inc
mov
shll
bound
xchg
aad
pop
daa
mov
sbb
call
and
lahf
ljmp
lret
xlat
outsb
inc
test
addr16
cmpsl
pusha
popf
or
pop
mov
xchg
mov
pop
mov
aad
jbe
imul
cmp
adc
in
subl
jno
jo
and
or
inc
mov
xor
jmp
fcompl
mov
cmp
jmp
xlat
adc
pop
jecxz
xor
in
movsl
fwait
pop
cmp
js
dec
test
mov
push
icebp
lgs
jae
ret
sbb
cli
movsb
xchg
xor
inc
iret
xor
lods
in
cmpl
push
mov
sbb
in
shlb
dec
out
dec
scas
mov
sub
jne
mov
sub
test
lret
cmp
lea
add
mov
adc
xchg
push
scas
mov
inc
pop
in
mov
xchg
pop
jmp
sbb
dec
es
pop
dec
jnp
ret
jne
js
sar
cmpl
outsb
imul
mov
js
sti
cwtl
in
mov
orb
push
std
sub
dec
ja
enter
repz
push
sbb
ret
negb
cld
adc
icebp
cmpsl
or
insl
mov
aad
pop
les
pop
sub
jmp
inc
repz
add
dec
push
and
mov
cmpsb
movsl
sbbl
in
push
lds
lds
mov
ljmp
pusha
std
mov
push
jo
pop
stc
xchg
inc
lret
jg
and
jecxz
xchg
mov
pushf
cmp
test
bound
out
je
cmpsb
mov
xor
cmpsb
jmp
or
dec
fstp
pushf
sbb
xchg
or
nop
jecxz
lds
addr16
mov
push
cs
jp
adc
xchg
mov
mov
fidivl
or
cmp
imul
mov
xchg
mov
jecxz
and
das
mov
aam
fucom
nop
push
jb
int
shlb
fstl
nop
lock
jns
and
daa
ds
cmp
xchg
stos
mov
sub
mov
das
dec
jecxz
jmp
int
mov
in
loop
movsb
pushf
inc
mov
cld
push
movb
jns
loopne
mov
jns
lods
ret
jmp
pop
arpl
mov
push
sahf
cmp
cmpsb
mov
imul
jb
mov
mov
fbstp
repnz
cmpsl
add
mov
push
xorl
mov
or
and
and
lods
sbb
pop
jns
daa
adc
popa
push
push
ficompl
adc
push
inc
xor
jo
xor
nop
repz
add
push
loop
pusha
outsl
mov
gs
mov
inc
mov
and
insl
xlat
pushf
icebp
mov
push
inc
push
lret
push
shll
adc
lcall
sti
sub
rorl
shrb
loopne
shll
jp
bsr
mov
loopne
out
movsb
mov
or
cmp
movsb
cltd
sub
ret
push
sti
mov
into
nop
sub
jle
mov
lret
repz
push
stos
outsl
pop
shr
shl
inc
sbb
clc
and
xor
mov
loopne
rcrl
stos
mov
add
push
mov
mov
ficoml
mov
sub
jmp
movsb
fimuls
mov
in
sarb
cmp
inc
lret
push
mov
ja
pop
pusha
icebp
aam
adcb
xor
clc
xlat
add
push
mov
xor
mov
pop
xor
rorl
iret
xchg
pop
imul
push
dec
xor
push
daa
out
pop
out
ret
in
adc
cmp
rclb
sub
dec
mov
dec
lock
out
mov
push
inc
mov
inc
loop
test
mov
test
fistpll
xchg
xchg
push
jecxz
add
xor
mov
ljmp
iret
jb
imul
imul
add
sarb
adc
movsb
insl
jne
add
loopne
mov
stos
sbb
push
adc
test
mov
adc
push
stos
sti
push
aad
or
fcoms
fcmovne
lea
mov
cmp
mov
and
daa
cltd
lock
cld
in
daa
in
jno
dec
push
mov
and
sbb
shl
xor
and
xchg
test
mov
sti
mov
mov
mov
testb
cli
sti
jg
mov
fidivrl
lea
stos
pop
ftst
neg
ficoms
fcmovb
adc
mov
pop
xor
lods
pop
cs
ljmp
cmp
mov
mov
shlb
and
jl
scas
pusha
cmp
out
add
push
mov
xchg
cmpsl
and
addb
jae
xchg
sub
pushf
mov
dec
fisttpll
fidivrs
fmuls
mov
mov
xor
pop
push
adc
and
repnz
jmp
fistl
mov
mov
xchg
pop
xor
sti
push
jmp
inc
bound
call
fwait
clc
pushf
mov
in
dec
bound
pop
dec
sub
out
lock
pop
and
push
adc
leave
shlb
jecxz
fisubl
fistpll
cmp
push
aam
outsb
mov
jo
or
pop
insl
ja
out
inc
sbb
pop
xorb
bound
sub
js
cmp
pop
loope
and
and
pop
jmp
xor
in
xor
stos
jecxz
repz
inc
cmp
hlt
xlat
inc
lret
out
bound
and
lea
jmp
and
push
cmp
jecxz
lcall
shll
dec
loopne
test
shll
jae
and
pop
pop
jmp
sub
out
mov
bound
das
test
ljmp
sbb
outsb
mov
loop
add
imul
inc
xlat
in
inc
cmpsb
nop
sbb
jmp
lds
jmp
cmpl
sbb
clc
adc
sub
rcr
mov
jmp
push
pop
in
jnp
fcom
das
jp
adc
arpl
push
loope
mov
daa
pop
cmp
jp
push
mov
fdivs
mov
inc
loope
iret
aad
cmc
sub
dec
mov
and
movsb
pop
pop
push
in
lods
ret
mov
lods
sbb
mov
cmp
sub
inc
pop
pop
xor
out
fistpll
movl
scas
add
ret
inc
cmp
mov
mov
cli
xorb
mov
cld
xor
clc
sahf
inc
jbe
cwtl
push
or
inc
test
and
or
push
es
lret
pop
inc
ffree
cmp
mov
int
mov
mov
mov
mov
xchg
jecxz
scas
pop
mov
pop
in
push
sbb
pop
sbb
and
push
pop
mov
cli
dec
mov
pushf
push
icebp
sub
mov
fldz
lock
and
inc
pusha
loopne
lcall
fists
mov
mov
hlt
repz
and
fwait
jae
inc
cmp
mov
repz
pop
push
cmp
adc
cld
lods
scas
and
push
stc
and
jge
aad
lahf
cmc
loope
jg
loope
repz
adc
fldpi
fcoms
pop
push
add
jecxz
xor
sarb
pop
wbinvd
mov
mov
or
sbb
pusha
outsl
out
pop
or
out
testl
fisttpl
fbld
push
out
or
das
mov
jl
lret
icebp
pop
movsl
repnz
cmp
jmp
ror
ret
jmp
ret
jae
arpl
mov
mov
loop
mov
or
pop
repnz
stos
lret
jnp
mov
push
mov
cmp
pop
mov
ja
and
in
sarl
faddl
bound
sub
pop
pop
scas
jmp
ret
loopne
push
popa
sub
lahf
out
test
dec
xchg
js
fwait
leave
inc
daa
flds
push
jae
fsubs
out
dec
jecxz
dec
adc
arpl
fcomp
inc
ss
ret
jae
jnp
xchg
arpl
mov
cli
out
add
bound
adc
and
cmc
push
out
cmpb
lret
sbb
pop
mov
mov
cltd
and
iret
mulb
movsb
sbb
addr16
adc
dec
loopne
cli
dec
mov
push
out
xchg
fwait
in
pop
outsl
pop
sub
lods
mov
sarb
jge
int
addl
sbb
les
jno
and
or
xchg
push
movsl
popa
or
in
sbb
push
in
sub
pop
mov
stos
bound
jmp
cli
jp
jo
outsl
bound
sahf
dec
cltd
xchg
inc
jg
pop
cmp
mov
fnsave
mov
loop
dec
cs
mov
or
movsl
test
aas
fnsave
dec
jl
push
scas
stc
mov
mov
mov
inc
imul
push
sbbl
xchg
mov
jl
mov
movsb
rorb
fists
dec
ficoms
shrl
out
popa
pop
lret
jno
rolb
rcl
movsl
mov
sub
jg
sbb
pop
sbb
std
or
rcrl
in
xrelease
or
repnz
addr16
ret
inc
loop
mov
mov
cmp
cwtl
mov
repz
push
mov
mov
dec
sbb
pop
or
cmpsb
jb
xchg
jp
call
mov
adc
add
das
jnp
dec
pop
jne
push
pop
adc
pusha
cwtl
add
popa
pop
jae
mov
or
iret
les
xchg
sbb
pop
mov
cmc
add
jecxz
loop
cs
out
lret
xor
shll
aas
in
andl
cs
stc
cld
addb
and
ret
faddl
push
jnp
mov
aad
xchg
mov
jp
mov
add
adcl
scas
jae
xchg
sub
aad
mov
add
lods
push
ljmp
mov
fidivl
xor
hlt
cld
jl
es
scas
adc
shr
mov
ret
adc
xlat
adc
int
es
xchg
inc
jns
mov
scas
mov
addl
out
xchg
mov
das
sbb
stos
mov
subl
mov
adc
ja
mov
push
cmpsl
adc
mov
xor
mov
mov
mov
out
mov
adc
or
loopne
xchg
pusha
in
stos
icebp
sbb
loopne
icebp
xchg
or
inc
repz
int
stc
ljmp
jnp
outsl
push
cli
in
add
and
sarl
data16
cmc
mov
adc
iret
in
xor
repz
btrl
sbb
xor
mov
pop
push
jmp
out
lcall
sti
pop
jl
movsb
rclb
fscale
jl
fnsave
packuswb
mull
or
cmp
cli
int3
adc
pop
mov
repnz
sbb
pop
sub
rorl
insl
scas
mov
insb
adc
fcoml
jb
stos
adc
out
pushf
xchg
cli
sub
pop
pop
add
push
ret
pop
repnz
pop
data16
and
sbb
ficoms
je
and
jns
dec
lock
pop
int
xchg
test
imul
pop
iret
movsl
adc
scas
addr16
inc
lds
cmc
or
lret
xor
jecxz
xor
addr16
dec
aaa
pusha
adc
dec
pop
cmp
adc
mov
mov
mov
sub
insb
jae
jnp
pop
mov
push
add
loopne
push
sahf
mov
frstor
sbbl
push
xchg
cmpsb
pop
jae
xlat
add
stos
adc
cli
es
in
notb
jle
cmc
fbld
push
fidivs
loopne
pushf
jns
pusha
outsb
inc
sbb
jge
rcl
daa
inc
inc
pusha
jo
jge
je
cmpsb
iret
pop
inc
dec
out
dec
aad
out
in
xor
cmp
xchg
inc
mov
or
jnp
mov
cmpsb
push
in
ret
push
test
mov
icebp
hlt
and
push
dec
and
mov
or
pop
pop
or
dec
cmc
sub
fisttpll
jmp
mov
ret
dec
push
iret
push
imul
dec
stc
push
std
jecxz
adc
dec
mov
inc
xchg
adc
cwtl
iret
popf
jne
add
fdiv
dec
lods
js
mov
addr16
or
xchg
das
pushf
xchg
pop
iret
fildll
stos
xchg
push
shrl
arpl
mov
imul
push
clc
jno
dec
pop
sarb
or
mov
imul
or
xor
xchg
std
fldl
loope
mov
stos
or
add
mov
pop
scas
das
test
sub
mov
fsubrl
rclb
or
repz
bound
pushf
shl
sub
mov
pop
scas
add
scas
inc
ja
inc
notb
adcl
divb
jg
mov
and
pushf
movsb
sub
and
cmp
lcall
out
mov
fsubp
sti
mov
repz
stc
into
nop
mov
fbstp
jle
mov
into
push
loopne
hlt
jge
and
repnz
mov
leave
sbb
cmpb
and
outsb
leave
imul
mov
and
mov
dec
jecxz
andb
mov
jg
mov
jb
subl
add
xchg
out
ret
repnz
inc
inc
shlb
aaa
sub
cmp
arpl
loopne
mov
fsubr
roll
ret
pop
lret
out
xchg
mov
jecxz
and
sbb
cmpb
jge
sub
push
mov
xlat
shl
imulb
sarl
add
fisttpll
pop
adc
cmp
xchg
pop
xlat
xchg
dec
jmp
icebp
bound
xlat
clc
or
xchg
and
xchg
jmp
sub
and
out
lret
mov
inc
in
les
add
loopne
adc
lods
jns
ljmp
adc
adc
mov
xorb
and
inc
test
adc
inc
pop
pusha
sbb
jecxz
cli
idivb
das
mov
push
arpl
pusha
cli
jne
jecxz
pop
and
repz
dec
jnp
mov
or
inc
fstps
iret
and
cmp
shll
add
mov
xchg
add
inc
ret
or
pop
in
xchg
int
pop
xlat
or
push
incl
cld
or
inc
xor
mov
popf
mov
rcrl
testb
mov
aas
xchg
int
adc
mov
shll
xlat
ss
add
in
imul
and
inc
call
test
mov
mov
inc
scas
andl
mov
addb
aaa
fsubl
fxch
shl
cli
jle
imull
xorb
ret
test
xor
mov
lret
sub
mov
xchg
push
iret
bound
pop
cmpl
sub
push
addr16
lock
rorl
push
dec
cmp
mov
pop
jae
jno
mov
shr
fcmovnu
cmp
xor
ljmp
sub
pop
ja
xor
jmp
shll
xchg
mov
stos
loope
mov
inc
jne
aas
mov
dec
push
aas
call
daa
repz
or
add
lahf
jae
das
lret
rol
pop
cmp
stc
or
cmpsb
pop
sub
pusha
push
mov
loop
cmp
xchg
xchg
loope
pop
js
dec
or
pop
or
jb
jnp
imul
pusha
fistpll
jg
push
inc
lret
and
inc
or
leave
sub
stos
and
jnp
cmp
loope
js
fisubrl
in
and
pop
icebp
jmp
aas
add
aam
ret
gs
cmpb
in
mov
repnz
xor
test
jle
mov
and
repnz
adc
xchg
inc
cli
into
mov
or
inc
lret
pop
jg
jecxz
xchg
addr16
cli
ret
pusha
fstpt
jns
mov
cmp
inc
negb
insb
movsl
adc
pop
mov
aam
and
test
leave
shll
incl
ret
fstpt
inc
pop
out
popa
ret
add
test
fcoml
push
scas
ret
mov
js
mov
pop
shlb
cmp
ret
mov
inc
jecxz
insl
outsl
fisttps
cmpsl
shl
fwait
pop
in
mov
jmp
ljmp
out
cwtl
cmpsl
rorl
mov
scas
pusha
pop
sbb
pop
dec
add
jp
sbb
andl
push
and
mov
outsl
and
shll
iret
fldcw
mov
fidivs
add
aas
jmp
lahf
and
cmp
rcl
fbld
inc
lahf
sbb
loop
ret
jmp
ret
mov
lods
pop
add
loopne
shll
jg
mov
bound
cmp
add
cmc
inc
jns
jns
add
jge
cmp
loope
push
inc
xchg
std
dec
test
clc
mov
jg
push
sub
mov
or
cmp
fldpi
adc
adc
rcrl
fistpll
or
xchg
sub
lods
das
inc
push
pushf
push
sub
pop
loope
lcall
mov
insl
mov
dec
cmp
xchg
out
cmp
pop
xor
mov
add
dec
rorl
jecxz
pop
ficomps
push
pop
rcrl
test
or
sub
hlt
loope
pop
loope
mov
jae
aaa
cmpsb
cmp
test
mov
out
sub
fndisi(8087
sbb
cmpsl
out
mov
stos
fnstsw
cs
shrl
imul
fists
stos
out
mov
jne
jg
in
bound
adc
xor
outsb
push
cmpsl
mov
outsl
leave
jnp
sbb
leave
and
mov
ror
sub
jmp
cld
js
jecxz
fcomp
lret
mov
repz
xchg
inc
cwtl
rolb
leave
stos
push
loopne
shlb
rcll
mov
call
repz
loop
dec
bound
insl
insb
dec
cmp
jae
les
xchg
mov
in
mov
movsb
leave
mov
jb
adc
pusha
imul
inc
ret
xchg
ret
ret
test
pusha
scas
push
xchg
add
out
mov
xchg
jne
push
js
xchg
push
pop
arpl
sahf
hlt
pusha
mov
call
loop
andl
loopne
inc
cs
mov
das
or
incl
hlt
ss
pop
sahf
add
jnp
andl
iret
movsl
inc
ss
popa
xchg
jns
jge
push
mov
sti
xor
add
int
mov
push
fmuls
dec
mov
aaa
or
loope
xlat
sbb
sti
out
xchg
sbb
mov
adc
aaa
adc
inc
call
loop
pop
lods
mov
fwait
cmpl
xchg
ss
or
inc
add
cs
scas
mov
sub
add
xor
mov
in
and
outsl
incb
add
sbb
jp
jp
mov
jge
repnz
dec
add
pusha
fmuls
jo
mulb
jecxz
inc
mov
mov
dec
mov
nop
push
aaa
clc
dec
xchg
adc
push
xor
add
xor
adc
and
push
stc
xchg
adcl
ljmp
adc
sub
mov
ljmp
push
jnp
inc
adc
int
pop
mov
sub
push
addl
andl
fildl
ss
pop
jmp
addps
cs
repnz
sbb
mov
sbb
mov
out
nop
imul
loop
pop
add
mov
sbb
or
stos
fistl
cld
xchg
and
adc
aad
jecxz
mov
lds
fnstsw
cli
mov
ret
or
push
and
ljmp
sbbl
repnz
loop
stos
out
pop
aaa
scas
and
mov
dec
loop
jmp
ret
sahf
mov
mov
neg
jae
fucomp
lock
sub
ljmp
divb
jnp
divb
jnp
notb
jnp
div
jnp
testb
divb
push
adc
mov
sti
lahf
mov
movntq
out
and
jmp
xor
inc
movsb
in
cmp
lret
sarl
cmp
xchg
push
fldt
fstpt
out
arpl
mov
inc
and
aas
test
sbb
push
sub
cmp
shl
mov
loop
lahf
ljmp
mov
sbb
push
xlat
mov
push
cmp
dec
inc
push
push
in
mov
enterw
mulb
and
out
das
adc
sbb
inc
mov
cmp
stc
stos
xor
mov
push
and
out
add
addl
in
rolb
xor
into
out
push
cwtl
jecxz
jb
iret
pusha
sbb
bound
mov
imul
nop
fsubp
mov
jns
daa
inc
xchg
lret
cmp
sti
sbb
and
popf
inc
push
jmp
inc
sbb
icebp
or
cltd
and
cmpsl
xor
inc
adc
cmp
push
pop
push
and
dec
aas
insl
push
adc
inc
fmulp
mov
in
repnz
cwtl
cmp
and
loope
sbb
xchg
and
push
lea
mov
fisubrl
jnp
cmpl
sarl
inc
fisubrl
xchg
fstpl
adc
leave
mov
ljmp
sti
fstpl
mov
adc
movsb
sub
pop
je
mov
cltd
or
adc
xchg
sub
lea
cli
sbbb
push
add
mov
and
decb
aas
out
test
imul
sub
add
ret
cltd
pushf
mov
shrl
daa
sbb
dec
mov
lods
jg
les
push
cmpsl
mov
cs
rorl
push
aaa
lret
or
inc
mov
or
inc
jmp
imul
imul
shl
xlat
das
ret
jecxz
ret
adc
mov
xchg
or
lret
enter
loopne
cs
subl
pop
push
call
mov
mov
cmp
jnp
pop
insl
cmp
icebp
mov
hlt
stos
cli
xchg
dec
mov
repz
lock
outsl
sub
jp
mov
mov
out
sahf
xor
cmp
int
fwait
mov
aam
adc
jno
xchg
or
scas
jns
lods
dec
push
aad
mov
out
dec
mov
rcrl
cmpsl
sbb
mov
nop
dec
fcmovbe
jmp
pusha
or
clc
cmc
addl
incb
cwtl
or
push
out
sti
add
in
push
push
imul
adc
lock
xchg
xor
out
loopne
ret
add
pop
xor
jns
ret
andb
cmp
ret
jbe
stos
and
cmpsl
dec
shlb
or
ljmp
lret
mov
out
xchg
mov
mov
and
test
mov
mov
pop
push
cmpsb
jnp
loop
jg
jb
jecxz
fnstcw
pusha
inc
fnsave
shl
push
pop
mov
out
pop
jmp
es
adc
mov
adcl
or
shrb
pusha
cli
lahf
mov
or
push
dec
fsub
sbb
hlt
aam
sbb
add
mov
mov
push
imul
dec
mov
jnp
xor
loope
test
ret
lds
pop
fnsave
dec
icebp
pusha
pop
mov
pushf
lcall
and
ret
cs
jcxz
loopne
push
xchg
ror
jno
mov
inc
repz
mov
pusha
enter
jns
ljmp
jp
fs
pop
lret
mov
pop
scas
test
mov
insb
push
adc
icebp
cld
mov
pop
popf
push
cmp
lret
subb
imull
pusha
fimuls
ljmp
push
xchg
pop
add
mov
inc
xchg
out
jno
push
pop
rorl
pop
and
xor
mov
mov
mov
loop
add
loop
and
adc
insb
lock
int3
push
sbb
rol
cmpsl
adcb
jns
ret
dec
subb
push
int
fcmovbe
adc
mov
ljmp
dec
push
fwait
mov
adcb
out
sub
push
mov
mov
fldt
sbbb
les
testl
clc
push
push
push
icebp
lahf
mov
mov
orl
rorl
cmp
sub
lahf
loope
inc
sbb
cmpsb
fdivs
int
xor
mov
cli
inc
pop
ret
aam
fstpl
xor
les
cmp
rcr
lret
test
sbb
bound
sub
add
pop
mov
push
sarb
add
movsl
outsl
icebp
cmpl
out
nop
sahf
xchg
pop
push
ret
scas
loopne
std
movl
fstl
push
sub
rclb
jne
arpl
pop
mov
xchg
xchg
push
shll
cmpl
cmpsb
and
rorl
sbb
sbbb
add
sbb
jecxz
lods
inc
push
shrb
test
stos
shll
mov
movsl
cmc
push
push
js
sbb
icebp
out
push
and
orl
mov
pusha
addl
repz
fnstenv
rolb
out
add
movsl
iret
pop
stos
add
mov
xchg
aaa
push
stos
inc
and
inc
stos
or
pop
pcmpgtw
cwtl
or
imul
pusha
sarb
lahf
decb
sarl
fnstsw
mov
test
inc
adc
mov
push
pop
cmp
nop
lods
stos
popf
adcb
jno
xorl
jne
mov
rclb
js
mov
imul
and
cmp
lret
pop
imul
and
fstpl
inc
jb
insl
lock
push
pusha
cmc
fidivrl
movsb
repz
pushf
mov
cltd
fistl
jg
mov
in
sbb
ret
out
adc
mov
nop
shl
inc
or
mov
loopne
shrb
into
mov
fimull
sub
cld
test
sub
and
outsl
xor
stos
lahf
push
repz
lea
lock
call
cwtl
lret
jecxz
sbb
imul
pop
xchg
push
mov
pop
lret
int
push
jl
mov
loopne
jmp
xchg
lock
mov
sub
lea
xchg
mov
mov
cs
push
mov
lock
lock
stc
out
jmp
sub
es
or
fiadds
out
into
jo
sbb
ds
arpl
mov
add
sub
inc
in
push
pop
mov
xor
xor
push
push
mov
cwtl
push
mov
out
and
add
jb
push
popf
push
lret
xchg
push
xor
mov
jo
xorl
mov
xlat
xchg
mov
jg
cmc
adcl
inc
arpl
leave
mov
fucomp
rorb
adc
inc
in
fsubrs
stos
fsubrs
mov
dec
push
andb
icebp
pop
addl
mov
adc
pusha
lret
or
add
inc
mov
pusha
mov
push
mov
sub
ret
jo
or
sahf
iret
pop
jne
xor
out
mov
idiv
stos
jl
aad
popw
xchg
outsb
incb
testl
xor
inc
ret
call
repz
push
int
inc
dec
sahf
sub
fdivrs
aad
xchg
rolb
int
xchg
adc
aas
and
xchg
stos
dec
inc
pusha
sub
push
fstpl
add
mov
in
sub
add
and
jb
inc
or
mov
adc
out
push
xchg
fpatan
repz
testl
aad
cmp
jnp
imul
jge
hlt
enter
add
sbb
fldcw
push
inc
in
mov
sub
add
arpl
mov
pusha
mov
and
in
xor
cmp
loop
frstor
sbbb
out
insl
daa
add
dec
push
add
clc
mov
lock
nop
lods
lock
pusha
dec
jecxz
mov
pop
push
cld
push
fs
push
or
sbb
mov
mov
push
mov
mov
inc
ret
mov
aad
in
jmp
inc
mov
orl
or
mov
lret
es
loop
int3
jne
adc
dec
int3
xlat
pop
adc
jle
sti
xorb
inc
ret
pusha
dec
push
dec
jne
add
in
fbld
pop
aas
cli
lret
push
fstpl
mov
out
sub
pop
inc
or
xor
int
lock
adcl
xchg
jno
adc
pop
scas
cmpsl
mov
testl
xor
test
loopne
xchg
dec
rcll
lods
aaa
ficomps
in
xor
pushf
pop
sbbb
xor
test
ret
add
stos
push
ret
ljmp
sti
dec
jp
mov
ret
pop
ret
std
adcl
xchg
jge
pop
lahf
sbb
push
sub
stos
lea
push
scas
jge
pusha
sub
push
sbb
hlt
cmp
sti
mov
loopne
jl
adc
mov
xchg
les
imul
pushf
int
loope
jo
daa
cmpsl
push
scas
test
shll
iret
dec
mov
mov
sbb
dec
jecxz
pushl
inc
ljmp
mov
xchg
in
outsl
mov
inc
push
repnz
pop
add
ret
push
rclb
jnp
xor
sti
loope
imul
fdivr
pop
rolb
or
pushf
jo
das
out
enter
xor
jnp
push
push
fnstcw
cld
stos
scas
jg
jno
or
ficompl
rorb
jmp
mov
stc
dec
sbb
scas
loop
push
jle
adc
mov
push
push
push
mov
pop
jecxz
add
int
loope
cs
daa
inc
mov
jp
popf
jecxz
mov
jecxz
mov
pop
adc
gs
push
mov
repz
jae
xchg
mov
sarl
push
test
add
ds
inc
in
pop
mov
cmp
push
test
lcall
push
inc
pop
jl
aas
cmp
jg
pusha
loop
out
add
mov
addr16
mov
cmp
and
aad
lcall
arpl
inc
mov
add
icebp
fdivl
shll
add
mov
or
test
orl
div
leave
jp
shrb
xchg
test
lea
notl
xor
icebp
out
dec
pushf
xchg
frstor
pop
cmp
sti
or
sub
jecxz
add
jp
ret
lock
in
jbe
in
mov
out
test
and
mov
mov
jb
xor
std
sbb
pop
add
or
inc
and
mov
shr
adc
lods
icebp
fimull
jp
xor
inc
sbb
pushf
adc
ret
cli
fdivs
mov
in
jecxz
outsl
mull
test
xor
scas
lods
mov
or
in
pop
loopne
popa
mov
jecxz
bound
shrl
jmp
cmpsl
xor
scas
stos
xchg
adc
loop
xor
decb
sbb
cld
mov
fbld
lret
pop
xor
xchg
and
outsb
cld
jle
mov
mov
push
aaa
adc
xor
or
hlt
sbb
or
fidivs
fdivl
pop
dec
jnp
inc
mov
xor
mov
rcrb
imul
mov
jmp
clc
mov
mov
cmc
cmp
pop
dec
lock
mov
mov
xor
mov
or
mov
es
push
lock
sub
xchg
pop
or
adc
and
hlt
std
fcoms
mov
popa
mov
mov
and
xchg
pop
mov
jnp
mov
jecxz
popf
repz
fimull
mov
cmpsl
xrelease
dec
adc
mov
mov
cmp
outsb
inc
add
mov
idivb
xlat
cs
icebp
inc
mov
pop
fdivs
or
test
dec
in
add
jbe
pusha
xor
ljmp
dec
sub
in
mov
out
cmovo
pop
lret
mov
add
loope
or
or
lret
mov
stc
filds
cld
push
arpl
test
push
stos
pop
lret
cmp
cs
cld
fcompl
mov
xor
jecxz
pop
repnz
adcl
add
cmp
jnp
xor
pusha
mov
outsb
aaa
dec
out
and
add
jg
mov
stos
push
inc
stos
dec
xchg
xchg
pop
jb
jo
xlat
int
stos
test
mov
les
or
pop
pop
pusha
or
mov
addr16
jae
rcrb
cmc
mov
jg
sub
stos
mov
ret
sbb
aad
addr16
ljmp
stc
jnp
sbb
stc
mov
dec
cld
inc
push
sbb
ret
imul
stos
loope
dec
int
mov
dec
push
mov
out
hlt
ret
cmpsb
stos
inc
inc
jae
in
xor
jg
xchg
push
push
mov
jb
jns
pop
shll
fmull
lret
jae
push
repnz
rcl
and
jae
lods
insl
cwtl
outsl
push
mov
pop
insb
rorb
test
xchg
sarb
ret
les
icebp
aam
push
ja
fsubrp
fbld
sub
sarb
repz
mov
rcll
repz
repnz
loopne
leave
lret
sub
addb
mov
lods
daa
jbe
sbb
lahf
sub
fdivrl
arpl
in
inc
dec
adcb
mov
cmpl
mov
dec
icebp
pop
adc
frstor
mov
mov
and
outsl
scas
push
jae
or
pop
lds
mov
cmp
int
mov
rcl
shlb
mov
inc
stos
pop
ds
aaa
pop
enter
push
cmpsb
xlat
lret
adc
mov
arpl
pushf
pop
inc
mov
dec
jg
testl
sbb
add
repnz
push
leave
in
pop
call
ja
and
adc
popl
repz
negb
scas
pusha
xchg
pusha
xor
leave
insb
inc
xor
in
and
aad
rcrl
stos
mov
mov
jmp
xor
daa
dec
rcrb
rol
xor
shr
push
sbb
xchg
mov
cs
lahf
pusha
loop
push
add
call
jecxz
jle
test
cld
add
mov
xor
icebp
inc
jbe
add
pop
inc
rorl
out
repz
cmpsb
cli
cmp
mov
scas
int
and
dec
in
add
insl
jo
or
ds
and
into
pusha
mov
ror
into
cmc
int
cmpsb
lret
cmp
pop
and
push
fbld
xchg
shl
jmp
and
xchg
into
mov
fs
shlb
stos
ret
adc
mov
pop
sub
and
xchg
shrl
add
dec
pop
stos
inc
dec
jnp
andl
fdivp
add
iret
mov
pop
lahf
inc
out
lcall
xchg
jbe
fcmovnbe
jl
add
inc
icebp
push
jnp
pop
mov
jg
aad
roll
andb
mov
jb
out
mov
fbld
sub
outsl
pushf
xor
pusha
jno
dec
movb
frstor
rcrb
out
sub
add
outsb
fmul
jl
rcrl
mov
mov
pop
jecxz
jmp
sahf
and
lods
jle
xchg
pop
pop
xor
mov
sbb
ljmp
hlt
testb
add
pop
jp
xchg
mov
popa
fdivrs
sub
inc
cs
pop
xchg
adc
pop
xor
pop
push
arpl
dec
mov
push
sbb
inc
bound
cs
push
in
cs
jae
sarl
movsl
js
shll
mov
jnp
imul
loope
ret
rcr
stos
and
movsb
into
add
repz
push
flds
mov
mov
stos
fbld
pop
xor
jle
ret
std
inc
fst
or
adc
mov
and
push
xchg
arpl
cli
and
out
addr16
ret
push
push
sub
loop
int3
mov
adc
adc
imul
in
mov
repnz
sti
gs
fildl
push
fdivl
lods
push
out
push
pop
test
push
jge
cld
icebp
dec
xchg
test
andl
stos
mov
sbb
lcall
jg
pop
rolb
or
dec
sub
adc
clc
sub
lret
xchg
push
inc
xchg
jne
das
stos
pop
loop
add
and
jne
fistps
in
xor
adc
sub
icebp
into
jnp
in
mov
pop
fidivrl
pop
mov
xchg
stos
lock
add
int
aas
push
cwtl
push
loope
mov
rcl
addr16
iret
sahf
lods
ljmp
pusha
in
inc
outsl
sbb
movsb
pop
xor
adc
mov
lahf
lds
mov
xchg
push
mov
cmc
jmp
push
sbbb
dec
iret
movsl
mov
movsl
and
loop
and
jp
outsl
cli
popa
rorb
pop
faddl
popa
jecxz
cli
jae
inc
pusha
and
add
outsl
stos
in
and
add
xor
data16
cld
repnz
jae
add
jg
mov
cmp
out
mov
pop
jecxz
mov
jecxz
sub
shrb
addl
repz
xchg
out
pop
mov
xchg
add
int3
pop
adc
leave
popa
loop
or
je
sub
fldenv
pusha
mov
add
lcall
out
out
rolb
rcrl
mov
ja
and
and
adc
aas
addr16
sub
cli
mov
add
roll
out
fs
loop
in
mov
jecxz
fldenv
inc
and
imul
daa
xlat
mov
jbe
cwtl
imul
sub
sbb
bound
in
xchg
cmp
or
sar
and
mov
stc
sahf
dec
popf
lret
popa
jecxz
out
jg
scas
xor
loope
out
push
jecxz
shl
push
out
cmpb
cmp
mov
xchg
inc
add
cli
jg
or
out
mov
xchg
jg
fsts
hlt
push
add
icebp
loopne
fcoms
mov
in
loope
dec
loope
inc
jg
push
inc
clc
ret
add
xchg
dec
cwtl
cmp
popa
ret
leave
or
and
cmpl
testl
adc
test
addl
adc
outsl
arpl
mov
loop
arpl
lcall
and
dec
andl
in
mov
or
sbb
add
mov
push
xchg
repz
dec
loopne
and
cmp
xchg
mov
cmp
loop
inc
pop
loop
xchg
out
jae
mov
xlat
mov
adc
cmc
loop
ljmp
rol
and
andl
loop
icebp
rclb
mov
pusha
jge
push
xchg
cmpsl
in
sarl
mov
jg
xchg
mov
jnp
cmp
or
popa
mov
call
cmp
mov
lock
jecxz
jmp
jnp
arpl
mov
mov
cwtl
fnstenv
adc
jp
mov
addr16
clc
aas
mov
pusha
mov
adc
sub
cmc
stos
roll
dec
adc
repnz
mov
adc
das
add
jnp
xor
sub
outsl
add
push
mov
add
mov
sbb
adc
mov
jmp
rolb
sbb
fnstsw
dec
mov
ror
pop
inc
cmpsl
loop
and
imul
fldenv
lret
rorl
mov
or
jg
jecxz
xor
adc
adc
imul
cmpsb
repnz
loope
imul
dec
fcoms
xchg
and
stos
aad
push
add
ret
aaa
and
roll
xchg
adc
mov
arpl
and
jge
mov
sub
mov
loopne
xchg
and
mov
xchg
rcrb
mov
mov
fadds
inc
and
dec
enter
jp
pop
sbb
fistps
dec
add
push
or
out
in
cltd
pop
jns
ret
subl
outsb
sahf
pop
pop
inc
sbb
inc
bound
xchg
jp
jl
or
jnp
adc
shlb
lahf
inc
and
inc
jecxz
lock
les
jecxz
addl
add
and
cli
enter
or
xchg
jecxz
arpl
push
push
jnp
ret
jo
loope
decb
and
mov
jge
inc
jecxz
cli
push
and
cmpsl
and
jecxz
cmpsb
cmp
xor
inc
lock
sub
xchg
jnp
push
mov
repz
fwait
cmp
lds
ret
mov
jg
ret
and
or
cli
jg
ret
mov
fucom
loop
loopne
orl
add
loope
imul
inc
jg
pushf
mov
jb
jnp
mov
inc
jecxz
jae
mov
add
jp
sbbb
repz
mov
push
ret
mov
out
mov
rol
pop
pop
and
xchg
bound
popa
addr16
in
add
cli
ret
mov
sbb
jb
ds
sub
in
ljmp
stos
lahf
mov
sahf
andl
ret
ret
sub
popf
jo
pop
arpl
arpl
mov
xor
jae
popa
orl
mov
sbb
sub
inc
shl
pop
jg
mov
ret
arpl
pop
inc
cli
and
ss
fmuls
xor
shr
mov
fists
insb
subl
gs
dec
mov
lods
cmp
aad
sti
sbb
jecxz
das
mov
jge
std
cld
rcrb
mov
lret
jg
ret
xor
fstpt
jecxz
mov
ret
loope
movsl
ljmp
and
mov
ret
fdivrs
mov
ret
dec
jns
mov
ret
mov
lret
lock
mov
cli
mov
jno
lret
jl
and
rclb
jnp
sti
stos
or
jg
ret
inc
jns
mov
ret
mov
cmpb
ja
rcll
adc
sbb
xor
dec
mov
inc
jnp
fld
lret
ret
jp
cmpl
sar
lock
inc
xor
mov
shrb
cmpsl
jno
repnz
stos
out
andl
jg
lock
js
jg
lret
mov
mov
ret
mov
jecxz
out
jg
ret
inc
jno
xorl
or
inc
call
cli
lret
and
repnz
jnp
mov
inc
jg
repnz
jnp
mov
mov
mov
out
jae
shll
sub
lret
pop
cli
loope
out
push
jb
roll
cmpl
and
mov
jns
add
jns
mov
ret
fdivrs
ret
nop
mov
lock
shll
ret
loop
fdivr
lret
lock
icebp
or
iret
call
jns
mov
mov
jns
loop
repnz
mov
lcall
hlt
cmp
jnp
or
mov
insl
loopne
cmp
mov
test
push
ss
mov
cmpsl
rcrb
stos
jecxz
testb
pusha
jnp
arpl
and
mov
mov
dec
mov
sub
and
jecxz
lock
jecxz
jecxz
fldenv
andb
sub
cld
sar
mov
jecxz
loop
or
inc
repnz
mov
ret
or
add
or
daa
dec
mov
jns
lods
adc
sub
arpl
cmpl
cs
or
inc
js
push
inc
flds
and
scas
int3
cmpsb
popl
ja
lods
aaa
out
push
pop
push
movb
testb
or
mov
jl
test
leave
out
lret
jnp
mov
push
sahf
sar
test
mov
xlat
xchg
ret
xlat
rdmsr
inc
pop
lret
scas
pop
inc
ret
jb
nop
xchg
cmp
in
outsb
xchg
in
fnstsw
sbb
jg
lahf
pop
aas
inc
jl
mov
mov
rcrl
and
inc
test
ret
xor
loopne
lret
sarb
testl
repnz
test
gs
lock
leave
mov
dec
enter
idivl
ret
adc
jns
mov
push
cmp
clc
mov
jecxz
mov
cmpsl
in
xchg
push
cmp
and
in
fwait
jo
sahf
dec
stos
dec
xchg
loope
mul
cwtl
int
repnz
repnz
jmp
ret
ret
dec
inc
test
xchg
add
cmp
adc
mov
mov
repnz
icebp
mov
push
and
mov
cli
mov
jb
xchg
aas
jae
loope
mov
pop
add
int3
andb
repnz
mov
addb
jecxz
icebp
in
jecxz
in
and
and
lret
xor
mov
and
jecxz
sub
and
mov
push
inc
cli
addl
repnz
mov
and
inc
orl
pop
sti
inc
les
cmp
mov
test
in
daa
ret
out
jg
or
dec
iret
cmp
cmp
pusha
cmp
mov
mov
push
ret
fwait
daa
push
aas
jg
shll
clc
loope
xlat
scas
ret
inc
dec
jg
jae
repnz
xor
sarl
mov
inc
jge
xchg
cmpsl
fwait
add
dec
sti
pusha
push
mov
pop
mov
inc
jg
lcall
push
adc
xor
sub
xchg
add
jg
xchg
arpl
scas
in
addl
fisubs
stc
rol
stos
xchg
js
cltd
fnsave
jecxz
xorl
andl
in
and
pop
outsl
pop
sbb
js
sbbl
scas
mov
arpl
xlat
push
adc
cmp
cmp
xor
jg
int3
outsl
dec
mov
js
cmpsl
popf
xlat
jb
mov
add
cltd
and
pop
loop
jecxz
rcl
or
test
aad
add
pusha
jae
icebp
mov
rol
js
xchg
ja
popf
repnz
lahf
icebp
cli
add
sub
inc
arpl
and
sub
out
fnclex
add
jle
insl
pop
shll
cmpsb
push
ret
or
adc
repz
add
and
imul
sub
pop
fildl
add
es
icebp
imul
xorl
rolb
pop
cli
add
mov
mov
fistpl
dec
cwtl
inc
add
jecxz
lret
loopne
xchg
std
lcall
andl
popa
hlt
inc
les
jp
imul
loopne
andl
bound
in
jge
out
mov
add
sub
sbbl
jecxz
inc
rclb
or
xchg
lcall
sti
imul
loop
mov
pop
dec
inc
mov
es
add
adc
jge
movsl
pop
arpl
ret
jns
cmp
ret
sti
jmp
lock
and
out
dec
jecxz
inc
adc
jge
mov
mov
add
xor
andb
repz
push
or
lea
cmc
cmpsb
mov
loope
add
add
loop
stos
inc
and
mov
pusha
mov
jo
lahf
and
lret
decb
mov
mov
loop
add
xlat
push
adc
adc
sti
pop
sub
jecxz
ds
lret
jg
lock
jnp
mov
loopne
adc
sbb
mov
inc
andl
rolb
cmp
rcrl
mov
pusha
testl
mov
repz
mov
sti
pop
xor
repnz
lret
outsb
mov
stos
pop
mov
xchg
jg
arpl
loopne
or
sbb
ret
inc
loope
mov
or
bnd
or
jo
jnp
mov
mov
or
mov
popf
inc
scas
jecxz
xor
jecxz
shl
pop
lock
loop
outsb
or
pop
xlat
lds
sbb
mov
ljmp
icebp
jg
mov
outsl
stos
arpl
xlat
jg
mov
icebp
loope
jb
jnp
jno
adc
lahf
and
outsl
movsl
fisubrl
stos
jg
scas
jg
ret
or
arpl
aaa
jb
jnp
lahf
and
pop
jge
loope
or
pop
les
shrl
cs
xchg
push
ret
shl
std
and
fistl
ret
icebp
inc
mov
cli
mov
xor
xlat
punpcklbw
lock
mov
les
cmp
lcall
repnz
pop
nop
push
dec
and
emms
clc
les
push
mov
mov
cmovb
les
cmp
add
mov
jecxz
int
jnp
repz
lods
sbb
in
inc
filds
mov
push
mov
fimull
fs
loope
fidivrl
pop
cld
sti
mov
cli
lret
cmpl
ret
xor
repz
jnp
mov
push
imull
ret
cwtl
jns
mov
ret
or
repz
icebp
cli
cwtl
loope
bnd
shl
scas
icebp
shr
loop
mov
mov
icebp
lret
xchg
in
ret
add
mov
loope
push
das
cs
loop
push
loope
lret
out
xor
xlat
push
or
outsl
xchg
fstpt
xlat
shl
data16
jg
rorl
pop
mov
jb
sub
pusha
stos
jecxz
mov
lret
inc
lock
out
and
jecxz
dec
stos
add
cli
add
cmp
or
sahf
and
sub
sahf
add
shl
mov
outsl
jnp
and
cmpb
arpl
adc
out
jecxz
scas
mov
popa
loope
repnz
jg
ret
mov
ret
push
and
add
orl
rcl
popa
repnz
mov
xchg
or
adc
mov
cli
subl
xor
add
mov
stos
lds
repnz
jge
icebp
shll
orb
roll
jbe
jecxz
jnp
aam
add
jge
jns
sbb
loope
movsl
jmp
rcll
jge
xor
stos
mov
push
out
arpl
pop
xlat
lock
and
cs
and
shl
jmp
push
jbe
mov
push
mov
pop
lds
sbb
aaa
dec
test
mov
mov
sahf
out
mov
xchg
div
aas
cmp
and
jnp
pop
data16
fiaddl
adc
pushf
xor
xor
aas
popa
ret
add
pop
ret
dec
in
add
sbb
std
or
loopne
inc
jno
sarl
push
rclb
imul
aad
inc
icebp
xorb
pusha
rcr
fisttpl
mov
inc
mov
bound
out
adc
inc
inc
xchg
sub
mov
not
jmp
mov
and
daa
or
dec
xlat
bound
mov
jg
pop
andl
xchg
inc
inc
imul
inc
add
rcr
or
mov
lahf
jg
mov
add
xor
mov
add
add
lahf
popa
jl
jecxz
icebp
ljmp
jnp
mov
insl
mov
jecxz
in
inc
push
popf
addl
popf
jecxz
and
out
popa
aas
add
and
add
adc
rorb
jae
fwait
out
sub
pop
sbbb
jecxz
inc
repnz
add
cli
orl
gs
and
shl
out
addr16
imul
mov
sbbb
dec
pop
movsl
lock
jae
jns
add
cli
adc
or
repnz
subb
stos
xorl
mov
dec
add
rol
lret
stc
outsb
cs
xlat
cli
test
loope
popf
repz
cmp
or
sbb
cmpl
jp
loope
ret
xor
cmp
fwait
push
pop
inc
cmp
jnp
adc
ret
fisttpl
arpl
cmpsl
inc
mov
lret
std
inc
frstor
mov
arpl
imul
push
mov
mov
dec
sbb
ficoms
lock
enter
pop
mov
inc
ret
mov
imul
jecxz
loopne
leave
sbb
mov
mov
and
mov
arpl
testb
mov
jb
jnp
ret
dec
sbb
cli
and
jae
jnp
cmpsl
and
add
and
jnp
leave
dec
inc
loope
addl
mov
push
insl
repz
jg
push
cltd
add
mov
add
bound
sub
ret
mov
add
ds
out
shl
adc
loop
cld
rcrb
int3
mov
in
jb
add
fisubs
testb
inc
loope
jae,pt
ret
xchg
outsl
ja
dec
lock
mov
cmpsl
push
xchg
ds
mov
out
mov
lock
inc
clc
xorl
sarl
std
sub
xlat
cli
rol
jae
cmpl
repz
arpl
add
inc
inc
icebp
cli
dec
xor
andl
mov
sar
arpl
inc
cli
or
push
jl
mov
incb
mov
sbb
add
shrl
frstor
je
mov
mov
loope
cli
aad
mov
loopne
inc
in
mov
ret
scas
leave
out
iret
cli
xlat
jae
je
fwait
pusha
dec
mov
icebp
scas
enter
mov
orl
adc
add
loope
jp
sti
arpl
fiadds
jne
push
pop
test
popa
shll
bound
fwait
pop
cmpsb
ljmp
fwait
mov
icebp
fwait
mov
icebp
fwait
pop
push
lds
bound
or
pop
dec
ljmp
cmc
icebp
mov
in
or
pop
es
fwait
jecxz
sbb
and
mov
andb
and
add
inc
cmc
add
xorl
add
jg
in
pop
push
arpl
inc
lret
aas
ja
xor
fwait
inc
out
jle
addr16
lret
add
jecxz
inc
repnz
clc
add
inc
jp
mov
rol
inc
dec
in
enter
and
jg
adc
xlat
les
mov
pop
das
mov
ret
iret
sahf
inc
cli
jnp
mov
loope
loope
addr16
xor
popl
cli
mov
jecxz
mov
push
enter
mov
sbb
jg
xchg
mov
loop
jg
jge
jecxz
stc
fs
dec
popl
js
ret
adc
mov
pop
add
stos
xor
sarb
cmp
leave
or
inc
xor
mov
arpl
mov
mov
xor
roll
loop
push
xor
iret
dec
lret
and
push
sbb
loop
ljmp
notl
and
stos
mov
fsubrs
jno
jb
inc
xor
mov
push
pop
pop
xlat
outsl
and
jl
xor
sub
sbb
ficomps
jecxz
leave
lods
into
inc
lods
mov
and
jg
or
clc
pop
jg
shll
jne
ds
popa
mov
leave
icebp
mov
jp
jl
cmp
add
ret
jmp
repz
loop
ret
xor
bound
orl
sar
loope
sub
sarb
ret
mov
cltd
mov
ja
roll
andl
inc
xor
jecxz
shlb
add
out
sub
shl
fistl
popf
xorl
jo
adcl
jg
push
or
mov
and
dec
ret
mov
add
jecxz
push
loope
push
lods
sub
cmp
sub
ret
xchg
pop
mov
dec
xlat
lds
je
cld
xor
cmp
add
in
mov
xchg
testb
xlat
lock
stc
es
outsl
sar
fs
or
mov
push
loop
ret
pop
adc
arpl
sub
pop
mov
shlb
xchg
cmp
loopne
jecxz
jecxz
add
addl
add
lret
data16
sbb
fndisi(8087
add
adc
xchg
add
jecxz
jg
add
inc
sbb
gs
inc
ret
out
jg
xchg
dec
pop
cmpb
jecxz
icebp
mov
sbb
push
inc
mov
dec
cmovno
pop
dec
fsubr
add
pop
icebp
pusha
stos
ret
mov
push
add
cmp
jge
mov
ret
daa
in
andl
mov
movsl
pop
add
jne
mov
pop
lahf
lds
inc
jecxz
dec
and
mov
cmp
in
outsl
or
pop
out
jecxz
scas
pop
jecxz
popa
fcmovnb
pop
or
mov
ret
fsubs
outsb
xchg
ret
cmpsl
popf
jecxz
xchg
out
clc
loop
xchg
jp
aas
mov
inc
mov
daa
adc
loopne
mov
pop
jg
mov
inc
js
adc
arpl
movsl
push
inc
scas
mov
add
jno
scas
inc
jecxz
mov
addl
and
push
sub
out
jb
jecxz
bnd
mov
sub
and
arpl
and
ret
xchg
insl
add
inc
and
xorb
and
cmp
in
out
pop
pop
push
cmc
sub
and
mov
ret
gs
jg
push
fists
mov
repnz
jle
mov
cli
add
sahf
xorl
and
cmpsb
cmp
popa
jg
push
aaa
add
stc
andl
jae
push
mov
mov
andl
jg
push
loopne
arpl
or
subl
test
inc
in
ret
mov
mov
and
jecxz
shlb
pop
fcoms
hlt
fwait
addl
inc
pop
out
inc
pop
adc
cld
adc
or
pop
xlat
cli
xchg
jg
shll
mov
pop
nop
mov
out
cli
push
and
mov
jg
mov
lahf
ds
shll
div
jg
sub
insb
dec
arpl
js
ret
movsb
mov
aad
add
or
outsb
xor
mov
adc
mov
fnstenv
ret
inc
repnz
test
roll
mov
xchg
cmpb
loope
push
stc
ret
loope
xor
sub
jmp
xchg
dec
shl
stos
ret
and
xor
jnp
push
push
add
dec
scas
dec
add
add
lret
adc
jnp
test
add
daa
xchg
add
inc
mov
shlb
pop
jecxz
pop
data16
xchg
out
ja
mov
jecxz
pop
jo
das
in
loope
jecxz
shlb
jecxz
cmp
clc
add
mov
and
xorl
test
movsb
jo
mov
jnp
inc
mov
xorl
and
jecxz
xor
mov
xlat
jnp
inc
and
mov
stos
cmp
icebp
mov
shlb
fwait
mov
arpl
mov
xchg
push
pop
mov
fwait
outsl
dec
cld
push
loope
push
ss
jae
pop
ret
sbb
xchg
jle
out
je
lret
loope
jb
jnp
cmp
loop
mov
mov
mov
push
xor
loop
and
repnz
cmp
leave
fucomp
and
add
stc
push
mov
ret
addb
mov
cmp
ret
pop
iret
sti
xor
lcall
clc
and
pusha
and
sahf
sbb
arpl
sbb
mov
cmp
scas
or
jle
mov
sbb
jg
ret
clc
cmp
mov
loope
mov
and
cltd
bound
cmp
mov
sbb
adc
mov
mov
std
jnp
pop
jae
push
xchg
outsb
mov
sub
adc
fdivs
xchg
ret
fwait
pushf
and
mov
in
sar
push
mov
stos
push
jo
and
out
js
jmp
popf
jnp
movq
jo
inc
sarl
xor
bound
loopne
dec
leave
mov
sub
out
shll
push
aaa
xor
jg
jae
flds
rorb
mov
mov
pop
mov
and
std
scas
scas
mov
aas
js
push
cmp
add
fists
loope
jo
xorl
xchg
std
mov
loopne
push
inc
ret
jmp
shll
mov
idivb
ret
mov
inc
mov
vpcmpgtd
sbb
jecxz
out
and
imul
lock
add
mov
cmp
sti
shl
movups
sbb
add
fnstenv
cmp
outsl
inc
mov
out
shll
mov
xlat
stos
cmp
mov
scas
dec
cltd
or
mov
sarl
push
pop
add
mov
cli
js
xor
pmuludq
adc
fldlg2
jb
pop
dec
mov
fwait
jae
mov
jg
add
mov
jnp
and
scas
sub
mov
adc
jp
es
mov
pop
push
xchg
dec
push
adc
lods
dec
mov
shll
lret
std
xor
xchg
mov
xorl
call
cli
stos
jo
arpl
xchg
or
jecxz
repnz
push
mov
adc
jecxz
icebp
ljmp
sbb
cli
rcrb
stc
push
pusha
push
adc
mov
xchg
cmp
stc
arpl
bnd
jl
add
mov
fsubl
mov
stos
ret
shl
jnp
int
add
lret
xlat
mov
out
loope
sub
bound
mov
lds
inc
stos
mov
mov
xor
sahf
and
icebp
cli
test
ljmp
arpl
scas
ret
dec
shll
xlat
pop
xor
xchg
mov
and
xchg
add
xchg
push
jnp
out
pop
ds
adcl
stos
push
pushw
sar
add
sti
in
fnsave
xor
xchg
je
test
adc
scas
test
and
lahf
clc
bound
mov
jo
xchg
aad
mov
push
add
idiv
lret
mov
cmpsl
cmp
xor
fisubrl
push
sti
mov
pop
adc
bnd
stos
or
ret
lock
adc
and
dec
insl
mov
cltd
jge
shlb
mov
filds
rcr
push
mov
mov
jo
cmp
mov
push
pop
stc
and
pusha
mov
lea
out
jbe
aam
arpl
sub
jg
jae
lock
js
int
or
nop
sub
jnp
imul
ret
stos
add
arpl
or
jo
inc
jnp
arpl
loop
scas
sbb
sub
insl
ret
sti
mov
fwait
repnz
pop
ror
filds
sbb
mov
mov
pop
jmp
xor
test
icebp
add
fcom
cli
cmpb
xor
jb
jb
ficompl
arpl
push
cld
lret
fwait
loope
roll
scas
jle
jl
xor
cmpsl
test
jnp
dec
loopne
fistpl
loope
cli
and
dec
cmp
jg
jg
outsb
jl
mov
repnz
and
cli
nop
loope
repnz
adc
ret
mov
test
in
push
xchg
icebp
cli
lcall
pop
mov
std
bound
arpl
cli
shll
rol
sub
jecxz
dec
shll
jg
add
shl
mov
sti
sar
aas
pusha
jecxz
sarl
mov
cli
in
outsl
loopne
mov
sahf
xor
iret
inc
mov
xchg
cmp
pop
iret
loop
cmp
jo
mov
arpl
clc
add
fyl2x
incl
mov
and
call
jg
dec
arpl
arpl
adc
xchg
es
jecxz
nop
pusha
push
dec
mov
mov
insb
jecxz
cmpsb
loopne
jecxz
in
xchg
fs
loopne
daa
xor
push
fbld
mov
and
negb
lret
bound
or
fbstp
xor
xor
imul
sub
xchg
lcall
fs
mov
int3
stos
inc
nop
and
test
or
mov
out
ljmp
sahf
and
mov
pop
mov
adc
notb
adc
xor
and
and
add
mov
rclb
test
das
xchg
or
jnp
outsl
mov
cmpsb
jae
daa
inc
pop
and
fisttps
pushf
mov
cmp
pop
pushf
cmp
ret
pushf
mov
jae
xor
cld
fdivp
mov
rcl
pop
or
ja
jecxz
sahf
mov
jmp
add
scas
ds
outsl
pusha
in
mov
lcall
jecxz
icebp
ljmp
ffree
cli
stos
lahf
dec
scas
lcall
mov
and
push
notb
inc
dec
arpl
daa
xchg
push
jecxz
jecxz
sbb
int3
jg
pusha
add
xchg
lahf
daa
clc
push
rcll
pusha
mov
incl
std
stos
mov
dec
or
addl
mov
jno
fistl
inc
data16
cmp
cmc
cmpsl
cmp
das
in
ss
clc
gs
lret
rclb
inc
sub
or
cmc
pop
std
test
aas
f2xm1
cli
jl
adc
lods
jecxz
out
sbb
ret
jmp
mov
fucomp
sub
jle
sti
pop
bswap
jmp
mov
jmp
jge
popf
inc
sub
rcr
leave
gs
iret
mov
cwtl
aad
pop
in
aad
and
insb
jns
jge
add
leave
jp
aad
addr16
arpl
out
mov
ljmp
mov
and
jae
js
cmp
xor
jne
jae
inc
jno
sub
jge
adc
loop
imulb
stos
je
inc
push
repz
addr16
es
add
sarb
add
inc
adc
stos
push
xchg
pop
jne
mov
xchg
sbb
imul
inc
jnp
nop
mov
lock
test
push
pop
cmc
leave
cmc
or
adc
lea
push
lret
mov
xor
lock
aas
pusha
mov
icebp
push
test
sarl
pop
je
les
aad
jle
dec
xchg
push
out
mov
sbb
xor
sbb
or
repnz
stos
push
adc
jge
pop
decb
mov
jg
add
sti
cmp
int3
aas
pushf
sub
shll
in
jae
pushf
jbe
mov
push
sbb
lcall
andb
sub
pop
ret
inc
ret
mov
jb
push
sahf
pop
daa
mov
sbb
mov
mov
aas
sti
andps
mov
add
xchg
fstl
cmp
loopne
and
xchg
or
mov
mov
das
inc
clc
xchg
aas
int3
lret
and
mov
addr16
sub
cmovl
xchg
loop
aam
and
mov
ljmp
loope
pop
pop
xchg
shlb
pushf
not
cld
cmc
mov
xchg
addr16
sbb
push
stos
leave
testl
hlt
call
out
sarb
and
add
inc
dec
add
cmpsb
mov
mov
arpl
das
inc
daa
shl
fwait
mov
pop
and
cmc
loope
int
out
fcomps
or
jo
pushf
dec
cmp
mov
inc
sub
xor
mov
loope
cmp
ss
adcl
mov
in
imul
xorl
loope
adc
jp
mov
ljmp
xor
inc
lods
sub
outsb
into
mov
loop
mov
mov
xchg
cmp
pushf
in
push
imul
or
xlat
hlt
cmp
sarb
loopne
call
movsb
xor
mov
push
jle
add
rcll
adc
xchg
mov
dec
mov
pop
mov
imul
flds
movsb
mov
test
sub
mov
lcall
aaa
adc
cltd
xabort
dec
mov
pop
pop
xchg
xchg
push
sub
int
ficompl
adcb
mov
enter
mov
je
jo
lea
lcall
in
imul
in
mov
int
mov
cld
enter
daa
mov
insb
xor
pop
lods
sub
insb
jo
movsb
sub
jne
mov
clc
mov
sub
xchg
jecxz
add
clc
test
nop
aam
out
inc
pop
jo
fldl2e
ljmp
pop
push
stos
int3
lret
adc
mov
pop
cld
fcompl
sbb
jl
pushf
outsl
pop
inc
jbe
mov
bsf
pop
out
iret
push
scas
les
jl
enter
jecxz
pop
mov
movl
mov
xor
pop
add
sub
gs
and
jne
mov
jmp
cmp
cltd
xor
inc
shll
inc
inc
fcoms
lods
mov
fidivrs
xor
orb
push
gs
stos
sarb
sbb
imul
pop
gs
ret
out
test
stc
notb
imull
rorb
cld
mov
ljmp
sbb
daa
iret
call
loope
sbb
sbb
cmpsb
pop
dec
call
pop
insl
jbe
int
into
out
inc
test
insb
addb
inc
rclb
fs
repnz
push
mov
cmc
cmp
add
sub
arpl
aas
inc
mov
mov
testl
cmp
inc
mov
xacquire
lea
inc
sub
int3
xchg
adc
and
dec
pop
iret
mov
mov
outsb
and
push
pusha
ja
mov
jne
in
ficomps
mov
push
xor
pop
dec
mov
dec
sbb
jae
mov
sarl
test
cmp
jne
mov
mov
jb
mov
pop
mov
lods
push
lods
lcall
je
jnp
popa
or
mov
xor
cltd
dec
mov
repz
outsl
int
icebp
cmp
pop
mov
out
shrl
inc
out
aam
ds
aaa
mov
fisubrl
pop
jo
imul
push
popa
and
xchg
fnstenv
xchg
out
or
repz
test
dec
adc
push
movl
adc
cmp
clc
outsb
test
mov
in
loopne
cmp
jns
lea
pop
aaa
in
iret
mov
mov
jle
push
adc
loop
inc
cli
dec
leave
mov
scas
enter
xor
enter
imul
iret
jbe
push
dec
aas
neg
hlt
push
add
pushf
or
pop
push
xchg
pop
or
adcl
mov
movsb
pop
mov
leave
mov
mov
sub
or
popf
xchg
icebp
scas
cmc
adc
movl
cld
sahf
loope
mov
pop
xchg
jmp
xor
add
cmp
repz
mov
leave
movsb
or
mov
in
mov
imul
xchg
fdiv
mov
pop
fldl
sbb
clc
dec
add
sarl
das
add
jge
mov
test
push
xor
mov
inc
dec
add
lea
call
jmp
not
call
movb
mov
adcl
fiaddl
ret
adc
cltd
xorb
inc
pop
jo
dec
inc
push
fimull
fisubrl
cmp
gs
dec
pop
insb
mov
pop
dec
sbb
clc
cld
adc
mov
mov
pop
inc
test
fwait
xor
das
stc
mov
xchg
popf
mov
call
imul
add
addr16
or
imul
js
data16
inc
imul
push
lock
sahf
cmp
out
or
inc
sub
push
in
aas
leave
lahf
popf
pop
xchg
dec
xchg
inc
leave
test
es
repnz
ds
in
test
dec
dec
push
xor
jo
mov
mov
dec
sub
cmpsb
sub
xchg
loope
or
insb
repnz
inc
ds
mov
jecxz
out
jbe
xchg
or
jo
lea
psubq
sub
pop
dec
test
les
pop
adc
aas
mov
fs
inc
pop
or
inc
cmp
sub
jmp
ss
mov
mov
sub
sub
test
movsl
fbld
push
out
cmp
data16
inc
pop
inc
aaa
lods
pop
push
xor
xchg
jnp
jle
sub
pop
aas
pop
mov
fsubrs
out
aam
sbb
int
mov
jno
push
repnz
jp
flds
xor
insl
out
cli
pop
das
sbb
lock
fidivl
xchg
push
jbe
repz
and
cmpsl
xchg
movsl
adc
push
cmp
jae
sti
ja
pop
mov
xlat
das
inc
and
push
xchg
mov
mov
call
out
push
xor
shr
ljmp
dec
fisttpll
out
dec
out
aam
adc
rolb
mov
cs
mov
sti
mov
pop
inc
xlat
xchg
inc
andb
lods
mov
stos
sbb
in
inc
cmpsl
cmc
jecxz
mov
popf
mov
insb
ljmp
push
loop
mov
iret
sbb
cmpsl
mov
fcmovnu
stos
push
les
mov
stos
shlb
jae
bound
subl
adc
imul
outsb
es
sub
adc
xchg
sahf
or
xor
xchg
mov
rcrb
cmpsb
push
add
mov
mov
out
inc
xchg
addr16
and
call
inc
dec
and
in
subb
lret
cmpsb
daa
addr16
ret
test
pusha
cmpb
push
jmp
lods
dec
xor
mov
jno
test
gs
fisubl
lret
insb
flds
sbb
push
lea
xchg
je
adc
out
dec
lret
mov
ret
pop
add
push
mov
orb
in
mov
cmp
in
sub
push
cmpsb
bnd
push
ja
dec
call
mov
fdivp
aam
adc
out
add
sub
aas
lret
inc
leave
loope
test
aaa
in
movsl
push
add
movsl
mov
adc
into
push
push
mov
dec
in
cmc
arpl
adc
inc
xchg
push
in
int
jl
push
jle
out
repz
push
push
sti
dec
jecxz
fcoms
or
loope
dec
jne
and
ret
call
dec
call
jne
imul
inc
scas
jo
rep
jecxz
loopne
fwait
pop
dec
arpl
sbb
sbb
addl
mov
pop
icebp
mov
mov
das
mov
xor
icebp
lea
cmc
cmp
popf
sub
push
mov
push
sub
or
test
in
mov
sbb
dec
js
mov
mov
loopne
push
dec
push
in
cmp
enter
mov
aam
aas
f2xm1
pop
and
out
cmp
test
dec
pusha
push
out
shll
push
sahf
inc
repnz
and
and
loop
or
xchg
mov
ret
faddp
sub
es
mov
adc
pusha
rcll
xor
dec
cld
dec
lods
cmp
adc
out
mov
cli
cmpsl
roll
mov
jg
pop
aam
das
call
test
push
ljmp
or
xor
dec
xor
ficomps
jnp
sbb
movsb
or
inc
add
mov
mov
int
pusha
les
sbb
sahf
movsb
mov
fistpll
dec
loop
xchg
push
into
dec
and
or
dec
or
or
adc
call
scas
cmp
lds
leave
pop
mov
mov
push
mov
mov
pop
sbb
out
mov
and
xchg
into
test
ret
add
inc
ljmp
pusha
jl
in
xor
push
xchg
mov
das
lret
movsl
ret
or
ss
inc
je
add
jns
into
loopne
js
cmpsb
or
aam
cmp
cmc
dec
ja
ret
mov
lds
fnstsw
xchg
enter
xchg
cs
mov
add
js
arpl
sub
mov
pop
dec
mov
ret
pushf
sbb
mov
ja
mov
add
popf
inc
inc
or
xchg
loope
inc
ret
fs
cmp
pushf
movb
lea
jae
rol
cmp
movsbw
mov
movsbl
mov
stc
call
out
xor
out
stos
das
sub
repz
iret
fistl
ret
and
loop
les
add
jne
sbb
addr16
push
out
fmuls
mov
mov
push
stos
lret
xchg
xor
js
lods
pop
repz
mov
jno
pop
call
cmp
loope
mov
push
adc
out
daa
cltd
mov
lds
mov
stos
pop
sbb
jp
fisttps
in
ljmp
test
mov
xor
mov
lcall
mov
push
jle
jb
in
xor
xchg
xor
push
jb
ficoml
bound
push
and
lds
lods
out
jp
xor
pop
jle
cs
lods
xchg
add
lock
int
roll
dec
loope
lahf
xchg
enter
xor
aas
mov
subl
push
sbb
fs
push
push
repnz
rcrb
mov
inc
ret
mov
fistpll
mov
push
test
sbb
scas
mov
fdivrl
push
jne,pt
or
or
adc
push
mov
movsl
and
aad
int3
cmp
inc
and
sbb
mov
inc
out
jle
mov
or
mov
sub
jns
icebp
movsl
xorl
cltd
mov
pop
mov
ror
fmul
dec
scas
mov
idiv
mov
test
test
xor
mov
mov
cli
es
pop
in
mov
call
test
xor
jle
add
mov
scas
jle
sbb
jmp
insb
adc
test
adc
stc
aad
shll
push
mov
stc
mov
pop
sbb
xchg
pop
daa
inc
or
iret
add
jmp
push
sbbl
in
lcall
and
jb
pushf
pushf
stc
cmpb
call
mov
jmp
outsl
insb
xor
cs
insb
add
add
je
outsl
arpl
add
scas
sub
shl
test
adc
movzbw
mov
stc
bt
stc
sub
pushf
rep
movsbw
jmp
insb
jbe
xor
push
inc
int
cmp
add
jge
test
inc
sarl
andb
push
mov
sub
sbb
call
jb
add
or
popf
stos
lcall
fildl
mov
and
insb
add
cmp
lcall
in
sub
idiv
sub
ret
gs
lahf
setnp
lods
movb
cmc
jmp
sahf
dec
aaa
xor
push
adc
ret
call
ja
out
pop
shll
pop
xchg
mov
jge
movsb
lods
cli
sbb
sbb
push
mov
xor
mov
movsl
add
mov
add
scas
aas
mov
sub
les
fiadds
mov
pcmpgtw
lock
enter
iret
mov
adc
dec
push
out
repnz
and
cmp
add
push
jbe
stos
js
mov
pop
imull
insl
inc
lea
je
shr
je
add
shrd
rcl
mov
cmp
pushf
add
test
mov
pushf
jmp
pop
stc
xchg
push
pop
movsb
subb
cwtl
in
enter
mov
das
scas
mov
movsb
push
or
out
ret
idiv
cmp
pop
mov
gs
adc
out
xchg
sbb
jo
add
shlb
sbb
lds
add
je
addr16
bound
xchg
mov
mov
adc
inc
popa
xlat
mov
scas
pop
cmp
lods
rolb
loope
push
shll
movsl
sbb
pop
inc
fcmovnb
ja
mov
mov
fcmovu
lea
ja
not
inc
pusha
movb
pusha
pushl
inc
push
or
rol
pushf
xchg
ror
bswap
seto
cwtl
mov
jmp
cltd
push
sub
mov
inc
push
sub
push
bound
bound
pop
mov
sbb
sbb
aas
clc
std
rorl
adc
and
ret
mov
mov
lds
push
imul
lds
pop
adc
sbb
pop
pop
notl
mov
jno
gs
cltd
dec
icebp
mov
mov
ds
lcall
mov
inc
andl
lret
push
jg
dec
or
hlt
add
cmp
pop
cld
cmp
shrl
incb
xchg
push
sbb
pop
dec
cli
or
push
inc
cli
mov
in
xor
mov
shlb
lret
out
sbb
and
xchg
dec
pop
jecxz
pushl
jbe
cwtl
sbb
jecxz
push
in
icebp
stos
sub
lahf
push
sub
sub
xchg
cmpb
mov
scas
iret
incl
aaa
mov
xchg
cmp
shll
aas
mov
push
cmp
cmp
aaa
dec
add
cs
mov
dec
pop
dec
mov
pop
subb
popf
and
pop
bnd
dec
stc
test
push
rorl
mov
xchg
ljmp
decb
mov
out
sub
jp
fcmovnbe
jb
mov
sub
mov
hlt
loopne
or
sub
pusha
lods
mov
and
and
xor
sbb
jmp
dec
in
test
inc
mov
sub
mov
mov
popa
or
pop
adc
into
fdivr
jge
lods
xchg
inc
mov
mov
lea
inc
mov
mov
xchg
jge
push
and
add
movsl
mov
add
add
add
adc
add
add
add
add
add
lahf
sbb
add
add
std
sbb
add
add
add
push
and
add
add
call
add
add
add
add
add
add
cltd
sbb
add
add
addb
add
adc
add
add
mov
add
add
divb
sbb
add
add
mov
sbb
fcompl
pop
add
xchg
sbb
ficompl
add
add
pusha
aaa
mov
bound
mov
in
mov
negl
in
pop
cmp
sub
jbe
fbstp
xchg
push
cltd
ds
mov
fcoms
xchg
aad
ljmp
push
pop
add
popa
xor
lcall
dec
cs
ret
testl
rcr
out
add
mov
int3
pop
adc
icebp
jae
sub
ret
adc
mov
jmp
mov
sub
mov
stos
push
jb
loop
add
add
mov
lock
lds
idivl
adc
cmp
sbb
rcrl
mov
outsb
mov
lahf
js
gs
adc
movsl
or
xchg
mov
push
fisttpll
fnsave
adc
inc
push
mov
xchg
and
and
mov
std
jecxz
ss
mov
pop
dec
bound
xchg
fadd
sarb
cld
cmc
sbb
mov
mov
mov
push
jns
lret
push
into
fidivl
inc
push
mov
mov
insl
std
mov
push
shlb
pop
mov
push
cli
loop
gs
adc
mov
pop
adc
out
shl
test
xchg
mov
jecxz
and
xchg
loope
ss
and
mov
sti
js
mov
aad
sbb
and
mov
cmp
enter
and
jns
data16
mov
cld
cli
inc
outsb
xchg
pop
out
dec
cmc
xchg
jmp
out
stc
xchg
mov
in
mov
push
cmp
push
aas
push
cmp
or
add
and
icebp
lods
xor
pushf
jmp
add
cltd
mov
test
ljmp
pop
cmc
aad
xor
push
pop
loopne
mov
stos
or
ret
jbe
adc
std
movl
or
mov
jle
push
push
imulb
pop
loopne
mov
je
jecxz
stos
or
cmp
mov
push
bound
cmp
sub
je
fistps
cmc
rol
repnz
cmc
xor
fldl
inc
sbb
mov
inc
push
aas
or
sbb
mov
mov
pop
dec
jmp
mov
in
and
pop
shl
xor
rcrl
adc
cmp
sbb
inc
icebp
mov
sbb
into
popa
div
mov
das
ss
js
sbb
cwtl
in
lock
jp
and
adc
xor
test
inc
fdivl
ss
push
push
les
ficoms
in
lods
icebp
sbb
inc
dec
mov
outsb
push
jb
outsb
je
jb
add
shr
adc
decl
aad
cmp
or
sub
jl
mov
dec
test
mov
jae
or
jns
and
cmpsl
dec
imul
in
gs
xchg
popa
mov
inc
sub
idiv
rcll
popf
and
xlat
outsl
inc
sbb
add
sarb
insl
cs
xchg
mov
adc
movl
leave
hlt
movsb
and
cmp
lea
xor
jae
lods
cmp
fst
pop
mov
scas
mov
fstpl
inc
clc
cwtl
mov
insb
mov
sbb
sub
sti
pop
test
sbb
or
mov
mov
imul
call
lock
jne
jns
jge
fisttpl
add
pop
and
stos
jmp
adc
mov
xchg
imul
das
dec
in
outsb
nop
in
bound
shrl
dec
or
mov
jecxz
inc
and
or
stos
push
loopne
mov
dec
or
hlt
clc
loopne
iret
daa
sub
adc
xor
out
dec
jb
not
out
popl
push
dec
push
jbe
mov
jle
sbb
jne
or
in
adc
pop
ss
shr
lea
mov
pusha
xchg
ljmp
pop
cmp
lcall
std
cmpsl
int3
or
pop
mov
mov
paddw
repnz
xchg
adc
sub
push
mov
test
jo
pop
nop
fcmovnu
pusha
cmp
movsb
in
out
aaa
testl
stc
cmp
andl
push
sbb
jno
mov
mov
hlt
lock
sub
mov
pushf
mov
pop
movsl
scas
out
out
shrl
sbb
aaa
xor
clc
and
shr
mov
cmc
fstpl
sbb
bswap
ja
mov
xchg
orl
sbbl
pop
lds
jo
pop
sbb
cmpsb
loope
rorb
jbe
addl
jp
jb
out
lret
push
out
and
addr16
sub
addr16
cs
mov
cmpsl
test
shlb
sbb
push
out
in
push
jg
push
scas
dec
mov
arpl
int3
xchg
jp
mov
push
popa
movsb
popa
ret
movups
inc
add
mov
jmp
sub
stos
outsl
aaa
sbb
cmpsb
mov
jnp
mov
outsl
mov
jae
test
and
repz
insb
fadds
pop
lods
sbb
iret
mov
mov
test
lret
mov
pop
xor
test
arpl
dec
jg
repz
cmp
fcoms
sbb
dec
sub
jae
mov
sub
push
jge
xchg
pop
imul
ds
lods
or
ret
outsb
push
add
mov
sahf
stos
push
or
sbb
out
mov
daa
mov
pop
es
shlb
outsl
pop
xor
xorb
dec
je
sub
inc
adc
loop
sub
mov
arpl
rcrl
sbb
ret
add
movsl
jne
mov
aas
iret
out
hlt
mov
cmp
dec
mov
dec
mov
pop
and
lret
and
adc
pop
loop
loope
out
cmpsb
dec
imul
test
dec
jecxz
dec
inc
leave
add
jl
fstpl
dec
aad
inc
cmpsl
xor
arpl
test
stos
push
push
leave
xchg
pop
xchg
lock
inc
jnp
fimull
iret
mov
xlat
xor
xor
sbb
fsub
pop
sar
arpl
add
push
iret
add
jg
popa
mov
push
mov
and
push
mov
and
ficoml
rclb
dec
mov
fistps
sbb
jo
fadd
test
call
sbb
pop
pop
bound
rorb
sarb
inc
hlt
fwait
sub
es
enter
cltd
je
or
popa
add
dec
and
mov
jl
in
push
nop
js
pop
leave
lock
filds
mov
push
push
xchg
add
add
xchg
sbb
xor
xchg
sub
rcl
out
in
adc
and
and
fsubp
jmp
fisubrs
push
lret
pop
insl
dec
mov
sub
sti
aad
arpl
or
jne
jno
in
xlat
jl
lock
or
mov
mov
je
sub
into
or
out
mov
scas
pmuludq
pop
xchg
lock
mov
outsl
xchg
movsl
fs
sub
sbb
mov
out
insb
gs
sub
sbb
pop
insl
into
push
mov
clc
shrb
add
and
or
xchg
aas
insb
cmp
mov
jmp
push
aad
cmp
push
loop
shll
fistpl
inc
fisubrs
daa
bswap
dec
movsl
push
pop
mov
ficomps
outsl
mov
lods
inc
ss
push
fistps
and
pop
leave
pop
cmp
in
sbbb
jnp
push
add
xchg
pop
inc
sbb
and
cld
daa
xor
dec
push
mov
mov
ss
sub
int
lahf
pop
pop
imul
pop
jne
mov
aad
mov
js
or
or
fdivs
shlb
sbb
stos
pop
rcll
add
inc
fwait
sbb
loopne
shrb
sbb
xchg
push
sbb
mov
jne
rdtsc
xchg
push
sub
bnd
mov
mov
dec
pop
push
cs
xchg
inc
pop
lret
cld
mov
setl
movzwl
lret
mov
test
mov
imul
fs
lods
movsb
inc
hlt
and
mov
bound
dec
push
negb
loopne
xor
cmc
lret
repz
scas
sub
inc
aas
sbb
mov
es
mov
and
fstps
imul
xor
inc
xchg
xor
adc
and
inc
into
or
enter
and
mov
loopne
pop
xchg
sbb
adc
arpl
std
icebp
pop
cli
xchg
out
stos
adc
sbb
xchg
sahf
jle
fwait
test
ret
cwtl
adc
push
pop
adc
pop
xor
outsl
pusha
pop
xchg
into
add
orl
ja
and
xchg
xchg
or
mov
jne
inc
addr16
xor
inc
mov
xor
push
pushl
out
mov
test
pusha
orb
sbb
pop
pop
daa
push
fnstenv
dec
fwait
shl
test
idivl
add
pop
sub
cltd
je
imul
sub
xchg
int3
push
cmpb
ss
xor
pop
ljmp
pushf
inc
int3
jnp
add
jge
mov
popf
sbb
insl
pop
mov
cmp
loopne
iret
aas
jo
loopne
xlat
mov
ljmp
test
xor
xchg
mov
push
push
sbb
pop
push
xchg
inc
fisubs
adc
data16
enter
mov
lods
xor
mov
fwait
jno
xchg
int3
mov
push
cli
pop
lock
shll
sub
js
out
pop
das
push
xlat
daa
mov
out
fadds
jmp
clc
jns
jne
sti
lahf
ficompl
mov
dec
and
lds
and
jb
insl
in
cmpsl
das
dec
in
mov
pusha
cmp
jecxz
jae
sbb
mov
das
add
aaa
push
hlt
fcmove
push
stos
jmp
in
xor
mov
xor
sub
inc
ficoml
pop
shld
jp
lret
mov
xlat
dec
lret
mov
push
inc
sarl
mov
neg
sahf
inc
xor
and
scas
add
mov
and
push
push
sti
jg
in
lds
lahf
fsubs
inc
and
xchg
jle
arpl
cwtl
adc
mov
out
mov
mov
or
lret
adc
adc
sbb
pop
jle
jbe
mov
mov
adc
push
out
mov
pop
outsb
push
sbb
mov
add
jbe
stos
lods
adc
add
jl
sub
pushf
add
xlat
pop
fiadds
ror
mov
outsb
fwait
dec
imulb
mov
subb
fsubrl
scas
mov
push
xor
js
stos
mov
push
pop
mov
stos
test
pop
inc
rcrb
repnz
push
sbb
xchg
ja
sbb
xchg
cmpb
outsb
inc
mov
or
les
xlat
daa
cmp
aad
pop
nop
push
sti
mov
add
jmp
dec
fdivp
in
jmp
andl
inc
mov
stc
jge
inc
pusha
loopne
jmp
xchg
fwait
push
ficoml
lds
pop
pusha
and
cmpsb
mov
scas
cs
movsl
loope
dec
jb
mov
sub
test
jae
dec
push
adc
pop
dec
mov
fmul
mov
loope
rcll
pop
repz
fiaddl
lret
stos
xlat
popa
add
xchg
push
repz
push
cmp
mov
sahf
push
out
pop
mov
stc
loope
in
cmpl
out
fwait
pop
sub
mov
mov
fistpl
int
fidivrs
cld
jle
bound
lret
mov
ja
loope
dec
mov
add
ret
mulb
mov
xchg
dec
and
and
xchg
mov
adc
mov
rolb
movsl
scas
jo
and
cs
push
das
rorb
cli
sbb
aam
fists
imul
pushf
lea
and
lods
mov
fisttps
fisubl
push
xchg
rolb
sub
rcll
aad
ja
sbb
cmpsl
addr16
xchg
mov
lcall
jmp
jns
shll
sbb
xor
xchg
sub
xchg
jb
jmp
test
nop
jle
repz
push
or
imul
popa
cmp
sbbl
test
out
inc
inc
mov
pop
hlt
div
and
add
lret
xlat
das
push
jl
sub
jns
insb
cwtl
mov
mov
sbb
push
clc
mov
divl
mov
iret
addr16
js
mov
push
rcll
stos
xor
add
frstor
mov
jne
mov
sub
xchg
aas
cmc
adc
lods
imul
lahf
add
add
push
cmp
or
testl
mov
cmp
jg
dec
jmp
aad
xlat
push
aas
pop
sub
rcl
pushf
jp
cmpl
scas
out
xlat
fdivs
lret
pop
test
aad
or
mov
xchg
fldt
test
cltd
jns
mov
jns
daa
lcall
ficoml
dec
push
jno
jnp
push
adc
subb
sbb
mov
dec
icebp
or
push
fsincos
mov
lock
mov
insb
push
sbb
nop
push
xor
mov
jno
sbb
mov
int3
sbb
xchg
pop
popa
xor
mov
popf
into
cmpsl
add
dec
jbe,pt
jb
adc
mov
add
ljmp
ret
mov
lods
sub
dec
jle
mov
hlt
in
mov
sub
push
and
xor
stos
sahf
pop
push
jne
push
and
fdivl
cmp
int3
pop
push
int3
cmc
and
mov
out
cmp
xorl
xchg
and
sti
fs
or
inc
mov
push
rorb
pop
ja
icebp
pop
daa
stc
out
mov
imul
test
paddw
adcl
adc
xor
fucomip
lods
push
enter
xchg
daa
jg
adc
ret
xor
out
aam
lods
int3
pop
iret
ja
adc
aaa
test
cmpsb
mov
push
addr16
xor
imul
xchg
push
add
and
movsl
mov
fildl
movsl
mov
jne
ret
test
sbb
iret
ja
imul
sbb
aam
adc
jmp
std
jmp
leave
add
jg
fwait
and
pop
add
test
jmp
std
es
jp
sub
jl
adc
movl
cwtl
jle
adc
insb
xor
mov
pushf
ret
dec
mov
cmp
xor
into
fisttpll
divb
jle
pop
cmp
mov
cmp
xor
inc
pop
shll
inc
adc
inc
popa
fnstcw
sbb
lea
into
les
jno
stos
mov
movsb
cmp
adc
stos
mov
inc
adc
out
cmp
jo
push
add
adc
cwtl
push
insb
lea
outsb
inc
icebp
shrb
pop
daa
pop
frstor
xor
xchg
xor
fistl
xchg
cmc
in
mov
jl
xor
psubb
mov
xchg
iret
sbbl
leave
mov
mov
add
push
in
xchg
mov
inc
dec
cltd
in
in
push
add
sub
xlat
scas
scas
test
inc
rcll
mov
and
jg
in
jge
ret
das
not
out
inc
pop
xor
dec
in
jns
inc
mov
pop
or
jns
out
loopne
sub
mov
loopne
popf
subl
out
stos
aad
fldl
lcall
cmp
adc
mov
pop
pop
mov
push
cwtl
out
orb
mov
outsl
mov
inc
loop
les
cmp
mov
push
cmp
xchg
cmp
ret
pop
ss
dec
das
adc
mov
repz
jo
jns
lds
inc
lret
cmp
or
push
jne
hlt
int
push
in
xchg
cmp
les
cmp
adc
mov
cmp
pop
das
pop
push
in
pop
xchg
push
cmp
loop
aas
mov
imul
lds
mov
scas
mov
das
cmp
jnp
imul
pop
scas
lret
ds
sti
daa
xchg
push
jae
add
stos
pop
dec
add
sti
shl
aas
mov
xor
mov
out
mov
pop
mov
pop
cmp
cmp
lods
loopne
adc
xor
xchg
repnz
es
ljmp
jb
adc
mov
jmp
lods
xor
test
adc
lds
add
popf
sub
jl
ljmp
cmp
aaa
stc
movsl
mov
cltd
dec
adc
outsb
push
aas
push
mov
lret
mov
mov
xorl
and
scas
jmp
cld
pop
lahf
aam
aas
orb
push
sub
xchg
lods
pop
jge
or
mov
push
sbb
nop
test
add
test
xor
inc
and
mov
test
mov
ficomps
or
hlt
icebp
add
cmc
scas
ds
pop
mov
mov
pop
es
cmp
cltd
cmp
xor
push
loopne
das
push
lcall
push
dec
popf
xor
in
rorl
mov
out
je
daa
push
rcrb
pop
jae
xchg
pop
push
ret
xor
push
push
lods
insb
adc
fs
push
test
cmp
fidivrl
scas
iret
push
daa
mull
mov
cmp
dec
int3
cmp
daa
divl
adc
add
imul
fs
xchg
out
scas
push
push
jecxz
les
test
adc
cmp
out
sub
insb
jns
mov
xor
push
dec
in
fldenv
nop
sar
cli
lods
cmc
or
or
inc
movsl
add
jmp
cltd
jno
cld
sahf
add
xchg
lea
es
cwtl
pop
orb
push
push
scas
jle
adc
mov
push
or
es
jbe
rcll
mov
mov
lds
xchg
addr16
cltd
hlt
mov
jbe,pt
dec
and
ret
inc
shll
pop
ss
lods
js
pop
dec
push
adc
rcrb
imul
icebp
je
and
rolb
sub
push
adc
rdpmc
xchg
scas
js
jb
dec
or
jmp
nop
add
and
and
pop
pop
inc
add
out
jbe
lods
xor
lcall
das
in
and
test
mov
lea
ja
scas
pop
lret
dec
sub
jnp
mov
add
jmp
rcl
insb
hlt
fcmovu
push
jno
fldpi
jecxz
enter
sub
imul
dec
daa
nop
js
cs
out
push
jmp
fsub
out
pop
lods
cwtl
sbb
sahf
test
rcr
pushf
mov
mov
sahf
pop
push
loope
cmp
inc
push
xor
jg
inc
push
adc
dec
adc
loop
dec
lods
sbb
jmp
outsl
fcoms
xchg
aas
outsl
arpl
or
call
mov
bound
lods
inc
jecxz
repnz
call
push
in
mov
mov
mov
ljmp
popf
sub
jne
cmpsb
pop
out
pop
das
xchg
ret
mov
cmp
cmp
mov
pop
adcb
cmpsl
add
mov
test
push
mov
mov
jge
pushf
test
fst
push
pop
aam
rorb
add
add
leave
xchg
call
mov
fdivrs
std
scas
add
test
xor
jae
add
jbe
pop
adc
sub
inc
scas
popa
out
aaa
push
pop
jg
dec
xor
mov
inc
cmp
call
sub
fistpl
jnp
iret
pop
xchg
xlat
stos
ret
clc
add
mov
aas
pop
out
das
loope
xchg
mov
mov
inc
scas
fistpll
inc
xlat
mov
jecxz
mov
mov
nop
sti
sbb
dec
or
daa
inc
fdivs
push
stos
push
aas
negb
cmp
std
shl
les
lods
popf
mov
testl
sarb
scas
psubb
mov
lods
leave
sub
or
adc
aaa
daa
scas
sarl
cli
push
in
pop
xchg
lock
dec
cmp
add
inc
in
outsb
inc
push
adc
mulb
pop
ds
shll
lds
pop
lods
lods
mov
bound
xor
sub
cmp
out
add
pop
inc
clc
repnz
jmp
mov
sub
jl
add
add
cmp
dec
int
mov
fstp
jne
xorb
movsl
and
arpl
cmp
test
gs
xchg
pushl
xchg
push
ret
pop
cmpsl
lds
xor
xchg
jno
mov
mov
in
aam
add
pop
xchg
push
shll
pop
mov
jecxz
scas
pusha
cmp
pop
pop
imull
jge
fsubs
shl
pop
and
cmp
sub
add
xor
imul
xor
mov
push
aaa
pusha
xor
cmpsl
xor
mov
fs
add
loope
adc
outsl
icebp
xchg
jns
push
sub
mov
daa
mov
xor
arpl
imul
xlat
adc
adc
fidivl
popf
hlt
idivl
cmpsl
pop
repz
mov
lds
sbb
aam
loope
mov
les
aad
inc
int
or
cmp
cmp
in
outsl
or
lods
into
stos
xchg
pop
xor
pop
test
mov
negb
icebp
mov
movsb
and
fbld
jae
xchg
push
or
add
add
je
sbbb
fdivrp
and
mov
dec
int3
dec
and
jge
aaa
fistps
int
mov
jecxz
sbb
cmp
fisttpll
les
dec
dec
sub
rcr
popf
mov
pop
out
pusha
loopne
inc
shr
mov
mov
and
cvttps2pi
ficomps
or
cmp
mov
or
mov
fisubrs
imul
pop
adc
mov
add
xor
xchg
gs
or
loope
jns
push
sbb
je
popa
push
and
cli
jp
sub
add
stos
xchg
es
dec
fldcw
cmc
das
pop
xor
mov
lea
incb
fdivl
add
cmpb
push
lds
insb
sub
xchg
ret
cmp
push
pop
aaa
cmpsl
dec
fsub
dec
leave
popa
aaa
cmovb
sahf
sbb
add
imul
push
inc
shrl
mov
jb
lods
fldl
test
jbe
mov
and
movsl
lea
stc
ds
xchg
xchg
jecxz
mov
or
ljmp
fsincos
xor
push
push
pop
loopne
dec
sub
ds
mov
lock
add
sbb
and
adc
repz
repz
xor
xor
adc
fwait
and
sbb
and
add
xor
push
mov
lahf
xor
xchg
push
inc
mov
add
mov
add
nop
pop
test
aas
adc
loope
out
sarl
or
or
xchg
mov
mov
aaa
adc
scas
xchg
mov
lret
mov
pop
add
dec
push
mov
cld
push
jne
sbb
enter
lret
mov
xchg
call
je
and
fsubs
dec
pushl
cmp
dec
and
cmp
or
cld
xchg
ljmp
sbb
sbbb
data16
scas
cltd
sub
xchg
outsl
push
stos
push
adc
fwait
mov
sbb
mov
cwtl
loop
mov
add
jmp
and
stos
mov
aam
inc
gs
cltd
loope
push
out
xor
cwtl
outsl
test
dec
adc
or
xchg
xor
cmp
cli
sbb
and
addl
pusha
cmp
mov
add
je
cmp
lret
adc
aam
daa
jmp
movsb
dec
imull
xchg
les
or
jne
cmp
or
fcmovnu
outsb
xchg
mov
mov
movntq
das
insb
xor
outsb
test
test
data16
je
mov
pop
jnp
jnp
sub
push
jmp
rorl
or
and
test
mov
cmp
dec
fwait
lret
jecxz
fldt
xor
dec
or
and
push
cmpsl
pop
mov
mov
fs
dec
push
or
mov
push
inc
push
sbb
jp
add
adc
out
into
sbb
repz
jno
xchg
loope
orb
mov
lea
xor
push
sub
insb
add
add
mov
in
ljmp
insb
inc
xor
inc
test
aad
mov
int
popf
xor
add
in
jg
stos
addr16
mov
sub
and
stc
in
inc
xlat
mov
mov
xor
cmp
out
cmovg
in
in
mov
xchg
mov
lods
xor
sub
cmp
inc
popa
loope
dec
hlt
xor
into
xchg
sbb
cmp
in
inc
ds
and
pushf
fs
lahf
sbb
xor
bound
xchg
cld
cmp
sahf
das
xchg
lds
push
cld
add
in
mov
lcall
jl
adc
sbb
xlat
pop
je
rorb
js
jns
mov
inc
dec
xchg
int
imul
push
dec
cld
mov
dec
push
or
out
es
adc
and
scas
repz
sbb
jl
mov
in
test
jns
sub
adc
pop
stos
rorl
int3
xor
cmp
mov
int3
jns
imull
lds
xchg
adcl
adc
scas
xlat
mov
scas
ret
or
cmp
or
or
cmpsb
and
fisubs
out
clc
call
cmpsb
pushf
cmp
lods
pop
xchg
aam
and
pop
fildl
mov
pusha
pop
push
mov
cmp
jae
adc
xor
imul
pushf
pop
repnz
jecxz
push
inc
out
sarl
adc
mov
shll
or
inc
lcall
jb
push
xchg
add
cli
imul
bound
repnz
and
inc
cmp
mov
jo
int
xor
mov
dec
jmp
fistps
sbb
jo
scas
sbb
sbb
cmpsb
fsts
push
jo
imul
add
lds
pop
pushf
test
jmp
ja
jmp
pop
add
cmp
or
shrb
or
in
shl
jbe
into
push
jae
cmpl
out
shll
adc
push
mov
aaa
daa
xchg
iret
mov
lahf
push
cmp
and
mov
call
xor
inc
out
mov
lods
jns
pop
and
push
sub
mov
sbb
insl
sbb
gs
xor
dec
cmp
push
and
pushf
mov
sub
and
aaa
adc
sbb
shrb
and
mov
into
mov
clc
mov
mov
scas
aas
ja
sbb
outsl
loop
movsl
nop
test
and
pop
xor
mov
repnz
insb
vmovupd
mov
push
xor
jae
or
fistl
pop
movsb
mov
jecxz
mov
popf
repz
das
daa
lret
sub
xor
push
inc
movsb
mov
inc
cmp
clc
insb
insb
mov
cltd
seta
outsb
xchg
or
js
sub
stos
insb
imul
sub
mov
pop
daa
xchg
dec
dec
or
add
rol
call
fstpl
jb
push
pushf
out
dec
mov
mov
cmp
fcompl
sahf
int3
rolb
xchg
pushf
fsts
xchg
ss
xchg
push
ret
pop
mov
push
jae
repz
sahf
out
cmc
sbb
adc
inc
std
jne
xchg
mov
and
out
lods
lods
in
push
repz
xchg
sti
cmpl
in
cmp
fmull
add
or
aaa
inc
cli
je
xchg
imul
and
push
fs
andb
loop
mov
cmpsl
push
pop
mov
inc
mov
sbb
movzbl
pushf
mov
mov
shld
mov
or
shr
add
pushf
inc
shld
adc
mov
test
or
pusha
call
and
dec
pop
mov
push
sbbb
out
mov
mov
xchg
ficompl
or
psraw
pop
adc
mov
mov
xchg
push
add
cs
adc
or
testb
fidivrs
sbb
pop
cltd
push
ja
jmpw
cmp
jbe
ret
pushf
adc
mov
jne
sub
mov
adc
mov
mov
js
fdivs
mov
mov
dec
or
mov
cmp
cs
dec
sub
jns
das
addr16
ljmp
je
rolb
xchg
std
push
leave
mov
xor
pop
les
jmp
xor
mov
jmp
popf
adc
push
jno
push
push
jo
dec
push
xor
jns
in
sub
dec
test
arpl
in
incb
bound
cmpsb
add
cmp
loopne
jl
popf
aad
pop
xlat
cmp
pop
add
sbb
push
in
sbbb
sahf
lahf
or
rcll
imul
inc
cld
pop
sti
sbb
fisttps
movhlps
pop
xorl
scas
mov
clc
lods
add
js
xor
filds
fsubs
lock
adc
and
mov
push
push
ret
adc
inc
in
xchg
loopne
dec
sub
cs
mov
in
cwtl
cs
mov
mov
call
pop
loope
pop
mov
and
cld
sarb
fwait
stos
out
notb
loope
movsl
bound
lret
push
mov
jecxz
xor
aas
test
xor
cmpsl
inc
cmp
outsb
add
push
lahf
jp
and
bound
push
fisubs
arpl
test
ds
imul
add
pop
fstl
sbb
and
icebp
jmp
add
push
je
inc
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
jmp
insl
aaa
dec
pop
mov
mov
es
jle
adc
sahf
pop
popf
fwait
xacquire
sub
out
mov
repnz
sbb
fidivrl
pop
dec
adc
mov
sysenter
jp
mov
dec
int3
push
jmp
lock
mov
jmp
inc
add
mov
xor
aaa
push
fstpt
pop
mov
outsl
mov
cmc
mov
jno
push
fcmovu
sbbb
push
jb,pn
ljmp
or
add
jl
sbb
out
push
jle
mov
mov
lret
add
pop
push
pop
ljmp
sbb
int3
xchg
cwtl
sbb
mov
insl
idivb
pushf
sbb
fmulp
fildll
hlt
add
push
sbb
cld
cli
and
movsb
fidivrl
adc
lret
mov
or
mov
adc
add
je
adc
adc
add
call
scas
xor
mov
sbb
cmp
clc
mov
adc
cmp
fdivrs
pop
cs
movsl
jmp
divl
inc
movb
jecxz
nop
scas
push
daa
pop
push
je
dec
add
hlt
inc
in
mov
out
xchg
xchg
movsl
std
dec
mov
jecxz
outsb
jb
fiaddl
xor
dec
sahf
adc
mov
push
dec
outsb
mov
xor
sahf
pop
stc
rclb
xchg
pop
mov
jne
jnp
inc
cmc
arpl
addr16
adc
out
adcl
xor
bsf
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
inc
pop
mov
lea
test
or
test
sbb
imul
mov
lcall
das
pop
and
pop
dec
jmp
fndisi(8087
mov
xorb
fsubp
xor
loopne
push
rcrb
aaa
pushf
push
mov
mov
pushf
push
movw
pushl
ret
jmp
push
lea
adcb
and
scas
testb
xchg
fimuls
add
cmp
push
sbb
or
ret
iret
xchg
in
test
cmp
mov
jbe
jne
jne
mov
mov
xchg
mov
movsb
push
push
std
and
mov
ljmp
aad
mov
dec
ret
pop
jo
jae
std
mov
pusha
lahf
stc
push
inc
cmpsb
sub
aad
mov
inc
add
int
lods
sbb
mov
sti
xchg
roll
stos
jns
cmc
dec
or
lret
pop
test
movzbw
not
pop
jmp
inc
mov
pushw
popfw
call
push
dec
dec
dec
dec
cs
insb
add
dec
pop
mov
push
jb
and
xchg
shr
cmp
jge
mov
daa
les
mov
push
or
xchg
push
fsubrs
jns
loopne
xchg
add
mov
fwait
hlt
clc
mov
fsubl
inc
adc
and
cli
hlt
add
xor
ja
cs
jns
aas
adcb
shll
aad
jecxz
int3
data16
rcrl
mov
fadd
and
mov
mov
mov
sub
sbb
js
pop
fs
add
cmpb
add
pop
mov
jp
jp
push
and
jb
bound
push
mov
test
xor
stc
lahf
jne
das
pop
cmp
leave
loope
push
pop
adc
jns
and
dec
gs
fldt
sbb
test
pushw
test
cmp
pop
add
lcall
outsl
mov
inc
stos
mov
mov
cmp
std
mov
adc
pop
mov
outsl
arpl
lret
xchg
xchg
pop
cmpsl
hlt
mov
hlt
mov
je
sbb
jae
lahf
aaa
or
push
xchg
inc
pusha
hlt
mov
in
xchg
xchg
push
or
mov
pop
sahf
or
inc
jne
pop
out
xchg
mov
adc
lcall
aas
out
pop
push
jnp
lock
popf
sub
loop
shl
fnstsw
cwtl
push
idivl
lahf
mov
sub
xchg
sbb
xchg
jo
push
cs
lcall
mov
mov
mulb
jbe
pop
pop
or
cmp
shrb
mov
adc
das
or
mov
pop
add
jp
bound
inc
out
insl
jae
and
adc
mov
scas
mov
mov
jmp
in
aad
scas
pop
xchg
mov
mov
xchg
adc
mov
add
mov
daa
cmp
xchg
pop
dec
mov
lret
inc
sbb
stos
jb
mov
mov
inc
cld
les
std
lds
inc
stc
mov
shr
jmp
xlat
sarl
movsb
sub
fdiv
mov
push
xor
fwait
cmpsl
xchg
mov
pushf
in
dec
sbbb
sarl
ds
jns
lea
ljmp
in
addr16
daa
xchg
fdivrl
add
scas
pop
xchg
stos
cmp
jno
fistpl
fldl
or
mov
pop
insl
orl
arpl
jge
mov
lea
xchg
stos
outsb
add
add
push
xor
dec
icebp
and
inc
xchg
adc
sub
xchg
jp
out
sarb
jge
sahf
lock
repz
shlb
gs
stc
seta
scas
es
ds
stos
rol
outsl
xchg
shl
xchg
or
dec
insl
sub
mov
movsb
push
mov
ljmp
subb
arpl
or
ljmp
pop
pop
inc
sbbb
push
pop
xchg
mov
mov
push
mov
ds
rcr
cmpsb
hlt
or
cs
into
loopne
or
mov
push
jne
jbe
push
orb
ficoms
loop
notb
call
lods
jnp
mov
mov
ljmp
adc
pop
add
cmp
cmp
pusha
rcrb
xchg
notl
mov
daa
mov
or
shll
cltd
inc
pop
mov
pusha
inc
fdivrs
fsubrs
mov
pop
push
loop
insl
push
mov
cmpsb
les
push
movsb
mov
cmpsb
sub
inc
faddl
mov
and
mov
ret
jmp
adc
es
and
clc
mov
xor
xchg
push
stos
es
jl
roll
fmull
pushf
or
stos
or
out
pop
dec
pop
adc
fs
or
jno
mov
jo
push
es
dec
push
push
sub
fistl
cmc
push
or
xor
push
je
js
inc
mov
lods
gs
jecxz
xchg
test
sub
aam
loopne
push
xor
outsb
lds
pop
xor
mov
mov
inc
inc
or
outsb
pop
divl
pop
add
stc
mov
xchg
push
mov
mov
add
add
xor
inc
arpl
cmpsb
stos
ss
ret
pop
fidivrl
inc
sbb
xchg
pusha
call
daa
cmpsl
fdivr
jbe
pop
inc
out
loop
insb
out
and
fisubrl
imul
mov
dec
popa
push
and
in
fsubs
scas
imul
lods
test
lahf
pop
js
sub
leave
lcall
cmp
mov
cmc
or
xchg
xor
pop
mov
int3
mov
pop
jnp
or
dec
jmp
push
movsl
jae
mov
adc
xorl
test
lahf
push
pushf
lea
je
stc
clc
clc
cmp
or
call
pusha
movzwl
sar
movsbw
jmp
add
push
pop
or
lret
idivb
xor
jnp
negb
mov
xor
or
mov
fbstp
test
and
mov
mov
ret
add
arpl
das
daa
jp
aas
mov
addr16
mov
outsl
jnp
cltd
xchg
sub
rclb
inc
pusha
imul
push
or
mov
xor
and
scas
jl
movsl
mov
mov
fs
jbe
movsbw
movzbw
movzbw
neg
sub
clc
rol
clc
mov
add
shr
or
ror
mov
btr
cmp
movzbw
add
adc
rcl
shr
rcr
shld
inc
mov
shl
bswap
add
lea
not
push
mov
movw
pusha
jmp
cmc
repnz
push
mov
push
lea
jne
bswap
call
push
popa
push
mov
pushf
pusha
cld
rcr
inc
in
cmp
and
mov
mov
and
out
mov
inc
pop
inc
out
push
call
shlb
xor
mov
jl
mov
xchg
push
add
lret
andb
arpl
sbb
cmp
lock
push
sub
mov
stos
xlat
addl
test
shrl
div
mov
sbb
mov
xchg
xchg
sub
aam
push
inc
movsb
sub
ss
push
cltd
sbb
push
in
sahf
mov
and
and
adc
lret
and
pop
push
inc
pop
pop
or
xchg
outsb
cli
ds
ds
xchg
pop
dec
fsubrp
sub
lea
sbb
push
int3
fildll
inc
shrl
and
xlat
leave
mov
iret
cmp
jg
jge
shll
lea
aaa
lea
stc
shll
aas
fistps
lea
jb
jmp
rcrl
test
mov
cld
or
mov
nop
push
icebp
repnz
or
xchg
mov
stc
in
and
sarb
sbb
lods
ja
or
repnz
fnstsw
mov
dec
sbb
push
pop
repz
or
addr16
cld
dec
shll
xchg
imul
add
jo
cmpsb
push
not
fs
push
and
mov
pop
int
in
cmc
push
dec
push
inc
push
mov
gs
les
add
xchg
stc
mov
xor
xor
jecxz
pop
ret
or
inc
xor
cltd
dec
testl
test
into
and
add
call
mov
fdivrs
push
mov
push
sub
js
push
push
inc
pop
bound
shlb
test
in
insl
jecxz
call
jae
jmp
aas
push
addr16
dec
lock
push
and
fimull
sbb
leave
test
sahf
fistpl
cmp
add
push
mov
or
repnz
faddl
xor
xchg
sbb
pop
mov
test
lock
push
xorb
sahf
sub
loopne
jl
nop
xchg
inc
lods
fsts
push
std
xlat
test
mov
push
lcall
push
add
xchg
sub
or
jae
or
insl
inc
out
fs
aaa
xor
fwait
nopl
lcall
cli
inc
addr16
pushf
or
push
pop
dec
stc
jl
enter
pushf
xchg
data16
lods
sub
push
bound
jns
mov
or
out
mov
jns
std
fwait
subl
ss
out
mov
mov
jecxz
imul
pop
ret
pop
rcrl
pop
sbb
cmp
incb
xchg
movsb
test
in
bound
mov
jmp
adcl
jb
js
sar
cltd
push
adc
das
cmp
stos
pop
inc
adc
ja
xchg
pop
jb
dec
sbb
adc
cltd
das
fxch
push
pop
mov
lea
xchg
fwait
mov
jmp
popf
fisttpll
cmp
jo
jecxz
in
cli
cmpsb
aas
stc
xchg
push
ret
pusha
and
fs
push
mov
pop
push
clc
ds
dec
xor
fcoms
xchg
push
push
xor
mov
or
mov
loope
jo
push
out
lods
cmc
fnstcw
roll
lahf
push
into
loopne
inc
and
adcl
loop
fimull
mov
xchg
daa
outsl
js
lods
mov
jecxz
jbe,pt
xor
es
cmp
push
mov
jp
jbe
or
sub
mov
sbb
fsubrs
push
or
xchg
andb
jmp
push
lock
test
add
jmp
xchg
dec
ret
daa
mov
test
cmpsb
aam
shr
aaa
jo
cli
loop
mull
jl
scas
dec
dec
ds
insb
add
mov
dec
pusha
call
sbb
mov
sbb
mov
jmp
insl
cmp
pop
sub
and
pusha
stos
fisttps
shrb
scas
jle
stos
adc
int3
je
in
repz
das
xchg
lock
jle
stos
dec
adc
out
add
aas
pop
mov
cwtl
ret
je
adc
dec
mov
and
ds
leave
mov
insb
in
int
sbb
in
adc
je
and
aaa
cmp
sbb
inc
pop
stos
xchg
pop
pop
cli
iret
lods
add
lea
jne
stc
inc
mov
test
add
push
call
lea
jae
stc
clc
xor
pushf
pushf
push
jmp
mov
add
push
dec
xchg
roll
or
fnstenv
xor
es
outsl
jl
push
mov
pop
cmpsl
aas
xcrypt-ofb
cmpsl
imul
sbb
push
or
jge
push
fmuls
mov
movsb
or
xor
or
test
mov
mov
sbb
sbb
xor
popa
imul
adc
ja
repnz
inc
fdivrl
adcb
ret
imul
cwtl
jle
mov
xor
in
daa
jb
iret
mov
fs
call
push
pushf
pushf
pushf
lea
jae
stc
cmp
sub
call
rorl
cmp
push
dec
into
and
push
and
xchg
push
mov
lea
mov
mov
aaa
sbb
es
mov
andb
daa
xlat
js
jecxz
add
jmp
jmp
push
test
test
cltd
pop
shll
ror
pop
mov
inc
mov
dec
push
mov
lret
pop
sub
cmp
mov
cmp
sub
push
aad
rorb
adc
test
test
cmp
pusha
movb
movb
lea
ja
pusha
cmc
pushl
imul
push
add
jg
test
add
pushf
pushf
pusha
pushl
lea
jmp
movl
call
or
stos
imul
pop
mov
dec
xchg
cmp
dec
addl
mov
out
cmpsl
mov
mov
mov
pop
aas
or
cli
cwtl
pusha
ss
jmp
and
mov
dec
xchg
sahf
aaa
andl
aaa
lods
push
ffree
adc
jge
sub
dec
test
mov
imul
hlt
call
inc
pusha
je
adc
subl
aas
jne
popa
cmp
mov
mov
pop
std
dec
push
or
sbb
test
adc
inc
movsb
rorl
add
outsb
cmc
cwtl
sbb
jle
sub
and
pop
cmp
xchg
imul
rorb
mov
pop
add
or
mov
mov
imul
insb
mov
test
mov
lahf
xchg
push
xchg
push
cmc
rorb
mov
movntq
out
inc
iret
icebp
mov
stos
in
add
xor
repz
and
pop
sbb
loopne
sbb
int3
pushf
jns
dec
cld
test
cmpsl
fs
insb
sbb
add
dec
adc
iret
out
inc
add
sub
mov
pop
pushf
pop
adc
mov
int3
mov
jl
mov
ja
pop
ss
leave
stos
test
loopne
aam
or
push
push
mov
mov
jno
xchg
xor
mov
fsub
test
call
xchg
sbb
testl
imul
ja,pt
int
data16
mov
pop
pop
adc
int
pushf
jle
adc
dec
inc
cld
mov
xchg
add
xchg
popf
dec
mov
push
and
jb
mov
sub
and
imul
add
or
gs
push
pusha
jmp
jmp
push
shrb
pop
xchg
xchg
lahf
dec
jg
movntps
mov
mov
nop
mov
and
call
je
mov
scas
test
in
fwait
sti
lahf
fsubl
ds
and
add
sahf
sbb
lods
mov
jg
clc
dec
popa
or
rolb
push
dec
cmp
das
xor
aas
out
cmp
pop
cmc
jmp
push
arpl
cmc
xchg
xor
icebp
inc
and
jmp
pop
std
xchg
leave
xchg
cmc
cld
jno
push
sar
lods
insl
mov
inc
or
addb
out
shrb
pushf
lea
shll
repnz
mov
int
aam
jno
mov
nop
popf
mov
cmp
imul
out
mov
aam
rclb
xor
push
add
mov
mov
jl
mov
inc
sbb
sbb
mov
jl
jns
mov
or
jbe
fimull
dec
lcall
and
lahf
rol
push
inc
cmc
call
out
out
mov
push
cwtl
hlt
fdiv
mov
mov
pusha
rolb
or
dec
ret
test
dec
inc
std
fmuls
cmp
ja
mov
scas
stos
push
push
sub
mov
out
je
push
fcompl
jp
mov
and
test
push
mov
pushf
loop
scas
fs
mov
adc
jl
enter
movsb
push
cld
cltd
rcll
mov
dec
push
cmpsl
sbb
mov
stos
inc
dec
lahf
lahf
mov
faddl
push
push
fcmovne
lods
dec
cmp
cwtl
and
push
inc
sbb
aad
cmp
and
loope
subb
xchg
lods
fwait
ljmp
pop
pop
inc
in
in
dec
imul
mov
je
jb
lods
hlt
jl
seta
or
sub
arpl
sub
inc
dec
shl
in
mov
iret
mov
and
cmc
push
mov
mov
stos
pusha
push
lea
jmp
mov
jmp
mov
xor
push
push
mov
testl
stos
xor
xor
pop
call
xchg
fldl
pop
jb
fiaddl
jbe
fidivrs
popf
inc
sahf
sbb
mov
mov
jecxz
lods
push
xor
mov
movsb
inc
testl
dec
movl
int
or
out
ja
pusha
ds
xchg
push
stc
call
add
mov
add
call
pushl
movw
pushl
lea
jae
pusha
pusha
push
lea
jmp
adc
mov
dec
outsl
mov
mov
shrl
add
add
jb
outsl
mov
adc
std
stos
push
or
cmp
fcoml
das
mov
xchg
rorl
inc
and
repz
fucomp
adcl
mov
sbb
pop
cmp
sbb
repnz
sbb
lea
call
jmp
cs
jo
push
mov
jg
out
iret
repz
jnp
jecxz
test
call
pop
xchg
es
sahf
mov
pushf
cmp
loopne
inc
dec
ljmp
cmp
loope
rolb
ja
dec
rorl
cmp
fwait
mov
mov
mov
pop
clc
mov
imul
and
fstl
mov
dec
arpl
popf
adc
movsb
mov
xor
dec
push
add
cwtl
hlt
test
shll
sub
sub
je
cltd
das
dec
outsl
pop
mov
dec
pop
xchg
add
aaa
push
dec
sub
sti
xchg
and
loop
mov
jb
push
cli
cmp
jmp
ret
mov
mov
jecxz
sti
and
push
enter
adc
clc
push
push
adc
adc
enter
sub
ljmp
adc
mov
sub
sahf
push
imul
outsl
sub
add
lods
and
mov
adc
test
dec
repnz
pusha
xchg
test
xor
jno
push
iret
jl
fcoml
clc
add
insb
orb
test
jle
dec
xor
lcall
jbe
push
std
inc
test
mov
aaa
and
lea
cmp
and
dec
sub
xchg
and
js
add
in
insl
push
pop
ss
rclb
sbb
add
int3
rolb
ficoms
stos
xchg
sbb
mov
push
clc
test
pushf
lea
jne
pushf
pusha
pusha
call
lods
jg
jae
push
dec
inc
or
scas
cli
push
dec
dec
push
push
decl
mov
stos
pop
jecxz
rcrl
adc
sbb
mov
push
xchg
jmp
xor
mov
inc
dec
adc
lock
jl
movsl
mov
jo
fmull
dec
and
or
loop
adc
jmp
es
out
fists
subl
sub
cmp
fld
mov
sub
adc
leave
leave
aaa
test
sub
shll
xor
repz
and
xor
add
push
gs
insb
outsl
jae
dec
gs
xchg
jmp
push
fwait
jae
push
scas
mov
fildll
pop
shll
lcall
xlat
test
xor
mov
push
mov
jl
sahf
movsb
xchg
out
imul
ret
jl
sarb
stos
mov
dec
cli
mov
jns
cmp
test
cli
ljmp
incb
movl
push
push
push
mov
lea
jmp
adcb
mov
cmc
jns
icebp
inc
or
mov
aam
or
sbb
fidivrs
stos
inc
out
test
or
inc
and
cmpsb
sub
rolb
sub
outsl
icebp
sbb
into
test
test
shrl
add
cld
fdivl
and
or
mov
push
test
loop
push
aam
xor
lcall
loope
xor
xor
fstl
nop
lcall
jge
xor
imul
xor
js
push
xlat
add
scas
mov
pop
inc
xor
shll
insb
add
imul
outsb
sub
jg
sbb
sub
leave
inc
data16
xchg
stos
mov
bound
xchg
rcrb
pop
pop
or
pusha
or
pushf
jns
popa
inc
mov
xor
dec
ja
out
and
xchg
mov
or
sti
pop
aas
sbb
bound
inc
mov
push
jne
push
xor
dec
mov
xchg
mov
jno
dec
cwtl
push
mov
iret
inc
mov
mov
and
push
sub
xchg
in
inc
ds
lret
mov
fs
ret
das
mov
movsl
xor
inc
es
inc
mov
push
in
push
lret
push
shrb
nop
shll
lret
push
pushw
dec
pop
or
cli
mov
push
mov
pop
nop
pusha
add
fmull
rolb
inc
mov
cwtl
sbb
inc
xchg
jbe
push
adc
dec
lcall
pop
jle
lods
jne
out
sbb
pop
mov
scas
jbe
imulb
push
aad
stos
bound
push
sarl
bound
push
shrb
jp
push
xchg
cli
mov
mov
and
sbb
and
mov
xchg
sbb
xchg
add
mov
pop
xchg
sbb
jb
call
pop
test
pop
xor
jmp
ret
xchg
aas
inc
sub
filds
or
add
outsl
int
pop
push
hlt
xchg
jg
dec
jne
push
jecxz
js
test
mov
push
mov
je
adc
jb
mov
imul
shll
mov
add
mov
clc
push
push
mov
subl
clc
xchg
add
jbe
ja
mov
push
pusha
call
push
adc
aad
pop
je
and
add
inc
bound
push
jb
cwtl
test
xchg
dec
or
popf
adc
cmpsb
mov
push
xchg
cmp
xlat
inc
mov
shrl
xor
inc
and
cmp
add
xor
test
fsts
ret
mov
cmp
shr
mov
clc
add
bt
call
testb
jbe
push
rcr
dec
testl
popl
cmp
cmp
jge
sub
fcomps
inc
jmp
inc
inc
jmp
fsubs
ds
mov
das
into
adc
mov
pop
clc
mov
int3
out
addr16
out
and
and
xchg
jp
mov
sbb
push
leave
xchg
mov
notl
insb
movsb
jp
dec
cld
xchg
test
int3
loop
sub
add
addr16
mov
leave
mov
mov
in
or
cld
xor
push
or
xchg
and
aas
clc
jp
mov
xor
lock
das
faddl
aad
sub
insb
or
rcl
and
lods
mov
push
jle
iret
lods
sar
iret
in
lret
lds
push
push
cmp
cmp
loope
sbb
xor
dec
sbb
jg
jae
dec
in
mov
push
lea
inc
push
jns
mov
loope
mov
add
xchg
pop
jbe
mov
repz
mov
pop
inc
mull
jb
aam
and
push
mov
pop
ss
push
scas
or
sbb
pop
shl
outsb
shl
stos
aad
xor
imul
pusha
scas
sub
xchg
int3
and
xor
jbe
xor
int
fildl
clc
mov
out
sub
cmp
test
cmp
sub
call
dec
mov
pop
push
lret
outsb
mov
push
loop
movb
adcl
sarl
mov
jg
je
push
push
cmpb
xor
push
mov
adcb
aaa
jae
test
fs
sub
jle
mov
pop
out
daa
mov
sub
xor
pop
inc
pop
and
jp
push
mov
sahf
sub
test
in
sub
adc
jp
out
mov
pop
ds
cmpsl
or
dec
pushl
lea
jbe
pushf
mov
or
add
and
clc
neg
movw
mov
not
stc
xor
shrd
add
xor
movl
shl
and
mov
clc
cmp
pusha
lea
jbe
rcl
xor
bsf
sar
sub
btr
stc
mov
sub
shrd
bts
mov
or
add
movzbw
call
call
stc
call
lea
jp
push
add
out
or
sbb
push
popa
jg
pop
pusha
or
gs
xchg
dec
incb
sub
aam
pop
inc
inc
cwtl
mov
arpl
jnp
lods
stos
outsb
adc
shrl
mov
dec
mov
jbe
stos
and
jg
cmp
rorl
pusha
ja
cmp
jno
hlt
ja
pop
inc
dec
mov
mov
and
in
mov
push
jns
or
in
push
cmp
fisubrs
icebp
mov
mov
fidivrs
pop
mov
dec
xor
adc
adc
lods
shlb
ss
or
shll
divl
jnp
hlt
mov
push
cwtl
mov
fdivl
xchg
mov
jg
in
pusha
inc
add
inc
aad
mov
scas
mov
add
lcall
ret
fistps
leave
push
test
mov
push
insl
mov
ficoml
jecxz
loopne
mov
cmpsb
rcl
add
xchg
ja
xor
add
fyl2xp1
sbb
loopne
add
movl
fldcw
dec
lret
mov
cmp
and
dec
cmc
sub
pusha
lea
call
jge
jae
dec
mov
jmp
lods
das
push
jp
push
xchg
sbb
lret
cmpsb
dec
pop
mov
sub
inc
es
and
mov
mov
imul
or
loope
pusha
sub
add
into
shrb
out
add
jae
in
dec
aas
mov
xchg
lock
lock
xor
xor
xor
cmp
mov
aam
pusha
dec
fs
cmc
mov
addr16
sarb
outsl
add
inc
ja
push
stos
out
jmp
add
sahf
jae
test
jbe
mov
test
dec
mov
sbb
push
aas
or
dec
lock
test
cltd
and
dec
test
add
in
add
jo
es
movsl
nop
sarl
mov
mov
sbb
pop
push
push
jmp
scas
xchg
mov
jno
xchg
xor
testl
enter
mov
ds
xchg
push
pop
push
daa
mov
pop
xchg
das
addl
cld
jnp
add
stc
jbe
mov
or
js
popf
xchg
xchg
out
shlb
sbb
loop
inc
pop
mov
inc
jecxz
dec
pop
mov
fwait
movl
push
pusha
adc
pushf
xchg
pop
push
int3
adc
jnp
dec
ret
out
in
lret
mov
push
push
sti
js
inc
mov
ljmp
lods
push
or
cld
cwtl
fdivrl
fsub
jl
xor
ja
daa
mov
sub
xchg
jmp
sbb
jno
daa
cli
push
mul
dec
mov
clc
sbb
xchg
dec
daa
out
lods
std
mov
mov
mov
loopne
xchg
leave
mov
xor
ds
jp
nop
andl
rcrb
or
in
ljmp
sbbb
vprotb
in
sub
loopne
je
fmuls
ret
adc
mov
imul
pop
out
dec
shll
and
jmp
jnp
pop
jl
push
mov
push
push
mov
lods
xor
jb
int
dec
sbb
xchg
loopne
pop
or
sub
adc
lret
insb
into
in
add
int3
push
mov
in
popf
push
mov
iret
pop
imul
into
mull
mov
pop
sub
sub
aas
shlb
leave
push
fisubrs
shlb
push
jmp
jge
pop
add
std
mov
pop
and
xor
xor
jne
jge
jne
movsl
cmp
cwtl
jno
jb
or
jbe
daa
mov
setg
mov
test
cmp
or
fidivl
cmpb
lock
ss
fcmovnu
push
xchg
enter
mov
xchg
sbb
imull
sub
cmc
sub
pop
jno
pop
xchg
out
jno
ficoml
adc
xchg
cmp
mov
push
mov
pop
pop
ror
push
fwait
rorl
mov
sarl
push
pop
dec
cmpsl
mov
mov
mov
jne
loopne
jle
xchg
dec
hlt
hlt
adc
insb
add
loope
xchg
rcr
bnd
daa
clc
ljmp
in
movsl
add
mov
sub
gs
jae
adc
lods
ss
adc
ret
sbb
out
out
mov
mov
or
add
shlb
insb
xchg
loopne
xchg
pop
aam
xor
sbbl
pushf
movb
mov
mov
movl
mov
movb
lea
jmp
pushf
popl
jmp
cmp
or
pushf
lea
je
jmp
call
movl
sub
call
pushl
popl
sbb
movl
call
pushl
popl
pushf
lea
jmp
pusha
pushf
pushf
mov
movl
movb
movw
movl
lea
jmp
pushf
pushf
popl
pushf
push
pushl
popl
pushf
push
mov
mov
lea
jmp
pushl
popl
mov
pushf
pushl
mov
lea
jmp
mov
pushf
mov
call
shl
aam
mov
pushf
call
shl
movzbl
jmp
jmp
push
mov
pushf
pushf
pushf
lea
jmp
push
mov
push
call
aam
mov
neg
mov
jnp
cmc
clc
add
push
call
inc
mov
movw
movb
mov
lea
jmp
mov
pusha
pushl
mov
lea
pushf
movsbw
jmp
not
pushl
test
sub
jp
stc
sub
clc
add
push
cwtl
stc
jmp
push
mov
push
pushf
pushf
push
pushl
ret
mov
clc
and
sub
shld
neg
not
not
push
dec
xchg
dec
rol
lea
pop
sub
movzbw
jmp
movzbl
pusha
bswap
pushf
dec
sub
jns
cmc
ror
sar
xor
rol
test
ror
and
btr
mov
cmc
stc
jmp
cmp
shr
push
call
clc
pusha
lea
cmp
pushf
pushl
add
cmc
rol
mov
cmc
clc
stc
not
stc
stc
sub
jmp
mov
lea
jnp
pusha
movb
pushf
popl
push
pushl
popl
push
mov
pushf
lea
jmp
clc
cmp
shl
jmp
mov
jmp
call
lahf
mov
call
mov
shl
sbb
bswap
btr
sub
pushl
btr
or
test
neg
jmp
movsbw
bswap
pushf
popl
jmp
pusha
pushf
popl
jmp
mov
movsbw
jmp
jmp
cmp
mov
test
pusha
call
bt
sub
clc
jmp
xor
inc
mov
bts
stc
not
add
mov
ror
sub
add
shl
mov
call
sbb
shr
rol
mov
jmp
call
neg
pushf
pushl
call
pusha
lea
jne
lea
sbb
xor
mov
cmc
and
jmp
shld
pushf
call
pusha
pusha
mov
pushl
lea
jmp
mov
pusha
call
mov
movb
movw
lea
jmp
pusha
sets
setns
movb
mov
call
aaa
sar
pushf
bsf
mov
jmp
sub
bt
cmp
clc
cmpl
jmp
call
mov
pushl
call
call
pushl
pushf
popl
mov
movw
push
pushl
popl
push
lea
jmp
mov
pushf
pushf
mov
pushf
bswap
movzbl
mov
pushf
mov
pushf
popl
sar
shld
bts
mov
sar
sbb
xadd
xchg
not
ror
mov
sbb
xchg
bts
mov
and
shl
pushl
popl
xchg
movl
bsr
bt
bts
mov
call
push
pushl
mov
mov
pushl
movb
mov
lea
jmp
pusha
pushf
inc
jmp
cld
push
rep
inc
stc
add
shrd
mov
rcr
neg
btc
cmp
mov
clc
pushl
popf
movb
lea
jmp
pushl
pushf
popl
jmp
cmc
bt
pusha
add
bt
pusha
sub
call
movsbl
pushf
popl
shl
bsr
mov
pop
bts
not
rcr
xchg
btr
dec
bsr
shld
mov
add
mov
pushl
adc
btc
pushl
popl
test
sub
shl
movl
mov
lea
stc
bsf
mov
xor
bt
sar
rol
sub
test
pushl
movsbl
pushf
neg
not
push
pushl
call
inc
pushl
decl
call
inc
call
not
lea
pushf
lea
jmp
add
bt
stc
pushf
call
pushf
inc
push
rcl
add
xor
mov
clc
add
pushf
jmp
pushf
xadd
mov
and
mov
jmp
mov
pushf
mov
pushf
pushf
pushl
lea
jmp
sar
stc
cmc
add
xor
add
xor
call
pushf
pushl
pushf
mov
mov
pusha
call
bswap
mov
bswap
pushf
popl
not
or
xchg
sub
ror
movl
or
xchg
rcr
shr
shl
mov
clc
shr
xor
mov
shrd
rcl
pushl
popl
push
neg
movl
lea
mov
not
pushf
xchg
or
sub
ror
stc
neg
movzbl
pop
not
movzbw
dec
add
bts
lea
shl
rcl
cmp
bswap
sub
lea
push
bswap
lea
pusha
lea
jmp
rcl
mov
call
test
or
clc
xor
jmp
pushf
push
jmp
bswap
bsf
mov
btc
mov
clc
test
test
add
call
jmp
pushf
pushf
mov
mov
jmp
mov
pushl
btc
sub
adc
sub
sub
xchg
neg
pushf
dec
stc
rol
pop
lea
bt
or
btc
pop
sub
mov
not
not
mov
push
lea
jmp
pushf
mov
and
lahf
push
mov
xor
pusha
mov
shl
btr
sub
mov
aas
dec
jmp
sub
bt
xchg
cmp
pushf
clc
cmc
mov
stc
sub
push
pushl
pushf
lea
jne
stc
stc
call
pushl
popl
push
mov
push
mov
lea
jmp
pushl
add
stc
push
pushl
popf
movb
movl
mov
mov
lea
jmp
add
mov
mov
pushf
pushf
movw
mov
lea
jmp
inc
bt
cmc
jmp
test
pusha
xchg
test
pushl
shld
push
xchg
and
stc
bsf
mov
neg
cmp
shrd
test
mov
dec
movsbl
cmc
cmp
pushl
popl
bt
inc
jmp
pushf
pushf
jmp
pusha
mov
pushf
jmp
mov
pusha
mov
bswap
push
movsbw
mov
bswap
not
push
mov
pushf
popl
sar
btr
xchg
btc
bts
ror
pop
xchg
bts
or
mov
shld
dec
sbb
btc
mov
pop
shl
call
pusha
push
mov
pusha
mov
mov
not
mov
pushl
pushf
call
pusha
movb
mov
lea
jne
bt
xorb
lea
lea
not
lea
pop
pushf
lea
jmp
lea
jl
pushf
pushf
mov
pusha
pushf
popl
mov
movw
pushl
popl
movb
lea
jmp
ror
sbb
dec
setp
movzbl
test
sub
pusha
inc
clc
clc
call
jmp
pushl
push
pushf
pushf
popl
movw
pushl
popl
mov
pushf
pushf
lea
jmp
jmp
cwtl
shrd
stc
mov
test
mov
jmp
push
pushf
push
pushf
mov
mov
call
clc
btr
test
sub
btr
btr
not
neg
inc
dec
push
inc
dec
rol
movl
add
call
pusha
pusha
add
pushf
mov
pushf
pushf
lea
jmp
pushf
pusha
pushf
popl
call
rol
call
adc
jmp
xor
shl
neg
mov
jmp
sub
movzbw
movzbw
mov
push
push
pusha
lea
jmp
pushf
jmp
pushl
mov
call
jmp
mov
pushl
lea
jmp
mov
pusha
push
movb
pushf
lea
jmp
test
not
mov
mov
cmp
cmp
mov
sub
bt
shl
call
push
movl
mov
call
inc
cmp
mov
add
push
call
stc
add
call
jmp
jmp
pushl
pushf
mov
movw
pushl
pushf
popl
pusha
mov
pushl
popl
push
push
lea
jmp
xchg
cmp
mov
mov
sbb
mov
bsf
bt
mov
pop
sar
dec
call
push
mov
call
rcr
dec
mov
pushf
mov
cmc
test
bt
pusha
add
pushf
lea
jmp
cmc
mov
ror
test
cmc
stc
cmc
sub
lea
jp
test
pushf
movl
sub
pusha
mov
pusha
push
pushf
pushf
lea
jmp
rcl
bt
movzbl
pushf
inc
sar
xor
sub
or
add
mov
jmp
pushf
bt
clc
sub
push
test
pusha
shr
jmp
pushf
mov
call
pushf
pusha
mov
mov
lea
jmp
mov
pushl
cld
lea
call
call
lea
jo
mov
push
pushf
pushf
lea
jmp
mov
pushf
mov
pushl
lea
jne
pusha
lea
jne
rol
dec
mov
pusha
push
and
pusha
cmc
pushl
cmp
movb
pushf
lea
jne
bsf
or
shld
shr
xorb
jmp
pusha
mov
bswap
xor
movzbw
shr
mov
pusha
cmp
add
jmp
pushf
popl
movsbw
btr
call
mov
pushl
pushl
movb
pushf
lea
jmp
sub
pusha
mov
pusha
mov
lea
jmp
movb
call
pushf
pop
dec
movzbw
clc
lea
sbb
rcl
add
sub
jmp
jne
add
jmp
pushf
pushl
mov
mov
mov
push
mov
push
jmp
pushf
movsbl
lea
pushf
pushl
pusha
push
lea
jmp
jmp
bts
mov
and
bt
add
dec
setbe
bt
sar
xor
shld
sar
and
push
mov
push
stc
pushf
stc
shl
jmp
pusha
pusha
mov
pushl
xchg
pushf
pushf
mov
bswap
jmp
pusha
rdtsc
test
sub
movb
mov
push
mov
push
mov
lea
jmp
pusha
mov
jmp
bswap
movsbw
setge
pushf
rol
lea
jg
mov
pushf
dec
shr
bsr
pop
xor
neg
clc
bswap
and
shld
sbb
adc
mov
clc
push
bt
add
jmp
mov
jmp
pushf
lea
push
mov
pushf
lea
jmp
pushf
pushf
pushf
mov
jmp
and
call
lahf
lahf
mov
cwtl
movzbw
mov
pop
lea
seto
mov
mov
mov
mov
movb
pushl
ret
bswap
call
mov
pushf
movw
push
lea
jmp
shld
xor
das
movzww
jae
pushf
stc
add
stc
cmp
sub
stc
stc
rol
bt
cmc
jmp
and
inc
sub
jmp
cmp
xchg
dec
shl
mov
jmp
mov
clc
sub
pushf
bt
shr
pushf
mov
pushl
lea
jbe
pushf
call
sub
pusha
mov
pusha
pushf
pushf
push
lea
jmp
jmp
movb
jmp
pushf
popl
xor
mov
movw
shl
push
bts
xchg
and
lea
mov
test
rcl
mov
xor
mov
stc
xchg
pushl
popl
shrd
shl
or
push
movl
shr
add
shr
jmp
not
cmc
neg
push
stc
sub
pushf
test
cmp
push
cbtw
test
cwtl
movb
mov
sub
call
mov
adc
je
jns
je
cmp
je
aas
dec
je
cmp
es
mull
je
stos
cmp
dec
je
jmp
je
mov
je
pop
das
je
jmp
je
out
je
jmp
je
inc
and
dec
je
mov
das
je
aas
dec
je
mov
adc
cmp
adc
sub
and
dec
je
inc
and
das
je
dec
sub
je
cltd
xor
das
je
xor
je
jns
je
lahf
cmp
je
ljmp
adc
je,pn
jmp
je
jnp
je
jns
je
stc
inc
je
mov
je
xchg
cmp
adc
je
pop
xor
inc
je
jns
je
aaa
inc
je
mov
je
mov
adc
je
xor
je
xor
je
jns
je
pop
xor
das
je
dec
sub
je
inc
cmp
je
pop
das
je
jns
je
lds
je
mov
je
lds
je
cmp
je
lds
je
inc
cmp
je
mov
adc
cmp
adc
inc
je
mull
je
stc
inc
je
je
je
jns
je
movaps
das
je
bound
je
cmp
adc
inc
je
jmp
je
stos
cmp
dec
je
xor
je
mov
je
xor
je
ljmp
adc
je
cmp
adc
je
aaa
inc
je
mov
je
xor
je
stos
cmp
sub
and
adc
inc
je
jns
je
lahf
cmp
je
inc
dec
je
stc
inc
je
lds
je
xor
je
pop
das
je
jns
je
sub
je
mov
je
andb
adc
je
mov
and
dec
je
cmp
je
dec
je
faddl
adc
cmp
je
in
cmp
and
sub
sub
inc
je
bound
je
aaa
inc
je
sub
je
inc
dec
je
sub
je
faddl
adc
je
xor
je
out
je
mov
inc
je
jnp
je
pop
xor
sub
sub
and
adc
cmp
je
lahf
cmp
je
pop
xor
and
adc
dec
je
cmp
cmp
inc
je
sub
decb
mov
adc
sub
adc
cmp
xor
sub
cmp
je
mov
inc
je
lds
je
pusha
das
je
mull
je
adc
je
divb
je
mov
sub
cmp
je
xor
je
mull
je
into
cmp
je,pn
into
cmp
cmp
cmp
je
inc
dec
je
xor
je
lahf
cmp
je
cmp
je
decb
mov
dec
je
inc
dec
je
in
cmp
dec
je
pusha
das
je
cmp
dec
je
stc
inc
je
sub
dec
sub
je
jmp
je
aaa
inc
je
xor
je
aas
dec
je
xor
je
jnp
je
ljmp
adc
sub
das
je
inc
cmp
je
addr16
je
pop
xor
xor
inc
je
xor
je
aaa
inc
je
xor
je
cltd
xor
sub
inc
je
decb
dec
je
lds
je
jmp
je
sub
je
jnp
je
bound
je
dec
sub
je
ljmp
adc
dec
je
pop
xor
and
sub
and
adc
cmp
and
adc
cmp
adc
inc
je
cmp
adc
je
call
pushf
pusha
mov
movw
mov
pusha
call
test
add
push
bsr
lea
mov
ror
xchg
shl
sub
inc
sub
neg
lea
inc
movsbl
dec
bt
rcl
mov
jmp
movsbw
setne
setnp
mov
pusha
push
jmp
not
stc
movb
clc
cmc
add
test
neg
test
sub
call
dec
xor
rcr
shr
sbb
xor
stc
and
dec
adc
shl
pushf
mov
bt
sub
pusha
pushf
jmp
pusha
lea
jne
call
add
clc
test
cwtl
jmp
shr
xchg
not
shrd
mov
dec
xchg
btr
mov
bt
mov
xchg
bswap
bt
pushl
popl
or
movl
ror
shrd
test
bswap
mov
rcl
sbb
clc
cmp
sub
add
lea
neg
mov
movzbw
dec
dec
clc
lea
dec
stc
dec
bsf
sub
inc
cmp
mov
movzbw
inc
mov
and
add
rcl
mov
lea
add
pushf
lea
bt
jmp
movb
jmp
xchg
push
clc
shr
mov
push
movsbw
pushl
shl
push
rcr
pusha
mov
mov
xadd
sub
sub
movzbl
lea
neg
call
pushf
mov
mov
lea
jno
pushf
mov
movl
push
jmp
add
aad
lea
call
ror
shld
movzbw
shr
sub
xor
call
movsbw
push
push
dec
cmc
btc
lea
rcl
sub
movsbw
mov
push
push
lea
jmp
lea
mov
shr
cmp
mov
xor
pushf
pushl
popl
and
neg
add
jle
push
bsf
bt
mov
dec
stc
pushf
cmc
sub
push
shrd
neg
pushf
pushl
pop
dec
dec
jmp
pushf
mov
call
pushf
jmp
pusha
mov
pusha
pushf
call
mov
dec
pusha
push
rcr
test
lea
ror
sbb
bsr
sub
movzbw
mov
pushf
pushf
pusha
pushf
lea
jmp
call
pushl
popl
pushf
pushl
lea
jmp
shl
shl
mov
ror
mov
shl
cmp
not
add
mov
cmc
test
add
cmp
bt
shrd
call
mov
push
pusha
lea
jg
push
mov
pushf
mov
jg
lea
pusha
pushl
pushf
popl
sbb
sbb
movsbw
movzbl
xchg
sar
bswap
lea
bsr
xchg
lea
cmc
add
sub
mov
add
dec
mov
lea
btr
movzbw
stc
pushl
popl
or
rcr
jmp
pushf
jmp
add
jmp
bswap
mov
mov
pushf
popl
mov
shl
mov
inc
rcr
xchg
inc
mov
bt
movzbl
mov
call
clc
jmp
sub
test
rcl
neg
movsbw
not
movsbw
dec
and
neg
lea
and
adc
movzbl
add
sub
pusha
jmp
rcl
movzww
pushf
call
jmp
movzbw
jmp
movw
mov
pushf
pusha
movw
push
pushl
ret
cmc
bt
test
pushl
pusha
pusha
call
cld
xchg
not
call
not
not
pushf
popl
sub
bsr
push
ror
sub
shl
push
bswap
movsbw
jmp
mov
stc
shl
call
lea
movsbw
movzbw
pushf
bsf
movzbw
push
xadd
push
shrd
bswap
xor
push
shl
test
push
mov
bts
ror
bswap
movsbw
pushl
shl
bt
push
bsr
and
cmp
btr
mov
cmp
sub
dec
neg
xchg
pusha
bswap
call
bsf
shrd
jmp
pushf
pushf
shr
movzbl
cmp
stc
jmp
shl
rcl
xor
bsr
and
ror
mov
jg
cmc
add
call
sub
stc
add
pushf
call
rcl
lea
sbb
lea
sub
call
sub
push
jmp
pusha
shl
pushf
mov
cmp
movw
bt
cmc
sub
cmp
jmp
pushf
mov
call
pushf
clc
add
je
cmp
call
sbb
shl
btc
bsf
mov
bt
add
pushf
pushl
jmp
mov
call
rcr
xadd
shrd
adc
movzbl
bt
not
movzbw
test
sub
setbe
pushf
pushl
inc
neg
shl
mov
neg
push
dec
inc
bts
rcl
shl
not
sub
rcr
test
cmc
sub
btr
mov
test
cmp
pusha
add
jmp
pushf
pusha
pusha
movw
mov
call
add
call
adc
aaa
xor
and
mov
bt
cmp
sub
call
pusha
pushl
jmp
movb
mov
call
jmp
pushf
movb
mov
pushf
pushf
mov
lea
jmp
cmc
pushf
sub
jmp
shl
rcl
notl
shr
rcl
movsbw
lahf
mov
bt
sub
call
dec
clc
mov
lea
movsbw
inc
bswap
sub
call
mov
pushl
popl
mov
push
pushf
pusha
lea
jmp
movsbw
mov
jmp
jmp
bts
sub
shl
lea
jmp
pop
mov
call
pushf
mov
pushl
pusha
mov
lea
jmp
mov
xor
mov
push
jmp
movsbl
btc
mov
adc
and
mov
mov
cmc
cmc
clc
call
pushf
pushf
mov
movl
pushf
pushf
pushf
lea
jmp
rol
test
stc
not
sub
jno
sub
pusha
cmc
stc
add
clc
test
cwtl
jmp
mov
mov
lea
jmp
movw
mov
bt
inc
aas
sar
mov
cld
movzbw
test
das
mov
test
btc
aas
pushl
popf
push
call
jmp
clc
pusha
cmp
pusha
lea
ja
das
btr
pushf
rol
lea
or
ror
xor
lea
call
call
push
sub
pushf
cmp
cmc
clc
add
movb
cwtl
bt
test
sub
jmp
btc
pushf
pusha
pushl
popl
rol
stc
bswap
push
movl
cmp
mov
bts
bsf
shl
xchg
sub
test
neg
movl
jmp
mov
pushf
mov
movw
lea
jmp
ror
movl
cmp
mov
mov
cmc
shl
sub
xadd
dec
pop
neg
pushl
movzbw
pusha
dec
rcr
dec
bt
lea
shrd
test
mov
call
mov
pushl
push
pushl
lea
jmp
pushf
push
lea
movl
pushf
lea
jmp
clc
stc
sub
pusha
mov
mov
mov
push
push
pushl
lea
jmp
pushl
pushf
mov
mov
call
inc
inc
cmp
adc
movsbw
adc
not
rcr
shr
neg
jmp
mov
mov
pushf
movw
lea
jmp
dec
shld
inc
call
pusha
mov
lea
js
push
call
pusha
mov
pushf
mov
pusha
lea
jbe
push
movzbw
movsbl
push
pushf
jmp
movsbl
mov
pushf
pusha
pushf
lea
jmp
bt
pushl
popl
sar
or
movl
add
pop
mov
mov
shr
sub
stc
pushf
xadd
test
neg
call
movw
jmp
mov
sub
pushl
mov
pusha
lea
jmp
mov
mov
mov
lea
jne
pusha
not
pushl
mov
not
pushl
movsbw
pusha
pushf
popl
and
add
shl
adc
mov
movl
rcr
sub
xchg
bsf
rol
clc
xor
mov
bswap
call
pushf
movw
mov
mov
movb
push
lea
jmp
inc
cmc
cmc
add
pushf
cmc
pushf
mov
jmp
sub
test
push
add
shr
mov
bt
cmp
cmc
add
jmp
pusha
movb
mov
pushf
push
movw
lea
jmp
pushl
popl
movw
mov
push
movb
lea
jmp
jmp
mov
push
pushl
jmp
mov
pusha
push
pushl
lea
jmp
xadd
mov
shl
ror
pusha
mov
pushf
push
sub
bt
shr
mov
call
pushf
popl
call
pushf
lea
mov
call
shld
sbb
clc
mov
stc
test
stc
cmc
add
pushf
pushf
push
mov
pusha
movw
movb
lea
jmp
stc
pushl
jmp
add
add
xchg
pop
pop
mov
mov
pushf
popl
mov
cmp
and
xchg
inc
bswap
dec
neg
xchg
ror
clc
bsr
mov
shld
pushf
rcr
mov
clc
pushf
shld
pushl
popl
stc
movl
rol
call
pushf
lea
jne
xchg
dec
test
test
xadd
mov
rcr
cmp
bsr
pusha
sub
movzbw
pusha
pop
lea
push
lea
jmp
call
pusha
bt
sub
pusha
jmp
bsr
pushf
movl
and
mov
not
mov
clc
sub
pushf
cmp
dec
bsf
neg
call
pusha
dec
bts
pop
movsbw
lea
shrd
bswap
sub
pusha
bswap
push
lea
pushf
pushf
push
lea
jmp
sub
clc
call
dec
sar
or
adc
lea
xor
shr
sub
mov
not
jmp
mov
movsbw
xchg
bswap
lea
jmp
sub
lea
movzbw
sub
mov
mov
pusha
pushf
lea
jmp
pusha
xchg
call
jmp
lea
jb
mov
push
pushl
pushf
lea
jmp
pusha
pushl
call
call
not
mov
cwtl
bswap
mov
pushf
divl
pusha
jmp
movl
pushl
popl
pusha
push
mov
pushf
lea
jmp
mov
jmp
btc
and
jmp
stc
jmp
mov
pushf
pushf
lea
jmp
mov
lea
movb
pusha
pushf
mov
lea
jmp
push
mov
bt
sub
pushf
mov
pushf
pushf
pushf
lea
jmp
pop
pushl
pushf
popl
adc
not
movsbw
mov
btr
mov
bt
jmp
mov
pushf
mov
pusha
pop
call
xadd
mov
call
inc
pushf
call
clc
pushf
pushf
add
cmp
push
sub
movb
mov
mov
pushl
pushf
push
lea
jmp
call
add
pusha
dec
push
mov
stc
cmp
add
pushl
mov
movb
push
lea
jmp
cmc
sub
pusha
jmp
pusha
mov
pushl
push
movl
push
lea
jmp
mov
pushl
mov
lea
jmp
not
pop
pushf
pusha
lea
jmp
pushf
pushf
popl
call
call
jmp
not
mov
lea
movzbw
mov
call
cwtl
movzbl
pusha
pusha
mov
pop
pop
mov
pushf
lea
cpuid
jmp
pushf
popl
jmp
movzbw
jmp
mov
push
movb
movb
mov
movsbl
mov
pushf
pushf
popl
pushf
pushf
mov
test
shr
xchg
shl
stc
mov
pushf
movsbw
sub
bsr
mov
pushl
pushl
popl
cmc
dec
movl
shl
ror
mov
sar
mov
rcl
btc
sub
xchg
not
bswap
btr
neg
movzbw
pushf
dec
dec
pop
lea
shl
or
sub
lea
mov
push
push
mov
lea
jmp
pushf
pushf
popl
pushf
pushl
popl
mov
lea
jmp
movsbl
movl
movzbl
shl
movsbl
mov
mov
dec
shrd
movzbw
call
pushf
push
lea
call
pushf
mov
mov
push
pushl
pushf
mov
call
test
sub
sub
and
das
lea
and
and
cmp
shld
bswap
dec
sub
not
mov
pushf
pushf
pop
pushf
popl
movsbw
pusha
bswap
mov
pusha
pop
pushf
jmp
sar
stc
pushf
mov
jmp
lea
jns
mov
push
lea
jmp
pushf
not
cmc
push
test
not
clc
stc
stc
bt
sub
stc
and
jmp
pushl
popl
movb
movb
mov
lea
jmp
mov
bt
pushf
test
add
bt
clc
pusha
bt
sub
pushf
stc
pushl
jmp
ror
sub
mov
mov
jmp
movsbw
pushl
mov
lea
jmp
sub
cmc
cmc
sub
clc
bt
jmp
bswap
lahf
mov
not
add
or
not
mov
cmp
call
push
pusha
pushf
mov
pushf
mov
mov
jmp
pushf
mov
lea
jne
shl
shrd
xor
setnp
xorb
push
mov
push
movw
mov
pusha
lea
jmp
clc
cmc
call
clc
clc
call
mov
call
call
pushf
popl
push
pushl
mov
pushl
popl
pusha
pushl
mov
lea
jmp
pusha
push
pushl
popl
pushf
lea
jmp
inc
mov
lea
jmp
shl
movsbw
mov
rol
xchg
pushl
popl
xor
call
lea
pusha
pusha
call
jmp
btr
shl
mov
pusha
sub
add
jmp
movb
add
pusha
mov
pusha
pushl
lea
jmp
dec
or
clc
rcl
lea
adc
bsf
clc
rol
sub
bswap
not
not
movzbl
mov
push
pusha
pusha
pushl
lea
jmp
pusha
sub
movzbw
rcr
not
rol
dec
mov
inc
lea
jl
inc
jl
xor
add
not
mov
clc
add
pusha
mov
pushl
lea
jmp
movb
pushf
pushl
popl
pushf
pushf
lea
jmp
pusha
call
cmp
sub
jmp
pushf
popl
sar
xchg
xchg
pop
shr
and
mov
bswap
btc
sar
mov
xor
xor
cmc
clc
mov
rcr
pushl
popl
rol
movl
pop
shld
shl
mov
xchg
bsf
bswap
sub
shr
neg
neg
movzbw
dec
ror
lea
bsr
bswap
btr
adc
sub
push
pop
lea
mov
push
lea
jmp
lea
bsr
sub
not
jmp
test
pushf
bt
sub
pushf
mov
pushl
movb
pushf
pushf
lea
jmp
xor
call
test
pushf
clc
add
pushf
mov
pusha
lea
jmp
pusha
mov
movzbl
call
pusha
jmp
xor
neg
jmp
pushf
popl
call
test
ror
sar
not
mov
neg
shl
setge
mov
jmp
lahf
mov
call
pusha
mov
pusha
mov
lea
jmp
stc
btc
rcr
rol
movsbw
jmp
bswap
or
mov
or
and
add
setge
setb
push
setbe
mov
mov
mov
jmp
or
bsr
pushf
not
setbe
btc
add
rcr
movzbl
and
stc
shrd
mov
clc
clc
clc
clc
sub
push
jmp
jmp
pushl
stc
add
mov
pushf
pushf
popl
push
pushl
pushl
call
pushf
not
mov
movzbw
movzbw
lea
pusha
pushf
popl
pushl
rol
bsf
xchg
not
bsr
bt
clc
mov
rol
and
rcr
btc
mov
sbb
pusha
btr
bt
mov
shld
pushl
popl
pop
mov
pushl
rcr
movl
rol
cmc
shl
pushf
mov
cmp
call
mov
movb
call
pusha
pushf
mov
movsbl
call
jmp
xchg
mov
add
movsbw
test
movzbl
mov
test
not
push
not
pusha
and
pushf
mov
jmp
call
push
call
sar
mov
cmc
cmp
cmc
add
jmp
call
call
pusha
call
mov
push
not
seto
mov
bt
pusha
bt
jmp
pushf
popl
push
pushl
popl
push
pushl
movb
movb
lea
jmp
pushf
push
pushf
popl
pushl
movw
jmp
mov
mov
lea
jmp
cmp
call
