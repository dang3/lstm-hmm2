lea
call
test
test
sub
call
jmp
add
inc
gs
insb
imul
je
shl
not
lods
mov
add
movb
call
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
data16
dec
rcrb
jb
adc
adcb
lret
mov
lock
sarl
div
add
xlat
mov
sar
outsb
movsb
mov
push
cmp
adc
lods
mov
mov
shll
inc
push
inc
push
dec
xor
cs
insb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
shlb
mov
cmp
clc
ror
pushf
bt
bt
shr
movb
lea
je
pushf
push
push
adc
movw
pusha
lea
jmp
add
dec
outsb
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
inc
add
adc
add
scas
add
fadds
cld
mov
xchg
sahf
cmpsb
clc
std
inc
sub
call
lds
fadd
les
movsb
xchg
mov
add
pop
outsl
outsl
insl
gs
add
ja
fs
add
gs
je
inc
imul
imul
jb
insl
inc
add
dec
dec
dec
inc
push
cs
insb
add
add
jbe
dec
jne
push
popa
jne
add
add
data16
je
imul
dec
jb
inc
js
repnz
movsb
mov
push
lcall
mov
subb
sti
test
xlat
daa
xlat
or
cld
and
fstpl
xchg
stos
nop
inc
inc
inc
jae
sub
dec
lds
das
sub
push
out
or
sbb
xor
loope
loope
pushl
enter
arpl
push
push
dec
ja
ja
dec
jne
sbb
sbb
add
dec
jae
push
add
inc
jb
popa
je
push
push
add
add
insl
imul
outsl
arpl
jae
add
dec
outsl
popa
fs
arpl
inc
add
outsl
cmp
inc
adc
pop
and
fidivl
pop
iret
stc
hlt
fidivl
cmp
sub
adc
add
xor
xchg
stc
mov
clc
bt
cmc
sub
call
push
rep
pushl
bswap
movzbw
mov
push
lea
jmp
push
cmp
push
pushl
jmp
jmp
add
inc
gs
imul
inc
add
in
sbb
out
out
fxch
dec
adc
gs
hlt
jp
adc
rcr
scas
push
lods
icebp
in
outsl
lds
push
add
sub
adc
jno
sub
push
cmp
xor
mov
cmpsb
mov
mov
dec
leave
xor
mov
add
push
clc
cmpb
add
test
int3
ljmp
je
jo
aaa
pusha
lahf
rcr
movb
push
push
cmpb
int3
enter
in
xchg
and
fwait
jg
push
clc
inc
jne
dec
in
xchg
xchg
popf
mov
mov
adc
aad
xor
push
pop
aaa
sbb
and
stc
andl
lea
incl
in
ror
loope
ror
sti
test
mov
enter
std
popl
mov
rcr
add
jge
inc
or
lods
cli
mov
adc
mov
mov
pop
fidivs
pop
cmp
jl,pn
adcb
mov
mov
daa
test
mov
jo
xchg
fsts
push
adc
xor
mov
aam
and
adc
xorl
pop
mov
lods
lahf
cltd
mov
imul
dec
push
call
push
aad
add
push
imul
push
call
sbb
add
push
gs
gs
jae
inc
inc
add
fs
je
stc
jmp
add
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
adc
jmp
add
inc
gs
imul
bound
gs
add
test
add
fs
jmp
aam
in
mov
in
sarb
shll
push
daa
pop
sub
add
xor
pop
shll
sub
imul
sarl
clc
add
push
sbb
test
add
dec
sub
sub
sub
movsb
jns
dec
adc
es
add
shr
cli
aam
aam
in
in
hlt
xchg
mov
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jo
imul
insb
add
std
call
sbb
addr16
add
dec
outsb
je
jb
gs
gs
fs
imul
je
outsl
arpl
add
add
gs
outsb
imul
imul
gs
je
imul
inc
add
push
dec
inc
dec
xor
cs
insb
add
je
add
fs
je
movsbw
not
not
bts
mov
shrd
stc
lea
shrd
sub
stc
clc
shr
movzbw
shr
mov
rcr
shrd
stc
jb
add
bt
rol
mov
add
dec
bsf
sub
mov
pushf
cmc
shr
cmp
cmp
pusha
lea
je
jmp
add
inc
insb
outsl
bound
inc
jb
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
outsb
jne
je
insl
inc
imul
push
dec
shl
mov
pushf
test
mov
mov
call
add
push
imul
popa
jae
inc
add
add
je
outsb
jne
add
inc
gs
inc
add
inc
add
pop
out
add
mov
clc
idivl
push
fidivl
mov
out
iret
pop
xor
in
xor
es
das
xor
jg
jmp
inc
adc
in
shrl
fwait
lods
add
inc
add
cmpsb
inc
add
roll
scas
add
add
add
inc
add
inc
add
pop
inc
add
inc
add
inc
add
lods
inc
add
inc
add
inc
add
inc
add
add
add
add
orb
add
add
add
xorb
xorb
adc
add
or
add
add
add
adc
add
push
sub
rep
inc
add
add
add
arpl
xor
inc
add
pop
inc
add
add
add
les
into
scas
inc
add
add
enter
add
inc
add
movsl
inc
add
scas
inc
add
in
add
test
add
pop
inc
add
loope
add
add
inc
add
in
inc
add
inc
add
adc
add
sbb
add
movl
add
add
add
call
inc
add
lods
inc
add
push
sub
insl
add
inc
add
inc
add
inc
add
call
sub
stos
repnz
add
inc
add
hlt
inc
add
roll
xor
inc
add
adc
add
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
adc
add
inc
add
stos
inc
add
int
add
lods
inc
add
rolb
jns
inc
add
jmp
inc
add
inc
add
movl
icebp
stos
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
mov
inc
add
adc
add
sub
loope
inc
add
inc
add
add
add
sbb
add
add
adc
add
sub
push
lret
inc
add
lods
inc
add
cmc
inc
add
aam
add
filds
push
add
add
inc
add
loope
add
test
inc
add
call
inc
add
movsb
inc
add
sbb
add
in
add
sub
push
pop
inc
add
sbb
add
hlt
inc
add
sub
pmuludq
xlat
push
inc
add
inc
add
movl
xchg
mov
add
add
mov
inc
add
mov
add
sbb
inc
add
faddl
shl
inc
add
pop
inc
add
sub
icebp
cmpsb
inc
add
lods
inc
add
movsl
inc
add
add
adc
add
pop
inc
add
add
add
call
inc
add
sub
lods
jmp
inc
add
adc
add
cmc
inc
add
inc
add
in
inc
add
inc
add
pop
inc
add
mov
inc
add
pop
inc
add
pop
inc
add
sub
xchg
repnz
add
sub
cmp
inc
add
in
inc
add
inc
add
int3
inc
add
in
inc
add
inc
add
push
inc
add
inc
add
sub
mov
inc
add
sub
mov
sub
in
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
movl
adcl
pop
mov
sub
jle
inc
add
sbb
add
inc
add
inc
add
jecxz
add
in
add
pop
inc
add
faddl
ffreep
inc
add
movl
xor
adc
inc
add
inc
add
int
add
sub
mov
les
pop
leave
inc
add
cmpsl
inc
add
add
push
sub
mov
cmpsb
inc
add
add
pop
inc
add
push
inc
add
pop
inc
add
sub
add
inc
add
inc
add
arpl
addr16
inc
add
inc
add
movsl
inc
add
roll
dec
in
inc
add
inc
add
mov
sub
push
sbb
add
inc
add
sbb
inc
add
test
inc
add
adc
add
adc
add
stos
inc
add
int
add
pop
inc
add
push
sub
sti
lret
push
pop
sub
xchg
add
add
sub
rcrb
sub
adc
add
movsl
inc
add
lds
fs
add
inc
add
add
add
fldl
add
push
inc
add
hlt
inc
add
lret
xchg
pop
inc
add
sub
jns
inc
add
cmpsl
inc
add
mov
add
int
add
int3
inc
add
sbb
add
sub
test
sub
mov
inc
add
inc
add
iret
inc
add
inc
add
cmpsb
inc
add
sub
xchg
in
inc
add
inc
add
inc
add
stos
inc
add
sbb
add
filds
add
add
mov
inc
add
faddl
fistpl
add
ljmp
inc
add
int3
inc
add
adc
add
cmpsl
inc
add
add
call
inc
add
enter
add
add
lods
inc
add
inc
add
sbb
add
fs
add
les
mov
jnp
inc
add
lods
inc
add
movsl
inc
add
test
sub
pop
pop
inc
add
mov
inc
add
out
add
adc
add
inc
add
mov
add
inc
add
pop
inc
add
inc
add
sbb
add
inc
add
pop
inc
add
inc
add
inc
add
sbb
add
push
sub
xlat
fiadds
shl
inc
add
jecxz
add
test
inc
add
stos
inc
add
sub
adc
test
add
adc
add
aam
add
rolb
loop
inc
add
sub
pushf
ljmp
jl
inc
add
inc
add
inc
add
add
adc
add
test
add
inc
add
into
inc
add
inc
add
mov
inc
add
movl
xchg
adc
add
lret
inc
jmp
add
je
inc
add
add
sbb
add
add
add
loop
add
inc
add
out
add
fs
add
out
inc
add
repz
add
sub
mov
inc
add
inc
add
add
add
enter
sbb
add
add
add
sbb
inc
add
leave
inc
add
adc
inc
add
adc
add
inc
add
call
inc
add
pop
inc
add
inc
add
add
inc
add
add
inc
add
add
add
add
orb
add
mov
add
andb
adcb
add
or
add
or
add
sbb
add
adc
add
add
add
mov
add
add
add
orb
add
add
add
add
addb
add
sbb
sub
or
inc
add
filds
pop
loope
add
add
add
sub
jns
inc
add
sbb
add
add
add
iret
inc
add
test
add
add
add
add
add
fs
add
faddl
mov
inc
add
add
add
inc
add
add
add
and
enter
mov
jo
dec
test
les
fldenv
and
cmc
add
js
nop
xor
rclb
arpl
sti
repz
or
dec
push
insb
mov
rorb
fcmovnb
jmp
std
pop
add
inc
insb
jne
push
inc
jne
data16
add
add
insb
imul
je
add
push
popa
bound
fs
gs
dec
jne
inc
add
add
je
jns
je
insl
dec
outsb
jne
cmp
sar
add
test
mov
cmc
call
setns
push
lods
shr
pusha
shr
or
add
shr
sar
xor
bt
pushf
pushf
ror
or
clc
sub
xor
not
cmc
not
jmp
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
adc
lcall
dec
push
aad
lea
je
rcr
movzbw
mov
and
add
setge
mov
push
clc
clc
sub
mov
pushf
bt
shr
stc
cmpl
mov
lea
je
ror
add
cmc
stc
mov
not
stc
sub
shl
not
or
shr
dec
bsr
mov
dec
sbb
jmp
pushf
pushf
lea
jae
pushf
lea
jne
push
stos
push
movb
pushl
lea
jmp
jnp
pusha
inc
lea
jae
call
call
add
inc
gs
imul
outsb
addr16
add
add
gs
dec
bound
arpl
add
je
arpl
insb
insb
push
outsl
jae
call
mov
cmpsb
mov
sub
adc
clc
daa
ret
sub
fildl
adc
js
and
inc
dec
outsb
push
cmp
cmp
sahf
jmp
adc
mov
sahf
xchg
cmp
test
lret
mov
scas
adc
mov
mov
sbb
fisubrl
stos
cld
stos
loopne
fsubrs
xchg
push
arpl
leave
dec
subl
cltd
jmp
pop
cmp
mov
add
aam
mov
movsl
and
sub
cmpb
add
call
dec
aam
mov
sbb
stc
push
ss
cmp
popa
pop
add
inc
jne
xor
jbe
loop
sbb
loop
data16
shlb
test
mov
mov
cmp
add
je
gs
inc
outsl
insb
outsl
jb
add
push
outsl
jae
push
push
dec
gs
popa
addr16
add
add
gs
insb
jne
push
bound
jb
add
add
je
jb
outsl
jb
outsl
fs
add
je
gs
jo
popa
je
inc
add
add
je
popa
jo
outsl
fs
add
outsl
bound
push
outsb
insb
outsl
arpl
add
dec
outsb
je
jb
gs
gs
jo
imul
cld
add
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
outsl
jae
dec
popa
outsb
fs
gs
test
call
add
push
gs
jae
addr16
add
les
call
cmp
or
add
add
outsb
fs
gs
inc
imul
add
pusha
call
pushf
clc
push
test
add
pushf
movl
pushf
movb
lea
jne
pusha
pushfw
popw
sar
cmp
clc
shl
mov
pushf
pushf
add
jmp
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
jae
insl
gs
push
add
add
outsl
bound
dec
popa
outsb
fs
add
std
jmp
sbb
lcall
add
pushf
test
call
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
push
outsl
jne
fs
arpl
sbb
jmp
add
inc
gs
jns
inc
outsl
insb
outsl
jb
dec
jmp
add
push
gs
imul
outsb
addr16
add
mov
sbb
add
dec
outsb
data16
popa
je
push
arpl
jns
cmp
pop
jns
call
popl
jmp
pop
dec
sub
sbb
les
fsubr
in
lcall
jmp
dec
mov
popa
imul
bound
adc
je
push
push
insb
xchg
xchg
add
mov
jle
sbb
and
ss
mov
movb
adc
loop
fld
mov
jno
mov
inc
lods
pop
inc
xor
mov
push
ret
inc
rclb
cmp
sub
ljmp
shl
shrl
mov
gs
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
gs
arpl
push
arpl
pushf
call
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
popa
jo
je
imul
push
pusha
shr
bt
pushl
test
cmp
call
add
inc
gs
gs
inc
inc
add
pusha
jmp
add
inc
outsl
push
imul
jae
popa
addr16
imul
rcrl
lahf
rcrl
mov
mov
lock
scas
or
and
insl
lret
mov
pushf
std
jl
pop
inc
jo
push
dec
push
cmp
xchg
stos
fwait
mov
mov
or
sti
jmp
mov
ja
fcoml
popl
cmp
add
or
mov
mov
sahf
test
push
out
ja,pn
call
pusha
jge
ret
pusha
call
add
aas
sub
lods
push
or
sbb
ficompl
test
jns
or
cltd
lahf
mov
adc
mov
in
inc
add
xor
je
push
or
cmp
dec
cmp
lods
int3
hlt
loope
test
daa
jnp
xor
cmp
pop
jg
inc
jns
insl
pop
test
scas
xchg
sbb
add
push
popa
je
push
outsl
push
imul
or
je
or
add
test
je
sub
sub
add
push
gs
imul
outsl
jb
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
insb
jns
imul
add
push
popa
jae
popa
outsb
addr16
jo
add
add
je
jne
jb
outsb
je
imul
jns
add
add
je
push
jne
jb
dec
outsb
outsw
inc
add
add
gs
imul
add
push
gs
arpl
gs
imul
and
pop
hlt
sahf
test
jecxz
scas
jle
imul
xor
ret
mov
jns
lods
fists
push
scas
mov
lock
pop
repz
pop
insl
lcall
mov
xchg
xor
sar
cld
ljmp
sub
rorb
call
insl
imul
jne
mov
xchg
or
fisubrs
loopne
cwtl
mov
sarl
push
xlat
mov
loope
rcr
in
loope
vhsubps
add
push
arpl
jo
jns
add
dec
gs
popa
addr16
gs
add
inc
gs
gs
popa
addr16
outsl
jae
add
push
popa
imul
jo
imul
gs
insb
imul
je
add
bt
jmp
add
push
gs
outsl
insb
jns
imul
mov
movb
xchg
pushl
bswap
pushl
popl
lahf
sete
cwtl
pushl
lea
pushl
pushf
pushl
movl
call
not
movb
mov
ror
jmp
add
push
insb
jae
jb
add
add
je
imul
bound
gs
add
std
in
call
cwtl
add
dec
jo
outsb
inc
insb
imul
add
mov
dec
adc
ds
pop
in
mov
push
lds
cwtl
ficoms
push
dec
and
pop
sub
mov
mov
and
sti
cmp
insb
adc
bndstx
jecxz
fwait
mov
sub
je
push
cmp
stos
mov
daa
and
sub
or
push
adc
stos
and
call
cmp
aas
les
xchg
loopne
int3
mov
xchg
out
aas
cmp
and
insb
bound
mov
dec
xor
jnp
cmpsb
sub
dec
sbb
dec
cmp
xchg
filds
test
movsb
push
aam
sub
mov
es
sbb
je
jo
xor
pop
push
js
fisubl
or
mov
shr
xchg
mov
ret
stos
mov
adc
mov
adc
sbb
dec
jne
popa
cld
pushf
pushf
loope
addb
xchg
cmpsb
loopne
test
jg
add
jmp
sub
cmp
in
pop
sbb
mov
pop
stc
fwait
stos
mov
stos
cld
loop
lods
or
mov
push
outsl
xor
cwtl
stc
or
dec
ja
movsb
push
mov
mov
and
cmp
xor
cmp
inc
gs
jb
jns
jne
jae
jb
add
dec
outsb
je
jb
arpl
arpl
pushf
movl
lea
je
pushf
push
movw
lea
jmp
add
push
gs
imul
addr16
js
add
dec
outsl
jbe
push
imul
stos
in
cmp
dec
adc
imul
xor
lock
sti
stos
scas
repnz
loope
mov
test
pop
call
xchg
push
lds
pushf
pop
ja
cmp
movsb
mov
inc
inc
sub
mov
rcrb
xor
fcmovb
cmpsb
aam
cld
pop
or
adc
xor
xor
inc
dec
pop
lock
jge
add
fs
jmp
divl
push
adc
mov
dec
aad
out
xchg
out
mov
sub
je
dec
insl
loop
xlat
mov
push
mov
mov
repz
sub
repz
mov
das
sbb
addl
insl
or
aas
xor
add
mov
lea
add
je
outsl
jns
outsb
jne
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
dec
outsb
jne
pushf
mov
pushf
push
pushl
ret
add
bt
pushf
xor
mov
ror
cmp
xor
movb
pushf
lea
jne
cmc
not
pusha
bt
bt
bt
ror
push
stc
shr
pushl
lea
je
jmp
jmp
add
inc
gs
gs
popa
addr16
imul
push
jo
jb
add
add
push
call
add
dec
jae
imul
add
gs
je
inc
arpl
insb
gs
je
jb
popa
bound
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
test
test
pusha
lea
jmp
push
mov
pusha
pushf
pushl
ret
push
call
jb
add
inc
gs
dec
inc
imul
add
sbb
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
call
add
inc
imul
iret
std
call
sbb
adc
add
je
outsl
jns
imul
add
je
outsl
arpl
add
add
gs
je
push
outsl
jo
jo
outsb
jne
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
test
call
add
inc
jb
ja
gs
inc
add
add
je
imul
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
fs
popa
je
add
add
dec
outsb
push
arpl
add
fs
gs
jne
arpl
push
call
imul
add
addr16
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
adc
lea
push
pushl
jge
push
movw
pushl
ret
add
push
gs
arpl
imul
imul
arpl
cmpsb
les
add
stos
call
mov
push
js
ja
rcll
jno
pop
sub
push
in
into
jno
or
push
frstor
aad
lcall
icebp
mov
clc
scas
addr16
outsb
shlw
lock
dec
pop
data16
lods
frstor
mov
pop
jmp
ss
push
data16
notl
dec
jbe
and
rcrw
mov
js
jne
jbe
mov
lods
data16
mov
in
push
push
fst
mov
pop
push
mov
mov
push
or
sub
pop
outsb
mov
sbb
fstl
mov
pop
mov
jg
in
push
mov
test
jo
adc
push
fnsave
adc
adc
mov
pop
out
int3
out
cwtl
xchg
xchg
ljmp
negl
mov
sbb
jae
int
rclb
out
mov
scas
push
or
ljmp
or
jno
shlb
aad
adc
rorb
pop
sub
lods
mov
pop
xor
lret
sbb
push
jmp
adc
pop
mov
mov
jb
ja
xlat
xchg
pop
jbe
push
dec
lret
ljmp
pop
jo
mov
mov
fstl
adc
pop
clc
mov
sbb
in
mov
pop
cs
mov
push
or
mov
adc
pop
xor
repz
dec
fstl
jae
mov
out
or
dec
dec
push
pmaxub
mov
sbb
mov
dec
dec
out
mov
lods
mov
pop
push
mov
sbb
push
dec
dec
pop
in
mov
pop
push
mov
sbb
push
fnsave
pop
mov
pop
adc
dec
push
mov
mov
out
pop
dec
xchg
data16
mov
shl
testb
xchg
mov
sbb
push
add
adc
push
sbb
adc
mov
popf
xor
cmpsb
dec
mov
mov
mov
frstor
aad
dec
mov
shrb
adc
rcrb
jmpw
mov
sbb
or
adc
cwtl
sbb
lahf
arpl
data16
pop
repz
sbb
push
xchg
fnsave
mov
jmp
fisubrs
xor
insl
mov
pop
xor
cmc
dec
adc
dec
pop
dec
mov
sbb
inc
lret
addr16
xor
lods
push
push
fstl
pop
xlat
mov
sbb
push
dec
sub
in
mov
pop
lgs
fstl
adc
xchg
sbb
adc
push
lret
mov
in
data16
sbb
xchg
fnsave
xchg
adc
push
mov
push
dec
mov
pop
lea
push
fnsave
pop
clc
mov
sbb
adc
push
mov
mov
pop
adc
repz
pop
mov
adc
jne
cmp
icebp
mov
pop
das
mov
sbb
mov
cmp
xchg
mov
pop
xor
xor
pop
jbe
mov
scas
fisubs
sbb
dec
lods
dec
dec
iret
jbe
scas
jmp
fucomip
dec
jmpw
mov
pop
xor
aaa
fnstsw
mov
ror
lods
cs
das
stos
nop
nop
or
out
lea
pop
es
mov
cmp
addr16
mov
push
popa
lds
imul
jmpw
adc
popa
or
sbb
adc
leave
push
xor
frstor
mov
pusha
int3
sbb
push
xchg
movsb
dec
push
out
roll
push
cwtl
aad
or
or
cmc
ror
mov
lcall
mov
mov
in
rorb
mov
push
xchg
lea
movsl
push
jne
test
pop
enter
ja
mov
roll
mov
les
adc
and
hlt
mov
pop
xor
inc
sbb
test
shl
pop
mov
ret
sbb
push
and
repz
pop
xor
mov
adc
cmp
jns
mov
jl
lret
mov
pop
or
sti
fisttpll
pop
adc
cmp
mov
sbb
jnp
fcomps
mov
sbb
push
neg
push
mov
pop
inc
mov
sbb
mov
pop
lds
cmc
fldl
xor
sbb
mov
pop
enter
sub
fisttpll
mov
pop
dec
mov
sbb
mov
pop
mov
sbb
push
neg
pop
mov
pop
xchg
mov
sbb
rcr
das
mov
dec
out
ficoms
mov
rclb
fstl
pop
sbb
push
dec
fstpl
mov
xchg
jge
data16
mov
mov
mov
pop
fidivs
push
mov
pop
fwait
in
shlb
xchg
jg
jno
inc
mov
sbb
push
lods
add
dec
cli
pop
dec
mov
sbb
jbe
enter
add
pop
hlt
mov
sbb
push
mov
adc
pop
pop
mov
sbb
xchg
sbb
pop
add
arpl
push
int
pop
mov
pop
test
push
jnp
jbe
in
mov
pop
shll
mov
pop
mov
sbb
push
cld
adc
adc
pop
sbb
add
and
pop
push
mov
pop
out
movsb
dec
mov
push
adc
in
and
test
adc
addr16
inc
xor
mov
mov
cmove
ret
in
inc
mov
lods
xchg
std
je
inc
stos
mov
and
out
push
ret
in
adc
jle
shll
nop
push
adc
and
fistpl
repnz
das
rcll
je
into
pop
pop
inc
jb
push
rcll
aaa
add
aaa
adc
fdivl
or
add
in
test
xchg
jns
shll
xorb
imul
in
pop
repnz
inc
shll
repz
mov
fs
or
movsb
shl
jl
outsb
shlb
test
mov
aaa
adc
push
insb
and
loop
dec
fs
rolb
adc
je
pop
ss
mov
mov
add
movsl
adc
mov
stos
iret
dec
arpl
pop
jo
hlt
add
orl
aad
loop
arpl
je
adc
loope
lods
xchg
popf
sbb
lods
xchg
dec
pushf
mov
mov
out
cmp
mov
shll
test
adc
pop
add
pop
ret
pop
cmpsl
adc
adc
loopne
in
sub
push
sbb
xchg
push
or
and
ret
sarl
xchg
jg
add
fsts
sub
neg
xlat
pop
and
and
jae
mov
in
iret
and
rolb
les
mov
loop
lods
push
rcl
int3
push
loop
movsb
sub
je
arpl
xor
test
and
cmc
je
repnz
ret
inc
add
xor
pop
arpl
add
and
xor
pop
and
add
mov
sub
adc
pushf
bound
cld
xchg
in
mov
cmp
aam
fsubs
dec
xchg
xchg
ret
inc
inc
mov
out
shl
les
in
shlb
repnz
jg
and
mov
sarl
xor
xchg
int3
adc
mov
jbe
push
adc
pop
push
cwtl
les
xchg
in
sub
inc
xor
ror
mov
andb
loop
and
test
add
iret
pop
jae
lods
adc
test
mov
je
pushl
jbe
inc
loopne
popf
test
bound
adc
cld
mov
pop
mov
repnz
loop
ret
inc
add
dec
fnsave
mov
in
inc
iret
mov
cmpsb
pop
les
rcll
mov
or
xchg
div
mov
mov
and
cmp
rcrl
ret
cltd
xchg
fimull
int
push
and
in
lock
add
push
dec
shlb
out
push
adc
aad
in
rorb
inc
push
mov
loop
inc
or
lret
dec
data16
inc
add
push
pusha
adc
mov
or
int
xor
inc
push
mov
out
adc
sbb
lcall
mov
push
push
shrb
int
push
jno
push
dec
sub
int
lret
loopne
pop
inc
int
rcpps
stos
sahf
or
pop
stos
cltd
add
pop
out
int
iret
scas
sti
dec
mov
test
shl
in
inc
int
mov
push
dec
int
sub
out
jp
ss
mov
int
rcrl
leave
arpl
adc
testb
xchg
xchg
aad
xchg
lods
xchg
sbb
stc
dec
dec
das
xchg
repnz
mov
jo
imul
es
out
int3
std
jge
adc
addr16
mov
repz
addr16
out
daa
or
or
jne
mov
add
pop
and
mov
inc
jp
lcall
jmp
lods
loop
adc
lret
or
and
jge
int3
not
jno
in
iret
inc
fcom
mov
shll
out
test
aam
ror
adc
call
loop
push
xchg
in
int
int3
push
dec
gs
and
data16
rcrl
aam
lret
popa
shll
pop
iret
popa
repnz
xchg
ret
int
shl
data16
sarl
iret
sahf
aad
jecxz
int
adc
aad
mov
dec
les
pop
ffree
out
and
repz
cltd
push
jae
inc
push
imul
dec
out
addr16
cld
fbld
adc
mov
lahf
sbb
push
sbb
mov
loop
pop
call
pop
divl
aas
mov
outsb
jns
ret
xlat
inc
mov
sbb
cltd
mov
into
mov
lods
pop
lock
out
jmp
daa
xlat
out
pop
adc
aaa
neg
lahf
cld
mov
mov
sarl
mov
mov
outsl
or
or
jg
xchg
mov
repnz
dec
inc
and
addr16
pusha
scas
icebp
pop
outsb
lock
xlat
arpl
sbb
sti
nop
rcrb
adc
fwait
pop
dec
or
addr16
out
addr16
push
or
stc
add
xor
je
lcall
lahf
dec
int3
rol
push
leave
and
add
gs
int3
cmc
push
into
inc
push
pop
in
in
dec
jne
call
push
push
js
out
xlat
and
jl
push
leave
dec
aas
xor
push
jb
je
mov
jecxz
or
hlt
adc
aam
cmp
mov
lahf
repz
cs
pop
sbb
call
xchg
fists
test
add
pop
xchg
aad
mov
out
lret
lea
dec
sarb
frstor
push
loop
jl
popf
fsubr
dec
push
cmp
js
flds
sbb
loop
mov
js
ja
fsub
push
push
pop
sbb
pusha
cmp
fcoml
popf
int
dec
rcll
in
rolb
mov
jg
sti
stos
cwtl
ljmp
into
xchg
adc
loopne
pop
sub
pop
dec
fsubrs
xor
les
fdivrs
shl
cmp
lds
fistl
jne
hlt
jbe
shll
xchg
fcoms
sbb
adcb
sub
rcrl
pop
pcmpgtb
xor
fstps
jmp
int3
lret
movsl
repnz
push
and
sub
mov
adc
xchg
sti
fsubr
xor
bswap
jg
int3
add
mov
cmc
out
pop
push
int3
add
adc
cmp
stos
mov
push
insb
and
fistl
or
int
cmp
and
js
leave
rorl
and
add
mov
dec
out
rcrl
jno
sbb
filds
int3
mov
adc
or
push
jle
xchg
jmp
jg
sbb
lods
pop
inc
jge
adc
mov
add
rorb
mov
mov
push
rcl
xchg
les
push
cmp
sub
or
sub
pusha
xchg
in
and
mov
mov
cmp
lahf
out
stc
and
insb
lahf
test
mov
jl
xor
or
scas
pop
es
les
xor
fistpl
jae
loop
cmp
cmpsl
push
mov
push
iret
dec
incb
xchg
add
adc
and
sub
xchg
jns
cmp
jg
mov
movsl
push
push
subl
pushf
repz
sub
jmp
mov
les
push
sbb
push
adc
jl
xchg
jge
xchg
xor
rcl
push
add
xchg
sbb
leave
sbb
out
test
inc
inc
sbb
js
rdmsr
scas
and
sub
dec
jno
mov
ljmp
fcmovne
scas
stc
cld
xchg
or
fs
push
fwait
xchg
dec
inc
lahf
dec
int3
jb
and
fdivrs
push
lds
sti
dec
outsl
adc
mov
xor
mov
mov
cmp
adc
push
and
int
leave
fsubr
sarb
inc
fcom
xchg
hlt
xlat
in
call
bound
stos
mov
cmpl
and
mov
notb
push
xor
cmp
cmp
imul
xchg
sub
daa
mov
xchg
mov
xlat
pop
pushf
ja
sub
fcomps
scas
or
xchg
movb
cmp
rcll
nop
lahf
out
sbb
cmp
jmp
jo
pop
mov
jno
fmull
dec
mov
pop
call
xchg
push
mov
mov
jbe
daa
xor
or
jno
sbb
loop
inc
fwait
insl
decl
jl
lea
popl
mov
arpl
adc
lods
mov
sub
jg
into
popf
cmpsb
or
out
lret
cmc
mov
test
xchg
mov
fisttpl
fstpl
xchg
ja
bound
and
test
ret
mov
movsl
sbb
arpl
mov
xchg
cmp
hlt
insb
mov
loopne
shr
iret
cmp
loop
inc
aaa
jo
jnp
mov
lods
xchg
jae
jno
ss
mov
cmp
dec
cmpsb
jns
jg
aam
pop
testb
roll
es
popa
notl
rcll
pop
in
mov
insb
jl
orl
and
daa
rcl
jle
sbb
mov
mov
dec
pop
pop
mov
enter
pop
scas
lahf
mov
incb
daa
dec
push
cmpsb
in
shlb
xchg
xor
pop
mov
int
pusha
sti
addr16
rcrb
dec
add
jl
jno
das
push
xchg
cmp
into
testl
aaa
out
xchg
nop
into
stc
rorl
xchg
inc
adc
out
loopne
js
aam
aad
mov
das
adc
out
andl
inc
sahf
scas
or
pop
push
mov
lret
mov
mov
scas
jnp
enter
sbb
dec
dec
sub
cltd
add
mov
dec
pop
into
imul
xchg
pusha
repnz
dec
mov
or
ret
pop
sub
ss
mov
xor
fildll
in
into
int
dec
push
add
add
sbb
loopne
rcll
sub
inc
sbb
adc
repnz
fsubrs
jno
aaa
bound
adc
rcl
pop
sub
jecxz
mov
pop
cwtl
call
lahf
or
test
pop
shlb
gs
mov
inc
stc
mov
push
loope
add
cwtl
pop
out
pop
cmp
add
inc
imul
xor
sub
sahf
pop
mov
ds
mov
and
lods
xlat
rolb
sub
xchg
xchg
cmc
in
mov
dec
xlat
out
mov
inc
push
mov
xchg
roll
lret
mov
mov
out
mov
movsl
mov
add
repz
push
cld
mov
dec
push
xchg
jno
cmp
jns
lahf
xlat
pop
inc
aaa
and
and
mov
push
lods
mov
xor
jmp
adc
movsl
stos
lret
and
lcall
stos
cmp
cmpsb
push
push
into
movsb
jmp
test
inc
push
inc
dec
andl
jecxz
call
pop
mov
pushf
shlb
int
jle
adc
fdivrs
nop
outsb
sti
xchg
or
cmp
aad
incb
aaa
iret
add
fsubs
inc
ds
movsb
mov
sbb
mov
decl
mov
imul
ljmp
add
lret
dec
insb
xchg
pushf
scas
jle
pop
orl
and
push
sub
jbe
xor
ja
dec
xchg
and
out
push
mov
lcall
push
mov
mov
xor
jmp
jno
aas
ret
aad
push
push
fcmove
cwtl
test
mov
mov
mov
mov
push
mov
push
insl
xchg
xchg
aam
cli
mov
es
jne
xchg
mov
imul
mov
out
enter
shlb
dec
cmp
adc
jae
pop
test
inc
sbb
andl
aad
xchg
fcomps
or
xchg
scas
in
dec
insb
or
data16
xchg
shll
sub
or
push
push
outsb
or
push
ret
sarl
dec
sarl
adc
mov
add
pop
lods
leave
aad
cld
adc
jb
je
mov
shlb
movsb
insb
cmp
je
lret
shl
dec
mov
cmc
flds
iret
push
into
leave
jmp
mov
pop
or
pop
out
cltd
add
mov
sbb
ljmp
clc
push
vshufps
int
setno
jb
sbbl
mov
scas
push
jge
cs
test
adc
push
sahf
into
pop
xchg
mov
ret
jno
in
sbbb
aaa
mov
ret
adc
test
xchg
stos
mov
push
jno
imul
or
aam
sbb
test
arpl
decb
inc
add
in
dec
jge
loope
pop
fisttpl
scas
pop
sub
insl
outsb
mov
dec
not
js
call
iret
sub
cld
jp
sbb
outsl
or
ja
insb
sub
mov
clc
fcmovbe
mov
cmp
cmp
lahf
imul
add
xor
stc
sbb
mov
call
pushf
mov
pop
inc
push
es
pop
aaa
dec
jge
dec
adc
cmc
add
push
cmp
sbb
cmp
in
jno
add
lds
push
pop
add
jg
add
jne
fwait
imul
rcl
xchg
popa
cmp
scas
cld
mov
les
xchg
push
inc
inc
add
or
cmpsb
xchg
popf
popa
inc
xchg
xchg
sti
push
ja
es
sub
mov
cmp
lods
mov
jmp
lds
xor
pop
push
xor
ss
mov
or
mov
clc
jl
movsb
xor
scas
dec
jbe
out
out
pusha
int3
in
pop
or
xsaves
int
cmp
fbstp
sub
mov
hlt
daa
test
jne
js
push
xor
dec
movsb
stc
pop
cmp
ja
cwtl
inc
hlt
xor
mov
fwait
or
in
lds
dec
push
ret
cmp
sub
push
outsb
lret
mov
adc
fildl
imul
mov
out
cmp
adc
leave
dec
and
pop
xlat
dec
mov
jo
in
mov
filds
jl
and
fimull
xchg
vmovsldup
incb
jno
pop
aas
push
loopne
test
jp
inc
ja
mov
pop
stos
pop
xchg
mov
xor
out
or
xlat
cs
mov
mov
xor
stos
xchg
data16
sub
shrb
mov
cmpsb
subb
test
push
repz
pushf
mov
sti
xor
int
adc
add
inc
sahf
outsl
sub
dec
js
mov
leave
xchg
jecxz
mov
pop
ss
aad
dec
fnstsw
fsubrs
dec
mov
jle
jbe
xchg
loope
xor
dec
fwait
sbb
mov
mov
dec
pop
inc
adc
je
stos
cmp
adc
adc
sub
or
cmp
or
icebp
mov
pop
je
mov
enter
data16
aam
in
repz
in
cmp
cmp
leave
xchg
mov
sub
adc
xchg
inc
imul
insb
imul
or
push
cmp
mov
pop
add
and
cmp
lahf
push
mov
js
scas
xlat
outsb
vmovdqu
dec
xor
test
mov
dec
sahf
gs
jl
movsb
jo
xchg
fwait
inc
mov
hlt
arpl
cmpsl
stos
mov
cmp
cmp
jb
inc
loopne
push
and
adc
cmp
and
push
pop
pop
lea
cwtl
inc
ds
xchg
insb
xchg
lcall
ret
aam
adc
jg
ljmp
pop
push
xchg
iret
shll
pop
gs
mov
mov
add
test
idivb
jb
and
inc
sub
shlb
inc
pop
js
sub
pop
pusha
je
aam
sbb
push
inc
lock
rcl
mov
sbb
push
stos
jl
xor
aad
fdiv
sub
rcr
hlt
add
ds
pop
mov
mov
and
or
push
cld
mov
lret
xchg
mov
leave
ds
mov
jge
xor
push
out
inc
pop
or
jbe
sbb
jb
jl
daa
jmp
sub
xor
pop
pop
add
mov
xor
xchg
mov
jecxz
rorb
jle
cltd
dec
jl
stos
mov
in
cmpb
cmpl
jne
pop
mov
out
and
fsubrs
in
sub
in
mov
pop
adc
cmp
push
test
push
loop
sti
lret
fmul
lea
add
xor
rol
test
push
lcall
add
aaa
xchg
int
insb
mov
xor
fs
out
mov
das
nop
sbb
mov
jbe
cmp
aad
bound
or
es
xchg
leave
insb
jo
aaa
cmp
into
and
mov
das
mov
pop
mov
aas
sbb
sbb
addr16
pop
ror
xchg
sbb
call
jb
add
dec
inc
iret
subb
idivb
mov
add
or
jmp
push
ljmp
loopne
pop
fnstcw
mov
lcall
stc
out
aas
cs
call
fst
mov
push
xor
push
xchg
enter
adc
push
dec
sbb
test
shll
jmp
pop
xchg
pop
imull
inc
or
and
mov
out
or
push
int
test
fstpl
and
push
icebp
call
sbb
xchg
out
popf
or
adc
push
add
mov
in
aad
dec
push
inc
nop
ficompl
in
das
sub
mov
popf
rcl
mov
movsb
sbb
or
je
pop
and
cld
inc
cli
lret
jo
scas
dec
hlt
test
jo
loopne
dec
sub
call
mov
dec
and
or
imul
adc
in
fstpt
dec
repnz
int
orl
lock
aam
and
fs
sub
jae
into
out
insl
adc
dec
into
pop
sbb
xchg
xchg
mov
aad
cmpsl
sbb
inc
or
push
xor
xchg
jns
push
inc
push
lret
jbe
das
mov
add
fldz
fcmove
int3
add
jp
and
jmp
popf
jbe
xchg
sbb
insl
sbb
lea
jbe
hlt
loope
lret
inc
lods
mov
dec
xchg
pop
pop
add
aas
sbb
repnz
fistl
movsb
push
sbb
jbe
jge
pop
cmp
int
fstpl
jne
push
je
test
ret
cmpsl
in
mov
dec
iret
cmc
test
shll
daa
xor
cli
mov
stos
es
iret
pop
das
or
or
jns
lcall
outsb
out
fisttps
stc
sbb
out
inc
cmp
mov
push
jnp
pop
js
test
or
clc
push
sbb
data16
inc
shll
adc
out
dec
loop
mov
sub
aaa
repnz
xchg
jns
mov
xlat
xchg
stos
dec
cmpsl
push
push
xor
lret
fmul
xchg
ljmp
and
or
inc
dec
iret
add
xlat
dec
adc
in
bound
dec
mov
fadd
xchg
mov
pop
push
sti
repz
jnp
cmp
fwait
jbe
inc
cltd
adc
cwtl
pusha
mov
sbb
dec
lods
das
push
mov
rcl
jp
rol
mov
or
sti
fcmovnbe
dec
icebp
mov
aam
add
mov
movsb
pop
rol
cmp
in
leave
gs
mov
out
sbb
sahf
ja
mov
cltd
mov
pop
insl
mov
sbb
loop
mov
aad
addr16
mov
xchg
lods
mov
sub
out
test
pusha
mov
mov
jmp
in
pop
sub
jp
rorb
rcrl
pushf
repz
xor
gs
jg
jmp
and
xchg
or
orb
stc
mov
or
imul
cmp
mov
das
mov
addr16
rcrb
icebp
sub
pop
push
xchg
incb
je
xchg
aaa
xchg
jne
adc
and
out
mov
pop
xchg
mov
push
addr16
jle
shr
stc
jl
xchg
cmp
pop
in
xchg
add
dec
insl
fsub
loopne
adc
mov
out
push
pusha
daa
aaa
jo
sar
out
mov
cwtl
or
mov
xchg
fwait
lret
out
mov
insb
or
jne
and
cmp
jbe
push
int3
stos
sbb
dec
pop
mov
dec
lock
inc
xor
inc
outsb
notb
mov
out
xorb
pop
dec
push
mov
push
cmp
leave
scas
mov
sbbb
jg
rcll
mov
roll
out
pop
mov
stc
in
add
repz
xchg
pop
mov
rcl
jnp
mov
push
and
pop
lea
or
or
sbb
mov
les
aad
push
test
xchg
jne
inc
sbb
je
mov
sub
push
fs
adc
cmp
add
mov
xchg
and
repz
loopne
sti
sub
cli
mov
pop
add
jae
pop
push
xchg
cmpsl
lea
xchg
scas
jno
inc
xchg
mov
xchg
loopne
pop
adc
jne
sbb
insb
push
out
loope
gs
leave
int
mov
cmp
sbb
int3
out
push
mov
das
pop
outsb
pop
pop
gs
fadd
add
inc
call
adc
nop
andb
jge
dec
pop
cmp
push
in
jmp
pop
cld
dec
push
mov
mov
jo
inc
pop
das
jbe
clc
or
mov
popa
loopne
xchg
int3
ljmp
mov
pushf
dec
pop
subl
push
jnp
cmpsb
lods
lock
in
sbb
aad
leave
dec
int3
or
lods
cld
xchg
fidivs
inc
pop
repnz
std
xchg
or
scas
xchg
or
and
push
add
xor
stc
in
mov
js
bound
addr16
push
jl
push
xchg
jns
aaa
inc
jmp
push
or
insb
data16
jmp
lcall
mov
xchg
add
cld
sbb
and
dec
xor
rorl
xchg
sub
test
out
ja
add
xchg
xlat
fistps
les
xchg
loopne
into
sbb
pop
subl
sub
in
call
xor
adc
jnp
inc
ret
jge
jb
push
addr16
into
fcomps
ljmp
scas
psubsb
insb
mov
les
sbb
sub
sub
push
sti
and
push
xor
pop
sub
mov
in
cs
les
sub
into
add
jno
arpl
push
out
bound
scas
shlb
lods
sarl
mov
dec
xchg
das
shrb
push
inc
or
xor
xor
sub
imul
mov
int3
adc
adc
adc
mov
jp
int3
shll
and
jbe
and
adcb
inc
xchg
mov
outsb
lock
adc
int3
cld
fimull
xlat
xor
fisubrs
jbe
aam
sub
cli
stos
je
inc
adc
push
pop
xchg
pop
or
int3
jae
out
lds
dec
ds
dec
ret
mov
jo
xchg
adc
faddl
sbb
dec
jmp
ljmp
test
cmpsb
leave
push
or
fldcw
ficomps
add
in
sbb
jae,pn
and
enter
or
pop
xchg
jecxz
xchg
sbb
insb
sub
dec
and
std
xor
test
test
pop
xchg
popa
sub
loopne
mov
clc
daa
or
push
jb
lea
sub
rolb
pop
aam
fistl
jns
les
imul
adc
mov
ljmp
dec
xor
out
sub
xchg
pop
push
test
in
call
xchg
rclb
and
call
mov
data16
sahf
mov
out
mov
in
push
inc
test
mov
mov
fmull
jp
pop
ljmp
or
std
adc
pop
jg
mov
mov
inc
inc
adc
ret
pop
sbb
mov
out
xchg
jns
sub
pop
pop
adc
scas
pop
cli
outsb
and
xlat
mov
in
mov
jae
push
dec
adc
xrelease
ss
movsl
xchg
mov
cmc
aam
mull
add
and
add
mov
pop
aaa
jae
pusha
loope
sarb
xchg
mov
inc
mov
das
cld
mov
popa
out
das
sub
mov
in
bound
arpl
cmpb
stos
sbb
ja
out
jo
dec
mov
inc
jle
mov
test
cli
mov
jmp
and
or
lock
nop
shl
xchg
xchg
mov
popf
xchg
cmpsb
out
mov
push
loope
and
sbb
xchg
jne
popa
pop
aas
inc
lds
or
lahf
jg
adc
imul
dec
sub
adc
xlat
inc
push
cmp
out
test
jmp
jno
flds
mov
pusha
xor
mov
add
movsl
leave
dec
sahf
lods
or
call
cli
dec
pop
lcall
imul
std
xchg
ret
adc
or
and
fs
dec
xor
cmp
mov
sub
sbb
adc
xchg
or
shlb
testl
mov
sbb
mov
dec
or
jecxz
xchg
dec
sbb
mov
outsl
shll
test
mov
pop
dec
daa
cli
jno
jg
cwtl
mov
mov
sub
shlb
mov
jmp
jg
ret
push
out
out
int3
lea
adc
fiaddl
jge
dec
push
test
out
fcom
mov
test
daa
mov
cmp
sub
cltd
xor
jbe
jmp
adc
inc
push
mov
xlat
lcall
adc
js
mov
divb
mov
cltd
idivl
psubsw
xchg
lods
enter
fnstsw
push
xchg
outsb
or
sub
pminsw
mov
pop
pop
mov
dec
cld
cli
xchg
rcll
inc
xlat
lds
xabort
es
cmp
mov
scas
cmpsb
sbb
out
out
imul
js
stos
pop
mov
push
sub
aad
fwait
push
lret
sti
xor
sbb
int
sbb
xchg
push
sub
idivb
decl
inc
xchg
push
test
sahf
data16
shlb
fs
mov
inc
rcl
and
fwait
movsl
gs
dec
rorl
in
or
imull
icebp
dec
xchg
and
push
xchg
mov
leave
mov
dec
rep
test
fidivs
fmull
mov
xchg
sub
jge
mov
add
mov
mov
fldcw
xor
cmp
sub
test
stos
stos
test
sbb
jmp
adc
leave
cmp
mov
std
les
mov
xchg
in
adc
scas
jnp
jecxz
mov
mov
cmp
rcrl
adc
and
mov
iret
xor
repnz
push
test
rclb
cmp
pop
adc
fwait
push
inc
adc
les
movsl
data16
jle
cmp
in
shl
lret
pushf
loopne
sub
lea
xchg
nop
jmp
fimuls
xchg
fnsave
jne
mov
pop
jbe
das
rcl
stos
test
xchg
sub
fsub
mov
jecxz
stos
dec
nop
clc
div
enter
jmp
push
lods
mov
rclb
inc
stc
rolb
outsl
and
cwtl
sub
xchg
arpl
cmp
add
clc
lods
loop
xchg
pop
rcl
mov
xlat
cmp
cmp
mov
ds
fnsave
and
xchg
fsts
mov
mov
lods
inc
adc
push
sarb
movsb
push
lea
xor
int3
jg
pop
lcall
dec
js
test
daa
and
push
dec
pop
jb
shlb
je
into
ret
mov
mov
loopne
xchg
cs
lcall
add
addr16
mov
or
xchg
cmp
mov
mov
lahf
jbe
or
int3
xor
sub
stc
movsb
push
loopne
clc
sub
scas
add
cmp
xor
pop
push
ret
xor
mov
ret
push
cwtl
fs
sbb
adc
stos
mov
je
xchg
imul
test
mov
mov
adcl
shr
add
add
or
mov
loop
cld
call
xchg
cmp
arpl
xlat
es
out
lcall
hlt
stos
push
pop
jl
adc
inc
lods
icebp
push
fcomps
in
mov
into
pop
xchg
dec
es
dec
cmpsb
inc
inc
hlt
sbb
out
mov
es
adc
pop
into
pop
adc
mov
sbb
imul
pusha
mov
dec
sub
jno
in
sti
fldcw
loope
lds
cmp
push
sub
push
jb
arpl
pop
sbb
pop
mov
cld
mov
insb
pop
cwtl
popa
or
insl
cmpsb
push
pop
ror
in
je
add
and
pop
aam
sub
loope
mov
ficomps
lock
popa
insl
xor
aas
mov
enter
into
mov
and
mov
test
jno
pop
sbb
js
fcomps
dec
fwait
bound
test
pop
mov
das
aad
lea
mov
nop
in
adc
jo
in
inc
push
xchg
leave
mov
or
fdiv
inc
into
pop
enter
popa
movsb
test
js
or
arpl
adc
shlb
and
in
inc
fs
push
mov
jne
bound
pop
out
sub
test
lret
mov
mov
xchg
mov
xchg
es
fucomi
mov
fildll
cmp
in
add
dec
xchg
fucomi
scas
ret
cwtl
cmp
jo
movsl
loopne
cld
jae
testb
imul
add
or
scas
addb
push
and
or
ds
mov
fists
bound
sar
dec
ja
clc
dec
adc
loope
js
push
arpl
dec
push
mov
in
dec
out
jo
and
lds
outsb
sub
inc
push
fimuls
xor
sbb
insl
lds
push
push
push
cld
in
cmpsl
shl
mov
sub
in
rorb
pop
mov
icebp
fwait
jns
or
push
dec
rcrl
out
das
into
mov
dec
xor
fs
adc
pop
insb
loop
xchg
xor
pop
mov
pop
push
and
stc
mov
fsub
lods
push
iret
sti
xor
adc
int
push
bound
loopne
addr16
sbb
pop
in
iret
add
ret
out
jnp
daa
mov
xlat
push
dec
fwait
xor
jae
jae
lock
loope
cmp
outsb
and
inc
jl
pop
pop
push
lret
in
rcr
pop
inc
or
lcall
test
jbe
rolb
stos
or
xchg
sbb
xorb
fwait
divb
mov
xchg
jo
fildl
pop
push
je
les
stos
mov
push
scas
loope
rorb
js
gs
hlt
rcll
jmp
cmc
cltd
mov
dec
outsl
sbb
and
rolb
sbb
fs
clc
mov
pop
ror
dec
scas
sub
cmp
push
insl
dec
fcomps
xchg
fldenv
test
cmc
mov
stos
or
push
fidivl
mov
movsb
in
adc
mov
add
test
out
or
mov
adc
xadd
mov
xlat
push
out
push
out
inc
cmp
mov
xchg
mov
cmp
lret
xchg
jmp
push
or
std
pop
int
sub
jne
movsl
cwtl
and
jns
rcll
mov
inc
cmc
pop
inc
pop
pop
mov
cmp
loope
call
out
xor
xchg
sub
mov
cwtl
and
das
sbb
mov
jge
and
push
movsl
mov
pop
movsb
iret
aam
add
push
subb
dec
sub
or
pop
push
cmp
in
mov
insl
ja
mov
adc
xor
lcall
xchg
cmp
xchg
cmpsl
mov
add
mov
lods
add
daa
adc
push
xchg
loopne
push
add
notb
add
movsl
fisubs
push
jmp
icebp
jns
popa
sbb
and
xchg
rcrl
fsubrp
or
test
jp
aas
cmpsb
push
nop
leave
mov
cltd
jno
or
cmp
xor
repz
in
fcompl
jbe
leave
das
jle
lahf
insb
cs
push
repz
in
push
push
fwait
jmp
sub
mov
mov
ds
dec
es
mov
and
out
rorl
int3
fnsave
stos
into
pushf
jbe
mov
std
fbstp
out
hlt
jecxz,pn
insl
dec
pop
adc
jae
add
outsb
jnp
mov
loop
cli
xchg
popf
daa
xlat
mov
mov
scas
pop
add
xlat
mov
rcl
push
jne
push
xchg
cld
cmp
mov
orl
mov
sbb
je
adc
mov
in
int
pop
bound
sbb
mov
sub
lret
jo
mov
int
cmp
mov
fldl
enter
lods
sti
lahf
shlb
test
cwtl
mov
into
mov
mov
mov
aas
xchg
pop
into
js
push
xchg
je
xchg
ds
ja
mov
adc
fisubrs
inc
jae
out
cwtl
scas
ss
mov
je
mov
mov
pop
push
jbe
scas
lret
mov
mov
data16
in
add
xchg
shlb
ficomps
sbb
sub
sarb
xchg
je
daa
cmp
cmp
in
into
sub
cld
xor
lret
rorl
dec
and
mov
lea
dec
push
mov
loopne
sar
adcb
test
js
push
push
lret
inc
scas
xor
loope
divl
mov
push
inc
cmp
out
aam
mov
shlb
mov
orl
in
mov
add
lods
js
pop
cmp
xchg
xchg
xchg
popf
gs
les
push
in
cmp
fsubr
cltd
mov
cmc
xor
int
lret
jns
mov
dec
lret
add
lahf
xchg
mov
push
push
mov
dec
add
dec
test
notl
scas
test
mov
xor
loope
jl
leave
and
push
xchg
xchg
fdivs
movsl
inc
into
cmpsb
stos
mov
in
call
push
mov
jbe
or
jmp
iret
aad
test
push
fbstp
adc
push
jmp
popf
mull
std
mov
inc
xchg
lea
xor
inc
mov
xchg
jns
push
iret
mov
nop
das
lea
xor
sub
sbb
cltd
aaa
push
xchg
jae
addr16
push
test
sbb
push
insb
jle
in
xor
mov
lahf
adc
pop
sbb
leave
jne
lcall
xchg
mov
sbb
mov
adc
inc
push
mov
mov
std
shlb
icebp
es
dec
int3
dec
and
mov
push
jecxz
jns
je
test
test
popa
lahf
cmpsb
mov
in
fcom
mov
int
es
ja
clc
jns
test
enter
jecxz
lods
push
inc
adc
jge
mov
call
es
gs
and
mov
loopne
rcl
pop
xchg
sub
test
mov
into
out
add
outsb
adc
jmp
xor
iret
out
in
sbb
cmc
adc
mov
call
mov
ret
jo
add
push
decb
mov
jl
mov
aad
ds
sbb
lds
pop
in
movb
inc
cli
mov
mov
scas
icebp
and
jbe
sbb
mov
test
fcoml
adc
inc
int
jb
jo
jnp
sbb
sbbb
dec
push
mov
jg
out
mov
sub
and
push
sbb
mov
addl
xchg
test
jb
adc
jp
jnp
and
and
pusha
or
add
cmp
dec
in
ret
adc
xor
fisttpl
xchg
mov
push
into
mov
mov
mov
ja
push
movsl
jo
push
inc
cmp
shlb
das
cmp
adc
jae
fwait
inc
rcr
imul
ss
mov
cltd
or
cmc
fdiv
ret
or
pop
push
or
fidivs
test
mov
rcl
mov
cltd
adc
xchg
mov
arpl
fisttps
adc
push
pop
lods
stc
or
testl
ret
and
mov
push
ss
leave
mov
sub
repnz
in
pop
test
push
xor
leave
fmul
cli
cmp
pop
in
out
movsb
push
rcll
cmp
jb
jno
mov
dec
fldcw
mov
in
test
movsl
mov
mov
mov
cmp
sbb
movsb
repz
and
jns
popa
cmpl
ret
addr16
sbb
push
into
pusha
dec
insl
mov
push
mov
xchg
dec
dec
rorb
std
fcmovnbe
mov
mov
stos
jno
mov
bswap
ja
jp
or
fcos
adc
lcall
jle
out
js
stos
xchg
lds
into
cli
lahf
and
inc
outsl
mov
pop
into
lret
sub
jbe
call
and
lods
es
jmp
inc
cmpsl
out
iret
mov
jbe
dec
into
fdivrs
cli
sbb
imul
fmul
test
xchg
xor
cmc
jg
ret
test
jae
jns
push
xchg
and
es
adc
sub
cwtl
aas
rol
sarl
loopne
iret
xchg
add
add
xor
mov
loope
pop
add
push
mov
jno
divb
lret
xchg
out
mov
cmp
inc
repnz
cmpsb
pop
pop
push
mov
and
cld
or
push
xchg
cmp
pop
mov
xchg
shl
mov
push
sarb
mov
daa
filds
adc
or
in
push
stos
jne
xchg
aas
into
sti
xchg
andl
rcrl
std
fcoml
out
lods
gs
rolb
ret
xor
lcall
xor
inc
dec
out
mov
inc
jl
xchg
jnp
or
insb
mov
pop
hlt
xor
icebp
cmpsl
subl
sbb
push
adc
fcom
mov
push
loope
adc
adc
pushf
stos
mov
test
daa
jb
cmpsb
cmp
icebp
gs
flds
fnstsw
pop
sub
xor
mov
out
stc
mov
adc
test
cmp
xor
test
or
adc
ficoms
popa
cs
jno
dec
add
cmp
xchg
cmp
fs
mov
lret
adc
xchg
aas
out
push
arpl
mov
ret
shrl
push
dec
or
jbe
ja
daa
sar
add
orb
aad
push
push
inc
xor
pop
je
and
jbe
pop
lahf
mov
mov
out
sbb
aad
jle
push
test
inc
ret
mov
popa
les
sbb
add
in
dec
js
sbb
xchg
or
xchg
test
stc
pop
xchg
adc
unpcklps
ljmp
stos
xor
mov
stc
mov
add
cmp
xor
jg
push
pop
int
stos
xlat
fwait
push
dec
jmp
hlt
stos
push
es
imul
jmp
stc
push
sbb
cmc
imul
pop
adc
jnp
cmp
enter
mov
out
sti
jmp
dec
inc
cmpb
pop
outsl
aad
loope
and
cmpsl
dec
popa
cld
jge
pop
lret
pusha
loopnew
repz
out
mov
and
inc
sti
dec
adcb
xor
cmp
fwait
xlat
roll
lret
and
mov
or
cmc
xchg
lods
sbb
mov
int
xchg
mov
es
scas
sbb
pop
xchg
and
sbb
mov
jle
fsubrp
mov
xchg
divps
push
sbb
roll
popa
mov
xchg
add
addr16
int
sub
popa
add
pop
adc
push
jne
aam
push
adc
ja
cmpsb
inc
loopne
push
adc
daa
bound
inc
push
or
mov
cmpsl
std
ret
test
push
scas
into
adc
cmp
dec
std
lods
int3
loope
jbe
mov
add
clc
test
inc
in
and
mov
dec
xor
dec
or
xchg
sbb
rcl
sub
jg
mov
push
inc
fldcw
jge
mov
cs
dec
out
pushf
ror
das
cmp
push
repz
cld
sbb
stos
xor
test
and
jp
dec
ficoms
daa
fldenv
cli
test
cwtl
leave
enter
sbb
pop
xlat
scas
push
aas
rcl
adc
xor
push
pop
rcl
outsl
lret
xor
pushf
movsl
jle
xchg
into
adc
and
popf
fldenv
imul
subl
pop
jns
jnp
in
movsb
cmp
push
mov
fimull
das
adc
daa
jnp
mov
xor
shll
jbe
mov
dec
add
bound
je
xor
dec
aaa
out
mov
test
outsb
pop
mov
pusha
mov
cmp
lods
dec
mov
or
and
insl
push
aad
insb
ds
xchg
mov
add
add
out
imul
add
sub
fdivs
xchg
in
aam
mov
lahf
movsb
and
pusha
xchg
fucom
push
xor
jmp
hlt
aaa
jbe
mov
pushf
in
lahf
mov
xchg
xchg
push
lods
adc
xor
inc
loope
js
sbb
xchg
fwait
ret
inc
push
xlat
je
jo
adcl
test
mov
lret
and
lret
mov
lock
pop
jbe
mov
xchg
sbb
mov
scas
mov
or
mov
addr16
lods
inc
mov
push
add
cwtl
sub
and
mov
mov
adcl
cmp
jmp
loope
je
push
jle
mov
pop
sbb
push
lods
cltd
sbb
cs
cwtl
jno
push
data16
lret
test
scas
cmp
mov
iret
xor
mov
dec
cmp
push
lods
mov
sub
sub
mov
jns,pn
mov
push
or
gs
push
in
ljmp
xchg
xchg
push
movb
dec
enter
pop
dec
loope
jg
pop
adc
mov
mov
add
int
adc
shrb
fbld
inc
ja
xor
xchg
sbb
sub
in
fwait
xor
sub
mov
fsubrl
lret
int3
addr16
mov
std
pop
pushl
push
sub
shll
dec
bound
add
cltd
jo
sub
push
das
fcomps
inc
idivb
or
aad
mov
xchg
sub
add
repnz
adc
stos
std
mov
sub
into
xor
adc
fcmovnb
out
dec
xor
sub
pop
int
pop
lock
cmpb
stc
adc
fists
clc
shlb
cmp
in
out
stos
mov
push
cli
orl
mov
adc
out
cmp
dec
in
out
lock
inc
xlat
mov
sub
dec
inc
imul
cld
jp
mov
lock
mov
repnz
xchg
pop
ss
aaa
loopne
loop
popf
rcrl
add
and
mov
push
jbe
mov
std
int3
sahf
popa
neg
loopne
int
rolb
dec
adc
lret
pop
sarl
ds
dec
clc
pop
out
loop
jl
mov
clc
xor
jle
cmc
dec
add
clc
mov
ror
movsb
sti
fdiv
pop
outsb
mov
cmc
mov
jns
inc
cmp
je
or
fidivs
sbb
or
or
rorl
adc
sbb
push
adc
jg
sub
dec
mov
and
hlt
push
movsl
lock
xchg
mov
rclb
and
push
inc
jns
into
popf
inc
pop
xlat
or
push
inc
in
scas
aad
aaa
adc
or
jle
loope
mov
push
push
cmp
mov
inc
jb
lods
adc
or
jmp
adc
sarb
call
mov
outsb
les
lahf
shrb
jecxz
cmp
outsl
imul
cld
outsb
test
jl
aad
mov
in
testl
xchg
call
dec
cmc
and
dec
mov
cs
test
shlb
fsubrp
popf
or
in
jbe
pop
jbe
rclb
xchg
jge
outsb
jle
rcrb
push
or
sbb
adc
push
fadds
movsl
cld
lods
sub
cmpsl
iret
xchg
into
mov
adcl
jmp
adc
xor
dec
xchg
mov
shlb
clc
jmp
dec
mov
repz
into
sbb
iret
iret
add
xchg
xchg
jge
leave
mov
xchg
mov
jp
cwtl
dec
add
rcl
jecxz
ds
push
fimull
sbbb
or
pop
cmpsb
cmp
jbe
mov
sbb
adc
sub
in
mov
mov
push
cli
mov
call
mov
or
pop
inc
mov
in
inc
add
test
bound
fstps
adcl
ror
xlat
mov
and
repz
sub
sbbl
jge
sti
lods
test
fldenv
mov
push
sub
out
loopne
xchg
mov
imul
sbb
shlb
fisttpl
cld
aas
loop
lretw
mov
lea
sub
jge
in
icebp
push
cmpsl
sub
xchg
pause
in
xor
push
push
jns
cmpb
subl
xchg
jg
pop
arpl
sbb
mov
xor
shlb
mov
rcll
sbb
push
rorb
xchg
jle
cwtl
inc
xor
cli
outsb
hlt
pop
movsb
imul
ret
push
mov
push
movsl
inc
jp
imul
loop
mov
jg
sbb
fldcw
xchg
lcall
dec
gs
pop
leave
inc
push
rolb
jne
shlb
dec
out
movsl
sub
pop
mov
xor
enter
fistpl
lcall
mov
repnz
mov
xchg
bound
push
inc
mov
or
dec
mov
push
xchg
insb
inc
mov
lods
into
and
jns
das
jmp
lock
pop
iret
sarb
repz
push
push
push
stos
test
outsl
jl
pop
aam
xor
jbe
mov
pop
xchg
cli
dec
bswap
add
jnp
int
pushl
mov
lret
push
cmp
cwtl
cmp
gs
mov
and
stos
adc
aad
cli
into
out
xchg
adc
out
and
imul
sub
lahf
pop
pop
int3
xor
mov
pop
imull
xor
aam
inc
int
and
scas
push
push
cmp
or
jle
cli
mov
mov
rcl
daa
lock
imul
out
jmp
mov
pusha
lret
insb
cld
mov
pop
xchg
jnp
xchg
mov
xchg
imulb
xlat
mov
aam
and
pop
movsb
sub
and
jbe
fwait
rorb
shl
jae
mov
int
push
mov
subl
sub
jo
mov
testl
inc
pushl
mov
cltd
neg
pop
ds
push
fsubl
sub
pop
leave
inc
int3
lahf
mov
inc
adc
ss
insb
xchg
jle
xor
loope
fcmove
sub
lods
imul
sbb
test
or
and
int
mov
in
push
sub
inc
clc
add
xor
aam
mov
les
test
push
pop
mov
sub
jb
or
jmp
aam
dec
push
je
insl
add
jg
sub
jnp
cmp
mov
adc
cmp
push
cmpsb
add
sub
push
xor
test
mov
mov
clc
hlt
jns
sub
fimuls
imul
ret
sub
lret
cld
mov
nop
adc
mov
dec
and
imul
mov
mov
in
mov
js
dec
je
addr16
js
push
push
and
fcmove
repz
pop
mov
aas
adc
lret
sbb
mov
sahf
stos
shll
outsb
push
or
rol
jbe
lcall
push
imul
adc
nop
clc
mov
xchg
xchg
leave
mov
or
push
addb
std
dec
mov
sahf
cld
scas
sub
jmp
out
jl
adc
movl
cmp
jmp
push
xlat
mov
xlat
mov
and
outsl
jg
aad
inc
je
testb
pop
jnp
adc
add
xor
sub
sub
and
dec
scas
arpl
pop
stos
bound
std
ret
in
xchg
andb
xchg
ret
movsl
repz
shlb
mov
cs
repnz
push
xchg
dec
aam
stos
mov
movsl
and
rol
lods
and
push
xor
es
fdivs
addr16
aas
shl
mov
arpl
ret
xor
notb
movsl
mov
out
jecxz
or
cmc
or
data16
mov
sub
aam
js
pop
xor
add
cli
fcmovne
xlat
jnp
fst
inc
addr16
ja
cwtl
or
lret
push
js
dec
pop
std
mov
xchg
stc
lret
fwait
into
adc
mov
jo
pop
stc
lods
mov
inc
ljmp
pop
cltd
cmpsb
jns
pop
in
in
pushw
outsl
push
cmp
out
jb
jnp
sub
mov
pop
cli
sarb
int3
inc
fimull
add
sub
sbb
data16
pop
jnp
pop
ss
inc
adc
jmp
rolb
pop
in
mov
enter
push
jns
fs
mov
fs
lret
ds
inc
pop
xchg
cmp
js
int3
push
gs
fstps
adc
xor
inc
lods
jo
jbe
mov
mov
or
sbb
push
and
mov
pusha
es
out
subl
or
and
roll
aam
mov
xchg
mov
repnz
mov
addr16
into
insl
cli
iret
leave
frstor
clc
cmp
or
cmp
outsb
jl
xor
movlps
sbb
and
adc
push
sub
jnp
adc
and
es
xor
les
dec
out
mov
roll
sti
int3
cmpsb
dec
in
popf
or
mov
sbb
push
arpl
orl
xchg
scas
jg
mov
jl
mov
push
jo
sarb
xlat
adc
add
inc
cltd
xor
scas
inc
jae
mov
test
into
cmp
cld
fld
loope
shll
nop
scas
gs
mov
sti
mov
cwtl
arpl
jmp
roll
cmp
repz
insb
imul
addr16
cli
sarb
iret
jae
in
das
push
xchg
push
dec
ret
mov
aaa
push
mov
je
mov
mov
xchg
adcl
out
enter
cltd
push
scas
add
ret
mov
into
clc
icebp
add
daa
push
adc
cmp
ret
aam
inc
xor
ret
push
xor
cmc
int
mov
loop
jle
adc
inc
jne
add
cld
repz
jge
aaa
adc
ds
js
xchg
lret
cmp
cmp
es
jmp
cld
xchg
inc
sarb
sbb
sub
jecxz
xlat
sti
fwait
call
mov
mov
movsl
cmpsl
ss
std
clc
add
bnd
into
adc
sub
or
in
stos
cwtl
pminub
push
ret
mov
loope
jb
rclb
pop
cmc
mov
lods
xchg
lret
popa
pop
cmp
mov
test
push
adc
sub
push
push
shlb
cli
xchg
pop
inc
dec
jmp
jp
and
je
mov
pop
outsl
popf
bound
xlat
mov
out
dec
test
cmc
cli
xor
rcll
dec
ret
mov
and
aaa
lcall
out
das
pop
dec
loopne
push
mov
mov
out
xchg
ja
fmulp
stc
sbb
cwtl
sub
mov
mov
ret
movb
int
xchg
lret
dec
or
pusha
lret
cli
test
sub
xchg
ret
js
leave
jle
imul
or
in
lahf
outsb
cli
and
or
icebp
loope
fst
mov
push
push
js
lret
or
cmp
mov
ror
arpl
into
push
mov
dec
fcmovbe
das
pop
fnstsw
inc
jb
inc
jecxz
xchg
mov
mov
cmpsl
fistpll
sbb
cmp
shll
ss
popa
and
rcrb
stos
cmc
xchg
mov
sahf
pop
mov
popf
fs
adc
mov
sbbl
xor
mov
test
mov
push
imul
jns
inc
out
pop
cmc
stc
or
push
pop
xchg
lcall
xchg
sbb
cmpsl
shrb
push
imul
aad
fsubrs
inc
inc
inc
xor
sub
fwait
out
pop
scas
sub
loopne
das
insb
lret
leave
loope
dec
and
xchg
bound
mov
cltd
push
test
push
cmp
mov
pop
adc
sti
xchg
sbb
outsl
ja
sub
mov
pop
pop
inc
push
jns
jle
pushl
push
ret
testb
test
hlt
add
fwait
aas
mov
les
sub
mov
ret
popf
aad
add
cmc
repnz
rorl
pusha
fdivrp
shl
mov
cmpsl
push
lahf
inc
xor
ret
sbb
in
not
loop
mov
sub
sbb
mov
idivb
aaa
dec
jge
dec
sub
add
stc
xor
shlb
iret
mov
cmp
cmp
enter
fistps
in
jo
xor
cmp
cs
sub
insl
pushf
mov
inc
push
cmpsl
sbbl
lods
orb
out
jp
push
lds
dec
inc
xor
sahf
inc
js
popa
mov
cmpb
dec
mov
and
jecxz
lds
or
aam
daa
or
mov
xchg
leave
add
and
fmul
popa
das
flds
jbe
rsqrtps
int3
push
and
mov
insl
xor
fidivrl
xchg
into
cli
xchg
mov
lcall
adc
mov
mov
orb
movsl
cmp
jnp
lret
xor
aas
jb
xchg
sbb
lahf
out
sbb
jle
leave
inc
jo
loop
scas
and
call
lock
adc
bound
inc
push
in
test
xor
push
cmp
sub
jmp
int
enter
jl
in
add
xorl
xor
and
dec
inc
test
cli
popf
inc
xchg
aas
mov
sahf
adc
and
sbb
ja
stc
cmpsl
inc
xor
scas
xlat
aam
pop
pop
pop
fisttpll
add
push
and
or
sti
lret
ret
push
in
jl
movl
lret
jb,pn
dec
pop
adc
jne
mov
dec
test
rcr
mov
xor
testl
sbb
shrb
hlt
xchg
loope
jmp
pop
mov
mov
jg
xchg
jl
or
xchg
lds
in
or
mov
mov
cmp
sbb
inc
daa
mov
fs
arpl
int3
dec
cmc
lret
cli
cmpsl
dec
mov
in
lock
pop
int
xor
sbb
fucomp
mov
in
rorl
inc
fcmovb
or
ja
push
aas
lret
jmp
ja
call
pop
cltd
inc
mov
pop
int
pop
mov
leave
mov
clc
xchg
inc
cmpsb
dec
in
test
xor
cmp
mov
mov
daa
xchg
push
xchg
in
adc
int
cli
xor
xchg
mov
out
jmp
pop
imul
jne
aaa
arpl
addl
add
or
add
pop
xlat
mov
rcr
cmp
jge
pop
movsl
outsb
push
rcrl
push
mov
inc
sub
fsubs
cli
push
popf
push
dec
outsl
ret
xor
lret
scas
sbb
adcb
xor
mov
push
jne
lods
lahf
cli
adc
frstor
mov
jbe
hlt
fs
adc
test
and
xor
jbe
sarl
mov
std
jns
movsb
dec
xchg
scas
push
add
add
mov
xchg
mov
add
pop
mov
je
sub
loope
sti
xor
test
or
xor
sub
cmp
out
icebp
xor
pop
xchg
pop
pop
xchg
xchg
jmp
add
insl
mov
into
sbb
pop
push
int
loop,pt
lcall
outsl
test
push
shlb
or
addr16
mov
out
fstpl
out
scas
pop
push
ret
into
push
xchg
arpl
sub
pop
xchg
add
outsl
ja
int3
adc
or
push
pushf
imul
cmpsb
jle
xchg
push
cmove
pop
mov
out
clc
mov
sbb
sub
lret
cmp
ds
test
push
lret
push
xchg
test
lea
or
cmp
push
ret
inc
aam
jns
jle
xlat
mov
adc
push
in
fnstenv
addr16
push
out
into
rcr
cs
jecxz
scas
ret
inc
sub
xor
push
rolb
jecxz
sbb
dec
jns
fistpll
jae
push
push
ja
lcall
dec
int
jb
or
jecxz
aam
jbe
sub
daa
stos
ds
sub
push
xlat
and
xor
ret
mov
sbbb
push
mov
int
push
outsl
fcom
in
inc
sbb
rcrb
movsb
sbb
test
or
dec
inc
rorb
xor
cli
aam
into
jae
test
pop
mov
sbb
ja
push
mov
jmp
lret
repz
add
mov
inc
xchg
pushf
cmp
stc
add
aas
ja
adc
jb
fsubl
jns
std
xchg
rorl
sub
in
popf
in
stos
add
mov
test
loop
adcl
xor
icebp
aad
mov
mov
and
jnp
adc
dec
dec
ss
add
rcr
stc
stos
jae
xchg
out
in
dec
decl
inc
sub
enter
jge
leave
fcomps
popa
mov
test
mov
dec
dec
dec
mov
sub
imul
orb
fwait
pushf
xchg
dec
cmp
lods
mov
iret
pop
sub
ja
cmp
ljmp
mov
std
xor
dec
inc
in
gs
or
popa
cli
dec
mov
inc
or
xor
out
xchg
outsl
inc
xchg
cmp
xchg
dec
shll
ret
insb
lret
in
lods
stos
or
dec
pop
int
ljmp
into
lods
fimuls
jns
movsl
lret
and
cmp
movsl
stos
adc
aad
popa
cmpsb
idivl
aas
imul
scas
and
mov
pop
ret
clc
dec
dec
cmp
in
cmpsl
sub
je
les
sahf
xorb
imul
mov
out
out
pop
mov
sbb
lret
ror
adcb
and
or
add
loope
jb
test
mov
jne
or
lret
loope
mov
mov
pushf
int3
dec
aaa
lods
out
jg
lcall
fsubl
lods
mov
scas
int
xchg
in
fists
popa
enter
sbb
jmp
lahf
js
dec
push
pop
imul
jne
mov
sub
add
and
cmp
nop
jbe
or
sub
mov
mov
xor
mov
test
cmpsl
mov
xchg
imul
fs
outsb
cmpsb
call
test
test
subb
ss
mov
mov
mov
jg
xchg
fs
add
sbb
insb
xor
sub
cmp
pop
mov
test
mov
jmp
mov
iret
jecxz
cwtl
repnz
sbb
popa
sbb
add
jae
js
icebp
pop
sbb
mov
div
push
cmp
xor
xor
mov
aam
mov
call
loope
xlat
ss
ret
inc
fists
pop
push
sbb
mov
aad
mov
xchg
lds
inc
cmpsl
insl
das
imul
cmp
sbb
jecxz
inc
mov
adc
mov
mov
andl
xchg
into
inc
and
push
dec
add
out
xor
retw
call
mov
push
and
das
enter
sbb
pop
dec
push
push
hlt
aad
sbb
push
scas
std
imul
mov
out
and
arpl
aam
dec
rcrb
mov
push
subb
rcrl
xor
lods
dec
out
pop
mov
adc
lahf
outsl
hlt
pop
fidivs
jge
not
lds
cli
xor
sub
mov
gs
in
out
roll
notl
imulb
mov
fs
pop
mov
mov
push
int
mov
nop
jae
adc
and
iret
pusha
jne
pop
ret
xchg
rolb
push
lahf
lret
xchg
push
mov
sub
ss
in
sarb
sar
xchg
or
jns
sub
shlb
jbe
cwtl
sbb
mov
mov
add
xor
test
inc
das
icebp
ljmp
pusha
stos
push
sub
roll
call
imul
iret
cmp
mov
xchg
icebp
cmp
cld
jnp
faddl
cwtl
xchg
popa
cmp
ja
lret
ja
fldl
int3
mov
fimull
push
cmp
xor
adcb
shrb
or
mov
push
iret
ss
push
add
cld
scas
and
negb
in
pop
push
add
call
cmp
mov
jge
jle
fnsave
call
out
mov
dec
scas
icebp
dec
adc
movl
lock
pop
not
fcoml
jp
jmp
adc
pop
add
mov
scas
fwait
insb
adc
scas
pop
hlt
mov
pop
xchg
sar
push
int3
push
add
mov
inc
cmpb
ficompl
lret
pop
dec
fidivs
test
or
mov
les
dec
dec
push
mov
xchg
fistpll
lret
and
rolb
dec
add
cmp
arpl
xchg
dec
xorl
ret
scas
cld
adc
aam
insb
and
push
into
rcrb
mov
adc
inc
aaa
sub
insb
xor
sbb
pop
pop
push
aas
test
or
cs
xor
add
and
sbb
pop
fsubrp
gs
lea
je
dec
add
adc
pop
or
xchg
imul
xchg
rcl
mov
les
test
add
out
arpl
jecxz
mov
sarl
mov
mov
add
filds
push
movsl
xchg
push
adc
leave
aam
push
pop
mov
dec
movzwl
cs
xor
fcmovb
movsb
push
ret
push
leave
in
fcmovnbe
mov
fnstenv
test
cmpsl
movsb
mov
push
jp
outsb
or
pop
out
mov
jbe
js
shrb
and
mov
inc
int
jne
sub
lret
mov
inc
jecxz
addb
and
jmp
data16
xchg
movsl
cmp
pop
mov
jmp
lcall
mov
fisttpll
sub
jbe
hlt
ja
stos
inc
bound
inc
test
push
loop
sbb
mov
idivl
jbe
stc
repnz
sub
aas
arpl
push
flds
sbb
orps
jge
loop
and
fdivs
and
movsl
adc
jo
sbb
add
mov
pusha
jg
out
lret
cmp
push
sub
pop
push
out
dec
adc
stos
aas
jmp
js
bnd
pop
pop
and
and
mov
ret
cmp
out
int3
xchg
into
or
dec
lods
cs
movsl
inc
test
icebp
push
xor
dec
repz
add
rorl
jnp
adc
popf
cmpsl
aam
into
jae
ret
pop
pop
jno
mov
add
cmp
mov
ljmp
mov
dec
lock
push
test
repnz
mov
daa
aas
or
arpl
mov
loope
sets
into
fistpl
xchg
clc
pop
ds
xchg
sub
mov
jns
xchg
popf
dec
lret
adc
jo
data16
jg
and
shlb
adc
cmpsl
push
lahf
xchg
dec
dec
in
int
lcall
outsl
stos
add
stos
push
mov
aas
mov
cmp
fildll
es
dec
mov
mov
xchg
xor
pop
shrb
sti
pusha
out
push
inc
loopne
lock
adc
jmp
stos
push
xor
sub
cmp
cmp
cmp
push
aam
daa
push
mov
jne
xlat
lret
lret
mov
dec
sub
pusha
xchg
mov
adc
insl
insb
gs
xchg
lods
jp
mov
and
dec
sub
xchg
and
push
jl
push
or
movl
hlt
adc
sub
es
mov
adc
jp
and
data16
ja
popf
inc
in
mov
aaa
or
aad
or
into
or
and
fabs
in
push
scas
sbb
mov
or
adc
cmc
repz
fs
lock
imul
add
outsb
add
cmpsl
in
mov
dec
dec
lcall
mov
pop
push
test
hlt
std
imul
cltd
mov
mov
and
xor
loop
shrl
jb
js
push
dec
inc
int3
imul
movsl
ret
lock
int
and
add
out
pushf
jmp
mov
std
inc
test
gs
jae
lret
cmc
insl
in
xor
pop
ss
push
push
cwtl
sub
dec
cmpsb
adc
aad
outsb
adc
jmp
mov
lret
xchg
cmp
mov
out
leave
fucomi
test
inc
repnz
dec
push
inc
push
pop
test
inc
rcrb
not
cmpsb
movsl
push
lods
lock
frstor
jecxz
test
ja
cmp
xchg
clc
jecxz
jns
adc
inc
sbb
out
mov
negl
cli
push
cmp
nop
lret
xchg
and
or
mov
jbe
rolb
push
stc
lods
call
mov
dec
push
into
lea
clc
push
test
and
cmp
sub
xchg
add
lods
sbb
lods
hlt
mov
jl
cmp
or
jmp
cmovl
arpl
ja
call
int3
add
dec
mov
push
cmp
aas
lret
jl
xor
sub
arpl
push
dec
jmp
testl
insb
lds
cmp
push
and
pop
pop
push
adc
cs
xchg
mov
cmp
jmp
add
insb
pushw
jp
gs
aam
fxam
outsb
sbb
adc
test
sub
stos
scas
push
jo
sub
jno
jbe
cli
cmp
add
push
push
lret
adc
sub
push
adc
popf
mov
mov
sti
xchg
ret
out
dec
mov
test
pop
push
ja
and
adc
out
pop
pop
xchg
addr16
mov
jne
rorb
loope
sub
repz
push
test
fstp
push
test
add
fstps
or
inc
pop
shrl
mov
push
lret
sbb
int3
fistl
inc
ja
lea
rcr
loopne
dec
dec
push
rorl
divl
cmpb
cwtd
scas
mov
sar
and
subl
rorb
sbb
dec
in
xchg
cmpsb
jecxz
into
push
push
and
inc
mov
ficoms
push
mov
mov
xchg
icebp
andl
pop
sti
lret
mov
into
sbb
lcall
or
add
jo
mov
gs
mov
xor
roll
mov
ficomps
fisubl
rcrl
testb
mov
inc
ss
pop
scas
xchg
enter
or
push
es
sbb
or
pushf
aas
out
cmp
xchg
ret
imul
push
xlat
mov
fstpl
xchg
cmp
mov
cmp
int
pusha
jp
out
icebp
mov
push
rcl
sbb
mov
mov
out
mov
ja
jne
test
cmp
jmp
nop
cltd
out
pop
mov
inc
mov
jne
push
rcl
dec
sbbl
push
leave
sbb
push
aad
ds
xchg
pop
add
lock
scas
lods
mov
inc
jns
xor
sub
dec
ds
out
mov
cmp
mov
xchg
lods
sbb
xor
sbb
add
cwtl
mov
das
rolb
ret
sub
mov
add
into
ljmp
sbb
and
int
mov
xchg
out
xchg
adc
repz
pop
push
xor
sub
insb
mov
sarb
mov
sbb
lds
adc
xchg
int3
mov
into
insb
js
subb
mov
sbb
or
ss
shrb
push
or
lcall
xchg
mov
std
lret
or
xchg
adc
add
xchg
out
scas
adc
mov
cmpl
inc
shll
fcmove
std
loop
jp
mov
lret
out
jmp
shl
dec
enter
jbe
pop
arpl
pop
outsl
subl
jne
mov
gs
adc
lret
cmp
fstpt
adc
mov
dec
jl
add
push
sub
jno
mov
or
pop
dec
add
pop
push
ss
jg
insl
movsb
out
pop
setns
jbe
cmp
out
mov
sbb
push
aas
jg
iret
stos
jmp
and
fcoml
add
lods
iret
cmc
jg
jbe
xor
dec
cmp
pop
nop
mov
out
and
inc
or
loop
aam
pop
js
lock
push
xchg
cmp
in
mov
cmovns
insb
xor
xchg
outsl
pop
aam
icebp
test
sub
sbb
shll
clc
andl
mov
icebp
ss
mov
push
or
idiv
jne
stc
adc
lret
mov
mov
les
pushf
imul
mov
dec
cmp
add
dec
mov
sbb
mov
cwtl
or
loop
leave
dec
clc
lea
adc
les
xchg
push
in
not
pop
dec
ret
ljmp
jg
out
pop
fisubrl
mov
and
insl
jne
data16
inc
test
flds
aad
rorb
cmp
pop
ds
pop
push
imul
push
divl
mov
adc
sub
outsb
lods
inc
movl
scas
mov
sbb
mov
jae
int3
rorb
jp
mov
mov
inc
xor
test
or
icebp
shlb
mov
inc
push
adc
in
sbb
test
jmp
in
dec
pusha
out
rclb
pop
pop
loop
or
movb
lock
fstl
cmp
roll
inc
cld
or
mov
sar
out
gs
mov
ljmp
fiaddl
int3
pop
xor
outsb
ja
jo
xor
pop
mov
cltd
es
into
es
into
pop
push
aad
es
mov
loop
and
adc
outsb
inc
sbb
call
xchg
add
sub
sbb
add
dec
lret
cmp
mov
out
aam
mov
mov
inc
mov
mov
xor
push
mov
add
jmp
xchg
les
dec
fldl
mov
pushf
mov
outsb
aam
jno
lahf
sarb
mov
mov
dec
bound
xlat
daa
ret
xchg
mov
jns
sub
xor
mov
mov
repz
vpunpckhwd
sbb
leave
dec
pop
or
add
mov
jp
ja
iret
cmc
imul
addr16
leave
mov
loop
ds
ret
fsubs
push
jge
mov
inc
adc
int
or
push
adc
xchg
jbe
inc
cli
cmp
xchg
dec
loope
sbb
daa
add
ret
fldt
gs
andl
pop
and
cld
js
insb
push
aam
ret
sbb
into
jle
inc
out
adc
xchg
int
xchg
fadds
jmp
insb
mov
and
roll
dec
cmpsl
jb
and
mov
jae
xchg
int
add
lret
sbb
jne
mov
fcmovnb
fwait
jbe
loope
cmc
loopne
test
inc
subb
leave
test
mov
adc
in
mov
adc
stos
push
enter
call
add
loopne
out
das
cmp
bound
clc
lret
inc
mov
fwait
lods
pop
xchg
jo
add
sbb
dec
lods
dec
out
push
pop
cmp
popf
test
aas
xchg
xor
mov
divb
pop
int3
call
xor
sub
aam
adc
jp
inc
jbe
jle
loope
es
fs
imul
push
iret
push
mov
hlt
outsl
cmc
inc
out
aam
adc
sbbl
jmp
push
xor
mov
sbb
ret
ja
daa
imul
cmp
pop
repnz
into
std
sub
xor
movsb
cmp
xor
mov
xor
outsl
jns
pop
and
rclb
into
inc
sahf
mov
and
jg
dec
lret
jmp
adc
mov
pop
jae
out
je
out
add
or
inc
pop
fsubp
sti
clc
push
or
adc
xor
adc
lds
cmc
pop
or
pop
add
js
movsb
divl
mov
leave
mov
xor
jbe
push
fsubrs
test
jle
scas
cmpsb
insl
lret
and
jge
stos
das
push
jne
cmp
or
xchg
test
arpl
xchg
dec
add
js
ds
mov
sub
push
or
bound
adc
dec
sti
and
jae
clc
xor
xor
or
lret
shrb
adc
mov
ss
adc
cmp
mov
arpl
xchg
test
mov
mov
fchs
int
roll
mov
dec
mov
int3
repnz
xorl
repz
add
fistpll
out
dec
xor
push
outsb
insb
hlt
mov
xor
inc
pop
and
add
mov
andb
idivb
sbb
and
or
adc
out
mov
pusha
mov
pop
ret
lods
insb
movsl
imul
fs
repz
cmc
out
xchg
push
jns
jmp
jg
loop
shlb
shr
repz
into
test
lods
std
pusha
mov
leave
outsb
push
out
and
mov
enter
cmp
inc
test
in
add
or
sbbb
jns
pop
sbb
cltd
out
in
mov
loopne
adcb
sbb
jmp
push
sub
adc
dec
push
inc
or
adc
lods
pop
sarb
push
dec
push
daa
insl
and
faddl
pop
std
sbb
push
cmc
mov
leave
fildl
cmp
mov
test
out
sub
popf
rcl
sub
sbb
jmp
dec
popa
out
std
or
mov
das
xor
dec
rcrl
inc
mov
insb
cs
adc
sbb
push
add
or
sub
repnz
pop
fstpl
mov
test
iret
adc
in
pop
lock
movsl
out
in
pop
data16
fcmovbe
jge
xchg
jle
fsubrl
stos
mov
and
jle
xchg
sub
add
in
xchg
add
mov
cmp
dec
imul
and
insl
xor
das
push
mov
iret
fisubl
outsb
lret
adc
hlt
lods
out
xchg
and
push
pop
dec
scas
inc
or
mov
leave
jno
and
xchg
inc
dec
inc
inc
inc
push
daa
xchg
dec
insl
cmp
fst
pop
dec
sub
test
outsl
and
dec
imul
enter
out
inc
lods
push
mov
movsl
cmc
sbb
adcl
push
adc
shll
mov
hlt
out
rcl
xchg
daa
js
test
inc
mov
loopne
ss
stc
insb
leave
stos
iret
in
fildll
shrb
mov
adc
js
add
pushl
shl
xchg
cmp
or
dec
mov
cli
clc
push
xlat
scas
mov
xor
jg
xor
sbb
leave
test
ret
push
jmp
lcall
bnd
push
xchg
test
mov
sub
sub
push
popf
int3
pop
add
rcl
push
dec
mov
mov
push
test
loopne
mov
shll
out
push
mov
mov
pop
bswap
lods
xchg
pop
cmp
mov
cmp
stc
mov
fdivrl
in
push
and
dec
sub
int
shll
adc
je
and
adc
xor
fst
adc
int3
xchg
test
roll
and
push
mov
ret
inc
mov
add
fs
js
push
pop
mov
or
lret
push
mov
repz
aam
fildll
push
cmp
and
hlt
jg
fidivs
xlat
jne
add
adc
pop
dec
fistps
pop
dec
dec
pushf
mov
sbb
jbe
roll
shll
and
test
adc
popa
fsubrl
xchg
mov
push
data16
ss
inc
add
ss
push
int3
data16
ret
das
int3
shufps
dec
out
adc
adc
add
xor
sub
push
clc
xor
add
movsb
test
adc
cmpsb
int
rcrl
pop
loopne
jecxz
lret
mov
jle
jns
push
data16
xchg
pusha
adc
aad
dec
popa
pusha
fcomp
fldt
sub
dec
lea
outsl
fldt
mov
call
adc
shlb
xchg
shl
lods
aam
add
dec
into
jbe
inc
out
cltd
inc
aam
aad
outsb
mov
roll
sbb
call
test
mov
leave
adc
push
test
dec
ret
int
jge
ljmp
aad
fldcw
xchg
push
push
adc
add
xlat
xchg
ss
shlb
rcll
fsubl
mov
dec
sbb
out
lods
inc
dec
loope
test
out
xchg
lods
outsl
pop
adc
js
mov
push
and
pop
pop
push
pop
lret
out
in
jbe
xlat
ret
fcoms
cmpsb
data16
jbe
movsl
pop
std
dec
ds
pushw
fisubrs
popl
aam
aad
cmpsb
xchg
push
xor
ss
scas
mov
push
xchg
jnp
xlat
inc
cmp
js
ds
pop
xchg
xchg
mov
jne
adc
cltd
movsb
test
pop
negb
insb
sub
mov
ret
and
sub
mov
push
pop
mov
fdivrl
cli
jmp
notb
sub
adcl
fnsave
add
in
add
lcall
dec
mov
add
xor
scas
jb
test
and
fcom
mov
push
jmp
jnp
in
sub
mov
push
mov
pop
add
sbb
cmpsb
cwtl
lods
lds
inc
loop
jnp
aam
inc
pusha
cmp
cmp
xchg
gs
imul
push
xchg
insb
cwtl
inc
sbb
insb
xchg
cld
daa
imul
mov
lock
fisubrl
sub
or
aas
inc
push
mov
lods
adcb
cmp
shll
enter
jle
jb
cmp
add
mov
push
add
jo
mov
fldl
or
rep
push
jecxz
adc
lea
or
adc
test
aam
hlt
js
xchg
xchg
in
pushf
sbb
arpl
aad
mov
mov
push
scas
sub
mov
xlat
pushf
ret
inc
leave
mov
adc
stc
lret
stos
arpl
lret
es
cmpsl
mov
inc
inc
inc
scas
test
inc
inc
ljmp
dec
push
lock
es
jg,pt
jl
cmp
lods
popf
pushw
lods
sbb
jbe
shlb
cltd
jl
pop
lods
fiaddl
push
mov
jne
cmp
popf
xchg
push
jnp
insb
cmc
adc
inc
xchg
or
xor
ds
xchg
hlt
shrl
cmpsl
outsb
dec
in
fbstp
mov
loopne
repnz
lods
jno
push
in
xchg
mov
jbe
pop
adc
gs
mov
lods
dec
pusha
fiadds
in
cmp
add
mov
dec
cmc
loop
sbb
or
ds
and
call
push
stc
cmp
xlat
jbe
and
ss
adc
inc
les
lret
cld
mov
jmp
lret
pop
sbb
pop
push
roll
loope
jae
mov
pusha
jle
cmp
jp
sbb
sub
dec
or
addr16
into
or
jo
adc
in
dec
cltd
mov
adc
inc
mov
xor
add
pusha
or
ljmp
push
mov
adc
data16
mov
shrl
adc
ret
rorb
shl
popf
adc
test
pop
iret
add
mov
sub
lahf
add
and
cltd
sbb
mov
stos
int3
movsb
cmp
jne
mov
out
push
add
fmul
pop
or
int
lods
jmp
push
stc
sub
inc
test
jbe
cmp
mov
cli
add
bnd
push
out
popa
imul
aad
cs
in
imul
lret
aam
hlt
jo
enter
lea
test
pop
popf
add
out
jecxz
subb
cmp
pop
pop
xlat
and
mov
lcallw
lret
mov
jecxz
add
ss
inc
xchg
jle
sub
repnz
push
rcll
adc
sbbl
adc
gs
fsub
aam
push
xlat
fsubrp
lock
loopne
pop
sub
xchg
jge
mov
sbbb
xchg
push
dec
mov
fstpl
in
push
lds
add
out
into
out
or
ljmp
mov
pop
adc
in
dec
je
push
jp
rorb
iret
lods
cmp
cmc
leave
mov
pop
xchg
push
icebp
aad
mov
cmpsl
shll
int
sub
stos
aad
jg
in
mov
jns
testb
mov
into
add
test
xchg
ret
lods
mov
dec
push
push
cmpsl
imul
inc
out
leave
dec
push
out
sbb
test
nop
inc
jne
or
mov
rorl
mov
inc
mov
int3
js
imul
je
sbb
sub
ja
push
scas
add
ret
aad
mov
push
mov
sti
cmpsb
adc
fstpt
int3
xor
movsl
mov
push
and
loop
pop
cs
pop
ret
and
ss
popf
dec
xor
imul
jo
push
dec
rolb
push
pop
mov
iret
loopne
stc
fsubrs
std
jbe
and
fadds
repz
jae
and
pushf
arpl
repnz
aas
xchg
inc
orb
rcl
push
mov
sub
shlb
sub
adc
xchg
shrl
fdivrl
sub
xchg
leave
inc
call
pop
je
int
add
cmpsl
and
in
daa
aas
xchg
loope
push
or
fildl
cmp
xchg
mov
je
jae
gs
adc
fucompp
add
ret
ret
lods
or
adc
fistps
and
cmp
imul
mov
gs
shl
mov
mov
dec
and
iret
cmp
test
push
shl
movsb
sub
sahf
jg
repz
cmpsl
orl
insb
andb
xchg
int
and
ret
pop
jae
mov
mov
mov
pop
cmp
and
hlt
add
sub
cltd
out
gs
mov
mov
lods
pop
cmp
sarl
fldenv
push
mov
push
mov
xchg
movsb
dec
jae
lahf
in
iret
mov
mov
mov
or
int
sbb
xchg
bound
pushf
mov
outsl
inc
mov
xor
or
loope
ret
mov
cmp
push
pusha
imul
ret
and
std
js
push
daa
inc
aad
cmp
jmp
xchg
sbb
lods
cli
cmpsb
pusha
sbb
sub
pop
addl
mov
ss
lret
xor
xor
mov
lcall
pushf
mov
leave
mov
mov
sub
outsb
and
and
xchg
sbb
lahf
cmpsb
mov
ret
arpl
loop
scas
or
pop
stc
mov
xchg
fs
xchg
lcall
mov
out
pop
cmp
push
jle
insb
test
ror
dec
lods
mov
imul
les
cld
add
adc
push
jnp
xchg
mov
jle
fcmovnbe
fistpll
cld
mov
and
push
in
mov
push
dec
mov
insb
cwtl
jns
call
push
jbe
inc
inc
xor
xchg
lcall
je
mov
sub
aad
xchg
inc
push
jge
jp
pop
in
fimuls
adc
sbb
xor
lods
fst
stos
add
das
xchg
add
mov
inc
jns
fcmovu
mov
add
inc
cmp
mov
out
push
jb
lret
inc
ja
jnp
and
pop
insl
lea
into
jno
lret
jbe
hlt
ror
jge
push
out
test
push
sar
fidivl
mov
sbb
xchg
nop
lret
xchg
jbe
sbb
cmpsb
ja
fiaddl
iret
fs
aam
cli
mov
adc
push
aas
out
dec
or
adc
test
sbb
jno
or
or
push
lea
ljmp
popa
loopne
in
cld
push
and
icebp
clc
or
fwait
add
lds
test
push
aaa
xor
into
mov
es
ds
shlb
sar
sbbb
cmc
adc
je
sbb
mov
xchg
or
out
pop
daa
dec
xchg
mov
push
mov
test
sarl
sub
roll
dec
sub
mov
inc
push
cltd
orb
out
and
es
xchg
enter
mov
jl
mov
lahf
rorl
cmpsb
pop
jp
imul
mov
int
dec
mov
mov
vmovd
jge
adc
das
push
insl
insb
jns
dec
dec
cmp
xchg
jg
add
es
cmp
cmpsl
push
lret
js
jbe
or
adc
aas
push
sub
in
and
lods
loopne
test
add
inc
mov
mov
adc
dec
pop
jne
xchg
pop
mov
nop
mov
into
dec
or
orl
inc
in
inc
das
xchg
stc
insb
xchg
pop
xor
lods
dec
pop
into
aad
fdivrs
mov
adc
les
add
push
stos
sbb
mov
lock
push
clc
orb
lret
lcall
pop
rorl
cmp
int
insb
lret
push
pop
ret
mov
inc
loopne
or
lods
jp
add
mov
iret
nop
and
inc
pusha
pushf
ss
pop
out
mov
xchg
aaa
sbb
js
jne
pop
adc
pop
mov
pushf
scas
and
in
mov
mov
or
jns
jbe
out
inc
mov
scas
aas
inc
rcr
xor
enter
mov
push
jne
sbb
sar
lods
pop
mov
shrb
push
pop
ljmp
push
jbe
sub
mov
ja
pop
inc
or
sbb
jb
ljmp
arpl
or
dec
mov
scas
push
lahf
or
mov
out
out
test
add
or
jg
scas
jbe
push
out
pop
cmp
sbb
clc
lock
js
and
xchg
rorl
lcall
hlt
loop
nop
cwtl
mov
adc
add
idivl
bound
jno
sarb
jge
jo
popf
inc
mov
cwtl
mov
fbstp
cmp
je
lret
sub
push
loopne
aam
lret
inc
jge
push
push
xor
int
ss
insl
mov
jae
mull
push
cltd
jno
cmp
fidivl
subb
dec
sti
xor
call
xchg
cmc
aas
shlb
fs
jbe
sti
jb
int3
call
push
daa
xchg
mov
mov
int
incb
dec
jge
aam
inc
or
push
xchg
mov
jnp
fsubl
mov
mov
pushf
dec
imul
rclb
push
pop
loopne
add
hlt
mov
xchg
sbb
lds
into
out
ja
mov
adc
dec
dec
test
sub
imul
and
jne
add
rolb
out
int3
pusha
mov
icebp
pop
add
xor
ret
lahf
inc
aad
lret
fld
aaa
pop
push
into
jo
mov
or
aaa
adc
fiaddl
push
xor
xchg
mov
dec
xchg
mov
repnz
cmp
xchg
roll
jbe
and
jg
loope
rcl
hlt
jl
repnz
jmp
push
cld
push
les
push
and
dec
jp
loop
rcl
stos
call
mov
into
sub
lcall
xlat
and
fmul
sub
jno
pop
enter
and
test
pop
aaa
into
jge
cmp
test
clc
dec
rcrb
xchg
xor
imul
sbb
ja
pusha
push
ljmp
rcl
xchg
shll
aaa
in
xor
sti
adc
andl
hlt
mov
aaa
into
and
out
and
add
clc
data16
mov
orb
pop
into
mov
leave
push
nop
or
aad
add
out
and
ds
adc
xchg
fidivl
clc
addr16
imulb
jns
lods
push
call
mov
add
fcmovnbe
mov
push
shrl
cmovl
xor
lret
push
rcll
mov
jb
xchg
icebp
push
ret
add
mov
ljmp
cmp
andl
popa
xchg
int
int3
add
adc
mov
push
mov
shrb
rcr
movsl
in
test
jg
pushf
pop
push
dec
out
in
movb
icebp
aas
dec
dec
ljmp
xchg
outsb
pop
mov
mov
dec
or
ret
lret
mov
mov
shlb
fwait
ljmp
xor
and
subl
mov
jp
js
push
sub
pop
mov
adc
sbb
xchg
shl
mov
add
pop
iret
cli
dec
ds
mov
push
cltd
sbb
mov
inc
daa
insl
push
cmp
or
add
sbb
mov
enter
fwait
cmp
and
aam
fcmovnb
or
cmpsb
add
push
ljmp
mov
test
lock
out
imul
hlt
xchg
add
mov
and
ret
jbe
inc
cmp
cmpsb
xor
cmp
dec
sub
xor
aaa
or
jmp
loopne
xor
mov
decl
pop
dec
pop
int3
xchg
push
out
std
mov
dec
lret
out
aaa
or
xchg
jae
ds
pushf
inc
sarb
fs
les
daa
andl
or
test
jbe
std
stos
pop
xchg
push
xchg
lcall
stos
adc
ja
in
xlat
jp
mov
xor
cmp
jmp
pop
lods
dec
mov
cmp
pop
adc
sub
dec
sahf
repnz
adc
sbb
addr16
dec
push
mov
lret
mov
enter
push
push
xchg
dec
popf
cmpsl
lcall
sbb
and
push
imul
call
inc
daa
test
mov
out
xor
lods
push
out
mov
lret
cmp
icebp
and
inc
stos
push
xchg
test
xlat
fidivs
out
in
cmp
das
push
xchg
push
push
movsb
enter
fwait
jg
mov
sbb
es
mov
outsl
ljmp
lret
lahf
mov
je
add
cmp
stos
xchg
xlat
push
sbb
dec
sub
test
cmc
pop
int
outsw
sbb
xchg
xchg
sbb
rolb
hlt
cld
adc
lods
lods
dec
aas
push
fildll
xor
mov
out
mov
lret
xlat
inc
scas
sub
jg
pusha
mov
loope
cmp
iret
dec
stc
mov
bound
xor
sbb
call
push
lods
cmp
enter
inc
mov
push
in
pop
cmp
shlb
bound
dec
sti
popf
insl
push
fimuls
insb
push
jbe
xor
cltd
int3
xchg
int
mov
sbb
cmp
popl
nop
in
cmp
clc
adc
xor
xlat
xchg
repnz
sub
movsb
or
xor
push
inc
ret
out
xlat
gs
loop
sub
aad
js
xchg
sbb
rcll
mov
pop
xor
arpl
pop
jl
sbb
ret
in
nop
xchg
jne
lahf
mov
sub
out
inc
vpmuludq
insl
or
pop
pop
ret
ja
aad
nop
es
pop
aam
subb
sbb
xlat
int3
jp
stos
movsl
mov
ret
dec
leave
mov
les
cmpsb
insl
pop
dec
stc
xchg
lcall
jmp
out
xchg
or
mov
aaa
lret
sbb
repnz
mov
das
xchg
xor
not
int
xlat
ss
or
test
mov
insb
jecxz
mov
sti
pop
arpl
cltd
int
xor
pushf
sbb
into
lret
pop
mov
orb
and
lahf
cltd
ficomps
mov
sub
push
inc
xor
jle
mov
jo
stos
or
bound
lea
aam
scas
out
inc
shr
ficomps
idiv
int
jns
jbe
iret
sub
mov
testl
inc
xchg
push
or
sar
cwtl
pop
jno
pop
sub
pusha
insb
aaa
jae
xchg
inc
aam
sub
fsubl
fmuls
imul
jne
dec
cmp
sbb
les
or
mov
ja
jo
cmpsl
cmc
scas
lods
inc
inc
in
jno
ret
sti
inc
cwtl
ficompl
pop
iret
or
xchg
push
jg
fbld
aad
dec
add
imul
xor
lret
and
repz
dec
adc
inc
out
ret
mov
adc
loop
popf
jge
add
ja
rcl
imul
pop
movsb
add
aam
mov
mov
clc
popl
jl
movsl
push
inc
add
addr16
loope
mov
in
pushf
xchg
xor
repnz
mov
adc
in
bound
in
sti
jo
jle
mov
iret
push
stos
lods
pop
pop
mov
mov
push
pcmpgtd
push
xor
cld
and
loopne
cmp
dec
xchg
mov
and
aam
jns
in
leave
jae
ljmp
xor
push
adc
lret
xchg
js
fwait
and
cmp
fdiv
adc
mov
ds
cli
add
sub
mov
xchg
and
inc
pop
icebp
and
sub
mov
push
test
lods
es
adc
enter
arpl
xor
push
push
push
pushw
scas
in
push
inc
sub
movsl
out
dec
push
rcll
sahf
adc
xor
dec
mov
mov
ret
not
mov
daa
adc
xchg
gs
add
imul
jne
fdivl
jbe
or
adc
xchg
rcrb
out
push
adc
cmpsl
push
jno
sbb
stos
fs
js
leave
jo
loopne
int3
imul
xor
sahf
ja
cmpsl
out
xchg
jno
scas
pop
cli
in
jo
pop
add
out
xchg
cwtl
sub
add
dec
push
nop
imul
scas
mov
and
cmp
dec
psadbw
add
lahf
movsl
daa
push
mov
pop
xchg
sbb
popf
mov
pop
push
cmp
xchg
cwtl
push
and
xor
negl
lds
push
sub
imul
inc
sarb
arpl
int
fimull
fs
adc
pop
imul
xchg
int3
adc
clc
mov
orb
xor
cmp
adc
jecxz
fsubs
inc
xor
mov
pop
inc
orl
icebp
mov
fs
mov
lret
inc
cmp
sub
lea
xchg
sbb
mov
jmp
fisubl
imul
and
out
inc
xchg
sub
jl
fwait
sbb
push
inc
dec
jmp
call
and
loopne
test
dec
in
rolb
mov
popa
ficomps
push
mov
mov
das
repnz
out
lea
push
rcr
testb
jp
popa
shrb
pop
sbb
hlt
push
lret
testb
pop
push
cs
sbb
aam
out
mov
loop
jp
or
push
sbb
sub
jl
fcom
icebp
jns
sbbl
pop
xlat
into
mov
test
repz
sbb
mov
xchg
jl
adc
mov
arpl
inc
push
imul
sub
add
cltd
fnstcw
movsb
cmpsl
sub
fisttps
loopne
int
sub
mov
xor
add
inc
shll
mov
jno
icebp
mov
push
pop
addr16
ja
out
mov
test
popa
outsb
dec
cmp
movb
jae
mov
mov
dec
fstl
out
pop
jle
xor
push
and
mov
cltd
jecxz
mov
jo
xchg
push
repnz
ja
add
xlat
in
insb
cmp
mov
xchg
stc
mov
push
sbb
lcall
or
and
lcallw
mov
mov
fiaddl
push
clc
sbb
xor
fidivrs
jo
lret
or
adc
addr16
test
push
lea
dec
aam
mov
negl
mov
xlat
xchg
ja
xchg
aad
xchg
outsb
mov
and
int
movsb
in
adc
hlt
jbe
gs
fisubl
arpl
mov
bnd
add
inc
movsl
andl
movsb
push
xchg
out
adc
ss
mov
sahf
sbb
rorb
sub
xchg
add
in
dec
adc
enter
dec
cli
xchg
int3
rcl
xchg
xlat
mov
cmc
mov
repz
jne
cmp
dec
xor
mov
jle
dec
xchg
pop
cmp
pop
and
out
sub
rcrb
lret
add
mov
out
adc
pop
orl
xlat
packuswb
mov
rcr
adcl
cld
test
add
jp
sarb
pop
push
out
mov
or
and
ror
out
sarb
dec
and
push
jno
testl
xor
jg
cmp
mov
add
or
mov
lret
lret
jb
lcall
clc
sysexit
cmp
xchg
ret
pop
test
aad
mov
jns
mov
sub
jl
rcl
and
data16
xchg
movsl
dec
inc
ja
aad
mov
dec
mov
roll
add
inc
xchg
dec
push
mov
mov
fidivs
into
cmpsl
mov
adc
rcr
aas
mov
lcall
imul
ret
push
jnp
insb
leave
or
addb
std
pop
adc
out
mov
cmp
inc
sarb
in
cld
xchg
lret
xor
int3
and
std
inc
sahf
cmpl
fsts
lods
cmp
lods
fdiv
dec
add
loop
cmp
or
out
push
push
dec
mov
add
stos
in
xchg
ds
push
mov
ja
push
xchg
popf
mov
jno
mov
push
leave
push
test
movsb
cmp
pop
lahf
loop
repnz
cmp
jmp
repz
push
mov
mov
push
sub
sbb
dec
data16
pop
cmpsl
xchg
les
dec
fcmovnbe
nop
addr16
clc
lods
popf
subl
dec
mov
aaa
jb
cmp
insb
imul
sbb
pop
push
test
inc
ret
arpl
es
outsl
sub
xchg
and
out
dec
dec
cmc
push
pusha
push
push
in
mov
fisubl
test
fcom
and
je
mov
add
jbe
lahf
xchg
adc
nop
xchg
in
rorl
das
lods
pop
cmp
lods
mov
mov
mov
push
pop
outsl
xchg
subb
push
xchg
pop
pop
movsl
outsb
mov
push
test
adc
add
je
inc
mov
push
xchg
imul
stos
jge
ja
ficoms
rorl
fxtract
add
loopne
cltd
inc
dec
ds
jbe
push
decl
call
jmp
mov
ficomps
stos
sub
sub
es
mov
fs
cli
dec
stos
aam
sub
mov
filds
les
mov
push
shll
dec
mov
lret
pop
aaa
mov
xchg
out
sbb
lods
jnp
pushf
out
stos
outsl
dec
adc
sbb
aam
inc
mov
cli
outsl
push
xchg
out
push
test
add
mov
sbb
xor
shlb
fadds
or
mov
shrb
lock
shll
pop
xor
xchg
sbb
fsubrl
jns
aam
scas
cs
scas
dec
clc
jnp
pop
sub
pop
push
sarb
cmc
jge
xchg
jns
jbe
ret
sti
nop
pop
lock
mov
je
hlt
jmp
test
push
xchg
imul
fwait
inc
aas
ds
push
ret
xor
fcmovne
fldenv
or
jae
outsl
das
jbe
scas
out
icebp
call
mov
xor
in
and
repz
mov
mov
jp
test
es
push
inc
imul
lahf
aam
fmull
dec
mov
dec
frstor
repz
adc
mov
add
sbb
addr16
push
in
mov
test
mov
add
push
aad
int3
ja
mov
into
js
mov
clc
mov
mov
out
cwtl
jmp
pop
cmp
or
cmp
into
jnp
mov
hlt
arpl
ljmp
inc
cld
repnz
jg
imul
pop
out
stc
push
ss
ja
pushf
mov
iret
mov
es
jo
and
push
lods
mov
push
sbb
insl
ja
dec
movsl
cmp
push
or
mov
test
dec
sbb
inc
inc
lods
lock
xchg
insb
pop
arpl
jp
pop
into
aaa
jmp
int
push
pop
sahf
push
xor
mov
aad
repz
and
push
ficomps
sahf
xchg
sbb
mov
pop
in
nop
inc
ror
pop
aas
jbe
push
test
add
push
mov
lahf
pusha
daa
pop
int
jecxz
or
pop
sub
push
fcomi
jne
cmp
push
sub
pop
or
xlat
dec
ret
xchg
lahf
pop
xchg
call
inc
fsubs
jge
fidivrs
push
addr16
hlt
into
sub
cmp
arpl
sub
cmp
mov
inc
ret
sahf
pop
sbb
mov
xchg
imul
das
xchg
sub
pop
fsubrl
in
add
in
xchg
push
xor
sbb
popa
arpl
mov
and
stc
inc
out
xor
lods
add
mov
mov
xor
pop
in
in
jae
xlat
imul
ficomps
pop
jl
jmp
lahf
xor
xlat
xor
push
dec
or
adc
dec
pop
into
arpl
mov
pop
ja
xlat
mov
pop
jge
inc
mov
adc
sbb
push
pop
inc
insl
rcrb
stc
filds
fwait
pop
out
data16
push
mov
enter
imul
xchg
pop
bound
in
mov
test
loopne
xchg
inc
inc
cwtl
mov
and
outsl
out
xor
jb
scas
pop
lahf
xor
and
push
sub
lock
dec
or
in
cmc
adc
xchg
ja
dec
int3
adc
fstl
or
mov
lret
lods
rolb
outsl
out
adc
adc
incl
adc
jns
mov
mov
mov
bound
cmp
mov
rorb
lcall
xor
xchg
adc
cli
xchg
mov
es
lret
or
dec
xchg
dec
push
sbb
sbb
sub
sbb
xor
fidivrl
dec
rorb
pop
cld
out
test
xchg
and
addr16
mov
dec
push
ja
xchg
out
aas
pop
add
aad
sub
lret
cmp
dec
rcll
and
les
in
mov
hlt
mov
mov
cmp
daa
adc
aas
adc
xchg
fnstsw
ror
dec
push
jno
dec
pop
mov
enter
movsb
push
push
xchg
mov
mov
ja
iret
pop
movsl
shl
out
adcl
inc
movsb
xchg
sbb
xlat
ljmp
mov
inc
iret
push
mov
sbb
stos
fistl
xchg
push
xchg
fcompl
dec
add
mov
aam
lret
jg
sbb
sti
sbb
sarb
lahf
lea
sub
jmp
sti
gs
aaa
adc
mov
cmpsb
dec
inc
jg
sub
repnz
cld
out
push
cwtl
insb
pop
xchg
insl
push
stos
pop
sar
mov
fdivrs
shl
fcoml
daa
dec
mov
adc
in
stos
fnstsw
xchg
aad
mov
xlat
xchg
pop
sub
pop
int3
cmp
dec
fsub
loope
fnstcw
and
push
sub
into
add
pop
xor
inc
lock
jecxz
rcr
jge
mov
enter
in
mov
add
mov
cmp
lds
push
xchg
lcall
or
aam
mov
xchg
jbe
mov
or
cli
test
adc
test
es
inc
mov
push
adc
ja
or
lcall
push
lods
rclb
mov
and
cmp
mov
mov
subl
iret
inc
dec
std
cltd
adc
xchg
sub
in
movsl
sbbb
dec
or
xchg
mov
stos
jp
fst
pop
shl
pop
push
outsl
ss
xor
aam
adc
jg
mov
dec
rcll
mov
jp
shr
mov
shrb
mov
decb
hlt
xchg
cmp
sbb
mov
xchg
inc
sbb
movsb
xor
jg
sub
add
push
adc
aaa
dec
ror
xchg
test
je
daa
imul
cmp
inc
rcrl
in
test
repz
insb
lret
dec
shl
pop
jl
xor
and
sub
mov
leave
not
adc
sbb
mov
mov
lret
adc
xchg
xchg
xor
cmp
popf
pop
mov
mov
xchg
ljmp
dec
out
out
dec
outsl
xchg
lret
testb
add
fdivrl
movsl
loope
xchg
mov
jecxz
or
push
push
pop
adc
push
int
jmp
fiadds
pushfw
int3
xchg
mov
cs
jp
or
sub
add
jnp
mov
inc
into
add
cmp
xchg
enter
hlt
or
out
inc
mov
leave
arpl
or
nop
mov
ja
scas
outsl
mov
mov
pop
sarb
xchg
and
js
mov
or
loop
cmpsb
cmp
mov
dec
and
mov
add
adc
and
frstor
fxch
xchg
push
aaa
or
jbe
pop
push
ror
fwait
mull
sbb
xor
jne
rolb
roll
pop
ret
or
loop
and
fadds
sti
sub
add
xchg
mov
into
sarl
int
insb
stc
push
jge
sbb
push
or
jp
or
and
ljmp
outsb
imul
jne
ljmp
sub
imul
out
push
div
or
pop
add
jne
mov
gs
filds
jge
popa
scas
lret
mov
das
dec
dec
int3
or
gs
scas
pushl
sub
les
add
call
fidivrl
mov
xor
incb
arpl
pop
je
leave
xchg
pop
cmp
aaa
test
loop
mov
sub
xor
mov
mov
xchg
push
dec
or
xchg
xor
cli
shll
xchg
add
sbbb
push
cmp
and
push
cmc
or
pusha
out
addr16
mov
out
cmp
gs
repz
xchg
xor
mov
mov
add
jnp
ja
aas
cs
shrb
cmpsl
test
pop
js
and
push
bnd
call
adc
adc
and
fwait
stos
ret
movsl
idivb
lret
shll
mov
add
test
insl
mov
lret
fistpl
xchg
mov
nop
adc
sahf
or
outsb
les
loope
inc
dec
xchg
and
outsb
and
push
lret
rcrl
test
xchg
cmpsb
out
adc
and
leave
ret
xor
lods
cld
in
jle
or
fstpl
data16
push
jo
jmp
cs
mov
aad
fisubrs
repnz
in
push
test
xchg
adc
sub
xor
sti
jmp
add
clc
pop
mov
xor
jae
dec
stos
out
push
stc
sbb
cmp
and
aas
ljmp
divb
int
push
fwait
sbb
mov
mov
dec
xor
icebp
pop
fs
dec
mov
mov
lods
inc
or
lahf
mov
sbb
jmp
xchg
idivb
add
mov
pop
inc
lods
jae
std
xchg
icebp
jecxz
sbb
mov
jae
sbb
inc
pop
ljmp
inc
repnz
mov
out
push
lods
out
sti
stos
movsl
adc
in
fstpt
dec
or
jb
pop
outsl
ret
fcmovb
inc
shlb
xor
std
mov
mov
or
fcmovb
ljmp
jnp
jno
dec
inc
sti
sbb
push
fs
push
dec
cli
pcmpeqw
out
jnp
test
orl
lods
pop
ljmp
fisubrl
out
call
sub
add
mov
out
ffreep
jp
cwtl
mov
sbb
mov
pop
and
jecxz
lods
ja
inc
cmp
mov
xchg
sub
lret
push
add
cmc
aaa
in
adc
and
test
push
jge
push
cmp
mov
cmpl
mov
cmp
insl
test
das
test
xor
xchg
inc
lods
fsubrs
mov
sbb
sub
rclb
push
jnp
add
daa
adc
mov
cwtl
fs
sarl
sub
inc
or
jbe
insb
stos
inc
into
push
cmp
add
push
mov
or
sub
rcrb
mov
sbb
leave
pushf
out
or
mov
or
lcall
cmp
int3
test
pop
out
jo
xchg
jnp
xor
sbbl
jp
lahf
ficompl
xlat
mov
mov
ljmp
ss
je
imull
nop
pusha
sub
xchg
dec
imul
iret
push
xchg
aam
jg
fsubrl
daa
mov
mov
lock
xchg
sbb
subb
mov
out
xchg
mov
stos
mov
mov
mov
and
mov
pop
call
pusha
add
stc
pop
mov
xchg
mov
roll
call
adc
jae
or
push
push
sbb
cld
sub
popa
pop
inc
movsl
jbe
push
cs
xchg
sub
pop
in
cmp
ss
ja
pop
xchg
dec
in
cmp
js
push
lret
aaa
fcoml
xchg
jns
mov
pop
inc
or
push
and
shr
push
imul
mov
xor
cmpsl
push
xabort
cltd
in
inc
int3
pop
lea
xor
aad
aaa
into
xor
add
les
dec
repz
xchg
decb
stos
push
inc
push
js
add
mov
out
mov
xchg
or
lret
stos
imull
add
mov
sub
and
mov
das
sahf
pop
iret
repnz
fsubrs
mov
pop
or
inc
insl
fbstp
and
add
lret
push
shrl
add
insb
xchg
and
mov
cmp
bound
sbb
xchg
in
lret
and
push
sbbb
push
stc
fnstenv
lret
mov
mov
jnp
push
jo
mov
das
lret
or
dec
in
into
push
repz
xchg
gs
add
test
jmp
out
das
adc
jle
xorl
xchg
xorl
fsubs
mov
dec
sti
push
lcall
dec
stos
add
push
push
push
mov
inc
out
lahf
xor
fstl
sbb
mov
pop
mov
clc
frndint
enter
ds
cmc
out
mov
or
call
test
mov
leave
sahf
test
mov
sbb
movsl
add
mov
mov
jae
mov
subb
sbb
lds
test
push
les
scas
push
sub
data16
or
pop
fidivrl
and
inc
mov
mov
cmpsb
pop
or
mov
pushf
cmpsl
movl
adc
adc
dec
xchg
lods
and
cwtl
pop
rclb
mov
dec
xlat
push
out
adc
int3
fmul
orb
jecxz
repz
addr16
mov
and
lret
jnp
cmp
loope
test
mov
push
ret
add
xchg
out
pop
call
jp
and
aad
cli
outsb
pop
ficoms
push
lods
cmpsl
and
push
xchg
xor
inc
test
addl
dec
jge
aaa
push
ljmp
inc
rclb
inc
or
adc
leave
push
popa
mov
shll
xor
xor
test
rorb
push
push
leave
or
or
xchg
mov
adc
test
and
imul
cmc
mov
aaa
mov
das
popa
insl
sbb
shrb
ficomps
lret
popf
aaa
cltd
nop
jl
movsl
jnp
xor
cld
mov
sub
stos
lea
mov
xchg
add
into
dec
int
mov
ja
test
out
or
js
adc
sahf
scas
fwait
inc
int3
jo
push
les
push
xchg
ja
sub
in
rcrl
int
push
xchg
dec
insl
pop
pop
clc
push
fs
jmp
test
and
mov
scas
sub
pop
push
out
and
dec
and
cmp
fistpll
adc
hlt
cmp
cld
cmpsb
mov
inc
mov
cmp
xchg
ret
loopne
ljmp
jge
pop
arpl
pop
mov
fwait
jnp
mov
insl
sbb
mov
mov
fiadds
aam
mov
imul
lods
mov
mov
shlb
lret
rolb
or
xor
in
test
movsb
inc
push
test
cmp
in
lds
cmp
sbb
lods
and
pop
popa
xor
ja
fucomip
mov
and
dec
sti
sahf
xchg
push
adc
adc
test
inc
inc
xchg
mov
push
outsl
test
mov
mov
xchg
addr16
jg
addl
lcall
aam
adc
lods
inc
or
push
xor
out
xor
xor
aam
pusha
xchg
addr16
inc
mov
pop
or
enter
imul
scas
sbb
inc
mov
in
jae
cmpxchg
out
sbb
les
adc
xlat
add
cmpsb
and
jae
addr16
dec
dec
mov
pop
xchg
jno
mov
fidivrs
jp
repnz
aad
and
add
cmp
mov
inc
outsb
mov
jmp
add
mov
mov
xchg
das
sub
mov
push
xchg
xchg
mov
cltd
shll
scas
lcall
mov
js
je
nop
movsb
iret
in
stos
adc
shll
setae
dec
pop
mov
and
fsub
and
pushf
add
adc
pop
dec
pop
mov
shlb
out
lock
and
pop
pusha
push
imul
jl
leave
hlt
lods
int
push
out
into
pop
or
cmp
push
jb
dec
stos
cmpsl
or
jo
add
mov
sbb
cmp
adc
add
push
cld
ret
arpl
jns
cmp
mov
inc
mov
sbb
push
mov
adc
enter
addr16
mov
scas
fdivp
jmp
mov
jmp
push
enter
pop
add
jmp
jnp
sti
imul
fmull
push
and
outsb
xchg
jae
test
into
sbb
dec
repnz
push
push
push
and
into
add
fmull
mov
pushf
fdivs
xchg
mov
dec
and
out
dec
inc
cltd
imul
xchg
stos
hlt
dec
dec
shll
data16
cmpsl
out
mov
sbb
scas
outsl
push
int3
lods
sub
sbb
lock
adc
call
jmp
mov
xor
jecxz
jns
sub
xor
xor
inc
mov
xchg
push
pop
das
xchg
add
mov
cwtl
pop
jge
xchg
mov
test
call
out
adc
mov
loope
aad
loop
push
or
es
in
imul
cmc
or
call
jecxz
jmp
outsb
push
xor
mov
scas
xchg
rol
xchg
popf
add
dec
add
in
mov
fmulp
jecxz
outsb
out
sti
sub
mov
sahf
mov
lret
cld
out
scas
stos
sub
in
or
add
mov
rorb
cwtl
aam
jne
insl
mov
addb
mov
sarl
movsl
dec
and
pop
jne
mov
imul
xor
mov
and
out
test
cwtl
lcall
imul
out
leave
in
sbb
jg
pushf
xor
lret
mov
xchg
push
aas
je
fistl
lret
jg
sahf
lods
ret
lods
pop
out
daa
add
fistl
add
inc
and
insl
sti
loopne,pt
lods
int3
push
push
pop
push
repnz
fcmovne
hlt
out
add
push
jge
out
dec
rolb
dec
cld
dec
jecxz
ret
fwait
or
test
xchg
sbb
jns
rcrb
mov
pop
mov
push
sub
into
or
lods
cmpsb
push
loop
enter
cltd
mov
jmp
bound
mov
or
out
js
repz
mov
mov
adc
xor
sbb
add
lock
ljmp
xor
mov
sub
push
mov
pop
pop
or
hlt
sete
dec
rcl
outsl
and
je
jne
addr16
jg
in
scas
cmp
inc
mov
stc
in
dec
push
dec
mov
push
inc
into
mov
adc
lods
or
call
notb
fs
mov
cmp
and
push
vmovq
and
in
rolb
and
dec
jb
mov
test
dec
dec
lahf
push
cmp
xor
into
stos
and
sbb
inc
es
cmp
jbe
mov
popa
dec
sub
mov
out
in
xchg
mov
icebp
aam
dec
xor
test
jae
andb
cli
push
jg
push
cld
sbb
aad
mov
dec
adc
outsl
dec
aam
imul
popa
add
mov
pop
xchg
test
lds
scas
xor
ds
icebp
aam
cmpsb
mov
aas
pop
xor
loopne
ljmp
rcl
lock
jo
mov
jg
jae
loope
adc
jns
sahf
mov
out
mov
pop
lea
and
repz
icebp
test
pop
fbld
loopne
cltd
jg
dec
inc
popf
pop
xchg
test
cmc
fstl
popa
inc
jo
lret
cmp
aam
out
jae
std
out
mov
xchg
or
enter
add
jge
push
sbb
jmp
lds
dec
cmp
aam
inc
dec
pop
imul
or
int
sub
mov
stos
pop
loope
rcrl
sti
add
pusha
adc
ljmp
or
sbb
and
lret
ret
in
mov
popa
js
jbe
movsl
or
ja
fildl
cwtl
lock
and
and
aaa
push
movsb
inc
or
inc
xchg
pop
stos
push
out
outsb
fwait
jbe
push
sub
in
addr16
lods
lret
rcrl
mov
sub
sub
push
xchg
imul
das
fldl2e
xlat
scas
jae
out
nop
jb
mov
mov
mov
adc
adcb
cmp
jns
js
jae
stos
stos
cltd
or
lcall
sahf
cmp
mov
mov
lret
mov
pop
movsb
mov
mov
or
mov
fs
push
pop
dec
jecxz
test
icebp
push
pop
dec
push
idivl
js
jmp
adc
lods
sbb
jnp
sti
mov
dec
mov
cwtl
pushf
add
dec
push
jb
ficomps
mov
imul
ljmp
xor
pop
fisttps
xchg
test
ss
clc
ds
test
dec
sub
pop
or
xchg
add
sbb
mov
imul
jecxz
out
inc
cmpsl
pop
mov
js
jge
cmp
repnz
xor
jmp
cltd
sub
pop
push
clc
xchg
cwtl
pop
loop
pop
daa
push
mov
xor
mov
inc
push
push
fcmovu
leave
add
dec
dec
mov
xchg
inc
cmp
and
xor
adc
add
and
loope
push
movsl
mov
inc
sub
mov
stos
cmc
jo
sbb
sarl
push
dec
dec
jmp
mov
pop
mov
repnz
pop
add
dec
jge
inc
lods
movsb
ret
gs
cmp
cmp
imul
cmp
xchg
lods
lret
cli
aas
iret
push
and
inc
and
dec
ficoms
mov
sbb
dec
jns
and
jbe
daa
dec
cmp
cmp
out
fwait
lods
inc
cmp
test
test
and
push
xchg
inc
ficompl
scas
in
mov
cli
leave
mov
add
jbe
pop
ret
loop
and
push
pushf
dec
dec
push
repz
in
fwait
ret
daa
andl
or
mov
pop
dec
sbb
jbe
dec
sbb
mov
stos
lret
pop
xchg
add
dec
pop
push
rcl
aam
mov
addr16
jo
mov
mov
fs
pop
lock
mov
rcll
into
push
dec
pop
out
frstor
imul
push
shlb
and
mov
mov
jne
cmpsl
cmp
dec
xchg
in
call
sub
not
adc
adc
lcall
pop
int
out
fidivrs
stos
jp
inc
pop
mov
mov
add
call
push
cmc
dec
sbb
add
lods
insl
mov
xor
inc
mulb
push
mov
outsb
xchg
cmp
daa
cwtl
stos
arpl
scas
js
fiaddl
pop
and
stc
push
ds
leave
pop
and
jbe
lea
jae
xchg
insb
sub
jge
lods
outsl
repnz
ror
shrb
nop
mov
push
lea
out
mulb
jl
push
call
mov
arpl
in
stc
sbb
jl
data16
adc
xor
xchg
clc
and
pop
adc
enter
fmulp
xchg
add
fwait
scas
inc
bound
pop
xchg
insb
pushf
mov
cmp
cmp
lock
clc
test
arpl
push
cmp
mov
jnp
xchg
mov
dec
push
into
xor
aam
pusha
push
and
xor
shll
pop
in
out
jne
pop
enter
scas
sub
out
cwtl
and
push
cmp
sbb
lods
stos
pop
sar
mov
sub
sarb
or
jg
mov
mov
mov
stc
outsl
sbb
jge
sbb
fadds
adc
loopne
adc
mov
fld
xlat
xor
sbb
mov
mov
das
and
out
dec
ds
popa
fwait
inc
pop
arpl
pusha
pop
loope
mov
je
xchg
lret
shr
mov
outsb
ret
mov
lret
inc
mov
cmp
fcmovbe
daa
mov
into
stc
and
pusha
mov
sti
add
and
out
xchg
add
das
inc
mov
int3
addr16
insl
shll
into
xchg
clc
lret
mov
lods
pop
xchg
testl
gs
sar
push
lds
cmp
cltd
fwait
out
push
in
add
fnsave
mov
pop
xchg
data16
call
int3
int3
or
je
ds
out
and
loop
push
dec
adc
sbb
push
arpl
ret
aas
xchg
jmp
rcl
fisubs
adcb
mov
pop
and
in
mov
ffreep
inc
into
iret
mov
lea
in
pop
xor
in
or
daa
lcall
xchg
sub
stc
fsubs
jg
jns
push
inc
jecxz
js
pushf
cmp
stos
mov
inc
sbb
adc
shll
outsb
dec
mov
js
lcall
push
into
jae
lret
sbb
movb
insb
sbb
dec
or
aam
push
add
xchg
movb
and
push
add
sarb
lds
idivb
xchg
leave
roll
inc
loop
mov
xchg
das
push
lods
in
sub
mov
popa
incl
lret
rcr
push
sub
mov
lcall
data16
ljmp
inc
loopne
stos
sbbl
push
inc
add
jg
cltd
out
cmpsb
std
mov
inc
inc
jmp
push
or
dec
pop
sub
js
mov
add
mov
or
jns
xchg
mov
roll
repnz
test
or
sub
adc
push
and
sarl
arpl
inc
je
mov
out
sahf
cld
mov
loope
loop
sub
addr16
mov
pushf
icebp
mov
mov
leave
sub
push
fneni(8087
mov
mov
mov
les
repnz
xor
pushf
jns
jbe
adc
lret
mov
fcmovbe
dec
cmpsb
sub
nop
jae
mov
add
mov
test
insl
aas
fsubrs
adc
push
popa
aad
jmp
dec
imul
shll
ds
sbb
push
sti
push
lret
inc
cli
xor
jb
fstps
push
add
xor
imul
push
jmp
add
notl
inc
stos
std
ljmp
or
rorb
dec
jmp
sbb
push
pusha
add
shll
call
inc
cmp
scas
mov
movsl
sahf
xor
or
cmp
jo
or
xor
mov
jne
out
mov
sbb
push
es
pop
add
adc
cmp
loopne
mov
jno
call
xchg
add
mov
mov
out
popf
mov
or
hlt
sarb
test
nop
dec
insl
inc
in
repz
dec
icebp
push
push
jns
jl
jnp
scas
fadd
cmpsw
je
xchg
mov
mov
repnz
in
xor
push
loope
fwait
hlt
in
andb
or
cmp
sbb
cmp
sbb
and
loop
mov
jo
clc
push
cmp
cmpsb
iret
mov
jns
or
sbb
mov
sets
dec
sub
fists
cmp
jp
insl
ror
aad
imul
clc
movsb
jnp
mov
shll
sarb
push
sahf
flds
daa
xor
dec
push
das
cmpsl
and
sbb
add
fwait
sub
je
mov
push
clc
in
jecxz
test
into
xor
mov
jne
es
mov
dec
mov
mov
lret
sbb
xchg
scas
fldenv
pop
stos
movb
adc
adc
and
add
lods
aad
iret
cmp
fwait
repz
or
jg
cmpsl
push
xor
movsb
insl
and
xchg
inc
addr16
or
popf
xchg
xor
mov
fwait
and
cmp
inc
jne
cs
dec
fdivp
sbb
push
addr16
data16
btr
adc
fisubl
mov
push
test
pop
fnclex
test
mov
jne
adc
mov
out
xchg
popf
lea
xchg
inc
stos
mov
push
bound
pop
not
ds
fwait
gs
arpl
es
add
insb
dec
lds
xchg
push
fistl
rorl
push
xor
hlt
xor
xorps
cmpsl
leave
into
out
and
lret
inc
push
or
sub
stos
push
loope
test
ret
in
in
gs
or
mov
cld
mov
stos
stos
fcmovbe
loope
inc
push
push
repnz
and
hlt
ret
sbb
jecxz
jmp
pop
push
into
in
xchg
setp
ljmp
push
or
pop
mov
mov
div
pop
cmp
cmp
sbb
add
jo
lds
pop
mov
cmc
es
daa
mov
push
add
sbb
xor
icebp
mov
push
xor
imul
mov
jp
xchg
inc
mov
nop
xchg
xchg
cmpsl
adc
add
cmp
test
mov
outsl
aaa
outsb
sbb
aad
inc
shrl
daa
mov
out
pop
nop
xchg
sub
pop
mov
push
sub
adc
mov
or
sub
adc
adc
ffree
xor
xor
pushf
daa
jmp
lock
cltd
xchg
into
or
loopne
xchg
out
lea
sub
xchg
ror
dec
incl
stos
or
push
mov
ljmp
pop
xor
jno
out
xlat
nop
jbe
into
push
or
outsl
and
fwait
movl
xchg
or
pop
scas
sbbl
ljmp
pushf
test
shlb
inc
add
ss
and
xorb
aam
repz
jbe
push
xor
gs
addb
jmp
scas
fisttpl
lcall
sbbl
sbb
cmp
add
out
pop
or
pop
fcoms
mov
rolb
fs
xchg
aad
lret
or
adc
jle
xor
hlt
icebp
sub
int
enter
push
cmp
movsb
mov
ds
in
inc
cli
sahf
das
and
jp
fisttpll
push
ror
fcmovnbe
sbb
pop
aam
out
mov
test
lcall
icebp
or
sbb
sahf
xchg
mov
jns
or
pop
cwtl
test
xor
into
stc
ljmp
lahf
sub
ficoml
add
or
insl
mul
sbb
and
movsb
cwtl
sbb
adc
inc
add
dec
aam
push
jo
xchg
adc
add
adc
stc
lret
lods
imul
fxch
lahf
sub
pop
push
popf
fwait
jb
sub
inc
push
mov
aam
clc
stc
test
popa
into
sub
orb
and
popf
inc
stc
scas
jp
mov
sbb
add
int
inc
into
and
call
cmp
lret
jbe
outsb
sbb
aam
pop
adc
lods
mov
sti
sbb
das
loopne
addb
xchg
and
push
cmc
jl
insl
add
add
mov
xor
test
leave
inc
in
jle
sub
push
pop
pop
imul
insl
lea
sbb
lods
addr16
fninit
aad
pop
xlat
scas
xchg
in
adc
add
inc
adc
leave
mov
nop
mov
dec
mov
cld
das
xor
mov
lock
lret
imul
jne
push
movsb
sbb
notl
aaa
jmp
mov
add
mov
push
stos
loope
aam
xor
pushf
outsb
int3
dec
jle
rcl
fildll
dec
test
repz
inc
push
mov
jmp
push
mov
test
xchg
sbb
das
gs
std
mov
push
popa
cmpsb
xchg
xlat
push
mov
mov
xchg
cld
fldenv
fildll
movsl
add
dec
jl
xor
and
jbe
sti
cmp
xchg
aaa
dec
inc
jmp
push
push
cmc
data16
dec
and
xorl
loope
cmpsl
scas
push
fiadds
adc
pop
lods
aam
dec
add
inc
sub
mov
iret
dec
popf
fcoms
icebp
xchg
inc
xor
test
bnd
clc
xor
lret
cmp
pop
out
and
or
add
rcrl
cld
insl
mov
int3
inc
dec
add
jecxz
cltd
add
jno
movsl
idivb
fs
ficoml
out
das
out
push
roll
mov
lcall
push
mov
mov
push
sub
into
dec
add
pop
or
call
lret
lea
test
lods
xchg
cmp
orw
xor
or
pop
sahf
jo
repz
ret
arpl
jl
out
inc
xchg
js
in
rcrl
int
repz
jp
jo
insb
xchg
push
xor
fcmovbe
mov
orb
jecxz
or
mov
int
mov
mov
addr16
dec
pop
dec
fcmovu
add
test
cli
insl
xor
mov
inc
xor
lret
hlt
or
sbb
jl
sbb
sbb
mov
ret
push
jge
jmp
das
pop
mov
shl
test
jg
hlt
ficoml
adc
fimuls
mov
in
xor
sbb
xor
push
std
fildll
lods
rcrb
popa
inc
push
pop
inc
imulb
rcrb
jmp
jmp
in
lods
sub
pop
negb
pop
bound
adc
jbe
gs
daa
push
loop
jne
insl
add
and
rol
dec
xor
sub
out
jmp
repnz
push
inc
push
xchg
jge
out
mov
and
icebp
cltd
dec
cmp
xchg
jbe
in
outsl
xchg
test
ljmp
cmp
das
adc
lock
xchg
call
pop
add
out
js
jbe
add
adc
mov
pop
jbe
dec
xchg
jmp
and
mov
jbe
mov
jb
or
je
les
jne
jp
xor
movsl
es
and
sub
dec
lret
mov
inc
mov
stos
sub
nop
pop
enter
xchg
inc
clc
fdivl
lret
test
jl
or
ret
inc
add
aam
xchg
jecxz
out
push
jne
fadd
and
mov
addb
lock
pop
push
xchg
mov
mov
repnz
mov
std
stos
jge
and
es
push
popl
ret
decl
sti
out
push
dec
mov
xchg
adc
out
inc
repz
loopne
ficompl
inc
data16
mov
or
out
in
push
jbe
cmp
mov
lea
movb
dec
push
pop
jo
daa
cmp
int3
push
jbe
jmp
mov
dec
clc
xchg
test
add
push
lock
lret
rorl
ret
movsb
gs
mov
pushf
sub
mov
shl
push
mov
sbb
shll
clc
lcall
repz
add
mov
jl
push
pop
xchg
and
fsubs
mov
out
sub
les
test
fadd
push
call
aas
icebp
inc
xchg
dec
pop
out
hlt
mov
popf
mov
dec
daa
pop
ss
shlb
clc
jne
mov
ja
jle
jmp
aaa
sbb
lret
jp
cmp
arpl
adc
xor
push
jbe
lock
or
frstor
dec
subb
hlt
dec
adc
scas
dec
add
repnz
cmp
push
jne
mov
test
cmp
jne
xor
ret
mov
lret
ja
sub
lea
jge
outsl
jp
xchg
mov
clc
and
inc
ja
sub
mov
and
jp
leave
insl
outsl
or
xlat
popa
adc
push
sahf
shlb
shrl
sbb
jno
mov
cmpsl
or
push
sbb
add
in
push
xor
arpl
das
lret
inc
stc
mov
pop
lcall
adc
fcmovbe
insl
dec
call
adc
loopne
mov
mov
inc
and
dec
jnp
add
clc
arpl
rcr
xchg
mov
sbb
fdivl
cmpsl
pop
jo
xchg
push
or
and
cmp
imul
cli
jmp
jns
out
lret
arpl
subb
sbb
mov
ss
aam
xor
push
sbb
mov
push
div
inc
fisttpl
jmp
test
ja
in
imul
jbe
call
ljmp
popa
or
push
pop
clc
jp
push
aas
in
repnz
mov
in
das
cs
sbb
adc
mov
jl
outsl
push
mov
data16
pop
sub
sbb
sahf
push
adc
xchg
idivl
cmp
call
sub
dec
jecxz
std
push
cmpsb
fs
lock
push
aas
dec
xor
push
cmp
lcall
add
add
adc
xchg
lds
xchg
mov
cltd
xchg
aaa
loopne
mov
fsubrs
jp
add
iret
pop
dec
dec
dec
imul
sub
movsb
je
jle
dec
ja
add
dec
out
xchg
sbb
or
mov
xchg
imul
or
dec
std
test
or
ret
cmp
int3
loope
sub
jp
or
pop
cld
jge
inc
testb
inc
mov
mov
in
mov
loope
lahf
sub
cmpsb
xor
jle
int
fcoml
mov
lret
scas
pop
add
push
lret
in
push
dec
fidivrs
test
not
ret
sub
push
fs
movsb
mov
adc
test
inc
lahf
mov
dec
int
pop
inc
test
in
jmp
xor
xchg
out
test
mov
ljmp
clc
adc
xchg
fst
mov
stos
jle
sub
or
xchg
cs
xor
js
fwait
mov
aad
xor
adc
mov
mov
push
jmp
xlat
xor
sbb
push
mov
iret
mov
imul
push
and
mov
das
or
jbe
lret
push
jb
mov
xchg
rolb
into
fidivs
divb
and
mov
fs
cmovp
xchg
repnz
andl
push
insb
mov
out
dec
loopne
stos
xchg
mov
rcrb
data16
into
jne
mov
add
xchg
mov
or
mov
inc
xor
mov
jae
sti
scas
nop
dec
test
jbe
and
push
int
adc
push
xor
js
movsl
mov
push
stc
inc
es
cli
nop
mov
es
stos
or
or
cmp
aaa
or
iret
fdiv
sub
loope
call
jb
lahf
or
sub
ljmp
mov
mov
cli
jmp
negb
sbb
push
gs
or
sub
js
rcl
outsl
shll
aaa
sbb
cltd
adc
jnp
rcl
jecxz
loopne
dec
cwtl
lds
xchg
sbb
lock
lcall
hlt
push
sbb
inc
jge
inc
and
shll
adc
push
adc
dec
add
add
in
xlat
mov
pop
adc
push
fsts
sbb
xchg
in
fistpll
lret
insb
into
mov
inc
push
dec
and
xchg
sbb
mov
mov
popa
in
dec
xchg
or
jno
pop
popf
clc
aas
inc
repnz
xchg
mov
push
jae
push
mov
xor
dec
leave
inc
int
js
iret
ja
pop
aas
xchg
cwtl
sahf
dec
rclb
fcomps
and
std
pop
pop
mov
adc
cmp
sbb
inc
mov
mov
mov
test
mov
mov
or
in
test
bound
add
in
outsl
xchg
insb
mov
mov
fildl
aam
mov
inc
jnp
inc
adc
add
lds
cltd
cmp
aam
stc
adc
jmp
push
add
jb
hlt
loop
xchg
pop
sub
das
mov
mov
mov
imul
pop
sub
push
push
decl
mov
ds
jmp
nop
sahf
icebp
out
adc
pop
and
push
std
jmp
scas
and
push
pushf
push
jecxz
nop
xor
jbe
ror
shlb
and
lret
jns
imulb
lahf
popa
aas
add
sbb
mov
sbb
jne
push
les
mov
rorl
adc
push
shl
in
aas
das
sub
and
popa
sub
stos
data16
inc
enter
cmp
pop
mov
dec
out
lea
aas
mov
iret
loope
xor
hlt
and
jno
mov
inc
push
cltd
cmp
mov
sti
imul
and
jnp
aaa
inc
mov
or
cli
dec
cmp
imul
or
xor
out
dec
cld
rcl
fisubl
pop
fwait
or
pop
fldcw
xor
je
fwait
jg
les
xchg
out
das
ret
repz
adc
fdivr
push
sti
mov
adc
xchg
xor
dec
out
push
pushf
sbb
lret
mov
push
out
or
push
pop
mov
add
push
int3
loope
cmpsl
dec
xchg
sub
mov
in
jne
pop
loope
lods
popf
mov
inc
inc
fwait
xor
mov
mov
popf
mov
mov
mov
call
in
pop
gs
push
sub
push
mov
mov
hlt
mov
sahf
fwait
sub
aas
aaa
fidivrs
pop
movsb
movsl
sub
sti
mov
hlt
dec
inc
dec
scas
xlat
jge
push
ja
or
push
into
push
xor
xchg
outsb
and
push
sub
ret
add
mov
mov
adc
adc
jl
jno
sub
cwtl
fisubs
fadds
fwait
inc
xor
lcall
cli
dec
pop
stos
addr16
or
not
jecxz
lcall
cmpsl
clc
xchg
cmp
mov
nop
int3
mov
jae
rorl
push
adc
js
sbb
xchg
notb
inc
clc
leave
jnp
movsl
mov
dec
sbb
mov
push
cmp
push
adc
mov
add
outsb
loopne
cmp
not
jmp
push
loop
cwtl
lods
or
cmp
insl
mov
sahf
lcall
fdiv
not
stc
sub
or
dec
aad
movsl
add
jl
sbb
test
cmp
inc
and
mov
rcrb
into
pop
dec
test
call
and
add
xchg
sbb
lcall
pop
mov
cli
or
fst
or
es
gs
out
mov
and
jmp
sbb
add
jg
out
push
stos
push
adc
mov
inc
leave
fcomi
add
sub
jle
fwait
and
lret
pop
xchg
into
xor
fcmovnbe
jp
insb
push
inc
scas
xor
xchg
fldcw
imulb
shll
and
loopne
das
lcall
inc
cld
mov
push
dec
jbe
mov
pop
je
out
sbb
js
repz
dec
mov
lret
jne,pn
out
jge
ss
fstpl
fsub
aad
cmpsb
daa
in
out
pop
mov
and
in
push
or
pop
mov
test
sub
out
lea
icebp
insb
or
jo
add
sarl
mov
rclb
sub
push
jge
in
dec
or
adc
mov
sub
dec
xchg
jo
sub
and
in
js
fs
cmpsl
jo
xor
push
loop
lret
insb
scas
rcll
or
imul
insl
push
cmp
rcll
aaa
mov
cmp
xchg
addr16
dec
lcall
push
adc
pop
repnz
cmp
add
inc
sub
loopne
jge
rcl
stos
adc
imul
dec
cmp
inc
push
jmp
fwait
in
lahf
mov
xchg
add
xor
repnz
or
lods
xchg
test
cmc
inc
repz
mov
shl
psrlq
pop
jbe
mov
out
jno
insl
push
sub
cli
mov
ja
adc
in
fnstenv
repz
mov
sti
in
push
popa
push
lret
sahf
es
mov
movsb
jecxz
mov
dec
mov
daa
insb
dec
arpl
fsubp
pop
ret
mov
das
rclb
movb
mov
out
fimull
sub
mov
nop
cmp
jae
xor
in
into
cmpsl
inc
aas
inc
and
sub
push
or
mov
fucomi
in
push
aam
shl
mov
pop
and
pop
sbb
mov
or
arpl
push
add
ret
jle
dec
mov
inc
rcrb
mov
lahf
cs
sub
test
shll
in
std
pushf
dec
int
inc
stos
aad
cwtl
xlat
fisubrl
and
nop
mov
not
lock
movsl
or
xlat
mov
push
jle
sub
sbb
lahf
ljmp
das
scas
shlb
insb
lret
int
out
dec
lret
and
jbe
in
dec
rcrb
xchg
call
dec
xor
pusha
mov
cmpsb
aaa
arpl
ss
mov
inc
mov
sarb
inc
mov
popa
sbb
push
out
out
in
or
jne
inc
pop
and
shl
inc
jne
popf
mov
cmc
cld
sbb
int
inc
mov
xor
fidivl
cmp
push
sub
push
test
cmp
add
mov
xchg
movsb
dec
sarb
loopne
je
rclb
cmp
rorl
insb
arpl
mov
add
std
sub
test
push
lret
pop
inc
leave
lds
cmp
iret
pushl
jne
pop
shlb
or
subb
xor
lret
mov
aam
shll
insb
and
lods
dec
repnz
sub
test
fldl
xchg
imul
or
cwtl
fists
mov
cltd
gs
test
test
mov
ljmp
xlat
popf
dec
adc
dec
testl
inc
push
cld
xor
sahf
mov
rcl
test
ror
into
and
dec
cmpsl
shrb
xor
cmp
bound
popa
jb
pop
lea
push
rcr
add
enter
sub
pop
repnz
push
mov
cmp
mov
inc
inc
xor
movsl
into
outsl
test
insl
dec
and
jg
push
pop
fimull
or
shll
fxtract
inc
jae
inc
pop
xor
jp
loop
loopne
ljmp
xchg
hlt
sbb
add
test
mov
mov
bound
rolb
pushf
mov
out
mov
or
dec
inc
out
or
sbb
leave
lds
cmc
ds
mov
aam
repnz
test
jno
and
push
cmp
imul
pop
push
loopne
or
push
mov
or
out
pop
imul
push
sarb
pop
adc
mov
aam
xlat
dec
aad
inc
jl
je
inc
hlt
xchg
sbbb
jmp
push
stc
xor
lahf
dec
dec
jo
mov
push
jp
movb
add
adc
addb
aad
mov
mov
fistpll
pop
mov
shlb
mov
jg
mov
aam
xor
xor
xorb
and
jmp
mov
fimuls
imul
movsl
int3
movsb
push
shlb
vunpcklpd
outsb
scas
repz
jns
push
mov
push
in
mov
outsl
lods
rcl
push
dec
gs
out
sub
popa
es
mov
aam
lea
pushf
cmp
sbb
jb
nop
dec
lea
int3
lock
mov
pop
jo
stc
insb
popf
stos
and
leave
out
out
jnp
inc
loopne
fstpt
inc
xchg
mov
addl
aad
mov
push
xlat
cmp
xchg
mov
dec
fs
mov
data16
dec
push
into
xchg
pop
inc
lods
mov
cmp
adc
add
sarb
lret
mov
lret
mov
xchg
test
sbb
pop
push
rcrl
cmpsl
scas
aam
dec
jns
leave
pop
sbb
xor
aam
xor
popf
push
mov
andl
jno
xor
cmp
jne
leave
jmp
push
test
iret
ss
lret
or
movsl
insl
pop
leave
test
jno
dec
ljmp
add
jl
push
daa
mov
out
loope
adc
fsubs
sub
je
sub
sti
idivl
xchg
into
pushf
or
scas
mov
dec
arpl
cmp
pop
inc
cmp
iret
push
setne
add
jns
adc
outsl
dec
or
imul
ficoml
jbe
scas
lret
test
loop
add
outsb
loope
dec
xchg
das
cmp
daa
fnstsw
jmp
sbb
mov
jne
jno
enter
repz
cltd
fmulp
pop
in
es
dec
adc
cwtl
mov
pop
rcl
push
mov
adc
fs
lods
jle
mov
mull
pop
test
mov
xor
loope
and
jns
int
pop
dec
xchg
and
inc
cmc
mov
mov
pop
adc
mov
outsl
add
mov
xchg
andl
or
pop
dec
mov
xor
out
adc
mov
loop
test
rolb
out
cmpsl
cmc
fdiv
pop
xor
stc
add
sbb
lret
mov
xchg
rcl
add
push
icebp
jae
cmp
fstpl
cmpsl
hlt
mov
sub
roll
loopne
adc
mov
jl
dec
lcall
out
sarl
rcrl
or
cwtl
test
sbb
and
scas
jp
mov
xor
inc
pop
pop
lods
push
push
jns
cmp
jae
sub
out
push
pop
frstor
adc
imul
cmp
pop
xchg
jg
hlt
mov
popf
mov
sub
cmp
out
sub
insb
sbb
ja
and
inc
or
into
jmp
int
sbb
fistps
push
inc
outsl
dec
in
pop
decl
jnp
or
minps
xorb
nop
xchg
les
leave
sbb
jno
inc
aaa
pop
es
sti
jbe
adc
data16
out
push
sub
sub
cmp
sbb
inc
mov
mov
insb
iret
aam
jge
pslld
or
push
push
aad
int3
clc
aad
jnp
mov
jns
add
aam
sub
push
roll
jbe
xor
bswap
sbbl
roll
xchg
fwait
dec
push
dec
stos
scas
cwtl
insb
or
jns
popa
and
or
jecxz
mov
orb
jae
pop
xchg
jne
fwait
jmp
pop
jecxz
stos
stc
or
call
leave
mov
jp
pusha
lea
sbb
aad
or
out
add
out
pop
ror
add
mov
arpl
aam
movsb
int3
pop
out
xor
pop
fldlg2
add
push
and
xor
pop
cwtl
or
test
in
sub
out
fs
aas
dec
enter
mov
or
loopne
dec
push
into
fs
cmpsb
mov
repz
out
in
hlt
nop
or
xor
out
stos
loope
or
lret
out
mov
test
push
bound
lahf
int3
rcl
or
dec
mov
daa
movsb
push
xchg
popa
and
and
into
sub
pop
xchg
jg
lahf
std
xchg
mov
into
xor
dec
push
adc
into
lods
push
imul
push
mov
subb
pop
xchg
lods
jmp
out
dec
jne
cld
in
test
cli
out
adc
mov
cmpsl
mov
repz
add
scas
push
loop
std
sub
test
xor
clc
mov
es
movsl
in
adc
sub
push
sbb
sub
lret
mov
movsl
ud0
adcb
push
cmpsl
enter
into
sub
jb
pop
pop
clc
shr
enter
aas
scas
movsb
add
inc
inc
adc
and
push
inc
or
stos
rcl
and
insb
cli
lret
xor
decb
mov
and
lcall
xor
cmp
pop
dec
ret
mov
xor
call
enter
jmp
insb
mov
push
dec
and
cmpsl
cmp
rorb
cmc
or
or
sub
mov
call
in
adc
cmpsb
inc
add
xchg
jae
xchg
sahf
loop
sub
fldt
add
adc
cltd
movsl
push
int3
xchg
adc
xchg
sbb
jl
loop
sbb
jecxz
mov
mov
xor
lods
fidivrs
imul
in
or
in
popf
cli
ficomps
mov
sub
dec
data16
or
lods
push
pop
dec
ljmp
push
xchg
push
scas
mov
inc
and
mov
mov
push
lods
xchg
fdivrs
dec
fsubl
push
xchg
pop
flds
daa
and
out
sbb
push
inc
out
int
inc
leave
js
pop
adc
arpl
push
pushl
cmp
or
mov
dec
push
iret
add
pop
push
daa
hlt
pop
ffree
pop
sbb
and
ret
loopne,pt
push
sti
cld
sub
leave
fistps
dec
mov
mov
loop
xchg
mov
fbld
jns
loopne
das
adc
stc
sbb
mov
xchg
das
or
leave
call
fadd
adc
mov
push
cmp
mov
cli
fisttpl
imul
fadds
into
lock
dec
sub
pop
sub
imul
jne
cltd
add
jns
out
xchg
loop
xlat
mov
jne
int3
std
dec
inc
cmp
cs
mov
lret
and
sbb
aad
jb
pop
stc
cmpsb
mov
fsubrl
jne
lds
movl
fs
rcrl
aas
cltd
popf
mov
mov
adc
mov
loop
in
sub
sub
and
xchg
sarb
xorb
into
lds
jp
xchg
scas
incl
pushf
cld
cmp
jne
cmpl
sbb
addr16
cmc
es
mov
jns
pop
or
mov
mov
jecxz
mov
outsb
jge
shrl
addr16
sbb
sub
mov
std
xlat
sub
adc
icebp
repz
ja
mov
fsubrs
lret
mov
loopne
ror
clc
pop
mov
test
fcom
push
jge
lcall
jb
dec
mov
lahf
xor
shlb
std
cli
inc
jl
in
clc
pop
int3
push
jp
jge
and
lahf
xor
mov
fstpt
pop
pop
xchg
bound
cmp
adc
jge
loopne
outsb
cwtl
push
and
jmp
sub
add
adc
pop
pushw
push
push
ljmp
mov
aas
stos
push
cmpsl
das
sub
sbb
aam
and
fsubs
lahf
insl
hlt
add
inc
pop
scas
push
movsb
jbe
add
pop
adc
xchg
cmp
repnz
sub
stos
mov
sub
sbb
jecxz
push
mov
push
adc
mov
jmp
bound
inc
cmpsb
add
sbbl
mov
out
push
dec
lret
inc
xor
clc
xor
mov
mov
shrl
dec
lods
jnp
mov
fs
mov
stc
add
mov
test
scas
inc
dec
mov
dec
stos
out
outsl
stc
xor
xor
push
mov
add
or
xor
lods
cs
or
pushf
imul
push
jl
adc
out
es
clc
sarb
push
sbb
add
mov
xorl
out
mov
dec
mov
xchg
ret
adc
imul
mov
inc
scas
ret
not
xchg
packsswb
fiaddl
xchg
loope
out
add
dec
jnp
in
lcall
dec
mov
clc
fistl
mov
sub
mov
and
xchg
sbb
call
dec
sbbl
inc
outsb
dec
pusha
rorb
fisubrs
testl
in
pop
stos
outsb
fldcw
dec
inc
sub
ja
adc
push
loop
xorl
adc
cmpsl
scas
add
sub
mov
mov
jmp
loop
iret
sbb
pop
out
je
out
jl
jns
dec
jg
mov
push
xor
into
scas
inc
pop
push
jmp
and
dec
mov
or
and
fs
pop
mov
sti
out
shr
lea
orl
push
insb
enter
ljmp
clc
movsl
aam
test
inc
jg
mov
jbe
xchg
dec
jmp
pop
out
push
test
loope
insl
loopne
ja
in
mov
or
in
cmc
aad
or
nop
scas
dec
shrl
pop
and
popl
sbb
stos
sub
popa
cmpsb
jp
pushl
imul
mov
adcb
cmp
into
mov
sub
jbe
bound
test
mov
flds
add
stos
lret
lret
insl
push
mov
daa
leave
mov
mov
stos
jbe
or
add
pop
aam
icebp
in
sti
fwait
adc
cmp
or
test
loop
aas
out
push
fidivs
mov
jg
test
int
in
mov
stos
rcr
adc
sbb
push
out
bound
xor
add
inc
insb
sub
test
jo
loope
adc
movsb
push
push
not
sbb
addb
aaa
popl
cli
aam
inc
repz
pop
outsb
insb
int3
loope
sbbl
out
and
push
mov
ror
dec
and
insl
xchg
push
fmull
add
cs
lretw
xchg
push
lods
sarb
movsb
cli
addr16
sbb
pop
pop
xor
jl
outsb
in
cmp
mov
js
insb
movsl
in
mov
jp
aad
adc
jbe
into
mov
adc
pop
add
fldlg2
adc
test
pop
leave
dec
or
push
push
enter
loopne
out
dec
pop
xchg
ret
sub
loope
test
in
mov
inc
mov
dec
adc
mov
out
in
pop
xor
push
and
inc
dec
into
cs
xchg
movsl
inc
ret
and
out
int3
cli
test
cmpsl
shrb
lcall
adc
lea
hlt
xchg
xorl
push
lods
push
mov
int3
push
mov
xchg
sbb
sub
push
outsl
or
or
jmp
pusha
jne
repz
inc
cmp
push
mov
gs
push
sbb
jle
push
fwait
pop
neg
adc
xor
pop
and
movsl
sbb
pop
mov
lods
xor
cmp
addr16
arpl
arpl
fwait
mov
hlt
rcll
mov
test
dec
je
lods
mov
add
movsl
mov
insb
pop
jg
push
cltd
std
rolb
lret
js
jns
lret
mov
insl
repz
push
xchg
cmp
add
hlt
dec
sahf
xor
mov
mov
test
fstpt
mov
fucomp
clc
mov
push
xchg
sbbl
mov
mov
inc
sti
push
lods
lret
push
js
das
aas
push
add
mov
mov
xchg
jecxz
je
in
stos
aam
mov
cwtl
inc
out
ja
outsb
test
cmpsl
ljmp
pop
fadd
or
inc
push
jle
test
pop
call
mov
mov
inc
imul
cwtl
insl
nop
mov
aam
retw
std
sar
inc
adc
sbb
cmp
push
adc
shlb
add
mov
lds
and
fcmovnbe
sub
inc
popl
xlat
pop
mov
xchg
mov
mov
addr16
adc
pop
movsb
jge
mov
jbe
mov
int
push
push
pop
stc
fdivrl
sbb
out
cmp
and
fs
jb
inc
je
adc
push
mov
int
loop
xchg
mov
pop
mov
xchg
js
and
lea
int3
xor
in
or
sub
icebp
and
mov
cltd
mov
decl
int3
sbb
ror
lods
rclb
in
mov
cmc
imul
mov
and
rorb
sbb
jecxz
imul
adc
pop
xchg
mov
nop
shl
sbb
mov
xchg
test
jge
push
add
lods
xchg
int3
jbe
mov
dec
inc
mov
mov
cltd
or
sub
cmp
and
pop
xchg
xor
mov
xchg
dec
push
ja
in
into
popf
int
scas
out
loope
testb
xorb
imul
frstor
add
je
lret
fucomip
mov
sub
ror
jo
or
dec
mov
faddl
out
es
sub
pop
xor
cmc
lahf
inc
push
adc
into
popa
iret
loopnew
dec
mov
mov
pop
out
dec
stos
mov
push
jp
jle
xchg
cld
adc
in
mov
insl
dec
jbe
ja
cmp
and
lods
lea
adc
xchg
or
mov
mov
sub
xchg
pushf
xor
arpl
or
test
test
pop
inc
fimuls
pop
sub
inc
lret
push
xor
je
sub
lods
out
cld
dec
aas
sbb
andl
jne
icebp
dec
add
jo
mov
mov
jns
stc
sbb
mov
or
mov
icebp
dec
in
out
push
int3
cmp
js
int
in
adc
push
je
inc
movsb
cmp
pusha
daa
mov
xor
inc
jne
loope
pop
push
inc
jnp
out
jb
xchg
jg
aad
xchg
sbb
add
mov
push
jb
ds
ror
add
out
sub
xchg
push
xchg
dec
add
or
add
mov
adc
mov
cmpsb
mov
popf
jnp
int3
lcall
sub
lods
lds
jecxz
jbe
enter
sti
push
js
das
xor
add
mov
ja
les
stos
xor
and
outsl
mov
xchg
sahf
mov
cltd
iret
push
cmp
jmp
ja
sub
inc
mov
cmpsl
sbb
cltd
xchg
mov
xor
dec
fadd
push
mov
test
ja
shlb
dec
enter
int
cmp
inc
lods
rorb
or
gs
lret
dec
xchg
and
adc
mov
inc
cmp
sti
sub
mov
into
xchg
leave
inc
dec
sub
fs
dec
pop
cltd
mov
push
jmp
fisubrl
xchg
ja
cs
or
rclb
loopne
into
push
ret
mov
adc
push
clc
xchg
and
pop
out
sub
jne,pt
lret
mov
popf
int3
push
fistpll
jo
mov
cltd
pop
es
xchg
cmpsb
aas
jmp
mov
pushf
dec
sti
loopne
scas
cltd
shlb
fs
stos
jl
out
push
add
insb
sahf
lcall
shll
and
mov
shll
xchg
xchg
push
push
inc
or
mov
xor
cmp
sbb
push
in
into
dec
and
push
xor
cmp
cwtl
inc
xchg
call
jns
push
jmp
dec
push
cmp
ficompl
dec
bound
sbb
dec
data16
inc
push
pop
mov
js
sbb
ss
pop
cmp
iret
or
mov
adc
rclb
clc
xlat
xor
push
and
mov
xor
addr16
popa
dec
ds
stc
or
aad
pushf
jne
ljmp
loop
xchg
xchg
or
rcl
cmp
mov
clc
addr16
fstpt
adc
into
sub
jbe
ret
add
es
jl
jmp
addb
or
insb
push
xchg
test
repnz
mov
into
mov
iret
mull
stos
push
push
inc
ljmp
stc
sahf
jmp
mov
jae
cmp
sub
inc
and
and
and
fidivs
gs
test
pop
sbb
lret
jp
cmp
cwtl
sub
pop
adc
add
popf
mov
dec
in
mov
push
pusha
addr16
mov
push
mov
bound
ljmp
movsb
dec
and
shl
test
movsl
popf
xchg
adcb
mov
adc
push
mov
pop
in
and
cs
jmp
and
adc
jne
and
push
test
jbe
mov
imul
inc
ror
int3
xchg
add
lock
jns
adc
fldl
cmp
std
and
stos
aad
ja
repnz
mov
outsb
jecxz
filds
fisttpl
or
ret
lods
sbb
mov
imul
popa
inc
cmpsl
adc
out
push
movsb
push
mov
cmp
jae
add
call
int
pop
inc
mov
xor
or
test
int
test
cmp
out
cmp
jp
jge
pusha
push
mov
sahf
shlb
xchg
adc
pop
js
sub
mov
push
mov
jbe
jnp
call
shlb
push
loop
inc
int
and
add
cmp
fnstenv
aaa
jmp
in
jb
jecxz
xlat
xchg
mov
push
jle
enter
or
out
jno
insl
cmpsl
cli
jp
mov
rcll
adc
lret
nop
adc
sub
ret
in
fistpll
or
nop
sub
pop
dec
jb
daa
lret
sub
fmull
shl
fcmovu
dec
in
lret
cmc
mov
loop
in
pop
out
xchg
mov
mov
dec
les
addps
jg
mov
int
inc
sbb
push
out
mov
loope
sbbl
cvtdq2ps
sub
out
cmp
jp
mov
sub
lahf
and
aam
lds
out
push
xor
xchg
push
jp
add
fst
jmp
mov
push
xchg
sbb
into
pop
mov
sub
gs
jle
insl
cli
lock
jmp
dec
mov
filds
and
cli
mov
dec
sub
fs
stos
jge
mov
xchg
stos
mov
sbb
in
in
cmc
sbb
adc
add
mov
out
stc
push
pop
into
das
and
mov
dec
loope
cmp
insl
push
cmp
mov
in
pop
sbb
jecxz
and
push
int3
int3
mov
movsb
add
pop
test
test
cmp
push
mov
dec
andb
xor
mov
or
cmpsl
mov
xchg
jb
jbe
shll
rcl
mov
push
test
bnd
push
mov
add
addr16
lods
push
lret
fstl
dec
add
xchg
mov
es
xor
out
test
adc
lock
jnp
in
js
ror
pushl
jmp
xchg
test
iret
insl
int3
lret
mov
add
push
hlt
jl
sbb
xchg
aam
out
cmp
xchg
xchg
cmc
mov
test
lds
pusha
arpl
sti
dec
mov
aad
dec
dec
js
adc
int
out
insb
cmp
movsl
jp
push
movsb
hlt
andps
and
inc
xchg
or
rcrb
nop
pop
jle
loope
push
frndint
outsb
arpl
xor
mov
loope
repz
mov
adc
jmp
mov
mov
mov
loopne
push
sub
and
stc
sbb
sti
jns
test
mov
in
add
push
mov
xchg
loopne
aam
mov
insl
out
inc
fdivl
ds
jns
xchg
pop
mov
pop
jg
in
daa
mul
inc
test
or
xor
dec
xchg
mov
push
sub
js
mov
outsb
dec
insl
rcr
test
leave
fcomps
in
cmp
mov
fwait
xchg
mov
lds
jno
sahf
test
dec
mov
mov
xor
jae
pushf
aad
mov
push
shr
xchg
ss
fidivs
jnp
lcall
adc
lret
mov
aas
sar
ds
loopne
cmp
pop
inc
mov
mov
mov
push
clc
mov
lret
lods
pop
jmp
xor
stos
out
mov
jge
mov
popf
mov
and
out
aad
sub
in
jb
xor
xor
out
jae
mov
fisubl
sahf
push
cmp
add
leave
sbb
cmp
fsubrs
lahf
sbb
mov
loopne
cmp
outsb
shll
jae
shrb
cltd
fistps
add
enter
mov
dec
xchg
jp
pop
sbbb
stc
sub
sub
mov
loope
stos
lret
jne
subb
arpl
push
gs
out
cmp
lret
insl
push
lret
out
shrb
xor
pop
rcl
pop
inc
cld
or
popf
rcrb
imul
push
icebp
mov
scas
xchg
rcl
sahf
int3
cmp
lds
dec
cmp
mov
push
add
inc
daa
or
fdivrl
cmpsb
dec
dec
pusha
push
rclb
jl
or
roll
or
adc
xchg
inc
mov
mov
scas
sarb
mov
sub
call
xor
shll
inc
lcall
pop
push
test
stos
mov
outsb
xor
les
cmpsl
into
loopne
jnp
mov
aaa
push
pop
in
aam
je
gs
cs
cmc
mov
jbe
sarb
sar
scas
mov
add
fsub
push
push
jmp
aam
cwtl
cmp
lods
xchg
push
mov
clc
sbb
or
pop
sbbl
ret
push
lret
int3
js
je
mov
lods
and
call
jbe
mov
sbb
aas
aam
pop
test
push
mov
sbb
push
ficompl
popf
xchg
ret
int3
pop
fimuls
adc
out
orl
adc
std
leave
sub
jae
hlt
in
lods
pop
ja
sub
aas
sub
sbb
insb
jmp
jl
or
sub
sbb
int3
or
addr16
iret
mov
cld
fcmovne
clc
inc
rcl
push
or
loope
ds
xor
xlat
push
mov
mov
movsl
inc
jle
push
mov
mov
xchg
and
sub
lea
xchg
dec
nop
cld
push
mov
jge
and
mov
test
mov
ret
xor
jle
sbb
jle
pop
insl
sbb
inc
jb
cmp
je
xchg
dec
lods
call
fcmovnb
jo
test
pop
rclb
nop
cmp
lcall
loop
daa
aad
or
in
hlt
loope
mov
out
inc
popa
popf
sbb
dec
cld
arpl
sub
cmp
and
pop
jbe
leave
xlat
aam
lcall
repz
in
adc
and
movsb
jge
cmpb
pusha
jle
lods
insl
cs
xchg
sub
jb
xor
jo
out
sbb
sbb
je
mov
fisttpl
and
negb
jecxz
ja
popf
into
hlt
out
loop
pop
push
sub
fcmovbe
aam
lods
push
outsl
mov
mov
lea
aas
ficomps
lods
lds
push
outsl
mov
fwait
mov
stos
inc
mov
jl
popf
call
sbb
ja
cli
push
xchg
test
xchg
sbb
xor
js
dec
insb
xor
int3
jmp
loopne
mov
mov
fcom
or
lcall
push
push
push
sahf
jb
sar
insb
pop
cmp
js
arpl
iret
enter
sub
push
mov
xor
sahf
mov
sub
add
push
cmp
nop
fdivrl
add
push
les
xchg
push
fidivrs
rcr
xor
inc
sbb
out
jmp
sub
adc
lahf
mov
les
add
dec
andb
pop
cmp
xor
in
add
sub
ja
fstps
leave
xchg
adc
mov
xchg
adcl
mov
addb
into
and
lahf
ret
repnz
loopne
dec
gs
sbb
sub
sub
jmp
fadds
adc
test
into
sub
in
mul
sbb
sbb
mov
xor
jne
xchg
fisttps
jecxz
mov
jle
int
xchg
dec
fwait
aas
sub
dec
add
sub
or
loopne
shrb
fisubrl
xor
outsl
cltd
test
cmp
stc
dec
cmp
aam
lods
pop
in
call
inc
fs
dec
mull
loop
xor
push
mov
dec
insl
popf
scas
cmp
dec
cwtl
xorb
sub
xchg
push
mov
outsl
rclb
dec
out
fcomps
cmc
jmp
es
xchg
sbb
jns
stc
xor
xorb
dec
ljmp
ret
jb
dec
divb
push
mov
lcall
shrb
out
sub
fadds
xor
shl
int
jnp
fadds
repz
cmp
rclb
or
xor
jecxz
jae
int
mov
inc
jge
imul
and
dec
or
fwait
decl
out
dec
jle
cld
mov
push
mov
test
mov
stos
out
pop
hlt
cwtl
cltd
test
and
xchg
popa
add
int3
jbe
inc
fadd
das
insb
or
sub
xchg
mov
shll
fcom
ret
in
gs
out
push
pop
push
dec
testl
call
push
xchg
cwtl
inc
or
xchg
cltd
push
aaa
int3
xchg
out
pop
jnp
jle
lret
jae
ljmp
sub
dec
in
fimuls
fists
mov
popa
dec
lcall
cmp
dec
lods
mov
mov
add
mov
xchg
or
pop
fwait
ljmp
sub
lea
pushf
lds
jne
sbb
and
and
or
ds
dec
jge
cli
filds
shlb
lahf
jp
push
nop
cmpsb
dec
mov
adc
pop
arpl
loopne
lds
popa
xor
add
cmp
movsl
enter
mov
jmp
sbb
or
dec
mov
out
sub
push
lcall
data16
push
sbb
adc
aaa
jbe
lcall
int
or
cmp
sti
inc
xor
xchg
std
into
sahf
ljmp
lret
mov
mov
aam
or
adc
js
test
add
test
call
daa
mov
cmpsl
mov
xor
jge
sbb
xchg
dec
push
mov
dec
pop
arpl
dec
mov
push
jle
jne
shlb
das
cmc
cwtl
dec
addr16
lock
test
pop
mov
add
out
std
out
fmul
mov
and
mov
lcall
jge
hlt
add
cmp
int3
mov
test
add
movsb
es
dec
jbe
cmp
xchg
aaa
arpl
sub
xlat
stos
push
and
pushl
adc
mov
xchg
pop
aam
hlt
xchg
pushf
or
dec
mov
pop
mov
adc
jbe
clc
outsl
sbb
xor
push
pop
inc
mov
fistpll
test
int
mov
inc
jne
jae
rclb
sub
push
fmull
cld
scas
fmull
mov
call
loopne
gs
xchg
enter
adc
in
jno
fucom
mov
rol
clc
push
mov
out
and
add
mov
mov
movsl
fidivs
insl
mov
or
cs
dec
mov
jbe
adc
pop
xor
out
push
rcl
sub
jge
das
int3
aas
dec
fmuls
xchg
pop
lret
ficoml
sbb
and
into
fistl
fmulp
outsb
ljmp
lcall
pop
jns
pop
pop
or
iret
rolb
dec
jmp
repnz
mov
push
adc
or
repz
ljmp
out
mov
dec
pop
add
and
jae
addr16
inc
fistps
sub
sahf
mov
test
mov
lock
cmp
xchg
pushf
andps
loop
jno
xchg
xlat
jo
cmp
addr16
or
inc
scas
or
or
hlt
movsl
jno
mov
enter
xchg
call
out
or
outsb
sbb
aad
xlat
push
test
push
cmp
mov
jae
and
lea
jmp
xchg
dec
repz
jbe
mov
mov
xor
adc
out
sarl
pop
adc
mov
push
push
aad
popf
cltd
clc
imul
sub
sub
jg
sarb
jne
xlat
rcll
shlb
cmp
mov
sub
test
nop
call
jae
lcall
imul
ljmp
mov
test
ds
andb
add
xchg
sub
call
xchg
int
adc
sahf
jb
add
mov
mov
shl
xor
xor
fcmove
aaa
mov
or
adc
call
mov
shrl
dec
pop
cmp
into
nop
mov
aas
dec
or
push
test
sub
mov
xor
xchg
out
js
stos
push
mov
addr16
push
adcb
es
sbb
ljmp
xchg
or
jecxz
push
mov
dec
jmp
push
cmp
in
call
js
mov
push
mov
rorb
jbe
sub
rorl
mov
pop
inc
adc
cmp
lret
or
or
popf
or
mov
fstpl
mov
call
pop
pop
data16
leave
xor
cmc
fsubrp
mov
lcall
call
ret
je
into
pop
lods
jae
mov
cli
push
movsb
lock
push
fsub
inc
lcall
gs
inc
add
repz
dec
mov
lahf
dec
pop
push
push
and
cmp
cltd
loopne
lcall
xchg
aam
or
mov
pmaxsw
nop
push
add
push
inc
flds
pop
sbb
pop
jl,pt
mov
cmpsb
inc
pop
es
mov
dec
xchg
in
int3
into
nop
out
add
cmp
rcl
sub
cmp
aaa
out
int3
lea
and
ljmp
push
popf
lcall
mov
sub
sbb
jmp
out
add
into
lock
iret
jmp
and
xor
adc
dec
loope
jmp
mull
mov
dec
scas
es
lods
cmp
add
mov
sti
jne
shrb
dec
xchg
or
loopne
fadds
mov
inc
lea
fsubrl
adc
lock
subl
into
std
push
cmp
push
ret
mov
shll
clc
int3
xor
mov
xchg
add
out
insb
sub
mov
mov
je
dec
push
or
enter
adc
xchg
cltd
aaa
mov
shrb
pop
push
sub
clc
inc
lea
push
xor
movsb
mov
cmp
cmp
outsl
dec
push
sbb
nop
aaa
mov
andb
out
lds
jge
push
or
push
or
cmp
sub
push
adc
mov
out
enter
push
leave
jge
lds
and
in
dec
cwtl
xlat
ljmp
mov
into
movsb
insl
and
cmp
fcom
fistpll
cmpsb
add
jg
ror
adc
int
enter
mov
std
jo
pop
je
push
push
xor
cmpsl
aad
xchg
jbe
ljmp
adc
mov
nop
mov
xor
jmp
xchg
add
xchg
call
mov
out
and
test
jmp
xchg
jno
mov
push
mov
push
cli
cmp
adc
lahf
mov
fistpl
adc
adc
inc
push
loope
cld
jle
insb
andb
test
fucomip
adc
adc
test
mov
mov
xchg
jae
jbe
sub
fnsave
xor
or
data16
or
sbb
xor
xor
add
mov
ds
mov
popa
xchg
ja
lcall
scas
pop
and
xchg
inc
or
xchg
sbb
push
movsl
cmp
adc
push
test
nop
and
mov
adc
outsl
add
mov
in
pop
into
loopne
cmpsl
mov
in
xor
mov
je
add
dec
cmp
mov
aam
iret
sub
push
mov
adc
jp
dec
xchg
xchg
sbb
mov
out
clc
sub
and
int
lret
add
jnp,pn
or
jp
sbb
adc
xchg
rclb
in
sbb
mov
xchg
sub
enter
frstor
fsub
popa
shrb
sarl
mov
pop
out
pop
into
xchg
arpl
cmp
jmp
shrl
cmpsb
and
movsl
lods
jb
inc
mov
mov
dec
gs
shrl
mov
sbbl
aad
lret
add
xor
out
jae
xor
aaa
jecxz
sbb
fnsave
outsl
imul
dec
jo
mov
sbb
aas
pop
cmp
imul
je
xor
push
rorb
push
sub
sahf
jl
stos
push
in
popf
mov
pusha
enter
pop
dec
mov
notl
cs
mulb
bound
test
sbb
mov
xchg
xor
push
push
rorb
fsubl
stos
add
test
loopw
sub
adc
jecxz
fisttps
outsb
sub
jmp
std
iret
fldenv
mov
bound
rolb
inc
scas
sub
out
daa
xchg
lea
add
fists
popa
pop
in
inc
mov
inc
test
out
dec
scas
and
dec
jp
popf
xchg
imul
fcoms
pop
cmp
cli
jp
div
fprem
aaa
in
sbb
jno
shrl
repnz
aas
fstl
adc
adc
pop
pop
sub
fwait
cs
pop
lods
orl
jae
mov
test
arpl
repnz
scas
into
pop
jmp
ret
or
ret
or
stos
in
dec
inc
test
mov
movsl
jns
push
cwtl
jg
aas
push
mov
sbb
and
out
test
push
jno
int3
dec
lcall
add
repz
out
sarb
shlb
push
das
adc
out
cmp
aam
jl
jne
jle
mov
and
test
into
mov
data16
jp
pop
xchg
mov
dec
sub
inc
push
daa
push
and
xchg
pop
cmp
mov
mov
in
mov
stos
lcall
jb
dec
icebp
sahf
int3
mov
push
iret
imul
mov
inc
jge
add
lret
nop
dec
inc
loop
out
xor
jecxz
or
in
mov
dec
push
fldcw
mov
int
cmp
lods
xchg
add
mov
out
data16
out
push
dec
dec
popf
pop
ret
mov
push
sub
inc
pushf
jne
sbb
push
std
inc
out
xor
lahf
fsubrs
lock
out
adc
mov
ja
fidivrl
ret
xor
test
aad
rclb
in
sbbl
xchg
js
into
cmpb
fldenv
cmpsl
test
pop
inc
jnp
lds
cwtl
popa
push
mov
mov
xlat
xchg
clc
cli
test
pop
pushf
sub
test
and
das
cmp
test
push
push
outsb
jg
push
ror
es
mov
jnp
out
inc
jo
mov
add
xchg
cmp
push
xor
out
mov
push
dec
cmpsl
cmp
push
or
jbe
cld
in
imul
dec
push
push
push
inc
and
ds
aaa
sub
mov
mov
cmp
dec
rcll
jmp
icebp
or
rorl
loopne
lahf
ja
sub
sub
sbb
cmpsl
xor
jns
push
push
jl
cwtl
fistpl
xor
jb
cmpsb
call
cmp
jne
rcrb
mull
fwait
int3
dec
out
sub
jle
popl
and
mov
or
push
lahf
or
xchg
test
mov
jo
add
aas
lea
xor
fsubrs
jg
es
xlat
xor
lret
leave
in
scas
je
mov
repz
ja
push
or
lret
pusha
adc
xchg
stos
inc
xor
mov
xor
out
dec
push
les
xlat
jo
fcomip
test
mov
into
jae
in
add
ret
les
mov
das
mov
pop
ljmp
pop
out
ret
push
sub
rolb
push
xchg
ss
sarl
shll
lock
inc
jno
ds
shlb
imul
mov
mov
and
rcl
dec
sti
loopne
xor
testb
lcall
arpl
push
cs
sti
nop
dec
sarb
inc
in
int3
ds
mov
push
xchg
dec
fsubrs
mov
aas
pop
xchg
into
and
out
aaa
or
movsb
cltd
rolb
mov
dec
aad
cmp
and
jnp
sub
jo
jne
rclb
into
rcll
pop
adc
xorl
shl
xor
popf
pop
mov
movsl
and
test
shl
ret
jmp
loope
lret
mov
jnp
loopne
lret
add
jbe
sbb
mov
scas
mov
mov
insl
inc
xlat
bound
xchg
xchg
sahf
push
push
ret
pushf
iret
push
lret
stos
je
test
mov
mov
shrb
sub
data16
push
lahf
lods
xlat
push
mov
jo
dec
sub
rcll
ret
mov
pop
dec
cmpsl
pusha
rcll
jge
adc
sbb
sbb
xchg
addr16
dec
lds
adc
ret
mov
cs
inc
mov
or
pop
jmp
filds
xchg
repz
adc
aad
jnp
mov
cmp
inc
inc
in
mov
cmpsl
mov
or
into
jmp
add
or
fwait
iret
mov
ror
or
lahf
jo
jge
test
addr16
add
cmp
icebp
sub
cmpsb
adc
mov
sub
andps
cmpb
mov
cmp
shll
shrl
out
sub
std
das
jae
or
aam
scas
jbe
jge
cli
lret
cmp
and
ljmp
pop
rcl
mov
pop
dec
mov
je
stos
jge
mov
jae
sbb
xchg
sbb
mov
js
cmpsb
jno
xchg
jge
test
dec
int3
and
cltd
rorl
iret
call
inc
lds
mov
xor
dec
ja
in
mov
aaa
out
sbb
test
popf
dec
lock
push
nop
in
les
into
loope
mov
cmp
dec
xchg
pop
xchg
push
sub
dec
in
mov
nop
stc
xlat
subb
jae
call
or
int3
arpl
sub
mov
sbb
xlat
lds
push
mov
push
and
mov
adc
aas
adc
lret
mov
lods
xchg
cmp
xor
aaa
bound
lret
into
sahf
or
leave
lret
fcoms
xchg
mov
movsl
aas
sub
mov
xor
sub
jo
aaa
cmpsl
mov
and
xchg
movsl
add
and
pop
lea
cmp
lret
popa
pop
rep
mov
fs
push
xchg
inc
push
add
cld
mov
in
clc
aas
rcrb
popa
insl
sbb
out
and
aaa
rolb
inc
and
daa
and
gs
aam
addb
push
inc
sbb
sbb
lods
xchg
cmp
mov
into
or
cmp
repnz
imul
ja
xor
ret
popf
jge
loopne
mov
icebp
cmpsb
lods
leave
rorb
fdivl
adc
dec
cmpsl
lret
loop
push
push
sarb
insb
pop
inc
jnp
js
fldl
outsl
mov
shrl
inc
incl
in
sub
out
or
push
jne
xchg
sbb
aam
jnp
movsb
mov
sbb
ret
dec
pop
ficoml
into
lea
adc
je
shrl
in
jmp
lret
jbe
out
mov
lret
cmc
imul
cmp
jae
jl
xchg
out
scas
jb
mov
lea
cmc
sub
mov
movb
xchg
mov
push
and
inc
ficompl
popa
sarl
outsb
ljmp
push
jns
fistl
inc
es
ja
das
mov
mov
insl
xor
testl
rcl
cmc
cli
jecxz
lcall
push
ss
jbe
mov
cmpsl
cmp
scas
sbb
jne
jge
stos
cmp
test
add
mov
sub
jmp
loopne
inc
push
sbb
lds
fldenv
jbe
or
jmp
and
jnp
mov
push
xor
adc
sbb
or
lret
gs
xchg
push
mov
lret
jmp
nop
aam
mov
outsl
sbb
cwtl
mov
scas
push
mov
lods
imul
cltd
sbb
orl
jbe
movsl
out
cmp
sub
mov
mov
test
xchg
test
or
jb
xor
dec
dec
pop
aam
rorl
ss
je
xchg
push
inc
xchg
adc
xchg
cmp
arpl
lea
xor
pop
int3
out
aad
loop
stos
adc
jmp
xlat
int
out
xor
test
cmc
xchg
sarb
jl
out
xor
rcll
movl
lret
out
pop
clc
pop
enter
push
pop
xchg
lret
test
ss
pop
dec
or
xchg
insb
mov
sbb
sub
outsl
test
jbe
xorb
scas
mov
and
add
xor
jne
push
clc
push
das
rolb
lcall
sbb
dec
into
jb
ljmp
and
xlat
sbb
inc
mov
negb
lahf
adc
in
ret
or
xor
orb
mov
sarl
mov
andl
inc
enter
sbb
out
aas
fcomp
addr16
lahf
sti
or
add
xchg
xor
bound
sub
and
pusha
mov
data16
and
mov
sub
test
mov
out
rcrb
xchg
cmp
xor
aad
lret
aas
loope
into
in
dec
and
aaa
or
xchg
xchg
movsl
add
stos
sub
out
loopne
jns
iret
inc
repz
mov
es
fsub
jge
jne
jmp
mov
cmp
int
or
hlt
clc
add
jmp
mov
or
xchg
cmpsl
sbb
pusha
and
push
pop
mul
nop
inc
int
in
jmp
pop
push
shl
push
add
sub
iret
je
lods
sub
add
xchg
stos
sti
lods
into
ror
shlb
loopne
mov
cs
pop
sbb
jge
mov
adc
rol
jae
push
into
xchg
add
mov
scas
idivb
lahf
cld
lret
int3
sub
xchg
outsl
sub
jo
pop
or
and
pusha
lods
mov
out
and
xlat
aad
lods
rorl
jbe
ljmp
inc
into
adc
dec
push
jmp
lock
cmp
fcoms
mov
ret
imul
mov
sub
gs
popa
ret
lahf
pop
flds
shl
shlb
cltd
fwait
adc
xchg
xor
sub
push
fidivs
into
je
test
pop
aaa
xchg
add
les
rcr
pop
neg
shll
mov
adc
arpl
xor
push
int
insl
dec
sub
inc
nop
mov
add
andl
ja
cli
movsb
addr16
shrb
xorb
scas
pop
pop
adc
mov
sti
dec
sub
call
jno
fdivl
imul
mov
jecxz
inc
mov
cs
es
ljmp
or
out
out
jg
push
adc
add
loopne
mov
cmp
iret
mov
inc
push
inc
pop
fcmove
adc
jo
or
mov
or
loop
pop
cli
jae
mov
adc
jp
js
inc
mov
mov
pop
sbb
push
lock
ss
stos
sbb
xor
adc
test
loop
add
iret
popf
mov
dec
sbb
cli
add
adc
fstenv
test
es
add
adc
subl
jmp
mov
repnz
mov
jnp
je
mov
and
mov
mov
xchg
aad
lret
loope
cwtl
dec
scas
stos
iret
xchg
popa
mov
xchg
pushf
adc
push
mov
inc
add
inc
rcrl
loope
lock
sub
inc
dec
dec
mov
push
sbb
pushf
lock
out
adc
inc
lods
les
xlat
leave
fwait
push
push
cmp
push
and
das
std
sub
pop
iret
cmc
pushf
pop
bnd
rorb
mov
xchg
sub
xchg
lret
cmp
jp
push
xor
aad
int3
rorb
or
xchg
fwait
loope
rclb
jg
loopne
push
xor
pop
clc
out
es
xchg
xchg
gs
outsl
dec
adc
push
lods
fmull
or
out
sub
dec
leave
adc
jb
xor
xchg
scas
sub
add
push
jae
out
pushf
bound
add
out
sbb
sub
inc
orl
popf
pop
jmp
js
mov
mov
cmpsl
cmc
sbb
push
mov
fimull
mov
leave
dec
pop
jnp
sub
cwtl
aas
outsl
lahf
scas
pop
xor
int
pop
arpl
repz
push
inc
roll
cmc
rcrl
mov
cmp
adc
pop
addr16
imul
adc
sarl
push
mov
cmp
push
mov
popl
ret
shl
fs
rclb
sahf
jbe
push
sbb
jecxz
pop
jo
mov
mov
lods
shlb
mov
cs
xchg
adc
mov
or
arpl
aam
outsb
cmp
xchg
sti
lcall
sbbb
jbe
rolb
mov
xor
fidivrs
inc
lea
imul
test
movsb
std
rolb
mov
push
popf
push
out
stos
loopne
in
mov
cmp
popa
sbb
mov
xchg
mov
mov
icebp
sub
inc
sbb
inc
sub
insb
ljmp
scas
mov
or
mov
add
clc
and
xchg
or
aam
dec
mov
adc
into
add
fsubr
dec
in
jbe
fimull
enter
into
cmp
ljmp
nop
sbb
pop
outsb
mov
addb
daa
data16
shll
jae
mov
ds
dec
push
lret
stos
adc
cmp
jae
aas
popa
pop
xor
sbb
out
xchg
xor
add
mov
int3
xchg
xor
rcrl
icebp
mov
push
int3
leave
cs
enter
and
add
cmpl
push
jmp
mov
add
xor
dec
or
xor
fwait
inc
push
cmp
popl
xchg
je
nop
sbb
popa
push
adcb
add
push
in
sbb
aam
lea
daa
xchg
jg
mov
push
and
in
int
js
subl
xchg
stos
and
arpl
dec
mov
adc
jmp
stos
fwait
stc
mov
cmp
rcrl
mov
mov
loopne
lret
fldt
cld
int3
add
aas
cmp
xchg
cmp
popf
dec
push
in
stos
jbe
out
loop
hlt
and
adc
mov
scas
adc
rorb
mov
ja
js
dec
mov
jns
outsb
add
imul
rcll
test
clc
fcomp
cmp
xlat
sti
flds
in
cmp
jg
fdivrs
lret
mov
inc
decl
repz
je
jne
dec
gs
pop
jnp
pop
jecxz
push
ja
jp
xlat
sub
sub
repnz
jns
stos
mov
cmp
push
push
adc
jne
test
mov
add
and
mov
test
jmp
cmp
pushf
xor
sbb
or
xchg
insb
and
push
mov
pop
repnz
ret
rcrb
mov
insb
movsb
push
cltd
aad
lcall
in
daa
mov
sbb
popa
pop
cwtl
lods
dec
mov
std
test
ljmp
sub
or
mov
xchg
xor
push
mov
aam
aaa
fs
xchg
jbe
fwait
test
ficoms
cli
outsb
fimull
sbb
adc
das
daa
push
cmpsl
sub
push
testb
in
or
lods
sub
sbbb
jbe
pop
jp
leave
gs
iret
lea
std
insb
stos
ret
addr16
xor
data16
nop
mov
jb
push
fisubrl
jne
mov
cmp
jns
jnp
addr16
or
sub
roll
add
mov
mov
orl
inc
into
rcl
call
or
xchg
pop
mov
mov
aad
sub
gs
sahf
mov
add
mov
iret
aaa
push
stos
ja
rorb
sbb
testl
sbbb
mov
mov
cmp
cmp
dec
xor
loopne
ficoms
mov
lahf
pusha
enter
fisttpll
adcb
ja
push
sbb
scas
pop
mov
nop
and
fwait
dec
mov
test
filds
into
ljmp
out
pushl
dec
arpl
divl
xlat
or
dec
into
and
push
mov
jne
mov
daa
fs
fbld
push
aaa
lds
push
popa
cmp
dec
push
mov
int
pushf
pop
or
adc
dec
sbb
imul
mov
lds
xor
movsl
movsb
loopne
mov
popa
loop
sub
jne
cmp
cltd
mov
leave
sarl
xor
roll
fadds
movsb
rcrb
add
inc
sub
fs
mov
mov
sbb
dec
jmp
push
xorl
fwait
cli
add
aaa
mov
mov
lret
lods
ds
push
mov
sub
adc
imul
pop
lock
dec
sbb
or
movsb
stc
loope
pop
ljmp
cmpsb
adc
or
cmpl
push
and
lcall
pop
jbe
call
xor
in
mov
lea
loope
aas
inc
inc
je
stc
push
test
jno
cs
mov
cmpsl
add
sub
sbbl
jns
or
jg
adc
xchg
aad
mov
dec
std
sub
out
sbb
mov
dec
loope
loopne
mov
push
add
xchg
inc
addb
icebp
in
inc
int3
adc
push
xor
in
cmp
push
fs
fsubr
push
das
out
mov
movsl
into
in
mov
mov
ds
stos
jmp
inc
aad
stos
cmpsl
outsl
aas
mov
ficompl
inc
pop
push
andb
fidivs
aas
adc
cmc
ret
or
jbe
push
and
je
mov
adc
push
sub
gs
xor
dec
icebp
out
xchg
call
xchg
bound
cmp
iret
pop
bnd
xchg
lea
into
mov
out
xor
xor
fistpll
add
das
fsubl
push
and
pop
shlb
mov
pop
sbb
imul
xchg
jle
enter
lret
jae
hlt
loop
adc
cld
shrl
imul
sbb
push
arpl
ret
and
adc
pop
icebp
shl
push
out
push
cltd
inc
lock
test
mov
addr16
ljmp
adc
inc
loope
mov
mov
mov
sbb
push
xor
xchg
testl
shrl
jns
mov
mov
xor
xchg
add
xor
mov
mov
hlt
scas
or
cmp
mov
jnp
jmp
add
nop
test
iret
ret
push
scas
std
not
stos
arpl
jmp
or
jmp
sbb
movsl
es
mov
mov
or
add
sub
xchg
sub
pop
mov
je
lock
push
movsb
add
mov
sbb
std
test
daa
lret
sub
mov
sub
mov
stos
ret
in
pop
repz
aad
mov
popf
pop
mov
lock
add
loop
es
test
cwtl
and
xor
clc
adc
push
jae
push
lock
fcomps
scas
xor
mov
lahf
les
mov
fidivs
push
leave
jne
push
pop
sbb
sbb
lods
jl
inc
sti
cmc
lret
aam
xchg
or
ds
pop
aaa
ja
nop
cmp
sbb
lcall
mov
fsubrl
ret
jb
cmc
jecxz
aam
iret
call
or
sbbb
hlt
fisubs
in
iret
add
push
stc
pop
pop
nop
cmp
xchg
pop
outsb
add
mov
jecxz
cmp
jg
out
inc
mov
jno
int
cs
lods
jae
cmp
out
mov
insb
jl
mov
mov
mov
push
adc
lret
pusha
cmc
daa
xchg
aaa
dec
pop
lcall
clc
jmp
imul
iret
xor
mov
mov
xchg
jecxz
fs
imul
data16
std
or
fsubr
das
inc
out
int
push
sbb
xchg
loope
fistpl
push
dec
push
decl
iret
lods
imul
push
cmp
inc
repnz
into
dec
shl
leave
aad
mov
dec
test
add
divl
cld
mov
pop
gs
mov
sbb
sarb
int3
enter
inc
les
sub
std
ja
push
xchg
cs
jmp
bound
jg
add
xor
sbb
cmp
test
rcr
sub
inc
mov
pop
or
imul
ret
or
push
inc
dec
cmp
aad
insl
mov
add
mulb
addr16
cmp
mov
lea
int3
jge
xor
and
sbb
pop
into
imul
iret
stos
xlat
dec
mov
jne
adc
jmp
ljmp
push
out
mov
movsb
adc
lcall
mov
pop
jno
lock
repz
dec
cmp
aam
js
mov
dec
repz
cmp
sub
lret
cmpsl
insl
pop
push
in
dec
aad
iret
adc
cmp
outsb
mov
dec
add
js
into
pop
arpl
enter
into
imull
and
xchg
sbb
ret
out
loop
fwait
lods
jns
fcom
cmp
mov
aad
mov
lods
js
jle
pop
rcll
mov
mov
push
mov
xchg
mov
ffree
das
lcall
js
or
push
add
pop
ljmp
scas
movsl
lret
lcall
mov
ficoms
repz
jl
add
xchg
dec
fsubl
fnsave
cmp
cmp
pop
xchg
test
sub
push
mov
jecxz
pop
pop
lret
push
push
sub
divb
xchg
ret
mov
loope
in
sub
stos
jp
mov
icebp
sub
jb
pop
mov
pop
sahf
cmpsl
mov
insl
orb
lods
mov
jno
adc
dec
xchg
in
aas
lret
in
xor
lahf
jno
xchg
mov
pop
aam
sub
push
test
stos
lret
pop
lret
mov
hlt
or
push
mov
mov
mov
les
fstl
repz
in
out
pop
shr
js
arpl
dec
xor
cmp
test
xor
mov
mov
adcl
addr16
xchg
push
call
lahf
and
jl
neg
rcl
or
test
push
loop
aam
jo
push
xchg
inc
out
inc
pop
mov
jmp
mov
out
call
movsl
xchg
cli
shrb
mov
adc
ljmp
xchg
sbb
mulb
xlat
rol
jno
andb
push
daa
in
insb
pusha
fwait
int3
push
mov
pushf
mov
loop
fisubs
or
pop
sbb
cli
aad
iret
dec
lds
or
je
push
sub
xlat
add
ljmp
mov
mov
inc
clc
sub
push
add
dec
adc
aas
loopne
arpl
pop
xor
push
mov
and
pop
cmpsb
sar
dec
std
inc
test
push
xor
mov
dec
test
aam
cmpsl
scas
and
fdiv
pop
lea
and
dec
adc
and
jnp
ja
cmpsb
into
sbb
mov
orl
insb
jnp
mov
ja
and
scas
cmp
lds
ficomps
into
popa
push
mov
mov
repnz
jmp
popa
xchg
cmp
ljmp
mov
mov
mov
rolb
or
enter
fstpt
fs
cs
mov
sub
js
fldcw
out
imul
fisubrs
push
add
push
lret
cld
add
mov
and
es
sbb
jp
fistl
adc
and
outsb
cli
jae
or
pop
test
adc
pop
push
mov
dec
pop
repnz
inc
xchg
mov
xchg
hlt
inc
sub
lret
cmpsl
daa
push
add
push
rorb
scas
inc
mov
outsl
jae
out
dec
mov
dec
cmp
out
test
mov
aad
inc
xor
leave
nop
add
lea
std
adc
in
pop
push
pushf
inc
rcl
mov
divb
push
pop
add
dec
andl
mov
pop
int3
add
mov
mov
push
jno
fiaddl
lret
xor
jbe
xor
cltd
sar
push
dec
sbb
inc
mov
inc
loopne
js
stc
pop
cltd
lds
je
mov
and
and
pop
mov
jmp
jg
dec
inc
inc
std
or
xor
imulb
inc
mov
jb
fsubl
sbb
or
daa
clc
fnstenv
xchg
cli
inc
sbb
push
mov
or
and
pop
push
adc
iret
lret
dec
in
jge
loop
mov
ss
fcomps
scas
ljmp
repz
out
cli
sbb
or
adc
cmp
pop
sbb
mov
xchg
cli
dec
mov
inc
pop
out
adc
lahf
pop
popf
lret
inc
dec
aas
test
insl
cld
pop
or
mov
cmp
out
and
stc
pop
aam
jl
sub
xor
add
outsb
nop
mov
sub
cmpsl
xchg
push
inc
sub
das
mov
aam
clc
or
xor
adc
mov
in
enter
ret
aaa
call
jbe
ja
dec
call
loope
cmp
xchg
xchg
imul
xor
add
mov
test
stos
mov
les
into
fwait
or
rolb
push
jmp
in
pusha
mov
xchg
push
stos
les
enter
fucomp
push
xchg
popf
push
push
mov
mov
mov
push
jp
inc
cs
xchg
popa
pop
mov
leave
xchg
dec
push
jbe
sub
aad
imul
adc
sahf
xor
imul
addl
sbb
mov
or
dec
sub
in
or
pop
cld
lret
sub
push
inc
hlt
cmc
inc
mov
or
fstpt
addr16
adc
imul
sub
sbb
mov
shl
int3
scas
stos
in
ret
js
pop
das
dec
in
jbe
inc
daa
mov
sbb
out
adc
xchg
gs
sbb
fbstp
push
insl
popa
imul
in
dec
cld
ss
push
add
push
das
and
cmpb
adc
cmpsl
cs
push
xchg
jl
mov
rcl
nop
jns
jle
scas
enter
inc
sbbl
inc
call
mov
cli
inc
push
dec
push
mov
and
adc
outsb
or
imul
pop
lret
add
pop
lahf
or
orl
and
ljmp
repnz
or
adc
xchg
hlt
mov
adc
rcrb
pushf
xor
stos
lcall
jge
jmp
inc
scas
dec
cmp
aad
das
cmp
pusha
mov
out
shrb
mov
popf
repnz
xchg
add
mov
fs
cmpsl
aaa
outsb
int
rolb
mov
fcomps
out
sub
cld
jne
mov
sarl
push
pop
pop
dec
inc
push
aam
test
sti
mov
lcall
adc
pop
xlat
xchg
aaa
sub
jns
or
push
pop
fstps
jne
mov
mov
ss
in
or
stos
out
and
sarl
cs
lcall
aam
mov
pop
mov
xor
xor
adc
not
das
dec
sub
push
jne
inc
mov
and
pop
dec
jbe
sub
loopne
ret
sbb
adc
fildl
push
mov
scas
rdpmc
add
inc
fdivr
cmp
pop
inc
or
mov
loopne
sub
arpl
inc
mov
out
lcall
outsb
xor
pop
subl
xor
lret
lahf
enter
mov
push
cs
repnz
dec
mov
inc
aaa
cmpsl
hlt
movl
int3
scas
js
push
dec
enter
cmpsw
loopne
iret
sahf
outsb
clc
gs
test
int
hlt
icebp
jo
sub
cmp
js
mov
clc
mov
fistpl
cli
nop
jecxz
ret
adc
ficoml
push
push
sub
xchg
shll
xchg
imul
pop
stc
push
call
jne
mov
dec
hlt
push
ret
stos
mov
adc
dec
mov
push
test
sub
pop
aaa
xlat
divl
add
push
clc
sbb
iret
mov
xor
in
push
dec
lods
mov
and
imul
scas
jbe
fisubs
xchg
daa
mov
into
out
jge
test
adc
dec
push
rcl
mov
xchg
jmp
imul
xor
out
repz
jp
inc
inc
rclb
lea
sbb
jne
pop
scas
into
jmp
mov
and
or
xchg
sub
movsb
rcr
push
addb
xlat
xor
sub
into
pop
xor
xchg
testl
push
test
movsl
jbe
fsubrl
adc
insb
imul
sbb
into
dec
pusha
ljmp
cmp
ret
cld
int
push
scas
jg
cs
in
insb
je
pop
dec
aam
mov
pop
fcmovnbe
cmp
cmpsb
js
imul
jns
xor
lods
sbb
xchg
xchg
movsl
xor
sarb
pop
or
xchg
test
lret
cmp
imul
jl
push
into
jecxz
or
aaa
out
outsl
or
sub
aas
daa
jg
xorl
lahf
test
mov
fldl
jns
mov
imul
dec
push
cmp
out
mov
xlat
push
imul
arpl
lcall
pop
xchg
jle
mov
out
adc
aaa
std
int3
out
xchg
xchg
in
outsb
or
xor
rolb
jmp
lahf
sti
out
lcall
xchg
out
in
mov
push
out
test
shrl
pop
xchg
xchg
or
mov
clc
repz
cwtl
dec
jp
sbb
mov
lret
in
idivb
inc
xchg
leave
popf
jbe
lods
sub
inc
inc
sub
inc
int
adc
repz
in
dec
push
nop
data16
inc
gs
test
inc
sahf
jne
in
imul
fsubrs
std
test
add
pop
and
int
mov
xchg
js
in
mov
jp
cmp
aad
stc
inc
sbb
clc
mov
repnz
into
sub
push
movsb
cmpsb
lret
imul
aad
jbe
cmp
xchg
jp
in
push
mov
gs
jb
or
scas
pop
pop
lret
cli
push
orb
test
out
out
sbb
or
scas
in
cwtl
jb
mov
scas
jae
pop
int
fldl
insl
outsb
add
fistpll
ja
push
pusha
test
imul
ret
or
jnp
gs
fcomps
pop
and
cmpsl
sub
aam
mov
mov
movsl
cmp
mov
push
orb
cmp
jnp
mov
movhps
ljmp
imul
cmp
push
push
xchg
or
xchg
add
push
sbb
jnp
loope
out
mov
xchg
cli
push
xor
mov
lcall
ds
jecxz
test
test
rol
pop
or
and
push
lret
loopne
inc
add
mull
pop
cmpsb
out
mov
fs
push
inc
lret
mov
in
sarb
test
fmuls
mov
stc
ret
push
into
gs
cmp
popf
adc
pop
cmpsl
dec
test
outsb
out
dec
mov
les
mov
cs
mov
cmc
push
xorl
leave
or
aas
and
pop
addr16
faddl
cmp
jae
pop
jg
gs
mov
scas
mov
inc
and
addr16
bound
jno
out
cmp
lods
fstpt
sti
aam
and
cmc
movsl
sub
jle
lret
cli
ja
jae
pop
pop
nop
sti
cmpsl
or
popa
add
mov
sbb
jae
push
fildl
data16
pushf
lcall
jle
shl
stos
mov
test
cmc
and
mov
mov
sub
xor
in
fdivrl
sbb
or
cmp
mov
xchg
aaa
xchg
push
into
jg
xlat
jmp
push
sbb
stos
es
lea
enter
dec
pop
adc
xor
adc
clc
in
jns
ror
xchg
xchg
xor
arpl
sub
inc
jo
cwtl
out
mov
inc
into
hlt
cs
dec
xchg
xor
or
movhlps
jecxz
xor
sub
popw
inc
addb
sbb
mov
add
popa
adc
shrl
cs
and
test
mov
inc
rolb
ja
add
dec
lcall
cmp
pop
adc
dec
out
jne
js
mov
pop
and
jb
dec
pushf
jae
pop
aaa
les
and
xor
dec
jmp
stc
ljmp
out
add
or
push
xor
cld
mov
test
mov
sub
aad
cmp
add
xchg
or
jmp
push
mov
mov
push
clc
rcrl
scas
cmpsb
imul
xlat
aad
mov
ds
adc
mov
and
cld
out
push
dec
ffree
and
jo
mov
outsb
aas
ficomps
into
test
jne
sahf
cmp
sti
pop
out
jno
mov
cmp
push
clc
subl
pop
mov
xchg
repnz
adc
cmpsl
scas
jmp
lret
fildll
pop
rcrl
mov
pop
insb
repz
psrad
cli
xor
adc
in
push
sarl
rclb
fcomi
pop
aaa
add
aad
jecxz,pn
jns
pop
popf
cmp
int
pushf
movaps
mov
lret
inc
xchg
jns
pop
out
xchg
jb
ffreep
aam
push
cmc
sti
cs
push
sub
inc
pop
jbe
pushf
pop
inc
int3
fimull
jne
cmp
cltd
aaa
dec
movsl
inc
in
rcrb
inc
test
mov
push
sub
enter
sub
jg
xchg
push
mov
xchg
enter
outsl
pushl
in
les
pop
cmpsl
inc
iret
fucomi
ds
clc
or
mov
add
vxorpd
xchg
out
push
pop
arpl
test
xchg
sub
push
fs
js
imul
ret
xlat
out
push
hlt
shll
pop
popa
add
or
mov
push
or
rcl
mov
push
mov
inc
push
adc
fwait
jecxz
fisubrl
inc
int
repz
push
mov
lret
cld
adc
xchg
negl
or
or
mov
adc
inc
fsubrp
xchg
ret
sbb
jmp
dec
xor
and
add
ss
aam
aaa
daa
mov
xchg
mov
idiv
outsl
xor
movsl
pop
ret
fimull
out
imul
lret
xor
dec
hlt
and
inc
mov
mov
fsubs
mov
jns
call
cmp
or
out
xchg
inc
hlt
fnsave
or
jl
das
sti
fdivrl
fisubl
ljmp
mov
cmc
mov
call
jg
in
mov
or
xchg
lds
xor
adc
sbb
pop
adc
add
sbb
xor
dec
fs
and
pop
lock
or
mov
xor
sarb
jno
test
ret
subl
mov
pop
or
sub
push
mov
movsb
in
fidivl
hlt
outsl
push
int
cmp
lods
cld
fmul
rol
test
lret
decl
rcr
pop
sub
adc
aam
mov
sbb
pop
or
popa
add
bound
repnz
les
push
aas
dec
js
jg
rcll
orl
popa
sbb
test
jns
icebp
jmp
cmp
mov
jne
lea
mov
jbe
cmp
jbe
adc
dec
mov
mov
out
sbb
clc
mov
push
fimull
xchg
adc
clc
cmc
shlb
in
adc
cld
inc
rcl
mov
push
das
rcrl
xlat
xor
pop
jb
adc
xchg
xchg
mov
pop
and
sbb
outsl
lahf
lret
daa
in
mov
lret
fdivl
inc
stc
shlb
adc
sahf
inc
jnp
test
cmc
stos
shr
push
xor
dec
test
pop
and
fcmovnbe
push
dec
scas
lock
ret
out
icebp
mov
test
push
notl
enter
rolb
inc
and
mov
inc
jmp
out
dec
mov
ret
addr16
aad
les
sub
mov
add
push
test
mov
xorb
sub
mov
aad
arpl
sbb
dec
push
mov
lods
push
into
ljmp
repnz
or
fdivs
shr
cmp
sub
int
addr16
faddl
test
out
imul
sub
incl
dec
je
cmpsl
push
sub
aam
jno
xchg
inc
cmpsb
sub
xlat
sbb
pop
sbb
out
fistl
out
iret
loopne
xchg
adc
add
outsb
ss
enter
ficompl
mov
imul
add
xchg
and
das
idivl
mov
out
adc
pop
adc
mov
loopne
xchg
xchg
cwtl
adc
mov
js
add
repz
movsb
into
or
jg
in
add
mov
cmp
out
xlat
or
pop
rcr
jbe
mov
pop
inc
and
inc
fs
jg
sbb
gs
aaa
cs
pusha
lret
sbb
jecxz
mov
pop
inc
mov
mov
xchg
jp
les
sub
out
stos
cmp
in
push
dec
test
jo
mov
mov
ror
stc
mov
add
outsl
nop
shll
retw
pop
push
and
in
aas
fadds
push
out
mov
mov
pop
loop
repz
cs
and
call
loopne
inc
pop
mov
pop
pop
jge
sbb
js
stc
cld
jg
test
push
call
mov
cmpsl
cmp
lret
test
repz
mov
dec
cmp
sub
nop
fsubrs
xchg
push
aam
xor
mov
adcb
bound
shlb
and
dec
pusha
iret
adc
bound
sbb
shll
test
jbe
into
ja
aam
adc
test
jecxz
adc
movsl
scas
jg
fisubl
mov
ret
and
je,pn
scas
ret
jbe
int3
stc
shll
popf
xchg
cld
mov
ljmp
jno
cmp
cmp
sbb
es
ror
ficoms
push
hlt
xchg
repz
push
ja
pop
into
int3
mov
fsubrs
or
mov
andb
lds
test
outsl
imul
pushl
hlt
push
adc
adc
lret
es
adc
js
sar
mov
in
mov
fildll
repnz
not
sbb
fisttpll
movl
repz
push
rorl
add
ds
sub
xchg
xchg
xchg
pop
fcomps
add
pop
push
xor
mov
push
push
lea
lcall
sub
outsb
push
mov
or
in
imul
pop
pop
push
mov
into
repnz
inc
cmp
pop
rcl
outsl
xor
inc
dec
mov
xor
sub
arpl
mov
rol
inc
inc
mov
xchg
push
inc
and
call
inc
jno
mov
pop
hlt
sbb
enter
mov
es
inc
popf
inc
outsl
and
daa
ret
dec
cmpsl
fcomps
cmp
or
jnp
stos
int3
cmp
jp
movsl
push
in
inc
fisubrl
sub
pop
je
movsb
out
and
mov
movsl
dec
cmp
enter
int
lret
imul
sub
mov
push
dec
ljmp
data16
mov
cmpsl
hlt
adc
inc
xor
pop
cmpsl
push
add
jbe
or
cmp
pop
daa
cmc
jp
add
xchg
mov
in
lret
dec
andb
mov
dec
jne
test
cmpsb
xchg
outsl
inc
imul
add
mov
repz
out
mov
loopne
fdivl
iret
jo
loop
jecxz
adc
jno
out
push
mov
push
js
or
lret
sbbb
es
lcall
rcll
sub
arpl
iret
mov
movsl
mov
je
cmc
fildl
and
dec
fcoml
aaa
into
nop
pop
loope
cwtl
negb
hlt
cltd
aam
fsub
clc
xchg
and
or
cmpsb
mov
je
mov
and
jnp
sarl
inc
pop
ja
lods
insb
cli
pop
popa
call
cltd
and
fs
inc
pop
ja
push
testb
adc
call
loope
cmc
lcall
data16
lret
loop
nop
loopne
mov
test
negb
push
mov
mov
push
dec
xlat
ret
xor
scas
aas
pop
into
push
fisubs
xchg
xor
jmp
xorb
adc
push
cli
xchg
adc
movsl
aam
cld
cmp
mov
jbe
adc
mov
das
addr16
xchg
push
insb
add
out
add
aad
pop
call
dec
or
sub
orb
int3
xchg
js
add
not
mov
and
and
mov
or
inc
movsl
aas
shll
cmc
push
ljmp
insl
mov
in
xchg
cmpsl
movb
mov
fistpll
adc
add
aad
repz
loope
push
not
push
dec
inc
subl
addr16
mov
mov
jnp
outsl
popa
int3
xchg
sarl
stc
inc
iret
xchg
lahf
add
movsl
ds
inc
or
adc
push
aam
outsb
mov
push
cmc
or
incl
std
fsub
cs
imul
test
adc
and
rcr
addl
mov
mov
mov
ja
mov
repnz
push
ficoms
xchg
or
push
mov
movsl
sbb
push
add
cs
fimuls
dec
inc
aas
mov
xor
js
xor
jecxz
xlat
out
pop
push
aam
fs
dec
mov
cmp
jecxz
push
jne
lods
fimuls
push
stc
lods
sbb
out
mov
sub
ljmp
inc
inc
mov
pusha
adc
xchg
mov
push
mov
or
sub
push
mov
xchg
stos
and
rcll
or
cmpsb
xor
test
push
jmp
insb
mov
jp
cmp
mov
ljmp
clc
inc
push
loope
push
add
push
mov
adc
movb
shl
out
stos
shr
ja
bound
dec
lret
ficompl
nop
pop
mov
pop
int
mov
adc
inc
xchg
sbb
das
dec
cmpl
xor
add
movsb
mov
jp
adc
clc
push
jnp
sub
into
mov
aam
mov
sbb
clc
test
stos
aas
or
jle
add
sarl
fstps
and
pop
jo
nop
xchg
imul
lret
mov
mov
mov
dec
cmp
dec
pop
xchg
int
nop
rcrl
gs
inc
fs
data16
pop
cmp
hlt
push
lahf
push
xchg
inc
mov
test
sub
fcmovbe
jne
and
lods
adc
push
inc
mov
xlat
mov
xor
adc
int3
mov
cli
dec
les
inc
pushf
ret
xchg
fisubrl
pop
xor
sbb
mov
xchg
mov
mov
cmp
shll
icebp
data16
imul
loop
mov
in
popf
cmpl
mov
ret
push
aam
or
mov
sbb
inc
inc
outsb
jno
icebp
std
mov
xchg
mov
sub
sbb
std
cmpsb
inc
push
adc
and
lds
cli
int
outsl
add
test
movsb
dec
pop
repz
aas
mov
inc
sbb
pop
leave
daa
lea
push
sbb
lock
dec
mov
or
cli
data16
scas
fcmovnbe
or
fisubs
jno
jb
outsb
lret
xor
sub
dec
push
push
test
loop
push
in
movsb
into
sub
pop
cmp
lods
dec
sbb
cmpsb
scas
frstor
push
cmpps
les
not
xchg
ret
lea
sbb
int3
outsb
mov
pop
in
popf
addr16
int
push
mov
xchg
pop
xchg
adcb
cld
sarb
xor
jp
inc
xchg
inc
mov
mov
sbb
cmpsl
push
adc
jmp
out
xchg
inc
inc
xchg
jae
mov
repnz
dec
cmpsb
pop
lret
cmp
pop
pop
push
in
lods
je
int
lahf
hlt
sbb
test
sti
adc
test
fcom
cmc
out
shll
std
mov
dec
ja
cwtl
sub
lds
jecxz
es
aam
dec
xchg
jg
adc
mov
out
divb
mov
rcrl
pop
and
js
int
or
xchg
mov
push
push
add
lret
add
mov
stos
mov
out
push
icebp
fadds
pusha
je
js
and
daa
xor
icebp
cmc
pop
out
adc
mov
xchg
mov
mov
addr16
into
roll
mov
pop
ret
movsl
mov
pop
lods
and
mov
mov
pop
push
sub
out
jae
hlt
int3
aaa
sbb
push
pop
push
mov
add
pop
hlt
add
mov
pop
lret
arpl
push
sub
sbb
lea
inc
adc
adc
mov
mov
jmp
int3
dec
mov
divb
sub
js
repz
and
xchg
es
dec
dec
mov
sub
popf
xorb
dec
pop
leave
repz
out
jg
xor
mov
dec
mov
cwtl
mov
sbb
push
xchg
daa
lret
pusha
pop
xor
adc
lret
sub
nop
sarb
pop
cmpsl
fidivl
icebp
insl
mov
push
and
xor
lcall
push
icebp
cmp
or
pop
xor
mov
lret
test
add
fsubl
lods
pop
mov
add
imul
leave
push
push
rcll
pusha
js
push
lahf
cs
pop
lods
leave
cmp
lret
or
ljmp
sbb
jns
sbb
int3
ds
push
add
mov
pop
mov
dec
push
lahf
cwtl
push
inc
push
xorb
xchg
shrb
mov
aad
out
pop
xor
pop
xlat
or
gs
repnz
lock
pop
jmp
push
int3
out
outsb
dec
jns
hlt
xchg
stc
push
sbb
sub
xlat
xlat
dec
or
cmpl
cmc
aam
inc
in
repnz
mov
das
or
xchg
cwtl
pop
pop
jmp
ss
inc
mov
and
fs
nop
push
sub
mov
es
mov
les
push
xchg
in
rcrl
sub
or
pop
lret
mov
jp
xlat
push
and
mov
adc
and
mov
gs
ja
xchg
xor
jb
pop
rolb
out
lock
fildl
fcomp
and
test
mov
les
cltd
sub
mov
icebp
fwait
xchg
lods
inc
fld
js
cltd
push
ss
add
call
or
not
ja
xor
jle
out
adc
int
lahf
pop
xor
mov
sub
outsl
out
clc
cmp
push
jl
jecxz
cltd
imul
add
jne
cmpsl
cmp
enter
lret
stc
add
or
js
sub
jle
jl
daa
notl
mov
mov
mov
int
lds
xchg
xor
jae
jns
dec
mov
inc
fisubrl
cltd
movb
insl
fdivrl
jnp
aam
add
inc
push
cs
inc
shl
inc
mov
push
dec
lcall
addr16
insb
add
push
je
inc
and
mov
cmpb
pop
or
dec
data16
and
inc
fmuls
je
dec
es
int
mov
inc
jle
sbb
std
xchg
adc
paddw
adc
jecxz
push
jl
inc
bound
out
ret
pop
jp
or
cs
int
hlt
fsubl
mov
in
xchg
insl
stos
sbb
or
je
sbb
aas
mov
jbe
xchg
cmpsb
out
mov
or
sub
imul
dec
out
orl
aam
ret
test
out
sub
push
fptan
ljmp
adc
shrl
add
jmp
mov
cltd
stos
repnz
mov
adc
add
cmp
ja
jge
aad
pop
and
insb
in
negl
dec
mov
icebp
mov
inc
out
loope
mov
ja
xchg
push
jge
jno
ss
jo
movsb
insl
xchg
test
cmpsb
jnp
push
and
sbb
adc
mov
cmpb
inc
sarb
sahf
test
in
popf
and
pop
pushf
call
cmp
das
testl
pop
arpl
leave
call
dec
cmp
mov
stos
insl
stos
sbb
aas
mov
ret
jns
cmp
loope
jmp
out
push
jb
or
add
sub
push
inc
or
mov
in
jbe
stos
aaa
adc
dec
in
sub
push
inc
fdivs
outsb
pop
test
movl
out
push
xor
jne
or
lock
rorl
popf
fisubrl
mov
mov
add
push
dec
stos
jnp
mov
test
mov
into
fcoms
in
mov
push
gs
mov
pop
pop
xor
lds
sti
or
aam
popa
push
fcmovbe
ss
adc
and
in
cld
mov
jge
stos
adc
mov
sbb
nop
aaa
test
inc
xchg
imul
push
mov
rorl
push
or
push
loope
sti
inc
mov
fstps
pop
cmp
mov
loop
and
dec
out
outsb
movsb
mov
ret
pop
leave
imul
jae
jmp
lds
sub
fisubs
mov
jno
pop
xor
adc
mov
pushf
cwtl
adc
or
mov
pusha
mov
xchg
or
push
sarb
sub
or
loopne
and
or
test
in
stos
out
pop
push
xor
mov
fdivrs
inc
lahf
stos
addr16
es
rcrb
insb
lret
movsb
in
adc
jl
loopne
sbb
test
rcrb
movb
push
xor
sub
or
shr
enter
shll
sub
mov
inc
sbb
in
in
in
add
negb
push
mov
movsl
mov
adc
push
or
sub
pop
push
movsb
mov
xor
ret
mov
js
jge
adc
mov
xchg
xor
push
int3
insl
push
cwtl
test
xchg
push
pop
dec
pop
pop
js
popa
mov
jnp
jbe
mov
lcall
lods
mov
cmp
ds
into
xor
sbb
cmp
pop
and
mov
xor
pop
push
fcoms
shlb
into
mov
mov
lret
sbbb
lret
adc
out
jae
fsubr
fs
into
mov
xchg
mov
in
and
es
add
test
push
ficoml
pop
inc
aam
push
pmovmskb
clc
repnz
je
stos
sbb
push
mov
fmulp
outsl
rorl
add
pop
ja
stos
sbb
js
lret
pop
imul
pop
shlb
lcall
mov
push
movsl
out
test
xor
pop
xchg
cmp
loopne
sbb
adc
ficoml
repnz
push
mov
ret
jnp
ds
inc
and
fcmovbe
push
scas
fbld
xchg
cmpsl
lods
add
sub
mov
loopne
nop
out
jp
je
iret
lret
pop
inc
aas
js
ss
ror
mov
int
mov
inc
xchg
mov
dec
shll
ss
mov
dec
aad
pop
xor
shl
mov
sub
xchg
jns
mov
fld
cmp
stc
pusha
mov
sub
loopne
ds
mov
jno
ljmp
mov
sub
shrl
add
lahf
mov
fbstp
add
sub
or
repz
push
sub
iret
sahf
pop
xor
pop
xchg
push
push
mov
jbe
ficoms
fwait
jl
scas
aad
xchg
leave
inc
mov
push
pop
bound
and
cmpsb
dec
out
dec
repnz
jge
sti
adc
jns
or
lret
arpl
lcall
push
js
jmp
mov
mov
in
xchg
or
sub
movaps
push
push
sub
sbb
inc
imul
rcl
cmp
cld
decb
enter
decl
jno
pop
and
movsb
sub
pop
imul
ds
xchg
or
out
ficoml
mov
xor
stc
dec
enter
fisubl
push
out
ds
or
inc
fnstcw
mov
mov
enter
cltd
aad
arpl
cmp
inc
js
sub
dec
fsubl
ja
push
jb
push
mov
push
mov
rorl
xor
popf
pop
arpl
mov
rcrl
inc
test
mov
mov
loope
jbe
sbb
outsl
mov
das
inc
inc
lock
inc
ljmp
xchg
es
out
stos
mov
dec
mov
push
stc
icebp
cmp
and
and
cli
push
ret
add
scas
pop
or
loopne
mov
sub
lods
pop
cs
lcall
xchg
rcrb
xchg
mov
add
arpl
sub
sub
pop
push
shlb
ljmp
or
jo
push
scas
imul
xor
pop
pop
pop
sbb
cmpsl
in
std
push
insl
add
pusha
lret
jo
pop
push
imul
or
cmpsb
push
out
fidivrl
add
movsb
outsl
pop
xchg
push
sbb
hlt
scas
push
xchg
mov
sbb
lock
insb
xchg
lds
inc
mov
es
jns
jbe
sti
xchg
lgs
xchg
mov
pop
in
jnp
dec
inc
fwait
test
lret
insb
faddl
and
add
or
daa
push
jp
mov
cmp
jbe
and
jo
shr
sub
xor
jmp
dec
mov
mov
push
test
cmp
pop
push
pop
popf
lea
in
shlb
scas
and
jbe
mov
adc
push
xchg
xchg
jbe
xchg
mov
sub
cltd
fdivs
push
push
clc
addr16
or
loopne
in
dec
mov
ret
dec
mov
popa
popf
push
push
test
jbe
jmp
push
adc
xchg
mov
push
inc
stc
test
jne
into
int
jp
or
pop
add
and
push
mov
mov
mov
inc
das
lea
sub
inc
and
movsb
and
insb
scas
and
jae
pusha
dec
les
pop
mov
jbe
getsec
in
inc
sub
dec
insl
pop
mov
cmpsl
pop
mull
sub
std
inc
sbb
sbb
pop
mov
and
je
sti
pusha
and
pop
cmp
pop
mov
jp
jle
movsl
lret
xchg
xor
out
insb
mov
sub
and
test
lcall
xchg
xchg
push
inc
and
dec
int
lret
push
pop
pop
push
pop
in
push
mov
inc
pop
xchg
mov
and
mov
aas
cld
dec
data16
cmp
aaa
pop
mov
notl
int
daa
or
aas
pop
movl
cld
push
dec
push
push
cltd
outsb
cs
mov
ficoml
out
outsb
fimull
jb
dec
mov
out
fs
sub
pop
cmp
popf
scas
out
dec
add
push
insl
mov
mov
lods
sub
push
cmp
test
in
cmpsl
mov
repz
bound
iret
js
insl
es
adc
add
loope
fistps
or
push
mov
je
pop
lret
mov
popf
push
ficoml
xchg
imul
out
push
xor
cwtl
jb
mov
test
sbb
sub
ret
xchg
mov
xchg
add
int3
mov
shrb
scas
out
jno
pop
sbb
aad
or
cmpsl
jecxz
into
pop
loope
subl
sub
push
scas
lret
out
lea
mov
push
jge
dec
jle
fistl
sbb
lret
sub
jns
cli
aad
aas
repz
icebp
mov
push
xor
int3
mov
jl
insl
sub
mov
cmp
mov
mov
cmp
fldenv
push
add
add
dec
push
and
mov
jns
jno
imul
adc
inc
pop
aam
insb
jge
out
push
xchg
mov
mov
icebp
and
mov
int3
adc
xchg
dec
dec
or
daa
xor
dec
cwtl
jge
sbb
shlb
aad
ficoms
mov
add
mov
jnp
insl
dec
shrb
mov
cmp
lcall
adc
sti
insb
mov
and
inc
xchg
or
pop
push
cmp
roll
repnz
pop
mov
dec
stos
mov
ss
push
fistpl
mov
xor
pop
in
adc
mov
gs
inc
lret
enter
jb
inc
pop
mov
cmp
jo
cmp
repnz
shrl
xor
mov
std
sbb
dec
movsb
dec
and
cmp
mov
xchg
nop
sbb
js
inc
mov
mov
cmp
inc
iret
insb
dec
mov
int
pop
in
pop
xchg
pop
xor
repz
xchg
fst
inc
ds
int3
std
pop
repz
adc
mov
mov
push
and
mov
fldcw
fadd
out
rcrb
or
int
sub
dec
into
mov
push
jmp
rorl
cmpsl
inc
and
xchg
cmp
lret
mov
push
into
movsb
mov
mov
push
inc
or
stc
sbb
xor
pop
ja
sub
popf
push
int
das
scas
cmp
dec
sbbb
lods
xchg
stos
inc
cmp
inc
push
fwait
mov
or
mov
call
jge
ss
xchg
cmp
aam
repnz
or
nop
xchg
mov
push
dec
add
jge
jecxz
loop
test
mov
out
push
jl
lods
hlt
jle
ljmp
jbe,pt
push
cmp
mov
pop
pop
rcl
pop
or
cmp
iret
negl
scas
dec
push
and
pop
xor
leave
jae
daa
adc
jle
int3
mov
incl
insl
roll
repz
add
les
push
sbb
xor
js
or
xor
orb
xchg
xchg
in
cmp
and
push
adc
je
aad
cli
xor
xchg
fwait
adc
call
and
sbb
mov
sub
je
lcall
cmp
fdivs
clc
out
and
or
testl
in
add
or
aad
cli
mov
aam
iret
es
int3
into
mull
getsec
std
test
pop
out
xchg
mov
jecxz
xchg
roll
pop
push
xchg
pop
lahf
inc
mov
jbe
in
sub
rorb
mov
gs
rcl
cwtl
test
push
xor
xor
loope
int
xchg
cmc
nop
add
mov
add
mov
movsl
jb
mov
xchg
fs
and
push
pop
int
mov
test
pop
and
jns
ret
jno
addr16
stos
in
test
mov
mov
icebp
or
mov
mov
outsl
clc
mov
fwait
add
jo
les
adc
out
cs
cwtl
in
mov
pop
cmp
xchg
outsb
dec
add
adc
mov
hlt
sti
add
pop
mov
jge
sbb
dec
xchg
icebp
int3
pop
pop
mov
xchg
in
xchg
mov
aad
sub
aam
mov
dec
xchg
loope
sub
dec
sub
adc
shll
cmp
aad
cli
lret
stos
mov
sahf
sbb
add
push
sbb
cmpsb
mov
out
ljmp
adc
mov
repnz
popf
gs
or
add
enter
cld
cmp
incl
mov
aas
dec
cmp
inc
jns
or
or
dec
lahf
xchg
lock
jb
adc
imul
ror
mov
sub
js
or
push
cli
mov
es
mov
fs
add
lea
sbb
add
jp
fldcw
cwtl
or
push
or
push
xchg
xor
add
test
in
and
cli
dec
xchg
inc
jnp
and
in
int3
xor
cmp
mov
and
aaa
hlt
jb
ds
sub
jmp
xchg
lahf
sub
test
pusha
in
loop
pxor
call
lods
mov
rcl
push
mov
push
std
cltd
pop
mov
insb
lea
jl
inc
int3
aaa
cmpl
imul
jae
test
pop
mov
clc
push
xchg
sahf
scas
xchg
lret
subb
add
imul
ret
and
loope
dec
aam
mov
push
into
cltd
xor
mov
fildl
add
negl
in
aaa
mov
scas
orl
out
mov
mov
dec
xchg
add
xchg
jle
fadds
sahf
stos
or
fcom
mov
das
fwait
clc
jne
out
rcl
xor
imul
mov
add
jno
cltd
paddq
mov
aam
adc
cmp
cmp
add
icebp
jecxz
mov
testl
cmp
inc
add
inc
rcrb
mov
ja
in
imul
sarb
dec
lock
fistpl
rcl
and
ss
mov
sahf
mov
push
inc
popf
jnp
scas
fisubl
nop
sbb
mov
cmpsb
psubq
inc
add
cmp
sbb
aam
xchg
mov
loope
push
arpl
outsl
push
inc
movsl
sub
add
iret
or
insl
add
mov
push
cwtl
not
push
mov
lret
clc
push
shrl
decb
lahf
lret
cmpsb
xchg
gs
mov
es
push
push
aad
push
pop
jnp
mov
cmp
orl
mov
push
rolb
pushf
pop
adc
mov
stos
enter
sub
in
inc
or
jne
fchs
cmp
cmp
pop
stc
and
and
push
add
pop
cmp
int3
mov
fidivl
ficomps
shlb
dec
leave
push
push
inc
sahf
jae
add
push
inc
pushf
mov
lret
test
das
jge
icebp
dec
cmp
xchg
fnstcw
mov
into
fimuls
insl
fs
mov
ret
xor
and
cmp
repz
jmp
rcll
aam
mov
fldenv
addr16
or
pushf
inc
adc
test
rcr
enter
xlat
outsb
pop
push
cmc
mov
lret
xor
sbb
fstps
xchg
mov
add
outsl
dec
loope
cs
shrb
andb
movsl
stc
xchg
lahf
int3
mov
jno
sub
mov
loope
xchg
dec
dec
xor
add
push
pop
push
push
jge
aaa
xlat
mov
xchg
mov
or
fxch
mov
push
fisttpl
test
sub
dec
in
call
mov
xor
mov
xchg
insb
cmpsb
inc
fs
pop
and
jmp
and
pop
cli
shll
pop
stos
popa
sahf
shll
mov
das
test
jp
sbb
mov
push
adcb
ret
mov
jmp
ljmp
fcmove
sub
push
adc
cmp
push
popa
adc
mov
out
push
dec
js
cmp
xlat
dec
and
ds
ja
mov
jp
test
rcrl
inc
sub
xchg
ja
pusha
shlb
adc
ss
mov
or
mov
icebp
stc
jecxz
jnp
leave
push
repnz
sbb
pop
inc
inc
in
pop
or
dec
mov
xchg
add
rorb
enter
jp
mov
xchg
inc
xchg
xor
rcl
or
out
inc
mov
dec
rorl
movsl
outsl
push
jg
jmp
inc
mov
push
cwtl
or
jbe
and
sbb
jnp
push
int3
xchg
insl
sub
enter
arpl
jnp
lods
out
cwtl
dec
js
cmpsb
imul
lahf
int
imul
inc
out
xchg
fs
adc
andl
les
ss
es
xor
lock
dec
jecxz
test
push
xchg
and
das
fstl
nop
jl
jnp
jo
gs
idivb
std
cmpsl
enter
test
dec
push
jnp
sbb
mov
icebp
into
js
push
jge
roll
cmpsb
add
mov
mov
or
mov
inc
sbb
aam
movsl
dec
ret
movsb
cli
cmpsl
xchg
inc
ret
inc
xor
pusha
leave
add
ljmp
pop
out
push
adc
test
xor
hlt
xor
mov
pop
inc
es
fwait
int3
lea
aaa
xor
sbb
aaa
ret
fistpl
ds
sub
adc
stos
mov
cltd
cmpsb
std
dec
imul
icebp
insb
jge
addl
cltd
leave
dec
insl
ljmp
mov
aaa
mov
or
sbb
fsubl
test
cmp
push
dec
sub
jbe
push
nop
fst
cs
jb
movsl
adc
cwtl
sti
mov
xchg
dec
negl
or
data16
dec
pop
test
fsubr
push
or
jl
jle
jecxz
fs
lret
outsl
jae
xchg
pop
rorb
leave
push
shrl
icebp
and
es
dec
lods
mov
jl
push
jge
mov
pop
test
sub
adc
addb
adc
push
cmpsb
mov
je
or
in
sar
sub
fistpl
lret
or
jmp
add
arpl
adcb
mov
xchg
lret
mov
mov
mov
test
dec
lods
lret
repz
orl
add
imul
fsubrl
dec
pop
dec
dec
sahf
pop
fisubrl
xchg
push
mov
clc
or
rolb
loopne
aam
push
jmp
jne
sbb
push
inc
xchg
out
in
add
insb
hlt
mov
or
sbb
scas
mov
int3
ret
mov
push
int
or
std
sub
inc
mov
clc
jne
add
mov
lock
aaa
add
push
call
negl
push
test
imul
popa
xor
mov
or
adc
rolb
push
cld
and
push
xchg
push
enter
scas
sub
fstps
in
or
sbb
xchg
das
dec
ljmp
or
insl
push
pop
popa
aam
lret
mov
mov
nop
mov
loope
add
mov
repnz
pop
push
rorl
loope
and
out
imul
ror
jne
mov
jge
push
sti
in
arpl
cld
or
or
das
out
adc
jne
and
push
insl
push
adc
or
mov
adc
cmp
jnp
repz
jecxz
int
and
cmovnp
jo
pop
std
ljmp
clc
or
adc
leave
xor
pop
cwtl
das
je
add
scas
ret
stos
lret
or
not
lods
aas
shl
sbb
les
pop
pop
pop
mov
sbb
cmp
gs
cmpsb
arpl
mov
mov
xlat
test
cmp
dec
pop
leave
aam
xchg
sbb
inc
je
xchg
add
jo
mov
mov
sbb
mov
mov
daa
dec
test
push
repnz
sbb
or
call
xlat
out
icebp
dec
cmp
jbe
data16
push
push
popa
lods
lcall
daa
and
clc
mov
add
lea
rcl
pushf
jge
push
enter
jbe
sbb
mov
fistps
xor
dec
sub
adc
arpl
inc
fnsave
dec
lahf
adcb
popf
rclb
jg
push
xlat
cli
cmp
inc
fst
xor
jle
dec
mov
xchg
push
push
xchg
jo
ror
cmova
sub
or
mov
adc
ret
sub
or
movsb
pop
xchg
loopne
sub
das
xor
push
out
lcall
inc
into
scas
add
adc
mov
dec
push
adc
mov
outsl
stos
mov
inc
add
xchg
mov
iret
mov
ror
mov
lods
mov
jle
inc
stos
add
xlat
fst
ret
or
xchg
es
insl
pusha
pop
test
icebp
jae
rolb
push
mov
inc
jecxz
into
or
jno
int
inc
jne
adc
pop
pop
mov
lcall
push
nop
insl
pushf
ds
dec
shrl
push
int3
add
adcl
mov
ss
jmp
sub
jae
cmpsl
sbb
jbe
lret
hlt
xchg
rcrl
push
push
push
mov
into
stos
cmp
rclb
pop
enter
dec
and
repz
sahf
or
xor
jbe
ret
mov
cmp
jg
xor
enter
dec
pop
cmpb
jge
repz
dec
inc
faddl
aam
in
out
adc
mov
test
cld
sbb
push
pop
add
jle
aad
xor
push
push
outsb
mov
push
dec
push
hlt
repz
popf
aas
mov
pop
mov
out
sub
mov
cmpsb
std
subl
mov
mov
jbe
rolb
movsl
test
cmp
adcb
aas
jne
inc
jmp
lods
push
xchg
daa
mov
aam
adc
inc
lds
dec
nop
ja
iret
push
lret
mov
fisttpll
stos
jg
push
jle
push
cmp
mov
inc
cmp
jp
pop
aas
dec
mov
lret
imul
jmp
cmpsl
call
adcl
mov
push
pop
rcrl
mov
or
xchg
push
sub
push
stos
out
xchg
pop
push
into
popa
fucom
add
mov
dec
sbb
dec
fwait
inc
lds
xchg
or
xlat
or
mov
aam
cmc
mov
test
sti
mov
sbb
es
dec
push
mov
jecxz
call
or
fistps
jecxz
into
mov
roll
pop
jo
sbb
pop
cltd
stc
movsl
jecxz
cmp
pop
mov
popa
inc
sub
xchg
stos
push
into
sbb
push
je
int3
out
inc
xchg
push
into
aam
cld
fwait
xchg
and
js
andl
add
mov
rclb
jle
adc
mov
xchg
mov
iret
stos
push
xor
into
iret
add
push
out
cmc
dec
les
scas
or
js
sahf
test
loopne
mov
pop
xor
negl
dec
xchg
xor
jbe
mov
clc
shl
arpl
imul
mov
mov
lds
cmp
mov
stos
lret
movsb
out
std
test
mov
jle
lcall
cmpsl
sub
in
rcl
dec
int
push
adc
sub
ss
data16
insl
jg
xchg
fcompl
imul
push
mov
sbb
adc
xchg
mov
outsl
je
xchg
and
iret
add
shr
aaa
xor
std
popf
jno
pop
jl
adc
in
pusha
rcl
jg
loop
jo
add
add
xchg
shr
mov
test
cmpsl
movsb
dec
mov
mov
mov
out
popf
dec
insb
fcomps
addr16
mov
sbb
sub
jnp
lods
out
in
push
lahf
jo
adc
shlb
in
add
je
jecxz
cmp
nop
les
sub
mov
and
mov
test
insb
lret
lahf
cmpsl
mov
fisubs
or
push
outsb
lret
xchg
cmp
cltd
push
xchg
lea
sub
ret
ret
inc
xlat
insl
loop
xchg
int3
iret
jno
lea
hlt
push
push
push
push
xorl
xchg
inc
cwtl
lods
mov
and
cmpsl
aam
pop
xchg
push
jmp
adc
loop
xor
into
lds
fmulp
xlat
inc
sahf
insl
test
ja
jmp
out
cmp
adc
sbb
sub
cmpsl
pop
mov
adc
fadds
pop
ljmp
sarl
lret
add
outsl
add
xor
rorl
adc
mov
cmp
mov
adc
jmp
test
or
inc
jecxz
je
adc
jne
mov
lret
aam
std
lahf
out
ds
ljmp
xor
jae
push
pushf
bswap
xor
add
jns
pop
aaa
iret
add
insb
std
jl
fnstsw
negl
shr
in
ret
xlat
cmovae
js
nop
mov
and
in
mov
adc
xor
dec
jae
mov
lahf
fs
test
into
sahf
mov
stos
rcrl
sbb
pop
int3
dec
xchg
outsl
outsb
add
ja
xchg
cmp
pop
xor
dec
fs
jecxz
sbb
mov
test
fwait
jg
int3
stos
enter
xlat
pop
inc
lahf
mov
mov
imul
ret
imul
enter
sub
lea
cmpsl
testl
jle
or
add
icebp
mov
fiadds
stos
shll
inc
pusha
jne
cmp
mov
int
inc
mov
icebp
jne
dec
push
jmp
push
add
popa
jnp
mov
dec
bound
inc
sbb
test
ss
mov
rcl
mov
cmp
sub
push
cltd
mov
or
inc
sti
lret
push
adc
jb
dec
loop
in
lods
xchg
mov
xchg
test
icebp
xor
test
push
lahf
xlat
ljmp
je
pushl
into
mov
lcall
push
adc
jo
jae
lret
jle
push
xchg
xor
pop
mul
mov
xchg
mov
stc
pop
jge
gs
xchg
mov
xchg
fldl
and
les
stc
xchg
sbb
or
lcall
aad
mov
pop
sahf
add
adc
icebp
pushf
in
inc
lea
clc
and
or
lea
int
jmp
stos
xchg
shrb
clc
pop
inc
xor
mov
dec
add
mov
xor
dec
pop
test
out
push
xchg
sub
int3
jno
jnp
mov
add
cld
hlt
cltd
loope
je
fs
mov
xchg
iret
clc
and
mov
and
push
out
mov
scas
mov
xchg
mov
aaa
es
push
lahf
ljmp
xor
cmp
and
pop
pop
jae
lcall
ret
notl
hlt
mov
pop
dec
pop
dec
pop
iret
xchg
movsl
sti
rcl
test
bound
xor
dec
cs
or
in
mov
imul
xor
xchg
pop
lds
xor
add
in
or
push
add
or
xchg
mov
insl
mov
aad
push
sub
repz
in
cmp
js
jae
ret
lret
mov
adc
pusha
mov
sub
mov
lret
scas
and
shlb
sbb
or
popa
addr16
or
xchg
jb
call
add
pop
xor
lcall
cld
out
push
jbe
adc
mov
pop
mov
pop
inc
cmp
bound
add
pop
and
sub
fadds
dec
inc
clc
in
xchg
sub
mov
xor
mov
sahf
inc
lock
mul
cmp
int3
sbb
push
arpl
jne
fdivl
xchg
loope
in
clc
dec
adc
sbb
nop
in
cld
cmp
mov
fldt
sbb
stos
add
push
push
push
lcall
test
or
ja
push
or
add
and
not
xchg
pushf
call
sub
or
mov
es
popa
inc
pop
lret
test
sbb
mov
cmp
aas
xor
mov
xchg
insl
push
lods
push
stos
push
mov
dec
and
jecxz
pop
dec
push
push
ret
mov
cmpsl
push
push
pop
add
inc
aaa
xchg
jne
xor
insb
ret
cmpsb
out
sarb
imul
daa
jle
sbb
stos
pusha
pop
mov
dec
testl
loop
pop
test
jbe
sbb
fdivs
cmp
or
test
test
int
xchg
xchg
mov
lret
add
jecxz
in
ds
jge
jle
sub
jl
out
int3
lret
sub
add
pop
in
mov
sbb
std
pop
xchg
movsl
sarb
dec
xlat
cmp
test
lods
test
wbinvd
loope
dec
pop
imul
jl
cmp
sbb
or
jecxz
xor
mov
push
aad
cltd
jge
or
add
or
iret
ljmp
pop
mov
push
test
pop
rcl
fs
jne
pop
add
sub
jle
inc
js
in
ljmp
lret
test
pop
out
dec
sbb
mov
lret
outsl
xor
outsb
inc
add
cld
dec
pop
xchg
sub
mov
push
cltd
movsb
cmp
sbb
cs
push
adc
jge
jae
inc
push
lods
adc
aad
cltd
push
push
imul
jp
rcrl
mov
inc
popa
scas
and
arpl
or
fildll
rorb
dec
test
cmp
out
int3
into
mov
sub
addl
sbb
pop
das
aad
mov
stos
dec
int
mov
mov
push
dec
push
pop
adc
cmp
fidivrl
mov
loope
test
pop
push
xchg
in
mov
mov
xlat
lock
push
sub
call
inc
cwtl
aad
cli
sbbb
scas
into
xchg
add
outsl
jle
mov
insl
imul
sbb
sub
push
xchg
pusha
loope
add
xchg
fadd
ss
or
add
push
imul
mov
dec
push
shlb
mov
rolb
inc
imul
cmc
jbe
sbb
data16
sub
out
jp
jns
mov
and
sti
lahf
adc
and
dec
out
lea
scas
push
lods
js
inc
adc
sarb
mov
in
pop
push
gs
int
roll
ret
es
jp
pop
ficoms
in
loop
sub
dec
stos
shrl
sbb
xor
shll
xchg
inc
adc
jecxz
xlat
add
shlb
fs
aad
pop
mov
ret
fstpt
cmp
call
in
pop
add
pop
insb
dec
dec
std
push
sbb
xor
inc
lret
inc
in
sbb
mov
movsb
out
ret
fadd
mov
jecxz
pop
xchg
sbb
and
shrl
test
xor
cld
dec
lret
insl
dec
pop
mov
dec
add
push
mov
adc
pop
aaa
fstps
jmp
in
jne,pn
fstpl
mov
mov
clc
pop
push
enter
adc
push
inc
jge
mov
pusha
aad
xchg
lahf
outsb
mov
pop
add
aam
jmp
repz
loop
xchg
test
lret
pop
sub
ljmp
rcll
in
jo
cltd
cmp
std
into
xchg
lods
jge
pop
ret
iret
sub
and
xchg
test
shrb
adc
jbe
cmpsb
sub
ds
lds
daa
in
cltd
fnstenv
mov
lods
xor
aam
pop
cmp
or
fwait
cmpb
xor
ret
ja
mov
mov
pop
bound
pop
or
int
or
dec
ss
pop
imul
dec
fistps
and
int3
rolb
or
sahf
pushf
dec
sbb
sbb
or
and
jmp
pop
inc
mov
lods
int3
push
js,pn
aam
and
pop
sub
sub
mov
mov
sahf
xor
jns
call
mov
adc
popa
test
xchg
add
in
mov
sub
icebp
push
dec
ret
or
sub
jns
jecxz
mov
xlat
ja
jg
dec
enter
adc
add
inc
cmc
movsl
lock
and
outsb
lods
pop
or
ret
mov
into
inc
cmp
sbb
cwtl
xchg
daa
fisubrl
addl
dec
jmp
lret
pop
cmp
ljmp
mov
je
mov
push
aad
sub
iret
jg
std
sbb
mov
adc
xor
or
aam
in
mov
mov
mov
xchg
movzbl
aam
stc
push
mov
scas
push
movsb
into
cmp
lcall
jp
inc
out
push
push
shll
repz
imul
sub
divl
rcrb
cmpsb
pushf
aam
fldl
dec
cli
lds
cltd
dec
jl
fbld
add
xor
hlt
sub
aas
jmp
xor
ror
stos
cmp
shrl
in
jl
or
lds
into
inc
xchg
adc
imul
and
cs
je
cmc
dec
jbe
ja
xchg
sbb
push
ficoms
leave
call
inc
adc
out
mov
and
push
xchg
xchg
shrl
inc
adc
adc
xchg
cmp
push
std
sbb
mov
mov
ja
xchg
pop
dec
das
sub
movsb
xor
daa
lret
addr16
ficomps
std
jns
dec
pop
fwait
xchg
call
xor
fists
into
out
sar
push
enter
pop
pop
ret
mov
inc
fcmovbe
aaa
xor
sub
addr16
outsb
xor
dec
push
test
mov
push
fadds
dec
xchg
and
pop
es
dec
mov
ret
and
cld
push
shll
rorl
or
std
and
mov
mov
xor
shrl
cmp
push
jl
nop
dec
jecxz
add
xchg
fimull
into
xor
push
sub
cs
ud0
dec
mov
xor
data16
pop
inc
mov
stc
adc
jmp
adc
push
loope
and
je
repz
xchg
lea
lret
or
in
add
xorl
into
sahf
and
add
jns
jmp
ret
inc
out
in
jp
add
rcl
mov
cmp
mov
mov
ljmp
loopne
and
cmpsl
repz
and
mov
imul
push
popf
insb
nop
adc
push
aas
mov
jo
lret
jl
daa
ret
add
sub
icebp
lds
push
mov
sti
xor
lret
mov
mov
imul
dec
and
sub
mov
mov
out
sub
fdivrs
dec
push
mov
push
in
sahf
mov
adc
imul
sub
cld
adc
icebp
cmp
lcall
jae
dec
jb
dec
and
into
mov
xchg
not
xchg
sbb
jp
nop
jo
adc
inc
outsb
adc
clc
pop
out
or
jb
daa
and
and
xchg
aas
lock
int
data16
bnd
mov
sbb
xchg
movsb
sarb
sub
adc
das
cmpsl
in
mov
clc
sarl
icebp
sti
sbb
aam
or
inc
xchg
jnp
rcrb
rolb
mov
in
arpl
mov
enter
add
pusha
add
leave
sahf
icebp
ss
inc
arpl
xchg
xor
xchg
xor
sub
rorl
mov
xchg
test
push
xchg
int3
je
cmp
push
int
push
pop
jl
jb
adc
leave
adc
inc
and
iret
pop
adc
les
test
out
xchg
outsl
mov
xor
cmp
data16
sbb
lret
out
ficomps
jp
cmp
xlat
es
cmpsl
out
adc
xor
dec
in
lahf
ret
jle
scas
push
inc
mov
mov
repz
push
sbb
not
inc
dec
pop
inc
dec
scas
stc
xor
dec
ret
add
jecxz
cmp
pop
sub
xlat
xchg
testb
out
pop
or
sub
jbe
pop
call
dec
ljmp
and
cwtl
xor
rclb
or
add
mov
dec
mov
push
mov
xor
daa
jp
in
push
jo
pop
int
pop
scas
dec
dec
cmp
and
mov
aas
outsb
sbb
in
cmp
lods
mov
xchg
and
out
int3
enter
fdivs
adc
mov
push
mov
adc
mov
loopne
scas
js
jle
pusha
inc
test
push
leave
int3
xor
xor
loopne
mov
mov
jl
cs
outsb
movsb
mov
jp
scas
push
ror
adc
out
in
repz
mov
add
inc
in
sti
xlat
sbb
fidivrs
out
sub
add
mov
popf
pop
cs
jbe
dec
sbb
ret
lds
mov
inc
inc
movsl
jne
je
cli
int3
jg
jno
push
jb
out
loope
xchg
ds
inc
mov
sub
loopne
sti
outsb
call
xchg
aam
adc
addr16
ja
sbb
mov
xchg
fistl
lcall
imul
xchg
nop
jle
jbe
bound
mov
push
dec
add
dec
cs
dec
out
cmpsl
ret
xor
dec
mov
rcll
xchg
cltd
aaa
fdivp
shl
cmpsb
sub
jbe
inc
mov
ficomps
pushf
mov
xchg
push
push
xchg
lret
and
loop
mov
xlat
mov
outsb
add
shlb
xor
push
sbb
icebp
push
es
lcall
dec
fnstcw
cltd
pusha
pop
leave
push
push
cmpsl
cli
inc
mov
ljmp
lock
inc
out
imul
daa
dec
or
lods
outsl
js
mov
adc
xchg
jnp
les
jp
iret
jle
xor
fdivr
call
mov
out
adc
sbb
scas
sbb
in
jno
mov
or
mov
add
das
xor
movsb
xchg
cwtl
xchg
out
cmp
movsl
add
lock
shll
lret
loopne
repz
imul
hlt
pop
fsts
mov
pop
xor
rcl
pushf
jmp
pop
jge
sub
fimull
in
inc
outsb
pop
lock
and
movsl
stos
xchg
mov
pusha
jg
fmul
je
jmp
xor
scas
push
lret
leave
call
xchg
mov
sbb
stos
scas
or
lods
jecxz
xchg
xor
add
jbe
dec
rcrb
add
or
cmp
in
repz
loop
js
rcr
dec
lea
dec
cmp
mov
mov
adc
mov
mov
cwtl
xchg
sub
or
shll
pop
mov
jae
add
add
pop
aam
mov
scas
loop
cwtl
push
inc
xchg
jne
or
jbe
ss
int3
shl
sbb
stc
out
das
and
mov
push
test
mov
movsl
out
cmpsb
aas
or
jp
pop
cmp
mov
leave
stos
ficoml
xor
jle
mov
cmpl
jo
stos
mov
jnp
std
in
loopne
idivl
js
mov
repnz
add
sub
xchg
movsl
dec
rcrl
dec
add
dec
mov
or
adc
xchg
inc
repnz
jecxz
out
push
push
mov
sbb
ljmp
sbb
pushf
neg
mov
dec
mov
lret
aaa
shr
ret
inc
clc
xchg
sbb
hlt
pop
stos
imul
jmp
adc
mov
les
sti
mov
adc
xor
movsb
sub
fidivrl
lahf
mov
or
jne
push
mov
hlt
mov
dec
imul
xor
mov
sbb
shrb
mov
into
imul
ljmp
ds
adc
sub
lcall
mov
cwtl
inc
stc
pop
divl
inc
mul
es
fstps
rcl
jge
aas
or
shlb
popf
and
out
and
addr16
out
mov
dec
push
jecxz
push
imul
faddl
rorb
xor
adc
dec
pop
inc
jno
sub
mov
movsl
cmp
sbb
rcl
inc
cmc
dec
add
ljmp
xlat
push
add
or
push
stos
clc
arpl
loopne
pop
imul
mov
cmp
and
icebp
and
pop
mov
or
jp
int3
in
inc
and
divb
addr16
jae
jns
jne
sub
cmp
mov
in
add
pop
mov
mov
xlat
hlt
lock
push
addr16
in
adc
xor
pop
mov
insl
or
imul
push
fdivr
or
mov
data16
into
cmpl
flds
pop
cmpsl
sbb
adc
movsl
jge
inc
fcmove
jg
push
and
out
jmp
sub
or
mov
jae
push
pop
mov
insb
or
jle
loop
sahf
jno
hlt
lret
dec
into
in
jbe
adc
push
xchg
mov
pusha
sub
inc
mulb
lock
das
es
test
nop
imul
cmpsl
dec
pop
mov
movsl
faddl
mov
or
dec
or
popa
cmp
in
sbb
xchg
lods
lods
movsb
leave
loop
cmp
adc
dec
sub
add
and
loope
addr16
push
mov
psrlw
out
push
insb
outsl
es
or
add
lods
pushf
push
or
add
js
push
pop
mov
xchg
xor
pop
ja
cmp
sarb
xchg
loope
mov
in
push
js
stos
pop
push
int3
inc
adc
ret
mov
gs
ja
push
pop
pusha
je
sub
push
aaa
push
push
push
push
cmp
out
xchg
in
inc
or
repz
or
int
insl
xor
mov
mov
dec
push
cli
in
adc
push
scas
pop
int3
stos
jecxz
rorb
lret
xlat
addr16
rorl
sbb
into
mov
adc
xor
dec
add
dec
push
push
jle
xor
imul
imul
and
rcrb
repnz
push
aaa
out
jo
mov
jecxz
sbb
cmp
mov
clc
or
rcl
outsb
ficoml
sub
xor
dec
sbb
inc
ljmp
lds
mov
jne
mov
repz
arpl
shrl
test
and
push
int
ljmp
pop
sub
into
sbb
sub
or
orb
dec
in
das
jne
adc
movd
ffreep
sbb
into
dec
pop
xchg
imul
or
adc
aad
jmp
loop
cmp
or
clc
sbb
push
mov
mov
sbb
test
jmp
inc
mov
cmp
aam
out
push
cmp
test
das
into
fsub
pop
loopne
mov
mov
ljmp
imul
or
out
push
enter
hlt
adc
addr16
into
ret
data16
ss
outsb
pop
inc
popl
or
add
jne
push
fdivrs
into
mov
pop
adc
or
xchg
in
adcl
ret
lret
leave
pop
lock
cld
in
xor
repz
dec
decb
mov
sbb
movsl
arpl
adc
push
mov
test
incl
rorb
mov
push
lods
test
mov
lahf
or
xchg
sub
sbb
mov
xchg
loope
imul
mov
xchg
andl
jp
mov
or
arpl
stos
pop
jae
test
loop
mov
xor
adc
movsb
sub
fbld
mov
inc
ficomps
mov
imul
jnp
sub
pop
jno
push
or
xlat
sahf
cmp
cs
mov
adc
aaa
in
into
incb
push
xchg
movsl
lahf
test
out
or
hlt
mov
sub
cmp
lahf
xchg
mov
or
cwtl
push
xlat
push
xor
cld
pop
fidivrl
clc
ss
or
jno
pop
lret
xor
mov
cmpsl
xchg
addr16
popf
call
dec
into
icebp
sbb
push
mov
and
lea
xchg
in
ss
pop
out
adcb
scas
push
sbb
sbb
dec
iret
inc
or
in
clc
shr
jecxz
xchg
adc
scas
mov
mov
jl
dec
pop
clc
enter
out
aam
outsl
pop
jle
and
gs
push
jecxz
push
out
lods
cmpb
loop
testb
decb
jge
push
js
xchg
mov
dec
xchg
cmp
mov
pushf
mov
stc
int
cmc
push
in
and
add
les
sti
sbb
js
movb
int
out
adc
jle
push
xchg
mov
and
out
mov
add
push
out
das
jecxz
dec
xchg
addr16
push
push
cmp
hlt
jg
inc
iret
adc
in
pop
repnz
aaa
sub
xor
jnp
lahf
insl
gs
test
movsl
mov
and
or
mov
lahf
mov
decb
jl
jne
stos
data16
pop
jecxz
pop
imul
sbb
inc
inc
jo
sahf
cltd
or
out
imul
nop
push
or
fwait
xchg
push
or
push
adc
inc
mov
pop
fistpl
cs
std
into
sahf
dec
xchg
adc
mov
jbe
fisubrl
sti
jmp
mov
dec
xor
mov
out
lea
popf
adc
clc
mov
inc
xor
jbe
out
cli
xor
jecxz
ret
int3
fwait
aaa
mov
add
and
xor
in
mov
pop
mov
jno
jne
stos
xchg
popf
xchg
dec
aas
cmp
cmp
sbb
call
or
orl
repz
fisttpl
jne
pop
imul
jno
sahf
ja
pop
rcl
js
jne
roll
lcall
stos
testl
dec
cmc
sti
or
fists
lcall
dec
pop
mov
enter
rcl
out
icebp
jne
pop
sahf
cmp
jg
orl
iret
adc
pop
ret
xor
out
fadds
or
dec
add
pusha
pop
imul
push
push
push
pop
xchg
push
jbe
ss
enter
xor
dec
in
gs
cltd
pusha
movsb
movsl
adc
lret
lahf
ds
xorb
mull
cli
insl
cmp
pop
fsubr
mov
btc
outsb
lock
add
lahf
stos
aaa
jge
xlat
lret
mov
ja
nop
lods
adc
dec
loop
push
fisubl
mov
pcmpgtd
sbbl
repnz
fsubs
jge
mov
adc
push
jle
pop
arpl
cwtl
mov
in
rclb
xlat
push
push
out
leave
mov
out
imul
cmp
lea
mov
pop
jne
fisubl
in
push
inc
xlat
cs
push
test
jle
imul
mov
and
pop
lahf
xchg
sbb
addb
pop
xchg
push
out
or
out
mov
movq
imul
sub
pop
aaa
iret
lea
stc
iret
mov
xchg
mov
dec
shlb
push
jge
repz
dec
cmp
ds
jbe
cld
shrb
pop
into
inc
test
or
stos
or
addr16
dec
inc
inc
mov
xchg
lock
push
mov
add
sub
adc
pusha
push
adc
pop
bound
xchg
xor
push
int
inc
lock
sub
outsl
ljmp
xlat
lods
rcrl
push
mov
shr
push
adc
jne
xor
test
push
loop
icebp
js
adcl
mov
test
popa
addr16
jmp
jmp
or
jnp
push
xbegin
sti
fistl
data16
pop
jne
js
jb
pop
int3
inc
shlb
imul
jne
movsl
jbe
cli
iret
loopne
sbb
lea
push
inc
jb
xchg
ja
add
test
call
sub
lods
jg
test
es
lret
gs
lcall
jnp
dec
cmpsb
ja
xor
pop
xchg
xor
xchg
orb
leave
movsl
jne
sahf
shl
xchg
popa
adc
mov
inc
je
leavew
sub
add
sub
pop
movsl
js
inc
push
mov
mov
imul
push
jp
lds
aas
dec
test
mov
out
daa
insb
lret
rcrl
jmp
imul
nop
mov
aam
lahf
adc
xor
sbb
push
adc
ret
stos
add
gs
jnp
mov
pop
adc
loope
fidivrl
xor
lods
add
sub
jecxz
add
js
dec
mov
mov
shlb
mov
jb
push
sub
in
fstl
pushf
lcall
xor
add
jecxz
jbe
dec
into
or
hlt
lea
and
jne
mov
xchg
lods
fisttpll
push
jbe
sub
fnstcw
pop
xchg
push
jl
cli
sub
leave
pop
add
bound
dec
push
or
test
enter
stos
dec
dec
jge
adc
mov
sub
cmpb
inc
addr16
inc
jl
enter
dec
inc
or
add
cmp
test
and
jo
vfrczps
sbb
jge
test
cmc
adc
mov
sarl
pop
adc
jecxz
xlat
in
mov
sbb
add
out
fidivs
mov
inc
cs
push
out
xlat
inc
lds
stos
cmp
fucom
cld
test
imul
mov
push
jae
popa
mov
dec
mov
xchg
xchg
sahf
fnstenv
lds
mov
jg
adc
call
mov
clc
gs
xchg
iret
popf
mov
out
xchg
xor
adc
mov
or
cwtl
add
faddl
pushf
hlt
add
popa
imul
dec
xchg
inc
js
inc
jbe
lock
mov
and
cmp
mov
push
outsb
push
dec
adc
jne
test
ljmp
sbb
dec
push
outsl
jb
mov
sbb
and
or
add
mov
dec
push
cmpsl
and
mov
pop
outsb
mov
sbb
test
push
cmp
jl
sbb
push
movsl
mov
push
pop
add
jp
push
inc
ja
loope
cmpsl
xor
pop
fcmovbe
pop
pop
inc
out
imul
sti
or
mov
add
adc
test
push
js
insl
popa
jne
fbstp
das
leave
ret
daa
shll
inc
adc
popf
rclb
bnd
nop
push
mov
imul
sub
xor
sub
imul
jp
mov
cltd
shlb
test
sbb
mov
insb
jae
xor
clc
or
pusha
add
repz
int3
das
and
and
pop
stos
mov
xchg
iret
adc
ret
jno
imul
call
cmpsb
orl
sbb
movl
lcall
mov
sbb
inc
pushf
fs
ljmp
popa
lret
adc
and
je
fdiv
lods
mov
pop
mov
jbe
push
jle
xchg
lcall
jo
dec
xor
je
and
mov
and
or
clc
lret
call
push
xchg
mov
xlat
jne
dec
or
lods
mov
int
adc
pop
insb
ljmp
gs
push
icebp
or
mov
fcmove
fwait
inc
das
repz
add
int3
push
lcall
cltd
loop
xchg
dec
mov
jp
mov
dec
fsubs
in
add
xchg
dec
mov
and
mov
pop
adc
mov
push
fisubs
scas
inc
orl
inc
push
sub
or
adc
sub
test
aad
xchg
xorl
in
js
sbb
aaa
sbb
pop
lock
mov
xor
push
fsubrl
lods
jle
sub
dec
aaa
fwait
xor
in
imul
cmp
leave
inc
scas
rcrl
inc
enter
jno
sbb
bound
cmpsl
sbb
jne
add
or
cld
mov
dec
xchg
cwtl
sbbl
jae
into
popf
ljmp
je
sar
jmp
movsb
inc
aad
cmpsl
filds
movsl
cmp
loop
icebp
push
out
fldt
jmp
shlb
xchg
insl
arpl
xor
cwtl
mov
not
push
jne
lock
leave
repz
popa
jne
je
lret
ds
pop
push
cmp
jg
shr
popf
iret
and
into
add
pop
xor
push
jae
sbb
sub
mov
xchg
xchg
lods
cmpsb
lock
dec
int3
push
pop
sub
adc
mov
rorl
xchg
push
stc
inc
shlb
mov
sub
jne
repnz
push
sbbb
xchg
jne
pop
out
xor
popa
sub
fldenv
outsl
xor
test
mov
lods
mov
xchg
decb
mov
cmpsl
shlb
scas
aas
inc
push
mov
and
push
divb
add
push
cmp
inc
adc
mov
mov
push
add
rolb
sti
sbb
inc
add
mov
dec
dec
ret
out
pop
dec
cltd
roll
fcmovnbe
rcl
mov
push
push
insl
dec
aad
stos
lret
call
mov
divb
dec
mov
xor
cld
cmp
out
enter
cmpsl
jae
ret
xchg
and
test
out
or
mov
fiadds
ja
mov
pop
iret
lds
mov
inc
inc
loopne
movb
xor
inc
jmp
xorl
sar
ss
lret
js
mov
push
push
xor
add
adc
out
adc
mov
and
pop
sbb
int
loope
mov
push
insl
addr16
push
pop
jmp
xchg
push
fwait
aas
cmpsl
mov
int
loop
gs
pop
xor
int3
rorl
pop
test
out
mov
mov
sbb
rcl
push
test
jno
xchg
aas
pop
lret
cmpsb
pop
cmpb
jae
fcmovbe
jns
xor
add
movsb
out
fiaddl
aad
movsl
jecxz
or
daa
lahf
imul
jbe
xchg
add
rcrb
sbb
mov
push
and
pushw
ss
int3
lret
iret
adc
lock
int
leave
dec
test
xlat
adc
xchg
or
xchg
xchg
into
es
repnz
sbb
cmc
lret
nop
test
xchg
xchg
ljmp
sahf
jl
imul
inc
jns
mov
out
jg
mov
mov
cmp
pop
imul
pop
push
push
push
imul
test
loopne
insl
and
mov
jae
aaa
ljmp
ror
into
repz
mov
outsl
adc
pop
add
xchg
imul
jg
int3
test
in
insl
cmp
fdivrl
mov
or
int
push
cld
mov
pop
faddl
es
mov
push
xchg
pop
add
push
mov
inc
insb
out
ret
int
sahf
hlt
pop
mov
jg
xor
call
pop
faddl
mov
fcmovnbe
clc
js
pop
inc
in
sub
lret
xchg
xor
lret
cs
cmp
inc
push
mov
shr
push
mov
add
dec
jne
stos
pop
mov
pushf
shll
ljmp
rcrb
and
xchg
es
sub
subb
cmpsb
add
mov
dec
std
popf
cmp
iret
cltd
cmpsb
in
test
sbb
ds
stc
lret
daa
jo
test
fiadds
pusha
push
push
push
not
scas
mov
xor
pop
fwait
xor
push
fsubl
adc
mov
fs
xchg
not
mov
ret
ja
loop
pushf
lock
xlat
jg
jmp
sub
sbb
jp
iret
jbe
sbb
xchg
fcomps
push
dec
sbb
gs
xlat
in
xor
fmull
cltd
lret
leave
xchg
movsb
loop
sbb
ljmp
xchg
enter
inc
inc
repnz
push
jmp
rcll
loop
adc
enter
xchg
test
and
push
popf
push
bound
pop
xchg
push
mov
mov
in
sub
fxtract
mov
scas
mov
xchg
adc
fwait
stc
push
ds
jns
lods
mov
test
fadds
xchg
nop
mov
leave
stos
mov
pop
and
negb
out
cli
cmp
scas
into
mov
push
out
lea
scas
stos
xchg
cmp
jl
sahf
nop
xchg
xor
xor
xadd
sub
mov
dec
xor
pop
xchg
sbb
into
aas
lods
adc
mov
push
mov
push
lods
jl
test
and
push
add
mov
lea
shlb
dec
repnz
inc
pop
dec
pushf
xchg
int3
push
xchg
fldenv
jb
test
push
gs
cmpsb
xchg
mov
ror
add
lahf
mov
mov
test
int3
fdivl
mov
xor
or
rcl
cmp
xor
mov
xchg
outsl
jo
cmovl
jb
pop
sbb
inc
or
dec
dec
pop
adc
shrl
daa
leave
push
dec
push
loope
fwait
mov
dec
addl
jecxz
jecxz
push
push
aaa
lock
inc
iret
sbb
mov
add
add
pop
imul
not
inc
fbld
fidivrs
nop
fcmovbe
orl
scas
movb
dec
pop
rcll
inc
ja
ds
push
into
iret
mov
or
aas
insl
pushf
inc
cmpsl
or
cltd
je
and
cli
sbb
test
sahf
pop
test
dec
and
pop
pop
lahf
xorl
insb
mov
dec
mov
andb
lods
xchg
sbb
push
and
movsb
push
pusha
fs
popf
jl
cld
gs
xchg
test
insb
repnz
fldcw
int3
aad
aam
sbb
and
int
out
imull
int3
cltd
xchg
push
add
ds
fiaddl
je
insl
xchg
incl
arpl
inc
mov
or
add
mov
xor
pusha
pop
jg
inc
mov
cmpsl
inc
test
mov
jae
dec
adc
pop
or
bound
xchg
scas
les
cwtl
lock
not
push
cmpsb
or
and
mov
pusha
xchg
push
inc
stc
push
out
jne
lods
std
ja
sbb
mov
jno
rorb
mov
cmp
test
cmpsb
xor
cmp
jb
pop
xor
pop
and
inc
mov
adc
repz
push
inc
addr16
and
out
push
jo
sbbl
cli
call
sub
and
addl
and
ret
sbb
inc
adc
scas
popa
and
push
jns
inc
sbb
leave
jnp
lret
xchg
or
sbb
dec
fmul
xchg
es
xchg
sub
cwtl
push
or
dec
jno
loop
test
sbb
mov
cmp
push
or
push
sbb
cld
aam
xor
imul
out
dec
push
adc
ret
fwait
xlat
movsb
sub
sbb
cmp
and
fnstsw
test
inc
in
add
and
or
mov
and
iret
inc
xor
cmpsb
pushl
mov
in
icebp
mov
pop
jne
xchg
xor
into
jb
outsb
insb
aam
xchg
push
inc
stos
and
int
xor
jecxz
inc
pop
jbe
mov
loopne
subl
push
pop
xor
pop
push
jns
popf
mov
int3
sbb
lock
call
mov
test
inc
or
fdivs
pop
mov
mov
mov
rcl
insb
push
xor
js
or
and
int3
nop
jecxz
decl
sbbl
sbb
nop
jp
dec
pop
cmpsl
faddl
lahf
jnp
fisubrs
test
insl
mov
out
add
mov
cmp
punpcklbw
xchg
sub
push
es
or
lret
fdivrl
or
jo
push
xchg
call
les
pushf
cmp
imul
loope
call
jo
or
rcl
dec
pop
xor
and
pop
fmuls
lret
sub
pop
or
sbb
leave
movsl
jl
iret
jbe
push
sub
and
pop
lret
push
and
dec
adc
nop
das
push
fs
pop
out
jmp
mov
cmp
jecxz
sbb
rclb
inc
cltd
xchg
leave
cmpl
lret
xchg
fstpt
mov
xor
popa
and
insb
into
push
ffree
jbe
jg
in
into
cmpsb
add
add
lea
xor
ds
mov
xchg
test
jmp
test
lods
sbb
arpl
call
mov
adc
repz
outsb
sub
add
jmp
inc
xchg
and
cwtl
jmp
sbbb
aad
inc
push
lahf
xor
mov
ljmp
mov
out
into
popf
dec
ds
into
shrb
jmp
xor
loop
mov
cmp
pop
mov
mov
es
add
inc
push
adc
popf
and
inc
in
dec
adc
mov
dec
push
cmpsl
mov
pextrw
dec
and
rcl
in
icebp
call
mov
push
sub
mov
mov
sub
add
stc
jne
dec
sbb
pop
test
xchg
out
xchg
xchg
push
mov
pop
aaa
adc
sbb
xchg
out
inc
dec
push
and
rcll
leave
aam
pop
popa
sbb
push
inc
test
lea
cmp
in
sbb
cmpsb
jne
mov
mov
xor
pusha
dec
in
mov
mov
test
std
jnp
and
cltd
mov
pop
add
and
pop
fsubrs
int
out
shlb
cs
inc
jns
sub
mov
aad
in
pop
jo,pt
inc
mov
lds
push
push
mov
lea
int3
int
fistl
xor
mov
into
xchg
cmpsl
imul
xchg
cmp
loope
mov
pop
stc
test
xchg
into
outsl
mov
inc
cmpsb
cmc
jbe
daa
cltd
and
leave
mov
pop
or
adc
push
jbe
sbb
and
push
arpl
sbb
push
popf
push
pop
lcall
lahf
mov
dec
sahf
aam
adc
out
loop
xchg
cli
shll
push
ret
cmpb
mov
dec
jecxz
mov
movsl
ljmp
sar
cmp
lret
cs
xchg
dec
outsb
sbb
inc
mov
sub
lods
mov
subl
pcmpgtd
jae
push
int
enter
mov
mov
cmc
data16
mov
add
or
push
mov
enter
std
pop
sub
lahf
dec
test
out
inc
cli
mov
mov
fs
mov
lock
inc
xor
in
mov
aaa
loope
dec
lret
xor
push
leave
dec
decb
or
mov
cmp
fs
int
and
repnz
jecxz
cmp
mov
and
scas
or
cltd
out
xchg
cmp
sbb
fsub
adc
mov
push
inc
xlat
frstor
xor
mov
jg
push
js
in
leave
jp
mov
sbb
shlb
repnz
int3
mov
or
add
dec
sub
pop
test
cmp
sub
loopne
and
test
cmpsl
clc
sbb
adc
xor
jnp
inc
sub
and
in
test
lret
or
lret
fbld
cmp
mov
cli
jg
xchg
mov
xchg
adc
std
in
test
jo
sub
movsb
sub
xchg
jne
push
add
sub
xchg
xchg
popa
push
hlt
adc
nop
mov
out
cmpsb
push
pop
fldl
jge
icebp
aaa
dec
mov
scas
jmp
add
xchg
js
mov
jbe
jl
jae
aad
in
pop
jge
pop
fwait
into
mov
aaa
fisttps
shl
jbe
sbb
aam
or
dec
cmpsb
push
aaa
fcomps
adc
loopne
pop
fildll
imul
cmc
xor
out
sarb
sti
mov
mov
xor
shll
add
inc
shl
sbb
jne
pop
xor
adc
cmp
mov
cmp
mov
insl
mov
inc
inc
xor
cmc
iret
mov
sbb
sbb
adc
test
push
aas
iret
pop
and
sbbl
mov
mov
or
sbb
sbb
daa
mov
popf
shrb
lret
in
cltd
and
es
inc
pop
jo
imul
add
gs
xchg
jbe
insl
jne
into
push
or
and
lcall
outsb
cmpsl
fcmove
fidivrs
jle
out
adc
pusha
push
movsl
or
cmp
fsubp
cmc
pop
data16
mov
pop
ret
fstpl
and
loopw
icebp
rorb
jne
out
jle
in
cmpsl
je
and
jp
mov
aas
add
les
and
stc
push
mov
jbe
inc
int3
or
lret
dec
jp
fwait
cs
aad
and
jnp
in
popl
out
and
and
pop
test
add
push
mov
sub
sbb
loop
sub
jns
fs
jl
lret
push
std
in
mov
jne
or
dec
sbb
loopne
mov
sbb
mov
dec
adc
stos
dec
add
cwtl
adc
mov
int
jmp
les
call
add
fs
mov
cmp
int3
jnp
push
and
rorb
adc
xchg
cs
int3
or
dec
stc
bound
mov
pop
push
not
sbb
jl
xor
lcall
dec
dec
mov
int3
hlt
mov
iret
inc
cmp
cmp
into
outsb
lahf
cmp
clc
jge
addr16
daa
imul
mov
ljmp
and
inc
jecxz
cli
sub
lret
push
xchg
pop
fbstp
leave
xchg
cs
mov
push
push
cltd
cwtl
and
sub
inc
push
add
sbb
mov
test
mov
jmp
or
jle
call
jp
push
sbb
xchg
loop
adc
xor
pop
mov
adc
push
adc
xor
roll
cmp
inc
insb
movsb
mov
shl
test
std
pop
jl
notb
sub
push
inc
lret
lahf
cmp
jbe
or
subl
push
ss
loopne
aam
daa
pop
cld
js
mov
or
mov
les
movups
xchg
xchg
add
int3
fisubrs
dec
sbb
orl
adc
xchg
dec
mov
add
daa
xchg
loope
insl
outsb
sti
sar
adc
orl
mov
adc
test
mov
inc
xchg
repz
xor
cmp
mov
and
cmp
lahf
add
cmp
xor
cmc
xor
dec
xchg
aam
fcmovbe
and
push
les
fwait
jae
into
jns
jmp
imul
push
mov
inc
adc
xchg
mov
dec
push
mov
clc
loop,pn
and
pop
mov
fsubl
mov
test
jno
pop
xor
cmp
gs
pop
jbe
mov
mov
and
pop
hlt
xchg
loope
ja
int3
js
lahf
sbb
inc
inc
jbe
mov
and
cmp
test
cwtl
adc
cmc
jne
mov
xchg
push
jmp
loopne
shrb
pop
fcmovnbe
test
push
xor
ffreep
xchg
insb
mov
lahf
add
into
xchg
mov
xchg
pop
insb
loop
add
push
cmc
loopne
imull
dec
ret
dec
test
repz
push
xor
lret
xor
fcmovnbe
mov
popf
dec
mov
xor
leave
repz
push
repnz
push
inc
lcall
lds
adc
jg
dec
imul
test
mov
xor
mov
push
adc
jae
fbstp
jp
pop
fcmovb
aam
iret
lret
out
pop
pusha
lods
cmp
dec
loopne
bound
mov
fs
pop
mov
adc
mov
inc
int3
xor
in
out
insb
mov
mov
icebp
inc
mov
pop
cs
repnz
dec
fnstcw
mov
jno
xchg
push
ret
jns
sub
or
clc
daa
jg
mov
xor
jecxz
push
xchg
test
cwtl
dec
popa
mov
pusha
cmp
dec
ret
jbe
popf
fwait
cmpsl
shlb
loopne
mov
ljmp
sub
pop
xor
fs
lret
js
es
sub
push
jbe
mov
xchg
jns
jecxz
sub
flds
icebp
hlt
out
loopne
mov
aas
jae
shrl
mov
dec
sbb
push
inc
push
loope
or
jmp
out
push
xchg
add
or
mov
cmp
loope
mov
out
sbb
jb
cli
add
es
jno
cs
insb
push
mov
fsubrl
jge
scas
shl
pop
inc
lcall
shlb
sti
bound
daa
insl
nop
add
rclb
es
mov
hlt
jg,pt
sbb
loope
scas
roll
push
inc
movsl
into
push
mov
jae
push
jg
mov
xor
mov
jle
xor
or
repnz
push
scas
dec
pop
sbb
andb
lea
fcmovnb
sbb
cmp
xchg
mov
pop
dec
jne
mov
movsb
mov
out
mov
cmpb
cli
js
popa
mov
cltd
mov
inc
xor
dec
cld
mov
sbb
aad
sub
pop
inc
insb
popf
jne
out
xchg
loope
stc
mov
mov
shl
and
and
jns
mov
sbb
mov
dec
fidivl
out
push
mov
dec
xor
push
hlt
xor
out
cmp
xchg
add
add
clc
push
dec
inc
and
test
repz
lds
mov
adc
out
lcall
ret
cmpsb
loope
add
sub
bnd
popa
sahf
sbb
lods
sbb
imul
cli
mov
or
inc
inc
xor
dec
mov
dec
xchg
adc
sbb
push
pop
cmp
cmp
push
es
adc
scas
dec
int3
imul
dec
lahf
adc
inc
lods
cmp
sub
scas
mov
inc
ret
push
stos
rcr
cld
outsl
aam
cmpsl
xchg
mov
inc
rolb
push
jmp
mov
and
in
aas
lods
and
jg
popf
scas
out
int3
arpl
sbb
push
daa
movsl
dec
sub
shr
jne
in
imul
outsl
ljmp
mov
leave
add
loop
push
das
xor
addl
mov
dec
sarb
adc
xor
out
scas
stos
xchg
cli
inc
popf
ds
int3
addr16
jno
push
lcall
sub
imul
lret
cmp
ss
and
adcl
test
arpl
jecxz
fwait
xchg
rol
notl
sbb
push
mov
sbb
enter
jmp
cmp
daa
repz
jae
push
dec
xchg
fwait
cmpsb
push
ss
push
filds
lret
lods
adc
cwtl
sub
xchg
mov
fidivrl
sub
add
sti
or
mov
inc
push
into
movsl
fldenv
popa
pop
bnd
cli
xor
jge
sub
xor
pop
inc
aaa
xchg
xchg
enter
inc
dec
lret
pop
sbb
mov
pop
aas
fsubs
pop
xor
xchg
ret
int
cmp
dec
aas
lcall
jle
lds
repnz
pop
addb
inc
add
cmp
inc
cmp
jne
popf
adc
imul
inc
movsb
fwait
or
ds
inc
aam
out
pop
loope
lock
insb
sarb
xchg
into
xor
sbb
fs
adc
in
push
mov
dec
cmp
mov
aad
add
lret
push
adc
enter
iret
sub
mov
mov
push
xor
mov
shl
and
fwait
jnp
fisubrs
pop
or
jne
push
into
ficoml
addr16
dec
xor
and
out
hlt
cmp
mov
out
aad
push
cltd
movsl
inc
stos
push
dec
and
add
cmp
xlat
sbb
fsts
dec
decb
fcompl
pusha
or
clc
fwait
inc
jecxz
andb
dec
outsl
les
sub
insl
daa
ja
add
and
push
or
out
xchg
cs
aas
fstps
loopne
fcom
push
addr16
dec
sub
mov
inc
jb
pop
scas
out
fists
cmc
mov
mov
data16
out
mov
aaa
out
and
dec
insb
or
into
stos
jb
mov
inc
cld
jbe
vmwrite
xchg
mov
push
inc
xchg
push
cmc
or
dec
aad
mov
movsl
das
loope
test
mov
xchg
cmp
mov
adc
cmc
cmp
xor
mov
leavew
dec
cmp
sahf
push
push
out
mov
jl
aam
sub
mov
lods
sbb
pop
inc
adc
push
jbe
in
xchg
mov
and
cli
adc
cmpsb
pushf
and
mov
decb
loopne
ss
push
jnp
or
sbb
stos
push
bound
ror
jnp
out
adc
adc
aaa
data16
mov
sbb
aas
mov
movb
mov
cld
dec
out
or
aas
ret
mov
fimuls
aam
aam
mov
push
push
inc
mov
adc
mov
mov
sti
aaa
mov
insb
pop
mov
out
mov
cmpsl
mov
cmp
cmp
into
jae
push
pop
ljmp
in
fistps
xor
adc
inc
fstl
inc
scas
push
in
sti
pop
push
sub
testl
adc
cs
int
jns
xchg
cmp
imul
cmp
insl
mov
fcom
leave
dec
in
mov
pop
mov
cmpsl
imul
xlat
sbb
xchg
lock
mov
daa
or
stos
test
data16
pop
hlt
mov
xor
in
jl
es
sbb
cmp
in
mov
xlat
jbe
pop
mov
cmpsl
lods
je
mov
and
fists
mov
cmp
mov
insl
lret
sbb
add
push
inc
repnz
into
movsb
lahf
arpl
mov
xchg
hlt
jne
cmp
and
jae
pop
out
cwtl
sub
adc
les
out
cmpsl
jmp
sti
lcall
jmp
sub
mov
inc
test
mov
and
sub
push
inc
and
mov
std
and
mov
lcall
sbb
mov
xor
adc
xchg
or
ja
dec
mov
mov
nop
jb
push
pop
lret
push
lods
sbb
in
mov
movsb
mov
push
mov
pushf
xchg
push
lock
jne
int
into
mov
xor
dec
jg
jo
or
jns
aam
sbb
mov
ja
mov
frstor
cltd
sub
sbb
pusha
adc
fcmovb
aam
push
mov
andb
cmpsl
addb
imul
into
sahf
jmp
pop
xchg
pop
ss
pop
add
push
adcl
push
cmp
imul
mov
jne
push
push
into
stos
loopne
sbb
popl
insb
inc
lcall
popa
or
or
mov
fisttps
movsb
test
rorb
mov
push
sbb
imul
hlt
push
pop
add
test
enter
adcl
aaa
or
shll
mov
scas
mov
xlat
divb
insb
es
push
sbb
sbb
fcmovne
dec
inc
cmp
inc
xchg
adcl
mov
mov
adc
sbb
jmp
mov
xchg
mov
repz
push
add
loop
sbb
sub
ja
mov
push
icebp
mov
inc
add
mov
cmpsl
mov
push
xchg
mov
xchg
repz
test
push
jbe
movsl
pop
je
inc
sahf
dec
adc
pop
adc
xchg
dec
jge
scas
test
sbbb
cld
faddp
inc
dec
into
dec
rolb
jae
sbb
and
loope
aas
repz
mov
negb
loopne
push
jg
std
xchg
mov
adc
lret
scas
rcl
mov
mov
push
scas
push
subb
xchg
shl
aam
iret
mov
cmp
mov
sub
popa
sbb
jne,pn
ret
xchg
and
mov
adc
cmpsb
dec
xchg
jmp
and
movb
leave
adc
loopne
lret
sbb
push
mov
dec
adc
jge
cmpsl
addr16
rcr
ss
cs
dec
adc
xchg
stos
cmpsb
sbb
mov
pop
and
add
push
pop
call
jge
push
push
cltd
int
add
insl
xchg
popa
push
bound
into
int
test
lea
mov
xchg
sbb
inc
test
imul
pushf
cmp
jmp
aam
fmul
or
ja
or
jecxz
icebp
loop
cwtl
mov
test
test
into
jle
cli
jbe
adc
pop
cmpsl
stc
and
sahf
mov
insl
mov
lods
inc
add
mov
inc
daa
lret
push
mov
ds
xchg
hlt
or
jg
andl
je
push
pop
pop
into
jae
inc
jecxz
lea
adc
xchg
out
mov
mov
aas
push
out
fst
sahf
mov
adc
das
mov
repnz
add
inc
popa
cld
test
mov
iret
stos
ljmp
icebp
loopne
xchg
push
sub
mov
mov
push
push
test
lods
sbb
in
call
xchg
jmp
mov
test
jo
xchg
jle
shll
into
pop
pop
sbb
mov
jg
addr16
movsl
lock
xor
xchg
pop
adc
notl
fwait
pop
xchg
adc
adcl
xor
pop
enter
out
ds
pop
xchg
shrl
mov
ror
adc
fdiv
arpl
movsb
leave
adc
mov
jno
mov
mov
xchg
inc
hlt
data16
into
lods
xchg
cmp
stos
xchg
inc
into
cmc
imul
dec
mov
pop
cmp
rorb
rcl
sti
negb
adc
mul
das
dec
stc
sub
add
stos
shll
adc
std
ss
mov
rcl
cmc
imul
adc
jecxz
clc
sbb
jl
pop
xor
or
divl
sarb
shr
adc
aad
push
aaa
mov
push
ror
ficomps
and
lcall
dec
xchg
shl
out
aam
mov
ja
in
pop
mov
nop
into
pop
je
add
jecxz
push
sub
push
js
les
subb
shlb
mov
movsb
xchg
rcrl
into
cwtl
jne
cmpsl
sbb
mov
adc
push
movsb
ds
in
lret
mov
xlat
lds
add
shlb
cmp
outsl
aaa
addr16
add
js
dec
daa
xchg
fwait
stos
jge
ret
cmpsl
push
push
test
push
sub
jne
mov
in
cmpsb
stos
jecxz
xor
add
dec
imulb
aad
inc
pusha
adc
pushl
xor
jno
and
cli
stos
fldenv
sbb
movsb
loope
stc
push
test
and
push
or
cmp
call
test
xor
fcmovne
ljmp
into
sbb
adc
xor
and
mov
insl
ret
pop
popf
dec
sbb
xlat
push
nop
out
sbbl
jae
sbb
xor
xor
sub
not
mov
ret
stc
getsec
sarl
xor
inc
xchg
in
inc
ret
mov
in
sub
cmc
int
cmp
popa
push
dec
pop
notl
cmp
into
lret
addr16
pop
sub
mov
lods
imul
pop
sti
nop
sub
lahf
ret
mov
ss
xchg
in
int
call
mov
addr16
jno
pop
andb
inc
jno
add
je
mov
pushf
call
mov
das
sub
mov
add
dec
inc
out
mov
stc
dec
scas
cli
mov
and
repnz
jo
jl
pushf
sbb
mov
or
imul
push
cli
mov
cwtl
pop
xlat
cli
outsl
dec
test
cmc
jnp
sub
divb
or
es
dec
mov
arpl
stc
out
cld
pop
sbb
aam
jbe
call
add
cmpsl
fiadds
push
cmp
mov
pop
es
pop
enter
dec
sbb
dec
in
and
mov
mov
mov
ret
add
movb
sbb
cli
push
cmpsb
xor
je
ret
mov
pop
push
cmp
and
jnp
sub
test
inc
mov
mov
cmpsb
movsb
rclb
and
call
xor
dec
and
fistpll
sub
cmp
pop
loop
adc
ljmp
into
xor
sbb
lcall
lret
pop
imul
lods
aaa
daa
lahf
hlt
jbe
cmc
aas
jge
loope
repnz
fsubrp
cmp
push
or
aam
inc
lods
icebp
fwait
jge
xlat
fistpll
ss
out
mov
ds
lock
and
mov
ret
in
dec
movsl
sub
test
xchg
into
ret
jge
add
leave
sti
mov
dec
dec
iret
clc
lahf
aaa
cs
xchg
fiadds
or
int3
xor
ljmp
push
and
jp
cmp
cmp
int3
pusha
push
fdivs
jne
jge
fs
jmp
xchg
jmp
outsb
xor
and
lea
iret
sbb
stos
in
cmp
jl
repnz
shlb
ds
push
add
inc
dec
and
mov
mov
movsl
inc
cmp
adc
leave
nop
scas
lret
loopne
lods
mov
or
stc
pop
test
xchg
dec
movsl
jne
ja
aas
cmpsb
push
mov
sarl
sub
push
aaa
fxch
into
mov
arpl
add
mov
in
mov
ror
repnz
popa
mov
sub
das
adc
cmc
fisttps
inc
scas
rclb
addr16
into
ror
pushf
push
test
outsb
sti
xchg
push
into
push
enter
mov
jmp
fdivs
jnp
stos
arpl
into
popf
jae
cltd
xlat
outsl
dec
mov
ljmp
loopne
inc
mov
imul
repz
mov
pop
jle
cmp
jbe
or
outsb
push
shl
pop
push
lahf
int3
sub
xor
aaa
xchg
mov
adcb
fbstp
fwait
idiv
aam
xchg
out
aas
pop
lods
jns
or
loop
cmpsb
hlt
aaa
cmp
pop
push
cmp
jae
std
dec
into
jno
int
mov
fsubr
cltd
rclb
lret
loope
lods
pop
dec
hlt
out
inc
imul
cmc
lret
jl
and
aaa
add
adc
fisttps
push
sub
and
std
cmp
jo
popf
scas
inc
rcrb
jle
not
stos
lret
fldl
inc
js
inc
aam
test
jmp
jo
xor
adc
or
sbb
shl
aam
cltd
movsl
out
out
sub
gs
dec
xlat
movsl
jp
daa
js
cmp
idiv
lret
push
stc
pop
subl
loope
jge
inc
fldl
xchg
mov
lret
adc
aam
sub
xchg
test
and
cmp
mov
mov
lods
rcl
sbb
loop
addb
lds
cmp
jge
fnstenv
hlt
push
movsbl
daa
clc
mov
push
ja
push
imul
sahf
cwtl
add
aas
shr
test
dec
repz
imul
out
mov
int
subl
jge
in
inc
push
iret
xor
call
mov
mov
adc
lods
cld
xchg
pop
mov
jb
xor
pop
pop
mov
xchg
cmp
dec
sti
adc
pushf
mov
and
inc
or
mov
pusha
xor
pop
ficompl
xor
lock
jp
jno
cmc
lods
insb
dec
data16
bnd
pop
arpl
mov
cmp
mov
or
jecxz
add
sub
inc
les
add
mov
xchg
cwtl
into
mov
bound
adc
movsb
mov
loope
enter
ja
lret
inc
out
mov
adcb
adc
cmp
xchg
push
in
pop
dec
sub
push
aaa
pop
sti
outsb
push
pop
cmc
cs
std
sahf
fstl
icebp
into
bound
int3
lock
daa
in
inc
jecxz
out
pop
dec
std
data16
mov
pop
cltd
js
jl
add
mov
or
addl
mov
mov
shlb
mov
xchg
or
hlt
add
xchg
dec
push
les
adc
cmp
cmp
scas
sbb
xchg
into
shlb
out
enter
pop
testb
mov
mov
out
xorb
mov
fidivrl
int
mov
push
push
test
fildl
loop
test
movsl
add
aam
shl
xor
popa
sub
dec
pop
jge
dec
pop
cld
fs
loop
mov
cmp
sub
dec
mov
xchg
jns
pusha
scas
fstps
rol
leave
dec
incl
aaa
and
xchg
mov
cmp
fadds
leave
adc
sbb
repnz
fisubrl
inc
pop
xchg
lea
fstl
mov
loopne
xor
xchg
and
dec
jo
fdivrs
pop
adc
xor
sbb
mov
fidivrs
xchg
int3
mov
or
or
jno
xlat
cmp
sbb
xor
mov
sub
jmp
psubw
shlb
mov
sbbl
mov
dec
xchg
repz
ja
out
shl
js
push
int3
int
dec
es
jne
loope
lods
mov
sub
stos
sbb
dec
int3
pop
push
stc
cmp
js
lock
mov
stos
fwait
lcall
jmp
aam
jno
xor
cmp
and
adc
xchg
xchg
test
mov
and
mov
ret
push
insb
in
addr16
bound
subb
xchg
rolb
mov
sbb
ds
pop
sbb
xlat
push
jp
fwait
dec
sub
subb
push
imul
pop
loop
inc
mov
push
cmpsb
cltd
and
push
inc
sbb
shlb
sbb
stos
imul
push
push
mov
imul
cmp
pushf
test
xor
aaa
mov
jns
adc
out
inc
pusha
lea
or
cld
int
sub
mov
mov
push
adc
rcl
inc
mov
jo
xchg
lock
dec
adc
or
loop
push
out
imul
ds
add
icebp
cli
pop
bnd
out
jg
jmp
pop
dec
cltd
test
popf
xor
pushf
push
aad
xchg
arpl
stc
sbb
adc
aam
scas
mov
push
adc
sbb
insl
or
inc
ja
loope
out
push
stos
add
jb
inc
dec
sub
call
mov
test
sub
into
fsubs
test
orl
mov
xor
repnz
inc
repz
xor
xchg
lea
pcmpeqd
cmp
rclb
xorl
xor
fdivl
pop
repz
ficompl
testl
les
call
cmp
pop
lods
dec
pop
lock
or
pop
cli
jecxz
lret
sub
insb
mov
adc
lods
inc
cs
and
xor
pop
sahf
leave
outsb
int
xor
nop
add
or
inc
inc
adc
pop
cmp
push
add
js
push
fs
call
jo
bound
test
jl
xor
arpl
xchg
dec
imul
and
push
movsl
inc
int3
lahf
or
push
ljmp
loop
loopne
xchg
lret
push
arpl
pop
inc
aam
movsb
stos
mov
aaa
movsl
or
inc
in
les
cmpsl
xlat
inc
cmc
mov
icebp
addr16
rolb
imul
aas
loop
lods
sub
xor
aam
ret
call
and
mov
pop
shrl
into
mov
jge
mov
faddl
aas
xchg
lcall
or
mov
mov
insb
or
inc
pop
psubusb
orl
dec
sbb
cmp
sbb
ja
loopne
jge
push
sub
mov
sub
dec
adc
popf
inc
shr
pop
xor
lds
int
push
fistpll
mov
addr16
hlt
jnp
push
mov
xor
aad
xchg
add
repz
adc
sub
inc
xor
cld
cmp
cmp
sbb
fbstp
jne
adc
pusha
rcrb
dec
gs
imul
and
or
and
xor
nop
mov
gs
mov
xchg
dec
pop
mov
mov
idivl
jbe
adc
fnstcw
cwtl
lahf
xor
xchg
add
and
jo
mov
add
xchg
inc
bound
add
and
les
xchg
cwtl
cmp
test
test
in
jnp
mov
lahf
lret
and
xchg
lock
out
ds
aas
push
clc
add
push
aam
mov
and
movsl
mov
inc
jle
filds
xchg
lock
fs
mov
test
pushf
xchg
push
pop
lret
sbb
mov
imul
adc
cmp
pop
dec
test
mov
dec
icebp
out
inc
imul
lods
lds
cmc
xchg
test
out
stos
add
or
xor
out
pop
cwtl
cmp
fcomps
loop
dec
and
mov
adc
cmp
and
jbe
xor
mov
push
mov
mov
in
and
int
add
mov
dec
add
icebp
push
iret
adc
xchg
imul
daa
shll
dec
adc
jne
mov
sub
xchg
shll
add
dec
test
fdivs
sub
and
ja
mov
faddp
mov
sbb
xchg
out
jbe
xchg
lret
xchg
mov
movsl
xor
inc
int3
xchg
ja
stos
test
inc
add
jle
daa
pop
lock
pop
and
sbb
or
inc
mov
out
out
inc
dec
cltd
push
pop
ja
cmc
ffree
cs
ret
int3
pop
ret
mov
movsb
jb
dec
or
call
xor
test
jae
ret
xor
pop
dec
dec
mov
add
sub
int
movl
lret
push
popa
add
push
jbe
dec
je
notl
rclb
rorl
push
cmp
mov
dec
fucomp
shlb
adc
jno
add
jge
ja
pop
in
int3
push
pop
jae
js
in
cmpsl
jb
ror
mov
xor
pop
jae
mov
xor
dec
ret
sahf
int
xchg
movsl
push
inc
mov
fimuls
jmp
inc
pop
sub
mov
pop
out
fwait
cs
jg
mov
mov
lds
setb
scas
imul
sarb
jmp
mov
std
fisubrl
sbb
into
cmp
sar
mov
movsb
scas
mov
push
add
out
js
shrl
cltd
sbb
cmp
incb
dec
push
loope
jns
int
xchg
daa
mov
add
add
xchg
mov
mov
bound
fsubrl
or
mov
icebp
std
mov
add
xor
daa
repz
pop
inc
cmp
imul
xor
enter
out
test
out
pop
mov
cmpsl
testl
jg
nop
push
imul
jbe
ret
or
sub
mov
lock
xchg
pusha
lcall
jg
rcrl
movsl
sub
cmpl
rep
mov
or
mov
inc
addr16
xchg
cmp
sarb
out
sbb
cmc
es
cmp
stos
add
pusha
nop
jae
inc
das
popa
push
mov
dec
fistl
fsubr
jae
sub
jne
pop
sti
into
xchg
jmp
push
test
testl
fisubl
cli
stos
jecxz
adc
mov
xchg
xor
mov
pop
jno
and
mov
jo
divb
je
push
lahf
leave
push
fwait
or
imul
or
cmpl
test
mov
mov
je
mov
loop
push
mov
add
or
hlt
pop
mov
insb
js
out
pusha
mov
imul
neg
xchg
mov
into
ljmp
out
fwait
jmp
mov
push
push
out
clc
inc
jbe
mov
sti
or
mov
popa
out
cmp
sub
or
xchg
mov
adc
dec
outsl
je
add
insl
arpl
cmp
lea
fnstenv
lret
dec
dec
and
in
shll
dec
int
ljmp
push
push
xchg
insl
int3
into
dec
xor
cmpsb
jmp
pusha
shlb
push
aaa
jne
cmp
adc
jb
inc
shl
mov
jns
or
loop
test
sbb
insl
or
xor
and
test
add
adc
leave
dec
std
add
mov
adc
insl
fwait
or
stos
xchg
adc
lahf
imulb
inc
shl
ret
imull
dec
call
insb
lods
cmpsl
jns
sbb
adc
scas
sub
dec
gs
adc
pop
lcall
in
iret
mov
pop
imulb
les
push
and
flds
xchg
aas
imul
xchg
pop
xchg
inc
inc
test
pop
xchg
movsb
in
xor
add
inc
das
aad
inc
push
cmpsl
or
mov
mov
add
and
xchg
hlt
push
arpl
cmpsl
push
mov
inc
jmp
rorl
xchg
shrd
outsb
or
pop
loope
insb
push
int
sarl
popf
sbb
jmp
mov
insl
cwtl
mov
xchg
ret
int
lret
jbe
es
fadds
out
xchg
loop
jae
cmp
jmp
push
dec
divps
pushf
les
lea
rcll
dec
ss
inc
xchg
je
sub
movb
dec
mov
inc
rcl
inc
ljmp
mov
and
aaa
add
xchg
in
ror
pop
adc
fdivp
sbb
sbb
stc
dec
lret
xor
clc
fcomps
dec
add
roll
inc
and
push
push
into
adc
ss
inc
iret
test
leave
ljmp
xchg
lret
cli
jne
jno
cmpsb
add
jbe
in
test
mov
sahf
push
dec
stos
add
ja
sbb
ja
push
pop
jecxz
jge
pop
in
jp
movsl
mov
rclb
xchg
dec
loop
jge
into
adc
pop
ja
ss
loopne
scas
xchg
clc
xchg
jge
lods
gs
dec
iret
dec
insb
es
cli
mov
cld
jo
je
mov
gs
icebp
out
mov
fstl
hlt
mov
arpl
ja
push
xor
test
ja
nop
jne
jl
cltd
ret
jle
jae
xchg
add
lock
jl
fcmovbe
pusha
scas
aaa
jno
vmread
leave
cmp
mov
adc
push
daa
dec
and
cli
enter
loopne
filds
sbb
sub
push
jo
and
inc
out
aaa
ljmp
lret
mov
cmpsl
sbb
xchg
push
or
jmp
inc
shrb
sahf
mov
int
jae
pop
sbb
mov
jge
out
dec
cmp
jb
nop
mov
fsubr
inc
aad
inc
ds
pop
sub
adc
mov
daa
icebp
out
add
adc
pop
cmpsb
mov
scas
lds
fadds
je
enter
jns
push
stos
sbb
hlt
aas
sub
shlb
mov
stos
jl
into
mov
test
xchg
call
inc
ljmp
mov
mov
loope,pt
sub
dec
sbb
jns
aaa
push
cmpsl
mov
push
xor
push
or
rolb
hlt
push
aam
lcall
test
inc
xlat
outsb
push
pop
lret
cli
pop
mov
add
fisubrs
fdivl
jl,pn
pop
popl
int3
and
push
push
loop
xchg
mov
sarb
sub
aam
stos
pushf
lcall
int3
stos
ret
cmp
lret
in
sbb
stc
mov
into
lds
cli
sub
aaa
push
loope
xor
icebp
jge
mov
xchg
in
mov
aam
mov
mov
scas
cltd
dec
mov
dec
mov
pop
mov
ds
js
and
pusha
push
and
rclb
jo
mov
test
stos
out
loope
aaa
iret
push
adc
or
inc
mov
aad
mov
or
lret
mov
popa
negb
int
add
and
mov
mov
mov
xchg
or
cltd
xchg
add
sub
push
jle
insl
push
xchg
pop
out
leave
adc
xchg
and
adc
mov
dec
jge
pop
mov
push
and
lcall
mov
xor
inc
mov
cmp
add
xchg
cltd
sub
push
es
jl
cmp
or
cs
mov
sub
rcrb
not
add
fcmovne
mov
fwait
aaa
mov
stos
lods
mov
mov
mov
pop
insl
nop
in
outsb
jbe
inc
xlat
or
pop
ljmp
push
mov
out
pop
jmp
xchg
cwtl
fimuls
pop
addl
dec
mov
aas
sbb
dec
pop
stos
or
push
movsbl
andl
sbb
into
cmc
rcl
imul
jns
clc
or
fcmovbe
xchg
ds
aam
movsl
and
pop
mov
xchg
es
cwtl
push
sbb
cmpsl
fisttpll
lret
push
mov
mov
inc
jno
mov
jl
loope
leave
add
dec
dec
xor
data16
sbb
xor
lock
into
ret
int3
xor
imulb
push
mov
in
rol
pop
or
out
pushf
jne
jo
js
add
mov
push
mov
int3
inc
rorl
fmuls
sub
insl
lea
pop
ret
popf
mov
movsl
jmp
cmpsl
or
dec
inc
pop
xchg
xchg
lea
testb
sbb
ljmp
ret
les
jbe
mov
in
dec
xchg
adc
add
or
std
int3
psubq
loop
ret
sbb
push
dec
rclb
fstpt
inc
sub
fnop
mov
dec
xchg
mov
mov
aas
sub
pop
into
std
sti
ret
mov
loopne
xchg
js
ficoms
pop
ret
cld
pop
adc
repnz
cmpsb
rorb
cmp
cmp
mov
sbb
insb
adc
ljmp
mov
out
xor
mov
jmp
pop
fwait
cmp
push
or
or
fmul
fwait
dec
dec
and
push
sub
push
mov
cmpsl
sbb
arpl
sbb
or
xor
sub
aad
jg
push
lock
mov
dec
jmp
cmp
pop
movsb
cmp
jns
xor
mov
call
jno
aam
sbb
dec
loop
imul
push
xchg
jge
jmp
aaa
ds
sbb
jge
pushf
shl
mov
jae
popf
push
add
cmp
cli
dec
lahf
push
adc
push
insl
jp
hlt
iret
and
xchg
mov
cmp
lahf
pop
xchg
mov
fsub
mov
cmc
cmc
lahf
enter
push
mov
cmp
sub
mov
and
repz
outsl
mov
pop
in
xchg
shrl
push
movsb
fstpt
lods
inc
push
push
push
sub
loopne
sbb
ljmp
xchg
mov
dec
dec
mov
imul
xchg
iret
mov
adc
outsl
and
sahf
fidivl
inc
lcall
aam
mov
clc
dec
cmp
dec
sbbl
cli
lret
add
in
xchg
ss
xorl
cli
xlat
dec
lea
lret
xchg
shll
insl
fists
or
gs
into
pop
inc
add
adcl
into
bound
in
out
in
scas
or
jne
ja
into
cmp
adc
cltd
jno
fcmovnu
aad
and
scas
cwtl
xor
xor
int3
xchg
dec
lds
jne
dec
dec
dec
xchg
mov
out
pop
pop
lods
iret
lret
into
mov
dec
cs
adc
sub
imul
sbb
insb
or
add
mov
stc
mov
sbbb
std
pop
mov
xor
and
xor
shl
fwait
sbb
mov
popa
fidivrs
cmp
and
dec
iret
xchg
addr16
and
out
fwait
mov
add
mov
jne
lret
dec
push
fcomip
xlat
sub
xor
popf
mov
sbb
in
pop
dec
push
sbb
int
loope
push
test
fmuls
sub
into
cltd
fildl
push
mov
and
push
into
loopne
cmpsl
out
daa
mov
lahf
outsb
cmp
mov
dec
add
aaa
dec
lds
movb
popa
or
lea
dec
int
rcr
jl
mov
jnp
sub
dec
dec
repz
bound
dec
or
inc
loopne
cli
outsl
scas
pusha
cltd
cmp
fprem
push
in
mov
lcall
pushf
sub
stc
leave
push
imul
lea
loop
lret
push
sub
jno
or
outsb
mov
fistpl
repz
push
call
xlat
push
imul
jbe
jge
xchg
add
sarb
insb
push
rcll
add
jp
inc
sub
div
xchg
addb
and
addr16
movsb
mov
test
lods
sar
arpl
ljmp
and
shll
xchg
std
iret
cmp
mov
es
insl
sub
test
fidivs
into
lahf
fcmovne
pop
push
sbb
mov
sti
ja
and
xchg
jp
outsl
mov
aaa
sbb
xor
and
aas
arpl
push
dec
xchg
mov
mov
add
mov
mov
divl
add
aad
leave
jno
jl
push
int
arpl
sbb
dec
inc
mov
fwait
stos
into
fbstp
push
dec
lds
movsl
pushf
add
faddl
mov
mov
mov
jne
inc
or
push
adc
mov
cli
add
push
sub
mov
out
mov
dec
fs
adc
mov
lret
mov
stos
dec
mov
jbe
xor
sarl
jbe
in
into
xchg
lret
scas
lods
mov
icebp
mov
dec
lret
xchg
push
loop
outsb
xor
in
xor
push
es
cmp
lds
adc
test
ret
jno
dec
xchg
mov
fldt
jbe
or
sub
mov
mov
cld
cmpsb
out
push
push
push
inc
scas
sub
fst
out
mov
push
pop
ss
inc
test
inc
adc
and
xchg
orl
rclb
inc
inc
insb
push
mov
fstpl
cld
sti
mov
sub
inc
xor
jne
sahf
ror
rorb
mov
movsl
lahf
stos
pusha
and
stos
xchg
add
cmpsl
add
imul
fdivrs
cli
ds
sbb
xchg
mov
fsubr
repnz
add
cmp
hlt
push
int3
inc
xor
ret
lods
lods
jge
in
cmc
and
cli
cs
incl
call
rcll
mov
or
push
es
mov
sub
into
jecxz
mov
stos
mov
imul
inc
lret
dec
fnstsw
sbb
jo
stos
ja
pop
iret
or
nop
jne
mov
jb
sbb
push
xchg
js
push
mov
push
mov
imul
insl
cmp
int3
jbe
dec
sbb
das
jmp
aam
adcl
int
adcl
sbb
dec
push
sub
jno
mov
dec
sbb
or
insb
mov
jl
push
lret
dec
decl
leave
data16
add
jbe
pop
je
fnsave
xchg
mov
push
sbb
mov
sub
push
call
enter
or
jmp
xchg
movsb
sub
xor
pop
jbe
das
xor
mov
rorb
les
idivl
or
lret
fcmovne
jno
mov
jbe
scas
rcrb
push
sub
repnz
movsl
andl
scas
addr16
dec
mov
push
call
shll
push
sub
mov
out
cmp
cmpsl
fmulp
into
mov
mov
or
mov
repnz
mov
sbb
jecxz
lods
dec
mov
mov
jno
pop
pop
icebp
pop
cmpsb
xchg
lods
rolb
sbb
xchg
inc
aas
sub
jp
test
imul
pop
sti
mov
out
lret
mov
mov
test
push
test
nop
out
lret
fcomps
imul
in
xor
pop
mov
xlat
repnz
xchg
mov
push
lods
inc
call
popa
int
fdivrl
pop
mov
xchg
push
push
lods
sub
dec
jno
cltd
out
je
pop
add
test
lahf
and
iret
push
xchg
in
int3
sbb
jecxz
das
pop
sbb
dec
push
idivb
sbb
fwait
int
mov
dec
adc
cmp
cmp
fisttps
enter
rcr
mov
sbb
sub
nop
out
or
pop
and
pop
outsl
dec
loop
xor
pusha
imul
push
vpshufhw
or
popa
test
lret
add
pop
roll
loop
ds
mov
insl
inc
add
add
rcrl
jl
sbb
sbb
scas
pop
push
and
push
xor
xchg
repz
add
jbe
mov
mov
xor
movsb
mov
stos
cmpsl
lret
mov
aam
idivb
mov
test
mov
inc
pusha
push
pop
das
cmpsb
xlat
mov
loop
adc
into
jbe
lcall
or
lea
test
lret
xor
movsb
stc
rcr
iret
insl
and
sub
mov
xor
sarl
adc
adc
mov
push
ss
xchg
addr16
jmp
sub
and
ret
and
xchg
lcall
mov
xor
loop
dec
dec
outsb
das
repnz
adc
into
xchg
lock
loopne
and
inc
xchg
mov
xchg
addr16
scas
into
xor
xor
mov
loopne
aam
dec
mov
xchg
mov
sbb
adcb
sbbl
bnd
mov
rcrb
jecxz
lods
addl
shlb
test
pushf
scas
mov
push
outsb
mov
xor
mov
mov
pop
adc
orps
jl
stos
stc
jns
cmp
and
and
dec
jecxz
int
outsl
mov
stc
mov
mov
sub
sti
mov
fcmovnu
ss
adc
cmp
adc
aam
hlt
cs
mov
jae
mov
xchg
pusha
out
xchg
mov
es
ljmp
jb
popa
adc
sbb
mov
xor
sub
xlat
inc
jo
inc
add
sbb
xor
fstl
cmp
divb
xchg
lock
push
or
mov
lcall
mov
xchg
mov
jp
mov
aaa
sub
jno
leave
jle
sub
loop
pop
addr16
dec
arpl
cmp
and
pop
cmpsb
imul
sbb
rorl
movsl
cwtl
adc
xlat
mov
test
fstps
popa
int3
pusha
in
int
shrb
sub
xchg
fcomi
dec
mov
xor
xchg
cmc
andl
mov
int
push
cltd
inc
jcxz
movsl
scas
sbb
pop
inc
mov
in
fcomip
js
dec
insb
rcl
sahf
push
inc
pop
je
jno
push
scas
inc
das
xchg
push
mov
mov
mov
aam
jl
adc
xchg
lret
or
jle
and
cmp
pushf
clc
pop
cmp
lret
inc
sub
les
push
js
cmp
adc
push
out
out
sbb
jl
push
mov
and
pop
cwtl
stc
sti
aam
inc
mov
loope
into
mov
mov
mov
rol
jns
xor
add
lahf
stos
mov
test
push
rolb
fbld
jne
out
shl
pop
jmp
in
and
fstl
push
sbb
data16
lahf
mov
popa
jno
mov
fst
outsb
jmp
adc
out
pop
cs
outsl
or
add
and
addl
xchg
mov
dec
arpl
fwait
aad
add
filds
inc
sub
and
xchg
data16
repnz
stos
lcall
inc
push
in
push
loopne
stos
or
arpl
cmpsb
imul
dec
and
dec
lret
stos
xchg
mov
gs
cld
push
shrl
shlb
dec
ja
inc
fisubs
fcomip
fistpl
int3
rorb
sbb
sub
out
lods
push
pop
mov
fdivl
or
jle
mov
imul
jg
push
ret
pop
out
nop
adc
dec
es
mov
push
and
rolb
and
push
mov
mov
lcall
mov
xchg
hlt
movb
xchg
and
push
insb
fwait
jne
or
scas
int3
inc
push
add
push
push
mov
mov
add
cmp
jl
dec
mov
pop
cltd
lock
cmpsl
cmpsl
test
lods
xor
sub
pop
loop
and
andl
jmp
insl
das
dec
add
es
pushf
cli
sbb
lods
ficoml
std
ret
or
sarb
dec
mov
mov
add
sbb
movsl
out
scas
cltd
jns
xor
out
jge
mov
iret
imul
cmp
push
pop
adc
scas
rdtsc
addr16
into
inc
stc
sub
adcl
dec
push
shr
ljmp
xor
lods
pushl
jno
dec
nop
das
vaddss
fimuls
pop
stos
xor
inc
or
jne
inc
je
lret
jnp
mov
pusha
repnz
xor
jle
xor
shr
mov
fnstsw
mov
rcrl
mov
dec
stc
mov
push
pop
pop
push
mov
shlb
insb
xchg
mov
pop
lret
sahf
cwtl
aad
addr16
test
push
inc
imul
leave
mov
mov
movsl
xor
push
outsb
movsl
les
inc
shll
jmp
mov
fcmovbe
xchg
mov
xchg
cmp
lods
mulb
mov
loopne
repz
pop
and
inc
and
push
lret
inc
xor
cmp
xchg
mov
popf
out
stos
bound
cs
mov
push
push
fiadds
add
insl
dec
cmpl
data16
repnz
nop
loopne
jbe
enter
dec
popa
inc
jmp
mov
insl
lret
test
or
jno
out
clc
imul
jo
push
jno
xchg
cmpsb
sub
clc
loopne
mov
push
in
mov
lods
stos
adc
dec
movsl
stc
push
dec
shlb
mov
gs
es
pop
and
scas
repz
fbstp
repnz
and
out
pop
je
lds
mov
in
mov
jne
dec
in
rorb
xchg
aad
call
xlat
mov
mov
jbe
les
inc
ljmp
cmp
push
mov
cmc
in
insb
xchg
jb
and
scas
movsb
mov
lcall
in
fwait
or
dec
add
xchg
rolb
add
das
fwait
add
mov
xchg
lcall
add
sbbl
xchg
xchg
inc
test
das
mov
adc
not
scas
aas
cmc
ror
cmp
sub
lea
in
mov
les
dec
cmp
adc
test
out
mov
push
mov
sarb
cmp
cli
inc
pushf
cltd
xchg
pop
test
out
out
rol
das
sub
dec
or
push
jge
movsb
ja
sbb
in
das
and
dec
orb
sub
rcrl
lock
shll
sbb
jne
fdivs
dec
fnstenv
xchg
imul
mov
xchg
inc
push
jae
rclb
pop
xchg
in
inc
pop
sbb
iret
xor
dec
cmp
dec
je
outsl
sar
sbb
mov
inc
iret
pmaxub
sbb
inc
cmp
add
movsl
loope
cmpsl
and
jg
xor
xchg
xor
dec
das
fstpl
out
arpl
jle
adc
fdiv
stc
mov
scas
out
mov
jl
addr16
mov
and
add
mov
push
loopne
push
inc
leave
sbbb
dec
fwait
jp
pop
or
cmp
shll
dec
xchg
stos
aaa
cmpsl
outsb
in
mov
push
ss
enter
rolb
movsb
cli
clc
loopne
dec
dec
mov
push
sbb
jns
dec
cmp
clc
fldt
rcll
push
insb
and
mov
mov
dec
inc
mov
or
dec
jnp
pop
out
loop
push
lds
or
jns
mov
cltd
mov
imul
and
mov
dec
dec
outsl
int3
fstpl
dec
adc
jecxz
jnp
push
stos
outsl
loopne
in
ja
ret
sub
sar
sub
lods
fildl
cmpsl
dec
cli
sub
push
mov
fnstsw
mov
or
pop
mov
mov
pop
rep
sbb
mov
mov
jo
dec
sahf
mov
sub
imul
lods
push
je
adc
adc
mov
xor
push
insb
gs
mov
or
adcb
cli
inc
aad
mov
dec
inc
xchg
fidivrs
aam
cmp
movsb
int3
pop
push
lret
dec
cld
test
jmp
fisttps
add
sbb
dec
cmp
sti
pusha
rol
xor
inc
push
push
in
xchg
mov
rcrb
mov
mov
cmp
inc
cmp
xchg
insl
cs
cwtl
cmpsl
mov
xchg
sub
int3
ss
or
aaa
inc
addr16
add
and
repz
or
pop
cwtl
mov
inc
fcmovnb
jmp
dec
mov
xor
add
lods
push
imul
sbb
add
ss
add
aam
mov
hlt
daa
add
lds
jg
loop
stc
push
cmp
mov
pop
popa
icebp
mov
fcom
jnp
divl
fistps
mov
dec
or
movsl
dec
xchg
clc
icebp
fldz
pop
and
sbb
jmp
mov
fs
lock
sub
add
push
addr16
sbb
jno
sub
mov
sbb
add
dec
loop
orb
outsl
and
cmc
leave
fldenv
pop
mov
dec
nop
mov
ret
mov
xchg
jae
xchg
sub
mov
jno
addb
test
xchg
pop
into
or
ds
mov
mov
xchg
sub
push
jecxz
mov
in
cmc
mov
mov
dec
dec
push
stos
aam
aas
push
push
mov
dec
inc
inc
insb
clc
leave
dec
add
xchg
aas
dec
mov
cmpsb
lods
xchg
xchg
int
push
pop
lods
loopne
sub
rolb
cmp
lret
jbe
lods
pop
jno
sarb
mov
sbb
int
shlb
push
cmovge
dec
lock
xchg
lea
lahf
mov
xorb
inc
sbb
test
cmp
cmp
sbb
push
into
movsl
cmc
movsl
dec
cmp
into
dec
or
inc
push
inc
daa
xchg
mov
cmpw
sub
mov
lock
iret
push
std
inc
dec
fistps
ljmp
inc
jo
test
insb
stos
dec
popa
outsl
testl
out
xchg
jg
ljmp
in
pop
push
imul
lfs
and
lock
push
or
aas
into
lahf
int
mov
mov
roll
leave
xchg
jge
dec
adc
fnstenv
insb
inc
jmp
mov
mov
iret
leave
in
lds
lock
jg
xor
iret
pop
test
push
mov
dec
nop
jns
pop
fidivrl
test
call
mov
xor
jnp
test
xor
rcll
insb
dec
mov
lret
pusha
cmp
add
inc
ljmp
jnp
int
cmp
mov
ficompl
adc
in
leave
and
int
insb
daa
dec
cmc
ffree
movsb
sbb
mov
imul
sbb
out
loope
dec
push
mov
push
xchg
mov
int
sahf
inc
cmp
jnp
mov
int3
pop
jg
cltd
movsl
inc
lret
mov
jb
mov
lds
iret
out
std
sbb
in
int
xchg
cmp
mul
mov
xlat
xchg
ja
cmp
pop
mov
lret
sbb
mov
jno
xlat
pop
js
lcall
sahf
pop
adc
dec
or
ja
jnp
jmp
movsl
rol
or
or
dec
mov
mov
sbb
sub
xchg
sub
cltd
jecxz
mov
mov
les
xchg
dec
push
fsts
pop
in
xchg
xchg
add
pop
ffree
jo
push
pop
xchg
shll
dec
mov
add
iret
clc
xor
jle
in
data16
inc
mov
jo
jp
push
sbb
jle
rcrb
scas
mov
inc
pop
ss
xchg
loop
pusha
test
or
es
xchg
arpl
movsl
dec
sarb
lcall
mov
xchg
cwtl
inc
mov
imul
mov
scas
or
out
frstpm(287
repz
insl
idivl
addb
jecxz
ja
push
stc
sub
pop
jnp
lock
sahf
gs
mov
pushf
push
insb
and
packuswb
push
cltd
mov
push
in
repz
jge
gs
xor
fs
das
and
jge
insb
popa
pop
push
sahf
imul
or
jmp
cmpsl
jae
loop
sbb
sub
shlb
movsb
and
and
lds
and
in
push
mov
jae
aas
lods
pushf
popa
add
aam
xlat
lcall
add
xchg
cbtw
and
pop
sub
outsb
lds
cmp
jae
iret
adc
out
clc
push
mov
fst
or
iret
iret
sub
popa
mov
leave
sbb
in
dec
aas
inc
push
pop
inc
mov
mov
mov
pop
and
lock
inc
call
les
adc
adcb
ja
or
dec
dec
ret
xchg
mov
push
in
push
stc
rcr
int3
mov
sbb
pop
cmpsl
fst
incb
and
xor
shlb
adc
repnz
cld
ja
dec
dec
insl
clc
mov
sbb
inc
jg
fcompl
out
adc
lea
mov
arpl
mov
xlat
sti
xchg
lods
scas
loopne
rcl
sti
adc
out
aam
dec
out
lret
loop
pop
add
pop
jmp
push
cmp
mov
cli
xchg
sub
fnstcw
jae
mov
insb
movsb
aam
sbb
jbe
rcr
jo
fistps
gs
ret
aas
xor
xor
mov
push
decl
out
gs
fsts
in
adc
push
jnp
sbb
arpl
xchg
mov
mov
push
dec
test
fstpl
rcll
adc
inc
stos
in
dec
push
in
push
cmp
dec
xchg
jne
fcoms
and
push
mov
add
fisubrl
inc
ret
jns
clc
inc
test
test
nop
fmul
out
mov
mov
jnp
rolb
or
js
into
daa
in
inc
ret
sar
scas
or
mov
mov
data16
dec
cwtl
into
mov
outsl
add
push
inc
push
lret
xchg
jo
pop
popf
int
dec
es
cmpsl
loope
sub
in
movsl
int3
xchg
mov
sbb
dec
xchg
sbb
jle
pop
adc
fildl
xchg
mov
jb
gs
jno
aaa
jae
xchg
sub
jnp
rcl
ljmp
push
add
mov
mov
or
xchg
je
adc
lahf
dec
mov
xchg
mov
sub
dec
pop
xchg
daa
and
or
cli
xchg
into
push
negl
mov
pop
data16
std
xchg
mov
int3
xlat
pop
popa
and
jnp
dec
mov
ret
or
cwtl
mov
adc
sbb
gs
xchg
or
mov
hlt
fisubs
ja
fidivs
mov
and
add
aad
pop
bound
adc
daa
cmp
int3
loop
mov
addb
mov
out
cmp
pop
inc
scas
pop
cmp
lret
jg
mov
test
int3
and
cmc
xchg
mov
in
xchg
cmp
rcrl
adc
xchg
sbb
pop
stc
add
xchg
iret
mov
popl
lret
jae
aaa
inc
pop
movsb
push
sahf
or
repnz
adc
push
mov
mov
int
inc
mov
push
fsts
xchg
lret
mov
push
cmp
arpl
lret
mov
aaa
popf
andl
inc
inc
je
ficoml
mov
add
mov
iret
mov
mov
mov
and
xlat
mov
bound
mov
inc
outsb
stc
pop
mov
xor
push
insb
inc
xor
sbb
adc
out
mov
jp
push
add
cwtl
push
inc
hlt
jmp
movsl
pop
or
addr16
mov
pop
daa
mov
in
mov
xchg
loopne
xchg
into
ret
wrmsr
dec
clc
lods
push
cltd
pop
out
and
dec
fs
sub
enter
jne
ss
into
cmp
sbb
out
es
gs
mov
mov
xchg
lahf
pop
sahf
xor
stos
cmp
mov
mov
andl
xor
sub
mov
xor
cmpsl
lret
outsl
xchg
int
xor
into
mull
jge
or
sub
insb
xchg
pop
jae
lret
in
push
xchg
add
or
outsb
jp
sahf
push
push
push
push
and
cmp
jbe
lret
adc
xchg
pop
mov
shlb
nop
lret
jecxz
cmp
int
mov
cltd
mov
xchg
xchg
adc
xor
ss
out
xorl
pop
lods
adc
decl
add
adcl
sbb
sub
cmc
mov
pusha
cmp
mov
mov
js
mov
push
xchg
stc
mov
push
imul
or
int
xlat
adc
adc
dec
jae
out
xor
loopne
sbb
rol
push
mov
and
in
xor
jnp
sbb
jne
nop
xor
pop
outsl
xchg
into
out
inc
shll
xchg
addr16
es
xchg
and
movsb
pop
mov
add
cmp
xchg
movsb
mov
and
lea
aad
aam
out
sbb
push
add
test
movsb
xchg
loope
lods
mov
inc
adc
popa
stos
mov
inc
sub
pushf
inc
xchg
cwtl
xchg
dec
into
arpl
lea
push
pop
es
cmp
sub
popa
shll
cmp
jne
out
pushf
cs
rol
paddsb
out
scas
pop
lea
lret
mov
inc
dec
popf
mov
pop
xor
jb
dec
in
int3
mov
inc
dec
fistpl
xor
add
popa
enter
xor
lcall
scas
inc
fiadds
mov
pusha
xchg
in
and
inc
shrb
movsl
js
loopne
or
mov
sub
stos
cmp
mov
jg
inc
sub
inc
pop
push
sub
aam
out
mov
xchg
test
scas
enter
and
add
sarb
adc
outsl
adc
fildl
dec
pop
pop
shlb
mov
dec
and
aam
add
mov
arpl
sub
push
dec
dec
inc
aas
xchg
and
call
aad
out
push
xchg
dec
mov
xchg
mov
cmp
in
pop
pop
mov
add
nop/reserved
mov
fwait
push
xchg
lret
sub
mov
push
fstpl
push
xchg
leave
into
mov
idivl
sarb
lret
xchg
aas
or
mov
shlb
iret
inc
dec
sbb
enter
loop
mov
xor
inc
aad
fnstcw
jl
add
jp
adc
push
stos
shll
cmpb
sub
aaa
xchg
or
add
push
inc
enter
mov
aas
mov
add
inc
jl
jne
jmp
int
in
push
cltd
aaa
ljmp
jne
sbb
xor
fcoms
out
push
aas
mov
cli
mov
ljmp
lret
push
push
popa
into
ds
inc
or
push
push
mov
mov
cmpb
xchg
push
mov
sub
jl
in
in
jo
xchg
lods
sbb
push
pusha
pop
sub
clc
scas
mov
inc
mov
jge
fdivp
in
out
mov
xchg
mov
xorb
mov
or
roll
enter
lea
lock
push
adc
mov
sarb
fwait
adc
repz
inc
and
je
scas
lahf
jecxz
int3
dec
lods
push
dec
mov
outsl
mov
lret
andl
lods
push
and
stc
js
sbb
adc
xor
mov
mov
movsl
mov
add
mov
pop
xor
fnstsw
sub
adc
mov
outsb
aaa
gs
cs
xchg
mov
jbe
xchg
jo
fcmovb
jns
loop
leave
out
out
sbb
adc
jnp
stos
outsb
mov
jne
fstpl
popf
fisttps
cmp
mov
testl
insl
scas
leave
pop
cld
bound
nop
shrb
jnp
xchg
pop
cmpsb
cltd
pop
lods
xchg
mov
cmpsl
xor
div
sahf
shrb
test
fstp
data16
adc
aas
push
dec
mov
jmp
cmp
dec
jecxz
jo
dec
add
push
movsl
inc
adc
xchg
cmc
push
mov
and
adc
jmp
or
stc
mov
imul
ljmp
adc
cmpb
dec
cmp
clc
xor
dec
mov
xchg
jae
cli
pop
mov
frstor
add
aaa
loope
inc
pop
xchg
into
adc
xor
out
mov
mov
xor
and
imul
clc
mov
aam
xchg
jecxz
jmp
mov
push
popf
mov
dec
jg
add
ds
rclb
dec
repnz
pop
and
stos
sbb
lret
repz
or
xchg
in
jle
cmp
pop
adcl
xor
adc
iret
add
loopne
push
pop
jbe
hlt
roll
scas
and
mov
cmp
mov
jb
sub
push
push
jge
pop
push
lret
pop
into
shrl
xchg
inc
cs
int3
sbb
rclb
loop
int3
xlat
xor
pop
push
ss
fidivs
sub
ret
mov
mov
ja
mov
std
mov
sub
mov
cmp
mov
enter
cmp
xchg
lock
inc
fidivrs
lahf
dec
hlt
jmp
das
aaa
jl
jg
and
ss
inc
push
inc
loop
fisttpl
xchg
popf
sbb
or
push
ret
enter
pop
mov
andb
xchg
incl
loope
rcl
test
or
scas
push
pop
rorb
mov
and
filds
out
popa
jmp
fs
cmp
jp
mull
test
jecxz
cmp
rcr
add
sub
mov
jae
lret
xchg
mov
dec
xchg
mov
add
add
dec
stc
cwtl
adc
fwait
sub
pop
xor
fisubrl
sbb
rcl
push
sbbb
sub
xchg
sbb
into
lret
cmp
cmp
fs
mov
fnstenv
adc
daa
shll
jae
sub
hlt
in
stos
and
inc
xor
or
dec
lods
into
out
cltd
xlat
jl
mov
loopne
dec
mov
or
jbe
add
lret
fs
out
mov
aam
dec
lret
xchg
int3
fwait
in
loop
jo
stc
aam
outsl
nop
cmp
jne
addr16
pop
std
jnp
sub
push
pop
jl,pn
pop
lret
adc
fs
and
add
test
inc
in
ss
and
xor
dec
addr16
fnsave
jle
mov
push
ljmp
test
rcrb
fbstp
fdivs
int
xchg
aaa
rorl
pop
xchg
xlat
jne
push
jmp
dec
fwait
ds
stc
jns
xchg
aaa
sbb
jmp
xchg
in
repz
jbe
push
lahf
dec
rolb
outsb
lds
scas
test
add
fldenv
leave
mov
aad
pop
cmp
pop
inc
adc
xlat
mov
test
cmp
cmpsb
mov
mov
and
jge
inc
rcr
push
mov
pavgw
scas
add
inc
add
imul
sub
nop
loop
sub
or
cli
roll
or
ss
mov
idivl
mov
test
fnstsw
mov
arpl
fisubrl
lret
shrl
xchg
icebp
out
dec
mov
xchg
lret
mov
xchg
push
sbb
movsl
lds
xorl
fimuls
clc
cltd
out
push
lds
pop
sbb
mov
mov
or
stos
push
or
xchg
out
popa
into
push
jp
inc
out
cmp
movsl
cs
xchg
xchg
int3
xchg
xchg
shll
push
stos
lret
mov
mov
jecxz
add
mov
adc
push
jbe
test
cmp
xchg
fistl
pop
ljmp
add
sti
movsl
gs
push
sub
push
fstpt
adc
test
es
jle
fsubrs
sti
push
ret
inc
jl
mov
sbb
or
lods
mov
sub
lret
or
cmp
inc
dec
arpl
pusha
test
es
sub
mov
fstp
dec
int3
lcall
lea
push
out
sub
adc
enter
mov
push
shlb
jnp
xor
jle
std
cmp
in
out
repz
inc
or
out
xchg
mov
or
adc
shrb
pop
jg
pop
mov
dec
and
fistps
cmc
or
jmp
shll
adc
mov
sub
inc
cmpsl
lea
push
imul
test
xchg
xchg
sahf
je
mov
shlb
lahf
insb
xor
out
call
jp
ret
inc
jnp
clc
test
loope
inc
pop
fsubrs
jmp
xchg
out
call
iret
daa
jmp
mov
sbb
mov
mov
xchg
add
pop
jns
xor
push
xchg
push
or
pop
xor
ja
movsb
push
lock
push
pop
lret
daa
inc
cli
jns
ss
das
push
leave
mov
fbld
out
mov
adc
outsl
or
adc
stc
movsl
pop
mov
dec
dec
mov
jecxz
out
into
dec
int
sbb
testl
data16
adc
xor
jl
decb
jecxz
jae
inc
cmp
cli
xchg
cltd
xchg
mov
mov
rcrl
cmc
xchg
mov
mov
jbe
fadds
push
push
js
rcrb
fisubrs
addr16
push
int3
loopne
pop
sbb
cli
stos
inc
cmp
test
mov
inc
lcall
enter
or
sub
sub
out
mov
jmp
pop
outsl
jl
out
and
in
stos
xchg
les
lcall
popa
push
xchg
cli
out
mov
shll
push
cmp
lcall
xchg
adc
notl
call
dec
fcoml
std
mov
scas
adc
dec
adc
jecxz
jmp
ja
add
sbb
and
xchg
insl
sub
cltd
das
scas
lret
out
push
sub
mov
int3
mov
mov
sub
mov
jmp
xor
adc
rcr
test
ds
hlt
sub
icebp
add
pusha
dec
jmp
xchg
sti
lret
pop
cmpsb
rcrl
cmp
cmc
jbe
movsb
push
fsubl
cwtl
lcall
mov
iret
ret
rcrb
and
inc
jne
ja
into
and
mov
jmp
dec
iret
ds
fmull
jno
out
into
jmp
or
push
xlat
xchg
push
adc
aad
jne
je
or
sub
xchg
cmp
cmp
ss
and
int3
fnsetpm(287
xor
or
or
negl
add
dec
fiadds
scas
mov
loopne
sub
push
lret
and
add
es
lret
aaa
sub
cmpsb
je
aaa
lods
testl
jne
jo
je
das
inc
std
xchg
dec
adc
xor
or
adc
ds
jmp
into
jge
in
and
aam
lods
hlt
mov
loopne
push
and
adc
pushf
testb
lods
outsl
mov
xor
mov
pushf
mov
push
and
sub
rcrb
jno
adc
xor
stos
adcl
inc
rorb
ds
jbe
inc
lret
push
fmull
out
push
xchg
push
test
out
xchg
std
add
movsl
cmc
enter
xchg
imul
inc
dec
call
outsb
jns
sub
in
jno
xchg
hlt
pop
mov
ja
sahf
iret
push
push
xor
jge
arpl
and
lods
inc
push
lahf
adc
fldenv
xchg
fmull
push
sahf
outsl
sbb
jbe
cmp
inc
dec
aam
push
add
xor
cmp
push
sbb
cmpsb
int3
sbb
dec
fistpll
jae
inc
xchg
sub
pop
inc
test
push
jle
add
jo
cmpsb
jl
push
jp
cli
xor
jmp
outsl
into
js
mov
pushl
fwait
pop
cwtl
imul
adc
dec
sub
xchg
lcall
jl
popf
cmpsl
adc
lahf
aad
int
fwait
xor
inc
out
iret
mov
mov
dec
dec
mov
call
cmpsl
inc
int3
sbb
outsl
mov
out
cwtl
jno
push
dec
jge
mov
es
and
scas
and
decb
inc
out
pop
dec
or
ja
mov
mov
insl
stc
testl
jbe
mov
dec
inc
sub
adc
push
push
xor
and
jle
adc
pop
mov
sbbb
mov
data16
jg
stos
fwait
xor
cmp
jecxz
aam
scas
push
cwtl
adc
enter
popl
stos
xchg
daa
cmpsb
push
jne
ja
xor
mov
in
adc
insl
in
sub
pushf
pop
sahf
mov
jge
mov
in
mov
push
out
sbbl
mov
jo
jge
or
dec
inc
jbe
push
mov
and
into
add
outsb
xchg
jne
inc
popf
enter
sub
cltd
sbb
sbbb
stos
das
jbe
mov
dec
add
inc
leave
mov
jb
cmp
repz
jge
lret
xor
or
pop
sub
mov
xor
ljmp
mov
js
frstor
pop
or
insb
jbe
push
push
int3
dec
lahf
xchg
pop
jb
xchg
or
movb
inc
shll
xchg
insl
fbld
ljmp
sbb
xlat
nop
mov
push
sub
stos
clc
xor
iret
mov
dec
jl
add
gs
and
sahf
jnp
mov
cmp
fwait
ret
pop
gs
inc
jmp
pop
mov
cltd
or
jg
mov
out
mov
mov
sbb
notb
into
jge
pop
data16
xchg
xchg
push
adc
jo
add
testb
sub
in
dec
cwtl
pop
and
sbb
fs
xor
mov
xchg
ja
je
in
movsl
jnp
or
xchg
lret
pop
imul
aam
xor
sub
cmp
sbb
push
xor
push
aas
ret
movsb
push
xchg
mov
sti
clc
cmpsb
xor
dec
pop
or
adc
out
addr16
lods
call
pop
leave
sub
daa
leave
jb
cmpsl
and
pop
add
sbb
sahf
jp
mov
sub
mov
test
pop
adc
pop
fdivrp
cwtl
push
test
push
inc
es
xchg
pop
sahf
or
dec
adc
jno
ljmp
mov
lea
call
jp
icebp
push
insb
dec
jg
jns
jle
push
out
je
push
mov
outsb
sub
bound
cmpb
mov
aad
jl
dec
pop
dec
inc
scas
mov
mov
mov
ljmp
stos
pop
mov
mov
out
in
mov
or
out
stc
cmp
in
rol
lahf
lds
cmp
push
clc
cmp
jbe
flds
inc
push
imul
sti
ret
jle
popa
or
cmc
mov
or
repz
mov
cmp
shr
xchg
pop
adc
jg
push
test
xchg
xorl
or
dec
xchg
xor
pop
ljmp
test
arpl
or
cmp
rcrl
insl
shlb
jl
je
dec
mov
dec
testb
xor
inc
out
add
imul
out
cmp
adc
push
jecxz
incb
and
push
jecxz
icebp
or
mov
jmp
push
dec
adc
mov
dec
and
int
sub
jo
into
add
lret
sub
test
test
add
xor
fcmove
leave
xchg
jnp
push
or
xlat
xchg
rolb
sbb
int
loope
adcb
xor
rcrb
or
iret
leave
xchg
mov
adc
xchg
imul
push
mov
nop
sbb
aad
fsts
xchg
adcl
imul
fiaddl
insl
inc
fcoml
ja
into
inc
lock
mov
xchg
out
adc
dec
insb
scas
xchg
xchg
pop
aad
dec
fptan
cmp
sub
jns
mov
popa
dec
mov
lea
iret
into
push
add
inc
jmp
pop
push
mov
lea
movl
bound
out
xor
push
rcr
repz
jmp
mov
incl
xor
add
inc
inc
fmuls
in
mov
push
sub
lock
popf
lds
xor
mov
test
inc
nop
shl
push
scas
sbb
adc
jb
xor
mov
jl
out
ds
xchg
std
stc
fcmovbe
cmp
mov
int3
imul
idiv
fisubs
mov
jnp
inc
inc
dec
int3
mov
lods
push
and
out
repz
jl
adc
jp
stos
xchg
sub
sbb
test
jo
lock
cwtl
dec
push
xor
mov
aam
xor
into
jnp
adc
lcall
inc
pop
ss
test
ror
dec
pop
cld
insl
push
sahf
add
xchg
repz
mov
pop
jl
imul
xorb
xor
lret
xor
fstps
or
jbe
in
push
nop
shlb
mov
jp
bound
lret
inc
pop
push
mov
mov
jb
test
js
push
leave
insl
movsb
out
xchg
loop
mov
xor
inc
xor
std
dec
int
push
jne
mov
pop
data16
movsb
stos
push
outsb
xchg
mov
xlat
idivb
mov
or
dec
in
addr16
fistps
repnz
mov
lds
dec
not
mov
inc
add
sbb
xchg
fadds
fstpt
shrl
flds
sub
mov
lock
jmp
das
jp
add
ja
dec
imul
jmp
and
and
cld
push
jne
and
mov
lds
add
loop
sbb
dec
ret
sbb
mov
fstpt
adc
cmc
cmp
stc
xchg
pop
icebp
enter
push
jle
sub
mov
rcr
xor
loopne
xchg
lea
cwtl
adc
adcl
movb
iret
iret
mov
mov
shr
cmp
cwtl
adc
and
and
icebp
add
push
cs
push
sbb
sub
lret
jae
add
mov
mov
icebp
ror
sub
out
add
push
cmc
ret
jns
aad
mov
test
jmp
clc
jnp
dec
sbb
mov
jae
rolb
call
inc
push
aam
inc
test
or
test
adc
mov
lret
lcall
je
pop
scas
dec
and
cmp
jmp
jne
testl
fldt
xchg
pushf
dec
insl
ljmp
cs
push
inc
rorl
sbb
into
mov
xchg
sub
imul
cli
inc
outsb
xor
and
jbe
cmp
nop
or
ret
lret
inc
mov
jg
sarb
arpl
pop
add
lret
ds
xlat
pop
fwait
jbe
jecxz
je
icebp
push
fs
test
xchg
add
cs
sub
stc
test
adc
jmp
mov
insb
mov
adc
lock
nop
cmp
sub
popa
aas
aam
hlt
mov
adc
sbb
les
data16
lock
pushf
lea
mov
jecxz
rcrb
xchg
adc
inc
or
jo
xor
push
pop
inc
push
push
int
sbb
in
rorb
das
insb
data16
test
movsb
sbb
repz
dec
bound
divb
push
adc
xor
dec
dec
test
cmp
push
or
arpl
aad
xchg
push
out
cli
icebp
and
addr16
loope
xor
lods
dec
mov
jbe
xor
int3
into
pop
inc
call
xlat
aam
mov
mov
ds
je
pop
xchg
adc
stos
inc
std
jno
out
das
out
dec
cmpsl
sarb
hlt
scas
mov
xchg
mov
push
leave
loope
xchg
gs
dec
mov
cmpsl
loopne
pop
dec
pop
inc
scas
mov
mov
dec
push
sti
inc
xchg
lea
xchg
adc
sbb
dec
or
mov
sbb
int3
push
cs
ret
mov
insb
dec
push
cmpsl
xchg
push
pop
push
test
adc
aam
sbb
xchg
jae
adc
sub
mov
inc
xor
dec
mov
iret
jnp
out
sbb
int
push
repz
iret
add
ljmp
or
dec
scas
jp
out
adc
mov
jp
mov
inc
pop
jge
popa
repz
into
in
lret
aam
mov
xchg
push
ds
loop
jns
testl
pusha
push
cld
inc
xor
xchg
out
jnp
rclb
leave
rcr
divb
xchg
xchg
aas
dec
jmp
ret
inc
sar
and
out
inc
mov
sub
fnstenv
inc
mov
inc
push
adc
int
cmp
test
out
test
dec
imul
cmp
outsl
xorl
mov
loop
adc
add
movb
adc
out
mov
dec
pop
cwtl
je
push
sbb
pop
nop
add
xor
sub
test
outsl
inc
jle
repz
jp
into
cli
aad
dec
adc
cmpsl
and
inc
sbbl
jne
push
jge
cld
xchg
fs
shrb
push
daa
loopne
jp
scas
test
adc
scas
iret
xchg
mov
inc
jae
ret
mov
loope
loopne
mov
seta
xor
out
mov
es
pop
mov
add
lea
sub
push
sbb
pop
and
adc
fwait
xchg
movsl
cli
hlt
push
insl
jmp
dec
mov
mov
clc
add
imul
icebp
aas
pop
std
cmpsb
scas
out
sub
pop
iret
sub
fst
push
lahf
std
pushf
outsb
push
dec
hlt
add
pop
in
sub
xchg
in
mov
filds
arpl
jae
loop
and
pop
rcr
pop
in
cmpsb
mov
mov
jno
xor
sub
adc
cmp
fidivrs
inc
adc
roll
fs
pop
pop
push
xchg
xor
add
cld
push
jmp
sbb
shlb
sbb
movsl
bound
je
lret
shll
imull
mov
mov
jge
sub
and
lods
mov
xor
jle
xor
inc
xlat
leave
mov
inc
push
cmp
mov
outsl
imul
push
aam
jo
out
lahf
lret
scas
fdivrs
in
shll
sbb
pop
rolb
push
xchg
pop
fisttpll
cmp
xchg
lods
fists
mov
data16
out
into
or
mov
daa
mov
or
sbb
sub
or
in
push
push
std
xor
dec
pop
ret
fistl
jmp
xchg
add
sahf
jne
dec
adc
xchg
sub
jbe
push
pop
or
insl
fcmovnbe
into
jne
jae
sub
mov
cs
jl
and
shr
rcrl
rolb
int3
mov
movsb
into
jecxz
push
insl
push
int
pusha
dec
out
lds
shlb
imul
inc
ljmp
jnp
cltd
mov
int
mov
cmp
lds
lcall
or
insl
mov
jge
fldcw
sbb
loop
ja
outsb
cmp
mov
div
cmc
add
inc
sbb
sub
loop
jge
sbb
test
rorb
sub
int
xchg
inc
test
lods
nop
jmp
mov
out
hlt
or
leave
push
sbb
pop
mov
outsl
sbb
inc
cmpsb
inc
jae
ds
rorb
pop
jns
into
push
push
mov
xor
push
insb
mov
jne
sarl
or
mov
loope
fsub
aad
push
xchg
les
xchg
rcrl
sub
rcrl
xchg
in
push
lret
fisubrl
inc
push
test
mov
xchg
test
mov
push
je
out
mov
mov
push
out
test
nop
dec
or
sbb
imul
xchg
jno
outsb
scas
adc
cmp
leave
jae
ror
je
mov
icebp
bound
mov
xor
or
aaa
sub
jmp
mov
jae
cmp
mov
pop
int
jg
pop
mov
mov
loopne
mov
lret
pop
sbb
lcall
clc
add
pushf
js
sti
lods
mov
leave
or
loop
push
insb
dec
dec
gs
negb
sub
aaa
dec
xorb
clc
pop
das
jl
push
mov
push
sub
push
cmp
les
es
cmpsl
push
and
pusha
adc
and
out
clc
jg
movsb
push
mov
stos
orl
dec
movsb
sub
cmp
sub
clc
adc
push
insb
int
sub
xchg
frstor
and
jo
stos
and
push
outsl
and
mov
in
xchg
xchg
and
addr16
in
add
add
dec
xchg
or
mov
xorl
and
mov
clc
fsubl
pop
add
add
imul
hlt
nop
mov
mov
jne
rorb
cmp
stos
and
lods
mov
sub
in
out
call
push
shr
mov
xlat
or
push
mov
sub
add
adc
push
jp
rol
lods
push
jbe
jo
jmp
and
mov
pop
mov
pushf
adcl
cmp
imul
push
outsl
in
cmp
std
in
leave
xchg
cmc
out
and
lcall
push
sbb
dec
cwtl
xchg
mov
push
sub
stos
or
mull
xchg
push
sub
push
pop
rclb
pop
adc
inc
jl
cld
aad
jmp
mov
gs
fnstenv
pushf
mov
test
ds
rcrl
outsb
repnz
add
hlt
dec
ljmp
jle
add
sub
icebp
bound
mov
sbb
cmp
stc
mov
xchg
xor
fdivrl
jbe
std
daa
lret
andb
iret
inc
test
jne
adc
shll
loopne
ja
sub
cmc
adc
rorb
rorb
das
outsl
lahf
adc
fstpl
adc
aad
add
lods
das
aam
sbb
or
inc
out
pushf
and
xchg
sub
or
fs
pop
sarb
scas
jge
sub
hlt
inc
lret
stc
pop
int
and
call
outsl
push
fs
adc
into
xchg
sbb
xchg
cli
inc
cli
cmc
aam
shll
rcrb
sbb
lea
into
fidivl
out
shll
and
repnz
xchg
jb
lret
mov
fs
push
rol
cli
pop
mov
int
and
icebp
sub
or
add
rcll
jno
dec
aad
ds
sub
push
pop
out
jne
dec
out
xchg
mov
bound
test
mov
push
ds
sub
call
jbe
inc
mov
andl
mov
adc
adc
xchg
mov
test
push
fstl
sub
mov
imul
sahf
dec
testl
adc
jbe
jnp
hlt
fstl
mov
jmp
int3
or
add
push
stos
pop
sub
push
outsl
dec
jno
adc
xchg
out
inc
xchg
scas
xchg
xchg
xchg
data16
xchg
push
cmpsl
mov
mov
jae
mov
rcll
adc
xchg
int
enter
fcmovbe
mov
and
mov
xchg
xor
cmp
cwtl
mov
push
roll
js
bound
jmp
cld
hlt
icebp
and
ljmp
pop
cmpb
or
lret
aad
xchg
push
fimull
outsl
sub
sahf
push
mov
push
mov
hlt
pop
shll
sub
xchg
rorb
dec
add
lret
xchg
mov
sahf
push
cmp
outsb
sub
pop
dec
mov
push
jo
out
insl
lock
fldenv
lret
negl
xor
adc
mov
push
push
aam
xchg
mov
fcomp
shr
ret
ror
jle
xor
pop
mov
adc
push
rcrb
js
add
cli
pop
dec
sahf
xchg
mov
push
es
mov
sahf
xchg
jbe
fisubrs
inc
push
outsb
add
sahf
cmp
call
inc
out
sbb
int
loopne
push
xchg
mov
int
or
cmp
jle
int
mov
adc
addr16
inc
jns
push
ss
hlt
xchg
pop
daa
adcl
push
mov
ss
xchg
pop
shl
and
push
aam
aaa
dec
aam
pop
leave
adc
adc
pop
test
lds
push
add
nop
mov
shrl
push
loopne
jp
jmp
ljmp
jmp
pop
ljmp
jmp
pop
xchg
mov
rorl
mov
add
lods
push
push
push
sub
js
xchg
fsubrp
aaa
pop
mov
mov
sbb
push
push
or
nop
pusha
sub
mov
dec
push
adc
mov
stos
or
sahf
dec
pop
dec
push
leave
addr16
mov
lahf
lock
push
bound
les
fimuls
mov
repz
and
fisubrs
out
push
push
mov
add
sbb
adc
lods
ret
gs
pop
in
outsb
imul
sbb
xor
mov
shrl
and
in
and
pop
daa
cs
es
aad
pop
out
and
out
push
out
mov
push
dec
push
push
mov
push
sahf
dec
cmpsl
cltd
test
or
iret
pop
mov
enter
dec
clc
push
fists
push
push
iret
dec
push
and
mov
and
push
mov
push
int
cwtl
and
mov
cmc
add
sahf
in
adc
dec
mov
adc
fs
mov
pop
fsub
adc
rorl
addb
push
fstl
xchg
pop
push
pop
push
dec
push
ss
adc
push
loop
aam
int
loopne
mov
or
lock
mov
sub
pusha
pusha
or
repnz
out
pop
mov
jnp
push
mov
cmp
movsb
mov
test
mov
shr
inc
pop
push
gs
fisttpl
sbb
mov
xlat
mov
xor
mov
aad
pop
dec
enter
adc
jbe
data16
xlat
das
mov
cmpsb
xchg
pop
mov
mov
jge
stc
insb
cmp
cmc
mov
icebp
sbb
sub
fldt
div
sahf
and
mov
sub
imul
push
dec
push
mov
inc
cltd
cwtl
or
jle
out
bound
sbb
jae
dec
mov
ss
test
sahf
push
not
mov
push
add
cli
test
inc
or
sbb
ja
nop
sahf
cmp
out
lods
mov
mov
adc
jle
fiadds
rcrb
jmp
jmp
rorb
push
lods
mull
xchg
jecxz
cwtl
test
jle
jbe
leave
es
lahf
mov
out
cmp
shl
out
mov
xchg
out
jmp
out
loope
push
dec
cmpsb
jns
push
xor
dec
sbb
mov
mov
push
gs
and
mov
gs
pop
sbb
push
sub
xor
inc
xchg
push
sbb
adc
rorb
xor
jle
in
std
cmp
or
repnz
lea
add
mov
dec
test
addl
xchg
or
dec
loope
pop
pop
cs
adc
push
mov
jnp
adc
xchg
mulb
lods
cmp
je
xchg
inc
xchg
cld
adc
sub
notb
push
mov
ret
in
lret
pop
jb
dec
test
pop
xor
int
mov
jno
mov
inc
dec
mov
push
cmp
mov
cmp
out
jno
sti
pop
or
push
cwtl
dec
xchg
out
int3
into
xchg
adcw
into
sbb
aad
or
mov
lret
pop
aam
cli
es
dec
dec
lods
pop
lret
jns
mov
out
ror
stos
push
xlat
push
psubusb
mov
jnp
dec
lcall
mov
add
jo
and
mov
push
pop
jl
jne
cmp
in
jbe
xchg
inc
jno
push
jno
cmc
aam
addr16
in
mov
repz
mov
clc
cwtl
ja
sbb
sti
mov
insb
jo
lret
fnstsw
decb
aas
inc
rolb
adc
ja
add
sahf
lods
aad
outsb
loopne
aam
repnz
cwtl
sbb
and
mov
xor
xchg
or
sub
f2xm1
push
movsl
out
bound
arpl
sbb
mov
push
push
out
and
mov
xor
call
rcr
lock
jbe
mov
fiaddl
hlt
cmpsb
repnz
dec
cwtl
lahf
push
push
jl
and
push
push
es
xor
rclb
push
mov
fs
je
add
push
xchg
cmpsb
and
lea
pop
cmpsb
out
pop
cmp
push
mov
or
rcll
hlt
cmc
out
hlt
movsb
es
stc
mov
jge
and
aad
gs
rcr
fcomp
add
and
mov
mov
aas
adc
shl
movsb
arpl
rcll
js
fcoms
pop
push
pop
movhlps
data16
push
fisttps
shl
mov
adc
scas
aam
in
xchg
shl
and
movsb
xlat
push
div
dec
out
mov
in
gs
adc
pop
mov
xchg
add
push
fptan
lahf
mov
xchg
adc
push
or
sbb
xor
test
mov
lock
hlt
pop
test
in
mov
sub
int
ss
fsubs
adc
fidivl
adcb
adc
and
call
ret
enter
or
xor
sub
rcrl
mov
push
fidivl
xor
rcll
xor
adc
xchg
iret
and
adc
addr16
cmc
pop
fadds
adc
ret
xchg
or
fstl
rcr
sub
fs
push
fsts
mov
icebp
sub
mov
popf
cltd
cs
in
je
imul
push
mov
mov
lret
or
lcall
pop
push
test
aam
push
stos
inc
sbb
xchg
add
test
out
scas
out
mov
outsl
lock
rorl
dec
or
jecxz
ljmp
ficoml
stc
jmp
ret
lcall
into
add
lock
mov
xchg
icebp
and
push
repnz
add
inc
lods
pop
xchg
test
or
push
arpl
xchg
add
adc
insl
test
lea
sub
fs
add
and
add
mul
repz
fs
aad
bound
ret
adc
in
lahf
sub
xchg
mov
je
ret
ror
and
mov
sbb
lret
adc
js
push
sub
xchg
rcrl
cli
xor
mov
push
sbb
or
shlb
ljmp
lret
aad
call
mov
sbb
push
xlat
out
addr16
aam
push
pop
int3
adc
lret
pop
int
lret
dec
fistl
popa
adc
dec
mov
sbb
push
out
fstpl
mov
pop
mov
xchg
movsl
sbb
mov
adc
or
loop
es
mov
push
fbld
repnz
xchg
xchg
pop
aad
and
mov
lds
adc
jl
mov
mov
rorl
push
and
repz
and
ret
ja
icebp
jb
outsb
cmp
cmpsb
sbb
push
movsb
xchg
aad
mov
add
fnsave
jns
pop
adc
mov
xchg
add
int3
and
clc
adc
or
in
mov
jb
and
pop
repz
lret
movsl
mov
das
xor
xchg
repnz
pop
xor
insb
aad
mov
mul
ret
mov
adc
rclb
pop
xchg
xor
pop
lret
inc
insb
sbb
movsb
dec
push
and
in
xchg
jg
icebp
outsb
adc
hlt
arpl
add
hlt
rolb
call
popf
out
into
pop
mov
out
std
fs
cmp
out
sbb
jl
adc
into
testb
test
push
push
addr16
aaa
ljmp
in
xchg
pop
push
cs
aad
xchg
in
gs
or
adc
cwtl
adc
lods
roll
pop
mov
ljmp
rcll
sbb
iret
mov
cwtl
test
or
mov
lds
lock
out
and
ja
fcmovnbe
mov
xor
jecxz
aam
add
cli
sbb
adcb
shl
movb
cmpsl
adc
jo
dec
insl
dec
sbb
fsubs
jge
mov
mov
aaa
mov
rclb
xor
or
ret
sub
notl
imul
js
adc
push
inc
fwait
xchg
adc
sbbb
jg
xchg
loope
popa
xchg
add
iret
sbb
cmp
iret
xchg
pop
mov
inc
out
cmp
addr16
scas
out
mov
cli
es
pop
and
aad
cmpl
out
dec
aas
jnp
sarb
fcoms
mov
adc
lock
rorb
push
imul
mov
loop
lods
xorb
test
lret
mov
inc
pop
cwtl
push
push
and
push
int
inc
call
cmpsb
int
mov
fists
jb
and
out
pop
cmc
xchg
and
dec
push
mov
repnz
nop
aad
push
xlat
in
xchg
dec
in
fsubs
mov
int3
xor
push
pop
mov
sbb
js
rcrl
sub
loope
imul
mov
bound
into
push
pop
adc
data16
sbb
cmpsb
mov
mov
xchg
xchg
lods
ds
into
adc
push
lahf
cltd
and
leave
mov
dec
xchg
lret
rorb
push
dec
mov
stos
sbb
inc
cmpsb
push
icebp
add
sbb
and
xorl
cmpsb
jp
dec
call
cmc
sahf
iret
in
inc
icebp
dec
out
shlb
and
xor
test
push
fidivrl
ficompl
mov
sub
xor
adc
push
dec
ds
insl
xor
pop
jnp
stos
jo
neg
dec
pop
ds
and
xor
into
loop
mov
add
xchg
rcll
cs
xor
pushw
adc
pop
in
mov
push
out
cmp
stos
test
loopne
mov
lea
sahf
mov
inc
mov
in
and
notl
push
daa
push
jb
push
movsl
pop
cmp
in
adc
push
testl
lret
fcom
imul
jecxz
xchg
mov
adc
push
xor
mov
shrb
cmp
loope
adc
adc
xchg
adc
mov
lock
add
ds
aam
push
rorl
cltd
adc
jmp
and
test
or
pop
mov
in
cmpsb
fisubrs
shrl
jmp
cmp
lea
inc
ljmp
dec
ja
js
cmpsb
sub
or
mov
xchg
pop
fwait
or
bound
add
xchg
xchg
loope
and
leave
stos
lret
int
push
jmp
adc
inc
xchg
lcall
xchg
cmp
sbb
mov
fidivs
stc
mov
pop
mulb
out
lret
mov
sub
fistpl
push
dec
mov
iret
mov
ret
cmp
cld
push
jbe
iret
gs
lret
push
insb
xchg
push
sub
adc
cmpsb
in
aam
add
push
xchg
shll
adc
call
push
dec
pop
pop
cmp
jo
repnz
inc
dec
xor
mov
shr
icebp
stos
push
scas
lret
xchg
sbb
mov
daa
pop
daa
js
sub
push
or
aam
dec
inc
sbb
sub
cltd
shrl
aad
shll
shll
jmp
inc
stc
inc
pop
jae
and
xchg
dec
test
loopne
sub
pop
push
ljmp
ficomps
data16
xchg
enter
push
scas
lock
aas
jo
mov
mov
add
inc
adc
flds
ret
push
cmp
loopne
pop
aad
push
pop
sbb
cmp
pushf
mov
fcomps
dec
pop
push
push
xchg
ret
and
xchg
push
lret
inc
mov
idivb
pop
push
es
pop
movsl
rcrl
xchg
mov
mov
push
xchg
xchg
inc
cli
pop
lock
in
rcl
repz
popa
xor
jb
adc
ds
xchg
dec
sbb
jnp
sbb
iret
cmp
mov
pop
mov
pop
pusha
mov
pop
aaa
fsubs
sbbb
push
int
sahf
in
xor
and
ljmp
sbb
bound
pop
shlb
fidivl
sbb
and
out
mov
clc
xchg
fsts
dec
fdivrl
les
insb
loope
push
xchg
cmp
adc
dec
mov
sarl
push
gs
aas
dec
mov
sub
xchg
pop
loope
ss
mov
movsb
pop
clc
cwtl
scas
mov
loop
stos
push
sbb
pusha
mov
sar
mov
push
and
mov
or
mov
scas
xchg
xlat
int
push
inc
xchg
push
ret
adc
pop
xchg
fcomps
mov
aad
call
sbb
cmp
push
mov
xor
adcl
inc
xlat
or
adc
rorb
data16
in
rclb
into
fcom
lds
sahf
push
jne
rcll
rclb
sbb
or
mov
call
movlps
mov
out
adc
out
and
gs
aas
and
mov
aad
sbb
xor
xchg
shll
loope
mov
xchg
lret
or
mov
pop
dec
dec
mov
bnd
adc
push
jo
sub
dec
inc
sbb
rorl
gs
xchg
loope
test
add
loop
dec
xlat
cmp
pop
dec
cltd
dec
int3
out
loope
push
lds
popf
fsubr
pop
dec
inc
push
ljmp
in
stos
push
mov
adc
es
add
mov
xchg
xor
rcrb
lret
sahf
dec
pop
cmp
popa
jle
push
into
pop
push
in
cmp
in
cmpsb
sub
inc
filds
fnsave
inc
scas
icebp
clc
iret
lret
or
call
inc
aad
jmp
pop
and
ret
aad
lods
push
bnd
nop
xchg
dec
adc
mov
gs
or
or
push
call
mov
push
adc
mov
aad
add
adc
ds
jle
mov
push
lds
int
push
sti
sub
fists
fsub
xor
insl
mov
mov
inc
loopne
xor
add
pop
pop
lea
pop
sbb
sar
push
push
inc
adc
mov
xor
push
xor
or
mov
sahf
out
pop
mov
xchg
shr
in
push
mov
cli
out
mov
out
cmc
jmp
stos
outsb
call
xchg
jne
int
cli
mov
fisttpll
adc
cltd
scas
dec
sub
sbb
adc
and
in
gs
or
and
add
dec
stc
adc
mov
ret
and
and
test
xchg
shrl
mov
rorl
mov
jge
in
xor
pusha
xchg
shll
and
mov
push
iret
loope
rorl
and
fsubrs
inc
push
or
mov
push
rcll
pop
inc
fcomps
enter
lea
roll
ficoms
mov
call
add
aas
aam
shlb
aaa
out
mov
xchg
sub
xchg
xor
xlat
shrl
mov
imul
jbe
and
test
repnz
mov
daa
xchg
xorb
jne
hlt
push
das
sbb
mov
call
sbb
int
into
pop
lret
lahf
sarl
cmp
or
cmp
adc
jnp
xlat
loopne
adc
adc
dec
loope
test
xlat
mov
mov
fcoms
or
imul
sbb
jl
dec
lds
and
ds
pop
cs
ds
in
push
push
mov
repz
xchg
pop
mov
test
mov
lock
xchg
sub
push
jmp
lcall
shl
fidivrs
pop
inc
out
xchg
jecxz
xchg
and
addr16
sbb
add
stos
rcll
inc
push
xchg
mov
push
outsl
ss
push
arpl
sub
fdiv
mov
rcr
fwait
out
insl
subps
out
mov
leave
and
pusha
jbe
xor
push
pop
stos
and
lds
cltd
in
lds
ss
mov
cmp
call
aaa
fstpl
xchg
out
loop
out
mov
jne
cwtl
imulb
adc
pop
mov
cmp
sub
adc
ss
mov
xor
mov
push
out
roll
dec
adc
xor
inc
aad
cmpsl
aad
aas
aad
xor
mov
xor
adc
jo
cmpb
xchg
add
icebp
subps
xlat
fcoms
mov
scas
js
xor
aam
ret
add
jecxz
push
in
adc
mov
and
xchg
sub
mov
out
ss
icebp
in
sbb
xchg
sbb
sub
aas
popa
cmp
shrl
and
inc
add
repnz
aaa
or
xchg
push
je
sbb
in
push
mov
sub
mov
das
adc
cs
adc
adc
hlt
inc
sub
loopne
inc
dec
adc
push
lods
xchg
mov
stos
lods
in
stos
pop
fldcw
in
fstpl
sub
cmc
mov
in
pop
mov
and
in
fists
or
jge
adc
sbb
lea
or
jbe
adc
adc
cs
mov
mov
sub
shlb
in
push
or
scas
xchg
mov
ret
inc
push
cmp
jecxz
iret
adc
push
xchg
ret
rolb
or
push
or
pop
dec
dec
push
stos
adc
lock
push
sahf
cmp
repz
xchg
or
mov
scas
sahf
in
imul
or
aam
rorb
cmpsl
fidivrs
fsubrs
nop
or
test
stos
in
aam
xchg
mov
and
sbb
xchg
pop
sbb
scas
loope
cmc
fs
xlat
movsb
sub
hlt
lret
xchg
xchg
or
mov
rclb
xlat
jae
ror
dec
mov
out
xchg
out
sub
xchg
jo
dec
icebp
mov
push
insl
dec
sbb
push
shl
adc
mov
push
or
mov
push
and
pop
sbb
stc
adc
sbb
lea
iret
mov
push
and
xor
movsb
aad
fdivrl
in
cmpsb
leave
outsb
clc
stos
xchg
fstpt
xchg
frstor
push
mov
xchg
repz
xchg
adc
frstor
or
mov
ficoms
aaa
pusha
loope
divl
in
pop
std
push
sahf
enter
dec
pop
repnz
mov
and
call
sub
data16
and
xchg
and
pop
or
adc
xchg
aam
popf
in
pop
icebp
aad
adc
mov
sahf
cs
adc
xchg
inc
mov
xlat
bound
enter
mov
sbb
push
leave
cmp
leave
adc
inc
mov
xchg
mov
mov
push
cmp
and
out
call
jo
and
loope
xchg
xor
pop
push
mov
pop
push
adc
loope
pop
data16
and
scas
push
xchg
data16
data16
mov
mov
push
and
lea
inc
adc
and
sarl
mov
test
outsl
dec
cmpsl
push
mov
es
sub
push
ds
mov
xor
aad
xor
mov
dec
jmp
loopne
push
jg
in
xchg
xchg
sbb
lds
fstl
mov
inc
fcomps
es
pop
div
fsub
cmpsl
call
mov
fisttpl
into
sub
cmp
push
pop
and
dec
notl
adc
xor
sbb
xor
repnz
jmp
jnp
add
stos
in
pop
pop
movsl
mov
inc
push
icebp
mov
pop
insb
repnz
adc
mov
inc
aam
outsb
push
inc
das
scas
pop
jmp
ds
jnp
inc
jl
jne
ret
cli
adc
aad
pop
inc
jns
int3
adc
xlat
rcll
xchg
mov
add
inc
ds
enter
xlat
jb
cmpsl
loopne
mov
adc
mov
int3
or
inc
mov
jbe
fmul
sbb
je
push
hlt
xchg
sub
jns
shl
mov
jle
and
jbe
pop
mov
stos
fidivl
insl
push
mov
xchg
cmp
cmpsl
daa
in
aad
push
out
fiaddl
mov
aad
xchg
xchg
imul
out
push
out
int3
movb
push
pop
fstpt
push
mov
rcl
lcall
fsubrs
loope
dec
add
lret
inc
cmp
mov
adc
jb
pusha
repz
fldpi
inc
gs
cwtl
lods
jnp
dec
imul
daa
daa
inc
orl
push
cmp
dec
lret
fisttpl
cld
jmp
inc
jp
data16
and
pop
int
ljmp
pop
leave
imul
loopne
mov
sbb
rclb
loope
insb
jp
cmpsb
xchg
clc
push
sahf
and
cltd
dec
dec
in
mov
mov
push
inc
xchg
sbb
push
repnz
mov
or
roll
and
mov
leave
xorb
je
jo
inc
pop
iret
pop
lret
dec
mov
or
adc
aad
fcoms
or
rcrb
ficomps
lret
rcrb
or
xor
in
mov
ret
movsl
gs
xor
sub
lods
push
clc
sbb
jmp
stos
movsb
mov
test
adc
and
cmp
test
push
addr16
clc
lgs
or
in
mov
push
icebp
push
test
pop
mov
bound
fiaddl
pop
inc
stos
xchg
or
pushf
xor
sub
jae
lods
and
pop
cwtl
mov
push
pusha
lods
pusha
inc
mov
adc
xor
pop
es
xchg
mov
sub
push
pop
inc
adc
add
ss
inc
test
loope
into
jnp
rcll
vdivss
or
adc
insb
and
or
mov
in
sbbl
dec
mov
jmp
cmp
jecxz
jle
adc
hlt
inc
pop
xor
sbbl
call
push
in
push
inc
ljmp
pop
jae
shl
jae
std
fdivrs
iret
pop
jo
ja
loopne
push
popa
jmp
adc
add
jnp
sub
or
and
in
fldcw
ljmp
jne
cmpsb
add
sbb
pop
push
jle
mov
pop
clc
mov
dec
aam
adc
jb
or
es
xor
mov
xor
push
loope
aad
movsl
dec
mov
adc
cmpsl
push
lea
or
cmp
jo
sbb
fcmovnu
test
jo
loope
idiv
fdivs
mov
repnz
and
pop
fimuls
mov
mov
clc
shr
icebp
push
bound
mov
shl
and
fstl
mov
fcmovu
pop
cli
ficoml
cld
je
inc
mov
mov
xchg
sub
out
loop,pt
sub
mov
fistpl
xchg
cmpb
cmp
aad
int
lcall
push
dec
fistps
or
sub
pop
cmpsb
subl
fcoml
pop
shll
mov
inc
bound
mov
adc
xchg
adc
test
add
xchg
dec
dec
dec
mov
and
scas
xchg
and
std
pop
lahf
nop
xchg
dec
push
push
and
push
jo
movsl
in
mov
dec
jl
scas
repnz
push
in
add
fbld
inc
test
into
aad
and
push
dec
push
or
cs
int
scas
dec
adc
or
imul
push
stos
andl
pop
lcall
pop
and
add
aad
fwait
mov
mov
mov
and
outsb
add
xchg
cld
test
jno
popa
mov
dec
add
cwtl
cs
push
mov
add
push
adc
mov
mov
pusha
aam
sbb
js
rcrb
es
mov
hlt
outsl
mov
mov
mov
jne
lret
in
int
adc
push
sahf
ja
jb
sahf
shll
xchg
dec
fidivrl
call
fmul
scas
out
add
cmp
les
or
int
dec
fisubs
int
xchg
mov
push
aad
out
inc
loop
cli
not
adc
push
adc
cmp
popa
sbb
inc
ss
mov
call
pop
push
dec
push
sub
repnz
call
es
dec
lahf
in
insl
mov
xchg
mov
xchg
dec
out
inc
pop
mov
xchg
pop
xchg
mov
ss
cs
jnp
jo
mov
lods
bound
inc
leave
pop
scas
xchg
or
dec
push
out
jb
adc
fwait
jp
stos
push
add
mov
in
mov
or
xchg
pop
and
jns
push
sahf
jno
sub
ret
test
and
adc
push
sbb
sbb
les
adc
bound
xchg
dec
mov
or
inc
fimuls
bound
mov
pop
push
movsl
sbb
in
cli
sub
inc
fisttpl
mov
adc
rcr
push
lahf
data16
mov
inc
shll
mov
adc
sub
mov
cmp
shll
push
jns
push
push
rorl
pop
lcall
fmull
ds
inc
cmp
repz
int3
sahf
gs
leave
mov
imul
mov
adc
call
nop
cwtl
aam
aad
push
dec
scas
adc
cwtl
push
mov
dec
xchg
ret
lea
imul
pop
cmp
xlat
pop
movsl
add
xchg
xchg
mov
gs
push
out
into
loop
es
or
sbb
push
pop
jp
jb
adc
cmpsb
mov
cs
xor
and
or
fstpt
ss
pop
push
cmpsl
leave
mov
mov
mov
sub
es
mov
pop
mov
subl
lods
cwtl
dec
cli
imul
jbe
and
pop
sarb
jmp
mov
dec
lahf
ds
cmpsl
add
pop
or
shll
dec
in
cmpsb
xchg
jmp
out
push
cvttps2pi
add
scas
or
pop
nop
inc
sbb
mov
je
mov
les
mov
imul
mov
cli
jle
ror
xor
push
ret
jb
push
sbb
aam
sub
sahf
inc
adc
mov
je
clc
fdivl
cmp
xchg
sbb
mov
ds
ljmp
jno
int
data16
mov
push
xchg
lds
inc
fmuls
js
jecxz
push
int
dec
iret
jg
dec
call
pop
push
mov
xchg
adc
inc
dec
stos
idivb
loope
dec
push
dec
in
add
fucomip
call
ss
call
push
mov
adc
mov
xchg
mov
fsts
jecxz
mov
push
add
cwtl
xchg
aam
xchg
add
adc
adc
stos
shll
popf
mov
pushf
rol
pop
push
fwait
ret
ja
push
mov
fstl
mov
xchg
push
std
xchg
rorl
outsb
enter
jle
push
pop
jecxz
adc
inc
pop
mov
inc
push
mov
aam
jnp
std
push
out
mov
notb
dec
push
sbb
mov
shrb
js
mov
rclb
jg
xchg
fimull
lret
xlat
shl
xchg
ds
fsubs
call
insb
pop
fadd
xchg
mov
push
leave
adcl
push
cmp
mov
jne
jne
test
xchg
cmpsb
mov
xchg
dec
stos
mov
ret
cmpsl
mov
push
cmc
add
les
inc
loop
and
xor
out
dec
push
xchg
rol
fidivl
dec
pop
lods
push
pusha
push
in
es
push
or
jo
mov
cmp
sti
dec
inc
lret
ss
mov
dec
inc
xor
cmpsb
xor
dec
shrl
enter
mov
mov
mov
icebp
int3
aad
sub
cmpsl
adc
movsl
or
arpl
and
push
and
std
and
movsb
lret
cmpl
xchg
push
shlb
xchg
out
dec
scas
xchg
or
xchg
hlt
fmul
push
je
es
sub
mov
xor
js
dec
dec
pop
jg
and
hlt
push
loopne
mov
js
sub
pop
xor
adc
fidivrl
mov
add
or
push
cs
cld
loopne
loopne
mov
mov
lock
jmp
mov
push
mov
ficompl
adc
adc
ret
dec
mov
fsts
mov
inc
xor
subb
stos
rclb
int3
add
pop
dec
xchg
push
xorb
or
lds
pop
pop
clc
mov
dec
or
cmc
or
mov
pop
out
mov
or
jnp
dec
jmp
mov
addr16
mov
shlb
outsl
mov
dec
cmc
pop
cmp
aam
adc
ret
mov
fnstsw
pop
popa
sub
pop
test
js
mov
insb
adc
mov
add
xor
adc
rorb
frstor
popf
xchg
in
inc
movsl
push
cmp
mov
xchg
stos
add
sbb
push
mov
inc
es
cs
aad
sahf
push
out
addr16
mov
es
push
push
jae
mov
xchg
fisttpll
mov
push
inc
push
cvtpi2ps
sbb
or
add
push
test
mov
pop
sub
push
or
mov
push
pop
loop
aad
lret
mov
adc
clc
sti
std
add
aad
ret
xchg
mov
cmp
xchg
outsl
xor
mov
or
test
xbegin
or
adc
or
mov
pop
es
mov
jp
xchg
bound
out
mov
out
jle
pop
mov
mov
mov
jle
xchg
or
push
ljmp
xor
cltd
lods
push
mov
mov
aas
add
es
ss
dec
fildl
test
jnp
xchg
popa
mov
xchg
and
push
icebp
sub
daa
in
mov
mov
in
xor
adcl
sbb
xchg
mov
stos
js
into
test
mov
mov
pop
dec
mov
pusha
cmc
sarb
ret
xlat
push
ret
pop
mov
push
adc
mov
daa
push
xchg
scas
pop
imul
fmuls
adc
mov
push
mov
repz
icebp
and
int
les
push
mov
xor
push
xchg
mov
lods
inc
push
cmpsl
icebp
call
test
adc
js
ss
push
pop
cmp
adcl
rolb
leave
cmp
dec
pop
or
xchg
pop
xor
xor
into
bnd
mov
outsl
sub
push
or
lock
mov
adc
adc
sub
pusha
test
lret
ljmp
xchg
scas
push
loopne
cli
mov
push
mov
lods
jl
pop
push
mov
push
sbb
pop
cli
das
movsl
mov
mov
mov
xlat
push
fcom
adc
jbe
push
xchg
roll
frstor
out
fldcw
testb
repnz
add
cmp
mov
ljmp
mov
add
leave
arpl
mov
sub
sbb
repnz
add
test
mov
mov
mov
xchg
outsb
divps
rorl
push
mov
adc
adc
das
adc
adc
push
lret
or
fnsave
adcb
pop
aam
fnstsw
adc
xchg
enter
mov
mov
cwtl
xor
mov
sbb
cmpsb
fwait
or
mov
lret
sbb
pop
hlt
insl
rcrl
int
pop
mov
lds
pop
dec
pop
gs
data16
inc
and
and
mov
inc
repnz
fadd
adc
jae
mov
scas
int
pop
or
lods
insb
push
nop
jl
orb
jg
mov
xchg
push
or
and
mov
xchg
js
in
add
pop
aad
push
fstl
push
fstl
adc
leave
cmpsb
adc
dec
push
mov
push
dec
mov
aad
push
call
jno
rolb
mov
repnz
rolb
insl
cmp
inc
icebp
dec
pushf
pop
or
mov
cmc
out
mov
cmpsl
out
cmp
in
jge
mov
jnp
rep
fldt
fsubr
mov
mov
repnz
push
cwtl
adc
xchg
and
hlt
cmp
cmp
push
mov
dec
and
push
dec
mov
pop
stos
dec
rorb
adc
adc
adc
mov
sbb
sub
mov
aaa
ficompl
dec
push
push
lds
mov
mov
nop
rcl
shl
popl
xlat
push
adcb
aad
dec
and
js
fisubrs
jnp
dec
ljmp
fisubl
cwtl
cmpsb
fidivs
lahf
jnp
push
xchg
fcoms
push
shll
dec
inc
imul
cmp
push
dec
cmpsb
and
loope
mov
stos
xchg
push
mov
daa
aad
push
jmp
pop
mov
clc
js
pop
adc
push
mov
mov
loope
add
xchg
imul
sbb
xor
jb
push
sbb
fs
and
pop
add
jmp
or
scas
daa
xchg
call
icebp
in
call
lea
add
xor
add
cmpsb
pop
and
dec
and
mov
push
add
lds
mov
inc
dec
push
xor
add
push
dec
enter
and
jno
fmulp
out
push
mov
lds
fneni(8087
orb
inc
mov
scas
scas
mov
sarl
lock
pop
cwtl
clc
cmp
sahf
int3
push
xchg
clc
aad
and
addr16
adc
adc
imul
jne
xchg
call
dec
mov
ret
push
inc
xlat
daa
int
xchg
mov
js
pop
sbbb
scas
shll
addr16
xor
sub
adc
sbb
dec
fidivl
mov
addl
xor
jno
shlb
adc
add
mov
or
push
fidivl
stos
sbb
cwtl
jno
push
out
test
cmp
icebp
in
and
add
jb
mov
stos
jmp
mov
jmp
fstps
mov
sahf
adc
pop
fmulp
xchg
nop
pusha
enter
cltd
push
movhps
pusha
leave
outsb
xchg
add
adc
lds
loope
push
push
out
jnp
shll
add
dec
xchg
in
or
mov
int3
dec
and
adc
inc
out
rorl
push
cmp
sub
pop
lods
syscall
xchg
mov
stos
xlat
xchg
push
pop
mov
rorb
lret
adcl
mov
xchg
data16
fisttpll
cwtl
lret
jo
push
mov
mov
test
xor
iret
jb
aam
xor
iret
jb
dec
pop
gs
data16
aaa
push
iret
jb
int
mov
xchg
dec
adc
xchg
mov
pop
add
fadd
lret
mov
cwtl
lret
jo
les
outsl
dec
leave
daa
sahf
mov
aad
cmp
sbb
lret
inc
or
jmp
jns
lods
sub
fcoms
test
lret
dec
into
add
sub
scas
push
test
cmpl
push
bound
sub
dec
lods
fst
push
aad
sub
imul
adc
mov
bound
cmc
addl
sub
mov
gs
ljmp
sbb
popa
inc
movsl
sub
mov
jmp
sarl
test
cmp
inc
pop
pop
test
xchg
addr16
adc
mov
dec
sbb
fistl
outsl
dec
rorl
ret
xor
jno
pushw
test
popa
in
mov
push
in
dec
jg
aas
sbb
pop
mov
xchg
cmp
xor
mov
and
cs
test
out
loop
jns
addb
decb
mov
insb
inc
pop
bnd
push
sahf
pop
mov
imul
dec
cs
inc
lahf
out
adc
int
sub
dec
imulb
inc
clc
cli
add
and
pop
push
int
in
pop
repz
or
addr16
sub
or
mov
jne
fadds
cli
mov
mov
rol
and
out
xchg
ljmp
push
push
cmp
mov
pop
mov
dec
ds
lret
fcmovnb
xor
in
cwtl
pop
daa
loop
cmp
call
aas
adc
inc
pop
mov
fsubl
mov
pop
addl
adc
push
sbb
or
bound
dec
test
and
jnp
int
xor
fwait
and
and
mov
fnstenv
ja
pop
jmp
adc
add
xor
jb
dec
mov
ret
xor
fstpl
add
sub
je
mov
clc
add
es
aad
push
jge
daa
enter
mov
push
lret
xchg
mov
cmp
ljmp
push
shlb
push
lret
roll
and
imul
popa
inc
add
dec
out
loop
fadd
sub
pop
arpl
int
push
js
xchg
jnp
and
dec
int
sub
push
inc
mov
sahf
push
add
sbb
out
sbb
test
scas
dec
xchg
rcrb
mov
push
cltd
pop
adc
adc
cmp
mov
jmp
out
cmc
notl
jecxz
cs
int
das
cmp
xchg
imull
or
fcoms
into
shlb
adc
jg
cmp
cmc
sub
test
pop
gs
mov
fiaddl
pop
shll
xchg
mov
mov
xor
jbe
xchg
pop
pusha
cmp
popa
mov
xchg
push
xor
into
and
push
cltd
popa
ficomps
lret
testb
cmp
push
fdivl
inc
stc
adc
sub
jbe
aaa
xchg
mov
add
cmc
movsl
outsl
cmc
jle
push
flds
incl
xchg
and
incb
dec
test
inc
dec
sbb
ret
hlt
jbe
mov
jb
pop
add
dec
xchg
cltd
js
lahf
sub
movsl
mov
lods
add
inc
lret
dec
jnp
xor
or
push
xchg
and
dec
push
and
jbe
in
fcoml
test
xor
push
subb
dec
daa
cmc
xchg
jp
or
scas
push
push
arpl
jl
dec
and
inc
repz
sti
inc
or
push
mov
aam
and
sbb
cmp
rolb
push
insl
dec
xor
and
dec
clc
inc
lock
stos
test
dec
mov
cwtl
push
lret
lret
xor
arpl
push
mov
int3
repz
dec
out
pop
enter
xorl
add
jne
cmp
xchg
xor
add
bound
xchg
mov
mov
out
int3
adc
dec
sub
mov
fstl
mov
jno
bound
xchg
pop
add
int
or
pop
jle
dec
daa
push
test
and
fmuls
adc
dec
aad
add
xor
cmp
pop
cmpsl
icebp
xchg
fmuls
xlat
cmp
sbb
xchg
mov
fnsave
mov
dec
loope
addr16
rcr
loopne
in
xchg
mov
leave
sub
das
lahf
les
sub
xchg
roll
pop
jl
and
push
mov
in
loop
rorl
imul
xchg
mov
xorl
int3
and
add
fcoml
mov
pop
cmpsl
cld
add
push
push
mov
mov
sahf
jecxz
cwtl
inc
lret
imul
daa
enter
jno
or
ret
cmc
cs
aad
dec
mov
push
cmp
xchg
push
mov
mov
lock
jg
or
and
xsha1
cmpsb
dec
cld
clc
leave
andb
or
dec
dec
ret
cmpsb
jecxz
ljmp
loope
add
mov
ficomps
test
es
out
push
ret
mov
dec
or
jbe
shrl
inc
sbbl
add
inc
mov
xchg
lret
cmpsl
push
adcb
ljmp
cmc
add
fdivrl
daa
push
notb
push
adc
mov
and
mov
mov
cmc
xlat
cmp
call
xlat
fdivr
or
mov
inc
jns
sbb
mov
in
mov
sbb
sti
ficoml
dec
js
mov
fldcw
and
fistl
scas
loop
mov
lret
fistpl
ds
mov
dec
inc
cli
xchg
adc
icebp
sarl
pop
mov
sub
mov
insl
xchg
adc
mov
ffreep
xchg
push
xchg
push
push
out
fwait
lock
ds
mov
addr16
clc
idiv
lock
lock
loope
dec
add
enter
sbb
rcll
addr16
and
inc
das
add
pop
push
and
pop
cmp
fbld
jp
sub
jns
negl
out
bound
xor
js
sbb
popa
add
daa
xchg
add
dec
repz
test
xchg
popa
mov
xlat
ret
repnz
bound
mov
out
ds
xchg
xor
or
xor
mov
out
xchg
ds
fucomi
mov
js
testl
out
repz
mov
xchg
jno
pop
cmp
stos
into
ror
test
fistl
sub
push
adc
sub
mov
pusha
mov
add
loope
scas
mov
cs
inc
and
mov
mov
push
sbb
in
inc
clc
shll
gs
and
push
bound
cmp
outsb
shlb
and
adc
stos
push
add
push
es
and
jg
push
jmp
test
mov
fadd
xchg
fisubs
icebp
jg
add
stos
repnz
cmp
stos
mov
adc
ficoms
ret
movsb
int3
jge
scas
push
adc
int3
xchg
bound
lret
jmp
int
mov
sbb
icebp
fsub
flds
test
pop
aaa
sbb
add
stc
mov
orl
into
fwait
cmp
jnp
test
scas
inc
loop
lods
scas
xor
shlw
push
aas
sbb
mov
jne
testl
xorl
fprem1
outsl
add
scas
push
xchg
dec
adc
clc
loop
addb
sarl
pop
push
jne
and
xchg
aad
imul
push
pop
sbb
stos
call
cmp
fldenv
aaa
mov
mov
push
mov
and
adc
inc
push
push
dec
sbb
out
adcl
sbb
daa
add
test
or
xchg
rclb
negl
repz
out
xor
dec
out
ja
fsubrl
or
scas
mov
shrb
mov
shll
add
adc
addr16
mov
and
adc
into
pop
inc
pop
sbb
jecxz
xor
repnz
dec
ljmp
add
mov
add
std
aam
or
push
dec
icebp
call
jle
pusha
fsub
push
xchg
mov
ret
outsb
fdivrp
fisttps
inc
clc
in
mov
ret
orb
xchg
arpl
dec
add
jb
and
cmp
sbb
leave
and
into
arpl
stc
pop
and
scas
adc
mov
lret
fsub
lock
pop
ljmpw
jb
mov
test
push
cs
rcrl
xor
int
stos
push
inc
ficompl
and
push
repz
jmp
divb
xor
or
fsub
xor
xchg
arpl
xlat
fdivrs
sbb
nop
push
xor
cmp
dec
js
je
jae
and
rcl
inc
adcb
and
lret
jae
pop
add
shll
mov
push
adc
int
xchg
push
and
ljmp
jae
cmp
or
mov
mov
pop
pop
lret
outsb
cmp
das
ljmp
lret
pop
pushf
push
pop
mov
sahf
aas
call
daa
sbb
mov
xorb
xor
push
test
pop
add
cmp
adc
negl
ret
imul
repnz
push
jmp
rcrb
add
ret
xchg
jne
aad
xchg
xchg
sub
inc
das
imul
mov
push
mov
adc
jnp
mov
int3
jne
cwtl
cwtl
push
lahf
repnz
cmc
inc
or
call
dec
rolb
int
dec
pushf
jmp
loopne
mov
add
xchg
sbb
mov
push
lret
lcall
mov
jge
mov
call
cmc
dec
jge
mov
adc
mov
dec
pop
rcrb
arpl
es
push
inc
int3
push
rcr
xchg
addl
enter
lods
scas
mov
loope
ja
xchg
push
adc
mov
fidivrl
je
ficoms
push
roll
insb
fstps
push
sub
cmp
adc
or
xor
pop
addb
dec
fstl
dec
aam
jo
ret
jbe
aad
enter
stos
jl
mov
std
cmc
jbe
pop
mov
adc
pop
and
push
or
stos
adc
std
ficoml
ds
mov
cli
int
ret
aad
push
rorb
mov
test
sbbb
xorl
xchg
outsl
xor
pop
sbb
icebp
cmp
lea
push
dec
icebp
push
and
dec
cs
mov
adc
jae
pusha
pop
movb
xor
ret
test
mov
ja
mov
sub
adc
aaa
push
setne
sub
cmpsl
roll
in
cmp
mov
ret
mulb
mov
adcb
sbb
push
or
xchg
jecxz
mov
jb
mov
dec
xor
out
shrl
xor
movsl
push
and
add
dec
xor
pop
pop
xchg
imul
out
ljmp
mov
insl
mov
or
dec
stos
pop
or
loope
sub
pop
and
mov
jo
xchg
rolb
cltd
mov
ficomps
fwait
and
es
jp
sbb
mov
or
inc
stc
sub
jl
xchg
in
aam
rcr
popa
aad
aaa
xor
adc
push
push
inc
ds
dec
jp
pop
push
adc
xchg
loope
push
rcll
or
popa
repz
in
jb
cld
es
notb
push
jmp
add
aam
mov
xchg
lret
fs
loopne
cmpsb
adc
rcl
aam
mov
sbb
jo
or
ds
adc
xchg
call
push
fisubs
lods
xchg
rcrb
sbb
or
dec
pop
dec
add
xor
mov
rorl
push
mov
pusha
push
jbe
mov
pop
dec
scas
or
mov
out
push
in
mov
ror
dec
in
dec
xor
cmpsl
jl
in
fs
pop
mov
shll
cmp
addr16
pop
push
or
pop
add
mov
rcl
adc
nop
enter
addr16
cmp
out
pop
pop
daa
mov
dec
push
mov
pop
loopne
push
popa
xchg
pop
cmc
jb
adc
bound
pushf
mov
divb
loopne
mov
jmp
inc
rorb
xor
cmc
mov
fisubrl
cmp
imul
repnz
fsubs
mov
test
jl
mov
pusha
dec
out
and
fwait
adc
aad
into
and
dec
insl
pop
jg
leave
imul
subb
add
add
push
ja
gs
sahf
push
adc
scas
push
bound
push
mov
jae
cmp
mull
mov
bnd
cmp
gs
pop
mov
cwtl
int3
test
lods
pusha
push
lret
fimuls
xor
adc
repz
aas
mov
adc
and
movsl
addr16
adc
cli
test
fdivrs
and
cmp
cmp
xchg
cs
shlb
lcall
test
push
cmp
mov
or
mov
icebp
mov
test
mov
into
adc
mov
fcoms
xorl
xchg
shrb
sti
xchg
rcr
aaa
push
ljmp
mov
shrb
leave
xchg
sub
je
mov
mov
dec
aad
fmuls
mov
mov
add
ss
adc
push
test
popa
adc
shll
push
loope
jle
pop
ja
into
ret
stos
daa
adc
push
cmp
and
push
and
test
xchg
mov
mov
dec
test
jns
mov
imul
lret
push
pushf
es
ss
call
negl
push
loope
aaa
filds
bound
js
ss
push
fcoms
add
pop
rclb
mov
in
aad
outsb
data16
pop
push
fmulp
xchg
and
pop
push
jbe
jl
mov
push
pop
xchg
into
pop
leave
ds
cmpsb
dec
or
out
mov
out
inc
mov
and
adc
pop
andl
fs
mov
sub
rorl
jle
xchg
jno
adc
push
in
and
mov
lods
push
cmc
push
xor
xor
xchg
mov
loop
call
adc
or
mov
outsl
mov
lea
loop
dec
leave
stos
or
imul
mov
data16
mov
shlb
cltd
addr16
jmp
in
movsl
hlt
mov
and
jge
jecxz
into
mov
sahf
lahf
dec
inc
es
inc
sub
lea
test
fstps
arpl
push
data16
fmuls
inc
aad
inc
shr
xchg
adc
aas
xchg
dec
mov
dec
rolb
xor
fwait
popf
data16
mov
dec
dec
rorb
inc
inc
call
xlat
jae
pop
cld
lods
xchg
out
pop
sub
ds
or
cwtl
pop
jmp
fisubrs
add
cs
mov
inc
fs
cmpsl
mov
test
pop
adc
pop
shll
fsubs
jmp
das
loope
popf
push
out
pop
cmpsb
lretw
outsb
dec
mov
mov
sub
test
out
xlat
scas
test
mov
ret
fsubrp
into
in
arpl
mov
jbe
scas
mov
sub
jno
push
jmp
add
data16
cmpsb
dec
inc
xchg
xor
xor
mov
pop
mov
loopne
fs
mov
mov
es
adc
pop
fwait
outsl
fs
lahf
clc
mov
movsb
dec
or
or
xchg
dec
fcmovu
push
xlat
imul
dec
sti
push
adc
stos
adc
mov
pop
jle
xchg
lret
push
cmp
push
adc
push
xchg
aad
adc
xchg
sub
push
loope
or
mov
sub
push
lock
mov
out
inc
mov
fcom
sub
jno
rorb
jbe
jmp
xor
movl
dec
aam
adc
popa
cmp
loop
adc
mov
xchg
dec
dec
mov
sbb
dec
pop
cmp
fisttpl
pop
stos
shr
push
dec
add
int3
fdivrl
push
test
rorb
add
ret
in
popa
mov
sub
xor
sub
cmp
push
xchg
into
push
and
push
mov
test
or
ljmp
adc
sub
push
sub
divb
or
roll
jno
add
dec
lods
mov
push
les
push
xlat
out
lret
aad
sub
jae
xchg
mov
scas
mov
test
into
mov
lock
mov
mov
xlat
and
xor
inc
xlat
inc
shr
ljmp
add
mov
mov
xor
push
ds
push
adc
pcmpgtd
fcoms
out
fiaddl
jp
testb
test
fmuls
sahf
cmp
mov
inc
sub
and
xor
mov
xlat
dec
sbb
inc
dec
or
loop
mov
mov
mov
push
dec
mov
jae
sahf
mov
push
out
push
ja
cmp
orb
pop
testb
dec
dec
das
adc
mov
adc
xchg
mov
xor
repnz
mov
jmp
adc
aad
cld
data16
mov
xor
mov
add
aaa
fs
pop
stc
mov
push
jbe
in
aas
test
mov
push
out
out
inc
pop
dec
push
sti
mov
pop
mov
ficomps
cmpsl
mov
pop
mov
xor
dec
movups
xchg
jnp
adc
nop
add
push
call
mov
xchg
inc
mov
clc
mov
movsb
aad
mov
movsb
pushf
ss
and
adc
clc
rorl
lods
mov
push
fisttpl
shll
sti
clc
push
loop
ss
movsl
loope
loop
loopne
test
mov
adc
mov
push
cmp
inc
inc
ljmp
xor
test
in
dec
fistl
pusha
add
and
clc
scas
mov
push
insl
gs
xor
dec
and
pop
pop
dec
xlat
cwtl
or
push
in
cld
fadds
ficoml
cmpsl
or
xchg
mov
aaa
das
shl
fninit
enter
stos
push
pop
pop
add
out
sub
shll
dec
stos
neg
loop
sub
inc
mov
and
push
clc
push
es
pop
mov
outsb
pop
into
inc
inc
fidivl
fiaddl
cmp
jo
lret
mov
bound
scas
xlat
pop
dec
adc
ret
push
mov
ja
or
test
dec
enter
daa
ror
inc
ret
push
mov
dec
fsubr
adc
jmp
leave
add
xlat
mov
jle
leave
cld
test
int3
imul
add
pop
add
dec
xor
pop
inc
imul
cmc
xor
dec
or
mov
lds
cli
rclb
sub
push
jns
xor
sti
fstl
cmp
test
push
popa
and
xchg
jmp
adc
mov
scas
add
inc
mov
subl
push
mov
gs
jge
cmpsl
enter
int
sti
cmp
jnp
test
push
lock
push
enter
es
adc
sti
sti
dec
popaw
jno
lret
adc
xor
adc
pop
into
pop
jmp
pop
mov
mov
data16
xchg
or
daa
lret
push
adc
sbb
push
mov
les
clc
sub
mov
add
cmp
jp
dec
or
jmp
xchg
sub
loopne
loopne
iret
xchg
fs
daa
pop
fisubrs
aas
push
and
jmp
in
push
int
or
mov
xchg
xchg
and
xchg
out
movsl
adc
sub
ljmp
repz
inc
mov
pop
iret
fst
lahf
mov
repnz
mov
xchg
mov
mov
xchg
adc
mov
inc
popf
lcall
or
mov
out
or
xchg
and
cmpsb
rorb
imul
fcmovb
stos
adc
pusha
int3
out
ficomps
mov
adc
jnp
lds
lcall
adc
adc
fisttpll
push
mov
push
into
mov
push
mov
mov
xchg
sbb
aad
push
enter
jg
out
cmp
inc
lret
ret
jne
mov
mov
stos
mov
ss
pop
mov
cmp
imul
hlt
mov
jle
pop
xor
sahf
jb
shlb
pop
andb
stc
sub
mov
rclb
outsl
push
adc
out
dec
fisubrs
mov
sahf
dec
mov
mov
jbe
fcom
cwtl
jbe,pt
es
fidivl
call
push
imul
ss
inc
jno
repz
aaa
mov
pop
push
cs
loope
sarb
test
dec
adc
enter
neg
sbb
push
cs
dec
xchg
push
test
bnd
xchg
xchg
adc
ret
fidivrs
pop
shlb
mov
aam
es
push
cmp
mov
inc
dec
add
add
dec
add
mov
mov
ja
add
test
jae
mov
pop
lret
add
or
mov
std
jnp
shll
and
add
pop
iret
daa
arpl
add
call
inc
dec
jp
rcrl
cli
pop
std
fdivrl
lods
jnp
dec
loope
icebp
pop
clc
fisubl
clc
faddp
imul
mov
xchg
pop
cltd
and
mov
divb
aam
mov
adc
mov
xchg
leave
sub
data16
dec
mov
add
adc
cmpsl
shlb
and
xchg
add
ds
and
xchg
or
ret
mov
cmp
adc
insl
das
sarl
aam
shll
pop
mov
dec
lea
loop
movsl
rclb
sbb
add
outsl
lcall
outsl
push
mov
stc
adc
test
shll
loopne
lea
imul
shl
mov
insb
rcrb
dec
sbb
mov
jno
aas
in
mov
call
sbb
xor
imul
out
jp
push
out
stos
adc
loopne
rorb
xor
sub
push
aas
out
xor
aad
jb
cli
add
addl
leave
pop
lea
and
jne,pn
out
jno
bound
push
jmp
cmp
pop
mov
mov
imulb
jo
pop
repnz
sbb
sub
aaa
cmp
mov
es
shrb
jae
repnz
jne
lcall
pop
and
cmp
push
inc
hlt
jnp
sti
xchg
push
pop
insl
test
mov
es
xor
sbb
loope
sarb
and
fldcw
dec
push
out
repnz
and
adc
ds
les
addr16
test
sahf
or
xchg
ds
cmp
rcll
pusha
inc
into
out
push
xchg
fnstcw
mov
jbe
pop
shr
notb
and
mov
mov
ss
fdivs
pop
js
cmpb
xchg
test
xor
out
out
fsubrs
mov
out
mov
or
sbb
fdivs
loopne
xchg
lock
rorb
jb
jbe
jmp
xchg
pusha
and
sbb
int
mov
rclb
cmp
lods
ss
pop
sub
and
in
jle
sbb
sub
sub
lds
adc
stos
push
hlt
addr16
inc
jbe
rclb
push
and
dec
ljmp
dec
in
rclb
divb
push
pop
and
stc
aam
inc
xchg
cmp
xchg
in
leave
pop
cmp
jecxz
ds
and
imull
jmp
inc
outsb
pop
dec
fptan
xchg
adc
push
jge
loop
cmp
mov
pop
xchg
lock
out
xchg
scas
cwtl
adc
movsl
ss
dec
sub
xchg
dec
jns
jmp
jp
pop
jno
inc
and
lods
adc
sbb
int3
sarl
jb
js
or
das
or
inc
ficoms
xor
push
sub
pop
shll
enter
pusha
rolb
repnz
int
dec
cwtl
xor
mov
push
push
xor
push
sub
xor
xchg
pop
mov
in
mov
ljmp
inc
out
pushf
mov
xchg
dec
xchg
call
mov
xor
pop
scas
lea
popf
not
adc
cs
in
push
dec
xor
adcl
fmuls
loop
and
cmc
jae
aad
push
dec
sbb
xor
mov
add
push
rol
testl
adc
xchg
idivb
xchg
mov
stos
xlat
loop
dec
adc
xchg
addr16
jno
dec
gs
push
stos
xor
dec
stc
adc
xor
movsl
ss
sbb
out
or
dec
pop
xchg
into
mov
add
test
out
inc
push
sbb
out
sub
and
or
add
out
testl
cmpsb
test
cmpsb
push
adc
enter
mov
sbb
test
fs
or
xor
xchg
daa
icebp
mov
in
dec
lock
jae
loopne
movsl
int
in
inc
sahf
rcll
ss
stc
mov
test
dec
xchg
sbb
push
and
xchg
push
push
loop
mov
and
adc
mov
adc
shll
pop
out
testl
seto
pop
call
push
push
inc
cwtl
loopne
sahf
mov
sbb
sbbb
xor
sub
dec
imul
daa
inc
test
scas
loop
push
xchg
and
fldt
adc
es
in
lds
stos
aas
or
movsb
dec
adc
sub
aad
jecxz
mov
repnz
and
fadd
xchg
pop
ja
mov
lds
xchg
sbb
mov
mov
xchg
dec
rcrl
sbb
shl
fs
repz
sub
dec
jo
and
cli
pop
push
push
jge
add
sub
sub
mov
push
in
push
and
push
jne
jg
out
mov
ret
sbb
out
pop
lret
enter
cs
cwtl
cmpl
out
cs
mov
lds
or
mov
jb
ds
dec
flds
xchg
nop
xchg
cmpsb
jmp
mov
bound
cmpsl
pop
sub
lret
fisubrs
daa
xchg
test
inc
mov
rol
xchg
push
hlt
inc
mov
pop
mov
mov
mov
stc
cmp
cs
test
hlt
js
fsubs
and
sbb
cmp
movsw
mov
outsl
jae
xchg
sub
in
xchg
push
ja
dec
sub
nop
in
jp
sarb
dec
test
mov
orl
bound
mov
mov
push
adcb
sbb
xchg
stos
mov
aam
js
loopne
clc
fsub
insl
mov
icebp
or
cmp
test
gs
in
mov
cmp
test
in
int
or
int3
shrb
cmp
in
pop
out
mov
pop
loop
int3
pop
mov
push
hlt
imul
test
dec
mov
mov
mov
and
jno
mov
pusha
ljmp
nop
ret
jno
jno
pop
mov
dec
jbe
xchg
xchg
shl
in
cmpsb
int
push
sahf
push
cmpsb
sti
popa
jnp
loop
aaa
loopne
les
loopne
int
dec
rcrl
gs
cmc
mov
mov
adc
lock
and
arpl
loop
and
dec
xchg
arpl
jp
pop
push
or
inc
sub
jbe
repz
mov
mov
out
in
jg
adc
cld
and
sbb
dec
mov
xchg
mov
sub
aaa
xor
xor
xor
inc
fildl
push
and
xchg
fcomp
ret
jne
pop
rcrb
push
sahf
xchg
mov
sti
shr
xchg
dec
adc
imul
scas
lahf
add
fs
call
dec
or
dec
and
mov
push
stos
fwait
sbb
cmp
push
sarl
jno
or
js
push
das
dec
sub
mov
jnp
out
into
fbld
std
or
push
jmp
sub
cmp
negl
push
inc
imul
sub
addr16
jmp
daa
adc
push
adc
rcr
mov
into
cmp
adc
das
xchg
ss
push
and
sub
inc
inc
int3
loope
movsl
dec
cmovg
loop
das
jecxz
std
sub
bound
sbb
sbb
push
stc
or
fiadds
adc
lahf
fmuls
incl
xchg
inc
jne
aam
fcoms
loope
jbe
xchg
dec
gs
sub
jbe
aam
pushf
data16
jo
add
push
dec
clc
pop
icebp
dec
call
push
out
data16
and
xchg
adc
sub
lods
push
push
aaa
sti
mov
sub
xchg
movsl
push
push
aad
fcoml
xchg
push
xchg
aas
pop
sbb
push
shl
xchg
sbb
rol
xchg
stos
rclw
xchg
and
fiadds
dec
shrb
xlat
call
inc
fisttpl
arpl
rclb
mov
mov
push
jge
ret
fs
repnz
vunpckhps
add
pop
sub
push
mov
mov
loope
lods
addl
imulb
jae
lods
push
xorb
cmpsb
xlat
ss
es
inc
movsb
push
adc
fbld
pop
cmpsl
bound
sub
jmp
adc
popf
lcall
mov
mov
ficompl
bound
fsubs
ret
cli
add
mov
shrb
dec
test
cmp
push
cmc
dec
inc
jns
sub
ret
gs
out
inc
jp
fidivrl
adc
mov
in
and
sub
or
and
in
arpl
les
ret
in
inc
push
daa
rcr
push
push
clc
adc
xlat
insb
fdivs
push
mov
fldcw
sarl
daa
test
xor
push
push
xor
xchg
or
lock
arpl
andl
int
cmova
xchg
pusha
adc
pop
sub
repnz
loop
push
imul
dec
jns
popf
add
mov
cmp
dec
xchg
iret
or
adc
rorb
jnp
in
mulb
fists
ljmp
pop
xchg
es
add
sti
ds
sbb
dec
mov
ljmp
xchg
cld
push
dec
sti
ficompl
out
xor
mov
hlt
out
jp
inc
jmp
rorl
mov
xchg
dec
adc
imul
mov
shrl
sbb
dec
cwtl
shr
fnstsw
out
cmp
pop
cmpsb
test
out
lcall
aaa
mov
jns
pushf
xor
lock
xor
lock
repnz
mov
loope
pop
xchg
sub
lret
imul
std
jg
inc
sub
jg
fisubrs
jl
inc
mov
xchg
cmpb
push
int3
call
add
inc
js
out
mov
pop
cwtl
dec
lret
sbb
out
mov
pop
cmp
insb
fldcw
repnz
data16
js
xchg
jbe
sahf
add
fdivs
xor
push
test
push
push
lock
sub
sahf
mov
push
mov
cmpsb
push
add
xor
popa
rcl
adc
xchg
fs
fistl
call
push
pop
sub
call
adc
repnz
mov
xchg
adc
xor
pop
cmc
fcomps
lea
adc
imul
sub
dec
mov
ljmp
les
aaa
movsl
jle
ljmp
add
jecxz
arpl
js
cmp
ret
xchg
mov
pop
xlat
mov
push
notb
xchg
jae
xor
inc
cltd
arpl
xor
push
into
fdivl
mov
loopne
test
std
int3
ror
inc
sub
lret
push
mov
push
flds
fwait
cltd
mov
cli
rorb
xor
cmp
dec
mov
into
dec
enter
adc
cli
test
inc
sub
cli
std
shr
adcb
je
adcb
cmpsb
sahf
xor
notb
fisttpll
cs
ficoml
dec
xchg
jb
and
push
push
das
inc
sub
call
pop
pop
sbb
dec
lcall
add
mov
sub
push
clc
mov
bound
mov
scas
out
push
cmp
ljmp
stos
push
mov
vmulss
and
cwtl
xchg
repz
andb
orl
fadd
test
adc
jecxz
aad
dec
dec
or
loopne
test
sbb
and
pop
data16
dec
push
test
lea
xor
xchg
fidivrl
push
subb
push
xlat
lea
adc
cmp
mov
inc
sarb
mov
xchg
into
repnz
push
xchg
in
clc
inc
jne
and
jnp
lds
insb
cmc
add
in
loop
push
hlt
jp
cmp
call
push
push
push
lock
test
push
cmc
and
and
xlat
adc
pop
sbb
bnd
mov
push
cmp
add
adc
ret
aaa
jb
cmpsb
jns
pop
pop
adc
je
std
and
mov
or
mov
lret
mov
ds
mov
insl
and
lods
inc
idivb
add
insl
xchg
loope
in
idivb
xchg
int
lods
testb
movsb
insb
push
xor
fsubp
cmpsb
in
xchg
sarb
imul
les
aad
je
test
cmp
jo
push
mov
jo
jne
loopne
addr16
adc
mov
jb
fmuls
mov
mov
daa
jge
adc
shlb
pop
push
mov
cmp
push
fadds
inc
and
sti
mov
push
xchg
mov
sbb
inc
cmp
add
nop
push
imul
push
ds
inc
and
out
inc
lret
and
or
in
les
pop
xchg
sbb
push
cmp
pop
mul
mov
imul
adc
xlat
pop
sahf
push
mov
dec
fstl
adc
jb
stos
jae
mov
mov
mov
stos
xor
fldlg2
and
mov
dec
or
jno
xchg
mov
mov
adc
sbb
inc
into
jle
jecxz
repz
add
movsl
push
cli
xchg
push
lret
inc
push
pop
cmp
mov
or
in
imul
xor
bound
shl
mov
push
addr16
shll
pop
rclb
hlt
jbe
pop
pop
inc
not
lock
mov
jno
frstor
fs
add
mov
xor
push
ss
xchg
addr16
cmc
sbb
mov
sub
int3
inc
test
or
lock
pop
push
adc
or
insb
or
clc
lods
cmpsb
fidivrs
xlat
mov
mov
lret
push
cmpsl
adc
icebp
lea
lods
push
mov
mov
mov
sub
push
sub
and
and
adc
sub
fidivrl
add
pop
nop
and
sbb
ljmp
cs
xchg
adc
cmp
push
xchg
xchg
out
or
mov
sarl
inc
stos
mov
stos
fs
pop
jbe
out
dec
hlt
loop
dec
fisubrl
jne
stos
jno
dec
push
push
push
inc
fstpt
add
lret
xchg
ljmp
mov
call
data16
rclb
int
and
sbb
fdiv
jno
or
dec
cmp
imul
lock
jns
or
stos
jae
aam
push
fmul
ljmp
push
xchg
scas
stos
inc
pop
push
lret
retw
aaa
xchg
mov
adcl
or
pop
stos
jp
test
mov
push
cmc
mov
mov
repnz
push
jae
push
clc
dec
sbb
lret
mov
jne
ds
and
adc
dec
xor
cmp
pop
ficoms
rcr
lock
mov
repnz
call
mov
pop
ret
pop
cmpsb
pop
push
pop
pop
in
push
decl
filds
xchg
jge
pop
cld
pop
xchg
mov
pushf
ja
dec
test
loope
inc
lock
xor
imul
push
add
inc
mov
inc
inc
and
rcrl
scas
jl
mov
dec
add
xor
subl
mov
icebp
dec
jne
cwtl
mov
test
mov
dec
push
or
shll
pop
sub
loop
popf
jne
mov
and
push
pop
push
ret
xchg
shlb
ljmp
lret
testb
sbb
xorl
cli
push
dec
jnp
out
adc
int
xchg
cmp
dec
mov
push
popa
mov
adc
repz
and
dec
mov
dec
push
ficoms
xor
fcmovne
aas
inc
mov
loopne
fdivs
addr16
pop
bound
stos
push
mov
stos
push
push
call
push
out
aam
outsb
cmp
mov
add
cmpsl
pop
push
jbe
sti
into
ja
rorb
push
mov
push
cmc
cmp
xlat
jb
push
fs
xchg
cmp
cli
adc
jb
inc
mov
or
decl
or
cmp
sarb
jp
lahf
jbe
outsl
idiv
ret
jae
test
push
imul
divb
mov
jno
push
xchg
ret
inc
xchg
push
lret
dec
loopne
gs
pop
adc
out
aad
stos
cmp
or
and
pop
lret
xchg
cmp
or
inc
lret
scas
add
cmc
out
mov
psubusw
mov
pop
xchg
sbb
call
out
and
dec
repnz
rolb
inc
mov
push
repz
mov
ds
dec
dec
test
xlat
fdivrl
ret
push
and
mov
xlat
adc
mov
loopne
in
jbe
ss
outsb
push
in
or
mov
cs
fwait
mov
add
dec
ljmp
adc
testb
ror
xchg
adc
inc
dec
les
mov
jbe
fs
mov
testb
adc
loopne
popf
pop
mov
aam
xor
imul
dec
xchg
cmc
call
push
rcr
sarb
in
sbb
fdivrl
xchg
add
jl
daa
ljmp
sub
cmpsl
repz
jge
push
jmp
push
pop
dec
pop
jmp
jge
inc
pushf
inc
push
dec
adc
mov
push
mov
ss
clc
jnp
dec
sti
cmp
popf
or
mov
fstpt
out
jp
ljmp
pop
and
mov
mov
testb
addl
mov
adc
sbb
mov
or
push
cld
xchg
dec
mov
and
out
or
imul
push
enter
in
mov
push
xor
fs
add
xchg
mov
or
push
js
cmp
pop
or
call
sar
mov
lods
jno
jecxz
aam
test
stc
iret
inc
cmpsl
bound
test
bnd
pop
testb
push
les
pop
sbb
daa
cmpsl
ss
movsl
sbb
mov
xchg
aad
jmp
cli
mov
dec
xchg
lock
adc
sbb
pop
iret
scas
loopne
jne
mov
pop
in
pop
imul
mov
add
inc
imul
scas
sbbb
lods
imul
test
int3
jne
inc
inc
jns
into
test
inc
mov
or
orl
lds
jb
outsl
movsb
mov
mov
hlt
fwait
pop
in
mov
sbb
lock
dec
dec
out
adc
mov
stos
scas
dec
xchg
cmp
inc
sbb
pushf
pop
rorl
sahf
test
dec
mov
lods
push
test
loope
or
mov
mov
cmp
psllw
cmp
dec
adc
xchg
stc
push
cmp
negb
mov
mov
inc
lods
mov
add
pop
pop
xchg
push
sub
push
test
adc
cmpl
out
mov
xor
stos
addr16
and
xchg
stc
sbb
jnp
jo
pop
imul
ret
xchg
cs
xchg
push
dec
idivb
repnz
cmp
push
int
fucomp
adc
enter
mov
or
int3
and
or
sti
lds
daa
pop
lods
push
push
fistps
movsl
xchg
mov
in
stc
rorb
cmp
cmp
or
sub
pop
jge
xchg
mov
aad
push
setne
test
push
fadds
fstl
pop
imul
les
or
stos
cwtl
fidivl
mov
dec
test
inc
dec
insb
adc
jg
dec
push
aam
aaa
repz
add
and
cmp
mov
test
xchg
or
pop
jp
sbb
mov
aas
cmp
xlat
xchg
xchg
push
std
pop
addr16
push
sbb
bound
xchg
adc
cmp
add
cmp
xchg
and
mov
adc
scas
cmp
test
repnz
test
in
loop
lock
out
test
in
adc
xchg
jmp
scas
xchg
addr16
leave
add
push
pushl
sub
shlb
icebp
xor
push
pusha
inc
scas
int3
incb
mov
cld
jnp
cmp
cmp
pop
rcrl
jno
jecxz
in
cwtl
push
dec
xchg
inc
mov
dec
mov
xchg
push
loop
xchg
mov
dec
aad
xchg
fadd
out
fldpi
adc
into
jno
mov
imul
fidivl
data16
xchg
fisubrl
push
sahf
mov
loope
adc
stos
push
dec
add
mov
dec
push
and
enter
hlt
mov
push
das
dec
xchg
xchg
inc
dec
cmpsb
xchg
xlat
and
push
sti
fdivrl
nop
test
xchg
cs
jne
aaa
adc
adc
inc
mov
jge
mov
cmp
xor
test
fdivr
mov
repnz
inc
bound
jmp
enter
jbe
arpl
pop
push
fwait
sub
mov
add
aam
cs
test
add
cmp
pop
mov
in
push
push
imul
fsub
adc
push
jmp
or
stos
xor
mov
movl
hlt
data16
add
dec
push
nop
aam
dec
adcl
subb
xchg
fwait
adc
adc
jb
or
xlat
and
sub
pop
sahf
mov
pop
fs
inc
iret
call
jbe
cs
xchg
or
or
stos
jbe
loop
xor
fdivs
int3
addb
fmulp
xchg
jnp
outsl
or
es
and
int3
sbbl
pop
cmpsb
xorb
out
imul
adc
xor
push
xchg
jg
xchg
push
xchg
inc
and
mov
sbb
clc
push
ss
adc
iret
int3
sub
or
and
and
por
in
xchg
int
pop
adc
fadds
push
fidivs
dec
sbb
aas
xchg
mov
stos
stos
push
sbb
fcomp
repz
je
sub
jge
pop
ja
jae
aaa
testb
pop
cmc
jl
add
and
cmp
sbb
adc
pop
jmp
or
bound
aas
jmp
dec
jge
push
arpl
xor
adcb
rclb
cmp
jo
ds
mov
dec
gs
mov
es
fstpt
add
dec
mov
repnz
xor
jl
sub
cmc
ds
rcrb
test
call
pop
mov
add
mov
repnz
ficomps
in
adc
push
mov
xlat
push
push
fmul
push
loope
lods
lahf
mov
imul
rorl
inc
into
xchg
fimull
pop
loope
rcrl
fisubrs
sub
sub
clc
aad
jb
push
dec
popf
fdivr
pop
push
cs
sub
lret
ljmp
es
sahf
sbb
or
dec
mov
ss
xchg
repnz
aad
and
shll
cltd
or
pop
aas
push
xchg
dec
aad
in
arpl
sbb
inc
call
aad
sub
adc
aad
push
adc
adc
dec
pop
das
cmc
push
aam
add
mov
nop
mov
sahf
mov
and
and
inc
loope
in
dec
cmp
xor
add
cwtl
dec
push
call
es
push
push
xor
sbb
xor
xchg
push
mov
ss
cmp
and
adc
jb
mov
jle
fmuls
cmpsb
mov
cli
rcll
cmp
in
push
sahf
cmp
loop
lds
sbb
or
pop
inc
out
das
inc
jge
aad
mov
push
mov
xor
pop
and
shlb
mov
outsl
fistps
add
cmpsl
shll
test
dec
js
stc
test
popa
data16
and
cmp
dec
fistl
int3
xchg
jb
mov
mov
push
iret
add
jmp
dec
xchg
test
push
mov
push
testl
fmuls
orl
sahf
or
sbb
jbe
hlt
imul
popa
fnstenv
adc
cmp
aam
shll
ficoml
jl
das
push
std
lock
gs
outsl
test
cs
sbb
mov
xchg
dec
daa
adc
adc
cmp
dec
inc
pop
and
sti
mov
jo
dec
jp
adc
mov
les
add
push
ljmp
sub
loope
sbb
aad
test
loope
test
hlt
xchg
stos
push
cmp
test
aad
pop
push
test
inc
aad
xchg
xchg
add
cmp
hlt
inc
sbb
outsl
sub
mov
dec
sbb
dec
adc
outsl
lret
jae
icebp
pop
repnz
popa
sti
dec
and
punpckhbw
pop
adc
xchg
cmpsb
cmc
cmp
pusha
sub
mov
xchg
push
mov
mov
xor
or
mov
inc
loopne
xchg
and
or
xchg
test
dec
inc
dec
dec
sub
clc
inc
cmpsb
adc
add
push
pop
fidivl
mov
sti
inc
push
outsb
pop
pop
mov
mov
orl
xor
cmp
sbb
sub
jmp
in
mov
mov
xor
dec
insl
subb
mov
test
jp
jmp
cltd
jne
xchg
mov
xchg
or
cmpsb
adc
inc
test
mov
scas
inc
leave
xor
pop
mov
xchg
int
xchg
lret
cld
lahf
jae
xor
mov
or
cmpsb
mov
sahf
repnz
jns
sbbl
aad
sahf
cmc
adc
pop
adc
pop
into
leave
pop
pop
sub
negl
sarl
sbb
mov
mov
mov
loope
xor
rdmsr
outsl
jp
push
popa
aad
push
sbb
cli
lret
pop
jmp
decb
fmull
mov
loope
imul
xchg
xchg
inc
and
dec
icebp
dec
push
adc
test
jg
mov
in
movsb
clc
push
or
inc
movsb
repz
or
mov
test
fistl
xor
ss
rclb
mov
adc
mov
push
iret
cmp
adc
cs
mov
insb
push
inc
xchg
pop
jno
add
sub
dec
sbb
int
shl
ljmp
mov
xlat
and
ficoml
cmp
fisubrs
jbe
ret
outsb
mov
nop
ss
loop
and
fbld
push
pop
adc
roll
pop
and
roll
push
jge,pn
add
and
mov
or
xchg
repz
dec
and
mov
orl
push
loop
adc
cs
jne
idivb
into
cmp
mov
es
dec
xchg
cmc
out
xor
mov
adc
push
into
add
lods
jle
clc
xor
int
cmp
cli
or
faddp
xchg
push
call
lds
test
and
xor
lret
out
mov
add
xchg
jno
loopne
movsl
lahf
ja
jae
jg
mov
mov
loopne
push
pop
shll
cmp
leave
lods
mov
sahf
dec
out
hlt
ds
mov
cli
add
jnp
mov
cmpsl
mull
loop
call
lcall
xchg
push
es
push
mov
adc
lds
adc
pop
stc
adc
push
push
inc
ja
mov
sub
idivb
push
push
outsl
add
andl
movsl
cwtl
adc
xchg
or
into
arpl
scas
data16
cwtl
addr16
repz
mov
out
in
daa
adc
in
fistps
mov
shrb
sti
pop
jecxz
pop
mov
jmp
lahf
mov
push
cmp
mov
cmp
leave
je
pop
mov
push
fs
xchg
dec
ljmp
push
push
cwtl
cs
bound
scas
fs
out
push
sbbb
push
repnz
leave
xchg
movb
pop
notb
ss
and
xchg
subl
lret
pop
sahf
jae
ftst
mov
nop
pop
pop
mov
int3
and
stos
loop
and
and
mov
inc
jns
mov
cs
pop
enter
sahf
add
inc
iret
adc
cli
mulb
or
mov
mov
or
stos
and
movb
mov
les
aaa
hlt
add
loop
bound
sti
mov
pop
or
push
or
sub
add
call
rol
cmp
rcll
in
pop
int3
push
test
or
xchg
xchg
cmp
pop
lock
jbe
mov
in
shll
mov
inc
sbb
jnp
aad
sbb
mov
dec
or
loop
es
pop
stos
sbb
push
and
loope
and
setle
loop
push
xor
loopne
inc
lret
popa
fildl
mov
das
rolb
jno
or
lods
adc
leave
fidivs
lahf
lret
leave
clc
ss
push
enter
push
scas
movsl
cmp
adc
xor
xchg
xchg
mov
cs
dec
dec
mov
push
xchg
aaa
aas
loop
dec
ds
inc
std
push
imul
dec
adc
fcomps
xchg
jo
out
push
imulb
rol
cmp
cmpsb
fwait
fs
xor
adc
cld
in
and
push
ret
outsb
pop
repnz
add
xchg
sub
idivb
pop
js
mov
sub
mulb
cmp
xor
shlb
push
push
cmp
pop
orl
rcr
inc
lods
out
pop
mov
mov
ret
jecxz
cmp
int
xchg
int
loope
dec
add
inc
fistpl
les
xor
imul
sbb
push
addr16
fcoms
pop
and
out
dec
call
es
ror
mov
movsl
cmp
pop
push
aam
ds
icebp
adc
insb
xchg
scas
imul
cli
repnz
mov
sbb
and
lret
loopne
cmpsb
dec
fs
loopne
inc
jae
pop
dec
dec
pop
xchg
sahf
outsl
jb
call
push
pop
xchg
adc
scas
pop
and
enter
sub
xchg
lods
cmp
insl
mov
cmp
sbb
cld
push
adc
mov
bound
jge
inc
movsb
lods
pop
es
cltd
es
pop
repnz
dec
imulb
pcmpgtd
fcoml
cmpl
inc
dec
stos
mov
xchg
xchg
imulb
push
out
inc
cli
xchg
ret
rorl
jl
sbb
adc
push
popa
jge
fs
or
mov
vpmuludq
pop
in
in
sub
roll
mov
movsb
adcl
adc
ficoms
lret
inc
lahf
or
clc
sub
or
push
adcb
lock
stos
fidivrs
or
mov
insb
lcall
pushf
push
mov
jnp
adc
pop
fwait
adc
adc
out
or
or
mov
pusha
mov
add
xor
and
lret
cwtl
int3
inc
pop
push
jecxz
mov
push
mov
jb
loop
xor
fcomps
push
clc
ss
push
adc
adc
repnz
mov
rorb
or
and
or
cmpsb
bound
mov
cmp
jmp
sbb
pop
pop
test
gs
ds
lods
ret
or
aad
cmp
dec
cs
fdivrl
mov
pushf
mov
insb
test
sub
and
and
sbb
mov
adc
mov
test
jbe
les
pusha
mov
push
paddusb
xchg
push
lds
out
and
xor
sarl
jae
cwtl
repnz
lock
out
adc
dec
cmp
bound
test
cwtl
xchg
icebp
int
sbb
pop
mov
leave
push
jg
pusha
and
adc
shl
inc
mov
in
push
inc
pop
push
into
xchg
mov
or
int3
ss
push
and
push
rcr
fcoms
sub
push
fsubr
or
sbb
notb
inc
mov
stc
stos
adc
loope
iret
and
shl
sbbb
xor
mov
or
push
aam
rcll
test
sub
pop
in
aas
scas
cmp
mov
cmpsl
add
mov
scas
adc
pop
out
in
aas
jmp
loope
ret
pop
jmp
daa
and
movsb
cmp
shrb
ss
rcll
sar
push
mov
xor
mov
push
sbb
push
push
xor
sarl
gs
lret
in
and
aaa
andl
add
cmp
pop
mov
or
mov
cli
fdivs
adc
insb
xor
dec
cmpsl
fiadds
add
out
mov
push
dec
mov
inc
mov
mov
fists
out
out
stc
imul
adc
sahf
adc
sahf
int
xchg
xchg
data16
outsb
dec
push
inc
and
jnp
mov
and
mov
xchg
repnz
jecxz
scas
loope
aad
ljmp
js
sti
add
pop
push
scas
mov
jecxz
xchg
insb
push
mov
stos
cli
dec
aaa
adc
xor
push
ljmp
rcrb
xor
pop
pop
and
adc
orl
sbb
dec
pop
push
pop
inc
mov
xor
adc
mov
jns
shl
add
out
sarb
cs
pop
push
dec
push
xlat
scas
cmpsb
mov
mov
and
inc
lods
mov
adc
and
int
repz
jmp
lods
add
loop
ja
sbb
pop
cmp
xlat
sbb
ret
adc
mov
xchg
push
test
gs
inc
xchg
mov
gs
push
and
jmp
call
mov
add
dec
dec
sbb
push
adc
lret
xchg
add
loopw
mov
lret
adc
testb
push
int
jg
ret
dec
mov
test
mov
scas
pop
inc
loopne
loope
ret
shl
scas
dec
fwait
xchg
and
mov
pop
jg
andb
call
arpl
push
mov
stos
hlt
sub
aas
push
sub
lds
arpl
push
jae
sbb
scas
test
or
test
add
push
mov
movsl
sbb
dec
pop
mov
lea
xor
jge
inc
xchg
pop
cmp
mov
push
pop
fdivrs
sub
lahf
inc
cmp
inc
pop
add
test
mov
xchg
jbe
lods
sbb
into
roll
testb
mov
scas
insl
sbb
nop
mov
xor
or
mov
dec
dec
adc
push
xor
mov
sbb
add
mov
mov
push
flds
leave
mov
cs
push
in
mov
call
pop
push
push
push
out
mov
aad
mov
adc
mov
into
call
mov
push
pop
bound
push
cmp
add
addl
clc
repnz
jg
cmp
push
sarb
in
mov
gs
push
jmp
push
xchg
ljmp
push
mov
xlat
loope
adc
int
pop
xchg
push
sbb
lock
mov
jb
ja
es
je
mov
loopne
loope
cmp
adc
sbb
xchg
add
dec
scas
scas
les
push
or
data16
push
or
push
cli
pop
adc
lds
scas
insb
int
lds
lcall
sub
bound
mov
xchg
cli
sbbl
jnp
or
ljmp
add
sbb
int3
addl
dec
test
sti
push
sbb
mov
iret
mov
dec
popf
mov
add
int
test
inc
push
repnz
jb
fwait
imul
nop
jge
cmp
test
pop
cmp
into
sbb
adcb
sub
xchg
or
push
jno
and
pop
inc
mov
xor
xchg
pop
add
push
xlat
test
mov
fsub
fdivrs
sar
ret
cld
das
add
pop
rcrl
sub
lret
xor
lock
negl
push
dec
pop
loop
lds
jno
sbb
lcall
add
andb
movsl
dec
in
cmp
jno
dec
cli
cs
mov
push
fcompl
sub
and
sbb
sarl
pop
stc
mov
add
out
or
popf
in
mov
in
xor
cmpsb
mov
adc
add
ss
nop
loop
xor
test
rcl
popf
push
rclb
call
mov
divb
xchg
push
sub
mov
xchg
popa
sbb
fiadds
cld
shrl
pop
sub
xchg
push
mov
dec
or
pop
mov
rclb
mov
xchg
jecxz
cmp
or
in
add
or
cwtl
ss
lock
lret
add
adc
jne
popa
repnz
cmc
sub
adc
fs
inc
movsb
push
cli
and
and
xchg
leave
fadds
cs
in
push
pop
andl
notb
adc
ja
fcomp
divb
ja
xchg
aaa
ret
inc
aaa
inc
cltd
mov
arpl
mov
test
push
cwtl
test
add
loopne
xchg
push
mov
sbb
es
mov
pop
and
in
adc
push
adc
push
aad
lahf
dec
repz
pop
dec
push
stos
sbb
rcrl
sbb
xchg
jp
jp
ret
adc
push
int
sbbb
cltd
fcomps
adcb
imul
aas
cmp
and
scas
mov
aad
push
hlt
ja
add
jp
test
loopne
daa
jg
xor
xor
lock
mov
sarb
fistpll
adc
mov
dec
cmp
les
in
push
mov
pop
repz
mov
lret
mov
dec
fwait
lds
fsubrs
cmp
xor
jns
mov
lcall
popf
xchg
ret
mov
sbb
fists
popf
dec
xor
push
dec
lock
mov
xchg
lods
loopne
mov
jnp
push
dec
aam
sbb
stos
adc
dec
mov
gs
data16
fsubs
fistl
negb
pop
loopne
xchg
or
jmp
divb
push
sbb
cmp
add
pop
inc
pop
fcmovnu
fwait
xlat
mov
push
loope
and
mov
or
into
rolb
adc
push
and
push
xchg
aam
addl
es
cwtl
scas
inc
outsb
bound
dec
or
enter
pop
les
pop
xchg
sub
gs
stc
mov
and
enter
repnz
push
outsb
adc
push
adc
xor
adc
push
pop
je
stc
jmp
fcoms
lds
push
fistl
adcl
fadds
sbb
push
xchg
push
adc
ss
xor
xor
imul
mov
push
cmpsb
adc
adc
negb
or
sbb
call
ret
dec
loope
cmp
mov
mov
shl
sub
jmp
inc
cli
sub
int3
push
cmp
xchg
push
loope
inc
dec
pop
mov
pop
out
gs
and
adc
mov
push
int3
pop
fs
sub
sbb
sarl
je
out
and
into
cmpsb
adc
or
pop
ja
gs
loopne
lods
stos
lds
sbb
or
pop
icebp
outsb
ja
jnp
dec
in
xchg
xchg
ret
push
rcrl
ja
call
dec
mov
adc
mov
ja
xchg
adc
sub
inc
sar
not
xor
push
stos
sbb
jno
mov
int3
cmp
push
pop
dec
les
sbbl
dec
or
add
lret
imul
sbb
xchg
add
ret
or
stos
mov
jmp
and
data16
and
out
mov
and
xor
call
push
inc
mov
mov
pop
xor
mov
iret
ljmp
adc
inc
les
pop
aaa
insl
add
int
ss
push
movsl
sub
leave
add
mov
adc
fwait
loop
movsl
fcomi
or
add
gs
std
adc
jg
add
call
scas
fisttps
xchg
push
je
sub
and
mov
in
xchg
imul
and
sub
out
mov
mov
push
push
adc
dec
and
or
cmc
mov
ja
mov
sti
mov
aad
push
sbb
sub
adc
insl
push
sbb
xlat
jbe
adc
add
jno
mov
jbe
inc
sahf
pop
or
xchg
vmwrite
mov
aaa
fisttps
push
popa
xchg
sahf
mov
mov
mov
daa
scas
xlat
mov
adc
ret
push
dec
ret
push
scas
and
cmp
rclb
imul
adc
mov
jno
imul
fsubl
repnz
or
push
mov
cmp
std
mov
loope
adc
mov
inc
dec
cmc
inc
dec
inc
lret
add
repnz
loop
adc
iret
cs
inc
pop
out
ss
xor
adc
pop
adc
aad
sbb
and
mov
adc
dec
cmp
ljmp
clc
pop
mov
and
cmc
inc
xlat
aas
xchg
ja
push
cmp
jb
imul
fisubl
xor
adc
or
pop
icebp
cwtl
stos
mov
out
lds
icebp
or
bound
repz
into
icebp
xchg
push
push
cmc
sbb
fadds
and
aam
out
notb
inc
lcall
jno
rcll
pop
mov
sub
out
lret
stc
and
dec
mov
mov
loope
pop
aam
sub
adc
xchg
add
lret
sub
sub
mov
mov
sbb
adc
push
aam
jmp
xchg
sahf
orb
adc
pop
mov
addr16
sub
adc
sbb
stos
push
clc
inc
xor
sahf
push
push
mov
mov
sub
adc
nop
repnz
data16
pusha
imul
mov
sub
push
xor
rorb
outsl
test
ret
add
addr16
push
outsl
sbb
lock
mov
xor
adc
inc
inc
xchg
mov
test
data16
xor
loop
stos
and
add
leave
bound
dec
outsl
dec
mov
dec
hlt
mov
scas
mov
sub
fsubs
inc
inc
cmp
outsb
and
push
in
lea
lret
jns
pop
push
sub
push
xchg
int
cmpb
jns
stos
pop
loope
adc
mov
push
add
lcall
push
mov
popf
cmp
daa
repnz
cld
push
sbb
xor
je
mov
jmp
add
dec
and
aam
lret
or
inc
aad
mov
int3
aas
xor
cmc
cmp
mov
into
fists
fwait
mov
mov
xchg
pop
lcall
data16
jnp
mov
fcom
testl
rcl
pop
push
rclb
pop
and
pop
pop
incb
scas
dec
xchg
arpl
mov
xchg
cwtl
adc
dec
dec
xchg
popa
aad
mull
cwtl
adc
rcrl
push
lahf
stc
stos
test
inc
mov
lret
lret
out
rolb
std
push
shll
fisubrs
adc
mov
into
xor
outsb
mov
pusha
cmp
loop
adc
add
xor
cmc
and
add
cli
xor
rcrl
enter
fucomp
mov
xchg
mov
jle
xchg
jecxz
outsl
or
in
shr
popa
mov
into
adc
mov
adc
in
cmp
pop
fimuls
dec
push
loope
cmp
and
mov
xor
add
sub
aaa
xlat
xor
adc
dec
fcoms
and
lds
daa
or
cmp
sar
imul
cld
pop
test
clc
roll
adc
in
lds
inc
ljmp
push
cmp
pop
sbb
push
outsb
pop
addr16
bound
icebp
or
hlt
push
pusha
stos
add
lds
jb
ficomps
xlat
xor
pop
outsb
push
pop
mov
add
data16
aas
pop
push
and
rep
pop
inc
inc
pop
xor
out
mov
xchg
adc
cmpsb
in
adc
hlt
mov
lods
adc
pop
push
das
into
inc
adc
cmp
mov
mov
or
mov
fcoms
in
repnz
push
mov
dec
xchg
fs
push
inc
dec
jmp
jb
mov
fcmove
push
adc
jno
std
ret
mov
adc
pop
popa
mov
xlat
and
or
in
movsb
cwtl
or
adc
pop
sbb
mov
ror
pop
fimuls
js
dec
mov
out
mov
or
xchg
fists
and
pop
or
xor
out
int3
jecxz
aad
fmuls
movzwl
cmp
pop
or
jge
sbb
flds
imul
lock
mov
xchg
icebp
sub
jne
or
in
gs
xchg
fdiv
mov
push
jnp
xor
fisubrl
sub
aad
int
shl
sti
hlt
scas
xchg
cltd
cwtl
or
or
stos
testb
sbb
xor
jae
adc
fisubrs
dec
out
aad
loopne
and
push
push
sub
add
xor
jge
in
popa
cli
mov
sarb
xchg
dec
inc
mov
loop
pop
rorb
xchg
xchg
dec
cmp
mov
cwtl
rorl
and
add
push
pop
cmp
shll
xchg
and
push
push
cmpsl
push
adc
and
or
test
mov
sbbb
xchg
icebp
fsubs
cltd
aad
mov
inc
cmp
adc
jmp
cmp
insb
xchg
inc
adc
shl
add
and
repz
jb
push
pop
cmp
pop
xor
faddl
or
dec
push
pop
sub
adcl
push
pop
enter
sbb
mov
ss
mov
xchg
push
xorb
stc
sbb
mov
push
sti
push
aad
leave
add
ret
subl
xchg
bound
mov
fdivs
andl
scas
push
lds
push
push
shl
jmp
xor
sbb
add
push
pop
inc
scas
test
js
int3
pop
and
xor
adc
sahf
notb
jns
fnsave
and
xchg
roll
loop
out
loopne
cmp
push
add
mov
shll
stos
mov
inc
sahf
loop
or
xchg
mov
aad
mov
and
sub
pop
fidivl
add
add
xchg
push
and
push
xor
adc
dec
ds
bound
aaa
sbb
sub
in
pop
hlt
xchg
xchg
dec
test
push
fsubrs
add
mov
in
es
xchg
dec
iret
mov
adc
mov
xor
or
mov
pop
mov
ds
jb
mov
push
sbb
mov
add
sub
xchg
push
xor
ss
into
das
mov
jno
inc
sbb
push
cltd
xchg
push
cltd
subb
ja
xchg
roll
adc
jp
push
fmull
mov
cmp
rclb
push
push
sbb
sarl
into
adc
sbb
sahf
lock
or
jnp
push
dec
mov
mov
icebp
and
mov
lods
inc
clc
xchg
xor
inc
mov
daa
xor
pop
lods
mov
adc
and
jp
and
cmpsl
out
push
mov
push
es
xlat
cmp
mov
xchg
push
xor
xchg
or
sub
inc
gs
adc
adc
inc
inc
adc
es
ficomps
scas
push
push
addr16
popa
or
cmp
sub
fnstcw
mov
es
adc
loope
sub
jecxz
xor
sbb
push
jbe
jo
cmp
dec
push
cmpsb
sbb
jnp
ss
mov
or
lcall
xor
cmp
mov
icebp
and
cmpsb
cltd
out
movsb
push
cmc
clc
mov
adc
xchg
repnz
fsub
iret
xchg
scas
jb
pushf
jae
cwtl
jl
pop
bound
dec
test
ds
xlat
adc
xor
loope
mov
ljmp
inc
jmp
mov
cmp
dec
adc
pop
xor
and
push
and
add
fmuls
push
aas
test
repz
mov
repz
stos
imulb
sub
push
movsl
subl
fcmovbe
add
xlat
dec
rclb
pop
xor
dec
jl
clc
pop
dec
fwait
mov
cli
in
repz
adc
lock
mov
stos
out
xor
ret
outsb
jno
pusha
pusha
cmpsb
out
dec
mov
int
insl
xchg
jae,pn
sbb
mov
shll
jp
in
iret
mov
ljmp
and
push
repz
xor
aas
lcall
push
or
sub
ret
mov
jmp
cmc
adc
movsl
inc
std
aam
mov
push
rcll
jmp
mov
cmpsb
xchg
add
xor
inc
inc
adc
adc
sahf
test
divb
scas
sbb
lea
adc
push
call
xchg
enter
outsb
lret
mov
push
inc
stos
das
ss
and
adc
push
test
movsl
dec
jg
cmp
aad
scas
push
mov
pop
lret
loope
into
and
fdivs
addr16
or
aam
pop
ss
es
fldt
jl
pop
cmp
or
jg
lock
add
aaa
aas
xor
push
mov
dec
dec
mov
xor
push
pop
dec
test
jmp
inc
inc
dec
adc
call
push
and
or
daa
negb
in
shrl
dec
lret
scas
cmp
xchg
pop
ds
adc
pop
das
shr
inc
sub
inc
cmc
stos
push
jb
xor
out
pushf
in
and
inc
gs
cmp
xchg
shlb
pushf
xlat
mulb
push
addr16
in
clc
sub
jb
push
in
sbb
aad
repz
jg
lahf
out
dec
leave
clc
fs
jno
push
clc
aad
daa
rol
dec
xor
inc
or
inc
lret
push
xor
mov
loope
xlat
dec
xchg
push
inc
push
lret
or
xlat
xchg
ljmp
leave
jae
das
loopne
fwait
test
cmp
lods
fildl
lods
jb
rcr
je
iret
xchg
pop
sti
mov
loopne
aam
or
sub
dec
or
repnz
pop
inc
mov
rcrb
bound
rol
mov
cli
iret
mov
dec
icebp
test
add
and
push
sbb
fadds
or
and
icebp
popf
cmp
push
in
int3
add
es
adc
fcmove
in
test
js
repz
or
rcll
cli
mov
mov
inc
ret
ss
inc
mov
pop
jmp
push
or
mov
cmp
xchg
sbb
add
dec
push
adc
xchg
pusha
xchg
outsb
adc
push
lods
and
pop
sub
inc
cli
jnp
ss
sbbb
add
fisubrl
or
jg
pop
lret
adc
scas
xchg
lahf
addr16
cmp
adc
les
lds
out
lods
insb
mov
cmp
xchg
mov
adc
test
loopne
loopne
pusha
cmpsl
decl
add
push
mov
nop
call
push
sub
mov
addr16
and
rclb
cmp
das
mov
push
icebp
adc
movsl
fwait
push
loop
ret
adc
cmp
icebp
push
test
and
sti
insl
or
sub
andl
lea
adc
pop
adc
dec
mov
int3
mov
std
pop
pop
sub
int3
cwtl
and
nop
xlat
pop
cltd
push
xbegin
jo
out
mov
mov
push
dec
rclb
leave
push
scas
jno
data16
mov
in
fistl
rcl
jnp
movsl
pop
in
data16
mov
sbb
push
in
repz
outsb
adc
lds
fsubrl
leave
movhps
lea
aam
sbb
push
sub
test
cli
test
push
jmp
arpl
and
sti
mov
pop
cltd
pop
push
jno
xor
ds
mov
addr16
inc
ja
mov
iret
ss
or
and
dec
jmp
xor
sbb
xchg
mov
ja
testl
js
cmpl
pushf
inc
repnz
adc
inc
pop
xchg
dec
or
push
adc
add
push
pop
sbb
pop
shll
repnz
lea
push
add
or
add
sbb
mov
push
xchg
les
xchg
ficomps
pop
jb
cmp
ds
mov
lea
mov
adc
add
dec
cmp
push
aad
jne
or
or
and
xor
inc
icebp
lcall
jg
hlt
jp
notl
movsb
inc
cmpl
lock
dec
adc
adc
gs
jne
jmp
add
addr16
adc
cmpsl
popf
adcb
ljmp
jl
xlat
leave
out
aaa
and
fwait
aaa
jae
push
pop
dec
test
pop
out
xchg
pusha
dec
sbb
mov
insl
mov
stos
push
cmp
mov
push
sbb
pop
addr16
mov
cmp
sub
push
ja
xor
rclb
add
mov
nop
or
or
and
mov
lock
insl
xchg
sbb
or
fwait
rorl
sub
lods
add
add
add
inc
inc
aam
cwtl
enter
repnz
rorb
stos
dec
adc
and
xchg
and
icebp
mov
push
xchg
pusha
push
xchg
rcll
add
push
sub
jno
jmp
adc
xchg
adc
call
inc
add
divl
jne
mov
and
pop
and
lret
les
jne
stos
popa
icebp
dec
dec
push
dec
fwait
std
dec
popa
adc
sbb
sub
xchg
jae
stos
arpl
dec
adc
stos
jg
lock
jb
push
pop
jecxz
iret
jl
imul
mov
add
jae
sbb
and
push
lds
test
icebp
add
xchg
mov
jecxz
ss
cmpsb
ss
andb
adc
inc
rcll
jmp
push
xor
ss
stos
xor
rcr
sbb
ficomps
adc
clc
jbe
daa
inc
in
adc
sub
jle
push
push
rcll
ja
cmpsl
test
and
orl
rorb
or
sbb
bound
xchg
jl
int3
push
push
aad
mov
addb
push
gs
mov
fs
andl
iret
hlt
mov
push
out
xor
push
mov
xchg
cmp
cld
dec
test
pop
cmc
and
jmp
into
jns
popf
addl
das
mov
hlt
ljmp
xchg
lret
and
pop
into
pop
mov
adc
sbb
cli
and
jecxz
pop
dec
mov
pop
arpl
jp
lea
call
leave
aaa
dec
faddp
data16
inc
mov
mov
and
inc
dec
or
cmpsl
pop
inc
mov
adc
fcoms
adc
out
aaa
lds
sti
mov
aad
mov
cs
mov
outsl
jno
imul
enter
inc
les
push
fldl
insb
in
cmp
data16
punpckhdq
lods
out
rcrb
sub
and
push
les
add
js
xchg
pop
ja
and
js
mov
cmp
data16
or
cmpsb
push
repnz
sbb
jge
dec
fmuls
sbb
or
pop
xchg
inc
ljmp
dec
mov
rcl
sbb
or
popa
loope
and
negb
push
ljmp
rcrl
inc
aam
aad
loope
mov
pop
cmp
sbb
jb
adc
cmpsl
pusha
pop
outsl
dec
lahf
sahf
push
jnp
sbb
or
ds
rcrl
cmc
fbld
xor
pusha
cltd
cld
sub
pop
mov
js
lods
call
aas
jns
jbe
dec
xchg
adc
jnp
add
movl
test
aad
sub
jns
aaa
xor
or
test
push
mov
stos
dec
in
xchg
add
mov
fcom
mov
pusha
xor
std
push
and
popf
jno
xchg
push
dec
sub
push
rclb
cmp
jmp
jnp
mov
lods
pop
sub
and
fistpl
dec
add
int3
hlt
add
mov
and
mov
xchg
jae,pt
aam
xor
add
repz
xchg
std
ja,pt
scas
out
rcrb
sbb
mov
mov
push
mov
aad
aam
xchg
jge
ds
aad
orl
jmp
cmp
shlb
mov
andl
es
mov
sub
and
jmp
and
cmpsb
movsl
shrl
inc
pop
sbb
xchg
or
fimull
dec
mov
stos
cld
mov
cli
and
pop
pop
dec
cld
xchg
in
lret
out
xchg
imul
mov
in
ja
test
jae
dec
push
pop
jge
dec
cmpsb
and
jl
fisubs
push
mov
test
aam
dec
or
ljmp
shl
imul
lahf
inc
xor
es
mov
pop
jmp
pop
movsl
push
push
add
ljmp
lods
lods
bound
out
jmp
inc
sbb
push
sub
test
xchg
stos
mov
pop
clc
add
mov
push
inc
addl
pop
jb
pop
xchg
aaa
mov
outsl
dec
xor
cmc
dec
fwait
xor
test
or
push
int3
cltd
addr16
mov
cs
jle
adc
enter
mov
or
mov
movsl
xchg
andl
fstl
fcoms
mov
in
adc
add
fcoms
dec
pop
test
sti
leave
call
mov
stc
arpl
lock
mov
shrl
push
ret
jge
xchg
mov
push
mov
leave
dec
lret
jne
sbb
mov
into
mov
loopne
das
popa
add
mov
pop
hlt
adc
movsb
cli
testb
scas
aad
imul
shrl
jle
into
xor
push
call
aam
push
pop
mov
call
fcomp
pop
fs
cmp
xor
pop
or
push
out
xor
fcoml
mov
dec
hlt
imul
push
push
jge
imul
mov
testb
addr16
mov
mov
cmp
sub
xor
fsubr
adc
push
lret
repnz
xchg
add
add
add
fsubs
push
daa
into
adc
cwtl
rcr
movsl
ret
dec
jno
adc
xchg
shll
pop
gs
movsb
fdivs
ficoml
adc
shl
out
pop
out
sarl
push
mov
rcl
nop
pop
jo
test
push
adc
pop
into
push
mov
icebp
shlb
dec
mov
into
mov
loop
xor
dec
enter
or
push
mulb
mov
fdivs
jecxz
iret
and
testb
inc
sub
mov
in
pop
test
mov
jo
jmp
shrb
movl
add
cs
ljmp
insl
add
sub
sub
jb
push
sarl
bnd
std
push
daa
dec
adc
int
adc
sbb
dec
rolb
and
jno
leave
adc
in
ss
in
and
lret
lds
adc
mov
fucomp
lods
jle
fadds
xor
into
rcrb
out
dec
mov
and
imul
cmp
js
cmp
aaa
xchg
xchg
lcall
dec
and
lods
mov
fmuls
addr16
sub
mov
mov
lret
test
clc
jnp
leave
jl
test
jb
sbb
or
cwtl
pop
cmpb
jae
xchg
fsubs
out
jp
test
push
ja
and
inc
jmp
xchg
push
pushl
or
fnstcw
adc
sub
pop
fcoms
lcall
or
and
out
notb
pop
push
inc
push
pop
xor
pop
divl
mov
mov
mov
xor
adc
dec
pop
xchg
stc
and
xchg
inc
dec
shlb
orl
sbb
mov
xchg
add
lahf
dec
in
inc
inc
add
cmpsb
cmp
shl
in
sub
xor
and
mov
push
fwait
mov
push
and
dec
nop
xchg
push
mov
jb
jnp
cwtl
or
adcb
lcall
test
in
daa
or
out
push
fsubs
movsl
stc
clc
into
pop
pop
xchg
push
xlat
int
fcoms
dec
rcll
xchg
xor
in
subb
xchg
leave
frstor
inc
mov
push
push
aad
push
push
test
dec
and
cmp
xor
jnp
loop
movsl
adc
push
mov
fiaddl
mov
sub
cmc
out
sbb
dec
jb
sahf
pop
xchg
push
repz
mov
sub
shl
and
in
dec
scas
pop
xchg
pop
orl
push
inc
inc
shl
add
mov
test
jb
pop
add
mov
mov
aam
xchg
push
scas
mov
nop
in
sub
mov
jns
ds
cmpsb
sbb
mov
stos
in
push
and
cmp
xchg
lcall
push
int3
inc
test
pop
bound
mov
shl
lcall
adc
push
xor
test
xchg
or
mov
push
cmp
xor
xchg
aas
or
call
subl
dec
mov
popf
cmp
aaa
nop
mov
dec
mov
fcoml
pop
dec
dec
inc
jns
mov
cmp
adc
add
out
sbb
mov
dec
jns
hlt
dec
iret
clc
sbb
or
sub
or
xchg
ljmp
add
lea
aad
dec
add
out
jns
mov
xchg
cmp
inc
xchg
jae
and
int3
xchg
lahf
mov
popf
cwtl
sti
mov
add
rclb
inc
dec
sahf
ss
fdivl
dec
cmp
push
sahf
xchg
push
aam
pop
cmp
imul
cwtl
cmp
in
mov
xchg
cmp
and
nop
clc
mov
dec
sbb
outsl
out
dec
cmpsb
add
jge
adc
xor
fs
adc
jecxz
cmp
div
scas
adcl
out
pop
jbe
mov
mov
shl
out
pop
rcrl
pop
mov
push
jno
mov
jmp
xor
pop
outsb
jne
leave
dec
cmpsb
jle
stos
dec
push
adc
je
push
int
icebp
cwtl
jg
mov
lret
mov
stos
adc
daa
cmp
add
push
cmp
sub
pop
and
shll
sub
or
jle
mov
inc
shlb
into
jge
mov
fcmovnbe
pop
add
shll
push
sahf
jno
cmpsb
pop
cli
adc
bound
lds
mov
add
scas
push
int3
mov
and
fimuls
mov
adc
rorl
dec
dec
sub
js
scas
fsts
lahf
out
pop
mov
ret
aas
xchg
fadd
mov
push
xor
or
mov
push
add
inc
shr
sbb
jbe
stos
mov
data16
jp
jg
and
or
xor
ficomps
ret
cli
cmc
dec
popf
add
mov
cmpsl
mov
scas
add
lret
push
xchg
cmp
fidivrs
stos
test
fisubs
xor
insl
cmpsb
cmp
pop
pop
out
push
mov
rorb
mov
mov
loop
lret
das
dec
sar
xchg
jb
movsl
jp
test
xlat
pop
and
or
sbb
sbb
push
jne
or
jmp
cmpsb
push
neg
xor
and
out
mov
pop
xchg
dec
jb
popa
xor
orl
push
pop
cmp
in
clc
sbb
or
pop
enter
and
mov
es
in
icebp
les
lret
popa
pop
and
dec
or
decl
push
test
jnp
lea
adc
dec
fdivrl
mov
push
into
xor
add
inc
rol
xor
add
xchg
push
mov
xchg
cltd
fnsave
enter
ss
mov
mov
inc
scas
ds
jge
icebp
ja
add
test
xchg
xor
xor
pop
and
icebp
mov
hlt
bound
sbb
dec
das
adc
xor
shlb
and
sbb
fcmovu
cmp
xor
mov
shll
lcall
push
or
push
sub
jle
pop
inc
sub
lds
test
xchg
je
and
lahf
filds
addr16
and
clc
push
insl
lods
sub
push
and
lods
fsubs
dec
push
loop
xchg
mov
out
mov
inc
jb
jmp
xchg
or
sub
xchg
xchg
cmc
cmpsl
scas
jne
xor
ljmp
mov
xchg
dec
add
push
dec
or
dec
fidivrl
push
shll
gs
stos
jb
pop
and
shlb
xchg
scas
lahf
mov
ljmp
cmpsb
call
in
xchg
cmp
mov
jp
xlat
nop
mov
into
xchg
dec
pop
or
sbb
or
jl
add
push
or
pop
jmp
mov
dec
xchg
cld
jns
nop
in
movsl
lods
sbb
dec
dec
nop
dec
dec
xchg
loop
test
xor
hlt
jns
mov
pop
pushf
mov
adc
rcll
repnz
vrsqrtss
jge
dec
push
inc
pop
jne
ss
cmp
cli
cmp
rcll
js
std
mov
cltd
fsubl
loope
repz
jmp
pop
push
nop
stc
pop
xchg
stc
pushf
pop
mov
mov
xchg
mov
inc
dec
mov
std
and
roll
cmc
fdivrp
pop
xchg
push
lods
or
mov
add
ficoms
inc
mov
dec
fadds
xchg
adc
loope
repnz
mov
mov
mov
movsl
jne
jae
mov
loope
xor
pop
lock
loope
push
nop
ret
cmpsb
sahf
mov
ret
cmpsb
arpl
in
mov
stc
dec
pop
dec
mov
pop
xchg
xchg
aad
aas
dec
cwtl
mov
mov
lds
addr16
push
dec
adc
adc
or
sbb
in
jae
fiaddl
insb
xchg
push
fcomps
mov
fisubl
in
fucomi
leave
push
xchg
dec
fmul
sahf
jg
dec
into
fcmovb
or
add
jle
add
loop
pop
push
je
mov
sub
fs
push
mov
data16
in
adc
adc
sbb
loop
out
cmp
pop
jl
lret
dec
pop
stc
jge
or
lock
data16
jmp
mov
imul
repz
sbb
or
js
push
leave
cmp
sbb
xor
stc
out
adc
mov
and
sahf
mov
fwait
notb
and
push
and
mov
xorb
add
outsl
adc
insb
es
adcl
insb
sbb
insb
outsb
lret
jae
lahf
jbe
shr
shl
xor
xor
cmp
imul
pop
or
push
mov
xchg
push
mov
stos
test
mov
dec
or
sbb
pop
ljmp
hlt
sbb
mov
mov
mov
push
mov
xor
jb
fwait
pop
xlat
outsb
lods
fld
inc
push
xor
in
ljmp
pop
xor
cltd
xchg
es
push
pushf
imul
and
mov
lods
testb
push
adc
imul
add
mov
mov
mov
and
data16
jg
mov
dec
push
xor
adc
mov
push
inc
imul
cmp
ja
mov
movsl
xchg
shll
cmpb
mov
or
mov
and
dec
dec
xor
or
or
xchg
call
mov
jmp
movsb
icebp
and
inc
inc
xchg
fildl
jmp
xor
adc
adc
imul
jne
mov
movsl
sub
loop
add
xchg
xlat
xchg
push
pop
xor
jg
outsl
test
gs
dec
mov
push
cmp
push
outsb
out
fadds
adc
and
ficomps
jp
rol
mov
dec
inc
push
xchg
repnz
pop
mov
mov
xchg
test
fcomps
dec
sbb
dec
fwait
je
shll
subb
rolb
jge
shr
push
xchg
cmp
jo
lds
add
pop
mov
dec
mov
mov
bound
repnz
ret
xchg
cmp
dec
inc
mov
fwait
scas
mov
mov
out
mov
scas
je
dec
mov
addr16
push
cwtl
xchg
dec
dec
popf
push
mov
adc
push
push
push
mov
push
mov
inc
jo
and
pop
ja
mov
push
adc
mov
in
xchg
dec
adc
rorl
pop
push
ret
out
push
js
cmp
push
inc
mov
es
or
cmpsb
mov
dec
push
in
mov
jno
daa
pop
cmpsb
jae
test
add
adc
push
aad
mov
loope
push
push
jle
out
push
sub
loopne
sub
fwait
test
pop
stos
inc
nop
js
push
push
xor
jg
pop
fcoml
and
pop
push
cmpsb
and
and
add
sub
xor
adcl
sbb
mov
mulb
jae
pop
ret
mov
push
pop
and
rorb
ret
pop
inc
int
mov
pop
pop
dec
shlb
fcomp
gs
lods
repnz
cmp
dec
out
xor
xor
dec
pop
and
mov
mov
push
loop
mov
aad
out
rcrb
cmp
pusha
popf
mov
pushl
cmc
jnp
add
imul
and
fwait
pop
dec
je
into
adc
mov
jmp
xorb
aad
addl
push
fcompl
sbb
ffreep
jb
mov
std
dec
jb
negl
mov
mov
aam
int3
inc
rcll
pop
popf
push
adc
dec
jl
mov
rcr
pslld
test
sub
mov
pop
inc
pop
emms
or
popl
and
sbb
dec
test
lods
pop
shlb
pop
stos
enter
rclb
fiaddl
fdivl
loope
pop
jge
popa
dec
aam
push
jno
mov
inc
inc
jae
es
push
pop
das
pop
xchg
mov
shrb
cmp
mov
sti
addr16
pop
xor
adc
inc
add
pop
test
jbe
inc
jno
mov
dec
cwtl
jp
testb
aad
mov
pop
adc
cltd
mov
or
dec
imul
repz
fistl
jnp
mov
xorb
xor
repnz
loopne
push
in
mov
es
fwait
mov
sar
sub
adc
add
push
jb
xor
aas
and
and
push
mov
fwait
cs
ret
add
sbb
stos
xchg
andl
mov
xlat
cmp
lcall
rcrb
ds
icebp
jp
aaa
xchg
xchg
pushf
xorb
sub
pop
xor
and
and
ljmp
mov
mov
mov
mov
adc
notb
xchg
fwait
sub
xor
test
fwait
mov
pop
or
push
fnsave
push
cmp
cld
pop
pop
repnz
jmp
shl
xchg
ds
pop
xlat
aaa
dec
add
inc
insb
lret
daa
or
iret
or
lods
adc
bswap
inc
pop
or
dec
ljmp
pop
add
adc
cmp
mov
nop
data16
jne
push
lahf
cmp
and
movsl
es
pop
js
xor
pop
pop
mov
lods
sub
imul
bound
imul
repz
dec
or
push
outsb
imul
push
pop
adc
xor
lret
or
push
test
scas
inc
or
mov
fcoms
dec
outsb
inc
mov
pop
or
xchg
dec
hlt
addb
cwtl
ss
repz
mov
xor
lock
jmp
imull
aaa
push
mull
and
stos
push
xchg
dec
sub
xchg
repnz
xchg
not
fcomps
ficomps
in
pop
xchg
aad
xchg
mov
gs
notb
stos
push
call
mov
xchg
push
mov
xor
into
xor
pop
push
add
rorl
psrad
adcb
ret
adc
outsl
jmp
xchg
cli
fldt
push
mov
pushf
sub
gs
sbb
sbb
cmpsl
aaa
call
pop
mov
fwait
pusha
jb
mov
adc
dec
call
pop
or
add
mov
mov
nop
mov
sub
mov
lds
or
mov
xchg
jne
fmuls
arpl
add
jp
dec
and
rcrb
popa
cmp
pop
xlat
xchg
ljmp
lods
scas
xchg
cmpsb
ret
nop
pop
sbb
ret
push
fmul
sub
lods
xchg
fnsave
and
xchg
les
sahf
dec
mov
bound
loope
and
daa
dec
and
xor
dec
ret
jnp
push
or
imul
rcrl
mov
mov
push
lods
cmp
mov
sub
adcb
xor
dec
dec
pop
pop
test
pop
leave
shl
xor
push
push
out
xchg
orl
mov
add
mov
aas
cwtl
jo
aad
inc
xchg
adc
loop
mov
push
inc
sahf
ret
ret
inc
xchg
adc
fldt
arpl
int3
pop
mov
xchg
adc
in
push
push
inc
dec
lods
adc
sahf
add
pop
sbb
imull
mov
mov
inc
in
lret
nop
cmp
in
out
dec
xchg
xchg
pop
mov
loopne
ds
hlt
xchg
fidivrs
pop
sti
leave
mov
mov
into
ss
jmp
mov
icebp
sub
pop
xor
xchg
mov
lods
mov
sbb
push
idivl
cli
adc
fs
std
xchg
adc
rcll
stos
popa
movmskps
mov
push
dec
shl
dec
jb
loopne
adcl
inc
jmp
inc
add
std
xor
xor
inc
mov
and
push
scas
inc
pop
adc
push
pop
test
cli
cmp
adc
xchg
call
xchg
in
fwait
aad
rcrb
jmp
or
adc
pop
aam
dec
fstl
mov
shrl
ja
push
inc
out
sahf
or
clc
insl
rcll
mov
inc
and
pop
jb
dec
mov
std
xchg
aaa
cs
add
mov
imul
push
cmpsb
push
pop
mov
in
dec
push
mov
mov
call
sub
cmp
out
dec
cmc
gs
jg
stc
inc
adc
add
jo
push
xchg
jmp
bnd
xor
or
rorb
dec
mov
or
clc
cs
or
and
into
bound
shlw
testb
testb
data16
push
sub
ds
insl
out
test
inc
lret
cmp
dec
fisubrs
xchg
sub
push
jno
pop
mov
orl
cmpsl
loop
rcrb
sarb
pop
xchg
loop
mov
clc
scas
cmpsl
pop
mov
push
mov
sbb
out
adc
xchg
xor
lock
jno
xchg
shl
adc
xor
inc
aaa
sbb
lret
lea
stos
sub
jne
lret
xchg
leave
lcall
mov
pop
adc
ja
scas
add
jnp
sahf
push
pop
inc
pop
pop
ljmp
rol
nop
test
push
data16
orl
xor
push
daa
aam
dec
rorb
push
inc
das
pop
rcl
push
xchg
xchg
xchg
adc
push
and
cwtl
mov
mov
cwtl
push
sbb
cmc
lret
cmpb
jae
push
inc
lds
adc
add
xchg
add
in
fldenv
or
xchg
movsl
mov
leave
bound
inc
add
push
int
flds
dec
adc
push
adc
mov
in
cmpsb
jmp
push
and
pop
push
sbb
inc
std
sbb
fnstcw
fs
xlat
push
dec
jo
dec
dec
movsl
arpl
data16
int
in
imull
bound
movsl
test
pop
movsb
mov
daa
cmp
mov
cltd
ja
into
frstor
push
inc
inc
mull
shlb
fstps
mov
aad
add
dec
movsl
xchg
sbb
mov
push
xchg
cmp
daa
pop
mov
mov
cmp
insl
in
int
das
xor
pop
adc
sahf
adc
rol
push
call
push
adc
mov
dec
xchg
and
push
jo
rorl
push
in
repnz
pop
insb
scas
enter
rclb
xchg
cwtl
rcrl
or
mov
out
lretw
pop
dec
pop
xor
test
dec
xor
mov
push
sahf
mov
xlat
cwtl
insl
aad
xchg
into
out
leave
push
mov
leave
fsub
dec
mov
jb
js
mov
dec
xlat
mov
cmp
aam
dec
rorb
adc
shl
dec
fcom
push
mov
enter
jecxz
xlat
add
push
outsb
mov
call
push
rclb
cmp
call
dec
dec
js
mov
call
mov
aam
or
ficoms
inc
icebp
into
push
push
push
inc
jns
dec
xchg
call
push
jl
shl
push
out
dec
xorb
jne
lods
dec
rorb
mov
dec
mov
inc
cmc
and
ds
fiaddl
fildl
int
lret
rcr
adc
dec
jl
mov
adc
sahf
and
xchg
or
imul
sbb
popa
push
dec
push
inc
xchg
stos
mov
mov
and
jns
push
adc
mov
or
clc
adc
push
call
xchg
add
call
std
or
mov
outsb
xor
inc
mov
into
fidivs
inc
xchg
shlb
add
rcr
xchg
inc
xchg
or
into
jb
push
pop
orl
fadds
lds
xor
addr16
adc
mov
out
shlb
adc
dec
mov
sbb
ss
pushf
pop
xchg
mov
stos
clc
xchg
fs
in
push
mov
add
repnz
fcoms
out
fidivrs
ss
push
insl
fldt
xchg
rcl
mov
mov
push
pop
xchg
mov
pusha
in
pop
push
sbb
xchg
clc
rcr
adc
xchg
dec
dec
add
lret
xor
insb
push
inc
or
fwait
push
mov
xor
push
in
add
dec
mov
shl
adc
xchg
push
je
jb
out
sub
into
push
xchg
mov
ss
push
jne
pop
jg
jno
push
sub
pushw
or
dec
push
pop
dec
mov
clc
xor
insl
data16
push
pop
jb
jno
sar
xchg
adc
rcl
imul
pop
sbb
adc
icebp
pop
push
mov
clc
into
data16
out
sbb
push
dec
sub
push
mov
xor
hlt
sbb
push
sub
adc
or
in
ret
sbb
mov
pusha
push
frstor
mov
pop
adc
mov
sub
pop
mov
sbb
int
out
mov
pop
xchg
mov
sbb
rorl
ja
int3
mov
sbb
inc
cmpsl
loopne
data16
adc
pop
push
mov
sbb
push
mov
mov
cwtl
adc
leavew
pop
outsl
mov
sbb
mov
repnz
xlat
dec
dec
fisttpll
aad
add
pop
adc
rcr
into
mov
pop
lret
sbb
push
or
lret
aad
push
mov
pop
rol
mov
push
sub
push
xchg
fnsave
xor
push
push
pop
clc
mov
sbb
adc
push
mov
imul
sbb
mov
dec
imul
sub
mov
outsl
push
jo
sarb
pop
xchg
mov
sbb
push
adc
ret
adc
lret
mov
sbb
cmpsl
push
push
ja
cmc
mov
adc
xchg
mov
mov
roll
xchg
cmp
push
sub
cwtl
add
icebp
jecxz
out
mov
adc
mov
rol
push
iret
pop
push
push
rcrb
mov
xorb
loop
dec
cmp
insb
dec
fdivs
jbe
shll
cmpsl
popf
mov
and
and
stc
jns
or
xlat
xchg
mov
inc
cmp
push
in
xlat
enter
cmp
dec
sub
pop
sbb
push
mov
pop
push
xchg
mov
iret
xlat
clc
mov
dec
dec
dec
test
push
dec
in
dec
into
push
or
cs
fimuls
sub
sarb
ds
pushf
aaa
iret
loop
les
and
fists
push
sub
dec
xlat
gs
jecxz
jb
into
mov
xor
not
push
pop
adc
repnz
js
and
out
adc
mov
and
sahf
push
testb
stc
test
shl
push
adc
fists
push
ret
adc
fsubs
xchg
add
pop
leave
push
inc
adc
and
dec
pop
push
testb
rcrb
decl
cmp
mov
push
or
lret
add
xchg
push
mov
hlt
shr
add
bound
lret
sti
sahf
lds
pop
jbe
dec
daa
jae
pop
stos
testl
fcmovnu
in
cli
mov
add
gs
push
mov
xchg
call
enter
push
ret
sbb
sbb
test
stos
xchg
sbb
int
js
scas
jle
xchg
aad
sbb
add
jmp
aam
out
pop
test
xlat
stc
mov
ja
cmp
xor
cltd
jmp
sub
iret
ljmp
pop
jns
push
lret
cpuid
pop
rorl
push
push
loop
push
adcb
adc
cmp
push
ret
adc
xchg
xchg
mov
push
or
aam
adc
imul
movsb
and
fld1
cmpsb
aaa
sbbb
cmp
pushf
pop
inc
mov
add
and
movsl
mov
insl
hlt
xchg
loop
and
and
in
arpl
jb
movsb
rorb
movsb
sar
cmp
xchg
jecxz
jecxz
cwtl
adc
scas
adc
ret
in
xchg
and
sar
and
fsubp
aad
or
xchg
push
loop
pop
aam
jae
adc
xor
outsb
mov
out
fwait
das
mov
aam
dec
push
and
push
test
push
lcall
call
jg
add
pop
mov
cmp
push
push
lods
shrb
rorb
hlt
mov
cmpsl
in
sbb
cli
call
mov
in
data16
mov
mov
inc
inc
fiadds
int3
dec
fcompl
mov
adc
or
incb
es
xchg
lret
in
push
lods
bound
enter
dec
mov
test
xor
jp
adc
pop
cmp
rorl
pusha
into
xor
dec
ret
mov
push
int3
mov
cmp
inc
cwtl
dec
cmp
lods
gs
outsb
dec
aaa
mov
mov
or
push
psubsb
push
dec
dec
fcomps
out
inc
nop
adc
aam
push
out
dec
pop
roll
cmpsl
mov
push
add
jmp
rorl
dec
xchg
cmc
dec
adc
loope
push
adc
cs
dec
push
adc
out
int3
push
sub
pop
ret
mov
aad
and
and
xchg
mov
clc
mov
ret
test
mov
xchg
pop
stos
push
lock
adc
jp
adc
pop
mov
mov
outsb
push
or
mov
mov
aam
nop
dec
dec
adc
shrb
cmpsl
adc
cbtw
push
push
frstor
pop
dec
fstp
xchg
in
xchg
out
push
cwtl
push
hlt
lcall
mov
fistl
push
jl
lret
push
call
xchg
xchg
push
push
shrb
push
pop
int
adc
arpl
adc
push
mov
shlb
ret
cmp
mov
sbb
cmpsl
fcomp
rclb
push
adc
pop
jne
jb
js
aaa
sbb
ret
lret
in
cwtl
fsubs
arpl
cld
mov
xchg
loop
dec
repz
and
repz
clc
sbbb
call
and
es
arpl
aad
and
push
loop
mov
xchg
and
in
and
in
and
sbb
je
inc
loop
aam
push
aad
xchg
loop
notb
jecxz
arpl
push
rcl
xchg
pop
test
adc
mov
sub
enter
push
add
sub
adc
adc
or
shll
cmovle
xchg
push
loop
push
pop
aad
fdiv
push
or
popa
push
pop
repnz
add
sbb
lret
imul
in
sub
adc
jecxz
popf
orl
or
out
jge
or
mov
hlt
fstl
pop
in
data16
dec
aad
mov
push
adc
mov
call
les
pop
push
inc
push
push
mov
add
call
aam
push
pop
mov
sbb
insb
and
jg
xchg
xchg
stos
decb
and
xchg
es
pop
pop
jnp
addl
mov
loop
push
and
mov
imul
push
dec
push
pop
pop
sub
rcr
mov
test
and
push
rcll
int
shrl
call
testb
out
not
mov
mov
fdivs
in
cmp
mov
xchg
push
mov
push
fcomps
pop
cmpsb
je
adc
push
mov
push
hlt
pop
xchg
loopne
fs
adc
call
fsubrs
daa
mov
push
repz
adc
leave
push
lock
les
mov
mov
sub
aam
test
mov
scas
push
loop
mov
out
addr16
lea
inc
ret
jp
adc
dec
sbb
cwtl
push
mov
outsb
xor
ss
push
test
movsb
int
mov
lret
sarb
dec
push
mov
daa
sbb
idivb
movsb
or
cltd
push
pop
outsl
jne
pop
xlat
cld
and
mov
pop
aad
jno
cwtl
push
jmp
pushw
aam
in
cwtl
hlt
push
stos
jns
add
mov
loope
or
mov
aaa
add
cwtl
icebp
jo
call
sub
xor
mov
xchg
sbb
mov
aaa
sub
in
mov
fsubl
add
cmp
or
in
xchg
or
jbe
in
push
dec
mov
testb
push
sbb
sahf
sbb
mov
sbb
and
jecxz
lods
xchg
arpl
xchg
add
mov
xchg
xchg
xchg
in
clc
loop
insl
repz
and
mull
add
mov
push
loop
lret
lea
fsubp
push
xchg
lods
dec
lret
dec
inc
out
data16
jecxz
pop
pop
pop
out
stos
push
sbb
fisttpl
into
mov
stos
icebp
into
xchg
icebp
iret
push
leave
xchg
push
push
mov
push
push
push
clc
jle
xchg
rcr
push
xchg
xor
fstl
adc
and
inc
ror
iret
arpl
rclb
dec
lock
jb
or
adc
shl
repnz
push
xchg
adc
mov
mov
sub
shll
dec
jb
dec
lret
pusha
mov
xchg
ficoms
push
xchg
adc
rcrb
push
dec
xchg
and
adc
dec
inc
shrl
push
dec
push
pop
mov
push
rclb
leave
lock
dec
dec
pop
push
adc
push
push
lock
fcmovnbe
pop
loop
pop
test
and
adc
push
sub
int
call
rcl
adc
adc
fcmovne
shl
mov
lret
and
xchg
adc
adc
dec
push
cmp
xchg
push
lret
mov
bound
dec
dec
dec
mov
push
adc
leave
adc
shrl
adc
adc
fmuls
leave
cmp
adc
adc
rorl
icebp
dec
ror
adc
adc
lret
dec
mov
adc
push
aad
push
rorl
enter
adc
rcll
mov
test
push
or
adc
add
pop
jge
iretw
cwtl
and
popa
dec
inc
push
rclb
dec
push
fists
ss
test
rclb
dec
fistps
aam
push
sbb
adc
adc
add
xchg
rclb
adc
rcrl
xlat
push
bnd
aam
push
movsl
sub
roll
test
rorb
imul
dec
test
int3
int
fistl
inc
or
push
mov
dec
push
imul
push
test
ror
push
stos
dec
pop
fst
dec
push
jl
enter
inc
pop
enter
or
push
xlat
rcrb
in
psubq
push
rcl
push
push
loope
sar
loope
iret
ss
ds
loope
shll
xchg
rorb
fcoms
or
pop
lret
inc
dec
es
data16
shll
rorl
push
stos
push
out
aad
fcmovnbe
out
rcr
xchg
dec
out
mov
push
into
in
int3
outsl
icebp
pop
scas
or
mov
mov
adc
inc
pop
mov
and
push
rclb
mov
mov
push
mov
adc
xchg
and
jb
enter
inc
pop
arpl
lods
into
jne
push
stos
or
aas
or
jmpw
sahf
into
or
xchg
int3
outsb
ret
push
add
std
psrlq
push
pop
je
or
test
dec
xchg
int3
or
inc
lret
repnz
stos
or
int3
call
daa
or
adc
sub
repnz
fcoml
aam
jmp
push
in
jne
clc
aam
dec
xor
xchg
pop
popa
lret
aam
dec
inc
dec
adc
testl
pop
fisttpll
iret
mov
scas
int
fsts
mov
imull
xlat
or
jns
mov
dec
test
mov
pop
inc
mov
rolb
aad
push
push
sahf
or
xchg
int
or
xchg
dec
sahf
or
xchg
int3
sahf
or
xchg
push
repnz
lods
adc
xlat
stos
dec
jne
push
stos
enter
mov
insb
and
dec
aad
mov
pop
adc
in
pop
mov
xor
pop
adc
ficoms
pop
mov
and
or
mov
psubsb
add
insb
push
and
jbe
icebp
and
ret
stos
test
fcmovbe
dec
mov
mov
js
inc
nop
inc
adc
clc
mov
insb
repnz
push
jb
shlb
sets
xor
xor
mov
outsl
je
lahf
cmc
xchg
mov
mov
hlt
push
mov
stos
out
das
push
mov
mov
bound
or
xchg
rcll
add
dec
scas
mov
out
and
and
dec
add
sbb
aam
cltd
mov
fcmovne
pushf
stc
xchg
loopne
push
jbe
mov
sub
fimull
xchg
test
mov
arpl
sbb
mov
sbb
gs
pop
sub
hlt
iret
mov
and
and
hlt
inc
shlb
mov
dec
fsts
movsbl
jecxz
lahf
aaa
pop
and
test
jle
xchg
ret
jae
cld
outsl
cmp
imulb
cmpsb
mov
mov
add
adc
inc
arpl
repnz
arpl
shrb
jns
je
enter
inc
out
sub
gs
lods
push
outsb
inc
push
jbe
and
xor
icebp
adc
jbe
mov
push
ret
js
jmp
shll
mov
scas
xchg
and
fnsave
loop
mov
ret
fsubrs
pop
push
xchg
pop
scas
dec
gs
sub
mov
adc
stos
fdivs
es
les
shll
pop
insl
or
mov
scas
dec
inc
mov
sub
or
and
push
mov
ret
testl
rol
mov
inc
inc
fdivrs
movsl
or
mov
mov
xchg
mov
jle
dec
adc
aad
jbe
dec
idivl
ja
dec
jp
enter
adc
add
mov
xchg
mov
push
addr16
shl
mov
adc
mov
adc
arpl
xchg
sub
call
pusha
sar
les
fstpl
out
push
shl
cld
push
into
mov
jb
or
rcll
or
fs
lahf
cmc
jne
mov
mov
and
bound
out
sbb
popa
hlt
sub
aam
shll
js
and
adc
cmp
mov
scas
and
xor
push
adc
pop
cltd
pop
mov
ljmp
fisubrl
adc
sub
pop
out
cmp
cs
jge
xchg
out
inc
nop
xchg
mov
ret
mov
stos
pop
push
xchg
loop
dec
rolb
dec
xor
and
mov
nop
insl
int
sbb
lds
scas
dec
and
test
out
adc
adc
and
adc
jne
bound
push
and
and
lcall
xor
repnz
adc
lods
aaa
push
je
ss
jo
pop
pop
pop
or
popa
ja
test
cwtl
cmp
or
mov
pop
mov
pop
dec
mov
adc
fiaddl
xchg
pop
sub
scas
sub
mov
test
movsl
pop
leave
and
addr16
mov
rcr
cmp
sub
mov
mov
mov
aad
xor
mov
out
xchg
cmp
mov
jecxz
xor
ret
push
rolb
push
call
push
loopne
clc
cmp
lea
cmp
gs
scas
lods
stos
daa
ljmp
inc
pop
mov
jns
mov
call
sbb
shl
cmpsl
xor
std
loop
jb
push
adc
int3
mov
sarl
sbb
adc
adc
push
and
xlat
sbb
pop
mov
lods
mov
mov
mov
movsl
mov
dec
and
sub
push
aas
loopne
jecxz,pt
out
mov
gs
loopne
sbb
pop
push
push
mov
jne
push
popa
mov
icebp
adc
ss
xchg
popa
xchg
enter
mov
inc
aad
rcl
mov
std
xrelease
cs
sbb
and
mov
mov
testb
fs
mov
xchg
xor
shrb
push
fcoms
push
js
xchg
test
call
cmc
daa
shlb
cmc
sub
inc
mov
aad
adc
scas
sub
test
pop
add
dec
outsb
ds
daa
dec
sub
pop
roll
mov
xchg
sbb
lcall
andb
popf
xchg
sbb
outsb
faddl
call
out
xchg
bound
das
xchg
bound
jno
in
adc
mov
test
xchg
in
les
iret
jns
mov
fisubrs
mov
icebp
xchg
adc
jae
pop
xchg
pop
cld
and
mov
aam
xchg
adc
or
mov
fistpll
sbb
sti
push
or
xchg
lret
push
repnz
stos
and
mov
xchg
pop
jne
mov
cmp
mov
pop
adc
mov
jbe
adc
or
clc
insl
stos
lds
xor
sub
xchg
ret
sub
xchg
mov
imul
push
dec
fwait
cmp
dec
sub
sub
mov
test
aaa
push
adc
data16
mov
int3
xlat
lods
loope
fs
push
sbb
test
and
mov
andb
jb
rclb
sub
sbb
scas
lods
inc
je
mov
in
mov
movsl
push
lcall
subb
sub
ret
shll
or
rcl
push
jl
scas
es
xorb
xor
cmpsb
cli
lahf
movlps
mov
loope
add
mov
lods
sub
icebp
loopne
mov
push
jmp
test
shll
lea
cli
sub
hlt
and
add
pop
fmuls
stos
mov
pop
out
xor
stos
bound
adc
mov
add
test
jo
stos
les
cs
insl
push
or
xchg
sbb
pop
or
and
out
addr16
add
sbb
icebp
in
fcomps
popl
add
jae
jecxz
notb
xchg
pop
ret
in
add
icebp
rcll
xchg
push
xchg
or
dec
push
mov
xchg
pmaxub
push
pop
call
shlb
lds
in
dec
hlt
and
iret
add
mov
cmc
cmpsl
iret
pop
rcll
push
dec
add
push
out
xor
testb
sub
fists
pop
out
mov
mov
das
test
mov
adc
hlt
imul
data16
jnp
xlat
fmulp
add
stos
push
mov
rcr
imul
inc
in
clc
cmp
ret
cwtl
out
ja
rol
dec
push
in
jbe
frstor
pop
xchg
sub
lods
iret
scas
sub
shll
and
fwait
dec
lods
mov
insl
out
ret
add
cmpl
out
and
pop
mov
repnz
adc
cwtl
mov
xor
adc
add
fdivl
inc
cltd
fldenv
pop
addl
pop
push
fsub
pop
js
push
mov
jg
mov
into
jne
test
loop
and
adc
shlb
jne
jg
or
jb
rclb
in
adc
shll
xchg
add
fdivrs
add
popf
push
or
fcomps
test
dec
push
cmp
adc
xor
hlt
and
inc
push
aaa
push
jno
xorl
push
mov
call
pop
jle
outsl
push
xchg
fdivs
test
xchg
and
sahf
repnz
popa
mov
shll
jb
mov
in
roll
mov
adc
loop
rorb
adc
adc
jnp
xor
add
dec
and
fcompl
wrmsr
pop
adc
fldcw
push
push
jg
rcrl
push
dec
je
leave
in
rcrl
xchg
adc
xchg
repnz
xchg
push
pop
adc
jae
icebp
stos
adc
inc
aam
in
adc
sbb
pusha
mov
mov
xchg
shlb
fisubl
andl
adc
out
push
rcll
adc
arpl
call
push
push
loopne
and
fidivrs
mov
shlb
out
in
in
shrb
fcomps
imul
or
loop
out
jbe
mov
jb
jbe
jp
push
inc
jmp
ss
outsb
sub
lret
xor
mov
into
mov
into
out
sbb
out
data16
mov
rol
mov
pop
cmpsb
mov
sbb
push
fstl
sub
xchg
adc
xchg
cmc
lock
ficoms
xchg
push
aad
adc
push
ficoms
xchg
daa
lock
loop
ret
pop
sub
push
add
popa
xchg
xchg
xchg
lock
adc
sub
xlat
into
xchg
pmaxub
push
shrl
push
dec
fstp
push
loopne
sub
rcll
mov
pop
shrb
fdivr
outsb
sbb
xchg
stos
rcll
out
fadd
sbb
pop
xchg
mov
sbb
stos
mov
push
int3
fisttpll
mov
dec
or
mov
sbb
paddusw
mov
pop
shlb
dec
push
mov
pop
xchg
mov
sbb
push
xlat
fstpl
push
push
les
and
mov
lret
dec
xchg
pop
or
test
pop
push
sbb
inc
and
add
sbb
push
pop
dec
enter
fucom
mov
inc
xchg
in
fcomps
in
mov
push
vaddsubpd
pop
shlb
inc
pop
leave
call
fucom
push
mov
pop
xor
adc
jnp
adc
in
lock
pop
scas
dec
out
fdiv
iret
aad
into
pusha
into
and
mov
push
push
push
adc
sbb
out
and
jne
mov
test
pop
xchg
movsl
mov
addr16
xchg
outsb
or
xchg
int
int
stos
lods
jne
mov
pop
push
mov
mov
push
mov
fsubrs
mov
jns
jno
push
add
scas
push
add
cwtl
mov
push
sub
dec
mov
rclb
push
jge
js
mov
shl
lret
ja
mov
jl
rcll
shrb
lds
fistpl
sub
mov
sbb
mov
or
adc
jb
movsb
adc
popa
inc
add
push
scas
nop/reserved
mov
mov
pop
xchg
adc
out
ret
dec
push
push
pusha
or
js
xchg
mov
es
xchg
push
cmp
cs
push
in
jno
jl
pop
out
pop
add
ss
push
mov
fcoms
push
les
aam
adc
pusha
fstpl
push
icebp
push
rol
cmpsb
and
push
addb
call
push
pop
push
lahf
push
jl
jbe
out
je
push
sub
std
popa
cwtl
rorl
rclb
push
mov
fs
je
add
aad
xchg
xchg
and
xchg
hlt
int3
test
push
push
das
gs
popw
xchg
mov
dec
int3
cwtl
int3
ss
ret
lcall
out
icebp
adc
xchg
rcrl
adc
data16
fisubl
xchg
cwtl
ror
in
arpl
das
cs
shl
xor
lret
mov
int3
adc
mov
cwtl
pop
dec
adc
nop
les
scas
pop
je
pop
hlt
dec
out
notl
cwtl
aam
and
fcoms
inc
dec
push
leave
aad
push
ret
nop
gs
xchg
cmp
add
push
push
lods
arpl
push
xor
adc
in
fmuls
gs
push
xor
cmpsb
adc
push
pop
mov
cmpsl
mull
and
mov
shlb
loope
pop
shll
nop
dec
or
sbb
out
adc
sub
sub
rorb
int3
and
shl
cs
fidivl
xchg
fadds
adc
adc
aaa
and
jae
xchg
adc
int
xchg
shl
shll
sahf
int
adc
sbb
push
fs
orl
lods
movsb
fdiv
push
xor
mov
dec
xchg
cmc
repz
xor
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
xchg
in
call
xchg
mov
iret
mov
daa
or
dec
push
mov
dec
cmpsb
addr16
mov
mov
icebp
xchg
repz
inc
ja
xchg
xchg
mov
jp
xchg
addb
jo
pop
jp
jp
mov
fadd
sarl
int3
mov
addr16
push
aaa
iret
jae
dec
lret
or
addr16
insl
aaa
mov
jbe
addr16
jb
outsb
dec
jp
xchg
cmpb
jbe
mov
push
jge
xchg
in
jbe
inc
outsb
jb
outsb
mov
nop
ror
dec
mov
jb
repz
dec
iret
mov
addr16
aaa
aam
adc
push
cmpsl
xorb
dec
jbe
xchg
sbb
loopne
cmp
or
xlat
mov
pop
ret
lods
dec
mov
adc
or
addr16
lret
daa
in
shlb
ja
and
jp
aaa
pop
push
mov
push
mov
mov
addr16
xchg
inc
jg
mov
repz
xor
xchg
cmp
xchg
push
inc
xchg
popf
pushf
out
xchg
lds
pop
fldcw
pop
cmp
imul
dec
xlat
xor
dec
lods
aam
fsub
sub
sti
movsl
imul
mov
or
mov
lock
xor
mov
in
xor
jecxz
push
mov
fisttpll
mov
movl
xchg
sahf
cmpsl
cmp
jb
outsb
test
ret
cmpb
cmp
mov
cmpsl
or
dec
mov
lret
pop
or
xchg
xchg
jno
inc
ja
xchg
jnp
jbe
movsl
jb
outsb
idivl
xchg
mov
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
mov
mov
mov
fcmovne
movb
pop
dec
rorl
dec
orb
bound
xchg
in
cmpsl
outsl
ja
xchg
cmpsl
sub
outsb
and
xchg
sbbb
and
mov
jno
test
pop
inc
pop
pop
pop
stos
pop
cli
dec
mov
pop
rcrb
negb
aad
xchg
xlat
inc
enter
jb
push
outsb
sahf
cli
push
pop
imul
xchg
xchg
xchg
jle
pop
cmp
or
dec
cld
mov
leave
cld
or
dec
fdivrl
cmp
sub
cld
cli
or
mov
lret
inc
mull
mov
dec
push
mov
lret
mov
mov
aaa
incl
xchg
sub
int3
xchg
fwait
pushw
push
call
cmpsl
jne
jge
test
addr16
or
add
add
aaa
xchg
fxch
pop
ljmp
inc
and
dec
xchg
fmuls
dec
mov
mov
jge
mov
mov
mov
mov
mov
cmpsl
push
aaa
xchg
inc
fcomps
sbb
sbb
jp
jp
jp
cli
inc
ja
jb
outsb
push
jp
xchg
adcb
push
pop
insl
xor
pop
cvtdq2ps
dec
adc
pop
repz
xor
imul
rcll
xchg
xlat
mov
adc
mov
ja
xchg
dec
xchg
xchg
xchg
jb
outsb
movsl
jp
xchg
and
xchg
jp
jp
jp
jp
jp
jp
jp
jp
pop
cmp
xchg
rorl
repz
lcall
mov
adc
repz
xor
xchg
mov
mov
popf
aam
out
push
in
icebp
mov
mov
testl
pusha
test
in
jge
in
pop
jb
xchg
outsb
fdivrs
xchg
xor
mov
add
jp
jp
mov
pop
push
mov
adc
push
jno
addb
pop
sbb
aaa
in
inc
push
pop
fcomp
in
add
jecxz
insb
ja
mov
dec
rorl
movsl
xlat
mov
add
sub
jbe
pop
xchg
jno
inc
cwtl
xchg
cmpsl
cmpsl
icebp
ja
sbb
pop
in
xchg
sbb
dec
jge
jge
mov
adc
xchg
add
add
fadd
neg
pop
pop
fnstcw
pop
scas
mov
popl
adc
cwtl
mov
mov
ja
aaa
into
inc
push
xchg
dec
cmpsl
mov
xchg
jb
outsb
dec
jp
xchg
sbbb
push
shl
into
ret
das
mov
fdivl
adc
mov
sbb
out
xor
mov
arpl
lods
add
add
fiadds
fnstcw
movsl
pop
xchg
sbb
adc
inc
adc
dec
inc
dec
jp
pop
fdiv
push
or
dec
inc
mov
orb
mov
adc
mov
js
imul
clc
adc
nop
pop
ljmp
addr16
adc
rep
push
jns
aaa
mov
adc
repz
out
popa
inc
mov
cmp
sbb
mov
sub
es
cmpsb
or
sub
repnz
xchg
jae
jae
jae
mov
js
stos
push
cmpsl
repnz
add
push
rolb
pop
cli
cmp
test
cld
sub
stos
sbb
or
mov
pop
outsb
mov
mov
pop
and
push
sbb
dec
mov
and
and
xor
fidivl
jae
jae
jae
scas
jae
dec
nop
xchg
mov
ja
adc
jno
les
clc
mov
pop
or
mov
lret
push
movl
push
mov
divl
push
inc
popa
loope
cwtl
jno
jge
lods
ret
xorb
lods
jp
jp
jp
jp
jmp
push
mov
inc
rcrb
fnstenv
pop
dec
xchg
mov
adc
out
fsub
pop
inc
fnsetpm(287
pop
fs
push
mov
lahf
mov
mov
outsl
mov
cmp
xchg
popf
fisttps
nop
cli
sub
lret
push
sbb
mov
mov
fadd
sub
adc
loope
jno
push
mov
mov
dec
jae
xchg
rcll
popf
lea
push
daa
push
test
mov
divl
add
add
jp
jl
or
lods
dec
cmp
push
bound
lods
xor
inc
xor
pop
xor
stos
mov
ja
loope
dec
mov
cmc
xchg
push
pop
jmp
adc
out
ja
imul
jp
stos
ss
push
push
rclb
push
clc
xlat
js
test
repz
nop
mov
inc
out
or
dec
rorl
scas
or
jae
xchg
call
call
cmc
insl
pushf
rorl
das
lods
loopne
movsb
faddl
pop
xchg
out
mov
scas
lock
xchg
sbb
xchg
popf
je
fisubrs
es
pop
mov
hlt
lods
inc
pop
dec
jl
xchg
addr16
inc
out
xchg
fprem
pop
mov
sbb
clc
aaa
push
or
jae
lods
xor
idivl
ror
jbe
adc
mov
or
mov
mov
fmul
fwait
adc
aaa
shlb
out
sbb
mov
pop
push
hlt
pop
jecxz
mov
pop
sbbb
sbb
cwtl
mov
push
xor
xlat
js
push
insl
pop
jge
test
jge
jge
jge
jge
jge
fs
and
pop
loop
pop
fisttpl
daa
lds
jo
stos
das
mov
and
in
mov
lret
jo
lret
or
dec
cmp
lret
rorl
int
in
in
mov
mov
jge
jge
jge
jge
push
aaa
xchg
push
add
pop
loop
xor
mov
outsb
mov
aad
xchg
sub
daa
xchg
add
stos
outsb
aam
cmpsl
xor
test
push
lret
loopne
lock
sbb
data16
lds
pop
insl
sbb
push
adc
rorb
ss
xchg
sub
xor
loopne
leave
scas
rcll
ss
sarl
pop
inc
pop
pop
pop
cli
pop
dec
mov
fcmovne
popa
and
xchg
jo
jbe
pop
mov
xor
outsl
mov
or
imul
or
sbbb
inc
lret
jb
dec
outsl
addr16
pop
aaa
pop
cmp
adc
add
dec
jge
mov
dec
dec
or
add
add
push
push
cli
cmp
ljmp
cmpsl
lea
lock
leave
mul
or
inc
flds
ja
xchg
mov
xchg
shrb
lcall
pop
jg
clc
xchg
xchg
xchg
mov
jns
mov
jl
mov
loopne
out
pop
inc
flds
sub
xor
sub
cld
or
mov
mov
mov
or
dec
outsb
insl
out
pop
stos
xchg
or
sub
mov
xor
sbb
out
testb
adc
dec
and
popf
aaa
mov
in
fcoms
inc
pop
pop
lret
jae
mov
push
jge
sbb
jb
outsb
xor
xchg
sbb
aaa
popa
loope
clc
mov
push
es
adc
repz
subb
jp
jp
jmp
aam
fidivrs
xchg
orb
rcrb
xchg
mov
out
or
cmp
push
mov
xchg
jbe
mov
bound
cs
shlb
xor
xchg
ds
push
pop
scas
scas
xchg
mov
movsl
popf
sub
sarl
test
jge
jge
lods
lahf
xorb
addr16
shrl
mov
sti
jbe
aaa
int
jge
pop
jp
xor
mov
dec
xor
into
mov
adc
add
arpl
leave
loopew
roll
data16
mov
lret
push
dec
cwtl
iret
adc
roll
inc
addr16
aaa
push
fwait
push
pop
mov
or
adc
mov
sarl
adc
xor
jae
jle
std
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
int
mov
push
fsubs
aas
push
xor
mov
jae
jb
jbe
ja
sarl
xchg
adc
insb
sub
cmp
mov
jb
mov
insl
int3
test
mov
dec
push
popa
popf
imul
jb
outsb
sbb
xchg
fimull
xor
mov
dec
push
mov
inc
or
dec
js
xchg
adc
adc
lret
cmpsb
xchg
mov
stos
movsl
sbb
jne
mov
dec
adc
sub
scas
xchg
mov
enter
stos
js
mov
mov
jno
ljmp
cmp
fcmovnb
stos
addr16
mov
xchg
push
mov
loopne
mov
cmpsb
xlat
push
sbb
int3
shll
imul
adc
bound
jmp
push
out
pop
sub
mov
push
mov
mov
mov
fwait
lret
or
cmp
jne
jge
test
stos
pop
dec
push
outsb
jae
and
xlat
push
in
push
pop
filds
fsqrt
fisttpl
jecxz
pop
stos
pusha
dec
xor
sbbb
xchg
inc
daa
movsl
mov
and
xchg
popf
jae
jae
jae
jae
jae
jae
xchg
mulw
insl
xor
cmpl
fsts
clc
es
sub
test
stos
add
fnstsw
sarb
xchg
rol
adc
cwtl
xor
push
push
stos
into
fists
dec
mov
push
insl
push
xlat
pop
mov
ljmp
shll
inc
outsl
xchg
loop
adc
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
xchg
test
or
int3
jae
jae
fsub
mov
push
fsts
cwtl
adc
mov
xchg
adc
or
or
notb
addr16
aaa
xchg
inc
aad
adc
not
cld
xchg
sbb
scas
mov
hlt
or
pop
sbb
xchg
stos
stos
lea
mov
pop
mov
adc
adc
adc
mov
test
mov
push
xor
push
jbe
fdivr
pop
cld
cwtl
or
mov
mov
push
stos
xchg
shll
lds
sub
pop
adc
xor
outsb
xchg
lods
dec
push
shrl
or
lret
jge
jge
jge
jge
jge
in
mov
mov
dec
stos
mov
xchg
mov
adc
repz
xchg
jp
jp
cmp
push
adc
push
xchg
rcrl
xchg
xchg
mov
adc
push
xchg
adc
cld
dec
cld
mov
lea
push
mov
jge
jge
mov
jp
pop
mov
add
mov
cwtl
stos
xlat
mov
adc
jge
jge
jge
jge
jns
jge
lods
into
mov
fldt
cmc
dec
xorb
cmp
mov
mov
mov
push
mov
adc
cmc
xchg
pop
rcrl
push
mov
xchg
test
push
repz
cld
mov
int
or
sarb
nop
lret
dec
jae
jno
les
dec
mov
or
int3
xchg
jp
cmp
or
push
ja
or
xchg
add
adc
push
push
xchg
sub
shl
enter
pop
xchg
pop
rclb
leave
xchg
add
adc
sub
push
add
stos
mov
xor
or
mov
push
xlat
adc
aam
push
test
push
jae
jae
inc
dec
push
or
dec
rep
fisttpll
out
and
rcl
shrl
iret
std
push
dec
dec
or
in
lret
sub
jne
lds
adc
daa
mov
adc
or
xor
lret
int
push
adc
mov
hlt
adc
jae
inc
rorb
lret
sub
lret
xchg
push
xor
adc
sbbb
mov
rcr
push
dec
xchg
xchg
int
push
xchg
sub
stos
sub
mov
pop
dec
pop
push
addr16
int
cwtl
xchg
sub
mov
pop
adc
or
adc
or
jbe
cld
int3
or
pop
dec
pop
xchg
pop
jo
pop
mov
pop
or
pcmpgtb
mov
shrl
xchg
push
mov
fcomps
adc
push
clc
rcll
lret
jge
in
push
scas
not
je
xchg
adc
cmp
in
xchg
pop
clc
or
pop
sbb
mov
jp
mov
push
popf
sbb
jne
mov
fs
mov
ss
dec
lods
dec
mov
jmp
sbb
xchg
dec
push
lods
punpckldq
mov
jbe
adc
jp
xchg
adcb
jp
jp
cmp
xlat
out
clc
push
aad
push
mov
push
leave
in
jae
xor
xchg
push
jb
pop
fsub
pop
push
pop
rcll
or
adc
mov
int
int3
or
add
rcll
jae
or
das
dec
pop
adc
push
pop
rcll
sub
mov
fwait
stos
adc
xchg
pop
or
pop
clc
mov
pop
lock
mov
xchg
xor
adc
sub
push
mov
out
push
neg
pop
xlat
push
das
int
xchg
xlat
clc
into
cmp
popl
jo
lds
pop
mov
mov
pusha
jne
xchg
push
xor
inc
adc
xchg
int3
adc
xchg
sbb
xchg
xchg
popf
push
sbb
pop
cld
cwtl
mov
rcl
mov
pop
dec
push
cmc
jae
mov
lret
fs
insb
xchg
mov
sub
out
mov
fmuls
push
in
dec
mov
mov
pop
push
xchg
idivl
iret
imul
aad
xlat
push
dec
xchg
dec
adc
out
push
mov
in
iret
mov
dec
adc
cwtl
rcll
mov
push
mov
xchg
xchg
into
das
pop
mov
or
or
rcl
push
sbb
paddb
mov
lds
sub
pop
or
xchg
int
mov
insb
push
or
xchg
fs
mov
stos
jge
in
cwtl
push
rorb
jmp
mov
stos
loop
mov
lods
xchg
das
ljmp
stos
mov
js
std
xchg
inc
das
loopne
xlat
cmpsl
pop
pop
push
and
rorl
adc
vcvtdq2pd
out
mov
pop
jbe
xchg
pop
rolb
ss
cli
xchg
cld
aam
adc
push
cmp
icebp
out
insb
lret
and
and
xchg
inc
mov
dec
mov
in
push
push
aaa
dec
testl
sbb
call
inc
push
cmp
cmp
pop
cli
fcmovbe
jl
sbb
mov
insb
sub
mov
mov
hlt
aad
pop
xor
xchg
xor
repnz
fdivs
jae
addr16
div
push
mov
push
and
ret
cmpsb
shll
out
loope
dec
cmp
fisttps
mov
cwtl
out
inc
and
push
scas
iret
dec
dec
out
mov
cmpsl
dec
outsb
push
sti
lret
sarb
jge
movb
int3
jns
add
add
fistpll
int3
arpl
fwait
mov
mov
fldl2t
lcall
movsl
adc
xchg
inc
add
add
xchg
jmp
das
pop
jne
sbb
pushf
pop
mov
mov
aaa
sub
cli
push
mov
cmp
mov
push
dec
or
dec
dec
data16
ret
das
int3
shufps
dec
out
es
xor
pop
aaa
les
mov
stc
cld
and
adc
adc
js
lods
rcrl
xchg
xor
aam
pop
enter
mov
lods
cmc
add
js
aaa
xchg
testb
push
aad
sub
bound
sbb
mov
push
mov
pop
les
nop
push
shll
push
xchg
out
lock
adc
fs
push
push
adc
aad
and
xchg
mov
push
cmpsl
int
fadd
mov
push
fcoms
aad
lret
inc
lods
xchg
cltd
ret
add
lahf
mov
mov
outsl
stc
mov
dec
push
out
loope
fmul
push
cld
cs
ret
push
and
pusha
mov
sahf
js
sbb
stos
sbb
addr16
xchg
out
sub
js
xchg
mul
pop
rcll
pop
lods
lret
xor
fsubrs
iret
lock
lret
ret
push
les
sub
pop
and
dec
push
lds
repz
clc
cwtl
adc
push
add
ss
add
dec
shrl
adcb
mov
and
jae
mov
gs
adc
jbe
enter
mov
add
and
push
cmpsb
loope
xor
adc
lods
jnp
push
push
mov
cli
gs
sarl
mov
and
dec
xchg
inc
jnp
dec
mov
out
ds
push
mov
dec
arpl
std
fprem
gs
xor
push
lahf
pop
sbb
xchg
aam
sbb
adc
or
add
mov
rcrb
dec
ss
lret
shl
mov
outsl
xchg
hlt
icebp
pop
mov
fmul
jo
pop
inc
push
push
adc
push
cmc
pop
ljmp
dec
les
in
sbb
add
jg
out
movsb
stos
in
mov
xorl
es
icebp
jmp
sbb
fdivr
lods
xor
in
inc
push
out
lods
and
push
ljmp
fmuls
mov
loop
inc
loope
jo
add
add
daa
rcll
dec
jb
lods
hlt
or
jno
ss
xlat
into
mov
adc
icebp
and
ss
xchg
push
adc
adc
das
mov
xlat
push
rol
sbb
aam
cmc
fsts
fldcw
xchg
aam
stos
das
into
clc
icebp
add
xchg
shrb
imul
push
and
adc
pop
jnp
adc
sub
push
xchg
add
orb
mov
dec
jl
ret
dec
dec
orl
mov
out
jne
hlt
sub
or
ds
leave
incb
es
inc
fsubl
iret
push
push
rcl
imul
call
fstl
add
jns
mov
jnp
dec
add
xor
or
add
pop
imul
test
adc
sarl
insl
jne
or
notl
out
and
xchg
xorb
sbb
pop
rorl
dec
fildl
sbb
mov
cmpsb
pusha
mov
sub
test
fmuls
mov
cmpsb
fisubl
rclb
and
push
push
dec
pop
cmp
mov
sbb
rclb
inc
sbb
rorl
mov
or
xor
int
cmp
lret
fisubl
cwtl
shll
cmp
int3
mov
and
rcll
movl
adc
cmp
push
fsubrl
popa
mov
push
mov
add
dec
scas
push
mov
mov
xchg
clc
mov
ss
xchg
mov
aam
add
rorl
lds
jp
jl
ja
jb
fadds
fs
and
add
or
jmp
sub
clc
sub
call
mov
aad
sub
jmp
loopne
lods
inc
mov
and
dec
and
jmp
mov
lcall
lds
or
shll
mov
jb
insl
in
push
pop
or
push
inc
pop
dec
sub
sbb
xchg
xchg
lds
mov
mov
fstl
loop
rorl
imul
xchg
add
cmpsl
or
and
popf
jnp
or
aam
nop
adc
mov
pop
push
mov
cmpsl
arpl
dec
movsl
mov
push
mov
and
inc
test
mov
sbb
insb
push
sub
into
enter
push
mov
dec
call
or
fdivs
xchg
push
xchg
inc
adc
movsl
sub
mov
cwtl
sbb
cmpsb
dec
or
mov
dec
ret
add
cmp
pop
pop
dec
or
inc
and
dec
xlat
rorb
adc
xor
loop
dec
ljmp
int3
push
push
add
xchg
out
push
or
mov
push
mov
push
imul
loopne
aam
sbb
jbe
int
cmpsb
mov
mov
jl
negb
rcrb
add
shl
and
ds
xchg
xchg
movsl
subb
ds
push
clc
push
adc
pusha
dec
stc
ds
pop
cmp
xor
dec
leave
xchg
fwait
test
push
and
xchg
xor
lock
pop
test
inc
xchg
jo
int
dec
mov
popa
mov
jbe
sti
xchg
fst
dec
pop
or
cmp
rclb
mov
adc
jg
pusha
cmpsl
jl
in
jo
scas
add
push
xor
cltd
pop
pop
push
in
into
pop
rorl
cmpsb
sbb
call
rcl
bound
sub
loope
sahf
out
adc
ficoms
jne
hlt
ds
jbe
movsb
sti
or
repnz
pop
jl
sbb
fsub
cmp
sahf
and
in
aam
hlt
push
les
cmp
f2xm1
icebp
adc
ljmp
dec
scas
dec
xchg
push
mov
push
and
mov
dec
or
push
mov
cmp
add
dec
mov
sahf
dec
mov
push
aam
push
inc
or
fidivrs
aam
lret
ficomps
push
je
ret
pop
idivb
shll
jmp
adc
xchg
into
or
push
iret
stc
adc
data16
xchg
out
enter
rorb
jp
ficoms
pop
push
cs
dec
push
cmp
adc
bnd
xchg
vmptrst
iret
xchg
push
sbb
jnp
pop
inc
and
aam
mov
cmp
mov
dec
sbb
jbe
push
xorb
stos
adc
xchg
call
clc
aam
notb
cmp
bound
jnp
cmpsb
fadd
mov
std
pop
aad
loopne
adc
sti
sub
xchg
movl
call
inc
mov
push
rcll
cli
std
jp
mov
idivb
dec
pop
movsl
xchg
clc
in
clc
faddp
imul
inc
inc
nop
jae
push
test
in
ds
push
mov
jnp
divb
mov
dec
out
add
sahf
outsl
mulb
mov
inc
dec
xchg
inc
mov
and
mov
dec
lret
dec
xchg
mov
push
test
addr16
mov
popa
and
xchg
mov
pop
inc
mov
mov
and
add
xchg
ss
shll
and
jnp
in
or
mov
xchg
inc
pop
jne
int
adc
out
inc
dec
cmp
inc
xchg
outsl
sbb
cmp
fmull
in
bound
rorb
ds
push
adc
and
add
shl
mov
insb
ss
dec
sbb
ss
or
stc
xchg
mov
dec
jl
loope
lods
popa
bound
out
jl
sub
jae
rcll
out
rorb
add
sbb
adc
call
lods
xchg
xchg
cli
and
int
adc
pop
push
jge
xchg
cmp
push
mov
out
stos
sub
test
mov
scas
call
clc
jnp
adc
dec
cmc
sti
mov
cmp
cmpsb
push
sub
mov
adc
mov
inc
test
shrb
sub
push
dec
jne
insl
lcall
dec
and
in
inc
clc
hlt
fldl
mov
pop
out
int3
shrb
cwtl
es
sbb
dec
sahf
lahf
push
and
call
repnz
and
pop
ret
adc
out
sub
leave
not
je
into
xchg
push
pop
mov
ds
cmp
lods
rcll
cmpsb
test
or
fnstcw
mov
jbe
ret
ljmp
and
xor
fnstsw
xchg
xchg
jmp
sub
gs
icebp
xchg
sbb
test
mov
push
rcrl
out
fcomps
add
mov
or
mov
cmp
mov
loop
in
push
fidivrl
sbb
int
enter
cmp
push
popa
push
mov
push
cmp
sub
xchg
adc
or
and
sbb
xchg
adc
sbb
addr16
jne
rorb
and
push
stos
dec
ljmp
dec
in
rclb
divb
push
iret
stos
pop
cwtl
jnp
testl
dec
push
js
aad
out
and
push
outsb
inc
test
jbe
inc
push
pop
test
mov
ds
push
jge
fdivrs
adc
jbe
cmc
adc
outsb
sarb
dec
pushf
push
es
jl
jmp
jp
fiadds
cmp
in
out
sub
lods
pop
aas
xchg
adc
mov
add
adc
hlt
ficoms
xor
adc
out
cmpsb
fisubrl
or
dec
and
rolb
repnz
and
cwtl
mov
dec
jle
stos
ss
push
push
xor
push
or
xlat
xor
push
push
xchg
in
mov
outsl
jb
mov
not
or
xor
fsub
adc
xor
push
xor
mov
push
popf
shl
adc
cs
out
in
push
shlb
adcl
ja
dec
mov
push
and
jae
push
dec
or
daa
mov
cmp
aad
sbb
cmpsl
leave
rol
movsb
dec
xchg
xchg
leave
inc
push
inc
insb
mov
inc
into
jo
ja
cwtl
dec
xchg
fdivs
aas
jg
xlat
mov
dec
ret
into
addr16
jno
gs
xchg
stos
xor
rcll
mov
movsl
popf
ss
icebp
push
test
out
dec
pop
into
mov
cmp
adc
shll
stc
xor
mov
mov
cmpsb
testl
test
cmpsb
push
sbb
cmp
pop
push
popa
cmp
mov
jno
fdivrs
jnp
shlb
mov
out
daa
icebp
mov
pop
push
fisubrl
test
shl
push
stc
movsl
push
pop
inc
sahf
shrl
xchg
push
mov
fnstenv
xchg
jnp
pop
stc
mov
int
xor
jp
push
xchg
push
ljmp
push
pop
loop
xchg
lods
and
fdivrs
ret
mov
out
lock
cs
xor
testl
bound
pop
call
dec
mov
inc
loopne
pop
sahf
popa
arpl
dec
cmc
mov
scas
adc
jno
mov
pop
dec
iret
leave
cmc
push
inc
daa
sbb
xchg
loop
shl
xor
scas
movb
inc
ds
stos
sbb
xchg
bound
hlt
dec
popa
mov
stc
adc
push
pop
loopne
movl
push
mov
push
lds
jnp
lahf
loop
dec
gs
shl
popa
mov
sub
jo
jbe
rcll
jecxz
sub
push
add
out
aam
dec
mov
inc
push
add
and
sub
cmpsb
daa
fstpl
dec
rcr
fdiv
out
call
xor
mov
mov
cmp
bound
icebp
arpl
pop
lds
insl
fisttpll
mulb
sarb
enter
adc
adc
jno
xchg
add
fs
lret
imul
push
rolb
push
rol
adc
hlt
inc
mov
pop
loope
and
in
push
inc
imul
xchg
xorl
cs
or
pop
push
inc
and
xor
xchg
mov
push
sbb
in
mov
cmc
in
sub
mov
sub
cmp
shlb
push
cmp
dec
add
inc
cmpsl
cmpsb
mov
clc
subl
mov
xchg
cwtl
push
sbb
adc
ror
push
ss
movsb
ja
or
mov
outsb
sub
sbbb
pop
or
imul
push
adc
jae
jno
xchg
in
lret
daa
fadd
cmp
xchg
push
xchg
and
jmp
mov
push
mov
aaa
mov
mov
in
pop
int3
pop
and
mov
add
jae,pn
jno
testb
in
mov
xchg
inc
inc
push
push
mov
daa
bsr
addr16
or
xor
dec
int3
cmp
xor
mov
xor
jl
enter
xchg
sub
sbb
in
push
and
add
lea
adc
mov
sti
push
stos
imul
jno
mov
das
inc
jnp
pop
push
cmpsl
shrb
push
jmp
mov
push
adc
addb
dec
sub
pop
xchg
outsl
or
add
lcall
idivb
mov
rol
cmp
call
dec
shll
es
int3
rorb
cs
stos
push
pushf
xchg
sub
popf
mov
gs
inc
push
push
and
int
sbb
cmc
sub
or
or
not
and
popa
hlt
fmuls
xchg
xchg
push
sub
adc
popa
and
mov
cmp
aad
enter
imul
daa
in
mov
pop
ret
pushf
sbb
bound
bound
mov
ret
xchg
push
ds
stos
movsb
pop
out
int
fstpl
adc
aas
nop
scas
in
in
fnsave
mov
add
je
adc
mov
push
inc
jno
cmpsb
shlb
test
cmp
xchg
dec
mov
mov
push
mov
lret
mov
and
and
push
outsl
cmp
inc
sahf
adc
inc
sbb
mov
add
ficoml
jb
pusha
cs
loop
nop
mov
xchg
insb
and
ja
pop
push
adc
cmp
fimull
mov
cmp
jbe
jns
fidivs
jnp
cmpsb
cmpsl
ss
loope
insb
pop
mov
fsubrs
in
test
add
in
cmp
ja
loope
push
push
imul
fsub
adc
push
jmp
or
mov
cli
mov
jg
out
hlt
int
ljmp
mov
push
push
int3
push
andl
es
or
mov
sbb
mov
xlat
testl
popa
fwait
inc
enter
lock
lret
dec
add
outsl
dec
sbb
popa
inc
movsl
xchg
daa
xor
push
and
jmp
shl
test
cmp
test
inc
addr16
adc
cmpsl
or
push
and
mov
jl
call
mov
inc
js
stos
xlat
fdivrs
and
inc
xor
ss
cmp
push
into
mov
push
sbb
dec
xor
sbb
bound
push
imul
insb
mov
push
sahf
pop
mov
push
xor
push
loope
into
inc
rcrb
loope,pn
shlb
sub
add
lods
int
ret
push
sarb
pop
into
fsubs
or
jnp
in
mov
push
mov
fcmovu
es
es
insl
mov
and
aad
sub
mov
sub
or
mov
and
mov
scas
push
shlb
shr
loopne
cwtl
ss
daa
adc
push
xchg
clc
xor
cmpb
push
lea
or
cmpsb
dec
pop
sbbl
mov
test
fisubs
out
fsubs
fldcw
imul
fcmovb
push
pusha
push
jnp
dec
dec
arpl
fwait
and
cmpsb
and
xor
adc
inc
adc
add
push
enter
dec
mov
ret
xor
fstpl
add
sub
je
mov
test
push
push
adc
pop
icebp
shl
jl
add
or
push
cmc
pop
shlb
outsl
push
xchg
cmp
mov
ljmp
sub
jbe
fcom
mov
and
pop
pop
ss
fiaddl
movsl
xchg
xor
fadd
ds
call
loope
push
cld
pop
adcb
jnp
and
inc
addl
leave
sub
int
push
rcrl
das
xchg
push
push
sbb
test
daa
es
add
or
in
pop
pop
test
mov
sahf
ljmp
stos
out
adc
push
push
cs
int
repnz
testl
xlat
pop
cmp
into
loope
movsl
fcmovbe
out
shl
jg
bound
loop
gs
mov
fcmovu
jl
xchg
xor
lds
xor
jbe
subb
and
hlt
mov
out
push
and
shlb
mov
fwait
dec
xor
outsl
add
mov
push
pushf
nop
jo
or
fld
ljmp
xchg
cli
in
mov
mov
push
mov
mov
sbb
pop
cli
das
movsl
cwtl
mov
jno
imul
xlat
push
rcrb
dec
xchg
int
xchg
mov
push
inc
enter
movsl
cmp
out
add
mov
xorb
mov
bound
mov
pushf
push
push
xchg
stos
call
sbb
pop
and
xor
addl
xchg
mov
pop
xchg
adc
pop
sub
fucom
dec
adc
add
pop
or
pop
mov
outsb
lret
bound
fistl
rorb
nop
popa
xchg
mov
xorl
xchg
mov
sub
sub
cwtl
ficompl
xchg
lods
mov
sbb
mov
fcmovnu
mov
sti
pop
lods
hlt
push
int
pop
mov
aad
js
mov
gs
data16
lods
mov
inc
inc
int3
inc
jb
mov
sub
fmuls
jl
jae
and
or
add
jl
sbb
cmc
xor
xchg
xchg
mov
lock
mov
or
pop
or
adc
adc
add
pop
aad
push
fcoms
adc
das
bound
fcom
mov
push
push
sbb
dec
out
rorl
add
int
sbb
dec
xor
js
adc
cmc
push
jmp
xchg
loop
xchg
shll
adc
test
and
mov
xlat
repz
rorl
xchg
add
push
sbb
push
loop
iret
cmpsl
add
cmp
into
cmp
mov
es
out
imul
pop
and
push
into
insw
sbb
add
addr16
out
mov
cli
or
xlat
adcl
push
cwtl
test
push
mulb
add
fcomp
push
jnp
mov
data16
xchg
test
pusha
pop
dec
and
lahf
shl
out
jae
xor
icebp
dec
in
iret
lahf
inc
loopne
ficomps
push
push
push
dec
js
cmp
xlat
lods
adc
rorl
ds
enter
xor
push
repnz
push
pop
pop
inc
sahf
js
imull
repz
mov
sahf
mov
jge
sub
aad
push
cmp
data16
bound
push
out
inc
out
cs
pop
adc
add
mov
mov
imul
adc
aas
adc
mov
fsubp
cmp
push
push
outsl
incb
andl
std
out
ja
lock
push
jbe
dec
adcb
scas
dec
repz
sub
mov
cli
int3
mov
fadds
in
fistps
mov
ja
bnd
dec
jmp
mov
int
cmc
movsb
dec
mov
shl
cltd
pop
ss
xor
cwtl
inc
cmp
jnp
inc
mov
and
xchg
rorb
ds
fcmove
int
sbb
out
cs
pop
mov
push
inc
pop
mov
lds
and
fidivrl
ss
mov
push
adc
cmp
scas
pop
mov
jae
xor
inc
stos
push
push
push
and
mov
push
or
or
out
mov
push
dec
adc
push
loope
jl
mov
fimull
or
xor
scas
inc
imul
push
fwait
mov
cwtl
push
add
icebp
cs
sbb
xchg
icebp
cmpsl
fs
jecxz
stos
lret
orb
and
clc
inc
xor
inc
shlb
and
add
in
or
cmpsl
jae
gs
cmp
mov
mov
pop
loop
and
cltd
hlt
ret
xor
inc
jns
push
inc
cs
pop
mov
push
inc
stos
adc
iret
rcll
mov
scas
sti
orb
mov
push
cli
cwtl
mov
out
aaa
hlt
add
xlat
dec
bound
inc
popl
std
data16
stos
mov
fs
pop
xchg
test
es
out
push
ret
mov
xor
psrld
sarl
pusha
sub
adcl
inc
and
or
popf
and
mov
dec
pop
test
mov
inc
cli
es
shll
push
sahf
xchg
into
push
push
inc
push
dec
dec
cltd
bound
rcll
mov
mov
dec
loope
lahf
stos
sbb
adc
inc
loop
loope
shrb
dec
xchg
arpl
jl
out
fs
push
mov
fimull
mov
jmp
fcmovu
mov
xchg
in
jg
adc
cld
and
mov
shlb
fwait
into
mov
sub
xor
xor
xor
xchg
inc
ret
inc
iret
pop
aam
fcomp
ret
jne
pop
pop
push
sub
push
add
call
and
scas
pop
gs
sahf
xor
int3
call
dec
or
and
nop
scas
mov
push
push
rcr
inc
push
cmp
or
sbb
xchg
sbbl
into
and
scas
jl
and
or
pop
sbb
fmull
push
testl
ds
mov
pop
addr16
je
sub
push
adc
push
sarb
xlat
cmp
call
push
and
push
sub
sahf
inc
int3
test
movsl
seto
loop
dec
jecxz
std
xchg
or
sbb
jp
mov
icebp
mov
sub
adc
lahf
cmpsb
or
adc
inc
data16
aam
cmp
loope
dec
mov
push
gs
sub
mov
aam
pushf
push
gs
adc
insb
push
sub
sub
clc
gs
call
push
lock
js
aad
add
mov
dec
cmp
aaa
mov
popf
mov
mov
cmpsb
je
movsl
cmp
mov
fcmovu
xchg
push
xchg
xor
aam
outsl
faddp
loope
jmp
xlat
xchg
rclw
xchg
rorb
adc
push
mov
imul
inc
xchg
jae
into
arpl
push
ss
imul
sbb
rcr
rcll
adc
jmp
ds
cmp
stos
push
mov
or
jb
cmp
cmp
cmpsb
xlat
inc
shll
enter
cmc
movsb
push
adc
and
and
repnz
push
out
lcall
mov
mov
ficompl
ss
fsubs
push
inc
or
stos
mov
int
jmp
dec
stc
test
jp
push
push
dec
inc
jns
cld
cmc
ret
gs
xlat
imul
in
mov
mov
and
sub
notl
es
in
pop
cwtl
popa
inc
ret
jae
clc
inc
push
shr
push
push
mov
cmpsb
xchg
mov
adc
dec
push
popl
test
adc
popa
nop
dec
xor
mov
jnp
adc
xchg
dec
pop
movsl
div
cmp
or
and
mov
mov
pop
jle
pextrw
mov
sbb
scas
imul
xchg
jae
and
filds
and
mov
or
adc
mov
jnp
in
bound
fildll
shll
sbbl
add
les
ret
cmc
dec
ss
mov
ljmp
xchg
lock
pop
cmpsb
out
xor
shll
mov
dec
out
filds
or
or
scas
imul
testl
cwtl
scas
in
bnd
out
movsb
adc
out
imull
subl
pushf
xor
dec
push
or
xchg
div
repnz
aas
mov
loope
imul
imul
push
mov
lock
push
jl
inc
adc
int
xchg
adcb
sahf
jb
int3
call
add
nop
js
shll
cmp
inc
pop
ss
out
mov
pop
imul
repz
shl
lds
les
sahf
arpl
inc
movsl
mov
pop
fbstp
shll
mov
ljmp
je
cmp
jnp
iret
xchg
xlat
mov
rorl
sbb
cli
adc
pop
pop
cmp
and
cmpsb
push
push
or
in
fmul
dec
repnz
out
stos
jl
or
push
pop
repnz
adc
xchg
xor
push
add
push
and
and
std
lods
jo
mov
ljmp
les
mov
mov
faddl
fwait
jecxz
xlat
loop
cmp
mov
mov
dec
scas
xor
xchg
xlat
mov
push
divb
scas
das
xor
cmp
out
rcrl
aad
into
push
push
inc
test
sahf
std
xor
xchg
add
iret
mov
xchg
jg
les
lret
cmp
fbstp
jnp
lock
push
cli
inc
into
or
or
inc
push
out
mov
push
adcb
sbbl
xor
gs
adc
xchg
cs
es
push
lret
dec
jb
and
data16
push
das
xchg
sub
call
repnz
lahf
push
rol
mov
shll
mov
cmp
movsl
push
fadds
and
sub
add
out
xor
shl
cmp
ds
stc
add
sub
pop
inc
enter
xor
es
mov
dec
xchg
testb
jne
scas
ss
movsb
shl
xchg
ret
xchg
rcll
ss
pop
sbb
cmp
mov
ds
push
sahf
outsb
dec
fnstsw
adc
jb
xor
mov
sub
test
xchg
mov
pop
pop
mov
aad
ficomps
mov
dec
cmp
jecxz
cmp
sub
mov
into
jle
mov
push
cli
or
lret
jp
ficoms
inc
inc
xor
cmp
in
push
fisubrs
nop
adc
sahf
jle
sahf
sahf
jae
out
push
arpl
addr16
iret
loop
call
add
ljmp
sbb
push
xor
fmuls
test
xchg
testb
mov
js
adc
adc
adc
adc
sbb
addr16
fldl
and
xor
std
into
test
xchg
push
lea
lods
xor
pop
jae
ret
cli
mov
loop
mov
or
fsubrl
repz
adc
jnp
clc
into
hlt
sahf
loop
xor
in
sub
cmp
push
pop
mov
and
adc
or
adc
ljmp
es
dec
adc
cmp
insb
push
xchg
out
add
repz
fsubrp
jnp
pop
inc
stos
mov
fdivs
rcrl
leave
cmpsb
jo
dec
hlt
lret
dec
ficompl
sbb
mov
sbb
dec
push
aad
ficompl
js
push
imul
dec
push
pop
in
scas
push
fstpt
mov
mov
push
neg
pop
mov
dec
adc
fwait
insb
cmp
lock
sti
mov
jge
lods
jae
shrl
fadd
cli
dec
ljmp
das
xchg
loop
inc
pop
adc
ret
mov
ds
dec
lret
xor
repz
xor
cld
cmp
pextrw
sbb
pop
mov
aas
in
mov
cwtl
aad
repnz
push
clc
xchg
dec
push
xor
xchg
ret
ds
or
xchg
shll
adc
mov
xor
pop
ficoms
ror
lock
mov
repnz
div
jmp
and
pop
adc
push
pop
pop
popa
out
test
fdivl
lea
xchg
cmp
xchg
mov
and
imul
sbb
mov
inc
imul
mov
lea
sbb
scas
jl
nop
fdivr
int3
in
shl
and
fs
jbe
dec
in
lret
icebp
dec
push
sbb
pop
test
mov
into
dec
or
and
shll
pop
push
in
and
fstpt
or
push
and
pop
mov
sbb
inc
dec
ret
shlb
mov
stos
xchg
inc
clc
lret
inc
add
adc
iret
sahf
xchg
idivb
out
mov
push
call
lds
outsl
mov
dec
popa
mov
gs
repz
sub
pop
dec
mov
iret
push
ficoms
std
xor
pop
jo
sarb
insl
jo
pop
jecxz
ss
pop
mov
push
sahf
xorb
call
dec
push
lock
out
push
mov
add
inc
pop
fstp
sti
mov
sub
rclb
ret
out
cs
push
cmp
xlat
adc
push
in
jno
xchg
aam
ret
sti
cli
adc
jb
inc
mov
fistl
and
pop
scas
clc
push
sbb
mov
insl
dec
lahf
movsl
jecxz
xchg
sti
ret
jae
cmc
jns
mov
notb
add
and
push
call
mov
adc
xor
in
out
dec
aad
stos
cmp
or
stos
ret
lds
push
fs
fmulp
cmp
decb
lret
repz
repnz
mov
push
dec
cmc
decb
inc
pop
xchg
lret
test
call
dec
cld
mov
push
rclb
pop
test
test
xlat
push
or
sbb
adc
push
push
mov
push
rcrb
xchg
xchg
cmp
stc
mov
jbe
push
push
in
loope
mov
ss
and
mov
cmp
xchg
lret
mov
add
inc
xor
adc
mov
inc
movsl
mov
test
dec
sub
mov
bound
sub
xor
aad
and
lds
loope
mov
call
pushf
xor
stos
dec
mov
sub
adc
orb
adc
xchg
jno
stc
icebp
mov
std
dec
cmpb
ljmp
or
in
ljmp
push
and
push
test
nop
ss
push
pop
aam
inc
fildll
pusha
push
adc
popf
mov
stc
add
cmpsl
pop
loope
iret
sbb
sub
mov
mov
push
mov
sti
pop
mov
int
cmc
ds
dec
std
int
mov
push
in
mul
mov
bound
sbbl
xor
lret
mov
lret
ret
iret
sahf
sbb
xchg
sbb
lcall
mov
cmpsl
mov
mov
pop
mov
xor
xlat
push
dec
mov
test
inc
ja
daa
fadd
push
cwtl
aam
pop
aad
test
rorl
pop
pop
aam
repz
ds
mov
push
jp
xchg
inc
push
push
pop
push
push
out
js
out
rolb
mov
adc
pop
cmpsb
aad
fisubs
and
lds
push
xchg
call
aas
mov
ss
pop
inc
notb
xchg
popa
inc
stos
ror
push
icebp
sub
pop
cmp
sbb
xor
mov
sbb
fwait
scas
adc
mov
ret
out
push
push
stos
in
sahf
shl
scas
jle
leave
and
and
int
les
push
mov
lahf
test
xchg
mov
or
or
push
cmpsl
icebp
xor
test
leave
jns
jle
in
rcll
push
test
inc
repz
sub
js
movsl
or
mov
insl
push
mov
and
loop
xchg
rcll
loopne
arpl
mov
dec
daa
in
xchg
or
leave
and
cmpsl
or
jns
dec
cmpsb
inc
rcll
sub
xor
leave
in
mov
movsl
loop
cmp
divb
mov
popa
cli
fcoms
mov
jae
ljmp
roll
sub
mov
and
xchg
cmp
xchg
jo
and
lds
stc
sub
fcomi
pop
xor
sbb
rclb
mov
rorl
ds
mov
or
jns
xor
pop
push
inc
jmp
dec
out
mov
pop
out
or
cmc
cmp
or
sub
mov
mov
leave
mov
hlt
mov
adc
sbb
mov
lock
push
dec
inc
sti
adc
push
hlt
shlb
stos
adc
jne
cmp
sub
dec
xor
and
inc
mov
adc
pop
cmp
and
mov
sub
idivl
psllw
or
push
adc
and
push
cmp
popa
sahf
pop
mov
fcomps
jmp
mov
mov
pop
xchg
push
lds
inc
ja
int
icebp
sahf
xchg
xor
jbe
into
push
movsl
adc
es
xchg
iret
mov
push
dec
xchg
mov
pushf
inc
pop
leave
xchg
mov
dec
loopne
lods
pop
scas
mov
sahf
and
scas
jmp
icebp
hlt
mov
mov
dec
fcomip
push
cs
movsl
xchg
xor
push
or
pcmpgtb
mov
rorb
sbb
mov
loopne
enter
int
pop
jge
daa
adc
loop
ljmp
arpl
jg
mov
mov
push
icebp
mov
or
mov
cwtl
sbb
cmp
mov
mov
or
push
clc
aam
outsb
icebp
leave
add
int
and
gs
test
shr
mov
dec
mov
push
and
mov
sub
xor
xchg
ret
mov
mov
out
lods
addr16
dec
mov
movsl
cmpsl
les
cmp
xor
dec
and
or
dec
jne
push
cmp
mov
inc
cmp
and
aas
lea
loope
rcr
shl
sbb
shl
xchg
xor
lock
mov
fidivrs
or
mov
sub
sarl
cs
fidivs
mov
mov
push
xchg
dec
jmp
xor
into
push
in
and
ss
test
adc
xchg
int3
sbb
rcrl
sahf
push
test
mov
lahf
ja
lea
adc
mov
fs
imulb
mull
fldenv
mov
sahf
push
out
pop
int
add
push
test
cmp
add
xchg
pop
push
sahf
flds
loop
rorb
icebp
fwait
outsb
add
ss
mov
mov
push
aad
inc
and
ss
fldenv
lret
push
xchg
xchg
call
xchg
cli
mov
roll
frstor
xor
xchg
dec
push
repnz
adc
rolb
sbb
xchg
push
adc
sub
dec
push
xchg
push
fcomi
aam
adc
push
int3
mov
push
dec
xchg
out
mov
push
and
lret
mov
sbb
xchg
pop
or
adc
pop
or
add
jp
cmpsb
jmp
fcoms
and
jae
sarb
inc
adc
xchg
fdivl
push
fistl
sub
andl
dec
in
jmp
addr16
mov
test
xor
int
rcr
int3
sarb
stos
jb
mov
ds
loop
int3
pop
jmp
push
hlt
sub
push
sub
pop
mov
mov
jle
leave
shl
lret
out
push
and
push
mov
inc
push
sbb
popf
lods
mov
mov
int
mov
out
repnz
ret
stos
ds
cmp
rcrb
push
mov
scas
xchg
sbb
std
shrl
into
jb
adc
pop
pop
mov
ror
movsb
js
repnz
or
push
xor
push
stos
cwtl
loop
xor
fmuls
iret
cld
push
lret
sbb
push
lret
xchg
cmp
lret
cltd
es
mov
cmpsl
stc
daa
xorl
cmp
pop
mov
xor
inc
cmpsl
mov
aaa
add
cmp
dec
adc
int3
inc
cwtl
pop
movsl
push
xor
mov
dec
outsb
sbb
aad
sbbb
xchg
mov
mov
xlat
rolb
push
pop
sbb
sarb
xchg
dec
jb
loop
xor
push
fcomps
clc
jbe
scas
push
adc
ror
bnd
mov
mov
in
mov
shr
dec
and
bound
fisttpll
in
int
add
xchg
dec
lods
ds
fnstsw
inc
lret
mov
cmp
xor
adc
enter
sbb
inc
out
out
mov
push
xor
or
gs
in
shl
mov
or
sub
fnsave
jnp
cmp
pop
mov
lret
sbb
test
aad
cmpsb
xor
dec
dec
and
xchg
loop
dec
adc
daa
adc
adc
cmp
xchg
or
in
lret
fsts
xchg
and
xchg
in
fnstenv
add
xor
xor
enter
out
test
loope
test
push
mov
roll
ja
dec
adc
mov
xchg
mov
repz
repz
inc
lcall
xchg
sub
mov
shll
icebp
add
aad
call
loopne
lret
xchg
jg
adc
out
jns
mov
les
sbb
dec
push
in
ss
ljmp
aad
mov
mov
push
stos
in
aad
or
pop
add
jo
ljmp
pop
lds
dec
sbb
push
sti
fsubl
shll
lods
push
mov
mov
sub
aam
cltd
daa
ds
repz
push
push
mov
out
stos
add
leave
pop
mov
or
frstor
mov
pop
jmp
push
fs
sbb
mov
pop
push
mov
sbb
mov
data16
push
pop
mov
mov
into
push
outsb
fisttpll
leave
pop
dec
add
fstl
mov
xchg
mov
sbb
rclb
scas
sub
es
xchg
nop
cwtl
push
pop
ss
add
pop
xchg
push
std
add
flds
sub
adc
sub
add
js
sbbl
dec
repnz
add
rorl
jbe
lods
insb
scas
fnstcw
das
pop
mov
push
or
xchg
aam
push
push
and
push
mov
aam
int
test
cmp
cmp
fs
insb
addr16
cmp
cmp
push
sti
mov
sub
push
add
and
pushf
loope
inc
pushf
call
or
mov
inc
mov
stos
and
cmp
ret
testl
push
mov
or
and
mov
pop
loope
and
pop
test
and
mov
jmp
stos
and
mov
stos
and
pop
movsb
stos
add
push
cmp
test
sub
ret
sbb
and
add
sub
mov
pop
stos
add
pop
xchg
sbb
mov
adc
or
mov
xchg
jnp
andl
xchg
sbb
out
inc
push
pop
push
ds
insl
sub
and
dec
scas
lret
aam
in
in
call
shrb
out
push
adc
data16
shll
leave
gs
fcoms
and
xchg
jmp
fbstp
fcomps
push
push
and
add
mov
out
int
push
mov
sbb
push
cmp
adc
call
mov
out
adc
push
ss
inc
push
xchg
pop
cmpsb
dec
push
xchg
pusha
sub
adc
push
jmp
push
fists
ljmp
pop
cmp
ss
outsb
js
pushf
pop
test
mov
pop
push
aad
mov
xlat
and
push
lods
addr16
mov
repz
or
xchg
aad
mov
stos
lock
pop
fiadds
shll
xor
and
cs
xchg
push
push
or
in
ret
imul
xor
pop
xor
adc
or
scas
add
jle
jge
rcr
dec
fwait
and
arpl
xchg
js
xchg
sub
mov
loop
push
adc
in
mov
int3
leave
adc
inc
rorl
sub
cmp
push
lret
sbb
imul
icebp
out
js
jmp
rcrb
push
fdivs
loop
sti
sbb
lret
fcoml
adc
les
mov
or
push
add
outsb
aad
adc
ret
shr
push
mov
ret
shr
push
xchg
fcoml
xchg
mov
push
add
outsb
aad
push
xchg
call
mov
fsubrs
rcl
cmp
mov
jnp
sahf
jnp
pop
xchg
rclb
push
outsb
jg
mov
int
in
das
mov
lcall
andb
mov
out
stos
push
dec
and
mov
aad
or
mov
sbb
mov
mov
lretw
push
nop
fst
mov
pop
int
mov
dec
push
push
mov
pop
shll
adc
fstl
fcomps
mov
sbb
xchg
mov
or
mov
xchg
push
pop
popa
popf
and
loope
xchg
out
jb
in
mov
imul
insb
cmp
andb
fs
out
and
movb
into
jbe
shlb
pop
mov
jmp
push
mov
scas
rolb
jmp
loopne
jecxz
xchg
dec
push
or
dec
mov
rcl
cli
sub
cmp
lret
adc
js
mov
cltd
test
jle
andb
addl
sahf
dec
int
rcll
jbe
cmp
arpl
jbe
jbe
ss
xchg
lea
add
stos
add
adc
call
push
ljmp
xchg
fs
and
add
xlat
jne
out
aaa
int3
cmpsb
jg
fs
adc
push
ret
loope
into
addr16
ret
xorb
ja
lahf
ret
mov
mov
push
movsl
shlb
pop
outsl
push
xor
in
sahf
nop
bnd
and
cmp
sbb
das
test
pop
xor
xor
xchg
jg
and
sbb
xchg
rorb
mov
push
loope
repz
bound
push
mov
lds
scas
mov
jnp
push
lods
lods
push
push
mov
daa
mov
mov
adc
in
fdivrs
dec
push
mov
fdivr
push
roll
jnp
jle
aad
in
mov
call
xchg
ficoms
aad
aad
stos
inc
mov
in
es
aad
out
fcom
mov
inc
or
rcll
call
mov
pop
call
roll
dec
add
clc
in
adc
shlb
out
pop
xchg
out
push
add
adc
scas
subl
stos
fcoml
ss
fldenv
test
clc
pop
test
pop
pop
inc
pop
ret
pop
rcrl
pop
and
pop
pop
pop
mov
pop
dec
dec
out
mov
addl
popa
jle
jp
jp
jp
jp
jl
jp
jp
jp
mov
xchg
mov
xor
xor
mov
lret
push
pop
ss
dec
xor
or
dec
inc
mov
mov
mov
mov
ret
inc
je
repz
fidivs
xchg
xchg
xchg
xchg
xchg
xchg
jb
outsb
test
xchg
inc
jle
jp
cmp
jns
cmpsl
or
pop
pop
pop
jnp
xchg
pop
mov
adc
xor
xorl
jae
xchg
lds
popf
ret
insl
inc
jne
jge
test
lcall
or
cmp
cld
jns
push
aaa
sub
pop
add
add
push
add
or
imul
cmpsb
or
xor
stos
fiaddl
xchg
sub
cmpsl
mov
adc
repz
xor
xchg
pop
xchg
es
popf
icebp
movsl
ret
lahf
push
xor
sub
enter
jl
jmp
or
xlat
pop
mov
xor
jno
push
mov
loopne
fistpll
sub
out
or
dec
adc
dec
dec
mov
mov
sbb
bound
add
mov
push
jge
inc
jp
jp
jp
jp
pop
fmull
icebp
pop
fcoml
fsts
pop
jae
mov
dec
call
rcrl
pop
or
push
daa
mov
adc
rep
push
cld
int3
divl
jg
sbb
mov
bound
pop
ljmp
adc
repz
xor
jae
jae
subl
jp
mov
test
push
xchg
xchg
jae
jae
jae
jae
jae
jae
xchg
enter
add
into
jge
test
jge
jge
push
xchg
cmc
or
add
add
dec
add
sbb
punpckhbw
mov
das
call
scas
orb
fdivs
outsl
jl
mov
arpl
jge
jge
jge
xor
add
cwtl
lock
punpckldq
sub
xor
je
and
jp
inc
fstpl
iret
sub
dec
adc
mov
push
cli
push
cld
cld
and
dec
cld
mov
cld
adc
fisttps
mov
sti
test
push
popf
xchg
xchg
repz
aad
sub
leave
es
mov
adc
repz
push
js
push
mov
xchg
mov
jge
jge
jge
push
inc
scas
or
lcall
sub
sahf
mov
aaa
lret
ret
pop
dec
pop
mov
cmpsl
mov
loopne
inc
pop
daa
faddl
ret
pop
cs
std
pop
sti
dec
in
mov
adc
fists
push
movsl
sbb
pop
test
adc
mov
out
or
dec
or
ss
mov
insl
test
jge
jbe
or
sub
outsb
pop
push
dec
jo
mov
adc
cmc
shrb
or
dec
pop
mov
lret
or
fmull
lods
or
dec
fwait
mov
out
mov
mov
mov
ret
or
mov
addr16
or
dec
fs
lret
add
mov
mov
cmp
push
dec
repz
roll
in
inc
mov
adc
jno
cmp
les
sti
xor
or
dec
cmp
cmpsl
or
cmp
das
xchg
sbb
jae
jae
jae
jae
adc
or
lahf
jmp
pusha
fcompl
or
nop
and
cmp
pop
inc
int
data16
addr16
dec
sub
dec
xchg
addr16
aaa
and
push
xchg
setne
adc
stc
pop
add
cmp
xchg
insb
or
jge
add
xlat
into
pop
psubusw
adc
mov
or
push
push
mov
adc
xor
jno
adc
adc
or
lret
into
mov
xor
aam
scas
jbe
sbb
sbb
fdivs
aas
xor
jge
jge
lods
mov
and
inc
push
push
and
dec
mov
jmp
testb
or
lea
jp
cwtl
xchg
push
pop
fildll
dec
mov
cmp
cwtl
xchg
fstpl
sbb
stos
add
aad
adc
xchg
fucomp
mov
shr
decl
xchg
call
push
ss
jmp
mov
push
mov
push
push
xlat
imul
sti
aad
roll
rolb
pop
push
fcmovnbe
mov
cmpsb
je
push
popl
data16
scas
in
push
and
gs
xchg
addb
push
push
push
nop
negb
or
xchg
push
fidivl
and
ss
pop
mov
sar
xchg
div
shlb
or
icebp
lret
les
popa
and
mov
mov
fcmovnb
iret
pop
lret
lods
js
notl
pop
push
push
adc
xor
push
sbb
push
leave
dec
out
mov
adc
or
xchg
pop
mov
mov
out
jmp
pop
stos
adc
xchg
sbb
sbb
push
enter
iret
xchg
adc
sti
and
dec
add
cmp
mov
cmp
nop
mov
xchg
fstl
int3
push
sti
jmp
aam
mov
sub
cmpsb
mov
or
out
sar
dec
lret
mov
outsb
mov
and
movsl
cmc
repnz
mov
insb
jnp
out
insb
cld
fiaddl
shrl
stos
push
push
and
mov
jnp
rcll
xor
jmp
mov
xchg
int3
inc
xchg
pop
and
dec
mov
mov
mov
jne
ret
push
xor
pop
loop
push
push
mov
test
dec
xchg
push
ss
mov
inc
and
mov
mov
ficoml
ss
movsl
jno
xlat
pop
inc
cmc
out
push
arpl
in
sti
shl
out
pop
mov
xchg
jns
mov
into
cwtl
push
mov
push
out
jl
sarl
scas
inc
mov
or
dec
mov
cld
movsl
int3
push
idiv
fiadds
pop
outsb
out
sahf
shlb
and
sbb
fcoml
lods
out
iret
cmp
pop
jne
pusha
ds
sub
fidivrl
xchg
mov
out
jg
ss
iret
rorb
popa
xchg
fidivrl
scas
mov
out
dec
pop
ja
or
xchg
push
rcrb
cmc
cmpsl
aaa
dec
push
fimuls
xlat
dec
dec
push
aam
or
mov
and
into
jno
xlat
cwtl
int3
xchg
fldenv
into
sub
cld
out
mov
xchg
push
loop
ret
fcom
xchg
jge
mov
in
aad
fidivrl
jnp
mov
insb
mov
insl
lret
addr16
pop
inc
imul
outsl
lea
aaa
int3
lods
dec
push
into
jnp
xlat
jae
cmp
push
ds
lret
sahf
inc
xchg
data16
cmp
ljmp
cmpsb
pop
ficomps
xchg
sub
repz
or
or
push
cmp
adc
push
mov
xchg
into
nop
pop
out
push
roll
iret
push
aam
or
mov
out
div
sbb
loopne
adc
and
lret
pop
stc
sub
jge
movsb
jns
leave
xchg
cmp
es
dec
bound
addr16
mov
push
add
movsl
xor
enter
out
sbb
loop
adc
mov
mov
xchg
arpl
xchg
popf
dec
push
pop
fwait
pop
or
jg
pop
es
xchg
out
xor
test
push
cmp
ret
es
cmovle
xchg
or
inc
pop
sub
stc
xor
dec
xchg
sahf
aas
out
in
ds
dec
dec
mov
dec
mov
dec
data16
rolb
pusha
add
out
pop
push
out
call
push
push
xor
test
gs
add
pop
lret
xor
push
sub
bound
stos
push
jmp
dec
adc
rcll
imul
mov
pop
jbe
test
inc
pop
inc
out
push
or
mov
dec
lods
lds
dec
mov
fbstp
push
and
pop
push
sbb
or
mov
stc
int
jae
xchg
fadds
out
add
sbb
jmp
gs
enter
clc
test
cwtl
leave
adc
sahf
mov
dec
xchg
loop
sarb
push
or
jae
push
cld
out
inc
movsl
or
xor
js
push
cli
mov
ds
jae
outsb
and
push
push
je
sbb
mov
rcr
inc
sbb
cmp
inc
adc
xchg
hlt
add
aad
js
cmp
xor
into
or
and
mov
push
mov
into
xchg
sti
push
jbe
dec
mov
sub
int3
mov
lret
divps
dec
fnstcw
mov
fistpl
mov
xchg
inc
out
and
test
xchg
jno
scas
imul
test
mov
stc
cmp
loop
push
mov
push
xchg
or
sub
test
cs
loop
sbb
insb
add
cmp
loopne
push
call
ret
ficoml
adc
in
xchg
mov
imul
mov
mov
cld
out
push
xchg
jp
cwtl
jbe
xchg
pop
mov
jge
xchg
cli
sarb
shlb
mov
mov
push
xor
dec
into
push
adc
jne
add
jbe
test
outsb
shrb
cld
addr16
leave
mov
push
fbld
sbb
xchg
cld
into
dec
dec
dec
test
lret
daa
add
xchg
push
pop
andl
test
lret
ljmp
ret
sub
mov
hlt
sahf
dec
mov
fcmovbe
inc
mov
or
push
mov
negb
sub
out
pop
mov
lret
jmp
rorb
sbb
test
das
test
sti
and
lods
dec
mov
inc
push
xchg
mov
lret
scas
cwtl
dec
jnp
xchg
out
in
adc
and
mov
aam
fadd
ss
fcomps
inc
pop
and
stos
xchg
fmul
lret
shll
mov
pop
cmpsb
dec
lahf
decl
and
shll
xchg
jbe
push
data16
in
mov
xor
insb
fimull
pop
push
cmp
fdivs
dec
inc
test
push
ds
push
leave
retw
push
cmp
stos
push
jbe
dec
or
push
mov
push
xchg
adc
mov
push
mov
notb
ja
je
push
mov
xchg
jno
ljmp
inc
mov
pop
adc
dec
in
fistps
lods
addps
push
outsb
xchg
xchg
rorl
jl
call
push
fwait
jp
cmp
loope
mov
lock
push
mov
mov
push
fcmovnbe
mov
iret
pop
sahf
push
pop
adc
dec
jno
dec
iret
dec
mov
fsub
push
cmpps
loopne
shl
pop
into
sub
stos
fucom
jbe
sub
mov
rol
ret
pop
aaa
mov
sbb
repz
push
or
cmp
cli
add
mov
shlb
pop
lds
sub
bound
adcl
in
mov
sbb
and
repz
mov
loope
les
enter
into
dec
and
adc
in
aad
hlt
enter
in
push
lods
xor
mov
or
dec
sub
xchg
add
stos
aad
movsb
jo
xor
pop
mov
mov
xor
mov
push
or
jae
lods
fcom
add
dec
jle
das
adc
sub
lods
mov
or
sub
push
cli
mov
cli
xor
mov
sub
fcmovnb
lods
mov
xor
dec
pop
push
mov
mov
xchg
out
loope
call
das
pop
rcrb
lods
mov
mulb
scas
and
mov
into
xchg
aaa
sbb
out
pop
add
push
loope
mov
pop
dec
lea
in
mov
fnstenv
shrb
push
in
sbb
je
scas
jae
sub
out
out
push
push
push
fnstsw
push
pushf
in
lret
ds
jg
dec
mov
push
dec
mov
loope
outsb
push
sub
and
xchg
xor
or
scas
in
sub
pop
fimuls
xchg
sub
leavew
fucom
lods
mov
mov
gs
adc
fucom
lods
mov
adc
mov
mov
xor
lds
frstor
xor
xor
sub
xchg
adc
xor
int
test
roll
int
cwtl
adc
mov
push
stos
xor
dec
mov
mov
sarb
jle
sub
repnz
xchg
shlb
sub
nop
enter
ss
aad
fimuls
xchg
aaa
aad
adc
adc
and
sbb
xor
mov
lds
in
aad
arpl
sub
jae
scas
loopne
lock
jle
sub
pop
pop
and
inc
in
test
daa
cmp
into
adc
jns
mov
adc
lret
iret
and
xchg
insl
leave
sbb
jg
mov
mov
dec
xlat
lods
pop
or
or
xor
pop
jmp
xor
fnsave
fisttpl
aad
mov
pop
jae
cmp
xchg
test
mov
lret
pusha
inc
imul
test
jnp
cmp
xchg
mov
sub
popa
mov
xchg
push
xchg
inc
repz
aad
push
xor
aas
dec
nop
aad
mov
pop
jp
ret
inc
arpl
or
dec
out
jle
repnz
mov
inc
loope
xchg
jl
or
sub
pop
shrl
jp
push
and
gs
cmc
out
sarb
loope
insb
mov
push
out
lods
push
faddp
push
rolb
test
mulb
hlt
out
shl
rcl
jle
fwait
call
stos
mov
mov
call
aam
outsb
call
pop
mov
xor
xlat
popf
inc
mov
aad
sbb
loopne
leave
xorl
lret
mov
or
sbb
setge
test
jb
or
mov
push
leave
shlb
sbb
inc
cmp
xchg
jg
roll
mov
rcrl
ror
sub
aad
jne
adc
mov
sub
int
aad
clc
ret
add
lret
mov
xchg
jnp
dec
dec
gs
aam
dec
mov
imulb
or
mov
out
cmpl
sti
ds
imul
cs
xchg
gs
push
fsts
push
and
or
out
xchg
mov
mov
push
cmpsl
push
movsb
and
xor
xor
add
hlt
or
adc
mov
imul
mov
test
aam
mov
lahf
cli
adc
nop
out
xlat
xor
ficompl
out
push
mull
out
out
jmp
stc
mov
call
and
call
push
dec
js
push
popa
andl
aam
mov
sub
js
mov
mov
int
leave
push
jns
and
aas
push
fwait
push
push
test
inc
subl
jmp
adc
push
les
test
fwait
enter
imul
sbb
sub
in
arpl
push
adc
pop
scas
push
xchg
mov
push
scas
outsb
jle
mov
mov
mov
adc
ss
rcr
or
gs
jns
dec
mov
popf
xchg
out
or
xlat
ret
push
adc
loopne
push
pop
adc
adc
add
lock
mov
adc
iret
sbb
fsub
mov
jb
stc
add
enter
xchg
push
pop
aad
shl
outsl
cmc
fsubs
dec
dec
xchg
outsb
xlat
pop
jbe
sbb
mov
jmp
and
bound
int3
enter
mov
mov
mov
push
push
cmp
xchg
mov
fs
data16
std
dec
ljmp
pop
shll
call
xor
sub
xchg
or
add
gs
rcrl
adc
cmpsl
dec
enter
sub
sbb
mov
cwtl
and
xchg
jnp
arpl
inc
pop
push
mov
pop
and
xor
sub
cmp
aam
adc
mov
push
je
lea
and
ret
jno
dec
out
ret
scas
aad
add
cwtl
and
lods
popf
sub
xchg
pop
cmpsb
fnstcw
out
inc
and
mov
and
sub
test
add
aam
imul
repz
sub
cmp
das
into
aad
stos
jnp
and
jno
mov
pop
dec
push
push
pop
jb
push
xchg
jae
push
lret
mov
push
jg
or
test
xor
punpcklbw
xor
pop
pop
negb
sbb
add
sub
sbb
mov
or
dec
fs
ds
sbb
dec
repz
xchg
push
inc
xchg
loope
sub
icebp
dec
push
out
lret
ja
sbb
adc
and
jbe
sbb
lock
mov
ss
mov
popa
xor
push
lret
xchg
add
push
add
add
fdivs
stos
and
mov
lret
push
sbb
es
lods
sbb
mov
xchg
sbb
jnp
int3
dec
nop
orl
and
adc
lret
pusha
out
mov
inc
add
or
sub
sub
aas
rcr
cmpsb
dec
mov
mov
xchg
jl
fsubs
cmp
sbb
jp
and
bnd
imul
in
inc
mov
or
inc
sub
faddl
inc
cmp
mov
lods
mov
call
shrl
faddl
dec
fwait
mov
movsb
inc
cmc
and
sub
push
sbbb
mov
addr16
je
sarl
loop
fidivs
ret
or
push
jp
mov
cmpsb
fidivl
xchg
nop/reserved
test
pop
addl
xchg
in
dec
xchg
push
mov
lcall
xor
sbb
sti
jne
xchg
movsl
xlat
sbb
mov
shl
shll
enter
fldenv
les
mov
mov
and
mov
pop
push
movsl
into
out
nop
test
jb
mov
orb
call
daa
sar
ss
addr16
outsb
xchg
inc
ret
push
aas
pusha
cltd
mov
dec
dec
or
mov
sbb
jne
push
out
dec
out
outsl
jnp
out
cli
int3
inc
mov
cmpsl
cmp
adc
jns
pusha
xchg
xor
data16
pop
inc
jne
std
in
mov
cli
xchg
in
jp
jecxz
pop
insb
ja
scas
test
sbb
sub
insl
push
fwait
adc
rorl
adc
lock
mov
sbb
in
push
leave
leave
xchg
test
lcall
out
cmp
mov
jp
movsl
mov
xchg
rolb
push
mov
push
inc
leave
lahf
sbb
sbb
lods
push
inc
fadds
add
fwait
push
xchg
ds
iret
cmp
inc
ret
and
call
jmp
cwtl
iret
into
scas
stc
aaa
mov
pop
dec
repz
mov
push
mov
les
cmpsb
stos
arpl
jg
insl
sub
add
adc
into
sar
mov
out
popa
jbe
cmp
fiadds
sbb
lret
adc
adc
fnstsw
data16
pushf
aam
lds
sub
ret
test
or
add
adc
or
ss
sbb
mov
movsb
push
pop
popa
push
cmp
sub
loope
lret
stos
clc
leave
xchg
notb
in
scas
sbb
adc
xchg
movb
fistl
out
dec
inc
js
arpl
aaa
mov
jae
push
fsubrp
add
xor
jmp
and
jle
cld
out
mov
enter
xchg
into
push
jnp
jbe
fs
xchg
or
test
lods
adc
mov
xor
jmp
stos
loope
or
lret
or
xchg
cmc
dec
iret
xchg
xor
jp
push
std
out
jo
mov
push
pop
stos
ss
mov
cld
aaa
jbe
and
lret
xadd
ja
inc
mov
and
addr16
push
add
scas
xor
je
inc
push
ds
cmp
and
mov
es
cmpsb
inc
sub
into
add
or
mov
in
xchg
rclb
or
jge
xor
lea
lret
stc
adc
adc
xchg
dec
lods
inc
xlat
ss
push
into
dec
movsb
shll
and
sub
add
mov
fidivl
call
or
xor
stc
mov
cli
scas
push
aam
ret
pop
jno
mov
xorl
pop
ds
pusha
pop
cmc
rorb
xor
mov
fldt
js
aam
in
ja
popa
mov
xor
xor
addb
cltd
outsl
and
push
stos
imul
mov
test
add
and
and
pusha
inc
pop
fldenv
repz
cmp
dec
movsb
pop
jp
iret
sub
outsl
xchg
mov
mov
mov
ficomps
jne
and
stc
lcall
rcl
lock
mov
or
sbb
inc
dec
repz
jo
and
push
loope
in
sbb
leave
sbb
fdivrs
or
lahf
imul
ljmp
and
sub
iret
rcrl
cmpsl
pop
and
push
scas
mov
sahf
in
xor
or
dec
gs
push
or
push
jns
push
into
mov
shl
cltd
int3
push
je
js
fisttpll
cmpsb
add
pusha
cmp
mov
add
leave
push
sbb
cwtl
fsub
adc
cwtl
xor
inc
repz
sbb
jo
dec
out
repnz
fsub
push
in
inc
shll
pop
subb
xor
xlat
inc
in
call
lret
jb
pop
mov
dec
mov
jae
mov
xchg
sbb
in
jbe
dec
pop
outsb
add
scas
fs
push
mov
jl
out
jmp
nop
dec
test
mov
sbb
fcoms
insl
rorl
cld
pop
mov
mov
adc
lods
xor
les
jne
add
mov
mov
out
xor
outsb
xchg
scas
std
rolb
adc
push
push
lea
xchg
mov
cwtl
into
pop
sbb
add
fs
aad
clc
pop
xor
cmpsb
jecxz
jne
adc
or
mov
stos
xchg
sub
lret
inc
pop
testl
pop
imul
aam
into
shll
xchg
push
test
movsl
and
shll
jge
mov
loop
xor
sub
pop
lods
dec
xchg
inc
lock
pusha
sbb
xchg
mov
aaa
lods
push
push
lret
repnz
into
xor
movsb
stos
jbe
in
inc
jns
adc
xchg
lret
jb
dec
add
int
inc
sbb
test
cmc
and
push
cmp
into
lods
xlat
fidivl
rcll
jbe
ss
ljmp
pop
mov
pop
addr16
iret
or
sbb
push
adc
in
in
out
mov
popa
xlat
inc
pop
pop
mov
or
push
cmp
idivb
popf
push
push
jbe
lods
imul
push
ja
data16
shll
pop
cmp
arpl
xchg
test
jne
outsb
into
sub
mov
sti
sbb
xchg
and
xor
in
inc
test
pushf
gs
dec
and
decb
and
out
adc
push
push
rcl
leave
mov
pop
sbb
pop
mov
icebp
jne
jge
ss
sti
mov
mov
js
movb
push
mov
xlat
les
pushf
shrb
xchg
scas
jle
push
loopne
dec
es
mov
jge
and
mov
dec
jno
pop
data16
aas
neg
dec
lea
sbb
hlt
in
cmp
and
iret
xor
decb
mov
in
sub
cmp
mov
add
adc
xchg
out
fcomi
mov
movsl
fstp
fcom
cld
das
data16
int3
dec
jmp
push
push
std
jle
stos
mov
mov
xlat
fildll
lods
xor
dec
repnz
mov
clc
arpl
lock
mov
cli
test
mov
xor
sub
add
imul
lret
mov
add
jno
shl
add
stos
in
xchg
in
sbb
xor
xor
push
dec
jg
lret
xchg
cmc
or
adc
dec
sbb
mov
jb
test
clc
push
or
jno
inc
sub
xor
sub
ja
push
fcom
xchg
jmp
sbb
adc
mov
out
cmp
add
adcb
xlat
icebp
insb
mov
push
shrl
lret
lret
popa
pop
push
lock
adc
andnps
addr16
xlat
jl
mov
out
mov
cltd
mov
pop
je
add
ret
leave
xchg
push
add
fildl
and
shll
sbb
or
rcl
pusha
push
lods
cmp
mov
nop
dec
and
push
daa
aam
xorb
and
push
pop
sub
iret
lock
push
mov
in
dec
inc
cmp
into
decl
ficomps
loope
pop
fs
sub
dec
adcl
cmp
addr16
lcall
sub
push
jbe
adc
pop
arpl
mov
out
mov
push
fldt
inc
mov
xchg
xor
outsb
test
xchg
cmc
jmp
ja
flds
shrw
adc
xchg
push
xor
fwait
out
mov
out
dec
aas
cmpsb
dec
fst
jp
stos
add
mov
in
rolb
jp
pop
popa
mov
iret
dec
repz
pop
adc
pop
dec
imul
cmc
jno
daa
fwait
je
fcoml
leave
xchg
adcb
mov
inc
dec
ss
fistpll
xchg
test
hlt
cs
dec
lret
push
imul
xchg
and
or
mov
into
subl
shrl
fsubl
xor
mov
push
xchg
aaa
xchg
sbb
mov
popf
enter
arpl
or
mov
jg
ds
sub
ret
cmp
sbb
lods
addr16
xchg
enter
push
in
pushf
sub
push
dec
outsl
lods
insl
or
cmpsl
add
pop
aaa
ds
mov
movsl
sub
rcrb
sub
jb
mov
jp
add
jle
mov
es
jo
popf
lcall
test
push
js
mov
cwtl
mov
jb
mov
sbb
push
loopne
mov
mov
int
call
or
cmc
inc
nop
sbb
lds
test
outsl
popf
pusha
mov
jae
lcall
imul
repz
stos
mov
add
loopne
cli
subb
stc
lahf
inc
cltd
mov
inc
push
loop
add
sti
pop
sbb
mov
iret
push
push
mov
ljmp
cmp
movb
andl
sbb
rcll
sbb
sub
arpl
xchg
pop
xchg
out
fcoml
jne
dec
cmp
jae
int3
cmp
fistps
push
pop
add
cmp
jecxz
cmp
jne
and
jns
add
shr
fidivrl
fnstsw
aas
lahf
xchg
push
xchg
repnz
ret
shrl
sbb
and
jmp
jg
cli
xchg
xchg
mov
mov
mov
lahf
sbbl
xchg
pusha
inc
mov
insb
ret
fdivs
lret
scas
icebp
cmp
xchg
adc
leave
aas
mov
movsl
fs
lret
pop
lock
mov
xor
and
ljmp
jae
or
out
aas
jge
mov
mov
inc
and
cwtl
movsl
popa
cltd
ficoml
clc
addb
mov
ret
loopne
lods
repz
jmp
jo
sub
jnp
mov
mov
lea
lret
lods
jmp
sti
enter
dec
fcmovnb
or
dec
ss
lret
and
add
sbbl
sahf
and
xor
fcmovbe
es
mov
popa
cmp
out
add
xchg
test
ja
test
into
or
aas
xchg
aad
dec
jp
sub
cmp
xor
xchg
and
mov
in
or
cmp
push
test
fdivl
imul
popf
in
sbb
es
pusha
mov
stc
arpl
push
jbe
push
in
jae
mov
in
push
sti
jl
adc
inc
psubsw
dec
jge
xor
jmp
sub
les
ljmp
push
mov
aad
jno
orb
xchg
or
xchg
bound
sbb
cwtl
and
lahf
ret
out
insl
aaa
out
test
fst
cmp
lcall
dec
push
rcll
insb
push
sub
leave
mov
jns
out
mov
orl
test
cltd
rol
sbb
ret
xchg
stc
mov
mov
outsb
mov
loope
jnp
add
pop
in
add
push
xor
push
and
sub
pop
sbb
int3
in
jg
movsb
add
mov
pushf
int3
jns
dec
sbb
insl
movb
mov
dec
leave
test
mov
mov
inc
lods
cmpsb
fcomi
jbe
adc
cld
add
push
xchg
xchg
xchg
push
sub
movsb
ja
add
lds
mov
hlt
jb
aad
pop
insl
adc
repnz
mov
dec
mov
out
lcall
fildl
test
push
mov
into
cli
jns
ficomps
xchg
inc
sub
jg
dec
mov
out
in
inc
insl
lock
mov
mov
pop
fcmovnbe
pop
mov
nop
scas
lahf
xor
into
or
mov
out
popf
daa
and
ja
xchg
mov
cmpsb
hlt
push
mov
pusha
iret
clc
lods
movsl
or
repz
jae
adc
outsl
out
xor
xchg
enter
js
sub
test
mov
and
or
dec
icebp
std
inc
jmp
cltd
sub
push
rclb
inc
sub
nop
adc
enter
xchg
mov
iret
dec
sbb
pop
arpl
pushf
xchg
test
push
call
xor
mov
and
rcrl
add
ja
out
test
dec
push
insb
int3
imul
shlb
dec
sub
sub
pop
fdiv
insl
sti
xor
pop
insb
dec
jae
roll
mov
push
iret
push
or
mov
hlt
in
push
faddl
jo
lea
stc
sbb
in
mov
inc
jo
inc
mov
mul
mov
pusha
inc
adc
mov
jle
push
inc
jge
mov
mov
cmp
inc
out
push
scas
jno
cwtl
aad
insl
push
ret
cld
jae
stos
cmp
jbe
je
push
ud1
dec
lret
lds
pop
adc
rcrb
int
stos
mov
mov
xchg
adc
dec
out
xor
pop
movsl
mov
cmc
push
jno
sbb
sbb
pop
inc
dec
rcrl
imul
xchg
aas
insb
pop
add
notl
push
rol
inc
cltd
xchg
sub
and
cmpsl
sub
fldenv
lcall
inc
cmp
sub
nop
addr16
aaa
ljmp
and
xchg
pop
sbb
stos
and
popa
leave
negl
movsb
xchg
repnz
int3
and
and
lcall
ja
fwait
aas
push
into
mov
cli
pushf
pop
pop
adc
pop
es
lahf
loope
rcl
mov
in
jnp
les
loopne
and
and
push
movsb
fsub
popa
jne
adc
xchg
dec
aas
mov
jge
aaa
and
add
mov
cvtps2pi
std
fstp
ss
mov
cmp
push
mov
and
xchg
inc
cmp
mov
arpl
xchg
or
mov
addb
dec
or
inc
and
jns
in
xor
int3
add
fwait
sub
clc
into
mov
mov
rclb
cltd
lea
pop
pop
out
fcomps
sti
dec
dec
xchg
lret
sbb
dec
jge
mov
out
sub
pop
stos
adc
adc
into
xchg
mov
jmp
dec
pop
dec
jb
add
or
push
adc
dec
leave
ja
lds
ljmp
mov
shll
cmp
movsl
in
jecxz
push
or
es
scas
fcomps
into
cmp
pusha
arpl
inc
lret
or
push
inc
add
mov
lret
imul
data16
in
test
cwtl
push
loop
into
mov
ja
jbe
icebp
loopne
cmpl
test
fcomps
cmpsl
cld
mov
arpl
adcl
and
enter
inc
sbb
jno
pop
add
push
inc
sbbl
shl
ret
call
leave
xchg
push
pop
push
repnz
addr16
dec
jp
lret
das
out
sbb
xor
xor
mov
sub
je
mov
xchg
push
testl
loope
lods
popl
nop
sbb
rcl
cmp
loop
in
fbstp
es
jne
sbb
inc
movsl
dec
add
mov
xor
pushf
sbb
jnp
aaa
loop
subl
ja
sub
adc
test
inc
addr16
mov
and
dec
mov
sub
ret
jne
cli
sahf
add
xlat
xchg
incl
lods
mov
aaa
flds
mov
in
insl
push
sub
pop
jb
mov
xor
add
push
dec
out
repz
mov
sbb
stos
push
icebp
bound
mov
test
mov
push
inc
jne
sbb
dec
xchg
cmp
ret
cmp
in
xchg
inc
sahf
dec
xlat
mov
xor
aam
hlt
std
dec
add
stos
mov
xchg
or
aas
lea
not
xor
ljmp
aaa
fsubl
mov
mov
andb
nop
ret
roll
js
and
hlt
inc
mov
sub
cmc
iretw
int3
lods
cltd
dec
in
jnp
ljmp
dec
ficoml
inc
xchg
push
test
or
jbe
fidivrl
icebp
sbb
mov
repnz
cmp
dec
and
mov
scas
call
inc
sti
pop
and
imul
punpcklwd
jl
ret
jnp
loop
inc
iret
add
fbld
inc
lret
lcall
imul
push
clc
insl
mov
dec
iret
jns
jno
lods
shlb
iret
xchg
cmp
jge
lret
ja
jmp
in
icebp
xor
jle
aaa
test
mov
adcb
nop
loop
xor
outsb
scas
or
pusha
stc
add
xor
cmp
ja
mov
test
xchg
sub
mov
inc
loope
call
pusha
outsl
inc
mov
das
adc
mov
into
lahf
xor
inc
adc
test
addr16
jmp
insb
cwtl
repnz
notb
xor
inc
mov
mov
sub
arpl
stos
mov
ret
out
adc
fdivs
dec
mov
loopne
cmp
or
vminss
inc
aam
call
cltd
dec
xchg
sbb
sub
mov
daa
lret
inc
scas
mov
mov
jle
cmp
jmp
iret
mov
movsw
ljmp
scas
fisubrs
sub
mov
inc
xchg
test
sbb
mov
sub
aas
test
push
mov
popf
mov
iret
out
push
push
lret
pop
sub
fwait
or
adc
jg
xor
lea
xor
push
inc
cmp
xchg
inc
add
jmp
in
arpl
inc
lret
js
or
xchg
jg
clc
out
popf
daa
sarb
cmp
lds
movsb
repz
sub
decl
pop
das
sti
fcmovbe
push
sbb
clc
xor
and
push
push
inc
mov
inc
cli
stc
xchg
into
and
int
push
xor
or
jae
pop
xchg
lock
dec
push
jmp
push
gs
out
xchg
add
jbe
fstpt
cmp
daa
pop
cmpsl
pop
pop
jecxz
adc
cmp
leave
xchg
inc
cmp
and
cmp
adc
inc
inc
pusha
jp
bound
push
jge
gs
jbe
loope
sbbl
in
lds
outsb
xor
fldcw
mov
lock
dec
pushf
cmp
mov
xchg
sbbb
mull
lods
xchg
lods
aam
int3
repz
lret
je
repz
push
xchg
dec
sub
mov
scas
inc
pushf
mov
cmp
cli
mov
outsl
rcl
mov
mov
and
lock
ja
pop
mov
push
loop
loopne
mov
lock
jp
or
pop
out
pop
jne
and
sbb
shl
insl
js
mov
ret
ficoms
jg
jnp
push
inc
lahf
and
loop
and
inc
xchg
lds
lret
jb
pop
inc
movsl
mov
xor
fld
nop
int
push
out
xchg
xchg
outsb
lret
jb
dec
and
sbb
xchg
les
inc
in
je
mov
push
mov
repnz
pop
sbb
push
xor
es
or
imul
daa
mov
sub
jne
pop
cmpsl
jb
jmp
cmp
scas
je
ficomps
adc
sub
pop
jmp
test
imul
sahf
xor
mov
jne
repz
into
test
sarl
mov
sarb
mov
ss
xchg
out
push
push
test
inc
dec
push
mov
pop
mov
in
xor
fidivs
sub
mov
pop
lods
push
fnsave
fistps
jp
fdivrl
shlb
imul
lock
mov
cmpsb
jnp
adc
shlb
or
loop
sub
movsb
jo
inc
dec
insb
inc
outsb
data16
imul
sub
cmpsb
fcmovnb
jb
mov
enter
loope
inc
lret
or
out
cmp
mov
or
aam
push
sub
fcmovne
stc
mov
bound
and
mov
mov
jg
jae
xchg
adc
in
push
cld
outsb
ja
jge
popf
sbb
shlb
xchg
mov
outsb
mov
push
jecxz
stos
dec
xlat
addr16
sub
xchg
mov
adc
int3
icebp
fwait
ret
fs
and
jns
ficompl
insl
mov
push
xchg
out
mov
loope
lcall
mov
bound
sbbb
mov
popa
icebp
fcom
or
in
push
xchg
loop
and
lret
into
sarb
push
ss
test
lock
adc
lret
pop
loopne
adc
push
lock
push
repz
lret
adc
pop
push
aas
and
lods
call
int3
mov
jg
push
xchg
out
sub
push
andl
xchg
dec
dec
movsl
sbb
mov
push
mov
loopne
push
imul
push
sbb
xlat
rorb
adc
repnz
popf
jmp
movsl
adc
mov
xor
adc
iret
movq
popa
pushf
and
xchg
rol
mov
add
lret
jg
popa
imul
movsl
cmc
push
push
int
int3
or
jns
sub
ds
sub
arpl
xor
push
test
lret
in
or
call
packssdw
lods
test
std
or
dec
inc
lret
mov
popa
in
aas
mov
sbb
xchg
xchg
aaa
xchg
jbe
cmp
jo
sarl
and
test
inc
insb
out
inc
stos
ja
es
or
sti
adcl
push
push
shll
lret
add
adc
mov
hlt
repz
bound
adc
add
hlt
adc
sbb
jno
jge
out
jp
jmp
adc
rcr
sbb
cmp
or
es
mov
xor
inc
inc
jae
ss
push
pop
pop
adc
and
sahf
lods
sub
dec
leave
aaa
test
sbb
cmp
dec
xchg
push
mov
call
mov
mov
sbb
jb
ret
enter
les
push
out
iret
sbb
xor
das
cs
push
movsl
rcll
pop
mov
dec
popa
ret
and
push
mov
push
clc
xchg
cs
lret
sbb
stc
xor
mov
out
cli
or
movsl
fbstp
lret
mov
add
popa
xor
lret
cld
push
cwtl
je
pop
clc
repz
jae
in
fwait
and
pop
lret
mov
sar
loopne
loope
add
mov
dec
les
sub
jecxz
inc
xor
loope
inc
rol
add
adc
imul
insb
rol
jne
push
sbb
xchg
or
push
push
out
test
lods
aad
movb
in
add
iret
push
mov
cmp
scas
bound
cmpsl
xchg
lods
adc
mov
jb
xchg
fidivrs
pop
rcrb
fstps
aaa
jns
pop
bound
inc
add
xchg
cmc
lahf
ds
cmp
pop
das
and
je
inc
jmp
out
hlt
push
out
pop
and
or
lret
mov
add
ja
es
jns
adc
sbb
aaa
popa
xchg
mov
pushl
dec
scas
mov
pop
xchg
js
inc
in
pop
push
mov
std
fldl
jecxz
mov
cmp
test
adc
ja
add
insl
jns
ss
mov
hlt
cmpsl
mov
ficomps
push
fndisi(8087
add
repnz
pushf
add
jne
imul
nop
lds
xchg
enter
ja
les
and
data16
jge
ret
fdivrp
int
pop
xlat
mov
insb
je
inc
lea
push
ja
fsubrs
lods
leave
push
push
xchg
xor
enter
lahf
push
das
add
loopne
jmp
inc
shrl
cmc
mov
imul
lahf
jecxz
popf
push
ljmp
fiadds
jp
or
or
negl
out
cmc
sub
fiadds
ja
aad
xor
xchg
cltd
arpl
stos
testb
cmpsb
and
push
pushf
cli
rolb
mov
mov
lret
ljmp
sahf
out
fs
dec
pushf
adc
sub
jecxz
hlt
add
lret
insl
adc
test
shl
clc
incb
stos
jo
lcall
adc
push
push
xchg
enter
push
in
movsl
dec
out
js
les
jg
loop
jno
sbb
into
mov
dec
insl
mov
cmp
dec
jl
lds
shlb
jmp
fwait
mov
jo
mov
dec
and
xor
adc
push
mov
fwait
add
and
rorb
push
jg
adc
dec
loop
and
xor
stos
and
lcall
mov
dec
pop
cs
and
sub
aam
mov
mov
mov
push
movsb
nop
mov
fs
mov
leave
scas
inc
push
lods
movsl
inc
cmp
in
mov
inc
inc
test
sbb
mov
dec
sub
mov
mov
sti
pusha
adc
in
ficoml
popa
add
xchg
int3
xorl
mov
cmpsb
dec
jae
inc
movsb
in
mov
jnp
dec
jbe
mov
out
mov
pop
pop
jb
cmpsl
int3
sub
shll
fildl
pushf
jge
nop
into
mov
stos
mov
cld
push
sbb
push
mov
mov
jbe
lock
imul
mov
jg
sbb
jno
push
imul
cmp
aas
sub
fs
pop
mov
mov
bound
or
pop
xlat
and
test
mov
or
adc
popf
dec
adc
inc
xchg
incb
testl
pushl
push
mov
loopne
dec
or
das
movsl
ret
xchg
xor
pushf
sub
and
cmpsb
cwtl
dec
push
jo
rclb
dec
adc
xchg
call
shlb
xchg
es
cld
aad
cmp
mov
adc
ja
out
fsub
inc
mov
stos
sub
addr16
jmp
notb
mov
xor
add
es
sub
xchg
mov
ja
sbb
faddp
ss
fs
call
jae
data16
dec
jbe
test
or
rorl
and
fcoml
pop
sbb
pop
xchg
cmp
mov
adc
aad
jno
sbb
pop
jb
scas
gs
jns,pn
addr16
test
add
push
dec
in
ljmp
xor
dec
dec
call
adc
and
data16
xlat
mov
add
xchg
mov
test
xchg
and
dec
sbbb
pop
loop
xlat
outsb
mov
cmp
imul
xchg
out
lcall
push
out
pop
jae
jb
cmp
or
xchg
test
adc
daa
inc
pop
in
push
xchg
int
sbb
into
lods
cmp
out
and
sub
test
in
idivb
mov
xor
jl
cwtl
add
xchg
push
sbb
mov
jbe
data16
jmp
mov
jne
sbb
mov
mov
dec
ds
int
adc
ss
pop
mov
mov
xchg
and
cli
and
cltd
inc
cmpsb
shlb
jp
lock
adc
mov
mov
jmp
pop
push
mov
jne
test
dec
push
loopne
mov
push
std
call
fcom
add
inc
adc
data16
jbe
mov
pop
mov
jne
add
dec
inc
fwait
cs
add
xor
jecxz
xchg
call
test
popa
pop
loopne
out
loope
aam
mov
sbb
cwtl
fmuls
imul
sahf
add
cmpsl
test
cwtl
shlb
mov
inc
les
xor
hlt
sub
push
mov
mov
fmulp
push
shl
mov
insb
in
mov
pusha
in
xchg
ja
or
pushf
mov
sahf
out
fcom
cltd
sbb
cmp
sbbb
push
insb
xor
stos
in
stos
inc
sub
sub
in
inc
das
jnp
lret
cmp
es
push
into
iret
lcall
sbb
mov
or
mov
inc
int
insl
lret
add
mov
xchg
es
repz
fildl
jno
dec
mov
push
push
ret
arpl
call
pop
out
xchg
push
add
jo
stos
fistl
test
in
in
scas
push
and
int3
fmul
cmp
mov
stos
lret
push
xorl
jae
inc
jmp
repz
test
push
ljmp
cmp
stos
mov
push
sub
mov
push
in
push
sbb
les
lret
and
ds
into
fwait
inc
dec
mov
out
movsb
icebp
push
adc
jecxz
ret
dec
outsb
test
out
aam
popa
or
fisubrs
pop
jle
rcr
gs
jnp
rol
or
stos
test
mov
push
leave
jp
flds
pop
or
aam
mov
scas
imul
std
add
jne
daa
dec
icebp
repz
pop
rorl
cltd
clc
or
mov
cld
addl
pop
sahf
aam
std
xor
mov
insb
sub
and
push
pop
pop
sub
popf
test
mov
mov
and
add
dec
mov
sub
loopne
scas
mov
arpl
call
into
and
dec
adc
xchg
das
test
imul
push
push
pop
xor
jo
xchg
cmpsl
not
stos
cld
adc
jmp
mov
xchg
jae
fmulp
jo
aas
jg
dec
cltd
dec
dec
lret
or
fcmovnbe
rcrl
xor
xor
add
into
sbb
stc
push
test
aad
aaa
into
test
adc
push
inc
push
fsubp
jg
jp
ss
test
jb
dec
js
xor
add
xchg
xor
mov
icebp
pushf
push
aaa
lret
outsb
into
sahf
filds
stc
sub
in
jo
pop
aam
cmp
or
lea
ds
dec
movsl
loope
mov
add
js
sub
fucomp
add
outsb
es
pop
daa
int3
push
into
mov
jge
enter
push
cmpsl
leave
scas
lahf
sub
adc
test
fcomps
pushf
loope
addr16
jbe
cli
xchg
scas
jb
pop
adc
xor
mov
hlt
add
and
out
pop
int3
sub
aaa
cmpsb
and
jmp
and
adc
jbe
aad
rcrb
push
std
fistl
inc
cmpb
lods
dec
sub
mov
out
cmp
movsb
sub
xchg
jbe
in
roll
imul
imul
icebp
sarb
es
das
fwait
les
stos
leave
or
bswap
fdivrl
jecxz
fiaddl
loop
pushf
shll
adc
nop
adc
pop
into
cwtl
cmp
xchg
dec
aad
rcl
mov
jae
jp
cmp
xor
adc
aam
and
aas
mov
xchg
pop
add
imul
mov
jl
push
adc
jne
sub
lcallw
jmp
mov
jb
int3
jbe
imul
cmp
testb
xor
fmul
cli
cmc
xor
fwait
incl
push
hlt
jmp
or
pop
cmp
in
inc
dec
mov
jbe
mov
cwtl
lea
lahf
cmp
ret
test
roll
cs
sbb
dec
xchg
in
push
mov
dec
jb
jbe
add
jnp
call
and
movsb
xchg
hlt
cmp
xor
cmp
lcall
stos
aad
or
js
jmp
and
sbb
lea
xor
or
pusha
les
cmp
cld
mov
shll
dec
dec
xchg
pop
push
cmp
sbbb
insl
inc
xchg
out
into
mov
loop
mov
mov
je
mov
js
jno
sub
fsts
outsl
out
push
mov
stos
and
notb
test
sahf
sarl
sbbb
xchg
incb
subb
push
jbe
dec
iret
pusha
fdivs
add
sarb
jo
leave
dec
ret
pop
test
test
pop
or
adc
push
notb
insl
cmc
cmp
add
movsb
stos
fisttpll
movsl
jge
and
ret
adc
xchg
aaa
scas
incl
ljmp
cmpsl
xchg
push
cmp
push
sub
cmc
sbb
test
or
sub
cmp
ljmp
jmp
sub
sub
lods
scas
mov
mov
sbb
push
mov
ja
pop
insb
or
icebp
in
jp
fidivrs
hlt
stos
mov
rorl
pop
fdivrs
pop
xchg
mov
sub
xchg
imul
lods
push
inc
ljmp
mov
into
adc
dec
arpl
stos
add
mov
push
mov
mul
imul
or
add
mov
fisttpl
inc
in
cmp
inc
out
imul
sarb
incl
iret
jbe
and
nop
inc
xor
pop
dec
jp
inc
aam
outsl
xor
mov
repz
xchg
xor
pop
lret
pop
jne
rcrl
int3
and
pop
mov
and
jbe
jns
ja
int
cs
sub
add
jl
sub
xchg
mov
add
mov
mov
cmp
pop
nop
scas
movsl
push
and
xchg
outsl
mov
lods
or
adc
push
pop
adc
jmp
xor
movsb
xchg
push
fisubrs
repnz
jl
xor
push
push
rcr
or
add
iret
lock
shlb
gs
fmuls
cmp
fst
sbb
jl
mov
pop
jae
jo
mov
movsl
out
dec
dec
inc
lds
out
shl
dec
mov
mov
out
and
decl
push
cld
xchg
fstpt
push
push
or
gs
push
fisubrs
sub
pusha
mul
inc
iret
inc
push
test
and
outsb
call
sar
mov
dec
jecxz
out
inc
xor
aas
sbb
dec
out
bound
add
dec
movsl
mov
iret
pop
add
imul
leave
rcl
ficomps
sub
xchg
or
ljmp
dec
xor
jmp
aad
mov
mov
cmp
jbe
orl
adc
cmp
xor
mov
add
lret
ja
out
and
enter
lcall
clc
pop
stc
cmp
roll
mov
scas
or
jbe
jno
xchg
lret
jne
push
lock
fnstcw
fdivrl
aam
imulb
gs
mov
cli
fimuls
pop
fwait
dec
outsl
sbb
enter
mov
jne
xchg
sti
sub
lret
push
iret
cmpsb
mov
jmp
adc
mov
adc
lcall
ja
outsb
cmc
sub
scas
arpl
in
out
fs
mov
aaa
or
jo
sub
pop
idivl
push
in
sbbl
pop
mov
mov
mov
pop
test
out
xor
popf
lret
or
stos
jecxz
jne
and
and
mov
mov
scas
clc
dec
popf
adc
push
sbb
jecxz
pop
jmp
pop
add
in
std
mov
dec
cmc
out
cmpsl
scas
test
mov
ss
subl
xor
mov
xor
jmp
fiadds
aaa
mov
out
sarb
dec
sub
fidivrl
rcl
ss
imul
cmpl
mov
scas
mov
jns
sub
xchg
mov
sbb
insb
adc
inc
mov
dec
xchg
dec
outsb
mov
xchg
test
adc
fs
in
xchg
push
dec
popf
lret
jo
sub
iret
imul
in
pop
dec
xchg
fsubl
fs
popa
adc
mov
lods
loopne
adc
push
imul
jbe
xchg
arpl
fwait
bound
test
add
shlb
sbb
out
in
xor
dec
test
dec
add
jg
bound
insb
xchg
inc
stos
inc
pop
les
and
jp
xor
cld
out
mov
cmc
cltd
push
xlat
sahf
cmpsb
sbbl
test
mov
pop
mov
popf
mov
loopne
inc
aas
jle
rorb
dec
scas
imul
mov
iret
dec
inc
addr16
cmpsl
sub
loope
lret
push
push
das
push
rorl
inc
push
mov
cltd
push
push
cmpsb
add
jp
xchg
ja
test
daa
out
dec
jne
in
sbb
lret
cmp
add
push
xor
add
jo
movsl
cltd
ds
inc
sahf
out
inc
mov
and
aam
xchg
and
or
sub
mov
jmp
out
add
or
adc
add
xchg
popf
in
stos
mov
fsubl
dec
sub
or
mov
scas
push
leave
lcall
pop
mov
jmp
sub
insb
fisttpl
xchg
out
jecxz
fsubr
xchg
pusha
cmp
mov
cmc
pop
cmpsb
addr16
in
movsb
cmp
pop
push
dec
rcrl
sub
sbb
jne
mov
push
pop
data16
add
and
mov
es
idiv
cmp
xchg
xlat
in
adc
jmp
sbb
insb
repnz
int3
mov
aam
lret
ret
mul
push
and
hlt
dec
loop
xchg
sbb
mov
xor
fidivrs
ret
add
push
pop
jmp
fldt
xor
or
push
jae
jbe
mov
daa
lret
sub
mov
pop
inc
mov
test
roll
mov
out
xor
repz
or
movsl
scas
or
int
inc
cmc
jmp
cwtl
popf
pop
js
xlat
fcmovbe
inc
call
push
sub
and
enter
out
add
mov
mov
mov
inc
dec
lock
das
adc
addr16
xchg
outsb
xor
rcl
jecxz
scas
cmc
mov
test
sub
jo
dec
and
sbb
fwait
lea
sub
add
imul
adc
loopne
test
mov
push
loop
inc
aaa
int3
imul
pop
test
movsb
lret
mov
mov
movsl
loope
xchg
in
imul
push
roll
adc
gs
pop
hlt
lds
call
mov
js
sahf
rcr
out
and
jns
in
fsubs
flds
cmc
mov
mov
sub
pusha
xchg
or
daa
outsb
addr16
test
lods
aaa
mul
lds
daa
nop
pop
xlat
jns
jbe
push
in
ror
cmp
or
and
push
js
test
in
clc
test
iret
mov
test
adc
xor
sub
xor
notb
in
lock
cmp
mov
nop
pushaw
dec
push
inc
xchg
jbe
xchg
call
pop
imul
scas
add
sarb
ja
lods
imulb
mov
mov
mov
lcall
leave
push
arpl
dec
push
jge
ss
ja
cs
sbb
jle
shlb
xor
cld
or
mov
fnsetpm(287
ficoml
arpl
jbe
int3
stc
lock
cmc
fsubrl
adc
into
clc
push
movsb
xor
bswap
aaa
int3
fldenv
in
push
out
and
ljmp
jle
jbe
pop
lret
and
cmp
add
cmc
xchg
dec
js
mov
mov
mov
jle
ret
push
mov
mov
test
lret
rorb
dec
jo
jbe
push
ret
cmpsb
dec
push
adcb
sbb
and
push
js
mov
xchg
fisttpl
arpl
xchg
icebp
adc
cmp
pop
and
movsb
ror
movsl
ffreep
es
push
ficoml
orb
dec
cmp
or
push
jmp
in
inc
mov
sarl
or
push
inc
aam
ja
adc
ss
in
into
fcmovnb
mov
push
mov
aam
xor
int3
lret
mov
rcl
xchg
add
js
aam
mov
push
jbe
xor
test
je
mov
inc
mov
mov
cmpsl
int
das
push
push
dec
jecxz
inc
loop
mov
shll
and
dec
and
sub
add
addr16
loope,pt
mov
xlat
dec
jne
and
rep
add
xor
jmp
fs
jmp
add
outsl
gs
add
xor
lds
push
push
xor
mov
lods
repnz
xchg
push
ja
sub
add
out
pop
xor
rcl
xchg
cwtl
fildl
cs
jnp
fcom
testl
imul
mov
xchg
test
pop
rorb
lahf
mov
or
aaa
cmc
loope
fst
cmc
jl
pop
sub
push
mov
lret
pop
xchg
inc
xchg
xchg
cmpsl
sbb
ret
rcl
sub
add
cld
mov
cmpsl
mov
push
mov
cmpsl
sub
pop
adc
xchg
rcrb
jns
roll
dec
mov
int3
add
cmpsb
jge
std
push
mov
cmpsl
mov
and
movsl
rol
sub
lods
loope
dec
fbld
push
xchg
fwait
mov
lahf
leave
or
orb
xlat
lock
test
push
sbb
push
adc
inc
jnp
in
or
mov
sarb
clc
xchg
in
repnz
jo
clc
int
aaa
xor
jnp
popa
rcrb
pop
std
inc
jmp
dec
movsb
add
dec
cmp
out
fiadds
gs
not
imul
sub
scas
inc
jecxz
out
sub
popf
jbe
orl
jg
jge
imul
jno
shlb
fisubl
rcl
pop
mov
or
mov
push
mov
cltd
in
inc
stos
mov
outsb
arpl
xchg
clc
push
mov
fstl
cmp
movsl
jno
rcr
jns
rorb
fisubrs
test
sub
push
insb
fs
leave
mov
call
dec
mov
push
imul
outsb
fimull
outsl
and
lret
dec
add
je
loopne
adc
les
repnz
mov
cmp
push
xor
mov
aaa
adc
lods
dec
and
push
out
popl
sbb
lret
pop
es
divb
xlat
adc
lds
int
xchg
scas
out
aam
mov
and
pop
sti
xchg
ss
push
cmc
or
aam
sbb
add
jne
mov
js
test
mov
inc
sub
lock
popw
adc
push
rcl
adc
pop
xchg
not
aam
rcr
cmp
int
subl
cmp
add
movl
movsl
adc
push
into
into
jle
xchg
pop
dec
aad
dec
sti
xlat
mov
dec
and
int
mov
xor
das
cli
rorb
gs
stc
and
sahf
ja
out
jmp
xchg
push
or
lret
mov
rorl
iret
add
out
iret
xchg
mov
or
imul
ds
lods
hlt
ror
and
adc
dec
push
int3
addr16
iret
js
lcall
adc
imul
je
mov
xchg
pop
sbb
xor
mov
js
arpl
mov
push
jne
cs
jae
cmc
pushf
xchg
mov
fmul
sbbl
adc
rcrb
cmc
jo
sarl
mov
pop
out
repnz
icebp
in
dec
out
and
pop
cltd
adc
mov
xchg
filds
xlat
push
das
jns
jecxz
ljmp
cmp
mov
push
fildl
cmp
rcll
shlb
mov
mov
cmpsl
andl
into
loopne
inc
pushf
or
das
data16
sub
movsl
pusha
into
and
jmp
lret
fcmovnu
cltd
stos
xlat
nop
push
rcl
outsb
iret
les
pop
pusha
add
sub
pop
call
pushf
xchg
mov
xor
xor
test
mov
mov
in
lock
aaa
sub
mov
rcrb
nop
jp
xor
pop
stc
mov
jle
sub
sqrtps
push
divb
jns
xlat
arpl
add
jge
and
jae
in
dec
sub
mov
xor
imulb
cltd
mov
ja
lds
fdivr
pop
in
or
xchg
outsb
jne
cmp
lds
xchg
push
mov
lods
negl
cmp
out
mov
fwait
xor
sub
sti
or
out
and
lret
rcrb
ret
rcl
mov
push
push
add
fldl
rorl
sbb
scas
sahf
scas
push
xchg
imul
mov
rcll
cmpsl
mov
sar
dec
sbb
and
lds
lret
pop
add
sub
sbb
jle
dec
int3
and
hlt
test
or
xor
lea
mov
add
jns
mov
cmpsl
cld
jle
mov
fdiv
lfs
pop
lods
dec
push
jno
out
mov
addr16
into
cmc
fsts
or
shlb
scas
mov
sub
lret
cmp
icebp
inc
xchg
mov
jmp
push
jnp
adc
jle
cmp
inc
jo
repz
lods
jne
in
arpl
sbb
and
std
pop
jbe
dec
mov
or
test
cli
out
sub
popa
int3
rorl
xor
dec
mov
mov
jp
sub
push
mov
dec
xsha256
cmpsb
xchg
mov
push
xchg
add
or
lods
stc
cmp
imul
jb
ret
push
or
nop
icebp
repz
sbb
sarl
movq
data16
shll
dec
loopne
mov
jbe
adc
repz
mov
cmp
mov
pushf
sahf
pop
push
lret
rcll
jnp
ljmp
adc
aam
cld
ret
add
leave
jb,pn
sub
pop
cmpsl
push
call
ficoml
jmp
repz
cmp
mov
mov
mov
add
stc
in
testl
aad
xchg
bound
sbb
popf
or
mov
mov
push
xchg
rol
fmull
mov
jge
mov
mov
inc
sar
jno
orb
adc
shlb
das
push
sbb
and
cmpsb
dec
mov
in
push
dec
jg
imul
adc
ficomps
or
test
int3
inc
sahf
xchg
lret
arpl
sub
out
xchg
out
dec
fnsave
sub
and
ds
cs
jbe
imul
xor
cmp
arpl
mov
xchg
test
scas
hlt
cmp
into
shrb
mov
test
je
test
repnz
pop
push
mov
dec
out
inc
addb
jge
add
mov
sahf
subb
cmc
ret
dec
inc
gs
movsb
sub
inc
leave
pop
sbb
sbb
adc
idiv
out
ret
dec
iret
dec
repnz
mov
insb
test
add
push
stc
repnz
push
iret
push
pushf
jg
fdivl
jmp
nop
je
mov
add
mov
call
ja
stos
daa
test
sbb
test
jg
shrl
pop
out
lods
cmp
ds
in
cs
dec
lcall
pop
sbb
xchg
jge
push
mov
aad
imul
mov
out
jbe
xor
sub
dec
jbe
fimuls
or
xchg
aas
sub
shl
shll
xchg
push
lock
in
cmpsb
push
mov
fcomps
jnp
inc
and
mov
push
jge
xchg
lret
call
sbb
cmp
mov
or
jb
repz
nop
jbe
pusha
test
fstpt
push
sub
push
js
pop
push
sub
movsl
das
icebp
ret
je
movb
leave
aas
dec
and
and
push
adc
sbb
js
dec
mov
and
lcall
or
dec
pusha
mov
jns
pop
negb
lret
mov
and
jg
push
mov
add
mov
dec
paddq
shrb
iret
out
ret
ss
lcall
pop
push
cmp
test
or
push
insb
or
lcall
fistpll
fsubl
fstpl
das
inc
xor
inc
xchg
mov
push
lahf
inc
jmp
pop
ret
enter
int3
fcmovne
nop
dec
inc
pop
loop
inc
aaa
sarl
out
sbb
jge
or
jmp
fsincos
add
push
fiaddl
shlb
jmp
cmp
scas
push
into
int
sti
pop
shl
cmp
test
mov
inc
daa
cmp
and
sub
mov
mov
test
or
testl
xchg
adc
cmpsl
dec
mov
ljmp
or
mov
mov
and
test
push
stos
lret
mov
aaa
xchg
sub
fimuls
pop
cwtl
fcmovbe
inc
sahf
movsl
lods
and
lret
mov
lods
out
xor
pusha
test
jnp
dec
fmull
lds
addb
mov
push
and
sbb
or
cwtl
call
add
inc
jl
ss
inc
js
pop
jmp
decb
jne
pusha
xchg
imul
xchg
loope
dec
stos
sub
jb
insb
pop
int3
test
push
pop
daa
and
xchg
outsl
dec
push
cli
push
sbb
jmp
mov
xchg
daa
xchg
shrl
repz
pushf
stos
xor
xor
jnp
leave
jne
adc
lret
inc
enter
mov
cmp
js
insl
mov
mov
inc
subl
orb
rorl
jmp
mov
fdivl
lock
inc
jbe
jnp
inc
dec
test
xlat
rorb
push
in
mov
ja
ret
lret
xor
add
sub
pop
mov
xchg
lret
pop
add
jo
adc
and
loopne
sub
mov
loop
sub
add
sti
out
mov
sbbl
inc
xchg
push
mov
mov
fwait
inc
jno
jns
out
lock
dec
mov
xchg
xchg
and
inc
xor
adc
mov
in
or
cmpsb
lods
cli
sarl
jle
push
rcll
adc
mov
dec
inc
sbb
insl
jp
in
pextrw
stos
aam
jecxz
or
lret
push
push
and
out
push
int
pusha
jne
rorb
add
lret
imul
inc
push
mov
into
cmp
stc
dec
and
imul
mov
out
ret
icebp
cmpb
push
mov
lret
cs
pop
mov
add
push
mov
inc
mov
scas
aam
out
xchg
dec
int3
dec
out
sub
inc
cmp
cmpsb
mov
or
fsubrs
or
sbb
cli
loopne
and
mov
shl
insb
mov
inc
jbe
push
or
mov
aad
in
sbb
into
repz
jbe
loopne
push
fistps
jns
adc
jbe
inc
js
ds
dec
add
fmull
inc
xchg
jge
mov
cmc
addb
ja
pop
or
lret
lcall
mov
dec
mov
insl
jne
jnp
jle
stos
push
ret
orb
pop
pop
cmp
sub
repnz
hlt
shl
out
cmpb
push
adc
push
leave
std
lods
sub
test
sbb
mov
mov
jnp
out
movsl
divl
clc
pop
iretw
mov
xor
xor
arpl
ja
mov
or
sub
xchg
aas
pop
movb
int3
sbb
sub
loope
sahf
pop
fcmovbe
sbb
lods
mov
fsubs
clc
imul
xchg
fisubs
pop
clc
adc
cmp
dec
xchg
pop
int3
adc
hlt
stos
mov
mov
lret
int
rcll
enter
mov
sbb
insb
ds
loope
cmp
inc
in
jae
pop
test
and
and
mov
mov
pop
lea
pop
push
cwtl
mov
loopne
mov
jno
test
out
adc
ret
push
sbb
rclb
xchg
sbb
stc
jecxz
jbe
sbb
rolb
cmpsl
mov
popa
xor
dec
pop
dec
rcl
cmp
aad
xchg
mov
arpl
test
adc
sti
sahf
scas
lahf
jecxz
outsb
mov
jmp
xchg
mov
movsb
popf
push
xchg
fcoms
jns
inc
loopne
sbb
ret
lret
testl
push
push
invd
lret
inc
inc
mov
jmp
push
repz
leave
pop
mov
and
fs
arpl
stos
or
fwait
gs
dec
push
xchg
pop
mov
dec
sahf
cmp
pop
in
mov
lock
mov
rorb
push
leave
inc
and
mov
in
inc
pop
xchg
xor
aaa
xchg
negb
insl
loop
adc
fcoms
push
adc
cmc
int3
mov
jle
imulb
je
inc
xchg
sar
sub
repz
fcoml
jbe
filds
aad
subb
outsl
and
pop
mov
loop
into
scas
ficomps
rorb
xor
add
insb
and
mov
pop
adc
les
addr16
popa
fisubs
adc
pop
negb
push
jge
xor
mov
jnp
jne
stos
mov
push
dec
pop
loopne
and
xor
pop
adc
das
dec
sbb
and
jbe
hlt
add
mov
cmpsb
mov
scas
jnp
cs
sahf
icebp
repnz
das
lea
inc
int3
jg
fs
sbb
mov
test
fdivl
imul
xchg
lea
mov
push
xchg
lahf
shl
fldenv
mov
stos
dec
cwtl
or
push
mov
pushf
mov
scas
adc
stos
lds
or
xchg
clc
cs
lods
ja
test
mov
jne
jns
into
jg
loop
test
into
in
sub
sbbb
add
xchg
cwtl
xchg
fsub
mov
dec
addr16
bound
insb
pop
test
xchg
loop
pop
push
sahf
add
jne
or
push
sub
add
push
into
and
enter
sub
cmpsl
dec
mov
je
inc
or
mov
movsl
faddp
sahf
jno
mov
mov
lret
stos
adc
call
mov
push
lret
push
add
test
rcll
sub
ret
jmp
mov
dec
xor
xchg
xor
sbbb
imul
xor
add
jmp
ja
mov
jnp
inc
outsb
jno
loopne
and
sub
in
xor
bound
xor
inc
jb
loope
insb
mov
fisubl
iret
sti
out
lret
sub
sbb
xor
sub
xchg
outsl
cmp
out
scas
pop
sti
js
dec
dec
sub
xorl
mov
push
movl
mov
jle
xlat
imul
mov
out
xchg
into
bswap
jge
lcall
push
into
test
lea
jno
out
sub
pop
imul
addr16
mov
sub
xchg
inc
dec
es
add
or
popf
mov
insb
dec
out
aas
pop
fsubrs
or
imul
outsl
jl
adc
pusha
in
mov
or
dec
inc
sbb
cmp
ret
sbb
cmp
mov
mov
push
stos
insl
and
pop
xchg
jge
rcr
sub
dec
cmp
inc
sbb
pop
popa
dec
imul
push
jbe
sub
movsl
call
xor
scas
icebp
int3
imulb
sahf
cli
dec
xlat
push
jg
xchg
sbb
mov
stos
lret
jno
dec
outsl
jns
les
or
mov
subb
jmp
dec
out
fwait
push
mov
mov
xorl
scas
push
dec
dec
call
cmpsl
cmp
fwait
or
jo
lds
inc
cmc
imul
sahf
out
test
mov
pop
sbb
pop
jno
xchg
notl
jg
ret
jne
mov
in
rcl
push
jge
sbb
cs
nop
sub
sub
mov
xor
mov
shrl
cmpsl
stos
cmp
shll
outsl
cmp
lock
sbb
inc
mov
mov
jb
mov
out
mov
push
mov
mov
or
jbe
cmp
xor
js
aam
iret
aaa
pop
cmpsl
sub
loope
mov
sbb
sbb
fimull
scas
and
adc
addr16
add
mov
jno
mov
cmp
and
aas
sub
jmp
lahf
mov
sarb
sahf
bnd
mov
pop
scas
out
mov
cmp
xor
xchg
sbb
cmpsl
leave
hlt
and
nop
aaa
ja
sub
aaa
xor
jecxz
out
lea
aaa
in
notb
dec
mov
inc
out
je
and
push
jl
dec
jge
leave
adc
call
cmp
push
adc
sbbl
add
mov
pop
pushl
cmp
lret
test
pop
stc
fstpl
sub
xor
jns
jp
sbb
xor
mov
jecxz
test
mov
dec
inc
cmpsl
jge
int3
adc
cld
mov
jno
push
xchg
pop
ret
shrb
les
mov
push
fmulp
dec
lods
out
mov
mov
mov
dec
push
loope
sbb
push
sub
adc
mov
xchg
xchg
jmp
push
aaa
gs
ds
sbb
orb
shlb
xchg
inc
rolb
mov
and
jle
mov
in
out
pushf
cmpsb
dec
mov
mov
and
rol
ja
push
inc
push
into
sbb
mov
orb
cltd
ret
cmp
push
add
movsl
fsubp
xchg
les
sub
jne
pop
cmp
add
jne
daa
jno
and
cmp
aam
lea
cmc
add
aaa
cmp
push
test
test
dec
stos
pop
pop
cmp
add
lock
dec
pusha
xchg
push
aas
jmp
xor
popf
fdivs
lods
cmp
test
bound
movsb
filds
cli
push
adc
push
mov
aam
sbb
adc
xchg
adc
jecxz
dec
fnsave
fcmovu
sub
inc
andl
pusha
mov
xor
mov
cld
in
outsl
out
push
jae
lock
add
pop
test
or
inc
je
sub
push
mov
sbb
xor
outsb
push
adc
out
dec
repz
fldl
rcrb
loope
mov
mov
imulb
fcompl
xor
inc
or
mov
push
mov
dec
jbe
mov
sbb
pop
and
dec
sub
xchg
es
or
icebp
xchg
push
movsl
xchg
push
sub
roll
test
daa
cwtl
inc
sbb
lods
adc
lret
pop
orl
orb
mov
sbb
sub
or
les
rcl
pusha
add
shll
push
das
mov
sub
xchg
lret
mov
push
or
mov
test
sub
jnp
and
hlt
mov
push
or
lret
gs
inc
push
xchg
sub
shll
shr
ficoms
sbb
loope
out
cmpsb
push
mov
push
into
movsl
jecxz
stos
jl
lahf
loopne
inc
push
fiaddl
or
clc
int3
dec
das
push
push
cmp
cmp
xchg
xor
or
cli
cmpl
jb
addr16
call
shll
add
mov
data16
sbb
mov
repz
je
lea
iret
cmp
cmc
push
pop
push
iret
sahf
hlt
imul
in
and
dec
lret
sub
das
cmp
xchg
sub
mov
push
scas
rorb
lret
push
adc
and
in
push
addl
mov
xchg
mov
cmpsb
cwtl
pop
xor
inc
inc
xchg
stos
cmp
lock
fstl
pop
andb
xlat
bnd
iret
ror
or
add
shrb
notb
repnz
jmp
and
out
add
lcall
in
add
stc
or
rolb
xchg
inc
sbb
cwtl
nop
push
mov
int3
mov
sub
jns
pop
cwtl
shll
xchg
loopne
insb
stos
cmp
imul
clc
mov
push
sub
loope
dec
push
jo
jp
mov
cmp
pop
lea
cmp
xchg
jne
cmpsb
lret
xchg
call
xchg
aad
iret
adc
adc
dec
and
fsubrs
add
je
int
outsb
call
xchg
xor
js
sub
scas
imul
push
xchg
ss
test
mov
es
pop
adc
fwait
pop
inc
fstpl
insl
add
adc
push
fsubs
mov
xchg
adc
lods
int3
mov
inc
mov
in
and
mov
pop
movsb
jno
dec
dec
testl
jne
push
lcall
xchg
into
out
jb
ljmp
xchg
fwait
gs
or
pop
lods
enter
adc
iret
pop
mov
movsb
shlb
clc
adc
and
stos
and
aaa
iret
dec
or
imul
mov
pop
pop
leave
xchg
mov
push
jge
mov
pusha
in
push
sarl
mov
pop
repnz
es
xor
out
xchg
movsb
test
jg
ljmp
pushl
into
dec
pusha
adcb
sahf
sub
sub
cmp
push
inc
pop
mov
adc
jne
pop
repz
pop
hlt
aas
push
push
fcom
rcl
enter
cltd
stos
nop
stc
in
mov
xor
jnp
mov
add
and
cmpsl
jo
sub
inc
pushf
int
stos
test
rcll
xchg
fdivrl
incl
fcmove
push
mov
cld
ret
and
lret
mov
push
popf
dec
dec
lret
push
cmpsb
mov
xchg
jae
xor
sub
mov
lods
xchg
cmpsl
test
add
rorl
mov
cmc
cmp
ja
xchg
inc
mov
ror
fstl
pop
cmp
cld
icebp
repz
sub
push
ljmp
sbb
enter
jmp
pop
xlat
xor
outsl
shlb
andb
add
cmp
push
xchg
sbbb
stos
or
repz
mov
sbb
addr16
mov
cmc
stos
jnp
or
xchg
stc
lret
fcomp
push
adc
mov
dec
push
add
push
xorb
jecxz
cmp
inc
lret
lahf
pushf
stos
outsb
rcl
jp
ja
cmc
inc
leave
sbb
push
sarb
test
int
std
mov
pop
mov
mov
jb
sub
xor
mov
mov
sub
push
out
xchg
cmpsb
jecxz
or
cmp
ror
pop
int3
shll
fldt
in
xchg
pop
xchg
add
jae
push
out
int3
push
movsl
push
in
loope
frstor
sub
lods
int3
sub
fsubrl
or
mov
pop
mul
push
mov
pop
dec
movsl
je
mov
pusha
imul
jno
adcb
fldl
into
popf
pop
jge
rcl
jmp
negl
arpl
aas
shll
popf
mov
xchg
mov
jecxz
push
fnstenv
fbstp
push
data16
dec
sub
adc
inc
xor
cmc
cmp
push
xor
or
negb
iret
leave
movsl
aas
stos
stc
add
push
add
xchg
bound
jae
dec
aas
sahf
mov
xor
js
inc
dec
pop
sub
jb
or
xchg
push
fildl
cmc
pushl
inc
dec
mov
or
mov
in
js
lahf
les
out
imul
xchg
push
fnsave
movsl
lret
je
sbbb
arpl
cs
and
pop
mov
in
leave
xor
jbe
pop
cs
sbb
add
fsubrl
inc
hlt
push
outsb
mov
dec
jp
fwait
xchg
cmp
mov
cmp
jecxz
and
cmp
inc
enter
xchg
js
in
add
movsb
or
pop
jnp
out
shrl
or
pusha
dec
mov
std
clc
bsr
jne
sbb
mov
jp
scas
je
dec
les
and
sub
adc
addr16
push
mov
lea
rolb
jno
jge
sub
cmpsb
pop
push
sub
rcrl
rclb
mulb
sbb
lret
loope
stos
dec
jbe
shrb
xor
repz
addr16
inc
shlb
mov
push
jle
push
adc
xor
or
into
test
push
pushf
shr
lods
test
lcall
xor
rol
fsubs
arpl
mov
lea
or
dec
imull
mov
ljmp
dec
push
adc
rcll
pushf
outsb
int3
leave
lahf
loope
inc
lds
rorb
mov
mov
ret
int
push
ljmp
mov
xchg
mov
lret
jns
mov
jp
aas
fs
mov
lock
push
fists
xchg
int3
jle
sub
rcrb
stos
popa
xacquire
scas
push
pop
push
aas
negl
mov
mov
sub
sbb
stos
adcb
dec
add
pop
mov
pop
call
gs
mov
xchg
cmc
dec
lods
xor
push
inc
push
insl
xor
push
les
add
pop
sar
test
fsubrs
or
jg
inc
add
outsb
fstps
fsubrs
out
in
sti
xchg
lds
lods
scas
mov
cld
int3
repz
jbe
loopne
scas
loop
adc
gs
jg
shlb
jbe
in
pop
push
leave
cmc
mov
imul
das
inc
add
inc
push
std
mov
not
test
cmpsl
pop
inc
into
sahf
ss
mov
mov
push
push
jb
aam
pop
mov
rcl
je
fstps
pop
mov
loopne
fisubrl
dec
push
iret
mov
outsb
movsb
hlt
dec
cmpsb
cmpb
std
dec
push
test
jle
mov
insb
in
cltd
or
jmp
jne
push
mov
pop
adc
cwtl
and
jno
dec
cli
pop
dec
xchg
inc
imul
push
out
in
arpl
test
popf
cli
jo
push
shll
jge
fiadds
arpl
mov
adc
cs
and
into
mov
or
add
btc
std
jp
push
sbb
mov
dec
or
into
imul
xlat
test
xchg
push
xchg
dec
xlat
adc
clc
jl
inc
ds
lret
das
into
adc
jns
or
mov
mov
test
and
sub
out
push
xor
jle
fiadds
shrb
lcall
lods
dec
pop
jbe
roll
add
cld
loop
arpl
add
xchg
rcr
icebp
gs
mov
pop
iret
cmp
ds
jb
dec
pop
fistpll
sub
or
jae
cmpsl
cmp
and
or
scas
xchg
push
shlb
mov
subb
jl
push
das
cltd
add
sbbl
lods
xchg
shl
aam
jl
fsubrs
out
test
mov
lret
scas
jge
and
out
xchg
movsl
push
dec
sbb
xchg
ret
dec
lods
insb
or
push
mov
or
adc
jne
mov
mov
adc
dec
push
iret
lret
mov
mov
pop
inc
arpl
mov
jl
lcall
add
mov
test
jo
cmp
or
inc
cwtl
int3
cli
pop
outsb
fbstp
imul
cmp
dec
sarb
sub
shll
aad
and
pop
push
mov
lcall
adc
and
push
imul
out
lods
das
in
shll
pop
aam
sbb
sarb
xlat
out
shl
test
sbb
pusha
fst
enter
xchg
mov
insb
out
lret
mov
fwait
lcall
insb
outsl
sub
shlb
out
adc
jmp
jge
mov
shll
push
fwait
into
mov
mov
out
add
xor
imul
sub
ljmp
insb
pop
pop
stos
pop
lret
inc
dec
icebp
sarb
insl
test
fcmovnbe
fistps
negl
es
inc
lret
in
xchg
jl
inc
jp
mov
out
vphadduwd
xor
test
hlt
popa
in
push
mov
lock
add
subb
sub
jl
dec
jp
rorl
ss
push
cld
cmc
xchg
push
mov
lds
in
sbb
jae
insl
out
cmpsl
jle
into
aas
and
aam
pop
enter
sbb
in
icebp
repz
pop
out
or
repz
and
xchg
nop
sarl
mov
jp
shl
jmp
inc
xchg
fidivrs
test
sar
xchg
cmp
sbb
mov
sub
fsubl
into
mov
dec
adc
cmp
or
mov
sbb
pusha
mov
int3
es
call
sub
out
lret
out
lahf
mov
push
or
dec
push
sti
ficoms
arpl
pop
sub
xor
push
push
fcmove
pop
in
scas
inc
pusha
dec
mov
into
negb
dec
push
jb
es
lock
mov
in
pop
repz
fcoml
push
cmp
inc
mov
and
or
cmc
mov
addr16
ret
movsb
sub
mov
xchg
aaa
das
xchg
int
xchg
mov
int3
pop
cmp
js
stos
sub
cmp
or
mov
and
ljmp
bound
hlt
scas
xchg
sub
or
mov
dec
fcomi
add
jns
out
movsb
xor
jb
jl
outsl
mov
add
xchg
jae
out
mov
and
inc
ret
adc
mov
in
jae
cmp
out
pop
pop
mov
into
mov
or
scas
cmp
aam
pusha
mov
jno
cmp
lea
mov
iret
stc
les
jp
aas
add
fs
and
cmp
sbb
push
in
or
test
sub
outsl
int3
mov
int3
sbb
jo
pusha
sub
mov
nop
repz
neg
pushf
das
sbb
push
test
sbb
xchg
sub
dec
inc
rol
jb
inc
insb
out
pop
xchg
mov
aas
rol
inc
faddl
into
popf
imull
sub
test
mov
xchg
add
outsb
les
jp
fiaddl
or
or
mov
fcmovnbe
gs
add
dec
movsb
pop
subl
stos
xchg
ss
aam
rolb
or
ret
mov
cmp
imul
outsb
mov
lret
jns
mov
jnp
pop
xor
ds
lret
enter
pusha
pop
sub
out
push
pop
mov
dec
fisubrl
or
add
hlt
pop
sub
lock
call
dec
clc
leave
xchg
push
mov
stc
cmovbe
xchg
out
inc
fcoms
lods
int
in
push
push
sub
push
xchg
mov
jp
out
lahf
dec
and
or
or
inc
aam
adc
push
daa
enter
cmpsl
push
mov
loop
lcall
push
jo
sbb
ds
and
and
sbb
or
movsb
ljmp
fs
orb
mov
popf
jb
dec
pushf
arpl
cltd
mov
mov
dec
imul
xor
mov
sub
sub
dec
fsubrl
mov
mov
in
jbe
sub
scas
inc
inc
fyl2xp1
xor
je
shl
xchg
mov
ret
outsl
mov
push
stc
inc
call
pop
jae
test
aas
shrl
pop
push
xchg
mov
adc
sti
aad
push
aam
or
clts
sbb
lahf
and
notl
icebp
mov
push
and
test
jbe
insl
std
bswap
testb
enter
popl
sbb
loope
xor
or
and
xor
rcl
test
adc
dec
or
add
out
or
cmp
inc
jb
hlt
push
mov
dec
into
pop
jmp
push
mov
inc
fsubr
or
inc
inc
push
mov
xchg
ja
sbb
xchg
movb
lods
out
pop
cmpsl
pop
mov
sub
jecxz
and
pop
nop
mov
add
rcl
xchg
adc
mov
or
sub
pop
mov
lret
inc
or
sbb
pop
outsb
test
into
fwait
xchg
pop
add
mov
in
mov
xchg
hlt
in
mov
push
pop
mov
lret
je
push
imul
js
mov
and
jbe
mov
clc
scas
mov
cmp
mov
enter
test
xor
aas
mov
cli
cmp
sub
dec
cmp
mov
jne
into
outsb
push
or
jb
dec
int3
popl
pop
xor
cli
cmp
dec
rorb
filds
mov
dec
mov
mov
sbb
sti
mov
mov
jne
mov
push
movsl
iret
test
sub
sub
out
or
sub
addr16
and
mov
sbb
mov
pop
sub
jnp
jns
jne
jg
cmp
sbb
outsl
push
mov
fmul
clc
add
or
sub
sti
ja
roll
fcoms
jbe
out
cmp
addl
ds
cmp
jl
push
rclb
test
mov
jno
xor
push
add
mov
inc
mov
pop
ret
mov
in
out
sub
jbe
mov
xor
xchg
adc
repz
xor
inc
je
jno
xchg
cld
es
pop
imul
mov
lret
inc
jmp
adc
enter
in
pusha
or
dec
inc
or
mov
push
push
cmp
divl
int3
out
jecxz
scas
mov
out
dec
ds
adc
les
pop
rcr
pop
jne
cmp
inc
loopne
mov
mov
repz
repnz
push
push
xor
movsl
mov
add
lcall
fildll
mov
mov
mov
fwait
adc
fst
arpl
cmp
mov
or
sbb
in
ja
ffree
lahf
xor
leave
xor
xchg
cmpsl
jns
cmp
xchg
js
inc
or
push
pop
adc
xchg
leavew
imul
xchg
out
dec
nop
shr
jge
add
std
fstpt
out
add
mov
inc
in
sbb
push
movsl
jae
pop
orl
mov
adc
dec
jb
loop
adc
pop
mov
sub
mov
fld
data16
push
cmc
mov
xchg
lds
mov
adc
push
inc
sbb
dec
jae
sub
lcall
aaa
add
mov
dec
push
sbb
leave
mov
or
iret
es
and
mov
mov
add
inc
sub
jne
push
push
clc
xor
cmp
int3
jno
jg
fistpl
xchg
dec
aam
mov
xchg
popa
int
push
repz
xchg
lds
xchg
int3
lahf
bnd
popf
sbbl
loop
adc
pop
out
mov
fcmovne
adc
je
pop
jecxz
add
jne
push
in
js
pushl
mov
mov
xchg
dec
scas
push
or
dec
cmp
pushaw
cld
int
bnd
jo
fstpl
dec
lods
sbb
xor
jbe
cmp
or
in
mov
jb
aas
outsl
jg
dec
je
pop
mov
mov
inc
lock
cmp
pop
xchg
push
ljmp
jge
fistps
icebp
dec
imul
ret
push
shlw
mov
push
ds
adc
sbbl
loopne
push
lcall
jo
cs
int3
std
and
loop
xchg
repz
movsl
jecxz
inc
pop
dec
dec
fcmove
cmpsb
lahf
sbb
es
cmp
jecxz
and
aad
clc
lret
faddl
fs
fistps
repz
jecxz
dec
cltd
dec
cld
subl
fldt
xchg
jb
add
push
push
mov
out
cwtl
mov
xchg
pop
ds
into
in
dec
mov
pop
je
xor
mov
cmc
rolb
jo
jl
dec
cmp
test
or
scas
xor
inc
arpl
push
xchg
hlt
aam
mov
jae
adc
das
adc
xchg
cmpsl
and
aaa
push
popf
std
sbb
pop
push
iret
lock
lods
ja
outsb
jbe
rolb
aam
sbb
decl
in
test
pop
cmp
rcll
test
ljmp
push
inc
or
leave
iret
lods
xor
bound
aaa
sbb
pop
mov
popf
or
mov
xchg
sub
ja
popf
into
dec
xchg
cmpl
arpl
add
icebp
fadds
pop
mov
out
jmp
sub
cmpsb
fwait
jp
pop
aad
xchg
sub
fldcw
xor
out
inc
add
ljmp
mov
sahf
inc
xor
or
or
test
jp
adc
or
out
xor
and
imul
mov
shrb
lret
push
lret
dec
xchg
adc
xchg
into
lods
jae
add
stos
mov
xor
scas
int3
jp
and
aaa
xchg
inc
inc
mov
mov
dec
xchg
mov
push
mull
mov
out
outsl
push
das
jmp
aam
jmp
pop
out
jecxz
add
mov
jbe
cmovg
push
mov
leave
je
xlat
scas
mov
xchg
shl
popf
sub
pushf
ds
in
inc
aad
add
pop
pop
sbb
stos
jb
inc
and
push
dec
cmpsb
into
rcrb
int
sub
fnstcw
dec
cmp
xchg
push
sub
gs
or
rorb
aam
push
add
xor
sti
cmc
push
cmp
adc
fs
ja
cmp
lahf
mov
out
xor
or
add
addl
xor
mov
dec
xchg
sti
gs
ljmp
xor
and
dec
scas
jp
push
rol
and
adc
rep
cwtl
dec
xor
or
daa
mov
into
xor
out
test
inc
cmp
add
aas
outsb
push
in
nop
movsl
scas
inc
jno
test
inc
inc
fbld
fildl
cmp
mov
mov
lock
cltd
imul
in
or
push
dec
shll
sbb
lods
into
mov
cmp
sub
mov
dec
xchg
jo
jp
fiaddl
sub
mov
jns
add
shlb
cmp
or
inc
pop
inc
arpl
mov
nop
or
cmp
scas
rclb
dec
fs
mulb
and
aas
xchg
push
xchg
xchg
jmp
fs
cmpsl
sahf
mov
fstl
int3
push
sbb
sbb
inc
mov
popa
push
out
cld
movsb
loopne
push
lds
popf
and
pushf
or
inc
mov
movsl
dec
or
lcall
call
pusha
sbb
aas
xor
pop
mov
adcb
pop
xchg
insb
jmp
mov
push
cs
inc
test
mov
std
mov
sti
add
ss
dec
push
sub
fisttpll
lret
lock
inc
xor
cmp
jo
fsub
pusha
ds
popf
icebp
and
mov
ljmp
adc
lock
rolb
aad
nop
add
ds
jo
insl
bound
sub
dec
mov
aas
xchg
into
mov
idivl
inc
ljmp
adc
rcll
push
repnz
fsubrs
and
mov
sub
xlat
jge
popa
xchg
and
stos
cmpsb
xchg
xor
pushf
mov
imul
pop
jne
jo
lret
mov
sub
repnz
fimuls
mov
jg
stos
in
repz
lods
push
xchg
mov
cmp
cmp
in
xchg
inc
cmpsl
rcrl
popa
cmc
mov
fdiv
mov
ljmp
pop
add
fwait
sub
mov
lcall
dec
xlat
in
xor
dec
pusha
jg
out
loopne
fistpl
mov
inc
cmp
cltd
fists
test
pop
fs
push
mov
and
mov
adc
xor
arpl
or
in
out
dec
mov
lea
pop
movsl
subl
cmpb
int3
cmp
shlb
ss
jns
cmp
les
xchg
xor
iret
mov
cmp
in
int
pusha
sbb
mov
or
stos
xor
mov
cmpsb
mov
leave
jg
out
mov
mov
push
cwtl
daa
add
xchg
or
movsl
xor
rol
sbb
xchg
cmp
xchg
xor
sub
add
hlt
int3
pop
clc
lret
inc
mov
pop
add
nop
cmp
and
push
pop
stos
sub
pop
mov
cmp
out
xorl
es
fisttps
xor
adc
bound
out
mov
clc
pop
mov
insl
aas
les
jne
in
popf
inc
cmp
jmp
data16
and
and
lret
fwait
sbb
lods
dec
and
jbe
mov
and
arpl
jmp
mov
dec
stc
mov
shrl
test
pop
mov
sub
sarb
call
cs
arpl
dec
fdivs
mov
ret
push
scas
dec
mov
cmp
add
pop
filds
jmp
push
lea
sbbb
pop
es
fadds
or
mov
aad
out
cmp
aas
mov
mov
loopne
aaa
adc
into
clc
adc
mov
lods
out
jge
sarb
pop
mov
xchg
adc
pop
pop
rcl
jecxz
xchg
inc
mov
in
pop
fst
mov
mov
mov
push
add
sbb
mov
adc
movl
dec
or
push
sub
xchg
mov
in
pushf
fidivrl
es
lock
ljmp
xchg
scas
int
fwait
ja
ret
incb
aas
mov
and
jecxz
leave
mov
rcl
mov
test
sub
pop
in
push
sub
cwtl
hlt
mov
das
pop
loope
pop
test
sub
fcmovnbe
push
mov
mov
dec
mov
add
rdpmc
jne
inc
call
dec
dec
or
out
xchg
data16
mov
sbb
fs
dec
lods
cmpsl
push
xchg
or
xchg
call
sub
push
iret
add
dec
sahf
stos
loop
mov
cmp
lret
gs
pop
cmp
and
jbe
cmp
loopne
push
movsb
insl
aam
enter
iret
inc
test
adc
call
and
daa
mov
hlt
movsb
push
mov
leave
and
cltd
cmpsl
xlat
clc
pushf
pop
out
dec
std
dec
call
lret
out
into
fnstcw
addl
loopne
aad
xor
adc
popa
adc
jae
rcll
xchg
ret
in
inc
lods
mov
fdiv
xor
adcb
ret
into
or
mov
add
arpl
cld
int3
aam
pop
loope
imul
xchg
or
lahf
cmp
mov
or
sub
dec
scas
movsb
cmp
nop
data16
fdivrl
push
sub
call
shrl
cmp
mov
int
popf
fwait
mov
jns
xor
test
xchg
sub
sbb
mov
inc
in
and
pushf
in
cmp
test
pxor
mov
cmp
xchg
arpl
dec
jge,pn
lretw
call
pop
shll
fcmovnbe
fmul
aaa
out
jp
pop
movsl
dec
or
pusha
jae
cmpsw
enter
push
sbb
jecxz
dec
stos
xchg
roll
adc
and
lods
mov
addr16
sbb
sbb
fcmovbe
insb
mov
js
jbe
add
and
iret
jne
aam
cmp
loopne
jecxz
and
decb
xlat
rcl
sub
out
jecxz
ret
lods
or
adc
icebp
aaa
dec
repz
ret
push
push
out
push
out
xchg
cmpsl
adc
push
jne
test
fwait
stc
lock
int3
dec
std
fidivrs
jecxz
movsl
loop
xor
sub
out
test
pop
sarl
xchg
xor
rcrl
inc
dec
gs
xchg
cmc
je
xrelease
fidivs
sbb
test
cmp
call
adc
xchg
xchg
cld
xchg
or
jne
inc
lret
push
sub
aam
push
jle
dec
add
jno
sbb
out
xchg
jmp
cmp
sahf
xlat
movsl
lods
gs
jle
xchg
movl
cmp
cltd
in
addr16
daa
movsl
add
fcmovb
mov
pop
bound
xor
mov
push
and
mov
popa
cwtl
cmp
out
mov
test
shl
nop
outsl
xor
out
pop
push
js
out
mov
daa
repz
add
cmpsb
xchg
pop
xchg
pop
cmpsl
push
xchg
inc
hlt
and
xchg
or
fldl
out
jae
fstps
outsl
jl
out
adc
sbb
pop
jb
pushf
mov
or
add
lret
pop
push
mov
call
daa
shlb
not
mov
mov
gs
es
mov
test
sbb
repz
add
scas
pop
jne
adc
fsubrs
mov
cwtl
out
lret
jg
and
test
out
adc
dec
shrl
push
lret
out
pop
mov
push
jbe
jno
push
fmull
iret
add
jmp
xor
pop
cmp
mov
stc
adc
xchg
jb
lret
hlt
inc
jmp
incb
mov
lret
fstpt
sbb
add
lret
push
xor
sbb
dec
or
push
xlat
xor
aas
add
gs
out
push
adc
xchg
je
into
push
scas
push
fnstenv
jmp
and
jbe
add
sahf
sti
inc
lret
notl
mov
out
jns
push
xor
and
xor
pop
inc
dec
sbb
mov
rcrl
ds
sub
aas
mov
leave
jb
or
or
movsb
hlt
lret
ljmp
jg
sti
mov
lret
add
jecxz
lock
ss
test
test
pop
inc
std
dec
mov
pusha
out
pop
cmp
sbb
xlat
out
lds
inc
jb
sbb
ret
and
mov
fisubrl
adc
enter
push
xchg
cmpsl
inc
shrb
fisubs
xor
out
and
lahf
xlat
jae
and
in
jne
inc
fmull
or
shufps
fwait
out
push
rclb
sbbl
pop
stc
int3
ds
inc
arpl
insl
or
sarb
mov
out
test
mov
dec
add
xchg
or
push
jle
mov
sbb
adc
adc
fidivs
sti
out
dec
aas
inc
and
xor
das
stos
inc
push
push
clc
adc
cmp
mov
lahf
cmp
stc
xor
inc
cmp
mov
out
push
xchg
outsl
jle
addr16
lods
and
adc
idivb
sbb
dec
pop
xor
lock
je
sub
fbstp
roll
mov
lods
movsb
popa
or
loop
je
loopne
or
push
std
sbb
dec
daa
sti
ret
jno
xor
loopne
fcoml
mov
jo
js
or
lods
mov
cmp
aas
fsubrp
in
ja
mov
pop
outsb
repnz
pop
cmpsl
jl
and
mov
jne
push
or
sbb
loop
sbb
ss
insb
jg
or
fists
mov
pop
push
cwtl
mov
inc
es
outsb
mov
addl
fisubl
aaa
pop
mov
mov
cld
in
sub
loopne
and
jmp
lods
fstl
ror
push
cmpsb
mov
movsl
scas
clc
and
in
push
cwtl
inc
jbe
add
arpl
push
fistpll
mov
xor
in
lret
stos
add
adc
adc
mov
imul
mov
jb
sub
pop
dec
lahf
pop
push
aad
dec
xchg
fwait
sub
sti
push
mov
add
iret
out
mov
jbe
pop
and
sahf
or
icebp
fcmovbe
sub
jl
inc
mov
aaa
push
mov
sar
or
mov
test
daa
jge
pop
mov
out
xor
add
imul
lods
lcall
lret
lret
int
pusha
xlat
cltd
jle
or
pop
sbb
lods
xchg
and
add
push
mov
cmp
lock
dec
or
sub
cmp
push
jge
loop
fmul
xor
es
cmp
ret
in
das
sbb
fisubl
jle
jp
hlt
cmp
lds
fwait
shl
inc
pop
sbb
inc
loopne
cli
in
ret
push
int3
nop
lods
fwait
and
fs
mov
and
movsl
push
xchg
fadd
dec
jmp
sub
adc
xchg
push
dec
incb
rclb
addr16
fcomps
lods
or
inc
test
mov
cwtl
dec
inc
cmp
setns
into
int
test
pop
pop
lods
sbb
or
adc
inc
fs
dec
fldenv
adcb
or
out
mov
shrl
in
add
inc
scas
lea
jle
fs
xor
fcoml
scas
loope
fwait
out
ljmp
mov
adc
jne
fs
test
int3
push
mov
lods
xor
repnz
sbb
push
mov
ficoml
das
mov
and
and
xchg
sub
out
inc
cmp
xadd
mov
push
out
ret
cwtl
aad
push
loop
cmp
movsb
ds
xor
pop
or
fsubr
inc
add
fiadds
sub
and
dec
mov
in
test
out
das
push
popf
push
cmp
sub
mov
mov
xchg
movsl
xor
addr16
dec
stos
dec
mov
cld
jmp
cmc
and
pusha
gs
push
adc
lret
enter
cmp
xchg
inc
xor
adc
jle
hlt
push
lret
imul
dec
psubd
in
sub
xor
jnp
cmp
fwait
mov
mov
inc
mov
ss
xlat
cld
or
or
sub
daa
xor
dec
mov
jecxz
xchg
inc
stc
test
mov
hlt
ret
loop
mov
in
sub
dec
stos
shll
das
cli
xchg
inc
pop
push
rclb
and
xor
gs
imul
adc
pop
inc
xchg
xor
sti
aas
dec
addr16
push
std
jg
lods
cmc
jnp
ret
xchg
mov
inc
dec
cmp
pop
scas
test
js
pop
lds
and
sahf
or
gs
loop,pt
xor
shll
lods
mov
sub
call
fildll
pop
jl
xchg
lret
sbbl
sbb
scas
or
and
andl
rolb
hlt
mov
addr16
test
inc
leave
call
or
xchg
cld
rorb
adc
pop
aaa
add
sub
xchg
imul
mov
and
inc
jo
adc
xlat
pop
mov
mov
jae
sub
dec
sub
and
leave
push
test
add
mov
push
mov
aad
xor
repz
pop
sub
sbb
rcl
adc
jbe
cmc
decl
js
ds
fisttpl
cltd
daa
pop
int3
movl
mov
out
push
movsb
jle
add
pop
lret
fisttps
push
dec
in
lea
shlb
or
fbstp
pusha
mov
cmpsl
lock
xchg
mov
ds
push
pusha
sub
scas
sbb
pop
lea
cwtl
jge
movsb
mov
insb
xchg
mov
mov
push
or
les
add
in
insl
int
leave
and
cmp
aaa
cmp
sbb
insb
jo
sbb
arpl
ja
shl
add
xchg
sbb
jg
mov
mov
pop
aam
or
aam
lcall
sub
icebp
sbb
stc
js
jns
pop
add
icebp
push
jp
jge
inc
and
cmpsb
ja
in
stos
dec
cmp
dec
pop
mov
das
xor
stc
es
ror
xor
jns
mov
lods
cmp
movsb
xchg
stos
sbb
xlat
xchg
mov
mov
fst
dec
cmp
cmp
pop
lods
ja
ss
dec
cli
dec
shr
xchg
sub
pop
mov
jbe
pop
inc
and
dec
out
cwtl
cmp
fwait
inc
push
shld
cmp
fisubs
mov
push
movsb
jecxz
xchg
xchg
lahf
inc
inc
or
repz
sahf
push
dec
fldcw
xlat
cmp
lret
addr16
jae
jmp
adc
xor
xchg
dec
and
mov
dec
inc
dec
mov
loopne
int3
adc
shl
ja
daa
mov
pusha
sbb
inc
movsb
or
mov
cmp
xchg
jno
cmp
jbe
test
mov
and
fwait
xchg
test
fnstenv
ljmp
and
mov
and
lcall
add
cmp
push
mov
and
aaa
out
mov
cmp
sbb
or
xor
fsubrs
popa
or
lock
outsb
cmpsl
or
shl
ljmp
add
xor
mov
lock
and
xor
sbbb
gs
xor
mov
roll
lods
mov
dec
icebp
pop
cmpsl
rcll
arpl
pop
mov
shl
jmp
divl
lret
or
adc
into
insl
push
clc
es
dec
push
mov
or
adc
add
daa
pop
cmpsb
into
mov
and
icebp
ror
jle
fisubl
out
idivb
inc
mov
lds
ja
inc
mov
pop
xchg
test
lahf
repz
xor
mov
jae
xor
cmpsb
lods
mov
popa
pop
into
and
fnstsw
and
sbb
jne
ds
movsl
stos
ret
daa
lods
cmp
mov
jns
xchg
add
in
retw
push
push
fidivl
dec
ss
shll
adc
pop
pop
mov
out
and
lea
lahf
ljmp
pop
xor
into
mov
sbb
xlat
out
adc
out
push
or
stos
in
adc
and
pusha
and
jmp
aaa
movsb
cmpsb
icebp
js
xchg
mov
nop
std
lret
lock
test
adcb
pop
outsb
push
scas
mov
sbb
imul
pop
ljmp
or
jb
pop
jge
cmp
rcl
pop
sub
and
sbb
inc
mov
aaa
test
lea
mov
lret
aaa
in
cmp
xchg
stos
adc
jno
ret
fistps
and
repz
fsts
push
jecxz
add
add
std
jae
les
add
loop
loopne
and
add
out
sbb
js
leave
sbb
mov
test
sti
mov
adc
out
push
jmp
outsl
xchg
enter
mov
mov
pushf
cmp
fcmovnbe
sbb
inc
out
pop
cmp
cmpsl
mov
cld
lret
sub
dec
mov
sub
std
rclb
xchg
jae
xchg
sbbl
push
cld
and
test
fnstsw
fiaddl
pushf
in
mov
dec
lds
jns
dec
ret
xchg
movsb
sub
pop
xor
lret
and
sub
pushl
or
insl
xchg
mov
gs
loopne
and
or
mov
xchg
inc
and
xor
inc
iret
dec
xchg
jg
xor
mov
push
and
sahf
lea
mov
push
repnz
mov
movsbl
in
mov
mov
js
inc
xor
cmp
dec
push
push
inc
or
es
jl
push
add
loope
adc
sar
scas
ret
mov
subl
dec
sbb
loop
xchg
mov
ss
sbb
push
push
aam
jbe
loop
repz
jne
cmpsl
sub
shll
je
xchg
add
pop
mov
in
inc
push
xchg
jno
arpl
pop
or
mov
mov
arpl
popf
or
outsb
cmpsb
ljmp
mov
imulb
dec
xorb
iret
cmp
push
mov
sub
in
pop
mov
xor
pop
mov
out
pop
add
dec
add
inc
fisubrs
das
inc
in
sahf
push
cs
and
scas
je
ret
les
mov
pop
loopne
jp
popf
sub
push
pop
ret
dec
mov
in
jmp
lret
cmp
push
ds
mov
repnz
iret
addr16
jns
es
fmuls
movsl
mov
push
xchg
enter
lretw
jnp
pop
fs
int
mov
cmp
sub
out
adc
or
lret
aas
xchg
push
fildll
inc
cmpb
push
or
out
cmp
pop
sub
dec
cld
inc
mov
dec
mov
aam
test
cmp
fidivl
imul
push
xor
jno
lret
in
test
mov
sti
adc
fiadds
inc
outsb
jae
jg
sub
xchg
aaa
pop
ss
addr16
roll
jg
incb
ds
push
push
inc
movsl
lret
xchg
shll
fldl
mov
or
add
out
jecxz
or
jmp
inc
loop
je
or
pop
loopne
or
test
xchg
xchg
adc
out
jg
dec
pop
rcrb
sahf
mov
cli
lret
xchg
clc
das
into
neg
leave
push
std
xor
adc
jne
dec
mov
sbb
stos
mov
or
cmp
adc
pop
decl
mov
jecxz
or
std
dec
es
push
mov
lcall
mov
cmc
xlat
arpl
mov
xchg
mov
jns
jg
push
add
pop
xchg
sbb
cmp
dec
xor
sbb
inc
js
imul
lahf
je
mov
dec
mov
push
cmp
xor
rclb
ss
insl
in
push
mov
stc
mov
mov
ljmp
fists
in
mov
add
sbb
add
dec
dec
pop
inc
jnp
int3
ss
in
inc
es
adc
out
aad
pushf
fwait
inc
or
dec
mov
mov
jecxz
cmp
arpl
addr16
mov
sub
cmpsb
into
aad
cs
jbe
sahf
push
hlt
shlb
out
ret
test
pop
pop
orb
loope
getsec
int3
out
jo
mov
jbe
loopne
and
mov
cmc
pop
push
jle
add
rcll
add
and
inc
sbb
mov
and
sarb
insl
xchg
inc
cltd
add
mov
repnz
jl
cmpsb
mov
push
jg
fsub
push
cmc
jbe
cmpsl
aaa
std
into
popf
out
nop
out
jns
lock
lods
into
divl
int3
mov
sbb
mulb
adc
leave
mov
rcrb
scas
test
cmp
out
imul
insl
dec
call
test
pusha
out
orl
repnz
out
pop
and
or
pop
inc
mov
mov
and
push
lods
sbb
xor
sahf
xchg
cs
cwtl
dec
testl
outsl
xchg
and
jnp
call
pop
out
jno
sub
int3
or
es
fucomp
mov
push
adc
fxch
js
jbe
insb
mov
or
out
fcmovnbe
add
dec
xlat
imull
add
sbb
insl
cmp
test
insb
sub
pushf
dec
mov
jmp
roll
sbb
adc
mov
push
movsl
push
repnz
xchg
lock
into
mov
cwtl
sub
mov
jno
xor
repz
rcrb
mov
pop
stos
incb
enter
arpl
and
out
adc
mov
sbb
loop
cli
addl
sbb
push
int3
outsb
push
jmp
ret
int
rolb
das
jns
and
leave
mov
mov
and
push
or
xor
or
dec
mov
inc
mov
and
xor
pushl
add
out
addr16
lds
jecxz
inc
fwait
dec
imul
mov
cmp
cltd
iret
lahf
ljmp
jae
mov
lahf
push
hlt
or
stc
push
cmc
mov
pop
dec
or
sbb
fs
lds
inc
out
cmc
dec
popa
movsl
std
sbb
je
ret
xorl
mov
jbe
mov
mov
fisttpl
addr16
or
repnz
jecxz
add
lock
push
lods
das
mov
xor
inc
xchg
mov
mov
int
push
rcrl
stos
mov
cmpsb
xchg
xlat
lret
imul
in
add
sbb
sub
mov
cmp
daa
xor
mov
mov
xchg
add
jne
pop
out
aam
loopne
lods
mov
int
fmul
cmp
mov
jp
adc
mov
mov
jb
xchg
dec
pop
cmc
movsb
popf
pushf
add
stos
je
ret
out
adc
outsb
sub
pop
out
sbb
outsl
movups
fiadds
xchg
mov
popfw
in
stos
rorb
enter
push
arpl
jo
xchg
gs
lds
mov
out
cmp
aam
aaa
jns
lret
icebp
cmp
test
sub
add
aam
int
js
cltd
push
or
jb
fcoms
adc
cmp
push
lret
jae
imul
and
xchg
mov
out
mov
pushw
mov
test
mov
and
and
pop
mov
inc
imul
cltd
mov
cs
inc
cmp
int3
js
cmpb
shll
push
pop
aam
mov
or
sbb
movsl
dec
lret
push
push
cmp
frstor
and
popa
cmpsb
mov
lods
xchg
jno
arpl
or
sahf
in
aaa
sub
cmc
ficomps
lret
mov
adc
nop
push
mov
rorl
sbb
cmpsb
adcl
clc
loop
rcl
push
sarb
xchg
sbb
ljmp
lods
int3
sbb
mov
xor
mov
gs
push
ds
push
scas
jae
fs
cmpb
not
xor
daa
jns
test
ficomps
in
in
aas
mov
dec
mov
int
jbe
xchg
call
jbe
aam
cmp
mov
aaa
or
adc
jmp
xlat
mov
not
pop
movsl
sub
jo
push
xor
inc
stos
or
out
dec
cld
sbb
movsl
sub
push
inc
push
orb
jne
lret
pop
insb
lcall
or
out
fcmovnbe
or
popf
mov
push
rcl
cmp
fmuls
mov
mov
outsl
xchg
pop
aas
sub
sbb
xor
add
push
inc
pop
test
fs
hlt
sahf
dec
xchg
mov
dec
mov
in
add
cmpsl
inc
sub
jecxz
or
push
pop
jge
adc
push
sbb
mov
movsb
das
pop
out
lods
enter
dec
mov
fbld
lahf
iret
push
shll
cld
or
fs
mov
push
sub
jecxz
pop
rorl
lcall
cld
test
repz
push
popf
out
inc
and
or
xlat
mov
xchg
inc
jo
cmp
popf
jl
repnz
jge
ljmp
xor
sbb
out
cmp
repz
dec
jmp
scas
mov
pop
out
sbb
inc
out
or
or
xor
loop
dec
es
jmp
mov
jne
push
sub
aad
clc
xlat
xor
pop
cmp
dec
jl
insb
loope
push
jns
rcrb
into
xorb
adc
push
pop
cld
sub
imul
inc
fnstsw
cmc
jno
dec
mov
adc
pop
out
sbb
jb
sahf
push
mov
movsb
mov
adc
adc
daa
fisubs
mov
fldcw
add
mov
fs
filds
lret
call
xlat
sbb
das
shll
dec
jmp
repnz
sub
popa
movsl
xor
sbb
sarl
inc
inc
xor
push
mov
pop
ljmp
out
sub
mov
xchg
inc
incl
dec
insb
and
stos
je
dec
jle
subl
dec
xchg
imul
xchg
fs
mov
test
xchg
and
sbb
gs
loopne
aaa
cmpsl
out
jne
or
movsb
lret
clc
sbb
inc
xchg
fcomps
sub
push
or
adc
xchg
mov
add
arpl
jno
fstpl
movl
jbe
fbld
subb
xchg
mov
inc
int3
lret
sub
sbb
repz
int3
inc
gs
fisubl
repz
cmpsl
mov
pop
hlt
in
push
in
dec
out
into
add
dec
or
aaa
je
call
xchg
clc
cmpsb
cld
add
push
in
test
jns
pop
xor
insl
out
dec
xor
mov
push
jno
repnz
pop
sahf
push
dec
fisubl
mov
out
dec
incl
jnp
leave
in
ss
adc
fwait
nop
pop
leave
stc
fst
stos
xchg
jecxz
pop
push
inc
and
mov
ja
xor
sbb
mov
and
add
sbb
push
int
push
into
push
movsb
shr
jns
push
fmuls
or
xor
fsubrl
add
cld
mov
inc
pop
cmp
sbb
dec
jae
mov
into
adc
sti
sbb
add
mov
mov
repz
bound
fmulp
dec
repz
push
cmpsb
mov
cmp
lds
mov
mov
push
nop
scas
dec
xchg
pushf
add
gs
inc
lcall
add
andb
jmp
jne
vandnps
dec
sbbb
sub
push
lods
adc
loop
cmp
call
mov
outsl
imul
jae
out
fldl
cmp
or
push
stos
jp
subb
add
push
pop
add
lahf
stos
aaa
pushf
stc
scas
inc
bsf
shll
mov
pop
mov
ret
push
mov
sbb
fcomps
es
shrl
adcl
std
adc
popl
fadds
out
cli
cld
or
dec
sub
mov
xorl
xor
cmc
cmp
stos
inc
sub
arpl
add
aaa
adc
xchg
das
shl
insl
lock
or
inc
cmpsl
xor
sti
inc
jecxz,pt
and
iret
dec
adc
addl
cs
ds
rcll
cmc
cmpsl
jecxz
outsb
inc
lds
jnp
xchg
outsb
add
mov
lret
add
adc
adc
add
and
int
xor
cmp
xchg
jge
lods
xchg
mov
xor
push
and
aad
push
mov
pusha
or
out
dec
mov
arpl
stc
jmp
or
ret
in
call
pushf
push
xor
xorb
ret
fdivrl
dec
jb
xor
and
pop
js
push
and
dec
add
fldt
pop
push
outsl
fs
lret
xor
mov
push
inc
mov
aas
js
dec
sbb
repz
es
scas
lcall
movaps
cmc
lahf
mov
pop
mov
rcrb
xchg
or
push
movb
sbb
xor
in
xor
mov
leave
pop
mov
loope
iret
inc
cmp
xchg
sarl
sbb
in
cli
sbb
push
xor
sbb
insl
int
push
jle
in
stos
cmp
push
mov
sub
orl
out
adc
out
xchg
lods
mov
cmp
movl
adc
repnz
xchg
cld
loope
jb
movsb
pop
or
cmp
xlat
push
in
repnz
or
cmp
add
ljmp
hlt
and
and
loopne
mov
adc
or
cmp
jmp
pop
rcll
inc
push
lret
aas
aas
into
add
sbb
xor
sbb
mov
jge
out
cmp
sub
imul
movd
push
mov
push
jmp
mov
jns
inc
idivb
mov
fucomip
xchg
or
sahf
cli
mov
xor
lock
mov
cmp
pop
add
or
les
gs
jnp
out
jae
aad
xor
aam
es
jb
pop
scas
sahf
or
push
and
or
mov
int
sti
mov
lods
out
mov
or
inc
cmp
and
fimull
dec
add
jbe
rol
jl
push
hlt
xor
pop
sub
mov
adc
std
clc
add
mov
mov
xchg
fstpt
cmp
push
push
lret
mov
mov
mov
addr16
jge
sbb
test
prefetchwt1
or
dec
int3
cmp
and
iret
push
je
jns,pt
sbb
movsl
lock
ljmp
rcl
adc
pop
andl
inc
nop
mov
jnp
add
mov
push
shll
js
xchg
or
outsb
jge
fcomps
mov
testl
aaa
jge
add
xlat
fbstp
fcmovne
rcrb
aad
xchg
out
je
aam
mov
gs
sub
dec
loope
mov
inc
insb
adc
dec
into
inc
jnp
test
mov
repnz
in
push
sub
decb
xchg
push
dec
jp
rcl
mov
cmp
or
add
xchg
pop
jge
or
adc
or
mov
mov
push
aas
je
mov
aad
cli
push
mov
jne
mov
dec
push
data16
pop
not
xchg
pcmpeqd
nop
lds
cmpsb
mov
cs
inc
loope
sub
sbb
es
cli
pop
out
pop
mov
xchg
in
icebp
cmp
adcb
sti
jmp
cltd
in
mov
xor
inc
mov
mov
ja
enter
test
and
inc
jae
ja
aad
mov
adc
push
sbb
test
jns
push
out
stc
sbb
rcll
fst
mov
inc
loop
lret
add
fiaddl
arpl
inc
in
cwtl
stos
xor
sar
mov
insb
in
scas
sbb
xchg
or
jb
mov
fcos
adc
fcomip
test
xchg
jo
test
and
cwtl
addr16
cld
shr
std
dec
push
xor
popf
scas
into
je
add
or
lcall
mov
sbb
into
pop
mov
dec
add
mov
push
inc
or
push
inc
inc
or
gs
lret
pushf
xchg
fadds
popa
xchg
jge
inc
jae
pop
aad
mov
jne,pt
dec
sub
adc
fnstenv
pop
lods
mov
jg
mov
lret
jmp
out
cmpsb
xchg
data16
dec
xchg
add
test
hlt
sbb
int
push
xor
adc
loopne
inc
xor
shll
dec
cli
push
push
inc
dec
cmpl
pop
sub
popa
pop
mov
sbb
mov
mov
push
lods
pop
jl
add
fdivrs
xchg
in
out
jg
addr16
into
push
sahf
pop
mov
jnp
nop
mov
int
adc
fidivrs
sarl
mov
test
sub
xor
pop
xchg
push
lcall
jne
jle
into
je
stc
cmp
sub
ja
leave
enter
testb
adc
js
push
ficompl
out
icebp
cld
ror
jae
jae
ret
jb
dec
lea
jl
dec
int
outsb
inc
pop
clc
mov
aaa
push
mov
inc
mov
fs
pop
cmp
adc
movsb
mov
add
daa
add
jge
jp
loopne
lahf
or
push
and
data16
test
scas
pop
jg
jmp
scas
cmc
jecxz
loopne
adc
dec
jns
sarl
sar
int
lcall
mov
leave
int
adc
cs
xchg
add
data16
outsl
push
pop
mov
dec
jne
sbb
loope
cld
mul
fmul
cmp
push
popf
inc
push
xor
cmp
rorb
jmp
jae
es
fisttpl
mov
jbe
inc
cmc
pop
fdivrs
mov
jne
sarl
mov
stos
jp
ljmp
inc
lea
ss
and
mov
lcall
scas
mov
rcl
ret
out
es
fmuls
pop
bound
imul
repz
or
xchg
in
ja
cwtl
mov
out
int3
je
mov
rcl
repz
push
push
not
adc
mov
pop
jp
rclb
xchg
push
sarl
leave
icebp
sub
adc
dec
mov
lock
in
sbb
mov
hlt
cmpsl
ficoms
adcl
and
test
sub
inc
jg
mov
cli
push
push
sub
out
mov
xor
adc
icebp
push
call
push
lods
jno
ja
jbe
push
push
mov
adc
mov
stc
xchg
in
pop
mov
pushf
dec
jo
stos
xchg
xchg
stos
cld
out
fistpll
cmp
aad
shl
pop
imul
mov
out
pushl
dec
xchg
add
clc
and
fldenv
cld
mov
xchg
insb
push
jle
xchg
fsubl
ljmp
lret
dec
mov
mov
push
and
scas
push
jle
cli
mov
aad
sbb
mov
out
loop
out
xor
push
lcall
mov
sbb
adc
xor
ror
or
stos
xor
jge
sub
mov
or
loop
cmp
xchg
xchg
cmp
sbb
cmp
and
roll
cmp
loope
jmp
iret
mov
je
cwtl
jle
nop
lods
imul
test
in
test
mov
cmc
movl
mov
lods
add
aad
aas
mov
aam
mov
dec
in
xchg
mov
lods
pop
cmpsb
aas
xor
gs
xchg
push
out
add
add
cmp
lds
mov
iret
mov
jl
pop
inc
jmp
test
pop
xlat
jecxz
or
xchg
int3
mov
ss
sti
and
ret
jl
jns
lahf
int
jbe
and
push
dec
je
in
movsb
ret
sub
testl
in
adc
inc
insl
adc
or
hlt
jb
lds
push
mov
adc
mov
sar
aas
pop
jbe
or
pushf
faddl
dec
imul
out
push
push
mov
test
cld
push
js
aas
test
cmp
mov
adc
les
lret
push
sub
faddp
repz
xlat
aaa
sbb
pop
aas
xchg
push
pop
pushf
cmp
pop
orl
int3
into
iret
pop
out
repnz
fdivrl
enter
jno
mov
nop
add
jl
movb
pop
jns
into
add
cli
cmpsb
imul
inc
orl
xor
fs
push
jne
pop
dec
jg
adc
stos
xchg
xor
mov
sahf
fsubl
push
add
loop
repnz
xchg
cmpb
sub
aam
dec
cmp
js
rcl
in
out
test
cmp
icebp
insb
or
movsl
in
jg
pop
jo
xchg
lret
sbb
jmp
sbb
dec
add
mov
mov
jl
dec
ss
cwtl
jbe
fcom
bswap
xor
mov
mov
es
xchg
imulb
jl
add
or
push
cmp
negb
enter
aad
mov
push
gs
push
test
das
pop
jbe
dec
add
mov
frstor
add
add
push
jae
addr16
pop
mov
in
adc
fs
xor
and
dec
sbb
cld
addb
jns
mov
add
inc
enter
mov
lahf
loope
aas
fcmovne
or
imul
sbb
dec
es
pushf
in
out
test
arpl
movsl
out
xchg
lret
stc
daa
pop
call
test
cmp
fidivs
sahf
push
and
xor
not
js
rcrl
and
or
xor
fwait
mov
mov
and
sub
jne
jnp
fnstenv
cmp
lret
mov
jno
testl
dec
cmpsl
pop
pop
dec
aad
scas
push
ret
mov
mov
gs
inc
mov
pop
sub
ret
push
cmp
ret
dec
outsl
sti
test
ss
cmp
stos
dec
fidivs
cli
rep
int3
sbb
mov
aaa
imul
mov
cmp
jmp
mov
out
sbb
sbb
lcall
mov
enter
mov
push
roll
stos
ljmp
mov
or
xor
ret
adc
fbld
pop
or
test
cmp
jle
pop
mov
xor
xor
bnd
mov
lcall
test
jbe
or
bound
jne
insl
aas
out
out
clc
out
in
jae
push
or
push
jns
cwtl
aam
cs
xchg
cmpsl
jecxz
xchg
mov
dec
in
pop
popl
mov
pop
addr16
inc
and
stos
xor
lret
push
dec
jae
sbb
fs
sub
enter
add
inc
pusha
xor
jp
mov
push
lret
push
cmpsb
and
xor
scas
mov
ja
stos
sub
and
xchg
xchg
test
jle
jb
aam
pop
fsts
divl
aad
jne
sbb
inc
outsl
dec
stc
into
data16
adc
cmp
pop
ss
sub
daa
rcl
test
hlt
pushf
movsl
jmp
inc
push
xorb
cmp
icebp
fs
ja
cmp
mov
mov
pusha
dec
ret
aaa
test
cmp
hlt
insl
icebp
adc
or
sub
mov
dec
xor
outsl
leave
rcrl
and
jbe
das
movsl
adc
inc
outsl
cld
outsb
gs
dec
rcl
mov
call
aaa
aam
mov
cmc
push
inc
xor
xchg
daa
push
xchg
enter
and
mov
cmpsl
xchg
cli
addr16
out
sahf
push
jg
and
push
cmp
pop
into
mov
pop
mov
mov
inc
cmpsb
xchg
scas
dec
lahf
lret
flds
repnz
mov
jb
into
sub
mulb
mov
pop
adc
mov
clc
push
xor
pop
cmc
imul
mov
outsl
sbb
dec
imul
inc
std
push
ja
push
adc
pop
faddp
cld
add
dec
rolb
jmp
cmc
xor
inc
or
rcrb
lret
adc
inc
xchg
fcmovu
mov
es
and
pop
loope
push
popa
adc
mov
pop
out
int
stos
mov
cmp
dec
push
and
sbb
jns
push
jae
sbb
lcall
xor
cmp
arpl
xchg
dec
dec
add
out
sub
das
pop
pusha
dec
jle
js
out
cli
mov
add
mov
ds
das
adc
xor
dec
jne
imul
movsl
outsb
in
jbe
xor
mov
cwtl
push
mov
jnp
or
xchg
pop
xor
pop
cmp
test
pop
lods
xchg
sbb
push
push
dec
das
xlat
sarb
mov
jp
mov
cmpsl
addr16
orl
divl
roll
jg
push
xor
arpl
or
fs
test
xchg
fmulp
pop
jle
roll
cmc
aaa
xchg
pcmpeqd
mov
push
push
icebp
mov
mov
pusha
dec
lock
imul
mov
cmc
and
ja
xchg
or
xchg
clc
fsub
xchg
xor
dec
mov
or
adc
mov
loope
loopne
jle
lcall
test
mov
sbb
pusha
cmc
daa
call
out
icebp
inc
aaa
or
cli
out
cmpsb
loope
dec
cmp
out
addb
mov
lret
dec
push
adc
loopne
mov
xlat
test
mov
inc
and
cmp
pop
xor
adc
dec
js
pop
enter
out
or
lds
into
ljmp
push
xchg
insb
iret
mov
and
add
and
leave
sub
shlb
fs
and
int3
push
xchg
adc
sub
push
movsl
and
shrb
xlat
flds
enter
pop
and
inc
data16
mov
sbb
lret
add
jb
cld
fwait
cli
jge
leave
ret
sbb
je
lods
stc
push
andl
lea
push
fimuls
xor
test
cli
cmp
sbb
cwtl
xchg
pop
aam
push
pop
test
movl
xlat
sub
mov
fdivs
mov
xchg
push
repz
outsb
jl
cwtl
adcl
xchg
adc
dec
xlat
xor
dec
push
cmp
add
lcall
xor
push
nop
sub
fucomi
cmp
xchg
sbb
lods
adc
xor
dec
pusha
mov
enter
lds
adc
and
outsb
inc
add
push
pop
jbe
fs
inc
mov
sti
test
iret
mov
pop
int3
adc
add
sar
jb
mov
push
out
dec
movsb
and
push
fdivr
mov
xor
pop
cltd
mov
dec
cwtl
insb
xchg
ret
push
push
les
dec
movsl
fidivrs
int
xchg
fistpll
aaa
fistpl
mov
and
cmc
add
pop
push
xchg
icebp
test
dec
jecxz
mov
pop
lods
mov
mov
lods
mov
adc
xchg
repz
ds
rolb
push
stc
call
js
adc
fsubl
sbb
fwait
xchg
mov
mov
sahf
or
test
mov
add
stos
rorb
lods
inc
fs
xor
add
jmp
xor
mov
into
mov
test
pop
ret
les
cmpb
xor
adc
pop
jbe
fimuls
rclb
add
and
imul
insl
or
mov
xchg
movsb
out
sbb
scas
mov
das
push
jg
call
jbe
mov
lods
loopne
add
test
dec
mov
pop
cmp
xchg
dec
dec
add
sahf
pop
es
movsl
aaa
or
adc
das
addr16
push
into
jnp
add
icebp
rorb
pop
sbb
jl
clc
xor
pop
mov
cwtl
mov
or
xor
std
add
mov
jae
adc
push
mov
fs
in
mov
mov
nop
dec
addr16
mov
or
xor
xchg
scas
aam
fadds
outsl
ss
loop
and
leave
ljmp
setp
lahf
sbb
jbe
add
lea
xlat
push
movsl
or
cmc
jne
push
push
push
adc
stos
loopne
push
ljmp
cli
aad
movsb
pop
dec
js
jne
gs
ret
or
mov
sbb
pop
cmp
dec
inc
pop
scas
iret
into
sbb
outsb
pushw
dec
mov
movsb
or
addr16
ficoms
dec
mov
push
call
adc
xor
std
xchg
ret
stc
mov
sbb
test
cwtl
mov
mov
ja
xor
out
jl
mov
popf
inc
fbstp
or
pusha
xchg
add
pop
inc
jno
xchg
data16
ljmp
sub
mov
in
fstps
popf
addr16
push
test
push
lret
add
loop
insb
xlat
cmp
pop
push
ficoml
stc
xchg
out
or
out
lea
xchg
inc
icebp
pop
mov
hlt
pop
fldl
cld
loope
jp
mov
fscale
xchg
lret
popf
aad
mov
cmp
jp
int3
jb
testl
add
std
insl
mov
cmp
insb
mov
mov
inc
ss
push
jmp
ja,pt
stos
pop
xor
mov
xchg
jne
test
jle
iret
add
cwtl
xor
mov
pop
sub
mov
inc
add
push
stos
push
sbb
movl
xchg
and
inc
cld
push
rcll
push
mov
test
in
aad
push
ja
pop
into
adc
idivl
xor
cli
dec
jnp
adc
fidivl
or
aam
dec
jg
sub
pop
inc
stos
push
int
pop
insl
ficoml
mov
out
lods
loope
jae
fcmovne
scas
jno
and
icebp
mov
popf
mov
sbb
xchg
lcall
sbb
stc
mov
imul
jmp
xchg
or
or
mov
jo
mov
pop
rolb
cwtl
sbb
push
inc
sub
movsl
xor
jbe
or
jg
fimull
pusha
adc
push
repz
pop
push
or
cmc
pushf
mov
inc
and
add
mov
mov
into
dec
xchg
imul
mov
xor
inc
jmp
cmp
shr
mov
and
stc
add
mov
daa
dec
lahf
adc
addr16
lods
mov
jecxz
popf
xchg
loope
push
pop
pop
out
sbb
daa
dec
scas
pop
xlat
xor
adc
pop
mov
inc
jne
cwtl
pushf
adc
mov
sbb
out
mov
sub
std
sbb
push
dec
mov
pop
push
sbb
mov
mov
pop
sub
out
test
sub
test
out
ficoml
dec
lcall
das
sub
sub
jo
inc
subl
xor
mov
out
das
xchg
out
add
dec
inc
dec
push
xchg
or
repnz
mov
xchg
fists
cmp
repz
pop
xchg
add
sbbb
out
add
pop
int
add
jmp
lds
es
shl
mov
dec
push
fcoms
ret
or
call
xchg
mov
in
gs
cmp
pop
in
loop
popa
or
jo
xchg
push
xorb
dec
iret
in
ja
test
maskmovq
divl
jno
mov
in
and
dec
les
xchg
std
mov
lods
clc
inc
mov
fcmovbe
rorb
adcb
mov
inc
cmp
mov
jae
neg
scas
gs
leave
dec
mov
adc
icebp
lock
fildll
push
cmp
push
loopne
sub
add
cmpsb
js
arpl
movsl
xchg
mov
inc
fnstsw
xor
xchg
fs
xchg
pop
gs
and
jo
repz
jmp
xchg
fld1
push
mov
aad
push
shl
jl
stos
sti
int3
xor
sub
fmul
sarl
shlb
mov
and
out
add
xchg
pop
xor
insl
mov
mov
jecxz
cmc
ret
sub
push
xor
pop
xchg
fwait
insb
imul
loop
cmp
jb
adc
add
sub
adcb
dec
mov
cmp
hlt
orl
or
loop
jmp
xchg
xor
test
and
dec
cltd
mov
and
in
mov
jp
inc
leave
or
int
arpl
jnp
cld
dec
ja
mov
stos
xchg
push
mov
sbb
push
in
sarb
mov
nop
aam
jmp
cmp
lods
lahf
test
and
stos
sbb
cmp
pop
or
aas
lret
in
pop
cltd
jecxz
adc
mov
dec
outsl
jae
xchg
es
or
mov
into
pop
jb
dec
insl
fidivrs
mov
or
fsub
std
dec
sub
push
xchg
les
sbb
or
mov
push
mov
xchg
ds
add
pop
jb
adc
daa
in
dec
pushf
repz
mov
lret
rcrl
popa
shr
into
out
repz
xchg
xchg
insl
mov
mov
stc
mov
mov
adc
test
jg
outsb
add
sub
inc
pop
lret
into
popf
jbe
lret
push
and
mov
icebp
push
pop
fs
shll
or
mov
sbbl
mov
icebp
aas
cmpsl
xchg
add
and
pop
cmp
lea
lds
mov
nop
add
lret
pop
jb
ret
mov
insb
mov
fs
pop
dec
rcl
xchg
push
mov
aaa
movsb
pop
cmp
dec
mov
xchg
dec
in
mov
add
fadds
pop
loop
xor
or
cmp
test
sbb
jl
cmp
movsl
outsb
cmc
or
cmpsb
divl
mov
cmp
lret
into
sub
inc
pushf
out
sahf
rcl
decb
shr
mov
pop
int3
sub
inc
stc
test
cld
push
cwtl
mov
rcrl
test
mov
cmpsl
pop
push
adc
pushf
push
fldenv
cwtl
lret
mov
addr16
push
outsl
clc
mov
sub
jmp
mov
jbe
out
sbb
test
rcl
mov
and
cmp
xorb
fcompl
negb
pusha
test
sti
data16
out
int3
add
push
fildl
push
mov
adc
or
mov
mov
fcomps
push
jge
loopne
inc
adc
jne
xchg
mov
lcall
insb
aad
mov
adc
das
xor
lock
lods
into
mov
movsb
sub
cli
and
and
in
into
xor
imul
pop
int
jge
inc
sarb
sti
cmp
lea
xlat
data16
lret
cmpb
sarl
inc
jle
ja
sub
hlt
add
sub
sub
out
or
mov
jae
inc
aad
aas
jbe
ja
xor
and
dec
ficoml
iret
ds
mov
fcoml
stc
cmp
mov
xlat
pop
jmp
rcll
jbe
out
adc
xchg
into
fwait
lods
ret
jnp
popa
sub
pop
sub
repnz
jp
cltd
sti
xchg
or
jecxz
xor
add
cmp
add
push
into
jbe
in
sbb
xchg
int3
xchg
ljmp
repnz
divl
xor
arpl
inc
movb
ds
rolb
jg
inc
scas
pop
jge
add
fcmovnbe
cs
push
mov
and
insb
cmp
add
and
test
ljmp
ret
adc
mov
in
mov
push
xchg
fwait
mov
jae
ret
addl
cmp
xor
and
rol
dec
in
stos
inc
xor
outsb
add
push
jbe
jno
in
sbb
jl
jmp
xchg
mov
and
xchg
lret
mov
inc
push
rorl
lods
xor
xchg
dec
pop
movb
dec
rorb
fldl
push
ja
xlat
mov
xor
mov
and
mov
insb
pop
fs
cmpsb
test
mov
enter
scas
mov
mov
stos
adcl
cmp
cmp
and
dec
adc
imul
mov
add
mov
inc
dec
xchg
shll
daa
aad
sub
rorb
les
lret
das
out
pop
add
fs
js
dec
aam
sbb
or
pop
dec
insb
pop
mov
mov
or
sbb
in
sbb
imulb
inc
sub
jno
rcrb
xchg
jns
jbe
push
lret
pop
scas
into
mov
movb
inc
test
aam
sub
add
or
out
or
dec
aam
lret
movsl
add
lret
faddl
popa
insb
xchg
pop
sub
push
iret
imul
leave
outsb
aas
fcomps
inc
test
lds
xor
mov
es
push
aam
push
clc
insl
lret
mov
xchg
decl
sbb
cmp
xlat
mov
mov
arpl
out
cmp
or
pop
push
rorb
xchg
les
xchg
lret
push
js
mov
mov
es
add
mov
xchg
lahf
jl
call
push
notb
lcall
lods
mov
in
rorb
cmpsl
or
and
dec
lcall
pushl
pop
mov
sbb
mov
mull
lret
movb
mov
out
movsb
es
add
jae
lret
sbb
int3
inc
mov
cmp
into
or
clc
clc
leave
jmp
add
enter
mov
in
mov
mov
mov
mov
scas
lret
test
and
inc
jb
jne
or
xchg
out
in
test
lods
outsl
data16
pop
into
sbb
aam
xor
xchg
pop
jbe
movl
jge
ret
hlt
subb
push
jecxz
aaa
pop
xor
insl
in
popf
lea
mov
sbb
xor
mov
jecxz
je
cmp
lret
dec
mov
cmp
movsl
pop
jnp
shlb
dec
sbb
xor
imul
sub
pop
fidivl
clc
lret
into
ljmp
or
dec
loop
xchg
cmp
popa
xchg
fnstenv
int
ss
idivl
dec
adc
je
xchg
push
xchg
push
mov
subl
xlat
push
insl
jne
xchg
push
out
imul
jae
insb
sahf
sbb
sub
addr16
call
aam
sbb
pop
out
enter
inc
es
and
ja
mov
mov
out
mov
push
loop
sub
or
int3
ds
inc
xchg
fldcw
subb
xlat
pop
imul
or
jp
add
sbbb
mov
push
aaa
es
dec
insb
das
sub
out
movb
popf
xchg
jae
cli
ret
out
cmp
je
sbb
enter
rcll
or
xchg
push
push
movl
rorl
sub
jbe
xchg
mov
sti
jge
xor
pop
lds
fucom
in
add
into
fmuls
mov
pop
in
pop
dec
sbb
popf
loop
cld
dec
push
test
dec
mov
outsb
out
cwtl
jp
sbb
or
jmp
hlt
pop
out
pop
inc
test
jl
mov
mov
jns
add
jbe
test
fildll
ja
mov
stc
lcall
push
mov
lret
xor
out
sbb
ja
hlt
int3
dec
mov
jo
lret
push
sub
ret
cmp
js
or
in
ret
ss
ljmp
sbb
int
adc
stc
jle
sub
nop
out
testb
sub
pop
mov
adc
pusha
pop
mov
out
cmc
dec
inc
rcll
mov
jae
test
lret
inc
scas
sbb
aam
pop
mov
movsb
sbb
pop
push
mov
jbe
xlat
daa
hlt
in
xor
xchg
dec
stos
ror
stc
js
rcr
repz
lahf
decb
inc
cmp
and
out
in
jne
cmpsl
fnstsw
mov
cli
insl
inc
inc
mov
ss
popa
in
outsb
mov
dec
jmp
mov
adc
std
pop
pop
imul
cs
jo
loopne
dec
mov
iret
pop
out
fisubl
mov
lret
ficomps
cli
jge
mov
xchg
push
into
das
mov
xchg
add
stc
rol
into
inc
cmpsl
outsb
gs
adc
mov
xor
arpl
inc
decl
jg
in
movsb
xchg
into
insb
inc
adc
adc
mov
cmp
cmpsl
lcall
dec
pusha
fs
mov
jo
jge
ljmp
push
gs
iret
addl
aaa
loope
scas
jo
roll
sbb
add
movsb
shr
je
pop
mov
push
xchg
dec
cmp
sahf
pop
mov
and
xor
rcl
test
mov
inc
test
pop
mov
add
cld
sub
ss
cld
push
rcrb
repnz
icebp
xchg
xlat
lret
ret
ljmp
dec
mov
cmpl
ret
cli
test
sub
loope
jb
xchg
xchg
test
sarb
dec
xchg
push
pop
push
lcall
jl
jns
mov
arpl
sub
or
pop
outsl
or
jno
jmp
lods
test
sbb
repnz
fiadds
shlb
mov
aam
rclb
jnp
sarl
mov
insb
fcoms
fs
cmp
pusha
aaa
arpl
push
pop
outsl
rcl
popa
adc
mov
jecxz
push
addr16
adc
int3
out
adc
and
ret
mov
arpl
cmp
xchg
xchg
jmp
js
call
notb
adc
sub
push
decl
jo
movb
jbe
push
pop
mov
insb
push
mov
push
add
pop
es
rcr
mov
cmp
inc
data16
sub
fst
or
cwtl
cld
sbb
mov
out
fcom
lret
mov
outsl
dec
cmpsl
push
icebp
addb
sbb
lock
movsb
mov
test
int3
xchg
mov
pop
cmp
xor
lock
pop
mov
lods
jle
adc
lea
ja
imul
dec
rcl
cld
dec
in
popf
std
inc
mov
mov
push
dec
mov
cli
lods
pop
mov
mov
mull
cld
jne
pop
js
push
fisubl
adc
fidivrs
xchg
insb
aaa
call
dec
sbbb
push
nop
push
inc
out
test
rcl
mov
or
sub
les
mov
iret
into
cli
out
rorb
push
push
xchg
push
outsl
jmp
or
popf
sbb
into
xchg
xchg
imul
mov
lret
inc
push
loope
pop
pop
xor
xchg
rolw
rorb
jmp
nop
cld
xor
scas
xchg
dec
mov
mov
into
addb
test
jno
adc
aas
or
lret
pop
out
fwait
adc
es
jne
jae
pop
fnstcw
in
repz
insl
enter
pop
xor
lock
mov
inc
out
mov
imul
cmp
cli
cld
subl
into
mov
add
mov
mov
fisubs
mov
xchg
iret
mov
cmp
mov
xchg
and
out
fistpll
pop
scas
jmp
int
push
pusha
out
mov
inc
mov
movsl
pop
scas
aas
add
dec
pop
arpl
fdivrl
mov
jae
pop
inc
dec
mov
aad
daa
fisttpl
mov
in
mov
into
popa
jmp
inc
stos
push
xorl
adc
test
sahf
rcl
xchg
in
xchg
lret
push
xchg
lods
mov
jle
dec
xor
fwait
inc
or
into
xchg
and
out
push
or
mov
jbe
aam
adc
les
jae
testb
add
shlb
sbb
in
or
xlat
xor
push
and
xchg
pop
clc
jecxz
dec
mov
mov
or
pop
jno
mov
mov
or
add
jbe
jmp
out
mov
int3
push
sub
sbb
out
mov
fs
and
test
mov
outsl
sub
cvtps2pi
popa
mov
test
add
bound
data16
sub
mov
sti
xchg
jae
push
cmp
movsb
and
int
push
pop
xchg
fwait
stos
mov
xor
jne
rol
xchg
jns
cltd
sub
add
in
ds
xor
push
pop
xchg
pusha
sbb
sub
mov
adc
out
rcl
xchg
sbb
xchg
add
and
pop
cmp
xchg
pop
es
ja
lret
sahf
test
xchg
pop
popf
push
sub
lods
imul
ss
daa
and
jg
push
xor
lret
std
push
mov
mov
cmp
and
rclb
cmpb
ret
stc
xchg
xchg
pusha
jb
shll
adc
mov
mov
mov
mov
push
and
stc
sbb
sub
fldt
push
in
fmuls
in
incb
in
xchg
movsb
push
lods
pop
fnsave
into
jl
lds
in
inc
jne
lods
imul
addr16
loopne
icebp
rclb
lock
int
jge
pushf
pop
std
lahf
xorb
lds
out
xchg
daa
ljmp
dec
add
adc
mov
sbb
push
dec
push
xor
insl
xor
stos
inc
or
and
jl
xor
push
sbb
rcrl
adcb
in
jle
jae
lahf
ljmp
mov
jns
push
scas
xchg
jno
repz
cld
sub
leave
pop
inc
ds
in
jae
shlb
mov
nop
pop
sbb
movsl
stos
cmpsb
sub
jns
dec
mov
fcmovnbe
jmp
daa
sub
push
fisttpll
repnz
popa
repz
fcoml
jnp
pop
cmpsl
push
push
test
add
lds
lcall
jge
test
lea
aaa
cmp
cmpsl
push
into
arpl
in
sbb
movsl
ror
into
xchg
aad
fs
push
and
mov
xchg
int
shll
in
jo
add
stos
dec
daa
xchg
jle
lock
jbe
scas
insb
into
cmc
cmp
sbb
lahf
mov
dec
es
fmulp
movsb
mov
push
or
push
imul
and
mov
adcl
out
inc
in
out
pop
loopne
test
jo
cli
out
jb
push
clc
sbb
in
mov
sub
cmp
scas
popf
or
add
sub
sub
fstps
jae
mov
inc
add
mov
lahf
cmp
lea
and
jns
into
dec
dec
or
xchg
xchg
inc
xorl
xchg
clc
call
cmp
xchg
jae
adc
fcompl
andl
mov
arpl
or
insb
test
inc
push
mov
pusha
loopne
mov
fcomps
aam
cmp
dec
dec
pop
ds
shll
enter
cmpsb
adc
adc
fs
sbb
xchg
rol
cmp
addl
mov
out
loop
mov
stc
pusha
int3
or
xor
pop
push
mov
cmpsb
or
loopne
fidivs
shll
jne
mov
pop
into
sbb
pop
repz
mov
sbb
dec
and
lcall
mov
xchg
mov
inc
sbb
cltd
iret
push
or
stos
inc
imul
in
fimull
xorb
push
xchg
cmp
into
jno
push
int3
jnp
mov
pop
inc
test
and
fnstcw
enter
mov
insl
movsl
out
sub
rcl
pusha
jno
icebp
xchg
push
xlat
rorl
xor
pop
mov
xchg
inc
dec
add
jge
xor
repnz
inc
arpl
dec
xchg
pop
data16
mov
add
xor
xchg
mov
outsl
mov
mov
sub
mov
or
idivb
pushf
sbb
in
mov
jl
lods
push
mov
adc
cmp
inc
fldl
imul
je
jg
xchg
fxch
sahf
sbb
mov
mov
xor
inc
inc
cmc
lock
and
test
mov
rclb
outsb
loop
cmp
adc
shrl
xchg
push
sti
jle
imul
cmp
jmp
xchg
movsb
pusha
fcmovbe
and
stos
mov
addr16
xchg
into
std
jge
int
fwait
mov
xchg
mov
xchg
add
je
adc
cltd
int
push
push
inc
icebp
mov
and
xchg
xchg
lea
and
sbb
jmp
daa
hlt
int
scas
cmp
sbb
enter
rcll
sahf
xchg
xor
xchg
mov
out
pop
mov
std
or
adc
adc
pop
roll
shl
icebp
dec
xlat
mov
or
cmp
dec
aad
into
mov
push
push
fidivl
jmp
rcr
dec
xor
stc
sbb
push
sub
cmp
pop
jo
ljmp
fstpt
insb
xchg
subb
mov
shl
stos
dec
dec
jp
or
add
out
add
push
stc
ja
xor
jnp
lods
idiv
test
pop
mov
lahf
popf
sub
push
jecxz
or
xchg
sub
jnp
data16
int
adc
enter
mov
push
lock
pop
add
rcrl
mov
adc
add
ss
ret
mov
jp
mov
dec
pop
repnz
xchg
cmp
lds
jmp
decl
inc
pop
lods
in
je
out
in
imul
into
bnd
aaa
sub
inc
idivb
add
mov
xor
out
repz
sub
mov
in
frstpm(287
cmp
insb
fwait
mov
mov
shl
ljmp
cmc
inc
lds
xor
repz
add
pop
fsubs
push
pcmpeqd
inc
push
lret
push
ljmp
mov
adc
jg
xchg
mov
inc
jle
clc
jno
dec
rcl
mov
jne
xor
decb
pop
int3
lods
adc
lcall
sub
rorl
insl
outsl
xor
xchg
hlt
and
arpl
clc
xlat
std
cmp
pop
pop
shlb
xor
movsb
ljmp
sbb
or
jbe
mov
lock
in
cli
data16
in
push
lcall
mov
imulb
out
or
or
xchg
pop
fcomps
adc
gs
sti
mov
fidivrs
xorl
or
iret
repnz
scas
xchg
cwtl
xchg
cmp
out
push
ljmp
xchg
adc
xor
imul
xchg
bound
scas
loop
adc
sar
test
stos
mov
dec
ret
fs
fwait
sub
push
sbb
jmp
cli
iret
inc
xchg
lret
cmp
leave
mov
ja
mov
xchg
hlt
fcoms
int
test
push
cltd
mov
push
sbb
inc
popa
jmp
adc
jecxz
jp
aas
mov
inc
fdivr
push
mov
aad
jbe
insb
rcl
xor
test
push
mov
gs
cmp
mov
stc
test
sbb
xchg
xchg
pop
sbb
in
inc
or
lock
stos
jo
jecxz
movsb
scas
xlat
cwtl
lcall
jns
aad
xor
aaa
in
ljmp
mov
xchg
and
or
pop
jl
lret
mov
mov
mov
mov
out
cmpsb
inc
test
xchg
into
lcall
push
push
pusha
mov
pusha
aam
adc
mov
es
push
adc
push
hlt
test
add
jecxz
sub
subb
lods
out
ss
fs
dec
jne
dec
mov
pop
pop
xchg
repnz
jo
aas
push
out
je
dec
or
lahf
adc
daa
inc
xchg
insb
mov
addl
push
mov
xchg
pop
push
and
aas
cmpsl
dec
int
ss
or
insb
out
push
in
inc
fucomi
push
rol
loop
movsw
dec
lret
int
scas
mov
inc
jne
push
mov
sub
inc
xchg
inc
aam
cmp
jne
push
jne
js
push
or
add
dec
dec
dec
into
stc
lret
fisttpl
out
cmp
scas
repnz
rcl
test
or
mov
jmp
iret
cwtl
fs
jecxz
jns
push
mov
adc
jmp
jbe
int
mul
repnz
daa
pop
aaa
jmp
jecxz
or
into
jne
stos
in
pop
addr16
cmc
push
adc
ss
pop
ret
or
rol
imul
or
out
pop
dec
jecxz
loop
sbb
out
jnp
or
mov
notb
jbe
jmp
sub
outsb
xchg
and
lods
sahf
aas
jns
in
out
mov
adc
sbbb
lret
shll
cmp
push
addr16
mov
lret
pushf
cmc
adc
rclb
mov
rclb
into
sahf
outsl
cwtl
into
pop
mov
inc
adc
sbb
pop
add
pushf
out
inc
imul
xorb
jl
aaa
sub
jne
jb
rolb
js
jns
jge
xor
and
sbb
push
test
inc
pop
pop
fisubs
jnp
fldenv
out
pushw
aad
sub
mov
int
lods
dec
movsb
hlt
jecxz
subb
push
pop
sbb
aad
xchg
pushf
pop
sbb
das
sub
pop
popa
hlt
not
out
sbb
arpl
cli
or
cmp
mov
xor
mov
aam
sub
jb
int3
cmpsl
xor
xchg
inc
mov
ja
cmp
sub
ljmp
dec
fildl
mov
lcall
call
lock
sbb
lret
xor
arpl
dec
loop
cmp
aad
mov
and
mov
lea
push
push
adc
add
pop
sub
cwtl
xchg
outsl
mov
cmp
mov
testb
add
out
xchg
jle
addr16
out
mov
leave
ret
add
inc
dec
push
mov
and
mov
cmp
out
xor
aam
or
xchg
rcl
dec
xor
pop
sbb
mov
push
lahf
scas
or
bound
xor
cwtl
les
fcomi
push
sbbl
enter
sti
lds
jmp
popa
roll
cmpsb
mov
ja
adcl
xchg
and
pushw
imul
gs
enter
lret
into
test
dec
xor
xchg
mov
jne
iret
mov
and
test
fs
push
jl
cmp
push
lret
aas
jge
jns
loopne
fxch
das
popa
lret
push
jg
icebp
aad
sbb
sbbl
jae
sbb
xchg
cmp
insl
lods
inc
clc
sbb
jo
xchg
je
in
push
push
ret
mov
push
jge
sub
cmpl
stos
xchg
adc
jl
jp
xchg
loope
jnp
nop
adcb
pop
and
adc
sub
cmpsl
add
mov
and
jns
xchg
mov
push
movsb
insb
scas
push
push
xor
xchg
bound
jnp
pop
fldl
push
sti
scas
xchg
sub
jp
ret
scas
mov
push
dec
pop
dec
pop
dec
fucomi
jnp
jae
mov
or
push
push
gs
lods
mov
xor
and
ror
or
stc
lahf
addb
xor
movsl
movsb
push
lret
pop
adc
mov
rolb
push
insb
xchg
lods
ss
sub
lcall
push
and
cmp
insb
cmc
dec
cmp
jecxz
push
cli
into
rclb
imul
in
mov
mov
xlat
andb
scas
and
inc
stos
rorb
jp
int
leave
xchg
int3
push
xchg
lret
mov
out
inc
das
mov
gs
subl
clc
aam
rcl
fcmovne
fs
pop
sub
cmp
dec
or
adc
mov
jbe
push
mov
add
dec
fisubs
loopne
lret
xlat
cmp
jp
xchg
sbb
dec
stc
icebp
sub
jge
enter
insb
and
jmp
dec
lret
cmp
inc
jecxz
xchg
test
in
mov
lret
test
aad
jl
sbb
filds
out
cmp
stc
push
icebp
aam
jg
mov
jp
shlb
jne
xor
sbb
jecxz
adc
sub
jge
iret
pop
lret
jbe
scas
dec
popf
lret
nop
dec
stos
ja
ror
gs
fstps
add
cmp
cmp
fnsave
je
sbb
fisttpll
loope
fisubrl
sub
js
ret
int
es
dec
loope
je
xlat
lock
call
xor
sbb
dec
aaa
mov
jg
mov
adc
in
mov
idiv
sub
mov
cmc
out
jg
fiaddl
sbb
mov
ss
pop
or
add
jecxz
pop
leave
lods
icebp
jbe
lock
push
into
ret
xor
add
xlat
cltd
pop
outsb
dec
iret
loop
cmp
push
dec
push
cmp
sbb
push
rcrb
pop
sub
dec
xor
add
jecxz
ret
adc
inc
call
aas
pop
xor
xchg
mov
sarb
jl
lods
lea
sbb
jno
shlb
pop
push
xchg
popa
mov
dec
dec
loop
sbb
fsubs
mov
mov
inc
loope
repnz
lcall
ret
call
inc
movsl
xor
mov
cmpsl
iret
pop
push
cs
daa
add
hlt
popa
and
aad
cmpsl
jne
push
rolb
lahf
or
lcall
cmp
fidivrl
jbe
je
mov
arpl
pusha
cmc
shll
xchg
dec
std
js
pop
adc
mov
fldenv
inc
popa
or
push
fildl
mov
decb
pop
lahf
mov
or
mov
in
mov
sub
xchg
mov
stc
test
and
in
jnp
leave
xchg
insb
xlat
lods
pushf
sub
or
inc
xlat
fcmove
ja
inc
cmc
not
xchg
aad
stos
lret
or
xor
adc
ja
mov
sbbb
stos
fdivr
out
inc
inc
ss
in
rorl
push
push
rolb
nop
xchg
aad
dec
mov
jecxz
sbb
cs
loopne
sti
andl
aaa
inc
scas
mov
mov
and
sbb
pushf
les
dec
mov
push
dec
push
addr16
lahf
int3
out
loop
xor
push
lds
ret
ret
mov
repz
rcrl
jne
std
xor
imul
ss
aad
xchg
jmp
das
mov
std
lret
dec
shll
xchg
daa
mov
mov
sub
pop
fdivrp
js
jl
sub
xor
outsb
push
fsts
movsl
lret
pop
sub
pop
and
mov
or
mov
bound
movsb
filds
outsl
and
jecxz
out
mov
mov
sbb
mov
jmp
sub
ret
add
push
and
inc
mov
ds
sarl
out
stos
push
dec
loope
jb
jbe
cmpsb
sbb
imul
cmpsl
add
loop
xor
popf
adc
xor
dec
add
push
div
cmp
scas
push
outsb
negb
int3
lret
mov
mov
je
adc
fsubrs
dec
lods
jbe
into
push
test
push
cmpsl
mov
fldl
jnp
int3
adc
pushf
mov
pop
les
ss
fiadds
iret
cmp
movsb
shrl
inc
stos
mov
xchg
xchg
in
je
loope
push
lret
adc
adc
or
rcll
out
mov
out
pop
lret
xlat
in
insb
aaa
stc
int
inc
jle
mov
mov
lock
clc
inc
aad
data16
ds
xchg
cmp
add
push
mov
inc
push
or
int
imull
nop
and
adc
scas
xchg
in
xor
in
into
fwait
loope
cld
lds
inc
add
jbe
jnp
inc
cmp
rcll
mov
and
test
jbe
lret
jmp
test
lret
bound
mov
pop
or
xchg
jge
lret
inc
out
mov
dec
pusha
roll
aaa
mov
mov
jecxz
jnp
das
movsl
dec
add
ss
and
pop
mov
les
int3
pusha
mov
aam
mov
mov
pop
clc
jp
je
pop
movsb
fcoms
mov
push
push
mov
scas
jbe
or
adc
push
push
idivl
or
and
sahf
sbb
dec
adc
das
sbb
dec
scas
scas
sbb
push
and
jl
mov
cld
mov
jne
mov
rcrb
test
cli
test
es
cwtl
dec
mov
into
and
outsl
sbb
out
mov
jmp
jg
fs
out
imul
dec
xchg
sbb
test
shrl
jnp
sbb
mov
xchg
or
jge
cs
push
lock
mov
jp
sti
lcall
mov
adc
decb
adc
mov
clc
push
fcomp
insl
xor
xchg
mov
and
mov
pop
sub
imul
int3
jb
xchg
aam
rclb
push
jns
cmpsl
jl
cld
jb
out
lret
mov
mov
pop
and
dec
into
mov
mov
lret
outsb
cmpsl
int
pop
test
adc
mov
cmp
mov
push
sbb
loopne
xchg
lcall
aad
mov
sbb
xchg
xchg
sahf
cld
in
addb
sub
mov
jno
insl
push
inc
mov
repnz
sub
mov
addl
mov
add
inc
inc
jae
push
cltd
pop
subl
sub
pop
fsubs
jbe
adc
jecxz
and
aam
xlat
aam
nop
and
or
pop
and
das
sbb
lret
fisubrl
xor
push
xchg
xchg
add
sbb
in
sbb
add
bound
mov
sub
mov
dec
loopne
pop
sbb
xor
scas
jae
jns
test
fcmovnbe
mov
idiv
call
lahf
fdivrs
mov
cmp
ret
out
dec
inc
daa
add
push
mov
mov
push
inc
pop
addr16
push
scas
test
mov
and
lock
repnz
inc
pop
lahf
jg
test
out
cs
xorl
mov
inc
mov
push
jb
mov
inc
pop
mov
sub
ss
jne
pop
out
sarl
daa
shrl
add
enter
iret
cli
stc
fst
cmpsb
xchg
adc
out
jp
sub
ret
inc
lods
test
adc
push
addb
rcr
lds
mov
dec
rcl
mov
or
adc
test
add
int3
adc
push
stos
sub
mov
popf
dec
jmp
sbb
or
in
std
pop
inc
mov
push
sub
leave
dec
jl
inc
xchg
jecxz
dec
je
adc
jnp
push
add
cmpsl
out
ja
arpl
add
push
dec
or
js
movsl
pop
lcall
inc
and
push
sbb
nop
scas
loop
push
jl
shrl
push
rorl
jb
fcmovbe
out
sbb
lahf
outsb
pop
mov
test
lods
push
in
mov
sbb
out
push
xchg
in
xchg
cwtl
ret
es
ret
mov
int3
outsl
addr16
push
push
mov
in
std
orb
nop
push
test
mov
adc
inc
fnclex
jnp
rcr
push
sub
lea
inc
dec
jae
lret
push
into
cmpsb
mov
jne
hlt
xchg
insb
mov
cmp
int3
jns
xlat
jbe
cltd
aad
add
fadd
pop
inc
mov
xchg
jl
js
push
insb
enter
mov
cmc
inc
mov
pop
sub
aam
jge
sub
out
xchg
xorl
out
pop
xchg
cltd
mov
add
stc
mov
xchg
or
dec
ret
jle
adc
test
ficoml
xor
repz
cltd
mov
mov
cmp
pusha
out
push
je
pop
jecxz
or
scas
fsub
ds
inc
inc
mov
cmpl
insl
clc
sarl
out
lods
jmp
into
pop
xor
das
jbe
dec
xor
aam
lods
cmp
mov
mov
dec
mov
popa
mov
fnstcw
mov
loopne
loop
push
lock
rcrl
push
jns
mov
stos
ficomps
mov
mov
pop
cld
ret
shrl
xor
ds
inc
shrb
cli
sbb
xchg
and
scas
in
mov
or
arpl
int
jl
ftst
js
dec
js
std
or
lahf
jns
and
xchg
adc
js
iret
pop
pusha
mov
daa
roll
les
cmc
cmp
loopne
filds
pop
mov
in
and
out
xchg
gs
clc
jbe
ret
insb
sahf
dec
mov
or
add
add
inc
xchg
add
mov
push
ja
es
std
popf
pop
push
mov
sarb
jae
mov
push
cmpsb
cld
repz
es
jp
dec
xor
mov
js
std
cmp
imul
icebp
jnp
sbb
mov
imul
punpcklbw
rolb
push
sarl
jno
xchg
push
dec
ljmp
pop
adc
push
or
imul
ljmp
cmpsl
repz
inc
popf
fs
jae
or
sbb
fldz
imul
into
adc
aas
and
test
lret
pop
cld
xor
jmp
lea
in
not
pop
mov
lods
das
popa
cmp
xchg
or
repz
adc
adc
jae
ret
mov
call
and
out
xchg
adc
jg
push
cmp
jp
dec
jb
loope
daa
cld
push
scas
sbb
fs
sbb
jmp
mov
std
push
inc
shlb
mov
roll
mov
aam
cmc
mov
pop
push
cmp
popa
lahf
arpl
mov
dec
mov
cmc
rolb
loope
pushf
adc
jae
sbb
stos
push
cltd
jp
rorl
scas
pop
add
movsl
jb
mov
inc
sbb
aas
pop
rcrb
inc
das
outsb
scas
fdivrs
std
out
push
mov
not
adc
dec
lock
test
daa
xor
mov
js
add
in
rol
sub
dec
aas
push
jne
pop
test
mov
dec
out
out
and
sbb
lret
outsl
xchg
or
dec
xchg
lds
jbe
cmpsb
mov
out
dec
popa
imul
pop
xlat
push
gs
or
dec
repnz
aaa
iret
xchg
pop
icebp
insb
out
add
xor
push
cli
xchg
mov
lds
mov
mov
sahf
movsl
pop
push
fistpl
mov
push
adc
push
xchg
js
or
loope
and
add
clc
xchg
mov
aam
mov
mov
aad
or
xor
icebp
xchg
addr16
shlb
in
je
fistps
xchg
cwtl
pop
adc
mov
pop
out
adc
ret
cmp
lret
adc
sub
or
mov
lods
cld
xor
mov
add
jp
popa
and
leave
pusha
pop
sub
mov
rorl
jno
in
mov
cld
xor
enter
push
ret
mov
xor
popa
fadd
push
lds
pop
fs
mov
shll
outsb
mov
data16
out
test
or
jb
dec
dec
jae
adc
loop
mov
or
pop
ss
outsl
xlat
cwtl
cmp
cmp
movsb
popf
and
push
or
cmpsl
out
mov
cld
sahf
push
stc
shlb
sub
dec
xor
cmc
sarb
xchg
sbb
bt
jmp
push
ss
push
std
popa
push
call
aam
fdivrl
or
add
cmp
enter
pop
add
pushf
mov
scas
inc
cmp
dec
xchg
rclb
ja
inc
mov
js
out
mov
mov
sub
es
clc
pop
dec
inc
and
mov
xchg
dec
adc
sbb
fsubrl
aas
xchg
dec
and
cmp
sahf
cmpsl
mov
dec
xlat
pop
imul
rcr
push
outsl
push
jecxz
movsb
nop
push
xchg
pushf
push
sub
adc
popa
bound
rcll
in
aas
sbb
sbb
outsl
jmp
lods
or
xchg
add
mov
inc
dec
mov
test
jle
sbb
inc
ja
into
pop
out
mov
xchg
in
int3
je
push
xchg
cmc
xchg
fcoms
lock
aaa
shr
arpl
add
shr
movsl
lahf
ja
rclb
rclb
addr16
lret
pop
divps
push
and
sbb
in
ret
imul
or
outsl
mov
xor
movsb
pop
std
js
cld
fisubrl
sti
inc
lcall
outsl
jno
jne
mov
adc
cwtl
insl
and
mov
idiv
nop
in
int3
mov
dec
and
push
cmp
lahf
sbb
daa
cs
xchg
pop
mov
inc
or
sub
sar
xor
loop
or
mov
push
int3
loope
subb
stc
lret
cwtl
enter
mov
push
mov
mov
mov
icebp
sub
sub
lock
xchg
inc
inc
outsl
addr16
push
clc
xor
sbbl
or
in
cmp
cli
arpl
pop
addr16
leave
mov
cmp
pop
pop
jo
pop
pop
test
loop
loopne
mov
cmc
mov
daa
push
ds
sti
cmp
movsb
pop
rcll
addr16
sbb
int
mov
adc
in
lods
cli
push
and
adc
popa
jmp
or
icebp
sub
dec
loopne
mov
add
lods
mov
ds
mov
add
cmpsl
leave
mov
inc
into
jae
jno
stos
dec
push
xor
gs
js
pop
mov
or
lock
out
mov
fwait
pop
mov
fcom
cmpsl
sbb
lds
ss
test
xorl
sbb
popa
mov
nop
gs
inc
adc
sub
shl
repz
mov
xchg
jnp
sbb
adc
mov
rclb
aam
ss
call
push
jnp
out
sub
dec
test
repz
jg
out
testb
jb
lea
lods
pushf
lcall
insl
int3
icebp
mov
clc
cmpsl
pop
jne
es
call
test
aaa
sbb
in
push
cmpsb
dec
addr16
sub
mov
or
sbb
mov
les
push
filds
pusha
ret
push
mov
mov
imul
pop
les
pop
push
xchg
cmovo
js
movsl
fnstcw
negl
push
out
mov
dec
xor
xor
inc
hlt
fsubrs
out
dec
test
cmp
mov
push
push
cwtl
aas
fs
cmp
xchg
jne
in
adc
push
test
je
mov
add
mov
cmp
pop
into
and
pop
push
inc
bswap
dec
ficomps
mov
stc
cmp
cmp
jl
dec
ss
dec
fists
jge
popa
je
into
scas
push
push
mov
inc
adc
pusha
push
push
pop
nop
mov
jmp
jb
adc
adc
arpl
test
rolb
inc
ret
outsl
sarl
movsl
cmp
fdivp
sarl
cld
int3
jbe
into
mov
push
pop
enter
lods
xchg
stos
and
ljmp
push
sub
std
sar
pop
and
in
fistps
and
and
cmp
pop
and
adc
into
cmp
icebp
jb
pop
call
int
xor
and
cmp
adc
xchg
mov
stos
pop
sbb
mov
in
lahf
insl
movsl
inc
fildl
mov
mov
jge
cmp
aas
sbb
jo
xchg
fsubrl
jns
pop
popa
cmpsb
jge
jmp
rorb
jne
add
jns
jge
rcrb
orb
and
icebp
xor
or
push
xlat
pushf
mov
sbb
adc
sbb
leave
je
mov
mov
in
jbe
cmc
push
jne
add
sbb
xor
pushf
pop
es
dec
aaa
or
int3
in
xor
mov
pop
inc
jo
inc
fwait
mov
aas
pop
mov
add
outsb
fstps
dec
jnp
icebp
out
mov
sub
movb
arpl
mov
lret
lret
loop
xchg
add
mov
nop
mov
mov
and
cld
push
sbb
push
outsb
fsubr
inc
jg
mov
fisubl
sahf
clc
shrb
jp
lret
jbe
and
inc
pop
sbb
xor
mov
adc
lret
and
xchg
jbe
inc
iret
lods
or
loopne
add
pop
sbb
mov
in
movsb
test
jbe
movsl
sbb
ja
or
outsb
stos
xchg
cmp
jmp
cli
popf
pop
jbe
xor
xchg
and
loopne
pop
pushf
jns
pop
push
out
push
sub
sti
lret
jae
sub
inc
and
outsb
sarl
mov
dec
clc
sbb
cwtl
or
sbb
lret
js
push
fistpll
fmuls
aad
sub
xor
push
icebp
add
loope
mov
dec
adc
add
pop
adc
mov
inc
fdivp
cmp
inc
in
imulb
ljmp
stos
sub
xchg
ds
fucomip
cmc
mov
jecxz
sub
dec
int3
jmp
xor
dec
xor
repnz
push
mov
xchg
or
add
mov
xor
rolb
subb
cmp
fwait
in
push
and
push
pop
mov
sbb
push
popf
push
dec
lahf
inc
ljmp
cmp
leave
fwait
cmp
jle
mov
xchg
xor
int
je
push
adc
sti
jne
aad
add
lret
rcl
dec
loope
push
xchg
cmp
mov
inc
ja
push
jnp
jge
push
repnz
adc
test
dec
jo
sub
movsl
mov
out
negb
outsl
xchg
adc
jecxz
xchg
ja
insb
into
pop
rol
push
sahf
add
jecxz
test
jecxz
rcrl
inc
clc
push
jp
pop
xor
popf
aaa
sub
xchg
es
cli
inc
gs
int
ret
rclb
jns
mov
mov
mov
stos
jmp
or
and
mov
sub
xchg
xor
lods
jge
xlat
icebp
pusha
dec
push
and
ja
jl
aaa
add
scas
out
addr16
sqrtps
lret
push
xchg
inc
mov
outsb
push
mov
sti
xor
inc
jle
adc
push
inc
dec
ss
push
ret
push
fisttpl
int
sahf
scas
repnz
jb
pop
xor
inc
test
in
mov
mov
push
fimuls
push
out
add
inc
adcb
and
mov
dec
js
dec
shrl
jp
push
or
sbb
loopne
insb
or
xchg
data16
ficoms
and
adc
stc
mov
aas
sub
ret
imul
in
dec
int
push
mov
cmp
jg
push
ja
insl
cld
mov
adc
xor
inc
es
scas
out
dec
data16
jnp
dec
xchg
dec
mov
and
mov
sub
les
jmp
fnstcw
push
mov
push
sbb
mov
shlb
stos
or
xor
mov
pop
mov
iret
int
mov
idivb
lret
stc
stos
add
cli
inc
jns
jecxz
arpl
pop
cwtl
push
push
or
fldt
cltd
push
or
loope
jmp
push
loop
pop
xchg
negb
data16
movl
and
movsl
dec
push
fsubp
add
stc
test
das
xchg
xor
and
cmp
xchg
out
jmp
rorb
jb
hlt
mov
jbe
rcl
stc
js
xchg
out
fucomp
push
inc
loope
mov
and
outsl
push
imul
push
vmovdqa
lods
dec
sbb
mov
ljmp
push
cmc
mov
adc
jecxz
mov
adc
std
push
arpl
popa
rcrb
dec
push
sbbl
jp
shl
pop
iret
in
mov
filds
mov
jmp
fwait
ret
fcoms
inc
aas
nop
fimuls
fucom
xchg
sub
out
movsb
adc
jbe
fs
mov
mov
or
test
mov
jne
cltd
out
leave
sbb
movsb
shrl
inc
mov
mov
stc
lret
into
jb,pt
sbb
xchg
stos
repz
jge
js
push
xorl
gs
lret
nop
ljmp
dec
int3
arpl
cltd
or
add
shr
lcall
jp
fs
lahf
xchg
and
int3
mov
add
xchg
imull
jnp
jle
jmp
dec
repnz
jmp
int3
or
lds
aas
inc
rclb
sbb
dec
pop
sti
bound
imul
push
jecxz
xor
mov
inc
push
cli
repnz
test
add
ficomps
cmp
stc
testb
adc
xor
mov
data16
jae
or
xchg
mov
pop
mov
sub
std
xor
mov
xchg
push
ror
jmp
lret
cs
jmp
lret
gs
mov
scas
mov
mov
add
push
jp
cmpsb
stc
call
ret
mov
push
imul
mov
xchg
cmp
xchg
sub
out
rolb
pop
cmpsl
add
into
cmp
pop
sbb
loope
pop
mov
push
lahf
repz
in
pop
jnp
popa
pop
addr16
jl
int3
fs
shr
ret
adcl
and
test
in
arpl
mov
roll
xchg
movsl
pop
push
dec
mov
jmp
or
dec
in
cwtl
adc
daa
addr16
rcrl
les
sub
shlb
fidivrl
cmp
iret
push
shlb
dec
fisttps
hlt
push
jmp
cmp
int3
cmp
in
aas
rcl
pop
stc
lret
mov
adc
std
jb
cltd
and
push
mov
ja
push
js
popa
lret
nop
dec
and
lcall
ret
jl
jbe
xchg
xor
lods
xor
rcl
sub
jle
cmp
jmp
js
mov
pushf
add
jge
mov
movsl
inc
cmp
lret
in
xchg
sbb
inc
sub
dec
movsb
dec
nop
mov
xchg
ds
jmp
mov
cmc
int
fisubs
xor
jbe
adc
push
loop
push
cs
dec
mov
enter
add
xor
mov
xchg
mov
cmp
les
push
lret
fwait
mov
xor
pop
cli
divb
rorb
add
lock
pusha
xlat
xchg
test
icebp
xor
pop
sub
and
cmpsb
push
mov
jmp
inc
adc
das
ss
pop
and
inc
or
int
push
pop
adc
jg
rol
and
das
insl
jbe
xor
push
mov
sbb
loope
or
add
cs
inc
add
mov
or
sbb
xchg
std
push
movsb
mov
das
push
and
adc
jno
lret
xor
stos
push
fwait
or
test
mov
dec
fiadds
cwtl
pop
fists
push
in
test
ja
into
sbbl
and
jmp
push
pop
loopne
data16
arpl
dec
xor
xchg
jns
sub
das
jno
adc
sbb
in
pop
dec
mov
out
nop
rorl
adc
or
sti
js
dec
loop
imul
jp
jl
mov
add
mov
int
subb
push
dec
sbb
into
push
pushf
pop
mov
adc
scas
and
add
push
mov
mov
jae
in
aaa
fidivl
stc
dec
icebp
aam
js
xchg
into
xchg
xchg
les
cld
in
and
pop
sub
insl
sbb
cs
mov
xchg
mov
add
mov
ds
out
dec
pop
nop
mov
mov
das
mov
mov
dec
sub
push
xchg
iret
fcmovne
cmpsl
jp
aaa
adc
xor
jae
mov
xlat
pop
mov
in
clc
mov
arpl
shll
add
xor
adc
cs
aam
ret
xchg
outsb
divl
mov
push
iret
lcall
js
push
ds
popa
rcl
adc
jb
and
push
jne
imull
inc
pop
mov
daa
cmp
jbe
and
adc
aad
push
sub
mov
mov
das
pop
bound
jo
xchg
iret
jl
jne
jle
mov
in
cli
push
jo
mulps
aas
aaa
lock
or
int
ljmp
aam
jecxz
inc
rcll
cmc
cld
pop
lret
inc
and
pop
mov
inc
jbe
hlt
test
push
xchg
xchg
shrl
dec
push
jne
inc
out
pop
popa
inc
pushf
push
loopne
imul
xchg
decb
lds
inc
dec
pop
xlat
fidivs
push
call
pop
mov
loope
push
sbb
pop
in
mov
pop
inc
jnp
sub
into
xchg
jge
pop
inc
push
scas
adc
push
or
xchg
fcomi
negb
enter
in
sub
xlat
and
sub
movsb
pop
xchg
loopne
jb
insl
mov
jae
add
adc
push
aam
lods
sbb
xchg
cmp
xchg
xor
cmp
rcl
repz
fidivl
mov
notl
push
xor
mov
out
or
pop
mov
inc
push
ja
jne
push
mov
in
inc
loop
lods
repz
addr16
lods
hlt
xor
cmp
or
push
gs
aam
jbe
sub
adc
add
ror
gs
subl
fcmovbe
cwtl
or
cld
adc
or
out
xor
je
movsl
xor
inc
cli
rorl
sarl
sbb
int
movl
decl
popf
xchg
sarl
clc
jbe
jo
add
push
inc
bound
xor
jne
mov
push
xchg
in
xorl
push
mov
jo
imul
pop
adc
dec
fwait
aad
aas
and
into
sub
cmpsb
loope
sbb
and
adc
dec
test
xchg
daa
int
ret
repnz
or
sub
and
mov
loop
inc
shll
and
xchg
adc
scas
imul
mov
sbb
dec
mov
ja
adc
cmp
in
and
sub
lret
out
inc
mov
mov
and
out
inc
lret
sti
mov
push
push
inc
pop
pusha
rcl
outsl
movsb
test
adc
dec
push
ljmp
push
push
lahf
sbb
dec
stos
jo
adc
cld
sub
and
stos
mov
mov
pop
aam
or
arpl
mov
cmp
pop
xchg
call
dec
adc
fidivs
cmc
arpl
pop
fs
int3
in
jns
pop
mov
adc
cmp
int3
add
jbe
pop
arpl
dec
or
or
xor
xor
and
fstl
movsb
or
pop
xor
rcll
movsl
test
jp
pushf
inc
out
jnp
insb
popa
xchg
fadds
and
jl
in
jmp
sbb
ret
sub
push
pop
pop
or
cli
outsl
adc
call
or
stc
dec
fidivs
fwait
es
mov
mov
mov
shll
bndldx
dec
in
jecxz
and
cmp
xor
out
and
out
vlddqu
jge
es
ja
or
pop
fdivs
test
add
push
sub
sub
jne
pop
inc
jg
sbb
shlb
cs
sub
cld
arpl
xchg
pshufw
iret
inc
sbb
add
jg
push
insl
pop
push
or
addr16
mov
cli
adc
dec
cmp
arpl
xchg
add
out
mov
or
lcall
mov
push
jp
in
into
jmp
add
jmp
pop
lds
push
fcomps
aas
jno
mov
inc
adc
ds
sbb
sbb
lods
pop
xor
js
cmp
sub
mov
xor
and
into
mov
mov
push
jecxz
jae
movb
stos
mov
mov
xchg
cwtl
hlt
cmp
xlat
add
adcb
cmc
mov
mov
xchg
push
lret
cmpsb
in
jo
test
mov
testb
jle
fcmovnu
test
push
outsb
xor
jmp
divb
out
add
pop
add
add
push
adc
cmp
adc
jge
xor
mov
lods
hlt
movsl
rcll
sbb
cld
mov
js
mov
adc
cmp
lret
mov
repnz
push
mov
fwait
sbb
fidivrs
mov
cmc
mov
mov
adc
cmp
ds
loop
jge
test
insl
mov
sub
test
mov
int
outsl
dec
push
roll
movsl
imul
sti
jo
mov
lahf
js
push
or
rcrb
push
cli
pop
dec
bound
loopne
push
mov
jb
inc
shlb
repz
incb
mov
inc
sub
lds
roll
arpl
sbb
or
ja
dec
pop
or
sbb
icebp
fwait
mov
cli
and
pop
jge
mov
push
hlt
aam
or
leave
xor
rcrl
jno
mov
push
loopne
pop
dec
sub
push
inc
xchg
pop
subb
ffree
push
insl
hlt
clc
sub
jnp
push
sahf
mov
xchg
pop
add
ss
arpl
or
push
xchg
out
push
arpl
movsl
mov
jne
jmp
dec
push
jecxz
cmp
arpl
xchg
pop
sub
xchg
adc
jno
test
mov
and
loope
xchg
int3
stc
pop
subb
popa
ljmp
jge
jle
mov
imul
pushf
in
jecxz
adc
push
mov
ss
test
imul
mov
mov
mov
mov
mov
gs
aas
adc
jle
lret
pop
in
scas
xor
inc
inc
lods
orb
call
sub
mov
enter
adc
test
fnstsw
in
int3
aam
and
mov
pop
loope
lods
outsb
test
out
pop
subb
rol
or
inc
xchg
testb
mov
out
sarl
popa
in
cmp
or
pop
push
push
fwait
jle
xlat
test
insl
int
mov
jb
xchg
sub
xor
sub
sub
popl
arpl
cwtl
adc
aam
rorb
xor
test
and
rcl
data16
jmp
ss
bound
and
inc
inc
xchg
mov
pop
xor
lret
inc
out
stos
js
and
popa
mov
mov
loope
dec
leave
scas
decb
cmpl
lods
xchg
fdivl
ror
sti
pop
sbb
jle
insb
mov
push
inc
mov
dec
outsw
fs
cs
addl
fistps
mov
or
outsl
jecxz
fsubs
cli
mov
cmc
dec
push
mov
cmpsb
rcl
mov
or
fs
test
fwait
scas
cwtl
xor
out
dec
test
in
hlt
mov
dec
je
or
jo
fstpt
lret
mov
loopne
aam
leave
lahf
lods
mov
scas
sbb
fcmovu
int
xchg
sbb
xchg
mov
test
push
std
jmp
adc
jae
xchg
popa
hlt
xchg
or
mov
jae
stos
sbb
inc
daa
pop
into
adc
add
ret
dec
xlat
out
loop
mov
in
xchg
sbb
and
bnd
lret
loop
jg
xor
inc
dec
out
xor
aam
push
mov
movsb
subl
mov
ss
inc
inc
roll
je
and
aaa
out
test
idivl
push
or
mov
movsl
mov
or
insl
hlt
ds
pop
mov
jg
mov
dec
scas
push
push
push
popa
leave
imull
inc
jmpw
ret
jecxz
out
pop
xchg
sbb
add
xchg
movb
mov
das
popa
jbe
and
iret
jo
dec
test
inc
cwtl
je
or
xor
mov
scas
and
iret
aam
call
shlb
add
aas
lds
xchg
push
js
out
icebp
dec
sbb
fldt
add
cli
lods
jae
xor
repnz
pop
notb
addb
icebp
xor
push
xchg
cmp
pushf
or
or
orb
lods
jne
inc
mov
cli
jae
xchg
cltd
inc
scas
repz
in
test
movsl
push
into
sbb
dec
enter
lds
out
xlat
sti
loop
into
andl
daa
jo
mov
dec
sub
fdivrs
cld
popf
outsb
add
adcl
test
mov
pextrw
xchg
cmpl
xchg
nop
cmp
lret
sbb
lea
scas
insl
sub
into
push
and
scas
sbb
inc
scas
lods
xlat
xlat
pop
mov
adc
sarb
sbb
shll
sbb
mov
les
xor
or
aad
pop
mov
adc
and
lods
lock
shlb
jae
lds
sbb
mov
out
jno
pop
loope
lret
outsl
jle
ja
sti
int
adc
jmp
push
stos
push
or
pop
out
inc
fcoml
outsl
rcl
jno
sahf
lds
push
jae
popf
xorl
das
add
or
jle
movsb
inc
clc
push
scas
stos
fs
adcb
int
repnz
xor
repz
xorb
xchg
xchg
push
ret
pop
lret
call
lea
popf
dec
xchg
push
and
mov
mov
xchg
rcl
xor
notl
and
sub
outsb
xchg
jp
or
daa
cmp
jmp
testb
pop
pushf
repz
jae
cmp
in
mov
cwtl
sbb
in
mov
stos
gs
nop
lret
inc
shr
mov
push
push
mov
repnz
dec
arpl
mov
scas
leave
xor
loop
mov
xor
dec
in
xchg
jg
imul
mov
or
ficoml
icebp
nop
sub
in
fcompl
outsl
ror
inc
repnz
adc
dec
xchg
repz
jne
push
sbb
sub
add
mov
ret
mov
out
test
mov
push
in
dec
scas
into
mov
push
push
iret
mov
mov
mov
push
orl
xchg
movsl
pop
dec
push
in
sahf
mov
sti
add
loop
mov
jg
daa
iret
and
push
out
repnz
jle
cmpsb
sub
dec
dec
dec
mov
leave
lcall
xchg
sar
jecxz
xchg
push
orl
adc
sub
int3
clc
push
enter
rolb
call
or
aad
xor
jecxz
sbb
lods
arpl
pop
out
jl
loopne
jb
jecxz
pop
sub
cmc
sbb
mov
ds
lods
int3
adc
mov
pop
insb
xchg
pop
scas
int3
andl
mov
and
roll
in
jecxz
sub
cltd
movsb
pop
xlat
sub
adc
push
jb
mov
pop
sbb
ljmp
fcom
xor
call
sub
pop
jne
sbb
xchg
icebp
sahf
call
mov
lcall
addb
cmpsl
add
xor
stc
ljmp
test
sub
insb
test
cmp
pop
xchg
js
in
sbb
lret
jae
dec
hlt
jmp
sbb
movsl
ja
enter
test
pop
into
cmp
inc
xor
mov
sbb
not
mov
clc
les
cmpb
fisubs
sarb
dec
repz
xchg
mov
xchg
sbb
jmp
ret
imul
call
scas
mov
jmp
addr16
mov
sbb
das
sub
pop
xchg
push
fsubrs
dec
out
sub
push
std
fsubs
mov
dec
stos
cmpsb
jo
push
sbb
xchg
into
mov
cmp
sbb
lcall
push
enter
lahf
insl
mov
addr16
fnstenv
mov
cmc
jb
xchg
jbe
and
mov
xchg
fildl
in
into
dec
fwait
enter
jl
jns
fmuls
dec
test
jno
shlb
or
xor
dec
fs
stos
subb
mov
popl
jmp
dec
test
jbe
or
test
adc
test
sub
adc
and
xchg
add
into
jne
je
cmp
jns
adc
sbb
gs
test
inc
inc
es
adc
ljmp
mov
jmp
imul
push
dec
xchg
into
dec
cmpsb
pop
enter
cmp
popf
aas
sbb
mov
jne
jns
enter
cli
xchg
not
xchg
cmp
lret
add
mov
push
cwtl
xor
sarb
inc
push
loope
ret
push
jmp
inc
push
dec
mov
adc
push
add
gs
add
mov
das
push
imul
not
lret
filds
mov
sbb
dec
mov
lds
mov
and
sbb
xchg
push
mov
cmp
je
fmul
adc
xor
fs
mov
stc
test
aam
pop
sub
inc
mov
mov
push
movsl
data16
sbb
jo
in
ret
xlat
or
xchg
mov
out
popa
cmpsl
pop
mov
repnz
mov
mov
repz
subb
rcll
in
rolb
lea
loope
inc
mov
aaa
xchg
jmp
sbb
xor
int3
std
cmp
cltd
dec
inc
ror
repnz
outsl
pop
loop
push
xchg
ss
and
inc
pop
xchg
jb
jno
pop
mov
dec
pop
incl
fdivrl
xchg
gs
sbb
out
dec
jns
xchg
push
pop
fwait
aaa
aam
aam
pop
jno
xchg
mov
imul
jb
xor
adcl
pop
ret
clc
daa
test
mov
push
mov
add
sahf
daa
stos
and
and
fiaddl
push
push
sub
adc
mov
mov
xor
jo
in
xchg
lahf
or
dec
dec
mov
xlat
jl
inc
push
fcoml
sub
sbb
jecxz
xchg
in
push
lods
mov
fimuls
add
test
imul
inc
outsl
stos
mov
js
fmuls
add
fsts
mov
and
jmp
std
adc
jmp
xor
cmpsl
setle
fidivrl
lcall
add
inc
jmp
data16
mov
cmp
adc
jmp
jge
rcl
call
jg
and
jle
in
jmp
lcall
sti
jnp
jbe
jmp
pop
mov
insl
iret
sub
fstpt
mov
pop
cmp
pop
incb
jmp
push
cmp
jne
xchg
jo
es
in
xor
dec
fs
pop
dec
loopne
mov
jb
es
push
pop
test
into
inc
pop
fdivl
xchg
lcall
mov
loop
test
std
aaa
in
adc
aam
and
repz
or
or
inc
rcrl
xchg
push
int
inc
cwtl
pop
cmc
xlat
addr16
inc
jne
mov
ja
mov
sbb
add
sub
ror
add
setb
cmpsl
jmp
in
leave
or
fcoml
jne
lods
hlt
mov
not
cmp
movsl
clc
push
call
test
push
gs
sbb
les
add
and
lret
out
xchg
popf
push
jmp
repnz
in
sbb
and
jle
and
sub
push
in
or
pusha
lods
fsub
imul
out
sub
fildl
cmpsb
sti
mov
insb
push
jg
and
mov
adc
repz
xchg
mov
into
push
addr16
xor
sub
sahf
jge
sbb
or
pop
mov
dec
xchg
cmp
pusha
mov
dec
lahf
pop
lret
int3
shlb
in
stos
jne
je
sub
push
inc
leave
mov
pop
cmp
xlat
mov
xchg
push
sbb
test
mov
pusha
out
repz
imul
fmuls
add
cmp
mov
mov
pop
out
mov
sub
shll
adc
mov
jg
sti
mov
or
push
sbb
xchg
cltd
mov
outsl
popa
inc
add
and
pop
inc
out
inc
jns
xor
hlt
adc
xchg
popf
push
dec
mov
out
push
dec
cmp
jb
dec
in
jg
rcrb
add
les
dec
jecxz
cmp
shlb
roll
sbb
cmp
jae
push
outsl
sbb
in
lea
ja
fcmove
push
inc
leave
imul
mov
jae
fldcw
cmp
aas
in
test
xor
lret
sarb
into
jne
mov
jg
mov
fcmovnb
repnz
dec
pop
adc
arpl
imul
sub
mov
pop
add
mov
imul
int
dec
bound
popa
adcb
jge
mov
arpl
shrl
inc
cmp
pop
push
xchg
mov
jle
int
aam
ret
and
xchg
push
lret
jp
mov
xchg
xor
and
arpl
dec
inc
in
push
lret
and
jbe
sub
or
sbb
aad
mov
xorl
pop
mov
or
or
mov
xchg
test
leave
jo
lock
ss
out
ljmp
iret
mov
mov
cmp
jbe
mov
sub
out
xchg
stos
lahf
aad
xlat
not
cltd
push
jns
out
dec
jo
aaa
scas
sbb
mov
adc
int
dec
out
out
mov
cwtl
mov
iret
mov
jp
ss
lea
mov
or
call
lds
out
mov
xor
jne
inc
addl
sti
mov
sub
dec
mov
and
push
cmp
xchg
lret
movsb
xchg
xchg
jns
push
cmp
rol
loop
mov
nop
and
inc
xchg
cmc
and
and
int3
pop
pop
xchg
sbb
xor
sub
jb
sbb
imul
aam
sbb
mov
sub
xor
into
repnz
dec
cld
and
xor
inc
and
add
cltd
cmpsb
adcb
sub
add
mov
mov
mov
mov
dec
sbb
fwait
jnp
xchg
clc
add
jb
pop
movsl
stc
push
shl
daa
popa
cld
push
cmp
mov
std
dec
iret
pop
addl
adc
fisubl
cld
js
ret
stos
inc
dec
jbe
orb
add
les
leave
mov
enter
test
dec
xchg
pop
push
nop
js
int
or
push
dec
or
inc
mov
fldt
sbb
std
cmc
push
xchg
sub
incl
xchg
mov
jbe
aaa
rolb
and
test
xlat
push
inc
iret
scas
sub
mov
and
es
sub
gs
mov
fmul
mov
sarb
or
lea
add
cs
ror
push
fwait
pop
ja
pushf
int3
cmpl
xchg
mov
addb
push
mov
cmpsb
or
leave
iret
jg
test
dec
pop
xchg
or
dec
lods
lods
and
pusha
inc
mov
aam
jmp
ret
xlat
pop
cwtl
push
xchg
scas
mov
push
mov
out
stos
fwait
ret
mov
and
movsb
mulps
not
dec
icebp
jo
and
mov
test
dec
icebp
adc
sub
or
rolb
jl
mov
movsb
mov
stc
mov
dec
sub
mov
mov
loop
fimuls
jbe
push
frstor
xchg
sbb
jmp
es
sub
mov
int
push
in
or
xor
dec
aaa
jb
dec
mov
jl
shl
call
jne
mov
pop
xchg
and
jo
or
sub
outsl
out
push
in
push
pusha
push
pop
rcll
leave
add
ds
push
and
repnz
xor
imul
cmpsl
lock
into
outsl
dec
clc
mov
aas
xchg
imul
movsl
or
mov
mov
rcrl
adc
jl
fsubl
xchg
jno
js
add
cmpsl
test
mov
adc
lret
xchg
loopne
int3
cmpsl
sti
add
lods
pop
scas
mov
mov
es
or
push
xchg
cmp
and
dec
xor
rolb
cli
ja
fcoml
mov
mov
rclb
xor
sahf
nop
ffreep
jmp
cmp
cld
dec
mov
adc
arpl
jmp
shrb
xlat
jbe
fists
xchg
call
push
adc
add
mov
add
movsb
push
rorb
push
mov
xchg
cs
stc
adc
xlat
push
fcomi
push
sbb
insl
pop
push
or
scas
outsl
jl
pop
fwait
insb
pushf
push
mov
jnp
test
dec
call
in
adc
ret
movsl
in
sub
rcl
inc
cmpsl
push
loopne
mov
jle
mov
pop
repz
imul
and
insl
mov
loop
push
add
popa
lahf
repz
icebp
add
pop
out
movsb
mov
or
mov
aam
movsl
pop
push
mov
shll
dec
into
insl
ret
test
mov
repz
out
dec
and
shl
cmp
in
jbe
out
psrld
mov
push
in
jbe
into
jl
out
rol
jle
rorb
pop
aad
es
je
int3
mov
add
or
push
add
call
mov
dec
cmpsb
and
sub
fs
sti
cmp
gs
sub
rcll
fisttpl
inc
jmp
scas
dec
jp
pushf
out
dec
daa
clc
dec
ret
leave
sub
xchg
je
sti
or
imul
or
dec
mov
inc
into
test
outsb
movsl
mov
aad
movsb
and
sbb
fs
jmp
pop
out
pop
repnz
push
ja
popf
mov
in
pop
xor
cmp
xchg
pop
mov
ljmp
sub
pop
push
push
mov
push
fcomps
xchg
into
add
push
and
xchg
clc
inc
pop
jecxz
push
sub
out
aad
pop
xchg
cmpsb
or
push
cwtl
into
cmpsl
or
dec
ja
popf
inc
hlt
int
xchg
pop
push
das
cmovne
add
xchg
pusha
rol
sti
mov
mov
fdivrs
fcoml
loope
clc
lret
pop
cld
addb
nop
cs
jge
lock
fnstcw
jecxz
dec
mov
imul
xor
mov
dec
mov
xchg
std
clc
fcmovnbe
stc
pushf
rcrb
call
mov
jnp
pop
dec
sub
dec
add
mov
out
inc
aaa
stc
jo
mov
push
push
mov
jae
add
cmpsb
popa
and
and
imul
push
ret
aad
pop
mov
pop
pop
sub
add
cmp
out
outsl
mov
mov
sbb
sub
xor
adc
call
aas
rclb
daa
insb
or
repnz
imul
scas
pop
push
or
adc
lods
mov
jecxz
pusha
mov
decb
js
aam
adc
insb
rcrl
jne
daa
xchg
xlat
mov
ljmp
push
mov
pop
add
fildl
popl
pop
enter
and
aaa
pop
cmpsb
mov
add
xchg
rorb
pushf
dec
add
push
dec
pop
jp
loop
scas
mov
cltd
pop
add
test
rcll
ret
in
bound
mov
mov
adc
adc
mov
call
or
cmp
mov
cmp
aaa
std
dec
mov
add
pop
cmpl
aas
ror
loop
push
sbb
invd
inc
jmp
mov
pop
add
push
lret
js
fadds
pushf
dec
shlb
icebp
sub
push
push
negl
rcl
sub
xor
mov
es
pop
aas
ss
and
aad
jo
icebp
inc
out
dec
jmp
dec
inc
sbb
call
sub
fidivs
sub
jg
adc
cmp
or
jno,pt
cmpsb
repnz
mov
lock
pop
inc
cwtl
or
push
and
jbe
out
ret
jp
adc
push
cli
inc
mov
pop
mov
in
mov
call
mov
or
in
pop
inc
sub
jnp
fsub
icebp
repnz
test
mov
xlat
push
rolb
addr16
jns
sub
push
dec
mov
jbe
mov
outsl
mov
cmpsl
xor
fdivs
push
std
mov
pop
sbb
lret
adc
and
dec
pop
pop
cmp
pop
mov
lahf
inc
cli
xchg
out
ret
mov
lret
int
jmp
mov
aam
pop
inc
int3
push
jo
fs
adc
inc
push
nop
scas
cmpb
imul
jp
jecxz
add
call
jl
idivl
dec
movsb
in
jne
pop
mov
xchg
inc
sub
pop
push
nop
iret
jl
adc
lods
scas
test
or
push
sub
dec
js
out
inc
in
and
cmp
and
mov
ret
inc
mov
mov
push
lahf
pop
sub
lret
add
test
test
xchg
and
faddl
add
shlb
jmp
jns
lahf
add
icebp
pop
sbb
adc
adc
adc
adc
arpl
and
fistps
cmpsb
cmpsl
push
jmp
sbbb
enter
dec
and
mov
pop
push
sub
jp
rorb
jae
sub
lock
hlt
ja
andl
add
fstps
scas
cmp
dec
pop
xchg
scas
jg
loopne
out
jge
sub
inc
shll
fnstsw
out
imull
into
push
fwait
in
xlat
lret
xchg
mul
push
mov
xlat
sbb
jl
in
rclb
inc
add
adc
int
mov
adc
cli
imul
mov
add
out
dec
scas
in
pop
dec
adc
popfw
and
in
and
gs
icebp
pop
mov
push
es
xchg
cmp
insb
lcall
int3
inc
pushf
testb
scas
jp
add
sahf
and
popf
aad
fldenv
and
das
pop
adcb
adc
sbb
mov
add
sub
adc
inc
cmp
mov
cltd
pop
out
outsb
adc
mov
rorb
je
jbe
mov
std
jne
push
jp
outsl
adc
lods
callw
xor
or
ja
out
or
xchg
xor
jp,pn
icebp
inc
xchg
push
ss
aam
or
jb
pop
xchg
insb
cmp
cwtl
adc
aaa
stc
movsb
cmp
or
sbb
cmpsl
repnz
jbe
mov
jns
mov
jg
mov
jo
inc
adc
std
bnd
out
call
cmp
aam
and
push
xor
cld
dec
repz
pop
push
rorl
push
inc
push
fbstp
aam
repz
test
sub
bound
push
fcoms
xchg
mov
and
jecxz
lcall
push
loop
push
into
cmp
add
js
mov
push
iret
std
test
out
dec
out
mov
pop
leave
in
rcl
test
add
addr16
mov
jne
js
aas
pusha
lock
nop
mov
cmpsb
dec
into
pushf
dec
daa
icebp
push
cli
aas
lods
outsb
cmc
idivb
mov
es
push
hlt
push
sbb
sub
xchg
inc
xor
sub
xchg
ss
mov
xor
inc
rcrl
ja
pop
leave
in
data16
in
rcll
clc
inc
dec
add
and
cmp
outsl
into
push
sbb
hlt
lahf
cmp
test
daa
lock
sbb
test
push
loopne
cmp
push
out
mov
add
lcall
dec
dec
adc
div
xor
lcall
push
pop
pop
sarb
lret
cltd
fisttpll
fwait
js
ret
sar
sbb
jbe
into
sbb
xchg
sbb
inc
bound
cld
or
mov
add
dec
push
cs
cmpl
cmpsb
push
lret
enter
aam
jne
cwtl
out
cmp
mov
jb
dec
sar
sub
xor
push
out
aas
and
or
testb
bound
das
daa
mov
and
xor
fcmovnu
fucom
jo
xchg
pop
and
loope
dec
sbb
cmp
popa
lahf
pusha
mov
jbe
in
fildl
dec
sub
mov
dec
pop
xor
sbb
jecxz
loope
test
fisubrs
jg
or
mov
xchg
lret
push
in
sbb
popf
pop
dec
mov
push
sub
jae
push
mov
nop
pop
sbb
shlb
je
mov
mov
xchg
cmp
daa
xor
cmp
jp
jne
sti
rol
mov
subl
fistl
xchg
push
jne
pop
in
stc
add
arpl
sti
jae
push
mov
or
push
popf
stc
arpl
push
sub
lcall
loopnew
test
cmp
repz
cmp
jbe
daa
mov
rclb
xchg
mov
into
lret
insl
mov
sub
push
dec
aas
paddusb
leave
sbb
out
nop
rclb
jg
pusha
push
xor
out
inc
loop
pop
xchg
push
fistpl
jp
xor
pop
dec
in
divb
shlb
and
or
call
xchg
or
nop
scas
mov
cmpsb
xchg
out
mov
inc
add
dec
mov
in
adc
lcall
cwtl
or
push
push
jno
lret
rclb
adc
inc
sti
ret
and
fsubs
or
and
das
cmp
inc
push
shll
test
pusha
stc
xchg
pop
or
cltd
testb
mov
sub
or
das
add
cmp
mov
mov
rcl
pop
popf
sbb
xor
inc
mov
das
and
pop
adc
pop
cmp
xor
bnd
negl
add
sbb
jmp
push
fcmove
clc
jl
sbb
add
pushf
in
dec
loopne
inc
xchg
into
subb
std
cs
adc
fstps
out
imul
sbb
or
pop
pop
and
lock
fldl
jne
mov
push
mov
and
addr16
das
into
repnz
and
mov
shlb
and
daa
mov
mov
mov
sub
or
popa
fwait
scas
cmpsl
in
sbb
mov
loop
loope
fsubrs
xchg
scas
and
mov
adc
into
mov
lea
int
xor
xchg
sub
fs
add
mov
xchg
hlt
out
out
mov
adc
mov
cmpsb
lcall
push
dec
mov
adc
and
push
aas
xchg
pop
aad
fimuls
add
xchg
push
sbb
fisttps
aas
jbe
sbb
sub
stos
repnz
loop
clc
add
test
fcompl
sub
inc
cli
or
jl
mov
adc
insb
cmc
mov
sub
push
push
in
sub
mov
repz
push
mov
repnz
int
cltd
adc
ja
subb
and
pop
mov
loope
fimull
jnp
inc
jo
xorb
cmpsl
rorb
push
gs
sbb
inc
insl
xchg
ja
sub
mov
add
xchg
fimull
dec
call
insl
fs
imul
cmp
xor
add
xchg
xchg
push
int3
std
mov
adc
iret
incl
xchg
ret
insb
int3
dec
aaa
test
sbb
notb
dec
shlb
mov
pop
fcmovnbe
sbb
jp
and
xadd
add
mul
incb
push
insb
dec
push
jne
out
out
sbb
mov
pop
ret
and
sub
dec
int3
mov
dec
sub
popf
mov
les
outsl
int3
dec
inc
sti
or
mov
cmp
mov
lods
sub
scas
imul
dec
xor
mov
jle
push
push
test
sahf
or
mov
mov
push
xchg
movsb
sub
sbb
fwait
test
push
mov
dec
ljmp
lods
jge
daa
lret
sbb
push
gs
aam
sub
lahf
jbe
outsl
stos
addb
or
mov
inc
cmp
test
inc
xor
mov
into
xor
adc
inc
dec
sub
pop
pushf
dec
fcmovne
add
pop
mov
sbb
hlt
aam
push
mov
dec
and
sbb
in
or
fisubl
sbb
pop
iret
loopne
dec
push
into
adc
inc
ljmp
pop
mov
cli
ret
test
pop
movsl
pop
lret
xlat
jne
shrb
lods
imul
mov
xor
mov
fwait
shl
sbb
cmp
test
mov
jecxz
xchg
dec
aam
icebp
pusha
dec
inc
dec
fs
int3
ficompl
dec
xchg
test
outsl
mov
mov
stos
adc
add
jle
idiv
jmp
xchg
push
cmp
loop
aas
cld
cmp
add
add
push
cmpsl
lcall
into
adc
jg
test
mov
sbb
mov
cmpsl
cmp
clc
inc
aas
push
outsb
pop
mov
into
jns
and
hlt
mov
das
adc
jmp
aas
mov
sbb
mov
pop
push
cmp
fmul
gs
fucomi
or
mov
jmp
mov
movsl
xchg
sarl
pop
sub
mov
scas
mov
fs
int3
sub
imul
aas
data16
out
fdivrs
ss
fdivl
sub
stos
pop
cwtl
mov
lcall
push
cmc
jge
repz
inc
adc
pop
jg
fiaddl
test
es
add
or
nop
jno
xchg
aas
cmpsb
lock
mov
mov
dec
mov
inc
xlat
and
lss
daa
and
movsb
ficoms
inc
lahf
mov
xchg
lret
adc
sbb
ja
or
mov
and
mov
cs
pop
int
jae
pop
ret
fisubrl
inc
rcl
pop
xchg
pop
out
adc
pushf
sub
test
loop
sub
mov
mov
test
ror
mov
pop
movb
cmpsl
fcmove
cmp
pop
aam
dec
gs
or
adc
scas
sub
add
imul
sbb
and
push
dec
add
xor
into
out
xor
pop
pop
iret
sbb
or
pop
push
add
cmc
push
push
sbb
mov
repz
cltd
push
fsub
cld
outsl
in
fimull
gs
shrl
add
xlat
push
pop
jge
push
dec
je
stos
cmp
fsubrl
push
rcl
mov
mov
jns
mov
test
scas
ds
mov
aaa
insb
das
repz
push
inc
pop
ja
mov
mov
mov
fs
sarl
inc
aam
ret
out
pop
and
fistpll
mov
clc
or
into
imul
adc
aam
fiaddl
ja
dec
or
iret
stos
repnz
test
jo
dec
lahf
mov
xchg
in
fneni(8087
dec
lods
arpl
adc
fucomip
call
pop
dec
pop
xor
and
cs
jno
loope
mov
pop
add
leave
ror
pop
cmpsl
out
or
adc
xchg
stos
dec
jecxz
sbb
out
cmpsl
adc
mov
mov
add
int3
mov
push
movsb
mov
repnz
scas
mov
pop
in
xchg
lds
jbe
fcom
and
test
pop
int3
mov
xor
fistl
movsb
lahf
test
mov
and
rol
sub
xchg
iret
sub
mov
pop
jno
xchg
xor
pop
in
test
sub
mov
incb
dec
sbb
jo
out
adc
cmovnp
jle
in
mov
sub
inc
mov
imul
fisubrl
js
or
mov
push
mov
sarl
and
out
or
mov
ret
xchg
sub
dec
ds
popf
jbe
cmp
in
je
pop
hlt
icebp
out
add
cltd
sbb
sarl
push
stos
sbb
xor
dec
xchg
dec
out
inc
out
addl
insb
sarl
fucom
push
mov
out
arpl
cmp
adc
xchg
call
add
add
jbe
jle
ja
dec
fld
add
xchg
stc
xchg
adc
push
inc
sub
pushl
sub
xor
jbe
inc
pop
lock
insb
sub
inc
xchg
mov
dec
pop
xchg
movsl
mov
data16
jo
add
jle
cmc
out
sbb
adc
imull
sbb
ja
sbb
mov
inc
lret
iret
pop
das
lock
nop
inc
addr16
push
push
out
adc
inc
shr
cs
push
enter
cltd
mov
loop
pop
pop
in
mov
inc
in
jp
jl
sbb
out
push
xor
jb
rcl
sbb
adc
clc
cmp
add
out
test
lods
shlb
sbb
in
xor
and
mov
jbe
fisttps
mov
mov
pop
add
out
outsl
or
jbe
mov
cwtl
add
cmp
xor
sbbl
int3
cmp
std
mov
xchg
test
loop
icebp
mov
movsb
cmpsl
jnp
sbb
roll
lods
dec
pop
jp
mov
fs
push
mov
scas
mov
inc
movsb
fists
cmp
pop
cmc
adc
inc
repz
fcmovnbe
sbb
loopne
popa
fldcw
adc
pop
repnz
filds
inc
int
fisubl
movsb
dec
or
cmp
insl
mov
ljmp
jnp
movsb
loope
xchg
int
jb
dec
lret
pop
mov
jns
repz
outsb
cmpsl
inc
call
js
out
jbe
jno
iret
sar
mov
mov
aad
insl
or
clc
xor
mov
ret
lds
jl
jo
daa
sbb
jg
and
pop
inc
out
bound
cmp
xlat
fsubrs
scas
jge
adc
inc
mov
xchg
inc
pushf
ror
inc
or
fildll
mov
mov
cmp
fs
mov
mov
lock
pop
je
or
mov
pop
jmp
mov
dec
push
jno
xchg
gs
xor
push
shrb
in
dec
mov
jo
loope
shlb
pushf
cmpsl
ss
movsl
in
xor
inc
add
pushf
in
pop
aad
push
sahf
pop
lods
xor
cmp
xor
cmc
out
pop
sub
rcll
pushf
push
lahf
int3
push
mov
sbb
scas
std
fsubs
xchg
imul
aaa
mov
ljmp
jnp
daa
push
loopne
cmp
les
insl
ret
es
adc
mov
jb
push
inc
sbb
lea
push
pop
ss
pop
aam
xchg
sahf
pop
jo
stc
sub
pop
mov
test
jecxz
into
hlt
mov
xchg
sub
dec
out
xchg
lock
movsl
or
scas
dec
andb
aas
divb
push
rcrl
mov
push
push
hlt
push
fdiv
inc
xor
mov
jecxz
push
sti
sbb
xchg
lret
lret
cmp
movsl
loope
sbbl
mov
aas
push
pop
std
inc
jb
cmp
adc
mov
in
xchg
or
and
ret
out
lret
jne
pusha
cmp
addb
outsl
jo
lcall
arpl
mov
imul
ror
dec
mov
jge
cmp
pop
mov
movsb
push
into
popf
pop
xchg
cmp
imul
add
clc
movsl
cmpsb
jmp
jmp
cltd
jl
cmp
sahf
fsubr
fmull
rcl
push
ret
pop
add
cmp
and
inc
out
xchg
or
ficompl
adc
fsubl
dec
sub
sub
xor
push
fwait
push
int3
cmp
cltd
dec
inc
or
push
xlat
rsm
push
sbb
aam
lods
into
lcall
mov
mov
stos
push
dec
cmpsb
xchg
xlat
and
and
cs
outsl
jns
ret
repnz
fcom
and
mov
jae
xchg
mov
fcmovne
aad
shl
jnp
sub
leave
dec
adc
nop
call
adc
fists
sahf
inc
add
fdiv
vmovq
movsl
ret
push
mov
and
lods
adc
adc
aas
jno
sbb
scas
popf
or
outsb
mov
mov
in
notb
cmc
dec
sahf
out
jae
add
enter
es
out
sbb
int3
fisttpll
cmp
adc
and
ljmp
shr
cmp
ret
es
loopne
add
dec
int3
addr16
jae
pop
fstpl
notl
cmpsb
daa
sbb
aam
xchg
mov
mov
sbb
out
lahf
xor
adc
dec
popa
mov
xor
aam
adc
outsl
aad
inc
jl
xor
inc
in
lret
add
call
mov
fucomip
push
jge
or
mov
addr16
daa
addl
inc
mov
clc
add
jbe,pn
ret
int
lret
sub
repz
cmc
jno
adcl
addr16
xchg
dec
imul
shlb
sahf
adc
or
stc
lahf
jp
cmp
daa
inc
call
loopne
test
mov
and
movsb
test
jbe
pop
sub
jne
out
mov
jmp
rol
mov
loope
mull
lcall
stos
add
jbe
jnp
cli
adc
sahf
mov
xchg
out
in
jb
imul
test
mov
fdivs
aam
divb
inc
add
mov
dec
icebp
rclb
jo
and
sbb
dec
outsb
xchg
mov
dec
fldl
dec
cmpsl
repnz
sub
ss
shl
in
mov
mov
scas
adcl
imul
push
sbb
push
dec
mov
inc
jbe
imul
fsub
inc
fildl
icebp
inc
pop
dec
ja
push
jnp
jae
or
call
dec
int
out
shlb
repz
stos
adc
rol
aaa
mov
or
sub
cmp
int3
push
pop
psrlq
adc
push
xor
and
sbb
pop
out
insl
stos
outsl
xchg
imul
imull
add
cmp
int3
bnd
jbe
out
mov
xchg
mov
push
sti
popa
aam
imul
pop
shll
pop
int3
ja
cli
aad
stos
faddp
jl
inc
dec
xchg
cmpsb
or
in
fdivl
sarl
and
test
lcall
insb
jmp
aaa
adc
sbb
sbb
sbb
aaa
loopne
loope
daa
and
int3
lcall
clc
add
cmp
cmovs
xor
test
jns
fcoms
aad
lds
adc
and
inc
xor
mov
push
cmpsl
addr16
mov
pop
addl
xor
mov
sub
fcomps
mov
and
test
dec
psubw
xchg
sbb
mov
mov
rorl
or
cmp
cmp
mov
arpl
repz
test
cmpb
ljmp
cs
jbe
pusha
iret
test
cmp
adc
cmp
cmpsl
in
mov
pop
shrl
out
pop
int3
jne
enter
sbb
into
xchg
mov
nop
pushf
ljmp
mov
loope
dec
imul
gs
scas
iret
pop
xchg
xchg
lds
int
rcrb
sbb
ret
fs
aad
test
pop
adc
cmc
adc
int3
jns
fdivrp
imul
mov
stos
fildl
dec
sbb
decl
xor
push
call
int3
jnp
mov
test
push
aaa
pusha
inc
dec
or
mov
arpl
pop
cmp
push
cmc
cmp
mov
jge
pop
cmp
rcrb
loope
dec
mov
nop
push
je
sub
inc
idiv
or
adc
push
push
pop
loope
xor
cwtl
jmp
mov
hlt
push
popf
push
push
or
out
lahf
aas
add
fimull
dec
push
lret
adc
flds
imul
cmp
jnp
in
inc
sub
jecxz
fdivl
rol
div
dec
aaa
sub
inc
mov
mov
or
xor
call
jb
push
stos
int3
sub
pushf
lcall
out
ja
mov
insb
roll
cmpsb
repnz
loopne
mov
mov
jbe
dec
mov
rcrb
cmp
cmp
add
xchg
sarb
add
std
xor
or
push
sub
xor
loope
aas
sbb
mov
pop
movsb
xchg
jno
pop
mov
pop
push
push
in
mov
arpl
ficomps
mov
ficoml
ja
push
jno
mov
movsl
popw
inc
mul
dec
sub
scas
push
in
lods
push
ret
jo
pusha
cwtl
push
jbe
jae
out
je
out
pop
popf
fimuls
xchg
decl
js
dec
fsubl
mov
test
cmp
inc
outsb
or
inc
sub
sbb
jp
add
hlt
inc
mov
in
cmc
jmp
mov
jecxz
xchg
or
cs
or
bnd
jecxz
sub
cmp
loop
jge
xchg
pop
aas
lret
mov
imul
sub
fidivs
push
mov
mov
mov
jge
xsha256
cmpsb
adc
and
inc
jnp
ds
fdivs
pop
sub
in
mov
mov
and
mov
loope
lods
mov
xchg
mov
lret
mov
cmc
cmp
out
clc
iret
xchg
push
xchg
push
aad
adc
inc
out
mov
pop
mov
push
xchg
popl
sbb
push
cmp
icebp
jno
jmp
cmp
cli
or
jecxz
leave
iret
pop
movsl
nop
sub
adc
jbe
cmp
ljmp
leave
sbb
pop
mov
and
dec
mov
scas
notl
cmp
movsb
or
lcall
inc
mov
cmc
call
xchg
repnz
or
addl
cmp
ror
cmp
enter
roll
leave
in
mov
sub
jecxz
popa
mov
sbb
insl
xchg
inc
sbb
xchg
int3
roll
out
jp
inc
data16
mov
adc
xchg
incl
xchg
pop
sub
popa
es
cmp
outsb
cwtl
out
std
jmp
aam
cli
or
push
xchg
ds
addr16
add
bound
es
sub
lret
mov
lret
push
mov
hlt
fimuls
pop
sbb
mov
inc
sbb
int3
cmp
dec
out
sub
aad
test
fcmovbe
stos
enter
ljmp
mov
icebp
stc
xchg
test
fsubl
out
mov
fcmovne
jae
sbb
gs
inc
pop
adc
shl
lea
lods
sbb
dec
in
in
loop
movsl
inc
pop
and
lods
add
push
and
sbb
pop
stos
xchg
dec
lret
pop
sbb
je
xor
add
add
jle
cs
push
lret
and
mov
jmp
out
adc
hlt
and
inc
and
jecxz
adc
fwait
xchg
mov
call
xor
sti
mov
cmp
jns
movsb
adc
dec
bswap
test
push
outsb
loopne
mov
idivl
cli
xor
in
clc
inc
pop
push
rol
xchg
or
out
int3
mov
cmp
mov
pop
ret
jg
jmp
push
mov
movsb
pop
mov
xchg
fisttps
test
into
stc
mov
cmp
and
fidivrl
add
data16
xchg
repz
imul
fdivs
lret
and
fsubl
push
and
mov
mov
cmp
je
into
sub
xor
outsb
add
mov
mov
mov
sub
invd
push
cmp
gs
lock
jecxz
ds
sarl
cmp
or
mov
fnstsw
bound
mov
dec
pushf
dec
shl
push
jb
push
in
mov
sub
dec
fwait
add
test
and
pop
jmp
outsb
jbe
iret
push
clc
mov
lret
inc
mulb
mov
xor
lret
mov
inc
lret
sub
xor
pusha
push
xchg
in
push
or
pushf
lods
or
fcmovne
cmp
aas
inc
outsl
orb
lret
ljmp
inc
xor
mov
cmpsl
pop
imul
test
lahf
clc
ss
jecxz
dec
sbb
push
fstl
push
xchg
dec
outsl
xchg
iret
stc
call
push
imul
lods
fs
cmpsl
sub
adc
jne
lods
shlb
xchg
add
inc
push
and
imul
insl
mov
adc
xchg
and
jecxz
mov
inc
sbb
mov
enter
push
add
sbb
dec
or
dec
lds
xor
mov
fistpll
xor
imul
push
cld
jne
divb
xchg
push
out
rcrb
mov
push
loope
aas
dec
inc
fiaddl
cmp
imull
enter
mov
sbb
shr
bound
pop
call
int
cs
arpl
push
cmpsl
ljmp
or
mov
mov
arpl
mov
sbb
stc
dec
inc
mov
adc
xchg
pop
pop
jbe
lcall
movsl
dec
sbb
add
push
nop
rcl
xchg
lods
sbb
clc
mov
leave
push
push
mov
fwait
pop
adc
sbb
dec
pop
or
lds
lock
ror
cwtl
mov
and
dec
dec
xchg
das
push
or
mov
sub
into
leave
jge
mov
iret
gs
fisubrs
divb
addr16
loop
xor
xchg
clc
test
sub
sub
xchg
out
test
dec
push
sti
xchg
mov
aam
addb
repz
cltd
add
fmuls
scas
sub
in
pop
jl
add
xchg
movsb
jbe
xchg
sub
sbb
mov
mov
jecxz
test
orl
push
add
pusha
mov
jne
shr
std
rorb
in
mov
fwait
into
lahf
sahf
faddl
or
pop
adc
fs
push
adc
pop
push
frstor
arpl
and
jns
sbb
bound
mov
scas
leave
mov
push
pop
mov
mov
ret
mov
mov
shll
hlt
outsl
add
or
fnstsw
or
and
lods
pushf
loopne
sbb
mov
mov
mov
negb
in
adc
xor
stos
cltd
xchg
push
dec
push
out
cmp
cli
ja
ljmp
xchg
lds
jo
cmp
xor
cmp
test
aad
or
push
jbe
and
xchg
cltd
rcll
test
movsw
sub
sbb
and
test
jae
pop
mov
xor
mov
cmpsl
in
cltd
push
clc
leave
jge
stos
test
std
lods
aam
jae
xchg
jbe
mov
es
aaa
movsl
sub
or
and
ret
rcrb
push
std
pusha
mov
fs
cld
sbb
dec
pop
cmp
movsb
or
lock
rcr
int
jo
in
loopne
test
pop
insb
fidivrl
push
fxch
int3
xlat
or
inc
cmpsb
mov
call
into
xchg
mov
out
test
aaa
aas
stos
into
cmp
sahf
movsl
pop
popa
rcl
dec
stc
push
xchg
mov
rcl
push
add
jmp
jns
mov
cli
mov
jp
jno
add
sub
push
mov
pop
movsb
out
repz
xor
push
dec
lods
loop
adc
inc
aam
cld
dec
jp
test
xor
jl
rorb
cs
dec
mov
mov
rsm
push
xchg
int
sub
cli
stos
adc
jne
das
inc
ss
xor
dec
cmp
sti
fcmovne
jb
leave
cmp
sbb
and
cltd
or
mov
test
fdiv
imul
fiadds
lret
int
movsl
inc
mov
jecxz
add
xor
out
jo
push
xchg
popf
xlat
push
test
mov
mov
xchg
rcll
test
test
xchg
jo
lds
mov
fldenv
js
inc
repz
mov
insb
cmp
dec
cmp
or
in
leave
adcl
push
aam
fstps
jmp
movsl
or
pop
rclb
test
inc
dec
dec
in
mov
fcmovnbe
cmp
adc
lret
cmpsb
lds
push
mov
loop
xchg
movsl
mov
add
pop
push
adc
or
pushf
lahf
jae
sub
jmp
cmp
int3
dec
sbb
jmp
cmp
mov
dec
mov
testl
pop
nop
or
sbb
push
pop
adc
aam
and
cs
cmpsl
scas
add
lods
aad
inc
popf
loope
lods
shll
ret
aam
add
xchg
and
dec
jp
clc
or
push
out
push
scas
xchg
out
pop
aaa
andb
fisubl
adcl
shrb
mov
sub
in
iret
jnp
xchg
push
inc
push
imul
mov
sbb
jno
xor
mov
or
sbb
push
arpl
pop
mov
sub
cmpsl
and
pop
xlat
lods
adc
scas
movsl
cld
lret
fcomp
mov
mov
jno
stos
test
arpl
dec
fmull
push
xlat
mov
inc
mov
sbb
sbb
cmp
add
out
xlat
addr16
je
sbb
scas
cmp
in
mov
fs
pop
mov
xchg
addb
out
lods
mov
mov
xchg
adc
xchg
insl
imul
mov
in
or
jle
icebp
ficoml
and
lret
movsb
loop
shlb
outsb
pop
lock
into
clc
sbb
push
push
xchg
fwait
mov
jg
xchg
test
sub
in
jo
jecxz
enter
dec
dec
jg
or
mov
test
mov
repz
movsl
xchg
xor
cmp
out
mov
add
shrb
sbb
inc
sub
push
ljmp
cmpl
jge
into
dec
mov
roll
xchg
test
mov
into
dec
cmp
pop
ss
xchg
cmp
lret
enter
repz
stos
lock
shrl
cmp
push
sbb
lods
xchg
stc
mov
pop
ss
hlt
movsl
inc
push
sub
scas
pop
pop
roll
daa
xchg
incl
imul
lret
int
push
les
jmp
sti
jecxz
jne
lea
cmp
xchg
lods
mov
jns
cwtl
mov
cmp
or
sar
arpl
mov
pop
js
popf
pop
push
adc
sub
mov
add
xor
and
popf
icebp
data16
movsb
jge
lock
test
xchg
xchg
adc
loop
push
inc
andl
cs
out
jo,pt
mov
push
xor
repnz
out
and
test
pushf
xchg
psubsw
dec
sub
pop
insl
sub
add
push
pop
mov
jne
pop
xchg
xchg
out
mov
inc
xchg
push
aas
fcmovne
shl
lcall
mov
dec
stos
cmp
xor
xchg
and
hlt
add
jg
cmp
sub
add
rclb
push
add
out
stos
cmp
shlb
adc
dec
lds
dec
add
fidivs
sub
nop
imul
mov
popa
fsts
xchg
ljmp
bound
pop
aaa
mov
pop
call
iret
sbb
ffree
add
or
sbb
inc
movsl
push
push
fisttps
jno
adc
out
test
aad
jg
and
fbstp
xchg
roll
bound
add
cmp
sub
cwtl
mov
orl
sar
sbb
xchg
mov
scas
jle
xor
clc
cmpsb
jo
pop
pop
sbb
js
jecxz
xchg
jno
hlt
pop
bnd
push
sets
sti
fisttpll
outsb
jo
iret
lods
and
sbb
pop
mov
fwait
xor
push
aam
int
outsb
pushf
mov
mov
leave
fcompl
out
das
and
jns
and
iret
adc
ds
fs
mov
jns
ror
shlb
inc
add
addl
cmp
push
popa
es
gs
adc
lods
in
lds
or
xchg
repnz
pop
add
xor
jmp
and
dec
xchg
mov
cs
dec
addr16
xor
shlb
inc
mov
inc
xchg
xor
cld
popf
cltd
in
xchg
ljmp
xchg
iret
sarl
sti
jmp
dec
je
testb
jo
xchg
xchg
pusha
gs
pop
in
push
mov
sbb
mov
mov
or
loope
sbb
fiaddl
in
xor
shll
pop
jno
loope
outsl
mov
imul
xchg
rol
arpl
icebp
mov
adcl
out
sarl
cltd
add
adc
movsb
inc
jmp
mov
ficomps
adc
and
jne
adc
xchg
ds
out
std
jbe
sub
sti
test
add
adc
mov
or
dec
or
add
xor
out
pop
lret
movsb
or
mov
addr16
add
in
outsl
lds
stc
adcb
adc
sub
test
mov
mov
out
mov
push
cwtl
sbb
fcmovnbe
imul
inc
cltd
mov
sbb
dec
cmp
daa
test
or
sbb
int
das
fisttpll
bound
and
fists
int
mov
enter
xor
not
push
jmp
outsl
popf
dec
das
jecxz
sub
out
push
and
push
fwait
testl
and
scas
sub
out
mov
mov
out
fisubrl
fsubrl
mov
adc
or
or
ret
dec
in
pop
test
jbe
rcr
js
ja
push
xchg
cmpsl
jo
add
inc
subl
pop
add
mov
into
add
test
fprem
cwtl
or
js
ss
adc
hlt
jb
add
pop
dec
adc
lods
ret
mull
in
mov
mov
xchg
sub
decb
cmp
sbb
lods
jns
sbb
loopne
mov
test
add
mov
lret
mov
into
stos
lods
add
mov
or
jne
insl
mov
add
mov
nop
mov
inc
or
mov
cmpsb
popa
lock
inc
sbb
movsl
rorl
mov
dec
dec
jl
pop
pusha
sub
fwait
add
test
xchg
jno
rolb
and
xchg
sbb
push
and
rcl
mull
adc
inc
test
pop
inc
stos
push
mov
lahf
je
add
rcr
xchg
mov
push
lods
stc
cmpsb
xchg
aaa
inc
xor
fdiv
xchg
sub
ja
or
pop
das
test
jecxz
out
loopne
cmp
rorb
mov
sti
mov
arpl
lods
mov
fcmovnbe
int
fnsave
lahf
and
xchg
sub
dec
mov
or
cld
and
sahf
jne
mov
add
inc
addr16
out
sub
add
hlt
sahf
data16
movsl
cmp
or
ret
pop
insb
inc
push
sub
sub
jmp
mov
xor
jne
mov
and
jae
out
es
pushf
subb
dec
cli
pop
push
push
cmpl
add
stc
scas
mov
jbe
xlat
xchg
mov
sbb
hlt
push
inc
add
xchg
leave
cltd
push
cmp
jbe
adc
jp
shl
jnp
pop
movsb
fs
and
or
lahf
cli
mov
add
pushf
push
cmc
cmp
mov
push
inc
xchg
adc
rcrb
call
fs
sahf
gs
shrb
repnz
xchg
cltd
adc
and
leave
and
psllq
sbb
loope
sub
iret
jo
add
push
push
mov
lret
jbe
jp
mov
mov
inc
and
jns
scas
push
int3
xor
mov
in
stos
notl
fmul
push
orl
pop
push
pop
cli
sub
out
sti
imul
les
nop
ret
sbb
jecxz
add
mov
sbb
mov
jns
inc
std
xchg
jno
xchg
into
scas
jbe
iret
imul
mov
test
ror
rclb
mov
mov
out
pop
cmpsl
jne
mov
into
pop
ret
jge
adc
mov
dec
inc
je
mov
out
mov
mov
pop
inc
push
cmp
mov
leave
pop
push
inc
xchg
call
sbb
je
sub
fisttps
xor
in
xor
addr16
mov
mov
iret
cltd
mulb
xchg
in
add
dec
jns
mov
inc
cmp
inc
xchg
push
jnp
sbb
cmp
push
sub
es
ret
cli
xor
jne
or
pop
mov
testl
in
inc
popa
xor
test
pop
aaa
ret
lret
push
add
mov
mov
cmpsl
leave
int3
into
xlat
pop
pop
les
cwtl
jae
cld
sub
insl
lahf
pop
pop
sti
pop
mov
mov
nop
lock
mov
xlat
cmp
ljmp
xor
dec
fistpll
loopne
or
stos
ret
cmpsl
es
mov
mov
gs
lea
mov
jge
fsts
add
jl
dec
out
outsl
imul
mov
or
xor
pop
out
mov
sub
mov
repnz
adc
jl
cltd
cmp
fucom
cld
repnz
add
popa
cmc
dec
lahf
lret
cli
add
arpl
loope
dec
aas
xchg
dec
scas
adc
sbb
and
es
inc
cmpsb
scas
das
adc
in
jmp
lcall
xchg
dec
into
icebp
jne
out
rcl
rcrl
fisttps
loop
aam
lahf
test
mov
adc
out
outsb
lret
dec
pop
imul
inc
push
das
xchg
add
ret
into
pop
rclb
or
rcrl
mov
js
dec
jecxz
clc
push
dec
cmp
les
int
push
inc
or
xor
xchg
stos
adc
pop
mov
cmp
jmp
pop
mov
pop
popl
and
fisubrl
test
stc
xchg
int3
push
jb
xchg
in
jo
sti
inc
ret
out
or
lea
ss
or
jbe
jno
jg
mov
pcmpeqw
roll
inc
mov
push
dec
out
popa
push
dec
ret
and
stos
jnp
shlb
cmovns
ja
mov
lds
into
push
mov
into
mov
add
out
sub
or
daa
rcl
test
mov
loope
in
sti
call
lock
xchg
lret
fwait
or
push
shll
imul
jno
sub
lret
jae
out
loopne
test
add
jp
mov
or
fstl
jno
pop
gs
pop
xchg
or
aam
lret
xchg
call
sub
in
das
mov
ljmp
in
cmp
lea
mov
out
subl
mov
or
gs
rcll
iret
mov
push
xchg
mov
cmp
lods
leave
sbb
insl
cmp
hlt
call
jns
adc
sbb
fidivrs
adc
jo
jb
xor
in
inc
xor
jmp
jns
xchg
jp
sub
cmp
pop
push
popf
aam
test
and
xor
pop
and
xchg
adc
adc
mov
shll
or
scas
jno
pop
mov
pop
daa
fsts
sbb
loopne
sub
jmp
inc
ds
mov
lahf
dec
xlat
xchg
and
aaa
in
sbb
xchg
dec
mov
es
mov
pop
jbe
enter
sbb
push
adc
gs
fbstp
dec
test
or
aaa
xor
jg
cmp
xchg
ja
leave
cmpsb
adc
rcrb
es
std
aas
int3
mov
jne
sar
xchg
out
flds
pop
fnstenv
in
mov
cs
jnp
mov
and
fcomip
pushf
popf
or
adc
in
fsts
mov
mov
sub
jecxz
std
adc
imul
test
jle
dec
adc
das
adc
es
stos
cmp
cmp
dec
or
lods
mov
rcrb
negl
ret
add
imul
test
jo
decb
imull
adc
jb
lea
mov
pop
fwait
test
mov
mov
lcall
pop
xor
xor
aas
cmpb
mov
jbe
xchg
sub
push
loope
cmc
aaa
js
jl
lahf
data16
cmpsl
test
and
jge
aad
mov
clc
xchg
jecxz
seto
pop
sarb
loop
insl
mov
fsubl
fimull
daa
push
dec
icebp
repz
push
inc
arpl
std
bsr
sbb
shl
jae
mov
add
jne
sar
rcr
std
jl
cltd
sbb
stc
pop
mov
popa
cmc
fldl
idivb
mov
push
mov
loope
pop
test
lea
jp
or
in
hlt
lret
push
jmp
xlat
test
jmp
out
jns
pushf
jge
stc
mov
insl
mov
shlb
xchg
add
xchg
out
cmp
add
cmc
rorl
push
lock
out
repnz
mov
jmp
aam
xchg
xchg
test
test
imul
movsl
jb
adc
popf
or
jns
mov
jno
xchg
lock
sbb
negb
icebp
and
andl
sbb
lods
fdivr
xchg
into
ds
outsb
add
xor
repz
sub
mov
dec
push
adc
and
add
mov
mov
mov
or
ds
jmp
or
or
mov
mov
or
xchg
mov
adc
idivb
in
jne
in
xchg
fadds
fnstcw
sub
outsl
sub
fs
rcrl
adc
mov
aam
push
in
test
mov
inc
test
js
inc
lds
xchg
lret
out
outsl
sbb
xlat
shll
cmc
and
icebp
lret
insl
xchg
loope
out
add
adc
fmuls
jb
mov
push
push
or
in
and
xchg
out
xchg
shll
jle
xchg
lret
out
xchg
xor
pop
or
lock
mov
jns
mov
push
push
add
lahf
mov
loop
mov
dec
cs
outsb
and
cmp
lods
push
or
stc
sbb
push
rorb
insl
sbb
aaa
int
pop
mov
xchg
daa
repz
outsb
xchg
std
cli
outsl
mov
loopne
enter
nop
add
inc
aam
imul
cli
push
int3
mov
mov
arpl
aam
mov
xchg
hlt
push
sarl
scas
data16
lods
subl
repz
mov
sbb
dec
xorl
mov
data16
and
popf
mov
aam
jns
xor
mov
dec
jmp
mov
jae
mov
mov
xorb
cmp
jmp
loopne
std
xchg
pop
icebp
jle
into
sbb
sbb
test
cmpb
ss
test
sbb
xorl
lods
out
cmp
rcrb
pop
add
adcb
cmc
inc
xor
in
data16
dec
into
fs
xor
jns
cmp
ficompl
sub
mov
push
push
xchg
pop
lock
stos
or
nop
mov
add
aaa
pusha
out
ret
out
cmc
cmp
stos
cld
pop
sbb
dec
mov
test
pop
xchg
cmp
add
push
mov
inc
mov
sbb
xchg
xor
imul
sub
dec
int
jle
adc
dec
shrl
repz
mov
scas
jmp
fnsave
add
xchg
cmc
dec
stos
or
mov
and
inc
cmc
mov
cwtl
stos
sbb
in
addr16
xchg
jo
xor
fisubrl
fldcw
xchg
ja
movsb
dec
mov
leave
insl
leave
std
xchg
cmp
movsl
cld
stc
popf
xchg
xchg
push
push
or
shll
lea
push
scas
mov
or
out
mov
loopne
int3
imul
fcoml
cmpsl
jg
push
or
mov
in
daa
dec
stc
xchg
scas
out
mov
jbe
shlb
mov
icebp
push
pushf
adc
mov
shl
mov
adc
push
popf
jl
inc
jo
aad
into
push
push
repnz
push
mov
mov
test
enter
add
cmp
mov
pop
test
dec
arpl
xchg
divl
dec
pop
jecxz
out
adc
adcl
out
scas
mov
iret
push
inc
in
jl
and
mov
xchg
mov
sub
jg
insl
inc
fsubl
fst
mov
jp
mov
mov
arpl
orb
add
icebp
inc
inc
out
fisttpl
ja
cmp
movsl
ja
int3
out
add
inc
or
mov
inc
divps
dec
in
dec
int3
fcmovbe
imul
sbb
addr16
add
ss
lods
imul
test
lret
sub
fisubl
ss
sbb
in
inc
mov
sub
repz
jl
mov
rcl
clc
jbe
adc
fidivs
pop
nop
sub
in
enter
pop
fsubs
shl
leave
or
ret
add
loopne
mov
in
out
imul
repnz
addr16
sub
in
xchg
into
inc
jne
adc
xor
fcom
mov
test
js
mov
adc
jle
movsb
insl
out
leave
inc
or
xchg
lods
and
in
dec
sbb
cltd
test
lahf
ret
adc
push
ds
add
gs
cmp
pop
loopne
mov
icebp
dec
gs
mov
lret
push
cmp
inc
pop
int3
adc
cmp
enter
jns
sti
or
inc
inc
sub
rcr
cli
cmp
orb
out
mov
mov
aam
xor
icebp
xchg
xor
push
or
mov
sub
xchg
jp
cmp
fadds
mov
leave
cmp
popa
push
aad
data16
sub
jg
sbb
jb
aaa
add
push
xchg
push
pop
cmpsl
int3
mov
aam
fldl
cld
mov
lock
push
mov
pushf
icebp
dec
iret
popf
lea
enter
int
ret
mov
push
inc
clc
arpl
mov
inc
dec
in
push
and
cmp
cmp
test
icebp
xor
out
dec
inc
insb
jae
sub
pop
lds
or
ror
daa
jecxz
mov
push
cs
push
aam
aad
cld
inc
adc
push
fld
pop
pop
in
iret
xor
icebp
and
cwtl
dec
inc
sbb
xlat
mov
fstp
arpl
jno
cmpsb
mov
jp
int
scas
sub
dec
nop
lea
jp
fstps
int
adc
xchg
out
daa
jle
movsl
fcom
insb
lods
add
stc
repz
into
rorl
dec
aaa
xlat
sub
push
mov
in
std
pop
fiaddl
sbb
into
adc
lods
xchg
adc
cmp
in
sahf
mov
shlb
cmp
adc
mov
sbb
nop
addb
or
inc
into
dec
mov
add
lahf
inc
out
cmpsb
stos
ja
rolb
xchg
lock
dec
pop
adc
aam
scas
lods
adc
dec
das
mov
rorl
fwait
xor
repz
mov
aad
in
adc
and
pop
cmp
inc
inc
sbb
jns
and
mov
sbb
rcrb
lret
or
or
push
mov
rcl
mov
fistpll
cmpb
xor
pushf
repz
mov
idivb
adc
sub
jne
in
pop
pusha
and
sbb
mov
dec
xor
vunpckhps
roll
mov
pushf
mov
negl
and
sbb
cmp
lret
lret
pop
dec
dec
jae
xor
out
ficomps
cmp
cmpsl
xlat
inc
aaa
xor
or
gs
lds
xchg
jg
orl
cmp
lods
fdivrs
xchg
pop
push
das
cwtl
push
shl
mov
push
xor
push
lock
clc
shl
or
pop
pop
lahf
pop
xlat
cmc
inc
sbb
std
jae
sahf
sarb
fwait
xchg
outsb
jle
mov
cmp
push
and
fildll
jmp
pop
xchg
ror
loope
loop
bound
lds
jl
aad
sbbb
or
imul
mov
fidivs
and
inc
xchg
add
das
insl
and
lea
sub
xchg
inc
lret
inc
hlt
mov
inc
xor
xor
pop
or
xchg
scas
rol
sub
cmp
lret
mov
adc
int
mov
jl
pop
outsl
sbb
test
cmp
cli
and
rclb
inc
testb
cld
mov
dec
into
mov
adc
or
push
jbe
test
inc
sahf
sub
inc
icebp
pusha
jmp
in
push
rcl
enter
out
jno
lock
cwtl
dec
imul
aas
mov
jbe
mov
sub
leave
sbb
sub
xchg
decb
dec
cld
rolb
xor
push
mov
sbb
pop
dec
mov
push
fsubrl
dec
and
arpl
mov
push
adc
jno
call
inc
fisubrs
mov
pop
test
xor
push
jne
or
add
xor
jmp
pusha
dec
cmpsb
jle
push
sar
xor
adc
mov
dec
es
data16
ds
xchg
pop
cmp
jg
fs
shll
hlt
mov
xchg
in
push
mov
inc
xlat
xchg
fcoml
into
in
movsb
mov
inc
inc
push
push
loopne
cmpsl
rorl
adc
pop
or
testl
in
rcl
and
pop
jnp
pop
and
xor
push
rcl
negb
add
filds
repnz
mov
adc
sahf
ds
test
add
sbbb
fcomps
pusha
fcoml
add
addr16
fstp
test
mov
adc
ja
ror
mov
mov
movsl
inc
dec
xchg
xchg
lret
xchg
mov
push
test
int
ret
jb
push
xchg
imul
jnp
pop
xor
mov
adc
stc
dec
mov
sub
add
xchg
xchg
lods
int3
rolb
enter
mov
pop
jg
jno
inc
ret
jb
jle
es
push
add
call
inc
cmp
dec
and
out
popl
inc
xor
xchg
es
sub
mov
fistpll
ds
push
in
jae
bnd
jbe
xchg
mov
xor
sbb
fsubl
test
xchg
gs
jbe
in
jns
xchg
add
hlt
clc
inc
rorl
mov
sub
into
stos
mov
push
jg
cwtl
cmp
ja
inc
mov
mov
cli
pop
aas
aam
pusha
cmpsb
sbb
faddl
xorl
cltd
fwait
mov
and
lcall
push
mov
aam
xor
out
test
loopne
js
xlat
lods
adcb
lock
movl
rcll
lea
in
mov
hlt
pop
sub
ret
jg
sub
mov
test
rcrb
xchg
call
sub
nop
iret
jmp
dec
imul
and
mov
pop
fwait
popf
mov
inc
call
xlat
or
ljmp
test
scas
dec
xchg
negb
pop
push
pusha
out
inc
mov
or
lods
out
xor
push
in
nop
jae
fimull
into
sub
mov
fs
out
mov
dec
pop
or
push
addr16
jmp
push
ret
fisubrl
add
scas
or
mov
xor
xchg
lods
in
dec
dec
inc
xor
aas
sbb
popf
pop
stos
xchg
loope
and
mov
cmpsb
fwait
rcl
pop
stos
inc
and
out
xchg
push
mov
sar
sti
stc
cltd
testw
shrb
imul
inc
std
iret
mov
jp
mov
push
fs
jbe
dec
mov
and
mov
push
sub
sahf
mov
loope
pop
icebp
mov
insb
pop
mov
dec
and
mov
sub
cmc
clc
adc
add
addb
repnz
in
mov
ja
decb
mov
mov
std
cmpb
mov
mov
add
and
jo
mov
data16
mov
insl
cmp
xor
test
int3
data16
in
cmc
jmp
add
or
into
fnstenv
shlb
push
lds
pop
inc
cmp
loope
jecxz
sbb
leave
cld
jge
sbb
xor
and
and
mov
xor
popa
pop
push
aad
sbb
leave
pop
iret
div
test
out
mov
or
cmp
jo
outsl
adc
ss
jno
mov
push
dec
jmp
loop
dec
pop
pop
adc
inc
scas
lcall
mov
or
and
pop
pop
or
add
mov
pusha
jge
nop
in
cs
mov
cwtl
mov
mov
inc
stos
ficompl
sub
mov
adc
xchg
or
arpl
or
int
rol
sub
or
jecxz
aaa
pop
movl
es
fcomip
out
inc
jle
jne
or
and
pop
stos
iret
push
push
test
add
insb
repz
add
xor
or
and
mov
jg
mov
pushl
fucomp
das
cmp
shl
int
scas
xchg
in
xor
sbb
sub
outsb
cmpb
rcl
mov
add
add
loope
shlb
pop
rep
hlt
push
in
mov
dec
data16
pop
stos
jecxz
pop
mov
fcmovnb
pop
dec
cmc
fiadds
lret
mov
push
push
xchg
mov
arpl
sub
sub
js
mov
xchg
ljmp
aas
dec
mov
or
push
and
and
adc
jnp
add
sbb
and
xchg
push
push
sub
mov
imul
fmuls
cmp
hlt
test
repz
jge
lock
push
stos
in
push
xor
shrl
stos
xchg
aad
cmpsb
xchg
adcb
pushf
fs
dec
into
xlat
mov
fnsave
or
pop
dec
and
dec
mov
xchg
cmp
ja
mov
dec
adc
popf
adc
or
test
add
out
repz
dec
mov
jno
xchg
push
add
mov
xchg
into
nop
dec
cs
xchg
and
jmp
xchg
or
pop
adc
out
hlt
jp
jae
dec
inc
adc
adc
fwait
jne
and
mov
sub
mov
aaa
sbb
cld
pusha
xchg
mov
fwait
add
aam
sbb
xchg
sub
ss
cmovp
imul
mov
push
and
or
pop
iret
gs
fidivrs
data16
sti
fbld
mov
stos
gs
pop
dec
sub
xor
or
lret
jge
ja
or
jmp
xlat
ror
sub
std
xchg
mov
pop
cmpsb
in
fadd
fs
mov
mov
leave
fmulp
ss
mov
cs
or
sbb
aad
in
imul
jb
pop
test
cwtl
pop
sub
out
popa
in
cmpsb
movl
hlt
cmpsl
xor
xor
arpl
xlat
pop
aam
cmp
mov
jbe
inc
imul
mov
neg
mov
cmp
in
aam
test
call
xchg
push
je
pop
dec
pusha
out
inc
jns
push
icebp
or
push
repnz
andl
addr16
lock
jb
in
dec
mov
movsb
fistpll
inc
or
sub
jne
enter
cli
jo
push
es
or
test
cmp
add
int3
ljmp
cmc
sbb
scas
mov
mov
pushf
mov
dec
aam
js
pop
inc
sbb
shrb
es
out
dec
or
adc
jno
mov
ljmp
lret
out
rcll
std
inc
xchg
mov
ret
loop
mov
jecxz
and
shlb
mov
pop
in
pop
arpl
cmpsb
je
ja
gs
xchg
xor
aam
jnp
jle
rol
in
sub
repnz
xor
adc
fwait
lcall
mov
push
mov
push
std
shrl
ljmp
gs
pop
dec
push
push
push
adcl
pop
jp
adc
cmpsl
and
into
sbb
int
lds
cli
jnp
push
repz
jge
or
into
jecxz
shr
cs
dec
push
stos
jmp
imul
push
push
lret
inc
cmp
adc
mov
enter
test
rcrl
fs
data16
sbb
adc
adc
push
add
jl
xlat
jmp
mov
sbb
or
orps
lret
aam
stos
inc
xchg
xchg
mov
rorb
stos
or
mov
xor
pop
sub
xlat
pop
push
add
xchg
push
pop
lods
push
or
test
sub
xchg
cmpsl
or
pop
xchg
out
decl
divb
push
rorl
js
ret
push
test
cld
test
push
jmp
jne
mov
cmpsl
and
adc
mov
add
test
inc
ljmp
push
es
jg
push
mov
popf
aam
hlt
addr16
dec
jae
pusha
lds
mov
adc
mov
xlat
xchg
inc
js
aas
shr
clc
cmc
fcompl
lea
lret
add
fsub
and
rcll
jmp
sbb
sahf
cmp
sub
inc
into
stos
sub
out
xor
and
xor
lock
push
repnz
sub
shrl
pop
mov
pop
mov
sub
mov
and
pop
out
mov
dec
mov
jecxz
mov
addr16
mov
sbb
adc
or
xchg
loop
dec
cmp
cli
and
mov
inc
mov
in
add
dec
adc
add
fiaddl
xor
scas
or
ja,pt
sbb
cwtl
pop
mov
mulb
leave
or
dec
shrl
jnp
stc
into
mov
hlt
fcmovne
dec
lock
sbbl
cmp
in
in
test
int3
andl
in
dec
and
add
fcomp
and
gs
mov
adc
push
sahf
jbe
adc
xchg
scas
movsl
mov
mov
rcl
xchg
imul
push
xchg
decb
sub
clc
aad
fisubs
adcl
sbb
adc
stos
jae
jno
or
or
lahf
dec
flds
int3
cmc
xchg
into
ss
jne
leave
cmp
sbb
mov
pop
xchg
or
push
push
ret
mov
xlat
push
xlat
inc
cs
jnp
xchg
xchg
int
lock
jbe
sbb
mov
ror
ret
mov
orb
cmc
incb
sbb
push
rcr
repz
arpl
fidivs
pop
fimull
xor
test
xchg
push
and
out
mov
pop
hlt
mov
push
sub
mov
xor
jne
xor
mov
mov
jge
testb
and
and
push
xor
add
addb
ja
fists
nop
addl
inc
mulb
inc
add
rorb
xchg
int
out
ret
lahf
les
imul
rcrl
jmp
dec
mov
imul
pusha
das
subl
xchg
pop
xor
and
dec
andb
pop
lcall
sbb
add
pushl
dec
mov
cltd
mov
fistpl
lahf
je
lods
or
cmp
lret
call
adc
in
jmp
cwtl
push
call
sti
adc
xor
cmp
push
pop
push
ret
jno
fstl
xchg
add
in
inc
das
push
adc
in
inc
jo
popf
jae
into
jns
aas
dec
stos
aam
or
aad
add
jb
and
jnp
xchg
and
bound
mov
mov
adc
dec
cli
das
push
dec
adc
loop
je
sub
int
xchg
rolb
ret
and
mov
loop
lods
dec
cli
sarl
dec
subb
movsl
push
xchg
enter
in
dec
mov
xor
jne
dec
xchg
sub
mov
inc
lods
sbb
ja
je
cmp
leave
inc
jg
insl
clc
sbb
pop
mov
rcrl
push
ds
cmp
sub
es
mov
adc
or
rcl
enter
jnp
push
jmp
inc
out
pop
pop
pushl
stos
lods
cmpsl
rorb
jge
pop
iret
add
sub
insb
ror
cmp
cmc
cwtl
in
mov
scas
push
pop
int3
and
addb
fcmovbe
push
pop
popa
mov
test
jbe
mov
xor
jp
iret
push
shll
testb
inc
rclb
mov
mov
xorb
cmc
xor
jbe
xchg
jle
cmp
fwait
jo
pop
mov
fcompl
pop
lods
jae
das
xor
xchg
pop
in
arpl
jb
incb
loopne
fdivl
lods
out
scas
repz
clc
pop
dec
mov
cmp
and
xchg
icebp
in
adc
push
pop
or
mov
add
dec
test
adc
stos
inc
call
dec
jecxz
adc
cmpsl
ss
pop
and
inc
jecxz
std
pop
frstor
aas
imul
hlt
cmpsl
xchg
cltd
enter
clc
scas
dec
rcrb
cwtl
add
repnz
int3
xor
jmp
arpl
xchg
jmp
mov
aad
add
or
lret
mov
adc
mov
push
dec
jo
addl
or
mov
xchg
add
mov
jne
test
cmp
nop
shll
daa
mov
andl
stc
mov
out
rcl
les
cmp
and
push
lods
rolb
cmp
into
ret
fstps
xlat
cmp
adc
bound
je
add
shll
mov
inc
test
jmp
arpl
out
pop
js
or
daa
inc
lds
shr
push
jne
inc
inc
mov
aaa
pop
daa
dec
in
sbb
inc
push
rolb
or
xchg
aaa
popf
inc
mov
cmp
fs
xchg
jae
fisttpl
int3
lods
mov
add
mov
push
lahf
pop
dec
jbe
pop
rolb
mov
and
addr16
in
cld
mov
je
mov
shl
out
jg
pop
adc
push
or
mov
jmp
xchg
inc
into
pop
repnz
jns
mov
pop
cwtl
lods
dec
in
dec
loopne
xchg
int
outsl
jge
scas
mov
mov
loope
push
sub
aaa
mov
jnp,pn
push
pusha
cmp
xchg
sub
xor
cmp
push
jno
xchg
xor
lret
pop
lcall
mov
xchg
xor
mov
lcall
jne
inc
in
sub
pop
outsl
push
hlt
stos
push
sub
mov
inc
jbe
movsl
icebp
enter
pop
push
mov
rcll
push
loopne
inc
shll
add
push
sahf
in
das
es
cmp
fcoms
sbb
call
adc
out
js
and
addr16
dec
add
mov
jmp
dec
lahf
cmpsb
xor
fcmovnbe
icebp
movsb
iret
rcrb
loopne
add
daa
xor
ss
jp
jecxz
cmc
repnz
cs
jmp
out
or
clc
mov
sub
into
dec
jo
arpl
hlt
or
push
and
jmp
pop
inc
mov
daa
iret
push
or
sbb
mov
bound
mov
add
xor
jmp
fdiv
leave
and
iret
sbb
mov
fs
pusha
sub
mov
push
xchg
jnp
rcr
inc
push
mov
mov
mov
mov
xchg
jae
add
and
add
adc
popf
adc
inc
mov
push
jnp
fld
mov
xor
clc
push
test
cld
in
pusha
or
xor
fldenv
cwtl
push
sbb
adc
or
sti
ljmp
bound
scas
cli
fisttpll
dec
lods
filds
mov
push
adc
sbb
in
repnz
push
mov
mov
pop
xchg
popa
mov
jns
push
test
stos
mov
or
jmp
xchg
xor
pop
xchg
cmpsl
fisubs
sub
jbe
mov
mov
lock
popf
dec
stos
jo
lods
sbb
je
sbb
adc
lods
adc
cmp
cmp
ret
jo
mov
jge
pop
xor
lret
xchg
add
sti
cwtl
movsl
dec
repnz
fidivs
push
push
aas
push
data16
addl
xor
mov
ja
dec
leave
scas
shll
aas
xchg
sahf
dec
push
cmp
cmp
sub
jns
les
lret
shll
out
into
pop
fcomps
aam
sahf
das
cmp
dec
and
lea
dec
aaa
movb
int3
shl
push
xchg
nop
dec
cmp
mov
fcomip
sub
ja
cs
push
ficompl
or
inc
scas
fstp
test
fwait
lret
lds
inc
lret
xchg
or
mov
mov
scas
bnd
loop
test
addb
aam
insb
insb
xchg
shll
mov
xchg
xchg
sbb
lret
xchg
pop
out
xchg
adc
pop
or
dec
aas
test
inc
arpl
out
lret
sbb
push
mov
jecxz
inc
xchg
daa
dec
adc
shr
cmpsl
pop
mov
pushf
mov
inc
or
push
aas
lret
clc
sbb
mov
push
sti
jl
or
shrb
test
fisubrl
pop
inc
mov
aam
lret
repnz
push
cmpsl
sbb
push
lods
add
sub
mov
sbb
mov
mov
loopne
or
xchg
adc
sub
dec
mov
push
mov
cltd
cli
icebp
push
adc
and
and
nop
out
cmp
or
mov
or
jmp
fisubrs
sub
jecxz
fildl
pop
xor
jmp
sbb
sub
mov
jns
lahf
and
inc
jl
xchg
push
or
mov
rcrl
push
scas
jge
pop
push
fcom
in
mov
or
xor
mov
jnp
arpl
icebp
push
sub
sbb
and
imul
mov
xchg
mov
loop
lcall
test
mov
sub
cmp
jo
jecxz
cmp
ret
or
dec
sub
lods
cmp
xlat
in
jmp
push
add
aaa
pop
or
push
inc
mov
sub
lds
out
into
jp
test
xchg
out
out
fidivrs
push
dec
adc
inc
sar
cmc
or
movsb
mov
add
push
das
testb
xchg
or
rcrl
out
push
add
int
hlt
mov
outsb
xor
lret
ja
insb
mov
cli
in
repz
clc
mov
mov
leave
dec
aam
nop
lock
or
or
xchg
aad
sbb
decb
das
jmp
sbb
mov
sti
and
test
inc
xor
mov
sub
dec
cmovge
negb
add
lods
popf
mov
add
push
push
jecxz
or
xchg
ret
cmp
jmp
hlt
xchg
sbb
bound
mov
jge
or
pop
popa
ja
bswap
push
sbb
clc
push
mov
mov
xchg
and
mov
sbb
xchg
frstor
push
jg
mov
ror
sbb
scas
data16
mov
mov
push
loope
cmp
jp
imul
adc
movsl
cmp
push
jb
cmp
icebp
push
hlt
not
adc
jecxz
add
mov
lret
pop
adc
jge
out
pop
push
imul
and
outsb
pop
inc
inc
lock
and
mov
fld
call
push
rolb
mov
inc
push
and
lret
mov
insl
test
push
inc
or
mov
sub
push
xor
jge
lods
shll
or
xchg
sbb
in
int
add
mulb
jecxz
aam
sbb
push
scas
ret
mov
lods
jno
and
inc
push
jmp
imul
ljmp
dec
push
or
lret
xchg
or
clc
or
fistl
xchg
cmp
iret
pop
int3
and
mov
mov
popa
scas
inc
fbld
sub
sbb
dec
rcll
stos
sahf
xor
lret
dec
in
or
add
push
in
xor
into
mov
cmp
pop
shlb
push
in
mov
mov
jg
out
sub
pop
aaa
jo
stc
shlb
add
divb
xchg
es
inc
mov
mov
jle
adc
test
or
jbe
out
push
lock
push
and
cld
pop
inc
es
jmp
pushf
movl
enter
int
inc
aas
lret
sarl
cmpsl
icebp
mov
and
das
test
and
jbe
imul
inc
lcall
ljmp
cmc
mov
adc
pop
pop
cli
es
shlb
mov
mov
xor
push
pop
insl
out
imul
push
imul
pop
ds
insl
stos
rcl
xlat
loope
test
jae
or
push
xor
test
out
insb
mov
and
mov
leave
pop
movsl
test
mov
int3
add
stc
xchg
mov
xchg
lods
test
xor
cli
mov
in
mov
mov
stc
cmp
repz
xor
pop
jne,pn
or
fdivp
addr16
push
mov
pop
cmpsb
mov
jne
cli
and
out
push
rorl
mov
mov
jle
push
jmp
push
imul
rcl
jle
ror
in
mov
nopl
popf
cs
clc
push
push
or
jne
popa
cmc
sub
mov
add
imul
mov
iret
xchg
pop
xchg
mov
ret
nop
mov
neg
sbb
aad
sbb
lcall
scas
push
jns
aaa
xor
jp
bound
std
cmpsb
inc
gs
mov
shll
pop
or
adc
mov
xchg
xor
sub
movb
inc
mov
out
sbb
push
loope
das
shrb
pop
imul
mov
nop
xchg
mov
hlt
sub
add
imul
iret
ds
dec
sbb
pop
mov
sub
jnp
dec
movsb
lret
sti
mov
mov
cmp
leave
pusha
cwtl
push
cs
lret
xlat
call
mov
pop
js
and
inc
push
in
mov
cmp
inc
xlat
movsl
mov
in
aaa
push
js
mov
jl
push
mov
mov
das
sbb
cmpsl
mov
mov
ret
push
repz
adc
inc
lock
fsub
xchg
inc
push
clc
lahf
jo
push
sbb
imul
mov
lds
push
mov
out
jl
rcl
adc
xlat
sub
push
and
sbb
pushf
push
imull
mov
mov
int3
icebp
ja
ret
movsl
pop
mov
sub
xchg
loope
pop
push
xchg
dec
out
int
jmp
and
mov
out
lock
das
pop
sub
push
dec
dec
stos
inc
mov
sbb
fld
xchg
std
sahf
xchg
outsb
cli
mov
xchg
sti
jmp
jg
push
loopne
popf
and
aaa
jl
rolb
insl
pop
pusha
mov
stos
cmpsb
aad
in
xchg
adcl
ret
add
leave
pop
mov
nop
and
cmc
adc
leave
int
jno
aaa
pop
cmp
add
jns
adc
mov
rcl
in
cmpsb
add
pop
fwait
scas
mov
or
shlb
jno
out
dec
add
jb
sub
dec
push
jae
pop
jmp
inc
sub
push
shl
sub
je
add
inc
scas
sbbl
gs
aam
lret
add
pop
xchg
cmp
mov
jbe
test
sahf
mov
pop
mov
dec
icebp
dec
lret
mov
aaa
jecxz
cmpsb
pop
xor
sub
pop
shll
or
lret
call
outsb
pop
je
test
sub
inc
loop
dec
mov
add
or
sbb
push
mov
adcb
jge
aaa
adc
add
mov
add
rolb
dec
ret
inc
mov
in
test
inc
js
sbb
mov
aam
popa
das
lods
xchg
cwtl
jns
repz
testb
cwtl
fistpll
xor
lds
test
push
jae
push
test
shl
and
fs
arpl
call
add
cli
or
jb
hlt
xchg
imul
adc
add
adcb
shufps
add
adc
lea
xor
fsubl
repnz
mov
ss
mov
iret
lret
fldt
inc
shlb
scas
mov
mov
ret
dec
test
mov
push
fmul
notl
and
fs
pusha
xchg
gs
fbld
cmp
repz
adc
jl
pop
aad
cltd
push
add
shrb
popa
xor
mov
jecxz
mov
fstl
mov
test
cmp
in
pop
push
arpl
inc
cmp
jne
jecxz
fcmovbe
add
cmp
adc
xor
aas
inc
enter
imul
jg
stos
inc
out
dec
dec
xchg
ret
mov
stc
push
mov
mov
insb
inc
push
in
mov
inc
pusha
faddl
sbb
jbe
imul
mov
cmpsb
scas
or
jne
inc
sub
lea
jnp
out
loope
roll
jge
scas
jbe
xchg
stos
push
cld
fisubs
mov
ja
and
dec
jns
mov
shrb
push
pop
call
and
or
fstps
mov
and
iret
or
cs
jne
stos
pop
push
adc
xchg
cwtl
xchg
xor
fwait
push
pop
stos
shll
int3
mov
or
and
jp
sub
xchg
leave
xchg
push
adc
or
rcl
loop
sti
pop
and
mov
into
sub
pop
fcmove
or
movsl
dec
ret
dec
pushf
ret
sub
hlt
sbb
lds
sbb
sub
push
mov
mov
das
fstpl
xchg
shll
lret
push
out
cmpsb
push
mov
mov
imul
mov
xor
mov
adc
push
push
jnp
pop
jb
push
icebp
in
es
call
mov
jno
cmp
lret
cmp
lret
jnp
mov
test
adc
inc
jne
mov
inc
sarb
xchg
mov
sbb
addr16
jb
out
push
test
loop
push
mov
inc
xchg
cmp
inc
lret
mov
push
jbe
inc
jb
push
pop
xchg
ljmp
movsb
jmp
aad
xchg
fldcw
imul
add
sub
nop
adc
movsl
loope
mov
fstpl
sbb
iret
cmpsl
fwait
push
out
jns
pop
dec
mov
jle
mov
dec
xor
add
clc
lret
negb
mov
cwtl
mov
push
in
stc
popf
and
imul
lock
iret
add
std
sbb
mov
add
mov
xchg
pop
mov
adc
or
jle
arpl
fucomi
cmp
aaa
jne
xchg
mov
dec
mov
loop
cmp
in
jae
out
aas
push
leave
add
shlb
dec
gs
popf
push
mov
je
sarl
inc
cmpsl
xchg
add
cltd
pop
dec
test
outsl
add
stos
jecxz
sarl
xchg
cmpsl
cmp
push
es
cmp
clc
ds
cmp
mov
inc
leave
pop
jne,pn
gs
cmp
jbe
popa
push
jmp
cmp
push
push
mov
cmp
out
test
and
push
xchg
shlb
test
movsb
shrb
pop
adc
inc
xorb
jo
mov
xchg
mov
adc
pop
frstor
adc
sub
or
gs
xchg
or
inc
lret
mov
pop
mov
jno
inc
mov
pop
cwtl
mov
jmp
dec
filds
sahf
mov
faddl
insb
sub
dec
arpl
jge
cld
movsb
jbe
xchg
cmpsl
lock
pminsw
test
popa
inc
outsl
xor
jae
insb
cmp
pop
push
shlb
mov
stos
cmp
xchg
mov
add
data16
aaa
andl
jbe
jne
cmc
mov
add
in
dec
push
jb
mov
pop
movb
stos
lahf
jecxz
dec
out
fsubr
ds
cmp
pop
in
fdivrl
lret
scas
das
push
lcall
push
ja
mov
mov
inc
and
adc
stos
sub
xchg
loop
aam
push
ss
jg
nop
call
fisubl
mov
bound
pop
cld
insb
outsb
sbb
xchg
stos
push
cmpsl
pop
mov
push
xor
sub
inc
out
popf
add
mov
push
jecxz
iret
call
mov
push
push
sbb
ja
scas
pushl
subb
icebp
hlt
lods
dec
fwait
ss
xchg
xor
sti
jg
sbb
or
add
and
pop
xor
xchg
push
mov
sarl
outsl
loopne
fisubrs
lods
lret
inc
jne
aam
sti
pop
jno
mov
dec
add
stc
inc
or
pop
mov
adc
and
out
pushf
out
inc
sub
or
stos
ss
lcall
and
or
sub
test
sahf
out
mov
addr16
ljmp
popa
ret
js
in
shlb
int
rclb
adc
lods
les
jg
gs
and
or
push
mov
popa
mov
cmc
icebp
and
dec
or
dec
mov
push
push
mov
aad
mov
mov
lret
and
xchg
add
out
adc
or
es
xor
gs
mov
daa
inc
inc
subb
test
subb
mov
call
icebp
cmp
add
mov
cmp
pop
ror
mov
lock
into
js
jle
adc
lods
out
mov
push
mov
and
dec
fld
daa
xchg
movsl
shrl
cmp
into
clc
jne
push
jmp
jp
lods
rolb
fwait
mov
push
push
jge
push
or
mov
dec
aam
sti
in
pop
mov
test
sub
loop
lock
dec
sub
out
push
in
add
jae
dec
aaa
fistpll
fcoml
fisubrs
testl
imul
jae
push
lahf
cmp
ret
and
shrl
lods
mov
lret
adc
push
movsb
les
or
in
xchg
mov
iret
daa
out
ret
sub
sbb
mov
sar
mov
xor
call
leave
pop
xchg
push
repnz
cs
ja
pop
sarb
lock
ret
xor
outsb
jecxz
or
inc
cmp
mov
xchg
inc
rcrb
cmc
sbb
fld
sarb
int3
lahf
inc
jo
nop
jnp
sti
test
sbb
add
push
push
shlb
mov
cmp
push
jg
adc
lret
sub
out
out
mov
rolb
sahf
push
jne
inc
push
sbb
lods
sub
jmp
clc
insb
inc
add
push
or
or
add
ficoml
dec
cltd
cmp
and
sub
mov
add
jae
mov
and
out
in
pop
jge
xchg
jmp
add
mov
mov
jl
lret
in
fwait
xor
lock
xchg
and
mov
stos
stc
into
push
lret
or
mov
mov
mov
push
mov
jle
mov
or
outsl
mov
xchg
cmp
xchg
shll
ds
pushl
and
or
es
sbb
xchg
loop
loope
lret
xchg
idivl
stos
jb
aaa
sbb
aam
xchg
mov
addr16
outsb
clc
xor
dec
sbb
lret
jae
ds
repnz
ljmp
sbb
stos
xor
ret
rorl
fst
mov
repz
aad
in
xchg
sbb
push
dec
sub
imul
enter
push
es
jne
ror
and
ds
mov
mov
mov
out
fiaddl
push
push
and
sahf
push
mov
pop
das
or
leave
push
scas
orl
pop
cs
in
scas
push
in
xor
jecxz
pop
lods
xor
or
lcall
and
sub
push
clc
push
rcll
xor
cltd
xchg
js
adc
mov
xchg
push
sub
xchg
sti
mov
and
sahf
xor
dec
cmp
into
or
cmp
mov
xchg
popa
ror
sub
out
cmpsb
mov
mov
inc
repz
stos
lret
sti
fsub
andb
in
jecxz
jmp
dec
xchg
ss
fwait
rcrb
push
jl
and
fldt
movsl
push
bound
lods
insb
in
fs
lock
inc
jecxz
pop
aam
xlat
xor
mov
lods
mov
push
pushf
mov
pop
jae
insb
or
stos
add
sarl
xor
test
shrb
mov
loopne
aas
jae
inc
dec
out
call
enter
jae
aam
fdivrp
push
add
or
push
pop
arpl
add
adc
sbb
ret
jno
cld
jecxz
push
and
rcrb
leave
mov
push
sub
es
ljmp
pop
pop
dec
mov
pop
xchg
or
or
sub
push
enter
addb
fisubs
icebp
sti
stc
mov
mov
testb
and
push
iret
adc
mov
push
push
imul
jns
add
xchg
out
dec
clc
sub
or
out
inc
jbe
aad
push
out
bound
into
popf
cmp
adc
rcrb
add
pop
mov
mov
mov
lods
loope
and
pusha
ds
movsl
lds
repnz
cmp
rclb
pusha
mov
xor
aam
and
add
fldln2
adc
dec
dec
and
fwait
adcl
inc
mul
jo
mov
cs
add
mov
push
and
aam
pop
mov
inc
adc
rcl
mov
cmp
js
clc
inc
and
and
pop
jmp
dec
inc
push
push
or
and
xchg
adcl
mov
mov
fabs
mov
dec
jbe
psllq
push
into
ljmp
mov
iret
mov
punpckldq
insb
fimull
imul
sub
loope
jno
dec
es
aad
lds
mov
sbb
ret
cs
pop
fmul
mov
inc
fldenv
rcrb
not
loope
lret
addr16
cmpsl
jl
dec
mov
inc
or
jp
pop
pop
in
jmp
mov
int3
stc
push
int3
xchg
ja
xchg
pop
movb
sbb
imul
jo
mov
jb
cmp
jecxz
xor
inc
les
not
dec
pop
sbb
inc
movsb
or
mov
pushf
aam
cs
pushl
aam
mov
imul
push
test
jle
les
pop
inc
inc
movsb
xchg
hlt
pop
push
and
add
out
cmpsb
mov
sub
xchg
and
loop
jno
jecxz
dec
test
int
push
insl
sub
gs
add
adc
stc
rcrl
dec
imul
and
xlat
lret
and
outsb
mov
dec
lods
hlt
inc
repz
xchg
dec
xchg
into
mov
fnstsw
ljmp
cmp
subl
loop
lahf
sbb
xor
adc
or
movb
sbb
ret
add
adc
daa
cs
xor
outsb
je
push
push
or
and
xchg
sbb
pause
sub
mov
inc
mov
pop
insl
mov
outsb
push
loop
popa
push
ss
add
int3
cmp
das
push
in
mov
cmpsb
ret
dec
out
scas
sbb
icebp
xchg
pop
dec
lods
rcl
aad
shrb
dec
hlt
jg
jns
xor
adc
push
daa
adc
aad
dec
in
ja
cmp
sti
shlb
icebp
daa
inc
and
test
cmp
std
flds
adc
xor
je
pop
push
and
push
scas
add
fidivrs
pop
sub
inc
dec
sti
into
clc
aad
dec
add
jp
ds
and
nop
mov
mov
fists
mov
adc
pop
mov
mov
dec
cmp
jbe
mov
push
mov
push
xchg
inc
jge
jne
fs
push
ss
outsb
mov
dec
cmp
js
scas
push
mov
gs
out
inc
lock
jge
mulb
mov
aas
loopne
pop
dec
xor
add
int3
pop
dec
dec
add
fisubrl
es
call
mov
jecxz
mov
pusha
je
lahf
adc
cmp
pop
add
push
stc
push
cmp
ficoms
fs
stc
iret
fiaddl
js
pop
aad
mov
cmp
mov
lret
addr16
cmp
xchg
lcall
cltd
add
outsl
dec
push
fsts
pop
ret
leave
push
add
into
push
imul
ficoms
pop
xchg
nop
or
loop
test
and
shlb
dec
add
aaa
je
into
jle
mov
sbb
sub
adc
fwait
dec
lock
mov
test
sbb
pop
orl
push
ljmp
mov
inc
adc
es
shl
dec
std
mov
mov
rolb
int
dec
fbstp
sbb
jbe
ds
dec
mov
shl
jnp
repz
ds
dec
cmpb
leave
cmp
mov
shlb
subb
mov
cmpsb
and
push
outsl
gs
cmp
sbb
jge
subl
sub
cld
in
pop
inc
mov
xor
or
jl
push
test
aaa
pop
add
mov
dec
movsb
push
cwtl
xor
bound
sbb
je
cmp
jge
movsb
aaa
pop
or
jle
shrb
xchg
jecxz
mov
jae
cs
pop
shrl
jge
add
aaa
add
fadds
loopne
pop
not
dec
in
cmp
lcall
inc
pop
scas
lahf
cs
or
in
jae
fwait
mov
stc
add
pushf
ss
xor
ret
sti
push
jge
daa
push
arpl
pop
mov
sbb
sub
dec
mull
jle
xor
jmp
rol
sbb
lret
adc
sub
jmp
mov
xchg
lea
mov
out
jle
movsl
ljmp
push
test
and
inc
fsubrs
lret
je
iret
or
out
dec
adc
pop
sub
mov
mov
cmp
jge
dec
or
fucom
xor
pusha
dec
cmp
cmp
push
test
imul
sub
insb
push
mov
xor
xorb
enter
and
pop
inc
movsb
and
dec
out
pusha
inc
push
test
sbb
gs
add
dec
cmpsb
shlb
aas
cmp
inc
fisttps
jmp
aaa
sbb
into
sub
sub
in
ja
dec
ret
dec
mov
repnz
xor
adc
aas
shlb
mov
xor
adc
cmp
rcrb
xor
sub
xor
aaa
clc
into
push
arpl
rcrb
and
xor
mov
push
and
mov
xchg
ljmp
pop
jp
push
mov
jl
fwait
push
xor
arpl
mov
adc
cmc
sub
enter
scas
xchg
jns
push
add
scas
xor
pusha
cmpsb
aas
andb
out
mov
mov
push
aad
jle
mov
xor
pop
rcr
pop
dec
test
imul
pop
cmc
pop
dec
outsl
popf
shrl
cltd
rcl
push
cwtl
and
sahf
insl
sbb
into
sbb
pop
sub
jns
inc
test
call
stc
popa
push
push
sbb
mov
mov
or
mov
mov
xchg
inc
mov
je
push
mov
jo
aas
cld
mov
xor
push
movsl
dec
cmc
fisttpll
insl
outsb
stos
push
add
cmp
lods
sub
icebp
arpl
cmp
or
fsubr
xor
inc
stos
ds
ss
sti
outsl
test
xchg
dec
mov
mov
xor
cmc
dec
nop
fst
and
jb
dec
push
cmpl
cmp
insl
pop
je
mov
movsb
mov
rclb
lea
mov
lcall
push
lock
bound
sbb
lods
js
xchg
int
les
cmpl
in
inc
es
sahf
into
push
arpl
aam
daa
dec
xchg
sbbl
mov
les
add
or
xchg
in
into
test
loope
xor
sbb
daa
push
loopne
stos
or
loop
cwtl
jns
pusha
push
push
jnp
fidivs
jno
lahf
jo
xchg
and
rcrl
adcl
mov
jl
sub
push
sub
lods
push
mov
xor
nop
jmp
sbb
pop
sub
jmp
jle
cld
je
aas
int
add
lock
adc
arpl
jbe
int3
addb
push
repnz
push
pop
dec
mov
test
je
imul
fs
cmp
add
mov
das
inc
test
ds
arpl
aaa
jge
sub
mov
adc
pop
dec
imul
loope
aaa
aas
bound
aad
push
cmp
cs
pop
mov
cmc
adc
sahf
incl
pop
pushf
xor
xor
lods
pop
add
arpl
je
fmuls
out
inc
sub
out
out
dec
dec
jg
xchg
test
cwtl
add
cmp
fsubrl
xor
xchg
into
dec
into
jg
pop
pushf
mov
sbb
mov
dec
xchg
and
mov
xlat
out
or
mov
sbb
lods
popa
cmp
es
andl
sub
les
xchg
cli
inc
sbb
cmp
or
mov
stos
mov
mov
insl
mov
test
in
push
add
jmp
and
pop
shl
xchg
add
jecxz
cld
jns
insb
and
inc
ds
stos
mov
es
mov
test
stos
into
mov
cld
inc
mov
mov
xchg
or
in
xor
pop
xlat
push
jp
lea
outsl
imul
push
mov
fstps
xchg
jno
aad
cltd
out
leave
ret
les
push
mov
popa
in
xchg
sbb
sub
inc
mov
add
xor
xchg
lock
rcrl
js
test
xchg
jg
cmp
out
jl
out
inc
imul
or
leave
xchg
jbe
mov
pop
sbb
push
xchg
or
cld
data16
xchg
jl,pt
aad
or
mov
xchg
sub
and
out
xorb
mov
sbb
loop
sub
in
sub
je
mov
jp
arpl
push
push
inc
rcrl
pop
fisttps
add
pop
subb
daa
push
mov
fdivrs
xchg
lods
inc
push
in
dec
sahf
cmp
lret
cmpsl
and
mov
dec
ljmp
or
gs
cwtl
push
adcl
jne
fs
mov
and
xchg
jb
pop
lret
and
mov
xor
je
in
sub
mov
lcall
sub
loope
push
push
or
test
push
in
push
lret
cmp
shlb
sub
push
inc
xchg
outsb
movsb
xor
mov
sub
push
in
testl
and
xor
push
push
xlat
pop
pop
push
outsb
ret
lods
scas
fimuls
mov
jbe
fndisi(8087
inc
jae
loop
dec
lret
cwtl
jmp
adc
cmp
push
loopne
out
mov
pop
push
loope
inc
fmul
xchg
int
addb
xchg
hlt
mov
js
insb
or
cmp
inc
push
roll
sbb
and
sub
xor
movsl
movsbl
xor
loope
cltd
fmuls
fidivrl
ss
imul
dec
inc
mov
cmp
fwait
movsl
int
jecxz
sub
adc
stc
int3
inc
sub
test
mov
jns
test
test
dec
ljmp
in
jnp
in
sub
pop
lods
dec
push
inc
mov
mov
cmp
pushf
lcall
and
sarl
and
stos
mov
pop
mov
mov
jg
lret
lock
das
mov
or
call
out
and
loopne
cs
pop
lret
out
adc
mov
inc
out
mov
adc
imul
fisttps
rcr
test
cmc
push
mov
pusha
jns
iret
mov
xchg
pop
inc
mov
repnz
sbb
add
push
or
adc
dec
outsb
mov
stc
or
roll
xchg
pop
sub
xchg
push
mov
ss
mov
push
lret
in
orl
pop
movsl
pop
fisubl
aaa
mov
data16
into
ljmp
inc
push
inc
or
in
mov
sbb
mov
ret
push
xchg
mov
sub
inc
sbb
repz
loop
mov
dec
and
mov
jae
cmc
jne
and
popf
push
into
cltd
fldl
cmp
movsb
int
ljmp
push
cmpsb
int3
or
lds
push
enter
xor
mov
fisttps
cltd
rcrl
jecxz
lahf
jg
out
imul
mov
scas
adc
jbe
pop
mov
inc
jb
out
das
ss
sbb
loope
cld
stc
mov
jbe
pop
fmuls
cmp
mov
lcall
push
jae
pop
test
test
push
add
mov
aas
in
sub
daa
into
inc
subb
push
into
jge
rcl
imul
and
jmp
icebp
ja
lret
not
jl
aaa
stos
lods
adc
aas
xchg
push
cmpsl
pop
leave
icebp
popa
stc
pop
jg
std
jb
pushf
adc
or
add
in
mov
mov
push
and
pop
cmc
int3
aad
shlb
dec
mov
push
in
and
mov
jb
pop
into
stc
int3
testl
xor
jl
incb
and
shlb
xchg
pop
das
int3
xlat
inc
inc
sbb
sub
dec
out
movsl
xor
or
cwtl
stos
in
xchg
into
popl
test
imul
or
or
ror
icebp
ss
mov
xchg
bound
int3
mov
xlat
jg
push
and
jns
mov
push
or
sbb
mov
js
cs
xchg
add
das
and
fsubrl
lds
push
sbb
lahf
mov
mov
sahf
pop
dec
inc
sub
mov
push
ret
pop
push
xor
loop
pop
pop
lods
mov
xchg
jg
cli
aas
sbb
dec
stos
stc
dec
add
imul
lret
cltd
pop
repz
pop
ret
jl
sbb
xor
sub
jnp
je
add
test
mov
inc
inc
push
out
cwtl
cmp
in
repnz
mov
fcoms
push
out
push
ss
mov
jb
pop
mov
cmpsl
imul
adc
push
sbb
mov
jg
add
ljmp
ficoms
pminub
arpl
jl
add
call
rcrb
movsb
mov
imul
push
adc
scas
inc
in
lods
repz
xchg
iret
xchg
push
loop
shrb
push
xlat
ret
gs
pop
inc
sbb
inc
mov
jmp
xchg
mov
mov
add
shll
xchg
popa
and
mov
fisubrl
pusha
jbe
hlt
inc
in
cltd
imulb
inc
jle
int3
or
sti
adc
push
or
mov
mov
je
jno
jbe
jg
repz
mov
outsb
lea
sub
in
mov
add
add
ds
addl
shll
insl
dec
clc
cmc
mov
adc
je
dec
push
mov
lahf
mov
notl
pop
add
xchg
ds
or
cmc
mov
adc
mov
sbb
add
mov
mov
out
inc
lahf
add
int
dec
mov
repnz
xor
add
mov
jns
add
lods
adc
dec
jne
xchg
imul
add
jnp
xchg
add
int3
xchg
xor
or
aas
insl
and
xchg
dec
pusha
lcall
outsb
test
xor
mov
popf
xchg
cmc
xchg
leave
pop
or
mov
add
call
clc
outsb
enter
addr16
adc
and
or
dec
daa
mov
mov
repnz
sub
addr16
ja
fistps
jbe
std
pop
xchg
add
or
and
rol
mov
mov
jecxz
imul
shrb
push
cmc
cmpsl
test
insl
ret
popf
pop
stc
xchg
lods
outsl
mov
jo
jg
les
cwtl
mov
test
or
mov
adc
sbb
push
or
cmpsb
dec
add
out
jns
outsb
jl
lock
push
xchg
push
jmp
fildll
loop
jo
adc
in
jge
mov
aam
pop
dec
nop
iret
ss
aad
mov
pusha
jmp
repnz
out
or
or
in
mov
clc
xchg
and
js
xchg
adc
inc
sub
ja
lods
mov
sub
inc
mov
mov
fucomi
inc
add
xor
movsb
clc
mov
aas
dec
sbb
lds
cmpsb
or
sub
and
mov
dec
mov
and
lret
push
inc
cs
push
dec
stos
ja
jmp
inc
jo
push
inc
or
aas
stos
pop
push
push
sti
or
push
jbe
bnd
test
pop
outsb
sbb
jns
mov
les
ret
inc
inc
cltd
stc
mov
and
into
mov
in
or
lods
fistps
imull
pop
nop
gs
dec
mov
adc
or
lret
loop
push
xchg
xchg
inc
or
bound
add
dec
adc
mov
push
sbbl
xor
cmpsb
mov
std
mov
or
jge
adc
jp
sarl
inc
push
scas
js
lcall
cmp
fstl
and
sbb
xchg
adc
lock
push
movsl
inc
enter
mov
mov
dec
ret
stos
xchg
adc
jbe
test
fadds
shll
test
test
insb
jle
mov
inc
add
cmp
aad
lea
add
fisttpll
jne
jge
xchg
out
push
adc
lret
pop
push
mov
inc
stc
cmp
xchg
dec
into
negl
mov
repz
call
xlat
into
add
xchg
insb
orl
es
fnsave
cmp
lds
out
jno
int
xchg
movsb
lret
inc
cld
mov
clc
icebp
xchg
pop
mov
int
ss
mov
push
mov
loopne
xor
icebp
and
pop
leave
or
push
shl
fcmovnbe
je
sub
push
dec
adc
pop
xor
fiaddl
lods
inc
inc
out
cmp
dec
inc
xchg
inc
leave
scas
in
inc
xchg
es
jne
pop
ja
cmp
inc
sub
add
sbbb
mov
and
cmp
or
or
sbb
fmuls
add
movsl
pop
in
adc
test
xchg
das
mov
inc
scas
push
ss
adc
lret
push
into
rorl
movsl
es
dec
in
jp
sub
rcl
loop
mov
and
subb
test
das
sar
inc
adc
call
jo
dec
mov
jle
hlt
out
pop
and
fstl
int
rclb
inc
es
cmp
lret
cmp
ss
in
movsl
cwtl
inc
mov
push
lret
popa
push
mov
je
sar
inc
xchg
add
add
adc
ds
mov
int3
movsl
jg
rol
or
add
inc
xchg
add
mov
int3
lods
or
push
out
sti
and
sahf
cmpsb
bound
cmp
call
jmp
fsub
insl
xchg
sbb
mov
add
fcom
movsw
mov
push
sti
push
add
mov
adc
jp
icebp
ficoml
dec
sbb
jo
mov
jne
shl
fs
and
lods
push
iret
loop
mov
lods
out
cmp
inc
int
int3
pop
cs
sbb
leave
mov
jecxz
repnz
outsb
fistpl
out
lea
mov
aam
and
sub
out
xor
ss
or
mov
lret
inc
cmc
repz
loopne
ret
cwtl
fcmovne
rcl
lods
stos
es
and
out
popa
and
push
cmp
add
push
lret
mov
and
xchg
cmp
insl
jbe
test
mov
test
inc
mov
pushf
mov
testl
cmp
or
mov
aam
inc
and
or
popf
mov
movsb
pushf
xor
ljmp
imulb
mov
or
fdivrl
divb
aas
cmp
out
psubb
fstpl
mov
dec
sbb
pusha
xchg
inc
lret
pop
push
dec
jecxz
push
adc
mov
fdivp
push
jo
xorl
int3
or
jbe
push
push
fisttps
pop
push
stos
dec
inc
xor
into
sbbb
sete
mov
dec
dec
add
shl
cwtl
inc
loop
push
into
pop
aad
mov
mov
loope
aam
div
stc
sahf
cmp
inc
nop
or
outsb
jne
out
fsubr
sbb
mov
in
fwait
jae
push
call
and
popa
and
xor
cmpsb
mov
test
and
xchg
mov
out
int3
mov
lret
xor
fwait
pop
divl
push
sbb
mov
out
fnstenv
aam
hlt
inc
adc
rcl
in
movsl
mov
es
mov
jle
into
cmp
pusha
xchg
pushf
sarl
data16
cmc
mov
push
lods
enter
lods
mov
dec
insl
je
out
dec
mov
shl
add
aam
stos
push
imul
xor
iret
jp
dec
ror
xchg
ja
aaa
push
shlb
das
test
dec
and
rcrl
scas
lret
lret
sbb
push
int
mov
push
adc
mov
in
rol
andl
and
inc
xor
and
jp
shll
sbb
dec
ljmp
and
lods
xchg
adc
daa
in
sbb
enter
xchg
pusha
mov
lock
dec
test
sub
pop
insl
dec
or
loope
sub
push
sub
jb
shll
push
pop
ds
movsl
mov
xchg
fadds
adc
mov
psllw
xchg
into
sbb
push
inc
jbe
inc
xchg
push
test
sub
mov
div
in
sbb
pop
arpl
pop
ret
into
adc
push
lods
ds
push
nop
movsl
jbe
cmp
insb
ja
xor
jmp
imul
aas
push
push
xchg
xchg
in
add
flds
and
xchg
adc
xchg
mov
enter
inc
push
mov
mov
push
xchg
stos
fucom
aad
dec
and
inc
pop
stc
jle
xchg
add
mov
out
adc
das
in
in
adc
arpl
sahf
jl
xchg
stc
push
adc
cmpsb
repnz
mov
data16
cld
sub
sub
xor
mov
sub
stos
cwtl
or
adc
xlat
jmp
xchg
dec
loope
aaa
repz
xchg
pop
mov
push
cli
xchg
and
sub
jge
jbe,pt
adc
lret
lds
divl
xor
mov
jmp
shll
movsb
xor
or
jg
sbb
inc
adc
jo
mov
ja
cld
cmpsb
not
cltd
push
sub
fisttpl
xor
repnz
cmc
mov
adc
addr16
sub
cmp
push
add
mov
out
scas
sbb
mov
jbe
fistpll
into
nop
dec
mov
push
outsb
ret
mov
dec
call
or
adc
push
and
xor
fstl
mov
rclb
test
pop
insb
mov
mov
jbe
aad
dec
fadd
sub
pop
test
nop
pop
popf
cmpsb
sub
dec
ds
int
aaa
insb
jg
into
or
xor
cmp
icebp
mov
jmp
pcmpgtd
cmp
sub
mov
jecxz
xchg
pop
test
and
mov
and
or
mov
outsb
pop
fst
dec
xchg
jge
test
jnp
xchg
dec
push
decl
inc
out
repz
icebp
test
mov
push
notb
xchg
jne
and
lcall
cltd
push
ret
adc
cmp
daa
inc
adc
pop
and
mov
into
stos
fsubr
fidivl
push
js
adc
pop
int
xchg
lods
xor
fucom
dec
int3
scas
int
fcoms
cmp
bound
stc
cltd
into
mov
testb
adc
push
or
and
xchg
mov
cli
jg
lods
ljmp
loop
testb
fiadds
sub
js
lods
or
inc
adc
sub
mov
ret
push
les
pop
cmp
push
push
fcom
js
es
andl
movsl
jge
jl
inc
pop
lods
jno
pop
cmp
out
mov
sub
sbb
test
test
out
cwtl
out
fstpl
out
loopne
vpcmpeqw
ds
jmp
dec
cmp
popl
movl
into
andb
imul
fiadds
into
outsl
jns
xchg
or
pusha
mov
adc
jge
add
fmuls
mov
xlat
fmuls
mov
pop
cld
push
leave
stos
sbb
popf
jg
cli
xor
xchg
jb
lahf
xchg
enter
pop
shll
dec
jp
sbb
imulb
jmp
push
dec
xchg
push
pop
sub
pop
push
jmp
int
cmp
sbb
pushf
mov
or
lret
das
int3
sahf
stos
outsl
push
addl
ja
leave
fcmovbe
push
ret
mov
jns
sub
fdivl
or
out
mov
call
repnz
insl
mov
dec
mov
jg
in
stos
das
dec
cli
aaa
data16
push
pusha
cmp
sbb
bound
xchg
lret
out
mov
pop
lock
sub
fbstp
popa
call
ja
cmpsl
mov
into
push
scas
cmpsb
push
xorw
xor
jo
mov
and
pop
nop
jbe
mov
dec
xor
mov
test
inc
push
subb
movsl
cmp
push
push
jnp
out
ljmp
das
mov
xchg
inc
sub
aad
xor
in
addb
add
inc
insb
lcall
pusha
orb
jae
xchg
xor
es
adc
xchg
idivl
mov
outsb
out
and
mov
cmp
xchg
das
mov
out
addb
cmp
jp
jae
scas
cwtl
and
mov
out
mov
mov
pop
test
gs
lock
imull
mov
jp
push
shll
cmp
mov
add
push
mov
rcll
call
add
movsl
jb
add
mov
arpl
push
das
pop
xchg
std
dec
push
ja
test
in
xor
sbb
fcompp
cwtl
pop
sub
xchg
popf
mov
pop
or
jle
sub
subb
ficoms
xchg
int3
mov
xchg
xor
push
shr
std
add
daa
shlb
mov
lods
push
jp
dec
mov
pop
out
ja
popf
jae
adc
pusha
movsl
sti
rcll
into
ja
cmp
arpl
adc
imul
dec
into
les
sarb
sbb
and
scas
pop
imul
rcrb
cwtl
xor
mov
and
ret
lock
add
pop
jle
or
dec
mov
ja
hlt
inc
cld
push
push
pusha
outsb
xor
and
pop
add
xchg
stos
mov
decl
dec
pop
push
aas
xchg
ja
repz
std
inc
push
mov
mov
adc
push
push
push
xor
sbb
into
lahf
mov
sub
inc
daa
and
insb
dec
inc
lcall
pop
mov
ljmp
scas
jl
push
mov
mov
cli
dec
bound
loopne
adc
inc
cmp
test
aas
or
sub
loopne
in
or
push
mov
mov
loop
adc
shll
cmc
pop
cmc
mov
stc
pushf
mov
mov
addr16
shll
push
loope
sti
mov
and
push
lret
jl
mov
sub
mov
out
or
jo
es
dec
mov
push
xor
cmp
xchg
inc
subb
push
mov
xchg
mov
push
pop
in
bound
pusha
out
push
cmpl
mov
sbb
popa
fstpl
loop
mov
dec
std
mov
dec
inc
int
loop
pop
enter
push
dec
xchg
mov
xchg
sbb
xchg
pop
push
iret
mov
jecxz
xor
shlb
mov
test
hlt
or
pop
and
ljmp
imul
fsubl
test
fucom
mov
cmp
sbb
or
xlat
add
popa
cmpsb
sub
and
mov
mov
clc
mov
and
es
outsl
xchg
ds
testl
int3
jecxz
cmp
dec
lret
dec
mov
xchg
jmp
ds
pop
mov
cld
lcall
jnp
inc
sbb
xor
and
addr16
scas
dec
lahf
testl
sahf
je
pop
and
push
add
fistl
in
insl
aam
mov
divb
nop
adc
xor
or
imul
fs
adc
adc
push
or
gs
sbb
lds
xchg
arpl
loope
adc
add
aaa
sbb
cli
jp
lret
inc
xchg
ljmp
sub
mulb
pop
mov
add
cmpsl
lock
ret
dec
call
xor
lds
jbe
sbb
loop
and
lret
inc
push
pop
stos
pusha
out
mov
movsl
sbb
in
cli
shlb
addr16
xor
jo
mov
out
cmp
mov
notl
mov
add
out
in
inc
pop
sub
dec
lods
ss
inc
mov
das
and
pushf
cwtl
lret
add
shrb
push
lods
cmp
push
adc
xchg
std
fmul
in
sub
mov
sub
cmp
imul
aas
stc
mov
icebp
and
hlt
xchg
into
push
push
insb
mov
sbb
dec
sbb
mov
pop
jge
or
aaa
sahf
add
or
adc
sbbb
adc
loopne
sub
xchg
xchg
fisubl
into
pop
dec
leave
pop
inc
mov
shrb
push
adc
and
fcmovbe
inc
mov
or
pop
xchg
mov
mov
or
ja
xchg
out
andl
adc
into
shl
pop
inc
test
xchg
mov
mov
add
aad
sub
dec
sub
jp
call
cmc
mov
rol
xor
lcall
cmp
or
and
xchg
push
pop
mov
mov
cmpb
in
xchg
and
movsl
out
adc
test
sbb
lock
push
lahf
int3
add
jg
negl
roll
sbb
test
add
in
jns
sub
in
push
mov
ja
rcl
movsb
mov
sub
cmpsb
pop
xchg
loop
xor
and
in
jmp
pop
jns
ret
hlt
outsb
push
mov
out
push
xchg
dec
jl
fisubs
xchg
push
dec
xlat
lods
lret
imul
outsb
and
test
aam
push
pop
scas
iret
ss
pop
add
insl
test
cmp
xchg
shr
ror
xor
mov
popa
pop
xchg
jge
push
jg
daa
shrl
lock
or
push
jo
int3
sti
or
jno
and
jmp
xlat
rol
sub
cmpb
cmp
jge
xlat
fldenv
orb
subl
ret
imull
push
sub
mov
dec
rolb
cltd
jno
push
mov
data16
add
testb
in
shlb
adc
push
sub
sub
dec
out
imul
es
test
xchg
jbe
add
mov
pushf
push
or
inc
xor
pop
in
leave
pop
int3
mov
push
mov
mov
mulb
dec
scas
data16
aaa
dec
sbb
out
insb
xchg
cmpsl
add
xchg
clc
dec
lret
mov
or
sub
fs
xchg
xor
fstps
mov
pop
jnp
cmp
sub
jmp
lret
push
movb
sbb
lahf
insl
mov
std
dec
or
jmp
xchg
stos
mov
imul
xor
mov
jae
icebp
mov
sub
lahf
mov
mov
out
inc
sub
mov
repnz
test
cmp
mov
mov
imul
test
decb
or
pop
pop
cli
xchg
or
movsl
vandps
test
icebp
lret
xor
cli
mov
pusha
lods
adc
pop
testl
ret
iret
push
call
fsubr
mov
push
int
jl
lcall
adc
cltd
clc
jle
push
outsb
jmp
std
adc
inc
push
sub
rcrl
jle
jns
int3
jbe
jne
fldl
mulb
lahf
int
cli
fmuls
mov
inc
das
adc
cli
out
xchg
sar
xor
pop
add
adc
xor
fcomps
jp
lret
scas
add
ret
mov
cmp
pusha
sbb
inc
stos
out
insl
mov
sahf
pop
hlt
into
jb
test
sub
mov
xor
mov
pop
dec
call
out
adc
jno
fisubl
push
out
add
fadds
js
inc
cmpsl
or
or
out
out
mov
sub
jne
sbb
inc
push
jge
dec
inc
mov
clts
lods
in
std
push
aad
cmp
mov
and
fists
pushf
mov
rcl
jmp
flds
jnp
jne
into
push
xorl
gs
ret
outsb
pop
into
xchg
xchg
mov
jge
inc
inc
ds
push
push
push
fbld
rcl
sub
adc
cli
inc
xchg
cld
inc
fmuls
mov
mov
push
mov
adc
sbb
pop
push
imul
jns
pop
hlt
cltd
pop
pop
jbe
out
jb
pop
ret
loop
cmp
mov
adc
test
add
dec
push
xchg
ss
and
imul
cli
loopne
push
dec
shr
test
in
xchg
push
into
add
shrb
incb
mov
add
inc
mov
jne
fmul
add
loope
jle
pop
popf
loopne
adc
lret
aad
lea
mov
cli
fldl
dec
and
push
mov
dec
jbe
push
pop
out
icebp
adc
cmc
shrb
aad
outsl
rcll
inc
icebp
pop
add
mov
dec
insb
and
pop
int
dec
hlt
shll
push
pushw
pop
xchg
inc
sbb
jno
test
movsb
mov
sbb
into
pushf
lods
xchg
outsl
dec
pop
int3
mov
sbb
aas
mov
push
mov
dec
inc
mov
dec
lcall
xchg
push
in
sti
adc
int3
addr16
jns
ret
sub
inc
push
into
xor
dec
or
outsb
out
out
icebp
jmp
leave
push
fmuls
sub
sub
outsb
inc
fdivl
addr16
fisubrs
out
mov
movb
push
inc
scas
push
xlat
ret
and
mov
jl
repnz
jg
into
lahf
popl
and
adc
mov
aam
test
int3
cmp
mov
jecxz,pn
jne
ss
mov
adc
rorl
shl
loopne
jne
xchg
jmp
out
add
cmpsb
jbe
xor
fisttpl
and
inc
das
push
cld
dec
xor
cmpsb
push
sbb
adc
xor
rcll
int3
ret
stos
lret
mov
rorb
or
and
or
in
adcl
daa
repnz
pop
and
pop
lods
jne
jl
jmp
adc
mov
lea
insl
dec
push
push
cmp
inc
loope
call
repz
mov
dec
jb
ficoml
daa
dec
lock
push
mov
add
lret
mov
outsb
push
ljmp
shll
mov
push
pusha
lret
xchg
fwait
insl
lret
adc
scas
push
sub
adc
ds
sbbb
adc
sahf
jle
lods
xchg
sar
and
mov
stos
sarb
mov
ljmp
fnclex
mov
clc
mov
aaa
aam
xchg
cmp
sar
das
sbb
mov
xchg
dec
mov
add
inc
mov
adc
mov
imul
adcl
xor
int
adc
cli
fsubrl
out
aas
push
out
push
push
sbb
or
repz
in
rorb
jl
cmpsl
pop
ds
jne
into
jo
jbe
inc
xor
pop
push
add
xchg
out
xchg
adc
in
add
and
out
pop
cmpsb
ja
xchg
ds
jns
sbb
cmp
out
xor
repz
pop
rorb
mov
les
dec
add
lahf
ret
popa
push
inc
int3
enter
iret
stc
shrl
cmp
sarb
jno
add
mov
mov
inc
imul
nop
xor
mov
cltd
xor
ss
int
adc
imul
push
mov
adc
mov
not
data16
sbb
scas
add
pop
push
inc
push
das
jecxz
stos
push
dec
sub
sub
cmp
rcrb
cmp
fbstp
out
ljmp
push
add
icebp
mov
sbb
or
outsb
jl
pop
adcl
pushf
rcl
jo
icebp
hlt
aam
into
int3
lods
push
dec
inc
lcall
subb
add
pushf
cmp
notb
jne
loope
in
ret
add
rcll
and
lret
jl
adc
mov
mov
insb
test
push
aam
stos
jo
mov
leave
xchg
mov
pusha
cltd
cmp
mov
sahf
ret
nop
je
xchg
test
iret
dec
jno
jne
or
aam
push
dec
sbb
sahf
mov
mov
add
push
inc
inc
cmp
jg
or
movsb
mov
ror
imul
aaa
sub
imul
mov
jmp
cs
inc
popf
fucom
nop
sbb
pop
test
jge
out
cwtl
out
aas
out
in
fildll
jecxz
es
sub
je
aaa
pop
out
lcall
imul
jp
test
std
ficompl
stc
lret
sub
xchg
or
aam
dec
mov
mov
subb
dec
pop
mov
vcvtpd2dqy
push
popf
outsl
ror
xchg
jbe
in
andl
dec
testb
pop
pop
jne
push
jg
mov
cltd
pop
or
ret
xchg
pusha
xchg
mov
pop
or
stc
into
push
lods
xchg
loopne
ljmp
sbb
into
dec
out
or
push
dec
or
lret
je
insl
hlt
pop
in
notb
adc
xchg
mov
dec
xchg
clc
roll
sub
push
leave
lock
dec
in
push
sub
push
loopne
cmpsb
push
test
rolb
shrb
or
into
inc
popa
cmp
in
imul
cli
sbb
mov
xchg
xchg
pushf
pop
add
dec
cmpsl
fidivrl
cltd
enter
or
sub
je
js
mov
jo
cs
shr
fiaddl
mov
xchg
inc
lret
adc
push
mov
lock
jne
push
cs
shlb
test
pop
enter
or
les
aam
lret
push
sti
notl
pop
flds
icebp
into
std
sbb
mov
imul
cmpsl
xlat
mov
sub
data16
enter
mov
dec
pop
lret
pop
mov
sub
sub
and
sbb
outsb
scas
enter
add
lods
pop
in
cmovl
mov
inc
shlb
xchg
mov
js
sarl
mov
imul
out
or
popf
xor
andl
jnp
dec
sbb
movsl
push
xchg
push
xchg
and
and
das
push
xor
outsb
add
cmpl
xor
dec
dec
jecxz
int
cmp
lcall
pusha
cmpl
pop
adc
shll
cld
insl
outsb
xlat
test
pop
add
adc
aaa
ret
cli
push
cmpsb
popa
add
push
fldenv
mov
inc
adc
ficomps
bound
movsl
fadds
or
test
xlat
fs
lret
out
xchg
mov
xchg
imul
fwait
push
pop
mov
test
aas
jecxz
int3
xor
loopne
decl
lods
rcl
data16
nop
adc
jmp
xchg
arpl
int3
xorl
pop
jb
mov
sti
aaa
pop
outsb
and
rorb
mov
enter
mov
jp
push
in
sub
push
loope
ss
movsl
add
outsl
int
xchg
test
mov
xor
movsl
sbb
rcrl
jne
lret
daa
xchg
xchg
imul
into
mov
in
xchg
gs
mov
mov
outsl
fs
and
mov
in
test
adc
repnz
dec
mov
pop
rolb
insl
clc
add
scas
pop
or
xchg
js
pushf
push
shr
and
jo
arpl
or
adc
enter
and
xor
aad
data16
out
inc
xor
test
divb
popf
cmp
lret
arpl
lret
mov
aam
out
mov
orb
push
test
aad
and
or
ss
dec
adc
jg
and
das
mov
aaa
cmc
clc
aam
xor
sbb
popf
les
iret
nop
mov
mov
xor
pop
fucomp
out
adc
imul
inc
out
inc
xchg
test
rclb
fsts
dec
lods
ds
lahf
out
jle
shlb
outsb
or
pop
xor
lds
cmp
bound
mov
add
popa
sub
test
aas
pop
icebp
and
in
loop
imul
out
ret
dec
adc
sbb
mov
or
sarb
rcl
loop
cmp
add
push
push
nop
scas
dec
xchg
in
sbb
fstpt
daa
xorb
leave
jl
or
enter
xor
mov
cli
adc
cmpb
mov
adc
es
sub
loope
outsl
or
mov
fwait
lahf
js
inc
inc
testb
push
imul
xchg
add
or
sti
imul
shl
mov
loop
str
sbb
mov
adc
mov
add
push
jb
sub
js
jae
push
xor
adcb
xlat
mov
jns
jmp
push
lock
rcrb
jl
xchg
imul
dec
pop
aad
mov
dec
cmp
push
int
sti
adc
pop
or
imul
adc
stos
sub
out
jo
mov
jmp
push
xchg
movsl
or
jne
sbb
lods
out
mov
call
lret
jl
mov
push
cmp
sbb
push
fs
adc
movsl
lret
mov
jnp
daa
sub
mov
out
mov
jbe
das
and
sub
cld
xlat
xchg
loopne
cmp
imul
movsl
jle
fwait
cli
and
pop
or
cld
pop
aam
pushf
imul
xchg
icebp
sbb
int3
mov
aam
std
sub
or
inc
push
out
orl
xchg
popf
pop
call
mov
sahf
ljmp
ret
xlat
mov
push
adc
pop
arpl
inc
fcmovnb
xchg
cmc
arpl
mov
in
and
shl
xor
inc
push
sub
nop
xchg
inc
xchg
inc
and
push
mov
scas
je
insl
mov
inc
js
leave
mov
dec
or
push
ds
mov
cmp
mov
out
test
shrb
stos
xchg
jnp
dec
adc
inc
inc
scas
jae
into
sahf
and
jp
ljmp
rcll
pop
xor
cmp
jnp
stos
inc
iret
push
cmp
sub
add
lds
xchg
push
lods
dec
jl
push
fisubl
mov
mov
movsl
sub
fcomps
repz
fwait
dec
push
mov
add
mov
repnz
andb
enter
aas
xlat
jg
clc
sbb
cmc
push
cld
popf
aam
dec
push
orb
cmp
pop
test
and
std
pop
add
jno
adc
cmp
jl
push
sbb
in
daa
stc
push
ret
and
sbb
pushf
repz
push
xchg
xor
leave
movsl
rolb
and
and
lret
cvtpi2ps
les
mov
movsb
dec
cltd
loopne
aad
popa
outsl
jl
dec
pop
jo
xchg
or
mov
and
in
insb
test
jmp
je
jecxz
mov
cmp
sub
mov
adc
fsts
pop
inc
lods
jns
pushf
and
sbb
fcmovnbe
orl
fwait
or
stc
ret
inc
xchg
mov
lcall
in
mov
add
iret
cmpsl
sub
inc
inc
lret
sbb
stc
jmp
insb
aaa
cmp
lret
out
lcall
jmp
out
jo
sbb
sub
mov
test
xchg
jnp
xchg
iret
out
roll
cmp
je
xlat
gs
add
xchg
ja
mov
pop
add
insl
iret
outsb
or
xchg
das
pop
jb
cwtl
mov
mov
dec
hlt
sub
add
into
movsl
and
pop
jae
push
jp
iret
pop
jne
test
insl
pusha
push
jno
mov
es
fdivs
in
insl
xchg
out
push
dec
lret
mov
nop
lret
sbb
cmp
mov
out
xor
mov
pop
xchg
out
idivl
daa
mov
jl
ds
pusha
mov
sbb
mov
cmp
push
ret
popl
add
subl
jge
lods
xchg
add
cmpsb
pop
push
das
jne
jmp
xchg
mov
add
daa
int3
inc
test
sub
int3
jne
jge
xor
pop
lcall
fdivrs
mov
mov
aam
push
jg
jo
cmp
insb
int3
pusha
jge
xchg
nop
cmp
loopne
aam
xlat
push
jae
in
popf
inc
rcll
fcmovbe
and
pop
mov
cltd
loop
enter
xchg
testb
mov
xlat
lret
daa
cmpsb
jg
add
loope
inc
adc
jo
in
pop
scas
sbb
das
fs
nop
adc
sbb
mov
clc
loop
ja
push
into
jne
sahf
push
mov
iret
pop
int
shrb
test
sarl
das
out
mov
dec
movsl
rol
hlt
stos
inc
cmpsl
aam
jle
movsb
dec
outsl
ja
fsin
andb
xor
sbb
cltd
jnp
clc
fwait
cmpsb
rorl
pop
call
or
cmp
mov
jmp
mov
fdivr
lea
mov
sub
inc
scas
jle
loopne
in
lods
mov
xchg
aas
jo
lret
ret
aam
mov
cmp
add
or
cmp
stc
sbb
aad
int3
xor
xchg
push
inc
inc
in
and
xchg
pop
adc
mov
test
nop
repnz
stc
mov
mov
xchg
xchg
test
or
loop
mov
add
ljmp
or
add
pusha
imul
in
xor
cmp
cmpsb
js
sbb
pop
mov
hlt
add
add
add
cs
je
jg
jbe
pushf
adc
xor
jecxz
add
orl
scas
stos
ljmp
lcall
dec
push
ret
mov
dec
add
leave
and
cmp
dec
mov
pop
cli
dec
mov
pop
ja
leave
mov
jmp
xchg
mov
enter
mov
out
lret
mov
imulb
daa
push
sbb
or
mov
push
cmp
mov
sbb
and
into
and
or
pop
popa
sahf
fdivr
fstps
in
mov
clc
stos
mov
imul
jp
fs
mov
sbb
icebp
aad
xorb
inc
adc
lret
mov
mov
jne
aaa
mov
jns
or
jge
inc
xor
ljmp
and
fucomp
sub
out
loop
mov
in
sbb
cmpsb
aad
sub
mov
sub
jnp
add
leave
out
mov
sub
call
cmp
aad
sub
cmpsb
shl
andb
add
stos
sub
mov
xchg
nop
or
adc
in
je
dec
nop/reserved
jbe
shll
addr16
xor
out
jge
testb
cs
aad
imul
xor
ds
sub
scas
xor
mov
sahf
test
xchg
int3
cmp
cs
xor
jp
sbb
and
dec
inc
lret
cwtl
pop
dec
dec
imul
lds
adc
mov
sbb
lcall
cmpsl
push
dec
xchg
xchg
jecxz
out
cmp
mov
stos
sahf
imul
mov
leave
add
cwtl
mov
les
dec
test
jbe
sti
add
adc
xlat
inc
adc
or
icebp
xor
jmp
jo
popa
xchg
cwtl
mov
jbe
mov
fadds
ja
fiadds
jg
push
xchg
int
pop
adcb
scas
add
leave
stc
aad
xchg
dec
sub
ljmp
mov
aam
shr
fisttpl
xlat
leave
sbb
mov
sub
adc
hlt
mov
test
out
jnp
mov
loop
add
adc
xor
cmp
push
adc
int3
or
push
leave
lret
jecxz
test
lcall
test
push
clc
adc
pop
sbb
in
js
stos
rolb
test
and
stc
jbe
adc
lret
aam
lea
sahf
leave
ror
sbb
ss
imull
pop
and
pop
sub
fdivl
int
mov
daa
call
jmp
test
inc
repz
addr16
add
out
out
pop
mov
xlat
dec
push
iret
fs
dec
xchg
or
xchg
in
adc
inc
ss
out
cmc
pop
clc
jnp
adc
jmp
or
inc
xchg
xor
push
adc
adc
inc
jns
jb
and
out
movsb
mov
cmp
call
aas
sbb
or
adc
jne
push
aaa
xchg
and
inc
cmp
jae
cmp
lea
es
xchg
sti
aas
xchg
in
into
xor
pop
call
addr16
lcall
shl
subl
leave
inc
fcmovbe
hlt
loop
jle
inc
std
pop
dec
pop
adc
fdivrl
mov
inc
jecxz
mov
in
xor
mov
fadd
popf
popl
xor
mov
sbb
into
mov
mov
insl
fdiv
mov
lcall
or
inc
out
lret
lret
out
in
xchg
mov
xchg
or
fs
xchg
adc
in
mov
out
insb
xchg
into
dec
push
test
xchg
dec
jmp
ljmp
mov
lods
addb
lea
mov
into
pop
xchg
lods
and
int
imul
xchg
out
test
or
mov
es
cli
outsl
mov
in
sbb
lods
into
mov
sub
jl
fdivs
out
minps
std
xor
test
mov
mov
mov
sti
cmpl
push
mov
into
sub
and
popf
rcll
cli
fldt
rorl
popa
out
and
xor
jl
lret
mov
stos
xchg
cmpsb
mov
mov
push
xchg
notb
push
aaa
jge,pt
rcll
outsl
sub
call
xor
xchg
pop
mov
xchg
popf
xor
mov
mov
ss
fiaddl
inc
xlat
cmp
cli
jle
inc
sti
stos
or
xchg
cmpsl
sbb
pop
xorb
add
push
mov
pop
js
or
cmp
xor
mov
mov
es
xor
int3
lods
out
push
div
and
xchg
and
or
sub
out
mov
mov
xchg
mov
xchg
xorl
lcall
clc
mov
in
sub
mov
lods
jae
or
lods
outsb
sub
pop
movsb
insb
sub
add
rcl
push
loopne
and
mov
ret
dec
or
sub
shrb
fldenv
jl
pop
sti
jmp
insw
add
lahf
inc
xor
js
mov
and
xchg
ja
dec
add
pop
jecxz
test
cli
movsb
test
das
xchg
ret
shl
inc
shlb
dec
push
fcmovnb
and
mov
jns
imul
addb
sub
xchg
js
cmc
xor
add
lcall
add
mov
mov
aas
fdivrl
cmp
fnstsw
xchg
and
xor
mov
into
mov
pusha
shrl
jge
jg
das
decl
ljmp
and
xchg
outsb
rcr
xlat
cmp
sbb
xor
scas
xchg
enter
xchg
adc
sub
jne
fdivrl
push
xor
shrb
daa
aas
xchg
push
test
push
xchg
xor
js
cmp
sbb
inc
test
arpl
sub
nop
addr16
in
out
or
xchg
jmp
xor
mov
ljmp
pop
push
out
cmp
pop
mov
bound
cltd
xor
sub
mov
mov
aam
fidivrs
xchg
aad
arpl
daa
scas
and
cli
rol
push
push
and
nop
int
ljmp
mov
fimull
add
xchg
in
stos
pusha
add
cmpsl
cli
dec
sbb
sub
aam
rclb
push
sbb
adc
ja
push
or
outsl
addr16
xor
outsb
ret
rcl
fistps
inc
out
icebp
fistl
aam
adc
scas
out
leave
dec
jge
cmpsl
mov
shlb
inc
movsb
insl
jg
jg
imul
dec
cli
mov
lds
sbb
loope
push
cld
fcmovbe
and
sub
in
mov
sub
jae
xchg
pop
addb
xor
jmp
stos
xor
ss
lret
in
fldl
jbe
fdivrp
pop
jge
mov
xchg
gs
insl
xor
pop
xchg
not
or
xchg
push
push
xchg
lds
rcl
scas
movsb
fldl
inc
mov
jno
jne
int3
or
ljmp
test
cmp
adc
and
movsl
ss
les
add
xlat
lret
insl
js
cmpsl
loop
je
mov
jbe
xor
mov
xor
adc
sub
sahf
cmp
dec
stos
push
test
xor
loop
inc
ffreep
imul
push
mov
inc
mov
xchg
pop
in
div
push
adc
pop
fcom
push
dec
test
out
mov
lods
lahf
push
aam
idiv
cmp
dec
jo
fs
bound
adc
sub
adc
loop
sbb
es
loopne
dec
mov
sub
push
dec
rcrl
or
data16
pop
mov
in
loope
jne
adc
xchg
shlb
insl
mov
nop
sbb
stos
inc
push
fsubl
loop
push
gs
std
xchg
fs
push
sub
lret
cmpsl
cmp
mov
jno
xor
je
lods
push
sbb
mov
into
mov
clc
ds
mov
ret
push
jo
into
ret
mov
lock
sahf
push
mov
into
xor
leave
sbb
popa
or
lret
mov
push
jg
cmc
and
aaa
and
jge
movb
loopne
imul
std
pusha
lock
out
xchg
not
mulb
je
xchg
stc
dec
and
stos
push
data16
inc
pusha
lods
pop
mov
jmp
push
fs
mov
fbld
sahf
in
lret
mov
sub
xor
cmp
cmp
jns
testl
imulb
aad
inc
loope
mov
into
jecxz
nop
mov
pop
cld
mov
das
in
pop
xchg
pop
movsl
xor
inc
notl
push
insb
jnp
jg
lock
cmpsl
mov
push
mov
jne
push
cmp
cltd
add
aad
jns
jl
jne
por
js
xor
mov
test
movsl
xchg
inc
icebp
xor
roll
jbe
aam
mov
push
pop
into
inc
pop
dec
pusha
add
sar
lcall
xor
push
or
fdivs
mov
inc
push
lods
int
inc
hlt
or
repnz
xchg
add
adc
in
gs
cmp
mov
mov
in
mov
pushf
mov
mov
sti
adc
es
push
jne
popf
lret
dec
lds
imul
int
popa
cwtl
mov
cmp
loope
push
dec
mov
pop
into
lret
lahf
xor
adc
sub
call
insb
movlps
jp
mov
sahf
mov
dec
or
dec
int3
and
push
je
xchg
in
into
js
cmp
test
or
cld
sub
cli
mov
mov
sub
lahf
pop
cmpsb
and
nop
push
mov
lods
cmova
push
adc
lret
jl
mov
divl
mov
rcr
repz
push
daa
mov
and
sbb
enter
jmp
stc
int3
popf
push
mov
push
mov
jl
lret
scas
mov
loopne
cli
lret
pop
in
sub
cmc
in
adc
cltd
dec
mov
push
push
fldcw
or
cltd
ss
adc
cwtl
outsb
sub
push
jmp
mov
dec
sbb
dec
ss
inc
pop
es
lret
stc
scas
aam
mov
inc
sub
jns
xchg
add
mov
loop
lods
sbb
ret
out
sbb
and
xchg
xchg
adc
out
ret
pop
mov
mov
rcl
aad
push
insb
jp
jbe
lea
jmp
jbe
mov
fcmovbe
aam
lcall
adcb
push
iret
mov
cli
jae
in
dec
and
shr
mov
lods
or
mov
cld
add
cmp
xor
dec
mov
xchg
cmp
ficompl
stos
mov
mov
mov
lods
pusha
adc
mov
cmpsl
daa
cltd
out
orps
cmp
loope
into
ficoms
stos
mov
outsb
stos
dec
mov
into
cli
and
not
test
push
or
aam
fnstcw
leave
mov
push
imul
mov
call
xor
das
xchg
cltd
sbb
nop
mov
adc
into
dec
add
data16
mov
imul
push
ja
out
mov
je
pop
jae
dec
inc
xlat
int3
adc
cli
outsb
sub
sub
pushf
jg
insb
mov
lds
jmp
jno
subb
sub
pop
int3
arpl
orb
out
jmp
jbe
fcmovbe
dec
sahf
ja
adc
and
shl
out
jmp
push
or
xchg
cmp
jbe
iret
xchg
repnz
adc
jmp
xchg
push
push
nop
xchg
adc
or
dec
in
fimuls
mov
test
roll
sbb
add
loopne
repz
int3
outsl
lock
cmpsl
fcomps
loopne
push
mov
jle
movsl
inc
push
mov
fwait
ja
sbb
popf
es
into
xchg
ss
sub
adc
out
mov
std
pop
out
test
js
mov
mov
cmpsb
arpl
inc
jle
push
shr
xchg
mov
push
or
scas
mov
je
cwtl
jge
jg
icebp
imull
jl
jo
adc
xor
arpl
jnp
inc
dec
xchg
cwtl
popf
add
mov
dec
lahf
sti
js
loop
cmp
repz
mov
cmp
bound
lret
std
lahf
jmp
and
dec
fdivl
mov
pushf
int3
and
push
add
mov
movsb
pop
mov
mov
xor
rcl
daa
mov
pop
or
adc
mov
xchg
jno
jg
push
cmc
or
out
loopne
rol
fstpl
cs
orl
lods
inc
rorl
cmpsl
mov
xchg
jbe
mov
out
ret
pop
into
mov
and
out
push
testb
clc
mov
xchg
xlat
leave
dec
addr16
out
sbbb
add
int3
push
sub
adc
ret
push
ss
inc
mov
aad
inc
insl
pop
dec
icebp
xchg
cmp
jge
not
jo
dec
sbb
mov
inc
lea
or
mov
stos
sti
ja
adc
jbe
mov
icebp
stos
mov
sahf
mov
xor
xor
out
out
stos
cmp
into
int3
in
sub
sbbb
aaa
or
pushf
or
cmpsb
jae
jns
data16
int3
pop
xchg
insb
mov
mov
jb
push
dec
ret
je
dec
xor
inc
pushf
jecxz
mov
imul
mov
inc
jl
mov
cmpsb
cmp
int3
fisubrl
nop
jle
and
sbb
inc
scas
sarl
sub
jmp
adc
fcoml
mov
enter
dec
xor
shll
inc
pop
test
imul
and
in
xchg
scas
jmp
ljmp
movb
lret
pop
lret
mov
add
into
xor
mov
fisttps
fcomps
add
sub
cmp
jl
icebp
dec
rcrb
add
sub
push
mov
adc
sub
mov
push
movsb
int3
and
sub
push
mov
into
lea
pop
inc
push
js
xchg
lock
outsl
add
cmp
inc
out
and
sbb
push
xchg
mov
js
dec
rcr
imul
es
inc
push
je
cwtl
mov
jp
in
outsl
hlt
shlb
clc
pop
cmpsl
out
jb
xchg
fwait
out
int3
movsl
loopne
ffreep
pop
jns
jno
add
iret
cwtl
jnp
inc
mov
shlb
push
roll
xchg
addr16
outsl
pop
fdivrs
cmp
int
test
sarb
mov
cmp
shll
fwait
or
jge
pop
out
es
cmp
mov
add
xchg
mov
out
je
iret
jne
arpl
cwtl
mov
mov
mov
icebp
cmpsb
cmp
xrelease
cmp
outsl
lea
push
ror
add
add
cmp
adc
fists
fisubrl
mov
sub
mov
cmp
inc
int3
xchg
add
popa
mov
imul
test
jno
push
or
mov
adc
fisubl
cmpl
js
cld
xchg
lahf
mov
enter
repnz
pop
add
ret
outsl
in
pop
sbb
add
es
mov
aad
ljmp
scas
inc
xchg
push
jg
movsb
bnd
jp
inc
je
ljmp
dec
cwtl
test
inc
aaa
out
push
in
ds
jbe
fistpll
ja
in
cs
scas
adc
push
out
or
or
std
cmp
inc
dec
insl
adc
fs
movsb
dec
mov
jnp
in
push
int
dec
push
dec
cs
leave
xlat
adc
pop
sbbb
std
enter
data16
dec
dec
push
dec
lea
fdivs
jb
xchg
cltd
call
iret
es
xchg
mov
or
dec
jl
xchg
mov
rorl
or
xor
or
pop
mov
mov
xor
in
cs
mov
cmp
ja
jo
mov
add
jno
cmp
mov
out
adc
adc
jo
jmp
xchg
xor
into
leave
mov
cmp
das
or
outsb
test
or
inc
mov
loope
cmp
push
dec
xchg
lock
mov
cmp
aad
imul
push
or
mov
out
push
xlat
pusha
jg
movsl
leave
test
mov
ss
rorb
out
frstor
mov
cmpsl
bswap
rclb
mov
mov
cwtl
jno
loope
stos
stc
push
arpl
pop
decb
lock
mov
fdivrp
mov
add
xor
fwait
aad
push
lea
mov
mov
jmp
jne
jns
aam
fmull
iret
mov
fildll
pushf
pop
mov
push
sbb
add
mov
jno
js,pt
inc
xlat
scas
and
sub
sbb
add
insl
sahf
adc
lret
out
clc
or
pop
push
mov
pop
popa
inc
add
outsb
dec
rcrl
sbb
jp
out
sbb
das
push
loop
inc
push
stos
sbb
pop
and
nop
add
ljmp
lcall
ja
push
and
ret
lret
fwait
xchg
cmp
lods
or
aaa
into
and
in
push
ret
addl
push
xor
pop
jno
outsb
jecxz
clc
cmp
sub
neg
adc
into
inc
daa
adc
pusha
lahf
into
ljmp
mov
fs
add
push
lahf
xchg
and
mov
pop
add
xor
in
divl
insb
mov
or
mov
lret
aam
flds
loopne
movsb
imul
movsl
rclb
mov
loop
adc
inc
sbb
fstpt
out
sahf
mov
loopne
push
and
mov
dec
ljmp
sub
loop
insl
sti
dec
out
cmp
push
aas
xchg
mov
bound
or
lods
cmp
movsl
lret
fs
fcmovnbe
notl
rcl
sub
dec
xor
lds
push
lds
push
cmp
and
adc
cmpsl
xchg
jl
and
jg
inc
addr16
mov
sbb
xchg
mov
pusha
mov
adc
or
icebp
nop
mov
sbb
cmc
add
xsavec
push
int
sub
push
pushf
jle
es
ss
adc
lcall
cmc
sbb
imul
inc
push
stos
dec
and
xchg
jbe
out
fsubrl
insb
mov
sub
dec
push
jge
ror
jnp
data16
cs
adc
mov
lret
adc
push
imul
and
pop
cltd
loope
hlt
push
xchg
scas
or
fwait
adc
push
jmp
mov
push
cmpsb
fldt
lock
fsubs
in
or
pop
movsl
add
add
adc
inc
jbe
rorl
imul
daa
push
les
jp
add
jecxz
adc
pop
mov
sbb
xchg
mov
dec
int3
jnp
inc
and
dec
xchg
int3
cmp
and
dec
dec
rep
lods
ret
jnp
outsl
xor
daa
aam
mov
mov
lret
test
aad
xchg
mov
pop
lds
inc
cwtl
sbb
enter
xor
in
pop
ljmp
or
scas
fstpl
lcall
movsl
mov
mov
and
mov
mov
insb
add
fists
fstl
jbe
fcoms
sti
cld
mov
das
jp
push
inc
lds
fldl
push
arpl
lods
in
pop
pushf
lret
pusha
iret
ja
xor
imul
mov
jecxz
dec
out
push
call
dec
push
repnz
cmpsb
scas
jb
mov
jo
ret
sub
xchg
sub
inc
jb
inc
adcl
mov
jge
gs
cmp
movsl
mov
mov
lods
mov
cmovge
jbe
lret
shrb
int3
xlat
outsb
and
xor
cli
dec
push
add
mov
mov
xchg
cmp
test
in
sub
pop
dec
cmc
fwait
movsb
mov
add
cmp
or
rcrl
bound
das
and
xchg
mov
or
sub
fsubrl
rcl
pushf
addr16
lea
clc
sbb
adc
in
xchg
not
inc
gs
les
mov
dec
stc
lret
sub
lret
mov
add
movsl
int3
lea
mov
movsb
mov
push
addr16
lods
stos
add
pop
inc
fistpll
mov
std
fwait
bound
sub
test
mov
sub
addb
dec
inc
adc
iret
mov
arpl
in
xchg
lods
sbb
je
mov
rcl
inc
inc
push
adc
aam
lods
sub
icebp
repz
cmpsl
das
repnz
shll
lods
xchg
lret
adc
daa
stos
pop
mov
lock
adc
mov
xchg
bound
lods
clc
sub
mov
fistpl
pop
or
add
imull
leave
hlt
daa
insl
xchg
negb
sub
test
dec
sbb
lods
jns
outsl
dec
xorb
ss
push
mov
push
add
js
dec
shll
sub
aas
rcr
jecxz
mov
lret
lret
adc
or
cmpsl
lret
inc
jns
int3
jge
dec
add
outsl
cli
int3
cmc
insl
xchg
aaa
sub
mov
pushf
jbe
shll
inc
jl
lret
rcl
mov
les
dec
data16
add
mov
push
dec
mov
add
lods
shufps
movsl
sub
into
push
mov
or
pop
outsb
mov
mov
cmp
mov
dec
movsl
aad
lods
lret
or
push
out
xor
inc
mov
mov
into
jo
jmp
xor
mov
or
in
fdivrl
aam
xor
imul
call
inc
mov
sbb
mov
in
sub
dec
xchg
dec
and
dec
pop
scas
push
jecxz
mov
test
or
cltd
loop
xlat
fwait
test
and
outsb
and
jnp
cmpsb
jle
mov
push
or
pop
es
stos
das
add
int3
sbb
stos
jp
imul
stos
ret
pop
int
rclb
cmp
xlat
mov
jp
mov
pop
test
test
adc
out
daa
mov
leave
loope
dec
mov
xlat
xor
sarl
inc
out
movsb
jno
pop
xor
in
out
fcompl
and
imul
ret
push
std
and
mov
into
inc
mov
mov
cli
icebp
je
mov
movsb
xor
es
and
stos
jno
cs
push
xchg
or
movsb
inc
lds
or
mov
sahf
sti
stc
out
in
loop
and
push
in
imulb
jo
ja
cmp
mov
lods
pop
adc
fxch
setae
cmc
shlb
push
mov
pop
call
jle
jecxz
cwtl
adc
pop
fcomi
aam
and
pop
shrl
data16
adc
sbb
xor
cmp
mov
cmp
sarl
or
sarb
out
ds
loop
lret
mov
rcl
sbb
in
add
mov
enter
jmp
cli
rclb
imul
sbb
nop
mov
ret
cli
out
and
mov
mov
cwtl
lods
lods
mov
add
xchg
repnz
sbb
lret
in
imul
cmp
cmp
jl
push
xchg
inc
adc
shlb
js
lods
or
xor
inc
idivb
dec
xchg
xor
or
mov
scas
xchg
loop
into
mov
shr
js
pop
sbb
xchg
ficompl
in
mov
adc
sbb
shrb
leave
inc
push
dec
mov
enter
inc
lret
fs
cmp
mov
jecxz
add
add
int3
insb
out
xchg
xorl
test
push
or
aas
adc
cld
bound
pop
incb
mov
inc
mov
mov
mov
mov
pop
bound
pop
cmp
mov
mov
repz
fs
push
cmp
sbb
lods
push
xchg
insl
popf
aad
scas
or
daa
push
dec
pop
test
add
sarb
shl
xor
push
call
cmpb
push
mov
out
xlat
out
hlt
test
xchg
inc
aad
add
pushf
out
cwtl
imul
gs
pop
jne
and
mov
push
mov
daa
or
std
insl
in
jne
rcl
mov
lret
xor
out
pop
sub
into
fdivrs
mov
rcr
stos
ja
mov
and
test
xchg
add
cmpsb
and
jmp
subl
xchg
sub
ss
jo
in
fwait
cli
js
jns
std
nop
fisttpl
jecxz
xor
frstor
mov
dec
test
lods
int
imul
mov
or
andl
fldt
push
xor
movsl
loopne
mov
ret
xchg
dec
push
stos
lock
sahf
and
sub
scas
in
xchg
xchg
push
jge
mov
mov
in
insl
jae
int
pop
push
sub
mov
cmpsl
inc
jge
cmpb
dec
incb
cli
push
dec
xor
lret
inc
push
in
and
fs
pop
jle
frstor
sub
or
cwtl
fchs
or
jecxz
cli
mulb
add
inc
cmc
cmp
xchg
mov
dec
cltd
fmul
jp
or
jmp
out
adcl
fidivrs
loope
gs
cld
sbb
push
inc
jns
pop
and
lcall
mov
mov
add
pusha
or
adc
test
push
and
adcb
iret
pop
into
mov
movb
fwait
pop
jp
leave
push
shrl
out
lea
pop
dec
pop
sbb
test
cmc
and
jp
cwtl
fwait
lock
mov
mov
in
and
fnstsw
lret
das
nop
shrl
js,pt
pop
inc
out
rcrl
mov
test
mov
xchg
mov
push
movsl
bound
fdivs
xchg
xchg
dec
mov
xor
arpl
in
inc
mov
sbb
inc
push
lret
sub
fadds
in
rol
cmp
test
xor
sbb
xchg
iret
pop
cli
push
jne
es
push
sbb
xor
dec
divb
add
punpckhdq
mov
scas
xlat
pop
aaa
ds
pop
leave
add
xor
cmp
push
xchg
mov
andl
mov
arpl
inc
jno
cmp
sbb
or
rcrb
mov
xor
push
iret
int
in
inc
xor
faddl
pop
inc
mov
outsl
push
sarb
lret
jge
and
into
jnp
cmp
pushf
icebp
dec
out
pop
cmp
dec
outsb
mov
push
out
xor
jge
fs
mov
add
mov
popl
push
fisubrl
dec
pop
push
loope
mov
ret
addb
shr
xchg
sbb
jo
fldenv
icebp
loop
mov
pushf
imul
jo
xchg
data16
in
out
shrb
movsb
fidivrs
lcall
pop
outsl
xchg
pop
add
xor
aad
imul
adc
pop
inc
ja
or
pop
shlb
test
iret
out
xchg
pusha
out
cwtl
xchg
nopl
mov
gs
mov
xchg
data16
jo
inc
dec
addr16
fcmovnbe
aaa
jbe
jne
test
aam
dec
repnz
les
sbb
and
xlat
call
repnz
jns
insl
lcall
mov
mov
loopw
in
in
and
stos
lock
push
inc
mov
lea
dec
pop
or
rol
xor
lahf
lcall
push
stc
mov
aaa
icebp
ret
adc
sub
movsb
repnz
jae
decb
jecxz
jbe
pop
ds
int3
aas
fnsave
push
pushf
cmpsl
icebp
sub
cmp
jbe
test
gs
mov
sbb
lcall
lods
pushw
scas
lret
push
outsb
add
push
cmp
mov
lret
andl
cltd
rol
sub
lret
inc
addr16
test
jb
dec
mov
pop
lret
or
enter
mov
cli
push
dec
nop
out
pop
mov
dec
iret
mov
js
mov
jae
sbb
inc
das
push
xor
cltd
xchg
frstor
call
inc
mov
es
into
and
in
int3
fcomp
insb
mov
jne
outsl
add
cmpsl
push
arpl
inc
inc
mov
or
xor
arpl
push
cmp
xor
lea
ja
cld
cmc
mov
inc
clc
ret
cmp
adc
add
shll
clc
mov
dec
mov
aas
shrb
pop
test
add
cmc
sahf
jnp
lock
xorl
or
jo
in
or
insb
jle
gs
lods
repz
ret
cltd
or
xor
daa
lods
outsb
mov
in
cmp
mov
outsl
adc
movsb
push
or
mov
pop
fisttps
dec
dec
pop
fmul
into
or
lcall
inc
shll
push
and
xchg
cmpsb
xchg
and
repnz
xchg
dec
je
int3
outsb
adc
sbb
int
push
sub
test
rclb
sbb
or
and
push
sahf
lcall
loope
lret
jl
xchg
scas
inc
lods
xchg
test
enter
ss
mov
cld
dec
outsb
cmp
dec
fbstp
cmp
ds
or
test
loopne
xorl
mov
sbb
mov
std
jnp
and
jmp
or
loope
mov
xchg
sub
scas
cmp
mov
stos
imul
stos
jg
jmp
push
cli
pop
add
into
pop
mov
cmc
mov
mov
sbb
addl
jecxz
mov
mov
stos
mov
insl
into
add
push
mov
pop
arpl
popa
mov
xchg
dec
add
or
and
or
inc
push
xor
fst
cli
dec
xchg
xor
gs
rcr
scas
xor
es
sub
shrl
loop
hlt
mov
mov
mov
out
adc
lret
hlt
pop
push
out
adc
int
lds
loope
popf
jmp
mov
sar
sbb
popa
mov
test
test
shlb
and
inc
cmc
sbb
stos
ljmp
cmp
and
mov
lods
jo
push
shlb
lea
push
inc
cmp
ljmp
rorl
dec
fmuls
inc
jmp
adc
out
movsl
and
or
shlb
into
cmp
int3
clc
and
cld
add
inc
lcall
sub
aam
mov
jo
pop
or
loope
shr
and
xchg
xchg
mov
lahf
sarb
repz
mov
push
xor
jbe
std
sbb
mov
xchg
cmp
jbe
inc
mov
xchg
test
es
popf
cmp
sbb
push
xor
dec
sbb
testl
inc
xchg
call
out
enter
jae
xchg
or
push
rorl
test
mov
inc
pop
push
xor
addr16
mov
push
mov
mov
sub
xor
sub
popf
dec
outsl
insl
out
push
in
mov
movsl
jge
fmulp
jle
jb
into
adc
loop
shrl
out
mov
cmovg
sub
sbb
mov
fs
xor
push
pop
xor
and
add
fisttps
addr16
push
mov
pushf
cs
mov
insl
adcb
xchg
pop
lcall
je
cltd
xchg
int
jmp
jl
xchg
in
stos
fmul
sbb
gs
sub
std
cmp
xchg
add
push
xchg
inc
mov
mov
mov
outsb
loopne
cltd
mov
sbb
pop
mov
and
or
adc
push
repnz
adc
jecxz
inc
jp
lret
inc
pop
fnsave
movsb
mov
xor
adc
mov
add
mov
mov
mov
ds
inc
jmp
insb
dec
xor
inc
dec
pop
sub
or
clc
in
cmpsl
ljmp
adc
repnz
out
jmp
sarl
je
xchg
adc
gs
shl
push
jae
fcmovnb
pop
test
mov
push
outsl
jnp
rol
fdivs
std
xchg
adc
or
es
enter
or
jnp
jne
movsb
sbb
pop
scas
cmp
fcomip
test
arpl
mov
adc
popa
test
out
insl
xor
sbb
repz
push
or
into
imul
es
push
push
inc
div
lods
jns
dec
cld
add
xchg
lret
fimuls
seto
pop
enter
pop
std
adc
test
out
add
mov
xor
jo
lret
cmpsb
cli
fwait
cmp
dec
adc
inc
pop
sub
mov
mov
cmp
repnz
gs
fdiv
jne
jl
into
dec
std
cs
push
mov
aam
cmp
push
ljmp
lea
inc
inc
pop
js
test
mov
push
sti
pop
sahf
stos
cmp
pop
mov
into
mov
xchg
repnz
shl
insb
stos
insl
nop
jbe
dec
adc
js
clc
shrl
fisubrl
loope
xchg
icebp
push
push
pushf
scas
lea
mov
or
into
in
test
sub
pop
mov
shlb
fld
push
mov
imul
and
into
nop
push
pop
inc
cmp
mov
sbb
mov
ret
mov
mov
dec
xchg
lret
mov
cmc
dec
scas
cmp
xor
repz
adc
add
mov
or
cmpsb
addr16
mov
rolb
inc
mov
test
inc
fxch
insb
inc
ret
mov
push
and
lret
xchg
icebp
vmwrite
pusha
test
mov
mov
mov
sub
fdivrl
imul
decl
xor
je
test
iret
xchg
jbe
pop
sub
jle
lcall
out
mov
fs
pop
jp
push
shlb
int3
xor
push
popf
lahf
sbb
sbb
insl
sbb
inc
jmp
adc
icebp
mov
sub
push
inc
add
lock
xchg
rcr
scas
dec
aaa
leave
gs
xor
pop
sbb
insl
jo
test
daa
push
cli
subl
ljmp
xor
lret
push
and
fisttpll
cmc
sbb
popf
and
xor
call
or
mov
mov
mov
or
loope
mov
adc
stos
jne
sahf
cltd
lret
cwtl
adc
jmp
repnz
mov
xchg
int3
nop
cmp
movsl
fdivs
in
aad
dec
in
mov
push
mov
push
out
mov
dec
leave
dec
fimuls
sbb
or
dec
mov
push
cmpsl
out
ja
dec
imul
fidivs
mov
sub
sti
push
popa
insb
not
mov
repz
jbe
ljmp
rolb
stos
pop
in
rcl
dec
cmp
jo
les
jg
pop
aad
add
dec
cmp
stc
adc
mov
or
popw
iret
je
into
movsl
fdivrs
inc
jmp
xor
pop
inc
scas
icebp
jmp
sub
fisubs
mov
dec
jbe
aaa
inc
pop
loopne
jmp
or
lock
and
push
sarl
repz
jns
clc
mov
je
ss
les
mov
aas
imul
das
icebp
cmp
sbb
xchg
pop
pop
out
mov
iret
jns
sub
sub
rcll
jnp
lds
fnstcw
jne
rorb
pop
mov
xor
pop
sbb
mov
mov
adc
inc
add
test
mov
addr16
jns
cwtl
ficompl
nop
fldl
xchg
inc
mov
rol
testb
sub
inc
leave
mov
lret
push
mov
and
movsl
lods
inc
bound
push
xchg
pop
push
adc
dec
ret
jae
into
iret
push
popf
outsl
aam
add
stos
not
or
movsl
inc
test
aas
or
xor
mov
lahf
fcoms
xchg
sub
or
and
cmc
cvtdq2ps
mov
mov
pop
vhaddps
cwtl
mov
mov
repnz
rol
pusha
imul
pop
xor
out
jb
mov
ret
clc
movsl
mov
xor
sahf
rclb
inc
movsl
cmp
and
pop
adc
cs
mov
rcl
movsl
subl
cmpsb
xchg
cmp
rcrb
out
fadd
es
nop
lds
lret
dec
pop
push
fld
insl
jbe
stc
data16
mulb
int
xor
push
aaa
fiadds
lret
xor
in
jle
mov
mov
fcoms
push
cmpsb
jo
pop
inc
movsl
addr16
push
leave
jl
shrb
push
es
and
and
mov
pop
adc
or
lret
mov
fwait
mov
mov
cld
push
xor
add
insl
fdivrs
or
inc
mov
cmp
jp
pop
aaa
mov
push
cld
cmpsb
pushf
leave
cmpsl
push
xchg
mov
movsl
xchg
push
push
dec
fdivs
int3
push
jg
mov
out
lods
repz
pop
xlat
and
sti
push
aas
idivl
jns
lods
jae
mov
mov
ss
int
xor
insl
adc
loope
movsb
int3
mov
pop
mov
rcll
insb
cmp
pop
cltd
lahf
inc
or
movsl
xlat
pop
push
jbe
mov
cmp
and
js
aas
movsb
popa
pop
push
rorb
lret
cmp
and
and
aaa
sub
inc
xor
inc
mov
add
jmp
shl
mov
xchg
adc
subb
test
cmp
arpl
shl
pop
jge
ret
movsb
into
stos
or
fcmovu
shll
sar
mov
mov
pop
cmp
fildl
divl
aas
push
mov
sbb
hlt
pop
lret
push
scas
popa
in
pop
call
int
pop
lock
cmp
rol
adc
jle
call
add
shl
iret
sahf
and
ljmp
les
push
shrl
adc
out
hlt
test
inc
in
or
movsl
ficoml
pop
into
jae
dec
les
nop
pop
dec
dec
jmp
leave
cs
stc
lahf
out
hlt
push
pop
gs
ss
cmc
cmp
les
loop
xchg
sub
add
lahf
cmp
outsb
or
jle
andb
push
fs
add
xchg
mov
jns
cmp
fldenv
mov
movsl
adc
loope
inc
in
fisubl
xor
std
pop
jno
push
push
jne
add
add
push
subb
inc
test
or
xchg
inc
cmpsl
rcr
add
sub
push
xchg
inc
repz
imull
xchg
and
mov
repz
mov
lret
xchg
dec
jno
orb
in
adc
call
adc
inc
and
insb
rorl
inc
lret
inc
xor
lret
rclb
sbb
in
push
mov
outsl
insl
out
rorl
pop
ss
lret
add
sub
push
std
jp
ffree
fxtract
push
sub
loop
bound
pop
or
enter
sub
into
xchg
nop
cltd
mov
xor
pop
ljmp
cmc
and
aad
int
aas
mov
in
mov
jb,pn
pop
into
stc
cmp
cwtl
pop
in
sbb
inc
sub
mov
fisubrs
mov
or
aaa
push
adc
popf
and
stos
xchg
ficoms
dec
add
movsl
icebp
or
hlt
jne
lret
es
cmp
lret
dec
sub
add
incl
test
imul
cmp
inc
sbb
jl
out
push
iret
pusha
sub
scas
jb
loope
inc
xchg
outsb
cmpsb
push
test
mov
js
lret
pop
loop
sbb
push
lods
push
shl
dec
lret
out
add
mov
stc
jmp
cmc
jae
push
pop
xchg
loope
jbe
xor
jecxz
mov
popa
xor
pop
aaa
pop
fcoms
out
test
mov
lods
jns
into
addl
hlt
or
lods
push
pop
bound
sbb
test
sbb
ss
push
mov
aaa
push
or
push
js
sub
jno
seto
out
dec
or
jle
fidivrl
lds
dec
scas
test
mov
test
in
mov
in
xchg
add
sbb
loop
fcompl
or
xchg
out
sub
sbb
cmp
insl
iret
test
xor
sbb
js
pop
mov
sbb
xor
mov
xchg
daa
xchg
inc
clc
ja
les
loop
mov
pop
jl
mov
imul
lods
sbb
mov
popa
xchg
jae
or
icebp
inc
push
mov
jbe
xlat
push
aam
cs
jo
popa
test
mov
shl
pop
shlb
xchg
dec
out
jns
popa
iret
aam
cmp
in
fwait
and
xor
mov
mov
lahf
lods
jecxz
icebp
mov
repz
jnp
push
imul
scas
inc
sub
call
jl
xor
inc
mov
push
test
adc
sub
adc
adc
dec
jmp
sub
inc
lahf
test
add
pop
out
pop
test
shlb
movsl
out
pushf
cmpsb
test
inc
jbe
shl
shrb
dec
nop
xor
jne
lret
lock
or
insb
test
cmp
lods
imul
ds
incl
cmp
and
out
insl
push
movsl
jnp
lcall
pop
or
js
mov
xlat
sahf
sub
push
gs
pop
repz
arpl
xor
and
stos
cmp
jp
shrb
out
insl
xchg
mov
rcrb
pop
in
cmp
sbb
mov
mov
or
popf
jg
xchg
xchg
jo
call
jle
fsub
xchg
and
call
and
cmp
movsb
aas
adc
repz
inc
push
xchg
hlt
mov
add
or
outsb
pop
out
gs
xor
enter
lock
lods
mov
int
cmc
cmp
lret
add
pop
mov
fwait
sub
mov
add
and
int
popw
and
sub
out
icebp
dec
pop
sbb
out
and
sti
testb
or
and
dec
push
popa
pop
sbb
push
cmc
idiv
lahf
mov
adc
dec
fwait
xchg
jae
into
sub
and
and
push
push
idivb
popa
outsl
xor
push
out
jge
jne
shll
mov
nop
or
add
and
xor
ljmp
or
push
adc
aad
ja
cmpsl
mov
sarl
push
dec
out
fcomps
stos
je
int3
hlt
mov
leave
xchg
inc
cmp
xlat
pop
cmp
sbb
lods
add
or
das
push
test
sub
ss
outsl
mov
fwait
and
push
movsb
xchg
sub
pusha
push
xchg
mul
xchg
push
mov
ss
lds
jns
mov
add
dec
jo
sbbl
dec
sarb
pusha
add
popf
aam
cld
fisubs
enterw
sub
scas
out
fidivrs
movsl
pop
outsl
cmc
popf
icebp
push
inc
xor
adc
mov
xor
jbe
fdiv
jecxz
dec
cwtl
mov
fildl
jle
clc
push
iret
xlat
jo
sahf
or
aam
test
pop
leave
cmp
and
pop
xchg
pop
aad
rcrb
adc
sub
adc
xchg
bswap
pop
cmp
add
fimull
xchg
dec
gs
movsl
push
jae
sbb
jle
or
aaa
pop
pusha
jne
ror
sbb
pop
push
adc
pop
andl
rol
pop
cmp
xchg
shrl
movsl
lods
adc
fwait
pushl
jne
scas
fcmovbe
jno
enter
xchg
lods
out
daa
int3
test
cmpsl
loopne
mov
jo
mov
inc
add
dec
in
mov
or
fiaddl
lret
jnp
in
xor
mov
jnp
loop
jg
add
mov
or
bound
xchg
mov
lret
ret
enter
push
sbb
arpl
and
repz
movsl
mov
push
pop
sub
aad
je
and
ret
mov
or
jmp
inc
add
or
outsl
in
cmp
jbe
test
cmpsl
mov
ljmp
cli
inc
add
push
mov
cmp
mov
test
movsl
popf
xchg
hlt
shlb
jecxz
stos
jnp
dec
repz
pop
movsb
pop
data16
inc
sti
push
push
enter
xor
or
icebp
out
adc
cmp
jae
sbb
push
dec
mov
dec
lret
aam
dec
jbe
dec
outsl
fdivrp
mov
popf
popl
cltd
out
movsb
inc
test
dec
add
xchg
in
jne
adc
dec
ljmp
stos
sub
lods
test
repnz
mov
xchg
xchg
out
fdivr
movsl
inc
addl
push
ret
jne
push
sub
lock
fdivs
xor
rcrl
mov
out
push
int3
fiaddl
mov
clc
pop
xchg
clc
sahf
adc
pop
push
mov
adc
nop
cmpsb
xchg
add
rorl
out
das
insl
push
seta
bound
mov
movsl
icebp
push
inc
std
or
mov
xlat
cmpsb
push
negb
mov
sti
cmc
push
jno
mov
cmp
lret
lret
push
lods
jge
pop
aam
jnp
fs
pop
push
cs
mov
jl
mov
in
fisttpll
push
imul
push
aam
popl
push
dec
lahf
mov
sbb
push
psrld
lret
lea
xchg
and
enter
int3
mov
inc
mov
push
shl
jbe
enter
xchg
aad
or
or
nop
dec
xchg
jns
aam
scas
xchg
adc
popa
jne
gs
or
and
adc
push
dec
xchg
nop
repnz
jnp
inc
pop
bound
add
test
jne,pt
stc
push
mov
stc
jbe
pop
adc
or
xor
sub
xchg
out
fscale
movsb
xchg
out
mov
push
subl
or
daa
or
rorl
mov
insl
adc
cmpsl
add
xor
out
and
mov
fists
cli
shll
ja
sbb
mov
jmp
into
popf
push
adc
inc
xchg
push
push
push
lret
xor
mov
jo
jl
pushf
into
dec
in
mov
clc
adc
daa
or
mov
cmp
fwait
mov
mov
push
shrb
mov
fs
push
mov
stos
push
inc
dec
fwait
cld
out
cmp
sti
fstps
ror
mov
push
xchg
cmp
ja
fs
les
aad
movsl
inc
adc
nop
fidivrs
and
addr16
jns
adc
push
or
sbb
fwait
stos
xchg
add
inc
data16
xor
mov
loop
popa
addl
dec
xlat
sti
push
inc
ss
pop
jne
pop
mov
pop
sub
pop
adc
out
cpuid
cmp
jle
inc
pushf
int3
ds
xchg
jmp
xchg
xchg
loope
mov
dec
inc
sbb
mov
rcrb
fstpl
popf
in
dec
sub
rcl
mov
ja
dec
movb
push
mov
stos
push
push
mov
jmp
popa
xor
mov
sub
sbb
mov
sar
fimull
inc
cmp
inc
jo
xchg
out
fstps
insl
push
mov
std
sub
xchg
jbe
loop
adc
es
fwait
aam
add
push
push
out
pop
mov
sub
push
adc
add
aad
xchg
mov
ja
mov
push
and
xchg
dec
popf
sub
rcl
pop
stos
scas
mov
movsb
xlat
loop
andl
push
inc
xchg
out
xor
mov
pushf
mov
sbb
scas
push
jmp
push
jns
out
xor
pop
add
or
inc
inc
sub
cmpsb
shll
xor
inc
jg
sub
sbbl
imul
xor
push
aad
adc
mov
mov
mov
mov
cmpsb
jle
mov
adc
and
repz
jae
and
shl
bnd
aad
lods
jns
test
stos
rcll
es
mov
mov
out
xchg
sbbb
fs
mov
dec
std
xchg
push
mov
dec
sub
mov
xchg
mov
jg
or
jnp
ret
outsb
imul
mov
cmpsl
cmp
push
out
fbld
into
push
data16
and
int
icebp
xchg
pop
adc
add
dec
jecxz
jmp
bound
pop
pop
je
xor
or
dec
sbb
mov
shrb
stos
movsl
and
aaa
xor
scas
mov
ret
xchg
push
outsl
and
mov
cmp
test
jge
sbb
mov
mov
movsl
rorl
push
xchg
pop
mov
cmc
add
call
imul
movsb
stc
and
xor
mov
jnp
ret
scas
jmp
mov
add
out
lods
ret
das
xchg
jecxz
jns
movsl
sub
rcl
adc
add
ret
test
out
or
dec
in
pop
push
xor
push
stos
fidivrs
jmp
inc
out
lcall
xchg
or
in
shlb
fisubrs
test
mov
outsl
push
popa
mov
xchg
mov
aaa
mov
insl
mov
xor
cld
xlat
jo
iret
fidivs
movsl
sub
pop
ja
push
mov
add
and
insl
push
andb
pushf
sub
xchg
negl
jae
movsl
arpl
mov
rcrb
out
fcoml
pop
push
loope
xchg
mov
ja
mov
push
mov
in
mov
mov
push
cmpsl
sbb
push
cli
jne
cmp
ja
jecxz
lods
add
cli
mov
or
fidivrs
outsl
adc
xchg
xor
shlb
xor
mov
jnp
push
cmpsl
or
ror
movsb
mov
loopne
jo
adc
shl
stos
dec
push
jo
daa
lods
lcall
in
lods
pop
scas
mov
fmul
loop
fsubrs
add
into
sbb
push
lret
xchg
jp
pop
push
negl
arpl
int3
cmp
lods
cmc
paddw
xchg
or
sbb
xchg
xchg
insb
jnp
sub
mov
jne
mov
cmpsb
dec
pop
popf
imul
lea
ret
ficompl
jns
xchg
lea
int3
shlb
and
fwait
adc
je
movsb
mov
outsb
pop
stos
repz
in
in
negb
into
add
lea
frstor
mov
nop
dec
push
add
in
bound
clc
lock
xor
cmc
push
iret
mov
outsb
or
inc
test
push
fdivl
inc
ret
inc
cmp
or
addr16
or
ja
mov
les
js
into
iret
mov
xchg
in
cmp
cmp
lahf
fs
or
pop
adc
adc
push
mov
mov
inc
adc
fidivrl
dec
ds
stos
jge
xlat
in
shlb
into
aaa
sahf
dec
mov
dec
and
push
xor
add
icebp
or
sbb
mov
jno
mov
mov
mov
rclb
jne
adc
inc
enter
into
jne
cmp
sub
fcoms
pop
pop
inc
fsts
and
xor
inc
xor
shl
or
jne
les
push
mov
and
jno
mov
out
addr16
lods
in
pop
movsl
loopne
ret
not
dec
fmuls
rolb
inc
pop
ljmp
mov
dec
sub
shlb
notb
push
xlat
enter
sbb
sbb
mov
pop
rcrl
xor
mov
arpl
xor
lods
sub
add
scas
test
dec
lods
fcmovbe
mov
push
dec
stos
arpl
push
mov
jbe
or
sbbb
shl
jbe
mov
cs
or
sub
pop
clc
mov
xor
push
xchg
sub
mov
pop
int3
mov
loope
jecxz
fisubl
or
sar
adc
sub
add
push
push
scas
pusha
dec
push
mov
arpl
mov
jne
pop
hlt
mov
into
cld
jbe
mov
add
cmp
sub
and
push
inc
cmc
and
mov
mov
aam
rcrb
add
mov
adc
in
int
mov
lret
push
jne
pusha
jmp
adc
pop
nop
loopne
push
fwait
add
inc
and
fistl
xchg
cld
mov
rcll
jp
inc
xchg
inc
aaa
mov
lods
sti
mov
cld
cmp
or
lret
ds
push
nop
imul
or
pop
pop
push
shlb
inc
inc
jae
popf
and
push
out
push
mov
rcl
jecxz
daa
dec
and
mov
dec
cmp
inc
jb
imul
test
cmpsl
sub
out
jle
jo
jae
push
pop
cmp
lret
and
stos
push
jns
sub
call
cwtl
mov
das
mul
mov
inc
test
mov
scas
add
xchg
mov
xchg
pop
jecxz
cli
bound
call
inc
inc
rorl
jo
cmp
adc
out
in
repz
scas
mov
inc
or
ret
in
push
pop
mov
aad
ficomps
out
jbe
out
stos
int
ds
or
lds
inc
and
dec
mov
into
lods
rol
sti
insl
xor
sbb
stos
cmp
and
dec
sbb
movsb
or
leave
test
adc
lock
dec
pop
cs
mov
jno
rol
adc
fs
dec
inc
inc
add
inc
sub
in
popa
fiadds
fwait
or
cwtl
adc
mov
divl
push
icebp
fs
testb
out
iret
ret
mov
orb
mov
stos
add
and
add
xchg
in
rolb
jbe
dec
sbb
mov
jbe
cli
pop
jp
lret
or
adc
cmp
jns
jg
and
jnp
xchg
and
mov
mov
lret
push
push
cmp
mov
imul
mov
lods
cwtl
scas
popf
shl
ret
sbb
jecxz
pop
into
mov
fcmovne
sbb
enter
fwait
out
shll
dec
sbb
mov
testb
test
xchg
mov
cwtl
repz
adc
insb
dec
mov
mov
call
dec
sbb
adc
test
shlb
lds
dec
xor
jecxz
mov
pop
test
mov
xchg
int
xor
aam
nop
mov
hlt
outsb
mov
sarl
test
clc
fidivs
inc
xchg
stc
cmp
cmp
or
mov
aas
les
cmp
test
sbbb
dec
xor
or
jg
dec
jnp
adc
pop
incl
cmp
jge
mov
insb
ss
dec
mov
ljmp
insl
fnstenv
xor
out
jmp
fiaddl
push
sub
js
es
inc
mov
sbb
rol
inc
pop
adc
add
xor
push
xchg
rclb
xchg
mov
call
dec
clc
stos
sub
inc
divb
push
fwait
mov
bound
and
or
lahf
arpl
add
lret
mov
adc
and
aaa
dec
sbb
add
sti
sub
cmp
repz
dec
ret
jl
js
hlt
lds
or
idivb
push
add
or
dec
rclb
adc
mov
std
cwtl
mov
imul
dec
movsb
loope
insb
sub
mov
outsb
lods
adc
mov
in
jne
xchg
fistl
xor
mov
and
cmpsb
inc
pop
inc
push
mov
shll
or
jo
icebp
sarl
outsl
lret
sahf
jg
cmp
inc
lods
push
or
jmp
rol
dec
jmp
cmc
jb
push
or
dec
ljmp
je
clc
int3
sub
push
test
xchg
jno
repz
movsb
dec
mov
loopne
call
fwait
jle
inc
jmp
pop
je
dec
ja
int
xchg
imul
mov
add
ss
into
aaa
cmp
clc
lret
test
jnp
lea
sbb
adc
lret
mov
ds
jnp
popf
jp
jmp
jbe
xlat
pop
lock
push
inc
ret
adc
gs
pop
popa
sbb
shl
inc
mov
xchg
pop
icebp
nop
das
fnstcw
pop
pushf
int
stos
out
in
jge
sti
rcrb
mov
sub
dec
pop
mov
roll
pop
pop
hlt
dec
mov
mov
cmp
cmc
mov
mov
cs
jae
xor
sub
xor
int
lcall
sub
or
je
xchg
enter
pop
jno
inc
xchg
aam
mov
lods
inc
or
push
out
push
daa
push
loopne
or
aaa
stos
mov
lock
aam
nop
outsb
fdiv
lret
popf
std
push
je
insb
jl
ret
into
lods
lcall
sub
or
arpl
ret
mov
ja
in
xor
cmp
push
std
ja
adc
pushf
je
int3
mov
hlt
jbe
jnp
add
jge
xor
and
sbb
gs
jo
roll
pop
int3
into
jle
leave
sub
jns
cmpsl
and
cmp
hlt
mov
xchg
lret
jae
lret
lret
cmp
movsb
in
xchg
adc
jnp
jb
leave
sbb
xchg
or
out
cmpsl
rolb
pop
and
fmulp
cwtl
push
mov
mov
pop
lds
push
bound
iret
jle
dec
inc
jp
test
lahf
push
push
sbb
inc
rclb
adc
lods
fiaddl
add
lock
divl
mov
or
sbb
in
aas
push
sbb
push
ds
push
negl
xor
not
int3
xchg
adc
jno
lea
scas
xor
push
mov
lret
or
into
into
or
scas
sbb
adc
push
adcl
sub
aaa
pop
test
ret
mov
sbb
dec
cmp
adc
xchg
stc
mov
push
pop
outsl
imul
or
cmc
jp
out
xor
into
cmp
out
filds
mov
jle
enter
sahf
loopne
outsb
in
jbe
cmp
cmp
imul
scas
gs
pusha
lret
jle
push
push
movsl
leave
xchg
test
das
mov
dec
call
outsb
shll
jg
mov
mov
xchg
sahf
jnp
sbb
mov
mov
sbb
icebp
std
mov
pusha
out
or
xchg
lret
and
jge
fidivrl
mov
mov
and
mov
sti
lcall
or
int3
jo
lahf
jp
repnz
clc
mov
or
add
push
adc
xchg
lcall
pop
mov
inc
jbe
rcl
sub
hlt
into
xlat
mov
lock
pop
out
or
inc
sbb
xchg
xlat
sub
es
jnp
and
mov
xchg
or
popa
ljmp
mov
out
mov
test
aam
pop
cmpsl
mov
inc
or
xchg
inc
xor
xlat
mov
jbe
mov
nop
lds
push
pop
sub
ret
dec
les
mov
pop
adc
xchg
inc
dec
rolb
or
insb
pop
lahf
mov
dec
jne
and
loope
push
addb
ds
arpl
xchg
jecxz
xor
mov
push
mov
add
addr16
dec
xchg
bound
dec
mov
pushl
lret
fstl
inc
imul
xor
ret
jbe
inc
jno
pop
in
pushf
ss
std
sub
or
cmp
pop
nop
outsl
and
rcl
dec
mov
sub
sub
fcoml
xchg
test
add
add
mov
xor
pop
fsts
out
ret
movsb
cmpsl
scas
xchg
add
dec
xchg
xchg
jb
lret
sub
insb
push
xchg
out
add
xor
jae
lods
mov
inc
adc
xor
shl
mov
lods
cli
mov
punpckhdq
adc
pushf
xchg
rcl
mov
sbb
pop
data16
and
push
cmp
push
add
xor
pop
loop
lcall
jle
fmuls
out
push
fldt
inc
cmpsb
mov
sub
xor
in
rol
dec
push
not
loope
aas
call
cwtl
addr16
cmp
repnz
mov
jne
mov
pop
pop
call
cmp
mov
mov
fstpl
jae
push
fdivr
mov
mov
outsb
mov
adc
imul
into
mov
mov
sbb
iret
scas
add
push
mov
sahf
jne
adc
pop
push
mov
adcb
push
in
decb
sbb
out
stos
fadd
pusha
fwait
aam
jo
xchg
test
outsb
sarb
sub
cmc
daa
fildl
gs
xchg
outsl
arpl
jle
push
cmp
sub
push
jge
cs
arpl
ret
jne
adc
lret
lock
jno
mov
cmc
sbbl
rcr
bnd
jl
adc
xlat
mov
int
jbe
add
xchg
mov
mov
xchg
jns
scas
add
jg
mov
or
xlat
addr16
in
mov
mov
rolb
adc
push
dec
jmp
inc
insb
mov
shrb
mov
push
pusha
adc
and
pop
add
lcall
pop
int3
scas
sbb
cmp
add
inc
cmp
inc
aas
xchg
or
sar
gs
cmpl
ja
inc
aam
int
outsl
add
or
ss
jbe
sub
mov
dec
mov
xor
cmc
imul
or
gs
jnp
xor
inc
insb
insl
pop
push
push
mov
cmpsb
pop
mov
pushf
sub
mov
fsubl
inc
imul
gs
mov
dec
js
test
negl
out
fwait
mov
or
add
out
mov
jecxz
rorl
insb
mov
lret
cmpsl
into
pop
sar
arpl
jns
mov
shll
popf
in
xchg
mov
push
jnp
add
scas
aad
add
xor
maskmovq
notl
fldl
and
sahf
inc
or
incl
out
popf
cwtl
xlat
xor
mov
lock
roll
movb
dec
movsb
mov
inc
decl
out
or
out
dec
lods
es
mov
movsb
stc
and
in
clc
push
inc
fildl
into
sub
cld
mov
mov
movsl
pop
cmp
add
rclb
fistpll
retw
xchg
sbb
daa
shlb
sbb
pop
xor
leave
cmp
jne
dec
jl
sbb
lcall
pop
sbb
dec
arpl
mov
mov
shrb
jecxz
lock
lods
push
xor
jae
ja
pop
or
dec
repnz
mov
ret
in
pop
or
lea
mov
sahf
sbb
xchg
sarl
pop
dec
loope
scas
testb
out
cwtl
aad
iret
and
aam
ja
dec
adc
jge
andl
hlt
xchg
push
out
out
fildll
popa
and
es
int3
sbb
push
out
in
sahf
and
jns
or
icebp
arpl
jmp
mov
imul
pusha
fxch
testb
orb
loopne
xchg
or
mov
movsw
xchg
imul
mov
adc
mov
sbb
hlt
data16
cmp
rorb
out
mov
fisubrs
jl
dec
dec
sarl
sub
push
push
cltd
push
int3
movsl
xor
ret
dec
sti
push
xor
cmp
dec
stc
or
and
popa
fsub
xor
mov
inc
stc
xor
xchg
jno
mov
sub
fs
or
inc
cmc
sbb
dec
jge
sub
iret
jl
dec
mov
jnp
dec
lahf
shrb
jns
sub
pop
push
jne
std
mov
jle
push
leave
popf
inc
fs
cmp
in
rcl
sub
xor
jbe
sub
dec
jae
fcmovnb
sub
in
pause
dec
push
xchg
mov
mov
lret
imul
lds
data16
pushf
out
adc
loop
mov
iret
mov
mov
jmp
add
movb
pusha
or
mov
mov
pusha
or
add
add
inc
cmpsb
insb
arpl
mov
lds
cmp
sub
rcl
rcrb
sub
mov
popa
test
out
gs
rcll
lock
xchg
das
sub
bound
outsl
es
sub
in
sbb
jae
xlat
cmp
and
aas
cmp
sub
cmpsl
xchg
jg
into
in
gs
imul
loop
mov
inc
and
pop
insl
inc
mov
sbb
sbb
loopne
lods
dec
xchg
jne
inc
or
cmc
and
movb
enter
aas
das
jno
mov
addr16
js
and
repnz
lods
cmp
mov
aaa
dec
leave
into
faddl
adc
lahf
rol
fs
cmp
pop
repz
aad
in
sub
push
and
js
mov
cs
inc
cmp
stos
je
leave
push
jmp
jno
xchg
push
adc
out
mov
aam
sub
aad
cmc
stc
das
push
fs
xor
sbb
mov
loop
adc
cmp
cltd
rcrb
jge
jl
jle
xchg
mov
adc
push
jmp
add
ss
or
cmp
push
insb
imul
aam
mov
push
mov
sub
jb
sub
sbb
or
xor
cmp
leave
mov
dec
lods
inc
int
pop
loopne
daa
fcmovb
adc
pop
or
leave
inc
fst
xchg
pop
repz
xor
pop
loope
xchg
mov
dec
jo
xor
jp
adc
and
and
jo
andb
out
cmp
inc
ss
call
xchg
ljmp
pop
and
int
pop
test
cmpsl
sub
icebp
int
in
rcll
mov
sbb
mov
cmpsl
leave
out
sub
push
mov
mov
clc
push
jbe
pushf
js
aam
fwait
loopne
addl
mov
push
ja
lods
pop
xchg
xchg
addr16
movsl
add
lcall
push
mov
xchg
dec
out
rclb
jb
sub
ret
ds
jno
push
mov
pop
ss
popf
xchg
pusha
inc
fdivs
scas
dec
ja
add
lea
fsubrs
cmp
xlat
adc
push
adc
jbe,pt
jge
orl
lea
fsubr
jg
adc
das
xchg
ror
arpl
out
scas
daa
in
mov
xchg
mov
xchg
push
xor
and
test
mov
imul
aad
icebp
lret
outsl
in
rclb
mov
cmpsb
pop
test
and
mov
gs
dec
out
or
sbb
push
out
jl
in
mov
aaa
mov
lods
or
js
shl
dec
xchg
inc
mov
push
imul
out
xchg
inc
movsl
jg
xchg
cld
jae
shll
jo
push
push
daa
addr16
jbe
inc
pop
pop
jns
mov
sti
add
fimull
dec
mov
add
pop
or
cs
stos
fisubs
popf
rcll
jo
sbb
rol
mov
jbe
jb
fidivrl
mov
cmp
pop
or
mov
pushf
or
fildl
jbe
push
popf
or
ljmp
dec
push
jmp
mov
ror
xor
out
mov
jge
loop
sbb
shlb
or
ljmp
push
in
mov
cmc
pop
add
and
test
iret
arpl
add
test
inc
adc
out
dec
cmpsl
fisttps
mov
ljmp
push
in
adc
and
loop
push
xchg
mov
loopne
push
fisubs
lret
fcmovnb
cmpsl
adc
sbb
jns
ljmp
push
xor
jbe
cmp
xchg
test
cwtl
mov
mov
xchg
notl
sbb
inc
mov
int
push
dec
xchg
push
gs
iret
call
fsubrs
push
inc
inc
pop
and
clc
xor
or
jae
jne
in
jns
shr
in
inc
gs
mov
xchg
andb
sbb
lods
push
dec
fs
sahf
sub
fwait
dec
add
bound
mov
jns
pop
fs
fiadds
cmpsl
push
fisubrl
imull
loop
jl
fst
in
inc
dec
xor
jle
pop
dec
mov
sbb
sahf
fwait
cmpsl
mov
xchg
shr
rcll
mov
ja
adc
pop
or
out
sar
lcall
test
add
fucomi
inc
adc
sub
jo
add
pop
fmulp
inc
lods
js
aas
std
incl
mov
fists
dec
xchg
ss
sub
sub
sbb
daa
xchg
cmp
dec
jns
inc
jge
int
mov
cs
or
cmp
imul
cmc
mov
das
inc
push
data16
int3
aad
xchg
imul
cmp
addr16
mov
imul
clc
dec
sti
cld
ja
lret
arpl
push
fidivl
add
insb
sbb
fdivl
dec
daa
jne
mov
add
enter
xchg
repnz
jae
push
outsl
sbb
nop
mov
mov
pop
pop
inc
js
adc
xchg
push
cmp
sbb
push
adc
mov
pop
mov
call
outsb
add
mov
aaa
xchg
ljmp
and
aad
xchg
or
test
repz
ja
into
insl
push
pop
clc
rcrb
cs
fucomp
aaa
in
push
lcall
andl
jg
ficoms
mov
adc
xor
or
out
icebp
dec
push
mov
movsl
or
mov
push
aaa
cmpsl
stos
out
lret
mov
rcr
xchg
xor
std
lcall
test
fwait
es
xchg
mov
dec
lcall
xorb
lahf
stos
xchg
mov
dec
roll
mov
mov
push
popa
dec
add
mov
jae
aaa
pop
mov
popf
mov
dec
bound
test
jmp
push
jo
stos
imul
dec
scas
mov
adc
call
cmp
adc
leave
ret
sub
lea
fbld
push
dec
lret
bound
lds
xor
fcoml
jecxz
pusha
fists
loopne
cld
hlt
ret
popa
aam
push
bound
test
push
jle
pop
inc
pop
fdivr
sub
jecxz
or
xor
cmp
mov
mov
jmp
sbb
movsb
das
cmp
rep
mov
push
push
xor
xchg
fistl
adc
cmpsb
pop
movsb
pop
repz
dec
sarb
sbb
sub
in
iret
pop
ja
cmp
scas
xchg
int3
shrd
xchg
idivb
or
xlat
in
xor
outsl
mov
xchg
mull
fwait
xchg
pop
int
sbb
add
push
imul
fbld
and
test
cmp
lret
adc
enter
dec
sbb
xchg
repz
jne
lods
jmp
mov
push
mov
or
sub
xor
int3
aad
fldcw
mov
sbb
adc
out
push
jp
cmpsl
or
iret
sub
xchg
rol
inc
dec
mov
aas
into
pop
xor
into
sbb
adc
cli
movsb
data16
mov
out
pop
pop
loope
imul
inc
hlt
add
inc
cmc
mov
dec
jecxz
imul
mov
aad
sti
inc
mov
push
or
sbb
loope
adc
jbe
pop
adc
mov
push
mov
mov
and
outsl
inc
int
movsb
jp
dec
add
xor
lret
int3
mov
fnstenv
loope
adc
test
xchg
pop
ljmp
icebp
and
in
adc
scas
push
sti
push
pusha
inc
inc
mov
xor
jecxz
clc
out
adc
ret
or
fistpl
hlt
push
loop
out
cmp
dec
dec
out
lock
jmp
mov
xor
in
and
and
mov
rcl
out
xchg
ja
mov
popl
and
dec
xor
xchg
fs
negb
inc
jbe
lea
inc
push
xchg
mov
shll
inc
movb
sahf
mov
push
sbb
lods
mov
int
mov
jnp
mov
pop
in
mov
jae
cmp
and
fwait
or
adc
negl
cmc
dec
sub
mov
jae
xchg
jmp
sbbb
xor
adc
add
cs
inc
xchg
and
sub
dec
loop
xor
mov
scas
jp
push
pop
add
xchg
adc
cmp
and
cmpsb
andb
xchg
add
mov
int
jo
in
push
in
insb
roll
push
test
or
jl
mov
and
sahf
mov
adc
fcmovbe
loope
shl
pop
testb
scas
ss
pop
xor
loopne
mov
xchg
ret
push
xchg
in
movb
nop
cld
adc
movsl
call
gs
mov
mov
sar
rol
outsl
sarl
aaa
or
ja
pop
jne
pop
push
pop
pop
fistps
xchg
icebp
ffree
sbb
aam
fildll
adc
push
mov
sub
mov
mov
mov
insb
xchg
cld
lods
add
outsb
cli
mov
sti
movsl
xchg
shlb
popf
and
lret
aam
jne
sbbl
imul
dec
pusha
cs
mov
jbe
xchg
mov
lret
push
pop
inc
jns
lret
jmp
adc
or
vmulps
or
push
je
xchg
movsb
imul
shll
xor
pop
or
leave
aam
jns
mov
aas
mov
in
out
push
test
dec
fs
pop
out
lcall
sti
aad
sub
jnp
aas
je
inc
sahf
sub
jmp
cs
mov
mov
fldenv
movsl
or
rol
loop
mov
adc
lods
stos
je
pop
repnz
inc
stc
lds
je
cmc
add
sahf
cmpsb
pop
jnp
sbb
and
imul
out
shll
xchg
cwtl
int3
mov
mov
aas
sti
or
sbb
out
popf
ljmp
pushw
dec
gs
pop
xlat
jl
inc
nop
insl
push
push
dec
into
mov
movsl
dec
stc
dec
in
mov
mov
or
pop
add
jp
ja
dec
jne
iret
notb
inc
jae
mov
or
outsb
mov
repz
inc
adc
fst
addr16
test
push
shlb
push
rolb
fwait
add
mov
je
adc
ljmp
std
cli
lods
cmp
adc
push
mov
jns
push
dec
fidivrl
imul
inc
andb
daa
sbb
xchg
pusha
sbb
xchg
pop
cmp
push
rcl
loope
mov
or
or
les
dec
cli
pop
jo
in
adc
aaa
add
js
lods
xchg
fdivrs
or
pusha
daa
cmpb
push
repz
cmp
pop
fbstp
push
mov
mov
into
movsl
out
ja
cld
sbb
mov
popf
mov
adc
push
and
add
mov
insl
fmul
daa
push
xchg
in
sub
data16
push
mov
iret
ret
inc
inc
inc
bound
sub
pusha
fidivrl
pop
mov
movsb
out
xor
jb
out
mov
das
gs
lret
inc
lds
push
shll
testl
aam
sti
pop
or
lret
xor
mov
scas
dec
jne
icebp
add
popa
inc
pushf
shrb
test
fwait
jp
mov
loopne
loope
pop
bound
cwtl
adc
inc
jge
mov
inc
jnp
xchg
imul
addb
dec
sub
js
push
adc
and
loope
xor
add
or
nop
test
push
lahf
and
ds
cmp
in
rorb
stc
cltd
push
lea
aam
jp
fs
dec
shr
jecxz
mov
push
push
scas
clc
jecxz
add
lods
mov
mov
push
les
inc
dec
xchg
lcall
and
pop
push
hlt
mov
and
push
test
insb
inc
fcmove
pop
out
inc
test
dec
outsb
sbb
shrl
mov
jne
mov
in
cmpsl
not
add
pushfw
inc
ja
scas
fdivrp
dec
fcmovnbe
jmp
out
repnz
hlt
inc
filds
xor
and
sti
push
rorl
imul
cld
les
lahf
xchg
addb
pop
popf
add
fs
out
dec
loope
insb
add
inc
push
mov
mov
lret
movsb
sub
push
jne
mov
testl
mov
mov
pop
dec
arpl
nop
sbb
push
push
push
and
push
lds
jb
pop
movsl
and
loope
lcall
arpl
pop
xchg
mov
dec
or
fs
dec
xchg
dec
mov
jbe
jnp
jp
aam
popl
adc
mov
test
int3
ret
shl
sub
or
test
pop
push
lret
mov
out
jg
je
add
addr16
not
clc
mov
out
inc
lods
and
das
cmp
clc
arpl
adc
hlt
dec
popf
bound
dec
notl
or
mov
sarl
mov
inc
popa
push
ja
dec
lcall
out
mov
mov
pop
xchg
pop
shrb
pushf
xor
lret
out
test
inc
pop
lret
sbb
gs
push
mov
adc
pop
ret
mov
xchg
adc
repnz
push
aas
enter
xor
bound
inc
jns
pop
mov
push
add
inc
jb
loopne
fbld
idivl
push
xchg
and
aam
into
aas
add
and
mov
mov
inc
sub
out
cmp
cmp
aam
jp
add
insl
pushf
or
int
pop
inc
xchg
dec
push
into
std
sub
repnz
rcr
push
jbe
out
aaa
sbb
movsl
jbe
add
push
cli
xor
jp
mov
std
ficoms
popa
sbb
lock
aam
pop
xchg
movb
or
nop
lret
pop
xchg
fsubr
loopne
push
ret
sbb
idivl
mov
adc
xlat
fimuls
rcrl
sub
aas
out
je
test
xchg
into
aaa
int3
xor
inc
xchg
bound
inc
popa
sub
sbb
lret
mov
jmp
mov
push
jnp
ror
out
jo
dec
xchg
pop
sub
es
neg
jns
dec
into
cmp
mov
push
iret
push
push
stos
dec
xchg
mov
mov
push
stc
mov
divb
sub
outsl
cmpsb
test
js
pop
xlat
jbe
xchg
push
fcoml
hlt
adc
out
test
mov
xchg
cmp
cmp
ja
cmp
lret
mov
jle,pn
rclb
jge
dec
or
add
or
ret
pop
dec
push
out
rcl
in
add
lods
ss
outsl
je
dec
cmpsb
mov
stos
and
clc
test
push
in
mov
sarb
insb
inc
mov
test
jno
push
ret
inc
cmpsb
push
mov
aam
sub
jl
and
mov
repz
aaa
sub
inc
mov
sbb
cmp
idivb
mov
jne
jnp
into
adc
mov
push
test
mov
iret
mov
call
mov
test
dec
pop
iret
lods
pop
js
mov
mov
push
mov
lock
xor
lahf
push
or
or
sub
pushf
and
aad
jb
imul
mov
rcl
scas
jmp
das
cltd
pop
pop
nop
pop
add
pop
pushf
mov
mov
adc
inc
stos
mov
mov
xor
sti
ret
daa
push
sahf
lret
mov
aas
dec
jmp
out
mov
sahf
mov
into
mov
repz
jmp
test
add
mov
jb
jbe
adc
jecxz
out
ds
cmp
push
jg
outsb
add
leave
shrb
adcb
sbb
jbe
pop
xchg
mov
ljmp
dec
andl
add
or
test
mov
xchg
push
mov
sahf
out
cli
imul
adc
testb
fcom
mov
lock
mov
inc
into
loop
mov
pop
lods
int3
in
cli
cmp
outsl
push
mov
loop
into
mul
mov
add
xor
pop
pushf
fadds
or
rcrl
jg
push
cmp
sbb
mov
mov
lret
push
jo
pop
scas
or
jnp
xchg
pop
xchg
jl
test
mov
shll
add
xchg
mov
jle
fwait
pop
or
xchg
sbb
clc
push
icebp
mov
push
jns
xchg
stc
add
inc
ss
xchg
js
jp
fistpl
push
imul
jecxz
arpl
cmp
or
pop
sbb
ds
mov
mov
mov
dec
push
fimull
mov
push
out
pusha
mov
mov
ds
jl
ret
push
pop
push
inc
sarl
dec
jae
cmp
into
enter
ss
int
aam
mov
lods
mov
cwtl
shll
xchg
jmp
inc
sub
pop
push
out
jnp
fisubs
and
xlat
pushf
sbb
and
pop
push
xchg
xchg
aaa
data16
fiaddl
and
inc
or
loop
add
and
dec
pop
inc
xor
sub
mov
mov
jp
adc
jo
lods
or
push
push
cwtl
rorl
stos
dec
pop
sub
xchg
pop
jne
push
mov
in
jo
nop
imul
mov
pop
or
inc
dec
push
add
in
clc
mov
jo
popa
dec
and
sub
adc
inc
jmp
repz
pop
pushf
sti
dec
xor
and
pop
ss
cmp
js
mov
sbb
aad
mov
push
fucomp
rcl
inc
popf
pop
jbe
popl
das
mov
mov
xchg
push
shll
repnz
pop
and
sub
mov
nop
add
fwait
add
inc
out
sbb
dec
in
mov
stos
mov
lcall
loop
push
hlt
in
mov
aas
cs
cmpsl
insb
cmp
and
arpl
cmpl
adc
in
sahf
test
push
pop
dec
jbe
jae
push
push
repnz
daa
js
std
cltd
js
push
sahf
push
fists
out
xor
or
push
push
sbb
gs
pop
pop
and
push
enter
insl
mov
add
call
pop
imul
cmpsb
int3
adc
dec
repnz
lret
sti
stos
xchg
dec
dec
push
test
add
aad
jle
jo
mov
idivb
xchg
test
std
cmp
sbb
sub
imul
xchg
adc
pop
out
jbe
xchg
nop
scas
add
cmp
and
mov
sub
pop
data16
dec
ds
inc
ljmp
mov
push
pop
inc
insb
push
cmp
xchg
cmpb
xor
sub
ja
add
test
push
pop
sub
xor
les
nop
hlt
or
xchg
adc
popf
movsb
rol
ljmp
sbb
pop
xchg
push
sub
mov
and
addr16
shll
in
out
das
inc
pushl
imul
add
jo
pop
stos
mov
neg
inc
xchg
es
cmp
xchg
rcrl
jecxz
ljmp
dec
out
arpl
fcmovnbe
push
outsl
jmp
das
mov
aam
sbb
xlat
mov
xor
js
inc
cmp
pop
mov
fsub
not
add
in
and
dec
fsubs
arpl
and
push
and
leave
repz
add
test
arpl
aas
mov
xor
mov
mov
imul
xchg
fisttpl
and
push
mov
cmp
cs
push
xchg
sub
fstpl
arpl
bound
adc
lea
mov
xor
out
stc
rcl
push
lods
mov
mov
cmp
ret
or
hlt
out
rorl
sub
pop
imul
mov
inc
jecxz
add
and
scas
sbb
stos
or
lret
in
orb
adc
or
nop
jae
xor
add
xor
out
and
dec
or
je
ss
mov
fmul
jg
pop
sub
inc
in
push
cmp
pushf
gs
out
daa
jo
xlat
xchg
call
pop
xchg
sub
sbb
cwtl
xchg
loopne
clc
dec
pop
mov
push
aad
add
jmp
in
xchg
jnp
stc
ss
mov
mov
into
jb
dec
jecxz
jns
adc
and
inc
pop
shlb
xchg
xor
stc
mov
call
lret
aam
mov
cmp
push
jne
sub
adc
adc
lret
negl
mov
jl
push
aas
roll
loop
scas
addr16
lret
mov
xchg
outsl
or
mov
or
push
push
inc
inc
mov
pusha
jns
and
push
outsb
ficompl
ss
iret
cltd
out
mov
or
xchg
leave
lcall
rclb
movsl
and
or
loop
pop
out
cmp
sti
inc
add
push
jae
test
xchg
jns
inc
lea
xchg
shll
fsub
in
adc
pop
cmp
pop
cwtl
lods
movsl
sarb
inc
and
test
mov
mov
jae
xor
sbb
lods
sub
lods
stc
mov
cmp
mov
xchg
ret
jl
inc
mov
ja
pop
xor
jae
pop
adc
int3
sbb
lds
mov
xchg
push
push
xchg
aad
les
js
jg
icebp
push
sub
add
ljmp
call
xchg
rclb
mov
divb
popa
or
push
int3
mov
mov
pushf
aam
in
pop
add
mov
aas
and
adc
mov
adc
outsb
and
cmpb
mov
push
stos
rolb
adc
xchg
int
cmp
push
fisttpl
fdiv
push
mov
into
movsb
ret
stos
test
dec
pop
sti
rol
cld
jb
scas
mov
aam
push
and
lret
sub
ja
cmc
and
call
out
inc
push
pop
lea
or
movsb
or
clc
test
mov
leave
enter
sbb
xchg
rcr
cmp
xchg
imul
mov
sahf
sbb
movsl
push
filds
pop
cwtl
and
repz
add
rolb
ja
xchg
lods
mov
in
cmc
or
mul
loopne
stos
jecxz
xor
cmp
or
jp
pop
scas
shll
jae
test
xchg
ja
repnz
das
pop
mov
push
jne
and
mov
fimull
in
leave
dec
negb
icebp
movl
pop
in
test
out
rol
inc
repnz
rcl
cld
xorb
pop
add
mov
fcmovnb
loope
daa
lock
cmp
fmull
icebp
dec
jb
fwait
repz
inc
std
adc
adc
insl
scas
fmull
insl
in
dec
in
pop
mov
mov
add
add
clc
xor
ficoms
loope
mov
xchg
addr16
pop
daa
add
jbe
fs
xchg
add
pop
mov
add
mov
cmc
lds
xchg
pop
cmpsb
dec
lahf
jne
mov
pop
sbb
mov
sub
dec
mov
sbbb
mov
dec
pop
ja
pop
fildl
mov
shlb
subb
aad
fs
out
lods
enter
mov
jmp
jecxz
int
in
jmp
sub
sahf
in
pop
dec
add
lock
jg
adc
push
jp
out
or
lods
ret
insl
data16
das
lods
or
adc
xchg
jl
lcall
xchg
out
clc
scas
stos
push
sbb
addr16
mov
aaa
arpl
fsubrl
jmp
int3
lret
sbb
lods
push
sub
mov
inc
rcl
pusha
mov
sub
out
add
sbb
shll
imul
ds
andl
in
cld
mov
inc
fadd
jle
test
sahf
pop
pop
lock
enter
int3
out
ret
mov
dec
fs
mov
scas
cltd
sub
pusha
test
pop
mov
mov
lea
push
and
fwait
mov
jmp
add
lds
int
mov
dec
push
outsb
imul
daa
adc
xor
out
xor
in
leave
test
or
push
shr
jge
xchg
xlat
xor
dec
insl
rolb
cmpl
fwait
pop
popf
stos
lret
cs
lock
in
dec
aas
dec
cmp
pop
stc
jno
push
test
push
in
mov
lcall
mov
dec
mov
bnd
out
jl
push
scas
and
mov
adc
aam
arpl
push
sub
fdivs
mov
adc
mov
and
cs
and
fwait
cld
sub
mov
cmp
test
repz
loop
call
push
pop
jp
lret
lret
shll
shr
popf
in
in
add
fs
jl
ss
mov
jmp
sbb
testl
or
repnz
insb
clc
mov
imul
shrb
dec
and
jecxz
xchg
xor
dec
push
xchg
shr
mov
cmc
out
xchg
mov
jno
xchg
dec
sbb
hlt
adc
int
mov
or
mov
fcmovnbe
sbbb
sbb
sub
sub
jne
adc
into
test
cmp
dec
sbb
repz
jp
adc
test
or
pop
out
or
rorb
test
ja
push
es
cld
mov
jmp
sub
mov
aaa
mov
mov
inc
repnz
repz
cmpsb
adc
int
scas
pop
jg
std
test
jnp
das
pop
fst
faddl
adc
in
or
inc
jb
insl
mov
imul
lods
mov
bound
lcall
sti
inc
xchg
mov
fdivr
test
gs
mov
mov
in
dec
fwait
xchg
aaa
scas
aam
sbb
push
mov
je
gs
push
jns
push
in
loop
iret
cmp
jg
and
pop
fcoml
lahf
mov
cmc
jg
fldenv
xor
cmp
jno
add
ds
dec
insb
xchg
clc
adc
pop
mov
mov
pop
xchg
and
jb
pushf
sti
add
mov
cmp
test
xor
cmp
lret
jmp
sbb
or
mov
dec
jo
mov
sahf
cmp
inc
jecxz
and
mov
ds
add
pop
js
xor
movsl
adc
add
cmpsl
je
xchg
rorb
rorl
lods
pop
sti
dec
cltd
cmpsl
adc
sbb
cwtl
jae
outsl
xor
jbe
jno
imul
andl
dec
mov
and
outsb
pop
push
jbe
adc
add
scas
shll
jecxz
jb
inc
sub
sub
ds
imul
mov
fcoml
xor
mov
sub
and
out
sbb
mov
rcr
and
cmp
rcr
outsl
jne
jb
push
and
sub
loop
mov
xchg
mov
or
movsb
data16
arpl
mov
int3
or
test
test
xor
shll
scas
es
mov
push
add
cld
xchg
pop
xor
cmpsl
and
hlt
dec
ror
test
xor
bound
outsl
lock
gs
stos
mov
fcmovnbe
jae
rorl
jmp
mov
idiv
pushf
adc
stc
mov
out
js
xor
fadd
repnz
pop
int3
xor
inc
adc
aam
adc
mov
stos
mov
pop
mov
testb
xchg
mov
popf
adc
ljmp
call
mov
insb
sti
outsb
stc
pushf
xor
mov
jns
int3
notl
mov
cmc
in
lds
mov
ret
xor
or
adc
push
imul
rcl
int3
arpl
rcpps
jns
lea
xor
mov
rcr
adc
sbb
xchg
fidivl
pop
jmp
cmp
bound
cmp
xchg
push
inc
jle
cs
ficompl
dec
dec
out
shl
stc
xor
xlat
cmp
shrb
or
inc
push
cltd
xchg
pop
data16
sub
inc
push
mov
lahf
leave
mov
shlb
xchg
fldl
dec
or
int
push
pop
sbb
mov
fwait
dec
mov
mov
leave
cmpb
rol
xchg
call
cmpsl
cli
es
pop
xchg
jecxz
cmp
pop
fcom
jo
ret
das
or
jge
mov
xchg
js
stos
ret
mov
mov
xorl
mov
and
loopne
xchg
mov
cmp
insb
cli
outsl
nop
jne
in
into
mov
je
add
leave
shl
cmpsb
enter
rcrl
or
aad
outsl
movsb
lea
repz
and
cltd
test
orb
sbb
jnp
xor
push
pop
fcmove
sbb
push
push
mov
in
jg
lods
and
mov
dec
jne
repnz
push
dec
add
out
or
je
iret
nop
adc
push
sbb
cmp
push
out
mov
add
xchg
xor
adc
loop
push
pop
cmpb
out
ss
add
clc
push
stos
es
or
fcomp
shll
out
test
inc
xchg
ljmp
iret
or
leave
fcmovnb
lret
adc
ljmp
imul
pop
fnstenv
mov
cli
inc
enter
and
push
fcom
sbb
iret
add
mov
cmpsl
jmp
popa
lahf
jge
pusha
or
pop
out
xchg
xchg
lret
in
rcrb
gs
sub
inc
movsl
mov
int
xor
in
stos
cwtl
out
inc
pop
popf
int3
dec
sbb
add
int3
jp
nop
inc
xor
xchg
jmp
scas
add
jle
pop
and
add
jl
sahf
xor
cmpsb
jge
shll
push
loopne
xchg
adcl
stc
mov
xchg
cltd
or
mov
aad
movsb
leave
cmp
insl
mov
cmpsl
pop
icebp
into
push
sbb
dec
shll
loope
insb
pop
jle
cwtl
push
test
inc
cmpsl
adc
mov
loop
rcl
je
xor
xchg
mov
sub
fincstp
push
add
int3
dec
loop
dec
out
pop
fs
dec
subb
ret
mov
dec
inc
iret
jle
out
jbe
call
jmp
lahf
cmp
int3
mov
push
dec
notb
xchg
out
push
call
into
test
pop
inc
push
and
or
xor
lds
into
jg
loopne
es
cmc
out
sbb
mov
aad
scas
fisubs
shlb
mov
xor
push
xchg
cmpsb
or
inc
sub
test
out
lea
mov
ljmp
filds
shl
sbb
mov
cltd
bound
shll
jne
dec
incl
int
loop
lahf
ror
cmp
jge
sub
aas
push
movsl
cmp
jbe
clc
into
and
test
xchg
xchg
out
movb
push
cli
mov
xor
pushf
mov
mov
loop
cmpsb
into
jb
imul
xchg
stc
jle
add
push
daa
adc
push
test
fcmovne
jns
jg
sahf
sub
clc
pop
dec
push
aaa
mov
jp
pop
cmp
inc
sbb
int3
popf
loop
leave
mov
pop
out
int
shll
mov
js
aam
sbb
jmp
loopne
inc
push
cmp
paddsw
jae
push
sub
imul
adc
push
in
inc
push
faddl
sahf
xchg
daa
insl
outsb
and
cmp
decb
pop
fistpl
ja
jmp
adc
mov
hlt
and
and
insb
out
imul
fdivrs
sub
mov
mov
jo
aaa
mov
data16
xchg
jle
loop
cli
mov
or
mov
pop
in
push
dec
add
test
clc
jno
mov
das
int
sub
and
cmc
xchg
mov
fcmovne
iret
cmp
push
sub
push
cld
repz
pop
rolb
addr16
sub
fwait
mov
out
xor
pop
lahf
jne
mov
inc
aam
out
imul
mov
adc
or
aam
inc
scas
adc
and
mov
loope
dec
dec
jno
jge
push
fisttps
arpl
cmp
xchg
push
nop
inc
inc
pop
mov
pop
or
cltd
std
push
fistl
in
outsb
div
push
aas
lret
call
push
fists
jp
loopne
fcmove
sti
repz
lds
enter
xchg
adc
roll
les
jbe
and
sbb
aaa
das
fcomip
loop
jne
jbe
iret
into
call
cmp
lods
push
dec
xchg
jmp
xchg
xchg
scas
and
jne
aad
mov
pushl
dec
pusha
sbb
loop
adc
jmp
dec
outsl
mov
sub
jb
pop
jbe
out
mov
ljmp
mov
push
imul
push
mov
incb
mov
push
mov
pop
into
pop
call
movsl
sbb
pop
pushf
mov
cli
scas
fstpt
pminub
and
in
xor
mov
push
add
cmpsb
sbb
int3
and
sti
sbb
inc
push
ja
mov
loope
test
push
pop
and
lods
mov
daa
aam
pop
addr16
flds
ss
dec
ds
and
xchg
jl
cmpsl
adc
adc
sbb
es
stos
mov
cmpsl
out
ljmp
jmp
xor
mov
jge
inc
in
dec
jae
adc
push
fst
jecxz
scas
or
pop
ja
fimuls
orl
loop
pop
mov
dec
inc
xor
pop
sub
leave
mov
data16
cmp
xor
gs
fst
jbe
pop
mov
and
or
sub
mov
nop
jno
jmp
pop
lds
fst
mov
int3
pop
mov
fwait
pop
js
in
or
mov
ficoml
xchg
lods
out
test
mov
popf
jno
je
inc
repz
jge
enter
push
and
push
and
jg
mov
or
push
inc
js
out
aaa
loope
jb
out
int
cmp
cltd
push
movsb
stos
sbb
cmp
push
cmpsl
not
cmp
xorl
xchg
adc
push
jg
das
lret
jge
outsb
pop
mov
push
xchg
out
pushf
ficompl
dec
movsb
fdivl
inc
mov
popa
sub
inc
faddl
bound
jg
sbb
push
nop
das
xor
pcmpeqd
mov
cmc
adc
je
xor
repz
adc
hlt
sbb
ljmp
ja
mov
xor
cltd
test
hlt
data16
mov
push
mov
ret
repz
test
dec
xor
lds
into
outsl
inc
add
push
jbe
mov
cltd
insl
not
or
in
jge
and
mov
push
mov
xchg
andl
cmpsl
call
cmp
sti
mov
push
mov
cs
cmpsb
test
jl
xchg
adc
pop
push
shll
and
data16
clc
mov
popa
sbb
adc
inc
sbb
add
push
and
ret
xchg
shll
aam
xor
and
aaa
sti
mov
xchg
cmp
mov
and
push
xor
aad
push
inc
mov
jbe
sbb
cltd
or
add
sbb
repz
test
cmp
sahf
push
adc
mov
ffree
pop
js
out
mov
xchg
mov
cmp
cld
sbb
xor
fwait
add
adc
lods
leave
jecxz
jl
loopne
mov
sbb
xor
in
rolb
test
cmp
jbe
mov
out
mov
pop
push
and
dec
push
mov
mov
xchg
add
bound
push
add
xchg
mov
call
and
mov
lock
out
mov
mov
ret
push
cltd
dec
adc
xchg
loopne
cmp
out
lods
in
loop
dec
push
andl
mull
or
add
push
xchg
adc
pop
fsts
mov
test
sbb
nop
add
add
into
scas
lret
mov
and
leave
std
xor
sti
or
mov
push
adcl
sahf
xchg
hlt
jbe
cmpsb
pop
or
dec
mov
push
add
cwtl
int3
mov
xor
mov
in
add
inc
mov
sub
sub
into
fisubs
aaa
mov
push
push
xorb
sbb
cs
dec
ds
mov
mov
aaa
mov
mov
push
out
push
pusha
ret
stos
lods
or
lahf
mov
xchg
mov
push
sub
fists
inc
popa
add
ja
push
jne
test
push
das
sarb
push
xchg
rclb
mov
sub
xchg
in
jmp
ret
mov
add
push
stos
mov
lret
xchg
push
pop
lret
insl
push
xchg
cwtl
mov
mov
jns
dec
xchg
or
lock
cli
in
cmp
fwait
jae
push
mov
mov
push
mov
pop
xor
cmc
mov
ja
ds
mov
int
jae
mov
push
fcmovb
push
sbb
add
hlt
outsl
imulb
dec
mov
rclb
add
mov
mov
jne
jno
sbb
cmpl
push
das
ljmp
mov
inc
bound
arpl
pmullw
orl
jbe
jnp
inc
and
sbb
mov
into
pop
faddl
mov
out
sbb
int3
cmpsb
inc
jae
pushf
push
fbstp
in
test
xlat
cwtl
pop
jmp
leave
movsl
sub
sbb
ljmp
int3
jmp
data16
or
divl
push
jp
into
mov
cld
and
add
sbb
jb
sbb
bnd
stos
xchg
inc
gs
cmc
push
xor
sub
in
lret
sbb
sbb
test
push
dec
cmp
loop
sbb
inc
int
dec
das
jno
fistl
pop
lahf
dec
insl
dec
dec
pop
test
gs
push
xor
lret
add
add
dec
ss
data16
and
jp
pop
test
ficoml
dec
mov
jge
mov
jb
aas
or
cwtl
or
mov
push
fucomp
int3
xlat
pop
jns
imul
push
xor
mov
or
ss
test
push
sbb
aam
cmp
lods
jo
js
push
outsl
shlb
dec
cmp
jno
inc
adc
cwtl
jns
cmc
out
jg
sub
int3
or
rorb
pop
imul
lock
mov
ljmp
adc
or
or
lret
inc
xchg
mov
loopne
mov
loop
cmp
out
xchg
das
mov
adc
pop
shrb
aas
or
dec
test
subl
mov
enter
movsl
lahf
dec
sub
add
lret
sahf
into
jbe
rcll
xor
inc
aas
pop
cs
inc
cwtl
sbb
repz
aaa
arpl
enter
xchg
pusha
pop
cs
mov
iret
popl
xchg
popf
lds
jmp
out
pop
sbb
jge
aam
mov
inc
or
sbb
cmp
jne
into
jg
sub
in
lcall
xlat
icebp
insl
pop
int
jne
rcr
cltd
adc
jnp
sub
sbb
jmp
xor
jb
pop
fsubrs
into
xchg
and
jg,pt
xor
and
cmp
je
cmpsb
adc
popl
lret
dec
adc
xlat
lret
push
out
lods
int
out
hlt
std
adc
mov
sbb
xchg
or
add
loop
inc
scas
cmp
mov
test
mov
addr16
xor
pushf
xchg
or
aam
mov
rorl
mov
mov
cli
int3
mov
xor
sub
cmp
in
jbe
fmul
aam
lds
add
push
cli
push
mov
add
pop
mov
scas
lds
jnp
lahf
jmp
das
rclb
jns
loopne
push
push
sub
scas
test
cmp
dec
popa
sub
sbb
mov
sar
jge
xlat
cmc
notb
arpl
popf
adc
xor
lret
jg
rcll
dec
and
mov
pop
xor
cmp
stos
rcl
imul
data16
mov
mov
mov
in
mov
xchg
fcom
xchg
mull
push
xchg
call
mov
jp
push
and
cmp
mov
xor
into
sub
mov
sbb
ffreep
jns
enter
stc
movsb
repz
iret
mov
inc
mov
ret
sbb
sub
xchg
mov
jbe
pop
pop
dec
mov
add
jbe
ljmpw
fxch
fiadds
shrb
loopne
sbb
ret
pop
inc
daa
lods
cmpsb
xor
gs
arpl
dec
fldl
out
aaa
adc
data16
ret
rcl
insb
add
cmpsl
pop
xchg
inc
loop
bound
into
dec
data16
mov
jno
lds
push
jl
mov
add
xchg
das
out
fsts
icebp
outsb
ja
xor
pop
mov
sbb
xchg
inc
inc
or
and
push
stc
lret
adc
dec
xchg
fstl
hlt
popf
rclb
jge
push
cwtl
xor
arpl
out
xor
xchg
inc
arpl
jae
xor
fstl
dec
cmc
cmc
test
not
add
xchg
jno
ja
mov
cwtl
test
inc
fimuls
mov
lcall
adc
daa
sbb
pop
adc
out
jmp
mov
testl
sahf
dec
mov
shl
mov
mov
shrb
or
jb
jp
mov
mov
inc
in
daa
xor
imul
add
mov
xchg
adc
jmp
push
imul
inc
mov
data16
dec
rcrl
push
and
scas
iret
jmp
addl
stos
jg
repnz
mov
vpaddusw
jecxz
adc
out
mov
cmpsl
jmp
xchg
xor
lret
inc
pop
xchg
js
cmp
jle
push
call
sub
leave
jge
jnp
ja
ds
push
lods
mov
jmp
insl
sbb
push
aad
aas
cmp
in
add
cmp
or
movb
orb
sbb
cli
je
adc
mov
jnp
pop
movsl
in
cs
out
leave
in
push
arpl
repnz
sub
in
fbld
and
into
jbe
and
test
shll
adc
jne
cmpsb
cld
insb
pushf
out
pop
add
hlt
sub
int
push
sbb
js
jae
xchg
xor
aam
cmp
inc
cpuid
out
adc
test
sarl
cwtl
or
sbb
xlat
push
stc
dec
incl
data16
jo
out
sbb
mov
cmp
mov
lret
jnp
data16
xor
pushl
push
mov
loopne
cmp
imul
mov
fisubs
cld
loop
es
test
xchg
lret
add
outsl
lods
cli
subl
pop
dec
mov
iret
aaa
fsub
dec
outsl
add
pop
sbb
and
xchg
xchg
inc
jns
dec
inc
jmp
out
outsl
popf
insl
jg
push
in
fmuls
fcmovnbe
and
lock
mov
pop
bound
jbe
push
inc
rcrl
imul
jo
mov
mov
shr
cmp
out
movsl
mov
xchg
add
mov
push
loopne
adc
fwait
mov
mov
adc
rcl
adc
sbb
and
test
addr16
sub
mov
enter
mov
sarl
leave
sbb
cmc
push
xchg
movsl
sbb
repz
push
jb
mov
cmp
testl
pop
push
push
or
sub
inc
jle
sbb
int3
ljmp
sub
movhps
in
and
movsl
pop
xchg
adc
fucomip
and
pusha
test
xor
and
jmp
iret
outsl
lahf
das
mov
cltd
mov
adc
arpl
bound
and
testl
or
imul
sbb
int3
add
mov
imul
aas
inc
icebp
mov
stos
dec
mov
jno
adc
jmp
lret
addr16
jecxz
cmp
mov
test
sahf
pop
movsb
sbb
push
scas
push
and
insl
lret
mov
cmp
add
push
pop
cmp
out
adc
cmpsb
adc
jb
jg
jno
mov
jno
rolb
std
jmp
dec
jp
sahf
orb
jge
fadd
iret
xor
int3
mov
adc
mov
insb
enter
xchg
sbb
aas
sub
sbb
xor
mov
lret
and
test
cmp
repz
imul
movsl
addr16
in
rorl
shr
adc
dec
push
ds
adcb
and
add
or
sbb
xchg
jb
xor
addr16
xchg
mov
mov
mov
aam
push
jp
movsl
sub
push
lods
outsb
mov
inc
jno
je
aam
mov
and
add
outsl
bound
int
add
in
mov
sub
out
gs
js
pop
cmpsb
pushf
int
test
add
fcmovb
sub
stc
cwtl
lret
push
outsb
cmp
jb
ljmp
mov
into
mov
mov
mov
mov
fisttpl
mov
sbb
dec
jnp
loopne
out
hlt
inc
inc
push
and
into
adc
dec
pop
pusha
ror
out
fdivrs
stos
pop
push
in
mov
sarb
dec
mov
mov
lret
pop
stos
jmp
or
loop
and
inc
fdivrl
sub
movsl
or
xor
jo
imul
aad
adc
lret
push
and
add
je
jmp
pop
mov
arpl
imul
movsb
xchg
sub
sarb
clc
pop
das
cltd
jne
xchg
out
lahf
push
xchg
loopne
mov
xchg
fsubrs
xor
scas
insb
sub
jmp
xor
pop
push
xlat
mov
stc
cs
add
out
xlat
es
fmul
into
fiadds
or
mov
inc
rorl
out
roll
leave
mov
sti
adc
and
in
push
pop
sub
jns
xchg
mov
mov
insl
jo
xor
mov
fcomps
outsl
fs
cmp
insb
rorb
dec
xchg
int3
scas
inc
adc
xchg
push
push
test
ljmp
xchg
lods
xor
in
mov
imul
cmpsb
aad
inc
push
push
imul
enter
sbb
push
push
xchg
pop
shll
in
mov
sbb
es
or
stos
inc
cs
push
loope
repz
xchg
fcmovbe
inc
mov
lds
and
push
xor
clc
in
mov
jl
movb
pop
sub
repnz
fistpl
gs
mov
pop
fs
adc
ljmp
aad
xchg
lahf
cmp
push
leave
das
pop
dec
jg
stc
mov
inc
or
js
cmp
and
add
fcompl
insb
addl
sbb
addb
push
sub
ret
xlat
sub
dec
mov
inc
jl
push
pusha
loopne
push
jns
sbb
mov
outsb
cmp
cld
popl
lcall
and
mov
add
int3
xor
ret
sbb
pushf
or
iret
jmp
imul
mov
lcall
xor
cmp
dec
imull
and
pop
dec
add
sti
into
cmp
rcrb
mov
cmpl
ret
pop
arpl
push
sub
outsl
jae
cmp
mov
inc
xchg
sbb
mov
push
push
pop
imul
xor
dec
xlat
mov
jge
popf
test
dec
cmp
arpl
loop
jle
mov
push
mov
push
sahf
movsl
dec
vprotd
into
xchg
pop
jp
sbb
jae
inc
outsb
fcmovne
in
pusha
xchg
jmp
lea
into
sub
ret
pop
push
pop
fistpll
add
das
sbb
mov
loop
loope
dec
dec
jbe
dec
mulb
imul
push
sbb
mov
iret
into
mov
dec
xor
aam
clc
mov
pop
jno
into
dec
cmp
adc
sub
iret
mov
adc
push
int
xchg
fldenv
das
rcrb
test
popa
pop
cli
loopne
add
inc
cld
test
mov
dec
lods
movl
jo
fadds
mov
aaa
jg
imul
jecxz
fsubr
cmp
mov
mov
xchg
sahf
clc
icebp
jbe
push
mov
mov
adc
enter
jle
mov
mov
sub
push
push
mov
aaa
mov
lods
mov
dec
fcoml
test
and
into
and
lods
lds
sti
inc
not
frstor
out
pop
lret
mov
jmp
xor
push
mov
stc
pop
movsb
pop
arpl
test
repz
xchg
rclb
xchg
in
jo
in
jle
imul
out
mov
int3
mov
int
mov
push
add
jp
test
dec
sbb
aam
outsb
and
jg
cwtl
xchg
pop
cmp
add
repz
ds
jle
mov
or
cmp
aam
pop
or
pushl
pop
in
xchg
mov
mov
popf
push
adc
dec
sub
inc
jge
xchg
and
pushf
shll
jbe
pop
push
int3
dec
inc
mov
insb
push
mov
cmp
mov
call
xchg
in
aam
ret
sbb
out
ljmp
or
adc
jg
mov
mov
loope
cmp
sarb
jnp
pop
push
scas
ret
ficompl
push
sti
in
int
lds
or
pop
addr16
push
mov
inc
mov
pop
or
push
adc
and
and
adc
nop
sbb
push
mov
xor
into
mov
xor
pop
aam
push
sub
insl
push
sar
into
cwtl
or
or
and
cmpps
or
repnz
adc
or
int3
cltd
test
sti
mov
dec
fwait
and
into
test
fisttpll
or
sarb
jns
mov
mov
not
adc
rorl
xchg
idivb
lahf
popa
aaa
stos
in
push
pop
mov
clc
mov
pop
sbb
jns
inc
cli
push
mov
cmp
sub
cmpsl
in
adc
loopne
pop
incb
xor
leave
mov
push
std
and
popf
insb
pop
inc
mov
pushf
ss
into
xor
xchg
xchg
mov
mov
cwtl
push
or
aaa
pop
pop
mov
fstpl
les
dec
cmpsb
adc
mov
nop
xchg
iret
sub
orl
imul
test
xchg
arpl
mov
mov
enter
scas
orl
sbb
or
dec
lea
mov
mov
cmp
xchg
pop
sbb
push
mov
mov
fnstcw
xchg
cmpsl
ror
jp
adcb
lret
mov
fucom
mov
pop
loope
xlat
push
xchg
mov
ret
push
push
sub
out
add
add
xlat
leave
imul
scas
int3
in
shrb
popf
pop
and
lock
jb
mov
add
test
mov
jge
lahf
aas
cmp
lods
jae
mov
cwtl
shrl
mov
sub
adc
adc
lock
and
inc
inc
push
xchg
mov
push
enter
int3
hlt
sub
out
fcomps
push
cmp
fwait
imul
mov
pop
ljmp
push
mov
push
cld
es
push
xor
pop
fisttpl
dec
in
push
sub
add
mov
dec
ja
jno
pop
sbb
fdivrp
push
mov
fcomps
stos
es
jnp
int3
enter
popf
cmp
test
push
int3
or
aad
jne
test
loop
outsl
aad
mov
add
dec
sub
ss
lret
inc
fwait
hlt
inc
dec
jbe
in
clc
mov
xchg
cld
cltd
jg
addr16
push
add
and
mov
sbbl
adc
jae
sub
ds
lock
jb
cli
js
jne
test
mov
cmc
popa
movsb
lds
bsf
repz
mov
icebp
xchg
adc
lock
push
scas
mov
mov
mov
arpl
add
or
divl
push
aas
sbb
addr16
lret
mov
sub
jl
xor
sub
xor
popl
lods
xchg
push
mov
push
in
pop
xchg
lret
add
loopne
push
mov
dec
push
xchg
rolb
fisttpl
out
les
jecxz
ror
data16
xchg
add
mov
xchg
in
in
jne
and
jge
mov
std
andl
mov
or
mov
jns
cmp
xor
pop
push
lods
push
mov
xor
mov
stos
shrb
push
inc
std
cmpsl
sub
pop
sbb
frstor
push
dec
add
xor
adc
iret
fsubr
or
sbb
cmpsl
fxch
test
jmp
lret
inc
insl
scas
mov
ja
sub
mov
stos
leave
int
rorb
xor
mov
inc
aad
inc
dec
ret
test
aas
adc
dec
sahf
out
enter
inc
jmp
mov
dec
xchg
push
cmp
and
inc
roll
jge
es
lds
js
jbe
adc
insl
xchg
rol
cwtl
inc
push
xor
ljmp
jns
cli
sbb
add
add
das
lret
xor
pushf
dec
push
push
xrelease
icebp
inc
push
xor
aaa
inc
fisubrs
aas
test
aam
cmpsl
fs
jle
sarb
int
or
push
mov
or
lea
jne
mov
dec
outsl
mov
inc
aam
or
jl
insb
jge
mov
mov
jb
pop
int
xchg
mov
inc
inc
mov
stc
lock
test
cmpsl
and
inc
ja
inc
rcl
or
jae
add
jge
push
jnp
push
movsb
int3
outsl
imul
imul
sbb
leave
cmc
js
mov
jne
mov
lock
mov
lret
and
or
imul
xchg
adc
mov
add
das
je
jae
cmp
xor
adc
movsl
enter
ret
or
unpcklps
jns
jg
imulb
and
sbb
imul
pop
not
cli
rcl
mov
jecxz
jle
repz
mov
scas
xor
sub
cmc
push
insl
push
push
mov
mov
fcomip
into
mov
dec
mov
repz
xor
pusha
cmp
mov
dec
jno
dec
xchg
scas
lret
jne
pop
repz
sbb
and
jae
pusha
insl
scas
jge
loopne
ss
xchg
fcmovb
fists
dec
pop
xchg
aam
lock
call
jecxz
cli
std
pop
xchg
mov
push
fisttpll
into
mov
ret
add
loop
xor
fistps
adc
in
lea
lcall
inc
out
and
lea
in
mov
dec
cmc
mov
frndint
jns
push
sub
cmp
dec
mov
pop
push
pop
mov
xor
pop
lods
mov
sub
or
inc
pop
add
cmc
int3
and
inc
movsl
xor
xor
xchg
ja
jns
mov
sahf
cmp
ja
loopne
jb
scas
xor
cmp
sub
push
into
lods
cmpsl
xchg
lahf
pop
dec
test
dec
cltd
lock
ror
xchg
xchg
pop
xchg
iret
pusha
out
push
jp
in
imul
jbe
inc
loope
out
psllw
cmc
scas
push
repz
hlt
cli
xlat
xchg
pop
ds
dec
lcall
inc
loope
stos
shlb
xchg
in
cs
add
push
out
sbb
cmpsl
icebp
dec
pop
jg
and
cmp
and
xchg
in
dec
in
lahf
shlb
sbb
mov
lea
mov
enter
dec
test
push
mov
jmp
idivl
pusha
fists
cmpsl
mov
dec
in
fs
mov
adc
mov
xchg
push
sbb
outsl
rolb
dec
xor
mov
into
lret
jae
or
aaa
js
std
pop
push
cmpb
jo
adc
dec
dec
rorl
ret
insl
fwait
imul
lret
add
mov
out
push
add
mov
push
mov
lahf
ljmp
add
out
push
push
lret
pop
insb
stos
dec
xchg
loop
je
cmp
push
adc
inc
mov
jae
sbb
rclb
scas
xchg
jns
inc
inc
shlb
roll
or
sbbl
and
in
xor
jle
inc
out
rorl
mov
dec
or
dec
xchg
push
lds
jl
into
jmp
xor
mov
dec
mov
out
shr
dec
imul
sub
int3
or
mov
outsb
insl
jl
or
xlat
sbb
mov
dec
xchg
mov
inc
fwait
rcr
jns
adc
xchg
inc
dec
test
lret
push
ret
jge
dec
push
inc
mov
jae
daa
shll
fsubrs
adc
push
push
aas
lea
mov
into
mov
nop
popf
mov
scas
ljmp
movsl
xchg
mov
xchg
sbb
in
mov
or
div
push
inc
push
adc
jmp
pusha
adc
frstor
leave
or
fs
jp
inc
adc
add
fildll
pushf
ret
loop
mov
dec
push
xchg
xchg
jne
sub
mov
jbe
xor
sub
mov
lods
imul
gs
into
sub
lods
or
jle
sahf
xchg
jge
mov
mov
add
pop
xchg
or
bnd
jo
mov
aam
sahf
cmp
sarb
iret
cmc
fmull
enter
and
jecxz
out
xor
dec
popa
pop
imul
testl
xor
loopne
sbb
pop
clc
cmp
jp
mov
aam
or
aaa
int
in
mov
adc
test
push
rolb
cld
add
mov
mov
jg
stos
mov
push
jb
adc
stos
out
cmp
and
dec
pop
std
mov
icebp
and
fisttpl
lahf
hlt
ljmp
sbb
cmp
adc
mov
js
cli
fadd
lcall
call
mov
mov
out
inc
adc
cmp
rorb
imul
or
fldenv
push
fists
add
push
jg
loope
jns
in
je
mov
push
or
and
push
sahf
ror
ss
or
mov
test
push
out
insb
inc
testl
lret
les
mov
bound
scas
imul
xchg
push
aam
fsubs
sbb
xchg
sbb
lods
lcall
jns
sbb
jae
push
ljmp
jmp
in
and
mov
out
sbb
nop
xchg
iret
int3
mov
sub
into
movsl
mov
cmp
arpl
jns
in
aas
nop
fnstcw
movsb
cs
ret
xchg
jl
leave
scas
and
cmp
jmp
arpl
fcmovnb
sbb
data16
inc
add
cmpsl
jnp
fmul
test
cmp
ficoml
dec
cwtl
sub
and
push
and
dec
rorl
scas
sti
cmp
cmp
mov
data16
pop
test
mov
int3
jb
jg
jle
mov
outsl
dec
mov
sub
adc
js
imul
push
shll
jo
cli
mov
cmp
sub
dec
jge
inc
imul
rcr
subl
dec
adc
push
shl
out
pop
fadds
inc
ret
mov
fs
sbb
aam
clc
pop
xor
jae
mov
pop
lcall
sbb
test
or
jmp
and
popa
xchg
add
mov
pop
adc
aad
push
imul
rorb
rolb
mov
add
push
jbe
mov
sub
orb
adc
dec
xchg
and
int3
lock
rdmsr
dec
fcmovbe
movl
fisttps
jno
push
inc
out
push
mov
mov
xor
stos
hlt
xor
test
stos
sbb
out
jb
mov
dec
ret
xor
lds
insl
mov
and
and
inc
push
out
nop
call
or
xor
ss
jo
aam
fcmovnbe
ds
jp
jne
xor
js
shll
xor
loop
sbb
lock
pop
xchg
jl
subb
jecxz
negl
dec
mov
inc
mov
aad
cli
xchg
shr
mov
scas
aam
adc
mov
xchg
mov
je
call
lahf
aas
xor
pop
push
out
in
ficoms
das
push
sbb
fsubr
sbb
push
scas
push
lret
test
gs
outsl
mov
adc
push
jb
xor
popa
or
mov
sti
mov
ret
lret
xlat
hlt
std
or
shlb
and
push
sub
rorb
push
insb
xor
jmp
fwait
arpl
mov
sub
mov
or
lret
sub
dec
lea
in
addr16
out
ret
outsl
stos
sbb
xchg
es
mov
mov
push
jmp
jno
cs
jp
mov
xchg
mov
fisubrl
shl
daa
adc
mov
xchg
outsl
leave
sarb
xor
mov
xor
sbb
xchg
js
std
cwtl
test
fstpt
xchg
or
das
mov
push
add
cmc
dec
in
hlt
jmp
adc
fisubrs
lods
xor
xchg
dec
add
imul
lahf
clc
lret
pop
int3
sarl
jecxz
stos
xchg
cmpsb
xor
xchg
push
adc
mov
in
mov
ret
or
cli
int
mov
mov
outsb
cmp
into
repz
mulb
decb
movsl
insl
loope
out
mov
sub
cmp
lcall
xor
xchg
ret
cltd
lcall
imul
leave
cmp
add
add
push
aam
xchg
aam
jo
cmp
push
inc
xor
fcoml
xor
loope
gs
pop
jb
push
movsl
decb
mov
adc
push
daa
xchg
popf
fcmovne
sbb
adc
adc
push
mov
cmc
mov
mov
mov
mov
xchg
xchg
cli
stc
or
mov
adc
andb
mov
pop
xor
icebp
or
daa
and
in
packssdw
stc
cmpsl
and
pop
repnz
sbb
push
xor
add
push
loope
enter
lret
or
lock
inc
xchg
push
mov
into
pop
cmp
push
iret
mov
imul
out
xorb
mov
xor
jnp
dec
loopne
xchg
pop
jns
pop
add
int
aaa
and
in
lahf
jbe
add
das
mov
xchg
jecxz
or
push
sub
xor
data16
fbstp
in
notb
int3
insb
retw
mov
xor
or
call
mul
sbb
sub
mov
mov
adc
sub
inc
and
fst
mov
or
and
push
fmull
popf
adc
xchg
mov
sub
clc
add
js
jnp
push
int3
mov
nop
sbb
or
sbb
jbe
xor
out
into
mov
xchg
movsb
push
mov
jne
aas
data16
sbb
js
sbb
je
inc
jnp
xchg
or
cmc
rcrl
shlb
xor
lret
jle
pushf
aaa
dec
xor
outsl
add
mov
lods
inc
push
push
cmc
adc
lods
xor
fcmovbe
push
jmp
push
iret
cmc
cwtl
mov
mov
xorb
add
jae
data16
mov
xchg
mov
into
int3
adc
pop
filds
xchg
mov
out
in
xchg
jmp
xchg
or
inc
inc
or
dec
inc
into
cmp
add
mov
and
fists
shll
xchg
push
ja
and
mov
stos
iret
mov
jno
aad
lahf
subl
mov
sbb
inc
rcl
xor
lahf
movsb
adc
adc
icebp
pop
std
out
adc
dec
xlat
mov
add
jns
push
mov
push
inc
sahf
jae
push
dec
or
jg
fisttpll
adc
xlat
or
push
adc
ror
jo
movsl
push
sbb
xor
sub
imul
xor
dec
test
dec
inc
dec
or
aas
mov
push
inc
dec
loop
mov
cmpsl
mov
sub
lds
sbb
jp
iret
enter
inc
test
push
or
add
sub
add
inc
gs
push
in
xchg
cmc
ror
push
std
lcall
dec
fdivs
mov
int
adc
mov
xchg
lods
push
push
pop
adc
addr16
insb
cmp
jo
push
mov
std
aam
cmp
inc
inc
mov
cmc
push
sbb
fwait
or
push
cmp
push
aaa
outsl
out
jecxz
incl
cli
leave
add
cwtl
ja
popf
mov
xchg
ljmp
lret
loope
orl
jae
sti
or
inc
int3
xor
mov
pushf
in
aam
icebp
mov
adc
adc
add
dec
lds
and
jmp
je
sbb
lods
pusha
out
mov
lods
jne
push
data16
or
pop
cs
jne
loop
cmp
int3
psraw
jb
ljmp
xchg
lret
cmp
dec
js
rolb
mov
lahf
imul
sti
movsl
jge
and
xchg
inc
mov
add
sub
cmp
shll
dec
and
stc
adc
shlb
inc
inc
enter
sbb
jnp
frndint
test
int3
imul
sub
sbb
iret
lock
clc
adc
and
mov
or
lea
push
or
arpl
inc
pop
pop
aad
out
mov
fcmovbe
pushf
pop
imul
add
cmp
mov
sbb
cmpsl
mov
adc
pusha
leave
push
das
in
and
out
in
lcall
aad
mov
rorl
or
adcb
mov
out
or
xchg
imul
mov
test
cmpsb
sbb
rcll
mov
and
add
daa
xchg
sub
lcall
gs
in
mov
filds
in
imul
pop
outsl
sub
stos
mov
ss
jne
mov
push
daa
mov
jg
adc
pop
lods
in
sbb
adc
movsb
xchg
cs
mov
mov
insl
stos
mov
rclb
xor
fisttpl
mov
in
adc
fsubl
xchg
jno
hlt
je
scas
inc
das
add
sub
jp
aas
pop
jne
fsubrl
pop
xor
test
inc
xor
gs
subl
cmp
fs
pusha
pop
out
pop
cmpsl
iret
mov
in
adc
rorl
pop
data16
jp
mov
fnstsw
push
xor
rorb
cli
push
orl
xlat
pop
gs
and
inc
pushf
mov
push
sub
xor
shrb
lods
jbe
jns
int3
rclb
out
test
sbb
in
cmp
push
xor
es
dec
adc
jp
mov
jno
add
icebp
lds
mov
into
adc
jg
add
cld
loopne
and
cmp
add
jle
das
jge
cmp
xor
push
mov
cmp
shlb
mov
sbbb
rolb
and
adc
jbe
cmp
out
jmp
sbb
mov
test
stos
mov
jmp
out
jo
cli
or
stos
cmp
or
out
sbb
mov
ret
movsb
pop
jbe
call
arpl
clc
aaa
mov
jne
ljmp
and
jg
out
rcr
mov
jbe
add
test
lea
pop
sub
dec
shlb
cli
sub
jl
or
sub
pmovmskb
cmpsb
or
movsb
popa
xchg
xchg
mov
enter
and
lret
jle
xor
pop
rorb
into
jp
imul
call
xchg
pop
xchg
in
ret
into
and
cmp
push
push
out
sub
mov
int
xchg
test
inc
rcll
repz
in
sbb
fdivl
xchg
cmpsb
sahf
adc
rorl
int
pop
cmpsl
cmpps
cltd
je
xor
pop
out
sbbl
jb
xlat
mov
add
inc
jne
push
push
mov
scas
pop
mov
xchg
mov
mov
scas
sbb
or
jo
out
sub
sbb
inc
dec
popf
sahf
lret
and
ror
adc
pushl
ret
adc
xchg
aam
pop
mov
test
push
test
mov
mov
xor
lds
cmp
or
gs
cltd
jnp
data16
adc
add
insl
sbb
sbb
add
arpl
dec
pop
pop
popf
loopne
aaa
flds
cli
sub
sarl
lock
loopne
sub
int
je
into
cmovb
cmp
int3
inc
ss
adc
outsb
f2xm1
mov
push
push
sarb
dec
push
in
mov
xor
insl
testl
in
add
xchg
or
cmp
ljmp
dec
adc
lods
icebp
fsub
sub
cmc
nop
mov
push
xlat
test
xchg
call
mov
mov
stc
fwait
dec
mov
inc
xor
aam
rolb
push
inc
xchg
xchg
test
subl
icebp
xchg
and
inc
mov
aas
daa
loopne
fst
pusha
and
js
push
xchg
xchg
nop
pushf
loope
or
sbb
fbld
rep
aad
mov
arpl
sti
in
cmp
aaa
jns
into
stos
out
icebp
cmp
adc
into
cmp
into
xchg
jne,pt
pushf
add
sbb
pusha
aaa
scas
push
adc
adc
lods
jo
sbb
lret
push
add
adc
sbb
pop
cld
lahf
sub
push
mov
adc
js
mov
inc
mov
add
shrb
dec
imul
arpl
mov
and
xchg
and
or
in
pushf
jl
fs
nop
fbld
and
xchg
xchg
adc
add
imul
setb
in
int
jp
mov
xchg
xchg
xchg
sahf
xchg
fwait
lahf
mov
adc
cltd
icebp
push
movsb
xchg
jne
ror
jnp
movsl
pop
pushf
data16
jbe
dec
test
mov
lret
sub
sbb
fcomps
xchg
bound
aad
xlat
out
or
in
push
aam
cltd
lret
mov
clc
inc
jg
push
push
pusha
pop
dec
loopne
inc
push
sub
xchg
xlat
or
add
ficoml
cli
movsl
ss
add
out
in
mov
push
out
insb
cli
jg
xorl
dec
cmpsb
call
cld
sbb
sub
push
adc
icebp
adc
movsl
mov
xorb
ret
or
dec
ds
icebp
jbe
jge
xor
add
xchg
mov
je
dec
int3
jmp
pushf
cld
ret
leave
enter
scas
jge
adc
movsl
stc
ficomps
push
mov
and
adc
es
jmp
popa
xlat
or
hlt
pop
repz
lock
in
inc
lods
mov
xlat
jnp
mov
add
imul
sbb
adc
adc
js
xchg
stos
or
cwtl
mov
les
popf
lods
cmp
xchg
inc
mov
es
jae
push
or
iret
scas
sub
xor
jmp
sub
mov
adc
dec
sub
nop
jmp
mov
call
test
add
add
aas
popa
jp
adc
and
xchg
jg
sbb
stos
fcoml
gs
mov
or
call
sbb
out
data16
or
xor
mov
int
int3
jns
xor
mov
dec
icebp
lret
test
jp
in
rorl
stc
cmc
mov
in
sub
xor
dec
xlat
fistpl
jecxz
not
rcll
sub
sbbl
mov
stc
insl
push
mov
jb
xlat
ss
inc
notl
mov
or
mov
dec
rorl
xlat
pop
mov
lahf
jbe
int3
icebp
aas
cmpsl
mov
sub
cmp
out
lret
jp
push
lods
cmpsl
ret
cmpsl
addr16
and
rcll
mov
stc
add
fwait
insb
ret
or
lods
dec
cmp
xor
sbb
mov
in
pop
mov
mov
xor
fsubl
insl
dec
adc
adc
loop
adcl
out
je
movsl
lcall
inc
dec
push
push
int
out
adc
xchg
sub
or
mov
shll
lock
sbb
inc
out
int3
shll
jbe
in
movsb
or
xchg
mov
add
push
xchg
push
inc
xchg
dec
sarl
adc
mov
sbb
push
clc
in
mov
call
mov
pop
pop
and
pop
or
rorl
lcall
add
js
push
sahf
sbb
mov
xchg
repnz
lock
jmp
jp
in
mov
push
sub
jl
or
ja
loop
dec
fcompl
leave
add
mov
movsl
mov
fsubrs
and
rcll
ja
jno
mov
sub
xchg
leave
test
cmp
pushf
outsb
shll
insb
dec
test
cwtl
jb
out
popf
cmpsb
push
insl
push
inc
jg
in
mov
sbb
and
jo
mov
xchg
jne
sar
pop
pop
pop
dec
leave
push
dec
popf
and
sbb
cs
shrl
or
lahf
cmpsb
mov
in
repz
mov
pop
popa
push
ficompl
push
xor
xchg
cmpsl
leave
ljmp
cmp
fs
out
insl
push
jbe
cmp
mov
xchg
xchg
loope
idivb
data16
jge
out
das
xor
insb
insl
xchg
and
xor
outsl
pop
push
xchg
mov
add
mov
fcmovne
mov
in
lcall
lock
pushf
and
lods
out
dec
loop
int
ret
pop
out
pop
xchg
ss
out
mov
mov
hlt
lret
and
rcrl
shr
pmaxsw
data16
jae
dec
cltd
cmp
xor
lea
leave
fidivs
pop
adc
xchg
or
inc
adc
arpl
dec
mov
push
insl
ret
mov
xor
push
adcl
mov
ja
or
cmp
test
lock
push
rclb
mov
xchg
jbe
xchg
les
pop
inc
mov
cs
jo
and
mov
iret
jp
into
adc
pop
sbb
sbb
xchg
jnp
and
mov
std
pop
mov
sub
test
xchg
cli
xlat
cmp
in
mov
repz
xor
test
inc
int3
mov
pop
clc
jno
into
fcmovbe
lret
imul
pop
imul
sbb
push
fsubs
int
cmp
jmp
mov
aaa
push
xchg
cmp
xlat
dec
cmpsb
scas
lock
dec
neg
fcoms
push
insl
xor
iret
sub
mov
mov
mov
xchg
xchg
pusha
stos
aas
adc
andl
out
pop
lret
fs
push
or
jo
xchg
sarl
mov
mov
or
nop
push
jne
int3
cmp
loopne
ljmp
jns
push
in
and
push
lcall
stc
enter
sbb
mov
out
loop
insl
gs
mov
aam
scas
xchg
cmp
and
mov
mov
cli
test
test
add
mov
sahf
xchg
xbegin
aaa
pop
jg
and
sbb
sub
push
aad
mov
out
sbb
add
or
add
cmpsb
lcall
gs
lds
int3
cmc
fwait
cld
rcl
or
cmp
inc
ja
mov
mov
ret
lret
jns
push
dec
addl
fisttpll
jl
lret
push
cmp
imul
or
jmp
sti
xchg
push
shrl
test
fidivs
mov
sub
fwait
addr16
out
dec
dec
jne
subb
fcomip
push
lret
sbb
add
xchg
cs
shrb
sub
das
mov
push
cmp
testb
jns
push
mov
xorb
pop
pusha
add
add
xlat
pop
pop
loopne
mov
sbb
pop
push
int3
xor
lods
in
ja
jge
jp
lret
fdivrl
popa
cmc
cltd
mov
push
addb
adc
add
or
sti
sti
into
fcoml
mov
arpl
push
or
pop
xchg
mov
pop
jmp
push
into
loope
mov
adc
sub
popf
js
frstor
in
hlt
movb
iret
pop
cmpb
xorl
mov
outsb
loope
and
fidivrl
daa
cli
rcr
imul
mov
lret
push
cmp
je
cmp
inc
shlb
mov
fsts
xchg
jbe
psubb
mov
cmc
pushf
jno
sbb
sbb
addr16
outsb
stc
push
ljmp
lahf
fs
mov
dec
into
ficoms
data16
or
or
push
jmp
rorb
lret
stos
inc
jp
mov
ret
mov
push
xchg
call
movsb
cmp
jb
clc
pushf
mov
xchg
add
fistl
add
aas
loop
xchg
push
sub
or
dec
dec
in
push
jl
add
and
mov
scas
adc
inc
mov
pushf
cmp
pop
dec
xorb
push
pop
add
mov
inc
push
daa
adc
pop
fwait
push
out
sub
inc
sti
jge
or
dec
sbb
cmpsl
addr16
insl
ds
dec
sub
loopne,pn
popf
inc
sub
mov
xchg
adc
pop
arpl
into
setge
sbb
leave
sub
ljmp
mov
sarb
test
sbb
push
leave
add
adcl
mov
add
jp
and
into
nop
adc
or
insl
jae
cmp
cmc
xlat
mov
in
rcrw
rclb
adc
es
mov
cld
jmp
lahf
test
mov
adc
repz
dec
js
pusha
push
sbb
mov
sahf
dec
nop
insb
rcl
shlb
das
fdivr
dec
xchg
xchg
ss
int
pop
sbb
inc
sub
std
aaa
inc
in
je
iret
mov
gs
es
data16
dec
sti
xchg
call
rcr
fiaddl
push
mov
mov
in
jbe
shl
mov
jbe
add
push
xchg
ret
mov
roll
repnz
add
mov
pushf
mov
stos
incl
testl
sbb
ja
rorl
bound
fmull
int3
dec
dec
push
xlat
mov
cmpsl
add
jb
push
rcl
cmp
dec
out
xchg
popf
sbbb
cmp
les
jae
movsl
cmpsl
lret
test
and
mov
mov
fwait
aam
shlb
scas
sub
mov
jmp
sti
aad
jg
lcall
int
push
pop
lds
into
dec
pusha
sub
xchg
mov
into
aas
stos
jne
push
dec
inc
scas
or
pop
es
fistpll
xor
cmp
inc
outsl
aas
shll
mov
push
stc
lahf
dec
push
mov
in
inc
lret
outsl
xchg
xchg
pop
and
std
xchg
fildll
or
add
sub
mov
push
in
into
or
in
fwait
dec
mov
pop
mov
movsb
sarb
inc
xor
fucomip
adc
cmp
imul
push
loope
jb
push
lret
fs
push
xlat
cld
cmpsl
mov
mov
lret
dec
mov
pushf
mov
sahf
add
out
icebp
arpl
std
dec
cmc
lods
cwtl
nop
int3
sbb
imul
inc
dec
xor
cmp
dec
leave
dec
int
sbb
mov
adc
lcall
cmp
jno
rclb
ss
and
out
hlt
push
xchg
jae
addr16
int3
test
jl
jecxz
adc
shlb
mov
outsb
sub
ja
lea
je
adc
jnp
imul
push
xor
pop
mov
leave
out
pop
mov
ret
aad
insb
ret
pushf
push
out
cltd
dec
add
ja
inc
push
scas
inc
fadd
sub
fisubs
aad
jmp
xchg
adc
lcall
xchg
jb
xor
jmp
es
mov
psubd
pop
test
icebp
push
xor
cmpb
sbb
mov
cmp
mov
xchg
iret
and
mov
push
insb
enter
jle
rcrb
fldl
lahf
inc
jb
sarl
ret
cwtl
mov
dec
cmp
mov
cwtl
jp
jbe
sub
mov
rclb
adc
push
aas
pop
add
sbb
sub
inc
xchg
jecxz
xchg
ret
jecxz
jl
push
inc
mov
push
fstpl
fcompl
insl
sub
fcmovnbe
test
movsb
adc
lea
add
add
mov
jne
rcll
daa
jo
je
pop
lods
les
mov
mov
and
or
sub
dec
mov
dec
lds
mov
scas
or
out
cmp
out
pusha
js
jns
mov
scas
mov
mov
add
lea
imul
jnp
jge
rorb
ja
sub
dec
mov
data16
jae
scas
and
adc
enter
roll
inc
fstps
clc
mov
ret
sub
xor
ficompl
jb
push
cmp
in
lret
push
cwtl
mov
in
lret
sbb
fcmovbe
push
out
push
incb
mov
outsl
dec
cmp
pop
cmova
mov
pop
scas
xor
cmpsb
push
cmp
adc
sbb
dec
scas
in
xlat
cmpl
mov
ljmp
icebp
fdivrs
jo
mov
cld
loopne
into
pop
sbb
imul
dec
jno
mov
clc
push
movsb
adc
iret
cmp
js
add
test
xchg
aam
ret
jne
mov
out
imul
mov
repz
aaa
lcall
mov
andl
ja
addl
aam
mull
fcmovbe
fdivl
cli
mov
add
pop
xchg
pop
inc
outsb
pop
loopne
int3
mov
or
sbb
call
fsubrs
dec
inc
inc
js
rolb
cmpb
test
mov
dec
fsubrl
ror
mov
sar
stos
mov
jne
out
jl
inc
mov
dec
pop
fcmovbe
fs
dec
and
iret
pushf
arpl
push
mov
mov
jbe
movd
mov
mov
filds
ror
ret
std
mov
lds
js
add
mov
arpl
push
push
popa
and
dec
mov
push
loope
dec
out
xlat
jge
jecxz
xlat
in
mov
fwait
dec
sub
ret
jge
jno
aad
inc
mov
mov
adc
or
add
add
pop
jae
rcll
into
push
inc
pushf
loopne
mov
jns
stos
or
adc
dec
xchg
in
jne
mov
pusha
add
aaa
loopne
mov
or
rcl
inc
sbb
push
pop
and
sub
jp
inc
adc
or
dec
scas
sti
jle
pop
inc
lcall
movsb
xor
sub
xchg
and
sub
shr
fsts
sbb
cmpsb
sub
loop
jmp
push
sub
loopne
xchg
nop
push
inc
add
inc
lret
push
stos
das
mov
ret
mov
test
mov
std
adc
sub
jnp
xlat
adc
scas
stc
push
aad
dec
cmpsl
jne
adc
in
cltd
xor
push
jg
aas
loope
outsl
lcall
mov
notb
mov
jne
mov
jecxz
cmp
jg
aam
dec
sbb
test
adc
xor
xchg
scas
mov
scas
pop
ds
fmuls
adc
xchg
pop
iret
aaa
loop
add
inc
jmp
cmpsl
ret
mov
jno
loopne
mov
cmp
data16
dec
test
mov
lret
mov
push
inc
test
iret
test
lcall
sbb
int3
xchg
cwtl
jmp
sbb
dec
push
ret
sarl
add
cmpl
mov
xchg
xchg
addr16
xchg
jecxz
out
and
xor
rcl
daa
nop
pop
andl
mov
or
mov
mov
outsb
fwait
push
lods
mov
lods
jbe
jl
into
cmp
and
loopne
mov
dec
rolb
sub
add
movb
sbb
pop
add
loopne
cmpsb
dec
imul
leave
cmc
data16
and
mov
aas
jae
adc
add
sub
loope
push
ljmp
lds
add
lahf
shll
xchg
data16
mov
scas
or
es
jne
push
popa
xor
test
cltd
ret
and
sbb
gs
pop
repz
jp
dec
ss
imul
push
scas
fdivrs
mov
sbb
cs
dec
inc
inc
push
xchg
xchg
pop
sbb
push
cli
jb
ret
in
pop
push
and
push
into
sbb
lret
rol
push
push
inc
mov
jbe
cmc
fninit
push
push
dec
xchg
aas
popa
sub
lret
data16
cld
jae
lret
jb
rcrb
aaa
xchg
sub
aam
ds
leave
sbb
cmp
js
xchg
outsl
mov
xchg
pushf
mov
fcmovbe
popa
sub
aam
adc
fnstcw
xchg
adc
into
pop
pop
dec
fstpl
out
out
mov
push
aad
imul
and
and
in
push
jne
cld
insl
inc
xchg
fs
mov
cmpsl
sub
push
cli
jp
insb
rorl
sbb
mov
lods
adc
push
test
rcrb
xor
cmpsb
mov
and
clc
sbb
cld
lahf
stc
push
movsb
stos
push
mov
syscall
jl
xchg
mov
dec
cld
and
adc
push
hlt
mov
jnp
jmp
repz
mov
das
mov
jne
pop
scas
call
hlt
mov
jnp
adc
jecxz
int
or
xchg
repnz
rolb
pop
mov
es
mov
dec
ret
das
repnz
dec
pop
mov
sbb
mov
test
jne
fisubl
dec
or
out
pop
mov
fidivs
push
xlat
rorb
or
aad
mov
call
shrl
pop
pop
roll
push
test
mov
into
testl
sub
xlat
fidivs
adc
cmpsl
push
mov
sub
mov
mov
out
mov
call
push
movq
pop
pop
or
jl
inc
insb
lret
out
std
cmpsl
push
inc
sub
sub
in
popf
xor
mov
mov
jnp
jbe
sbb
lcall
pop
pop
jne
lret
xchg
xchg
ret
push
jmp
lret
and
ds
lret
sub
ret
outsl
aam
int
call
adc
mov
and
mov
ja
add
icebp
shlb
pop
push
pop
std
dec
jecxz
repz
xchg
loopne
mov
out
lock
push
dec
in
push
popf
or
sbb
dec
adcl
mov
clc
lret
dec
xchg
loope
cmpsb
negb
mov
adc
or
xchg
or
jmp
adc
idivl
jmp
jle
aam
icebp
mov
cmpsb
xchg
mov
leave
push
dec
xlat
out
sbb
out
fadd
in
stc
cmc
lret
push
lods
dec
mov
imul
in
data16
inc
clc
mov
sti
xchg
push
gs
test
insb
hlt
cld
fnstsw
lahf
cmc
out
sbb
daa
xor
mov
sub
sarb
je
icebp
outsb
cs
les
jbe
nop
rolb
imull
cld
xor
mov
ret
cbtw
sub
out
fdivl
lods
pop
cmp
cmpsb
mov
fldl2t
ljmp
test
daa
ss
scas
pop
sub
xor
xorb
lds
ljmp
into
jl
mov
fnstenv
cltd
repz
sbb
cmp
inc
rclb
xchg
push
jl
out
pop
push
je
adc
jmp
icebp
mov
sub
mov
mov
dec
xchg
loope
mov
sarl
popa
clc
icebp
dec
xchg
pop
jns
pushf
jae
enter
out
hlt
flds
xchg
sub
cli
lcall
pop
xor
mov
add
cmpb
test
xchg
mov
repnz
jmp
cmp
inc
sub
mov
loop
sahf
out
lea
dec
xchg
or
xchg
sti
xor
xlat
icebp
arpl
js
nop
mov
jns
add
push
mov
data16
jp
sarl
dec
jbe
inc
jne
out
mulb
je,pt
leave
std
enter
imul
imul
mov
sahf
push
xor
adc
push
dec
gs
pop
adcl
xchg
jl
adc
sbb
pop
lret
mov
add
inc
cmpsl
jp
pop
jmp
sbb
xchg
aam
push
and
fstpt
pop
dec
mov
xlat
or
adc
orb
arpl
fs
fucomp
add
hlt
and
mov
aaa
addr16
test
rcrl
fstl
mov
filds
shlb
movsl
mov
pop
cmp
xchg
scas
sub
inc
xor
jno,pt
cmp
imul
jmp
adc
push
fistl
mov
push
nop
xor
fwait
add
jge
dec
sahf
inc
sub
lcall
xchg
mov
mov
cs
push
inc
aad
mov
xorl
push
sub
mov
loope
out
or
outsl
scas
or
not
mov
mov
icebp
push
sbb
ss
jae
pop
mov
pop
outsb
xlat
fwait
push
pop
loop
add
and
pop
push
and
xchg
insl
cmpl
rolb
jp
rcpps
mov
jl
adc
jecxz
xor
xchg
aaa
sub
mov
mov
sub
or
bound
pop
adc
cmpsb
mov
in
pop
xchg
popa
cmp
lods
out
shlb
orl
push
loop
inc
mov
and
bound
js
sahf
out
rorl
xor
scas
mov
xor
in
push
and
jle
adc
divl
aad
pop
adc
pop
or
pop
dec
add
pusha
daa
iret
aad
lods
cmp
push
ret
mov
inc
enter
cwtl
mov
push
testl
mov
push
mov
xor
daa
mov
into
cmp
add
imul
push
mov
pop
jbe
aas
mov
aam
pop
lret
cmp
xchg
pop
push
loope
sub
movsl
ss
jne
popa
jl
xchg
adc
xor
push
lock
and
bound
rolb
stc
and
arpl
lret
or
push
inc
xchg
cmp
cmpsb
pop
pop
iret
es
add
js
jge
jp
push
inc
adc
mov
mov
adc
push
lret
imul
xchg
sub
xor
inc
lret
jg
repz
pushf
add
sbb
pop
scas
push
xchg
nop
sub
jp
sahf
lods
pop
mov
xchg
orl
into
adc
push
ror
push
push
fdivl
cmp
fs
jbe
mov
mov
jmp
cmpsl
rcl
jl
loopne
test
bound
jb
xchg
rolb
fs
pop
inc
mov
and
push
repz
jbe
sbb
sbb
enter
lret
es
adc
int
dec
xchg
jno
fldl
fsubrl
cmp
cmp
jge
fs
bound
imul
int
cwtl
ret
inc
mov
adc
movsl
push
or
xor
dec
out
xor
sub
mov
loope
adc
xchg
mov
cmp
add
imul
pop
shr
push
loopne
ljmp
jnp
lods
sub
leave
sbb
sub
xchg
out
lret
xor
fwait
cltd
jns
fcompl
stos
dec
add
sbb
sub
out
inc
insb
mov
pop
dec
or
shr
repz
movb
xchg
nop
mov
xchg
xchg
repz
enter
mov
adc
dec
mov
mov
fidivrs
ds
push
dec
cmp
mov
pop
or
fisttpll
js
mov
xchg
lret
sbb
push
xor
sarb
std
pop
sub
insb
roll
fsubrs
loope
shrb
dec
pop
popf
mov
sbb
pop
int
stc
push
iret
mov
adc
push
inc
leave
test
add
mov
lods
dec
imulb
xor
les
inc
mov
add
add
xchg
fs
jmp
mov
dec
rcl
or
jbe
mov
xor
icebp
cmp
popf
xchg
jp
push
mov
leave
ret
mov
int3
mov
xchg
cs
pushf
mov
ja
into
xchg
cld
cmc
scas
insl
jg
es
mov
insl
sbbl
xchg
data16
mov
add
xor
ret
fcompl
fsubs
dec
cmpsb
xchg
dec
fldcw
bound
mov
lret
jle
jb
pop
into
adc
test
adc
js
rolb
out
and
sub
cmp
push
jbe
dec
inc
cmp
stc
test
lcall
jae
inc
add
sbb
mov
cwtl
shlb
push
push
pop
mov
pop
int3
cmp
inc
xor
aad
jns
inc
lods
ret
xchg
xchg
icebp
xor
aaa
jl
mov
xlat
in
sub
addr16
mov
in
cmp
add
das
lods
pop
out
shrl
lret
sbb
jl
lods
push
sar
add
push
cmp
aam
push
cs
pushf
ss
xchg
sbb
dec
jne
or
sub
fisubs
out
inc
xchg
data16
xlat
push
pusha
inc
push
in
pop
dec
int
push
fsubrl
sbb
hlt
mov
movsb
jb
adc
lds
cmc
sub
ror
loope
xlat
icebp
mov
push
mov
pop
xchg
cwtl
movsb
fcomp
loopne
mov
test
lret
int
mov
dec
dec
imul
jnp
push
mov
push
int
jbe
cmp
fsubr
or
push
fldt
dec
incb
out
lds
rcl
mov
fimull
loope
leave
and
sti
sbb
push
xor
mov
call
dec
addl
cwtl
sarl
mov
pusha
add
lret
push
sbb
sbb
aam
clc
aaa
fs
pop
and
xchg
push
add
push
in
rep
pop
std
mov
bound
mov
gs
push
test
and
lret
addr16
adc
ror
sbb
jle
xor
cmp
cmpsl
push
mov
scas
cwtl
loop
mov
aas
clc
movsb
add
push
mov
pop
sar
enter
or
push
out
mov
jne
dec
cltd
movsl
xor
in
arpl
or
pusha
jns
add
push
sub
push
ljmp
mov
cmc
out
jg
fsubrl
pop
andl
ret
daa
int3
sahf
adc
adc
inc
fwait
or
or
daa
sti
push
and
mov
lock
out
ja
and
std
test
push
fists
sbb
stc
push
cmp
dec
mov
mov
fcoms
jg
cmp
sahf
and
mov
lods
mov
mov
or
sub
cli
shlb
pusha
fnstsw
mov
stc
and
mov
jl
sbb
int3
mov
jp
popa
leave
adc
jbe
stc
xor
add
shll
inc
jb
push
sbb
mov
xor
imul
inc
scas
into
nop
pminub
xlat
xorb
and
arpl
addl
out
pushf
outsb
push
pop
dec
or
imul
or
sbbb
leave
add
in
ljmp
insl
fnsave
xchg
xchg
lret
out
mov
jo
dec
aas
dec
and
icebp
iret
or
pop
imul
adc
adc
test
cwtl
aas
jae
xor
pop
dec
mov
and
push
adc
out
shlb
jp
rorl
lcall
add
int
push
mov
jbe
push
ds
sub
movsb
inc
mov
into
shlb
out
mov
cmc
dec
adc
lcall
andb
or
add
xchg
mov
xor
inc
xchg
int3
loope
mov
adc
inc
cmc
into
sub
inc
pop
push
enter
inc
in
cmp
jb
cltd
lahf
leave
mov
or
pop
dec
loope
les
insl
cmp
shlb
aaa
xor
add
sbb
push
into
jne
adc
mov
dec
out
cmp
mov
daa
pop
jb
ds
je
xchg
sbb
add
xchg
jns
sarb
adc
cwtl
xchg
xchg
fcomip
stc
iret
adc
inc
mov
in
jne
mov
pop
je
add
ljmp
adc
jno
push
arpl
das
lods
sub
cwtl
sarl
mov
in
out
jno
pop
sub
fwait
bound
test
out
mov
addr16
xchg
add
cmpsl
lods
mov
pop
mov
sti
and
mov
mov
sahf
inc
push
push
xchg
lods
jns
adc
enter
shl
add
repz
int3
jne
je
testl
dec
adc
in
or
pop
scas
in
mov
adc
dec
imul
imul
jbe
cmpsl
jp
into
or
enter
mov
xchg
inc
cmpsb
mov
or
dec
xchg
xor
addr16
mov
imul
aam
div
xchg
imul
inc
jmp
cmp
pushf
cmp
icebp
out
jb
js
and
mov
mov
bound
les
out
out
out
inc
xor
sarb
popf
xchg
dec
mov
sbb
in
pop
dec
ret
lret
cwtl
mov
loop
inc
enter
xor
into
cmp
rcl
lock
sub
push
pop
xor
dec
push
cwtl
addb
jl
outsb
mov
jbe
imul
sarb
mov
xor
dec
dec
int3
das
inc
in
aam
mov
sbb
mov
cmpb
lret
or
popa
xor
add
mov
mov
jl
cmc
data16
mov
ret
mov
mov
push
pop
add
jbe
stc
repnz
lcall
int3
sbb
mov
icebp
xor
xor
cmpsl
sub
xchg
sarb
movb
or
jecxz
out
ret
subl
xchg
push
icebp
mov
dec
pop
lahf
mov
hlt
nop
neg
cmp
mov
xchg
sbb
clc
fs
mov
je
cltd
mov
jle
pop
das
cwtl
fdiv
repz
push
mov
movsl
and
jmp
fiaddl
leave
jo
or
mov
sub
add
int
fsubr
pop
pop
test
inc
push
pop
call
mov
pop
mov
pop
cmp
aaa
adc
rcl
arpl
test
sbb
mov
adc
frstor
jecxz
imul
hlt
sbb
and
lods
out
dec
and
bound
arpl
push
stos
cmp
dec
dec
aad
out
xchg
push
push
or
xor
notl
and
adc
inc
sbb
jmp
xor
in
test
lds
inc
xlat
in
fisubs
add
mov
adcl
je
cmp
jbe
adc
xlat
into
cmp
and
push
or
lods
inc
movsl
dec
out
push
faddl
or
cmpsb
ss
aaa
fwait
dec
jg
add
out
adc
inc
mov
jno
push
lods
dec
mov
jnp
fsts
sbb
mov
test
test
insb
add
sub
lahf
sbb
sub
ss
out
or
lock
jmp
jp
sbb
xor
pop
pop
and
jg
cmpsb
insl
popf
lret
mov
cmp
imul
rolb
in
sbb
push
pop
pop
add
pop
out
orl
dec
fs
les
ds
xchg
js
mov
out
rorl
pusha
xlat
movsl
mov
fstpt
xchg
subb
inc
push
out
mov
xchg
ss
mov
dec
das
inc
jne
xchg
ret
xchg
inc
cmpsl
push
xchg
fs
pop
nop
mov
cmp
xor
pop
into
dec
xchg
sahf
sbb
je
aad
fmul
or
xorl
out
into
mov
sarl
frstor
adc
cmp
outsl
jae
jecxz
test
lods
enter
jmp
add
mov
test
xchg
jbe
or
inc
stos
sbb
dec
adc
or
adc
push
inc
inc
cmc
leave
jne
cmp
lods
int3
dec
loop
scas
push
lcall
data16
lret
pop
imul
add
jo
jbe
xchg
fcmovnu
jge
mov
sub
jl
jle
xchg
sarl
or
lret
pop
aas
jg
movsl
imul
add
jne
mov
cltd
leave
popa
mov
lds
dec
cli
pop
lcall
adcb
cli
mov
cs
movsl
mov
jne
add
rcll
and
icebp
jbe
cli
xor
outsl
rcl
adc
pop
pop
xor
leave
arpl
jne
mov
cmpsb
ficoml
jecxz
push
sbb
test
jo
fcompl
sub
mov
ljmp
jbe
insb
mov
mov
inc
xchg
imul
fisubs
icebp
cmp
jmp
jae
mov
and
out
sahf
popf
mov
fstp
rol
push
enter
lret
das
mov
inc
push
sbb
cmc
sbb
fisubl
add
push
xchg
inc
adc
iret
mov
cmpxchg
ljmp
inc
dec
fstpt
ja
fadds
pusha
dec
xchg
adc
dec
repnz
stos
iret
shll
loop
dec
jecxz
ficoms
or
adc
call
jbe
pop
push
jmp
xlat
shlb
pop
outsl
xchg
cmp
mov
or
leave
xor
out
in
insl
es
jb
faddl
fldt
dec
lock
mov
mov
xchg
rcrb
xchg
arpl
dec
mov
loope
cmp
xchg
addr16
mov
xchg
xchg
pop
push
shrb
mov
ja
mov
arpl
ja
mov
push
pop
inc
lds
roll
cmc
or
into
cmp
mov
xchg
inc
leave
push
sub
pop
stos
add
jae
mov
into
les
lods
sbb
add
sahf
lock
push
ret
add
imul
add
jmp
or
dec
lahf
test
sbb
add
shl
push
jl
add
fidivs
inc
sub
cld
inc
repnz
dec
std
into
insb
mov
lea
in
icebp
rdtsc
clc
and
mov
push
inc
fldt
inc
jbe
lods
ret
fstl
andl
les
xchg
lcall
lods
addr16
jg
mov
xchg
popa
mov
push
out
mov
stos
lcall
adc
movsl
fiadds
mov
je
pop
aaa
out
sbb
mov
adc
push
pop
cmp
stc
adc
inc
inc
mov
out
fwait
call
cmp
shrb
fistps
cmp
aam
stc
push
lock
mov
and
mov
mov
add
mov
out
push
inc
rcrb
xchg
cmp
push
sbb
mov
xchg
stos
xchg
enter
xchg
lahf
jg
cmp
push
popa
dec
jno
icebp
and
or
pop
xchg
test
call
rclb
xchg
sub
mov
and
std
pusha
and
inc
push
mov
pusha
push
out
data16
into
mov
add
stos
jbe
sub
es
dec
push
fiaddl
inc
mov
adc
cmp
arpl
dec
es
lock
repz
les
pop
cwtl
sbb
sbb
stos
es
shrl
jge
cmp
daa
pop
inc
dec
in
repnz
loop
test
cmpsl
push
popf
mov
jbe
dec
rcr
into
pop
nop
pop
mov
cltd
lret
stos
je
enter
dec
stc
mull
xchg
mov
ret
push
sub
js
adc
xor
out
lret
inc
les
sbb
bound
addb
clc
xchg
cmp
out
xor
dec
jmp
push
sbb
cmpsb
push
andl
mov
sub
mov
xchg
sub
lret
dec
and
out
in
jae
xchg
in
push
push
jmp
mov
jle
push
inc
mov
sbbl
mov
push
dec
popa
in
fs
loop
mov
mov
lods
pusha
or
lea
jns
cmp
sub
arpl
cmp
jl
addb
mov
into
pop
sbb
jbe
rcll
and
outsb
mov
cmp
mov
out
imull
lock
push
xlat
dec
arpl
into
and
sbb
imul
mov
add
mov
cld
out
rorl
lcall
in
fneni(8087
push
push
or
shlb
clc
lret
not
push
pop
stos
and
mov
or
les
pop
clc
jns
into
subl
xor
movsb
dec
cld
enter
sbb
mov
fcmovne
in
cmc
les
sub
adc
adc
or
hlt
shlb
stos
dec
and
outsb
popf
xchg
lods
sahf
shlb
xchg
mov
iret
or
add
or
push
addr16
testl
cmpsb
push
daa
jns
lcall
or
aaa
mov
xor
fistps
pop
movsl
je
mov
adc
dec
lret
jno
sarl
in
imul
jb
mov
scas
test
mov
push
and
insb
jae
mov
cmpsb
push
cmp
xchg
push
mov
into
jbe
jne
loope
ss
test
push
ljmp
mov
adc
popf
into
or
sti
cmp
jmp
xchg
inc
iret
in
test
into
jbe
ja
insb
push
mov
cmp
lods
sbb
xchg
mov
xchg
cld
mov
jb
pop
aaa
or
cs
ror
test
mov
hlt
call
out
add
sub
inc
mov
cwtl
cli
ret
xor
repnz
pop
aaa
inc
jnp
xor
jae
lret
insb
xchg
cmp
sbb
lods
clc
jb
mov
les
cmp
pop
add
push
lods
fwait
gs
pop
push
imul
push
pushf
cmp
outsb
xchg
xor
inc
cmp
push
add
cmp
jg
fisubrl
test
dec
scas
movsb
cmpb
dec
shlb
sahf
insb
fidivrl
xchg
push
out
pop
iret
pop
sbb
pushf
dec
push
aas
mov
into
adc
jae
xor
mov
jno
pop
add
int3
cwtl
rorb
filds
mov
xor
sarb
fnstcw
add
dec
sub
mov
lds
fwait
test
into
mov
pop
mov
xor
or
and
push
icebp
push
xchg
mov
ror
js
pop
push
loope
pop
std
in
stos
pop
lret
xchg
mov
mov
int
in
fadd
adc
mov
ss
sahf
fidivrl
std
xchg
xchg
insl
mov
mov
leave
add
xchg
xchg
xchg
adc
sub
fnstenv
cld
and
lret
fisubl
fdivrs
or
sahf
mov
xlat
leave
jecxz
rolb
imul
mov
jns
cltd
sub
cmc
push
mov
adc
cmp
mov
int3
xchg
cld
pop
stc
pop
es
icebp
xchg
into
movsb
dec
mov
aam
not
mov
cli
or
mov
dec
mov
les
sbb
addr16
sub
or
gs
rolb
push
mulb
pop
fcomi
cli
mov
std
mov
test
pusha
leave
xor
jle
iret
xchg
pop
rorb
adc
jb
sub
mov
rcr
mov
mov
sbb
inc
mov
shl
push
push
push
leave
bound
dec
std
push
sub
mov
sahf
xchg
sbb
cmp
cmp
ret
fldl
int3
addr16
pushf
sbb
loopne
jmp
pop
push
dec
not
adc
push
inc
div
es
aas
push
stos
imul
std
lock
shr
cld
or
mov
rcrb
test
sbb
aam
dec
loope
mov
xchg
adc
test
jle
dec
ja
ffreep
sub
pop
push
xor
mov
dec
xchg
or
cmp
adc
add
jo
cmp
jg
lods
stos
push
xor
and
or
dec
aaa
imulb
mov
xor
xor
stos
into
sub
add
sbb
inc
cmpsb
icebp
mov
dec
jp
lahf
insb
sbb
push
mov
xor
xor
cwtl
sbb
add
imul
lret
js
pop
fnstcw
mov
fisubrs
aaa
scas
mov
syscall
test
jecxz
push
mov
push
icebp
out
outsb
xor
cmc
int
repz
movsb
and
lret
outsl
mov
pushl
cmp
lret
inc
cmp
dec
or
addb
sub
xchg
pushf
cs
xchg
adc
leave
pop
cmpsb
dec
dec
iret
aam
lods
aaa
pop
pusha
stos
cmp
xor
mov
xor
jne
xchg
xor
mov
pusha
gs
sub
xchg
in
inc
sar
pop
hlt
movsb
shlb
or
aas
mov
mov
fdivrs
fwait
xor
adc
lods
rolb
jbe
pop
push
outsb
mov
les
fistps
mov
loope
xor
or
pusha
mov
dec
rcl
ret
popf
jns
js
jnp
lds
and
mov
mov
jg
push
push
push
jmp
sub
add
shlb
push
ret
cld
adc
add
sub
fstpt
std
adc
jbe
or
ret
and
repz
bnd
adc
dec
in
js
add
fisubl
dec
push
inc
mov
adc
repnz
inc
adc
stos
iret
ds
xor
rclb
sbb
cmp
mov
mov
lods
xor
mov
ss
test
lock
js
inc
mov
pop
pop
jecxz
imul
jbe
mov
sub
int3
leave
inc
inc
fldenv
jge
and
lds
jl
shll
push
stos
xchg
fdivrl
lret
mov
push
or
iret
outsl
push
js
icebp
dec
or
in
ss
xor
xor
scas
adc
mov
int3
sbb
call
in
cmpsb
and
xchg
pop
inc
in
cmp
es
bnd
rcr
xchg
and
cmp
stos
popa
add
inc
pop
sbb
daa
lahf
cmc
and
vfrczps
adc
ret
clc
xor
aam
std
and
das
add
repnz
aad
testb
out
inc
shlb
dec
xchg
inc
repnz
fstp
xchg
mov
pop
test
sahf
mov
jmp
sub
jae
insb
add
and
jne
pop
pcmpeqd
lret
mov
pop
lds
out
outsb
arpl
mov
lret
jmp
dec
es
dec
sub
jo
out
xchg
pop
jb
cli
mov
mov
mov
out
sub
shlb
xchg
clc
movsl
add
pop
jge
ja
xor
lret
dec
fcmove
aam
shl
push
xor
fs
rcll
and
enter
inc
cmp
shrl
mov
getsec
mov
out
cmpsb
repz
inc
cmp
or
sbb
mov
imul
popf
mov
sahf
xchg
rcrb
sar
sbb
jge
mov
nop
dec
cmp
sahf
mov
pusha
xchg
shl
fistpl
or
scas
imul
mov
js
enter
leave
gs
outsb
cmc
mov
das
jbe
xor
pop
xchg
mov
dec
sbb
xchg
inc
fidivs
rolb
addr16
mov
mov
leave
lods
fidivs
and
and
mov
cld
out
arpl
lea
mov
xchg
pop
or
adcb
mov
scas
dec
loopne
mov
iret
aam
inc
das
sub
cmp
repnz
adc
mov
mov
mov
lret
cmpsl
jp
inc
adc
in
scas
int3
xchg
mov
push
outsl
sbb
jmp
pop
jbe
push
test
rorb
mov
rcl
lret
inc
movsb
jo
pop
cmp
daa
xchg
lock
mov
pop
xchg
cmp
mov
out
jmp
test
leave
arpl
inc
jecxz
push
xorb
out
mov
or
sbb
adc
dec
push
int3
rcl
xor
jb
jne
les
xchg
movsl
mov
pop
or
push
jp
or
jle
mov
mov
jl
cmp
popf
and
cmpsb
push
enter
mov
andb
xchg
cmpsl
pusha
pop
mov
push
sahf
ret
mov
into
cmp
shrb
mov
pop
aam
xor
xchg
mov
movb
in
and
inc
mov
cs
insl
dec
lret
adcl
jecxz
xor
push
nopl
and
cmp
mov
cwtl
addr16
sbb
inc
in
push
fsubrl
test
xchg
flds
pushf
ds
imul
js
and
mov
iret
xchg
sub
mov
mov
inc
mov
adc
fmul
mov
push
pop
pop
fbstp
lds
int
outsb
add
adc
jp
mov
dec
rcrb
fcomip
shlb
push
ss
push
stos
push
lds
addr16
mov
or
les
mov
fmuls
subb
out
imul
pop
jecxz
mov
push
jns
mov
cmc
push
jb
pop
pop
dec
xchg
out
icebp
xchg
ret
stc
adc
ja
iret
inc
jne
xor
gs
adc
mov
fdivrp
fimull
test
into
es
pause
insl
aaa
or
cwtl
mov
aam
inc
out
iret
dec
call
hlt
hlt
mov
std
cmc
push
jmp
loope
enter
ja
inc
lea
jge
inc
out
call
jecxz
pop
pushf
mov
subl
lret
fs
in
or
and
xchg
js
into
push
repz
sar
xchg
lods
jae
pop
dec
push
cmp
into
es
inc
xchg
jg
dec
pop
mov
imul
in
adc
daa
movsl
inc
addr16
adc
les
xlat
add
fnstsw
in
dec
pop
arpl
dec
pop
cmc
out
cmp
or
jl
fimuls
mov
pop
mov
add
cmc
les
cmp
sub
scas
xorl
cmp
add
jle
cmc
leave
pop
dec
fs
fdivrl
mov
jne
addr16
outsb
mov
clc
sarb
pop
push
pushf
jge
out
jns
adc
mov
lods
testl
mov
loop
fmuls
out
mov
fnstsw
repz
fiadds
aam
daa
inc
ret
leave
stos
arpl
outsl
loope
or
stos
lret
imul
mov
cmpsl
aam
shrl
adc
mov
scas
mov
movsl
add
adc
sub
mov
rolb
dec
fst
sbb
je
or
xchg
jmp
pop
bound
test
arpl
sbb
sahf
push
inc
xchg
mov
xor
pop
lret
push
push
push
scas
sahf
aaa
sbb
mov
scas
sub
add
stc
xor
es
rcrl
repnz
mov
aam
cmpsb
sub
cmpb
aad
sub
cmp
adc
test
cmp
lods
in
and
jno
lret
iret
adc
pop
fdivrp
mov
dec
fcmovnbe
add
sahf
into
mov
out
cmpsb
aas
call
mov
loopne
pop
ja
out
mov
cld
loope
mov
push
push
insb
fs
push
push
cmp
cmp
lea
jmp
jne
and
dec
jo
sbb
adc
icebp
popf
stos
test
and
push
push
std
int3
cwtl
movl
insl
loopne
iret
orb
je
inc
mov
cli
lods
inc
outsb
dec
cld
enter
inc
jmp
or
arpl
into
daa
lock
in
inc
pop
push
jp
mov
xchg
aaa
dec
mov
mov
dec
aas
stos
sbb
cmp
fdivl
dec
movsl
mov
aas
cltd
mov
xchg
cmpsb
push
inc
adc
push
bound
movsl
lret
test
shrl
inc
mov
xchg
js
cwtl
addr16
lods
sub
ret
into
or
idivl
sbb
movsl
test
rcl
enter
jmp
adc
sarb
pop
cwtl
adc
jb
jmp
add
xor
inc
into
popa
cli
or
jno
fildll
divl
out
cmc
xchg
stos
jmp
stos
fcmovnbe
mov
mov
xchg
add
pop
cltd
dec
lahf
cmp
out
sub
in
dec
sub
int3
sahf
or
pop
or
jp
shl
and
xor
or
dec
loop
cmc
fidivl
push
xchg
arpl
push
test
inc
clc
addw
addr16
in
sahf
add
push
testl
push
outsb
hlt
mov
or
subb
icebp
gs
adc
shll
xchg
cwtl
lock
imul
add
lret
addr16
xchg
sub
adc
pop
pusha
fcomps
push
jne
jnp
rcl
adc
adc
repnz
enter
add
sahf
es
rcrb
outsl
mov
add
test
mov
ret
js
scas
jge
int
add
mov
repz
lret
add
out
sbb
mov
jne
fdivs
mov
orl
adc
in
into
pop
xchg
adc
enter
add
rcl
pop
in
ja
xor
sahf
subb
pusha
mov
nop
adc
adc
cmp
inc
pop
push
out
dec
sysenter
or
inc
or
mov
mov
movsb
xchg
adc
leave
mov
jbe
ficompl
sub
jg
mov
push
pop
and
data16
push
push
dec
mov
adc
push
inc
data16
xchg
sub
ret
sbb
lret
xchg
xor
push
xor
int
repnz
or
in
add
mov
cmp
fdivrs
out
mov
data16
mov
fisttps
jp
test
out
int
int3
rol
cltd
mov
lods
loopne
xchg
cmp
add
aad
dec
pop
push
and
cwtl
adc
pop
cli
mov
mov
aad
dec
mov
insb
add
or
sbb
not
adc
mov
imul
push
mov
int3
into
xchg
sti
dec
mov
inc
dec
clc
dec
cld
int
fcomip
xor
xchg
mov
stc
cltd
mov
pop
xchg
xor
xchg
push
lods
lods
repz
rclb
jb
and
mov
dec
aad
leave
xchg
js
ret
sub
movsl
mov
add
out
inc
jge
xchg
mov
in
mov
lret
and
ds
xor
adc
mov
lahf
data16
xor
and
subb
xchg
stos
sbb
mov
xlat
jo
or
push
pop
mov
jne
shrb
or
test
stos
cmp
dec
into
mov
adc
dec
insb
xchg
sarb
add
daa
mov
inc
jle
cmpsl
test
test
pushf
mov
ds
and
mov
flds
adc
adc
sub
mull
jne
sub
jp
ja
mov
add
mov
and
jecxz
repnz
popa
xor
insb
add
je
in
pop
jmp
ret
dec
adc
leave
out
loop
push
sbb
jae
sbb
xchg
xchg
sub
imul
dec
jo
jns
rcl
and
test
pop
inc
dec
inc
lods
pop
pop
push
sbb
jecxz
add
movsl
icebp
into
xchg
repz
xlat
xchg
outsb
pop
insl
mov
arpl
push
jmp
in
out
divl
sarl
jp
inc
cmpsl
dec
pushf
lock
sbb
push
dec
add
fcoml
int
pop
scas
pushf
mov
push
jp
rorl
inc
xlat
pop
mov
mov
fsubs
pusha
adc
or
adc
sub
repz
aaa
fcmovbe
fcom
push
call
mov
xchg
aam
mov
mov
repnz
push
mov
cmp
pusha
pop
xchg
pop
jo
xchg
inc
in
jl
subb
and
inc
popl
xlat
rorl
xchg
dec
sbb
fwait
ja
xor
shll
mov
bound
fmul
xchg
lock
mov
cmpsl
ljmp
xor
lds
xchg
loopne
inc
jge
outsb
xchg
mov
call
out
mov
test
daa
mov
fnstsw
mov
jecxz
adc
xchg
mov
in
mov
push
jae
out
jge
or
call
inc
dec
jne
mov
shlb
mov
mov
xchg
jle
clc
pushf
lock
adc
bswap
outsb
and
mov
and
out
mov
ret
cwtl
out
xchg
enter
sar
dec
pop
loop
mov
cmp
xchg
pop
and
rcrb
cmpsl
gs
jg
int3
cmp
pop
decl
data16
leave
sbb
out
inc
fcmovnu
jno
sti
int3
xchg
out
mov
cmp
lods
add
fucomi
push
arpl
ds
mov
shll
mov
aaa
xchg
out
push
out
inc
adc
adc
mov
inc
movb
sub
jg
call
lods
pop
dec
inc
add
fcmovbe
mul
sbb
sub
pop
xchg
jle
xor
int
pop
inc
std
pusha
test
sbb
xor
pushf
pop
sbb
ja
xchg
movsl
cmpsb
adc
iret
in
pop
lods
add
cltd
cmpsl
mov
dec
and
aam
sbb
xlat
xor
cmc
xchg
adc
loope
scas
in
outsb
mov
jmp
out
das
lcall
xchg
pop
jno
shl
push
mov
inc
mov
or
adc
fisubs
test
or
dec
test
gs
push
xchg
push
lods
test
stc
adc
jle
nop
mov
data16
es
and
inc
dec
pop
ljmp
mov
mov
cltd
sub
sti
out
xchg
jb
push
add
adc
shll
fildl
pop
mov
pushf
fstps
mov
test
dec
inc
out
dec
xor
into
je
aas
fsubrs
adc
dec
push
scas
xchg
jge
push
mov
add
leave
imul
outsl
xchg
mov
xor
clc
arpl
into
sbb
jg
or
dec
mov
xor
xchg
jnp
repz
jae
daa
inc
jmp
lret
je
cmpsb
or
in
popa
pop
xchg
mov
fsubs
inc
pop
xchg
mov
aam
xchg
pop
cmp
lods
xchg
jnp
adc
xchg
ret
shlb
adc
fcmovnbe
cmp
outsl
fwait
repz
movsl
dec
adc
cli
pop
inc
les
or
ret
xchg
mov
jo
sahf
dec
data16
ret
lods
mov
push
mov
mov
cmpsl
cltd
mov
jbe
enter
and
scas
loopne
mov
outsb
push
je
mov
rcl
loope
and
daa
test
ret
scas
push
sti
sarl
outsb
mov
adc
mov
jmp
mov
idivl
stos
xchg
lock
stos
das
jne
pop
inc
fwait
popf
sbb
dec
dec
sub
mov
shrl
push
push
push
sti
in
sahf
std
cli
lret
sbb
movsl
pop
mov
imul
mov
push
stc
int3
xchg
movsl
cwtl
xlat
into
dec
out
adc
and
fcmovne
mov
cmpsb
jns
jnp
enter
aad
mov
and
push
into
out
pop
int
pop
sbb
mov
movsb
add
cmpxchg
lea
sub
loopne
ja
in
into
scas
adc
repz
mov
push
pop
and
dec
in
jbe
addr16
mov
xchg
test
jmp
or
pop
lahf
gs
sub
in
add
dec
xchg
sub
mov
push
adc
into
inc
aad
loope
repnz
cmc
xchg
mov
push
loop
mov
movsl
or
inc
jno
cltd
shlb
pop
push
xor
mov
into
push
pop
xor
and
lods
sub
cmp
repz
inc
clc
adc
jmp
push
cltd
xor
xchg
sbb
cltd
ret
loopne
stos
addr16
lret
outsb
inc
mov
and
mov
int3
fdiv
js
cmp
and
mov
mov
cltd
fmulp
aas
arpl
mov
pop
std
or
pop
mov
cmp
jns
fstl
add
jb
es
inc
mov
lret
fdiv
push
push
mov
int
xlat
mov
push
arpl
cmp
pop
dec
fcmovnbe
cltd
rclb
repnz
movsl
jb
pop
and
bound
dec
pop
push
mov
incl
xor
aam
ss
rcr
out
ret
jbe
sub
shrb
dec
pusha
aad
or
test
insl
and
iret
shrl
stos
stc
jl
lret
divl
lds
jle
dec
push
mov
push
jp
cmp
ds
scas
pop
dec
fldl2e
lods
cld
inc
es
std
fcmovnbe
mov
push
ss
dec
inc
xchg
cmp
data16
xchg
hlt
and
daa
sub
cmpsb
leave
sbb
out
mulb
mov
jno
or
ja
insb
dec
sbb
and
push
inc
fistpll
roll
cmp
xchg
out
mov
mov
or
sbb
add
push
imul
shrl
dec
xchg
cmpsl
mov
push
or
xchg
hlt
xchg
push
add
rcr
ret
repnz
push
xchg
push
push
incl
iret
pop
and
sahf
mov
fwait
and
aad
outsl
ret
fdivs
xchg
into
adc
add
arpl
pop
jo
add
adc
hlt
xchg
fs
into
push
leave
jmp
ret
ja
dec
push
jecxz
lret
lea
inc
loope
cmp
mov
addr16
out
dec
loopne
mov
jbe
cwtl
pop
outsb
in
mov
ret
or
xchg
xchg
mov
mov
inc
movsl
pop
dec
cmp
addr16
andl
add
orl
mov
arpl
xor
shll
loop
add
cmpsl
scas
mov
mov
ljmp
imull
mov
out
jbe
jge
cmp
scas
enter
sti
push
vmovd
push
dec
data16
add
cmpsl
int3
loope
or
jmp
dec
pop
fcomp
jne
dec
lock
jge
lods
jno
and
std
xchg
shll
push
mov
xor
shrb
pusha
movb
inc
xchg
add
sbb
and
bound
in
pop
hlt
movsl
jnp
mov
jb
mov
or
daa
scas
sub
push
int3
jl
repz
or
imul
lcall
push
push
push
mov
in
je
int3
fstps
jmp
jo
pop
repz
inc
addr16
outsl
pop
clc
pop
stos
fldl
xchg
sbb
fcmovnbe
stc
mulb
cmp
and
arpl
lods
lock
adc
pop
pushf
stos
int3
adc
in
icebp
aam
loope
jne
cwtl
pop
pushf
sub
xchg
jbe
push
testb
pop
mov
test
jmp
mov
xchg
outsl
push
mov
xchg
data16
add
loopne
dec
inc
sub
xchg
pop
push
xchg
into
jle
in
in
cmp
and
cmp
inc
jns
and
cmp
pop
mov
jne
cwtl
sub
push
scas
gs
push
insl
inc
aam
movsl
mov
fiadds
dec
lods
add
xadd
xchg
mov
inc
gs
js
mov
and
mov
bnd
call
mov
testl
ja
out
jne
icebp
int3
cmpsl
mov
scas
mov
mov
mov
scas
test
sbb
push
mov
push
lods
mov
lahf
in
js
xor
add
sbbb
sbb
addl
out
xor
adc
xor
into
xchg
gs
jl
aaa
and
imul
push
mov
repz
pop
ljmp
cmp
sub
lds
movb
pop
and
mov
clc
shlb
sub
cmp
aaa
or
cwtl
pusha
sub
push
cmp
mov
jmp
pushl
not
and
or
stos
loop
jne
ss
mov
fnstenv
cwtl
dec
jle,pn
enter
into
mov
push
cmpsl
shl
outsl
out
ja
add
xor
jno
xchg
jbe
push
or
shll
jl
cmp
inc
stc
xchg
out
jo
inc
test
adc
or
jbe
mov
jge
xchg
dec
iret
call
pop
test
push
ret
mov
cmp
push
mov
and
pop
mov
fimull
or
cli
in
mov
lret
mov
in
pushl
out
out
sbb
xor
and
fldcw
ss
xor
jae
sub
inc
xchg
jecxz
addb
test
pop
lret
or
mov
inc
adc
lret
fldt
jno
sbb
cmp
mov
pop
mov
fnstcw
loopne
scas
mov
movsb
fnstenvs
sbb
inc
add
leave
mov
sbb
pop
add
fld
test
icebp
mov
enter
test
xor
popf
fisttpll
push
add
push
mov
out
sbb
push
mov
shl
outsb
mov
les
fwait
or
xor
daa
mov
and
jbe
cli
negl
mov
mov
pop
fdivl
sbb
hlt
data16
into
ficomps
sbb
xor
incb
xchg
inc
lock
cltd
scas
ljmp
test
mov
xor
mov
jmp
hlt
or
ds
addr16
outsl
dec
jo
sub
sbb
jno
add
data16
dec
adc
out
or
cmp
scas
dec
sti
mov
nop
xchg
jmp
and
je
leave
or
scas
aam
sub
fs
sub
sarb
ja
cmp
sahf
add
lahf
cvtdq2ps
mov
pop
pop
mov
xor
push
call
lret
push
lods
mov
rcr
inc
int
rorl
adc
cmp
mov
je
orl
cmp
jno
into
sbb
jo
out
sbb
and
cli
aaa
mov
pop
sub
sub
sub
mov
les
andb
test
rcl
adc
fbld
mov
add
daa
mov
adc
mov
add
pop
xchg
mov
or
add
pop
inc
mov
sub
rcl
insb
add
sti
cmpl
dec
sbb
xchg
hlt
imul
out
cmpsl
and
andl
cmp
aas
int
iret
sub
roll
jnp
adc
pop
shlb
pusha
pop
or
xor
cwtl
add
sbb
inc
aad
loope
sub
sub
lcall
ja
jecxz
lret
leave
mov
dec
mov
cltd
mov
xchg
aas
subb
addl
bound
aaa
fdivs
fmull
cs
push
sub
cmp
mov
jno
leave
arpl
mov
jbe
cmp
popf
xchg
aas
andl
ret
pop
inc
je
data16
out
mov
or
jbe
xchg
leave
push
cmc
rol
pop
imul
push
mov
es
mov
xchg
loopne
jb
call
dec
mov
sbb
pop
outsb
lods
sbb
in
ljmp
jae
fiaddl
sbb
ljmp
fucomp
insl
enter
adc
ror
and
into
ss
jnp
mov
push
mov
xlat
mov
cmp
pop
lcall
jne
imul
dec
cmp
jns
pop
cmp
sarl
dec
push
int3
bsf
push
and
lahf
stos
adc
inc
mov
daa
lret
push
cmp
rcl
fwait
test
inc
lahf
fiaddl
lds
js
rolb
dec
dec
int3
fcomps
push
repz
arpl
jo
iret
fistl
test
add
outsl
sahf
mov
test
ret
mov
xchg
or
lock
and
xor
lahf
pusha
aas
push
add
mov
pop
cmp
filds
jg
xor
das
andb
fcmove
sbb
and
push
jl
aas
pop
dec
add
andl
in
mov
cmp
shlb
cmpsb
pop
sbb
or
sub
outsb
and
sti
testb
fiadds
push
out
sub
imul
adc
mov
push
stc
adc
iret
push
fsub
test
mulb
xlat
aad
js
scas
ret
mov
inc
xchg
test
lds
adc
and
out
dec
pop
adc
fidivrl
jne
not
stos
mov
xchg
inc
sbb
cmpsb
xchg
adc
bound
mov
lret
lea
jo
out
mov
mov
out
in
addr16
and
scas
shrb
ss
cmp
ljmp
pop
shll
and
pop
jmp
push
jno
or
ret
cmp
lods
sbb
loope
dec
in
inc
sub
add
push
out
jge
clc
xor
into
lods
popf
xchg
add
mov
fildll
inc
cwtl
test
jge
in
hlt
inc
stc
fcmovb
sub
and
lahf
add
pop
outsl
add
jmp
ds
leave
std
stos
jl
xlat
add
sub
lret
add
cli
jno
clc
sub
fimull
push
insb
lea
stos
cmp
sbb
cmp
iret
mov
adc
movsb
ljmp
inc
mov
and
lods
arpl
movsb
out
int
in
mov
mov
cltd
fldenv
jmp
loop
adc
imul
scas
fwait
pop
mov
xchg
pop
inc
jg
xor
loope
cmp
jle
push
lret
movsl
in
lcall
popl
lret
xor
xor
lods
fidivrs
daa
hlt
jp
scas
jo
mov
and
mov
mov
inc
imul
xor
fisubrl
mov
nop
push
jo
fmul
cmp
push
cmp
dec
mov
sbb
pop
mov
and
dec
mov
dec
cmpsl
fists
insl
sarl
cs
cmp
mov
sub
mov
dec
push
xlat
push
mov
sub
ja
pop
test
outsb
aaa
inc
mov
inc
dec
mov
loopne
pop
sbb
mov
lret
pop
jl
gs
dec
test
push
and
int3
cs
movb
lds
sbb
ja
push
dec
out
mov
jecxz
xchg
push
cmp
test
mov
ret
les
cmp
clc
xorb
push
les
loop
jb
and
jne
hlt
in
clc
and
rcl
jecxz
scas
fcos
sahf
cmp
scas
mov
jno
stc
mov
cmp
and
scas
jl
mov
push
pop
test
loopne
repnz
shrb
xor
mov
pop
cmc
sbb
imull
push
cs
xchg
sahf
mov
inc
test
call
in
mov
ret
movsl
inc
es
lahf
aaa
xor
leave
stos
sbb
sub
adcb
mov
jbe
xor
fisubrl
popa
out
fwait
mov
test
xor
jne
dec
sti
pushf
push
test
aas
insl
push
sub
out
ret
mov
in
xor
add
sahf
jno
xor
mov
clc
adc
je
cmp
jmp
sub
mov
mov
aad
jle
loop
leave
dec
or
push
lods
movl
lret
rep
out
sbb
aam
inc
int3
mov
arpl
les
into
cmp
ret
adc
fisttpl
cmp
pushf
push
xchg
mov
mov
cmp
repnz
inc
icebp
cmp
int3
movsl
shrb
idivb
daa
xchg
mov
mov
and
sub
push
addr16
jge
xchg
add
call
pop
cmp
sbbl
mov
in
addb
pop
shl
fdivrs
incb
add
shr
fldenv
adc
or
cmpsl
push
je
int
xchg
xor
ljmp
lcall
xor
sub
in
xor
ret
dec
lret
inc
sti
push
and
test
test
jne
addl
out
std
mov
lret
out
dec
test
push
xchg
jno
add
mov
pop
insb
mov
rclb
call
lret
push
lret
mov
cmp
into
mov
pop
aam
jns
push
jae
pop
or
addr16
sub
push
mov
rcrl
xchg
jge
hlt
stc
stos
les
sbb
pop
push
out
rorl
jg
push
gs
fldcw
xor
int3
mov
adc
mov
mov
pop
adc
loop
ja
icebp
add
jb
push
or
pusha
cmpsb
out
pop
adc
push
jmp
in
insb
or
rolb
mov
mov
push
arpl
stc
into
cmpb
pop
stos
cltd
fsubrl
imul
pusha
xor
repnz
mov
xlat
or
mov
enter
cltd
cld
inc
not
incb
movsb
aas
sbb
cltd
jmp
popf
add
enter
rclb
lods
lret
add
xchg
fdivl
xchg
sbb
sub
or
cmpsl
cmp
xchg
sub
aad
out
xor
fcomps
enter
sub
dec
inc
xchg
xchg
mov
aad
xor
lea
fwait
pop
fdivrp
es
push
add
sub
incl
shlb
add
testb
push
push
out
mov
into
jnp
dec
inc
ja
and
popf
bound
inc
adc
push
loop
iret
andl
adc
push
in
cmp
je
dec
cld
sbb
rolb
mov
sub
xchg
in
and
loop
inc
cmp
out
daa
adc
std
insb
ror
add
jb
lret
lahf
or
adc
mov
pop
loopne
mov
pusha
rcr
sbbl
into
ds
jnp
sbb
mov
push
sbb
mov
xor
daa
pusha
out
xchg
push
jb
mov
push
aam
jno
cmpsb
sub
js
pushf
clc
jb
fimull
stc
xchg
push
mov
adc
push
repnz
fsts
aaa
fs
in
pop
xor
ret
lret
dec
mov
and
jbe
test
mov
ds
lret
movsl
fs
dec
jle
jno
addr16
je
mulb
cmp
sub
cwtl
push
cmp
jg
in
cmp
adc
hlt
add
mov
sub
stos
stc
pusha
sub
sbb
in
xor
cld
mov
dec
pop
xchg
or
mov
sbb
mov
setae
popf
mov
adc
pop
mov
pop
fidivrs
jne
fwait
jle
outsb
sbb
dec
loopne
in
ret
push
sub
jbe
adc
mov
int3
daa
add
push
and
xor
cmovne
enter
or
int3
mov
in
or
nop
dec
xchg
push
pop
push
pop
pop
cmp
inc
mov
mov
aam
cltd
push
outsb
inc
rorl
xchg
test
xchg
push
sub
aas
lock
js
dec
pop
sub
imul
xor
in
pop
pop
and
lds
jg
insl
inc
cltd
lods
push
xchg
push
mov
pop
cmp
ljmp
outsb
fwait
xchg
pop
jns
clc
lcall
sub
push
enter
repz
or
movsl
das
mov
cli
out
ret
js
adc
nop
sub
mov
fs
cmc
lahf
jne
leave
mov
stc
pop
xchg
sub
test
incl
imul
mov
das
arpl
pop
mov
out
mov
int
mov
icebp
xchg
pop
mov
mov
add
pop
cwtl
repz
cmp
push
mov
dec
sbb
enter
xchg
and
cli
lret
pop
push
lods
mov
dec
xlat
ret
inc
inc
in
into
outsl
jbe
aaa
sbb
or
es
in
fdiv
hlt
into
inc
jmp
mov
fmull
mov
mov
adc
mov
ja
in
loopne
lods
cmpsl
push
mov
stos
jo
mov
test
sbb
mov
xchg
mov
out
repz
mov
lds
lods
cmpsl
sbb
rcl
cwtl
inc
push
xchg
lods
pop
js
out
cmpsl
mov
int3
pusha
loopne
cmc
nop
lahf
inc
adc
icebp
dec
xchg
scas
jg
xchg
aas
cs
mov
ret
in
scas
add
or
jno
mov
ret
into
cltd
ljmp
sahf
or
outsb
repnz
mov
jmp
rcrl
inc
aam
dec
lahf
not
push
jnp
aas
mov
sub
sbb
jb
int
adc
leave
clc
in
lret
inc
jne
imul
jl
mov
add
sbb
inc
icebp
das
out
into
xorb
out
mov
push
or
ds
dec
lcall
popf
jmp
push
push
cmp
dec
cmp
inc
cmpsl
inc
push
data16
mov
into
or
loopne
subb
mov
add
add
scas
dec
ds
jnp
pop
sbb
movsl
xorl
je
out
cs
push
adc
jne
sbb
dec
and
pop
lahf
ja
popa
test
add
addr16
iret
dec
xor
dec
call
lcall
test
inc
imul
les
lahf
pop
idivb
stos
cmpsl
test
xchg
jns
fs
loopne
pop
adc
in
mov
shll
rorl
pop
push
popa
mov
inc
or
cs
sub
add
add
jg
fdivrs
scas
xchg
mov
loopne
or
mov
leave
rcrl
mov
inc
cmc
mov
call
out
into
jb
jo
jle
mov
dec
cmc
mov
push
xor
jo
je
int3
sub
xchg
ficompl
stos
ss
jae
pop
es
popf
mov
mov
stos
pushf
cmp
popf
mov
xlat
xor
add
sub
aam
xchg
pusha
ds
inc
pop
int3
frstor
rcrb
mov
or
icebp
test
xchg
aad
data16
inc
lcall
mov
addr16
fs
push
mov
pop
vmovdqu
mov
lahf
sub
cmp
xor
xchg
jb
call
mov
sbb
sub
xchg
adcb
fwait
movsb
cmp
mov
xchg
ss
cmp
mov
dec
jmp
call
insl
sahf
and
sbb
leave
or
and
xor
dec
lret
repz
pop
out
fdivrs
xlat
scas
leave
call
pushf
pop
cmp
test
and
and
popf
in
cmp
mov
inc
or
pop
loope
and
cmpsl
push
cmpsl
or
das
sbb
sahf
add
inc
aas
mov
imul
fwait
arpl
pop
mov
dec
and
jae
jno
inc
jbe
mov
jg
scas
inc
cmp
pop
cwtl
aad
sbb
dec
adc
std
mov
scas
mov
xchg
and
or
push
adc
or
cli
mov
pop
mov
divb
idivl
or
cli
shl
hlt
aas
xchg
std
pop
stos
push
lds
mov
js
xchg
mov
push
rclb
mov
rcrb
adc
fnstcw
cmpxchg
movsb
leave
stos
andb
lahf
mov
fnsetpm(287
cli
int3
aad
jnp
xor
pushf
mov
ds
loope
inc
js
popf
jne,pt
into
inc
addr16
data16
xchg
jge
or
jbe
bound
fs
addr16
push
rcl
jecxz
cs
out
mov
mov
js
out
xchg
into
imul
scas
into
cmpsl
add
xchg
xchg
sub
mov
mov
es
jp
sub
frstor
push
sbb
lcall
data16
cmpsb
pop
xor
or
dec
aam
divb
push
lea
pop
enter
xlat
loopne
out
bound
mov
push
fiadds
jo
mov
cltd
cmpsl
fs
xchg
xor
fcmovbe
pop
sub
dec
lods
sbb
fcomi
jnp
mov
adc
xchg
mov
out
cmp
push
loopne
jmp
pop
sbb
into
and
popa
enter
lock
mov
mov
mov
and
ret
pushf
mov
xchg
movsl
jle
mov
in
imul
addr16
std
push
sub
inc
lret
push
call
inc
xor
incb
or
out
cltd
in
dec
mov
das
xor
sbb
fdivrl
lea
ret
xchg
les
loop
push
sub
imul
vphaddubw
lret
rorl
or
fcmovnbe
sbb
sub
push
mov
push
jb
nop
mov
jno
and
lret
bswap
mov
pusha
movb
rcl
mov
xchg
test
iret
mov
dec
push
jbe
pop
xorb
sbb
jno
shrb
lcall
out
cltd
push
data16
mov
fwait
lea
cltd
test
and
lock
cs
les
fcos
das
or
xor
xchg
add
ljmp
push
cmp
mov
lret
movsl
mov
push
adc
or
fwait
sti
push
push
jbe
ljmp
xchg
roll
push
into
jns
aam
in
cld
dec
or
stos
mov
pop
or
jne
push
inc
int
push
sbb
ja
push
enter
jae
divl
hlt
rcl
cmpsl
out
inc
das
aam
fst
popf
sub
fwait
pop
sarb
adc
jne
hlt
ja
and
xlat
icebp
nop
jecxz
cmp
outsl
stc
push
cmp
daa
mov
out
in
divb
rolb
xchg
cmp
test
push
jb
fs
lock
in
sbbl
icebp
lret
adc
imul
sti
mov
inc
stos
add
xlat
cmpsb
lcall
in
or
sbb
jbe
mov
inc
leave
aas
dec
mov
scas
arpl
mov
jmp
cmc
add
inc
or
orl
aam
dec
loope
mov
push
arpl
push
sarl
jnp
mov
xchg
jecxz
mov
and
cmp
cmp
dec
sbb
add
ret
cld
sub
lds
subb
adc
mov
inc
call
adc
dec
push
mov
dec
xor
out
mov
ss
push
lods
pop
inc
ja
add
xor
push
imul
fisubrl
jmp
mull
out
fistpl
pushf
imul
push
inc
push
xchg
pop
icebp
leave
loopne
aas
lcall
xchg
iret
test
pop
fs
lcall
push
out
lds
aam
push
test
mov
and
or
mov
push
mov
and
test
lcall
and
xchg
test
dec
dec
ret
popa
push
sbb
lcall
adc
xchg
sbb
or
mov
daa
pop
ljmp
fwait
popa
leave
lret
and
add
out
popf
mov
cmc
mov
ja
addl
xor
call
out
mov
add
sti
jl
xor
insl
lods
push
push
jge
in
neg
ja
mov
in
rclb
mov
fisttpl
nop
jo
mov
in
adc
jmp
insb
cmp
sub
es
jp
fwait
mov
dec
cmpsl
xor
inc
mov
cmp
pop
js
inc
mov
xchg
push
loop
pop
jne
sub
lcall
into
neg
nop
ret
lods
xchg
fwait
jns
jge
data16
icebp
pushf
jp
and
movl
scas
bswap
push
xchg
fcmovbe
sbbl
repz
iret
pusha
jecxz
lretw
mov
cmpsl
rcrl
dec
push
mov
fcoms
sbb
je
push
out
and
insl
dec
add
gs
pop
movsl
cmp
pop
jp
inc
movsl
adc
mov
das
fdivrs
fistpll
icebp
lcall
lret
pop
fwait
loop
aam
enter
test
sarb
gs
and
ljmp
and
mov
lock
cmp
out
pusha
mov
out
add
rclb
and
repnz
add
sub
out
mov
iret
insb
out
in
rolb
xchg
fldenv
fcmovbe
aam
repz
adc
push
jnp
xchg
cmp
fsqrt
xor
push
fsubrs
xchg
xchg
out
dec
cs
jl
out
loop
je
pushf
sub
ret
mov
mov
sub
push
mov
xchg
dec
or
sbb
shll
sub
mov
ljmp
popa
inc
jmp
jns
mov
ja
int3
dec
or
xchg
repz
pop
inc
clc
jae
xorb
shlb
mov
int
ja
push
inc
inc
mov
mov
mov
or
xchg
mov
imul
push
adc
fstl
push
ss
ret
into
push
test
repz
inc
filds
dec
cli
push
add
jno
adc
into
jo
inc
pop
out
pop
jne
popa
push
jle
pop
jle
lret
dec
pop
cld
fldt
pop
pop
jne
icebp
test
jbe
xchg
adcl
sub
dec
push
add
dec
int
jp
js
cmp
sub
jg
mov
arpl
test
dec
push
dec
jl
lock
mov
shlb
and
pop
or
jns
xchg
push
mov
or
or
push
jns
cmp
mov
adc
sub
sub
pop
dec
sub
movsb
aam
int3
and
ss
dec
cmpsl
push
test
jne
pusha
je
int
push
push
fcompl
dec
not
jge
hlt
mov
jne
mov
in
js
sti
aas
les
sahf
test
arpl
pop
inc
shr
cwtl
jbe
lods
add
adc
fistpll
test
mov
clc
dec
or
imul
ljmp
sbb
push
xchg
into
sbb
pop
dec
inc
shrb
add
addl
jp
push
aam
or
test
mov
add
pop
cmp
bound
int3
sub
movsb
and
out
mov
mov
xchg
mov
aaa
cmpsb
sub
and
pop
dec
push
xchg
adc
pop
adc
jmp
cmpsb
cld
gs
inc
js
sub
jno
dec
fcoms
pop
xlat
lods
mov
imul
enter
lret
clc
hlt
mov
push
icebp
imul
inc
jns
ja
dec
stos
sbb
sbb
xchg
fildll
adc
xorl
into
cltd
pop
sahf
cmc
shr
adc
mov
incl
sti
sub
dec
sbb
pop
aam
lret
lods
icebp
push
fcoml
dec
int3
dec
imul
pop
and
push
aaa
mov
jmp
out
gs
repnz
loopne
sbb
inc
inc
test
jmp
into
fwait
push
push
fstl
cmpl
cli
inc
stos
scas
insb
add
sub
leave
jle
xchg
xchg
rolb
cmp
je
sar
push
sbb
out
dec
in
ret
insb
int
dec
divl
rol
xor
lea
jbe
dec
loope
int3
sub
je
ljmp
xchg
cmp
mov
aad
loop
pop
les
int
inc
fwait
das
inc
enter
dec
hlt
xchg
mov
jbe
adc
xchg
js
int3
adcb
jge
pop
and
or
xchg
xor
jmp
clc
sbb
push
sub
mov
mov
jo
dec
es
and
loope
inc
inc
stc
jns
rorl
test
mov
in
mov
sub
orl
lahf
push
cmp
dec
int
add
stos
test
clc
sub
push
test
push
jge
jbe
int3
jb
inc
in
mov
jbe
mov
idivl
nop
adc
sbb
cmpb
push
xchg
cmp
movsl
mov
mov
bound
xor
mov
push
xor
outsb
mov
sbb
xchg
mov
sbb
inc
mov
pop
es
sahf
repnz
pushf
or
lods
sbb
out
add
call
push
dec
fistps
jecxz
lret
sbbl
lods
in
into
mov
pop
add
cltd
lods
or
in
sub
pop
js
cwtl
outsl
mov
xchg
push
sarl
inc
adc
test
push
inc
lret
stos
jmp
mov
ss
mov
dec
pop
jecxz
jp
pop
arpl
mov
jle
imul
fildll
aad
sub
xchg
mov
cmc
mov
and
rcrl
xor
cmpsl
dec
sub
out
jge
xchg
stos
ja
xchg
in
bswap
fcomi
cmp
mov
dec
jp
pushf
nop
cld
sub
cld
fdiv
std
idivb
fcompl
xchg
loope
mov
lcall
push
push
or
in
xchg
add
in
jne
inc
sub
je
movsl
jecxz
xchg
sbb
adc
inc
pop
pushf
ljmp
jne
xchg
jp
scas
dec
xor
sub
negb
int
dec
pop
js
outsb
es
add
mov
pop
popa
pshufw
aam
add
xor
fcmovu
sbb
lcall
les
xor
movsl
dec
cmp
jbe
lds
int3
adc
and
adcl
mov
cmp
add
data16
adc
push
fimull
xchg
popf
cwtl
pop
mov
loope
out
xor
push
or
inc
mov
popf
jae
jge
jp
sbb
in
xor
ja
repz
sbb
sti
xor
adc
mov
inc
push
mov
jo
push
push
pop
imul
stc
cli
jmp
cwtl
testb
dec
mov
lea
push
pop
pop
fistpl
insb
jmp
push
into
icebp
arpl
pop
repz
loopne
out
cmp
outsb
sbb
stos
mov
dec
mov
mov
mov
psubusw
nop
mov
xlat
data16
jae
adc
fucomi
aam
mov
aam
pop
icebp
ffreep
test
mov
or
iret
and
or
mov
sbb
lock
int
mov
mov
testb
dec
hlt
sbb
scas
int3
out
mov
adc
fiadds
sbb
mov
std
iret
call
sub
aad
xor
dec
xchg
dec
inc
push
add
es
jbe
push
jae
lods
lcall
adc
add
mov
xchg
out
mov
pop
outsl
adc
test
cmp
jbe
sbb
jmp
sarb
xchg
mov
lea
hlt
inc
mov
jb
add
adcb
je
negl
mov
pop
lods
xchg
adc
jne
inc
sub
adc
push
sbb
es
fimull
out
push
xchg
inc
jne
and
jl
dec
test
mov
push
xchg
mov
in
mov
fistl
xor
sbb
add
bound
or
mov
jge
sub
mov
push
stos
lcall
mov
shrb
icebp
lods
and
mov
jbe
push
ror
arpl
imul
enter
adc
sti
in
aaa
xchg
adcl
dec
inc
add
mov
dec
and
lret
nop
add
adc
std
sub
mov
rcr
sub
aas
dec
and
mov
lods
icebp
push
xor
int3
loop
jmp
sbb
shll
sbbb
pop
ja
sub
adc
out
sub
pop
push
ljmp
mov
mov
adc
cltd
and
xchg
fst
and
fwait
push
and
sub
insl
push
lret
xchg
sbb
cli
ds
icebp
and
sbb
pop
push
sub
push
movsb
mov
push
push
daa
sbb
lds
mov
cmc
sub
int3
movsl
push
add
dec
incb
xchg
fstps
sarb
iret
mov
sbb
out
inc
int3
lcall
sarl
or
cld
in
cmc
cli
loopne
xchg
dec
sti
lods
aam
dec
int3
aas
sahf
jbe
xlat
sbb
shrb
jbe
cmp
inc
ss
jle
fisttpl
fiadds
jne
stos
movsl
hlt
xchg
dec
popw
lahf
fcmovb
mov
xchg
das
mov
dec
lcall
daa
lds
cmc
sub
ficompl
or
clc
inc
mov
jp
jg
sti
lret
add
xchg
mov
hlt
xchg
pop
lods
mov
or
cmpsl
test
sbb
push
loop
xor
pop
loope
fidivrl
movsb
cld
stos
ret
dec
dec
dec
int
lret
push
mov
ss
ljmp
and
jp
aas
cmpsl
xchg
adc
sub
dec
mov
pop
sbb
aaa
aam
sahf
rorl
scas
cmp
test
jecxz
or
dec
ljmp
mov
pop
add
ret
mov
nop
pushf
cmpsb
int3
adc
sub
dec
jns
cmp
pop
jle
in
lahf
loope
lods
sub
in
sti
rorl
out
in
xchg
loope
xlat
mov
lods
fcmovnbe
mov
push
or
movsl
jno
cmp
inc
hlt
fmuls
aad
loopne
push
mov
xor
pop
add
ss
insl
mov
sub
in
xchg
iret
mov
sbb
shrb
mov
xor
mov
jmp
inc
movsl
inc
adc
incl
push
push
sub
jbe
jle
xor
aam
jo
cmp
popa
and
out
test
add
insb
jbe
mov
cmp
push
push
lret
mov
sarb
push
je
mov
cltd
shl
push
aad
xchg
or
cli
jne
shrl
xlat
daa
dec
std
xchg
call
adc
mov
sbb
mov
jp
movsb
mov
icebp
push
mov
mov
jbe
fidivl
int3
pop
or
hlt
lea
out
inc
xchg
and
cld
mov
bound
lods
stc
add
ja
ss
pop
dec
cmp
xor
xchg
repnz
into
test
jmp
mov
mov
dec
lahf
add
rorb
roll
pop
repnz
ret
sahf
mov
xor
rcl
mov
aad
jbe
repnz
mov
inc
jbe
jp
daa
orb
sbb
mov
sub
jg
popf
push
sub
notb
lods
loop
lcall
ficomps
scas
add
arpl
push
jo
repnz
into
cmpsl
in
pop
mov
mov
xor
out
inc
mov
mov
sub
cwtl
stos
push
inc
push
stos
jmp
jne
ret
je
mov
xor
arpl
sbb
add
ja
not
lds
xor
fisubrl
xchg
push
mov
stos
xchg
iret
rcl
enter
lcall
xor
inc
enter
stos
out
pop
cmpsl
pop
icebp
xor
scas
insl
loop
inc
out
or
pop
daa
pop
les
ret
xor
sub
outsl
mov
and
sbb
cmpsl
adc
sub
mov
pop
mov
lret
and
or
xor
inc
xchg
popa
ja
inc
icebp
incb
jmp
push
in
sbb
pusha
scas
int3
fstpt
fs
stos
pop
lods
add
mov
mov
and
out
fstp
push
lahf
mov
push
addr16
jbe
jmp
das
stos
outsb
adc
add
std
jp
xchg
bound
test
mov
adc
rcll
pusha
jo
pop
dec
lret
jnp
loope
adc
cltd
nop
out
jmp
rclb
outsb
dec
push
aas
pop
pop
ljmp
insb
repnz
jae
aaa
add
rcll
mov
push
sahf
aaa
insl
pushf
pop
adc
rolb
inc
das
into
jns
or
fs
std
rclb
neg
rorb
loop
jne
mov
mov
mov
popf
xchg
in
lcall
adc
xor
ret
and
mov
bound
inc
pop
jns
test
sti
call
sub
push
divl
out
mov
jnp
jns
loope
and
inc
rcrl
mov
int3
adc
pop
lock
rorl
pop
out
cmp
leave
inc
out
inc
aam
and
inc
lret
inc
std
inc
pushf
add
imul
sub
out
cmp
and
add
out
push
movw
fimull
cmpsb
rcrb
fs
adc
lods
add
scas
fwait
pusha
push
xchg
lods
pop
movsb
push
sbb
pop
pop
lret
mov
xor
and
jb
mov
stos
mov
rcll
das
sbb
out
xchg
into
cmpsl
into
insb
popf
jns
mov
jb
filds
mov
insl
xor
testl
adc
shlb
sub
xor
jge
dec
shrb
xor
inc
pop
mov
jl
lret
int
xchg
test
daa
sarb
jae
fcomps
adc
lret
rcll
pop
cmpsb
insl
fcoms
ds
pushf
out
adc
mov
mov
das
aas
and
movsb
and
push
sbb
popl
repz
dec
sbb
lods
decb
push
cmp
jmp
les
mov
mov
or
mov
sub
decb
push
xor
sahf
inc
lret
xchg
pop
int
data16
movb
mov
popf
pop
repz
and
xor
jmp
adc
lret
or
mov
pop
and
daa
sub
into
sbb
scas
push
jbe
psubsw
jbe
sbb
xor
pop
sbb
sbb
mov
arpl
or
in
test
or
pop
jmp
mov
outsl
xor
mov
shrb
and
push
push
dec
pop
push
and
lods
aad
adc
jb
das
dec
cld
sbb
push
loope
lods
sti
out
mov
sbb
cmp
popf
jmp
lret
cwtl
movsb
push
imul
or
aaa
fidivl
xor
int3
dec
sbb
xchg
jp
aad
and
adc
add
lea
jnp
out
mov
lods
xchg
lret
inc
loop
out
push
out
popa
sub
rorb
pop
mov
mov
xor
or
iret
ss
lea
ret
dec
sbb
ficompl
xor
dec
xchg
fildl
cli
addr16
imul
jbe
push
loopne
push
ss
mov
mov
scas
fisubrl
pop
ds
sbb
stos
gs
mov
dec
pop
add
inc
addr16
arpl
sbb
and
push
rcrl
mov
ljmp
jge
outsl
sbb
jp
inc
in
dec
dec
in
lods
stos
xchg
sub
cmp
shrl
sbb
outsb
into
mov
in
addl
jno
sarb
lds
adc
lret
sub
leave
inc
movsl
fldcw
sub
pcmpeqd
cmp
adcb
mov
mov
xor
scas
out
imul
roll
lock
xor
lcall
vcvtps2pd
jmp
cltd
loope
sbb
rcrb
cmp
mov
js
lock
adc
pusha
push
mov
les
into
fadds
addb
test
lret
jmp
cmp
dec
push
jo
or
inc
je
sbb
xchg
mov
sub
mov
gs
xlat
ret
jno
fs
lret
mov
jae
mov
out
idivl
jle
or
out
pop
mov
mov
xor
jo
push
into
fcomps
dec
sub
cmp
test
sbb
movsl
imul
fcomp
jns
mov
mov
test
cltd
xlat
out
repnz
sbb
ds
push
mov
push
jl
fimuls
repnz
add
int
testl
xchg
int3
lcall
sub
ror
cwtl
xor
mov
sub
fsubrl
loop
mov
lock
xor
fisubs
or
mov
data16
int
pop
ljmp
inc
data16
pop
xor
inc
mov
pop
movb
and
mov
adc
mov
mov
xor
xchg
xchg
enter
pop
inc
stc
mov
mov
es
xor
or
mov
aaa
lret
xchg
fcmovbe
iret
cltd
lahf
pop
mov
push
xor
jl
loopne
dec
push
mov
push
out
hlt
int3
fimuls
or
bound
mov
add
addl
or
inc
push
xchg
les
or
test
mov
ret
adc
xor
add
test
divl
cmp
fdivrl
ret
push
in
shr
cmp
loope
xchg
dec
inc
test
shrl
dec
fs
addr16
mov
mov
xchg
xchg
inc
into
or
mov
push
jl
sub
dec
xor
out
xorb
push
stos
dec
jnp
cwtl
add
call
sub
adc
xor
es
jmp
add
in
mull
lret
mov
lods
mov
sub
negb
iret
dec
imul
cmp
mov
aad
lret
pop
shlb
mov
scas
sbbl
lcall
icebp
fisttpll
lret
pop
xchg
push
xor
test
mov
xchg
rol
aad
push
cmp
add
ror
movsb
dec
mov
sub
enter
clc
ja
pop
repz
aam
lods
sub
add
mov
sti
cmpb
xor
aaa
xchg
int3
adc
or
outsl
shll
shrl
insl
push
inc
push
mov
or
xchg
out
das
and
push
push
ljmp
gs
shl
lret
fwait
outsl
addr16
xlat
push
mov
push
inc
inc
stos
pushf
jae
mov
mov
mov
and
call
lcall
xor
jl
or
jmp
xor
movaps
into
mov
loope
jecxz
ds
iret
lret
push
cmp
xor
sub
push
addr16
mov
je
lea
repnz
mov
adc
push
sbb
ja
in
insb
insl
popf
jl
push
iret
mov
test
pop
inc
adc
xchg
scas
push
test
imul
leave
pop
dec
push
and
push
or
loope
test
ja
lahf
js
ss
and
cmp
call
xlat
jnp
adc
push
cmp
push
jae
xor
adc
test
fsubp
std
popf
mov
push
xor
into
dec
insl
xchg
mov
into
rolb
and
push
sti
loopne
dec
inc
adc
sahf
xchg
lcall
inc
test
adc
dec
sti
and
out
cmp
or
pusha
out
inc
mov
jnp
fmulp
and
adc
lret
pop
cwtl
and
cmp
sbb
sub
push
cmp
xor
inc
push
cmpsl
mov
cmp
sbbb
and
mov
mov
sbb
push
cmp
xor
mov
mov
bswap
ljmp
cltd
lcall
jno
lock
insb
mov
push
ss
fwait
xor
xor
xchg
jbe
je
push
in
sahf
adc
xlat
fadds
loopne
push
pop
cmp
js
icebp
gs
jnp
pop
mov
outsl
addr16
setne
dec
dec
shr
add
lret
sahf
push
mov
das
mov
aam
or
add
dec
mov
add
push
sub
jb
push
push
jno
mov
sub
cmpsl
mov
repz
lret
cwtl
gs
mov
jbe
dec
fisubrs
xchg
add
xchg
mov
lods
not
dec
fwait
pop
not
jb
pop
sub
data16
jne
cs
lret
dec
cmpsl
push
in
in
mov
movsb
stos
js
xlat
sbb
inc
gs
jge
mov
jne
rclb
lret
aam
or
sahf
add
jp
test
cmp
mov
jae
or
icebp
ror
sarl
loop
dec
int3
sub
push
push
sbb
ds
repnz
push
mov
dec
pop
popa
inc
out
xor
mov
push
mov
or
lock
nop
push
movsb
cmpsb
out
test
inc
and
enter
int
add
es
push
cmp
inc
in
into
stos
cs
mov
dec
dec
cltd
xchg
stos
jns
lcall
es
ret
aas
adc
aam
xor
mov
cmpsb
xor
add
out
sub
data16
cmp
dec
sbb
rolb
jns
arpl
movb
pop
sti
push
adc
lcall
inc
pop
aad
lock
cs
jbe
cmp
adc
stc
out
aas
clc
fldl
pop
out
xorb
ja
pop
mov
fimuls
mov
sarb
jp
and
scas
xchg
xor
dec
jp
js
xchg
inc
outsl
inc
imul
lret
push
xlat
lods
sub
pop
mov
sbb
rcl
and
ja
repz
mov
pop
in
adc
adc
add
xor
push
lds
sub
jbe
cmc
mov
pushf
xor
adc
jae
push
test
and
mov
lcall
aam
xchg
mov
xlat
mov
xorl
stos
jo
xchg
mov
lock
lods
sub
dec
aas
test
loop
mov
filds
addr16
mov
in
aam
add
xor
movsb
fistl
pop
mov
mov
shll
xchg
popf
cmp
xchg
jl
push
push
xchg
sbb
outsb
out
stos
push
cld
das
sbb
pop
inc
mov
fwait
mov
sub
or
push
test
lods
xchg
das
jp
test
lret
enter
sbbb
mov
and
lahf
push
cli
jnp
ds
aad
gs
int
das
ljmp
js
add
rorb
add
inc
int
add
sahf
jo
push
lar
cwtl
xchg
lret
dec
fcom
mov
mov
mov
scas
xor
adc
mov
push
out
jo
fwait
es
xor
or
test
int
out
movsb
sbb
dec
or
push
aam
inc
pushf
mov
stos
mov
fidivrs
inc
sbb
inc
cli
out
push
ljmp
jno
mov
push
std
push
add
aaa
das
cs
pop
fnstcw
sti
addr16
mov
icebp
outsl
mov
int
scas
cmpsl
add
jge
addr16
push
aas
dec
call
push
xchg
add
fadd
mul
test
es
es
into
repnz
out
mov
out
std
or
mov
xor
add
mov
lods
xchg
push
xchg
push
outsl
std
sti
test
jne
flds
push
mov
in
cmp
cmc
adc
or
fs
push
testb
into
into
sbb
loopne
sub
cmpsl
xor
ror
das
andb
dec
repnz
stos
cmp
int
pop
xchg
jo
into
hlt
lret
pop
scas
jnp
cmpsl
jge
aas
inc
cli
movsb
jg
outsb
mov
adc
fst
pop
js
bound
lods
loope
popl
and
rcl
or
xchg
fisttpl
outsl
in
xor
insb
fiadds
out
xor
shlb
sarl
out
movsl
lock
push
cmp
jbe
xor
stos
mov
mov
sub
mov
mov
sub
scas
and
cmp
popf
test
xchg
imul
mov
fsubl
repnz
jmp
xor
pop
enter
cli
push
imul
xchg
mov
adc
jg
adc
cld
sbb
or
pop
or
sbb
sahf
adcl
add
aam
in
mull
movsl
lds
imul
iret
loopne
arpl
int3
jge
addr16
into
lahf
xor
je
in
mov
std
xor
pop
lret
sti
scas
and
bound
jle
sbb
push
fstpl
sahf
dec
pop
int3
aam
adc
add
dec
mov
push
jo
into
lods
shr
jg
or
push
mov
xchg
dec
cmp
xchg
pop
sbb
bound
add
icebp
cmp
enter
inc
add
push
pop
cmc
lods
test
or
icebp
push
lret
ds
das
xchg
pushl
enter
pop
popa
dec
cmp
push
movsl
inc
or
mov
rcr
push
mov
pop
mov
add
push
xchg
push
ds
into
sbb
in
dec
mov
out
pusha
adc
mov
xchg
push
mov
into
fidivrl
dec
xlat
pusha
cli
fsubl
cmp
add
dec
cmp
push
mov
push
mov
leave
pop
cltd
inc
rcl
xor
inc
dec
adc
adc
fnsave
int
pop
mov
and
pushf
repz
pop
push
xor
js
pop
imul
mov
sub
xchg
outsb
jl
int
sbbl
mull
es
inc
out
popa
cmp
rorl
sub
call
jne
xchg
sub
xchg
adc
decb
push
sbb
push
sub
push
pop
stc
or
push
lods
aad
cmp
adc
dec
mov
mov
jne
cli
jge
or
push
inc
nop
mov
dec
into
mov
cmpsb
sbbl
inc
jb
clc
movsb
scas
jne
aam
jo
mov
mov
inc
xor
mov
loope
fdivr
xchg
cmpsl
mov
push
mov
sti
shrl
imul
sbb
fcoml
mov
jbe
jmp
dec
stc
in
cmpsl
loopne
mov
shr
in
cmp
xlat
mov
push
in
mov
fs
xchg
es
or
lods
in
cmp
lret
pop
mov
push
seto
sbb
jne
xor
test
sbb
pop
fs
andl
int
jge
test
out
xchg
ret
sub
mov
or
sbb
or
push
add
cmp
hlt
aas
and
pop
dec
dec
inc
dec
mov
sbb
ja
xchg
lahf
xchg
movsb
insl
mov
jb
imul
cmpl
push
mov
into
xor
pop
out
in
pop
stos
xlat
sbb
scas
pop
add
or
hlt
ret
cmpsl
or
into
lds
mov
popa
add
insb
push
inc
and
and
lock
cld
and
inc
inc
sarb
movsl
aas
or
pop
out
mov
mov
aad
xchg
sub
xchg
idivb
or
out
fnstcw
add
aaa
mov
or
push
push
adc
test
fwait
sub
cmp
out
xor
sub
stos
aad
mov
popa
jns
cmpsb
sub
pusha
int3
ja
dec
sbb
jl
ret
adcb
bound
dec
test
mov
popa
addr16
jne
push
mov
xchg
sbb
cltd
fcmovne
pop
repz
or
sub
ds
add
lahf
dec
jge
and
fcoms
je
in
jae
mov
push
jp
rcll
rclb
rcll
test
rol
pop
or
or
daa
lods
inc
enter
inc
movl
pop
fimull
inc
orl
cmp
dec
gs
adc
jnp
in
popa
jne
or
or
lahf
aaa
scas
in
imul
mov
out
mov
cmp
cmp
or
rclb
pop
popf
hlt
jnp
loopne
or
jae
pop
lock
and
jbe,pt
subb
es
test
orl
js
mov
jmp
or
inc
movsl
inc
pop
xchg
ret
xchg
lods
or
fcoml
inc
hlt
sub
aaa
mov
in
out
rcrb
vpsubusw
incl
cltd
push
sbb
push
inc
adcb
pop
fisttpll
addr16
cld
xchg
mov
sub
in
subl
lods
movsl
rcll
stc
popf
in
mov
xlat
inc
movsl
shll
into
cmp
pop
dec
into
or
loop
jle
jg
out
sbb
test
inc
pop
add
sbb
pop
cmp
mul
scas
pop
jecxz
pop
nop
out
test
jbe
adc
or
and
dec
push
mov
inc
outsb
mov
shrl
xchg
out
jnp
in
xchg
xorl
call
test
nop
pop
add
xor
cmpsb
add
scas
or
lcall
int3
sahf
cwtl
cltd
mov
out
rcll
and
fs
pop
xchg
cld
cmp
or
loop
into
shr
push
mov
inc
jnp
test
movsl
dec
js
xchg
shlb
mov
sbb
inc
push
dec
xlat
inc
mov
roll
push
xchg
xor
hlt
mov
bnd
popf
out
adc
frstor
lahf
sub
push
inc
mov
sbb
out
out
arpl
dec
sub
adc
into
push
xor
stos
sub
adc
test
jecxz
lods
adc
or
sub
sbb
imul
fldt
aam
lds
inc
shl
xchg
pop
xchg
out
or
stos
lods
shr
push
adc
mov
insl
aad
cli
repz
shlb
sahf
pop
testl
ss
pop
pcmpgtb
in
cltd
sbb
push
adc
sarb
push
pusha
stos
add
pusha
loope
dec
add
xor
shl
xchg
push
fmuls
lret
shl
clc
dec
lods
addr16
push
jbe
cmc
or
mov
mov
mov
inc
xchg
mov
sbb
push
xor
int
out
fs
jl
ljmp
mov
sbb
div
in
pushf
ss
adc
mov
fcmovbe
and
add
dec
jno
push
fsub
mov
push
push
ret
xor
outsb
xor
leave
aaa
jle
into
sub
mov
pop
add
mov
test
cmp
dec
ret
insl
mov
out
mov
mov
mov
sub
jo
idivl
test
rorl
xor
mov
movsl
adc
incl
shll
mov
fcoms
pop
mov
movsl
push
jo
mov
jbe
push
sbb
call
inc
ljmp
mov
lahf
cli
push
fstpt
aam
inc
xor
mov
cltd
mov
add
stos
popa
push
ljmp
mov
push
jne
rclb
mov
push
test
lds
inc
mov
or
jbe
xchg
push
xchg
mov
scas
fisttpl
out
stos
push
pop
xchg
lods
ficoms
add
jl
test
jae
fwait
stos
pop
call
mov
inc
mov
cmpsl
daa
out
lods
mov
int3
mov
xchg
jge
inc
insl
xor
cmp
nop
cld
popa
xlat
push
std
shlb
movsl
or
insl
cli
insb
mov
loope
mov
mov
sbb
add
jns
ficomps
push
bound
movb
push
push
inc
outsb
sbb
adcl
les
int3
push
outsb
xor
pop
lea
cmpsb
scas
xchg
inc
pop
movsb
adc
or
out
dec
movl
mov
daa
cmp
out
xchg
adc
jp
inc
sub
and
scas
lds
jbe
out
cmp
pop
rorb
sahf
cltd
push
insl
mov
xchg
iret
add
div
cltd
mov
sahf
xlat
fs
arpl
push
leave
std
xor
lret
pushf
mov
inc
xchg
incl
lahf
push
mov
fnstsw
into
shrl
sub
out
std
repz
xor
jmp
popa
arpl
loope
pop
loopne
mov
out
jge
aad
or
lods
mov
std
add
pop
push
ret
jl,pt
jmp
inc
cmpsb
fistpll
out
loopne
test
mov
mov
scas
es
xchg
cmp
data16
and
mov
aad
adc
push
stos
or
int3
mov
sub
jge
insb
push
aam
jne
call
std
mov
cmp
or
cmp
cmp
sub
lret
jle
int3
and
in
add
ret
das
leave
adc
xchg
popf
mov
cmp
and
in
xor
hlt
loop
adc
negl
cmp
into
sub
stos
cmpsl
inc
addb
dec
adc
stos
int3
andl
adc
jo
xchg
xchg
push
or
sbb
mov
adc
mov
add
xchg
adc
xchg
adc
adc
dec
idiv
push
push
sub
insb
ljmp
dec
outsb
cs
arpl
shrb
or
pop
or
mov
gs
cs
and
push
push
dec
int3
jl
cmp
test
cld
mov
jp
adc
into
movsl
nop
inc
daa
jmp
arpl
into
iret
mov
pop
sbbl
out
jg
fcmovnu
sbb
dec
mov
and
mov
leave
adc
gs
sbb
rcr
sahf
sbb
and
arpl
jnp
lret
dec
pop
jg
dec
dec
push
lcall
lea
mov
addr16
or
or
out
pop
inc
and
ljmp
pop
js
stc
cmpsl
int3
cwtl
into
fwait
shll
push
xor
in
dec
je
cmp
sbb
sahf
xchg
dec
into
pop
cmpsl
and
ja
push
addr16
inc
pop
xchg
pop
shrb
xchg
push
in
or
lret
stc
mov
pop
repz
and
mov
shrb
mov
push
clc
icebp
jno
dec
mov
aas
or
pop
push
fsave
hlt
mov
push
lret
pop
in
mov
cmc
movsl
mov
push
cwtl
ret
iret
adc
push
addr16
lods
mov
sub
lahf
clc
daa
cmp
adc
es
inc
int3
mov
lock
mov
data16
xor
jbe
xchg
add
mov
insb
pop
xchg
outsb
out
std
jae
inc
ret
jl
mov
in
cmpsl
enter
xor
xchg
mov
pop
mov
adc
mov
push
pop
in
push
lret
sub
dec
shlb
mov
jp
leave
dec
sub
ret
int3
xchg
mov
outsb
mov
sub
xchg
mov
in
mov
insb
adc
pop
mov
ds
jle
xchg
xchg
orb
dec
adc
lret
loope
gs
cmp
repnz
aaa
jecxz
mov
add
fiaddl
push
pop
pop
xor
push
jno
out
xchg
fistpll
cwtl
sub
inc
out
dec
xor
dec
cmp
adc
sbb
add
or
sbb
test
dec
fbld
popa
xchg
xchg
fisttpll
cli
and
adc
daa
sub
insb
lret
and
mov
sbb
inc
push
lea
fldl
jns
push
adcl
js
cmpsb
adc
loope
pop
push
jne
sahf
inc
out
je
outsl
enter
or
in
mov
sub
jb
shrl
out
xchg
cmp
push
add
les
jo
imul
xor
movsb
jge
mov
fdivrp
addr16
sbb
insb
jl
das
outsl
dec
mov
out
sub
or
ss
add
incl
out
inc
push
jl
test
xor
pop
std
push
mov
mov
inc
mov
mov
mov
push
xchg
jmp
int
rcl
mov
mov
cmp
aad
sbb
xor
pop
sub
jl
mov
rcr
mov
negb
ds
adc
fldenv
inc
je
lea
inc
and
loop
movsl
push
add
imul
inc
xchg
xor
sbb
mov
aad
cmpsl
lods
lods
insb
js
insl
push
loop
out
and
xchg
inc
ljmp
mov
xchg
rcl
xorb
add
dec
jne
mov
sub
inc
xor
cmp
test
sub
xor
xchg
stos
movsb
mov
data16
dec
scas
into
jmp
dec
inc
cli
pop
test
sbb
xlat
daa
lret
std
xchg
mov
adc
mov
adc
xlat
cmp
cwtl
in
and
or
lods
rolb
arpl
dec
cmp
push
lea
xchg
sbb
ja
jbe
inc
mov
push
aad
imul
add
sbb
adc
mov
test
lahf
cmp
cwtl
mov
mov
push
idivb
imul
jno
jle
icebp
xor
cmpsl
cli
pop
int
jo
sarb
xchg
into
outsl
jae
aam
adc
mov
sbb
mov
xchg
std
pop
stos
push
push
mov
xchg
jmp
ds
int
or
jo
xchg
xlat
into
mov
shlb
seto
enter
cmpsl
pop
mov
mov
pop
sti
leave
js
sbb
dec
rcrb
mov
fs
pop
addr16
xlat
jnp
inc
push
insl
dec
lock
int
mov
mov
fwait
call
mov
push
movsl
cld
push
push
mov
xor
cmp
enter
cmpsb
loopne
mov
lds
dec
popa
int
pop
rorl
xor
sub
jle
je
cli
push
dec
rol
test
into
cmpsb
xlat
push
stos
jl
movsl
faddp
pop
adc
mov
push
jbe
call
xchg
ret
popa
sub
pusha
push
test
movsl
cmp
in
cli
fiadds
add
clc
aas
in
sbb
push
jo
cmp
inc
call
addb
mov
jne
jae
xchg
cltd
data16
push
sub
dec
lds
leave
xor
fs
popf
fmull
dec
call
test
in
mov
repz
push
inc
xchg
sub
inc
in
hlt
addl
ljmp
mov
lahf
pop
inc
sub
js
adc
dec
leavew
adc
nopl
adc
loopne
pop
or
lret
jbe
out
cmp
xchg
add
mov
add
shl
inc
subb
nop
xchg
fistps
into
aam
cmc
lock
push
decl
dec
and
lret
pop
setne
clc
inc
scas
lods
aaa
pop
push
jnp,pn
push
into
decl
mov
nop
ret
xor
jmp
das
pop
mov
mov
mov
mov
fnstcw
adc
int
jbe
rolb
push
mov
shrb
xor
cmp
clts
push
je
dec
test
out
pop
insl
pop
adcl
test
and
icebp
mov
sub
sub
fcmovbe
or
sub
push
fs
nop
pop
dec
push
xor
out
pop
push
push
repnz
jmp
pop
divl
sbb
daa
andb
adc
dec
mov
dec
sub
lret
aas
adc
mov
pop
pop
loop
add
dec
int
lcall
jg
adc
out
cmp
inc
push
leave
or
xchg
pushf
and
mov
ret
jge
mov
test
sbb
imul
sub
aas
int
dec
popf
mov
and
movsb
cmp
test
push
out
inc
aas
or
mov
pushf
addr16
xchg
out
dec
cmp
imul
lods
dec
cmpsl
fstpt
push
std
pop
xorb
sbb
xchg
xchg
sbb
or
ss
mov
adc
xchg
or
inc
push
cli
and
push
pop
orl
js
add
sub
and
insb
mov
jmp
insl
sub
fs
mov
shl
sub
mov
outsb
pushf
pop
xchg
pop
inc
ja
jnp
push
jb
inc
arpl
test
stos
mov
test
pop
hlt
mov
or
jns
xor
xchg
mov
dec
cmpsb
lahf
and
scas
movsb
int
loop
loope
dec
or
mov
rol
add
jno
addb
into
scas
add
mov
in
jae
xchg
dec
stos
push
mov
mov
ret
and
inc
push
lock
mov
jge
xorl
or
das
rorl
stos
xchg
pop
sbb
inc
mov
adc
rcl
gs
subl
pop
test
mov
dec
or
mov
xchg
pop
inc
dec
inc
xlat
cmc
out
push
jbe
cmp
lahf
push
pop
ljmp
call
xor
cmc
les
test
in
out
pop
iret
lret
inc
pop
out
mov
adc
js
lods
mov
sti
sbb
jecxz
ja
decb
es
fcomps
lahf
jle
sbb
mov
add
insl
inc
jmp
pop
aaa
lea
xchg
jbe
xchg
push
pushf
into
xor
into
mov
and
mov
xchg
in
call
fsub
aam
scas
inc
sub
mov
out
fidivl
sbb
ret
sub
xchg
mov
in
ljmp
pop
cmpsb
mov
jmp
iret
cmp
fwait
enter
push
clc
mov
rcr
aad
bound
test
adc
jns
adc
xchg
pop
loop
mov
or
push
mov
ja
xchg
mov
xchg
adc
cmpsl
pop
sub
scas
cmp
jae
mov
or
cmp
mov
mov
mov
insb
leave
pop
fwait
push
in
jmp
sub
pop
sub
mov
pop
jg
sbb
lea
mov
xlat
or
mov
mov
cs
test
aad
xchg
push
shlb
cmp
adc
jo
rolb
clc
mov
stc
bound
or
es
popw
pop
push
fiaddl
loope
aam
push
xchg
and
mov
jb
sbb
push
arpl
push
gs
and
inc
out
notl
mov
lock
jge
insb
out
imul
setnp
cltd
cmc
xchg
stos
rcl
lock
mov
int
pusha
lret
mov
inc
add
and
cmpsw
test
adc
repnz
ret
in
loop
addr16
and
add
cltd
lahf
int3
push
loope
push
dec
les
push
xor
out
cmp
xlat
and
loope
decl
or
repz
or
adc
cmp
jnp
xchg
sbb
add
add
rcrb
inc
cmp
mov
push
imul
aad
mov
insl
push
mov
pop
dec
mov
or
pop
dec
mov
add
aad
jns
ja
mov
in
sbb
add
data16
dec
mov
bt
push
sub
insl
jno
lock
or
mov
lods
jae
std
dec
push
bnd
xchg
jne
fmuls
into
and
mov
fcmovbe
sbb
inc
inc
iret
ja
cltd
addb
pop
adc
push
adc
mov
subl
fs
pop
and
or
xor
enter
xor
fisttpll
in
mov
jge
push
mov
cld
pop
dec
int
adc
pop
xchg
mov
cmp
lcall
jnp
cmp
push
iret
and
out
add
leave
notl
push
jno
cld
pusha
sub
push
pop
pop
aas
dec
sbb
xchg
out
imul
sub
cmp
loop
sub
repnz
lcall
dec
or
pop
movl
shlb
inc
dec
sub
push
test
hlt
test
xor
lcall
les
sbb
clc
mov
pop
xchg
xchg
lods
push
add
leave
jmp
shlb
inc
rcr
pop
seto
shrl
je
subb
addr16
fiadds
ja
jecxz
es
add
mov
mov
push
aaa
daa
sub
inc
sbb
add
aam
pop
dec
ret
adc
idivl
pusha
mov
sbb
rcr
std
xorl
or
lret
and
add
or
hlt
fst
mov
rolb
scas
jb
sub
shl
xchg
rcl
int3
popf
push
jge
cli
iret
sbb
dec
loop
test
pushf
push
sbb
lods
lret
pop
mov
jmp
xor
dec
ds
movsl
popa
dec
pop
rcrb
jmp
sbb
add
fisubrl
cmp
jne
mov
add
mov
sub
dec
xor
fldl
push
das
into
jl
leave
add
mov
daa
movswl
cmpsl
in
mov
inc
ja
test
dec
pop
pusha
push
inc
lret
dec
lahf
jbe
lods
sbb
into
sub
push
lock
jbe
ljmp
add
xchg
and
in
lret
data16
cltd
add
ja
pusha
fnsave
xchg
lret
in
lods
aas
mov
roll
or
adcb
ja
mov
pop
addr16
cmp
aam
cmpl
and
pop
movsb
adc
leave
punpcklwd
mov
repnz
mov
cmp
adc
lea
out
mov
fdivrl
sarl
push
xlat
sbb
jno
mov
pop
insl
sbb
sub
imul
mov
mov
and
gs
fcompl
stos
xchg
inc
data16
outsl
xchg
ljmp
out
mov
mov
ret
sbb
aam
xor
mov
call
add
mov
repz
int3
pop
ret
shlb
out
cmp
in
movsb
xchg
pop
cmp
call
mov
push
adc
push
mov
add
xchg
popf
arpl
ret
xchg
mov
adc
mov
enter
cs
xchg
sbb
fs
out
dec
jae
pushf
mov
in
and
fadds
dec
mov
sti
sub
pop
imul
xlat
in
jns
mov
xor
mov
faddl
mov
ja
jl
mov
xchg
ret
xchg
int
repz
mov
sub
adc
cmp
sarb
sub
sbb
xor
mov
fisubrl
fdivr
pushf
movsl
outsb
scas
jae
mov
jle
jmp
add
push
xchg
push
cmpsl
inc
movsl
loope
mov
ja
dec
aaa
cs
dec
iret
add
cs
jne
dec
ds
pop
fcompl
or
aaa
in
inc
lcall
jne
adc
lret
push
pop
insb
pop
xchg
pop
xor
into
and
leave
lock
or
dec
bound
pop
mov
jo
xchg
shlb
scas
dec
ret
cmc
cmp
xchg
mov
inc
loope
mov
aaa
out
sbb
mov
adc
adc
je
sbb
pop
insb
jns
push
loope
testl
lahf
call
rcr
lcall
iret
mov
ds
out
xchg
xor
push
lret
mov
xor
or
mov
push
pop
iret
xchg
outsl
mov
lahf
testb
and
rorl
data16
push
pop
push
push
stc
ret
xor
int
push
mov
leave
test
or
lret
out
jno
mov
stc
xchg
fnstcw
rolb
or
out
into
and
sub
gs
mov
push
fnstenv
mov
sbb
add
and
lahf
cwtl
out
bound
sbb
movsb
lods
sbb
cmp
lea
dec
pop
adc
std
test
mov
jp
aam
add
sti
xor
mov
cmp
dec
push
lea
xor
add
mov
in
repnz
mov
in
test
icebp
push
filds
mov
into
out
or
dec
add
mov
icebp
mov
add
test
test
pop
push
outsl
xchg
adc
push
inc
insl
or
push
inc
cmpsl
sbb
dec
or
addr16
notl
mov
test
int3
shrb
sahf
xchg
sub
inc
aad
or
mov
subl
icebp
pop
aaa
fdivr
jbe
cld
adcb
mov
sbb
jp
icebp
mov
adc
add
lcall
push
jmp
mov
xchg
mov
in
sbb
inc
mov
xlat
pop
cld
insb
mov
or
jae
lret
jo
and
lods
lea
daa
rcll
xchg
das
dec
lret
xor
outsb
jp
dec
fisttps
xchg
sub
fwait
or
add
or
add
mov
std
add
int
xor
mov
sub
mov
xchg
add
sub
jbe
xchg
imul
enter
mov
xlat
sti
int3
mov
insb
mov
scas
jmp
or
addr16
xchg
mov
dec
mov
dec
fnsave
pop
dec
fistl
test
jae
cmpsl
mov
xchg
xor
fnstenv
pop
das
int3
xor
lret
xor
insl
sub
dec
test
add
or
dec
push
int
pop
lods
das
jbe
cmc
mov
pop
push
mov
hlt
cltd
dec
data16
add
cld
cmp
mov
out
jecxz
jne
dec
pop
lahf
aad
in
cmpsl
outsl
adc
outsb
mov
add
scas
leave
aas
stos
call
push
mov
imul
and
outsb
dec
out
add
inc
test
jl
jp
lods
cwtl
popa
push
int3
inc
push
and
fdivp
pop
inc
or
push
ret
mov
sti
xor
push
pop
adc
jle
mov
jecxz
into
sahf
adc
jl
popa
xchg
stos
out
gs
mov
and
rol
xchg
negb
inc
and
cmpl
push
push
lret
iret
mov
sbb
mov
hlt
xchg
adc
dec
movsb
push
imul
xor
outsl
sub
mov
in
xchg
dec
add
lods
xor
mov
pushl
dec
cmpsl
cmp
xchg
mov
mov
movsb
mov
pusha
stos
outsb
jle
mov
jbe
outsl
cwtl
or
lods
lds
jae
cs
sbb
adc
mov
or
mov
mov
cmp
xchg
mov
xchg
out
and
jns
dec
ret
pop
xor
fs
or
lock
loope,pt
adc
add
lea
sbb
dec
movsl
fmull
adc
mov
insl
dec
fwait
xchg
mov
ja
aam
ljmp
mov
cmp
push
int3
add
xchg
into
sub
addr16
out
and
fstp
inc
aas
mov
xchg
ss
std
cmp
and
aam
into
or
les
and
xchg
gs
int
lahf
jne
lret
push
and
jecxz
jle
out
into
and
inc
xlat
mov
pushf
or
xor
dec
out
ret
add
lret
sub
inc
fisubrl
xchg
mov
dec
aad
aaa
rclb
mov
jns
lret
loopne
fs
mov
sbb
shl
jle
scas
ljmp
push
xchg
arpl
fcmovbe
movsb
dec
jnp
fwait
cmp
outsl
xchg
dec
sub
das
fst
mov
push
dec
jbe
push
mov
pop
push
in
pop
leave
shlb
mov
das
into
or
mov
es
ja
int3
cmp
xor
cmp
inc
adc
in
jge
cmp
fs
and
and
adc
ljmp
rcl
decl
insl
inc
pop
add
pop
mov
out
sub
daa
movsl
sti
adc
xchg
cmp
push
dec
outsl
jns
nop
into
pop
push
fcoml
mov
mov
data16
fcmovnb
addl
outsl
pop
dec
test
fidivl
cmc
scas
test
stc
sbb
xor
or
sbb
rclb
pop
fsub
dec
or
aas
addr16
mov
insl
mov
divb
std
xchg
fildl
inc
out
data16
pop
js
or
in
mov
sbb
mov
and
stos
imul
mov
es
lcall
sbb
mov
rolb
loop
loope
fwait
mov
iret
bnd
out
aaa
dec
int
jmp
inc
jns
repz
xor
pop
fiaddl
xor
mov
in
push
lods
mov
mov
sub
in
test
add
dec
mov
or
or
pop
push
push
jns
and
sbb
push
sub
xchg
into
movsb
pop
inc
push
fwait
int
push
mov
popa
jecxz
aad
stc
adc
mov
jg
fcmovnb
add
cmc
inc
sbb
aad
loop
xchg
cmp
aaa
mov
add
nop
lods
adc
xchg
mov
scas
dec
mov
inc
mov
jp
dec
dec
xchg
lock
maskmovq
imull
inc
rolb
fidivrs
jg
and
not
add
and
or
loopne
pop
stos
out
ss
outsb
jnp
cmpsb
mov
cmpsl
dec
or
inc
lcall
inc
cmp
xchg
mov
fcoms
daa
scas
jle
sbb
jl
int3
movsb
test
int
or
inc
and
movb
jno
dec
rol
into
sbb
add
lods
cmp
or
lea
cmp
test
scas
subb
stc
les
push
call
mov
xchg
push
jnp
in
adc
repz
imul
inc
cli
test
aam
mov
or
push
outsb
lock
aaa
mov
loopne
cmp
or
fwait
ret
out
aaa
jecxz
xor
jp
or
jno
outsl
loopne
int
pop
std
loope
out
daa
pop
nop
xor
imul
jle
xchg
push
sbb
dec
xor
pop
ret
gs
rorb
pop
inc
call
cld
mov
fiaddl
adc
xchg
adc
clc
mov
jo
aas
rclb
or
sbb
mov
je
mov
pop
jne
add
mov
xchg
jae
insb
xor
iret
cmc
mov
adc
ret
lret
icebp
mov
mov
sub
ljmp
jnp
fidivrl
pusha
cltd
es
sub
popa
not
jnp,pt
gs
push
mov
jbe
dec
inc
mov
outsb
fucomp
push
ds
jle
in
jp,pn
mov
fs
lds
pop
lods
mov
inc
les
inc
sbb
idivb
cmp
sbb
xor
pop
xchg
in
inc
and
xor
mov
popf
inc
nop
imul
ss
clc
lods
xchg
enter
lret
cmp
sbb
movsb
pop
xor
push
scas
jl
movsl
xchg
adc
mov
mov
out
lret
neg
out
and
xor
push
orl
add
push
rcll
or
ficompl
cmpsl
lret
outsl
faddl
push
mov
xchg
or
add
mov
out
and
into
add
mov
andb
mov
lods
clc
xor
sub
fs
sahf
add
or
push
cmp
and
mov
jb
pop
push
sub
es
js
ror
test
xchg
fcoml
iret
lret
mov
lods
or
mov
mov
inc
add
adc
test
mov
fiadds
in
imul
out
pop
inc
popf
mov
enter
xchg
sbb
cwtl
sub
jns
xchg
out
xchg
mov
jl
push
xchg
movsl
ret
dec
push
into
into
dec
push
jbe
pop
pop
mov
push
jns
ret
xchg
push
int3
jp
or
loop
jge
mov
dec
pusha
jle
mov
rsm
scas
mov
out
cld
xchg
mov
cmc
movsl
lret
mov
hlt
mov
roll
stc
loop
insl
cli
cmpsb
fs
add
sbb
enter
int3
testl
ja
mov
mov
js
jns
popf
shrl
sub
into
sbb
repnz
sbb
pop
cmc
movsb
stos
xlat
cmp
push
jp
pop
push
jo
jnp
mov
mov
xlat
jle
or
inc
pop
pop
mov
lods
add
dec
adc
sbb
jns
je
sbb
aam
test
jo
in
out
test
int3
es
dec
sarl
into
dec
mov
mov
cwtl
nop
out
stos
daa
sub
cmp
mov
or
ficoms
out
imul
loope
or
das
sbb
cmp
mov
dec
ds
push
cs
mov
lret
sahf
or
std
adc
test
jae
mov
jb
add
repz
mov
pop
pop
lret
test
sbbl
call
mov
movl
inc
ss
nop
inc
xchg
push
je
inc
scas
and
movsb
adc
push
dec
jl
jmp
into
int3
addb
je
jns
pop
iret
and
or
jno
ret
jmp
inc
jmp
sbb
push
adc
fisubs
xchg
insl
ss
push
xchg
xor
xor
jnp
gs
pushf
ret
lret
sbb
and
inc
into
mov
jmp
sub
shrl
insb
adc
sbb
pop
in
arpl
int3
cltd
out
lock
jb
daa
add
fstl
sbb
js
push
mov
pop
jmp
dec
sub
mov
lret
mov
gs
mov
inc
icebp
andb
pop
cmp
xchg
stos
adc
std
iret
stos
and
sbb
shr
pop
inc
pop
jns
jmp
push
dec
add
mov
fdivrl
jne
or
mov
das
call
mov
stc
jge
jb
cli
xchg
dec
icebp
js
push
loop
push
mov
out
pop
ss
mov
fs
push
je
out
in
xlat
out
scas
mov
or
addr16
add
fistpl
mov
mov
xchg
loope
repz
adc
fnstsw
and
mov
in
xor
push
mov
pop
xor
and
xor
outsl
into
movsl
das
jnp
sub
sarb
mov
sub
add
or
loop
cwtl
jmp
hlt
push
mov
push
xchg
rcrl
dec
out
icebp
push
lds
dec
sbb
in
int3
sti
xchg
dec
in
scas
push
int
mov
daa
mov
lea
lret
ret
xchg
dec
xor
js
icebp
cwtl
aas
mov
xor
or
fsub
inc
pop
mov
int3
stc
mov
inc
lret
hlt
ljmp
or
inc
rcl
test
popa
sub
dec
arpl
and
xchg
out
jae
adc
repz
leave
rcrb
mov
mov
xchg
sbb
lret
cmp
xchg
xchg
out
not
cmp
xchg
mov
movsl
mov
fbld
stc
lret
xor
rcrb
daa
xor
in
mov
out
lock
movsb
rorl
in
cmp
popf
push
test
xor
rclb
incb
daa
adc
lret
xorl
mov
fmuls
mov
sbb
andb
hlt
pop
movsl
cmp
mov
mov
cmc
jns
sarl
jb
adc
test
test
movsl
inc
add
mov
aad
into
int
loope
in
das
iret
orb
rcrb
lods
add
xlat
jge
out
push
cmp
fisttpll
subb
je
or
rcrl
inc
jle
enter
js
lea
jo
jp
xchg
mov
rorl
or
imul
das
jne
push
inc
lret
arpl
jp
sbb
in
pop
das
ret
jae
fcoms
sub
push
dec
incb
add
int3
mov
out
aas
repz
sbb
insl
rorb
xor
sub
cli
rorl
inc
push
imul
std
and
add
clc
aam
pop
or
fs
push
filds
mov
push
sub
adc
pop
vmovq
sub
mov
fnsave
mov
mov
decl
cli
add
sarb
mov
xchg
int
addr16
scas
fistps
jp
xlat
push
cli
and
insl
or
or
sbb
push
jne,pt
pop
clc
push
mov
testl
xchg
out
pop
mov
cmpsb
out
lret
push
test
ret
mov
push
icebp
sbb
aam
out
push
xchg
bound
push
sahf
xor
fistl
les
jbe
add
enter
and
addl
and
adc
push
stc
stos
gs
push
inc
ljmp
cmpl
clc
imul
sahf
push
mov
faddl
pop
jns
rclb
test
adc
aam
dec
jg
test
or
loopne
psraw
cli
jne
int3
movsl
inc
lcall
fs
pushf
cmp
lret
cmp
mov
aas
pop
setne
pusha
testl
add
lds
push
enter
sti
adc
mov
and
cmp
dec
fcom
xor
leave
outsl
push
xor
add
jns
dec
jno
adc
fldl
pop
test
stos
std
push
or
cmc
cmp
sahf
int
dec
out
dec
call
jl
mov
fdivs
pop
lds
leave
mov
cmpl
xchg
test
dec
ror
out
cli
dec
dec
and
cmp
add
imul
nop
push
or
push
cld
movsl
insl
enter
adc
stos
scas
sub
out
xor
nop
lods
in
lret
out
dec
jmp
call
xchg
stos
aaa
loope
mov
in
cmpsl
jb
sbb
xlat
in
shrl
sbb
pop
andb
loope
push
dec
sub
aas
mov
addb
push
push
es
pushf
push
arpl
shrb
pop
jmp
fdivrl
aaa
cli
pop
mov
xchg
decb
lret
inc
popa
push
into
inc
adc
mov
mov
rcrl
pop
jnp
arpl
jb
or
cmc
jle
das
pop
cmpsl
aaa
jecxz
xlat
jmp
and
aas
into
js
out
push
jb
fwait
jp
inc
int
movsl
mov
sti
xor
add
mov
test
mov
xor
ret
push
mov
jp
cmp
nop
sub
sbb
xchg
mov
cld
push
int3
jne
sbb
cmpsl
fisubs
movsl
pop
pop
int
cmp
andl
jle
jbe
cwtl
pop
or
or
push
icebp
pop
cmp
cs
ror
rolb
xor
pop
mov
aam
fimull
add
mov
jbe
jae
sub
ffree
lods
icebp
jg
in
mov
cs
push
scas
test
aaa
cmp
popa
hlt
sahf
arpl
push
je
gs
aam
push
nop
test
in
insl
jmp
xchg
addr16
data16
daa
sub
aam
mov
cmpsl
fidivl
pop
inc
call
dec
shrd
ljmp
addr16
add
dec
repz
iret
push
leave
jle
inc
lcall
imul
push
repnz
adc
rcl
pop
cmpsb
pop
fcomi
add
mov
mov
test
cli
out
shll
mov
inc
adc
push
push
or
push
pop
es
or
dec
add
or
ds
add
data16
mov
bound
imul
ss
or
dec
scas
cmc
pop
mov
mov
test
test
mov
cltd
ret
into
jl
adc
push
jp
std
jae
test
iret
jae
cmp
scas
jb
or
cmp
sub
sub
push
fs
push
cmpsl
mov
add
pop
pop
adc
mov
or
inc
jne
pop
sub
cmp
cmpsb
sti
fistps
repz
std
jle
jl
push
aad
jae
xor
adc
xor
mov
daa
sub
ja
xchg
push
js
jns
mov
insb
push
mov
fcom
push
scas
pusha
push
lret
xlat
mov
test
call
push
cmp
jmp
xchg
pusha
mov
pushf
pop
pop
in
xchg
lcall
cli
movsl
dec
xor
push
aad
jge
rcl
jns
dec
jl
call
add
push
inc
cmc
mov
or
mov
stos
push
sub
cs
lret
and
xor
rcll
int3
jne
int
aaa
inc
loopne
fistl
jecxz
pop
push
xlat
aad
cmp
aam
mov
cmp
jp
repz
fcom
sub
jb
icebp
lods
mov
cmp
aaa
in
mov
jmp
ret
pop
pusha
aad
push
jno
scas
dec
js
pop
les
pushf
lret
mov
pop
fbld
in
out
push
aaa
mov
sub
dec
mov
dec
out
mov
adc
sbb
stc
push
push
pop
and
or
mov
sub
and
loopne
popl
jle
popf
xchg
lret
cmc
lcall
mov
mov
lret
repz
push
cmp
and
mov
cs
or
fistpll
sar
xchg
xchg
lods
push
ret
pop
inc
push
mov
mov
and
stos
mov
ja
pop
jns
push
mov
rcr
xlat
shl
xchg
pop
add
mov
dec
aad
js
daa
mov
ret
test
mov
aad
jp
xchg
push
mov
orl
xchg
repz
push
addr16
loopne
in
adc
aas
ret
inc
xor
stos
mov
add
in
and
cmpsb
into
daa
insl
fidivrs
dec
out
in
and
pop
lds
push
fwait
enter
insb
jnp
ret
imul
sbb
xor
xchg
test
std
add
xor
insl
adc
mov
xor
iret
into
in
and
lock
or
into
jle
fstps
shl
nop
inc
mov
test
cmp
aaa
fsubrl
or
add
out
adc
dec
ds
jl
enter
pop
push
cmp
adc
mov
jecxz
dec
fldl
push
lret
cltd
mov
add
fwait
ret
shlb
mov
or
imul
out
ror
adc
dec
cld
fidivrs
scas
xchg
sti
pop
aam
dec
iret
xchg
cmp
popf
fcmovbe
leave
lret
into
push
je
adc
and
lods
sbb
jmp
push
jnp
dec
cmpsl
ss
dec
das
dec
sbbl
not
aad
xor
mov
cmp
cltd
rorb
ds
cli
dec
mov
or
iret
cmpsb
cmp
xchg
jae
mov
push
pop
stc
mov
and
and
mov
push
dec
into
std
mov
adc
pop
dec
repnz
ret
xor
or
iret
inc
jb
arpl
out
pop
mov
fadd
mov
mov
int
les
cld
lea
inc
mov
cmpl
test
jns
add
xor
insb
decl
rcl
outsl
movsl
ss
xchg
call
xchg
mov
push
aam
sub
sbb
pusha
inc
push
adc
test
mov
pop
mov
or
mov
push
ret
adc
stc
shrl
dec
jb
jae
movsb
in
lods
test
mov
out
xor
dec
xchg
lock
les
jle
out
in
adc
and
fcompl
repnz
adc
loopne
or
pushf
into
in
fldt
dec
mov
dec
and
imul
inc
iret
fld
sti
lds
data16
imul
lods
pushf
mov
xor
jbe
sarb
pop
push
std
or
das
cmp
ret
fnstenv
and
imul
fsubl
mov
pop
data16
mov
inc
jl
mov
mov
push
push
add
mov
daa
add
push
repnz
mov
fmull
in
push
stos
xchg
push
mov
add
push
adc
sbb
jnp
mov
mov
mov
cmc
into
jp
jbe
mov
add
pop
lret
sbb
std
lods
jecxz
or
nop
stos
pop
call
shrb
push
fmuls
mov
pusha
outsl
add
pushf
xchg
andb
and
push
and
jae
push
lods
jg
shll
fimull
mov
in
mov
mov
cmp
lods
data16
mov
push
sbb
xlat
scas
and
push
nop
hlt
or
xor
cpuid
int3
loopne
and
cwtl
repz
inc
ret
ds
fcmovnu
in
inc
out
add
out
enter
mov
add
mov
out
jecxz
orl
lea
in
jb
int3
or
ret
pop
cmp
dec
fmul
push
jb
out
inc
jbe
pop
xchg
lahf
lret
pop
jno
cmp
push
and
inc
jb
adc
popf
ror
outsb
iret
inc
into
xchg
lcall
push
loope
push
push
sbb
jns
xchg
js
das
loop
sbb
xchg
xchg
jb
or
or
sub
push
lea
dec
fisubrl
xor
test
mov
cmpsb
rcrl
mov
mov
cs
or
cmc
shlb
rcll
pop
sub
into
js
stc
inc
mov
std
jmp
cwtl
jmp
xor
push
in
icebp
sub
shll
idivl
push
insl
mov
cli
cmp
cld
push
jne
xchg
out
cli
push
xchg
add
xchg
out
iret
jg
jb
std
jne
test
cli
ds
and
xchg
inc
sub
mov
scas
dec
sub
or
jecxz
aad
mov
cmc
loopne
daa
cltd
adc
jmp
and
push
cmp
xor
inc
sti
ljmp
jo
seto
hlt
adc
shll
iret
xor
insb
mul
xchg
mov
notb
pop
push
mov
lret
in
in
cmpl
testl
or
xor
ljmp
lods
int
sbb
or
sbb
add
xchg
ss
mov
mov
hlt
test
and
into
mov
jle
sbb
push
movb
cmc
movsl
fidivs
xchg
insl
mov
rclb
das
cmp
notl
push
dec
or
mov
stc
test
xchg
pop
sub
mov
mov
mov
push
xchg
into
pop
out
jnp
dec
jecxz
int3
inc
mov
fisubrs
dec
mov
push
enter
adc
mov
xchg
mov
xor
fnstenv
and
shll
call
xchg
test
es
push
cmpsb
jecxz
push
lret
je
cmp
mov
xor
xor
not
dec
cmpsl
pop
pop
sbb
sub
jmp
push
jg
rcll
loope
pop
rcl
out
ss
mov
ficomps
out
in
inc
xor
xchg
push
lret
adcb
cmp
adc
inc
xchg
xor
sarl
cmc
jmp
sbb
int
lret
clc
movsb
or
jbe
stos
lret
gs
icebp
push
sub
fldenv
sahf
rcl
loope
pushf
cli
ret
int3
inc
inc
push
fwait
xchg
mov
xor
mov
stos
and
test
insb
adc
jle
inc
cmp
pop
adc
xchg
popa
shrb
fwait
jmp
mov
pusha
jbe
jp
int3
and
push
adc
mov
fcoms
jge
imul
sub
push
lods
sub
subb
adc
mov
xlat
leave
jbe
push
cmpsb
inc
shlb
rclb
mov
add
ds
gs
clc
xchg
push
xor
push
adcb
outsl
cmp
lds
jb
xchg
aas
xchg
mov
call
cmpsl
pop
sarb
dec
ja
sub
mov
out
std
cmpsl
adc
jne
xor
sbb
or
fwait
test
sahf
dec
enter
or
ds
and
sub
shrb
jle
inc
inc
pop
mov
mov
iret
js
and
xor
repnz
nop
xchg
scas
sbb
in
pop
lret
lods
pop
mov
cmp
aaa
push
mov
test
mov
push
mov
sbb
ficompl
dec
out
xchg
mov
inc
test
nop
push
out
test
pop
adc
out
ficompl
xchg
stc
lea
xchg
mov
xbegin
pop
dec
mov
or
inc
stos
mov
ja
loope
aaa
push
roll
push
out
sbb
bswap
push
jg
addr16
lea
repz
jbe
and
je
inc
sbb
mov
incb
mov
inc
cmpsb
adc
cmp
imul
push
cs
dec
dec
in
cli
mov
test
push
and
jg
pop
mov
pop
in
push
cld
in
sub
xchg
fwait
les
pop
scas
out
mov
sbb
inc
jo
insb
lods
js
mov
push
int
popa
lods
jb
cmp
iret
push
out
mov
aam
je
shlb
nop
fcoms
pop
sbb
sbb
mov
cmp
out
gs
repz
test
sbb
jle
pop
aaa
push
rcl
dec
movsl
push
sbb
xchg
jmp
mov
mov
stos
dec
ud2
clc
add
sti
pop
push
sub
aam
jbe
loopne
jecxz
jmp
or
js
bound
push
xchg
mov
das
aaa
xor
rorl
insb
xor
jmp
movsl
cmp
data16
scas
cmp
jne
call
jno
xor
inc
mov
or
xor
cltd
into
leave
mov
and
shrb
into
aas
gs
fcmovnbe
add
sub
adc
ja
in
or
pop
ret
pop
les
fxch
and
sbb
movsb
jmp
out
lea
out
sub
sub
mov
xchg
cmp
adc
jnp
cltd
cld
and
fwait
pop
mov
inc
cmp
cmp
stc
add
loopne
mov
scas
insl
rorb
fsubrl
dec
xchg
jno
add
cmp
xor
ss
xor
leave
into
sub
aam
adc
jg
wbinvd
andb
imul
and
dec
lods
je
adc
ret
rcr
jne
xchg
ljmp
fwait
adc
outsl
fcmovnb
gs
add
pop
movsb
clc
mov
add
inc
mov
push
and
cwtl
rcrb
sti
cs
pop
jb
dec
loop
lods
or
jo
addr16
xchg
and
sbb
lahf
adc
subl
push
dec
scas
stos
clc
ret
mov
cld
test
fs
jp
push
sbb
push
sbb
imul
ss
adc
dec
add
ret
int
popa
loope
rcr
jecxz
icebp
pushf
sbb
call
ficompl
xchg
loop
sahf
sbb
jecxz
mov
mov
clc
jns
arpl
or
pop
adc
pop
andb
mov
out
pop
fildl
dec
mov
inc
push
aaa
mov
fisttps
jg
ja
outsb
jne
pop
das
into
movsl
int
lods
inc
cmp
cmp
fisubrl
mov
xchg
test
popf
ja
xchg
mov
sbb
xor
mov
leave
fsubrp
cmpsb
and
mov
xchg
inc
xchg
fwait
dec
jle
pop
insl
pop
push
stc
rcrb
sbb
push
int3
mov
xchg
cli
ss
add
repnz
dec
loopne
iret
ret
mov
push
in
fstl
mov
test
out
and
xlat
fadd
inc
sbb
mov
or
leave
add
bound
jne
mov
dec
xchg
adc
mov
mov
sub
jne,pn
jo
cli
lea
movsl
xchg
lret
mov
xchg
cmp
es
pop
rol
jg
insb
inc
adc
mov
or
aam
ror
xchg
mov
dec
aad
jecxz
add
inc
rcl
cmp
pop
inc
xchg
mov
dec
and
cmp
leave
popa
std
movsl
adc
sti
xchg
jne
lret
and
mov
mov
outsl
je
into
aam
fdivrl
push
push
enter
int
xchg
xlat
push
jns
lds
and
icebp
jbe
mov
loope
jle
sarb
repnz
mov
jmp
loop
or
dec
push
fwait
icebp
push
push
out
lret
mov
push
js
ss
test
dec
je
pop
push
adc
mov
std
sub
xchg
mov
pop
xchg
sub
mov
xor
and
jno
dec
adc
inc
lods
rolb
icebp
cltd
dec
sahf
push
xor
hlt
push
jmp
into
push
jg
xchg
inc
or
mov
lahf
pusha
rcl
inc
pop
movsb
sub
xchg
std
push
insl
dec
js
add
nop
jno
inc
loope
xor
dec
test
mov
ljmp
mov
adc
mov
out
add
leave
cmp
ss
mov
mov
test
es
cmp
int
add
mov
sbbl
rcl
fsubrl
push
dec
bound
mov
pop
and
xor
sub
mov
jne
jae
outsl
mov
inc
push
jl
jmp
pop
lret
adc
pop
loope
dec
push
mov
sub
ficoml
pop
jmp
ror
std
push
into
push
bound
shlb
js
and
inc
rorb
aaa
inc
lret
out
ja
mov
stos
sarl
pcmpgtd
mov
push
pop
jbe
mov
add
std
stc
adc
cmp
xor
daa
jmp
rclb
scas
fs
rcrl
xor
repz
imul
aam
pop
jp
icebp
ljmp
and
sti
js
lcall
jg
popa
inc
adc
push
push
mov
adcb
lods
aad
mov
into
hlt
sub
std
push
repz
mov
xor
insb
ljmp
pop
cld
jae,pt
jle
incb
adc
aad
add
insb
push
lea
xor
sbb
push
jae
out
ret
std
push
sti
lret
cmp
loope
enter
xor
pop
push
xchg
push
adc
or
adc
mov
sbb
xchg
push
push
jl
sub
dec
daa
inc
jbe
and
jmp
pusha
lods
test
push
pop
pop
jns
and
or
xchg
fsubp
dec
xchg
daa
imul
fstpl
and
in
sbb
nop
push
call
inc
mov
inc
loop
cmp
lcall
popa
dec
lds
in
add
push
mov
out
sar
sub
ret
mov
and
rcll
xchg
enter
xor
xchg
bound
push
fists
leave
lret
sahf
cs
pop
arpl
xchg
sbb
stc
xor
loope
or
pop
sub
neg
das
rorb
aam
cmp
mov
ret
in
cli
pop
ror
dec
adc
xor
data16
int
rorb
xchg
xchg
push
test
push
xchg
inc
push
adc
imul
xor
outsb
mov
rcl
test
clc
in
imul
cmpsl
jp
adc
adc
js
gs
or
cli
in
pop
mov
popa
int
imul
lds
cli
mov
xchg
mov
nop
inc
mov
icebp
lret
jno
fildl
mov
les
in
movsb
add
rorb
shrb
xor
das
jo
mov
cmpsb
mov
jp
lods
xchg
pop
or
loop
and
mov
dec
cmp
loope
leave
inc
cli
or
push
in
out
lods
in
rcl
dec
xor
movl
andb
rcrb
aaa
mov
lock
sbb
psadbw
xor
adc
das
cmpsl
notl
cmc
inc
inc
les
push
or
mov
sub
repnz
and
cmp
aam
movsl
push
cmpsl
jno
add
cmp
cwtl
xchg
jo
les
fbld
stc
daa
xchg
mov
shlb
outsl
sub
int3
sbb
dec
add
jg
sti
mov
aas
addr16
enter
adc
cld
data16
fisttpll
fnstenv
pop
test
pop
into
mov
jmp
push
mov
mov
fildl
mov
into
scas
jns
dec
dec
mov
pop
mov
jmp
f2xm1
add
addr16
push
sbbl
mov
in
aas
je
rcl
fists
insl
rorl
cmp
and
pop
sub
jmp
jne
out
dec
dec
loope
and
lcall
scas
pushf
mov
ret
not
in
sti
filds
cmpsl
jg
inc
ret
adc
test
mov
jg
mov
cmc
movsb
or
push
in
sahf
xchg
xor
addr16
loopne
leave
jo
dec
lret
xchg
pushf
icebp
push
pop
push
push
mul
rol
mov
jae
sub
inc
inc
repnz
or
mov
jnp
xor
push
xchg
jbe
fcoml
mov
je
inc
stc
jecxz
mov
jb
lahf
dec
sbb
inc
aaa
or
xchg
xlat
mov
jecxz
or
and
rcll
mov
repz
stc
adc
sub
mov
fistpl
pushf
xor
cmp
mov
loope
mov
stos
shlb
out
adc
cmp
push
jecxz
ss
dec
stc
sti
jnp
scas
sub
jle
ja
pop
adc
mov
fadd
xor
sbb
or
cld
pushf
mov
hlt
sahf
stc
ret
push
repnz
jle
inc
fwait
mov
movsl
sbb
jne
shlb
testb
mov
jnp
sbb
pusha
js
jne
cmc
ja
pop
dec
sti
adc
insb
ss
add
and
inc
push
push
and
push
mov
dec
fcmovnbe
in
iret
enter
adc
cmp
lods
ja
stos
mov
jecxz
repnz
sbb
cwtl
xchg
mov
lahf
add
lock
pop
xor
mov
add
out
mov
fsts
jge
lods
or
divb
into
mov
xchg
inc
push
and
jne
ss
adc
or
mov
sbb
dec
aam
adc
xor
push
enter
inc
jne
jle
sub
fucomp
xlat
mov
push
sub
xor
arpl
sbb
push
out
push
mov
loop
lock
inc
mov
pushf
xor
sub
push
sub
add
pop
sbb
pop
lock
lret
popa
xchg
mov
mov
pop
mov
inc
sbb
pop
das
icebp
lret
lods
mov
fists
cmpsl
mov
imul
stc
add
pop
push
mov
xchg
out
jno
sub
xchg
cmp
loop
dec
mov
push
lock
push
mov
rcrl
dec
jmp
push
sbb
lea
stos
andb
or
dec
shlb
lahf
pusha
mov
stos
mov
jl
mov
jbe
mov
xchg
les
cmp
mov
repnz
adc
out
stc
shll
push
aam
jne
popa
inc
push
pop
hlt
or
es
scas
aad
movsb
mov
into
fiaddl
stos
sub
stc
xor
pop
inc
cwtl
cs
jo
lock
iret
mov
and
sti
ror
push
cmc
xor
pop
test
jno
sbb
test
adc
iret
inc
out
ror
fs
stos
imul
lcall
addl
out
data16
inc
mov
mov
adc
or
movl
into
xchg
arpl
faddl
in
imul
push
pop
inc
rcr
xor
kandnb
push
push
lcall
sub
std
into
out
mov
jp
mov
dec
stos
cltd
int3
shlb
out
pushf
or
or
and
add
jecxz
stos
push
mov
jge
pop
and
pop
decl
ret
cmc
shr
insl
xchg
dec
fs
popf
lcall
enter
pop
das
push
push
push
jns
je
add
add
lret
inc
mov
ja
in
andl
cmpsl
ja
mov
sbb
jne
imulb
sub
call
lret
xor
pop
add
sub
data16
mov
fsub
pop
mov
cmpsb
adc
add
dec
jae
stos
pusha
mov
xchg
add
xorl
arpl
lods
pop
repz
fstpl
cmpsl
mov
pop
fisttps
jmp
lds
insl
test
das
mov
push
and
mov
rcl
inc
in
sbb
inc
adc
push
clc
loope
dec
lds
stos
lock
mov
push
cltd
push
imul
daa
dec
xlat
adc
ret
iret
icebp
inc
mov
sub
outsb
fistl
jno
jo
sbb
inc
push
int
xchg
fcmovb
pop
test
and
add
xchg
call
lds
repnz
lcall
jbe
dec
sbb
adc
mov
sub
lret
out
mov
add
inc
ja
stos
mov
icebp
enter
inc
movsl
add
adc
sbb
roll
cmpsb
jp
dec
lret
and
push
stos
popa
jae
fmulp
or
shrl
imul
mov
test
sarl
insb
xchg
push
cltd
push
sbb
mov
mov
and
sbb
and
xchg
dec
cmp
jl
fldcw
inc
lret
daa
test
cmp
add
loop
xorl
mov
pusha
out
nop
push
sub
adc
mov
imul
cmpps
and
and
int
pop
mov
call
sbb
push
ret
xchg
lods
push
adc
and
sbb
jmp
movsl
xchg
push
lret
or
pop
sbb
mov
dec
clc
daa
jbe
mov
lret
aas
popa
jg
mov
fmuls
ja
lods
pop
dec
pop
je
movsl
iret
xor
sbb
jne
mov
add
push
lds
sub
test
movsl
cwtl
jae
out
mov
inc
pop
pusha
fdivl
into
push
test
jnp
push
jg
pop
xchg
in
dec
pushw
loope
inc
jae
insb
test
xchg
into
sahf
mov
fxch
lret
push
and
negl
push
sbb
mov
test
dec
push
push
inc
xor
mov
test
arpl
adc
add
mov
inc
imul
pushf
cmp
xor
popa
fst
lods
int
jp
sub
add
xor
shll
sti
push
test
std
jmp
fildl
cli
test
orb
push
xor
cltd
movsl
cmp
ss
mov
lcall
adc
push
out
jle
mov
jno
mov
or
add
xchg
popa
jle
and
in
cmp
mov
mov
cmc
and
es
addr16
lret
cmpsb
inc
int3
xor
or
insl
mov
ds
mov
adc
js
lahf
fistpl
cmp
pusha
out
push
arpl
sarb
loop
push
mov
jns
subb
mov
mov
or
push
pop
push
ret
sub
dec
adc
push
sbb
cwtl
repz
mov
popa
stc
imul
and
bound
stos
js
pop
push
and
mov
inc
push
out
inc
jl
ret
dec
pop
push
xor
test
aas
inc
push
push
test
testl
and
cld
xor
mov
push
loop
push
adc
cs
mov
cmc
add
stos
inc
pushl
push
addr16
int3
and
dec
push
inc
cmc
sub
adc
sbb
pop
mov
cmp
push
movsl
xchg
loop
cld
jg
xchg
jle
mov
outsb
mov
aam
xor
jae
mov
mov
jbe
das
popl
jbe
addr16
out
sbb
sub
jns
xlat
rorb
and
repz
pop
es
push
in
dec
cmp
into
dec
ret
xor
mov
stos
push
cmc
shlb
fisubrs
inc
inc
je
cmp
and
or
jae
xor
xchg
push
mov
sbb
jge
ss
jo
jle
aas
test
les
lret
or
pop
and
ss
jmp
add
out
test
mov
in
loop
and
mov
scas
push
lock
shrb
xchg
pop
inc
adc
adc
divl
pop
jl
scas
xchg
mov
in
mov
mov
jo
adc
mov
cli
gs
lahf
adc
imul
repnz
aaa
mov
lcall
add
lret
sahf
popf
les
int3
mov
insl
pusha
outsb
mov
jl
nop
addr16
or
inc
pop
cmpsb
xchg
push
adc
testb
out
popf
or
or
push
dec
xchg
jb
push
outsb
mov
mov
data16
cmp
adc
imul
push
loop
rolb
xor
push
fwait
sti
fimull
sbb
daa
adc
push
xchg
pop
jns
sbb
lcall
imul
mov
inc
nop
and
sub
mov
cmp
mov
push
pop
mov
shrb
and
xor
cmp
ret
or
mov
movl
in
mov
cmp
popf
hlt
push
cmpl
insb
xchg
mov
into
xor
call
pop
dec
repnz
sub
mov
in
push
push
inc
into
aam
adc
int
lock
out
mov
fcmovnu
loopne
cwtl
ss
es
jno
ret
cld
data16
add
sub
sahf
dec
pusha
cmc
push
outsl
add
and
dec
xorl
imul
jg
sahf
call
mov
je
push
aas
ds
ss
cwtl
dec
dec
das
outsl
test
push
rcl
mov
rorb
and
faddl
sbb
popa
mov
adc
pop
test
into
daa
dec
mov
pop
or
jne
outsl
push
cmc
int3
push
xchg
packuswb
push
mov
daa
scas
dec
adc
push
inc
xchg
stos
bound
lahf
jae
aaa
dec
push
xchg
iret
stos
cmpsb
fwait
xor
xchg
xchg
pop
stc
pop
fisubrs
enter
push
rclb
jmp
shl
cmpsl
dec
dec
gs
arpl
ss
dec
loopne
cltd
aad
cld
mov
in
and
fmul
addb
jb
ficoms
mov
ds
jge
dec
cs
push
pop
daa
xor
sbb
pop
jg
pop
sbb
xlat
inc
movsl
loop
push
mov
sub
and
pop
mov
dec
jmp
inc
jmp
out
fs
push
test
pop
mov
push
mov
mov
and
or
lods
in
dec
int3
imul
xchg
xchg
lret
cs
mov
mov
adc
arpl
or
sub
cmpl
mov
pusha
lods
clc
jge
je
lds
cmp
push
nop
pop
lret
mov
sbb
into
pop
into
ja
sti
int
xchg
leave
jbe
sbb
call
daa
push
pop
xchg
jmp
sub
inc
push
mov
leave
into
adc
in
jmp
gs
jbe
add
add
jg
pop
pop
call
lahf
jne
inc
in
pop
jbe
shl
iret
lret
lock
push
rorb
push
rcr
jecxz
sbbb
or
sarl
inc
cltd
stos
xor
popl
mov
push
ds
in
xchg
test
adc
je
add
daa
cli
std
xchg
adc
mov
push
sbb
sbb
xorl
out
dec
into
loopne
lahf
gs
fwait
das
jmp
int
sub
pop
rorb
jmp
orb
mov
aam
mov
xor
mov
into
xor
mov
lods
pushf
mov
pop
fisubs
out
mov
lret
int3
adc
sbb
or
sub
nop
jns
inc
and
adc
mov
push
iret
icebp
out
jp
fadds
xchg
outsl
fxch
push
xchg
or
inc
xor
push
iret
adc
stos
shlb
js
jae
or
push
frstor
jns
mov
int3
mov
xchg
or
cmc
shl
dec
mov
adc
mov
dec
rorl
mov
nop
push
inc
mov
dec
jg
cmp
out
add
daa
mov
in
fcmovbe
inc
dec
dec
xchg
dec
add
sbb
add
add
aaa
xor
jne
pop
dec
lods
and
push
es
add
xchg
clc
data16
rcl
mov
or
movsb
xor
mov
int3
xlat
cli
outsl
stos
clc
shlb
imul
jbe
addr16
push
into
cmp
and
and
or
sbb
cmpsl
mov
xor
xchg
ljmp
loopne
mov
mov
adc
cld
or
xor
leave
into
add
sahf
fwait
subb
mov
or
and
imul
inc
cmp
in
or
inc
rcrl
icebp
mov
cmpsl
sbb
add
jbe
xor
std
addl
int
ss
adc
sub
out
fdivrs
stc
jae
jbe
shl
loopne
and
mov
ja
sahf
xor
daa
pop
ret
cmp
mov
sub
push
fidivl
jno
pop
inc
arpl
gs
and
mov
outsl
or
sub
dec
loope
scas
test
mov
gs
add
sti
dec
shll
push
rcl
mov
add
popf
lahf
xor
cltd
xchg
xchg
mov
push
push
in
int
repnz
jno
fists
data16
adc
gs
das
push
or
insb
cmc
outsb
xchg
ret
adc
movsb
push
ss
mov
popa
and
mov
sub
mov
nop
sti
out
inc
push
mov
xchg
add
ds
pop
stos
xor
push
sbb
into
cmp
loope
scas
fwait
add
xorb
ret
mov
out
dec
dec
out
dec
mov
adc
lock
test
push
xchg
lods
lea
leave
pop
fwait
cld
js
xor
jb
mov
mov
jecxz
lock
push
mov
call
int3
loope
xor
sub
inc
mov
xchg
or
sbb
andb
out
int3
std
adc
leave
push
xchg
xchg
pop
xor
xor
and
jnp
neg
xor
stc
imul
hlt
ret
and
mov
xlat
leave
push
cmp
jecxz
xchg
test
shr
jle
data16
xchg
into
or
xchg
out
fwait
push
inc
cmp
leave
jmp
jne
mov
xchg
inc
mov
xchg
lret
cmp
int3
xchg
jp
push
pushf
or
testb
arpl
sub
addl
rcr
pop
xchg
cmc
dec
cwtl
dec
lods
sbb
push
adc
out
inc
cs
cmp
mov
lock
out
jl
bound
mov
mov
ja
cmpsl
adcb
and
dec
pop
and
std
cmp
sbb
daa
mov
pop
jmp
or
jge
mov
push
lret
outsl
dec
mov
push
xchg
or
stos
xchg
cmp
xchg
add
mov
movsb
pop
leave
lret
jge
ja
aaa
jle
test
jbe
pop
cmp
cmpsb
sbb
out
push
leave
push
jnp
movb
insl
mov
test
and
pop
stc
int3
std
shlb
sub
in
xor
adc
scas
add
loope
sti
bt
out
dec
ret
mov
lods
leave
pop
mov
loope
dec
out
test
inc
js
mov
outsb
xchg
addr16
loop
mov
pop
or
dec
stc
sub
mov
and
lds
pop
lock
dec
and
jae
jbe
cmp
into
pop
push
push
rcl
jo
std
add
sbbb
sarb
shll
stc
rcrl
jbe
add
jo
aad
cli
mov
pop
jl
aas
neg
dec
jns
jmp
lea
icebp
stos
sbb
inc
bswap
xor
adc
pop
add
jge
jns
xchg
ficomps
jne
xchg
cmpsb
rorl
push
stos
in
orb
stos
pusha
aam
sbb
xchg
rclb
stc
xor
mov
add
ljmp
cmc
push
push
lods
pop
mov
bound
and
sti
decb
xchg
filds
mov
cmp
shlb
cwtl
sbb
test
cltd
mov
sbb
adc
movsb
mov
lret
test
jl
pop
push
movl
dec
das
data16
test
inc
leave
push
imul
mov
clc
sbb
sub
loopne
inc
add
jmp
pusha
dec
lret
out
in
sbb
scas
fst
ret
das
cmp
imul
pop
popf
mov
dec
lods
cmc
sti
scas
das
xchg
arpl
mov
cmp
and
cwtl
fisubrs
mov
cmc
adc
xor
pop
add
je
and
cmpsl
std
push
dec
jbe
jno
or
mov
and
mov
xchg
not
push
mov
jmp
out
aam
push
add
in
push
inc
out
push
rcll
mov
add
clc
mov
outsb
lds
sbb
mov
mov
loope
rcl
adc
jmp
movsb
lahf
aam
inc
mov
pop
push
mov
jbe
ja
insb
xchg
rcl
dec
in
inc
sub
rcl
cmpl
inc
test
ret
adc
movsl
pop
dec
xlat
into
ffree
addr16
or
int
int
movsl
lcall
repz
and
cltd
js
sbb
test
xchg
dec
sbbl
mov
lret
xor
icebp
ljmp
scas
pop
mov
lock
push
cmp
sub
flds
std
ficoms
in
or
xor
sbb
or
fistpl
shrb
mov
loop
xchg
cmp
movsl
aas
dec
mov
sbb
loop
insb
lcall
loop
ret
sbb
sahf
inc
xorb
mov
clc
mov
mov
lret
popf
lret
in
rolb
inc
mov
pop
icebp
xlat
add
sti
mov
jne
loopne
inc
xchg
pop
addb
lret
cmpsl
cld
sbb
pop
mov
xor
cmp
jnp
movsb
mov
pop
lds
add
mov
adc
int
jle
repz
inc
cld
popf
and
scas
out
arpl
and
out
jle
cltd
inc
les
imulb
pop
xlat
nop
mov
jbe
inc
cwtl
popf
fsubrs
xor
pusha
out
or
sbb
push
dec
rcl
push
pop
daa
inc
jb
sub
push
inc
xor
pop
xchg
add
sti
inc
pop
add
aam
dec
mov
push
jbe
mov
push
mov
xchg
mov
mov
inc
push
pop
mov
mov
es
xchg
out
into
jle
jp
stos
push
dec
int3
xlat
adc
rcl
jle
push
jno
repnz
push
sub
xor
jecxz
daa
leave
sbbl
pop
mov
pusha
cmp
push
fsubrs
cmp
clc
leave
inc
shll
ds
pop
mov
scas
adc
pop
cmp
aam
cmp
and
push
cmc
mov
cltd
iret
push
jno
negb
sub
movsl
mov
data16
clc
hlt
sub
mov
mov
jo
lret
mov
imul
xor
inc
rcl
inc
add
jne
inc
jmp
mov
pop
cli
loope
jbe
int3
js
int
push
push
push
xor
adc
leave
nop
xor
arpl
test
lahf
xor
into
ja
dec
jo
pop
inc
in
xor
or
jae
inc
xor
sub
out
dec
push
stc
mov
inc
fmul
mov
or
subl
aam
dec
push
cwtl
adc
mov
inc
loope
test
sarl
int3
das
sub
ficomps
mov
into
cmc
addr16
mov
js
adc
sahf
mov
mov
out
xchg
cmp
sbb
adc
mov
and
push
jmp
arpl
insl
push
divl
pop
js
xchg
lahf
rcrb
mov
mov
push
sub
lcall
pop
and
and
jbe
pop
mov
aas
mov
push
dec
mov
jbe
push
push
outsb
push
dec
xchg
test
adc
push
or
push
push
shll
repnz
std
mov
in
mov
lds
mov
sub
add
push
add
in
or
add
gs
out
mov
xchg
roll
mov
and
fisubl
push
inc
sbb
scas
int3
xchg
aas
add
jbe
mov
aam
jno
adc
xchg
ret
cwtl
lahf
imul
inc
mov
out
or
mov
test
cmpl
in
test
in
jno
push
subl
adc
mov
jns
leave
enter
sub
add
pop
jecxz
sbb
cmp
xchg
adc
dec
mov
inc
popf
in
mov
fnstsw
and
jno
cmp
in
into
fadd
cmpsb
push
std
pop
pop
stos
mov
incb
int3
cmc
fdiv
push
fadd
inc
je
std
out
test
cmpsb
sub
adc
fcmovu
xor
pop
xorl
sub
xor
inc
pop
outsl
dec
mov
xor
xchg
out
and
mov
leave
ret
cmp
rclb
cwtl
jecxz
mov
jb
lret
or
or
jmp
jns
rcrl
cmp
fsubrs
outsb
mov
jbe
lock
push
push
sub
inc
adcl
in
out
outsl
nop
push
jl
fldenv
negb
dec
xchg
inc
insb
and
cmc
mov
jno
dec
push
push
adc
xchg
sbb
pop
and
adc
dec
sbb
aaa
in
cmp
outsl
ljmp
mov
cmpsl
jbe
movsl
mov
int3
out
mov
iret
es
xor
pop
or
lret
ficoms
sub
xchg
inc
push
and
pop
xor
sti
imul
xchg
xchg
jp
mov
sarl
jbe
jbe
popa
push
xor
fdivs
xor
repnz
sub
adc
cmc
fwait
lret
sahf
lcall
sub
into
test
push
fstps
dec
js
sub
ss
lret
jle
mov
lret
push
cltd
into
sbb
push
mov
push
cld
and
loope
jg
aad
cmpsb
mov
adc
into
mov
int
jge
daa
jns
sub
test
dec
jb
in
push
pusha
fistpl
outsb
fisttps
xchg
insl
push
cmpsb
outsl
mov
add
push
sarl
mov
pop
es
cwtl
ds
popa
aad
fstl
mov
jle
arpl
and
dec
cwtl
lods
inc
leave
into
cmp
loop
sbb
imul
sub
std
sbb
stc
pop
repz
xor
dec
xchg
sub
or
fimuls
ja
jae
mov
xlat
loop
lea
lret
mov
and
fwait
stc
adc
push
mov
mov
mov
jb
push
cmp
lea
xor
xor
mov
pusha
mov
das
test
rcrb
sub
js
call
jns
sahf
jb
mov
push
cli
into
ja
dec
xchg
lods
aad
jg
pop
pushf
out
xor
fsubs
mov
jns
sbb
in
pushf
rcl
leave
test
stos
push
mov
push
cmp
push
lcall
fcoms
cmp
pushf
sbb
xlat
lods
mov
dec
dec
adcb
sbb
mov
jg
pop
push
xchg
push
pop
add
xchg
jl
lods
pusha
lret
data16
in
or
inc
rcr
dec
ficoml
dec
or
jb
je
out
xlat
mov
mov
clc
out
test
in
scas
add
insb
cld
sti
cmpl
cwtl
fs
idivl
jns
aad
pushf
or
sub
xor
jo
out
ret
mov
daa
mov
mov
leave
mov
mov
dec
inc
sahf
dec
inc
enter
xor
jo
push
push
outsl
mov
pop
fldt
pop
sbb
out
add
xchg
xlat
rcl
push
ds
faddl
scas
outsb
jbe
pop
or
jg
and
sbb
sub
enter
movsl
mov
test
xchg
into
shlb
xchg
mov
mov
mov
inc
jne
cmovno
fdivrl
add
and
dec
and
sub
push
mov
sbb
test
mov
sarb
cmp
push
imul
testb
mov
adc
adc
or
out
xchg
xor
lock
jle
ror
pop
inc
call
adc
push
xor
repnz
sub
cs
jo
je
mov
jle
push
dec
lods
xor
push
enter
inc
gs
pop
int3
ss
xor
ja
dec
adc
jmp
xor
mov
scas
clc
bound
push
fistpl
and
sub
sub
cli
aam
ret
xrelease
xchg
sub
xor
shll
into
add
test
mov
pop
ficoml
or
xchg
jne
arpl
shrb
out
test
js
adc
xchg
int3
aas
popf
inc
jle
jno
scas
lock
cwtl
int3
cmp
add
cs
out
xchg
add
push
cltd
jmp
inc
fadds
lret
push
stos
mov
xor
add
sbb
call
jp
adc
rcll
popf
out
cmp
repz
mov
inc
in
into
adc
mov
inc
sub
rcl
push
and
lock
scas
xchg
hlt
jbe
jecxz
sti
rcrb
mov
or
xchg
inc
pop
sar
mov
shl
imul
mov
insl
pop
push
fadds
lds
pop
sbb
mov
xchg
mov
out
mov
xorps
lret
sbb
hlt
lods
mov
jl
bound
and
insl
push
dec
sbb
xchg
loope
ret
adc
adc
inc
push
stos
mov
mov
sbb
cli
cmp
pusha
cmc
or
std
setl
lods
aaa
stos
jo
js
out
scas
sbb
inc
imul
iret
jl
push
xor
clc
and
sub
cmpsb
std
shl
fwait
and
push
js
cmp
cld
imul
ja
stc
into
lret
clc
sub
ret
xor
adc
aaa
scas
and
call
outsl
insb
stos
out
popf
xchg
pop
int3
outsb
xor
jno
jecxz
push
into
fldt
mov
popf
fwait
or
cmp
sbb
cs
mul
fstl
imul
sub
or
inc
push
test
inc
mov
loop
sarl
js
iret
leave
push
sbb
loope
dec
movsl
into
sub
test
xor
add
repz
jg
lret
xor
fsub
mov
mov
cs
enter
push
or
iret
dec
mov
jbe
pop
push
xchg
out
dec
mov
inc
cld
mov
jg
popf
lods
loope
push
mov
imul
jge
cmp
inc
clc
xor
dec
adc
mov
cs
aam
adc
mov
mov
jmp
dec
out
xchg
lret
cmc
lret
mov
mov
jo
cmp
dec
adc
adc
shlb
cwtl
push
dec
jp
shlb
jnp
inc
lret
out
pop
mov
jbe
pusha
mov
fwait
xorb
fs
nop
gs
mov
jo
inc
mov
adc
jne
int3
xchg
jl
stos
out
daa
jb
outsb
ss
rcrb
fimuls
ret
cmp
mov
in
adc
jns
pusha
add
fiadds
ret
mov
jbe
mov
cmp
int
inc
leave
jle
out
icebp
dec
fnstsw
xor
inc
cmp
mov
lahf
insb
int3
lret
pop
out
stc
jecxz
push
dec
or
lahf
aad
je
dec
repz
jmp
jne
sti
movsb
push
mov
int3
xor
inc
and
enter
cmc
mov
in
icebp
push
dec
fcom
stos
or
sub
jmp
jnp
leave
mov
mov
mov
add
ficoms
arpl
adc
aad
fwait
insl
in
inc
loope
cmp
sbb
xor
lods
into
or
fcmovbe
lods
xchg
aad
mov
out
jbe
cmp
and
or
in
jge
outsb
sbb
xchg
inc
mov
inc
lret
jl
lret
cwtl
test
sub
jno
xchg
lock
mov
xor
lret
pop
ja
inc
inc
lods
xchg
jno
arpl
or
hlt
out
xor
sti
es
movsl
enter
in
pop
shll
adc
je
aas
or
lahf
imul
das
adc
jns
scas
push
fcompl
lods
dec
insl
or
mov
add
es
mov
ficoms
and
push
inc
out
nop
adc
cmpsb
movsl
or
jle
mov
bound
inc
add
mov
lcall
mov
fstps
and
sub
stos
push
mov
dec
jns
and
and
dec
xor
sarb
rclb
fistpl
pusha
out
andl
mov
ljmp
xor
cwtl
and
jmp
pushf
aad
pop
rcrl
cltd
xor
jbe
test
or
mov
popf
mov
shrb
hlt
sbb
push
mov
mov
jns
xor
ljmp
pop
jne
xor
test
or
lahf
or
push
cmp
minps
clc
cltd
pusha
sub
repz
cmpsb
mov
sub
xor
shl
test
sbb
mov
push
cmp
imul
pop
aaa
or
fwait
and
arpl
lret
jmp
rorl
test
pop
fisubl
cmp
add
dec
dec
jb
std
js
mov
stos
xchg
sbb
jmp
push
jne
pop
and
ja
fildl
out
or
or
or
mov
or
mov
xchg
pop
cmp
lods
mov
test
icebp
movsb
ja
mov
or
loopne
mov
cwtl
sub
adc
insl
fldcw
jae
iret
add
shl
mov
push
shrb
xchg
sub
int
out
stc
pop
imul
xchg
dec
pop
notb
xor
cs
or
pusha
dec
nop
jae
jns
dec
sbb
dec
xchg
cmp
cmp
mov
es
push
sti
cmpsb
cmp
in
or
lods
addl
movsl
scas
aaa
adc
and
sbb
mov
sub
orb
outsb
int
aaa
inc
lcall
inc
icebp
enter
outsb
push
pop
cmp
push
push
aas
jne
js
inc
xchg
shlb
cmp
dec
popa
mov
and
cmp
rorb
dec
pop
mov
mov
or
jge
push
ret
or
bound
orb
dec
inc
xlat
int3
fdivp
mov
xchg
jg
fs
in
out
imul
sbb
or
adc
push
mov
push
fwait
js
xorl
push
lcall
std
aad
mov
loope
scas
pop
movsb
xchg
push
test
sarb
ja
lods
push
mov
bsr
xorb
pop
jge
movsl
in
loope
mov
notb
test
jl
jmp
divl
inc
mov
insl
pop
out
mov
dec
push
loopne
filds
std
push
outsl
adc
inc
int
clc
es
adcl
andb
xchg
mov
test
mov
dec
lcall
repz
inc
xlat
xor
push
cltd
into
inc
xchg
std
xchg
fwait
dec
jae
jl
das
aaa
scas
aaa
mov
jno
nop
and
lock
mov
shlb
dec
shl
and
xlat
sub
jne
pop
loope
rorl
mov
into
xor
out
inc
ja
sarb
jecxz
js
and
jne
enter
ret
adc
cli
jo
outsb
xchg
nop
or
push
jbe
mov
scas
inc
test
shlb
jecxz
lret
insb
jno
scas
xchg
mov
dec
xor
loope
mov
out
mov
xchg
xor
adc
dec
jb
jnp
in
shrb
xchg
fwait
std
popf
adc
cmp
add
mov
push
sub
xchg
lret
jnp
loop
call
or
sub
mov
sbb
cwtl
adcw
popf
pop
sbb
dec
imul
negl
dec
int
cmp
push
add
std
mov
andb
lods
icebp
push
addr16
out
cs
xchg
out
cmpsl
or
add
and
xchg
jbe
cmp
xor
or
fpatan
mov
mov
in
mov
dec
jg
into
sti
nop
sbbb
icebp
adc
cwtl
mov
pop
rdpmc
rol
imul
cld
shlb
mov
mov
xchg
into
jne
ficompl
jmp
test
fucomi
movb
jl
movsb
jecxz
and
pop
add
shll
in
icebp
mov
sti
pop
jecxz
xchg
jp
aam
sub
push
adc
mov
mov
adc
mov
ja
in
cmpsb
rorl
or
adc
jns
add
jb
dec
leave
or
xchg
xor
shlb
notl
dec
dec
cmpsl
inc
fdivrl
ss
imull
test
rol
mov
mov
fwait
sub
lret
lock
mov
mov
enter
inc
xor
xchg
stos
mov
push
fwait
stos
addr16
out
push
cmpsb
pop
mov
push
cmp
out
imul
mov
insb
cmc
repz
pop
iret
pop
push
leave
mov
sbb
fcoms
cmp
pop
hlt
mov
xchg
pop
jbe
stos
push
xchg
test
pop
dec
mov
sub
test
or
addr16
adc
pop
imul
jp
and
push
xchg
incl
pop
mov
mov
cwtl
mov
fimull
sbb
jge
or
idivb
shll
mov
mov
imul
in
lods
mov
cmp
or
punpckldq
pop
fldl
push
sub
mov
adc
repz
inc
adc
mov
jbe
adc
pop
sahf
into
lret
sbb
outsw
rcll
jmp
and
sbb
or
mov
mov
cmp
sub
fsubrl
arpl
cli
or
repz
into
mov
sub
out
dec
xor
cli
pop
pop
notb
pop
lret
repz
sbb
xchg
rorl
lods
out
xchg
int
mov
mov
adc
icebp
testb
xchg
add
sbb
pop
and
or
cmp
cmp
xchg
out
push
out
sub
stc
outsb
cmp
in
mov
xor
mov
pop
push
sbbb
es
out
outsl
into
xorl
dec
ds
ret
sbb
nop
rol
cmp
jno
mov
bswap
add
clc
sub
stc
pop
jb
jmp
mov
sub
adc
repz
dec
mov
xor
or
or
es
dec
push
or
push
add
push
stc
pop
sub
adc
fdivrs
in
xchg
out
mov
inc
shr
pop
scas
jbe
cltd
outsb
filds
mov
jne
dec
pop
add
cli
ljmp
push
dec
jb
gs
ss
xchg
or
mov
iret
mull
lcall
in
loope
cmc
in
imul
mov
cmp
lds
lock
push
and
int3
lea
dec
dec
mov
ja
mov
jecxz
cs
jg
inc
mov
jle
dec
in
push
xor
or
jecxz
fbstp
xchg
rol
adc
sbb
cltd
ja
jo
and
hlt
cmp
jl
test
pushf
cmp
rcrb
pop
movd
cld
out
rcl
sub
stos
jecxz
fwait
rcrl
aaa
or
test
xor
xlat
dec
mov
in
adc
std
clc
insb
sbb
push
xor
aaa
pop
imul
fisubl
push
test
fldl
pop
aam
dec
mov
fistpl
jnp
aam
cmp
cmpsl
add
push
pop
stos
jge
pop
rorb
aad
xchg
je
push
lock
mull
ds
fldenv
movb
sbb
dec
and
sub
mov
push
add
lret
lods
adc
je
xchg
adcl
negl
mov
mov
push
pop
iret
mov
insb
mov
jle
jmp
scas
mov
pop
imul
add
pop
xchg
sbb
shlb
xor
into
into
xchg
bound
and
loopne
lods
push
movsb
inc
cmp
iret
into
mov
lahf
push
mov
mov
cmpsl
stc
fdivrs
push
dec
outsl
pop
enter
leave
inc
in
in
outsb
daa
and
dec
xor
adc
dec
cmp
mov
mov
pushf
mov
daa
add
xor
xchg
jae
xchg
loope
pop
inc
push
sub
push
les
sar
pop
and
loop
fld
cli
aaa
repz
loope
sub
jbe
lcall
test
mov
adc
push
sbb
mov
arpl
rorb
mov
sub
out
fs
lret
inc
ss
and
and
in
shll
and
clc
xor
stos
arpl
aad
jmp
mov
mov
cmpsl
aaa
inc
into
leave
fstpt
enter
pushf
js
clc
cli
pop
sub
push
repnz
jb
push
xor
test
mov
push
mov
or
dec
outsb
roll
rclb
push
pop
pop
fistpll
fnstsw
push
jno
popf
sarb
daa
or
ljmp
push
inc
push
cmp
pop
inc
into
add
sbb
das
push
iret
mov
mov
xor
fprem
shrl
loopne
inc
add
xchg
enter
add
addl
insb
pop
mov
jbe
push
out
stos
out
daa
dec
add
sub
ret
adc
dec
imul
test
dec
stos
lret
rol
mov
xchg
push
into
xchg
push
push
xchg
or
aas
dec
movsb
mov
xor
cmpsl
lret
mov
ret
cltd
repz
push
mov
out
jp
pmulhw
ror
in
lret
into
pop
test
mov
jmp
movsl
pop
dec
pop
adc
into
jb
int3
repz
jno
lret
cmp
daa
lcall
ss
mov
lock
adc
shlb
mov
pop
dec
jno
xchg
sub
hlt
inc
ja
or
cmp
and
loop
and
ds
push
xchg
pop
es
adc
add
sub
or
gs
adc
fbld
scas
outsl
ss
adc
int3
js
mov
jp
movsl
sahf
mov
pop
cwtl
xor
cmp
dec
fdivs
inc
sub
xchg
lret
sbb
adc
cmpsb
xchg
dec
cmp
aaa
mov
stos
iret
or
adc
inc
aad
out
add
divb
or
pop
jb
es
or
xor
xlat
in
stos
jnp
mov
xchg
mov
mov
add
push
lods
into
lret
ret
es
arpl
mov
push
aaa
cmp
test
fldcw
into
out
dec
push
fst
leave
lahf
negb
or
push
push
sbb
loop
push
pop
aaa
cs
add
jg
add
pop
and
xor
lret
fiadds
outsb
cmp
sub
and
mov
jbe
inc
xchg
add
into
jb
addr16
aad
mov
sub
shl
pop
out
xchg
xchg
cmpsl
out
add
jb
imul
cmp
out
fistpl
in
cmp
push
bound
mov
imul
xor
es
dec
xor
inc
sbb
pop
in
divb
inc
arpl
js
sub
jp
mov
and
xchg
adc
mov
mov
cmc
movb
mov
jle
sub
lods
lea
push
fdivp
repz
mov
pushf
push
or
out
jmp
aas
ss
jae
cs
sub
dec
or
mov
popl
into
idivb
cmp
inc
adcl
jg
les
xchg
mov
mov
leave
pop
add
mov
xchg
mov
lock
ds
rcll
add
lcall
cwtl
or
push
sub
mov
xlat
pop
lods
jge
pop
inc
lret
fnsave
bound
cld
cmp
pop
lcall
push
inc
pop
mov
cmpsl
outsb
dec
dec
or
push
dec
cmpsb
dec
push
imul
popf
mov
or
adc
pop
xor
push
insb
int3
pop
hlt
cld
sbb
cmp
jbe
sbb
adc
xor
add
lock
add
pop
pushaw
xchg
ljmp
into
push
cs
out
out
fbld
inc
sub
xchg
mov
shll
mov
xor
in
cmp
movsb
cld
pop
jecxz
push
orl
ds
bound
lret
mov
lods
popf
and
lcall
xchg
and
xor
push
lods
pop
inc
mov
int
into
rep
out
outsb
rol
in
int
lret
out
xchg
push
xor
stos
cmpsb
dec
inc
aas
popa
and
mov
inc
rorb
ljmp
mov
ds
adc
sub
mov
push
popw
inc
xchg
test
mov
cmc
mov
dec
cmp
subb
push
sub
xor
nop
cld
xor
cs
sbb
mov
xorb
rorb
stos
add
fadds
nop
std
inc
das
ljmp
popa
in
cmpsl
enter
lods
sahf
pop
in
pop
xchg
into
daa
adc
andb
and
popf
int3
sahf
mov
dec
out
data16
and
sbb
mov
lcall
iret
fcomps
or
jns
dec
pop
fiadds
out
xor
xchg
jno
jbe
push
or
add
mov
cwtl
mov
push
arpl
xchg
out
xor
adc
loop
xchg
push
out
mov
stc
lret
mulb
mov
adc
shll
sub
jl
aas
icebp
std
dec
outsl
lret
mov
ljmp
xchg
dec
dec
inc
andps
sbb
sub
push
mov
imul
jle
add
or
xor
dec
sahf
pop
imul
and
add
cld
cwtl
je
lods
test
mov
push
in
cmpsb
daa
mov
repnz
mov
stos
movsl
inc
mov
fstl
stc
mov
ret
sbb
cmpsl
int
jbe
lods
rcll
dec
or
sub
mov
test
dec
xchg
daa
jae
and
sbb
int
sub
scas
imul
pop
cs
cld
jns
and
inc
push
sub
rolb
add
mov
pop
xchg
dec
mov
and
cmpsl
ret
rcr
push
nop
push
punpckhdq
daa
outsb
int3
adc
jl
rcr
cs
jl
cwtl
std
insb
je
stc
roll
mov
fwait
or
pop
aam
and
mov
xor
lret
lcall
xchg
jmp
pop
lods
push
mov
adc
outsb
lret
fstl
xchg
cmpb
push
gs
jno
test
or
jmp
jbe
repz
out
shr
into
hlt
mov
test
clc
das
adcb
lahf
push
hlt
mov
mov
call
xchg
jmp
into
lret
in
scas
icebp
clc
xchg
jo
aam
rol
hlt
ret
rcl
mov
jecxz
mull
mov
jge
popf
pcmpgtw
ja
insl
push
xor
shl
sbb
cmpsl
jg
call
arpl
cmp
sbb
shr
sub
sbb
test
jmp
das
fisttps
jno
icebp
mov
push
fadd
out
xor
sti
mov
pop
dec
mul
pop
pop
sbb
or
sub
lret
stos
out
loop
dec
push
aaa
aas
shrl
pop
push
into
stc
mov
mov
cmc
jno
dec
loopne
mov
cmp
adc
or
mov
sti
push
outsl
or
dec
xchg
addr16
or
jo
test
push
xor
pop
jecxz
jbe
push
sbb
das
test
lahf
dec
xor
jmp
cmc
and
jns
push
addr16
pop
nop
dec
mov
mov
mov
addr16
dec
into
mov
xchg
and
arpl
nop
call
fs
push
pop
ror
mov
inc
dec
gs
test
pop
in
je
xchg
pusha
test
lods
imul
repnz
xchg
cmp
sub
rclb
xor
xchg
addl
xor
dec
mov
pop
dec
out
pushf
loop
sub
pop
cmp
js
arpl
and
outsb
push
in
arpl
jg
pushf
dec
cmp
imul
cltd
test
jno
add
in
mov
shll
push
mov
ljmp
ja
in
pop
rcll
mov
xor
jecxz
push
xlat
loop
lds
icebp
cmpsl
or
mov
mov
cmp
aam
fisubl
cs
jns
jbe
dec
scas
adc
sbb
in
mov
mov
add
xor
and
cmp
push
ror
sub
sahf
and
dec
xchg
xchg
cltd
repz
mov
sub
xchg
push
out
fs
fimuls
shlb
add
add
call
inc
btr
and
mov
ljmp
inc
ficoms
and
xor
aam
dec
push
xchg
pop
sub
jmp
enter
js
sub
imul
movl
pop
mov
xchg
xor
xchg
mov
in
repz
in
pop
sarl
sub
outsl
lds
pop
mov
aaa
push
or
add
jp
enter
cmc
jmp
cld
jno
mov
xchg
int3
mov
xchg
inc
inc
lock
cmpsl
sub
repnz
or
loopne
adc
jecxz
mov
movsb
pop
cmpl
in
or
inc
das
xchg
fwait
ljmp
xor
test
sbb
aad
inc
out
fwait
pop
and
in
adc
xlat
inc
inc
jl
mov
subb
shlb
rol
pop
test
in
test
inc
mov
mov
pop
fiadds
lret
and
cld
pop
push
pop
mov
stos
ja
fcmovb
mov
aad
sar
xorb
push
adc
inc
cmp
push
mov
add
xchg
into
fwait
out
mov
jmp
cwtl
fdivrl
cmp
push
push
arpl
scas
cld
jg
add
dec
insl
out
inc
pop
xor
test
or
jbe
ret
add
adcl
sub
repz
bound
mov
mov
and
shll
int
sub
into
cs
sbb
and
stos
inc
inc
add
adcl
ljmp
je
mov
mov
es
mov
inc
push
sbb
enter
jno
pushf
pop
std
and
data16
lods
scas
lods
xor
imul
sbb
dec
sbbb
inc
dec
test
cmc
rcll
xor
pop
bound
idivb
imul
call
jo
adc
push
test
scas
push
mov
lret
rcrl
mov
dec
mov
mulb
xor
inc
add
mov
xlat
test
ja
inc
inc
mov
jne
lcall
cmp
fmuls
aaa
inc
push
cld
or
mov
add
cmc
jae
adc
leave
int3
movsl
jmp
adc
adcb
lods
mov
pop
fcompl
mov
sub
jb
test
sub
nop
add
shll
jb
and
daa
nop
dec
cmp
jne
test
notb
fcmovnu
pop
sub
loope
inc
dec
das
jle
es
adc
push
dec
cmpsl
addr16
movsl
scas
test
inc
pop
mov
push
cmp
mov
inc
fstp
xchg
jecxz
jmp
cmovp
xor
repz
jg
jnp
sbb
dec
out
push
pop
mov
in
push
mov
mov
xorb
stc
test
or
loop
stos
jb
or
adc
addr16
std
fcom
mov
out
pop
cmp
mov
loopne
clc
pusha
sbb
aam
sub
addr16
sbb
push
imul
test
add
aad
into
cmp
or
lea
pop
mov
into
movb
mov
sbb
xor
rorb
mov
pop
divb
lret
cwtl
out
inc
loope
xchg
arpl
dec
ljmp
inc
cmpsb
jbe
out
add
mull
cmp
xchg
xor
xchg
ja
xchg
je
xchg
into
push
xor
out
push
cwtl
mov
repnz
stos
in
jne
add
dec
jg
xlat
sar
xchg
lock
and
and
loopne
ret
or
sti
ss
sub
das
lcall
mov
jg
jno
xor
jne
cmp
push
es
push
push
sub
mov
sub
popw
rol
jmp
jmp
ror
jns
xchg
into
jne
add
sbb
pop
lea
fldcw
push
pusha
push
je
das
lret
xchg
sbb
leave
sub
jl
jp
jb
xor
stos
into
push
neg
pop
mov
xchg
mov
cs
inc
jne
ja
aam
pop
push
cmp
cmpsl
dec
arpl
fstpt
jmp
pop
mov
xchg
ljmp
mov
int3
mov
inc
and
mov
jbe
jmp
and
mov
loop
test
dec
cltd
fnstcw
and
cmp
jg
dec
lcall
shl
aad
jmp
into
lahf
cmp
push
mov
sarb
daa
gs
jbe
mov
mov
add
nop
ret
scas
insb
dec
daa
imul
add
and
sti
fstp
rorb
jnp
pop
push
xchg
xchg
mov
or
sub
cmc
cmpsl
aad
hlt
sub
or
jae
jle
and
aaa
or
adc
push
add
into
pop
jae
jb
pop
mov
inc
ret
inc
aas
jne
and
push
cltd
sub
popa
inc
stos
jmp
lcall
fs
xchg
fcmovnbe
push
scas
sahf
ret
push
dec
sbb
inc
jge
xchg
pop
cmp
mov
ret
pushf
fwait
jo
icebp
inc
mov
dec
pop
jecxz
pop
pop
and
mov
scas
pop
lock
ret
xor
push
sbb
leave
cmp
jns
test
bound
into
dec
cmp
dec
xor
clc
in
mov
inc
fcomp
movsl
xchg
sbb
cmp
popf
out
sbb
icebp
ljmp
mov
or
push
push
lret
popa
adc
sbb
dec
pop
add
push
fisubrs
jno
sbb
addr16
mov
fcmove
adc
popf
rorl
mov
jmp
rcll
and
ss
test
mov
push
push
iret
or
sbb
lock
test
fnstcw
xchg
pop
rorl
adc
aam
scas
add
call
lret
gs
mov
push
pop
mov
cmpsb
dec
jg
sbb
sahf
daa
adc
test
adc
notb
cwtd
out
xlat
fcomi
ret
fdivrs
aaa
lcall
ljmp
jne
jae
jl
sbb
test
cli
xchg
mov
fstl
sbb
sbb
lahf
rorl
inc
jge
push
dec
cmp
pusha
jae
out
icebp
mov
adc
jp
into
lahf
rcll
inc
xor
jnp
fwait
xchg
mov
push
cmc
mov
push
aaa
adc
cwtl
mov
clc
dec
cmp
sbb
jb
inc
aas
dec
cmp
shrb
movl
inc
inc
mov
xlat
lret
mov
sub
repnz
xor
jecxz
adc
dec
inc
lock
cmp
jp
ret
les
jns
in
movsb
lea
outsb
rorb
pop
sub
xchg
xor
adc
insl
test
lret
gs
imul
pop
fst
pop
test
pusha
dec
mov
movsl
and
mov
jp
int3
ja
mov
mov
out
cmp
xor
inc
xchg
into
outsb
addr16
ret
rorl
or
mov
cmp
add
dec
push
cmpl
mov
inc
test
into
jo
mov
dec
sub
mov
mov
addr16
inc
loopne
jnp
jge
push
push
ss
mov
dec
pop
popf
fimull
loopne
push
xchg
fs
ret
push
es
xor
insb
or
cmpsl
inc
popa
or
pop
in
sub
mov
es
inc
adc
adc
out
clc
repnz
aam
xor
mov
loope,pt
iret
sbb
movsb
mov
cmpl
inc
insl
pop
stc
or
pushf
shrb
jmp
dec
rcr
shlb
test
subb
loope
mov
push
popl
pop
int3
lret
cmp
ret
xor
mov
out
cmp
sbb
jo
pop
mov
push
mov
pop
sbb
mov
cld
inc
data16
adc
and
pop
movb
mov
adc
adc
into
movsb
imul
testl
and
cmc
dec
pop
ret
or
mov
push
sbb
cltd
int
out
je
mov
lods
arpl
and
sbb
and
xchg
add
jnp
dec
sbb
mov
or
adc
das
sub
sub
mov
mov
sub
mov
sub
inc
popa
fcmovnbe
sbb
int3
addl
xchg
pop
orb
and
push
test
stos
imul
jno
ud2
repz
xor
push
int
lods
out
sub
test
scas
add
or
clc
cmp
test
push
aam
sub
jno
xchg
xchg
mov
aaa
cmc
cwtl
and
movsb
or
lods
mov
xlat
xchg
dec
je
daa
mov
sbb
test
and
mov
push
or
mov
iret
scas
scas
out
push
mov
cmp
push
faddl
add
rcll
jb
or
pop
enter
sub
loopne
leave
jne
int
imul
popa
xchg
out
cmp
pop
in
and
lds
or
add
jne
sahf
and
mov
bnd
je
xchg
jge
cmc
cmpsb
imul
lcall
sbb
sub
outsb
les
sbb
xlat
mov
xor
divb
sbb
xchg
fstp
iret
fidivs
rcrl
mov
inc
inc
nop
xchg
xchg
hlt
into
lea
sub
in
pop
adc
movsb
fcmovbe
push
push
adc
jp
daa
sti
lds
inc
pop
aam
aaa
bsf
clc
cld
sub
jbe
jecxz
push
xor
adc
loope
mov
into
adcl
dec
addb
mov
dec
int3
cmc
aas
cltd
shrb
outsl
jl
xchg
sbb
pop
js
hlt
mov
lret
fwait
mov
bound
sub
pop
xchg
mov
mov
add
xchg
div
push
scas
jle
push
test
and
fwait
inc
sub
iret
rcll
bound
sbb
sub
jmp
sbb
dec
dec
rorl
xchg
xchg
call
lret
cmpsb
dec
ljmp
sub
stc
loope
pop
sbb
les
or
es
adc
out
xor
arpl
cs
pop
sbb
andl
pusha
mov
add
mov
mov
data16
stos
mov
mov
add
aad
push
pop
push
xchg
movsl
xchg
cmp
mov
pop
mov
aas
cmc
bound
mov
out
mov
popf
jmp
inc
int
jae
mov
dec
jecxz
repz
mov
pop
cmpsl
stc
push
xchg
adc
mov
rorl
push
or
sbb
insb
mov
aaa
das
mov
fmulp
fstps
jge
arpl
loopne
push
ljmp
xchg
into
fldl
xchg
mov
xchg
pop
push
repz
arpl
jb
or
into
inc
mov
arpl
mov
or
xchg
xlat
jge
aad
cwtl
mov
movsb
jb
pop
and
or
dec
insb
test
mov
lods
xchg
cmp
shll
sbb
sub
pusha
push
mov
jns
test
inc
loop
cmpb
clc
outsb
ret
cld
dec
xchg
adc
jmp
pushf
repnz
ss
into
push
out
mov
sti
test
lret
mov
or
lods
xor
sbb
push
push
sarb
addr16
mov
adc
adc
and
aas
mov
pop
jl
cld
cmp
mov
sbb
or
mov
jg
lret
cld
push
test
or
dec
inc
out
stc
lds
data16
xor
push
push
daa
xor
out
or
jecxz
int3
call
roll
pop
lods
inc
and
add
jo
sbb
imul
ret
loope
mov
pop
mov
std
cmp
loopne
addr16
xor
jp
adc
adc
mov
sub
xchg
clc
xchg
jnp
stos
popf
mov
inc
push
fistpll
enter
xchg
dec
push
sbb
loopne
rcrb
popa
mov
push
pop
outsb
hlt
dec
mov
jo
sub
cmc
jge
mov
inc
cmp
add
rcll
pop
xor
pop
add
mov
xchg
or
pusha
mov
sarb
and
pop
cmpsw
shrl
shrb
cld
sbbl
ret
and
movsl
push
or
cwtl
sbb
das
or
or
push
test
and
fildl
cli
repnz
aad
add
iret
into
push
andl
xor
push
cmpsb
jo
dec
sbb
rolb
push
mov
dec
fildll
add
cmc
dec
jmp
pop
and
or
test
mov
pop
and
mov
fsts
out
xor
mov
or
out
popf
dec
inc
pop
sahf
ficomps
call
dec
aam
push
cmp
es
cmp
adc
scas
fnstenv
gs
into
in
inc
aas
jne
cmp
pop
pop
push
in
lods
stc
push
daa
pop
iret
ss
int3
jae
pop
lret
fcomi
mov
xchg
les
clc
pop
xchg
pop
mov
out
gs
lods
ljmp
push
ret
rcl
jnp
sbb
test
jne
push
pusha
cmp
rclb
fldl
push
pop
mov
sti
and
jnp
pop
and
das
or
jecxz
jg
adc
ret
mov
xchg
cmpsb
add
rcl
jno
adc
jecxz
flds
shl
in
push
imul
jecxz
push
xchg
outsl
add
push
dec
adc
fmuls
and
subb
ljmp
jge
dec
and
ficoms
sbb
aad
mov
xlat
dec
mov
inc
pop
mull
repz
adc
add
movl
int
in
and
repz
push
jb
and
in
cmc
dec
ficomps
or
inc
sarl
mov
call
arpl
imull
cmp
xchg
add
fstl
ljmp
mov
xor
int
inc
jge
in
add
pop
xchg
mov
and
mul
cltd
pusha
push
jo
loopnew
ljmp
ret
xchg
stos
call
sub
ja
cwtl
rcll
mov
cs
out
insb
xchg
push
scas
dec
cltd
into
scas
pop
pusha
int3
lret
dec
ja
add
sbb
jo
test
sbb
and
jb
out
fsubrp
xor
and
cs
push
stc
outsl
mov
sarl
dec
into
jge
adc
jmp
dec
std
enter
aaa
sub
sarb
or
push
mov
test
inc
icebp
lods
lret
lret
xor
mov
mov
push
mov
lods
mov
push
test
test
fs
stos
or
jnp
xchg
xchg
arpl
add
outsl
xchg
movsl
xchg
in
not
hlt
ret
movsb
fisubs
int
jno
sbb
test
jecxz
jg
xor
inc
mov
xorb
int3
push
mov
inc
mov
cmp
test
push
lds
xor
stos
mov
jbe
fsubs
nop
out
loopne
loop
pop
xchg
cmp
fldenv
repnz
push
aam
fdivs
outsl
loop
inc
ljmp
or
in
sbb
int3
add
sbb
into
jae
rcll
jno
xlat
sbb
repnz
ret
fistpl
neg
sub
lcall
clc
adc
xchg
lods
lods
mov
and
loopne
das
insb
ja
mov
jecxz
out
rcl
sbb
aad
aam
push
xor
mov
mov
out
mov
push
mov
mov
cmp
pop
mov
push
dec
lret
loop
in
xor
xorl
pushf
mov
pusha
test
adc
lret
iret
insb
jmp
xor
add
into
push
pop
inc
ds
or
imul
fwait
sbb
shufps
xchg
xchg
dec
popa
pop
fisubs
js
data16
mov
out
addr16
jbe
cmp
push
rorb
pop
push
mov
mov
test
lods
push
sbb
lods
je
push
cmp
sub
pop
sbbl
loopne
lret
or
cmp
cmc
push
sahf
adc
mov
fisttps
stc
les
pop
js
aas
mov
lcall
sub
cs
movsl
loop
test
xchg
mov
test
sub
mov
inc
aas
dec
int3
mov
adc
sub
out
cmp
push
mov
test
cmp
push
testl
into
xchg
rorl
das
xchg
mov
adc
aam
std
mov
xor
lret
test
mov
repz
or
ds
shrl
adc
cmp
and
call
cltd
mov
sub
sarb
pop
mov
mov
clc
jg
xchg
jecxz
shl
jae
movsb
aaa
xchg
into
add
pop
jecxz
cmp
inc
mov
adc
out
mov
sbb
cmp
cs
std
andps
xchg
add
jo
jbe
jns
jl
add
pop
jne
mov
popl
movsl
fcoms
cmp
lock
and
xchg
push
dec
pop
add
lods
xchg
dec
fs
lds
ss
insl
fistl
adc
mov
fwait
mov
push
sbb
jmp
mov
sub
fisttpll
sbb
int3
jecxz
test
mov
in
add
into
je
mov
cs
aam
jg
leave
pushf
mov
pusha
add
and
jno
sub
scas
ret
jecxz
jae
out
out
xor
push
sub
mov
xor
loop
sbb
adc
leave
rcl
fcom
pop
in
shr
push
push
cmpsl
cmp
add
inc
ds
mov
pop
dec
pshufw
cmp
testb
xlat
jp
mov
ss
in
cld
dec
and
sub
add
jb
xchg
mov
push
iret
aam
pop
insl
or
add
sti
testl
jbe
fwait
xchg
jl
adc
cmp
insb
dec
mov
push
stos
dec
movsl
push
mov
callw
int
xchg
mov
jmp
dec
mov
stc
inc
int3
jg
push
adc
movb
dec
mov
jne
or
insl
jbe
xchg
into
mov
inc
add
pop
outsb
popa
jecxz
or
out
jecxz
push
jb
jg
add
nop
mull
mov
adc
xchg
outsl
xchg
cmp
adc
cmpb
pop
stos
or
ret
xchg
push
jb
fyl2xp1
inc
and
push
and
sub
div
ja
fistl
jmp
jbe
ret
sbb
lret
push
lcall
sarb
mov
and
mov
fs
aad
xor
icebp
les
cmp
xor
add
push
mov
push
fs
iret
xchg
push
push
push
aam
jo
xchg
jecxz
sub
cmc
sbbl
int
shlb
xchg
loop
and
pusha
or
jl
jne
push
dec
jne
jmp
xchg
xchg
sub
xor
ret
sahf
add
rcrl
adc
lahf
je
in
lcall
pop
mov
sub
es
mov
cmp
out
mov
mov
mov
bound
shl
xchg
add
daa
leave
mov
ss
jge
jbe,pn
sahf
push
in
sub
test
jnp
pop
lock
add
sub
and
daa
test
fs
xchg
frstor
fisubl
dec
push
dec
fstps
and
ljmp
mov
add
nop
rcrb
aas
jo
mov
sub
out
gs
add
test
fdivrp
lret
push
je
test
sub
push
fld
sarb
inc
lods
pop
int3
push
pop
aam
sbb
xor
add
and
mov
cmc
dec
cmpl
adc
sbbb
not
aas
lahf
sub
cmc
loope
fldl
dec
retw
mov
push
mul
lods
push
sub
imul
insb
ss
imul
dec
dec
or
lea
jg
adc
in
xor
mov
sbb
sub
push
popf
inc
inc
lea
dec
push
fdivl
cmpsl
stos
dec
bound
mov
leave
outsl
cs
lock
mov
inc
sbb
pop
les
xchg
jb
xchg
scas
aaa
sub
jnp
and
sbb
cld
fistpl
rcl
imul
push
jbe
and
and
loope
cld
or
add
fimull
add
xchg
aas
mulb
sbb
push
loop
inc
sbb
push
pop
xchg
cmp
or
fcom
ss
ljmp
je
psrad
test
cs
lret
int3
push
xchg
sbb
mov
push
cmpsl
mov
outsb
inc
pusha
cmc
std
leave
mov
xchg
mov
xor
xor
fisubs
cmp
aad
popa
sub
xchg
mov
loopne
mov
pop
out
jne
jecxz
fidivl
sub
into
lods
dec
scas
ss
xchg
loop
outsb
test
adc
in
lods
push
pop
daa
out
repz
repz
jmp
pop
dec
mov
or
imul
pop
adc
scas
popf
xor
loopne
add
inc
addr16
xchg
xchg
sbb
mov
mov
push
in
jns
fstps
xchg
xchg
in
repnz
or
ja
push
int3
mov
mov
push
sub
movsl
or
addr16
jb
mov
mov
pop
pop
jle
pushf
cmp
mov
insb
bts
and
scas
bound
sub
loop
mov
fcom
nop
aad
test
push
cmp
push
stos
and
jmp
dec
mov
jmp
repz
lret
das
pop
out
xchg
mov
mov
stos
popa
pop
jbe
cltd
rorb
movsb
fsubrp
sub
xchg
outsb
xor
std
lock
pop
or
cmpsl
js
pop
or
cmp
mov
decl
mov
and
lods
stos
lret
fimuls
out
in
pop
xor
in
mov
xor
dec
pop
push
in
rcrb
dec
nop
outsb
sahf
imul
and
or
xchg
jp
mov
cmpsl
aaa
sbb
subl
push
pop
adc
mov
fimuls
aaa
leave
lods
add
inc
dec
pop
mov
mov
cli
dec
fwait
adc
shrb
inc
mov
jne
xor
cmp
int3
adc
orl
jmp
lret
xor
pop
rorl
stc
outsl
pop
movsb
lods
enter
out
es
cmpsb
lahf
call
and
arpl
cmp
mov
lahf
cltd
int3
daa
hlt
cmp
mov
aas
and
add
lods
mov
cwtl
outsb
test
push
iret
mov
rcrb
movsb
sub
sub
or
cmp
push
test
xchg
cld
jmp
xchg
push
clc
xchg
inc
xchg
push
rcrl
mov
rcl
jb
mov
add
add
add
out
out
ljmp
insl
lret
mov
jb
out
jecxz
lods
and
dec
xor
lret
xchg
or
pop
push
or
sbbb
cs
rcr
jbe
add
xchg
pop
push
dec
push
dec
xor
insl
addr16
adc
pop
stos
call
pop
icebp
jnp
mov
loopne
push
outsl
push
mov
pop
cmc
insb
lock
daa
adc
jno
cmc
and
mov
in
je
xchg
xor
push
lods
fdivs
es
lds
and
mov
push
add
adc
jno
rol
int
outsl
in
push
push
adc
fcmovne
loope
or
test
sarl
ret
sub
loopne
int
sub
inc
push
and
mov
mov
shrb
inc
jl
dec
mov
inc
dec
aam
rclb
push
hlt
push
rcrb
rol
and
jno
test
or
dec
xchg
andl
testl
inc
movsl
mov
setl
imul
stos
ja
jne
lea
pop
add
jnp
xchg
loopne
test
cmp
stos
jecxz
in
inc
pusha
int
jmp
sub
mov
mov
sahf
inc
xchg
mov
jbe
iret
jno
jge
mov
popf
mov
jge
push
or
mov
cmpsl
outsb
mov
push
fwait
fs
addb
hlt
into
sub
imul
repz
or
pop
repnz
xchg
aam
aas
mov
movsl
lds
inc
dec
daa
int
test
adc
arpl
pushf
fsin
pop
aam
inc
add
push
add
daa
adc
sbb
arpl
pop
push
xlat
push
jp
ret
fs
stos
je
mov
or
xchg
sbb
shll
sub
rcr
into
xor
sub
sub
cmp
pop
mov
mov
push
negl
jg
int3
cld
fcomps
aas
movsl
bound
push
ja
mov
fistpl
movsl
cld
movsb
fdiv
lock
lretw
lds
clc
pop
mov
shlb
lcall
sub
repnz
fcoml
sbb
into
addr16
movsb
repz
dec
xor
imulb
sub
mov
push
cltd
daa
push
add
mov
adc
or
dec
xchg
or
repz
push
movb
dec
aaa
movsl
rol
mov
cmpsb
push
lcall
pusha
out
shlb
fs
mov
insb
push
mov
mov
loopne
lcall
sub
lds
mov
push
aaa
mov
mov
mov
movsb
das
xor
incb
xchg
imul
pop
inc
in
movb
sarb
gs
cmp
inc
imul
aaa
or
fisubl
jp
rcrb
rclb
mov
aad
out
jo
push
lahf
dec
mov
outsb
test
pop
xor
xor
outsl
mov
inc
orl
jnp
sbb
ljmp
inc
pop
cmp
int3
pop
data16
jp
dec
test
mov
sbb
sub
sub
mov
cld
xchg
into
mov
decl
insb
jns
or
or
jo
and
pop
mov
push
test
push
push
sbb
es
mov
movb
dec
outsb
adc
and
xor
xlat
sbb
iret
loopne
adc
sahf
push
sbb
call
pushf
movsb
cli
hlt
sbb
cld
xor
cmc
xor
cltd
mov
mov
xchg
push
mov
imul
add
sbb
mov
movsb
xor
rolb
jno
mov
pop
int
sbb
mov
jbe
sbb
dec
into
sbb
mov
nop
sbb
lock
push
pop
sbb
mov
and
push
cltd
fcmovu
cmp
push
jb
jecxz
mov
jle
push
mov
push
fnstcw
in
sbb
fadd
mov
push
iret
pop
pop
shrb
xor
mov
es
lret
lock
arpl
mov
push
stos
add
pop
adc
jnp
mov
pushf
sbb
repz
cmp
mov
dec
mov
mov
scas
in
mov
cmp
pushf
fmull
cmp
add
sub
mov
dec
test
es
in
hlt
cmp
test
in
idivb
xchg
or
insb
sbbb
lcall
shl
jp
aaa
sbb
in
inc
notl
inc
scas
cli
pop
mov
stc
lock
push
loop
clc
mov
adc
add
imul
gs
mov
xor
pop
dec
adc
das
jns
xchg
lcall
repz
dec
dec
stc
orb
scas
dec
pop
sub
jbe
mov
inc
call
mov
ret
out
lods
mov
xlat
adc
inc
cmpsb
rolb
adc
jae
xor
int3
mov
sbb
mov
pop
mov
notb
lahf
sbb
inc
add
int3
xchg
call
leave
out
fs
lods
or
ja
adc
fbld
jbe
inc
imul
pop
scas
out
fistpl
lcall
lret
insb
sub
arpl
lret
daa
mov
movsb
cmpsl
lds
adc
mov
sbb
aaa
pop
mov
and
bound
repz
aad
sbb
or
mov
dec
and
mov
aad
stos
sub
xchg
push
into
dec
mov
stc
cmp
lods
mov
mov
mov
sub
inc
xchg
cltd
mov
in
incb
inc
jge
inc
lret
rcl
and
fldt
mov
jne
emms
mov
inc
fnstcw
cs
inc
lahf
dec
pop
stc
rolb
xchg
daa
filds
out
xchg
xor
push
xchg
mov
cmp
dec
push
addr16
ljmp
jmp
iret
lea
lret
shl
pop
and
dec
mov
push
sub
or
cltd
adc
scas
jmp
xchg
jge
arpl
jle
jae
jbe
cmp
sbb
out
data16
pop
jnp
mov
inc
loop
sarb
push
stos
push
jecxz
xor
popaw
jns
test
out
push
filds
les
fstp
enter
xchg
fmull
lret
dec
arpl
mov
mov
xchg
scas
push
or
mov
adc
xor
cmp
cmp
jbe
mov
cmpsl
xor
das
cltd
push
stc
jp
mov
xchg
jb
sbb
mov
xchg
push
imul
arpl
imul
pop
fs
pop
insb
stos
xor
incb
ja
or
lret
adc
mov
and
xor
xchg
cmp
pop
out
lcall
hlt
jb
inc
popa
popf
notl
out
into
inc
and
ret
push
int
mov
push
stos
ja
pop
xchg
insb
les
cltd
jmp
mull
or
push
add
int
pop
jge
adc
sub
js
and
into
mov
xchg
daa
in
dec
loop
hlt
jmp
xor
mov
pop
in
jb
cmpsb
fsubrs
jmp
dec
rclb
adc
lock
xchg
lods
loope
clc
adc
adc
push
test
into
adc
scas
shll
pop
mov
cmp
lret
mov
cmp
shlb
push
mov
cmpl
or
mov
add
outsw
inc
dec
add
aad
push
loope
and
xchg
lods
mov
sbbl
push
stos
clc
xorl
mov
into
ss
loop
mov
push
push
dec
inc
and
xor
movsb
jg
and
out
xchg
push
les
lret
iret
fildl
aas
jmp
inc
sbb
jl
sbb
sbb
shll
jmp
and
fidivrs
push
inc
or
fcom
sbb
test
ret
lret
sub
cmovle
ds
pop
add
mov
stos
sub
or
xor
cmp
inc
lret
jl
adc
push
inc
add
mov
lds
fstpt
daa
mov
repz
js
sub
out
ds
jmp
and
cli
in
rorl
in
cmpsb
adc
loope
mov
mov
sbb
xchg
mov
daa
popa
sbb
popa
out
add
jne
sbb
int3
xor
mov
and
mov
jns
popf
dec
push
mov
fwait
imulb
push
xchg
add
dec
dec
fnsave
inc
adc
inc
push
pop
push
sbb
sahf
fs
aam
mov
hlt
lea
movsl
jne
inc
negb
cmp
add
into
loopne
out
je
cwtl
mov
mov
test
lahf
loopne
inc
test
nop
jnp
xor
or
add
push
rcrb
imul
test
add
or
dec
sarb
out
jle
fstpt
mov
cmp
in
lret
mov
jl
mull
pop
mov
push
or
cmp
jge
fiadds
xchg
dec
push
or
fsubs
jno
mov
loop
iret
adc
xor
cld
lcall
xorl
push
fldenv
fwait
lods
in
movl
inc
adc
mov
add
push
movsl
mov
test
cmp
push
pop
sarb
xchg
cmc
pushf
in
test
or
jle
ljmp
jb
loope
sbb
or
push
push
nop
jbe
popf
sub
insl
mov
test
mov
pop
mov
mov
cs
xor
pushf
mov
add
xchg
sub
xor
lcall
aas
lea
or
sub
mov
ds
jns
es
imul
pop
lahf
pushl
mov
pop
cld
xlat
dec
scas
sbbb
cs
out
pop
jo
std
xchg
xchg
mov
clc
mov
call
push
add
and
lods
stos
and
mov
jne
push
repz
daa
mov
dec
or
jo
lods
aam
dec
sub
into
inc
lret
push
ficoml
mov
push
xchg
or
ljmp
subb
fldl
inc
nop
les
adc
cs
test
cmp
push
cmp
testb
add
sarl
sbb
divb
cmpsl
mov
test
sbb
or
jmp
je
adc
sub
imul
cmpsb
mov
stos
mov
add
fst
orb
lcall
or
xchg
outsl
dec
cmc
cli
frstor
inc
clc
rcrb
data16
and
mov
adc
push
and
repnz
xchg
cwtl
sub
inc
test
dec
jne
mov
dec
and
xchg
push
jle
stc
push
lret
mov
sbb
lahf
dec
dec
sub
dec
inc
insb
out
add
fldl
cli
call
aam
sahf
popa
and
mov
pop
sub
push
jno
jb
and
fs
inc
leave
aaa
in
inc
test
pusha
lret
or
jne
dec
out
rclb
fcomp
repz
xor
pop
loopne
push
lea
push
add
ljmp
jecxz
sub
xchg
sbb
adc
adc
dec
fwait
xor
mov
push
sbb
adc
shrb
and
pop
fdivl
dec
mov
jb
sbb
rcll
lods
andl
js
push
and
mov
mov
add
pop
mov
and
in
xor
fidivs
xlat
pop
cmp
or
jae
in
xlat
push
pop
sbb
adc
push
cmp
inc
loop
inc
or
ds
iret
add
jae
gs
sbb
xchg
frstor
adc
pop
orb
sub
ret
movsl
testb
leave
mov
out
xchg
jmp
inc
aam
xor
xchg
outsl
xchg
jne
les
aad
jbe
int
enter
xor
dec
mov
sbb
cmc
sti
inc
xchg
stos
das
mov
mov
mov
cmpsl
icebp
inc
adc
and
mov
lcall
out
pop
cmp
add
push
movsb
cs
fdivs
out
loopne
push
mov
sub
aas
cmp
aaa
cmc
popa
pop
in
in
out
mov
pop
loop
pusha
ret
inc
jne
push
jbe
xchg
rcr
pop
adc
add
mov
pop
sbb
jge
cmp
addr16
ss
icebp
ficoml
add
addr16
pushl
sti
add
pop
xor
sub
popf
test
jmp
mov
pusha
jle
fnsave
or
and
jmp
scas
js
pop
in
jns
sti
xadd
pop
add
int
xlat
push
imulb
cs
mov
jns
add
inc
xchg
xor
mov
pop
pop
or
daa
stos
ret
xor
fimuls
push
sbb
bound
dec
jmp
mov
mov
inc
mov
not
adc
xor
mov
xor
cmp
jmp
and
ja
cli
stos
mov
bound
adc
mov
cmpsb
sti
imul
and
aas
cmc
push
daa
adc
hlt
push
mov
cmp
das
sub
inc
outsb
stos
repnz
fs
or
dec
addr16
push
out
sbb
xchg
orb
xchg
movsl
mov
rol
aaa
shlb
push
pop
addr16
sbb
mov
mov
add
addr16
rorl
fs
out
mov
mov
push
cld
jns
mov
mov
sti
out
testb
hlt
leave
jmp
add
int3
xchg
lods
sbb
mov
lret
sub
mov
mov
fwait
jns
cli
lahf
xor
aad
iret
jle
lods
leave
fbstp
or
cmp
subl
jns
mov
jb
aaa
push
out
leave
lock
out
lret
xor
and
add
push
pop
test
rcrb
es
xlat
mov
xchg
jbe
jl
mov
ja
test
insl
jecxz
mov
rcll
xchg
xchg
cmp
in
mov
mov
stc
hlt
loope
bound
dec
jne
daa
and
cmp
and
jmp
leave
xchg
cmp
xchg
push
fs
fldl
mov
pop
push
pop
pushf
out
cltd
and
cmp
dec
and
dec
add
cmp
fsubrl
pop
push
pusha
lahf
push
stc
inc
mov
inc
ds
stos
jecxz
pop
test
inc
xor
repnz
xor
sahf
lock
sar
jmp
clc
test
mov
sub
cmp
repz
cmp
add
lahf
sub
cmpsl
in
sahf
into
sbb
push
icebp
ja
push
cltd
jg
xchg
jmp
stos
cwtl
and
inc
mov
add
pop
ret
mov
in
lret
or
mov
push
popf
hlt
push
sbb
cld
jno
sbb
lds
loop
xchg
outsl
int3
pop
out
mov
xor
jge
stos
mov
fcmovbe
mov
lret
or
lcall
cmpsb
hlt
aas
insb
pop
push
pop
sarl
push
lret
ret
dec
pop
loop
xchg
jmp
fildl
cwtl
leave
adc
stos
negl
push
jg
xchg
xchg
push
xchg
int3
push
push
and
push
jl
sarb
stos
inc
sbb
pop
clc
mov
test
lret
imul
ret
sub
xchg
jmp
outsl
ja
push
into
test
test
mov
dec
js
pop
mov
push
cmp
mov
inc
sub
jbe,pt
mov
pop
sbb
cld
xor
das
and
repz
inc
mov
jnp
jb
cwtl
inc
enter
es
push
rorl
pushf
mov
sbb
sub
cmp
and
call
xchg
testl
dec
das
xchg
dec
aad
jl
sbb
dec
movsb
fs
insb
loop
push
jmp
and
loopne
pusha
cmc
or
jbe
pop
dec
dec
fisubl
pop
mov
xor
rorl
jno
test
lods
sbb
jp
or
dec
push
hlt
ret
or
ret
jge
mov
jns
sbb
out
and
rorl
lret
mov
iret
scas
mov
into
jp
jbe
lea
xchg
mov
jb
pushf
lret
popf
int
es
and
add
jb
mov
stc
pop
lds
mov
ja
pop
adc
mov
data16
outsl
into
push
in
xchg
mov
sarb
sub
das
lea
outsb
jg
xchg
cmp
lods
dec
cmc
outsl
popa
in
dec
scas
fisubrl
mov
test
and
push
stos
sub
inc
or
stc
insb
les
out
push
push
jns
adc
sarl
cli
adc
xor
cld
and
fidivl
enter
add
dec
andb
ljmp
pop
inc
enter
test
add
icebp
cmp
adc
arpl
test
sbb
ficoms
push
testl
xor
jbe
js
cmpsb
stc
push
into
ficoms
cmp
into
jno
lods
dec
stc
push
xor
xchg
jecxz
daa
push
inc
mov
fstpl
push
out
mov
xchg
lahf
shrl
sbb
pop
dec
lock
jl
adc
dec
jg
mov
aaa
xor
push
mov
dec
popa
jne
jle
clc
inc
xlat
out
test
outsb
xchg
mov
int3
sbb
push
jg
sub
pop
lods
lods
movsl
insb
lock
mov
push
ja
add
sbb
add
es
pushf
mov
lcall
lret
xlat
mov
ss
adcb
jnp
xor
mov
scas
push
xchg
out
cmp
aas
cli
cmp
out
jae
enter
or
mov
sub
dec
sbb
jnp
mov
in
sub
test
adc
xor
ret
jbe
pop
mov
jle
es
xchg
loop
loopne
movl
jae
xor
lret
jns
pop
rcll
add
xor
sahf
dec
rcl
jge
jne
ficoms
xor
insl
lock
cmp
sar
js
add
or
push
dec
imul
negl
out
pusha
or
outsb
push
xchg
lahf
mov
notl
into
repz
sbb
cmp
adc
sbb
dec
xlat
daa
cmp
dec
imul
sbb
rcl
push
xchg
pop
mov
out
loope
popa
std
divl
mov
xchg
mov
push
and
sahf
xchg
data16
inc
lods
out
jmp
hlt
and
in
inc
add
mov
or
jbe
ja
dec
lret
mov
rcl
xchg
mov
xor
scas
je
mov
or
add
mov
or
out
mov
cmp
jl
sahf
std
stos
adcl
das
les
dec
outsl
cmpsl
aaa
and
mov
loopne
lahf
jmp
mov
xchg
pop
mov
sub
pop
test
mul
icebp
or
int3
movsl
dec
cmp
aas
mov
mov
shl
fstps
clc
scas
test
pop
jmp
adc
xlat
push
lret
cwtl
jmp
dec
aam
mov
jl
push
xor
push
aaa
add
sbb
and
add
out
in
iret
mov
loop
push
mov
mov
inc
call
xor
stos
pop
std
sub
movsl
sti
rcr
or
rcrb
fdivrl
loopne
jmp
mov
sub
pop
mov
jmp
inc
lret
sbb
sbb
ljmp
mov
cmp
push
dec
sbb
les
xchg
mov
adc
xor
xor
gs
test
cltd
pop
jbe
popa
push
aam
jp
mov
out
pop
das
inc
addl
or
jl
out
popf
mov
mov
sub
dec
and
pop
mov
into
loope
mov
and
jo
dec
sub
xor
cmp
leave
stos
add
sub
mov
inc
std
test
data16
rorb
inc
mov
cld
in
cltd
push
jb
ret
xchg
inc
pop
mov
dec
pusha
mov
and
and
jg
push
test
cmp
xchg
jle
mov
xchg
loop
jle
aaa
ss
pop
or
pop
jl
pop
or
aad
jg
dec
cltd
inc
in
dec
add
stos
adc
and
adcb
sub
jbe
mov
popf
mov
into
mov
push
pop
sbb
cmpsb
dec
xchg
xchg
sbb
subl
cmc
mov
rcrb
xchg
jle
pop
jb
lret
and
sahf
inc
popa
mov
push
add
mov
lret
inc
test
pop
lock
test
dec
adc
xchg
call
pop
jns
jmp
notl
push
das
repz
mov
push
inc
jp
je
lret
cltd
in
add
divl
scas
test
sti
xchg
movl
inc
movsl
sub
lods
mov
jae
jo
lret
xlat
pusha
daa
test
popa
adc
cmc
pushl
iret
sub
adc
dec
cld
nop
lret
das
jno
or
je
es
out
pusha
lcall
sub
add
jmp
pop
pop
push
jmp
push
mov
jle
mov
in
or
jno
sbbl
and
rcll
xor
push
xchg
stc
mov
bound
pop
push
in
test
and
push
fimull
push
fstl
inc
mov
int
pusha
in
adc
faddp
adc
sbb
sbb
mov
ljmp
mov
into
adc
das
orb
pop
out
lahf
out
sub
and
xor
mov
mov
xchg
enter
and
jnp
sbb
cmp
lret
add
xor
dec
lcall
scas
push
cmp
ljmp
std
lods
and
jge
mov
and
ljmp
xchg
push
stc
jno
scas
xchg
lret
aam
adc
repz
mov
lods
cs
lock
lea
xchg
cli
js
mov
pop
dec
xchg
movsb
mov
lcall
gs
imul
outsl
pop
xchg
xchg
pusha
push
jp
mov
jmp
popa
ja
scas
lock
mov
mov
xchg
jno
fld
hlt
inc
das
jmp
fdivrs
mov
ja
in
arpl
add
addr16
roll
push
cs
aam
es
pop
jbe
adcl
adc
aam
and
fiaddl
xchg
mov
push
mov
in
out
mov
jle
mov
lret
out
loope
cmp
rcrl
mov
push
shr
xchg
mov
fwait
adc
push
jmp
enter
cmp
rolb
mov
sahf
pop
mov
mov
rdtsc
sbb
xor
cmp
lret
or
adc
add
inc
mov
lds
push
call
mov
in
shlb
jae
pushf
xchg
xchg
pop
sti
lock
push
popa
xchg
into
loopne
xlat
cmp
xor
push
mov
ret
and
lret
sbb
cmp
inc
into
sahf
fdivrs
adc
test
loop
mov
pop
jmp
mov
add
sub
les
rcrl
jno
push
or
dec
cmp
add
push
or
add
jb
ja
pop
aad
mov
cwtl
xchg
cmp
popa
das
cmp
rcr
adc
sbb
mov
movsb
test
ret
rorl
mov
jnp
imul
inc
cmpsl
dec
movsl
nop
push
xchg
int
iret
mov
in
push
out
ret
shrb
dec
add
pushl
or
loop
push
cwtl
lods
int3
mov
cmp
fs
add
test
outsb
sbb
mov
push
data16
icebp
mov
mov
jecxz
js
fnstenv
frstor
out
imul
inc
iret
test
addr16
cmpsl
ds
popf
dec
pop
and
aas
xchg
data16
addr16
adc
fbstp
fisubs
xor
lds
mov
push
std
push
pop
mov
rcrb
jo
cmc
addr16
mov
lea
and
negl
fisubrs
outsb
fwait
mov
rcl
es
aaa
stc
xchg
stos
aas
inc
push
xor
sub
mov
jns
imulb
inc
std
xchg
shll
xor
leave
push
mov
rolb
pushf
add
pop
pop
arpl
push
ss
pop
lret
not
ja
pushf
adc
scas
inc
xor
xchg
sbb
call
in
test
inc
aaa
inc
mov
sub
fstps
or
push
ror
arpl
or
stc
lret
add
aas
out
pop
das
lret
adc
pop
or
mov
ljmp
sbb
inc
mov
popf
lea
jg
dec
mov
mov
mov
das
pop
cmpsb
neg
jbe
push
sub
stos
xor
mov
mov
mov
lods
dec
sti
data16
iret
faddp
add
xchg
aaa
and
les
sub
stos
enter
lret
js
push
mov
fwait
cltd
in
out
scas
dec
lahf
loop
jbe
xchg
andb
lret
xchg
and
mov
repnz
push
int3
push
sti
inc
notb
js
pop
stos
cmp
out
mov
jbe
mov
push
and
adc
scas
mov
lods
je
dec
sbb
out
test
push
cmpsb
adc
loop
aam
jnp
aam
leave
adc
iret
rcrl
lret
outsb
into
sti
add
inc
rorb
repnz
or
in
and
clc
xchg
inc
jb
into
jne
jmp
daa
stc
push
dec
int3
add
pusha
sub
cld
dec
jl
xor
sti
pop
pop
xlat
fadd
test
push
shlb
loopne
dec
and
mov
pop
push
ds
jp
sbb
mov
icebp
hlt
ja
adc
jmp
stc
testl
in
out
insb
nop
lret
mov
std
in
test
inc
xchg
leave
inc
inc
arpl
mov
xchg
mov
sar
mov
test
or
addr16
scas
out
push
adc
in
sub
xchg
adc
nop
and
adc
mov
adc
loop
in
jg
add
sbb
pop
das
inc
ja
cmpsl
xchg
shl
inc
mov
fsubrs
ret
arpl
rclb
mov
push
cmc
xchg
cmpsl
mov
mov
push
stc
aad
xor
testl
mov
clc
pop
js
sbb
xlat
out
fwait
int
mov
aaa
in
popf
cmp
push
push
into
ds
popa
sti
mov
je
xchg
gs
xor
es
ret
xorl
nop
and
lret
jne
sub
fldenv
test
or
out
call
add
fldt
pop
mov
inc
sti
hlt
jae
pop
push
addb
mov
lods
and
imul
test
mov
mov
iret
xor
inc
in
insb
lods
cmc
test
cli
mov
cmpsb
dec
mov
jge
pop
add
dec
in
dec
mov
aam
push
push
roll
jmp
or
xor
shl
pop
test
pusha
push
stos
cmp
mov
in
pop
sub
das
sarb
push
cmpsl
inc
arpl
icebp
das
sub
nop
aam
mov
fwait
stc
xor
dec
fisttpl
mov
sub
mov
jle
movsb
xchg
loope
cmp
cmp
or
push
push
mov
testl
pop
adc
std
dec
movsl
movsb
test
roll
jecxz
arpl
mov
rclb
push
fsubr
addr16
mov
jb
fs
fidivs
adc
inc
jo
add
rol
loope
mov
ljmp
add
dec
shlb
cmp
int3
mov
sbb
nop
or
sub
sbb
mov
std
mov
cld
inc
loope
adc
repz
cwtl
aam
jbe
mov
fldt
push
adc
out
das
jl
popf
ljmp
imul
jno
sbbl
pusha
out
dec
fimull
sub
and
cmp
add
add
jne
or
jno
cmp
xchg
jo
frstor
and
sbb
sub
cltd
cmpsl
and
mov
popf
add
int3
aaa
inc
shll
iret
cmpsb
jmp
xchg
mov
cmp
ret
xchg
mov
popa
iret
push
and
rclb
not
mov
leave
icebp
mov
adc
fistpl
cmp
cmpsb
sbb
add
xchg
int3
filds
notb
mov
test
mov
xor
scas
inc
xchg
nop
insl
movsb
and
add
inc
jmp
jo
inc
or
cmp
inc
setl
dec
ss
rcrb
cld
push
mov
daa
cmp
lods
mov
into
testb
inc
imul
aam
add
andb
mov
dec
cwtl
mov
nop
int3
mov
jle
shlb
inc
jecxz
sub
ret
pop
leave
xchg
and
daa
mov
mov
std
testb
pop
ss
pop
call
clc
daa
out
outsb
ret
lahf
lret
leave
scas
fcmovnb
call
movsb
xlat
and
mov
sub
decl
adc
les
sub
xchg
mov
rcl
xchg
sbb
push
movsl
push
pop
or
ret
ja
aas
lret
push
lret
loopne
orb
mov
lcall
scas
addr16
mov
adc
mov
jbe
fwait
jl
rcrl
push
mov
sbb
ja
movsw
jne
push
jle
int3
test
outsl
cld
pop
jo
insb
mov
jle
xchg
in
roll
shlb
stc
jns
or
cltd
imul
test
popf
push
xchg
das
jmp
xlat
xchg
sahf
pop
stos
pop
dec
imul
call
push
add
pushf
aas
iret
into
imul
adcl
test
cmpsl
jmp
pop
push
test
pop
js
pop
popf
push
pop
xchg
cwtl
inc
add
into
jno
pop
jg
adc
bound
ffree
ret
mov
shlb
adcb
rcrb
das
mov
outsl
cwtl
mov
test
fs
xor
or
into
add
out
insl
jnp
fs
inc
inc
data16
mov
iret
push
push
icebp
push
pop
lret
loop
test
mulb
pop
sub
mov
rorl
mov
inc
ds
jns
loop
je
js
jno
and
push
sub
sbb
push
xchg
ficoms
addb
xchg
add
cli
jge
rorl
js
dec
inc
xchg
rcrb
fwait
mov
mov
cmp
xor
sub
js
into
jne
mov
sbbl
fsubl
or
lret
out
sbb
add
jecxz
addr16
int3
adc
push
cmp
jbe
xchg
mov
test
ja
mov
test
lahf
dec
loop
xchg
dec
sarb
pop
jl
cli
push
sub
test
push
xchg
jne
scas
movsb
push
fwait
pop
xchg
jecxz,pn
loop
xor
mov
jge
xchg
xchg
int
and
add
nop
ss
aam
jb
push
cmp
dec
fld
dec
imul
xchg
mov
arpl
cld
or
outsb
pusha
into
cltd
stos
iret
addr16
dec
and
sub
cmc
sbb
sub
push
push
movsb
xrelease
js
jmp
cmpsl
xor
test
jge
xchg
loop
jne
pusha
xchg
mov
inc
je
push
and
xor
and
pop
mov
pop
fildl
movsb
push
pop
sarl
iret
aad
sbb
push
and
lds
mov
xor
jecxz
shr
adc
dec
push
in
nop
xchg
xchg
pop
mov
sub
xchg
mov
lea
cmp
arpl
mov
jb
mov
and
movsb
gs
add
cmp
cmpsb
out
scas
xlat
xor
jo
mov
and
imul
push
jbe
test
mov
out
fidivrl
and
gs
lret
or
cmpsl
mov
adc
and
jg
jns
dec
fcomi
int3
cmp
xchg
mov
stc
lds
fs
or
mov
mov
adc
mov
fwait
lret
in
fmul
or
xchg
ss
inc
not
jmp
pushl
stc
cmc
lret
push
addr16
cmp
divb
sub
xchg
push
repnz
jmp
ja
in
js
cmpsl
les
push
xchg
cli
lods
or
int3
xor
lret
mov
gs
add
jbe
xchg
jp
lret
arpl
adc
loopne
sub
pop
xor
daa
jne
mov
into
les
pop
lock
cmp
insl
out
xchg
addr16
lods
test
sarb
das
nop
mov
cltd
xor
dec
pop
std
sub
pop
dec
addb
mov
icebp
push
lods
aaa
stos
sub
mov
dec
fwait
push
mov
adc
daa
iret
mov
es
dec
mov
sub
pop
mov
push
idiv
in
jle
fsubs
popa
mov
jp
addl
mov
arpl
xor
push
inc
lcall
push
out
and
dec
jns
dec
imul
pushf
sub
lods
pop
stos
cmpsl
std
cld
addr16
or
mov
frstor
ret
push
push
fdiv
push
xor
fcmovbe
add
mov
and
popf
dec
not
ljmp
xor
inc
push
mov
adc
rcl
pushw
sub
inc
aaa
inc
push
into
lahf
int
pushf
push
and
out
jmp
in
mov
or
xor
out
xchg
enter
repz
pop
lcall
out
sbb
lods
jg
loop
and
out
daa
xchg
popa
pop
add
or
mov
mov
pop
ljmp
cmpsl
inc
jns
add
xchg
xchg
hlt
mov
fs
fiaddl
adc
push
popf
in
cltd
pop
sub
stos
xchg
add
rolb
sub
mov
int3
cli
dec
mov
xor
fs
enter
fwait
sub
xchg
mov
pop
dec
sarl
aam
das
aas
push
rorb
out
mov
scas
push
mov
xor
mov
aaa
rcrb
and
xor
add
dec
ja
cmp
jmp
out
push
mov
ljmp
mov
mov
fsubl
cmp
das
cmp
and
sbb
loope
pop
mov
dec
or
jge
add
pop
sub
push
ds
aad
imul
cmp
dec
or
lret
push
push
xor
pop
cld
adc
xchg
sti
lods
and
cmp
adc
rorl
aas
push
fsub
loopne
lret
xor
arpl
push
or
popf
dec
cmp
xchg
out
lods
and
repz
aam
xorb
mov
cmp
cmp
inc
dec
loopne
jbe
cli
pop
xlat
mov
shll
jp
mov
sbb
ss
iret
mov
push
mov
xchg
inc
jge
ja
insl
sbb
inc
sub
mov
test
lret
or
xchg
or
cmp
dec
jo
rcll
mov
push
mov
pop
mov
dec
repz
sbb
or
adc
mov
outsb
insl
std
or
nop
es
and
and
lcall
adc
push
add
insl
data16
sub
jle
imul
push
cmpsb
sbbb
xchg
in
inc
fdivrl
or
fsubp
cli
aam
pop
inc
dec
mov
outsl
je
in
pop
les
mov
dec
js
roll
movb
lds
jle
cltd
xlat
xor
repnz
out
and
popf
scas
enter
into
adc
adc
pop
sbb
loope
rolb
sbb
scas
insl
iret
jg
idivb
xsaveopt
and
fs
xchg
dec
scas
pop
repnz
movsl
sahf
mov
mov
subl
mov
or
ljmp
imul
je
movsb
sub
xor
and
adc
ja
jne
add
aas
jns
jne
out
jg
mov
inc
push
cmp
jge
xchg
xchg
sti
push
lcall
push
incl
es
lods
cmp
int
push
adc
cmp
add
out
test
or
pop
outsb
push
inc
jmp
mov
adc
cld
sbb
xchg
in
push
adc
lds
jg
xchg
ds
roll
pop
push
pusha
lea
xchg
idivb
movb
aam
and
pusha
sbb
in
push
cmp
cmc
xorb
add
aas
cmp
push
and
lcall
mov
loop
push
inc
xor
and
movsl
imulb
fstpl
loop
imul
lcall
imul
ds
push
je
nop
ja
test
std
arpl
inc
fucom
test
cld
push
jnp
jbe
jns
shl
or
mov
pop
int3
pop
xor
repz
aam
jno
outsl
mov
push
repnz
sub
pop
adc
out
inc
pop
add
push
das
inc
mov
call
mov
lock
ss
xchg
xchg
push
adc
arpl
popa
insb
mov
scas
stos
mov
push
sbb
mov
int3
mov
mov
jne
gs
fisubrl
cmp
pop
xchg
and
cmp
sub
clc
dec
fcomp
popf
jno
cmp
inc
cs
push
test
mov
add
mov
cmp
xchg
lock
out
adc
std
pop
xor
popf
loop
int
sbbb
sahf
lock
outsb
aad
ret
cmp
jbe
scas
jecxz
xlat
xor
into
pop
aam
xchg
test
sahf
mov
sbb
roll
ss
xchg
inc
or
mov
rep
jecxz
or
mov
adc
jmp
dec
in
pushf
sub
hlt
xchg
push
lret
movsb
test
mov
je
js
fisubl
jne
push
clc
or
xor
sbb
lret
pop
pushf
xlat
pusha
shll
pop
lret
add
inc
xor
push
lahf
imul
pop
movsl
mov
xlat
daa
and
mov
dec
stos
pop
lahf
xchg
mov
xor
mov
mov
fidivl
inc
lahf
mov
repnz
xor
adc
mov
enter
scas
aam
or
xchg
fcomp
sub
mov
inc
lea
xchg
xchg
std
adc
stos
mov
sti
xchg
data16
pop
mov
je
jmp
or
push
cmp
repnz
sub
add
jp
lahf
and
mov
pop
mov
mov
push
gs
xchg
icebp
imul
sub
ljmp
mov
fists
ss
xchg
cmp
cmp
out
xchg
mov
inc
out
sarl
loope
push
es
xor
jg
add
cmp
das
aam
fmuls
adc
fcmove
xor
xchg
or
dec
push
mov
mov
cmp
xchg
ficoms
sub
inc
ds
jl
into
bound
cmp
int3
fiaddl
test
test
mov
xchg
shll
ja
or
stos
pop
mov
push
aaa
xor
xchg
stc
mov
inc
mov
mov
in
aad
dec
sub
xor
scas
ss
adc
adc
mov
sub
js
push
insl
add
hlt
add
fcom
popf
out
pop
jl
je
cvttps2pi
sub
fisubrs
repz
aas
mov
or
xchg
lods
or
loop
pop
mov
test
dec
sarl
xchg
mov
sbb
sbb
nop
in
jp
push
mov
mov
cmp
addr16
stos
pusha
cld
lock
cmp
adc
jne
mov
lret
in
lcall
shll
stos
fisttps
pop
jns
imul
inc
and
insl
lea
mov
outsl
push
ret
imul
sbb
in
add
clc
pop
or
test
and
xchg
mov
hlt
xor
or
push
ds
xor
xchg
adc
stos
mov
push
pushf
cwtl
lret
nop
lods
pop
push
dec
sbb
std
into
int
mov
ja
jp
push
push
hlt
in
push
push
aas
sbb
rol
enter
aad
fyl2x
in
pushf
mov
jns
clc
int3
rorb
lods
xchg
cmp
dec
mov
jmp
arpl
movsb
fstps
out
pop
into
cmp
sbb
mov
mov
roll
aaa
in
bound
insb
jbe
mov
filds
and
and
dec
add
cmp
push
int3
cmp
jb
xchg
loop
lret
test
in
addl
enter
push
ficompl
jno
jo
out
iret
sbb
inc
rclb
hlt
or
adc
out
or
pop
testb
cmp
sub
push
xchg
dec
lock
xchg
repz
loopne
mov
xchg
rcl
xor
dec
imul
int
into
out
lock
dec
out
fildl
adc
cmc
lds
in
frstor
ds
cld
paddd
or
insb
xor
pop
lret
jmp
inc
flds
frstor
adc
push
loope
outsb
mov
dec
dec
mov
sbb
ja
js
push
andnps
movsl
popf
mov
xlat
movsb
cmp
sub
dec
aad
popa
in
insb
mov
push
sbb
ret
push
into
inc
push
xchg
sbb
arpl
jg
addr16
andl
jns
inc
mov
jp
subl
rcl
movsl
fiadds
add
out
imul
adc
or
xchg
mov
push
adc
jmp
fs
shr
movsl
xor
dec
sub
cmp
add
out
loopne
push
adc
push
arpl
sbb
movb
sbb
push
xlat
push
jo
inc
in
jmp
mov
pop
push
jge
loope
xchg
aam
jp
ljmp
jne
cltd
mov
jb
fisttpl
imul
cld
lea
lret
sbb
pop
lret
push
dec
mov
mov
fnstsw
mov
add
dec
adc
adc
cmp
push
mov
push
faddl
xor
movb
push
push
inc
cmp
xor
and
faddl
jne
xchg
sub
push
or
scas
add
lret
sbb
in
out
jg
sbb
and
aam
mov
add
in
sbb
dec
xchg
dec
jb
je
pusha
or
mull
dec
out
popf
inc
xor
icebp
or
jne
jb
push
fucomi
clc
push
jbe
mov
stos
je
int3
xor
mov
rcrb
xchg
out
ja
lret
or
dec
cmc
cmpsl
push
xchg
and
into
cmpb
xor
adc
jns
pop
loop
pop
dec
aas
fisubl
xor
fcom
insl
ss
adc
sahf
stos
mov
ja
cs
push
push
sbb
psubb
jns
cmp
in
fwait
or
inc
xchg
jno
and
jecxz
jbe
push
lahf
push
cli
xchg
clc
sbb
pop
xchg
in
push
and
dec
dec
mov
inc
shlb
mov
into
push
add
mov
mov
and
push
ljmp
mov
addr16
stc
jg
mov
lret
jb
and
shll
fprem1
cmp
test
mov
std
ror
test
dec
mov
mov
nop
inc
fadd
mov
arpl
push
fwait
test
sbb
dec
push
jp
stos
pop
or
sahf
fnsave
jecxz
jne
push
mov
cmp
dec
sbbb
fst
mov
xor
adcl
mov
adc
jne
shl
rclb
pop
xchg
test
repz
push
outsb
adc
adc
repz
lret
sbb
sub
adc
jl
out
jno
lds
sbb
jle
fcom
ja
ret
test
cmpsb
repz
push
mov
xor
jne
std
adc
mov
mov
add
jge
in
rcrb
add
inc
pop
stos
mov
cld
jbe
push
lods
jmp
pop
jmp
test
aam
pop
andl
pusha
inc
mov
jns
mov
aad
enter
xchg
jp
ljmp
push
sahf
or
das
sbb
test
cmp
push
mov
xorb
xchg
push
jbe
out
mov
rcrb
or
dec
notl
mov
mov
xchg
repnz
test
lret
push
scas
adc
dec
nop
shrl
sti
hlt
mov
insl
pop
sub
inc
popf
inc
icebp
jecxz
xchg
ret
jbe
add
stos
lret
mov
loop
adcb
movsb
popa
ja
add
out
jecxz
push
sti
push
mov
shl
outsb
cwtl
xor
jae
shll
add
aaa
pop
pop
xchg
shlb
pushf
push
mov
addr16
out
push
add
push
leave
sbb
add
bound
mov
cmc
jbe
hlt
xchg
lret
jns
jnp
outsl
aas
pop
or
inc
cld
scas
mov
rorb
jle
addr16
std
mov
pop
and
es
rcrl
cmc
pop
pusha
sub
and
add
dec
add
lcall
xor
lea
loopne
ret
sub
iret
hlt
jne
push
push
sub
sub
fidivrs
rcr
not
or
xor
pop
call
inc
add
mov
sbb
sti
scas
push
and
shufps
daa
sub
shlb
movb
cmp
incb
rcr
jp
in
xchg
ds
je
push
loope
xchg
mov
push
sbb
mov
into
mov
xor
lods
jmp
cmp
push
pop
mov
sbb
jns
dec
in
xchg
lahf
fistps
sub
andb
repz
inc
mov
insl
dec
cmp
loope
xlat
or
int
je
push
push
cmp
cmp
testl
cmp
ret
jno
loope
test
jne
sub
jecxz
push
orl
xchg
sarb
xchg
ss
sti
mov
pop
ds
cmc
push
dec
push
mov
rclb
rorl
rclb
in
push
and
dec
jmp
pop
inc
fidivrl
sbb
xchg
dec
data16
imul
inc
sub
jo
cmp
ds
mov
mov
shl
push
mov
push
jae
cmpsb
push
rcl
jb
and
ds
pop
xchg
push
shll
adc
pop
movsb
push
daa
adc
xchg
cld
out
xlat
push
jmp
aaa
inc
aam
mov
fwait
out
sub
cmovnp
out
mov
jge
lret
into
add
pop
pop
ljmp
gs
mov
aam
pop
sub
mov
push
inc
push
loopne
std
int3
cwtl
xor
fcoms
or
mov
sbb
shll
mov
sbb
mov
fcom
in
pop
shrl
xchg
push
lret
dec
mov
pop
add
lods
cwtl
mov
cltd
inc
push
adc
sub
fimull
add
adcl
adc
rclb
adc
inc
pextrw
cmp
mov
adc
pop
data16
rorb
loopne
cmp
inc
push
test
mov
rcrl
xlat
insb
sub
ss
cmp
dec
push
push
fsubl
xchg
fnstcw
pusha
or
call
fldl
popf
adc
into
adc
call
fidivrl
ljmp
out
int
sub
or
cld
adc
mov
jno
imul
dec
insb
add
leave
repz
xchg
out
xchg
xor
rol
int
pop
arpl
or
gs
movsl
cmp
sbb
adc
inc
or
push
icebp
mov
inc
shrd
mov
push
mov
xchg
adc
pop
adc
out
pop
xchg
pushf
jle
push
or
divb
call
shll
and
leave
adc
inc
cmc
ret
inc
scas
sub
stc
imul
xchg
jbe
mov
push
xchg
lods
inc
xor
cmp
mov
subl
mov
jg
sbb
xchg
xchg
fisttpll
adc
out
test
test
mov
jmp
push
fwait
aaa
or
stc
hlt
addr16
fstpl
inc
push
push
shlb
and
test
repz
insl
stos
sub
sti
cltd
sbb
out
into
cmpsl
sub
orb
out
pop
std
jecxz
push
clc
adc
mov
inc
int3
jbe
in
js
int3
jecxz
and
sbb
or
push
or
add
cmp
rorb
push
test
xchg
arpl
popf
or
out
in
cmp
call
mov
add
inc
pushf
mov
mov
jo
pusha
jno
aad
xchg
push
push
cltd
mov
adc
xor
std
mov
xchg
in
mov
sbb
lret
mov
cs
sti
andl
outsl
movsb
mov
cmp
into
fcmovnbe
sahf
jg
fisttpll
pop
in
xchg
pushf
lret
or
loopne
das
fstpt
push
iret
loope
or
mov
mov
and
mov
push
inc
lea
push
mov
xchg
or
mov
pushf
aam
mov
sahf
jmp
rol
lret
pusha
mov
or
into
mov
and
xorb
pop
outsb
jae
mov
ds
sbb
std
adc
lret
jne
adc
xchg
insb
andl
sahf
fwait
mov
rcrb
out
pop
imul
mov
aaa
into
cmp
mov
data16
fwait
pop
push
int
lds
dec
stos
mov
test
les
xchg
imul
mov
adc
mov
sub
mov
stos
mov
lret
inc
cld
inc
ret
jns
mov
xchg
loope
rcrb
ja
jmp
insl
test
inc
repz
fnsave
jle
into
xchg
sbbb
cmp
int
jle
clc
add
or
adc
xchg
stc
leave
ja
loopne
in
adc
fdivrs
and
pop
lods
loopne
mov
ret
out
iret
add
cmp
jns
jne
cmc
mov
fyl2x
pop
cmp
test
cltd
and
stos
jecxz,pn
clc
out
cmp
aas
or
mov
xchg
ds
sbb
pop
mov
and
scas
push
ss
pop
stos
adc
cmp
dec
out
cmp
xlat
in
sbb
xor
mov
nop
out
bound
hlt
popa
mov
repnz
rcl
xchg
cwtl
xor
nop
cld
stos
lcall
iret
movsl
fst
mov
int
jle
test
ret
out
adc
mov
pop
mov
jle
push
jecxz
xor
inc
cli
mov
insb
xchg
push
pop
xchg
pop
inc
sub
arpl
xchg
xor
shrb
pusha
test
push
or
and
adc
lret
pxor
les
cmp
dec
rcl
push
ret
cmp
lret
push
test
dec
lods
sub
ss
fwait
aaa
xor
repnz
inc
int3
cmp
scas
jb
nop
xchg
outsl
into
pop
gs
fldt
insb
test
dec
mov
xor
push
add
pop
mov
mov
or
push
rcl
or
dec
mov
or
cmp
fwait
rorb
lret
add
es
loope
mov
inc
lea
nop
into
xor
fdivr
fiaddl
jmp
movsl
mov
out
mov
xchg
jmp
lahf
add
fdivp
pop
sub
mov
and
xlat
pop
mov
inc
jns
pop
sub
jge
imul
jl
fnsetpm(287
popa
mov
fsubp
das
cmp
sub
loopne
std
out
mov
cmpb
cmpsl
xchg
adc
push
ds
repnz
icebp
xor
xor
xchg
sti
xor
les
pop
xor
repz
add
pop
jge
cmp
outsl
push
xlat
adc
ja
mov
repz
xor
jnp
insb
xchg
fmull
stos
pop
pop
insl
subl
jns
insb
outsl
xchg
lds
adc
or
mov
inc
xchg
xor
inc
into
icebp
adc
xchg
mov
mov
mov
pushf
jbe
push
sub
mov
cmp
push
pop
popa
push
ds
jl
dec
sarl
enter
mov
outsb
jne
or
jo
shrb
jo
out
insl
in
fadds
lret
and
aam
mov
rcrl
arpl
or
xchg
dec
cmc
stc
movsl
pop
jns
sub
push
aaa
pop
addr16
push
push
outsb
jns
dec
pop
jp
sbbl
mov
sbb
xlat
out
aas
xor
fcomps
push
or
lock
push
imul
insl
insl
jmp
add
test
aad
add
lcall
pop
add
pusha
push
adc
jno
xchg
adcl
cwtl
pop
loop
or
sbb
xchg
repz
inc
fcompl
test
jbe
xchg
inc
xchg
into
leave
sbb
stos
shlb
lret
stos
ret
out
cmp
lret
lea
mov
mov
lds
sbb
mov
ja
lret
or
jl
mov
mov
subl
add
call
push
jecxz
hlt
or
push
in
push
dec
push
fbstp
data16
xchg
pop
sub
fs
xchg
lahf
les
dec
or
pop
jns
fstp
and
mov
daa
lods
jge
outsl
pop
imul
push
orb
xchg
lret
mov
addr16
inc
xor
pavgb
movsl
sbb
jp
mov
jge
push
mov
aam
aaa
sarb
sti
iret
cmc
adcl
add
sbb
adc
jb
jmp
rcrb
and
xor
push
in
pop
dec
dec
push
dec
push
popf
sbb
cmpsb
mov
imul
sub
jbe
test
push
or
cs
push
mov
or
out
in
popl
jecxz
jae
les
xchg
pop
inc
call
and
push
stos
cmp
loopne
hlt
int
cmp
jo
push
sub
mov
in
incl
mov
negb
xchg
test
xor
mov
push
inc
lahf
shlb
fisttpll
dec
xor
fptan
stos
push
stc
add
jmp
incl
hlt
aas
outsl
shl
enter
mov
repz
xchg
sbb
cld
push
mov
adc
mov
sbbl
pop
add
push
sub
insb
push
and
push
out
pop
insb
lret
dec
out
test
pop
movsb
arpl
or
xor
ss
je
out
mov
bound
mov
mov
and
cmp
cmp
mov
xor
ljmp
dec
roll
pop
int3
ret
mov
add
lock
pop
mov
xchg
lds
dec
lret
mov
dec
addr16
mov
daa
leave
into
sub
and
cmc
lock
cmp
mov
jmp
push
dec
push
test
cmp
adc
mov
mov
cmp
inc
clc
sysret
fsubrs
arpl
adc
aad
pop
pop
push
add
xlat
shlb
je
mov
jmp
mov
push
imul
or
mov
shr
add
out
lahf
fmuls
lret
lods
sbb
sub
mov
add
jb
pop
lret
test
rolb
inc
cld
mov
idivl
test
dec
repz
sbb
movsl
cltd
cmp
ds
mov
jo
movsb
jne
cmp
mov
pop
or
sbb
js
movsl
xlat
ja
lahf
push
jle
xor
xchg
insb
cmp
adc
mov
jg
bound
cmp
dec
pushf
add
add
outsl
out
cmpsl
daa
inc
mov
es
push
jne
sbb
int
pop
cli
pushf
mov
cmp
lods
add
xor
lods
loop
std
test
pop
in
fstl
js
cwtl
push
pop
pusha
push
jae
mov
xchg
jecxz
jle
outsl
std
or
jb
push
mov
pop
icebp
rcll
add
jae
sahf
lret
inc
xlat
into
xchg
push
mov
or
mov
mov
pop
or
xchg
mov
and
pop
xchg
mov
sbb
adc
adcl
inc
pop
sbb
repnz
push
icebp
dec
addb
jle
out
or
mov
push
stos
notb
adc
incl
pop
imul
xlat
inc
jo
push
lret
dec
pop
insb
loope
in
jno
jns
cld
stc
xchg
pop
jo
out
mov
add
shrb
testl
push
push
int
js
int3
test
rcrl
adc
lock
xor
mov
dec
inc
lret
jno
push
repz
lds
cmp
in
sbb
fs
jo
adc
push
mov
mov
shrb
iret
aaa
fwait
aad
xor
mov
in
jno
icebp
dec
adc
out
arpl
cltd
out
aad
daa
aaa
inc
bound
lret
sahf
test
loopne
mov
mov
xchg
sub
add
mov
cmpsl
fadds
hlt
jecxz
int3
rcll
outsl
clc
into
popf
cwtl
cmp
bound
je
aaa
test
xor
pop
stc
int
int3
xlat
scas
mov
dec
jb
lds
dec
and
and
sahf
in
and
and
xor
cmp
lret
dec
mov
pop
mov
shl
iret
sub
inc
push
lods
xor
sub
int3
mov
push
mov
and
pop
fwait
xchg
imul
out
jb
sti
xor
pop
scas
inc
inc
leave
push
mov
fwait
mov
shlb
out
lea
jmp
std
lret
mov
cmp
inc
fucomp
push
pop
lcall
mov
xchg
out
fistpll
xchg
test
lock
mov
jecxz
gs
mov
sahf
and
cmp
mov
in
xchg
lret
scas
insb
pop
ljmp
dec
js
popf
pop
xlat
aam
stos
mov
mov
sbbl
xor
xchg
jae
sub
push
dec
dec
ss
inc
xchg
mov
sub
les
add
std
insl
jo
faddl
or
scas
stc
dec
jno
cmp
aam
inc
xor
jbe
dec
fsts
lods
mov
push
inc
mov
cmp
sub
xorb
sbb
cmpsl
jbe
in
push
and
pushf
cmp
sarb
shll
imul
lock
mov
add
dec
in
inc
mov
out
xchg
and
bnd
nop
push
pop
imul
adc
out
call
or
xor
fldt
add
or
mov
rcll
pop
nop
cmpsb
jo
mul
cmp
data16
call
aam
mov
into
add
and
jns
add
xchg
out
addl
push
jnp
mov
ds
mov
cmp
or
out
mov
mov
popa
imul
addr16
sub
and
add
inc
fdivrl
add
mov
imul
push
fstpl
in
jl
mov
loop
arpl
lret
mov
pushf
push
ss
sub
pop
mov
out
add
or
cmpsl
lret
addr16
jmp
sbbb
inc
cwtl
int3
test
jl
sub
clc
dec
cmp
sub
xchg
lock
push
in
mov
cli
inc
cli
bound
in
and
push
mov
test
xchg
dec
push
test
aad
lret
shll
xor
xor
lea
test
push
xor
jae
push
push
adc
lods
jne
xor
sbb
mov
sbb
mov
ljmp
js
dec
jne
xlat
jp
inc
test
add
or
loope
stc
push
xchg
lret
data16
vmread
test
mul
mov
xorl
idivb
sbb
and
nop
inc
pushf
lods
imul
jp
xchg
lcall
out
loop
jle
rcrl
in
lods
das
shrl
std
mov
sub
mov
test
mov
pop
mov
mov
jg
pop
jne
aas
push
into
mov
pop
pop
xor
cwtl
mov
inc
repnz
cld
sarl
call
fstpt
adc
push
cmpsl
rolb
add
out
out
negl
jge
jbe
sub
aam
int
pop
sub
call
dec
shrl
add
adc
aaa
addr16
flds
xor
mov
popf
ficoms
mov
shr
or
push
add
inc
daa
jae
cmp
ret
sbb
mov
xchg
movsl
add
ret
mov
sub
or
or
out
test
xlat
cmpsb
mov
movsl
pop
push
ljmp
dec
mov
cli
xchg
clc
or
jl
std
lret
fwait
dec
lods
sub
sbb
jp
aam
pop
out
dec
in
insl
adc
adc
std
add
in
pop
imul
push
xor
out
xchg
jmp
shlb
movsb
inc
sbb
out
adc
xchg
fsubrs
fcomps
movb
adc
in
out
fidivl
xlat
fldl
push
int
pop
pop
pusha
and
push
in
cmpsb
or
fcmovu
pop
xchg
inc
ret
mov
ljmp
adc
popl
sub
gs
cwtl
or
divl
insb
fnsave
in
xor
dec
mov
sub
cmp
cmp
out
jno
lods
mov
xor
lahf
dec
jecxz
jne
and
data16
adcl
stos
mov
int3
sub
dec
rorl
sbb
mov
imul
jnp
sub
mov
arpl
jo
jns
loopne
xchg
shl
jbe
popf
xor
fadds
fwait
inc
icebp
fcoms
jle
add
lock
dec
pop
rorb
push
inc
pusha
out
xchg
push
jns
sub
jg
addr16
cmc
test
into
scas
sbb
je
popf
cltd
xchg
popa
adc
pop
fcmovu
mov
int3
lea
ja
repz
clc
dec
push
add
mov
cmp
sub
fwait
in
movsb
test
pop
ds
jmp
stos
mov
ficoml
jle
xor
mov
xchg
test
add
inc
or
or
icebp
push
int3
test
stos
or
ss
mov
jmp
mov
jp
std
dec
push
bound
jbe
stos
xrelease
scas
dec
jmp
adc
jnp
dec
cmp
rcl
push
testl
pushf
outsl
push
push
loop
pop
push
sbb
xchg
insl
jns
xlat
push
scas
movsb
repnz
jnp
add
cmpsl
dec
mov
push
lret
daa
loop
scas
xchg
pop
movsl
lret
xchg
nop
cli
es
stos
push
add
sub
mov
in
cmp
iret
adc
popa
addr16
fbld
inc
into
and
roll
ja
mov
mov
mov
repz
lret
pop
addr16
lods
mov
pop
jge
insl
sbb
push
sbb
xchg
push
test
cmc
lahf
jno
pop
push
inc
push
cmp
xchg
nop
out
cmp
sbb
xchg
adc
out
sub
jg
mov
insl
xchg
movsb
shrb
push
push
jbe
aas
xor
dec
test
xchg
out
sub
insb
popa
sub
ja
jb
aam
bound
add
lcall
outsl
pop
in
sbb
add
push
rcrl
stc
cmp
ficoml
mov
nop
mov
adc
push
jae
cmpb
mov
sarb
dec
std
ja
xchg
push
mov
rclb
xor
push
inc
js
lods
fimuls
mov
cmp
in
test
mov
fcomp
push
ficomps
xor
out
rcl
mov
xlat
or
not
aas
add
scas
repnz
xor
inc
jae
push
mov
arpl
xor
xlat
dec
repnz
pop
clc
lds
daa
popf
stos
pop
outsb
mov
push
sub
jl
rorb
sub
cmp
test
inc
lcall
pop
movsl
imul
into
inc
rcr
adc
push
nop
cwtl
jp
hlt
pop
inc
mov
movsl
xchg
push
mov
bound
inc
fistps
xor
rcrb
je
sbb
in
shlb
xor
fnstcw
push
inc
addb
fnstenv
mov
sarl
jge
push
imul
fdivs
lahf
push
in
add
ja,pt
cwtl
push
and
out
mov
aaa
les
mov
jp
dec
decl
sub
pop
das
out
cs
fsubrs
icebp
push
fcos
pop
faddl
stos
in
shlb
inc
mov
cmp
sub
xchg
mov
ds
js
push
push
cmpsb
outsb
ret
pop
shll
xchg
aas
in
es
sahf
mov
jno
loope
xor
pop
fsubp
lds
push
fidivl
int
mov
jmp
bound
es
xchg
xchg
jnp
out
mov
gs
and
xor
cld
sub
les
add
dec
dec
lock
or
cmp
test
bound
and
or
push
lret
inc
stos
adc
das
xchg
std
nop
hlt
sbb
jnp
mov
pop
movsb
mov
loopne
stc
lds
adc
pop
sbb
adc
dec
dec
ds
jge
movsl
inc
and
mov
jecxz
lret
jmp
cld
add
adc
push
mov
and
jmp
xor
popf
out
into
push
jnp
cwtl
xchg
aam
rcrl
loope
xor
mov
and
mov
sub
movsl
adc
pop
push
aad
pop
and
sbb
mov
mov
push
cli
xor
outsb
or
hlt
mov
pop
cmpsb
inc
jp
jecxz
lret
pop
dec
enter
ljmp
lret
int
xor
xor
xchg
ficoml
jae
sar
mov
addr16
leave
in
fbstp
sbb
mov
or
mov
lods
push
jne
int3
ror
shrb
inc
imul
add
not
xchg
das
xor
mov
lret
mov
adc
mov
int
das
int3
pushf
mov
into
inc
and
aas
test
and
repnz
adc
rcll
mov
xor
lret
shll
not
xchg
std
add
out
cwtl
out
pop
ss
sub
and
and
test
pop
or
fwait
or
lret
lods
in
xor
sarb
lods
movsb
test
lods
iret
jnp
push
inc
xchg
js
int3
jns
mov
das
imul
lods
loopne
push
push
jg
mov
sbb
into
mov
or
add
and
fsubs
into
push
mov
mov
sub
jge
jne
push
fisubs
js
sti
push
dec
jmp
push
mov
imul
pop
sbb
mov
scas
ljmp
push
mov
lds
and
xchg
inc
jbe
int3
push
es
aaa
gs
inc
cmp
xchg
outsl
ret
and
mov
sub
aam
clc
and
mov
mov
push
es
lea
aaa
mov
pop
mov
test
xor
and
sbb
mov
aas
aaa
mov
inc
int3
dec
gs
mov
xchg
push
pusha
jo
dec
push
rorl
adc
les
cli
mov
arpl
test
iret
call
mov
cmp
gs
xchg
test
not
pusha
enter
sbb
repnz
cmc
and
and
bound
stos
cmp
and
pop
cli
lock
shl
pop
call
add
leave
gs
into
mov
subl
jns
rcr
mov
cmp
push
enter
ja
sub
dec
mov
sub
les
repz
out
fsubs
jne
cli
inc
inc
jae
nop
mov
ror
insb
sbb
movsbl
jmp
int
push
jne
push
loope
add
leave
push
testl
add
lret
gs
sbb
push
dec
jle
loopne
cmp
jne
dec
out
xor
out
mov
xchg
push
push
fldcw
push
neg
loop
hlt
das
int3
test
adc
into
filds
xchg
insl
pop
cltd
push
push
lea
inc
push
sbb
ret
jnp
into
or
push
adc
or
push
inc
out
popl
es
aad
xor
rcrb
xorl
es
in
mov
hlt
xor
push
xlat
pushf
xchg
stc
pop
jno
mov
xchg
xor
shrb
mov
call
out
lcall
inc
stos
mov
inc
dec
movsb
imul
mov
stos
or
jae
sbb
fs
or
ret
adc
push
aad
xor
inc
xor
fsubrs
loop
push
cli
test
dec
fs
iret
cmpsl
sub
or
xor
pop
inc
xor
movsl
addr16
and
inc
dec
xchg
sbb
push
dec
enter
pop
pop
cmp
xchg
outsb
in
pushf
jne
xor
cmp
pusha
mov
imul
sub
imul
xchg
loop
addb
pop
in
fisttpl
xor
orb
fiadds
pop
lea
rcll
mov
mov
test
sub
negb
cmp
frstor
and
arpl
out
push
pop
lods
mov
push
cwtl
movsb
add
shlb
mov
fstl
lds
in
fs
push
sub
test
jae
dec
adc
xchg
push
aam
lcall
jnp
lea
ds
sbb
call
jo
fcoml
enter
int3
lods
dec
sub
inc
popf
dec
ss
sub
andl
dec
pop
xchg
bound
stc
cmp
push
enter
cld
xor
add
xchg
mov
add
mov
jecxz
int
add
lea
outsl
iret
mov
sti
stos
inc
push
mov
shll
mov
lret
test
mov
ret
in
or
rclb
inc
xchg
push
ss
pusha
testl
int
les
rcrb
fdivs
roll
mov
mov
mov
rcrb
dec
mov
ret
mov
int
push
xchg
sbb
or
dec
xchg
test
ffreep
ja
sub
shll
add
lods
in
into
sub
ja
and
insl
popa
xchg
stc
js
xchg
movsb
nop
popf
shlb
imul
mov
push
or
fnstenv
bound
dec
xchg
pop
sbb
dec
inc
adc
cmp
xchg
jne
or
aas
mov
mov
jo
jmp
jge
ret
and
inc
mov
mov
fwait
push
ss
jae
and
xchg
cli
cmpsw
aas
insl
dec
in
inc
test
push
int3
pop
icebp
add
pop
test
clc
mov
scas
addr16
cmpsb
and
out
add
xchg
repnz
dec
push
push
mov
xchg
and
stos
scas
movl
aas
mov
dec
mov
mov
sub
shll
fwait
sub
sub
pop
pop
pop
sbb
andb
cmp
jmp
dec
dec
mov
rorb
xchg
and
sub
ljmp
pop
xlat
gs
repnz
jb
and
aad
ds
xchg
xor
push
cmpb
jecxz
adc
dec
out
mov
fadds
cmp
xor
mov
push
sbb
pop
jne
jbe
sub
push
inc
inc
fmuls
inc
sbb
in
and
mov
push
lcall
out
mov
push
fbld
add
sub
daa
pop
out
dec
loopne
lret
push
mov
and
ss
push
rcrl
negl
xchg
jge
xor
dec
dec
jmp
and
out
stc
mov
mov
inc
rcrl
adc
mov
jns
mov
inc
ds
pusha
inc
pop
or
dec
outsb
xor
sub
ror
adcl
lods
shrl
ljmp
sub
aam
or
jns
xor
jae
xchg
rol
mov
shll
fisubl
aam
jecxz
push
fcompl
xor
pop
popf
fcmovne
pop
mov
push
mov
repz
icebp
pop
daa
pop
push
sub
cli
fs
scas
push
push
push
push
dec
push
imul
test
inc
rcl
push
sub
xor
mov
and
imul
dec
xchg
xchg
notb
cmp
mov
out
rcl
int3
xor
push
mov
mov
pop
xor
pop
stc
jbe
cli
add
adc
cs
xchg
mov
call
in
jg
jnp
inc
jge
clc
mov
sub
dec
ds
mov
repnz
mov
push
jmp
inc
xchg
and
aaa
pop
loopne
je
xchg
int
mov
aad
adc
js
mov
sub
pop
push
dec
pop
jno
xchg
sbb
es
test
into
mov
add
lahf
std
scas
insb
fcmovb
cmp
adc
mov
ljmp
push
mov
mov
dec
xor
cltd
or
sbb
fcmovbe
loope
ss
xchg
jae
jns
daa
and
pop
jbe
movb
jmp
test
cld
sahf
cltd
hlt
insl
imul
out
dec
inc
xor
xlat
jb
lods
out
cmpsl
xor
push
nop
and
shr
lods
sub
push
jb
sub
int
cwtl
cmp
add
int3
aas
mov
xchg
test
or
xchg
decb
pop
mov
mov
int3
sbb
push
add
pop
mov
adc
int
adc
out
fwait
push
stos
movsb
or
movb
paddusb
inc
dec
lock
pushf
or
jle
adc
roll
push
aas
push
sub
pop
and
sbb
sarb
lock
aam
adc
dec
lret
jge
xchg
xor
inc
outsb
test
in
xchg
pop
or
pop
pop
mov
sbb
loop
mov
push
scas
pop
push
cmpsl
adc
popa
inc
lcall
mov
lods
repnz
into
test
fidivrs
pop
popf
xorl
roll
into
inc
sti
xchg
add
test
or
mov
cmpsl
loopne
push
lret
xchg
fdivrl
jo
cltd
dec
mov
push
fimull
ja
or
cmpsb
pushf
mov
fmul
pop
in
or
xor
cmp
push
dec
xchg
mov
popa
or
pushf
leave
es
push
jo
lods
xchg
test
inc
pop
jb
push
pop
sub
pop
mov
out
std
mov
mov
push
xor
in
dec
cmp
loope
or
fidivl
inc
es
or
daa
jnp
dec
push
insl
jne
push
cmp
jge
sub
fisttps
dec
inc
mov
aad
xor
inc
lret
xor
and
mov
lcall
cmp
mov
mov
mov
and
lcall
stos
repnz
inc
adc
lret
outsl
sbb
pop
jb
mov
pop
loopne
push
pop
cwtl
cmp
lret
je
or
dec
fs
lods
stos
push
testb
push
xchg
lods
jae
mov
xor
xor
push
sbb
jle
inc
inc
jmp
and
andl
xorb
adc
sbb
mov
cmp
push
stc
lea
hlt
xchg
cs
int
add
mov
mov
and
lret
sbb
ja
out
iret
cwtl
inc
adc
xchg
or
je
icebp
pop
scas
pop
iret
mov
push
rcr
xor
addr16
and
movsl
rcl
mov
jne
dec
jbe
popa
outsl
into
mov
pop
mov
sbb
xchg
jbe
les
movsb
pushf
repz
std
sbb
fsubrs
add
ja
inc
call
dec
xchg
scas
and
es
mov
popf
mov
sbb
inc
rcl
sbb
push
xlat
add
sub
test
mov
rorl
xor
add
es
call
sbb
xchg
loopne
add
jp
iret
and
cmp
cld
pop
fstl
mov
mov
jle
nop
fwait
cmp
lods
sub
dec
sbb
cltd
cmp
mov
dec
std
test
sub
pop
out
mov
dec
inc
or
aam
jae
sbb
dec
push
lods
sub
sub
mov
testb
call
mov
mov
sbb
xchg
ret
jmp
mov
pop
mov
gs
movsl
xchg
dec
mov
mov
add
push
nop
pop
inc
or
xchg
jb
inc
addr16
mov
cmp
loope
inc
lock
cmp
fcomp
popf
cmc
popa
dec
rclb
sbb
mov
mov
and
mov
sbb
out
sub
xchg
sbb
xchg
insb
out
xchg
mov
adc
andb
jle
mov
pop
xchg
cmpsb
xchg
cmp
or
sbb
add
fdivp
dec
jnp
pop
push
rorb
lret
lret
xchg
sbbl
dec
arpl
jbe
imul
and
mov
push
jecxz
ja
dec
mov
mov
mov
cmc
jecxz
cltd
xor
leave
stc
mov
mov
xchg
and
mov
iret
loop
out
mov
jg
scas
or
in
out
ja
inc
push
leave
loopne
cmp
sti
mov
pushf
addb
int3
cmpsl
arpl
sbb
jmp
fcompl
push
stos
push
cmp
inc
fimuls
lret
xchg
imul
dec
movsl
add
cmp
lahf
mov
aam
in
sbb
mov
std
or
pop
xor
clc
push
loop
lods
addl
sahf
push
gs
rcrl
jl
in
lahf
jno
jecxz
mov
into
dec
jl
in
mov
imul
mov
stc
add
mov
fbld
fstl
lret
gs
nop
jge
sub
push
aad
cmpsb
add
mov
fwait
in
mov
mov
xchg
data16
and
xor
adc
fcoms
and
hlt
sbb
cmp
nop
cmp
sub
jmp
loop
cwtl
jne
mov
negl
gs
fmuls
and
adc
push
insb
mov
or
fmull
xchg
pop
stc
push
cwtl
mov
mov
pop
cmp
icebp
pop
adc
push
push
int
inc
sub
stos
sahf
inc
add
into
out
lock
xor
mov
dec
aaa
jns
sub
pop
rcl
in
leave
jecxz
popa
mov
cmpsl
lahf
out
sub
fs
rcll
inc
gs
into
scas
andb
addr16
std
ret
lret
cld
lret
sbb
sbb
sti
and
xor
add
xor
pop
mov
cmc
ror
js
cwtd
adc
movsb
arpl
add
xlat
repz
add
cmp
adc
mov
mov
inc
cmp
or
dec
push
mov
inc
int3
hlt
testb
call
sbb
movsb
dec
jbe
pusha
lock
mov
pop
inc
dec
sbb
mov
sub
js
mov
repz
and
sub
arpl
ss
rcrb
adc
jmp
dec
and
stc
jne
test
pop
or
or
mov
jbe
xor
push
int3
xchg
cmpsb
aas
scas
in
imul
jns
out
mov
shll
into
inc
in
out
xchg
mov
jno
mov
mov
cld
arpl
add
pop
ficoms
mov
popf
and
push
adc
sbb
in
dec
fst
pop
jnp
fwait
lcall
test
popa
lcall
push
lock
jl
xchg
push
jne
int3
outsl
xlat
mov
aas
sub
data16
sbb
pop
insb
fs
sub
nop
xchg
in
idivb
ds
into
jmp
aad
imul
jl
add
scas
stos
sbb
sub
test
mov
cwtl
ljmp
hlt
std
aam
lods
push
pop
repnz
aas
outsl
jmp
shll
push
push
jns
inc
ret
lods
mov
mov
out
adc
popf
mov
insb
aad
std
sub
adc
adc
test
rorb
rclb
xor
xchg
mov
mov
out
xchg
add
cs
or
and
into
xor
loope
sub
inc
pop
stos
sbb
into
jne
xchg
into
inc
jns
loopne
sbb
add
and
pop
cld
xchg
nop
test
fs
iret
mov
lods
int
frstor
aam
or
cli
mov
scas
ja
pop
inc
cmp
cmp
call
das
push
repnz
and
cmp
mov
shlb
sbb
lret
adc
or
movsl
cmpsl
pop
sbb
pop
inc
push
dec
jbe
mov
pop
and
sub
fs
fldl
mov
nop
test
shll
cmp
push
sbb
outsb
xorl
leave
push
mov
and
push
mov
add
pop
dec
cmp
mov
xchg
pop
in
cltd
rol
in
fsubrp
push
scas
jno
fimull
cmp
repz
lahf
repnz
cld
xchg
jecxz
fsubs
outsl
xchg
mov
pop
jnp
push
cs
fnstenv
bound
cld
mov
cmp
pop
mov
dec
add
pop
add
jle
movsl
loope
dec
jmp
lahf
aad
push
aam
or
int3
add
in
sbb
xchg
adc
mov
in
xchg
insb
adc
loop
xlat
xor
filds
adc
jae
popa
dec
mov
icebp
mov
xchg
xor
out
jae
or
push
and
sub
sbb
xchg
rcrl
adc
mov
xchg
in
in
add
int
mov
sub
cmp
xchg
mov
and
push
sub
mov
add
xchg
cmp
insl
std
adc
dec
mov
out
jbe
mov
xchg
rolb
es
or
nop
inc
push
lock
enter
adc
outsl
push
push
or
ljmp
mov
stos
out
mov
pop
or
daa
in
push
pushf
lret
fdivs
inc
sbb
repnz
enter
std
stos
adc
shll
adc
jl
xlat
scas
or
lcall
test
leave
sub
jg
pop
cmp
xchg
mov
jl
lcall
mov
jl
dec
fmull
pop
add
xchg
pop
inc
lds
cmp
out
and
xor
lods
call
pushf
leave
loopne
cmc
adcl
idivl
push
xchg
mov
push
sbb
lret
mov
mov
dec
mov
push
jbe,pt
daa
lods
shl
dec
ljmp
xlat
stos
lea
xchg
imul
push
cmc
xor
cmpsb
pop
lret
xlat
xchg
sub
ja
add
fs
subl
js
add
cmp
pop
dec
repz
ret
jge
data16
inc
incb
inc
xchg
das
mov
xor
cmp
inc
scas
js
push
enter
notb
std
and
sbb
xor
mov
push
push
das
aad
xchg
rcll
sbb
pop
jbe
out
inc
and
jns
xchg
ret
test
inc
or
andb
cmp
push
push
frstor
loopne
bound
xor
out
das
mov
or
insb
mov
fmull
or
lret
cmpsl
lret
repnz
movsl
sub
mul
lods
and
aam
dec
out
mov
adc
adc
divb
sub
mov
adc
es
out
mov
sbb
inc
push
adc
pop
movsl
loopne
mov
shlb
dec
je
mov
sbb
into
and
js
subb
pusha
jbe
sbb
mov
add
mov
or
pop
imul
data16
xor
jnp
cmc
out
testb
rcr
mov
xor
sub
push
mov
lret
mov
push
pop
nop
or
push
outsl
daa
sub
arpl
push
rcrb
in
jge
push
into
mov
mov
jmp
gs
pop
mov
lahf
sub
jl
pop
mov
lret
mov
hlt
lods
cmp
icebp
repz
sbb
mov
sbb
jbe
mov
xchg
outsl
repnz
lock
sarb
mov
adc
scas
lods
jmp
fldenv
push
jmp
stos
jno
xchg
fabs
push
and
and
arpl
sbb
imul
pop
and
into
dec
adc
sbb
mov
popf
cmp
arpl
stos
loop,pt
aaa
mov
jecxz
insl
xchg
adc
movsb
clc
rolb
push
enter
shr
cmp
insb
xchg
cmp
into
mov
mov
subl
fdivp
mov
hlt
ja
inc
ret
push
push
or
out
inc
inc
rol
test
das
cmpsl
jb
into
cmp
or
mov
jmp
hlt
inc
mov
rclb
xchg
sbb
ds
lods
into
mov
inc
push
add
pop
and
icebp
push
fstps
dec
adc
dec
outsl
xchg
mov
jmp
sub
fdivrl
adc
insl
mov
mov
sbb
loopne
pop
in
out
leave
jg
stos
imul
xor
adc
aaa
call
ficomps
cmpsb
lea
dec
jge
std
dec
jnp
xchg
mov
sbb
dec
out
mul
in
mov
xor
cli
or
out
stos
pop
or
cmp
dec
mov
jge
pop
inc
clc
mov
push
inc
xor
das
xor
pop
or
popa
aam
repnz
in
ja
mov
jbe
pop
sub
clc
fs
fbld
in
push
xchg
mov
inc
mov
and
sti
stos
rolb
in
out
jmp
enter
pop
push
sub
stos
outsl
xchg
mov
dec
mov
ljmp
divps
mov
adc
out
pop
orl
movsb
sub
or
xchg
pop
cmp
and
sub
inc
pop
sub
jle
cmp
push
iret
mov
aad
lods
fidivl
or
xchg
lret
mov
fisttps
adc
dec
mov
and
bound
arpl
push
cltd
aas
data16
add
push
into
mov
adc
cmp
and
iret
mov
push
sbb
test
or
sarb
cmp
sar
cld
pop
int
je
cmpsl
inc
mov
cmpsb
push
jbe
pop
mov
scas
subl
sub
pop
fwait
add
mov
jae
test
lods
lret
mov
pop
jo
test
mov
lds
mov
daa
shrl
mov
pop
fsubrs
daa
xchg
fwait
xor
adcb
not
test
stos
out
mov
roll
rcll
add
stos
pop
adc
mov
in
and
inc
dec
mov
in
stos
sahf
fcom
sti
and
adc
mov
xor
pop
inc
faddp
mov
add
repz
clc
iret
popl
xor
lret
mov
lret
ja
cwtl
outsl
lock
xchg
inc
xchg
lret
iret
pop
mov
adc
fisttps
clc
mov
inc
adc
xchg
mov
into
push
xorb
inc
push
fisttpl
fwait
aaa
repnz
lret
pop
popa
sbb
push
jbe
or
sub
les
dec
lods
je
imul
mov
jb
enter
adc
xor
lret
or
or
sbb
cmp
xchg
and
sbb
push
hlt
mov
fbstp
xchg
mov
lret
cmp
jge
xchg
popa
mov
cld
dec
add
add
cmp
xchg
pop
daa
shlb
adc
fisubl
lea
clc
or
inc
mov
mov
fistpll
push
dec
inc
jecxz
fistl
int
in
mov
rcr
xor
or
fmuls
daa
xchg
and
jb
jne
mov
xor
mov
sub
fmull
xor
push
sub
lock
mov
je
xchg
push
es
adc
inc
int
sub
mov
and
sub
xchg
sub
adc
call
imul
or
push
fistpl
into
mov
leave
test
arpl
cmp
into
jmp
inc
incl
and
cld
cltd
andb
orl
leave
or
lds
sub
das
add
push
lods
out
leave
pop
cmp
outsl
and
lds
lret
xor
scas
cmp
out
lahf
sub
mov
sar
xor
xorl
in
ja
mov
inc
pusha
je
pop
in
cld
test
in
dec
cmp
sbb
sti
lea
test
es
mov
stos
push
insl
js
fbstp
fisubrs
movsb
addr16
leave
movsl
lods
icebp
dec
roll
es
and
ret
dec
sub
mov
xchg
inc
loopne
movl
mov
les
push
inc
pop
mov
mov
or
sbb
mov
dec
data16
jmp
loopne
dec
mov
mov
outsl
cltd
cmp
sub
das
aaa
mov
insb
jbe
dec
popf
mov
jmp
mov
or
movsl
out
cmp
cmc
lds
xchg
sti
loope
sbb
push
jb
cmp
orl
loopne
stos
mov
xchg
push
xchg
insl
test
and
adc
fistpl
jbe
mov
push
pop
jb
jnp
dec
xchg
inc
adc
pop
and
jo
jne
ds
add
mov
mov
and
cmpl
mov
dec
fdivr
cmp
jnp
mov
andl
push
or
std
stos
xchg
mov
sbb
push
test
jo
sbb
icebp
add
aad
xchg
mov
mov
call
jno
mov
fs
xor
ss
sbb
add
jl
inc
repz
pop
adc
push
pop
sahf
fidivrs
and
add
ror
mov
pop
add
jns
cltd
jle
pop
xchg
push
rolb
inc
rcl
jg
sub
ret
sub
pop
not
scas
pop
sbb
inc
insl
out
inc
dec
fisubrl
das
push
sbb
xchg
dec
push
std
jecxz
loopne
xchg
addr16
fidivl
fiadds
mov
push
or
rolb
je
les
sub
sbb
mov
jo
fidivl
into
push
sbb
mov
dec
lcall
sub
jmp
mov
in
test
cld
insb
adcb
hlt
or
sub
ret
je
repz
lahf
stc
xor
loop
cmp
nop
inc
inc
cmpsb
lods
rclb
push
lret
or
xchg
lret
bound
es
mov
pop
mov
pop
mov
dec
xor
test
or
test
push
cld
xor
push
lret
rcr
mov
lcall
push
and
sbb
add
adc
sahf
add
into
xchg
mov
out
and
repnz
mov
test
cmp
dec
movsl
aad
std
xor
mov
je
cltd
cmp
stos
mov
adc
jns
pop
sub
scas
in
mov
and
and
xchg
fsubl
mov
dec
outsl
lds
ds
adc
jl
xchg
xor
das
push
dec
cltd
mov
lods
sahf
cmp
add
push
xacquire
mov
dec
push
rcr
mov
mov
sbb
xchg
cmpsl
rcll
xor
notl
mov
int
add
in
push
inc
mov
push
mov
jg
jns
mov
cld
repnz
call
hlt
pop
loope
lea
push
add
cmp
rorl
scas
outsl
push
negl
sbb
es
adc
sub
sbb
pop
add
jmp
test
ret
dec
out
jne
or
test
mov
mov
adc
leave
lret
cmpsl
mov
out
lcall
and
das
out
sti
mov
int3
push
call
stc
clc
pop
icebp
in
adc
mov
add
pop
mov
scas
jp
and
xchg
imul
test
lock
cmp
aam
mov
push
cmp
adc
inc
add
shlb
mov
aaa
xorb
adc
or
pop
fwait
adc
mov
push
fldt
dec
or
push
sbb
fiadds
mov
and
add
pop
mov
ret
xchg
add
pop
adc
inc
mov
fstps
mov
push
dec
lods
fwait
in
xchg
das
loopne
ds
pop
cmc
cmp
insb
push
mov
jbe
sbb
pop
in
cmp
adc
lret
or
xchg
aad
xchg
xchg
ljmp
sbb
imul
sbb
daa
add
divb
aaa
outsb
imul
jne
push
cmc
jg
lahf
inc
adc
sub
and
push
push
push
xor
push
jmp
dec
iret
pushf
ljmp
shll
out
fsubrl
ja
out
test
loope
pop
pop
aaa
test
push
cmp
mov
xor
icebp
dec
mov
js
xchg
jmp
lret
pop
add
cmp
ja
data16
push
adc
mov
scas
jbe
sbb
lret
push
lahf
mov
iret
xor
jns
xchg
dec
xchg
push
and
in
xchg
icebp
out
inc
pop
add
out
cmp
int3
xchg
movsb
sbb
movsl
jne
xchg
xchg
fsubl
add
mov
add
push
mov
imul
in
xor
std
stos
int3
cli
inc
and
cmpsb
adc
jae
out
xchg
out
mov
jo
sbb
inc
int3
js
mov
divb
pop
and
popa
sbb
addr16
lret
outsl
rcr
mov
mov
cld
outsb
cmp
or
insl
add
push
mov
and
in
stos
inc
dec
fnstsw
add
sub
rcl
cwtl
mov
dec
nop
imul
pop
sbb
and
in
ja
iret
push
aaa
sub
xchg
lods
push
imul
or
jno
aaa
mov
mov
imul
xchg
call
repz
inc
daa
push
popa
xchg
ret
hlt
adc
xchg
in
scas
loop
cmp
loopne
sti
test
loopne
push
cmp
xchg
push
clc
iret
ret
and
mov
jnp
mov
inc
pop
leave
mov
cmpsl
jbe
pop
pop
jae
and
xchg
inc
rorl
call
pop
ficoml
xchg
in
shlb
cmp
add
push
adc
jmp
test
lea
cmp
xor
mov
out
dec
add
ljmp
or
pop
iret
inc
dec
push
les
inc
lret
pop
loop
ljmp
add
add
repnz
pop
lock
test
pop
aaa
mov
dec
push
inc
inc
cmp
es
leave
push
cmp
roll
loope
pop
xchg
lret
test
dec
sbb
mov
xchg
cmc
sbb
jbe
loop
lcall
jne
pop
jecxz
cmp
sub
sti
pushf
add
in
lret
int
ja
jno
dec
jnp
shl
repnz
adc
pop
lock
std
mov
sub
cs
xchg
ja
ret
into
xor
sahf
mov
adc
gs
pop
mov
jg
sbb
subl
ror
xchg
scas
pusha
jbe
mov
movsb
xor
lods
es
mov
out
dec
jmp
jecxz
xchg
insl
and
cs
fbld
lods
and
shlb
mov
jb
lret
sub
push
sahf
jne
aaa
test
push
test
enter
cld
cmp
insb
rorl
mov
aam
ret
jne,pt
mov
jae
out
movsb
fs
mov
adcl
adc
popa
jno
call
cmpb
sbb
repz
fcoml
stc
pusha
mov
push
cmp
ja
in
movsl
out
mov
popa
push
sbb
in
arpl
test
movsl
inc
ss
xchg
push
jmp
mov
pushf
jecxz
jle
aad
inc
mov
jb
in
mov
xchg
mov
mov
push
nop
jmp
jno
fimull
mov
inc
inc
cld
out
pop
movsl
dec
mov
and
outsb
movb
daa
and
jg
mov
dec
mov
pop
push
jb
out
cmpsb
xor
xor
dec
cmc
inc
test
mov
pusha
repnz
dec
movsb
into
es
orb
mov
dec
sbb
jb
mov
iret
faddp
imul
insb
sbb
sub
out
jmp
insl
out
mov
jecxz
lds
popl
add
cmp
gs
hlt
ret
pop
or
fwait
push
inc
lret
mov
pop
mov
cld
mov
mov
rorb
lds
call
insb
pusha
ds
xorb
mov
pop
fcmovnbe
gs
or
mov
xor
sub
mov
in
jmp
sbb
jnp
pop
repz
adc
cmp
rcll
jnp
mov
mov
add
cwtl
dec
add
popf
xor
imul
aas
xchg
or
push
rorl
dec
leave
fnsave
jge
inc
fnstenv
sbb
lods
xchg
jl
rcrl
int
xchg
push
lds
imul
fwait
in
xlat
add
cmpsl
inc
push
mov
jns
mov
mov
orl
pusha
add
out
mov
xchg
lcall
jb
aam
push
imul
push
jns
lret
ss
movsl
mov
add
outsl
xor
sti
mov
mov
adc
xorb
iret
int
lret
pop
jns
add
insl
jmp
add
lods
call
out
arpl
fcompl
sbb
jb
daa
lods
xchg
push
mov
adc
mov
xlat
pop
add
stc
ljmp
mov
dec
pushf
jecxz
movsl
cmc
ss
stos
dec
pop
out
jnp
adc
xlat
mov
mov
push
js
cltd
into
xchg
push
lahf
inc
test
outsl
jl
std
negl
data16
fdivs
test
insb
das
mov
hlt
cmp
imul
lods
push
add
scas
and
xor
outsl
ret
cwtl
or
mov
inc
sbb
out
add
pop
sub
enter
jo
or
mov
cwtl
shlb
dec
repz
popa
outsl
hlt
imul
jno,pt
xchg
inc
or
mov
js
push
mov
std
fimull
dec
adc
jle
lret
mov
das
sbb
xchg
add
cmpsl
xlat
dec
fnstenv
mov
add
shrb
xchg
int
cmc
stos
je
stc
sbb
mov
dec
test
jmp
mov
clc
rcrb
mov
loopne
fimull
iret
inc
inc
scas
ret
ss
call
adc
lret
hlt
aad
sarl
jg,pt
loopne
cmp
orb
sbb
nop
sub
add
cmp
sbb
cwtl
push
or
dec
push
mov
mov
mov
stos
and
push
fdiv
cltd
mov
frstor
xor
push
mov
pop
xchg
fwait
jg
aas
xchg
mov
sahf
and
nop
mov
shr
xor
adc
or
push
and
pop
lods
imul
lret
lods
inc
jne
or
call
in
push
xchg
sbb
xor
mulb
test
fst
sbb
push
sub
jp
popf
xchg
mov
out
repz
ret
pop
ds
leave
ror
adc
pop
xchg
int3
jbe
decl
jb
lret
or
adc
aam
scas
pop
pop
jbe
add
push
aam
mov
inc
in
push
ja
add
aad
insl
mov
mov
rorl
or
stos
cmp
mov
aad
jae
inc
add
clc
inc
mov
fisubrl
lock
push
mov
shlb
mov
pop
inc
leave
stos
rorl
in
pop
adc
cmp
popf
leave
add
mov
and
rcll
cmp
jg
in
aam
jae
push
lcall
stos
outsb
mov
xchg
jle
xchg
int
cld
xchg
shlb
in
pusha
mov
xchg
stos
inc
xchg
daa
mov
cs
movsb
add
fnsave
insb
xchg
dec
addb
fcompl
out
push
sbb
mov
js
adc
add
jb
mov
subb
xchg
inc
cmp
add
mov
mov
adc
add
mov
or
xor
pop
mov
fsubs
mov
xlat
adc
pop
sub
jmp
xchg
stos
cmp
dec
dec
mov
iret
jmp
je
jb
sub
fwait
stos
jo
xor
push
mov
mov
imul
pop
pop
out
inc
fistl
pop
xchg
jae
adc
inc
sub
repnz
push
stc
xlat
push
call
sti
enter
and
xchg
add
aam
add
daa
hlt
fldl
fdivs
push
rclb
sub
mov
test
fnsave
pop
out
out
filds
into
lcall
jno
dec
out
cltd
xchg
mov
cmp
nop
sar
jo
cmpsl
xchg
dec
sbb
repnz
dec
rcl
xchg
cmp
mov
pop
clc
push
xlat
mov
mov
enter
cli
dec
or
sub
ds
push
mov
add
push
mov
ljmp
dec
into
mov
js
mov
mov
stc
aam
cmp
xchg
adc
add
dec
movsl
push
fcomp
jb
hlt
fsubrs
es
push
mov
and
sub
xlat
js
xchg
mov
fwait
xchg
fnstcw
ror
imul
push
cld
cltd
xchg
loop
mov
stc
push
mov
iret
in
je
mov
pop
push
sub
add
cwtl
xlat
xchg
lcall
cmp
enter
rolb
in
dec
fwait
out
xor
sahf
pusha
ljmp
jbe
xor
mov
add
and
jo
adc
jp
cmp
mov
test
jbe
push
dec
rcl
sub
fstpl
hlt
xor
cmp
leave
mov
or
pop
dec
jne
cmp
fisubs
cmp
loope
ljmp
xchg
sbb
out
ss
cmc
clc
push
cld
jb
dec
adc
lret
cmpsl
jmp
pop
addl
out
cmovp
dec
test
xor
cwtl
mov
jecxz
testb
ja
insl
cmp
pop
sbb
rcrb
stc
cwtl
fsub
adc
jg
xchg
rorl
xor
push
jns
dec
negl
jge
loop
shld
adc
pop
adc
aam
pop
inc
dec
das
gs
dec
xchg
sbb
jmp
arpl
negb
push
add
add
insl
mov
outsl
out
and
orb
aam
or
test
lahf
mov
xchg
jnp
sub
test
rcrb
push
mov
loope
dec
fstl
clc
push
add
push
jge
out
fsts
mov
int
push
jb
adc
test
pop
fistpl
pop
sbb
push
pop
mov
repz
dec
ds
add
xchg
arpl
jle
movl
dec
and
mov
mulb
jb
int3
sub
fcmovu
xchg
pop
into
sbb
push
add
scas
hlt
cmpsb
mov
jno
add
repz
fs
pop
push
sub
movsl
test
jbe
insb
inc
cmpl
mov
cmp
sbb
xlat
jle
lds
mov
pop
jp
movsl
fcomps
lret
mov
sub
mov
fbld
push
pop
adc
ret
mov
scas
mov
les
test
cld
or
movsb
jns
inc
sub
inc
sbb
fwait
daa
fmul
jo
sub
pop
add
push
jecxz
mov
cmp
lds
lods
pop
popf
out
mov
mov
out
mov
cmp
push
pop
mov
xor
movsb
xor
sbb
mov
cltd
sbb
pop
cmc
jl
aaa
stos
movsl
xor
fdivl
lret
int3
mov
mov
mov
and
cli
push
in
add
out
das
mov
xchg
mov
or
mov
xchg
push
aaa
imul
push
jne
out
lret
sarb
negl
mov
dec
inc
sbb
inc
inc
inc
and
sarb
inc
inc
fstp
inc
jp
dec
xchg
and
movb
test
pop
dec
jle
stc
loopne
dec
enter
push
rclb
jne
movsb
fcmovbe
and
xor
into
xchg
cmp
sbb
xor
cwtl
sbb
adcb
cmp
out
adc
int
pop
adc
mov
mov
and
mov
js
movb
shll
pusha
mov
add
and
jmp
push
fistps
cmp
sub
fisubrs
outsb
fwait
and
shrl
rcr
lret
sahf
dec
fdivs
and
stos
movsl
in
or
sbb
xchg
nop
mov
sar
cmc
mov
jg
aam
adc
mov
nop
stos
dec
aas
mov
xor
ss
inc
cmp
inc
mov
mov
add
jbe
mov
sbb
inc
push
mov
fisubrs
xchg
jne
sbb
insl
jmp
push
repnz
inc
out
out
daa
jo
sbb
nop
jbe
adc
jmp
cmp
or
arpl
shll
jle
inc
rcl
mov
lea
xorb
addb
aad
cld
mov
adc
daa
rclb
cmpl
test
sub
mov
cmp
mov
xchg
jns
mov
and
jnp
push
sbb
mov
cmp
cmpsl
push
lret
adc
inc
aas
inc
fistpl
lods
push
lcall
daa
rcrl
insl
pop
cld
in
out
mov
or
loope
sbb
mul
mov
loop
dec
add
add
lret
out
jb
cwtl
sbb
xor
mov
rclb
into
mov
jge
aad
mov
es
and
xchg
inc
in
push
les
mov
dec
in
push
or
push
sbb
mov
test
mov
movsl
lds
ss
stos
insl
push
leave
scas
xchg
cmpsb
cmc
out
jl
push
in
cmc
mov
and
push
fildll
icebp
inc
or
je
mov
push
pop
insl
jecxz
xor
mov
out
and
sbb
pop
cwtl
xchg
cvttps2pi
cmp
xchg
into
mov
or
push
adc
pop
dec
mov
cmp
fisttps
jae
dec
lea
and
lret
inc
or
gs
push
lods
repz
jae
mov
cmc
lock
mov
bound
test
into
cs
pushf
push
dec
push
mov
cmpsb
iret
nop
jp
int
lods
jno
jbe
mov
mov
mov
push
or
add
push
cmc
cli
dec
data16
mov
ret
dec
lret
xchg
push
dec
or
repnz
out
lcall
inc
out
jg
mov
ror
sub
push
dec
sbb
xchg
sarb
test
or
and
sub
or
stos
push
mov
cmpsb
cmc
es
add
movl
cmp
call
arpl
mov
sbb
aad
push
icebp
lcall
dec
scas
imul
loopne
push
cwtl
xchg
inc
lret
mov
and
mov
dec
cmp
xor
jnp
pop
pop
sub
rorb
lret
scas
das
push
test
push
inc
xchg
loopne
adc
xchg
loope
cmp
mov
pop
or
push
movsl
xchg
push
jnp
ficompl
dec
jo
jle
dec
outsl
jno
xchg
sbb
repz
and
outsl
aaa
xor
jmp
cwtl
mov
push
inc
insb
adcl
lret
mov
andb
fidivl
call
ja
jns
push
dec
jp
test
inc
and
jge
sbb
mov
les
repnz
test
push
nop
push
pop
xchg
icebp
movsl
cmp
jne
or
sarb
jo
cli
rcrl
cmpsl
ja
mov
or
mov
cs
adc
push
fbld
cmp
int3
add
insl
sub
cs
int3
adc
sub
in
xchg
xlat
xor
addl
xchg
fdivrl
cli
add
mov
pop
sub
mov
out
fisubl
int3
dec
cmp
mov
iret
xor
cltd
daa
stc
push
out
nop
lret
or
push
hlt
test
mov
cmp
jle
sbb
cmc
adc
fs
xchg
stc
andl
fcoml
jge
cmp
ror
add
mov
fdivrl
push
add
mov
inc
mov
clc
jmp
rorl
andb
or
movsb
aam
gs
mov
sub
fdivs
insb
clc
lcall
push
cmc
test
mov
push
or
movsl
mov
mov
sbb
jecxz
dec
pop
out
or
inc
rcl
in
adc
sti
leave
cmp
xchg
imul
xchg
push
lret
int
fnstcw
push
stc
push
repz
ds
dec
ret
dec
jmp
in
pop
repnz
fldt
mov
xchg
fwait
sti
gs
imul
inc
aam
xchg
test
div
xchg
cmp
dec
dec
dec
and
jo
push
pop
adc
ss
rcl
push
add
cltd
lods
jne
cmp
imul
mov
xchg
push
xchg
daa
mov
inc
sbb
cmp
fadd
movsl
adc
out
dec
xchg
stos
sub
sub
sub
leave
addr16
pop
inc
mov
adc
into
xor
inc
sbb
popf
push
xor
push
xor
out
cld
lods
out
mov
jle
fwait
mov
mov
sbb
add
mov
pop
mov
cld
ficoml
ja
outsl
sbb
lock
outsb
or
xor
jnp
add
mov
fsubrs
or
fists
mov
lahf
adc
jbe
ljmp
lcall
push
loope
outsl
out
out
adc
int
dec
dec
testl
dec
push
lret
push
fyl2x
orb
out
xor
jns
stos
cmpsl
push
fdivrs
adc
cmp
dec
sbb
mov
xor
adc
xchg
daa
out
mov
hlt
push
out
out
add
fimuls
jne
outsl
cltd
icebp
inc
cwtl
ret
jbe
add
or
mov
adc
jl
fcoms
int3
sub
lret
xlat
lods
popa
bound
or
cmp
sbb
int3
lahf
lret
mov
cwtl
and
xchg
sub
and
stos
rcl
jmp
cmp
and
ret
out
test
in
adc
jnp
lcall
bound
push
loop
mov
jbe
roll
into
or
out
sub
xchg
jmp
test
xchg
lcall
test
dec
xor
nop
xchg
inc
mov
add
push
andl
or
dec
xchg
std
stc
mov
iret
pop
xchg
fnstsw
inc
push
ret
lcall
clc
scas
inc
or
ja
mov
and
mov
cmp
inc
arpl
inc
aam
into
xchg
fs
ficompl
pushf
scas
mov
divb
lcall
pop
inc
outsl
lret
mov
or
in
sub
cld
cmpsb
inc
in
dec
loopne
adc
mov
push
jl
add
push
mov
popa
testl
test
roll
dec
pop
mov
sub
inc
outsb
jo
loope
out
outsl
ret
je
mov
dec
xor
out
jp
add
int
fdivs
dec
or
lret
cmp
popa
mov
inc
loop
cmpsb
jecxz
outsl
movb
adcl
adc
xor
jge
jl
pop
dec
std
and
xchg
inc
shlb
sub
mov
jmp
dec
movsl
popa
loope
add
add
sub
loopne
scas
mov
adc
aas
sbb
xor
out
fcompl
mov
pop
add
mov
into
jbe
loop
cmpl
shlb
push
out
push
mov
xchg
mov
fsubrl
or
mov
xor
mov
jle
ret
inc
movsl
jg
gs
movsl
scas
mov
or
mov
push
xor
js
push
pop
sub
ds
pop
sub
inc
es
mov
jge
mov
mov
mov
sub
leave
mov
fdivr
jnp
push
ficoms
in
clc
push
cwtl
movsl
in
xchg
lret
pop
push
das
repnz
test
inc
xor
mov
fbld
mov
jg
loopne
jp
xor
cli
and
mov
xor
push
bswap
daa
dec
imul
sahf
and
or
dec
and
lret
adc
fdivrs
or
cmp
pop
cmc
int
cli
cld
js
out
push
sub
mov
or
sbb
fwait
hlt
jge
xchg
popl
or
test
scas
in
jmp
setne
ret
shl
sub
fmulp
pop
sbbl
xor
xchg
cmpsl
mov
inc
pop
incb
inc
push
xchg
add
es
push
xchg
xchg
xchg
ret
mov
adc
lea
mov
pushf
movsl
call
lahf
int3
cmpsl
inc
addb
jl
xchg
out
pop
pop
sub
mov
mov
pop
sbb
adc
mov
or
xor
out
sbb
mov
cli
cmp
adc
or
loop
inc
test
mov
call
ret
out
mov
insb
loop
pushf
pop
dec
pop
test
jl
jmp
adcb
leave
out
sub
add
pusha
jge
mov
hlt
stc
mov
or
mov
and
fnstcw
sub
mov
inc
push
mov
loopne
lahf
js
pop
int
dec
push
inc
xchg
or
mov
or
sbb
dec
das
roll
jne
repnz
jae
or
inc
addb
xchg
les
pop
clc
enter
outsl
lcall
xchg
inc
cli
mov
pushf
push
and
rcrl
dec
ret
dec
xlat
mov
xor
jo
int3
mov
js
or
mov
xor
inc
in
mov
cmpsl
or
cmc
lahf
sub
jne
inc
pushf
add
jmp
add
cmp
xchg
and
loop
pop
rolb
sub
bnd
or
orb
adc
insb
mov
xor
mov
push
dec
sub
sub
test
and
add
leave
ret
cmp
jbe
jns
push
dec
test
pushf
js
dec
idiv
xchg
mov
pop
stc
dec
pop
mov
out
xchg
insl
cld
clc
std
inc
ljmp
xchg
sahf
cmpsb
pop
or
pop
xchg
fstpl
enter
repnz
inc
adc
mov
outsl
std
lds
mov
lcall
mov
xchg
sub
cmpsl
mov
mov
dec
dec
movsl
test
lock
and
push
in
add
xchg
mov
pop
mov
or
and
mov
shlb
jmp
outsl
xchg
insl
dec
ljmp
sbb
mov
cltd
sti
jle
add
lret
int
jge
xor
in
push
mov
pop
jns
in
ss
scas
xchg
fmuls
addr16
xchg
inc
mov
push
std
and
sbb
or
call
xchg
and
movsl
push
cwtl
in
mov
test
lret
jg
fs
mov
arpl
mov
push
pop
shl
inc
pushf
jg
push
pop
dec
aam
mov
int
xor
push
add
and
push
dec
cmpsb
cs
xchg
mov
call
inc
out
xchg
inc
into
std
or
outsl
xchg
movsb
int
fildl
lret
jo
fs
ljmp
jge
mov
sbb
adc
xchg
lret
jno
dec
push
repnz
pop
mov
dec
mov
sub
fnstsw
test
xchg
add
push
inc
xor
mov
cmc
shr
jbe
jno
cmpsl
mov
sbb
lret
outsl
jle
frstor
adc
clc
scas
adc
cmp
jne
push
fnsave
gs
dec
lahf
cmp
movsb
mov
and
push
ja
lock
sub
mov
aad
mov
loop
nop
in
or
or
sahf
pop
jns
addb
lahf
call
div
cli
mov
cld
adc
out
adc
push
cmpsl
fwait
movsb
xchg
jb
ss
mov
mov
push
imul
xor
clc
pop
sub
fwait
test
out
stc
xchg
xor
jp
sub
cmc
mov
adc
xchg
lret
mov
mov
cld
lret
mov
ret
test
xchg
rcl
add
out
cli
popf
idivl
outsb
adc
stos
push
cmp
and
test
push
pop
pop
rcll
cwtl
xor
je
jg
xchg
mov
and
cmp
mov
fistps
cmp
test
xchg
cld
pop
push
jge
sti
adc
repnz
cwtl
push
fwait
iret
out
jnp
dec
xchg
push
fbstp
rcl
fsubs
jb
cmp
fidivs
fucomp
mov
in
aam
int
cltd
dec
pushf
jle
lret
push
icebp
test
xchg
push
inc
push
fildl
fiadds
mov
inc
stos
pop
add
mov
inc
add
jmp
test
cmp
cmpsl
in
test
or
push
xor
adc
sbb
js
mov
pop
loop
mov
dec
sete
rcll
inc
jo
into
mov
loope
cltd
dec
mov
aam
bound
insl
scas
dec
adc
sub
mov
add
gs
sbb
ds
adc
je
add
sahf
cmpsl
jbe
stc
mov
aad
pop
push
dec
test
push
or
movsb
or
lahf
sbb
push
cmpsl
rolb
decb
out
aam
sbb
lahf
push
pushf
push
rep
cmp
pop
aaa
mov
sahf
movsl
sub
dec
and
sarl
xor
add
xor
stc
pop
fwait
lods
inc
insl
sarb
movsb
jns
scas
sbb
sub
dec
adc
sti
lret
and
popf
mov
push
in
and
mov
mov
push
out
mov
call
pop
sub
je
loop
push
aaa
shll
test
lods
out
cld
stos
cmp
xchg
mov
cs
mov
into
mov
ds
loop
lcall
dec
test
jg
or
out
fucom
imul
inc
push
dec
dec
test
mov
push
pop
push
jp
jle
lea
sub
sub
push
fisubrs
sbb
pop
adc
mov
push
adc
into
jle
div
into
and
or
addr16
xor
xchg
scas
cli
sbb
lods
fldt
fistpll
xchg
and
nop
loopne
mov
ret
movsl
mov
sbb
adc
iret
jbe
js
xchg
mov
mov
fxch
pusha
jbe
in
fcmovu
into
les
scas
mov
out
push
rclb
push
mov
rolb
push
sub
aas
lods
lret
sbb
inc
push
mov
xor
dec
repnz
sbb
dec
aam
dec
rcrl
aam
mov
cmpb
divb
sbbl
xor
call
sbb
add
int
jae
ret
dec
push
sub
xlat
push
and
jns
pop
aas
bound
outsl
mov
test
mov
mov
sub
fs
and
xchg
mov
dec
in
jg
arpl
xor
lcall
xchg
mov
add
or
mov
dec
cld
arpl
loopne
jns
mov
out
gs
dec
sbb
inc
stos
or
jmp
mov
mov
rorl
push
dec
ret
mov
mov
mov
clc
sub
out
or
int3
icebp
jle
jae
lret
repnz
mov
jne
sub
into
movsb
out
dec
push
ljmp
sbb
scas
sti
sbb
stos
push
mov
mov
xor
sub
xchg
stos
ret
add
xchg
pop
fstps
cli
js
out
fmuls
cmp
sarl
dec
mov
or
cmp
push
sub
hlt
xor
loopne
rcl
lret
aaa
and
mov
int3
push
inc
pop
into
cmp
cmpsl
cmp
add
orb
lret
mov
xchg
xor
xor
lcall
insl
cmp
nop
adc
cmpsl
xchg
push
jecxz
pop
mov
repz
fimuls
mov
ljmp
dec
adc
stc
add
mov
stos
out
clc
dec
aas
jecxz
fwait
xchg
fbld
movsl
ret
xor
out
sub
imul
fs
cmpsl
or
repnz
xor
mov
push
into
mov
insb
ds
or
dec
dec
rcll
fisubrs
ret
xchg
movsb
icebp
es
push
ja
pop
mov
neg
and
sub
dec
leave
mov
mov
jbe
and
gs
adc
leave
push
insb
out
inc
lods
add
jle
inc
aas
mov
mov
sbb
rcr
cmp
pop
out
ret
out
adc
mov
cs
mov
mov
mov
in
cwtl
push
adc
or
xor
movsl
lret
and
inc
cmpsl
push
sub
or
push
mov
ret
and
stc
add
andl
inc
or
out
insl
aas
mov
out
dec
leave
lret
call
push
gs
popa
dec
dec
jne
vrcpss
cmp
cltd
mov
push
mov
lret
jae
and
testl
stc
xchg
jmp
out
popa
lahf
sub
adc
imul
xor
imul
in
dec
xor
push
std
inc
sarb
or
inc
cmp
aam
inc
xchg
xor
dec
aaa
inc
mov
ret
pop
insb
sti
dec
cli
lcall
pop
fcom
repz
cmp
mov
xor
xchg
inc
icebp
sbb
push
adc
adc
jnp
testl
cld
push
movsb
ror
test
mov
mov
aaa
push
mov
add
push
xchg
add
dec
das
jno
jl
adc
push
leave
xchg
ljmp
int3
mov
inc
arpl
or
lret
ds
jbe
scas
es
fnstenv
push
fsubr
adc
fwait
lahf
cmpsl
xchg
xor
xor
ret
and
jge
imul
test
xor
insb
insl
jne
sti
sub
mov
ja
test
outsb
add
inc
sar
movb
ljmp
xchg
ja
dec
jmp
lds
scas
cmp
stos
pop
lods
pop
push
imul
movsb
mov
xchg
cmp
inc
sub
pop
ret
sahf
lret
cltd
test
pop
scas
or
fsubrl
adc
shrb
xor
cwtl
add
aad
daa
sbb
dec
imul
scas
cwtl
cs
loopne
lcall
mov
xor
popf
stc
push
leave
inc
jp
xorl
xor
mov
shl
stc
frndint
cwtl
jno
jnp
stos
aas
ss
mov
xor
sti
mov
test
and
js
out
adc
sbb
cmpsb
lea
scas
dec
ret
inc
adc
push
out
fwait
and
stos
jecxz
pop
jp
icebp
ljmp
adc
nop
jg
inc
mov
into
xor
bound
push
inc
xlat
push
mov
ds
gs
mov
adc
and
dec
cmp
or
imul
jmp
or
or
mov
andl
ds
mov
leave
mov
test
sub
mov
outsb
add
add
mov
das
jecxz
dec
or
xchg
cmp
pop
push
hlt
sbbl
filds
ja
inc
push
mov
enter
xor
mov
sahf
jnp
pop
lahf
or
push
data16
mov
mov
xchg
and
push
or
in
cltd
sahf
xchg
xlat
and
push
jmp
sarl
and
movsl
pop
or
into
push
pop
jno
loope
xor
dec
pop
xor
or
lea
ds
fistpll
dec
adc
jle
mov
cmc
xchg
rolb
lahf
add
cmpsl
sbb
into
fsubrl
arpl
adc
push
cmp
fwait
cmc
lds
inc
jmp
mov
mov
aam
sti
sub
or
leave
xlat
loopne
add
mov
out
shrb
inc
jp
js
sbb
inc
mov
loope
rcrl
sub
push
in
add
cmpsl
mov
jl
sub
dec
adc
sahf
leave
inc
jmp
add
shll
bound
pop
push
sub
jl
jge
mov
xchg
fdiv
dec
loop
or
sub
xchg
inc
inc
test
lock
adc
fcom
dec
clc
jnp
scas
loope
dec
jae
sti
fcoms
rcl
mov
jae
xchg
mov
movb
dec
aad
lahf
pop
adc
decb
mov
outsb
mov
ret
adc
pop
mov
loopne
mov
dec
out
xchg
inc
psrld
and
adc
xchg
insb
jae
adc
lahf
nop
sub
shll
frstor
mov
aad
mov
scas
dec
pop
out
dec
fiaddl
mov
sbb
xchg
into
nop
jo
inc
ds
and
sub
mov
testl
xor
pop
lock
dec
in
xchg
iret
flds
pusha
cwtl
not
nop
lahf
test
aad
or
ret
jmp
fisttpll
inc
das
inc
jecxz
arpl
scas
fs
call
add
xor
iret
test
xchg
bndstx
insb
sbb
out
rcl
push
into
sbb
popf
imul
sbb
mov
clc
or
mov
push
or
jecxz
movsl
fs
and
inc
test
hlt
adc
popa
icebp
dec
loop
es
mov
sub
fildl
sbb
mov
add
cli
dec
daa
xchg
das
jne
dec
inc
xchg
inc
fimuls
ljmp
and
out
sbb
dec
add
jne
les
xor
lcall
enter
xor
sbb
mov
inc
ret
sub
pop
mov
imul
iret
sbb
fiaddl
mov
pop
xchg
pop
sahf
insb
pusha
int3
lret
pop
push
ror
sub
mov
arpl
in
xor
mov
loope
cli
cmp
xchg
test
repz
pop
mov
lret
int
movsl
ja
sub
sbb
cmp
push
sti
dec
lods
test
aam
mov
xchg
daa
mov
std
cltd
dec
jae
movsb
add
jnp
rcrl
jne
lea
into
jp
sarb
pushf
or
orb
lock
pusha
ja
cmpsl
or
lret
int
test
les
insl
loope
dec
and
mov
punpcklbw
iret
or
cli
std
mov
sbb
shrb
xchg
add
push
mov
push
and
jnp
cmp
mov
xchg
sar
cmp
movsl
test
hlt
insl
clc
cltd
into
and
jge
loopne
and
xor
lret
sub
icebp
mov
les
and
or
push
hlt
fiadds
inc
xchg
into
sbb
test
sbb
jno
nop
adc
scas
cmp
sahf
mov
dec
mov
xchg
aam
and
push
addr16
mov
mov
je
test
sub
pusha
mov
sbb
lds
mov
dec
cmpsl
mov
fwait
pop
jns
cwtl
out
pusha
sub
movsb
dec
mov
push
dec
cmc
xor
jb
adc
pop
or
lock
cld
mov
push
cmpsl
pop
push
xchg
fdivp
cmp
jb
aad
jb
cmpsl
leave
and
sti
add
mov
fcoml
push
mov
test
out
imul
jp
dec
mov
fwait
push
rcrl
cs
and
call
in
push
je
sbb
mov
cwtl
lret
es
movsl
pop
jmp
jp
pushl
or
sti
adc
mov
int
popa
pusha
jbe
ret
mov
fadd
xchg
ds
mov
adc
dec
mov
pop
insl
paddusb
neg
sub
and
dec
xchg
popf
in
ds
or
inc
or
in
shrl
sub
xchg
int3
enter
xchg
or
add
pop
adc
into
and
fcoml
movl
test
xchg
push
xchg
xchg
inc
loop
test
pusha
daa
lods
lds
mov
push
jp
lods
fbld
call
ret
or
pop
cmpsb
out
pop
rcl
sbb
fidivrl
dec
add
mov
mov
sbb
and
push
mov
into
jge
dec
out
out
or
add
add
cmp
jae
push
fld
pop
int
int
dec
push
push
in
or
fidivs
call
jg
shrb
stos
push
aaa
lods
mov
shld
sahf
or
jnp
lahf
inc
mov
arpl
mov
and
or
fimull
cli
in
sbb
jbe
rorl
sub
loopne
push
into
divl
jecxz
add
and
jle
jp
ret
outsb
pushf
dec
or
cwtl
mov
loopne
into
js
dec
mov
jae
lcall
add
arpl
xchg
pop
pushf
jno
sub
push
dec
fsubrs
mov
push
sbb
stos
sub
mov
idiv
in
push
addb
add
xchg
dec
mov
out
ds
sar
popf
or
movb
dec
lcall
movsl
jb
test
sub
mov
insb
mov
mov
stos
aam
sbb
and
cmp
idivb
fsubrs
test
mov
adc
sti
lds
pop
cmpsl
inc
cmpsb
movsl
push
adc
jge
std
or
xchg
cmpsl
inc
test
xchg
xor
add
xchg
cmp
into
loopne
into
lahf
and
push
adc
mov
pop
xor
and
sub
call
arpl
stos
add
jg
cmp
fisttpl
sub
and
and
mulb
xchg
sti
imul
sti
std
jne
aas
and
mov
iret
push
mov
mov
xchg
jnp
shrl
pop
das
ret
and
inc
sub
xor
jle
or
jne
lea
dec
mov
xchg
popf
or
or
std
into
decl
xchg
pop
add
push
and
sub
ret
cli
jg
xor
repnz
test
push
or
jmp
imul
add
fcoms
mov
and
cmp
cmp
jae
push
aam
adcl
sub
pop
xchg
adc
cmp
rcrl
push
sub
in
repnz
sub
adc
inc
outsb
dec
and
jp
mov
or
jb
into
es
test
jno
dec
outsl
ljmp
andl
xchg
mov
lods
scas
out
sub
sub
aad
pop
data16
es
cmp
adc
out
xchg
mov
xlat
ss
push
xor
popf
add
imul
cltd
add
inc
inc
lret
or
ljmp
iret
or
jbe
and
test
into
add
aam
lret
jecxz
stos
jnp
xorl
xchg
cld
jge
fs
jmp
sub
mov
jbe
add
insb
dec
stos
mov
push
jl
jno
sbb
cmp
gs
sbb
jne
imull
adc
outsl
or
hlt
mov
pop
aas
adc
mov
clc
fwait
jecxz
jg
call
push
loope
cmp
outsl
mov
mul
mov
test
stos
jl
mov
fcom
outsb
sbb
mov
shlb
xor
in
mov
mov
and
dec
stos
pop
mov
out
or
cmp
dec
test
lds
and
jle
cmp
roll
jnp
loope
test
dec
es
sub
pop
pop
sbb
or
inc
and
ljmp
popl
incb
aas
bound
jno
enter
nop
dec
fistpll
jns
inc
push
fwait
stc
mov
decl
add
sbb
loop
cs
xlat
fldl
insb
test
in
cmp
lods
inc
push
shrb
cs
icebp
addl
aas
jmp
mov
mov
divb
lcall
faddl
ljmp
lods
dec
inc
xchg
mov
add
cmp
push
cld
popf
mov
push
adc
stos
jnp
lcall
mov
jle
dec
mov
jo
rcrl
test
into
push
pop
fs
loopne
cwtl
mov
push
inc
test
int3
out
xor
sbb
jge
xlat
out
aam
insb
ja
inc
dec
faddl
jne
sbbl
adc
add
mulb
js
adc
cli
cs
pcmpgtb
mov
daa
outsb
pusha
jb
dec
test
into
icebp
xor
xchg
jge
xor
test
jl
sbb
xchg
stos
popf
xor
and
sub
inc
lea
pop
shrl
mov
out
into
pop
pop
sub
je
mov
sub
add
lcall
pushf
pop
hlt
push
dec
pop
cwtl
jge
aam
sbb
jnp
lea
dec
and
repnz
mov
push
cmp
in
mov
imul
xchg
std
outsl
aas
xor
xchg
rorb
stos
lret
jae
aaa
je
in
xor
and
stos
in
adc
mov
lret
dec
add
leave
in
jge
ss
inc
push
ret
adc
idiv
and
push
pop
xor
inc
out
insb
cmp
stos
outsb
cmp
mov
notl
cmpsl
into
dec
jno
ret
pop
rcrl
add
jne
out
fcomp
ret
mov
push
dec
outsb
xchg
insb
pop
push
cld
adc
xchg
xchg
jno
fidivl
repz
rcr
call
mov
lahf
push
sub
je
xor
clc
sbb
or
rorb
iret
mov
lds
loopne
add
ss
push
aam
xchg
fs
clc
sbb
es
cmp
inc
sbb
sbb
call
aas
cmp
pop
push
cmp
or
jo
mov
push
or
les
popf
mov
or
repnz
sub
fcomp
pop
add
xor
outsl
and
arpl
jg
and
cmc
xor
outsb
mov
pop
orb
jg
mov
idivb
sub
pop
mov
sub
adc
movsl
mov
fdivs
hlt
xchg
xchg
jp,pt
ljmp
and
out
adc
in
loopne
clc
pushf
lods
mov
pop
mov
inc
push
in
jbe
lcall
ds
out
push
iret
ficoml
aas
sarl
xchg
sbb
outsb
adc
pop
lods
arpl
inc
pop
push
lcall
and
add
ss
aad
or
into
adc
inc
shl
jne
fcoms
mov
inc
push
lock
xor
clc
out
sbb
and
jl
xchg
out
jmp
shlb
jge
add
push
push
mov
fdiv
mov
into
xchg
test
pop
sub
lds
xchg
cmp
sub
mov
test
popl
jbe
int3
lret
xor
arpl
js
stc
popf
ljmp
cmp
iret
repz
xor
jb
mov
aaa
mov
pop
pushf
es
daa
andb
push
add
js
inc
out
jmp
int3
das
enter
adc
and
ret
xchg
pushf
ret
inc
dec
test
icebp
mov
shr
pop
aam
fadds
mov
mov
mov
daa
stos
or
int
rol
xchg
insb
ret
pushf
ja
jne
es
enter
sub
jge
mov
int
inc
lea
movsl
jo
mov
gs
andl
or
mov
js
insl
sub
sar
mov
mov
push
ds
pop
imulb
std
cmp
je
and
or
enter
dec
dec
leave
mov
add
jge
jl
and
pop
jbe
js
xor
inc
insb
mov
nop
mov
fdivrl
hlt
scas
xchg
sub
orl
mov
dec
in
fmull
push
sbb
sti
ds
lds
push
aad
xchg
dec
inc
inc
xor
xchg
mov
or
lods
lea
pop
inc
or
or
adc
push
mov
push
push
or
pop
lret
addr16
mov
dec
xchg
and
fs
rcl
mov
aaa
fidivl
adc
addr16
mov
push
pushf
dec
jns
fiadds
dec
insb
insb
std
xchg
popa
fadds
jb
in
cltd
xor
sarl
lods
orl
pop
cwtl
jnp
sbb
push
fwait
cmp
sti
xor
pop
pmulhw
dec
cs
lret
inc
fldenv
xchg
nop
cmc
push
lds
je
pop
out
call
xchg
fisttpl
sub
loop
ds
je
mov
xchg
dec
mov
cli
test
sub
mov
cmp
aaa
or
repnz
cmpsl
into
aad
roll
movl
ljmp
dec
lods
sbb
xor
out
xchg
sbb
out
push
mov
or
test
mov
adc
add
or
nop
dec
xor
fsubrl
push
xor
not
cmp
aas
jle
pop
in
outsl
movsb
cmp
ret
xchg
dec
xor
sbb
fisubl
adc
outsl
ss
mov
call
mov
mov
movsl
fwait
subb
xchg
mov
push
sbb
adc
or
inc
cld
jmp
sbb
sub
pusha
dec
shrb
movsb
cwtl
daa
mov
xchg
cmp
rorb
pop
fdivrl
xchg
es
mov
loopne
fcoms
xchg
sbb
in
dec
push
push
mov
and
sbb
add
push
fiadds
imul
xchg
lods
scas
lds
mov
push
xchg
sub
add
nop
push
mov
popf
xchg
mov
ss
int
arpl
hlt
sbb
adc
jecxz
cwtl
pop
sub
rcll
push
movsl
jnp
repz
cwtl
lods
mov
outsb
testb
push
jns
push
ret
stos
xchg
mov
add
arpl
cmp
dec
roll
pop
cmp
sti
pop
dec
pop
xchg
mov
or
popf
rclb
jg
orb
mov
sbb
ss
jne
lcall
rorb
jbe
dec
scas
fadds
imul
js
mov
rcrb
std
cmp
or
adcb
les
ss
insl
incl
xchg
ja
aad
out
movsb
jno
jne
add
out
int
cmp
loope
ljmp
movsl
dec
arpl
xor
lcall
fidivs
xchg
mov
jp
mov
add
into
mov
or
popf
cwtl
outsb
scas
mov
jl
pop
and
mov
pop
cmpl
lret
nop
xchg
lods
mov
repnz
jbe
xlat
sbb
ljmp
nop
sbb
mov
mov
imul
inc
fisttpll
or
mov
icebp
dec
lret
fneni(8087
test
fwait
jecxz
das
loope
inc
and
cmp
int
jmp
push
or
mov
imul
les
addr16
jecxz
cmp
adcl
xor
mov
lret
cwtl
dec
data16
adc
mov
xchg
mov
subl
mov
jecxz
jno
mov
leave
cmp
xor
in
mov
xchg
cs
xchg
mov
mov
cwtl
adc
bound
dec
xchg
fidivl
js
pop
leave
xchg
sub
mov
dec
inc
lea
jnp
mov
aam
add
lret
inc
imul
loop
push
daa
jge
cmpsb
out
ja
cmp
mov
stc
add
call
daa
inc
sahf
sbb
test
aaa
test
icebp
push
xchg
jne
push
mov
movsl
mov
inc
rol
dec
jge
xor
scas
out
xchg
push
pop
push
daa
sbb
push
aad
mov
nop
lret
adc
xchg
in
cmp
mov
mov
jbe
pushf
popa
repz
imulb
cld
adc
xchg
loopne
xor
mov
negb
mov
in
xchg
pop
jl
cmp
pop
or
push
fs
dec
mov
xor
jae
push
adc
testl
mov
dec
je
push
push
cmp
push
fimuls
into
lea
fcmovb
ret
out
lret
xchg
jecxz
sub
loope
add
fwait
mov
jecxz
ja
and
call
pop
imul
xchg
pushf
sarb
xchg
in
jo
int
lods
repz
xchg
movsl
push
ret
sarb
dec
pusha
or
arpl
xchg
sahf
into
push
jns
mov
or
xchg
ss
into
push
enter
dec
sbb
sub
frstor
mov
push
push
mov
mov
es
dec
jg
inc
aam
pop
sub
add
call
jecxz
fcmovu
mov
in
sahf
ja
xlat
mov
mov
out
std
imul
ja
popf
in
push
mov
mov
int
das
test
aaa
iret
and
jne
dec
and
cmp
out
inc
loopne
test
mov
sbb
push
es
adc
and
mov
scas
jecxz
cli
push
jl
sub
jbe
inc
mov
cli
iret
aas
les
mov
in
lds
jnp
dec
imul
nop
cld
push
xlat
xchg
mov
sbb
lcall
lret
push
xchg
mov
jmp
je
testl
lret
repnz
fiadds
pop
inc
dec
pusha
outsl
xchg
mov
cmpsl
xor
mov
sub
inc
nop
push
into
faddl
sub
jns
dec
cwtl
push
imul
mov
or
inc
or
out
adc
jle
mov
pop
mov
jns
lret
dec
xor
jle
andb
xchg
outsl
cmpsb
jmp
or
push
or
test
ss
pop
mov
push
loop
aas
fs
adc
sub
mov
enter
jmp
cmpsb
test
or
ja
mov
inc
lret
ja
arpl
and
imul
stc
es
adc
pusha
aam
stos
repz
arpl
stos
mov
ja
xchg
rcl
out
imul
or
shlb
out
push
xor
rcrl
jae
or
or
lea
lahf
fadds
jns
or
inc
push
loopne
add
dec
cmp
in
cli
fwait
inc
pop
or
movsl
push
notl
cmc
nop
stos
fsub
pushf
popf
lds
popa
cmp
and
xchg
aas
sti
sub
rcll
movsl
insb
test
xchg
jp
aaa
fistps
sub
cld
xchg
adc
dec
lds
adc
cmp
repz
push
aam
jle
or
out
jb
jecxz
pop
lods
mov
mov
adc
fldt
mov
ja
das
jle
inc
pop
push
mov
add
dec
cmp
cmpsl
jb
clc
fdivl
inc
bswap
jnp
roll
adc
lcall
mov
inc
jne
and
xchg
lods
pop
dec
lret
rolb
leave
mov
into
push
aaa
rcrb
insb
movsl
sub
fcompp
in
out
mov
mov
jge
mov
push
pop
xor
popa
pop
adc
repz
es
sbb
mov
into
movsb
mov
sbb
gs
dec
idivl
xchg
inc
xchg
xor
cltd
and
cmp
fwait
or
pop
jle
aam
int3
mov
ret
std
hlt
jnp
jbe
sbb
and
add
adc
mov
add
pop
push
fidivl
cmp
test
clc
ss
int3
jae
stos
out
stos
in
xor
loopne
dec
rolb
lret
sti
adc
cmpsb
lea
push
xor
and
xchg
pop
je
jle
inc
adc
sub
pop
in
sub
int
sbb
sub
arpl
movsl
sub
jg
addl
filds
jle
jmp
push
add
mov
add
jo
adc
daa
imul
inc
push
scas
stc
dec
addl
jecxz
dec
dec
lret
jmp
movsb
sub
dec
pop
js
xor
test
std
iret
fimuls
jmp
mov
repnz
in
inc
adc
xlat
mov
dec
into
mov
popa
or
scas
insb
xchg
lcall
outsl
mov
hlt
fst
ror
imul
inc
addb
jmp
scas
and
cmpsb
stos
stc
push
dec
rclb
or
pushl
inc
and
inc
jl
mov
mov
jo
insb
repz
mov
jmp
pop
sub
mov
mov
mov
add
jne
addb
notl
insl
dec
xchg
mov
outsl
xor
adc
in
out
add
aas
mov
mov
push
lods
push
add
pushf
mov
arpl
loop
ret
mov
adc
xor
or
rcrb
jge
push
jb
adc
sbb
inc
cwtl
in
mov
xor
jno
adc
lds
mov
gs
sbb
popa
fstpt
aas
push
add
and
xor
mov
ja
dec
mov
fcmovne
pusha
enter
jl
push
scas
outsl
and
aad
outsb
push
xchg
jg
jns
sarl
daa
ret
andl
ss
lock
daa
lods
push
loopne
lea
out
jno
pop
add
sub
enter
or
dec
push
sub
dec
or
pop
shrl
jmp
icebp
push
stc
jbe
push
push
mov
adc
cmp
imul
in
fimull
mov
imul
push
push
cltd
inc
or
cmp
ljmp
lret
mov
cltd
repnz
movsl
addl
leave
lret
inc
sbb
test
rcrb
push
imul
sbb
jno
jg
ss
test
cmp
std
out
leave
cmpsb
mov
repz
in
lods
ljmp
divb
int3
fwait
xchg
rcrl
mov
stos
dec
mov
movsl
lods
xchg
xor
xchg
repz
or
push
and
pop
stc
daa
js
in
xor
sbbl
jbe
leave
mov
ret
rcrl
mov
cmp
sub
jl
mov
daa
mov
leave
mov
add
dec
divl
push
push
mov
iret
mov
or
out
out
inc
loop
pop
push
imul
lret
xor
or
xchg
jnp
into
lahf
cmc
xchg
std
mov
rdmsr
je
jo
inc
add
jbe
or
mov
and
aam
cli
xchg
ss
cld
aad
imul
into
mov
sahf
je
cmc
fs
pop
inc
nop
int
push
push
out
mov
insl
push
mov
leave
inc
les
sub
mov
jl,pt
imul
call
add
loopne,pn
iret
cmp
and
aad
adc
test
in
push
sahf
sbb
xchg
inc
cld
inc
adc
sbb
cld
xchg
insb
sub
sahf
mov
lss
push
aad
sbb
repz
xor
xlat
mov
out
roll
test
push
cmpsb
andl
repz
ror
inc
lret
mov
sbb
lea
cmp
movsl
icebp
test
push
push
pop
dec
pop
call
push
sub
sbb
dec
iret
insb
inc
jl
adcl
inc
movsb
sbb
aam
loopne
imul
fnsave
jl
andl
sbb
rclb
pop
lret
mov
sbb
adc
mov
inc
jp
push
sti
fstps
add
adc
pop
xlat
dec
into
out
mov
inc
add
jge
cmp
aaa
repz
sub
push
xlat
movsb
add
rcl
sub
mov
mov
xchg
push
jecxz
inc
jp
add
push
xchg
cmpsb
dec
cwtl
mov
cwtl
out
mov
mov
add
in
ds
sbb
out
xchg
sub
fcom
pushf
in
idiv
or
or
cmp
jnp
push
out
arpl
incl
add
ja
fisubrs
push
sub
xchg
out
xchg
lret
push
loopne
lahf
call
mov
lret
shrb
fcmovnb
std
lods
sbb
icebp
inc
xchg
sbb
mov
out
je
inc
sbb
pop
gs
jle
clc
andb
and
sbb
sub
mov
int3
outsb
fbld
mov
mov
cmp
jecxz
jg
and
int
popl
lret
dec
xchg
jne
in
lret
push
aaa
test
push
ficomps
mov
lret
lods
rcrb
sbb
mov
roll
mov
cmp
sahf
sub
pop
cltd
aas
rcr
leave
ljmp
xor
cmp
xchg
outsb
cmp
outsl
inc
sar
mov
push
xor
fmuls
lahf
vpshaw
lods
popf
addr16
test
push
shrl
rcl
pop
lret
ds
pop
mov
nop
shrl
adcb
andl
push
or
and
dec
pop
pop
xor
hlt
daa
lcall
pop
ja
aas
mov
mov
in
dec
sahf
mov
xchg
mov
xchg
outsb
xor
or
into
lcall
xor
lret
pop
push
pop
stc
mov
cmp
xchg
mov
xchg
imul
push
sub
push
cmpsl
sti
into
fcomip
das
inc
orb
add
ret
xchg
mov
mov
jl
enter
mov
out
clc
call
test
mov
sbb
aam
jecxz
int
sub
cmp
xor
add
sbb
iret
inc
lods
sbb
outsb
nop
int3
imull
std
lcall
jno
test
movl
mov
out
push
lcall
mov
sbb
leave
out
adc
pusha
ret
dec
jnp
xchg
das
arpl
mov
insl
mov
lret
es
stos
imul
ss
into
inc
push
mov
inc
mov
xor
add
aad
mov
inc
mov
pop
add
gs
lock
xchg
xchg
and
or
add
sub
sub
iret
sub
push
daa
pop
imul
xlat
lods
adc
jp
mov
testl
cld
xchg
cmpsl
lret
jae
push
out
ret
loop
inc
or
xchg
adc
into
or
cmp
leave
ds
jnp
enter
mov
incl
push
outsl
or
lds
jb
dec
into
xchg
jnp
push
ja
jmp
or
arpl
sbb
sahf
jnp
or
movsw
mov
outsb
cmp
push
xor
pop
loope
xchg
xchg
cmc
fisubs
mov
and
mov
mov
clc
jecxz
movl
daa
xchg
and
sbb
sbb
cmp
push
arpl
xor
dec
addr16
jae
popf
push
shl
mov
nop
out
sarb
mov
push
add
into
lahf
outsl
neg
roll
imul
fdivrs
stos
xor
lret
push
pushf
push
cmpsl
dec
fnstsw
jbe
inc
mov
jle
int3
in
arpl
xor
mov
dec
add
rol
add
sub
inc
int3
cmp
adc
stos
lret
shr
mov
mov
fcom
mov
xchg
into
sti
vcvttsd2si
es
fsubp
jb
bnd
es
cltd
adc
into
fidivrl
das
rcrl
lods
mov
pop
gs
lret
inc
fwait
test
cmp
fbld
add
loopne
mov
and
push
aad
add
leave
mov
pushf
adc
cmpb
pop
pop
das
sbb
mov
lods
into
add
insb
mul
lret
out
xchg
stc
rcll
sahf
jge
clc
mov
xchg
call
out
call
int
les
pop
inc
into
mov
push
xor
movsb
inc
out
add
add
xlat
mov
sbb
shlb
dec
test
jp
rorb
ss
mov
xchg
or
dec
fistpl
fnstcw
and
aaa
pop
and
test
jae
mov
gs
fs
push
mov
push
pop
mov
or
inc
xchg
pushf
add
pusha
jae
pop
leave
nop
popf
adc
bound
mov
sbb
push
ret
lods
mov
xor
ja
add
sbb
sbb
je
sti
xchg
pop
lea
iret
cmp
xor
push
cmc
loope
adc
push
sbb
mov
lret
shl
mov
loope
mov
ja
into
push
push
xchg
subl
sbb
lsl
push
movsb
cwtl
shlb
out
or
push
sbb
cmp
push
mov
dec
push
cmpsl
push
add
nop
lods
in
imul
pop
push
sub
sbb
nop
fimuls
pop
and
pushf
mov
xchg
pop
scas
jns
jle
inc
mov
outsl
je
fadds
pop
repnz
data16
mov
xchg
mov
cmpsl
mov
test
and
dec
pop
inc
adc
jg
jb
push
mov
jp
test
pop
xorl
gs
dec
scas
or
push
mov
jo
mov
xchg
xchg
test
jg
out
ja
jne
xor
xchg
sbb
pop
outsb
push
mov
cmp
lret
movsb
lds
call
lahf
enter
add
pop
pop
gs
test
push
popa
xchg
adc
es
jae
pop
insl
ds
out
push
push
push
mov
jmp
rclb
xchg
nop
stos
int3
stc
pop
mov
sub
sbb
xor
mulb
insb
sub
xor
mov
mov
out
das
cmp
xlat
inc
scas
fldenv
es
shr
sahf
iret
jmp
push
push
and
pop
cli
pop
or
jb
sub
mov
aaa
cmp
mov
rorb
in
add
jo
iret
addr16
mov
in
push
sbb
sub
out
aas
dec
cmpsl
scas
mov
int3
jmp
sbb
mov
dec
fcmovu
push
sbb
sahf
add
pop
stc
leave
inc
jmp
pop
std
shll
xchg
fiaddl
shlb
jbe
in
xchg
xorb
and
xchg
not
decb
movsl
aad
icebp
cmp
xlat
dec
lahf
stc
out
sbb
inc
cmpsl
insb
mov
hlt
push
xchg
and
jle
test
out
push
into
ret
iret
xlat
xchg
mov
jge
xchg
outsl
mov
into
testb
pop
std
xor
ficomps
test
and
dec
in
add
xor
jge
add
pusha
in
rcrb
js
mov
push
mov
sbb
dec
add
inc
xor
into
pop
mov
out
push
test
mov
or
int
out
ja
fcompl
lods
leave
mov
lods
subb
and
loop
sbb
daa
js
mov
adc
push
push
ds
rcl
cmp
in
les
imul
cmp
fwait
ror
inc
shl
lahf
push
mov
adc
hlt
xchg
lret
ja
add
pop
pushl
sbb
push
inc
cmpsl
mov
xor
inc
out
mov
sub
jne
aam
shl
dec
adc
xor
ret
dec
fildl
push
or
xchg
std
test
popf
xor
mov
dec
insb
int3
push
fcom
mov
fisttpl
push
push
enter
stos
jne
aam
cld
push
jmp
insb
adc
scas
imul
lds
out
jno
push
dec
daa
rcl
sbb
or
jg
mov
lret
sub
imul
xchg
scas
add
mov
into
jbe
mov
int
pop
push
or
mov
fnstenv
and
das
adc
mov
dec
into
subb
cmp
loopne
adc
mov
inc
inc
push
aam
mov
mov
jmp
fistpl
ljmp
cmpsl
push
in
mov
out
aaa
sub
mov
add
pop
push
test
pop
int
fbstp
xor
out
test
lret
mov
icebp
xor
cmp
nop
movsl
ret
dec
and
lret
repnz
push
xchg
push
push
cli
sub
dec
scas
dec
mull
in
popf
or
out
push
push
jge
clc
push
fs
mov
stos
xchg
jg
loopne
nop
jo
adc
inc
rcrb
lret
inc
sub
xor
mov
adc
adc
dec
jl
test
cmp
shlb
enter
fwait
lods
dec
cmpl
push
faddp
dec
mov
xlat
outsb
mov
mov
push
data16
jns
push
push
out
imull
pop
ja
lods
dec
in
or
iret
sbb
push
push
xchg
jns
sub
sbb
fildl
push
sbb
dec
addr16
pop
into
faddl
fnstcw
mov
push
cmp
fstpl
aam
xlat
shrl
pop
sbb
dec
adc
mov
ja
dec
jno
cmp
iret
mov
add
out
and
jl
rorb
es
lret
not
cmpsl
pop
push
mov
je
das
out
es
cmp
pop
int3
sub
adc
mov
outsb
loop
loope
pushf
aad
pop
xor
rol
pop
ljmp
mov
fmuls
lods
fwait
outsb
pop
jp
gs
je
fs
cmp
outsl
mov
enter
xchg
popf
mov
mov
jecxz
cltd
xor
adc
mov
sub
xchg
in
movsl
sahf
cs
jg
lea
callw
adc
pushf
lock
test
push
mov
sub
sbb
adc
sbb
fs
lods
aad
cltd
mov
in
jbe
cmp
xor
pusha
and
mov
inc
xor
clc
sub
dec
ds
jl
adc
push
cs
jp
sarl
mov
mov
out
pop
cltd
idivl
daa
pop
arpl
mov
mov
or
test
mov
xor
cli
cltd
aad
mov
call
rol
mov
hlt
in
push
sub
or
shll
rorl
iret
scas
inc
int3
xor
out
inc
mov
sub
lods
jo
into
pop
es
stc
inc
roll
xor
bound
lock
rol
mov
notb
imul
cwtl
xchg
lea
mov
jb
call
ret
xlat
and
shll
mov
shrb
mov
mov
adc
pushw
xchg
into
hlt
mov
cld
ficoms
into
sub
dec
mov
sub
pop
jae
rol
cmp
out
ret
mov
movsb
xchg
lock
shr
pusha
pop
js
push
scas
out
gs
clc
sub
cwtl
push
push
push
add
imul
pop
jge
adc
std
enter
mov
dec
out
int3
in
pop
lods
arpl
in
sub
or
inc
cmpsl
xor
repnz
push
pop
je
jnp
add
and
pop
aas
dec
jp
outsl
adc
mov
xor
je
and
pop
pop
adc
mov
sub
and
divb
in
sbb
lea
shrl
mov
dec
pusha
jno
sbb
xchg
enter
dec
xchg
xchg
or
jns
rorb
sub
adc
mov
inc
dec
xor
jne
push
imul
hlt
ficoml
sub
dec
popf
mov
imul
or
and
adc
cmp
sbb
fcmovnbe
jnp
sub
push
out
or
xchg
mov
out
add
ds
ljmp
bound
aad
rcrl
fs
data16
test
add
jmp
les
pusha
dec
sbb
fwait
mov
jle
cmc
in
dec
inc
sti
mov
adc
lret
movsl
mov
or
imul
cmp
ljmp
dec
lret
outsb
icebp
inc
rorl
dec
mov
xchg
or
or
adc
pusha
push
push
or
fldl
lret
repz
cmp
and
outsb
mov
or
xor
fistl
inc
dec
sahf
movsl
ljmp
mov
cmp
push
pop
out
xor
sub
pop
dec
pop
mov
pushf
test
xchg
or
cmp
inc
adc
cmp
in
fsubl
insl
sbb
mov
cmovae
lret
mov
loop
mov
adc
mov
cltd
add
inc
movsl
decl
pop
dec
mov
jnp
cmp
jp
loop
int
rorl
pusha
es
adc
inc
lock
pop
or
adc
js
inc
aad
pop
mov
test
xlat
sbb
shll
or
repnz
mov
aam
push
fldenv
pop
mov
dec
dec
scas
cwtl
lret
popa
xchg
jmp
rcl
fnstenv
add
lock
fwait
push
jg
add
sbb
pop
repz
pusha
out
sbb
movsl
cmp
xor
out
insl
push
dec
scas
push
mov
bound
pop
stos
pop
inc
pop
in
not
pop
add
stos
nop
sub
rcr
sbb
sub
cmpsb
fldt
sbb
inc
push
pop
jl
push
mov
push
mov
fsubrp
test
add
out
adc
add
pop
call
mov
mov
push
pop
sub
mov
jne
mov
lock
ss
add
dec
imul
push
mov
out
shll
mov
mov
sub
cs
inc
pop
dec
lret
inc
ja
je
sbb
push
jnp
push
sub
adc
int3
pop
loopne
sbb
xchg
bound
in
in
test
push
mov
pop
dec
push
inc
data16
cmp
jbe
sarl
loopne
xchg
mov
inc
pop
dec
popa
and
lods
dec
or
jno
pop
jbe
fsubl
add
scas
fcmovu
lahf
das
cmp
mov
dec
ret
sub
inc
jp
jns
cmpsl
jmp
xor
fidivs
loop
fwait
add
push
or
xchg
cmp
sub
jmp
mov
adc
out
cmp
fwait
lds
push
pop
sbb
pop
dec
push
jo
cli
data16
fcmovbe
cmpsl
fstpt
jns
cs
test
or
lret
jmp
pop
jp
mov
sbb
mov
cmp
les
pop
inc
mov
or
sahf
push
ret
xchg
test
mov
imul
adc
shrl
sbb
bound
add
cmp
jmp
fdivrp
add
push
xchg
jb
into
or
adc
fxch
leave
add
pop
dec
or
dec
stos
jae
cmc
enter
xor
adc
pop
mov
mov
mov
jl
sbb
loop
imul
push
sbb
out
mov
cmp
mov
sub
arpl
dec
mov
js
loop
std
das
pop
jno
fwait
mov
mov
cmp
jle
test
imull
inc
pop
inc
mov
cmp
mov
lods
enter
mov
rorl
mov
lahf
add
cmpsl
scas
cmp
dec
mov
adc
arpl
test
adc
xchg
lret
mov
shlb
insb
cmp
aam
mov
jp
inc
int
cmp
and
in
lret
dec
jbe
jp
in
lret
nop
push
push
jecxz
jbe
ret
shll
xor
inc
test
sbb
jge
xor
into
jb
fs
and
dec
cmpsb
adc
sbb
add
pop
mov
or
mov
sbb
movsl
fnsave
pop
movsl
jo
cmp
jg
jmp
sub
add
lcall
int3
push
dec
jmp
bound
and
stos
push
push
ret
cltd
ja
jecxz
movsl
pop
sub
xchg
add
into
xlat
popa
push
imul
mov
rol
cmc
negb
xchg
inc
xchg
cmp
jb
and
jno
pop
aad
leave
shl
dec
or
fidivs
mov
mov
lahf
jl
aam
and
add
in
lods
int
mov
into
or
daa
add
push
mov
cmpsb
mov
ret
dec
inc
lods
frndint
adc
add
xlat
daa
jne
inc
push
or
mov
loope
sbb
fwait
iret
jecxz
loopne
les
cmp
js
je
int3
vxorps
sub
cltd
jge
mulb
inc
inc
imul
std
sar
adc
sub
xchg
je
hlt
mov
inc
loop
jmp
jno
ret
sub
repnz
call
cmp
addr16
inc
fwait
loop
inc
jmp
fistpll
ret
pop
into
mov
jbe
xchg
push
into
ffree
pushf
insb
loop
rorl
das
int
xchg
adc
cmpsb
sub
and
jnp
pop
dec
inc
out
xchg
push
add
cmp
xchg
daa
jnp
jl
sbb
dec
adc
or
movsl
iret
outsl
mov
and
mov
lret
push
dec
into
mov
out
insb
and
fsubr
jecxz
std
icebp
mov
inc
sub
popl
or
loopne
or
push
stos
fs
je
mov
fmuls
or
mov
and
inc
jmp
xor
loope
sbb
mov
jne
pop
jbe
call
loopne
xchg
nop
in
ds
add
ss
ljmp
adc
xor
ss
aam
xchg
pop
mov
andl
out
js
inc
push
adc
aaa
scas
sub
call
pop
push
jbe
pop
cltd
fwait
into
icebp
mov
mov
add
lods
insb
popa
les
xchg
push
test
leave
out
pop
sub
pop
ret
lret
ljmp
inc
in
add
into
out
sahf
mov
xchg
mov
pop
pop
inc
iret
xchg
adc
outsl
sbb
clc
and
push
je
push
int3
ret
mov
lods
das
in
les
cmp
dec
movsl
adc
aam
lea
mov
push
faddl
pop
dec
dec
mov
pushf
icebp
sbb
into
inc
sub
ret
test
je
out
xchg
push
push
pop
jno
stos
jno
add
mov
out
int3
add
mov
jne
mulb
movsl
dec
adc
ja
cmp
push
cli
repz
xor
int
adc
mov
scas
cmp
rcl
out
and
lds
fs
mov
pusha
or
push
lret
or
or
stos
and
call
sub
add
lods
pop
sbb
cmp
lds
fsub
xchg
cmpsl
das
fidivrl
test
push
sti
test
imul
add
or
pop
xchg
ficompl
outsb
mov
ds
xor
dec
ds
xchg
push
mov
dec
jl
push
inc
and
mov
mov
test
pop
sbb
dec
xlat
xchg
ret
loop
push
xchg
data16
mov
fistpll
jmp
xchg
int
add
and
fidivrs
sub
movsb
adc
sbb
jne
lock
not
dec
in
js
jno
pushf
push
or
dec
adc
mov
popf
fcmovne
xchg
test
xchg
pop
xchg
fimull
cli
and
enter
ret
divl
lea
popa
dec
insl
and
mov
pop
dec
sbb
push
cmp
push
and
in
pushf
lds
cmpl
xchg
jno
mov
sarl
cmp
adc
push
repnz
xchg
ja
xor
jecxz
sub
jmp
inc
sbb
test
rcrb
add
push
xchg
movsb
aaa
jns
test
ja
xchg
fadds
mov
mov
pop
clc
js
sbb
dec
sbb
push
mov
mov
or
popf
ds
fcmovnbe
rorb
sti
sbb
and
aas
pop
aam
jo
dec
addr16
dec
sub
leave
sub
or
add
sbb
sbb
ret
cld
push
imul
leave
push
pop
aam
fistpll
mov
jbe
add
mov
push
xchg
dec
and
fisubl
aaa
lcall
push
add
scas
cmp
mov
mov
jbe
leave
dec
movsb
in
sub
add
xor
adc
jne
sub
nop
inc
int
fisubl
sub
lret
pop
and
movsl
adc
std
shl
xor
popa
jnp
jno
fistpll
int
mov
data16
sbb
inc
xorl
jb
es
jecxz
mov
cmp
cwtl
cld
arpl
ret
inc
lds
mov
into
cmp
and
ja
mov
loop
xchg
mov
cmc
cmp
cmpsl
repnz
add
jmp
mov
incl
mov
pop
mov
jmp
inc
mov
pop
mov
inc
leave
out
xchg
push
out
fcmovbe
aam
fildl
repz
xchg
fdivl
popf
call
inc
push
mov
dec
aad
fwait
mov
test
push
push
inc
std
cmp
xor
ja
fldl
jle
and
loop
cli
fsubs
ret
sbb
sarb
and
push
stc
and
mov
outsl
in
cs
cmp
push
xor
push
stos
fst
aad
push
hlt
lds
xchg
inc
add
and
adc
mov
test
aas
adcl
mov
jb
stc
mov
test
lea
aam
push
mov
out
nop
cmc
fisttpl
lock
dec
popa
test
movsl
stos
lret
je
lret
pop
add
or
imul
or
cmc
jl
and
or
mov
mov
jle
and
hlt
adc
mov
add
test
dec
js
rcl
dec
daa
in
inc
push
mov
call
aas
gs
lods
push
inc
shll
fiaddl
cmp
fnstenv
pusha
out
add
fidivs
loope
into
push
jmp
or
aam
cmp
insl
fs
test
int3
sub
inc
and
mov
outsb
ja
rcl
dec
jnp
cltd
lods
sbb
int
xor
push
cwtl
push
lds
pop
mov
rcr
dec
jne
xchg
mov
pop
push
and
cltd
aas
call
push
push
add
repz
es
shrb
mov
int
in
and
ret
test
test
insb
cmp
nop
xchg
mov
cltd
xlat
outsl
movsl
pop
imulb
add
sub
outsb
cmpsb
fsubs
xchg
push
push
iret
loope,pt
scas
ss
sub
mov
xchg
mov
pop
mov
mov
in
adc
out
aas
pop
push
push
dec
and
dec
inc
pop
push
ss
inc
ss
in
dec
xor
inc
pop
and
insb
and
stos
lock
mov
add
dec
dec
fcom
cwtl
lret
sub
lock
loope
adc
sbb
xchg
mov
enter
and
and
inc
push
push
fcoml
scas
mov
jmp
jbe
mov
pop
enter
pop
ds
push
dec
popf
dec
jl
ljmp
xchg
fcoml
lret
ds
jno
pushf
icebp
and
mov
lret
lods
or
clc
cmp
mov
movsl
jo
add
notb
or
xchg
push
or
sbb
roll
in
mov
into
insl
scas
int
pushf
in
lods
push
or
push
roll
enter
dec
adc
xchg
inc
sbbb
xchg
cli
push
push
or
das
fcmovnbe
scas
lock
jle
test
and
sbb
dec
outsb
add
inc
cmp
mov
adc
mov
lahf
fildll
imul
and
cmp
push
movsl
jecxz
data16
jns
or
inc
sbb
cmp
xchg
pop
imul
xor
fwait
iret
add
imulb
or
lock
add
xchg
mov
orb
jae
cli
mov
add
jle
push
sub
xchg
mov
lock
inc
and
hlt
xor
test
xchg
out
cltd
adc
aas
mov
stc
cmp
inc
sarb
sbb
movsb
aam
jne
lahf
xchg
jg
cmp
xor
hlt
cmpsl
std
adc
mov
addr16
mov
xchg
mov
sarb
movsl
jmp
aam
sqrtps
stos
rclb
inc
xchg
sub
mov
add
pusha
dec
icebp
and
cmc
cmp
mov
cli
ror
lock
rcl
ja
les
dec
add
mov
adc
mov
add
out
mov
mov
mov
cmp
out
mov
repz
cs
cmp
jl
hlt
lods
aam
push
mov
inc
dec
cltd
push
aam
xchg
mov
cmpb
lret
mov
aad
stos
or
mov
imul
into
mov
ret
pop
pop
insb
ds
adc
aas
stc
jp
mov
push
or
or
loopne
fwait
jge
jb
jne
jae
mov
mov
imul
xor
into
imul
mov
bound
push
dec
lahf
inc
push
xchg
pop
add
pusha
mov
mov
cmp
ds
enter
std
nop
jp
push
call
jae
jo
sub
sahf
in
inc
iret
lods
rcll
int
inc
outsb
es
lret
pop
inc
and
mov
sbb
xchg
xor
xchg
xor
lds
mov
into
jno
inc
mov
and
xor
push
test
add
mov
lock
xor
xor
test
inc
push
add
mov
push
push
rol
inc
insb
js
lds
and
adc
sub
xlat
jg
adc
jo
jl
jns
inc
shr
lea
xchg
xor
arpl
cmp
sti
out
cwtl
pop
popf
sub
lret
repnz
lret
push
test
jo
into
cmp
mov
and
shlb
lahf
ret
stos
stos
dec
js
push
xchg
and
pop
xchg
out
ror
xor
stc
movsb
pop
pusha
jle
jne
push
dec
gs
shld
xchg
xchg
xor
hlt
scas
inc
addr16
push
out
xor
cs
sub
leave
xchg
add
adc
arpl
and
mov
xchg
cmp
inc
push
add
divb
and
cs
enter
pop
pop
and
or
sub
sub
cmc
push
ss
ss
sti
rcrl
mov
std
xor
sbb
inc
dec
mov
in
xchg
data16
repnz
add
mov
cmp
iret
inc
adc
aad
into
inc
jle
mov
adc
imul
cli
xchg
pop
out
ficompl
int
and
fwait
adc
pop
dec
add
jle
xchg
addr16
fidivs
sbb
in
out
and
cmp
push
ljmp
dec
jae
inc
gs
mov
sub
inc
stos
pushf
mov
push
xchg
lods
cmp
daa
iret
push
cwtl
or
pop
jmp
mov
mov
ja
cs
sbb
pop
dec
jg
push
hlt
lahf
adc
mov
add
push
sub
mov
out
fdiv
mov
imul
shr
xchg
lods
jae
mov
mov
cwtl
or
hlt
fwait
mov
jp
add
push
pop
and
shrb
xchg
mov
cmp
add
rolb
cmp
nop
and
and
inc
out
popf
icebp
mov
add
outsl
into
sub
loope
ja
add
sar
jne
push
arpl
jecxz
pop
out
lahf
pop
out
sbb
sub
addr16
fwait
sbb
fs
ss
in
fdivl
outsb
loop
aam
xchg
and
imul
addr16
push
push
fstl
cmpsl
sbb
lret
cmp
push
mov
push
dec
mov
jl
ret
rcl
mov
add
push
test
jb
mov
xchg
out
jl
ljmp
cmpsb
jg
sub
daa
das
sub
stos
scas
call
in
shl
jbe
adc
mov
lret
cmpsb
repz
jo
mov
inc
sub
mov
pop
mov
pop
or
sbb
push
adc
clc
xor
pop
mov
mov
sub
ss
sbb
es
mov
shrb
fdivrp
aas
sbb
push
aad
xchg
add
arpl
xchg
test
addr16
add
push
mov
into
add
cltd
js
adc
push
mov
lret
and
jb
fidivs
pop
sbb
mov
out
pop
cltd
xchg
into
fcmovne
pop
push
int
fucomip
cli
xchg
in
jmp
cmp
outsb
ret
mov
xchg
popa
lret
out
pop
aas
cwtl
xlat
lock
mov
icebp
pop
cmp
popf
lcall
sub
mov
dec
add
sub
pop
xchg
push
and
mov
loop
mov
call
ljmp
in
aam
movsl
rorb
lret
out
mov
cmc
adc
jecxz
pop
mov
dec
rcr
and
mov
mov
rcl
xchg
mov
add
cld
call
push
in
cltd
mov
push
xor
sbb
in
mov
scas
xchg
out
jne
xor
aam
sahf
lods
ljmp
and
mov
aaa
int3
in
dec
lret
cmpsb
into
add
push
pop
loopne
cmp
leave
aaa
int3
out
sub
inc
dec
jae
outsl
stos
pop
jg
ljmp
sarl
jg
popf
dec
xchg
xlat
pop
out
hlt
nop
pop
loope
add
call
jae
push
fs
or
push
jle
mov
pusha
in
and
push
sbb
sbb
xchg
outsb
test
mov
nop
es
imul
jnp
adc
xor
cmc
int
push
mov
ret
xchg
mov
or
dec
int3
xchg
inc
mov
xchg
adc
xchg
shrb
adc
inc
dec
and
add
sub
daa
cli
movsb
shll
mov
jns
insb
push
or
mov
and
jb
xchg
xchg
pusha
imul
jbe
sbb
inc
or
test
mov
mov
adc
cld
stos
cmpsw
mov
adc
aad
repnz
cmp
in
xor
sub
fmuls
mov
pop
in
int3
jae
shlb
daa
pop
xchg
jno
ja
push
add
aad
and
adc
test
in
jecxz
sbb
push
lret
sbb
aam
es
cmp
xor
movsl
imul
add
arpl
inc
cwtl
call
inc
lock
mov
adc
addr16
imul
fwait
mov
movsb
push
jmp
lods
sti
push
outsb
lcall
mov
inc
sbb
stc
lret
std
mov
loope
inc
xchg
inc
stos
jno
je
adc
outsb
into
sbb
cmp
xchg
cmpsb
push
sbb
xlat
xor
add
sub
xchg
lds
cmp
sub
jmp
cmpsl
lock
dec
iret
lds
xchg
sbb
in
std
int
xchg
lret
mov
lahf
push
ljmp
jmp
jo
iret
jbe
push
cwtl
xchg
mov
fadd
adcl
adc
shlb
lods
hlt
push
call
push
test
insb
jae
subl
sti
int3
inc
out
mov
jmp
ss
push
mov
notl
sti
aam
cmpsb
xchg
push
fsubrp
lret
push
dec
jbe
es
adc
cmp
js
add
test
jmp
push
arpl
xchg
ret
mov
sbb
cmpsl
jecxz
and
or
mov
mov
hlt
push
mov
fsubr
push
ficoms
repz
lods
and
in
int
xchg
ret
rcll
notl
mov
mov
xchg
dec
les
xor
cltd
pop
pop
ret
push
push
enter
imul
ret
and
ss
jmp
aam
sub
nop
das
fdivs
shrb
sbb
and
test
xchg
mov
into
mov
sbbb
xor
stos
loop
ja
mov
mov
sbb
xchg
jle
mov
addr16
jg
mov
sub
pusha
outsl
cmpb
push
pop
popa
pop
sbb
push
mov
adc
arpl
pushf
inc
repz
mov
js
imul
jbe
fsubl
pop
adc
pop
xchg
lahf
lods
testb
mov
mov
jle
nop
cmc
mov
daa
jecxz
and
scas
dec
mov
mov
loope
add
loopne
sub
xchg
int3
xchg
lea
mov
sub
push
jno
cmpsb
xchg
mov
test
shrl
out
rorl
and
xchg
call
cltd
inc
push
inc
or
xorl
fdivr
repz
call
pop
mov
mov
lock
fnstenv
adcl
ror
adc
ss
loop
pop
or
or
jle
mov
jno
sub
scas
outsl
in
and
adc
sub
jns
and
enter
sub
sub
std
mov
xor
dec
pusha
or
mov
out
das
sub
jmp
aam
mov
andb
bound
incl
push
test
xchg
lods
inc
mov
pop
out
push
ret
sbb
fcmovbe
push
sub
push
orl
xchg
and
ret
xchg
jns
jge
repz
stc
mov
dec
mov
sub
ss
outsl
mov
xorb
jae
sbb
dec
mov
sbbl
scas
xlat
xchg
in
jb
and
push
cmove
mov
mov
add
movsl
shlb
mov
ljmp
cmp
stos
repnz
js
inc
xor
popa
imul
lret
or
pop
inc
fldt
inc
test
and
jbe
cli
into
adc
test
mov
sub
fwait
dec
movsb
call
or
mov
add
dec
xchg
xchg
into
fisubrs
lcall
cs
jle
dec
sahf
jmp
inc
xchg
outsl
dec
popa
es
mov
loop
add
testl
jge
test
stos
inc
xchg
leave
scas
jmp
dec
imul
or
mov
mov
mov
fidivs
xor
repz
divl
out
lret
add
dec
inc
jp
sbb
sbbb
test
test
pop
mov
or
into
jae
push
stos
dec
jnp
ret
lret
xor
cltd
pop
fbld
loop
sbb
push
sbb
jb
dec
xchg
movsb
ret
xlat
aad
in
in
xor
adc
arpl
xchg
pop
or
inc
stos
sbb
push
add
lods
mov
mov
mov
iret
xchg
mov
sbbl
and
lock
push
rcl
scas
fdivrl
in
cmpsb
iret
jge
push
movsl
dec
inc
xchg
sbb
je
inc
daa
cmpsb
xchg
fs
movsl
mov
sahf
cmp
jbe
mov
xor
loopne
or
adc
push
add
ja
shrb
jle
lret
pop
or
iret
xor
jns
mov
insl
icebp
pop
or
out
and
and
push
icebp
lods
jecxz
pop
pop
mov
jb
inc
push
insl
jns
repz
dec
push
call
cmpsb
sub
mov
out
sub
push
mov
mov
or
fidivrl
add
movsl
mov
lds
lret
dec
jecxz
nop
test
pop
ret
lahf
ret
inc
pop
int3
mov
iret
std
push
adc
sbb
bound
and
int3
inc
xchg
xor
clc
jle
lods
or
jnp
mov
dec
loop
pop
icebp
cmp
ja
arpl
mov
push
lods
mov
movsb
pop
and
xor
sbb
out
mov
cmpsl
pand
sbbb
clc
shl
jecxz
icebp
test
mov
jge
and
movsl
popf
pop
cmp
popa
add
xor
test
cmp
adc
xchg
mov
and
or
xchg
fcompl
aad
xor
insl
mov
add
mov
dec
cmp
push
icebp
sbb
inc
jge
mov
movb
mov
sahf
xor
push
dec
cmp
insl
jnp
jne
sarl
dec
aaa
imul
test
cmpsb
cmp
sbb
mov
xchg
ret
lret
test
ss
bound
mov
call
std
pop
cmp
loop
sub
xor
pop
inc
push
mov
iret
movsb
inc
mov
adc
xlat
push
nop
aaa
mov
mov
outsl
and
lret
data16
pop
aad
out
inc
inc
fsubp
push
mov
fidivs
loopne
xor
insl
inc
push
repnz
aam
mov
mov
clc
dec
inc
cwtl
mov
lret
xchg
mov
into
sarl
iret
jae
xor
dec
adc
xchg
popl
test
scas
sarl
jnp
out
daa
add
lea
sub
pop
mov
rcrl
xor
push
xchg
adc
adc
push
dec
or
imul
fdiv
movsb
shrl
cmp
pop
mov
pcmpeqb
inc
nop
add
push
mov
mov
sbb
rol
int
push
clc
icebp
xor
xlat
sub
push
test
mov
shll
mov
mov
inc
or
ss
fnstsw
add
mov
das
stc
pop
ljmp
mov
xchg
fadds
inc
stc
sub
ljmp
pop
jo
and
or
incb
imul
popf
jae
jecxz
ss
leave
push
jbe
mov
pop
out
mov
dec
out
fsub
repnz
sbb
in
sub
int
jbe
test
ds
jne
cmp
sub
ss
push
jbe
int3
or
push
in
les
imul
mov
jnp
inc
mov
rcrl
sbb
mov
xor
push
pop
cmpsl
bound
ja
xchg
mov
jne
xchg
ds
push
fwait
in
fsubrl
xchg
in
inc
or
sbb
loop
adc
pop
xor
push
stos
adc
sub
inc
lret
mov
lds
popa
enter
int3
out
lods
insl
push
push
icebp
sbb
xchg
sub
xchg
sbb
shl
jg
into
push
mov
xlat
inc
push
stos
imul
jno
inc
rcl
enter
or
push
cmpsb
lea
repz
push
stos
push
test
ds
dec
stos
sub
inc
int3
pop
cltd
scas
out
mov
adc
xchg
add
or
in
pop
jnp
mov
pop
push
out
negl
ljmp
fadds
int3
adc
das
rclb
addl
sbbb
test
cmp
bound
shlb
test
jb
cmpsl
cmp
js
jge
dec
pop
ret
mov
stos
fsub
xchg
mov
mov
stc
add
mov
ret
mov
int3
sarb
fadds
jp
stos
adc
xchg
pop
xor
push
insw
sub
pop
or
mov
cli
pop
xor
dec
test
lahf
jl
inc
adc
adc
adc
push
icebp
or
rcrl
add
jg
popf
xchg
in
jmp
push
aaa
cmp
adc
mov
xchg
aad
jbe
or
push
mov
test
fstl
lock
ljmp
aad
push
in
subl
divl
push
sub
xchg
int3
jecxz
mov
pop
clc
mov
jne
push
int
dec
cmp
xlat
jle
shlb
mov
dec
add
mov
jb
hlt
lcall
or
inc
mov
mov
leave
mov
mov
pushf
dec
imul
ljmp
aaa
inc
inc
in
insb
dec
adc
je
mov
icebp
imull
inc
out
dec
call
stc
push
cmpsl
fs
xchg
push
pop
fst
inc
es
inc
call
push
inc
int3
inc
mov
add
lea
les
push
inc
dec
imul
dec
mov
sbb
jb
pop
test
cli
mov
idivb
movsl
les
lret
inc
arpl
pop
mov
jmp
inc
mov
in
dec
pop
push
jns
in
xchg
add
or
mov
leave
repz
push
sti
lret
inc
lahf
mov
push
popa
push
pop
cmp
fs
pop
sub
lret
dec
pop
and
std
inc
push
cli
sbb
mov
dec
je
cwtl
jbe
mov
dec
add
push
pop
cmp
mov
in
orb
stos
aas
int3
mov
and
arpl
cltd
movsl
and
jne
jle
xchg
dec
jns
and
repz
aaa
sub
jo
test
cmc
jmp
inc
jle
cltd
aam
push
pop
imul
add
sub
jb
test
cltd
mov
stos
jge
js
dec
repz
jmp
mov
popa
jecxz
sub
pop
cmp
sbb
rorl
in
mov
xor
into
je
arpl
test
into
ja
mov
in
jg
mov
dec
int
jbe
cmp
rolb
mov
mov
aas
orl
out
adc
xor
rcrl
adc
rol
repnz
add
mov
dec
lret
sbbb
fstps
lods
out
call
mov
inc
hlt
jo
xchg
jnp
out
add
pop
scas
lock
or
call
push
inc
xchg
adc
fidivrl
mov
repz
mul
push
cmpl
cltd
jp
or
xlat
stos
dec
mov
push
and
mov
rcrl
mov
lret
sbb
jmp
jge
shll
xchg
movsb
mov
mov
cmp
dec
jle
repnz
sub
sahf
xlat
icebp
and
adc
aam
jae
xchg
out
xor
iret
test
loopne
sarl
adc
cmpb
bnd
test
in
sub
adcb
mov
mov
das
imul
loop
xchg
inc
sti
push
fwait
cmp
sub
adc
outsb
fs
lret
fcmovbe
outsb
ret
mov
pop
sbb
jmp
dec
xchg
cltd
out
mov
xor
add
or
dec
mov
in
addr16
lea
pop
xlat
jp
push
movsb
mov
mov
nop
ja
enter
insb
add
push
bound
leave
fistl
push
das
push
mov
mov
mov
lret
fs
xchg
xchg
mov
int3
test
cmp
popa
out
push
dec
adc
mov
pop
icebp
mov
aas
scas
xor
lods
dec
cmp
jp
fisubrs
xchg
sub
mov
push
mov
inc
lahf
pop
cmc
fs
insb
sub
sbbb
lcall
into
or
sbb
xchg
fwait
stos
cmpsl
jbe
into
inc
pop
add
add
sahf
or
cld
jg
dec
sbb
sbb
xchg
addr16
jno
inc
cmp
loopne
adc
or
inc
xchg
add
sti
xor
or
jnp
or
xchg
aam
int3
xchg
scas
insb
sbb
mov
sahf
lds
push
sbb
jno
dec
sub
push
sbb
das
int3
repz
lahf
xchg
or
mov
insb
and
xor
into
lods
pop
lods
jns
ja
ja
jecxz
adc
fwait
or
add
mov
lret
arpl
inc
xchg
ds
cmpsl
into
sub
stos
int3
cltd
dec
xchg
push
hlt
sub
jg
or
and
sbb
inc
stc
loope
sahf
jne
cltd
adc
in
adc
pop
mov
mov
ret
sbb
mov
mov
cmp
lret
pop
rcl
imul
into
add
cmp
cmpsl
mov
out
lahf
or
or
dec
dec
lock
fdivl
scas
pop
dec
call
sbb
scas
gs
sub
outsl
lret
xchg
int3
xlat
fcmovnbe
in
dec
daa
pop
scas
add
push
pop
or
xchg
add
stos
sarl
cmp
enter
add
dec
inc
or
xchg
push
in
dec
insb
das
mov
jmp
xor
pusha
xor
xchg
jo
add
jge
insl
in
inc
les
gs
scas
lcall
cmpsb
icebp
pop
mov
imul
orl
mov
out
call
pop
sub
fcoms
inc
mov
fisubl
jo
sti
add
dec
mov
call
sbb
ds
mov
scas
or
jge
in
xchg
xor
adc
push
xchg
or
fcmovnbe
cs
push
rcl
div
test
mov
push
jmp
mov
mov
xchg
sbb
xor
outsb
das
pop
lds
cmp
ja
xchg
jne
insb
mov
in
mov
pop
pop
stc
push
cli
rorb
mul
xchg
in
ret
mov
ja
pop
push
lret
faddl
xor
dec
lods
out
repnz
aad
mov
inc
inc
filds
scas
xchg
or
mov
enter
mov
adc
pushf
jae
out
sbb
in
inc
or
push
jmp
mov
jecxz
fs
cmpsb
decl
test
push
out
in
repz
loopne
dec
cmc
jno
xlat
stos
iret
sub
movsl
cld
shrl
and
push
push
mov
push
leave
sub
cmpsb
pop
jae
daa
mov
cwtl
inc
js
mov
out
jns
ljmp
rol
push
ss
into
and
adc
sub
inc
jbe
xor
stos
int
add
push
push
jecxz
out
icebp
lret
dec
jno
rcl
push
xor
lea
pushf
into
stc
xor
jmp
xor
pop
or
paddd
test
dec
stc
idivb
push
and
xlat
dec
add
sub
in
ret
xor
icebp
shll
xchg
sarl
scas
push
push
cmc
pop
inc
xchg
lret
in
push
pushf
sub
mov
fisubrs
ljmp
jne
inc
mov
jae
test
mov
inc
mov
fsubl
dec
jnp
rol
jb
arpl
adcl
hlt
xor
fwait
cmpsl
and
loope
mov
repz
movsb
pop
adc
lods
mov
add
dec
push
sub
ss
lret
aad
out
dec
jo
xchg
rclb
jne
push
call
shrb
cmc
jae
adc
adc
in
push
xchg
sarb
das
cmpsb
ljmp
jnp
sarb
dec
jne
repz
outsl
lds
push
fstl
mov
sub
sub
lret
pop
daa
push
lcall
lret
je
iret
mov
rep
sbb
jne
fldl
jecxz
out
pop
xor
xor
aad
or
fwait
mov
lahf
sbb
aas
mov
out
sbb
ror
stc
clc
jmp
outsl
shlb
cmpsl
movsl
inc
shl
add
pop
push
ret
add
push
adc
mov
rorb
add
or
leave
into
adc
in
xchg
test
inc
shlb
ja
test
rolb
orl
or
cmpsl
xor
int3
push
lret
push
jg
pop
fdivrs
jnp
leave
cld
inc
mov
adc
jle
mov
add
into
in
mov
shl
jmp
inc
mov
mov
movsb
xor
in
jnp
and
test
mov
lahf
je
dec
push
xchg
and
and
cwtl
into
ljmp
test
inc
and
icebp
dec
jns
and
or
xor
fwait
ja
add
cli
xor
jbe
dec
aaa
in
into
mov
jmp
jp
and
and
ret
push
adc
pop
add
lret
cmp
lahf
lret
jne
pop
loop
iret
mov
xor
inc
xchg
adc
or
adc
daa
insl
addr16
mov
sub
mov
mov
jge
inc
movsl
pop
loopne
push
imul
jbe
mov
int3
pop
pop
sbb
jmp
mov
or
sti
inc
add
ljmp
xchg
nop
xchg
dec
pop
cmp
int3
ret
ja
aaa
jb
pop
adcb
movb
call
in
sub
inc
adc
pop
jae
jo
mov
test
imul
fisubl
push
pop
inc
addr16
into
aaa
lods
cmpl
hlt
jmp
fcoms
inc
jmp
clc
int
xchg
or
testb
movsl
js
inc
inc
push
add
out
repnz
adc
int3
lods
inc
out
xor
pop
pop
iret
dec
and
movsl
pushf
dec
aas
aaa
iret
pop
lds
lahf
arpl
lock
mov
cs
adc
out
stc
dec
stos
nop
rsqrtps
clc
push
xchg
repnz
push
xorl
xchg
sub
mov
or
repnz
scas
push
lea
pop
mov
pop
jbe
or
pop
jg
sub
fidivrs
enter
pop
test
push
fwait
dec
nop
or
pop
mov
inc
lret
push
rorb
out
stos
js
pop
in
inc
sub
dec
dec
add
outsl
jb
jo
aad
dec
xchg
mov
mov
cmp
xchg
cmc
cltd
adc
aad
outsl
dec
int3
fidivrl
fsts
test
movsl
sub
jecxz
lahf
aam
mov
rcl
or
mov
clc
popf
stos
gs
stos
mov
jl
lods
js
xor
cld
leave
xchg
add
lret
out
or
mov
mov
pop
sub
mov
popf
fs
fisttpl
hlt
xchg
dec
fwait
shll
jo
mov
aaa
mov
loop
out
mov
push
ficoml
loopne
sbb
orl
jl
add
cmp
xchg
adc
jbe
cmp
xor
hlt
ljmp
out
gs
mov
push
mov
jp
pop
popl
push
pop
loop
dec
roll
xor
cmp
jno
cltd
mov
adc
jecxz
jp
es
stc
push
mov
dec
movsb
bound
add
xabort
out
rcl
pusha
dec
xchg
mov
shlb
std
test
test
pusha
and
pop
push
lds
loope
in
fldt
or
adc
addr16
add
push
in
enter
inc
xor
jno
dec
movsl
mov
je
fwait
pop
inc
cmp
mov
movsl
or
pop
pop
je
lret
cmp
iret
int3
add
or
cmp
arpl
cld
or
enter
clc
jb
mov
push
insl
dec
pop
ss
cltd
out
inc
or
mov
ja
imul
es
dec
out
cmp
or
mov
repz
xchg
pop
mov
sub
xchg
mov
jne
add
mov
sub
push
push
adc
sbb
jp
jns
fldenv
jae
popa
lret
pop
xchg
or
ficompl
and
into
scas
lahf
stc
movsl
jbe
or
mov
cmpsl
jle
dec
mov
adc
xor
xchg
dec
insb
addr16
mov
push
adc
decb
mov
fsubl
ss
lret
mov
inc
pop
dec
pop
lea
imul
lahf
lret
mov
xor
jle
jns
xor
mov
xchg
add
push
sbb
fcoms
cmp
int3
adc
out
sti
push
movsl
sbb
rcll
lods
mov
xlat
push
sub
mov
cmc
data16
add
cli
mov
mov
dec
call
inc
adc
jl
outsl
cld
into
push
pop
or
aas
fstl
push
hlt
int3
push
and
mov
test
test
addr16
cltd
mov
adcb
arpl
or
in
pop
fs
imulb
adc
test
mov
xchg
sahf
scas
push
fs
or
lahf
aas
mov
fcmovne
mov
xchg
mov
int
xchg
icebp
into
dec
ja
mov
add
jl
xchg
lret
sbb
call
pop
rcl
mov
lret
dec
in
or
ja
xchg
mov
gs
mov
insl
sti
sub
aam
loopne
pushf
movsl
mov
add
outsl
fucomi
jmp
jne
test
repz
int3
repnz
push
mov
adc
jbe
shrl
cltd
mov
fildll
inc
pop
mov
inc
sub
cld
sbb
out
stos
dec
into
inc
in
icebp
or
jge
nop
mov
ljmp
xchg
add
push
adcl
xor
test
aad
push
test
sbb
push
inc
repnz
add
mov
xchg
sti
mov
lea
stos
cmc
mov
fadds
orl
push
jnp
into
inc
js
cs
cmpl
jno
sub
xor
xchg
lcall
ret
lods
inc
fcompl
jno
sti
mov
les
dec
sub
inc
xor
jb
fsub
fisttps
xor
xchg
loope
mov
cmp
lods
test
into
sbb
push
push
out
mov
xlat
jae
stos
cmp
xor
lods
or
in
inc
sub
push
xorb
cmc
push
inc
inc
xchg
push
dec
std
xchg
cmp
sub
imul
mov
aam
rclb
fistps
loop
lods
xchg
fistpl
mov
push
icebp
xchg
shlb
xchg
dec
fdivp
push
jecxz
xlat
in
mov
cmc
sbb
push
lret
mov
sti
push
cmp
mov
xchg
lods
push
mov
push
data16
mov
bound
sarl
fwait
out
mov
push
loope
cmpsl
push
jp
jle
ljmp
stos
mov
into
push
push
outsb
jo
fpatan
into
pop
fisttpll
or
jl
cli
or
je
dec
outsl
xchg
mov
jp
mov
shl
xchg
cmpsb
fcoml
push
repz
outsl
adc
js
ret
jae
loop
adc
push
pop
jo
cmp
push
pop
std
test
inc
fdivrs
cmp
mov
jnp
xchg
cmpsl
and
clc
mov
into
xor
xchg
mov
lret
aaa
jbe
in
mov
int
pop
test
push
mov
dec
jno
push
cmp
pop
push
and
or
stos
sarb
xchg
cmpsl
aad
sbb
xor
pop
fwait
jae
jg
and
es
cmp
nop
inc
mov
into
dec
jp
or
mov
repz
xor
mov
fs
arpl
in
sbb
hlt
mov
xchg
adc
icebp
inc
stos
add
out
and
pop
call
mov
xchg
mov
mov
pop
pop
mov
addb
scas
inc
add
xchg
mov
jg
mov
lods
stc
xlat
dec
fsub
or
dec
or
adc
fs
add
jmp
push
mov
push
jne
pop
pop
das
into
mov
or
ret
jbe
dec
lcall
hlt
adc
fnstsw
bound
imul
sub
add
cs
push
adc
int3
lcall
jecxz,pt
call
push
ja
int3
sub
lock
pop
inc
add
xor
test
adc
xchg
jne,pn
lods
dec
in
adc
pop
add
insl
jo
mov
stos
popf
stc
pop
scas
loope
shrb
sbb
int3
testb
adc
loop
push
jo
sahf
mov
jl
divl
xchg
aad
adc
cli
fidivrl
inc
adc
cmp
loopne
pop
xchg
fistpll
adc
andl
stos
arpl
mov
xlat
ja
sub
fsubl
xor
dec
inc
mov
sub
mov
das
xor
jecxz
les
mov
pop
mov
sub
jns
mov
cld
mov
pop
leave
pop
hlt
xchg
jl
fiaddl
inc
je
inc
js
push
push
mov
jmp
jp
stos
ret
rorb
es
ljmp
aam
bound
lods
cmp
mov
fstl
sbb
in
ret
xchg
loope
mov
pop
dec
xchg
jae
mov
int3
or
and
mov
cmp
repnz
inc
and
and
push
mov
loop
sub
cmpsb
xlat
mov
xchg
push
sti
xchg
mov
push
lods
adc
cmp
push
or
dec
into
sar
cmp
xor
mov
push
clc
xchg
cltd
movsb
inc
add
pop
lret
pop
stos
sbb
ds
jecxz
mov
mov
lock
sti
lret
push
movsl
cmp
cmpsl
add
xor
cmp
jae
add
out
test
inc
add
mov
fmul
add
daa
adc
test
xchg
sbbl
outsl
jns
stos
dec
imul
ret
inc
sbb
push
pop
mov
jno
in
mov
xchg
pop
imul
xor
sub
dec
push
fwait
push
mov
cmp
pop
inc
xchg
xchg
xor
mov
jg
inc
loop
dec
push
push
mov
cmp
sub
push
cs
or
shl
popa
add
insb
fs
sahf
bound
or
rcrl
subl
out
adc
pop
xlat
sbb
mov
popa
or
mov
jmp
jo
push
std
push
stc
arpl
or
add
cmp
push
push
sti
dec
enter
mov
rorl
mov
lret
loop
mov
xor
dec
adc
insl
js
test
pushf
jle
es
mov
into
pop
cli
pop
dec
arpl
out
push
xor
test
inc
dec
pop
ret
sbb
mov
mov
xchg
mov
mov
jo
movsl
pop
mov
mov
push
jg
pushf
cltd
add
xchg
mov
outsl
out
adc
cmp
pop
divb
add
scas
frstor
pop
lcall
movsb
push
les
mov
scas
fnsave
inc
xor
js
or
pop
test
mov
push
xchg
jns
push
cmpl
and
out
mov
test
cwtl
repnz
dec
xchg
pop
ja
int
sbb
dec
call
sahf
pop
mov
fildll
and
jne
fistl
in
and
dec
shrb
aas
cmp
xchg
outsb
popa
shl
xchg
pop
mov
pop
mov
aas
inc
push
cmc
mov
push
and
test
ret
inc
adc
popf
in
stc
decb
dec
repnz
xchg
cmp
call
xchg
imul
fiaddl
lods
aaa
add
push
sub
jmp
stos
movsb
lcall
adc
jl
sahf
imul
loop
out
loope
add
adc
mov
inc
incb
mov
dec
push
int3
arpl
pushf
or
push
jp
jle
in
inc
push
push
fs
into
sbb
out
pushf
inc
scas
subl
jecxz
push
xchg
pusha
xchg
and
add
insb
sti
add
jbe
mov
cltd
sbb
dec
push
movsl
sbb
in
pop
lcall
loopne
enter
out
jl
daa
nop
bound
mov
stos
cltd
fistl
xorb
sbb
inc
ret
out
ljmpw
or
push
in
mov
or
dec
fdivrl
repz
ficomps
xor
xlat
ja
test
mov
xchg
jns
dec
and
pusha
in
and
cmp
movsl
cmpsb
push
push
arpl
shll
fwait
or
dec
xor
outsb
push
push
cmpsl
pop
adc
push
xor
mov
fmuls
stc
push
mov
shlb
int3
subl
hlt
scas
cmp
mov
sub
xchg
and
mov
repz
jo
dec
pop
out
lret
jge
lock
dec
push
mov
mov
lea
sarl
insl
sbb
dec
ss
xchg
push
adc
adc
sbb
adc
xor
jne
stc
or
dec
mov
mov
out
rclb
je
mov
scas
adc
mov
xor
mov
sbb
cmp
int3
pop
or
call
xor
xchg
dec
adc
loopne
sbb
sahf
jge
sti
jnp
std
popf
in
push
rcrl
test
lahf
dec
push
pop
pushf
mov
lret
xor
es
xchg
in
cmpsb
cmp
decl
in
iret
out
out
pop
pusha
jmp
bound
add
mov
jbe
cmp
lret
jnp
hlt
inc
and
jecxz
sbb
into
out
dec
testl
mov
dec
add
cli
adc
int
rcrl
or
mulb
dec
inc
outsb
fstl
dec
mov
adc
out
sub
adc
andl
cmp
adc
nop
sub
pop
cmp
popa
test
aam
push
mov
outsl
es
lret
inc
or
mov
mov
es
pop
and
xchg
add
neg
pop
sub
test
int3
lods
mov
add
jnp
clc
jmp
lcall
out
xor
cmp
jmp
pop
mov
mov
mov
repnz
mov
push
test
adc
sub
scas
repz
lcall
aad
jg
mov
mov
jnp
lods
rcr
repnz
xchg
stos
jmp
or
cwtl
cld
in
pop
mov
fwait
jp
dec
cltd
bound
or
xor
div
cld
ret
jg
mov
test
fidivrl
movsl
orb
insl
mov
out
mov
ds
lret
sbb
mov
xchg
inc
mov
jg
pushf
mov
jle
not
push
jns
loop
test
into
xor
and
lds
xchg
mov
lahf
aas
jge
xlat
dec
jp
jbe
sbb
push
insl
mov
outsb
sti
sbbb
xor
loopne
test
testl
rolb
adc
test
cmp
xchg
repnz
gs
std
mov
mov
pop
or
jg
mov
xlat
aad
adcl
js
or
jmp
scas
aad
mov
or
inc
sub
xor
pusha
and
outsl
dec
xchg
aaa
add
fadd
stos
cli
std
ds
or
cwtl
ret
shrl
add
push
popf
movsl
into
aaa
push
and
xorl
in
adc
fwait
pop
mov
int3
fld
and
loope
outsl
cmp
addr16
test
imul
jge
cld
ja
mov
repz
jno
out
or
clc
lods
jle
or
push
mov
sbb
lds
daa
adc
xchg
sub
lret
jbe
inc
lock
insl
and
and
adc
js
into
push
pop
stos
inc
lock
insl
xchg
aas
mov
xor
shl
pcmpeqb
scas
mov
aam
pop
ja
inc
pop
cmp
out
leave
mov
dec
hlt
cmp
aam
popa
or
xchg
push
cwtl
fildl
movsl
fldenv
mov
orl
shll
repz
test
push
add
hlt
bound
xchg
pop
cltd
test
enter
fists
scas
out
pop
mov
aaa
std
sbb
pop
push
mov
fwait
dec
adcb
cld
cmp
shrl
or
fwait
jge
jecxz
and
sti
out
mov
or
das
or
mov
out
mov
jl
and
lods
push
scas
lcall
mov
test
in
rorl
mov
jg
in
add
daa
xor
into
mov
sbb
addr16
clc
pop
mov
stc
repz
pop
les
je
mov
arpl
add
xor
ret
stos
movsl
mov
sbb
sub
adc
jnp
push
jl
ret
lds
icebp
inc
hlt
push
jne
mov
sti
mul
aam
cmpsb
jge
insl
js
xchg
and
mov
add
dec
and
cs
fstpt
fucomp
mov
int
js
pushf
push
pop
hlt
adc
sub
daa
adc
or
out
jle
dec
fwait
cmp
or
mov
popf
cwtl
in
fistpl
adc
int3
inc
jbe
jno
xchg
xchg
mov
bswap
into
jle
push
inc
mov
ja
rolb
in
or
adc
mov
out
sbb
loopne
push
clc
cli
adc
ljmp
pop
ja
mov
xchg
out
mov
aas
jle
clc
mov
or
popa
icebp
loop
push
adc
mov
dec
sub
xchg
pop
out
sbb
inc
ja
push
mov
jb
inc
cld
mov
aam
push
xchg
sbb
gs
fdivp
pandn
out
into
arpl
inc
cmp
ficomps
ss
xor
out
mov
lcall
xorl
loopne
inc
mov
arpl
scas
lcall
mov
lock
nop
test
jb
aad
xlat
lods
scas
popf
inc
push
repnz
xchg
imul
jae
xor
push
ret
lds
jmp
imull
sbb
add
cmc
and
adc
notl
iret
sbb
or
dec
cmp
sbb
les
dec
cmpsl
xor
lret
leave
das
mov
add
repnz
or
or
aam
stos
vunpckhps
out
or
push
and
cmp
push
sub
test
or
jecxz
xchg
stos
inc
into
jns
xchg
sbb
pop
inc
sub
cmpsb
lods
stc
sub
xchg
inc
sub
repz
data16
nop
mov
or
lahf
aam
add
hlt
imul
jp
jmp
sbb
push
mov
lret
cwtl
out
ja
and
out
push
sahf
add
mov
cld
dec
lods
sub
flds
pop
mov
mov
loopne
ret
subb
aaa
out
cmp
loope
fs
add
inc
cwtl
stos
jp
mov
iret
sbb
lock
aaa
into
cmpsb
jecxz
dec
dec
add
mov
cwtl
xlat
pop
xlat
mov
jne
mov
arpl
xor
int3
jmp
fcmove
shll
xchg
fstps
mov
and
adc
cs
test
data16
jo
adc
scas
arpl
xchg
pop
mov
into
sti
ljmp
ret
pop
out
into
xorb
mov
jno
lret
pop
adc
push
out
xor
adcb
push
fcomip
test
rorl
adc
or
cmp
mov
scas
sbb
bound
lods
xchg
push
or
or
inc
insb
ficoml
add
pop
mov
jge
push
js
or
fimuls
or
push
push
lock
ret
add
xchg
jecxz
out
aad
inc
mov
jp
adc
aam
dec
sbb
testb
xor
mov
in
in
imul
addr16
loope
cmpsl
inc
aaa
aam
ds
mov
popf
lret
inc
cmp
xlat
dec
filds
or
jmp
popf
xchg
testb
ds
sahf
and
imull
dec
aam
xor
jbe
ja
xor
xor
xchg
sti
dec
adc
mov
outsl
push
inc
stc
push
cs
or
enter
mov
add
iret
daa
pusha
imul
lret
icebp
xor
xor
sbb
loope
lods
fcmovnb
mov
push
sbb
inc
cmp
outsb
data16
loope
out
jne
out
jle
dec
in
das
shlb
notb
xchg
add
call
idiv
jg
jmp
aam
aas
test
or
mov
push
xchg
xor
pop
rcr
push
loopne
notb
sub
pop
and
mov
push
jne
ljmp
js
mov
mulb
inc
push
es
jae
adcb
xchg
sti
fcmovnb
loopne
or
lret
push
pop
push
insb
sub
shl
adc
push
jge
push
stos
test
inc
cmp
outsl
pop
adc
xchg
add
xchg
imul
std
iret
es
add
cmpb
vprotb
hlt
pop
arpl
mov
mov
lcall
xchg
mov
mov
movsb
lods
jg
movzbl
lret
mov
outsl
jne
and
cmp
call
cmp
ret
jns
lcall
nop
mov
aad
shlb
cld
jnp
xor
and
lcall
cld
addr16
xchg
pushf
mov
insl
xor
test
dec
inc
or
cmpsl
lock
cmp
inc
mov
jne
adc
fists
mov
stc
bound
addr16
gs
mov
test
push
mov
mov
lea
cli
bndstx
xchg
jns
es
jbe
pusha
repnz
insb
mov
cmp
hlt
or
or
or
jno
movsl
cmp
shrl
jle
pop
inc
and
pop
jae
sahf
xchg
pusha
mov
test
addl
ljmp
shrl
loope
ss
mulb
adc
pop
mull
add
sub
lret
mov
nop
rcll
sbb
std
dec
jne
jb
and
imul
lcall
pop
fisubs
scas
xchg
cltd
stos
fldenv
sub
xchg
test
inc
out
shrl
mov
mov
sbb
leave
push
adc
xlat
pop
adc
push
add
mov
iret
xor
int3
mov
imul
fwait
test
mov
imul
xchg
mov
push
and
lods
mov
pop
daa
dec
orb
or
lock
movsl
add
xchg
lods
push
jne
outsb
andl
jns
ret
pushf
cmc
iret
mov
sub
ret
mov
mov
mov
lret
sbb
xchg
xchg
imul
clc
cs
stos
sub
sbb
aad
lret
movsl
cwtl
fsubs
int3
pop
movsb
push
push
inc
in
xlat
in
mov
lret
je
sti
add
pop
data16
xor
fsub
dec
push
lret
inc
loop
loope
lods
jae
mov
ficompl
sbb
pop
mov
mov
dec
arpl
xchg
je
movsl
mov
pushf
inc
clc
aas
repz
xor
xor
in
test
or
movsb
nop
out
ror
mov
lods
push
xchg
fucomp
inc
scas
div
icebp
dec
or
xor
popa
jbe
lea
scas
stos
push
jbe
ret
insb
xor
lret
shlb
jbe
jl
movsl
fcoms
ret
jg
dec
ror
xchg
pop
out
fisubl
or
shll
push
aam
adc
inc
xchg
sbb
into
xchg
push
les
push
adc
lods
call
push
ja
inc
into
jmp
adc
mov
lock
mov
repnz
sbb
push
mov
mov
inc
daa
or
ja
push
lods
les
stc
sahf
sub
jnp
pop
dec
or
outsl
xchg
xchg
addr16
mov
lea
xlat
xchg
sbb
loopne
mov
shll
sbb
leave
push
sbb
push
mov
test
jge
test
in
daa
sarb
imul
frstor
mov
adc
in
push
xchg
adc
xchg
fwait
sbb
xchg
popf
mov
dec
lret
mov
xchg
fisubrl
cmpsb
popf
add
ret
icebp
out
sar
push
clc
xchg
lods
ds
sti
into
lret
loopne
popa
mov
push
test
pop
aas
clc
aaa
ret
push
outsl
fsubrs
cmp
and
jbe
xchg
into
rolb
sbb
inc
push
out
mov
adc
popa
dec
es
lods
adcb
sub
push
and
pusha
inc
xor
mov
out
int3
mov
dec
mov
mov
ret
xor
sub
out
or
lods
vpsubq
push
aaa
jmp
mov
xlat
ret
insl
xchg
inc
push
add
xchg
cmp
add
cwtl
sub
jge
movsl
mov
inc
ficoml
rol
lahf
xchg
and
xchg
into
xchg
cli
loop
stc
mov
xchg
dec
fcoml
test
push
mov
data16
leave
test
imul
add
sahf
scas
or
jge
xchg
fcmovnu
cltd
jnp
rclb
add
add
lahf
inc
jmp
into
xlat
lcall
sti
iret
mul
in
fmulp
lods
jle
out
imul
push
lret
out
sti
cmp
popa
outsb
sbb
mov
clc
lcall
daa
add
adc
mov
fwait
xchg
pop
cmpsl
dec
dec
lods
inc
test
and
inc
rorl
mov
or
and
jl
xor
add
sbb
cmc
cmp
lret
add
rorl
test
push
sub
and
in
bnd
clc
ret
xor
jp
pusha
js
push
push
and
jmp
adc
je
mov
fwait
push
mov
adc
pop
jae
fisttps
mov
push
xchg
imul
lret
ja
fs
mov
test
dec
push
popf
cmpsl
mov
jb
dec
cld
std
fwait
adc
out
sbb
roll
imul
cld
xchg
add
repnz
inc
push
adc
je
into
call
inc
xor
jg
pop
push
sbb
dec
cmc
es
fdivrl
push
popf
sti
jge
mov
dec
mov
push
lret
dec
pop
adc
in
inc
cmp
leave
cmp
out
jne
or
and
push
dec
outsb
vmread
jb
pop
add
xor
or
out
pop
fs
pop
iret
mov
mov
inc
xchg
jns
rcll
cltd
in
jp
stc
or
mov
orb
xchg
mov
or
mov
push
loopne
out
xor
pop
lods
pusha
in
jg
xchg
xchg
aam
add
push
inc
lock
mov
fadd
insl
clc
mov
inc
xor
add
push
ljmp
insl
sub
xchg
push
les
insb
fistps
pushl
shl
and
pop
cwtl
sbb
lcall
or
inc
es
ds
subl
xchg
push
outsl
das
int
ror
lds
out
xor
sub
filds
cmovg
in
out
push
pop
xchg
push
iret
mov
add
data16
sbb
add
inc
jns
clc
pminub
inc
pop
dec
loop
and
or
repz
aam
roll
adc
mov
loope
cld
adc
cmp
arpl
inc
inc
xor
addl
in
mov
cmp
pop
xchg
in
and
cwtl
orl
movsb
pop
lcall
dec
stos
xchg
and
dec
testb
xchg
les
push
ret
pop
jne
sbb
cmp
adc
pushf
jo
test
popa
lds
adc
or
push
jg
jge
in
mov
mov
stos
adc
push
or
lret
loop
xchg
jg
pop
scas
aam
xchg
adc
in
into
hlt
xlat
lret
inc
sti
nop
inc
leave
in
mov
push
shrb
int
lret
lss
pop
xchg
andl
rcl
incb
arpl
jp
sbb
sub
xor
or
lcall
dec
xchg
inc
lcall
ja
cwtl
mov
enter
adc
es
repz
dec
jecxz
jge
lods
pop
fs
mov
lret
dec
push
dec
xchg
mov
sub
ljmp
fisubl
test
movsl
lock
or
dec
push
jge
cmpsl
mov
outsl
test
sbb
pop
nop
cli
dec
sub
push
cwtd
mov
lret
sbb
out
gs
xchg
xchg
inc
sub
pop
add
mov
cltd
andl
mov
stos
in
mov
push
lret
xchg
dec
std
into
inc
lock
rcl
loop
das
repnz
inc
xlat
push
or
jge
inc
es
adc
mov
jo
cmp
pop
imul
mov
call
insb
cltd
dec
add
fwait
sbb
fisubs
es
push
outsl
adc
in
push
jae
hlt
sbb
ss
push
jp
out
jge
fsubr
and
mov
xchg
add
mov
jne
and
mov
mov
adc
lock
cli
mov
and
xor
loopne
icebp
lret
je
outsb
xlat
hlt
cmp
rorl
xor
out
push
repnz
pop
jns
leave
pop
aas
out
cmp
mov
push
mov
jbe
icebp
stos
pushf
lret
sbb
lock
pop
jae
or
mov
mov
ret
outsl
pop
aad
jge
mov
sti
sbb
stos
cmpsl
and
ds
sub
loope
pop
scas
mov
in
out
pop
sbb
in
lret
pop
je
test
vcvttpd2dqx
es
bound
call
shrb
loop
sub
lock
orl
xchg
mov
insl
ret
addr16
lods
or
mov
cmpsl
int
test
or
sub
into
imul
cmp
in
dec
mov
jo
lahf
jge
or
les
xchg
and
cli
scas
dec
jo
sbb
cltd
or
stos
shl
inc
xor
add
pop
or
mov
fldl2e
test
pushf
iret
xchg
jne
cmp
pop
and
icebp
into
jae
popa
inc
mov
sbb
xchg
movsb
mov
dec
adc
fs
outsl
int
xchg
or
movsl
add
int3
call
push
in
loop
xchg
jge
jbe
add
jle
jae,pn
sub
mov
push
loop
mov
lcall
jbe
push
add
imul
add
mov
mov
push
lods
test
jae
mov
mov
adc
lret
dec
mov
lret
incl
mov
xor
mov
sbb
ja
shll
xchg
xchg
into
cwtl
sub
inc
jge
xor
or
inc
sbb
popa
adc
ljmp
inc
pop
das
scas
push
push
jmp
or
dec
into
test
sti
sub
add
outsl
mov
sbb
aas
adc
sub
idivb
into
push
jecxz
xchg
ret
sub
std
mov
jge
mov
sbb
push
push
jae
ror
shlb
adc
sbbb
add
adc
ljmp
mov
push
lods
fiadds
in
adc
xchg
call
add
and
lods
push
jg
sbb
mov
mov
orb
out
add
sbb
rcl
lds
mov
rorl
mov
xchg
ret
sub
push
incl
pop
mov
mov
daa
or
or
xchg
jecxz
call
cli
test
iret
push
jns
rcrb
cmc
push
sbb
bound
mov
loopne
icebp
or
dec
xabort
mov
outsb
mov
and
or
lret
aam
lods
or
inc
repz
insb
mov
or
pop
out
adcb
push
mov
mov
sub
fidivrl
daa
sti
pop
sbb
les
inc
xor
push
add
mov
push
filds
xor
rol
dec
pushf
xchg
addr16
sub
and
scas
push
jp
pop
pop
into
divb
push
addr16
arpl
das
aad
mov
inc
in
push
inc
int
into
sub
call
fadd
xor
aad
adc
push
lret
push
pop
test
fmuls
insl
push
push
nop
mov
sub
jbe
repz
fs
cmp
insl
mov
mov
mov
not
dec
call
addr16
xchg
rol
int
xchg
sbb
bound
dec
repnz
and
cmc
pop
jl
mov
adc
je
jecxz
rcl
mov
cmpsl
jnp
popf
aad
add
inc
sub
push
mov
lcall
or
jp
cmc
mov
repnz
mov
aad
je
rclb
shlb
test
xchg
xchg
cltd
fisubrl
mov
xor
xchg
shll
lods
into
mov
ds
test
pusha
jo
lds
pop
push
aam
add
pop
xchg
test
add
xchg
mov
pop
fadds
popa
test
jmp
rdpmc
cmpsl
dec
xor
stos
and
in
lret
test
cwtl
stos
leave
rorl
icebp
js
loop
leave
xor
rcrb
in
mov
call
negl
loop
cwtl
xor
popf
and
dec
rcrl
sarl
xor
clc
push
and
mov
lret
iret
sub
add
xor
orl
push
jge
outsb
dec
pop
or
inc
imul
fidivs
xchg
xchg
mov
scas
out
lcall
or
push
dec
inc
das
push
enter
inc
into
sub
jne,pn
mov
and
push
add
lea
add
mov
dec
icebp
movb
cmpsl
inc
sub
jae
mov
in
xor
movsl
pop
fwait
notl
and
xor
into
pop
sbb
enter
movsb
cmp
jno
pop
sbb
leave
mov
movsl
dec
mov
pop
mov
xor
mov
mov
mov
outsl
cmpsb
pop
std
lea
sbb
sbb
ret
fs
sub
imul
mov
xchg
stos
jge
mov
jp
or
jo
sbb
repz
out
outsb
lock
cmp
jmp
adc
dec
sbb
fsincos
outsb
adc
pusha
lods
lret
out
lahf
aam
xor
leave
dec
push
repnz
repz
xchg
sti
and
shrb
xchg
fsubs
push
leave
mov
std
pop
in
xchg
push
jge
push
and
inc
aad
adc
jno
aam
cwtl
pop
lock
test
in
in
pop
nop
packssdw
pop
lods
cld
ja
enter
push
jno
sbb
fnstcw
push
test
ret
clc
pop
repz
leave
in
xchg
mov
push
cmp
push
mov
dec
inc
daa
mov
ror
cmp
in
aas
filds
testl
jge
add
iret
jecxz
xchg
into
sub
cmp
dec
clc
outsl
loope
fimull
ds
push
jbe
rcl
orb
popf
mov
shl
lcall
lods
mov
mov
cmp
roll
ds
aad
and
dec
imul
sti
repnz
daa
scas
lods
cmp
add
cmp
lret
push
loope
jmp
push
push
imul
xchg
mov
add
inc
dec
addr16
shll
es
push
lds
mov
ficoml
ret
sbb
xor
push
sbb
into
sub
push
fbld
rolb
scas
pop
adc
rolb
lret
mov
in
push
lods
xlat
xor
pop
inc
mov
lds
lock
ja
rol
rcrl
dec
mov
ficoml
mov
mov
into
inc
push
loope
push
fstpt
mov
adc
push
mov
shr
fldt
cli
jl
jecxz
lea
pop
sub
sbb
pop
sub
xchg
jle
leave
gs
xor
mov
dec
int3
dec
stos
xor
std
adcb
mov
in
lods
pop
out
cmpsl
cmp
into
aad
or
mov
xchg
xchg
rcrb
inc
jge
movsl
shll
sbb
das
inc
mov
aaa
pop
inc
insl
repz
fimuls
sbb
dec
xor
inc
xchg
cmp
in
rcrb
inc
aam
push
jl
bound
mov
inc
rcrl
xchg
push
scas
adc
sub
or
push
aas
push
mov
mov
inc
insb
nop
and
arpl
jp
mov
aaa
add
dec
aam
jnp
and
pop
xor
out
clc
rorl
mov
outsl
jmp
lea
xchg
inc
sbb
jae
dec
adc
xchg
nop
pop
or
cli
in
mov
dec
mov
das
sbb
xchg
mov
aad
in
shrb
sahf
fst
or
dec
cltd
leave
icebp
cmpsl
int3
mov
call
cld
fmulp
loope
mov
hlt
push
dec
push
push
out
push
loopne
pop
jecxz
dec
lret
inc
enter
push
out
inc
fs
lret
xchg
xlat
imul
inc
out
mov
aaa
aad
stos
mov
test
into
fistpll
push
in
lds
pop
or
xor
push
xchg
cli
ja
sub
loop
jmp
fstpt
lods
sahf
je
fcomp
cmp
pop
adc
ljmp
xor
mov
sbb
mov
pop
mov
sbb
xchg
sub
mov
call
or
decl
clc
insb
testb
int3
ja
daa
aam
add
ja
mov
add
das
sub
push
mov
lret
xchg
lahf
mov
pop
mov
daa
and
in
pop
jbe
or
mov
insl
sbb
cmp
in
repnz
das
mov
inc
xor
outsl
jmp
pop
mov
in
xchg
test
cltd
lea
shlb
mov
data16
fidivrs
or
and
scas
push
xchg
add
and
and
inc
jne
scas
rorl
sbb
es
pusha
xor
loopne
aam
cld
mov
add
pop
jnp
mov
jge
scas
pusha
sub
xchg
and
push
cmp
out
out
shl
dec
mov
not
xchg
sbb
mov
jmp
into
adc
les
dec
mov
push
iret
int3
je
jl
mov
sub
or
and
mov
pop
or
adc
push
roll
xor
outsl
sbb
jl
cltd
mov
imul
idiv
rcll
es
and
adc
into
nop
adc
lods
xchg
and
lods
mov
stos
adc
out
gs
inc
xor
outsl
test
std
and
jmp
in
arpl
sub
lods
lock
jge
js,pt
roll
xchg
lods
insb
or
mov
jmp
mov
aad
pop
cltd
jno
xor
pop
cmp
sbb
movsb
fnstcw
jne
xchg
xchg
into
push
insl
or
mov
dec
jne
gs
inc
out
xchg
insl
aaa
sbb
cmp
xlat
les
mov
leave
push
test
add
int3
pop
enter
fsub
add
pop
fcomps
data16
xchg
jne
movsb
scas
popf
lret
ret
cltd
je
pop
push
add
push
push
test
xchg
mov
jbe
les
loope
stos
xor
ja
or
out
fsubr
in
fwait
sbb
xchg
inc
jne
addl
pop
ja
xchg
inc
test
or
mov
mov
pop
cmc
mov
enter
dec
and
aaa
mov
xlat
sahf
jno
mov
mov
mov
xchg
fcoms
dec
mov
mov
aaa
loope
dec
clc
push
mov
mov
aad
xchg
je
pop
and
pop
xor
sub
adc
sub
aaa
sbb
out
sbb
pop
gs
push
test
out
ja
ret
xorl
repnz
insb
cs
int3
lret
xchg
shl
add
aad
movsb
mov
pop
mov
jo
sti
jns
aas
xor
adc
mov
xchg
jne
jle
out
mov
push
pusha
inc
xchg
leave
les
xchg
pop
lcall
sahf
bound
fwait
xlat
and
jmp
ds
push
push
adc
lret
int3
cmpsb
xchg
das
pop
sbb
popf
add
mov
mov
jp
imul
lahf
adc
in
dec
inc
not
mov
fdivl
popf
inc
jnp
lcall
adc
aad
js
ljmp
xchg
aaa
mov
jo
out
xchg
push
testl
scas
into
push
dec
addr16
in
cmp
outsl
pusha
test
xchg
out
insb
dec
aaa
mov
xchg
and
jno
into
iret
cmp
leave
ds
sub
es
inc
imulb
push
jecxz
adc
pop
sub
movsl
stos
je
movsl
out
sti
fs
loope
stc
lret
xor
mov
jle
scas
xchg
push
xchg
dec
ret
and
orb
rorb
out
mov
and
divps
inc
jmp
sub
dec
mov
pop
loope
adc
out
cwtl
pop
or
cmpsl
fdivrl
into
sbb
and
jmp
cmc
xlat
in
or
xchg
rcll
sarb
sub
or
aaa
push
mov
rolb
sub
sahf
add
add
cmp
leave
outsl
dec
push
sub
aas
sub
ja
outsb
mov
or
mov
orb
sub
xchg
daa
enter
push
jle
flds
lods
adc
mov
xorl
push
pop
adc
lret
in
addr16
xor
push
shlb
into
gs
xchg
movsl
mov
and
les
xor
repz
push
pop
scas
popa
xor
adc
jl
shrb
xchg
mov
mov
icebp
js
clc
push
nop
and
add
pop
mov
mov
int3
push
cmp
rcrl
dec
cmpb
pop
loop
xchg
fcmove
mov
cmp
push
das
outsl
aaa
mov
push
cmp
pushf
push
dec
xchg
sbb
xchg
sub
adc
add
push
out
fldt
pop
jb
dec
fdivr
mov
rol
sub
int3
cmp
mov
xlat
xor
mov
dec
pop
jae
icebp
in
dec
inc
or
mov
bound
pop
orl
xchg
out
popf
cmpsb
xlat
roll
cmpl
xchg
into
sti
fiadds
loop
jnp
sub
jecxz
call
out
mov
rorl
je
xor
jp
push
testl
fcmove
stos
arpl
mov
sti
or
into
push
pop
fs
jno
sbb
mov
nop
jbe
xor
aam
pusha
inc
sti
test
jns
mov
sbb
sub
xchg
pop
in
push
out
mov
jl
mov
pop
push
mov
pop
jne
or
into
imul
add
mov
imulb
push
adc
pop
push
rolb
cmp
into
sbb
popl
addb
dec
lods
add
in
out
xor
negb
push
mov
jecxz
cltd
push
out
and
fptan
adc
mov
movsl
or
jno
jne
daa
inc
es
dec
ret
lock
mov
cld
xlat
call
jg
fidivrs
dec
xlat
sbb
ss
cwtl
adc
pop
inc
sub
inc
mov
add
mov
repz
es
pop
aaa
out
push
sub
push
xlat
inc
out
ret
mov
dec
cmp
out
adc
fnstcw
xchg
jbe
xchg
push
cwtl
pop
dec
rorl
lahf
mov
ret
hlt
pop
daa
shrl
inc
outsl
jmp
sbb
xchg
push
into
in
jnp
sub
stos
lods
lret
inc
or
jb
icebp
push
lds
add
pop
pop
bound
test
push
shlb
inc
rorb
scas
stos
mov
or
repnz
sbb
lods
popf
sbb
ss
mov
fcmovb
mov
cltd
or
insl
out
in
pop
mov
inc
xchg
shrl
aam
es
lret
sub
lahf
int
addr16
push
movsb
inc
lret
jecxz
inc
out
pusha
outsl
push
outsb
jns
mov
or
lods
mul
ficoml
sub
movb
arpl
test
mov
pop
jecxz
or
out
push
pop
add
push
mov
aad
dec
add
and
pop
lret
jg
add
not
cmp
movsl
fdivrs
rclb
adc
cwtl
repz
jae
stos
mov
mov
inc
in
adc
out
lds
sub
dec
lret
cltd
ja
dec
movsb
add
jne
roll
stos
xor
push
rolb
dec
xchg
mov
push
test
cltd
add
fisubrs
sub
or
and
push
outsl
push
shl
mov
and
and
arpl
jl
adcl
hlt
call
mov
stos
and
in
inc
push
popf
mov
cs
movsb
test
pop
add
inc
int
es
inc
fstpl
jno
or
add
mov
pop
mov
xchg
out
and
inc
jne
jnp
jns
and
out
hlt
data16
out
xor
jmp
fyl2xp1
lods
or
repnz
push
add
mov
or
aas
xor
ljmp
stos
push
push
mov
fisubrs
data16
in
decl
sub
rclb
in
lcall
test
cmpsb
fs
pop
outsb
sbb
dec
pushf
pop
xor
pop
xchg
mov
dec
addb
lret
sub
jecxz
pop
fnstsw
js
out
iret
jl
repnz
loope
out
add
jns
int3
loopne
jbe
sbb
scas
ljmp
into
jecxz
in
popf
iret
xchg
out
push
lret
inc
add
adc
and
loop
mov
sarb
int3
sub
xchg
test
and
sub
es
daa
lods
xor
in
adc
lcall
push
mov
loop
mov
xchg
pop
lret
xor
sti
dec
xchg
mov
outsb
arpl
dec
jmp
jns
cltd
testb
mov
cmpsl
rcl
mov
into
adc
pop
pop
test
rorl
nop
mov
mov
xor
pop
stos
sbb
fstpt
xchg
aam
mov
gs
sub
or
test
int3
jns
pop
add
movsl
je
cmp
push
icebp
xchg
adc
sub
push
adc
cwtl
lahf
rorl
jl
push
xchg
popa
or
inc
orl
mov
sti
cmpsl
sub
or
mov
push
outsb
nop
aas
mov
and
sbb
add
out
repz
push
out
lahf
mov
sarl
shlb
mov
int
roll
cld
mov
iret
sub
push
stc
insb
clc
push
xchg
mov
and
out
adc
sub
push
loopne
mov
mov
popf
inc
ja
add
cwtl
leave
and
inc
test
mov
ja
add
int3
sbb
test
cld
outsl
lret
cs
mov
js
cmpsl
sar
push
clc
imul
scas
jae
in
xchg
js
int3
add
jno
pop
mov
add
ljmp
lret
push
lahf
xor
es
sbb
test
pusha
or
dec
push
ret
shrb
insb
pop
insl
jg
sbb
mov
mov
mov
push
cmpsb
test
and
or
fidivl
xchg
movl
out
xchg
fwait
test
sahf
mov
add
jecxz
nop
mov
pop
or
in
pop
adc
inc
fidivrl
out
xor
jno
ljmp
jne,pt
out
add
pop
lea
pop
xchg
push
gs
inc
sbb
cmpsl
cmc
jne
xchg
and
ret
pushf
cmp
das
push
adc
adc
push
nop
dec
fisttpll
push
insb
jne
dec
into
es
in
dec
imul
repnz
fwait
popf
xlat
mov
add
ds
data16
rclb
fucomip
pop
shrl
nop
into
pop
repz
push
lahf
jmp
xchg
arpl
enter
into
and
sarb
dec
sbb
cmc
enter
mov
jl
call
push
and
adc
mov
test
adc
xchg
dec
sbb
mov
outsb
fwait
or
sbb
inc
cvtps2pd
int
adc
sub
jbe
push
or
repz
aam
push
jp
hlt
mov
andl
mov
pop
fdivl
sub
out
call
aas
das
xor
xchg
stos
adc
pop
mov
shlb
cmp
jbe
push
cs
out
ja
or
ret
sub
pop
jae
es
mov
enter
jle
push
fldl
int3
ja
in
lea
cmc
xor
or
inc
inc
popa
push
xchg
loope
scas
push
lret
xor
es
and
loope
stos
mov
and
int
test
jno
div
gs
pop
clc
cld
in
sub
mov
call
sub
mov
push
pop
add
push
xchg
mov
lret
daa
sub
add
pop
stc
rcl
int
outsl
fiaddl
imul
repz
lods
mov
and
ja
out
push
roll
enter
xchg
jnp
into
push
mov
imul
or
mov
xlat
push
push
mov
push
out
outsb
mov
repz
stc
pop
lcall
das
stos
rorb
subl
mov
sub
ds
cli
jnp
movsb
jns
mov
icebp
and
and
cmpsl
movsl
mov
inc
cltd
sbb
jg
or
xchg
xchg
repnz
or
icebp
decl
and
cltd
rcl
data16
repz
sar
sub
lret
sub
imul
push
sbb
xorl
dec
fsub
and
std
pushf
cmp
repz
sbb
inc
xor
lcall
mov
xchg
pop
test
pop
stos
adc
out
pop
scas
xor
mov
fsubl
stos
sub
in
and
enter
push
push
fwait
mov
movsl
rolb
push
insl
or
pop
and
jle
jnp
xor
mov
jb
inc
inc
mov
mov
clc
pop
daa
out
data16
pop
jne
push
std
mov
xchg
xchg
insl
filds
sbb
in
test
or
shll
enter
cmp
outsl
not
push
adc
icebp
push
sahf
divb
repnz
lret
pop
and
jae
xchg
mov
and
ret
add
or
std
sub
mov
shlb
xchg
mov
jg
lret
dec
fsubr
cmp
cmp
adc
or
xchg
fistpl
in
pop
push
pop
loop
adcb
outsb
stc
fnsave
xchg
stos
fidivs
mov
and
inc
lcall
jmp
subb
adc
pop
add
arpl
and
lds
dec
gs
mov
push
aad
bound
out
and
jnp
sbbl
je
outsl
mulb
test
sbb
movsb
xor
out
rcl
xchg
lret
pop
loop
out
jle
adc
pop
xor
cltd
lret
mov
xchg
add
outsl
xor
clc
movsb
dec
in
imul
outsl
dec
popf
push
pop
xor
inc
and
jecxz
loope
dec
imull
movsl
imul
mov
mov
cmp
pop
sub
subb
sub
sbb
xchg
inc
popf
fwait
jecxz
ret
or
push
std
das
arpl
es
scas
mov
in
mov
xchg
jb
int3
or
and
xor
es
sbb
jno
lock
sarl
dec
mov
jp
lods
rol
jg
and
or
sub
addb
pop
cmp
mov
inc
repz
or
pop
aaa
cmp
into
enter
lock
dec
jb
add
mov
mov
jae
int
mov
fsub
std
xchg
push
mov
out
out
push
sbb
mov
lods
jns
dec
cli
dec
movsl
mov
xchg
lret
jnp
add
push
imul
fbld
mov
adc
cld
jl
popf
dec
data16
jns
imul
mov
dec
int
cltd
stc
divl
hlt
shlb
aam
jnp
cmp
pop
jno
xlat
or
in
push
push
shlb
mov
fmul
fbstp
lea
sbb
mov
push
mov
dec
xchg
sub
xchg
sub
jno
pop
into
arpl
insb
cs
lcall
adc
add
int3
das
jae
add
movsl
jl
jmp
dec
loope
nop
in
xor
lcall
insl
out
lea
arpl
int3
mov
mov
pop
and
sbb
dec
mov
dec
mov
sahf
pop
cmp
and
push
leave
mov
xor
inc
hlt
xor
mov
fimull
push
imul
ljmp
jbe
cmc
xchg
inc
jmp
lahf
sub
clc
cltd
inc
cmp
inc
mov
test
pop
xlat
jno
inc
jae,pn
out
xchg
shll
into
fsubr
data16
add
cwtl
mov
jmp
adc
inc
shll
addr16
loope
iret
incl
iret
lret
jl
movsb
mov
out
dec
adc
push
sti
clc
ja
lret
ss
mov
add
cmp
adc
dec
jne
pushf
cmpsb
or
and
sbb
add
dec
lods
mov
mov
aad
xchg
pop
xchg
imul
mov
cmp
pop
in
lret
sub
jp
jle
xchg
mov
ss
mov
jns
mov
cmp
mov
out
cli
lret
jmp
stos
iret
or
data16
sarl
test
insb
movsb
inc
jge
sub
and
push
add
es
sub
in
mov
loop
cli
in
mov
dec
adc
xchg
fisttpll
or
cwtl
or
into
out
push
mov
jl
mov
mov
add
adc
cltd
adc
ficompl
jne
addb
ret
or
dec
mov
and
dec
or
mov
rcll
in
sbb
add
inc
pop
jge
push
pop
idivb
ljmp
adc
jmp
test
jo
sbb
inc
push
stos
clc
dec
insl
fnsave
pusha
icebp
decb
pop
push
sub
xchg
imul
ds
aaa
out
mov
mov
out
mov
and
pop
dec
push
jbe
in
mov
jmp
sbb
movswl
mov
jbe
xor
adc
mov
popf
and
push
and
pop
push
loopne
jo
dec
bound
test
outsl
add
mov
mov
inc
push
and
jmp
jno
lret
aaa
mov
pop
in
clc
lahf
push
jge
xchg
dec
fcomps
dec
mov
or
mov
xlat
in
ljmp
adc
rclb
fwait
pop
jne
mov
cwtl
mov
in
mov
sub
aaa
push
xchg
ror
fs
ss
test
loopne
out
push
push
xlat
pop
add
loope
movl
lret
xor
adc
test
mov
movsl
and
aam
jle
or
rcl
cmc
fcomp
cwtl
push
les
imul
sbb
mov
pushf
pop
jne
sti
lcall
sub
mov
int3
pop
push
sub
inc
dec
push
out
jle
addr16
neg
or
mov
sub
and
loopne
ss
cmpsb
pusha
jae
jge
cmp
jnp
mov
int3
and
imul
push
mov
cli
inc
mov
mov
sti
push
cwtl
or
push
outsb
mov
mov
cmpsb
xchg
gs
adc
lret
leave
ljmp
jl
pop
test
inc
test
and
movsb
mov
jns
incl
shrl
jge
loopne
push
push
xor
adc
sarb
jp
xchg
int3
sbb
jl
mov
roll
es
or
xchg
sub
push
add
into
xlat
in
lahf
rcll
out
mov
mov
je
leave
mov
add
and
out
xlat
test
stos
sbb
int3
insb
adc
aaa
cmp
add
cmpsb
jne
rclb
pop
rcll
sbb
pusha
inc
fidivrl
xchg
mov
cs
and
repz
or
leave
mov
in
mov
aam
lods
add
cltd
mov
lret
mov
cmpsl
out
loope
mov
adc
mov
sub
enter
or
or
outsb
push
lods
outsl
jl
stos
adc
sub
jb
das
cwtl
mov
jae
shr
cmp
sbb
fisubl
dec
sahf
push
mov
insb
in
or
inc
push
leave
stos
ja
stos
dec
pop
loop
mov
xchg
es
rorb
jne
fcom
outsb
cmp
out
jnp
mov
lret
mov
daa
and
mov
leave
push
xor
es
adc
or
out
mov
pop
xchg
idivl
movsb
lret
pop
mov
jbe
popf
mov
fcmovu
pop
dec
sbb
or
pop
fs
lret
adc
or
imul
mov
xchg
jmp
pop
cmpxchg
popf
adc
xchg
shl
mov
and
in
push
stc
push
or
push
lods
mov
sbb
negl
xchg
cmpb
sbb
xor
inc
lea
dec
cmp
shll
in
xchg
lret
popf
cmp
push
xchg
imul
push
pop
jno
inc
call
mov
das
nop
sbb
xor
push
addl
in
and
mov
and
push
mov
sbb
insb
mov
pop
xor
mov
out
lock
sbb
adc
out
sbb
bound
paddusw
fwait
xchg
test
and
cmp
rcr
out
xlat
andb
outsb
pop
pop
aas
rorb
ret
and
orb
inc
mov
mov
addr16
xor
jecxz
insl
out
cmp
pushf
mov
imul
push
inc
out
pusha
cmp
rcll
lds
pop
ss
sub
cld
and
lods
fisubrs
faddl
and
mov
imul
stc
push
cmc
pop
xor
ja
imul
icebp
inc
xor
std
mov
insl
pop
or
outsl
popf
dec
mov
adc
jbe
out
stos
test
ss
dec
or
stc
hlt
add
fistl
or
push
testl
pop
cmpsb
rcrb
xor
icebp
jl
lea
pushf
push
inc
mov
push
jnp
cmpl
std
mov
cmp
pushf
fsub
in
push
add
into
or
xchg
dec
fsubrp
stos
imul
gs
mov
lods
insb
repz
out
cmp
push
loopne
pop
insl
push
sbb
add
dec
mov
mov
mov
mov
adc
int3
hlt
mov
cmpsb
out
orb
imul
cmpsl
lods
inc
sahf
lret
popa
sti
pop
loopne
or
fsubs
mov
stos
out
and
xchg
out
push
mov
in
adc
sub
inc
inc
push
stos
mov
rcrb
pop
jne
inc
psrad
insb
push
arpl
leave
fcomps
out
sahf
call
mov
cmp
out
out
fisubs
push
ficompl
subl
lcall
push
sub
push
sbb
dec
enter
pop
push
pop
push
cmp
mov
pop
xchg
xchg
lret
push
clc
add
enter
jo
inc
pop
rcll
add
pop
jp
out
aaa
outsl
test
sbb
lods
push
dec
mov
stos
outsb
cmp
sahf
adc
out
add
push
pop
push
nop
in
lahf
inc
pop
aaa
std
rcll
shll
pushf
data16
mov
call
inc
cmc
leave
sub
jmp
pop
loopne
push
out
dec
ja
test
inc
jo
and
jb
mov
ljmp
sti
inc
fwait
icebp
sbb
data16
pop
adc
jb
test
push
cmc
daa
popa
push
push
mov
clc
and
iret
adc
das
stos
js
sub
sub
sbb
cli
out
jmp
loop
arpl
iret
outsb
xchg
sar
ret
pop
dec
cmp
cli
push
and
mov
dec
mov
jp
push
ret
jns
arpl
fldln2
test
cltd
mov
int3
gs
rcll
xchg
pusha
adc
jg
jbe
ja
push
fadds
adc
sbb
jbe
lock
icebp
sbbb
mov
adc
fs
xlat
cltd
pushf
jge
pusha
jns
inc
rorl
lods
test
adc
js
or
cmpsl
pop
addr16
movb
dec
mov
nop
xchg
sahf
in
cmpsb
add
aam
jmp
lock
mov
popa
adc
cmp
jl
cmp
pop
test
mov
movsl
fidivrl
mov
lea
xchg
ljmpw
xor
or
lods
stc
or
stos
xor
call
xlat
adc
test
movsl
inc
cmp
jle
push
mov
inc
push
stos
movsb
lahf
xor
pop
sar
imul
int
jecxz
mov
or
jecxz
lahf
xchg
enter
mov
popf
dec
fcmovnu
stos
inc
out
fildll
xchg
and
sbb
leave
push
mov
adc
insl
repz
xor
sbb
rcrb
loop
arpl
mov
pop
js
hlt
fst
mov
stc
movb
mov
mov
test
repz
or
push
push
shll
push
mov
sub
test
jo
lret
adc
cmc
xchg
xor
lret
cmpsl
and
push
jge
jle
inc
jnp
movsb
pop
stos
push
inc
jp
sti
fisubl
mov
or
dec
xchg
cs
je
or
mov
pushw
adc
cmp
ret
stos
push
jne
inc
pop
mov
push
jne
pop
popf
lret
loopne
ljmp
arpl
jb
push
xor
repnz
stos
lret
push
shll
mov
add
iret
out
push
push
and
mov
sub
dec
mov
adc
sbb
xor
repz
lcall
xchg
jge
movsl
inc
jbe
clc
ljmp
pop
out
popa
xchg
orl
pop
and
mov
aas
push
into
out
lods
aam
sbb
jmp
inc
stos
sub
adc
xchg
inc
sub
mov
imul
dec
cli
mov
arpl
mov
mov
jle
mov
xor
jnp
jno
mov
clc
or
adc
arpl
mov
adc
int
push
or
or
fistpl
or
jp
and
jmp
mov
sahf
shlb
outsb
jb
ss
mov
sub
ljmp
call
adc
je
xor
repz
mov
push
inc
sub
mov
fmull
div
add
inc
in
cmpsl
repz
inc
stos
and
mov
cmc
lods
jns
repnz
fadds
test
ljmp
pop
scas
mov
mov
bound
int3
pushl
mov
subl
mov
es
inc
icebp
into
fldenv
push
test
hlt
es
mov
std
inc
inc
lahf
xchg
pop
outsl
mov
jbe
loopne
sar
ret
dec
pop
mov
jmp
push
xchg
stc
daa
mov
pop
add
fsubs
adc
pop
sub
push
fcomip
ret
xor
pushf
jbe
rolb
ds
loop
mov
xchg
jne
mull
lea
mov
xchg
dec
mov
xchg
data16
insb
andb
psubw
js
push
out
int3
jbe
inc
mov
mov
xchg
cwtl
in
xchg
inc
imul
mov
pop
loopne
fs
in
push
or
add
rcrl
sahf
mov
inc
jae
movsb
xchg
lret
xlat
jmp
out
into
push
lret
pushf
xor
out
jl
sbb
ret
sbb
into
mov
popf
push
xchg
ficompl
shrl
xor
repz
and
shl
fiaddl
cmp
cmpb
test
sbb
nop
mov
sub
addr16
jb
movsl
dec
rcll
xlat
dec
cmp
icebp
lret
sahf
nop
lock
je
inc
push
out
xor
push
add
push
mov
jo
lret
test
mov
sar
dec
dec
lds
and
sub
pop
divl
push
pop
add
adc
sub
sbb
mov
outsl
inc
sti
xchg
std
divl
lcall
xor
adc
ret
into
jp
sar
jbe
push
andl
inc
dec
pop
lods
sbb
mov
mov
xor
add
adc
sub
popa
sbb
hlt
shrl
adc
leave
and
iret
in
sbb
xor
add
clc
shrl
loop
cmpsl
mov
and
xlat
adc
add
dec
or
test
push
mov
subb
xlat
movsl
repz
push
lret
and
bound
sbb
and
in
mov
fnstenv
inc
mov
or
mov
xchg
leave
lcall
xor
and
cmpsl
sub
lret
ljmp
popf
pop
push
icebp
daa
insl
push
mov
pop
inc
scas
enter
and
dec
sub
test
xchg
shlb
xor
xor
push
dec
fcompl
scas
popa
mov
lret
lahf
sub
or
sub
ficoms
test
cli
lea
popf
orb
mov
pusha
ljmp
fsts
add
pop
shlb
mov
dec
xchg
pop
or
lock
jne
sti
pop
mov
ret
out
in
or
dec
sub
and
jmp
or
leave
add
outsb
je
xor
jns
mov
out
xchg
and
dec
sub
push
test
push
xchg
xchg
addr16
mov
xchg
adc
out
sbb
cli
dec
mov
dec
xlat
mov
or
clc
pop
icebp
pop
mov
scas
push
push
stc
mov
jb
in
aad
push
sub
jo
mov
add
andb
aaa
lcall
xor
shr
in
pop
xor
xchg
mov
push
cmpsb
popl
nop
jmp
loop
adc
dec
shlb
call
leave
mov
cmp
out
sub
pop
pusha
in
xlat
mov
mov
cli
and
add
inc
xor
add
fidivs
push
cmp
notl
and
add
ljmp
lods
leave
and
xchg
and
xchg
or
inc
sbb
add
int
cmp
leave
mov
loopne
push
ja
xchg
movsb
xchg
js
into
call
pushf
xchg
lods
bswap
mov
jle
jmp
outsl
sbb
into
cld
cli
mov
sahf
pop
loope
mov
pop
and
insb
mov
cmp
inc
mov
iret
loop
sbb
scas
mov
add
aas
outsl
bnd
gs
or
out
shll
fwait
dec
cmpl
push
popf
das
push
es
push
pop
dec
jmp
pop
push
aas
and
push
inc
out
jb
out
mov
or
xchg
call
or
iret
nop
jbe
mov
adcb
adc
popa
stc
bound
sub
int
xchg
mov
dec
mov
and
enter
fptan
rcl
rcr
and
popa
push
and
js
ret
add
inc
hlt
ss
add
mov
into
ret
sbbb
sub
pop
outsl
xchg
push
iret
rcl
and
insb
cmp
lock
imul
sub
cli
pop
and
pop
jmp
out
loop
cmp
cmp
sbb
cmc
jo
dec
and
xchg
cmp
push
xchg
inc
pop
clc
filds
add
push
pop
mov
outsl
or
stos
in
or
ret
rcl
pop
xchg
push
xchg
mov
jle
add
jno
aas
add
xor
mov
jmp
cli
mov
fisttpll
xlat
push
ja
pop
pushf
jne
mov
mov
iret
sub
sbb
imul
roll
in
jge
nop
std
add
out
sub
jns
out
sub
aaa
in
enter
iret
xchg
out
in
out
mov
cltd
cmp
fs
sub
ret
fnsave
movsl
sbb
mov
pusha
adc
aaa
pushw
add
add
scas
shrb
push
dec
mov
ja
mov
out
pop
lcall
jge
cmc
std
movsb
iret
iret
insb
stos
sub
pop
das
cmpsl
fcmove
push
lret
push
mov
filds
add
lcall
or
inc
push
inc
loop
ss
sti
push
iret
mov
jb
push
out
in
fdivs
xchg
or
ret
cmp
xchg
out
push
lret
xchg
mov
andl
int
mov
mov
int
jne
repz
mov
push
scas
cmc
jp
les
jae
mov
and
jg
dec
dec
mov
arpl
in
aad
jns
lock
hlt
cmovb
inc
add
xor
push
ja
aaa
frstor
adcb
sub
call
push
jmp
loope
aam
pop
mov
or
outsb
dec
xchg
std
jnp
pusha
push
out
add
cmpsl
adc
mov
loop
lret
and
ret
arpl
jmp
push
jg
pop
pop
mov
jno
jnp
mov
stc
dec
cmpsb
imul
aaa
mov
cmp
stos
cmpsl
repz
arpl
mov
mov
dec
pop
add
jmp
mov
std
sbb
and
add
xor
mov
mov
or
insl
adc
mov
das
push
cltd
fidivl
xor
xchg
ljmp
out
xchg
out
mov
push
mov
or
mov
dec
inc
movsl
ds
adc
and
jno
aam
jbe
sbb
insl
loop
sub
and
jae
iret
and
out
lock
cmp
clc
dec
xchg
cmp
xor
cmovbe
mov
rcrl
stos
lret
movsl
ss
sbb
xlat
stos
pop
lds
mov
mov
imul
loop
inc
es
in
and
movsl
scas
jmp
inc
cs
aas
mov
mov
call
dec
pop
xor
jae
mov
mov
jg
sub
test
f2xm1
dec
stos
xchg
mov
ds
mov
sub
xchg
sbb
clc
mov
and
sbbb
icebp
xor
jns
test
shr
ficoms
div
sub
mov
fildl
in
or
bnd
cli
sub
out
js
fstps
mov
out
imul
fisttpl
addr16
in
loope
addr16
sub
push
mov
iret
mov
or
test
ds
pop
repnz
ss
push
or
rcrl
jp
cli
fisubs
pop
je
and
jmp
stos
mull
cmp
repnz
loop
pop
sbb
pop
in
inc
pop
arpl
shll
lret
jg
push
outsb
dec
into
dec
sub
add
aam
add
bound
xor
sub
dec
sahf
dec
push
mov
add
pop
les
and
xchg
mov
leave
inc
movhlps
test
lods
ja
data16
push
xor
jg
shrb
add
aaa
add
dec
inc
out
mov
push
inc
xor
mov
rorl
or
inc
rcll
clc
bound
call
pop
mov
fs
int
leave
mov
or
sti
inc
or
stc
sbb
icebp
pusha
xor
mov
jbe
sub
repnz
pop
nop
mov
sti
int3
out
or
call
and
sub
aaa
sbb
paddq
dec
mov
pop
into
jno
sar
iret
push
jle
pop
mov
arpl
mov
lods
add
das
pop
mov
fwait
in
xchg
test
push
les
mov
and
addr16
ss
stc
sub
or
ljmp
into
push
repz
in
jo
scas
iret
das
cmp
mov
ret
lock
mov
adc
sbb
mov
jle
cmp
jmp
pop
pop
mov
fcmovnu
popa
cltd
cld
ficompl
dec
lret
popf
push
lcall
jmp
push
jbe
je
or
pop
mov
cli
jg
repnz
push
int3
and
lret
out
mov
adc
cmc
iret
sbb
insb
xor
sbb
fstp
aas
lods
dec
jecxz
test
mov
adc
iret
loopne
arpl
jbe
stos
push
pop
inc
test
dec
fisubl
pop
rol
lret
mov
arpl
dec
cmpsb
adc
sbb
pusha
ja
nop
mov
sbb
loop
mov
sbb
mov
push
shl
pop
mov
pop
rclb
test
jo
xchg
popf
inc
inc
dec
lret
adc
or
adc
xchg
dec
aaa
or
pop
inc
push
into
test
push
add
dec
out
mov
jae
mov
mov
sbb
imul
cmpsl
xchg
mov
pop
stc
aas
dec
jp
sub
pop
fnstcw
loope
jo
xor
sub
xchg
rolb
mov
mov
mov
in
lds
push
mov
movsb
mov
inc
jecxz
stos
inc
add
imul
sar
iret
jnp
sahf
jecxz
out
mov
icebp
dec
xchg
push
aaa
dec
xor
xor
out
push
or
mov
imul
add
loopne
sbb
mov
fs
cli
adc
push
jl
je
jecxz
fmuls
lahf
mov
push
mov
sub
movsl
stc
cmp
mov
or
je
mov
cwtl
mov
cld
and
inc
and
push
sahf
mov
add
sub
iret
push
cmp
cmc
clc
subb
mov
sbb
cltd
scas
fmul
stos
sbb
mov
idiv
and
leave
aam
mov
or
ljmp
int
hlt
mov
xchg
jae
icebp
movb
jl
dec
aad
jp
push
cmc
outsl
xor
out
in
inc
lret
test
mov
fsubr
inc
loopne
js
push
or
push
push
dec
and
movb
stc
lret
adc
cs
stos
das
aas
mov
testb
aaa
jbe
or
xor
cld
jle
push
jge
mov
sub
mov
cmp
icebp
scas
mov
aas
sub
sbb
loop
sub
sbb
or
push
xchg
iret
mov
int
inc
cld
mov
repz
add
lock
ljmp
pop
or
sbb
add
lret
jmp
cmp
ss
rcl
adc
push
jle
inc
int3
push
cmp
xor
data16
sub
jne
jbe
cmp
mov
fcmovbe
push
pop
mov
dec
les
inc
xchg
out
jle,pt
jbe
push
jne
into
or
out
add
push
sarb
and
dec
jge
adc
out
enter
fxch
or
cmc
sub
mull
lea
cmpsb
jns
xchg
int3
sbb
out
inc
insb
push
repnz
aam
jne
repz
dec
loop
xor
push
pop
push
push
pop
sti
adc
inc
mov
pushf
push
es
in
mov
push
loop
outsb
cli
mov
jmp
dec
sub
repz
lret
jmp
dec
call
jbe
jbe
ret
add
lret
dec
adc
add
pop
sbb
dec
jo
rcrb
jae
cmpsl
lret
cmc
loope
sbb
lret
loopne
cmpsb
aam
push
bswap
inc
or
in
xchg
fisttpll
mov
aaa
aaa
mov
cltd
push
mov
pop
sbb
out
js
test
pop
fldt
mov
mov
jecxz
dec
xor
xor
movsl
cmp
pop
jne
push
rcrb
orl
xor
fcmovb
inc
data16
ret
pop
sti
cwtl
mov
adc
nop
xchg
jbe
lret
sbb
lcall
fisttps
dec
xchg
test
lods
fcompl
jne
dec
je
cmp
mov
adc
adc
jmp
jl
mov
iret
jmp
pop
jl
test
add
lahf
leave
xlat
push
jg
jns
push
les
loopne
adc
subb
add
enter
mov
xor
sub
fs
outsl
sub
loope
dec
test
cmp
lret
jle
fcmovnbe
into
push
sub
inc
popf
pop
sbb
sbb
adc
rclb
sbb
or
mov
add
into
xchg
stos
jp
pop
mov
mov
push
or
imul
fs
sub
fimuls
jno
scas
mov
mov
popf
shl
std
dec
ja
dec
les
cmp
test
idiv
push
push
lea
push
fs
nop
mov
outsb
push
jnp
dec
in
std
rcr
aas
imul
scas
pop
pop
lret
movsl
xor
inc
mov
sti
addr16
movsb
adc
add
pushf
xchg
mov
das
sub
std
loope
jae
push
inc
lcall
fldl2e
aas
nop
fildl
popl
or
or
cmc
ficomps
add
mov
mov
jno
pop
aad
sbbb
pop
jne
mov
data16
popa
nop
sub
adc
xchg
adc
inc
outsb
movb
pop
cs
test
and
mov
icebp
mov
cltd
sub
test
enter
clc
shl
stc
add
dec
inc
push
dec
sti
mov
jmp
fsubl
mov
rcrl
adc
add
cmp
test
addr16
or
inc
jge
pop
pushf
in
addb
inc
bound
out
arpl
sarl
mov
xor
fstps
pop
jb
sub
pop
lahf
dec
out
inc
push
int
push
ljmp
insb
xlat
mov
and
sbb
jo
xchg
int
add
xchg
sub
gs
dec
std
orb
cwtl
ds
lods
mov
jle
decb
mov
sbb
sbb
lret
inc
lds
mov
inc
pop
mov
jb
popl
test
add
xchg
xchg
sti
into
rorl
mov
xbegin
stos
fcom
iret
pop
stc
sub
popl
shlb
dec
imul
in
out
jle
repz
mov
fs
jae
int3
push
inc
stos
and
insb
push
adc
mov
push
out
ret
popa
shll
mov
xor
int
aam
test
lcall
sti
add
mov
lret
and
xor
mov
jbe
jbe
or
sahf
rclb
test
mov
lret
mov
repnz
pop
mov
fdivrs
dec
shlb
xchg
insb
dec
pop
adc
inc
sbb
pop
mov
cmc
into
test
lods
sbb
inc
inc
iret
in
out
mov
rorb
stos
adc
and
dec
jbe
adc
lret
push
icebp
sub
rcrl
loope
lock
mov
mov
and
jle
aaa
and
cmp
negb
jae
pop
jp
push
test
cs
dec
fmul
outsl
in
jae
push
pop
push
aam
scas
or
mov
frstor
pushf
fsubrp
jno
ficoml
stos
cltd
icebp
fsts
jae
dec
xchg
dec
sarl
mov
cs
int3
cwtl
scas
std
xchg
push
loop
out
call
movsl
call
out
mov
adc
sub
aad
shl
and
mov
sahf
jg
inc
jmp
clc
adc
js
popf
pusha
shlb
jne
mov
sti
inc
or
dec
cli
test
sub
ja
fcmovne
aam
sub
rcr
xor
lods
mov
cmp
rorb
int3
stos
test
push
adc
adc
pusha
loop
lea
sahf
movsl
or
dec
jmp
lret
mov
push
xchg
mov
lahf
push
sub
and
pop
fisubs
cs
fldl
and
push
std
sub
push
int
xor
mov
xor
sbb
mov
daa
aaa
scas
lds
mul
mov
xor
xor
ljmp
outsb
jo
xchg
fwait
jbe
call
fstpl
icebp
loope
lock
dec
mov
cmp
inc
dec
ljmp
sub
xlat
popf
mov
dec
and
jmp
and
ljmp
xchg
lods
sbb
jo
leave
inc
fwait
and
scas
mov
dec
inc
fbld
dec
movsl
sbb
push
lea
sub
and
orb
into
pop
mov
aam
cwtl
xchg
ds
enter
dec
das
cmp
sbb
rcll
jns
lods
jb
xchg
lret
in
sub
mov
jmp
add
pop
mov
in
cmp
mov
es
and
dec
mov
xchg
fcomps
jne
das
dec
into
mov
jl
inc
cmp
or
loopne
and
xchg
repnz
icebp
adc
fimull
shrl
inc
bound
testb
mov
or
fwait
dec
fiadds
adc
popa
test
mov
xchg
push
dec
push
jge
scas
or
dec
cld
mov
cwtl
mov
pop
push
inc
mov
jp
or
mov
mov
popf
cli
enter
pop
cmpsw
xor
into
xor
sarb
popf
sbb
xchg
cmc
inc
pushf
aam
push
test
cmpsb
xchg
and
or
fldl
pop
add
mov
iret
mov
mov
mov
ficoms
data16
loopne
pop
mov
ja
shrl
fs
test
decb
fsubrp
push
loopne
stos
aaa
cmp
xor
stos
int3
xchg
jne
sbb
cmpsb
mul
ficompl
out
mov
jle
xor
insl
repnz
mov
ficompl
ja
jns
push
imul
jl
dec
mov
insb
or
cmc
jbe
adc
cld
shl
jl
mov
mov
flds
lods
push
xchg
iret
popa
inc
cs
jo
out
lret
jns
inc
jne
or
push
cmpsl
mov
dec
loopne
popa
push
aaa
xorb
jb
mov
sbb
hlt
add
ljmp
mov
lods
lea
lcall
out
mov
xchg
in
cmpsl
mov
dec
xchg
rcl
mov
stc
xor
push
movsl
push
mov
pusha
lret
xor
js,pt
mov
faddl
loop
lahf
dec
jae
xorb
fisubrs
mov
imul
pop
and
rcrb
inc
sbb
mov
push
jmp
pop
call
enter
adc
fs
cs
cmpsl
mov
popa
aad
xchg
xchg
testl
sbbb
sbb
ss
cli
dec
jae
ret
mov
mov
iret
je
sbb
cli
cmpsb
into
inc
ljmp
into
icebp
daa
jne
pushf
jl
cmpsb
mov
jg
sub
mov
and
xchg
and
insb
fdivs
shlb
adc
outsl
aas
xchg
dec
inc
cmpsl
int
into
mov
xor
dec
mov
sub
push
pop
sarb
xlat
fadd
frstor
dec
jne
push
or
shrb
adc
scas
xlat
mov
aaa
mov
inc
dec
sarb
jg
push
lret
out
shll
push
das
push
adc
dec
fs
popa
arpl
xchg
push
push
push
rcll
sahf
fisubs
and
aaa
insb
mov
rclb
push
sub
and
mov
dec
mov
jge
lret
mov
orl
mov
xlat
call
test
sbb
sti
fincstp
movb
adc
out
lret
paddusb
push
enter
mov
pop
dec
pushf
hlt
call
daa
or
mov
pop
xchg
lret
je
popf
js
sub
test
mov
dec
jecxz
xchg
dec
fstp
pop
shlb
stos
out
fwait
xchg
mov
jns
cmc
lret
push
or
sbb
and
stc
push
hlt
cmc
andb
inc
dec
or
std
pop
in
jno
cmp
inc
adc
jg
xor
shrb
cmpsl
xchg
inc
shrb
aad
dec
xchg
xor
out
dec
dec
outsl
jl
js
mov
or
and
cld
lods
xchg
dec
shr
pop
push
jl
data16
push
dec
into
movsb
add
aad
pop
and
jbe
jp
pop
leave
xor
mov
push
push
mov
and
xchg
mull
mov
sbb
push
mov
and
pusha
repz
cmp
dec
or
fistpll
or
cs
pop
fwait
pusha
xor
test
mov
mov
adc
xchg
in
adc
aas
push
out
cmp
jns
insl
iret
lcall
jp
add
and
mov
adc
push
pusha
xchg
sub
pop
cmp
and
mov
lds
jne
fists
jns
fcom
scas
fstpl
jae
test
pop
test
ret
cli
xchg
cmpsb
inc
xlat
push
mov
pop
insb
ds
push
icebp
xchg
cmp
push
push
test
mov
cmc
jge
or
call
mov
pushf
imulb
push
xor
dec
out
add
and
fwait
dec
iret
mov
xchg
mov
js
inc
or
es
ljmp
jmp
incb
xchg
xchg
or
mov
adc
pop
xchg
cs
lds
jp
push
iret
jno
int
inc
in
jbe
add
jecxz
movsb
in
jp
mov
cmp
lahf
adc
lret
dec
sub
sub
cwtl
mov
insb
jmp
fwait
dec
fildl
out
jbe
and
cmp
mov
mov
ljmp
int3
outsl
adc
xor
les
fisubrs
stc
int
sahf
inc
xchg
push
jns
repz
pop
jmp
negb
add
mov
int
push
mov
test
into
cwtl
adc
cmp
daa
mov
pop
repnz
push
cmpsl
mov
cvtps2pd
dec
adc
out
push
das
lret
lcall
fstpl
imul
inc
ss
dec
pop
jae
repz
filds
loope
jmp
or
cmp
jl
xor
fnstsw
sub
sbb
mov
iret
and
pop
repnz
jmp
movsb
loope
test
push
jp
pop
ljmp
clc
and
sbb
imul
std
aam
mov
dec
dec
jo
mov
pop
mov
leave
pop
sbb
add
out
add
rclb
sbb
pop
xchg
insb
mov
lea
dec
pop
jbe
pop
fmul
js
lret
sub
pop
loopew
adc
mov
orl
push
mov
cmpsl
xlat
cs
or
lds
enter
mov
push
cwtl
sbb
cmp
cmp
cmp
adc
arpl
lret
test
les
xchg
inc
and
fnstcw
jle
push
mov
pop
mov
dec
popa
lret
sbb
mov
push
icebp
push
outsl
orl
call
or
inc
jb
dec
lcall
sub
sub
cmp
pop
and
aas
test
dec
jle
mov
xchg
xor
jge
int
dec
repnz
mov
dec
pop
or
mov
test
adc
cmp
adc
mov
mov
mov
int
sub
inc
cmpsl
into
mov
sbb
mov
mov
cmp
ja
mov
popf
xor
jne
jbe
push
lods
push
shlb
jne
loopne
out
out
mov
int
xchg
ds
ret
pop
xor
xlat
sbb
call
roll
aad
clc
imul
or
push
mov
xchg
xor
sub
xchg
hlt
adc
in
jl
mov
add
mov
into
mov
repnz
push
mov
mov
sarb
aam
inc
mov
mov
fisubrl
rcl
or
loope
popf
xchg
sub
dec
out
xchg
pop
sti
imul
stos
adc
outsl
push
loope,pt
aam
addw
or
and
cmp
repnz
lcall
sub
cmp
sbb
and
cmpsb
std
pop
mov
ds
out
lcall
sub
std
dec
sub
or
aam
nop
sti
xchg
push
pop
push
scas
pop
rcrl
mov
fsts
jle
js
sbb
adc
adc
jbe
popf
cmp
cli
cmc
or
xor
pushf
ljmp
es
lods
lret
or
sub
jecxz
lahf
jg
fldpi
inc
push
or
fs
iret
pop
es
in
movsb
fmull
lahf
xchg
js
popf
push
cltd
dec
inc
and
jg
shrb
push
add
xchg
cmc
iret
xor
stos
sub
lret
push
in
sub
jmp
cmpsl
cmp
aam
mov
je
into
jp
shrb
jbe
adc
xchg
in
cmc
xchg
inc
in
mov
in
adc
aas
jmp
adc
in
into
lds
sbb
dec
inc
pop
pop
das
addb
int
mov
imul
dec
insb
fistps
sub
lret
inc
push
mov
xchg
add
sub
int3
scas
jle
mov
stos
clc
dec
xchg
dec
cs
xchg
iret
int
lret
sbb
rolb
cwtl
add
pop
orb
arpl
mov
pop
mov
aam
xor
add
das
imul
stc
and
stc
ficomps
sub
or
test
fnsave
cmpsb
jno
lds
sbb
mov
push
jo
insb
xchg
aaa
ret
out
movsb
scas
and
stos
xchg
push
mov
xor
data16
or
jae
bound
lods
dec
movl
mov
mov
test
mov
out
aas
sar
jecxz
movsl
jge
jo
cld
outsb
int3
sbb
and
pusha
dec
lret
in
jp
addr16
jno
xchg
test
mov
out
aas
pop
mov
cmp
imul
or
jecxz
push
punpcklwd
push
push
jbe
xchg
sti
pop
shr
push
push
mov
jbe
popf
pushf
lds
mov
insb
lea
and
ljmp
rcrb
lcall
into
testl
mov
js
lds
or
popf
imul
shrb
mov
loope
sub
mov
lds
add
cmp
ja
jae
xor
add
inc
pop
fiaddl
into
pop
adc
es
in
jnp
sub
mov
push
cmpsb
dec
mov
out
cmp
mov
test
cwtl
jle
stc
push
sbb
push
push
push
dec
inc
lea
sub
cli
shrl
dec
stos
sahf
leave
int
mov
sbb
outsb
cmp
loope
dec
xor
pop
icebp
jno
clc
push
pop
orl
in
shrl
xlat
or
pop
dec
mov
int3
aad
sub
dec
jbe
and
lretw
mov
aaa
sub
sbb
mov
push
jae
add
xlat
ret
ret
push
xor
lret
push
jmp
dec
outsb
lahf
fcmovu
not
in
mov
xchg
sti
push
sub
or
sbb
push
sub
and
cmpsl
and
call
xor
or
dec
sub
xor
inc
mov
addr16
loopne
insb
shll
dec
ja
and
cs
sub
lcall
test
fdivl
mov
jns
sub
int3
mov
and
and
xor
mov
dec
insb
sbb
nop
arpl
mov
and
mov
rcr
jae
aas
cmpsl
jmp
mov
not
push
out
leave
jbe
int3
pushf
aam
mov
mov
lahf
dec
loopne
movsl
data16
pop
sbb
sub
scas
xchg
pop
je
dec
xor
push
pushf
dec
rorl
adc
and
push
inc
xchg
popa
rol
cmp
out
fs
imul
stc
in
out
rcrl
ret
aaa
scas
shrb
std
push
xchg
aas
pop
jmp
outsb
pop
repz
xchg
mov
mov
lret
dec
lods
pop
push
push
std
leave
addb
pop
push
add
lret
mov
rcll
negb
mov
xor
icebp
fisttpll
fistpl
sub
or
sahf
mov
testl
pop
inc
add
mov
fiadds
mulb
nop
mov
ret
insb
xor
js
hlt
cmp
sbb
ljmp
fs
dec
xchg
inc
out
adc
jmp
sbb
mov
add
or
es
pop
xor
push
fsubl
jg
mov
jae
sarl
mov
in
xor
fiadds
sahf
push
push
jecxz
in
insl
dec
rcl
imul
mov
out
mov
cltd
out
push
outsb
test
iret
jge
or
adcb
js
stc
push
inc
stos
jbe
xchg
mov
add
lret
mov
iret
out
jmp
push
fdivrp
dec
sub
adc
movsb
fmul
lock
xchg
jno
inc
jmp
mov
or
into
jecxz
push
xchg
pop
cmpsl
mov
inc
mov
cwtl
sbb
into
imul
out
inc
cmpsb
jecxz
and
pop
mov
or
inc
icebp
xor
cmp
dec
cmp
ds
insb
out
in
and
out
push
lods
lea
pop
mov
sub
jecxz
outsb
pusha
mov
dec
ret
lods
rolb
pushf
and
dec
push
leave
xlat
lahf
lods
inc
xchg
sbb
xchg
jae
adc
jns
dec
xchg
das
xor
mov
popa
ds
jp
sbb
out
iret
leave
push
out
adc
xchg
pop
lret
dec
pop
mov
xor
jmp
cmp
std
mov
cs
sbb
xchg
cmp
jp
inc
out
and
add
gs
mov
out
mov
inc
mov
push
mov
sub
je
clc
enter
add
cmp
incb
jnp
mov
xlat
xchg
mov
cltd
cmpsb
iret
add
jmp
rorl
and
movsb
insb
cli
push
adc
push
mov
jbe
cmp
imul
fs
test
jp
enter
inc
ret
push
pusha
xchg
fistps
je
mov
enter
insb
dec
push
or
mov
push
popa
cs
lret
js
push
cmp
mov
mov
xor
push
mov
or
inc
popa
bound
rcrb
sahf
dec
cmp
mov
aam
ret
loopne
jne
pop
fisubrl
stos
sub
aad
lcall
dec
shlb
repz
push
arpl
movsb
popf
orb
pushf
pop
xor
dec
in
jne
inc
inc
lret
push
pop
fildl
cld
xor
or
or
sbbl
fcmovbe
jl
out
cmp
sarb
cltd
push
js
jno
sub
lahf
cmp
xchg
fcoms
sub
dec
arpl
stc
cmp
ret
pop
add
or
cltd
mov
add
xchg
shl
in
cmp
mov
daa
xchg
jne
xchg
mov
clts
into
sahf
push
lret
das
mov
push
lret
cmp
lret
xchg
test
lock
xchg
ds
adc
sub
jp
stos
js
test
add
movsl
mov
repnz
fildll
add
mov
out
dec
mov
std
mov
xor
mov
pop
xor
fcoms
lods
jns
inc
sbb
mov
push
dec
pop
arpl
std
in
es
inc
jp,pn
mov
mov
inc
inc
sbb
lret
hlt
jbe
adc
sub
mov
push
fldcw
and
in
das
push
sbbb
fdivl
mov
into
xor
xor
fbld
push
loop
push
not
xchg
xchg
rorl
rorb
sub
push
pop
stc
test
xchg
icebp
sub
and
pushf
lods
out
cmp
mov
push
sub
cwtl
dec
rcll
scas
in
loopne
lds
xor
pop
iret
aam
dec
outsl
lods
aaa
cmp
int3
cmpsb
xlat
inc
sub
xchg
pop
ret
shll
push
rcrb
cmp
fdivr
sub
fcoms
cmp
ret
and
es
rorb
lods
sbb
pop
nop
jne
jge
lret
adc
or
xchg
mov
pop
pop
xchg
inc
in
out
mov
mov
cmp
sahf
js
in
arpl
test
push
popa
ss
push
cmp
shll
add
xchg
xchg
jecxz
in
pop
push
or
mov
mov
jbe
movsl
repnz
shl
mov
xchg
mov
fcmovnbe
xchg
das
jg
and
xchg
testl
or
mov
je
pushf
test
into
or
jg
mov
fdivrs
repnz
mov
inc
fisubrl
test
ja
dec
push
push
mov
fwait
adc
pop
jge
jns
push
push
je
movsl
pop
movsl
mov
push
es
sub
scas
cmp
data16
popf
jno
sarl
enter
rcl
and
shll
mov
mov
sahf
fsubrs
es
int
test
shl
popf
leave
cmp
dec
mov
sbb
push
or
cmp
negl
or
in
or
mov
or
adc
pop
mov
pushf
mov
push
pop
int3
popf
cmp
add
sub
ss
int
inc
add
sahf
test
lock
sbb
out
das
pop
add
fists
xor
mov
faddl
mov
mov
and
faddp
mov
out
pop
push
movb
or
std
mov
mov
ds
movsb
int3
fwait
push
adc
out
call
or
je
rol
sbb
lret
mov
adc
popf
xor
push
int3
cwtl
das
adc
mov
outsb
roll
mov
fcomip
xchg
xchg
adc
lret
dec
lds
cmp
jb
dec
push
mov
popl
aas
inc
leave
loope
mov
mov
inc
mov
out
pop
add
dec
xchg
push
adc
jge
or
dec
fidivs
pop
cmp
cmp
mov
ret
cmp
loope
lock
cli
fucom
mov
repz
test
jno
lahf
test
movsl
shlb
sbb
jno
add
mov
inc
lods
shlb
xor
pop
aas
out
jo
mov
sub
jbe
scas
int
lret
or
stos
pop
lea
jbe
inc
sbb
adc
sub
inc
ret
fucomi
ret
inc
or
icebp
icebp
xchg
bound
mov
cmp
and
inc
sahf
popf
add
mov
cmpsb
ret
lcall
std
dec
adc
or
pop
xchg
xor
call
adc
sbb
jns
cld
xor
imul
repnz
mov
xor
scas
jne
cmp
repz
dec
jge
pop
icebp
fcmovbe
mov
js
adc
mov
add
sub
stc
dec
loope
clc
lea
dec
in
imul
add
push
test
sub
scas
ljmp
stos
int
lcall
lea
inc
push
cs
jmp
fiaddl
shrl
addr16
dec
mov
and
aad
das
xchg
int
push
mov
xchg
fistl
xlat
jmp
lahf
pop
fdivp
push
xor
xchg
xlat
arpl
subb
enter
mov
adc
mov
add
lret
push
int
out
adc
push
aas
mov
into
nop
sahf
shl
dec
and
scas
lods
iret
enter
jo
sbb
pop
int
shr
xor
sub
xor
push
jbe
xchg
sahf
fwait
sarb
adc
pop
movsb
mov
add
cmp
mov
imul
mov
push
pop
add
adc
pop
movsb
roll
push
push
mov
push
in
pop
mov
sub
mov
out
lods
and
mov
mov
lcall
or
or
sti
jmp
and
cmpsl
or
nop
push
inc
stos
mov
pop
int3
and
imul
xchg
pop
sub
fcompl
cli
call
data16
adc
into
in
ja
sahf
hlt
xor
mov
or
adc
push
inc
je
xchg
inc
subb
out
loope
push
out
lahf
out
inc
icebp
xchg
dec
xchg
jg
pop
push
jnp
scas
loopne
adc
fdivrs
pop
xor
test
xchg
xor
adc
mov
dec
sbb
pop
cs
stos
xor
inc
inc
lret
mov
aad
movsb
xchg
int3
mov
stc
js
mov
sahf
mov
or
imul
mov
mov
aam
adc
fidivl
pop
or
sbb
dec
mov
call
rcl
inc
sub
mov
mov
mov
add
push
pop
xor
out
scas
imul
fidivs
mov
cmpsl
sarb
push
shl
pop
inc
push
in
xchg
jp
and
in
sub
fisttps
xor
test
jle
jbe
adc
stos
push
pusha
addr16
mov
aam
fbstp
dec
mov
hlt
rcrb
push
sbb
test
bswap
mov
ret
mov
sar
xor
ljmp
push
sub
sub
aad
add
add
movsb
ror
adc
fiaddl
push
sub
les
test
add
into
rol
into
xchg
xlat
addr16
adc
jl
jne
sub
gs
bound
and
outsb
ljmp
jb
jge
xchg
sub
xchg
pop
mov
dec
jno
lret
mov
jp
dec
sbb
jle
jbe
sahf
add
int3
aaa
jns
mov
mov
inc
xchg
mov
lds
add
iret
xlat
ljmp
and
mov
push
mov
pop
nop
lret
jnp
push
fwait
jne
sub
aam
lods
pop
inc
dec
dec
daa
bound
pop
mov
inc
insl
or
pop
test
imul
and
icebp
mov
data16
movb
dec
xchg
jb
xchg
les
xchg
movsb
aad
sub
mov
and
push
loop
push
std
fstpl
pusha
popa
fists
call
sub
mov
mov
pushf
in
xor
aaa
cmp
idivl
xchg
pop
dec
and
or
inc
inc
cmp
lret
fucomip
push
fstpt
nop
jl
xlat
shll
jns
pop
popa
insl
shrl
arpl
xor
dec
cmc
mov
out
push
pop
cmp
insb
test
add
pop
roll
jno
ds
add
xor
mov
pop
addr16
ljmp
cltd
push
data16
shll
and
adc
mov
fisubl
pop
cli
cmp
add
adcb
mov
jo
add
es
fs
js
xrelease
fcom
mov
scas
sub
call
leave
jbe
out
repnz
sub
aam
mov
call
js
dec
lods
push
mov
jb
das
aaa
es
into
imul
lock
into
push
cmpsb
or
iret
imul
pushf
push
dec
movsb
xor
imulb
stos
sbb
leave
out
fnstsw
push
stos
jae
dec
add
mov
mov
push
dec
shrl
scas
push
pop
jns
jnp
popa
or
rcr
add
jmp
pop
out
cmc
loopne
sub
jo
mov
jbe
cmp
mov
xor
lret
mov
je
or
subl
mov
insl
lds
cli
sub
fst
cmp
faddp
cmc
xor
pop
dec
inc
je
xor
or
aas
arpl
xchg
test
cli
push
mov
xchg
das
push
cmp
insl
les
ja
adc
aas
jae
mov
push
out
xchg
sub
dec
inc
dec
xor
fidivrl
leave
mov
xchg
iret
lret
xor
xor
ds
inc
lcall
decb
dec
test
int3
mov
pop
push
sbb
out
dec
xchg
aas
jg
pop
std
or
jmp
inc
icebp
mov
and
subl
sbb
mov
or
xchg
push
loope
xor
out
mov
repnz
fisttpll
xchg
clc
sarl
lods
aaa
int
test
mov
push
jmp
fists
into
pop
cld
mov
lret
push
out
ss
sub
mov
jg
loopne
mov
dec
or
ljmp
mov
ret
std
ficoms
lret
cltd
les
cmp
jg
fistpll
mov
call
inc
loopne
jnp
int3
pop
and
push
loopw
cltd
fstpl
arpl
jecxz
int3
enter
sub
std
fs
out
and
cmc
sti
ss
insl
rcrb
mov
sbb
in
sbb
dec
push
adc
jb
lds
xchg
rcrl
movsb
lret
sbb
mov
das
inc
push
or
dec
push
push
mov
into
lret
jne
jmp
fstl
mov
insb
leave
andl
outsb
imul
mov
or
mov
pop
cmp
sub
add
idiv
mov
in
insl
xchg
int3
jb
je
pop
call
out
cmp
lret
xor
test
in
jg
push
push
pushf
push
test
leave
lcall
xchg
shlb
sbb
adc
hlt
into
sti
arpl
mov
pop
shr
dec
popa
es
inc
push
je
jle
inc
mov
loop
stc
pop
rcrl
bound
inc
fcomps
and
or
and
das
jnp
xchg
test
sub
lcall
pop
xchg
cmpsl
push
add
jnp
sub
test
loop
lret
jmp
and
lds
cwtl
pop
dec
cmpsb
pop
int3
orl
pop
inc
pop
out
ds
sahf
fistl
nop
in
fcomps
xor
cmp
fwait
hlt
insb
sbb
mov
pop
lretw
and
in
std
pusha
push
cmp
lahf
ja
das
lret
cmpsb
leave
xchg
aas
mov
dec
sub
out
shll
and
xor
sub
fldl
mov
lret
mov
sahf
in
inc
inc
dec
lods
test
mov
push
xchg
mov
jb
scas
jbe
arpl
stos
dec
sbb
in
cmp
mov
add
adc
sbb
sub
movsl
clc
push
dec
lret
mov
cmpsb
imul
bound
hlt
mov
rolb
push
jecxz
push
sub
jae
jmp
shll
lock
pop
sub
out
adc
cmp
or
test
jb
into
lods
cmp
rorl
jge
and
and
loope
jecxz
fistl
cmp
push
inc
insl
xchg
cwtl
inc
mov
incb
scas
ret
jbe
push
fistl
les
repz
dec
sub
pop
jbe
insl
and
fimull
jge
enter
cs
add
cmp
mov
push
test
arpl
lods
add
push
loop
mov
inc
xor
fmull
not
test
mov
xchg
in
xchg
test
jp
daa
jnp
insb
fstpt
repz
adc
cwtl
addr16
imul
mov
sub
add
cmovp
test
push
je
jb
pop
xchg
add
iret
loop
imul
and
pop
cmpsl
lret
mov
loop
out
sbb
add
or
aam
lock
push
fcmovbe
mov
mov
and
stos
xchg
xchg
call
cpuid
sub
cmpsl
or
lret
and
test
mov
push
sbb
inc
fdivs
mov
loope
bnd
cli
jne
ss
movsb
fs
inc
push
push
fdivr
sbb
enter
dec
or
arpl
and
mov
mov
add
sbb
push
dec
es
clc
subl
jmp
dec
fcmovbe
dec
movsl
add
pusha
jae
out
outsl
int
fcoms
popa
xchg
xchg
repnz
push
dec
cli
ljmp
mov
dec
adc
movsl
mov
stos
mov
cltd
sbb
sarb
pop
pop
loop
adc
mov
into
sbb
push
xor
mov
add
in
jns
hlt
loope
outsb
inc
out
mov
imul
lcall
lods
add
xchg
out
mov
pop
cmpsb
jl
aam
rcl
in
jbe
fcomps
int3
repnz
subl
inc
push
cwtl
ja
ret
cltd
test
repnz
cmpsb
mov
ret
mov
fcomps
xchg
loopew
into
cmp
dec
and
xchg
jbe
iret
shll
mov
addr16
pop
xchg
inc
xchg
push
daa
dec
dec
sub
iret
lods
aaa
lahf
sub
mov
int
push
movhps
jbe
pop
sub
push
adc
dec
fs
cmp
aas
xor
lahf
popf
jp
leave
sub
xor
dec
push
mov
sahf
or
ja
push
nop
inc
push
or
sbb
ffree
xor
scas
hlt
adc
sbb
mov
das
jne
pop
xchg
into
cld
lret
ret
out
mov
inc
cmpsb
sub
dec
stos
adc
pusha
in
fadd
mov
mov
scas
jmp
pop
icebp
outsl
dec
rclb
nop
rorl
js
sahf
test
gs
mov
xor
lret
cmpsb
rolb
push
add
jge
jae
iret
test
call
or
push
adcl
lahf
enter
sub
cltd
adc
icebp
xchg
dec
jb
push
or
lcall
lcall
cmpsl
adc
arpl
insb
add
add
rcrb
push
sub
into
jle
dec
int3
scas
cmp
inc
push
stos
xchg
mov
popf
mov
fstl
out
jns
sub
add
sub
mov
lock
adc
test
aam
movsb
ja
hlt
les
mov
std
and
push
aas
jbe
test
imul
mov
test
jp
cmp
adc
dec
xor
xor
hlt
sub
addr16
test
pusha
je
mov
out
scas
leave
jecxz
lods
pop
mov
sbb
fcomps
pop
sbb
pop
std
xor
sub
into
adc
jg
xor
jge
mulb
sti
xchg
xchg
cmp
fwait
fwait
hlt
mov
fldcw
dec
lods
xchg
dec
mov
cmp
mov
jp
shlb
shlb
in
or
or
pop
rcl
add
and
lods
out
jmp
adc
movsb
rorb
mov
outsl
push
pop
inc
add
xchg
xlat
pop
push
dec
pop
out
psrld
xor
adc
sub
in
xchg
into
cwtl
and
xorb
mov
or
cmpsl
addb
cwtl
out
add
jge
aam
mov
add
mov
in
mov
ret
sub
push
sbb
pop
dec
inc
into
sbb
and
adc
add
xorb
add
out
pop
inc
testb
sub
ds
mov
inc
add
lahf
cltd
mov
add
insb
sub
jae
adc
les
pop
int3
fidivl
cmp
bound
fistpl
aas
test
sarb
xor
movl
leave
mov
cmp
and
add
jo
inc
lock
cmp
pop
stc
xlat
lcall
or
add
fwait
scas
ret
test
sub
lret
cmp
cmc
xchg
jecxz
mov
scas
dec
and
fstpt
mov
mov
mov
mov
xlat
mov
push
pop
cmp
repz
add
repnz
mov
std
xchg
lret
repz
add
or
jg
mov
pusha
pop
xlat
dec
fcoms
jge
mov
pop
mov
jp
mov
lret
push
push
je
mov
ljmp
arpl
mov
push
sti
mov
inc
mov
outsb
ret
outsl
ror
sub
fildl
dec
mov
in
dec
sarl
aaa
jecxz
lods
jmp
orl
decb
fdivs
push
outsb
imul
and
aad
jmp
xor
lret
lret
xchg
fwait
call
in
adc
scas
sub
imul
lret
xor
popf
jl
fsubrs
call
es
mov
bound
or
xchg
push
and
out
adc
dec
lret
das
adc
mov
lea
std
sti
arpl
rorl
xor
les
int3
fcomps
icebp
jne
jb
cmp
sub
add
mov
adc
ljmp
push
aaa
add
lret
jmp
and
xor
movsl
nop
jns
sbb
aad
jecxz
test
lret
jmp
xorl
out
inc
push
dec
cs
xchg
xchg
insl
out
mov
je
testb
scas
shrb
xchg
pop
fidivrs
pop
rolb
andb
xchg
pop
xchg
lahf
add
sbb
sub
adc
adc
pop
mov
pop
pop
adc
push
jb
nop
roll
jp
inc
adcl
out
rorb
mov
or
ret
and
fldt
lret
dec
sbb
jecxz
in
add
loope
add
insl
adc
mov
dec
in
mov
out
ja
push
je
xor
cwtl
add
sub
popf
fcom
sbb
mov
push
ds
out
outsb
mov
into
mov
xchg
sub
lret
and
shr
cmpsb
les
jecxz
roll
clc
sbb
lods
loope
push
mov
xchg
arpl
hlt
popa
dec
ret
pop
das
sbb
repnz
clc
pop
cmpsl
mov
hlt
or
sbb
xchg
int3
push
push
and
rcll
idiv
jo
es
std
mov
or
fimull
push
aas
ficomps
dec
shrd
jnp
jbe
flds
sahf
mov
daa
ret
imul
xor
mov
dec
adc
std
data16
pushf
sahf
jne
js
dec
popf
pop
cmp
nop
cli
mov
mov
xchg
cmpsb
xchg
scas
mov
sahf
mov
sbb
pop
das
loopne
aam
es
test
jg
std
movsl
pop
mov
jne
lods
arpl
jl
cltd
and
pop
jb
jmp
mov
leave
sub
mov
movsb
xlat
push
roll
fldcw
in
push
mov
mov
fisttpll
push
pop
pop
push
ficoml
and
mov
in
shl
sub
int
adc
cmc
jb
aad
cmpl
add
sbb
or
inc
in
pop
stos
into
jns
push
inc
pusha
adc
dec
aam
cmc
dec
iret
clc
jge
pop
shl
mov
add
aas
xchg
mov
mov
pop
pop
inc
out
mov
pushf
mov
scas
sbb
sub
movsb
or
cmpsb
std
or
pop
cmp
xchg
mov
in
pop
cmp
xchg
jl
out
cmp
je
inc
in
push
add
sahf
out
pop
or
adc
andl
sub
push
jne
push
pop
sub
cmp
cmp
pop
dec
testl
lahf
xchg
and
fidivrl
lods
xor
lret
arpl
push
pop
test
xchg
xchg
scas
mov
pop
inc
mov
negb
or
in
sbb
or
test
movsl
mov
nop
pop
aad
adc
sub
sub
into
test
imul
les
xlat
lds
push
mov
fsubs
inc
roll
in
pop
scas
or
pop
rcrb
arpl
cmp
aas
addl
adc
push
inc
repz
out
cmp
mov
mov
pusha
mov
std
rclb
js
popa
inc
push
jno
outsl
pop
pop
cwtl
aaa
mov
dec
ret
lds
mov
mov
pop
popf
rcrb
lods
lea
lock
jns
addr16
into
adc
or
jne
sahf
push
sbb
dec
xor
dec
mov
out
mov
ret
scas
das
repz
add
lock
adc
xchg
xchg
ljmp
sbb
add
sub
in
jmp
cmc
add
loopne
test
loope
mov
push
cmpl
stos
mov
stc
pop
push
cli
cmpb
adc
mov
xor
mov
aad
push
ja
std
cmc
cld
pop
inc
pop
jno
repz
test
adc
adc
sub
fiaddl
rorl
test
inc
xor
fxch
push
enter
lahf
mov
add
dec
arpl
sub
or
adc
lret
fwait
jmp
mov
jb
sti
sahf
xor
dec
aas
rcr
std
or
mov
mov
rclb
daa
jp
or
jb
lcall
or
cmp
lret
repz
in
in
push
lods
or
fdivr
pop
mov
rorb
ret
sub
stos
outsb
mov
push
shufps
nop
lods
into
cmp
scas
lahf
pop
mov
scas
inc
xchg
in
shll
lds
lret
xchg
xchg
aaa
ja
aam
and
mov
popf
orl
dec
daa
pop
lcall
inc
nop
add
fstl
sub
push
cld
test
mov
leave
push
bound
mov
sbb
stos
jae
ljmp
ja
mov
and
mov
push
push
lret
stc
mov
inc
in
jp
incl
fs
imul
or
or
clc
cmp
mov
xchg
lret
or
jecxz
jbe
mov
mov
fnstsw
cmp
pop
jbe
inc
sbb
cld
sbb
repz
ss
lds
push
xorb
dec
cmp
or
shll
xchg
pop
pop
inc
fnstenv
clc
popa
xor
adc
sbb
aad
outsl
lret
sbb
jmp
fistpll
dec
inc
xchg
sbb
xor
or
lea
sub
mov
insl
dec
inc
jmp
out
lcall
xchg
popl
jbe
imul
mov
mov
xchg
and
dec
into
test
enter
mov
xor
call
inc
cli
pop
std
arpl
lods
sbb
cmpsb
add
cs
int
out
xor
dec
lods
imul
add
mov
shl
popa
sub
imulb
fists
inc
sahf
jmp
popf
loop
xor
into
aaa
push
mov
jae
insb
ret
xchg
data16
pushf
in
fisubrs
out
mov
mov
jne
sbb
imul
adc
xor
scas
gs
mov
jne
mov
mov
sbb
cmp
push
mov
cld
mov
repnz
mov
scas
inc
push
out
inc
push
rcl
popf
dec
cli
jno
jb
mov
enter
cmpsl
mov
ret
or
mov
dec
aam
cmpsb
movsl
fincstp
mov
inc
jge
inc
scas
cmp
imul
mov
icebp
das
push
push
addr16
data16
lret
inc
sbb
mov
outsl
lods
clc
dec
push
mov
push
cmpsl
adc
outsb
popf
sbbl
into
sub
repnz
jno
dec
xchg
ret
xor
add
cmp
jae
jp
jo
testb
mov
shr
cli
or
dec
or
lock
cmpsl
push
addr16
js
adc
sbb
and
push
mov
jno
or
nop
xchg
add
fstps
std
int
pop
push
pushf
test
mov
ss
test
lret
insb
sbb
dec
iret
or
movsb
add
mov
pop
es
inc
imul
ret
nop
mov
or
push
or
fs
mov
mov
push
cli
jle
jo
lea
mov
mov
out
loope
loopne
les
outsb
ljmp
or
adc
or
jno,pn
test
scas
jecxz
push
xor
sbb
push
mov
imul
xor
test
jmp
and
cmc
and
pushf
mov
jns
out
jo
and
leave
push
xlat
dec
mov
lods
stos
sub
ja
rcl
inc
jecxz
cmpl
push
call
lret
cwtl
jo
leave
fimuls
xor
push
mov
pop
sbb
imul
add
add
mov
push
sti
add
sub
mov
imul
jecxz
nop
pop
lods
or
and
scas
cmp
call
adc
insb
mov
lret
aas
ss
xor
test
or
std
adc
xchg
push
mov
je
adc
adc
into
aam
int3
push
fsubs
add
xor
je,pt
std
cmp
mov
push
adc
lods
in
dec
mov
es
mov
lods
add
xchg
cs
cmp
mov
pop
jl
dec
negb
aam
out
sti
adc
cli
xchg
cmp
fisttpl
sub
xchg
popf
jp
push
inc
xchg
sbb
jne
ret
xchg
imul
push
sahf
sar
cltd
and
sbb
inc
or
fdivl
jnp
repz
sub
cmpsb
push
fildll
loopne,pn
mov
movsl
jnp
dec
jns
push
daa
cmp
or
ret
dec
movsl
stos
mov
mov
hlt
pop
outsb
mov
int
xor
into
out
mov
bound
pop
xchg
call
jle
sbb
mov
gs
leave
sbb
jbe
ljmp
or
je
xchg
mov
add
movsb
mov
int
or
test
cmp
shlb
or
adc
int3
sbb
mov
jae
xlat
test
sahf
push
jmp
faddl
mov
mov
addl
push
out
jae
or
aaa
adc
jg
nop
xlat
dec
and
cmp
push
cmp
mov
lods
cmp
popf
ror
mov
xchg
mov
clc
test
xchg
and
rcrb
jo
sahf
in
or
fwait
push
mov
cld
mov
inc
pop
lock
mov
mov
xchg
dec
fiaddl
jb
iret
mov
insl
jne
xchg
pop
ret
xchg
dec
pusha
lock
hlt
adc
inc
aam
fdivl
jae
jmp
pop
mov
inc
cmp
loop
pop
jbe
ficomps
mov
outsl
dec
nop
jo
insb
cltd
push
outsb
clc
divb
test
xchg
rcll
or
scas
es
and
pop
xchg
add
mov
test
arpl
pop
cmpsl
ljmp
aaa
xlat
out
jae
aas
pop
insb
jge
fisubrl
int3
dec
mov
scas
loopne
adc
out
pop
pop
inc
sbb
cwtl
jg
loope
xor
xchg
push
fsub
aam
movsl
xchg
fildl
lahf
jae
int3
insl
andb
dec
lret
rcr
push
insb
popf
dec
xor
xchg
jle
and
das
mov
lret
int3
leave
fs
push
inc
out
pop
mov
mov
push
pop
sahf
stos
add
scas
in
movsb
test
xor
jl
adc
push
loope,pt
in
mov
pop
mov
xchg
dec
push
in
test
jns
cmc
rol
icebp
pop
mov
jl
dec
int3
jp
ret
jge
fcomip
cmp
adc
into
xchg
js
pop
into
lret
pop
push
dec
dec
jle
stos
popa
sbb
or
or
mov
pslld
adc
push
leave
outsl
dec
mov
lret
push
jecxz
mov
call
add
dec
and
lret
jbe
dec
lahf
sbb
inc
je
js
movb
rcl
mov
mov
sub
xchg
inc
dec
jmp
aas
arpl
leave
lret
adc
sbb
mov
push
addr16
xchg
and
or
jae
int
pop
sub
push
jbe
inc
mov
sub
dec
xchg
mov
daa
incl
sub
xchg
dec
lret
pop
dec
cmc
fcmovbe
lods
fistpl
gs
ljmp
cmp
addr16
mov
inc
xor
int
ficompl
dec
cmc
or
fwait
push
shrl
adc
or
ljmp
cmp
dec
mov
cmp
push
xchg
dec
dec
sub
inc
cmp
push
pop
pop
call
jbe
xchg
push
xor
ds
mov
cwtl
fstps
cmp
out
xor
dec
sub
dec
jne
jae
test
dec
call
push
cmp
and
icebp
jno
sbb
or
mov
mov
jbe
push
mov
dec
lret
cwtl
aaa
adc
push
dec
sub
adc
and
jbe
dec
loop
aam
lcall
fs
in
xchg
fcompl
xor
mov
lock
xlat
mov
aad
inc
das
loopne
aas
cmp
mov
out
aad
scas
push
xorl
dec
popa
inc
xchg
cwtl
les
lds
ljmp
es
cli
xchg
jl
xor
mov
fiadds
adc
jle
jno
push
push
aas
dec
leave
mov
mov
movsl
cmp
iret
insb
dec
ret
cmc
stc
dec
lahf
les
dec
xorl
call
test
adc
cmp
cltd
es
mov
cmp
lret
mov
lods
mov
fldcw
stc
cmp
sbb
rcr
int3
xchg
mov
jbe
repz
adc
es
add
into
mov
ret
add
xor
int
rorb
aas
std
mov
inc
fwait
in
ss
mov
jne
mov
pop
and
cmp
aam
testb
mov
ret
and
xchg
push
push
into
add
sahf
mov
cli
dec
jmp
ret
scas
je
out
sub
dec
aam
lret
or
fcmovbe
and
dec
pop
xlat
aad
dec
leave
jge
mov
add
mov
sbb
lock
rcr
cltd
push
sbb
adc
loop
inc
sub
frstor
jecxz
movl
adc
sbb
push
popa
mov
ret
jecxz,pt
movsb
and
jecxz
sarl
pusha
mov
out
mov
pop
aaa
mov
jno
dec
push
inc
rcrl
cmpsb
notb
addr16
into
push
js
push
xchg
scas
in
orb
xlat
int
dec
notl
pop
lret
xor
int3
out
jg
loop
out
jae
rcll
ret
push
xchg
add
shll
adc
lret
push
mov
test
les
push
pop
cs
mov
xchg
ds
lret
sahf
jb
push
test
and
push
dec
loop
aad
and
jnp
cwtl
mov
stos
jge
push
cmp
notl
pop
ja
xchg
mov
insl
xorl
jnp
and
mov
xchg
fs
ret
ret
add
lock
sbb
jns
cmpsl
cs
mov
mov
add
icebp
xchg
and
cmpsl
adc
aad
jp
mov
sub
sbb
adc
adc
mov
mov
mov
stos
xchg
repz
mov
jo
or
and
rclb
jl
sub
pop
sbb
or
push
es
mov
adc
ss
mov
inc
shll
xor
xchg
imul
mov
repnz
addr16
mov
push
jnp
push
add
shrl
xchg
dec
repz
sbb
mov
add
inc
mov
xchg
fwait
mov
push
imul
pop
mov
push
stos
xchg
in
pop
pop
jo
dec
mov
sti
xchg
out
or
cli
fwait
inc
add
pop
dec
into
ret
dec
xor
push
test
jp
shr
out
mov
dec
jb
imul
addr16
or
add
push
aas
xor
inc
int3
fdivs
jb
pop
ret
repnz
test
sub
cmpsl
xchg
or
jge
lret
out
mov
adc
repz
sub
push
sbb
not
out
dec
ss
mov
jnp
cmp
or
mov
fadds
mov
ret
es
push
push
fwait
or
lret
push
mov
shrl
mov
fsubr
xchg
jns
jo
jle
push
cld
aam
cld
mov
test
out
dec
shll
dec
or
add
imul
push
lret
decb
mov
jnp
xchg
push
je
pop
fwait
jo
scas
out
lea
mov
jbe
jbe
in
aad
test
movsl
imul
jnp
ficompl
pop
pop
pushf
pop
fdivrl
addr16
fisttpl
jnp
movsl
mov
insb
jae
adc
jae
xchg
mov
ljmp
jne
repnz
loop
es
aam
fucomi
fcmovnu
pop
mov
out
in
push
shrl
cmp
sahf
pop
pop
sti
mov
jne
dec
dec
jne
fiadds
pop
fistps
mov
or
leave
negl
imul
mov
lods
out
mov
ret
xchg
not
addr16
jg
outsl
data16
mov
int3
jp
or
dec
xchg
es
cld
push
rol
pusha
mov
fmull
sbb
jmp
or
js
jl
pushf
push
mov
sti
pop
jmp
mov
rorl
pop
cmp
fcmovb
push
dec
lds
pop
or
ss
lret
data16
mov
jbe
xchg
jbe
rolb
sbb
push
es
jmp
jo
mov
outsb
dec
dec
jmp
fisttpl
push
pop
dec
add
mov
cmp
int3
out
or
xchg
jmp
dec
cmp
cmp
push
nop
dec
sti
std
mov
ss
xchg
repz
in
adc
mov
popf
cwtl
test
test
test
cmpsl
imul
xchg
mov
inc
out
imul
jl
mov
inc
dec
int3
jmp
mov
pop
or
mov
sbbb
pop
pop
aam
mov
or
jmp
imul
mov
jbe
rcll
add
mov
out
das
gs
int3
test
inc
sub
jae
jp
mov
sti
leave
mov
pusha
lds
mulb
push
dec
jecxz
cltd
fldt
mov
sub
rorl
pop
pop
jns
lret
dec
lods
int3
mov
stos
sub
std
lcall
pop
cmp
xlat
xchg
pusha
and
lahf
gs
movsl
out
test
je
mov
iret
and
xchg
xchg
push
jmp
sarl
inc
imul
fsubs
insb
data16
ret
jl
inc
mov
sub
jo
mov
fld
dec
push
scas
fdivrl
mov
xchg
int
cmpsb
push
movl
and
mov
jo
mov
fadds
pusha
out
stos
push
jbe
jp
cmpsb
orb
cltd
sti
jns
fcmovnbe
jmp
stos
and
insb
ds
jl
pushf
iret
cld
mov
xchg
imul
pusha
idivb
add
ficoms
arpl
gs
popf
or
or
push
cli
push
inc
jnp
sub
pop
arpl
mov
into
jb
sbb
repz
loopw
jbe
mov
rorb
jle
jecxz
lcall
or
fdiv
mov
or
push
inc
imul
or
lret
and
ja
out
in
mov
jbe
fildl
jbe
data16
lret
mov
gs
mov
ret
and
inc
pop
jbe
dec
inc
stos
sbb
dec
inc
sbb
jns
cmp
pop
lock
mov
data16
mov
jge
xcrypt-cfb
cmpsl
cmpsb
call
mov
jp
pop
ljmp
inc
xchg
test
aam
or
aam
jl
mov
jnp
jns
pop
mov
dec
mov
insb
sbb
cmp
outsl
jns
cltd
enter
or
fcmovne
scas
adc
jbe
pop
and
pop
lds
sbb
or
rcrb
aad
repnz
add
jmp
inc
jmp
pop
cmpsb
sub
mov
cld
or
mov
xor
jno
mov
mov
js
push
mov
in
cmc
xchg
add
and
lods
and
xchg
or
push
call
int3
mov
iret
fsubrs
inc
cmp
fwait
loop
addr16
jnp
stc
push
test
mov
fisttpl
push
leave
cmp
sub
sarb
ss
adc
stc
je
mov
rcrb
es
repnz
xor
popa
push
pop
add
xchg
pop
ss
push
cmp
mov
xchg
clc
push
out
es
pop
fwait
das
pop
insl
stos
in
push
pop
or
and
lock
mov
rcrb
mov
stc
out
or
cltd
out
pop
jl
mov
add
ss
xchg
inc
push
cmc
lret
fcom
adc
test
ficoms
xchg
cmpsb
adc
xor
adc
jne
aad
into
pop
inc
loop
mov
inc
pushf
mov
push
int3
push
sub
out
pop
imul
jae
jns
rorb
das
pushf
jb
outsb
mov
iret
std
push
std
and
push
stc
sub
or
dec
cmpsb
inc
gs
out
push
inc
add
sbb
push
in
adc
jecxz
rorb
add
sahf
aad
ss
mov
jle
pop
pop
stos
cmpsl
cmpsb
inc
jbe
xchg
into
mov
mov
inc
pop
sub
push
in
dec
test
or
mov
and
rcr
push
mov
xchg
lret
xor
and
adc
xor
jg
bound
pop
cmc
adc
dec
mov
dec
into
push
dec
imulb
mov
adc
add
cmp
pop
jle
dec
in
adc
cltd
xlat
pop
lcall
test
mov
ja
push
ja
ficoml
test
xor
xor
imul
in
movb
mov
lods
pop
in
xchg
xlat
dec
loop
sub
pop
in
es
inc
int
jne
imulb
xchg
cmp
mov
fsubr
xchg
imul
test
xchg
jbe
sbb
cmp
dec
xchg
push
rclb
mov
and
inc
icebp
push
sahf
push
or
cmpsb
mov
ss
dec
cmc
jbe
pop
inc
das
in
push
popf
push
adc
mov
scas
out
xchg
loope
fmul
stos
inc
out
rclb
mov
sub
stos
jns
ficompl
dec
mov
cmp
lock
movsl
xchg
mov
divb
inc
xchg
push
pop
aad
adc
data16
push
or
push
repz
out
std
push
out
inc
pop
jbe
rcl
ss
push
incl
xor
int
sub
jo
stos
fstpt
insb
aad
js
movsb
pop
fwait
pop
mov
in
rorb
or
push
inc
out
xor
pop
push
push
divb
and
popa
jnp
es
dec
adc
decb
add
push
out
xchg
add
mov
mov
xchg
repz
enter
and
mov
into
cmp
push
mov
gs
fildl
cmp
test
inc
push
in
sub
int
out
fwait
ja
rcll
xor
jne
xorl
negb
jbe
dec
and
xchg
dec
mov
dec
mov
add
mov
jnp
into
pop
xor
mov
or
subb
out
dec
dec
sub
cmpsl
lcall
in
in
out
fwait
mov
jne
imul
out
jbe
aad
lea
lds
imul
addr16
dec
mov
pop
std
push
cmp
pop
jmp
cmpsb
add
add
mov
aad
es
jmp
jl
cmp
mov
mov
push
and
sub
daa
data16
push
int3
pusha
dec
dec
int3
jbe
notb
ss
mov
cmpsb
xchg
imul
cmp
lret
fs
test
dec
mov
pop
push
test
sbb
and
inc
js
inc
outsl
push
fadds
es
sbb
push
cld
and
sub
pushf
enter
push
cs
mov
or
xor
push
setbe
aad
in
sub
test
jns
pop
mov
int3
sub
ss
add
cltd
jnp
lret
test
mov
clc
mov
es
imul
sti
lret
cltd
repnz
lods
loope
cmp
out
or
jbe
add
jb
shlb
pop
or
pushf
lret
cmpsb
lret
and
xchg
sbb
dec
add
stc
adc
stos
fdivl
cmp
xchg
and
insl
xlat
and
enter
out
into
rcrl
cltd
xchg
dec
lret
cwtl
sub
addr16
ret
mov
push
jne
push
shlb
xchg
mov
aad
mov
arpl
out
sti
pop
pop
negb
mov
fisubrl
jp
sub
sub
push
gs
rorb
daa
cmp
adc
arpl
fcoml
mov
cmp
push
sub
sti
dec
push
mov
lret
xchg
push
and
mov
bswap
iret
jbe
xchg
testw
pop
dec
fnstenv
jmp
push
outsb
out
test
ja
add
out
cmpsl
test
call
xlat
inc
mov
dec
add
add
call
pop
in
adc
mov
fcom
movsl
dec
inc
adc
aad
imulb
pop
adc
fldt
lcall
xchg
mov
je
dec
clc
jb
push
out
xchg
push
pushf
loop
testl
popa
pop
cltd
in
sub
dec
outsl
push
mov
fcomps
fildl
popa
cbtw
cld
aam
xor
or
std
sbb
and
cmpsb
jmp
mov
mov
pop
pop
or
pop
pop
push
cmp
push
xchg
cmc
fisttpl
js
inc
push
loop
mov
cwtl
xchg
fmuls
mov
jl
in
mov
xchg
jns
stc
pop
sub
rol
insb
sub
mov
test
sub
xchg
cmp
outsb
pop
fdivrs
mov
adc
jmp
push
stos
mov
inc
imul
test
rorb
mov
repnz
inc
cmp
ss
pop
cmp
cltd
scas
jns
xchg
stc
fidivrl
jmp
sub
loope
push
pop
xor
mov
push
pushw
int3
xchg
mov
mov
pop
mov
mov
pop
cli
mov
jnp
adc
adc
ss
ja
xor
ret
jmp
mov
sub
adc
cmp
pop
test
mov
push
das
xor
out
dec
test
cwtl
push
push
imul
sub
das
inc
jnp
push
cmp
ror
in
jne
inc
pop
dec
in
mov
inc
in
pop
mov
nop
and
nop
stos
xor
cmp
ficoml
sub
push
jg
addr16
mov
and
js
and
leave
xlat
leave
clc
jecxz
add
enter
and
and
nop
into
loop
and
cmp
insl
xchg
inc
call
xchg
sub
test
adc
bnd
lds
stos
and
sub
lret
sub
jecxz
add
stc
int3
pop
mov
out
and
pushf
or
mov
add
outsl
add
xchg
or
sbb
dec
add
mov
mov
pop
inc
pop
inc
shlb
pop
dec
fisubs
xchg
sbb
push
jmp
mov
insb
cld
gs
imul
xchg
iret
pop
jmp
insb
jno
pusha
gs
out
rol
pop
sub
or
mov
dec
lds
jle
and
fisubrs
xorl
push
fldt
jae
jbe
or
js
into
gs
aam
adc
add
fimull
sub
cmp
dec
outsl
sub
xchg
fsts
mov
loop
xorl
xchg
in
inc
data16
xor
dec
add
pushf
arpl
lcall
pop
repz
into
push
inc
mov
loope
jb
shlb
cmp
movsb
jbe
out
dec
pop
jl
loope
int3
jmp
inc
cmp
jno
into
sbb
mov
mov
xor
insl
not
jmp
xlat
neg
out
cmpsb
lods
dec
and
mov
cmc
jg
lcall
or
outsl
inc
adc
xlat
into
addr16
fdivs
jne
jbe
push
fwait
stos
pop
in
sbb
or
mov
flds
mov
pop
dec
jne
daa
enter
addr16
inc
pop
xchg
mov
mov
clc
mov
imulb
mov
test
mov
adc
mov
xchg
add
or
out
stos
inc
sub
pop
or
mov
mov
add
ljmp
and
push
jmp
pop
mov
fcmovnu
or
divl
into
jns
pop
gs
push
fcmovne
fsubl
mov
fistps
or
sbb
push
jle
cmpsb
sub
dec
fiaddl
fwait
ret
add
mov
pop
enter
jbe
mov
mov
js
mov
jmp
sub
in
pop
add
jne
cwtl
inc
div
aaa
rcll
cmp
pop
mov
pop
dec
or
iret
stos
outsl
xor
testb
out
xchg
or
cmpsl
push
mov
movsl
incl
sub
lods
push
dec
dec
cmp
push
rcrb
das
jmp
cmp
je
inc
icebp
loop
or
repnz
aad
stos
je
cmp
lret
pop
addl
fsubrs
mov
es
push
js
out
adc
pop
inc
aam
sar
mov
jp
imull
in
jmp
pop
mov
mov
xchg
leave
mov
sbb
jnp
push
cmpsb
dec
clc
mov
xor
icebp
daa
jge
xor
jp
xchg
jg
out
imul
mov
sub
mov
test
add
shl
iret
push
popf
dec
repz
inc
imul
insb
add
into
stc
xchg
les
aaa
adc
mov
lds
sbb
pop
cld
data16
push
push
pop
cmp
or
mov
xchg
dec
mov
push
push
data16
addr16
lret
call
fistpll
pushf
fwait
cmpsl
xchg
enter
mov
add
mov
pop
mov
sbb
lock
sub
insb
cmp
popf
pop
out
repz
xchg
sbb
test
sbb
xchg
jne
mov
pop
pushl
push
test
test
add
cmp
sub
pop
xchg
fists
push
sub
pop
pop
mov
daa
cmc
cmpsl
rcl
pusha
xorb
jne
inc
adc
mov
mov
sub
cli
fmul
or
cmpsl
stc
std
out
cltd
in
test
lret
inc
mov
or
xchg
inc
inc
inc
push
out
sub
xlat
jmp
pop
dec
push
outsl
mov
jl
sbb
out
or
or
dec
test
xchg
cli
xor
mov
popf
adc
js
mov
cmp
mov
ljmp
ss
sub
inc
cltd
aas
dec
dec
aad
out
dec
daa
push
mov
adc
push
insl
repz
mov
test
cmpsb
fdivr
jns
fstps
fcmovbe
jae
ljmp
lahf
push
lods
add
inc
add
jg
mov
adc
xor
cltd
ret
das
cmpsb
stos
or
dec
and
mov
std
aas
adc
lahf
xchg
cmp
pop
hlt
insb
push
xor
fsub
rcl
ja
repnz
rorl
push
mov
adc
bound
sbb
mov
mov
push
xchg
mov
clc
ds
mov
bound
mov
pop
in
fwait
mov
cmp
fisubrl
mov
negb
jns
mov
pop
mov
push
pop
repnz
pop
aaa
stos
js
xchg
mov
in
lock
or
mov
sub
stc
or
jne
inc
dec
daa
cltd
mov
andb
or
cmpsl
mov
jmp
push
lods
in
pop
dec
jp
push
and
ljmp
inc
subl
xchg
fdivrs
pop
jecxz
add
pop
stos
adc
jl
mov
dec
cmp
imul
pusha
jnp
and
inc
aaa
repnz
icebp
xor
adc
daa
pop
movsl
or
insb
push
cmc
sbb
fiaddl
cmp
xchg
xor
and
ja
out
pop
mov
aad
jnp
sub
lcall
pusha
push
cli
pop
xchg
out
sti
xchg
or
or
add
rclb
loop
cwtl
mov
jmp
ljmp
xor
push
lahf
sub
sub
testl
push
andb
sub
popf
xchg
xchg
faddl
repz
pushf
pop
push
sub
fsubs
cmp
xchg
fadds
mov
loop
mov
mov
cmpsl
sub
loopne
push
pop
lock
mov
mov
inc
pop
mov
xor
aad
fnstenv
jbe
mov
subb
mov
out
insb
pop
int3
idiv
jo
leave
cmp
arpl
out
pushf
stos
icebp
fsub
cmp
cmc
or
xchg
xchg
and
int
xor
ja
test
lcall
push
lret
fisubl
dec
pop
adc
xor
mov
mov
and
push
adc
lret
lret
cmp
stc
xchg
leave
into
pop
sbb
xchg
jmp
inc
mov
ja
add
mov
jae
sbb
ret
or
ljmp
or
push
pushf
dec
jnp
mov
insl
jne
fdiv
mov
iret
cwtl
xor
lret
and
cmovnp
fistpl
mov
pop
into
sub
test
mov
shl
and
scas
inc
adc
sub
add
push
jge
outsb
xchg
pushf
jl
sub
push
mov
jmp
jno
sbb
cmp
pop
vxorpd
test
mov
out
push
fldt
out
lods
ficompl
xor
push
imul
pop
xchg
cmp
cmp
push
and
out
loop
add
ja
lret
sbb
dec
pop
sub
adc
push
scas
and
push
mov
aad
clc
int3
out
movsl
je
sti
testl
dec
cmpsb
ss
test
in
mov
mulps
call
xor
xchg
jns
jnp
mov
subb
out
cmpsl
cmpsb
xchg
add
jmp
in
sbb
inc
jns
ljmp
data16
or
aam
scas
movl
dec
idivl
xchg
test
xchg
mov
or
mov
int
sbbl
stc
jle
movsl
push
dec
mov
shll
xchg
ja
adc
ret
jbe
sub
push
ficompl
setns
or
stos
aaa
add
insb
or
add
int3
mov
add
icebp
ret
jae
inc
enter
out
dec
rcll
mov
dec
push
lret
jl
pop
jns,pt
jmp
sub
mov
push
push
lds
sbb
daa
arpl
test
movsl
roll
in
push
cmp
cmp
dec
aaa
mov
stos
mov
pop
enter
test
pop
cmc
int3
and
jge
sub
iret
push
testb
fs
fisubrl
and
sahf
jmp
add
repz
push
pop
shlb
jne
and
cmp
aaa
mov
push
push
push
lret
jge
mov
out
sbb
jl
sub
xor
dec
movsl
test
xchg
data16
lret
ret
inc
adc
dec
inc
std
imul
mov
lea
mov
movsb
test
cmp
scas
or
insb
enter
cmp
nop
and
mov
lret
iret
jmp
mov
mulb
push
call
add
xlat
cmpsl
mov
push
loopne
dec
push
out
fmul
mul
adc
ss
cmp
ja
mov
pop
or
iret
leave
test
popf
jbe
xchg
inc
cmp
mov
cmpsl
jmp
pushf
mov
and
mov
leave
dec
ss
and
xchg
xlat
xchg
push
xor
jp
push
popf
testw
cmpsl
ss
nop
insb
mov
adc
cltd
sub
cmp
jp
test
push
lea
bound
xchg
pop
inc
into
movsb
mov
push
add
xchg
sbb
dec
dec
sbb
pop
out
int3
mov
cmpsb
jbe
ss
es
stos
inc
iret
ret
inc
popf
in
xchg
push
sti
xor
stos
jl
or
cld
pop
int3
mov
loopne
stc
cmp
lcall
insb
jne
xchg
xchg
and
fisubl
jecxz
into
push
sub
xchg
dec
xchg
xlat
sub
sbb
sub
fstpt
lods
imul
cmp
cmc
push
inc
in
xchg
lds
push
lods
out
adc
sub
fistl
rcr
call
xchg
sub
pushf
dec
movsl
cli
outsl
and
out
insb
mov
mov
outsb
cmc
movsb
pop
lret
loope
adc
mov
pop
gs
jp
xor
cwtl
shr
mov
mov
sbb
cmc
jne
test
and
xor
pop
jbe
ss
push
jnp
stc
fstpt
or
int3
sbb
pop
xor
imul
jne
push
dec
xchg
push
hlt
sbb
inc
xchg
ret
cmp
jbe
cmp
mov
push
push
ja
jae
mov
xchg
add
sub
adc
inc
movsl
test
xchg
testb
dec
lock
or
mov
mov
pop
imul
fadds
pop
sub
xlat
mov
jne
xchg
mov
jecxz
lahf
adc
push
mov
mov
mov
ljmp
pop
cmpsb
pcmpeqw
stos
and
dec
mov
insl
xchg
test
ret
or
in
jno
xchg
xchg
cmp
and
in
sbb
dec
inc
out
out
subl
lret
fildll
mov
test
xor
adc
cmp
into
push
pop
or
xor
stc
pusha
fstpl
push
fwait
sub
mov
add
divl
add
hlt
sbb
into
xorl
dec
out
sub
sub
cmp
pop
shl
cli
iret
hlt
lahf
int3
dec
pop
shrl
and
ret
in
add
fs
cmp
fucomp
test
lahf
dec
jo
add
sarb
xchg
mov
or
icebp
xlat
stc
cltd
aaa
dec
divl
clc
fadd
adc
cmp
cld
aad
leave
jno
or
mov
lcall
mov
rclb
test
repz
divl
mov
mov
lret
jp
ljmp
mov
push
faddl
inc
push
out
add
push
sbb
fldcw
jne
cltd
and
sahf
imul
lret
or
cmp
pop
movsb
mov
push
mov
sbb
test
insb
movsl
jnp
in
rcl
jle
stos
cwtl
adc
cs
idivl
ljmp
and
mov
jno
xor
lret
pop
mov
ss
cmc
and
mov
inc
cmp
xchg
xchg
xchg
push
inc
jbe
push
out
push
cmp
sub
inc
pop
les
sbb
add
leave
insb
inc
pop
pop
jmp
outsl
mov
sub
es
xchg
xchg
popa
xchg
mov
idivl
iret
jbe
push
incl
sbb
sub
fwait
dec
rclb
pushf
into
or
sub
adc
loope
pop
sub
or
push
popf
sub
out
add
jbe
xchg
sbb
fldenv
sub
xor
cwtl
lcall
xor
icebp
xchg
fld
jnp
jne
inc
iret
repnz
pop
addr16
aam
inc
xor
mov
xor
push
cmp
test
scas
jl
out
ss
push
push
call
fcomps
andb
movsl
adc
push
jl
rorb
stos
aam
mov
xor
jp
aad
or
mov
lahf
cmp
adc
sub
jb
adc
decb
cmp
aad
jg
out
or
sarb
insl
jecxz
iret
add
mov
pop
xchg
dec
out
xchg
lcall
xchg
shr
adc
test
test
lahf
scas
mov
dec
add
cmpsb
dec
sub
jnp
adc
shrl
out
fsubrs
xor
dec
out
test
push
aad
cmp
arpl
push
dec
int3
mov
sub
repnz
xor
dec
loope
mov
jnp
add
int3
jb
and
adc
mov
sti
cs
sub
jmp
dec
push
or
sbb
ret
dec
data16
push
fsubp
imul
cmc
daa
xchg
aam
pop
imul
ja
jecxz
test
mov
xchg
mov
mov
cld
lahf
jmp
dec
sbb
jge
movsl
inc
lret
js
fsubp
test
xlat
adc
out
sub
mov
push
mov
sbb
icebp
sub
dec
jl
mov
dec
dec
mov
jle
test
into
stos
xchg
push
mov
pop
ja
leave
jbe
xchg
in
rcrb
push
xchg
nop
and
mov
cmp
nop
pop
fwait
mov
lea
jbe
ja
or
cmp
mov
sbb
dec
fisubrl
push
mov
lds
xchg
jge
into
not
mov
sahf
jmp
pushf
dec
dec
pop
sbb
cmp
mov
mov
pop
push
sbb
inc
sbb
or
sbb
push
lods
mov
adc
push
shl
sbb
pop
mov
or
lcall
jg
leave
out
imul
push
add
or
xchg
cmp
jbe
lret
mov
fwait
shrb
aam
and
shl
pop
mov
data16
stos
mov
or
mov
or
imul
xlat
shll
fs
sti
arpl
xchg
cltd
add
movsl
pop
fldt
pop
lahf
adc
pop
in
movsb
popf
xlat
ja
cmp
std
jnp
in
loope
in
or
aaa
lods
pop
adc
mov
and
fcmovnb
lods
dec
adc
ret
cli
sub
jns
shrd
lcall
jl
jbe
daa
fadds
lock
xchg
cli
shll
pop
jns
dec
push
std
adc
test
cltd
pop
outsl
mov
cmp
mov
cltd
push
sub
add
sbb
xchg
call
fldcw
cwtl
pop
sahf
nop
cmp
iret
jnp
mov
ja
mov
jl
dec
cltd
sbb
stos
lret
cmp
or
mov
int3
mov
ret
jnp
jge
xor
jno
and
mov
mov
add
nop
or
aam
mov
jnp
xchg
aad
xor
mov
push
pop
repnz
bound
out
mov
call
fcmovbe
pushf
imulb
out
sub
or
jns
iret
dec
sub
fcmovnu
mov
sti
or
mov
jle
call
adc
pop
sbb
adc
loop
mov
inc
lock
mov
sbb
mov
out
cmp
scas
shrb
sbb
stc
sub
cmc
xor
sbb
andl
sbb
addr16
out
push
hlt
out
pop
rcll
movsl
cmp
sub
mov
xchg
cmp
push
jnp
inc
push
cmpsb
stos
out
sbb
or
xchg
jno
mov
cmp
xabort
test
mov
cmc
mov
cmp
mov
add
out
mov
cmp
inc
push
int3
mov
js
ror
cwtl
sub
ja
inc
adc
cmp
cmp
in
bound
daa
cltd
sti
cmp
test
repnz
rclb
mov
jnp
push
xchg
mov
outsb
xchg
fimull
test
les
add
jnp
into
pushf
inc
mov
jge
arpl
popa
int3
in
cmp
pop
push
add
xor
lock
in
or
push
or
xchg
stos
mov
push
push
out
sbb
cmpsl
sti
iret
sbb
inc
pop
movsl
cmp
fcoml
pop
or
lea
mov
lret
gs
mov
test
aad
into
fdivrs
insb
ret
mov
into
jmp
sbb
pushf
dec
pop
mov
pop
add
and
cld
pusha
jns
mov
pop
mov
or
xor
dec
out
mov
or
cmpsb
arpl
das
cmp
pop
cmp
cld
or
gs
call
inc
clc
jnp
lods
mov
add
or
cmp
mov
mov
stc
and
adc
out
push
lods
mov
lret
jmp
dec
cld
loope
mov
add
push
xor
sub
cmpsb
jp
push
gs
jecxz
dec
into
cmc
mov
jl
fcmovu
pusha
sub
lret
push
sbbb
xor
inc
ds
xchg
pop
incb
add
stos
outsl
pop
jns
dec
scas
cmpsb
lret
push
and
sbb
adc
fcmovne
stc
mov
cmc
sbb
sub
outsb
and
leave
lret
scas
imul
mov
and
addl
mov
cmc
sbb
add
test
fwait
icebp
aam
adc
fcomi
xchg
in
pop
das
xchg
mov
xor
adc
inc
scas
xchg
lahf
sarb
jnp
into
inc
lret
repnz
out
in
adc
and
or
cmc
out
sub
cld
or
in
pop
mov
test
push
mov
and
push
testl
jp
push
fsubrs
fcomps
add
pop
xchg
cmp
add
mov
jmp
or
xlat
sbb
bound
shrb
mov
cltd
push
dec
rcrl
sbb
mov
inc
sahf
xor
xchg
mov
adc
cmp
fisubrl
mov
subl
mov
jns
add
jp
or
xor
clc
leave
mov
inc
or
add
mov
sub
not
icebp
fwait
ja
pop
inc
int3
ret
cmp
dec
mov
jmp
popa
sbb
mov
movl
push
add
subl
sbb
pop
jmp
inc
fbld
sub
dec
fdivrl
cmpsb
lods
enter
fcomp
xchg
mov
sub
push
lea
es
cmpsb
xchg
int
gs
scas
jne
cwtl
pushf
test
pop
ret
push
in
cmc
mov
jp
sbb
cli
test
push
and
push
jne
idiv
outsb
sbb
rcrb
pop
xchg
addr16
in
hlt
dec
mov
out
push
rorl
xor
lea
repz
adc
push
testb
sbb
fists
test
sub
ret
xor
xchg
stos
loop
ja
addr16
push
jmp
nop
jmp
xchg
ljmp
cli
adc
dec
add
mov
dec
jp
scas
insb
out
cmp
add
xchg
add
and
push
xchg
or
stc
test
jmp
adc
insb
fisubrs
push
dec
mov
pop
or
cmp
sbb
cwtl
into
jg
sub
sbb
or
pop
into
pop
or
lcall
mov
and
pop
sbb
nop
aam
es
rclb
cmp
mov
push
adcb
mov
mov
mov
pop
jmp
or
leave
mov
dec
mov
mov
lret
arpl
mov
push
jb
push
sarb
xchg
xor
cmp
mov
push
lods
test
xchg
cmp
cltd
sbb
outsl
int
in
test
lret
in
out
push
data16
cmpsb
push
xchg
dec
inc
mov
inc
jmp
cmpsl
sbb
adc
lret
mov
mov
ret
xorb
jge
in
int3
cmp
out
addr16
mov
jl
rclb
adc
ret
push
pop
cwtl
enter
mov
lea
imul
jl
sbb
adc
addr16
aaa
ss
lods
jmp
in
clc
sub
jnp
mov
jbe
pop
xchg
jbe
mov
or
call
cli
lods
aas
addr16
push
pop
iret
adc
lret
lret
dec
lcall
cmpsl
ja
ret
popf
mov
daa
cmp
imul
mov
jno
pop
xchg
or
jl
adc
shll
movsl
orb
mov
cmp
adc
push
cli
testb
movsl
je
es
cld
cmp
dec
dec
das
insb
inc
ds
enter
pop
addr16
cwtl
add
fldt
cmp
loope
dec
iret
out
or
fmull
cmp
mov
mov
outsb
add
sbb
adc
jmp
jl
fsubrs
mov
mov
adc
push
ds
jae
jb
mov
or
push
imul
mov
js
fistpll
pushf
mov
dec
addr16
repz
mov
in
xor
ja
xor
in
lret
and
scas
fisubrl
mov
cmp
xchg
add
mov
fcom
mov
daa
popf
or
jp
mov
pushf
push
mov
push
fs
cmp
out
movsl
push
xor
sub
jge
insl
jl
mov
out
lret
mov
cmp
lahf
rcr
cltd
sbb
dec
push
push
pop
test
mov
pop
dec
dec
cmp
cmc
fisttps
not
inc
jmp
loopne
fdivs
mov
adc
addr16
sub
sbb
in
jae
aaa
jp
xchg
inc
enter
fs
gs
outsl
push
pusha
imul
sub
stos
out
push
lret
push
test
int3
movsl
dec
je
dec
push
sub
xchg
aad
mov
aam
popw
emms
push
mov
mov
push
push
cmp
sub
cmc
mov
jl
sub
pop
fdivrs
imulb
push
and
popa
sub
cwtl
fwait
pop
dec
xchg
pushw
push
pop
enter
mov
mov
add
add
into
jl
dec
push
in
mov
dec
loop,pn
jns
or
cmp
clc
jl
incb
push
fdivr
xor
lret
or
lcall
push
out
sub
xor
push
jmp
insb
push
cld
repnz
pop
mov
sub
stos
subl
cmpsb
ret
cmc
inc
enter
mov
cld
dec
xor
jg
cmp
aas
dec
loopne
adc
ljmp
stos
les
or
fsts
mov
push
stc
push
fsts
push
sbb
sub
in
rorb
mov
pop
arpl
jns
movsl
or
into
stc
lahf
mov
sub
ljmp
in
pop
fcoml
inc
roll
clc
sub
test
stos
push
gs
or
aaa
insb
jmp
jmp
jbe
mov
imul
not
sbb
fildl
sub
cld
pop
or
mov
outsb
leave
in
xor
sbb
dec
dec
jp
sbb
stos
or
jbe
sbb
je
repz
mov
push
xchg
jle
cmp
aam
sbb
jmp
ss
pop
cwtl
sub
xor
adc
jne
jnp
and
mov
sbb
sar
lods
sbb
int
inc
jecxz
jbe
mov
jmp
in
cmc
dec
les
insb
push
test
cltd
std
fsubr
pop
mov
cmp
sbb
ret
insb
int
sub
push
mov
jno
aas
movl
into
repnz
ss
pushf
test
cmp
lock
pop
mov
leave
pop
mov
push
add
not
mov
data16
xor
add
enter
out
xor
ss
sbb
mov
push
sbb
rcr
int3
or
insb
xorl
dec
sub
mov
or
popf
leave
test
xor
je
push
lret
or
mov
pop
cmp
inc
pusha
lcall
imul
test
mov
dec
fmuls
mov
test
sbb
sub
fstps
dec
mov
stc
lods
or
leave
adc
mov
dec
jl
lret
xchg
shrb
mov
adc
adc
loopne
cmc
and
es
mov
dec
out
pop
aaa
lret
into
mov
lret
out
cmp
mov
inc
push
sub
int
or
xchg
mov
and
js
repz
in
xchg
jnp
lret
cld
mov
xchg
repz
xchg
jp
je
adc
jb
push
movsl
aaa
dec
into
push
sahf
data16
int3
sub
mov
fsubrs
aam
lret
clc
dec
test
xchg
int
push
cmp
ret
mov
stos
mov
adc
lods
add
lahf
push
push
adc
call
or
xchg
int3
jl
inc
aad
xchg
cmpsb
push
data16
lret
imul
roll
xor
test
dec
movsl
mov
insb
fmull
ds
int3
mov
sbb
lret
sub
jbe
inc
orb
loopne
sahf
aad
pop
push
dec
xchg
lods
into
mov
mov
mov
cmp
mov
fmull
push
or
sbb
fcmovne
mov
in
mov
fs
xchg
sti
lret
xchg
add
clc
push
and
pop
push
cmp
push
mov
in
and
mov
ror
jnp
or
mov
push
into
dec
jmp
mov
or
cwtl
call
jbe
loopne
push
fisttpl
dec
fldcw
idiv
mov
push
dec
push
clc
sbb
mov
int3
mov
leave
hlt
xchg
dec
fsubp
mov
sub
push
xor
sub
lret
subb
push
xchg
push
sub
add
sbb
lods
push
out
aad
fimull
mov
mov
jmp
dec
dec
lahf
jp
imul
out
mov
sar
iret
lret
js
or
aad
lcall
sub
sub
rcll
rclb
mov
xchg
and
push
sbb
cmp
or
out
ss
push
enter
adc
jp
bound
dec
cmp
jl
insb
scas
fistl
cmc
xchg
xchg
jge
addr16
mov
movsb
stos
add
test
mov
rol
xor
ds
sbb
xchg
pusha
loop
js
cmc
aaa
int3
sbb
ret
pop
rolb
stc
fmull
mov
push
cmp
addr16
arpl
cmp
sbb
sti
or
mov
jbe
lds
mov
pop
mov
ss
repz
sarb
js
jl,pn
push
mov
mov
imul
cltd
stos
jbe
fcmovnbe
sub
in
repz
lcall
loop
les
inc
out
xor
xor
mov
pop
inc
push
dec
mov
push
ss
cmp
int
stc
push
imul
sub
imul
repz
xchg
cmp
mov
jne
into
dec
xchg
push
xor
add
leave
call
divb
mov
sbb
shrl
xchg
mov
repz
sbb
sbb
jns
out
pop
insb
push
mov
imul
add
pop
adc
rcrl
fstl
sub
out
imul
in
mov
jnp
cmp
sub
mov
cmp
jnp
xor
dec
mov
fwait
roll
jle
enter
jo
dec
daa
mov
leave
jne
xchg
lods
imul
mov
cltd
int3
or
jl
mov
lods
shrl
pushf
vmovss
lret
or
rcrb
int
dec
dec
popa
cmpsl
in
adc
inc
outsl
xchg
push
aam
adcb
test
lahf
push
shlb
jp
cmp
jge
fldt
aad
add
mulb
imul
out
aad
movsl
adc
jb
mov
icebp
stos
mov
int
por
pop
fisubrs
jnp
aam
iret
mov
xchg
jmp
es
pmulhw
leave
sbb
cmpsb
out
mov
pop
sbb
int3
stos
push
lcall
xchg
jp
inc
adc
lret
push
cld
mov
outsl
mov
mov
pop
jmp
fdivrs
hlt
imul
mov
sti
test
sarl
xchg
ss
mov
add
jg
test
test
adc
dec
sub
adc
cld
ja
out
push
jbe
or
lahf
aad
shrw
bound
into
sbb
stos
lods
mov
adc
mov
into
test
lcall
enter
mov
mov
or
lret
mov
int3
mov
inc
movb
cmpsl
push
and
incl
pop
push
fcoms
xchg
or
xchg
gs
into
mov
or
sub
insb
insl
stos
and
cli
mov
rorl
imul
lds
out
dec
xchg
mov
inc
das
push
pop
aam
push
sti
mov
push
sub
fildl
in
loopne
div
jmp
popf
push
test
add
test
push
pushf
cmpsb
jae
lret
jmp
insb
enter
jmp
movsl
pushf
movsl
pop
imul
fmuls
and
add
xchg
or
lret
ret
mov
addr16
rol
negb
cld
cmc
in
int
inc
fcmovnbe
mov
inc
imul
sbb
sbb
insb
lret
fs
xchg
aad
sub
fistl
lret
dec
pushf
mov
stos
push
lret
jp
mov
jge
pop
test
push
aad
xchg
in
xlat
mov
pop
pop
pop
lock
cmpsb
fdivrp
lcall
xchg
in
outsb
clc
test
data16
filds
inc
sub
cmp
sbb
loop
pop
inc
insb
aam
mov
out
negb
mov
mov
aad
es
imul
mov
dec
inc
pop
jge
mov
pop
andw
mov
or
int3
jns
lods
mov
stc
nop
adc
fdivr
dec
jo
add
jbe
inc
outsl
or
xor
or
dec
inc
mov
mov
push
sub
lcall
pop
mov
xchg
mov
fdivrl
test
repz
xor
int3
fwait
bound
aad
xchg
dec
jmp
movsl
jne,pn
stos
cmc
shrb
int
ss
push
mov
mov
adc
jnp
hlt
lds
sbb
nop
or
add
int
pop
pop
lods
into
pop
and
mov
sti
js
sbb
push
aad
adc
mov
or
out
sub
jbe
xlat
mov
leave
jns
stc
repnz
cmp
sti
js
stos
mov
jnp
lret
mov
ds
sub
test
and
adc
mov
pop
ret
xchg
es
cmp
mov
mov
adc
out
sbb
mov
adc
cli
sub
int3
ret
loop
lcall
mov
mov
dec
push
std
fcomps
xlat
inc
and
js
mov
sti
pusha
xchg
xchg
into
ret
pop
inc
int3
shlb
jmp
rolb
pop
jbe
mov
xchg
push
mov
lret
pop
mov
das
sub
fwait
rcll
negl
dec
out
adc
fmuls
inc
scas
push
push
data16
mov
mov
mov
or
mov
idivb
push
cmpsl
sbb
pop
in
mov
inc
sub
and
faddl
sub
inc
dec
sbb
js
jp
xchg
dec
arpl
enter
int3
xchg
ret
insb
iret
mov
aad
mov
aas
repz
gs
pop
insb
adc
or
cli
out
mov
xor
repz
jecxz
jbe
dec
out
push
mov
mov
std
fwait
sbb
xor
add
jecxz
mov
or
lret
out
lret
sub
sub
int3
in
fisubrl
inc
into
enter
push
mov
data16
int
es
rol
cmp
or
cmc
mov
jne
mov
push
and
add
push
daa
repz
imul
xor
mov
inc
into
xchg
or
ret
adc
out
sub
stos
cs
mov
push
dec
adc
push
cmc
pop
sub
out
push
mov
adc
je
xor
dec
imul
scas
imul
dec
jbe
vandnps
mov
ss
or
dec
cmp
inc
pop
fidivrl
push
inc
lock
movsl
push
sub
push
fcomps
sub
lret
mov
pushf
fisubrs
add
adc
jnp
push
cld
jbe
call
jmp
dec
xchg
jl
icebp
jmp
mov
mov
adc
pop
cmc
pop
xor
add
loopne
es
cmc
clc
sti
jae
jge
arpl
sbb
inc
insb
pop
sub
into
push
cmc
xchg
push
out
fcoml
xchg
jbe
jb
test
out
jl
sbb
dec
jg
inc
sub
cmp
push
incb
jbe
add
push
fs
mov
cmpsb
outsb
or
int
stos
push
rol
cmp
ljmp
sub
faddl
aas
ja
pop
mov
icebp
xchg
stos
insl
mov
push
push
data16
inc
xchg
out
test
add
iret
pop
in
jl
insb
adc
jp
fstps
inc
roll
cmpsb
fs
cs
loopne
dec
sub
dec
jp
lods
fwait
int3
test
mov
xor
lds
not
inc
sti
shlb
or
test
xchg
mov
jbe
les
jo
mov
dec
lds
jmp
cmp
scas
pushfw
jg
fisttpl
mov
adc
cmc
cltd
dec
outsl
jbe
ss
jl
fsts
test
cmp
jbe
add
or
int3
jb
outsl
jge
mov
out
add
xchg
lret
cwtl
not
insb
sub
push
and
sub
dec
jge
mov
pop
int3
jbe
shll
out
or
cwtl
lret
inc
in
and
sub
jnp
out
into
mov
and
sub
test
xchg
aaa
adc
fwait
lcall
mov
push
stos
sub
or
push
dec
jno
lock
push
and
adc
jmp
mov
mov
xlat
in
mov
jecxz
leave
inc
push
xchg
loope
test
sbb
mov
imul
mov
int3
sbb
mov
stos
and
lods
jl
or
jle
sarb
lcall
push
dec
dec
loop
fwait
loope
xor
push
and
ss
fcoms
sbb
inc
xchg
mov
std
out
out
jne
push
out
jmp
mov
sub
cld
pop
sarb
mov
add
rcr
cmp
jae
fmuls
dec
insb
inc
cmp
stos
fsincos
push
pop
in
xchg
xchg
cmp
test
cmp
or
cmpsb
push
push
or
cmp
or
int3
ljmp
mov
dec
imul
or
xor
push
cmpsl
push
clc
lds
out
mov
scas
dec
repnz
or
lahf
adc
mov
mov
lds
cmc
mov
out
cmpsb
lret
mov
push
mov
sbb
jmp
stos
push
xchg
or
insb
fs
pushf
data16
mov
cmp
movsb
mov
dec
mov
out
or
xor
xor
cmc
xor
aaa
movsw
or
mov
xchg
lret
jne
fmull
or
adc
loop
mov
pop
cmp
sub
lret
push
stos
jmp
fwait
ret
mov
jae
testb
xchg
jb
popf
roll
aad
push
dec
jnp
sti
pushf
mov
fwait
out
cmp
sarl
addl
pop
xchg
adc
pop
lds
jns
xchg
pop
aad
imul
imul
int
into
mov
test
std
in
mov
xchg
int3
mov
cmpsb
aas
push
sbb
fnsave
inc
cwtl
cmp
jp
shll
orl
stos
push
popf
lret
mov
fildl
lret
scas
sti
mov
or
push
out
push
ret
cmpsb
cmp
aad
mov
inc
dec
push
nop
out
sub
and
das
pop
or
xchg
mov
jnp
addr16
vunpckhps
mov
cmpsb
xchg
mov
out
fwait
mov
aam
mov
stos
adc
es
arpl
cli
jae
cwtl
jbe
dec
mov
cli
and
rol
in
xchg
sbb
dec
stos
inc
jbe
fwait
loopne
icebp
push
or
xchg
aad
mov
lods
push
push
inc
imul
aad
xchg
dec
adc
dec
orb
push
sub
data16
adc
shlb
mov
testb
jb
aas
stos
jnp
cmp
pop
mov
sti
lcall
or
lods
push
in
xchg
mov
data16
xor
and
push
ss
and
dec
insl
jmp
or
lret
fstpt
dec
pop
lret
inc
xchg
mov
test
cmp
iret
push
cmc
out
std
ret
mov
cmpsl
imul
mov
xchg
int
mov
or
mov
loope
and
lods
ret
fnstsw
mov
dec
cmp
pop
addr16
stos
push
insb
fistl
test
xor
out
push
stc
push
addr16
scas
sub
fstpt
ror
insb
pop
or
clc
jl
jno
sbb
inc
fcomps
inc
mov
cmpsl
aad
jbe
fwait
mov
xchg
fwait
jb
js,pn
out
or
xlat
scas
mov
mov
xor
sti
mov
xor
lret
push
pushf
cmpsb
aad
in
add
dec
fsubrs
and
push
imul
mov
push
lret
xchg
lret
repnz
or
sti
push
lret
mov
push
push
cs
repz
insl
imul
jne
xor
jnp
mov
sbb
pushf
push
inc
cld
xor
xor
in
sti
push
sub
es
jae
ret
roll
push
xchg
mov
dec
lret
aam
out
sub
cld
loope
cwtl
sub
push
jmp
sub
rcll
push
ljmp
mov
jle
gs
movsb
imul
mov
dec
jne
call
movsl
pop
xor
xchg
enter
movsb
movsl
fcmovne
insb
arpl
mov
inc
sti
mov
std
dec
jecxz
pop
add
mov
rcrb
mov
or
notl
dec
push
mov
fwait
xlat
dec
into
xchg
pop
stos
rcl
sub
dec
mov
jbe
lds
push
fsubr
xchg
push
addr16
iret
xchg
pop
push
xor
inc
sti
xor
fsubrl
pop
lock
or
cmp
mov
push
out
mov
and
jl
call
mov
mov
movsl
add
aaa
xor
jb
jbe
rcr
fwait
test
pop
xchg
mov
jmp
dec
ljmp
repz
test
sti
add
out
fldt
repnz
decl
sbb
fwait
push
es
ss
movsl
test
pop
inc
shll
lret
cmp
xchg
cli
mov
xchg
jbe
mov
test
in
and
push
mov
mov
dec
jl
mov
addr16
sub
xchg
mov
aad
inc
ja
fnstenv
push
jne
sbb
jge
mov
mov
pop
lret
es
addr16
in
aam
adc
das
push
mov
out
sub
mov
cmp
inc
loop
push
sti
xchg
aas
insb
mov
push
sbb
mov
or
push
add
inc
scas
and
mov
sub
jns
dec
lea
mov
mov
mov
out
jl
sub
repz
and
gs
lcall
jae
rorl
sbb
loopne
lea
push
data16
mov
es
mov
dec
dec
nop
out
lret
pop
dec
test
mov
mov
cmpsb
addr16
shrb
mov
push
lret
and
jbe
push
fisubl
int
cmp
loop
cmp
sti
int
dec
xlat
sbb
or
cmc
cli
sub
pop
cmc
push
imul
mov
mulb
in
and
bound
xchg
xchg
sub
mov
test
fmull
xchg
shlb
cld
sbb
movsl
pop
divb
lds
outsl
mov
lds
jno
mov
push
cld
imul
out
push
xchg
mov
nop
mov
leave
sbb
push
pop
int
pushf
jg
rcrl
xchg
dec
daa
mov
dec
xor
dec
push
out
ss
in
dec
xor
mov
gs
adc
ds
xchg
sti
cmpb
lea
into
sub
jnp
movsl
movsw
sbb
adc
imul
sub
push
push
dec
xchg
jne
pop
adc
bound
add
sbb
pop
fdivl
je
les
int3
mov
es
jno
inc
sbb
insb
adc
or
out
vpcmpeqw
sbbl
mov
outsb
cmp
jno
jl
lret
pop
or
fisubrs
es
push
data16
scas
movsb
lret
inc
stos
in
cmp
mov
in
ja
jl
addr16
xor
sbb
pushl
mov
jecxz
in
xchg
jmp
clc
sub
loopne
push
mov
fcompl
mov
and
fdivrl
in
pushf
adc
icebp
lret
mov
inc
xor
xchg
and
adc
lds
adc
arpl
jecxz
mov
mov
lcall
add
test
int
inc
loope
jecxz
and
fwait
mov
rorl
cmp
add
icebp
cmp
fmul
mov
dec
lret
push
insb
sbbl
out
mov
xor
cmp
mov
ss
nop
in
lds
and
add
cmp
pop
lret
push
jbe
adc
jp
inc
cmp
daa
stos
cmpsb
lret
aad
mov
adc
imul
dec
sbb
dec
int3
aam
jnp
movsb
imul
mov
jbe
or
into
insb
push
or
pop
push
das
stos
cmp
sub
pop
call
adc
sarb
outsl
jnp
es
mov
adc
xchg
fsubp
push
add
mov
aam
cmp
out
mov
inc
ss
call
ja
adc
jmp
mov
mov
sbb
sub
mov
cmp
mov
mov
dec
fldcw
ljmp
sbb
daa
jmp
xor
push
in
cmp
fwait
repz
lods
shrb
add
call
pop
jne
sub
lahf
mov
out
in
xor
fcomps
ret
xchg
movsl
gs
xchg
cmp
dec
lods
dec
cmp
test
inc
sti
cmp
xlat
dec
cmpsb
cmc
jg
aad
inc
popf
gs
xchg
inc
fcompl
push
mov
out
movsl
out
dec
notb
outsb
xlat
in
xor
sti
lret
in
stos
int3
push
insb
imul
mov
inc
out
jnp
stos
xchg
popf
jne
movsl
mov
in
cmpsb
int3
lds
rcl
insl
xchg
adc
dec
jbe
mov
jbe
sbb
sub
dec
mov
xchg
fs
push
xchg
sti
rcl
lock
mov
gs
pop
test
add
sub
out
into
dec
add
mov
jl
jbe
dec
mov
add
inc
in
and
push
mov
push
es
cmp
adc
cmp
rorb
push
pusha
not
jmp
jl
cmp
or
addr16
xchg
in
int3
mov
lret
es
popf
lret
mov
cltd
arpl
repz
in
int
mov
cmc
xchg
mov
xchg
icebp
gs
jne
jbe
rcr
in
bound
shll
sub
test
jl
mov
ds
push
imul
adcb
jne
xchg
call
cwtl
int3
lret
shll
push
ds
repz
jle
call
push
fdivl
jns
jbe
in
cltd
pusha
jp
push
xor
mov
mov
movsl
cmc
lcall
inc
jp
in
jno
dec
mov
pop
mov
sti
mov
sub
nop
jnp
mov
push
cmp
jmp
fstpt
ror
xlat
mov
mov
sahf
sub
out
ss
in
add
xchg
mov
cmc
or
xchg
loope
sbb
or
movsl
inc
mov
repnz
out
pop
sarl
xchg
ret
out
mov
push
add
cmp
repz
cs
ret
push
push
call
xchg
inc
cmpsb
mov
inc
les
push
dec
imul
in
sbb
repnz
cwtl
pop
push
pop
rorb
push
or
cmp
push
push
cmp
push
movsl
sbb
movsl
loopne
jge
jb
cmp
push
or
fbstp
aad
xchg
into
aaa
imul
lret
xchg
iret
dec
xchg
in
mov
incb
mov
xchg
jecxz
cwtl
xlat
cmp
cmpsb
lods
jbe
dec
sbb
pop
push
cmp
push
loope
out
push
jbe
aad
je
loop
cmpsb
push
lret
lods
es
or
stos
inc
movsl
dec
insb
adc
fistl
lahf
cmp
xor
xor
addr16
out
jbe
xchg
cwtl
data16
lahf
push
out
fwait
jo
ds
push
dec
adc
es
mov
mov
loope
pop
or
pop
inc
outsb
dec
dec
aad
cltd
pop
pushf
lret
loop
in
movsl
es
into
and
or
mov
movsl
sub
movsl
ss
into
fwait
sar
stos
scas
sub
dec
push
pop
push
cmp
mov
sbbl
mov
xor
add
push
call
xchg
outsl
push
adc
mov
inc
sub
imul
pop
sbb
mov
or
insb
adc
jecxz
outsl
pushf
aam
or
sbb
sub
mov
push
or
gs
call
mov
pop
jge
xchg
mov
pushf
movsb
mov
stc
fldenv
jp
clc
and
sub
xchg
loopne
jno
addr16
repz
fists
push
outsl
xchg
notb
je
lret
jmp
mov
pushf
negl
push
hlt
fcompl
leave
call
lret
pushf
bound
dec
cmpsb
adc
fcomps
clc
adc
add
mov
xlat
mov
push
jnp
pop
test
jb
mov
cld
out
inc
in
sub
mov
jle
inc
or
dec
pop
lret
push
xchg
xor
add
mov
lret
xchg
xchg
mov
arpl
and
cltd
add
psubsw
lods
insl
pop
popf
inc
shlb
mov
push
push
addr16
js
jbe
push
arpl
xor
xchg
xchg
jb
repnz
mov
into
fisubs
push
pop
mov
pop
pop
leave
mov
lahf
jns
xor
repz
rorl
dec
cmc
mov
subl
jmp
in
adc
dec
push
shll
repz
popf
outsl
lret
cmp
or
adc
jnp
sub
mov
dec
jg
inc
xor
into
jne
rcr
cmp
push
cmp
push
mov
mov
out
xchg
movsb
xchg
addr16
inc
imul
out
xchg
xor
sarb
iret
jmp
stos
add
mov
pop
std
cld
movsl
les
pop
mov
rcr
enter
jg
push
push
inc
cmpsb
dec
xchg
repz
rcll
gs
xor
fwait
xchg
out
dec
les
sti
lcall
push
pushf
jno
or
dec
mov
in
sbb
adc
mov
push
xor
adc
je
pushf
or
lea
out
cmpsb
sbb
addb
xor
lret
scas
push
mov
jbe
jnp
jb
outsb
mov
cmp
cmp
int
pop
sub
sti
jge
mov
lret
push
mov
stos
mov
es
movsl
addr16
aaa
testl
mov
cli
into
cs
cmp
dec
jecxz
or
insb
mov
pushf
xor
cmp
lret
movsl
jbe
push
dec
lret
int3
mov
iret
fldlg2
inc
jbe
test
outsb
leave
mov
js
ret
mov
lea
ret
jbe
lret
imul
fimuls
mov
mov
pushf
adc
pushw
insb
add
add
out
test
sahf
out
cmp
gs
in
inc
sub
or
sbb
mov
int3
inc
mov
mov
stos
jno
pop
sub
jne
sbb
jbe
lods
inc
loop
or
dec
fcoms
out
sti
pop
mov
pop
data16
lret
bound
inc
std
fsubs
jo
mov
lret
lahf
aad
cmp
mov
inc
lret
add
cld
sub
testl
sarl
mov
std
xor
jl
sbb
pop
in
imul
push
or
mov
or
or
shlb
sbb
out
push
mov
cmc
retw
fadds
xor
push
pop
mov
mov
repz
push
pushf
shrl
mov
jecxz
mov
fcomip
mov
xor
outsb
or
pop
cmp
mov
xchg
add
movsl
mov
cld
js
mov
cmp
jns
sub
cmpsl
dec
in
out
pop
sbb
mov
push
sub
fwait
push
adc
adc
bound
mov
cwtl
inc
test
data16
dec
dec
sbb
ds
in
mov
xchg
pop
sub
popf
or
fdiv
shlb
lea
xchg
jnp
adc
testb
jbe
mov
enter
xchg
dec
sub
divb
and
es
dec
adc
sbb
mov
adc
or
dec
imul
mov
inc
mov
or
adc
ror
mov
add
xchg
leave
es
pop
fwait
inc
jmp
lret
inc
pop
out
mov
adc
lods
aam
push
cmp
jl
jmp
push
fwait
outsb
insl
push
xor
scas
sbb
inc
lds
sub
jae
insb
in
xchg
mov
gs
stos
repz
xor
jns
cwtl
imul
or
mov
jae
jo
xchg
imul
test
stos
push
aad
and
fdivrs
insl
clc
push
shlb
jo
test
lret
mov
inc
jp
sub
mov
xchg
addr16
ret
push
jbe
inc
cld
or
pushf
adc
mov
out
mov
addr16
pop
inc
and
lret
dec
ss
and
into
jl
cmpsl
xchg
push
test
lcall
cmpl
fsubrp
mov
test
pop
pop
jecxz
test
pushf
jns
out
int3
cmp
iret
pop
push
mov
mulb
inc
inc
out
lds
pop
repnz
pop
push
pop
jns
mov
outsb
mulb
mov
mov
and
fcomi
mov
pop
jne
sub
fiadds
mov
jmp
add
jne
pop
filds
mov
scas
push
das
idivb
es
add
sub
test
add
cmp
and
push
adc
daa
mov
arpl
out
lret
lret
scas
or
and
and
dec
mov
sbb
fistl
jl
pop
stos
sub
jmp
cmp
jnp
adc
mov
cmc
outsb
add
imul
xchg
jbe
cbtw
push
cmc
es
mov
fwait
jle
push
sbb
aaa
or
inc
pop
inc
sti
xchg
repz
jbe
mov
xchg
pop
into
mov
popa
push
add
xchg
addr16
outsb
lods
sarb
movb
dec
or
mov
mov
insb
sbb
mov
and
stc
dec
cmp
mov
jns
mov
test
sarb
fisubl
gs
ss
out
call
push
sub
test
addr16
test
fxch
pop
push
lods
cmp
lods
dec
and
in
test
mov
mov
call
cmp
mov
in
insb
and
pop
or
sti
sub
popf
loop
aam
lds
xor
cmpsl
enter
mov
fwait
into
iret
xchg
cmp
fldl
leave
push
les
xor
push
bound
xchg
faddl
sbb
push
sbb
pop
and
inc
sti
out
sub
imul
out
push
and
push
push
lret
ss
xchg
popa
test
fdivp
cmp
int
inc
int3
and
iret
movb
sti
mov
stos
pop
push
sub
dec
scas
in
xchg
cmp
popf
or
stc
cld
and
sub
outsl
insb
movsl
mov
seta
int
xchg
xchg
sub
ja
dec
inc
jne
movsl
sti
adc
mov
or
sub
call
aad
push
jmp
ss
sbb
ret
cltd
fcompl
cmp
xlat
add
cld
mov
jmp
mov
sub
pop
iret
dec
cmp
cli
mov
push
xchg
call
xor
xor
in
inc
jne
sti
pop
jl
and
cmp
fcoml
sbb
and
jmp
sub
jae
ss
push
xchg
and
inc
jp
jle
mov
repz
xor
pusha
xchg
out
lods
fwait
push
sbb
dec
mov
dec
iret
imul
mov
pop
cmp
and
jmp
sti
fmull
pop
test
mov
pop
mov
rclb
int3
mov
xchg
xor
xor
lods
or
insb
movsl
fprem1
xchg
in
or
lret
jmp
pushf
mov
lcall
cmp
sbb
mov
dec
int3
enter
xchg
cli
pop
xchg
fcomi
call
fwait
in
aad
add
ret
adc
lds
inc
test
lahf
jae
ja
xchg
aad
cmpsb
and
out
mov
sbb
jl
adc
adc
cmp
mov
int3
xchg
cld
ja
jl
jmp
jnp
not
push
jbe
cmc
sbb
scas
popf
int3
xor
mov
pop
lea
ss
idivb
shll
cmp
sbb
push
cmp
cmpsl
ja
sub
push
into
inc
pushf
cwtl
fisttpl
aad
shl
negb
sub
inc
inc
sarb
mov
dec
sub
adc
rorl
es
es
bound
mov
cmp
jns
xor
in
popa
aam
fcomi
dec
push
aam
sub
test
mov
xlat
lds
push
jmp
push
jne
mov
fstpt
mov
arpl
mov
pop
jl
rorl
add
jbe
adc
pop
xchg
nop
insw
mulb
jmp
and
mov
fmuls
fwait
mov
out
cmp
sub
pop
pop
fxch
xchg
notl
stos
mov
test
fcmovne
leave
and
sbb
mov
add
in
lret
xchg
push
shlb
test
jne
inc
jmp
sbb
fmuls
cli
mov
xchg
insb
cmp
inc
cmp
dec
cmp
mov
pop
lods
aas
aam
adc
sub
lret
out
xchg
iret
mov
enter
mov
jne
out
push
data16
xlat
movsl
mov
fwait
out
or
aam
in
repz
sub
in
sahf
mov
dec
iret
movb
cmp
sub
push
sbb
ja
push
into
mov
in
add
mov
fmul
xchg
test
shlb
dec
pop
nop
int
lds
iret
in
push
xchg
insb
adc
mov
outsl
imul
dec
cmp
xchg
and
aam
push
xchg
push
mov
dec
lock
adc
mov
in
inc
push
pop
mov
push
sub
dec
or
fdivrl
lods
mov
sbb
pop
adc
xor
lcall
and
pushf
cmp
mov
idiv
xchg
je
aaa
xchg
inc
dec
xchg
or
mov
push
fidivl
out
imul
int
inc
cmp
add
sbb
mov
mov
outsb
cmp
dec
rorl
pop
ja
pop
mov
repz
sbb
push
movsb
addr16
aaa
jl
jne
sbb
scas
mov
imul
xchg
int3
mov
into
add
loop
ret
out
xchg
fsubl
mov
out
aam
rcl
sub
jmp
jle
out
clc
lret
data16
aaa
popf
fcmovnu
sbb
das
mov
es
jnp
xchg
lcall
inc
jmp
data16
scas
jnp
lret
ss
inc
cmp
xchg
imul
shrl
aad
outsb
pop
fwait
into
pop
hlt
jmp
stos
out
jl
pushf
adc
gs
call
inc
mov
adc
ds
sub
dec
mov
fwait
adc
sub
sbb
or
cld
push
and
in
mov
or
adc
dec
and
aas
outsb
lds
int3
ss
mov
stos
das
fldt
mov
jnp
negb
addr16
pop
vunpckhps
aam
xchg
xchg
xchg
push
push
sbb
cmp
dec
dec
jne
test
sbb
mov
mov
push
popa
fsubrl
sub
in
jbe
data16
sarb
xor
fsubr
sub
push
sbb
ds
test
ss
cmpsb
cs
sahf
data16
pop
dec
imul
and
out
fcmovnu
jl
insb
repnz
inc
dec
add
mov
dec
movsb
mov
push
xor
fisubrs
push
or
cmp
xchg
pusha
mov
movb
adc
dec
mov
psadbw
imul
scas
dec
lods
mov
leave
dec
addr16
dec
adc
rorl
add
lret
lcall
jle
and
xchg
inc
js
aad
xchg
gs
jno
pop
mov
sti
or
dec
xchg
imul
push
cmp
sub
inc
insb
jge
pop
cmpsb
pushf
outsb
ficoms
lcall
pop
sbb
sub
or
cwtl
sub
jnp
mov
push
stos
testb
jno
sbb
sub
jbe
dec
int
add
push
xchg
lds
addr16
cmc
sub
jmp
stc
or
mov
jmp
fcmovne
mov
push
int3
xchg
aaa
fnstcw
mov
pop
out
jnp
mov
jbe
stos
sti
xor
mov
mov
xor
out
rcl
and
inc
xchg
ljmp
jbe
dec
in
aam
sti
mov
cmp
jb
add
mov
xchg
inc
push
pop
out
mov
or
inc
push
xorl
int
stos
pop
or
lret
jge
jno
sub
mov
or
xchg
inc
push
fbstp
adc
sbb
jae
addr16
or
lock
imul
out
stc
sub
or
dec
jecxz
cmp
aam
jg
pop
push
pop
fwait
pop
imul
jb
leave
mov
and
xchg
es
add
fwait
push
out
push
mov
jno
xchg
pop
pop
fnstenv
lret
imul
mov
xor
ja
xchg
mov
hlt
adc
inc
mov
xchg
pop
addr16
mov
dec
xlat
jb
jge
addr16
test
aad
jmp
mov
inc
dec
xchg
mov
adc
cmp
stc
es
pop
mov
out
lods
in
aam
jnp
imul
icebp
or
mov
in
dec
js
add
mov
sbb
repnz
xlat
cwtl
xor
xchg
inc
jb
or
xchg
push
leave
shlb
out
int3
and
mov
or
dec
sbbl
gs
xchg
idiv
cmp
cmpsb
dec
ficoml
push
inc
out
push
xchg
es
out
mov
nop
adc
push
imul
or
sbb
mov
jne
lods
cwtl
push
xchg
or
in
push
mov
inc
test
jmp
dec
out
imul
cmp
inc
shlb
xchg
es
mov
imul
mov
lods
lods
stos
xchg
or
inc
fwait
ret
insl
xchg
testb
inc
pop
or
xchg
ss
sub
push
sbb
imul
fwait
or
dec
xchg
lret
popa
dec
jg
out
repnz
mov
jne
outsl
mov
inc
into
push
jb
arpl
daa
xchg
sub
xchg
das
movsl
sti
out
fisubs
cmp
imul
popa
arpl
ja
xchg
mov
push
xor
sub
push
aad
push
stos
mov
aam
sbb
repz
push
cmp
sbb
cmp
jns
cld
mov
push
adc
push
enter
ss
inc
mov
jne
jge
fistl
or
add
sti
add
insb
rolb
pusha
es
push
insl
out
imul
dec
aam
and
push
fmulp
adc
invd
or
lret
cmpsl
dec
inc
cmp
push
int
push
filds
test
or
pop
dec
xor
hlt
es
mov
sub
xchg
test
imul
add
dec
mov
and
cmp
bound
mov
push
pop
mov
jnp
ljmp
aam
mov
mov
insb
mov
es
jbe
dec
ret
in
into
int3
movsl
push
out
movb
rcll
and
jle
adc
int
iret
lods
inc
test
fidivs
pop
pop
mov
pop
pop
pop
arpl
mov
dec
xchg
out
lea
jnp
fdiv
imul
dec
push
cmpsb
cmp
sub
pop
xor
idiv
jp
or
cmc
pop
push
fnstenv
dec
pop
adc
pop
push
cmp
fwait
lods
jnp
adc
xchg
ss
xchg
outsb
cmpsb
ljmp
cmpsl
inc
repz
ss
push
lods
es
out
add
jnp
fwait
test
sbb
push
dec
sar
lods
jmp
sbb
mov
es
push
pop
sbb
fstps
sub
sahf
cmp
jnp
inc
out
shl
test
mov
xor
stc
xchg
aad
push
xchg
fsubs
mov
out
pop
xor
mov
les
leave
mov
xor
dec
sti
insl
pop
or
imul
test
xchg
test
mov
fwait
mov
adc
out
xor
das
aas
out
pop
notb
cmp
inc
shr
in
jg
fbstp
xchg
loop
or
or
fwait
out
decb
sub
repz
ljmp
mov
out
mov
movb
flds
ror
cltd
imul
mov
dec
sbb
inc
push
and
jb
jp
rorb
push
mov
push
jbe
sti
es
dec
pop
jbe
icebp
cmpsb
and
fcmovbe
rclb
notb
xor
aas
in
jnp
mov
nop
outsb
inc
mov
lret
sbb
sub
rcr
imul
out
sbb
mov
mov
xor
mov
iret
push
out
push
jg
es
xchg
mov
addl
mov
xchg
testb
call
push
roll
or
scas
sti
dec
std
fcos
rorl
sub
int3
or
clc
pop
add
mov
mov
int
out
inc
es
dec
adc
sbb
roll
jb
outsb
push
jp
scas
xlat
data16
out
mul
es
dec
jbe
or
fwait
xor
jbe
out
jno
js
or
int
loop
push
pop
test
faddl
pop
push
pop
mov
xchg
pop
jne
inc
call
push
lods
lret
movsl
imul
movsb
dec
xchg
mov
imul
out
out
dec
out
mov
aad
jle
andl
roll
incb
adc
iret
mov
adc
clc
cmpsb
dec
imul
jnp
jne
xchg
pop
pop
addr16
mov
jb
mov
mov
dec
mov
cmp
mov
psubsb
addr16
jp
data16
inc
and
xchg
testb
out
sti
jnp
mov
sub
cmpsl
lods
mov
cmc
mov
push
pop
dec
and
dec
stos
push
fdivrs
xchg
orb
out
shlb
inc
lods
dec
sub
js
sub
xchg
jbe
enter
pop
push
testb
sbb
aam
pop
int3
dec
clc
jnp
sbb
into
mov
mov
daa
aaa
and
jbe
jnp
jb
in
jbe
add
push
xchg
out
int
mov
or
iret
mov
xor
popf
or
int3
stc
push
jnp
imul
add
cli
dec
nop
outsb
mov
outsb
adc
movl
nop
jnp
out
mov
aad
es
and
inc
sbb
mov
sub
fldcw
fwait
stos
cmp
or
rcrb
in
sti
mov
adc
repz
int
push
mov
xchg
adc
out
mov
xor
jnp
push
outsl
push
or
mov
out
sub
sub
jge
cmpsb
jbe
xchg
outsb
push
jp
stc
inc
aaa
sub
outsb
or
idivb
gs
test
push
jnp
push
or
mov
sarb
adc
dec
cmp
ficoms
out
fiaddl
dec
shll
int3
push
mov
or
jae
dec
test
cmpsl
or
repnz
out
push
in
cli
mov
mov
add
into
cmpsl
out
addr16
jbe
mov
xlat
outsb
xchg
popf
jg
and
push
push
jnp
imul
inc
mov
cmp
xor
xchg
cmpsl
add
or
cwtl
push
rol
push
xor
sbb
pop
or
cli
sub
adc
orb
or
arpl
imul
push
out
mov
or
dec
pop
mov
lret
sbb
orl
gs
push
icebp
jbe
out
ret
dec
inc
es
cwtl
xchg
cwtl
push
cli
xor
adcb
fwait
push
decb
loop
mov
pop
mov
imul
lret
xchg
or
mov
dec
js
jb
pop
jle
mov
ljmp
popa
fistl
adc
sbb
pushf
ja
xchg
cmp
lock
xchg
mov
movsl
jp
enter
xor
scas
jne
xchg
outsl
out
mov
movb
insb
addr16
jbe
xor
outsb
add
jle
jp
sbb
lret
mov
sub
nop
push
or
sub
sub
outsb
cltd
fwait
vpmaddwd
inc
cmp
in
iret
sbb
icebp
das
pushw
jbe
jbe
jbe
jbe
jbe
jbe
jbe
add
cmp
sahf
fwait
cmp
mov
lcall
icebp
aaa
dec
aas
out
iret
jmp
jb
outsb
push
jp
xchg
rorb
pop
xor
fildll
jnp
repz
push
aam
push
testb
or
xchg
cli
testb
jecxz
movsb
lods
mov
lock
cmp
fwait
and
popf
cmc
movsl
inc
insl
ja
xor
sub
fwait
cmpsb
imul
jnp
or
dec
enter
pop
out
or
add
and
cwtl
out
cmp
push
lods
dec
shlb
mov
sbb
rcr
jp
adc
inc
fidivrl
aad
out
mov
cmp
sub
pop
aaa
fnstenv
aam
mov
inc
lock
pop
dec
xchg
xchg
push
push
cmpsl
loopne
inc
xchg
hlt
clc
jecxz
aaa
inc
dec
jmp
int
jmp
cld
es
adc
mov
cmp
push
loop
setnp
dec
jo
into
push
or
mov
push
xchg
push
sahf
push
pusha
push
adc
cwtl
mov
push
pop
mov
dec
xor
pop
addr16
xlat
repz
mov
movsb
inc
add
cmpsl
or
pcmpeqd
sub
xor
lea
push
mov
jnp
sar
out
xchg
in
push
xchg
testb
inc
or
fiadds
add
testb
cmpsb
push
in
mov
out
jnp
imul
cs
call
push
repz
sub
mov
xchg
cmpsb
mov
and
fdiv
mov
out
mov
adc
jbe
push
fidivl
mov
ret
mov
xchg
push
int3
data16
rcll
cmp
xchg
cmp
xchg
sbb
mov
xlat
loop
in
in
cwtl
sub
es
into
xchg
dec
out
mov
mov
adc
scas
or
dec
or
mov
das
add
cwtl
cmp
call
adc
rcrl
test
or
mov
adc
xchg
push
bound
int3
mov
jg
lock
paddd
sbb
dec
sub
pop
xchg
repz
xchg
lret
pushf
cmp
xchg
pop
popf
jmp
xchg
jae
adc
xchg
mov
int
cwtl
fwait
pop
push
dec
push
sbb
out
dec
xor
sub
lock
scas
pop
push
push
dec
pop
mov
adc
imul
cld
jnp
jbe
out
arpl
inc
leave
sbb
loope
imul
imul
call
add
addb
push
ljmp
cli
js
mov
fldenv
pop
stc
push
es
mov
rorl
or
int
test
aam
mov
fcoms
xor
xchg
les
mov
sbb
or
jbe
jbe
es
mov
mov
jle
inc
lds
inc
xchg
push
add
cli
jp
lret
cld
adc
push
xchg
dec
push
mov
push
test
mov
add
ficompl
push
add
mov
push
imul
push
inc
inc
out
cltd
jnp
sbb
aaa
es
sbb
aaa
rolb
test
mov
fstl
mov
sub
pop
jo
fisubrl
in
pop
push
out
pop
nop
fstps
adc
loope
in
pop
je
fcoml
pop
sti
std
and
adc
popw
inc
dec
push
stos
mov
aad
scas
push
cmp
into
out
mov
lods
xchg
rcll
add
cmp
jl
ficoml
aaa
sbb
ljmp
psubusw
shlb
dec
push
loop
jp
cwtl
popa
dec
xchg
pop
lock
xor
pop
mov
sbb
xor
inc
sbb
insl
mov
jge
test
xchg
xchg
adc
in
mov
scas
stos
lods
jb
mov
xchg
adc
xchg
jb
jbe
jbe
ss
mov
insl
int
pop
gs
mov
std
pop
or
bswap
xor
push
scas
scas
popa
push
jae
xor
add
or
dec
enter
scas
push
or
lods
nop
xorl
pop
xlat
leave
mov
jb
xchg
mov
bound
mov
imul
inc
jge
nop
adc
repz
and
lds
insb
je
dec
in
cmp
push
fwait
xchg
or
fimull
sub
dec
jmp
in
imul
mov
jbe
iret
push
ljmp
in
pop
push
mov
out
pop
dec
fiaddl
jnp
xchg
or
xlat
in
ja
add
movsb
int3
xor
mov
int3
adc
or
dec
xchg
dec
dec
mov
mov
or
sub
lods
jb
pop
mov
mull
push
mov
push
adc
jmp
pop
xchg
mov
xchg
or
ds
rcr
cli
rcrb
jo
shlb
xchg
cwtl
imul
mov
and
jbe,pt
inc
cmp
push
adc
adc
mov
iret
dec
jae
dec
test
dec
xchg
ljmp
mov
fnstcw
mov
cld
sub
in
mov
push
fnstenv
rcr
pop
fldt
scas
cbtw
imul
push
int3
and
aas
mov
out
test
subb
shlb
mov
fidivl
negl
in
xor
std
in
jbe
insb
mov
imul
outsb
lret
mov
jb
mov
es
in
lods
mov
cmp
add
mov
adc
daa
cmc
jge
dec
jge
nop
jbe
iret
scas
xor
push
sub
lret
add
fstpl
pop
popf
sub
xchg
jnp
sub
aaa
addr16
aaa
cld
sbb
or
test
in
xchg
jmp
push
dec
xchg
popf
fmull
mov
shlb
jge
test
mull
out
sub
stos
dec
leave
mull
push
push
das
jbe
out
jb
pop
sbb
mov
mov
adcb
mov
push
push
mov
adc
shl
mov
xchg
jnp
shl
mov
adc
adc
test
push
pop
bound
jmp
inc
pop
popa
pop
loopne
insl
push
imul
jb
jnp
mov
data16
stc
jb
int3
mov
mov
mov
push
scas
addr16
sub
mov
adc
iret
jbe
ja
aas
xchg
jle
fwait
xchg
lret
jnp
dec
xor
jmp
or
fsubrl
fstps
sbb
in
or
push
mov
daa
fs
negb
sub
aad
imul
js
scas
mov
xchg
flds
pop
mov
adc
push
test
nop
or
addr16
aaa
dec
jbe
aaa
jb
jle
pop
dec
call
and
adc
mov
add
sbb
repz
jno
out
cmp
xor
clc
fs
in
fdivrl
mov
jb
push
bound
push
clc
repnz
clc
stos
jge
pop
pop
daa
and
mov
or
mov
xchg
xchg
cltd
imul
mov
xchg
xchg
popf
lods
sub
pop
bound
iret
xor
xor
sub
clc
fsts
test
push
or
idiv
fcmovnbe
shlb
and
movsl
decb
add
gs
fwait
jae
xor
popa
dec
lret
inc
fists
mov
mov
xor
jns
test
daa
mov
std
dec
scas
xchg
nop
leave
scas
inc
adc
lods
sub
dec
fstl
icebp
incb
pusha
notb
dec
rorl
push
and
shll
adc
jnp
mov
scas
xorb
mov
and
fmull
xlat
js
dec
data16
sub
adc
imul
in
lock
cli
lods
mov
sbb
sbb
adc
faddp
fidivl
enter
mov
fiaddl
fmuls
stc
int3
mov
mov
push
cwtl
inc
aam
and
call
pop
outsb
fsts
fcoml
sub
mov
andl
jb
dec
std
jecxz
pop
mov
or
push
fisubrl
mov
out
inc
outsb
fs
xchg
bound
in
push
pop
push
pop
jnp
dec
jne
decb
add
adc
rcrb
sub
jae
xlat
imul
jecxz
sbb
out
ret
andl
push
mov
int3
mov
push
adc
xchg
repnz
insb
push
inc
leave
or
sub
loop
imul
pop
rcll
cltd
and
loopne
pop
and
fidivs
or
cld
dec
cmp
movsb
ss
or
out
aad
jae
repz
mov
mov
adc
xchg
mov
mov
scas
adc
shl
jnp
aaa
bound
sbb
jo
xchg
xchg
int3
xchg
mov
stos
clc
stos
or
xchg
push
xor
cwtl
dec
lods
sub
in
or
or
in
mov
outsl
sbb
jmp
xor
mov
mov
imul
or
movsb
jne
mov
das
push
xlat
mov
pop
pop
or
sub
outsl
sub
lea
inc
aad
and
hlt
jb
pop
out
in
mov
mov
popf
push
xchg
outsl
stos
data16
jnp
lods
push
and
loop
insb
call
and
dec
or
movsl
mov
pop
test
lds
daa
xlat
aam
fldcw
adc
mov
fs
adc
push
pusha
insb
pop
pop
daa
inc
fwait
neg
mov
mov
push
inc
daa
mov
xchg
out
out
push
lods
leave
adc
or
lret
stc
or
inc
adc
mov
xor
xchg
cmpsl
inc
mov
cwtl
cltd
dec
xchg
rorl
and
arpl
jb
pop
xchg
fdivl
nop
fmul
addr16
ljmp
lods
in
cmp
jmp
pop
inc
in
mov
pop
ss
mov
push
jo
pop
lret
cs
rolw
adc
lret
lea
add
sbb
xlat
jb
outsl
mov
adc
add
and
iret
adc
pop
and
sbb
out
inc
cmp
push
mov
les
fldcw
xor
xor
pop
rorl
adc
call
mov
dec
repz
shr
mov
out
mov
stos
shll
or
not
jo
lods
xor
sub
lods
int3
loopne
push
sbb
and
pop
xor
scas
imul
lret
cmp
adc
cmp
rcll
out
scas
in
shl
adc
sbb
xor
adc
sbb
fisttpll
push
cltd
push
imul
out
push
mov
rclb
mov
loope
pop
mov
jno
sbb
mov
call
mov
inc
in
aam
test
jae
jae
hlt
mov
add
cmpsl
pop
sbb
lods
mov
lods
in
sub
repz
movsl
das
mov
adc
adc
adc
movsl
pushw
jp
ljmp
pop
adc
pop
xchg
insb
sbb
lods
arpl
negl
std
sbb
mov
repnz
addr16
sbb
and
jo
mov
imul
clc
out
mov
mov
and
je
sub
push
pop
sahf
mov
push
or
cwtl
jp
pop
iret
lahf
sbb
shr
js
aam
pop
arpl
mov
daa
sub
bound
pop
mov
shll
fstl
pop
popf
das
pop
daa
and
lahf
inc
cs
mov
push
nop
dec
lods
lock
xor
push
stos
cmpsl
and
mov
mov
adc
cmc
or
mov
xor
fwait
ret
pop
push
xchg
dec
or
loop
dec
pop
push
sbb
in
scas
mov
mov
pop
push
pop
pop
jmp
mov
mov
mov
out
es
mov
lret
push
push
scas
jno
cmp
mov
movsbl
mov
pop
jl
test
pop
shrl
mov
sub
leave
das
adc
bound
xchg
xor
mov
and
or
xchg
push
or
mov
mov
adc
scas
adc
adc
adc
push
sbb
hlt
sarb
divb
pop
pop
shl
inc
sarb
sti
ficompl
sbb
ljmp
cmp
aaa
cwtl
mov
clc
sub
push
or
scas
pop
fmul
pop
mov
xchg
jno
test
ljmp
mov
rolb
mov
jb
data16
push
in
icebp
in
popa
into
bound
lret
lret
mov
sahf
mov
adc
test
fisubs
repz
test
lock
jp
mov
fadds
mov
add
mov
outsb
es
es
cmpsl
sbb
or
or
mov
xor
and
lock
cmc
or
push
push
mov
in
xchg
in
fisubl
mov
mov
rorl
or
out
inc
add
xchg
inc
push
pushw
push
cmpsb
mov
shrl
lods
psrlq
or
dec
push
push
scas
push
push
fs
sbb
fcoml
inc
in
in
iret
xlat
scas
push
rorl
stos
imul
pop
or
adc
push
mov
mov
rcl
dec
scas
inc
aaa
xchg
mov
in
xchg
push
and
fcoms
outsl
mov
and
clc
ja
std
inc
inc
adc
stos
leave
loop
in
and
std
adc
push
dec
xchg
push
sbbl
mov
lods
mov
imul
clc
mov
xchg
and
aas
sub
nop
jb
dec
test
lods
and
xchg
test
sub
mov
repz
adc
sub
mov
stc
push
mov
mov
mov
rcl
sub
xor
in
push
jb
mov
scas
dec
bound
stos
aad
rcrl
int3
cmpsb
push
push
cwtl
test
hlt
add
xor
gs
mov
and
sub
jb
sbb
mov
bound
data16
es
shll
ss
mov
push
bound
push
icebp
mov
bound
rcll
push
data16
adc
adc
out
jns
lret
sbb
adc
rorb
xor
hlt
in
push
dec
push
lcall
stc
mov
xor
dec
jae
adc
adc
push
sub
mov
inc
bound
xchg
and
loop
adcl
arpl
js
lods
pop
hlt
push
pop
dec
movsb
pop
push
hlt
andl
xchg
and
pop
pop
into
adc
lods
pop
adc
lret
int3
daa
pop
xor
push
addr16
mov
xchg
push
and
gs
es
lds
push
sub
push
mov
pop
ljmp
pop
movsb
adc
dec
out
dec
insl
pop
cmc
or
xchg
dec
test
ficoml
mov
call
push
adc
mov
add
sbb
in
lret
push
jae
adc
movsl
jns
xchg
inc
pop
mov
ficompl
adc
shrl
jmp
mov
loop
inc
mov
push
inc
mov
outsl
aad
negb
int3
xchg
fdiv
sbb
and
xor
repz
sub
shrl
stos
negl
xchg
pop
shrb
adc
test
xchg
xchg
lcall
and
shrl
outsb
push
sub
jmp
call
lods
mov
and
sub
int3
mov
cmpsb
mov
fisubl
jecxz
cmc
cltd
inc
int
inc
or
or
pop
cmp
fst
cwtl
or
push
popa
notl
mov
adc
or
lcall
add
mov
cli
fs
cmp
outsb
cmpsb
pusha
dec
jbe
push
mov
push
aas
or
jecxz
jecxz
call
icebp
sub
dec
mov
sbb
into
ljmp
adc
sbb
int
mov
es
lret
gs
daa
mov
out
lock
bound
hlt
push
mov
push
ss
mov
ret
rcrb
out
pop
adc
mov
xchg
out
mov
pop
fst
xor
dec
stos
mov
or
sbb
mov
mov
mulb
pop
es
cmp
scas
mov
push
mov
pusha
dec
push
rorl
out
jbe
xchg
ljmp
je
sub
pop
test
jge
lret
pop
sbb
sbb
jge
pop
mov
rcr
insb
das
test
rcrl
int3
mov
sbb
roll
push
and
xchg
cmc
imul
sub
insb
mov
int3
jbe
aad
cmpsl
in
cmp
jmp
or
popf
out
in
pop
and
xor
movsl
popa
adc
fcmovb
pop
loope
pop
mov
imulb
fsubs
push
mov
fimuls
adc
xchg
into
mov
sub
push
jl
pop
push
dec
loope
xor
xchg
in
dec
push
pop
xchg
test
and
cmp
jb
imul
mov
leave
popf
xor
pushf
and
xchg
enter
ss
out
pop
aad
or
mov
pop
xchg
loop
adc
and
lret
push
lock
sbb
xlat
jne
clc
mov
imul
div
mov
cmp
or
mov
rcll
out
pop
and
adc
pop
push
addr16
stos
xor
push
push
or
test
jmp
fstpt
jae
gs
pop
dec
shlb
icebp
adc
sti
jae
sbb
lods
dec
sbb
push
out
push
repnz
pushf
adc
jo
aad
push
push
fstpt
push
xchg
dec
xchg
lods
aad
jmp
lea
aaa
cmp
cwtl
mov
adc
jbe
and
fs
mov
fldt
jmp
xor
sub
scas
mov
or
out
outsb
cmp
push
divb
jbe
fsubrs
cmp
mov
cmp
jne
in
xor
lock
addr16
out
leave
into
cs
sbb
clc
punpckldq
imul
and
lea
fildl
lods
jns
not
or
xorl
xchg
push
push
push
dec
pop
sub
jbe
mov
xchg
into
scas
xchg
mov
sub
push
mov
fsubrp
push
loopne
ret
inc
dec
bnd
inc
jnp
add
xor
xchg
nop
mov
and
cltd
xchg
pop
ljmp
aam
mov
mov
jmp
sub
outsl
bnd
call
and
lcall
fisubl
mov
mov
mov
pop
sub
xchg
rclb
clc
inc
int
mov
jmp
cmp
adc
cmp
sbb
mov
xchg
dec
xchg
movsl
jmp
movsb
cmp
dec
push
mov
out
incb
adc
mov
aam
push
xorl
es
or
stc
jb
sti
dec
rclb
inc
loopne
inc
xchg
loop
roll
popf
outsb
push
les
jae
dec
mov
loopne
lods
and
repnz
addr16
div
scas
adc
out
jg
scas
or
adc
mov
loopne
dec
in
repz
lods
pop
mov
frstor
adc
inc
jecxz
mov
rcrb
inc
mov
pop
mov
push
mov
sahf
lret
jo
nop
test
mov
arpl
sar
out
xor
mov
xorb
out
test
inc
dec
arpl
mov
rdpmc
lea
mov
push
adc
std
cmp
je
mov
popf
xor
int3
dec
jle
mov
mov
push
loope
mov
shrb
in
xor
iret
scas
mov
jae
xor
inc
repnz
adc
loopne
into
fs
inc
les
fisttps
jo
imul
adc
mov
xchg
repnz
mov
xchg
shlb
lock
xlat
and
in
dec
mov
or
jb
dec
xlat
insl
push
xchg
mov
inc
in
push
or
cmp
add
ja
add
std
add
adc
and
pop
mov
jo
aad
xor
xchg
dec
ja
xchg
add
xchg
sub
or
movb
fistpl
add
and
sbb
adc
push
stos
es
jge
pop
lret
inc
push
pop
pop
push
hlt
pop
sarb
adc
add
cmpl
cmp
jno
addr16
add
mov
icebp
popa
addl
dec
jge
je,pt
aaa
xchg
push
push
and
adc
or
adc
or
loopne
adc
push
loop
bnd
xor
lea
into
push
jecxz
inc
andl
mov
or
add
mov
and
les
jno
out
in
pusha
mov
pop
mov
bound
xor
sbb
lods
inc
mov
fsubp
mov
int
jb
loop
shl
or
mov
xchg
jae
outsb
iret
nop
pusha
adc
lea
xchg
xor
je
popf
sub
mov
in
mov
xchg
ds
insl
lods
mov
adc
rcll
into
std
loopne
aas
and
test
stos
add
inc
call
mov
rcll
mov
rclb
mov
test
int
inc
mov
insl
shrb
mov
shll
movsb
mov
lods
push
ret
add
hlt
xchg
xor
sbb
xorb
pop
std
sub
je
add
inc
adc
ss
or
xor
mov
sahf
sub
std
fucomp
push
inc
push
dec
test
pop
dec
jge
and
mov
daa
jbe
aam
out
into
mov
xchg
add
insl
rcrb
add
cs
jae
inc
xchg
mov
outsb
mov
mov
and
in
out
test
addl
and
adc
clc
pop
jle
mov
pop
jecxz
mov
push
cltd
push
add
dec
adc
push
loopne
or
mov
inc
and
add
dec
sbb
or
xorl
es
jae
into
sub
out
into
aam
xchg
push
mov
push
mov
dec
push
fcoml
test
data16
sbb
mov
and
pop
pop
push
push
jecxz
mov
ret
mov
dec
mov
nop
stos
pop
loopne
sahf
insb
or
aam
xchg
arpl
ret
mov
xor
je
mov
cmp
arpl
mov
cmp
xchg
xchg
ret
add
mov
inc
push
out
jbe
into
scas
sbb
out
mov
inc
push
jo
out
test
pop
xchg
jo
pop
jae
mov
push
je
mov
outsb
mov
pop
add
or
scas
pop
out
jns
add
movsb
and
or
xchg
into
pop
hlt
mov
xchg
iret
pop
leave
leave
fst
xchg
les
repz
int
popf
push
cmp
add
cmp
pop
pop
leave
aad
push
inc
push
and
jecxz
jae
pop
int
idivb
repz
xchg
mov
push
int
rclb
cmp
aad
int
out
je
jno
xor
imul
daa
ja
in
ficoms
xorl
scas
incb
leave
push
repz
pushf
dec
mov
mov
push
cmpsl
int
fsubp
scas
xchg
rclb
push
add
pop
jns
sub
mov
mov
cld
loope
pop
cmc
sbb
sbb
out
sub
out
cmp
adc
int
in
and
and
popa
xchg
rolb
ja
mov
mov
adc
out
pushl
popa
mov
jnp
fdivs
add
inc
pop
vandps
cld
hlt
es
pop
jecxz
mov
jae
test
sbbl
jecxz
adcb
cltd
or
mov
in
scas
push
test
mov
pop
xchg
push
xchg
mov
pushf
cmpsb
jbe
fs
int3
pop
scas
cmp
xor
mov
scas
mov
push
and
cmpsb
rcll
add
mov
xchg
test
in
int3
sub
loop
xchg
test
leave
sub
xchg
mov
test
mov
popf
inc
push
gs
aaa
mov
sub
cmpl
inc
hlt
std
fcomps
sub
xor
sar
dec
dec
fmuls
scas
jno
pop
xor
loope
push
inc
adc
inc
xorb
daa
leave
jne
xchg
in
fcomps
add
cmp
cmp
ja
out
cwtl
test
incb
inc
jl
jb
ss
pop
xchg
stos
xchg
inc
jnp
push
repnz
jns
ret
sub
bound
cmpsl
pop
adcl
cmp
loopne
inc
std
jae
push
cli
inc
jne
pop
mov
in
sbb
jae
mov
jge
lock
and
fucom
xor
sbb
mov
into
xorb
push
xchg
sbb
push
int
adc
mov
push
test
push
fldl
cs
jne
unpcklps
cwtl
mov
stos
not
jecxz
jmp
adc
aad
adc
adc
sbb
mov
cmp
js
sub
or
sub
cwtl
pop
mov
test
jne
pop
mov
sbb
adc
decb
pop
or
jle
mov
scas
xor
inc
jae
or
fst
jae
adc
call
decb
mov
push
mov
adc
sbb
call
lds
xor
mov
cwtl
and
cmpsb
xor
add
lret
push
sub
adc
sarl
test
cmp
scas
push
rcl
xchg
iret
inc
push
mov
data16
rorl
cmp
jbe,pn
arpl
js
les
xor
out
cs
sahf
xchg
pop
push
test
dec
or
mov
xchg
inc
mov
xchg
sbb
jno
add
mov
fwait
dec
pop
fucom
mov
and
xchg
xor
jle
lods
ds
cs
pop
add
fstpl
cs
std
outsb
lea
into
out
mov
andl
ljmp
add
adc
into
mov
jle
mov
mov
jae
ljmp
add
mov
jecxz
arpl
jae
lods
sbb
cld
insl
pop
leave
les
add
pop
int
jle
jne
rcll
dec
outsb
imul
or
jl
shll
xor
sub
and
jg
arpl
int
fstpl
fisubrs
aam
push
hlt
jno
or
pop
lods
mov
inc
jecxz
push
jle
sub
mov
addl
fsubrp
popf
outsb
or
ds
xor
aam
push
ja
mov
pusha
fcom
sbb
add
aam
xchg
push
xor
dec
adc
lock
mov
repz
cmp
xorl
jle
pusha
subb
mov
mov
adc
xchg
icebp
jb
fs
iret
mov
lret
push
rorl
xchg
addl
mov
popa
outsb
sub
inc
andb
fstl
pusha
in
xchg
push
xor
xor
and
jno
ret
subl
mov
movsl
xor
jo
sub
pop
xchg
dec
pusha
imul
lahf
fisubrl
mov
adc
dec
xchg
sbb
pushl
rorb
int
pop
or
sub
inc
inc
aaa
and
popl
adc
push
adc
push
sbb
aas
insl
jge
push
dec
leave
xchg
rcl
mov
mov
test
mov
and
inc
adc
dec
mov
das
mov
lods
cmp
xchg
in
aas
cmp
out
dec
jge
les
pop
or
mov
mov
adc
std
inc
out
pop
das
outsl
pop
mov
lea
mov
loop
arpl
pop
jmp
ret
push
out
test
push
adc
hlt
fsub
lock
aas
outsl
mov
pusha
rol
outsb
dec
mov
jne
adc
sbb
scas
bnd
xlat
pop
inc
mov
outsl
lret
pop
adcb
shr
ret
cwtl
push
test
mov
mov
iret
dec
hlt
xchg
xlat
into
cmp
push
jno
pop
adc
lahf
lret
scas
push
shlb
push
inc
xchg
inc
sbb
lret
aas
or
lcall
pop
mov
push
adcl
lret
inc
pusha
mov
jne
xchg
call
fmul
lcall
enter
mov
repz
sbbb
jbe
into
xor
cmpsb
jne
mov
lret
or
fimull
ret
loope
or
inc
add
xchg
cs
pop
outsl
fcoms
sbb
jbe
mov
sub
stc
mov
and
push
dec
xchg
into
xlat
adc
xor
jp
dec
iret
inc
jo
push
inc
inc
xor
dec
scas
jp
dec
int3
fimull
fdiv
pop
inc
and
subb
clc
push
test
mov
push
push
daa
repz
mov
sbb
push
xchg
xchg
inc
pop
cmc
mov
scas
adc
sub
test
sarb
gs
push
sub
std
aas
jmp
iret
out
fdivs
out
in
jge
dec
push
xchg
cmp
out
jle
push
call
jne
int
leave
mov
xor
bound
arpl
mov
mov
xor
mov
fdivl
xchg
mov
pop
iret
mov
inc
loopne
mov
call
sub
fdivrl
out
jle
test
pop
inc
add
push
leave
test
subb
es
add
cmp
int3
or
sbb
std
scas
or
imul
adc
mov
out
mov
jo
inc
into
or
aam
rorb
fldcw
or
jb
pop
gs
push
addr16
push
jle
sub
aad
pusha
dec
fs
add
test
jb
adc
jo
mov
das
aas
pop
lods
inc
sub
and
xor
jmp
xchg
mov
dec
mov
rol
into
sub
pop
lcall
inc
pop
push
inc
inc
xchg
add
ljmp
movsb
mov
mov
loop
hlt
into
or
xchg
jg
jg
fsubr
sbb
fcoms
popw
aam
loopne
jp
cwtl
pop
xor
push
mov
rcl
lahf
int
dec
cmp
in
dec
fcmove
mov
mov
mov
arpl
out
sub
mov
sub
ja
out
push
test
lea
push
or
aas
dec
adc
xchg
aaa
sub
sarb
jecxz
mov
pop
sarb
rcl
inc
xchg
adc
xor
cmp
lahf
xlat
lods
lret
mov
cmc
jecxz
xor
sub
sti
dec
in
dec
out
add
in
inc
pop
dec
mov
fidivrl
or
xchg
adc
adc
pop
or
push
inc
mov
xor
sbb
sbb
aam
je
aad
xchg
and
and
ret
add
pop
or
ret
lcall
lods
test
ss
test
dec
into
scas
add
and
add
adc
mov
adc
push
addr16
lahf
iret
sahf
icebp
int3
testb
push
orl
dec
adc
xchg
adc
mov
sbb
cmp
add
ret
xchg
add
repz
adc
ja
nop
loopne
jecxz
and
and
xchg
push
sub
pop
lret
insl
movsb
and
ja
xchg
mov
jno
pop
jge
aas
out
nop
shrb
add
add
push
lock
sbb
popf
cmp
pop
push
nop
push
loope
js
push
or
adc
pop
lret
out
adcb
push
xchg
xor
inc
sbb
out
or
das
iret
in
in
inc
cmpsl
fsubr
cwtl
inc
rcr
gs
out
xor
std
jle
adc
xchg
xor
push
aas
lcall
data16
push
fimull
out
shl
inc
mov
pop
shlb
mov
out
rcl
rcll
sub
lds
add
jb
adc
push
pop
xchg
iret
and
inc
out
mov
inc
or
adc
and
lret
mov
lret
jno
xchg
xchg
outsb
outsb
aam
aam
pop
popf
mov
aam
lods
sahf
push
hlt
xor
loope
mov
shlb
push
in
aam
jae
sbbb
icebp
add
sahf
rclb
dec
cwtl
push
out
ret
mov
je
movsb
out
or
cmp
aas
xchg
xadd
loope
mov
enter
mov
lock
push
mov
and
mov
and
test
mov
mov
movsb
and
cwtl
dec
jnp
xchg
inc
xchg
jae
adc
aas
mov
adc
scas
pop
stos
cwtl
pop
cli
aad
inc
jbe
adc
bound
xor
lods
mov
add
aam
ret
fs
icebp
xchg
inc
and
mov
cli
dec
lret
lea
xchg
mov
add
lods
xchg
push
xchg
hlt
roll
aas
ds
xor
mov
mov
aaa
xor
outsl
lea
or
mov
insl
mov
ljmp
dec
push
movsl
test
inc
stos
push
arpl
sub
sbb
pop
mov
popf
mov
jge
inc
push
int
sbb
int
add
dec
loopne
or
in
test
jae
jbe
xchg
adc
mov
outsl
out
ja
in
inc
add
mov
jb
xor
mov
cmc
loopne
pop
mov
std
jb
into
push
cld
das
jg
mov
xchg
push
push
daa
mull
roll
fs
std
popf
pop
loopne
or
xchg
aam
pop
andl
outsl
ficoml
adc
adc
and
insl
loopne
or
jno
les
pusha
decl
nop
sub
cmpsl
pop
loop
jmp
push
mov
aam
arpl
adc
outsl
lret
add
test
lods
mov
xor
repz
mov
or
movsl
adc
les
jle
orb
xchg
es
not
lods
roll
lods
popf
sub
lahf
push
test
movsb
push
xchg
and
scas
cmp
divb
loop
add
in
int
std
test
imul
lcall
pusha
or
pop
inc
push
lods
es
add
lahf
lea
push
sub
aad
ret
cmpl
nop
mov
dec
aam
adc
add
bound
out
push
adc
or
ds
add
inc
and
push
mov
inc
mov
mov
xor
out
mov
xchg
mov
push
cs
popf
lea
movsb
and
int
jle
fistps
lahf
mov
mov
shlb
js
sbb
mov
aam
fnsave
adc
mov
int
out
mov
or
shl
dec
hlt
sbb
scas
scas
aam
orb
lahf
and
pusha
in
add
lahf
push
push
add
jno
jmp
push
mov
xor
repz
xor
sbb
adc
bound
pop
dec
mov
idivb
xchg
adc
and
add
dec
push
jle
out
dec
xor
xchg
pushf
scas
pop
mov
push
xchg
je
fs
jecxz
icebp
sbb
xchg
pop
and
addr16
mov
push
or
outsb
push
inc
ret
je
mov
add
nop
mov
mov
hlt
adcl
lret
push
fstpl
sahf
push
mov
cmp
push
xchg
inc
scas
push
jg
mov
mov
xchg
into
jg
push
outsb
lods
jmp
mov
xchg
mov
jae
pop
and
outsl
push
fisubrl
addl
sub
jmp
ds
xor
xor
mov
cmp
scas
mov
dec
adc
inc
xor
xchg
xor
ret
mov
sahf
adc
jecxz
xor
dec
in
pusha
outsl
push
adc
add
aam
shlb
cmc
mov
insl
dec
sti
mov
adc
leave
fsubrl
dec
push
cmpsl
mov
ja
inc
push
xorl
fisttpll
fs
xor
xchg
mov
out
aas
pop
add
inc
dec
sti
sbb
ja
out
xchg
xor
push
xchg
sub
out
ds
xor
insb
push
jge
or
pop
mov
mov
bound
sbb
scas
rcrb
outsb
xor
into
rcl
pop
sub
aas
into
lods
rcr
hlt
not
loope
mov
in
ss
xchg
dec
pop
push
rcrb
and
shlb
scas
and
xchg
push
mov
and
shlb
cmp
inc
ret
dec
ret
mov
push
mov
jnp
add
popf
mov
shl
xchg
jb
in
adc
jecxz
sahf
xchg
in
out
push
cld
mov
in
mov
arpl
adc
pop
xchg
cmpsb
jo
in
out
aam
fdivrs
mov
loop
or
aas
sub
movsb
sub
adc
sbb
iret
iret
dec
sbb
xchg
inc
jns
cmp
fdivrs
mov
icebp
ret
add
inc
mulb
popf
sub
push
fistl
xchg
adc
out
scas
add
mov
sub
push
pop
mov
mov
ret
inc
cs
lock
repz
xchg
into
aam
call
cld
out
int
inc
lea
mov
iret
add
lods
push
shlb
inc
fucomip
js
lea
adc
push
and
in
jb
push
bound
add
sbb
cmpsb
shlb
std
xchg
mov
or
into
fiaddl
fmulp
dec
adc
pop
lea
out
je
mov
push
cmpb
aad
dec
addr16
shll
adcl
sub
and
shlb
inc
movsl
mov
jle
mov
popa
mov
repnz
adc
daa
es
rcrb
pop
scas
mov
push
jecxz
scas
rorb
scas
pop
int
xchg
cmp
adc
jb
dec
hlt
test
xchg
mov
decb
push
sbb
adcb
xchg
mov
shl
add
jb
dec
lods
scas
sbb
or
test
jb
popf
pop
int
and
mov
xchg
loop
xor
pop
out
ds
cmpsl
imul
xchg
pop
cwtl
pop
rorb
xorl
push
ret
inc
leave
jae
outsb
lds
dec
int
arpl
xor
jb
push
int
pusha
scas
pop
dec
subps
cmp
and
loopne
cmp
push
adc
fistps
lock
into
repz
repnz
push
lods
shlb
gs
xchg
xor
xor
sti
fcoms
pop
dec
xor
insl
lods
dec
stos
rorb
inc
xchg
adc
fimull
jecxz
adc
mov
test
mov
sti
into
popf
jle
adc
xlat
mov
dec
loope
and
roll
cmc
dec
popf
mov
push
imul
dec
insl
lock
push
je
scas
xchg
push
mov
pop
adc
hlt
lds
lods
push
mov
sarb
shll
sub
outsb
shrl
loope
stos
and
sbb
out
shlb
call
int
mov
adc
adc
xchg
and
popf
jb
sahf
fmuls
mov
add
push
cmp
jae
push
aam
mov
shlb
test
inc
arpl
or
xchg
lock
mov
push
rolb
and
mov
pop
sub
sub
inc
dec
out
rorb
pop
mov
dec
sbb
and
jecxz
ds
jge
sbbb
fstl
sti
ret
mov
ficomps
xor
mov
sahf
test
sbb
adc
mov
mov
roll
mov
jne
or
nop
repz
jecxz
je
adc
mov
shrb
and
rol
jae
fstpl
adc
arpl
or
stos
jbe
filds
int3
push
shll
repnz
jb
cmc
stos
cmc
loope
inc
insl
cmp
add
shlb
dec
mov
pop
pop
jo
jae
es
and
fs
xchg
ljmp
fcmovnu
pop
xchg
adc
mov
cwtl
popa
repnz
mov
aad
mov
inc
jecxz
jmp
pop
lock
out
es
andb
mov
lea
inc
js
xor
lock
push
popf
pop
or
je
jb
idivb
mov
pop
testb
jb
adc
xchg
aad
mov
repz
shrl
lea
mov
lods
iret
je
shll
add
rcr
std
mov
dec
or
rcl
or
mov
fnstsw
hlt
mov
add
mov
or
mov
in
jae
shrb
shlb
lret
xchg
ret
movsb
xchg
aad
lods
dec
mov
mov
jecxz
and
jb
adc
pop
fbstp
rclb
inc
adc
ss
or
lea
lock
sub
sub
xchg
xor
push
addr16
je
jecxz
pop
in
pop
in
loopne
xchg
push
and
sub
push
test
jo
dec
dec
xor
mov
jb
mov
dec
scas
aad
push
ret
inc
out
sbb
rcrb
in
shll
hlt
fcomps
mov
xor
or
push
int
xchg
pusha
adcb
add
xor
ret
pop
sbbb
pop
xorl
add
call
add
xor
roll
inc
push
push
mov
jb
movsb
lea
fdivrs
lock
push
or
or
bound
add
lea
adc
sahf
lock
pusha
sarb
add
jb
ljmp
mov
mov
push
ficomps
sbb
nop
push
jge
aam
les
inc
dec
xor
cmp
pop
popf
jb
add
imulb
push
std
in
cmpsb
shll
sub
jmp
dec
mov
fmuls
arpl
push
jae
aas
inc
cmp
into
loope
icebp
andb
add
addl
std
cmp
scas
jae
stos
dec
aam
fidivl
pushf
or
ret
xchg
xchg
shll
dec
shr
cmc
push
adc
int
jb
sub
xor
dec
sahf
in
jge
mov
int3
movb
shrl
mov
mov
xchg
xchg
fisubl
sbb
roll
jno
and
ficoms
std
jb
jbe
and
fiaddl
adc
add
fisubl
mov
rorl
outsb
in
dec
push
mov
inc
into
ficoml
cmp
aam
inc
add
kmovb
lods
sub
fisubl
sub
or
add
xchg
cs
mov
adc
mov
arpl
mov
and
add
fisubrl
data16
jbe
int
push
sub
mov
inc
lret
lret
push
inc
ficompl
neg
dec
xor
mov
jecxz
add
pop
sub
cmp
jae
dec
fiaddl
nop
pop
xchg
adc
mov
dec
inc
mov
mov
fiadds
push
es
xor
xchg
xor
es
loope
push
negb
scas
mov
lds
jo
out
xor
data16
dec
push
ret
inc
and
push
jecxz
push
jb
mov
mov
dec
push
pop
cmp
and
aad
push
pop
popf
dec
or
movsb
xchg
mov
mov
or
mov
pcmpeqb
pop
outsb
mov
inc
and
or
in
jmp
pop
jecxz
jne
pop
jb
mov
aad
subb
jge
cli
sub
mov
into
fsubrl
jb
lea
test
lds
mov
pop
dec
ficoms
loope
dec
cmp
cmc
and
icebp
push
lret
mov
int3
mov
or
mov
rorb
adc
cmpsl
ja
rorb
mov
push
repz
dec
loop
add
mov
insl
and
lock
int
mov
mov
lods
mov
orl
adc
push
push
in
dec
inc
push
insl
pop
sub
fmuls
mov
call
xacquire
xor
and
mov
jne
shlb
bound
test
lods
insl
mov
jno
jle
mov
and
ret
mov
rcll
fmulp
fiadds
insl
popf
mov
movsb
shll
mov
loopne
add
push
jo
push
adc
bound
inc
es
test
sub
insl
xor
je
rcll
mov
loop
sub
xchg
xor
push
inc
add
and
frstor
inc
lds
mov
rcrl
jae
sub
test
mov
xchg
xorb
jmp
jle
rorb
mov
and
lods
mov
les
dec
xchg
add
data16
and
and
push
jecxz
subb
stc
mov
mov
xor
xchg
mov
jge
ret
int
lea
out
aas
xchg
arpl
movsb
push
and
mov
sub
adc
lds
lds
in
std
mov
jae
jg
mov
dec
or
add
mov
and
jle
cmp
cmp
add
mov
xor
mov
mov
scas
mov
or
cmc
aam
push
sarl
arpl
xor
sub
pop
inc
int
mov
lods
jle
out
ljmp
pop
lods
roll
jnp
lret
repz
jbe
pop
mov
ficoms
fstps
mov
je
imul
jb
push
jmp
pop
out
add
xor
push
adc
lcall
push
lahf
inc
fwait
js
sti
and
pop
cmp
loopne
or
and
std
and
testl
mov
addr16
aas
ja
addb
push
or
roll
andb
test
mov
call
popf
inc
gs
shll
and
je
test
enter
add
out
pop
daa
lock
mov
adc
xor
push
jge
mov
xor
push
rol
push
jge
mov
jg
lcall
add
rcr
bound
in
insl
notb
out
rclb
int
mov
xor
dec
shrl
jbe
ret
das
int3
shufps
dec
out
pop
ss
gs
fcom
or
in
lret
les
xchg
insl
mov
nop
lret
in
notb
add
movsb
test
and
cmpsb
sub
sbb
adc
daa
mov
cmp
aam
pop
push
aam
lret
or
loop
mov
jmp
sub
out
out
pop
rcrl
out
cmp
icebp
push
aad
push
adc
mov
fs
fsts
and
xchg
out
into
and
inc
icebp
mov
ss
cmp
adc
aad
mov
xor
stos
call
gs
pop
inc
xchg
pusha
lcall
sbb
in
xchg
push
loope
adc
shll
rclb
out
or
push
dec
into
fdivs
adc
xlat
xchg
pop
icebp
adc
and
aaa
mov
jl
fstpl
out
test
mov
call
test
test
mov
push
js
or
test
lret
movsb
rcl
shlb
aam
fistpl
out
or
enter
loop
xchg
ret
mov
push
mov
dec
dec
push
push
fnsave
int
fwait
mov
sbb
and
test
and
aam
dec
xchg
mov
out
cltd
dec
rorl
dec
push
mov
adc
cmc
and
inc
inc
and
ljmp
xor
or
lahf
into
sbb
pop
movsb
cmpsl
push
pop
fmuls
jnp
fst
jp
nop
mov
movsl
mov
xchg
shr
inc
loope
sub
mov
adc
cmc
sbb
jnp
out
ss
jp
mov
nop
in
push
mov
push
sub
and
rdmsr
sub
dec
mov
and
or
movb
inc
lds
dec
sbb
adc
jl
cli
or
push
jbe
insb
pop
xchg
mov
iret
xchg
push
or
mov
dec
jo
lods
ret
push
xchg
into
jbe
and
cwtl
sub
sub
dec
cmc
xlat
push
add
inc
adc
or
in
shll
test
lahf
fadds
mov
dec
lcall
pop
push
outsb
xor
mov
ret
jmp
push
push
out
ljmp
jbe
in
jle
mov
mov
ds
push
shll
xlat
shrl
and
rorb
sub
add
xchg
and
imul
hlt
iret
pop
fstpl
lcall
pusha
pop
sbb
gs
sbbb
pop
xchg
orl
mov
fnstsw
sub
ss
dec
out
adc
push
push
mov
mov
pop
fidivrs
ficomps
push
aaa
mov
repz
jnp
sbb
stos
adc
cmpsb
pop
js
lret
loope
push
fistl
in
mov
jmp
push
add
xchg
stc
lret
push
pop
pop
pop
lea
fwait
mov
nop
add
lret
pop
mov
dec
xlat
aam
shl
insb
out
out
cmpsb
jo
mov
outsl
lret
inc
fwait
push
fidivs
mov
ds
xchg
aam
leave
sbb
sub
sar
test
incl
adc
xchg
and
and
ret
or
int3
adc
jmp
jbe
lret
pop
pop
jmp
dec
xlat
fstl
out
mov
int3
aam
mov
int
push
fcom
adc
stos
loopne
mov
adc
xchg
aaa
popa
std
jnp
ss
xlat
out
push
dec
scas
mov
sbb
test
sbb
aam
jp
pop
sub
lock
pop
push
and
push
fdivrs
mov
sahf
cwtl
sbb
cmp
repnz
pop
cmp
mov
push
xchg
js
push
adc
shll
push
push
out
ficoml
dec
cltd
icebp
sub
jbe
pop
lret
mov
ja
xchg
xchg
push
cli
fcmove
jb
jbe
push
call
mov
iret
push
sarb
data16
mov
dec
xchg
das
into
loopne
xchg
int
es
cmpsb
cwtl
cwtl
sub
and
je
pop
pop
inc
mov
popl
rcll
adc
aad
jne
push
mov
lret
imul
mov
frstor
cltd
test
dec
ficomps
sub
insl
pop
push
fs
cmp
mov
fisubrs
mov
test
push
xchg
nop
cmp
and
push
lods
into
pop
sub
es
iret
pop
dec
cmp
push
push
and
inc
cmp
xor
dec
xchg
add
or
roll
aad
push
test
dec
mov
cwtl
sub
add
cli
shl
ret
in
in
or
mov
xchg
rcl
sub
sti
xor
dec
dec
mov
inc
push
push
pop
pop
loope
xor
packssdw
push
pusha
inc
xor
sub
mov
adc
add
imul
lcall
or
xchg
dec
push
dec
iret
sub
data16
sub
dec
pop
cwtl
or
dec
xchg
or
lds
dec
sbb
test
hlt
js
cmp
das
or
push
mov
and
cli
repz
lods
aas
and
adc
fdivrp
pop
sarl
mov
add
movsl
pop
xchg
xor
mov
xor
xchg
sub
push
inc
push
sbb
adc
mov
out
dec
sahf
rolb
insl
push
xchg
pop
sub
lret
cmp
mov
push
xchg
enter
addl
ja
mov
in
std
or
cmp
dec
out
xor
inc
lcall
popl
lahf
jmp
xor
dec
out
adc
dec
pop
push
mov
xchg
dec
or
push
insb
outsb
push
loope
iret
xchg
das
js
ja
and
jle
jbe
jns
std
cld
mov
mov
pushf
fcomp
mov
xor
xor
sub
clc
clc
mov
add
mov
aas
mov
xchg
aam
rorl
fcompl
jae
outsl
pop
movb
int
je
roll
popa
mov
jbe
mov
pop
xchg
adc
cmp
dec
adc
aad
data16
cmp
and
sbb
jbe
add
dec
cwtl
pop
adc
test
sbb
dec
mov
and
inc
out
mov
es
push
leave
jge
xchg
scas
lret
loope
and
and
movsb
jp
jbe
je
dec
cld
outsb
sbb
jbe
pop
mov
into
popf
add
mov
ss
test
sbb
push
pop
stc
std
lods
subb
dec
push
cli
negb
ror
jnp
mov
pop
push
mov
addr16
lods
or
xchg
inc
push
ss
out
fwait
and
or
dec
inc
decb
outsl
into
mov
fdivl
or
sbb
push
into
inc
decl
cmpl
lret
inc
aaa
dec
xchg
pop
mov
shrb
aas
loope
out
cltd
lods
scas
mov
jnp
push
xor
push
push
xchg
movd
mov
dec
push
inc
add
movsb
iret
or
or
aam
gs
dec
les
popa
clc
add
std
movb
std
call
jp
leave
xchg
add
ds
xor
push
repz
mov
sub
push
mov
pusha
test
jne
sub
js
jnp
inc
pop
ljmp
movsb
adc
jg
gs
cmc
sub
mov
ja
adc
daa
shll
xchg
push
or
mov
mov
je
push
mov
dec
insl
lret
or
leave
cmp
iret
sub
movb
jle
rorl
mov
movsb
mov
push
hlt
lods
fimull
rorl
inc
std
sti
fsubs
add
push
dec
adc
dec
iret
xlat
int
dec
dec
dec
dec
mov
stos
call
cmp
fnstenv
xchg
mov
xor
sbb
mov
dec
or
fcmovu
and
fwait
inc
adc
sar
and
mov
stc
inc
inc
data16
inc
aam
dec
adc
xchg
outsl
xchg
into
ljmp
rorb
arpl
jne
in
shlb
mov
fmuls
nop
dec
shl
shl
cmpsl
cmp
aas
mov
push
add
xchg
mov
ja
test
xor
fwait
push
daa
inc
inc
pop
push
inc
mov
decl
adc
dec
mov
jmp
cmp
pushf
push
test
addb
jnp
lock
pop
das
ljmp
add
loopne
mov
jmp
outsb
pusha
out
lret
sub
xchg
stos
movsb
xlat
andl
cltd
mov
jnp
in
fsubrs
and
pop
xchg
ja
inc
fwait
lea
jp
pop
and
sbb
jge
sbb
addr16
push
mov
and
rol
cmp
testb
clc
stos
mov
cmp
jne
mov
std
xchg
mov
lret
or
bound
loope
movsb
gs
dec
scas
or
mov
rorl
dec
jmp
mov
xor
cmp
insl
fadd
pop
or
rcrb
add
cmpsb
mov
adc
iret
fistpl
adc
mov
es
or
jp
and
cld
data16
cmp
cmp
mov
test
cld
loop
sub
pop
ss
mov
sub
inc
cmpsb
std
shlb
mov
push
stos
cmp
inc
sahf
clc
mov
jne
mov
lcall
fwait
mov
cwtl
and
xchg
mov
sbb
loope
xchg
dec
test
sub
aaa
jbe
movb
movsb
add
inc
cmp
mov
enter
cmp
lds
xchg
jge
fcomp
inc
cmpsl
xchg
mov
mov
bound
pop
adc
dec
fisubrs
sbb
ljmp
mov
repnz
aam
xor
push
xchg
jp
lods
ss
aad
xor
out
cmp
add
jge
out
pop
out
mov
xchg
push
stc
and
cmp
add
cltd
movsb
shll
out
out
loopne
dec
adc
insb
sbb
mov
iret
lahf
cmp
cmpsb
lods
fwait
or
cli
xlat
loopne
call
test
dec
subb
push
int
push
push
das
addr16
sbb
mov
aas
push
gs
push
cmp
push
leave
adc
movsb
push
loope
nop
rorb
adc
mov
inc
repz
jae
xchg
or
mov
cmp
and
xlat
and
jge
push
lahf
inc
mov
adc
xor
mov
xchg
arpl
call
jecxz
inc
mov
dec
fwait
jo
ret
iret
add
stc
or
cmc
lods
fbstp
or
xor
js
rcll
fildll
jns
fisubrs
dec
aad
xchg
cmp
xchg
or
xchg
out
ret
add
add
push
lcall
popa
xlat
mov
xchg
mov
stos
loop
inc
push
adc
mov
dec
and
cmp
pop
cmpsb
out
sbb
fldcw
pop
lock
int3
or
repnz
sub
mov
sub
or
lahf
dec
sub
sub
mov
aaa
xchg
cmp
cwtl
xchg
dec
adcb
add
cli
repnz
nopl
iret
cmc
push
pushf
lock
fs
or
aam
push
nop
xor
mov
push
iret
xor
sub
jmp
scas
stos
sbb
dec
push
into
js
mov
loope
jnp
imul
pop
dec
test
jge
daa
lea
out
or
xchg
fdivrl
aas
pop
push
xchg
xchg
es
mov
cmp
lcall
test
out
addr16
cmc
push
dec
sbb
push
jl
push
sahf
add
std
xchg
popf
jo
test
test
lea
push
fs
leave
ja
cwtl
xchg
and
lods
out
dec
xchg
sbb
jno
insl
shl
cwtl
int3
js
dec
xchg
aam
push
cltd
out
xchg
sbb
sbb
int3
jp
loop
xchg
icebp
sbb
mov
repz
jmp
outsl
ljmp
lahf
rcl
fsts
mov
xor
mov
movsl
or
add
push
insb
xchg
inc
and
push
scas
pusha
mov
push
call
cld
gs
adc
shlb
cltd
cld
arpl
xor
pop
sub
int
shlb
mov
mov
push
jae
add
sti
ret
daa
cmc
or
rcll
sbb
pop
loopne
sbb
int3
sbb
int
xchg
push
xlat
sbb
mov
inc
jg
fimuls
nop
xor
aam
cld
ss
jno
out
dec
into
sub
mov
inc
addr16
pop
in
pop
xor
nop
and
shll
dec
adc
pop
cmc
xchg
stc
imul
fs
hlt
loop
pop
mov
jmp
jg
mov
js
icebp
ss
rclb
push
or
xchg
sbb
pop
adc
sbb
mov
std
lods
fwait
add
test
xor
sub
aaa
out
in
cmpsb
mov
imul
xor
icebp
and
sbb
repnz
and
inc
pop
cmpsb
stos
pusha
inc
cmp
pop
pop
out
out
jmp
and
mov
jg
jge
xchg
mov
pusha
lahf
xchg
inc
mov
hlt
inc
inc
sub
fdivrl
xlat
shll
movsl
int
xor
mov
out
sbb
data16
mov
push
or
mov
dec
addr16
stos
pop
dec
cmpsb
mov
push
inc
xor
repz
xor
pop
mov
and
and
or
sub
shll
push
aas
jo
frstor
aam
inc
jbe
enter
inc
roll
iret
add
mov
cmpsb
cmpsl
imul
push
stos
js
cmp
adc
mov
sub
jmp
xchg
xor
mov
test
and
imul
out
sub
rcrl
out
ret
sbb
xchg
push
outsl
int3
pop
sub
jl
jle
cmp
jp
adc
add
aas
mov
mov
lret
push
or
xor
ds
sub
cmp
mov
leave
push
sbb
push
lahf
ficoml
mov
jne
sub
dec
fcomps
fsubrs
pushw
add
push
stos
rorl
repnz
mov
inc
xchg
hlt
mov
fcmovnbe
sahf
cs
xchg
pop
inc
adc
push
cmpl
pop
sbb
clc
jo
xchg
dec
sbb
xchg
xchg
into
enter
fisubrl
pop
iret
out
mov
push
push
push
mov
push
push
int3
test
pop
pop
or
fs
xchg
bound
lods
loope
hlt
daa
aam
cmp
push
sub
pushw
inc
sti
int3
mov
iret
jg
dec
xchg
sbb
mov
pop
dec
test
or
mov
loope
dec
or
cmpsl
pop
in
mov
adc
sub
movsb
jb
ja
lods
pushf
mov
or
inc
stc
loop
mov
fidivrl
hlt
cs
mov
sti
popf
xor
into
xor
sub
ret
pop
push
aaa
mov
inc
addb
imul
int
das
incb
cmp
sarb
cmp
std
push
push
sarb
clc
rcl
adc
sbb
pop
mov
mov
xchg
mov
leave
pop
in
lret
hlt
mov
leave
cmpsb
cmpl
push
mov
pop
xchg
fnstenv
and
sbb
lods
loope
sub
test
into
sub
add
sahf
in
cmpsb
fcom
dec
stos
mov
sub
icebp
dec
vphadduwd
loope
and
mov
into
or
or
imul
shrb
lods
push
std
cmp
mov
call
in
push
out
divl
insb
fcmove
rcrb
xchg
sarb
enter
std
aam
and
shlb
sti
test
aam
jl
mov
xor
xchg
sub
cmp
fistpl
push
adc
sub
lods
aas
pop
sti
sub
lods
sbb
outsl
test
sub
xchg
sub
int3
sub
cmp
xor
outsb
xchg
imul
scas
mov
ss
jle
pop
cmp
aad
call
xchg
or
add
mov
jl
mov
jb
movsb
icebp
leave
cwtl
jbe
xor
pop
sbb
adc
dec
dec
or
loope
push
add
push
mov
into
cmp
jmp
stc
and
fcompl
scas
fdivp
lcall
addr16
add
je
ja
mov
shr
jge
ljmp
dec
mov
dec
fbld
jl
and
jp
pushf
popf
cmp
xchg
cli
lahf
insl
jge
dec
shrb
out
div
xor
xchg
jno
adc
mov
ds
push
int
cs
call
pop
fdivrs
xchg
jo
mov
xchg
xchg
push
and
rolb
jb
xor
mov
mov
jno
push
lret
adc
push
enter
lea
mov
scas
dec
les
push
sbb
xchg
stos
bound
rorb
out
xlat
movsl
aas
fisubl
sbb
dec
push
loop
xlat
out
mov
scas
je
mov
sub
je
dec
mov
jne
sub
jecxz
xor
jp
movsb
cmpl
lea
xor
les
push
std
cmpsb
mov
out
xchg
hlt
and
lret
add
cmp
add
or
cmc
lea
std
roll
xor
mov
pop
shlb
test
ljmp
dec
addl
adc
int
xlat
mov
and
xchg
fcmovnbe
and
push
iret
mov
and
lds
mov
out
movsl
clc
cld
adc
push
jmp
in
loope
pextrw
stos
or
cmp
jmp
test
fsubs
lods
push
jbe
hlt
jnp
lods
cli
leave
fistl
fsubrl
loopne
xor
lret
xchg
call
outsl
fdivrs
add
in
adc
lods
ds
pop
cmp
lock
dec
sbb
fsubr
sub
aam
xchg
xchg
xlat
in
pop
push
lret
lret
inc
ja
pop
mov
cli
inc
or
adc
and
lret
loop
push
xchg
sbb
jnp
out
movb
pop
lret
push
stos
aad
push
adc
sti
leave
sub
or
dec
push
sarl
sub
scas
mov
aad
bound
cmpsl
mov
mov
sahf
or
stos
pop
ja
pop
push
out
add
mov
push
xchg
into
mov
rcll
sti
mov
fisubs
pop
xor
push
pop
ficoml
mov
jge
scas
lcall
dec
lods
xbegin
or
push
imul
jecxz
pop
xchg
cmpsl
shrl
cmp
aad
adc
fwait
stos
insl
push
sub
fimuls
andb
cwtl
clc
pop
rcll
popf
dec
testl
jle
jg
or
add
jb
or
hlt
sar
ja
mov
push
sub
and
add
inc
in
lret
mull
add
jle
adc
xchg
repnz
fisttpll
push
movsb
pop
imul
test
mov
xchg
lret
or
push
out
ret
pop
jecxz
arpl
cmp
movsl
cmp
mov
mov
adc
aas
push
rolb
ficompl
shlb
and
dec
popf
in
fwait
insb
xchg
inc
and
fldcw
sub
cmc
shll
lock
mov
leave
int
and
xor
jge,pn
mov
adc
dec
push
mov
sarl
aas
loope
lcall
ror
xor
stos
es
jp
into
sbb
out
imul
or
iret
jb
adc
mov
int3
mov
ljmp
out
fcmovu
loopne
dec
pop
lods
dec
cwtl
shll
cmp
and
jp
pop
pushf
daa
push
jecxz
sub
out
lds
pop
popf
out
mov
mov
ret
mov
xchg
xchg
pop
clc
stos
inc
imulb
je
enter
pop
push
cmp
cmp
pop
xor
cltd
in
das
mov
pusha
push
add
aaa
cmpsb
jmp
lret
push
pop
jle
push
out
cltd
pop
out
push
cwtl
mov
loope
call
mov
pop
inc
sbb
pop
mov
ss
idivl
xchg
jae
mov
jmp
mov
loope
adc
lods
aaa
pushf
ret
outsb
mov
aad
xchg
decb
dec
push
cwtl
ja
in
dec
dec
and
arpl
popf
add
mov
mov
mov
pop
mov
loopne
xchg
adc
test
fs
cmpsb
cmp
stc
in
jbe
dec
adc
mov
lret
mov
gs
jmp
xchg
test
cmpb
push
frstor
push
adc
pop
dec
shr
test
xor
pop
dec
dec
arpl
sbb
xchg
xchg
orl
jecxz
jo
xor
push
jl
iret
movsl
aam
sahf
xlat
mov
cmp
aas
lret
jle
insl
cli
in
movsb
dec
cmp
dec
mov
out
jae
mov
scas
mov
dec
aam
cli
mov
mov
dec
jp
insl
mov
jb
mov
jno
mov
incb
out
xchg
sbb
out
cmp
jecxz
jnp
test
push
aaa
lock
push
adc
push
movsl
jg
pop
lret
jno
andl
mov
mov
push
pop
pop
xchg
outsb
xorl
in
push
cld
data16
or
out
sar
repnz
shr
popa
cmp
stc
testb
or
ret
jbe
and
xchg
push
or
pop
mov
xchg
test
int3
insl
adc
xchg
dec
icebp
inc
adc
test
and
pusha
sahf
sbb
xor
xchg
push
call
lret
lret
into
sbb
int3
jle
inc
movsl
xor
cwtl
leave
lcall
xchg
xor
jg
fsin
mov
cld
inc
sub
jecxz
push
push
mov
mov
or
enter
adc
lock
repnz
push
mov
adc
aaa
ret
push
test
cmc
in
add
fsubs
mov
push
orb
ss
mov
outsb
jp
push
out
into
shlb
push
xor
sub
mov
push
jno
sub
es
sub
divb
push
or
fsts
mov
out
pop
jge
insb
mov
mov
and
into
in
and
mov
pop
inc
cmpsb
xor
fwait
insl
and
out
sub
mov
mov
adc
aad
test
or
lret
stos
clc
xchg
cli
or
test
push
incl
mov
cmp
cmpsb
cmc
cs
sub
mov
loope
mov
push
out
cmp
or
jae
mov
push
mov
inc
nop
cmp
xchg
jne
outsb
fsubr
arpl
pop
into
mov
test
xchg
in
repnz
dec
sbbb
mov
popf
push
dec
outsb
idivb
xor
test
mov
aam
jbe
jno
aas
dec
in
push
movntq
sub
pop
mov
dec
mov
lcall
push
sbb
cmp
mov
and
mov
test
inc
fisubs
call
cwtl
outsl
into
mov
repnz
sbb
jne
adcb
inc
out
cmpsb
aas
add
std
das
sbb
test
int3
scas
popf
jo
and
jmp
add
fistl
mov
fs
or
add
pop
dec
push
cmp
ficoms
addl
and
test
or
aaa
cmp
jno
repnz
gs
js
or
add
and
lock
lds
movsl
mov
lret
sbb
xchg
stos
out
sbb
xchg
push
ret
data16
sbb
loopne
into
inc
sub
ret
add
mov
cmpsb
mov
imul
cmpsl
aam
xor
dec
mov
lods
lret
inc
fcomps
sbb
movsl
sbb
std
call
sub
mov
pop
push
adc
and
lods
fisubrs
xchg
lock
into
lret
mov
push
addr16
inc
cmp
cwtl
jecxz
xchg
flds
adc
arpl
adc
push
gs
std
jge
clc
ja
pushf
cmpsl
stc
aam
cs
mov
dec
fistpl
int
into
xchg
pushf
sbb
mov
lcall
and
xor
push
cs
out
test
mov
xor
push
outsb
add
into
sti
leave
dec
js
cld
test
xlat
bound
xchg
mov
pop
mov
insl
dec
jo
adc
out
mov
xor
and
inc
xchg
int3
scas
out
movsl
sbb
xor
xor
arpl
jl
iret
into
jo
mov
mov
mov
jmp
scas
imul
mov
stos
test
xchg
push
outsb
in
jge
mov
insl
adc
cmpsb
outsl
in
adc
nop
mov
mov
movsb
xlat
mov
sub
lret
loop
faddp
jle
cmpb
jl
mov
cwtl
imul
mov
data16
roll
xchg
add
mov
lret
test
in
les
jno,pt
movsl
ss
pop
test
and
fsubrl
xchg
int
jno
cwtl
xchg
mov
jmp
xchg
out
dec
in
lret
cld
adc
outsb
or
sbb
jl
and
push
dec
mov
andb
jbe
mov
inc
insl
adc
inc
pop
stos
rorl
or
bound
cmp
outsb
insl
mov
lock
in
lods
xlat
scas
clc
jmp
dec
cmp
cmpsb
sub
adc
dec
int3
lea
hlt
insb
lds
pop
dec
lret
xchg
les
mov
mov
lret
inc
sti
into
sub
inc
sbb
cltd
mov
pop
or
sub
mov
sub
jne
jmp
into
imul
or
insb
mov
sbb
imul
cmp
or
mov
jmp
in
lret
dec
mov
lret
inc
push
rcll
dec
and
xlat
mov
test
dec
push
imul
mov
push
dec
sbb
leave
jno
push
lea
mov
pop
dec
enter
mov
mov
pop
or
ljmp
cli
movsl
jmp
ret
pop
pop
daa
rcll
cli
jnp
dec
rcrb
cmp
mov
xor
push
test
lods
into
push
std
aas
test
push
test
dec
pop
push
pop
cmp
adc
or
lret
push
sbb
test
xor
and
cmc
rcrl
and
rcrb
push
inc
cmc
ss
out
out
into
out
xchg
sbb
std
icebp
aam
push
stos
jmp
subb
js
push
mov
into
sub
dec
iret
cli
jno
mov
push
mov
mov
jmp
dec
adc
scas
cmp
dec
into
jmp
cmpsb
icebp
dec
push
fs
lds
push
push
into
aas
xchg
stos
rcr
outsl
ds
sub
insl
or
pop
mov
ss
xor
popa
dec
push
cmp
sbb
pop
dec
inc
movsb
inc
test
mov
aam
jp
cmpsl
movsl
xlat
test
cltd
dec
push
lret
pop
mov
into
mov
add
dec
push
push
or
rcll
lret
jbe
xchg
mov
jg
ret
in
leave
fs
mov
arpl
loop
test
hlt
out
dec
into
sub
xlat
in
rcll
nop
ljmp
adc
adc
dec
xor
not
test
push
sti
cli
es
popa
lret
int3
icebp
fst
out
lea
outsb
jmp
mov
cwtl
dec
clc
loope
loopne
iret
fwait
push
repnz
pop
push
or
movsl
push
dec
cmpsl
addr16
mov
pop
dec
mov
pop
lock
stc
inc
add
es
mov
movsl
in
jmp
dec
rcl
js
sti
aas
les
jmp
cmpsb
ja
jbe
push
pop
out
shl
sbb
cltd
js
shl
push
adc
sub
cwtl
movsl
aas
adc
add
shlb
pop
sub
add
sub
pusha
push
push
sbb
addr16
jg
sub
jp
xchg
outsb
scas
push
jne
dec
inc
mov
lret
mov
inc
push
mov
or
int3
popa
aaa
int
inc
mov
loopnew
xlat
mov
outsb
pusha
mov
mov
outsb
daa
adc
icebp
mov
push
lret
jae
mulb
jle
jl
in
mov
dec
adc
es
ds
push
xchg
loop
jnp
add
lcall
ret
notl
mov
mov
aaa
std
stc
test
lock
dec
dec
dec
or
inc
nop
popf
int
aas
mov
sub
repz
push
xor
mov
pop
mul
jnp
jle
out
pusha
pop
in
dec
sub
iret
leave
fmuls
and
xlat
sar
mov
decl
xchg
mov
les
jae
push
mov
push
jb
push
mov
imul
mov
xchg
sbb
scas
lahf
xchg
pushf
mul
sti
or
cmp
in
jmp
out
out
fcoml
adc
popa
lea
mov
icebp
gs
sti
jbe
fildll
aam
cli
out
xchg
movsl
xchg
jle
arpl
dec
popa
adc
push
pop
iret
push
pusha
inc
or
stc
inc
push
push
xorb
cwtl
dec
pushf
xchg
lahf
inc
and
push
push
jecxz
aam
add
out
fisubrl
mov
jns
or
mov
dec
mov
xorl
sbb
pusha
pop
lds
dec
loopne
xor
jp
inc
inc
ret
mov
pop
cmpsb
dec
int3
cmp
cmp
pop
test
push
mov
les
rclb
in
outsl
ljmp
jl
ffree
mov
je
xchg
sbb
sti
ret
mov
pop
rcrb
sub
mov
inc
dec
sbb
xlat
enter
nop
insl
pop
push
mov
test
aad
pop
adc
jno
mov
sbbb
dec
orb
pop
jbe
xchg
mov
aam
sub
shll
or
jnp
in
mov
stos
pop
les
out
lock
nop
mov
insb
or
sti
fsubrs
icebp
xchg
mov
rcrb
mov
xchg
dec
push
mov
fiadds
cltd
mov
mov
push
jbe
inc
repz
adc
sbb
sbb
out
push
int
jbe,pn
pop
mov
lret
into
shll
mov
jo
and
into
inc
je
dec
adc
adc
jge
sub
sbb
ret
out
pop
jne
adcl
hlt
inc
out
dec
add
pop
rcrb
fcmovne
lcall
xchg
cmp
std
lret
add
popa
sbb
sbb
in
adc
inc
xor
mov
je
xor
faddp
push
es
dec
jnp
add
mov
cmp
iret
into
xchg
sub
adc
pop
enter
xlat
inc
xchg
mov
cltd
fcmovbe
inc
or
sbb
lock
mov
mov
mov
mov
mov
push
xor
pusha
add
or
lea
and
xchg
lret
cmc
mov
jne
hlt
int3
lcall
mov
es
jno
addr16
repz
mov
pushf
in
add
popa
jbe
xor
adc
push
int
inc
lds
and
push
iret
cmp
clc
into
pop
ficoml
ret
movsl
mov
jo
sub
xor
sti
dec
cmp
loope
add
push
mov
or
push
sub
and
xor
adc
lods
push
mov
xchg
daa
ret
add
test
hlt
into
mov
dec
arpl
mov
inc
roll
decb
jb
pushf
aaa
shlb
imul
inc
test
pop
in
mov
movsl
sbb
push
jecxz
pop
aas
out
push
dec
ss
int3
stos
cmp
sahf
arpl
in
ja
mov
jb
xor
aam
push
pop
pushf
lret
cmp
jl
fs
mov
jbe
sahf
dec
add
js
test
shrb
mov
and
clc
aad
movsl
in
and
into
rcll
fmulp
cmpl
test
stos
sub
in
push
imul
xor
out
adc
mov
testl
xor
push
shll
push
rolb
push
outsb
fisubrs
int
loopne
aaa
adc
addr16
in
data16
mov
sahf
push
stos
xor
mov
mov
xchg
lcall
test
adc
mov
je
mov
clc
out
cmp
mov
xchg
dec
push
inc
xchg
in
push
push
cwtl
sbb
leave
shrb
pop
mov
jmp
push
cmc
test
lods
pop
sub
sub
lock
je
or
jne
push
clc
dec
mov
pop
mov
sbb
out
movsl
lods
push
rcrb
rcl
sbbl
fldt
xor
jo
out
lahf
stos
push
push
mov
jnp
mov
inc
mov
xor
add
in
nop
xor
push
adc
mov
lahf
mov
out
out
push
push
pop
daa
mov
pop
mov
dec
pop
cmpsb
jbe
pop
shl
fimuls
jns
inc
sbb
insl
out
push
xor
push
ror
in
aam
and
pop
orl
into
xor
sub
push
push
and
or
push
mov
add
inc
adc
popa
jb
sahf
and
je
das
out
mov
pop
aad
xor
xchg
pop
adc
rorb
aad
xchg
add
mov
fldt
pop
or
orb
in
mov
inc
ss
pop
cmp
insl
jbe
mov
jmp
xor
inc
adc
mov
jae
dec
mov
pop
roll
push
loopne
pushf
out
filds
into
aas
out
mov
adcl
push
cmpsl
cltd
out
data16
pop
test
int3
cmp
int
ja
out
sub
lea
jno
mov
aam
lods
shll
xchg
adc
fimull
sub
das
outsl
out
in
outsb
adc
sub
sahf
push
push
cltd
cmp
jno
inc
sub
add
into
dec
mov
dec
xor
jo
into
aaa
imul
cmpsl
hlt
and
fimull
fs
add
push
mov
ja
xchg
pop
roll
jb
adc
fwait
gs
scas
test
sub
dec
ljmp
mov
std
test
out
movsl
clc
add
rorl
stos
cs
js
mov
sti
clc
mov
cmp
insl
and
fsubrs
int
icebp
mov
push
sbb
pushf
or
iret
fsubp
daa
not
inc
pop
js
mov
cmp
fwait
adc
ss
mov
mov
sub
dec
scas
push
pop
jmp
pop
ret
xchg
pop
xlat
out
addb
insl
insb
lods
imul
push
cmp
xor
leave
pop
or
filds
xchg
inc
dec
fildl
ret
inc
xchg
push
jg
xchg
scas
cmp
mov
mov
push
xchg
inc
hlt
data16
ffreep
jmp
push
cli
negb
pop
into
pop
loopne
or
or
dec
mov
inc
icebp
mov
scas
cmp
mov
jecxz
xor
xor
mov
mov
enter
test
jne
jb
xchg
fdiv
jno
in
push
out
insl
repz
and
mov
inc
ret
lret
mov
pop
cs
push
or
dec
dec
xor
out
js
bsf
jmp
xchg
in
adc
push
xchg
lret
inc
sub
aas
bound
push
in
jbe
mov
push
fs
or
lods
aad
push
lock
into
dec
sub
inc
xor
pusha
mov
aam
inc
cmpb
xlat
icebp
fs
mov
and
xchg
loop
orb
outsl
add
in
rolb
mov
cmpsb
pop
pop
push
arpl
icebp
cwtl
imul
xor
mov
xor
aaa
arpl
mov
inc
add
mov
pushf
add
sub
inc
iret
aad
push
xchg
cmp
push
jbe
xlat
mov
lret
in
outsl
loopne
jg
dec
hlt
lods
test
xor
pop
inc
and
into
jmp
loop
lahf
test
dec
cwtl
mov
cmp
or
scas
into
insb
mov
popa
in
fiaddl
imul
ret
movsl
movsb
iret
jmp
sbb
out
imul
fdivrl
fiadds
imul
outsb
pop
rorl
mov
fwait
add
std
dec
pop
ffree
jb
mov
pop
sub
add
adc
jmp
mov
mov
ret
cs
adc
xchg
mov
xor
xchg
inc
sti
push
jp
in
xor
inc
bound
pop
stos
test
sub
xchg
lods
pop
or
incl
and
clc
in
aad
imul
ss
push
sub
lods
jle
pop
or
push
fildl
push
leave
aam
into
filds
inc
sbb
mov
pop
dec
push
fcmovbe
lcall
add
inc
cmc
jae
xchg
test
mov
repnz
dec
in
test
push
test
les
nop
cmpsb
mov
pop
rol
daa
ficoml
cmp
push
mov
or
mov
aaa
stc
jns
jge
hlt
cmp
dec
sub
sti
jmp
dec
and
push
shlb
jecxz
scas
out
mov
dec
mov
pop
or
sahf
dec
sti
cmc
scas
mov
int3
mov
push
orb
test
pop
lret
mov
fidivl
dec
mov
sub
push
push
jb
jbe
or
xchg
inc
ds
dec
ds
leave
dec
loopne
xlat
pop
xchg
xorl
mov
out
dec
mov
ss
repnz
rol
xchg
out
pop
aad
or
or
xchg
scas
pop
dec
adc
js
out
push
or
pop
mov
out
dec
into
and
mov
jl
pushf
inc
mov
aaa
adc
cmp
mov
sbb
rclb
push
outsb
adc
loope
dec
test
jp
adc
sbb
dec
mov
cmp
out
dec
mov
les
xchg
push
jl
dec
adc
mov
iret
lods
mov
ret
aas
add
push
push
inc
lea
nop
dec
mov
movsb
rcrb
rorl
aaa
dec
mov
or
ja
xor
lods
jbe
xchg
and
dec
jmp
dec
and
sahf
xor
adc
out
push
inc
das
aam
cli
and
mov
xor
roll
adc
or
arpl
fcoml
iret
mov
mov
lds
aaa
neg
insb
inc
cwtl
inc
aas
imul
adc
pop
adc
jmp
adc
cmpsb
scas
xchg
clc
push
fidivrs
dec
adcb
or
push
imul
filds
enter
cld
xor
cmp
fcom
inc
hlt
mov
push
xchg
xchg
in
psllq
rcrl
cmp
jl
push
push
cli
pop
push
jns
int3
dec
mov
js
jnp
sbb
sbb
push
push
jno
push
leave
jbe
test
dec
jmp
sbb
aad
ss
push
lret
adc
dec
mov
test
xorl
dec
pop
cwtl
dec
out
xor
ss
xchg
ja
push
pop
add
fwait
inc
pop
add
add
lods
xor
ljmp
test
out
jmp
push
out
leave
fimuls
xchg
stos
rcrl
and
cmp
in
sbb
fsubrs
lcall
or
jnp
rorb
mov
fcompl
cmp
fsubrp
mov
into
push
insb
or
push
jno
mov
jp
jno
adc
repz
ret
push
xor
jns
add
sti
cmp
adc
sub
push
mov
xor
icebp
dec
mov
sbb
push
loope
out
out
imul
ret
xor
push
stos
sbb
sbb
add
mov
adc
xlat
inc
clc
cmp
rcl
jecxz
cltd
cmp
out
out
insl
aaa
xchg
or
cwtl
xor
dec
add
push
or
int
out
mov
cld
mov
movsl
and
aaa
mov
cli
jbe
popf
test
xor
out
pushf
mov
mulb
cli
movsb
pop
xor
gs
sbb
sub
popa
scas
push
cmc
and
adc
in
shrb
adc
inc
or
jp
push
xchg
les
mov
fsub
push
mov
div
xor
dec
jl
jbe
aam
adc
add
mov
sarb
add
mov
xor
aaa
imul
sbb
addr16
les
pusha
push
ss
or
enter
push
insl
xlat
or
inc
cli
rol
cmpsb
call
sub
cld
dec
inc
push
insl
xor
mov
and
sub
pop
cwtl
ja
into
dec
pop
mov
mov
inc
jbe
add
and
or
push
jns
dec
dec
fsubrs
pop
ja
es
mov
aam
rcll
mov
vmovss
inc
pop
aam
clc
cmp
adc
xor
xchg
mov
mov
fidivrs
test
incb
dec
add
push
outsb
js
push
mov
sbb
pop
insb
ja
addr16
test
mov
idivl
test
cmp
push
lahf
pop
cli
mov
pop
xchg
jmp
add
icebp
div
frstor
pop
lret
sti
stc
out
sbb
mov
insl
lods
loopne
dec
pop
jmp
mov
arpl
adc
cmp
xchg
fwait
in
sbb
movsl
clc
push
repnz
test
iret
sbb
movsl
push
pop
cltd
jl
mov
fstl
insb
and
xlat
sub
shll
lret
popl
mov
mov
jmp
dec
addr16
pop
stos
stos
xor
adc
cld
push
push
movsl
inc
push
rclb
push
pop
daa
data16
scas
addr16
data16
fldcw
mul
insb
and
mov
mov
inc
pop
sub
int
rclb
mov
push
inc
into
lock
lea
jb
add
push
inc
shrb
dec
mov
int
mov
or
test
dec
int
jg
bound
loop
int
push
push
popf
push
pop
or
into
xchg
dec
sahf
es
xchg
aad
sahf
jo
sbb
pop
data16
scas
aaa
lods
and
xchg
lea
outsl
es
cmp
lret
push
push
push
add
sbbb
jle
dec
mov
stos
xor
push
add
add
mov
push
pop
jbe
sub
imul
add
or
mov
push
pop
push
aam
int3
or
dec
iret
mov
frstor
ds
aad
out
test
lret
jne
inc
dec
pop
jle
data16
into
push
lret
cs
addr16
lret
push
push
std
or
rorb
push
cltd
push
fidivrl
push
fdivrs
out
sbb
fwait
icebp
inc
mov
xchg
cmp
lock
ljmp
push
and
mov
sti
lds
xchg
inc
cwtl
adcb
cmc
xchg
mov
sbb
cmp
push
push
or
lret
pop
add
pop
sub
fmull
mov
clc
scas
adcl
and
addl
dec
imul
sub
shr
lahf
clc
or
xchg
jecxz
xor
inc
and
sti
dec
ficompl
add
sbb
inc
and
pop
inc
xlat
movsl
out
xchg
fisubrl
cmp
or
rcl
inc
into
mov
push
jl
movb
cltd
push
jns
adc
bound
mov
xor
adc
adc
lahf
and
sub
inc
cmp
jl
or
decb
sub
js
lahf
test
cmp
daa
rclb
shl
mov
out
pop
test
popl
sti
add
jle
shlb
jle
push
cmp
mov
test
shrb
jae
lcall
lds
and
mov
scas
mov
push
xlat
stos
daa
std
mov
dec
dec
jecxz
push
xchg
test
ds
leave
aaa
lret
ret
sti
pusha
dec
rcrb
xor
or
jo
adc
add
mov
flds
clc
icebp
lock
sarb
out
sbb
into
fildl
sbb
ret
inc
xor
jmp
imul
push
xchg
sub
repz
adc
dec
cmp
push
insb
mov
sar
mov
push
sub
cwtl
sarb
adc
xchg
test
gs
xchg
mov
pop
pushf
shll
notb
stos
add
sbb
xchg
clc
aam
and
push
pop
inc
push
pop
xor
mov
mov
aaa
in
mov
cmp
xchg
repz
sub
out
cmc
outsb
mov
ret
mov
xchg
mov
jl
int
roll
scas
dec
push
aam
in
insb
sbb
mov
add
and
aam
sti
jmp
pop
xor
sti
adc
and
mov
enter
fimuls
cmpsl
fsubs
out
stos
xchg
pop
repz
or
mov
pop
pop
aam
xchg
mov
jnp
adc
pop
sti
int3
jle
push
cmp
in
inc
and
fcomip
push
js
addr16
lea
call
inc
enter
push
jg
bound
dec
rclb
out
lcall
js
mov
fsubrs
sbb
stos
addb
in
dec
ror
stos
add
pop
data16
add
fdivrs
int3
ffreep
cmpsl
jb
jmp
inc
mov
aam
jmp
dec
push
cwtl
xchg
arpl
mov
lods
outsl
in
xor
jge
pop
sbb
mov
addr16
ret
out
lds
les
ror
movsb
cwtl
jb
ds
out
mov
lea
and
addb
ror
scas
shl
mov
lods
add
push
inc
xchg
adc
push
stc
dec
aas
push
fstpl
inc
or
int3
xchg
scas
dec
int3
and
jg
fcmovb
stc
mov
js
mov
adc
ret
mov
mov
mov
fmull
jecxz
sbb
cmpsl
mov
jmp
cmp
inc
sbbl
daa
xchg
data16
inc
clc
mov
shrl
std
pushf
cmc
test
xchg
int
lods
sub
das
scas
call
movsl
scas
sub
dec
mov
pushf
push
sti
leave
in
xchg
xchg
movsb
push
or
aam
outsl
shl
cwtl
pop
push
clc
pop
add
mov
rcr
inc
sbb
fmuls
push
leave
mov
push
sub
pop
jecxz
pop
jmp
dec
cltd
and
daa
arpl
mov
outsb
sbb
es
mov
adc
mov
stos
mov
cmc
xor
fcompl
sbb
mov
push
jecxz
loopne
push
jg
cs
aas
and
outsb
cltd
and
inc
inc
push
sahf
adc
jne
add
mov
stos
jl
cs
xchg
mov
jnp
stos
in
insb
xlat
ret
scas
stos
xchg
cmp
fs
or
aam
dec
cmp
dec
jno
push
pop
fcompl
pop
inc
cmp
cmp
adc
fcmove
nop
mov
jmp
pop
jmp
mov
mov
pop
cmp
mov
outsb
inc
xor
lea
pop
sub
sti
into
jecxz
pop
cmpsl
test
add
sub
xchg
push
mov
imul
xchg
sahf
outsb
imul
xor
xchg
or
fmul
inc
cmpb
push
in
dec
push
out
xchg
mov
push
orl
dec
stos
sbb
fsts
stos
imul
pop
xchg
or
adc
adcb
adc
push
andl
push
xchg
dec
pop
sbb
adc
shll
and
fcmovnbe
nop
sti
push
es
lds
jno
pop
xlat
test
test
cmp
fwait
push
dec
dec
push
js
jb
cmp
jae
mov
popf
lahf
mov
sbb
pusha
and
jl
out
xor
rol
sbb
cmpsl
mov
or
in
sub
aad
dec
ret
and
fistl
jb
pop
cwtl
mov
lods
mov
ret
xchg
cmp
clc
test
mov
dec
mov
mov
nop
shr
xchg
mov
out
mov
scas
sbb
pop
andl
push
xor
adc
push
cmpsb
push
fisubs
lahf
xchg
in
aad
jb
jp
pop
mov
in
dec
in
std
inc
jl
incb
push
jns
mov
xor
aaa
xchg
outsb
pop
bswap
add
into
push
push
add
ds
add
mov
cmp
cltd
or
test
sub
in
jg
inc
adc
pop
ret
push
inc
and
and
scas
sub
adc
imul
aam
callw
scas
mov
push
data16
test
push
or
dec
aad
pop
out
mov
or
inc
xor
adc
shl
cmpsb
lds
jnp
and
pop
pop
push
mov
mov
cmpl
dec
ljmp
aas
inc
fcomps
pop
mov
mov
out
jnp
loopne
push
in
jge
test
jns
and
fimuls
mov
iret
mov
lods
sbb
inc
push
jge
or
outsb
iret
ds
adc
mov
cmp
leave
jbe
ss
sbb
xchg
popa
je
lcall
mov
mov
mov
adc
ret
xor
outsl
lods
out
xor
shll
out
push
add
and
jl
jo
cmpl
fbstp
inc
int
es
jmp
rcll
pop
addr16
ffree
sub
aaa
inc
cs
sub
sbb
adc
push
xor
or
push
fwait
test
dec
pushf
cmc
aam
jno
dec
mov
loop
mov
pop
cwtl
enter
movsl
pop
xchg
inc
xchg
xchg
movsl
push
es
xor
push
jb
out
inc
add
les
ret
pop
add
lds
pop
jl
gs
mov
ds
arpl
dec
dec
test
lock
xor
jle
paddw
cmpsb
into
lea
add
lret
arpl
adc
out
loope
sbb
adc
xchg
test
fisubrs
test
out
leave
lret
loope
stos
mov
test
dec
dec
data16
sub
gs
push
or
sbb
pop
or
dec
push
int3
dec
jb
ret
xchg
and
fidivrs
push
enter
mov
cmp
ljmp
cmp
dec
dec
les
cld
dec
xchg
outsl
stos
dec
in
cmp
mov
adc
adc
in
out
test
insb
inc
xchg
insl
mov
xchg
add
bound
jbe
and
in
or
cmpsb
es
sti
test
mov
js
and
or
adc
aad
xorl
sub
arpl
je
inc
lods
ss
adcb
fmul
or
pop
xor
xor
aad
imul
call
sbb
subb
xor
subb
or
push
leave
jbe
jnp
aam
push
fs
fistpl
incl
lea
jb
call
inc
imul
and
iret
or
in
mov
lods
dec
add
imul
xchg
leave
fmull
adc
pop
lock
movsb
or
pop
xlat
les
xlat
js
cli
adc
pop
mov
pop
insl
lahf
cmc
arpl
rcll
jae
imul
mov
addl
rcl
out
adcl
or
in
ficoml
xchg
imul
test
push
push
fcoms
rcrb
or
and
sarl
dec
lcall
xchg
mov
jp
lods
stos
in
stos
mov
in
imulb
dec
add
mov
loop
mov
mov
inc
pop
jo
mov
cmc
dec
cmc
xchg
mov
adc
push
pop
aam
jo
add
mov
push
xchg
out
xchg
loop
negl
sub
rol
rolb
or
mov
add
xor
jmp
jbe
add
pop
and
xchg
stc
out
outsl
sub
adc
dec
dec
jp
or
repnz
das
inc
dec
mov
imul
push
inc
mov
idivb
sub
nop
stos
test
mov
and
rcrb
insl
xlat
fs
add
popf
inc
pop
cmpsl
mov
bnd
cmp
es
aam
or
xchg
pop
sub
clc
iret
and
arpl
sbb
jmp
xor
jae
cld
cwtl
test
and
xchg
mov
pop
les
aaa
fisubl
mov
jnp
mov
ficompl
mov
iret
push
and
add
jbe
cs
sub
xchg
xchg
xchg
aad
adc
mov
lret
movsl
iret
dec
mov
ds
jge
xor
dec
jecxz
fidivrs
mov
and
adc
jae
xchg
push
xor
ljmp
enter
xlat
call
test
test
bound
jno
sub
inc
inc
ljmp
rorb
cmc
fwait
into
mov
rolb
xchg
xor
lods
adc
mov
or
iret
loopne
clc
jns
loop
data16
cmp
push
xchg
push
jo
mov
movsb
daa
std
jno
icebp
sub
hlt
xchg
inc
ja
sub
clc
sub
dec
cmp
pop
out
inc
fstp
xor
or
or
xlat
shlb
jge
xor
mov
nop
xchg
popw
sti
test
addr16
push
mov
mov
sbb
into
imul
jbe
out
negb
ja
mov
std
pop
je
mov
mov
insl
nop
or
xor
cmpsl
xchg
icebp
sub
in
outsl
ja
inc
jae
mov
out
rcl
and
imul
push
xchg
mov
shlb
dec
add
arpl
adc
xchg
pop
push
xchg
bound
jbe
pop
or
fcomp
xchg
xacquire
int3
dec
into
fdivrl
jbe
sub
rolb
lods
mov
mov
rol
fmull
mov
fisubrl
push
popf
xchg
adc
inc
in
sub
adcb
push
push
push
leave
subw
sarl
fcmovnbe
dec
xchg
xor
fmuls
addr16
rcl
adc
loope
ds
lcall
push
push
and
pop
sbb
xchg
aam
in
push
lea
adc
sub
xchg
shlb
aas
xor
push
mov
inc
mov
es
push
or
into
shlb
push
add
stos
xchg
cmpsb
pop
jmp
lret
sbb
addr16
xchg
adc
loope
xlat
and
aam
loopne
jmp
clc
push
pusha
sub
xor
jne
sbb
or
push
push
and
out
cwtl
sarb
mov
pushw
sbb
adc
mov
out
call
je
push
sahf
in
push
arpl
cli
cmpsl
int3
push
push
adc
and
movsb
and
dec
bound
push
sbb
mov
xchg
xchg
mov
adc
add
xor
in
push
nop
xor
xor
lds
mov
lods
lods
imul
sub
dec
cmp
sti
pop
in
inc
pop
cmp
xchg
clc
and
or
inc
mov
dec
push
cmp
fisttps
xchg
xor
out
sub
jmp
xor
mov
stos
inc
jae
cmpsb
test
lds
outsl
leave
rcr
ss
mov
jbe
out
mov
cmp
mov
lods
out
sub
es
lcall
into
mov
adc
and
xchg
xchg
pop
movsb
mov
stc
xlat
js
aaa
xchg
out
dec
insl
mov
pop
in
aam
outsb
insl
xchg
cwtl
dec
or
dec
pop
mov
test
jnp
mov
or
test
movsl
mov
es
pop
loopne
cmp
fcmovu
dec
dec
xchg
inc
fs
sub
test
or
je
mov
movsb
jae
mov
push
mov
clc
filds
mov
stc
test
push
scas
push
sub
mov
or
push
sbb
and
aad
fstl
jbe
mov
repz
ss
int
clc
xchg
add
sbb
into
push
pusha
shlb
mov
sub
or
outsl
fistps
xchg
jno
scas
mov
inc
cmp
fidivrl
xchg
jno
push
aaa
mov
cmp
jle
loop
lds
lret
push
rcr
int
inc
pop
push
xchg
xchg
pop
mov
out
xor
push
jge
aas
int
lock
pop
and
pop
sbb
test
xchg
pop
mov
lret
xor
adc
stos
jo
or
arpl
cwtl
lods
stc
sub
out
push
add
rcrb
push
push
push
sti
sub
dec
roll
repnz
and
test
in
mov
cld
addb
lret
data16
jns
jne
cltd
sti
sub
xor
fadds
dec
sbb
push
and
fsubl
mov
int3
aaa
in
or
das
sub
aam
adc
add
add
bound
rol
insl
es
test
aaa
dec
push
inc
ja
xor
fs
mov
push
lods
xchg
and
sbb
jno
dec
push
outsb
cmp
subb
jge
loope
jp
out
push
movsb
add
in
pop
mov
inc
out
testl
lret
lock
add
cli
fsts
add
inc
mov
out
daa
push
mov
and
sbb
dec
clc
sub
jns
out
or
daa
inc
aad
lcall
lock
push
rclb
outsl
sahf
fsubs
loop
jecxz
pushf
mov
js
cmp
mov
sub
hlt
rorl
ds
dec
in
faddl
out
inc
xchg
push
and
dec
mov
lds
out
inc
nop
bnd
rorb
and
adc
stc
push
lcall
fldcw
push
jae
xchg
jae
notl
dec
icebp
clc
mov
shlb
leave
jle
cmp
and
push
in
subb
stos
jb
lds
pop
add
add
in
pop
xor
filds
sub
pop
mov
push
mov
sbb
pop
fstpt
dec
mov
in
aam
sbb
nop
enter
clc
or
out
mov
lcall
mov
cmp
repz
adc
shrl
or
dec
sbb
mov
into
cmp
jae
jl
cwtl
adc
aas
push
add
xor
pop
mov
push
dec
dec
sbb
push
push
out
es
test
loope
cmp
test
xchg
mov
arpl
testl
lret
ffreep
es
into
fstl
mov
jae
ljmp
push
outsl
aad
addr16
cwtl
in
movd
aaa
pop
clc
into
sbbl
xchg
xchg
ljmp
xchg
lods
shl
fdivs
add
push
clc
roll
test
repz
push
imul
adc
jae
mov
push
ja
stos
add
jl
loope
mov
dec
scas
add
std
daa
and
xchg
mov
mov
adc
idivb
push
push
push
xchg
dec
shlb
ja
fs
jbe
out
lcall
and
sbb
aaa
cs
icebp
jae
and
mov
stos
adc
scas
mov
jbe
mov
xchg
cmc
iret
pop
inc
xchg
cld
jns
or
cmp
testl
mov
out
mov
cmp
jge
ss
mov
lret
mov
lret
push
bound
leave
xchg
imul
stos
cld
mov
fdivrp
dec
jle
jnp
sti
dec
cmp
fld
or
in
outsb
iret
inc
divb
jne
xor
int3
xchg
out
mov
ljmp
rcll
xchg
push
clc
inc
sbb
inc
pop
ret
xor
ja
xor
ss
cld
pop
cmp
popf
into
xchg
aam
mov
cmp
call
adc
inc
add
filds
rcrb
or
add
pop
xchg
nop
out
adc
cmp
into
dec
daa
addb
sub
js
mov
mov
push
jmp
ljmp
cmp
cmp
cli
push
push
ret
sub
repnz
inc
add
in
scas
nop
mov
xchg
idivb
mov
sbb
hlt
lret
jbe
fstpl
mov
scas
pusha
rcr
in
dec
mov
js
stc
jb
rcl
push
in
fidivrl
repnz
hlt
push
fldcw
nop
push
dec
mov
mov
ret
pop
jno
fbstp
sbb
pop
pushf
popa
adc
es
divl
scas
imul
xchg
pop
in
inc
or
and
inc
push
dec
lahf
adc
xor
daa
cmp
rcl
sbb
arpl
jno
insl
pop
out
xlat
lret
iret
in
mov
out
fiaddl
push
daa
pop
sbb
in
int
call
sbb
inc
and
int3
imul
aaa
fmuls
dec
pop
leave
xchg
jns
add
pop
push
mov
or
fmulp
push
mov
sbb
xchg
hlt
sbb
jecxz
out
sti
sar
mov
aas
test
outsb
aam
shl
xchg
fildl
fisubl
push
test
lret
cwtl
popa
lret
rorb
out
lea
mov
cmp
mov
andb
dec
adc
into
mov
mov
push
add
push
push
mov
ja
pop
out
xor
mov
and
es
lret
push
pop
sbb
stc
sbb
mov
and
xorb
or
mov
sbb
sbb
mov
out
shrl
dec
hlt
pop
sub
cwtl
pop
stos
cmp
out
je
pop
add
add
ss
and
cltd
lods
imul
jg
pop
pop
xchg
sub
call
mov
test
stos
pop
stos
rorb
in
leave
dec
leave
sarl
jmp
xchg
iret
js
dec
fdivs
loop
mov
mov
jp
jecxz
sbb
fld
sbb
jecxz
cld
cmp
int
daa
pop
dec
std
push
outsl
sbb
xchg
cwtl
mov
adc
push
dec
sbb
in
xchg
int3
or
das
hlt
and
pop
or
out
mov
adc
or
push
dec
aas
addl
push
leave
add
movsl
test
jmp
shll
push
pushf
and
push
mov
fadds
mov
shrl
sbb
outsb
incb
adc
pop
lret
pop
cs
aam
jbe
fimull
or
dec
inc
dec
out
mov
and
push
rcl
lea
add
stc
jo
add
fwait
addr16
mul
mov
mov
test
push
or
push
fmuls
pop
jge
subl
push
js
sbb
test
inc
adc
out
movsl
cmp
stc
out
push
cmp
roll
adc
fisubs
fidivrs
mov
xor
dec
orl
sti
sub
xchg
lret
lret
mov
insl
sub
adc
add
xchg
mov
sahf
xchg
and
mov
xorl
mov
push
popf
clc
int3
mov
fs
test
dec
outsb
lea
imul
and
xlat
int
adc
cmp
jae
cltd
or
mov
mov
lret
xor
dec
dec
or
mov
movsb
into
mov
loope
test
in
roll
roll
jle
add
in
mov
in
push
out
xchg
enter
inc
adc
dec
push
dec
and
mov
and
pusha
dec
leave
emms
push
fcmovbe
and
lret
ret
repnz
into
sub
mov
xlat
adc
flds
push
inc
cmp
ss
int
sbb
mov
ljmp
adc
sub
into
mov
jl
insb
jae
xchg
icebp
out
out
mov
jle
adc
inc
jl
cmp
out
clc
jo
icebp
add
int3
add
dec
aas
iret
xchg
jb
xchg
or
loopne
cmpsb
or
aaa
jbe
cmc
mov
rclb
or
rcr
std
mov
mov
pop
pop
push
jle
sbb
loop
mov
lods
pushf
add
stos
mov
movsl
fwait
decl
mov
jae
sarb
insl
adc
lods
cld
mov
cmpsb
inc
leave
cmpl
add
fnstcw
lret
inc
into
data16
aaa
jecxz
sbbb
inc
xchg
lret
cmp
stos
je
sbbb
xchg
into
lea
jbe
mov
or
and
xor
cld
mov
cmp
mov
sarb
cs
push
adc
jb
mov
shl
xor
xchg
aaa
xchg
js
int
lcall
pusha
popf
xor
and
add
rclb
jae
xlat
dec
inc
push
iret
fistps
mov
add
and
pop
or
dec
subl
add
in
jne
or
insl
stc
xchg
sub
push
bound
add
in
cld
mov
cmpsl
pop
and
int3
dec
ss
les
mov
cmp
in
pushw
mov
jle
and
or
xchg
cwtl
ja
inc
xchg
mov
jb
fisttpll
insl
stos
movb
into
stc
xor
in
test
stos
dec
adc
fistl
mov
lret
and
mov
movsl
push
aad
sti
roll
shll
imul
push
dec
popf
sti
inc
jno
mov
cmp
jo
stc
addl
jbe
sub
jge
dec
and
inc
dec
loope
xchg
ja
ljmp
sbb
jbe
fcoms
xchg
les
push
dec
pusha
sbb
sti
outsl
lea
adc
out
inc
imull
pop
inc
jnp
jbe
push
xor
popf
fwait
push
data16
aas
sahf
into
lret
pop
leave
lds
inc
sarb
out
xchg
cmp
or
in
sbb
in
test
cmp
loopne
sub
pop
pop
sub
inc
test
inc
int3
push
fcoms
shrd
leave
andb
sti
addb
lds
std
sub
mov
cmp
repnz
je
jbe
push
mov
stos
dec
adc
loop
xor
mov
jecxz
repnz
mov
rep
add
or
xlat
pop
pop
or
ss
call
fcom
test
xor
push
cmp
add
bound
aam
sahf
mov
push
into
lret
xor
loopne
popa
lcall
adcl
and
in
add
out
imul
jmp
into
fildll
ja
test
mov
dec
mov
mov
es
dec
mov
scas
and
lods
mov
loopne
push
lods
or
dec
add
mov
cltd
int
rorb
hlt
sub
lock
pop
and
aaa
es
into
sbb
cltd
cmp
addr16
ficomps
imul
jae
aas
xor
mov
lds
push
int3
ds
or
ficompl
pop
insl
mov
mov
fs
add
xchg
xorps
cmp
mov
xchg
push
lahf
pusha
cmpsl
out
cmpsb
mov
mov
jnp
and
stos
sbb
mov
jmp
repz
cld
mov
sub
cmp
call
movsb
push
mov
and
adc
test
sbb
mov
mov
dec
outsl
out
add
mov
stos
dec
xor
adc
shlb
mov
xor
out
data16
clc
mov
jecxz
push
jp
addr16
xchg
pop
out
mov
repz
movsl
ljmp
mov
pushf
cmpsb
inc
lds
cmp
dec
jb
aad
jge
push
cmp
shrb
jo
into
xchg
addr16
dec
in
dec
xlat
jmp
and
int3
cmp
std
fcmovu
stc
leave
inc
lcall
push
into
lret
flds
jb
mov
push
and
push
inc
jbe
xchg
int
imul
xchg
xor
jmp
rclb
inc
cwtl
call
dec
pop
repnz
xchg
divl
mov
cmp
xor
in
rcr
and
loop
push
jns
movsl
xchg
sub
test
insb
sbb
int3
push
cmp
arpl
push
push
imul
push
push
cli
sbb
mov
or
outsb
and
jecxz
test
rorl
or
pushf
sub
stos
jb
popa
jl
dec
lock
or
rorl
push
loopne
sbb
or
push
cld
jo
lods
jns
hlt
mov
scas
out
nop
or
lds
ds
testb
xlat
mov
or
out
push
dec
sbb
xor
mov
stos
daa
fimull
dec
or
mov
je
inc
adc
mov
lods
into
pop
mov
mov
dec
sbb
adc
inc
rclb
cwtl
dec
imul
fcomp
sbb
jmp
aaa
jbe
cpuid
jge
lods
testb
inc
pushf
fsubr
sub
fldl
outsl
or
rorl
cmpsl
test
push
adc
cmc
shr
jge
xchg
shl
and
or
adc
es
fisttpl
outsl
jge
push
pushf
mov
nop
mov
cmp
pop
jle
int3
out
dec
sbb
cmp
popa
ret
adc
dec
ds
jns
sub
imul
add
xlat
iret
aaa
xor
pop
cmpsb
in
daa
sub
clc
and
shrl
jg
sbb
xchg
and
inc
out
mov
negb
push
pop
cmp
sub
jg
sub
mov
cli
dec
pop
scas
stc
aam
xor
xchg
lahf
mov
jae
push
sub
mov
inc
mov
dec
jae
rcl
in
xchg
dec
cltd
jecxz
out
add
pop
fisttpl
in
scas
mov
and
fwait
mov
jge
jo
and
roll
push
negl
inc
adc
aaa
sub
pop
or
xchg
int3
cmp
ds
dec
mov
dec
xor
jne
repnz
clc
cld
sub
pushf
pop
dec
hlt
sti
ss
into
insb
cmpb
xor
pop
daa
pop
mov
sbb
loopne
push
adc
cmp
mov
push
pushf
ficoml
cmpsb
lret
jmp
push
cltd
frstor
test
xchg
daa
lret
or
or
outsl
icebp
push
aas
mov
xchg
addr16
testb
incb
jo
aad
mov
add
ror
scas
lock
fldl
inc
push
push
shll
sti
dec
fsubl
or
mov
sti
add
scas
insb
push
out
pop
dec
outsb
fmuls
inc
inc
xchg
ds
mov
int3
pop
add
call
or
xchg
stos
testb
mov
dec
out
test
or
je
xchg
jno
fildll
mov
pop
stos
jnp
add
in
les
mov
shr
mov
jbe
cwtl
jb
sbb
adc
mov
jecxz
clc
insb
fistps
pop
sbb
jo
fwait
adc
mull
arpl
pusha
into
inc
arpl
adc
in
mov
cwtl
sub
mov
jnp
out
mov
cmp
inc
jno
sbb
mov
push
out
push
push
cmp
into
call
call
popf
int
lods
ret
aas
arpl
xlat
inc
fcom
jne
adc
push
pop
loop
aam
push
mov
xlat
xor
out
mov
not
mov
mov
xchg
pop
push
adc
dec
adc
push
xor
pop
sbb
outsl
mov
in
out
adc
loop
popa
into
lret
sbb
hlt
mov
into
lret
and
sbb
faddl
shll
icebp
adc
lea
or
es
stos
mov
insb
and
lahf
out
popf
test
daa
into
lods
sbb
into
jns
cmp
mov
pusha
mov
xlat
test
or
inc
jne
mov
iret
out
lret
sub
sub
fwait
cwtl
mov
in
popf
mov
ret
sbb
subl
cmp
mov
js
repz
ja
sbb
fbld
jae
cmpl
jecxz
leave
aad
jmp
aas
jge
add
cmc
jg
xchg
fldcw
jbe
jb
mov
mov
jge
int
add
fbld
push
jle
push
cs
xchg
and
lods
sbb
imul
icebp
cltd
xchg
push
cmp
sbb
mov
int3
out
ds
jmp
adc
push
push
into
jbe
mov
jnp
push
call
jo
out
push
js
fsubl
push
dec
test
sub
in
push
or
mov
dec
push
or
pop
push
roll
sub
push
lret
aaa
lods
cmp
adc
orb
push
jmp
out
lret
and
or
outsl
rcl
push
inc
test
inc
fsts
in
testb
push
and
push
add
xchg
dec
dec
aas
mov
mov
lods
out
fincstp
mov
ffreep
cwtl
scas
sub
dec
and
sahf
cmp
insb
sbb
movsl
pop
adc
cld
push
sbb
cmovge
pop
aas
push
push
loop
cmpsl
lods
rorb
xchg
xor
insl
and
test
or
cmp
mov
cmp
ljmp
mov
mov
xchg
push
popa
ljmp
insb
mov
data16
mov
loop
cmp
test
cwtl
rcll
mov
lahf
inc
mov
into
enter
cmp
jae
loope
shrb
in
fcomps
xor
into
cld
or
test
cs
ja
stos
inc
mov
subb
or
mov
cmp
sbb
pop
pushf
test
icebp
or
je
or
out
imul
mov
rolb
sub
lret
loope
jno
testl
mov
outsb
arpl
dec
push
je
ret
jns
ja
mov
push
mov
mov
into
push
jno
cmp
int3
push
lret
dec
cmc
enter
cli
stos
xchg
add
adc
fistpl
idivl
adc
push
lea
mov
ss
jle
into
daa
jns
pop
pop
jmp
dec
hlt
lds
sbb
push
inc
or
pop
fcomps
lret
into
mov
cli
sbb
rolb
and
xor
inc
xlat
mov
into
xlat
mov
out
pop
sub
aam
and
or
push
mov
sbb
mov
es
jnp
pop
loopne
insb
in
repz
cmc
jp
adc
mov
sbb
ds
jb
outsl
lret
jp
jmp
sbb
mov
testb
xchg
imul
imul
mov
jg
xor
out
inc
mov
movsl
push
pop
shlb
jbe
inc
pusha
push
or
xchg
mov
xor
popf
arpl
je
int
xor
jmp
push
es
sbb
popa
jge
sbb
test
pop
in
js
popf
lret
cmp
jmp
fimuls
lods
into
pop
pop
sbb
push
sti
aas
aam
push
adc
jo
push
fdivrp
add
scas
mov
leave
fwait
push
ret
adc
cmpsb
pop
add
adc
test
dec
and
jbe
dec
pop
mov
call
mov
xchg
leave
lea
mov
dec
gs
stos
pop
inc
sbb
jge
pop
std
dec
stos
in
inc
push
pop
aad
push
or
pop
jge
push
aam
lea
xor
pop
ss
lods
outsl
imul
stos
imul
push
lods
rcrb
rcrl
mov
int3
sti
jmp
dec
mov
xchg
out
jmp
lahf
xor
fldenv
dec
xchg
lret
push
and
ljmp
std
sarb
mov
lea
sti
pop
mov
stos
insb
repnz
aam
shll
aad
pop
stos
cwtl
int3
out
xchg
inc
jbe
dec
mov
push
loop
movsb
icebp
jb
repz
mov
jae
mov
cmp
je
push
lret
pop
mov
adc
or
push
lea
cmpsl
pop
mov
testl
xor
xchg
addr16
dec
mov
aad
mov
js
mov
std
or
insl
int
add
bnd
xor
jae
aas
xor
xor
mov
cli
dec
aad
cmp
pop
sub
lahf
xchg
or
push
popf
mov
pop
jae
cmpsb
jb
sub
lret
in
xchg
and
pop
call
jns
fmuls
mov
daa
call
push
jae
mov
roll
jl
jmp
aaa
add
jle
iret
decl
ficomps
std
dec
test
lods
adc
loopne
add
push
in
xchg
in
sti
and
mov
mov
inc
sub
test
xchg
cld
ror
mov
xor
sbb
cmp
cmp
mov
mov
call
leave
or
arpl
fisttpl
hlt
out
fisubrl
fwait
push
xor
jbe
dec
jge
fnstenv
aad
into
es
mov
pop
loopne
pop
test
nop
cmp
and
cmp
insb
jns
out
getsec
push
push
sub
movsl
cld
jae
imul
mov
xchg
gs
inc
push
outsb
sbb
cli
xor
and
les
or
int3
cmp
jno
aas
sbb
add
call
adc
adc
dec
mov
dec
xor
jle
inc
push
pushf
in
mov
out
pop
pop
mov
aas
inc
movsb
out
mov
icebp
sub
dec
mov
call
popa
cmpsb
das
leave
andl
into
icebp
mov
scas
mov
in
fistpl
rcr
sub
mov
lock
jne
or
mov
inc
mov
mov
inc
xchg
hlt
jne
out
into
push
insb
fcmovbe
xor
les
jp
out
fldl
test
push
push
jmp
jl
add
fwait
inc
lods
lret
jle
nop
and
lock
mov
sbb
fwait
loope
mov
out
add
test
jmp
or
mov
ss
test
sbb
imul
aad
mov
adc
or
add
mov
xchg
sti
aad
or
mov
out
clc
aaa
testl
and
test
scas
xchg
xchg
addr16
or
inc
fdivl
call
mov
mov
push
xchg
call
inc
lret
lret
sbb
popa
push
cwtl
sbb
adc
fisttps
push
and
xchg
out
iret
lret
xchg
push
fisttpl
xchg
cmp
adc
push
pop
test
out
and
sahf
or
push
jecxz
pop
loop
push
clc
mov
movsb
adc
fcoml
stos
xor
xchg
mov
aaa
loop
repnz
test
rcl
push
and
adc
imul
sub
inc
push
pop
or
sahf
xor
push
and
jb
push
repnz
les
jp
fimuls
cmp
xor
icebp
or
dec
rorl
jmp
cmp
subl
mull
inc
mov
sub
push
das
xor
int3
pop
xchg
xchg
adc
test
aaa
cmp
or
lret
inc
or
stc
or
imul
xor
xlat
mov
mov
aam
pop
lret
loop
test
popa
jle
clc
dec
mov
xchg
jbe
mov
add
sbb
dec
loopne
push
outsb
pop
dec
out
or
or
fdivl
inc
negb
iret
ds
xchg
xor
repnz
adc
xchg
cli
pop
aaa
jl
push
cmc
lret
lods
lret
push
inc
pusha
shrl
out
jp
push
je
sbbb
sbb
mov
mov
jbe
cmc
pop
mov
ss
xlat
scas
dec
jnp
aad
adc
jecxz
in
jae
cli
movsb
rclb
orb
pop
ds
rep
sbb
lgs
out
xor
adc
mov
push
nop
loope
xor
jmp
jle
lahf
xchg
adc
rorl
mov
nop
int
pop
ds
push
dec
sbb
mov
into
shll
inc
mov
loop
pop
fld1
mov
out
fs
lock
rol
cmovl
inc
daa
xchg
xchg
sub
sbb
sub
mov
into
out
push
insl
test
xchg
xchg
testl
jp
rcrl
push
mov
mov
xorb
cltd
sarl
jno
jo
xchg
insb
pop
movsl
ss
dec
popl
clc
dec
push
popa
outsb
adc
jb
jle
xor
xlat
aad
sub
js
jmp
aam
rol
push
jle
loop
dec
test
dec
icebp
out
pop
xchg
ljmp
mov
aas
mov
aad
adc
mov
ret
not
mov
jmp
mov
cli
rcr
or
xor
movsl
lahf
jmp
mov
sub
lret
inc
dec
mov
sub
addr16
subl
cld
sbb
dec
mov
out
pushf
test
jge
mov
es
je
lock
sar
movsb
and
cwtl
adc
bound
xchg
mov
push
int3
mulb
outsl
cmp
out
mov
lcall
xor
fwait
dec
lods
shlb
cmpsb
ja
dec
push
into
mov
testb
fiadds
inc
loope
lods
andl
xor
cld
mov
add
cmp
mov
or
cmpsl
xor
lea
pop
xchg
test
das
fdivp
push
and
mov
arpl
push
dec
push
or
and
push
stc
sub
ds
ret
lahf
pusha
shlb
loope
push
repnz
xchg
xor
or
lahf
xchg
pop
stos
lock
imul
ds
test
inc
adc
sub
lahf
jo
sub
aaa
sbb
aas
shl
cs
xor
mov
mov
push
enter
adc
popl
push
dec
and
rcl
jp
andb
or
aad
sub
jae
mov
or
dec
inc
or
fcoms
aas
push
or
iret
sbb
loope
aam
lcall
fsubs
sub
sbb
mov
or
insl
sub
aam
lret
pushf
outsb
fimuls
push
and
mov
and
mov
scas
cltd
lahf
stos
ja
inc
jbe
fnstsw
mov
jp
fdivs
cwtl
out
addr16
repnz
aas
push
xlat
inc
insl
repz
mov
mov
or
adc
movsl
mov
dec
addr16
outsw
ja
pop
cwtl
clc
cmc
sub
in
cmp
mov
neg
xchg
push
jno
xchg
or
ret
mov
add
mov
fildll
fldl
es
add
sub
leave
or
icebp
sbb
nopl
cli
out
cltd
inc
rolb
or
mov
imul
test
mov
into
sarl
filds
cmpsl
insl
mov
push
add
data16
or
std
mov
in
call
into
rorb
test
pop
int3
pop
hlt
cltd
dec
pop
inc
imul
xlat
pop
sub
in
in
loopne
mov
outsl
jo
lods
outsb
ss
ljmp
sub
push
jno
mov
stos
xchg
xor
ja
mov
stc
into
iret
lods
pop
pop
in
or
jo
gs
cmp
cmp
or
cli
cmpsb
add
shll
cltd
pop
and
call
pop
inc
je
mov
leave
jl
cmpsb
mov
je
push
fisubs
inc
sub
aas
insl
arpl
xor
dec
jl
in
mov
lods
repnz
out
ficoms
or
dec
jne
xor
out
or
loop
dec
out
rcll
or
setbe
pop
js
push
fcmovbe
sbb
pop
aam
loopne
loop
adc
dec
or
js
cwtl
mov
mov
je
in
push
into
fiadds
sub
push
adc
stos
dec
xor
scas
jb
sbb
in
test
scas
test
and
lret
mov
insl
ss
cmp
mov
loopne
jbe
in
ljmp
cmp
adc
add
mov
les
out
clc
shll
aaa
pop
lret
cmp
push
lods
cltd
xchg
mov
and
icebp
out
jo
push
jg
add
fsubrl
hlt
mov
mov
push
push
orb
cltd
scas
aam
es
inc
insl
cwtl
lock
outsb
sbb
ja
repz
or
mov
stos
pusha
mov
and
push
push
int3
nop
xchg
insb
sub
pop
cmp
into
cmpsl
cs
clc
lock
xor
jae
dec
shrl
lret
stos
dec
inc
mov
aaa
jnp
in
cwtl
mov
nop
add
inc
sahf
dec
addl
mov
inc
or
mov
stos
push
add
push
push
xor
cmp
jno
push
sub
ds
hlt
push
movsl
adc
les
inc
mov
fnsave
stos
test
sub
mov
jb
dec
inc
cs
push
fcom
mov
shll
dec
push
xchg
cmp
or
dec
push
sbb
xchg
cli
test
inc
ror
fwait
and
mov
sar
ficompl
test
mov
jge
push
or
dec
aas
out
mov
int3
fdivr
popa
push
bound
dec
leave
int3
sub
push
sbb
ljmp
cmc
stos
imul
rorb
or
rcrb
mov
and
xchg
mov
inc
xchg
icebp
aad
cli
jno
xor
mov
mov
loope
into
mov
out
sti
clc
shr
arpl
or
push
push
jle
leave
out
call
lock
and
xchg
ljmp
xor
mov
cld
lret
or
push
adc
inc
movb
iret
std
pop
mov
pop
fdivs
pop
dec
in
adc
or
xchg
push
mov
mov
aas
mov
out
orb
rclb
xlat
mov
push
jb
xor
jmp
mov
in
pop
lea
out
jmp
mov
mov
mov
jecxz
add
shrb
dec
adc
test
mov
cmp
mov
and
mov
push
mov
fsub
pop
outsl
dec
sbb
fisttpll
ret
gs
imul
adc
sbb
inc
pop
or
test
stc
jg
jb
dec
pop
jp
fwait
mov
mov
rclb
dec
inc
sub
fcmovnbe
mov
jns
nop
xchg
lret
imul
dec
mov
lea
out
adc
aaa
cmp
rolb
arpl
adc
stos
dec
pop
int3
loope
cmpsl
xor
xor
pop
adc
xor
adc
mov
and
jae
mov
sub
cmp
jne
mov
es
pop
push
mov
push
push
pusha
push
shrl
pop
xchg
lret
mov
into
and
adc
popa
xor
ss
lret
test
sbb
push
rcrl
mov
cmp
pop
pusha
sub
lea
ljmp
or
nop
push
pop
adc
or
jno
sub
push
sbb
pop
dec
add
repz
in
mov
movsl
jp
mov
fldenv
sbb
icebp
iret
mov
in
rclb
jbe
cmpsb
xchg
adc
int3
int
movsb
push
jnp
jg
pop
into
dec
mov
sub
adc
mov
cmp
in
mov
ret
adcl
imul
jl
sbb
pushf
cwtl
xchg
dec
faddl
sarl
idivl
loopne
add
dec
into
jb
cmpsb
enter
scas
das
cmp
pop
xchg
push
mov
lock
mov
loop
xor
lret
pop
jbe
pop
ror
add
jmp
cmp
push
subl
sarb
xor
je
fbstp
adc
jne
aaa
sbb
push
or
or
jp
popf
and
fsubl
xchg
add
shlb
inc
lock
cltd
data16
mov
scas
jne
cli
push
rcl
pop
push
xchg
jo
xor
sub
xlat
lea
leave
push
and
push
mov
cmpsl
iret
ja
icebp
mov
movsb
ja
test
stc
pop
and
lret
jo
std
lret
cwtl
jb
in
call
adc
into
out
sarl
pop
sbb
cmpsb
cli
pop
ret
hlt
lret
sbb
sub
mov
pop
divl
pop
jae
int3
mov
push
into
xchg
or
movsb
jne
or
inc
cld
push
pop
and
aaa
clc
xor
xchg
outsb
mov
dec
lock
sub
adc
adc
pop
mov
xor
or
mov
test
add
gs
or
imul
xchg
jae
jle
mov
fwait
mov
mov
cmp
xchg
not
xchg
mov
imul
sub
dec
jbe
pop
fdivrl
into
push
mov
ret
mov
out
jp
std
pop
aas
xchg
fsts
dec
xchg
mov
jbe
out
hlt
dec
ja
cld
movsb
test
aad
fidivl
gs
cli
and
pop
sbb
aad
movsb
cmp
fmuls
pop
mov
sbb
push
shrl
cwtl
lods
movsb
popf
in
mov
and
mov
dec
enter
push
dec
xor
fistpll
cmp
fucomi
cs
lods
jle
cmpsl
je
scas
or
xchg
mov
loope
and
adc
ss
mov
addr16
sub
mov
fldcw
scas
push
test
push
dec
fs
ret
mov
roll
sbb
int3
daa
xchg
out
push
and
dec
sti
stc
sbb
mov
adc
flds
cwtl
icebp
sub
leave
mov
pop
jne
push
sbb
push
fdivs
lock
test
fstps
clc
sbbl
js
or
lods
arpl
ds
repz
inc
sub
pop
ret
xor
dec
lods
add
ja
jl
mov
add
adc
das
dec
and
sub
std
leave
mov
and
pop
inc
in
out
fimull
cmp
push
mov
push
fimuls
inc
cmp
aas
outsl
shlb
lea
push
insb
aaa
inc
add
sub
sbb
sti
dec
cmp
loope
test
jb
fs
mov
cmp
out
lea
fucomip
mov
or
mov
test
fsts
lods
mov
cmpl
push
add
xor
ficomps
loopew
cld
sub
sub
stos
mov
push
jecxz
gs
in
add
aam
push
mov
repnz
lret
loop
xor
out
rorl
dec
repnz
aam
std
enter
xchg
lea
sub
inc
jecxz
push
adc
mov
icebp
data16
in
jp
xchg
xor
jmp
mov
mov
xchg
cmp
mov
scas
mov
mov
aad
mov
int3
or
add
fcoms
and
inc
loopne
std
je
mov
imul
adcb
pop
lods
sub
mov
cmp
mov
push
ja
adc
mov
jne
sub
inc
push
xor
sbb
shlb
mov
add
movsl
lret
lret
cmpl
xor
fstl
iret
arpl
loope
jae
out
cltd
jnp
push
inc
in
pop
sub
add
in
xor
scas
daa
fs
mov
pop
idiv
sub
xor
enter
scas
test
out
lret
out
cmp
add
xchg
lods
mov
xor
cld
jbe
jb
lods
mov
adc
xlat
and
popf
push
hlt
stos
adc
lds
mov
in
je
movsb
inc
mov
rcrl
notl
hlt
imul
int3
adc
adc
std
addr16
xor
dec
mov
mov
jae
lret
mov
ret
fstpt
xchg
xor
xchg
mov
mov
and
test
add
inc
test
sub
mov
mov
aad
or
fs
sbb
sub
cltd
fistpll
arpl
and
pop
ds
push
shl
js
gs
adc
inc
fs
popl
out
inc
loope
mov
nop
push
dec
notb
mov
and
xor
mov
cmp
test
or
inc
subl
inc
sahf
mov
adc
jmp
or
push
xor
cs
pop
test
std
loop
inc
enter
jl
sbb
outsb
adc
dec
sub
xor
test
fsubrl
dec
xor
sub
cmpsb
pop
xor
nop
xchg
mov
fldl
dec
mov
stos
inc
aad
push
add
dec
out
imul
jbe
or
adc
int3
sub
sbb
sub
test
push
add
add
push
in
enter
jae
int
repz
pop
mov
les
lret
xor
call
int3
mov
pop
jecxz
into
xchg
fbstp
xor
cli
mov
shrb
test
xlat
sub
lock
mov
xor
mov
mov
mov
mov
test
jb
sbb
sub
mov
call
mov
fidivl
out
rol
imul
dec
sbb
add
insl
xor
xor
and
and
mov
shll
or
add
sbb
dec
lret
add
out
xchg
jns
movsl
lods
xchg
or
inc
cli
cmp
das
cmc
loope
add
iret
ss
adc
in
xorb
or
cltd
aam
inc
or
jecxz
xchg
das
out
hlt
idivb
sti
jae
lret
ret
popa
fildl
pushl
movq
std
sbb
iret
test
add
stos
imul
in
inc
dec
adc
clc
jne
sub
hlt
adc
cmpsl
int
fbld
push
out
jmp
xor
aaa
lcall
jns
or
fs
daa
add
jnp
and
xchg
sbb
pop
aad
xchg
lahf
inc
lods
mov
sahf
bound
repnz
clc
shl
ja
cmp
sbb
pop
shll
cwtl
repnz
aad
jno
push
xchg
inc
push
adc
ret
pop
push
int3
xor
dec
js
inc
in
pop
jae
mov
shlb
mov
inc
inc
aam
jo
mov
xor
movsl
lret
jmp
cmp
add
and
dec
hlt
jno
lock
sti
popa
int
andb
mov
push
dec
insl
sub
mov
stos
jne
jle
sbb
mov
cld
or
addl
adc
lock
sub
push
and
cltd
sbb
mov
inc
aam
jno
and
sub
fdivs
loope
jl
mov
fwait
mov
jecxz
mov
push
dec
mov
fldenv
push
or
push
dec
cltd
int
fiaddl
daa
inc
inc
jns
mov
push
jg
jmp
int3
jb
mov
push
hlt
orl
jno
add
push
inc
jmp
jge
movsl
mov
xchg
mov
aas
mov
out
jg
cli
push
test
rcl
ja
cmp
dec
add
inc
pop
mov
test
std
jge
lds
pusha
in
xor
cmp
sbb
xor
outsb
daa
mov
or
cmp
mov
cs
dec
imul
adc
test
dec
sbb
in
mov
pop
or
xchg
loopne
lods
std
dec
or
cmp
mov
xlat
sub
push
mov
push
dec
movsb
push
int
int3
pop
mov
mov
jo
test
jge
pop
ja
cmp
into
test
int3
xchg
cltd
icebp
push
xor
lret
gs
cli
stos
adc
out
fucomip
fimull
nop
repnz
cmp
mov
inc
sbb
iret
imul
rorb
loop
jmp
enter
movsl
pop
lcall
movsb
iret
dec
je
mov
and
enter
xlat
mov
imul
sub
jae
sbb
loop
add
xchg
lret
sub
mov
adc
xchg
mov
loopne
sub
sbb
sahf
iret
cli
mov
push
in
out
cmpsb
xchg
ds
dec
mov
sub
or
jge
adc
cmp
sub
mov
jp
add
xor
ret
cmp
js
dec
imul
aam
or
xchg
int
inc
mov
sub
mov
xor
mull
outsl
dec
or
movsl
mov
mov
lock
bound
xchg
loope
pushf
lret
or
enter
rcrb
stc
leave
int
push
xchg
mov
clc
jae
push
out
inc
adcl
pop
sbb
dec
mov
or
insl
xchg
xchg
repz
add
dec
out
es
ss
mov
cmp
scas
pop
adc
out
rclb
mov
xor
and
lret
rcl
or
mov
stos
stc
in
dec
imul
mov
push
mov
cmp
int
cmpsl
mov
mov
sbb
xchg
lock
and
rclb
imul
int3
push
icebp
arpl
mov
or
or
inc
cmp
das
leave
jbe
mov
inc
pop
into
popf
mov
adc
iret
pop
leave
test
je
xor
testl
sub
ret
cmpl
xor
js
sbb
cli
jne
add
into
loop
mov
lea
jge
pop
adc
mov
sub
push
adcb
push
ret
xchg
nop
das
cmp
push
ret
es
and
scas
inc
mov
addr16
adc
mov
xor
xchg
pop
push
adc
in
out
push
insl
mov
into
and
scas
mov
inc
cmpsl
mov
into
sbb
lahf
lret
testb
and
inc
adc
add
test
push
and
lret
add
sub
add
scas
js
push
mov
fcom
sub
and
xchg
nop
addr16
icebp
sub
jmp
jle
ljmp
push
xchg
aaa
add
jbe
pusha
mov
dec
pop
divl
inc
push
loopne
popa
add
mov
or
lcall
test
outsl
jle
pop
cmpsl
inc
xchg
sub
mov
call
or
jne
subl
jbe
arpl
adc
in
push
inc
push
inc
xchg
mov
out
fs
rol
in
lret
adc
aas
jmp
sbb
or
inc
jne
in
ror
xchg
fdiv
mov
push
pop
movsl
icebp
xchg
shr
jbe
rcl
adc
scas
out
into
inc
test
fmul
pop
lret
dec
jl
and
push
adcb
pop
adc
mov
pop
jmp
dec
add
int3
dec
jns
mov
scas
cli
xor
adc
and
ss
dec
adc
int3
mov
cmp
or
mov
mov
in
xor
cmp
into
lea
push
mov
testl
add
and
inc
outsb
jae
adc
xchg
dec
mov
jmp
fnsetpm(287
push
out
xchg
cmp
repz
or
dec
xchg
lahf
std
into
aam
into
movsb
mov
dec
sub
pop
icebp
cld
shr
push
inc
push
ror
push
mov
mov
or
rcl
push
dec
mov
imul
pop
testb
dec
das
sub
and
xorl
shll
mov
rcl
jecxz
xor
fnstcw
insb
fiaddl
dec
xchg
aas
xchg
mov
stos
sbb
mov
aaa
and
les
jnp
pushf
push
cmp
cmc
rcrb
jno
jmp
repnz
shlb
roll
push
dec
mov
xchg
call
dec
xchg
xchg
dec
shlb
js
lret
jno
mov
cmp
cmp
push
insb
xchg
jbe
nop
in
push
int3
inc
sar
mov
mov
gs
rol
sbb
push
and
icebp
add
movsb
mov
jnp
pop
and
inc
jb
xchg
dec
add
leave
lods
inc
cmpsl
inc
jo
loopne
call
adc
jae
sub
lahf
xchg
jnp
call
into
fisttps
jmp
sti
pop
adc
sub
test
ss
repz
div
out
shll
push
fidivrl
push
lret
int3
bound
lds
mov
dec
jp
push
loope
lock
leave
ror
jo
cmpsl
dec
inc
xchg
shlb
inc
mov
arpl
out
dec
jg
insb
push
out
aad
cmpsl
mov
mov
sbb
adc
xchg
rcl
cmc
or
push
xchg
pop
sti
push
cmp
or
adc
or
loope
fldenv
cmp
inc
repnz
cmp
inc
jns
mov
mov
mov
or
icebp
jo
jl
or
xor
outsl
into
sub
aad
push
sahf
roll
adc
mov
imul
xlat
sub
adc
in
mov
adc
mov
out
jecxz
and
mulb
pop
mov
outsb
ss
nop
sbb
and
int3
loope
or
jno
shr
and
pop
call
dec
sbb
push
dec
xor
jmp
data16
cmp
adc
and
pop
sub
inc
out
jl
push
das
je
mov
jo
and
or
pop
lds
sub
xor
int3
xchg
mov
jne
test
xchg
jo
je,pt
std
xor
aam
push
cwtl
fidivs
dec
ficoml
pop
add
aam
out
mov
es
fsubrs
push
repnz
inc
aas
lods
jmp
adc
xchg
aam
mov
pop
jb
push
out
xchg
mov
shrl
mov
pop
pop
and
fstpt
rcrb
insl
outsl
bound
add
sub
mov
cmp
cmp
push
test
sahf
mov
enter
cs
insl
in
mov
sub
fistl
sbb
sub
dec
mov
testb
jne
nop
or
test
movsb
cmp
xor
sub
cmp
imul
push
jmp
fs
ret
in
sub
and
push
cwtl
push
push
lcall
stc
inc
loop
sub
ds
fwait
lahf
mov
loope
xor
mov
je
mov
jmp
data16
imulb
dec
or
test
add
cli
loope
lret
xchg
xlat
mov
or
rcl
mov
xchg
sub
sbb
pop
daa
jg
push
cmp
sbb
enter
mov
or
xchg
add
push
sar
leave
ja
orl
iret
pop
push
jb
inc
mov
sbb
mov
in
fs
or
in
mov
or
inc
xor
aas
push
sub
inc
and
iret
xor
stos
popa
shr
into
outsb
lods
pop
mov
gs
aam
stos
lret
call
dec
xor
xchg
bound
jp
adc
mov
or
mov
loope
outsl
loop
mov
ljmp
sbb
cmpsl
push
push
mov
in
out
shrl
xor
pop
jb
cmp
dec
aam
pop
ret
aas
inc
sbb
mov
test
movsl
push
jno
enter
cmp
or
xlat
jbe
and
cmp
pop
push
dec
jle
mov
rcll
jbe
movsl
test
pop
mov
lds
sub
fiadds
xchg
jp
pop
sbb
pop
bound
pop
sbb
xlat
lret
and
push
out
push
mov
pop
jne
or
addr16
push
mov
and
jp,pn
mov
gs
enter
add
jmp
mov
roll
pop
into
fldcw
icebp
lods
inc
cli
cmpsb
sub
loope
dec
push
push
shll
jno
fsubr
xchg
dec
int
sbb
jmp
and
mov
clc
mov
aaa
je
jmp
lods
jle
sbb
push
inc
fbld
sbb
mov
pop
push
pop
das
xor
xchg
out
in
es
inc
mov
jne
push
sbb
gs
xchg
and
ja
push
mov
xchg
and
out
movb
dec
push
jecxz
shrl
adc
sahf
enter
cwtl
mov
jge
imul
cld
mov
aam
lea
sbb
adc
inc
out
mov
push
js
xor
aam
sub
add
inc
repnz
imul
lds
and
out
mov
add
cmp
and
dec
dec
aam
mov
arpl
sbb
xchg
out
stos
add
pop
pop
dec
lahf
leave
subb
add
orb
test
or
mov
sbb
add
xchg
movsb
pop
dec
or
xlat
jne
sub
scas
clc
push
pop
sub
addr16
mov
adc
scas
sub
push
jmp
outsb
inc
jae
pop
paddsw
push
sbb
lret
mov
xchg
scas
push
lods
and
adc
jno
xlat
mov
rorl
cmp
in
cmp
shrl
sub
mov
bound
mov
fimuls
into
mov
fistps
pop
adc
lret
sarl
adc
cltd
stc
add
aas
pop
xchg
int3
imul
adc
jnp
jl
sbb
jo
push
es
xchg
icebp
mov
int
and
dec
stos
jo
into
fisubl
adc
stos
pop
or
nop
std
lcall
adc
sbb
sahf
inc
mov
mov
repz
fnstcw
aaa
adc
out
fsubs
inc
xchg
mov
in
mov
ja
mov
rdtsc
js
jb
mov
xor
xchg
jl
pop
sub
fmuls
lods
adc
cmp
jno
xchg
push
ja
test
dec
xchg
pop
adc
movsl
push
dec
mov
mov
mov
add
ljmp
push
pop
jecxz
test
fldpi
push
scas
cld
enter
xchg
inc
out
or
stc
cmp
dec
leave
xor
add
cld
inc
adc
sub
loope
loopne
clc
jg
jl
and
push
pushf
pop
push
andl
hlt
dec
sub
sub
insb
lds
sub
push
test
adc
call
cmp
and
lds
ljmp
adcl
cmpsb
fcmovu
test
sub
fsubrs
and
adc
in
int
shr
pusha
stc
sub
xor
mov
test
ja
and
mov
ljmp
out
and
mov
movsl
or
lods
push
or
adc
lea
lret
nop
sub
das
jnp
sti
dec
addr16
lock
mov
pop
and
sub
push
test
mov
mov
aas
subb
push
imul
sbb
jo
rcl
or
mov
int
mov
icebp
call
pop
mov
inc
popl
add
shrl
and
into
in
outsb
in
fisttpl
push
or
shll
stos
sbb
xor
stos
inc
rcr
je
daa
or
rcl
xor
or
filds
xchg
sub
stos
icebp
nop
pop
pop
shrb
push
xor
and
and
inc
jmp
push
mov
ja
enter
and
cmpsl
out
loope
outsb
push
jg
pusha
xchg
mov
cmp
mov
lods
adc
jo
mov
xchg
sarb
adc
imul
mov
adc
mov
scas
lahf
stc
aaa
lcall
addl
sbb
ljmp
lcall
lahf
push
int3
inc
pusha
mov
gs
pop
out
pushf
mov
cmp
sbb
aas
dec
pop
inc
cltd
xchg
jp
cmp
aad
loop
jmp
pop
inc
jle
mov
mov
cltd
push
add
sub
fs
cs
insl
lods
repnz
inc
push
pop
ret
loope
out
cmp
rcrb
scas
mov
cmp
or
add
aaa
sbbl
daa
xchg
fwait
mov
adc
mov
xchg
ret
push
sub
lds
xchg
iret
lahf
fs
push
stc
xor
cmpsl
add
cmp
push
outsb
xor
xchg
mov
int
inc
jmp
adc
dec
out
cltd
cli
inc
sub
jne
pop
jo
push
mov
aad
mov
dec
cs
xchg
pop
push
scas
pop
outsb
dec
xchg
inc
fsubrl
jns
gs
mov
mov
ja
decb
stos
jmp
cltd
aad
fstpl
ja
cmp
add
cmp
stc
roll
mov
mov
jnp
cmpsl
xchg
loope
jo
mov
and
adc
adc
iret
adc
adc
cmp
iret
inc
cmp
scas
leave
cmpsl
sbb
jno
pop
mov
into
inc
daa
jp
popa
fcompl
dec
or
xchg
in
enter
jb
jne
and
adc
aad
iret
sub
sahf
and
lods
popf
addr16
sub
inc
faddl
insl
add
add
pop
leave
sbb
daa
in
sbb
jnp
bound
clc
push
insb
sub
dec
subb
lret
loopne
xlat
popa
push
pop
cmp
or
jle
dec
add
pop
lret
sub
adc
xor
pop
xchg
dec
jmp
dec
insb
cmp
xchg
xchg
sbb
add
ret
mov
lock
icebp
xchg
add
ret
jbe
adc
cmp
jae
shl
sahf
lcall
call
and
sbb
mov
lret
je
imul
stos
aam
jle
mov
xor
aas
js
imul
into
xlat
int3
fcomps
mov
xor
insb
outsl
inc
mov
aam
rcrb
cmp
jmp
push
pop
mov
cli
sbb
call
ret
adc
push
mov
or
lret
shll
push
jge
pop
or
flds
fs
mov
out
fbstp
jbe
das
jno
aam
test
add
cmp
sahf
pop
out
insl
insb
push
out
mov
pop
dec
jnp
xchg
jecxz
dec
aam
adc
and
enter
hlt
push
jo
dec
ja
adc
repz
les
or
push
test
xor
in
push
lcall
mov
in
pop
scas
fisttpll
add
xor
mov
cli
jbe
repz
push
into
les
sub
dec
mov
lret
clc
adc
scas
jbe
dec
sub
jle
into
insb
xor
cmp
ret
testb
mov
scas
xor
mov
sbb
push
repz
and
jae
arpl
int
and
aaa
jp
or
js
and
inc
movsl
or
dec
dec
push
dec
lock
cmp
rclb
cmc
push
sbb
test
addb
mov
loopne
adc
mov
mov
adc
and
out
pop
mov
sarl
test
pop
jmp
lret
shll
mov
and
xchg
stc
jl
nop
xor
imul
repz
ja
sahf
sub
sub
ret
rcl
ret
fucomip
bound
imul
loop
icebp
jne
add
push
sub
nop
ret
pop
movsl
dec
jl
repz
mov
mov
push
das
adc
mov
mov
xor
lock
jno
dec
fwait
dec
pop
clc
ljmp
xchg
add
pushf
adc
mov
adc
or
imul
data16
jne
insl
cmpsl
into
sbb
imul
jne
jnp
lret
pop
mov
fildll
pop
mov
nop
in
cmp
mov
xchg
bound
or
dec
sbb
push
lahf
movsl
std
xor
sarb
and
outsl
jp
sbb
idiv
jbe
repz
jbe
add
jg
call
xor
test
adc
inc
xchg
ds
mov
ja
pop
pop
and
mov
cmp
adc
out
jge
or
cmc
in
dec
stc
xor
pop
jbe
sti
out
gs
mov
ja
or
repnz
xchg
int3
xchg
pop
sub
call
addr16
jnp
xchg
test
mov
dec
mov
mov
in
sub
dec
jnp
insb
negl
add
xchg
cmpsl
xor
insl
xchg
jae
push
in
lods
pop
cmp
loopne
and
or
mov
sbb
outsl
sahf
mov
pop
mov
hlt
sub
out
add
fsts
imul
shrl
aad
int3
jg
stc
and
ficompl
outsb
mov
and
je
sbb
inc
add
dec
mov
mov
in
jno
xor
aas
xchg
lds
data16
addb
push
jmp
sub
test
iret
sub
mov
loope
insl
xchg
jne
lock
out
fstp
pop
cld
dec
aad
leave
inc
fs
fcmovnb
inc
pop
rorl
das
inc
repnz
pop
int
inc
add
fldt
lods
aad
mov
icebp
sbb
xor
push
notl
add
fadds
daa
push
mov
cmp
xchg
int
bound
cld
std
jl
aaa
mov
test
mov
mov
daa
add
xor
in
cwtl
push
jmp
xchg
subl
test
pop
mov
adc
int3
xor
scas
into
out
push
lret
push
clc
or
sbbl
pop
das
jecxz
fwait
mov
cld
dec
fwait
int3
xchg
roll
or
jb
jge
push
stc
jecxz
loope
push
xor
cltd
dec
mov
xor
stos
push
jle
add
mov
xor
cltd
mov
inc
jbe
dec
add
bound
cmp
inc
xor
cmpsl
dec
or
xchg
mov
sbb
xchg
fld
xchg
fcmovb
out
push
inc
popa
lret
pusha
or
dec
fwait
movsl
xchg
xchg
jbe
mov
cld
mov
cmp
mov
or
or
mov
mov
loope
mov
jmp
je
dec
in
insl
jecxz
mov
xor
mov
into
adc
mov
scas
lock
fs
jle
ja
xchg
mov
sarl
out
imul
cld
xor
jo
sub
cmpsl
sbb
push
loop
nop
pop
push
adc
push
dec
std
testb
mov
pmovmskb
stos
cmp
ljmp
es
int
lea
cld
and
push
push
bound
jb
xor
cmp
push
xchg
push
into
mov
enter
dec
ss
sbb
rcr
test
decb
ret
cmp
mov
mov
dec
shrl
sub
mov
dec
xlat
js
push
jg
andb
cmpsb
mov
mov
add
cmp
movsl
inc
stos
sub
mov
push
mov
movsl
adc
into
faddp
out
cwtl
sub
mov
aaa
cmp
idivb
pop
jne
xchg
or
jbe
jmp
push
dec
imul
sbb
push
jecxz
fnstsw
push
jb
mov
notb
fisubl
mov
inc
pop
mov
push
add
loop
sbbb
mov
jns
std
in
out
push
lret
bound
rol
xlat
imul
sub
lods
xchg
jmp
mov
dec
push
and
outsl
sbb
inc
inc
into
mov
cmp
pop
lret
mov
cmpsl
ss
jo
in
and
adc
jl
pusha
mov
cmpsb
push
push
lods
push
hlt
gs
jge
adcb
jns
and
adc
jmp
sbb
ja
or
addr16
mov
cmp
pop
sub
sub
add
jmp
lret
pop
or
inc
push
inc
cmp
sub
ret
into
int
jle
push
aaa
sub
mov
lods
out
inc
mov
add
test
test
roll
or
les
jmp
jnp
mov
sbb
add
out
jmp
arpl
je
or
inc
fimull
mov
out
in
or
cmp
pushf
add
lret
addl
in
mov
add
jecxz
sbb
loopne
data16
mov
into
xor
lods
push
dec
adc
mov
pop
cmp
push
mov
ljmp
int
cld
push
int3
mov
xchg
insl
loop
es
lods
pusha
cwtl
inc
xor
ja
pop
or
fs
out
jmp
add
shll
pop
test
into
insb
and
fsin
inc
sub
dec
dec
push
icebp
mov
cmpsl
jbe
adc
ja
push
push
dec
jecxz
mov
push
mov
aad
xor
and
mov
ljmp
push
sub
lds
out
push
fmuls
pop
ljmp
fwait
int3
sub
lea
xor
pop
jae
lds
aas
fldl
xchg
pop
jno
mov
adc
jns
adc
testl
ja
dec
das
mov
sbb
push
pop
rcl
cwtl
inc
lods
pop
inc
aam
les
and
or
lahf
adc
jno
push
add
or
mov
xor
cmp
pop
mov
sub
or
shll
inc
sarl
xchg
xchg
ds
pop
xchg
scas
lret
ficoms
sub
and
imul
or
inc
sahf
mov
jno
rcrb
int3
into
ss
xor
icebp
in
gs
sti
cltd
es
and
nop
loop
ja
insl
add
sahf
add
rol
dec
aaa
push
dec
scas
inc
stos
movb
xchg
lret
mov
and
mov
fmuls
pop
mov
mov
mov
movsl
push
inc
repz
clc
jae
sbbb
add
xor
addr16
scas
int
push
rcr
push
jno
aam
pop
inc
in
vmwrite
dec
mov
dec
mov
push
ficoms
out
and
imul
mov
scas
lret
ret
cs
push
xor
mov
push
test
adc
rcrb
lcall
lahf
loopne
mov
outsb
in
cli
stc
dec
adc
maxps
aas
into
jmp
lods
sub
rorl
or
cwtl
bound
mov
fcmovnbe
shll
pop
mov
push
or
xor
or
adc
fldcw
cmp
lods
stos
pop
xor
mov
jns
push
and
lret
in
xor
xchg
fmuls
xlat
xor
inc
out
andb
aas
xchg
nop
mov
test
xor
shlb
test
into
xchg
mov
push
stc
or
pushf
sbb
out
cmc
push
mov
decl
push
movsl
test
into
xchg
push
inc
add
cmp
mov
int3
mov
and
sub
mov
int
sti
mov
and
mov
int3
imul
jmp
sub
and
cmp
sub
cmp
pop
fcomps
mov
inc
mov
loopne
ds
imul
jecxz
hlt
enter
aad
dec
sub
add
fwait
lret
popf
outsl
incl
xchg
cmpsb
movsb
out
mov
dec
jno
jb
xchg
push
mov
xchg
std
xchg
cmpsl
mov
jne
cwtl
push
jae
xor
mov
jb
nop
cli
mov
jne
into
cmpsl
push
pop
sub
fnstenv
mov
call
cmc
in
adc
lds
dec
mov
insb
insl
lcall
jb
imul
or
ds
and
pusha
xor
jle
dec
lcall
pop
jl
inc
inc
xchg
dec
mov
fwait
sti
dec
cmp
xchg
jmp
dec
lret
rcl
sub
loopne
push
shlb
aam
test
iret
adc
mov
jnp
test
mov
xchg
xchg
leave
or
push
es
jge
data16
jmp
sub
leave
mov
mov
in
outsb
adc
mov
push
and
out
aas
fdivr
fcoml
fstpt
test
jne
inc
loope
lods
xchg
xchg
mov
fdivs
mov
test
rclb
ljmp
pushf
loope
stc
xchg
dec
movsl
dec
jno
js
mov
out
jle
jmp
loopne
ror
pop
hlt
insb
pop
push
into
movsl
push
test
lea
iret
into
repnz
test
jg
testl
pop
shll
xchg
cmp
imul
push
cmpsb
xchg
jbe
lods
xchg
repz
shr
push
outsb
fiaddl
mov
stos
cmp
clc
cltd
data16
jecxz
std
cli
adc
fiadds
mov
xchg
fs
into
into
or
cmp
jns
andb
loope
addr16
outsb
fsubrs
repnz
adc
jne
mov
sub
leave
ficompl
pushf
sub
lds
cwtl
mov
xchg
pop
je
jnp
popa
data16
pop
xor
lcall
adcb
xor
mov
test
mov
push
lods
jne
arpl
js
sub
stos
push
lcall
sub
fdivrs
pop
js
mov
test
fadds
aas
or
test
push
iret
mov
pop
mov
or
mov
xchg
mov
enter
dec
aaa
jae
mov
or
faddl
pop
in
into
xor
sbb
mov
cli
add
xchg
xchg
test
dec
adc
cmpsb
ds
ret
cmpsl
jle
jae
roll
out
inc
fwait
ljmp
lock
push
cwtl
js
aad
in
dec
out
icebp
xchg
lahf
inc
outsl
cmc
or
mov
sub
mov
aas
ds
cld
add
ror
pop
xorl
push
jecxz
ds
ss
cld
insl
das
leave
adc
ja
daa
mov
pop
fmul
adc
add
push
pop
data16
es
add
mov
mov
imul
call
iret
test
sub
push
mov
pop
and
inc
jne
add
outsb
mov
mov
push
dec
insl
dec
jbe
ret
rorb
xchg
insb
push
rcll
sbb
push
jmp
outsl
call
mov
lods
jae
cwtl
int3
out
pop
arpl
mov
dec
push
rorl
nop
aaa
scas
movsl
scas
out
mov
ret
mov
ljmp
int3
lock
xchg
xchg
xchg
movsb
xchg
icebp
xor
nop
push
ljmp
outsb
aaa
push
aam
cmp
das
push
xor
mov
push
es
stos
push
dec
cmp
xor
ret
cld
or
ja
pushf
movsl
dec
dec
push
mov
movsl
mov
sub
shll
mov
mov
cli
out
jbe
rorl
jo
sub
out
inc
insb
outsl
jle
jae
fsubr
xchg
lcall
xchg
insl
daa
in
lret
push
xchg
cwtl
pop
not
cmp
inc
call
dec
inc
std
stos
fwait
je
xchg
push
test
fcoms
sub
mov
push
pushf
movb
cmp
sbb
xor
xchg
sub
sbb
sub
testb
inc
aas
out
push
outsb
inc
pop
jo
mov
popf
add
mov
xchg
rcr
mov
mov
imul
mov
rcl
sti
jecxz
pop
xor
xor
cmpsl
cld
xchg
dec
mov
mov
das
adc
or
mov
mov
sahf
sub
sti
or
lret
jmp
mul
test
mov
loop
out
mov
and
mov
jmp
jnp
xchg
inc
lea
out
into
out
mov
lret
jg
ret
icebp
sbb
sub
ss
ljmp
test
push
fwait
mov
pop
pop
cmp
pushf
test
add
clc
out
lods
ds
dec
mov
outsl
cmp
gs
push
in
mov
jb
jno
cmp
es
dec
push
pop
into
mov
arpl
div
test
ja
js
daa
addr16
dec
ss
push
sub
mov
in
shl
sub
adc
sbb
test
inc
in
fiadds
stos
out
lea
xchg
loopne
push
ret
ror
mov
pop
into
stos
mov
adc
iret
inc
jnp
add
mov
test
inc
sbb
inc
inc
or
xchg
iret
inc
push
sub
mov
ljmp
into
in
push
jbe
pop
lcall
mov
mov
jmp
arpl
test
movsb
ret
xor
cmp
mov
imull
jp
sbb
sub
imul
repnz
loope
mov
xchg
sarl
pusha
imul
or
push
lcall
stc
add
das
jno
mov
stos
pop
imul
imul
pop
mov
popa
xchg
cld
and
movsl
jbe
fdiv
xor
sar
test
adcl
jge
icebp
inc
js
fwait
dec
pushf
dec
test
inc
mov
cli
movsl
cmpsb
push
mov
xlat
or
aam
sbb
lock
jb
mov
inc
mov
and
mov
mov
mov
aad
ja
add
je
clc
gs
pusha
cmpsl
stos
sub
es
movsl
pop
push
push
lret
adc
jl
add
out
imul
ss
xchg
inc
jecxz
add
fwait
lock
ds
lret
rcrl
add
jle
xchg
fisubrs
or
xor
fsubs
div
xchg
stos
add
int3
jecxz
dec
cmpsl
call
outsl
xchg
dec
cmp
xor
inc
out
or
ja
push
repnz
or
jo
shlb
fistpl
out
enter
push
hlt
out
or
call
and
jbe
fisttpll
mov
xchg
popf
xchg
push
add
xlat
xor
dec
mov
pop
iret
aam
add
hlt
or
mov
xchg
in
neg
cwtl
pop
jle
xchg
out
data16
mov
leave
movsb
sub
fs
dec
hlt
xchg
mov
insb
fists
mov
sbb
sbbl
scas
jnp
jecxz
aas
call
ljmp
push
pusha
cwtl
pop
outsl
mov
or
inc
aaa
testl
dec
lods
inc
das
mov
inc
mov
adc
into
cmp
jmp
jns
rcl
mov
scas
xor
or
mov
xor
jle
jo
sub
shlb
mov
out
xchg
mov
push
jbe
out
xchg
mov
in
xlat
lds
push
and
rolb
cmp
in
sbb
cmp
ja
sar
or
xchg
xor
sub
add
cli
subb
sub
imul
xchg
mov
ds
pushf
xor
and
ljmp
dec
dec
jnp
cmpsb
out
ret
pop
push
jbe
inc
add
fidivrs
mov
inc
mov
les
aam
out
push
loopne
outsb
cmpsl
test
add
inc
lods
je
push
jnp
jle
xchg
mov
mov
ret
aam
mov
mov
push
xchg
mull
mov
sbb
and
jmp
dec
cmpl
sahf
mov
push
test
xor
dec
lds
enter
mov
jns
insl
adc
lock
jno
lods
dec
mov
lea
sub
push
sub
inc
mov
lcall
insb
adc
mov
push
pushf
cmp
loope
sbb
stos
loopne
sub
adc
add
and
push
mov
and
jb
out
movsb
test
lock
cmc
imul
jne
lret
movsb
sti
sub
in
test
inc
inc
rcrl
cld
push
pop
mov
jne
add
rclb
enter
mov
jge
and
rcrb
divb
ja
sbb
hlt
mov
lods
xor
loope
int
addr16
inc
aam
scas
inc
or
inc
push
dec
xchg
jne
pushf
rcrl
lret
sbb
popf
and
push
mov
orb
adc
add
fisubs
pop
std
sub
int
pushl
jg
orb
rcl
or
jns
inc
cmpl
xchg
imul
outsb
pop
cmc
and
jl
inc
shr
and
mov
sub
fidivrl
iret
jae
insb
sub
xchg
dec
sub
out
jp
lds
popl
and
pop
adc
inc
shl
ds
test
pop
jne
mov
adc
sbb
pop
or
add
mov
sub
pop
in
cmovge
cmc
jp
sub
jg
fwait
mov
ret
xchg
sbb
int
xchg
pop
xchg
xor
mov
dec
into
int3
xchg
sbb
pop
push
xchg
lods
ror
fisttpl
cmp
cmpsl
xchg
popa
mov
dec
mov
pop
xchg
jno
sbb
imul
in
cli
filds
lahf
mov
out
pop
jmp
in
dec
adc
incl
mov
into
pushf
or
sti
mov
cmp
addb
or
pop
adc
sub
out
sbb
cmp
ret
mov
dec
out
popf
mov
xor
icebp
call
dec
pop
lret
mov
lcall
dec
or
hlt
or
cmc
lds
and
sbb
mov
inc
mov
or
lcall
cmpsl
xlat
inc
lret
ljmp
mov
stos
adc
pop
fidivrs
call
sub
ds
data16
popf
out
push
shrl
fldcw
call
movsl
push
movsb
xor
adc
dec
mov
jbe
addr16
mov
shrd
repz
sbb
in
enter
xchg
int3
jae
bound
mov
sub
out
dec
mov
lret
fsts
adc
and
mov
faddp
notb
fs
push
das
aas
push
aaa
xor
jl
jle
pop
push
mov
fcomps
je
inc
loop
mov
dec
inc
cmp
arpl
repnz
xchg
leave
sub
mov
pop
push
fidivrl
movsl
sbb
or
jnp
sub
push
std
adc
and
repnz
cmpsl
push
outsl
push
push
and
push
xor
mov
fbstp
or
push
or
test
sbb
lods
addr16
faddp
test
mov
mov
stc
loope
lret
lcall
mov
add
mov
dec
pop
cmc
and
cmp
or
inc
dec
push
test
inc
je
repz
mov
adcl
fildl
mov
inc
jl
into
sbb
out
int3
jno
sub
lods
cltd
push
jb
pop
cmc
into
int
incl
sbb
popf
out
sub
dec
sub
enter
inc
push
mov
inc
jno
pop
int3
shrl
movsl
dec
imul
aam
into
inc
inc
pop
cmpsb
mov
cli
sbb
aad
push
mov
cmp
pop
mov
adc
sub
test
in
idivb
pop
aas
stos
and
mov
adc
jbe
push
or
je
add
xchg
jne
aaa
xchg
mov
imul
lret
and
jne
nop
pop
push
cmc
mov
xor
push
inc
pop
mov
or
mov
pop
fcmovnbe
je
test
xchg
adc
push
jno
sti
jl
movsb
test
xchg
sbb
mov
pushf
lret
mov
mov
int
jle
cld
arpl
out
dec
mov
daa
out
add
lahf
xchg
dec
cmpsl
dec
mov
scas
scas
pop
or
imul
mov
pop
into
addl
mov
icebp
xchg
mov
pop
out
sti
aad
cmp
sahf
in
jbe
pop
mov
mov
js
inc
cmp
notb
iret
stos
test
jmp
and
xchg
movb
jns
scas
repnz
jno
cmpsl
in
adc
dec
push
stc
dec
mov
std
lods
loopne
xor
arpl
push
in
and
cmp
les
push
data16
lcall
or
jecxz
enter
testb
xchg
scas
cmp
xchg
andl
cmp
pop
rcll
mov
addr16
insb
inc
shld
inc
xchg
mov
cmc
push
loopne
jle
inc
mov
xchg
jecxz
mov
xchg
sub
push
push
inc
and
adc
div
inc
add
lods
into
addr16
enter
cmp
push
xlat
bound
pop
inc
test
jb
mov
adc
out
xchg
leave
adc
lahf
pop
mov
cmp
sbb
xchg
inc
fucom
stos
mov
mov
jl
insb
lret
nop
add
scas
ljmp
or
ret
les
jnp
aas
xchg
in
adc
leave
out
adc
adc
mov
push
xorb
inc
mov
push
dec
loop
dec
cld
into
push
cmp
and
out
sbb
push
inc
xor
mov
in
scas
push
pop
jp
jge
into
adc
add
not
mov
sti
push
mov
clc
out
cmp
jb
outsl
mov
hlt
mov
lods
sbb
jmp
push
aam
push
out
movsl
sub
mov
fmull
jbe
movsb
shlb
add
out
pop
jmp
loopne
cmc
addr16
ja
sar
xorl
ljmp
movsl
xchg
aas
scas
inc
dec
and
testl
mov
lea
fists
pop
out
icebp
or
mov
ljmp
sbb
jl
adc
push
adc
movb
jecxz
push
cmp
loop
or
mov
ja
test
in
fcomip
fdivs
adcb
mov
jecxz
test
out
scas
call
pushf
cli
pop
sub
pop
std
sbb
mov
cmp
adc
lcall
mov
add
pop
mov
xor
fdiv
lret
fbld
pop
cmp
dec
scas
out
jns
pop
shll
adc
dec
cwtl
lret
or
aam
lahf
cld
mov
cmp
lock
or
xor
into
data16
mov
add
pop
sub
nop
xchg
repz
fdivs
push
fwait
int3
stc
fs
pop
sahf
lods
les
jbe
adc
fcmovb
adc
filds
xchg
cmp
add
xchg
xor
fwait
out
cld
pusha
add
out
cmp
cltd
inc
mov
iret
stos
ja
insb
dec
testb
pop
dec
popw
cwtl
popa
jno
dec
or
adc
pop
adcl
sub
dec
lahf
mov
lock
xor
scas
pop
stos
cwtl
push
add
cmp
xor
call
xor
and
push
mov
lahf
stc
cmpsb
filds
xchg
add
inc
test
jne
mov
lret
popl
xor
xchg
xchg
push
dec
or
mov
add
inc
nop
sub
inc
pop
xacquire
mov
aam
sbb
dec
mov
lret
adc
and
cmpsb
lods
mov
jnp
and
push
pop
ss
in
jecxz
push
pusha
xlat
cld
mov
pop
dec
push
cmpsl
ljmp
dec
nop
sub
scas
cwtl
pop
pop
xor
stos
pusha
loope
push
outsb
mov
hlt
ljmp
out
repz
add
scas
dec
mov
push
faddl
xor
shl
dec
mov
push
xor
xlat
jg
mov
mov
pop
jl
cmp
mov
aaa
pushf
inc
inc
outsl
lcall
nop
jbe
sub
es
mulb
dec
cwtl
stos
dec
add
repnz
pop
addb
dec
jnp
xor
sbb
jnp
lahf
jl
inc
stos
lret
cmp
cltd
icebp
dec
push
inc
or
addr16
shrb
pop
or
push
out
inc
dec
outsb
mov
mov
push
and
mov
fsubl
mov
out
sarb
or
sti
xor
fldpi
add
test
pop
adc
pop
decb
and
or
insl
repnz
into
pop
cmpsb
dec
mov
mov
shlb
enter
inc
mov
xchg
adc
mov
int
scas
or
out
leave
shrb
inc
mov
mov
ss
sbb
pusha
orb
inc
jecxz
pop
push
add
and
rol
roll
sbb
repnz
inc
xor
shr
lods
mov
sbb
pop
imul
pop
inc
std
lock
lea
push
dec
cmp
xorb
dec
xchg
xchg
test
rcll
xor
inc
popa
inc
push
loop
push
or
lcall
xchg
into
inc
inc
jmp
rcrl
inc
cmpb
lods
mov
repnz
xor
inc
sub
cli
popf
lret
jo
ret
je
dec
xchg
into
cmp
inc
or
pop
shlb
push
cmpsb
lret
dec
xchg
cld
jno
jnp
mov
sbb
fs
jbe
inc
enter
dec
in
cmp
sbb
test
mov
loopne
and
popa
out
js
inc
jno
into
or
out
mov
and
dec
pop
iret
pop
dec
sub
cmp
pop
mov
sar
shlb
ss
pop
lret
mov
jecxz
loopne
insl
mov
sbb
xor
imul
pushf
ljmp
ss
mov
inc
pop
push
test
sub
push
sahf
aaa
sbb
and
fcmove
into
and
in
push
add
and
xchg
mov
push
inc
and
sbb
add
scas
jp
adc
and
push
cmp
clc
xor
into
push
stos
fs
mov
push
adc
iret
or
push
xchg
call
movsl
mov
or
insb
cld
shlb
cmp
aam
movsb
cmp
xchg
push
mov
rorb
cmc
xchg
daa
stc
outsb
inc
test
mov
xor
in
push
xchg
adc
mov
das
adcb
cmp
xor
jbe
aas
mov
add
fists
pop
sub
out
dec
lock
pushf
test
stos
popf
sar
push
jae
add
call
adc
lock
aas
out
popa
xchg
and
mov
xchg
movsb
dec
push
push
inc
mov
fcmove
ficomps
adc
add
sub
sub
add
fcom
cmpb
es
je
xchg
leave
fcoml
push
cmc
subl
xchg
in
leave
xlat
xchg
add
test
lret
inc
pop
data16
in
add
push
fstpl
shld
xor
jecxz
fld
dec
cmp
outsl
outsb
push
leave
inc
ja
dec
inc
lds
out
je
mov
mov
sbb
adc
popf
xor
inc
cltd
push
xor
push
jbe
lret
mov
cwtl
mov
push
mov
push
cmp
pop
cmp
pop
xchg
fs
sbb
inc
stos
in
jp
mov
push
sub
ja
jb
and
int
xchg
push
mov
and
mov
fnstenv
sub
test
das
or
push
jg
sub
into
ja
lds
fdivrs
inc
add
and
dec
cmp
ret
dec
inc
cli
bound
cmpsl
or
push
aad
dec
test
jp
popf
ja
or
jle
mov
add
stos
inc
jb
jmp
sub
sbb
repz
ljmp
enter
dec
push
rolb
add
sbb
and
ljmp
je
gs
lcall
xlat
shll
aaa
cmp
mov
xor
arpl
in
data16
inc
inc
lods
mov
dec
and
ljmp
jo
cwtl
lret
push
xchg
js
mov
das
mov
pop
mov
div
into
sbb
aam
jno
inc
push
lods
jae
mov
add
and
mov
shl
sbb
dec
addr16
fisubrl
int3
sub
adc
sbb
lods
sbb
popf
mov
and
xchg
inc
sub
inc
test
mov
enter
pop
and
jbe
dec
or
adc
xchg
hlt
xor
or
stc
sub
jge
inc
mov
dec
fcompl
pop
mov
cmp
sub
dec
lods
out
out
mov
inc
or
adc
push
adc
bound
xchg
ljmp
mov
dec
imul
adc
inc
pop
mov
notb
incb
ds
jae
inc
into
adc
test
outsb
and
sub
cs
xchg
icebp
jl
scas
jp
cmp
sbb
dec
popa
pop
jecxz
scas
bound
jmp
pop
inc
mov
ljmp
sub
mov
es
rclb
cwtl
out
mov
adc
xor
mov
out
adc
sbb
xchg
lret
cwtl
mov
movb
int
or
hlt
shll
sbb
push
mov
gs
stos
mov
push
push
imul
imull
push
shl
push
cmpsb
cmp
xor
pop
out
test
or
lahf
mov
add
inc
stos
jne
xor
orl
test
into
inc
fisubrs
outsl
insb
js
mov
imul
fs
es
mov
mov
call
xchg
dec
out
or
sbb
mov
loopne
sahf
mov
pop
push
adc
push
loop
inc
inc
push
dec
fiaddl
ja
xor
popf
mov
out
call
xchg
xchg
mov
inc
jae
jbe
sbb
repnz
imul
and
inc
jmp
lods
xor
sbb
sub
mov
popa
aad
jle
lret
in
add
ficomps
shrb
xchg
sbb
add
xchg
inc
xchg
faddl
mov
cmp
jnp
dec
add
fwait
jo
int
outsl
or
lods
test
xchg
sub
or
aaa
popl
mov
aad
or
inc
and
cmc
das
xchg
and
cmp
in
mov
sbb
into
add
xchg
jmp
jmp
fisubrs
imul
rcl
xor
sub
xlat
clc
mov
test
sbbb
ret
pop
movsl
popf
addr16
inc
stos
pop
dec
in
out
insb
sub
fimuls
sub
popa
fcomps
mov
insl
movsl
out
js
dec
rclb
into
mov
shll
and
lods
ljmp
nop
add
cltd
or
jecxz
push
call
sar
pusha
aaa
dec
shrl
push
leave
xchg
outsl
call
inc
mov
sub
dec
cltd
mov
test
xchg
and
gs
pop
out
sbb
mov
mov
mov
jp
in
stos
lret
icebp
jle
jg
sub
add
xor
push
dec
xchg
ja
into
jbe
mov
sub
lock
fwait
jg
outsb
jae
loope
add
rcrb
in
push
fcmovnbe
test
cmp
out
dec
pop
cltd
jo
add
aas
adc
test
jle
adc
outsl
push
ret
sub
fsubl
addr16
test
mov
hlt
adc
pop
xchg
pop
xchg
mov
dec
movsl
pushf
push
sbb
aaa
dec
lods
or
fistl
mov
cmp
ret
jle
sbb
data16
subb
and
idiv
jnp
sbb
movsl
adc
mov
jne
inc
movsl
inc
and
into
sarb
mov
repz
ret
cld
push
lods
aad
cs
fsubp
movsl
jge
les
mov
call
cmp
imul
xor
mov
jo
in
xor
jge
jecxz
les
push
cs
outsl
out
iret
mov
cmp
mov
inc
jmp
cltd
ss
pop
or
int
repnz
fcmovnbe
arpl
cmp
and
cmpsl
outsb
jecxz
jns
data16
fldl
cltd
into
inc
inc
or
pusha
test
testl
pop
inc
jle
movsl
pop
movsl
fcom
adc
fcompl
xor
jbe
mov
sbb
mov
adc
fsubrs
pop
movsl
dec
jo
iret
and
dec
data16
jne
aaa
int3
js
lds
rclb
push
xor
fcomps
repz
xchg
in
enter
sbb
scas
sbb
sub
iret
mov
popa
sbb
adc
xchg
cmp
mov
jne
iret
cmp
jle
push
sbb
sub
pop
fsubrs
cld
mov
pop
iret
scas
add
mov
cmp
inc
dec
inc
xchg
push
testl
call
lds
mov
lret
mov
or
ret
cmc
cwtl
jecxz
jmp
add
mov
sbb
add
push
fst
sub
jle
pop
mov
ljmp
leave
push
icebp
stc
dec
mov
mov
mov
dec
dec
mov
or
aad
mov
testb
sub
mov
pop
dec
dec
mulb
jbe,pn
xor
pop
hlt
jo
daa
ds
aaa
cmp
out
fcoml
jae
rcl
fs
xor
sub
enter
ficomps
in
xchg
jecxz
xor
mov
pop
and
or
pop
cld
addr16
and
jle
lret
push
scas
dec
inc
xchg
lds
dec
add
push
lret
xor
jge
fisubrl
enter
xor
add
inc
jae
lcall
adc
loope
sbb
pop
inc
sbb
jmp
jbe
xor
push
addr16
cld
in
sbb
repz
out
lea
lds
shl
pusha
push
pop
sbb
add
out
repnz
fstl
mov
jbe
xchg
mov
fsubrl
xlat
mov
cli
add
inc
mov
into
sub
adc
icebp
mov
cwtl
shl
mov
popa
xchg
fwait
xchg
sub
addr16
out
outsb
sarl
cmp
jb
push
out
shl
mov
adc
shlb
sub
inc
lret
test
jno
jle
loopne
bsr
testb
loop
mov
jp
mov
inc
lahf
ss
push
xor
mov
xchg
call
or
adc
pop
roll
rcrb
push
rcr
out
mov
cmpsl
or
lret
push
ljmp
bound
out
dec
sbb
jnp
pop
outsl
mov
adc
outsb
iret
fwait
lods
sub
stos
mov
lods
dec
rcrb
sub
sahf
ds
mov
nop
notl
into
daa
dec
clc
mov
xchg
mov
inc
cmp
into
call
lea
enter
mov
push
add
rclb
pop
jbe
xor
test
mov
loopne
aam
lcall
in
lret
out
xchg
jne
int
aam
and
fst
pop
data16
negb
pop
lret
add
movsl
jbe
jae
or
aad
dec
iret
scas
jbe
imul
or
or
jmp
popa
enter
pop
adc
out
cmpsl
loope
mov
shll
push
add
leave
inc
movsl
jno
push
adc
or
aam
inc
ror
je
lods
call
cmp
mov
sbb
mov
in
ret
outsl
dec
pop
adc
dec
push
or
data16
sub
mov
fdivrs
cmp
sub
loop
aad
icebp
inc
cmp
mov
lret
jle
xor
inc
push
out
imul
clc
xchg
sub
and
jp
lret
adc
imul
add
insl
xchg
push
or
jbe
int3
nop
pop
inc
xchg
int
test
jmp
insl
or
sbb
in
lret
rorl
fs
vmovq
inc
pop
pop
and
xchg
in
addr16
jge
stos
inc
adc
stos
enter
in
inc
fs
fisubrs
adc
xlat
aad
repz
xor
call
xchg
dec
repnz
mov
loop
mov
inc
inc
pop
pop
jno
into
mov
mov
data16
jecxz
in
mov
ja
or
mov
mov
ljmp
xchg
or
inc
sbb
adcl
pop
cli
outsb
lds
jmp
mov
or
xchg
into
ret
xchg
sarb
insb
inc
rcl
inc
in
mov
jns
fcomps
inc
sub
dec
cwtl
stos
loopne
lahf
push
mov
in
imul
cmp
scas
jecxz
or
pop
cmpsl
lret
mov
pusha
dec
lcall
cmp
repz
cwtl
pop
ss
aas
call
stc
fsts
cmp
lahf
xchg
mov
push
mov
in
push
mov
push
jo
jge
fwait
into
scas
mov
xor
adc
jno
cmc
mov
mov
insb
loop
push
and
out
ja
or
xor
addr16
mov
cs
add
or
mov
in
and
mov
loope
adc
cmp
xchg
ret
shlb
mov
add
je
into
mov
sbb
dec
ret
cmp
jl
push
or
iret
pop
aaa
insl
std
xor
cld
add
call
mov
stos
inc
fucom
jnp
pop
sahf
ss
push
das
mov
jmp
jns
out
add
rcrl
inc
mov
imul
push
or
or
push
cmp
fsub
std
jp
mov
xor
jecxz
lock
or
xchg
dec
enter
mov
jp
lods
jbe
pop
out
mov
cmp
nop
jle
or
fnsave
xor
decb
jbe
loopne
adcb
repnz
cmp
jmp
and
out
sub
lahf
sub
xchg
js
sub
insb
xor
mov
pop
shrl
into
imul
cmp
push
movsb
ss
out
cs
shll
pop
fs
xor
gs
and
pop
inc
mov
nop
push
test
je
outsl
cwtl
fists
push
inc
out
mov
sbbb
dec
outsb
pop
mov
aad
mov
cmp
les
pop
stc
xor
adc
jge
lock
dec
lods
lods
add
in
dec
inc
movb
xchg
jo
int3
pushf
bound
fsubs
into
lcall
mov
jno
lock
dec
inc
test
cwtl
xor
sub
sti
pop
iret
imul
faddl
xchg
dec
mov
mov
dec
daa
push
int3
mov
mov
aam
ss
addr16
movb
push
dec
aaa
ds
push
out
jle
sbb
rcll
xchg
sub
jp
gs
dec
cmp
push
mov
divb
hlt
enter
ds
pop
pop
lret
test
sub
mov
jae
jno
xchg
pusha
push
xchg
aas
cmpsl
or
mov
in
aad
mov
add
icebp
stos
jns
ret
dec
in
in
jg
jmp
test
fisubrl
add
sbb
ret
aad
xchg
and
cmp
unpckhps
fs
outsl
jge
adcb
int3
inc
sbb
out
inc
pop
mov
inc
jmp
cmp
mov
arpl
stos
inc
adc
and
cmp
push
popf
arpl
xchg
mov
leave
or
xchg
lods
inc
xchg
int3
adc
and
sahf
inc
xchg
sbb
inc
mov
imul
jbe
add
push
out
sub
rolb
sti
loop
dec
addr16
jl
and
fnstenv
sub
push
je
addb
cwtl
sub
dec
jae
xchg
mov
push
adc
mov
mov
adc
xchg
jl
jecxz
dec
and
imul
scas
out
je
popf
std
add
addr16
lcall
and
jae
sbbb
es
push
jne
adc
nop
dec
cmp
cli
js
cmc
xor
pop
sub
popa
fsubl
lahf
jne
pop
xchg
aaa
dec
mov
fwait
mov
xor
inc
mov
or
aas
sub
pop
sbb
push
dec
imul
outsl
call
mov
jb
mov
sub
or
mov
ljmp
in
cmp
stos
lret
xor
pushf
sub
and
mov
or
sbb
jo
mov
mov
sbb
call
fst
and
lods
jle
push
test
mov
mul
pop
into
mov
mov
dec
xor
pop
insl
inc
stos
xchg
lcall
mov
repz
push
mov
sbb
sub
xor
ret
jo
mov
js
ds
inc
push
das
jbe
push
jns
xor
imul
fimull
cmp
or
aam
pop
sbb
inc
bound
mov
outsb
push
out
int3
push
loope
mov
and
out
adc
je
iret
xchg
pop
push
xor
mov
cmp
push
mov
repnz
add
lahf
enter
jb
jle
xor
mov
mov
jns
clc
dec
fcmovnb
pop
push
sbb
fdivrs
push
movsl
or
das
adc
push
inc
popf
iret
sub
cmp
sbb
test
ret
jp
jbe
sub
ljmp
adc
dec
xor
inc
mov
shll
mov
xchg
push
push
fcompl
repnz
push
dec
pop
inc
fiadds
test
sub
jne
filds
inc
lahf
sbb
out
rclb
mov
mov
pop
pop
dec
repz
dec
push
and
cmp
aas
mov
jnp
call
mov
pop
adc
inc
roll
mov
and
ret
jg
cwtl
or
jno
arpl
insb
inc
mov
inc
in
mov
lret
decb
leave
push
dec
cmp
ljmp
mov
dec
mov
inc
fiaddl
dec
xchg
mov
leave
pop
test
repz
xor
mov
lret
and
or
dec
jl
leave
shrb
rcr
dec
pop
ja
fmul
add
sti
and
je
gs
xor
push
add
shll
ja
push
test
data16
jmp
dec
xchg
subb
addr16
shl
or
int
and
push
dec
popf
mov
mov
sub
test
fs
jg
push
dec
repnz
std
addr16
call
mov
jg
popl
out
add
xchg
scas
cmc
and
addl
enter
test
shll
dec
inc
jmp
pop
movsb
xchg
mov
jo
out
xchg
subps
mov
hlt
sub
and
jmp
lahf
das
fs
pushf
mov
xchg
add
mov
jge
sub
frstor
lods
dec
fdivl
sbb
cmp
int3
cmp
and
xchg
in
xchg
rcl
or
or
insb
and
jne
mov
and
scas
leave
std
xchg
fistl
push
das
mov
or
arpl
jmp
ret
push
dec
hlt
fsub
add
mov
mov
sub
xor
cltd
bound
dec
lahf
ficomps
aas
jg
push
mov
fs
jns
and
dec
mov
adc
sti
xchg
les
lods
mov
lahf
pusha
inc
inc
sbb
inc
gs
pop
mov
repz
std
filds
fldenv
fcmovbe
and
es
mov
aam
jle
bound
dec
out
push
stos
pop
and
hlt
xchg
push
push
mov
popa
aam
fcmove
xchg
movsl
ret
push
in
lret
sub
pop
push
icebp
je
ss
push
add
inc
lahf
test
popf
cmpsb
sbb
out
or
rcr
dec
inc
or
pop
push
pop
sbb
xchg
dec
test
sbb
int3
iret
add
ja
mov
sbb
adc
cmp
sub
in
inc
mov
testl
mov
jnp
rcrb
cmc
push
fadds
cmp
sub
icebp
leave
fst
push
fldenv
aad
mov
inc
fisttps
push
js
cmpb
push
cmpsl
jmp
jecxz
xlat
stos
mov
call
sarb
std
mov
mov
or
js
mov
pop
inc
movsb
jl
jae
data16
subb
adc
add
jecxz
inc
push
loope
xchg
push
mov
xor
jo
or
xchg
pop
xchg
mov
sbb
add
sbb
das
add
idivb
js
sub
les
orb
add
and
scas
fisubl
dec
call
xor
lret
mov
mov
mov
jae
cmovle
push
leave
int3
jne
mov
stos
mov
popa
cmp
sub
scas
rcrb
add
dec
fnstenv
mov
test
dec
cmpsb
pop
xchg
aam
dec
mov
sbb
je
lods
push
scas
mov
imul
dec
xchg
or
sbb
mov
inc
sub
xchg
mov
test
inc
cmp
enter
sbb
cmp
and
push
xlat
mov
lret
xchg
push
mov
icebp
cmpsl
lods
sarl
dec
mov
test
std
in
pop
push
lret
out
xlat
mov
inc
push
popa
mov
scas
inc
push
lcall
loope
xor
cmpsl
cmp
fmuls
push
xor
jne
mov
adc
adc
shrb
in
push
fcomi
mov
jbe
je
pop
xchg
fwait
lods
jge
sub
jno
out
adc
lret
subl
inc
xchg
nop
jmp
jbe
ljmp
and
xchg
add
into
movsb
cmpsl
jl
cmp
mov
sub
jb
xor
pop
or
pop
sbb
mov
movsl
sub
je
push
xor
std
fdivr
mov
repz
or
jl
rolb
add
call
mov
sar
push
cmpb
std
mov
lods
sub
inc
mov
mov
jne
adc
mov
test
inc
out
iret
imul
sub
out
lods
mov
outsb
ret
and
pushf
sbbl
dec
ret
mov
lock
push
sub
xor
pop
cmp
popa
loopne
sub
sbb
add
xchg
int
es
jle
and
inc
pop
out
mov
lahf
in
sub
push
std
mov
ds
popf
add
iret
xor
out
jmp
push
and
nop
cmpsl
jb
fwait
js
push
out
cmp
adc
in
movsl
sbb
cmpsl
mov
cmp
iret
xorb
pop
push
and
addr16
cmp
xchg
inc
test
in
add
mov
xchg
push
push
pop
push
test
dec
into
ret
jp
jmp
inc
and
addb
je
jmp
sub
push
pop
dec
imulb
dec
push
fcmovnbe
sub
fs
inc
jno
inc
jb
jbe
repnz
adc
jecxz
push
push
inc
add
mov
int
xchg
inc
scas
or
imul
int3
movsl
and
fsts
dec
lahf
call
in
shlb
in
sbb
xchg
aas
testb
push
mov
ljmp
out
and
fisubl
xchg
in
scas
mov
loop
xchg
push
dec
mov
mov
rep
outsb
ja
in
nop
fcompl
cmc
jo
in
mov
sub
xchg
push
sbb
inc
out
aad
lea
cmp
mov
out
mov
mov
and
pusha
inc
adc
pop
xchg
push
vdivss
dec
pop
jl
adc
mov
and
inc
adc
xchg
cli
or
out
push
sbb
xchg
mov
ret
fisubrl
xchg
fildl
adc
push
test
cmpsl
jge
mov
dec
fdivrl
rcrl
mov
ljmp
or
jns
ds
push
mul
mov
popf
hlt
adc
dec
lea
xchg
bnd
sarb
fcmovnbe
jecxz
xorl
and
xchg
mov
push
push
adc
push
jge
sbb
mov
push
xchg
fst
sub
lar
xchg
outsl
xchg
mov
cld
bound
xchg
fcoml
and
inc
lods
cmp
push
jmp
rcl
sbb
in
xchg
push
mov
jle
int
push
and
dec
mov
dec
out
push
pop
push
dec
mov
mov
push
les
mov
out
int
push
test
rcl
scas
push
lret
addb
mov
jg
mov
sub
push
mov
ljmp
punpckhdq
xor
out
mov
and
and
cmp
movb
push
shlb
movsb
mov
insb
mov
clc
orb
out
dec
jle
xchg
in
into
mov
aas
inc
mov
inc
ror
add
pushf
rcrb
lret
shlb
inc
mov
dec
clc
sbb
xor
cmp
fstpl
mov
mov
out
jne
mov
xchg
lret
lods
sbb
leave
dec
sbb
movb
push
jg
shrb
sbb
cld
fcoms
test
mov
ljmp
mov
inc
les
scas
rorl
fisttpll
pop
mov
popa
push
andb
jge
les
lock
dec
mov
dec
adc
jb
mul
sub
repz
fdivrs
ja
dec
addb
loopne
xchg
mov
push
dec
les
xor
lods
loop
ret
cwtl
mov
or
mov
sub
movsb
gs
or
lods
pop
repz
aam
idivb
adc
push
sub
sub
or
push
lret
out
insl
mov
pop
sub
jp
mov
push
xor
cld
rorl
fwait
add
and
repz
pushf
inc
jp
push
insl
sarl
cltd
sahf
lods
test
xlat
cmpl
sbb
mov
iret
dec
pop
dec
out
pop
leave
addr16
pop
mov
and
shl
inc
xchg
push
push
push
ljmp
inc
dec
subb
test
jns
in
and
dec
push
pop
in
pop
jno
xor
push
arpl
jns
repz
add
pop
or
mov
test
cwtl
push
push
pushf
loop
xor
mov
enter
les
movsl
inc
and
clc
cmp
inc
dec
movd
call
sub
inc
pop
or
jle
out
mov
cmpsb
cmp
cli
testl
mov
icebp
cmpsl
mov
adc
push
inc
sub
lds
shrl
pushl
sbb
std
cmp
movsl
faddl
pop
stos
mov
cmp
mov
lret
out
sbb
xor
in
call
adcb
xchg
push
cmp
mov
sub
mov
xorl
aas
dec
add
sbb
fidivrl
insl
fadds
xchg
enter
inc
addr16
sub
movsl
push
scas
adc
fld
rcl
int
sub
pop
sub
jbe
outsb
and
lahf
shlb
leave
vmovq
lret
pushf
int3
mov
int
orl
inc
gs
fsubs
fistl
xchg
shlb
fcmovu
cmp
jae
mov
mov
cwtl
stos
test
mov
pop
or
add
and
in
lret
sub
test
push
sub
mov
adc
and
push
or
sub
jecxz
rol
shrb
sbb
or
fldt
movsl
jo
xor
shll
call
sbb
jp
sub
enter
adc
fsubl
xchg
outsl
das
sarl
aaa
pop
add
sub
add
jae
test
sbb
adc
shlb
xchg
inc
add
push
in
or
push
lret
pop
lea
xrelease
inc
ret
add
lods
in
jbe
test
dec
fnstsw
push
cvtps2pd
in
cs
dec
mov
popw
mov
dec
jae
and
out
xlat
iret
or
push
es
or
dec
cmp
mov
lea
sub
loope
push
shlb
decl
in
inc
rcll
pop
clc
loopne
adc
js
jns
jge
mov
fcmovnbe
inc
es
lock
lret
xchg
cmpsb
cltd
stos
test
sub
mov
into
out
sbb
add
cld
cmpsl
mov
outsb
or
daa
sbb
jo
into
inc
xchg
xchg
insl
rcrb
movsl
cld
jmp
jbe
jns
call
int3
into
xchg
or
cmp
mov
cmp
mov
cmp
or
outsb
jmp
xchg
in
and
adc
js
dec
inc
adc
jl
into
imul
add
and
outsb
xor
adc
aam
cs
sbb
hlt
mov
xchg
pop
dec
cmp
xchg
aaa
mov
icebp
movsl
mov
jno
into
mov
xchg
out
xor
inc
fst
xor
aaa
jmp
jae
sub
sub
es
loope
mov
mov
xchg
bound
aam
ficomps
push
cmp
scas
inc
jp
jmp
sub
push
xorb
rolb
int3
cmp
pop
sbb
push
jl
dec
mov
push
fsubl
fistpl
xchg
and
adc
pop
popf
sub
lea
dec
repz
push
bound
cmpsl
jl
lods
add
xchg
pusha
cli
or
add
stc
daa
out
shll
loopne
xchg
push
fldcw
dec
push
jo
xchg
hlt
or
sbb
cmp
xchg
aaa
ja
into
ljmp
cmp
and
es
dec
pop
mov
inc
pushf
push
sbb
dec
gs
cltd
mov
and
in
ficoms
add
les
fsubr
sub
adc
out
adc
imul
je
out
mov
mov
fcom
xor
fistpl
test
push
addr16
cmp
ret
enter
int3
scas
es
callw
or
sub
mov
or
aam
or
dec
repz
adc
orb
pop
ret
std
mov
xchg
jae
shl
xor
loop
test
jae
ja
fcoms
pop
iret
data16
lea
mov
fisubrs
mov
and
adc
add
sbb
sbb
imul
and
lret
push
imulb
mov
aaa
rol
xor
mov
rcr
aas
sub
ss
lods
jg
xor
jmp
jae
cli
shlb
subb
out
popf
sub
inc
mov
mov
dec
xor
push
mov
loope
and
lahf
mov
je
rorl
std
mov
fmul
test
jmp
mul
push
add
jbe
jnp
in
std
mov
decb
fistl
sbb
orl
fmuls
pop
push
leave
dec
mov
mov
cltd
jge
mov
jae
in
dec
xchg
aaa
add
outsl
cwtl
lahf
test
int
sti
cs
push
shll
std
xchg
mov
outsb
xchg
mov
fcoml
and
leave
adc
xchg
shr
cmp
fdivrs
push
gs
inc
fiaddl
fstps
push
hlt
mov
lahf
or
push
out
std
lret
push
and
rorl
or
ljmp
jnp
pop
imul
fidivl
out
cwtl
sub
loop
ja
push
stos
sub
out
rclb
push
sbb
rclb
sub
xchg
mov
xchg
lret
dec
popf
mov
push
jae
sahf
cmp
mov
and
not
cwtl
cmc
in
fnstenv
test
fdivr
jecxz
ljmp
repz
fbstp
mov
sub
in
push
pop
sbb
fldenv
enter
push
dec
sub
cmp
add
mov
mov
out
pop
inc
das
arpl
test
inc
pop
cmpsl
xor
inc
aad
xor
push
xchg
mov
dec
outsl
loopne
test
jns
stc
test
outsb
push
lret
mov
xchg
pop
int3
cwtl
cmp
jne
pusha
loope
mov
repz
pop
adc
push
in
lea
dec
inc
push
cmpsl
bswap
int3
xor
dec
dec
rcl
jno
and
cmp
xchg
fcoml
leave
adc
dec
xchg
push
flds
or
pop
and
in
push
jle
pop
idivb
dec
sti
push
cs
jae
and
rclb
cltd
jg
and
adc
sbbl
dec
cmpsl
jbe
nop
jno
int3
push
cmc
fwait
or
andl
mov
sahf
xchg
pop
lret
mov
in
aam
dec
shr
lcall
in
dec
ja
fcmovnbe
push
fdivl
pop
sti
or
cld
cmp
xor
jge
jmp
mov
xchg
mov
pop
xor
dec
mov
push
cmp
pop
inc
mov
ds
xor
xor
call
dec
ljmp
jbe
cld
out
into
aas
xchg
mulb
sub
pop
mov
and
std
scas
scas
sbb
adc
sarb
xchg
mov
push
mov
sbb
jae
dec
in
mov
mov
repnz
out
lret
xchg
mov
lock
imul
xchg
in
testl
addr16
adc
pop
lods
imul
adc
sbbb
sarb
sub
nop
fsubl
sahf
dec
push
into
add
pop
and
imul
push
pop
clc
iret
jbe
mov
cmp
push
test
mov
dec
lcall
mov
popf
lods
hlt
inc
movsb
int3
mov
xchg
out
jecxz
ljmp
fstps
punpcklbw
add
movsb
mov
jge
out
int
push
in
mov
mov
flds
inc
stc
xchg
adc
push
mov
xchg
scas
or
cmp
imul
push
dec
pop
jle
clc
loopne
ss
jbe
mov
add
jo
outsb
mov
xor
mov
iret
jecxz
sbb
or
mov
mov
mov
jb
inc
pushf
stc
add
and
rorb
lret
jmp
lret
movsb
js
daa
arpl
test
addr16
je
adc
and
xchg
out
add
mov
and
jp
jmp
pop
push
stc
cmp
inc
sub
testb
mov
or
or
push
lcall
jb
jle
lods
add
mov
inc
mov
aaa
sbb
xchg
sub
aaa
cmp
add
ds
movsl
and
loope
mov
rcrl
stos
iret
jbe
add
and
cmp
popf
lret
and
mov
dec
mov
cmp
in
mov
fs
mov
add
or
add
test
mov
mov
loop
xchg
jle
lods
mov
test
push
fst
sub
xor
lret
jnp
adc
shl
das
pop
xchg
inc
setl
push
ds
sahf
push
popa
mov
fimuls
cmp
adc
js
subb
cmp
ret
mov
push
push
inc
mov
inc
xor
outsl
or
xchg
sbb
adc
jecxz
daa
int3
sbb
mov
mov
push
repnz
and
or
outsl
je
cmpsl
lds
enter
imul
cmp
aad
test
jne
test
insb
xchg
xchg
lahf
sub
sar
xchg
cmp
sub
pushf
pop
mov
arpl
mov
inc
mov
fcmovnb
cld
jbe
icebp
pop
fstps
sbb
cmpsb
push
cmp
into
das
mov
lock
rorl
outsl
adc
test
jg
dec
xchg
mov
push
out
je
jge
in
dec
ds
add
jne
jo
cmp
pop
enter
dec
xchg
jmp
lds
leave
sub
cli
dec
sbb
into
fldcw
and
mov
ss
cld
cmpsl
not
or
gs
inc
sbbb
hlt
popa
mov
sbbb
arpl
test
enter
out
cmp
mov
lret
or
sahf
out
sub
ficompl
testl
lret
sbb
jo
sbb
dec
dec
cmp
inc
jb
push
sub
loope
lret
les
push
andb
push
push
fsubl
or
inc
and
xchg
xor
mov
jno
cltd
fildl
movl
mov
je
sub
pop
insl
add
lret
out
jae
imul
inc
add
sub
lods
pop
mov
fcmovbe
loop
mov
mov
sbb
and
dec
lret
push
jmp
scas
pop
xor
sbb
xlat
mov
jg
jl
sbb
adc
shll
mov
xchg
fnsave
daa
sub
clc
dec
cmc
stc
xor
fcom
sbb
fldl
pop
jbe
loope
leave
mov
std
pop
andb
fiadds
lods
sbb
cmp
push
lret
xlat
testl
pop
jo
lds
adc
sbb
dec
jmp
mov
shll
pusha
int
sub
test
rorl
rcrb
cld
out
mov
movnti
dec
push
jbe
mov
shlb
jo
stos
add
pop
cmp
cmpsb
outsb
gs
push
lea
test
iret
inc
mov
rcl
imul
cvttps2pi
sbb
insl
sub
out
ja
scas
push
xor
or
rorb
gs
push
pop
xor
xlat
pop
cmp
fsubl
insb
sub
test
pop
mov
into
jae
jge
mov
xor
movsb
xchg
cmpsl
mov
mov
rcll
dec
xchg
clc
scas
cld
js
clc
mov
push
lret
aaa
mov
dec
sub
sar
aam
push
jns
ret
xchg
pop
test
lret
shlb
ds
out
and
fcoms
enter
insl
or
popa
out
into
jmp
xlat
cwtl
adc
cmc
mov
int3
out
addr16
out
xchg
cmp
xchg
rcrb
add
arpl
and
movsl
rcl
sbb
push
fists
orb
mov
inc
xorl
insl
xchg
cmp
push
xchg
xchg
and
push
int
jbe
cltd
pop
and
lods
push
fs
jne
rcr
lret
out
data16
xor
into
sti
je
xchg
sub
out
sbb
lcall
iret
pop
outsl
cld
rorb
shll
or
mov
or
cmp
enter
out
mov
sub
or
xchg
pop
adc
bound
rep
inc
pop
fsubrs
pusha
cmp
outsl
jo
add
push
or
aas
fs
jl
dec
out
out
jne
sub
push
ja
mov
dec
or
insb
out
add
lahf
rcll
or
ja
pop
mov
push
inc
push
or
xor
add
ss
je,pn
adc
ret
popa
xor
xorb
movsl
mov
je
jbe
rcrl
lret
mov
jbe
repnz
insl
and
sahf
icebp
clc
or
xor
add
loop
cmp
jbe
daa
xchg
invd
jl
or
shlb
pop
outsb
mov
ja
out
add
out
popa
aam
test
aaa
out
fdivs
rcl
repnz
cmp
inc
mov
mov
xor
jle
aas
mov
mov
xchg
scas
push
push
push
test
aam
adc
imul
mov
and
imul
sub
xchg
xchg
rorb
pop
in
push
add
dec
enter
aam
int3
in
and
je
out
or
xorb
icebp
jnp
jge
push
pop
nop
mov
pusha
sub
int3
pop
sbb
mov
pop
xchg
imul
mov
xchg
pop
lock
test
inc
and
or
sub
mov
cmpsb
addr16
add
mov
icebp
enter
inc
push
dec
mov
or
xchg
push
cld
sbbb
loopne
sbb
mov
sbb
test
stos
dec
dec
int
leave
jb
loope
inc
mov
orl
out
fnstsw
les
jo
mov
sub
xor
shr
mov
mov
push
icebp
mov
jae
dec
into
push
xchg
xchg
push
and
sub
dec
movsb
cld
ja
mov
jnp
jmp
adc
jmp
stc
bswap
movsl
aaa
call
loopne
mov
push
fcmovb
js
adc
fildll
leave
adc
inc
enter
dec
arpl
sbb
and
jle
lock
dec
fwait
inc
mov
xchg
and
data16
ss
es
sbb
push
mov
inc
lods
mov
rorb
mov
gs
mov
or
cmp
push
mov
sarl
dec
lret
dec
add
jne
ljmp
insl
cs
and
mov
xor
call
push
push
das
loop
mov
or
mov
fst
cld
jle
jns
xor
pop
repz
jmp
mov
rcrl
cltd
mov
loopne
cmp
jle
dec
mov
jae
movsb
adcl
jp
out
scas
add
jmp
xchg
test
dec
xor
or
xor
pop
in
rorb
orb
cwtl
push
mov
pushf
xor
adc
inc
mov
aam
push
jecxz
xchg
mov
imul
fidivrs
jle
xor
mov
xchg
jne
popf
fldt
mov
mov
repz
xor
xor
sub
jb
inc
in
mov
mov
mov
fdivs
rorb
aam
inc
jae
shrl
inc
aam
mull
cmc
rcl
cmpsb
iret
inc
inc
movlps
push
es
push
push
xor
out
lock
sub
in
mov
popf
pop
es
rcl
sbb
and
test
fstps
clc
mov
jp
sbb
cmc
aam
add
shr
dec
es
jle
mov
cli
mov
negl
push
pushf
adc
and
repnz
dec
jne
dec
jno
je
mov
or
daa
insb
fadd
jae
out
xor
insl
iret
mov
mov
fcmovb
xchg
shrl
jne
cmp
rclb
pop
dec
push
and
adc
cmp
lret
movsb
scas
mov
into
cwtl
leave
call
sarl
mov
fmull
or
add
stos
mov
into
cmp
push
pop
aas
mov
pop
inc
das
clc
mov
xchg
mov
cmp
js
out
pop
sub
mov
mov
jbe
fs
rcr
or
push
pop
and
loop
out
mov
xor
or
xchg
divl
outsb
lret
xor
mov
js
cltd
arpl
push
push
jg
xchg
cmp
lcall
out
jne
mov
popf
cld
sub
cmpb
aas
in
jo
fwait
dec
aad
insb
jne
or
cmp
int
push
push
push
out
mov
mov
and
scas
rcrb
xchg
push
mov
dec
mov
nop
shll
out
ror
jo
push
lcall
fst
sub
das
jbe
outsb
jo
add
fcmovb
leave
cmp
stos
pop
test
and
scas
xor
popa
mov
xchg
faddp
scas
push
fwait
inc
sahf
dec
es
sub
adc
pusha
int3
shll
stos
mov
adc
sub
shl
mov
jae
es
out
cmp
dec
cmpsb
pop
out
inc
jo,pn
adc
ja
out
and
dec
outsl
lcall
stos
mov
jnp
mov
mov
mov
push
test
aad
or
inc
das
xchg
mov
loopne
inc
sbb
adc
or
fcompp
ljmp
xchg
adc
add
jecxz
sbb
in
mov
aas
imul
ss
js
repnz
push
sub
push
icebp
cmp
lret
or
lahf
xchg
imul
inc
out
daa
push
mov
pop
inc
pop
lcall
lret
jnp
adc
jbe
mov
add
fs
or
sub
adc
or
not
xor
jo
aas
sub
pop
cmp
cmp
shll
adc
jge
pop
and
cmp
popf
mov
inc
cmp
inc
cs
or
movsl
test
adc
add
pop
and
push
sahf
popf
movsb
mov
les
mov
lret
shll
stos
mov
mov
roll
jbe
push
cmc
fdiv
test
mov
stc
mov
sbb
xor
jg
jge
dec
sbb
mov
in
pop
mov
adc
dec
xor
jnp
pusha
gs
lods
std
dec
aas
nop
enter
sbb
inc
mov
mov
cwtl
or
divl
loop
mov
gs
mov
notb
cmc
out
jl
jne
adc
mov
lret
mov
in
aas
mov
mov
testl
pop
push
jmp
xchg
jb
into
daa
fcmovbe
xor
xor
stc
rolb
push
lods
push
sbb
leave
aam
cwtl
mov
jl
pop
inc
inc
imul
dec
pop
jmp
fcomp
lahf
loope
push
pop
inc
addr16
fwait
mov
fdivs
clc
lahf
pop
push
cmpsl
pop
mov
inc
sbb
test
rolb
shrb
mov
adc
fistpl
mov
sbb
insl
and
mov
mov
push
rol
out
clc
push
sbb
in
ds
mov
push
mov
adc
and
and
roll
scas
push
mov
xchg
arpl
adc
mov
push
repnz
repz
dec
lea
jne
inc
cmpsb
aad
push
push
test
ds
and
repz
jp
shlb
xchg
lods
rcl
icebp
pop
push
out
mov
out
mov
mov
xor
sbb
jbe
or
mov
mov
mov
adc
dec
call
iret
lea
sbb
test
add
cmp
mov
mov
adc
cmp
xor
xlat
repz
xlat
outsl
dec
aas
test
rcll
fistpl
movsl
data16
repnz
movsb
xor
and
test
xchg
nop
into
lcall
jne
dec
js
fldenv
imul
inc
sub
lcall
out
jg
lods
push
jo
sub
ja
cmp
ret
cs
mov
xor
jnp
pop
adc
add
push
or
lds
dec
ja
imul
lods
xchg
into
les
cld
or
loopne
lock
dec
add
mov
sbbl
das
push
dec
loop
sbb
lods
outsl
dec
sahf
insl
arpl
sbb
xchg
add
test
or
or
jle
push
jns
cld
call
aam
mov
and
ljmp
mov
cld
jp
ficomps
fsubr
push
dec
pop
mov
jbe
cmpsl
fs
loope
mov
fwait
mov
inc
add
lret
ret
xchg
icebp
aas
push
mov
adc
das
adc
and
lret
popa
jo
loop
sbb
mov
xor
rorb
and
add
sahf
cmp
popf
push
xchg
bound
leave
adc
scas
les
pop
sub
enter
popf
out
sbb
lret
cmp
enter
bound
adc
cmp
arpl
sub
mov
cwtl
adc
mov
mov
jmp
mov
imul
cmc
orb
fwait
fdivs
xlat
inc
sub
das
dec
inc
iret
pusha
fisubrl
leave
adc
mov
push
dec
mov
add
out
add
cmpsb
cltd
movsl
xchg
mov
push
adc
inc
call
xchg
dec
mov
dec
ja
sti
addr16
sbb
jo
jecxz
or
aas
cwtl
bound
hlt
clc
jbe
aaa
mov
int3
xchg
mov
jecxz
and
push
roll
mov
mov
mov
sub
arpl
lds
cmp
inc
sub
xchg
mov
push
mov
lea
aaa
repz
mov
cmpsl
adc
fmull
aam
int3
mov
cwtl
push
sbb
mov
jmp
mov
pop
add
dec
adc
mov
xchg
sub
shlb
dec
repnz
fwait
pop
movsb
cmc
or
std
sbb
in
jecxz
scas
pop
stos
frstor
cmp
mov
xchg
call
std
mov
mov
out
addb
pop
lods
inc
movsb
pop
inc
mov
jl
cmp
xchg
aam
jle
out
mov
leave
jno
adc
clc
adc
push
movsb
scas
in
aam
cltd
dec
xchg
loope
push
ja
dec
pushf
jno
arpl
inc
movsl
scas
sarb
cltd
lea
stos
lods
sbb
dec
inc
aam
sbb
jbe
sub
sahf
rorb
icebp
xchg
sub
xor
leave
push
insb
mov
int3
or
addr16
hlt
mov
mov
scas
sbb
lret
ja
repnz
addb
je
cld
cmp
mov
jmp
jmp
inc
nop
mov
xchg
mov
adc
add
aam
nop
add
mov
mov
push
xchg
mov
push
lods
pop
jmp
mov
mov
fstps
ljmp
ss
test
insl
js
cmpsl
mov
iret
je
test
aad
repz
jb
adc
inc
sub
mov
jns
adc
fs
es
cmp
movsl
dec
ror
out
sbb
sti
dec
mov
xor
rclb
push
mov
xor
push
lock
out
sub
cmc
or
inc
out
and
movsb
jbe
push
xchg
xor
pop
jb
add
imul
mov
inc
push
cmp
insb
xor
cltd
lret
jno
inc
int
push
shlb
dec
ret
stc
into
cmpsb
jg
jae
sub
mov
lock
jmp
cli
cmp
push
mov
rcrl
movsl
arpl
cli
aam
and
inc
mov
lahf
jnp
mov
push
sub
xor
mov
add
iret
mov
popf
in
mov
fisubs
in
daa
xchg
cld
pop
in
mov
or
sar
and
mov
pushf
adc
gs
fs
leave
jge
xchg
lea
pop
out
rol
js
add
fyl2xp1
push
test
dec
inc
or
imul
jnp
out
cld
lret
lcall
sbb
xorl
in
cmp
xchg
scas
fwait
bound
aaa
lret
pop
les
dec
leave
out
cltd
sub
lret
out
cmc
push
pusha
pushf
push
dec
cli
inc
mov
in
xchg
jecxz
xchg
xor
or
sub
mov
dec
inc
aaa
insl
addr16
xchg
push
pop
lret
ds
pop
dec
out
jae
loop
inc
out
iret
xchg
in
sbb
sub
jle
les
fisubs
or
mov
sarl
cmp
push
lret
mov
adc
dec
sub
lods
adc
icebp
lret
enter
lds
or
lcall
lock
fwait
pop
jo
mov
jb
xchg
mov
call
jno
dec
aad
inc
adc
mov
dec
push
nop
imulb
scas
mov
cs
outsl
sbbl
iret
mov
push
stos
ds
or
and
repnz
or
addr16
jge
adc
push
sub
jns
and
add
daa
insl
lock
leave
push
mov
stos
add
jb
and
jl
cmpsb
clc
hlt
xchg
dec
xor
mov
mov
ljmp
lods
pop
mov
mov
mov
dec
out
ljmp
cmp
movsl
jae
outsl
lret
sbb
mov
or
cmp
shl
mov
push
int
sub
adc
enter
movsb
sbb
sahf
std
cmp
test
popf
jp
in
lret
and
xchg
mov
jg
inc
mov
sarb
cmc
push
cmpsl
mul
and
xor
sub
movsb
sbb
xchg
adcb
push
int3
add
pusha
daa
adc
lock
mov
push
das
testl
iret
daa
imul
and
sub
sub
mov
popf
in
mov
adc
aaa
pushf
je
mov
mul
sarl
in
inc
cmpsl
xor
lock
gs
dec
mov
adc
jle
mov
mov
cmp
lahf
arpl
mov
mov
leave
xlat
cmp
push
loope
test
out
adc
fidivs
xor
xlat
cli
xbegin
ds
dec
sti
mov
std
jp
in
dec
loope
sbbb
mov
daa
fs
mov
xor
adc
and
scas
lock
or
enter
jmp
fdivs
in
rcll
sub
adc
shlb
xlat
loop
adc
stos
iret
es
movsb
xchg
cmc
cld
imul
push
xchg
lret
fwait
cltd
loop
fstpl
aas
jp
out
jne
inc
xchg
aam
fsubrl
sbb
mov
mov
cmp
xor
das
pop
xor
mov
out
xor
shlb
movsl
outsl
xchg
dec
inc
fidivrl
pop
mov
dec
ret
inc
stc
sub
sbb
fiaddl
cmp
shll
sarb
lods
stos
test
fldcw
fildl
mov
addr16
mov
mov
faddl
or
mov
test
xchg
clc
lret
aad
sbb
add
xchg
inc
jbe
movsl
stos
mov
inc
aad
test
int
jmp
outsb
dec
aaa
mov
mov
sub
and
push
les
es
sub
jns
test
ja
out
push
adc
lret
popf
and
push
fistps
daa
cltd
lea
out
mov
shl
mov
in
out
xchg
sub
loop
into
add
stos
adc
inc
mov
adc
xlat
and
jge
test
cmc
add
loop
push
testl
jge
fs
movl
ja
cli
xchg
mov
pop
aaa
mov
dec
or
addr16
loop
nop
shl
imul
popa
sub
xor
sub
and
sbb
xchg
popl
into
out
ja
data16
aaa
test
cli
out
popf
adc
mov
or
sarb
jne
nop
icebp
xor
adc
adcb
xchg
push
sub
or
imul
jbe
fst
jno
jns
lret
mov
sub
mov
dec
sub
jae
jo
ficomps
aam
jecxz
dec
leave
repnz
xor
pop
push
pop
mov
pop
jp
cltd
movsl
roll
arpl
insb
mov
cmpps
das
out
leave
lcall
sub
pushf
test
lea
pop
jge
and
pop
test
mov
push
lock
xchg
test
aas
ja
cmpsb
lods
or
xlat
addr16
push
and
inc
fwait
jne
cmpsl
arpl
movsb
dec
aam
inc
xchg
aam
nop
jbe
mov
adc
sub
in
pop
push
and
sbb
imul
movsl
pop
push
inc
and
sub
dec
addl
push
or
jecxz
stos
mov
inc
arpl
or
mov
scas
xchg
dec
or
addr16
xadd
cmc
add
mov
imul
aaa
outsb
test
lcall
add
jmp
push
push
leave
aam
xlat
mov
mov
test
jl
cmp
fidivs
jns
push
xor
cwtl
jo
adc
mov
adc
inc
int3
mov
dec
and
xchg
stc
mov
loope
aas
and
push
sahf
js
and
cmpsb
pop
jge
mov
js
popa
inc
jl
jmp
pop
addr16
push
pop
leave
or
test
sarl
add
insl
mov
push
out
ret
pop
mov
add
mov
fsubs
daa
dec
clc
lea
or
mov
jl
sub
xchg
sub
or
imul
test
push
pop
dec
fsub
out
cmp
loop
notl
lret
sbb
lret
inc
js
xchg
call
test
pop
inc
test
push
es
sbb
add
mov
dec
xor
imul
into
xchg
divl
mov
mov
or
arpl
repnz
xchg
stos
add
jae
or
push
in
push
add
into
mov
clc
pusha
jae
arpl
add
or
rcrb
push
lahf
jge
sbb
lret
inc
dec
mov
pop
jp
rcr
ret
test
std
dec
adc
cmpsl
shl
jne
inc
jl
sahf
jae
push
aad
or
test
add
mov
sahf
jbe
xchg
repnz
cmp
mov
pop
sbb
popa
sub
push
pop
sub
cli
mov
mov
stos
jbe
dec
ljmp
incl
pop
sub
dec
aas
iret
mov
sbb
sub
insl
sbb
and
icebp
mov
iret
push
or
sbb
fnsave
push
jo
movsl
sub
mov
nop
dec
adc
rorb
pop
inc
lret
xor
ss
mov
lds
xor
pop
movsl
into
lahf
fwait
pop
jg
pop
pop
mov
pusha
rol
or
int3
inc
lcall
ficomps
ss
push
adc
or
fsubs
or
vprotw
call
cmp
notl
cmp
push
cmp
js
loop
cli
push
in
xchg
dec
fmul
aas
fadd
mov
and
pop
xorl
adc
incb
in
out
hlt
daa
test
fadds
rorb
pop
mov
call
loopne
outsb
loope
or
push
sub
popa
ja
aaa
xchg
dec
scas
psadbw
lods
pop
sub
mov
imul
adc
loop
push
ss
dec
inc
mov
xor
inc
gs
add
jo
jmp
test
ficompl
insl
jno
pop
xor
mov
and
test
mov
movsb
jnp
je
mov
in
and
jbe
inc
addr16
inc
xchg
inc
jbe
mov
sar
pop
out
dec
cmp
movsl
pop
shl
cwtl
test
inc
loopne
cwtl
sub
xor
inc
ljmp
movb
dec
mov
mov
enter
sahf
daa
shll
xor
imul
jbe
popa
scas
repz
out
sub
add
jp
or
movsl
pusha
sahf
jb
sub
jno
iret
xchg
dec
inc
dec
mov
jne
pop
cs
xor
ret
int
jns
dec
add
ds
pop
lds
lret
cs
repz
sub
xor
pop
clc
enter
imulb
into
dec
add
lods
aaa
xchg
jbe
xchg
dec
push
int3
cmp
sub
and
pop
in
xchg
and
je
and
cmpsb
jmp
push
xchg
cltd
mov
loope
add
rcrl
imul
sub
into
jmp
dec
and
jbe
push
fwait
loop
xchg
inc
jg
jecxz
jge
or
mov
shlb
std
into
add
hlt
pop
fsubrs
insl
std
push
cmpsl
pop
out
sbb
jl
in
xchg
dec
pop
in
fsubr
je
mov
jnp
out
cmp
popa
into
push
mov
jbe
mov
sub
dec
imul
mov
pop
ss
sets
mov
jbe
dec
xchg
sub
nop
loopne
sbb
ds
sbb
rorb
add
fmul
rcll
dec
cltd
jnp
jle
lret
outsb
dec
insb
leave
xchg
mov
jecxz
and
mov
sbb
jmp
jp
dec
inc
clc
sbb
push
push
lods
cwtl
pop
stos
jbe
js
lret
int3
jae
add
add
cmp
jae
out
pop
mov
cli
repnz
sub
aam
xor
es
aaa
sti
cmp
xor
inc
and
dec
pop
xchg
pop
or
jns
mov
loopne
mov
jae
mov
push
xlat
mov
push
sub
stos
sub
jns
mov
sbb
testl
jbe
lret
inc
or
add
jmp
enter
dec
jge
dec
pop
xor
lret
mov
push
jae
outsl
lock
mov
cmp
test
inc
cmp
push
sub
lret
adc
test
test
into
test
divb
fisubrs
ret
inc
pop
xor
inc
or
xchg
sarl
ds
loop
pop
mov
push
out
mov
adc
inc
mov
xor
push
ret
cs
push
popl
add
add
adc
shll
ss
adc
pop
aam
mov
add
cld
movsl
pop
cmp
fs
add
jbe
repnz
test
dec
adc
mov
cmp
arpl
mov
jns
adc
sbb
inc
pushf
cwtl
mov
xor
rcll
xor
mov
and
out
test
inc
xchg
inc
cltd
pop
imul
out
sbb
and
movsl
xchg
push
mov
popa
cmpsl
jne
adc
mov
in
sti
mov
leave
xchg
add
mov
sbb
scas
jns
lahf
push
mov
cmp
xor
dec
out
xor
lret
mov
sti
push
scas
mov
sbb
fcompl
or
mov
movsb
push
mov
lds
sahf
js
mov
xchg
dec
fs
out
xchg
and
mov
dec
dec
xor
shlb
loop
stos
incl
and
ret
movsb
adc
mov
sbb
lret
ja
pop
inc
xor
dec
sbb
rclb
loop
mov
mov
mov
leave
push
xchg
sti
adc
imulb
push
int
test
jns
sti
xchg
cmpl
push
mov
fstpt
rcl
mov
mov
add
pusha
mov
mov
push
test
jp
sbb
and
into
inc
lock
pop
das
and
out
xor
xchg
or
add
or
cld
shll
xchg
mov
repnz
dec
jo
mov
push
addb
dec
cltd
push
add
inc
imul
mov
aaa
mov
sbb
mov
es
sarl
sbb
xor
aas
push
cmpsl
mov
sti
lcall
rorb
xchg
mov
icebp
jb
scas
sti
test
in
adc
and
ficoml
test
mov
into
xchg
inc
jle
out
jge
adc
nop
mov
sbb
sahf
les
mov
rolb
dec
popa
sti
mov
mov
mov
ds
sbb
ret
push
or
mov
subb
sbb
aad
into
jmp
test
in
push
shrb
cmp
xor
dec
ds
and
int
shll
bound
add
add
push
or
cmpl
inc
lea
or
sahf
scas
cmp
push
xchg
call
in
xchg
jmp
mov
addr16
pop
push
xor
repz
stos
pop
imul
hlt
cmp
pop
loopne
inc
lea
jge
cmp
push
xchg
out
cwtl
mov
jmp
dec
test
into
mov
dec
addb
cmp
xchg
mov
and
mov
loop
lret
and
loope
jle
pop
xlat
sub
iret
in
mov
in
or
shll
and
inc
loop
pop
xor
ja
aaa
data16
xorb
cmpsb
sub
mov
push
sub
sarb
out
ljmp
pop
insb
adc
pop
pop
out
movsb
jp
dec
lret
and
shll
jo
mov
rorl
ljmp
xchg
xchg
sbb
cs
and
movl
jns
pushf
xchg
xor
xchg
push
mov
outsb
adc
mov
sbb
leave
push
xor
push
std
xlat
out
adc
fisttpll
push
push
cltd
jp
pop
ret
jge,pn
add
jp
mov
or
mov
dec
hlt
push
xchg
imul
jo
icebp
fs
aad
push
insl
jnp
mov
aas
cmpsl
dec
cmp
les
ljmp
jo
jne
push
stc
pushf
test
and
and
lods
and
add
jl
mov
dec
test
dec
xchg
into
fmuls
or
in
test
and
mov
into
add
fimull
xor
jle
hlt
aaa
mov
add
mov
mov
jne
rcl
sbb
cmpsl
popa
nop
jecxz
aas
jp
or
mov
les
mov
push
adc
loop
xchg
cs
nop
or
and
xchg
test
test
push
inc
jge
mov
rcrb
fistps
cmpl
pushf
pop
sbb
cmp
fists
int3
jge
out
or
xchg
pusha
call
outsl
push
fs
loope
cs
lock
mov
fists
stos
out
aad
dec
in
sub
jbe
cltd
cmpsl
mov
mov
aam
mov
cli
lahf
inc
adc
std
pusha
lods
xchg
aas
adc
push
cmp
cld
dec
in
jae
lahf
add
fldenv
lret
jp
and
sub
cmpsl
or
jle
and
cmp
adc
loopne
fmul
in
inc
cs
loope
cmpsb
insl
pop
add
add
rorl
push
pop
mov
je
jbe
lock
lahf
jns
rolb
int
pop
movsl
in
jo
daa
aad
out
pop
ja
imul
cmp
jmp
mov
push
dec
mov
sub
cmpsl
sbb
loop
popf
dec
lret
ljmp
mov
mov
sub
xchg
movsl
mov
faddl
dec
push
lret
out
ss
out
fwait
addr16
pop
mov
pushf
inc
outsl
ficoms
jmp
and
insb
ds
dec
cld
dec
aam
sti
mov
push
push
cmp
cmp
pop
cmp
jae
rcl
pop
lock
cmp
cwtl
aas
mov
mov
fsubrl
cmp
movsl
jecxz
sub
cli
subb
sbb
shlb
xchg
aam
scas
out
dec
and
aad
mov
fcoms
into
or
push
dec
or
mov
outsl
mov
inc
and
test
stc
loopne
shrl
in
jle
or
or
xor
pop
arpl
out
repnz
push
dec
mov
xor
push
lock
pop
dec
js
scas
mov
dec
ljmp
iret
add
enter
adc
lods
and
sbb
in
outsb
out
lret
ret
popf
sbb
inc
or
iret
ret
or
lds
xor
int
movsb
negl
or
xchg
imul
lods
repz
sub
imul
xor
jge
xchg
jp
fwait
lret
push
repnz
lds
inc
sub
mov
lods
mov
mov
dec
dec
test
aas
in
dec
lock
dec
xor
push
sahf
jno
or
dec
inc
scas
jne
cmpsl
clc
mov
push
push
ret
pop
test
xchg
xchg
leave
inc
cwtl
insb
faddp
inc
cmp
jae
dec
push
push
mov
jmp
in
pop
mov
sub
rcl
jne
mov
leave
xchg
dec
test
enter
dec
xor
mul
stos
add
cmc
pop
jg
mov
xor
rclb
pop
xchg
fs
mov
je
mov
in
and
push
inc
in
jp
cmc
xchg
shll
icebp
inc
loop
push
mov
test
mov
lods
fdivrp
sti
lcall
jo
into
inc
xchg
lret
mov
pop
jmp
xlat
sahf
je
rcrb
mov
les
jecxz
inc
pop
pop
rorl
push
and
aad
xchg
xor
push
add
cli
lret
xchg
push
and
jo
mov
sub
rcll
repnz
aad
idivl
push
sbb
out
xchg
inc
pop
js
push
shl
mov
shr
xor
add
mov
push
cmp
popa
push
dec
pop
movsb
mov
mul
xor
out
mov
and
int3
sub
mov
jo
lret
jae
or
iret
adc
outsl
out
arpl
cmp
mov
xchg
hlt
jne
test
les
lods
and
sahf
sbb
jecxz
add
insb
aaa
insl
xchg
loope
sbb
cmp
mov
push
fmull
je
roll
mov
push
cmp
xchg
sub
jle
mov
jmp
dec
fsubp
push
inc
stc
xchg
fcoml
movsb
shlb
out
adc
out
fdivs
pop
movsl
aas
xlat
jp
xor
jmp
add
test
test
sarb
ficomps
add
popa
pop
into
mov
es
dec
pop
cs
sub
mov
lods
jns
sub
iret
in
cwtl
shl
push
lret
repz
cmp
int3
inc
jle
incb
inc
mov
xchg
mov
push
lret
xor
ss
mov
popa
insl
rcll
outsl
push
push
rcrb
out
mov
inc
dec
mov
es
sub
idiv
stos
cmp
pusha
jecxz
dec
xor
ja
pop
xchg
mov
lock
or
jbe
addr16
ficompl
fs
mov
dec
aam
pop
shll
out
daa
fwait
arpl
lcall
imul
inc
ljmp
negl
fisttpl
mov
inc
sub
sub
cmc
flds
dec
ret
or
xor
mov
pop
rclb
mov
and
shl
data16
mov
jl
cmp
inc
push
out
sbb
jo
fildll
or
adc
in
xchg
push
xor
add
mov
cmp
xchg
mov
in
inc
pop
mov
push
rcr
mov
loopne
enter
iret
fisubrl
jno
inc
ja
inc
into
mov
gs
jmp
int
add
loopne
lea
out
sar
out
out
jb
mov
lret
add
out
pop
push
mov
sub
jne
inc
test
dec
repz
lret
insb
lahf
sub
gs
cmp
fs
out
push
cli
or
or
bound
imul
das
outsl
push
sbb
cmp
add
lock
movsb
push
sub
loop
lods
push
idiv
adc
cmpsl
pop
or
adc
jge
ja
or
movsb
rcll
xchg
and
clc
mov
sbb
popf
hlt
cmpb
pop
mov
mov
mov
or
mov
push
or
push
pop
stos
mov
sbb
ficomps
or
add
mov
jae
movsl
or
dec
arpl
rcl
adc
pop
push
pop
mov
rclb
repz
lock
ss
mov
pop
cmp
sbbb
mov
xor
jbe
jecxz
out
popf
push
inc
imul
cmpsb
pop
jo
flds
xchg
test
or
or
fldt
clc
xchg
test
lds
repnz
je
mov
popf
dec
pop
movsl
leave
inc
pop
shrl
nop
xchg
adc
sbb
int3
xor
push
cmp
repnz
sub
test
cmpsl
or
and
imul
push
dec
lret
in
mov
cmpsb
cli
and
adc
mov
ret
xchg
add
insb
repz
pop
mov
pop
fadd
data16
or
cmpsb
inc
lods
pushf
xchg
add
push
fmull
into
mov
and
fwait
divb
cmpb
loopne
rolb
jnp
ljmp
jbe
cmpsb
jbe
in
testl
inc
scas
dec
insl
sub
xchg
inc
xchg
mov
inc
lods
jl
sbb
ret
or
mov
insl
push
xor
sub
shrb
addr16
filds
out
adc
push
pop
push
movb
scas
mov
lock
sub
fstps
addr16
mov
mov
add
sbb
sub
icebp
ds
xchg
mov
arpl
out
mov
ret
mov
xchg
sub
cmpsl
jmp
ret
mov
pop
into
decl
pusha
mov
xor
testl
xor
decb
fdivrp
das
xlat
in
in
aam
test
add
mov
fwait
xchg
push
fidivrl
clc
or
xchg
in
dec
lds
pop
int
lcall
mov
aad
or
outsb
popf
orl
sahf
xchg
mov
std
loop
push
add
aam
xlat
mov
cld
sbb
clc
cmp
ds
jl
hlt
imul
scas
cmp
testl
mov
in
push
jecxz
xchg
imul
add
jo
sbbb
int
dec
fadds
lcall
mov
subb
je
int3
push
xchg
aam
std
gs
test
movsl
push
push
mov
rcl
mov
out
cli
ror
out
test
inc
leave
jmp
push
lret
mov
and
jecxz
pop
lret
mov
fcompl
xor
incb
dec
icebp
imul
xor
fs
gs
fwait
mov
outsb
push
mov
add
add
pop
shl
popa
lret
aam
mov
movsl
or
clc
pop
dec
aad
addl
adc
pop
mov
addr16
cmc
xchg
push
lret
loope
jp
cmp
push
inc
pop
das
rcll
xchg
out
dec
in
mov
cmp
cmp
mov
lods
roll
dec
js
cmc
mov
daa
ret
ja
add
ljmp
jbe
jae
jp
push
lret
mov
ja
add
mov
adc
cltd
mov
pop
sbb
shll
sub
mov
outsl
pop
cmc
add
mov
dec
pop
cltd
call
add
jbe
jle
lods
aam
ljmp
jno
xchg
mov
fs
fldenv
cmp
add
mov
xchg
and
cmpsb
out
shlb
fwait
or
rolb
scas
stos
aaa
out
das
and
push
mov
les
arpl
push
in
stos
into
pusha
pop
loop
imul
insb
faddl
push
push
rcl
dec
xor
pusha
jb
popa
push
test
pop
xchg
lret
dec
push
and
in
inc
loopne
jno
js
ret
bound
push
cltd
daa
shrb
mov
iret
and
cmpsb
adc
into
aad
mov
lock
inc
dec
sbb
dec
int
daa
xor
or
sbb
insl
test
idivb
xchg
loopne
lods
stc
scas
jmp
fs
or
pop
ret
xchg
xor
int
imul
loope
or
xchg
inc
test
xchg
sub
add
inc
mov
lret
bound
jl
pop
and
mov
popa
aas
je
pushf
dec
xchg
jle
and
cli
ret
fcomps
and
sbb
mov
and
call
scas
into
shlb
outsb
mov
pop
popf
jnp
lds
aaa
rorl
dec
fsubrl
xchg
xchg
into
push
fisttpl
fxch
cmp
lods
sub
cmpsl
mov
rclb
mov
sub
or
xchg
jae
xorb
inc
loopne
adcl
into
push
imul
push
and
and
lods
scas
pop
jb
hlt
mov
inc
ret
sahf
stos
addr16
addr16
lahf
cmpsl
into
in
iret
fdivl
add
jnp
pop
jo
fdivrs
movb
into
xor
icebp
cld
cmp
xchg
xchg
push
mov
inc
or
pusha
cmp
ja
out
push
push
jns
ds
test
stc
xor
or
pop
je
sub
aad
pop
push
xor
mov
jo
je
shll
mov
mov
jbe
shlb
sarb
pop
mov
cmp
aam
inc
scas
outsl
ljmp
push
fcmovbe
pusha
in
lret
xchg
hlt
cld
fwait
xchg
push
ds
ret
mov
aam
or
cmc
test
add
push
mov
movsb
imul
clc
scas
push
sub
or
insb
or
inc
mov
xchg
nop
mov
cmpb
adc
dec
test
mov
fsubs
xchg
jno
and
jns
mov
sub
adc
push
dec
jne
imul
add
jae
dec
loopne
adc
inc
sbb
mov
jle
inc
adc
sbb
push
xchg
cld
fidivrl
jmp
sbb
or
ljmp
inc
sti
into
cmpsl
mov
sbb
insl
sub
ret
imul
mov
sbb
inc
xor
cmpsl
jmp
mov
nop
daa
pop
xor
mov
xchg
int
lds
fcmovnu
mov
call
in
cmp
pop
or
and
fcmovnu
das
or
ret
std
movsl
xor
mov
dec
cmpsl
jbe
cwtl
adc
fists
mov
mov
cmc
addb
pop
inc
jns
rcrb
pop
add
dec
emms
addr16
js
aad
sbb
or
pop
sub
gs
test
adc
xchg
in
sbb
decb
js
sti
xchg
fcom
std
jne
inc
or
add
add
rol
clc
adc
jmp
push
adc
pop
test
pop
mov
sahf
add
inc
pop
mov
vmovaps
xor
sbb
add
sub
loope
pop
in
aas
arpl
jnp
into
in
push
cmp
test
iret
add
lods
or
dec
mov
ljmp
push
xchg
push
lcall
pop
sbb
xchg
popa
dec
into
call
mov
nop
push
fucomip
mov
es
push
mov
rclb
scas
jge
cli
jne
pop
mov
xchg
sub
shll
stos
pop
rcrb
std
pop
dec
and
sahf
test
addr16
cmp
or
aad
adc
mov
daa
std
into
cmpsb
rcll
push
xor
cmpsl
sub
mov
lcall
aas
and
push
aaa
mov
or
jbe
xchg
push
or
or
notb
or
aaa
stos
mov
pop
std
xchg
adc
mov
bnd
jb
lcall
cmpsl
xor
ret
fstpl
push
jne
sub
cmp
xchg
movsb
lds
int
into
and
add
inc
xor
mov
cltd
orb
adc
sbb
xchg
imul
cmp
mov
add
pop
mov
jecxz
adc
int
add
sbb
imulb
xchg
push
xchg
dec
sub
lahf
icebp
sbb
jbe
cli
outsl
dec
add
iret
imul
push
mov
pop
rcl
xchg
in
mov
dec
jmp
cs
int3
xchg
or
or
shr
push
and
outsl
mov
sub
push
and
adc
movsl
and
dec
sahf
lret
jbe
data16
sarb
aaa
adc
inc
rcr
nop
cltd
retw
rclb
into
dec
push
pop
mov
push
mov
mov
lcall
int3
icebp
les
es
cmp
mov
lret
or
jl
jno
cmp
sub
sub
pop
data16
popa
pop
or
call
jl
out
push
mov
sbb
jle
in
xor
jo
int
jno
out
adc
int3
dec
scas
lock
test
inc
insb
sbb
cmpsl
mov
adc
adc
fcomps
aam
orl
movsl
sub
sarl
mov
xchg
or
or
cmp
push
sbb
ret
inc
push
iretw
scas
xchg
outsl
das
xchg
arpl
xor
out
inc
rcl
lret
dec
pop
hlt
push
das
sub
js
test
lret
pop
xchg
mov
dec
jp
inc
cmpl
cs
nop
sub
mov
das
xlat
cld
jne
subl
sbb
lret
sub
into
mov
mov
or
test
cltd
pop
inc
scas
mov
jge
push
ljmp
mov
scas
in
int3
jne
enter
adc
shrb
mov
fnstenv
sub
inc
shr
aad
add
xchg
leave
jmp
insl
push
pop
cmp
icebp
cwtl
inc
bound
and
loopne
test
mov
xchg
ss
jae
pop
xchg
jl
dec
adc
out
cmp
or
int
and
xor
or
sub
mov
cwtl
or
ja
dec
pop
push
and
into
mov
xor
mov
xchg
data16
arpl
add
mov
in
mov
pop
adc
sbb
movhps
jp
lret
jg
ret
xor
clc
ret
out
rcr
xchg
out
xor
aaa
jbe
int3
icebp
iret
inc
dec
inc
aas
sahf
cltd
movsb
adc
xor
push
popa
in
sub
add
inc
push
push
repz
xor
into
xor
and
in
rclb
xchg
insl
or
add
ret
into
imul
fs
sub
cli
imul
imul
inc
inc
lret
or
ret
int3
xchg
mov
andl
dec
lahf
aaa
add
or
out
lret
mov
movsb
jbe
cmc
pop
mov
lock
popf
insl
xor
addl
scas
jecxz
xor
movsb
xchg
and
and
pop
mov
xchg
jle
jne
xchg
cmovnp
push
or
xchg
jg
xorb
pop
ret
or
mov
shl
leave
mov
mov
test
cmp
jae
xchg
pop
xor
mov
repnz
mov
movsl
xor
iret
adc
jno
sarl
mov
push
add
sub
mov
push
stos
xor
std
jecxz
cmpsl
and
int3
lcall
dec
push
or
jp
adc
adc
int3
inc
mov
jno
lret
test
ja
stos
push
std
mov
xchg
jmp
pushf
popf
sub
ror
sarl
int
pop
mov
pusha
sbb
push
je
sub
push
push
dec
push
imul
iret
call
ds
cltd
and
jmp
daa
or
mov
mov
insb
sbb
jae
leave
mov
jmp
push
jp
lods
repz
scas
or
loope
stc
int
call
pop
aaa
mov
insb
rcl
mov
sub
je
cmc
or
inc
xchg
ret
add
add
mov
imul
fcmovne
rcl
mov
sub
stos
jns
mov
cli
sub
pop
push
cmp
dec
cmc
cmp
dec
and
mov
pop
out
sbb
adcb
push
jbe
xchg
and
xchg
cmp
or
xchg
repnz
and
mov
icebp
outsl
psllq
jl
sbb
push
cmp
inc
adc
jne
push
sub
dec
mov
shl
and
sub
jnp
cmpl
lock
out
xchg
mov
repnz
stos
aad
xlat
xchg
mov
sub
xorb
jbe
adc
pop
stos
mov
outsb
lret
jbe
lea
or
int
out
dec
lcall
fbld
mov
mov
mov
lret
leave
and
daa
sub
or
sub
xchg
sbb
xor
push
pop
mov
stos
mov
mov
cltd
sahf
stos
dec
pusha
jge
push
test
in
lock
sti
bnd
xchg
in
cmpsb
movsl
dec
test
add
int
movsb
mov
pop
lret
push
test
es
sub
lret
gs
xor
jae
pop
mov
add
jne
addr16
pop
pop
imul
add
xchg
ljmp
xor
add
adc
es
or
sarl
out
pop
addr16
gs
outsb
xlat
push
nop
aam
test
aam
gs
fcmovnbe
fmul
rcrb
cmc
mov
jge
add
sbb
jmp
test
popf
xchg
xor
ljmp
inc
xor
pop
shr
and
out
pop
dec
dec
shl
xchg
test
or
cmpsl
xchg
out
jp
push
inc
or
daa
out
repz
cmc
enter
fwait
add
rcrl
pusha
jecxz
es
mov
xchg
incl
fcomi
popf
out
dec
sbb
movsb
nop
call
jp
mov
ja
pop
add
shrl
sub
insb
push
sub
incl
add
sbb
pop
jp
jle
movsl
dec
jnp
mov
push
xor
stos
or
out
mov
sub
adc
popa
mov
enter
ss
lods
xor
out
or
movsl
dec
xchg
mov
mov
int
js
rcl
mov
outsb
cmc
loope
jns
mov
or
iret
adc
sti
push
shll
inc
xor
push
xor
or
sub
rclb
sbb
repz
fdivrl
pusha
fldl
hlt
into
scas
mov
lods
lcall
aad
dec
jnp
pushf
jb
in
pop
jbe
ss
fs
mov
mov
mov
insl
int3
orb
mov
sbb
adc
test
in
adc
test
mov
xlat
shll
mov
dec
xchg
loopne
into
adc
pop
cmp
sub
lcall
and
cmp
or
adc
sub
mov
inc
pop
sbb
sbb
sti
adc
xor
mull
dec
pop
and
or
jbe
inc
cmp
stos
dec
lods
push
pop
push
mov
dec
pop
mov
sbb
xor
lret
jb
xchg
jg
dec
mov
push
aas
mov
inc
sbb
insb
loop
xchg
mov
test
and
gs
fdiv
jo
dec
xchg
pcmpeqd
sbb
fistpl
mov
fst
mov
ljmp
das
push
je
jmp
data16
jb
shl
int3
flds
lret
lcall
loope
into
and
ficomps
jb
in
js
pushf
push
add
cmp
or
add
addr16
lahf
mov
jecxz
stc
sbb
jmp
daa
sti
mov
xchg
clc
sub
int3
sub
mov
cld
sbb
mov
enter
mov
outsb
inc
xchg
out
jecxz
ljmp
lods
fs
jne
fdiv
push
out
jb
dec
out
sbb
clc
inc
dec
es
cmp
test
aam
out
cli
xchg
xor
std
sbb
or
shrl
or
sbb
xchg
popf
inc
pop
add
cmp
loop
lea
push
cmp
rcrb
je
sbb
xchg
xchg
sub
fisttps
rcr
xorl
add
or
das
outsl
adc
pop
sarb
push
and
js
inc
cmp
imul
lcall
arpl
loopne
scas
push
test
mov
out
push
cmp
dec
xchg
xor
pop
dec
mov
add
into
lahf
mov
aaa
lds
dec
loope
fcomp
and
xchg
inc
adc
or
or
es
fwait
ljmp
pushf
loop
mov
pop
inc
cli
xchg
dec
rcl
into
xchg
fdivl
jae
pop
mov
enter
jmp
cmp
iret
push
inc
je
jmp
xchg
gs
jl
bound
sbb
xor
lea
rolb
sbb
lock
sub
lret
cmp
aaa
scas
loopne
mov
out
in
adc
jbe
add
adc
xor
push
jo
jmp
fs
mov
jb
int3
lret
pop
xchg
jp
or
or
call
push
aas
xorl
mov
ljmp
lahf
sub
adc
mov
and
pop
out
lods
sbb
dec
sbb
out
xchg
shr
cmpsb
cld
int3
sbb
dec
lods
stc
inc
fiadds
int3
hlt
cs
test
out
mov
addr16
call
pop
push
xchg
mov
dec
and
aam
insb
dec
repnz
iret
pop
les
fdivr
stos
in
popl
adc
addr16
lea
sub
push
pop
mov
cmp
ss
in
xchg
ja
pop
mov
inc
dec
test
inc
ret
test
in
loop
xchg
inc
jmp
shll
pushf
xchg
jne
pop
movsl
fistps
into
hlt
cmp
dec
sub
cmp
popa
sbb
push
jle
rcr
push
cmpsl
je
dec
xor
das
lods
mov
jle
out
pop
mov
mov
mov
dec
outsl
dec
sub
lods
and
xchg
es
in
cli
cwtl
js
or
imul
les
out
stos
sbb
jno
psubb
repnz
aam
dec
and
testb
jmp
pushl
mov
dec
into
cmp
prefetchnta
rcrb
sbb
xor
sub
and
jg
and
pop
daa
fldenv
ss
stos
dec
xchg
ljmp
cmp
mov
out
pop
and
jmp
mov
mov
mov
xchg
inc
sub
jb
mov
sub
pop
fstl
sbb
test
fists
jl
dec
xchg
sub
add
xchg
mov
shlb
dec
popf
lcall
ljmp
jno
or
inc
jbe
mov
push
gs
js
nop
lods
outsl
iret
or
clc
rcl
imul
mov
test
mov
pop
xchg
loope
aas
dec
lods
fidivrs
adc
lea
sbb
fdivs
loopne
test
pushf
dec
repz
outsb
not
cs
es
rcl
xchg
mov
cwtl
scas
push
filds
dec
cmc
add
sbb
nop
ljmp
movsb
popf
mov
xorl
pop
int3
sub
lret
mov
push
mov
lret
push
xor
into
cmp
xor
gs
xchg
jmp
mov
lods
fcomps
dec
sub
ret
sub
mov
mov
pop
add
lret
sub
add
pop
mov
imul
out
outsl
loop
cmp
daa
lcall
mov
jecxz
sub
test
loop
movsb
push
lock
push
cmpsl
fimuls
fwait
xlat
xor
and
divb
in
pushf
sub
imul
xor
mov
lods
lret
in
pop
jne
inc
rcl
xchg
or
xor
aam
push
mov
jae
lods
hlt
lds
int3
push
arpl
jne
jg
dec
inc
sub
sub
sarl
outsl
mov
lds
aam
ficompl
loop
fcmovnu
test
arpl
mov
scas
push
sahf
dec
pop
out
nop
mov
scas
xchg
cmp
movsl
js
push
fiaddl
ret
test
jo
xchg
cmpsb
icebp
insb
sbb
pop
pop
mov
adc
or
pusha
sub
mov
test
daa
dec
push
aam
or
ret
push
pushf
cmp
ret
loop
mov
scas
or
mov
aad
xchg
subl
cmp
call
movsl
out
jle
inc
out
mov
adc
jne
or
lods
lret
push
add
adcb
rcl
sti
testb
repz
and
mov
sar
mov
dec
fnstcw
jo
rcll
out
jns
les
inc
pop
rclb
orl
xor
cmp
or
iret
int3
dec
mov
push
jb
mov
mov
add
test
xchg
mov
pop
sarb
jno
and
pop
andl
or
dec
add
out
daa
sbb
ret
or
test
ss
sarb
mov
push
test
faddl
jno
ja
mov
loop
inc
cmpsl
inc
xor
push
xlat
dec
inc
inc
test
ds
add
imul
out
push
and
movsb
shlb
inc
jl
mov
shrl
pop
mov
test
push
dec
jo
sbb
repnz
call
push
sub
jecxz
int
das
jno
andl
sar
push
clc
push
cmp
lret
je
addr16
jae
dec
outsb
mov
jnp
push
idiv
lock
sbb
sbb
push
mov
gs
sbb
loop
xchg
int
repnz
xor
inc
jo
sub
dec
call
add
jp
loop
js
in
insl
pop
sbb
rol
test
out
mov
or
or
ret
inc
nop
dec
out
cmpsl
out
dec
cmc
imul
and
push
movsl
push
lods
push
push
rolb
cmp
jnp
ja
ret
mov
pop
loope
loopne
xchg
and
dec
leave
mov
rolb
sbbb
mov
cmp
push
push
mov
pop
aas
push
gs
dec
in
std
cli
les
imul
pop
xlat
mov
addb
mov
add
xchg
fstl
or
push
sti
insl
out
mov
and
adc
xchg
lds
call
jbe
xlat
cmp
dec
cwtl
jb
push
mov
das
sub
pop
insl
mull
into
scas
es
jg
pop
jns
mov
adc
sahf
cmc
sub
fwait
mov
mov
fbld
add
fmulp
push
jge
mov
jg
ret
xor
scas
mov
stos
les
push
push
popa
popf
push
and
leave
mov
cltd
lock
pop
in
mov
pushf
cmp
push
jl
lret
sar
fcoms
xchg
out
inc
ds
xchg
or
sub
adc
sti
mov
aad
js
ficomps
mov
sbb
xchg
imul
jnp
ss
push
push
xchg
int
int3
lret
dec
mov
lds
ljmp
orl
lock
jne
mov
cmpsl
test
cmp
lret
lods
xor
dec
push
ret
sub
sub
pop
insl
enter
stos
mov
int3
push
adc
xor
shrb
mov
pop
and
and
push
icebp
dec
mov
push
scas
fcomp
dec
dec
inc
push
cmp
mov
rcrb
xchg
add
into
mov
mov
ss
add
pop
and
loope
movsl
arpl
and
cli
or
ret
xor
sub
lds
mov
adc
cmpsl
les
ja
sbb
fnstsw
xor
inc
into
cmp
mov
push
out
repnz
jmp
inc
adc
dec
sbb
dec
push
add
ljmp
cs
out
inc
mov
mov
or
sbb
xor
push
mov
cmpsl
gs
ret
std
inc
fmulp
add
test
dec
jecxz
js
fbld
pushf
inc
mov
rcll
hlt
pop
mov
je
or
iret
dec
xor
mov
mov
pop
xchg
jecxz
roll
and
add
inc
es
jbe
dec
orb
lret
add
push
ret
pop
mov
js
dec
aaa
add
out
test
jnp
adc
inc
add
xor
dec
ret
sbb
jns
fwait
cld
popa
addr16
mov
jae
sub
inc
mov
inc
jno
dec
xchg
xchg
shlb
es
rclb
in
cld
ss
push
movsb
mov
cltd
mov
ficomps
dec
adc
cli
sub
mov
shlb
jecxz
cmp
shrl
sbb
gs
add
lahf
out
and
xchg
mov
js
mov
jp
out
and
cmp
mov
sbb
xor
shrb
ret
mov
arpl
xchg
jp
pop
adc
divl
mov
addr16
lcall
mov
or
add
outsl
mov
pusha
mov
into
adc
or
ret
mov
out
mov
jge
clc
loopne
sbb
and
xlat
popa
rcl
faddl
popw
repz
mov
xor
jge
cmc
jb
sbb
lret
or
pushf
insb
adc
fstp
push
fcmove
add
out
std
push
leave
dec
outsb
jb
lret
pxor
flds
jns
fs
pop
xor
and
jo
mov
dec
jbe
jecxz
repnz
mov
outsl
loop
repz
pop
adc
aas
repz
lret
inc
movsl
inc
into
dec
or
jbe
lret
jl
dec
in
push
inc
sarl
lahf
push
in
fs
shll
int3
mov
xchg
pop
jle
mov
mov
xor
stos
ret
repz
push
arpl
xchg
xor
nop
daa
xchg
fwait
sarb
popf
mov
ret
push
dec
orl
fwait
xor
lret
push
dec
popf
xor
inc
std
fcmovnbe
ljmp
and
data16
stc
cmp
sub
adc
dec
out
mov
xor
dec
push
loopne
stc
repz
into
fs
enter
adc
scas
imul
adc
mov
cmp
dec
out
pop
mov
stos
pop
xor
add
lds
leave
out
iret
mov
jne
xor
sub
outsl
jae
mov
lock
xor
adc
dec
scas
xor
jecxz
jo
popf
mov
push
enter
mov
lret
mov
or
dec
sbb
cmpl
lret
dec
sub
or
adc
out
dec
jo
out
xlat
imul
in
mov
jno
xor
sub
lret
mov
pop
into
dec
push
xor
ja
adc
test
test
in
pusha
inc
mov
out
cmp
orl
and
jecxz
or
mov
into
inc
mul
sub
gs
pushl
push
dec
mov
cmpsl
or
out
cmp
in
jecxz
mov
ret
aam
jg
pop
sbb
inc
mov
xchg
and
sbb
jge
inc
int3
and
or
xchg
push
clc
add
arpl
das
sbb
ja
pop
push
jl
test
cs
call
mov
jo
les
dec
fsts
sub
nop
push
sbb
stc
mov
xchg
bound
inc
push
cld
adc
lods
cmp
push
iret
or
jl
ds
cld
xor
out
out
jnp
stos
inc
in
xchg
mov
push
sub
es
xorl
mov
fdivs
rcl
cmp
js
stos
pop
mov
push
popf
cmpsb
das
or
adc
push
jl
addr16
xor
stos
mov
in
dec
jne
shrl
xchg
push
cmp
mov
mov
lahf
mov
ljmp
rcll
sub
loop
aam
mov
or
dec
mov
mov
imul
dec
xchg
push
imulb
mov
fisubrl
adc
int
jno
adc
ss
xchg
lock
out
popa
pop
push
dec
aaa
push
jns
xor
testl
jmp
scas
rol
cmp
mov
mov
push
ds
inc
jecxz
and
and
mov
ljmp
mov
xchg
out
data16
lea
push
dec
movb
das
add
into
call
lods
inc
xor
inc
cmp
xor
push
sbb
iret
mov
cmp
into
mov
sub
pop
scas
fwait
inc
pop
fisubl
cld
xor
jns
out
in
add
das
aad
cmpsb
repz
mov
cmc
cltd
stc
mov
fmull
dec
mov
js
jne
ficoms
pop
icebp
or
ja
dec
nop
cmpsl
mov
into
scas
jle
loop
shll
mov
imul
int3
fcomps
pop
test
xchg
pop
mov
sbb
mov
lret
icebp
push
adc
sub
mov
ja
ds
mov
insb
adc
and
stos
mov
xchg
cmp
xchg
popf
mov
pop
shrb
leave
fadds
roll
test
push
aas
adc
fadd
jp
dec
adc
dec
sub
push
sub
xchg
and
in
sbb
repz
sahf
push
adc
or
out
sub
test
test
jae
std
inc
inc
jns
mov
nop
cmpsl
xchg
fwait
addr16
sti
into
fisubrs
dec
jo
stos
pop
xchg
lds
jge
add
repz
fcom
out
jnp
sbb
xchg
daa
or
mov
iret
push
xor
push
dec
sub
push
test
ja
mov
pop
mov
inc
sarl
into
popa
popf
imul
data16
mov
leave
cmp
adc
inc
scas
lahf
lret
int3
jle
xor
jae
push
outsl
cmp
cltd
mov
jge
lret
jmp
lods
cwtl
adcb
shll
mov
cwtl
xor
sbb
inc
jne
rcrb
inc
mov
xchg
fcomps
das
cld
adcl
xor
dec
sbb
xor
lods
out
movsb
in
out
es
out
fst
push
mov
jbe
mov
cs
out
mov
push
push
js
cmp
fidivl
sbb
mov
lret
xchg
mov
jno
pop
mov
addr16
pop
cs
mov
mov
add
ss
jecxz
inc
cmp
into
stc
scas
pop
loope
iret
jmp
fiadds
add
push
cs
or
fnsave
shl
jmp
jnp
imul
sbb
pusha
bound
jg
daa
aam
lcall
mov
sub
cmc
xlat
jmp
pushf
jns
mov
dec
adc
sbb
dec
or
add
mov
loopne
hlt
jne,pn
test
xor
lock
test
jl
inc
bnd
mov
or
cli
mov
int3
adc
and
mov
mov
jo
rcl
adc
subl
into
xor
pop
clc
adc
mov
dec
cli
xchg
imul
adc
test
push
or
push
lret
add
and
sbb
jmp
repnz
dec
dec
lds
mov
js
or
movsl
jle
adcb
ret
int3
and
shlb
icebp
ror
outsl
push
test
jg
pop
enter
data16
lds
jbe
inc
iret
dec
pop
mov
mov
bound
test
ret
fbstp
mov
in
jb
roll
pop
in
push
push
rorb
gs
xchg
xchg
cmpsb
mov
mov
push
jne
gs
jmp
xchg
std
mov
or
push
jne
and
mov
in
dec
jmp
mov
sbb
inc
mov
es
and
into
adc
add
sub
pop
fstps
mov
jl
push
arpl
ret
shl
lock
cltd
jb
sbb
mov
outsb
mov
cmp
xchg
icebp
pop
lret
fwait
int3
push
dec
dec
andl
or
repz
aad
jno
mov
cmp
or
or
lret
push
jne
jae
xchg
into
aad
je
jmp
leave
iret
cwtl
fcomip
ret
iret
sbb
inc
jecxz
sbb
or
jno,pt
into
sub
hlt
dec
aaa
dec
cmp
lds
pop
fildl
xlat
mov
hlt
mov
and
add
jl
sbbb
lret
in
imul
lcall
pop
repz
jo
icebp
cmp
mov
ds
push
jae
cmp
aad
mov
pop
mov
jmp
or
fcoml
subl
cmpsb
out
lcall
icebp
pop
mov
jl
sbb
jo
fs
or
ss
int3
cmpsl
push
insl
fcmovnbe
aad
repz
arpl
test
iret
jmp
push
scas
mov
cli
xchg
xor
or
pop
push
popa
movsl
rol
cmp
aas
js
popl
std
sbb
test
iret
stc
mov
nop
mov
lahf
pop
push
jns
push
xchg
loopne
mov
aad
pop
xor
sub
lret
xchg
cmp
mov
and
out
imul
je
repz
clc
and
jne
push
mov
icebp
leave
jg
jno
push
ja
lods
mov
jge
fwait
xchg
incb
push
lods
push
rorb
adc
mov
cmp
outsl
lahf
aam
gs
inc
pushw
imul
call
push
sbb
lret
sbb
xor
out
mov
dec
in
mov
lahf
das
sbb
in
jno
imul
cmc
or
sbbl
and
mov
sbb
adc
pop
push
push
popf
leave
jo
lods
in
xchg
mov
xchg
mov
or
or
shlb
outsb
adc
add
add
mov
insb
cli
adc
test
jnp
jp
std
pop
cld
xchg
mov
mov
lea
cs
push
dec
gs
push
ds
enter
lcall
push
fmulp
push
mov
idivl
fldt
jg
cmpsb
pusha
xchg
icebp
lret
inc
iret
cltd
jbe
loope
dec
fsubp
mov
idivb
rcrb
aam
and
int3
pop
or
lds
rolb
aaa
dec
push
stos
test
adc
xchg
or
xchg
cmp
out
mov
lock
dec
lods
fldt
xor
mov
mov
sub
lds
int
orl
fadd
add
or
adc
iret
xor
clc
cmp
div
sub
ret
out
arpl
int
insb
dec
mov
inc
sti
mov
cmp
aad
cmp
mov
mov
loopne
mov
mov
push
in
xchg
das
mov
dec
inc
rol
adc
mov
jmp
repnz
inc
js
lret
mov
mov
xor
rcrl
xor
mov
sbb
pop
cmp
pop
fnsetpm(287
dec
xor
sbbl
inc
adc
mov
sbb
push
shlb
push
clc
fld
xor
jne
cwtl
xor
push
sub
sbb
cs
stc
xchg
add
mov
jmp
adc
mov
addr16
aad
mov
cmp
enter
mov
mov
mov
hlt
fcomp
dec
and
mov
out
cmp
aam
fs
pop
push
lcall
mov
xchg
push
add
shll
lea
push
leave
aas
shlb
jmp
addr16
faddl
lcall
lret
imul
mov
sarb
repz
scas
xor
push
jnp
cmpsl
xchg
push
imul
add
push
aaa
icebp
and
mov
jb
inc
outsl
jg
pop
jns
jle
sbb
cmpsb
dec
aaa
imul
ror
js
fnstcw
push
adc
fbld
mov
lock
ja
jae
lret
les
adc
test
into
mov
push
lock
adc
aad
mov
rcrl
icebp
jl
push
xor
rclb
cmpsb
adc
rolb
je
sub
cmp
pop
jg
ret
inc
repz
in
mov
data16
lret
rcr
cmp
pop
mov
push
xor
adc
ss
outsl
adc
add
fdivrp
stos
roll
xchg
cltd
cmpsb
mov
cli
jmp
mov
test
fdiv
pushf
cmp
nop
outsb
lahf
dec
cmpsb
xor
pop
add
mov
das
xchg
sti
jnp
jns
jp
int
arpl
and
adc
mov
stos
xchg
rcl
and
push
pop
xor
loopne
pop
int
dec
sbb
into
lahf
mov
cli
push
sbb
sub
adc
in
jns
cmp
sarb
mov
call
out
test
dec
add
inc
mov
ljmp
jle
imul
mov
jns
xchg
out
push
push
mov
scas
ds
jbe
mov
mov
in
mov
and
xor
cltd
pop
outsl
ret
adc
mov
std
into
mov
arpl
ss
jb
imul
pop
push
rolb
pop
xchg
movsb
cmp
add
les
out
test
cmpsl
lret
mov
cmc
push
decb
cmp
fistps
push
push
push
cli
add
or
cs
inc
lret
pushf
jno
nop
cmp
aad
push
pusha
mov
ret
fimuls
mov
data16
insb
repnz
cmp
jg
cmp
mov
mov
sub
dec
pop
adc
push
daa
xchg
xor
xchg
in
adc
das
sbbb
mov
test
lret
stos
cmp
imull
sub
pop
js
or
sbb
jns
mov
xchg
repz
mov
cmc
push
pusha
dec
and
in
and
dec
rcrl
or
outsb
xchg
popl
punpcklbw
push
xchg
pop
sub
mov
dec
sbb
jb
and
loop
push
inc
into
aam
add
gs
addr16
push
enter
jnp
imul
scas
cltd
leave
mov
mov
cmp
hlt
aaa
arpl
mov
sbb
sbb
push
adcl
test
clc
sahf
xchg
roll
int3
or
xchg
sub
mov
into
dec
arpl
loopne
int3
push
inc
pop
ret
fistl
dec
mov
xor
repz
es
iret
aam
jnp
jbe
pop
stos
lahf
xor
jb
and
lcall
mov
cmp
dec
fsubrs
xchg
push
mov
jmp
mov
clc
or
icebp
lea
test
xchg
addb
jmp
jp
js
stos
fucomip
cmp
ja
imul
lret
test
divb
aam
mov
adc
cld
mov
int3
cli
and
sbb
mov
mov
movsl
ret
and
sub
imul
inc
inc
lods
push
int3
pop
mov
pop
mov
push
loope
push
test
pop
sbb
inc
iret
jecxz
rcl
es
push
movsb
mov
insb
cld
pop
iret
aam
ljmp
jae
cmp
test
in
dec
mov
out
sti
out
incb
adc
lcall
push
stc
shl
jg
data16
xchg
lret
nop
push
ret
inc
pusha
and
int3
not
or
jecxz
cmp
cmp
aaa
sti
es
lods
adc
push
loop
test
sbb
xlat
stos
out
mov
inc
scas
ret
inc
ds
leave
pop
out
adc
xchg
and
xchg
rcl
bound
mov
pop
hlt
sahf
lods
ss
lahf
stos
outsb
mov
aad
frstor
mov
ja
sbb
jge
push
int
xchg
adc
xchg
shlb
stc
shll
arpl
inc
adc
xchg
out
mov
int3
push
ss
push
in
jp
ja
lods
push
xchg
loop
int3
xor
push
mov
sub
mov
xchg
jnp
call
jecxz
mov
jl
popa
pop
xchg
iret
loope
sub
sub
push
jne
sbb
or
movsl
lea
imulb
int3
repnz
dec
lret
pop
rcr
sub
imul
test
test
xchg
pop
cwtl
mov
jb
cmpsl
sbb
into
daa
cmp
repnz
mov
es
push
xchg
popa
xor
jmp
sub
inc
test
xor
popf
push
insl
movsb
inc
lahf
or
cmp
out
sub
sbb
je
js
sbb
lods
mov
gs
add
or
or
outsl
rcl
nop
xchg
add
mov
or
in
mov
out
lea
or
arpl
les
jnp
repz
jmp
mov
or
mov
movb
rorb
cwtl
cmpsb
and
xchg
sub
cld
xor
sahf
hlt
xchg
stos
adc
push
popf
xchg
std
outsl
mov
mov
xor
mov
ret
cmp
sbb
cmp
jae
xchg
repnz
loop
mov
jb
cmp
mov
mov
lret
adc
mov
es
mov
stc
lock
rol
iret
int3
fwait
xor
fcomps
sbb
dec
pop
mov
xchg
cmp
and
fisttps
push
out
push
and
out
inc
pop
aad
jge
and
inc
lcall
mov
cmp
sbb
jo,pt
pop
mov
push
rcrb
xchg
out
test
cmpsl
pop
into
rol
test
call
clc
xchg
mov
dec
mov
ret
mov
and
xchg
or
push
repnz
sub
cmpsl
lret
nop
test
jne
lret
xchg
mov
adc
add
call
xchg
aaa
xor
jp
movsb
sub
cmp
xor
pusha
aas
in
repnz
xchg
push
out
out
test
int
xchg
div
xchg
mov
sbbb
mov
sub
fadd
loope,pn
lock
inc
cmc
jmp
adc
sub
pop
mov
and
push
scas
inc
icebp
dec
inc
fcompl
xchg
xor
xchg
mov
in
or
jne
or
sbb
addr16
push
push
inc
cltd
jp
ficoml
pushf
pop
xchg
cld
pop
mov
fdivrp
rcl
mov
mov
push
sub
pop
lock
push
push
dec
lods
adc
leave
sub
inc
jg
inc
push
int
pushf
rcl
stos
nop
mov
sbb
lock
add
mov
adc
cmp
les
scas
cmp
mov
int3
inc
popa
pushf
pop
out
add
aaa
cmpsb
int3
mov
add
push
push
xor
cltd
add
out
icebp
jge
inc
dec
mov
fimuls
out
mov
in
fwait
js
add
nop
dec
sahf
mov
adc
addl
andl
sbb
fisttpl
inc
cltd
decl
shrl
es
loopne
into
add
fwait
int3
mov
dec
in
daa
xor
xchg
pushf
in
dec
cmp
push
test
mov
push
xchg
ror
lods
dec
lds
sub
roll
lahf
jmp
cmp
mov
mov
jp
daa
xchg
push
hlt
mov
lea
mov
out
insl
ficoms
sti
pop
pop
xchg
pop
and
movsb
xchg
loopne
rclb
inc
push
dec
jecxz
xchg
adcl
or
test
rcl
mov
sbb
pop
std
inc
and
jb
mov
cmp
fcmovne
aam
icebp
mov
daa
push
xchg
fwait
shlb
addr16
mov
testl
scas
stos
or
sbb
outsb
xchg
cmp
popa
test
into
mov
mov
dec
mov
jmp
fsubs
jne
inc
mov
add
pushf
cmp
rcl
xchg
dec
add
movsb
mov
mov
xor
sub
outsb
sbb
leave
jo
pop
xchg
mov
outsl
adc
pushf
xchg
fwait
mov
js
out
nop
push
das
sbb
push
adc
sarb
mov
in
fcmovbe
adc
or
xchg
or
out
mov
rcrb
test
fcmovne
mov
leave
push
sub
adc
or
mov
jbe
in
mov
adc
lret
enter
push
mov
scas
mov
cmp
cmp
mov
daa
gs
incl
inc
leave
fcoms
faddp
mov
into
jns
inc
pop
idiv
add
test
add
xchg
lret
adc
push
add
iret
and
icebp
sarl
sbb
sub
mov
ljmp
loopne
sub
imul
lahf
dec
or
xchg
pop
mov
jb
jno
movl
mov
mov
cmpsl
and
lret
test
or
inc
aaa
jne
rcrl
jne
add
into
outsl
insl
adc
mov
in
int3
or
and
negl
push
sub
mov
pusha
fisttpl
in
and
xchg
cmp
adc
sbb
in
mov
out
shrd
inc
ret
jbe
into
sub
pusha
xlat
or
scas
stc
mov
insl
aad
push
xchg
clc
mov
xor
add
xchg
popf
pop
out
xor
or
pop
push
inc
fcmovnb
jnp
cmp
cwtl
mov
sub
jg
dec
call
cld
outsb
cmp
inc
or
roll
jp
or
push
cmp
adc
mov
jmp
imul
mov
outsl
leave
push
push
xor
cli
mov
js
xchg
loope
lcall
rolb
je
scas
inc
rcr
aas
fs
test
sahf
xchg
push
mov
xchg
movsb
repz
negl
mov
jns
mov
jo
xchg
sub
arpl
push
pop
mov
cmp
mov
lea
mov
rorb
push
scas
out
sbb
sbb
and
and
in
loopne
loop
dec
clc
sbb
inc
mov
inc
lret
stos
or
into
mov
add
cmpsb
lods
mov
pop
insb
cltd
les
mov
lds
sub
loope
shrb
push
adc
hlt
test
cmc
push
into
mov
mov
jmp
inc
cld
push
pop
jbe,pt
sub
rol
lret
ja
xchg
jns
or
popa
lret
cmp
push
adc
je
cmp
or
push
push
inc
test
out
idivl
mov
rorb
pop
push
das
out
push
movsb
pop
mov
xor
fstl
add
in
int3
rcrl
inc
enter
test
xlat
mov
push
ret
mov
mov
inc
and
js
mov
lret
adc
jno
xor
jne
sahf
in
fcomps
xchg
sub
cmpsl
adc
into
lret
mov
mov
jl
vmovq
xchg
and
add
xchg
cmp
lret
pop
push
fs
mov
jecxz
push
jae
pop
ret
enter
or
pushf
jns
inc
inc
mov
pusha
xchg
fidivl
push
mov
inc
mov
mov
int3
adc
in
xchg
scas
jg
je
push
adc
insl
xchg
or
test
movsl
pop
mov
xlat
pop
mov
dec
out
fwait
mov
adc
jle
or
enter
xor
mov
push
xchg
lods
scas
jl
xbegin
addb
popf
push
lahf
mov
outsb
cld
pop
mov
int
mov
aas
mov
xchg
pop
fsubrs
mov
mov
pop
dec
mov
popa
idivb
les
jmp
push
aam
jg
es
in
push
stc
lret
push
jl
and
xchg
adc
mov
xchg
enter
test
leave
add
mov
cmp
jecxz
pop
mov
test
subb
adc
ja
inc
dec
and
push
xchg
das
cmp
lods
repz
mov
inc
adc
cmp
mov
mov
pop
popf
xchg
lods
cmpsb
sbb
ja
mov
icebp
mov
outsl
imul
jo
inc
inc
arpl
lods
inc
or
pushf
xor
je
scas
clc
rcl
divb
lret
stos
mov
sahf
bound
adc
sbb
and
push
mov
mov
sti
insb
pushf
cmc
clc
jbe
dec
pop
aaa
test
sub
aam
ljmp
or
bswap
xor
repnz
xchg
or
pop
xor
xlat
or
mov
dec
sub
push
in
jl
mov
adc
adc
xchg
shlb
jp
shrb
mov
aam
push
popf
insb
sub
jae
addr16
xchg
dec
jo
sbb
jmp
lods
jle
pop
pusha
xchg
inc
aad
mov
inc
shlb
add
inc
lret
imul
negb
stos
cmp
fldl
or
add
fisubrs
pusha
jns
pop
sbb
cs
test
mov
int3
aad
lods
inc
xchg
sub
fnsave
inc
pop
mov
lret
lds
ret
sub
stos
fcom
call
jge
stos
rcrl
insl
or
flds
ficompl
pop
ss
inc
lret
dec
sbb
mov
lods
mov
xlat
addr16
bound
add
out
mov
icebp
cmp
sbb
pop
rclb
and
xchg
mov
int
push
sub
cltd
dec
enter
fwait
mov
dec
test
es
cmp
xchg
mov
movsl
sbbb
jo
aad
mov
mov
out
ja
mov
jp
sar
sbb
mov
push
mov
push
loopne
cltd
jno
sarl
dec
jbe
fs
xchg
dec
mov
mov
pop
scas
sub
jnp
xchg
mov
iret
lret
pushf
cmc
inc
push
icebp
push
jae
push
fmull
test
mov
mov
push
ret
inc
fwait
dec
sbb
dec
fst
hlt
jo
movsl
cld
cmpsb
lea
test
xchg
xor
loopne
loop
int
sub
arpl
xor
insb
in
stos
xchg
repnz
std
jne
push
mov
test
or
pop
dec
cltd
mov
les
out
sub
xor
pushl
jmp
mov
test
es
and
cmp
ja
dec
or
mov
push
rol
push
jne
xchg
js
orl
and
jp
or
lcall
add
daa
pop
outsl
call
mov
dec
jne
cld
sub
out
push
xchg
movsb
mov
imul
xor
mov
je
pop
jbe
dec
dec
ret
pop
fucomi
icebp
movsl
mov
pop
rorb
std
jle
imul
lock
mov
lcall
test
mov
jae
sub
pop
call
and
mov
testb
aam
cwtl
bound
testl
sbb
mov
sub
repnz
pushf
insl
pop
mov
cmp
fiadds
sahf
iret
adcl
test
mov
fucomip
shrb
dec
imul
mov
xor
jmp
dec
pop
fcmovbe
std
mov
pop
cmpsb
in
jl
les
jecxz
push
push
into
sub
add
xor
es
iret
jg
fs
movsl
pop
fistpl
insb
stc
pop
dec
xchg
addl
mov
dec
xchg
adc
movsl
into
dec
shll
bound
clc
pop
mov
js
xor
lret
lods
testb
xor
ficoms
cmpsb
movsl
sub
shlb
roll
loope
lods
dec
and
adc
rcrb
int
sub
adc
add
mov
hlt
into
clc
loopne
mov
adc
iret
push
sub
dec
or
mov
xchg
vcvtdq2pd
and
aam
or
outsl
fnstenv
xchg
in
mov
inc
xlat
xor
xchg
roll
jo
fwait
jb
push
rcl
push
inc
sub
sub
aam
jge
mov
mov
pop
adc
sub
ja
mov
aam
inc
in
pop
sub
jmp
adc
adc
sub
sahf
mov
lea
mov
or
push
test
cmpsb
out
adc
sub
lds
add
call
int
mov
dec
jl
adc
sar
out
daa
cli
aam
push
mov
js
dec
bound
cwtl
lret
in
ret
ds
pop
loopne
icebp
sub
inc
lods
ja
mov
movsl
loope
jmp
dec
in
loopne
jne
daa
jge
or
xor
out
xchg
das
sub
push
sti
fisubrs
pop
adc
inc
pop
stos
repnz
faddl
iret
aad
les
idivl
fldl
out
push
test
dec
aam
das
pop
cs
cld
mov
inc
scas
dec
aam
ficoms
shlb
outsl
mov
dec
cmp
fistps
inc
mov
arpl
loopne
fmuls
lock
pushf
and
add
mov
dec
loopne
sahf
push
fidivrl
jecxz
int
int3
mov
aas
inc
jb
rcrb
insb
lcall
dec
and
ss
mov
push
rcl
jp
or
xlat
int3
fwait
insl
or
jne
loope
jmp
mov
mov
andb
aad
rcl
lret
fisttpll
adc
push
jp
lret
in
xor
jle
mov
pop
jp
cmpsl
ds
stos
pusha
loopne
and
adc
add
xchg
push
sub
ffree
xchg
jp
pop
and
mov
faddp
sbb
pop
xchg
xchg
std
pop
stc
aam
lock
and
hlt
mov
dec
jmp
into
stos
sub
loop
enter
mov
int
rcll
mov
divl
fcom
in
sbb
push
lea
mov
leave
cmp
lret
xchg
loope
ret
add
xchg
out
rcrb
movsb
testl
pusha
es
push
out
pop
mov
or
add
fs
idivb
mov
dec
lock
out
scas
pop
iret
pop
cs
push
cmp
lea
adc
in
push
ret
push
mov
mov
cld
mov
mov
inc
enter
mov
sbb
fisttpll
xchg
push
outsl
cmc
test
stc
movsb
mov
loope
xchg
pop
inc
push
dec
adc
out
push
push
mov
inc
xor
and
inc
in
js
pop
mov
xchg
scas
popf
leave
sbb
nop
or
data16
mov
mov
sub
sub
dec
push
push
dec
xor
cmp
stc
sub
push
repnz
cmpb
mov
xchg
xchg
adc
inc
aad
test
stc
jne
push
mov
or
inc
cmp
icebp
fidivrl
xchg
mov
roll
or
add
push
pop
lret
sbb
pusha
in
aaa
dec
xchg
fcomp
sub
fnstsw
aaa
sbb
xor
stos
jae
inc
push
cmp
cmp
fnstcw
mov
and
divl
mov
bound
mov
lea
and
sub
mov
xlat
mov
fildll
sub
add
dec
pop
adc
lea
mov
pushf
int3
subb
mov
xlat
js
pop
pop
inc
push
repz
sub
test
sbb
xor
xchg
mov
mov
jo
mov
and
push
shrl
add
je
push
add
cmp
ds
fst
lret
cmpsl
sbb
shll
mov
rolb
hlt
out
cmpsl
mov
sub
lods
mov
movsl
xor
enter
sahf
xchg
mov
mov
leave
mov
iret
repnz
mov
sbb
rcl
jnp
mov
in
dec
arpl
jmp
imul
mov
sub
pop
push
cmc
test
dec
or
fcomps
cltd
daa
sbb
stc
aaa
fs
mov
push
insb
imul
add
inc
dec
and
sbb
cmp
je
in
sahf
mov
jmp
dec
cmp
test
pushf
adc
xchg
pusha
inc
and
stos
or
mov
mov
cmp
repz
cli
stos
roll
outsl
and
aad
pop
fs
and
cwtl
mov
dec
adc
cmp
or
push
mov
add
lock
inc
add
push
sub
sbb
xchg
inc
pop
cltd
xchg
xchg
xchg
push
add
movd
xchg
enter
out
cmp
cwtl
out
ret
or
imul
push
add
push
jae
or
mov
dec
jmp
ret
jns
shrb
pop
cmp
and
xor
inc
rcr
std
mov
ja
shlb
rorl
pop
inc
adc
in
and
xchg
push
mov
dec
movlps
jo
loopne
shr
es
push
sbb
decb
outsb
fldt
out
rcrb
dec
shll
add
fnstcw
jbe
or
inc
pop
sub
mov
cmp
sub
mov
dec
cld
jle
call
movsl
in
jecxz
cmp
xchg
push
lock
and
jmp
repnz
add
sbb
test
lds
mov
fistpll
cmp
fnstsw
cmp
sbb
dec
push
push
leave
mov
lea
jnp
std
xchg
test
xchg
loopne
stc
cld
mov
scas
adcb
dec
rcrl
jle
adc
dec
xor
not
and
xchg
cmp
rclb
sbb
push
aas
and
popf
int3
push
mov
jbe
and
or
movsb
sub
xchg
ret
dec
xlat
xchg
cld
rcl
or
add
mov
call
rcl
xchg
xor
in
inc
cmc
mov
imul
push
xor
repnz
ds
mov
jae
push
lret
cmp
mov
push
pop
es
jb
mov
mov
inc
adc
inc
sbb
lret
int
cltd
xor
pop
in
pop
dec
pop
insb
xor
lret
icebp
add
stc
subb
fiadds
in
adc
iret
lea
mov
jmp
mov
es
sahf
mov
and
pop
mov
shrl
mov
dec
lods
out
push
outsb
aas
jg
test
sub
adc
adc
stc
movsl
inc
adc
xlat
je
and
loope
scas
shlb
dec
jl
shlb
push
mov
pop
divl
in
pop
jnp
leave
pop
sub
dec
push
popf
mov
add
dec
ja
sbb
dec
or
pop
pop
je
int
jb
push
xor
push
filds
push
lcall
imul
or
dec
mov
in
cmc
jge
pushf
pop
jle
fidivs
fimull
and
addr16
aam
inc
clc
ss
fs
jae
fldenv
outsl
into
or
ljmp
iret
push
mov
into
push
int
jnp
fst
cmc
cmp
pop
sub
adc
in
movb
icebp
shrb
adc
pop
iret
shll
fistpl
mov
sub
push
cld
adc
mov
and
js
scas
lahf
xchg
and
int3
ds
aad
sti
pop
andl
pushf
nop
xchg
loope
dec
or
ja
cltd
add
xchg
jne
or
test
push
test
lods
lret
aaa
push
cmpl
hlt
mov
sub
push
popa
pop
lret
xchg
push
add
mov
xlat
lcall
push
hlt
es
jmp
mov
fwait
xor
in
out
ds
jb
mov
clc
les
pshufw
xchg
dec
jno
xor
jp
fst
js
cltd
mov
nop
leave
pop
adc
xchg
xchg
test
jg
mov
inc
lods
lret
stos
outsl
inc
sbb
arpl
mov
test
jmp
mov
test
rol
xor
pop
clc
lret
push
dec
data16
decb
cmpsl
xchg
push
sti
sbb
xor
movsl
fcoml
sub
push
scas
xchg
repz
jbe
dec
stc
addr16
mov
std
sbb
mov
xchg
sub
dec
es
jbe
mov
push
cmp
xchg
dec
out
popa
sahf
xor
xchg
xor
repz
orb
mov
mov
pop
in
add
cltd
xchg
cmp
outsl
inc
sti
adc
push
orl
mov
jb
or
sahf
add
jne
dec
out
fwait
dec
mov
cmp
les
push
pop
jnp
dec
and
mov
out
cs
ds
xor
pop
ljmp
popa
xor
movsl
mov
es
mov
push
leave
add
xor
dec
mov
mov
adc
icebp
fucomi
or
popa
jb
mov
xchg
mov
popa
sbb
iret
aad
xchg
and
into
scas
jl
test
push
adc
cwtl
dec
cmp
and
mov
insb
arpl
lock
jmp
out
jae
pop
mov
dec
and
jb
sbb
stc
jp
ror
fsts
aad
mov
jl
dec
ret
pushf
repz
xor
dec
test
sub
cwtl
test
xor
int
scas
jge
xor
test
push
dec
cmp
ret
repz
jg
sub
cmc
scas
mov
push
push
cs
and
cmp
ror
repz
mov
pop
add
xchg
xchg
jecxz
int3
hlt
push
pop
stos
mov
cmp
divb
and
adc
mov
mov
mov
mov
xchg
mov
cld
cltd
jbe
lret
out
jg
fcoms
jb
ds
ss
out
mov
inc
jle
sahf
mov
lds
cmp
stc
lods
jns
rorb
cmc
xchg
jl
jmp
mov
repz
out
push
fnstenv
scas
inc
stos
jmp
cmpsl
xlat
out
ds
push
jecxz
or
pop
std
pop
pop
subb
mov
in
leave
inc
aaa
pop
push
pusha
adc
lods
xor
mov
push
insb
mov
cwtl
or
aam
jns
pop
stos
test
xchg
jbe
mov
jb
pusha
inc
mov
inc
repz
push
cmp
mov
iret
arpl
clc
cltd
push
jle
or
not
lcall
jg
loope
cmp
mov
aaa
mov
and
inc
xor
mov
mov
adc
add
dec
xchg
xor
jmp
and
or
jae
push
loope
cltd
popa
in
xchg
inc
mov
hlt
jo
mov
add
sub
insb
daa
xchg
fsub
jb
mov
cmpsl
clc
mov
cwtl
add
jg
faddl
int3
nop
cli
insb
imul
lds
pop
pop
mov
xor
rorl
leave
clc
jns
adcl
addr16
adc
out
test
das
add
aad
sti
vcmpeq_usps
cs
adc
in
jns
rorl
das
out
arpl
xchg
pushf
jmp
sahf
xchg
int3
sbb
and
movsl
cmp
imulb
arpl
push
adc
sbbl
pop
push
and
pusha
add
mov
or
js
and
leave
jl
cmp
xchg
roll
mov
lcall
cwtl
push
lea
sbb
jne
negl
lea
test
pop
icebp
cmpb
adc
sbb
xchg
or
xchg
cmpsb
stc
rclb
mov
pop
or
sub
adc
movsl
ficompl
rorb
mov
adc
xchg
sub
cld
lds
sti
add
ret
jmp
inc
test
out
sub
fnstenv
inc
xchg
mov
stos
mov
push
sarl
movsl
into
cld
es
adc
imul
mov
scas
test
pop
add
inc
xchg
push
or
sbb
insl
cmc
clc
fcoms
mov
xor
inc
test
xchg
out
lds
lods
mov
xchg
push
mov
pop
lock
jge
xchg
popf
push
rcl
dec
pushf
cmpsb
fcompl
popa
push
xchg
movsb
pop
mov
xchg
sahf
loopne
mov
hlt
jne
lret
into
jp
lret
jb
pop
stos
jbe
jp
inc
in
insb
leave
jbe
je
cmp
cli
scas
dec
push
push
push
fisubs
pop
loop
mov
mov
cmpsb
push
lcall
dec
lahf
rclb
ds
adc
jmp
or
dec
arpl
sub
out
inc
fs
and
mov
loopne
popa
push
cmp
pusha
dec
into
pushf
lock
mov
aam
cmpl
dec
sub
mov
gs
mov
add
and
xor
sar
daa
cs
pop
mov
loop
dec
inc
fnsave
lret
inc
inc
loopne
test
mov
inc
and
sbb
popa
jmp
ds
or
jno
push
adc
sbb
clc
stos
iret
imul
jne
movsl
jo
sub
daa
outsb
mov
mov
aaa
je
cmp
add
lret
arpl
pop
mov
stos
jns
out
push
adc
loop
and
pop
pop
rolb
ficompl
xchg
push
int
cmc
pop
xor
in
movsl
test
jl
dec
pusha
mov
rcl
sbb
adc
ret
xor
rol
cmp
and
xchg
in
loope
outsb
insb
add
lret
fs
pushfw
pop
or
loopne
pop
test
incl
sbb
add
mov
inc
add
jg
mov
mov
ret
arpl
mov
movsl
lock
mov
shlb
std
out
xor
add
call
fidivs
repnz
lret
aas
dec
mov
inc
and
fdivrl
cli
lods
add
daa
sub
incl
hlt
jnp
adc
aaa
xchg
push
fs
call
aam
dec
cs
jne
mov
mov
pop
add
pop
dec
call
push
hlt
pop
and
inc
arpl
pop
add
mov
or
mov
or
je
mov
lret
cmpsb
stos
xchg
lea
cmp
sbb
test
cwtl
cmp
das
cmp
cmpl
stos
add
sarl
scas
fs
xor
adcb
mov
fnsave
jmp
lea
sbb
lods
out
scas
std
mov
push
jne
decb
stos
orb
fistpl
mov
xchg
fcmovb
xor
or
and
lcall
mov
std
lret
test
pop
add
loope
clc
fdivrl
pop
push
and
fs
ja
mov
stos
mov
push
arpl
jbe
ljmp
xchg
stc
les
and
movsb
in
ret
mov
xchg
insl
fldt
into
imulb
out
mov
scas
stos
push
nop
outsb
pop
adc
sub
xchg
adc
or
push
sub
movb
mov
sarb
inc
or
cmc
push
test
cvttps2pi
in
cli
dec
dec
or
dec
pusha
imul
dec
ror
sbb
dec
mov
movaps
fidivl
mov
lret
push
push
into
pop
rorl
xchg
das
shll
cmp
out
fs
in
lds
sarl
arpl
add
call
or
pop
outsl
fidivs
nop
mov
push
adc
push
or
cmp
aam
mov
mov
push
push
jmp
xor
and
pmuludq
jb
rcrl
arpl
pop
pop
ret
in
mov
or
cld
dec
rcl
fnstenv
sar
cmp
loopne
int
loop
shlb
fwait
push
in
cmp
pusha
mov
out
lret
pop
sub
out
adc
cmp
adc
sub
es
push
sub
add
repz
or
ret
in
sarb
bound
jmp
xor
jo
and
stc
ja
lds
in
sub
push
sub
push
pop
popf
cmpb
das
xlat
mov
repz
cmp
js
add
adcl
inc
int
lock
dec
ds
mov
std
mov
ljmp
and
mov
inc
add
xor
sbb
jne
popf
out
dec
ljmp
movsl
aaa
dec
cmpsl
push
xchg
push
inc
or
cld
ficoms
orl
iret
test
in
inc
inc
pop
push
inc
rolb
shlb
mov
inc
mov
loope
cmp
cld
push
es
xchg
adc
push
and
cmp
fcmovbe
dec
push
inc
mov
daa
sub
jp
and
jle
pop
push
in
loop
lds
sub
and
pop
cmp
or
ljmp
shll
push
xor
rolb
xor
or
call
lret
imul
ret
push
xchg
insl
lds
or
xchg
test
xchg
mov
int
ja
lds
jne
cmpsl
mov
stos
pop
popf
push
cmp
mov
faddl
movsl
pop
add
ret
or
fs
xor
and
leave
rclb
popf
adc
stos
lds
xor
jg
adc
repnz
xchg
dec
push
inc
fldcw
dec
jbe
sbb
test
fmul
push
cmp
fisubrl
lret
cmc
xchg
shl
xor
inc
xor
or
or
popa
sub
pop
dec
pop
lcall
gs
fs
fstpl
mov
lret
rcr
xchg
and
sub
lods
xchg
orb
iretw
fwait
xchg
scas
ja
fmull
dec
mov
insl
int
cli
mov
jns
pop
jg
stos
mov
xchg
addr16
lods
into
imul
xchg
xlat
push
adc
dec
lock
orb
ja
imul
cs
jne
decb
cwtl
mov
lods
xorb
mov
pushw
cmp
test
jno
and
lock
lret
popf
test
lds
ret
not
outsl
push
mov
sub
mov
lea
sahf
sbb
xchg
ds
sti
sarb
xchg
mov
cld
mov
lret
push
imul
jbe
iret
jnp
mov
cli
cwtl
popf
lods
fisttps
shll
mov
testl
push
jmp
cmp
insl
fcmovbe
xchg
aaa
in
or
fdivs
sub
mov
lret
aaa
xchg
adc
addb
sub
mov
ljmp
pop
mov
mov
fcmovnbe
or
enter
sahf
daa
cld
int3
inc
or
xchg
int
aam
push
fisttpll
dec
xchg
push
loop
stc
cmp
xchg
ror
int
xlat
or
ljmp
jo
push
int3
aad
jbe
sub
mov
mov
pshufw
and
int3
test
mov
clc
pop
aaa
leave
and
mov
pusha
lret
push
xchg
sbb
xchg
je
xor
cmp
cmpsl
sbb
je
cmp
xchg
int
bnd
repz
ficompl
adc
cmp
xchg
in
or
jl
push
mov
fs
xor
sub
call
and
insl
shll
mov
test
orb
jo
repnz
push
mov
or
xor
es
pop
repz
dec
loopne
sbb
sbb
roll
mov
push
aad
fidivs
lret
sbb
jno
jp
es
add
xchg
and
or
cmc
mov
or
js
inc
mov
bound
stc
sub
xor
aam
dec
mov
mov
int3
cwtl
dec
cmp
fwait
or
mov
gs
insl
scas
or
and
push
jns
push
xlat
mov
pop
aam
lods
sbb
add
jbe
mov
jp
pop
xchg
or
das
xor
mov
adc
sbb
push
es
ds
mov
pushf
test
ss
adc
sahf
xchg
stc
and
push
in
jge
in
leave
jae
jecxz
gs
mov
dec
xchg
scas
stc
mov
lret
incl
in
mov
add
push
sbb
jl
xlat
inc
aad
addl
pushl
int
cmp
jmp
inc
mov
xchg
xchg
or
cmp
movsb
push
cld
call
pushf
into
jbe
inc
and
aad
and
sub
push
sub
cmpsb
dec
push
jmp
sub
lahf
out
testb
vmovlpd
adc
inc
and
inc
je
dec
push
out
adcb
iret
call
cmp
jo
outsb
insl
mov
mov
cmp
test
dec
int3
imull
inc
testb
cld
dec
mov
push
jp
ret
rol
xchg
int
pop
in
dec
into
dec
addr16
movsb
jle
lret
sub
mov
lods
fldl
jno
mov
sahf
in
in
jp
and
inc
mov
ret
clc
dec
in
push
movsl
adc
push
jne
scas
xor
pop
pop
push
shll
in
mov
rclb
outsl
out
adc
shrl
jne
jae
loopne
fldcw
pop
mov
cwtl
cmpsb
cld
pop
sub
int3
lds
xchg
loope
addr16
xor
push
adc
and
adc
push
mov
cmp
add
pop
arpl
repz
not
push
mov
pop
sbb
pop
out
push
mov
inc
pushf
pop
stos
fldenv
cmp
les
lret
popf
xchg
push
out
add
jb
dec
pop
nop
stc
fs
fadds
xchg
iret
loop
xor
sub
lret
fs
inc
pop
push
movsl
sbb
test
cmp
les
gs
data16
out
push
sbb
fisttpll
or
out
lret
repz
dec
jmp
jae
push
js
adc
sub
cltd
shr
dec
idivl
lea
push
mov
push
cmp
out
aas
jae
stos
daa
aam
int
roll
clc
in
jp
mov
push
cmp
gs
add
movsl
pop
inc
or
andl
xchg
jnp
push
or
sub
shrl
xchg
pop
cmpsb
mov
xchg
inc
mov
mov
dec
mov
in
repnz
jl
adc
pop
jo
lea
insb
sbb
jge
popa
scas
push
xor
ds
stc
sub
push
insl
inc
jo
pop
lret
popa
push
rcll
hlt
ficompl
sbb
in
lcall
mov
je
arpl
inc
mov
dec
test
int3
xor
adc
xor
jecxz
push
pusha
ja
xor
shrl
in
add
aaa
iret
ljmp
lahf
xor
ret
pop
or
es
aad
jno
aam
mov
outsl
jge
rclb
dec
orl
sub
xchg
pusha
das
lods
divl
mov
in
pop
jb
jl
inc
pop
out
std
xchg
out
and
push
push
inc
mov
inc
xchg
push
gs
pop
dec
adc
stos
test
jle
cmpsb
ja
or
incb
out
cli
add
xlat
les
fistps
jecxz
lods
aad
fs
inc
std
inc
adc
mov
into
lcall
xor
in
cmpsl
xorb
mov
rolb
pop
insl
and
sub
inc
cld
xchg
lahf
jmp
xor
mov
push
aaa
and
das
or
lret
push
dec
push
scas
mov
ficoml
cltd
jecxz
sub
int3
mov
and
fstpl
lret
jmp
loop
outsl
test
jg
mov
popf
out
adc
pusha
or
inc
aas
divb
sub
orb
xchg
popa
psllq
mov
push
push
cmpsl
movsb
mov
in
std
mov
roll
test
cmpl
je
lret
mov
xor
inc
out
sahf
sti
add
fmuls
iret
sbb
dec
in
lret
sbb
sahf
addr16
and
dec
add
sti
repnz
js
cmpb
jb
cmc
dec
enter
mov
lods
adc
loope
and
jbe
or
mov
in
lods
or
int
mov
xchg
pop
mov
jbe
push
ja
push
inc
bound
subl
repnz
mov
cltd
in
cwtl
lcall
jne
pop
xor
incl
pusha
adc
sbb
out
fdivs
mov
movsl
and
and
xchg
mov
aad
mov
ljmp
repnz
outsl
jno
pop
flds
mov
ret
loope
into
inc
loop
inc
xor
fwait
pop
sbb
shlb
xchg
cmpsb
push
pop
clc
mov
lret
lahf
out
mov
ja
aas
inc
mov
pop
out
test
aam
cmp
scas
lods
dec
add
mov
inc
fdivrp
aad
mov
mov
mov
dec
sub
or
pusha
sarb
arpl
call
cltd
xorb
out
data16
push
lahf
and
cmp
imul
imul
mov
dec
lods
sbb
adc
or
jg
sbb
cmpsb
popf
inc
lock
cmp
add
mov
bound
mov
daa
test
lods
sahf
rolb
int3
aad
jne
xor
jecxz
das
mov
inc
mov
jo
dec
daa
or
enter
mov
mov
sbb
sarb
fsub
xor
roll
inc
push
xchg
fdivr
push
dec
jne
mov
js
movsb
sbb
jmp
jne
and
mov
jp
jnp
int
and
es
inc
rol
jge
std
pop
xchg
lea
lret
adc
movsl
or
int
out
jge
and
push
test
mov
xchg
setl
in
pop
leave
subb
stc
je
jmp
mov
push
in
hlt
push
sahf
fdivs
rolb
pushl
out
mov
jle
cmp
insl
jne
jns
into
mov
push
sbbl
aaa
cmpsl
out
and
subl
push
into
lods
or
lds
in
repz
pop
jge
lahf
ja
push
ficompl
into
mov
sbb
outsl
pop
adc
xor
pop
inc
cmp
sbb
cltd
lock
inc
int3
fwait
sti
adc
pushf
add
rolb
dec
or
push
sbbl
mov
cltd
cmp
or
das
mov
jp
add
push
rolb
test
sahf
adc
scas
in
pop
dec
mov
push
adc
push
mov
or
mov
ljmp
lods
push
mov
xor
out
ret
mov
pop
push
ljmp
cmc
filds
sbb
push
enter
and
add
repnz
scas
lock
sbb
jge
push
jle
out
fisttpl
sbb
movb
xchg
pop
mov
cmp
mov
loopne
adc
mov
dec
or
shl
cmpsb
aaa
lahf
rcrl
jp
jg
push
mov
fcomps
pusha
sbb
xchg
or
enter
popf
xchg
push
jl
cmp
dec
sbb
xchg
fsubrp
dec
mov
ds
sub
loop
add
or
cs
out
pop
mov
lcall
jle
pop
push
sti
imul
dec
mov
xchg
sub
jbe
pop
inc
shrb
lret
cld
scas
fidivs
lret
in
cs
or
pusha
fbstp
imul
fcmovnu
mov
inc
hlt
inc
clc
sub
bound
mov
lea
jmp
aaa
dec
in
stos
push
mov
js,pn
pop
andb
adc
into
hlt
std
push
movb
dec
push
mov
ffreep
arpl
sub
add
clc
in
divb
ljmp
int3
pushf
and
aaa
js
dec
data16
cmp
jae
or
ret
push
cld
mov
add
ss
outsl
lds
pop
jecxz
sahf
mov
fwait
movsb
xchg
test
das
movl
xchg
jmp
shrb
xor
shrb
jecxz
enter
ss
push
cmp
push
mov
jae
dec
iret
int3
sahf
out
mov
scas
add
mov
imul
sub
loop
inc
int3
add
testb
dec
push
repnz
cmc
push
movsl
daa
ljmp
lahf
fdivs
push
pushf
out
in
dec
xchg
cwtl
fisttpll
in
ds
out
test
push
mov
dec
cwtl
jmp
test
mov
dec
jp
cmp
push
inc
xor
adc
xchg
mov
and
nop
dec
adc
ret
shlb
push
sbb
cmp
gs
call
aaa
fcmovnbe
adc
sbb
mov
mov
stos
repz
and
hlt
mov
mov
inc
ret
int3
outsl
nop
je
sti
dec
or
lods
push
mov
into
in
movsb
mov
push
roll
daa
or
sub
and
inc
pop
pushf
dec
add
out
dec
scas
mov
fwait
xor
xchg
push
add
gs
dec
out
mov
repz
mov
stc
lods
and
insl
test
cmpsl
iret
mov
push
stos
out
ds
jo
xchg
sub
cmp
lret
das
xor
add
insl
dec
sub
mov
movsl
jb
mov
call
rcl
or
pop
rcl
lock
repz
pop
xchg
sbb
mov
add
aas
popa
into
in
add
jbe
dec
popf
and
mov
insl
fwait
pop
cmp
jmp
and
or
lods
movsb
pop
mov
pop
js
inc
mov
or
rolb
mov
jle
pop
push
popf
fldt
xchg
cmpsl
add
jns
orl
hlt
push
addr16
push
cmp
out
xchg
in
test
sub
ret
xlat
adc
cmp
and
sbb
out
inc
fistl
fsubr
mov
mov
ljmp
inc
jno
ret
or
aas
xchg
jmp
xor
outsl
jg
push
and
cmp
rolb
mov
lret
mov
shll
cli
adc
xchg
mov
mov
cwtl
rcll
movsl
add
out
push
push
cmp
decl
sbb
aas
notl
cltd
popf
pop
pusha
or
arpl
test
mov
lahf
dec
addr16
outsl
in
imul
cmc
xor
jnp
loop
jae
adc
jb
add
pop
je
pop
mov
dec
cmp
push
test
or
lods
rclb
sarl
jne
int3
aam
clc
lahf
jle
movsl
mov
pop
push
fmuls
dec
out
mov
inc
push
loopne
cmp
pop
pop
and
pop
adc
mov
push
jae
jbe
mov
jg
inc
and
sbb
ja
orb
mov
lods
mov
or
in
loop
lcall
aam
mov
arpl
add
ljmp
mov
cli
mov
adc
jecxz
jl
inc
and
shrd
mov
inc
sub
loope
xlat
mov
bnd
repz
fisttpl
jle
std
in
sahf
mov
aaa
ljmp
insb
gs
cmc
mov
repz
adcb
ss
and
icebp
and
pop
mov
pop
adc
imulb
fsubs
jns
adc
push
xchg
out
dec
xchg
cli
xchg
jno
jecxz
lret
lcall
xchg
pop
jne
xchg
xchg
fdivrp
mov
mov
mov
cld
in
jge
cmp
xor
cmpsl
sub
imul
outsl
xlat
inc
push
into
push
sub
lods
cmc
xchg
jl
jg
add
addr16
stos
outsl
adc
adc
sub
cmpsl
or
daa
xchg
jae
pop
or
dec
out
sti
adc
add
iret
sub
adc
jbe
jp
xchg
jge
leave
add
inc
mov
rcr
mov
mov
daa
sbb
insb
int
jp
adc
stc
popa
out
mov
cmp
std
imul
cld
leave
in
int
out
jne
inc
fmul
mov
scas
fwait
loope
pop
and
ja
push
lods
push
test
icebp
mov
mov
lret
add
xchg
mov
adc
adc
in
adc
addr16
lret
jae
cmpsl
leave
ja
mov
push
add
fsubrs
adc
add
jae
mov
push
sub
sahf
outsb
scas
bound
into
xor
movlps
ds
fnstenv
inc
popf
insb
add
testb
mov
es
movsb
dec
xchg
mov
ficoml
add
popa
and
lods
std
mov
sub
ljmp
loope
push
dec
mov
roll
cs
icebp
outsl
lret
sbb
pop
es
xorl
inc
xchg
jmp
call
sbb
sub
pop
cmp
or
js
fwait
int
cmp
lret
cli
mov
mov
mov
das
pop
pushf
call
movsl
sub
cmp
and
ret
dec
cmp
inc
add
push
mov
aam
popa
jno
sbb
cwtl
mov
lret
loope
sbb
mov
jno
jo
or
sub
push
add
jle
bound
lock
arpl
mov
rcrl
xor
jno
lret
sbb
lcall
into
and
cwtl
adc
test
dec
jle
and
ret
loope
push
adc
or
push
jmp
in
ret
fwait
push
lcall
ret
cmp
pop
add
lea
xchg
loopne
add
jne
mov
jae
inc
and
jnp
imul
push
or
aas
mov
and
pop
enter
lahf
jb
lea
fwait
cmpsb
push
inc
sbb
test
jge
loope
sub
aaa
add
add
gs
scas
cltd
lret
mov
aam
xchg
imul
dec
mov
xor
mov
push
push
push
push
pusha
xor
jl
mov
call
stos
jno
xchg
in
cli
test
lock
arpl
cltd
mov
mov
mov
clc
sbb
out
mov
xchg
sbb
mov
push
xor
inc
cld
ds
sahf
cmp
xchg
sbb
mov
jo
leave
or
add
cmp
int3
and
dec
xor
repz
mov
dec
sub
notl
mov
fldt
in
lods
pop
jecxz
mov
imul
cwtl
fldcw
aas
adc
adc
lds
clc
incb
add
or
jae
cwtl
add
outsl
icebp
add
mov
into
fs
cmovbe
pop
test
and
rorb
out
inc
mov
insb
jp
lcall
aaa
xchg
jno
jo
shll
push
mov
gs
adc
je
shl
leave
incl
insl
cld
sbb
or
sub
mov
push
mov
add
rcrb
test
pop
jp
loopne
mov
ja
pop
inc
push
fsubrs
into
push
adc
inc
clc
lcall
imul
dec
mov
loope
scas
jecxz
xchg
fs
subb
mov
pop
fadds
dec
xchg
daa
mov
in
cmp
jl
mov
pop
dec
outsb
fcmove
iret
xor
pop
imul
gs
xchg
pop
or
fisubs
mov
pop
movsb
sub
add
adc
fcmovnu
cmp
jle
sbb
shl
inc
cmp
jl
icebp
xor
orl
inc
test
fstps
pop
js
fucomi
in
cmp
sbb
iret
cli
or
lret
or
pusha
cmpsb
test
lods
loope
les
out
adc
in
scas
rcrl
mov
cmp
data16
or
test
push
push
sub
xchg
pop
shrl
mov
mov
sbb
js
inc
cmp
fs
sarb
in
mov
add
mov
lcall
popa
push
cmp
push
pop
sub
fbld
cs
shrb
out
or
mov
lock
ret
sbb
repz
cmpsl
int
pop
sbb
icebp
lret
mov
dec
push
popf
in
dec
xor
sub
push
sahf
inc
divb
inc
mov
int
mov
lret
gs
bnd
sbb
popa
jmp
xchg
mov
mov
dec
xor
sub
into
mov
sbb
mov
and
xchg
insl
sbbl
xlat
shll
dec
pop
jno
add
xor
movb
andl
cmp
push
push
pop
add
sbb
inc
js
bound
fcoml
ds
cld
mov
push
adc
mov
pop
ja
jbe
mov
push
lods
test
test
push
push
xlat
xlat
jo
dec
pop
sbb
dec
nopl
or
clc
lahf
inc
out
mov
sub
dec
cltd
push
add
and
pop
imul
push
jb
mov
xor
outsl
jmp
jecxz
push
mov
add
pop
push
popf
mov
shrb
shr
xchg
jbe
or
adc
insl
adc
movsl
dec
repz
cmc
mov
jg
stos
lahf
and
push
cmpsl
js
in
ret
add
add
data16
lods
mov
into
jle
xor
lret
jg
mov
dec
pop
bound
fmull
fchs
xchg
rolb
inc
jp
lret
test
shlb
fmuls
add
jmp
sbb
int3
popl
and
xchg
mov
inc
push
inc
mov
int
sub
xchg
mov
mov
mov
jmp
fst
sub
mov
stos
lcall
out
and
add
and
out
inc
mov
xlat
cmp
ljmp
shrl
adc
jmp
push
cmc
cmp
pop
xchg
insl
rcrl
xor
mov
and
jge
out
push
mov
scas
int
or
fsubrs
test
sub
lret
xorb
test
into
jl
pop
ret
xchg
jns
fwait
notb
bound
daa
repnz
aam
pop
mov
call
lds
push
or
jae
lea
sub
mov
cmpsl
stos
xor
movsb
scas
arpl
add
dec
imul
mov
pushf
int3
loop
xchg
cmpsb
in
xchg
mov
imul
cmp
sbb
rorb
call
jge
or
inc
push
mov
dec
or
mov
pop
lods
jnp
stos
or
adc
cs
and
cmp
mov
xchg
in
jmp
mov
hlt
mov
mov
jbe
adc
xchg
dec
icebp
adc
xchg
sbbb
xlat
push
leave
inc
iret
in
aaa
jo
inc
fistpl
popa
lret
push
pop
dec
sub
pop
test
lods
lret
mulb
repnz
mov
ja
cmp
mov
fcmovb
lock
mul
je
cs
jne
jmp
jle
out
jnp
vmovntps
jbe
xor
pop
addb
js
rclb
jnp
push
scas
mov
push
rcl
jle
int3
xchg
sbb
iret
push
sti
pusha
ljmp
push
dec
cmp
pop
dec
ds
shlb
out
push
push
jecxz
mov
dec
pusha
mov
adcb
movsl
xchg
test
js
cmp
fsts
adc
mov
mov
rcl
popa
and
mov
fstpl
aam
mov
dec
cmpl
lods
std
cmc
jo
imul
sub
add
loopne
dec
xor
mov
adc
pusha
jbe
aam
sbb
addr16
cltd
cmpl
inc
mov
enter
xor
add
pop
or
aad
int
mov
dec
adc
jmp
mov
aad
test
filds
and
pop
or
add
push
dec
adc
cld
call
dec
jmp
ljmp
pop
jns
insb
orl
sub
lods
pop
test
jae
mov
mov
repz
fnsave
sbb
jg
or
add
xchg
mov
clc
inc
cltd
pop
mov
fwait
and
aaa
roll
jne
jo
into
cmc
outsl
scas
lods
cs
lea
mov
adc
adc
lahf
cmp
mov
lock
ss
arpl
jg
in
push
jnp
fstpt
je
mov
out
shll
popa
test
sbb
adc
cmp
jg
iret
loop
cmp
rcr
mov
jnp
fidivrs
or
ljmp
aad
mov
pop
neg
je
cmc
out
mov
rcrb
or
stc
adc
popf
pop
xchg
cs
enter
int
sbb
outsl
daa
scas
outsb
mov
adc
test
bswap
dec
loopne
jno
mov
scas
mov
pop
aas
pop
popa
xchg
enter
mov
fstpl
sbb
rorb
mov
syscall
loop
adc
mov
mov
rorb
ja
xchg
pusha
sub
sti
roll
mov
push
into
cmp
adc
and
sbb
dec
ljmp
sbb
cmp
and
test
repz
jno
xchg
push
cmp
cmp
out
push
loope
inc
or
pop
jo
rcrl
sti
repz
les
div
out
lods
aad
jbe
mov
int3
pop
das
mov
outsb
cmp
adc
aad
fidivrl
lods
rcrb
mov
mov
mov
fcomps
or
fs
out
ret
test
lret
xchg
or
mov
test
jo
cmp
and
inc
cli
insb
movsl
cmp
into
inc
ds
vmovaps
mov
sbb
sub
out
repz
cwtl
xchg
test
mov
mov
outsl
imul
inc
popa
movsl
jl
cmpl
std
lods
mov
lahf
push
shl
or
mov
cmp
jne
dec
sub
into
in
lret
out
mov
fsubs
fdivr
pop
lret
sbb
icebp
out
or
inc
out
jp
cli
out
les
shrb
test
dec
out
stos
in
aam
movsb
sbb
sarb
xor
ret
push
fcmovbe
jne
out
cmp
add
shr
jb
sub
cmp
fisttpl
in
cli
ja
adc
cs
push
pop
out
rorl
push
lods
dec
shlb
mov
push
sbb
outsl
imul
and
jle
jne
cmp
xchg
cmp
mov
inc
or
test
ret
mov
out
adc
in
add
adc
arpl
adc
xchg
xor
call
dec
lret
push
mov
mov
lcall
fcmovne
adc
jmp
testl
fisttpll
inc
jbe
dec
sub
mov
outsb
ja
jne
pop
mov
fnstcw
fucom
jnp
dec
mov
mov
js
clc
mov
adc
dec
mov
pop
test
and
js
or
jp
dec
lea
add
xor
push
jne
dec
jmp
addl
aas
test
add
push
sub
pop
and
data16
mov
repnz
sar
aas
jae
mov
imul
lret
sbb
jno
sub
mov
insb
adc
dec
xor
mov
add
sahf
dec
and
jo
gs
jb
mov
arpl
mov
lret
in
in
pop
sbbl
xor
inc
fdivr
rcrb
into
or
inc
jnp
push
movsl
adc
mov
ljmp
cwtl
xchg
add
add
cmp
xor
or
test
es
fdivs
jmp
mov
mov
divl
inc
aam
jecxz
lret
idiv
mov
out
push
loopne
sub
pop
or
sbb
sbb
arpl
dec
jns
popf
mov
mov
push
out
mov
jp
push
mov
lahf
push
outsl
pop
fldt
ljmp
push
addr16
push
xorb
inc
xchg
aaa
push
adcl
in
fimull
mov
push
test
outsl
and
adc
out
out
cli
adc
pop
sub
pop
sub
scas
sub
add
stos
mov
fs
in
sub
sub
lock
rcrb
cmpsl
clc
and
mov
mov
addb
dec
push
dec
cmp
jge
sub
lods
pop
call
out
xchg
into
mov
jge
pop
mov
pop
sub
mov
pop
mov
mov
jmp
cltd
sub
into
clc
dec
xor
pusha
dec
lods
ret
lea
mov
push
mov
lcall
and
add
cmp
lahf
leave
dec
sbb
fcmovbe
outsl
ss
and
cmpsb
push
jecxz
stos
sti
inc
or
in
push
test
add
push
xor
lret
pop
pushf
pop
push
xchg
clc
pop
call
push
iret
hlt
fmul
or
pop
mov
push
push
into
out
out
std
adc
in
fisubrl
mov
sbbl
cmpsb
sahf
lret
adc
sub
popa
std
and
sti
dec
cmp
sbbl
ljmp
test
xchg
xchg
xor
mov
jae
push
or
mov
jbe
push
imul
insl
ds
cmpl
or
cmc
data16
xchg
inc
inc
add
xchg
adc
movsb
or
stos
mov
mov
and
xor
jg
mov
sarb
fildl
and
aas
jl
sbb
mov
adc
mov
jle
int3
aam
stos
mov
jmp
leave
or
dec
outsl
sub
dec
and
sub
jbe
xlat
xchg
cmp
fstpl
xor
ret
jae
xchg
mov
insb
cmp
pushf
enter
icebp
scas
cmc
testb
adc
mov
pop
mov
mov
or
dec
bound
xlat
mov
andl
sub
mov
push
push
pop
sub
jecxz
or
mov
xor
jmp
cli
dec
je
idiv
dec
jns
pop
push
jo
jb
imul
imul
leave
aam
dec
pusha
cli
jno
cmc
cltd
cmp
sub
mov
popf
inc
aaa
xchg
adc
inc
pop
std
xchg
lret
mov
mov
add
mov
in
xchg
sbb
cli
push
dec
repz
loope
push
mov
push
scas
lcall
mov
jp
arpl
mov
xlat
sub
mov
inc
leave
mov
push
sahf
inc
jg
pop
ds
adc
cmp
add
aaa
es
xchg
gs
sarl
jmp
ss
mov
int
xchg
in
xor
clc
sarl
aas
daa
adc
pop
and
mov
xorb
inc
cmpsb
int3
insb
pusha
out
mov
jno
dec
into
adcb
gs
loope
test
add
cld
inc
push
out
in
ret
mov
cmp
xor
lahf
adc
in
mov
fisubrl
jle
lret
test
testl
xlat
loop
lds
jbe
addr16
sbb
mov
lret
mov
iret
in
rcrb
add
and
add
xor
div
rorl
or
ja
sbb
jne
inc
dec
ds
cmpsb
stos
cmpsl
mov
sub
jmp
push
insl
mov
iret
add
push
push
in
sub
into
pop
pop
subb
les
xchg
ja
or
xchg
and
adc
pop
or
arpl
mov
and
xchg
or
push
mov
insb
xchg
dec
pop
mov
addb
jecxz
aad
mov
movsb
ljmp
pop
out
or
je
cli
movsl
lret
pop
mov
ret
adc
cld
adc
jg
push
cmp
dec
in
imul
ret
js
sbb
jno
mov
dec
cs
inc
imul
enter
and
mov
mov
out
xchg
mov
xor
icebp
add
rorb
xor
add
ljmp
ret
dec
mov
scas
pusha
fsubr
ljmp
lret
cld
test
add
cmp
stos
addr16
dec
fs
addr16
mov
inc
push
mov
mov
aaa
xchg
addr16
arpl
cmp
mov
repnz
sbb
add
out
mov
mov
popa
in
fld
sub
jp
dec
add
imul
nop
movsb
ljmp
jne
add
rcrb
sub
insl
jp
hlt
xor
loope
mov
addr16
std
adc
cmp
hlt
add
jmp
out
jb
mov
inc
enter
adc
jle
into
popa
das
les
adc
sbb
addr16
cmp
cwtl
adc
hlt
lret
or
push
push
jmp
movsb
jp
rorl
inc
out
ja
leave
mov
cmp
sbb
dec
push
cltd
arpl
sbb
lods
sahf
xchg
pop
inc
xor
leave
in
out
push
lahf
sbb
jmp
jp
sub
fsubs
add
cld
jge
dec
dec
inc
or
dec
jle
push
lret
insl
dec
data16
or
imul
int
leave
pop
dec
pop
inc
xchg
hlt
xor
or
fdivrs
addb
int
loop
cmp
shlb
les
push
fsubs
pop
out
sub
pop
push
mov
test
push
cli
imul
sub
mov
inc
push
xlat
into
sub
in
inc
stos
in
pop
mov
data16
push
rolb
and
sbb
les
push
dec
movsb
jns
sub
test
cli
adc
call
stos
pop
jmp
or
movsl
jno
test
sub
ja
call
add
out
dec
xor
dec
scas
into
imul
xor
cmp
push
enter
dec
test
hlt
inc
and
inc
mov
out
jbe
or
outsl
inc
or
sub
inc
sbb
xchg
shlb
hlt
jb
jecxz
xor
adc
inc
xchg
andb
in
jmp
psrlq
push
push
or
sub
in
fdivrs
jne
iret
repz
mov
dec
out
push
sbb
out
fiadds
lret
pop
sbbl
out
ret
push
fstps
jno
pop
or
adc
pusha
xchg
xchg
add
out
fwait
ror
jmpw
popa
sbb
lret
mov
xor
inc
adc
and
stos
lods
xor
push
es
mov
cmp
sub
pop
jae
insb
lea
pop
insb
scas
idivb
jmp
fmuls
sbb
ljmp
sbb
inc
clc
dec
mov
in
xchg
fwait
adc
or
mov
je
insl
popf
lcall
dec
mov
pusha
or
mov
adc
add
sahf
mov
sub
mov
pusha
mov
sahf
add
dec
inc
push
inc
jl
pop
cmp
sub
hlt
js
clc
test
jne
int3
jg
in
call
pop
or
mov
jo
adcb
movsb
mov
addr16
mov
adc
mov
fwait
pop
jge
int3
adc
xchg
mov
mov
andb
xchg
cmp
dec
cmp
into
mov
mov
xchg
sbb
mov
out
outsb
inc
sbb
xchg
push
call
mov
ret
pop
sbb
jns
jae
cmp
pop
mov
add
ror
cmp
and
outsb
and
xor
cmp
test
cli
out
add
jmp
sub
xor
push
mov
js
mov
rcrb
cmp
fs
lods
mov
in
test
sbb
xchg
inc
out
lds
mov
and
mov
cmc
test
out
popa
lock
cmpsb
sarb
sub
popf
cmp
pop
xor
test
jge
stos
add
mov
ljmp
cmc
cmp
pop
pop
xchg
add
dec
insl
leave
adc
push
scas
pop
add
adc
popf
xchg
imul
dec
in
add
clc
imul
inc
movsl
inc
cs
adc
add
clc
in
ljmp
ss
xchg
or
arpl
lea
das
addr16
inc
pop
aaa
inc
cmp
xor
stos
pop
loopne
insb
mov
scas
lcall
add
fists
mov
test
stc
sbbb
pusha
daa
add
test
int
into
fmull
push
shrb
sub
rcll
jnp
test
mov
stos
push
mov
pop
xchg
popa
aad
xor
jl
pop
or
aam
jbe
dec
add
fmuls
jg
ret
cltd
sub
jmp
mov
aam
pop
psubsw
mov
mov
loope
mov
ja
ss
mov
lcall
push
cmp
xchg
push
mov
xchg
outsl
lret
sub
mov
dec
inc
jg
dec
lods
inc
std
fwait
or
push
and
inc
imul
stc
and
in
gs
subb
stc
mov
roll
invd
mov
sub
push
sub
jle
insl
bound
shl
fimuls
lea
pop
or
aad
out
sub
or
out
jle
aas
bound
jo
jb
or
mov
loopne
stc
inc
sbb
mov
mov
mov
push
pop
loope
stos
mov
sub
pop
add
rcll
sarb
mov
nop
test
sti
aam
rcr
jo
ffree
cwtl
lods
inc
lods
daa
cmp
std
jmp
fidivs
insb
push
pop
push
jle
sub
cltd
xchg
stos
loop
mov
scas
cmp
add
push
push
clc
pop
jnp
mov
xchg
ja
ljmp
loop
orl
push
bound
data16
jmp
mov
or
clc
sub
inc
mov
pop
xor
push
jne
in
xchg
inc
lods
sbb
stos
dec
out
ret
int3
cltd
jmp
rcl
mov
fld
add
and
adc
test
add
jb
inc
ja
mov
xchg
movsb
and
inc
mov
pusha
pop
iret
dec
mov
jmp
jo
fsubp
cmpsl
cmp
popf
lahf
mov
pop
into
lods
jle
xchg
cmp
and
mov
int3
pop
fnstsw
sub
pushf
sub
scas
ror
aaa
sarb
and
loop
arpl
push
xor
fadd
xchg
push
mov
jne
ss
fmul
cli
pop
inc
mov
cmp
push
push
arpl
push
out
jo
or
hlt
imul
jbe
inc
xor
dec
xchg
movsl
sbb
std
lahf
mov
dec
xchg
dec
sub
rorb
popa
outsl
push
pop
xor
mov
mov
shll
ret
into
rorb
adc
pop
lock
adc
jg
mov
lods
popa
push
pop
mov
cmpsb
out
lret
adc
test
add
lret
add
mov
flds
scas
testb
cmp
data16
mov
jb
push
mov
adcl
jge
iret
and
out
dec
dec
icebp
movsl
lea
leave
ror
mov
mov
hlt
ffreep
xlat
repz
imul
and
loopne
adc
mov
imul
pop
xchg
cwtl
enter
dec
xlat
into
xchg
fcoml
and
mov
rorl
aam
ja
cmpsl
pop
add
sbb
jmp
mov
xchg
inc
mov
movsl
fcmovnu
daa
xlat
rorl
scas
dec
cmc
aaa
int3
mov
addb
lds
xchg
outsl
xchg
or
fnsave
dec
into
xchg
add
mov
xchg
xchg
mov
in
mov
cwtl
movsb
pop
xor
xchg
mov
outsb
inc
mov
out
cmpsl
xchg
imul
das
mov
mov
cmp
ss
out
in
cld
arpl
lea
lock
mulb
shrb
inc
out
mov
inc
or
icebp
push
mull
inc
pop
std
jbe
pop
ret
push
sub
push
inc
xor
xor
mov
ret
xor
incl
inc
fsts
aad
jp
cmpsl
fs
xorb
pop
adc
movsl
inc
push
shl
iret
jbe
jp
mov
arpl
xchg
into
push
cmc
jnp
add
lods
xchg
notl
aad
dec
pop
cmpsl
gs
mov
or
jno
xchg
pusha
push
dec
scas
add
sbb
pop
dec
pop
js
cmp
jo
mov
clc
adc
lock
cs
mov
or
xor
mov
push
xchg
loopne
mov
das
pushf
scas
aam
lods
into
cmp
mov
add
sbbl
mov
mov
sahf
imul
out
lret
mov
sbb
aam
lret
and
sar
inc
dec
cwtl
mov
cs
pushl
sub
sbb
aas
xor
push
cltd
lods
push
sbb
pop
mov
das
popa
out
mov
inc
fstl
mov
sbb
outsb
or
in
inc
das
dec
inc
jbe
sahf
mov
and
cmpsb
into
mov
popa
ja
adc
pop
adcl
lahf
fadds
or
jns
jnp
mov
cmp
lock
rcll
mov
movsl
rolb
ds
ljmp
mov
push
push
cmpsb
ret
push
ret
aad
mov
fsubrp
ja
sahf
daa
insb
ss
cs
ds
lahf
add
dec
push
loope
icebp
sbb
testb
out
dec
push
fs
aam
lahf
mov
pop
in
out
xchg
pusha
movsl
ja
repnz
adc
push
push
lahf
imul
mov
dec
and
cmc
pop
mov
cmp
iret
stos
popa
xor
inc
adcb
stc
pop
std
bnd
dec
pop
add
and
sbb
outsl
fidivrs
lret
ret
jge
push
lahf
mov
cld
jnp
and
lret
daa
mov
sbb
jle
mov
ljmp
fadds
imul
xchg
jl
jbe
into
inc
jb
inc
out
cmpsb
pushf
jnp
movl
shll
sub
xor
sarl
pop
pop
pop
roll
sbb
jb
aam
and
sbb
pop
inc
outsl
mov
lret
lods
into
xlat
cmpb
jecxz
jbe
cs
jg
inc
leave
repz
adc
mov
call
xor
enter
les
xlat
adc
cmp
xchg
cmpsl
mov
into
mov
das
repz
fidivrl
aas
jmp
fldt
mov
scas
orl
jo
testl
orb
mov
aam
fldenv
das
inc
push
mov
jb
mov
inc
fimull
jo
sbb
imull
icebp
mov
dec
mov
mov
rclb
out
mov
ljmp
out
fidivrs
mov
rorb
loopne
pusha
xor
lret
mov
shl
jp
test
and
mov
sub
jno
pop
inc
push
std
ret
mov
and
mov
fcmovnbe
repnz
scas
push
xor
mov
or
cmovb
inc
imul
lret
inc
mov
push
add
adc
int3
int3
enter
test
das
and
rcll
pusha
dec
jbe
push
jno
jg
mov
add
aaa
sbb
roll
cltd
pop
stc
ficoml
sbb
in
loop
lret
xchg
mov
push
pop
jbe
ror
stos
into
movsb
loopne
jnp
mov
jle
int
call
mov
out
rolb
jno
out
fstpt
or
enter
cmp
push
mov
sub
inc
xchg
stos
enter
push
ja
adc
popa
push
mov
pop
push
and
lea
test
daa
ds
hlt
rcrl
rcrl
sbb
jnp
loopne
and
add
aam
lock
sub
cmp
test
js
mov
pop
imul
addr16
adc
xor
mov
cmp
pop
jecxz
clc
test
subl
mov
dec
sbb
ja
add
lods
pop
lds
fs
push
lret
popa
test
int
cmp
pop
push
and
cltd
loop
cmc
dec
xor
xor
out
push
mov
les
sub
mov
xchg
aas
mov
mov
shrb
mov
dec
push
ja
mov
add
add
shr
data16
jge
push
mov
adc
cmpsl
inc
inc
and
mov
push
ret
xchg
aaa
sbb
stc
mov
mov
ds
dec
and
xor
cmp
movsb
fxtract
add
pop
lret
jns
xor
adc
sti
pop
scas
pop
repnz
xor
fisubrl
stos
sub
je
push
xor
aas
stos
into
sbb
xor
fwait
push
sub
push
add
xor
pop
stc
lods
rol
aad
out
jae,pt
fwait
add
xchg
and
dec
pop
es
mov
test
push
mov
test
shlb
jmp
pop
int
push
popf
arpl
and
clc
mov
inc
leave
insl
cwtl
adc
cwtl
dec
xor
xor
jge
mov
mov
inc
dec
daa
nop
popl
shlb
aad
mov
dec
mov
xchg
test
xchg
jb
lods
pop
and
inc
out
rorl
das
adc
mov
hlt
adc
xchg
icebp
int3
and
sarb
push
push
cmp
into
fdiv
or
push
cltd
mov
mov
push
and
stos
repnz
sbb
in
scas
or
int3
out
sub
aaa
add
mov
cmpsl
xorb
mov
lret
mov
sub
das
andb
mov
pushf
push
lahf
rcll
cli
push
add
xor
cmp
xor
add
imul
stos
mov
xchg
adc
aaa
push
fistl
adc
lret
and
call
xchg
cmp
pop
fwait
dec
ss
mov
rorb
pop
pop
pop
pop
lret
lahf
dec
sbb
out
std
mov
pushf
js
pop
sbb
popf
int3
dec
jae
into
sbb
dec
dec
xchg
pusha
xchg
fisubl
test
arpl
adc
push
dec
scas
sub
cld
ret
fistl
sbb
mov
and
dec
add
into
ficoms
rcl
les
and
std
pop
jne
gs
lcall
mov
dec
and
mov
lock
int
loop
cmc
add
ljmp
movsl
mov
jne
not
add
inc
jno
jae
or
rclb
cmp
clc
push
cmp
jns
pop
mov
jmp
nop
movsl
pop
lret
push
pop
in
test
adc
inc
ja
shl
jecxz
fnstcw
mov
js
jg
xor
or
mov
lret
xchg
int3
push
sub
clc
mov
outsl
lret
adc
pop
scas
pushf
out
int
mov
cs
cli
mov
fwait
out
fadds
xchg
rcl
pop
js
fidivs
add
dec
xor
cmp
nopl
hlt
push
inc
xchg
ret
out
movsb
xchg
sbb
cs
movsl
sub
test
lods
stos
mov
and
sbb
adc
notl
add
mov
lret
add
fldpi
loopne
sub
xlat
mov
jmp
fistps
pushf
cmpsl
and
or
mov
mov
pop
mov
scas
int
cli
inc
sarl
int
mov
ficoms
lret
add
sub
mov
data16
xor
cmp
mov
int
mov
stos
movsl
push
jp
pop
je
icebp
add
mov
mov
jno
out
dec
pop
out
mov
jmp
pop
jbe
loopne
push
jae
jnp
lret
mov
aaa
pop
lahf
cmp
je
insl
loop
adc
clc
js
stos
fdivl
jae
pop
xlat
xor
inc
jmp
aas
dec
imul
ret
jecxz
out
leave
pusha
xor
aam
inc
iret
stos
out
popa
mov
aas
das
push
mov
pop
or
jb
xchg
xor
stos
daa
sti
jl
or
cmp
repz
inc
inc
add
int
push
out
dec
push
dec
or
imul
dec
jmp
adc
and
add
jne
cmpsb
dec
std
and
xchg
jecxz
inc
mov
mov
test
dec
inc
je
int
cs
jb
mov
sbb
aam
cmp
loop
and
cmp
daa
dec
jbe
aad
jno
pop
roll
lcall
pusha
cmpsb
add
loope
inc
fsub
and
mov
dec
jmp
add
ja
in
dec
outsl
repnz
inc
fwait
dec
sti
not
in
sbb
rcl
rcll
scas
jmp
mov
push
prefetchnta
jmp
int3
rcr
and
add
jp
dec
cld
xchg
cld
inc
ja
das
push
mov
loopne
scas
sub
test
pop
or
jle
ret
mov
mov
fisubs
mov
stc
push
ss
mov
or
xchg
test
arpl
mov
and
loope
mov
outsb
mov
es
xchg
icebp
pop
rcrl
or
sbb
add
jl
addr16
out
scas
push
imul
inc
roll
mov
push
mov
mov
lahf
jns
dec
scas
testl
arpl
fistpll
mov
stos
or
loop
inc
add
into
pop
aad
movsl
push
cld
sub
sahf
out
inc
mov
or
sbb
push
cmp
arpl
dec
ret
xor
mov
mov
out
sub
pop
outsl
out
jno
mov
in
into
pop
adc
insb
xor
icebp
inc
sub
insl
fimull
add
repz
int
das
mov
xchg
mov
jbe
adc
loopne
imul
stos
add
cmc
mov
xor
test
mov
popf
push
lcall
adc
not
or
sub
fsqrt
scas
lds
fwait
xchg
xor
push
cwtl
mov
rcl
jo
popf
add
inc
sub
in
mov
shlb
jg
or
mov
push
fcmovne
out
shlb
daa
or
jo
add
mov
out
lret
pop
imul
add
mov
daa
jns
insb
mov
cmp
or
inc
xor
icebp
push
int
out
cmpsl
hlt
leave
and
fcoms
mov
sub
mov
test
mov
push
lcall
out
shll
iret
xchg
lret
in
lret
mov
shll
mov
bound
hlt
push
loope
fs
shl
mov
jno
dec
pop
mov
adc
dec
jb
loopne
mov
lret
mov
insb
jbe
push
xor
jmp
lods
popa
xchg
xchg
mov
dec
xchg
push
pop
ret
dec
fsubp
rcll
fisttpll
cld
jmp
or
mov
sub
xchg
mov
loope
testl
fidivs
insb
or
cmp
mov
pushf
clc
xchg
ds
mov
sbb
outsl
fcomps
imul
ret
rolb
lret
ss
icebp
aas
mov
repz
or
repnz
jb
add
xchg
ljmp
cmp
sbb
add
xor
xchg
mov
jbe
lds
push
mov
mov
jl
ljmp
call
push
adc
in
gs
cmp
sbb
popa
mov
pop
pop
in
dec
subl
loope
xchg
les
xor
dec
testb
out
lea
mov
jne
insb
push
ret
jae
xor
mov
sti
mov
push
inc
cmp
jnp
lea
jo
jbe
stc
insb
or
imul
clc
cmp
push
mov
push
out
cmp
jge
std
aaa
sub
or
mov
mov
pop
jne
push
in
aad
fmulp
pop
dec
pop
add
or
jbe
fnstcw
inc
mov
adc
xchg
push
orb
loope
and
push
sub
rcll
das
cmp
jecxz
adc
and
rol
stos
pop
shll
rcrb
cmpsl
pop
hlt
xor
add
je
addr16
or
mov
cmp
mov
mov
stos
cmp
push
and
add
movsl
adc
mov
inc
mov
shrb
mov
sub
xchg
jo
push
pushf
xchg
stos
xchg
xchg
daa
lret
cli
enter
faddp
pushf
push
xor
pop
shlb
push
gs
outsb
adc
mov
lods
test
addr16
mov
adc
inc
movsb
jg
pop
scas
hlt
insl
sub
or
aaa
xor
mov
and
push
mov
in
lods
or
packuswb
aam
sbbl
cmpsb
push
sbb
rol
jle
iret
mov
mov
mov
xchg
inc
and
scas
push
std
imul
push
int
jno
sar
lcall
add
aad
std
jle
add
int
or
inc
mov
pushl
imul
sub
shrb
add
mov
xchg
mov
out
enter
int
jp
add
xchg
fcompl
aaa
or
movsb
xchg
mov
pop
xchg
lds
inc
iret
out
cld
fucomp
jp
mov
jae
push
xor
add
mov
sbb
ss
lret
push
adc
pushf
lcall
and
pop
pop
mov
out
or
add
xor
fidivl
scas
or
dec
adc
lods
jbe
daa
pop
push
ret
ljmp
pop
xchg
insl
xorl
std
lcall
test
int
dec
lret
mov
dec
inc
ds
push
movsl
xlat
sub
add
jo
push
hlt
mov
or
sahf
ficompl
cmp
pop
and
gs
test
int
adc
shll
rol
or
xor
xor
sti
mov
mov
jae
jp
jg
fildl
pop
arpl
into
ret
inc
xchg
mov
int3
mov
xchg
pushf
add
mov
jge
test
mov
push
scas
mov
lods
adc
jl
and
mov
or
hlt
push
xchg
push
incb
bound
ja
jo
loope
in
mov
stc
inc
pop
dec
in
jecxz
iret
xchg
pop
mov
lcall
inc
add
bnd
and
push
sbb
xor
inc
cwtl
rcl
push
imul
sbb
jl
loope
shl
lods
fildl
mov
xchg
mov
cmp
in
adc
loopne
repz
cmp
dec
js
test
pop
or
icebp
fs
push
mov
mov
out
aam
mov
adc
fcoms
out
push
fwait
or
mov
ret
dec
mov
add
ljmp
pop
xor
dec
xchg
int3
not
addb
push
sbb
sub
mov
sub
cltd
adc
lret
dec
jbe
sbb
jle
or
sahf
outsb
sbb
shll
and
mov
les
mov
shll
cmpsb
push
sub
daa
das
pop
mov
sbb
inc
mov
push
rcll
xor
outsl
cmp
popf
mov
gs
sub
int
mov
data16
imul
mov
pop
scas
cld
inc
sbb
lret
push
xor
push
push
sub
jb
call
push
jno
roll
clc
repnz
testw
ret
jns
or
fildll
rcrb
pop
stos
call
cmp
add
mov
movb
xchg
cmp
xor
cmpsl
sbb
subl
shlb
xor
scas
into
repz
xchg
and
adc
and
cli
inc
mov
enter
lcall
stc
decb
shrl
jg
sub
and
adc
fwait
sub
xchg
int3
dec
cmp
pop
cmpsb
cld
int3
jmp
cs
inc
push
in
add
fsubrs
repz
lcall
sub
cmp
adc
imul
cli
mov
rol
xchg
inc
xchg
icebp
push
into
cmp
jle
sbb
adc
xlat
and
push
sbb
dec
mov
jne
addr16
cli
outsl
mov
stos
scas
popa
cmp
adc
es
ljmp
sbbb
rcrb
popa
xchg
pop
cmp
lret
jg
std
ja
cmpsl
pusha
sub
jno
mov
push
jnp
bound
sub
dec
push
push
or
inc
ljmp
out
add
in
push
xor
stos
pop
fsubrl
lock
repnz
icebp
and
push
iret
int3
popf
push
dec
mov
inc
cmp
cmc
std
pop
ret
xchg
cli
sarb
jae
inc
lret
mov
mov
stos
mov
jb
jle
mov
push
into
dec
dec
ds
testb
cmp
sbb
cmp
in
inc
xor
movsl
pop
pop
push
lock
mov
enter
daa
gs
mov
dec
sub
xchg
jns
and
ljmp
inc
fcompl
jg
shll
sub
xor
insb
sub
je
dec
add
shl
inc
sub
sub
leave
test
or
xchg
das
and
adc
lret
mov
pop
cld
adc
es
mov
adc
add
loopne
test
fs
push
in
push
mov
std
fisubs
mov
nop
mov
arpl
pop
aad
push
adc
pop
out
test
mov
lahf
xchg
push
je
int3
push
and
inc
stc
into
xor
fs
sbb
push
jecxz
push
rcll
add
lds
lret
fidivl
data16
in
jnp
jecxz
pop
cmp
mov
mov
pop
mov
enter
outsl
mov
sub
test
pop
dec
dec
dec
or
mov
xlat
xor
mov
xor
sarb
daa
shll
mov
mov
push
lock
inc
out
mov
pop
pop
mov
iret
push
add
rclb
and
inc
pop
popa
andl
adc
aad
fst
lret
out
insb
sbb
lock
adc
sbb
push
cmpsl
xchg
add
jae
or
mov
aad
cmp
mov
nop
inc
mov
das
inc
enter
rolb
xchg
push
dec
sbb
in
insl
xlat
mov
or
jmp
inc
inc
pop
push
dec
lret
jno
out
daa
mov
sarb
arpl
push
aam
adc
jle
call
jne
pop
jae
sti
lods
dec
push
cld
loop
add
xor
mov
dec
sti
inc
cmpsl
adc
mov
and
sub
cmp
fnstsw
in
call
lds
adc
jl
mov
fsub
inc
out
inc
ret
into
outsl
mov
call
and
aaa
call
pop
jg
dec
pop
mov
and
fisubl
sub
sub
xor
xchg
push
out
cli
stos
pusha
aaa
mov
add
jge
out
xchg
push
jle
ret
push
lret
mov
test
imul
sahf
aaa
sub
lret
sbbb
std
push
mov
fmulp
test
cmp
and
mov
icebp
cs
xor
leave
or
lret
jbe
cmpps
and
lea
in
xor
cwtl
mov
enter
inc
pushf
push
daa
lock
decl
xchg
data16
dec
outsb
vcvtss2si
pop
mov
adc
mov
push
xchg
dec
xchg
pop
or
sbb
cmc
inc
push
int
dec
lods
imul
outsb
ss
lret
icebp
and
jl
cmp
push
pop
sub
jecxz
imul
into
and
and
adc
into
out
xor
ljmp
mov
stc
cs
popf
leave
mov
mov
mov
out
pop
into
addr16
jne
aam
xor
mov
iret
sub
mov
ficoml
in
jbe
arpl
push
les
outsb
ja
jnp
xor
cmp
push
sub
dec
xchg
rorl
xchg
xchg
pushf
push
addl
leave
mov
loopne
sbb
and
push
in
out
cli
push
push
xor
out
sub
fnsave
das
into
xchg
or
push
cwtl
cld
dec
pop
vunpcklps
iret
clc
and
cmp
movsb
mov
push
or
bound
subl
adc
dec
arpl
mov
outsb
mov
pop
test
insl
cmp
aam
sub
sbb
sbb
sbb
push
lcall
xor
ja
stos
into
xchg
xchg
popf
insl
nop
cmc
add
ret
imul
inc
push
push
mov
push
popa
lret
in
jne
sub
andb
dec
test
test
inc
vpsrad
jns
ret
data16
xlat
mov
xor
dec
push
lret
mov
inc
sbb
iret
lods
add
add
or
aam
clc
fs
dec
jnp
adc
loopne
adc
mov
lods
ret
sbb
push
lock
in
les
imul
dec
out
cmpsl
test
push
int3
scas
jle
jae
inc
arpl
insb
notl
mov
pop
ljmp
push
mov
popf
push
lods
push
jle
imul
jno
mov
push
pop
out
loope
cmp
sbb
sar
pop
cli
inc
or
xor
repz
insb
int3
cmpsb
gs
shrl
fcomps
inc
cmp
ret
inc
push
mov
fmul
fstl
adcb
xor
mov
lret
ret
or
loop
dec
movsl
pop
je
mov
adc
cld
adc
negb
mov
inc
in
pop
xchg
mov
push
rorl
cli
js
movb
dec
or
ds
mov
movsb
add
sub
shll
xchg
pop
gs
adc
fs
mov
mov
roll
push
ljmp
xchg
imul
push
xchg
pop
or
dec
lock
lods
rcll
sbb
fnstcw
sbb
test
pop
xchg
js
pop
mov
insl
or
lret
xlat
rcll
sub
pop
aam
mov
sbb
repz
stc
sahf
or
add
cmpsl
and
mov
daa
jecxz
fs
cmp
inc
and
push
das
mov
sbb
rol
mov
cmpsl
or
nop
cs
mov
hlt
ret
adc
xchg
xchg
call
fsubr
mov
inc
dec
mov
iret
test
lret
data16
push
xor
fidivrs
fldenv
std
out
js
sarb
imul
les
lcall
mov
out
aam
inc
pop
cli
int
or
mov
loopw
loopne
in
jns
vphaddwd
pushf
or
dec
fistps
test
test
cld
inc
mov
pop
jecxz
pusha
push
cmc
fsubr
jns
inc
aaa
and
loop
repnz
mov
call
or
jb
imul
cmpsl
jmp
dec
ljmp
out
xor
gs
push
push
xchg
hlt
and
std
into
and
adc
jp
and
xchg
lods
stc
insb
xor
ss
lea
hlt
dec
testl
cmpl
ds
mov
outsb
jmp
and
loopne
daa
mov
sub
sub
xchg
aas
dec
out
push
repz
movsb
std
decl
or
push
and
test
cmp
pusha
cmpl
pop
ror
dec
jl
shll
lods
sti
push
jae
lock
mov
mov
push
mov
mov
iret
pop
cmp
pop
xchg
std
inc
xchg
test
jne
sbb
ret
push
out
imul
imul
jae
xchg
push
loopne
push
push
hlt
arpl
aad
ja
imul
push
push
mov
ss
fisubrl
xor
or
rcll
inc
or
scas
imul
sbb
fmulp
test
xchg
sahf
pusha
dec
and
pop
jmp
mov
mov
mov
sbb
sub
movsb
jne
mov
sarb
push
cs
push
sub
mov
in
fadd
adc
and
jl
into
outsl
daa
stc
nop
xchg
sub
aaa
dec
ja
cmp
aad
mov
sub
je
icebp
subl
stos
fcomps
or
sbb
repz
repnz
mov
bound
sbb
xor
cwtl
in
lret
mov
fidivrs
lret
adc
jbe
loopne
loope
test
rclb
out
jns
push
add
imul
xor
imull
test
inc
cmc
cs
es
push
or
loope
rolb
jg
xlat
jae
push
pop
push
add
les
sub
rorb
adc
xlat
into
js
faddl
test
push
adc
call
leave
call
xor
data16
mov
in
test
sbb
inc
iret
popf
sub
ds
out
sbb
push
add
adc
mov
cwtl
imulb
jbe
mov
mov
pop
sbb
jmp
into
fldt
xchg
jne
and
aaa
mov
lods
out
inc
fstpl
fdivs
fmull
jo
sbb
stos
push
push
movsb
dec
jge
cmpl
arpl
std
out
xchg
not
mov
fmuls
pop
jmp
add
and
xchg
scas
jae
xor
mov
js,pn
test
mov
loop
pop
dec
in
push
jge
cmp
dec
sub
sbb
test
clc
xor
cs
and
and
lret
mov
pop
jo
lahf
push
or
sti
cmpsb
sbb
jbe
and
stc
pop
repz
insb
imull
xor
movb
pop
sbb
cld
dec
sub
bound
hlt
mov
jmp
mov
mov
insl
loope,pn
adc
std
dec
cmpsb
ljmp
aaa
lea
mov
jmp
daa
aad
jo
push
push
add
jae
ret
inc
cltd
xchg
fdivs
jns
push
lret
popf
lds
int
mov
gs
fcompl
or
rcrl
sti
dec
push
outsb
mov
adc
xlat
in
fnstenv
ja
test
gs
or
fisttpl
stos
mov
loope
xchg
outsl
dec
je
lret
call
adc
push
lret
mov
int3
nop
mov
mov
xchg
xchg
push
push
pop
stc
sub
sub
fs
outsl
sub
inc
ss
sbb
ja
push
je
push
inc
les
mov
mov
ljmp
dec
dec
mov
clc
movsb
cli
add
lahf
icebp
push
mov
into
fwait
mov
movsb
lret
mov
xchg
and
lret
stos
sub
sbb
xor
mov
sbb
jne
imul
or
fisttpll
ljmp
fimull
loope
fisubs
sbb
mov
inc
push
sub
jmp
gs
insl
mov
xor
dec
xor
adc
adc
ss
bound
mov
fcmove
shl
pushf
mov
dec
push
dec
arpl
scas
loope
movsl
jns
adc
push
lock
loope
fmuls
loopne
lods
pop
push
jnp
or
push
pop
mov
das
mov
stc
cwtl
xor
add
xor
pop
sub
adc
inc
int
aaa
sub
in
mov
xchg
sbb
cs
cmpsb
bound
rcl
and
dec
cmp
daa
xchg
push
ffree
cwtl
adc
cmp
out
sub
xchg
fidivs
lcall
jmp
mov
arpl
mov
pop
lahf
scas
stos
sub
fisubl
loop
mov
cltd
dec
es
movsb
test
out
bound
roll
push
xor
sti
jnp
daa
iret
mov
push
rorl
js
sub
out
xchg
lret
pop
imul
adc
aaa
jnp
push
movsl
mov
out
adc
xor
mov
xor
ret
adc
popa
add
mov
pop
test
ljmp
xchg
push
jge
scas
cmpsl
addb
jnp
int3
mov
push
or
rolb
mov
fldenv
popf
mov
cmp
inc
lcall
jecxz
call
dec
in
stos
insb
add
adc
mov
push
test
aam
sub
pusha
aad
mov
into
aam
test
and
sub
jecxz
iret
jle
or
icebp
jmp
stc
imul
xchg
ja
repnz
aaa
aam
push
jae
xchg
inc
jns
jne
xor
loopne
pop
add
mov
inc
stos
jg
mov
xor
sbb
je
dec
mov
adc
pop
ja
add
js
jmp
in
add
jne
movsb
mov
stos
int
cmp
adc
jb
arpl
lds
dec
inc
lea
mov
dec
xchg
jmp
jle
test
sub
xchg
dec
add
out
in
xchg
and
and
push
rorb
into
and
popf
sbb
cmp
test
jno
adc
rcrb
out
sahf
add
or
pop
dec
lods
push
int3
jno
mov
pop
mov
or
and
sub
addr16
int
mov
sti
sub
decl
nop
jno
lretw
sub
xchg
dec
out
mov
dec
insb
fcom
cmpsl
jb
jnp
ret
or
js
vcvtsi2ssl
mov
or
daa
ret
push
push
sub
sahf
xor
push
scas
jg
cmp
mov
repz
sub
inc
dec
gs
in
mov
xchg
jmp
sti
mov
cwtl
scas
movsl
pop
mov
dec
fimull
addr16
push
lret
xchg
hlt
jne
inc
lods
mov
int
jbe
aam
xchg
shlb
movsl
xchg
ljmp
and
pop
push
aad
push
xor
dec
or
int
jbe
xchg
andl
and
out
dec
les
out
das
push
xlat
pop
dec
sbb
xchg
mov
cmpsl
mov
or
lea
mov
push
gs
jle
push
inc
xchg
adc
xchg
in
pop
int
mov
or
mov
movsl
and
or
out
subb
pop
mov
inc
mov
mov
sarl
cmp
and
mov
xchg
sub
mov
aas
mov
mov
push
mov
push
loopne
push
mov
adc
mov
mov
scas
cmc
enterw
or
or
mov
mov
les
add
inc
adc
sub
andl
adc
cwtl
add
mov
aam
adc
fbstp
xor
out
test
mov
cmp
pop
dec
stos
jl
cmp
movsb
jg
dec
jae
pop
dec
popf
fidivl
lcall
mov
pop
jae
pop
test
mov
out
popf
push
inc
test
add
sbb
jp
jo
xchg
inc
push
mov
sbb
bound
adc
iret
or
sbb
xor
jmp
testb
pop
pop
pushf
push
scas
push
mov
imul
xchg
or
or
je
sahf
stos
gs
or
xor
adc
fdivr
pop
add
mov
mov
mov
add
je
or
pop
adc
mov
sub
hlt
lahf
enter
arpl
mov
sbb
pop
cltd
mov
mov
inc
add
subb
push
add
dec
les
sahf
js
sub
or
rolb
icebp
mov
loope
push
outsl
cmp
test
sub
xor
jbe
mov
dec
cmp
cwtl
cltd
icebp
insb
mov
lock
iret
stos
leave
sub
or
xchg
psrlq
out
push
out
jnp
mov
push
into
jecxz
and
cmp
pop
jg
mov
mov
stos
adc
dec
xor
or
cmp
pusha
dec
jne
iret
outsb
out
push
push
aam
pop
dec
push
lea
or
int3
ret
xchg
out
push
lock
xchg
pusha
lods
mov
sbb
fsubrl
push
fwait
int
push
out
into
dec
jge
stos
mov
jecxz
jne
xchg
inc
test
mov
xchg
int
out
cmpsl
addr16
lahf
pop
cli
out
push
sbbl
mov
mov
fiadds
add
sbb
push
jne
int3
imul
or
cmpsl
in
je
mov
mov
dec
jns
dec
fnsave
pop
rolb
xorb
jle
mov
sub
fnstsw
xchg
jb
push
test
mov
in
clc
pop
mov
cmp
dec
jle
mov
aad
xchg
jbe
pop
add
and
mov
outsl
das
jns
sbb
add
iret
stos
mov
sti
mov
imul
inc
ficoms
ja
cmpsl
das
jp
pop
inc
sti
push
mov
mov
scas
insl
push
aad
pop
fcompl
fcoms
sub
sub
in
neg
pop
out
je
lea
subl
or
mov
sbb
loop
add
mov
or
rorl
xchg
push
es
dec
movsb
imul
stos
lcall
dec
sti
push
ror
call
repnz
mov
les
or
push
push
aaa
ja
mov
fs
aam
outsl
insl
mov
and
lds
add
int3
cmc
or
pop
out
add
rolb
cli
sub
hlt
sbb
add
pop
dec
pop
or
dec
jge
and
test
out
push
arpl
cmp
cmc
mov
insl
sub
jge
pop
cmp
push
ljmp
and
hlt
dec
gs
xor
aas
test
sub
lcall
cmp
shrb
pop
test
sbb
dec
xor
mov
dec
jg
pop
out
gs
ss
inc
inc
mov
mov
xor
add
mov
mov
std
push
mov
sub
mov
dec
xlat
push
sub
test
mov
bound
cmp
addr16
loope
jbe
xchg
gs
fucomi
sbb
jno
jae
sbb
mull
inc
adcl
ftst
jb
rcll
out
addr16
push
inc
cmp
cmp
out
lods
cmp
push
push
rcrl
ret
and
das
js
add
dec
aaa
mov
push
setnp
jo
clc
shll
xchg
cmc
mov
imul
mov
into
add
das
mov
outsl
adc
mov
ror
notb
lcall
jbe
inc
dec
jnp
pop
inc
pop
out
mov
not
mov
or
push
sbb
jmp
adc
add
or
in
push
sbb
and
xchg
adc
leave
lcall
or
sbb
fbld
mov
dec
stc
loope
mov
daa
push
fs
sub
fisubrs
in
xchg
cmp
stos
insb
pop
cmpsl
mov
xchg
out
cld
push
cmp
imul
rolb
das
or
aam
push
xchg
loop
aad
into
int
mov
stos
xchg
enter
and
std
jmp
dec
inc
ret
ss
xor
mov
pop
imul
iret
ss
mov
sbb
pop
push
pop
fstpt
adc
dec
mov
pop
push
int3
mov
mov
repnz
inc
gs
jae
xchg
cmpsb
cmp
in
mov
mov
cmpsl
xchg
sub
fs
fdivrl
cmp
dec
pop
cmc
aam
and
dec
inc
fcmove
mulb
cmp
out
mov
jp
es
repnz
in
test
ja
push
xchg
icebp
int3
inc
xchg
ljmp
lahf
or
mov
ss
mov
out
push
ljmp
add
add
pop
pop
pushf
out
or
xchg
xchg
jg
into
testl
adc
inc
fdivr
ret
xlat
adc
cltd
mov
or
mov
sarl
rcl
mov
movsl
ret
cmp
cmpsl
sbbl
incb
jno
or
jnp
std
cmc
mov
jp
jg
xor
sbb
cwtl
push
push
bound
cli
aam
dec
xor
in
sahf
pop
icebp
sti
out
push
cmp
sbb
test
outsb
fwait
mov
mov
inc
shr
adc
mov
pop
lret
leave
mov
adc
cltd
sbb
jbe
mov
mov
sti
fs
adc
repz
xchg
or
lret
cld
dec
mov
cmp
mov
lahf
mov
jns
xchg
mov
xchg
scas
mov
out
aaa
pusha
jno
inc
sub
lret
es
fsubrs
jg
or
jbe
int3
cmp
into
cmp
lea
cmpsl
mov
lret
enter
les
mov
int
pop
rcr
xchg
lds
lods
sarl
dec
movsl
push
fldcw
jle
jnp
call
push
mov
mov
aas
add
sbb
fdivrs
ret
mov
pop
xor
pop
add
out
arpl
mov
adc
mov
mov
psllq
jmp
repnz
insl
fs
ret
iret
and
xchg
mov
loope
out
jns
aad
fs
sub
int3
test
push
mov
movsb
std
jns
outsb
out
aaa
push
xor
mov
mov
or
js
xor
xor
cbtw
lods
cmpsb
push
jae
aas
mov
leave
mov
cmc
repz
jns
and
scas
imul
not
pop
jge
sbb
pop
mov
mov
cmpsl
out
cmp
dec
xchg
ljmp
addr16
adc
push
cmp
repz
mov
rcl
jns
mov
jmp
into
pushf
and
pop
jbe
dec
mov
push
mov
sbb
arpl
push
addr16
lret
in
xlat
adc
add
repz
sbb
lods
mov
mov
push
aas
pop
pusha
pushf
jb
mov
je
movsb
jp
sti
pop
mov
into
xchg
or
xchg
cmp
out
jle
stos
sahf
mov
es
lcall
std
popf
mov
push
mov
jle
out
fdivs
outsb
in
fldl
push
mov
dec
test
fldl
sti
xchg
sub
aad
pop
jno
js
shll
push
mov
lret
add
shlb
mov
adc
cli
mov
orl
es
fadds
mulb
stos
cmpsl
movsl
pop
cwtl
and
mov
lods
daa
rcrb
inc
scas
push
push
inc
aas
xor
add
jmp
cmp
fwait
sbb
inc
jmp
mov
orl
add
inc
pop
pop
call
repnz
fisubl
loope
aad
cld
dec
xchg
cmp
push
add
out
rolb
lea
repz
fcomi
pop
fisttpll
in
xchg
cmc
push
scas
js
cmp
push
jmp
into
lock
sub
int3
jae
test
inc
subb
stc
mov
mov
add
pop
cmp
mov
jbe
popf
pop
sarl
repnz
inc
cwtl
data16
mov
jns
cmpl
into
decb
mov
imul
inc
mov
xor
imul
and
bound
sbb
inc
cltd
xor
or
pop
xor
push
mov
mov
mov
rcll
push
jb
push
mov
jmp
movsb
sbb
int
inc
insb
add
bound
in
jae
xchg
jp
arpl
mov
add
in
cmp
testl
adc
pop
scas
daa
adc
mov
inc
mov
stc
push
inc
or
pusha
push
adc
mov
lret
mov
xor
jae
xchg
enter
fadds
mov
adc
cltd
mov
loop
sbb
sti
or
xchg
xor
jecxz
call
xlat
pop
push
movsb
rolb
cli
rcrb
in
iret
jae
mov
negb
push
sub
or
add
push
sub
insb
mov
leave
loop
nop
sub
hlt
dec
jbe
out
push
xchg
mov
lret
pushf
lahf
dec
xchg
out
inc
ret
push
iret
mov
dec
fcoml
sahf
out
sbb
cmp
ret
lret
push
pusha
pop
shrb
lods
dec
cltd
push
out
test
cmp
mov
js
sbb
in
ljmp
shll
push
out
mov
adc
mov
add
add
aam
out
pop
sbb
into
push
or
xchg
int3
imul
and
pop
aas
mov
jnp
jmp
inc
pop
inc
push
test
out
arpl
inc
mov
stos
mov
int
push
scas
xchg
dec
cmp
test
or
adc
xor
pop
cmp
mov
push
mov
testb
mov
lods
push
into
lods
jbe
xchg
mov
mov
add
jecxz
sarl
mov
lahf
adc
into
and
int3
sahf
xchg
lret
pushf
dec
ret
xor
es
mov
pop
imul
adc
mov
dec
fs
dec
pop
mov
aam
adc
add
and
test
out
inc
ror
dec
mov
lret
js
movsb
sbb
push
adc
fs
push
incb
jnp
hlt
lods
xor
mov
dec
rcr
data16
gs
imul
jecxz
ljmp
push
mov
xchg
push
je
sbb
ljmp
dec
add
xchg
lret
test
shlb
rcl
dec
test
rorb
pop
dec
mov
shrb
xchg
fsubrs
dec
dec
int3
push
mov
iret
cmc
loop
jmp
sbb
ds
or
and
adc
lret
sub
or
push
in
sub
xchg
push
add
scas
adc
cmp
sbb
jo
ss
into
adc
gs
inc
mov
out
arpl
xor
lcall
xchg
xor
and
into
or
mov
jmp
imul
movsl
add
out
push
pusha
sti
sbb
fsubrs
dec
xchg
lcall
sbb
mov
enter
pop
mov
jnp
pusha
cli
mov
jp
jne
mov
and
push
mov
push
jp
lock
add
jbe
inc
int
inc
icebp
xor
das
mov
mov
cmovo
mov
imul
inc
jle
sti
dec
xchg
add
push
bound
mov
push
cmp
mov
push
push
and
adc
lock
insl
cmp
xchg
pop
add
mov
and
ljmp
into
sbb
sahf
outsl
sub
cmp
mov
arpl
pop
jg
xor
adc
inc
xlat
popf
aam
in
ret
xor
mov
es
inc
sbb
adc
pand
out
xor
lods
imul
sbb
jge
out
or
or
fidivrl
xchg
loope
rcl
test
sbb
in
lret
sub
jae
cmc
std
fsubs
xor
ja
es
aam
mov
xchg
fadds
cwtl
movsl
movsl
pop
into
shlb
nop
and
daa
sub
or
jns
and
fs
imul
and
xchg
sbb
mov
jge
bound
cmp
ja
jno
adc
or
fdivp
mov
jb
loop
adc
movsb
les
incl
push
adc
scas
mov
aaa
idivl
xchg
ror
pop
lcall
mov
cli
sti
push
test
lods
adc
cld
lret
stos
sub
xchg
dec
lods
dec
gs
mov
sub
and
pop
dec
in
movsl
sbb
mov
and
and
mov
rcr
mov
dec
mov
push
js
loope
lret
stos
jne
cmp
sbb
out
add
aam
hlt
out
lahf
in
inc
gs
cmpsl
dec
cmp
inc
push
fsub
adc
das
sbb
sbb
in
in
add
and
fwait
pop
push
std
cmpsl
out
cmpl
or
dec
xchg
push
mov
xchg
xor
jl
popl
lock
cmpsl
jae
into
jge
jmp
and
shrb
adc
cs
and
sub
js
ficoms
into
mov
arpl
mov
hlt
or
inc
xor
test
mov
imul
je
mov
mov
xor
das
rcl
out
push
jae
xchg
dec
sbb
fdivp
xchg
sarl
shr
jns
jno
into
loop
cmp
push
aaa
cs
sti
shr
adc
insb
std
ljmp
push
jmp
or
out
lock
shll
jecxz
call
cld
leave
or
inc
push
es
mov
test
dec
lods
or
mov
xor
in
test
pop
push
rcrl
xor
cmp
data16
popf
cmp
cmp
jne
outsb
mov
ret
cltd
in
aam
inc
stos
adc
and
imul
push
push
xchg
test
iret
cld
add
leave
sbb
aas
inc
repnz
in
xchg
aaa
xchg
enter
lahf
dec
mov
fcmovnbe
and
mov
pop
xor
lods
or
xchg
mov
push
test
dec
lret
sbb
sub
push
filds
and
ret
and
mov
pop
dec
scas
xor
cmpsb
lock
xlat
das
faddl
int3
push
mov
aas
incl
mov
dec
mov
out
inc
stc
pushf
sbb
iret
mov
xor
lds
sbb
pop
mov
sarl
shll
ss
ret
fistpl
out
in
popl
in
push
mov
sbb
dec
push
mov
jecxz
push
xor
dec
les
jl
inc
addr16
mov
jae
ja
pop
adc
add
xor
addr16
dec
arpl
inc
call
mov
mov
dec
inc
bound
xlat
jmp
clc
pop
xor
dec
push
mov
ja
lcall
in
fistpl
data16
pop
insl
add
movsl
js
push
into
xchg
addr16
les
andl
lret
dec
push
jne
stc
xor
fidivrl
sub
pop
dec
mov
sbb
pop
pop
mov
ds
lahf
inc
mov
push
shl
into
rep
jnp
ja
enter
es
dec
imul
mov
or
sahf
daa
inc
fstp
mov
in
int3
add
lret
mov
push
and
push
lahf
or
xchg
pop
testl
js
inc
inc
clc
data16
lock
mov
pop
lret
sub
mov
int
push
shrb
fiaddl
xchg
adc
popa
fcmovne
sti
pop
pop
cli
ret
out
cmpsb
xchg
nop
in
fdiv
out
adc
inc
xlat
jle
mov
push
insl
jecxz
jl
rorb
inc
add
lods
and
lds
push
jno
ficoml
cmp
push
mov
sbb
movsl
mov
jne
jbe
xor
inc
fsubr
mov
test
insb
pop
push
jbe
into
fsubs
fstl
mov
push
shll
add
clc
sbb
and
or
loopne
push
mov
xor
add
sbb
shll
std
pop
mov
adc
cmp
adc
push
repnz
mov
pop
jge
mov
mov
jns
xchg
out
push
push
xchg
mov
lods
lds
out
sti
push
jno
addr16
pop
rcrb
loop
mov
sahf
jae
jns
push
les
lea
dec
out
call
sbb
cmp
pop
mov
je
push
cltd
push
lret
or
sub
or
shrl
cmp
mov
sarb
sbb
mov
adc
test
mov
adc
xchg
xor
pop
fldl
or
push
mov
xchg
push
fcmovnbe
rolb
mov
xchg
ds
adc
inc
adc
mov
in
adc
mov
or
dec
mov
rcll
xchg
aaa
fimuls
shrb
push
mov
sub
dec
pop
std
jnp
xor
insl
push
lock
sub
ss
mov
dec
jmp
xchg
imul
aam
in
in
icebp
pop
push
cmp
or
inc
jns
and
mov
dec
fwait
push
dec
stc
jae
imul
xchg
mov
push
das
add
and
push
jle
adc
rcl
imul
add
ss
cmc
in
mov
stos
mov
cmp
mov
lret
pop
rorl
mov
nop
fimuls
call
jg
mov
xchg
or
sub
sarl
dec
es
xor
mov
pushf
or
cmp
cld
rcr
cmp
jb
std
imul
push
mov
sarl
clc
and
mov
dec
mov
out
jge
push
cli
push
mov
push
xchg
cmp
inc
inc
jnp
xchg
addr16
jmp
mov
insb
rcl
jg
mov
push
jb
fst
das
dec
add
mov
fildl
xchg
loop
aaa
jb
push
popf
data16
or
xor
mov
in
jmp
rcrb
ret
jecxz
cmp
mov
js
pop
dec
addr16
mov
movsl
loop
int3
inc
push
jne
pusha
testl
ret
jbe
out
in
or
xor
inc
test
jo
and
cli
xchg
xchg
lahf
shr
shr
arpl
scas
imul
das
push
or
lds
test
sub
mov
les
push
xor
sahf
fidivrs
sarb
mov
xchg
in
push
push
movsb
xchg
out
pop
inc
enter
out
xchg
sub
fcmovu
jecxz
loopne
dec
lret
cmpsb
pop
or
mov
popa
movsb
roll
std
inc
push
sub
test
imul
sub
rcrl
jb
imul
jg
das
loopne
jns
dec
insl
aam
fnsave
push
jle
test
cmp
insb
das
stos
ja
loope
mov
sub
rolb
and
jl
push
mov
and
mov
dec
xor
mov
mov
int
push
mov
adc
push
shr
pushf
out
int
cmp
inc
es
shl
inc
test
mov
sahf
aad
jmp
jno
mov
and
arpl
pop
cli
repz
sahf
dec
jmp
cvtps2pi
or
cmpsb
or
aas
les
cmp
imul
incb
cmpsb
lret
jp
adc
mov
bound
jle
inc
addr16
sub
dec
xor
cmpsl
arpl
in
push
ljmp
arpl
jle
repz
adc
mov
cmp
inc
sub
rorb
mov
das
fs
negb
adc
lods
sti
lods
enter
pop
pusha
xchg
ret
fidivl
jmp
adc
mov
addb
pop
dec
sbb
jge
out
loop
inc
mov
pop
or
add
xchg
repz
ds
out
or
daa
into
mov
xchg
movsb
adc
jne
shrd
rcrl
cltd
pop
push
dec
fidivl
push
jmp
into
pop
ret
or
insl
or
fs
jl
mov
mov
inc
fs
add
jo
add
into
mov
lcall
sbb
js
scas
mov
rorl
add
in
lods
enter
xor
call
jo
fwait
inc
jmp
sub
mov
push
int3
enter
adc
xchg
jne
outsb
sub
adc
fmul
lret
dec
test
aam
icebp
int3
int
mov
in
mov
and
not
push
jno
outsb
jecxz
push
dec
into
popf
repz
mov
inc
pop
inc
and
sub
imul
or
orb
nop
not
mov
xor
ja
xchg
into
rclb
fldcw
hlt
sbb
jecxz
mov
dec
push
repz
jg
sti
mov
mov
adc
jmp
out
das
ret
cli
hlt
out
dec
push
loope
loop
jle
pop
mov
insb
gs
ljmp
js
sbb
in
jns
xlat
lahf
cmp
fstpl
xchg
adc
loopne
jbe
insl
fistpl
push
xchg
xor
aam
rcl
inc
sub
js
adc
js
cwtl
in
fcmovnbe
jmp
ja
mov
cmp
jb
sub
lret
xor
cmpsb
sbb
not
icebp
dec
pop
pop
data16
xchg
jne
adcb
imul
insb
enter
leave
pop
inc
and
jl
sbb
jbe
mov
dec
pop
inc
xchg
out
mov
sub
cmp
jns
pop
push
dec
call
jecxz
dec
pop
lcall
imul
cmpsb
into
testl
push
dec
or
mov
cli
fisubs
addl
es
fnsave
outsb
dec
adc
pop
sbb
push
pop
loop
cmpsb
into
ret
pop
jge
aaa
js
jns
pop
clc
inc
cwtl
aad
inc
ja
rcll
and
cli
pop
iret
adc
add
dec
ss
lret
sub
inc
or
mov
test
mov
dec
fcmove
ds
es
or
ror
pop
cwtl
sbb
push
and
and
imul
inc
test
add
mov
int3
xchg
pop
popf
ror
and
lret
cltd
repnz
dec
or
add
aaa
dec
push
xchg
psubusw
icebp
rolb
and
mov
push
push
dec
pop
xchg
dec
pushl
cltd
imul
adc
push
in
pop
mov
lock
mov
movsb
jge
andb
and
aas
adc
push
dec
mov
jne
call
hlt
xlat
xor
adc
add
pop
push
jg
scas
mov
jmp
popa
jb
push
sbb
jnp
scas
cmp
mov
mov
and
pop
xchg
shrl
cmp
aad
xchg
divb
xchg
push
nop
cmp
lret
int3
fwait
push
icebp
iret
ds
daa
pusha
add
xchg
xchg
pop
cmp
jmp
add
jmp
and
jbe
push
xchg
rcl
clc
or
icebp
aam
movsb
jns
and
pushf
push
adc
loop
enter
out
dec
or
clc
pop
ljmp
sbb
rcl
mov
scas
push
inc
andb
outsl
jge
sub
adc
stos
hlt
ret
push
mov
dec
arpl
jge
decb
xchg
outsb
call
sbb
mov
mov
sbb
jle
jae
push
movsl
in
cli
sbb
or
xchg
lock
and
scas
xchg
xchg
rcrl
lds
add
xchg
mov
loop
test
daa
jg
jp
stos
rcrl
jns
inc
mov
test
mov
nop
sbb
dec
lock
call
xlat
dec
shr
std
leave
rolb
jno
add
stos
sub
shlb
out
imul
mov
push
mov
aaa
bound
xlat
movsl
loope
sbb
dec
int
dec
test
mov
xchg
push
cmp
adc
nop
inc
pop
out
dec
jmp
dec
jmp
xchg
pusha
mov
mov
rolb
sub
test
pop
dec
add
js
loope
jbe
mov
popa
pop
cltd
nop
and
outsb
and
xchg
ret
inc
add
adc
outsb
sti
faddl
insl
psrlq
mov
jae
aad
adc
jae
icebp
ds
fwait
mov
out
or
sub
jo
repz
inc
stos
cmp
cmp
xchg
in
dec
inc
adc
mov
and
or
les
sbb
pop
mov
xchg
mov
into
pop
fnstcw
lds
fwait
loopne
mov
xchg
and
or
mov
int
dec
push
adc
cmp
inc
mov
aas
leave
mov
inc
sahf
sub
stc
js
cmpl
pop
adc
xchg
inc
out
clc
xlat
push
jl
scas
pop
out
mov
adc
xor
hlt
lret
mov
xor
icebp
ljmp
adc
js
pop
dec
test
push
xchg
push
aad
sahf
cmp
pop
push
out
push
pop
mov
repnz
push
mov
push
jl
lcall
sbb
out
inc
xchg
lods
and
or
rcl
mov
xchg
inc
adc
ss
fs
dec
xchg
mov
aam
mov
mov
fistl
dec
movsl
pusha
nop
lret
lret
sbb
hlt
loop
adcb
sbb
test
push
popf
fcmovne
fwait
jp
pop
sbb
sbb
mov
mov
xchg
jns
or
in
cmp
add
loop
pop
sbb
inc
in
in
cmc
pusha
imul
xor
inc
cmp
pop
out
mov
or
fcomp
stc
sbb
clc
inc
and
iret
ret
push
stos
xchg
outsb
add
add
and
mov
les
inc
pop
lock
lea
push
mov
loop
xchg
aaa
ror
xor
push
push
xor
enter
stos
into
xor
int3
lods
lea
por
and
add
or
push
gs
fldenv
rolb
outsl
lret
push
push
jge
out
mov
adc
lret
aam
and
js
ret
icebp
push
xchg
cmp
loop
xlat
mov
sbb
lcall
xor
dec
faddl
push
cmp
jno
sbb
inc
push
sbb
dec
dec
sti
xor
jbe
sbb
scas
or
hlt
pop
movsl
inc
or
sarb
lea
inc
shlb
les
ret
clc
das
add
rcl
jns
mov
jle
sbb
movb
data16
outsb
cwtl
add
loopne
push
sahf
mov
aaa
std
push
xchg
fs
loop
div
dec
loopne
jb
pop
xadd
xor
sahf
add
cmpsl
push
in
pop
loope
inc
call
fsts
in
sbbb
das
addr16
test
push
into
aas
mov
lds
dec
bnd
adc
cli
cmp
call
push
xchg
sahf
or
icebp
pop
pop
shrb
dec
notb
jl
cli
sub
pop
shll
push
or
and
sub
vcvttss2si
mov
xor
xor
leave
push
fidivrl
fbstp
aas
das
cmpsb
sub
fdivp
repnz
insb
cmp
imul
push
out
xchg
adc
rcr
or
nop
cmc
sbb
je
xor
icebp
out
mov
inc
dec
mov
mov
adc
ljmp
sub
pop
mov
mov
xchg
loope
jge
repz
cmp
lods
and
cmp
int3
stos
sahf
add
mov
imul
xchg
out
push
cmpsl
fs
mov
push
stos
lods
data16
in
mov
fldcw
lcall
std
daa
fbstp
inc
push
pop
imul
dec
mov
inc
cmp
hlt
shl
fmuls
adc
pop
iret
or
aad
das
in
mov
mov
or
cmp
push
sbb
mov
jp
cmpsl
xor
mov
clc
and
ficoms
aam
out
insb
fwait
push
pop
repnz
sbb
inc
push
sub
xchg
not
movsl
lds
lahf
xor
sbb
in
in
scas
dec
popf
stos
jae
adcl
bound
xchg
xchg
xchg
enter
jbe
mov
jno
inc
sub
push
and
pop
iret
arpl
loop
fildl
mov
pop
lret
sub
ret
jno
adc
add
cmp
inc
or
dec
mov
leave
imul
mov
xchg
and
push
sarl
pop
insl
js
push
popa
jp
outsb
mov
sbb
dec
mov
popa
mov
int
je
test
add
jbe
push
fstpt
add
cli
mov
shl
pop
or
sub
xchg
push
aaa
add
into
sub
pushl
adc
push
cmp
shll
jae
add
push
jle
ret
je
gs
sbb
jbe
xchg
mov
fldl
in
hlt
ja
inc
xchg
ret
mov
mov
enter
clc
dec
pop
pop
ret
jecxz
xchg
cmp
push
lret
sbb
clc
aaa
aad
add
mov
cltd
push
mov
xchg
mov
push
lret
inc
mov
cmp
sub
mov
cli
in
hlt
sarb
xchg
cmp
popf
into
sbb
cwtl
js
push
cmp
in
gs
mov
int
dec
loop
lahf
jle
pop
xchg
inc
push
dec
ret
cli
fidivs
into
cwtl
jns
icebp
adc
int
iret
jmp
cmpsl
dec
mov
push
push
dec
int
scas
xorb
cmpsb
push
jae
or
aam
gs
lcall
dec
pop
mov
rclb
in
jae
mov
mov
out
mov
fistpll
ds
pop
insl
fadd
mov
xchg
dec
sbb
add
imul
jmp
iret
jb
mov
adc
push
add
loopne
jbe
push
jl
lret
cmpb
in
push
pop
mov
jbe
fcomps
test
lock
cwtl
clc
push
fwait
loopne
xchg
xchg
mov
pop
fisttpl
fildll
into
into
push
gs
cmpsl
repnz
adcl
jnp
sbb
xor
jbe
fs
in
cld
sub
sub
outsb
cmp
arpl
or
out
dec
rcl
inc
das
jp
out
ljmp
lret
inc
into
popf
xor
out
cmp
aas
in
scas
mov
lahf
loope
test
aam
dec
push
mov
mov
in
push
xchg
sti
and
mov
ret
mov
inc
sub
add
je
fdivrs
pop
xchg
es
and
adc
push
mov
sbb
gs
add
loopne
mov
jecxz
loope
inc
adc
inc
adc
mov
int3
jmp
lcall
cmc
dec
xchg
or
flds
lods
jp
inc
xor
and
push
mov
cmp
and
mov
sub
and
icebp
jle
popf
push
out
mov
scas
xlat
pop
jmp
push
inc
lods
add
jbe
popf
mov
sar
jbe
leave
repnz
add
hlt
iret
aam
push
sbb
dec
sti
inc
cmpsb
movsl
lea
push
or
jo
ljmp
cmp
xchg
shll
shlb
mov
movsl
pop
fbstp
ret
and
into
adc
arpl
lods
out
or
inc
or
fwait
dec
out
jp
div
add
out
jge
nop
add
and
std
mov
xchg
inc
push
test
jbe
or
ljmp
xchg
ss
and
sub
push
mov
xchg
xchg
ds
push
pop
mov
push
dec
xchg
arpl
mov
dec
lret
cs
flds
xchg
sarb
jge
int3
aas
add
test
std
pop
sbb
cwtl
or
out
cli
xor
jns
jge
gs
daa
ljmp
xchg
lret
imul
bound
cltd
enter
cmp
mov
add
lds
insl
xor
fbld
adc
pop
shlb
sub
lret
std
dec
xchg
pop
cmp
jnp
arpl
movb
mov
pusha
aam
mov
mov
arpl
dec
sub
popf
inc
sub
cmpsl
mov
cli
sub
add
inc
out
or
fcomip
test
or
js
scas
add
push
popl
pop
jp
dec
out
dec
push
data16
jb
into
dec
mov
fnstcw
sbb
dec
icebp
loop
dec
cltd
fcmovnu
test
arpl
es
pop
repz
push
add
stc
xchg
mov
inc
push
ljmp
lahf
adc
scas
subl
jg
mov
and
mov
scas
jle
and
fistpl
out
mov
mov
sahf
cmp
lret
ret
addb
xchg
mov
push
xchg
stos
push
add
into
sbb
xor
or
nop
pop
xor
jl
push
mov
shlb
cmpsl
cmp
out
and
je
dec
xor
or
mov
inc
pop
sarl
mov
int3
int3
mov
and
jns
mov
decl
es
int3
dec
stc
push
iret
pop
je
sub
aaa
pop
insl
lcall
cmp
inc
mov
dec
fidivl
out
or
xor
mov
stos
or
mov
or
das
test
jle
hlt
pop
out
lcall
dec
ficoms
out
out
jno
push
into
sbb
aaa
movsl
es
sbb
and
ror
push
lret
add
movsb
js
jnp
mov
icebp
test
rclb
jp
outsl
add
ja
xchg
popa
jo
enter
test
mov
mov
cmp
lret
xor
push
sub
pop
leave
out
cwtl
lods
cmp
into
out
outsl
xor
leave
nop
xchg
setae
and
lods
je
rolb
and
push
mov
aad
mov
inc
xchg
pop
jmp
in
aam
sarl
fiaddl
pop
mov
fsts
adc
and
push
movsl
sub
jge
xor
nop
mov
mov
push
pop
pushf
xor
sbb
es
pusha
cmp
pop
and
imul
xchg
mov
pop
inc
mov
dec
sbbl
pop
fisttpll
mov
push
jne
pop
push
sbb
adc
loope
arpl
jae
push
in
and
or
push
dec
jmp
mov
stc
push
sbb
adc
lds
mov
dec
decb
ds
cmp
lret
lcall
in
sbbl
ja
outsl
cwtl
mov
pusha
push
fisttpll
fadd
or
stc
jmp
add
jl
push
or
add
subl
daa
add
xchg
xor
inc
ror
ret
ljmp
sub
pop
jg
mov
dec
and
sti
mov
mov
scas
dec
or
adc
jmp
int3
pop
fs
dec
xchg
lods
inc
ljmp
shll
push
ja
jmp
out
enter
mov
outsl
js
scas
int
xchg
je
insl
js
out
inc
cmp
cmpsl
lods
or
mov
pop
je
dec
imul
jg
int
pop
stos
push
repz
std
rclb
aas
dec
push
or
push
test
sub
into
pop
jge
add
jae
dec
loop
push
sbb
addr16
inc
xchg
cld
out
mov
ror
clc
ret
xor
movl
enter
sbb
movsb
out
dec
int3
mov
push
cmc
fsubl
pop
daa
into
and
dec
popa
dec
shlb
cmc
mov
rcl
out
xor
testb
xor
jle
lock
push
or
cmpsb
pushf
sbb
adc
push
stos
xor
add
inc
jb
push
push
sarl
lds
repnz
pop
jae
mov
roll
push
jg
das
in
or
and
or
ss
pop
ds
fcom
and
out
in
leave
test
into
shlb
popa
pushf
push
and
sahf
mov
push
into
jb
or
fimull
xchg
mov
in
scas
inc
xchg
jno
jg
push
dec
int
jl
sbb
aad
lods
out
sbb
scas
stc
dec
push
popf
jecxz
push
es
in
movsl
and
dec
sbb
push
add
add
les
ljmp
mov
repnz
rcl
gs
push
cli
loopne
jne
test
clc
addb
sarb
outsb
push
test
xchg
inc
jg
or
jbe
insl
and
rclb
clc
stc
mov
mov
xchg
jp
out
inc
loop
lcall
add
pop
inc
rolb
pop
daa
movsl
dec
push
pusha
lret
mov
xlat
mov
jb
and
fadd
pop
pop
ljmp
mov
rcll
sbb
mov
sub
jg
loope
aam
into
jo
imul
jns
movsb
adc
filds
mov
repz
jp
push
xor
clc
daa
pop
sbb
das
popf
push
mov
mov
into
out
cltd
ret
popa
xchg
ljmp
push
xchg
or
mov
or
pop
scas
fdivs
cmp
or
dec
adc
push
ljmp
subb
adc
adc
sbb
pop
mov
cmp
movb
jg
xor
stos
repnz
inc
je
mov
dec
jo
sbb
movsb
push
xchg
xchg
xchg
inc
into
cwtl
stos
daa
repnz
leave
ret
pop
mov
fisubs
outsl
sub
inc
push
loope
not
std
es
jmp
inc
dec
mov
test
or
cmpsb
or
sahf
inc
adc
dec
arpl
mov
push
pushl
shlb
setle
mov
add
sbb
repz
movsl
lods
add
lret
jo
in
pushw
jl
cmp
ja
push
ja
fisubs
mov
cmp
lods
outsl
inc
outsb
sbb
test
add
sbb
sbb
sub
test
mov
je
cmp
out
pop
or
inc
aaa
out
jl
aam
xor
mov
rcr
xchg
adc
push
add
lret
not
mov
cli
icebp
mov
add
out
jns
test
lcall
sbb
push
add
fnsave
lock
into
cmp
call
popf
jg
mull
test
lea
xor
adc
mov
lret
cmp
js
rclb
inc
xchg
cli
daa
jecxz
aam
adc
pop
test
ljmp
adc
push
ds
in
push
sbbb
adc
push
test
dec
in
push
jge
pop
std
sub
xor
sahf
pop
out
testb
inc
xorb
jae
cwtl
mov
test
or
enter
jns
adc
sbb
jmp
test
pop
push
xor
fcoms
mov
jae
or
lds
inc
jge
jo
push
into
mov
fs
sub
das
sarb
xchg
ja
in
sahf
ficompl
adc
push
jbe
mov
sub
push
addr16
fwait
and
mov
hlt
enter
cld
cmp
jecxz
or
xchg
or
jge
fsub
imull
and
sub
shrl
popa
pop
roll
adc
xor
lret
testl
outsb
push
mov
int3
mov
out
pushf
int
flds
mov
jp
inc
xchg
and
cmp
pushw
call
pop
cmp
je
imul
sub
mov
push
push
xlat
jbe
mov
test
dec
enter
aam
xor
lret
jecxz
push
fcos
sbb
scas
out
sbb
dec
stc
xchg
mov
dec
movsl
and
pop
cmpsb
xor
pop
daa
cli
inc
aas
push
imul
int3
cwtl
sbb
sbb
push
cmp
fdivrl
rorb
adc
out
jnp
frstor
jne
out
ficomps
or
mov
adc
movsb
cmc
dec
add
push
sub
aaa
pop
mov
add
mov
rcl
sahf
dec
loopne
mov
fcomp
cmp
adc
fnstcw
pmullw
adcb
pop
iret
pop
fisttpll
jnp
enter
add
xchg
insl
and
lods
iret
or
arpl
ret
mov
xorl
fucom
add
jne
jmp
sub
cmp
push
int3
cwtl
or
rorl
xor
adc
cmpsl
mov
xorb
jp
mov
data16
xchg
out
js
daa
or
xor
push
push
in
add
adc
into
sbb
imul
pusha
jne
xchg
outsb
filds
and
cwtl
cmpl
test
imulb
xor
ret
pop
out
mov
in
inc
inc
aam
sub
loopne
into
push
adc
fnsave
lret
leave
int3
pop
or
fwait
cmp
in
jnp
leave
movsl
xchg
sti
and
idivb
pop
sub
loopne
andb
xchg
cmp
into
mull
ds
add
push
out
xor
pop
int3
clc
xchg
cmp
shrl
xchg
dec
dec
mov
or
jae
dec
mov
fdivl
call
test
bound
cli
mov
adc
mov
inc
andb
test
mov
movsl
hlt
push
or
mov
sub
mov
mov
mov
adcl
sub
xor
mov
test
adc
pop
arpl
sahf
and
dec
repnz
lret
in
out
js,pt
es
jp
xchg
es
lcall
iret
dec
mov
mov
mov
imul
fsubs
fs
out
into
cli
testb
scas
das
test
mov
push
inc
scas
lcall
mov
pop
icebp
mov
fcmovb
clc
and
sub
loope
cmp
inc
ret
mov
fbld
xor
or
in
outsb
imul
loope
sbb
xor
mov
lods
cmp
jo
jns
dec
mov
and
cmp
ja
pop
xor
fcompl
in
js
xchg
test
repz
push
popa
les
push
jle
add
adc
xor
aam
fmuls
mov
fs
ss
or
xchg
test
int
jp
std
mov
in
dec
push
or
out
lds
mov
cmp
mov
adc
xorb
int3
cmp
push
stos
leave
lret
xchg
pop
imul
mov
jae
out
xor
subl
out
mov
adc
adc
repnz
xchg
jno
into
sarl
ror
popf
adc
push
push
shr
shlb
sbb
adc
out
mov
out
insb
mov
adc
test
add
mov
aam
inc
jl
lods
scas
rolb
das
lret
in
testb
xchg
popf
hlt
insl
mov
fwait
pop
lods
movb
sbb
jb
imulb
lret
sbb
add
sti
cmpsl
fsubrl
sbb
push
jecxz
leave
shrb
xchg
xchg
mov
add
push
std
repz
aam
push
arpl
lea
fwait
in
or
jb
xor
sbb
sbb
pop
mov
je
add
outsl
cmp
inc
fcmovb
xlat
cmpsl
lahf
rclb
jecxz
scas
leave
xchg
sub
inc
test
push
int3
hlt
pop
xchg
mov
jbe
in
data16
sub
mov
iret
push
adc
fsub
mov
dec
aaa
roll
xchg
adc
push
jnp
aaa
mov
int3
push
mov
add
jbe
add
data16
pminsw
adc
test
into
push
add
ret
out
xchg
push
mov
dec
jae
out
mov
pop
sub
xchg
stos
xor
shlb
and
and
sbb
add
mov
add
outsl
sub
dec
call
adc
je
loop
sub
dec
adc
push
cwtl
andl
cmp
js
push
xor
fwait
lret
insb
pop
outsb
mov
mov
mov
aad
mov
jns
or
test
aam
dec
test
ljmp
jns
mov
dec
int
push
fildll
sub
xor
or
mov
or
cltd
repz
dec
movsb
push
popa
dec
insb
adc
xchg
jl
clc
cmpl
push
add
lret
mov
nop
xchg
lds
xchg
add
cmp
rorl
mov
mov
dec
je
test
push
push
mov
dec
pop
call
dec
mov
adc
lods
pop
pusha
cs
sbb
rolb
adc
sub
push
das
and
fcoml
ljmp
in
sub
int
mov
sbb
xchg
mov
or
jecxz
jns
inc
lods
mov
pop
adc
hlt
insb
xchg
stos
scas
rorl
adc
adc
into
dec
int
jbe
sti
and
rolb
data16
ss
inc
push
mov
mov
dec
or
stos
adc
and
in
bound
xor
adc
in
shlb
imul
push
js
or
pop
mov
cmp
jbe
add
sub
and
sub
std
push
push
xchg
mov
outsb
xchg
inc
js
xlat
int3
rclb
sbb
cltd
push
scas
popf
ss
js
ficoms
xlat
adc
push
jae
pop
mov
ljmp
idivl
sub
xor
lret
ja
aam
loop
sub
shr
repnz
push
aas
aad
or
adc
push
icebp
mov
sub
mov
fiaddl
jns
add
out
add
xchg
arpl
adc
pop
mov
add
test
and
leave
mov
rorb
mov
xor
data16
push
loopne
jbe
pop
xlat
sbb
pop
push
pop
xor
fs
lods
stc
in
cmp
inc
push
sub
mull
pushf
push
push
add
dec
pop
ss
jb
add
pop
adcb
test
push
dec
fisttpl
add
cmp
leave
mov
push
lods
pop
mov
sbb
dec
sub
sahf
and
clc
sbb
add
xlat
sub
outsb
inc
push
lret
mov
leave
in
nopl
mov
es
jp
nop
pop
sbb
arpl
dec
sub
push
xchg
jmp
lods
bound
insb
cmp
arpl
imul
shlb
jmp
sbb
jns
lods
aad
add
js
lods
xchg
push
iret
jl
cmp
ljmp
int3
mov
mov
push
mov
push
stc
bswap
adc
sbb
fmul
and
dec
sub
inc
es
into
pop
jge
stos
aad
in
pusha
sub
sub
inc
add
adc
cmp
scas
push
divl
sub
shll
dec
jae
insl
subl
push
cmp
aam
jp
movsl
inc
dec
repnz
idivb
pop
mov
push
pop
sbb
clc
outsb
push
into
or
shlb
movsb
imul
mov
sub
and
stos
mov
pusha
movsl
jno
leave
and
stc
adc
sub
mov
int
rorb
xchg
dec
sub
inc
cmpsl
test
jl
jecxz
push
mov
nop
in
or
cltd
jbe
jp
stos
imul
iret
ret
add
fs
roll
pop
sub
sbb
mov
push
cs
out
xor
mov
repnz
jmp
push
jg
push
cmpb
push
mov
push
jb
adc
and
mov
add
adc
sbb
gs
dec
cmp
jo
sbb
xchg
or
push
pop
or
movb
jno
fimuls
dec
stc
add
leave
stos
xchg
test
into
xor
movsl
xchg
bound
inc
mov
jle
jecxz
test
or
in
inc
sbb
rcl
push
sbb
shll
or
pop
xchg
push
testl
sub
mov
or
pushl
mov
mov
cwtl
add
mov
xor
push
test
pop
jno
jo
rolb
inc
shlb
hlt
jmp
lcall
xchg
leave
into
repz
cmp
cmc
xor
arpl
pop
add
mov
cmp
sub
jb
and
push
jle
or
imul
dec
sbb
loope
cmpsl
inc
jmp
xor
mov
movb
mov
push
stos
dec
es
leave
inc
dec
mov
sahf
mov
repz
jge
adc
movsb
fwait
ja
jns
add
gs
popf
test
scas
sub
shrl
adc
jae
pop
lahf
pop
sbb
fstpl
enter
jbe
jbe
faddp
je
addb
pop
dec
jo
adc
push
push
jle
popa
jmp
fucomip
in
sbb
pop
push
je
sarb
xor
lcall
cmpsl
adc
out
or
cmp
in
test
jecxz
pop
ss
movsl
add
ds
mov
cmp
sub
enter
mov
imul
mov
adc
mov
shrl
sbb
dec
jb
pop
adcl
pop
add
jecxz
or
jnp
cmp
mov
popa
es
jmp
sar
dec
xchg
push
adc
pop
cld
xor
test
enter
movsb
mov
test
sub
mov
iret
pop
jbe
mov
ret
int
lock
aam
and
cmp
int3
cmc
nop
push
cmpsl
push
xchg
out
xchg
fmuls
je
mov
lahf
ljmp
push
int
jno
cmp
pop
mov
std
xor
cmp
lcall
and
cmpsb
xor
dec
and
pop
xchg
push
pop
fisubl
mov
xchg
mov
xchg
mov
mov
pop
fldt
notl
pop
rcl
loope
popl
mov
frstor
mov
sub
push
xchg
push
sbb
xor
mov
ja
call
adc
or
inc
sbb
lret
lcall
ret
push
ss
nop
push
mov
sub
stc
test
add
sub
mov
sub
push
cmc
pop
cli
int3
repz
movsl
js
mov
ret
ror
push
imul
inc
fnsave
or
mov
push
or
mov
lahf
nop
mov
pusha
scas
pop
mov
js
push
add
aaa
jo
xchg
mov
sbb
jae
pusha
ret
inc
xor
mov
or
jl
pop
and
mov
xor
mov
add
sarl
lret
pop
sub
dec
push
lret
and
ss
pop
and
push
rcll
add
imul
or
adc
in
mov
data16
and
jns
jecxz
cmp
cmp
sub
lret
out
add
cmp
mov
sub
push
pop
fcmovnb
sbb
es
pmaxub
out
xchg
dec
outsl
movsl
fwait
or
cmpsl
push
pushf
or
incb
js
inc
jecxz
in
mov
mov
lods
lock
inc
jne
mov
mov
xchg
rol
lret
data16
mov
rol
out
rolb
adc
aaa
pop
nop
mov
jecxz
gs
adc
imul
out
mov
or
xor
mov
xlat
rcr
mov
mov
arpl
push
cmpsl
out
and
xor
adc
inc
adc
loopne
es
int
push
push
adcl
mov
pop
ja
lds
leave
aaa
es
lahf
push
lcall
out
stos
and
and
jae
sub
xchg
lret
pop
shrl
add
stos
jbe
sbb
aam
fwait
xchg
fildl
int
mov
imul
ret
cmpsl
lret
repz
outsw
ror
mov
andl
hlt
inc
data16
ds
int3
popa
movsb
xchg
lods
ja
lret
mov
mov
pop
jge
jmp
cmp
xchg
aas
in
xor
test
push
or
mov
aad
repz
sbb
loope
aaa
lods
add
outsl
mov
xchg
xchg
xchg
bound
pop
rorb
pop
sub
push
xor
dec
das
xchg
imul
mov
into
addr16
pop
mov
lea
mov
stos
jns
mov
sub
lods
xchg
js
dec
bound
pop
dec
das
lcall
or
pop
iret
ret
adc
cli
lods
out
aas
dec
xchg
add
and
jns
out
jae
push
mov
jne
aas
mov
jmp
lods
mov
add
mov
subb
xor
cmc
or
dec
cmp
adc
sahf
leave
in
mov
cmpsb
adc
lds
cwtl
ret
dec
lcall
out
dec
scas
fdivs
je
sub
jle
adc
aas
mov
test
faddp
add
mov
leave
xchg
out
and
clc
imul
dec
jl
xor
ja
cmpsl
jmp
push
js
int3
outsl
lret
not
push
lret
cltd
int
xchg
and
mov
xchg
push
adc
inc
in
mov
mov
sarb
lret
lods
arpl
mul
imul
push
jbe
int3
add
push
cli
pop
push
pusha
mov
fcompl
test
add
pop
push
hlt
out
sub
add
jae
mov
add
js
leave
lods
stos
jmp
sbb
jbe
xorb
and
out
pop
lcall
mov
nop
push
int3
leave
shlb
enter
fs
int
or
test
jg
add
cltd
js
cmp
out
jge
lods
cld
mov
enter
fisubrs
sbb
cld
lret
cmpsb
fldt
add
pop
xchg
mov
and
repz
push
mov
movsb
movb
cld
scas
sub
mov
jne
dec
dec
cltd
inc
fimuls
aam
shl
nop
lret
dec
sbb
scas
adc
mov
xacquire
ljmp
adc
mov
inc
and
push
fcom
adc
addr16
jno
dec
and
jbe
xchg
dec
movsl
fwait
jae
fbstp
stos
mov
les
adc
out
dec
xlat
pop
das
sbbl
int3
cmp
gs
jo
push
cmc
negl
xor
inc
mov
xchg
jno
fs
jmp
mov
data16
and
int
leave
test
add
int3
sbbl
mov
insl
sub
testb
and
out
mov
xchg
push
ss
add
xchg
les
rorb
or
movsl
cmp
daa
repz
aam
jle
fs
adc
fstl
mov
rcl
add
out
sahf
nop
xor
stos
hlt
mov
dec
mov
cli
pop
adc
pop
or
notl
je
lods
jl
outsb
xor
jle
psubusb
sub
push
lods
pop
add
pop
adc
cmpsb
mov
push
jmp
std
mov
out
imul
xchg
push
cwtl
mov
pusha
xor
xchg
mov
cmp
pop
push
lds
mov
ds
iret
xchg
pop
sub
cmp
fisttpll
scas
mov
xchg
mov
icebp
push
rolb
xor
mov
into
shrl
scas
mov
aaa
jg
cmpsb
pop
xchg
dec
mov
ror
and
mov
xor
add
pop
out
in
adc
pop
fwait
lds
mov
xacquire
jne
adc
test
pop
into
es
mov
les
aad
lret
in
push
mov
cmc
lcall
jge
iret
movsb
push
and
jl
enter
fildl
jno
lock
fildll
inc
insl
mov
repnz
movsb
push
std
pop
sub
xchg
sbb
movsl
fwait
mov
pushf
sub
test
adc
cmp
mov
xor
xchg
sub
push
adc
push
pop
push
push
mov
dec
sbb
or
cmp
outsb
enter
xor
pop
dec
movb
add
js
mov
or
dec
fsts
cld
cmpsl
push
mov
shll
and
dec
push
cmp
sbb
or
mov
sahf
pop
mov
pusha
mov
dec
fwait
or
mov
cmp
xor
lahf
ret
add
pop
aam
inc
sti
adc
pop
in
loope
jp
bound
mov
mov
cs
and
addr16
fldcw
dec
xor
faddl
mov
xor
jmp
adc
das
jmp
jle
negl
arpl
ja
pusha
adc
mov
ficoms
popf
sbb
mov
xor
in
js
lods
sahf
mov
sub
arpl
add
jge
sbb
out
aam
mov
fidivs
lret
dec
mov
dec
out
lret
pop
pop
jb
daa
and
lock
push
orps
sub
mov
cld
sbb
and
stc
cs
dec
add
lret
aam
cmp
testl
aaa
jl,pt
add
test
faddl
fdivrs
mov
mov
lcall
nop
inc
fdivr
lret
push
lea
add
mov
and
cmp
xchg
sub
arpl
clc
rcl
fcmovnb
lds
into
jl
xor
imul
fdivrs
cwtl
jge
xchg
movsl
jo
enter
js
or
mov
out
jnp
or
ss
stos
mov
mov
xor
iret
add
xchg
in
imul
mov
mov
bound
addb
movsb
xor
cld
dec
inc
add
mov
aad
pop
ror
rcl
inc
push
mov
jbe
dec
scas
sbb
imul
ljmp
adc
into
xchg
cld
std
cs
sbb
rcrl
mov
cltd
stos
addr16
xlat
add
in
xchg
js
mul
mov
mov
mov
pop
jle
or
add
in
shll
cs
sub
into
in
aas
nop
push
pushf
jge
adc
sub
cs
dec
add
iret
js
in
in
into
rcll
std
icebp
jae
or
adc
mov
lret
movsl
addr16
dec
scas
roll
loopne
pop
mov
adc
in
dec
pop
or
in
test
fwait
out
cltd
pusha
jno
popa
pop
mov
adc
push
cmp
add
das
jmp
add
fwait
pop
fnstsw
xchg
icebp
in
iret
loopne
ja
jl
das
and
int3
mov
test
scas
lahf
into
sarl
popa
xlat
sbb
mov
scas
and
pop
aaa
lea
mov
cli
in
pop
xchg
subb
pop
inc
cmp
mov
jae
rolb
pop
lret
inc
aaa
repz
addr16
arpl
push
cltd
mov
int
push
test
das
mov
mov
bnd
add
jp
out
stos
call
mov
adc
xchg
cwtl
dec
rcl
pop
bound
jbe
adc
cmpsb
push
jae
xchg
mov
or
lret
sbbb
arpl
inc
mov
cld
pop
insb
jl
stos
mov
xchg
movsl
into
outsl
dec
call
push
imul
sbb
xor
sub
repz
mov
out
lods
mov
pop
mov
pop
xchg
lea
mov
testb
je
andl
mov
inc
sub
in
pop
mov
addr16
lds
out
inc
push
xchg
jmp
lods
call
mov
adc
and
inc
jns
xchg
lods
mov
das
pop
leave
fs
cmp
xor
mov
inc
pushf
rcll
mov
lret
jmp
cmp
mov
mov
jb
add
dec
jne
test
movsb
aaa
pcmpeqd
pop
sub
mov
push
mov
fs
decl
mov
or
mov
lods
loopne
xor
sbb
dec
std
xchg
mov
jne
out
cwtl
cmp
ror
in
mov
sub
or
enter
js
push
mov
pop
mov
in
xor
jle
mov
push
mov
movsb
add
roll
lcall
jbe
mov
sub
push
inc
dec
mov
cwtl
xor
ljmp
mov
ja
test
sub
add
out
std
roll
sahf
repz
jecxz
cmpsb
add
pop
lret
cmpsl
dec
shrb
out
shl
xchg
xor
jb
mov
outsl
jl
rorl
repnz
stos
push
movsl
xchg
shlb
out
mov
mov
dec
movsb
mov
xchg
aad
sbb
push
add
out
xor
and
incb
jno
pop
fwait
lahf
int3
test
or
inc
xor
scas
in
aaa
add
cmp
xchg
stc
imul
xchg
pop
push
xor
lret
iret
or
divb
in
inc
enter
jns
rolb
lret
mov
out
mov
sub
movsl
movsl
gs
and
aam
jmp
pop
pop
pop
push
sub
adc
popa
inc
lret
int
lret
fcmovnbe
push
pusha
aaa
jo
test
xchg
loope
loop
sub
out
cmp
inc
add
ss
mov
das
and
sbb
insb
je
rcl
jp
cmpb
pop
pop
cwtl
push
cmp
repnz
fcom
fidivs
movsb
cmp
jbe
mov
sbb
and
out
mov
data16
mov
cwtl
xchg
daa
push
jg
dec
xor
sbb
pop
mov
ss
into
inc
mov
add
ds
testb
xor
inc
pop
clc
sbb
arpl
pusha
xor
fisubs
xchg
xor
xchg
out
movsb
cmpsl
into
and
mov
test
cmp
aad
lret
js
push
nop
test
dec
xchg
inc
movsb
lock
roll
jp
orl
divl
mov
dec
mov
xor
mov
or
sahf
jne
not
sbb
std
or
mov
inc
inc
cwtl
sbb
fs
adc
je
pop
cli
inc
sbbl
adc
in
ja
jmp
pop
jg
add
jmp
mov
ja
mov
lahf
lds
outsb
rolb
mov
imul
ror
push
std
es
xchg
aad
adc
ror
xchg
repz
add
cld
push
push
cmp
arpl
lcall
jo
addl
cmp
jg
mov
cwtl
jecxz
dec
rorb
int3
xchg
sbb
iret
mov
mov
mov
faddl
sub
jp
sbb
xor
jne
mov
sbb
xchg
sub
dec
xchg
int3
insb
loopne
inc
add
stos
jo
jb
not
loop
shlb
cmp
ret
mov
sbb
repz
mov
leave
call
mov
xchg
pop
dec
mov
sbb
jle
addr16
or
jne
int3
sbb
lret
mov
stc
mov
mov
sti
mov
jl
out
rcrb
loope
decl
inc
mov
cld
inc
mov
movsl
jns
js
out
hlt
cmp
dec
and
lock
lods
fwait
roll
popf
test
add
jae
ss
cld
loope
cmc
call
inc
cmp
dec
imulb
gs
rcl
pop
or
out
or
stc
test
daa
fnsetpm(287
sub
inc
sbb
dec
icebp
lret
push
xor
inc
cs
into
outsb
sbb
cmc
or
fs
lds
mov
jp
fmuls
fnsave
clc
mov
mov
sub
mov
jp
decb
popf
sarl
popa
mov
push
pusha
pop
cli
jns
push
xchg
adc
adc
dec
enter
mov
dec
pop
aam
ret
xor
imulb
jno
stos
into
enter
push
mov
adc
notl
or
bound
sub
sbb
imul
mov
test
je
or
mov
int
mov
rcl
ret
jge
jo
inc
ljmp
cmp
in
scas
out
lret
rcll
sub
mov
jmp
test
dec
xor
push
jle
jle
aam
mov
pop
test
test
mov
cmp
xor
insb
jae
lret
clc
push
sti
push
pop
xchg
cmp
or
out
out
jb
mov
loope
subl
into
cmp
rcl
mov
divl
fdivrs
push
sbb
pushf
sbb
dec
test
in
add
pop
pusha
dec
xlat
cmp
push
mov
rclb
pusha
cmpb
pop
lret
mov
xchg
jbe
icebp
stos
cs
ds
ljmp
push
arpl
test
mov
ret
mov
inc
js
lahf
fwait
stos
iret
cmp
test
popa
dec
and
mov
out
sbbl
push
call
roll
and
mov
adc
icebp
aam
sarb
lcall
mov
mov
shl
fwait
out
pop
xor
pop
push
andl
out
jecxz
in
pop
loop
mov
icebp
xor
adc
dec
xor
lods
and
ja
in
mov
xchg
cwtl
pop
pop
test
jmp
pop
cmpsl
faddp
adc
jne
cwtl
gs
call
orl
cmpsb
mov
fwait
subb
je
dec
jp
mov
into
rcrb
pop
fisttpll
aam
cmp
pop
or
and
push
cwtl
mov
add
cmpsl
and
imul
stc
push
pusha
cmpsb
dec
aaa
sub
dec
sarb
sub
sub
or
lret
fsub
mov
outsb
cmp
sub
mov
fwait
add
insb
aam
xchg
mov
mov
add
rolb
add
jbe
aad
add
pop
rcrb
psraw
and
sub
pop
stos
xchg
sbb
jno
loopne,pt
xlat
pop
movsl
xor
insb
push
mov
outsb
bnd
push
ljmp
iret
mov
gs
sbbb
subb
jo
inc
lret
push
out
fimuls
adc
mov
fldt
stos
lds
pop
cmc
push
add
movsb
in
push
push
ret
shlb
xchg
ja
lods
mov
sub
xor
int
scas
pop
arpl
push
insl
jmp
adc
and
mov
mov
pop
jbe
jno
inc
lret
cmp
scas
mov
cltd
jnp
pop
and
sar
jl
repz
jmp
addr16
jg
out
and
and
adc
mov
into
push
add
jbe
jo
mov
loopne
cmp
in
orl
lods
mov
cs
add
cwtl
push
pop
or
and
je
mov
fadd
jmp
mov
dec
cmpsb
sub
inc
cld
jp
cmp
fldt
sub
mov
inc
les
xchg
inc
lock
dec
add
idiv
lds
mov
gs
int3
xchg
mov
add
fsubr
cmp
jne
popf
int
sbb
repz
out
add
fidivrl
inc
lcall
pop
lret
adc
cmp
mov
les
aad
push
fwait
mov
rcl
pop
mov
xchg
jnp
cmp
jecxz
fwait
addr16
sbb
or
xchg
inc
xor
push
and
mov
jle
outsb
add
in
aas
addr16
lds
aam
jle
jae
xor
sahf
inc
adc
clc
divb
cmpsb
xchg
jp
lret
push
pop
push
mov
test
aad
arpl
int
jmp
lods
push
mov
inc
das
out
xor
jp
or
movsl
mov
adc
pop
or
das
pop
push
or
popa
aam
cmp
inc
scas
out
add
push
mov
mov
mov
xchg
jge
addb
aaa
insl
push
dec
mov
cli
mov
pop
test
adc
in
aad
push
xchg
mov
js
add
xchg
mov
dec
les
mov
adc
jnp
call
in
scas
in
mov
xor
mov
cld
insb
notb
xchg
data16
fmul
add
out
rcrb
dec
and
dec
not
add
int3
fcmovbe
add
pusha
sub
rolb
mov
stc
cmp
scas
call
push
push
mov
lret
int3
cld
icebp
das
dec
pop
sbb
movsl
fst
and
les
out
pop
dec
fistps
bound
insb
lods
mov
xchg
push
and
mov
push
cmpsl
out
pop
pop
mov
fcmove
pop
in
add
jl
arpl
cmp
push
mov
addb
sarl
xor
adc
imul
pop
adc
lret
mov
into
in
xor
outsb
xchg
lahf
dec
push
divl
and
push
xchg
adc
ret
clc
push
adc
fnstenv
jecxz
mov
adc
test
jecxz
dec
cmc
filds
mov
int3
jns
fld
jmp
push
arpl
mov
lock
push
sbb
adcb
mov
roll
push
xchg
mov
sbb
pop
jns
push
inc
mov
aas
cli
or
cltd
leave
dec
loop
cld
lret
pushf
das
mov
call
xor
stos
sbb
cmc
push
ja
cltd
aad
outsl
jl
shll
mov
adc
fsubrs
xor
rcl
out
std
inc
nop
sahf
inc
jle
xor
jmp
outsb
rorl
add
into
std
or
jne
mov
popa
cmp
and
and
or
lret
xchg
in
push
xor
pop
sub
test
pop
sub
and
pop
mov
add
adc
jg
cmc
jae
cmp
mov
xchg
pop
cli
aas
mov
insl
es
inc
sub
cmp
mov
mov
mov
iret
mov
jecxz
cmpsb
inc
fwait
adc
push
push
push
stos
bound
cmp
shrb
lcall
insl
or
jle
cmpsl
ret
js
push
inc
iret
sub
clc
jmp
std
pop
sti
js
test
outsb
sbb
mov
sbb
lret
jae
in
push
mov
movsb
inc
insl
push
test
and
sbb
pushf
loop
outsl
ja
ja
sbb
subl
stc
adc
fmul
fsubl
movsb
cmp
fcmovne
jmp
and
xchg
popa
add
add
mov
sub
data16
fbstp
xchg
jge
out
es
jp
ficomps
jb
adc
inc
cli
and
into
or
dec
inc
fs
and
lods
dec
insb
rcrl
fmul
mov
fidivs
or
mov
or
mov
xor
dec
xor
mov
rcrb
lret
frstor
cmpsl
add
cmp
repnz
adc
lods
push
arpl
les
cmpsl
ja
clc
fs
aad
in
repz
push
jge
sahf
rcrl
mov
ljmp
push
arpl
dec
add
xorb
scas
sub
mov
sub
shrb
mov
add
xorl
cmp
push
fcmovnbe
jmp
and
sbb
pusha
sbbl
cld
es
sub
es
dec
adc
addr16
sti
lret
loope
push
push
push
pop
mov
or
je
pop
sbb
es
pop
aaa
rcrl
imul
std
push
dec
movsb
adc
pop
jmp
pop
fmuls
add
mov
fs
cltd
fistpll
mov
jbe
or
pop
mov
imul
out
loopne
cmp
jnp
add
mov
mov
mov
ret
mov
inc
movmskps
imul
and
daa
sub
push
ret
or
add
data16
push
mov
sbb
shll
shr
mov
push
shll
into
lahf
hlt
mov
not
add
sbb
push
stos
ret
or
pop
insl
sahf
pop
mov
daa
fistpll
jbe
or
dec
nop
xchg
mov
dec
stc
push
ss
inc
push
hlt
and
jp
imul
mov
mov
sbb
mov
and
mov
arpl
out
ret
sub
push
add
in
dec
adc
cmp
push
ja
sbb
push
cmp
notl
or
and
mov
xor
popa
repz
repz
jmp
sub
jo
arpl
or
mov
das
rsm
repnz
inc
fidivl
jl
sar
xchg
cmc
push
pop
cmp
mov
stc
fidivrl
gs
xchg
in
dec
xor
rorl
adc
mov
pop
push
push
pop
divb
xchg
adc
push
pop
sub
mov
into
push
mov
insl
lahf
push
or
add
push
mov
mov
inc
sbb
add
rolb
xor
je
lret
and
call
or
push
and
ffreep
scas
mov
or
and
stc
adc
decb
mov
and
push
cmc
mov
and
loope
iret
push
ss
push
mov
push
int3
divl
and
or
stos
sbb
cmpsl
arpl
dec
add
ret
inc
sbb
xchg
sbb
and
jle
aaa
ljmp
fisubs
adc
into
clc
mov
popf
mov
pop
and
add
aaa
shll
xor
sbb
sbb
push
or
adc
sub
pushf
lret
dec
pop
mov
rcrb
addb
lock
cmpsw
cwtl
stos
aaa
fcmovnb
xadd
xor
lcall
out
mov
xor
mov
fwait
mov
mov
lret
add
shll
jmp
loope
cmp
xor
cwtl
add
mov
lret
pop
lahf
imul
lea
ficompl
mov
pop
mov
mov
std
stos
rcl
nop
fsubrs
ljmp
incl
sti
stos
mov
pop
sbb
dec
popa
pop
cmpsl
fwait
jmp
cwtl
jg
jnp
sbb
lods
imul
lret
cltd
test
leave
mov
push
aaa
test
rcll
or
xchg
dec
cmpsl
test
adc
inc
insb
fwait
movsb
out
movsl
repnz
inc
lret
fdivrl
mov
shl
sti
cld
push
mov
fprem1
jge
mov
jae
or
jne
and
test
andb
push
xor
sub
mov
in
popf
in
jbe
hlt
aam
das
js
lods
xchg
rcrb
or
inc
out
in
fcoml
jle
sti
dec
pop
lds
and
add
jne
xchg
sub
xor
pop
mov
into
push
mov
mov
jmp
stc
cmpsb
mov
fnstsw
loopne
push
jno
push
add
aam
imull
mov
mov
ja
xor
enter
adc
mov
jb
xchg
cmp
stc
pop
mov
mov
jl
outsb
out
pop
jo
aaa
gs
lret
das
aaa
mov
sbb
push
sub
xchg
xlat
enter
pop
leave
hlt
fstps
sbb
inc
add
cld
imul
xchg
jns
out
xchg
stos
sub
iret
mov
xor
mov
scas
dec
xchg
rol
rclb
jno
push
inc
inc
int
adc
xor
lcall
sub
mov
and
mov
ja
jne
cwtl
add
mov
mov
jg
outsl
sbb
mov
jne
mov
lret
adc
inc
push
ja
nop
into
cs
xchg
cmp
decl
lds
pop
xlat
outsb
iret
push
lods
cmp
movsl
dec
outsl
mov
cmp
lret
jno
icebp
mov
nop
pushf
mov
pandn
test
sub
in
and
push
insb
mov
fcoml
pop
push
mov
lea
and
loopne
or
leave
test
mov
xchg
adc
cmpsl
mov
test
iret
sti
rcl
out
push
imul
cmc
dec
iret
scas
mov
pop
shll
jae
cmp
out
jle
hlt
call
jnp
iret
cmp
or
adc
loopne
sbb
out
stos
outsl
std
roll
inc
and
out
adc
cwtl
mov
rcr
movsl
mov
fst
data16
pop
adc
btrl
repnz
inc
xchg
dec
ret
in
mov
push
mov
adc
add
jp
cmc
arpl
mov
push
idivb
adc
mov
out
aad
pop
loopne
xchg
mov
pop
sbb
add
jmp
iret
flds
cwtl
xchg
adc
adc
stos
push
mov
cmp
xchg
ds
js
repz
fcoms
mov
arpl
inc
push
jae
push
imul
inc
push
mov
int3
xor
sbb
fwait
and
ret
std
insb
dec
cmp
pushf
pop
push
outsl
sub
test
std
hlt
xchg
mov
into
xor
jno
popf
out
filds
sbb
out
mov
mov
pop
xor
ljmp
rcl
mov
push
arpl
xor
add
and
jne
lahf
mov
sub
aam
test
jecxz
xor
jbe
add
mov
mov
push
mov
dec
adc
push
lods
fbld
int
push
pop
test
xchg
rcrb
lods
xor
mov
shufps
divb
loop
aam
aad
xrstors
andb
dec
out
jg
fs
stc
sbb
imul
sbb
repnz
sub
mov
mov
xor
in
cmpl
jg
ss
push
add
dec
mov
xstore-rng
cmpsl
push
std
sbb
daa
shl
mov
movsb
mov
xchg
das
ficompl
mov
xor
push
xor
mov
imul
les
xchg
xor
int3
pop
cmpsb
push
into
mov
cld
mov
xor
imul
movsl
addr16
jp
lds
inc
dec
call
adc
or
sbb
pmullw
sbb
cmp
jecxz
addb
cmp
pop
rclb
mov
lret
xor
shl
sub
mov
jae
adc
pop
mov
mov
push
xchg
adc
icebp
enter
push
daa
in
and
cwtl
push
xchg
popf
lret
jae
xorl
dec
adc
xchg
mov
sbb
sahf
mov
jle
repz
stc
shlb
data16
in
outsb
mov
leave
mov
and
enter
adc
cmp
insb
inc
lret
popa
xor
push
push
mov
pop
mov
fmull
icebp
pop
stos
mov
pop
dec
mov
jnp
sbb
daa
xchg
xchg
cltd
inc
pop
cmp
es
mov
mov
jecxz
imul
pop
cmp
mov
and
cwtl
mov
xchg
pop
jge
jecxz
mov
aaa
fadds
adc
out
insb
iret
std
push
jnp
fmuls
pop
xchg
jmp
xchg
xor
inc
lock
push
jo
push
js
sub
push
dec
aas
inc
cmp
sbb
fcom
dec
pushf
icebp
lret
or
adc
mov
pushf
mov
xor
cmp
daa
leave
push
in
movsb
jb
adc
pusha
insb
ret
mov
sbb
inc
fdivs
cmp
pop
jno
adc
xchg
jg
pop
leave
xor
and
jbe
nop
add
cmp
mov
jge
icebp
rorl
movsl
lds
cmpsl
xchg
repz
adc
jne
inc
mov
cmp
or
mov
sub
sub
call
add
adc
push
ljmp
stos
xchg
repz
lret
sbb
xor
subl
or
mov
pop
dec
test
test
aad
loop
sub
stc
cld
push
fwait
pop
xor
leave
rol
out
dec
iret
je
jle
hlt
push
push
mov
aas
or
and
iret
mov
jmp
fimull
xchg
dec
jecxz
mov
ret
adc
sub
inc
sbb
lret
and
aad
out
lods
mov
fidivs
stc
ret
cmp
mov
mov
pushf
mov
lret
or
xchg
in
stos
sub
mov
jecxz
lahf
lock
shrb
outsl
inc
adc
fsubrs
and
and
sar
popa
in
ja
std
mov
movsl
es
stc
out
mov
ja
xor
pushf
or
add
aam
out
data16
lcall
adc
xchg
xor
fimuls
lret
enter
into
ja
mov
pop
and
repz
jns
movsl
out
popa
insb
rcr
sbb
xchg
cmp
scas
fildll
lds
outsb
or
pop
inc
mov
in
dec
call
and
pop
inc
loop
scas
sti
dec
into
test
ficoms
leave
inc
or
jns
fwait
xor
hlt
xchg
loope
ja
mov
cmp
sub
bound
lods
fidivrs
push
imul
xor
fadd
rcr
cmp
sub
mov
mov
and
inc
inc
push
pop
imul
cmp
out
test
cmpl
cmp
cs
pop
inc
mov
pop
push
inc
in
add
sahf
loopne
ss
xorb
daa
testb
fiaddl
aam
fcomps
ljmp
shlb
lock
jae
test
or
or
dec
adcb
mov
lock
outsb
adc
add
inc
xor
popl
and
sub
in
loopne
lods
mov
addb
inc
lock
or
dec
lahf
dec
dec
or
idivb
push
xchg
or
push
pop
xchg
sbb
jb
xchg
jg
int
push
outsb
es
inc
push
lods
int3
les
aam
lret
cmp
mov
test
or
sbb
in
out
or
cmp
mov
xor
aam
loope
push
adc
addr16
push
inc
popf
mov
lret
xchg
add
xor
out
jo
imul
push
stos
outsb
cmpsl
sti
xchg
fisubrl
cmpsb
pop
sti
dec
lock
sub
sub
xchg
lds
adc
jl
or
push
cld
jne
xor
std
out
sbb
dec
mov
xlat
push
scas
cmp
aam
mov
cltd
sub
out
dec
ds
inc
pop
jecxz
jmp
popa
imul
lret
dec
arpl
xor
mov
fstl
sbb
xor
xor
jle
xchg
jne
repz
push
mov
jecxz
or
xchg
jmp
addr16
fstpt
fisubrs
or
or
lahf
pop
mov
or
dec
dec
inc
cwtl
lret
or
adc
test
cli
inc
adc
dec
pop
or
aaa
jecxz
into
ret
push
out
nop
stc
das
xor
cld
or
aaa
push
mull
movb
inc
arpl
or
mov
jns
adc
call
rcl
insb
xor
dec
mov
and
sub
pop
fs
pop
sub
jge
js
clc
aaa
rorb
and
pop
data16
js
push
mov
fwait
test
rolb
inc
cwtl
sbb
orb
jle
ret
fiadds
push
add
push
jbe
jne
jg
mov
or
push
fincstp
dec
sbb
mov
jl
push
and
insb
jg
ret
adc
fisubrs
cmpsl
mov
in
push
ds
js
inc
test
push
outsl
mov
scas
cmc
or
dec
pop
sub
repnz
jbe
icebp
loop
aam
pop
cmc
cld
subl
lcall
shll
pushf
shlb
dec
pop
repnz
push
lret
push
lret
dec
push
jnp
and
mov
jo
dec
xchg
in
push
mov
xchg
and
idivb
loop
mov
rcrb
sbb
popa
pop
ret
aam
mov
ds
adc
fistpl
outsl
out
jbe
rcrb
adc
jge
push
jne
dec
jno
and
adc
cmp
movsb
lods
jae
xchg
stos
pop
push
lea
into
stc
jmp
fsts
les
mov
imul
cli
popa
xchg
push
cmpsb
fadd
stos
mov
les
dec
test
fidivs
fcoml
jns
leave
xadd
popf
test
adc
and
dec
push
xchg
push
in
add
pushf
push
not
aad
cmp
and
dec
repz
sbb
xor
lds
and
push
jae
mov
adc
fs
push
lods
gs
push
add
fisubs
mov
mov
and
mov
in
add
pop
xchg
out
out
ss
data16
loop
pop
dec
fdivrs
repz
into
cmc
dec
loope
sub
subl
and
out
repz
cmc
pop
xor
mov
pop
add
cmpsb
int3
nop
bound
negl
cmpsl
adc
mov
insb
mov
ror
stos
lcall
popf
dec
js
pop
push
jl
cmp
mov
daa
cs
cmp
cmpsb
loop
xor
cmp
xor
cmp
mov
outsb
xchg
adc
ds
pop
mov
mov
adcb
mov
pop
daa
je
sub
imul
push
add
ja
movb
mov
mov
in
test
mov
loop
xor
fcompl
mov
adc
outsl
jge
cltd
lahf
dec
mov
testl
mov
lods
movsl
add
xor
sbb
push
cmp
push
inc
adc
sub
int3
jno
ja
and
push
and
jb
push
sbb
add
pop
adc
xchg
shrb
rorb
sbbb
fldl
xchg
inc
dec
xchg
shlb
icebp
movsl
pushf
xor
fwait
inc
mov
stos
mov
dec
aam
dec
inc
xchg
loope
jo
out
mov
xor
push
sti
test
pop
or
js
imul
popf
rorb
int3
shl
xor
add
jg
mov
je
or
pop
jns
add
into
pop
adc
cmp
arpl
rorl
inc
cli
mov
xor
mov
jo
leave
push
in
out
jnp
jns
arpl
mov
subl
cli
cmc
insl
mov
push
mov
push
add
xchg
lods
scas
fnsave
in
xchg
test
aaa
or
outsb
mov
xchg
sbb
call
filds
lcall
xor
imul
xchg
inc
lret
setg
dec
stc
imul
sti
and
adc
fwait
push
bound
jg
mov
pop
inc
notb
xchg
sahf
cmpsl
push
mov
pop
shll
jnp
adc
lret
sbbl
inc
cmp
incb
push
adc
sbb
pop
fs
lea
repnz
jae
xchg
es
xchg
dec
jecxz
stc
xlat
in
into
inc
mov
pop
push
scas
dec
cld
adc
aaa
xlat
jl
adc
movsb
je
jnp
insl
popa
decl
jne,pn
ds
push
cli
add
dec
out
mov
rcrl
dec
xchg
fmull
add
inc
inc
mov
and
jmp
mov
rorb
inc
cmpl
xor
int
ss
add
lods
sub
pusha
or
iret
repnz
xchg
sbb
xchg
iret
in
roll
iret
loopne
inc
dec
loop
jns
les
scas
sbb
jecxz
lods
mov
mov
mov
push
lret
sti
leave
rcl
data16
cld
xchg
in
push
addl
adc
loopne
jmp
pop
xchg
sbb
mov
cmp
mov
jecxz
outsl
mov
cmc
testl
or
outsb
lds
inc
dec
mov
arpl
int
mov
shl
mov
cld
or
jnp
mov
fnsave
dec
adc
jae
push
push
and
inc
jne
lock
mov
xlat
addr16
inc
test
pop
sbb
push
mov
pop
sbb
call
mov
adc
jnp
mov
enter
xor
xchg
scas
arpl
mov
xor
cltd
mov
adc
dec
adc
out
ficoms
scas
mov
inc
jge
push
pop
mov
loope
and
jl
cli
jle
iret
adc
xchg
ret
jae
dec
and
out
lcall
inc
scas
lods
cs
jns
repz
add
push
and
dec
cmp
mov
lods
out
out
jno
shll
mov
sahf
lods
or
repz
ret
mov
pop
mov
dec
sub
or
xchg
jno
call
cwtl
dec
mov
push
push
mov
pop
push
add
sub
loop
aad
pop
xchg
outsl
inc
or
aad
scas
mov
and
sub
stc
rcll
add
cmp
inc
cli
popf
jno
rorl
sbb
lea
scas
es
sub
inc
inc
std
push
jns
test
jno
fmuls
push
divb
mov
and
mov
loope
in
pop
loopne
addr16
icebp
sub
sub
dec
out
pop
pop
iret
xchg
jp
stos
ficomps
xchg
adc
orb
into
iret
icebp
sbbb
fmul
stc
pop
sbb
sti
push
xor
xor
cltd
ljmp
xchg
and
push
negb
jg
add
lods
sti
or
and
mov
and
stos
rcrl
mov
jge
mov
push
in
push
xchg
push
inc
inc
adc
jo
movsl
rolb
or
or
pop
mov
jge
mov
add
ds
aaa
jbe
pop
push
fdivs
leave
test
pop
add
int3
bound
jle
aaa
fstps
sub
jb
push
mov
pop
cltd
stos
adc
jmp
pop
xchg
add
push
lret
out
out
fstp
pop
jae
es
mov
loop
and
xor
addl
fisubl
lahf
das
stos
push
push
sub
std
cld
scas
int3
xor
push
mov
add
addb
jo
push
mov
nop
insl
mov
pop
into
push
jne
rorb
mov
into
jo
repnz
lret
pop
push
push
jl
mov
mov
rclb
out
dec
loopne
cli
daa
sbb
xchg
and
xor
fldt
insb
cltd
dec
push
dec
sbb
dec
mov
fisubrs
and
into
stc
int
mov
int3
pop
test
push
es
adc
fimull
outsb
xchg
jbe
fstpt
hlt
pop
xchg
repz
cltd
aas
into
movsl
dec
sbb
in
sbb
roll
xor
rolb
xchg
add
lcall
sub
iret
mov
out
mov
orb
cmpsl
sub
stos
mov
jno
mov
adc
daa
imul
add
push
mov
xchg
imul
loopne
lret
xor
adc
cmp
add
mov
int3
or
out
in
push
pop
push
xchg
insb
fldl
mov
push
xor
cmc
orb
lods
jmp
mov
pop
jbe
ss
arpl
mov
shrb
out
call
xor
mov
push
xchg
xor
fldl
out
cmp
sbbl
xor
mov
sbb
aam
sbb
dec
scas
jl
dec
mov
xchg
dec
sub
dec
push
sbb
ret
hlt
xchg
push
fcomps
pop
mov
jmp
xchg
cld
adc
or
leave
mov
cwtl
je
dec
mov
mov
xor
mov
lods
jmp
sbb
cltd
xchg
notb
mov
cld
adc
lea
dec
sti
jl
call
adc
dec
cwtl
sub
xchg
gs
adc
js
mov
test
inc
loop
add
rclb
jle
push
mov
sbb
cmc
adc
into
divb
sbb
mov
sbb
test
daa
stc
dec
out
lods
imul
sbb
enter
push
pop
subl
sbb
pop
cmp
jg
push
mov
shrd
int
dec
push
popa
lahf
pop
xchg
adc
and
ror
rcll
sbb
nop
outsb
mov
mulb
mov
push
inc
jb
jae
cmp
pop
aad
outsl
push
lahf
or
lods
dec
into
and
iret
dec
and
test
or
mov
out
fmull
in
out
cmpsl
je
dec
scas
push
dec
hlt
dec
mov
sbb
xchg
push
xor
add
lds
push
daa
out
or
dec
sub
sarb
sub
and
scas
dec
mov
test
sub
cmpsl
test
in
add
and
push
loope
adc
jae
jnp
fldt
fiaddl
in
je
xchg
cli
das
insl
inc
cld
addb
mov
mov
outsl
popf
out
xchg
xor
aad
inc
pusha
xchg
dec
stos
pop
and
popa
cmp
pusha
into
pop
dec
sti
mov
mov
jecxz
mov
dec
into
sub
and
xchg
adc
jb
aam
shrl
push
dec
nop
jecxz
int3
outsl
mov
call
jle
xchg
and
fdivl
xchg
jne
or
lret
xor
iret
or
test
fbstp
mov
and
sbb
sub
fimull
pop
xchg
je
xchg
pop
sahf
push
out
jp
call
sbb
repnz
cmc
addl
enter
std
sbb
adc
or
bound
lcall
popa
out
mov
rclb
xor
fcomip
xchg
mov
lcall
fistl
push
and
ja
mov
mov
add
dec
add
cmpsl
mov
pop
pushf
jae
mov
test
mov
jp
xchg
icebp
insb
mov
push
push
aad
roll
push
jle
movsb
sbb
cmp
test
test
mov
repz
popa
imul
test
cmc
into
sarl
pop
pop
in
shl
es
iret
insl
cmp
mov
pop
mov
and
sbb
fbstp
fnstsw
jo
mov
imul
shr
jae
dec
and
xchg
shlb
in
sti
jmp
insb
push
mov
mov
sbb
jnp
sbb
or
daa
packuswb
sbb
iret
rorb
adc
xor
jp
push
add
xchg
stos
ficoms
dec
mulw
fimull
addl
jecxz
out
jne
shll
push
adc
js
lock
pop
arpl
popa
dec
hlt
mov
shl
iret
inc
lcall
xchg
cld
push
dec
shrb
ljmp
test
out
shlb
lea
subl
into
aas
stc
adc
inc
in
out
lret
stos
mov
mov
es
std
mov
rcr
inc
cmc
imulb
clc
ja
push
push
mov
imul
sub
push
xor
cmp
adc
js
inc
xchg
add
into
dec
or
movsl
out
or
pop
jne
lods
or
test
sbb
cmpsl
dec
push
inc
cli
mov
dec
test
lds
in
into
sub
push
bswap
std
push
inc
sub
mov
jo
add
ljmp
xor
adc
or
mov
adc
movsb
push
out
in
sub
cmp
cmp
enter
insl
xchg
mov
call
scas
mov
and
imul
inc
outsl
mov
or
pusha
xchg
jo
push
nop
divl
rcl
aam
mov
pop
dec
and
mov
pushf
fcoml
dec
movsb
lods
mov
mov
push
jl
mov
fsub
int3
mov
sub
hlt
outsl
mov
add
push
sbb
ss
xchg
ja
movsb
fcmovb
dec
daa
in
and
stos
loopne
jg
pop
push
or
and
and
inc
cli
push
jbe
arpl
xchg
lret
imul
pusha
push
hlt
sub
fs
orb
jb
js
ja
ljmp
fcoms
jae
repnz
popa
mov
jmp
xchg
pop
sbb
sbb
xchg
lret
leave
imul
pop
mov
mov
outsl
mov
and
push
sti
sub
inc
mov
adc
jns
insb
dec
fsubrp
xor
int
sbb
adc
mov
jae
push
mov
and
scas
ror
fnsave
addr16
negb
push
and
into
pop
xlat
insb
mov
mov
ficomps
pop
clc
xor
cld
inc
iret
mov
xchg
mov
fiadds
jnp
sub
dec
inc
jne
out
gs
mov
mov
inc
loope
mov
fs
mov
out
std
or
in
dec
lahf
imul
mov
adc
aaa
and
cmp
dec
fimuls
ds
add
push
jge
pop
imul
jp
dec
negl
push
xor
and
stos
inc
or
jb
inc
dec
mov
icebp
outsl
push
fcmovne
add
mov
inc
negb
cmp
dec
js
ret
enter
mov
pop
sub
inc
nop
iret
push
mov
pop
or
pop
lods
icebp
lcall
imulb
loope
outsl
iret
pop
lock
inc
adc
daa
add
movb
xchg
cmp
adc
into
dec
xor
dec
add
das
popf
mov
jno
add
mov
inc
mov
movsl
pusha
add
or
sub
and
jp
lret
push
or
mov
mov
pop
dec
int
dec
mov
in
stos
setb
mov
jns
enter
repz
xchg
jl
pop
rolb
dec
iret
leave
adc
jg
cltd
xchg
sub
xchg
mov
aaa
push
out
push
dec
mov
sti
nopl
and
pop
xchg
arpl
mov
jo
jmp
or
rorb
in
ret
pop
pusha
frstor
into
add
sub
pop
adcb
xchg
lcall
add
adc
scas
push
xchg
pandn
add
sub
xor
inc
add
imul
rcll
cmpsb
jmp
call
xchg
mov
faddl
or
repz
test
xorb
jae
push
pop
xchg
ds
mov
adc
cmp
sbb
mov
push
mov
imul
and
or
sarb
aam
xor
jp
mov
jg
jle
xchg
or
cmp
push
lret
dec
fnsave
mov
fdecstp
int3
out
mov
iret
sub
cmc
add
xchg
jecxz
inc
push
test
dec
es
sahf
fdivs
lods
xor
and
fistpll
lret
mov
inc
sub
jg
sbbb
sbb
and
mov
out
shll
mov
ja
scas
insl
adc
push
cld
pop
fstpt
fst
inc
dec
das
loopne
jbe
xor
or
sub
dec
adc
sahf
jbe
bound
push
mov
jbe
loop
cmpsl
xchg
aam
ret
pop
into
xchg
lods
inc
jbe
dec
adc
lcall
sbb
cmpb
ljmp
pusha
pop
lods
push
cwtl
fadds
mov
add
mov
xor
shlb
stos
mov
into
and
dec
inc
lahf
xchg
ret
or
in
inc
mov
xchg
loope
shl
lds
dec
in
jnp
xchg
sub
out
addr16
fwait
and
iret
xchg
and
jbe
popa
xor
pop
sub
jnp
leave
cmp
push
cmp
cmc
std
sbb
sbbb
addr16
push
into
in
pop
xchg
in
sub
into
leave
sti
push
push
testl
mov
popf
outsb
and
mov
pop
add
aas
xchg
inc
push
xchg
pop
test
jb
mov
adc
lret
sbb
jbe
or
popf
int3
repz
and
pop
xchg
xchg
out
es
pusha
jno
xlat
push
mov
cmp
mov
decb
add
stos
dec
and
and
gs
cmpsb
dec
and
mov
xchg
stos
out
lahf
out
xchg
addl
inc
in
icebp
xorb
iret
add
inc
scas
cwtl
call
in
jno
add
fidivrl
add
jle
jno
shlb
push
movsl
jnp
insl
push
lret
jecxz
jnp
mov
fcmovu
push
dec
rcll
outsb
dec
push
stos
test
push
mov
sbb
push
mov
mov
lcall
ss
jecxz
or
lock
out
cltd
repnz
adc
pop
movsl
mov
cmc
jno
or
mov
cmp
iret
or
test
xor
sti
fadds
xor
dec
or
cld
xor
sub
fadds
in
lret
xchg
xchg
sbb
aaa
cmp
dec
xor
jbe
cwtl
je
xor
and
pop
fisttpl
and
addr16
jo
dec
jp
dec
rcrl
jne
into
lahf
dec
daa
jg
and
repnz
sahf
sub
push
mov
inc
mov
xorl
test
jge
push
mov
pop
icebp
fstl
mov
rcrl
adc
mov
adc
js
lret
mov
lret
xchg
mov
jnp
dec
jp
adc
and
jno
fsts
inc
ja
bound
jge
pop
jbe
test
call
xchg
sbb
into
mov
cmovle
test
movsb
call
mov
xchg
jae
and
lret
movsl
cltd
sbb
sbb
push
inc
icebp
or
out
adc
std
js
test
xchg
cltd
and
mov
mov
mov
in
adc
cli
pop
inc
sti
gs
movsb
push
fs
mov
rclb
scas
or
fistps
cmpsl
push
es
jl
mov
pop
out
sarl
and
or
ds
mov
lret
or
add
fsubrl
dec
push
dec
adc
jle
into
or
ficoms
push
add
inc
insb
adc
push
push
cmp
in
mov
out
mov
daa
mov
inc
lcall
dec
mov
jecxz
inc
movsl
sub
jo
sbb
add
push
xchg
xchg
push
das
gs
mov
mov
lods
std
push
ret
mul
jnp
movsb
mov
cmp
push
xor
or
scas
inc
sub
loop
xchg
mov
daa
movsb
add
inc
shll
jno
xchg
into
push
into
push
xchg
pop
loopne
jge
pop
jle
out
inc
sbb
dec
sbb
add
rol
or
stc
xchg
lahf
pop
add
and
dec
jb
add
adc
jmp
cwtl
pop
popa
sbb
fnsetpm(287
mov
sub
out
push
xchg
mov
cmpl
mov
inc
popf
repz
test
mov
add
and
xchg
xchg
fcoms
jns
sbb
or
fwait
nop
sbb
push
xchg
or
adc
daa
push
addr16
stc
enter
push
mov
rorl
out
push
popa
pusha
push
adc
rcl
push
cmp
cmp
mov
pop
out
xchg
xchg
out
xor
xchg
push
inc
iret
xor
pop
add
inc
lea
sub
mov
ja
push
inc
jne
pop
les
jp
mov
inc
pop
pop
xchg
cs
int
xchg
test
pop
xchg
addb
push
push
dec
mov
movsl
dec
xchg
imul
mov
sub
call
push
and
es
out
pop
xchg
push
out
add
mov
aaa
dec
xor
rcl
xchg
mov
in
cwtl
add
loope
ret
fs
leave
push
adc
and
cmp
xor
mov
add
cmovns
jmp
pop
sub
jne
xchg
leave
into
ds
dec
in
mov
sbb
repz
jne
cltd
inc
pop
pop
cmp
mov
imul
push
xchg
dec
psadbw
ret
aad
adc
loopew
jbe
push
ljmp
mov
push
mov
or
ficomps
mov
loop
add
cmpsb
push
xor
cmp
add
adc
cmp
call
js
movsl
sub
insb
lods
adc
ja
enter
subl
inc
push
push
into
pop
adc
stos
xchg
ret
lods
dec
out
push
movq
pushf
stos
dec
or
dec
cmpsb
out
shll
mov
sahf
xchg
int
mov
push
jp
xchg
loopne
sbb
int3
sbb
jbe
and
incb
shll
mov
cwtl
add
xor
dec
jae
daa
push
fdivs
divl
aam
pushf
push
pop
dec
stos
jg
push
xchg
int
sti
mov
outsl
adc
jl
sub
push
mov
popa
or
or
fisubs
cmpsb
mov
int
gs
lret
hlt
adc
jnp
fcmovbe
mov
out
into
inc
inc
cmp
cmp
rcll
iret
flds
scas
inc
fidivrl
dec
outsb
inc
cli
jne
lcall
jno
push
push
aas
sarl
xchg
mov
sub
aaa
cltd
xchg
ss
adc
repz
sahf
fmuls
movsb
xor
add
fmul
cmc
inc
xchg
mov
push
gs
into
push
xor
je
shrb
pop
mov
sbbb
ljmp
dec
push
inc
push
or
test
push
incl
movb
xor
push
pushf
loope
add
adc
in
mov
sbb
push
mov
mov
jbe
xor
fsubrs
mov
fwait
xor
popa
pop
nop
fcmovnbe
dec
push
les
add
mov
xchg
call
hlt
inc
shr
pop
dec
movsb
mov
mov
pop
fdivrs
push
out
test
cwtl
pop
fcmovb
aaa
sbb
cmc
sub
adc
jne
or
jbe
dec
rclb
push
add
adc
je
lret
mov
add
xor
pushf
sub
lock
imul
inc
ss
lods
je
lea
push
pop
adc
outsl
cltd
mov
out
fld
incb
pop
lret
sbb
out
outsl
sub
sbb
dec
jl
push
mov
sbb
rcrb
test
mov
push
cwtl
imul
cs
test
xchg
jbe
dec
lods
mov
mov
jecxz
inc
mov
jae
idiv
stc
cmp
leave
outsb
push
jg
inc
scas
loopne
pop
mov
dec
xchg
jecxz
enter
test
lea
into
dec
rclb
jne
rcl
fiaddl
cltd
adc
mov
push
sub
add
aaa
mov
into
push
inc
aas
test
xchg
xchg
addb
mov
lea
mov
push
xchg
mov
cwtl
repz
insl
leave
mov
adc
cs
cmp
mov
jae
cmpsl
adc
je
lahf
repz
dec
push
mov
xor
rorl
dec
mov
inc
popa
shll
repz
push
jle
adc
pop
sub
add
out
sbb
push
stos
loop
mov
sbb
push
fcmovnu
adc
testb
xchg
mov
das
out
jb
stos
inc
pop
mov
insb
add
lcall
jmp
push
into
jl
iret
adc
inc
push
jmp
sbb
add
std
pushf
xchg
adc
jo
stos
gs
jae
or
add
and
fcmovb
push
in
jle
fbstp
dec
or
test
cmp
pop
sbb
pop
ret
dec
rorb
xchg
or
lret
xchg
mov
insl
sub
sbb
pop
pop
dec
adc
insb
test
mov
xchg
xor
pop
ja
push
into
jo
xchg
mov
inc
sbb
mov
out
and
xor
cmpsl
mov
into
loopne
test
repnz
es
movsl
pusha
mov
ljmp
fcmovbe
cltd
loope
jg
xor
adc
xchg
test
sub
rclb
mov
inc
adc
mov
jbe
mov
adc
lahf
movsb
pop
std
xor
xchg
mov
dec
push
jecxz
pushf
sub
pop
lret
mov
and
push
push
jmp
aas
dec
loopne
mov
xchg
repz
pop
mov
mov
js
sbb
jmp
jno
xorl
xchg
xchg
arpl
inc
mov
xor
repnz
pop
xchg
and
out
add
mov
fcomps
mov
sub
cmp
mov
mov
shrl
in
xchg
fisubrs
rclb
cwtl
sub
xor
cmp
sbb
das
adcl
xor
jno
push
in
dec
clc
cld
cmp
sbb
jle
mov
sbb
lret
pop
cmp
outsl
inc
inc
push
inc
cli
into
loopne
fcoml
fs
mov
ss
cmpsl
inc
and
pop
sub
jmp
scas
push
ret
dec
and
mov
mov
dec
xchg
xchg
leave
daa
aad
andb
add
pop
pop
jne
fs
shrb
lcall
jb
fmuls
mov
inc
mov
jno
mov
rclb
mov
lock
lods
clc
dec
mov
je
fcoml
orb
mov
cmpsb
pop
dec
fwait
stc
mov
cmp
mov
add
pop
addb
in
ret
aam
push
push
cmpsl
or
out
add
dec
inc
lock
push
loopne
fistpll
fcmovb
adc
dec
shll
cmpsb
push
mov
and
scas
mov
inc
jmp
movsl
lret
into
mov
push
mov
out
push
mov
rcrb
or
cmpsb
add
das
sub
jle,pn
aam
and
ljmp
int3
fsubs
add
xor
loope
sbb
mov
cmpsl
add
insl
out
sbb
call
in
call
mov
and
imul
sbb
and
push
icebp
lea
cmp
mov
ret
pop
cwtl
sbb
jecxz
xchg
shrb
xor
test
dec
push
leave
jns
es
jbe
mov
shll
stos
push
mov
xchg
fsubrs
inc
jp
sub
sub
xor
out
xlat
fcom
cwtl
xchg
sbb
monitor
pushf
lcall
dec
loope
ljmp
int3
push
enter
mov
and
aas
push
clc
je
sbb
cmpsb
jg
arpl
in
xchg
pop
in
addr16
aad
xchg
lret
lcall
inc
push
push
into
push
addl
pop
xchg
jle
push
cmpsb
cmp
or
cmp
jb
or
loopew
or
rcll
jns
ret
ss
xchg
movb
sbb
dec
dec
xrelease
fwait
data16
imul
dec
push
pop
scas
jge
mov
pop
divl
or
lret
loop
ficoml
inc
inc
mov
fst
sbb
fiadds
movsb
scas
add
jno
sub
jbe
mov
and
xchg
or
lds
add
cld
inc
loope
lods
or
dec
mov
jle
arpl
ror
cmpsl
push
dec
in
mov
stos
scas
into
inc
out
add
xchg
rolb
in
pusha
clc
popa
xor
cmpsl
sarl
out
pop
xor
cmp
add
cld
or
add
push
xlat
push
aad
mov
xor
pop
jns
aam
cmp
cmc
aaa
imul
fnsave
scas
movsb
push
leave
sub
jno
xor
rorl
sbb
scas
iret
int3
adc
mov
cmp
incl
inc
rorl
out
jp
scas
inc
and
or
test
je
in
inc
mov
push
dec
icebp
ret
lahf
cmp
insb
cwtl
xchg
mov
push
inc
jp
or
cwtl
clc
and
jnp
movsl
outsl
out
xchg
inc
jmp
xchg
lahf
sarb
test
ret
cmp
and
xor
sarb
mov
mov
mov
adc
aaa
sub
cmc
mov
xchg
pop
out
lret
sbb
mov
jb
mov
inc
mov
imul
push
gs
pop
pop
int3
into
sub
jge
sub
movsb
and
loop
xor
mov
repz
iret
std
imul
sbb
jo
push
ret
or
push
sahf
xor
test
nop
xchg
dec
test
cli
pusha
addr16
insl
lods
add
adc
jne
mov
into
dec
hlt
lcall
inc
cmpb
and
outsl
call
mov
scas
xor
ja
cmc
cmpsb
leave
push
in
mov
movsl
out
push
inc
outsb
iret
inc
sbb
call
dec
mov
mov
xchg
scas
stc
stos
hlt
int3
std
jmp
nop
imul
lods
mov
rorb
fisubrs
jae
mov
inc
cmovns
lods
jmp
add
push
in
jae
loope
lods
or
sbb
or
mov
inc
dec
scas
test
dec
cltd
push
and
jae
pushf
cmp
adc
stos
xchg
jb
rcll
cmp
inc
fiadds
int
pop
sbbb
mov
ret
loop
das
cltd
sbb
outsb
mov
js
or
xchg
lcall
xlat
or
mov
push
ljmp
leave
xchg
xchg
inc
xchg
adc
xlat
dec
shrb
bound
das
imul
or
mov
mov
mov
mov
jge
push
clc
push
or
adc
mov
or
repz
mov
pop
push
fisubrl
je
add
iret
lds
rcr
mov
adc
sbb
dec
orl
cmp
leave
shlb
icebp
sahf
sbb
into
stc
bound
adc
mov
xchg
das
mov
dec
jb
pop
jmp
lahf
sbb
lfs
xor
and
imulb
jnp
subl
pop
out
inc
fmul
fisubs
xchg
mov
icebp
xchg
repnz
std
and
test
pop
sbb
sub
xchg
testl
stc
mov
inc
test
sbb
mov
mov
enter
imul
push
scas
gs
cmpsl
add
insb
mov
mov
insl
shlb
inc
or
xchg
mov
cltd
cmc
xchg
inc
mov
das
push
jp
xor
xchg
mov
mov
std
stos
adc
test
aad
nop
fiadds
test
dec
mov
cmpsb
imul
inc
xor
add
cmp
mov
pusha
mov
cmp
xchg
or
je
mov
dec
adc
ret
lcall
std
in
divl
push
jae
xchg
enter
iret
mov
dec
rclb
sub
push
lock
pop
popa
push
sbb
jg
pop
iret
adcl
adc
inc
repz
push
movsb
into
jno
inc
lret
mov
cs
adc
cmp
insl
addr16
push
push
xor
cld
movsb
push
xor
and
jle
in
loop
shll
cmpsl
imul
leave
out
and
inc
mov
push
mov
cltd
mov
xchg
xlat
sbb
imul
xor
dec
mov
inc
add
inc
lea
jne
xchg
lods
jg
inc
divl
sub
fsubrs
lcall
push
lds
adc
das
out
pop
shll
mov
jne
lahf
ficomps
rcrl
jo
mov
je
and
xor
arpl
addr16
addr16
cmp
jne
mov
or
insl
xlat
xchg
xor
pop
shrb
aas
push
cmp
shlb
or
xchg
xlat
sti
fwait
push
stos
push
mov
pop
addr16
fsub
inc
cmp
inc
adc
xor
in
jnp
shlb
shlb
jl
push
imul
into
mov
mov
aaa
lods
movsb
ja
jnp
or
adc
jge
inc
nop
aam
inc
mov
mov
popa
repnz
pop
lds
loopne
popf
xchg
adc
mov
in
xchg
cs
aas
or
leavew
cmp
je
xchg
pusha
push
std
push
insb
loopne
adc
jbe
aam
aaa
lea
into
int3
jecxz
rclb
fldl
mov
andl
out
into
test
out
jbe
stc
push
mov
mov
inc
sbb
and
leave
cli
repnz
dec
adc
push
mov
inc
dec
xchg
inc
mov
lds
pop
movsb
outsb
das
mov
mov
sbb
ds
push
ja
es
add
ror
cltd
insl
lds
xchg
shlb
mov
add
and
jp
dec
pop
adc
notb
inc
dec
adc
inc
push
lahf
pop
inc
mov
enter
jl
imul
push
cli
jno
mov
cmp
xor
or
push
xchg
and
mov
jl
push
mov
pop
adc
sti
mov
call
mov
repz
xor
push
mov
std
sub
cmpsb
or
mov
sbb
mov
mov
mov
jl
out
jmp
push
int3
ds
cltd
daa
sbb
nop
dec
pop
mov
data16
dec
rcl
out
rclb
add
jbe
xchg
push
mov
sahf
xchg
inc
out
mov
mov
cmpb
xchg
addr16
inc
inc
sbb
test
sbb
scas
push
into
into
cmp
mov
out
xor
sub
leave
imul
clc
mov
sub
cmc
adc
jge
fmull
mov
lret
pusha
lret
insl
sub
push
pop
push
adc
or
lea
xchg
outsl
pop
mov
aaa
or
daa
repnz
push
and
outsb
jecxz
notb
punpcklbw
add
dec
mov
inc
and
sbb
pop
jge
cmp
shlb
xchg
xlat
adc
iret
jb
mov
lods
test
into
hlt
outsl
idiv
pop
xchg
orb
pop
sti
jg
add
repz
addl
sbb
addr16
pusha
or
mov
cmp
push
dec
out
xchg
mov
dec
mov
jge
and
pop
in
sub
insl
pop
out
and
and
lock
cmp
pop
or
and
stc
cmp
fcom
push
cmp
lods
xor
adc
lods
lret
jb
int3
mov
aas
mov
repz
dec
jmp
aad
pop
mov
xchg
dec
icebp
lods
lcall
push
pop
out
cmpsb
sbb
push
or
lret
pop
test
sub
out
jae
adc
rcll
mov
mov
mov
push
mov
dec
jns
cs
leave
cmp
push
mov
rolb
or
es
push
test
das
mov
lret
dec
add
jb
mov
std
popa
cmpsl
and
scas
or
add
mov
clc
adc
fwait
leave
lret
out
push
popf
lock
add
xchg
jle
shlb
dec
pop
shll
and
lods
cli
sbb
inc
mulb
mov
cmp
ljmp
rcll
fcmovnbe
outsl
xchg
aam
mov
pop
clc
je
mov
mov
pop
arpl
inc
xchg
dec
push
aas
ficomps
adc
mov
adc
push
cmp
or
pusha
dec
or
in
add
cltd
adc
xor
adc
sub
mov
push
leave
add
sub
pop
sub
int3
push
lcall
mov
in
adc
stc
pop
mov
inc
shrb
inc
movb
cmpsb
dec
and
and
push
mov
in
jnp
jmp
dec
sar
insl
movsl
mov
sub
and
push
add
outsl
jg
cmp
or
jle
sar
mov
cld
or
and
mov
dec
cltd
repnz
push
clc
shrl
dec
shlb
mov
loopne
sbb
pop
adc
outsl
cmp
pusha
adc
sub
xchg
sbb
lahf
push
ds
fadds
lcall
aas
dec
out
popa
je
into
dec
hlt
js
out
or
and
dec
repnz
mov
mov
mov
pop
mov
das
adc
sbb
push
or
fs
and
es
cli
adc
mov
iret
pop
inc
arpl
push
cs
loope
out
or
sub
imul
pop
jne
or
lcall
imulb
mov
push
dec
insl
into
adc
daa
sub
rcl
orb
pushfw
subl
dec
mov
pop
push
cltd
sbb
fidivrl
dec
outsb
aad
sub
pop
push
aam
push
sbb
sbb
out
popa
adc
pop
push
mov
add
clc
out
push
negl
iret
test
insl
sti
fs
inc
popl
mov
inc
mov
pushf
out
sub
mov
dec
cmp
and
stos
lods
xchg
or
push
inc
mov
out
sbb
loopne
mov
test
pop
inc
repnz
pusha
into
xor
push
cmp
rorb
in
enter
fcmovbe
jno
daa
xchg
add
fwait
cld
dec
js
mov
jge
insb
push
cmp
sub
sbb
adc
out
repnz
outsl
cmp
push
cmp
ret
nop
dec
lret
fadd
lret
rcl
inc
push
notb
arpl
pushf
es
xor
ret
dec
ficoml
scas
or
cmp
xor
and
jecxz
cs
aas
ja
sbb
imul
test
fldenv
cld
fcompl
pop
push
inc
or
leave
mov
addr16
push
inc
push
fildl
push
jae
xor
addr16
adc
jge
fistl
arpl
jnp
mov
dec
dec
jmp
adc
adc
cmpsl
cld
cmpsb
xchg
lret
pop
scas
xchg
aaa
push
mov
sub
cmpsb
divps
into
cmpsl
int3
inc
push
iret
add
cmp
and
retw
data16
xchg
imul
xchg
sbb
fcomps
cmp
mov
mov
mov
hlt
out
scas
sbb
clc
jb
push
data16
xchg
push
and
test
into
mov
out
int
and
sbb
scas
push
mov
jbe
insl
jo
sar
mov
mov
dec
inc
gs
int3
cmp
and
clc
mov
inc
popf
loope
test
push
or
push
cmp
jbe
cmp
leave
mov
sub
sub
dec
nop
jbe
adc
dec
cmpsb
leave
push
jg
das
fnstcw
lahf
lea
xchg
push
lods
cmp
and
push
sub
sar
pop
xchg
sub
inc
jp
xor
push
mov
add
fnstenv
and
mov
scas
cmpsl
xor
cmovae
insl
push
pop
aam
xor
push
repz
push
or
or
out
je
or
adc
outsb
mov
adc
dec
andl
add
xchg
js
jnp
lds
push
out
inc
aam
das
icebp
dec
adc
push
add
or
xchg
mov
sub
mov
xchg
loop
shl
popf
push
xorl
cmp
pop
xchg
mov
scas
add
mov
pop
fstpt
mov
mov
sub
push
rol
roll
xor
enter
add
stos
adc
mov
aam
ret
ljmp
js
stc
xor
mov
mov
lods
imul
fmulp
mov
shll
stc
push
push
jmp
pop
xlat
mov
mov
std
push
cmpsl
and
inc
test
sub
shl
pushf
mov
addr16
sahf
and
cmp
dec
mov
imul
daa
data16
xchg
xorb
push
lods
pop
pop
lret
dec
test
push
xorl
pop
ficoml
xchg
mov
scas
leave
inc
lcall
pusha
test
and
sbb
push
insl
mov
add
mov
or
or
dec
call
jnp
int
jp
sub
jb
adc
lds
in
orb
sub
mov
outsb
jnp
push
push
xor
aam
push
ret
mov
int3
mov
js
sub
into
jae
sbb
arpl
and
xor
cld
xor
jge
test
jne
pop
cs
lahf
push
mov
out
jo
rorl
ret
aam
lret
testb
movsl
imul
movb
mov
ret
mov
outsl
fisubs
dec
dec
gs
mov
xor
jnp
mov
push
sahf
jbe
sbb
push
mov
cmp
insl
iret
xchg
mov
mov
call
jbe
shll
sarb
das
mov
into
loope
aas
xor
movsl
idiv
aam
pop
sub
frstor
fstl
xchg
shl
push
and
es
mull
push
pop
jbe
cld
mov
popf
frstor
test
ret
enter
jl
aaa
shrl
inc
mov
scas
jae
mov
shld
inc
lret
push
add
aaa
push
adc
lret
dec
and
xchg
push
sbb
hlt
sti
es
mov
jo
sub
sbb
dec
push
mov
vmread
mov
xchg
lea
imul
xchg
push
xchg
push
rorb
or
push
xor
lock
adc
mov
jno
rcrb
xchg
mov
fistl
es
mov
fdivrs
mov
into
scas
mov
cmpsb
cmpsl
sub
or
sbb
and
jp
lahf
roll
xor
shl
and
push
sti
adc
xor
in
add
sbbb
iret
imul
xorl
xchg
adc
mov
jns
outsl
nop
sub
add
sub
mov
aam
out
jg
jl
out
in
aam
arpl
pop
mov
sub
ret
sub
xor
sbb
leave
sahf
movsb
jmp
out
insb
xor
pusha
enter
or
imul
arpl
popl
pop
add
xlat
mov
dec
fnstcw
xchg
data16
out
sbb
jbe
lds
add
frstor
cmp
jbe
push
push
repz
out
mov
outsb
int3
data16
call
xchg
adc
xchg
addr16
pop
jno
orb
push
dec
aas
lods
mov
xchg
mov
inc
or
fsubr
leave
dec
stos
shll
gs
lock
scas
in
jns
mov
and
or
dec
sub
fidivrs
cwtd
aad
out
jno
mov
cmpsl
or
out
pushf
imul
xchg
xor
xor
and
mov
xchg
mov
inc
sar
push
jbe
mov
xor
fisttpl
test
rcrl
jl
iret
cwtl
test
psrlw
jg
jp
les
mov
push
pushf
mov
mov
xrelease
pop
gs
in
push
ret
imul
add
mov
in
outsl
jns
rcrl
xlat
enter
or
fldenv
iret
push
inc
insb
push
cmc
xlat
sub
pop
arpl
add
out
and
dec
js
push
decl
nop
idiv
stos
jne
mov
inc
int
adcl
adc
push
jnp
ffreep
xchg
mov
int3
xor
hlt
sub
sbb
push
nop
and
inc
cmp
insb
cmp
add
popf
sbb
stc
scas
sub
mov
xor
divb
fstps
push
lret
adc
js
adc
out
imul
push
push
or
push
xchg
cmp
jmp
mov
pusha
and
sub
xchg
repz
push
sbb
mov
ss
dec
or
cmpsl
xchg
int
repz
pop
mov
or
into
xchg
negl
sub
rorb
icebp
sar
movsb
loopne
cld
mov
add
in
int
addr16
xchg
and
and
sarl
cmp
add
ljmp
and
test
ljmp
test
mov
idivb
mov
xor
mov
cmc
rcl
jns
daa
push
out
test
int3
add
sbb
inc
subl
repz
mov
movsb
sbb
xchg
cmpsl
push
in
aad
fists
or
movsl
imul
iret
daa
cmc
mov
mov
inc
adc
mov
cmp
std
loop
test
mov
adc
mov
xor
mov
xchg
push
repz
insl
lea
cmc
out
pop
loope
fprem1
push
dec
inc
scas
jmp
mov
out
push
jbe
inc
fwait
xchg
push
aad
cmpsl
pop
shlb
push
lahf
hlt
lods
sbb
mov
cmp
xchg
mov
lret
jne
push
or
out
call
mov
stos
ret
movsl
and
std
xchg
rcl
int
xchg
fiaddl
scas
lahf
xlat
sub
test
mov
xor
pop
lret
cmc
push
movl
fldenv
cwtl
test
popa
cltd
popf
and
mov
and
pop
cmp
pop
movsl
call
repz
notb
imul
pop
add
xor
push
nop
fcomi
testl
cmp
aaa
movsl
push
and
dec
lods
push
rcl
imul
pop
xor
das
push
mov
sbbl
add
loopne,pt
shrb
daa
test
clc
js
dec
cltd
sbb
sbb
pop
int
dec
mov
sub
xchg
push
call
xor
pop
daa
mov
dec
fld
inc
fisubrl
adc
movsb
out
ja
push
les
pop
shrl
mov
imul
jnp
cwtl
fstl
push
jmp
push
pop
dec
js
fidivs
sti
ror
xor
pop
push
jbe
sarb
push
mov
shll
call
mov
sti
sbb
fs
mov
cmp
add
into
add
aad
shlb
adc
fcmovbe
outsl
push
lcall
adc
inc
and
mov
aam
fldenv
adc
dec
ds
dec
and
lods
add
rcl
popa
xor
push
out
out
mov
adc
in
ja
mov
popf
jnp
or
imul
cmp
pop
xchg
std
outsl
push
fsubl
mov
xlat
mov
lods
add
rolb
lds
adc
jb
mov
repnz
jmp
jo
movsb
dec
int3
sahf
dec
adc
cmpb
js
or
ja
aas
xchg
push
pop
adc
int
in
mov
notl
sub
aad
jecxz
into
cld
adc
addr16
in
cmp
ja
mov
repz
into
repz
dec
inc
cmp
lea
stc
addr16
mov
add
js
popf
or
sub
mov
adc
daa
pop
xchg
ds
xchg
mov
cld
mov
pop
enter
out
mov
mov
mov
nop
icebp
sbb
test
pop
cmp
cmp
in
in
xor
leave
test
lock
xlat
push
mov
sbb
test
jae
sti
mov
movsl
pop
xlat
int3
mov
xchg
xchg
sub
mov
inc
and
jecxz
add
or
out
notl
dec
lret
jno
enter
add
iret
dec
stc
and
and
icebp
sub
insb
mov
xor
sbb
mov
push
jno
mov
mov
scas
or
orl
fisubrl
sub
cli
sbb
std
mov
fsub
es
aaa
xchg
xchg
dec
pop
jmp
sbb
mov
ret
es
mov
push
into
les
sub
out
in
cs
ljmp
rcrb
push
cmp
sarb
mov
inc
xchg
and
icebp
mov
dec
rorl
cwtl
lahf
cltd
xchg
add
ja
push
popa
mov
movsb
mov
mov
movsl
pusha
aaa
inc
mov
inc
pop
test
leave
mov
in
sti
lea
enter
orb
jnp
cmp
and
pop
xchg
xchg
pop
sbb
in
jecxz
mov
cmp
je
lret
cmp
test
bound
inc
pushf
push
jne
fs
ss
rorl
popf
fwait
xor
mov
jl
pusha
dec
lret
add
lds
shrl
jno
dec
out
sub
xor
pop
aaa
lret
push
pop
jns
das
mov
xlat
mov
jne
or
pushf
fdivl
shrb
popf
cmp
stos
jno
ds
xor
pop
ss
push
jbe
sahf
js
std
imul
ret
sub
rorl
jge
jmp
push
aam
cltd
clc
adc
jns
add
dec
cmpl
mov
jno
cwtl
addr16
jne
enter
inc
add
fstps
xchg
out
xor
mov
jns
das
add
ljmp
gs
cmp
and
push
leave
and
add
test
leave
mov
push
in
out
or
jne
push
xchg
mov
inc
cmpsb
mov
dec
mov
xchg
iret
aas
sbb
fildl
cmp
movsb
jmp
xor
jnp
into
lret
in
into
imul
jbe
mov
lods
mull
mov
xor
pop
or
sahf
mov
and
jbe
test
sbb
dec
das
hlt
in
xlat
jno
dec
fwait
adc
scas
lcall
inc
ss
xor
dec
and
adc
stos
out
shlb
int3
sbb
fiadds
cmp
lret
jns
data16
daa
je
sbb
int3
mov
mov
das
jmp
xchg
push
mov
into
mov
and
movsl
inc
insb
mov
out
mov
in
or
insl
mov
inc
mov
dec
ret
inc
or
jne
mov
and
push
enter
xor
inc
inc
lods
sbb
push
shlb
scas
outsb
xchg
mov
aam
test
stos
or
and
jge
sub
push
dec
repnz
mov
mov
sub
rorb
scas
into
adc
repz
dec
lcall
lret
mov
ret
sbbl
ja
push
push
add
dec
andl
cmp
jns,pt
jmp
mov
adcb
loopne
addr16
into
push
sub
cli
out
movzbl
add
aad
dec
pop
adc
in
xor
push
mov
cmp
push
aas
mov
jo
lret
stc
lea
in
test
jbe
iret
lds
repz
or
xchg
inc
aam
ret
mov
clc
push
mov
cli
inc
mov
in
sub
sub
dec
cmpsb
add
xorl
push
leave
icebp
sbb
and
in
push
mov
jmp
xor
mov
lds
mov
xor
add
dec
jae
movsb
adc
push
mov
outsl
sbb
sbb
pop
sti
adc
stos
adc
push
stos
clc
cmp
sub
inc
test
rcl
xchg
xlat
into
add
mov
inc
cmp
push
out
mov
cwtl
ds
inc
dec
mov
push
xchg
sub
fldcw
out
sub
rclb
jmp
pop
dec
mov
xchg
sub
mov
icebp
and
je
lret
or
and
aaa
add
adc
lcall
lds
or
outsb
aad
enter
push
cmp
je
mov
mov
xor
mov
xchg
inc
adc
sub
dec
dec
add
sarb
xor
test
mov
lret
push
addr16
mov
add
xor
stos
arpl
pop
push
fwait
xor
adc
pop
cld
pop
icebp
sub
mov
sahf
testb
or
inc
sub
cmp
js
std
push
jecxz
inc
aaa
mov
adc
mov
xchg
sbb
xchg
mov
out
mov
inc
xor
fcoms
pop
sbb
insb
sbb
aam
mov
or
lock
sub
fdiv
add
ret
mov
out
or
mov
sbb
into
shrl
push
mov
insl
in
sub
iret
push
dec
scas
push
sbb
test
rorb
idivb
outsl
in
mov
mov
mov
inc
nop
xchg
mov
popf
jns
cmpsl
out
mov
add
dec
jae
xchg
mov
lret
xor
daa
mov
push
xchg
add
out
ret
sbb
jmp
pop
or
cld
jne
bound
mov
xchg
adc
pop
cmp
xchg
and
cmpsb
jl
loopne
xor
or
xor
sub
js
sub
aad
mov
loope
mov
and
in
push
sub
aam
mov
movsb
push
mov
scas
or
aad
hlt
mov
push
cld
push
or
or
aas
loop
icebp
push
push
pusha
cld
xchg
push
jb
loope
mov
xor
sbb
xchg
int
xchg
xchg
pushf
jae
rcl
xor
add
cmp
cmp
mov
call
xchg
adc
sti
sub
aam
dec
testb
or
pop
cmp
push
mov
int3
jae
int3
sub
xchg
data16
push
cmp
adc
stc
ds
jns
fdivs
cmp
std
mov
pop
adc
sbb
push
jmp
dec
add
or
adc
mov
mov
aam
pop
mov
cmp
int3
cld
mov
dec
mov
xor
jbe
aam
mov
aaa
icebp
add
je
sub
test
insb
rcl
bound
movsb
cmc
out
inc
mov
ret
sbb
ja
push
lds
daa
in
pop
jmp
jecxz
repnz
push
pop
add
test
push
mov
fisubrl
mov
into
push
jg
mov
fwait
ss
incl
int3
int
cld
icebp
pusha
mov
imul
xlat
mov
fsub
call
xchg
aam
mov
rorb
js
ljmp
xchg
cmp
inc
hlt
addr16
pop
mov
dec
fbld
roll
das
sarl
pop
and
iret
add
in
insl
mov
mov
aam
dec
fisttpl
decb
icebp
dec
loopne
sub
and
push
into
adc
test
mov
into
cltd
or
cwtl
stos
sub
push
and
lret
xchg
cmpl
and
mov
sarb
fsubl
add
xchg
or
mov
or
dec
cmp
and
pop
out
movsl
cmp
cmpsb
rcrb
or
adc
cmc
nop
mov
xor
dec
xlat
mov
jge
in
sbb
pop
push
mov
push
xor
or
sbb
dec
gs
je
xchg
sub
rcrb
adc
jecxz
ds
push
push
int
popf
loope
cli
mov
push
jae
aaa
bound
fwait
mov
mov
xlat
xchg
add
cli
in
sub
cltd
nop
cmpl
jb
push
stos
jbe
sub
jp
cwtl
sbb
orb
pop
aad
int
xchg
cmp
inc
pop
or
into
sti
scas
fimull
push
int3
addr16
and
cmpsb
in
adc
leave
test
insl
jl
outsb
cmp
pop
dec
and
bound
sub
jae
and
addb
push
mov
arpl
jg
xchg
pop
sbbl
divb
aaa
mov
jbe
jge
je
sbb
imul
popf
sbb
xchg
int
adc
sub
jecxz
xchg
lcall
xor
rcr
pop
mov
jl
mov
in
lret
xchg
push
icebp
or
rorb
and
fwait
add
out
outsb
lahf
out
repz
mov
xlat
inc
push
inc
inc
insb
lcall
loopne
or
test
lret
std
clc
into
sbb
xchg
cmp
xchg
movsb
mov
push
mov
jp
mov
fs
nop
setno
push
enter
adc
loope
jge
into
gs
cmp
pop
test
fwait
cmp
xchg
push
aad
imul
js
pop
jb
xchg
cmp
cwtl
or
and
nop
repz
pop
arpl
shr
fidivrl
movb
sahf
xor
push
stos
inc
mov
mov
pop
sahf
sbbl
call
rclb
cwtl
dec
add
jecxz
xchg
fldl
mov
add
xchg
not
add
or
adc
cmp
scas
mov
xchg
inc
dec
int3
and
mov
ret
lcall
mov
jnp
js
inc
sub
jns
dec
jp
add
xor
shl
mov
xlat
sbb
dec
fsts
fistpl
mov
divb
inc
dec
add
sub
mov
leave
aaa
orl
fwait
push
cmp
inc
inc
cmc
popa
stos
out
out
jne
xor
imul
popf
mov
xchg
inc
pop
fmulp
cmc
dec
add
jge
popf
jle
shrl
adc
mov
out
fstps
adc
mov
pusha
cltd
adc
jecxz
scas
daa
lahf
loopne
inc
mov
fwait
push
sub
jbe
pop
mov
mov
xchg
push
pop
sbb
aam
cmp
ret
fisubrl
add
dec
jno
mov
cmp
fwait
xlat
xlat
mov
pop
daa
popf
mov
rorl
scas
imul
repz
into
xchg
sbb
add
out
pop
shl
mov
sbb
xchg
cwtl
je
or
push
adc
dec
mov
xchg
pop
pop
fwait
loopne
jecxz
sub
out
in
lock
mov
pop
iret
out
mov
pop
scas
cld
aam
mov
adc
add
xchg
jl
and
jne
int3
mov
dec
mov
movsl
lods
arpl
fdivp
outsb
xlat
fcoml
or
ljmp
jno
mov
sub
jmp
pop
setb
testl
ss
pop
mov
stos
add
push
cmp
dec
das
push
rdmsr
clc
push
or
and
push
push
push
dec
mov
lods
cltd
addl
call
out
pop
mov
movsb
clc
frstpm(287
lods
cmpsl
into
push
mov
jb
push
test
pop
xchg
mov
mov
jne
pop
lret
je
ja
out
push
cmp
push
pushf
out
test
mov
jmp
xor
mov
std
dec
jo,pt
jg
or
inc
loop
into
inc
popa
mov
adc
int
mov
jne
and
iret
mov
cmpsb
movsb
loope
ss
inc
mov
xchg
inc
ret
xchg
in
mov
or
into
int3
push
inc
xabort
std
inc
mov
mov
shl
les
sbb
add
outsl
ds
daa
mov
lret
pop
xlat
sbbl
jo
mov
xorb
rclb
push
inc
ret
adc
adc
pop
imul
or
cwtl
adc
daa
das
jge
xchg
cmpsl
leave
sbb
fwait
inc
sub
sahf
xlat
adc
cmp
stos
push
jns
dec
xor
sbb
mov
push
jne
popa
push
rorl
jg
loop
xor
cmp
aam
mov
sub
push
dec
mov
dec
fcmovne
pop
in
mov
jp
or
adc
jae
pop
das
add
repz
cwtl
icebp
push
insb
aam
lret
je
add
ds
sub
mov
cwtl
aaa
lods
int
scas
movsb
jmp
add
subl
lods
jae
cmp
stos
add
jb
inc
enter
lds
inc
jbe
mov
gs
xor
aad
and
leave
dec
lods
push
xchg
xchg
das
jecxz
xchg
or
add
mov
push
fiaddl
mov
lods
out
jne
jbe
mov
dec
loopne
mov
je
fsubl
jmp
pop
loope
idivb
iret
cmc
push
mull
movsl
add
addr16
mov
repz
or
push
mov
test
arpl
sub
pop
test
jge
xchg
es
lret
mov
jle
mov
notb
sbb
cli
jg
cwtl
or
mov
stos
or
mov
jns
xchg
rcrl
inc
xor
or
jno
lret
xchg
xor
test
jae
mov
int
and
sub
mov
pop
mov
aaa
and
mov
dec
cmp
fwait
mov
leave
xlat
sbb
lods
popa
jg
mov
xchg
rol
mov
aas
xor
daa
divl
lahf
push
cmp
dec
mov
fdivs
mov
jg
int3
pop
push
data16
test
dec
mov
jp
aam
icebp
cmpl
dec
sbb
xor
sub
mov
mov
lods
push
pushf
outsl
dec
cmpsb
mov
adc
mov
cld
xchg
subb
push
sarl
fwait
arpl
jp
pop
mov
mov
push
je
push
or
cld
lcall
push
out
ss
inc
xlat
test
cmp
subb
mov
notb
es
mov
mov
rclb
xchg
pop
adcl
test
addr16
rorl
or
cmp
icebp
xor
adc
inc
out
jno
mov
movb
xlat
rcrl
iret
js
dec
xchg
add
mov
mov
popf
out
pop
xchg
nop
repnz
iret
and
sbb
dec
lahf
push
jecxz
sahf
pop
cmp
popa
sub
loopne
push
pop
sub
outsl
mov
mov
xchg
push
push
xor
dec
add
icebp
add
mov
or
inc
pop
jl
nop
xor
aam
mov
stos
fs
push
in
rcl
xchg
mov
inc
shlb
cmp
pop
dec
adc
cmpsl
push
fdivrl
dec
scas
dec
sbb
push
lret
add
push
cmp
add
sub
or
and
push
out
popa
mov
xchg
mov
pusha
xor
js
outsb
xor
mov
push
in
lcall
jmp
mov
fwait
cmp
in
xor
xor
push
das
jl
cmp
inc
sahf
es
xchg
loop
cli
sub
mov
cwtl
push
and
fdivs
test
data16
inc
daa
loope
sbb
xchg
lret
inc
mov
xchg
mov
mov
push
imul
fiaddl
mov
pop
mov
daa
rcl
dec
push
mov
leave
bt
inc
and
and
or
xchg
shlb
add
imul
imulb
insl
and
cld
int3
in
add
dec
orb
jmp
pop
add
adc
dec
fwait
shlb
xlat
xor
lret
cld
test
inc
jno
or
add
lods
xor
push
pop
mov
mov
xor
fdivrs
addr16
fstpt
xchg
xchg
cld
rcl
xor
icebp
cmp
int3
xchg
fs
sub
test
cmp
stos
mov
jecxz
inc
and
into
rcrb
push
cmp
std
xchg
aas
cld
sahf
add
addl
test
leave
into
loopne
cmp
dec
movsl
test
gs
ret
std
lods
ja
fidivrs
jle
fdivr
fnsave
lret
vrsqrtss
jne,pn
lret
es
repz
scas
sbb
ja
movsb
inc
icebp
mov
jo
mov
cmp
insb
xor
or
lods
add
and
in
popa
shlb
out
insb
cmp
movsl
adc
or
in
inc
mov
aas
movsl
ficomps
sarb
adc
mov
xorb
fiaddl
mov
rclb
not
push
inc
mov
xchg
cmpsl
and
add
out
push
repz
pop
or
movsb
sbb
loop
dec
stc
push
adc
cmp
mov
mov
inc
mov
adc
sti
out
out
fbstp
adc
push
adc
das
orl
testl
push
xor
stos
sub
movsl
cmpsb
mov
dec
shlb
lret
lcall
jae
inc
jbe
sbb
scas
je
mov
cs
cwtl
sub
aas
jl
aam
pop
sub
movsl
ror
cmpb
es
xchg
mov
inc
xchg
cmpsb
pop
insl
iret
xor
inc
push
pop
push
jmp
xor
mov
lret
call
je
shll
inc
or
push
adc
cltd
js
das
mov
sbb
pop
push
movsw
shrb
jae
xchg
mov
push
jne
out
aam
inc
mov
jg
sub
loope
xor
sbb
or
in
mov
imul
jecxz
push
jle
cmpsb
jne
out
hlt
and
jecxz
mov
je
mov
cmp
mov
xor
out
ja
xchg
sti
mov
popa
adc
enter
mov
inc
push
xchg
insl
mov
rorb
enter
pop
pusha
inc
add
iret
fldenv
test
cmp
fmul
stos
in
daa
or
sbb
mov
lea
test
cli
pop
push
iret
mov
mull
cld
movsl
pop
inc
repnz
insl
dec
push
test
and
loope
int3
pop
icebp
xchg
xchg
pop
loop
jmp
stos
jb
ss
into
scas
xor
and
dec
mov
pop
iretw
xor
das
mov
test
or
in
ss
stc
jbe
into
fstl
aam
test
dec
xchg
int3
cmp
pushf
lock
imul
sbb
mov
dec
scas
jmp
pop
pop
test
pop
insb
movsb
jmp
jae
pop
xchg
test
dec
daa
jbe
leave
mov
cld
and
and
jb
inc
pop
movsl
movsb
lahf
pop
cmp
icebp
xor
test
aam
les
push
orl
push
jns
icebp
jo
cli
call
and
inc
ret
or
in
xor
popf
imul
push
std
inc
out
rorb
out
ret
ljmp
jb
pop
jl
jge
cmp
les
pop
mov
add
mov
adc
fists
jnp
out
pop
mov
ljmp
lret
sbb
int3
or
repnz
xchg
pushf
sub
pushf
aad
adc
sub
sbb
sbb
pop
out
adc
shll
pop
pushf
stos
mov
insl
loopne
jns
sub
aas
adc
pop
outsl
xchg
mov
inc
jne
aaa
lret
data16
xchg
mov
dec
push
xlat
cmp
push
inc
xor
fs
inc
sbb
push
stos
push
inc
xchg
inc
enter
xor
push
push
test
popf
xchg
cmc
sarl
mov
and
sbb
jbe
imul
xor
cld
xchg
cmp
add
rcl
or
cli
pop
or
cmpsb
leave
xchg
movsl
xchg
cmc
fcoms
inc
adc
fs
sub
pop
mov
adc
push
xchg
adc
cmc
mov
and
out
adc
pusha
lret
jbe
faddp
xor
push
cmpsb
sbb
push
je
xchg
jbe
punpckhbw
mov
sub
xchg
mov
fldenv
out
out
or
sahf
inc
leave
iret
negb
loopne
pop
jne
adc
cmp
jno
cltd
cld
push
mov
test
test
test
fildl
mov
popf
xor
lea
leave
push
inc
dec
aaa
es
outsl
pop
lret
mov
test
icebp
dec
out
sub
in
fwait
fadds
out
test
mov
inc
or
leave
add
cmpsl
stos
jg
cmp
xchg
mov
loope
fcmovnb
shl
mov
cmp
in
add
out
sub
jnp
inc
cmpsb
push
mov
call
inc
pop
movsl
stc
cmp
outsb
clc
ds
int3
jo
in
incb
ret
rorl
cli
lds
xchg
lods
arpl
loopne
jno
fnsave
xlat
mov
in
pop
mov
lret
cmpsl
rcrb
rcl
std
dec
and
fisubrl
ja
push
add
call
and
add
jbe
jnp
loopne
cmp
pop
xchg
int3
rcl
outsl
pushf
jge
cwtl
mov
mov
out
flds
movsl
sti
in
loope
and
and
out
dec
cmp
movsb
cmp
sbb
jmp
jmp
hlt
lret
mov
jno
dec
aad
lods
insl
rclb
idivb
je
pop
cld
mov
jb
mov
adc
add
sub
push
xchg
jbe
fsubs
jns
push
jno
jmp
daa
test
imul
int
rcl
inc
rcrl
movsl
sub
and
inc
mov
ja
mov
shlb
push
lret
imul
cld
xor
lods
or
and
jae
xchg
push
cmp
jl
not
sti
mov
ds
cmc
sbb
and
mov
adc
xchg
imul
sub
pop
movzwl
mov
sub
jne
dec
into
or
pop
fistps
dec
imul
test
jg
push
repz
add
arpl
pop
push
mov
aas
ds
sbb
stos
add
in
sahf
xchg
testb
sbb
repz
pusha
pop
fwait
and
mov
movsl
jo
rolb
cmp
xchg
out
iret
xor
and
xor
fldenv
pop
xchg
sbb
add
adc
je
mov
repz
lods
iret
iret
push
js
dec
pushf
jno
mov
icebp
jb
cmp
mov
xor
stc
loopne
adc
jp
pop
pop
les
sbb
cld
in
fcoms
xor
rolb
adcb
ds
loopne
cmp
test
stos
or
cmp
jnp
fsubs
pushf
in
clc
inc
jmpw
mov
cmp
repnz
jle
popa
scas
andb
push
ja
imul
inc
les
aad
inc
psrlw
popa
cld
mov
ss
in
mov
pop
cwtl
sub
sbb
data16
pop
mov
add
aam
pop
and
adc
out
and
push
jl
or
mov
xor
mov
inc
lret
mov
push
test
fdivrl
cli
loope
jns
xchg
ja
push
movsb
insl
into
mov
scas
push
stos
fsubs
mov
sbb
lret
lret
cld
cmp
sub
adc
pop
xchg
sub
ja
jecxz
movsl
iret
mov
ss
mov
jb
sub
mov
sub
out
jbe
jne
jmp
subl
mov
fcomip
xor
and
dec
mov
jbe
sarl
mov
idivl
out
bound
repz
pop
xor
sub
cs
push
fbld
icebp
xor
into
inc
repnz
dec
rcl
add
or
sub
mov
sahf
mov
push
arpl
or
cmpsl
fwait
sbb
mov
dec
mov
mov
push
add
aaa
ret
loope
xor
andl
push
call
arpl
xchg
jne
int
sarb
jg
ret
add
push
push
xchg
cmpsb
movsl
mov
ror
mov
add
or
aam
roll
jp
add
movsl
cmp
push
iret
or
mov
in
jns
xor
lds
into
pop
xchg
mov
cmc
push
jecxz
outsl
mov
xor
xchg
fmuls
lret
or
dec
mov
push
pop
in
mov
sbb
addr16
jl
xchg
aad
stos
add
imulb
pop
stc
and
cs
adc
adcb
mov
ds
inc
cmp
adc
icebp
fmull
arpl
lcall
jp
add
push
push
popa
or
sub
dec
js
dec
mov
jb
mov
leave
push
lret
int
mov
hlt
or
pop
mov
push
adc
sbb
or
test
mov
aad
out
mov
pop
int3
test
ds
pop
into
add
push
movb
sbb
out
add
in
mov
jo
movsl
scas
mov
arpl
lret
icebp
test
lods
fisttpl
lods
fwait
jae
cmp
sub
fdivl
pop
js
or
or
push
jp
stc
rolb
pushl
mov
mov
pop
out
jne
repnz
inc
mov
mov
dec
adc
jge
pop
mov
cmp
out
decl
mov
clc
xchg
out
add
push
jp
adc
pop
mov
lds
imul
push
loop
popaw
jl
lock
jge
pop
jo
call
dec
dec
push
arpl
push
jne
dec
stos
jno
lret
adc
scas
adc
leave
sbb
outsl
lret
mov
jp
dec
into
push
insb
pop
lahf
int
dec
loop
cmp
lods
xor
enter
ds
in
pop
jg
jmp
xchg
xchg
pop
aaa
movhps
lods
outsl
or
mov
cmp
pop
lds
mov
mov
inc
push
xchg
push
sbb
xchg
jbe
pop
bnd
aam
int
mov
clc
mov
int3
sbb
dec
ljmp
cmp
sub
pop
lret
sub
sbb
lcall
jno
mov
dec
test
movsb
and
in
mov
test
in
fdivrs
dec
aam
pop
jne
mov
inc
inc
call
out
xor
scas
cs
insl
mov
jg
popf
loopne
movsb
fisubrl
repz
xchg
or
xchg
pop
out
mov
fnstcw
cld
cmp
je
mov
dec
out
int3
cmpsl
and
add
mov
inc
test
mov
ror
fs
cmp
or
cmp
inc
inc
mov
mov
sbb
stc
push
xchg
stos
mov
or
es
insl
aam
ret
jmp
push
dec
lds
cmp
in
addr16
test
test
pop
fdivr
mov
xchg
xchg
jne
mov
int3
cmc
cmp
test
aas
cwtl
or
mov
adcl
sub
stos
and
mov
test
jge
dec
arpl
xchg
scas
and
pop
fsts
dec
cwtl
in
xchg
movsl
jns
fcoms
aam
pushf
mov
jnp
add
out
and
loop
xchg
cltd
fiadds
bound
shlb
push
xlat
mov
into
imul
cld
mov
adc
flds
xor
iret
jmp
je
cmp
nop
lods
jbe
xchg
jp
jo
roll
out
cmp
mov
xor
cld
hlt
inc
dec
and
test
xchg
rcr
cmp
adc
fidivrl
cmp
dec
add
xchg
mov
mov
cmpsl
in
or
fisubrs
mov
rorb
cld
out
xorb
mov
out
cmc
sahf
pop
into
xchg
mov
xchg
ljmp
inc
lret
jl
fistl
inc
inc
cmp
jp
xchg
xor
into
push
sarb
repnz
jle
imul
cmpsl
cld
imul
jne
inc
jns
in
sub
stc
pop
out
jl
stos
sub
icebp
mov
ss
sarb
pop
adc
jb
dec
push
push
jbe
lret
jge
add
cwtl
mov
rcl
addr16
mov
dec
mov
xor
jnp
out
aaa
lahf
sbb
dec
outsl
imul
hlt
lds
sahf
xchg
mov
pop
inc
or
pop
inc
in
jecxz
imul
mov
out
jb
or
fwait
ss
movsl
mov
test
cmp
jae
mov
ja
lods
pop
xchg
out
fisttpll
jg
mov
stos
repz
sbb
cmp
in
in
jne
jo
rclb
add
push
sbb
out
bound
rcl
int3
mov
shlb
dec
add
xor
loope
dec
add
adc
mov
shlb
mov
lds
and
orb
sahf
out
push
xchg
fs
popa
lret
mov
mov
or
dec
nop
ret
dec
add
shl
or
outsl
stos
data16
or
jne
push
insb
in
xchg
mov
dec
aaa
clc
jecxz
lock
xchg
ror
lret
dec
loop
cmp
push
movb
dec
ja
sarb
or
popa
sar
sub
pusha
adc
xchg
movsl
imul
lock
push
lods
add
xor
xor
jno
push
divb
cmp
popa
sub
xchg
jbe
fiadds
mov
repnz
test
enter
shr
scas
repz
adc
test
cmp
sbb
pop
xchg
jbe
jle
data16
enter
sub
ja
int3
int3
lock
faddl
pop
mov
stos
ret
test
sti
shll
inc
cltd
push
dec
ljmp
aad
lcall
xchg
dec
cmp
jbe
jle
aaa
test
lret
xor
mov
lret
add
out
cmpb
jecxz
leave
call
into
mov
dec
cmp
cwtl
mov
sbb
mov
jle
addl
imul
cmp
jno
stos
push
out
dec
sbb
mov
stc
dec
jns
cmp
mov
mov
roll
loop
cmc
sub
rcrl
jmp
mov
push
fisubl
cli
or
jno
jmp
imul
add
adc
cwtl
fcomi
dec
xor
pushf
cld
push
or
rcrb
jp
rcrl
mov
sub
pop
cwtl
adc
sbb
dec
jg
aas
es
xor
pop
jno
cld
loop
cs
cmpsl
or
sbb
xchg
push
jg
push
out
xchg
or
sub
adc
in
fsubp
push
mov
sub
push
sub
mov
stc
sbb
int3
ljmp
out
cmp
pop
push
xor
push
jae
mov
mov
xchg
stos
mov
and
cmp
lret
push
insb
inc
orl
in
mov
xchg
pushf
jge
mov
mov
adc
sarl
sbb
imul
js
xor
inc
fisubrl
in
mov
in
mov
test
int3
mov
adc
push
aad
in
jne
in
repz
ret
int3
mov
icebp
fstpl
arpl
adc
and
das
xor
and
in
out
mov
bound
xor
cmp
mov
or
call
pop
inc
or
pusha
in
fcoml
test
and
lret
roll
jne
aam
aas
add
cs
add
mov
jp
jnp
insl
push
push
sbb
arpl
cmp
jg
cmpsl
xchg
xor
fwait
pop
cli
xchg
icebp
jae
pop
sub
xchg
cmp
jge
jbe
and
not
lret
dec
inc
lds
sbb
into
sub
mov
rorb
gs
push
xchg
into
pop
and
ljmp
adc
dec
daa
jno
mov
push
push
mov
add
test
xchg
dec
xor
scas
mov
xor
push
adc
or
pop
arpl
and
mov
in
leave
push
mov
mov
in
cs
dec
push
mov
lahf
scas
mov
fisttpll
sbb
dec
sahf
inc
insb
push
cmp
xchg
and
andl
xchg
repnz
aam
andb
fmull
dec
push
xchg
xor
data16
push
in
xchg
lds
loopne
sbbl
in
sub
shlb
dec
mov
pop
jl
mov
fbld
cmc
pop
mov
leave
inc
je
add
scas
mov
push
mov
pop
mov
je
jb
inc
sub
xchg
in
cli
jmp
jp
insl
xchg
add
out
dec
test
icebp
jno
repnz
push
fcoml
arpl
mov
add
xchg
test
xor
js
andl
xor
std
fwait
pop
and
loopne
flds
fdivrs
icebp
ror
mov
stos
mov
or
rolb
pushf
ss
sbb
sarb
arpl
dec
or
lret
jle
insb
xor
jmp
call
mov
sti
push
push
adcl
pop
pop
pushf
inc
aam
mov
xchg
add
aaa
inc
arpl
scas
push
sub
icebp
xchg
pusha
mov
aaa
lret
push
aas
test
clc
pop
xorl
xor
popa
mov
jns
mov
xor
cs
pop
pop
lods
loopne
mov
sub
ljmp
push
into
jmp
mov
pop
inc
in
pop
cmpsl
int3
add
push
cmp
jle
push
add
xor
insb
xchg
out
mov
jecxz
aas
mov
push
icebp
fistps
inc
jae
clc
mov
xchg
jbe
mov
mov
aaa
adc
arpl
adc
mov
xor
out
cmp
imul
mov
jle
sbb
xchg
mov
sbbl
xchg
cmpsl
fwait
sti
cmp
mov
into
ja
lahf
outsb
pop
push
xchg
rcrl
jo
jmp
hlt
dec
and
mov
insl
mov
aas
jecxz
mov
inc
call
arpl
jbe
test
xor
dec
gs
push
dec
aaa
ficoml
xchg
arpl
add
lds
leave
notb
mov
and
pop
in
dec
add
imul
jge
push
sti
xchg
sbb
push
stc
loope
imul
shrl
mov
out
lods
into
lea
sub
add
jno
mov
xor
pop
cmpsl
sahf
andl
dec
mov
fsubrl
out
xor
sbb
adc
sbb
mov
into
insb
push
xchg
jns
jmp
into
jnp
push
jmp
inc
fsts
sub
clc
scas
jle
push
mov
sahf
leave
push
and
dec
mov
mov
popa
sub
mov
incl
dec
lods
mov
out
fst
add
pop
cmp
lret
cmp
sub
nop
popa
xchg
jb
out
pop
aaa
mov
dec
mov
mov
je
pop
mov
fdivs
push
test
pop
mov
iret
mov
inc
iret
subb
push
fldcw
or
mov
sti
mov
mov
cmp
dec
xchg
addr16
pusha
cltd
mov
fdivs
adc
xor
test
test
xchg
das
pop
jbe
std
loop
push
pop
sub
dec
loope
xchg
mov
neg
aaa
lcall
aad
or
gs
loop
repnz
movsl
sub
xlat
lods
out
out
insl
movsb
call
mov
notl
sub
pop
sub
lods
lock
xchg
fldenv
leave
in
push
xor
inc
inc
iret
xchg
xor
nop
mov
rol
pop
jne
push
fcmovnbe
out
xlat
in
jnp
rcll
mov
cmp
and
mov
ljmp
stos
in
pop
fst
aas
clc
mov
fcmovnbe
fsts
jmp
movsl
mov
sbb
add
pusha
xchg
xchg
jp
les
lahf
cmp
shl
lret
sub
sbb
sbb
xlat
jns
rcr
int3
cld
push
fldcw
not
outsb
add
dec
pop
cmp
jecxz
gs
push
and
into
call
inc
push
and
idivl
rclb
lret
sub
test
push
and
cmpsl
call
push
pop
or
shll
adc
inc
mov
loopne
cmpsb
insb
cmp
sahf
add
inc
vshufpd
arpl
xchg
movb
mov
adc
mov
pushf
and
add
and
insb
out
jbe
scas
add
sub
in
adc
stos
xchg
arpl
sbb
push
call
fcmovne
sub
test
mov
jne,pt
jl
movsl
sub
imul
sbbl
mov
lds
lods
call
fsub
dec
sti
and
aaa
into
fcmovnbe
adc
ja
stc
and
jae
shll
push
xchg
imul
jmp
xorb
dec
je
aas
dec
xor
jnp
push
inc
push
or
enter
sbb
test
xchg
or
push
jge
aaa
test
jg
dec
adc
xchg
out
das
sbb
shll
dec
push
jno
push
sub
addr16
jnp
fldpi
loopne
sahf
pop
cmpb
jle
outsl
mov
scas
fwait
jl
and
mov
jle
sub
or
shrb
xor
out
push
out
pop
and
pop
mov
rorl
lods
xchg
adcl
pop
pop
mov
movsl
lods
add
into
fstps
push
pop
sti
enter
roll
adc
iret
inc
out
and
lahf
out
cmp
and
adc
mov
movsl
and
mov
es
adc
test
xorb
jbe
mov
aam
pop
pop
out
mov
dec
dec
cmp
fsubp
sbbb
adc
inc
js
sbb
cli
mov
ljmp
mov
add
adc
ljmp
ret
imul
mov
leave
and
jnp
and
xchg
inc
repnz
mov
test
cmp
sub
xchg
and
out
mov
mov
jle
sarb
jne
xor
fstpt
xchg
push
or
push
push
mov
fistpl
test
mov
add
mov
shlb
dec
jne
cld
leave
pop
cmp
fsubrp
xchg
scas
stos
insl
aam
lock
out
ds
fcomp
mov
lret
sbb
xor
pop
loop
test
xchg
fsubr
out
fdivrs
sbb
lret
rcl
xchg
scas
mov
es
sbb
lea
mov
into
subb
fistl
repz
push
jbe
sub
push
and
add
cmp
sbb
pop
push
lods
dec
dec
sahf
mov
lret
into
dec
inc
adc
and
inc
adc
xchg
rolb
dec
daa
ret
scas
ss
mov
dec
mov
cmp
jg
dec
aam
push
mov
inc
pop
scas
mov
fsubrs
xchg
push
jbe
mov
movsl
les
ret
int
xchg
cmc
clc
xchg
sub
cmp
out
push
stos
mov
mov
mov
cld
mov
and
add
mov
mov
into
sahf
mov
pop
push
inc
or
jle
jb
shll
mov
adcl
pop
fs
out
leave
xchg
pushf
sbb
adc
cmp
adc
aaa
rorb
cli
movsl
mov
mov
lahf
lock
mov
sub
dec
push
hlt
test
adc
xchg
xchg
cwtl
mov
add
and
sbb
in
popa
lock
dec
jmp
add
subb
push
mov
shlb
and
into
ljmp
mov
inc
xor
in
sbb
mul
add
daa
lret
jecxz
cltd
jo
call
xchg
leave
into
bound
repz
sbbb
and
scas
enter
fs
add
je
lret
xor
adc
push
mov
mov
adc
jmp
aas
popa
and
aaa
scas
cli
sbb
adc
movsb
sti
pop
xor
sbb
sub
stc
in
test
push
out
xchg
jmp
pop
jbe
inc
fdivrs
ret
in
fsubr
push
lods
xor
xchg
xor
adcb
and
push
lret
das
xchg
dec
xorb
xchg
sarb
into
push
push
lods
jbe
insb
mov
insb
repz
push
jae
das
repnz
jge
add
int3
icebp
adc
sbb
xchg
push
jne
xchg
jmp
inc
lret
icebp
jno
in
sarb
dec
inc
lods
std
add
fadds
mov
or
or
push
mov
sahf
xchg
xor
outsl
and
xchg
add
lcall
scas
icebp
adc
dec
iret
dec
and
bound
mov
pop
and
movzwl
cmp
or
repz
testl
imul
in
sarl
lock
repnz
adc
dec
test
fs
jecxz
js
xor
cmc
jno
test
in
jne
pop
xchg
adc
sub
jge
clc
pop
lcall
push
js
push
out
xchg
xchg
mov
aaa
ds
mov
mov
or
cmp
jb
mov
sti
xchg
cmp
stos
out
data16
std
xor
pop
mov
ret
cmc
add
mov
cmpsb
fsubl
adc
jge
scas
out
dec
push
clc
mov
sbb
xlat
mov
mov
sub
into
mov
cmp
loope
jns
lret
cmpsb
loopne
in
pop
jmp
in
xchg
cmp
insl
loop
inc
enter
clc
jmp
add
mov
mov
imul
pop
and
xor
cmp
enter
outsb
inc
pusha
mov
xchg
fisttpl
xor
mov
stos
enter
jp
add
fcmovbe
fistl
lea
pop
adc
adc
test
testb
sbb
ret
cld
es
mov
xor
shrb
adc
mov
and
sub
lock
negb
sbb
adc
xor
push
and
int
stc
jne
inc
test
sbb
cld
push
sub
movsl
mov
les
mov
mov
xchg
rol
aad
jle
stos
cmpsb
xchg
cltd
or
fdiv
fimuls
jg
shrb
popa
sub
int3
mov
mov
out
jno
aas
test
popf
xchg
xchg
xchg
fisubrs
jnp
jns
rolb
xchg
ret
cmp
inc
loopne
mov
scas
clc
dec
es
pushf
lds
pop
fs
xchg
add
mov
bound
and
cmp
imul
sbbb
cmp
cltd
cmpl
iret
pushf
rcl
cs
ja
pop
cmc
jle
andl
mov
sub
pushf
fld
out
mov
and
cltd
mov
sti
adc
int3
sbb
out
iret
jns
fidivrs
and
mov
and
adc
pop
in
xchg
mov
icebp
not
in
add
cwtl
xchg
cld
mov
shrb
arpl
inc
fbld
jo
icebp
dec
adc
popa
sbb
push
and
jle
in
shrl
into
cmpsl
push
sbb
cmpsb
insb
mull
incb
shl
addr16
ja
test
stc
orl
mov
or
add
mov
lods
dec
cs
loop
mov
push
popf
jnp
lods
push
pop
popa
lods
xchg
pop
sbb
add
aas
loop
inc
sbb
rcr
xchg
pop
cmp
mov
and
cwtl
jne
nop
movsl
in
xchg
sbb
inc
popa
jmp
shl
outsb
jns
xchg
push
rcl
ffreep
pop
pusha
repz
dec
or
cmc
mov
sub
sbb
sbb
les
fidivs
push
cmp
fs
rcl
inc
lret
mov
mov
test
jp
inc
int
mov
in
js
add
push
cmpsb
add
mov
sbb
jbe
jae
fldl
mov
mov
repnz
pop
adc
scas
or
add
fisubrl
mov
clc
xlat
inc
pop
int3
sbb
scas
xor
inc
inc
mov
xchg
imul
outsl
xchg
adc
ret
test
loope
lock
movsl
bound
out
or
sahf
push
mov
mov
call
add
pop
jbe
cmp
sbb
mov
push
inc
loop
insb
ret
addl
not
dec
lret
mov
and
mov
addb
into
adc
scas
dec
mov
sahf
sbbb
sbb
rorb
pop
push
cs
inc
mov
dec
into
outsb
fmull
mov
out
adc
insl
nop
mov
ds
insb
mov
pop
cs
lret
dec
mov
movb
fadd
stos
adc
lret
repnz
push
imul
jp
pop
inc
adc
test
dec
jl
or
out
pop
xchg
sahf
xchg
int
adc
jbe
test
sub
or
es
mull
test
dec
or
inc
das
cs
pop
sub
ds
add
xchg
jne
call
loope
int
data16
inc
sbb
daa
int3
cmpsb
push
xchg
fldt
push
mov
or
mov
cmp
cmp
filds
pop
jbe
aam
inc
push
pop
into
fidivrs
sub
js
ret
cmp
xchg
mov
mov
inc
xlat
es
push
xor
das
pushf
int3
gs
or
jg
in
pop
in
lret
dec
jmp
insb
int
imulb
lods
dec
cmc
ret
sbb
sub
test
lret
pop
mov
insb
decl
jb
dec
sbb
adc
pop
inc
or
xchg
cmp
pop
push
ja
lret
xchg
data16
mov
loope
sub
enter
cmpsb
es
stos
cmp
lcall
pop
pop
and
repz
cli
jnp
test
pop
hlt
mov
pop
leave
mov
lahf
insl
es
ss
pop
xchg
movsl
mov
or
mov
cld
bound
scas
xchg
inc
fists
test
jbe
clc
inc
adc
mov
xchg
popf
fimuls
mov
jp
inc
stos
pop
ja
movsl
icebp
adc
dec
jmp
jne
mov
mov
into
fwait
adc
lds
push
sub
cli
movsl
in
xchg
ficoms
cmp
xor
loop
xchg
stos
jle
lods
jecxz
or
fs
add
out
mov
cmpsl
imul
or
pop
addr16
aad
in
clc
or
xchg
movsb
divb
stos
mov
scas
fldt
ds
xor
rcrl
mov
daa
mov
push
test
shl
repz
mov
add
xchg
jl
jg
sub
cmp
in
icebp
stc
inc
mov
xchg
add
push
mov
xchg
das
push
flds
cmp
inc
sbb
add
hlt
add
pusha
sub
test
mov
push
inc
inc
loope
pop
mov
push
fs
push
xchg
mov
xor
jge
sub
cmp
mov
pop
cs
and
mul
sub
addr16
and
lods
and
sub
adc
jo
lcall
into
xchg
xor
xor
sub
xor
popf
or
into
in
lods
filds
xchg
pop
sar
das
or
xor
in
inc
xor
push
xchg
hlt
xchg
pop
push
sbb
outsb
lret
ljmp
into
scas
test
dec
hlt
mov
out
mov
out
dec
sub
out
mov
jbe
pop
and
inc
test
lret
inc
mov
inc
push
cmp
mov
pop
rcl
arpl
js
xor
jne
shlb
imul
rcl
out
push
js
cmp
lods
add
mov
lods
pusha
dec
inc
add
jge
aaa
jo
test
jecxz
pop
jmp
dec
adc
loop
add
jne
ja
and
mov
dec
lret
int
mov
cli
jl
cmp
or
insb
sub
jmp
xchg
and
das
test
shrb
dec
pushf
out
imul
or
ss
push
adc
pop
stos
xchg
inc
xlat
int3
add
test
movsl
repnz
sub
and
rcrl
pop
dec
mov
faddl
jge
lret
mov
bound
outsb
aam
xor
in
leave
jg
mov
push
adc
cld
mov
and
bound
inc
push
fsubrl
mov
mov
xor
arpl
push
dec
rcl
jno
mov
mov
or
sub
or
mov
js
pop
iret
fists
adc
subb
stc
leave
orb
xchg
test
dec
jmp
inc
mov
test
and
in
mov
inc
adc
test
cs
inc
subb
jae
push
stos
adc
lods
icebp
pop
data16
inc
bound
es
mov
lahf
sbb
and
out
in
xor
xchg
hlt
insb
push
lods
mov
mov
pop
inc
iret
pop
cmp
ret
add
xchg
repz
push
cwtl
das
movsb
imul
int
testl
lds
into
mov
add
jmp
push
xor
add
push
jmp
add
stos
jo
inc
mov
sbb
sub
pop
js
je
xlat
sahf
and
xor
iret
jno
inc
and
sub
lea
xor
and
mov
scas
and
xchg
pop
mov
iret
mov
cmp
push
arpl
xor
push
adc
jmp
add
or
test
ja
out
jg
int
push
push
and
cmp
xchg
cmp
rclb
into
jmp
ss
lcall
inc
aaa
rcl
loop
or
xchg
push
push
aam
popa
rolb
pop
push
mov
push
lods
push
push
neg
int3
adc
lret
sarl
add
push
lret
loop
aam
mov
push
and
pop
mov
fisttpl
mov
jmp
mov
jae
or
mov
ficoml
aad
xchg
pop
leave
push
push
lret
inc
ret
dec
sbb
out
mov
sub
data16
int3
imul
loop
or
cwtl
pop
push
push
pop
jl
xchg
int
notb
adc
mov
xchg
test
jae
xchg
cwtl
fldenv
xchg
into
add
je
cmp
xchg
sub
cmp
fldl2t
out
inc
or
punpckhwd
scas
aam
push
mov
adc
xlat
mov
pop
xlat
add
inc
mov
mov
xchg
jl
cmp
ds
shll
push
jnp
imul
icebp
cmp
xor
mov
push
into
stos
arpl
pop
out
add
jns
jl
xchg
sub
add
sbb
xchg
rol
call
jne
cmp
push
and
es
ds
jmp
icebp
test
pop
cltd
cmp
add
aam
pop
js
movl
xchg
xor
lret
jb
mov
pop
add
pop
and
sub
push
cmpsl
into
dec
xchg
jb
mov
nop
sti
aam
out
pop
test
in
leave
rcrl
stos
daa
dec
outsl
loopne
lcall
xor
ljmp
dec
jg
outsb
adc
mov
xchg
push
pusha
cmp
das
aaa
rorl
add
shlb
mov
subb
or
xchg
inc
test
adc
lods
cmpl
pop
ja
jnp
pop
int3
sub
pop
push
pop
stos
fldenv
ror
es
out
pop
lahf
jecxz
mov
cld
adc
jns
xchg
sti
cmpsb
cmp
test
stc
jnp
icebp
mov
inc
sbb
movsl
fstpt
adc
lods
pop
jb
sub
or
lds
in
inc
test
or
les
pop
sub
movsl
pop
push
idivl
xchg
sub
fidivs
testb
adc
dec
pop
add
ljmp
xchg
int
imull
inc
dec
scas
cmpsl
mov
das
lock
cmp
arpl
scas
mov
mov
fistpl
cli
jae
mov
test
mov
out
xor
sub
loopne
adc
imul
cmpb
pop
lret
push
fistpl
mov
xor
mov
loopne
mov
pushf
push
stos
jl
or
mov
subl
addl
rcrb
into
pop
push
and
mov
mov
lret
es
aad
lds
clc
popf
push
aam
or
fsubl
or
cmp
das
sbb
push
mov
mov
xlat
ror
xchg
inc
int
inc
movsb
fcmovnbe
loopne
ret
nop
sub
pop
sti
cmp
arpl
jnp
gs
jp
and
test
dec
das
or
fcoms
int
inc
ja
lods
out
adc
popf
lret
mov
xchg
sub
cmpsb
xchg
dec
xchg
mov
mov
jo
mov
sbb
in
push
aas
rcr
pop
jge
dec
mov
daa
jmp
popf
pop
sbb
imul
cld
pushf
or
dec
xchg
popf
and
rcll
stos
add
cmpsb
and
add
push
push
dec
lcall
mov
rcl
rcrl
insl
aas
ret
mov
push
mov
fucomi
mov
xrelease
inc
mov
xchg
mov
mov
push
movl
sbbl
xchg
inc
loopne
fcoms
xchg
sbb
pop
aaa
sub
lcall
pop
aas
push
xlat
or
enter
rcll
mov
mov
icebp
in
inc
jo
ret
pop
mov
mov
xchg
aam
stos
mov
lock
push
movsl
cmp
sub
cs
into
jecxz
add
pop
and
loop
test
add
xchg
lcall
daa
sub
lods
insb
dec
divl
push
mov
jbe
push
rorb
mov
ret
add
mov
inc
xchg
mov
dec
jmp
in
add
mov
cwtl
push
pop
ljmp
loope,pn
lods
sbb
out
das
add
in
fisttpl
push
xlat
repz
test
pop
push
pusha
mov
rorb
add
sbb
push
mov
and
mov
cmp
push
movsb
adc
jmp
insl
mov
xor
punpckhbw
clc
jecxz
and
xchg
out
aad
mov
and
repz
mov
jl
icebp
movsb
mov
mov
xchg
test
xchg
mov
sub
jg
in
js
movsb
push
push
pop
ss
stc
fsub
movsl
fisubrs
dec
mov
or
movsb
jecxz
mov
std
test
aaa
dec
ljmp
inc
inc
sarl
inc
les
out
push
loopne
dec
andl
jbe
iret
jmp
push
data16
mov
cmpsl
push
xchg
pushf
xchg
out
jno
int
sbb
pusha
or
mov
ret
xor
into
fldcw
and
pop
sbb
psadbw
fimuls
mov
les
mov
jne
lcall
cmp
inc
insb
mov
mov
push
jg
xchg
pop
ret
push
rorl
repnz
test
mov
jmp
cmp
jnp
lods
test
std
and
lcall
cmpsl
pop
or
testb
aad
cltd
pop
rcl
cmp
lds
mov
int
insb
jbe
or
arpl
mov
push
insl
sbbl
dec
cli
inc
fwait
jbe
jp
jne
mov
sbb
sub
in
int3
pavgw
jb
dec
lock
and
daa
cmpsb
pop
cmp
pusha
iret
and
in
pop
mov
push
pop
out
rorb
mov
aam
inc
or
jb
in
test
push
xchg
push
push
out
adc
add
rcr
mov
add
test
inc
xchg
push
jnp
ljmp
and
adc
std
leave
xor
jle
arpl
movsb
iret
jge
das
jns
sbb
bound
test
add
out
sbb
xchg
cmp
xchg
mov
and
mov
jbe
jl,pt
lret
and
jne
xlat
xchg
dec
gs
mov
xchg
popa
cmp
in
add
inc
sbb
loop
push
push
aad
movsb
push
push
push
out
sahf
lds
add
add
mov
test
lret
and
adc
xchg
jae
cmpsl
dec
inc
mov
fisubs
push
adc
push
insl
cld
les
test
cmp
cs
xchg
push
outsb
and
inc
outsl
dec
pop
iret
xor
pop
movsl
jmp
lods
lret
into
inc
movsl
jl
xor
mov
pop
pop
xchg
add
push
sahf
add
into
mov
ds
dec
xor
push
insl
daa
imul
cmpsb
mov
jnp
lds
mov
xchg
sbb
loop
dec
xchg
loope
jmp
jne
jbe
add
inc
xlat
dec
jl
jno
sahf
push
fwait
add
arpl
inc
out
adc
inc
insl
shrb
push
mov
mov
into
stos
add
xor
jbe
adc
xchg
daa
lret
mov
lock
mov
cmc
mov
insl
mov
push
rcrl
mov
push
outsb
add
jg
lods
fistl
ret
push
or
dec
mov
xor
popf
adc
loopne
sub
in
push
xor
jae
pusha
call
roll
sti
popa
mov
fadds
cmp
fcompl
adc
sub
lahf
in
test
pop
jg
xorb
fadds
out
pop
sub
fidivrl
ja
bswap
xlat
stc
cmp
imul
aam
lods
cmpb
jge
insb
cwtl
rclb
fisubl
iret
imul
jecxz
into
insl
cmp
cld
inc
cs
cltd
jmp
xchg
cmp
adc
dec
bound
jne
xchg
push
cld
int
and
xor
in
xchg
das
fadd
adc
mov
mov
fsubrp
adc
add
test
mov
lret
pop
fstpt
jecxz
xor
inc
ss
adc
inc
jo
or
lret
outsb
jmp
add
add
add
lret
sub
mov
aad
inc
inc
imul
iret
mov
ljmp
je
adc
es
adc
xchg
rolb
cmp
jge
loopne
subb
lods
pop
pop
idivl
jo
test
push
inc
jecxz
dec
mov
pushf
push
pop
fs
outsb
push
shll
loope
idivb
in
fdivrl
aad
mov
xchg
xchg
lret
xor
int3
aaa
xor
into
andl
xchg
add
mov
xchg
ss
mov
fnsave
stos
ja
in
cmpsb
jo
mov
enter
lods
sbb
fisubs
addr16
fnstsw
jo
xchg
cmc
push
sahf
add
add
lods
adc
sti
mov
sub
inc
test
sbb
out
popa
jbe
pop
leave
out
lock
test
aam
je
int3
mov
cmp
scas
les
daa
or
dec
out
mov
into
xor
in
in
mov
mov
shl
stos
fst
into
add
cmpsl
xchg
xor
xor
push
push
mov
sbb
fcoms
sub
sub
inc
xor
fcmovnbe
inc
add
mov
jge
jb
xor
int3
xchg
inc
cli
mov
movsl
hlt
xor
lds
cmp
cmp
data16
mov
mov
and
jmp
and
and
iret
repnz
xchg
rolb
aaa
mov
lods
in
lcall
int3
inc
fiaddl
push
xchg
test
pop
subb
xchg
cmpsl
cmpl
pop
xchg
in
ja
data16
lds
iret
ja
mov
movsl
rcl
jno
incl
pop
js
out
mov
sub
mov
int3
scas
push
or
jne
addr16
mov
shll
cmp
sub
jmp
cmpsl
iret
inc
push
out
mov
in
or
out
sub
cltd
into
sub
test
jne,pt
cwtl
pop
add
or
test
mov
pop
cmpsl
add
imul
in
dec
mov
gs
ficoms
into
xor
into
xchg
mov
mov
push
fxch
push
out
sbb
mov
dec
cmp
lret
sbb
scas
xor
pushf
adc
inc
aas
lea
mov
xlat
pop
xor
popf
aad
jl
lds
mov
and
mov
xchg
hlt
mov
mov
cwtl
jg
notb
mov
jge
inc
fisubs
sbb
xlat
popf
in
jle
push
test
int
pop
sbb
loopne
push
add
int3
mov
push
inc
inc
pop
rcl
and
mov
sti
pop
lret
insl
ret
push
jnp
pop
mov
js
add
push
dec
lcall
cmp
test
xor
mov
and
movsb
add
ret
imul
js
loope
mov
add
lahf
jl
lods
negb
and
test
fldl2e
mov
push
cmp
xor
sbb
cli
cmp
jmp
mov
add
jnp
sbb
imul
push
add
inc
sub
popa
dec
loope
sarl
or
lret
mov
xchg
lods
fcmovb
fwait
into
out
mov
sub
shll
in
aas
arpl
dec
addr16
lods
or
cmp
loop
mov
and
insl
roll
mov
jge
xor
scas
dec
dec
pop
mov
mulb
push
mov
inc
lods
test
and
sbb
lods
dec
in
insb
loop
mov
inc
idivl
icebp
addr16
aaa
nop
les
clc
mov
adc
lods
incb
mov
aas
sbb
sahf
jbe
lret
shlb
js
shll
push
cltd
mov
in
xchg
jne
ja
pop
and
in
imul
and
mov
mov
xchg
sub
jbe
add
shlb
nop
mov
mov
fstl
pop
dec
sbb
inc
push
mov
jo
subl
pop
arpl
mov
into
movsb
fs
xor
lock
sbb
pushw
movb
or
sub
jo
push
sahf
mov
and
sbb
repnz
jl
sub
jbe
scas
fiadds
mov
fs
insl
jo
out
icebp
push
repnz
nop
daa
into
mov
or
lock
ljmp
cmp
dec
sahf
add
push
scas
jo
mov
shr
movsl
popa
sbb
dec
xor
or
divl
sub
sub
inc
cmp
movl
enter
push
divb
test
mov
cli
push
dec
loopne
cwtl
xchg
xlat
mov
xchg
jl
and
rol
aad
pop
movsb
xor
mov
or
or
bound
mov
push
adc
sarl
or
push
pushf
icebp
outsb
inc
jne
cmpsl
adc
push
xor
lret
rcll
jno
leave
movsb
cmp
mov
cwtl
xor
adc
jbe
jmp
dec
add
test
popa
nopl
xchg
shlb
jo
add
js
lods
insb
dec
jg
addr16
ja
sub
rcr
adc
jo
testl
fiadds
aam
jmp
push
out
cmp
iret
jb
dec
adc
call
mov
push
imul
xchg
sbb
scas
or
rorb
ret
and
pop
imul
fwait
add
xchg
idivl
shrb
mov
push
or
xor
in
push
cmp
cmp
push
cli
or
push
adc
jl
jb
ds
dec
sbb
fbld
das
lods
mov
mov
test
mov
dec
arpl
sbbl
shl
cmpsl
cmp
dec
add
inc
iret
sub
out
shll
imul
insl
cld
out
in
and
aas
xchg
and
add
imulb
aam
loopne
repz
jbe
pushfw
insl
outsb
dec
into
outsb
rcl
inc
add
ret
lcall
lds
shlb
out
pop
clc
cmp
fimull
lahf
je
in
rcr
dec
jbe
outsb
jecxz
cmpb
enter
cld
pushf
jle
imul
cs
lea
insb
jmp
out
jmp
cmpsl
xorb
jbe
lds
xlat
pop
into
aad
fistps
leave
xchg
xchg
dec
or
scas
mov
dec
mov
mov
es
cmp
loopne
scas
rcrb
mov
push
jo
push
or
and
push
cmp
movb
ljmp
and
add
mov
sbb
js
mov
cmc
fiaddl
dec
mov
outsb
ljmp
xlat
cld
int
push
fs
int3
mov
mov
xchg
movb
sarb
aaa
inc
sub
mov
inc
add
cmpsl
lods
daa
out
push
mov
xor
and
cld
xor
mov
lock
ret
jbe
je
dec
into
imul
call
inc
sbbb
jmp
inc
add
sbb
xchg
adc
xchg
add
ljmp
outsb
out
or
mov
mov
or
cmp
pushf
cmp
iret
stos
jg
psubsw
inc
stc
hlt
dec
into
inc
dec
adc
cmpl
test
jmp
dec
test
jno
pop
repz
sahf
sbb
test
clc
add
fisubrl
rcll
mov
push
pop
adc
mov
jecxz
lds
and
mov
lret
cmp
data16
and
mov
in
xor
out
sub
repz
into
pop
arpl
ficompl
jne
mov
test
aas
adc
push
call
imul
ds
push
lea
push
adc
and
xor
xor
mov
bound
lcall
test
pop
into
cmpsb
icebp
pusha
dec
adc
sbb
and
insl
mov
jecxz
sbb
cmp
jmp
dec
fadds
inc
push
dec
test
repz
push
fisubl
or
imul
push
cmpsl
xchg
popa
nop
inc
push
int3
enter
mov
lock
adcl
pop
aad
inc
daa
mov
pop
xchg
lock
jne
rorb
int3
stc
cmp
popa
mov
sahf
add
jle
imul
mov
sub
cmc
dec
aaa
sbb
int
pop
faddl
in
insb
pop
int
insl
fstpl
add
mov
std
add
jbe
arpl
out
pop
pop
sahf
xchg
mov
push
mov
fdivp
xchg
sub
inc
pop
mov
mov
into
loop
and
push
xchg
ja
cwtl
out
cmp
mov
pop
lret
out
mov
jge
sbb
jb
mov
nop
lea
mov
je
sub
cltd
lcall
popl
add
imul
arpl
mov
leave
xor
mov
push
fsubrl
inc
add
flds
aas
mov
xor
imul
mov
lcall
or
enter
add
roll
adc
shrl
jno
lahf
cmp
sahf
cmpsb
ja
std
leave
or
add
enter
sub
imul
in
mov
in
inc
and
mov
mov
pop
pop
insb
add
test
jl
test
movsb
int3
sbb
push
sbbl
inc
inc
outsb
push
add
mov
call
or
aas
mov
fmul
imul
fisttps
or
jbe
cmp
int3
bound
sbb
aaa
incb
inc
jle
cmp
and
data16
int3
out
lcall
cli
pmaxsw
aad
or
sub
jmp
clc
jg
or
dec
adc
push
push
xor
mov
jl
bswap
jns
add
mov
push
mov
loopne
or
cld
push
imul
adc
adc
mov
dec
fdivrl
adc
xlat
sti
jne
test
into
cmpsl
pusha
test
dec
mulb
jnp
xchg
mov
loopne
cvttps2pi
fildl
sub
push
mov
jl
fs
out
scas
jmp
cmpl
cmp
mov
out
mov
mov
sbb
decw
daa
not
sub
jmp
das
stc
adc
mov
rol
jge
sbb
repz
frstor
je
test
dec
or
and
xchg
adc
or
sbb
sbb
xchg
push
cmpsb
mov
or
mov
dec
fcom
xor
jl
pushf
inc
or
mov
sbb
imul
jecxz
sbb
jmp
cmp
push
mov
add
pushf
lcall
mov
or
xchg
sahf
xor
nop
push
dec
mov
lret
aaa
pop
inc
cmp
test
ja
jl
roll
lods
ss
jno
and
mov
mov
mov
aaa
adc
and
inc
cmp
int
fcmovu
cmc
lahf
adc
js
int3
pop
xchg
data16
push
insl
mov
ror
out
stos
mov
and
mov
push
imul
pop
xchg
push
mov
lret
out
cmp
mov
and
push
movsl
js
jo
in
fmull
sbb
mov
cmc
mov
or
pop
push
adc
xchg
andl
scas
and
mov
pop
push
sub
jmp
xchg
xchg
in
ds
mov
xor
inc
push
dec
dec
cmp
and
flds
jne
in
test
insb
aaa
insl
inc
pushf
mov
shr
es
ss
mov
popa
adc
or
arpl
mov
clc
push
dec
pop
add
nop
xchg
fisubs
xor
jl
stos
test
sbb
fnsave
add
mov
cs
or
lock
and
or
sub
xchg
mov
fsubrs
xlat
mov
mov
jno
sub
adc
insb
nop
addr16
sub
pop
call
push
lcall
addr16
xchg
enter
or
ljmp
arpl
mov
mov
ret
push
filds
xacquire
lds
insb
or
loop
outsb
mov
inc
adc
sub
rcll
jle
mov
aad
mov
jecxz
sub
or
xor
sti
push
mov
mov
lret
jo
mov
push
jno
inc
incl
inc
mov
inc
cmc
pop
ret
in
adc
loopne
push
push
sbb
xchg
and
push
and
ja
mov
push
into
ljmp
into
mov
loop
xchg
js
hlt
cmc
aam
iret
mov
xchg
mov
loopne
pop
pop
push
xchg
inc
jo
ss
arpl
xor
sub
fisubs
scas
xchg
mov
push
insb
mov
mov
xchg
sahf
sbb
mov
into
out
mov
stos
jnp
cmc
pop
or
jae
add
int3
loope
aaa
in
dec
inc
pop
lahf
jbe
rorb
lret
in
insl
ss
push
jl
adc
inc
andb
call
jmp
push
stc
popf
inc
jbe
divb
shrb
xchg
fisubl
aas
daa
xor
push
leave
xchg
mov
mov
lods
mov
push
in
nop
rorb
dec
scas
fimuls
mov
in
push
mov
imul
ret
int
or
xor
out
add
sbb
pop
fdivs
shlb
dec
daa
xorl
sahf
gs
fistl
sbb
jg
xchg
jne
xchg
mov
in
cmpsl
sub
jbe
mov
stc
popa
mov
lods
xchg
pop
bound
fs
dec
push
data16
adc
pop
xchg
not
stos
mov
inc
mov
dec
jb
out
mov
ss
cmc
sub
test
push
lret
pushf
js
daa
xchg
cmc
jl
xchg
rcll
stos
mov
inc
xchg
cmp
pop
push
aam
data16
imul
cld
nop
cmc
adc
jl
dec
mov
clc
jge
xchg
dec
lret
outsl
push
adc
leave
cli
lods
insl
test
mov
test
cmp
mov
or
dec
xchg
in
mov
sbb
outsl
dec
outsl
pop
and
cld
test
xchg
testl
arpl
pop
fwait
mov
divb
mov
adc
or
lock
ja
ds
jnp
mov
dec
mov
outsl
cmp
mov
push
sbb
or
or
xchg
adc
xor
push
push
mov
jo
pop
cmp
mov
leave
fsubr
int3
loop
in
icebp
pop
js
repnz
pop
and
adc
movsl
sbb
fsubl
sahf
mov
hlt
mov
icebp
xor
push
pop
add
lods
inc
inc
movsb
shrl
add
cli
xchg
pop
and
cmp
outsl
in
sub
or
push
rcl
dec
xchg
xchg
mov
xor
int3
push
or
inc
fucom
into
jle
push
pop
shll
mov
je
add
test
cwtl
shl
scas
mov
pop
add
xchg
subl
adc
cwtl
mov
xchg
imul
mov
mov
cmc
jl
dec
push
xchg
es
aam
pop
or
loopne
int3
mov
fldt
xlat
mov
xchg
or
repnz
cli
xchg
pop
aaa
fs
cmpsl
lock
adc
sbb
ljmp
inc
imul
xor
int
xchg
jae
inc
mov
pop
sub
sub
arpl
orb
jbe
gs
inc
mov
rclb
inc
inc
scas
pop
add
sbb
push
cmp
push
dec
xchg
lds
into
adc
ljmp
add
xchg
rolb
popf
stc
xor
sub
test
pop
xchg
test
and
pushf
add
es
jns
or
mov
and
and
xchg
sbb
popf
repnz
push
lods
inc
jp
xchg
test
clts
add
mov
arpl
in
mov
bound
imul
nop
jl
sbb
test
test
fs
orl
mov
lcall
adcl
cmp
in
mov
pop
adc
add
imul
lret
cmc
mov
insb
jecxz
es
add
adc
movb
push
cltd
pop
push
clc
loop
loopne
loopne
cld
dec
cmp
cmp
sub
xchg
dec
out
cli
jbe
icebp
ret
push
jne
lahf
and
add
clc
push
push
xor
nop
iret
sub
lods
push
jne
xchg
scas
aaa
int3
mov
lods
add
enter
sbb
pop
into
push
fdivrl
nop
lods
es
mov
mov
into
movsl
outsb
popf
push
xchg
inc
orb
push
sbb
not
fsubs
cmp
jmp
add
pop
testb
test
pop
push
jbe
in
jg
fsubs
mov
dec
movsl
xor
inc
scas
xchg
cmp
cltd
mov
test
int3
pop
dec
arpl
mov
push
lret
outsl
adc
xchg
xor
aaa
inc
repz
or
adc
rorb
into
xchg
scas
push
daa
lock
sarb
fcmove
sub
mov
pop
aad
sti
xlat
xlat
add
adc
out
mov
test
rcrl
repnz
jecxz
out
fwait
addb
push
cmp
xlat
and
sub
xor
data16
inc
add
cmp
je
sub
arpl
lods
daa
add
aaa
mov
out
cltd
dec
mov
in
inc
cli
xchg
fcmovne
xchg
test
divb
stos
icebp
mov
push
mov
jl
mov
hlt
add
sbb
mov
mov
lahf
adc
push
mov
mov
push
add
in
cmp
add
jne
sarl
pop
and
out
push
xor
aaa
mov
inc
jge
xor
rcrb
scas
lea
jmp
bound
add
jle
into
inc
cs
sahf
xchg
jns
nop
sbb
cmp
mov
xchg
int3
aas
mov
stos
lods
and
mov
loopne
out
dec
dec
fadd
mov
pop
adc
pop
sub
stos
and
push
nop
adc
xchg
movsl
and
add
jb
aas
insb
mov
inc
mov
add
mov
test
sbb
lret
sub
or
scas
aad
jge
clc
mov
xchg
push
cmp
ss
mov
jp
out
adc
sub
sbb
cmp
mov
in
repnz
lret
out
jne,pt
into
add
push
jnp
adc
mov
and
clc
jae
lret
mull
scas
stos
push
pop
push
test
daa
repz
dec
repnz
xor
data16
ret
push
or
adc
cli
notb
stos
test
stc
adc
xor
in
ret
test
lea
mov
sbb
jl
ss
into
lret
in
add
insl
out
xor
mov
fisubl
pop
xor
nop
adc
jnp
test
iret
mov
push
pop
out
add
arpl
mov
xchg
mov
cli
int3
dec
insb
scas
sub
mov
jns
mov
add
mov
aaa
inc
ds
cmp
sti
mov
loop
lret
sahf
enter
int3
cmp
ja
lahf
cmc
outsl
inc
dec
add
fs
into
mov
mov
enter
pop
loop
or
or
jecxz
inc
test
xor
jne
fstl
in
mov
sub
call
add
pop
sub
pop
ret
mov
dec
inc
and
jg
and
cltd
xor
push
clc
jno
out
mov
ret
loope
in
inc
mov
stc
in
arpl
mov
cli
mov
xchg
shlb
pop
jno
add
lock
xor
and
call
insl
fcompl
mov
aad
lods
cmp
pop
add
cs
nop
stos
jge
test
or
sarl
xchg
xchg
mov
lahf
daa
xchg
jmp
cmp
gs
hlt
xchg
cld
push
pusha
xchg
add
adc
add
subb
icebp
dec
cmp
pop
cmp
xchg
pop
mov
pop
dec
lods
addr16
add
roll
imulb
push
jnp
rolb
mov
add
stos
sub
jbe
les
push
ljmp
mov
cmp
int
repz
lea
movsl
insl
cmp
inc
fwait
push
in
shl
pop
mov
loopne
std
xor
sub
mov
fucom
jnp
xor
cmpsb
mov
in
mov
push
cs
inc
jecxz
add
repz
xchg
xor
mov
dec
lods
mov
push
or
cmc
test
ficoml
dec
or
loop
push
jb
rclb
cmc
sub
movsl
inc
loopne
push
sub
pop
mov
stos
adcl
xor
mov
sti
imul
mov
shlb
mov
cwtl
mov
dec
xor
fisttps
xchg
leave
fdivrs
pop
jge
xlat
sbb
xor
lcall
adc
and
lret
inc
push
imul
pop
aas
inc
push
xor
lea
sbbl
jecxz
in
inc
inc
imul
xlat
add
pop
pop
lcall
movsl
sub
pusha
push
mov
xchg
ljmp
or
clc
loope
pushf
movsl
sub
es
popf
stos
add
dec
or
mov
data16
jno
fwait
jg
imul
gs
repz
jo
scas
mov
dec
sub
in
xor
pop
addr16
sbb
arpl
stc
pop
cmp
mov
xorl
cmp
mov
jo
push
hlt
sub
xor
xor
clc
sub
ret
repnz
or
orb
pop
sub
push
popa
sahf
jmp
cld
xor
sbb
sarl
addr16
ficoms
xchg
roll
xlat
pop
jo
ss
cmpl
xchg
pusha
mov
fidivs
frstor
js
xor
pop
neg
mov
push
dec
sub
jge
push
call
push
mov
jge
push
cmpsb
mov
sub
push
add
daa
or
pop
pop
mov
mov
add
aam
xchg
mov
hlt
ret
cwtl
ror
mov
out
pop
std
add
int3
in
aam
in
push
push
push
enter
iret
adc
mov
fstl
rorb
sar
es
jp
pop
mull
fcmovb
shrl
push
mov
push
mov
ret
aaa
test
in
jecxz
mov
push
into
dec
mov
push
pop
inc
lret
rorl
hlt
xchg
inc
mov
out
mov
mov
cmp
dec
call
cmp
lahf
jge
loopne
xchg
jmp
inc
sub
and
into
int3
gs
xor
fnstcw
pusha
cs
iret
xor
lock
andl
jbe
xchg
xlat
movl
push
push
enter
test
adc
int
in
rolb
dec
pop
lea
jp
push
aaa
jnp
inc
adc
sbb
sub
push
and
mov
and
and
sub
in
xchg
insb
push
outsl
or
mov
jmp
loop
int3
lock
cmp
jl
out
push
xchg
inc
jecxz
dec
add
mov
mov
sbb
jecxz
out
into
add
dec
cmp
js
stos
cmp
cltd
out
bound
push
add
mov
mov
add
adc
inc
in
sub
jecxz
cmc
push
pop
fwait
mov
mov
movsl
scas
test
sbb
dec
movsl
sahf
sub
outsl
pop
push
push
loopne
push
xchg
aad
or
push
sbb
mov
push
jns
in
cld
mov
and
scas
roll
int
push
pop
in
fninit
xchg
popf
push
mov
call
js
addl
sbb
add
adc
daa
inc
das
xchg
mov
movsw
shlb
sub
rorb
xor
cwtl
mov
cmp
mov
and
mov
rorb
mov
adc
mov
dec
nop
xchg
or
xchg
dec
cmpsb
jle
cli
std
outsb
mov
inc
jb
pop
lds
es
jge
jle
dec
mov
jbe
repnz
push
imul
dec
fs
lods
xchg
add
and
xor
and
lock
or
push
dec
adc
je
sti
adc
data16
push
cwtl
xor
je
sbb
mov
and
data16
dec
rcl
jno
vmread
pop
scas
jg
jle
add
jl
push
sti
mov
shll
lock
mov
push
jbe
jbe
cmpps
int
sub
jp
dec
ror
or
dec
and
iret
addr16
popf
inc
mov
mov
xchg
jns
mov
mov
lret
test
mov
leave
out
mov
push
out
jbe
mov
sahf
gs
cli
jne
mov
data16
xor
pop
cld
sub
jnp
or
fisttps
and
push
cmp
xchg
xchg
daa
sbb
jmp
inc
into
adc
jl
loop
push
add
dec
xchg
test
fsubs
inc
mov
xor
aad
sub
jbe
dec
scas
sub
mov
in
iret
xor
shlb
pop
nop
fldcw
push
shll
cwtl
sub
jns
icebp
loop
xlat
mov
mov
inc
mov
aas
or
pop
loope
int3
lock
xchg
mov
mov
insl
lret
mov
int
mov
mov
jbe
pop
and
xor
push
fdivp
ss
dec
insl
stos
js
ljmp
sti
shlb
mov
inc
sub
cmp
mov
xchg
xchg
stc
adc
imul
xlat
pop
jl
push
test
fsubrl
or
mov
inc
shrl
js
or
add
cmp
xchg
outsb
stos
pop
inc
pusha
repz
not
sti
sub
js
add
test
mov
cli
xor
fst
sub
ljmp
add
adc
mov
mov
push
lahf
lock
or
arpl
inc
imull
in
frstor
adc
jns
mov
sti
xchg
add
mov
mov
in
pusha
adc
orl
fmuls
scas
add
sbb
cwtl
cmc
or
lock
lahf
adc
mov
icebp
sbb
out
xchg
js
lock
push
pusha
inc
mov
fcmovbe
bound
push
mov
mov
mov
xchg
jbe
xlat
push
lods
cwtl
sti
out
icebp
bnd
ret
dec
xchg
xchg
sarb
push
cmp
int
lea
cmp
push
insb
add
aas
inc
add
mov
repz
sbb
pop
xchg
testb
jne
dec
xlat
push
dec
aam
mov
dec
sub
lods
lret
test
xchg
jmp
xchg
and
sub
mov
in
or
jg
or
xlat
xor
mov
mov
ret
movsl
mov
aaa
mov
pop
mov
movsl
dec
or
mov
lods
dec
inc
aas
push
nop
mov
xor
sub
xlat
out
push
inc
adc
push
inc
cmp
jb
pop
pop
das
imulb
outsb
push
xor
loop
mov
dec
aad
les
xchg
sub
insb
pop
rcrb
adc
cmp
addl
test
pop
mov
xor
fistpl
mov
rclb
add
adc
jg
das
ds
mov
test
inc
fistpl
jae
std
shll
aad
int
mov
loopne
xchg
lret
scas
mov
mov
dec
fisttpl
out
ret
cld
jbe,pn
mov
into
negl
inc
dec
fsubrs
popa
movsl
push
add
push
les
ss
outsb
xchg
in
out
lahf
xorb
mov
test
popa
sub
out
xchg
push
in
fildll
sahf
jae
rol
stc
rcrb
mov
add
jno
cmc
jo
icebp
mov
pop
sbb
sub
gs
enter
adc
mov
mov
push
popa
and
and
mov
lds
daa
test
movsb
test
fstps
jno
cmp
mov
loope
lea
cltd
mov
cli
mov
sub
arpl
icebp
jecxz
ret
pop
sti
add
fdivrl
lds
cli
xlat
xchg
push
jne
ret
leave
subl
movsb
xchg
int
into
mov
pop
mov
sub
lahf
jle
jmp
dec
xor
sbb
dec
mov
ret
call
cmp
and
dec
xchg
mov
daa
test
clc
sbb
mov
pop
sar
sub
aas
xchg
mov
pop
pop
lock
pop
jbe
add
jp
negb
leave
das
in
scas
cli
add
mov
imul
sub
fldl
loop
push
xor
aas
adc
pop
lock
clc
das
mov
xchg
stos
add
xor
mov
cmpsl
dec
repz
inc
push
xchg
xchg
jle
inc
imul
lock
call
mov
jns
ja
jl
stos
in
add
shl
add
mov
outsl
xchg
jno
push
fstl
adc
sub
mov
rolb
jnp
out
xchg
cmp
mov
or
xchg
jg
jl
xchg
fldt
cmp
loop
push
mov
dec
leave
add
cmp
add
inc
ja
dec
dec
add
xchg
loop
or
mov
xbegin
adc
cmpsl
or
lcall
add
int3
jnp
fisubrl
add
in
mov
cmp
loop
out
aaa
cmp
push
jle
xchg
aam
adc
repnz
sub
sbb
pop
outsl
xchg
out
cmpsb
lea
mov
push
insb
fcom
lret
push
jecxz
sbb
lock
jle
in
mov
jns
shr
dec
cmp
cmp
jg
rcrl
sbb
vpaddusb
xchg
popf
xchg
dec
adc
jmp
jo
test
mov
push
mov
imul
inc
and
ss
stos
addr16
cs
insb
pop
dec
push
daa
push
das
in
xchg
pop
inc
fcomps
rolb
add
out
cwtl
stos
mov
pop
cmc
pushf
dec
mov
das
or
rclb
jmp
roll
cli
and
test
push
fwait
leave
cmp
push
sbb
push
or
and
pop
test
mov
enter
out
frstor
int3
adc
lods
sub
inc
or
pushf
mov
jnp
pop
jge
jno
lea
add
pop
stos
ror
and
inc
mov
mov
push
pop
movsb
sbb
dec
aad
or
adc
jbe
xor
xchg
movl
add
jg
mov
pop
cwtl
ds
ret
aad
loop
pop
lahf
bound
test
fst
inc
cmp
int
cmp
cmp
jg
mov
xchg
jne
dec
mov
cmp
or
in
cmc
stos
cmp
imul
inc
add
int
ljmp
sbb
iret
or
cld
and
popa
imul
sahf
fcomip
adc
inc
pop
jno
aas
xchg
sbb
imul
outsl
ljmp
lds
fstpl
mov
ljmp
xchg
clc
mov
scas
mov
cmpsl
mov
mov
or
cmpsb
lods
imul
mov
out
aaa
mov
mov
add
fadds
shlb
lock
iret
lret
push
mov
in
xchg
ret
and
pop
push
out
lds
cmpsl
jbe
lret
pusha
jp
dec
outsb
inc
xchg
mov
push
xchg
out
mov
push
inc
xor
shlb
sub
ds
inc
mov
mov
xchg
dec
cltd
out
dec
addr16
aas
cmp
mov
push
jmp
testb
cmpsb
test
jle
fidivs
jl
push
sub
lret
adc
scas
call
stc
out
testl
cmpsb
jae
stos
xorb
xchg
or
xchg
stc
cld
mov
in
xlat
or
jmp
xor
and
cmp
jbe
repnz
jae
sahf
cmpsb
adc
and
sub
adc
out
mov
cld
jns
mov
mov
gs
adc
stos
mov
sarb
ret
cmc
push
adc
fs
sbb
rorb
pop
ds
enter
lcall
popa
lret
or
jp
into
aam
je
cld
scas
mov
sub
xchg
jl
fnstenv
or
fmul
ds
inc
adc
push
cmp
mov
or
bnd
mov
inc
dec
shlb
popa
xor
fldenv
stos
dec
pop
fst
sub
cwtl
cmp
sbb
lods
sbb
into
ljmp
push
cld
mov
cmp
or
stos
jne
aad
shll
rcll
pop
push
push
jge
lods
adc
stos
fdivrs
cmc
gs
pop
push
cs
aam
clc
insl
or
dec
jl
sti
popf
or
int
icebp
push
fisubrl
stos
push
in
test
inc
push
xor
jmp
xchg
adc
dec
movb
fwait
data16
int3
xorl
mov
jno
push
push
fcompl
cmp
and
sbb
out
sbb
push
lret
xor
jno
enter
iret
dec
xor
adc
int3
sub
pop
sbb
pushf
imul
adc
lahf
or
mov
lret
in
ljmp
pop
push
xor
cwtl
stos
scas
jg
je
dec
cmp
mov
xor
dec
insb
pop
mulb
andb
mov
jge
jne
cmp
outsl
xchg
not
sti
push
cmc
nop
orl
jns
inc
mov
dec
repz
cltd
ds
jnp
push
and
pop
sub
jae
cmp
or
xor
enter
pop
mov
popf
adc
cmp
nop
out
sub
imul
jno
es
int3
insb
jl
pop
pop
repnz
lret
sub
mov
mov
mov
in
das
cmpsl
or
into
sbb
pop
inc
jge
cmp
mov
repz
xchg
push
inc
outsl
pop
xlat
jle
es
or
xor
cld
adc
sti
sub
xchg
adc
outsb
adc
xorl
das
xor
mov
or
into
sbb
ret
mov
add
cwtl
mov
inc
and
in
sub
out
mov
imul
mov
cmpl
rcl
mov
jl
xor
test
gs
lea
ja
mov
popa
jbe
mov
xchg
inc
mov
popf
mov
pushf
jbe
cltd
in
adc
in
push
adc
or
stos
xor
cmp
xor
jb
mov
ret
xor
jbe
dec
outsl
and
lock
xchg
hlt
pop
xor
jbe
mov
and
dec
jo
xchg
push
push
into
push
sbb
push
or
enter
inc
cmpsl
adcl
fimuls
pushf
add
insl
or
shrb
sbb
lret
rcl
and
in
aaa
jp
inc
out
pop
aam
in
xchg
push
pop
sahf
repz
sub
mov
int
lods
jg
xchg
rcll
sbb
insl
adc
xchg
jp
popa
rorl
or
sti
sub
repz
call
in
sbb
adc
imul
es
push
fs
adc
inc
jae
sbb
xchg
xchg
fcmovbe
or
pop
test
pop
sub
into
rol
in
cmp
sbb
call
inc
inc
das
sub
pop
push
fcmovbe
cmpsb
es
cmp
sub
stos
inc
mov
scas
inc
cmc
mov
shrb
fmul
inc
add
mov
bound
jle
loopne
inc
adc
push
mov
insb
jbe
dec
mov
es
fldt
in
mov
pop
adc
arpl
loop
sbb
in
mov
cmpsb
pop
push
fiadds
jg
fdiv
jne
test
fucomi
rcll
shrb
sub
pop
icebp
fbld
mov
or
cwtl
bnd
ficompl
iret
dec
and
mov
sbb
xchg
testb
push
push
dec
lret
adc
cmpsl
arpl
push
sahf
mov
push
mov
stos
lret
jnp
jno
xor
push
fidivl
cs
hlt
shlb
lods
cmc
pop
push
inc
push
add
addr16
lods
fsubs
hlt
dec
xchg
test
inc
shl
inc
push
or
and
stc
add
mov
dec
mov
xor
movsb
inc
out
mov
and
lcall
cs
xor
jmp
movsl
js
inc
jns
js
dec
out
inc
movsb
adc
add
rorl
jp
adc
js
test
out
jae
inc
sbb
mov
rcl
out
add
push
pop
or
out
test
dec
out
icebp
lret
jb
push
mov
pop
repnz
push
mov
inc
out
inc
add
mov
cmpsl
dec
xchg
leave
add
sbb
mov
mulb
mov
ljmp
or
nop
mov
and
inc
stos
inc
xchg
ret
lock
mov
bound
out
cmpsl
xchg
jge
cmc
jle
xor
mov
aam
cmp
mov
ret
aaa
or
fdivrp
cwtl
pusha
leave
mov
sbb
les
jo
xchg
into
jae
sub
inc
sbb
into
cmp
inc
lcall
mov
adc
mov
cmc
hlt
xor
outsl
rorb
push
std
ret
xor
ds
xchg
movsb
mov
outsb
mov
pop
or
and
mov
popf
push
ljmp
add
xchg
scas
xchg
dec
in
sbb
jne
repz
or
lds
push
mov
out
mov
xchg
dec
push
mov
lods
into
shll
out
test
sub
adc
jnp
push
les
xchg
inc
stc
xor
cmpsb
test
setne
mov
fcmovnb
jmp
mov
xlat
dec
cmp
push
out
push
push
jl
les
mov
movsl
lea
xchg
lret
xlat
sub
xchg
pop
cmpsb
mov
add
in
pop
pop
push
mov
mull
les
adc
sahf
aas
jb
pop
pop
test
dec
fs
lods
sub
or
das
stc
scas
dec
xchg
add
xor
sub
out
sahf
dec
sbb
out
inc
pop
xchg
xlat
and
dec
sbbb
xor
mov
test
imul
jl
sub
fcoml
mov
fstps
addr16
stos
loopne
push
movsl
xor
mov
cli
push
outsb
xchg
and
test
xchg
popf
dec
int3
lret
stc
adc
pop
loopne
add
lods
cltd
mov
clc
xor
fwait
cs
cwtl
xchg
fs
adc
push
mov
jnp
jecxz
and
out
xchg
pop
mov
lods
repz
xor
int
into
push
sarl
push
push
insl
fs
cmc
adc
jne
hlt
mov
lcall
cmp
stos
sti
and
sub
jo
xor
sub
out
iret
pop
shll
std
loope
jecxz
shll
or
repz
aad
lret
sbb
push
rcrb
mov
outsl
int3
xor
dec
fildll
sbb
mov
push
lret
rcl
sub
or
aas
fwait
out
mov
cmp
mov
lock
mov
adc
cltd
lret
xchg
arpl
sbb
pop
dec
ja
fstpt
inc
js
loop
push
dec
sbb
lds
out
xor
sub
adc
mov
adc
dec
fimull
xor
hlt
push
xchg
lea
jns
pop
cmp
test
insl
enter
cmp
push
xchg
xlat
pop
sarl
loope
mov
dec
je
pop
jecxz
cmp
add
pop
sti
test
outsb
lods
xchg
pushf
fsubs
lods
std
cmp
out
push
mov
xchg
fsubrl
xchg
ljmp
jbe
jmp
inc
inc
add
push
adc
xor
sahf
sub
fadd
xchg
shr
movsl
scas
and
xorb
jne
pop
add
lret
aaa
mov
test
shlb
stos
out
cli
sub
stos
jbe
imul
pop
mov
pop
aaa
xchg
rorb
orl
xchg
jmp
sbb
jl
or
sub
adcl
stos
leave
inc
or
sbb
dec
push
lret
in
dec
dec
mov
into
xor
test
add
int3
mov
in
into
imul
stos
imul
movb
mov
int3
dec
pop
pop
add
xor
sbb
mov
xchg
cmpsl
push
rorb
lret
xor
jecxz
loope
gs
bound
push
call
or
inc
cmp
dec
sbb
mov
jbe
cmp
nop
jo
xchg
jp
xor
out
inc
mov
pop
xchg
mov
push
pushf
inc
jle
ds
fstpt
dec
sub
mov
les
das
iret
inc
mov
xchg
and
mov
add
dec
jno
mov
test
and
jne
sub
and
ja
inc
iret
mov
fsubl
divl
mov
fs
mov
pushf
rcl
mov
add
mov
push
mov
mov
enter
and
outsl
nop
and
cmp
shlb
add
aam
sbb
in
jmp
ja
in
jbe
xor
lret
test
mov
cmp
lret
sub
scas
mov
push
movsb
sbb
xor
cmpl
in
xchg
leave
fnsave
pop
jbe
add
stos
mov
inc
dec
jecxz
in
dec
jae
xchg
pusha
mov
std
xchg
data16
push
cmp
push
ret
pusha
rcl
int3
xchg
cmp
sbbl
and
test
pusha
xchg
xchg
or
enter
mov
sbb
push
mov
xor
cmp
test
dec
pop
fistpll
and
into
cli
sti
xorb
fldenv
sub
notb
sub
mov
push
fmull
ret
aam
lock
cmp
xchg
adc
pop
into
scas
xchg
in
push
dec
loop
mov
cld
jle
sbb
cmp
push
insb
push
inc
popf
enter
cli
push
mov
outsl
lcall
in
int3
mov
cmp
rcl
jge
xchg
test
fdivrs
fst
ror
test
add
mov
mov
scas
mov
iret
jne
lods
mov
jns
das
and
mov
xchg
ret
int
jp
add
lret
test
push
lods
mov
mov
leave
ret
mov
shrb
movsb
sti
xor
icebp
adc
shl
sub
xchg
lds
push
shlb
mov
and
mov
mov
mov
adc
in
fwait
mov
jae
jne
mov
mov
sahf
xchg
in
adc
lock
cmc
out
mov
mov
call
inc
adc
mov
sbbb
sbb
mov
int3
pop
pop
repnz
adc
mov
ret
dec
or
call
dec
push
push
movsb
and
mov
fnsave
dec
jno
pop
or
int3
push
inc
push
mov
call
xor
jo
test
inc
cmp
in
push
mov
cltd
jb
enter
xor
sub
loope
pop
push
int3
lods
push
cmpsl
je
testb
jae
mov
mov
lret
scas
jns
js
mov
kaddw
jo
add
fmuls
dec
into
shlb
cwtl
movb
pop
mov
dec
notb
lods
mov
roll
rcrl
dec
into
mov
add
std
push
ljmp
mov
popl
push
and
sub
pusha
loope
dec
fcmovnu
out
aam
fistpll
repz
and
add
jae
inc
jbe
into
inc
sub
outsl
sahf
inc
pop
stc
out
jecxz
aaa
xchg
stos
xchg
jg
into
push
mov
jne
push
jae
in
not
mov
and
adc
gs
fwait
mov
out
pusha
mov
les
xorl
clc
rcll
aaa
rorb
in
out
lret
pop
inc
sti
ret
int3
mov
outsl
push
mov
adc
or
mov
clc
cmpsb
loop
bound
out
nop
xchg
aas
popf
sarb
pop
inc
sub
fstl
sbb
fs
inc
jge
adc
pop
scas
je
stos
mov
mov
stc
lods
into
jne
outsl
pop
rorb
movsl
imul
inc
aam
clc
adc
movsl
ret
int3
xchg
adc
cmp
cmp
mov
jns
and
lds
cmp
mov
pop
push
fcoms
dec
dec
jecxz
testb
sub
xor
sbb
push
push
test
inc
push
cli
fcmovnbe
add
daa
jo
or
pop
inc
dec
push
icebp
jp
push
pop
mov
data16
mov
xchg
jo
not
ja
or
gs
orl
push
push
out
test
xchg
push
pop
mov
xchg
cmpsl
xchg
add
or
call
hlt
pop
jns
sahf
adc
push
sub
lahf
jp
adc
stc
cli
sbb
add
mov
inc
lock
ljmp
clc
out
pop
mov
mov
ljmp
aam
xchg
cmpb
shrl
push
in
pop
daa
lahf
inc
sahf
pop
cmp
hlt
insb
in
pop
mov
test
jle
or
test
das
cmp
pop
jns
add
adc
push
aaa
xchg
push
in
and
lods
fcomps
inc
add
add
cmp
pop
fcos
into
adc
and
addr16
pop
mov
jbe
je
mov
loop
imul
mov
xchg
xchg
mov
xor
cmp
sub
inc
mov
pop
rorb
call
test
das
add
mov
stos
addr16
pop
icebp
sbb
sahf
out
sbb
movb
scas
outsl
imul
and
mov
sbb
ror
inc
roll
clc
lods
mov
mov
xchg
rorl
push
sbb
inc
test
out
insb
shr
aaa
call
sub
cmp
sub
adc
int
or
mov
cmp
rcll
xchg
pop
inc
fisubrs
mov
xchg
fnstenv
aaa
jae
addl
xchg
or
andb
push
rolb
lret
js
sarb
fst
das
lcall
jbe
call
repz
pusha
pop
sahf
add
mov
sub
bound
sarb
or
out
ror
mov
jo
jnp
sub
lret
les
mov
mov
sbb
mov
push
js
mov
pop
pop
jmp
call
sub
sbb
roll
andl
aas
mov
out
xchg
push
xchg
pop
mov
jnp
bound
lret
push
xorl
movsl
aaa
adc
outsb
ret
xchg
js
int3
fwait
mov
lahf
add
or
pop
and
into
mov
dec
arpl
add
pop
dec
shl
mov
imul
push
push
shrb
jg
dec
in
cs
jae
enter
pop
inc
psubb
dec
mov
fstpl
xchg
test
je
int3
mov
ret
out
lret
cmc
jns
xor
repnz
sbb
rcr
lret
adc
inc
jno
jmp
push
cs
cmp
out
dec
enter
sahf
mov
sbbb
mov
sbb
adc
add
or
ss
push
cld
cli
sti
jne
cmp
pop
pop
loop
mov
into
xchg
pop
cmp
rcl
subb
ret
dec
adc
mov
add
add
adc
push
movsl
sbb
dec
out
clc
bound
sub
adc
cli
mov
push
mov
or
mov
pop
imul
fsubrp
into
in
xor
clc
adc
sbb
cltd
fisubs
push
jnp
add
adc
movsl
icebp
push
decb
lods
test
inc
cwtl
mov
stc
lret
aaa
pop
dec
pushf
add
xor
jp
xor
imul
test
rcrb
popa
inc
std
js
sbb
cmp
nop
or
into
pop
jae
mov
sub
mov
mov
dec
bound
andl
repz
inc
out
xchg
outsl
gs
mov
xchg
vpcmpeqd
lret
int3
jnp
mov
cs
xchg
in
mov
test
mov
inc
aas
xchg
popa
pop
mov
or
in
add
or
push
pop
bound
sub
inc
mov
add
cmc
xchg
xor
dec
shl
inc
jp
enter
jg
lahf
mov
inc
not
jnp
pop
ret
mov
subl
aam
addr16
movsl
mov
inc
lds
jge
cmp
leave
lcall
div
jmp
lret
orl
daa
hlt
das
xor
fisubrs
and
fldl
sub
mov
xchg
sti
jmp
leave
shl
and
inc
ja
gs
xor
mov
push
jne
sbb
outsl
fsubrs
imul
ds
sarl
xchg
pop
xchg
mov
lods
push
cld
std
cs
xor
test
scas
pop
mov
push
inc
stos
add
popa
aad
xchg
sbb
adc
inc
dec
dec
and
dec
fwait
insb
int
sbb
lods
xchg
adc
push
push
xchg
ret
cmp
ss
sub
cltd
pushf
mov
dec
and
orl
jo
sub
es
arpl
xchg
cli
or
adc
divb
mov
fwait
test
or
inc
sbb
test
or
push
ds
into
push
aam
gs
ret
sub
in
adcl
mov
push
ljmp
add
bound
enter
aaa
mov
mov
sbb
cmc
mov
out
mov
lret
pop
inc
cmpsl
lret
scas
jmp
imul
clc
sub
inc
enter
push
mov
dec
ret
cwtl
push
add
cmp
xlat
sbb
xchg
cmp
repz
jecxz
lahf
aaa
js
outsb
cwtl
xchg
xchg
xor
sub
xlat
stc
imulb
aad
ret
xchg
std
outsb
arpl
mov
or
inc
mov
push
mov
dec
stos
jns
dec
sarb
pushaw
fs
sbb
ret
cwtl
pop
lods
or
popa
into
shl
cmp
scas
aaa
int
mov
push
sbb
test
lods
inc
outsl
rolb
and
bound
lds
inc
loope
repnz
cwtl
js
mov
sarl
mov
and
mov
data16
loop
stos
mov
ja
ds
dec
jmp
inc
push
add
mov
push
pop
mov
cld
xor
ret
aam
push
imul
pop
cmp
dec
dec
out
xor
cli
imul
jmp
mov
cmc
mov
insl
das
or
mov
scas
cmp
inc
xchg
jno
xor
mov
fistps
insb
stos
xchg
mov
cmp
sbb
cli
or
mov
mov
loope
sub
pop
add
or
test
popa
and
sbb
iret
in
in
mov
jmp
addb
cwtl
xor
rorl
sub
cmp
stc
int3
xlat
out
jae
and
jecxz
lds
repz
ss
bound
and
cwtl
loope
push
and
sbb
push
gs
push
mov
dec
or
pop
add
lcall
push
rcrb
sbb
adc
or
mov
mov
or
sbb
ja
push
out
push
adc
fs
lods
adc
cltd
js
cmp
cltd
insl
dec
sub
mov
and
push
dec
or
lods
std
out
dec
xor
xor
mov
repz
rolb
push
aas
push
xchg
mov
outsb
mov
fidivrs
in
jno
xchg
push
sub
fildl
fwait
pop
inc
test
mov
inc
js
mov
flds
pushf
leave
pop
into
sbb
jae
inc
divb
in
adc
jnp
add
popa
into
adc
lret
int3
sbb
out
leave
andb
ret
ret
divl
xlat
pop
sbb
inc
mov
mov
into
mov
insl
cmp
ret
sub
xchg
sbb
inc
sti
shr
add
mov
mov
and
faddp
push
lcall
dec
sbb
push
inc
outsb
jnp
add
sbb
push
adc
or
loop
mov
mov
sbb
ds
push
pop
lret
xchg
mov
fcmovbe
or
inc
inc
aad
xor
xchg
mov
shlb
mov
mov
fwait
xrelease
mov
add
cmp
mov
add
adc
into
add
test
mov
outsl
mov
call
and
in
jnp
sub
das
xlat
jb
xchg
ljmp
add
sbb
xchg
insl
popa
cmp
lods
out
into
and
fwait
mov
sti
imul
in
mov
sub
inc
mov
ret
dec
aas
ss
and
int3
lahf
stc
test
ja
cld
cmp
movsb
enter
and
fwait
lods
jle
push
pop
push
stos
rorb
insb
pop
shl
out
sbb
loop
cmpsl
pop
ret
fidivrs
mov
jno
sbb
xlat
fucom
stos
es
rclb
xor
xchg
pop
outsb
insb
loopne
xor
sbb
shl
push
mov
data16
aad
fldcw
aad
sub
dec
adc
loop
inc
mov
fldenv
shrd
cmp
sub
or
les
in
out
dec
push
sbb
and
xchg
into
repz
and
mov
ror
mov
aam
in
jns
nop
sub
lods
xchg
jmp
xor
in
cltd
xchg
mov
daa
mov
cli
pop
or
leave
dec
pop
ret
mov
push
fcoms
fstps
cmp
cmp
mov
xchg
cmc
imul
and
inc
push
mov
into
insb
pusha
std
or
scas
xchg
xor
popf
dec
movsb
push
adc
mov
lds
and
rol
ss
in
dec
jne
push
aaa
lret
outsl
mov
add
ret
push
ficompl
sbb
cmpsb
push
rolb
and
push
xchg
xchg
lret
adcb
add
cmp
addr16
lock
mov
ljmp
xchg
ret
pushf
gs
sub
daa
mov
bound
sub
jg
sbb
cltd
leave
roll
fcoml
inc
inc
jl
mov
repz
ror
add
push
jecxz
loop
xlat
jg
sbb
or
mov
or
pop
adc
std
fs
cmc
nop
xlat
rcl
into
xor
pop
test
insb
mov
and
and
push
mov
jne
push
lcall
and
stc
jbe
mov
fcmovbe
scas
mov
mov
inc
xor
xchg
pop
js
cmpb
stc
push
jae
in
bound
shll
jbe
push
call
or
xchg
outsb
xchg
outsl
repnz
xchg
push
lcall
cmp
ss
in
push
adc
std
dec
movsb
loopne
leave
push
sarb
imul
dec
adc
loopne
mov
in
or
xchg
pop
outsl
repnz
sub
pusha
pop
sub
mov
xor
add
ja
dec
xor
test
cld
dec
mov
lods
mov
push
mov
outsb
mov
pop
sub
sbb
jecxz
xor
or
jp
pop
jae
mov
cmp
xchg
xchg
mov
test
jecxz
stc
loop
clc
addb
push
cltd
aas
dec
icebp
test
lret
ret
faddl
sbb
into
xchg
cmpsb
scas
jmp
push
cltd
jmp
repnz
inc
xchg
sbb
arpl
addr16
adc
repnz
ffreep
lret
xor
hlt
sub
jp
and
or
mov
loop
cmp
rcl
sub
lcall
loope
pop
or
dec
jmp
ss
mov
pop
aad
xchg
testl
movsl
addr16
out
jo
scas
cmpsl
fmul
std
out
arpl
inc
mov
sbb
rcrb
js
incb
mov
sub
pop
loopne
push
mov
ljmp
mov
or
push
and
mov
xor
sub
data16
mov
or
lods
inc
movsb
push
lds
inc
insl
and
and
shl
in
mov
rcl
popa
cli
add
xlat
fisttpl
xchg
call
or
in
bnd
mov
inc
and
rorb
jl
or
repz
add
arpl
mov
clc
and
pusha
sub
dec
stos
mov
sub
push
lahf
int3
pop
or
pop
daa
adc
insl
into
out
in
push
push
ret
pop
jmp
test
or
out
in
frstor
imul
mov
push
push
cmp
iret
jnp
or
pop
int
jmp
xor
add
test
inc
jno
movsb
mov
or
sarl
repz
in
jge
add
adcl
rorl
aas
xchg
push
cmp
xor
jmp
push
add
in
push
mov
into
lcall
mov
call
mov
daa
in
ret
jo
cld
push
fdivs
mov
test
lret
dec
subb
dec
cmc
incb
xor
pop
in
out
add
cmpb
sub
xchg
scas
aad
movsl
mov
sbb
fists
movsl
inc
loopne
cld
push
shll
xchg
cmp
push
scas
fdivs
or
out
rcll
ret
jnp
insl
or
fisttps
xchg
sub
subb
add
dec
es
aas
mov
ret
xor
sbb
mov
jp
fwait
out
arpl
insb
leave
cmp
mov
mov
call
pop
xchg
mov
int
das
sbb
dec
xchg
in
cld
sub
pop
lods
enter
xor
mov
mov
loope
mov
rcrl
xchg
or
decb
push
xchg
mov
test
aaa
mov
imul
sbb
mov
xor
push
out
into
fs
cmpsb
xchg
sarb
pop
cwtl
filds
jno
jle
mov
mov
repnz
jp
adc
and
insl
mov
insb
inc
sub
add
paddb
stos
adc
lea
cmp
pop
jge
push
adc
lcall
lret
xchg
cwtl
dec
or
dec
pusha
sbb
mov
andl
cli
adc
repz
sti
xor
sbb
pop
lahf
push
jmp
outsl
lret
test
in
push
js
dec
adc
push
xchg
and
stos
adc
ret
out
insb
stos
mov
dec
leave
jecxz
push
nop
mov
pushf
rcrl
stos
aaa
rorl
mov
and
into
jecxz
ja
cld
jle
inc
in
gs
sub
inc
push
add
in
les
das
jo
fisttps
xchg
cwtl
and
fistpl
insl
xchg
mov
xchg
inc
pop
lret
fucomi
not
stos
lock
mov
movsb
mov
leave
push
fldt
inc
orl
stos
movsl
jmp
pop
fwait
mov
jae
mov
pop
or
cmp
out
fs
mov
loopne
int3
sbb
adc
dec
int
inc
mov
test
cld
push
gs
mov
lret
fldenv
ljmp
sbb
mov
push
pop
push
iret
in
jno
add
jle
mov
out
xchg
mov
cmp
jle
inc
ret
sub
ja
cmp
inc
xchg
test
cmp
jecxz
xchg
shll
cmp
mov
sarb
call
jp
outsb
adc
add
and
data16
in
ds
xor
jg
dec
leave
sub
lods
test
adc
inc
dec
sarb
leave
xchg
into
js
jnp
fstps
es
add
xor
imul
paddd
lahf
dec
or
sarb
jb
xchg
xchg
xor
push
mov
mov
jecxz
fcmovnb
addr16
fildll
add
add
pop
sbbb
out
push
leave
pop
lea
mov
push
sub
into
or
cmp
push
or
dec
jecxz
stos
sahf
inc
mov
ret
mov
sub
out
add
dec
or
cmp
xchg
sub
and
shll
hlt
int3
xchg
fwait
out
push
int
add
cmp
push
ret
test
in
int3
xor
cwtl
shrl
movsl
fcoms
xchg
mov
lret
or
stc
sbb
mov
orb
aaa
test
pushf
out
sub
aam
jge
mov
cs
je
movl
mov
movsl
and
arpl
add
shll
sbb
mov
je
mov
mov
inc
xchg
out
pop
out
jo
mov
negb
aaa
test
pop
cmp
aas
cld
scas
cmc
aam
loope
jge
cmp
lcall
mov
std
int
cmpsb
movsb
je
mov
lods
into
xor
pop
push
popf
push
pop
out
push
lds
sub
lret
and
mov
dec
mov
and
movsl
stc
mov
and
fbstp
stos
dec
in
dec
xlat
test
pop
jnp
in
fcmovnbe
mov
popl
lds
dec
test
pop
inc
dec
in
adc
into
sub
sarb
sbb
cmp
dec
jmp
jbe
mov
add
into
jmp
test
cmp
fdivrl
jno
bnd
xchg
into
mov
push
xchg
xor
in
test
adc
test
mov
jo
jmp
pop
adc
pop
cmp
jne
cmp
xchg
xchg
int3
jbe
fdiv
loop
push
or
lods
xchg
and
jecxz
cmp
jns
or
add
sbb
imul
inc
leave
mov
inc
or
mov
loop
es
xchg
int3
mov
in
dec
cltd
roll
push
adc
jecxz
fwait
adc
jns
cwtl
call
or
divb
shrb
lret
nop
dec
les
out
insb
call
testb
in
leave
inc
mov
inc
dec
scas
or
lret
cmp
xchg
pushf
cvtps2pi
lock
out
aas
das
cwtl
jge
shl
ds
mov
mov
insl
cmp
inc
lods
or
sub
ljmp
pmaddwd
xchg
imul
scas
les
cmpsb
lret
adc
cmp
pop
mov
pushl
fcmovbe
cmp
mov
in
sub
ss
pop
mov
js
or
cmc
aaa
adc
jecxz,pn
xor
repnz
sti
lret
mov
mov
push
negb
push
in
push
je
int3
cmc
loop
and
dec
arpl
into
scas
jnp
int3
mov
stc
add
push
push
xlat
mov
add
stos
jmp
mov
cmp
into
xchg
and
inc
fsubs
add
outsb
mov
js
out
cs
out
aas
pop
fxch
and
mov
jns
pop
sub
jmp
clc
or
call
ja
cld
insl
mov
cmpsb
push
or
xchg
in
out
sbb
outsl
ljmp
inc
out
cmc
jl
pop
stos
cwtl
cld
push
mov
pop
mov
jbe
mov
into
loopne
cmp
jp
inc
sbb
ss
add
pop
das
pop
jno
jnp
mov
and
xlat
mov
into
pop
and
mov
into
sarl
cwtl
aam
jle
inc
outsl
inc
mov
jecxz
fmul
sbb
test
jo
out
pop
dec
jge
xlat
add
lds
cmp
mov
dec
addr16
jnp
shll
pop
xchg
das
push
movl
int3
pop
push
out
cs
mov
inc
sub
div
adc
push
jecxz
adc
movsl
popf
mov
sub
out
iret
insl
ret
es
ficoms
mov
mov
dec
je
mov
add
shrl
inc
in
dec
pop
or
sub
fcmovnbe
xor
pop
lds
int3
dec
or
sti
inc
out
adc
add
and
mov
repnz
push
cmp
fadds
adc
mov
add
hlt
nop
inc
push
and
out
push
ret
cld
cmpsb
outsl
cmp
jecxz
xchg
push
sbb
xor
mov
stc
jnp,pn
in
daa
popf
xchg
add
sarb
mov
cli
dec
xchg
mov
outsl
add
add
test
adc
test
mov
out
mov
push
rorb
jecxz
pop
orl
and
sub
xor
xor
sbb
and
movsl
jmp
cltd
push
mov
add
dec
icebp
sbb
mov
data16
cmpb
adc
bound
push
int
outsb
pop
out
mov
mov
inc
repz
aas
hlt
xchg
and
in
loope
scas
pop
xchg
xorl
out
movsl
pop
shrb
cmp
inc
into
nop
ret
sbb
xchg
mov
mov
repz
push
movsl
jle
aaa
pop
popa
and
jg
clc
sub
mov
loopne
adc
les
das
xchg
hlt
pop
psraw
repz
jp
fs
icebp
mov
and
inc
test
js
int3
out
incb
fldt
into
mov
inc
lahf
xor
cmpsb
movl
adc
mov
mov
sub
cli
cmp
adc
and
fcoms
mov
mov
cmp
xor
out
ljmp
dec
out
sub
mov
into
pop
or
sub
dec
popf
push
testl
cs
int
jb
jno
imul
movsb
icebp
ja
sub
fsub
les
sbbb
jecxz
push
pop
jecxz
and
adc
dec
rcrb
cmp
bswap
not
inc
aad
xchg
nop
mov
std
mov
leave
lods
mov
push
inc
mov
aam
stc
daa
xchg
cmp
jae
xor
pop
mov
pop
dec
out
and
adc
in
dec
les
sub
push
out
in
adc
mov
sbb
arpl
mov
dec
lret
cmp
rcl
sarb
sub
ss
jbe
inc
insl
insb
sbb
loopne
cmp
outsl
rolb
sbb
sbb
out
xor
ss
and
dec
test
addb
jns
push
add
xchg
jbe
dec
mov
rcrl
jno
testl
pushf
inc
add
mov
xor
out
sti
fnstcw
ret
in
push
mov
mov
sahf
out
mov
xlat
push
daa
adc
mov
inc
xlat
loopne
cli
cmpb
fsubr
les
lretw
jmp
stos
cmp
xchg
lret
push
out
pop
lea
fsubrs
or
into
lods
xchg
push
xchg
adc
dec
add
fwait
vmread
loopne
test
mov
add
mov
xor
cmp
aaa
pop
xchg
mov
mov
pop
lret
clc
add
enter
lcall
mov
call
pop
in
fstpl
imul
fsubs
sub
nop
into
fcompl
and
fwait
jbe
jge
cmpsb
cmpb
shrb
test
xchg
push
je
sub
mov
arpl
pop
decb
testl
stos
jmp
imul
sahf
sbb
movb
leave
sub
mov
and
mov
mull
lods
xchg
push
ret
dec
cmp
xor
cmp
jp
fmuls
push
movsl
lret
jne
std
push
mov
cmp
push
jle
dec
pop
mov
sub
lret
outsb
loop
int3
cltd
cmpsl
push
insb
repnz
mov
jl
xchg
fistps
xor
jbe
pop
and
mov
iret
mov
sarl
out
mov
sbb
mov
cld
roll
lods
mov
ret
stos
movsl
sbb
ret
mov
cwtl
xor
xchg
int
jae
lods
cld
iret
sub
push
xchg
jbe
mov
mov
sub
das
movsb
inc
jb
jg
add
iret
lcall
and
jne
repz
test
adc
test
into
cmc
je
add
popf
call
dec
jmp
dec
testb
pop
mov
out
mov
test
add
lret
cs
rol
push
pop
cmp
test
fwait
cmp
push
jbe
loopne
daa
lret
lret
inc
das
enter
dec
adc
adcb
rorb
mov
jp
mov
push
mov
in
das
xchg
jmp
adc
dec
jae
dec
cmp
out
mov
xor
int
and
das
ss
shll
jg
mov
jbe
int
inc
dec
sub
mov
test
ja
loop
clc
lods
shl
imul
push
fs
xchg
mov
pop
test
cmpb
push
xchg
dec
xor
pop
outsb
lcall
into
inc
ficompl
insl
data16
mov
cmc
out
jno
jns
pop
add
dec
sbb
movsl
push
insb
cmp
adc
mov
mov
arpl
stos
fcmovne
dec
dec
add
sub
das
mov
mov
aam
mov
out
lcall
cli
add
mov
push
jecxz
int
lods
dec
leave
stc
pop
std
or
imul
xchg
imull
dec
cwtl
jl
ljmp
popa
jae
es
rcrl
into
addl
push
test
xchg
mov
into
inc
insb
leave
mov
dec
fnstenv
jae
or
mov
hlt
push
outsl
xor
fcompl
arpl
xor
scas
add
cli
mov
sbb
mov
mov
js
dec
clc
rcrl
adc
pop
rcrb
cmp
fmul
ret
sahf
rorl
lods
mov
cmpsl
inc
movsb
jns
leave
pop
push
clc
sub
xchg
imulb
inc
mov
and
and
inc
je
push
push
mov
lret
sbb
xchg
cmp
adc
push
lock
xor
mov
int3
xchg
fadds
loopne
push
mov
jp
fimull
out
lods
je
test
add
inc
jle
stc
leave
pop
mov
jne
insb
dec
xchg
pop
lret
jae
dec
test
imul
xchg
dec
scas
ss
fbld
inc
mov
ja
fisttpll
add
mov
hlt
xchg
cli
ret
repz
jne
ss
add
fmuls
in
test
je
es
pop
loopne
fcmovb
aas
repz
push
push
fcompl
fidivrl
mov
test
inc
fs
gs
pop
lods
popf
test
lcall
or
sub
cltd
iret
cmp
pop
ss
push
xor
js
mov
shrb
lock
stos
cmp
lcall
adc
sbbb
mov
or
stos
jo
pop
sub
adc
sub
add
fbld
jb
lcall
sahf
push
xchg
arpl
cltd
mov
cmp
jp
push
mov
cld
mov
popa
dec
aaa
outsb
and
movsl
insb
gs
add
push
push
int
in
jnp
insl
repnz
pop
fiadds
sbbb
jne
rorl
sbb
sbb
lds
pop
or
imul
aam
xor
push
repz
inc
xchg
or
call
sbb
inc
jb
sbb
and
fnstcw
scas
pop
lcall
dec
ret
push
std
pop
sbb
pop
or
xor
or
nop
inc
enter
into
popa
sbb
adc
push
rcrb
das
xor
pushl
cs
lcall
push
jmp
pop
inc
pop
into
dec
lods
mov
fs
cmc
adcb
pop
leave
adc
loopne
insl
push
and
jbe
fisttps
add
cmp
dec
xor
iret
push
aam
into
clc
and
int
cmpsl
inc
sbb
and
jl
mov
loop
loope
cli
out
clc
cmpl
into
jp
lret
dec
xchg
pop
sub
dec
xor
sar
lods
inc
push
or
ljmp
cmc
movsb
sbb
sar
xchg
lret
cmp
cli
pushf
rol
out
dec
push
xor
mov
mov
add
or
pushf
aas
push
jge
xchg
add
rolb
call
xor
adc
cltd
mov
xlat
jns
xor
imul
push
lret
sub
iret
and
mov
mov
cwtl
jns
dec
ficoml
leave
movsb
xor
rcl
in
jge
mov
jge
lret
aad
hlt
cmc
xchg
inc
jnp
sub
cltd
add
pushf
dec
outsl
outsb
dec
mov
sub
ret
and
pop
xorb
cmpsl
xchg
mov
sub
icebp
xchg
pop
dec
pop
or
push
lret
jbe
sbb
outsl
test
aas
dec
push
in
inc
insl
pop
and
push
sbb
mov
jo
pop
inc
data16
pop
sahf
sbb
cmpsb
cli
jbe,pn
push
ljmp
inc
inc
xchg
xchg
addb
mov
iret
out
cmp
sub
mov
lret
adc
sub
popa
lock
cmp
xor
and
or
jnp
and
pushf
cwtl
push
js
out
rolb
shrl
insb
loope
cs
mov
int3
push
pop
leave
out
sbb
xor
push
inc
or
add
jns
xchg
repnz
push
lock
mov
rcll
scas
pop
push
add
mov
cwtl
imul
or
xchg
add
and
call
xor
repnz
sarl
mov
call
sbb
xor
nop
jne
mov
pop
jo
jle
scas
mov
sahf
inc
push
push
into
in
arpl
sub
pop
orb
js
sbb
shrl
subb
rcll
arpl
in
or
nop
sbb
mov
sti
cmc
mov
or
sbb
mov
insb
rcrb
ss
sbb
mov
roll
movhps
jecxz
lret
outsb
fisubl
cli
dec
or
cs
xor
aaa
dec
lea
scas
int
rorl
xchg
or
scas
arpl
and
aad
fdiv
lret
pop
loop
inc
in
add
or
xor
xor
sbb
xor
adc
into
pop
fmull
dec
loop
cmpsl
fimuls
push
mov
in
incb
push
stc
repz
sbb
xchg
sub
leave
sub
add
push
lret
adc
xchg
and
mov
or
gs
add
aaa
xchg
pop
into
pop
mov
aas
jne
cmp
push
cmc
nop
scas
and
sub
cltd
xlat
and
mov
rcll
jbe
dec
cmp
push
aaa
dec
and
int3
sbb
scas
mov
pop
adc
xchg
fcoms
out
xor
hlt
ret
ss
cmp
lret
dec
inc
sub
adcl
or
cmp
out
push
cmp
push
sub
fwait
xchg
push
xchg
pushf
sahf
cmp
sbb
mov
xchg
sbb
inc
xlat
test
xchg
or
repnz
inc
xor
ja
pop
xor
sub
mov
shl
and
push
fs
adcb
daa
mov
fnstcw
mov
dec
push
push
mov
push
add
cmp
adc
lea
andl
cld
mov
dec
mov
inc
xchg
arpl
mov
out
fildll
mov
or
dec
or
out
or
inc
or
push
mov
into
int
xchg
fwait
pop
sbb
dec
pop
adc
fcoml
dec
fs
sbb
mov
or
pop
popa
jl
jns
in
jmp
mov
xor
xchg
inc
jmp
mov
int3
jecxz
pop
mov
lcall
dec
cmc
lods
sbbb
in
pop
mov
mov
lds
xchg
add
out
sub
add
fldl
lock
push
movb
lea
jne
mov
movsb
sub
push
xor
dec
ljmp
inc
and
sbbb
inc
jge
jns
adc
stos
fldl
sub
lret
or
insb
jbe
dec
jle
int3
iret
int3
fcmovne
mov
in
push
sahf
sbb
sub
pop
movhps
loop
into
mov
add
pop
sbb
sbb
inc
push
mov
into
jne
sbb
xchg
dec
sbb
jl
je
xchg
cmpsl
test
ret
jg
pop
call
ljmp
add
insl
add
das
into
shll
repnz
push
popf
ret
push
lret
lcall
sbb
inc
or
fistpl
adc
lcall
ret
xchg
jmp
cmc
enter
xchg
imul
adcl
test
int3
bound
hlt
jl
mov
mov
push
xor
dec
outsb
or
fildll
pop
lcall
adc
dec
pop
inc
xchg
imul
stos
std
fldcw
mov
and
cmp
xchg
and
int3
mov
pop
jge
mov
in
insl
and
pop
sub
or
sbb
mov
lret
push
mov
arpl
les
adc
sbb
ss
pushf
xchg
rclb
bound
rcll
sbb
pop
movsl
loope
dec
lret
dec
pop
adc
stos
dec
cmp
cmp
out
or
lahf
push
aam
mov
adc
pop
jb
and
inc
dec
movsl
sbb
fwait
push
push
xchg
jnp
ror
aam
xchg
mov
fnstcw
cmp
jp
sbb
push
cmovb
testl
dec
push
push
out
in
out
and
mov
and
xchg
in
add
mov
enter
xchg
xchg
mov
xchg
enter
cmp
arpl
or
jbe
mov
lret
cmpsl
mov
fnstenv
hlt
inc
mov
dec
cmp
es
add
inc
loopne
mov
sbb
xchg
std
xor
ja
xchg
pop
loopne
sbb
test
jmp
cmp
insb
add
mov
std
clc
cmp
mov
loope
lret
aas
mov
adc
jnp
in
mov
lods
scas
jo
popf
mov
js
je
push
cs
push
push
and
jne
fcmovnb
mov
test
pop
loopne
cmp
add
in
and
pop
inc
dec
cli
push
adc
lret
cmp
cmp
mov
add
test
mov
out
movl
outsl
stos
scas
paddsb
inc
jne
es
mov
pusha
pop
adc
js
ficoms
jmp
jecxz
add
lcall
xchg
add
ficompl
or
push
test
fisttpll
loope
lahf
setae
mov
scas
int
fistps
cld
lret
adc
in
cmp
cwtl
test
adc
push
cltd
or
mov
repnz
mov
xchg
shll
scas
fdivp
shrb
sarb
inc
adc
ds
int3
add
sub
rcr
pushf
sbb
ret
arpl
out
xor
fisubs
ljmp
fwait
xchg
jb
xchg
inc
or
outsl
stc
dec
pop
jg
ds
scas
movb
mull
testb
mov
jmp
xchg
xlat
sbb
jge
sbb
fs
push
push
das
into
lret
and
dec
xchg
outsl
or
lock
loop
mov
or
sub
xchg
dec
pusha
into
outsb
rclb
lods
shlb
jnp
in
fcmovnbe
lock
pop
push
mov
jmp
or
sbb
cmpsl
pop
and
mov
bound
cli
adcb
shlb
xchg
out
cmp
inc
fnsave
add
rcll
js
adc
loop
pop
xchg
out
imulb
mov
pop
adc
jb
mov
dec
popa
sbb
int
mov
aas
in
fcom
outsl
or
dec
jmp
xor
xchg
sbb
cs
sbb
push
into
cld
cmc
lods
jmp
cmp
dec
cvtps2pi
dec
aad
daa
mov
dec
mov
les
xchg
jp
mov
and
and
xor
adc
mov
cwtl
movsl
jne
lods
push
cltd
mov
adc
js
cmpsl
jo
insb
mov
cmpsl
lret
jle
scas
loopne
rorl
test
add
mov
daa
xor
shrl
mov
fld
cmp
or
xor
int3
push
cmp
test
in
push
cli
nop
stos
stos
enter
notb
cmp
in
sbb
sub
jmp
jo
mov
lods
cmpsl
xchg
mov
push
cwtl
adcb
pop
mov
into
or
pop
mov
loop
jbe
and
rclb
shll
mov
and
in
xchg
mov
mov
or
enter
cld
imull
arpl
xor
mov
adc
pop
mov
mov
shl
mov
inc
lods
mov
fucompp
mov
stos
mov
icebp
jecxz
imul
xor
mov
mov
fst
jmp
push
dec
cmp
dec
xchg
inc
dec
lods
sbb
cmc
jbe
lea
stc
pop
and
add
loope,pn
loopne
xchg
mov
mov
xor
adc
out
sti
aaa
xchg
mov
inc
dec
xchg
mov
jge
or
ffree
movsl
push
add
jbe
or
sbb
mov
mov
pop
sub
into
rclb
movsl
cmpl
jnp
xor
mov
push
cmp
int
or
lock
daa
outsb
je
popa
mov
pop
lcall
jae
xchg
and
sbb
jecxz
in
mov
or
imul
stos
std
xchg
stos
dec
addl
jl
cmp
repz
je
add
cli
out
or
push
outsl
jge
dec
mov
sub
xchg
add
stc
das
ja
rorl
lcallw
pop
in
ja
enter
fs
inc
aam
roll
loopw
je
push
push
dec
xor
cmp
out
les
or
cmp
or
iret
lret
je
insb
lret
enter
dec
jne
inc
inc
push
push
pusha
cltd
into
mov
add
xor
les
xchg
xor
or
lock
lret
call
adc
jns
push
xchg
lock
scas
fwait
test
mov
test
xor
pop
aad
sub
fistps
cld
hlt
pop
sarl
inc
lods
rcrl
lock
inc
loope
cmp
xor
mov
ljmp
ret
pop
inc
or
and
popa
aam
stos
insb
jge
jno
and
daa
add
adc
fs
outsl
ss
fwait
adc
xor
mov
sub
or
add
fdivs
lcall
rcl
lods
test
mov
xor
xorl
test
in
mov
dec
jg
adc
cmp
jb
popf
hlt
out
jnp
sbb
or
ds
jbe
and
cs
andl
fisttpll
mov
loope
bound
sub
test
rcll
xor
pusha
ret
imul
cmp
dec
dec
inc
xor
aam
int
popf
jne
push
fadds
andl
aas
test
push
cmp
sahf
mov
jp
jl
push
push
pop
into
dec
iret
je
lahf
shrl
dec
add
xchg
addr16
lret
fs
sbb
mov
cmp
test
orl
test
jo
jne
and
push
fidivl
pop
push
lods
movsl
push
dec
xchg
sub
or
adc
inc
add
mov
into
xlat
inc
jl
push
jbe
sbb
and
cli
fsubs
fimuls
data16
pop
xchg
add
iret
in
mov
bound
adcl
push
outsb
aaa
or
loop
icebp
sbb
and
xor
push
add
jmp
arpl
orb
add
mov
dec
cmc
fimuls
cmp
imul
push
sahf
ret
loope
jno
lods
sbb
ja
fstps
xchg
fimuls
sub
add
aas
or
lea
adc
mov
mov
iret
xlat
rolb
popf
mov
xchg
mov
test
fstpt
push
aam
and
out
xchg
out
dec
cs
lods
out
mov
stos
or
mov
jl
or
xchg
in
add
arpl
pop
dec
out
adc
test
xchg
mov
dec
add
pop
das
je
inc
jmp
daa
fwait
mov
sub
mov
push
movlps
xlat
mov
loop
push
dec
mov
int
out
test
sarb
inc
out
popa
or
jge
cmpsl
sbb
sub
movsl
xor
fwait
jle
fcoms
jge
inc
cmc
cld
jecxz
cltd
or
movsl
pushf
xchg
xor
dec
pop
pop
dec
mov
jg
pop
push
mov
lret
mov
xchg
sti
fwait
or
sub
cmp
dec
cld
mov
out
push
popf
or
jo
jp
jns
das
mov
movsl
cmpsl
mov
ljmp
cmp
imull
int3
and
push
leave
add
in
mov
sub
sbb
fwait
xor
notl
sbb
push
cmp
jbe
stos
push
mov
inc
mov
stos
int
repz
into
mov
int3
cmp
cs
jg
into
mov
nop
pop
mov
and
enter
clc
and
xchg
mov
vpcmpeqw
dec
mov
inc
outsl
pop
ret
in
pop
movsb
inc
mov
inc
and
mov
lea
pushf
xchg
leave
ljmp
sbb
push
push
iret
ret
jno
in
xchg
lea
mov
mov
mov
and
ret
mov
mov
fdivl
or
rolb
mov
shlb
add
jecxz
mov
jae
cs
int3
dec
xchg
mov
xor
clc
inc
call
ror
push
mov
lret
fistl
add
fnstsw
dec
jbe
push
test
sahf
mov
xchg
pop
mov
stos
out
ret
sub
mov
bound
sbb
shl
insb
inc
negb
or
or
and
icebp
jbe
mov
jp
lahf
das
jb
xorl
xchg
in
shl
hlt
addr16
into
mov
pop
pusha
mov
popa
jl
mov
mov
inc
pop
pop
add
test
sbb
rorb
and
or
fistpl
jbe
and
pop
js
test
jae
xchg
xchg
ret
mov
bound
mov
je
add
lods
mov
push
ret
std
xor
add
fwait
shll
loope
push
mov
jge
pop
das
mov
stos
add
dec
les
inc
xchg
mov
or
jb
inc
inc
add
into
push
aad
cs
int3
mov
mov
inc
xchg
test
xchg
sub
xchg
rcrb
nop
int3
out
addb
ret
in
push
dec
mov
mov
jmp
and
pop
cmp
push
push
push
loopne
test
push
loope
jb
scas
test
pop
int
les
rcll
scas
rclb
sub
out
pop
cmp
pop
xchg
or
in
and
cmpsb
mov
jo
dec
lods
lods
scas
and
aam
repz
iret
ss
imul
mov
push
mov
les
roll
rcrb
in
in
cwtl
xchg
xor
insb
cmp
popa
clc
sbb
pop
add
movsb
loopne
imul
xchg
sub
pop
cltd
add
push
stc
stos
call
adc
adc
jae
and
loope
mov
pop
pop
fmulp
test
cwtl
jmp
add
pop
data16
orl
sar
push
ljmp
xchg
push
sub
cmpsb
dec
fimull
push
dec
pushl
lcall
mov
ja
in
loop
hlt
push
ret
mov
or
or
mov
cli
jg
xchg
lea
iret
cmpl
flds
fisttpll
and
dec
lea
fs
sub
stos
and
lret
and
movsl
data16
int
ss
outsb
dec
je
lret
cmp
add
jb
push
mov
mov
cmp
iret
in
aam
or
xorb
gs
jb
cltd
lret
mov
push
jae
xabort
std
bound
cmp
test
or
push
mov
inc
out
loop
jecxz
mov
push
mov
lods
mov
jae
and
imul
mov
pop
sbb
jle
dec
lcall
adc
enter
imul
dec
lcall
cltd
dec
xorb
dec
pop
ret
into
arpl
push
and
inc
pushf
fisttpll
mov
push
sub
fsubrp
out
lods
inc
setp
dec
and
mov
in
jae
mov
fnstsw
lret
xorb
mov
mov
in
dec
frstor
pop
pop
push
mov
mov
sbb
daa
fsts
in
push
out
push
inc
sub
out
into
adc
push
pop
sub
mov
test
xchg
push
rclb
mov
add
shl
test
rcl
push
scas
push
cld
sbb
and
push
push
fdivr
mov
xchg
iret
add
js
push
orb
addr16
ficoms
adc
or
lret
xchg
sbb
subl
stos
roll
mov
daa
sub
test
js
pop
push
jg
xrelease
jae
adc
inc
popa
lock
out
xchg
dec
pop
ficomps
call
negb
psubd
xchg
ror
ds
jne
pusha
adc
pop
xchg
jmp
lock
mov
adc
fcmovnbe
pop
push
xchg
adc
dec
jl
call
mov
data16
pop
push
inc
nop
mov
ja
repz
dec
int
mov
and
fmul
cmp
inc
xorl
in
dec
loopne
scas
dec
fdivs
aas
jge
test
xlat
push
dec
inc
orl
add
sahf
aas
xchg
cmp
imul
or
gs
or
fwait
out
adc
inc
dec
out
jg
cs
mov
ss
movsb
pop
mov
push
lea
dec
shl
sbb
shll
cmp
push
mov
jbe
ja
roll
adc
leave
imul
das
rcl
sub
push
adc
mov
mov
int
mov
int3
or
sarb
pop
icebp
sbb
rcl
mov
dec
cwtl
mov
jb
push
icebp
sbbl
pop
pushf
loope
movsl
and
push
jmp
outsb
dec
push
shl
fildll
insl
test
sahf
popa
adc
dec
sbb
push
repnz
imul
or
cmc
dec
movsb
and
and
add
es
aas
lea
jbe
test
popa
not
es
xor
outsl
mov
jbe
int3
sbb
loope
mov
and
fistl
pop
aam
enterw
jle
in
adc
sti
mov
jb
push
cmpsb
enter
mov
dec
fists
mov
xchg
dec
ficoms
lahf
cmc
mov
movsl
inc
imul
ss
inc
jbe
inc
inc
int3
mov
out
push
mov
aaa
sub
jmp
sbb
addl
ror
fs
hlt
fcompl
repz
test
popa
xchg
lahf
push
hlt
pop
dec
mov
stos
mov
mulb
aaa
inc
push
mov
lret
jb
adc
in
les
orb
xor
inc
dec
rcrl
jge
notl
xorl
data16
sub
loop
fwait
lahf
and
lods
scas
sbb
push
cmc
inc
pop
xor
andb
mov
sbb
les
jno
fidivs
pushf
and
dec
aad
mov
test
addr16
arpl
or
xor
ljmp
push
sbb
dec
push
lret
push
add
shl
jnp
js
fnstenv
fs
pop
jnp
jb
xchg
adc
dec
push
lret
rcrb
test
adc
leave
hlt
jl
pop
xchg
mov
pop
or
sbb
push
add
stos
push
jae
cs
push
or
scas
and
inc
add
lret
and
nop
pop
xchg
pop
sub
sub
adc
dec
ds
je
faddp
xchg
ret
dec
inc
lcall
jb
in
addb
pop
out
cld
testb
pushf
mov
add
js
xchg
or
mov
decb
or
movsl
adc
add
or
jecxz
xchg
aad
stos
aam
daa
pop
lret
xor
xor
xchg
jl
scas
mov
insl
cmpsl
shll
dec
mov
stos
rcrb
outsb
out
xor
lock
push
dec
es
jae
add
mov
xchg
out
fcoms
push
sub
mov
int
ja
xchg
gs
add
add
ret
arpl
push
inc
cli
inc
imul
js
dec
mov
and
mov
and
ss
xor
rolb
mov
pop
push
mov
int
adc
add
xchg
cwtl
shll
psrld
dec
push
lods
jp
div
cmp
mov
out
es
imul
lret
mov
imul
out
mov
mov
and
pop
lods
dec
lahf
push
mov
push
mov
inc
addr16
xchg
xchg
outsb
jmp
adc
test
negl
loope
mov
cld
leave
mov
add
rcrb
ss
lret
gs
lods
pusha
dec
xchg
test
dec
lret
and
fwait
sbb
and
out
filds
sarl
sbb
subl
cmc
push
icebp
jno
jg
jmp
jl
mov
aas
pop
add
mov
movsl
rcl
and
stos
pop
out
mov
jo
aaa
clc
inc
hlt
lcall
mov
sub
shrl
lods
cwtl
xchg
jg
push
jp
inc
dec
shrl
jge
sbb
push
xor
xor
jl
lock
xchg
jmp
popf
cmp
stos
pop
test
ror
mov
popl
xlat
and
jne
aam
mov
fwait
xsha1
cmpsb
or
or
movsb
xchg
sbb
jbe
call
cmp
cmpsl
addr16
push
add
ret
imul
pop
les
jo
mov
mov
aaa
mov
xchg
cmp
mov
lea
mov
leave
add
mov
and
test
mov
out
es
loop
xchg
sbb
out
adc
movsb
dec
cmp
mov
mov
out
iret
sub
jne
and
dec
pop
data16
inc
gs
mov
outsb
jecxz
lock
test
incl
adc
pusha
fdivr
dec
movsl
mov
cmp
xlat
divl
test
out
in
scas
out
test
in
jle
int3
stos
adc
addl
test
push
and
ss
xchg
out
mov
pop
xor
jl
ds
ss
movsl
dec
xor
push
aas
xchg
and
gs
sti
lock
into
xchg
hlt
mov
ficomps
sbb
clc
in
insb
int
mov
jb
fdivs
fldcw
dec
daa
sbb
popa
xor
cmp
aaa
insb
lcall
and
cmp
test
in
pslld
mov
jp
out
xchg
adc
or
inc
mov
and
negb
sub
aam
mov
fcmovbe
out
in
pop
jbe
and
adc
int3
lret
mov
pop
dec
xor
js
scas
mov
in
cmp
cmp
ret
xchg
mov
add
adc
push
add
pushf
loop
aaa
adc
cli
jge
or
pop
or
and
gs
jmp
out
test
add
dec
mov
fcmovb
pop
stos
dec
loop
adc
push
cmc
test
push
push
sahf
and
pop
pop
nop
outsl
lea
adc
and
jmp
fidivrl
mov
pop
push
int
movsb
cmc
mov
out
mov
or
add
out
data16
nop
mov
push
int3
repz
and
lret
lret
outsl
sub
cmp
sub
push
xchg
pop
push
push
stos
std
cltd
sbb
jmp
in
inc
loopne
ja
mov
mov
lea
xchg
mov
jecxz
push
xchg
std
orl
roll
adc
push
and
dec
adc
jmp
incl
inc
mov
fcom
sbb
pop
push
sbb
xor
mov
js
cmp
xchg
xchg
xorb
dec
mov
ds
pushf
sub
lods
dec
into
adc
or
ficomps
les
ret
dec
dec
mov
dec
leave
dec
icebp
jne
gs
xor
push
nop
in
into
shlb
pop
jae
popf
mov
mov
add
pushf
test
jb
es
jp
mov
sub
clc
test
xchg
xlat
add
jo
pop
ss
cmc
test
leave
call
neg
fwait
das
out
mov
jb
adc
cwtl
jp
jo
cmp
nop
addw
jmp
jle
fsubrs
into
or
sub
pop
negb
and
cmpsl
rol
out
adc
xchg
cltd
ror
cmp
mov
push
cmp
cmc
adc
cmp
cmp
cltd
xor
mov
mov
popf
clc
push
loop
inc
push
sti
insb
adc
test
add
xor
jmp
and
call
add
jg
pop
clc
push
nop
add
sbb
in
lret
xchg
jo
ds
xchg
mov
jg
pop
push
repz
aad
push
xchg
imul
test
idivb
lds
rcl
cld
dec
sub
clc
push
divps
popa
cltd
scas
stc
or
add
leave
cmp
mov
fidivs
inc
xor
iret
ds
ja
aad
mov
cmpsl
xchg
fiadds
adc
out
mov
jge
and
mov
int
data16
xchg
jp
dec
push
les
stos
lret
movsl
cmp
insl
sarl
push
ss
mov
pop
dec
aad
int3
aaa
sub
leave
enter
ret
inc
sub
test
fcoml
pop
stc
sub
xchg
insb
push
dec
out
sarb
out
mov
rorl
js
inc
loope
and
dec
cmp
sub
push
or
loop
lret
jne
add
idivl
daa
fiadds
jnp
add
mov
arpl
mov
xchg
push
inc
in
fimuls
dec
sbb
lcall
dec
mov
push
pop
iret
ret
inc
xchg
adc
out
shl
iret
pshufw
js
xchg
cld
out
daa
enter
push
les
into
mov
popf
cmp
popa
add
mov
xchg
outsb
je
aad
insl
push
xor
sub
lods
subl
mov
add
fildl
inc
dec
loopne
cld
nop
cmp
adc
and
add
fmul
cmp
xor
scas
adc
bound
pop
lret
cmp
out
pop
out
pop
sbb
int3
in
movl
cwtl
mov
jno
js
sbb
pop
outsb
lea
adc
into
mov
dec
int
out
imul
mov
shlb
pop
mov
add
and
mov
insb
repnz
arpl
or
enter
xor
lret
adc
shl
clc
or
cli
inc
pop
ljmp
push
test
xchg
jbe
push
xchg
orb
fisubs
lret
push
xlat
push
or
into
mov
xor
adc
and
lret
not
xchg
loop
popf
inc
push
rclb
aaa
loopne
out
inc
int3
inc
lea
imul
pusha
ret
sbb
mov
scas
rcr
pop
xlat
jg
out
mov
dec
aaa
in
adc
pop
xchg
imul
int3
push
dec
xlat
fs
dec
jbe
inc
push
outsb
xor
mov
lods
insb
test
cmp
sub
rorb
aaa
fisubrs
sub
ror
cmpsb
rorb
mov
jge
cwtl
leave
sub
movsb
jmp
cmp
mov
repnz
mov
lret
ss
call
fcmovne
jno
aam
movsl
inc
push
xchg
into
sub
xlat
cwtl
cmpsb
add
xor
adcb
mov
addr16
es
sub
pop
xor
inc
ror
inc
xor
loopne
cmp
dec
mov
dec
or
jl
mov
inc
arpl
out
nop
cwtl
jnp
orb
and
mov
dec
lret
xchg
cld
pop
insb
ficoml
xor
cmp
and
scas
xchg
dec
or
out
es
dec
inc
lock
xchg
mov
xor
xor
jg
jecxz
aad
xor
xor
and
cmpsb
and
lods
fcompl
sbb
out
addr16
or
adc
imul
aaa
mov
push
iret
xchg
mov
enter
fwait
add
cmpb
lahf
int
repnz
or
inc
xchg
mov
jns
into
dec
cwtl
add
js
or
cld
mov
jmp
sub
scas
or
jo
mov
jl
push
fwait
testb
or
insb
imul
pop
daa
add
jg
ljmp
and
clc
or
pop
testb
mov
stos
andb
push
pop
movsb
xchg
ret
mov
xchg
xor
sbb
jl
test
xchg
pusha
cmp
jbe
bound
aam
ss
add
push
sub
fisubs
or
push
push
out
lock
pop
lret
out
rol
mov
and
mov
sti
aam
fisttps
sub
dec
out
lock
xchg
sarb
imul
test
pop
sbb
adc
or
and
cmp
jl
and
xchg
xchg
movsl
adc
inc
sub
inc
inc
rolb
mov
xchg
stos
aam
push
push
in
js
adc
sti
or
push
mov
sahf
xlat
dec
inc
leave
mov
les
out
adc
mov
enter
lods
pop
and
fldenv
rorb
xchg
xchg
xor
adc
dec
push
mov
out
jb
jmp
rorb
mov
into
dec
cli
int
push
cld
std
movsb
pop
inc
mov
sbb
cmpb
push
jb
push
jmp
mov
scas
insl
loop
das
adc
push
adc
mov
mov
add
xchg
sbb
add
repnz
fs
in
fdivrl
sahf
cmpb
bound
pop
outsb
sbb
int3
xchg
jbe
adc
push
cwtl
mov
repz
sti
imul
sbb
ficoml
into
add
or
xor
push
fisubrs
mov
dec
mov
cwtl
pop
movl
pop
or
sbb
push
jp
das
pop
cmp
fdivl
ljmp
or
sub
popa
jmp
lcall
repz
dec
and
sub
ss
jp
cmc
xor
int3
add
sahf
out
jnp
push
test
cmc
sbbb
mov
sti
mov
in
xchg
out
shrb
jp
push
push
out
cmpsl
in
jge
movsl
das
out
lcall
push
pushf
xchg
dec
mov
leave
sub
psubsw
mov
enter
mov
mov
outsb
push
xor
xlat
popf
sbb
dec
das
pop
push
loop
jbe
sub
inc
into
and
mov
lds
in
sarb
outsl
inc
pop
out
mov
mov
movsl
lcall
jge
test
mov
scas
push
subl
adc
insb
add
push
in
pop
lret
push
loopne
shlb
pop
cld
jmp
inc
lahf
rcrl
fisttpl
mov
nop
cmp
movsb
adc
push
js
fmul
cmp
outsl
into
aad
push
dec
dec
ror
add
push
mov
mov
data16
and
cwtl
test
inc
mov
and
mov
movb
cmp
push
loop
inc
sub
les
repz
into
push
jbe
call
adc
mov
and
mov
mov
adcb
dec
lret
pop
aas
inc
shll
or
xor
test
mov
shll
jb
loopne
sbb
int3
or
xor
inc
lea
pop
sbb
jns
imul
out
sahf
hlt
mov
or
pop
dec
fidivs
inc
into
aad
cmp
fsub
xlat
jo
lahf
leave
mov
push
cwtl
aas
pop
adc
mov
xor
gs
cwtl
lea
xor
jl
into
je
shrb
sahf
mov
lret
pop
in
subb
cmp
add
xchg
mov
add
dec
test
packuswb
clc
sti
in
into
sbb
fstps
mov
xchg
and
popf
or
xlat
inc
aam
sahf
fnsave
negb
cmp
cmpb
mov
lods
movsl
adc
stos
push
mov
ret
in
xchg
pop
test
jge
test
xchg
idivl
lods
iret
pop
rcl
or
and
sbb
push
stc
xor
push
jne
mov
ret
cltd
sbb
mov
enter
aas
push
sahf
cmp
gs
outsb
ja
xchg
out
mov
sub
mov
sbb
out
jne
lods
push
dec
sbb
out
xchg
lock
inc
pop
xchg
loop
test
inc
sub
push
sub
sbb
ds
not
mov
andb
movsb
cmpsb
aas
dec
ret
adc
pop
jp
jb
sub
ds
adc
andb
aaa
lea
daa
leave
test
sub
mov
mov
mov
xor
dec
push
push
jae
add
push
add
mov
inc
int3
daa
testb
test
xchg
rcr
mov
pop
add
jns
not
test
insl
inc
bsr
pop
mov
pop
and
xor
cmpsl
jbe
fidivs
push
adc
jno
ljmp
sub
out
mov
pop
in
xchg
cmp
pop
push
push
cmpsl
cltd
mov
insl
mov
std
jge
dec
loope
arpl
jmp
mov
cmc
mov
scas
dec
fadd
add
add
inc
or
cmp
dec
mov
in
fldt
lret
xchg
lcall
fld
push
loopne
adc
adc
push
fbld
fdivr
ss
repnz
xor
hlt
adc
push
loop
add
lret
push
shlb
je
dec
nop
fmuls
jecxz
ss
out
adc
enter
loop
fiadds
nop
out
cmp
call
jmp
jmp
pushf
mov
mov
lcall
bound
dec
or
cmp
mov
dec
out
lea
xor
test
sbb
xor
test
int
jne
fwait
push
cmp
repnz
lcall
push
mov
dec
nop
idivl
jnp
xchg
dec
push
hlt
lds
add
test
push
out
test
outsl
mov
mov
fnstenv
or
xchg
lret
aas
and
and
rolb
cli
out
outsl
popf
cld
cmp
xchg
test
outsb
mov
lret
ret
dec
xchg
mov
movsl
or
push
lods
push
sbb
or
adc
leave
iret
mov
cmp
jns
push
out
inc
and
push
enter
inc
out
sub
jmp
and
push
xchg
dec
cs
ret
out
mov
ljmp
aaa
fdivl
test
cli
xchg
jge
mov
lret
ja
push
into
stc
mov
sub
pop
iret
adc
push
adc
pop
mov
add
jle
aaa
push
sbb
insl
int
jns
xchg
fimuls
rcll
outsb
jg
xchg
add
jns
adc
push
push
cmp
lret
inc
mov
lret
mov
js
out
aam
cltd
jne
lret
out
outsb
outsl
xlat
add
mov
adc
out
cmp
dec
lahf
lds
scas
lea
xor
repz
std
rorb
push
jno
mov
mov
or
cmp
shl
push
scas
jge
xor
ret
mov
jp
dec
pushf
ficoml
ds
or
xchg
in
xchg
jmp
pop
scas
int3
leave
dec
inc
sub
stos
mov
test
inc
scas
sub
insl
or
in
sub
mov
out
scas
cmp
mov
pop
push
sub
mov
pushf
jle
cltd
mov
into
lods
cmpsb
dec
pop
ja
aas
adc
xchg
or
iret
jle
mov
mov
js
mov
fdivl
pusha
lcall
sub
out
test
imul
push
mov
lods
rorl
stos
xor
pop
inc
push
pop
outsb
in
sti
aam
popf
insb
int3
jo
mov
mov
mov
js
push
ja
mov
rclb
fdivl
shr
lock
ljmp
insb
push
mov
sub
nop
cmp
inc
lahf
push
movl
mov
daa
cmp
adc
dec
int3
adc
inc
mulb
iret
push
filds
jmp
inc
mov
mov
jnp
stos
ljmp
mov
mov
mov
pop
ret
enter
add
push
loopne
mov
add
dec
test
jecxz
in
loope
mov
ret
add
xchg
test
imul
fcmovnbe
test
shll
cmpsb
popa
xchg
xchg
scas
into
jo
mov
mov
or
pop
ljmp
int3
in
push
and
lea
pusha
add
push
fisttpll
dec
loopne
inc
mov
movsb
aam
scas
pop
mov
dec
call
xchg
aas
inc
cmp
fs
scas
bound
cli
gs
call
lret
pop
pop
jae
ja
mov
sbb
loopne
insb
andb
or
leave
std
out
imul
fimull
pushf
xor
inc
scas
sub
xor
pop
inc
insl
adc
cmp
push
out
pop
mov
call
nop
cmp
mov
popa
dec
cmp
ret
cmp
pop
add
push
movsb
push
call
enter
outsb
fwait
jns
stos
sub
sub
push
aad
imul
push
cli
xor
fnstcw
jb
xlat
ret
lahf
jecxz
mov
iret
pop
lock
dec
dec
pop
call
pop
cmp
scas
pop
mov
rcr
iret
mov
movsb
and
adc
lcall
pop
test
inc
pop
ljmp
int3
rcll
seto
insl
xchg
sub
mov
ja
push
inc
jge
push
add
fidivl
rcrb
bound
ror
rcrl
cmp
daa
pop
inc
js
xchg
add
out
lret
jle
or
or
cltd
mov
add
sahf
test
pop
fnstsw
clc
pushaw
out
sbb
pop
dec
push
fsubrs
loopne
mov
icebp
lret
in
mov
jg
pop
shll
mov
imulb
push
jle
mov
fwait
inc
mov
enter
rdtsc
sbb
jle
xor
rclb
and
int3
cmp
out
hlt
add
jb
lds
sbb
pop
inc
lods
aam
addl
jmp
addr16
rcrl
test
mov
lods
xchg
xor
sub
xchg
add
cltd
mov
popf
cmp
mov
xchg
or
add
into
dec
daa
pop
mov
scas
mov
negb
int3
pop
sbb
mov
jno
add
and
outsl
sti
sbb
push
cmp
call
push
into
jge
inc
scas
mov
inc
sahf
lcall
lcall
jns
push
int3
daa
xchg
inc
push
rolb
imul
in
jns
jne
xor
mov
aaa
movsl
ret
lret
sbb
cmp
lds
arpl
push
push
push
outsl
dec
enter
rorb
aam
insl
sbb
jle
stc
xchg
aas
addr16
dec
sahf
clc
daa
mov
ss
negb
adc
sub
ror
fistpll
lret
add
stc
push
cmpsb
out
imul
mov
inc
mov
mov
aam
add
stos
lcall
ds
jmp
decb
cmp
cmp
fistpl
mov
fst
and
out
cltd
push
ss
xchg
xlat
lahf
movsl
stos
inc
fisubs
xchg
push
rorb
push
pop
adc
movsl
aam
xchg
adc
outsb
loop
hlt
incb
arpl
cld
push
add
out
std
cmp
ficompl
mov
pusha
sub
dec
dec
jecxz
mov
movsb
cmpsb
gs
test
xor
push
ss
in
and
jne
or
jg
insb
dec
mov
ljmp
iret
fsubl
int
lock
rcll
xchg
mov
dec
cli
dec
bound
icebp
dec
mov
aaa
pop
into
gs
adc
and
mov
add
ss
cmp
arpl
cmpsl
fcompl
xchg
or
loop
fsubrl
push
push
mov
mov
lods
stos
xor
inc
dec
sbb
ret
sub
mov
pop
push
decl
inc
pop
pusha
inc
rolb
loopne
lea
mov
insb
pop
adc
int3
jle
jmp
icebp
int
jae
aaa
popa
scas
pop
decb
addr16
mov
repz
daa
aas
push
cmpsl
movsb
mov
push
pop
push
shlb
jns
or
inc
adc
jecxz
xchg
xor
pop
adc
imul
bound
and
pushf
xchg
sub
sbb
pop
frstor
mov
and
add
out
popf
sbb
inc
movsl
out
push
fildll
addr16
cmpsl
mov
pop
push
mov
fidivs
mov
or
sub
xchg
leave
add
xchg
outsb
mov
clc
lds
jbe
in
adc
add
jle
fadd
jb
test
shr
add
and
das
iret
imulb
and
in
scas
lcall
add
in
pop
inc
push
sbb
dec
test
sbb
xor
or
mov
dec
movsl
lret
sbb
in
jmp
mov
subl
fdivrs
sub
lea
int3
loope
scas
rcrb
cmp
bound
pop
js
sbb
dec
xor
jbe
aaa
mov
and
mov
addr16
fidivrl
xchg
rolb
push
es
out
dec
daa
sub
loope
lahf
cmp
jnp
in
ret
jno
stc
dec
push
or
push
into
imul
int
add
ss
jge
push
outsb
adc
inc
iret
mov
loope
push
pop
inc
incl
insb
inc
sbb
ds
rcll
fcomps
inc
dec
mov
mov
adc
or
xor
data16
ret
aaa
mov
daa
jns
push
mov
aam
out
or
mov
in
dec
std
mov
mov
mov
bound
leave
mov
add
sub
push
loope
enter
adc
or
lea
push
aas
mov
sbb
adc
outsb
xor
bswap
fneni(8087
dec
hlt
add
pop
jbe
add
negl
xchg
lret
sub
mov
cwtl
push
pop
ficoml
es
push
in
push
cmpsl
cli
jge
xchg
inc
mov
fs
test
out
movsb
pop
mov
sub
and
cmp
out
je
sbb
xchg
adc
test
movsb
xchg
stos
and
push
rcrl
loope
cmpsl
and
mov
jecxz
pop
dec
loopne
lea
imul
dec
cmp
in
sbb
push
and
in
pop
or
es
int
outsl
sbb
test
in
mov
mov
ds
test
push
insl
arpl
mov
cmp
jbe
mov
je
in
ret
mov
fnstsw
scas
sahf
mov
push
ljmp
mov
sub
in
adc
xor
sbb
fbstp
mov
sub
aaa
push
icebp
lods
dec
push
sub
adc
jbe
stos
xchg
and
mov
mov
jg
bound
xchg
xorl
adc
fildll
and
test
pop
cmp
ret
call
and
outsl
clc
lret
sub
jbe
out
sub
cmp
mov
in
inc
or
int3
stos
mov
rcrb
mov
shlb
pusha
mov
test
jo
sub
lea
test
push
cwtl
out
adc
cmpsb
stos
adc
dec
inc
cmp
into
test
dec
push
dec
push
lock
push
jle
mov
jge
lds
mov
pop
and
inc
mov
out
imul
pop
sbb
sub
pop
push
jl
cmp
scas
rolb
sbb
mov
loope
and
push
or
bnd
cmp
jne
lret
cmp
push
sub
xor
dec
in
and
jb
push
inc
sbb
imul
xchg
les
popf
pop
ret
mov
mov
fstpt
mov
jno
or
xor
ret
pop
jns
outsb
lret
lock
pop
imul
popf
xchg
negl
iret
adc
add
bound
cmp
inc
and
insl
and
lods
shlb
idivb
inc
data16
mov
rcrl
cwtl
mov
or
aaa
ud2
xchg
adc
rcl
jecxz
loop
add
std
insb
xchg
mov
cmpsb
lret
sub
int3
and
jbe
int
test
into
add
repz
loop
sub
push
pop
mov
scas
cwtl
cs
mov
test
xor
or
and
ja
int
sahf
pop
mov
fldt
repz
pop
jmp
jb
ljmp
imul
mov
bound
sbb
mov
cli
das
mov
jecxz
std
jo
jmp
shl
cmc
xchg
mov
cs
cltd
jb
dec
and
push
adc
jns
ds
pop
xorl
out
xlat
pop
sbb
fisttpl
ret
sbb
jl
mov
lods
mov
std
fnstcw
mov
push
orb
xchg
dec
add
cmpsl
push
sub
test
adc
into
loopne
add
pcmpgtd
dec
adc
lds
xchg
cltd
sbb
sbb
movsb
lea
test
push
add
mov
adc
xchg
xchg
or
into
jbe
std
adc
inc
cmp
inc
int
adc
divb
mov
inc
js
call
flds
mov
test
mov
cmp
push
dec
inc
cmp
push
aad
int3
push
dec
fs
xchg
rcl
xchg
dec
xchg
cmp
repnz
mov
aaa
popa
cmpsl
inc
jmp
mov
fidivrs
cmc
lods
add
repnz
push
lods
aam
push
js
sarb
stos
dec
mov
mov
cmp
and
sub
push
or
mov
push
sbb
push
movsl
pop
adc
ds
lods
fistps
imul
cmp
cmpsb
push
insb
cmpsl
fmul
push
int
test
inc
dec
shl
out
out
int
repnz
mov
out
int3
inc
dec
push
sarb
mov
pop
fdivs
in
sub
sbbl
bnd
sub
insb
mov
push
enter
std
fnstsw
iret
sub
shrl
mov
mov
int3
push
sbb
lahf
dec
clc
insb
into
cmp
mov
mov
mov
xchg
insb
lea
lock
push
cmp
subb
adc
andl
fiadds
pushf
movsb
add
mov
jge
add
inc
push
fildl
inc
into
rcr
sbb
xchg
jae
fisttps
jmp
adc
in
sub
arpl
sub
repz
in
mov
and
cmpsl
notl
dec
out
or
xchg
imul
cmp
aad
mov
sub
xchg
in
push
mov
cwtl
xor
mov
push
enter
fsubs
cli
stc
in
jns
add
jbe
cld
inc
mov
dec
imul
pop
lea
fcmove
aad
jo
fcoms
pop
and
loope
jne
sarb
adc
nop
push
push
fadd
js
imul
pop
sarl
add
mov
mov
shlb
pop
stos
mov
in
insl
mov
sbb
mov
xchg
push
fs
icebp
iret
in
xchg
dec
push
imul
enter
or
into
std
iret
push
push
mov
sbb
popf
in
push
add
pusha
xor
movsl
mov
loop
push
dec
in
jne
aas
dec
lret
movl
mov
out
frstor
aam
sbb
adc
subl
movsl
incb
pusha
aad
xor
mov
adc
pop
rol
cs
dec
adc
cld
push
sti
xchg
movsl
ret
out
lahf
add
enter
pop
push
jp
lea
jge
and
mov
mov
xchg
je
roll
jmp
lea
sub
out
sbb
xor
sub
loope
lret
xchg
nop
jg
je
inc
leave
lahf
mov
aad
adcl
xchg
mov
or
cmpsl
test
fdivs
idivb
lret
fsubl
lods
mov
aam
and
int
inc
test
je
ljmp
jno
adcb
mov
lret
pop
xorl
mov
repz
shrb
jecxz
out
andnps
mov
xchg
xchg
xchg
ror
jns
xchg
int
rcrl
outsl
scas
aas
aaa
xchg
into
mov
or
pop
mov
xor
out
stc
cmp
sub
and
imul
aam
sbb
frstpm(287
xchg
out
jae
xchg
enter
xor
jl
cmp
pop
repz
xchg
pop
xchg
push
jp
clc
or
lahf
jecxz
ror
cltd
cwtl
std
filds
hlt
pusha
fidivrl
enter
jmp
and
sub
test
adc
add
mov
pop
dec
adc
inc
dec
andb
cmpsb
push
sti
insl
int3
mov
loop
cmc
xor
mov
mov
jnp
jo
or
icebp
mov
out
pop
mov
outsl
insb
ficoms
dec
xchg
or
aam
add
ja
cwtl
lds
mov
je
and
adc
pop
fimull
jmp
es
aaa
inc
aaa
push
or
sub
addb
icebp
mov
lret
cmp
jge
sahf
sti
xor
lock
and
outsl
into
arpl
jb
adc
sbb
sub
mov
add
sub
sub
push
cmp
aas
xchg
cmpsl
jae
sub
xchg
sahf
gs
mov
mov
lahf
jno
pop
and
sub
notl
mov
xchg
and
or
add
inc
sub
iret
mov
and
cmp
cli
imul
sub
jp
out
mov
ret
sbb
xlat
ret
and
and
lahf
ret
loopne
dec
push
push
pop
cmc
rol
mov
sbb
pushf
repz
jge
cmp
sub
insb
rcll
je
adc
jno
in
pop
add
insl
inc
ret
repz
imul
scas
adc
mov
pop
mov
notl
mov
aas
mov
or
js
xor
fcmovne
mov
sub
ds
mov
push
add
inc
in
jne
adc
pop
addb
xor
cmp
in
jno
mov
lea
jae
imul
dec
imul
pusha
xchg
dec
lahf
into
psubsb
insb
and
adc
movsl
mov
add
sub
mov
out
mov
mov
lods
mov
cmp
jo
jnp
mov
mov
mov
ret
lods
xchg
dec
xor
fwait
das
xchg
es
dec
mov
test
arpl
int3
mov
mov
pop
mov
mov
sub
into
push
push
ficomps
or
lods
xlat
sub
gs
insl
dec
adc
mov
xchg
cmpsb
mov
mov
fucom
into
shrl
out
sbb
in
std
fiadds
fdivr
in
xor
or
ja
xlat
pusha
out
jns
jecxz
popa
push
in
xchg
lds
stos
pop
dec
cmc
insb
pushf
pop
lods
in
xchg
mov
add
scas
inc
jb
inc
pop
cmpsl
sub
xor
xchg
shl
repnz
movsb
fs
mull
mov
jge
cli
out
test
out
sarb
es
fldenv
jmp
xor
adc
pop
jg
inc
subb
test
decb
mov
test
and
mov
addr16
mov
fs
call
add
fsub
dec
jl
cmp
mov
shrl
jle
push
out
sub
and
cwtl
mov
xor
lea
or
sbb
movsb
jle
rcll
inc
jbe
in
fcomps
xchg
push
mov
mov
out
dec
fisubl
gs
mov
orl
xor
outsb
out
mov
add
mov
test
mov
cmp
mov
insl
push
inc
pop
cli
movsl
cmp
out
mov
mov
data16
xchg
xchg
adc
or
mov
sbb
pop
aaa
pop
fstpt
adc
jg
icebp
popl
add
xor
adc
mov
push
xchg
xchg
outsl
jg
mov
mov
out
push
mov
roll
push
adc
inc
test
dec
cmp
and
mov
mov
sub
sbb
or
xchg
jmp
cmp
or
inc
mov
xchg
imul
mov
sbb
adc
addl
cmpsb
pop
add
xchg
sub
repnz
cmp
pop
cs
rcl
cwtl
lds
jns
jne
add
pop
dec
jbe
ret
sbb
rclb
sahf
adc
pop
out
aam
cli
cmp
mov
mov
lea
mov
orb
inc
push
and
es
or
dec
jbe
dec
pop
je
adc
add
test
fidivrl
in
sahf
daa
sub
loopne
in
add
hlt
xlat
notb
mov
mov
rorl
adc
push
xor
lods
lds
icebp
jecxz
jge
dec
and
out
add
lods
sbb
jo
jbe
push
pop
jge
jp
je
jbe
inc
fwait
into
jbe
inc
fmull
fcomps
test
adc
es
call
dec
dec
pop
movsl
jle
sbb
mov
std
pushf
push
adc
into
mov
cmp
out
sub
fists
inc
push
fwait
lcall
js
push
cmp
xchg
data16
sbb
movsl
out
outsl
sbb
and
cmpsl
fdivl
call
cs
stos
pop
push
test
xchg
and
inc
iret
fs
stos
dec
xchg
call
push
in
imull
jl
data16
dec
push
insb
in
add
pop
leave
or
xchg
stos
cld
cmp
jle
mov
jecxz
insb
sbb
imul
into
dec
jno
cmp
idiv
pop
and
cmp
addr16
cs
add
into
ss
mov
leave
dec
pop
jg
jae
ja
ror
je
rol
push
mov
out
mov
xor
loopne,pn
adc
mov
incb
cltd
mov
push
xchg
sbb
dec
add
int3
fadd
fdiv
mov
dec
lock
sbb
je
mov
pop
mov
ds
mov
mov
in
mov
or
pushf
xchg
hlt
rorl
dec
sbb
in
js
pop
mov
jg
push
mov
mov
data16
shll
and
out
dec
repz
lock
fsubs
scas
bound
or
mov
mov
lret
imul
int
push
and
adc
lock
out
jne
mov
pop
push
imul
dec
jae
shl
repz
jmp
aaa
add
xlat
idivb
or
push
mov
push
ds
mov
aam
pop
insl
push
xchg
cmpsl
dec
rol
std
test
ja
inc
fcmovbe
mov
pop
fwait
cmpsb
scas
push
mov
push
xor
movsb
jmp
or
jb
pop
out
mov
shll
out
dec
cmpsb
jmp
testb
sub
lcall
jmp
push
notb
xor
mov
shl
mov
ljmp
insb
dec
jecxz
mov
into
or
push
adc
fimuls
int3
adcl
shrl
xchg
jmp
repnz
xchg
xchg
mov
lret
sub
popl
out
int
daa
dec
cmp
ss
xchg
add
ret
jg
jl
add
int3
mov
popa
cwtl
lods
jp
popl
enter
mov
roll
lcall
out
sti
push
or
sbb
push
inc
cli
popf
fs
mov
inc
fdiv
js
inc
lret
mov
adc
fadds
outsb
lds
xchg
or
jns
jmp
or
sub
test
mov
je
subb
sub
test
mov
add
cli
scas
das
imul
addr16
movsb
sub
cmc
arpl
mov
shl
das
aad
fdivs
lret
inc
in
mov
repz
push
push
adc
cmpsl
shl
in
ss
mov
cmp
rorb
dec
xor
push
addb
popa
negl
out
mov
cld
push
pop
xchg
xor
lods
push
std
xchg
rolb
scas
cmp
jmp
in
mov
into
ljmp
lods
dec
popa
lret
sbb
lret
xor
in
mov
pop
das
rcl
sub
sarb
sub
and
dec
into
pop
inc
fistps
dec
push
cltd
mov
jle
adc
sbb
adc
ljmp
jmp
sub
or
pop
jne
test
lret
lret
inc
rclb
push
xchg
dec
mov
icebp
cmc
mov
jp
sbb
movsb
and
stos
gs
and
xchg
adc
sub
lods
cmp
iret
pop
xchg
inc
popa
mov
jo
repz
jne
push
imul
aas
mov
xchg
pop
popa
jmp
sbb
js
xchg
jbe
aam
pop
adc
mov
pusha
dec
hlt
jae
ds
mov
ficoml
addr16
pop
lret
ret
dec
adc
cwtl
mov
scas
push
lock
stc
push
cmp
fs
jnp
lds
flds
gs
cs
xor
xchg
mov
popf
cmp
xchg
xchg
or
cmp
ja
dec
icebp
or
adc
pushf
cmp
imul
mov
cmc
or
xchg
dec
inc
push
std
pop
mov
dec
inc
shll
jle
fcompl
jne
bound
in
int3
mov
sub
pop
out
pusha
je
out
aas
adc
dec
push
enter
fsubl
decl
jg
cwtl
jl
aas
push
loop
pop
or
sahf
push
jmp
rcl
dec
rcl
xor
js
aaa
repnz
mov
mov
shrb
cmp
pop
and
outsb
test
mov
repz
pop
daa
adc
lret
in
pop
ret
sbb
mull
inc
xor
icebp
jecxz
sbb
or
fnstcw
je
sbb
pop
cmp
dec
pop
mov
nop
xlat
cwtl
jnp
int3
aas
or
stos
adc
jmp
mov
sub
bound
test
jge
cmc
incb
jno
dec
pushf
fbstp
push
data16
or
xor
mov
lods
mov
mov
sahf
push
fwait
popf
test
icebp
ds
mov
inc
out
jb
jne
test
dec
enter
aaa
inc
sbb
cmp
or
cld
out
mov
or
xlat
xadd
addr16
inc
mov
dec
fsub
xchg
fdivl
cld
dec
cmp
xor
sbb
int
lret
mov
or
or
xor
aaa
xchg
cmp
test
mov
fiaddl
xchg
test
jnp
fst
call
sti
gs
and
xor
fdivs
xchg
iret
or
ss
test
cli
subb
inc
enter
or
dec
ljmp
cmp
inc
mov
es
pop
nop
sub
xchg
aas
adc
and
inc
pop
scas
add
sbb
adc
inc
gs
leave
dec
or
push
push
sbb
outsl
mov
roll
mov
mov
dec
add
dec
mov
push
jmp
fwait
loopne
xchg
icebp
dec
insl
mov
faddp
into
pop
lret
and
mov
xchg
aaa
shlb
mov
dec
or
mov
sbb
jle
aaa
pop
repnz
push
lods
lods
adc
leave
or
jo
cld
in
iret
test
cmpsl
ret
pop
imul
idivb
rcl
adc
pop
or
xchg
jp
jbe
rcrb
int
je
sahf
sub
pop
pop
mov
testb
inc
xchg
cmp
leave
xchg
movsb
jecxz
sub
aad
jae
bound
add
sub
gs
cwtl
outsl
int3
iret
and
loopne
lret
js
jl
popa
sub
int
lret
push
lea
and
xor
push
out
cli
lret
pop
je
mov
out
in
jbe
dec
mov
mov
cmp
fs
nop
xor
xchg
sub
leave
jno
mov
xchg
sbb
stc
lods
cmp
add
leave
and
aas
xor
cmp
push
pop
fistps
xorb
mov
aas
mov
pop
test
xchg
xchg
test
and
xchg
into
fidivl
js
xor
sub
mov
inc
inc
xor
pusha
lds
fdivrl
shl
pop
xchg
fistpl
je
addr16
and
or
fidivl
push
movsb
daa
leave
mov
out
adc
inc
mov
or
insb
mov
xchg
insl
jb
ficoml
push
sbb
mov
pusha
jmp
pushf
mov
push
push
mov
shrb
add
mov
std
iret
cld
adc
cltd
pop
adc
aam
dec
mov
push
data16
xchg
jle
xchg
adc
inc
dec
pop
cmp
test
xor
iret
add
and
or
ljmp
adc
fsubr
mov
xchg
dec
testl
or
in
or
pop
add
xlat
out
mov
in
and
mov
movsl
cmpsb
and
fiaddl
ljmp
xchg
aad
cmp
ret
and
and
arpl
out
cmp
xchg
sti
enter
int
xchg
out
mov
adc
into
std
dec
adc
mov
jae
jo
jns
andb
fidivl
stos
clc
mov
dec
sub
and
iret
dec
out
stc
testl
dec
js
add
clc
ds
jb
lods
sbb
mov
clc
push
in
mov
push
jmp
and
jge
xor
xchg
or
into
mov
data16
pushf
out
push
fdivr
cld
sub
dec
repnz
ds
dec
xor
sti
dec
hlt
iret
xchg
jb
mov
pop
add
xchg
pop
fs
mov
sub
mov
dec
cmp
cs
dec
mov
inc
pop
dec
dec
cwtl
push
dec
addr16
int3
pcmpgtb
lret
negb
push
sub
add
sub
mov
jb
and
push
js
fwait
inc
repnz
xchg
fnstenv
xchg
push
cmp
ficoml
scas
add
pop
mov
imul
sbb
pop
mov
cwtl
adc
jmp
aam
push
pushf
loope
lcall
sbb
hlt
sub
mov
or
mov
xor
cmp
in
test
cs
psubsb
out
pop
dec
nop
jl
outsl
lods
loope
int
lret
adc
ds
adc
xlat
sub
pushf
loop
fimull
jle
out
push
repz
fwait
in
lcall
dec
push
dec
push
addb
and
ret
test
bound
jp,pn
mov
push
and
xchg
xor
adc
xlat
push
mov
mov
fst
dec
add
mov
mov
int3
mov
pop
jnp,pt
rcrb
jp
insl
movsl
push
inc
sub
sub
jle
imul
outsb
jbe
je
pop
call
fstps
ret
imul
aam
das
mov
mov
xchg
cmp
cmp
gs
idivb
jae
jg
inc
es
es
mov
loopne
cltd
push
mov
xchg
fmul
lds
int3
mov
or
mov
adc
dec
cmc
sub
js
add
jns
rcl
filds
mov
cli
and
mov
aad
xchg
in
jns
mov
adc
movsl
lea
in
xchg
adc
adc
jnp
xlat
cmp
sub
pop
test
int
insb
movsl
or
ja
arpl
mov
pop
pop
icebp
imul
jns
das
bound
or
sti
std
pop
imul
inc
cmpsl
mov
lods
jecxz
popa
scas
dec
xor
or
jge
jp
xchg
jno
push
fsubrl
adc
aad
bound
mov
test
mov
fimull
mov
jp
jo
push
xor
xchg
sarb
xchg
push
sahf
cld
push
out
scas
and
jge
push
or
cmp
in
and
pop
in
xlat
icebp
pop
out
adc
jbe
in
sub
les
sbb
cmp
fadds
cld
aad
fisubrs
fdivr
mov
xchg
imul
loopne
loop
lret
xchg
inc
insb
cwtl
mov
sahf
fdivrs
das
xchg
xchg
lods
scas
cmp
jo
cmpsl
lret
mov
jbe
dec
icebp
je
imul
scas
adc
repnz
in
jmp
jg
movsb
and
jp
mov
hlt
aas
inc
xlat
sbb
pop
or
sbb
lret
pop
mov
dec
loop
shlb
fildll
jne
sarb
int
cmp
cmp
scas
jae
mov
test
lods
popf
mov
mov
call
ljmp
add
popa
inc
sbbl
add
push
xor
dec
sarb
xchg
jmp
mov
xchg
xor
fs
imul
lods
mov
mul
scas
push
mov
ror
cmp
int
xor
insl
pop
add
or
outsl
andl
push
jg
mov
adc
and
dec
test
sub
cmpsb
stc
pop
je
mov
test
rcll
sbb
jo
jp
loopne
add
nop
insb
bound
gs
cli
movsl
xchg
dec
add
in
xor
je
inc
mov
jae
mov
sbb
pop
arpl
jo
sbb
xchg
xor
out
sbb
mov
arpl
adc
lret
adc
jmp
add
and
ds
fwait
pop
cmpb
sbb
pop
ljmp
mov
out
pop
push
lret
fdivrl
and
sahf
push
xchg
adc
xorb
and
pop
jg
js
mov
push
jne
dec
maskmovq
or
sbb
mov
aas
and
fidivl
mov
imul
sbb
je
outsl
cmpsl
jne
arpl
pop
fmul
mov
int3
jecxz
mov
sahf
in
jle
aaa
push
cltd
dec
stc
aad
push
mov
push
xchg
sahf
mov
fwait
insb
out
mov
xor
xor
dec
in
cmpsb
mov
lahf
dec
add
sahf
push
and
cmp
das
mov
push
jle
out
mov
xchg
imul
push
dec
ftst
mov
adc
push
je
in
in
lret
push
dec
add
cmp
mov
sarb
std
das
cmp
mov
orb
sub
inc
or
rcrl
xorl
mov
in
scas
xchg
aas
inc
aad
mov
jo
fbstp
shr
dec
into
in
xlat
sub
hlt
stc
sub
add
adc
int3
imul
xchg
add
push
xor
xchg
std
xchg
mov
cmp
repnz
stos
aam
dec
and
fimuls
pop
lods
rcr
push
negb
hlt
add
pop
cmp
mov
mov
lock
push
std
add
bound
decb
arpl
or
cli
dec
outsl
lret
jnp
sub
into
jo
or
xorb
mov
jge
push
jnp
xchg
sbb
mov
mov
imul
dec
mov
pop
out
mov
lods
rol
xchg
nop
add
or
push
mov
xor
push
and
push
mov
mov
push
jbe
inc
loope
aam
jno
repnz
sub
pop
fcoms
lods
lahf
call
adc
ds
cmp
test
idiv
or
mov
dec
jno
pop
fistl
ljmp
sbb
push
dec
enter
stos
add
dec
jg
mov
ret
pop
lods
dec
xor
orb
jle
jbe
mov
dec
into
and
rclb
inc
xchg
dec
jge
out
or
test
xlat
mov
dec
das
rclb
js
mov
xor
mov
shll
jecxz
lret
sbb
leave
int
mov
enter
stos
dec
xor
and
in
mov
mov
xchg
push
rcll
cmp
pop
ret
xor
lods
mov
dec
ss
shr
mov
jne
mov
adc
je
cltd
cmp
out
ds
mov
jp
push
adc
pop
adc
dec
sti
xchg
test
pop
adc
out
xchg
imul
popa
sbb
cmp
push
lret
ds
loope
cmc
ret
and
mov
jge
sahf
add
mov
pop
jno
mov
rcr
dec
add
or
pop
sarl
int
pop
les
push
jnp
xor
leave
lret
in
push
xor
nop
push
adc
arpl
jae
addr16
pushf
outsb
rcl
push
movsb
mov
bound
imulb
pop
add
lods
pop
mov
mov
push
sub
push
cli
aaa
lods
cmp
ror
aam
push
cld
daa
pushf
ret
jmp
out
and
pop
pop
stc
das
or
mov
rol
ja
shlb
fimuls
in
pop
into
mov
aam
push
popf
xor
lahf
sub
in
call
pop
repnz
push
insb
rcr
push
pushf
mov
mov
xchg
mov
or
xor
sbb
jmp
inc
mov
out
pop
jl
lahf
fmuls
shlb
rcl
mov
push
cltd
adc
push
xchg
jbe
dec
inc
les
pop
xchg
int3
cmp
rolb
ds
lea
out
and
icebp
rcl
fsubl
mov
sub
inc
lret
adc
shrl
fmuls
stos
pop
into
xor
int
cld
cmpsl
jle
fwait
shrb
out
shll
lods
cld
enter
push
jbe
inc
mov
sub
cli
cmp
inc
sbb
enter
push
xchg
cltd
outsb
adc
mov
lods
jecxz
mov
enter
jp
mov
cs
push
es
inc
sti
adc
out
and
inc
into
addr16
mov
imul
sub
sarb
mov
cmp
or
dec
pop
test
ret
adc
sbb
loop
push
push
push
cmpsb
hlt
sti
sbb
jg
mov
pusha
mov
in
call
xor
stos
pop
sbb
idivb
or
lods
mov
mov
js
pop
xlat
pop
mov
jno
gs
add
and
fsubrl
aam
idivl
ficoms
pop
test
jmp
rcr
pop
repnz
stos
lods
xchg
fdiv
push
xchg
popf
xchg
sbb
les
pop
pop
popa
cmp
cli
add
jl
dec
dec
insb
push
cmpsl
push
test
xor
rcrl
addr16
cs
jno
mov
mov
ljmp
leave
mov
mov
and
or
cmp
daa
rep
xor
and
mov
in
push
jmp
ja
out
addr16
sbb
mov
fwait
repz
outsb
jbe
into
jmp
mov
outsl
sbb
and
push
jae
pop
gs
dec
mov
movb
or
dec
into
jnp
in
xor
out
dec
movsl
fsubrs
lret
in
jge
pop
das
push
rorb
pop
movsb
xor
std
jle
cltd
sbb
xchg
aam
xlat
pop
pop
int
inc
in
sbb
hlt
xchg
out
push
mov
push
push
icebp
inc
lds
leave
sbb
jo
test
xchg
imul
jge
mov
stos
test
xor
xchg
fcmove
aam
rclb
fildll
int
mov
cmp
push
sahf
push
cwtl
ss
sbb
or
popf
inc
push
inc
cli
lea
push
jne
xor
outsl
jbe
gs
push
dec
out
jnp
rcll
leave
xlat
mov
jo
imul
rcrb
mov
sub
add
fcmovnbe
mov
in
xchg
movsb
inc
fwait
pop
aaa
rorb
inc
and
dec
mov
and
loopne
mov
dec
movsb
js
push
xchg
add
daa
sbb
pop
cwtl
push
inc
mov
repnz
stc
subb
jbe
inc
ret
insb
iret
pop
pop
loope
cltd
pushf
adc
test
mov
popf
insb
lret
je
lahf
cmpsb
outsb
jecxz
xchg
pop
mov
push
cmp
pop
inc
xchg
outsl
stc
jg
sbb
mov
sti
cmp
cmp
outsb
sbb
call
in
sarl
scas
bound
je
pop
add
out
jmp
adc
dec
pusha
mov
add
arpl
adc
push
push
push
out
fdivs
jne
repnz
movsb
out
adc
pop
leave
invd
aad
jmp
imul
dec
iret
loop
cltd
add
fistps
negl
inc
mov
inc
mov
xlat
xchg
mov
iret
in
movsl
arpl
pop
jne
lret
nop
movsb
mov
xor
out
jae
rcrb
push
sub
cmpsb
jge
mov
lahf
cmp
fsubrp
push
dec
jno
sub
xlat
pop
fstpt
push
ja
xchg
lods
pusha
dec
mov
sbb
add
push
push
push
out
les
xchg
xlat
cmp
adc
xchg
add
into
outsb
adc
inc
out
push
mov
aam
insb
pop
bound
push
orb
data16
xchg
rol
sub
xchg
dec
sarb
int
mov
and
mov
xchg
nop
loopne
or
cmp
pop
mov
ss
cli
xchg
out
or
xchg
in
sub
rorl
mov
xor
daa
push
std
sub
sub
jae
cmp
nop
cmp
test
inc
xorb
push
sbb
lcall
call
mov
adc
lret
gs
icebp
cmpsb
notl
outsb
sbb
testb
and
mov
lds
popf
mov
ret
xchg
ds
jle
aaa
mov
mov
fwait
adc
adc
movl
into
adc
cli
gs
popa
nop
sbb
mov
jbe
or
mov
pop
mov
mov
sahf
imul
inc
adc
loopne
add
in
insb
lcall
mov
mov
icebp
add
imul
inc
mov
or
ret
mov
outsl
insb
cmp
js
addr16
imul
gs
dec
repnz
div
jl
ret
inc
stos
jno
rcrb
inc
rorl
test
loop
adc
sti
out
cli
leave
add
dec
xor
fs
pop
sub
sub
push
lods
sbb
push
push
jno
mov
jg
inc
and
and
imul
or
movsl
pop
xchg
shrl
fldcw
gs
lcall
test
cmp
sub
mov
lds
aaa
out
xchg
cmpl
or
mov
cmc
jg
and
iret
cltd
jbe
out
mov
mov
in
test
xchg
outsl
cld
lods
cmp
test
and
ret
je
rcrb
ja
jl
ds
test
dec
mov
xchg
dec
sbb
xchg
mov
in
pop
orb
mov
test
clc
lods
into
jo,pt
loope
adc
push
fwait
pushf
xchg
mov
sub
test
pusha
xchg
and
in
out
leave
sti
jb
inc
mov
push
mov
xor
mov
sub
test
xor
es
scas
or
mov
push
cmp
sub
stos
pusha
jae
pop
mov
les
sub
pop
cmp
jmp
je
and
clc
outsl
add
push
mov
xchg
inc
xrelease
out
bound
ja
test
push
xor
push
adc
stos
shll
cmp
mov
mov
cs
das
loopne
xchg
xor
test
scas
pushf
mov
and
fdivr
sbb
or
js
inc
call
ja
jne
mov
inc
ss
stos
outsb
mov
in
lea
pop
push
je
fists
jl
mov
pop
sbb
push
das
and
repz
jo
fisubs
pop
mov
frstor
rep
lds
lods
das
dec
pop
cmp
mov
adc
ds
notb
sub
push
jmp
loop
jne
cmp
loopne
xor
data16
or
scas
rcr
add
cltd
pop
inc
cmp
out
jnp
sti
jno
jmp
jp
xchg
mov
insb
test
testb
add
xchg
xchg
pop
into
enter
ret
sbb
fcoml
xor
jl
fistpll
aam
cmp
adc
adc
or
addr16
into
lea
and
ffree
jbe
pop
push
aad
xchg
pop
xchg
xchg
test
lret
dec
rorb
fs
mov
sahf
jl
insb
or
push
lcall
mov
push
aaa
int3
cmp
fs
pusha
scas
fmull
pop
mov
stc
cld
or
xchg
lock
pop
rol
int
xchg
jmp
aas
in
mov
call
jg
lcall
and
add
movb
faddl
aad
dec
push
andl
outsb
into
adc
adc
inc
pop
out
gs
mov
adc
xlat
pop
or
int3
dec
jmp
inc
mov
inc
and
test
scas
repnz
pop
sub
jbe
dec
into
mov
and
cmp
lret
jns
sbb
arpl
push
jmp
mov
aam
dec
imul
data16
arpl
adc
or
hlt
xchg
adc
pop
adc
xchg
aaa
js
dec
fs
sub
cwtl
sub
gs
fdivrl
js
ljmp
cltd
scas
dec
and
stos
cmpsb
push
push
sub
pop
dec
ret
mov
push
mov
inc
adc
mov
lds
pushf
inc
pop
fsubr
insb
push
mov
jbe
sub
popa
lds
stos
jae
cmp
push
sub
xchg
xor
dec
push
int
add
mov
sbb
xchg
dec
jmp
fstl
subl
shlb
fbld
xor
sbb
dec
in
fstps
mov
xchg
addr16
ficompl
or
call
and
push
jecxz
adc
in
and
movsb
and
xchg
sub
data16
jne
sub
or
or
outsb
call
push
or
iret
adc
ret
push
mov
idiv
xchg
int
push
test
mov
dec
cmp
dec
shlb
outsl
add
repz
jnp
cld
cmp
insl
fistl
push
sarl
sub
xchg
jle
int3
popf
orb
dec
inc
das
sub
inc
sbb
pusha
push
add
cmpsb
cwtl
mov
das
int
out
repnz
and
jmp
sub
push
and
mov
out
outsl
pop
cmp
pop
hlt
cmpsb
add
pop
mov
out
fmuls
xlat
gs
ret
jmp
cwtl
imul
lods
push
xchg
or
in
mov
mov
aam
cli
das
stc
das
and
add
lret
or
popa
int3
pop
in
xlat
jns
shufps
dec
imul
sbb
scas
ljmp
ss
cmpb
shlb
mov
dec
jg
or
sub
in
fcompl
xchg
xchg
sbb
aam
les
sbb
dec
shrl
out
mov
xor
push
scas
xchg
sbb
stos
aaa
lret
cld
mov
pop
out
inc
add
je
outsb
rcl
loopne
clc
push
or
adc
cmc
cmpsb
pop
ret
rcrb
fwait
lahf
pop
stos
mov
sub
cmpl
jle
pop
pop
push
and
inc
outsb
cwtl
push
add
lds
xchg
loope
push
lods
mov
fimuls
sbb
sbb
xchg
inc
dec
test
ds
scas
push
in
ror
hlt
ss
movsl
lods
cmp
mov
fldt
rcrb
pop
cmp
mov
inc
das
sahf
sbb
mov
mov
ja
dec
or
subl
daa
lcall
cmc
rcr
add
mov
or
icebp
negb
pop
xchg
cmp
inc
and
outsb
sbb
inc
add
lret
cmpsl
xlat
sub
std
insb
insl
rol
mov
es
mov
ret
and
dec
mov
mov
mov
and
sahf
popf
mov
ret
xor
aad
inc
ds
adc
mov
pop
fisttpl
mov
ror
jp
mov
and
fadds
mov
xchg
pop
rorb
cmp
jmp
inc
push
xacquire
mov
mov
clc
pop
add
jg
inc
add
jecxz
or
in
and
cmpsb
mov
or
scas
adc
push
xor
inc
int
mov
sahf
push
or
sub
shll
inc
add
pop
scas
adc
jle
xchg
fucom
cmp
inc
mov
cwtl
cld
or
push
and
pushl
fildl
adc
mov
adc
test
out
ja
push
xor
lds
dec
cld
pushf
dec
dec
cs
int
push
fstps
ljmp
in
lahf
and
xrelease
pop
or
mov
push
repz
pop
or
inc
xchg
cmp
lods
jb
inc
subl
inc
and
mov
cli
xor
inc
mov
int
push
ret
cmpsl
shlb
cmp
xchg
push
je
add
int3
dec
inc
aas
xor
lods
inc
shl
or
add
xor
or
repnz
hlt
inc
test
lods
popf
push
xchg
mov
dec
dec
pop
into
push
xchg
mov
xchg
and
mov
lret
pushf
popf
fsubs
mov
add
loopne
shlb
lcall
dec
pop
dec
cmp
hlt
sbb
test
and
cmpsb
sbb
lret
out
inc
jg
and
data16
imul
outsb
insb
in
shll
xchg
out
test
std
imul
inc
out
stc
inc
push
sti
leave
aad
mov
inc
lcall
imul
jbe
xor
jl
xchg
cmpsl
mov
loopne
sti
pop
push
shl
arpl
cmp
in
sub
loope
aaa
adc
cmp
jmp
ret
or
into
jg
into
fwait
jecxz
mov
inc
inc
mov
aam
loop
stos
lea
mov
stos
ja
shl
add
movsl
ret
outsl
rcrb
mov
js
out
addl
and
cwtl
mov
mov
pop
test
leave
cmp
test
loop
into
sbb
cld
insb
repz
ljmp
clc
and
out
pop
cmp
xor
aad
popa
and
cmp
jbe
roll
neg
ja
imul
cltd
test
add
shrl
lock
test
and
push
pop
mov
mov
scas
xlat
jge
outsb
push
adc
xor
xor
aaa
mov
insb
sub
dec
pop
outsl
mov
pusha
jns
xor
dec
std
push
into
xor
mov
mov
push
popa
rcl
in
sbb
stc
fbstp
mov
test
sub
mov
mov
or
and
ljmp
mov
mov
xorb
aad
push
xchg
pop
add
xor
lock
rdtsc
xchg
mov
or
xor
push
mov
mov
mov
mov
jne
xor
in
lahf
inc
mov
inc
in
popf
imul
cmp
out
and
stos
sbb
imul
pop
sahf
mov
mov
push
in
aas
cmp
or
mov
int3
and
std
xchg
out
enter
or
test
inc
scas
cmc
add
push
adc
je
ja
fisttpl
jb
into
out
mov
jle
data16
or
jne
cmp
and
mov
dec
movsb
cs
mov
mov
and
pop
ret
mov
imull
addr16
xchg
into
cmp
mov
mov
lret
xchg
subl
iret
cli
dec
fsubrs
fildl
lret
xchg
fimuls
adc
lock
mov
aad
or
nop
xor
fs
add
in
dec
sbb
test
out
dec
aam
or
notl
mov
jb
add
mov
clc
scas
xchg
jecxz
push
pop
jne
mov
aad
scas
xchg
sub
adc
mov
outsb
add
cmp
inc
jmp
mov
cmp
not
dec
xor
lods
or
and
sbb
mov
push
in
cmp
and
shr
sbb
cmpsb
mov
je
loop
test
mov
movsb
xchg
adc
xchg
pop
lret
and
adc
jb
pusha
mov
sbb
push
cli
bound
aas
fucomp
je
cmp
mov
in
adc
stos
mov
sub
js
les
lahf
xchg
pop
inc
cltd
inc
dec
jl
test
jb
mov
xchg
in
std
mov
loopne
jle
incb
and
lahf
inc
imul
sbb
movlps
inc
adc
inc
xchg
cmc
cli
outsb
ret
out
push
mov
lea
mov
adc
push
xlat
insl
add
pushf
xchg
les
in
sbb
mov
cli
cld
aam
or
xor
ljmp
sub
xchg
test
lahf
sbb
jp
shrb
cmp
jae
les
jle,pt
shll
inc
test
mov
arpl
icebp
ja
mov
imul
mov
mov
lods
mov
stos
mov
imul
mov
fs
sti
jnp
adcl
or
cmp
or
in
maskmovq
divl
xor
out
out
mov
sub
push
inc
sbb
daa
push
lret
inc
pop
out
enter
loope
ja
push
push
and
in
xlat
ficomps
mov
pop
addr16
adc
out
sub
xchg
xor
inc
cmp
mov
add
push
scas
push
jne
repz
sub
jne
fsubrs
inc
push
movsb
dec
sbb
scas
mov
int3
mov
daa
jmp
shlb
pusha
inc
sbb
test
pop
cmpsl
cwtl
data16
and
adc
ja
outsl
sbb
jns
dec
adc
inc
jl
shll
clc
push
push
sub
mov
and
sub
inc
push
aaa
nop
xlat
mov
clc
push
stos
dec
mov
mov
push
outsb
add
mov
addb
cmc
jmp
popa
push
pushf
jns
test
jnp
shll
stc
dec
mov
mov
add
push
xchg
and
push
xorl
inc
or
jp
je
sub
aam
add
inc
pop
and
mov
test
mov
aam
fxch
test
cmp
sub
mov
lcall
and
ljmp
sbb
dec
mov
pop
int3
outsl
xchg
push
xorl
stos
jnp
imul
out
and
lods
ficoms
adc
test
pop
inc
mov
movsl
stc
fmuls
pop
mov
mov
mov
faddp
jbe
cmp
sub
sub
dec
rcrb
movb
insl
jae
mov
jnp
xchg
and
cmp
addl
js
sub
and
sbb
pop
dec
adc
adc
mov
xchg
cld
add
mov
sub
ja
hlt
mov
aad
push
loop
mov
jg
xchg
popa
dec
inc
adc
scas
jp
adc
adcl
adc
clc
shll
cmp
test
das
addr16
adcb
and
add
stos
test
or
insl
imul
enter
push
gs
ret
push
pop
jae
fwait
mov
jbe
sub
sbb
xor
xor
dec
and
jnp
dec
scas
fmuls
sub
xchg
cltd
lcall
mov
xchg
test
test
aas
sub
dec
add
adcb
frstor
call
fnstsw
rorb
dec
mov
inc
and
je
ss
and
push
mov
test
js
jbe
pop
lds
shlb
xchg
ljmp
inc
push
pop
ret
aam
mov
in
pushl
cmp
popa
mov
je
xlat
push
in
jle
arpl
and
fcomip
pop
repz
imull
push
arpl
cmp
addr16
xchg
xchg
test
mov
mov
mov
lret
test
fwait
jbe
pop
jg
fsubs
stos
dec
push
push
jne
or
pop
inc
aas
cmp
xchg
mov
bound
cmp
push
xchg
out
inc
add
sbb
pop
out
inc
jg
into
ja
add
jne
inc
fisubs
icebp
and
cltd
push
mov
cmp
cld
adc
outsl
cmp
pop
out
sbb
andl
jle
cs
pusha
outsb
mov
mov
cli
or
sbb
inc
sbb
test
xor
scas
sar
ss
adc
sahf
jno
jbe
addr16
cs
pop
xchg
imul
sbb
push
or
xor
lret
jbe
jno
xor
roll
jg
call
push
psadbw
add
fiadds
or
movb
sahf
mov
cmpsl
xor
scas
mov
xchg
pop
stos
call
ret
adc
fisubrs
sbb
cld
test
mov
scas
cmp
std
bound
lahf
dec
xor
pop
stc
loopne
mov
pop
in
sbb
sub
jmp
js
stos
ds
push
and
popa
orl
push
and
jne
jge
sbb
xchg
cmpb
jbe
rcl
and
adc
cmpb
lods
cmova
mov
jg
add
add
dec
xlat
or
stos
adc
xor
call
mov
test
inc
jle
push
sahf
xchg
outsl
cmp
or
adc
fld
mov
fbld
sbb
mov
fwait
mov
js
cmc
mov
int
pop
or
mov
sbb
ss
push
sub
ljmp
pop
mov
dec
imul
dec
adc
shrb
mov
adc
cmpsl
jns
sub
xchg
sub
jne
daa
push
cmp
notb
sti
js
shlb
sahf
mov
mov
jne
cmc
aaa
or
xchg
cmp
dec
faddl
or
aam
aas
cmp
pop
pop
jne
loop
orl
sbb
pop
mov
sub
adc
mov
insb
mov
icebp
js
in
add
jb
jbe
mov
out
push
jg
inc
xchg
shl
inc
add
js
mov
jl
les
rcl
std
call
nop
div
shlb
loope
das
fldcw
xchg
xchg
jle
inc
and
out
add
mov
inc
sarb
xchg
lods
mov
mov
pop
rorl
jb
pusha
jl
lea
xor
mov
jae
stos
outsb
adc
leave
and
pop
ds
mov
xor
std
ss
xchg
or
jmp
sbb
aaa
mov
scas
push
jg
ds
loop
lahf
int3
cmpsb
push
mov
js
push
cwtl
call
mov
mov
cmp
add
pop
repz
sbb
cwtl
push
cmpxchg8b
lret
mov
test
mov
adc
sbb
push
adcl
flds
rorb
mov
and
sub
jbe
jp
xchg
scas
cli
dec
mov
push
ret
pushf
push
jp
pop
cmp
inc
add
adc
adc
les
insb
sub
vmovntdq
dec
repnz
dec
xchg
sub
adc
inc
arpl
addr16
add
pusha
add
xchg
push
out
mov
or
cmc
xor
adc
iret
adc
lret
mov
movsb
mov
pop
pop
pop
adc
dec
mov
mov
inc
sbb
enter
mulb
stos
icebp
xlat
inc
adc
subb
out
dec
add
pop
out
repz
cmpsl
cmp
dec
fists
into
jb
je
ljmp
mov
sbb
or
lret
sbb
xchg
push
leave
inc
cmp
insl
gs
cmp
imul
xor
mov
mov
pop
add
daa
xor
inc
mov
jl
mov
or
repz
fisttps
push
rcl
sbb
es
je
jecxz
lret
addb
js
shlb
push
pop
mov
push
push
push
mov
scas
ja
outsb
scas
sub
and
pop
mov
sbb
test
js
mov
xchg
mov
push
mov
mov
scas
push
cmp
lods
insl
xlat
sub
cmp
push
or
mov
frstor
xor
scas
pop
mov
jge
xorb
jecxz
xchg
in
ds
jl
pop
cld
cmc
loopne
int3
push
adc
xchg
shlb
push
dec
int3
jo
adc
lret
test
add
cmp
cmp
push
or
js
dec
pop
out
ljmp
outsb
into
adc
outsl
sarl
cmp
push
pop
dec
adc
or
loop
xor
sbbl
dec
aam
fldcw
jecxz
enter
je
outsl
into
ret
outsl
and
push
pop
jb
mov
out
lea
sti
sahf
adc
fwait
loopne
je
rorb
cmp
jmp
fsubr
rcrl
adc
inc
mov
mov
inc
ret
cmp
or
jne
fwait
cwtl
testb
fdivl
jg
cmp
shll
dec
lock
cmp
cmp
insb
ret
and
repnz
icebp
xor
incl
pop
out
push
adc
dec
in
movb
pop
fdivl
inc
ret
push
mov
repnz
mov
imul
push
insb
les
xchg
mov
popf
sbb
xchg
lea
xchg
mov
sbb
test
or
cwtl
inc
xchg
push
es
and
dec
movsl
leave
push
and
jo
lock
lods
popf
and
adc
ret
out
push
sbb
jge
hlt
lahf
into
daa
mov
jle
es
stos
ss
mov
jns
addr16
jno
jb
enter
cmp
cwtl
lret
and
ds
mov
sti
and
lcall
adc
ljmp
leave
out
nop
sbb
inc
pop
sub
in
rcl
dec
push
es
push
pop
jno
xchg
test
sbb
bound
test
gs
xchg
mov
push
int3
inc
xchg
out
sub
jmp
xor
adc
movsb
arpl
push
cmc
jo,pn
fldt
and
pop
xor
pop
lret
mov
lret
out
mov
lret
sar
ret
dec
aad
ret
mov
jb
int
pop
fsubl
sahf
movsl
in
mov
add
rorl
data16
negb
cmpsb
jnp
icebp
xchg
xchg
insb
aam
clc
mov
stc
into
cmp
fdivp
hlt
jno
dec
dec
or
movsl
pop
mov
test
dec
sbb
int3
xor
adc
daa
inc
or
mov
mov
iret
into
fmul
cmc
cld
ret
pushf
call
xor
mov
cltd
insl
ja
roll
sbb
mov
pop
repz
cmp
in
pop
js
scas
loop
jecxz
xchg
cld
pushf
push
sub
and
add
nop
movb
dec
enter
fnstcw
aad
popf
dec
mov
out
inc
fnsetpm(287
enter
xor
jl
jge
das
push
fs
shrb
jle
push
mov
aad
pop
jno
mov
std
rcrb
iret
mov
xor
dec
movsl
jmp
sti
xchg
nop
movb
or
rorb
lds
imul
dec
ficompl
rcl
pop
jle
subl
adc
lret
mov
in
cli
rolb
and
xchg
repz
enter
int
out
scas
icebp
jge
arpl
sbb
imul
pop
and
daa
xchg
loop
stos
int3
stos
mov
jle
addl
pop
push
xchg
sbb
int
push
mov
roll
jo
or
popf
aaa
or
jmp
mov
mov
cli
in
movsl
xor
adc
cmp
push
lret
mov
mov
movsl
dec
ficomps
ret
mov
mov
xchg
lds
pop
mov
xlat
add
adc
mov
or
pusha
and
mov
mov
pusha
xor
out
mov
cwtl
sbb
lahf
pop
sbb
ja
mov
or
icebp
or
jge
inc
or
xchg
cs
lea
sti
dec
mov
lret
push
add
pop
and
pop
mov
inc
mov
repnz
mov
rcll
xor
adc
or
outsb
pop
xchg
data16
lret
jo
sti
or
sbb
sbb
adc
insl
lret
lods
sahf
xchg
jno
xchg
sbb
xorl
sub
pop
imul
mov
pop
rclb
ret
std
cmp
jge
xchg
aas
lret
cmp
xchg
add
or
sub
enter
or
lahf
jmp
jbe
mov
lret
mov
xchg
orl
jnp
jp
sbb
push
aam
cmc
xor
jmp
call
outsl
lock
inc
iret
xor
in
sub
jmp
adc
shll
enter
push
or
inc
xchg
arpl
adc
lret
push
lea
cmc
enter
vcvtsi2ssl
xor
mov
lea
rcr
insb
imul
inc
fistpll
cmc
dec
xor
push
andb
mov
ja
repz
sbb
int3
data16
bound
movsb
test
mov
fdiv
popa
scas
mov
adc
add
inc
dec
push
sbb
ss
insb
xchg
xor
scas
pop
xchg
jnp
push
push
push
out
lret
push
inc
cld
cmp
jg
adc
inc
lahf
enter
cmp
jae
insl
dec
xchg
xor
mov
lock
and
inc
pop
add
adc
test
jns
xchg
adc
or
add
ss
ja
mov
adc
repz
sub
sbb
cmp
and
out
flds
daa
fldl
out
xor
dec
mov
push
fdivs
adc
push
lods
inc
outsb
jp
aad
dec
rorb
ljmp
pop
fnstenv
adc
stos
cmpb
sub
xchg
xchg
xchg
js
cmc
shll
inc
add
pop
mov
daa
int3
sub
scas
adc
movsb
aam
mov
rcl
mov
ja
shl
push
adc
inc
je
mov
xchg
aad
int3
inc
cmp
xor
mov
enter
push
jl
lea
push
lods
jne
or
cmp
scas
iret
call
inc
sbb
je
outsb
adc
decb
lcall
jae
pop
bound
movsl
mov
out
jae
push
icebp
dec
es
xlat
push
cmpsl
dec
out
mov
pop
sub
decb
nop
add
clc
lds
or
rcr
sub
bound
inc
xor
popa
cs
aaa
sbb
loop
outsl
sub
sahf
ja
fcom
xor
data16
loopne
pop
jle
das
and
mov
pop
sahf
in
xchg
data16
jnp
outsb
dec
xor
pusha
adc
mov
test
and
dec
out
and
xor
push
jb
cmp
mov
and
push
aad
sbb
add
mov
call
mov
js
in
nop
dec
jno
push
mov
rep
jg
push
mov
inc
jno
imul
mov
ds
jmp
aam
int3
dec
shlb
imul
lods
push
or
out
bound
jb
jmp
lods
lods
push
out
jmp
scas
popf
fcoms
mov
push
inc
jb
mov
inc
in
pop
sub
rcr
scas
adc
or
push
push
addl
push
xchg
jno
popa
into
ds
sbb
xor
pop
mov
mov
aad
pop
int3
mov
inc
out
jbe
xchg
dec
out
xlat
xchg
mov
push
mov
xchg
or
fs
jmp
xor
sub
rcl
push
add
shll
fdivrl
xor
rcrb
jnp
mov
pop
out
mov
cmp
add
in
xor
inc
mov
rcrb
xor
or
lock
jns
push
cmc
sub
jg
jp
jbe
sub
xor
inc
inc
xchg
jle
test
loop
in
xor
pop
movsl
sub
or
dec
aam
iret
dec
dec
and
jne
xchg
aaa
sbb
sub
inc
ret
xor
pusha
inc
nop
insb
jb
xor
mov
jge
mov
imul
mov
adc
sub
or
sahf
mov
jle
push
sbb
std
cld
mov
push
adc
mov
jbe
fisubrl
mov
cld
mov
cmp
mov
and
out
push
jecxz
pop
leave
pop
inc
enter
xchg
add
sbb
xchg
cs
and
popa
out
scas
lret
fldenv
push
inc
inc
push
aam
mov
adc
popa
xchg
sub
mov
jecxz
lret
mov
cmp
xor
not
pop
mov
pushf
add
mov
and
ja
push
lret
sbb
shl
fwait
dec
xor
push
add
inc
or
es
out
bound
aam
rolb
data16
jge
adc
jmp
sbb
mov
insb
or
scas
outsl
inc
pop
mov
pop
shl
jl
lcall
sahf
test
jae
daa
aas
mov
inc
push
add
pop
adcl
mov
fidivl
scas
int3
imul
pop
stos
dec
mov
incb
nop
mov
fsubs
cltd
bound
call
dec
jge
mov
jbe
cmpsb
pusha
into
aas
dec
pop
push
jo
and
repnz
mov
add
fnstenv
or
hlt
pop
clc
xor
shl
into
shld
int3
mov
lock
xchg
arpl
ds
jns
mov
out
lock
xchg
sarl
sbb
movl
mov
rcll
leave
push
push
dec
lret
cmp
pop
push
int3
inc
sub
and
aam
dec
add
test
sbb
subl
in
rcl
mov
psrlq
testl
or
pop
lds
test
in
pop
sbb
lret
or
outsl
das
fsubrl
out
cmp
push
ret
push
xchg
lret
and
xor
jp
stc
jb
push
pop
cmp
aaa
push
sub
out
xchg
shlb
lods
ja
dec
cmp
dec
enter
mov
push
leave
inc
ja
dec
outsb
into
push
rdmsr
sti
dec
dec
fwait
popf
mov
ret
into
gs
jnp
enter
pop
pop
jno
sbb
jo
fs
fidivl
mov
add
adc
lods
or
enter
lods
cmp
leave
cmpsb
mov
push
push
repnz
fs
xchg
insl
pop
in
mov
cmp
push
cs
fistl
xchg
lcall
push
xor
test
push
xor
iret
mov
enter
sub
inc
pushf
sub
rorl
sbb
inc
push
outsb
lahf
lods
scas
gs
adc
jo
or
jmp
push
push
adc
inc
inc
cmpl
popf
gs
repnz
rcrl
or
aaa
stos
dec
mov
jge
mov
shll
fadds
imul
mov
pop
push
jbe
cmp
mov
and
mov
jmp
mov
sbb
out
mov
jmp
pop
add
into
pop
popf
bound
roll
pop
dec
adc
jne
scas
not
xchg
cli
icebp
int
shlb
into
popa
movsl
push
xchg
out
ficoms
push
mov
xchg
mov
lret
lock
cmp
dec
jno
add
insb
inc
movsb
addr16
and
into
stc
xchg
dec
inc
pop
aam
jge
add
aam
cld
popl
or
push
stos
fadds
pop
pushl
dec
push
aas
mov
dec
data16
repnz
cld
mov
dec
shl
test
xchg
xor
gs
xchg
or
fwait
jno
imul
push
or
js
inc
cmp
pop
gs
mov
mov
cwtl
aaa
mov
jp
popf
mov
sub
ja
jns
push
scas
out
adc
int3
shr
cmp
in
adc
sbb
xchg
aad
shll
stos
incb
push
gs
dec
dec
clc
loope
lcall
sub
lret
dec
adc
sbb
or
arpl
or
xor
inc
aam
insb
jp
leave
add
sbb
movsb
fdiv
push
mov
test
scas
and
xchg
inc
mov
mov
repnz
out
mov
add
pop
into
nop
bound
call
xchg
adc
mov
in
and
xor
fadds
pop
inc
add
jo
arpl
ds
xlat
fs
push
jno
cmp
push
adc
push
mov
shlb
fldenv
or
xchg
sub
adc
push
les
xchg
fucom
insl
xor
pusha
loop
fiaddl
fimuls
inc
leave
iret
add
push
xor
repnz
arpl
adc
loope
jnp
orl
bound
cmp
icebp
shll
hlt
leave
add
xchg
adc
mov
dec
int3
xor
cli
lret
scas
cmp
sub
push
imul
push
push
ja
mov
into
cld
mov
jg
adc
je
test
test
dec
or
aad
stos
call
outsb
jmp
jl
dec
adc
xchg
adc
push
fs
add
sti
daa
ljmp
xchg
sahf
push
lahf
cmpsb
dec
movsb
mov
mov
pop
shrb
test
idivb
ljmp
xchg
adc
cmp
adc
sub
pusha
jmp
or
insl
push
lret
sbb
out
clc
xor
cmp
adc
js
jo
pop
int3
stos
inc
sub
xor
dec
popl
movsb
out
lahf
xorb
sbb
pop
rcll
in
adc
je
fwait
cmp
lret
outsb
push
movsb
enter
ret
insl
mov
jns
push
lods
pop
popa
and
fdivrl
dec
mov
int
test
lcall
xor
push
mov
push
cli
push
loope
enter
push
fwait
adc
lahf
int3
inc
cwtl
mov
popf
es
dec
mov
fisubrs
xchg
pop
shrl
movsl
sbb
cmovge
sub
inc
sub
cmc
stos
loope
push
xchg
stc
je
enter
or
xchg
mov
push
dec
clc
jle
push
leave
mov
lret
mov
rol
data16
mov
out
mov
jmp
rorl
cmpb
cmp
jnp
shlb
cmp
xor
xchg
pop
in
xchg
cld
test
shrl
ljmp
inc
out
and
or
mov
imul
or
js
push
sbbl
lahf
data16
outsb
test
inc
and
mov
add
dec
push
leave
cmp
push
mov
mov
aam
ljmp
test
insl
mov
hlt
cmp
out
fnstenv
iret
jb
push
mov
push
sub
popf
jnp
incb
test
into
add
cltd
inc
xor
fcmovb
icebp
mov
adc
out
lret
pop
arpl
aas
pusha
icebp
call
dec
mov
das
sbb
sbb
adc
mov
in
mov
mov
cmp
sub
pop
push
jne
mov
movsb
in
mov
xor
lds
loop
dec
dec
dec
inc
stos
je
clc
mov
stos
push
dec
out
jge
mov
sarb
lea
xlat
outsb
adc
jbe
xchg
mov
pop
inc
jge
stos
add
inc
jns
fists
aad
cld
int3
sbb
or
sbb
je
popf
stos
pop
mov
lret
push
inc
gs
inc
pop
shll
addr16
add
and
fisubrs
inc
lods
cmp
jb
xchg
cli
and
je
rclb
xchg
jae
inc
int
cld
lods
dec
xchg
ficomps
stos
fdivrl
jl
je
mov
fst
xor
lret
jne
mov
cmpsl
popa
repnz
aaa
sbb
daa
jg
lret
mov
add
stos
push
popa
add
pusha
fs
xchg
mov
lret
js
push
icebp
mov
imul
dec
mov
push
cwtl
push
inc
sub
dec
sbb
cmp
cmc
ss
or
subb
mov
pusha
je
or
push
xchg
mov
addr16
push
ja
das
ljmp
cmpsl
shll
or
dec
pop
mov
sub
adc
lcall
out
inc
xchg
cmp
lret
js
dec
je
sbb
fisubs
imul
xchg
vpunpckhqdq
pop
test
mov
sbb
mov
fcmovne
in
mov
sbb
orl
int3
push
ret
push
mov
fsubrs
pusha
inc
pop
sbb
sub
int
scas
daa
xor
aam
add
negl
xchg
inc
pop
lahf
pop
mov
bnd
cmp
rcrb
jns
and
xorb
push
cmpsl
imul
xchg
es
pop
mov
xchg
sub
dec
sub
mov
xchg
inc
std
dec
jne
jp
sub
push
pop
in
mov
nop
pusha
inc
dec
sbb
mov
test
or
and
mov
mov
lea
or
fstl
mov
fcomps
enter
pushf
and
outsl
es
in
fdivl
ret
push
cmp
std
addl
data16
imul
mov
sti
mov
xchg
mov
xchg
rcl
pop
int3
push
adc
dec
xchg
adc
imul
aas
sub
movb
dec
int3
ret
adc
cmpl
mov
stos
ret
ret
cmpsl
in
push
jo
and
jmp
mov
xchg
imul
cmpsl
and
aad
sarl
divb
dec
xchg
shlb
push
xchg
test
ds
push
test
les
or
in
lret
or
push
imul
dec
popl
mov
int3
mov
add
xchg
fld1
pop
test
hlt
enter
shrl
jae
outsl
jb
clc
retw
cwtl
push
lock
push
jg
aaa
fdivp
je
adc
loop
repz
mov
cmp
ret
fbstp
fdivr
rcrl
jb
fs
cmp
leave
dec
dec
push
loopne
sub
mov
dec
inc
sub
mov
in
out
jae
add
leave
cmp
mov
addr16
and
test
dec
push
push
xchg
jg
xor
pop
jg
pop
mov
movsl
sbb
add
xchg
cmp
mov
insl
shll
int
les
push
out
sub
and
fistpl
aam
lcall
add
mov
mov
testb
mov
cmpsb
jp
mov
ja
dec
in
sbbl
push
mov
jb
cmpsl
ds
aad
lds
mov
push
loop
mov
cmpsb
xchg
test
out
mov
jmp
into
cmp
mov
cmp
enter
insl
leave
lret
sub
movsb
dec
lahf
rcl
fwait
scas
ss
cs
cmp
out
dec
sbb
xchg
mov
movsl
dec
jge
push
hlt
pop
and
aam
and
mov
jb
mov
push
push
shll
pushf
sbb
xor
mov
push
subl
gs
push
jp
into
jbe
mov
pop
rolb
call
mov
adc
mov
push
cmp
rorl
ss
fwait
xor
inc
jbe
dec
data16
push
mov
push
mov
loope
mov
repz
pop
cmp
daa
cli
mov
sub
jp
sbb
xor
mov
test
pop
loop
push
cld
push
sahf
jmp
imul
jne
js
test
or
loope
push
je
pop
into
push
int
movsb
dec
cltd
mov
sub
call
mov
jg
movsl
xor
xchg
xorl
pushf
dec
mov
mov
push
aas
xchg
outsb
add
lods
mov
mov
or
adc
or
inc
lods
sti
faddl
inc
jle
push
and
sub
aad
enter
fimull
outsb
push
int3
sbb
lcall
into
sub
jnp
stos
dec
frstor
xchg
push
add
or
mov
mov
inc
das
xor
or
lahf
or
mov
int3
jnp
cmpl
scas
mov
aaa
xchg
pop
push
jno
in
rorl
mov
push
sbb
jns
not
cltd
rolb
xor
and
shrb
bound
jg
out
aam
push
xchg
lcall
mov
inc
push
ss
cmp
sbb
xchg
ds
mov
adc
add
or
dec
mov
xchg
jb
xor
lods
test
sbb
sarb
mov
imul
jg
mov
inc
lds
outsl
sbb
shll
test
leave
aas
out
or
cmc
jne
ret
or
or
pop
ret
stc
cmpsb
mov
and
inc
cmp
ja
clc
imul
mov
out
popa
aam
pop
loop
push
add
inc
outsl
aas
xchg
dec
adc
push
add
or
stos
xchg
inc
jno
into
mov
mov
enter
inc
mov
je
pop
arpl
cmc
clc
icebp
and
cs
rorl
jmp
lcall
ljmp
orl
sbb
sub
das
adc
mov
xor
aaa
cmp
xor
xchg
push
out
in
pop
pop
lcall
adcl
inc
jb
stos
arpl
jmp
pop
sbb
dec
ret
sub
xlat
add
mov
add
int
dec
xchg
and
mov
cmp
rorl
or
cmp
xlat
jns
xchg
les
lds
sti
inc
pop
shlb
adc
pop
adc
mov
and
int
insl
jg
or
dec
mov
imul
inc
js
sub
mull
mov
cli
loopne
out
push
sti
gs
outsb
push
sbb
fwait
adc
lcall
int
and
jne
inc
insb
push
jle
data16
or
sub
loope
xchg
lea
aam
mov
mov
add
sbb
scas
hlt
push
lods
vmovsldup
idivl
mov
mov
mov
fmuls
int
jge
in
or
dec
dec
out
loop
jg
repz
mov
movb
mov
jmp
js
and
arpl
inc
nop
dec
and
xchg
pushf
lret
fmulp
pop
rclb
mov
test
jg
xchg
mov
xlat
lock
shll
icebp
test
pushf
popa
cmp
xchg
add
inc
shlb
stos
cli
arpl
mov
push
mov
imul
push
add
rclb
ret
fdivl
sub
das
addr16
sub
shll
aaa
mov
mov
fadds
fnsave
repnz
aas
jg
movsl
sar
shl
cmp
mov
cmpsl
xor
mov
ret
or
sub
pop
mov
mov
stos
cli
pop
aad
or
movsl
pop
jge
int3
or
adc
repnz
ja
mov
push
fcmovnbe
xchg
ret
lret
movsb
adc
xor
data16
dec
divb
xor
popa
or
pop
xchg
cmp
data16
or
aaa
call
enter
push
repz
jo
pop
out
mov
outsb
mov
in
mov
add
sti
xchg
pop
jns
jno
iret
fcom
adc
ret
sahf
pop
mov
fcmovbe
std
mov
lret
cmp
mov
or
push
mov
or
jg
adc
sbb
or
in
dec
xchg
cltd
xchg
sub
sbb
xlat
xor
push
push
mov
inc
cmpb
les
iret
in
mov
dec
jne
mov
lret
inc
jle
movsb
data16
notl
lcall
lret
push
bound
adc
shr
inc
push
pop
scas
mov
cli
imul
clc
xchg
imul
push
fcoml
sahf
jg
pop
push
dec
out
push
cmp
add
pop
fdivrs
mov
mov
xchg
out
lret
fstps
pusha
or
mov
mov
test
mov
idivb
inc
out
into
mov
cltd
xchg
imul
pop
call
xchg
addl
cld
jge
les
push
imul
mov
sub
arpl
sarb
mov
repnz
das
cmp
in
xor
cwtl
fwait
push
and
ljmp
jns
shr
negb
dec
xor
scas
outsb
xor
sub
add
sar
data16
shrb
mov
mov
jb
sub
jno
cmpsl
cld
into
bound
jecxz
pop
adc
pop
cmp
mov
dec
movsb
xchg
dec
jg
fstpt
lock
adc
cmp
ret
pushf
cld
xor
aas
mov
or
out
int
push
out
jns
xor
sub
ja
push
test
lret
neg
xor
cs
add
jo
dec
inc
lods
fnstcw
clc
loope
mov
scas
shl
test
xchg
inc
pop
mov
mov
fildll
inc
movb
cmp
dec
bound
mov
es
pop
or
jge
mov
lret
jae
popa
xchg
push
loope
sub
int
loopne
mov
lret
rcll
cmp
sub
sbb
dec
lret
cltd
test
shl
xchg
sbb
mov
lods
xchg
xchg
cmpsl
jnp
inc
lahf
or
and
mov
dec
inc
jbe
mov
loop
jns
xchg
sub
vmovsldup
mov
mov
hlt
ret
adc
lret
push
and
lods
sbb
cld
inc
jbe
add
xchg
das
test
xor
mov
xchg
xchg
nop
cmp
jg
pop
mov
dec
add
lock
outsl
subb
cltd
or
or
xchg
cmp
or
push
aas
cmc
rcrb
push
push
inc
into
xlat
or
int
push
int3
fldl
aas
jns
fimull
int3
mov
xchg
add
div
std
scas
mov
cmp
pop
add
adc
out
fisubl
pop
inc
jne
mov
dec
xor
jge
lretw
fidivl
lahf
add
cmp
loopne
push
xchg
dec
addr16
scas
icebp
cmc
sbb
push
mov
mov
hlt
iret
in
mov
xchg
aad
pop
je
or
iret
push
cs
loop
filds
xchg
jns
jg
lcall
xchg
mov
inc
rolb
xchg
cmp
adc
aam
xchg
mov
pushf
xchg
pop
clc
into
jg
pop
xlat
adc
mov
push
bound
rcll
inc
add
pop
jnp
push
xchg
fldl
jno
aad
and
int
sahf
lcall
inc
mov
sub
mov
popa
fcmovnbe
lods
add
mov
imul
je
loope
data16
pop
lock
mov
push
inc
dec
gs
pop
pop
pusha
test
inc
ljmp
fldenv
icebp
add
adc
lods
nop
stos
push
inc
mov
fwait
not
ljmp
pop
movsl
xchg
enter
scas
movsl
xor
dec
lret
test
movl
ret
aad
mov
mov
xchg
fisubs
outsb
subl
test
mov
pop
int3
dec
push
cmp
mov
dec
out
jnp
aaa
imul
pop
pop
adcb
push
cmp
xlat
xchg
mov
cld
call
push
jge
jns
push
mov
rclb
adc
cld
dec
gs
add
cmp
enter
bound
imul
iret
divb
sbb
repnz
xchg
int3
call
stc
ret
psllw
dec
inc
mov
sahf
cmpsl
cmp
popa
mov
sub
lods
jbe
mov
in
push
add
adcl
int
arpl
jl
mov
xchg
gs
repz
xchg
lcall
aas
pop
hlt
rorl
pop
rcl
scas
fcmovne
repz
or
cs
xchg
enter
mov
aas
push
addl
dec
rcll
mov
push
push
adc
xor
call
cmp
push
cmpsl
bound
iret
ljmp
add
xchg
cmp
dec
sahf
xor
inc
rolb
dec
repz
jae
jbe
sbb
stos
out
sbbl
sbb
div
inc
test
stc
cmp
das
cli
mov
xchg
lock
aam
into
or
jmp
xchg
pop
cli
sbb
in
dec
mov
stc
imul
ss
andl
cmp
lods
sti
sub
sbb
iret
sbb
mov
cmp
test
mov
jno
in
pop
and
pop
adc
mov
inc
push
stos
cmp
adc
push
sub
hlt
mov
sbb
cwtl
enter
loop
pushf
aad
iret
xchg
xchg
sbb
fs
mov
dec
ja
push
loopne
add
pop
stc
push
mov
sub
push
dec
out
mov
into
iret
jne
lret
cmp
ds
jb
xchg
cmp
mov
imul
daa
lcall
dec
xchg
cmp
add
pop
jns
rcll
test
int
into
dec
orb
push
xchg
lea
mov
mov
int3
rclb
ret
sub
movsb
lods
xor
repnz
into
jns
arpl
cmpsl
mov
movsl
xor
mov
dec
dec
push
cmp
sbb
scas
xorb
mov
adc
test
jbe
xchg
pusha
arpl
jns
dec
mov
xor
mov
fs
or
ficoml
iret
cmp
xor
in
sbb
rep
push
xor
fbld
pop
in
enter
ror
sbb
xlat
ret
sti
sub
add
xor
pop
jle
scas
mov
or
lret
and
fidivrs
dec
mov
mov
add
ret
in
mov
adc
std
lcall
mov
mov
push
pop
xor
xchg
pushf
fnstcw
or
mov
fistl
push
lock
ss
mov
repnz
inc
sti
dec
mov
test
sub
in
test
into
xchg
jo
rcrl
stc
xor
mov
or
and
js
icebp
inc
cli
or
lods
pushf
aam
popf
mov
pop
adc
loope
cli
adc
insb
sub
sub
push
roll
mov
outsl
orl
repnz
mov
sub
push
pusha
xor
pop
int3
icebp
xlat
in
xlat
mull
lods
ljmp
mov
out
push
std
stos
adc
pop
xchg
incl
push
sbb
dec
and
in
jbe
ljmp
test
push
push
lcall
out
testb
movb
iret
push
dec
into
movsl
scas
mov
pop
insl
fwait
xchg
mov
out
into
xchg
in
adc
loope
mov
fs
repnz
and
xchg
out
jae
mov
rcrb
mov
stc
sahf
adc
jmpw
sysexit
dec
jg
sti
pop
mov
loop
push
test
clc
nop
dec
pop
repnz
xor
sub
decl
lahf
out
sub
or
repnz
aas
xchg
add
add
fwait
mov
pop
icebp
xlat
jb
stc
jecxz
or
xor
cld
xchg
popa
lcall
xor
mov
ret
scas
pop
fnstenv
hlt
xchg
dec
mov
stos
mov
bound
int3
aam
scas
hlt
out
xchg
test
jne
lret
jae
shll
cs
or
mov
aad
outsb
jl
pop
in
or
and
nop
jbe
cmc
mov
loop
mov
jecxz
into
mov
sbbb
fwait
repnz
jmp
rcrb
cmp
add
sub
adc
ret
mov
lret
xor
push
xchg
sbb
xchg
out
insl
push
add
pushl
pushf
std
sub
push
xchg
ret
jge
shl
cwtl
hlt
add
cli
xor
aad
mov
int3
icebp
mov
xchg
lret
bound
clc
test
ljmp
aaa
or
ja
stos
movsl
cmpsb
or
xchg
add
push
into
lahf
cld
cmp
jb
rcl
fsubs
ret
adc
lds
and
sbb
neg
sub
lret
loop
push
cmpb
aas
out
addl
or
fcmovnbe
cmpsl
push
inc
out
or
repnz
and
jbe
mov
imul
sub
pop
inc
mov
je
mov
and
enter
test
jne
jl
mov
out
jbe
fstl
mov
add
test
adc
adc
dec
rol
jge
es
xchg
add
xchg
or
adc
mov
pusha
pop
push
xlat
lret
movsl
shl
push
push
int3
adc
cmpsb
jmp
loopne
repnz
test
jne
mov
jne
mov
pop
xchg
push
out
out
and
add
jge
jns
imul
mov
out
pop
xor
add
dec
cmp
mov
mov
clc
lods
cmp
lcall
xchg
mov
mov
mov
adc
dec
xor
loop
aam
sbb
xchg
cmpsl
and
out
jle,pt
cbtw
inc
inc
cmc
add
insb
out
or
and
pop
inc
rorb
clc
push
data16
test
cmp
sub
jmp
stmxcsr
mov
test
dec
xor
pop
mov
mov
addr16
push
jp
cmp
sti
into
inc
push
jmp
in
test
scas
jmp
stos
dec
push
rdtsc
xchg
push
dec
pop
ja
dec
add
xchg
aam
xchg
shl
into
inc
pusha
sub
inc
adc
and
xchg
insl
popf
movsb
mov
outsb
xor
sub
jnp
out
out
fsincos
fsubrs
insb
mov
mov
mov
jecxz
jne
shll
lock
sub
into
mov
cmp
shrl
sbb
jb
int
xor
mov
xchg
or
fwait
out
mov
aaa
push
push
dec
push
sub
aam
dec
addb
push
sti
inc
add
xor
divb
mov
into
js
push
cmpsl
dec
xchg
push
test
cmp
ds
call
adc
js
and
addr16
push
negl
sub
cmp
sbb
outsl
push
jg
les
scas
jb
pop
sub
cmpsb
add
jl
jne
sarl
jecxz
add
mov
pop
movb
xchg
dec
cld
cmp
mov
pop
aad
iret
mov
aam
std
push
inc
mov
fdivl
repz
cmp
popf
pop
add
fsubs
dec
cmp
and
mov
mov
out
fsubl
pop
sbb
or
push
stos
ds
xchg
jmp
jns
jecxz
sub
addl
aam
xor
jns
or
add
mov
jb
push
mov
lea
xor
rep
hlt
repnz
roll
cmpsl
popa
xchg
mov
insl
dec
xchg
repnz
jecxz
nop
jnp
lret
xchg
sti
fnstsw
adc
lret
test
mov
mov
push
push
inc
sarb
mov
in
test
stc
mov
and
pop
xor
test
test
fcmovbe
and
rolb
dec
call
gs
xchg
daa
dec
mov
test
mov
and
lret
iret
in
push
shrb
bound
insb
push
xor
cmpsl
aad
and
xorb
aam
cld
inc
push
in
sahf
frstor
or
mov
jae
ret
fadds
mov
cmp
mov
or
call
adc
ror
fbstp
int3
mov
cmp
xor
pop
aad
xchg
cli
xorps
adc
std
mov
mov
out
jne
adc
mov
cmp
and
mov
xor
push
sub
cmp
dec
sbb
out
mov
mov
inc
sbb
push
mov
faddl
mov
dec
push
pusha
subb
pop
je
adc
sbb
adc
add
out
or
sarb
sbb
push
xorb
cld
mov
aas
jle
sub
xor
rorb
lods
push
mov
fbstp
imul
mov
scas
push
loopne
mov
pop
out
enter
push
or
cmp
mov
xlat
shr
out
pop
jg
test
loop
cwtl
out
stos
push
push
mov
enter
sub
adc
sbb
dec
lods
stos
mov
dec
rcrb
dec
adc
jmp
aas
arpl
ret
movb
lret
and
arpl
jecxz
out
cmpsl
pop
cmpl
pop
adc
imul
scas
xchg
jmp
test
out
dec
adc
add
sbb
mov
xor
into
pop
pop
test
cmpl
sub
jge
add
mov
dec
mov
xchg
out
and
dec
adc
push
fimuls
xchg
push
mov
int3
cmp
cltd
mov
adc
and
cmp
test
in
lret
mov
pushf
inc
and
mov
inc
jmp
mov
jns
push
push
iret
repnz
push
xor
cld
lret
jns
addl
icebp
leave
aam
adc
mov
outsb
rcrl
mov
into
ror
adc
out
imul
mov
cmp
sub
clc
xor
or
pop
or
sbb
scas
sbb
jno
lds
xor
data16
or
adcl
adc
xor
jbe
insb
int3
pop
xchg
imul
jo
dec
sub
jmp
cmc
mov
mov
test
or
popf
mov
push
test
mov
rcrl
xchg
stos
in
jbe
adc
in
aad
imul
xor
push
xchg
incb
enter
ret
or
aam
shl
rorb
sbb
idiv
xor
push
ja
sahf
mov
lret
add
stos
filds
fstpl
imul
cmp
stos
int3
inc
pop
add
cmp
into
negb
xchg
mov
mov
pusha
jmp
out
sub
sahf
nop
fnsave
push
dec
mov
and
rclb
mov
enter
jne
inc
lahf
inc
fidivrl
pop
mov
lret
aas
xchg
leave
add
adc
mov
adc
xrelease
das
push
ljmp
out
insb
jl
inc
sarl
sbb
mov
cmc
inc
or
outsb
aad
push
negb
pop
mov
dec
js
mov
addr16
into
dec
cmp
mov
cmp
mov
cwtl
loopne
pop
repz
out
imul
enter
adc
xchg
fisttps
push
mov
cmp
mov
or
outsl
fiadds
xchg
in
cmc
inc
out
jmp
jo
out
test
movsl
imul
mov
fcmovnbe
pop
lock
sub
iret
mov
ds
stos
in
xchg
insb
pop
push
shl
lret
enter
mov
ret
jp
nop
pop
push
mov
enter
movsb
arpl
xor
inc
or
lds
mov
xchg
aad
loop
stos
mov
cmp
xor
xor
mov
or
sub
enter
or
test
adcl
and
in
push
into
iret
divb
or
shll
or
fstl
ja
es
fisubrs
push
inc
scas
cmp
rcl
mov
dec
push
xor
fimuls
fimull
push
in
lret
subb
stos
adc
popf
sub
aas
xabort
mov
test
dec
fwait
call
xchg
fiaddl
cmpsl
outsl
push
sub
ficoms
pop
push
in
dec
mov
or
cwtl
and
mov
xchg
mov
shlb
mov
sub
por
xchg
in
pop
shll
mov
add
jmp
aas
loopne
or
jmp
into
pop
cmp
pushf
add
stos
jb
std
push
cwtl
mov
jp
outsl
push
add
ds
push
mov
dec
cwtl
imul
testb
loop
xchg
xor
fdiv
loopne
nop
in
dec
jmp
hlt
xchg
lahf
outsb
movsl
inc
jecxz
sbb
inc
rcr
push
lret
and
fadd
adc
add
movsl
ret
je
in
test
fldl
or
dec
cld
icebp
out
and
inc
insl
cmpsl
lods
aaa
xor
and
scas
jb
add
jbe
inc
cwtl
pop
cmpsb
mov
lods
or
movsb
sub
pop
clc
xchg
inc
cmp
aad
outsb
push
shrl
pop
mov
cltd
iret
pop
or
aam
int
ds
push
mov
mov
out
outsl
in
lret
idivb
repz
xor
pop
stos
roll
ljmp
lods
data16
cmp
xchg
inc
and
sub
xchg
inc
push
dec
daa
lock
stos
rcrl
xchg
push
out
mov
mov
int3
sub
mov
repnz
cmp
mov
pusha
int3
daa
out
pop
inc
fcoms
jmp
and
push
les
push
cs
add
imul
cmp
inc
fucom
and
sahf
test
mov
ret
fstps
mov
dec
cmp
iret
not
pushf
repz
adc
cwtl
jnp
pop
add
pop
outsb
mov
stos
fs
cli
lahf
ret
ss
mov
mov
stc
iret
rorb
sub
out
movsb
loopne
sbb
push
mov
and
cwtl
test
ljmp
cmp
iret
adc
lcall
mov
fbld
or
mov
mov
in
or
cmp
movsl
push
iret
or
movsl
sub
pusha
stc
mov
out
or
call
dec
fwait
push
dec
insb
pop
dec
cmpsl
mov
mov
int3
jge
adc
daa
add
pop
pop
in
mull
fiadds
sub
sbb
andb
imul
or
pop
sub
fdivrs
pop
mov
mov
lahf
shrb
xchg
push
repz
and
sub
mov
or
and
push
fsubrs
popf
fisttps
sbb
sub
inc
mov
mov
xchg
call
imull
add
mov
and
inc
and
xchg
addl
repz
hlt
mov
popa
xchg
lds
jge
aas
pop
in
push
rep
sub
xor
aaa
icebp
mov
push
popa
dec
cmp
aad
inc
sbb
test
ret
jbe
in
int
mov
mov
repnz
push
imul
push
fsts
cmpsl
ud2
inc
mov
shr
ret
push
lock
adc
das
xor
ja
or
lods
data16
sbb
inc
mov
repz
sbb
nop
adc
push
loopne
cmpsl
fcom
mov
test
pop
notb
sbb
or
ja
cmp
cmpsb
push
movsl
push
imul
into
cmc
add
iret
lds
cmp
lea
inc
and
pop
pop
jae
xchg
mov
or
hlt
sub
test
rcrl
xor
or
out
imul
cmp
or
xor
test
mov
shrb
and
data16
iret
pop
sahf
sub
fcomps
push
call
nop
push
out
xor
loopne
fcomps
mov
mov
das
out
jnp
mov
mov
and
and
leave
and
test
call
add
or
imul
mov
cmp
jbe
out
int
daa
popf
or
fcomip
push
mov
sti
hlt
lahf
pop
push
inc
out
pop
out
popf
inc
fdiv
loope
add
sti
ja
fcmovnb
dec
mov
cld
imul
enter
dec
xor
lds
cmp
or
dec
pop
es
lcall
push
sbbb
mov
pop
cmpsl
gs
outsb
cmp
rcrb
sub
jns
out
stos
sub
xchg
jecxz
mov
adc
faddl
dec
aas
sbb
int3
call
push
popa
mov
or
push
add
pop
rcl
inc
pop
scas
mov
jp
out
shlb
xchg
fdivrl
add
jo
arpl
bound
mov
nop
pop
sbb
fists
fcomps
inc
stos
imul
dec
adc
loope
pop
add
jg
lret
xchg
stos
popf
sub
dec
fs
and
add
xor
xchg
gs
mov
fsubs
sbb
xchg
add
fwait
in
into
sub
sub
push
pop
aaa
ficoml
icebp
add
adc
or
test
cmp
cmp
ret
and
ret
push
xchg
lock
adc
mov
mov
lret
lods
jle
dec
jae
push
and
dec
mull
repz
test
fst
jl
cli
fs
mov
push
ret
inc
data16
pop
fwait
cmc
inc
aaa
rcll
leave
ja
and
cmp
std
mov
sbb
xor
pop
mov
dec
or
cmc
mov
push
int
jae
mov
xchg
mov
cmp
jb
iret
pop
mov
pop
add
xchg
push
dec
cltd
cli
stos
jb
mov
into
fistpll
or
sbb
dec
pop
imul
pop
insl
cltd
pop
adc
inc
adc
push
push
inc
subb
xchg
sbb
sbb
jp
stos
mov
adc
jge
cmp
dec
jle
je
sbb
dec
out
hlt
mov
fs
in
repnz
sub
jnp
xchg
sub
jecxz
adc
push
and
mov
push
jg
jge
xchg
flds
fsubrl
aas
add
sub
into
push
mov
push
jmp
ja
jge
outsl
bound
popa
sub
dec
xchg
out
mov
mov
cmpsb
lret
inc
stos
ss
mov
cmc
test
inc
xor
pop
rcl
pop
or
lds
and
in
pop
xchg
into
out
mov
xor
dec
inc
mov
test
ja
addr16
pop
enter
into
pop
mov
fisubrl
cmpsb
loopne
dec
mov
adcb
mov
mov
cmp
or
sub
jo
and
mov
jl
test
loopne
inc
sbb
lods
dec
scas
bound
lea
ja
add
lcall
push
xchg
xchg
inc
out
xchg
popf
or
test
mov
push
pop
outsb
loope
or
xor
fistps
arpl
sbb
adc
lea
lock
into
clc
out
cmp
in
fcomi
jb
mov
push
iret
or
ret
pop
fiadds
cmpsb
xor
out
mov
jne
loope
inc
mov
iret
nop
pop
cmp
or
shlb
xor
repnz
sub
in
lods
jmp
mov
pmullw
sbb
das
out
fists
adc
outsl
inc
test
xchg
out
fwait
and
sbb
jecxz
mov
or
sti
inc
push
xchg
dec
push
and
cmp
daa
out
mov
add
jne
out
dec
lret
inc
dec
xlat
movsb
cmc
mov
adc
lret
inc
mov
cwtl
xchg
cs
inc
inc
xor
je
xchg
mov
arpl
lahf
out
xchg
pusha
sub
pop
cmp
out
sahf
jge
mov
dec
cmpsl
mov
dec
push
xchg
lret
test
fadd
cmp
in
movb
pop
pushf
bound
and
lods
and
jecxz
idivb
fsubs
cmp
fcomp
lds
popf
jmp
int3
sahf
in
adc
pop
push
adc
xor
jl
aam
rcrl
mov
adc
arpl
outsb
es
test
xchg
ficompl
into
add
jg
in
pop
mov
aas
fiadds
loop
imul
mov
cmc
xchg
je
xlat
in
dec
out
sti
aam
outsb
out
sbb
xlat
pop
xchg
out
inc
cmc
inc
xchg
mov
fimuls
mov
add
roll
lock
subl
addl
cmc
add
sbb
cwtl
fisubs
dec
insl
fsts
xor
getsec
lret
adcl
xchg
mov
iret
fwait
pop
test
popf
into
jl
mov
push
fisttps
mov
js
ja
fs
sbb
adc
gs
andl
jge
fisubrl
or
lock
push
rorb
aaa
mov
jo
out
loopne
push
xchg
mov
mov
adc
rclb
loop
jo
insb
stc
xor
setno
call
cli
dec
mov
jp
or
popf
sti
push
in
xchg
shr
fcom
sub
or
xchg
push
xchg
xchg
ja
fldl
fstps
nop
ret
inc
mov
repz
cmpsb
push
lods
std
mov
pop
dec
and
shlb
lret
loopne
ret
push
cmp
repz
ds
add
mul
push
dec
pusha
std
or
lret
add
js
push
pop
aad
adc
aam
int3
lock
add
je
jg
arpl
dec
xlat
and
jno
or
dec
add
test
inc
out
divl
sahf
shl
int3
add
push
push
or
mov
jo
stc
cmp
fimuls
mov
into
cmpsl
push
dec
jl
aas
adc
ljmp
out
cld
xchg
and
lock
lret
sbb
mov
enter
or
addr16
outsb
pop
jno
jg
mov
push
rorl
push
push
je
fstps
out
sarl
mov
and
sbb
popa
pop
data16
or
mov
cld
rcl
dec
jbe
add
sahf
in
dec
and
pop
mov
or
and
xchg
cmp
test
dec
ficoml
mov
inc
rcrb
imul
stc
aam
mov
mov
dec
mov
in
push
mov
mov
dec
jg
rcrl
pop
push
fisttpll
sbb
clc
xchg
sbb
dec
pop
in
sbb
or
in
incb
mov
leave
push
shlb
jo
push
sti
dec
xor
ja
clc
xchg
cmp
or
lcall
sub
jo
sub
roll
cwtl
into
mov
shrb
insl
out
in
pop
xor
aam
pop
pop
dec
enter
mov
inc
jmp
cli
push
sub
js
cmp
jl
cli
mov
aaa
imul
inc
sbb
xor
gs
into
std
mov
lock
into
lcall
add
notl
loopne
and
cmp
or
or
inc
stos
sbb
sub
in
repnz
xlat
cwtl
adc
xor
push
push
cld
xchg
stos
adc
pop
loopne
lds
push
jge
xchg
outsl
popf
hlt
mov
mov
push
add
jp
mov
into
sbb
lret
mov
lods
mov
aaa
mov
loopne
push
test
insl
cmp
mulb
not
ja
mov
pop
xor
add
inc
mov
sub
or
add
mov
inc
orb
push
andl
cmp
es
dec
test
push
nop
pop
movsl
daa
jbe
cmp
movsl
mov
lret
mov
stos
pop
iret
jbe
dec
lods
popa
mov
lret
out
addl
fbstp
or
movsl
push
dec
mov
lcall
or
stos
and
and
data16
jp
push
leave
movl
inc
pop
mov
arpl
mov
dec
je
mov
add
mov
sbb
add
adc
pop
sub
test
repnz
movsb
cmc
mov
cli
out
adc
out
push
into
jbe
mov
lret
test
xchg
loopne
mov
mov
sbb
and
ret
lods
rorl
imul
push
adc
lret
jae
xlat
xchg
lcall
rorb
push
rolb
test
movb
sub
pop
ret
dec
push
xlat
lea
pop
cmpsl
jmp
aaa
sbb
dec
push
fwait
into
adc
add
sub
mov
or
inc
adc
sbb
out
shlb
aam
enter
dec
pop
in
mov
xchg
dec
aam
das
gs
xor
and
lods
mov
in
xchg
or
and
sahf
jp
or
mov
stos
mov
and
arpl
fimuls
addr16
idiv
in
jg
mov
cli
imul
dec
dec
xchg
mov
jp
inc
adc
out
xchg
imul
jg
adcb
inc
out
in
cmp
bound
jl
push
xchg
call
xchg
imul
mov
push
mov
rorl
call
icebp
mov
mov
sub
imulb
stos
addr16
mov
add
cmpsl
add
test
cltd
jp
or
add
ror
das
mov
test
into
and
inc
push
xor
gs
clc
inc
loop
add
and
xlat
ret
mov
mov
fnsave
mov
inc
xchg
cmp
or
pop
not
ljmp
pop
mov
outsl
sub
push
xor
das
mulb
hlt
sbb
repz
cltd
push
aam
or
xchg
add
into
fistps
pushf
loope
jecxz
test
adc
inc
in
std
jecxz
popf
je
xlat
push
push
pop
popa
daa
or
fcoms
ret
dec
or
sahf
shlb
mov
mov
int3
clc
pushf
xchg
mov
sub
push
lret
mov
cmc
mov
or
push
out
cmpsl
popf
sub
add
mov
nop
fwait
addr16
shrl
arpl
adc
sbb
cltd
enter
or
xchg
out
stc
sti
dec
test
adc
aaa
fnstcw
jbe
insb
lret
test
aad
pop
loopne
imul
enter
jmp
mov
and
push
inc
add
cli
fcmovb
add
add
iret
movsb
xchg
or
hlt
inc
or
adc
mov
lds
movsb
cmp
dec
fisubrl
insl
cli
adc
in
inc
mov
fmull
out
jle
cmpsl
loopne
lcall
inc
int
mov
lods
mov
ret
jle
aas
call
imul
inc
sbb
int3
lods
and
push
add
stc
inc
gs
imul
ds
sarl
push
pop
ret
sub
ret
add
mov
jmp
or
mov
add
mov
and
rorb
aaa
jle
out
mov
sub
jnp
push
sub
insb
dec
mov
mov
scas
fildll
sbb
inc
shll
cmp
mov
dec
movsl
jge
hlt
ficomps
or
aaa
xchg
cmp
pop
aas
xor
pop
shlb
int
aaa
adc
inc
orl
mov
and
pop
xchg
xchg
and
in
gs
xchg
ds
xchg
fisttpll
xchg
lods
aam
add
cwtl
pop
scas
mov
mov
push
sub
adc
or
loopne
pop
inc
add
dec
ficoml
in
mov
mov
popf
inc
adc
xchg
or
stos
xlat
add
inc
add
out
stos
push
and
adc
pop
jbe
cmpsl
call
cmpsb
in
fnsave
xchg
add
adc
aas
lret
inc
cmp
or
pop
mov
dec
sub
sub
insl
fmuls
aad
add
inc
dec
mov
sbb
test
imul
mov
jg
mov
cmp
xchg
andb
ret
xchg
cmpsb
xchg
addr16
pop
shlb
mov
insb
inc
ja
jg
or
xchg
add
pop
push
int
ja
jmp
stos
bound
mov
dec
cmp
sbb
imul
test
mov
sub
push
imul
xchg
mov
or
mov
and
iret
int3
jl
jb
in
std
xchg
ljmp
xchg
xor
jno
jo
push
push
mov
xor
push
aad
or
scas
into
or
cli
push
insb
imul
mov
xchg
lods
out
stos
test
mov
inc
stos
lock
mov
popa
scas
lahf
cmpsb
xchg
outsl
lods
xor
das
jecxz
inc
rcll
jle
mov
stos
jg
adc
pushf
cs
arpl
xchg
subl
not
xor
mov
sub
pop
jle
iret
jge
xchg
shlb
inc
jo
jg
loop
cmpsl
out
pop
push
insb
movsl
push
js
sahf
iret
cmp
outsb
test
aaa
push
sbb
mov
xchg
fs
cmpsl
cmpsl
mov
push
ret
push
icebp
mov
iret
std
cmp
aad
movsl
pop
dec
jle
jge
sbb
fldl
inc
ret
je
push
and
add
pop
notb
in
push
popa
data16
pop
inc
push
xor
call
adc
out
lods
jbe,pn
sti
int3
or
stc
lcall
cwtl
arpl
scas
mov
arpl
sbb
jb
jbe
sub
push
push
sbb
sarb
outsl
dec
pop
cmp
out
and
addr16
mov
xor
hlt
sbbl
jo
and
cmc
inc
nop
mov
pop
xor
lea
dec
inc
sbb
dec
pop
and
nop
push
mov
aam
fidivrl
lock
jl
sub
aam
out
mov
lret
ret
aaa
xor
ficomps
adc
mov
lret
xchg
jae
shlb
jmp
test
leave
jbe
out
inc
mov
and
adc
push
ss
jmp
mov
out
mov
sub
cmc
stos
fdivp
fs
filds
gs
int3
insb
data16
mov
call
mov
dec
in
sahf
add
out
xor
xor
cmp
mov
out
sbb
cmc
dec
mov
ret
push
aad
sub
sbb
mov
xchg
or
aaa
lods
push
xchg
jg
addr16
mov
jo
lods
pop
dec
movsl
jecxz
pop
cld
add
jbe
push
jne
sub
shl
xlat
iret
rcrl
add
pop
adc
mov
and
ja
or
arpl
mov
jmp
cmp
pop
sbbb
loope
mov
pop
aaa
aas
imul
and
mov
mov
pop
adc
into
adc
out
cld
mull
aam
fistps
sbb
lea
dec
xlat
in
mov
outsl
dec
shlb
fdivs
mov
mov
ss
stos
add
out
cmpsb
xor
cwtl
roll
jmp
adc
sub
or
into
inc
rolb
stc
mov
cwtl
jmp
lock
sbb
push
fiaddl
enter
mov
hlt
lds
add
pusha
fdivrs
mov
or
sti
ret
stc
dec
scas
cmp
test
les
mov
je
outsb
push
ja
rorl
aam
inc
adc
cmp
mov
mov
adcb
lret
mov
jae
xor
ss
test
movsl
int
loope
mov
scas
in
push
pop
out
test
jp
fs
add
fucomp
iret
ret
xchg
push
loope
xchg
cmpsl
stos
adc
nop
rclb
in
dec
mov
sub
sub
nop
jne
scas
adc
mov
insl
dec
adc
cmpsb
xchg
arpl
mov
jl
outsb
dec
or
push
or
iret
mov
lcall
jbe
loop
fsubrs
enter
in
adc
xor
push
cmp
inc
pop
dec
ds
jae
andb
mov
outsb
sub
mov
adc
jg
cmp
cmp
pushl
outsl
mov
out
enter
iret
jp
mov
inc
cmp
inc
sbb
add
enter
add
add
imul
mov
cld
mov
xor
lods
lahf
push
mov
inc
stc
inc
jecxz
out
test
cmp
fmul
push
add
dec
sub
clc
call
cltd
push
push
popf
cmpsl
enter
sbb
mov
ljmp
fidivl
cmp
lods
sti
cld
jbe
cs
add
xchg
dec
test
mov
mov
pop
mov
or
test
cltd
push
xchg
mov
mov
xchg
sbb
dec
pushf
rol
mov
pop
fwait
movsl
nop
mov
sub
fiadds
jmp
popf
lods
xorl
xchg
aam
push
push
test
or
insl
aam
imul
inc
mov
push
sub
pop
out
xchg
test
push
outsb
ficompl
inc
test
fwait
adc
inc
or
mov
fldcw
insl
sbb
and
push
dec
or
mov
fcomps
subb
xor
pop
dec
stos
fmulp
je
mov
or
cmp
adc
clc
fnstcw
sub
jge
insb
lret
mov
mov
xchg
mov
mov
or
imul
cmp
test
stos
and
mov
aam
js
inc
stos
or
insl
add
lret
sbb
adc
fimuls
mull
shrl
add
xchg
outsl
js
lods
sar
rcll
lcall
sti
mov
stos
loope
cmp
pop
or
jne
inc
pusha
sbb
and
mov
inc
push
fadds
adc
iret
mov
stc
std
inc
mov
dec
int3
xor
pop
xor
iret
dec
scas
mov
inc
cli
adc
loopne
jo
or
rol
or
mov
or
rcrl
fiadds
fldcw
jns
lret
testb
aad
outsl
jp
imul
xchg
and
mov
dec
pop
fcomps
ja
nop
mov
jno
movb
int3
push
daa
test
cli
jbe
in
repnz
jns
inc
jb
push
shl
mov
lret
fwait
xchg
xlat
jmp
adc
fbstp
jae
aaa
adc
cld
inc
mov
mov
adc
push
xchg
into
int
xor
lret
xchg
faddl
xchg
push
pop
mov
inc
mov
mov
push
dec
sahf
add
sub
or
negl
jnp
movsl
jmp
mov
cwtl
xor
imulb
or
hlt
rorb
les
or
push
dec
jno
jnp
lret
jecxz
fdiv
outsl
sbb
out
les
push
mov
in
daa
pop
inc
adc
cld
repnz
jecxz
out
or
sub
or
mov
and
pushf
or
repz
aaa
roll
ds
adc
jle
or
std
aam
addr16
into
ret
add
pushf
push
jno
or
dec
into
jae
push
jb
sbb
ret
xchg
cld
jp
pop
dec
rcll
inc
fstps
mov
icebp
int3
dec
adc
movsb
out
inc
sahf
popa
lret
xchg
movsl
and
mov
xor
adc
jecxz
lret
movsl
in
mov
xlat
orl
addl
stos
out
cmp
in
and
rorb
pop
mov
outsl
sub
jecxz
movsl
xchg
test
cwtl
subl
push
adc
stos
fldcw
mov
rol
jge
not
sbb
shrl
ret
add
fisttps
test
add
sbb
pop
push
xor
lds
jnp
push
mov
out
and
and
sub
inc
sti
cmp
or
push
and
filds
mov
fdivl
lret
push
popf
mov
icebp
repnz
call
xchg
and
mov
xchg
data16
mov
adc
std
or
mov
add
movsl
jno
xchg
test
negl
push
dec
popa
out
pop
sub
adc
nop
sarl
ror
jmp
out
int
inc
mov
or
jbe
aad
sti
shlb
stc
lea
pop
mov
rol
mov
ret
enter
in
xor
rol
test
mov
int3
arpl
pshufw
xchg
clc
movsb
sbb
lea
sub
mov
imul
ss
xchg
mov
sub
pop
dec
lock
jle
rolb
jae
mov
mov
leave
mov
xchg
stos
test
shl
orl
or
sub
xchg
jo
xor
adc
into
lret
jmp
add
or
sub
mov
js
mov
adc
movsb
in
xchg
aam
popf
ss
testb
loopne
repz
push
xchg
sub
nop
jae
xchg
cmp
popf
dec
mov
sub
stos
outsb
fwait
sbb
repnz
jnp
dec
addb
pop
in
adc
adc
out
into
pop
movsl
dec
add
and
push
cld
mov
cmpsl
fmuls
lahf
mov
push
mov
mov
rcll
es
ret
push
or
mov
jp
mov
stos
in
jmp
ljmp
out
pusha
ds
sub
test
not
pop
iret
mov
lea
leave
adc
cmpl
mov
dec
mov
or
das
ss
mov
push
idivb
xchg
into
insl
sub
xlat
loopne
pop
dec
out
aas
or
dec
inc
pop
inc
mov
fistl
insb
ret
sbb
dec
xchg
nop
inc
inc
repnz
ret
cld
inc
pop
movsl
or
or
dec
xchg
jl
into
int3
xor
cmp
jnp
shlb
pop
dec
cmc
out
mov
test
shlb
xor
mov
mov
out
add
mov
sub
pop
ljmp
mov
outsl
mov
jbe
xchg
mov
into
std
clc
mov
es
cs
stos
adc
repz
inc
jmp
sub
pop
jo
jbe
testl
lods
mov
lret
loopne
inc
mov
adc
jmp
lcall
fsubs
scas
pop
sub
outsl
xchg
cmp
aam
jnp
loope
loop
fisttpll
mov
outsl
xor
sbb
mov
lock
and
aam
mov
xor
jnp
test
xchg
dec
mov
cmc
fstps
movsb
adc
mov
rolb
or
or
inc
sahf
jns
push
add
clc
mov
ljmp
dec
pop
inc
int3
fadds
xchg
inc
or
es
fbstp
mov
pop
cs
cld
jbe
cmp
test
xchg
aad
sbb
push
adc
shl
lahf
or
fs
jno
mov
into
imul
or
aaa
sbb
push
frstor
rcl
push
sub
std
push
leave
in
mov
cmc
ljmp
sahf
pop
lret
popl
mov
outsb
das
mov
add
inc
lret
jnp
xorb
stc
jns
adc
fnstcw
push
in
cltd
pop
outsl
pop
lcall
arpl
daa
or
in
mov
mov
mov
in
push
stos
add
aam
into
jmp
push
hlt
xchg
lds
stos
sbb
ja
out
sbb
sbb
loop
add
cmp
bound
jns
xchg
repnz
push
outsb
loop
cmpsl
lock
pushf
dec
mov
lret
add
and
aam
lret
xchg
in
sub
push
xor
pop
test
xchg
notb
popf
cmp
or
dec
aad
xchg
ja
dec
dec
rcl
sbb
lcall
sbb
adc
pop
jmp
aaa
in
or
movsl
subl
std
dec
clc
cmp
inc
int3
insb
sarb
fisubl
push
dec
sub
fnstsw
xor
and
aam
jecxz
pop
sbb
jge
xchg
cmp
adc
mov
stos
xchg
xchg
xlat
movsb
pop
jbe
pop
and
or
adc
test
outsb
xchg
jp
movsb
jbe
xor
sub
xchg
dec
arpl
imul
add
mov
lods
jecxz
mov
push
push
lods
cld
jmp
fs
aaa
scas
adc
and
push
outsb
inc
inc
loope
roll
scas
dec
mov
sarb
jne
popf
cs
js
jnp
xor
push
sub
jmp
cmp
cmp
or
popa
or
fistps
xchg
aam
stos
imul
inc
add
jo
test
mov
or
aaa
and
repz
out
cltd
and
add
mov
push
jne
mov
clc
jbe
pop
repnz
call
flds
cs
test
push
mov
sbb
je
dec
sbb
es
out
nop
push
ficomps
aaa
lret
int3
test
mov
mov
inc
inc
repz
into
xchg
mov
dec
xor
jne
mov
roll
rcl
outsb
jecxz
add
enter
insb
ja
sub
stos
leave
dec
mov
decb
inc
push
ret
add
add
push
mov
mov
lods
dec
jl
cmp
jnp
stos
test
lock
movsl
imul
fxch
xchg
test
jbe
fisubrl
push
loopne
xor
jnp
sbb
jo
fucomip
out
lcall
gs
pop
sti
test
lahf
fs
pop
dec
mov
cmp
insb
lret
push
pop
clc
adc
mov
lods
or
sbb
mov
les
sti
cmpsl
imul
cmpsl
addr16
xchg
jnp
push
gs
data16
out
idivl
dec
ja
sbb
in
je
loopne
xor
aad
lods
mov
fs
inc
fwait
cmp
aad
lock
jge
adc
pushf
repz
jo
and
mov
pop
xor
lds
xchg
movsb
pop
fcmovbe
outsb
push
mov
cmp
and
shrb
or
rcl
push
add
aaa
lds
and
xchg
mov
jb
out
addr16
pop
fnstenv
xchg
mov
sbb
xor
lods
aam
fucom
xor
jne
jns
rcrb
stos
or
call
jle
pop
fadds
pushf
rol
int
push
mov
lret
cmp
insb
pop
cmp
xor
xchg
and
int
popf
test
or
sub
push
mov
or
add
decl
inc
mov
inc
xchg
sbb
scas
imul
ljmp
int
lods
mov
xchg
in
mov
out
mov
dec
out
lock
pop
aas
mov
add
sub
rcll
pop
jecxz
jne
mov
xor
arpl
add
dec
ret
mov
lea
adc
iret
lcall
dec
mov
fisubl
or
in
sbb
mov
jae
pop
fidivrs
inc
adc
xchg
mov
jns
je
or
out
mov
aam
pop
mov
addr16
and
std
cmc
hlt
js
pop
mov
leave
cli
cmp
xchg
into
push
lea
xchg
loop
and
xorb
adc
xor
mov
test
mov
mov
ret
dec
fisubrs
in
test
jecxz
jb
aaa
repnz
arpl
and
movsl
inc
outsl
lcall
pushf
push
mov
int3
pop
sub
push
xchg
jbe
sub
xorb
ljmp
xor
lds
mov
xor
jmp
add
shl
xor
clc
sar
in
dec
xchg
mov
aaa
lret
outsl
add
into
push
ljmp
inc
jecxz
jo
dec
mov
ja
icebp
xchg
sahf
fldcw
dec
push
test
filds
add
mov
xchg
inc
daa
ror
lcall
mov
push
xlat
push
scas
sahf
cvtps2pd
jge
mov
sub
dec
push
arpl
add
lock
shlb
push
mov
adc
cmp
addr16
push
scas
lock
lret
ss
gs
dec
mov
cmc
icebp
adcl
int
or
sub
fdivr
aam
icebp
adc
sub
iret
sbb
fbstp
in
add
pop
pop
in
jae
out
ror
jle
iret
or
aas
jne
hlt
lods
sbbl
test
sbb
xchg
movsb
sbb
faddl
cmpsl
out
das
out
clc
push
cmpsb
pop
insb
or
imul
mov
sub
mov
lock
push
data16
insb
sub
mov
mov
lock
test
in
pop
mov
jae
fsts
pop
jbe
mov
mov
adcl
push
push
lret
add
fnstsw
add
mov
addl
mov
xor
add
and
push
jne
imul
mov
adc
into
xchg
insb
add
pop
push
xchg
and
add
jne
xchg
xor
or
loopne
pop
leave
call
push
into
fdivrp
orl
or
shl
push
ds
inc
and
mov
js
pusha
jg
xor
lcall
loopne
xchg
cmc
sub
or
add
jbe
in
pop
lds
fcoms
sbb
int3
aaa
xlat
call
stos
push
inc
test
lahf
cs
mov
cwtl
or
dec
jmp
cld
jno
jl
adc
xor
mov
pop
dec
rcr
fwait
in
je
xlat
mov
mov
dec
xchg
pop
xor
data16
inc
xchg
mov
lret
ljmp
sarb
jl
lds
popf
ss
mov
inc
into
and
sub
addr16
cli
in
clc
mov
and
pop
xchg
or
cmc
fstpt
cmp
cmp
clc
fsubrl
inc
adc
mov
mov
jb,pt
push
cmp
jmp
add
ret
pop
adc
jg
mov
orb
xor
jge
pop
hlt
lds
repz
and
daa
aaa
mov
mov
push
notb
rcl
fwait
das
inc
in
lret
mov
mov
aad
enter
in
add
lods
xchg
das
stos
faddl
sahf
aas
cmc
dec
cwtl
shrb
mov
lods
jp
fcmovnbe
lcall
dec
pusha
adc
daa
aad
movsb
cli
mov
sbb
ret
out
jmp
xchg
jb
jo
and
xchg
mov
repz
aad
mov
add
ror
arpl
sahf
sub
std
shrb
movsl
rcll
loopne
setbe
sahf
push
popf
stos
push
pop
and
jle
push
jecxz
add
cs
push
xor
mov
ss
lahf
pushf
add
js
jbe
addr16
inc
push
lds
fadds
xor
aaa
popf
sbb
adc
bound
lret
push
dec
insl
out
jo
cmp
xor
and
inc
dec
inc
adc
jo
or
stc
in
fs
ret
js
inc
notl
cmc
push
lahf
jge
adc
pop
dec
xor
mov
sbb
mov
xor
aad
jecxz
cwtl
push
test
or
add
leave
xlat
test
lcall
xor
fstps
push
insl
jp
cmp
into
stc
lea
jmp
out
imul
mov
or
in
mov
and
lret
xchg
imul
mov
push
dec
pop
je
inc
pop
fcompl
dec
lret
xchg
subb
inc
sbb
popf
jne
les
lods
sbb
in
xchg
dec
jle
add
imul
out
xor
loop
into
sti
rorb
pop
lret
popf
movsb
shll
adcb
mov
push
cmp
stc
outsb
or
into
ds
or
mov
mov
pushf
adcl
fldenv
in
movsl
fwait
insl
or
mov
push
dec
sti
and
sub
jle
ds
cltd
test
push
shl
scas
sbb
dec
inc
fcmovnbe
aam
sub
rcr
lods
fsubrs
push
mov
pop
xchg
arpl
mov
jo
orl
mov
js
jno
mov
repz
mov
imul
push
out
cmp
push
lret
lods
dec
inc
test
insl
jge
adc
fcomps
mov
mov
into
es
adc
pop
rcll
adc
inc
xor
adc
push
test
cs
pop
test
jg
sahf
imul
dec
pop
pusha
out
imul
mov
xor
out
mov
dec
insl
mov
dec
ljmp
lret
mov
hlt
scas
inc
jmp
and
mov
adcl
mov
mov
shrb
xchg
pop
cmc
ficoms
es
int
add
sub
inc
adc
stos
jle
call
lret
cmpsl
mov
lods
sub
cmp
xchg
sbb
push
fsubs
xchg
pop
loope
or
and
pop
xor
xor
test
push
xor
or
xor
ror
sub
push
dec
pop
in
or
mov
ret
push
sahf
pop
dec
mov
in
mov
inc
push
lea
dec
in
mov
outsb
push
sahf
push
out
sub
xorps
lods
jle
adc
cmpsb
ljmp
fbld
mov
or
xchg
xlat
dec
rcl
scas
cli
sub
scas
fldl
fiaddl
test
xchg
xor
fdiv
adc
aad
test
mov
mov
pop
cmp
mov
sarl
jbe
inc
xchg
and
xor
test
xchg
mov
lahf
pusha
cltd
adc
movsb
mov
xchg
inc
fsts
cmp
xor
in
repnz
aad
push
stos
scas
lods
xchg
jbe
dec
add
fcoms
je
rorl
xor
inc
popa
xchg
fstp
xchg
mov
adc
mov
lock
fwait
aam
iret
adc
pop
add
xor
pop
push
dec
ret
shr
jne
mov
pop
sarb
gs
add
or
jb
cmp
into
sub
sbb
mov
sahf
adc
shlb
sub
push
pop
pop
sbb
inc
imul
mov
rcl
out
jmp
push
in
sbb
and
into
sbb
dec
mov
mov
stc
scas
pop
rcl
int3
and
or
xlat
jecxz
out
mov
dec
or
mov
rolb
lods
xor
and
inc
jno
push
cmc
push
sub
sarl
sti
add
push
mov
fdivrs
int3
aad
jg
cli
dec
addr16
sbb
xchg
ret
xlat
lret
sub
mov
or
mov
pusha
aad
push
jnp
pop
jp
xchg
xchg
lds
leave
and
insl
mov
mov
add
std
shrl
add
dec
scas
hlt
or
jle
cmc
dec
cmp
es
int3
jno
sbbl
aas
and
mov
fs
imul
push
rclb
lret
sbb
lret
dec
mov
xchg
adc
sbb
into
leave
sbb
mov
fisubrl
cwtl
add
aaa
fcomps
and
dec
loope
adc
in
shlb
cltd
xchg
ja
bound
and
pop
mov
push
mov
cmp
clc
stos
testl
pop
jne
daa
dec
into
test
inc
lcall
push
jle
mov
nop
push
or
out
comiss
pop
sbb
iret
and
xor
ja
mov
xlat
xchg
and
mov
xchg
test
icebp
jb
mov
inc
push
fsubrl
sbb
mov
mov
push
xchg
add
lret
test
xchg
call
adc
pop
xchg
xor
push
out
sub
sub
cmp
rcrl
loop
xor
push
mov
adc
fisubrs
push
in
cmc
mov
aam
adc
dec
dec
out
xchg
cwtl
jg
int3
dec
lret
xor
imul
xchg
repz
and
lds
push
in
jb
pop
loope
xor
fwait
pop
mov
lret
push
test
ficomps
xchg
ror
dec
push
cmpb
mov
xchg
inc
sub
ss
addr16
into
jae
fidivrl
xchg
lea
pop
dec
adc
sarl
lock
cmp
fsubr
hlt
mov
dec
cmp
cmpsl
lds
fiadds
scas
sbb
pop
int3
arpl
test
test
adc
push
cmp
inc
lea
fwait
mov
imul
adc
insb
fsubl
xchg
sbb
fxch
add
out
insb
xchg
fcmovnbe
xor
dec
test
push
das
sbb
mov
popf
lret
mov
mov
or
xlat
pop
ret
inc
out
push
sbb
lahf
push
lret
addb
and
movsb
mov
into
xorb
movsl
fsubp
push
into
loop
jmp
mov
aad
stos
cld
into
push
movsb
jp
xchg
dec
pushf
nop
cmpsl
xor
mov
jbe
int3
aaa
ds
xchg
cs
jmp
inc
lock
mov
and
fnstcw
inc
mov
lret
dec
fimuls
data16
mov
and
mov
or
mov
sahf
fists
bound
push
mov
mov
in
enter
pop
imul
leave
clc
lret
sub
sbb
jo
inc
add
fmul
adc
adc
fst
mov
mov
jne
gs
repz
and
inc
cmp
or
pop
jae
rclb
dec
loope
pop
sbb
dec
add
call
xor
mov
jge
rorb
hlt
xor
test
cmc
popf
pop
out
pop
repnz
push
in
lds
leave
imul
popa
scas
arpl
pop
lods
dec
shrb
sub
jp
mov
mov
push
mov
cmc
xor
cwtl
fcompl
out
scas
lret
dec
adc
shr
loopne
mov
imul
sub
xor
mov
pop
call
loop
in
aam
out
mov
adc
into
xor
fmull
jmp
pop
rcll
dec
adc
das
out
hlt
mov
aam
dec
xor
mov
jbe
leave
xor
lret
pop
xor
jnp
shlb
cmp
adc
scas
xchg
mov
push
xchg
push
add
jbe
fstp
dec
jbe
sbb
xchg
scas
sbb
dec
ljmp
stos
xor
adc
pop
lret
shll
push
or
mov
push
mov
jo
sahf
ss
cmp
pop
fmuls
xchg
add
adc
ficoms
jbe
stos
xchg
push
aam
ret
mov
nop
js
or
inc
cmp
jmp
sbb
outsl
imul
pop
lcall
lret
jmp
sbb
mov
cld
aam
push
lahf
and
rcr
testb
lret
fildl
int3
jbe
adc
jbe
jnp
sbb
mov
cmp
push
push
xchg
mov
add
inc
push
jl
mov
push
repz
add
mov
xchg
xor
loop
dec
mov
lahf
jle
xor
jns
add
test
xor
lcall
dec
xchg
mov
pop
stos
int
jo
test
lahf
mov
sahf
push
enter
hlt
add
pop
or
sbbl
cs
aas
cmp
or
mov
mov
dec
adc
movb
iret
xor
push
sub
into
in
es
mov
sarb
movsb
or
mov
mov
sti
xchg
xchg
jbe
cwtl
leave
test
aaa
push
jge
aam
and
std
xchg
jmp
shlb
cmp
fisttps
pop
sahf
xlat
pop
pop
hlt
bound
adc
sbb
push
mov
subb
push
and
icebp
filds
add
lret
arpl
sub
out
mov
mov
sbb
mov
xor
jns
es
sahf
clc
pop
in
bound
jecxz
adc
pop
xchg
or
imul
hlt
je
dec
fmuls
push
dec
add
mov
cli
not
movsl
jae
push
mov
fcompl
scas
jg
sbb
icebp
jl
mov
cmp
lahf
test
adc
cmp
fisubrs
and
dec
inc
xchg
push
adc
sub
jmp
sbb
call
jo
xor
and
ss
xchg
das
mov
jns
cltd
lea
lods
adc
add
clc
stos
bound
scas
pop
shlb
or
mov
dec
popf
stc
xor
std
dec
outsb
aaa
pop
int
push
and
mov
cld
dec
aas
inc
aam
adc
scas
mov
pop
cmpsl
or
inc
mov
fiadds
shr
aam
fcom
movsl
imul
lret
andb
push
cmp
cmpsl
jno
std
lock
stos
jl
dec
adc
int3
and
in
inc
pop
insl
sahf
sarb
enter
das
movsb
ret
push
cld
sbb
fldl
lea
adc
out
cmpsl
negb
add
test
mov
mov
cmpxchg
inc
pop
mov
addr16
jmp
jge
into
popf
jo
in
push
sahf
dec
dec
inc
push
rcrl
outsb
xchg
scas
inc
shlb
repnz
sub
mov
out
pop
fsubrl
icebp
rcr
xchg
or
popa
pop
rcl
jp
test
xorb
movsl
inc
enter
sub
popa
imul
mov
test
xor
jns
or
sbb
cwtl
mov
pop
pop
cmp
xor
mov
out
out
shr
xor
icebp
fs
inc
adc
jle
scas
push
sti
adc
es
ljmp
jbe
outsb
cmp
outsb
movsb
lret
lahf
iret
in
or
pop
xor
fcoms
pop
roll
out
mov
hlt
mov
insl
cmp
leave
mov
xchg
sbb
popa
mov
add
mov
out
or
shlb
loopne
pop
cmp
ljmp
xor
dec
jl
int
roll
lods
push
nop
dec
adc
jecxz
iret
xchg
in
imul
sub
lock
push
xor
cmp
mov
mov
hlt
inc
cmpl
push
xchg
ljmp
gs
lret
std
out
cs
cmpsb
pop
mov
mov
loopne
add
jae
lret
jnp
fst
sbb
push
lcall
adc
gs
test
jmp
sbb
xchg
inc
rcrl
imul
add
sub
imul
daa
inc
mov
sub
or
add
adc
lret
insb
sbb
jbe
lods
push
shrl
imul
push
stos
cmpsb
or
repz
out
xchg
jnp
loope
push
fmuls
jmp
push
adc
rcll
inc
push
mov
pop
or
sbbl
cmp
cwtl
dec
popf
jg
call
mov
push
jbe
xor
or
aas
sbb
iret
pop
test
daa
pop
rcrb
push
cmpsb
ss
or
and
scas
cmovle
movsb
push
mov
jle
das
add
or
dec
mov
mov
lret
popf
jmp
cmpsb
jp
lret
xor
sbb
ds
cmp
cmpsb
or
adc
jns
scas
nop
movsl
xchg
sti
push
or
and
mov
adc
in
loope
inc
jge
xchg
jecxz
sub
movd
inc
pop
cmpsl
mov
dec
push
cmp
nop
adc
jg
xor
data16
loopne
ret
into
adc
jo
jg
xchg
out
xlat
out
cmp
push
aas
ds
arpl
incb
pushf
imul
stc
cld
dec
movsl
and
pusha
lea
imul
mov
movsl
jb
jns
xor
lret
dec
inc
aad
adc
pop
jne
mov
stc
xchg
ss
nop
mov
fmul
inc
rclb
or
mov
adc
cli
cli
int3
xlat
mov
test
pop
addr16
stos
xor
mov
cld
push
sbb
push
mov
sub
mov
add
lock
inc
out
addl
gs
jmp
fbld
push
loop
shll
pop
lret
sbb
vcvtpd2dqx
xlat
push
movsl
sti
fmuls
repnz
adc
xchg
push
shrb
or
scas
mov
int3
mov
mov
mov
mov
inc
mov
xor
adc
out
mov
mov
cmp
push
in
sbb
dec
jb
lds
mov
xor
daa
jnp
mov
ror
mov
dec
adc
cmpsb
out
inc
mov
push
push
pop
cs
sbb
or
xlat
push
push
fwait
int3
or
push
jb
mov
and
out
ljmp
ds
add
dec
fnsave
pop
inc
push
add
stos
stc
scas
and
lret
dec
push
aad
cmp
mov
adc
or
mov
rolb
arpl
xor
inc
adc
les
popf
int
aaa
rol
popa
xchg
or
xchg
jae
xor
mov
sbb
jg
lret
imul
les
or
rol
lret
jp
adc
xor
in
push
in
lods
jmp
xor
xor
xchg
loopne
or
xchg
push
push
push
lods
sarl
int
test
aad
call
xor
fidivrl
adc
inc
push
inc
sti
fildl
addr16
scas
movb
xchg
inc
hlt
ror
dec
stos
xchg
out
movsb
and
mov
push
inc
leave
fwait
imul
add
ret
inc
mov
dec
loop
push
mov
mov
mov
adc
xchg
lock
in
test
loope
repz
into
test
push
mov
arpl
js
not
int
cltd
jns
sbb
or
out
xchg
mov
pop
aam
aas
pop
mov
sub
cmp
or
jne
loope
rorb
xchg
arpl
push
scas
and
imul
fstps
icebp
aad
outsl
adc
cmpb
into
arpl
dec
adc
dec
dec
lcall
lea
imul
mov
stos
inc
pop
mov
jns
leave
in
mov
test
mov
in
adc
push
enter
cmp
lcall
aaa
add
stos
xor
xor
sub
call
xor
adc
out
mulb
sbb
jno
mov
and
push
movsl
int
into
and
jg
dec
addr16
fsts
mov
movsl
push
push
and
cwtl
outsb
xor
das
dec
xchg
cmp
sub
inc
or
mov
test
mov
ret
xchg
sub
mov
mov
addr16
sbb
pop
outsl
pop
ja
and
imul
repz
inc
mov
pop
ficompl
inc
add
test
cmp
movsl
mov
test
fcmovnu
jl
mov
pop
mov
into
nop
cvtps2pd
out
das
fcompl
pop
inc
add
orl
and
scas
fdivl
xchg
mov
int3
pop
pop
cmpsb
cltd
stos
inc
jne
jb
into
fwait
cmp
jno
mov
not
push
jg
push
ret
adc
fdivl
dec
mov
outsb
int
sub
test
ret
aas
mov
push
insb
sbb
and
scas
rcl
push
fdivl
dec
mov
jbe
enter
nop
adc
inc
fs
cs
push
in
inc
rorl
add
xlat
mov
andl
or
pop
movsl
jbe
and
shl
push
and
jb
sub
pop
mov
xorl
sbb
and
popa
inc
and
stos
and
xor
je
cmp
test
fsub
inc
inc
out
sub
sbb
xchg
mov
adc
psubsb
adc
loope
repnz
aas
inc
mov
jne
add
xor
inc
jns
cmp
lods
pushf
mov
shufps
loop
dec
mov
jg
xchg
arpl
cmpb
mov
inc
push
stos
inc
repnz
int3
mov
mov
int3
fidivrl
sub
sbbb
cli
call
sub
push
or
and
xchg
ret
mov
and
daa
pop
jbe
scas
repz
add
rcll
inc
sub
push
test
mov
or
adc
dec
mov
pop
hlt
jne
sub
shrb
arpl
lds
lcall
fdivr
sbb
jbe
aad
lods
nop
enter
jbe
mov
lods
sbb
cmp
es
lahf
xorl
int
add
ret
jae
mov
vshufps
pop
jbe
cmp
sub
add
cwtl
push
cmc
outsl
pop
int
adc
xchg
mov
push
repnz
es
inc
test
cmp
jecxz
aam
cmp
sub
repz
not
cmpsl
in
lahf
jbe
enter
and
punpcklbw
hlt
lret
mov
test
mov
push
rcll
xabort
pop
mov
jno
or
push
pop
dec
f2xm1
filds
sbb
data16
mov
mov
cmp
ret
insb
jp
mov
insl
lret
imul
pushf
fists
adc
jmp
fidivrl
dec
mov
test
stos
pop
mov
fisubs
push
xchg
or
out
lods
iret
gs
nop
push
dec
stos
push
mov
lret
dec
jne
and
jle
mov
adc
xchg
fs
negb
rcl
push
inc
mov
pop
in
sub
movsl
jmp
ret
in
in
xlat
dec
push
pop
nop
add
sbb
add
repz
and
or
adc
pop
mull
arpl
outsb
mov
jge
test
bound
push
shll
jb
add
fcmovbe
call
ljmp
lcall
addr16
jl
fcomps
fsts
sbb
mov
mov
roll
mov
add
cmc
and
cmp
or
fstpl
jp
xchg
daa
mov
mov
aaa
cmp
stc
fsubrl
xchg
pusha
popf
pop
sub
push
push
xor
xchg
mov
mov
add
test
outsl
sbb
addr16
mov
popa
call
xor
xchg
pop
jno
push
js
movsl
test
add
sbb
jnp
add
and
out
repz
sub
adc
fbstp
dec
mov
push
out
xchg
jp
or
fldcw
sti
es
sub
inc
in
aam
ljmp
lret
cmp
inc
dec
fldt
fs
lret
xor
subl
jae
inc
hlt
dec
xchg
loope
test
inc
push
std
adc
sub
inc
lods
lea
jg
cmpsl
and
test
fstps
adc
shlb
or
dec
lods
loop
not
jno
decl
rcrb
imul
notl
or
sub
xchg
sub
movaps
push
outsb
cmpsl
in
dec
and
or
mov
pop
les
pop
and
xchg
push
xchg
js
xor
lret
mov
cmpsl
and
dec
cmp
or
cld
loop
push
dec
mov
sub
shrl
push
ljmp
mov
fcomp
mov
push
lcall
pop
dec
mov
jecxz
mov
in
daa
in
sub
push
ja
mov
push
mov
mov
push
mov
in
jne
mov
inc
mov
and
sub
xor
jo
repnz
aaa
dec
dec
addl
lret
cmpsb
jmp
sbb
loopne
out
add
int3
jne
push
mov
xor
rcll
pop
ret
adc
xor
fwait
dec
shl
hlt
outsl
in
rolb
movd
sbb
sub
jecxz
pop
loope
notb
lock
sub
jbe
fwait
mov
aas
fimuls
xor
xchg
sbb
mov
push
test
outsl
pop
jne
mov
mov
fcmovnu
or
frstor
je
adcl
sub
aam
nop
aas
mov
shll
adc
mov
into
fwait
jl
or
out
or
mov
push
es
ja
pusha
cmpsb
xlat
iret
pop
sub
mov
test
hlt
cwtl
mov
ja
jge
pop
jecxz
push
stos
js
cmc
sbb
mov
cmp
mov
cmpsb
inc
xor
dec
pushf
loopne
out
sahf
fistl
shl
pop
lea
sub
or
jmp
add
sbb
add
adc
adc
insl
repnz
cmp
lds
rcl
adc
add
sbb
dec
in
cmp
rcrb
insl
clc
xchg
mov
jo
pop
fstl
jne
enter
mov
sub
xchg
roll
xchg
int3
out
into
negl
fs
dec
push
or
out
insl
xchg
pop
shr
mov
scas
mov
test
aas
jl
in
xchg
sahf
scas
jbe
iret
jbe
fcoms
loop
cmp
test
xor
nop
add
inc
and
bound
or
xchg
push
sahf
es
ret
xchg
insb
pop
mov
lods
xchg
mov
add
mov
mov
add
xchg
fldcw
cmp
mov
mov
cmp
jae
xchg
and
and
outsb
movsl
sub
bswap
outsl
call
push
int3
sarb
sub
mov
push
aam
mov
push
jne
pop
das
jnp
aad
sub
add
adc
and
dec
or
inc
mov
aaa
mov
dec
pop
sub
mov
push
sub
stc
push
pop
mov
add
mov
sub
inc
into
or
aaa
fs
je
aam
add
add
dec
xor
fnstcw
js
aas
stc
add
and
sub
scas
movsb
adc
pop
adc
mov
cld
xor
xchg
pop
int
adc
sbb
mov
push
in
in
xor
push
into
xchg
xor
xchg
inc
pop
sub
push
enter
test
mov
pop
cmpsl
popf
xchg
hlt
jbe
shrb
leave
sbb
jp
inc
push
push
sbb
adc
mov
test
cmp
movntps
sub
push
adc
pop
cltd
pop
fmul
cmp
pop
mov
mov
pop
xchg
push
add
into
repnz
pop
mov
test
xchg
loope
bound
cs
mov
idivl
and
mov
pop
and
fs
imul
loop
repz
jnp
jbe
or
adc
adc
and
or
lret
xchg
adc
jg
fcmovne
sub
sbb
iret
jge
in
imul
xor
dec
enter
mov
fcmovnu
hlt
movsb
inc
dec
daa
pop
dec
shrb
mov
and
dec
jo
clc
ret
dec
in
sti
cmp
dec
into
xchg
ss
xor
mov
cli
push
jne
cmp
lahf
leave
and
or
sbb
insb
pusha
notb
xchg
rcll
mov
xchg
test
inc
cmp
movsl
icebp
mov
rolb
push
mov
and
fs
push
mov
cmp
aaa
jle
orb
mov
pop
shlb
fisttps
out
jp
and
rolb
rcll
mov
mov
fxam
or
sbb
in
mov
sbb
movsl
adc
lcall
shlb
pusha
mov
dec
in
lret
mov
push
test
xchg
xorb
stos
imul
jle
xor
jp
sahf
aaa
adc
xchg
loopne
rorl
inc
movb
sti
xchg
xor
out
and
stos
sub
jmp
pop
inc
je
cmp
loope
into
xor
fwait
add
jae
xchg
xchg
incb
xchg
movsb
and
aas
iret
mov
stos
dec
ja
or
jg
inc
lret
loop
mov
pusha
pop
cmpsw
mov
cmc
cmp
loope
xor
arpl
push
add
ficoml
inc
popa
mov
je
add
add
stos
mov
dec
push
inc
incb
and
sub
lret
pop
xchg
in
xor
fildl
insl
add
mov
into
sbb
shlb
xchg
mov
lods
lret
pop
xor
leave
xlat
xchg
lods
movsb
adc
push
out
scas
xchg
sbb
clc
cwtl
fldt
insb
das
out
sub
push
int
dec
sarl
mov
sar
lret
inc
in
jne
add
lret
xchg
int
mov
cmp
movsb
cmpsl
mov
or
aam
cmp
lret
cmp
stos
sti
mov
repz
int3
shr
mov
jecxz
pop
into
sub
push
fs
dec
fwait
push
push
push
sbb
mov
stos
mulb
adc
xchg
enter
and
push
inc
into
pop
cld
cmp
sub
std
repz
out
lret
pushw
xchg
shll
gs
fstpt
cmp
out
xchg
subl
arpl
or
add
insb
mov
stos
lret
addr16
xchg
outsb
and
inc
pusha
add
jmp
hlt
stos
cmp
lods
mov
xchg
xchg
fnsave
mov
push
lret
loop
mov
rcl
outsl
mov
cli
cmp
adc
push
sub
pop
vshufps
popa
in
xor
int
xor
mov
adc
or
inc
mov
int3
jl
sahf
subl
pop
push
adc
test
jl
and
repz
daa
and
mov
sbb
or
cmp
and
xchg
mov
rclb
test
jae
or
push
aaa
xchg
push
or
adc
lock
sbb
adc
xchg
pop
cmc
pop
xchg
jae
gs
push
ja
test
add
mov
push
lret
icebp
mov
aad
pop
into
call
fistl
es
insl
mov
sti
dec
test
jmp
lcall
mov
pop
xor
or
cmp
xor
push
in
adc
push
push
outsl
cmp
add
and
aam
jmp
xor
add
fs
mov
and
mov
push
es
mov
aad
lcall
jg
inc
std
arpl
adc
push
xchg
mov
test
xchg
jp
scas
je
lahf
mov
cmp
addr16
ret
jnp
mov
leave
lret
xor
or
push
inc
scas
lods
test
ds
push
xchg
xchg
and
sub
mov
stos
jge
push
scas
jne
xorb
or
lcall
pop
sub
sbb
ret
xor
scas
sti
jb
pusha
jle
movsl
mov
out
sbb
test
or
mov
sub
or
mov
into
repz
xchg
cmp
adc
fistpl
push
mov
lods
pushf
sub
mov
or
movsl
iret
call
hlt
xor
lods
lds
repnz
cmp
shl
insb
sbb
sar
pop
mov
loope
popf
jbe
repnz
jg
cwtl
pop
nop
pushf
sbb
mov
je
lcall
add
cmp
movsb
pop
push
mov
and
push
cmp
push
jl
fmull
movsl
cmp
inc
jae
outsl
pusha
das
lea
jmp
adc
clc
mov
icebp
mov
sbb
popa
stos
daa
jno
mov
sub
jl
pop
xchg
popf
xor
xchg
sbb
xor
xchg
daa
cmc
xor
dec
push
cmp
cmpsb
xor
fiaddl
jmp
out
lcall
mov
imull
jl
out
cmovp
enter
sub
fwait
cmp
and
ja
lock
ljmp
jecxz
int
pop
in
dec
inc
out
imul
aad
subl
out
adc
nop
inc
lods
scas
sarl
push
enter
lea
dec
xlat
dec
sbb
inc
int3
mov
mov
add
dec
repz
push
bsr
std
mov
inc
push
jecxz
cmp
js
mov
sbb
popf
jno
pop
mov
std
lahf
test
sub
popa
xor
xchg
ret
push
mov
sub
jns
in
jbe
daa
ja
aam
pop
sbb
mov
addb
push
out
or
shll
test
test
jmp
icebp
add
adc
lcall
test
lea
lahf
loop
sub
jecxz
and
sbb
pop
add
pop
ret
xlat
fs
xor
push
pop
int3
or
adc
in
gs
jle
xchg
test
jne
int3
xchg
pop
inc
jge
lcall
es
sub
scas
pop
sub
test
lahf
js
mov
push
sbbl
inc
mov
xor
sbb
aam
jmp
inc
cmp
add
enter
in
cltd
lock
push
in
xchg
lret
imul
out
xchg
sbb
ror
mov
int
pop
or
and
add
pop
push
vsubps
negl
dec
js
int3
out
xlat
push
pushf
fs
fldt
mov
dec
mov
or
shlb
movsl
push
pop
fcomi
cmp
and
jns
adc
xorl
das
jne
leave
xchg
xor
jle
inc
mov
lret
insl
mov
mov
lea
into
test
test
cmc
mov
lods
pop
xchg
hlt
int
mov
lds
or
cwtl
adc
sbb
fildll
mov
fiadds
push
ja
test
lahf
sub
push
orb
cmp
cmp
insl
fdivrl
outsl
lret
addr16
movsl
shrl
out
pop
sub
xlat
test
mov
loop
or
push
xchg
stos
movb
adc
les
nop
cmp
inc
jo
cld
xchg
fnstenv
mov
or
push
mov
imul
fcom
inc
and
dec
call
nop
cmp
pusha
xchg
push
dec
out
inc
test
std
sub
mov
xor
xor
loop
cmp
stc
push
xor
jns
mov
mov
push
add
mov
pop
or
hlt
sbb
idivl
pop
push
lcall
jns
icebp
in
sbb
lcall
xor
repz
pop
pusha
in
mov
js
mov
test
or
mov
lcall
or
dec
and
shll
inc
ja
popf
sets
dec
mov
inc
daa
mov
test
jle
pop
jno
xchg
cmp
inc
lret
mov
ja
mov
cmp
push
sub
enter
dec
pop
pushf
out
push
in
push
pop
jae
lret
rol
sub
cmpsl
mov
into
push
mov
push
lods
inc
mov
shll
frstor
nop
cmpb
jns
loop
lea
lds
sbb
enter
daa
inc
or
jmp
repz
add
xor
loop
test
out
dec
inc
pusha
add
or
imul
imull
mov
pop
dec
adc
repnz
xchg
jo
jnp
daa
ficoms
mov
push
arpl
loopne
test
xchg
ret
insl
and
prefetch
lds
xor
outsl
aas
fstpt
shll
repz
adc
cmp
mov
stos
xchg
push
je
mov
jmp
xor
xchg
mov
sub
outsb
xchg
mov
xchg
pop
aad
cmpsl
push
sbbl
push
dec
dec
inc
inc
mov
and
shrl
push
mov
push
pop
cmp
aad
cmp
push
lret
cltd
lods
pop
test
dec
lea
adc
mov
adc
out
cmc
mov
call
or
leave
mov
push
movsl
clc
xorb
mov
and
in
sbb
xchg
repnz
gs
ds
test
push
ret
mov
push
and
in
mov
mov
in
inc
cmc
pop
mov
and
xor
clc
rcr
pop
pusha
mov
sti
insb
xchg
push
cmp
push
rcll
push
cwtl
fisubrs
shl
lret
fs
push
push
sub
add
jg
xor
and
call
pop
jl
test
sets
fadds
jle
push
lret
adc
push
inc
mov
stos
rcr
in
fnsave
inc
insb
pop
inc
and
cmp
push
inc
sahf
cmp
not
push
push
in
insl
sub
sbb
imul
fs
daa
pushl
inc
xchg
outsb
out
repz
sti
dec
jge
xchg
push
mov
jne
mov
shr
adc
cmp
mov
fucomip
dec
cmp
aas
fcoml
sbb
xchg
inc
mov
xor
mov
pop
pop
xlat
push
jnp
push
mov
mov
lret
push
iret
mov
in
adc
lahf
cs
shl
xchg
inc
aaa
call
dec
lret
punpcklwd
jno
incb
js
xchg
enter
jmp
mov
pmaxsw
mov
hlt
jno
neg
push
adc
lds
mov
inc
fwait
cmp
pop
push
push
sub
xchg
icebp
fwait
out
jle
lret
mov
add
divl
sub
pop
int
push
mov
or
fbld
lahf
les
in
pop
cld
mov
test
xchg
xchg
loope
lods
xchg
cmp
cmp
sub
ret
outsb
scas
mov
add
pop
lcall
xchg
clc
mov
push
xor
inc
and
mov
into
loopne
xchg
jbe
pop
xor
addr16
shrb
push
dec
push
add
test
push
mov
movsl
xchg
cwtl
outsb
sub
mov
filds
mov
clc
mov
ret
cltd
enter
sub
mov
movsb
shlb
lcall
jl
lret
xor
xchg
sti
xchg
sbbb
fadds
int
mov
mov
daa
jg
jbe
sub
inc
mov
sti
jl
dec
mov
inc
ljmp
popa
faddp
dec
dec
xacquire
xlat
xor
dec
ds
fildl
shrb
lock
inc
ss
fwait
pop
jbe
jecxz
sbb
adc
js
dec
inc
sarl
jg
dec
pop
insb
aad
sub
int
xor
les
mov
mull
xchg
rcll
inc
out
mov
in
packssdw
dec
repnz
push
ret
mov
add
sbb
mov
rolb
push
add
rcll
jge
mov
pushf
vminpd
test
jo
push
imull
push
scas
shlb
loop
pop
or
out
push
nop
shlb
jns
aam
xor
lds
xor
push
jp
mov
orps
enter
testl
jl
pop
mov
ret
push
xor
pop
inc
add
cmpsl
js
aaa
jae
or
pop
shrl
xchg
into
lds
test
add
outsb
dec
addb
or
xchg
xor
or
cmp
out
sahf
add
shlb
mov
out
fs
test
test
jno
mov
bound
int3
subb
xor
dec
test
mov
sbbl
sbb
leave
lret
mov
xchg
push
arpl
imul
arpl
subb
xor
mov
pop
out
jns
pop
fmuls
sub
xchg
push
xlat
and
push
mov
test
sub
inc
mov
lea
and
push
scas
dec
add
cmp
mov
inc
and
pop
cmpsl
insb
je
dec
adc
addr16
out
jae
or
pop
cmp
push
xchg
out
into
adc
imul
neg
ret
fadds
mov
loopne
fstps
ret
push
movsl
int3
lret
jbe
adc
sbb
cli
gs
cmpsl
roll
pop
in
mov
clc
repz
xchg
fiaddl
mov
xor
lock
cmp
adc
iret
mov
ss
pop
sbb
cli
dec
jns
mov
ficomps
cltd
test
int
jge
ja
arpl
dec
icebp
xor
push
jp
mov
jg
int
push
fbstp
mov
mov
int
mov
gs
lods
inc
data16
in
inc
idivb
pop
orl
ss
shll
gs
sbb
push
scas
mov
je
leave
add
pop
jmpw
mov
bound
xor
shlb
stos
xlat
cmp
loopne
jo
popa
cmp
or
int
js
inc
sbb
pop
pop
lahf
and
imul
mov
icebp
mov
fidivrs
pushf
out
fisubrl
sbb
fsubrs
mov
and
out
inc
cmpsl
mov
mov
pop
out
iret
test
data16
ja
daa
pop
bound
jecxz
adc
out
xchg
movsb
or
cwtl
orb
insb
mov
dec
mov
mov
cltd
adc
fistpl
jmp
mov
daa
mov
repz
lock
test
pop
mov
push
xchg
shrl
jno
xlat
mov
test
sub
add
stc
dec
xchg
js
dec
push
je
into
push
push
sub
jnp
int
or
dec
leave
pop
mov
jbe
sti
mov
mov
mov
cmc
xlat
ja
in
pop
add
out
dec
call
and
sbb
dec
fbld
cwtl
mov
pop
mov
jno
in
and
pop
or
jle
cli
ss
stos
jmp
and
or
test
cmpsl
inc
fsubs
adcb
js
pop
lods
pop
sahf
xlat
daa
call
add
icebp
inc
aam
cs
xor
test
adc
adc
sub
xchg
es
icebp
loopne
in
xor
cmp
sub
push
shl
mov
push
stc
mov
in
sbb
sarb
lret
enter
mov
xor
in
inc
into
shlb
xchg
test
xor
cmp
ret
rclb
jp
jae
outsb
roll
fcmovnb
lcall
imul
arpl
jae
xchg
or
das
xchg
loopne
fs
int
mov
stos
pop
add
xor
jg
inc
pmuludq
jo
mov
or
shlb
loop
xor
insb
pop
xchg
daa
ds
int
pop
xor
pop
lret
dec
rcll
push
mov
cltd
mov
incb
sarl
inc
sub
jne
push
dec
push
das
jo
lds
into
addl
xor
cmovno
mov
aaa
mov
push
lret
lret
jae
adc
les
adc
dec
or
or
arpl
dec
xchg
daa
dec
outsl
aam
xor
repz
rcrb
push
mov
pop
mov
jne
das
psadbw
mov
pushf
mov
aam
lcall
js
jno
sub
outsb
lods
xor
in
add
dec
xor
stos
push
enter
paddq
mov
mov
and
pushf
negl
jmp
in
sahf
dec
sbb
jg
mov
lods
mov
pop
and
xchg
mov
dec
clc
out
outsl
stc
xor
repz
push
pop
insl
and
cmpsl
cmp
or
inc
shlb
pop
xchg
rorl
push
xor
add
mov
push
dec
push
pop
lds
into
imul
ret
inc
xor
mov
mov
adc
inc
push
js
rorb
repnz
sub
pop
jb
dec
mov
push
movsl
lds
xchg
xchg
mov
push
dec
xor
xchg
jae
sub
jmp
sahf
dec
fdivrs
dec
jbe
popf
pushf
cmp
sbb
jmp
mov
dec
cmp
push
xchg
and
jns
mov
mov
jp
lods
mov
lock
enter
adc
fcmove
js
xchg
add
mov
jns
xchg
in
pop
pop
xchg
jl
rorl
lahf
rclb
fistpll
arpl
push
shll
popa
xchg
and
pushf
jle
push
outsb
mov
lret
outsl
into
cltd
and
in
lahf
addl
rol
hlt
sub
jge
xchg
mov
out
mov
fisttps
rcll
decb
in
ret
push
loope
outsl
push
jns
xor
pusha
fwait
in
insb
lret
icebp
mov
jae
inc
push
pop
push
out
cmc
sbb
fisubrs
das
push
xchg
xor
fwait
push
roll
rolb
cld
imul
sub
add
loopne
pop
mov
xchg
adc
pop
pop
add
icebp
sbb
inc
inc
popa
and
fwait
sub
test
add
push
cmp
les
roll
inc
js
and
sahf
dec
lret
repz
xlat
push
xchg
int
mov
add
lahf
gs
leave
lret
inc
lret
cmp
cld
not
add
iret
adc
and
push
into
test
adc
and
jno
dec
cs
out
pusha
enter
push
test
test
aaa
push
mov
adc
xor
pop
rorb
cs
dec
xor
xor
fs
lods
shlb
xchg
fdivrs
and
js
filds
mov
push
pop
or
and
mov
lahf
xchg
inc
adc
pop
js
push
inc
xchg
jge
ljmp
jg
hlt
clc
push
jle
ja
test
adcb
fildl
xor
mov
les
out
sub
lahf
je
mov
in
movsl
or
push
mov
cmp
jnp
stos
xor
leave
push
add
ret
fimuls
into
xchg
les
inc
clc
sbb
psrlw
or
test
scas
xchg
inc
push
mov
pop
mov
aaa
xorl
jnp
jb
scas
decb
int3
shrb
hlt
les
lods
adc
rcrl
dec
fcompl
in
xor
sbb
dec
sbb
insb
pop
mov
mov
loope
cld
inc
inc
inc
gs
mov
addr16
inc
das
sub
fmuls
loopne
push
int3
nop
mov
scas
filds
xchg
or
outsl
sub
adc
dec
jl
out
mov
xor
cs
xchg
adc
addl
xchg
int3
push
xchg
xor
jbe
sbb
out
aam
jge
test
imul
adc
lahf
mov
movsl
std
push
sub
int3
jge
pop
shrl
inc
mov
cwtl
lock
dec
lret
pop
dec
inc
insb
pushf
pusha
insl
out
sub
dec
mov
sub
inc
xor
icebp
jne
aas
mov
xchg
add
sti
push
jg
mov
dec
test
incb
adc
sahf
sti
rorb
movsb
fs
mov
out
mov
dec
shll
addr16
cmpsb
mov
xor
jl
fcoms
leave
adc
cmp
adc
add
cmc
or
adc
mov
push
cmp
ss
in
imulb
cmpsb
mov
xor
dec
stos
mov
jo
jno
mov
data16
cmp
xor
mov
jns
addb
popa
iret
dec
sub
or
and
jle
jecxz
ljmp
imul
pop
dec
sti
dec
mov
test
into
loopne
pop
xchg
mov
inc
jb
sub
push
ficoml
mov
mov
push
xchg
pusha
jecxz
inc
cmpsl
int
into
cs
out
and
mov
adc
testl
leave
je
int3
and
xchg
lcall
into
nop
insl
dec
pop
mov
sub
sbb
mov
pop
jae
shll
or
notb
outsb
lcall
test
sbb
lea
adc
cmc
inc
sub
pop
aad
dec
xlat
fadd
jg
movsl
daa
jmp
cmp
call
dec
jnp
push
insl
scas
bound
jb
test
leave
push
xchg
into
ret
pop
push
in
or
movsb
loopne
inc
adc
mov
test
mov
movsl
add
sub
iret
and
inc
fmul
sti
rcll
ret
mov
sub
xchg
and
scas
popa
lods
fldl
decb
adc
xor
jo
sub
in
addr16
into
jbe
rcll
pusha
mov
sub
inc
clc
ret
xchg
cmp
cmp
testb
mov
out
imul
xchg
data16
push
test
jle
lods
push
push
jp
popf
cwtl
push
shlb
in
pop
test
mov
imul
out
cmpsl
scas
icebp
aaa
mov
out
lods
sub
pop
cmpsb
orl
sbb
push
sub
into
mov
ret
dec
es
rcrb
xchg
mov
xlat
aas
jno
xor
pushf
test
mov
loope
sbb
push
and
jno
xchg
push
adc
bswap
scas
xchg
sbb
rcr
cltd
fwait
cmc
insl
adc
xor
movsl
mov
xor
pop
stos
dec
pop
inc
xorb
cmp
sbb
lcall
hlt
dec
push
add
mov
iret
mov
xchg
scas
cmp
mov
out
dec
inc
or
je
lret
xchg
pusha
pop
es
mov
and
mov
add
test
and
dec
in
cld
xchg
pop
jne
shlb
mov
mov
lods
add
mull
inc
ss
rclb
mov
add
xchg
mov
add
adc
pop
mov
lret
push
sub
in
xor
aas
scas
out
cld
addb
sub
insb
daa
dec
pop
clc
jg
and
shr
adcb
inc
cld
mov
stc
lret
mov
out
xor
leave
dec
add
rclb
in
mov
add
dec
jb
fcmovb
pop
jecxz
movsl
loope
aas
mov
fwait
lret
xchg
sti
xchg
pusha
lods
shrl
into
idiv
and
xor
nop
xchg
das
pop
gs
scas
mov
pushf
fcompl
push
or
add
cltd
lods
adc
aam
mov
xchg
inc
mov
add
mov
int3
add
lods
or
stos
mov
test
loopne
or
jecxz
xchg
es
mov
push
xor
push
fstpl
push
inc
sub
fldcw
push
fbld
inc
jp
xchg
int
xchg
rcrl
popf
push
enter
cld
packuswb
sbb
dec
add
int
push
xor
mov
mov
arpl
push
push
sub
arpl
loope
loopne
fwait
push
test
mov
cmp
popa
jecxz
or
fistpl
pop
dec
mov
out
arpl
out
or
xchg
push
xchg
cld
aad
lret
inc
sbb
test
inc
dec
push
pop
sahf
cwtl
lds
mov
xchg
pushf
adc
push
cmp
bound
shll
sub
and
aam
clc
xor
inc
pop
sti
add
and
insl
aas
test
mov
or
mov
mov
cmp
aad
push
jecxz
pop
and
xchg
inc
inc
dec
rcll
mov
es
dec
movntq
out
mov
ljmp
push
aam
imul
mov
jmp
dec
pop
rcl
dec
sbb
leave
loope
andb
inc
out
push
pop
sahf
shll
les
mov
lock
shl
xchg
cli
out
mov
jbe
loop
push
mov
rcrl
push
cmp
sub
inc
popf
int3
xchg
jp
call
xlat
xchg
push
push
pop
adc
jmp
xor
vpsubd
mov
fsubp
bound
mov
xchg
jbe
mov
jne
lea
shr
icebp
insl
push
inc
ret
adc
les
cmpsl
xor
and
movsb
and
iret
or
adc
pop
lret
pop
jne
sub
testl
cld
inc
scas
in
into
test
jg
lea
loopne
mov
inc
xchg
mov
push
sub
add
dec
mov
and
and
popf
cld
adc
shl
in
cltd
mov
sbb
and
cmpsl
repnz
ljmp
xlat
imul
jae
mov
xchg
ficomps
adc
dec
fmull
stos
aaa
enter
subl
cmc
cwtl
ja
clc
push
sbb
jp
push
mov
cwtl
or
xchg
mov
inc
lret
cmp
fadd
push
pop
inc
mov
dec
mov
push
test
pop
shl
xor
clc
or
add
in
adc
test
shll
lods
push
add
push
jne,pn
xchg
mov
stos
pusha
inc
inc
jge
ds
mov
icebp
mov
mov
test
cli
lcall
out
loopne
sbbl
add
insl
cmc
sbb
xor
inc
jge
scas
mov
push
cs
mov
scas
lahf
mov
sub
cmp
jbe
mov
sbb
into
dec
xchg
lret
cli
add
fs
ljmp
ret
mov
fisubl
lds
jl
push
cmp
jle
push
add
jecxz
repnz
xchg
dec
jp
xor
mov
sub
mov
dec
jp
mov
inc
pop
into
repnz
push
ds
jecxz
mov
xor
inc
cmc
lahf
inc
addb
notl
mov
mov
mov
cltd
fcmovnbe
adcl
dec
fs
cmp
dec
jge
jecxz
sti
jne
in
sbb
fstl
cli
nop
lret
lcall
lods
stos
jle
lret
ds
dec
mov
xor
insb
inc
and
cmp
fimuls
add
repnz
clc
incl
repz
test
or
push
inc
add
sbb
mov
pushf
adc
aam
es
sahf
jle
push
cmp
sub
icebp
lea
or
jae
adc
mov
push
jo
pop
sub
mov
mov
pop
xor
jno
sti
xchg
jb
jmp
das
es
dec
nop
stc
int
fst
hlt
repz
dec
pop
sbb
loope
or
mov
into
and
mov
mov
fisttpl
sub
push
xorl
xchg
loop
push
into
js
out
pop
or
test
stc
es
movsb
repnz
sub
push
mov
fistpll
push
xchg
push
cmpb
dec
mov
not
repnz
iret
fmull
mov
cmpsb
les
enter
mov
lret
xchg
xchg
or
xor
jl
mov
fs
sub
cs
jle
aaa
ja
sbb
data16
popa
shlb
fst
xor
pop
xchg
shll
sbb
bound
push
xor
cmp
into
xchg
out
sbb
xor
push
pop
cmp
test
popa
dec
push
loope
in
std
ja
xchg
pop
jae
xchg
imul
jmp
in
nop
hlt
mov
jnp
popa
pop
aas
push
stos
jmp
dec
insl
cmc
xchg
mov
jbe
repnz
add
dec
sbb
mov
jecxz
inc
xlat
orb
stos
into
addr16
cmpsl
pop
sbb
jbe
pop
pop
ja
cmp
cld
aaa
fdivl
lahf
movsl
jbe
cmpsb
push
out
jl
jne
ret
shll
pop
mov
pop
sub
inc
decl
cmpsb
push
push
cmp
dec
and
loope
ljmp
mov
dec
xor
outsl
inc
xchg
push
mov
adc
mov
jp
mov
jo
ret
jmp
mov
sbb
mov
into
and
sbb
daa
mov
ret
or
add
leave
inc
fcomip
mov
test
xchg
les
mov
sbb
icebp
in
arpl
out
inc
sub
stos
ret
addr16
fisubl
sub
mov
cmp
dec
dec
loope
cs
leave
vsqrtsd
dec
out
hlt
sbb
xchg
fwait
or
aaa
cmpsb
sub
popa
add
int3
mov
mov
jne
ficoml
add
out
enter
dec
rorb
pop
jae
xchg
aaa
inc
ds
mov
xorb
sbb
dec
xchg
pop
jg
and
or
int3
fmul
pop
out
out
mov
ja
mov
inc
pop
sub
repz
leave
data16
push
inc
js
sub
cmp
xlat
dec
xchg
adc
je
shll
xor
ss
test
inc
ja
jl
lods
xchg
xchg
cwtl
sub
ds
in
inc
int
mov
xor
cmp
mov
fistpll
or
push
mov
lret
int
jns
int3
movsl
shl
fs
in
std
push
push
mov
je
in
inc
stos
and
lret
rcrb
scas
adc
push
inc
shll
cld
loop
mov
mov
pop
shll
pmaddwd
fmul
mov
xchg
jb
or
into
and
mov
repz
imul
push
mov
inc
aam
stos
sub
jl
dec
sub
mov
in
jg
pop
lods
cld
adc
jecxz
cmpsb
repz
xor
xor
push
dec
fcoml
xchg
inc
mov
ljmp
rcl
push
or
mov
scas
pusha
push
xor
mov
es
add
jbe
mov
stc
imul
dec
movsl
cmp
or
and
mov
cli
xor
xchg
xchg
push
pop
fwait
jmp
dec
xor
rorb
out
dec
xor
adc
sub
enter
push
xchg
xchg
xchg
inc
xor
in
jmp
inc
push
ja
dec
loope
dec
push
loop
add
jbe
je
enter
cmp
orl
into
xchg
pushf
mov
movsl
or
fldl
xchg
and
mov
in
cld
aas
into
jmp
cmp
divb
arpl
jns
push
xor
lret
xor
pop
mov
xchg
test
stos
loope
dec
xchg
mov
aas
je
jo
mov
xor
test
ror
xchg
out
lds
mov
xchg
insl
negb
jo
das
and
ss
jp
ljmp
daa
ret
sbbb
adc
fdivs
push
and
mov
cmpsb
lret
cmp
mov
push
push
fnstenv
sahf
ds
les
mov
push
lret
xchg
int
mov
pop
mov
lret
sub
arpl
iret
mov
cmp
pop
jbe
push
into
std
aaa
test
pop
push
mov
or
pop
out
testb
test
mov
or
dec
mov
adc
andl
lods
add
xchg
movsb
add
imull
into
insl
repz
test
push
enter
jg
add
jo
out
lcall
aad
cmpsl
xor
lahf
dec
push
push
fnstenv
daa
mov
aad
int
mov
pop
jle
repnz
popa
lret
adc
fildl
jbe
dec
inc
fildll
jne
leave
sub
cs
add
fs
ss
mov
loope
std
inc
ja
mov
hlt
dec
test
mov
fs
xchg
push
insb
rcrl
adc
mov
cmp
push
push
dec
popa
adc
dec
call
xor
in
or
sub
cmp
loope
leave
push
cs
and
inc
dec
sub
mov
fldcw
stos
les
aam
das
clc
push
mov
cli
ror
ret
mov
jns
lods
pop
cld
push
lahf
sti
push
ds
and
sbb
pop
fsubrp
cmp
sbb
mov
repnz
sub
cmp
mov
push
aas
into
ffree
loopne
movsl
mov
arpl
iret
jns
rolb
push
cmpsl
jl
push
jp
out
or
xchg
and
scas
imul
pop
sub
jmp
gs
xor
fadd
jne
pop
stos
sub
sbb
pop
adc
test
jmp
cmp
push
mov
jae
pop
sbb
push
rep
cmp
inc
sbb
subl
out
mov
jl
xor
cmpsb
shlb
inc
jle
mov
stos
lock
in
xchg
mov
adc
cs
inc
repz
mov
stos
sbb
movsl
jno
dec
enter
cmpsb
loopne
test
mov
push
xchg
push
lret
shrl
lods
fldl
mov
dec
mov
jno
sbb
dec
jo
push
sbb
pop
sti
movsb
stc
fdecstp
rolb
lcall
xor
dec
movsb
pop
fsubl
add
push
or
stc
mov
movsb
iret
jg
les
jmp
cs
rolb
sbb
rclb
fmuls
ret
inc
xlat
es
in
lret
enter
pop
inc
push
inc
jne
icebp
addr16
xchg
idivl
popa
testb
xchg
mov
es
mov
in
jecxz
lods
adc
daa
incb
fidivl
mov
adc
xchg
inc
jmp
jne
mov
roll
loope
xchg
popf
push
mov
in
subl
invd
fwait
loope
andl
mov
hlt
xor
roll
xchg
bound
imul
xchg
lret
adc
andb
hlt
mov
sbb
dec
mov
push
mov
lcall
dec
sbb
jae
pop
in
push
inc
adc
pop
sub
mov
pop
into
int3
sbb
ret
aad
outsb
xor
cld
insl
xor
les
cwtl
mov
mov
fisubs
loope
in
shr
push
movsl
or
lods
xchg
fs
mov
imul
xchg
test
cli
push
mov
push
addr16
jae
jmp
mov
xchg
ret
sub
shlb
dec
dec
aad
jns
jae
ss
ds
into
cmp
out
fwait
lock
in
or
mov
popa
shrl
jecxz
sbb
xchg
shlb
jle
bound
paddb
mov
fwait
ret
pop
mov
mov
xor
lods
xchg
dec
lods
adc
insb
xor
sbb
xlat
pushf
aaa
shrl
test
jb
data16
push
test
cmp
dec
mov
movsb
sbb
repz
mov
xor
setp
addr16
into
shl
orb
mov
pop
cs
adc
mov
sti
inc
lret
jle
sub
leave
push
or
popa
adc
outsb
or
jae
addr16
into
lcall
pop
pop
xchg
imul
jno
mov
mov
loopne
int
shrb
sbb
shl
in
mov
xchg
cltd
mov
fsubs
push
and
stos
int3
dec
and
ffreep
xchg
pop
inc
fiaddl
cwtl
dec
dec
js
loope
mov
inc
leave
xor
mov
pop
fnsave
jg
pusha
sub
pop
push
fistpll
lret
dec
adc
sub
push
pop
inc
gs
imul
mov
mov
or
pop
jae
int3
data16
sbb
jns
pop
out
std
dec
inc
or
pop
push
inc
xchg
push
cmpsb
cs
dec
and
in
repz
mov
xor
cltd
xor
js
stos
lods
cwtl
arpl
pushf
frstor
or
sbb
jp
push
mov
mov
rorb
adc
adc
mov
xchg
sbb
or
cmp
test
loope
push
rcrb
popl
mov
add
rclb
sti
mov
dec
dec
out
jg
int
mov
mov
pop
mov
push
add
sbb
and
aam
inc
push
adc
stos
lods
hlt
jg
jbe
jo
flds
out
sti
lret
add
aam
mov
test
out
cmpsb
imul
ret
dec
add
lods
push
push
mov
xlat
sbb
imul
cwtl
fdivrs
cli
and
ljmp
test
fs
mov
int3
test
push
adc
or
sbb
cld
stc
xor
push
jge
into
sahf
pop
xchg
xchg
cmc
in
mov
rorl
dec
adc
fwait
or
cmc
aam
pusha
mov
mov
out
adc
and
xchg
pop
push
daa
jb
mov
and
jle
pop
ret
mov
dec
pushf
pop
stc
loopne
jbe
pop
mov
lock
xchg
adc
shrl
jns
dec
sbb
or
mov
sahf
movsl
pusha
jbe
cmp
jecxz
mov
addr16
sti
or
cmp
sbb
dec
adc
dec
je
cmp
int
jno
inc
rorb
add
mov
aam
push
push
mov
inc
xlat
pop
dec
dec
icebp
lods
dec
inc
aas
cmp
mov
into
mov
add
cwtl
std
pop
das
addr16
and
shl
leave
sahf
push
dec
pop
in
mov
sbb
lcall
into
adc
cmc
xchg
or
out
cmp
into
test
pop
xchg
lods
movsl
sub
mov
dec
pop
dec
sti
push
jecxz
sub
mov
into
jbe
sub
push
jnp
ret
mov
adc
outsb
aas
mov
jg
sbb
cli
hlt
lods
sub
cwtl
clc
call
inc
adc
loopne
xor
jne
adc
inc
scas
jno
popl
mov
push
fstpt
les
nop
and
push
fwait
push
dec
rcl
addr16
enter
pop
and
dec
jmp
adc
jmp
or
push
sub
xchg
dec
fs
dec
outsl
out
in
data16
ljmp
mov
fimull
sub
mov
outsb
cmp
cmp
xchg
fcmovnbe
in
enter
dec
das
out
hlt
cmpsb
pushf
and
push
pop
adc
stos
imul
mov
xor
rcll
lahf
push
and
sub
mov
movsl
sub
jbe
stos
mov
jp
jbe
shlb
lret
adc
mov
ret
std
decb
xlat
push
cmp
sarb
clc
inc
inc
sbb
push
rclb
xchg
push
add
movb
jno
sti
jmp
dec
xchg
mov
dec
or
out
ret
push
push
rcl
xor
sti
icebp
dec
and
lods
and
jg
loop
jge
sub
inc
adc
insb
add
mov
shr
cwtl
scas
daa
call
mov
cmp
fwait
stos
shlb
mov
imul
shrb
into
jno
xchg
lcall
fcomps
mov
ss
movsl
push
rcl
bound
ret
into
mov
push
mulb
cmc
cmpsl
dec
jmp
cltd
add
inc
push
je
inc
mov
jl
orl
mov
mov
mov
rclb
outsl
jge
in
stos
in
pop
scas
and
xchg
aas
dec
and
mov
adc
jns
mov
xchg
pop
adc
jnp
dec
lcall
xchg
into
jle
xor
jg
out
add
roll
loopne
lcall
mov
mov
jno
out
and
inc
inc
xchg
data16
pop
jbe
stc
mov
dec
inc
pop
into
pushf
in
mov
sbb
push
sub
add
or
push
fisubs
and
insb
gs
or
das
add
adcl
sbb
add
mov
jne
dec
jne
flds
push
mov
cmpl
dec
add
pop
aad
xchg
hlt
or
ret
xchg
sub
xchg
mov
push
add
push
or
test
pop
mov
jbe
outsl
pop
pop
loop
adc
in
scas
jle
call
mov
inc
inc
xor
mov
push
pop
jns
test
out
nop
xor
push
jbe
jl
ret
push
push
loopne
iret
mov
outsb
or
xor
imul
xor
push
add
push
mov
or
neg
in
cltd
mov
add
sbb
and
and
dec
ret
aaa
sub
mov
sahf
xchg
es
daa
push
ljmp
add
cmp
mov
add
aad
pop
mov
adc
outsl
sbbb
bound
push
mov
dec
lea
sbb
lret
cmp
dec
pop
insl
add
stos
test
scas
aaa
mov
iret
pop
sbb
loopne
mov
gs
lods
jg
into
dec
push
in
sbb
popf
shrl
cld
pop
dec
out
cld
add
mov
push
repz
push
js
call
ficoms
test
and
mov
and
inc
and
or
inc
je
push
jmp
outsb
inc
adc
pop
and
ljmp
adcb
pop
sub
push
dec
shr
sub
mov
cli
jnp
clc
xchg
outsb
jbe
mov
outsb
jl
mov
jae
cmpsl
out
das
into
xorb
pop
icebp
cmp
inc
lret
push
cmp
div
pop
fisubl
push
dec
xor
dec
fsts
xchg
and
mov
and
xchg
int3
outsl
es
int3
out
xor
mov
mov
repnz
cmp
lods
pop
mov
ja
mov
pop
inc
rcl
stos
adcb
add
xor
pop
repz
cld
sbb
xchg
lock
imulb
cs
int
scas
jnp
sub
and
xor
or
adc
pop
cwtl
lret
ret
and
lods
call
pop
push
add
iret
cmp
jp
ds
inc
stc
pusha
mov
icebp
add
and
mov
insb
popa
xlat
in
cld
movsl
lods
hlt
aam
bound
adc
inc
js
int3
test
sub
fstps
outsl
jnp
repnz
insb
push
jg
jbe
sub
add
mov
cmpsb
int3
adc
popa
jbe
cmpsl
gs
into
in
inc
pop
cmp
cld
dec
or
lret
xchg
test
push
cmpsl
popf
cmp
scas
test
inc
jbe
cmpsl
notb
fisttps
sarb
add
xlat
insl
push
stos
sub
ja
fdivrl
and
push
ja
nop
lahf
mov
pop
cmpsl
xor
sub
movl
add
lahf
mov
jecxz
mov
dec
cltd
flds
lcall
test
stc
nop
cmp
sbb
jns
daa
mov
sbb
xor
fidivrl
std
iret
mov
push
nop
fnsave
push
int3
jb
jae
mov
pop
shl
cs
cli
xchg
loope
pop
aam
lea
insl
mov
clc
call
rclb
inc
aas
jmp
data16
insl
push
test
inc
ret
cmp
inc
cld
popf
ret
cmp
pop
and
or
cmp
pop
inc
mov
das
int
dec
stos
mov
into
lret
pop
out
or
cmp
adc
nop
ds
loope
mov
aad
data16
or
sarb
cmp
pushf
ss
pop
into
xor
mov
sub
lret
dec
mov
mov
jge
lahf
mov
aaa
dec
inc
pushf
scas
xchg
insl
subl
adc
and
mov
sub
fwait
sbb
push
xchg
idivl
sub
popf
mov
adc
std
adc
outsl
negb
je
push
sbb
lcall
cs
jecxz
pushf
sub
insl
xor
inc
test
or
rcl
rorb
aam
sub
scas
popf
pushl
jbe
add
push
xchg
and
into
jp
pop
ds
icebp
pop
or
push
fnstcw
inc
int3
push
fwait
loope
into
testl
or
cmp
mov
cwtl
shll
or
mov
in
xor
int3
lods
stos
rcll
or
mov
cs
in
pop
incb
out
fwait
cmp
loopne
in
insl
adc
xchg
push
mov
mov
lcall
pushf
arpl
nop
cmp
xor
xchg
imul
xor
mov
fsubrl
fs
sti
push
call
mov
mov
insl
inc
int3
mov
in
cmp
arpl
cmp
xor
adc
mov
scas
frstor
inc
xlat
daa
je
xchg
jge
mov
fwait
in
xor
movb
dec
xchg
push
xorl
iret
mov
add
jne
hlt
xchg
mov
push
inc
cwtl
nop
popl
pop
or
clc
test
lcall
hlt
lock
jmp
sub
jg
divl
pop
sub
adc
out
es
repnz
aam
mov
out
sbb
and
jno
addr16
test
test
test
roll
fdivr
mov
ret
or
pop
mov
ds
dec
push
ja
or
jo
sti
jge
pop
icebp
sar
mov
outsl
int
insl
jmp
xchg
push
gs
dec
nop
movsb
push
dec
sbb
out
push
mov
test
insb
repz
pop
or
out
sti
orb
pusha
or
adc
daa
mov
cltd
orl
pushf
mov
dec
inc
dec
fwait
mov
out
icebp
out
push
xor
xchg
rcll
xor
or
jmp
repnz
testl
pop
enter
cmp
push
jl
jne
cmp
jne
lret
jbe
push
gs
scas
inc
mov
push
mov
sti
int
scas
stc
std
or
loope
aam
push
fwait
sbb
js
movsl
decl
aas
addr16
inc
into
jmp
push
or
call
or
pop
or
add
sbb
test
mov
test
into
xlat
mov
dec
or
insb
mov
cmc
in
into
mov
mov
adc
mulb
mov
dec
loop
push
out
push
push
mov
xchg
in
cmc
out
insb
xchg
jbe
xchg
test
icebp
ljmp
or
jns
dec
mov
fisttpll
jl
pop
pop
fwait
leave
sarl
mov
adc
or
stos
xchg
das
repnz
xchg
aas
push
sbbb
outsl
or
sahf
push
xchg
ret
pushf
cmp
adc
adc
jle
int
insl
xor
test
aam
mov
movb
les
dec
inc
js
dec
arpl
push
push
es
pop
hlt
pop
mov
push
mov
adc
push
jno
cmp
xchg
out
stos
rcrl
cwtl
dec
mov
outsl
nop
test
mov
loop
inc
xchg
xor
ss
push
fwait
dec
rorb
movsl
test
jp
push
or
add
add
sub
movsl
loop
mov
int3
pop
push
lret
sub
push
or
jae
sub
movsb
mov
cmp
inc
daa
jns
ja
inc
cltd
push
subb
ret
cld
inc
iret
cmpsl
daa
lods
jne
cli
mov
sarb
int3
and
cmp
in
cwtl
loop
mov
mov
sub
xor
inc
push
sbb
jbe
add
add
scas
je
mov
in
xchg
out
push
cld
lds
in
or
sti
ret
xchg
dec
and
mov
mov
xchg
xlat
orb
jp
xor
jge
xchg
lahf
inc
add
push
jge
out
mov
xor
loope
aam
into
stos
mov
xchg
addr16
loopne
scas
pop
mov
push
test
and
cmc
cmp
ss
sbb
mov
and
mov
adcb
fmull
aad
je
pop
test
js
mov
loope
cmp
add
or
or
cmp
lds
cltd
popf
cmp
dec
sbb
mov
xchg
adc
ds
sbb
add
xchg
jo
icebp
mov
adcl
fmuls
loopne
test
test
das
push
jecxz
xchg
movsl
xchg
adcb
dec
mov
or
jle
inc
pop
jmp
pushf
leave
sahf
ljmp
dec
ss
in
loopne
ja
lods
dec
push
adc
mov
cmp
outsb
pop
sbb
inc
jle
inc
push
jbe
cwtl
push
test
lods
shlb
xchg
das
mov
out
insb
adc
loop
lock
fistpll
cmp
out
cmc
scas
inc
fwait
pop
scas
or
in
push
nop
test
sahf
xlat
scas
sub
stc
push
jns
pop
loope
xchg
inc
pop
or
enter
popf
adc
sbb
adc
daa
fucomip
out
addr16
sar
add
arpl
movsl
out
icebp
fstp
jle
pop
inc
arpl
sbb
loope
icebp
sub
aam
fidivrs
mov
mov
test
fsubl
push
mov
inc
jmp
les
in
or
cmp
sbb
arpl
and
lahf
dec
cmp
push
fsubrl
mov
loope
jle,pt
scas
add
int
mov
lods
pop
push
shrl
aaa
test
mov
mov
out
add
push
out
xchg
inc
adc
push
subl
movsl
test
dec
shll
jb
cs
ret
dec
cld
pushf
aaa
ds
add
out
loop
pop
mov
adc
inc
sub
sarb
mov
xchg
push
xor
xchg
mov
jmp
sbb
inc
lds
gs
cli
xchg
movsl
aad
fiaddl
or
outsb
insb
jb,pt
add
repnz
cwtl
je
or
ret
ljmp
add
imul
aam
jge
fs
int
push
push
popa
out
pop
test
jo
mov
adcl
movsl
cld
popa
lret
and
push
push
push
push
int3
jbe
cmp
mov
rorb
arpl
lret
popa
jmp
add
out
pop
xchg
cmpsl
cmp
ljmp
push
cmp
xor
andl
sbb
push
push
stos
scas
dec
ret
xor
jbe
inc
ss
icebp
inc
sub
call
and
dec
nop
in
push
xchg
xor
xor
and
and
popf
jno,pt
sbb
jae
mov
inc
xchg
faddp
int
pop
jmp
jmp
movsl
xor
pusha
gs
orb
pop
test
sbb
add
mov
leave
sbb
sbb
arpl
dec
outsb
and
inc
aad
or
and
jo
or
pop
pop
sbb
icebp
push
jge
jmp
mov
jae
inc
mov
mov
in
jg
repz
and
mov
sti
mov
mov
repz
fists
jb
addr16
and
push
movsl
ja
pop
jge
inc
add
lea
or
cs
xchg
fxch
mov
cmpsb
movsl
in
out
mov
int
fidivrs
jb
lock
xchg
int3
mov
adc
fcmove
sbb
inc
aaa
add
xor
sbb
call
std
fisttpll
jbe
rcl
dec
leave
cmpsl
int
dec
jne
std
adc
out
jnp
sub
cs
lds
sub
push
sbb
je
insb
rclb
pop
pop
pop
push
loope
mov
or
popf
lahf
jmp
or
les
dec
cli
pop
inc
mov
inc
rclb
iret
outsl
loop
xchg
in
mov
xor
push
dec
loop
int3
inc
ret
out
in
mov
lcall
xchg
or
xchg
sub
jmp
enter
pop
sub
arpl
push
lcall
testb
outsl
xchg
fs
fiadds
cli
pop
mov
es
inc
nop
cmp
fs
dec
subb
xor
pop
push
pop
pop
push
xchg
sub
push
mov
inc
or
push
jns
out
mov
cltd
mov
aas
mov
or
ficoml
or
call
sub
dec
xlat
std
fidivrl
bound
ficoml
mov
jle
int3
cs
les
xchg
mov
sub
ret
push
js
and
pusha
out
lea
mov
insl
cwtl
out
aam
adc
js
lods
out
pop
aas
inc
xlat
movsb
sbb
out
or
mov
xchg
mov
mov
sahf
stos
jmp
jb
subl
mov
cld
pop
mov
outsl
xchg
mov
je
mov
popf
in
dec
pop
sub
sbb
adc
cwtl
push
dec
mov
pop
sub
loope
pop
or
ljmp
jbe
f2xm1
jge
sbb
imull
leave
test
js
rcl
lods
fdivl
cmpsb
sbb
cli
inc
xchg
aaa
cmp
movsl
or
loopne
lret
mov
push
push
sbb
loop
dec
sti
pop
ljmp
lret
into
push
mov
adc
jge
inc
out
ret
outsl
jl
xchg
or
cmp
andl
call
cli
adc
jecxz
add
sbb
ja
xchg
pop
push
mov
gs
cmpsl
lret
fs
adc
push
mov
test
push
pop
push
jg
cs
lods
push
jo
xchg
cmp
sbb
sbb
mov
pop
cmp
iret
mov
lret
inc
loope
cmp
fcoms
xchg
xor
das
stos
jp
or
cmc
mov
data16
xchg
add
cwtl
inc
addb
pop
into
xor
das
xor
mov
test
movsl
add
cmpl
lret
xchg
jbe
mov
lret
xchg
rorb
sti
insl
lret
fisubrs
outsb
popa
loopne
inc
imul
sub
out
repz
xchg
cli
xchg
imul
sar
add
cmpsl
mov
xchg
int3
mov
imul
fs
and
lahf
arpl
movsl
in
xor
xchg
jecxz
dec
push
pusha
mov
das
loope
push
cwtl
or
push
xchg
daa
jae
int
in
popa
in
pop
inc
jmp
into
cld
bound
sbb
push
out
adc
adc
fnstsw
lea
xchg
test
lahf
and
psrld
nop
lcall
mov
sbb
insb
clc
jbe
xor
cli
or
into
pushf
hlt
dec
add
inc
push
leave
sbb
adc
inc
mov
xchg
js
or
sub
mov
xor
mov
xchg
jne
cwtl
cli
lods
aad
pusha
int
fidivrl
pop
into
add
pop
and
loope
mov
inc
dec
cmp
mov
jmp
mov
cmp
sub
add
test
lret
pop
stos
test
sub
addl
ja
inc
cmpsb
xor
xchg
scas
xchg
into
movsl
in
jge
lcall
xor
push
mov
dec
mov
inc
dec
mov
scas
push
daa
data16
jne
cltd
push
out
or
js
add
sti
cmp
mov
dec
int3
adc
loop
adc
and
addr16
out
jmp
dec
stc
pop
add
loopne
ja
outsl
jae
cmp
arpl
pop
clc
jp
data16
lret
roll
cltd
jnp
std
add
imul
inc
lret
arpl
push
out
test
inc
push
mov
loopne
ljmp
sub
sub
add
add
into
sti
ret
xchg
mov
pushf
push
xor
pop
xchg
sbb
inc
xchg
into
sub
dec
or
inc
test
imul
aam
inc
push
movsl
addl
int3
mov
mov
push
fnstenv
scas
push
in
inc
ds
hlt
mov
inc
jbe
dec
adc
push
inc
xchg
lock
or
jno
mov
movb
add
data16
pop
cmp
sahf
enter
mov
leave
push
aam
loop
push
and
clc
sahf
or
test
int
jmp
push
pop
es
decl
push
add
push
xor
xchg
dec
mov
xlat
and
push
fldt
ja
add
xchg
mov
out
in
ljmp
cmc
cmpsb
inc
gs
pop
push
faddl
cwtl
push
cmp
cmp
fdiv
inc
sbb
fcoms
lret
pop
add
jle
mov
cmpsl
mov
rcll
mov
lahf
int
es
adc
mov
lcall
fldt
xchg
cmp
xchg
inc
stos
ja
xor
addr16
jo
jl
in
ljmp
jg
je
js
mov
jp
out
rol
lock
addr16
lret
mov
push
insb
xchg
xor
sbb
dec
push
pop
jp
ficoml
inc
or
push
jle
test
and
sbb
push
in
enter
es
xlat
adc
mov
xor
jge
mov
inc
sub
sar
mov
movsl
test
fucomi
sahf
pop
aad
lahf
pushf
arpl
xchg
xlat
lret
jmp
outsb
scas
sub
dec
out
shrl
icebp
xor
and
mov
imulb
out
mov
js
mov
cmp
jg
int3
cli
or
mov
test
jp
push
rcll
mov
mov
js
mov
dec
jnp
test
dec
mov
or
pop
in
push
lods
xchg
pop
movsb
sbb
adc
cwtl
aas
push
inc
test
scas
insl
rcl
add
jno
jge
mov
mov
in
cmpsl
cltd
push
xchg
or
dec
into
inc
push
mov
movb
shlb
jecxz
xlat
sub
or
cli
pop
ds
decb
fdivp
fwait
jne
imul
xchg
mov
add
pushf
and
pop
xchg
movsl
clc
pop
ret
lret
aad
push
add
out
lar
inc
div
addr16
es
xor
out
not
out
outsb
mov
and
jae
cmp
cmpsl
sahf
xor
and
shr
inc
push
push
pusha
mov
sahf
cmp
xchg
std
cli
mov
xor
aam
mov
sbb
add
dec
pop
ja
fiadds
pop
sbbb
add
jns
sti
lahf
pop
int
les
mov
or
add
add
sbb
pop
xor
jne
xor
inc
dec
cwtl
sbb
ja
xor
sub
mov
cmp
and
lret
add
test
add
push
add
clc
fbld
and
cli
or
fsubrl
jo
xor
call
test
nop
into
jnp
adc
lret
clc
fwait
add
sahf
daa
js
es
sbb
push
enter
xchg
mov
lahf
leave
out
xchg
add
subb
xchg
sar
xchg
dec
adc
push
pushf
in
data16
int
and
inc
pop
scas
stc
jmp
xchg
and
aam
test
out
xchg
int
sbb
not
lcall
daa
push
adc
out
jg
loope
rolb
sbb
and
aaa
sbb
xorl
adc
rorb
mov
push
or
pop
push
ss
hlt
jb
sub
push
idivl
sub
sahf
lods
xchg
pop
or
xlat
push
sub
fstl
mov
mov
int3
and
dec
fcoml
push
in
cmc
mov
je
fidivl
cltd
cs
int3
imul
clts
xchg
subl
frstor
lods
fiadds
insb
or
arpl
mov
xchg
adc
cltd
xchg
pop
push
pop
mov
xor
fcompl
mov
pushf
mov
lahf
xchg
aaa
pop
fcmovbe
sub
popa
xchg
inc
pop
loop
mov
pushf
pop
fnstcw
cmpl
stos
repz
fxam
aam
sub
xchg
outsb
int3
lock
insl
cmc
adc
xchg
addr16
push
dec
mov
xchg
sbb
in
into
imul
dec
das
xchg
out
push
inc
cmp
int3
lea
inc
inc
into
ja
mov
out
xor
inc
mov
pop
into
mov
mov
fstpt
shrl
push
gs
jecxz
frstor
mov
shlb
pop
into
jg
mov
ss
push
push
cwtl
dec
jbe
xchg
adc
and
xor
jl
pop
iret
sarb
std
cmp
lock
in
mov
iret
push
insb
mov
rcr
push
fldt
pop
enter
jns
jnp
pop
adc
inc
xchg
adc
or
jne
cmpl
push
add
into
outsb
inc
stos
mov
sbb
mov
lds
push
in
pushf
xchg
dec
jecxz
sbb
xchg
add
jecxz
push
jl
mov
js
fs
xor
dec
sarl
and
inc
jae
or
scas
push
xor
inc
dec
ret
test
fldl
mov
xchg
aas
iret
sub
testl
int3
test
insl
mov
sbb
cmp
jle
aaa
int3
sar
leave
mov
mov
inc
fistl
jo
cmc
xor
lret
adc
xchg
and
push
and
cmc
mov
aas
mov
jbe
sarb
test
mov
mov
inc
dec
adc
call
aas
pushf
addr16
or
mov
sub
push
sub
push
mov
lods
das
mov
out
cmc
lret
dec
insb
push
sub
pop
fcoml
pop
cltd
arpl
add
push
mov
or
sub
pop
ja
mov
outsb
adc
mov
jno
pop
pop
mov
cld
mov
sub
push
sti
xchg
jle
rcrl
add
sbb
inc
popa
loop
test
sar
data16
jge
sahf
aam
aad
xor
cmpsb
lock
outsl
loop
pusha
out
jno
push
in
out
xor
pop
and
fmuls
push
mov
cwtl
leave
inc
jg
fistl
shrb
sub
mov
dec
add
repnz
and
je
or
into
movsl
fcomp
addr16
mov
jbe
pop
push
jmp
push
enter
lret
rclb
mov
addr16
add
scas
out
fstps
xor
sbb
and
por
pop
pop
xchg
xchg
les
adc
add
fwait
dec
dec
fcoms
add
push
shlb
and
mov
inc
jl
ss
test
lods
out
dec
fwait
incb
filds
out
inc
into
stc
adc
push
dec
dec
add
icebp
adc
outsl
mov
and
xor
cmp
insl
pop
aam
inc
test
movsl
jmp
lret
pop
cmpsl
xchg
cwtl
or
daa
push
sbb
adc
xchg
dec
sbb
call
lret
lock
in
pusha
in
lret
out
sub
mov
xchg
cmc
out
ja
mov
and
ficompl
movsl
int
and
adc
jecxz
pop
scas
aam
add
push
xor
mov
xor
addr16
mov
mov
push
je
mov
out
xor
jns
in
jb
push
test
jo
jno
in
xor
movl
jb
decb
push
mov
fistl
stos
cmpsl
mov
aaa
cmp
mov
add
sub
dec
sbb
cmp
cld
in
decb
inc
sbb
lea
daa
cmp
lret
test
xchg
cmp
ret
and
push
pop
out
mov
fsubrl
std
fmuls
leave
cs
jg
les
scas
clc
mov
sub
icebp
xchg
cmpsb
adc
rorb
adc
faddl
sbb
outsb
xchg
cmpsl
into
lods
js
mov
jb
mov
cmc
add
out
cmp
add
xchg
lret
xchg
out
les
or
rol
or
stos
ficomps
fsubs
aaa
or
int
mov
cltd
fcomp
and
pop
lret
push
cmp
or
mov
push
cmpsl
movsl
pop
lret
ss
add
or
adc
mov
js
and
sub
imul
or
outsl
mov
ret
int3
jbe
and
into
out
push
and
xchg
movsl
pop
fisubrs
xchg
inc
out
dec
jnp
pushf
inc
aas
ja
lret
je
push
sbb
pop
loop
mov
jg
mov
mov
jno
add
adc
xchg
cs
insb
sbb
cli
stos
das
jb
mov
sbbl
icebp
imul
gs
in
adc
xchg
aam
aad
and
test
repnz
push
sahf
or
lahf
and
push
xchg
sub
test
mov
push
push
mov
adc
out
xor
fldenv
loopne
mov
pop
icebp
mov
aam
lods
cltd
out
fnstcw
repnz
sarl
mov
repz
lahf
iret
jecxz
dec
add
xchg
hlt
mov
int3
inc
or
xchg
jbe
lahf
clc
mov
movsb
out
lods
xchg
leave
nop
aaa
push
sahf
pop
adc
sub
out
and
ljmp
sbb
fdivr
mov
filds
add
or
mov
mov
dec
and
les
adc
mov
or
pop
sbb
push
add
xchg
cmp
test
int
push
subb
dec
cmpsb
shll
xor
icebp
ficoml
xor
fwait
dec
pop
sbb
stc
data16
add
nop
hlt
jle
mov
and
insl
and
movsb
enter
push
outsb
sbb
pop
fs
in
test
into
mov
mov
sbb
sbbb
and
xchg
and
xor
mov
mov
inc
rcl
fwait
shrb
lds
dec
iret
shlb
test
pop
sub
daa
add
and
xor
out
sahf
jmp
test
push
fsubs
fcmove
pushf
jbe
xchg
mov
jo
sbb
sub
adc
data16
int3
push
into
cmp
jmp
pop
and
imul
shr
ss
movsb
loopne
fiadds
mov
rcrl
aam
cmp
and
sbb
mov
jne
inc
decb
popa
scas
cs
mov
inc
dec
sub
lods
aam
xchg
dec
scas
xchg
and
pusha
repnz
pop
xchg
inc
cwtl
nop
icebp
arpl
add
lods
aad
loopne
mov
gs
loop
lock
les
jmp
call
xchg
or
in
test
insl
cmp
cltd
and
sti
sub
inc
mov
pop
loopne
stos
ficompl
mov
adc
adc
jnp
add
cld
adc
dec
fdivrs
push
cmp
mov
test
push
sbb
pop
cmp
aad
ds
fldcw
xlat
mov
dec
jl
sub
jge
mov
cmp
adc
and
mov
bound
int
push
scas
mov
xchg
push
and
cld
jo
test
negl
mov
aad
mov
out
fdivrl
fidivrl
ja
aam
pop
scas
lahf
pop
shl
jbe
adc
fcom
pop
mov
cmp
xor
cmp
movsb
mov
sub
mov
enter
xchg
mov
cmp
dec
cmp
aad
jle
inc
mov
jo
movsb
incl
push
mov
pop
cmc
divl
xchg
ret
sbb
xor
ja
leave
dec
mov
aas
pop
out
mov
rolb
out
push
repnz
jb
into
addl
movsl
sbb
push
jbe
inc
and
adc
lods
mov
incb
jne
dec
stos
ret
into
xchg
sbb
mov
cmpsl
mov
aam
pop
jmp
test
repnz
sarb
daa
mov
jnp
adc
in
inc
jne
out
pop
jns
aam
lret
lret
insl
dec
add
lock
movsb
xchg
or
mov
jg
mov
inc
cmpsl
xchg
xor
xor
aam
push
push
sbb
not
aas
cmpsb
shr
mov
xor
xchg
and
push
test
leave
inc
fidivl
and
push
jp
mov
in
sub
jmp
movsl
jmp
das
into
je
clc
dec
fs
lret
add
loop
jb
rolb
test
jmp
push
pop
pop
mov
cs
mov
xchg
vpminsw
sbb
rcr
sti
pop
push
jp
jmp
scas
scas
in
mov
icebp
xchg
pop
idivb
pop
rorb
cmp
dec
xchg
xor
jecxz
sar
icebp
stos
mov
mov
pop
sti
sbb
push
xchg
push
push
push
into
into
push
aaa
mov
test
sub
push
inc
sbb
stos
rcl
rolb
mov
adc
cwtl
mov
loope
into
pushf
gs
js
int
or
mov
icebp
xchg
xchg
in
mov
out
test
cmp
mov
and
lret
push
adc
lds
cmp
cmp
mov
jg
inc
fimull
popf
pop
mov
cli
sub
das
jbe
jo
loop
or
xor
pop
das
stos
pop
xlat
add
scas
popl
pop
nop
outsb
mov
push
dec
push
je
mov
cs
jne
iret
pop
jnp
mov
xchg
int
and
mov
mov
movsb
in
test
jmp
in
mov
push
ljmp
fimuls
ffree
test
adc
stc
aam
mov
dec
hlt
mov
xchg
out
lds
in
shrl
out
add
and
mov
les
jo
cmp
add
test
lods
cmp
add
fldenv
mov
pop
cld
in
iret
dec
xor
push
cmc
nop
test
sbb
jo
pop
dec
pop
insb
mov
ja
mov
pop
mov
jp
lret
xchg
insl
mov
popa
inc
xor
xchg
inc
test
stos
inc
sub
cmc
fwait
sahf
push
nop
inc
iret
sub
insl
jg
cmp
push
data16
dec
cli
dec
fistpl
loopne
mov
mov
int3
adc
dec
sbbl
mov
cs
into
outsb
fsubl
mov
adc
jg
push
test
and
iret
xchg
leave
dec
cwtl
shrb
push
ds
rclb
push
insl
jb
mov
push
sbb
jg
adc
pusha
mov
sarl
dec
sbb
cmpb
shlb
push
jmp
outsb
and
sub
bound
adc
push
add
mov
ja
into
mov
repz
notb
icebp
dec
push
xchg
cltd
xchg
add
jno
ljmp
lods
std
pushf
cmp
repz
mov
and
jbe
jp
cld
xor
movsb
imulb
mov
lock
mov
jmp
aaa
jo
sub
mov
jno
dec
rcrb
in
inc
add
cmovb
pop
cmpsl
dec
repz
sub
leave
sahf
fidivrl
mov
mov
aas
shlb
cwtl
push
xchg
mov
jne
fs
cmp
and
mov
jge
jmp
push
cmp
mov
in
leave
or
imul
pop
mov
sub
clc
mov
sti
xchg
sub
test
adc
jb
jg
stos
nop
leave
fsub
loop
out
aam
xchg
mov
daa
cmp
pusha
inc
xchg
pop
addr16
out
mov
xorl
and
fnstenv
adcb
dec
lods
add
or
cmp
mov
popa
xchg
test
in
mov
inc
add
mov
mov
and
or
adc
jb
and
sbb
cmp
xor
int
loop
aam
jbe
sarl
test
loopne
and
xchg
pop
les
mov
mov
daa
pop
out
clc
push
cmp
cmpsl
inc
int3
into
push
lods
call
cmpsb
add
xchg
xor
xor
movsl
xchg
pop
int3
hlt
mov
in
sahf
mov
sub
pop
pusha
sub
adc
int
roll
fidivs
mov
pop
jnp
into
iret
sahf
cmpsl
dec
cltd
jne
ds
test
mov
pop
jo
test
sbb
or
mov
pop
lock
xor
adc
lret
inc
dec
pop
loop
mov
ljmp
mov
xchg
das
lods
add
adc
dec
dec
mov
and
gs
push
jns
jbe
dec
jo
pop
push
push
scas
mov
shlb
cmp
je
lret
dec
cli
jg
adc
mov
out
jne
ljmp
shrb
mov
rcrl
xchg
gs
lods
sarb
je
add
adc
mov
adc
pop
adcl
loop
decl
pusha
mov
test
dec
aaa
cmpsl
pop
xchg
je
std
inc
movsb
dec
ror
aam
xchg
adc
daa
sahf
sbb
decb
gs
je
shrb
arpl
rolb
jne
loop
push
adc
cmpsb
imul
lahf
push
int
testb
addb
xchg
pop
xor
dec
idivl
insb
into
loop
int3
jmp
adc
mov
das
pop
xchg
jg
cmp
mov
pop
push
outsl
lods
scas
scas
adc
inc
mov
cmc
jecxz
mov
adc
shlb
outsl
int3
ja
out
pop
mov
loop
adc
pop
out
aam
cmp
scas
repz
inc
add
xchg
out
xchg
popa
fistpll
dec
inc
lret
cmpsb
je
imul
add
fcmovnbe
outsl
jle
pushf
imul
pusha
jmp
inc
daa
das
stc
push
cmp
lods
insb
dec
xor
or
xchg
mov
adc
aas
dec
mov
jle
mull
int
adc
popf
mov
in
and
jbe
aad
nop
push
aam
inc
fadds
xchg
loope
add
xchg
pushf
jmp
push
adc
dec
in
mov
mov
lret
repnz
ja
test
shlb
out
jb
sbb
fstpl
or
lret
add
pop
ljmp
lret
jp
cmp
pusha
sti
mov
ret
clc
je
rorb
dec
mov
sub
pop
lret
lret
lds
dec
iret
out
add
add
cmc
jns
mov
push
mov
cmp
dec
ljmp
xor
xchg
popa
cli
leave
or
aam
sub
into
pop
ds
pop
or
xorl
dec
sbbb
adc
je
mov
test
push
insb
push
push
jns
and
lret
out
hlt
sbb
pop
icebp
cmp
dec
add
test
or
es
dec
inc
xchg
sub
mov
test
movb
sub
das
dec
sub
cmp
sub
int
enter
mov
add
push
pop
or
pushf
jne
add
xchg
pop
leave
jo
mov
dec
out
sub
lret
dec
fs
imul
loop
push
or
dec
ffree
add
testb
and
push
iret
rcrl
mov
jne
stc
add
lahf
cmp
out
cs
xor
jecxz
ret
pop
jg
sbb
into
inc
pop
mov
mov
sti
call
jns
movsl
daa
mov
bound
pop
shlb
sbb
dec
out
movsl
xchg
add
cmp
xlat
out
sti
out
lds
popl
int3
sarb
jle
out
xchg
aam
subl
and
adc
pop
test
subb
jns
sub
je
clc
imul
jmp
push
popf
xor
ljmp
mov
mov
test
ds
push
scas
cld
cmpsl
repz
pop
push
insb
or
push
add
daa
or
rcll
rcrl
insl
and
ds
cmp
sub
in
lods
outsb
or
repz
fwait
lock
shl
dec
jae
fnsave
push
sbb
adc
add
daa
xchg
pop
dec
mov
bound
lret
push
sub
aas
cwtl
mov
mov
cmp
insl
ret
cmp
xor
add
fdivs
data16
addr16
push
in
cmpsb
out
pop
test
xor
int3
inc
in
or
xchg
dec
fcoms
lock
lds
test
mov
jbe
add
faddl
stos
fldt
push
inc
jle
sarb
cmp
mov
xchg
push
out
sub
add
test
cmp
jp
lods
movsb
mov
out
mov
jmp
rcll
jp
testb
std
xor
mov
pop
es
js
shll
std
add
pop
sbb
out
bnd
sbb
jg
call
stos
movsl
or
mov
xchg
aaa
jne
sti
aam
in
out
jnp
popa
sub
rcl
sbb
sbbl
int3
xlat
movsb
lea
jecxz
clc
sahf
aaa
in
jp
mov
or
icebp
push
pop
xor
push
int
fldt
cmp
aas
aad
push
adc
shl
mov
inc
adc
out
pop
jno
loop
repnz
das
or
jge
mov
mov
adc
in
ficomps
fs
xchg
xor
jbe
mov
popf
int3
ret
stc
push
insl
out
stos
sbb
repz
pusha
dec
scas
leave
push
cmp
adcb
sub
test
and
sti
das
fstpt
imul
insb
fs
mov
jbe
mov
and
dec
stc
push
add
es
shrb
add
clc
xchg
xchg
aam
pop
addr16
mov
mov
xchg
movsl
rcl
clc
mov
fldl
push
mov
into
popa
and
jne
int
inc
scas
out
fwait
iret
lds
pop
stc
sahf
lods
mov
lret
mov
lock
push
adc
inc
mov
lret
sti
inc
stc
aam
lods
hlt
fcoml
out
mov
insl
dec
mov
jne
nop
or
xchg
movsb
inc
icebp
mov
adc
testb
xor
imul
cmc
push
jno
inc
leave
scas
xor
adc
xchg
loopne
pop
push
jecxz
add
and
inc
and
inc
inc
mov
xchg
psubw
jmp
mov
mov
iret
push
adc
xor
int
dec
mov
into
mov
pusha
lret
orl
add
out
dec
mov
pop
adc
push
dec
fs
add
adc
pushf
aaa
jns
sarb
push
testl
xchg
or
stos
add
mov
into
out
lret
xchg
jle
rcrb
sub
dec
cld
rclb
xchg
add
mov
cs
dec
dec
addr16
push
pop
jle
shrb
xchg
sbb
test
add
cmpsl
mov
mov
push
loope
and
mov
xchg
sub
add
into
adc
xor
and
adc
int
dec
cmp
repnz
sahf
dec
stos
sbb
sub
int3
jmp
cmpl
push
ret
out
std
dec
mov
ds
jle
clc
lods
pop
stc
orb
hlt
jg
xchg
jno
xchg
sahf
in
data16
or
jb
mov
jle
scas
in
jmp
icebp
inc
and
popf
xchg
inc
jl
mov
in
cmc
sbb
inc
in
ja
inc
mov
sbb
jns
in
stc
dec
pusha
mov
shlb
in
rorl
xchg
jnp
insl
xor
stos
ljmp
push
out
gs
jbe
in
xchg
xchg
dec
adc
int
lret
pop
add
sbb
iret
and
std
jne
lods
or
add
sub
mov
inc
jmp
out
xor
mov
push
jnp
loopne
or
mov
dec
sub
dec
push
ss
movsl
pop
loope
push
sub
int
enter
test
jnp
pop
cmp
cltd
xor
fists
push
inc
push
jmp
scas
pop
andb
or
in
loopne
in
jge
inc
js
jno
dec
into
bound
rorl
pop
outsb
push
and
jmp
jle
mov
pop
out
dec
lds
mov
popa
mov
mov
mov
loop
lods
pop
dec
mov
and
hlt
lea
loopne
mov
fidivs
fwait
mov
pop
push
test
jae
jmp
pop
adcb
js
mov
icebp
out
push
mov
sbb
in
pop
jne
mov
dec
or
sub
cmpsb
and
call
das
stos
cmpsl
je
sbb
rcr
add
mov
addr16
mov
ret
je
hlt
outsb
adc
mov
lahf
jg
mov
mov
clc
aas
into
xchg
shlb
pop
push
arpl
mov
add
push
pop
push
mov
mov
inc
movsb
sbb
xor
mov
fnclex
pop
push
shlb
cld
lods
in
push
inc
out
xor
adc
xchg
dec
divb
loope
lret
pop
je
cmp
mov
mov
addr16
bound
inc
incb
test
push
mov
mov
not
shrl
insb
jle
and
mov
pop
cmp
mov
ss
xlat
popa
sub
push
xor
dec
icebp
push
push
xchg
bound
or
nop
jns
mov
inc
push
push
push
into
push
and
js
aaa
lret
mov
cmp
ficoml
sub
inc
xchg
jb
mov
cmp
pop
jno
pop
sub
push
scas
dec
loopne
sbb
rolb
cld
popf
pop
aam
mov
xor
insb
iret
fdivr
add
ret
dec
imul
int
ja
scas
xor
xchg
test
xor
mov
mov
les
fsubl
push
xor
jns
or
xor
mov
in
jbe
or
jmp
push
push
push
mov
push
add
fwait
inc
sub
aad
fs
aaa
movsl
mov
or
cmp
push
xor
stos
jno
lea
mov
jo
shl
jg
inc
loopne
stc
sbb
adc
mov
into
push
sub
xor
out
imul
sub
dec
popa
bound
mov
mov
call
cmpsl
push
aas
subl
out
xor
inc
daa
dec
lcall
push
mov
cmp
xlat
or
out
cmp
mov
lret
aas
fildll
in
mov
loop
lcall
xchg
or
pusha
sbb
xor
pop
mov
fdivl
cltd
test
addr16
dec
rol
cwtl
or
inc
ja
and
fildl
sbb
sub
xchg
sub
popa
sbbb
mov
and
lcall
xchg
jbe
inc
dec
mov
std
lods
push
pusha
cli
mov
loop
dec
imul
test
jno
jnp
inc
mov
rcr
inc
into
fcmove
lret
stos
lods
out
dec
push
xchg
push
js
mov
testb
xchg
lret
xor
xchg
mov
gs
nop
bound
mov
test
cmp
into
add
mov
mov
ret
popf
mov
inc
cltd
rorb
inc
dec
adc
push
cmp
rorl
dec
sbb
xchg
push
mov
popf
inc
sub
int3
xchg
sbb
and
jge
adc
repnz
inc
pop
fisttpll
or
jp
jne
push
cs
sub
enter
dec
leave
mov
fisubrl
in
inc
jl
leave
push
into
dec
push
pop
int
arpl
mov
pop
and
shrl
test
movsl
rorb
out
cmp
add
xlat
lret
aas
or
xchg
xor
pop
adc
cmp
call
cs
rcl
sti
push
into
stc
ret
les
fwait
dec
std
lods
adc
fildl
inc
aad
testb
cmpsl
ret
stos
aas
add
mov
add
jbe
mov
cmp
cli
enter
aad
push
mov
jecxz
adc
stos
push
pop
mov
xchg
fwait
add
jne
xor
jp
mov
lret
cmp
pushf
scas
aad
adc
mov
arpl
adc
pop
repnz
out
nop
loop
lods
jno
mov
sbb
dec
std
int3
popf
jb
xchg
mov
mov
inc
cmp
inc
lock
cmp
je
cmp
out
inc
adcl
push
les
push
adcb
mov
mov
inc
dec
xchg
inc
lods
scas
ljmp
pop
adc
in
inc
sub
scas
adc
shll
jl
push
pop
push
dec
pop
mov
data16
mov
fisubs
push
pop
xchg
xorl
jge
das
jmp
mov
pop
stc
xchg
imul
ljmp
loope
in
push
in
xor
inc
mov
mov
in
add
loop
sbb
lods
dec
adc
adc
shll
test
pushf
rclb
mov
jo
leave
jp
scas
push
pop
out
pop
xchg
push
psrlw
push
add
pop
xchg
sub
imul
push
inc
and
mov
cmp
shlb
push
push
into
push
and
bound
repnz
je
mov
sar
pop
scas
fcoms
or
lahf
dec
bound
cmp
out
mov
les
mov
pop
int
jg
test
xchg
push
popa
out
sbb
xor
mov
or
outsl
rcll
inc
push
push
sbb
lods
sbb
scas
jnp
add
mov
inc
es
pop
push
pop
call
in
mov
sar
and
lds
mov
push
or
pop
outsl
jge
push
scas
add
cmp
push
mov
shll
and
pop
mov
dec
pop
out
test
iret
mov
jnp
xor
jp
aaa
and
popf
fisttpl
je
xchg
sub
addr16
add
add
cld
push
stc
arpl
fildll
jmp
out
test
or
sbb
cmp
pop
and
cmp
pop
mov
neg
mull
int
mov
pop
sub
and
clc
jnp
adc
cmp
inc
pop
push
shlb
and
or
into
push
stos
dec
jb
pop
fs
sbb
pop
cmp
mov
xchg
ret
fists
xchg
xchg
fxch
pop
jge
aad
mov
jo
aas
fs
mov
cltd
or
std
mov
repnz
dec
ljmp
sarb
add
inc
es
mov
hlt
dec
add
loope
mov
mov
inc
mov
rcll
xchg
dec
jle
mov
sub
push
xchg
ret
and
and
adc
push
lret
nop
lahf
xlat
dec
cmpsl
xchg
dec
test
or
cwtl
push
xorl
js
in
test
dec
push
in
xchg
out
jle
xlat
movsb
shlb
push
lods
jp
dec
push
scas
mov
into
test
dec
arpl
mov
mov
mov
sti
add
or
stos
mov
out
mov
pop
xchg
mov
dec
xchg
cs
je
sub
pusha
sub
es
incl
rcl
idivb
jl
clc
int
and
xchg
das
test
out
mov
iret
stc
mov
fistpll
mov
push
mov
mov
mov
adc
push
jae
xchg
sbb
scas
popa
sub
js
cmp
and
call
insb
cmpsl
sbb
daa
cmp
xor
test
sub
and
mov
lods
sub
fnstsw
push
aam
loop
in
push
inc
stos
or
xor
call
stos
mov
ja
es
stc
dec
jmp
xor
sar
cmp
push
loop
xchg
lret
jmp
push
jecxz
sbb
mov
sti
cmp
mov
daa
aad
dec
push
mov
insl
push
mov
xchg
mov
ret
pop
jle
into
push
scas
bound
xchg
add
push
ja
sbb
pop
or
push
adc
push
iret
js
jo
mov
and
test
nop
mov
mov
lds
fs
mov
adc
div
xorb
daa
pop
fcoms
jmp
faddl
mov
pop
pop
shll
pop
pusha
mov
into
inc
push
jp
movsl
jbe
cmp
fistpl
inc
cmp
daa
popf
or
bound
xchg
jae
fs
roll
pop
or
inc
adc
repz
lods
pop
mov
lea
mov
mov
adc
push
mov
push
int3
jle
jp
aam
add
push
outsl
pop
push
ss
push
push
push
xchg
push
jle
fisubl
lret
fists
or
into
stos
inc
lods
push
leave
sub
xchg
dec
push
es
fwait
sbb
jl
icebp
pusha
xor
pop
lods
cmp
into
jecxz
fucomip
cltd
or
jmp
nop
ja
adc
loopne
inc
xor
clc
daa
lock
adcb
ja
outsl
icebp
rcl
jecxz
dec
jl
inc
push
and
cmp
cmc
add
push
adcb
push
imul
out
aaa
pop
stos
or
addr16
fwait
ss
cld
xchg
mov
mov
inc
xchg
pop
push
in
ret
js
dec
in
mov
ljmp
lods
push
dec
pop
mov
cmp
dec
out
sbb
mov
imul
mov
pop
dec
out
cs
dec
fs
cwtl
movb
pop
scas
jb
iret
loopne
xchg
jae
inc
aam
mov
pop
sbb
jbe
in
jp
dec
dec
mov
pop
mov
rcr
loopne
cli
dec
out
push
sbb
int
jne
in
push
sub
nop
xor
cmp
mov
mov
adc
inc
jge
dec
xchg
mov
jno
add
aam
or
mov
out
scas
test
dec
or
mov
push
jecxz
mov
dec
int
ljmp
or
fimull
roll
shl
subb
jbe
add
int3
arpl
stos
sub
loopne
cmpsb
xchg
hlt
mov
sbb
dec
int
outsl
jp
lret
dec
and
fldcw
movsl
push
mov
mov
test
mov
xor
or
jbe
pop
xchg
push
mov
push
aaa
cmp
inc
and
sub
cwtl
dec
sbb
mov
daa
call
ljmp
pop
sub
lock
aam
sbb
cmp
lret
cmpb
xchg
pop
es
sbb
loopne
dec
mov
jge
mov
pop
pop
iret
inc
adc
popa
xchg
and
loopne
sbb
cmp
sbb
jno
sub
test
pop
inc
pop
add
xlat
mov
fists
mov
imul
xlat
mov
dec
sub
mov
pop
adc
cmpsl
aad
test
ja
leave
cli
call
add
mov
insb
test
sbb
inc
and
out
xlat
sti
cmpl
sbb
xchg
sub
rcl
jp
jle
fstp
pop
pop
ret
jg
jbe
in
xchg
push
xchg
out
sti
sub
or
imul
ror
lock
ret
sub
push
sub
push
test
loopne
cmp
cmpsb
inc
lret
sbb
ss
xor
cld
push
inc
xchg
scas
cmc
bound
not
xchg
in
xor
movswl
cmp
sbb
and
int3
aad
in
pusha
andl
xchg
scas
push
lcall
cmpsb
inc
mov
sbb
cld
popa
sbb
insb
loopne
push
pop
lret
fst
loop
dec
fmul
and
jl
pushf
sbb
loopew
out
and
mov
xchg
or
mov
push
stos
jae
rcrl
jg
aad
shlb
mov
jb
jae
push
sub
cli
inc
mov
mov
sbb
xchg
pop
xchg
lret
xchg
test
adc
push
inc
rol
jne
stos
or
cmc
lahf
hlt
nop
mov
lods
mov
fsubr
gs
pop
addr16
sarb
and
jbe
shlb
out
adc
jmp
cmc
ss
fcmovb
inc
jnp
inc
inc
cmp
push
js
sahf
cwtl
jb
test
outsb
xor
jo
xchg
lcall
sub
dec
outsl
int3
lods
or
adc
adc
dec
out
int
out
mul
mov
xchg
ret
in
and
inc
fwait
cli
aam
movb
xchg
lret
into
clc
mov
popf
adc
sub
push
adc
add
xchg
fdivs
nop
inc
or
add
dec
mov
xchg
sub
inc
lret
fs
sub
xchg
imul
fistps
mov
sbb
xor
mov
xchg
aaa
sbb
pop
jl
test
fldl
pop
addl
xchg
lods
sbb
test
jle
push
fnstcw
mov
cmpsl
out
popa
daa
add
sbb
and
lret
jo
pop
mov
cmp
aad
loope
cmove
lods
xchg
jmp
nop
stos
dec
fisubl
aam
movsl
xor
test
adc
mov
loopne
in
mov
push
mov
sbb
shlb
mov
clc
test
xchg
ret
fs
dec
xor
aaa
cltd
loope
in
lea
loopne
push
push
ret
lcall
out
sub
mov
add
in
mov
inc
push
lcall
jle
push
sub
adc
xor
daa
push
inc
mov
in
and
movsl
or
xor
push
ljmp
xchg
ja
adc
push
cld
pop
mov
or
stos
subl
pushf
mov
dec
sub
jb
call
jno
lods
mov
pop
pop
dec
test
cli
push
sbb
xlat
xor
negb
push
call
icebp
test
into
or
lahf
jge
mov
dec
hlt
or
xor
xchg
inc
xor
fstp
push
mov
cmp
aas
and
mov
sub
out
ljmp
test
lea
mov
dec
andb
rolb
mov
xchg
test
pop
lods
loop
or
inc
mov
out
or
xchg
jg
pop
mov
mov
inc
out
adc
xorl
insb
pop
mov
dec
jbe
outsb
enter
adc
push
out
sbb
pop
jne
fs
inc
and
adc
push
jp
in
ror
push
xlat
sub
mov
pushf
jnp
add
push
sub
shlb
addr16
cld
cmp
sbb
aaa
stos
jl
scas
mov
push
out
mov
mov
cmp
lods
movsb
mov
outsb
adc
mov
dec
sbb
xchg
fistps
mov
jge
sbb
pop
adc
frstor
mov
gs
xchg
into
std
lock
push
adc
movsl
pop
cmpsb
mov
inc
je
add
push
loop,pn
or
loope
lahf
mov
and
mov
fistpll
lret
out
dec
in
cmp
xchg
rolb
jmp
shl
fsub
dec
not
divl
jge
push
sarl
or
xchg
mov
fimuls
pop
sahf
mov
fcmovnbe
sbb
test
mov
jbe
dec
cmp
xor
leave
sti
adc
jg
inc
inc
fdivs
sbb
fwait
rcl
dec
test
cmp
xor
push
bnd
dec
sbbl
into
lods
aas
aam
cmp
and
cs
mov
add
test
shll
movsb
cwtl
inc
pop
xchg
in
jb
les
push
dec
pop
sbb
scas
fmuls
rcl
and
imul
inc
dec
adc
lock
inc
push
push
mov
shlb
pusha
and
mov
daa
je
xor
pop
cmp
std
add
fiaddl
xor
fcoml
insb
cwtl
pop
push
sbb
push
lret
dec
pop
xor
push
mov
mov
ror
mov
xor
mov
mov
data16
les
mov
mov
cmp
pop
sti
or
pop
and
xor
mov
fwait
out
inc
sub
adcb
repnz
rorl
testl
xchg
mov
fistpl
sbb
jg
sub
pop
out
daa
cmc
and
rolb
xor
or
jp
sarl
adc
in
mov
int3
jne
add
into
int
aas
push
push
lock
das
into
out
add
mov
scas
adc
les
sti
cs
or
or
xor
mov
lret
rcl
loope
jae
sub
cmpsl
sub
call
mov
add
or
sub
pusha
xchg
mov
mov
add
ds
ljmp
mov
push
les
lds
push
ja
cmp
into
inc
in
and
test
pop
mov
paddb
mov
cmp
sub
inc
clc
cwtl
jo
cmpsb
push
mov
pop
mov
push
and
dec
inc
paddsw
xchg
stos
jg
mov
lret
ret
xchg
out
fdivp
add
mov
mov
cmp
adc
sbb
pop
out
cmp
jno
aam
xchg
das
ret
ja
cmp
pushf
data16
insl
xchg
addl
shl
mov
imul
and
xchg
adc
cwtl
leave
lcall
add
xlat
mov
int3
xchg
and
jmp
inc
mov
fstps
imul
xor
push
sub
xchg
in
aas
and
add
sarb
or
sbb
jecxz
into
or
push
aas
ror
add
nop
sub
dec
and
push
inc
sub
mov
mov
lcall
jbe
ret
out
adc
or
inc
fstpt
xchg
rcl
movsl
jns
push
aas
stos
cmp
jbe
imul
sub
stc
sahf
dec
fxam
push
daa
sub
add
push
or
imul
jl
call
daa
and
push
loop,pt
jge
cmp
cli
fwait
lcall
mov
into
cmpsb
int3
xchg
mov
in
repnz
iret
popf
pop
scas
pop
aaa
jle
lock
int3
dec
fmuls
add
jb
arpl
mov
lret
and
nop
lcall
lods
test
push
fcmovnbe
jno
mov
jmp
sbb
pop
push
and
lret
out
dec
and
clc
inc
iret
dec
dec
insb
xchg
adc
cmpl
inc
adc
movsl
dec
sbb
mov
mov
in
jns
orb
xchg
push
mov
inc
lcall
clc
add
or
shr
ja
jbe
cltd
xrelease
pop
push
inc
mov
or
xchg
adc
add
mov
pop
and
cmpsb
mov
sbb
mov
adc
dec
pop
jns
dec
push
xchg
in
mov
or
mov
mov
push
add
enter
sbb
and
pop
pop
xchg
dec
mov
addl
sub
cmp
das
xor
pushf
or
repz
sub
lods
xchg
push
jp
out
xchg
jmp
sub
inc
clc
sbb
out
sahf
nop
xchg
mov
iret
or
mov
pop
xor
data16
and
shll
sarb
ret
clc
adc
sahf
fnstenv
data16
mov
mov
dec
jge
add
add
cmp
jmp
mov
mov
aad
sub
jmp
jne
pop
out
adc
sub
fistpl
jns
pop
stos
mov
pop
das
mov
cmc
mov
xchg
loope
in
ljmp
add
push
repz
sub
sbb
jbe
jo
inc
sarb
or
fs
repnz
cwtl
mov
test
aad
lret
sbb
out
jp
stos
mov
mov
sub
movsl
es
push
call
inc
mov
lock
dec
inc
sti
insl
xchg
into
push
xchg
push
in
cmp
test
xchg
rcrb
scas
arpl
pop
inc
lret
and
xor
xlat
mov
out
dec
aam
add
lret
and
jbe
pop
out
and
mov
jecxz
aas
lahf
call
xor
xchg
into
xchg
xchg
ljmp
lret
int3
iret
inc
cmpsl
push
add
push
aad
movsl
ret
repz
xor
notl
xor
or
sbb
xchg
rolb
das
test
ljmp
push
dec
dec
push
sbbl
rorb
shll
into
in
mov
dec
cmp
xchg
lret
dec
jp
imul
addr16
and
fsubl
ret
rcll
ret
sahf
mov
les
inc
orb
cmc
ja
jb
int3
int
aaa
push
and
sub
pushf
mov
push
jge
xor
pop
in
xchg
pop
rcll
imul
loope
adc
shrl
out
and
xor
pop
push
rcr
cmpsl
push
test
xchg
mov
ret
addb
sub
aas
mov
call
mov
sub
fdivrl
sbb
jecxz
out
scas
add
outsb
cmp
lret
int
aad
sub
aaa
jnp
mov
dec
cwtl
mov
lods
mov
imul
ret
mov
mov
mov
cmp
aam
xchg
mov
inc
out
outsb
fldl
push
xchg
cmpsl
sbb
lods
or
into
hlt
out
jge
roll
xchg
jno
testb
xlat
dec
fisttpl
sub
push
stos
icebp
testb
or
mov
lar
cmp
pusha
je
xor
aam
push
imul
sub
mov
das
mov
add
fstl
mov
mov
arpl
xor
jecxz
call
repnz
je
cmp
std
adc
dec
faddp
or
cmp
test
insl
imul
cmp
out
jl
push
testl
jle
ret
mov
dec
fstl
loopne
mov
mov
lahf
daa
jp
mov
pop
add
lret
adc
out
push
xlat
push
adc
pop
int3
mov
fstpl
cld
addr16
imul
fcoms
enter
sbb
repz
insb
movsl
jb
imul
jne
out
imul
xlat
jp
cmp
dec
push
pop
test
mov
movsb
dec
hlt
cwtl
jb
inc
out
pop
pop
fists
sahf
popf
push
or
into
mov
repnz
dec
icebp
cs
aam
push
xchg
sarl
fcoml
xchg
xchg
sti
pop
mov
dec
xchg
cmpsb
or
leave
int3
xchg
xor
lahf
inc
nop
addr16
pushf
mov
aaa
xchg
jp
cmp
clc
push
pop
es
std
jbe
mov
cmp
arpl
in
into
pop
enter
mov
ljmp
cmc
in
xchg
test
mov
mov
or
jnp
fcom
cmc
add
loope
clc
test
js
shll
add
cmpsl
or
into
pop
adc
cmp
fistpll
scas
or
jne
lahf
add
fidivl
push
add
jl
inc
nop
and
adc
cmp
sbb
mov
mov
lret
jle
sub
arpl
fprem1
xchg
insb
dec
pusha
sbb
fcom
imul
inc
mov
xchg
test
mov
xchg
subb
pop
add
repz
into
in
scas
lret
scas
clc
test
loope
jnp
xor
dec
cmp
push
inc
jo
xorl
nop
ret
insb
xchg
rolb
mov
pop
or
rcl
mov
lock
pop
insb
sbb
push
js
mov
inc
aas
or
adc
xchg
pop
insl
lea
dec
and
mov
adc
cmp
imul
add
aam
and
lret
push
sbb
inc
inc
ret
cmpl
ljmp
movsl
test
ror
aas
dec
movsl
xchg
imul
sbb
mov
fldt
rcl
fld
jl
xchg
lcall
add
cwtl
rorb
pop
inc
xor
jno
mov
sub
ds
in
adc
stos
pop
orl
scas
rcl
mov
sbb
or
xchg
dec
jmp
inc
cmp
bound
fistl
lods
xor
fldlg2
enter
add
jnp
jnp
addb
out
lods
js
call
inc
inc
addl
sub
test
inc
dec
dec
enter
and
and
and
jns
fsubrs
cmp
or
sub
pop
lods
jo
xchg
lret
push
or
jnp
sub
aas
inc
push
pusha
sbb
jge
and
rcl
and
sub
cmp
xorl
mov
add
rcl
jp
or
fs
enter
pop
jne
in
inc
sub
aas
ss
aam
adc
pop
pop
adc
mov
adc
or
fmull
mov
movsb
ja
jo
mov
rcl
mov
fisubl
lods
ret
push
mov
fs
scas
pop
xchg
test
jp
loop
iret
js
and
lock
pop
jecxz
mov
dec
rorl
es
xchg
and
mov
dec
add
push
int3
mov
pop
ret
xchg
push
or
jle
js
jno
xchg
adc
dec
pop
and
sub
sub
test
dec
pop
and
adc
je
push
les
hlt
push
sub
push
popa
fsubl
aas
push
push
push
leave
jmp
daa
fisubl
sbb
pop
add
out
stos
pop
dec
ds
dec
movb
dec
lea
pop
ss
rep
fdiv
push
pushf
daa
xor
out
xlat
push
pop
or
cwtl
and
aam
mov
sbb
xchg
push
push
fsts
sbb
rcl
mov
in
push
rcl
or
sbb
and
pop
call
shrl
fwait
sbb
sbb
insl
shl
xor
lret
push
or
and
jae
jl
jbe
inc
out
xchg
pop
cmp
ds
push
dec
adc
and
dec
mov
xor
xor
into
shl
mov
dec
js
insl
nop
xor
inc
ret
popa
stc
test
out
push
mov
sbb
fcmovnbe
imull
add
sbbl
and
popf
push
leave
or
adc
loopne
in
iret
out
adc
mov
cld
popf
mov
dec
enter
lret
mov
in
outsl
mov
and
mov
mov
ja
imul
nop
lahf
dec
lret
pop
cwtl
js
aas
repz
in
pusha
xor
adc
sub
cld
inc
les
fcmovnb
gs
or
mov
pop
jne
push
jns
pop
xor
aam
test
push
loop
jp
mov
das
sub
mov
mov
xchg
int
dec
into
pop
es
imul
std
xchg
mov
jno
cli
out
xchg
add
push
fildll
aas
jecxz
mov
test
sbb
or
pushf
or
out
out
fimull
arpl
pusha
outsl
pop
inc
loope
xchg
inc
lds
adc
rcrb
in
sub
pop
mov
popf
stos
cmpsl
inc
sbb
subl
iret
mov
sub
push
mov
add
cmp
mov
cmp
clc
mov
sub
ret
es
leave
pop
sub
inc
pop
shll
adc
clc
adc
ret
fwait
and
cmp
xor
jmp
push
pop
sbb
mov
jne
push
mov
loopne
cmp
shlb
lcall
jmp
xchg
cmp
inc
mov
add
testb
push
mov
test
sti
movsb
repnz
int3
sahf
cmp
cwtl
and
or
mov
cmc
mov
adc
or
jo
jmp
mov
sbb
sti
mov
les
push
jno
shrb
scas
push
lods
pop
jle
xchg
stos
out
or
pop
rep
je
rep
mov
mov
test
fldt
mov
push
fimull
mov
mov
daa
lret
nop
jns
out
cmp
faddl
or
mov
jbe
or
mov
xchg
jae
sarb
outsl
mov
loop
data16
in
sub
and
out
sahf
call
xor
clc
mov
pop
rcl
cmp
lds
add
mov
loopne
xor
dec
adc
sub
sbb
add
mov
or
cwtl
cmpsl
mov
jbe
cmp
ss
jno
fldt
mov
lret
gs
mov
insl
outsl
and
int3
data16
xchg
stc
mov
das
insl
add
shll
pop
adc
sub
mov
orl
arpl
xlat
test
adc
insl
shll
mov
inc
and
jbe
inc
jnp
or
sub
das
ds
mov
es
mov
mov
scas
imul
testb
inc
mov
sarb
sahf
sbb
jbe
push
mov
jle
out
lea
or
sbb
scas
inc
rcr
sub
mov
sbb
lret
jno
jbe
pop
fcmovnbe
clc
popa
xlat
mov
leave
int3
or
mov
mov
cmpsl
addr16
stos
push
xchg
int3
mov
fadds
jbe
mov
and
cltd
mul
inc
jbe
xchg
sti
jg
ror
adc
leave
xor
addr16
daa
mov
mov
or
mov
sbb
and
dec
and
out
outsl
mov
stos
jp
push
dec
jno
aaa
test
sbb
cmp
cmp
je
adc
lret
xchg
jbe
rcr
add
test
jae
adc
cmp
sub
or
xchg
outsb
xor
arpl
mov
data16
into
les
jae
test
loope
imul
or
adc
xchg
sub
or
add
mov
data16
mov
or
dec
add
repnz
ret
cmp
dec
pop
dec
nop
mov
test
lret
fsubl
cmp
xor
add
sbb
fsubs
std
jmp
js
int
or
xor
aad
repz
inc
xchg
pusha
mov
mov
movsb
push
rcrl
sub
ss
rcrb
loopne
test
pop
jecxz
fsubrs
inc
and
push
stos
pusha
or
push
inc
add
aam
mov
sub
negl
stc
cmp
xchg
jl
sub
addr16
mov
push
in
fisubl
decl
xor
jecxz
or
imul
mov
xchg
andb
xchg
or
sahf
xchg
out
inc
adc
ja
jecxz
cmpsl
mov
pop
inc
ss
cwtl
test
mov
pusha
jne
cmp
sub
ljmp
dec
mov
xchg
sbb
sub
cltd
dec
outsb
xchg
out
cmpsl
loop
arpl
mov
adc
sbb
xor
jne,pn
mov
fistps
xor
aam
mov
pop
insb
into
leave
out
mov
test
sub
adc
or
dec
pop
jnp
ja
ror
lret
adc
out
inc
xor
fdivr
not
mov
and
bnd
jle
cs
out
sbb
mov
sub
push
lock
sub
jae
lds
jne
cs
repz
dec
push
lods
data16
pop
mov
mov
nop
xchg
xchg
mov
or
test
mov
sti
adc
ret
or
fbstp
pushf
and
inc
divb
popf
ljmp
mov
imull
or
outsl
lahf
add
arpl
cwtl
mov
dec
icebp
push
or
jo
pop
xchg
clc
rorl
jne
mov
shl
add
xor
test
pop
cmp
sub
xchg
outsl
pop
inc
nop
scas
or
daa
mov
ret
int
push
mov
mov
out
mov
xor
dec
adc
mov
pop
arpl
push
adc
xchg
jns
dec
jl
mov
mov
xorb
test
jmp
data16
sti
inc
mov
pop
mov
and
dec
xchg
ja
pop
gs
std
in
dec
inc
or
mov
outsl
jne
push
in
jmp
nop
ret
push
sbb
pop
sbb
out
ret
addr16
xor
xor
inc
jp
inc
lret
inc
pushf
push
andb
into
das
int
cmc
xor
sub
xor
out
sti
xor
xorb
and
ss
fucomp
cmpsb
mov
jp
jbe
imul
push
push
int
add
aam
incb
inc
xor
adc
sbb
xchg
jo
push
cmp
add
mov
js
inc
scas
mov
jns
or
add
shrb
cmp
sbb
mov
jle
or
add
adc
pop
push
jns
jmp
cld
popa
mov
icebp
add
mov
dec
fwait
pop
or
push
jle
mov
dec
in
cltd
xchg
ret
lods
out
imul
sbb
or
inc
or
or
xchg
dec
add
and
jge
jecxz
cmpsl
lea
int3
int
nop
es
sub
stc
sti
mov
subb
into
rol
int
dec
adc
insb
fwait
out
dec
shll
or
rcr
mov
into
xor
push
push
push
xchg
push
jae
lock
and
data16
sbb
jnp
inc
lods
insl
xchg
mov
push
lret
cltd
push
rorl
adc
pop
pop
stos
push
xlat
dec
sar
xchg
aad
mov
xchg
or
popa
or
int
push
pop
and
pop
cld
out
bound
mov
pop
sahf
mov
and
repnz
je
and
ljmp
jno
stos
sub
sub
sbb
dec
lock
mov
and
out
jae
fs
dec
jmp
xorl
test
jle
data16
popf
je
test
mov
arpl
push
test
add
inc
fidivs
push
jp
jmp
pop
sarb
fstpt
mov
call
add
pop
aam
jbe
pop
aad
adc
jp
jmp
out
pop
addl
or
int
or
push
sub
aad
xor
ja
fildl
clc
mov
into
push
lahf
xchg
pop
push
push
fwait
inc
cmp
inc
je
pop
or
test
jecxz
jne
and
out
xchg
pop
cmp
jo
sub
cld
icebp
cwtl
int3
aam
sub
and
sub
pop
cmp
loopne
ret
out
xchg
test
popf
inc
loope
jl
in
mov
push
std
jbe
scas
stos
lret
lret
cmc
out
xor
enter
or
pop
or
dec
jmp
lds
aaa
lret
cmp
popf
es
cmp
int
clc
cmpsl
hlt
push
insb
add
dec
push
adc
cmova
test
repz
mulb
mov
out
in
cmc
xor
test
jmp
add
push
fcomi
ret
mov
stc
add
pusha
fdiv
rcrl
and
mov
xlat
imul
dec
xchg
std
sbb
insl
aad
push
xchg
and
push
mov
cmp
addr16
dec
repz
mov
lods
cmp
xchg
lea
push
not
mov
mov
mov
out
sub
notl
fsts
pop
fbld
pop
pushf
ficoms
cmp
popf
aam
xor
stc
ljmp
xor
push
jae
popf
dec
adc
cvtps2pi
pusha
jno
cmpsl
xor
push
mov
test
jnp
into
push
in
mov
push
insb
jae
push
sbb
test
cltd
and
scas
sbb
test
fcom
out
insl
xor
test
call
adc
fdivrs
aaa
pop
inc
push
push
lds
and
scas
jno
nop
shl
xchg
cmp
jmp
call
enter
pop
roll
sub
mov
sub
lcall
and
dec
adcl
mov
enter
or
mov
cmp
dec
pop
iret
ss
mov
mov
pop
xor
sarb
dec
aad
push
orb
rorl
pop
loop
and
xor
clc
mov
shlb
adc
mov
xchg
shrl
pop
movsb
es
fldl
cmp
lahf
in
and
ficoml
out
sub
int
xchg
in
imul
and
mov
js
aas
sbb
std
pusha
pop
out
imul
faddl
mov
pushf
andl
add
cmpsl
fiaddl
cld
dec
sub
pushf
stos
in
call
fs
mov
das
sbb
push
divb
in
in
xchg
scas
push
sub
jl
and
mov
out
xchg
in
adc
into
dec
xchg
push
jbe
xchg
dec
jo
jbe,pt
cmp
mov
jns
loop
jmp
hlt
sbb
scas
cwtl
push
lds
add
sub
testb
es
push
into
movsb
stos
leave
mov
xchg
xchg
or
fdivr
pop
or
jmp
sbb
sub
in
jb
dec
outsl
mov
jmp
mov
sub
jle
adc
jmp
mov
push
int
push
aas
bound
std
xchg
or
dec
push
mov
lret
sub
inc
out
bound
mov
into
mov
mov
cmpsb
ss
xchg
popf
sub
jne
sbb
jno
icebp
and
cmp
sub
mov
xchg
push
jae
mov
jne
mov
in
mov
push
bound
fstpt
aas
and
lds
lret
test
inc
xchg
scas
add
leave
lret
daa
push
int
cmp
mov
add
jecxz
hlt
das
loopne
push
inc
iret
and
into
mov
push
js
sbb
mov
jbe
pop
xchg
sahf
outsl
addb
add
cmpsl
loope
daa
data16
pop
into
xor
sbb
adc
inc
lret
xchg
dec
fdivrl
xor
jbe
dec
shl
stos
incb
insb
lds
into
fwait
xor
mov
pop
icebp
int
xchg
mov
xchg
mov
pop
test
jnp
cs
sbb
sub
pop
jb
lahf
cwtl
xchg
push
lret
lods
xchg
mov
dec
push
in
jno
mov
movsb
and
aam
sbb
xchg
jl
shll
cmpsl
lret
pop
xchg
sub
jbe
decb
sub
nop
and
push
hlt
inc
lea
mov
cmp
pop
push
push
push
ror
jb
incb
xor
inc
jbe
sbb
shrb
pusha
ljmp
push
dec
sub
cltd
mov
push
mov
popf
xchg
dec
pop
mov
xor
dec
xchg
es
mov
cmp
adc
inc
mov
inc
pop
stos
xlat
mov
sahf
fcom
mov
in
and
dec
add
dec
testb
mov
adc
pop
iret
pop
inc
movsl
xor
arpl
sarb
repz
fcoml
and
in
popa
and
test
cmc
ret
ds
dec
stc
mov
lock
out
iret
jecxz
jbe
mov
jl
or
int3
dec
in
adc
mov
in
pusha
js
jae
push
xor
jnp
clc
xlat
mov
mov
rclb
das
pop
jae
pop
pop
xlat
test
pushf
mov
mov
imul
mov
jae
dec
pop
adc
cmpsl
jmp
lock
jge
lcall
or
adc
push
inc
pop
dec
mov
mov
lods
sbb
movsb
sub
add
nop
cmp
xchg
pop
leave
mov
loopne
push
add
sub
aam
pop
push
xacquire
or
sahf
push
imul
jno
mov
adcb
insb
mov
jle
xchg
scas
jecxz
aaa
lcall
push
test
adc
mov
pop
into
jns
mov
cli
or
cmpsl
add
and
inc
push
mov
sub
inc
movsl
aam
add
lahf
or
loop
push
shll
sbb
push
xlat
fsubl
dec
or
dec
jb
dec
jl
gs
lods
ret
mov
repz
pop
lcall
xorl
shlb
daa
mov
loop
outsl
cwtl
jg
loope
mov
hlt
sbb
sub
fwait
rolb
jo
addr16
jge
mov
xor
rcrb
mov
dec
test
or
mov
test
hlt
or
orl
xchg
fcmovnb
cld
pop
pop
dec
mov
dec
shlb
lods
int3
push
nop
fimuls
es
pop
dec
in
adc
add
jb
cmp
enter
xorl
inc
test
dec
into
cmp
enter
cmpsl
je
sbb
xchg
jecxz
stos
xor
and
lock
popf
loop
push
stc
add
cmp
or
push
into
push
out
xor
imul
xchg
loope
insb
pop
sbb
outsb
or
push
andb
xchg
xchg
cmp
cs
mov
sub
dec
das
jmp
cmp
fwait
inc
cmpl
repnz
cmp
scas
sarl
cld
shr
outsl
test
add
inc
in
cbtw
inc
and
nop
lahf
pop
arpl
out
xchg
jns
xchg
into
arpl
xchg
add
popf
dec
test
js
fcompl
cmpsb
ret
lods
iret
xchg
ljmp
mov
pop
pop
add
and
jnp
int
or
test
loopne
lods
out
xchg
test
pop
dec
enter
lea
mov
xor
xchg
dec
fs
gs
push
repnz
push
push
in
cmp
rol
setl
xchg
dec
outsl
mov
sbb
push
push
popa
xlat
sub
test
xor
aad
ret
aam
jp
adc
rcll
dec
into
jno
lahf
loop
mov
pop
std
push
cmp
sub
jmp
cmpsb
xchg
jae
fmulp
or
rol
push
jmp
pop
dec
lahf
test
into
push
fldl
jo
xchg
and
cmpsb
dec
repnz
push
inc
cmpsl
nop
mov
gs
daa
add
and
push
lods
xor
iret
scas
std
mov
sbb
jne
outsl
movsb
clc
xchg
mov
xchg
dec
pop
shll
fisttpl
lds
push
xor
mov
xchg
imull
js
fiadds
daa
cmpsl
cmpsb
scas
in
cwtl
mov
add
adc
adc
cmp
loope
ljmp
je
out
adcb
roll
fldt
dec
cmpsl
xor
into
in
lret
jg
pushf
xchg
sbb
sbb
lret
cmc
fisubrl
pop
push
xchg
jo
outsb
arpl
mov
cmp
lret
jl
inc
sbb
jbe
mov
mov
xor
dec
dec
mov
push
sahf
nop
in
lea
mov
and
push
mov
imul
ljmp
rcl
rep
jl
sub
and
mov
ljmp
int3
or
push
iret
jnp
dec
test
les
rcl
sbb
add
add
arpl
daa
addr16
mov
push
lcall
rcl
test
jge
repz
std
pop
fst
stos
inc
je
scas
repnz
popf
inc
ss
cmp
mov
mov
dec
leave
adc
js
sub
or
shrb
imul
lea
cmpsl
and
jmp
outsl
adc
push
mov
es
xchg
mov
push
fimuls
ss
imul
outsb
and
add
xchg
shrl
rcl
loop
mov
std
jg
fildl
addl
arpl
xor
in
push
bnd
xchg
scas
test
mov
mov
lcall
rcr
insb
jmp
xchg
je
push
mov
push
enter
jb
and
cmp
out
mov
pop
xlat
in
mov
out
outsl
jp
or
push
push
cmpsb
xchg
shlb
mov
jbe
int3
add
xchg
int
jne
fistpl
dec
pop
js
push
push
shlb
aam
es
pop
mov
mov
xor
sbb
push
or
rolb
pop
xchg
lock
scas
sub
xor
test
or
dec
enter
inc
inc
std
adc
sub
int3
ss
and
pusha
loopne
stos
mov
push
xchg
in
or
ret
jle
dec
or
test
add
int3
ja
mov
adc
movsb
cs
ljmp
repnz
sti
test
orl
mov
mov
insb
imul
mov
mov
imulb
or
sbb
lods
sbb
dec
push
int3
adc
fnstenv
fmul
mov
test
pop
mov
and
into
das
ss
inc
les
jae
ja
add
aam
add
mov
mov
repnz
and
cmp
jnp
pop
fstpl
movsb
mov
daa
bound
repnz
mov
pop
negb
fwait
or
jmp
push
mov
mov
mov
shll
ret
jge
xchg
sahf
imul
xchg
adc
xchg
pop
out
sbb
or
xchg
aam
lcall
inc
mov
fldenv
mov
scas
fildll
inc
in
adc
out
dec
imul
pop
data16
scas
push
cmp
je
jae
jbe
dec
mov
pop
sub
mov
aad
xor
push
cmp
adc
rcl
dec
imul
add
push
and
in
int3
mov
cwtl
sahf
test
shlb
adcl
sub
popa
fwait
jb
pop
in
xchg
push
inc
jp
ret
stos
pop
bound
cmpsl
arpl
mov
imul
mov
inc
push
outsb
repz
ret
divl
inc
adc
fwait
and
pop
pop
sbb
push
fiadds
in
pop
add
push
mov
iret
lret
mov
sbb
ror
push
mov
shlb
sti
test
insb
dec
push
jl
and
fwait
xor
inc
push
dec
add
mov
mov
mov
dec
insl
pop
repnz
sub
mulb
hlt
cmc
sbb
dec
dec
iret
sub
ret
push
sbb
xadd
xchg
test
into
stos
or
addr16
sub
mov
pop
fiaddl
negb
cld
adc
cmc
cmpsb
stos
mov
xor
jecxz
mov
popa
addr16
mov
lret
outsb
cmp
fs
xor
rcrl
mov
sub
scas
dec
sub
xlat
add
or
aad
lret
jae
es
push
xor
fadd
int
arpl
xor
cli
sub
adc
mov
fdiv
fistpll
jbe
outsb
lret
std
add
xchg
pop
add
gs
xchg
add
push
push
sub
push
int
adc
das
adc
mov
cli
rolb
pushf
inc
cltd
out
cmp
adc
into
and
push
lret
xchg
jae
xchg
sbb
addb
mov
rorl
dec
jmp
push
test
in
mov
jnp
repz
imul
mov
sub
iret
push
out
and
aam
push
xor
jg
fiadds
pop
push
mov
repz
cltd
jmp
and
xlat
sub
andl
subl
xchg
pop
mov
lock
cmpsb
fucom
mov
pop
pop
dec
jge
insb
mov
jle
adc
jl
push
xor
lds
imul
pusha
dec
int3
pop
into
or
in
sbb
jbe
int3
loopne
ret
je
jno
sub
ficoms
add
adc
lods
mov
push
into
jns
clc
xor
nop
dec
cwtl
test
sbb
rcrb
sbb
push
push
addr16
push
pop
push
mov
scas
dec
loope
push
mov
insb
movsl
push
int
pop
jg
xchg
push
js
xchg
das
mov
lret
jne
adc
jecxz
or
cltd
aam
sbb
stos
add
add
push
mov
neg
ficoms
dec
mov
add
mov
xchg
mov
minps
jmp
inc
ret
lods
lods
push
lret
cmp
and
add
fbld
or
xchg
sti
loop
xlat
jmp
cmpsb
and
adc
push
adc
or
mov
cmpsl
clc
sti
into
push
rorb
test
das
dec
cwtl
out
inc
add
push
ss
data16
or
mov
aaa
cs
sub
js
movsb
and
fidivl
stc
ss
pop
dec
iret
loop
mov
cld
mov
stos
jge
and
lahf
sub
add
fmull
out
shrb
lods
xchg
or
dec
out
add
pop
cmp
or
in
mov
divl
sti
xchg
jno
xor
xchg
mov
ds
dec
mov
test
mov
mov
stos
lods
jb
xor
insl
aad
into
xor
push
jmp
fmuls
aas
ret
xor
je
negl
enter
inc
xchg
iret
mov
cs
fs
jge
jl
movsl
sbb
dec
mov
inc
ret
push
ljmp
test
roll
or
scas
lcall
sub
mov
mov
addr16
cmpl
popf
inc
push
jne
out
repz
insb
stc
sbb
sahf
icebp
xchg
pop
ds
into
mov
je
jne
out
mov
mov
and
out
xchg
jg
mov
mov
out
xor
or
adc
jb
mov
inc
fldt
insl
test
lcall
lahf
ss
xchg
adc
out
mov
lea
sbbb
sbbl
inc
out
dec
mov
mov
jmp
sbb
inc
ja
fldl
lret
inc
mov
into
dec
add
add
jmp
cli
inc
cmp
xor
dec
pop
je
addr16
inc
mov
inc
dec
and
mov
aad
xor
out
jo
in
fildll
fsubrs
add
imul
push
andl
dec
push
dec
enter
push
mov
mov
rol
xlat
in
mov
lock
xchg
pop
lds
dec
pop
bound
aas
fistl
icebp
xchg
out
or
and
stos
ret
push
sub
sbb
mov
daa
inc
fcmovnbe
fists
push
fidivrs
jnp
pop
sub
scas
or
pop
icebp
add
or
dec
dec
xchg
dec
xor
jb
mov
mov
xor
or
sub
mov
xor
push
out
aaa
aam
in
loope
rcll
add
test
arpl
fsubs
into
lret
lods
sahf
inc
sub
adc
repz
jno
jmp
sti
inc
mov
cmp
lret
popf
xchg
lahf
ror
data16
fxch
lcall
mov
scas
lds
stos
imul
mov
fidivl
or
fdivrs
push
sub
mov
pop
inc
popa
and
jg
add
xchg
push
fmulp
push
pop
cld
stos
mov
aas
dec
inc
loop
int3
in
daa
pop
pop
ds
xchg
cli
out
mov
sbb
dec
push
je
pop
outsb
into
mov
mov
xchg
mov
xor
stos
xchg
dec
clc
pop
mov
pop
jne
mov
out
pushf
sahf
andl
pop
push
or
pop
out
divb
push
adc
mov
in
jns
or
inc
cmc
push
into
orl
hlt
cwtl
push
popa
sti
xchg
dec
fdivl
jle
jmp
mov
iret
or
push
fcmovu
pop
outsl
or
jbe
pop
inc
jb
ja
push
inc
dec
repnz
adc
and
dec
cmpsb
in
xchg
push
shrb
adc
mov
pop
dec
xor
mov
xchg
push
lahf
lret
in
sbb
cmp
jecxz
adc
add
sbb
xchg
cmpsl
into
out
pop
mov
ret
jecxz
fidivs
push
dec
inc
shr
repnz
vpmadcswd
pop
imul
xlat
nop
xor
jo
flds
gs
aaa
dec
xchg
push
int3
fistpl
add
scas
xor
lock
mov
int3
jbe
test
push
dec
outsl
insl
sub
rcl
inc
inc
loopne
arpl
inc
push
adc
mov
mov
xor
and
add
std
aas
lret
mov
mov
and
xchg
push
mov
xor
jl
inc
stos
lods
mov
jg
fst
bound
cmpsl
push
loopne
mov
lods
lea
xchg
test
xor
or
notb
jmp
outsl
and
out
jbe
movsl
cmpsb
xor
push
loop
fcoms
int3
push
and
inc
addr16
dec
stos
fisttpll
cld
or
lods
inc
cltd
je
add
mov
clc
mov
mov
xchg
fadds
test
rolb
lret
repnz
fdivrl
xchg
xchg
mov
jae
or
in
ljmp
xor
jp
adc
pop
mov
mov
into
pop
mov
out
repz
sub
inc
imul
xchg
or
mov
cltd
and
insb
fs
cmp
mov
xchg
inc
xchg
or
out
xor
pop
mov
in
jae
cmp
leave
push
mov
mov
mov
mov
mov
jmp
jp
or
andps
rcl
stos
cmpsl
fwait
gs
nop
lods
jecxz
lret
dec
xchg
adc
fisttpl
adc
movsb
rcll
jnp
push
mov
rorl
fnstsw
mov
or
addr16
fidivs
lock
out
shrd
lret
mov
cmp
sti
mov
inc
cmc
cwtl
dec
dec
daa
push
mov
cmpsb
fiaddl
add
inc
aad
ror
imul
adc
jmp
popa
fs
inc
or
push
jecxz
aas
jb
icebp
es
lock
push
push
adc
push
ror
loopne
adc
sub
xlat
aaa
or
sub
mov
push
dec
mov
loope
subb
sub
daa
imul
movsl
mov
pop
cld
adc
cli
stos
xchg
inc
iret
jnp
nop
imul
sub
in
imul
es
loopne
lcall
dec
ja
loopne
popa
pop
pop
jno,pt
inc
data16
and
mov
and
jmp
push
scas
lret
test
and
jnp
out
mov
inc
mov
adc
fbstp
jno
fwait
jbe
in
fcomps
movsl
inc
pop
adc
ficoml
pop
test
scas
cmc
or
xor
xchg
std
cld
inc
inc
jle
mov
mov
pop
mov
adc
mov
adc
mov
iret
mov
js
lcall
mov
adc
leave
jns
or
xchg
lods
cmp
adc
fcmovnb
imull
mov
vmwrite
mov
mov
leave
mov
test
pop
or
inc
adc
cs
loopne
orb
mov
xor
inc
in
repnz
add
add
jecxz
out
enter
bound
sbb
pop
sub
mov
inc
push
js
aas
out
cmp
pop
repz
and
mov
jge
xor
ja
fsubrs
outsb
pop
call
in
push
mov
adc
out
push
popa
mov
and
or
push
out
iret
dec
jl
push
sub
inc
fcom
cmp
or
lret
cmp
hlt
and
out
and
push
inc
push
xor
mov
xlat
xchg
loop
popf
mov
leave
push
sbb
rol
sti
fwait
dec
sub
mov
repz
xor
dec
loope
push
cli
rcl
fstps
or
and
sbb
inc
mov
test
mov
cld
es
dec
jno
imul
lret
xchg
clc
int
xchg
sub
add
add
xor
decb
xlat
arpl
xorb
xchg
push
sub
or
mov
sti
xchg
jle
lret
sbb
adc
mov
jg
mov
rcrl
les
push
dec
ret
xchg
gs
subb
cmc
push
insl
mov
sub
pushf
and
lcall
push
and
mov
dec
into
popa
loope
fistpl
out
faddl
push
sub
jl
xchg
outsl
mov
aaa
mov
ljmp
imul
pop
mov
popa
aaa
sarb
jbe
xchg
hlt
lret
addr16
jbe
scas
shll
mov
dec
dec
insb
cwtl
push
dec
push
pushl
repz
and
or
rclb
mov
mov
and
ljmp
cwtl
mov
and
fidivrl
aas
pop
pushf
data16
push
push
movsl
pop
sbb
push
fs
cmp
sti
lcall
hlt
adc
cmp
in
jg
xor
sahf
push
xchg
adc
clc
movsl
arpl
sbb
shr
pop
xchg
xchg
fadd
sub
xchg
and
adc
cmp
xchg
ss
inc
dec
adc
mov
xchg
loop
dec
ret
adc
push
add
insb
lcall
add
fnstsw
fnstenv
into
lea
inc
dec
faddp
lcall
cmc
inc
adc
rol
jo
fucomip
lods
lds
cmp
sbb
xchg
sbbb
loope
and
movsl
addr16
and
jl
stos
jp
sbb
adc
cmp
mov
mov
adc
and
test
stos
in
or
pusha
or
in
das
inc
xchg
push
cmc
insb
in
cmc
xorb
push
xchg
test
bound
lcall
repz
mov
fs
jecxz
out
daa
cmp
call
push
dec
xlat
pop
or
test
imul
dec
mov
jno
out
jle
fistps
int3
mov
add
cmp
movsl
xchg
and
lret
dec
jge
sti
stos
inc
cwtl
in
sahf
sbb
xchg
out
push
pop
lea
sub
test
test
push
loope
cmp
das
out
pop
cmp
push
cmpsl
mov
movsl
jecxz
xchg
xchg
mov
mov
mov
loopne
jno
rorb
iret
mov
divl
pushf
pop
adc
mov
xchg
mov
and
hlt
push
jge
adc
movsb
mov
popa
pop
or
cmp
xchg
xor
je
je
out
jnp
xor
addr16
jno
sbb
and
dec
pushf
xchg
rorb
movsl
cmpsl
jg
ret
xor
out
adc
xlat
inc
dec
rsm
test
fwait
lahf
addr16
popa
jp
pop
jno
cmpsb
jb
pop
and
jns
mov
aam
aas
ss
test
fiaddl
cli
stos
jg
lods
imul
sbb
scas
aam
call
push
push
adc
or
dec
pop
loope
push
ret
mov
cmp
xor
addr16
mov
add
ret
mov
negl
push
ljmp
stos
fwait
es
icebp
xchg
nop
sbb
sbb
cltd
mov
rep
xchg
jno
inc
or
out
inc
push
sub
iret
scas
call
mov
nop
adc
push
lahf
mov
jge
mov
jne
push
lock
int
bound
ret
pop
gs
dec
test
add
pop
fisttpll
int3
pop
sbb
push
xchg
mov
test
mov
jl
insl
ja
je
mov
xchg
sub
cs
jp
add
sbb
in
enter
pop
xchg
sbb
adc
xorb
cld
leave
call
fwait
es
into
pop
outsl
push
cmp
inc
lods
ss
mov
jmp
sbb
mov
push
or
mov
xor
into
mov
cmp
lret
xchg
das
jae
sahf
test
cmc
mov
dec
ffree
lret
mov
mov
hlt
fidivl
pop
cwtl
jmp
sub
js
jle
and
daa
adc
fldcw
mov
in
pop
leave
lret
pop
fldt
repz
jg
xchg
test
inc
out
ret
jle
adc
push
imul
test
shll
out
mov
adc
inc
fstp
movsl
jbe
pop
sbb
or
cmpsl
push
dec
adc
out
sub
push
test
aas
shl
xor
push
loop
pop
mov
adc
mov
inc
mov
xchg
popa
mov
fwait
mov
pop
or
popl
movsl
shlb
dec
adc
pushf
dec
mov
rcr
movsl
sbb
rorb
pop
out
into
add
sub
in
insb
inc
adc
ret
enter
int
fstpl
jne
or
xchg
lret
mov
adc
addr16
orl
ja
out
mov
xchg
imul
and
pop
ret
mov
in
pusha
xchg
sti
mov
mov
insl
arpl
sub
jg
shll
fsts
sub
ficomps
lret
xchg
fcomi
xor
cmp
mov
dec
pop
inc
rcl
xchg
cwtl
lods
out
sbb
data16
cmpsl
ror
js
jmp
not
mov
addr16
test
push
nop
xor
popf
mov
xchg
test
pop
push
lea
or
leave
mov
cmpsl
out
and
inc
negl
gs
outsl
mov
jecxz
out
rolb
addb
shrl
shl
sbb
xchg
pop
fadds
je
loope
jg
mov
pop
mov
icebp
adc
cli
popf
dec
lahf
fisttpl
mov
ret
pop
pop
push
call
add
xor
clc
pusha
jo
dec
dec
cmpsb
in
das
mov
fimull
pop
mov
js
bound
pop
std
xchg
out
repnz
jb
pop
jp
arpl
push
andb
loope
mov
sbb
in
andb
std
pop
jecxz
cmp
mov
daa
inc
outsb
cs
stos
fcmovnbe
js
lea
movsb
addr16
cmc
cltd
or
out
adc
fcmovbe
pushf
adc
dec
jmp
lods
pusha
roll
int3
imul
ds
inc
icebp
das
pop
pop
addr16
mov
inc
cs
dec
mov
push
mov
lret
mov
push
stos
pop
fldl
pop
testb
daa
outsb
mov
pop
adc
dec
xchg
mov
sbb
add
inc
test
gs
ljmp
sub
mov
mov
mov
inc
jmp
add
dec
push
push
xor
push
jnp
xchg
cmc
push
adc
mov
movsl
lods
je
cmpsl
xor
into
adc
cvtdq2ps
sbb
leave
adc
xlat
pop
dec
subb
mov
mov
in
add
push
leave
xor
cmc
test
rcl
or
xchg
lods
jbe
mov
push
push
shr
pusha
inc
clc
fldcw
push
pop
loopne
cmp
xchg
and
ds
pop
aaa
jne
mov
mov
iret
loop
add
push
lods
scas
imull
into
add
jnp
xchg
mov
out
mov
xchg
es
lods
aad
into
pushf
cmp
iret
sub
rcr
imul
xchg
mov
cmpsb
mov
pop
fcmovnu
mov
cmp
sbb
dec
mov
aaa
or
dec
and
jno
test
mov
insb
xchg
dec
push
mov
jmp
lds
jbe
inc
pop
fsubp
adc
pop
out
push
cmpsb
lret
mov
and
lods
jg
jns
fildll
inc
imul
ret
inc
movsl
addb
test
gs
xlat
xor
jae
xor
jp
cmc
test
test
cltd
mov
cmp
ds
sbb
xchg
lods
testb
aad
pusha
mov
mov
sub
addr16
test
into
dec
add
adc
sahf
ret
aad
das
lds
imul
scas
mov
leave
aad
add
cs
je
mov
call
xor
inc
scas
add
outsb
hlt
xchg
xlat
mov
add
xchg
into
inc
add
push
sbb
popa
sub
daa
mov
and
mov
fnsave
data16
into
mov
sbb
outsl
cmp
movsl
ficoms
cmc
ljmp
dec
xor
mov
sbb
test
adc
mov
xchg
pop
adc
adc
push
pop
mov
fs
test
testb
loopne
clc
rcrl
sub
pop
fwait
aaa
xor
ljmp
and
jmp
or
lcall
xchg
mov
mov
dec
loop
fmuls
test
adc
jno
popf
xchg
pushf
push
out
outsb
adc
push
test
xchg
decb
pop
and
loop
xchg
cwtl
cmpsb
mov
or
in
sub
xor
call
adc
push
adc
dec
push
imul
notrack
stos
pop
mov
xchg
push
andl
scas
sahf
xchg
outsl
rclb
mov
ucomiss
push
push
xchg
mov
leave
push
test
cmp
pop
data16
pop
iret
out
xchg
aaa
push
cmpsb
mov
std
mov
sbb
mov
rcll
das
jge
sub
xor
or
or
push
cmpsl
sub
xchg
cmp
aad
mov
jae
arpl
in
sarl
mov
jmp
mov
xchg
mov
in
push
jmp
mov
jge
pushf
insl
jne
lret
rcll
push
mov
stos
in
xor
lret
pop
xor
xchg
add
xchg
mov
push
fdivl
ja
sbb
es
add
dec
into
ret
insl
xor
sub
xchg
leave
lcall
push
repz
mov
into
sbb
adc
lods
fnstenv
mov
push
test
jmp
push
push
cmp
lret
mov
mov
inc
arpl
icebp
movsb
push
pop
jnp
push
cmp
mov
push
into
mov
or
call
sbb
sub
ja
xor
adc
push
les
pop
aam
sbb
popf
xchg
pop
mov
sbb
shlb
incl
addl
push
inc
push
outsb
adc
push
xor
xor
imul
mov
inc
icebp
pop
pop
push
sbb
mov
cmc
cli
push
push
daa
into
dec
mov
xlat
dec
add
leave
repnz
lock
xor
mov
xchg
jmp
nop
leave
mov
cli
pop
lret
and
mull
mov
dec
mov
test
imul
xor
insb
mov
hlt
add
leave
sub
xlat
aam
sbb
lret
mov
fildll
mov
xchg
ror
aaa
in
jb
mov
loop
fstpt
inc
push
inc
cmp
cld
lock
dec
jnp
dec
dec
xorl
sarl
mov
fstl
pop
mov
rcll
jo
out
daa
sti
xlat
xchg
popa
aad
inc
mov
ret
stos
cmpb
pop
subl
adc
inc
sub
mov
dec
xor
or
inc
xchg
xchg
push
inc
filds
dec
and
fsts
shll
lock
imul
notb
into
idivl
sub
movsl
adc
pop
push
lret
mov
hlt
loop
bound
jae
test
pop
cmp
stos
sahf
mov
decb
mov
add
scas
popa
int3
adc
shl
out
mov
out
mov
or
adc
in
fwait
std
movb
jp
adc
ret
fistl
xchg
loop
jge
je
xor
inc
mov
jns
mov
lret
or
mov
cmp
je
ja
xor
loope
jbe
sbb
pop
mov
dec
dec
sub
jle
mov
mov
roll
mov
mov
into
xchg
je
dec
mov
pop
dec
insl
and
insb
nop
sub
lods
jge
adc
aam
xchg
lret
xor
adc
inc
fnsave
jg
rcl
jne
pushf
fdivrl
cmp
fdivs
fwait
cmpsl
or
mov
lea
jp
sbb
adc
xor
insl
add
pop
fs
mov
aas
and
xor
and
or
push
sahf
mov
icebp
mov
cmp
test
and
insb
dec
dec
in
jae,pn
push
mov
sbb
xorl
pop
add
and
adc
mov
xchg
ds
mov
outsb
nop
xchg
in
adc
add
repz
xchg
repnz
lret
rcrb
and
lods
cwtl
int
xchg
adc
jg
fsubs
insb
negl
push
scas
rorl
lret
mov
clc
test
mov
dec
mov
lods
daa
hlt
sub
mov
lods
andl
mov
movq
sbb
push
jno
xchg
bound
lods
push
lret
sub
pop
push
nop
jne
scas
mov
pop
xor
test
mov
inc
ljmp
cmc
mov
stc
js
jp
pop
movsb
jae
shlb
mov
add
lret
or
pop
loope
push
jae
aas
xor
dec
and
lods
push
mov
push
stc
int3
xor
rcl
imull
add
push
pop
addr16
xlat
fwait
pop
test
xchg
fsubrs
cmp
rcl
test
gs
xchg
mov
sub
ja
aam
add
push
insb
out
in
test
cs
lods
sub
fisttpl
into
les
sarb
jl
in
inc
xor
lahf
lea
push
add
dec
sub
cmp
loop
andb
aam
into
mov
rcrb
add
repnz
into
int
cmp
jmp
aam
imul
mov
mov
shlb
cli
dec
dec
mov
sbb
call
and
lahf
or
mov
inc
xchg
rcl
push
ret
cmp
adc
icebp
add
mov
jmp
or
addr16
mov
xorl
push
xchg
sbb
aam
cwtl
xchg
or
mov
stos
into
cmpsl
xor
call
mov
adc
or
xchg
out
xchg
ret
xchg
xor
cmp
call
les
mov
cwtl
aam
jg
sub
testb
mov
clc
xchg
rorl
and
push
sbb
add
sbb
bound
lea
mov
cld
sahf
in
pop
adc
xor
repz
int
dec
inc
shll
cld
xchg
int3
xchg
mov
out
mov
dec
shl
sti
loope
adc
push
mov
repz
aam
stos
and
ret
mov
sub
hlt
aad
adc
sub
repnz
ret
inc
push
movsb
push
ja
or
lret
fstl
xchg
fcmovbe
scas
dec
addb
in
inc
lea
test
push
outsl
push
rcrl
sbb
mov
subb
dec
xchg
push
mov
push
xchg
xchg
or
cli
aaa
sti
mov
lsl
jbe
adc
or
lods
mov
pop
out
mov
and
or
and
ss
xchg
movb
leave
xor
clc
inc
xor
push
je
xor
adc
test
mov
gs
pop
push
dec
push
jbe
dec
icebp
ret
mov
ljmp
jmp
push
jae
scas
jle
orl
mov
clc
test
mov
inc
mov
dec
ret
push
or
addl
mov
test
jge
sub
jbe
cmp
add
test
pop
repnz
leave
jp
pop
or
shr
pushf
subb
lahf
mov
dec
dec
ljmp
mov
adc
cmp
or
xchg
cs
jmp
lds
fcmovnbe
arpl
inc
imul
fs
ds
fwait
out
repnz
sahf
testl
dec
mov
xchg
pop
test
out
lahf
adc
dec
jecxz
push
fsub
and
cmpsb
shlb
pop
sub
jae
sbbb
xchg
das
rcrb
mulb
sahf
mov
mov
cli
sbb
and
movl
das
mov
xchg
and
xchg
add
pop
xchg
sahf
xchg
mov
psadbw
sub
pop
je
ficoml
adc
dec
push
out
cmp
xchg
sbb
imul
inc
mov
push
add
pop
inc
jl
xchg
in
mov
scas
out
add
pop
fcmovne
jb
mov
cmp
je
cmpsb
adc
out
aas
mov
lret
stc
sub
popa
xchg
mov
lret
cmpsl
loope
jbe
jmp
inc
loopne
adc
adc
test
mov
repnz
sbb
mov
mov
xchg
in
test
insl
lret
pop
adc
ds
sub
add
rorl
fstpl
push
xor
std
cmp
repnz
insb
ja
push
fadd
add
adc
xor
cmp
imul
movsl
aas
add
aad
mov
addr16
test
mov
mov
push
and
pop
xchg
push
xchg
sbb
jge
icebp
pop
cmp
fmuls
popf
into
inc
cmp
jmp
addr16
leave
xor
fmull
hlt
xchg
scas
xabort
adc
mov
loope
xchg
mov
push
adc
stos
xor
jnp
js,pn
jae
jle
xchg
ja
out
ret
mov
mov
sahf
inc
xchg
cmc
sub
repz
mov
xchg
mov
js
loopne
inc
mov
mov
aas
xchg
or
cmp
mov
sub
or
cmp
push
mov
iret
push
or
in
imul
mov
mov
jle
shlb
cmpsl
adc
loopne
insb
sub
adc
mov
lcall
into
xor
test
push
jns
push
cmp
aas
stc
add
jne
pop
jae
in
lock
xchg
mov
xor
push
xchg
xlat
dec
je
aad
test
lret
pop
xchg
mov
mov
inc
mov
out
out
js
shrl
and
pushf
into
xlat
popa
ret
int
xchg
pop
or
push
aam
adc
pop
lahf
dec
xor
push
cmp
push
sbb
fnstsw
insb
adc
in
cmpsl
aas
std
call
lock
xchg
inc
push
pop
dec
adc
mov
scas
xor
xchg
into
mov
ror
ja
xchg
adc
xor
test
and
rorb
lcall
pop
inc
jle
jg
js
rclb
in
push
jbe
aam
jns
sub
sbbb
mov
push
je
fisttpl
mov
in
fcompl
inc
and
orl
inc
out
fsubs
jp
notl
xchg
pop
xlat
jbe
push
or
cmp
cmc
or
jno
inc
xchg
popf
adc
adc
sub
ss
addps
cmpsl
add
ds
pop
jo
sbb
cmp
popf
xor
jp
outsl
jnp
js
mov
xchg
fs
data16
outsb
je
stos
mov
ja
xor
and
adc
fwait
rol
jmp
jle
testl
sbb
mov
dec
leave
jl
mov
out
stc
icebp
pushf
xlat
call
mov
push
xor
sahf
mov
test
pop
sbb
movsl
stos
loope
sub
or
mov
lret
sub
pop
in
test
faddl
inc
inc
std
xchg
pop
and
rcrl
ljmp
mov
jmp
push
dec
mov
mov
int3
sbb
pop
gs
sti
or
pop
leave
xchg
cmp
test
addr16
mov
add
orl
adc
mov
inc
int
movsl
mov
pop
into
mov
and
cmp
dec
shlb
stc
cmp
movsl
dec
dec
aas
rcrb
xlat
mov
daa
and
aad
xchg
into
int
adc
add
insb
fs
mov
pusha
xchg
movsl
stos
sub
je
or
loope,pn
mov
cmp
nop
lret
fcoms
and
inc
xor
mov
aad
imul
push
xchg
or
jno
js
sti
add
jne
loopne
rcll
pop
xchg
pop
or
lret
xchg
stos
xor
sbb
jnp
loope
push
cmp
jg
or
fadd
adc
outsb
inc
fs
aam
jnp
cmp
mov
cld
cmpsb
mov
and
fwait
and
mov
jl
ret
pop
scas
push
out
fisubl
inc
jb
dec
dec
push
jae
mov
enter
or
psubd
jbe
xor
lret
push
jmp
mov
cmpsb
repnz
scas
adcb
mov
mov
outsb
mov
rcl
fwait
pop
movsl
mov
xchg
xchg
clc
test
sbb
sub
das
sbbl
hlt
push
mov
rclb
dec
and
stos
cmp
cli
mov
shl
xchg
sarl
call
push
xor
into
mov
push
jbe,pn
push
clts
lret
dec
into
push
ss
lea
scas
and
sub
clc
in
inc
movsl
cmpsb
inc
enter
xlat
mov
mov
mov
inc
fisubrs
mov
xchg
call
push
inc
push
shl
mov
rorb
xchg
lcall
mov
bound
xor
dec
mov
lds
arpl
cwtl
scas
sbb
ljmpw
push
cmp
int3
pop
mov
add
cltd
xor
out
xchg
testb
cwtl
repnz
ficoms
lds
and
into
jge
mov
and
push
dec
bound
jne
cmp
xchg
dec
cmp
mov
xchg
sub
dec
push
ds
xchg
add
and
xlat
push
adc
into
std
xor
push
or
out
fmulp
adc
mov
inc
cmpsb
mov
jnp
cmpsl
movsl
aam
jne
js
push
stos
sbb
scas
xor
mov
add
test
and
rclb
lds
sbb
pop
sahf
fstp
pop
and
sarl
movsl
aam
and
cs
mov
sbb
push
mov
call
push
mov
leave
out
fsubrs
loope
data16
fwait
mov
out
jl
leave
int
dec
jne
loop
fcomip
jns
cld
pop
push
sahf
or
pushf
out
xor
ljmp
push
pop
or
popa
cltd
mov
lret
stos
cmpsl
mov
push
sub
push
adc
xchg
test
cmp
mov
ja
dec
lahf
and
shlb
jmp
cmpsl
arpl
inc
and
incb
mov
out
mov
and
lock
add
cmp
dec
cmc
xor
pcmpeqw
dec
sub
cmpsb
out
dec
push
mov
inc
xchg
ret
lret
xchg
mov
cwtl
jne
pop
mov
and
mov
cld
push
sub
push
push
push
push
rcrb
cmc
mov
push
insl
cmp
int3
jmp
out
nop
push
into
jecxz
pop
call
xchg
pop
pop
push
mov
movsbl
insl
cmpsl
jge
cs
jne
enter
mov
mov
adc
loope
jp
push
inc
je
or
cmc
fidivl
fwait
mov
into
ret
idivl
iret
out
scas
dec
jns
pop
movsl
jo
adc
cmp
pop
inc
pop
and
es
push
je
lds
loopne
mov
pusha
jge
push
inc
add
call
test
pop
cmpsb
mov
addb
mov
popl
fiadds
xchg
cs
mov
push
or
ret
pushf
mov
jnp
popa
and
lret
sub
jl
imull
cmpsl
cmc
push
sti
or
dec
mov
jne
das
imul
aad
push
mov
or
and
inc
arpl
icebp
mov
sub
jg
idivb
mov
sar
add
add
pop
not
scas
jecxz
cmp
xchg
push
mov
scas
mov
pop
into
fcmovnb
out
ljmp
push
repz
enter
mov
out
out
xor
aaa
aam
pop
outsb
xchg
out
test
xchg
jo
jl
ret
inc
orl
imul
push
rcrl
pop
outsb
push
jns
or
adc
loope
or
nop
push
shl
leave
std
int3
mov
push
cmpb
pop
jmp
adc
sarb
cli
xchg
insl
xor
in
imul
hlt
add
std
inc
dec
pmullw
in
jp
cmp
add
rol
xchg
cmp
lahf
or
pop
int
pop
je
sub
loop
mov
cmp
cmc
repz
pop
mov
mov
dec
stos
xchg
ljmp
pushf
push
adc
lods
push
and
ret
into
hlt
cmp
js
rcl
add
in
sarl
lods
loop
into
stc
mov
inc
sbb
jne
mov
dec
xor
nop
out
mov
fcom
cmpl
mov
insl
sub
or
outsb
movsb
adc
push
push
int
rcll
xchg
or
ret
mov
stos
sbb
dec
repz
adc
and
jecxz
out
dec
pop
imul
dec
xor
sbb
dec
mov
in
mov
xor
xor
out
imul
xchg
ljmp
lods
and
jno
popf
inc
imul
das
loop
cmp
jae
mov
add
add
fisubs
lret
shlb
inc
mov
mov
cwtl
cmpb
imul
addl
xchg
jb
mov
leave
push
popf
ffree
push
ljmp
pop
fistps
in
rolb
push
lcall
pop
mov
lods
mov
test
xchg
sub
fcoms
je
mov
addr16
or
out
aad
mov
ds
outsl
mov
es
ja
jle
movsl
lret
push
pop
inc
sub
in
mov
cltd
jne
test
cmp
test
in
imul
mov
pop
enter
cmc
out
and
jge
push
cmp
push
insl
xchg
jmp
xchg
stos
lods
adc
sub
shrb
cmp
loope
add
into
dec
shrb
xchg
xorb
popa
inc
outsb
lds
imul
and
xchg
sub
pop
mov
adc
inc
inc
cmpsb
add
cmp
pushl
icebp
sti
mov
mov
sub
adcl
push
out
sbb
and
notl
jp
ret
bound
sbb
cli
hlt
ds
push
mov
and
movl
lock
jg
mov
jmp
mov
int3
rcrl
fldl
rcl
dec
xor
push
push
mov
lret
rolb
loop
in
les
scas
test
insb
mov
addr16
ss
mov
mov
jne
out
ds
inc
pop
data16
pop
aaa
dec
pop
ret
clc
mov
mov
push
cmc
push
xor
adc
idivl
sub
lret
xchg
jns
add
jecxz
lahf
pop
out
pop
jg
jle
cli
ficoms
adc
ror
jnp
sub
add
enter
pop
jbe
pop
leave
jmp
not
mov
mov
hlt
push
inc
es
cmp
jle
cmc
adc
mov
into
sub
negb
xchg
ror
or
aas
mov
mov
push
inc
or
add
sbb
mov
jmp
add
ret
pop
cmpsl
sub
jns
xor
int
pop
xor
test
ret
sub
adc
lcall
stos
sahf
jno
jb
jae
push
jl
fcom
js
popf
or
mov
dec
lahf
mov
dec
cs
or
and
in
push
xchg
or
adc
enter
mov
pop
push
xchg
insl
or
xor
sub
push
push
loop
mov
loopne
push
or
outsl
divps
shll
pop
dec
dec
addl
fwait
ljmp
push
add
mov
mov
push
jmp
aas
cmpsb
lret
outsl
imul
incb
ss
not
pop
nop
icebp
or
mov
push
xor
lcall
ds
and
add
int3
xorb
jl
icebp
push
mov
je
into
js
pop
mov
dec
xchg
mov
xor
int3
xchg
mov
and
xchg
mov
and
popf
test
rclb
xor
repz
loop
fwait
pop
jbe
test
add
jg,pn
push
inc
jmp
out
jbe
inc
cs
into
cmp
inc
andnps
push
fdivrp
into
mov
outsb
imulb
orb
pop
mov
pop
inc
adc
pop
mov
jmp
add
push
out
sub
mov
mov
outsl
pop
lds
js
insb
mov
in
xlat
test
ret
inc
jae
sbb
xchg
jmp
mov
xchg
xor
aam
stos
cmpsl
enter
out
rcrb
pop
dec
cmp
arpl
sbb
loop
xchg
aaa
lret
inc
push
std
dec
dec
cs
xor
adc
mov
xchg
adc
mov
leave
pop
push
xor
jns
in
adc
inc
out
push
jo
rdtsc
loop
push
popf
aad
inc
test
aaa
mov
into
repnz
shll
pop
push
cmp
pop
data16
sahf
scas
jne
push
jbe
and
sbb
or
lahf
xchg
out
fdivs
or
jge
lret
jecxz
pop
out
test
mov
cmpsl
ss
pop
imul
scas
mov
push
pop
cwtl
lock
xor
test
cltd
cmp
jne
lret
rcrb
cmp
scas
pop
jns
ret
aad
dec
sub
or
push
inc
cs
sub
mov
pushf
push
pop
movsl
and
out
ss
jp
les
cltd
js
aaa
add
loopne
push
jae
pop
and
dec
dec
test
push
mov
adc
adc
pusha
test
jp
int3
xchg
popa
xor
xchg
ret
mov
push
cmc
shlb
adc
jg
inc
sub
int3
xor
lods
imul
xchg
xchg
es
add
out
mov
mov
icebp
clc
jecxz
out
repnz
data16
mov
movsb
fiadds
dec
aam
cmpsl
loop
inc
loopne
dec
jb
pushf
push
push
jbe
pop
jo
movsl
lods
mov
push
nop
mov
jp
lea
jb
stos
add
lods
js
mov
cmpsl
lcall
cmp
ret
mov
mov
fisttpll
into
inc
hlt
push
in
sbb
mov
pop
mov
and
stos
push
mov
int
add
pop
mov
bound
mov
pop
fidivs
sbb
and
shrb
mov
cwtl
add
adc
roll
sub
cmpsl
add
in
inc
and
dec
psubusb
and
jae
hlt
xor
adc
arpl
dec
pop
int3
or
enter
xchg
adc
fwait
fwait
dec
mov
into
jg
stc
adc
aaa
mov
or
mull
lret
inc
mov
push
mov
xor
sub
pop
mov
xchg
or
or
add
xchg
pop
xlat
clc
rcl
add
je
dec
xchg
lods
dec
pop
out
xor
sub
sbbb
inc
push
ss
jo
or
lret
not
push
bound
mov
in
sub
xchg
cmp
sub
leave
lret
mov
cmp
imul
jnp
add
lods
out
pop
mov
data16
jmp
push
mov
ds
xchg
add
mov
jl
popa
pop
pop
sub
sub
jno
mov
in
jl
out
jl
adc
jo
dec
pop
clc
or
into
pop
cmp
aam
cmpb
daa
pop
pop
xlat
insb
jno
and
sub
cmp
jg
aad
mov
mov
nop
inc
mov
in
add
xchg
fldenv
xchg
xchg
into
inc
popf
scas
cmp
xor
jno
mov
imul
mov
mov
in
mov
xor
pop
mov
mov
inc
sub
xor
imul
pop
cmp
daa
in
jecxz
loop
sub
or
push
cmovns
movsl
cmp
xchg
ret
push
mov
rorb
jge
xor
dec
cmpsb
jle
fs
insb
push
xchg
jge
out
pop
push
push
jno
and
gs
or
inc
test
sub
xchg
imul
aam
xchg
pop
dec
jnp
pop
push
mov
sbb
and
sbb
ja
inc
dec
cmpsl
ljmp
cmpsb
addr16
sbb
mov
bound
ljmp
nop
js
das
add
sbb
push
enter
vmulss
mov
sub
dec
insl
imul
out
mov
add
push
cwtl
pop
les
fld
cmp
jns
cmp
mov
fs
pop
cmp
imul
rcll
ret
loop
aaa
out
mul
inc
lret
aad
add
mov
add
cs
aam
and
jecxz
scas
test
mov
rcl
ss
mov
mov
mov
clc
or
dec
add
xor
push
mov
ljmp
xor
pop
push
aas
push
out
xchg
xchg
and
mov
xor
out
jg
test
inc
shr
or
inc
mov
mov
imul
les
lods
ret
sub
dec
or
fdiv
and
jbe
mov
sahf
jns
ds
mov
and
int
mov
xchg
aaa
mov
stos
int3
mov
dec
out
ds
int3
sbb
mov
js
ret
mov
rep
sbb
or
push
push
jmp
dec
jecxz
mov
gs
shl
sbb
add
xchg
or
imul
mov
inc
cmp
jno
ret
lods
lcall
aam
jle
mov
pop
test
xor
jnp
xchg
repz
mov
ds
insl
push
cmp
shl
jg
mov
or
scas
adc
xchg
push
repz
sti
mov
and
sub
mov
mov
out
push
add
xor
jmp
aad
mov
inc
stc
push
dec
inc
push
sbb
leave
inc
mov
lcall
popf
xchg
add
xchg
dec
cwtl
shlb
push
mov
or
lds
roll
mov
mov
sub
dec
or
mov
rcll
xchg
pop
es
popa
out
repz
aaa
adc
adc
mov
lds
testb
call
gs
adc
into
push
iret
inc
clc
popf
push
lret
and
pusha
outsb
js
aad
cli
xchg
mov
push
mov
pop
xchg
pop
adcb
fcoml
push
fimuls
loopne
arpl
adc
jne
mov
and
or
es
cmp
cmp
scas
xor
xchg
in
push
add
inc
shl
jp
icebp
aas
lods
je
jle
shrl
movsl
lock
add
addr16
mov
pop
jge
adc
rorl
cmpl
shlb
sub
in
push
mov
adc
inc
idivb
and
xor
out
cli
out
stos
test
jne
scas
popf
shlb
sbb
ret
loop
aad
jl
jb
in
insl
ss
fsincos
icebp
jg
inc
mov
adc
mov
adc
ja
iret
dec
inc
sbb
xchg
xor
push
sbb
push
ret
imul
xor
pop
into
mov
dec
lcall
hlt
movsl
ret
or
push
arpl
jae
iret
mov
mov
scas
dec
fsubr
stos
lock
adc
cmp
repz
or
out
addl
gs
int
mov
rclb
insl
jbe
pushf
jae
arpl
mov
mov
xchg
popa
loopne
lahf
push
ss
test
arpl
lret
int
out
popf
dec
or
fmul
jge
sub
ja
testb
pop
pop
clc
jmp
pop
dec
flds
cmp
out
push
jle
inc
push
pop
into
outsb
inc
mov
pop
ret
mov
fs
mov
pop
add
aam
lcall
cmp
lret
into
lea
cmc
and
insb
pop
loope
jg
data16
jae
fisttpl
js
jp
dec
adc
cmp
sbb
out
jmp
aam
lods
addr16
adc
push
inc
dec
adc
xchg
sub
into
mov
fs
inc
dec
stc
inc
pop
fadds
pop
fisubs
push
iret
or
pop
push
push
int3
outsb
insl
not
jle
xor
add
lret
and
ja
pushf
lods
stos
add
xchg
xchg
fcmovnbe
jg
jo
out
xchg
mov
jb
jl
iret
es
lock
push
add
test
mov
inc
pushf
xor
mov
outsl
xor
mov
sub
xchg
sub
and
pushl
pop
cmp
jmp
or
aaa
dec
call
add
xchg
ss
sub
xchg
and
dec
mov
mov
jae
into
sbbl
test
je
sbb
adc
fwait
inc
fstpl
dec
push
fs
dec
cmp
mov
scas
inc
lods
mov
xchg
sbb
mov
aaa
push
fstpt
mov
mov
movsl
jmp
push
stc
imul
mov
jnp
and
push
call
mov
mov
repz
adc
call
jp
jne
das
in
xor
pop
lret
ret
inc
and
mov
leave
cmp
add
addr16
loop
push
dec
mov
push
data16
in
fstl
sti
enter
jp
xchg
fsts
or
sub
mov
jo
mov
xchg
sbb
arpl
stc
mov
int3
xor
mov
sub
decb
cld
sti
add
add
jp
icebp
jne
scas
xchg
imul
dec
insb
push
add
mov
shlb
sub
loopne
leave
addr16
xor
cmp
add
inc
into
sbb
std
or
xor
bound
into
enter
cld
push
test
or
mov
not
repnz
ljmp
pop
lcall
pushf
adc
dec
imul
xchg
leave
fucom
fs
xor
xor
xor
mov
cmp
inc
into
xor
cmp
adc
nop
int3
scas
mov
repz
mov
fsts
pop
insl
in
aaa
mov
push
or
dec
inc
xchg
xchg
idivl
mov
push
mov
jb
outsl
cmp
aas
int3
mov
mov
pop
add
fiadds
movsl
mov
fistl
push
xchg
insb
pop
or
and
fwait
loop
sub
mov
pop
xchg
mov
or
ror
cmp
mov
or
xchg
fldt
lea
xor
addr16
jns
mov
out
dec
pop
jnp
lock
movsb
push
jne
dec
shrb
xlat
lret
inc
sub
pop
cmp
push
push
dec
xorl
lret
mov
iret
ret
out
or
test
lret
mov
hlt
aad
fmuls
ss
sti
sbb
xchg
adc
movsb
adc
jo
pop
add
fwait
add
sbb
adc
in
dec
xor
inc
ljmp
sbb
xor
mov
in
leave
loop
mov
sub
push
les
jae
mov
jp
xor
outsb
cwtl
insb
frstor
cmpsl
imul
jno
adcl
jbe
rcll
and
pop
sbb
ja
jno
push
dec
es
mov
and
call
shl
push
adcb
sbb
lret
adc
ss
imul
add
decl
adc
jae
ds
inc
pop
scas
movsl
int
movsb
jge
mov
lcall
insb
mov
mov
rcl
push
repnz
shlb
adcb
aam
mov
dec
mov
out
or
fstpl
inc
repnz
clc
push
popa
push
pop
fmuls
stos
sbbl
rolb
or
pop
in
sbb
add
daa
push
or
incb
sub
mov
ret
sti
dec
ss
adc
mov
jno
out
test
push
mov
mov
cmp
pop
dec
or
sbb
in
mov
ljmp
mov
or
fwait
lea
pop
fldz
clc
inc
dec
pop
fcmovnbe
addr16
bound
leave
add
sub
pop
xor
xlat
and
or
dec
sub
mov
mov
sbb
mov
lret
jp
in
jg
push
sbb
or
cmc
mov
enter
and
inc
bound
xor
jns
mov
or
cmp
mov
aam
jge
stos
sbb
ret
jno
cmpsb
lret
movsl
test
push
xchg
xor
adc
cmp
mov
loopne
test
and
adc
lea
sbb
adc
adc
gs
xor
jmp
jne
das
lret
cli
mov
test
cmpsb
inc
rcrl
aad
enter
mov
sbb
iret
lcall
ficoml
aam
pop
jne
bound
sub
lods
arpl
xor
int3
gs
push
or
lret
cli
xchg
les
mov
push
jge
aad
lret
out
sub
pushf
sbb
loopne
fs
imul
rclb
push
lock
mov
xchg
or
or
mov
add
into
loop
test
scas
mulb
jp,pt
loopne
inc
stos
cmpsb
fsts
xor
push
xor
sbbl
cs
stos
pop
or
add
lods
xchg
jl
cld
cmp
loop
or
cltd
inc
rcl
xor
jecxz
flds
test
mov
sarl
leave
mov
aam
sahf
or
sbb
into
mov
xchg
add
sbb
mov
sub
and
fcmove
jne
lods
es
stc
jbe
addl
and
std
push
mov
mov
repnz
xlat
imul
pop
sub
xchg
push
sti
or
jno
mov
or
loopne
add
lret
xchg
mov
into
lock
jo
bound
faddl
es
adc
cmp
cmc
or
leave
test
jnp
shll
mov
or
add
dec
push
mov
mov
dec
into
inc
fmulp
and
jb
adc
dec
into
repnz
out
push
arpl
push
imull
dec
js
lret
shl
aas
cmp
daa
test
add
sbb
js
jb
push
mov
andl
into
fadds
sub
nop
lahf
push
pop
xchg
add
aam
dec
sub
add
fcmovnbe
stc
mov
or
fs
xchg
add
adc
jp
out
push
popa
pop
insl
je
cmp
pop
cmp
pusha
push
and
inc
fiadds
faddl
pop
adc
loopne
ret
ljmp
or
out
sbbb
insb
xlat
sbb
popa
sub
rol
adc
inc
insw
aad
loopne
pop
bnd
xchg
insb
clc
sub
cli
rcr
add
jae
jg
xchg
out
cmpb
mov
in
lret
mov
js
lret
add
pop
mov
in
jmp
lret
xchg
sub
int3
push
add
loop
push
mov
mov
jns
dec
mov
xchg
dec
and
fsubs
and
out
jbe
lahf
dec
adc
fadds
xchg
dec
xor
dec
lock
jns
lahf
lods
test
xchg
xchg
aaa
dec
lret
bound
jbe
jnp
aam
mov
pusha
stos
adc
stos
adc
std
leave
lods
popf
push
cmpsb
lea
cmc
sbb
push
fldl
and
sar
punpckldq
ds
xchg
ret
sub
sub
pop
dec
xchg
xlat
mov
call
rcrb
or
je
lcall
mov
cs
xor
pop
xlat
adc
push
jno
loop
or
xor
fucomip
adc
sbb
mov
push
xlat
pop
adc
ret
inc
mov
xchg
mov
pop
jo
xchg
fsqrt
mov
xchg
out
aam
add
stc
mov
pop
mov
lret
hlt
scas
lods
jo
adc
test
jae
lret
mov
lds
aaa
add
xchg
mov
out
jl
xor
cmc
xchg
push
adc
scas
addr16
sarb
cwtl
cmp
jnp
xchg
lcall
sbb
mov
loop
mov
stc
mov
int
adc
dec
repnz
push
outsl
xchg
loope
std
stos
adc
push
push
ss
lods
fsubrs
xor
arpl
mov
cmc
in
roll
cli
jae
enter
in
jne
mov
inc
pop
push
jns
cmp
and
jmp
dec
ljmp
xor
pop
cmp
mov
inc
sub
and
inc
ja
fadds
lret
fnsave
daa
bound
jns
cmp
mov
xor
out
push
and
stos
fildll
sbb
into
and
xor
adc
icebp
ficomps
adc
jbe
sbb
add
push
inc
int
sub
xor
cmp
mov
mov
pop
jmp
mov
addr16
lcall
lret
mov
rolb
nop
push
and
insb
inc
mov
sbb
jecxz
ljmp
xor
bound
addr16
push
push
fisubs
or
jl
fldl2e
lds
ja
mov
cmp
imul
int3
aas
cmp
cmpsl
lret
pop
inc
bound
jbe
stos
xor
fadd
mov
lods
push
daa
shlb
push
fcmovnu
push
sbb
push
push
or
mov
sub
cs
ja
push
adc
fs
fidivl
or
adc
add
shl
xchg
daa
fadds
or
pop
mov
jbe
clc
sub
test
and
dec
dec
adc
mov
lret
inc
lods
pop
loopne
sbb
fiaddl
mov
jecxz
mov
faddp
mov
outsb
insb
lock
movsb
sahf
test
lret
insb
xchg
xchg
push
mov
xchg
cmc
daa
cmp
call
ja
or
add
dec
cwtl
xor
sub
clc
add
aam
cmp
aaa
fldcw
add
push
int
test
or
mov
push
fisttpl
adc
clc
sbb
cltd
aam
add
lret
rcl
mov
cs
sub
in
xor
add
adc
and
cli
sub
mov
mov
shld
hlt
add
popa
aam
add
movsl
aad
shlb
jnp
pop
es
fwait
inc
adc
adc
adc
aaa
shlb
addr16
leave
mov
es
fcomip
mov
shrl
sbb
and
dec
insb
jmp
jge
out
fbld
sti
inc
das
int3
out
xor
enter
xchg
cld
xchg
out
adc
std
fnsave
gs
loopne
push
inc
or
jnp
pop
or
mov
push
aad
dec
jl
int
sub
cli
fsub
mov
jle
mov
sub
movsl
cmp
loop
xor
js
aaa
push
sbb
dec
cmpsl
iret
add
imul
pop
fwait
leave
mov
shl
aam
lods
or
hlt
or
xor
push
lret
shll
lcall
sub
cmpsl
pop
in
push
addr16
xor
mov
sbb
jbe
notl
xchg
jbe
inc
mov
push
or
loop
mov
fmul
popf
pop
jb
rep
into
leave
mov
mov
xchg
inc
lahf
out
jecxz
dec
dec
pusha
sub
pop
test
scas
es
lods
push
pushl
repz
mov
inc
add
stc
push
inc
lock
je
or
cmpsl
or
in
test
or
mov
aas
pop
xor
mov
cli
shl
xchg
xchg
xchg
jl
jne
pop
pop
into
das
aaa
adc
and
adc
xchg
inc
mov
mov
cs
int
inc
pop
pop
ljmp
jl
push
enter
sub
mov
pushf
xchg
scas
arpl
in
cmp
xchg
sub
xchg
cmpsb
pop
lcall
push
dec
mov
out
or
jg
or
dec
or
adc
adc
xchg
mov
std
outsl
xchg
jae
in
add
stos
pusha
jle
add
xor
sti
push
sbb
psrld
test
not
cmpsb
jl
inc
adc
rcl
cmp
and
or
push
testb
mov
dec
or
repnz
cld
mov
add
mov
leave
mov
push
insb
inc
cmpsl
or
je
mov
and
xchg
ret
adc
cvttps2pi
js
xchg
cld
in
into
stos
sbb
push
out
movsl
pop
and
cmpsl
cmc
lock
lahf
ret
adc
in
add
leave
sub
icebp
dec
sahf
xchg
adc
xor
and
and
jle
stos
or
jae
sub
je
enter
mov
rcl
cmp
xor
xchg
ljmp
nop
adc
out
and
jge
mov
lds
neg
push
cmovae
xor
subl
cli
xchg
cmp
pop
sahf
pop
pop
cltd
in
hlt
jp
pop
mov
mov
cmpsb
cli
das
push
shlb
rcrb
dec
divl
loopne
mov
cmp
sub
out
jnp
push
inc
cmp
xchg
push
test
pop
adc
jo
push
push
mov
dec
stos
mov
ljmp
shlb
mov
fsubl
aas
or
stos
mov
and
mov
mov
sub
xor
fsubrs
fldcw
dec
pop
mov
std
out
fistl
inc
lret
sarb
adc
dec
clc
or
hlt
loope
divb
in
and
and
sub
ljmp
movsl
or
add
shlb
and
push
cmp
xlat
rorl
test
sub
cld
sti
cmpsl
fs
inc
jp
mov
lahf
pop
popa
mov
pop
les
loope
sbb
push
sarl
adc
loop
jbe
rcl
sub
mov
movb
sub
cs
js
push
push
fldl
lret
ja
mov
xor
mov
test
add
cmp
cmpl
int3
sbb
rorb
jp
jbe
pop
in
cld
mov
xor
movsl
fmulp
jge
loope
fwait
out
out
dec
sub
insl
test
pop
inc
mov
dec
push
pushf
shll
imul
int3
popf
sub
into
push
shll
mov
cmpsb
mov
sub
cmp
jmp
rorb
mov
add
push
jp
pop
nop
ficoms
fildl
mov
sbbl
lock
mov
stos
lret
loopne
lret
adc
mov
lods
inc
int
shll
add
cmc
inc
outsl
mov
hlt
cmp
jp
xlat
daa
push
scas
xchg
mov
mov
mov
mov
mov
cs
push
dec
pop
mov
add
inc
sti
mov
imulb
mov
into
in
sub
in
subb
jmp
xchg
mov
gs
pop
push
shll
pop
lret
fdivs
fbld
sbb
mov
cld
xchg
cs
mov
xor
jne
ret
lods
ja
inc
fsubrl
mov
or
cld
push
mov
rorl
mov
aas
jo
insb
int3
sub
imul
pushf
dec
push
scas
mov
pop
jge
inc
bound
ja
inc
jl
enter
adc
stos
jnp
and
es
mov
jb
sahf
bound
cmpsl
push
sub
lds
lods
mov
test
inc
je
dec
ret
or
pop
mov
fyl2xp1
mov
insl
insb
out
aaa
xor
mov
clc
cmpsl
jns
sbb
stos
data16
add
cmp
mov
das
xor
pop
xchg
aam
lahf
fisttps
bound
xchg
and
dec
out
movsl
add
jo
sbb
pop
push
mov
xor
test
cmp
repz
subl
sbb
pop
xor
ret
add
lods
adc
xchg
ljmp
adc
jle
outsb
ret
jo
cmc
pushf
mov
mov
adc
movsl
or
lds
inc
xor
jns
jmp
movsl
lcall
add
fidivrl
add
jno
inc
lret
imul
add
jo
cmp
dec
pusha
out
xchg
into
enter
fistpl
in
gs
xorb
mov
jno
sbb
in
fs
xorl
push
add
mov
push
stc
push
xchg
out
clc
push
subb
dec
xor
movsl
jl
bnd
fstpt
xchg
push
add
lret
loop
int3
bound
push
xchg
or
ror
ror
lods
lock
call
out
and
std
scas
push
rolb
out
lret
mov
or
int3
or
dec
sbb
out
sti
inc
fmuls
loopne
loope
mov
mov
ret
push
sub
or
xor
fists
lods
push
inc
xchg
imul
aam
sub
out
repnz
std
cmc
insl
test
inc
xchg
lret
push
orl
ror
in
add
int3
mov
mov
push
rolb
lea
mov
out
jns
xor
add
xor
and
sbbb
mov
ficompl
pushf
fnstcw
sbb
sbb
xchg
sbb
fs
fmulp
gs
push
sub
cmp
inc
out
pop
aaa
aad
jg
movsl
cmp
push
mov
push
mov
mov
cld
mov
fs
shrl
into
daa
sbb
inc
jge
inc
imul
filds
loope
push
jo
enter
inc
mov
ljmp
mov
mov
pop
xchg
jo
dec
push
mov
fucomi
outsb
in
mov
xchg
cltd
push
or
mov
add
pusha
notl
mov
into
push
cmp
scas
fmuls
out
icebp
sub
insb
inc
inc
add
jecxz
out
adc
test
or
or
jo
sbb
dec
js
mov
mull
aaa
mov
inc
sbb
int3
cmp
sahf
ljmp
cli
aad
lret
mov
sahf
or
pop
push
test
mov
push
add
sbb
adc
popl
test
clc
into
into
xor
adc
push
ljmp
mov
outsl
and
fdiv
push
movsb
add
mov
and
into
cwtl
cs
xor
xor
lahf
adc
addr16
adcb
inc
mov
push
xor
jp
jae
mov
not
insl
insb
and
add
sbb
arpl
adc
pop
sbb
or
mov
ret
pmaxsw
push
lcall
in
movsb
add
not
dec
arpl
or
test
neg
cmpsb
ret
add
push
dec
xor
xchg
pop
cmp
jl
addr16
sub
dec
jg
outsl
dec
inc
ljmp
push
xchg
pop
fsubr
aam
jae
ja
sub
test
jo
popa
aam
and
iret
lahf
stos
movsl
pop
add
push
xlat
sub
pop
cmp
dec
jbe
jae
aam
aam
jbe
cwtl
movsl
lret
aam
pop
lea
ret
jmp
xchg
dec
out
mov
mov
or
push
jl
ljmp
enter
es
or
addl
dec
test
xchg
jbe
mov
jbe
inc
mov
add
xor
sbb
outsb
sahf
daa
adc
dec
out
and
mov
xlat
dec
cli
push
jbe
rorl
push
xchg
bswap
xchg
jmp
mov
insl
int3
dec
push
test
or
popf
into
dec
out
mov
movsb
shrb
fisubl
aad
ficoml
ja
push
xor
pop
add
dec
enter
cs
rolb
notb
fsub
pop
mov
repnz
dec
rorl
adc
push
into
adc
je
popf
cli
or
adc
repz
cmp
xchg
mov
mov
out
cmc
sahf
cmp
adc
add
sub
pusha
mov
jb
stos
inc
mov
stos
sbb
pushf
mov
shlb
mov
test
mov
sub
loopne
inc
inc
dec
int3
jp
inc
movb
into
rclb
cmpsl
xchg
data16
xor
xor
int
and
fcomps
sahf
and
stc
orb
fdivrl
mov
fldenv
pop
int3
jns
push
pop
cmp
mov
dec
push
dec
ret
cmp
sub
pop
imul
jnp
ss
xchg
test
mov
sarb
mov
sub
cmp
adc
push
xchg
pop
push
subl
arpl
and
div
in
je
fs
xchg
ret
mov
in
or
fildl
mov
sahf
nop
je
into
sub
mov
mov
pop
sub
loopne
push
andl
in
and
leave
dec
out
sbb
mov
les
aaa
sub
mov
inc
ljmp
dec
loopne
movsb
lcall
push
push
pusha
test
scas
arpl
mov
aas
popa
int
dec
fildl
push
repnz
push
enter
cmp
pop
mov
ret
stos
outsb
mov
pop
inc
mov
shlb
int3
pop
ja
pop
mov
adc
pop
lcall
push
dec
shl
and
rorl
aaa
or
gs
scas
mov
cmc
mov
or
divb
js
xchg
test
xor
sub
gs
aas
sub
adc
mov
out
lret
stos
loop
in
sarb
add
and
cmp
mov
scas
inc
mov
sub
lds
ja
dec
cmpb
out
aaa
mov
popa
mov
fadds
push
nop
add
pop
stos
sbb
push
das
push
adc
push
inc
mov
cmp
jbe
into
popa
lods
or
jl
jno
testb
add
dec
xchg
push
jg
mov
lahf
cmp
iret
add
jp
repnz
pop
lock
adc
and
in
mov
movsl
xchg
adc
jae
or
fimull
in
nop
mov
aas
cmp
dec
jb
ja
clc
jno
mov
push
jge
in
fwait
pop
cmc
test
jnp
mov
cmp
jne
loop
das
sarb
mov
and
jmp
enter
xchg
mov
aaa
sub
repnz
xchg
mov
add
nop
sarb
aam
sarl
arpl
xchg
xor
fs
jge
xchg
sub
dec
repz
fiaddl
adc
dec
push
sarl
push
ret
pop
adc
adcb
lods
xchg
gs
push
adc
je
in
ret
mov
pop
pop
mov
test
incb
jno
jbe
vprotd
rcrl
push
add
daa
mov
aam
xchg
jl
push
lea
aas
adc
out
xor
sti
mov
sahf
push
sbbl
push
and
sbb
loope
lahf
inc
stc
mov
cmp
jb
or
and
cmp
xor
imul
aad
les
lahf
pop
fidivs
lds
iret
imul
out
cmp
adc
cmp
mov
movsb
sub
cmp
jg
push
or
fnstsw
cmp
jno
test
jb
imul
les
push
pop
inc
cmpsl
jl
outsb
mov
sbbl
jg
xor
test
xlat
mov
mov
fimuls
in
lahf
rclb
xor
out
xlat
ljmp
and
dec
jecxz
call
inc
xor
insl
aad
mov
push
fwait
ret
jne
ds
js
out
popf
inc
jmp
sub
adc
lret
push
sbb
jecxz
mov
xchg
int3
mov
mov
fcomp
mov
inc
jge
sub
jle
jmp
jbe
pushf
sbb
repnz
mov
inc
inc
xchg
cmp
stc
pop
add
jne
and
jmp
xor
pusha
out
push
std
loop
fstpl
repz
aad
pop
mov
loop
dec
cmpl
stos
inc
adc
push
sub
pop
cmp
dec
pop
std
or
lcall
lods
sub
push
mov
mov
fwait
mov
mov
xchg
mov
jb
dec
fdivs
out
ja
dec
adc
or
or
fmulp
adc
pop
enter
xchg
mov
jmp
insl
cmp
into
test
fcomps
pushf
sti
rolb
imul
xchg
push
shlb
pop
adc
out
push
mov
std
enter
imul
adc
negb
add
jne
xor
test
imul
addr16
sbb
cli
xchg
cmpsb
add
xor
fadds
lods
mov
inc
mov
jnp
sti
mov
or
and
not
push
lea
push
push
ss
out
movsl
mov
sahf
mov
int
sub
lock
leave
adc
ret
xor
test
xor
xchg
iret
jne
addr16
jbe
test
adc
pop
mov
pop
stc
mov
ss
mov
ret
or
mov
sub
inc
je
and
jle
xor
mov
pushf
hlt
pop
adc
mov
addr16
inc
scas
push
rcr
cmp
ja
std
jno
sub
popf
push
cmpsb
lahf
mov
cmpsl
ss
push
adcb
mov
add
lret
inc
sub
out
repz
sub
dec
cltd
push
push
push
add
cmp
xchg
cmp
daa
pushf
inc
or
cwtl
in
fs
jbe
adc
mov
enter
push
sbb
dec
std
inc
cwtl
dec
mov
loop
les
pop
mov
pop
cmp
scas
insb
sar
test
jnp
xor
and
jmp
cld
dec
ljmp
test
sbb
out
mov
out
out
loopne
pop
pop
adc
adc
mov
push
fs
jl
sub
or
xchg
insl
mov
aam
daa
int
fdivl
int3
dec
and
jb
xchg
icebp
push
xchg
sbb
cmpsl
and
sarb
fld
xor
movsl
arpl
cmpb
aad
aam
stc
pop
sub
pop
mov
pop
xchg
cli
cmpsl
lods
dec
mov
sbb
jp
and
xchg
mov
clc
cmpsb
out
fisttpl
or
pop
outsl
out
mov
mov
xchg
roll
lods
and
push
add
cmp
and
enter
call
addr16
popf
and
data16
pop
lock
in
lret
cmpsl
fst
push
ret
sub
fdivrs
xchg
xchg
sti
mov
nop
jg
scas
mov
xchg
mov
cmp
scas
out
sti
repz
in
dec
roll
mov
jae
and
add
sti
hlt
sbb
xchg
mov
cmp
rcrb
shll
adc
push
mov
xor
out
mov
inc
sti
loope
sbb
xlat
inc
sbb
ror
mov
add
out
mov
enter
dec
in
xchg
mov
fdivs
bound
movsl
ret
icebp
loopne
xor
jbe
rcrl
jns
xor
pusha
into
jae
sbb
mov
fistl
insl
jge
mov
std
aam
xor
jo
sbb
testl
movsl
jl
loop
imul
jo
repnz
jmp
dec
aam
ret
mov
lret
jnp
pop
stos
into
inc
out
mov
sbb
cmc
or
outsl
ret
dec
dec
jge
mov
mov
leave
jno
in
xor
dec
int3
pop
and
jne
shl
adc
xor
mov
data16
or
cli
iret
pop
xor
sub
roll
stos
mov
loope
movsl
push
mov
into
lods
lds
rcr
or
cld
test
xchg
mov
push
add
les
cmc
test
jns
cli
fsubl
dec
in
adc
ret
dec
sahf
insb
dec
mov
cli
sbb
pop
sub
adc
pop
add
ret
test
lods
testb
ljmp
push
test
into
cs
mov
shll
popa
jge
add
call
pop
ds
test
test
sub
add
js
pop
and
jge
mov
aaa
shl
or
insl
push
in
testl
std
scas
jo
out
dec
and
sbb
xchg
int
lret
mulb
fistpl
int
inc
enter
setnp
dec
icebp
dec
or
into
jb
xor
adc
test
pushf
into
add
mov
mov
push
in
dec
lods
daa
aaa
loopne
xchg
push
shr
fsubrl
sub
lock
mov
adc
in
pop
mov
adc
mov
ret
andb
out
jmp
loop
jo
aaa
jge
inc
es
add
sub
inc
xchg
andl
sbb
and
or
icebp
inc
push
out
sub
push
pop
inc
inc
pop
jl
inc
push
test
arpl
sub
das
xchg
pop
xchg
jmp
les
dec
cmpsl
jecxz
into
push
add
xlat
lahf
mov
or
jecxz
inc
push
fcmove
mov
mov
pusha
gs
nop
pop
cmpsl
aad
dec
mov
stc
sbb
aaa
dec
jno
inc
stos
fwait
test
pushw
adc
jbe
add
jns
cmc
mov
test
jbe
aas
int3
jg
push
scas
flds
loope
cli
xor
xchg
sahf
mov
mov
dec
cwtl
addb
mov
into
push
and
xchg
mov
int3
and
gs
sti
dec
mov
lds
or
xor
inc
push
push
loopne
jecxz
call
scas
dec
mov
fstpl
push
inc
imul
mov
ja
and
outsl
stos
or
xchg
pop
lock
mov
data16
xchg
loope
sub
outsb
sbb
ljmp
test
out
pushf
and
cmp
imul
xlat
subb
ss
stos
adc
sub
jmp
or
pop
mov
push
inc
add
into
pop
inc
push
je
pushf
addl
popa
roll
iret
sar
cmc
mov
je
mov
loopne
lret
or
cltd
sub
das
or
es
into
sti
jl
cmpsl
loope
mov
push
fstl
cmp
pop
out
pop
and
fistps
inc
mov
movsl
sub
xor
out
xchg
inc
aaa
int3
stc
lret
xchg
mov
sti
fadds
jae
test
mov
push
arpl
out
lret
bound
movb
xchg
xchg
lods
dec
scas
out
cmp
sub
xchg
jno
lret
in
mov
dec
pop
xor
movsb
and
mov
cmpsb
xorps
cs
enter
pop
and
shll
shrb
dec
cmp
and
test
loop
cli
pop
mov
stos
mov
mov
out
fwait
jne
jbe
adc
cmpsl
mov
loop
cmp
mov
outsb
leave
les
cld
and
add
out
addb
jne
or
jge
les
outsl
test
arpl
icebp
fisubrl
std
inc
jae
fwait
sbb
pop
ret
mov
push
and
pop
xor
int3
xor
orb
das
loop
frstor
and
jo
xor
push
xor
cmp
jne
test
fidivrl
ds
out
test
pop
jle
add
loopne
imul
dec
jg
shll
xor
push
jne
inc
dec
scas
ret
ja
jno
pop
test
stos
movsb
lock
cmp
popf
filds
adc
in
add
push
dec
movsl
mov
xor
mov
aaa
and
pop
test
repnz
xchg
jl
xchg
daa
jmp
ret
and
outsl
into
loop
lcall
loope
inc
and
push
stc
mov
sbb
stos
mov
jge
sub
out
cmp
jg
push
or
out
jae
mov
push
push
pop
and
outsl
lcall
fisubs
jmp
ret
xchg
js
ficoms
stc
leave
inc
sbb
cmp
iret
movsl
sti
movsl
popa
rclb
leave
adc
lcall
fwait
lahf
cwtl
jb
out
cmc
mov
mov
jae
aam
sbb
mov
cs
jbe
nop
rcr
and
xchg
lret
dec
add
fwait
push
jbe
pop
fisubrs
sub
push
ds
je
or
mov
loopne
cld
push
aam
repnz
icebp
adcb
lret
adc
mov
and
repnz
insl
pop
icebp
jmp
sti
scas
mov
or
nop
push
ja
cli
xchg
pop
pop
push
xor
add
mov
imul
xlat
xchg
jns
cwtl
dec
cld
or
mov
xchg
dec
mov
ljmp
jle
jl
lock
cmp
clc
in
addl
cmc
add
cmp
fcom
mov
xchg
pop
mov
ss
jl
sbb
into
pop
aam
push
dec
or
cmpsb
das
or
rorb
shrl
es
mov
mov
cltd
mov
xchg
xor
push
stc
inc
push
ljmp
call
pushf
inc
inc
pop
aam
daa
nop
outsl
mov
push
add
popa
inc
repz
shlb
lahf
add
addb
subl
or
int
dec
out
mov
xor
fninit
cmp
testb
push
jnp
cmpsl
lret
rcrl
pop
xlat
mov
mov
dec
dec
iret
adc
sahf
jl
je
ss
mov
shrb
movsl
mov
pusha
and
imul
cmp
sbb
xchg
cmp
dec
and
dec
into
enter
pop
out
adc
sbb
and
adc
pop
scas
aam
cmpsb
ret
jecxz
lret
fs
mov
iret
mov
das
loope
dec
pop
out
mov
leave
xlat
sub
inc
push
mov
in
inc
loope
shlb
jg
pop
icebp
push
aas
pop
adc
push
inc
push
or
jno
cmp
push
insb
lods
pusha
imul
or
cltd
sbb
cli
inc
dec
out
icebp
adc
jns
cmc
fsubrl
dec
jnp
mov
inc
pop
jne
lret
and
rcl
or
insb
jp
adc
xor
shll
int3
cmp
dec
je
shl
shlb
stos
push
and
inc
sbb
scas
xchg
cmp
push
int
adc
and
lods
and
jns
dec
movsl
xchg
push
dec
and
imul
aaa
sub
lret
cltd
dec
adc
int3
pop
xor
and
js
mov
or
or
es
data16
nop
lock
jge
jns
mov
testl
int
sti
rolb
inc
data16
icebp
mov
out
add
cmp
sahf
scas
lret
rorb
pop
sub
mov
and
lret
into
les
and
mov
stc
dec
lock
mov
call
dec
andl
into
cltd
shlb
imul
push
xchg
in
sbb
lahf
add
movsl
pop
fbld
pop
fiaddl
dec
lods
insb
inc
or
cmp
cmp
into
pop
inc
aaa
jmp
and
test
sbb
mov
outsl
cltd
data16
repz
lods
jb
imull
xchg
dec
jecxz
out
jmp
inc
popf
test
mov
mov
xor
cmp
repz
jg
mov
inc
mov
lods
ret
dec
aas
adcb
inc
mov
push
push
lahf
in
fcoms
jo
lret
inc
sub
movsl
arpl
mov
outsb
ss
cld
jecxz
loopne
bound
add
fdivl
mov
pop
add
mov
lods
in
nop
pop
out
stos
jge
sti
test
jno
dec
enter
or
addr16
jl
adc
iret
mov
mov
lret
iret
dec
add
mov
mov
cmpsl
xor
push
xchg
movsb
popf
fiaddl
or
ret
sub
shll
cmpsb
lret
jmp
dec
mov
loopne
adc
xor
push
outsb
push
add
ss
sbb
pop
clc
xchg
dec
into
jo
and
inc
add
scas
rcll
mov
btc
dec
inc
add
sbb
stc
call
ljmp
sbb
lret
dec
jns
iret
out
jge
lock
dec
mov
fsubrl
cmp
test
or
lret
jg
int
adc
inc
and
sub
movsl
pop
cwtl
repz
daa
lcall
out
xchg
mov
or
inc
fsubrs
xor
mov
or
dec
mov
xchg
aas
and
cmp
adc
out
xchg
and
inc
mov
cmc
arpl
dec
inc
mov
mov
out
ja
push
icebp
mov
ret
push
fists
dec
or
js
cltd
mov
mov
inc
clc
lret
xor
mov
mov
adc
rorb
fistl
push
fisubrs
lock
push
cltd
scas
pop
adc
stc
dec
fs
push
push
sar
mov
or
sub
das
sbb
loope
cmpsl
mov
jp
xor
sub
jns
lock
or
push
out
into
rcl
mov
andb
movsb
mov
jnp
bnd
in
jg
mov
pop
inc
lret
arpl
ds
subl
sub
cmpsb
sahf
repz
mov
add
mov
pusha
sub
aam
mov
cmc
lret
loopne
lods
mov
out
arpl
mov
lret
mov
or
fwait
cmpsb
fidivrs
js
jae
sub
xchg
ret
add
icebp
and
loopne
fsubr
xor
cli
sub
mov
mov
divl
subb
lcall
or
cmp
pop
pop
cmpsb
mov
cltd
das
push
mov
jb
sbb
dec
arpl
sub
bound
mov
lods
jp
jbe
ljmp
push
js
cmpsl
inc
push
jo
movsl
mov
les
cmp
test
xchg
lahf
xchg
cmp
push
out
jbe
lcall
mov
enter
xchg
pop
xor
and
arpl
cmpsb
insl
jp
xor
mov
jne
imul
xor
xchg
test
stc
or
lods
mov
jge
scas
inc
out
jno
push
sarl
xchg
scas
mov
pop
mov
inc
into
push
or
test
mov
ds
mov
mov
rorb
gs
adc
pop
and
addr16
adc
rclb
fwait
cmpsl
arpl
clc
xchg
aam
jo
cs
sar
fcomi
jbe
mov
dec
dec
pop
and
jg
or
call
fwait
jbe
pop
bound
push
xchg
jno
pop
int
fdivrl
out
inc
xchg
popa
jo
loopne
jb
or
mov
and
gs
and
mov
lods
fisttps
pop
dec
pop
das
push
push
fwait
and
enter
inc
pop
dec
cli
stos
or
mov
jle
mov
or
hlt
into
scas
cs
nop
call
add
mov
ja
daa
inc
inc
sarl
pop
test
inc
pop
js
mov
dec
mov
pop
lret
jae
add
mov
stc
cmp
cmp
arpl
out
aas
add
or
xchg
pop
dec
dec
nop
lods
andb
xorl
jmp
cwtl
jle
mov
dec
cs
adc
outsl
mov
stos
pop
mov
cmp
jns
sbb
xchg
mov
iret
add
push
pushf
xor
dec
std
sbb
fists
sub
pusha
xor
repz
inc
xchg
jmp
sahf
mov
lea
sub
xchg
into
in
push
pusha
mov
xchg
mul
jae
ds
xor
mov
dec
adc
mov
inc
lret
cmp
jo
andb
xor
jmp
imul
divl
stos
jae
sub
xlat
xor
xchg
movsl
dec
loopne
pop
dec
add
ljmp
cmp
ficomps
push
pop
sub
sub
mov
sbb
dec
xor
gs
add
pusha
xor
pop
pop
lahf
hlt
cmpb
stos
jge
pop
pop
xchg
or
fs
sbb
xchg
push
adc
mov
mov
cmp
xchg
xchg
outsl
sbb
mov
mov
sub
inc
mov
int
dec
ss
test
nop
stos
test
lret
push
popw
cwtd
loop
mov
pop
push
dec
adc
inc
ds
into
mov
out
cmpsl
insb
int
mov
pusha
mov
cmpsb
ja
jp
dec
fs
ljmp
nop
dec
fists
xor
push
push
ret
dec
sbb
cmc
sar
jnp
test
imul
loop
ret
xchg
xchg
imul
cmp
into
orl
mov
jp
les
xchg
pop
xchg
in
je
push
and
cmp
sub
out
stos
add
mov
and
leave
xchg
xor
psubusb
fldln2
xchg
fs
cmc
call
xchg
add
push
stos
rorl
push
clc
sbb
mov
adc
mov
mov
out
cmp
or
leave
push
jl
rolb
in
jne
dec
pop
rclb
push
and
and
fdivrp
in
cmc
sbb
pop
cmp
xor
gs
cmp
xchg
fsubrl
jb
shlb
xor
insb
aas
into
push
and
adc
push
cmp
dec
xor
sarb
mov
pop
xor
sbb
sub
pop
push
or
dec
ret
dec
push
add
pop
push
loope
aam
add
movsl
fwait
cwtl
cmp
xchg
xchg
push
int
and
lods
xor
xlat
add
jg
adc
mov
jl
add
cs
shl
loopne
sub
insl
push
fisttpll
adc
ja
mov
sbb
mov
rolb
push
lret
mov
cmp
testb
cmp
mov
push
cmp
scas
lret
and
sub
cmpsl
push
test
pusha
cmp
jmp
add
leave
es
addr16
rcl
mov
xchg
popl
push
nop
jno
int3
and
push
and
iret
dec
int
mov
xchg
xchg
xchg
jl
aam
test
jb
dec
push
adc
pop
scas
pop
hlt
or
or
lock
xchg
sahf
inc
cwtl
pusha
fdivp
xchg
ret
adc
jmp
pop
mov
sbbb
out
jmp
xchg
cld
pop
addr16
insb
mov
add
stos
jno
mov
jne
mov
push
iret
mov
sub
and
lret
or
rorb
idiv
lret
pop
sar
mov
lret
and
cmc
out
xor
lds
bound
mov
cmpsl
mov
aad
jecxz
cmpsl
inc
jne
mov
enter
jecxz
xchg
push
andl
aad
inc
push
pushf
arpl
hlt
rolb
popf
add
jo
inc
push
mov
mov
shrb
loop
in
arpl
lret
mov
ret
xor
xlat
push
mov
out
mov
scas
mov
push
mov
int
add
xchg
sub
inc
lahf
cmp
fs
mov
add
inc
clc
pushl
jmp
ficomps
jbe
icebp
je
into
xchg
outsb
arpl
xchg
out
loop
xlat
aad
or
mov
rcl
int3
inc
imul
ret
mov
jne
adc
inc
in
gs
fucomip
add
int3
repnz
push
call
cmpsl
lret
mov
mov
not
in
lcall
test
aam
xchg
rcl
test
push
rcr
xchg
out
and
inc
push
scas
lds
adc
mov
mov
sub
and
xchg
sub
or
pop
fcmovnbe
mov
xchg
xor
jg
cmpsb
outsl
mov
push
push
xchg
ja
lea
push
dec
lahf
test
nop
jns
push
out
xor
and
mov
jne
cltd
cmp
imul
jle
push
iret
jl
test
push
and
inc
pop
lods
jmp
push
pop
sti
rol
lret
dec
pop
sbb
mov
or
mov
out
cltd
insl
mov
loope
test
dec
sub
outsb
pop
adcl
pop
gs
or
rol
stc
icebp
adc
cld
adc
shrl
clc
addr16
int3
outsl
sti
push
lahf
dec
inc
or
inc
rcl
xchg
push
ljmp
ficompl
add
mov
jg
adc
cwtl
jge
cmp
enter
iret
and
sbb
nop
inc
pop
mov
xor
mov
push
adc
into
dec
add
mov
movsl
sub
popa
push
cmp
pop
add
test
sub
repz
push
shrl
in
jb
xchg
xchg
fwait
jns
shl
cmc
mov
popa
sbb
cmp
js
fcompl
xlat
rcll
mov
jl
sti
dec
mov
adc
cmp
ja
jno
sub
arpl
jnp
sbb
popl
adc
xchg
inc
jp
mov
jns
dec
lret
rcll
out
xchg
decb
jle
xchg
mov
sub
adc
fsubrs
lods
fcompl
pop
jae
or
xor
mov
cli
adc
adc
insb
add
push
into
loope
enter
sub
and
adc
jmp
xchg
hlt
popa
jns
data16
mov
mov
or
jno
hlt
filds
ret
movsl
jne
test
leave
inc
into
in
push
shr
sbb
xor
xchg
xor
leave
movsl
push
bound
or
mov
cmpsl
jno
jbe
jne
mov
adc
leave
inc
mov
mov
out
insl
popf
push
mov
push
jbe
inc
pushf
dec
aam
push
push
add
add
jbe
mov
clc
jbe
add
pop
enter
int
je
aam
das
or
inc
jb
pusha
mov
xchg
inc
sub
sbb
push
push
ja
xor
stos
mov
push
out
pop
lock
mov
shll
pop
movsl
jmp
pusha
das
xchg
orps
inc
jae
mov
mov
mov
xchg
push
test
fadds
scas
cli
xchg
add
sbb
xchg
dec
shr
mov
insb
sbb
ret
add
movsl
sbb
or
push
insl
jle
out
xchg
dec
lods
mov
jbe
lret
jno
lret
shl
repz
das
and
xor
pop
lret
push
or
faddl
and
movsl
mov
loope
jl
out
scas
mov
in
push
jge
adc
test
push
push
jnp
pop
or
mov
push
out
cwtl
cmp
mov
aaa
fstpt
test
testb
cld
mov
in
mov
push
push
inc
outsl
add
enter
scas
stos
jne
mov
cmc
imul
add
leave
das
push
movsb
adc
or
fcmovnu
xchg
in
cmp
fwait
sub
mov
add
mov
mov
and
fs
push
outsb
shlb
sub
insl
push
out
push
hlt
mov
in
test
addr16
pop
or
mov
sbb
popa
pop
xor
mov
outsb
dec
cmpsl
iret
sbb
jg
imul
data16
jmp
push
push
pop
sbb
lcall
xor
lods
insb
sub
mov
addr16
push
cld
xchg
rcr
adc
pop
add
fcomp
xchg
loopne
push
sub
ror
sti
andl
icebp
lret
out
dec
imul
out
jmp
fstpt
sbb
test
int3
std
mov
push
sbb
ja
repz
inc
aaa
cmp
decb
and
push
jle
mov
push
shll
sahf
lret
loop
cmpsl
dec
stc
jg
into
push
clc
test
mov
lret
lret
fcoms
lea
in
mov
push
lret
cli
xchg
pop
or
lret
sbb
shlb
xor
xor
push
aam
mov
jbe
cmpl
pop
out
cs
or
push
out
jae
cmp
dec
cld
std
xor
lods
stc
out
xlat
aaa
push
rorb
int3
cli
dec
adc
rolb
mov
xor
jns
mov
push
pop
pop
add
push
mov
jmp
xor
call
inc
inc
lret
repz
addr16
xor
adc
jl
cmp
pop
movb
stc
loop
and
daa
mov
push
vdivss
jg
push
sub
push
or
lret
inc
int3
inc
cmp
pusha
cld
mov
adc
mov
sbb
into
andb
repz
lea
fcom
lret
mov
data16
inc
fwait
aam
cmp
lods
xor
ja
mov
ljmp
xchg
push
bsr
sub
sub
mov
imul
sti
dec
mov
xchg
loope
xor
sbb
into
stc
sbb
push
fstps
xor
xor
pcmpeqd
adc
push
enter
xor
mov
pushf
scas
lahf
mov
popf
enter
jbe
cmp
stc
mov
pop
mov
pop
movl
sbb
push
imull
inc
loopne
add
xchg
xor
shr
repz
sub
sbb
cmp
call
cmp
and
push
or
mov
ljmp
mov
mov
rclb
js
jle
cmp
out
ja
push
jp
add
test
insb
daa
xchg
fdivs
arpl
decl
loopne
mov
fwait
add
xchg
cmpsb
out
adc
shll
inc
mov
aas
pop
lahf
sbb
call
in
cmp
jecxz
addr16
fsubl
cltd
jbe
xor
xchg
data16
push
jmp
mov
stc
cmpsb
movsb
push
jg
xchg
cmp
and
mov
fstl
testl
jp
sub
js,pt
jns
cmp
mov
ja
test
mov
or
inc
movsb
sub
push
leave
sub
mov
inc
roll
cmp
cli
fisubrs
sbb
ffree
in
lods
in
push
les
imull
mov
inc
pop
inc
sbb
mov
xchg
pop
sub
rcl
sbb
xchg
and
mov
fcmovne
ljmp
in
push
mov
mulb
loopne
call
test
mov
push
mov
inc
movsb
jne
sbb
xchg
mov
aad
add
xor
sub
adc
fimuls
sahf
cmp
cmp
and
mov
mov
pop
pushf
sbb
push
push
bound
gs
mull
xchg
inc
push
out
xchg
inc
leave
inc
pop
es
lahf
rol
adc
push
mov
bound
dec
imul
cmc
mov
adc
gs
sahf
adc
loopne
sti
dec
and
outsl
fwait
in
or
adc
arpl
out
pop
clc
jmp
mov
lret
mov
or
aam
jmp
test
inc
stos
jmp
sub
fstpt
xchg
gs
dec
lods
repnz
cs
loop
mov
insb
clc
in
sub
sbb
out
mov
aas
ret
imul
ds
pop
les
repnz
pop
movsb
or
imul
mov
xor
adc
cmpb
mov
lea
jne
sub
mov
mov
out
sbb
addl
int3
xlat
push
in
jp
push
lcall
leave
ret
adc
and
adc
pop
leave
fwait
pusha
es
dec
push
mov
mov
mov
andl
cmp
xchg
lods
insl
mov
into
sbb
mov
scas
mov
ss
std
sbb
gs
dec
cmpsb
call
mov
pop
punpcklbw
xchg
aam
mov
xchg
mov
sub
pop
jecxz
loop
inc
je
inc
lret
loope
xor
test
jo
shlb
jecxz
movsb
ret
cmp
mov
inc
jp
imul
pop
repnz
ss
imul
dec
ficoml
fistps
push
dec
into
adc
xchg
jo
out
loope
mov
out
sahf
push
pop
pop
jmp
into
push
jb
dec
cli
call
loop
out
pop
mov
or
pop
stc
xor
repnz
inc
std
push
fwait
cmp
insb
into
xor
jno
jne
inc
jae
xchg
xchg
sbb
dec
js
mov
notl
jbe
add
inc
mov
movsb
aas
mov
fisttpl
iret
sub
inc
loopne
jne
mov
in
mov
lret
push
mov
inc
adc
sub
adc
cs
inc
mov
fwait
xchg
pop
xor
or
je
out
insb
adc
bound
aaa
jle
ljmp
mov
inc
xor
out
in
lcall
movsb
dec
loop
sbb
stos
mov
lahf
push
je
jg
pop
jno
das
or
mov
inc
cld
cli
shlb
arpl
dec
dec
js
rcll
push
jge
inc
sbb
ja
out
jl
xchg
sub
dec
pop
push
ja
adc
imul
jle
inc
mov
stos
in
xchg
sub
inc
ret
dec
xor
sub
fwait
repz
mov
jae
sbb
jb
push
add
fcomps
in
leave
out
mov
test
cltd
out
aam
add
cmp
aad
mov
sarl
xchg
outsl
dec
jno
sub
mov
int
cmc
push
lods
test
or
roll
mov
jnp
scas
enter
pop
ret
repnz
jno
xchg
mov
mov
movsb
lahf
sub
mov
push
into
sti
xor
sbbl
jbe
insl
sub
mov
shlb
js
adc
scas
sbb
add
sti
mov
inc
fsubl
ljmp
ret
into
sarw
lcall
mov
repz
mov
xchg
dec
mov
loop
aas
mov
ror
ss
lret
dec
pusha
sub
imul
popa
pop
int3
sbb
fstpt
les
sbb
push
sub
and
aad
lea
add
jne
xchg
adc
inc
sbb
mov
adc
addr16
and
mov
repz
icebp
stc
mov
inc
or
mov
mov
mov
shll
pop
fwait
mov
sti
push
dec
adc
xor
gs
dec
shll
or
sub
imul
adc
out
mov
fsubs
add
movb
xor
sbb
and
scas
scas
sub
stc
cmp
subb
shlb
sbb
lods
cld
mov
orl
shlb
push
popf
push
repnz
dec
mov
mov
daa
pop
aaa
sti
into
or
push
popa
es
or
testb
or
add
sbb
lea
rol
into
jl
push
mov
movsl
dec
clc
push
add
movsl
sub
rolb
jne
data16
xor
mov
mov
mov
adc
jbe
int3
jne
test
cmp
loopne
pop
pop
sbb
jmp
insl
mov
xchg
mov
rorl
lret
adc
dec
cmp
xchg
mov
adc
sub
and
mov
mov
fdivrp
mov
xor
pop
std
mov
cmp
push
repz
adc
xor
rcr
ret
push
push
jns
cltd
repnz
add
or
push
add
insl
xchg
and
xchg
mov
sub
out
into
mov
mov
shl
push
mov
jnp
lret
sub
test
or
cwtl
rclb
aaa
lds
lods
mov
push
dec
mov
cmpsb
shl
mov
adc
shlb
push
loope
dec
cli
pop
dec
je
push
mov
lcall
xchg
push
adc
aaa
jne
push
sub
loopne
vcvtss2si
fmull
in
sbb
dec
dec
xchg
xchg
iret
dec
daa
leave
pop
mov
sarl
xchg
test
imul
arpl
fs
outsl
xchg
ret
addr16
mov
push
add
mov
mov
cwtl
sub
jbe
das
mov
or
lcall
mov
ss
mov
jae
pop
push
dec
stos
jbe
sbb
xor
adc
not
pusha
lock
mov
cmpsb
jbe
aam
dec
aaa
ret
mov
leave
pop
mov
jb
push
or
jae
push
cs
push
hlt
jmp
and
push
adc
push
das
or
sbb
shlb
addr16
inc
mov
adc
jo
out
cmpsl
clc
push
sbb
shrb
jecxz
sahf
ret
dec
push
out
lcall
imul
insb
cmc
add
iret
sub
jle
loopne
jl
cmp
push
es
cwtl
ja
mov
inc
enter
xchg
in
dec
lea
inc
sub
int3
btc
clc
arpl
sub
sbb
repnz
cmpsl
mov
xchg
pop
popa
adc
stos
adc
js
ds
leave
xchg
or
ljmp
sbb
andl
cltd
jbe
jp
or
ja
jb
xchg
clc
movsl
loope
fwait
scas
dec
mov
fsts
adc
xor
mov
jmp
adc
sbb
mov
mov
es
loopne
and
or
lcall
iret
pop
xchg
sbb
daa
es
pop
cmc
rol
or
addr16
insl
subb
mov
mov
xor
into
fstps
push
outsb
das
mul
or
ljmp
fiaddl
xorb
cmpsb
in
das
xor
dec
inc
add
mov
test
sub
out
sbbl
sti
fdivrp
xchg
cmp
xorb
popa
and
sub
idiv
mov
dec
sbb
imul
mov
cltd
adc
fs
xlat
jp
jb
aaa
adc
outsl
fcmovnbe
or
les
pop
xchg
out
push
mov
imul
sbb
loopne
jl
sti
outsb
fiadds
mov
push
sbb
lods
test
push
lahf
push
cltd
xchg
shll
jo
sbb
xor
add
cmp
iret
mov
sub
mov
or
xor
or
and
sbb
inc
movsl
roll
push
inc
add
mov
cmp
sub
fcomps
stos
lret
mov
flds
jae
push
and
into
xor
lret
pop
push
adc
xor
sti
dec
mov
xchg
loope
lods
fs
adc
mov
pop
outsb
es
inc
iret
and
lret
popa
lret
pusha
jmp
pushf
clc
jbe
out
add
add
lods
out
inc
push
out
mov
into
mov
pop
xlat
xor
xchg
push
testl
dec
or
test
test
inc
mov
ffreep
mov
or
jle
push
pop
scas
scas
sub
jae
adc
popf
and
xchg
and
sub
out
out
ret
jns
sub
loopne
sub
lfs
into
mov
pop
pop
or
dec
loope
lock
loop
mov
cmp
movsl
and
sub
mov
push
sbbl
push
lock
dec
pushf
add
and
repnz
xchg
dec
xchg
into
idivl
jno
mov
push
mov
repz
dec
and
jp
dec
xchg
push
and
lret
insl
xchg
shl
stos
jb
push
outsl
dec
lcall
push
xchg
dec
pop
lret
punpcklbw
ss
bound
lret
insb
jge
lret
insl
call
pushf
ljmp
test
les
xor
imul
xorl
push
jge
hlt
inc
iret
insb
push
pusha
mov
add
fcmovbe
sbb
jle
jbe
test
pop
fadd
add
cmp
dec
in
out
add
dec
or
fsubs
das
into
xchg
sub
dec
popa
jne
sbb
outsl
jmp
insb
aaa
inc
or
lahf
mov
sbb
aas
sub
das
rsqrtps
jno
stos
push
cmp
dec
out
dec
jnp
imul
and
outsb
cmpsl
mov
test
jnp
testl
dec
pop
loop
hlt
test
js
and
mov
mov
scas
inc
jecxz
fisubs
xchg
sub
cld
ror
fsub
in
push
fimull
outsl
dec
iret
push
jge
test
xchg
int3
cwtl
movsb
xor
fistps
bound
inc
and
push
mov
out
cld
paddw
jb
xchg
sahf
mov
popf
aad
popa
or
jne
inc
xchg
ret
push
lock
mov
data16
cmp
push
lods
and
xor
cmpsb
les
cmp
xchg
loope
mov
and
push
leave
nop
xor
arpl
inc
pop
dec
pop
xchg
ret
adc
xchg
into
out
popf
pushf
mov
mov
sti
aaa
outsb
xchg
add
jp
xchg
out
mov
rolb
push
xlat
mov
inc
sarb
xor
mov
pop
call
lock
mov
push
jbe
cwtl
shl
int3
pop
imul
cltd
mov
push
push
aad
mov
iret
sub
sbb
cmp
enter
jge
stos
mov
lret
bound
add
mov
ret
push
sti
imul
iret
and
and
adc
mov
outsb
xchg
cmp
mov
cmp
lea
or
in
push
loope
inc
cli
js
pop
out
push
mov
mov
add
stos
rcl
jecxz
mov
cmpsb
out
sub
arpl
out
popl
lret
bound
adc
pop
movsb
fmul
arpl
pop
out
adc
pop
popa
cli
nop
push
cmc
jmp
push
popf
cmp
movsl
lret
out
xchg
mov
xchg
lret
inc
in
dec
dec
push
jl
mov
cmc
ret
push
inc
sbb
sbb
rcl
out
repz
cld
into
cs
xchg
stc
pushf
jae
push
mov
cwtl
fldcw
sub
jo
mov
dec
sbb
sbb
cmp
push
mov
mov
jecxz
out
setp
cmpsl
gs
inc
sub
push
jae
jno
cltd
andb
shl
mov
ljmp
cs
cld
and
mov
inc
pop
hlt
sbbb
into
rol
fwait
and
mov
out
xor
mov
fstp
sbb
mov
add
jb
cmp
hlt
adc
jnp
mov
adc
add
addr16
cmp
xor
mov
and
dec
mov
sub
icebp
cli
jns
sbb
iret
dec
jmp
aas
pop
frndint
ret
cmpsb
in
es
outsb
mov
push
sbb
xchg
xlat
push
adc
cmp
in
cmp
cmp
pop
push
cs
mov
cli
dec
iret
das
xlat
add
stc
loope
cmp
adc
movsl
pop
xchg
and
fbstp
es
mov
and
push
nop
xorb
out
testb
adc
inc
lret
js
les
loop
lock
lahf
or
or
aaa
xor
mov
inc
pop
insb
jne
into
scas
and
cmc
gs
cmp
hlt
ds
sbb
imul
push
xor
out
add
mov
mov
pop
jp
pop
test
sub
gs
insl
fs
scas
leave
into
sbb
inc
xchg
sahf
stc
icebp
rcll
sbbb
loop
or
hlt
movsb
xchg
sub
and
add
jg
xor
int3
rcr
loopne
fisubl
movsb
mov
jmp
sbb
and
lea
aaa
aas
sub
dec
fstps
sbb
imul
test
jge
dec
icebp
pop
inc
cwtl
fdivrs
dec
in
pop
push
les
xchg
mov
mov
push
push
out
inc
sahf
stos
mov
cmp
push
cmp
fdivrl
cmp
test
bound
push
pop
push
or
lods
std
notl
mov
push
cmp
and
jae
inc
xchg
ljmp
repz
out
sbb
int3
mov
or
cmp
mov
aas
test
sbb
lods
std
dec
sub
sub
push
aas
test
jp
lret
sahf
insb
fwait
aad
jns
psubusb
dec
je
cli
enter
ret
iret
jbe
sahf
ret
out
jl
sbb
in
mov
and
test
pop
in
nop
jle
adc
lock
out
test
push
dec
adc
lcall
int3
mov
mov
adc
sub
adc
mov
test
sysenter
popf
pop
jle
pop
in
add
ffreep
sbb
push
pop
and
lods
inc
add
dec
mov
push
data16
cltd
mov
push
xor
lret
pop
xchg
xchg
movsl
jae
cmp
mov
pop
out
jmp
mov
push
rclb
push
fidivs
jbe
test
shl
jmp
mov
push
fnop
sbb
movsl
mov
add
cmp
ret
test
dec
inc
cltd
repz
or
cs
dec
movb
cmp
jns
adc
cmp
xor
push
outsb
sti
mov
pop
out
sub
xor
pop
sbb
xchg
mov
adc
outsb
ja
scas
aad
icebp
mov
flds
push
aaa
orb
out
xor
mov
lret
push
cltd
js
pop
or
pop
xchg
xor
shrd
lods
push
es
mov
das
mov
or
lods
sbb
jns
cltd
dec
adc
scas
sbb
cmp
or
or
int3
rcrb
jl
xchg
dec
lret
in
and
xchg
jb
in
lret
icebp
inc
repz
repnz
xchg
jecxz
push
jne
push
enter
sahf
fildl
inc
mov
outsl
outsb
sub
xchg
push
xor
fcom
jl
cmpsl
adc
lods
rcl
mov
pop
iret
mov
jno
imul
and
js
mov
push
outsl
xchg
lahf
rcrb
cli
out
fst
pop
fwait
pop
xor
dec
pop
inc
push
faddl
into
out
xchg
les
in
sbb
jl
call
sub
xchg
movsl
sub
or
push
cmpsb
push
xorl
aam
or
into
pop
clc
pop
push
xchg
das
sub
ja
mov
and
lahf
imul
pop
stc
mov
pop
adc
cmp
and
cmp
push
movsb
mov
jge
adc
xchg
mov
jnp
mov
nop
mov
dec
jmp
mov
imul
dec
adc
cmp
jnp
jge
pop
cmpl
rolb
push
xor
push
cli
insl
sbb
out
int3
clc
mov
testl
inc
cmp
xchg
lods
hlt
cmp
jno
and
into
ret
mov
rcrl
mov
mov
cmpsb
out
aad
mov
push
pop
pop
mov
fwait
out
repnz
stos
popf
ss
or
adc
dec
mov
add
rcl
xor
mov
aaa
sbb
incl
mov
sub
mov
mov
fimuls
repz
push
sub
push
out
scas
and
and
aam
pop
mov
aaa
in
jle
lret
jmp
repz
push
cmc
sbb
mov
in
jl
in
dec
mov
out
jne
push
mov
test
fwait
adc
and
insb
ficompl
cmpsl
dec
pop
cmp
lahf
cmp
lock
mov
xor
insb
stc
xchg
cli
popf
into
ror
sub
inc
adc
insb
mov
jne
gs
outsb
add
shlb
addr16
test
mov
dec
mov
subb
popf
xchg
mov
loop
push
cltd
adc
nop
xor
iret
push
fwait
or
shrb
and
or
aas
mov
repz
mov
xchg
lds
in
addl
negb
push
mov
jle
xchg
xor
sub
stos
enter
push
cmp
lods
push
daa
shlb
mov
pop
mov
xor
out
in
jno
dec
pop
lcall
mov
iret
or
inc
adc
fisttps
mov
mov
mov
mov
cmpl
jmp
push
in
cmp
je
or
ja
mov
add
in
jecxz
repz
xor
or
dec
cltd
gs
ret
out
out
add
cwtl
arpl
fiaddl
mov
fcmovnbe
dec
mov
push
cltd
adc
mov
xor
arpl
into
adc
cmp
dec
jo
pop
cmpsl
faddl
jno
das
clc
pop
mov
lcall
pushf
test
inc
sbb
or
lret
ja
subb
mov
jbe
outsb
mov
push
inc
mov
mov
and
out
sub
push
shlb
aaa
jae
fs
daa
cmpsl
fxch
jne
cmc
sti
lret
das
mov
mov
pop
mov
xchg
imul
mov
cli
inc
pop
test
in
jmp
enter
lcall
dec
pop
prefetcht2
mov
adc
pop
addr16
push
xor
cmpsl
ret
pop
lods
pushf
push
push
mov
mov
mov
sub
rclb
fistps
sub
scas
jbe
mov
add
push
push
push
icebp
int3
jmp
inc
not
inc
rorb
push
into
mov
dec
sub
aaa
into
xor
inc
push
push
jg
xor
xor
lret
push
shll
mov
hlt
out
mov
and
movq
push
into
enter
sub
adc
test
dec
cmp
cmp
xlat
jnp
cmp
push
inc
xchg
jb
push
xor
inc
xor
outsb
mov
xchg
rcrl
inc
jecxz
sub
pop
jbe
adc
aam
int
ficoms
xor
xor
sub
loop
sub
mov
frstor
sub
sbb
and
jmp
fiadds
xor
and
jbe
test
xchg
sub
scas
sahf
pushf
push
dec
repnz
jle
sbb
sbb
sub
rcl
int
jl
lret
xchg
rsm
imul
mov
mov
dec
testl
inc
fmul
inc
add
sub
pushf
inc
jp
jmp
sbb
push
push
insl
je
cmp
lods
xlat
push
cmp
in
test
push
es
dec
loop
dec
dec
stos
repnz
nop
cmpsb
loopne
repz
push
lcall
sub
inc
arpl
jmp
stc
pop
jl
dec
aam
cmp
xor
mov
clc
and
xlat
sbb
jo
adc
push
das
addr16
out
pushf
inc
jbe
push
push
in
in
fiaddl
push
ds
stos
std
pop
aas
jmp
lods
dec
outsl
xchg
in
int
movsl
xor
ja
inc
arpl
clc
mov
mov
mov
rcr
xchg
add
out
xchg
or
scas
inc
lret
sub
xor
adc
add
mov
repnz
mov
inc
popf
ja
les
jg
and
jns
pop
out
enter
mov
pop
fnstsw
les
ret
psllq
mov
test
loope
pop
cmc
jno
fcmovbe
pushl
lods
inc
xor
pop
pop
fdivs
sar
mov
lds
fs
jbe
and
xor
inc
jmp
hlt
inc
xchg
negb
out
fbstp
aam
fsts
inc
call
out
insb
sbb
mov
iret
mov
add
sub
pop
outsl
bound
mov
mov
xchg
es
fldl2t
cmp
pop
cmpl
rorb
aaa
dec
inc
adc
cmc
popa
out
and
fwait
ret
cmpsb
adc
into
jl
aad
scas
pop
inc
imul
inc
jnp
add
or
sbb
outsb
jl
push
inc
lock
jae
add
or
fwait
cmp
sbb
push
out
sti
add
mov
mov
out
inc
test
mov
addr16
lahf
lds
push
xchg
outsl
mov
inc
dec
imul
test
mov
into
repz
dec
lea
mov
xlat
lret
xor
xlat
shlb
jae
rorb
cmp
addr16
cmp
insl
aaa
pop
cmp
adc
imul
or
stos
into
negb
adc
and
adc
mov
push
aad
test
cmp
in
push
push
xchg
xor
add
mov
adc
fnstsw
insb
mov
fildll
test
arpl
sbb
ss
push
jp
push
lods
push
mov
shrb
sbb
popf
mov
xlat
mov
hlt
push
aam
sub
or
dec
dec
test
lret
xlat
outsl
scas
ret
pop
adc
mov
cmp
push
push
mov
jecxz
ljmp
push
cmp
inc
add
dec
xchg
xor
nop
faddp
leave
xchg
push
repnz
outsb
jbe
ljmp
loopne
mov
sub
mov
push
adc
test
in
pop
jb
fs
cltd
push
fnstenv
mov
mov
add
pop
addb
cmpsl
rcll
push
mov
into
cld
ret
in
sub
and
xchg
sub
sub
enter
push
xor
mov
out
gs
xor
leave
xlat
scas
cmp
jecxz
imul
or
fcoml
or
cmc
jg
pop
shrl
cmp
dec
lret
dec
in
outsb
push
mov
lret
cmpsb
dec
xor
fnstcw
ljmp
jp
push
mov
fildl
mov
or
sahf
imul
mov
fidivrl
rclb
xchg
jg
leave
pop
popf
jbe,pt
dec
mov
mov
mov
adc
sbb
sub
loopne,pt
outsl
or
cmp
and
rorb
adc
das
push
sub
addr16
nop
test
sbb
sbb
ficoml
sti
or
iret
or
sbb
filds
test
jae
arpl
mov
not
cmp
lret
adc
das
or
jge
push
sub
jle
xchg
int
inc
and
pop
les
roll
sbb
out
fwait
xchg
loopne
mov
xor
inc
xor
xchg
negl
loope
cmp
icebp
and
mov
push
jae
adc
call
push
not
lods
mov
xchg
adc
in
adc
out
and
xor
enter
std
mov
orl
out
fwait
nop
mov
xor
push
movsb
ds
popf
testl
cmp
in
jo
out
xorb
and
sbb
pop
or
std
push
push
pop
nop
addr16
dec
xorl
arpl
xor
popf
xchg
sbb
int3
mov
iret
and
andl
out
lock
enter
or
mov
sub
call
dec
loope
sub
test
xchg
movsb
rcrl
cmpsl
mov
ret
outsb
lock
out
and
cmpsb
shll
adc
mov
andl
mov
xchg
aad
pop
cld
lret
and
imul
mov
dec
dec
shrb
data16
out
testl
push
in
popf
cmp
and
sbb
shrl
js
jmp
dec
sahf
pop
lods
lret
jno
push
jae
mov
sub
popf
xchg
stos
inc
mov
mov
and
ja
lods
jecxz
es
hlt
bound
into
scas
mov
inc
nop
aam
dec
pop
call
sbb
test
out
cmp
or
sub
xchg
add
cmp
and
push
fwait
je
rcll
sarb
test
insb
mov
lahf
rcrl
movsl
mov
nop
cld
sub
rolb
or
sub
xsave
mov
sub
or
test
ds
inc
pusha
xchg
aaa
xchg
mov
sub
movsb
mov
push
bound
cltd
xchg
add
sbb
js
movsb
xor
push
ret
or
lcall
addps
dec
xchg
jae
dec
jp
int3
and
arpl
dec
cli
jp
jb
ss
cmp
push
fistl
stc
testb
push
sub
movsl
pop
lret
add
jmp
ljmp
mov
sbb
push
mov
adc
outsl
addr16
je
into
jmp
dec
mov
xchg
clc
add
lahf
fs
dec
fldt
lods
lret
pop
leave
movsb
cmp
icebp
mov
cwtl
mov
leave
xor
dec
sbb
call
jbe
jo
ljmp
cmpsb
popa
into
cmpsl
scas
sbb
fisttpll
nop
and
push
mov
xor
fiadds
push
out
sbb
mov
popf
add
lahf
ljmp
dec
testl
lret
xchg
aad
cmp
add
xor
mov
test
or
adc
sub
push
cli
xchg
add
cmp
xlat
nop
push
xchg
xchg
repnz
gs
int3
lock
fisttpll
lret
scas
sbb
sti
xchg
and
pop
ljmp
out
cmpsl
es
icebp
rorl
divl
aad
cld
add
out
sub
test
popa
arpl
inc
xchg
sbb
pop
mov
mov
or
sti
es
xchg
lahf
dec
pop
dec
jg
and
xchg
cmc
ja
adc
adc
pop
dec
imul
mov
jns
mov
imulb
sahf
xor
enter
stos
setp
es
lods
sarb
sub
sub
adc
push
stos
cmp
lods
dec
movsl
jge
shlb
mov
push
daa
cld
scas
in
rclb
fimull
rcll
cmp
or
outsb
sbb
out
out
push
loopne
push
insl
aam
inc
dec
sub
jp
lahf
flds
aaa
out
jae
sub
cld
lcall
adc
and
mov
movsb
xchg
into
xlat
push
out
mov
push
cli
jno
inc
mov
lock
fadd
addr16
pop
push
push
pusha
cmp
jo
hlt
xlat
shr
mov
lret
adc
cmp
rorb
cmpsb
out
jb
ret
iret
mov
or
adc
pop
and
icebp
lret
clc
or
test
jbe
out
jmp
shrb
rcrb
cs
int
sahf
add
fcmovne
shl
lret
mov
in
test
mov
fsubs
test
dec
push
rcr
aad
push
inc
dec
and
cmpsl
cmpsb
lret
mov
out
add
clc
mov
and
jno
out
or
xor
pop
test
loope
popa
lahf
jp
adc
rorb
into
xchg
xchg
cmp
aad
pop
imul
mov
movsb
xchg
dec
stc
fbstp
inc
pop
mov
scas
js
arpl
cld
push
sub
mov
loopne,pt
inc
or
aam
test
xchg
xor
pop
adc
je
ret
cwtl
fisttpl
bound
lods
fcmovu
test
mov
ret
movsl
xor
sbb
inc
es
in
xor
lret
sti
in
loopne
lds
int
outsb
iret
mov
popa
jne
xchg
cmpb
xlat
fcmovbe
lock
adc
inc
int3
mov
test
js
mov
je
dec
pop
stc
int3
sub
dec
clc
push
fimull
int3
call
or
xor
add
xchg
push
jge
clc
mov
or
hlt
sti
lret
repz
out
inc
int
fdivrs
fmulp
sbb
nop
in
stc
fs
or
dec
test
inc
adcb
pop
nop
inc
nop
push
pushf
stc
cmp
and
add
js
xchg
jb
hlt
push
ds
in
mov
adc
fildl
dec
jmp
xchg
imul
ja
dec
mov
test
rcrb
add
and
out
xchg
lret
lcall
inc
repz
fistps
les
lcall
lret
sbb
addb
jnp
inc
lahf
es
adc
imul
cmc
sub
xchg
sbb
xchg
ret
aad
xchg
or
repnz
pop
int
rcl
shr
mov
rclb
or
xchg
push
or
mov
cli
push
bound
ror
loop
stos
and
mov
cmpsb
das
lcall
mov
push
inc
pushf
mov
inc
add
or
mov
cmp
out
lods
pop
push
imulb
out
pop
enter
cmc
shl
rcl
movsl
cmpsl
dec
into
xchg
push
xchg
mov
jmp
xchg
or
cmpsl
mov
mov
dec
lock
and
cmpsl
movsl
or
pop
imul
sbb
or
aam
in
std
or
outsb
push
test
adc
inc
aam
jp
aas
sub
inc
sbb
loopne
jl
adc
mov
xchg
push
clc
int
mov
cmpsb
movsl
test
lahf
mov
int3
and
out
loope
inc
cmp
add
dec
add
mov
scas
lcall
add
push
aam
xchg
not
aam
imul
pop
icebp
cmp
in
inc
sbbl
js
in
int
ss
cs
adc
add
push
jbe
mov
jno
push
je
mov
adc
cmp
cmpsl
push
jg
jnp
cmp
aas
inc
and
into
loop
daa
sbb
inc
int3
outsl
out
lret
pop
dec
mov
roll
sbb
sti
add
in
aad
in
pop
lods
movb
dec
test
stos
mov
std
xchg
sub
cmp
or
fnstsw
shl
sahf
and
xor
lcall
imul
inc
push
rolb
mov
es
xchg
in
adc
rclb
dec
rcl
ret
and
imul
xor
ss
fdivl
dec
aaa
xor
stos
add
das
push
mov
in
sub
stos
jmp
loope
fsubrs
push
loopne
sub
test
dec
cwtl
and
xchg
imul
mulb
lds
sbb
mov
out
xchg
out
mov
jb
aam
mov
mov
mov
aam
sub
and
shrl
clc
rcl
xor
xchg
add
leave
push
out
test
pop
and
mov
dec
cmc
adc
pop
pushf
shlb
mov
fisubrl
int3
sbb
loope
subb
jnp
sbb
scas
ss
or
test
jns
or
repnz
xor
mov
dec
jle
push
cmc
dec
sbb
or
fcomps
and
aaa
test
xor
xchg
imul
mov
andl
nop
sbb
xor
mov
lret
adc
xchg
cmc
mov
or
rcrl
imul
mov
mov
movsb
test
add
sti
shll
data16
imul
pushf
mov
mov
scas
pop
test
push
jle
xor
dec
mov
push
outsb
cs
jo
fadds
add
daa
jp
insl
ss
js
pop
in
ficompl
int
scas
adc
mov
pop
lret
sbb
mov
aam
in
lock
push
fwait
xchg
jnp
outsb
push
out
dec
cli
mov
daa
push
inc
sub
imul
cmp
lahf
jnp
lods
pop
ss
jne
js
jbe
idivl
into
ds
cmpsl
mov
adc
xor
add
pop
aam
mov
xchg
sbb
into
lods
fwait
lods
ljmp
mov
inc
fcmovnbe
or
das
dec
jmp
jmp
insl
leave
cmpsl
repnz
adc
mov
shl
dec
xchg
adc
std
and
cli
clc
stc
mov
test
lret
fnstsw
add
rorb
and
repz
xchg
cltd
mov
pop
or
push
mov
xor
in
les
lret
shlb
loop
movsl
mov
lcall
xchg
fimull
push
sub
sub
xor
mov
in
das
or
cmpsl
xchg
push
into
dec
or
ds
push
js
fmuls
data16
sub
pop
ffree
mov
scas
popf
and
jae
stos
lods
inc
aas
cmpsl
aaa
sbb
sub
cmp
xchg
or
pop
ret
cli
and
sbb
cmc
das
outsl
pop
ds
cli
aas
xchg
or
jno
popf
clc
movsb
mov
int
adc
inc
shl
insl
pushf
xchg
scas
dec
shll
push
cmp
jg
lahf
into
pop
or
arpl
in
mov
out
xor
pop
mov
stos
sub
add
lods
repz
lea
cwtl
ret
jne
icebp
inc
test
aas
jl
or
out
fstpl
xor
dec
jge
int3
fs
clc
push
and
stc
into
mov
sbb
ret
rcrl
fistps
inc
dec
arpl
inc
rcl
shlb
jle
xor
stos
aas
les
lock
out
dec
inc
push
push
xchg
add
push
sub
pushf
adc
out
pop
jmp
int3
cltd
cmp
pop
cvtdq2ps
mov
jae
xor
add
in
push
pop
push
scas
dec
insb
pushf
clc
leave
xchg
cld
cmovle
dec
daa
mov
or
sbb
out
rorb
mov
jns
inc
frstor
lret
adc
cmpsl
lea
sub
out
loop
mov
cmp
jne
shr
into
jle
adc
out
outsl
mov
dec
int3
xchg
push
mov
ss
pop
mov
aam
mov
subl
lds
clc
add
notb
into
insl
sub
test
mov
adcl
push
dec
cld
adc
pop
lret
in
mov
xchg
call
hlt
aad
lret
stos
popf
into
js
mov
jne
bound
push
in
xor
push
sar
scas
jmp
loope
pushf
lcall
pop
outsl
inc
mov
cmpsl
add
and
adc
xchg
inc
fdiv
cmp
lcall
ds
rclb
out
mov
out
fdivs
inc
pop
cmc
push
add
out
loop
lret
xchg
push
mov
sbb
or
inc
cmovbe
fdivr
sub
xor
lods
adc
cmp
jp
subb
lock
imul
mov
movsl
add
out
lods
or
jmp
push
cmp
xchg
daa
jb
cwtl
mov
clc
cmp
popa
push
jecxz
push
rcl
into
mov
and
xchg
imull
mov
lahf
bound
out
popf
mov
and
jae
fwait
add
mov
xchg
ja
into
add
out
xor
dec
push
stos
push
and
es
mov
push
inc
pop
lock
mov
out
fld
leave
pop
movl
push
cmpsl
fs
mov
xchg
outsl
call
cmp
daa
loope
popf
push
out
fcom
cmp
inc
mov
mov
ljmp
test
and
nop
cmp
push
lods
inc
cld
addr16
aas
loope
adc
jg
xor
xchg
gs
insl
and
jbe
sub
or
call
cmp
nop
xchg
lret
mov
sub
cmp
xlat
das
mov
lret
orl
lahf
push
ds
shll
lods
testb
xchg
dec
lods
push
out
cmc
jnp
lock
fucomip
arpl
cmpsb
sbb
stos
pop
imul
xchg
gs
loopne
add
xchg
or
pop
or
dec
xchg
xor
inc
in
clc
mov
push
or
inc
cwtl
fidivrl
adc
and
test
xorl
ret
adc
push
lret
test
mov
ds
inc
sbb
xor
daa
ret
sub
and
movsl
sub
fisubrs
leave
cmovg
push
mov
cs
aaa
xchg
jp
dec
cmp
fimull
int3
inc
cmp
aad
pop
lret
lahf
sub
mov
jmp
dec
lock
enter
les
into
xor
or
ljmp
ds
xor
inc
lret
mov
fs
xchg
iret
ds
popf
cmp
mov
cmc
cmp
mov
or
bswap
es
xchg
pop
je
and
movsb
or
cmp
aaa
sbb
xchg
push
cwtl
movsl
xlat
and
in
jle
adc
loopne
incb
popf
fcmovbe
imulb
push
lock
fwait
cli
sbb
or
movsb
into
lahf
iret
roll
adc
aaa
jmp
pop
in
fdivrl
pop
lret
sbb
xchg
lods
dec
cmc
mov
dec
mov
push
in
jbe
mov
mov
lret
ds
adc
pop
imul
out
fcoml
adc
pop
dec
mov
jmp
mov
mov
jns
jbe
adc
push
cmp
or
jbe
mov
mov
push
sub
lcall
or
mov
insb
cmpsb
enter
in
repz
sti
out
inc
mov
jbe
aas
addl
push
popa
mov
push
dec
pop
jl
adc
js
test
xchg
pop
aam
ret
sbb
imul
cmp
mov
gs
iret
mov
cli
adc
mov
xchg
push
xor
ret
out
lock
in
add
dec
mov
aaa
mov
in
push
dec
inc
test
inc
jno
rol
adc
cs
adc
cmp
or
adcl
into
mov
jp
inc
shrl
outsb
jne
lds
adc
repz
dec
adc
pop
sarb
jecxz
jecxz
les
mov
hlt
push
mov
jb
mov
xor
ja
outsl
out
nop
faddl
mov
xlat
test
mov
and
mov
insb
imul
into
pop
adc
int
out
sbb
lods
mov
addb
jbe
add
xchg
mov
pop
and
or
mov
pop
mov
and
into
lds
or
arpl
sbb
inc
lret
mov
pop
popf
xor
mov
mov
xchg
adc
cltd
xor
pop
and
and
out
inc
mov
and
aas
cld
int3
jmp
cmpsb
xchg
push
dec
repnz
push
cmpsl
lea
push
sbb
scas
inc
or
test
xchg
sub
bound
mov
sub
out
lcall
mov
mov
stc
fnstsw
lahf
loopne
pop
push
mov
cltd
and
adc
mov
aas
mov
aam
into
adc
sub
and
inc
mov
mov
sbb
shl
bound
leave
and
push
xchg
adc
jle
mov
addb
pop
push
lret
and
adc
dec
icebp
mov
int3
stos
ret
push
jmp
addr16
cmc
jb
push
inc
fstps
das
int
push
mov
lods
dec
outsb
mov
rolb
jne
js
addr16
and
insl
das
mov
push
cmp
push
movsl
cmpsl
push
es
pop
loope
cmpb
rolb
and
jp
pop
test
int3
mov
fcmovbe
mov
xor
push
xchg
push
cmpsl
fldl
mov
loop
jne
mov
test
popa
clc
dec
lock
sbb
push
jne
lods
aas
mov
aam
sarl
scas
es
adc
add
imul
jo
les
mov
cs
in
cltd
sub
mov
icebp
jg
inc
lock
int
rolb
jmp
cwtl
mov
push
pop
jnp
leave
inc
lods
dec
sbb
imul
imul
lcall
aam
mov
mov
loope
cmpsl
mov
sbb
push
fildl
popf
pop
cmovns
jbe
jmp
xor
cld
cmp
lret
and
std
dec
call
repnz
cmpsl
add
in
bound
mov
inc
int3
int
repnz
mov
lret
pop
out
subb
fstps
or
lcall
xchg
cld
pop
fwait
cmp
fsub
pop
das
scas
dec
sbb
push
lret
or
adc
stos
arpl
lds
insl
sbb
jmp
xor
sub
sub
insb
idivb
adc
dec
lods
cs
adc
in
or
xlat
mov
or
fs
and
fld
add
pop
xchg
or
jmp
data16
push
mov
and
ja
movsl
and
mov
mov
jbe
push
adc
ret
mov
xor
dec
jecxz
dec
addr16
fadds
cmp
adc
push
sub
sub
call
shll
lahf
mov
mov
imulb
jp
and
push
in
dec
xlat
fsubrl
outsb
and
ret
nop
push
inc
lahf
mov
jmp
pop
sahf
sub
fmul
adc
cmc
adc
mov
add
fidivl
aam
sarl
arpl
std
das
mov
adc
xor
into
push
out
mov
and
lock
sub
or
out
ja
insl
pop
xor
filds
aam
enter
inc
mov
scas
test
lock
adc
mov
cmp
in
jg
ret
into
cmp
popa
push
enter
fsts
cmp
cld
not
ljmp
and
pop
dec
adc
es
lcall
inc
dec
stos
shufps
mov
leave
pushf
into
xlat
movsl
pop
test
shl
loop
popa
outsl
dec
jae
jnp
add
add
popf
xor
push
sub
out
nop/reserved
xchg
jle
add
push
daa
push
rcl
cmc
sti
xor
ljmp
lock
mov
sbb
jns
inc
cmp
mov
xchg
jp
jno
sub
fmuls
pushf
mov
push
pop
sub
push
into
dec
jo
inc
sub
imul
mov
insl
mov
pop
ja
mov
lahf
jp
ds
xor
cmp
jecxz
adcl
sub
out
pop
xorb
inc
test
scas
je
stos
mov
dec
mov
ds
arpl
xchg
dec
push
jae
mov
pop
jbe
pop
mov
xchg
cltd
inc
push
xor
movsl
hlt
pop
sti
shrb
adc
iret
mov
jle
mov
or
stos
push
jbe
push
jnp
jl
push
insl
sbb
mov
push
repz
sbb
or
out
dec
pop
mov
and
enter
das
es
lea
sbb
aad
outsb
test
adc
iret
in
je
idivb
xchg
mov
arpl
and
xchg
fdivl
fs
ja
xor
scas
adc
push
test
dec
fadds
insl
add
mov
fistpl
adc
in
loope
bound
scas
jg
in
sub
pop
lahf
push
mov
out
repnz
ret
inc
pop
jp
out
pop
bound
xorb
mov
shlb
push
cmp
scas
and
cmpsb
je
psrlq
pop
dec
sbb
sub
fwait
cmp
jmp
lret
jecxz
lea
push
pushf
in
in
nop
lcall
loopne
sbb
pop
loope
mov
mov
mov
movsl
or
mov
shl
imul
lahf
and
clc
jecxz
fsts
cld
xchg
pop
aam
in
mov
shrl
sbb
int
stos
jae
dec
out
iret
lock
inc
out
scas
mov
jecxz
add
push
cmpsb
sub
lods
and
sbb
jae
sahf
fisubrs
or
dec
negb
cwtl
and
xchg
pop
ja
sbb
push
xchg
xchg
faddl
stc
pop
mov
test
push
mov
mov
ss
sarb
mov
pushf
sbb
xchg
dec
into
out
jno
sbb
xchg
popf
or
xchg
and
int
hlt
insl
fsubrs
pop
jmp
mov
out
cmp
lcall
movsl
jo
pushf
into
loope
push
in
cmpsb
push
nop
sub
scas
push
push
cmp
andb
shl
adc
push
cli
in
xor
lret
mov
or
sub
fisttps
sahf
sub
push
enter
stc
push
ret
jb
aam
pop
jae
xchg
mov
test
jecxz
push
rcrl
daa
out
fucom
dec
out
popf
lea
gs
out
dec
add
andl
ss
jae
jg
clc
xchg
insb
ljmp
push
xor
in
outsb
push
pusha
pop
repz
mov
fcomps
into
fdivl
aas
outsl
inc
pcmpgtd
movsl
xchg
and
scas
jl
rclb
imul
std
fists
insl
xchg
cmp
fs
clc
push
pusha
roll
mov
or
xchg
daa
push
push
dec
xchg
lret
lds
mov
jge
cmp
cmpsl
popf
pop
mov
sbb
xchg
popf
push
fcom
cwtl
lcall
jbe
dec
push
fmul
rcr
xchg
inc
int
ljmp
pop
push
xchg
jns
test
mov
mov
out
mov
out
and
insb
mov
aas
setle
icebp
dec
ljmp
std
aad
je
cmp
repz
shll
jb
fisttps
mov
xor
out
repnz
jae
icebp
adc
adc
dec
pop
loop
xchg
adc
pop
mov
mov
push
loop
dec
mov
jge
lret
dec
mov
add
mov
rorl
add
adc
or
sbb
int
jmp
bound
xchg
cmc
aad
dec
out
xor
fidivs
pop
or
push
ja
jns
repnz
adc
mov
cld
ja
dec
shlb
cmpsb
xor
dec
repnz
adc
in
inc
xor
imull
mov
push
cwtl
popf
sub
arpl
pop
push
xchg
pop
out
insb
inc
jbe
mov
in
cs
fmuls
out
cld
mov
push
in
sbb
leave
cmp
or
dec
sbb
mov
out
fisttps
xlat
adc
xchg
fwait
xchg
pop
sbb
or
call
dec
mov
mov
and
push
inc
cs
loopne
mov
cltd
insb
push
jle
std
lret
ret
fstpl
out
dec
and
dec
js
addr16
test
shl
xchg
add
adc
xor
xchg
xchg
call
and
mov
nop
pop
lods
das
les
pop
roll
cs
mov
call
push
adc
test
mov
mov
test
mov
into
int3
push
fidivs
lcall
or
and
lea
and
jmp
sbb
xchg
adc
mov
xchg
mov
int3
outsl
daa
cs
xor
ljmp
pop
das
adc
push
pop
test
aad
call
and
pop
mov
lret
fistl
or
pushf
hlt
sub
lds
insl
xlat
stos
rcrl
mov
aam
shlb
and
dec
xor
out
pop
xchg
pop
fucomp
lahf
dec
or
mov
cld
ss
test
pop
push
xlat
das
push
lret
fdivs
and
in
fstpt
or
in
inc
or
or
push
rcrb
push
jmp
jecxz
je
mov
xchg
std
or
mov
mov
pop
pop
js
xchg
orl
and
sub
cmp
imul
mov
pop
inc
and
jecxz
out
add
mov
sbb
xor
call
mov
enter
push
stos
xor
xchg
imul
mov
or
lods
adc
iret
adc
fildl
dec
and
cmpl
shlb
cmpl
push
scas
jbe
into
cmp
mov
cwtl
scas
mov
jnp
push
and
not
xchg
cmp
mov
jmp
or
jl
data16
xlat
in
lods
inc
out
inc
push
scas
cld
aam
ret
mov
fcoms
dec
inc
subl
mov
bound
pusha
push
cwtl
into
pop
jns
flds
movb
sub
lret
mov
gs
arpl
jl
jo
shr
or
jne
push
cltd
jno
add
gs
roll
dec
stc
adc
in
popf
jbe
adc
cli
or
sbb
scas
xchg
sub
mov
orl
or
xor
dec
xchg
and
popa
and
jae
incl
adc
xlat
mov
imulb
and
xchg
clc
add
pop
sub
jns
xchg
push
fidivs
mov
pushf
mov
xor
xchg
pusha
push
jl
std
repz
mov
mov
adc
insb
pushf
xorb
neg
rorb
out
dec
and
xlat
mov
subl
sub
add
adc
xchg
inc
lea
lods
sbb
cli
adc
arpl
push
or
call
pop
and
insl
cli
jne
fdivr
fcmove
push
adc
scas
cmp
sub
mov
push
daa
test
sbb
movsb
jbe
and
sub
ja
add
imul
mov
pop
cmp
imul
stos
sti
inc
sub
int3
test
rcl
mov
test
subb
mov
sub
cmp
inc
xor
in
add
repz
mov
or
out
pop
xor
pusha
sbb
in
xchg
out
mov
push
ss
xchg
mov
mov
daa
sub
pop
pop
xor
mov
inc
into
cmp
xorb
and
insl
xchg
out
pop
and
js
adc
adc
inc
push
push
add
lret
pop
add
pop
dec
loopne
add
jnp
sub
jl
rcl
or
xor
lods
movsl
dec
mov
testl
lcall
sbb
call
gs
dec
lea
jo
pop
test
sbb
xlat
movsb
push
lcall
jno
mov
jle
inc
addr16
outsl
test
les
lret
rclb
lds
or
xchg
aas
sbb
mov
mov
aaa
sbb
repz
adc
cmp
and
xchg
xchg
ljmp
enter
inc
or
jnp
sub
mov
mov
mov
js
aad
mov
inc
cmp
jno
or
xor
shrb
dec
or
aaa
xchg
push
add
testb
icebp
xlat
dec
mov
pop
clc
push
mov
xchg
inc
inc
or
sbb
jne
pushf
enter
sti
add
add
mov
loopne
not
mov
adc
mov
out
cmp
mov
mov
sub
mov
sbb
pusha
inc
sbb
jae
jbe
lret
lock
pop
inc
mov
iret
xchg
fwait
push
dec
fmull
aam
stc
dec
mov
mov
sbb
push
out
push
ret
test
aad
mov
sub
test
ret
pop
lahf
push
dec
rclb
or
lret
out
in
cmp
enter
add
and
lret
in
gs
lock
call
jmp
test
xchg
inc
mov
rclb
subb
into
int
dec
fstpl
mov
sbbl
js
mov
test
pop
dec
xchg
push
adc
adc
adc
push
negl
cmc
cmpsl
pop
es
fcmovnbe
fists
xchg
subl
bound
orl
adc
xor
cli
bound
jp
xor
into
in
lds
sub
movsl
ret
mov
mov
xor
mov
pop
iret
dec
in
and
arpl
test
mov
fiadds
stos
scas
loop
push
push
jmp
xor
lods
fdivs
std
inc
jge
mov
out
bound
fwait
inc
int3
push
xchg
and
sahf
stos
stc
shrb
sbb
enter
es
jnp
mov
sti
in
push
into
jne
push
int3
inc
sub
ret
aam
das
popa
cmp
stos
out
cmpb
xchg
and
fbstp
or
mov
aad
cmp
add
pusha
mov
shrb
jne
xor
adc
inc
jbe
inc
dec
cwtl
mov
lcall
mov
nop
pop
push
and
cmp
int3
jmp
xchg
mov
adc
mov
imul
or
xor
inc
xor
je
fs
inc
leave
mov
or
mov
rol
clc
mov
fs
outsl
inc
adc
and
pop
mov
add
push
dec
cmp
and
icebp
fldcw
adc
mov
pop
xchg
scas
xchg
clc
into
push
dec
jmp
scas
cmp
test
add
mov
gs
bound
pusha
xor
shll
test
sbb
push
cmpsb
clc
bound
push
mov
lds
sub
ffreep
push
jl
or
imul
push
inc
testl
xchg
imul
movsl
test
xchg
jecxz
imul
add
jmp
push
or
in
rcrl
pop
cltd
mov
jp
dec
and
xchg
jno
rorb
fisttps
rol
xor
ret
lret
arpl
push
dec
leave
xchg
mov
mov
scas
into
cmpsl
outsb
shrb
xchg
jno
xlat
lret
sbb
pop
cmp
or
and
xchg
mov
push
das
mov
jl
in
jmp
aaa
repz
pop
shl
or
and
xchg
adc
imul
mov
fnsave
sbb
xchg
cld
add
push
push
sbb
cmp
inc
dec
xor
push
xchg
call
rol
enter
lret
js
push
ljmp
aaa
sub
and
mov
mov
sti
mov
ss
dec
pop
and
push
sarl
lock
dec
sbb
arpl
push
inc
cli
jmp
fcmovbe
sbb
jmp
and
adc
inc
adc
std
cwtl
jp
clc
data16
dec
into
stos
mov
and
mov
jb
pop
outsl
cld
insb
mov
lret
imul
push
rcl
jmp
add
mov
cmp
mov
jmp
ficoml
dec
dec
cmp
rolb
add
dec
not
in
mov
pop
dec
or
movsb
stos
xchg
int
scas
inc
mov
fidivrl
out
in
lock
out
mov
jno
sbb
sbb
xchg
je
arpl
inc
inc
dec
mov
inc
jns
adc
int3
pop
xorl
addr16
mov
inc
fiadds
mov
cmp
lret
push
pop
jbe
inc
sbb
cmp
sub
inc
add
adc
adc
xchg
jle
push
inc
aad
and
or
dec
jne
jb
jmp
cmpsl
xchg
dec
adc
xlat
test
js
sub
jne
lock
or
out
add
jne
jbe
out
sbb
fstpt
dec
cmc
gs
push
push
mov
in
cmp
ja
outsb
xchg
lds
jbe
lcall
xor
mov
lret
gs
xchg
lret
movsl
jo
cli
rol
data16
and
pop
sub
in
stos
pop
lds
outsl
out
jo
add
xchg
shr
mov
popa
xor
mov
lret
sbb
repnz
cmp
insb
fnstcw
inc
aad
lret
test
in
or
pop
out
mov
int3
idivb
fcmovnbe
ss
sbb
in
xchg
fdivrl
fdivs
push
jb
lret
mov
push
stos
enter
lock
push
sub
pop
test
out
cmovb
push
ret
push
fwait
ret
mov
sub
aaa
rolb
jmp
xchg
data16
cmp
scas
dec
or
push
sbb
sbb
bound
lds
sahf
inc
mov
outsb
dec
ret
jo
lret
cmpsb
movl
aam
int3
add
shr
jnp
stc
pop
call
cs
xor
pop
scas
test
sub
es
jb
mov
inc
sbb
iret
jecxz
popf
lods
sbbl
or
pavgb
sahf
jo
mov
not
pushf
rcll
in
call
xor
out
addl
out
pusha
xor
dec
push
mov
movsl
incb
lret
and
mov
add
mov
push
xchg
cmp
mov
mov
push
adc
push
insb
xchg
out
mov
insb
or
pushf
sbb
outsb
arpl
pop
mov
xor
cltd
stos
jae
sahf
dec
pop
cwtl
jne
loopne
mov
mov
mov
xor
mov
and
mov
jmp
xor
or
jp
into
repnz
mov
imul
fstpl
dec
fs
jecxz
adc
and
cmp
scas
xor
mov
xlat
ret
push
mov
mov
iret
dec
jnp
sbb
test
insl
add
lock
popf
pop
mov
push
xchg
xor
or
pop
mov
sub
xor
jnp
ds
push
stos
lock
mov
xchg
mov
push
push
lock
sub
sti
xchg
inc
das
add
imul
push
xchg
mov
leave
in
dec
pop
lds
fwait
push
jnp
rol
mov
sub
adc
mov
fmuls
jbe
adc
aam
push
pop
pushf
pop
imul
push
sar
cmpsb
jle
vrcpss
xchg
mov
push
mov
ret
and
xchg
iret
push
aam
inc
xor
jg
popa
fisubs
push
inc
mov
inc
dec
mov
je
sbbb
sarl
push
xlat
adc
and
and
imul
xor
xor
xor
fldl
sbb
idivb
add
divl
xchg
sub
std
shrb
dec
pop
dec
jae
fbld
inc
addl
mov
in
dec
pusha
sub
or
dec
scas
xor
fwait
mov
js
pop
mov
jecxz
or
imul
adc
push
xchg
jmp
push
sbb
xor
test
pop
mov
repz
jg
or
lods
pop
xchg
int
xchg
mov
push
push
into
out
mov
cmpsl
xor
lret
call
jne
mov
add
into
dec
cmpsb
jg
sbb
xor
into
mov
into
jno
jmp
sub
adc
sti
inc
sub
push
mov
adcl
imul
in
aaa
repnz
ds
xorb
call
sti
cld
pop
stos
push
dec
inc
mov
sub
mull
sub
lds
repnz
insl
cltd
aaa
push
cmp
or
enter
push
push
or
push
and
sbb
xlat
lret
mov
xchg
or
add
jl
stos
inc
es
jne
or
and
scas
stc
mov
and
push
push
popa
add
shlb
and
xor
ret
imul
out
movups
mov
or
xor
lcall
gs
aaa
clc
jl
xchg
and
cwtl
imul
push
inc
mov
and
lock
push
fiadds
or
or
dec
add
ja
lret
inc
dec
pop
outsl
mov
push
es
push
inc
bound
enter
mov
or
sub
push
xchg
jg
popf
inc
sub
dec
cs
loop
inc
mov
add
addb
aad
das
hlt
insl
data16
leave
push
inc
in
push
mov
inc
sahf
in
mov
jbe
dec
cs
aas
fcmovbe
popa
fsubl
jnp
add
loop
aad
mov
add
push
or
fiaddl
inc
into
xchg
pop
push
insb
xchg
lcall
lods
outsb
jno
push
mov
cmp
rcl
cli
and
cmpsb
sti
add
ja
xchg
shlb
jg
out
push
xchg
dec
jns
aas
xor
jge
out
stos
cmpsb
pop
lods
or
mov
fidivrs
inc
and
inc
shl
popa
sub
mov
ficomps
mov
mov
push
enter
std
cltd
insb
xchg
test
cmpsl
fisubs
loopne
push
jle
fadds
jne
test
ds
pop
jbe
lods
outsl
jle
insb
inc
sub
mov
xor
sbb
ret
gs
aam
pop
test
mov
call
mov
push
nop
sti
mov
out
das
mov
dec
pop
lods
scas
inc
jl
push
push
cwtl
xor
dec
jae
leave
xor
in
ja
stos
push
lock
dec
rcrb
call
cs
test
movsl
fdiv
jne
nop
mov
and
incb
icebp
mov
sti
mov
xchg
ss
into
mov
pop
gs
push
and
and
push
and
ss
int3
inc
adc
enter
mov
sub
out
and
xchg
fldcw
mov
adc
xchg
in
insb
or
or
add
jno
lret
xor
ljmp
inc
int
in
push
cmp
mov
sub
push
clc
xor
pop
mov
int3
sbb
and
mov
loop
xchg
mov
lds
dec
mov
popf
scas
les
cwtl
lret
lahf
call
fwait
xchg
pop
sbb
lock
cmp
cmp
jnp
xchg
mov
cmpsl
aaa
and
sub
loopne
pop
ds
xchg
daa
adc
das
xchg
jmp
lahf
out
fidivrl
shlb
cmp
jo
ret
scas
mov
fiadds
cmpb
adc
mov
jle
xchg
pop
xchg
mov
js
roll
jmp
xchg
lcall
xor
cltd
mov
jns
dec
insb
lret
inc
and
mov
rorb
push
leave
rcr
rcl
mov
and
ret
out
pusha
imul
sub
push
mov
push
push
pop
jns
je
sbb
or
xlat
pop
pop
out
out
mov
iret
add
loop
inc
sub
dec
jl
pop
push
mov
inc
call
dec
xor
sbb
test
fnstenv
subl
jae
xor
sbb
js
or
xor
jae
mov
cli
xchg
xchg
jp
dec
lret
stos
movsl
push
outsl
rcrb
outsb
psubq
dec
sbb
shl
lahf
int3
imull
fucomp
sbb
cmp
and
inc
dec
push
cld
inc
lea
dec
xlat
rorl
out
je
xor
test
push
cmpb
push
stc
sahf
xchg
push
out
cmp
int
repz
push
cmp
ss
stc
das
aas
sub
xor
adc
xchg
pusha
aaa
lea
cmpsl
jns
loopne
shrl
jno
xchg
cmp
lcall
mov
mov
xchg
inc
int3
push
jge
aam
and
js
stos
ficoms
or
add
aad
shl
dec
test
fdivrp
dec
adc
push
and
out
xor
stos
or
cmpsb
push
sarb
aad
dec
push
ret
push
lret
jns
stos
mov
xchg
cld
push
lods
repz
lret
mov
iret
call
jne
add
inc
inc
call
nop
insb
sbb
pusha
xchg
cmp
jb
lock
clc
es
into
dec
rorl
ds
ljmp
adc
inc
cmp
clc
loop
adc
lea
xchg
aam
push
adc
adc
clc
aad
and
fisttps
movsl
frstor
jecxz
inc
rcl
ljmp
xchg
dec
sahf
les
nop
mov
adc
pop
faddl
xorb
mov
dec
xchg
inc
notb
ror
xchg
jge
jecxz
mov
inc
push
negl
add
fdivrs
sub
adc
and
outsl
xor
and
in
mov
gs
das
xchg
divb
adc
mov
out
shrb
push
mov
cmp
adc
and
out
int
ss
ficoms
enter
push
mov
insl
out
push
stos
push
stc
orb
idivl
ret
jge
js
or
mov
loope
push
cmp
fwait
or
cmpsb
imul
clc
sbb
out
adc
inc
addr16
or
cmp
mov
mov
inc
jmp
xorb
xchg
in
les
bnd
xor
out
jmp
insl
lret
xchg
movsl
sbb
sbb
jecxz
rcrl
repz
outsb
inc
lret
lcall
into
mov
test
push
shll
jp
sub
sbb
jmp
push
push
jecxz
jg
mov
inc
jo
data16
xchg
test
es
and
incb
cmp
imul
mov
fcmovne
ret
xor
out
cltd
jmp
mov
xor
ja
aaa
into
cld
sub
xchg
mov
pop
mov
inc
mov
imul
xchg
cmpsl
mov
sbb
jle
mov
mov
shll
les
fistl
out
pushw
mov
movsb
push
js
scas
or
pop
mov
fs
cmpsb
add
push
mov
into
mov
dec
push
jnp
ss
jg
inc
sub
ja
cwtl
xchg
sbb
sub
mov
cwtl
cmp
xchg
cli
add
outsl
pop
stos
pop
sbb
dec
sub
in
gs
push
adc
sbb
xchg
add
pushf
and
loopne
cs
mov
add
push
pop
xlat
es
inc
xchg
sub
aaa
xchg
inc
cmc
cmpsb
cmp
nop
out
inc
sbb
shrl
adc
push
jge
out
cmp
inc
leave
cmp
xor
add
mov
xchg
adc
add
insl
int
sar
mov
inc
lods
mov
sar
push
xorl
shll
inc
lahf
into
or
sbb
cltd
shlb
mov
arpl
push
out
popa
or
mov
inc
shll
jmp
rclb
pop
enter
adc
inc
cmp
lods
bound
out
mov
pop
sub
rcll
pop
lret
sbb
and
jecxz
lods
leave
cs
in
cli
vphaddubd
test
hlt
insl
sub
lret
test
lret
lcall
lret
std
rol
test
mov
rcl
push
aad
jge
dec
out
test
push
mov
je
subb
inc
faddl
cmp
xchg
sub
inc
pop
pop
lock
xor
mov
xchg
push
daa
and
mov
mov
sbb
mov
add
jnp
and
mov
push
xchg
into
fwait
arpl
dec
ljmp
fldl
loop
cld
mov
iret
inc
mov
pop
and
pop
cmpsb
ljmp
push
xchg
ds
mov
mov
xor
inc
mov
repz
lock
shl
mov
xlat
pop
xor
fs
fadds
lock
push
clc
cld
dec
enter
sub
out
les
imul
push
cmpsl
test
jp
add
rolb
inc
ret
outsl
mov
mov
cmp
or
rcr
lcall
push
mov
aaa
push
xor
enter
int
jle
jg
insl
mov
dec
ss
mov
std
scas
adc
pop
movsb
cld
jmp
lods
addr16
and
out
imul
aaa
icebp
lret
outsb
std
stos
mov
add
fldt
rolb
pop
ror
jg
ja
or
in
pop
shlb
test
mov
jae
popf
outsb
and
hlt
cltd
dec
adc
in
adc
inc
loope
inc
cmp
popf
repnz
xchg
call
dec
dec
xchg
fsubs
sbb
lret
pusha
jbe
xchg
mov
loop
cltd
into
push
leave
lds
ret
outsl
movsb
scas
jbe
adc
imul
mov
push
push
mov
dec
movl
push
jns
jl
jmp
ficompl
sbb
aas
mov
xchg
push
xlat
into
inc
and
pop
icebp
jbe
push
enter
pushf
into
adc
adc
inc
addr16
mov
cmp
mov
sub
pop
popf
out
ljmp
js
xchg
and
stos
push
icebp
addb
and
or
add
xchg
std
je
aad
imull
sub
dec
xor
add
sub
xor
aam
test
pop
adcb
dec
pop
cmpsl
jg
movsl
icebp
repz
outsb
add
mov
test
in
pop
stos
cmp
and
sbb
not
loopne
icebp
test
cmp
int3
mov
ret
aad
lret
push
bound
inc
stos
sub
push
mov
mov
jp
and
dec
xchg
subl
test
add
or
pusha
hlt
test
outsl
into
fcomps
xchg
pop
fwait
lods
xchg
aad
lock
xor
dec
jns
repz
xchg
gs
cmp
mov
add
or
jae
mov
data16
xchg
arpl
lods
mov
hlt
outsl
bnd
or
ss
inc
lcall
xchg
inc
fimuls
pop
lret
outsl
xchg
mov
sbb
xor
xchg
loope
aaa
push
mov
add
jo
inc
lea
repnz
inc
or
ds
adc
dec
test
sbb
loope
jg
shrb
movb
je
sub
dec
into
dec
lods
out
bound
lret
call
imul
xor
add
out
adc
mov
push
divl
jge
dec
adc
mov
xor
ds
test
stos
cmp
pop
mov
push
stos
mov
repz
arpl
jne
ds
into
mov
out
adc
lods
mov
or
jecxz
cmp
int3
test
adc
lods
mov
std
rcl
mov
jmp
dec
and
fsub
mov
mov
inc
push
stc
scas
dec
pop
lds
mov
and
and
lods
push
cltd
fcmovb
arpl
int3
jne
imul
lret
or
xor
mov
mov
data16
mov
lea
add
ja
mov
and
mov
jbe
ds
cmp
loopne
sbb
sbb
xor
cld
imul
ret
add
jbe
mov
sub
lea
jp
cmp
push
add
push
out
push
mov
mov
xchg
cld
iret
sahf
imul
and
sbb
dec
js
add
fnstenv
sbb
test
or
add
inc
jp
xchg
in
jl
jmp
fimuls
negl
jp
or
xchg
gs
lods
lock
shl
ja
inc
jge
rclb
xchg
and
lock
in
cmp
ds
cli
daa
fisttpl
pop
add
push
lret
and
in
int3
cmp
iret
hlt
pop
fwait
rcrl
dec
inc
xor
push
into
or
cld
mov
dec
stos
lret
ret
cwtl
fmull
mov
xchg
lret
in
std
pop
push
ror
push
fwait
sbb
push
inc
add
fidivrs
pop
and
add
fmul
data16
out
in
out
sti
aad
mov
iret
sbb
pop
fildll
insb
dec
mov
mov
jno
jb
sbb
pop
mov
mov
xchg
sti
lret
loope
jne
cmp
and
dec
mov
lods
xchg
inc
aaa
cld
cmp
sub
jg
daa
data16
insb
outsl
cwtl
into
fnstsw
add
in
mov
mov
dec
pop
dec
dec
lahf
mov
ret
adc
dec
cli
mov
sbb
ret
lcall
hlt
inc
rcrl
imul
xchg
jl
daa
rolb
outsl
sbb
add
mov
test
call
mov
and
in
or
and
test
fwait
push
iret
lahf
inc
lret
int3
cvtdq2ps
loop
mov
in
lret
mov
aad
dec
mov
xchg
fwait
push
aaa
pop
dec
int3
shll
adc
xlat
or
jb
and
push
jl
xchg
mov
into
out
push
dec
insl
and
push
cmpsb
sub
testl
mov
dec
test
inc
jb
push
outsb
or
jo
int3
mov
mov
out
sub
enter
pop
out
scas
ljmp
movsb
jecxz
dec
jge
bound
push
and
push
mov
rcrl
aaa
mov
mov
jnp
sarb
mov
fstpl
mov
push
mov
inc
jne
add
rorl
std
inc
push
aad
fldl
ret
xor
sbb
adc
bound
add
cmp
mov
pop
sbb
clc
cmp
mov
sub
bound
sbb
cmp
jno
sub
sarb
addr16
icebp
into
arpl
jne
push
sub
dec
mov
mov
jno
jae
gs
mov
cld
out
scas
jp
in
jb
sub
sbb
daa
std
je
ja
adc
cmp
jecxz
aad
lahf
and
movsl
movb
scas
fidivrl
xchg
pop
inc
cld
enter
stos
aas
lret
and
adc
enter
je
and
movsb
call
lret
cwtl
arpl
xchg
xchg
push
add
aam
jno
cmpsl
adc
add
mov
mov
daa
in
nop
jns
cmp
cltd
push
or
jle
mov
nop
mov
dec
aas
lds
sbb
or
jbe
dec
mov
rcrb
scas
sub
insl
out
xorl
ja
jg
or
rcl
cs
sbb
insl
mov
hlt
push
das
add
xlat
into
mov
pop
sbbl
mov
push
divl
mov
jns
cmpsl
out
cmp
jne
in
or
mov
fisubrl
cld
test
mov
mov
aaa
fs
mov
popl
pop
mov
aaa
push
bound
cmp
mov
jp
insl
cmpsb
lock
fists
sbb
popa
rolb
or
xchg
add
jecxz
xchg
inc
gs
inc
mov
rcl
dec
ss
dec
jno
mov
cli
jecxz
xchg
fistl
pushw
push
std
iret
stos
mov
hlt
test
and
int3
push
push
out
sub
cmp
xchg
scas
sub
or
mov
and
pop
bound
pop
ja
push
rclb
jne
jle
out
loope
push
enter
lcall
loopne
iret
mov
fwait
pop
dec
js
xchg
dec
cli
in
mov
cmp
lds
pop
inc
dec
pop
std
mov
out
jmp
ss
jecxz
add
scas
sub
lods
aas
cmc
push
cmp
sub
dec
jge
cwtl
fiaddl
mov
mov
stos
cmp
push
cld
sarb
mov
icebp
fwait
outsl
adc
out
push
and
xlat
xor
mov
icebp
cmp
repz
push
mov
pop
sub
enter
push
gs
cmpsl
rcrb
aad
add
xchg
cmp
xor
cmp
aad
pop
cltd
jne
dec
imul
into
test
fiadds
pop
test
inc
cli
sub
test
adcb
jae
mov
je
adc
adc
mov
xor
cmc
inc
int
stos
sbb
xchg
pop
subb
mov
idivb
ljmp
js
popf
mov
dec
sahf
or
sbbl
dec
scas
mov
push
fdivs
jne
push
mov
inc
dec
adc
addr16
out
mov
lock
jns
out
fnstcw
fldt
or
cltd
pop
int
jge
and
mov
mov
and
aam
icebp
mov
lods
imul
push
sub
divl
mov
icebp
inc
in
pop
stos
lds
jno
adc
sub
je
cwtl
iret
adc
mov
stos
ficomps
insl
fstpl
ficompl
add
lret
jae
or
ds
and
test
xor
mov
je
test
xchg
lret
jge
push
fdiv
xlat
sbbl
inc
inc
hlt
adc
ds
fistpl
outsb
xchg
in
iret
es
cmpsl
cld
jno
mov
cmp
fadd
shl
push
fidivl
out
xlat
pop
mov
mov
mov
mov
movsl
dec
das
sub
xor
fucomp
xchg
arpl
out
add
dec
fcoms
dec
sub
lods
mov
pop
fucomp
out
je
xchg
sub
sbb
and
or
push
or
out
ja
lahf
nop
lcall
dec
xchg
mov
xchg
cmp
xchg
sub
mov
pop
sbb
xchg
pop
leave
out
out
push
int3
xorb
test
cwtl
into
shr
lret
push
rolb
add
jns
xchg
addr16
mov
push
dec
out
test
int3
xchg
movd
and
jo
lds
sub
iret
cmp
sub
xchg
sbb
call
mov
stos
cmpsl
pop
sbb
aam
aaa
arpl
push
aas
pop
or
jge
addl
fildl
mov
mov
mov
mov
js
inc
sbb
fists
push
inc
dec
negl
jb
sti
and
scas
outsl
mov
dec
out
jae
insl
xchg
ljmp
jo
mov
push
dec
dec
cmpsl
stos
jnp
dec
jno
stos
hlt
lret
adc
sbb
dec
cmp
jmp
push
add
mov
adc
repnz
cs
data16
stos
pop
enter
inc
mov
movsb
sub
push
pop
pop
cmp
enter
adc
xchg
adc
sub
and
inc
xor
sarl
daa
add
js
sbb
and
test
jmp
push
dec
into
mov
popf
pop
mov
jae
les
addr16
mov
jg
ror
cltd
ret
jno
mov
flds
jle
jg
or
sarl
into
mov
sub
xchg
push
jae
shl
add
pushf
ljmp
fstps
add
mov
sub
dec
mov
dec
in
xchg
les
dec
jne
adc
imul
outsb
push
push
mov
mov
fsubs
push
xlat
insl
and
dec
and
test
movb
sub
inc
sti
lods
adc
fs
js
lods
icebp
fsub
jmp
add
push
pop
push
xlat
xchg
ds
test
inc
push
insb
or
lcall
push
sbb
ds
int3
jo
in
push
mov
sbb
notb
lret
stos
popa
movsl
clc
addr16
mov
ljmp
xor
pop
mov
xchg
dec
cmpl
inc
inc
xchg
jnp
ret
jl
fwait
xchg
and
fdivp
xchg
aas
xor
fwait
pop
or
fstpl
aam
mov
push
jns
rcl
xchg
rcrl
cmpsb
shlb
call
cmp
push
popa
and
dec
pop
jmp
sbb
or
cltd
mov
into
test
mov
popf
mov
mov
xchg
and
adc
push
cmc
sbbb
lahf
jbe
mov
stos
adc
xchg
xchg
lcall
lods
push
pop
js
jb
ss
test
dec
es
inc
fstps
jne,pn
or
xor
in
dec
scas
mov
lock
adc
xchg
sti
lfs
test
add
xor
push
enter
imul
int3
mov
imul
or
or
push
adc
shlb
fsubs
cmp
cmp
jle
lret
push
notl
mov
add
pop
imul
iret
cmc
lcall
dec
dec
rcl
pusha
movsb
jno
mov
mov
mov
push
cmpsl
shrl
sbb
or
mov
cvtdq2ps
and
xor
push
outsl
iret
cmpsl
mov
jne
orl
shlb
lret
xor
lods
dec
out
cmp
clc
pop
xchg
gs
icebp
pop
add
sahf
mov
sbb
fst
add
cmp
fbld
jecxz
sub
out
inc
mov
sub
pushw
pop
or
out
rcl
mov
out
push
in
xchg
jae
sbb
mov
pop
sub
pop
leave
outsl
jge
or
fists
pusha
fiaddl
repnz
out
push
sbb
add
push
mov
lret
stos
inc
and
ret
clc
xchg
pop
and
push
mov
and
mov
divl
xchg
stc
add
lods
ds
dec
mov
test
pop
xchg
jge
sahf
aaa
out
cs
sbb
mov
push
les
hlt
xchg
cmp
inc
mov
pop
fisubrs
adc
dec
pop
inc
lret
pop
xor
bound
into
inc
addr16
ss
loopne
fsub
push
or
call
sub
cmpsb
cwtl
into
iret
loop
add
jecxz
ret
mov
lock
pushf
inc
and
pusha
pop
test
insb
hlt
inc
push
pop
call
inc
out
xlat
push
fwait
movsl
cli
leave
cmpb
ja
mov
jae
mov
mov
cmp
mov
fmull
int3
xchg
mov
pop
hlt
inc
dec
lret
bound
jle
sahf
aad
dec
ret
xchg
xchg
and
push
or
mov
xchg
divb
xor
jg
cltd
inc
lret
nop
cmp
cmp
jle
xchg
aad
test
adc
dec
iret
das
jno
jb
pusha
sbb
push
sub
jae
call
shl
sbbb
outsl
fs
sbb
dec
mov
cmova
enter
mov
sbb
jnp
push
fdivrp
mov
push
jo
shll
or
push
inc
in
scas
push
xor
sahf
add
imul
testb
mov
popa
mov
fiadds
test
xor
xchg
inc
repz
mov
sub
push
ror
scas
leave
cmp
dec
xchg
fs
stc
popf
or
push
sti
lret
cld
jecxz
adc
cltd
add
and
dec
xor
int
sahf
sti
scas
pop
fadds
push
add
mov
ret
mov
lret
lret
stos
push
mov
mov
jle
sbb
pop
stos
xor
xchg
inc
adc
into
mov
lret
dec
mov
mov
ja
lods
mov
je
cmpsl
jne
loopne
aaa
push
ret
mov
inc
inc
test
fwait
mov
leave
into
inc
pop
jg
xor
or
push
out
jle
jmp
cmpsb
stos
loopne
retw
jg
sbb
cmp
lea
mov
pop
addr16
test
popf
jg
xchg
and
mov
lahf
loopne
out
icebp
out
call
iret
dec
jno
fildll
sbb
ss
cwtl
xor
aas
cs
shr
lahf
test
loope
sti
push
dec
stos
aam
xchg
lea
outsb
mov
or
popf
ss
dec
in
test
mov
and
dec
leave
sbb
jbe
sub
add
popf
pop
xchg
mov
add
js
int
adc
dec
inc
pop
rcl
jo
cmc
out
loopne
sti
addr16
repnz
xor
jns
mov
jmp
push
mov
cmp
jbe
in
jno
outsl
std
rclb
jne
inc
xchg
cmpsl
mov
jmp
sub
mov
mov
mov
jl
aad
pop
inc
or
dec
mov
jno
cmp
xchg
push
add
push
mov
ret
cltd
adc
std
xor
sahf
orl
fldenv
mov
int3
enter
or
mov
dec
inc
test
dec
pop
aas
push
repz
push
movsl
imul
popf
cmp
fidivs
push
out
adcl
sti
ret
pop
cli
push
fidivrs
dec
xchg
push
xchg
cltd
push
adc
enter
cwtl
lock
pop
cli
outsb
lods
imul
out
js
fs
mov
xor
cwtl
shlb
ss
adc
jo
xlat
jge,pt
cmpl
xor
xchg
xchg
push
dec
ror
mov
push
xor
xchg
pop
repz
subl
out
and
insl
jns
aas
sbb
fadd
cmc
rclb
das
cltd
mov
mov
into
xor
add
add
sbb
movsb
js
insl
scas
or
jnp
cmp
jecxz
inc
rclb
repz
movsl
int3
xor
sub
loop
jecxz
stos
sbb
aam
jo
hlt
jle
fcmovu
loope
imul
into
aam
or
call
loop
mov
out
aaa
mov
stos
xchg
loope
icebp
outsb
and
adc
aaa
pop
add
add
pop
int3
fnstcw
sbb
test
aam
mov
push
xor
cmp
mov
mov
ja
inc
and
test
imul
xor
push
adc
test
mov
mov
xchg
mov
test
shl
sbbl
jo
push
mov
adc
test
pop
cltd
xor
stos
ret
insb
out
stc
daa
xchg
push
xchg
mov
incl
sbb
mov
and
out
xor
fidivl
pushf
out
shlb
es
mov
jbe
cmp
cmpsl
add
out
pop
xchg
cmp
mov
int
mov
dec
sbb
repnz
or
jb
and
jl
and
push
sbb
sub
jnp
nop
cmp
or
jecxz
and
not
xchg
and
dec
cmp
mov
stos
in
xchg
cmp
lea
nop
push
push
mov
add
xchg
xchg
xchg
cmp
into
fmuls
not
stos
addr16
aad
add
sarl
ds
aaa
dec
sub
in
add
xchg
scas
imul
movsl
xchg
pusha
sbb
push
or
dec
int3
pop
jge
cmp
mov
idivb
in
out
and
insb
jo
mov
adc
inc
int3
add
xchg
dec
ja
sbb
cmp
push
loop
lret
aaa
inc
lahf
arpl
add
movb
jl
sub
test
inc
mov
scas
inc
enter
dec
testl
repz
sahf
push
frstor
faddl
jb
push
cs
cmp
pop
call
jle
xchg
sub
aaa
xchg
cmp
arpl
push
test
push
enter
push
fcmovbe
fld
mov
push
push
ljmp
inc
lret
movsl
sub
outsl
test
mov
arpl
rcl
pmulhuw
nop
adcl
or
iret
loop
out
into
test
mov
loope
cltd
mov
inc
xchg
out
dec
mov
movsb
lret
xchg
mov
outsb
popa
cmp
adc
fld
rcl
bnd
mov
xchg
cmc
imul
push
adc
dec
aas
out
and
pop
ficomps
lret
arpl
enter
push
int3
add
cmp
movsb
add
sti
push
into
cltd
dec
xor
mov
push
nop
cmp
and
pop
lods
cwtl
push
insl
cmpsl
and
repz
fst
pushw
pop
movsl
in
xor
jge
lret
mov
mov
pop
outsb
aad
adc
mov
pop
push
insb
inc
gs
adc
fisubl
sbbl
mov
ljmp
into
aad
cmp
push
and
inc
fs
lea
xor
es
or
and
int3
test
push
movsl
ror
add
popa
or
arpl
jae
aam
cmp
test
movb
into
fldl
daa
pushf
into
and
mov
aas
xor
nop
mov
mov
mov
in
lret
or
or
jmp
fiaddl
xchg
popa
inc
mov
jle
cmpsl
sbb
or
jmp
out
and
xor
mov
in
xchg
cmp
ss
xchg
inc
push
out
inc
mov
ss
mov
add
cmp
iret
jmp
mov
stc
repz
test
mov
shl
ja
aam
rcrb
sub
mov
push
push
adc
mov
stos
dec
insl
dec
mov
in
in
int3
push
in
add
and
cwtl
xchg
pop
mov
and
and
jo
sub
pop
xor
jae
mov
test
call
mov
and
movsl
je
fmull
push
push
cmpsl
loopne
mov
iret
adc
and
xchg
aas
xchg
jbe
cmpsl
shll
out
add
jnp
xor
lcall
in
xor
movsb
dec
outsb
leave
outsl
imul
adc
jns
push
sbb
js
pusha
fwait
mov
pop
xchg
test
mov
clc
push
dec
js
hlt
add
jp
mov
fldl
fadds
sbb
cs
sub
add
mov
hlt
fildl
rcrl
dec
adc
jns
jg
lcall
cmp
sub
clc
sti
mov
int3
imul
jmp
cmpsb
xchg
les
dec
pushf
dec
aaa
dec
mulb
mov
sub
mov
int3
lods
enter
jg
icebp
adc
push
lahf
hlt
push
ss
add
fcoms
sbb
mov
adc
push
mov
into
mov
outsb
and
call
push
mov
xchg
je
xor
mov
inc
call
insl
leave
je
push
mov
std
movsb
addr16
cld
movsl
jbe
aad
push
adc
push
jp
add
out
aaa
sbb
fistps
lret
rcrb
outsl
jne
mov
pop
sahf
and
out
mov
pop
or
aam
movsl
cld
or
sub
push
lock
loope
dec
cwtl
mov
pop
ss
jecxz
testl
xchg
nop
ljmp
jno
xor
mov
jae
add
cwtl
xchg
pop
insl
stc
rcl
lcall
jge
cli
das
movsb
mov
mov
ret
mov
dec
cltd
into
inc
hlt
push
imul
jg
xor
adc
adc
mov
lcall
adc
fwait
mov
cmp
mov
inc
icebp
mov
int3
and
mov
add
int3
data16
out
lock
dec
or
insb
not
dec
ljmp
out
iret
imul
es
xor
or
lods
lret
test
jl
xor
dec
mov
gs
cld
lahf
ja
pop
fwait
es
mov
loopne
ja
pop
sbb
or
movsb
int3
xorb
data16
push
and
clc
add
addr16
mov
dec
stos
shrb
or
int
push
ds
cmova
cmc
gs
or
add
sub
out
pop
pop
push
mov
mov
cmp
push
and
xchg
cli
movl
aad
lods
mov
loop
adc
sub
cltd
xlat
mov
jno
inc
shl
pop
ficompl
jmp
fsubs
enter
in
push
lret
jns
movsb
sub
aaa
sbb
push
lcall
imul
push
lret
push
dec
clc
addb
lcall
jge
mov
dec
or
mov
repz
dec
test
sub
sti
fiadds
mov
aam
mov
xchg
out
imul
in
bound
int3
sbb
or
adc
fisubrs
sti
hlt
stc
testl
xchg
fsubr
mov
sbb
out
pop
sbb
enter
adc
sbb
and
xor
mov
xchg
scas
add
pop
clc
xchg
jns
jl
adc
das
mov
push
pop
adc
sub
orl
fisubrl
adc
inc
push
aaa
sahf
adc
mov
lret
repz
les
or
xor
fldlg2
mov
xchg
push
not
mov
pop
repnz
mov
pop
cs
popa
inc
sub
aad
xchg
daa
aaa
pusha
stos
ja
xchg
xor
add
add
cmp
xorb
aas
and
sub
lcall
add
xor
repz
rcll
xchg
out
daa
shrb
adcl
xor
jbe
pop
sub
out
lea
aam
not
mov
and
es
popf
mov
ljmp
xchg
hlt
inc
and
sti
inc
sub
mov
pop
movsb
mov
jns,pn
mov
jb
ljmp
inc
jecxz
test
lret
iret
ret
dec
push
xchg
dec
cld
add
fnstenv
or
dec
add
nop
addb
fildll
xchg
mov
in
inc
arpl
sub
push
aas
xchg
xchg
jb
aad
andb
sub
inc
addr16
ja
into
inc
sub
arpl
adc
outsl
mov
jecxz
xchg
jae
cmpl
sub
push
jb
jne
test
das
push
push
mov
mov
lods
push
sub
dec
lahf
pushw
das
cmp
xor
int
cmp
push
jno
into
ljmp
inc
inc
test
test
pop
mov
xchg
out
pop
xchg
jne
jl
into
lock
xlat
mov
and
loop
xchg
loopne
jne
adc
lret
repz
shll
stos
dec
cmp
sar
es
bnd
ja
daa
loopne
shlb
fsts
mov
xor
int3
cmp
pop
ss
adc
sbb
adc
or
sub
mov
mov
inc
out
jmp
add
or
incb
sub
movl
jp
lods
jae
shlb
das
inc
outsl
jno
sahf
push
xchg
test
lds
out
ljmp
pop
dec
jo
jmp
or
cmc
in
jl
push
pop
cmp
daa
lahf
mov
mov
push
xor
sbb
adc
and
xor
cmp
xchg
je
das
add
mov
lea
fwait
mov
mov
or
jecxz
xchg
iret
lock
mov
es
arpl
lds
insl
xchg
ret
out
divl
loop
push
jp
jecxz
xchg
mov
xchg
cld
nop
into
stc
sbb
push
xchg
insl
into
pop
adc
lahf
mov
mov
add
xchg
int
test
ret
nop
jle
aaa
mov
pop
or
push
dec
cmp
out
xchg
lea
shlb
push
das
leave
rcl
dec
inc
mov
jnp
jg
push
push
iret
mov
imul
out
out
and
lret
xchg
call
xlat
subb
es
hlt
fisubs
cmp
lcall
xchg
mov
les
repz
ficoms
imul
mov
mov
xchg
aaa
jbe
addr16
into
mov
xchg
mov
jns
pusha
movsl
scas
dec
pop
cwtl
lea
cld
mov
dec
mov
pop
jp
aaa
int
pop
in
andl
dec
mov
jge
in
cltd
sahf
xchg
popa
xlat
test
int3
orl
inc
rol
mov
cwtl
push
nop
or
insb
ja
dec
and
mov
add
xchg
jae
pop
fwait
adc
inc
mov
hlt
test
cmp
movsb
cli
jl
dec
sbb
fdivl
call
or
jmp
push
pop
inc
jge
outsb
shl
or
cwtl
xor
fs
scas
stos
sub
sbb
addr16
stos
xchg
out
daa
out
movsb
cld
push
jmp
popa
fisttpl
push
xor
ds
je
or
mov
pop
mov
sbb
fildll
sub
js
fistl
movsl
dec
sub
movsb
jl
mov
fwait
out
sub
fildl
mov
test
add
mov
push
mov
or
sub
pop
loopne
jle
add
repnz
mov
pop
pop
jge
lahf
fadd
xchg
xlat
insl
in
cmp
cmp
push
sbb
fs
mov
sub
add
xlat
into
mov
movsl
push
adc
lret
sbb
jecxz
dec
nop
pushl
pusha
and
hlt
mov
push
fstpl
mov
mov
add
cmpsl
ja
sbb
es
push
cli
xchg
sub
fdivs
pop
lret
addr16
or
inc
adc
insb
push
xchg
jbe
sbb
and
das
pusha
jle
xchg
mov
push
adc
arpl
jne
out
sbbl
les
leave
sahf
in
add
jns
push
ja
push
jo
sub
inc
mov
dec
das
lret
call
sbb
rorb
lds
mov
xrelease
mov
xor
int
in
cmc
mov
icebp
xchg
in
gs
adc
sub
aam
lret
mov
mov
push
in
jl
outsl
pushf
fmuls
dec
arpl
mov
mov
test
int3
dec
ja
adc
scas
out
movsb
lahf
shrl
aaa
stos
std
repz
cmp
mov
sbb
js
inc
push
adc
mov
adc
mov
loop
insb
lods
dec
rcrb
dec
adc
xor
roll
or
push
fmull
jecxz
and
add
shl
jge
xor
or
or
xchg
shrl
std
cmp
pop
mov
ja
jb
into
jecxz
es
dec
xchg
push
loope
int
cmp
adc
mov
pop
das
xor
mov
mov
or
dec
daa
xor
repnz
mov
iret
into
inc
or
shl
aas
inc
aad
lds
xchg
push
or
subl
in
sub
in
sbb
inc
shlb
adc
mov
sbb
mov
dec
jb
lret
shll
imul
aad
mov
dec
push
outsb
add
jp
in
sbbb
xchg
cmp
push
sbb
jg
jbe
and
imul
ljmp
xchg
xchg
cmpsb
push
sub
nop
in
sti
int
mov
mov
lea
ljmp
mov
mov
lods
fwait
icebp
push
xlat
push
pop
bound
dec
dec
mov
xor
or
mov
in
mulb
inc
rorl
jge
pop
xchg
push
mov
dec
sbb
jne
sub
jbe
adc
aam
inc
addb
pop
cmp
jnp
cmpsb
pop
pushf
incb
stos
push
sti
pop
jo
sbb
out
pop
push
fs
sub
std
int3
xchg
ljmp
out
ret
sub
sub
jecxz
fiadds
adc
pop
xchg
ret
es
cmp
xchg
xchg
cmp
ret
xor
cmp
loope
test
jge
mov
insb
add
cmp
xchg
in
and
fcmovnu
pop
xor
jecxz
push
mov
jge
mov
clc
xor
insl
sub
stc
shl
and
ss
or
ror
int
lcall
int
sbb
dec
stc
jl
popf
adc
into
inc
cmp
push
imul
aam
xchg
add
flds
inc
mulb
fisubrs
push
aam
pop
leave
cld
sub
test
lahf
into
in
aas
jl
jno
xchg
bound
test
fisubl
movsb
mov
add
cmp
inc
aaa
test
xor
jae
popa
mov
mov
pop
sti
daa
rcrb
inc
jmp
test
jnp
mov
sbb
addr16
into
mov
enter
ss
push
fstpt
dec
add
push
in
and
scas
lret
cmpsl
fs
movsl
ficoml
dec
mov
inc
sbb
sahf
mov
or
mov
movb
inc
cmpsb
mov
mov
mov
std
fwait
push
testb
out
cmpl
ret
outsb
jbe
push
cld
adcb
stos
daa
sbb
cmpsl
push
jne
gs
push
mov
push
test
outsl
inc
pop
pop
in
leave
fs
dec
pop
inc
mov
out
jp
rcrl
bnd
or
mov
inc
xchg
and
pop
pop
into
inc
out
les
dec
jl
movsl
ss
pop
cmp
push
add
adc
jmp
lds
push
ret
cmp
call
ss
mov
test
xor
movsb
cmp
lea
pushf
sbb
mov
pop
repz
push
out
xor
and
jp
shrb
shlb
push
jnp
pop
mov
jl
mov
push
or
jbe
test
arpl
inc
cmp
test
mov
xor
jmp
nop
jmp
pop
fs
or
mov
sub
cmpsl
iret
sub
push
sbbl
jns
lock
in
jge
popa
out
jbe
js
in
int3
rcr
int
push
cli
out
jno
cmp
popl
sbb
adc
xlat
xchg
or
push
pop
scas
lea
xor
sub
xchg
adc
xchg
pushf
xor
inc
leave
insl
push
mov
jecxz
outsb
sti
out
push
lds
les
sbb
clc
or
pusha
or
push
mov
inc
inc
popf
jns
into
loop
mov
rorb
sbb
xchg
add
mov
lahf
out
xchg
push
adc
cwtl
cltd
lret
data16
and
call
cld
imul
mov
daa
lods
and
leave
adc
sub
push
or
jecxz
inc
xchg
mov
mov
pop
insl
in
push
mov
jmp
lret
sti
and
add
xlat
repnz
push
dec
lret
or
cmc
pop
mov
in
cmp
ret
mov
roll
jae
pop
jecxz
call
addr16
fstp
dec
dec
mov
cmp
jne
push
roll
push
mov
adc
dec
pop
jb
insb
sbb
sarb
cld
jecxz
icebp
pop
lea
fucom
out
fcom
sbb
adc
daa
dec
xchg
pushf
lret
insl
stos
cmc
sub
cmpl
ret
mov
xchg
xchg
xchg
jno
dec
rcrl
or
jp
pop
movb
sbb
sub
add
pop
fists
bound
xor
pop
dec
xchg
mov
push
jne
cwtl
dec
lahf
test
int3
xor
push
adc
popa
inc
mov
call
lret
cmpb
sub
fs
push
lock
and
mov
jae
hlt
int
repz
daa
inc
cs
dec
out
push
sbb
fs
dec
lods
and
xchg
call
pop
imul
into
leave
xor
jge
aad
sbb
mov
imulb
jp
fdivrs
pop
jecxz
push
scas
fwait
loopne
out
xchg
rorb
cmpl
lds
xchg
repz
pop
loop
call
xor
out
lret
fistpl
xchg
add
cmp
in
clc
fdivl
add
popa
adc
rorb
inc
loope
popa
and
pop
xor
gs
jnp
sbb
jle
fcmovb
add
lahf
outsb
adc
imul
insb
sub
lret
popf
negl
dec
xor
add
xchg
arpl
jecxz
scas
dec
jbe
adc
dec
dec
jle
jo
lret
xchg
cmp
mov
xchg
push
test
ret
out
cmp
push
movb
sbb
imul
xchg
add
sub
lret
cld
sub
loope
icebp
leave
push
js
scas
xchg
and
xchg
sahf
sbb
adc
popf
lahf
std
push
daa
xchg
push
ret
repz
dec
mov
out
mov
dec
pop
cli
xchg
mov
into
imul
inc
adc
pop
fsubrp
mov
movb
scas
pop
push
sbb
out
push
sbb
shll
jo
out
into
mov
jbe
lret
mov
cld
push
mull
mov
xchg
cmpsl
in
popf
push
and
aam
outsb
int
cli
mov
hlt
sub
sar
enter
push
lret
mov
cmp
ljmp
mov
sub
push
inc
cli
lahf
inc
xchg
sub
xchg
cmp
jno
mov
jnp
add
imul
fs
fiaddl
cmpb
cld
ds
pop
lock
inc
imul
sub
das
push
cs
rclb
jb
ss
pop
mov
aaa
xchg
gs
xchg
pop
incl
mov
movsb
packuswb
pop
stc
in
bnd
adc
out
test
and
push
es
int3
mull
rcrb
repz
int
fstpl
arpl
jb
add
sti
xchg
push
scas
mov
sub
loope
es
movsl
cmp
fidivrs
lret
testb
sbb
loope
mov
pop
daa
cmpsl
lock
out
xor
xor
adc
pop
movsl
pop
outsb
sbb
jle
jmp
jnp
adc
add
sub
and
mov
frstor
outsl
add
push
jmp
xchg
mov
or
mov
fst
jnp
push
dec
arpl
inc
mov
je
call
cmp
sti
in
movl
repz
ja
aas
push
pop
mov
xchg
mov
mov
outsb
rcl
rcrl
test
insb
mov
cmp
xor
cmp
pop
lret
mov
imul
xor
fimull
jb
adc
add
cs
dec
sbb
or
out
lret
adc
xorl
jl
mov
inc
push
pop
lds
mov
dec
or
mov
xchg
cld
cwtl
insb
fwait
lea
mov
out
or
inc
cmp
ss
fwait
mov
test
cmpsb
mov
inc
aas
mov
in
xor
into
sub
int3
push
popa
inc
mov
adc
lock
cld
cs
pop
push
push
arpl
cmp
dec
mov
cs
and
lods
mov
mov
xor
movb
jl
mov
sub
out
jle
sbbb
inc
push
repz
es
popa
cmp
and
pop
fcmovnbe
lret
jb
sub
enter
fwait
mov
add
push
jae
leave
mov
testl
push
push
call
das
lret
inc
xchg
xor
jbe
shrb
aam
mov
dec
add
cmp
inc
aad
clc
outsl
push
pop
in
add
sbb
add
shr
icebp
sbb
out
cs
mov
int
ss
mov
xor
cli
sbb
lds
out
xlat
sti
cmp
subb
adc
in
jge
stos
shrb
jecxz
loope
adc
pop
jle
stos
jbe
xchg
fcomps
push
lea
dec
fldt
data16
push
std
das
cwtl
xor
stos
adc
pop
fmuls
out
pop
push
mov
pop
and
mov
add
push
mov
inc
inc
cmp
lods
push
sahf
push
sub
xchg
lret
das
push
push
out
lret
test
jp
into
xor
pop
divl
xchg
mov
and
push
iret
xor
xor
xor
imul
data16
mov
xchg
outsb
ret
adc
push
rcrl
ljmp
out
xchg
xchg
int
dec
pop
jnp
xchg
sub
adc
mov
out
and
scas
mov
sbb
mov
stos
sahf
jg
xor
popa
in
mov
call
sbb
and
mov
out
pop
loope
pop
mov
cmp
scas
cmp
in
sub
into
sti
cmpsl
lods
std
xor
mov
push
popa
fadd
pushf
lods
mov
sti
ja
cli
mov
dec
or
sbb
push
std
and
push
leave
push
xor
rclb
jmp
or
sbb
popa
int3
sub
decb
xor
push
push
fists
mov
inc
ljmp
lea
dec
mov
orl
sarb
lret
add
fadd
shll
adc
jmp
scas
add
cmc
mov
mov
add
mov
testl
jno
loopne
shlb
push
or
mov
xor
sbb
loop
xchg
mov
test
xchg
pusha
fs
mov
mov
xchg
repz
adc
xorl
cs
or
jmp
addr16
mov
repz
xor
sahf
sbbl
push
divb
mov
push
jg
sti
adc
xchg
les
in
cmpsl
cli
es
adc
mov
ljmp
lds
inc
add
clc
xor
mov
xchg
out
add
ja
cli
xchg
mov
cmp
cmc
or
shlb
int
pop
jecxz
fisubrs
sub
fistpll
pop
pusha
add
out
out
sbb
lcall
adc
lahf
adc
testl
sbb
mov
mov
mov
out
jp
lods
mov
stos
arpl
cld
cmp
in
mov
movsl
dec
cmp
xchg
push
adc
out
xor
ss
icebp
cmp
inc
jle
mov
or
add
test
hlt
push
imul
adc
mov
mov
dec
sahf
fisttpll
cmp
movsl
xchg
fs
imul
add
jp
pop
mov
add
ds
sub
cld
cli
cmpsb
add
lock
fsubr
imul
fisttpll
ljmp
add
pop
icebp
push
mov
loope
push
lock
push
ret
push
int3
rcrb
popa
xchg
jle
cli
leave
inc
cmpsb
movsl
test
into
out
mov
lea
sbb
outsb
movsb
mov
enter
lret
fs
dec
jl
sbb
sbb
adc
or
movsb
xor
cmpsb
bound
stc
adc
mov
adc
jl
lods
sbb
dec
repnz
push
ja
outsb
shrl
clc
adc
inc
or
jl
inc
push
movsb
sahf
shlb
push
in
out
adc
pop
jg
xchg
fwait
jp
push
sbb
jl
rcll
mov
maskmovq
mull
and
inc
inc
sar
in
cmc
mov
xor
test
cmp
pop
xchg
jbe
mov
fdivs
mov
scas
test
mov
les
mov
in
push
pop
pop
inc
out
outsb
pop
sub
loopne
jecxz
jp
rcr
jbe
xchg
clc
adc
cmpsb
mov
cmp
add
cmp
jp
adc
fsubs
jns
rorb
ret
push
int3
jl
jecxz
adcl
xor
call
jne
subl
mov
sbb
or
xchg
xchg
push
cwtl
jbe
mov
loop
push
xlat
xor
imul
jo
xor
or
in
xchg
mov
push
inc
lcall
xchg
cmpsb
imul
mov
push
repz
fdivrs
inc
jge
xorl
insl
mov
add
lods
mov
fs
inc
sbb
lret
lahf
mov
pop
rcl
sbb
aam
iret
scas
call
jns
out
jg
into
in
mov
or
push
loopne
jne
es
std
shll
xlat
sbb
cs
into
push
shrl
clc
xchg
mov
mov
icebp
jg
push
sbb
xchg
mov
int3
stos
pop
loopne
push
xlat
mov
aaa
das
into
mov
shlb
out
adc
dec
loope
cmp
xchg
push
sub
arpl
cli
std
ljmp
stos
fidivl
mov
fs
loope
arpl
cmp
int3
outsb
divl
sbb
and
sub
adc
mov
fsts
sub
dec
jae
mov
ficoml
lea
xchg
push
out
xchg
add
shlb
mov
jl
push
cmpsl
sahf
ljmp
jbe
leave
shlb
fnstcw
jbe
or
inc
into
pop
inc
cltd
sbbb
js
es
sub
shrl
mov
loop
adc
xlat
stc
dec
push
nop
pop
push
or
push
fnstsw
data16
push
mov
in
push
and
xchg
cmp
lcall
insb
add
imul
or
mov
xor
push
pop
lahf
push
fs
mov
jle
jb
dec
mov
aaa
pop
addr16
or
push
add
loope
push
sbb
lret
jno
mov
out
shlb
in
mov
lret
in
inc
xchg
loop
pop
dec
jge
ss
adc
jg
jne
or
dec
daa
xchg
mov
imull
cltd
ss
popf
push
inc
mov
enter
leave
out
popa
pop
fucomi
mov
jg
jne
fs
jmp
and
shrl
popa
es
or
into
into
dec
mov
xchg
sbb
sub
scas
xchg
es
xchg
iret
test
ret
push
scas
sbb
rcrb
addl
orb
stc
leave
add
ss
fistpll
xchg
inc
add
cmp
add
push
xchg
xchg
sbb
scas
fst
adc
sub
push
lahf
cmc
test
push
push
jmp
fs
adc
loope
jmp
cwtl
roll
into
dec
or
je
es
push
fiadds
dec
xor
pop
mov
sbb
mov
jns
sti
xchg
xchg
frstor
cmp
and
pop
inc
mov
sahf
push
cs
xor
andps
mov
jb
shrb
mov
sahf
push
push
pop
int3
pop
out
push
cs
jo
aaa
xrelease
xor
mov
xor
jmp
adc
or
repnz
dec
je
call
mov
cmp
into
filds
push
jnp
int
int3
icebp
daa
out
cmove
ss
mov
xor
jge
into
add
inc
cmp
xchg
ret
insb
xlat
loop
mov
dec
int
shlb
mov
lods
int3
mov
mov
out
cltd
js
dec
cs
push
and
sarb
xor
sahf
in
or
mov
sti
fcomp
mov
jo
cmp
les
add
xor
stos
jl
cwtl
lock
mov
mov
push
cmpsb
ret
andb
jnp
das
mov
lret
mov
add
xor
push
pop
fcompp
add
shrb
pushf
push
dec
lea
ljmp
lret
or
push
adc
push
mov
sahf
mov
cmp
out
ret
mov
inc
arpl
test
push
sbb
inc
popa
push
dec
dec
jbe
add
xor
rclb
push
jo
ret
ret
scas
mov
add
pop
mov
in
int
mov
mov
adc
aad
mov
rcrl
add
rcl
lahf
sub
arpl
stos
mov
movsl
pop
mov
bound
fwait
imul
xor
mov
push
jg
repz
push
pop
or
pop
sahf
adc
pusha
iret
rcrl
jp
add
popw
mov
jle
mov
sub
arpl
sbb
jmp
in
mov
mov
pop
inc
mov
pusha
xchg
adc
andl
or
lahf
ret
std
cmp
negb
mov
jbe
cmp
adc
cmp
jo
gs
sub
out
mov
fdivp
mov
cmp
dec
add
jp
xor
inc
dec
push
jmp
sbb
mov
jl
in
das
movsl
and
cwtl
imul
lcall
divl
mov
inc
arpl
pop
sbb
adc
mov
repnz
int
cmpsb
js
xchg
xor
pop
jmp
nop
push
adc
xchg
sbb
test
cmp
xchg
adc
inc
mov
insl
mov
adc
push
gs
arpl
sbb
sub
mov
lret
sub
xchg
popf
adc
andb
lret
outsb
lods
subb
dec
cld
and
loope
xchg
dec
mov
inc
cmp
inc
test
xchg
jbe
scas
pop
fisubrl
add
in
jae
inc
or
push
jmp
sbb
fdivrl
mov
xor
push
repz
xor
std
push
out
cltd
imul
out
sbb
fwait
pop
cmp
stos
fxch
leave
mov
xor
hlt
out
add
xor
loope
dec
ret
dec
in
fiaddl
push
add
push
out
push
mov
in
pop
std
cld
loopne
rclb
ljmp
pop
jl
movsl
dec
pop
jb
pop
aas
jae
lret
xlat
arpl
cmp
test
dec
fs
fcomi
jbe
or
icebp
xchg
adc
addb
scas
push
sar
fcom
movsl
mov
psubusw
ds
rcl
out
inc
mov
cmpsl
lret
xor
xchg
fs
je
fbstp
or
sbb
mov
or
mov
inc
jp
movsl
mov
jecxz
xorb
roll
adc
test
test
push
int3
xor
dec
nop/reserved
shll
xchg
lahf
int3
mov
addr16
xchg
inc
and
cmpl
pop
je
add
xlat
jg
xor
inc
stos
pushf
shlb
push
iret
popf
les
xchg
rorb
push
rcl
movsb
xor
inc
ja
pop
xchg
push
fcmovbe
mov
cwtl
jb
sub
pop
inc
and
pop
rcll
pop
out
in
out
xchg
leave
cwtl
xor
xor
insb
xor
ret
mov
fiadds
pop
add
and
in
adc
sbb
sub
jne
mov
xor
pop
or
inc
mov
cmpsl
scas
aam
psubusb
addr16
shlb
jle
test
lret
mov
lock
loopne
daa
stc
inc
hlt
cmc
xor
adc
lcall
push
xchg
mov
mov
push
outsl
ja
aam
leave
test
test
movsl
mov
inc
inc
sbb
and
pop
pop
test
mov
push
xor
push
into
imulb
mov
repz
loop
adc
dec
popa
mov
xor
jb
hlt
addr16
inc
mov
xor
int3
add
int3
icebp
popa
shll
out
inc
out
xchg
jb
and
lcall
ret
inc
mov
leave
daa
mov
repz
negl
mov
in
lds
sti
mov
pop
pop
fprem
iret
pop
ljmp
jbe
sub
fmulp
push
stos
mov
xor
mov
dec
inc
push
jno
outsb
xor
mov
or
mov
inc
inc
cmpsb
frstor
inc
out
test
enter
add
das
adc
gs
add
out
xchg
mov
out
loopne
mov
movsb
mov
lods
stos
xor
push
xchg
push
pop
icebp
push
xchg
test
into
aas
iret
loop
shr
sub
scas
stos
in
mov
mov
das
lods
mov
add
jmp
popa
mov
xchg
jae
mov
daa
mov
call
rol
push
dec
fcompl
les
mov
adc
sub
mov
or
sti
pop
inc
sbb
fdiv
addr16
xlat
andl
notl
in
xchg
or
cwtl
or
out
or
movsl
call
fs
out
dec
xchg
ficoml
out
mov
je
xor
mov
pop
call
int
fidivl
or
mov
testb
out
add
push
test
or
adc
dec
int3
into
lret
loope
xchg
popa
out
sub
mov
sbb
push
outsl
rorb
pop
repz
test
lahf
dec
test
mov
repnz
outsb
mov
mov
stos
add
pop
dec
inc
xchg
je
push
scas
cmc
xor
mov
ss
xlat
cmp
jo
lcall
aaa
out
mov
sbb
faddl
not
pop
xchg
call
sbb
cwtl
adc
xor
mov
lea
push
cwtl
or
enter
jmp
movsl
inc
inc
push
mov
out
pop
mov
cwtl
adc
iret
div
mov
mov
adc
pop
sbb
and
xchg
incl
jns
aam
stos
xor
in
push
inc
jmp
mov
lock
or
ret
adc
pop
out
int
repnz
aam
pop
pop
aaa
xchg
mov
fwait
lods
inc
stc
mov
shll
mov
push
dec
inc
lret
out
adc
jl
mov
enter
pop
mov
jle
mov
mov
push
mov
sti
pop
mov
add
push
rcll
or
xchg
sub
adc
cmp
mov
push
jno
cld
dec
jmp
mov
repz
or
pop
notl
in
mov
mov
pop
pop
sub
sar
dec
cmp
jg
inc
xchg
arpl
adc
testl
cwtl
lods
mov
and
jbe
xor
jns
test
out
std
outsb
movsl
sbb
or
leave
inc
jae
lret
jo
push
jg
pop
cmpl
aad
jle
fcmovbe
lods
dec
inc
mov
jno
xchg
out
mov
ror
rcll
idivb
xor
out
pop
mov
sbb
pop
adc
adc
adc
mov
jbe
in
aam
jmp
faddl
pop
mov
pop
xchg
mov
sbb
leave
or
sub
push
icebp
sub
add
pop
sub
dec
pop
sbb
fistpll
stc
jmp
addr16
test
mov
push
jmp
sub
stos
cld
je
out
adcb
or
shlb
out
push
add
cwtl
test
pop
les
mov
mov
xchg
fisubrs
cmc
push
in
adc
or
push
stos
ja
shlb
cmpsb
dec
xchg
cltd
sub
in
mov
popf
or
xor
push
sarb
aam
and
ljmp
out
or
int3
dec
cmc
gs
shll
push
mov
in
dec
sub
push
jne
imul
mov
sbb
mov
or
add
jbe
mov
into
pop
outsl
imul
movsb
into
inc
or
sbb
xchg
sub
jl
lcall
nop
pusha
pop
loop
loope
hlt
sti
pop
push
outsb
push
out
gs
cltd
or
fistps
popa
mov
fisttpll
mov
push
loopne
mov
fcoms
out
fistps
inc
js
push
mov
je
aas
insb
clc
into
shll
ds
rolb
loop
dec
dec
push
add
xor
sarb
jne
mov
lret
mov
mov
xchg
mull
or
dec
dec
aad
ja
lods
add
jne
repnz
dec
mov
lretw
cmp
fbld
push
iret
sub
stos
lret
enter
push
popf
sahf
adc
mov
inc
push
addr16
or
pop
mov
ss
loope
iret
or
aaa
xchg
sbb
and
clc
movsb
into
adcb
pop
dec
or
push
lea
mov
mov
ret
imul
out
push
jg
ss
gs
mov
test
loop
jne
adc
pop
mov
xchg
lea
es
push
inc
push
mov
stos
pusha
repz
xchg
cmpsl
stc
cld
data16
ss
icebp
xor
mov
test
xchg
bound
into
mov
pop
pop
enter
mov
mov
jne
xchg
dec
stc
decb
cmp
mov
daa
imul
ljmp
adc
int3
shl
mov
loop
mov
int3
and
nop
xor
pop
rolw
pop
xchg
rclb
inc
insb
mov
imul
addl
std
push
and
popf
cld
jmp
aam
mov
push
sbb
xor
movsl
ret
adc
inc
test
std
test
ffreep
testb
pop
nop
jecxz
in
out
push
jp
stc
push
add
mov
cmp
jmp
push
jecxz
in
iret
icebp
add
cmp
aaa
mov
pop
mov
aam
or
ds
xchg
mov
sub
inc
adc
scas
std
sbb
rorl
out
cmpsl
xor
jecxz
push
lock
or
dec
cmp
or
test
hlt
jno
xchg
or
loope
cmp
sbb
pop
inc
jbe
dec
les
cltd
xor
cmc
sbb
push
cmpb
loop
xor
pop
mov
ja
popf
push
repz
jb
into
inc
ljmp
push
popl
fimuls
or
iret
mov
mov
rcrl
and
lcall
mov
jl
mov
or
or
lret
cld
inc
daa
negb
push
sub
xchg
es
aaa
xor
pop
rcl
lcall
dec
cmc
sub
cltd
or
dec
enter
jne
rcrb
xor
mov
cmpsl
not
lods
rcr
dec
sbb
fs
push
jb
in
mov
fdivrl
pop
and
jle
dec
jg
lret
es
rcr
cmp
in
and
adc
movsl
mov
iret
push
ss
mov
stos
sti
inc
iret
stc
popa
jnp
insb
jle
adc
orl
mov
inc
adc
movswl
xchg
stos
lret
inc
repnz
ds
fisubl
nop
mov
jae
mov
sti
dec
push
fst
push
leave
adc
sub
insl
pop
divl
lds
dec
les
adc
pop
push
add
cmc
sbb
fwait
aam
or
lea
cmpb
int
sub
inc
xchg
sbb
mov
fs
aad
push
cs
out
les
add
fcmovnbe
xchg
leave
add
mov
fsubrs
jmp
roll
loope
add
lahf
fnstsw
lret
out
test
mov
int
mov
jae
or
add
mov
dec
sub
jmp
movsl
sbb
es
mov
addl
push
lods
fmul
mov
pop
cltd
rol
sbb
out
dec
jb
mov
mov
incl
pop
cmp
addr16
imul
stos
scas
mov
jmp
pop
or
xor
shufps
mov
std
lods
xchg
cmp
pop
inc
and
push
cmp
fldenv
or
jbe
inc
lods
xchg
addb
sbb
sbb
push
xor
jno
std
rclb
ljmp
int
and
jle
pcmpeqw
mov
push
mov
inc
sub
ftst
jae
xchg
push
mov
lea
rorb
jno
cltd
pop
int3
adc
push
mov
imul
repz
xor
fistl
dec
popf
movsl
mov
aam
and
movsl
stc
mov
push
ss
push
sub
xlat
cmpsl
xchg
lret
mov
inc
adc
mov
push
icebp
out
push
scas
dec
adc
push
leave
es
jo
inc
cwtl
push
mov
push
ja
jle
sub
pop
mov
cmpsb
int
iret
ret
push
or
push
inc
sti
xor
add
dec
pop
stos
nop
push
pusha
jo
sarl
lods
xchg
lods
pushf
xchg
hlt
and
mov
xchg
adc
test
fwait
or
mov
and
outsl
pop
leave
mov
in
mov
jne
mov
xchg
lock
add
test
or
adc
and
cld
test
je
into
das
inc
mov
lcall
xchg
jg
jno
into
and
cmp
insb
pop
sub
loopne
cwtl
sbb
idiv
adc
xor
repnz
or
fisubrl
sub
jne
lock
and
lret
inc
and
inc
lds
lods
lock
adc
loop
loope
mov
fcmovbe
jecxz
sub
ja
scas
jl
test
add
xor
xor
pop
shlb
mov
and
into
xchg
jmp
ret
and
xchg
push
push
mov
movsl
popf
lcall
ja
sub
es
jecxz
dec
sar
movsb
mov
imul
jne
iret
clc
mov
fdivl
loope,pt
and
test
mov
and
fsubrs
mov
dec
in
mov
cmp
out
in
lret
add
sti
cmp
dec
sub
icebp
ffree
jmp
das
sub
in
ret
cmp
cmc
cwtl
ds
add
cmp
outsl
lahf
daa
rorl
inc
rorb
das
push
cld
push
lcall
mov
loope
push
sbbb
inc
mov
cmp
jae
aam
push
into
es
dec
pop
fsubl
jbe
sbb
stc
mov
ds
jmp
out
jl
testl
jne
xor
sti
into
xor
subl
sub
push
sar
and
jb
dec
mov
cmp
dec
out
jle
out
aas
stc
fwait
sub
jnp
lret
stos
inc
push
cwtl
sti
inc
and
imul
or
data16
daa
mov
and
mull
addr16
inc
into
loopne
insb
mov
cmpb
sub
xor
dec
in
mov
push
fidivrl
bound
jmp
mov
decb
inc
mov
sbb
pop
xchg
adc
cld
mov
movsl
mov
in
or
dec
mov
or
loope
jno
enter
mov
out
pop
rcrb
nop
adc
push
insb
adc
sti
cltd
gs
movsl
out
por
xchg
call
jmp
ror
and
mov
ja
data16
testl
enter
std
jns
push
fdivs
mov
add
outsb
jne
fsubl
adc
cmpsb
push
daa
int3
roll
xlat
in
mov
cmp
ret
test
andl
push
lahf
mov
push
loopne
dec
lret
push
push
mov
imul
fcomi
jnp
mov
or
sar
scas
daa
mov
insl
add
sbb
imul
in
out
lret
call
mov
sub
mov
mov
data16
mov
andl
lea
cmc
push
inc
and
sub
inc
sbb
jns
bound
xor
out
lret
cmpsb
push
hlt
or
stos
imul
fisubl
cmc
lret
faddl
jecxz
out
inc
int
pop
xor
inc
sub
cmpb
insb
dec
mov
cmpsb
cmp
test
pop
adc
int
mov
fisubrl
inc
imull
mov
outsb
jle
cmp
mov
repz
int
lods
jae
sbb
rcr
fcmovnbe
pop
sbb
dec
call
enter
xor
cmpsl
cmpsb
dec
and
pop
xchg
mov
scas
pop
adc
rorl
fstps
in
sbb
xchg
pop
mov
pop
adc
bound
shll
mov
mov
xor
jg
push
dec
xchg
mov
mov
cwtl
pop
fcoms
adc
or
out
popf
rcrl
aas
dec
daa
dec
loop
insl
mov
stos
mov
cmp
mov
push
lds
repz
pop
pushf
ja
mov
ss
xchg
cmp
mov
insb
out
cltd
add
xchg
or
repnz
push
stos
pop
out
movsl
mov
ds
lods
add
pop
pop
in
adc
or
hlt
push
movsl
push
mov
jb
jecxz
push
jns
push
vpsrlw
stos
dec
pop
in
imulb
and
adc
bound
out
jbe
mov
call
jmp
xlat
lret
jb
clc
cld
mov
loope
mov
sti
or
rcl
jne
mov
xor
or
push
adc
and
pop
mov
adc
shll
jg
outsl
jo
jmp
rorb
dec
in
sub
out
data16
mov
cmpsb
iret
icebp
mov
in
or
fildll
stos
cld
es
mov
or
ljmp
xchg
int3
push
cwtl
lahf
adc
insl
or
cmc
popl
call
repz
xchg
in
xor
insb
sub
jns
test
test
in
cmpsl
xorl
movsl
mov
mov
mov
inc
push
cmpsl
inc
in
inc
lods
aam
push
dec
test
mov
ret
stos
fsub
jp
inc
cmc
xchg
loope
je
adc
push
xchg
mov
sbbb
inc
ret
popf
repz
fisubl
dec
std
push
icebp
cmp
xor
mov
test
jb
pop
test
daa
cmp
mov
dec
imul
negl
lret
jmp
mov
lods
aad
inc
fldt
scas
xor
scas
cmp
mull
in
xchg
mov
jecxz
cli
sub
pop
mov
loop
adc
movsl
jp
fs
data16
andps
mov
sub
shlb
imul
test
cmp
pop
in
cmc
sub
cwtl
jno
inc
adc
test
mov
scas
cwtl
fst
push
mov
or
inc
mov
and
pop
int
jmp
popa
pop
xor
inc
loop
fnstsw
mov
dec
push
or
movsb
out
test
test
mov
xchg
outsl
ret
mov
jmp
subb
inc
ja
jb
jecxz
outsb
jbe
mov
lock
in
mov
testb
movsb
add
cwtl
dec
mov
cli
std
sub
mov
sbbl
mov
leave
adc
ret
xor
insb
js
cmp
loopne
shlb
push
push
sub
dec
push
adc
ret
mov
lea
xchg
sub
add
arpl
cmpsb
mov
leave
aam
in
sub
popf
negl
mov
push
xor
fmull
ds
xlat
outsb
inc
pop
xchg
rcrb
mov
popf
dec
jl
lods
jne
ljmp
and
dec
cmpsb
inc
xchg
add
sbb
sbb
jbe
pop
mov
adc
lcall
hlt
mov
mov
adc
or
loop
fwait
xor
into
inc
data16
outsb
movsb
dec
xchg
lock
pop
cmp
sbb
push
aad
shrl
mov
and
es
jg
icebp
lret
ret
cmp
push
fisubrl
andb
jne
popa
dec
push
pushf
arpl
cmp
movsl
sbb
popf
into
outsl
daa
sub
and
mov
dec
movsb
cmp
aad
xchg
and
fisttps
in
mov
cli
mov
mov
ja
outsl
into
cltd
xchg
out
inc
mulb
push
sbb
xchg
in
out
xchg
fimull
pop
sub
xlat
xor
popl
xchg
dec
sbb
ljmp
add
mov
lahf
sbb
inc
adc
mov
mov
dec
call
jmp
adc
js
lea
push
and
into
xor
inc
lret
pop
xchg
pop
dec
or
xchg
sub
push
xor
cmp
sub
bound
mov
mov
fistpl
cs
mov
dec
adcb
push
cmp
or
cmp
pop
mov
mov
int3
dec
fsubrs
pop
pusha
jne
cwtd
in
sahf
xlat
mov
ss
in
shll
mov
into
sbbl
mov
mov
rcl
leave
push
adc
jno
fs
mov
dec
ret
push
push
test
add
pop
push
and
ss
ja
jne
mov
mov
push
mov
aas
fistpl
out
repnz
ljmp
jb
sti
clc
pop
loop
xor
loopne
call
mov
dec
pop
out
inc
scas
add
aam
adc
loope
imul
jo
movsb
mov
push
popf
jle
sub
fcom
jno
adc
fwait
pop
jecxz
das
mov
inc
mov
xchg
into
and
cmp
cmp
xchg
test
mov
stos
adc
sti
and
xor
add
xor
les
cmp
into
push
add
lods
movsl
pop
adc
mov
cmp
daa
clc
push
mov
roll
jbe
cwtl
and
ljmp
cmp
lods
outsb
rcr
mov
or
fadd
jmp
push
sub
into
stc
mov
aam
pop
dec
sbb
aaa
adc
lcall
jp
xchg
repnz
leave
fwait
push
inc
xor
xlat
jnp
test
jl
cmp
pushf
pushaw
cmpsl
xchg
mov
ja
dec
inc
xlat
stos
cltd
jns
mov
std
pop
push
ret
adc
cmp
xorb
in
clc
adc
test
sub
movb
lret
sub
pop
xchg
add
outsl
int3
test
aad
sub
inc
sbb
inc
push
pop
cli
pop
leave
shll
cmpsl
mov
enter
mov
test
push
stc
icebp
in
push
add
sbb
jl
pusha
adc
loop
inc
xchg
lods
or
sarb
rcl
aam
test
xchg
jns
loopne
push
stos
lret
adc
fidivrl
or
and
je
add
sbb
leave
lcall
cmp
add
icebp
out
push
sbb
cli
add
testl
ss
scas
test
ja
sub
cmp
lods
cmpsl
adc
test
test
adc
into
inc
je
int3
xchg
imul
xchg
pop
mov
cs
test
pop
add
pop
and
push
inc
sub
xorb
in
jnp
xchg
les
push
pop
lret
jg
leave
pop
sub
in
push
mov
insl
push
add
xlat
cmc
add
fst
sahf
cmp
inc
into
jecxz
xabort
stos
fwait
dec
cmp
adc
lods
sub
push
stc
and
mov
jmp
lret
stos
es
jo
and
iret
test
orl
mov
repnz
fdivs
lret
incb
in
mov
fldl
mov
rcrb
sub
xchg
test
xor
or
fldcw
pop
sbb
mov
insb
push
call
push
sub
es
or
into
sbb
cld
mov
push
popa
rcrl
jecxz
out
lea
out
jo
adcb
and
int3
push
negl
out
inc
xchg
add
jbe
sarl
pop
mov
dec
xor
inc
push
adc
inc
repnz
mov
pop
ds
or
add
pop
pop
pop
shrb
sbb
aad
in
imul
jge
sbb
push
ds
lret
or
loope
pop
pop
flds
dec
adc
lahf
xchg
cwtl
dec
push
mov
push
jo
cwtl
inc
loopne
push
in
nop
mov
mov
xlat
add
ret
mov
inc
rcr
push
fs
aaa
jae
into
nop
into
mov
push
or
loope
adc
hlt
cli
jg
mov
nop
mov
je
jge
das
fs
xchg
dec
popa
dec
lahf
and
into
xor
push
hlt
testb
cmp
mov
ds
into
jnp
lds
iret
push
xchg
pop
rcrb
cmp
rcl
mov
cmp
xchg
movsb
test
cli
fsubrs
rorb
mov
nop
adcb
pop
push
cmc
adc
stos
jno
rol
and
mov
jbe
jmp
mov
lret
push
push
fnstenv
add
jecxz
rorb
mov
popf
sbb
ds
xchg
jg
fistpll
imul
push
push
push
pop
xchg
pusha
and
xchg
sahf
aam
movsl
sub
xchg
lock
repnz
inc
mov
inc
or
cmp
pop
insb
sub
je
jg
xchg
icebp
dec
mov
repz
cmc
cld
jns
or
pop
and
addr16
mov
inc
xor
out
fstpt
sub
jecxz
xorl
pop
out
bound
jle
cltd
inc
sub
xor
mov
or
movsb
add
lock
idivl
lods
nop
adc
outsb
sub
arpl
sub
jp
dec
sarb
sub
in
xor
mov
fcoml
or
iret
push
clc
adc
add
stos
add
fbld
pop
rcl
dec
mov
es
xor
fistpl
or
jnp
mov
adc
push
pop
xchg
push
xchg
inc
imul
dec
mov
pop
out
xlat
jecxz
xchg
cmp
mov
push
add
push
jae
push
inc
adc
adc
out
loopne
cmc
xchg
jnp
inc
cmp
pop
out
or
dec
sarl
es
mov
inc
into
add
ret
push
in
out
fwait
mov
jl
test
call
dec
inc
popa
ficomps
push
ds
cmc
mov
aas
ja
test
out
and
or
lret
lds
xchg
push
das
and
mov
nop
or
and
cmc
fbld
fst
push
popf
jp
movsl
les
xchg
pop
out
rolb
and
sti
push
std
pushf
xor
das
mov
add
and
and
inc
cmp
pop
hlt
xchg
fildl
xchg
inc
aas
cmp
inc
sub
jno
shl
mov
cmpsl
mov
cmp
aaa
mov
out
pop
leave
xchg
je
movsl
scas
sub
pop
repnz
cmp
adc
outsl
mov
out
lahf
movsl
inc
fisttpl
jo
inc
mov
in
int3
gs
dec
mov
pop
mov
xchg
testl
lock
pop
jns
clc
push
in
sbb
dec
pop
and
mov
xor
cli
js,pt
das
mov
adc
outsb
loopne
mov
push
aad
mov
movsl
inc
and
lret
xchg
mov
push
jbe
mov
out
mov
pop
push
dec
aas
dec
add
mov
jne
scas
imul
and
insb
insb
cmp
loopnew
fsubl
test
cmp
mov
xor
lods
jb
mov
imull
mov
shl
into
cmp
push
jecxz
cmpsl
scas
dec
mov
mov
adc
fdivr
test
adc
int
ds
xorb
xchg
mov
adcb
sub
cli
push
int3
test
int
scas
lds
rdtsc
xor
outsb
popw
xchg
jl
aad
sub
into
insl
mov
stos
jae
jp
pop
dec
mov
bound
cmc
cmp
mov
aam
sti
loopne
insb
in
call
dec
mov
es
dec
cli
mov
mov
sahf
call
sbb
inc
cmp
scas
jg
loop
mov
jno
cwtl
sub
mov
stos
or
sub
mov
stos
popa
into
ret
push
jbe
jle
inc
xor
les
fldenv
mulb
sahf
pop
ret
lock
iret
es
mov
out
lods
int3
sub
loop
mov
cwtl
cmpl
loopne
out
insl
mov
fsts
mov
bound
das
adc
mov
cmp
mov
mov
lods
sbb
mov
lea
and
sbb
mov
xor
and
rcrl
call
stc
sahf
js
imul
mov
loopne
into
jb
mov
jle
loope
rcll
mov
pop
std
sub
pop
stc
mov
sub
imul
enter
popf
lcall
lea
cmp
fidivrl
push
adc
mov
jae
mov
or
insl
aam
repz
mov
xchg
xor
inc
shlb
iret
or
movsl
jp
add
lahf
adc
out
push
idivl
fisttpll
inc
sub
js
imul
hlt
into
repnz
ret
aad
jnp
push
jg
inc
flds
inc
inc
ja
and
push
sar
xor
xor
push
lea
divb
iret
mov
mov
pusha
sbb
sti
push
push
movzbl
repnz
sub
or
addr16
sarb
enter
jbe
pop
jl
sbb
shll
dec
sbbb
jbe
dec
mov
outsb
xchg
sarb
dec
xor
testb
popa
inc
test
mov
push
test
jg
loop
jno
popw
in
and
es
inc
shrl
int3
or
inc
aas
inc
mov
lret
jg
mov
popa
shr
or
jns
fisubrs
mov
paddsb
dec
mov
test
aas
fs
mov
mov
sub
push
je
cmp
dec
push
pusha
adc
aas
dec
sub
push
pop
sbb
fdivrs
sub
test
jns
ja
push
repnz
push
mov
push
xchg
push
dec
mov
sbb
xor
cmp
std
neg
adc
bound
nop
ret
inc
xchg
xchg
mov
cmp
mov
movsb
addr16
add
dec
mov
mov
jmp
aam
pop
inc
sbb
dec
push
lret
pop
mov
jle
mov
aam
xor
cmpsb
add
inc
fdivl
dec
outsl
addr16
push
mov
rcl
or
inc
jle,pt
out
ja
push
dec
out
daa
mov
shlb
pop
into
inc
adc
mov
push
xorb
and
punpcklwd
xchg
loop
adc
lods
mov
inc
jo
xchg
out
shrl
jns
xorb
stc
pusha
in
lods
les
push
jns
in
loope
repnz
xchg
and
xchg
sbb
fwait
mov
adc
xor
jge
inc
stos
or
dec
jne
and
into
xor
rorl
cwtl
loopne
shrb
jl
mov
out
fisubl
sahf
dec
xorb
add
loop
mov
stos
out
mov
xor
dec
mov
cmp
insl
sub
and
xor
add
pop
leave
leave
jecxz
or
xlat
bound
adc
outsl
jl
lret
xor
dec
test
jno
xchg
sub
rcrb
daa
mov
xlat
dec
cs
icebp
rorl
mov
aam
stos
lods
push
adc
aaa
inc
movsl
cmp
push
mov
cli
nop
int
std
adc
lods
mov
rcrb
jle
push
rcll
aam
jg
clc
outsb
rorb
xor
stos
xchg
lcall
mov
enter
xor
xor
mov
repnz
test
inc
fidivl
roll
cli
cs
stos
mov
xchg
cmpsl
add
out
divl
sbb
ss
mov
xor
xlat
push
jno
or
jae
addr16
mov
aas
dec
xor
adc
out
movsb
sti
pop
cmp
sub
loopne
mov
jb
inc
mov
dec
sbb
scas
and
xchg
mov
in
pop
mov
adc
mov
cs
int
xchg
or
cmp
out
inc
mov
js
push
ret
mov
rorb
push
mov
inc
mov
push
addr16
out
dec
fucomi
mov
nop
movsl
out
or
mov
xchg
loope
mov
mov
movsb
or
test
or
in
push
clc
push
repnz
test
dec
or
mov
inc
xor
out
pop
jmp
mov
adcl
mov
dec
dec
scas
outsl
cmpsl
sbb
dec
pop
sbb
mov
ss
add
push
sub
cmpsl
push
add
sahf
sub
aam
push
lahf
aad
outsl
adc
in
add
mov
mov
mov
mov
lcall
incl
out
cmpsl
xchg
out
inc
stos
inc
sahf
cmp
imul
cmc
insl
in
lret
inc
mov
or
push
push
enter
fmuls
xchg
movsl
mov
das
daa
pop
outsl
test
fistpll
jp
mov
pop
ljmp
js
es
jns
add
pop
dec
jbe
push
rorl
jge
rclb
sub
push
dec
xlat
pop
addr16
or
xchg
or
lret
sti
and
scas
ljmp
push
dec
xor
test
dec
xor
lds
ss
lods
sarb
int
mov
pop
leave
pushf
mov
in
ljmp
push
mov
mov
fmulp
rclb
and
mov
mov
into
in
cwtl
ds
mov
add
sub
movsl
or
roll
jle
xchg
testb
aad
loopne
xchg
xchg
inc
inc
arpl
out
insb
ret
in
into
sahf
xor
dec
repz
xor
js
out
mov
sbb
daa
lret
mov
jp
int3
insl
popa
aam
or
jle
pusha
xor
inc
lret
aaa
in
sub
pop
rcrb
je
cmp
data16
cmpsb
pop
into
or
cwtl
add
aas
jbe
aam
cmpsb
sbb
dec
popa
mov
fidivs
add
insb
sub
or
nop
cld
ss
outsl
xor
test
mov
ret
mov
fimuls
mov
push
xchg
out
mov
inc
outsb
pop
jnp
inc
inc
dec
insb
mov
mov
jg
mov
pop
add
push
inc
xor
pop
test
aam
in
fs
sub
xchg
jge
mov
stc
add
mov
mov
movsb
jnp
xchg
int3
les
imul
pop
inc
test
dec
xor
sub
and
in
test
cmpsb
movsb
fidivrl
dec
dec
stos
mov
cmp
xchg
push
push
out
shrl
jne
jle
sar
inc
add
pop
or
loope
cmp
adc
jecxz
jbe
ljmp
jns
add
popa
sarb
sub
dec
sub
enter
cli
jnp
inc
and
test
sti
into
adc
jne
stos
and
arpl
jmp
mov
xor
mov
adc
or
push
or
decb
cmpl
into
sbb
cs
adc
fiaddl
insl
jnp
push
popa
inc
or
and
rcrb
call
fsub
adcl
cli
xchg
lahf
mov
mov
fimuls
rorb
daa
ds
push
add
jl
rcl
xor
push
mov
imul
lea
adc
es
and
fdivrl
sbb
lea
or
mov
hlt
mov
iret
outsb
lods
dec
cmp
fndisi(8087
imul
scas
adc
mov
iret
stos
outsl
adc
test
dec
pusha
mov
lret
dec
mov
mov
mov
lock
movsl
and
adc
jae
lahf
push
pop
cli
mov
ja
lock
mov
inc
dec
iret
push
cmpsl
jbe
sti
mov
ds
test
push
scas
push
sub
aam
adc
call
jg
imul
rorb
pop
int3
xchg
sbb
lahf
sub
test
inc
gs
in
jmp
loopne
and
adc
push
add
out
dec
or
hlt
mov
or
popa
mov
lea
out
aas
int
push
mov
mov
ret
add
mov
pop
repnz
push
lods
js
sbb
push
out
push
adc
arpl
lahf
loop
or
outsb
roll
cltd
push
loope
xchg
push
or
xor
ljmp
int
mov
imul
push
fwait
clc
cmp
into
push
fisttps
fnsave
push
cmpsb
xchg
xor
sbb
add
jae
mov
pop
mov
push
add
xor
inc
mov
mov
jno
ror
je
sbb
mov
dec
cmp
ds
sbb
xor
cmp
out
pusha
pop
repnz
mov
lods
sti
fmull
ss
inc
cld
out
out
or
push
stos
scas
ljmp
notb
push
xchg
lahf
jge
pushf
jmp
push
pop
cli
fucomp
mov
cmp
inc
rcl
shlb
bound
shrl
je
mov
fmul
das
cld
xchg
pop
mov
insl
mov
xor
and
xor
in
fwait
sub
mov
sbb
dec
movb
mov
jl
pop
lret
aam
and
icebp
orl
ss
jg
in
fwait
sbb
mov
xchg
cmp
jg
xchg
daa
lahf
aam
pusha
cltd
fstpt
sti
adc
pop
repnz
dec
testb
and
sub
xchg
add
add
add
jmp
xlat
gs
or
idivb
inc
dec
add
xchg
inc
jl
lea
call
inc
mov
push
pop
into
xor
cwtl
xchg
mov
mov
jb
orl
lcall
sarl
and
leave
mov
rcrb
mov
nop
pop
cli
sahf
movl
adc
sbb
daa
pop
leave
mov
test
xchg
push
ret
data16
mov
out
sarl
in
xchg
outsl
stos
pusha
ret
movb
dec
sbb
lret
push
fs
fimuls
imul
mov
xchg
insl
or
clc
aaa
test
jl
fdivrs
pushf
jecxz
mov
in
sbb
icebp
and
orb
xchg
and
or
inc
int
imul
into
adc
mov
cmpl
add
loop
loopne
jae
xchg
push
cli
push
aad
ja
stos
xchg
ss
jo
mov
push
cmpb
dec
pop
adc
xor
jmp
mov
fistps
add
popf
mov
test
orl
cmp
rolb
lods
and
pusha
stos
adc
jbe
push
sub
test
jne
gs
inc
nop
fsub
sub
pop
clc
xchg
xor
pop
negl
add
mov
dec
push
pop
fistl
aam
jp
decl
je
in
sbb
adc
mov
imul
ret
lods
mov
jb
xchg
add
cmp
dec
cmpsb
mov
sub
rcl
add
mov
xor
xchg
hlt
mov
mov
in
or
mov
cs
cltd
popa
gs
jle
loopne
cmpsb
and
pop
cmp
aad
stc
sbb
fwait
push
icebp
in
xor
or
inc
sbb
xchg
cmpsl
outsl
pop
and
jl
enter
dec
lods
xchg
rcr
shl
sub
cmpsl
daa
imul
ret
loope
outsl
sbb
sub
adc
dec
jo
xchg
fmul
pop
enter
out
xchg
jbe
rcr
addb
cld
xchg
xor
mov
pushf
outsl
adcb
dec
test
inc
jg
push
hlt
sbb
sub
dec
das
mov
divl
push
xchg
lret
push
push
push
add
dec
mov
mov
inc
movl
js
into
or
pop
lods
adc
dec
cs
cltd
xor
xchg
std
adc
dec
sbb
sub
mov
int
aaa
fistpl
in
dec
test
pop
daa
js
adc
scas
xor
inc
xchg
mov
lret
sahf
cwtl
dec
fwait
enter
icebp
push
ja
fistl
into
sbb
clc
push
vmread
aam
mov
or
mov
testb
jg
push
inc
pushf
sub
mov
fidivrs
adc
push
push
inc
sub
adc
and
mov
loope
repz
or
add
out
lods
arpl
out
repz
dec
out
and
xchg
aad
mov
test
xchg
pop
add
inc
gs
out
aam
inc
sub
outsb
xchg
inc
psrad
jne
mov
jp
inc
or
mov
jle
add
pop
ret
out
and
cmp
fwait
aam
or
rorb
inc
jne
imul
rorl
into
repz
cmpsl
lods
out
rcrb
xor
inc
stos
lret
xchg
and
lods
fistpll
cli
mov
jp
pop
jecxz
imul
jecxz
inc
mov
mov
xor
mov
cmp
loope
or
into
iret
cmp
sbb
push
fidivrs
adc
in
jo
mov
sub
out
inc
into
cld
cmp
in
imul
or
sub
jmp
sub
fs
dec
lret
dec
aam
outsb
lret
push
push
popa
int3
mov
mov
sbb
cmp
inc
dec
aam
in
in
clc
arpl
dec
fisttpll
aad
jns
ja
je
das
pop
shlb
lret
sahf
sarl
nop
ja
dec
int
imul
mov
mov
out
fcmovnbe
mov
divl
cld
jae
adc
cwtl
sbb
jb
jb
into
inc
cmp
mov
push
sub
rolb
shll
lds
cmp
mov
dec
mov
dec
addr16
xchg
mov
outsl
push
add
mov
lods
push
add
mov
push
and
push
jmp
mov
dec
in
jb
inc
xor
mov
int
data16
mov
lcall
shll
pop
add
jo
lret
icebp
les
xor
sub
mov
sub
loope
cmp
inc
jg
ljmp
add
xor
jae
mov
clc
shl
movsl
xchg
into
test
gs
and
mov
out
sahf
push
cmp
push
or
iret
jb
add
and
jo
ljmp
xchg
popf
jb
pop
ss
adc
push
mov
ret
insl
sbb
call
scas
lret
sub
insb
pop
out
cmp
les
dec
imul
adc
rcrl
mov
outsb
push
mov
dec
and
test
out
dec
enter
shlb
and
ret
pop
faddl
cli
inc
xchg
jo
push
fsubrp
mov
xlat
xchg
dec
mov
stc
sub
cwtl
and
lcall
int
xchg
clc
push
loope
sbb
jl
add
jne
lods
mov
dec
lret
add
xor
inc
lret
or
mov
andb
dec
sub
aam
repz
outsb
add
in
add
insl
push
loope
idiv
insb
clc
popa
cmp
add
and
mov
cmc
movsl
lods
call
pop
push
pop
push
out
mov
or
outsb
adc
lret
dec
mov
repz
xchg
jecxz
xor
clc
pop
loope
inc
jle
push
dec
mov
shll
inc
sbb
int3
xchg
das
js
in
jne
je
mov
dec
xor
out
mov
jo
mov
insb
dec
mov
in
imul
xchg
mov
jp
sbb
jmp
mov
sbb
popf
lret
and
sbb
push
int3
aas
xor
pusha
in
push
loop
and
inc
push
cli
pop
cmp
aaa
mov
mov
in
push
jbe
push
ds
imul
dec
loopne
ret
xchg
adc
cmp
push
addb
lock
xchg
xor
or
inc
movsb
aaa
stc
and
ja
sbb
inc
mov
push
xor
or
push
or
scas
or
call
pop
push
dec
xchg
cmp
pop
imul
jns
out
divl
in
mov
lods
add
and
mov
lret
pop
in
loop
dec
jne
jle
adc
ljmp
mov
pop
or
mov
mov
jge
into
sbb
push
pop
dec
das
in
dec
add
mov
cmpsl
mov
push
xchg
les
pop
loope
pushl
jp
add
outsl
shll
push
jns
out
loopne
cld
xor
inc
push
mov
shll
addr16
aas
mov
clc
nop
outsb
pop
and
cmp
call
push
das
call
xchg
lds
dec
outsb
mov
fdivl
jno
xlat
popa
mov
in
aad
repnz
leave
jecxz
cmpb
sub
scas
or
sarl
adc
scas
lret
int
jne
sub
push
mov
sbb
jmp
sarb
ja
jnp
push
lds
or
gs
shlb
adc
cltd
adc
xchg
sbb
and
cmp
push
sbb
das
std
pop
int
dec
int
pusha
leave
sub
cmc
and
mov
ja
data16
scas
std
xor
inc
or
sub
mov
mov
push
pop
ss
icebp
jne
sti
xchg
push
stos
stc
rorb
ret
movsl
aad
adc
xlat
shll
push
push
inc
jp
std
fldl
sahf
inc
js
out
pop
push
xchg
std
mov
int
dec
popf
inc
and
pop
fsubrp
imul
jecxz
or
mov
stos
mov
jmp
and
into
orb
andb
xor
pop
dec
push
shlb
jb
loopne
push
dec
daa
adc
aam
ficoms
and
xchg
xor
aad
push
xchg
loope
bound
or
sub
ss
jmp
xlat
lock
pop
sbbl
dec
mov
mov
rorl
rcrb
sbb
sbb
lret
adc
mov
and
add
bswap
popf
sar
jle
mov
xor
aas
mov
mov
mov
ret
dec
inc
mov
add
xor
inc
xor
sahf
pop
rolb
mov
push
push
push
cmp
aam
lret
push
cmp
xchg
icebp
out
sbb
xchg
push
push
mov
jle
out
xor
adc
jmp
jp
mov
xchg
pop
stos
mov
adc
into
xchg
mov
filds
xor
les
jg
in
enter
add
cltd
repz
lock
xchg
mov
xchg
nop
rcl
dec
mov
in
movb
fcmovnbe
outsb
push
mov
sub
cmpsb
mov
adc
fwait
mov
stc
popa
in
shrl
push
aas
gs
scas
xchg
or
cs
jb
cmp
xlat
dec
das
cmp
scas
lods
and
or
sub
xor
js
lods
xchg
scas
add
imul
mov
cli
sti
stc
neg
shrb
in
ja
push
add
xchg
std
xchg
popf
xor
lcall
loopne
jb
data16
mov
dec
sub
mov
pop
imul
loope
outsb
in
popf
jg
shrb
cmc
push
sub
daa
testl
adc
xchg
outsl
pop
jecxz
add
jns
vcvtdq2ps
push
movsb
mov
rcll
mov
aad
addl
pop
inc
in
mov
into
loop
jno
add
push
jg
mov
in
lods
leave
adc
sub
outsl
aad
mov
add
mov
adc
dec
int3
push
xor
push
mov
jbe
lret
jne
jge
inc
adc
inc
ja
push
rol
aaa
jle
test
lret
int
fcmove
int
pop
movsb
mov
sub
pop
mov
sbb
jno
dec
mov
roll
mov
push
data16
dec
aad
test
pop
adc
enter
rorb
push
sbb
adc
jmp
push
mov
sbb
int3
popa
imull
aam
idivb
movsl
bound
stc
pop
sbbb
sub
or
pusha
push
push
out
not
cmp
dec
imull
xchg
aad
lods
push
jbe
test
js
and
push
testl
jge
mov
ljmp
adc
xor
movb
popf
jae
jmp
sbb
sarb
sub
dec
xchg
and
icebp
sub
insb
add
cmp
ds
adc
adc
sub
xlat
pop
add
call
pusha
iret
inc
sbb
xchg
scas
cmp
mov
add
jb
arpl
dec
add
fcoml
pop
mulb
jg
sub
jge
ds
pop
fwait
movsl
push
dec
outsl
aam
mov
rcll
out
mov
mov
in
out
xor
outsb
inc
lcall
daa
iret
pop
xchg
dec
and
mov
into
imul
push
xchg
stos
movsb
push
inc
int3
mov
pop
scas
pop
mov
mov
inc
adc
jns
aam
pop
mov
or
jle
and
mov
insl
mov
mov
xchg
call
lods
out
ds
xchg
mov
dec
sub
adc
xor
jmp
mov
mov
ja
cmp
stc
dec
push
mov
andb
ret
mov
mov
sbb
mov
add
xchg
repz
lods
xor
mov
nop
xor
out
cmp
insl
dec
jnp
xchg
in
rorl
loop
rcrb
push
fidivs
xor
neg
adc
cli
sub
or
in
ret
dec
daa
xchg
mov
jbe
jb
adc
popf
std
and
add
fbstp
lret
mov
xlat
div
arpl
clc
scas
ret
aas
cmp
jl
mov
adc
adc
mov
ret
lahf
rcl
insb
push
in
inc
adc
rcl
dec
mov
in
lods
scas
dec
cmp
inc
dec
mov
inc
push
lret
movl
sub
imul
add
xchg
adc
lock
stc
cmpsl
xchg
lods
into
or
dec
inc
pushf
adc
xor
clc
pop
mov
lock
xchg
roll
in
add
cmp
lret
mov
in
push
jl
xchg
std
ss
mov
icebp
lds
loopne
pop
arpl
lret
dec
das
or
jns
out
mov
add
js
push
cld
cmp
jmp
filds
xlat
xchg
iret
xchg
aam
divl
xchg
fwait
mov
sbb
xchg
insl
push
in
fcoms
outsl
inc
mov
test
test
fstp
es
mov
adc
xchg
shll
test
repnz
fsubs
mov
xor
in
aam
mov
outsl
mov
xchg
stc
xor
inc
xor
mov
push
mov
jnp
xchg
xor
sub
jae
pop
jmp
cmp
clc
jnp
dec
ret
push
pop
popa
mov
xchg
sbbb
scas
fimuls
shlb
vcvtpd2dqx
sub
dec
push
bound
inc
arpl
pop
cmpsl
jmp
inc
sbb
outsw
sub
pop
jns
mov
or
popa
sbb
sbb
mov
add
cmpsl
and
jbe
jmp
cmp
mov
sarl
push
fisubs
cwtl
gs
iret
adc
popf
int3
fs
inc
jbe
or
test
mov
lods
xchg
adc
and
insb
test
stc
jmp
push
lcall
roll
negb
jb
pop
pop
push
push
or
ds
inc
mov
ret
sbb
push
test
shlb
dec
cltd
or
fnstsw
dec
dec
rol
jl
ja
in
xchg
sarb
leave
imul
call
shl
xor
xor
push
jne
ret
fnstenv
jbe
rolb
jg
cmp
mov
lds
lret
ljmp
pop
test
out
sbb
ss
xlat
mov
inc
cmpsl
xchg
pop
into
cld
out
loopne
cwtl
sub
push
or
or
sub
out
in
push
not
pop
add
and
inc
lds
jecxz
jno
sar
cs
dec
add
xchg
addr16
sar
test
popf
jp
pop
adc
out
paddb
bound
insb
inc
xchg
loope
fimuls
xor
sbb
mov
add
aam
popl
out
mov
fisttps
andb
fldenv
aam
out
lea
rcl
adc
sub
retw
push
sub
add
pushf
adc
adc
test
lahf
ret
sub
cmpsl
data16
imul
fwait
inc
out
inc
mov
mov
inc
icebp
add
int3
ret
add
push
push
enter
addr16
mov
dec
jecxz
aam
and
fcompl
pop
loop
mov
lcall
inc
out
xchg
pop
dec
lods
sub
fwait
arpl
add
push
inc
mov
push
movzbl
mov
xchg
test
pusha
repnz
jle
data16
fmuls
jne
sub
mov
repnz
loope
ljmp
xchg
jbe
movsb
add
jge
cmp
xlat
adc
pop
clc
div
mov
mov
daa
xchg
cmp
jns
cmpsb
cmp
insb
xorl
popf
int3
jl
lret
stos
test
int
pop
push
nop
loop
and
xchg
adc
mov
push
jecxz
adc
jnp
pop
std
xchg
scas
aad
mov
xchg
lods
mov
jg
xchg
mov
test
lods
mov
add
lret
mov
pop
roll
push
cltd
clc
or
add
cmp
and
ror
sbb
out
outsl
lods
sbb
and
dec
rorb
inc
push
cmp
jns
mov
mov
sub
mov
mov
cmp
cmp
mov
cmpsb
out
or
push
faddl
xchg
xlat
stc
scas
xchg
mov
orl
pop
data16
mov
in
adc
loopne
fsts
repz
lods
daa
ja
sub
jnp
push
movsb
dec
inc
mov
leave
mov
inc
cwtl
xchg
dec
leave
insl
inc
movsl
lods
xchg
sub
jge
notb
cmp
and
sub
iret
sub
jp
fdivs
data16
inc
sarl
or
cmp
sub
xor
xlat
int3
inc
sub
pop
and
push
int3
adc
cmp
add
push
mov
and
mov
in
mov
imul
adc
lods
into
mov
arpl
pop
xlat
xchg
or
aam
fcmovnu
jl
out
mov
leave
xlat
xchg
cld
js
imul
pop
or
je
cmp
pop
ljmp
loope
cmp
into
and
xor
dec
xchg
stc
fs
dec
testb
sbbb
dec
push
mov
iret
pop
push
int3
push
out
jg
loop
xchg
cmp
push
aad
outsl
and
sub
mull
cmc
mov
inc
push
cmp
inc
sub
outsb
leave
or
ss
rcrb
fistpll
pop
call
inc
mov
xchg
ret
rcrl
adc
push
pop
aad
int3
fadd
sahf
mov
ficoml
bound
push
ss
in
lds
imul
cli
mov
xchg
fisttpll
jne
and
addb
xchg
xchg
aas
pop
pop
orb
scas
jge
fs
mov
js
sbb
or
std
or
lahf
ds
inc
push
adc
scas
test
fstpt
sbb
rcrb
sti
fmuls
dec
dec
or
dec
cmpsb
sub
imul
push
movsb
ret
leave
pop
call
out
aad
je
dec
in
mov
rcrb
mov
mov
sbb
push
mov
cmp
pusha
fwait
push
loop
pop
pop
push
inc
adc
outsb
pop
lret
add
gs
in
cli
popf
inc
sub
aaa
shl
ja
mov
jl
outsl
scas
fs
or
out
out
dec
aam
mov
aad
xchg
pop
inc
mov
fwait
dec
ret
aad
inc
dec
xor
ss
rcl
inc
or
cmpsl
xchg
pop
mov
filds
add
pop
arpl
and
js
dec
or
popa
xchg
jecxz
shr
xchg
stos
les
inc
mov
mov
dec
or
inc
in
push
es
cwtl
scas
dec
xchg
lret
mov
lea
jnp
mov
ret
xchg
push
pop
inc
pop
sbb
aam
or
int3
clc
aaa
mov
jle
xlat
inc
fdivr
lret
inc
lahf
fnstenv
and
aas
hlt
cmpsl
push
xchg
loop
pop
out
push
int
addr16
pusha
push
lods
xchg
dec
cmp
mov
sti
stos
mov
inc
out
rorb
or
fiaddl
add
je
hlt
dec
and
rcll
bndstx
add
into
jbe
mov
fimuls
test
scas
push
inc
in
xlat
pop
and
imul
push
aam
ja
fiadds
stos
push
add
iret
jg
xor
add
xlat
mov
or
stos
in
push
shlb
xor
or
inc
mov
pop
xlat
push
mov
and
fcom
or
lret
dec
imul
mov
dec
out
inc
jg
dec
sbb
pop
sahf
repnz
sub
dec
jle
jg
mov
cwtl
adc
jnp
push
or
icebp
fdivs
or
dec
out
jl
out
mov
aas
addr16
inc
jp
lds
rorb
movsl
imul
es
cmp
pop
les
leave
mov
cmp
data16
mov
or
sub
pusha
lahf
fcmovnbe
cli
roll
pushf
rcl
mov
mov
xchg
call
adc
roll
mov
cmpsl
clc
mov
into
cld
and
cmp
or
fnsave
xchg
inc
adc
add
jno
add
ds
aas
pushf
mov
add
sbb
setbe
fmull
adc
adc
xchg
mov
push
xlat
jne
fildl
subb
xor
sbb
sarb
adc
repz
dec
jo
jae
sarl
add
aad
xchg
dec
out
insl
lret
in
sub
pop
adc
dec
xchg
pop
pop
add
addr16
loopne
add
sbb
and
fcmovb
jns
jb
adc
aaa
xchg
testb
shl
lahf
int
cmc
test
dec
sbb
cmp
in
cli
adc
fstpt
insl
add
lahf
dec
xor
out
lret
inc
push
xor
add
dec
fcmovb
xor
lds
xor
add
jl
sahf
mov
or
inc
cs
sbb
push
pop
add
inc
mov
icebp
popf
sub
or
jp
fsubr
sub
cmc
je
std
and
icebp
push
or
cs
push
rcll
orb
daa
mov
push
iret
add
fcoms
jmp
jns
lahf
and
dec
mov
call
and
sahf
jnp
fsts
inc
pop
dec
mov
cmp
das
mov
xlat
ret
xchg
inc
dec
push
sub
xor
rcrl
sub
mov
icebp
push
fsts
sub
in
or
lahf
pop
shlb
pop
lret
cmp
mov
add
xchg
in
or
mov
clc
mov
or
lods
cmc
push
inc
dec
rorb
iret
pop
push
mov
or
stc
xchg
loop
inc
xchg
xor
sub
out
fcmovnu
mov
cmp
scas
xor
out
stos
and
add
in
loope
dec
pop
inc
xor
mov
into
lret
pop
push
repz
lret
push
pop
cmp
clc
lea
cmp
cld
inc
inc
sub
adc
push
enter
xchg
sbb
sub
sub
push
mov
out
cld
xchg
sahf
pop
or
mov
jmp
cmp
xlat
push
push
mov
daa
push
xor
lret
mov
fs
add
test
jnp
sub
addr16
into
jmp
inc
sbb
test
or
or
xchg
pop
lock
sub
sbb
mov
out
jmp
mov
pop
bound
inc
dec
dec
divl
ljmp
arpl
fistpl
push
sub
dec
scas
cli
push
lods
daa
sub
and
sbb
mov
pop
mov
out
mov
cmp
xor
aad
movsl
popa
lock
sbb
fs
pop
dec
xchg
jns
xchg
and
popf
jle
cmc
testl
lock
sub
inc
dec
jl
pop
lods
mov
dec
cmp
pop
and
pop
hlt
cltd
fs
int
stc
dec
pop
sbb
das
les
sub
or
pusha
mov
daa
out
shlb
in
sahf
xor
int
test
mov
push
and
imul
repz
stos
push
xchg
mov
add
ret
movsb
lds
mov
jno
cmp
or
jne
cmpl
dec
xchg
mov
filds
jo
sbb
test
inc
in
scas
clc
stos
pop
repz
cmp
and
into
out
aad
add
punpckldq
cmpsb
or
int3
mov
icebp
les
nop
push
pop
adc
and
ljmp
out
pop
sub
lods
subl
sbb
push
dec
mov
push
dec
stos
pop
jae
fdivrs
sbb
stos
clc
cmc
push
loop
cmp
mov
push
jae
bound
aam
jno
fwait
mov
andl
pop
lods
jp
adc
pop
lret
push
jg
xor
mull
adc
mov
out
xchg
dec
pop
out
in
fmuls
push
and
lods
leave
icebp
jge
lcall
sub
in
aad
sbb
ficompl
aas
push
mov
fs
dec
addl
enter
jge
neg
mov
mov
jne
lcall
inc
mov
jbe
mov
faddl
test
gs
outsl
pop
push
jp
and
stc
stos
cmpsl
iret
jno
test
sbb
mov
push
nop
call
fs
push
dec
mov
iret
enter
cli
je
mov
pop
rcl
fwait
pop
lods
push
jge
jl
add
or
clc
xchg
insl
sbb
xchg
enter
inc
inc
loopne
cld
int
idiv
icebp
jno
pop
push
ljmp
insb
int3
mov
mov
lods
jbe
and
test
mov
inc
es
movsl
push
push
outsl
lret
jns
or
pop
dec
cld
clc
inc
insb
cmp
fnop
dec
imul
scas
pop
cwtl
or
inc
movsl
dec
sbb
aad
mov
inc
dec
lret
int
jp
test
xchg
mov
test
sub
je
shlb
cld
ds
jbe
sub
rclb
sbb
pop
aad
rorl
and
add
add
jle
rcl
sub
pop
out
mov
aam
mov
fidivl
push
mov
push
inc
jg
ficomps
out
xor
sbb
push
rorl
adc
lcall
mov
push
out
into
fwait
push
pop
das
mov
dec
pop
in
dec
adc
mov
jo
inc
xor
mov
lea
push
outsb
xor
movl
cmp
xchg
insb
outsb
subl
lret
rorl
test
mov
push
mov
imul
add
push
pop
dec
xchg
adc
and
pusha
mov
movsb
inc
mov
xor
sar
mov
cmpsb
lcall
outsb
call
test
push
jge
mov
mov
out
gs
mov
jg
sub
jno
xlat
fwait
lea
xor
mov
cmp
out
lds
xlat
stos
inc
jge
aam
sahf
mov
adc
and
dec
jb
int
jne
enter
leave
inc
dec
mov
mov
jb
cltd
roll
or
push
and
icebp
mov
vpcmpeqw
add
aaa
movsl
mov
mov
jle
xchg
mov
jmp
xlat
ret
lahf
adc
dec
or
rcl
push
fs
push
mov
sar
std
cmp
pop
cmp
inc
cmp
cmpsl
repz
lcall
ja
stos
in
dec
push
jge
and
pop
dec
sahf
sbb
push
scas
mov
aas
sbb
mov
mov
and
and
pop
outsl
sahf
mov
sbb
mov
xor
pop
ret
jne
inc
jbe
decl
aas
dec
out
sbb
dec
pop
jne
fsubrl
jg
sbb
inc
aam
andb
jge
in
inc
pop
popa
adc
fdivrl
daa
stos
pop
or
jge
push
aaa
std
cld
sbb
insb
out
and
xor
jno
enter
testl
imul
push
mov
jle
jmp
test
test
outsl
fbstp
notb
movsl
popf
or
sbb
lods
pop
mov
mov
mov
enter
arpl
cmp
dec
test
aad
and
lods
subl
aas
sub
cmp
dec
mov
pop
jb
lret
lret
push
paddd
pusha
insl
mov
fcmove
cmp
jmp
subl
arpl
jmp
sbb
push
fnsave
das
mov
subl
outsl
pop
adc
cmpsb
ja
or
xchg
call
xchg
out
aad
loope
inc
scas
jae
push
dec
pop
adc
int
fwait
mov
mov
jo
sbb
es
xor
xlat
sti
js
jo
shlb
cmp
mov
movsb
add
scas
add
push
lock
lret
and
test
pop
push
out
adc
jbe
cmp
out
int
ror
push
mov
push
test
dec
push
jp
mov
fdivs
adc
jg
loop
xchg
adc
js
aam
dec
push
dec
and
addl
push
lods
hlt
out
inc
leave
int
pusha
rorl
cmp
std
mov
arpl
jno
sub
ror
test
push
pop
pop
mov
les
in
or
movsl
cmpsl
sbb
inc
sbb
cltd
xchg
popf
sub
push
adc
into
push
inc
mov
push
jne
xchg
ljmp
jne
adc
jl
andb
fcmovb
xchg
adc
cmp
xchg
out
into
rcrb
sbb
jbe
push
pop
into
cmp
xor
mov
into
aad
bound
sub
push
iret
sbb
push
mov
jp
push
dec
mov
into
insb
loopne
inc
jl
cmp
lea
xchg
stos
into
mov
lahf
xchg
xor
in
jle
mov
imul
popa
ss
add
xchg
inc
out
jge
std
decb
cmp
cmpsl
jb
in
mov
sbb
shll
je
aad
mov
repnz
push
jne
jl,pt
stos
inc
aaa
test
add
mov
arpl
popf
mov
or
repnz
pusha
test
ficomps
das
mov
ret
sar
pop
push
inc
roll
and
je
out
nop
lods
cmpsl
in
xor
add
add
mov
jecxz
sbb
or
dec
aas
and
sub
in
xchg
dec
add
adc
int3
outsb
dec
lock
add
ja
mov
ret
cmpsb
dec
inc
mov
push
push
insl
shl
mov
aaa
in
dec
pop
add
jp
rcl
sahf
inc
jg
and
push
xchg
jge
adc
xchg
adc
adc
insl
xchg
hlt
stos
sti
inc
fcomps
cmp
aas
pop
into
movsl
xchg
xchg
jl
faddl
rcrl
push
sub
fs
push
jmp
in
out
inc
push
repnz
sbb
int
add
sub
test
lcall
or
and
xchg
rclb
xchg
ret
mov
adc
cmpsb
pop
testb
loopne
add
mov
xchg
sti
dec
xor
push
arpl
mov
mov
ret
enter
mov
adcl
rorl
pushf
push
bound
popf
jp
imul
push
inc
dec
add
jle
mov
pop
add
mulb
sbb
mov
scas
cli
xor
add
lods
pop
movsl
adc
mov
loopne
mov
inc
sub
ss
pop
xchg
rcr
jo
cmp
xchg
roll
push
mov
cwtl
mov
inc
mov
js
sbb
out
mov
pop
dec
xchg
int
out
mov
test
mov
ljmp
or
jmp
sti
movsb
enter
pop
push
mov
push
push
mov
sbb
fstl
push
in
scas
enter
jnp
fistpll
dec
push
mov
and
divl
xchg
cli
cltd
mov
mov
into
lock
jne
jns
lret
lea
scas
push
hlt
cmp
pop
jne
jg
pop
int
add
add
bound
or
xor
cmc
ret
out
test
adc
pop
push
mov
or
and
sbb
rorl
pop
mov
xor
or
sub
ds
or
add
insl
orl
sub
mov
test
ljmp
mov
popa
in
lea
lcall
or
sbb
adc
iret
lahf
cli
arpl
inc
jp
sbb
daa
cs
test
add
fstpt
add
mov
push
add
jmp
rcll
push
jg
popa
iret
mov
jge
xchg
jecxz
lds
lock
aad
adc
rorb
ret
aas
add
scas
out
out
fstps
mov
dec
pop
and
cmp
aad
out
es
push
loopne
pushf
stc
cmpsb
fdivs
mov
or
push
aaa
sub
jmp
xlat
adc
xor
adc
and
jno
aam
mov
push
push
decl
mov
mov
jns
push
push
jo
inc
cli
adc
mov
adcb
int
cmp
iret
fsubs
jmp
outsl
jbe
dec
sbb
xor
test
cmc
lcall
and
lds
jmp
mov
xchg
pusha
jp
mov
shl
cmp
hlt
jns
sarb
movsl
scas
adc
jle
xchg
dec
cmpsb
fcom
popf
sbb
or
add
cltd
xchg
into
jecxz
xor
push
jbe
sahf
mov
adc
or
out
popa
mov
push
adc
jns
mov
xchg
and
and
push
dec
mov
sahf
xor
ss
and
mov
mov
and
lret
out
xchg
mov
shrb
pop
jno
adc
into
sarl
cs
mov
and
or
out
sub
xlat
xchg
sbb
jne
xor
push
cmp
mul
ret
xorl
jp
xorb
mov
push
sub
pop
xchg
in
andl
shll
js
clc
iret
sub
flds
add
jae
cli
xlat
pop
inc
outsb
ss
xchg
in
jno
rcrl
adc
nop
xchg
xor
dec
cltd
addr16
add
cwtl
jne
mov
fiaddl
iret
push
push
dec
jmp
jno
lahf
add
aaa
pop
mov
es
and
in
enter
lahf
jl
out
shlb
mov
adc
xchg
jle
xchg
and
push
dec
pop
enter
arpl
outsl
loopne
ds
pop
div
fdiv
bnd
lods
jge
mov
xchg
popf
add
cs
loopne
xor
das
lods
ret
fisttps
and
push
pop
push
stos
popf
xchg
out
aad
adc
into
rcrb
arpl
shll
aaa
mulb
dec
nop
sbb
mov
push
xrelease
jg
mov
mov
arpl
push
mov
fcmovbe
ret
adc
cmp
leave
ja
movsl
push
std
mov
dec
xor
sub
pop
jmp
lret
add
cmp
es
sub
xchg
cmp
adc
jmp
cmp
movsl
test
or
sub
mov
push
and
leave
aam
push
int
sarb
cld
aad
or
stc
sub
daa
inc
or
rcl
repz
lods
imul
xchg
push
push
cmpsb
mov
rcl
outsb
mov
ficomps
and
mov
hlt
and
mov
xchg
inc
repz
sub
mov
fsubs
test
push
or
push
lock
adc
lea
dec
push
and
ds
xchg
les
push
jns
add
outsl
aad
rcr
pop
pusha
cmc
das
aam
ss
xor
ja
push
aas
pop
divl
jle
into
xchg
mov
dec
cmpsl
stos
mov
ret
push
adc
gs
outsl
xchg
iret
xchg
cmpl
lahf
and
sbb
cmc
mov
pop
adc
sarb
lahf
or
jp
mov
cmc
add
roll
pushf
pop
mov
lcall
inc
or
inc
lock
adc
and
adcl
outsl
push
imul
out
lods
clc
mov
and
sub
xchg
roll
mov
inc
inc
ror
ds
movsb
outsb
dec
jecxz
dec
leave
or
ret
adc
mov
xchg
jnp
ficompl
mov
popf
shlb
mov
cmp
xchg
mov
mov
mov
imul
out
jns
or
repnz
inc
es
cmpsb
out
je
insl
iret
sbb
or
rolb
cmp
fwait
enter
add
pop
aam
jl
cli
push
push
aaa
adc
jo
orb
mov
or
sbb
ret
or
faddl
mov
inc
repz
xor
lret
push
mov
out
inc
push
jp
sarb
in
xor
aad
pop
xchg
lret
pop
ja
xchg
add
lret
sbb
sbb
fwait
movl
je
pop
add
mov
xor
ljmp
jmp
roll
ret
jb
das
in
xchg
aam
xchg
aad
gs
or
push
cmp
aam
adc
and
cmp
inc
out
sbb
aas
stos
jae
or
jo
mov
xlat
push
cwtl
or
pop
cmp
dec
aaa
mov
sub
pop
mov
cltd
int3
aam
adc
mov
lods
test
or
aas
push
lret
jns
sti
insl
loopne
pop
mov
das
mov
mov
sub
push
push
lret
cs
in
or
iret
inc
inc
xchg
ret
mov
jo
jne
mov
pop
dec
dec
rorb
mov
sbb
sub
mov
in
sti
inc
or
into
popf
fwait
mov
mov
add
dec
adc
pop
ret
stos
adc
and
sbb
dec
jbe
add
aam
jmp
bnd
xlat
cmpsb
sbb
lods
aam
aam
insb
add
cld
jns
mov
movsl
dec
mov
sub
fdivrl
divl
xor
setle
fidivl
push
leave
jmp
repz
pop
test
xor
cmp
push
add
mov
add
lret
repnz
call
jl
adc
data16
dec
into
in
xor
xchg
out
lock
arpl
push
push
lret
xchg
lret
je
jnp
rol
lea
xor
imul
mov
jne
jge
into
into
dec
decl
and
xor
stos
mov
lods
lahf
mov
test
dec
jo
jmp
xor
test
xchg
nop
sub
mov
dec
xchg
mov
movsl
xchg
sbb
sbbl
xchg
xchg
pushf
jae
ret
sbb
sti
int
sbb
sti
mov
dec
dec
popa
mov
ss
mov
pop
xchg
inc
stos
ja
push
inc
adc
ret
lods
insb
pop
popf
aad
push
cmpsb
add
sbb
mov
in
push
loope
icebp
inc
and
cmp
cmp
cmpsl
xor
in
cmp
inc
adc
jle
pop
lret
mov
inc
lea
jecxz
mov
mov
cmp
aaa
dec
pop
mov
pop
movsl
dec
adc
push
mov
bound
in
dec
lahf
popf
test
pop
ds
push
fsub
outsb
push
mov
into
adc
test
pop
or
mov
mov
addr16
mov
out
jae
xchg
stos
jne
pop
cmp
and
out
pusha
mov
outsl
cld
adc
enter
ss
sti
sbb
fiadds
jnp
pop
orb
loope
push
mov
inc
jns
push
sbb
xchg
pop
loop
les
and
pusha
ret
mov
scas
stc
jbe
or
test
inc
ja
jecxz
push
imul
loope
add
xor
jbe
jo
sbb
out
insb
aam
and
lret
into
sarb
cmp
sub
mov
scas
jne
and
dec
ds
mov
aas
into
xchg
mov
push
xor
push
fstpl
inc
das
xchg
jp
xor
push
lock
or
xchg
xor
jne
out
cmc
xchg
int3
movb
repz
sub
add
into
xchg
pop
mov
mov
call
push
sbb
xor
push
pusha
fidivs
cmp
mov
mov
insb
mov
cli
out
push
sbb
in
mov
push
jns
out
bswap
es
arpl
lods
xchg
add
call
and
int3
into
mov
mov
aam
xor
lcall
or
dec
leave
or
das
mov
cmp
and
icebp
lret
outsb
xor
test
xchg
push
mov
pushf
mov
sbb
fstl
pop
mov
jnp
lds
iret
xchg
rorl
sbb
test
or
cmp
mov
outsl
xchg
addr16
imul
jp
imul
ja
stc
xlat
push
ret
or
cld
addr16
pop
repnz
mov
mov
push
push
enter
cmp
rclb
je
ss
sub
pop
nop
push
insb
mov
cwtl
icebp
shrb
sbb
std
insl
in
imul
mov
cmpsb
into
daa
outsb
dec
lahf
add
lret
xchg
jp
xor
mov
repnz
push
out
sbb
add
mov
aas
sahf
jmp
sbb
mov
loop
jle
movsb
stc
leave
mov
inc
lahf
paddq
mov
add
and
lret
push
aas
lds
and
xchg
mov
jbe
mov
jo
and
fstpl
cwtl
scas
pop
pop
and
xchg
mov
cmp
lret
lds
movsl
ljmp
xchg
adc
cmp
jl
jg
mov
daa
add
pop
xchg
xchg
not
stos
add
sbb
xor
xor
call
mov
and
xor
jae
mov
leave
inc
cltd
ss
clc
push
es
dec
mov
mov
xor
or
in
les
adc
jle
xor
adc
mov
adc
jne
add
xchg
or
xor
js
adc
leave
fbld
xor
inc
fcmovnbe
outsl
fidivrl
dec
jge
xor
fdivr
and
outsb
cmc
cld
rcl
divl
stos
mov
push
aas
push
nop
arpl
adc
cli
imul
pop
pop
and
into
xor
sarb
js
push
mov
loopne
fcompl
test
or
xchg
arpl
dec
sub
pop
mov
mov
cltd
int
pop
cs
in
movsl
cs
inc
rorb
dec
div
outsb
push
jecxz
xchg
sbb
into
xchg
gs
cwtl
mov
repz
mov
syscall
ja
mov
rorl
dec
push
lods
std
into
sub
pusha
adc
xchg
loop
shl
mov
push
lea
addr16
call
int
roll
mov
in
adc
rcrb
imul
ja
out
gs
or
push
sbb
adc
insl
and
gs
push
js
arpl
loop
test
cmpsl
ja
jo
ljmp
ds
ret
pop
sub
sbb
inc
add
push
mov
jno
fcom
inc
xchg
dec
out
inc
cli
out
cwtl
aad
and
xchg
jns,pt
pop
push
mov
repz
inc
push
sarl
sar
adc
and
mov
test
int
sbb
lret
or
inc
call
jge
mov
aas
mov
addr16
xchg
scas
mov
aad
ret
in
dec
jl
push
shlb
mov
mov
add
push
sbb
adc
adc
sbb
insb
popf
js
dec
into
or
lea
jne
pusha
cwtl
lret
data16
out
mov
inc
or
lret
lods
inc
sub
outsb
loopne
fcoml
sub
add
xor
jns
mov
sbb
mov
mov
push
cmpsl
shlb
fadds
push
adc
rcrb
mulb
int3
pop
loopne
jecxz
fnstsw
add
int3
jl
out
and
adc
repnz
nop
dec
and
stos
ja
pop
call
dec
jno
rcl
mov
xchg
push
movsb
in
hlt
in
into
xchg
outsl
popf
xchg
je
cmp
inc
sbb
inc
push
lea
lahf
movb
and
bound
pop
jae
dec
jnp
fisttps
inc
mov
xlat
out
aam
add
jno
or
ss
sti
mov
bnd
int
sub
popf
xchg
pop
lea
loop
mov
mov
outsb
idiv
gs
sti
pop
push
lret
ss
daa
movsl
push
mov
movsb
cmpsb
push
sahf
test
ret
mov
xchg
ret
orb
xlat
test
cmp
pop
xchg
fisubs
call
or
cs
repz
lds
adc
jge
mov
add
add
mov
dec
cmpl
dec
out
xor
pop
fmuls
out
in
jg
fcmovnu
inc
and
jmp
aas
xchg
imul
or
jns
idivb
inc
cs
popf
ss
outsl
insb
jo
or
push
cli
jmp
pop
ss
jge
mov
and
mov
cmc
mov
gs
inc
add
xchg
pop
sbb
mov
lcall
pushf
or
stos
bound
jns
sub
xchg
xor
insl
ja
jle
lock
call
mov
and
jge
mov
test
out
mov
lods
lret
inc
pop
fmulp
dec
popf
pop
daa
mov
loopne
push
fcomps
inc
mov
xor
out
cltd
add
jmp
push
sub
leave
aam
mov
xchg
xchg
push
push
push
loope
loopne
inc
stc
int3
mov
call
push
inc
lods
fcmovnbe
insl
push
es
js
pop
roll
jno
icebp
add
pop
rcll
lahf
in
sbb
ja
mov
add
xor
ret
mov
jne
add
push
mov
test
lret
xor
aam
adc
mul
jb
push
rorl
mov
into
inc
push
mov
shlb
jbe
inc
stos
leave
jmp
ss
xor
out
test
xchg
adc
jg
fnsave
cmp
adc
fs
stc
sub
add
jo
jp
cld
mov
dec
pusha
cmpsl
push
add
dec
in
enter
lds
xchg
lret
ret
push
lock
adc
pop
adc
je
int3
in
dec
and
mov
push
and
in
mov
loopne
or
xor
jge
mov
out
xor
jne
mov
enter
sub
addr16
movsb
sub
push
sbb
or
cs
xchg
mov
adc
rcrb
sub
adc
into
xchg
pop
sahf
and
adc
xchg
stos
inc
and
dec
cmp
adc
in
int3
jb
movsb
iret
loope
and
loop
les
push
ret
fildl
pop
sahf
std
icebp
push
outsl
fs
or
hlt
xorl
cmp
adc
xor
popf
cmpsb
sarb
inc
lcall
xchg
jae
jecxz
push
movsb
or
jmp
add
in
mov
inc
cld
loopne
loopne
mov
ja
jo
and
mov
test
sub
add
sbb
data16
mov
in
or
push
imul
jmp
test
jmp
enter
sub
pop
mov
stos
xchg
xor
push
ja
repnz
cmp
cmp
fdivr
scas
push
into
xor
fcmovnbe
adcb
dec
jnp
arpl
loopne
xor
and
test
jbe
aas
std
ficomps
cli
test
add
inc
outsl
aam
fisubl
dec
sub
sbb
jmp
mov
mov
movsb
ret
xchg
rcl
mov
and
xchg
inc
adc
xor
dec
addl
or
adc
pop
push
pushf
mov
dec
lea
dec
xor
addb
mov
es
xchg
fcomip
xor
icebp
inc
fcomp
mov
push
movl
into
movsl
sbb
fcmovnbe
pop
cmp
push
xor
dec
icebp
out
mov
lret
in
loopne
popa
dec
jae
or
xchg
xchg
dec
ret
sub
rcr
inc
mov
or
fidivl
out
xchg
jp
mov
fistl
sub
call
cmc
mov
lock
insl
pushf
andl
or
pop
clc
sbb
add
push
jnp
cwtl
lods
mov
mov
mov
loop
lcall
pop
or
int3
fiaddl
rorl
inc
push
inc
xor
into
lods
fcmovnb
dec
jmp
push
test
push
inc
mov
orl
out
and
and
jns
in
mov
pop
sub
mov
stos
sbb
dec
adc
addr16
xchg
mov
pop
dec
cmp
lret
call
xchg
hlt
dec
dec
push
ja
sbb
mov
sbb
dec
aaa
push
mov
add
xor
sbb
ret
out
add
filds
insl
nop
mov
cmp
sbb
mov
mov
cmc
rcr
push
out
push
fbstp
pop
rorl
aas
sub
shr
mov
cmpl
dec
loope
cld
fcomps
cli
push
add
scas
sbb
pop
call
dec
mov
mov
lahf
jp
xchg
push
mov
xchg
into
dec
push
jne
andb
ds
add
sbb
mov
or
push
lret
fcompl
mov
icebp
and
add
pop
mov
std
aam
lret
jns
pop
xchg
push
stos
adc
xor
mov
jbe
sbb
lahf
mov
arpl
inc
std
fwait
iret
cmc
xlat
aas
push
mov
xchg
test
ret
and
jne
je
xor
jle
scas
inc
rcr
iret
pop
mov
cli
and
add
mov
jns
dec
sub
push
shrb
popf
inc
sub
mov
or
gs
je
dec
jmp
lds
cmc
mov
dec
rcl
mov
lock
cmpsl
ds
movb
iret
loope
jbe
xchg
sbb
mov
cwtl
cmp
and
mov
aad
scas
dec
int3
push
loope
xchg
adc
sub
lock
pusha
inc
push
cltd
scas
sar
mov
jg
xchg
xchg
add
mov
inc
inc
hlt
ret
dec
push
je
and
popf
lcall
fdivl
shll
or
fwait
aad
in
push
pop
jns
or
jbe
stos
rclb
ret
sub
out
pop
add
pop
push
sti
xchg
pop
or
push
int
aam
aad
mov
or
fs
frstor
std
inc
jno
jg
dec
inc
cld
movsb
clc
lods
mov
in
mov
xor
xchg
ret
into
dec
ja
addr16
into
mov
xor
jo
cld
into
into
sti
mov
sbb
and
add
int
fdivr
add
cmp
test
mov
mov
out
mov
mov
fiaddl
xor
sub
add
sbb
push
les
fsubrs
xor
in
in
cmp
mov
jmp
xor
outsl
xor
shr
aad
cmp
pop
add
pop
or
cmc
or
popf
out
aad
mov
hlt
jne
add
js
xor
and
test
dec
rcll
in
dec
mov
jge
xchg
mov
shll
xor
xchg
sub
push
fucomip
je
lret
dec
lret
cmpb
xor
lret
pop
jle
cmp
xlat
jbe
std
aad
into
dec
dec
and
mov
mov
mov
sbb
push
loope
and
mov
fimuls
dec
pop
dec
dec
adc
pop
xchg
lcall
push
and
sub
inc
sbb
xchg
out
sbb
inc
pop
enter
stc
daa
push
jo
xchg
cwtl
test
dec
int3
mulb
inc
das
enter
leave
loopne
mov
into
dec
xor
jno
mov
mov
sbb
sub
push
pop
jb
ja
xchg
lock
jmp
lods
pop
addr16
mov
or
xchg
adcb
scas
bound
outsl
lret
sahf
test
push
push
outsb
mov
repnz
adc
cmp
leave
sbb
cli
js
cmc
adc
sahf
fadds
dec
xchg
xlat
fiaddl
outsb
imul
dec
xchg
cmpsl
movsb
mov
imul
pushf
jmp
cmp
add
mov
jecxz
pop
in
pop
sub
lods
into
pop
data16
inc
fcomps
scas
stc
cmpb
daa
pop
mov
xchg
sbb
js
loopne
aam
xchg
push
sti
cmp
push
lret
mov
popa
cmp
xchg
xchg
mov
std
xchg
xchg
movsl
xor
sub
xor
orb
xchg
mov
test
xchg
ds
pcmpgtb
cmp
mov
jno
adc
mov
addl
stc
hlt
sub
pop
sbb
sti
mov
jge
in
cld
jne
and
mov
inc
mov
jmp
int3
in
and
stos
mov
pop
xchg
test
fldl
mov
xor
es
repz
cmp
mov
enter
cli
jo
pop
cmp
push
jge
inc
mov
jne
push
ds
idiv
sar
pop
lcall
movsb
pop
js
adc
mov
pop
movsl
pop
rcrl
ret
pushf
pop
into
sub
scas
jne
mov
out
mov
cmp
cli
aaa
jne
int
pop
xchg
scas
jae
es
psubsb
sub
lds
loope
mov
add
shlb
push
insl
jno
insb
in
repnz
dec
test
cwtl
add
int
leave
outsb
dec
sub
ds
in
push
into
mov
sbb
or
movsl
mov
xchg
pop
in
push
xor
aaa
add
nop
adc
js
daa
insl
xchg
adc
imul
xchg
arpl
push
sbb
push
leave
mov
lcall
jg
jge
bound
jecxz
xor
aam
xor
mov
int3
je
lods
cmp
dec
xchg
mov
scas
jns
cmpsb
idivb
jg
xor
aas
movb
adc
inc
jne
inc
add
loopne
gs
inc
out
or
rcl
mov
lods
cmp
inc
jmp
test
mov
icebp
pop
shlb
out
xchg
mov
hlt
testl
and
lret
mov
outsb
insb
xor
ljmp
insl
mov
push
or
mov
ret
out
popf
lock
fs
inc
mov
repz
dec
mov
push
inc
inc
ret
mov
xchg
pop
jle
jp
sub
push
cs
xor
pop
cmpsl
push
rcrl
lret
lods
xor
out
adc
ret
in
and
jno
cmpb
popa
sbb
std
fstpt
ja
out
inc
add
xchg
movsl
jno
xchg
inc
cmp
cmpsl
ret
loop
out
mov
sbb
mov
push
movsl
jns
lcall
stos
mov
push
dec
in
gs
out
insl
outsb
pusha
jbe
jno
fnop
in
in
pop
or
jg
popf
out
dec
cmp
push
rcr
dec
and
mov
jo
cmp
jbe
add
movsb
into
or
xlat
aad
mov
push
push
les
and
into
jecxz
test
data16
xchg
pop
jne
cmp
in
jmp
mov
mov
std
xchg
jecxz
pop
addr16
dec
aam
sti
inc
lret
out
mov
test
mov
ds
or
adc
popf
out
dec
xchg
loope
es
sub
push
out
mov
movsl
push
xchg
int3
lret
adc
inc
jbe
jno
rcr
sub
sub
sbb
mov
je
jo
dec
rorl
test
xor
xchg
cmp
mov
loopne
cmp
pop
xchg
adc
push
and
repnz
clc
xchg
popf
int3
mov
jbe
inc
fbld
int3
movsl
mov
daa
nop
testl
lods
mov
sbb
cmovno
jnp
xchg
dec
push
push
std
out
jne
cltd
rcll
add
or
testl
pop
push
clc
jnp
add
push
aaa
mov
int3
cltd
mov
loopne
inc
test
jnp
xchg
sbb
orb
cmc
mov
popf
push
sbb
mov
sbbb
dec
push
out
mov
loop
addr16
jo
push
xor
xchg
or
sbb
shlb
mov
jne
fidivrs
xchg
int3
out
add
adc
mov
sub
loop
outsl
add
lcall
es
cmp
mov
scas
jbe
cmc
xor
push
std
ret
imul
lret
push
mov
aad
jp
ja
repnz
jmp
andl
in
dec
faddl
mov
jmp
or
loope
jge
sahf
lea
ja
out
dec
addr16
adc
push
and
xlat
jno
rclb
or
push
cltd
pop
mov
mov
xchg
mov
and
sub
int3
xor
xor
pop
aaa
rolb
xchg
into
out
scas
fnsave
pushf
xchg
and
and
inc
xor
dec
js
push
sbb
shlb
push
cmp
xor
nop
rcl
xchg
xchg
cmpsb
dec
stos
mov
enter
mov
adc
mov
cmp
cs
movb
into
data16
push
jmp
xor
mov
shl
lods
std
mov
jne
icebp
mov
out
lock
das
jbe
int3
jmp
into
loop
push
or
dec
popa
xchg
test
shl
ss
fadd
je
fwait
adc
cld
loope
inc
add
or
adc
mov
xlat
int3
test
adc
jo
repz
repnz
or
pop
das
jp
xchg
adc
jae
ret
dec
xchg
cmp
in
nop
mov
and
dec
ror
sub
ret
mov
inc
movsl
out
clc
daa
sub
jl
mov
scas
bound
jne
sarb
insb
add
or
xor
jo
bound
cmpsl
or
movsl
shll
inc
jns
xchg
je
in
add
das
addr16
push
rclw
jl
xchg
xchg
xor
mov
cmp
adc
mov
aad
lock
add
sbb
mov
test
mov
and
lea
push
sub
gs
or
es
movsb
pop
xchg
out
iret
and
dec
mov
push
ds
sub
out
xor
jns
lods
pop
dec
test
push
mov
xchg
cld
add
mov
aaa
ss
lcall
pushf
pop
icebp
stos
sub
data16
sbb
movsl
negl
imul
cmc
shlb
pop
dec
out
jecxz
in
jg
aaa
xchg
test
push
cmp
xchg
sub
je
mov
out
into
int
and
jg
mov
fisttpll
dec
adc
push
add
cmc
and
push
push
ja
movsl
or
pop
decl
bound
or
js
cmpsb
mov
mov
jecxz
mov
testl
xchg
lock
cli
dec
subw
sbb
out
pusha
cmpsl
pop
ror
int3
cwtl
add
arpl
jp
fdivl
inc
and
add
loop
or
mov
testb
test
cmpsb
std
out
int3
mov
movsl
pop
and
testb
cmp
dec
test
or
mov
in
insl
fisubs
jbe
push
push
mov
imul
xor
sub
inc
pusha
lahf
mov
das
push
xchg
and
aaa
shll
movsl
subb
pop
fmuls
push
inc
mov
pop
gs
rcrl
sbb
popa
sbb
add
into
push
scas
mov
mov
in
aam
cltd
xchg
push
or
sub
mov
sarb
push
dec
cmp
dec
cmp
mov
push
mov
loope
aad
iret
ret
inc
aas
jae
aad
xchg
push
and
rolb
not
out
push
fiadds
cmpsb
pushf
inc
push
sbb
fildll
cmc
lret
movsb
out
stc
ror
mov
popf
bound
mov
loope
into
push
jge
movsb
mov
es
push
adc
lods
loopne
push
sbb
or
cmp
lea
inc
jl
xchg
stos
lret
xchg
sub
mov
xchg
mov
cld
xchg
xchg
aas
jno
fstps
repnz
inc
cld
dec
dec
dec
cmp
ljmp
loope
cwtl
adc
orl
aam
and
fmulp
cmc
push
push
rcll
sbb
adc
dec
mov
cld
mov
lret
jmp
push
scas
jbe
cvtps2pd
inc
pop
ret
out
mov
xor
int
test
cld
mov
add
or
std
ret
sub
fistpl
jmp
mov
cs
sbb
fwait
jb
jbe
into
mov
jle
insb
inc
sarb
xchg
dec
int3
fwait
mov
ret
jmp
rcrl
out
mov
cmc
testb
rorb
sbb
inc
inc
scas
int3
add
or
bound
lock
stos
clc
jmp
add
sub
shrl
pop
dec
insb
ja
lahf
scas
pusha
test
sbb
mov
xchg
stos
adc
mov
sahf
loope
out
push
push
ret
or
mov
frstor
mov
clc
mov
jne
fisttps
and
jle
mov
fwait
pop
int
stc
jl
lock
or
lods
inc
inc
cltd
jmp
sbb
adc
je
mov
mov
sbb
rolb
add
xchg
dec
fmul
fcmovbe
ss
fwait
cltd
cmp
stos
mov
test
jp
lahf
mov
xlat
jecxz
mov
jae
jle
clc
ja
leave
leave
sbb
xlat
addr16
mov
cwtl
sub
sahf
imul
jle
jo
cmp
in
pop
mov
xchg
iret
mov
xor
stos
lock
mov
dec
xlat
ret
enter
mov
jb
fistps
xor
rcrb
jo
stos
adc
call
cmpsl
inc
or
jle
and
push
sub
dec
mov
dec
sbb
push
mov
lahf
ja
lret
outsb
call
cmc
jecxz
out
divb
jge
lret
mov
push
inc
xor
mov
pop
jp
pusha
das
lds
popf
out
pushf
jmp
mull
incb
data16
loope
push
mov
mov
repz
xchg
mov
int3
movsl
jmp
pop
cmp
push
in
sub
dec
xchg
daa
aam
rorl
adcb
pushf
mov
or
push
int
jae
dec
jnp
jmp
fisubrs
in
cltd
sub
push
push
cmp
adc
loop
jg
xchg
ret
lret
mov
inc
outsb
outsb
lahf
cwtl
aam
scas
push
inc
call
xchg
jne
loopne
push
xor
mov
je
es
int
arpl
mov
imul
inc
outsl
std
into
adc
push
jp
jmp
xchg
push
xchg
adc
jns
shll
ja
ds
mov
cmc
test
xchg
xchg
jp
call
jns
mov
xor
adc
fldcw
mov
jne
push
push
in
xor
pop
pop
sbb
in
add
mov
repz
mov
and
dec
jne
adc
into
lret
fs
rolb
pop
cmp
test
jno
sbb
jbe
inc
or
xchg
dec
lods
rcrl
in
stos
mov
in
or
mov
bound
mov
shl
mov
cmpl
into
icebp
mov
in
pop
lcall
xchg
jns
pop
jb
xchg
push
fisubrs
cmp
lret
cmp
int
int3
iret
fstps
inc
mov
pop
pop
sub
adc
cmc
and
cmp
addr16
sti
xor
movsl
adc
add
cs
mov
adc
test
push
movsb
push
jno
push
ror
xchg
icebp
push
adc
shlb
out
mov
push
and
mov
lods
fcmovnbe
mov
in
outsl
mov
bound
pusha
push
sbb
push
icebp
into
and
pop
pusha
xchg
dec
jl
pop
inc
stos
mov
fdivs
out
jmp
jns
out
cli
dec
ds
push
or
rcl
jge
hlt
cmp
adc
push
mov
insl
cmc
cmp
xchg
jl
add
mov
mov
je
inc
inc
sub
outsb
mov
aas
loop
iret
push
adc
dec
or
push
jbe
lret
push
lcall
add
or
leave
ja
stos
dec
xchg
jne
push
add
push
push
test
stc
xchg
cmp
fs
arpl
mov
sub
xor
aas
sti
stos
jg
int3
cld
lcall
add
into
outsb
push
fadd
cwtl
xchg
adc
out
lret
int3
push
jge
imul
sub
mov
ret
xchg
xor
adc
ja
cmpsl
loope
cmpsb
rolb
inc
push
xor
cmp
lret
sbb
pop
rolb
in
mov
mov
lahf
sbb
aaa
push
loope
fidivs
adc
push
cmp
popf
sbb
inc
push
popf
mulb
call
or
pop
lea
mov
push
dec
sti
jnp
iret
mov
imul
sbb
ljmp
aam
lret
clc
in
inc
ficoms
cld
shlb
out
adc
xor
call
in
xor
pop
loopne
movsl
xor
je
inc
repnz
stc
xchg
sub
lret
and
jle
ds
mov
lret
int3
adc
add
mov
clc
jno
sub
lret
lahf
not
mov
cmp
rclb
fisubrl
dec
movsl
xchg
mov
repz
xchg
lds
adc
xchg
lret
stc
fcmovne
xor
sub
test
sbb
jnp
insb
xchg
xchg
cmp
fimuls
pop
mov
aam
pushf
pop
stos
lcall
cli
add
cwtl
repz
inc
add
fisttpl
xchg
fdivrs
pop
xorb
push
fisubrs
bound
out
arpl
cmp
movsl
outsb
mov
neg
dec
bnd
mov
fdiv
dec
xchg
fbld
xchg
stc
notl
jns
fstpt
pop
and
fst
mov
jne
fimuls
repz
fidivrl
push
js
xorb
rcrl
mov
imul
iret
addl
lret
pop
sub
adc
lcall
cmp
jne
inc
andl
aam
push
stos
imul
sti
xchg
shrb
pushf
cld
mov
lock
into
jecxz
icebp
in
clc
pushf
push
jns
lds
cmp
or
push
mov
rolb
insl
xchg
call
lea
dec
insb
fwait
dec
fnstenv
icebp
jecxz
add
cltd
lds
les
sahf
mov
cmp
and
xor
jno
in
mov
ds
mov
pop
jecxz
andl
int
fdivrl
popf
push
add
lods
fwait
cmpsb
xlat
sub
daa
call
mov
pop
frndint
push
add
addr16
imul
xchg
enter
int3
cpuid
pusha
lret
add
out
sub
ja
mov
mov
push
loopne
xor
aaa
push
fiaddl
xchg
je
mov
jne
cltd
fs
outsl
les
pop
sbb
test
sti
pop
xor
pop
push
mov
gs
fs
add
lock
pop
lret
mov
dec
movl
mov
mov
clc
out
or
push
cmp
and
add
pop
dec
jg
cmp
and
mov
outsb
ret
test
lret
insl
lret
pop
mov
jle
mov
enter
mov
clc
cmp
into
jno
xor
sub
out
bound
cltd
mov
sub
add
std
cmp
inc
push
push
imul
fwait
ds
or
jmp
test
into
mov
lcall
das
inc
sarb
mov
xchg
adc
insl
or
gs
inc
fdivrl
stos
int
xchg
mov
imul
add
outsl
fsubr
adc
das
mov
divb
inc
int
sub
mov
int3
cmpsl
dec
inc
icebp
ja
daa
mov
int
subl
mov
pop
push
adc
fisubs
lret
cmp
loop
mov
adc
jae
out
add
in
add
and
mov
xchg
pop
add
inc
test
sub
nop
cmp
xor
negb
insl
or
mov
xchg
hlt
popa
loope
push
data16
mov
jnp
std
or
rcl
imul
scas
repz
mov
out
push
out
ror
popf
and
repz
sub
xchg
aaa
dec
imul
aam
in
pop
inc
push
dec
fst
js
dec
push
roll
push
mov
pop
not
or
lock
mov
mov
ret
sbb
imulb
repz
push
bound
mov
test
test
sahf
sub
fwait
mov
push
imul
cwtl
dec
scas
pop
push
xchg
sti
mov
outsb
mov
xchg
and
das
out
mov
imul
in
dec
pushf
sub
leave
stos
pop
int3
mov
or
jp
xchg
mov
sub
mov
xor
xor
mov
out
out
xchg
cmp
mov
mov
data16
sbb
jae
out
mov
in
aad
imul
push
in
lret
push
addr16
mov
int3
test
sub
add
sarb
xchg
push
mov
aam
jae
inc
mov
or
mov
xchg
xchg
jl
add
push
out
sahf
dec
xchg
sub
sub
push
mov
loope
lods
shl
ret
push
ficomps
addr16
cld
push
cmpb
mov
jo
popf
xchg
enter
sbb
add
ffreep
jg
bndstx
cmpsb
pop
inc
ret
jo
rcrl
imul
xor
or
jae
int3
dec
push
or
jmp
je
mov
nop
leave
insb
pusha
outsl
sbb
in
outsb
xor
inc
loope
sbb
sub
fs
or
rorl
in
aam
sub
into
sbb
cmp
pop
nop
add
stos
lods
dec
jae
mov
movb
xchg
outsl
adc
push
xlat
pop
jo
or
push
imul
ja
idiv
aad
fildl
jae
cmpsl
jmp
sbb
inc
mov
popf
and
icebp
and
std
shrb
leave
push
je
pop
jbe
inc
mov
inc
cs
clc
wrmsr
mov
popf
gs
cld
inc
test
pop
mov
repnz
dec
out
fwait
pop
adc
dec
and
es
test
out
or
pop
sbb
sub
dec
pop
addl
dec
dec
cltd
and
clc
js
mov
cmp
test
fisttpl
push
clc
iret
or
and
aam
sub
cltd
sbb
or
stos
xchg
inc
aaa
test
ja
push
jbe
jne
test
insb
loope
add
adc
xchg
rcrl
sub
sbb
xchg
jecxz
mov
and
inc
arpl
push
adc
mov
pop
sti
cmp
ret
std
inc
aaa
cltd
pop
movsl
shlb
sub
sbb
fs
pop
iret
sub
into
sbbb
sbb
mov
outsl
lret
mov
adc
jb
dec
xlat
push
je
ret
leave
out
repz
mov
cmp
xchg
jle
cmp
hlt
pop
and
out
cwtl
mov
scas
and
fsts
pop
lret
push
push
xchg
dec
dec
lret
mov
mov
ret
push
mov
pop
enter
sub
xchg
out
xor
test
out
and
stos
mov
jl
in
scas
push
pop
popf
adc
mov
jb
sub
cmp
sti
fisubl
mov
or
clc
out
pop
testb
adc
insb
lock
adc
pop
ja
fadd
out
inc
xchg
mov
int
jo
dec
push
cmpb
mov
lea
dec
sub
push
mov
sahf
loop
mov
out
and
dec
aam
scas
cmc
dec
add
loopne
push
lods
enter
cmp
adc
inc
lret
mov
arpl
lds
dec
jmp
in
push
jecxz
ss
out
and
das
adc
clc
or
inc
or
shlb
out
test
sub
push
pop
out
jbe
xchg
jmp
xchg
or
in
and
xor
fbstp
mov
xchg
aas
jb
fs
pop
jle
cld
mov
jge
iret
xor
xchg
jbe
mov
or
mov
mov
xchg
dec
dec
push
sbb
xchg
stos
nop
cltd
movsb
lea
fcoml
and
push
inc
out
stos
push
aas
dec
xor
xor
je
int
pop
test
iret
push
fcoml
or
push
mov
mov
ss
lods
xlat
shl
push
fldenv
xchg
ror
loope
mov
test
xchg
pop
add
popa
stc
lea
pop
enter
rorb
scas
xor
push
fwait
ret
jecxz
arpl
popf
lret
xlat
test
inc
xchg
xchg
pop
lret
jmp
test
fbld
or
fcmovnu
into
jne
mov
push
movsl
test
mov
iret
dec
pushf
loope
mov
jnp
shlb
cmp
sti
mov
js
das
ret
jae
push
push
lret
aas
cmp
push
dec
sbb
xchg
inc
xor
add
out
imul
cmp
cltd
js
push
lret
jo
scas
out
pop
cmc
xchg
ret
out
fnstenv
or
dec
aam
cmp
nop
sti
mov
xchg
in
add
rcrb
xchg
lcall
repnz
sti
xor
dec
add
and
aas
lock
dec
push
je
adc
leave
cli
push
push
rclb
out
lret
loopne
les
push
add
je
sub
aaa
test
add
push
not
ja
sbb
lods
ds
in
xor
sbb
xchg
cmp
jne
push
dec
inc
test
int
mov
hlt
sahf
jno
out
adc
imul
pop
jnp
push
xchg
scas
mov
mov
mov
insl
fmul
xchg
rcrl
call
xor
rclb
mov
add
jo
dec
and
xchg
mov
push
rclb
es
mov
bound
pop
inc
dec
insb
ss
mov
pop
movsl
mov
mov
xor
xor
in
mov
push
je
cld
fwait
sbb
iret
subl
vmovsldup
add
push
sarb
ret
xor
outsl
data16
scas
ja
sub
and
sbb
push
push
dec
jnp
dec
shll
push
pop
xor
add
push
in
movsb
xchg
jns
imul
inc
lods
sub
push
or
lret
jo
fistpll
cmc
xchg
sub
dec
cmp
mov
jge
xor
data16
xor
daa
or
stos
frstpm(287
ds
into
jge
mov
int3
das
dec
test
shll
jecxz
sub
mov
into
outsl
or
shrb
hlt
iret
lea
cmc
test
sbb
js
fwait
mov
aam
popa
push
jg
mov
jmp
das
dec
xorl
rol
es
fimuls
inc
hlt
loop
mov
pop
jmp
and
cld
das
sbb
aad
sbb
mov
and
push
stos
dec
js
push
sbb
xchg
ret
lret
int
out
jecxz
mov
pushl
sbb
add
cwtl
cmp
xor
mov
mov
jbe
aas
outsl
sub
pop
mov
sbb
inc
ficomps
sub
lcall
dec
cld
jb
dec
decl
pop
add
jmp
add
inc
push
jg
mov
cmc
popf
push
xchg
lea
insb
or
adc
sbb
adc
mov
clc
sbb
pop
jnp
cwtl
fisttps
dec
test
iret
inc
rolb
frstor
push
fistps
mov
into
pop
rclb
or
adc
mov
jecxz
fbstp
lret
mov
inc
sbb
push
xchg
sti
push
iret
push
ret
xor
jl
mov
dec
and
stc
ret
lret
mov
fcmovnb
jecxz
iret
adc
mov
repnz
negl
xchg
in
sub
int3
dec
cmp
push
pop
nop
inc
adc
ljmp
and
fsubrs
mov
sub
pop
dec
mov
mov
push
out
mov
ja
jb
mov
insb
jo
out
repnz
call
test
cmp
xor
and
repnz
decb
ds
xchg
arpl
adc
cmp
sbb
ljmp
adc
adc
adc
cmp
mov
pop
jnp
mov
int
enter
mov
lods
arpl
pop
inc
or
xlat
xchg
push
lea
lret
inc
jae
in
sbb
add
adcl
xchg
xor
mov
cmp
sarl
insb
xchg
ja
sti
dec
fs
cmp
mov
sahf
push
mov
out
mov
or
mov
rcll
iret
sub
andb
je
xor
aaa
or
and
mov
sti
xor
ret
or
js
jmp
mov
aam
adc
addr16
pushf
pop
shr
cmpsb
cmp
rclb
jns
test
push
insl
sub
push
iret
mov
pop
nop
xor
aam
jae
cmp
jno
inc
push
mov
or
repz
jbe
and
int3
shrb
movb
lret
rcl
in
push
aas
loope
sub
int3
out
inc
inc
add
pop
ljmp
sbb
mov
test
and
stc
cmpl
ror
adc
push
sub
add
inc
mov
and
mov
rcrb
xor
lret
or
jmp
les
xor
call
ss
dec
add
ret
xchg
loope
shll
stc
xor
adc
loop
inc
pusha
mov
jne
dec
test
pop
mov
push
push
or
or
pushf
add
sub
popf
xor
lret
clc
sbb
lods
pop
and
jae
jp
popl
jns
xchg
add
inc
sbb
adc
mov
mov
cmp
xchg
lock
hlt
fidivrs
adc
xchg
flds
adc
in
test
insl
out
mov
into
mov
lock
and
or
lahf
imul
mov
push
xchg
mov
xor
mov
jb
push
insl
into
mov
cwtl
inc
fldenv
mov
add
mov
add
sbb
dec
insb
call
ret
jnp
inc
sub
ret
adc
out
std
or
lret
bound
push
roll
push
test
cld
jo
jecxz
mov
mov
stos
jg
aam
movsb
push
push
xor
sbb
and
repnz
jae
out
daa
cmp
pop
adc
shlb
cmpsl
inc
jecxz
jbe
push
push
addl
outsl
out
ret
int
into
or
adc
lods
mov
mov
cmpb
cli
hlt
jo
pop
in
lret
outsb
mov
mov
imul
jg
jns
dec
dec
pop
mov
movsl
cmc
mov
fsubs
adc
js
sub
negl
and
sti
cmp
lods
aam
leave
insl
subl
mov
xchg
repz
sbb
pop
fdiv
pop
add
or
adc
xchg
mov
jmp
cmpsb
xchg
lock
inc
pop
xor
pusha
icebp
xor
jp
mov
sbb
lods
mov
ret
aam
dec
bound
out
out
cli
mov
or
iret
or
jg
fs
pop
jbe
loop
je
dec
daa
arpl
push
push
int
jp
inc
insb
repnz
xchg
divb
ret
mov
fidivrs
mov
fcmovbe
sub
ret
add
xchg
iret
sbb
aam
mov
rcll
xor
and
jle
into
mov
inc
xchg
test
stc
stos
mov
stos
loop
ds
sbb
xor
mov
cs
lahf
xchg
fnstenv
lret
jno
test
mov
in
inc
movsl
popf
clc
inc
mov
bound
mov
xchg
mov
nop
mov
add
mov
pop
jae
loope
sub
xchg
lods
push
lret
les
mov
addr16
push
testl
and
xchg
ficomps
jne
jnp
sbb
stos
push
insb
nop
ja
cmp
cmc
mov
ror
push
sbb
outsb
arpl
jle
mov
ret
lret
sub
test
push
lahf
cmp
addl
pop
idivb
mov
sbb
iret
pop
mov
push
pop
lock
fcmovbe
jg
xchg
mov
adc
dec
sbb
outsl
jg
sub
pop
decl
xchg
scas
pushf
cld
aam
es
jl
mov
dec
mov
imul
pop
decl
into
pop
add
insl
jnp
rcl
mov
jo
xor
les
push
repnz
inc
sub
dec
lret
test
into
pop
sub
sub
mov
or
into
sti
push
rorb
and
cmpl
pushf
jbe
cmp
push
iret
scas
rcr
stos
orl
jae
lds
ficoml
inc
xchg
dec
xchg
fs
icebp
ja
out
scas
push
inc
xor
cmp
iret
out
fistps
jmp
jne
xor
ret
jnp
out
loopne
xor
popa
sbb
mov
inc
adc
mov
inc
xlat
inc
fcoms
hlt
int3
cmc
inc
lods
jp
mov
es
imul
cmc
xchg
ret
inc
push
pushf
jge
xor
xlat
das
cmp
pop
xor
sbb
add
jno
sub
mov
lahf
cwtl
fadds
mov
xchg
mov
ror
cwtl
testb
mov
and
mov
cmpsl
repz
loopne
loop
jge
sub
lcall
xchg
mov
sbb
insl
in
addr16
cmpsb
cmp
clc
jl
jne
adc
test
inc
daa
or
push
cmp
adc
xchg
inc
and
movsl
lcall
adc
sbb
scas
dec
xchg
sbb
cld
xor
or
mov
std
daa
rclb
leave
push
jne
cmpsb
repz
mov
add
lods
fwait
inc
ljmp
inc
out
rorb
inc
int
fildll
mov
sub
xchg
push
aaa
mov
mov
pop
popa
insb
rcrb
mull
rcr
jns
cmp
mov
dec
pop
pop
int3
in
mov
inc
bound
cmc
adcl
mov
jmp
adc
add
dec
xchg
pop
xchg
in
inc
add
cltd
xchg
cmp
pop
sbb
les
xchg
dec
setne
stos
clc
jmp
pop
scas
inc
ret
mov
xchg
xor
jnp
cmp
or
xor
mov
pop
in
in
or
pop
and
cmc
test
inc
test
dec
push
mov
dec
add
flds
push
enter
or
or
push
sub
loope
or
adc
push
dec
fstpl
out
add
dec
and
ret
mov
nop
push
pop
mov
gs
or
jns
mov
mov
mov
mov
dec
int3
and
lcall
rcl
inc
jnp
dec
adc
pushf
xor
push
pop
out
dec
mov
cltd
sbb
add
cli
mov
test
loop
mov
fwait
cmpsl
popa
sbb
cmp
aad
outsl
jge
xor
addl
cltd
lret
cli
push
rolb
mov
leave
and
clc
outsl
pop
jg
movsl
push
jp
pop
loope
adc
adc
inc
test
stos
cs
movsl
rorb
cwtl
sti
add
add
lds
repz
insl
jmp
mov
imul
in
xor
mov
mov
sub
cmp
lcall
rorb
jmp
fwait
pop
fisubs
dec
push
mov
test
adcb
jmp
and
push
jbe
cmpsl
mov
mov
jmp
sti
and
pop
jbe
mov
test
xor
cwtl
add
push
or
leave
hlt
int3
adc
mov
es
daa
dec
xchg
gs
repz
mov
das
lock
int
adc
lods
scas
xchg
in
lea
inc
mov
loope
push
ficompl
push
xor
xchg
rol
stos
and
mov
push
cltd
inc
es
lock
pop
mov
dec
out
pusha
in
or
shr
dec
mov
inc
jle
add
adc
insl
sar
pop
jae
int3
stos
dec
jg
jmp
scas
imul
cmp
addl
out
lret
pop
mov
sbb
pushf
fst
mov
pushf
test
leave
mov
pop
movsl
dec
jbe
mov
sub
es
cmp
mov
enter
sub
cmc
sub
pop
or
stos
js
shll
fwait
jae
jbe
push
xchg
and
negb
sub
jle
jl
fmulp
push
pop
sbb
dec
cmp
and
adc
scas
inc
test
pop
sbb
push
and
sahf
adc
sbb
dec
pop
xchg
add
test
lds
ss
xor
jbe
shll
pop
ja
dec
rcl
cmp
push
rcr
fucom
data16
sub
adc
and
ror
xchg
jae
dec
cmp
sbb
jnp
mov
orl
packuswb
loopne
push
icebp
mov
cltd
lock
xor
loope,pn
in
jae
cmpl
mov
push
xchg
int3
jns
call
add
push
in
repz
jecxz
lret
stos
lods
mov
push
mov
icebp
inc
mov
mov
push
in
cmpsl
outsb
negb
negb
jbe
jmp
pop
in
jae
loopne
mov
pushw
ljmp
push
lcall
adc
and
mov
pop
adc
inc
xlat
out
stc
inc
xchg
push
cltd
push
pop
stos
aaa
insb
sbb
inc
or
mov
adc
cmp
aam
pop
test
mov
xor
into
stos
mov
adc
jp
jl
ds
mov
ret
dec
cmpsb
outsb
rcl
xchg
xchg
inc
jp
or
push
inc
mov
outsl
rcrl
jno
fistl
mov
mov
xchg
inc
gs
and
in
repnz
scas
dec
mov
pop
aaa
das
cmp
and
dec
in
jmp
pop
mov
add
daa
and
ret
pusha
xchg
jne
jno
out
add
jmp
cmp
cld
es
sub
out
mov
das
pop
xor
nop
inc
mov
pushl
imul
ret
stc
aam
mov
clc
mov
ja
jmp
mov
dec
jmp
pop
push
inc
sbb
push
mov
or
hlt
cmp
jne
pusha
or
adc
aam
adc
out
into
in
int
xor
je
pop
das
sbb
outsl
pop
outsb
enter
stc
sbb
add
fcmovnbe
imul
jl
mov
adc
or
outsl
mov
pushf
nop
fiadds
sub
mov
and
fimull
mov
imul
pop
in
lahf
nop
test
sti
jo
push
inc
pop
jge
cmc
into
lods
adc
adc
out
lock
xor
frstor
pop
cmp
aas
hlt
int3
add
or
jae
shll
xlat
push
pop
push
ret
xchg
shlb
mov
clc
pop
scas
subb
push
outsl
sbb
lea
push
bound
push
push
mov
loop
gs
leave
cld
cltd
add
cmp
std
xor
cmp
mov
xchg
arpl
push
shlb
js
stos
or
outsl
lret
cmp
mov
ja
xor
stc
test
repz
cmpb
addr16
inc
add
sub
movsb
test
push
fwait
sbbl
xchg
andb
les
jle
pushf
mov
outsl
fsubs
or
jl
push
clc
lock
mov
repnz
jno
xchg
jg
cmp
insl
and
sub
xlat
cmp
outsb
jns
fidivrs
leave
jae
mov
xchg
hlt
mov
imul
pop
cmpsb
out
rcl
in
lods
jge
fmull
fiaddl
adc
xchg
outsb
cmp
push
sbb
push
or
jb
popf
ja
js
dec
outsb
fadd
or
das
and
mov
pop
loopne
sub
sahf
mov
add
stos
fnsave
imul
adc
fdivrl
rcll
sbb
ss
test
fidivl
mov
bound
stc
pop
inc
test
movsb
add
loopne
xchg
cltd
je
test
xor
loop
sarb
xchg
outsl
das
inc
jecxz
fstps
jae
addr16
and
or
adc
mov
add
shl
loopne
mov
scas
test
fsub
add
jb
cmpsb
sti
dec
jnp
rcrb
jecxz
subb
ljmp
and
xor
rorb
jl
insl
dec
mov
out
jo
test
dec
inc
movsl
xchg
ljmp
out
mov
dec
mov
and
out
jle
push
mov
sbb
cmpsl
jo
cwtl
pop
pushf
push
and
jp
lods
and
es
inc
adc
xor
cmp
cmp
push
mov
fisttps
stos
xchg
xor
mov
out
hlt
aam
xlat
dec
fwait
scas
inc
and
dec
cmp
imul
cwtl
fwait
pop
sbb
std
pop
and
push
sbb
pop
fisubs
jl
add
push
cmpsl
in
bound
mov
dec
pop
je
andl
test
inc
cmpl
sti
imul
xchg
das
lahf
loop
push
out
fwait
add
xchg
or
mov
xor
cmp
sub
repnz
rcrl
sbb
inc
call
pop
push
mov
lret
cld
push
insb
xchg
add
out
in
outsl
and
icebp
out
mov
mov
into
ljmp
sub
into
mov
xchg
scas
jo
mov
data16
shr
mov
test
sub
leave
push
xchg
into
inc
cltd
xor
es
dec
push
push
adc
loopne
leave
movsl
xor
add
lret
xor
jbe
into
popa
adc
add
fisubl
cld
mov
cmp
and
lret
add
jne
cmp
cmp
imul
mov
push
ret
jmp
jb
sub
inc
sti
mov
inc
daa
mov
sbb
sbb
inc
mov
scas
pop
movsl
adc
scas
xor
push
mull
xor
orl
iret
out
shlb
into
imulb
pop
cmp
sub
cwtl
stc
pop
lret
dec
fwait
in
xlat
jns
sub
aas
pop
push
jle
lea
mov
mov
in
push
xchg
mov
jmp
js
into
mov
lret
xor
das
inc
xchg
fxch
fnstsw
in
jp
into
jns
or
je
push
lret
enter
bound
sbb
mov
lods
inc
imul
aaa
mov
mov
add
add
sahf
push
jnp
or
popf
pusha
mov
xchg
dec
cwtl
jg
lahf
test
inc
add
lods
or
pop
aaa
push
dec
into
cmp
sbb
leave
out
jp
cmp
pause
je
iret
pop
imulb
mov
inc
dec
xchg
inc
popf
fcomps
cmp
jae
cltd
aaa
and
ret
fidivrl
es
push
sahf
push
mov
arpl
mov
fcmovnu
mov
bound
in
pop
addr16
and
test
cmp
cmc
cwtl
dec
aaa
rolb
shl
adc
mov
lds
fcmovnbe
push
add
mov
cmpsb
pop
sbb
sbb
add
jno
mov
mov
and
scas
fwait
xor
movb
loopne
daa
shrb
js
call
add
cld
in
xchg
jmp
fcomp
in
jbe
jmp
xchg
pop
sub
pusha
cmp
cld
mov
fistps
dec
push
aam
pop
int3
push
int3
xor
dec
sub
pop
sub
out
xor
dec
icebp
xchg
insb
inc
ja
sub
loope
pop
ror
mov
pushf
sub
adc
mov
jg
mov
cmp
test
add
loop
into
in
pushf
adc
mov
loopne
shr
iret
addr16
pop
sub
push
das
mov
sti
push
iret
xor
mov
xor
mov
test
in
in
insl
ret
lcall
test
aad
sub
adc
incl
pop
addl
cwtl
aam
sahf
and
and
xor
sbb
or
xchg
pop
test
sub
aas
cs
sub
push
push
push
or
mov
scas
loope
push
mov
js
popa
xchg
lret
cmp
inc
cmp
loopne
push
dec
movsb
pop
into
xor
stos
out
push
stc
push
out
cmpsb
test
fbstp
shrb
push
dec
inc
add
xchg
mov
fisubrs
scas
rcrb
aad
test
jecxz
push
out
sbb
dec
mov
in
insl
inc
lods
rorl
xor
push
push
lret
and
inc
jns
fadd
test
aam
je
or
out
inc
mov
mov
out
pop
dec
and
cmp
stos
xchg
xor
insb
adc
jae
xchg
mov
leave
test
out
cmpsl
fcomps
int
das
jae
outsl
xchg
or
pop
lcall
movsl
es
dec
aaa
imul
out
inc
jl
or
mov
idivl
sbb
jb
add
leave
add
mov
imul
pop
xchg
push
fcoml
jl
es
sbb
cmp
jg
or
jle
jbe
mov
jl
push
mov
enter
lds
sar
sub
lret
paddd
fldcw
mov
sub
push
fadds
pop
and
xchg
mov
mov
sar
mov
adc
cmp
orb
inc
leave
bound
lahf
lret
shl
jp
adc
popf
cmpsl
nop
enter
ss
xchg
dec
into
lret
sub
fldt
fcmovbe
adc
dec
sbb
sbb
sti
xor
jmp
cmpsl
js
rorb
mov
call
push
outsl
les
jp
lcall
xchg
and
mov
push
or
cmp
ret
xor
roll
and
pop
adc
sbb
popf
stos
arpl
ret
js
cs
cld
push
in
sub
ss
popf
or
adc
add
stc
stos
push
cmc
and
xchg
fwait
and
cmp
push
clc
fadd
out
push
adcb
mov
sbb
popf
cmp
add
scas
ss
pop
mov
imul
xlat
sbb
in
roll
repnz
jle
fstpl
cld
stc
dec
bound
mov
adc
push
insl
sbb
pop
sub
dec
push
mov
mov
sahf
movsl
or
int
sbb
inc
adc
fidivrs
mov
add
sub
inc
mov
loop
xor
add
ret
shrb
xor
xchg
popf
xchg
sahf
out
jl
push
dec
lret
aad
xchg
addb
popa
or
xchg
mov
mov
std
ret
into
iret
cmc
mov
sub
cwtl
insb
mov
int
mov
int3
inc
test
xor
xlat
stos
pop
pop
inc
mov
mov
insb
cmpsl
inc
data16
inc
jno
push
test
inc
fdivrs
aaa
popa
pop
fmull
pop
xchg
test
sarb
inc
mov
clc
or
and
ret
out
lds
mov
add
pop
add
call
cmp
std
inc
out
out
push
add
je
mov
xchg
lock
enter
cli
adc
in
stos
jecxz
repz
das
cmp
fnstsw
stos
adc
cmc
std
or
mov
neg
add
fnsave
mov
pop
mov
in
clc
mov
jb
jnp
and
fcmovnu
and
lock
or
idivb
cmp
dec
pusha
mov
arpl
xor
jl
je
add
aas
jge
mov
int
rdpmc
dec
ret
push
xchg
mov
and
test
pop
sub
insl
pop
push
sbb
fwait
xor
mov
cmc
sub
dec
push
add
not
and
mov
and
xchg
jl
int3
xchg
push
inc
ficompl
dec
jmp
mov
and
fidivrs
loop
imul
pop
add
imul
sbb
or
mov
pop
cmc
jns
cmp
sub
aas
mov
pop
push
outsb
pusha
xchg
inc
lret
pop
outsl
push
or
push
mov
lret
in
icebp
push
orb
lds
aas
jecxz
adc
xchg
cld
inc
cltd
xor
pop
in
pop
lahf
cmp
and
jnp
xchg
lds
out
and
fs
mov
sub
daa
pop
sti
stc
cmpsl
sbb
rclb
xlat
and
scas
add
sbbl
clc
data16
aaa
dec
jne
insl
or
xchg
fstpl
lods
ja
sub
lcall
pop
mov
dec
pop
lahf
popf
push
loop
mov
movsb
addr16
test
icebp
dec
sahf
ljmp
pop
push
add
outsl
aaa
mov
sub
decb
xchg
stc
add
jl
je
sbb
arpl
mov
push
dec
into
int3
sbb
cmp
jp
je
fwait
es
fmull
xchg
adc
icebp
xor
into
into
pop
popa
hlt
fwait
jnp
dec
dec
out
outsl
push
std
fcomps
mov
cmp
stc
insl
adc
lret
out
jp
bnd
cltd
mov
add
rorl
lcall
push
aad
nop
int
mov
lret
sbb
xor
lea
enter
push
add
dec
dec
jne
rcl
cmpl
cmp
mov
adc
out
cs
inc
leave
xor
fldcw
scas
or
xchg
mov
insl
or
mov
mov
sbb
mov
scas
and
mov
push
loope
pushf
pop
iret
adc
pop
jge
scas
arpl
enter
std
sbb
rcl
lds
into
sbb
sub
pop
or
popf
aad
mov
inc
push
sahf
pushf
xchg
pop
jg
add
shlb
push
mov
mov
xor
or
sub
int3
jo
jge
lods
jl
sub
push
mov
sub
ja
rclb
popa
xchg
insl
pop
mov
imul
mov
pusha
out
push
outsl
in
leave
mov
popf
cmc
aas
ljmp
mov
dec
sub
imul
adc
fcoms
lret
not
out
ss
mov
mov
push
rcrb
xchg
aas
clc
xchg
insl
in
dec
fcmovbe
sbb
mov
outsl
mov
fistpll
mov
popa
sti
pop
push
inc
fsubl
mov
cmp
cwtl
aaa
cmpsb
not
lcall
mov
sarl
popf
or
push
mov
test
ja
out
or
jb
inc
out
sub
or
mov
cmp
mov
xor
sbb
inc
popf
mov
add
mov
cmpsb
dec
xor
mov
mov
dec
daa
arpl
push
sub
lret
test
lcall
lret
mov
xor
mov
in
push
pop
jbe
mov
jl
or
add
fistl
mov
mov
xor
cmp
sub
add
out
das
jbe
mov
rorb
xchg
jae
add
and
in
mov
and
test
push
mov
rolb
push
mov
hlt
nop
jb
pusha
mov
mov
add
push
sub
fst
mov
dec
jg
inc
sti
pop
mov
or
or
ret
or
arpl
sbb
daa
lahf
sub
mov
sti
xchg
pop
or
into
dec
stos
test
std
add
pop
push
lds
aaa
mov
out
adc
insb
test
sbb
push
mov
mov
lret
mov
pushf
xlat
pop
xchg
int3
shlb
add
mov
not
fwait
imul
popa
dec
jmp
into
daa
inc
fadds
hlt
popf
adc
pop
sub
leave
test
xchg
lods
cs
sub
add
mov
mov
out
into
sbb
enter
filds
incb
cmp
sub
pop
arpl
ss
mov
mov
enter
push
cmpsb
faddl
out
mov
scas
or
icebp
cli
ss
in
and
sbb
adc
jmp
leave
push
fisubrs
push
jle
dec
push
xchg
sub
or
push
cltd
cmp
movsl
xchg
jecxz
ja
int3
push
cmp
pusha
das
pop
push
sbb
insb
dec
stc
xor
dec
test
sahf
sub
pop
dec
pushf
push
push
cmpsb
psubd
jge
stc
inc
ja
in
push
shl
mov
and
xlat
dec
jnp
sub
push
or
mov
jo
mov
xchg
xchg
lods
jecxz
push
daa
xor
adc
push
pop
mov
cmpsb
lock
stc
mov
mov
adc
dec
insb
sub
adc
pop
lcall
ret
xchg
stos
call
loopne
in
ja
sbbl
push
popf
cs
lods
push
rorl
shlb
pop
mov
cmp
inc
and
shlb
and
icebp
sub
cs
insb
adc
sbb
xlat
fcmove
in
roll
and
jne
popf
xchg
shlb
mov
push
adc
add
addr16
pop
movsb
xorps
add
outsb
mov
adc
mov
pop
push
repz
data16
or
into
xchg
pop
and
cmpsb
push
popa
out
aam
push
dec
xor
xor
lds
xor
add
mov
sub
ss
dec
push
xchg
scas
cmc
add
cmp
out
aad
loop
mov
and
outsl
sub
xlat
sbb
xor
add
add
das
adc
mov
inc
push
outsb
mov
mov
add
cmp
test
mov
and
sub
repz
jmp
adc
ds
pop
pop
inc
or
inc
jo
das
push
push
repz
mov
sbb
mov
inc
xchg
add
xor
idiv
xchg
inc
ficomps
xor
lcall
inc
fdiv
test
cmp
scas
das
call
add
or
push
sbb
movb
or
mov
cmpsl
cmp
test
stc
movsl
xor
arpl
scas
enter
push
sub
pop
sub
inc
cmp
xchg
jg
adc
roll
add
pop
pop
xchg
fwait
xchg
dec
jne
or
xchg
sub
jp
repnz
scas
int3
cmp
test
xchg
subl
in
es
test
fucomp
or
sbb
loop
in
xchg
cmp
push
mov
repnz
push
ret
xchg
adc
arpl
call
dec
pop
or
or
sub
inc
cmp
hlt
adc
xor
mov
jbe
dec
pop
and
test
sbb
lods
out
mov
dec
xlat
mov
lret
or
add
mov
stos
in
das
call
int3
popa
ljmp
js
sahf
sub
jge
fmulp
in
pop
mov
leave
add
sub
lods
push
lret
test
inc
idiv
lret
pop
loop
es
jnp
cmp
and
or
negb
adc
iret
loopne
push
push
mov
jbe
jle
pop
mov
jl
jg
lods
stos
rorl
aaa
jae
fs
push
jne
cs
xchg
fidivs
fmuls
xchg
sbb
aam
cs
jns
repz
lret
xor
mov
cmp
xlat
adc
push
sbb
push
adc
pusha
nop
xor
aaa
std
in
mov
push
or
xchg
xchg
fstpt
mov
insb
dec
sarl
mov
fsubrl
push
push
sub
push
push
xor
and
cltd
into
cmpsb
add
rcrb
add
aas
testb
enter
out
stos
das
mov
mov
test
pop
add
mov
cmc
and
ja
rcll
mov
add
jl
in
mov
or
add
stos
data16
roll
jmp
rorl
pop
lds
adcb
cmp
xor
jge
mov
sub
out
bound
xor
ret
dec
data16
cmp
testl
mov
leave
out
dec
sbb
inc
and
xchg
decb
mov
ret
lret
or
xchg
xor
jg
xor
shlb
mov
cmp
mov
lahf
sahf
xchg
sbb
mov
mov
push
gs
xchg
repnz
push
pop
lcall
movd
mov
lret
adc
dec
lahf
fxam
jmpw
and
sbb
adc
lret
push
fs
or
pushf
mov
inc
sub
fiaddl
sarb
cmp
push
cmp
pop
or
test
cmc
or
cmp
or
in
aas
fisubs
push
add
ret
adc
mov
inc
jl
dec
or
adc
sub
or
leave
and
cmp
or
pop
sbb
rorb
scas
xor
cltd
xchg
jle
sarl
and
push
sbbl
sub
adc
jmp
leave
mov
sbb
sbb
cmpsl
xor
mov
xchg
popa
ror
xchg
and
ret
imul
daa
pop
pop
add
mov
xchg
xchg
mov
cmp
mov
jbe
inc
cs
js
into
and
movsl
sub
mov
mov
daa
cmp
ficoms
insb
or
xchg
rcl
ret
ss
push
sbb
or
xor
or
dec
lret
out
push
mov
mov
mov
icebp
and
fimuls
mov
es
test
pop
push
fdivl
cmp
adc
test
xchg
sub
adc
and
xchg
stc
ljmp
and
test
rorl
mov
xchg
push
or
lahf
push
mov
bound
push
call
fcomps
sbb
aaa
out
sub
xor
clc
jbe
push
movsb
dec
in
leave
lods
rolb
lret
incb
idivb
les
mov
mov
pop
xor
in
inc
push
movsb
mov
leave
fmull
mov
into
jae
mov
dec
mov
ror
sub
push
into
dec
imulb
pushf
jp
clc
out
fstl
stos
dec
iret
mov
mov
mov
push
xlat
sub
pop
je
and
into
test
insl
in
int3
inc
add
imul
pop
push
xor
jae
sahf
xor
jne
and
push
jno
add
push
std
xchg
jbe
aam
push
push
mov
mov
or
mov
push
cmp
mov
leave
jns
or
in
shll
cltd
inc
add
test
pop
test
push
pop
lahf
lods
addr16
inc
movsb
fistpl
bound
and
mov
or
lcall
ljmp
fwait
movsb
push
inc
mov
cmp
fsts
subb
pop
cli
and
hlt
inc
movsl
xchg
out
rclb
orb
gs
sarl
fldt
aam
cs
xchg
pop
rorb
sbb
scas
in
sti
and
jno
in
data16
mov
adc
iret
mov
test
jmp
in
dec
fists
out
ja
arpl
je
lahf
scas
jecxz
mov
test
lea
into
sti
push
ret
inc
cld
adcb
mov
and
pop
mov
aam
out
or
dec
test
mov
call
add
xchg
xor
orl
xor
cltd
sbb
inc
sahf
jecxz
xchg
inc
push
pop
dec
jbe
pop
int
dec
sub
pop
outsb
inc
or
iret
out
fmuls
imul
dec
movsl
arpl
ljmp
aaa
adc
push
out
into
lcall
mov
aam
outsb
mov
cs
cmp
out
rolb
jl
ja
es
push
fsub
xchg
jb
push
jg
or
outsl
add
es
ud1
jmp
subb
rcr
dec
inc
mov
cmpsb
inc
jge
rolb
ror
jb
shl
cmp
jg
fcmove
mov
in
mov
mov
mov
cmp
pop
xchg
cli
xor
xlat
inc
clc
mov
jecxz
cwtl
ficompl
xor
pop
rorb
shrb
repnz
mov
outsl
loope
jne
jo
pop
jp
aas
mov
lods
scas
xchg
int
rolb
out
jne
mov
cwtl
in
xchg
scas
movl
sbb
int3
cltd
in
xor
daa
out
popa
and
jne
add
xor
mov
sbb
add
push
mov
ds
imul
decb
sbb
mov
xor
adc
sub
stos
int3
scas
xchg
mov
mov
cmp
clc
aaa
fld
lret
outsb
mov
out
data16
les
mov
inc
imulb
inc
fsubrs
enter
inc
push
fcmove
jmp
int3
imul
dec
cwtl
aas
or
jle
mov
cmpsb
pop
or
ja
push
mov
lods
cmp
popf
stc
fisttpl
insl
loop
stos
push
dec
mov
cmc
out
cltd
xchg
ret
mov
and
lods
mov
mov
in
pop
mov
filds
mov
je
push
cbtw
into
and
lret
dec
sbb
insb
aad
push
test
mov
jne
sbb
rorl
adc
mov
notb
add
ret
jae
jae
xchg
dec
xlat
xlat
xchg
dec
cmpsb
fucomi
outsb
mov
xor
mov
movsb
and
ja
leave
sbb
lret
adc
mov
sub
sub
and
shlb
jns
orl
inc
xchg
mov
shlb
xor
sub
icebp
jmp
dec
and
ja
test
imul
cmpsb
rcll
mov
dec
add
lret
xor
cmp
out
test
dec
aam
aas
mov
stc
ss
jle
pop
in
cltd
je
cmp
pop
lock
jmp
xor
pop
sbb
push
dec
ljmp
stos
cmp
ficompl
fdivrl
out
adc
xlat
xchg
adc
sbbb
les
adc
into
jmp
sub
clc
inc
xchg
pusha
push
test
andl
jb
xchg
sub
jne
pop
jns
imul
jmp
pop
iret
je
mov
pop
mov
xchg
and
ljmp
lret
in
jnp
mov
jno
jp
dec
push
xor
lds
fcoms
add
movsb
int
cmp
jg
out
mov
add
dec
js
rclb
lret
cs
out
inc
fs
shr
or
jb
mov
sbb
jecxz
cmpsl
mov
jo
cs
xor
mov
lods
xchg
fcompl
cwtl
sbb
inc
mov
sar
loop
pop
jo
lret
lret
pushl
jge
mov
fnsave
bound
mov
pop
out
or
pop
lcall
stc
jns
fisubrs
cmp
pusha
adc
imul
mov
xor
push
inc
add
cmpsb
or
std
faddp
mov
xchg
into
ficompl
dec
fdivrs
fldt
xor
out
mov
je
pop
int
clc
and
pop
repz
inc
add
push
gs
js
lahf
dec
ficoms
nop
aad
push
adc
pop
mov
cmp
in
cmc
fwait
jmp
mov
loop
inc
lahf
pop
jge
adc
jnp
xchg
sbb
insl
mov
mov
jno
ror
push
or
nop
in
xor
sub
mov
mov
lds
leave
fprem
inc
ds
cmc
iret
and
jg
shr
repz
stos
sub
mov
out
add
xlat
push
rcrb
test
sub
jecxz
dec
pusha
shll
adc
sub
ja
into
dec
aas
iret
mov
pop
xchg
aad
into
lock
xchg
loop
rorl
lock
mov
jbe
mov
loop
pusha
xchg
shr
jno
push
mov
fadds
sbb
mov
call
push
cwtl
pop
outsl
das
inc
scas
adc
jne
or
icebp
jp
iret
bound
pop
or
inc
push
mov
mov
pusha
into
add
rcl
push
int
out
pop
cmp
fs
rcr
jmp
xor
jne
pop
inc
pop
rcrb
test
outsb
push
push
adc
xchg
int
inc
movsl
aam
loop
stc
ret
add
addr16
mov
lret
rcr
xlat
add
mov
test
fsubrs
mov
add
jbe
dec
jle
int3
popf
push
outsb
jmp
cld
orl
sbbl
out
xor
repnz
cs
ret
adc
outsl
stos
cmpsl
mov
mov
int
into
mov
jmp
xor
xchg
sub
stos
dec
push
cmp
ja
pop
and
push
out
addr16
fnstenv
mov
and
adc
fcmovbe
add
mov
jl
imul
and
pop
sbb
push
ret
sub
aam
jo
lock
in
das
xchg
ljmp
push
push
mov
pop
in
pop
push
push
add
cmp
fdivrs
aas
xlat
push
jecxz
ret
adc
dec
adc
ficompl
scas
stc
and
xchg
mov
in
or
inc
mov
mov
ja
daa
and
mov
jp
imul
rcl
xchg
add
scas
das
xchg
xor
aas
test
xlat
push
pop
xchg
lret
adc
pop
xchg
sub
hlt
push
jle
imul
into
push
dec
sub
lods
sub
cmp
ljmp
and
xchg
dec
jne
ljmp
xor
mov
cmp
cmp
les
arpl
push
jo
inc
test
fwait
cmp
daa
push
repnz
movsb
stc
lret
out
scas
loope
or
into
inc
push
inc
push
mov
cmp
outsb
jecxz
outsl
rol
dec
in
jbe
dec
lods
int
aaa
dec
imul
sub
stos
mov
push
sub
xchg
imul
into
xchg
fsubs
sarb
cwtl
mov
je
js
icebp
add
into
jl
xchg
and
aad
add
lret
rolb
je
vpcmpeqd
in
lock
add
int
icebp
mov
cli
mov
nop
clc
ret
cmc
cmpsb
xchg
xchg
mov
xchg
fnstsw
sub
xchg
imul
jp
jb
loope
pop
movsl
mov
dec
out
jge
add
adc
adc
les
mov
sahf
jecxz
lret
push
jmp
popl
jae
push
jle,pt
pop
xor
dec
lea
push
test
fildl
inc
ret
nop
jg
les
rorl
enter
loop
dec
push
ljmp
subb
pushl
outsb
xchg
cmpb
ja
xchg
jno
ret
sbb
push
int3
push
stos
mov
and
or
mov
ljmp
lret
jg
bound
les
inc
lea
repnz
fimuls
rorb
rorl
jg
push
mov
add
inc
sarb
std
incl
cmpsb
leave
andb
repnz
adc
ljmp
pop
pop
lret
add
bound
lahf
jbe
adc
jo
push
push
mov
xor
adc
js
lahf
fiadds
out
push
xchg
dec
sub
ret
pop
mov
xchg
dec
sub
orl
repz
test
repnz
adc
inc
pusha
cltd
sub
inc
lock
xor
mov
gs
adc
sbb
jecxz
cltd
stos
sub
mov
and
out
out
pusha
dec
mov
mov
leave
inc
xchg
cmc
xchg
mov
shl
das
cmc
fists
inc
rorb
pop
fldt
xor
sbb
int3
movsb
inc
inc
sbbl
dec
xor
xor
lea
mov
sub
mov
dec
or
sbb
aaa
into
pop
xor
subb
adc
sbb
outsb
loopne
lods
and
leave
mov
leave
jle
call
xchg
sbb
xchg
test
jg
rorl
and
addr16
cmp
mov
pop
stos
daa
add
xor
les
into
sub
jnp
int3
lret
fdiv
inc
inc
loopne
or
cmp
imul
jo
dec
ret
or
pop
adc
rorl
into
jg
xchg
sbb
sub
cmovs
in
outsl
mov
lret
or
or
dec
xor
push
xor
dec
sbb
rcrl
imul
rorb
adc
leave
insl
stos
and
or
and
xchg
scas
push
inc
in
sub
movsb
mov
cmp
xchg
push
jp
fsubrl
cmp
imul
and
mov
lahf
inc
push
adc
inc
add
sbb
add
movl
imulb
adc
rorl
leave
mov
adc
or
pop
cs
jns
shlb
int
dec
mov
fsts
dec
pop
aam
inc
mov
xchg
ret
xlat
mov
adc
push
clc
push
lret
iret
nop
mov
daa
jle
in
lret
outsl
xor
out
adc
add
aam
enter
rorl
adc
mov
push
add
xor
rorl
inc
dec
out
add
cmc
lods
mov
xor
dec
iret
movsl
xor
loope
divl
mov
xchg
or
scas
mov
sbb
push
sbbb
and
sarl
pop
fisubs
pop
mov
push
adc
mov
out
cmpsb
in
cwtl
std
test
pop
mov
add
lcall
or
push
insb
dec
mov
push
dec
call
gs
bound
xchg
or
js
xor
not
test
pop
fcmovnbe
mov
daa
dec
xor
or
imul
insb
fwait
into
sbb
imul
rorb
xchg
test
into
mov
jmp
xchg
fcmovbe
lret
out
jno
push
cmp
out
cld
cmpsl
iret
out
xchg
pop
or
adc
addr16
push
iret
dec
push
lcall
lret
mov
das
jmp
scas
push
mov
sbb
inc
in
mov
ret
lret
imul
fadds
jmp
xchg
xchg
imul
jbe
inc
jge
leave
push
loopne
movsl
popa
jp
sarb
xor
push
xlat
or
mov
test
adc
xchg
sub
cmc
fmul
imull
fcoms
xor
sbb
jae
xchg
in
sub
rcl
int
mov
sahf
push
bound
add
lret
jmp
push
ja
pop
push
or
mov
rcl
pop
loope
shl
stos
out
adc
mov
or
mov
loopne
movsl
xchg
ret
mov
mov
and
ds
imul
in
add
add
cmp
out
sbb
xchg
pop
push
push
out
je
lcall
in
xor
mov
inc
lods
lds
fdivrl
cmpsl
jg
into
push
dec
sti
mov
sbbb
cwtl
push
sub
in
aam
xor
add
outsl
shlb
xor
fistl
and
sti
xor
xor
pop
negb
repnz
hlt
dec
mov
jno
rol
in
inc
addr16
fists
mov
shll
in
mov
dec
cmp
cmpsb
add
movsb
inc
jbe
popa
sti
xor
lock
dec
ret
mov
fst
in
ljmp
mov
imul
cmp
jl
cli
dec
xor
inc
out
mov
mov
cwtl
mov
xchg
inc
push
pop
enter
xlat
sti
mov
mov
jb
popf
push
pushl
sbb
cmp
cs
or
jl
mov
outsb
xchg
test
lret
cmp
mov
xor
in
lcall
inc
cld
add
sbb
xchg
mov
push
dec
pop
inc
cmp
mov
pop
jne
jno
out
rolb
test
or
in
lret
jne
int3
pop
test
ss
je
daa
icebp
and
adc
adc
popa
pusha
popf
ljmp
cmp
sbb
inc
pop
xchg
imul
lret
sti
cltd
gs
movb
mov
int3
xor
insl
into
aas
pop
mov
pop
cmp
fldt
xchg
push
add
mov
cmp
call
out
in
mov
into
fmull
lret
sbb
add
movsb
int3
dec
pop
cwtl
es
ja
mov
fldcw
mov
pop
dec
lock
pop
push
test
mov
clc
sub
in
adc
popa
push
dec
pop
or
jl
test
lret
and
loopne
ret
mov
testb
mov
dec
das
jmp
sub
push
xchg
mov
shrl
mov
push
leave
sahf
jae
xchg
movl
jbe
dec
pop
xor
xor
jbe
inc
xchg
test
sahf
into
dec
inc
cltd
or
popa
icebp
scas
lds
inc
sub
xor
sub
mov
inc
in
xor
or
ss
adc
repz
sbb
in
xor
into
cli
repnz
fimull
mov
lea
and
or
sbb
data16
mov
add
dec
xchg
mov
sti
lea
icebp
jnp
orl
cmp
xor
and
dec
rol
push
cmp
sbb
fstpt
pop
pop
jbe
ret
jb
shlb
out
arpl
test
jp
mov
nop
sub
and
mov
adc
outsb
out
inc
cltd
mov
xchg
scas
jno
enter
jg
dec
add
cmc
pop
sub
pop
test
jb
int
lods
mov
add
orb
inc
and
xlat
push
and
dec
or
jecxz
test
out
jbe
cmpb
lock
push
lds
mov
inc
cmp
sbb
aad
fsubp
sbb
xchg
out
test
faddl
and
mov
pushf
jbe
mov
test
sbb
dec
pop
and
mov
arpl
loope
push
cld
pop
popa
mov
test
rol
icebp
add
or
push
dec
loopne
jle
sub
push
out
into
xchg
dec
mov
cmpsb
cmp
lret
adc
pop
test
call
push
sbb
and
fldt
loope
scas
or
xchg
push
or
lds
push
int
mov
pop
sti
or
iret
sub
sbb
fldl
or
das
movsb
or
ja
cmpsb
into
push
call
ret
in
out
dec
ret
jae
lcall
or
gs
inc
js
mov
mov
sub
mov
int3
cmc
push
sub
aad
adc
leave
rorb
xchg
and
sbb
mov
sahf
cmc
xor
jmp
mov
test
roll
xchg
ja
into
dec
xchg
inc
jl
in
test
jnp
stos
ret
popa
out
dec
mov
ret
push
shrb
les
and
jp
cmp
jmp
xchg
popl
dec
ret
insb
adc
fwait
pop
imul
outsl
or
stos
mov
ror
cwtl
orl
pop
mov
fiadds
aas
inc
nop
out
in
ljmp
mov
repz
pop
loope
inc
in
push
xor
sbb
jns
shrl
mov
in
ret
pop
mov
loop
fcmovnbe
mov
ja
xlat
xorl
pop
stos
jl
and
pop
test
mov
and
loopne
inc
lods
stc
dec
push
or
ljmp
jg
xchg
daa
sarl
push
lret
mov
add
leave
test
mov
dec
int3
sbb
cmp
xor
rcrb
push
cmp
pop
xchg
dec
jle
mov
sbbl
xchg
jo
mov
int3
imul
sti
xchg
lahf
push
xor
cwtl
in
mov
or
jl
mov
lea
mov
hlt
adc
movsl
sub
jecxz
out
es
frstor
mov
xchg
sarl
mov
dec
imul
imul
fadds
insl
shrb
jmpw
pop
push
mov
pusha
int
inc
sub
scas
std
cmc
push
aas
in
les
fwait
inc
mov
mov
arpl
shll
push
fsubl
mov
repnz
ret
int3
mov
cs
or
xchg
pop
iret
xor
roll
ds
adc
aaa
call
in
mov
mov
ss
xor
lcall
test
or
je
push
and
push
mov
sbb
out
mov
cli
and
shll
sub
sub
out
je
or
mov
enter
popa
mov
pop
test
mov
cwtl
subb
js
cmp
dec
and
mov
das
sub
inc
out
call
lods
xlat
xor
pop
dec
js
jle
dec
out
and
pop
setae
ss
push
jbe
add
in
fdivrp
mov
nop
cmp
sbb
mov
sbb
mov
adc
mov
mov
push
mov
in
or
push
push
out
outsb
fbld
lret
mov
popa
mov
sub
inc
mov
into
in
ror
out
adc
cmpsl
lds
fcmovnu
imul
inc
ret
repnz
and
out
sbb
jb
sub
icebp
shlb
jbe
add
add
dec
inc
push
mov
xlat
jb
mov
inc
xor
inc
gs
push
ret
fwait
ret
bound
xlat
aaa
adc
mov
into
daa
cmp
pop
mov
dec
clc
jae
sub
test
fnstcw
add
mov
fistpll
push
fmull
mov
loop
nop
into
mov
push
mov
dec
mov
into
adc
rorl
pop
inc
popf
mov
dec
mov
mov
sub
push
cld
xor
repnz
push
push
inc
sbb
adc
lods
push
roll
fisubrl
pusha
fiadds
movsl
out
jl
imulb
push
mov
pop
cwtl
cmc
jge
xchg
inc
into
dec
imul
xchg
movsb
pop
lret
cmp
in
cmpsl
cmp
or
fs
arpl
pushf
sub
dec
xor
xor
out
stos
fisttpll
jecxz
or
sub
fs
xchg
adc
out
sti
lds
cmpsl
lcall
mov
pop
wrmsr
int3
insb
inc
mov
push
rorb
xchg
cmp
into
mov
and
adc
into
dec
cld
in
mov
fcomip
das
rorb
out
fisubl
push
in
mov
push
mov
pusha
xchg
shrl
mov
push
mov
imul
int3
dec
sarl
rclb
or
outsb
es
in
jbe
test
fsubs
mov
inc
push
xchg
jbe
and
jecxz
icebp
inc
sbb
adc
pusha
pushf
jno
adc
ficoml
cltd
fbld
xchg
or
pop
repz
push
jne
mov
popa
les
out
inc
out
mov
fcmovne
icebp
fdivrl
xchg
jnp
and
cld
dec
and
imul
mov
outsl
mov
shr
jg
pop
or
push
imul
push
dec
pop
jle
stc
negl
push
stos
adc
out
aam
mov
sarb
mov
test
lret
lret
js
loope
xchg
jbe
les
addr16
and
add
shl
popf
push
dec
insb
loope
jbe
orl
ret
call
xchg
sbb
add
pop
fdivs
jo
outsl
xor
mov
sbb
add
xchg
or
aad
ja
xor
jmp
adc
jb
and
fs
enter
cmp
popf
in
ss
push
xlat
inc
aaa
xchg
sbb
sti
data16
or
hlt
lcall
lret
lods
shl
out
inc
and
lcall
pop
pop
or
jecxz
push
and
mov
stos
push
loopne
push
pop
aas
ja
sub
out
enter
lods
fldt
mov
ret
mov
pushf
cld
bswap
aaa
cmp
aad
mov
or
and
xchg
ret
fcmovne
cli
and
cld
lret
daa
arpl
jg
out
sub
gs
ljmp
out
aaa
int3
in
jbe
and
push
mov
call
jo
push
inc
or
enter
mov
stos
gs
sub
pop
and
add
into
cmp
popf
hlt
adc
and
ss
cmp
lds
and
jmp
dec
rol
test
outsl
ss
and
je
mov
loopne
or
and
cli
jecxz
jb
lahf
clc
xlat
mov
pop
cmpsl
jo
jne
mov
mov
icebp
jb
pop
movsl
std
mov
jns
repz
out
sahf
mov
push
scas
fisttpll
and
lcall
les
or
lds
and
xor
sub
mov
insl
lea
test
pop
inc
rcl
rorl
dec
add
push
cmpsl
rorl
lcall
mov
xor
nop
lahf
into
repz
pop
mov
mov
or
loope
iret
or
cli
aam
mov
xchg
sti
jge
xchg
cmp
fcoml
ja
mov
push
mov
sbb
test
sar
adc
pop
aad
mov
out
inc
or
adc
xchg
jnp
lods
xchg
adc
inc
dec
sub
daa
cmpsl
adc
push
xor
xchg
nop
mov
sbbb
es
rolb
shl
test
push
cmc
xor
rcl
xchg
lahf
out
push
daa
and
cmovg
xchg
cli
scas
fdivs
stc
loop
mov
or
xor
adc
test
ds
inc
mov
inc
out
es
xchg
test
gs
inc
xchg
mov
cwtl
popf
inc
add
inc
mov
scas
pop
lret
and
lcall
pop
cmp
push
sarl
fs
dec
pop
mov
ds
nop
and
inc
inc
gs
addr16
cmp
das
scas
stos
pop
jb
inc
pop
push
xor
imul
jae
lds
das
push
xlat
orl
or
inc
mov
dec
daa
mov
mov
and
mov
orb
lahf
out
jl
push
cmp
mov
mov
mov
push
inc
and
dec
mov
sub
mov
test
adc
aad
xor
xchg
mov
xor
std
xchg
test
rcl
xchg
mov
lcall
inc
mov
xor
mov
call
add
lret
xor
jl
in
sahf
lret
ret
sbb
gs
add
pop
cs
push
mov
pusha
add
cmp
mov
test
cwtl
push
mov
or
adc
xchg
dec
arpl
mov
jns
fcmovnbe
leave
out
mov
ret
lds
or
adc
pop
dec
mov
aas
mov
ds
jo
popf
jns
cld
add
aad
into
adc
rcl
lods
cmp
jbe
xor
or
lods
jge
dec
punpckhdq
and
insb
test
mov
not
mov
and
mov
xchg
es
je
xchg
loop
repnz
fadd
push
test
jmp
jnp
ficoms
push
fs
stc
cld
mov
movsb
sti
cld
xchg
push
mov
and
je
sahf
jno
shll
bound
call
fs
or
stc
cmp
test
arpl
xor
or
into
lcall
add
add
mov
pop
arpl
push
and
add
jns
mov
jge
int
lea
xchg
inc
fadd
ss
or
push
mov
adc
shl
adc
data16
daa
into
sbb
mov
js
jb
nop
sbbl
cmpsl
leave
dec
js
sub
int3
xchg
gs
pop
pop
movsb
icebp
inc
push
jne
rcrb
ret
cltd
test
roll
insb
jno
addl
aad
stos
dec
aam
xchg
sbb
sbb
pop
sbb
add
lods
jne
cmp
imul
gs
data16
ja
js
dec
push
xor
jecxz
jnp
stos
test
popf
xchg
sbb
mov
scas
pop
int3
aas
pop
stos
je
shlb
test
shlb
shlb
rorl
scas
ss
or
std
push
dec
sbb
sahf
add
cmp
push
rorb
jbe
fisttps
push
mov
lret
iret
lods
dec
xchg
into
or
push
push
sbb
cmp
cmpsl
jbe
jle
dec
movsl
scas
sub
and
rclb
sbb
dec
test
dec
push
sahf
adc
vmovaps
push
xchg
outsb
mov
movsl
adc
xor
xchg
hlt
xchg
sahf
in
int3
fucompp
lret
in
stos
das
dec
adc
out
xlat
and
pop
adc
inc
fdivrl
xchg
fwait
data16
push
adc
dec
xchg
dec
xchg
in
add
mov
pop
dec
and
out
aam
pop
xchg
sbb
sub
dec
mov
cwtl
pop
pop
pop
mov
dec
ret
aam
sbb
insl
sbb
dec
in
lods
pushf
jmp
stos
and
lods
sbb
fidivl
fs
xchg
int3
cmpsl
inc
jb
pop
dec
cmp
lods
aam
int
in
and
and
cmp
add
scas
dec
or
dec
mov
dec
rorb
or
int
into
dec
bound
xchg
std
mov
dec
cmc
cmp
xchg
pop
push
mov
jl
insb
leave
xlat
sar
pop
xchg
pop
sbb
fwait
xor
sbb
aad
cld
ss
xor
pop
dec
lahf
xchg
dec
cwtl
xchg
xchg
out
xchg
shll
dec
dec
lret
hlt
push
int3
fdivrs
inc
test
cmp
pop
sbb
pop
fldl
lods
jp
and
movsl
lret
add
add
rol
push
inc
xlat
push
aad
mov
nop
dec
cwtl
daa
and
outsl
pop
adc
cmp
clc
push
enter
decl
out
and
cmpl
insb
jns
aad
jb
dec
fadds
push
aam
fistpll
dec
xor
dec
fs
or
jne
int
lret
das
push
cmovae
xchg
inc
or
int
cltd
sbb
dec
shll
mov
xor
test
pop
out
cli
dec
and
sbb
test
testb
dec
and
fcomps
stos
pop
fcmove
dec
arpl
int3
push
jbe
push
leave
xchg
jmp
imul
test
in
xlat
sub
hlt
call
pop
fidivl
push
outsl
xchg
xchg
inc
dec
mov
cmc
adc
lret
push
mov
lds
inc
ljmp
es
push
dec
push
or
inc
leave
ljmp
sbb
in
ret
mov
pop
and
xchg
jne
sahf
pop
or
out
aam
dec
leave
push
test
hlt
cli
lret
cltd
xchg
mov
leave
adc
xlat
pop
hlt
nop
loop
push
jmp
xchg
xor
je
and
xchg
fwait
push
sahf
jne
or
push
pop
inc
mov
dec
insl
jo
mov
and
mov
je
xor
testb
lock
inc
and
xchg
data16
dec
sub
pop
imul
pop
fs
cli
aam
push
mov
or
jne
cmc
jle
adc
loope
dec
imul
push
xor
cmp
jge
loop
lods
sub
mov
sbb
add
cmp
adc
pop
movsl
fs
in
cmpsl
push
test
sub
hlt
out
mov
inc
fcmovnb
rorb
pop
cmpsl
mov
bound
adc
xchg
sbb
aam
push
arpl
pop
mov
data16
cli
xchg
add
adc
cmp
gs
inc
insl
cmp
or
push
dec
adc
aad
hlt
sbb
ret
dec
jmp
push
test
scas
insl
mov
push
lret
movb
sbb
xorb
out
push
sbb
mov
push
out
pusha
mov
outsb
data16
inc
fldt
lahf
lods
jmp
adc
js
enter
rcrb
inc
out
cmpsb
sbb
xor
fcomps
cmp
and
mov
and
jnp
fisubrl
outsb
movsb
push
mov
push
lods
les
rclb
cmpsl
xor
leave
iret
adc
mov
xchg
pxor
cmpsb
adc
xchg
push
pop
xchg
lahf
insl
fsubrs
push
adc
rcll
loop
bound
xchg
jle
cs
mov
lods
shll
jbe
imul
cltd
insb
iret
jmp
bound
clc
push
addr16
inc
jns
scas
pop
lods
stos
or
arpl
xchg
adc
mov
andl
adcb
ret
movsb
js
mov
jmp
adc
out
fsubrs
xchg
daa
jge
ljmp
cs
ds
enter
cmp
jg
je
inc
dec
jecxz
in
adc
int
mov
xorb
mov
pushf
cmp
out
fsubl
sub
lret
xor
pop
jne
shlb
push
insb
mov
push
push
imul
jge
xchg
jae
mov
cli
pop
or
mov
nop
aaa
jno
cmp
imul
push
fidivl
fs
into
pop
dec
adc
jb
mov
add
cltd
popa
mov
cmp
fsubs
dec
jbe
mov
fwait
cmp
xor
cmpsl
into
cmp
jl
test
sarb
rclb
cmp
mov
mov
pop
inc
pop
inc
cmc
lods
mov
int3
or
out
xor
dec
lds
jb
clc
mov
lds
loop
adc
stos
xor
sbb
and
inc
mov
sub
sub
icebp
es
xlat
push
sbb
cmp
leave
mov
jb
lret
mov
dec
cmpsb
cld
movsl
sub
jp
mov
mov
mov
lods
push
insb
xchg
rcr
arpl
into
push
mov
push
out
jno
idiv
rorl
outsb
xor
ja
rcr
lahf
sbbl
pop
dec
int
addr16
mov
iret
sub
jle
loopne
dec
mov
aam
xchg
or
mov
pop
push
out
mov
scas
cmp
push
dec
ds
adc
xchg
stc
cli
out
or
out
ljmp
ds
mov
xorb
lods
imul
adc
sahf
push
mov
sbb
push
dec
push
xchg
imul
imull
jns
and
fldt
iret
jmp
cmp
stos
divb
in
mov
cmp
xor
stos
out
outsl
mov
lret
rol
imul
xor
out
jge
mov
hlt
lods
jns
xchg
out
outsb
divl
lcall
cmp
imul
mov
push
jge
es
xchg
mov
push
call
xchg
mov
jns,pt
int3
test
mov
lods
mov
in
dec
xchg
mov
dec
add
jns
ss
sbb
dec
adcl
sub
push
dec
in
es
fcmovbe
cs
rclb
mov
stos
mov
adc
add
mov
imul
inc
in
ficoms
push
jo
or
rcrl
leave
sti
or
iret
sbb
call
or
enter
lret
aas
sub
imul
cli
or
mov
js
jno
lcall
xchg
inc
aad
lea
xchg
lret
ret
cmp
cmc
int
lcall
push
getsec
adc
ja
and
out
out
mov
xor
push
out
jns
clc
push
xlat
aad
adc
rcr
xchg
lret
add
test
pop
sub
adc
sbb
loopne
xorb
jp
mov
addb
dec
jmp
scas
repnz
and
push
dec
xchg
and
into
mov
xor
gs
mov
push
int
push
mov
out
mov
imul
mov
in
add
sub
cmp
and
pop
dec
std
movsb
push
mulb
and
movb
xchg
scas
test
adc
lret
fisubrl
pushf
push
pop
imul
lcall
movsl
pop
sbb
pushf
outsb
enter
xchg
push
xchg
mov
in
imul
lcall
aad
fcmove
sahf
xor
cltd
inc
pusha
shll
jbe
shl
push
or
jecxz
dec
push
lods
mov
outsb
push
mov
add
cmp
jns
scas
adc
arpl
scas
sub
insb
dec
loop
outsb
adc
testl
xchg
xchg
push
sbb
jbe
test
xor
ffree
inc
xchg
into
xchg
add
loope
or
sbb
int3
iret
push
jbe
das
push
adc
xchg
push
dec
lahf
lea
jmp
jne
xchg
in
adc
push
xchg
loopne
push
add
mov
dec
mov
mov
pop
pop
adc
xor
ljmp
popf
dec
push
gs
pop
pop
popa
iret
mov
push
sbb
pop
in
hlt
mov
mov
aaa
leave
popf
cwtl
ss
adc
orb
mov
lahf
inc
xchg
imul
push
mov
xchg
cltd
add
and
fidivrs
inc
mov
pop
test
movsbl
into
or
iret
mov
mov
cs
or
push
push
in
inc
inc
gs
pop
adc
stos
xchg
lea
mov
dec
add
out
adc
sbb
pop
adc
sub
pop
mov
cmp
arpl
popa
hlt
and
popf
dec
dec
int3
stos
leave
aas
aam
mov
stos
std
add
or
pop
repnz
cwtl
out
dec
jecxz
icebp
dec
cli
mov
mov
out
cmp
xchg
loop
cmpsb
sbb
mov
in
dec
jge
data16
popa
cli
mov
and
pop
in
xlat
and
das
insl
repnz
and
xchg
push
mov
outsl
mov
xchg
push
adc
dec
xchg
sub
insl
test
lods
mov
sbb
cwtl
jge
push
inc
rorb
loopne
fisttpll
dec
fbld
push
mov
dec
enter
jle
sub
stc
dec
and
and
aaa
mov
out
mov
xor
mov
cli
pusha
lods
xor
ds
jle
shl
out
xor
adc
dec
es
je
add
sub
stos
sbb
sub
repz
dec
loop
jp
popa
xchg
pop
out
test
out
jmp
dec
xor
push
mov
push
sub
aaa
sub
mov
xor
addr16
mov
cmpsb
mov
aas
insb
and
mov
mov
push
insl
mov
cmp
push
push
mov
adc
fcom
push
adc
inc
in
inc
or
adc
repz
add
mov
xchg
xor
sbb
pop
dec
or
arpl
loope
rcl
adc
fimull
xchg
push
ds
shll
push
test
or
pop
out
adc
sbbb
and
in
pop
shrl
dec
outsl
pop
lods
push
inc
out
fst
pop
pop
mov
lret
jb
pop
dec
push
push
xchg
fdivs
pop
mov
leave
mov
test
dec
xor
orl
push
inc
dec
aas
aam
sbbl
sarl
fcmovb
jne
dec
imul
std
out
push
aam
sbb
int3
out
ror
dec
fs
jbe
jne
pop
jns
outsl
mov
iret
js
xor
shrb
and
lret
push
fisttpl
xor
and
xchg
aad
frstor
xchg
push
mov
cwtl
jno
cmp
xchg
rorl
orb
jnp
in
adc
out
divb
add
adc
mov
inc
and
adc
insb
fwait
test
pop
cltd
fldt
clc
mov
and
add
divb
dec
cwtl
lret
add
int
mov
clc
arpl
out
aas
loope
sti
filds
push
mov
jne
and
daa
ret
pushf
mov
cmp
leave
jae
xor
lea
xchg
push
pushf
cltd
movsl
sbb
les
or
dec
mov
je
scas
xlat
icebp
cmc
jecxz
xchg
leave
lahf
xchg
test
adc
out
sub
or
addr16
mov
jp
mov
or
inc
sub
fildl
jno
ss
xor
aaa
mov
mov
pop
sbb
mov
imul
mov
pop
push
cmp
xchg
es
push
scas
pop
outsl
insl
ss
ljmp
dec
mov
sbb
ret
cmp
es
lret
js
sahf
jbe
xchg
aam
cmpsl
xchg
push
xchg
push
dec
adc
xor
push
jb
in
jge
cmp
add
and
jle
sbb
mov
add
jmp
lret
test
xchg
fldcw
mov
into
mov
adcl
iret
push
repz
mov
sub
and
jmp
nop
je
adc
cs
aaa
xchg
dec
clc
mov
repz
fadd
mov
mov
dec
mov
les
shrl
xchg
es
mov
jns
dec
aam
and
cmpsb
je
dec
mov
sarb
cmpsl
mov
lahf
imul
pop
mov
lret
pop
enter
xchg
inc
pop
push
outsl
jo
lea
scas
dec
jbe
ror
sbb
pop
sub
jbe
loop
xor
xor
lods
xor
inc
cmpsl
adc
cmp
outsb
ss
gs
movsb
mov
call
in
aaa
push
mov
sub
out
and
outsl
cmc
dec
ret
lds
jmp
push
mov
xlat
mov
sbb
xchg
lods
or
fcoms
mov
adc
cmpsb
popa
call
cmpsl
pop
loop
rorb
mov
inc
loopne
ss
add
sub
inc
or
jne
or
push
addr16
push
mov
sbb
mov
jnp
mov
dec
aam
pop
ror
pop
int
outsl
insl
push
sbb
cld
ss
adc
xchg
lds
jne
xchg
scas
inc
cli
fcom
mov
jecxz
and
pop
out
lcall
cltd
and
mov
out
orl
push
adc
test
mov
das
sub
dec
xor
mov
rcrl
stc
shr
jb
mull
xchg
shrl
fcmovbe
or
mov
add
nop
jbe
outsl
add
in
or
imul
xchg
and
sbb
fnstcw
scas
shl
stos
jp
outsb
jo
mov
out
push
lock
ss
ss
adc
in
jp
jecxz
jmp
into
clc
push
push
jbe
xchg
xchg
adc
mov
mov
adc
cli
icebp
xlat
mov
cwtl
jmp
or
sub
sbb
adc
sub
sub
aam
dec
or
jae
or
fdivrl
adc
rorl
int3
push
push
lret
es
xchg
jbe
imul
lret
aam
adc
dec
or
mov
sub
flds
ja,pt
or
cmp
aad
mov
mov
mov
slwpcb
mov
leave
jne,pt
push
cmpsl
jmp
jle
shrb
stos
jo
nop
hlt
push
push
xor
aas
push
fistps
push
data16
lahf
push
aad
lods
adc
aad
and
dec
lret
mov
mov
adc
cld
dec
adc
insb
pop
lods
into
add
sbb
push
sbbl
pop
pop
std
and
push
xchg
add
mov
push
xchg
adc
rcrb
push
or
in
ljmp
faddl
stos
lds
aas
mov
cmp
and
out
stc
psrlw
fmull
jecxz
rcrb
push
lret
mov
dec
cld
mov
into
or
cmc
dec
push
xchg
add
mov
scas
out
movsl
lcall
clc
call
or
aad
lret
xchg
jge
dec
stos
or
ret
xchg
push
add
test
lret
add
cld
xchg
mov
ret
stc
sub
int
sbb
cmp
out
lods
pop
jl
aad
vcvtpd2dq
enter
push
fdivr
outsl
in
in
jmp
mov
mov
lret
addl
test
xor
cmpb
xchg
lret
sub
push
cwtl
popa
arpl
shll
loop
pop
mov
xlat
adc
jl
mov
xor
mulb
sti
xor
cli
or
outsl
shrl
sahf
scas
push
in
fcomps
push
add
mov
xchg
inc
jb
sbb
xchg
push
bound
pop
mov
bswap
sti
out
out
push
jp
push
mov
stc
dec
xor
jmp
and
out
fstl
add
mov
mov
je
fcmovnbe
push
ds
dec
iret
or
adc
dec
lret
jl
test
xchg
das
cmp
push
push
jecxz
fwait
es
outsb
mov
rorb
lret
xchg
or
scas
fcoms
push
ret
add
xchg
movsl
mov
xchg
sub
lret
xorb
and
xlat
mov
cmpsb
mov
and
dec
lea
int
popf
stos
cmp
or
adc
or
mov
cmp
sti
test
icebp
dec
gs
movsb
lods
mov
mov
lret
add
jns
fistpl
xor
aad
mov
fisttpl
roll
lret
into
mov
push
outsb
divb
dec
sub
ds
sub
data16
dec
fucom
into
cmp
xchg
inc
pop
outsl
subb
cmp
popa
xor
jbe
aaa
call
inc
pop
xor
movsl
mov
xor
into
repz
mov
in
stc
mov
mov
loope
pusha
int
ss
mov
jmp
pop
add
int3
lcall
push
mov
leave
in
cmpsl
jns
into
inc
or
cmc
scas
adc
sub
mov
aas
and
dec
mov
push
loop
jns
push
and
out
and
cmp
das
cmc
ss
sti
leave
rorl
push
xchg
push
incl
and
repz
imul
and
movsb
cmpl
sbb
cs
call
xor
mov
xchg
fadds
inc
int
cmpsb
pop
jl
leave
cmp
jp
adc
addr16
lahf
pop
sbb
xor
mov
call
sub
pusha
repz
xor
andl
out
nop
sub
cs
push
push
es
fidivrl
mov
shlb
cwtl
call
std
pop
pop
xchg
jge
add
push
inc
les
sub
ljmp
lods
scas
outsb
hlt
into
jo
push
cmp
insl
add
pop
mov
pop
rolb
mov
or
hlt
mov
sub
xchg
rorb
pop
repnz
call
in
call
sbb
add
shll
mov
pop
in
shrb
out
rcl
imul
push
arpl
movsl
pop
or
inc
stos
movb
pop
mov
shlb
bound
inc
adc
xchg
into
ds
cmpsl
sahf
cmc
into
xor
xlat
mov
aaa
add
lcall
fdiv
outsl
xchg
loop
push
incb
push
add
leave
scas
jo
jl
dec
lret
sbbl
sub
outsb
pop
scas
std
jg
mov
jns
inc
andb
rol
aaa
loope
nop
dec
in
insl
jmp
jbe
dec
stos
pushf
or
scas
fdivp
mov
push
lock
add
push
and
sub
int3
inc
shlb
sub
test
sbb
outsl
dec
pop
test
loopne
mov
ret
shlb
test
clc
sub
adc
sbb
je
fsts
mov
and
lahf
mov
into
push
sub
insb
cmc
out
dec
inc
enter
or
add
add
mov
mov
cld
test
daa
dec
jg
mov
add
inc
adc
dec
dec
cmp
js
mov
scas
and
pop
in
mov
jbe
stc
lcall
out
idivb
pop
and
popf
repz
jbe
fcomps
nop
xor
mov
jl
movb
movsl
jo
add
adc
xchg
leave
lret
cmp
dec
push
aad
clc
fisubrs
or
pop
push
dec
int3
sub
mov
jmp
or
in
xchg
in
jge
in
rcll
dec
cmp
sbbl
and
push
mov
pop
pop
into
loop
mov
jb
fs
dec
out
dec
mov
lret
mov
faddl
adc
adc
dec
in
cmc
int3
lcall
jmp
xchg
out
gs
pop
mov
cltd
mov
mov
pop
adc
mov
es
das
push
in
sub
or
jge
xor
outsl
insb
mov
push
jns
sbb
and
push
insb
sahf
pop
ret
sbb
dec
xchg
or
out
sub
mov
xchg
test
push
out
es
in
loope
data16
push
mul
add
into
testb
fisubrl
sti
stc
pop
cmp
jae
jge
adc
adcl
dec
adc
ficoml
dec
xchg
stos
add
push
imul
lret
pop
shr
jg
sub
jmp
ss
adc
sarb
or
hlt
mov
aaa
xchg
jg
dec
mov
mov
ret
add
js
shll
mov
subl
rcl
mov
std
mov
add
jbe,pn
mov
lcall
sbb
ret
lds
jno
ret
stos
push
adc
push
adc
stc
inc
or
es
hlt
rcll
out
and
cli
and
std
push
repnz
sbb
ss
xor
add
pop
jle
add
std
pop
xchg
rcll
mov
arpl
mov
jne
adc
push
xchg
dec
push
and
inc
aam
into
sbb
jns
les
lds
icebp
paddd
fwait
mov
dec
push
jo
sti
aam
ds
mov
or
adc
inc
repnz
cmpsl
and
cmp
aas
xor
sti
pushl
mov
xchg
xorb
out
sub
lods
outsb
xchg
push
out
jne,pn
mov
leave
movl
mov
movsb
xchg
push
mov
shrl
or
enter
lea
dec
mov
sbb
xor
mov
test
jae
bound
and
jbe
popa
movsl
pop
mov
bound
clc
test
push
xchg
add
jmp
push
stc
jecxz
aaa
movsl
sti
pop
rcrb
es
push
pop
outsl
filds
rcrl
loope
mov
rcll
xchg
shr
push
adc
push
push
insb
insb
ja
adc
addr16
and
and
jno
in
pop
lock
lea
jo
jge
mov
sahf
sbb
jne
push
sub
insb
mov
pop
bound
das
sub
xorl
sub
jne
dec
adc
in
pop
test
and
mov
jecxz
mov
cmpsl
in
push
into
dec
fwait
sbb
push
xchg
incb
outsb
mov
xchg
inc
pop
or
xchg
mov
loop
dec
cmp
pushf
test
lods
lret
aam
sti
es
push
fnstsw
leave
add
insb
lcall
loope
int3
mov
sbb
in
mov
enter
add
add
stos
pop
insb
fcmove
sbb
push
xor
add
jp
scas
shl
lods
mov
scas
out
shrl
cmpsb
lret
jge
rolb
aam
push
mov
into
clc
js
dec
cmp
pop
mov
dec
xchg
mov
ret
sub
jecxz
xchg
cmc
clc
jno
sbb
dec
pushf
mov
push
ret
xor
xchg
aad
test
inc
nop
pop
xlat
jle
mov
jno
outsb
stos
pop
data16
out
loopne
ds
data16
add
sarb
into
dec
pop
pop
enter
pop
daa
xchg
lock
pop
rcrb
mov
mov
std
aam
pop
push
push
leave
shlb
lret
inc
jle
jnp
rolb
push
cwtl
movsl
xchg
lea
mov
mov
pop
add
fcmovb
aad
out
lcall
ljmp
imulb
sub
repnz
rorb
dec
out
sbb
dec
pop
addl
lea
mov
xor
scas
lods
insl
lds
inc
dec
outsl
lret
jns
push
fcoml
pop
pushf
stos
jnp
inc
iret
push
fcoml
push
push
or
jbe
push
mov
mov
ficoms
aam
adc
mov
in
call
push
or
jnp
in
lea
mov
out
mov
pop
push
push
dec
xchg
push
xchg
mov
xchg
pop
movsb
push
adc
cmp
sbb
data16
clc
icebp
jle
push
dec
cli
and
aas
mov
shrb
mov
mov
cmp
push
jne
xor
jae
decl
ja
push
sub
insb
das
xchg
imul
xor
cmpsl
adc
push
aad
mov
xchg
scas
loopne
pop
cld
shlb
mov
inc
fisttpll
sti
cltd
or
sbb
sar
inc
push
xor
add
jae
cs
sbb
xor
xchg
insb
mov
in
fs
shrl
cwtl
or
std
mov
pop
pop
aaa
in
inc
outsb
xchg
push
inc
xor
aad
loopne
inc
add
dec
fld
outsl
inc
jp
mov
add
adc
clc
arpl
xchg
sub
ljmp
mov
mov
test
aas
push
adc
sbb
jmp
ret
into
push
out
mov
out
mov
nop
fiaddl
cs
sub
insb
pop
push
xor
push
adc
jne
sub
cmpsl
or
das
sub
jmp
lods
mov
inc
repz
push
sub
or
adc
jle
call
sbb
out
lea
add
xor
dec
lret
sbb
adc
xor
adcb
lods
jle
out
inc
fadds
imul
push
add
xor
mov
divl
mov
push
iret
cmp
jecxz
jbe
xchg
xchg
lret
push
cld
xchg
in
aas
div
repnz
rolb
lret
in
shl
xchg
popf
rolb
lods
into
aam
add
push
push
push
mov
or
cli
popa
loop
addb
in
mov
pop
mov
loopne
xchg
pop
xor
aam
btcl
imul
mov
pop
jns
cmp
cs
inc
mov
cmpsb
jo
movsb
cmp
xchg
sub
insb
loope
add
addr16
cmp
popl
and
stc
jae
sbb
pop
jnp
and
push
rclb
mov
jmp
push
push
repnz
cmc
cltd
cmp
push
adc
lret
sbb
push
and
pop
int
xor
es
adc
mov
into
sub
movsl
or
test
scas
mov
pop
push
das
movsb
pop
movsl
mov
or
lahf
les
pushf
imul
jb
cmp
inc
dec
bsr
jbe
je
sbb
mov
pop
push
jbe
or
fs
add
insl
test
shrl
sub
dec
jns
iret
loop
sbb
pop
mov
fisubrs
into
jge
das
cmpsl
mov
roll
fdiv
fldl2e
mov
rcr
std
xchg
mov
ficompl
aad
pusha
mov
cmpsl
int3
jns
sub
mov
mov
jbe
xchg
icebp
mov
es
in
mov
mov
call
pop
pusha
aam
fldl
gs
adc
sbb
inc
out
sbb
pop
stos
xchg
jmp
sbb
jne
in
mov
sub
push
xor
popf
inc
cmpsl
mov
lcall
and
mov
dec
and
std
or
sarb
mov
mov
pop
je
mov
imul
mov
pop
mov
unpckhps
push
fwait
lds
jmp
sub
and
lret
stos
dec
jne
lods
fst
sar
nop
stos
int
inc
icebp
sbb
push
adc
fiaddl
enter
sbb
test
jl
or
cli
xor
insb
lahf
adc
mov
add
sbb
lcall
mov
jp
and
add
cli
jo
ret
or
es
fwait
xchg
mov
sub
inc
and
add
repz
hlt
pop
adc
push
arpl
pop
shll
xchg
or
addb
add
dec
or
es
test
jne
cli
sarb
pop
cli
out
xchg
and
add
inc
push
push
arpl
sti
aas
dec
xchg
in
or
fwait
push
mov
mov
fstpl
xor
or
sub
mov
leave
adc
sbb
sahf
jmp
xchg
addl
jmp
inc
pop
pop
in
sbbb
fisubl
daa
out
lret
xchg
pop
stos
sub
cmpb
movsl
mov
std
adc
adc
sbb
inc
fsubrs
xchg
mov
daa
fsubp
mov
sbb
cwtl
ret
mov
aaa
xor
push
add
rcl
loopne
into
cli
or
data16
pop
stos
popa
into
push
cltd
mov
dec
cmp
jbe
inc
and
loop
std
into
lret
je
test
out
mull
rolb
stos
dec
jbe
out
repnz
fists
and
mov
mov
push
jno
test
xlat
dec
cmp
inc
mov
or
push
mov
movsb
dec
movsl
loope
ret
cwtl
sub
movsl
pop
sbbb
ret
js
lods
addr16
shrb
cli
rcl
mov
cmp
mov
sbb
push
mov
es
inc
scas
and
or
bnd
pop
mov
stos
xor
mov
xor
mov
imul
out
ds
mov
leave
mov
aam
jbe
arpl
jo
stc
test
jg
js
push
popa
adc
xor
in
xor
stos
sub
add
in
mov
rolb
xor
mov
xchg
xchg
inc
mov
out
mov
cmp
gs
es
pop
cmp
out
outsb
dec
xchg
push
loopne
sbb
lret
aaa
pop
xor
fcoms
jge
test
jne
adc
mov
lock
int3
sub
dec
cmpsl
pop
xor
dec
iret
sbb
push
pop
adc
les
shl
mov
int
push
rolb
mov
jg
jae
pop
adc
sub
scas
dec
add
xor
out
ds
lret
mov
jle
insl
push
xchg
jl
push
dec
lahf
imul
fisttpll
jp
cltd
clc
sahf
arpl
adc
addl
nop
jmp
and
out
cmp
cmp
fs
push
xlat
leave
rcr
adcb
jnp
popa
sub
xor
jne
ljmp
xchg
in
std
xor
movsl
jmp
aas
dec
sarb
push
fldenv
popa
mov
jmp
cmp
aaa
cmp
xlat
out
neg
mov
je
or
push
push
insb
pop
std
or
jmp
and
xchg
inc
sbbb
dec
xchg
data16
push
cwtl
test
dec
adc
in
xchg
mov
out
outsl
cmpl
sub
or
jno
repnz
leave
or
sbb
out
push
cmpsb
push
xchg
sbb
sbb
jb
andb
imull
inc
mov
cmp
adc
mov
bound
pop
mov
and
sub
cmc
adc
fstpt
push
pop
jb
mov
stc
in
popa
push
rorl
push
adc
cmp
lea
xchg
dec
pop
push
lret
test
les
inc
ljmp
sbb
jae
mov
fcoms
ficomps
fnsave
clc
fnstcw
sbb
mov
adc
fwait
xchg
outsb
jg
mov
lret
sbb
jge
out
mov
mov
jp
xchg
cld
xchg
js
int3
push
es
sbb
stos
retw
mov
xchg
or
lret
es
into
mov
mov
jge
aam
inc
add
jecxz
pop
inc
inc
cmp
push
call
adc
pop
lcall
mov
pop
xorb
push
sbb
xchg
int
mov
arpl
das
je
ret
into
push
outsl
out
movsb
jbe
loope
std
xchg
add
dec
dec
mov
adc
jae
loopne
mov
inc
into
and
jo
push
inc
or
rcl
or
loop
mov
sti
xchg
into
jp
xchg
aaa
pushf
pop
mov
js
xor
rcl
sub
adc
mov
out
negl
stc
push
sub
push
mov
bound
mov
test
mov
lret
fnstenv
dec
and
sub
push
sbb
or
cmpsl
mov
inc
cmp
data16
mov
insl
xor
cmc
stos
push
mov
outsb
mov
mov
ret
push
jmp
int
pop
imul
lods
lds
test
fwait
insb
mov
pop
sbb
mov
push
scas
sbb
rorl
mov
cld
fsubrs
insb
into
adc
in
jo
fwait
les
cmpsl
push
jb
xchg
lret
bound
mov
scas
test
xchg
fnstcw
adc
pop
lock
jae
rorl
and
addr16
gs
out
push
lods
daa
cmp
lock
test
dec
in
sbb
xchg
jp
not
xchg
or
jo
into
popa
cmp
xor
dec
adc
mov
mov
push
inc
cmpsl
and
push
xor
sbb
les
push
cs
rol
mov
cmp
pop
imul
pop
mov
and
lret
xchg
test
rorl
test
jp
out
sti
aad
outsl
daa
cli
orl
jmp
add
aam
adc
cld
cmpsb
inc
add
lret
cli
jp
xchg
popf
cwtl
stos
jns
jge
sarb
sub
pop
xchg
xchg
sbb
aad
add
loopne
repz
ss
or
pop
outsl
mov
mov
insl
lods
scas
add
dec
js
mov
sbb
or
rcrb
out
lock
test
add
jae
ljmp
repz
imul
add
ficoms
outsb
push
mov
loope
push
rorb
or
cmp
sbb
decb
stc
pushf
sub
dec
xor
fiaddl
pop
jne
or
stos
adc
out
jp
cmc
shll
cmp
jmp
addl
shrl
or
dec
inc
or
gs
push
pop
or
add
lods
fldl
scas
fsub
aaa
int3
in
andl
nop
and
shlb
pop
jecxz
ja
jnp
shrl
stc
out
add
sub
int3
into
cmpsb
push
adc
pop
lahf
ficomps
inc
cmc
push
inc
lret
lods
lods
out
or
xor
push
shrl
sahf
test
movsl
repnz
push
pop
leave
xchg
mov
inc
mov
addr16
in
sbb
arpl
adc
stos
inc
jge
imul
push
lahf
jb
cmp
leave
or
xchg
repz
pop
out
popf
outsl
pop
add
sub
pop
adc
jg
xchg
cmp
int
enter
jge
out
mov
sub
dec
push
pcmpeqd
loopne
pop
xor
add
cs
pop
xor
inc
push
iret
mov
fstpl
mov
cmc
enter
add
bound
mov
inc
pop
cwtl
inc
addr16
xlat
sbbl
mov
push
fsubs
stc
es
push
push
fbstp
inc
push
icebp
sub
into
outsb
mov
pop
jp
mov
jae
repz
call
inc
es
test
cld
stos
cwtl
ja
dec
jno
mov
adc
add
lahf
mov
orb
xlat
jb
xor
cmp
fs
loope
sub
dec
out
mov
dec
in
out
stos
and
xor
cmp
ret
xor
out
cmc
sub
cmpl
frstor
mov
out
xor
jb
mov
jae
clc
xor
frstor
adc
xchg
mov
and
loope
aad
push
inc
sub
sbb
mov
fldcw
filds
adc
inc
imul
push
xlat
sub
xor
mov
sub
add
inc
mov
jno
mov
adc
fidivs
or
add
push
ja
cmp
insb
xor
jne
sbb
cwtd
add
mov
adc
and
mov
addr16
ss
adc
pushf
push
dec
and
ljmp
pop
out
adc
loop
jno
in
out
sbb
in
mov
push
aaa
rclb
sarl
jne
ja
jae
scas
stos
mov
addl
mov
popa
test
loop
xchg
idivb
xchg
out
insb
mov
lret
jmp
ror
fidivs
pop
cld
pop
lret
es
xlat
cmp
cli
and
adc
pushf
mov
adc
in
or
or
imul
imul
pop
je
dec
or
aaa
fistpll
sub
js
xor
popa
inc
xchg
hlt
and
and
insb
call
cld
adc
add
rcll
idivl
push
data16
dec
lret
sbbb
pop
adc
dec
mov
test
fadds
test
sbb
mov
ljmp
mov
adc
push
aas
cmp
imul
pop
xlat
sub
dec
sub
push
je
pop
addl
cmp
cld
push
aad
mov
push
xor
lret
ficompl
data16
jb
lcall
popa
dec
loope
pop
imul
insl
sbb
mov
xlat
lret
test
pop
adc
sub
dec
cwtl
jg
xor
push
clc
js
or
cmp
pop
adc
mov
scas
into
jns
aas
push
jle
push
subb
mull
xchg
fs
pop
data16
mov
xchg
xor
sbb
jbe
outsl
xor
pushf
ljmp
jl
mov
lcall
mulb
loopne
or
or
lods
xchg
adc
clc
jns
push
push
sbb
fmull
sub
xor
addr16
mov
and
adc
xchg
mov
mov
xchg
hlt
stos
jl
or
add
mov
push
mov
in
rolb
sub
jmp
addr16
xor
test
inc
mov
pop
insb
lods
push
sahf
jae
sbb
mov
dec
add
bound
roll
sub
test
inc
jl
mov
inc
jle
data16
mov
loop
repz
mov
cmp
push
adc
xchg
lret
mov
xor
lods
inc
adc
lods
pusha
mov
xchg
mov
aad
cld
ljmp
add
leave
or
or
loope
push
ret
int
jle
xor
xchg
or
jl
leave
js
inc
les
jp
dec
lret
repnz
pushf
xor
ret
and
xchg
cwtl
and
and
scas
and
pop
test
mov
adc
and
bound
loope
sahf
xor
lahf
or
mov
dec
fwait
imul
stos
test
aad
lret
add
lods
mov
jo
int3
cmp
sbb
mov
xchg
psrad
enter
fcmovu
std
mov
cld
hlt
lea
add
stc
fmul
lds
push
xchg
sbb
mov
mov
roll
int3
daa
into
jp
mov
fisubrs
out
adc
mov
jl
orb
pop
cwtl
outsb
mov
add
cmc
loope
pusha
leave
sbbl
shl
dec
xchg
add
inc
adc
cmpsl
push
sub
out
into
mov
pop
inc
es
add
sub
mov
sbb
lret
aaa
js
fst
pop
dec
in
sub
mov
rorl
fdivrs
sbb
jle
retw
jmp
mov
sbb
ja
lds
push
enter
aaa
cmp
mov
push
rorb
mov
mov
mov
ficoms
lahf
and
and
mov
js
bound
test
jb
xor
xchg
int3
scas
jmp
icebp
mov
and
inc
movl
popa
test
fiadds
adc
jbe
hlt
out
cmp
mov
dec
jbe
sub
push
test
das
inc
inc
call
pop
cltd
cli
loop
arpl
rorl
or
adc
sarb
mov
es
dec
sub
cmp
rolb
jmp
lret
hlt
mov
mov
dec
nop
and
cmpsb
and
out
clc
mov
adc
int3
rcll
lcall
jp
or
dec
inc
mov
push
push
dec
xlat
lret
mov
jp
ret
orl
mov
pop
ds
dec
data16
xchg
and
int
addb
dec
xchg
ret
sbb
cli
cmp
roll
mov
cmp
addr16
jb
mov
out
xchg
xchg
pop
cmp
push
xchg
sti
mov
in
xlat
mov
sbb
push
mov
out
pop
xchg
imul
pop
add
mov
push
xchg
sub
pop
out
push
jmp
push
rorl
push
aas
lods
in
std
daa
xchg
cwtl
push
test
xor
scas
mov
jp
out
movsl
xchg
pop
dec
xchg
dec
aaa
fcmovbe
fadds
mov
pusha
xchg
mov
lea
jae
jne
int
loope
addb
lock
jmp
add
push
lahf
fadd
lret
sahf
adc
push
or
inc
inc
fmulp
das
add
fs
xor
or
bound
mov
and
call
cwtl
sbb
mov
xchg
mov
in
sahf
adc
daa
dec
cmpsb
push
pcmpeqd
push
mov
repz
and
inc
fcomps
adc
addr16
push
fadds
fidivrl
nop
xchg
or
outsl
sbb
lahf
js
and
mov
mov
or
push
aaa
rolb
add
lods
or
es
xor
repnz
out
ja
mov
jb
out
sbb
xlat
addr16
jmp
outsb
xor
sub
add
jle
cmp
lods
lock
out
jge
addb
mov
loop
arpl
add
pop
push
add
pusha
mov
out
xchg
xor
xor
cmp
xor
outsl
and
jne
xor
fisttps
sub
jecxz
mov
add
sbb
clc
ja
push
cmpsl
jbe
inc
test
mov
cmp
sbb
ficoml
clc
jp
scas
fisttpl
or
jecxz
mov
pop
je
jmp
add
dec
sti
and
mov
xor
inc
add
mov
dec
test
mov
inc
ds
jle
lds
loopne
in
shll
mov
js
cmp
les
fwait
add
and
into
mov
sub
fsubr
add
xor
fbld
insl
cs
xlat
dec
pop
sub
aad
xchg
cmpsl
cmpsl
xor
pop
sbb
arpl
bound
xchg
cltd
pop
ficoms
test
in
push
clc
mov
int
push
pop
leave
inc
jbe
adc
mov
lahf
dec
jl
lods
shrb
ds
push
insb
outsl
or
mov
data16
mov
xchg
stc
inc
mov
add
push
sbb
xor
sahf
mov
jbe
cmpsb
and
sub
loope
int3
mov
pop
out
fidivl
mov
push
sbb
xor
push
push
sti
add
addr16
jae
pop
test
jge
inc
adc
pop
data16
or
sbb
int3
clts
movsb
test
cmp
fisubs
in
fcmovnb
sarl
ds
shrl
inc
mov
pop
cwtl
mov
clc
leave
arpl
lods
repz
imul
aam
and
leave
push
adc
jmp
fdiv
out
mov
and
mov
sbb
out
xchg
xchg
jo
adc
paddsw
shlb
fs
or
mov
mov
int3
fwait
mov
mov
dec
adc
jle
hlt
lods
aad
lock
mov
adc
xor
mov
out
testl
xor
inc
dec
cmp
mov
sub
clc
pop
adc
scas
jnp
push
nop
out
into
ds
push
js
movl
cmp
iret
inc
lret
cwtl
inc
je
test
nop
dec
sbb
ret
xchg
jp
loop
sbb
sub
adc
jne
leave
inc
and
sub
sti
aam
bnd
scas
push
test
pop
in
cmp
mov
in
cs
sahf
icebp
aad
add
jmp
call
mov
cmp
out
adc
ja
inc
and
ds
xor
stos
stos
push
push
or
loop
out
sbb
cmp
or
in
ss
pop
sti
popa
stos
aad
lcall
cmpsl
pop
jns
cmp
xchg
xor
icebp
and
fsubp
inc
call
rolb
push
push
xchg
mov
cmp
mov
adc
in
stos
pop
das
push
cmp
xchg
inc
pop
scas
rcrl
pop
push
pop
cltd
xorb
mov
cmp
stos
push
int
rcl
nop
pop
pop
stos
and
add
sti
pop
pop
mov
subb
mov
inc
or
fwait
ja
into
dec
sti
pop
les
push
movsl
add
iret
jl
cmpb
mov
clc
sahf
mov
pushf
xor
imul
outsb
pop
loop
jns
loopne
xchg
out
arpl
or
xor
push
push
lcall
call
xacquire
jmp
adc
dec
leave
icebp
xchg
dec
rcrb
and
push
in
pop
fs
testl
dec
mov
xor
jmp
pushf
adc
mov
cmp
cmp
pop
jo
xchg
inc
pop
mov
ss
mov
out
popa
add
dec
mov
cmp
jns
in
fwait
cwtl
gs
mov
ljmp
into
rcrb
xchg
inc
sbb
cmpsl
testl
mov
jp
jecxz
lret
ss
cmp
inc
ja
inc
pop
sbb
or
pop
cwtl
jb
xor
aam
je
hlt
mov
adc
fcompl
mov
pop
or
inc
insl
pop
rolb
adc
push
ret
leave
addb
push
out
jbe
add
or
ja
add
xchg
xchg
cli
fidivl
mov
lret
lret
ja
push
shr
xor
stc
push
ud2
fsts
or
rcrl
incl
or
outsl
leave
push
sbb
ss
pop
je
ja
inc
pusha
sbb
cmp
and
out
push
sub
pushl
xchg
mov
jno
mov
outsl
adc
xchg
test
jns
and
xchg
mov
sbb
inc
sub
xchg
stos
fs
or
lcall
out
cmp
jb
dec
mov
ljmp
leave
pop
sub
je
xchg
or
aam
push
outsb
into
inc
aad
aaa
fcmovnb
inc
inc
push
adc
out
fst
jne
inc
xchg
jns
lret
cs
push
adc
lahf
neg
lcall
push
mov
inc
jecxz
add
xor
loopne
insb
dec
cwtl
or
mov
aaa
lahf
push
fimull
inc
ret
data16
add
inc
into
rcrl
mov
xchg
push
lods
push
add
sub
ds
inc
adc
jmp
repnz
out
aaa
loop
mov
insl
dec
mov
repnz
loopne
ljmp
xchg
stc
test
mov
cmpsb
addr16
int
jb
subl
enter
mov
jne
jl
ja
jge
sbb
mov
aaa
outsl
add
add
mov
push
hlt
pop
xor
cmpsb
movsb
add
clc
int3
and
in
lret
mov
dec
inc
inc
rcl
jmp
inc
pop
addr16
scas
ret
jne
xchg
pop
rcrb
xchg
andb
loope
sbb
sub
inc
jge
test
fcompl
xchg
pop
jno
dec
orb
enter
adc
ljmp
cmp
push
icebp
fsubrl
mov
out
inc
repnz
shrb
imul
into
jle
mov
lods
and
cmp
mov
jge
fiadds
mov
xor
and
xor
addb
movsb
push
mov
test
aam
inc
push
mov
push
fidivrl
jle
into
lods
fildll
testl
dec
imul
ret
ja
ss
push
push
movsb
adc
or
lea
js
rcl
or
xor
pcmpeqd
mov
xchg
int3
push
mov
push
shll
adc
jne
mov
stc
sub
imul
ror
pusha
imul
inc
mov
es
sbb
pop
or
and
pop
mov
pcmpeqb
mov
adc
xor
hlt
mov
stos
cmp
cmpsl
aaa
mov
fs
mov
sbb
sub
and
in
fimuls
mov
out
ljmp
mov
xor
or
imul
fldenv
stos
sbb
popa
clc
push
xchg
ffreep
sbb
dec
jp
lret
push
and
test
and
xor
or
into
jl
iret
or
or
lea
std
out
xchg
add
movsb
mov
dec
add
sbb
or
pop
lock
dec
loop
inc
shlb
outsb
add
jmp
into
dec
dec
test
cmp
xchg
sbb
mov
jmp
jo
mov
sub
pop
je
test
mov
lret
mov
xchg
push
mov
ja
push
arpl
push
rcl
insb
stos
aam
sti
std
fistl
icebp
and
jno
jbe
add
je
out
inc
stos
aaa
sarb
jbe
cs
push
jmp
sbb
out
pop
cmc
out
test
xlat
cmp
js
and
adc
jp
adc
fidivs
push
or
xchg
xchg
lahf
fst
sbb
jmp
pushf
adc
cmp
in
push
mov
pop
aaa
dec
mov
pop
xchg
pusha
push
hlt
xor
push
xchg
in
push
jge
shlb
xchg
aaa
fcmovbe
or
jl
cmp
pop
outsl
dec
ficomps
pusha
mov
test
inc
dec
fdivl
pop
sahf
sti
or
mov
repz
xor
or
dec
mov
xchg
mov
fsubr
insl
subl
dec
out
inc
test
dec
pop
xchg
cwtl
orl
scas
loopne
test
inc
repz
sub
lahf
fisubl
mov
out
dec
loope
jp
jno
shrb
imul
mov
testl
jne
jge
sub
mov
orps
sub
jne
adc
mov
aaa
or
cmpsb
testb
lret
xorb
mov
int3
mov
jns
push
sbb
inc
loop
mov
cmp
xlat
fcmovnb
xor
rolb
inc
pop
lret
xor
pop
adc
test
lods
or
mov
jp
dec
mov
push
xchg
push
stc
mov
xchg
xchg
pop
dec
jbe
or
cmp
test
push
out
add
fcomps
or
ds
fs
fstpl
lret
shrl
push
daa
repz
lcall
dec
xchg
cmc
adc
push
das
sar
shlb
cmp
fimuls
mov
dec
xchg
gs
jg
sti
cmp
rcrl
int3
jecxz
scas
adc
cmp
pop
in
test
addr16
push
xor
jecxz
in
das
sub
fdivrs
hlt
lock
ljmp
cmp
push
add
ficoms
in
sbb
and
jb
pop
mov
push
std
arpl
lret
jmp
add
jl
pop
sub
mov
jbe
repz
notb
adc
inc
in
adc
mov
adcl
jl
js
js
jmp
mov
fdivl
ficomps
ss
out
hlt
jb
add
dec
mov
mov
push
call
daa
ss
out
pop
cmc
add
into
mov
xchg
loope
icebp
lock
enter
jmp
mov
test
and
or
sti
add
ss
loope
mov
cmpsl
push
xor
inc
jbe
lods
xor
add
xchg
sub
mov
push
mov
and
pop
cwtl
outsb
aad
pop
test
test
repnz
lret
popa
mov
mov
scas
enter
or
js
jl
mov
fbstp
insb
cmp
pop
and
jns
add
jecxz
mov
pop
xchg
fidivrs
mov
stos
mov
out
sbb
inc
xorb
mov
and
cmp
ss
add
leave
add
popf
lret
inc
jbe
mov
inc
mov
xchg
stos
push
mov
or
shll
cltd
andb
mov
int
call
cmp
aad
adc
mov
rorl
arpl
fbstp
mov
inc
movsb
xor
xor
popa
out
add
subl
push
xchg
lahf
sarb
aam
mov
sti
lret
xor
mov
pop
xor
jb
cmp
push
pop
xor
and
js
lret
xchg
movsl
jbe
jae
sbb
arpl
mov
sub
mov
lcall
insb
ja
mov
insl
xchg
inc
ret
xchg
mov
call
fstp
dec
inc
ret
ficoml
sub
or
fstps
mov
pop
sbb
or
scas
add
repz
lret
clc
loop
bound
xchg
xchg
enter
dec
jp
jae
add
das
fsubs
or
enter
fimuls
lret
or
aaa
jno
inc
aas
addl
cmp
mov
mov
ja
shl
imul
lock
mov
std
push
xor
add
xchg
mov
pop
mov
cmp
aas
cs
cmp
daa
cmp
add
mov
or
jg
int
fisttps
sub
aad
push
mov
fmull
fcomps
lcall
sbb
pop
push
dec
inc
cltd
shll
in
sub
push
sub
inc
jge
mov
mov
inc
cld
lret
inc
jl
gs
iret
sbb
dec
xchg
sti
shll
mov
cmp
lahf
out
pop
sti
cld
pushf
lods
jno
js
les
fistps
adc
push
out
ret
call
or
clc
pop
loope
sub
push
jnp
sbb
xor
xchg
movsl
pop
popf
xchg
dec
sarb
push
es
stos
adc
or
sbb
std
xchg
adc
mov
aam
ss
mov
js
dec
xchg
pop
mov
push
mov
xor
jnp
popf
lret
push
std
gs
les
dec
sub
rcrb
xor
jecxz
mov
inc
fsub
stos
inc
inc
fmulp
mov
cs
xor
mov
mov
mov
mov
mov
mov
xchg
xor
out
shrl
loop
arpl
dec
xor
nop
jmp
push
rclb
enter
push
dec
pop
inc
lcall
and
or
data16
sti
mov
imul
loopne
and
rclb
sbb
lret
lock
or
sbb
xchg
xor
xchg
fcmovnbe
adc
add
rcl
bound
push
stc
movsb
dec
fcompp
iret
hlt
push
leave
dec
adc
and
sub
mov
imul
mov
inc
pop
jge
out
jl
into
lock
sbb
fildll
jb
dec
and
lret
mov
pop
fwait
mov
movsl
push
jmp
xor
clc
cmpl
icebp
add
push
mov
rcrb
mov
stos
leave
sub
mov
popf
sbb
lods
fistl
inc
sahf
stos
movsl
fwait
das
lret
push
aad
lret
addr16
add
gs
insb
sbb
inc
push
pop
pop
std
fcmovnbe
lods
cmp
mov
aaa
loope
lcall
mov
mov
lret
mov
xchg
sub
mov
push
adc
outsl
imul
jl
jae
daa
xchg
jo
jne
out
cmc
hlt
push
and
pusha
adc
out
push
js
pop
fmuls
stc
push
pop
jmp
ljmp
mov
ret
jbe
cmp
pushf
adc
mov
fsubrp
dec
pop
lods
push
das
aam
inc
push
cwtl
pop
or
sbb
jno
std
jmp
insb
or
fdivs
popf
fsubl
xchg
add
cwtl
sbb
ljmp
shrb
push
test
dec
std
and
xor
xchg
and
dec
add
shrb
jb
lods
xchg
imul
push
pusha
leave
inc
lock
dec
jne
out
push
es
xor
imul
loop
mov
cmpsl
jle
push
pop
ret
mov
dec
daa
stc
add
cwtl
outsl
scas
ror
push
mov
leave
cmp
mov
jg
pop
pop
mov
scas
mov
ficomps
out
xchg
jge
aam
in
enter
and
lret
fldcw
in
ja
aaa
add
lock
mov
or
sbb
push
xlat
xchg
dec
movsl
pop
out
stos
adc
leave
inc
or
adc
xor
test
out
icebp
dec
mov
xchg
popa
xchg
in
pop
pop
fsubrl
dec
mov
lahf
mov
jecxz
jmp
mov
cmp
loop
cmp
addb
imul
sarl
jno
sbb
mov
push
pop
lahf
cmp
cmp
test
pop
js
sbb
pop
in
mov
lods
lea
or
jle
cmp
in
mov
mov
shlb
lret
sti
xchg
pop
sub
xchg
jns
repnz
fsub
mov
lds
inc
mov
shlb
cs
das
rorb
xor
inc
xchg
fsubr
sub
pop
xchg
mov
dec
imul
out
inc
push
cmp
or
jae
mov
mov
shl
mov
sahf
add
add
xlat
dec
loop
mov
pop
nop
test
repz
cmp
insl
or
mov
es
ss
enter
insb
add
inc
into
jge
push
sbb
cmp
dec
xchg
shlb
xor
mulb
mov
jge
imul
adc
mov
jno
int
cmc
lret
lea
xchg
mov
repz
adc
mov
loop
cld
add
fwait
clc
loopne
cmpsb
xchg
sti
ljmp
lods
cmc
cwtl
sub
in
push
bound
push
shll
push
popf
push
inc
push
push
in
jbe,pn
scas
inc
mov
or
xchg
mov
fistps
shlb
sub
into
jecxz
push
subl
je
leave
aam
sar
add
jne
stos
out
or
dec
sub
mov
mov
adc
mov
xchg
sbb
jle
and
sbb
add
scas
mov
movsl
icebp
mov
out
sbb
pop
push
xchg
and
sbbb
std
sub
mov
mov
shl
dec
pop
xor
fwait
inc
out
add
jae
adc
dec
int3
shll
in
sub
std
jne
ds
lret
and
cmpsl
jmp
movsb
sarb
add
jle
pop
mov
xor
loop
pusha
mov
mov
mov
repz
sbb
ds
pop
es
ret
sub
sbb
lret
loop
lods
clc
push
out
cwtl
inc
xor
or
xlat
stc
add
mov
push
data16
xor
inc
iret
out
dec
add
out
inc
xchg
inc
outsl
push
push
lds
push
roll
jne
sub
lods
mov
out
je
and
xchg
cmc
fcoms
adc
mov
pop
mov
dec
or
jne
jb
push
xchg
jle
inc
push
pushl
shlb
cmp
dec
lods
jo
dec
daa
sarb
popa
inc
xor
insb
rcl
sti
cltd
inc
aad
push
ss
mov
pop
mov
hlt
fcomps
jl
lock
cmc
add
ja
in
adc
mov
outsb
in
mov
jecxz
int
rcll
jg
dec
lds
cmpsb
int3
jl
int3
aaa
sbb
xchg
pop
popf
ja
cmp
mov
icebp
cmp
jns
push
mov
mov
mov
inc
mov
push
jbe
out
push
test
js
push
sub
stos
sti
stos
fs
jmp
mov
sbb
fimull
enter
jne
mov
adc
cmp
fwait
sbb
inc
daa
adc
ljmp
sbb
mov
ss
aad
out
mov
jle
xchg
mov
hlt
imul
lods
mov
push
ret
sbb
and
repnz
clc
shlb
push
ss
jne
fstpl
add
dec
fcom
ficoms
jo
ja
mov
sbb
lods
mov
insb
pop
leave
fdivrs
cmp
lcall
movsl
out
jo
and
mov
sarl
clc
stos
mov
sbb
movsb
mov
bndldx
mov
iret
inc
jp
test
in
stos
mov
and
sub
out
xchg
pusha
inc
pop
sbb
inc
and
and
into
rcrb
es
outsb
sub
into
aam
sub
pop
push
shl
insl
sbb
daa
mov
lret
xor
cmp
cmp
repz
loope
adc
stos
in
stos
jle
popa
dec
mov
mov
cmp
mov
push
xchg
mov
push
dec
jne
push
in
inc
rep
hlt
stos
ss
jno
add
scas
sub
dec
pop
outsb
aaa
mov
fdivrs
mov
pop
push
out
pop
add
sub
out
movsl
pop
mov
push
push
test
push
stos
inc
push
int3
dec
in
mov
aas
pop
xchg
mov
adc
mov
popf
sbb
pop
lahf
mov
push
scas
stc
imul
inc
adcb
cmpsl
push
adc
pop
xor
jae
outsb
mov
leave
cwtl
xorb
out
cmp
aaa
and
test
xlat
lret
mov
push
mov
cmc
stos
or
fnstenv
aas
icebp
mov
stc
dec
cmp
test
xor
adc
add
mov
push
leave
aad
xor
inc
cwtl
jnp
sbbb
ret
scas
xor
push
call
inc
cmp
mov
adcb
out
sbb
and
dec
popa
add
ret
inc
rcl
insl
out
imul
add
scas
jo
pop
pop
mov
sub
xchg
adc
int
das
pop
mov
cld
fiadds
lods
lahf
sub
pop
fiaddl
pop
icebp
fistpll
mov
jecxz
mull
push
popf
mov
gs
jnp
mov
push
add
mov
out
or
sub
in
ficoml
mov
mov
cmc
dec
ret
add
mov
jbe
movsl
pusha
in
outsb
adc
xor
dec
pop
sub
sbbb
cmp
imul
in
xchg
addr16
into
add
cmpsb
scas
sbb
xor
repnz
lds
aad
and
sub
jne
and
sub
dec
adc
cmp
add
sahf
aad
inc
or
jnp
pop
sub
mov
mov
inc
pop
or
add
fwait
pop
jp
bound
jl
xchg
int
cmp
jmp
sbb
cwtl
std
pop
sub
ret
push
push
jno
push
cmc
cmp
das
mov
out
push
sub
shr
sti
mov
mov
aas
cmpsb
test
icebp
jmp
push
mov
jmp
call
lret
fsubl
mov
cld
inc
lock
loopne
movsl
cli
lds
mov
add
fisttpl
into
cwtl
inc
mov
cmp
jb
fsts
decl
stc
sub
pushf
sbb
mov
adc
sar
add
inc
or
aam
xchg
dec
or
push
fcmovnbe
scas
add
sahf
adc
out
cmpsl
out
jne
sub
xchg
test
hlt
ja
xchg
add
push
shlb
loopne
lods
cmp
fsubr
enter
repz
sub
dec
lcall
xor
test
mov
popa
out
push
adc
movsl
mov
out
dec
and
cmc
test
dec
orb
dec
pop
sbb
mov
dec
js
xor
ja
nop
lods
loopne
je
and
inc
cli
dec
and
sbb
push
inc
or
push
stos
rcll
cmp
or
test
cmp
mov
mov
sbb
and
mov
aas
mov
or
filds
inc
fcmovb
inc
addr16
call
xchg
loopne
or
out
push
in
mov
out
cmp
add
js
dec
sub
adc
inc
orl
sbb
aad
add
stos
out
pop
mov
adcl
mov
popa
les
test
jecxz
in
push
jbe
cmp
imul
pop
pop
sbb
adc
xlat
out
mov
push
sub
fnsave
aaa
cmc
push
xor
ds
dec
xchg
adcb
mov
aam
push
adc
adc
pop
ret
xchg
push
dec
out
pop
jge
and
mov
dec
mov
xchg
jno
outsl
nop
ja
dec
mov
into
cmpsl
ds
int3
mov
iret
out
mov
push
xor
leave
sti
add
mov
adc
cmpb
popf
cmp
pop
pop
fndisi(8087
call
inc
mov
test
cli
adc
orb
mov
xchg
ret
enter
and
cmp
int3
add
adc
xor
int
xchg
sub
sub
movsb
or
gs
lods
jae
and
jecxz
inc
mov
cmp
test
push
cmp
jge
mov
mov
ret
sub
ret
sub
loopne
cmpsl
xchg
stc
inc
out
jno
push
jo
pop
xchg
xor
ss
adc
adc
insb
and
dec
and
jbe
lcall
jecxz
sbb
adc
into
jb
and
jne
incb
xchg
push
shlb
outsb
ret
adc
and
mov
inc
aaa
movsb
add
mov
cmpsl
cmp
shlb
add
inc
pusha
jns
ret
pop
jae
inc
outsl
xlat
into
negl
in
push
mov
cmpsb
ss
dec
out
ret
xchg
xor
xchg
data16
ja
jbe
aad
adc
inc
xor
cltd
add
je
cmpsb
stos
push
lahf
test
jg
mov
or
rcrb
sbb
lret
mov
dec
cmpsb
xchg
mov
xor
push
mov
loop
mov
xchg
xchg
fisubrs
out
loopne
in
dec
aam
stos
mov
fmul
push
pop
mov
inc
das
inc
mov
add
scas
mov
mov
je
scas
int3
and
cmpsl
jg
fisttpll
das
pop
cmp
jp
loope
not
imul
loopne
inc
lods
dec
mov
mov
pop
adc
sub
mov
clc
mov
cli
enter
inc
pop
xchg
rcl
xchg
movsb
add
je
fldl2t
dec
push
sub
xor
push
xor
dec
lea
mov
jb
mov
sub
out
in
dec
mov
nop
shll
dec
andl
leave
xchg
push
js
lods
or
xchg
push
jmp
adcb
insb
loope
inc
and
je
xlat
faddl
sbb
daa
cmp
scas
xchg
jp
push
pop
sub
lret
pop
adc
or
ljmp
cmp
xchg
jns
cld
loopne
pop
push
outsl
movsb
pusha
sbb
cmp
test
fisubrl
vpsubw
inc
pop
push
jo
push
pop
mov
arpl
inc
test
cs
cmp
out
fsubrl
jecxz
add
andl
xchg
xor
inc
mov
sbb
stos
jmp
push
add
dec
inc
mov
int3
xchg
jle
sbb
push
in
into
mov
pop
or
jno
insb
sbb
cmc
cltd
xor
xchg
in
cli
sub
call
ret
or
push
xchg
inc
jp
push
jns
in
lahf
jge
into
jecxz
mov
fbld
or
push
movsb
mov
lock
dec
lcall
cmc
ret
lret
mov
lods
mov
fldln2
push
outsb
int3
cmpsb
std
loope
mov
psubb
and
out
mov
jmp
cmp
clc
pop
sbb
inc
jb
int
add
ljmp
mov
add
hlt
lcall
add
pop
and
dec
mov
mov
xchg
pop
fmull
jl
xor
xor
or
hlt
pop
ret
add
roll
popa
inc
and
cwtl
xchg
addl
cmp
test
lea
xchg
out
sub
add
mov
shrb
dec
data16
xchg
and
clc
mov
sub
out
dec
push
loopne
fadds
scas
jp
outsb
xor
jg
mov
shlb
pop
sbb
stos
xchg
inc
test
push
pop
cmp
mov
mov
mov
fs
mov
and
adc
sbb
push
out
mov
pop
int3
clc
and
xchg
inc
incb
into
mov
sarb
test
and
cmovae
lahf
pop
jae
cld
outsb
adc
movsb
insl
inc
idiv
lret
repz
mov
dec
xchg
mov
mov
dec
loope
push
xchg
js
or
push
mov
ret
sub
and
pop
push
inc
dec
scas
loop
jo
cmp
ljmp
pop
roll
mov
arpl
lea
enter
mov
out
or
pop
dec
les
ds
xchg
push
sub
add
into
add
ret
stos
mov
dec
jno
ds
push
rcrl
sahf
out
jge
test
shll
sbb
fcmovne
fiadds
dec
adc
jp
pop
mov
sub
mov
push
in
ret
or
movsb
ljmp
dec
pop
movsl
push
loop
hlt
push
jae
nop
lret
xor
sbb
stc
sbb
or
insl
imul
cmpsl
pop
insb
mov
dec
mov
xor
dec
mov
mov
sbb
sub
pop
jecxz
mov
and
mov
dec
lods
mov
loop
ret
jmp
jge
das
rcrb
fmuls
loope
dec
cmp
mov
pop
pop
pop
dec
inc
repnz
imul
repz
shlb
sti
stos
add
icebp
scas
sahf
jp,pn
add
imul
and
xchg
xor
mov
sarl
pop
add
popf
and
test
adc
lea
mov
ss
int
xor
aaa
pop
inc
into
insl
mov
iret
pushf
fsubr
sub
fisttps
pusha
test
insl
data16
test
jbe
adc
aam
mov
jmp
mov
in
xchg
iret
xchg
rorb
shrl
enter
or
shlb
movl
hlt
xchg
das
xlat
movsl
lret
sbb
stos
mov
pop
lret
mov
test
ror
out
dec
ljmp
in
sete
sub
loopne
jl
mov
nop
rcrl
push
sbb
fnsave
jmp
or
cwtl
jecxz
rorl
clc
mov
jp
out
xor
inc
cli
and
subb
push
lods
repz
lahf
mov
cmpb
pushf
test
cltd
dec
cli
xor
pusha
and
cwtl
inc
dec
jp
scas
push
clc
xchg
jno
test
or
cmp
rolb
sub
cmp
shr
xchg
das
and
roll
dec
xor
cmpsb
std
inc
ror
inc
daa
stos
mov
dec
movb
dec
data16
dec
push
out
push
dec
rol
das
idivb
ds
icebp
lret
sub
jne
xchg
sbb
iret
fsubr
add
aam
jbe
inc
dec
jmp
adc
iret
push
iret
popa
cli
gs
xlat
jbe
adc
dec
fisubs
movsl
outsb
xchg
jl
jo
mov
jecxz
add
pop
fwait
repnz
pop
popa
imul
jbe
mov
dec
fs
mov
adc
push
icebp
cltd
pop
std
out
enter
xor
sbb
arpl
icebp
sub
pop
dec
jle
jg
mov
push
mov
mov
xchg
dec
out
ret
scas
xor
test
jns
flds
add
push
ss
sub
shll
lods
xchg
mov
nop
sub
dec
inc
andl
cwtl
cmp
movsb
loopne
adc
inc
mov
std
adc
les
fstps
add
sub
dec
shrb
ret
enter
cmp
jge
mov
ja
push
push
push
enter
dec
push
dec
fistl
ret
popf
jb
aad
xlat
mov
idivb
mov
cs
scas
cmp
dec
arpl
ja
outsb
cmpsb
rcr
lret
aam
pop
testb
fnstenv
pushf
push
add
mov
mov
mov
dec
repnz
sar
mov
mov
jp
stc
or
je
jae
cmp
lret
loopne
bnd
cmpsb
fistl
mov
adc
fwait
xor
jae
iret
mov
sbb
mov
xchg
push
adc
das
push
and
sub
lahf
shlb
les
jl
or
xor
lock
sub
push
outsb
inc
je
int
xchg
enter
mov
hlt
cmp
mov
sub
mov
push
test
out
mov
and
fisubrl
fs
mov
lods
mov
xchg
xor
int3
lcall
mov
mov
sub
mov
or
or
pushf
and
mov
push
iret
pop
out
xchg
mov
jmp
cld
shlb
mov
into
enter
roll
add
xchg
cmpsl
pop
test
push
jno
xor
ja
push
pushf
or
fdiv
cli
xchg
lea
rol
sub
aam
pop
adcb
or
pop
iret
push
sti
push
cmp
pop
cmpl
out
push
pop
es
add
xchg
sbb
out
test
add
popf
cmp
testl
mov
jl
mov
fsub
aad
jmp
adc
push
dec
or
mov
mov
lret
orl
sub
popf
xchg
mov
repz
daa
jp
and
fstps
xchg
inc
movsl
movsb
loope
lret
aas
xchg
fwait
aad
mov
les
lret
lcall
adc
es
outsl
xor
and
jg
out
push
adc
sarl
cltd
pop
inc
sti
ljmp
stos
xchg
imul
pushf
out
xor
jnp
push
call
push
ret
fsubl
popf
sbb
cmc
sti
push
lds
dec
xchg
mov
jne
xchg
out
pop
xchg
aam
jbe
es
shlb
pop
cld
mov
mov
sahf
sub
mov
adc
shrb
push
and
imul
mov
xchg
xchg
jb
adc
es
pop
add
shr
cmp
rcl
arpl
xchg
mov
test
xchg
xor
outsl
dec
mov
stc
lret
clc
cmp
es
daa
fadd
dec
rcll
lea
js
jo
mov
jbe
mov
pop
out
xchg
je
mov
xchg
xor
jb
xor
xor
mov
pop
call
adcb
lret
or
out
push
xchg
cwtl
mov
call
mov
test
leave
cmpsl
lret
outsl
aas
fsin
pop
ficoms
or
and
sub
mov
jbe
into
mov
adc
outsl
dec
xor
pop
mov
pusha
mov
dec
pop
out
test
sbb
jl
out
push
jecxz
leave
xor
mov
jno
mov
dec
xor
fwait
loop
in
adc
inc
rcrl
add
jns
stc
fistpl
loop
push
rclb
jbe
jbe
cmp
test
jo
rclb
mov
aas
sub
lret
arpl
adc
fmul
dec
lea
fwait
mov
mov
jmp
and
sbb
xor
xor
inc
mov
in
lods
shrl
dec
mov
mov
test
inc
scas
sub
lret
pop
int
mov
shl
add
sub
rcrb
xchg
fcompl
shlb
popf
in
cwtl
xchg
jge,pt
cmp
into
addr16
rcl
and
mov
mov
cwtl
inc
push
pop
cli
imulb
sbb
cmp
insb
stos
mov
data16
xchg
in
clc
inc
je
loop
pusha
sub
pop
push
push
adc
sahf
pusha
mov
lret
leave
dec
sub
dec
imul
movsb
cwtl
fistps
leave
push
into
aaa
dec
cmp
cld
aaa
rcll
inc
xor
xchg
pop
outsb
sub
add
jnp
pop
inc
adc
ds
push
addr16
adc
mov
out
call
jne
testb
xchg
sbb
gs
ret
mov
adc
aad
fs
or
out
mov
in
repz
faddl
mov
or
push
dec
and
pop
repz
nop
xor
pop
jmp
in
cmp
push
es
leave
enter
lahf
pop
pusha
jnp
xchg
add
ja
push
insl
and
gs
cltd
jle
pop
out
adc
lock
out
mov
enter
pop
imull
cltd
xchg
jmp
and
cmp
mov
leave
push
cmpsb
sahf
mov
cli
add
inc
sarl
or
pop
sbb
add
pop
pop
xor
stc
mov
rol
sbb
dec
adc
push
jp
add
aad
insb
es
rol
or
mov
mov
sahf
imul
xchg
mov
dec
and
mov
data16
inc
bound
icebp
stos
loopne
xor
lea
xchg
and
xchg
test
or
add
aas
int
leave
sarb
sub
inc
cmc
push
sub
test
mov
outsb
dec
push
leave
iret
fimuls
and
mov
mov
lahf
xor
dec
cmp
inc
push
pop
lret
push
sbb
cli
mov
movb
cmp
or
into
ja
outsb
cwtl
mov
mov
test
aad
test
xor
or
repz
jg
aas
mov
xchg
dec
sbb
cmc
xchg
and
cmpsl
mov
sub
out
inc
inc
sub
dec
movsb
nop
aaa
mov
lods
shlb
shl
push
je
movsl
xorl
mov
int3
inc
dec
pop
hlt
adc
jmp
xchg
add
insb
cmp
or
push
xlat
and
ja
or
jl
jbe
in
lret
enter
push
xchg
dec
mov
jg
mov
or
sti
adc
stos
mov
jnp
clc
addb
addl
ret
loop
xchg
jp
ss
push
test
jmp
out
cmpsb
test
mov
mov
mov
sti
jo
jecxz
jbe
inc
pop
pop
xor
lods
pop
pusha
cmp
fs
movsl
xchg
inc
pop
push
inc
loop
jge
iret
mov
mov
xor
stc
push
adc
sub
add
mov
mov
dec
pushf
inc
out
and
push
nop
dec
add
add
lret
sbb
push
xor
fiadds
dec
in
xchg
push
pop
test
test
mov
xor
xchg
mov
xorb
mov
in
ljmp
xchg
test
das
repnz
lret
fsubrl
xchg
mov
add
lcall
iret
rol
lret
push
sub
daa
pop
mov
scas
dec
push
dec
xchg
jnp
sub
lock
int
cmpsl
cltd
in
jnp
cmp
shl
cmpsl
mov
lret
mov
popa
inc
mov
in
clc
out
icebp
or
cmp
add
jg
adc
xchg
inc
out
pusha
insl
pop
dec
sahf
or
xor
adc
cltd
stos
loopne
mov
push
ret
popf
mov
icebp
inc
xchg
xchg
jns
mov
aas
arpl
adc
cltd
dec
imul
loope
sub
test
loop
out
adc
adc
mov
mov
jl
cmp
lahf
js
mov
pop
clc
ja
insb
cmp
mov
out
lea
dec
popa
xchg
xchg
inc
pusha
add
sbb
out
mov
inc
mov
into
icebp
lock
cltd
out
add
adc
push
xlat
mov
push
add
jmp
inc
in
pop
push
or
out
ret
call
inc
mov
cmp
push
jns
outsl
jmp
sub
xor
cmp
inc
in
lds
lret
xchg
popa
push
filds
mov
push
clc
xchg
testb
cmp
lods
mov
sti
or
scas
dec
mov
sub
jp
add
stos
je
pop
push
xchg
loopne
lret
shr
mov
and
jg
outsl
xchg
xor
dec
into
shl
sbb
insb
adc
xlat
pusha
ficompl
test
xchg
cmc
loope
js
insb
sarb
or
adc
inc
ret
aaa
xchg
cmpsl
mov
in
sbb
push
loop
inc
xlat
jae
push
inc
sub
out
sarb
insb
push
fcompl
stc
sub
adc
dec
pop
mov
out
sub
out
and
inc
dec
out
pusha
aad
xor
push
orl
push
adc
cwtl
sbb
xchg
xchg
fldl
cltd
sti
test
add
add
shl
adc
mov
adc
mov
in
lret
xor
jmp
mov
insl
fst
cmc
push
sahf
and
or
push
xchg
aad
mov
push
sbb
sub
inc
ljmp
in
adc
je
or
mov
imul
and
inc
jnp
xlat
andl
daa
push
popf
push
iret
jmp
test
fmulp
dec
int3
xor
std
fnstenv
shrl
jp
scas
mov
mov
xchg
daa
push
call
add
dec
jle
aas
dec
das
mov
add
lods
dec
int
xchg
into
pop
aaa
cmp
lret
jb
push
and
xor
insl
pushf
sahf
xor
xchg
sub
lret
test
add
addr16
rcr
inc
ret
sbb
fwait
into
sub
clc
dec
jo
or
push
shrl
mov
mov
into
cmp
insb
jns
push
shll
or
sahf
pushf
cmp
scas
inc
cltd
aaa
andb
fwait
shrb
test
call
xchg
xchg
mov
shrb
xchg
xchg
orl
repz
les
stos
adc
ret
addr16
rcrb
jmp
xchg
jbe
sbb
push
fsubl
jns
push
int3
fwait
incb
jbe,pt
sub
inc
add
push
dec
mov
push
test
xchg
cs
rorb
cwtl
cmp
mov
add
sub
sahf
popa
shlb
mov
shrb
fwait
xlat
dec
add
sbb
add
push
lret
adc
push
jns
nop
aad
jno
bound
pop
out
jnp
mov
add
mov
or
in
loope
aam
inc
xchg
bound
insb
or
xchg
push
sbb
inc
insl
cmp
aaa
cltd
clc
jne
sti
or
lret
push
cmp
or
outsb
lret
lret
mov
xchg
mov
jb
push
mov
fcmovne
jns
cmp
adc
ds
jb
lret
mov
lea
pop
loop
inc
dec
rclb
jns
adc
js
xor
leave
mov
sbb
add
xchg
push
mov
mov
cmp
movsl
scas
ret
mov
pop
test
push
rcrb
add
lret
xor
fistpll
push
movsb
adc
imul
pop
cmpsb
out
adc
fldl
sub
add
push
int3
dec
aaa
jmp
jns
or
cli
cs
cmp
push
insb
cmp
jmp
daa
rolb
xchg
xor
mov
test
xchg
outsl
shll
pusha
pop
lret
call
imul
mov
aad
jns
ljmp
out
shlb
pop
mov
cld
add
call
std
push
xor
int
ret
scas
repz
push
jle
mov
or
clc
add
inc
outsb
movsl
out
push
mov
mov
ficoms
and
je
adc
mov
scas
mov
add
jge
mov
cwtl
gs
or
jno
adc
and
loopne
jle
outsl
push
and
out
push
test
or
add
mov
fucomip
sbb
insb
xlat
ret
andl
xchg
push
and
cmp
enter
rcr
push
pop
or
inc
mov
lret
aas
in
dec
shlb
mov
jmp
clc
xchg
jbe
mov
cli
es
push
mov
imul
pop
loop
fwait
push
cld
dec
add
sub
rorl
xorb
pop
inc
cs
mov
xchg
roll
push
add
jmp
sub
and
or
mov
push
lea
pop
cmpsb
les
bnd
sbb
push
xor
lods
jl
rcrb
aam
dec
push
sbbl
out
loop
inc
push
sti
xchg
shl
pushf
mov
out
mov
dec
fsubrl
cld
sbb
jb
mul
out
xchg
call
pop
cmp
cmpsb
movsl
mov
sub
cmc
lret
jae
hlt
pop
push
pop
jmp
push
and
test
loop
sbb
and
jo
addr16
fwait
push
movsb
cmp
dec
or
mov
outsl
adc
dec
lret
mov
sbb
hlt
lret
jle
rorb
nop
jg
cmp
and
mov
iret
pop
push
mov
and
out
add
imul
push
ljmp
clc
mov
inc
mov
sbb
mov
push
loopne
aas
push
sub
xor
xor
and
fnstcw
xor
das
dec
xlat
xchg
add
jnp
mov
pusha
adcb
xor
mov
movsl
xchg
sub
push
dec
sub
test
testl
imul
jb
aas
ja
rolb
and
sbb
idivb
mov
jne
sub
dec
jp
andb
xchg
js
pop
in
arpl
inc
out
mov
aad
mov
nop
sub
push
mov
test
sbb
mov
movsb
sbb
inc
mov
mov
or
fwait
mov
int3
ds
push
inc
lcall
outsl
pop
sbb
inc
int3
dec
add
test
push
repnz
in
mov
arpl
jne
or
into
sub
push
mov
scas
adcb
mov
jle
ss
sub
push
stos
imul
out
xchg
cs
out
fcomip
movsb
push
xchg
adc
lahf
or
push
add
test
pop
or
mov
and
adc
and
lidtl
pop
push
sarl
fstps
xchg
or
cs
andl
ret
out
ds
cmpsb
sub
repnz
das
add
push
or
or
mov
add
sahf
inc
aaa
dec
inc
jbe
cmc
sbb
enter
fcom
fnstenv
push
fldt
xchg
arpl
and
xor
sub
inc
and
fistpl
test
jecxz
add
xchg
xlat
ret
mov
aaa
jns
inc
aam
pop
mov
dec
jle
sar
into
xor
push
lahf
sarl
repnz
mov
xchg
out
orl
lcall
adc
negb
aam
mov
adc
xor
es
out
aas
lret
sub
mov
mov
inc
sbb
lcall
fdivrl
sub
add
fwait
in
inc
iret
fsubs
adc
movsb
dec
mov
fmull
push
sbb
cmp
dec
ja
push
inc
inc
es
das
movsl
int
jg
scas
jmp
adc
push
mov
cltd
xchg
into
rcrb
and
fcmovbe
mov
dec
mov
sti
fwait
mov
test
push
push
lret
push
shll
mov
xlat
sub
outsb
jbe
stos
dec
jns
xor
jo
or
push
pop
jno
int
sbb
mov
cwtl
cs
or
fwait
dec
clc
dec
pop
push
inc
int3
rcl
lods
xchg
sub
icebp
in
fld
sbb
jmp
arpl
mov
push
or
inc
mov
pop
pop
or
cli
jp
sub
jl
adc
stos
sub
test
jne
sarb
mov
popa
sub
insb
cmp
rcrb
sahf
push
and
nop
imul
jno
push
xchg
int3
cmpl
push
or
push
hlt
test
mov
xchg
inc
or
call
jle
enter
in
cli
int
jmp
dec
inc
sub
sbb
cmp
mov
inc
ret
rclb
fisttpll
pop
pop
cmp
stc
cmpsb
adc
loop
inc
add
clc
outsb
jns
lea
mov
mov
jne
std
pop
lret
xchg
mov
movsb
pusha
in
pop
icebp
mov
gs
into
loope
cmp
das
xchg
test
stos
xor
mov
test
adcb
sti
call
push
sub
movsl
mov
push
jne
dec
ret
mov
jne
call
into
lcall
fs
sbb
mov
cmc
and
push
in
hlt
or
sahf
scas
mov
mov
mov
mov
mov
add
adc
movsl
fwait
jle
rolb
pop
cmp
inc
push
lods
mov
mov
rorl
int3
ret
xchg
in
test
push
push
faddl
push
loopne
inc
cmpsb
ljmp
test
xchg
xor
js
mov
cmp
cwtl
mov
std
cmp
adc
pop
addr16
sub
icebp
xchg
lcall
insl
pusha
xchg
mov
jp
lcall
adc
or
xor
ret
pusha
adc
lret
adcl
in
inc
inc
jmp
test
aaa
mov
mov
cmp
jo
call
ljmp
in
in
fcmovnu
not
xchg
popa
in
mov
arpl
mov
aad
push
jno
in
push
lret
xchg
fst
jnp
movsb
cltd
gs
cmp
sub
sbbb
rorb
xchg
add
out
daa
jg
lds
xchg
xor
je
mov
sub
fcom
jg
adc
pop
xchg
dec
sarl
mov
sub
int3
iret
in
cmp
xchg
addr16
test
jae
cmpsb
jbe
inc
add
add
aas
mov
inc
aad
jbe
rorl
in
mov
cmp
and
add
push
xchg
in
out
push
shll
adc
sti
inc
xor
push
xchg
movsl
pop
and
or
repz
lds
imul
je
push
dec
push
push
out
adc
aam
xchg
cmp
stos
leave
loopne
fildll
cmp
pop
cmp
in
ds
ss
cmp
jns
mov
add
aaa
mov
shrb
outsb
test
mov
and
ret
lock
cmc
xlat
mov
dec
imul
outsl
jp
out
out
mov
dec
sub
inc
cmp
mov
popa
xlat
inc
out
xchg
xchg
add
sbbb
imul
fmull
test
adc
or
repnz
xchg
flds
pop
filds
into
out
push
ljmp
adc
ja
cld
js
sar
subl
pop
bound
scas
subb
mov
fcomps
js
ds
sbb
mov
lret
mov
in
leave
sar
sub
sbb
sbb
popf
mov
into
or
std
js
jmp
jns
xchg
add
shrb
xor
xor
ret
jb
cmpsb
fwait
insb
adc
pop
icebp
fisubs
into
lret
jne
push
ljmp
add
dec
in
rcrb
int3
cmp
sbb
in
insb
fnsave
jns
imul
mulb
xchg
xchg
fs
xchg
lock
push
xlat
inc
fcomps
jno
push
cmp
ss
iret
test
hlt
ret
pop
popf
test
pcmpeqw
ljmp
call
dec
and
lea
dec
xchg
inc
addr16
daa
or
icebp
bound
dec
fstps
into
pop
lods
sub
js
out
xchg
pop
cwtl
imul
mov
push
loopne
mov
scas
in
mov
pop
lret
in
lea
pop
cmpl
rdmsr
cltd
inc
dec
mov
cmpsl
mov
ss
hlt
dec
test
xor
pusha
leave
cmp
pextrw
mov
mov
je
push
add
ret
jne
push
dec
jb
cld
sbb
add
mov
dec
je
ret
lods
push
les
cmp
pop
call
sbb
sbb
jnp
popa
fistpl
faddp
pop
leave
pop
cmpl
out
aad
cmp
popa
lret
pop
iret
rcll
shr
cmp
jle
mov
repz
mov
lahf
mov
aad
repnz
test
sti
cmp
movsl
cld
sbb
data16
sbb
lret
jns
scas
cli
adc
push
xor
js
fwait
mov
push
pop
mov
adc
mov
mov
rcrl
in
shlb
popf
adc
dec
lods
ljmp
xchg
mov
nop
add
jne
aas
mov
cmpsb
mov
ss
add
fwait
aam
push
into
dec
mov
insb
sbb
rcl
iret
ret
pop
popf
cmp
ret
shrl
cmc
mov
mov
jne
lea
adc
loop
lret
es
mov
ror
push
into
sahf
fs
test
dec
into
push
jnp
leave
jns
push
bswap
fistl
jge
out
int3
xchg
inc
or
out
cld
frstor
inc
pusha
sub
jb
js
fxch
cmp
scas
mov
push
and
sahf
fsubr
test
lock
aad
mov
pop
jmp
out
push
xor
daa
imul
cltd
popa
lcall
push
mov
jbe
leave
xchg
shlb
pushf
fisttpl
mov
pop
shrl
cmpsl
push
and
or
and
and
jle
mov
clc
ja
push
into
orb
mov
out
stos
sub
xchg
aas
push
popf
ret
addr16
xchg
sbb
iret
mov
cmp
adc
xchg
xor
sahf
ret
add
inc
mov
jo
in
mov
xorl
je
inc
dec
jmp
std
or
in
sub
movsl
out
mov
imul
pushf
mov
sub
mov
jbe
pop
mov
stc
ficomps
push
loope
jmp
into
mov
inc
and
sub
int3
add
xor
testb
xor
out
leave
in
jmp
aad
mov
ficoml
mov
push
sti
mov
push
enter
fmull
out
aad
hlt
or
inc
out
loop
mov
out
jne
sti
subl
movsl
aaa
loopne
push
mov
add
and
mov
sarl
adc
cs
xchg
pusha
shrb
enter
mov
mov
or
push
shlb
out
push
mov
sbb
dec
popa
mov
bound
jp
lret
pop
sub
push
mov
out
push
sbb
push
pop
xor
mov
ss
dec
repz
out
mov
outsl
push
xchg
mov
or
rcll
sub
add
jg
and
xor
test
sarl
cmc
cmp
sbb
inc
iret
mov
pop
xor
or
or
dec
inc
movsl
adc
pop
lcall
cld
rclb
arpl
lock
divb
outsl
fmulp
or
and
int
test
ret
mov
xchg
fdivs
movsb
rcl
aad
gs
xchg
test
or
jmp
pop
add
ss
dec
mov
xchg
sub
cmpsb
jo
aam
aas
inc
ljmp
add
rorb
enter
fs
inc
ret
mov
arpl
cs
daa
lahf
xchg
stos
xchg
aad
pop
mov
loope
jp
jb
sarb
cmc
dec
leave
add
add
xchg
popa
movsl
mov
mov
aaa
mov
rdpmc
and
cs
rcll
push
xchg
lcall
dec
jns
xchg
mov
scas
pop
sub
addr16
cld
xchg
pop
loope
mov
cltd
xchg
sti
push
fmull
test
mov
push
inc
add
sar
test
imul
shl
sub
xacquire
cmp
jns
mov
out
lods
mov
push
mov
mov
aaa
les
lock
fstl
jbe
adc
ret
pop
add
test
test
cmp
rcrb
test
xchg
xor
fwait
hlt
mov
mov
stos
sbb
movsl
xchg
xor
jno
inc
mov
sbb
dec
fadds
mov
nop
and
ljmp
push
dec
hlt
in
pop
in
and
sbb
add
fidivs
lock
lret
push
pushf
ss
jns
or
ret
mov
rcll
xorb
call
mov
aad
xchg
lock
inc
xor
das
scas
fdivs
out
push
cwtl
out
sub
ret
shll
sub
mov
and
inc
clc
or
cmp
inc
popf
xor
clc
cltd
jbe
xor
pop
jno
scas
mov
stos
mov
dec
cmpsb
xchg
out
mov
lea
mov
mov
fwait
adc
mov
movsl
lods
push
addl
rcrl
cmpsl
fidivrl
into
push
xchg
jnp
pusha
mov
addr16
dec
dec
add
popa
imul
add
lret
sub
dec
adc
dec
push
push
mov
cwtl
fs
in
je
and
mov
scas
mov
push
out
mov
or
je
jecxz
dec
iret
dec
xlat
out
insb
jmp
rorl
dec
stos
sarb
insb
mov
ficoml
in
sub
xchg
call
mov
jbe
fwait
sbb
xchg
pop
push
int3
inc
jp
std
shll
xorb
xor
call
fiaddl
ds
fwait
out
xchg
add
jg
je
fdivs
pushf
or
fdivr
pusha
mov
dec
jl
cmp
xchg
rcl
pop
out
kmovd
dec
es
out
outsl
ss
sub
stos
add
int
ret
movsl
pop
dec
mov
lret
cmp
shr
or
cmp
jbe
inc
testb
push
clc
dec
or
ror
pop
dec
and
gs
sahf
lds
pop
jmp
and
add
push
cmp
addb
jne
inc
dec
pop
jmp
dec
cmpsl
cs
je
fbstp
les
fcompl
jg
adc
add
leave
push
adc
xor
cmpsb
and
iret
lods
xchg
outsl
mov
rcrb
cld
icebp
inc
pop
lret
es
fs
leave
and
dec
shlb
mov
popf
dec
bound
loope
aad
mov
mov
add
in
xlat
xchg
and
leave
mov
popa
push
sahf
cmp
xchg
aad
inc
pop
xchg
dec
in
add
pusha
or
ret
xchg
clc
sub
lods
push
sbb
push
vpacksswb
mov
rclb
sbb
dec
jp
sub
lds
fsubrl
leave
jae
lcall
out
xor
dec
iret
or
das
sbb
imul
repz
cmpsl
roll
adc
shlb
movsb
ficomps
pop
fwait
int
cmp
inc
insb
test
jns
clc
cli
push
jb
mov
sub
sbb
fisttps
push
adc
push
mov
sarl
clc
nop
dec
fcom
jmp
outsl
mov
cwtl
cwtl
sub
cmp
cli
xchg
push
pushf
into
stos
lahf
and
xor
add
cmpsb
mov
lahf
pop
adc
lea
and
out
outsl
lcall
ss
mov
je
dec
repz
xchg
adc
xchg
sbb
add
outsl
sub
mov
xor
and
repz
lret
enter
push
jmp
popf
mov
mov
mov
lea
jmp
or
cmp
jne
aad
scas
in
stos
loop
divb
add
push
mov
outsl
ljmp
or
xchg
mov
setle
or
cmpsb
push
adc
sbbl
push
pop
xchg
sub
mov
mov
push
mov
push
mov
mov
sub
icebp
into
mov
add
loopne
and
adc
cmp
push
insl
xchg
mov
dec
sbb
jecxz
add
or
cmp
xchg
sbb
enter
and
mull
jne
and
sub
int3
add
lods
mov
ss
sahf
pop
sbb
lret
xor
mov
mov
pop
fs
adc
pop
cmp
xchg
lods
test
ror
notl
or
jp
or
lret
sub
and
fisubl
push
fs
pop
mov
or
test
nop
sbb
jle
push
adc
add
inc
pop
inc
lret
xchg
out
pop
into
xor
or
xchg
mov
daa
mov
jns
mov
sbb
xor
rcrb
lret
xorb
mov
lock
and
push
push
mov
cs
pop
gs
jmp
xchg
in
es
cli
clc
int
lret
shl
test
pop
xchg
loope
xor
push
popa
jge
push
jbe
pop
mov
jecxz
fildl
pop
cmc
lds
pop
jg
adc
adc
out
xor
fdivr
flds
scas
aaa
cmpsb
sahf
jle
and
fsubs
adc
out
push
sub
cmpsl
into
data16
nop
test
sti
into
push
jmp
jbe
mov
loop
mov
adc
movsb
pusha
popf
dec
fistpl
repnz
dec
sbb
notb
mov
or
sti
cmp
jmp
dec
cwtl
inc
es
inc
fmul
rcr
xor
mov
jnp
add
push
and
mov
jecxz
sub
or
pop
subb
jns
sbb
aaa
add
clc
pop
mov
pop
out
xchg
push
rcrb
push
or
dec
insl
fcoml
xchg
add
mov
push
pop
mov
in
subl
loopne
xchg
out
push
or
sbb
nop
mov
fmull
fwait
jne
outsl
xchg
movsb
add
bound
ret
dec
stos
fstl
in
imul
ja
sbb
push
test
fcomip
sub
ljmp
xchg
int3
xlat
test
lea
push
cltd
out
in
rolb
cmp
ss
ds
xchg
sub
sub
push
daa
and
jle
sbbl
lods
lcall
cmp
popa
xchg
testb
inc
mov
inc
add
rcll
shl
dec
jne
mov
xchg
xor
je
std
ja
cli
jns
or
aaa
pop
stos
repz
xchg
shlb
sub
loopne
jl
in
test
sarb
and
xchg
imul
xor
inc
or
arpl
inc
jecxz
mov
push
dec
loope
jnp
jle
lock
or
mov
sbb
ret
les
adc
out
shll
nop
fsubs
imul
mov
xchg
dec
or
out
push
and
aas
cmp
dec
ljmp
adc
or
mov
rcrb
test
ret
pop
push
xchg
in
lock
mov
push
bound
lcall
aam
mov
add
sbb
adc
cwtl
push
ret
popa
cmpsl
push
icebp
int
mov
rorl
adcb
push
out
mov
jne
loopne
rcl
jg
movsl
repz
or
fwait
test
jb
notl
and
out
ret
test
loope
out
cmp
fs
mov
call
and
mov
sbb
cmp
aaa
pop
pop
mov
test
mov
sub
push
pop
daa
iret
movsl
cmpsb
cwtl
adc
mov
add
inc
push
jno
xorb
pop
add
mov
dec
push
cmpsl
ja
jecxz
dec
rol
pop
and
pop
lods
push
lea
mov
int3
cmp
test
pop
mov
jg
fbstp
ret
rcll
adc
sbb
imul
mov
pop
and
sahf
push
dec
mov
andl
rorb
jnp
xchg
das
sbb
movsl
adc
in
adc
mov
mov
dec
inc
fidivs
cmpsb
in
jns
cmpsl
ret
sub
movsl
outsb
cmp
dec
dec
scas
dec
lods
popf
or
inc
jae
mov
adc
scas
mov
and
js
cli
jl
mov
and
and
mov
test
test
cmp
xchg
jecxz
enter
or
ds
sub
test
cmp
xchg
mov
insb
dec
pop
icebp
sub
arpl
mov
cmc
xorl
lods
lods
and
sub
roll
sbb
add
cmpl
repz
mov
and
ss
pop
sahf
xchg
iret
stos
add
dec
loopne
mov
cli
mov
ljmp
xlat
enter
stos
idiv
fwait
mov
add
adc
popa
fs
aaa
jno
into
daa
inc
fcomp
dec
mov
adc
and
lret
orb
dec
sbb
pushf
pop
xor
and
mov
das
out
or
mov
imul
dec
insl
xor
aas
mov
xor
gs
imul
cmpsl
popa
cmpsb
test
cmc
dec
cwtl
push
popf
mov
and
scas
jns
rcll
mov
into
out
mov
fwait
lret
push
mov
movsb
out
std
inc
dec
es
les
jmp
jbe
rol
mov
push
clc
pusha
enter
xor
fistps
int3
inc
out
and
std
aam
call
es
dec
xchg
inc
push
inc
jmp
xchg
xlat
mov
xchg
xchg
mov
ficoml
iret
mov
or
ljmp
rol
orl
setl
add
bnd
dec
test
or
sub
movsb
out
in
cltd
rcrl
repnz
lods
mov
dec
pop
sub
jmp
lods
sti
push
cmp
and
faddl
jne
insb
addr16
or
push
jae
mov
or
movsb
into
xor
inc
adc
and
mov
mov
imul
aam
and
or
shrb
dec
call
xchg
xchg
and
push
pop
rclb
xchg
arpl
imul
jae
sbb
iret
movl
testl
inc
dec
cmp
add
arpl
xchg
mov
push
or
jecxz
inc
mov
fistl
sub
les
sbb
mov
into
outsl
jns
cltd
cmc
push
leave
int3
mov
xchg
mov
dec
popf
enter
js
dec
or
into
test
mov
push
loopne
adc
lock
jo
mov
data16
sbb
lcall
repz
pop
aad
stc
jo
xchg
cmpsb
dec
out
push
adcl
loopne
jge
mov
add
fldl
out
or
in
inc
int3
sub
out
das
lock
clc
cs
in
stos
pop
sub
movsb
cli
test
sbb
insl
pop
mov
loopne
xchg
adc
shll
rcrl
add
rclb
test
test
cltd
shl
sbb
pop
daa
fcmovnbe
dec
sbb
cmp
jle
mov
xor
in
stos
mov
mov
cmp
clc
mov
out
pop
out
dec
lea
in
in
cmp
stc
push
xchg
jg
lret
xor
cmc
sub
outsl
sub
lret
inc
pop
mov
in
sbb
xor
push
in
lahf
pop
and
lcall
cmp
cmp
jle
xor
rolb
cmp
push
in
xchg
hlt
sub
mov
or
xchg
xor
call
sbb
fisubs
adc
and
cwtl
inc
mov
enter
dec
xor
rcl
push
lahf
inc
pop
sbb
push
pusha
jmp
filds
out
push
push
push
loop
icebp
mov
stc
rorl
inc
pop
inc
movsl
insb
xchg
sub
sbb
rcll
jg
push
lods
imul
xchg
lock
pop
jl
jle
ja
xchg
add
js
movsl
popf
shll
jo
fadd
dec
rorb
ja
leave
js
mov
xlat
or
rcl
sbb
push
in
xchg
jo
das
cmc
ss
lds
in
outsb
imul
mov
fwait
add
push
push
sbb
mov
xor
shll
dec
imul
ljmp
mov
repnz
push
push
in
xlat
ja
pop
shrl
shlb
into
inc
subl
or
jp
je
inc
sub
roll
out
nop
scas
add
add
andb
stos
frstor
push
stc
enter
loopne
mov
fildll
shl
faddl
pushf
dec
js
mov
push
mov
sub
cmp
repnz
mov
xor
or
out
mov
jmp
ret
adc
pop
mov
out
iret
jmp
dec
or
pop
int3
incl
mov
test
out
in
into
sar
mov
lahf
jecxz
fsts
mov
les
cmp
push
fists
shl
aam
add
sbb
imul
repnz
out
inc
test
lods
js
push
push
jb
shll
gs
ds
stos
add
dec
pop
mov
leave
fisttpll
and
jnp
cltd
mov
jecxz
mov
data16
adc
mov
sti
sbb
repz
sub
test
push
push
or
scas
cld
cwtl
xorl
lods
xchg
lcall
jmp
cmp
cmp
scas
aaa
es
sar
stos
into
iret
fisttpl
sub
sub
fbld
inc
dec
bound
dec
mov
rorb
fwait
aam
jecxz
push
mov
adc
clc
pop
xchg
add
scas
inc
add
xor
mov
loop
xadd
xchg
ja
jnp
int
adc
insl
pop
aad
aam
pushf
ficoms
jb
push
fldl
dec
out
dec
sbb
popl
jmp
out
pop
leave
pop
xchg
pop
sub
fisttpll
pop
lock
fwait
sub
or
xchg
aam
subl
jge
mov
pushf
dec
jnp
adc
stos
dec
push
mov
int
cmpsb
pop
mov
loop
ljmp
nop
sar
dec
loope
cmp
xchg
sbb
lds
dec
and
push
inc
aaa
movsl
jecxz
shll
cmpsb
bound
ds
push
sub
dec
jle
lahf
pop
jp
add
or
ljmp
xchg
xlat
cld
sbb
addr16
mov
pop
push
loop
dec
dec
ret
inc
divb
daa
into
and
cmpsl
outsl
flds
dec
scas
mov
test
push
icebp
dec
adc
cld
adc
or
dec
test
pusha
into
jne
daa
add
jb
clc
js
es
cmp
pop
out
in
int
xor
nopl
pop
enter
loop
mov
push
xchg
mov
fdivrs
xor
aam
movsl
push
mov
xchg
not
dec
gs
adc
sbb
push
inc
push
inc
test
add
dec
shrl
mov
xchg
push
pmaxub
dec
mov
cmc
and
in
inc
jno
stos
fistl
inc
cld
jbe
ds
sbb
scas
shlb
pop
test
fdivrl
lock
push
std
xchg
popa
imul
testb
inc
loopne
lea
sub
push
mov
arpl
loopne
or
loop
shll
inc
idivb
add
push
loopne
sbb
in
call
push
pop
cmp
cmpsb
xorl
dec
pop
lahf
test
rcl
out
xchg
shl
mov
adc
push
cs
movb
adc
mov
out
repz
dec
xor
mov
lods
or
xchg
jecxz
mov
pop
jb
unpckhps
xchg
mov
gs
push
outsl
nop
enter
fcomps
lock
es
not
sub
imul
xchg
cmpsl
pop
dec
dec
xor
mov
loop
into
test
sbb
sbb
xchg
and
les
out
mov
adc
inc
faddl
dec
test
pushf
ret
pop
cwtl
out
arpl
xlat
mov
and
daa
xchg
sub
out
aam
xor
lds
int
in
adc
scas
mov
or
sbb
jmp
inc
imul
mov
add
test
loopne
rol
push
pusha
test
movsl
movsb
jbe
push
or
jp
push
ja
arpl
nop
mov
add
popl
stc
pushf
mov
sahf
out
jae,pt
xchg
jbe
xchg
mov
mov
jl
in
les
loop
pop
xchg
test
into
lret
jae
dec
mov
out
js
test
cmc
push
or
xlat
mov
dec
sub
and
cmp
and
cmpsb
mov
fcom
cwtl
push
cld
xchg
pop
jne
add
push
mov
jno
ret
test
push
mov
lods
inc
mov
sbb
sub
es
mov
loopne
adc
adc
cld
out
xor
cmpsl
push
mov
sbb
sub
xchg
dec
ja
nop
push
imul
xor
jge
daa
lret
hlt
ret
xchg
push
ffreep
shrb
fidivl
mov
pop
repz
inc
stos
mov
pop
dec
xor
sarl
movsb
lods
and
retw
sub
test
add
push
lock
jmp
xchg
xchg
cltd
push
mov
mov
das
gs
es
inc
push
adc
in
mov
jns
and
and
mov
jo
xchg
mov
push
int
push
cmpsb
lcall
push
mov
pop
dec
or
cmp
cmp
ja
int3
cmp
dec
mov
inc
stos
mov
das
dec
aas
lea
pop
sbb
xlat
jnp
mov
and
addr16
into
mull
xor
ja
incb
imul
adc
into
outsl
scas
xor
out
ret
cld
xchg
repz
and
cltd
adc
and
lret
pop
sbb
adc
or
adc
and
popf
cwtl
outsb
fisubs
out
jecxz
jns
iret
sub
popa
pop
inc
out
adc
jae
shrb
js
jmp
push
mov
inc
mov
xchg
fs
or
imul
lret
fwait
xchg
fs
xor
xlat
insb
pop
in
or
ja
scas
cwtl
sub
mov
sbb
or
enter
jl
pop
stc
or
in
push
mov
sahf
adc
dec
addr16
fistpll
daa
nop
push
es
jae
mov
dec
jnp
in
inc
add
sub
aas
lods
das
cmp
push
sbb
adc
cmpsb
fists
jp
xchg
xchg
mov
orl
mov
mov
imul
loopne
sub
lds
push
sub
push
cmc
push
cmpl
arpl
jge
mov
ljmp
pop
inc
in
xchg
sub
dec
dec
mov
or
out
xchg
sti
dec
gs
rcll
sub
jle
repnz
fwait
pop
lret
add
mov
sbb
push
ret
mov
cmp
mov
jno
divb
push
push
lret
sub
popa
stc
dec
inc
dec
jno
cs
test
mov
xor
sbb
or
pop
inc
dec
cmpb
nop
int3
es
enter
shl
cltd
lds
mov
mov
dec
call
sbb
iret
jne
xchg
nop
popf
out
test
cmpsb
or
movsb
xchg
jp
mov
shlb
and
pop
orb
outsb
jno
movsb
mov
and
mov
inc
xchg
mov
sbb
mov
add
cwtl
xor
test
mov
leave
mov
dec
or
fildl
lret
sub
mov
pop
jmp
aam
or
jecxz
subb
stos
mov
pop
cwtl
inc
or
mov
cmc
pop
pop
pop
dec
imul
test
inc
push
pushf
in
js
jle
cltd
fsubp
out
and
adc
fmul
lret
cmpsl
jle
lret
cli
jbe
sub
push
or
mov
fnstsw
and
cmpb
mov
jae
jno
or
or
xchg
xchg
fsubr
movsl
ds
inc
xor
fistpl
dec
push
sarb
add
leave
iret
aaa
incl
loop
cltd
or
in
push
push
cmp
test
jae
jmp
and
xor
shrl
jb
jp
test
and
pusha
addl
js
shlb
test
push
mov
pop
stos
adc
inc
test
mov
cmpsb
mov
add
sbb
jmp
test
and
shll
pop
pop
push
gs
xor
aam
and
sbb
push
movsl
dec
inc
ljmp
out
js
xchg
push
dec
dec
jnp
out
mov
shl
cltd
mov
mov
lods
fisubrl
sbb
lods
jecxz
pop
mov
push
or
fcomps
ret
mov
iret
sub
pop
ret
stos
lret
xor
test
je
outsb
outsl
repz
pop
clc
pop
data16
xor
shl
add
jl
push
repnz
in
jg
cs
nop
push
cmp
jp
add
jae
xorb
pop
mov
xchg
xchg
push
addr16
cltd
imul
je
in
sub
jne
xor
and
xor
add
or
or
pop
or
inc
jbe
inc
inc
rcrl
cmp
into
dec
mov
leave
push
jl
mov
loop
mov
jns
xor
xchg
std
and
movsl
mov
xor
add
jge
js
into
aaa
pop
dec
arpl
loopne
or
cld
dec
sub
dec
stc
inc
mov
push
cmp
xor
pop
jae
lea
or
repnz
or
adc
ret
push
xchg
repz
push
mov
mov
outsb
xchg
and
jecxz
dec
out
mov
sbb
or
add
lret
imul
in
das
notb
jne
fcom
mov
mov
mov
test
pop
out
add
out
add
adc
das
rorl
jb
cmp
cwtl
insb
sub
jno
inc
add
pop
xchg
andl
mov
pop
js
mov
adc
addr16
sub
mov
mov
stos
ss
pop
sbb
xchg
ja
cmp
mov
insb
fs
ret
xchg
push
fidivs
movsb
or
xchg
push
dec
and
push
cmc
jo
das
loopne
sub
sub
xor
in
lods
repnz
and
jp
mov
pop
insb
out
aaa
repz
pop
sub
mov
nop
rorw
or
sbb
mov
loopne
adc
sbb
enter
cmp
sti
sbb
cmp
or
pop
xchg
sub
dec
jmp
mov
fcmovu
lods
into
inc
xor
rcr
or
sbb
inc
test
add
enter
xor
mov
ja
nop
cltd
mov
fs
imul
cs
shrl
fsubr
mov
push
inc
popa
xchg
mov
jb
pop
mov
flds
pop
or
cmc
out
aas
dec
ffree
ret
xchg
fs
pop
shl
mov
dec
in
fiadds
xchg
aam
cmp
les
loop
in
pushw
lods
mov
out
mov
jecxz
aam
push
xlat
outsb
hlt
inc
cmp
les
mov
adc
mov
leave
fldt
and
cmc
dec
insl
out
loope
lret
jl
int
orb
stos
sub
fs
addr16
dec
repnz
xchg
pushfw
je
mov
scas
aad
aas
orl
rcrb
fsubrl
inc
aaa
xor
enter
ja
cld
cmp
lods
mov
lret
xchg
in
lret
xor
xchg
jp
adc
int3
xchg
divps
pop
std
inc
outsb
and
sbb
cmpl
fnstsw
les
jae
xlat
mov
cli
pusha
dec
les
int3
pop
in
cmp
aad
aas
mov
xor
or
icebp
dec
push
inc
xchg
mull
mov
xor
int3
mov
testb
cmp
inc
lock
and
push
outsl
cmp
lcall
xchg
call
push
push
cmp
icebp
movb
jbe
pop
cmpl
test
dec
cli
xchg
xchg
popf
pop
data16
inc
push
xchg
or
xor
or
das
push
jno
popf
add
lods
xchg
in
int3
pusha
cmpsb
or
imul
popa
mov
pushl
js
shlb
mov
in
xor
loope
mov
loopne
movsb
xchg
outsb
cli
xor
mov
cwtl
or
push
shll
out
mov
jae
push
lret
aas
add
lods
jl
fwait
jbe
lods
pushf
dec
loopne
adc
aam
outsb
inc
adc
xchg
mov
insl
into
gs
xorb
push
dec
arpl
jg
xchg
dec
aam
push
test
int3
or
loop
cmp
push
shlb
mov
push
jle
je
nop
lods
repz
pop
sub
push
movsl
clc
xchg
das
rcrb
cmpsl
fsubrl
stos
and
add
jmp
mov
and
notl
idivb
pop
popf
mov
or
jmp
dec
testb
inc
ds
xchg
call
pushw
push
arpl
jg
mov
jno
mov
adc
fadds
sbb
mov
je
sub
mov
dec
dec
push
push
add
xorb
mov
into
shrl
xor
inc
pop
sbb
jo
ficompl
inc
push
popf
dec
mov
in
out
fwait
mov
jb
out
test
sbb
out
sbb
lcall
jo
mov
dec
test
mov
addr16
repnz
js
lret
rorb
shll
aaa
movsbl
and
sbb
outsb
cwtl
inc
or
xor
mov
sbb
and
pop
pop
mov
cmp
or
lock
ja
outsl
das
pusha
sti
push
push
mov
jae
pop
call
stc
repz
xlat
fisubs
cmp
fsubp
and
pop
pop
aad
jae
bound
aaa
jbe
call
and
scas
or
inc
popa
lds
jbe
test
dec
es
leave
pop
lret
aas
ds
fadds
sub
push
sub
ret
push
dec
mov
out
gs
xchg
jge
dec
dec
lea
call
test
cmp
jno
mov
fiadds
dec
inc
ss
test
jo
repz
add
sbb
push
iret
pop
cmpsl
cmp
pop
mov
adc
xchg
jne
jno
mov
leave
ficoml
insb
pop
int
pop
sbb
ret
sbb
jecxz
push
push
dec
sub
mov
pusha
or
mov
and
sub
add
addr16
sti
inc
or
cmp
cmp
cli
idivb
enter
lret
outsl
or
cmpsl
add
or
inc
aam
lock
xor
lcall
adc
popa
mov
mov
shll
xor
xchg
xorl
leave
lret
test
xor
and
xchg
call
mov
inc
lret
and
in
push
xor
sbb
push
push
sbb
loop
xchg
xlat
out
adc
xchg
sub
std
imul
pop
or
mov
notb
lret
fmul
inc
xchg
xchg
inc
orl
dec
mov
dec
aaa
mov
xor
xchg
scas
into
adc
push
fisttpl
jp
mov
xchg
mov
or
jmp
xchg
adc
push
dec
adc
pop
shrb
fldenv
outsl
mov
test
aam
add
out
sar
mov
testb
scas
mov
sarl
into
andb
pop
in
inc
fmull
mov
adc
out
bound
fcoms
out
cltd
pop
lret
sub
inc
pop
mov
and
loopne
movsb
jb
mov
dec
xlat
test
mov
int
aaa
cld
dec
dec
pop
mov
add
pop
rcrb
stos
mov
out
test
dec
fisubrl
jmp
mov
std
jge
cltd
insb
xchg
adc
loope
add
jne
sbb
cmp
push
gs
fnstcw
cmp
jnp
dec
loope
and
in
test
cmpsb
into
lret
sbb
pop
jmp
ds
popa
mov
and
lret
lods
pop
and
jo
icebp
mov
ret
sub
sbb
xchg
xchg
popf
jns
aam
jo
xor
into
sarl
add
movsl
movsb
arpl
subl
mul
pop
adc
ror
cmp
inc
xor
sub
out
mov
jbe
xor
mov
jo
je
ljmp
sub
std
stos
inc
movsb
sbb
adc
cmc
sub
fldcw
xchg
pop
fwait
adc
into
pusha
loope
mov
std
mov
test
pop
in
sarl
push
ljmp
insb
pushf
ret
fimuls
jle
js
lret
xchg
dec
xor
mov
pop
stos
mov
in
cmc
inc
inc
or
fisttpl
pop
jns
cmpsb
mov
imul
mov
push
cmpl
push
sbb
fwait
or
movsb
cmp
sbb
mov
out
xchg
loopne
enter
in
mov
in
mov
dec
inc
das
cld
xchg
cli
in
loopne
jns
mov
test
aas
stos
out
int3
dec
aad
mov
pop
fdivrs
movsb
mov
adc
call
ds
in
xchg
int
inc
jns
adc
and
mov
dec
adc
test
mov
add
aad
and
insl
xor
and
fiaddl
mov
and
popf
es
cmp
sahf
ja
jne
cwtl
lds
dec
adc
pop
xor
lret
push
jbe
inc
outsb
test
test
sbb
into
dec
fildl
mov
push
sub
arpl
lods
ret
insb
cmpsl
sbb
out
jp
jne
mov
xchg
fstpl
das
lea
lcall
jge
int3
jns
sub
inc
fisubl
js
gs
stc
fisttpll
mull
dec
test
not
mov
add
adc
fwait
sbb
in
or
mov
xor
push
mov
mov
mov
jae
cmp
cmp
pop
mov
jg
in
push
jo
sahf
scas
xor
mov
dec
scas
mov
inc
sbb
pop
jecxz
dec
in
sub
cmp
es
cmc
dec
cmp
jbe
cmp
or
fimull
jo
xchg
adc
xchg
aam
faddl
in
xor
pushf
dec
lret
mov
stc
dec
adcl
sub
mov
jl
sahf
loopne
mov
lock
pop
push
inc
jnp
ret
hlt
xchg
nop
fst
pop
aas
sahf
mov
in
ja
xlat
xor
jns
pusha
les
add
mov
lret
inc
out
xchg
cmp
jno
sbbl
fwait
loop,pn
xchg
lcall
and
shr
or
enter
cmp
insb
add
xor
or
test
jg
lds
iret
aaa
bound
inc
push
leave
mov
movsb
dec
rcl
push
push
iret
adc
push
lahf
jbe
or
pop
inc
cmp
repnz
pop
adc
hlt
xchg
cmpb
pop
jmp
sub
leave
fcmovbe
cmc
ja
jo
ret
mov
xchg
cli
xchg
or
fsubs
cmp
pushf
mov
inc
divb
mov
std
mov
in
push
cmp
fnsave
mov
rolb
nop
scas
cmp
mov
xchg
mov
pop
lods
fcoms
cmp
push
jp
push
lods
fs
pop
lret
push
es
sbb
cli
clc
jnp
dec
cmpsb
loope
xor
push
inc
cld
mov
mov
lahf
inc
ja
inc
call
loop
lret
xchg
jo
or
dec
sub
movsl
mov
iret
incb
ds
scas
ljmp
iret
in
jg
mov
or
fs
adc
std
sbb
and
sub
ljmp
adc
sbb
push
xchg
testb
data16
out
mov
jns
push
mov
mov
mov
pushf
pop
push
outsb
orb
cs
jae
repnz
push
in
mov
call
or
ss
push
scas
pop
insb
fdivs
stc
adc
pop
test
push
and
test
sahf
pop
insb
jle
dec
and
repnz
imul
mov
pusha
ja
addr16
rcll
and
test
das
pop
and
push
xchg
je
pushf
lock
sub
loop
outsb
fisttpll
mov
and
ret
call
inc
pop
jbe
js
xor
out
jge
mov
test
or
sahf
in
sbb
push
out
mov
pusha
clc
mov
jmp
in
mov
xlat
mov
sbbb
hlt
andl
into
scas
or
cmp
rcl
rorl
imul
in
nop
sub
pop
pop
adc
pusha
xor
mov
arpl
int
adc
inc
xchg
xor
push
pop
stos
daa
int3
xchg
xor
out
cmpsb
lock
xchg
jne
dec
jb
inc
sub
movsl
sbb
cld
into
ret
fsubrs
sbb
rcl
icebp
in
add
mov
popf
xchg
mov
push
cmp
or
pop
fstpl
mov
xchg
sbb
xchg
rcrl
push
lret
xchg
stos
popf
mov
aaa
xchg
jge
add
jae
xchg
fs
out
insl
movsl
mov
xor
call
mov
clc
out
mov
adc
aam
lock
stc
add
mov
mov
das
cmp
mov
lret
lcall
sbb
jmp
fldt
movsb
aad
sub
jne
int3
mov
pop
sbb
imul
sub
test
ror
inc
jbe
or
leave
push
mov
push
addl
mov
sub
arpl
pop
sbb
xchg
add
inc
cmpl
jg
mov
jae
popa
sti
sub
addr16
fisttps
xor
idivl
stos
fldenv
aas
pop
rol
sub
jbe
fistl
into
ljmp
mov
or
mov
or
pop
inc
and
not
out
inc
sbb
popf
push
jp
pop
pop
xor
push
adc
enter
or
cmc
mov
sbb
sarl
mov
lahf
shrl
mov
into
cwtl
adc
dec
outsb
movsl
enter
and
fisttps
out
add
push
mov
dec
adc
fstpt
jp
xor
jb
leave
cltd
fwait
out
outsl
addr16
pop
out
adcl
sahf
movsl
in
stos
lret
pop
add
mov
movl
xchg
je
outsl
inc
xor
data16
and
leave
lods
scas
int
jmp
xchg
cmpsl
movsb
mov
sbb
iret
cmp
or
call
ja
test
push
rcrb
add
lods
dec
sub
fadds
push
in
lcall
adc
or
int3
scas
mov
arpl
push
cmp
loop
xor
rclb
arpl
lods
lret
or
xchg
cld
outsb
shrb
push
aad
dec
shrb
cmpsl
idiv
or
inc
sbb
pop
xchg
popf
int3
ljmp
sbb
jne
in
add
mov
sub
jp
inc
shl
jns
aaa
es
sub
fildl
in
push
or
mov
cld
xchg
mov
clc
arpl
lcall
ljmp
jbe
cli
inc
mov
arpl
pop
adc
adc
sub
and
jg
js
in
jns
inc
jne
cmp
ficomps
jmp
push
jmp
cwtl
dec
outsl
or
xchg
ja
mov
sti
push
jp
lret
vpcmpgtd
jns
into
stos
mov
xor
jns
jecxz
not
or
xchg
out
mov
xchg
xchg
mov
aaa
jb
leave
mov
mov
pop
xor
jnp
lret
xchg
cmp
adc
xchg
xor
jbe
mov
mov
test
scas
imul
fistpl
lret
js
dec
fdivs
jmp
setbe
loopne
test
ret
mov
or
popa
bnd
stc
aaa
or
into
test
or
inc
imul
test
inc
lods
shlb
push
hlt
rcl
in
xor
outsb
xchg
imul
ja
dec
stc
cltd
gs
lcall
jo
dec
imul
ja
mov
sub
loop
mov
clc
mov
lods
fldcw
mov
mov
js
xchg
push
cmpsb
ret
inc
mov
aad
add
imul
jbe
popf
mov
int3
jb
or
out
outsl
sbb
push
icebp
sbb
pop
xchg
movsb
stc
dec
shlb
mov
cltd
inc
imul
add
insl
cs
sbb
test
inc
dec
push
pushf
into
dec
shll
xor
sbb
jmp
sub
cmp
pop
xchg
scas
adc
add
xor
fdivs
xor
cmpsl
fs
jmp
mov
js
push
out
pop
sub
in
push
mov
inc
or
sahf
push
mov
xchg
jle
cmp
mov
mov
ret
push
leave
arpl
xor
sub
cmp
out
mov
push
adc
add
dec
xchg
mov
or
nop
adc
int
dec
into
or
aad
iret
imul
sub
jo
fwait
out
mov
fstl
mov
push
sub
test
or
loope
imul
push
iret
hlt
ret
call
jns
scas
cltd
mov
mov
adc
int
cli
dec
jge
mov
mov
push
mov
and
lods
mov
outsl
mov
and
rolb
xchg
dec
and
test
pop
jbe
les
inc
dec
sahf
out
inc
addr16
into
mov
mov
cwtl
jb
mov
orb
out
lret
iret
pop
dec
mov
pop
faddl
outsb
in
xchg
lock
cli
mov
cmpsl
aam
or
mov
dec
out
push
loope
jbe
cmp
jmp
mov
mov
adc
fs
js
adc
lcall
or
jmp
push
add
stos
jg
mov
dec
sti
adc
roll
xchg
or
push
in
insl
pop
movsl
aam
cmp
xchg
cmpsb
pushf
cmp
out
pop
fsubs
inc
mov
jb
idivl
in
dec
push
aas
cmp
arpl
xchg
add
jg
sarb
pop
pop
pop
sub
pop
jae
lcallw
int
iret
xchg
pop
cmp
xlat
cli
aad
push
scas
stc
shl
rcrb
dec
test
cmpsb
adc
jge
jl
jbe
int3
popa
mov
test
or
pop
push
cmpsl
sbb
jb
xchg
inc
test
jle
or
mov
pusha
pop
int3
sbb
mov
aas
sarb
das
cmpsb
sbb
stc
dec
or
fsubl
xchg
out
pop
iret
mov
aaa
pusha
dec
xor
and
cmpb
dec
daa
lods
xor
mulb
ret
dec
in
add
jns
jo
sbb
sbb
xor
jmp
in
fldenv
push
icebp
mov
fs
lea
into
fucom
cwtl
xchg
pop
adc
aaa
rcrb
jmp
pop
movb
push
in
flds
push
inc
adc
jecxz
mov
jne
xchg
push
fucom
inc
sub
imul
adc
fldcw
add
fs
jbe
dec
ret
mov
xor
xchg
mov
shl
scas
inc
jecxz
sarb
xchg
pop
push
call
xchg
shlb
in
popa
cmp
xor
pop
jbe
or
push
imul
jbe
mov
addr16
cmp
lret
rolb
frstor
xchg
imul
leave
movsl
std
clc
cwtl
aas
incl
jle
push
jae
mov
inc
lret
sbb
in
jns
ss
pusha
insl
mov
xchg
dec
int
xchg
imul
testb
jp
arpl
data16
mov
xor
inc
rcll
or
push
fldenv
outsb
push
mov
aam
scas
fisttpll
xchg
sub
add
xchg
popf
and
out
aad
and
push
fistps
lahf
mov
outsl
out
sbbb
loopne
fisubrl
daa
jecxz
mov
or
xor
dec
xchg
xchg
xchg
mov
inc
push
lea
imul
ja
mov
daa
icebp
pop
popf
out
xchg
sbb
mov
mov
ljmp
adc
enter
cmp
and
stos
mov
int
push
adc
xchg
mov
mov
mov
jno
nop
sbb
fcmove
cmp
test
and
into
jb
and
xchg
add
scas
lret
dec
fst
cmp
ret
dec
mov
and
ret
std
insb
out
jne
data16
lea
adc
sahf
lret
loop
mov
fstpl
hlt
in
xchg
ficoml
xchg
mov
adc
mov
cmp
jl
pop
shlb
movsb
lock
out
inc
adc
or
in
fdiv
sub
pop
and
divl
ror
dec
sbb
jmp
mov
push
addl
test
ficomps
mov
sbb
sarb
cltd
cmpsb
sub
pop
push
push
cli
repnz
lcall
into
sbb
inc
int
test
pop
jno
cmpsb
jge
enter
cmp
push
jp
push
dec
adc
xor
mov
sbb
push
add
ljmp
dec
add
mov
add
cmp
pop
cli
int3
repnz
repnz
push
fnsave
aad
or
push
nop
jmp
xor
push
mov
push
fs
into
mov
dec
pop
and
stos
jae
xchg
popl
nop
push
into
cld
es
xor
popa
xchg
je
iret
bound
sarb
jno
pop
xchg
sub
or
addr16
xor
and
push
or
stc
fsub
leave
dec
or
sbbl
enter
dec
xchg
call
mov
cmpsl
pop
dec
test
pusha
xchg
sbb
adc
push
add
jle
inc
inc
aam
out
and
bound
push
loop
xchg
dec
gs
xor
xchg
notb
bound
mov
and
shrb
roll
cmp
pop
iret
into
xlat
adc
sub
addl
mov
cmp
cld
xor
mov
mov
ret
mov
jle
out
jmp
fidivrl
es
mov
jecxz
xor
out
sahf
adc
cmc
mov
cmp
aaa
dec
lcall
and
xchg
mov
xchg
les
jne
mov
dec
cmp
or
push
outsl
clc
sbb
incl
int3
or
xchg
stc
jo
shl
mov
lock
repz
mov
rcrl
andl
jg
mov
pusha
dec
lds
and
and
push
imul
iret
cwtl
out
xor
dec
xlat
push
mov
aas
mov
add
add
fdivs
push
jmp
xchg
pushf
dec
in
repnz
ret
jl
adc
mov
and
std
aam
cmp
fldt
cmpl
ljmp
out
es
pop
lret
lds
mov
popf
popa
dec
stos
adc
or
jo
or
cmpsb
xor
rclb
or
add
into
cld
in
inc
push
decb
bound
lret
xchg
xchg
lret
adc
insl
aaa
lods
loop
lret
imul
hlt
repnz
stc
inc
loopne
lahf
sub
addr16
lret
test
jl
pop
cmp
lds
inc
push
aam
push
mov
mov
and
stos
sbb
jg
jp
pop
jns
ja
insb
jbe
xchg
sahf
mov
test
aad
jp
inc
int3
mov
xchg
aas
sub
adcb
mov
xchg
adc
push
test
aas
inc
mov
mov
cmp
movsl
xor
mov
sbb
pop
cmp
sbb
repnz
into
call
adc
xchg
mov
mov
jl
fadd
mov
dec
aam
lahf
sub
pop
arpl
or
mov
mov
inc
pop
pop
stos
xchg
inc
inc
leave
daa
scas
push
fwait
jp
mov
sub
sub
ret
jb
dec
stos
cmc
jge
mov
fmul
out
xchg
add
js
or
imul
jbe
popf
leave
cmpsl
add
pop
shlb
stc
push
add
mov
cmpsb
aaa
mov
lods
lds
dec
pop
fdivrl
sbb
dec
sbb
inc
mov
lods
je
outsl
mov
xchg
in
push
pop
cmpsl
push
push
fcoml
sub
aad
xchg
lods
mov
scas
lcall
jecxz,pt
and
cmpsl
fwait
xor
les
cmp
mov
sti
push
mulb
mov
lahf
test
sbb
ficoms
cmp
and
sub
test
fscale
push
fildll
out
add
ret
xor
and
cli
mov
clc
ds
cltd
jle
mov
xchg
les
pushf
mov
mov
enter
add
sti
arpl
cli
sbb
mov
nop
and
push
loop
cmp
inc
and
sbb
push
inc
and
data16
mov
cltd
push
xchg
push
adc
stos
pop
mov
pop
jno
test
insb
cmpsl
addr16
lods
dec
or
lea
push
mov
daa
mov
cmp
cmp
dec
xor
pushf
dec
outsb
mov
stc
lds
ja
add
lds
data16
stos
aaa
sub
push
or
adc
adc
repnz
outsb
dec
push
popf
aaa
and
push
jb
add
lods
enter
addr16
popf
xchg
sub
xor
cmp
daa
jp
insl
arpl
scas
push
xchg
inc
int3
push
nop
add
repnz
pop
xchg
pop
jb
rcrb
sub
lret
leave
xchg
adc
popa
aam
daa
mov
loopne
in
lahf
or
jne
cmc
and
push
push
xchg
insl
stos
mov
dec
imul
nop
push
out
sbb
imul
mov
xchg
mov
pop
dec
mov
js
mov
hlt
decb
add
or
lret
lret
mov
push
aas
arpl
xor
stc
or
sub
cli
push
fisttps
aas
into
cltd
dec
gs
dec
stc
sub
stos
inc
rolb
adc
incb
cmp
icebp
movsb
clc
push
movsl
adc
and
xchg
sahf
push
mov
adc
add
inc
sbb
movsl
mov
mov
sbb
mov
mov
xchg
mov
adc
pop
mov
sub
xlat
movsl
out
adc
and
or
imul
icebp
inc
pop
push
xorl
dec
or
push
fsubrs
mov
dec
out
loopne
dec
and
sub
sti
jbe
stc
jmp
ret
orl
mov
xchg
inc
fcomps
int
imul
cwtl
hlt
movb
or
mov
mov
js
dec
stos
test
pop
orl
dec
in
dec
dec
xchg
dec
mov
clc
ljmp
jno
hlt
sub
jnp
xlat
and
inc
loope
push
lahf
movl
mov
js
dec
add
sti
into
popf
in
sub
ret
and
ljmp
clc
insb
mov
lods
and
jns
mov
push
cs
fwait
add
and
jne
subl
ret
push
gs
add
push
int3
enter
push
dec
xlat
pop
cmp
sti
inc
cli
pushf
jb
fwait
pop
pop
lret
adc
sub
mov
xchg
push
jg
sbb
inc
dec
lods
into
cmc
test
push
mov
and
mov
adc
jge
push
in
cltd
ja
sti
clc
test
cmp
lret
xchg
mov
mov
fisttpl
ret
xchg
popa
rcl
outsl
fs
push
inc
xchg
push
clc
dec
fisubrl
jb
xchg
sarb
jnp
je
add
dec
stc
lahf
sbb
shll
imul
or
xchg
pushf
push
mov
push
add
in
outsl
test
lret
xor
push
test
lcall
ljmpw
add
mov
jo
lret
dec
dec
test
adc
cmp
adc
push
subb
sbb
or
orb
clc
paddq
jl
fsubs
mov
push
push
imul
mov
xor
jb
or
cmp
sbb
mov
rorl
push
ds
mov
movsl
test
ret
mov
jg
push
popf
lods
jbe
ljmp
in
lea
jo
ret
out
pmulhw
push
stc
cmp
pusha
xchg
stos
divb
mov
cmp
test
mov
mov
jecxz
mov
rcl
xchg
xchg
fimull
pop
stos
iret
dec
push
jp
inc
and
lock
ss
xchg
mov
xchg
stos
adc
pop
adc
iret
lahf
notl
push
in
lret
jne
daa
xor
pop
loopne
xorl
insl
lds
cmp
cltd
arpl
push
push
jae
gs
mov
push
loop
cwtl
add
push
jo,pt
scas
sub
inc
mov
or
xor
xchg
loope
pop
lret
js
int3
cld
outsb
adc
xor
cwtl
out
jne
and
shrb
mov
sbb
or
lret
dec
push
inc
pop
rcr
adc
push
sub
xor
jae
xchg
push
jb
pop
push
dec
inc
test
mov
fcomps
sti
incb
push
jle
jno
aam
mov
adc
cmpsb
xor
daa
pushf
push
mov
push
push
fisubs
mov
lret
insl
decl
outsl
aaa
jae
int3
mov
mov
out
xchg
pop
cmpsb
mov
aas
ret
and
mov
mov
add
jl
xor
aam
mov
or
aaa
repnz
inc
frstor
xorb
and
daa
push
push
leave
adc
fiaddl
mov
push
mov
xor
mov
es
repnz
fsts
ds
aad
push
push
sahf
dec
add
dec
inc
addr16
mov
or
repz
test
adc
push
out
dec
dec
adc
bound
dec
and
inc
cli
rol
cld
push
xlat
in
leave
lds
cmc
pop
and
dec
ljmp
int
push
adc
scas
push
pop
xor
xor
aaa
fidivs
or
das
outsb
pop
xor
shrd
push
pop
sti
je
jbe
filds
std
call
clc
roll
and
sub
ror
add
pop
adc
cmp
dec
jbe
or
jnp
movsb
andb
cltd
movsl
jl
push
mov
jae
sub
mov
dec
xor
lret
roll
dec
out
call
dec
shll
cld
test
mov
sbb
sub
inc
fisubl
sub
pop
mov
aam
mov
fs
mov
sbb
int3
push
mov
nop
stos
fimuls
scas
aad
rcl
mov
and
out
xchg
mov
jge
out
dec
fidivrs
outsl
mov
or
arpl
xchg
cmc
add
iret
bound
xor
sub
cmc
test
scas
jne
into
mov
movsl
jae
in
pop
inc
or
cld
xchg
inc
mov
jnp
jp
jg
inc
negl
addr16
adc
mov
add
repz
insl
lea
frstor
das
pop
aas
nop
loop
sbb
out
pop
sub
lahf
or
dec
mov
cmp
pusha
push
int
mov
pop
sub
xchg
add
fisubl
ja
bound
call
jge
or
push
test
dec
and
fldt
or
jmp
adc
ljmp
lock
ja
mov
clc
movsl
xor
mov
pop
rclb
icebp
dec
lretw
leave
xlat
xchg
insl
sbb
loopne
jmp
xchg
imul
sbb
sub
sti
ret
cltd
popa
push
pop
into
lcall
dec
mov
lds
das
mov
push
xor
add
popa
shrl
mov
push
mov
sub
divl
out
sahf
ja
inc
jnp
je
xor
js
dec
int
dec
lahf
mov
daa
test
dec
pop
out
dec
jle
arpl
dec
xchg
xchg
mov
sbb
inc
sub
mov
dec
fisttps
stos
cmc
arpl
lcall
add
pop
inc
cmp
shlb
sbb
lock
ljmp
lret
stos
lahf
mov
sti
outsb
int3
fidivrl
into
cli
cwtl
cmp
adc
xchg
add
popf
mov
xorl
jge
sbb
rcrb
js
icebp
cmp
cs
push
jb
lods
scas
sub
jbe
sbb
mov
enter
lods
int
cmp
jbe
imul
cld
jo
lds
jno
mov
inc
jmp
or
adc
xor
or
repnz
fadd
adc
out
orl
and
loope
jbe
cltd
push
test
and
sub
xor
inc
add
into
repz
insb
rcl
xor
imul
mov
notl
push
ljmp
mov
jne
mov
test
les
mov
int3
popf
int3
leave
pop
fs
insl
cmp
push
ds
xor
sbb
stos
cmp
lock
sbb
xor
jae
xor
mov
cmc
push
and
out
push
lret
out
lret
inc
dec
dec
inc
add
push
xchg
jp
push
in
mov
mov
cmp
jecxz
rcr
and
movsl
mov
sahf
cmpsb
shr
rcll
popf
jbe
add
mov
push
xchg
fldcw
dec
clc
jge
sbb
pop
fcmovnu
pop
shll
xor
mov
out
aaa
fnstenv
push
jle
loope
dec
xchg
adc
leave
lods
arpl
mov
hlt
dec
fdiv
cmp
popa
lahf
cmpsb
xor
xchg
xchg
xchg
xchg
imul
jmp
enter
jbe
rcl
jne
data16
aaa
bound
int3
test
rorb
dec
mov
jns
cmp
inc
inc
mov
and
into
ss
loope
imull
jecxz
movsl
outsl
pusha
sbb
rcl
push
sbb
push
mov
into
lods
std
jge
mov
or
add
pop
and
jae
pusha
cli
pushf
mov
mov
push
test
leave
outsb
fdivp
ds
cli
roll
cld
jo
stos
bound
leave
pop
xor
in
add
popa
xlat
test
lods
into
xchg
mov
push
sbb
repnz
subl
xor
adc
dec
into
jl
sbb
sub
mov
xor
and
mov
push
nop
mov
test
jg
int3
xor
dec
mov
mov
jge
ja
gs
mov
adc
mov
xchg
shl
dec
mov
iret
decl
test
lret
repz
pop
xchg
mov
out
stos
test
pop
jle
jno
iret
fdivrp
mov
lods
and
mov
das
xchg
sbb
cmpsb
and
pop
pop
sbb
jb
inc
fisttpl
or
and
mov
ljmp
insb
adc
pop
xor
inc
cld
fsts
mov
mov
sub
push
mov
lea
cli
or
add
rcrl
sbb
int3
ja
jne
shl
rorb
xchg
jo
or
data16
and
push
mov
jge
jne
dec
push
aas
loopne
mov
xor
and
sub
dec
mov
fiaddl
xchg
mov
mov
cwtl
out
mov
adc
mov
pop
jbe
loope
jl
dec
test
in
ret
push
dec
xor
fidivs
push
andl
mov
push
or
out
xchg
add
push
sub
outsl
cmp
ljmp
adc
jle
or
out
lahf
movsl
sub
imul
lret
insb
push
ficomps
ror
mov
popa
and
push
xor
xchg
or
cmp
sbb
mov
out
xor
gs
cs
inc
mov
mov
pusha
sbb
insl
mov
pop
fimuls
das
loope
cmp
push
out
push
dec
in
iret
pusha
inc
sbb
clc
mov
aad
add
ds
xchg
push
scas
test
push
clc
cltd
stos
push
in
stc
dec
cs
lea
mov
dec
sub
jge
sbb
or
and
mov
cltd
jg
or
xor
call
mov
xchg
sub
push
inc
xchg
mov
and
int3
mov
repnz
mov
enter
dec
cmp
sbb
fucomi
sbb
popa
xor
mov
mov
sub
ds
mov
aad
scas
lret
adc
mov
pop
xor
int3
mov
je
inc
mov
xor
dec
sbb
jmp
push
outsl
iret
pop
add
inc
xchg
dec
mov
push
fadds
xchg
mov
dec
sbb
mov
mov
loope
add
cmpsl
adc
cmpl
scas
push
test
pop
jnp
cmp
lea
pushf
push
shrb
fsts
mov
dec
scas
xchg
insb
fs
test
jle
xor
enter
xor
sub
push
cli
lock
aad
jg
or
std
sbb
imul
orb
cli
sub
jnp
repz
sub
mov
fwait
dec
icebp
xchg
scas
sub
sbb
sub
and
adc
dec
adc
loope
push
mov
cmp
lock
adc
int3
cmp
inc
adc
inc
push
aad
jg
add
in
mov
or
cmp
arpl
xchg
enter
sub
mov
sub
push
jp
aad
ret
sbb
bound
fdiv
addb
inc
int3
xlat
or
cmpl
push
loope
dec
jne
icebp
idiv
jg
xlat
lret
insl
mov
loope
jle
int3
mov
mov
cmpsb
xor
rorb
test
adc
xor
mov
cmc
sub
jae
xchg
js
sbb
sub
xor
push
sbbb
xchg
aam
cmpsl
sbb
dec
jp
stos
sbb
and
out
pop
into
mov
push
xchg
dec
sbb
inc
xor
mov
cs
fldenv
mov
pop
fiaddl
push
push
push
hlt
xchg
mov
cmp
cmp
mov
popf
or
bound
mov
cmc
jecxz
test
popf
or
pop
adc
dec
mov
push
stos
jns
jmp
into
xlat
adc
sbb
fcmovbe
stos
or
xor
xchg
dec
sub
add
loope
xor
ret
push
out
sbb
xchg
shr
and
stc
push
not
xor
sbb
dec
mov
jo
sub
sub
popa
out
add
fcoms
pop
push
mov
xor
jp
push
push
ja
daa
andl
sarl
jo
loopne
mov
pop
inc
mov
movsb
gs
in
lret
mov
inc
sub
pop
sub
rorl
mov
mov
push
pop
push
dec
jecxz
fcoms
movsb
in
push
or
jecxz
daa
xor
adc
fst
fsts
push
fwait
inc
icebp
or
add
xor
mov
les
push
dec
inc
into
jp
pop
imul
not
loope
rcrl
stos
mov
sahf
jecxz
adc
addr16
addr16
push
not
lahf
fstpt
orl
xchg
push
jns
push
adc
aam
jno
xchg
push
aas
lret
icebp
pushf
out
sbbb
jmp
inc
adc
or
add
lds
cmp
in
jnp
push
idivl
les
movb
jno
into
mov
sbb
enter
push
cmpsb
add
jp
test
lods
mov
into
shl
cmc
enter
mov
es
lahf
mov
cmp
jne
dec
hlt
rorl
add
loope
cmpsl
gs
push
and
lcall
call
sbb
icebp
jbe
loop
lret
push
xor
sub
movl
or
dec
mov
fisubl
sbb
test
fwait
mov
add
stos
jne
loopne
sub
sbbl
pop
sahf
js
ficoml
mov
nop
clc
or
insb
daa
pop
packssdw
popf
jo
push
mov
int
mov
adc
daa
gs
adcb
out
test
in
sbb
add
xor
nop
inc
int3
or
push
inc
insl
mov
addl
ret
or
sub
pop
inc
mov
dec
sbb
mov
add
jb
inc
push
lods
imul
jne
xor
lret
push
in
pusha
mov
cmpsb
test
test
movsl
cmpsl
mov
mov
inc
lret
xchg
insl
dec
adc
jmp
mov
push
jae
fldcw
fs
cld
mov
mov
lcall
pop
aam
fmuls
je
jmp
in
or
jg
ret
inc
pop
lcall
mov
mov
pop
add
mov
pusha
ficoms
xchg
shll
inc
sahf
rorb
and
clc
mov
adc
pop
mov
shrb
jl
sbb
push
daa
sbb
ret
mov
movsb
and
add
pushf
ret
rcr
jl
pop
ljmp
hlt
inc
call
les
cmpsl
mov
repnz
jnp
pop
push
ficomps
test
adc
stos
and
test
outsb
or
cs
hlt
push
cwtl
push
fs
mov
mov
daa
dec
cmp
mov
jae
or
das
jmp
xorb
sub
mov
mull
jl
repnz
fldt
rclb
pop
mov
lret
mov
or
inc
or
pop
mov
sub
xchg
cmpsl
enter
sub
jae
cmp
push
int
addr16
lret
pop
insb
iret
roll
dec
adc
outsl
add
jbe
inc
pushf
call
repnz
scas
or
in
xchg
addr16
cmpsl
inc
mov
sahf
dec
arpl
or
sub
push
add
dec
int3
jne
aad
rorb
jns
inc
mov
lods
cmp
jno
aaa
add
add
std
loop
fistpl
add
mov
push
stc
xchg
sar
inc
imul
sbb
sub
xor
pop
dec
scas
test
repz
mov
or
adc
mov
inc
ljmp
loopne
mov
sahf
ljmp
sbb
xor
and
xchg
sbb
mov
aas
dec
notl
xor
inc
xchg
test
cs
cmp
fcomps
mov
out
mov
xor
aad
adc
xchg
xchg
mov
into
or
fidivrl
out
mov
cmp
and
mov
push
pop
mov
add
mov
jmp
repnz
cld
adc
sbb
jg
sarb
test
cmp
push
shll
ljmp
ja
and
test
cltd
es
mov
fidivrs
push
into
loopne
lods
jecxz
hlt
xor
test
leave
push
push
mov
mov
mov
aam
lret
scas
cs
popf
mov
cmp
js
aam
mov
pop
nop
push
push
lock
cmc
adc
sbb
cltd
pop
jmp
std
fnstsw
shr
js
ss
cs
cmp
dec
into
nop
mov
int
jae
movsb
and
mov
xor
add
jge
movsb
jecxz
cmpsb
xor
jb
or
mov
xchg
adc
lret
movsb
or
ret
push
int
xor
and
mov
or
sbb
pop
fcompl
int3
or
inc
out
mov
js
inc
jb
sbb
andb
hlt
add
lcall
add
fcmovu
xchg
mov
sbb
pop
shll
dec
pusha
cmp
mov
loopne
bound
xor
test
sbb
sub
push
dec
jecxz
pop
xor
mov
and
pusha
out
add
mov
sar
xlat
es
dec
aas
dec
pop
iret
mov
fbstp
int
sub
gs
pop
in
test
test
dec
add
fbstp
imul
sbb
mov
mul
mov
fmuls
pop
dec
lds
mov
mov
addr16
mov
pop
test
lds
add
ret
inc
fst
cmp
cld
jb,pt
or
out
jbe
dec
sti
rol
shll
imul
rcll
aad
fiaddl
sub
into
insb
shld
andb
jo
aam
adc
ficoms
and
mov
dec
ds
aas
and
adc
jnp
mov
movsl
dec
mov
lret
inc
adc
pop
add
xchg
add
pop
into
inc
or
ret
and
ja
inc
pop
or
jp
cld
lock
ds
pop
push
dec
cmp
or
jo
mov
leave
sbb
int3
mov
mov
movsl
cs
ss
insb
lret
xorl
repnz
lahf
cmc
push
mov
dec
pop
jg
negb
out
rolb
inc
jns
cmp
aad
xchg
xor
dec
xor
enter
lcall
inc
fsubrp
jns
inc
shl
add
je
into
mov
and
es
push
mov
shlb
pop
into
jne
push
xor
adc
xor
xchg
fildl
je
dec
push
inc
sub
add
sbb
data16
inc
idivb
ficoms
int3
pushf
inc
push
les
into
cltd
and
sahf
sbb
pop
jne
inc
sbb
popa
movsb
int3
out
out
xchg
lret
imul
xchg
aaa
sti
cld
test
mov
mov
data16
and
mov
fwait
dec
mov
push
xorb
int3
mov
push
repz
pop
push
xchg
icebp
out
fistpll
sub
fsubs
mov
xchg
jns
xchg
ret
inc
jbe
in
out
shlb
scas
das
push
cmpl
cmpsb
js
push
pop
outsl
rorl
mov
inc
dec
daa
mov
ret
mov
mov
outsl
not
sub
inc
pushf
in
jg
push
xor
into
inc
push
out
loope
adc
cs
mov
dec
push
mov
xchg
sub
movsl
int
js
mov
movsb
push
mov
jge
push
sub
add
jmp
fcoms
das
push
cli
xchg
adc
sbb
jb
xchg
dec
int3
jge
mov
and
imul
xchg
cmp
les
xchg
xchg
ds
scas
imul
xchg
test
lods
sub
fldcw
push
xor
cmp
push
ja
fwait
lret
es
push
pop
lahf
int3
jno
jp
cli
xor
jb
xor
scas
pop
mov
pop
repz
add
test
jge
xchg
out
jae
movsl
test
out
not
xchg
lahf
pop
push
push
mov
pusha
in
jo
cwtl
inc
test
rolb
out
ret
das
xor
loop
cmp
xor
xor
xor
mov
mov
inc
ds
outsb
fcomps
mov
xchg
mov
dec
or
jae
lock
push
mov
mov
and
rcrl
push
mov
aaa
test
ret
mov
out
push
cmp
inc
sbb
ret
cli
leave
loope
jno
nop
aas
dec
xor
jns
out
jbe
lcall
xlat
jae
iret
sub
mov
sbb
call
shll
sahf
mov
mov
pushf
adc
out
mov
pop
xor
mov
fcmovnbe
adc
dec
mov
stc
into
movsl
sub
out
lret
dec
in
jbe
cmp
mov
into
outsb
mov
ljmp
mov
dec
sub
or
in
adc
push
lret
out
mov
mov
push
mov
repnz
xchg
mulb
in
es
call
dec
push
lods
push
pop
pusha
sbb
into
mov
pop
stc
jne
push
loopne
test
jmp
ss
adc
jne
aad
in
jbe
out
gs
dec
xor
inc
sbb
imull
xlat
int3
and
insb
push
adc
mov
lea
or
ja
ja
inc
lahf
outsb
inc
loopne
and
aam
dec
rep
cmp
int
mov
in
mov
or
fwait
leave
test
pop
into
es
test
sbbb
mov
cmp
test
sahf
push
in
xlat
mov
sub
fistl
pushf
fmul
lods
or
xor
into
sbb
les
dec
dec
mov
fisttpll
subl
or
dec
stos
test
outsl
jmp
dec
leave
xchg
xchg
or
mov
stc
out
scas
and
mov
sub
inc
daa
xchg
push
ret
test
pop
mov
sbb
mov
push
sbb
int
sti
pop
lret
lock
push
push
out
fwait
cltd
mov
push
ror
xchg
inc
fs
popa
or
push
cmpsb
jnp
es
iret
sub
ret
movsb
inc
gs
imul
jo
lcall
js
push
mov
xchg
push
cmpsl
ja
adc
cmpsb
inc
fsubrs
push
cmpb
mov
sub
mov
lret
jne
roll
clc
and
rcr
adc
jbe
cld
movsb
and
ds
adc
jmp
out
jb
mov
aam
or
seta
inc
mov
adc
or
cmp
lret
hlt
scas
add
jb
push
data16
in
cmc
push
mov
dec
mov
inc
cmp
xor
shll
fs
sub
inc
lret
test
loopne
lods
cmp
adc
push
push
mov
push
dec
rorl
ficoml
rol
inc
jbe
sbb
jecxz
xchg
and
adcl
test
push
roll
neg
enter
pushf
sbb
les
jb
dec
fsubr
xchg
dec
jns
lcall
push
ss
mov
pushf
mov
imul
mov
test
sub
out
lea
or
push
pushl
mov
in
loope
orl
mov
loopne
xor
sbb
sub
insb
or
rorb
shlb
stc
lods
outsl
addl
or
mov
sub
hlt
mov
adcl
xchg
setns
into
mov
ret
push
icebp
pusha
xchg
fcomip
inc
test
xchg
mov
insl
scas
in
xor
mov
pop
pop
scas
into
pop
orb
jg
sub
mov
add
xor
xor
pop
lcall
mov
sbb
cmp
fsubl
push
ret
jno
in
cmp
jge
sbb
cmp
rorb
push
pop
mov
lods
mov
pop
xor
stos
int3
out
mov
out
addr16
fs
data16
movsl
push
cmp
pop
jnp
or
insl
add
or
ljmp
in
and
add
mov
daa
insl
lcall
jbe
inc
lret
mov
aad
jb
fdivs
repnz
inc
repz
and
mov
movsl
push
loop
addr16
xchg
insb
aam
fidivrl
pop
movsl
test
push
dec
repz
movsl
stos
pop
dec
in
testl
imul
movsl
in
sub
xchg
lahf
sti
sub
xchg
xchg
push
pop
ds
aam
or
add
push
xlat
mov
ljmp
sbbl
jno
and
mov
pop
clc
cmp
sbb
mov
icebp
mov
xchg
or
push
stos
ljmp
fadds
jp
scas
sar
cmpsl
je
xchg
or
iret
test
popl
push
notl
repnz
inc
mov
adc
mov
sub
icebp
dec
std
pop
loopne
je
adc
xor
arpl
in
cmp
iret
int
into
cmp
movsb
or
xchg
adc
or
push
movb
jl
mov
mov
push
movsb
mov
dec
inc
std
add
jbe
mov
mov
xor
sbb
mov
jne
adc
push
daa
out
jle
cld
sti
push
sub
or
aam
mov
rcrl
mov
and
xchg
or
sbb
xor
inc
lret
dec
adc
cmpsl
push
arpl
jno
push
ror
inc
int
dec
popf
xchg
hlt
mov
ficompl
jns
push
mov
testb
or
bound
fadds
loop
sbb
pop
sub
or
sub
pop
in
ror
cmp
iret
jo
fs
pmullw
js
cs
sbb
cld
jbe
and
mov
dec
xchg
mov
push
mov
lret
xchg
gs
xor
hlt
or
mov
cltd
xchg
addr16
scas
std
movsl
pop
out
sub
push
gs
or
movsb
int3
call
notb
mov
mov
fs
inc
xchg
adc
call
test
cmpsl
in
js
mov
bound
out
stos
iret
movsl
or
cmp
adc
or
rcl
data16
jecxz
push
push
shl
dec
test
ljmp
xor
mov
rorb
xlat
add
pop
icebp
xchg
jl
jbe
repz
lret
push
xor
sub
mov
int3
xor
out
fistl
mov
mov
fnstcw
test
sbb
jns
dec
pop
shl
push
push
outsb
aad
inc
add
rcrl
in
out
jge
in
or
mov
inc
push
sub
pop
dec
cmp
lahf
sbb
scas
cmpsl
std
sti
outsb
test
insb
imul
xchg
mov
lret
xor
aad
push
inc
popa
out
mov
scas
cli
push
add
sbb
test
pop
mov
es
pop
mov
xchg
add
into
adc
out
mov
lock
stos
leave
adc
stc
mov
cmp
xor
add
dec
ljmp
xor
or
imul
cltd
push
clc
gs
or
aam
inc
out
es
mov
ret
push
xor
subl
cltd
orl
jmp
xchg
dec
mov
aaa
into
fsubrl
movsl
and
aas
lea
sbb
cld
lods
out
mov
into
sbb
fucomi
lret
pop
jne
lahf
enter
fbld
mov
mull
mov
movsb
icebp
popf
xchg
out
mov
push
out
stc
pop
hlt
dec
nop
sbb
stos
cmp
and
pushf
push
in
pusha
lcall
mov
fldt
sahf
daa
adc
pop
sub
mov
das
push
test
fucomi
insl
mov
mov
test
cmp
gs
ficoms
lret
rcrl
loope
mov
mov
mov
dec
pop
mov
int3
ljmp
imul
jo
movsb
add
jnp
cmp
pop
pop
adc
mov
jge
sarl
adc
xchg
loope
jge
call
addr16
pop
pusha
xor
ja
mov
movsb
daa
dec
insl
pop
mov
pushf
out
repnz
clc
mov
or
cwtl
test
lcall
gs
div
dec
lret
mov
icebp
int
in
aam
call
push
out
push
leave
mov
add
mov
jecxz
pop
sti
xor
adc
jns
faddl
adc
sahf
ja
push
cmpsb
movsl
test
xchg
lret
pop
adcl
sahf
fptan
andb
nop
out
adc
lea
flds
leave
mov
cmc
ss
push
mov
lea
je
dec
jp
sub
cld
cmp
adc
outsl
sbb
cs
push
aad
stc
add
pusha
or
jbe
mov
pushf
out
xchg
mov
xlat
mov
ja
outsb
into
or
push
ficompl
add
pop
lret
sub
xchg
lret
xor
xor
sbb
jle
mov
dec
out
xchg
fmull
cmpsb
cmpsl
sub
inc
pushl
pop
sbb
mov
push
and
xchg
xor
enter
inc
sarl
xchg
jmp
or
ja
iret
push
mov
cwtl
test
push
mov
ds
insl
stc
push
push
mov
neg
je
mov
iret
outsb
inc
fs
push
or
inc
mov
jbe
fisttpl
adc
jae
add
jns
xchg
and
lahf
sub
std
cmpsl
pusha
inc
fdivrl
inc
mov
inc
xchg
or
dec
push
fs
es
loopne
fimuls
mov
repnz
mov
xchg
test
pop
loopne
fsubr
test
scas
jmp
inc
loop
jne
cmp
xchg
fcmovnbe
sub
insb
inc
mov
and
mov
and
shrl
sbb
jae
out
psadbw
push
or
xor
cld
fwait
nop
push
mov
pop
test
aam
mov
cli
sar
xchg
jne
sub
dec
out
lods
mov
xchg
xor
fldl
frndint
mov
xchg
arpl
mov
pushf
mov
sbb
cmp
rcll
orb
int3
repz
jecxz
mov
inc
loopne
xchg
add
sbb
sbb
mov
scas
push
lret
dec
ret
imulb
fisttpll
push
out
xor
dec
mov
inc
mov
inc
fs
lods
mov
ret
cmp
jmp
or
adc
out
sbb
pop
outsl
aas
popa
mov
mov
sbb
faddl
mov
fsubs
inc
movsb
jecxz
ljmp
xor
int3
xor
enter
aad
je
xor
xchg
pop
into
pusha
outsb
stos
xchg
and
sbb
pop
rcrb
sbb
sub
pusha
aaa
jns
dec
sbb
call
test
cs
mov
lds
xchg
popa
push
sub
fdivp
js
shll
cltd
mov
fsts
push
pop
adc
aaa
mov
clc
pop
outsl
ja
push
stos
test
movb
imul
aam
pusha
dec
sbb
stos
popa
imul
out
bound
and
sarl
mov
push
lock
aas
cli
pop
inc
cmpsl
inc
es
pusha
jno
mov
std
sahf
das
call
iret
xchg
sub
add
cli
stos
mov
ljmp
push
mov
shll
ret
decb
add
sub
stos
push
xchg
and
or
ljmp
dec
nop
into
and
lods
out
div
mov
fs
jo
push
pushf
or
lret
xchg
scas
shrl
cs
xchg
sub
cmp
sub
add
sarl
xchg
mov
pushf
xchg
cld
loopne
xor
push
bnd
or
dec
cmpsb
pop
cmp
sub
mov
clc
adc
adc
fimuls
repnz
lcall
mov
ror
sbb
roll
out
in
mov
and
xor
dec
xchg
xor
add
rorb
xchg
rolb
dec
pop
sub
addr16
pusha
cmpsb
lea
icebp
xor
movsb
dec
sub
or
add
fnstsw
hlt
test
mov
imul
cltd
xchg
xchg
mov
in
fadds
or
into
xchg
mov
test
or
sbb
js
xor
rcl
sub
clc
xchg
cltd
sbb
pushf
ret
testb
adc
out
xchg
xor
or
mov
pop
insl
add
fbld
jns
gs
out
jno
push
bnd
enter
out
sub
xor
imul
jne
into
jge
movsb
popf
lock
out
mov
dec
mov
push
cmp
dec
mov
and
push
pusha
xchg
dec
sbbl
cmc
lea
into
pop
into
or
sbb
fwait
sub
mov
out
test
into
jecxz
jle
pop
fs
int3
loopne
adcb
testb
daa
in
pop
cmp
and
mov
sub
dec
mov
clc
js
sub
push
out
testb
xchg
sbb
into
mov
stos
adc
inc
cmp
popa
or
add
test
xchg
out
fincstp
dec
decl
add
int
mov
pop
adc
pushf
xchg
sbb
or
add
in
in
pop
pusha
stos
stc
pop
bound
data16
lret
popf
mov
sbb
in
sbb
hlt
out
mov
inc
cmpsl
sub
out
jno
nop
inc
xchg
std
mov
test
int
packuswb
dec
into
mov
and
not
mov
jle
mov
or
sub
pop
outsb
add
cmp
ret
push
data16
push
js
pushf
mov
jbe
jno
dec
shr
xor
and
mov
cmpsl
loopne
or
aad
rorb
lea
fsubrp
movsl
pop
in
lret
decb
pop
roll
jmp
call
jbe
mov
into
sub
mov
loop
std
test
mov
jb
daa
adc
mov
jo
out
sbb
test
enter
dec
pop
int3
xor
std
push
out
es
lcall
sbb
in
pop
xor
sti
cmp
les
pop
jb
adc
sub
stos
test
push
int
push
stos
pop
jle
push
adc
push
je
jg
icebp
jmp
stc
and
push
push
ror
fdivs
or
aas
fwait
into
sub
xchg
push
repz
test
cwtl
lds
idivl
test
popf
loopne
cs
push
jns
sahf
lahf
sub
notl
jl
and
cltd
test
pop
mov
addr16
push
daa
cmp
ds
repz
out
lods
outsb
dec
xor
out
add
cmp
jecxz
sbb
dec
arpl
mov
sub
into
pop
jle
aad
mov
imul
and
jbe
push
out
mov
push
outsb
jae
pop
pop
and
enter
iret
xchg
inc
mov
popa
mov
pop
idivb
push
mov
adc
adc
sti
lods
sub
loopne
cmp
sbb
jmp
adc
and
and
mov
das
or
sbb
mov
pop
lret
jb
xor
scas
or
test
filds
jae
adc
into
out
push
mov
cmp
mov
xchg
dec
cld
pusha
mov
out
xchg
mov
shr
lret
cmp
xchg
lcall
cld
incb
notb
push
and
add
and
divl
mov
lret
jae
dec
aam
insb
call
ljmp
pop
sbbl
movb
out
popa
movsl
fcom
call
mov
sbb
fwait
or
popf
sub
mov
or
stos
add
scas
cmp
sarb
jp
int3
clc
popf
and
add
mov
pop
dec
push
fsub
push
test
lret
sub
xor
dec
inc
lcall
loope
inc
jno
xor
or
lods
xchg
dec
push
jne
sub
and
mov
rol
jno
sbb
leave
scas
mov
mov
push
adc
js
mov
mov
jg
mov
push
adc
dec
bound
lcall
fistl
cmp
sub
aaa
push
or
int
gs
cmp
mov
clc
and
sub
fidivrl
movsl
rol
shlb
push
sub
push
bound
push
lret
xchg
scas
sub
sbb
sbb
pusha
jmp
dec
addr16
jmp
es
dec
add
shll
addr16
sub
stos
or
push
mov
stc
mov
add
mov
lods
popf
ss
pop
mov
mov
stos
punpckhwd
push
popl
adc
movsb
mov
jge
adc
sub
test
xor
pusha
int3
lret
sahf
movsl
sbb
leave
jae
out
mov
jbe
out
pop
pushf
mov
push
xor
mov
lret
outsl
iret
jl
js
inc
out
xchg
mov
or
popf
adc
aaa
sbb
push
pop
lret
aam
movsb
cltd
mov
fsubr
xchg
fmulp
cmp
icebp
and
or
cs
jns
out
int3
cmp
add
fs
and
jb
out
mov
pop
popl
add
data16
idivl
out
insl
inc
xchg
adc
inc
push
pop
mov
push
fcoml
jns
jecxz
rcl
mov
jg
add
and
in
mov
push
pop
mov
adc
mov
test
adc
stc
js
mov
lahf
test
jg
lret
rclb
rcl
cltd
aam
mov
inc
shlb
pop
jne
mov
push
adc
hlt
or
ret
inc
xchg
inc
mov
xor
aam
add
movsl
push
jmp
repz
sbb
in
jp
popa
int
xchg
sub
out
inc
insl
jle
aam
push
sbb
rcrb
lret
xchg
add
cmp
leave
jnp
lahf
mov
fcoml
sbbl
mov
enter
xor
sbb
push
jg
repnz
mov
adc
dec
andb
mov
into
divb
jns
push
sub
add
dec
cmp
test
xchg
into
fstpl
and
push
mov
lret
xchg
inc
fs
jg
fstps
leave
out
and
mov
js
imul
jae
cmp
dec
popa
out
jo
lds
mov
gs
pop
xchg
std
out
xor
push
imul
fistpl
pop
aam
adcl
inc
or
mov
inc
or
stos
cmc
das
inc
sti
lods
leave
xchg
imull
bound
arpl
pop
repnz
inc
cmp
mov
sub
pop
in
pop
fwait
xor
add
add
jae
jle
or
mov
test
mov
in
adc
inc
jmp
mov
movsl
jae
test
add
jl
pop
sub
mov
xchg
fimuls
mov
cmp
bnd
shl
cmp
lcall
in
sub
in
arpl
adc
stc
mov
pop
mov
mov
dec
out
mov
aad
dec
xchg
lods
lret
xchg
mov
and
mov
enter
push
and
jge
int3
adc
lcall
inc
cmpsl
inc
xchg
push
push
mov
mov
mov
mov
addl
cltd
dec
push
call
fnstenv
aam
sbb
fadds
jbe
dec
addr16
hlt
add
mov
add
out
adc
lds
data16
inc
xchg
jbe
notb
add
imul
mov
mov
push
xchg
inc
cmp
decb
or
mov
std
dec
test
push
mov
dec
mov
adc
mov
icebp
repnz
iret
aam
test
pusha
mov
cmpsb
jmp
jl
ret
mov
fwait
movsb
sub
mov
add
jnp
pop
bound
test
fwait
push
add
popf
sub
pushf
cmpsl
iret
pop
xchg
jo
lea
push
push
fimull
adc
scas
pop
cltd
test
sbb
mov
adc
cmpsl
push
jb
jp
mov
jns
test
sbb
pusha
mov
leave
adc
mov
add
scas
inc
lods
inc
cmp
shrb
pop
push
sarl
lcall
and
mov
jo
xchg
jle
dec
or
fs
clc
nop
outsb
push
and
fcmovbe
xor
xchg
and
das
ret
aam
push
jne
fsts
jbe
lret
dec
aam
xchg
jbe
pop
jecxz
das
or
in
pop
cmc
imulb
dec
cmpl
sbbb
push
push
xchg
mov
out
dec
lods
pop
push
and
mov
push
es
pop
or
xor
cwtl
arpl
daa
out
xor
dec
xchg
in
xchg
fcmovbe
aad
mov
aaa
add
lret
dec
sbb
fnstsw
sbb
pusha
push
mov
mov
mov
and
fsubs
popf
out
scas
mov
lret
ja
mov
gs
xchg
push
stc
mov
not
out
mov
test
sub
repnz
mov
fs
xlat
push
out
inc
mov
faddp
orb
jno
ss
push
bound
xchg
movsl
mov
test
rcrl
lock
xchg
and
icebp
loope
fadd
and
adc
mov
aaa
lds
pushf
sbb
mov
mov
stos
mov
dec
in
into
gs
sub
outsl
sub
fnsave
mov
add
test
xorl
xchg
xor
cmp
or
fsubs
cmp
into
inc
jle
sbb
xchg
sub
and
out
pop
dec
dec
imul
leave
adc
and
js
scas
mov
dec
mov
out
xchg
cmp
cld
addb
xlat
test
rcrl
push
jo
mov
sarb
and
add
dec
insl
movsb
or
into
pop
lcall
jg
mov
pop
jle
mov
int
and
aaa
adc
in
int3
mov
mov
out
cmp
jl
inc
fsubrl
pop
stos
sbb
and
cli
inc
iret
popl
push
and
mov
mov
pop
pusha
repz
dec
fcompl
es
dec
adc
adc
xchg
add
in
push
sbbl
addl
dec
notl
jmp
add
sarl
jg
add
mov
mov
lret
leave
inc
push
nop
cwtl
insl
mov
outsb
test
and
dec
pushf
ret
call
lock
mov
repnz
pop
mov
shll
insb
test
and
mov
and
fisubrs
ds
push
in
xchg
test
and
inc
sahf
sbb
add
test
fsubl
out
or
sbb
adc
hlt
mov
out
pop
addr16
mov
aam
mov
pop
int3
cmpsl
les
xchg
lods
push
jl
adc
push
rcrl
icebp
jecxz
or
aad
xchg
cmp
je
add
cmp
arpl
enter
mov
adc
xor
or
or
pop
test
fsubl
or
js
ficompl
subb
or
sti
xor
jbe
adc
ljmp
lret
jnp
arpl
movsb
sbb
jo
sar
cmp
fs
jle
jg
xchg
insl
xor
andb
stos
fwait
xchg
cmp
xchg
sarl
sbb
shrl
movsb
call
dec
mov
test
sbb
sub
not
outsb
jbe
pop
enter
push
addr16
xchg
hlt
insb
std
sbb
mov
movsl
arpl
mov
xchg
fsubrs
inc
es
mov
adc
adc
mov
out
push
ss
out
ret
adc
add
lods
or
push
rclb
sub
inc
in
mov
hlt
inc
lret
mov
and
jp
imul
fwait
les
stos
sbb
push
and
ss
ret
mov
pop
push
or
jnp
mov
pop
mov
dec
ror
mov
and
jb
ds
xchg
cmpsl
mov
xchg
movsb
aam
inc
cmp
jmp
pusha
push
daa
out
lret
sti
dec
popf
nop
fnstcw
mov
cmc
push
mov
insb
cmp
daa
xchg
push
jbe
movsl
stc
int3
mov
ret
les
and
adc
pop
ss
enter
leave
push
mov
fs
xchg
aam
test
mov
js
xlat
mov
mov
aam
incb
hlt
adc
push
and
lahf
movsl
xor
sbb
in
imul
pop
test
ljmp
addr16
test
cmp
les
push
mov
mov
xor
testl
xor
mov
mov
pushl
sbbl
mov
add
fsub
pusha
push
and
sar
cmp
mov
fadd
inc
iret
push
mov
jbe
or
and
mov
mov
jnp
int
mov
in
mov
xor
sub
cwtl
hlt
add
push
fwait
imul
cmp
cwtl
sub
xchg
and
jne
pop
fst
push
test
orl
cmpsl
lock
mov
mov
jg
sbb
scas
xor
lds
cs
shll
xor
iret
cmc
xchg
data16
mov
lret
stc
mov
scas
jle
pop
popa
test
jne
push
sub
sbb
inc
lds
lock
aam
push
in
dec
push
cltd
sbb
xchg
into
add
out
aam
xchg
mov
or
push
inc
and
out
dec
jne
cwtl
pop
sti
fsts
and
sub
aam
pop
call
or
mov
stc
sub
mov
add
ret
cmp
leave
hlt
repz
mov
fidivrs
jno
dec
adc
mov
addl
push
dec
shl
jns
xchg
mov
insb
pop
adc
ja
into
cmp
jmp
adc
popf
rcl
jg
or
add
cli
mov
std
decl
repnz
or
adc
imulb
ficomps
pop
stos
mov
inc
mov
xor
std
add
lea
and
mov
add
push
rorb
out
mov
pushf
dec
stos
sbb
add
in
mov
das
mov
aas
lret
cmpsl
inc
pop
orl
mov
xchg
and
fcom
into
cmp
adc
aam
stos
lahf
rorl
sbb
push
test
sub
enter
sahf
lds
jno
test
dec
push
jmp
cmp
leave
mov
adc
jp
lods
call
into
repnz
jmp
rclb
mov
dec
sub
popf
cmpsb
insb
test
xchg
lods
aad
outsb
stos
lcall
push
ret
xor
jno
leave
pop
ret
push
dec
or
mov
imul
push
push
cmp
loop
add
mov
adc
add
mov
and
sbb
inc
push
je
insl
sub
fwait
push
inc
lahf
cs
add
cmp
lret
ljmp
adc
mov
js
lret
add
movsl
push
xchg
or
mov
fmull
fcoms
repnz
ljmp
ds
pop
cmpsb
push
dec
and
and
or
mov
icebp
mov
ret
xor
dec
shrl
xor
sub
xchg
int3
sbb
sbbb
push
or
jl
jge
and
rolb
clc
orl
mov
or
push
cli
sbbb
lea
pop
push
mov
sbb
test
mov
iret
xlat
jnp
pop
mov
sar
ljmp
mov
mov
fnstenv
mov
cwtl
jbe
fwait
das
ds
mov
push
jbe
mov
into
leave
lret
sti
mov
mov
es
bound
or
xchg
cmp
lret
jo
gs
test
inc
fcomip
mov
scas
ret
inc
les
mov
in
xor
xchg
mov
roll
pusha
fdivl
push
inc
idiv
sbb
or
mov
shrb
xchg
push
repnz
adc
xchg
lret
pop
or
xor
xchg
fwait
xlat
pop
mov
jnp
insl
cmp
das
ror
icebp
stc
cmp
mov
inc
sub
fnstcw
and
movb
shlb
pop
dec
lret
das
lods
jge
or
add
inc
mov
ds
jle
and
clc
test
jo
add
ljmp
adc
clc
add
test
addr16
lret
fimull
iret
repz
scas
movl
out
cmp
xchg
push
sub
out
std
aam
ret
inc
cmp
add
fcomps
mov
fs
loop
cmp
fldl
insl
into
or
push
cmp
inc
test
test
lret
jmp
mov
inc
notb
jne
mov
dec
and
add
leave
lret
enter
xor
sbb
or
imull
mov
popf
sbb
or
fmul
push
outsb
imul
xor
iret
adc
aam
jbe
or
lret
mov
sarl
sub
mov
filds
fadds
pop
lret
popa
pop
jne
jg
aaa
daa
shl
inc
iret
and
add
pushf
cmp
mov
int
out
push
jns
stc
mov
lahf
pop
dec
mov
adc
add
dec
out
and
jmp
inc
dec
idivb
and
push
leave
psrlw
mov
pop
sub
inc
shlb
jmp
out
inc
or
je
sti
pop
jns
repz
arpl
lret
icebp
pop
inc
fistps
mov
test
dec
add
or
ret
stos
dec
rcrl
adc
fnstsw
repz
orb
loopne
es
test
fcmovnu
mov
out
dec
xor
mov
cmp
movsb
push
lds
add
push
jp
rcl
mov
sub
test
sti
mov
push
jns
repz
xor
ror
pop
movsb
inc
ds
mov
xor
lret
scas
movsl
pop
inc
into
rcl
fisubrl
pop
xchg
data16
nop
xchg
ja
push
xchg
and
imul
mov
pop
xchg
mov
mov
cs
aam
sti
pop
call
mov
iret
sbb
xlat
pop
xor
daa
pop
lea
adc
flds
mov
mov
xor
scas
insb
cmp
jge
movsl
mov
into
sbb
push
sbb
ret
push
push
add
inc
iret
fistpll
rol
sbb
fstpt
rcrl
fcomp
sub
mov
loope
sbb
lea
popa
jae
push
or
shr
jno
cwtl
mov
inc
sbb
out
push
stc
icebp
dec
shrb
mov
arpl
fisubrl
pop
in
lock
data16
xor
mov
sub
leave
sub
push
or
xchg
fsubl
mov
push
inc
inc
mov
xchg
arpl
rorb
test
add
inc
jne
cmp
xchg
decb
sub
xchg
lret
mov
and
aaa
adc
jno
cltd
in
lock
jg
jbe
shrb
aam
stos
push
lods
sahf
xchg
mov
ret
les
sub
or
fwait
add
insl
jo
or
xchg
imul
cmpsb
adc
into
sub
inc
adc
lret
inc
icebp
cmc
mov
stos
pop
negb
shrb
dec
jne
jb
into
jns
push
repnz
roll
jl
xor
call
inc
repnz
lods
ss
test
cmp
leave
ljmp
sbb
pop
or
fwait
mov
lcall
mov
dec
and
jmp
lods
mov
add
or
int
xchg
or
inc
jl
stc
and
push
xor
adc
mov
xor
xchg
mov
xchg
outsl
rcrb
in
jb
push
test
mov
jmp
sbb
stos
mov
dec
inc
dec
clc
bound
fstl
lods
test
xchg
mov
loop
test
mov
adc
jmp
xor
xchg
pusha
repnz
xlat
dec
mov
dec
xchg
mov
ds
inc
inc
mov
lock
push
push
dec
movsb
insb
lods
dec
cld
cmp
jecxz
dec
or
stos
rorl
dec
jbe
and
xchg
lods
adc
rolb
out
cmpsl
sub
mov
loopne
sahf
pop
mov
pushf
insl
mov
xchg
in
mov
lods
xor
mov
mov
lods
lahf
leave
pop
inc
or
lea
lock
aam
jp
mov
ja
sbb
mov
xchg
mov
sti
adc
inc
mov
loopne
in
enter
push
pop
add
popf
or
dec
mov
adc
sub
jb
adc
aaa
pop
cmc
and
mov
jae
daa
ret
popa
or
lret
dec
jo
pop
mov
fcoml
adc
das
lret
mov
out
sbb
pop
dec
and
aam
pop
das
mov
out
xchg
adc
mov
movsb
dec
add
and
push
out
xchg
push
adc
dec
lret
and
mov
fnsave
jge
add
sub
push
inc
out
sub
pop
cmpsl
add
xchg
inc
cmc
push
adc
mov
add
push
xchg
clc
rcrl
ss
xchg
adc
test
jno,pt
xchg
jle
out
push
mov
aad
int3
mov
push
dec
dec
xchg
and
daa
sub
inc
mov
mov
out
adc
sti
push
lods
sub
cmp
push
fisubrs
loopne
shlb
popf
stos
adc
inc
xchg
das
pop
cmpsb
mov
mov
iret
dec
cmp
sub
and
movsb
adc
jge
fidivrl
out
mov
test
jo
xor
xor
loop
in
sub
jbe
stc
cmp
mov
test
into
fimuls
sub
jno
mov
out
mov
inc
sbb
fldt
call
mov
sti
cli
sahf
test
xor
ss
je
mov
cs
push
lret
sub
cmpl
jo
cmp
ljmp
dec
pushf
lret
pop
loopne
push
or
rorb
dec
enter
popl
popa
ffreep
mov
in
add
xchg
push
shlb
out
pop
mov
push
scas
inc
scas
mulb
xlat
mov
popa
lahf
jne
pop
dec
into
fstpt
pusha
jae
int3
jg
push
rcrl
popf
sahf
mov
ljmp
in
imulb
inc
jl
sub
and
pop
sub
popa
push
xchg
push
cmp
xlat
in
push
daa
push
lcall
sbb
rcl
call
inc
dec
pop
mov
or
xchg
je
enter
push
jmp
not
sbb
and
not
dec
fdivrs
sub
and
js
leave
hlt
sbb
jl
shrl
mov
insb
xchg
imul
notb
rorl
lret
hlt
xchg
stos
or
jno
cmp
cwtl
mov
stc
pusha
xor
test
xchg
mov
movsb
popf
or
xorl
int3
xchg
scas
aaa
cwtl
cmp
xchg
mov
adc
sahf
popa
adc
mov
cmpsb
dec
daa
mov
loope
test
jl
out
repz
or
pop
or
inc
fadds
sub
push
inc
fimull
fcmovne
ss
loope
xchg
in
push
notl
or
jnp
cld
mov
out
ret
xchg
and
mov
push
mov
int3
jbe
int
sbb
jno
mov
pop
add
mov
movsb
jge
outsl
xchg
dec
in
popf
mov
mov
jg
gs
sbb
fs
mov
popl
xor
inc
cmc
sbb
mov
jne
push
mov
fdivr
loopne
mov
inc
fisubrs
xor
xor
dec
lods
and
dec
push
int
xlat
or
mov
add
stos
fldl
mov
xlat
rcll
or
clc
pop
jb
mov
pop
pop
xor
cmp
mov
xchg
into
cltd
xchg
mov
fidivl
cmp
or
add
inc
mov
push
stos
adc
jno
cs
push
lahf
jo
adcl
sar
add
mov
mov
push
mov
jb
dec
adc
loopne
or
xchg
jg
push
cmp
mov
scas
shl
sbb
push
xchg
mov
jl
es
punpckhwd
push
lods
arpl
aam
int
scas
lret
lock
bound
push
std
cwtl
jg
mov
push
out
not
sub
es
rcr
rcll
cmpsl
and
xlat
das
fnstcw
dec
sbb
xor
sbb
xchg
push
adc
xchg
in
pop
fimull
scas
outsb
ja
aaa
testb
pushf
push
popf
mov
ret
shl
enter
sub
test
sbb
dec
push
int3
fsubr
cmp
repz
push
sub
sti
mov
sbb
push
xchg
popf
rcrl
jge
out
je
enter
xorb
jle
into
pusha
mov
jno
cmc
sbb
dec
push
xchg
xor
mov
xor
pop
xor
popa
mov
fwait
shll
inc
mov
pop
rolb
out
adc
repnz
sub
aaa
and
xor
bound
out
leavew
add
inc
jle
andl
shlb
repnz
scas
ss
stc
push
jno
loope
dec
das
xor
sahf
in
aas
xchg
add
call
push
ror
cmpsl
mov
or
xlat
lea
push
dec
lret
cmp
out
jo
lods
jbe
addr16
sbb
fdiv
xor
int3
ja
cmpsb
lods
icebp
lret
push
mov
stos
stc
push
js
pop
adc
into
in
mov
mov
stos
cmp
inc
imul
out
aad
xor
lret
cs
sbbl
add
test
lods
movsb
inc
xor
xor
adcl
mov
xchg
jnp
xchg
aas
jl
fidivrs
loope
pop
sbb
fcomps
and
imul
popf
push
or
xchg
ds
cmpsb
movsb
xchg
out
call
insl
inc
pop
out
adc
loop
push
inc
js
mov
cmp
and
loope
push
push
xor
mov
out
inc
sbb
sub
lock
jl
into
dec
pop
inc
or
cmpsb
ja
fs
into
outsb
and
out
hlt
das
outsl
or
sti
lret
pusha
les
sub
pop
pop
push
loop
movl
mov
shlb
jno
cmp
mov
dec
add
idiv
xchg
mov
cwtl
dec
data16
sub
jnp
sub
and
cmc
jge
in
icebp
xor
movsb
lcall
pushf
test
aam
mov
insb
push
aaa
mov
shll
inc
rolb
and
dec
cld
mov
xchg
or
cmc
push
fbstp
std
outsb
add
xchg
arpl
lret
lods
mov
loope
mov
cwtl
scas
sub
mov
inc
pop
or
jecxz
dec
cmpsb
sbb
jb
leave
and
cltd
dec
jg
push
mov
test
das
addr16
stos
pop
push
push
int3
enter
cmc
icebp
adc
iret
movsl
mov
adc
push
mov
pop
cld
into
inc
movsl
hlt
mov
test
loope
lods
stos
out
dec
je
outsl
push
xchg
imul
jbe
adc
push
repnz
int3
aam
cmp
sti
mov
inc
pop
repz
add
decb
mov
add
and
dec
test
clc
lods
orb
lock
add
pop
out
aaa
lods
push
outsl
mov
xor
ja
pop
ret
mov
push
adc
adc
add
movsl
clc
js
into
imul
inc
stos
subb
lea
mov
int3
push
rol
pop
lret
xor
fs
test
stos
mov
movsb
push
dec
setp
sbb
ja
mov
pop
inc
xchg
loopne
adc
aas
bound
xlat
test
mov
repz
inc
pop
jmp
and
cwtl
mov
pusha
sbb
nop
mov
pop
adc
pop
or
es
dec
jno
jns
adc
push
clc
jmp
fcmovb
leave
jp
stos
popf
jnp
lods
mov
cmc
adc
adc
push
pop
mov
repnz
dec
mov
clc
cmp
xchg
pop
add
sbb
lret
cli
fidivrl
shl
out
add
ficoms
mov
incl
and
lret
xchg
mov
cmc
sbbl
mov
and
lds
mov
scas
and
inc
mov
adcb
adc
mov
stc
icebp
jmp
adc
mov
push
je
pop
sbb
out
push
cmc
ljmp
mov
data16
xor
shr
xchg
mov
das
in
sub
ja
test
and
sub
pop
idivb
cmpsl
inc
jmp
mov
mov
pop
fiadds
std
mov
xchg
out
mov
leave
jno
push
arpl
movsb
or
orw
xchg
cmp
pop
cmc
or
inc
jne
add
lea
push
pop
sbb
in
mov
fildl
iret
pop
pop
dec
insb
adc
jbe
or
xlat
in
add
dec
rep
cmpsl
enter
sub
cmpl
dec
dec
jp
jecxz
insb
bound
rorb
mov
mov
les
clc
push
outsb
movsb
idivb
cmp
fnstcw
push
stc
sti
int3
mov
push
mov
out
pop
cmp
dec
xor
out
imul
mov
int
xchg
and
mulb
cmp
call
loopne
mov
xchg
cmp
mov
repz
sarl
shlb
sbb
fidivrs
popa
jnp
imul
movsl
pop
dec
or
push
adc
pop
pop
out
in
lahf
mov
pop
adc
xor
pop
cmp
ss
dec
or
and
pusha
push
mov
cwtl
out
stos
loop
ret
insb
xor
mov
movsl
pop
mov
xor
int3
mov
outsb
pop
popa
jge
or
mov
jmp
fninit
jo
mov
jns
push
out
andl
cmc
sbb
ret
int3
cmpsl
push
jno
pop
jbe
rorb
adc
dec
ret
insl
jecxz
xchg
scas
xchg
add
adc
int3
fldenv
adc
aaa
jp
into
or
fildll
call
int
sbb
sbb
bound
inc
mov
out
jmp
cmp
add
mov
outsl
and
sbb
dec
pop
nop
cwtl
jg
push
and
cld
dec
pop
pop
sub
and
adc
int3
scas
pop
lods
mov
clc
jg
jno
mov
cs
mov
or
mov
inc
clc
stc
ss
or
cmp
mov
cmp
sub
add
test
xchg
push
aas
jae
mov
loopne
dec
jnp
mov
rcr
enter
fdivr
data16
shlb
lods
sub
into
push
mov
xor
mov
inc
es
into
sub
push
xlat
in
push
push
rolb
arpl
jg
arpl
mov
push
jae
xor
orl
inc
into
jbe
pop
dec
sbb
mov
mov
or
test
insl
sbb
or
adc
push
fldl
xor
lret
xlat
pushf
jg
or
jle
mov
and
mov
int3
sti
loopne
shll
add
xor
push
repz
fsubr
mov
cmc
or
cmp
imul
aam
and
ja
xchg
js
stos
rorb
out
add
xchg
mov
cmp
jmp
popw
aam
loop
ds
mov
push
aaa
jmp
outsb
out
adc
testb
call
sub
cmp
jg
xchg
and
push
jne
lock
ret
cmpsb
les
mov
push
dec
int
jno
dec
push
popa
mov
out
and
cmp
arpl
sbb
dec
sub
jb
mov
into
xchg
push
pop
sbb
iret
and
mov
xchg
enter
mov
sub
popf
sbb
jecxz
pop
lock
xchg
mov
sub
push
mov
call
mov
cmp
or
pop
out
and
lahf
push
js
mov
sbb
jg
xlat
inc
mov
push
out
test
cld
ret
fimull
lret
popa
sub
lahf
fwait
int
mov
jmp
sahf
ret
inc
add
out
movsb
aas
jae
shl
push
fabs
outsl
and
jns
jmp
jae
lods
sti
orl
mov
mov
or
mov
scas
xor
dec
lods
push
pop
stos
into
outsl
inc
and
out
mov
adc
ja
push
lds
fdivl
inc
mov
fcmovnbe
pop
dec
cmc
adc
rol
push
arpl
loop
mov
incb
jbe
test
rorb
xor
xor
lea
mov
fs
in
hlt
pop
aam
xor
or
jmp
lcall
jns
push
ret
sub
lock
not
or
or
and
push
cmp
push
lret
scas
in
arpl
fbld
xor
push
shrl
mov
inc
test
xchg
push
out
adc
ret
sbb
nop
into
ret
mov
jle
jbe
and
adc
inc
stos
cmp
addr16
mov
cmc
xor
in
sbb
inc
fmuls
add
shrb
stos
test
fidivrs
push
mov
adc
ja
cmpsl
data16
xchg
inc
adcb
inc
mov
pop
xlat
out
lret
movsl
mov
dec
imul
cmp
int3
cmp
dec
hlt
xchg
out
ret
mov
sbb
mov
inc
xchg
das
int3
adc
xor
mov
sti
inc
mov
outsl
sub
inc
and
dec
shl
mov
sbb
jg
pop
jne
cwtl
out
mov
xor
and
pop
xchg
mov
movsl
sub
loop
and
or
adc
dec
push
mov
int
mov
stc
xchg
mov
jg
mov
pop
cld
mov
sti
push
mov
cmp
nop
push
sbb
addr16
mov
push
pop
adc
xchg
jo,pn
je
cli
mov
jmp
cld
mov
xor
scas
into
mov
or
inc
sbb
jbe
and
lods
jmp
call
cltd
loope
hlt
mov
push
inc
and
lahf
outsl
cwtl
inc
push
pop
pop
ljmp
jnp
add
adc
fs
enter
sbb
mov
cmp
lahf
fcmovnb
shl
jmp
sbb
adc
add
std
fidivrs
push
jno
sbb
mov
push
in
jns
adc
cltd
mov
dec
pop
subl
data16
sti
inc
rcr
or
sub
out
addr16
mov
sbb
ficompl
xchg
ds
aad
into
xor
lret
xchg
pop
lds
divl
and
sub
enter
sbb
mov
ficoml
in
insl
lret
jle
push
mov
and
xorl
mov
popa
daa
or
adc
les
adc
mulb
push
pop
aam
stos
mov
movsb
cmp
aas
lahf
movsl
fbld
mov
mov
scas
xchg
imul
dec
pusha
loop
cmc
outsl
mov
scas
push
stos
mov
push
pop
or
rcl
xchg
push
mov
inc
popf
xchg
bound
test
adc
add
adc
ret
xor
jecxz
js
mov
sbb
mov
jbe
imul
jp
ds
into
rcrl
mov
int3
int
das
hlt
xlat
pusha
aaa
xchg
pop
sbb
insl
push
jb
mov
int
cmp
push
cmp
mov
rcrb
clc
aam
rcl
add
testl
cs
jae
and
xchg
in
ss
bound
roll
xor
fwait
inc
adcb
mov
in
mov
jnp
fimuls
shrl
fiaddl
int3
repz
xchg
in
mov
adc
fstps
mov
fsubl
rcrb
push
shrl
loopne
mov
xor
nop
fimuls
aas
sarl
leave
xor
bound
test
push
fs
push
pop
sbb
dec
jo
mov
int
mov
adc
mov
adc
test
aam
andb
lods
mov
fcomps
cmpsl
pushf
mov
jb
roll
in
lods
xor
lods
mov
and
daa
xchg
out
arpl
data16
sar
cmp
dec
or
sbbb
push
out
jo
in
outsl
lock
pop
cli
push
lcall
xchg
mov
aam
test
test
fisubl
mov
cmpsb
fsubs
imul
sbb
pop
jge
repz
and
add
push
xchg
fcomps
test
es
pop
lahf
les
xchg
or
and
push
mov
mov
std
ds
fcmovbe
out
jmp
push
mov
not
xor
cld
mov
ss
lahf
and
jp
repz
xchg
pop
push
push
cwtl
in
xor
xchg
in
lcall
nop
xchg
test
jns
hlt
popf
popa
icebp
js
ljmp
mov
gs
cltd
inc
and
lahf
insl
test
inc
or
dec
fstpl
adc
xchg
inc
sti
mov
loope
sub
xchg
sbb
test
dec
inc
inc
addr16
lret
mov
pop
and
sarl
loopne
lret
mov
jne
test
cwtl
push
sarb
add
ret
ss
insl
movsl
inc
shl
sbb
pushf
sbb
ja
leave
or
inc
xchg
clc
xchg
fdivs
ljmp
scas
mov
sub
mov
lret
cmc
mov
sbb
and
adc
mov
push
pushf
ja
stos
aaa
cmpsl
pop
dec
jmp
loope
dec
js
stc
add
dec
arpl
cli
rorl
imul
ficoml
cmc
dec
jae
xchg
lret
stc
mov
xchg
call
pop
push
cmpb
jle
push
loopne
cmp
adc
add
adc
push
sub
int
mov
fidivl
aaa
lods
ss
mov
cmp
std
jae
mov
and
ror
insl
xchg
imul
or
cmp
inc
aad
movsl
xlat
outsb
jbe
test
fdivs
push
and
pop
repnz
out
test
mov
and
jo
aam
stos
jbe
dec
cmc
mov
cltd
and
dec
inc
ret
out
out
add
dec
dec
jns
inc
sbbb
test
xchg
mov
dec
adc
cli
enter
mov
cmpsb
int
ja
es
pop
sub
adc
out
mov
ss
pushf
or
out
int
jne
decb
in
mov
int3
push
sub
xchg
adc
xor
xchg
dec
jp
push
lcall
cmp
mov
popa
mov
adc
or
cli
js
sbbl
inc
insb
xchg
mov
mov
add
jae
mov
lea
out
in
imul
mov
mov
lret
pop
ljmp
mov
in
aam
loope
movsl
sub
pop
jl
mov
sub
fistpl
ljmp
test
insl
fsubrs
xchg
nop
into
pusha
add
add
xchg
or
sub
fadd
push
pop
dec
ljmp
xchg
mov
inc
push
shll
enter
mov
push
xchg
std
and
mov
addr16
sbb
icebp
imul
sbb
movl
cmp
movsb
das
sbb
mov
add
xchg
mov
into
sbb
xchg
and
dec
cmp
leave
jnp,pn
clc
jne
int
movsl
jb
push
adc
ss
pop
lret
push
inc
pop
cmpsl
pop
sbb
in
out
dec
jbe
sbb
fldl
xchg
sub
pop
loope
rclb
adc
orl
ja
aam
popf
mov
enter
popa
xchg
jecxz
dec
pusha
mov
sbb
aam
fcoms
es
mov
stc
cmpsl
jbe
or
add
mov
loope
sbb
in
in
mov
outsl
push
movsb
fimull
pop
jp
xchg
or
clc
jbe
aad
int3
gs
mov
rorb
mov
push
cmp
jge
mov
fldl
pop
add
int
test
stc
cmp
push
push
add
or
xchg
jbe
add
mov
cmp
ret
push
mov
add
sbb
adc
dec
and
shl
orb
xor
mov
fdivs
iret
fcmovne
aam
ds
repnz
xchg
dec
leave
or
inc
test
mov
sbb
leave
popa
push
pop
cmpsb
sbb
clc
or
dec
xchg
cwtl
add
out
hlt
gs
cltd
xchg
insb
getsec
dec
mov
dec
sbb
add
incl
fisubrs
sbb
lahf
jns
fstps
push
jle
cmp
lret
addr16
push
out
rclb
outsl
cmpsb
and
lcall
pop
insb
fsubs
ds
or
sub
push
jl
stos
jnp
into
mov
jbe
pop
mov
cld
mov
sarl
out
stos
sti
fcom
idivb
sbb
mov
in
adc
into
enter
push
popa
add
stos
daa
or
pop
enter
pop
jne
addr16
icebp
into
xor
inc
int3
xor
xchg
in
and
addr16
fbld
test
cmp
mov
ficomps
movsl
jmp
mov
mov
mov
sbb
xchg
pop
add
push
pop
ficomps
int
rcrb
dec
jns
dec
xchg
inc
in
mov
inc
into
push
notl
in
mov
pop
jae
push
adc
push
adc
dec
push
das
push
xchg
scas
jbe
xorl
mov
xor
sub
mov
je
lds
and
dec
stos
mov
mov
pop
xchg
pop
dec
pusha
mov
cmc
jne
sbb
inc
les
push
push
test
mov
loop
pusha
sub
imulb
xor
lods
cmp
js
cmp
push
subb
loope
or
adc
mov
iret
testb
cmp
dec
pushf
out
sub
bnd
inc
and
pop
xchg
xchg
mov
push
adc
push
int3
xchg
cmpb
mov
and
push
popa
repz
add
int3
cmc
or
add
mov
fs
jl
push
ss
inc
shrl
pop
cltd
shrl
xor
flds
test
imul
mov
push
pushl
or
pop
scas
addr16
jbe
jb
and
dec
mov
cmc
stc
je
lods
push
or
sub
lock
pop
add
jnp
in
in
dec
out
aaa
cmp
adc
or
and
out
xor
cmove
in
cld
vshufps
mov
adcl
sarb
pop
mov
scas
outsb
jl
mov
xlat
clc
pop
and
jp
enter
mov
xchg
cmp
push
mov
dec
nop
les
scas
addr16
jp
dec
sbb
imul
ficoms
cmp
and
push
xchg
cmp
and
sar
fidivrl
inc
xchg
add
pushf
popf
sub
mov
mov
test
sbb
ljmp
push
test
ret
push
fldt
shll
mov
ret
aas
lret
faddp
xor
loop
dec
push
outsl
cwtl
pop
mov
adc
cmp
iret
sbb
inc
cltd
cld
jb
ret
mov
jle
insb
nop
lea
jae
mov
mov
mov
lret
outsb
push
xchg
jl
adc
into
dec
cltd
fcmovnu
clc
mov
stos
pop
push
push
imul
dec
aam
sub
arpl
cld
pop
aaa
inc
adc
mov
aam
xor
aad
cwtl
inc
mov
ret
mov
movsb
inc
fistpl
enter
jae
shrd
mov
add
add
sub
cmp
ret
out
xor
fwait
xchg
aam
mov
mov
mov
dec
repnz
lahf
pop
popa
stos
sub
cmp
pusha
xor
cmp
jno
das
mov
push
addr16
scas
es
lcall
stos
test
imul
jae
sarb
xlat
cmp
inc
dec
enter
inc
lret
lret
je
add
push
iret
pusha
sahf
nop
out
push
cs
xlat
pop
lcall
xchg
shl
xchg
mov
js
push
aad
add
ss
fsts
fwait
push
jns
and
inc
sub
pop
mov
jo
pop
or
cli
xchg
xchg
push
mov
pop
jns
dec
push
jbe
loopne
jnp
outsb
jbe
sub
into
sbb
sahf
ret
rcl
adcb
es
jg
jno
call
mov
cwtl
push
mov
pop
mov
ret
push
and
lock
pop
xchg
faddl
aad
adc
jb
stos
hlt
push
xchg
in
fistpl
push
addb
xchg
iret
mov
test
jmp
adc
inc
dec
addr16
sbb
jge
push
xor
stos
mov
xchg
xchg
inc
mov
hlt
xchg
mov
mov
mov
inc
cmp
test
jge
push
cmp
out
xor
mov
les
outsl
lret
jge
shll
sarb
dec
mov
imul
pop
lret
popa
xchg
pop
fsubl
cmc
addr16
imul
cmp
lcall
inc
pop
aaa
fwait
dec
push
popf
mov
jl
xchg
cmp
test
subl
push
cmpb
mov
leave
xchg
lcall
fiadds
jecxz
dec
ljmp
aam
sbb
inc
fiadds
ret
stos
jp
repnz
add
add
paddd
sbb
mov
and
ja
or
jb
cmpsb
into
jg
jbe
enter
cmc
jnp
pop
addr16
and
mov
mov
orl
and
push
fidivrl
pop
into
and
pushf
xor
out
adc
dec
scas
frstor
mov
pop
cli
xchg
and
sbb
lcall
adc
push
out
pop
mov
pop
iret
gs
sahf
aam
xor
lcall
pop
pop
in
cltd
xor
mov
mov
fwait
out
hlt
and
js
adc
pop
imul
and
mov
push
xor
jbe
fldln2
xor
data16
and
int3
mov
jb
shll
or
aam
jno
sub
xchg
mov
xchg
xchg
sub
or
add
shl
scas
push
call
std
cmp
xor
ja
test
push
mov
movsl
aad
out
shl
mov
mov
mov
movsl
push
ja
pushf
lret
shlb
push
inc
xor
lret
loop
mov
in
or
adc
outsb
adc
jbe
iret
ss
in
add
lret
scas
and
rclb
sub
repnz
icebp
mov
and
popf
fisttps
test
add
in
cmp
pop
into
jo
in
std
out
out
lcall
test
add
mov
outsl
adc
push
push
sub
arpl
cmp
int
insb
out
ja,pt
mov
mov
shlb
cld
inc
mov
jp
jns
cwtl
pushf
sti
dec
bound
lds
push
dec
lret
out
xchg
add
cmpsl
jb
pusha
int3
stc
ret
lret
mov
inc
lods
scas
fs
imul
cmc
cwtl
orb
mov
mov
jne
mov
mov
lods
dec
jg
pusha
leave
in
scas
mov
sub
divb
pop
ror
jo
or
bnd
lds
inc
shrl
push
mov
mov
mov
dec
aaa
and
xchg
stos
ss
cs
stos
in
sahf
sbb
or
mov
out
adc
xchg
lock
xchg
movsl
clc
hlt
jb
push
fs
and
in
jge
add
mov
aaa
movsl
jne
mov
jbe
mov
or
mov
add
lret
pop
mov
lods
inc
inc
int3
mov
int
rdtsc
aam
sub
inc
imul
xor
mov
xchg
xlat
imul
sbb
imul
pop
sbb
xchg
call
mov
enter
ret
jns
mov
and
arpl
mov
or
test
mov
push
fadd
andb
inc
add
lock
test
adc
out
aas
into
test
or
in
push
adc
add
ds
lods
rclb
shl
repnz
cmpsb
outsb
sahf
xchg
inc
adc
or
pop
and
insb
in
sbb
mov
mov
jecxz
int
in
push
add
cmpsl
rolb
xchg
cmc
adc
push
xchg
out
xchg
lock
std
jp
icebp
rcr
and
cs
lcall
mov
in
lret
or
xchg
test
gs
mov
jmp
addr16
pop
in
shrl
jns
mov
pushf
aad
add
lods
ds
cmpsb
fimull
insl
xorb
out
loope
shlb
sbbl
mov
loopne
outsl
ja
jge
movsl
push
adc
es
subl
xchg
out
movsl
loop
xor
in
xchg
mov
push
fbld
cmp
mov
mov
sub
sbb
jbe
fistps
push
fcmovb
fiaddl
mov
pop
cmp
test
aaa
mov
fimuls
add
mov
std
add
dec
inc
mov
gs
inc
mov
nop
jne
jns
lret
adc
push
outsl
and
push
shr
sbb
mov
jmp
enter
mov
stc
xchg
xor
fcomps
addl
sub
hlt
xor
dec
lret
jnp
sbb
sub
mov
cmpsb
cmc
push
lods
jo
rcll
aaa
and
test
es
xor
loope
xchg
xor
add
iret
popf
ret
fnsave
push
cmp
pop
adc
add
lret
mov
outsb
adc
and
jp
sub
push
hlt
cmp
inc
xchg
loope
movsl
scas
not
push
pop
xor
fiaddl
fadds
cmpsl
sbb
fstpl
icebp
mov
cmc
nop
out
sbb
lret
ss
add
push
mov
adc
ljmp
xor
sub
sbb
ret
adc
idiv
in
xchg
scas
xor
or
popa
jbe
jecxz
pop
mov
adc
gs
out
shrl
or
pushf
mov
sbb
pusha
sub
pop
daa
aas
int
rolb
cmp
jbe
pop
jmp
int
pop
insl
ds
add
loopne
pop
xchg
aam
pop
and
xchg
mov
xlat
xchg
or
pop
cmpsl
push
lock
and
cmp
cmpsb
and
out
jmp
cmpsl
sbb
roll
pop
cwtl
rorb
cltd
mov
jbe
out
jnp
pusha
add
dec
das
clc
xchg
pushf
out
iret
mov
xlat
sub
jae
xchg
and
aam
and
or
mov
xchg
add
scas
dec
cld
mov
pop
xchg
mov
aas
in
incl
push
jns
out
arpl
inc
lods
cld
fstpl
ss
and
into
sub
mov
popa
dec
cmpsb
fistpll
loopne
mov
adc
jbe
mov
lcall
pusha
xor
cltd
or
sar
fs
add
cmpsl
ljmp
mov
pop
es
dec
mov
pop
cmp
jl
cmp
inc
mov
nop
adc
popf
repnz
mov
sbb
jo
sub
mov
cmp
test
pop
xchg
pop
pop
stos
mov
xchg
mov
outsb
pop
das
xor
cmp
or
jne
into
mov
or
fsubs
mov
or
sub
cwtl
aaa
divb
adc
jmp
mov
loopne
adc
cmp
das
xchg
mov
inc
or
daa
negl
and
add
movb
ljmp
mov
push
lods
stc
push
push
dec
fwait
push
lret
or
rclb
mov
lods
cmc
in
cmp
lret
fwait
fists
js
std
insl
loop
jp
pushf
mov
jmp
out
roll
test
dec
dec
adc
insb
fs
scas
mov
pop
cwtl
cmpsl
clc
jns
imul
dec
inc
cwtl
mov
mov
jo
sub
lea
and
lahf
cld
andl
xchg
cmp
inc
orl
and
jo
in
test
xchg
xchg
mov
into
cmpsl
test
fsubl
aas
add
adc
add
mov
aam
jecxz
lods
pop
ret
pop
inc
xchg
out
jp
jb
lahf
testb
fdivrl
push
or
lret
mov
sti
in
push
or
fs
jecxz
fdivs
cmp
sbb
out
push
outsb
fs
pop
mov
pop
rorl
dec
out
ret
sbb
fmuls
fnstcw
sbb
or
sahf
push
or
movsl
out
cmp
mov
xchg
insb
ljmp
or
push
mov
xchg
mov
scas
shrb
and
mov
divw
push
adc
or
dec
int
adc
fcmovbe
mov
ss
and
scas
popa
idiv
pusha
mov
and
int3
int3
inc
xchg
mov
adc
sahf
add
cmp
xchg
xchg
xchg
push
leave
pop
aaa
lods
lcall
test
fyl2xp1
movsl
push
out
or
cmc
mov
xchg
add
mov
popf
pop
fdivrs
pop
push
add
lods
rcl
ds
or
jo
sbb
jnp
cmc
inc
aaa
adc
push
in
sbb
daa
hlt
sti
push
or
jno
arpl
popf
in
shll
ds
lret
xor
scas
mov
mov
cmpsl
mov
repnz
iret
pop
mov
call
mov
mov
into
aas
dec
das
cmp
and
xor
les
fildl
push
arpl
in
or
xor
stos
das
mov
scas
fldt
pop
dec
xchg
cmp
dec
mov
insb
call
inc
scas
jp
int3
movsb
pop
push
dec
pushf
in
rcrl
enter
vcvtpd2dqx
or
rorl
fmulp
jb
movsl
lret
insb
popa
test
icebp
dec
sahf
dec
add
or
repnz
or
adc
loopne
jmp
lcall
clc
adc
or
sbb
loopne
jns
xchg
cli
out
repz
xor
or
loopne
adc
into
test
mov
dec
mov
repnz
mov
es
clc
and
jp
int3
or
push
inc
mov
cmp
jge
sbb
adc
inc
mov
repnz
xchg
je
mov
rcrl
hlt
test
out
mov
cmc
and
push
xlat
movsl
rcl
ret
loopne
enter
mov
aam
icebp
xchg
adc
cmp
jnp
jge
test
and
pop
push
nop
jb
rcl
mov
iret
dec
mov
hlt
adc
jbe
icebp
rcrb
stc
jb
lcall
mov
pop
sub
out
pop
mov
das
jg
xchg
ds
dec
pop
test
xor
repz
xchg
adc
cmp
or
xlat
insl
aaa
jno
inc
xor
and
pop
pop
arpl
mov
test
inc
je
data16
fidivl
xchg
cmp
pop
pop
push
daa
mov
movsl
clc
subl
pushf
push
and
das
inc
aam
adc
xchg
jp
movsl
in
jle
adc
lret
pop
mov
out
in
adc
jne
repz
mov
xchg
mov
sub
scas
rcrl
pop
dec
sarb
push
push
pop
sahf
nop
es
or
fwait
into
push
inc
adc
scas
out
andl
cmp
mov
loope
push
jo
dec
mov
pushf
inc
dec
ds
or
out
sahf
lret
hlt
fsub
jle
add
push
insb
es
push
mov
and
outsl
sahf
andb
mov
xchg
dec
dec
sbb
ss
mov
out
jns
popa
in
pop
movsl
pop
jecxz
dec
xor
fcompl
shlb
jle
mov
dec
sub
imul
and
lods
add
sub
rcrb
inc
fnstenv
mov
imul
xchg
pop
add
cs
inc
testl
xchg
pushf
xchg
sbb
call
push
mov
inc
in
xor
fsubrs
sti
push
into
stos
and
mov
sub
lahf
push
outsl
pop
jne
addr16
pop
mov
add
add
int
pop
jnp
and
fcoms
test
sbb
dec
aam
shll
inc
mov
in
nop
imul
push
add
mov
jb
cmp
in
popa
clc
and
mov
movsb
out
int
cmc
mov
sbb
fistps
xchg
mov
enter
lods
insb
cmp
mov
mov
out
loope
popa
pusha
xchg
sbb
inc
sub
in
andps
enter
sub
fwait
pop
cmpsb
xchg
cmp
jge
inc
outsb
cmp
into
sbb
jae
aaa
adcl
mov
cmpsl
inc
loop
jo
in
or
es
imul
sub
pop
jno
jne
cwtl
jge
fwait
mov
or
sbb
aam
mov
xchg
xchg
lds
ja
int3
xor
lods
sbb
test
mov
sarb
push
lret
jmp
jne
stos
loopne
out
in
aas
mov
data16
std
adc
or
add
lret
faddl
fisubl
jp
jbe
loopne
push
adc
ret
jmp
push
push
cmpsb
jne
adc
jg
jne
aam
mov
pop
ljmp
out
fildl
xlat
lcall
push
aaa
sub
add
testb
xchg
shrb
xchg
into
add
fcmovbe
fnstsw
iret
add
or
nop
repz
sub
sub
add
adc
pop
cli
push
jle
xchg
cmc
scas
sahf
inc
and
push
jb
dec
push
mov
pushf
dec
out
pop
addr16
xchg
iret
into
mov
jo
addr16
xor
lret
inc
mov
aas
sub
dec
incb
popf
mov
leave
shlb
mov
into
xlat
lcall
pop
xlat
push
pusha
jmp
xchg
lahf
cmp
jae
aad
adc
loopne
sub
adc
imul
insl
sub
mov
cmc
shll
lret
arpl
enter
mov
sub
add
jno
mov
repz
in
popa
xchg
movsl
loopne
sbb
inc
inc
and
pop
sbb
je
inc
addl
mov
xor
dec
push
ds
lods
add
mov
aaa
sub
or
add
inc
int
test
push
stc
in
xchg
movsb
gs
mov
ds
sahf
pop
adc
cmc
gs
fsub
pusha
dec
in
jle
jne
pushf
fists
lcall
push
xchg
cmp
jecxz
xchg
inc
gs
push
jg
jns
orl
or
xor
int3
jp
test
inc
pop
push
push
and
cmp
jp
jl
fsts
lea
mov
pusha
pop
sub
cmc
jg
jmp
mov
ret
bound
push
xchg
add
push
mov
mov
xchg
sarb
gs
lock
sub
int3
in
adc
inc
lret
test
jl
cli
sub
pushw
mov
xor
loope
sarb
pusha
pop
cmp
in
jl
push
mov
and
mov
lret
enter
test
and
lea
pop
jae
sbb
insb
add
in
jb
imul
cmc
push
add
jo
loopne
lods
imul
fadds
dec
push
mov
call
mov
mov
ss
cmpsb
int
mov
cmp
mov
or
ret
sbb
fnsave
out
shl
nop
dec
clc
mov
sub
imul
mul
mov
lods
popa
fwait
dec
outsl
pusha
sbb
jbe
pushf
lcall
mov
inc
nop
mov
scas
popf
jno
fildl
fcomp
mov
icebp
pop
push
in
push
or
cli
adc
sets
ja
bound
out
data16
xchg
aaa
add
pusha
pop
and
fs
xor
add
inc
mov
inc
dec
movsb
jg
cwtl
mov
xchg
push
pop
jecxz
subl
int3
lret
das
mov
shll
in
xlat
adc
aad
mov
push
add
faddp
frstor
push
js
mov
cmp
das
sbb
leave
movsb
sbb
shlb
adc
mov
inc
add
inc
pop
push
push
push
cmpsb
mov
ja
lcall
inc
mov
clc
bound
addr16
xor
dec
in
sub
into
mov
int3
inc
pop
mov
jne
scas
jb
pop
dec
mov
cmp
mov
add
pushf
arpl
je
dec
xchg
into
lds
int
push
push
out
or
mov
test
test
sbb
sub
jge
lret
bound
sub
sti
in
loope
out
push
push
scas
fiaddl
test
dec
leave
int
jp
dec
gs
flds
jecxz
xchg
mov
cmpsb
mov
nop
test
dec
lcall
imul
int3
pop
sub
cwtl
push
mov
ret
aad
ja
pop
out
roll
fildl
data16
loopne
xlat
incb
out
ret
add
push
xlat
cwtl
pop
out
jl
xorl
inc
dec
sbb
mov
ja
fmul
mov
cmp
jne
test
push
fiaddl
and
int3
sbb
jmp
out
cs
pop
fbstp
lret
aaa
push
dec
push
pop
and
mov
fisttps
pop
stos
adc
jne
in
out
repnz
push
in
lods
dec
add
fbld
sbb
push
scas
imul
insb
jne
and
lret
xchg
pop
rol
jmp
addr16
cmp
adc
ljmp
jl
mov
xlat
cld
notb
xchg
push
and
shrb
adc
ftst
xor
mov
push
cmpsl
sbb
xchg
jne
mov
mov
inc
push
jle
or
aaa
in
int3
into
pop
jg
jp
std
aaa
test
jge
shlb
lds
pusha
shlb
xchg
test
loop
gs
pop
rcrb
ret
iret
adcl
sbb
mov
roll
push
inc
lock
pushf
rcl
sub
icebp
dec
sbb
out
adc
pop
xor
push
add
mov
inc
sub
pop
xor
mov
pop
clc
push
or
bound
leave
sub
pushf
push
and
leave
xchg
adc
jmp
sbb
lcall
mov
jge
mov
jb
mov
hlt
lret
adc
gs
cmpsl
jno
mov
fcmovbe
push
pop
push
fistpl
repz
mov
push
xchg
faddl
sbbb
ss
jae
aam
xchg
sbb
push
in
call
test
pushf
lcall
push
stos
cmp
aas
in
adc
fistl
fwait
xchg
fiaddl
mov
mov
int3
add
cmp
add
mov
cwtl
js
leave
dec
je
es
sub
dec
inc
mov
pop
or
jle
call
js
fistpll
lods
adc
cmp
lock
outsl
test
mov
data16
mov
push
ljmp
adc
mov
xchg
aam
add
int3
cs
aam
mov
in
pop
call
aad
xchg
cli
adc
cmc
in
lock
in
pop
lret
hlt
aam
inc
lret
and
adc
push
gs
pop
js
pop
xor
out
xlat
in
mov
enter
fadd
add
in
scas
mov
fwait
movsb
arpl
popf
inc
xchg
inc
cmp
stos
push
xchg
jp
loop
test
in
cwtl
or
sbb
push
addr16
xchg
movsb
test
cmp
ret
int3
adc
xor
clc
jbe
sub
scas
adc
aaa
sti
orl
iret
mov
rcl
dec
insb
cmp
out
xchg
ja
push
test
fistl
pop
xorb
sub
inc
sbb
and
pusha
mov
sub
jb
lret
or
mov
scas
ds
xchg
or
lds
or
int3
xchg
in
lds
adc
and
test
ror
ds
insb
xchg
dec
mov
test
in
ret
sbb
out
mov
dec
sbb
call
sbb
push
xor
inc
and
xchg
adc
adc
or
cmc
xlat
push
cmpsb
stos
rcl
jl
repz
add
cmp
push
cltd
xchg
push
inc
xchg
pop
fwait
sbb
sarl
xor
and
or
or
popf
xchg
xchg
mov
mov
mov
leave
aad
cltd
sub
mov
in
frstor
or
or
mov
out
xor
aam
daa
push
inc
fxch
pop
pop
xchg
lods
ja
icebp
pusha
push
pop
test
lret
xchg
rcrb
mov
mov
push
ja
int3
dec
pop
ret
in
sbb
mov
int3
or
das
hlt
idivl
flds
loopne
int
stos
or
push
imul
sbb
xchg
cmpsb
lret
mov
jl
dec
stc
push
aas
rcll
in
fwait
jle
sub
out
das
adc
mov
ds
inc
mov
je
std
and
xchg
mov
cmpsb
mov
xchg
sbb
in
sbb
add
dec
and
xchg
aas
rorl
pop
pop
ror
je
sbb
ret
push
add
leave
iret
xchg
or
out
ficompl
mov
push
xchg
xchg
push
repnz
neg
sti
or
pop
jnp
popf
cli
sub
out
and
and
stos
push
jne
bound
mov
enter
stos
std
nop
loopne
aad
jbe
mov
push
cs
mov
push
mov
add
dec
sbb
push
xor
imul
sbb
dec
orl
mov
sbb
and
mov
pusha
dec
stos
rorb
les
xchg
es
jae
mov
fldcw
mov
mov
mov
je
xor
add
xor
push
outsb
into
push
outsl
cmc
add
int3
inc
push
lret
push
xor
das
xchg
and
out
icebp
push
ret
inc
adc
and
aad
rclb
call
xchg
push
insb
pop
mov
scas
mov
scas
jae
mov
cld
fldcw
sbb
loopne
gs
rolb
je
xor
dec
aad
adc
mov
mov
xchg
jbe
xchg
ret
mov
mov
test
mov
xor
in
lret
loop
out
inc
and
cmc
sbb
fidivrs
loop
jmp
aaa
aas
mov
ret
sbb
push
mov
jmp
movsl
inc
pop
cli
push
lds
xchg
lret
mov
inc
push
xlat
movsb
movsl
add
cmp
test
push
sub
dec
cmp
pushf
nop
mov
pop
xlat
jno
rcl
jne
or
scas
inc
ljmp
popl
pop
lods
out
int3
adc
cmp
sahf
cmp
clc
rolb
mov
lret
xorl
into
pushf
fsub
push
adc
push
stc
into
jl
mov
pop
mov
out
dec
popf
aam
xor
push
mov
pop
gs
dec
jns
cmpsb
and
inc
fstp
shll
test
or
xchg
and
push
mov
mov
xchg
fucomip
fdivrp
push
push
test
inc
dec
ljmp
mov
rcll
dec
test
jns,pn
pop
inc
cmp
shrb
popf
test
dec
sbb
in
mov
sub
lea
aam
jmp
mov
inc
dec
addr16
and
popf
ja
mov
and
pop
loope
addb
cmp
push
inc
pop
test
sti
or
fcoml
add
arpl
xchg
out
xor
cld
dec
cmp
dec
gs
push
dec
ds
loopne
cli
mov
icebp
add
fdiv
mov
int3
bound
cmpsl
fcoml
pop
adc
fsubrs
mov
fcoml
scas
sarb
dec
sbb
xchg
into
dec
xchg
out
adc
push
pusha
xor
mov
out
lods
movsl
dec
cwtl
stos
fnstsw
sub
mov
dec
out
pop
mov
dec
fcmove
movsl
mov
push
dec
xchg
jbe
neg
sub
pop
jbe
test
imul
mov
jmp
push
jle
jmp
leave
je
mov
fldt
cmp
mov
scas
jp
and
into
adc
mov
int3
inc
jmp
jle
loope
arpl
xchg
inc
xchg
cmpsl
xor
push
bswap
das
adc
fs
scas
and
mov
popf
inc
aad
pop
pop
sbbl
sbb
sub
loope
jns
inc
das
mov
std
imul
and
inc
lods
adc
mov
fdivr
scas
clc
jmp
push
mov
outsb
ljmp
mov
test
xchg
leave
in
and
jle
xchg
ljmp
xchg
in
lret
rclb
or
jp
sti
add
repnz
push
mov
lock
mov
mov
dec
mov
dec
mov
pop
adc
push
mov
in
lea
sbb
or
push
in
or
aaa
iret
outsb
xchg
decb
popa
push
rcrb
loope
mov
sub
jl
xchg
data16
adc
inc
cmc
pop
arpl
ja
cwtl
mov
jnp
rorb
jbe
cmp
pop
or
xchg
cmp
es
daa
out
test
insl
outsb
cmp
popa
aaa
mov
out
test
cmc
inc
fcmovnbe
jae
ja
lret
push
push
xlat
scas
mov
jle
add
aam
jb
lcall
jo
addl
push
xchg
mov
jno
xlat
fs
lret
mov
and
in
js
ret
pop
cmp
scas
pop
push
je
push
rclb
push
daa
dec
xlat
lret
cltd
dec
cmp
leave
xchg
mov
loopne
insb
test
leave
cmp
pop
mov
popf
int3
xchg
jle
in
rclb
cmp
inc
push
movsl
imul
jmp
pushf
out
cwtl
cltd
xchg
shll
sub
pop
cmp
enter
dec
lock
test
jmp
pop
and
fcoml
scas
enter
lods
popf
xchg
daa
out
sbb
imul
xor
pop
sub
sahf
or
mov
xchg
pop
fadd
repnz
dec
sub
loopne
pop
jge
xchg
adc
out
xchg
aaa
icebp
jno
sbb
faddp
repnz
dec
out
dec
rcr
fnsave
sti
xlat
daa
imul
add
cmp
js
fs
adc
lret
out
ljmp
mov
roll
jg
xchg
push
push
or
sbb
aad
out
cmpsb
icebp
orb
xor
movsl
rclb
cwtl
xor
or
mov
xor
das
jne
jno
mov
bound
adc
dec
jge
fimull
scas
fcmovnb
xchg
mov
sbb
call
mov
ficoms
sti
pop
out
loope
int
inc
inc
mov
push
fsubrp
jnp
inc
push
jnp
sbb
int
push
xor
imul
in
pop
sbb
add
xchg
iret
rolb
dec
cmp
sarl
jno
hlt
mov
daa
and
push
int
scas
mov
movsl
push
mov
into
cs
loopne
gs
and
jae
repz
ljmp
push
xlat
push
push
push
jmp
movsb
into
cmc
icebp
rorb
mov
lret
or
stc
mov
fs
js
mov
stos
xchg
xchg
mov
orb
jne
cmp
mov
push
fnstenv
ret
je
cwtl
push
mov
lret
movsb
cltd
cmp
cmp
inc
aad
mov
ljmp
loop
movl
lock
lods
testb
int
out
mov
repnz
xchg
lfs
popa
ljmp
xchg
add
cmpsl
jno
jno
movsl
ss
into
leave
ret
es
cmc
idivb
les
loopne
pop
fstpl
in
mov
ss
jp
aam
flds
push
mov
rcl
fildll
int
and
cld
jno
cmp
jg
push
push
xor
enter
out
cmp
movsl
fsubl
lret
or
scas
pusha
mov
xor
xor
out
mov
cmp
sahf
jle
inc
add
mov
dec
xor
xchg
and
add
lods
mov
jmp
mov
mov
int3
movsl
rclb
push
pushf
or
jae
popa
das
out
push
push
test
ret
dec
popf
dec
loopne
rcl
mov
imul
daa
xor
push
test
mov
testl
sahf
fimuls
add
fdivl
sar
leave
cmp
and
shlb
push
fucompp
mov
mov
sarl
mov
xchg
and
jge
inc
fsubr
fs
push
in
popa
sti
call
sbb
inc
lock
xlat
mov
xchg
pop
test
int3
dec
inc
push
les
xchg
lea
lock
fcmovnbe
pop
xchg
jnp
mov
jecxz
and
nop
inc
dec
or
xchg
sbb
popf
jp
out
jbe
mov
test
pop
aam
cmp
dec
rclb
or
sbb
lahf
int3
add
jne
dec
jb
jg
jo
movsl
js
roll
fsubl
mov
inc
jbe
faddl
lahf
jae
popa
not
outsl
shlb
hlt
adc
xlat
xor
mov
push
mov
loope
cmovb
push
fst
int3
sub
sub
int
add
mov
fimull
shll
jns
sub
inc
incl
inc
ret
orb
sahf
sub
xchg
inc
pop
test
in
mov
or
or
clc
pop
scas
addr16
push
and
lcall
in
cli
shrb
cmp
adc
inc
add
xorl
mov
mov
std
pop
aam
push
jns
sbb
or
shll
sbb
sbb
test
leave
cltd
add
push
sbb
mov
scas
pop
mov
rcl
pop
mov
push
mov
mov
push
jo
adc
lahf
into
inc
push
sahf
sarl
adc
mov
sub
dec
push
xchg
lcall
mov
cmp
jbe
rcrb
inc
mov
cs
stc
iret
dec
mov
mov
call
cltd
inc
xchg
xor
leave
out
xor
shll
push
inc
sbb
cmpsl
fnstsw
inc
rolb
mov
push
stos
cwtl
jecxz
ss
jnp
shrl
adc
dec
jne
inc
aam
xor
dec
pop
mov
scas
jle
lret
cwtl
call
sbb
push
push
fdivs
movsb
dec
adc
fucomip
adcb
xchg
je
lret
test
jge
addr16
mov
dec
mov
mov
mov
aam
divl
xchg
rcl
lret
add
sbb
test
add
ja
dec
into
leave
fisttpl
pop
pop
cmpsl
xchg
es
push
mov
inc
shrb
mov
ds
xorb
subl
add
xchg
std
leave
lds
lret
mov
imul
pop
inc
dec
cmpsb
push
inc
push
add
lret
push
dec
mov
jmp
jp
add
clc
adc
cmp
inc
cmp
adc
cmc
das
aaa
jnp
mov
in
in
arpl
dec
test
insl
icebp
fst
cmpsl
jae
out
mov
enter
iret
mov
push
jo
mov
mov
adc
adc
daa
mov
inc
sbb
movsl
sub
ror
lea
xchg
xchg
les
outsl
clc
cltd
push
shld
push
sti
movsb
movsl
jp
hlt
push
push
aaa
icebp
lret
inc
mov
push
mov
fists
mov
mov
lods
lret
rorb
cmp
sub
adc
sarb
dec
icebp
lods
cmp
insb
jecxz
repnz
pop
pop
jg
add
push
out
das
lahf
mov
nop
push
popf
pop
mov
xor
sbb
fdivp
in
push
jg
inc
fmuls
inc
ds
push
pop
jo
push
xchg
push
mov
pop
outsb
int3
movsb
iret
pop
mov
push
mov
lods
dec
out
je
adc
mov
push
push
push
dec
into
mov
xchg
jb
sbb
pop
push
gs
js
or
push
inc
push
cmp
or
in
rolb
subl
adc
dec
push
mov
mov
inc
and
rcll
enter
pop
aad
in
stos
xor
jge
imul
mov
add
mov
push
add
out
jp
jl
dec
int3
inc
sub
es
mov
xchg
dec
sub
cmpsb
cmp
xchg
movsl
xchg
sti
nop
inc
out
rorb
out
testl
jae
xlat
cmpsl
adcb
lock
insb
filds
loop
loopne
nop
dec
int3
ret
dec
aas
in
cmc
rcr
dec
jg
dec
inc
jecxz
cs
jo
push
mov
repz
dec
and
sub
inc
popf
cmp
adc
pusha
push
rorb
popa
inc
lret
gs
sbb
xchg
clc
mov
lcall
dec
in
pop
jge
mov
xchg
out
mov
push
xchg
fwait
lcall
lret
bswap
test
inc
mov
push
lahf
adc
popa
cmpsl
sahf
mov
nop
aaa
sbb
push
shrb
jmp
xchg
imul
lods
pop
jp
pop
push
xor
test
mov
call
push
aam
sti
cvtps2pi
mov
dec
add
iret
cmp
dec
pop
lahf
sbb
inc
daa
fildl
mov
add
mov
test
cmpsb
out
mov
shll
add
into
bound
sbb
call
js
sub
push
mov
cld
fistps
int3
add
inc
aam
dec
test
enter
dec
out
ds
cmp
ljmp
movsb
sub
shr
cmp
fwait
mov
out
addl
clc
add
cwtl
jbe
push
or
lret
fsubs
in
push
pop
in
ret
fsubl
push
push
cmp
fxch
xor
push
mov
xchg
mov
mov
imul
outsl
jp
mov
out
inc
pop
pusha
repnz
aaa
test
xchg
nop
add
push
aad
sti
sarb
and
pusha
add
sbb
xchg
pop
jne
push
iret
testb
push
mov
cltd
aam
rolb
jne
fldl
push
or
stc
sub
cli
pop
fildl
orl
lock
lods
in
pop
jo
in
push
jne
mov
test
imul
call
sarl
pop
mov
cld
dec
mov
dec
lds
iret
pop
mov
into
add
xchg
or
push
xor
mov
dec
cmc
jae
pop
push
mov
cld
cmp
dec
and
fs
dec
lods
jno
cmp
push
push
lret
aaa
sarl
sti
or
shl
pop
clc
aas
je
jbe
or
test
pusha
push
xchg
test
rclb
jbe
sub
fiaddl
sarb
sub
push
sub
sbbb
pop
decb
jmp
mov
pop
das
repz
jno
pop
sbb
pop
mov
pop
ljmp
cmp
mov
or
int
lea
lret
jo
sub
push
adc
test
jae
test
clc
je
pop
inc
jle
fsubs
jmp
xchg
sbb
shr
imul
cmp
test
fnstsw
lds
jne
sahf
inc
in
out
and
sti
movsl
cmp
push
fcmove
pop
imul
pop
ret
stos
dec
mov
jl
inc
jp
cs
dec
lret
mov
mov
aad
jecxz
fdivr
xchg
scas
push
pop
fimull
ds
cmp
into
push
out
insl
push
jle
jmp
mov
inc
icebp
dec
inc
shll
fidivs
imul
lret
fcmovb
add
xor
stos
addr16
dec
loop
push
dec
push
test
shlb
into
cmp
fldcw
and
lock
je
pop
dec
or
mov
insl
ja
repnz
jae
lret
lods
fs
dec
or
inc
stos
scas
jns
cmpsb
jne
testb
loopne
push
das
aad
adc
inc
js
mov
testb
movsl
jb
mov
xchg
into
mov
hlt
stc
lret
sub
dec
aas
add
jo
notb
xchg
sub
clc
xchg
in
jo
in
cs
mov
stc
sub
outsl
xchg
pop
mov
ret
inc
jae
out
push
cld
sbb
jmp
sarb
jge
lcall
test
shl
inc
cld
mov
adc
push
add
ss
ja
add
lods
dec
dec
dec
dec
sar
add
sub
cmp
adc
sub
fwait
pop
into
bnd
shll
aaa
dec
mov
add
add
ficoms
mov
xchg
outsl
int
daa
cmp
inc
adc
or
mov
les
ror
inc
push
mov
jg
xor
dec
mov
std
dec
vpshuflw
pop
iret
in
push
daa
xor
inc
mov
xchg
and
adc
pslld
push
ret
out
lock
sbb
cmp
adc
push
and
dec
leave
jecxz
cltd
add
pop
mov
sub
push
shl
cmp
push
jns
mov
ljmp
pop
test
arpl
fists
inc
inc
in
addr16
sub
xchg
mov
push
mov
int3
sub
jmp
sbb
jb
outsl
iret
xor
push
insl
lret
pusha
cmc
xorb
out
test
inc
lret
aad
jge
in
jl
pop
add
pop
movsb
pop
in
sti
pop
mov
loopne
mov
jle
ds
into
mov
stc
dec
inc
cmp
push
es
jno
sarl
data16
jo
cwtl
out
cmp
in
lods
or
cmpsl
sub
mov
pop
fwait
jg
and
mov
leave
aad
and
outsb
ljmp
or
into
cs
xlat
es
repz
dec
mov
int
pop
je
push
mov
lods
clc
icebp
int3
inc
jbe
rcrl
sub
mov
dec
pop
or
pop
mov
es
add
mov
pop
popf
dec
js
ret
rcrb
mov
xchg
jecxz
xor
loope
frstor
fsubr
bound
push
scas
jecxz
jg
fiadds
jmp
inc
pushf
pop
xchg
test
incl
jg
popf
or
js
push
dec
push
dec
mov
stc
or
ret
mov
stos
jmp
mov
and
mov
xor
int3
mov
ss
sbb
sub
daa
add
dec
add
sub
lret
stos
das
push
xchg
inc
cmp
jne
ja
and
xor
cmpsb
jle
dec
or
and
inc
in
into
sub
xorl
inc
pop
int3
mov
cli
sub
fisttpll
cmp
test
andl
daa
pop
lret
push
jae
enter
fwait
add
jne
pushf
inc
imul
mov
scas
arpl
or
je
mov
leave
cmp
jne
jae
and
push
out
aas
loopne
cmp
sarl
mov
inc
add
add
movsb
dec
adc
xchg
inc
dec
xor
mov
push
mov
xor
lock
xor
sbb
cld
dec
xchg
jae
rep
or
cmpsl
movsl
pop
push
outsl
call
xor
test
jne
mov
jle
mov
lret
aaa
cmpsb
dec
cmp
nop
shlb
xor
jnp
lock
in
lds
lods
add
sub
pop
mov
or
pop
add
jge
ds
push
add
mov
in
and
fadds
or
and
mov
sbb
scas
rolb
sub
shll
loopne
mov
and
test
and
movsl
jmp
jo
xchg
sub
xlat
addb
lret
stos
inc
insl
mov
add
jl
mov
xchg
xchg
and
lds
sbb
shll
out
adc
jmp
dec
into
jp
je
push
add
scas
out
add
pop
loopne
lret
cmpsl
mov
adc
mov
inc
xor
into
shll
jbe
cmpsl
push
test
inc
sub
and
mov
hlt
fildll
mov
mov
mov
jne
push
test
jnp
add
pusha
in
lret
ss
loopne
mov
fs
or
mov
lods
ror
dec
pop
inc
nop
sub
pop
cli
sub
movsl
push
xor
inc
jae
ret
psllq
jp
inc
add
dec
jne
mov
lods
negb
icebp
mov
stos
or
sbb
cmp
xlat
loop
adc
add
aad
pop
sbb
adc
mov
inc
jmp
lods
or
pop
int3
mov
mov
cwtl
rolb
int3
pop
aad
stc
push
add
stos
jge
lret
push
push
pushf
dec
mov
and
negl
ret
sbb
inc
or
adc
stos
inc
push
mov
sub
jb
jae
out
sbb
lcall
jae
mov
les
sub
inc
pop
lods
sub
jmp
gs
inc
jnp
or
jno
xor
xchg
xchg
rolb
inc
cmp
xchg
or
push
mov
mov
lret
sub
lea
pextrw
gs
fstpt
aaa
and
dec
les
xor
cmp
ljmp
jo
push
sub
movsb
pop
dec
fwait
cmp
mov
arpl
inc
mov
outsb
out
dec
lds
inc
mov
xlat
sub
in
adc
jle
adc
movsb
or
bound
xor
cs
lock
mov
ror
aam
mov
data16
les
es
cmc
stos
sub
movsb
out
or
sbb
mov
aam
push
pop
imul
addl
mov
pop
xlat
push
shlb
sti
ds
in
out
js
cwtl
scas
std
pop
push
stos
cs
push
jno
ficoms
xchg
das
orb
incl
lret
and
stc
cltd
dec
mov
mov
insb
popf
or
xchg
sub
and
xor
insl
test
dec
xlat
pop
jbe
repnz
clc
les
inc
insb
mov
shl
ljmp
arpl
ret
xor
ret
icebp
pmuludq
cmp
xchg
inc
dec
push
xchg
push
cli
sbb
jmp
call
jno
sbb
jmp
adc
xlat
mov
int
dec
movsl
fdecstp
test
loop
adc
sbb
push
xor
jge
push
xchg
sub
mov
push
test
pop
inc
add
push
inc
jbe
mov
loopne
jecxz
push
lcall
sbb
jns
rorb
sub
pusha
sbb
push
fwait
mov
xchg
pop
fsubs
push
int3
test
lret
mov
test
adc
cmc
pop
pop
push
scas
push
pop
adc
lret
mov
lahf
flds
and
enter
mov
cmpsl
jmp
mov
mov
in
mov
popa
mov
xor
int3
lea
or
xchg
mov
fwait
insl
jo
add
faddl
inc
cmp
mov
lea
mov
stos
cmp
push
fwait
outsl
adc
and
repz
push
ror
lock
cmc
push
fmul
lea
dec
fsts
sub
jne
sbb
out
frstor
jnp
popl
dec
push
xchg
cmp
bound
cmp
movsl
and
mov
sbb
jecxz
cmp
pop
stos
int3
sub
and
nop
mov
sub
xchg
ret
sub
push
xacquire
inc
jns
pop
mov
push
bound
cli
lcall
adc
and
mov
dec
xor
cmc
mov
mov
sub
es
pop
sbb
cmp
and
pop
imul
nop
ret
push
add
dec
jp
pop
fldl
jns
sbb
dec
in
scas
or
pop
cltd
mov
jg
stos
mov
in
movsl
push
xor
dec
jns
fisubrs
inc
cld
mov
ljmp
inc
lahf
xor
mov
imul
jb
dec
jns
repnz
cli
mov
inc
lret
pop
arpl
sub
repz
std
loopne
pop
cmp
mov
clc
iret
cld
add
push
mov
dec
shr
fsubrl
testb
stc
mov
pop
jge
push
clts
adc
clc
into
pop
jne
xor
sub
dec
cwtl
icebp
push
movsl
decb
lret
fldl
sbb
notl
mov
add
lods
ja
fs
mov
clc
rol
lret
pop
out
lret
pusha
and
fsubrl
add
in
xchg
sub
movsb
mov
inc
mov
pop
dec
cmp
aaa
sbb
daa
pop
push
pop
adc
js
cmpsl
dec
cmp
into
mov
inc
xlat
mov
push
or
lret
add
mov
sbb
loope
cmpsb
iret
jns
push
push
pop
fmul
push
push
rol
jecxz
inc
movsl
cmp
sbb
addb
lret
clc
jle
pop
pop
ljmp
and
pop
scas
sti
fstpt
js
adc
shll
fbld
popf
push
ss
dec
aaa
test
jne
push
stos
xchg
mov
xchg
add
out
xor
fiadds
lea
int3
add
cmp
xchg
adc
incb
es
mov
cmpsl
out
inc
mov
push
sbb
dec
cmp
cmc
xor
inc
hlt
dec
int3
lods
sub
jecxz
sbb
test
fst
mov
add
repz
nop
mov
or
pop
and
push
mov
movsb
lret
inc
loop
push
push
mov
inc
out
aas
shl
cmp
pop
xchg
adc
test
xchg
mov
pusha
dec
data16
push
inc
add
mov
push
loop
rcr
ficoml
fs
inc
jae
pop
xor
into
js
cmp
mov
mov
iret
inc
jnp
imul
fsubr
push
test
mov
cltd
inc
pop
out
push
dec
mov
xor
pop
push
fwait
push
and
sbb
or
xlat
out
int3
shll
jne
loope
mov
lret
inc
xchg
sbb
into
pop
std
pusha
lock
jns
pop
push
test
adc
cli
shr
cmpsl
adc
shll
fcoms
mov
fwait
lds
and
mul
jg
sbb
mov
fmul
mov
jnp
jno
xchg
call
stc
ss
mov
jae
mov
sti
dec
and
jo
cmp
sub
ret
xor
mov
bound
adc
adc
inc
dec
iret
xchg
rcll
and
orl
sti
fsubrs
rolb
outsb
xor
xchg
movsb
test
sub
mov
cmc
and
rorl
fsts
ret
mulb
push
lret
push
iret
repz
sbb
mov
movsl
int3
scas
dec
add
aad
mov
jge
xchg
sub
dec
inc
sub
pop
int
ljmp
leave
mov
mov
push
test
out
xchg
rorb
enter
sar
inc
mov
add
or
jbe
scas
out
cld
jbe
ret
mov
dec
fdivrs
inc
cmp
cmp
out
xchg
sbb
scas
xchg
push
lea
mov
inc
sub
outsl
mov
rcl
sub
in
fwait
xor
xchg
icebp
iret
into
sub
xor
mov
scas
cmp
and
xchg
xchg
jb
movsb
ljmp
xchg
mov
ja
inc
jecxz
insb
mov
xor
arpl
pop
push
push
push
test
xor
imul
xchg
mov
mov
and
jmp
insl
inc
adc
dec
push
lods
imul
and
and
pop
test
std
movsb
iret
arpl
dec
test
pop
dec
push
add
outsb
mov
mov
mov
movsb
out
adc
or
push
outsb
cld
loop
mov
aaa
aam
pop
into
jnp
or
push
or
fists
cld
fsubrs
mov
adc
mov
mov
out
and
cmpsl
cmp
xor
pusha
aad
loop
fsubl
or
adc
enter
leave
xchg
lea
jnp
mov
je
out
sarl
fcmovbe
hlt
jbe
inc
pop
cmovne
cwtl
cld
cmp
out
outsl
cmp
rorb
ret
adc
jns
add
fsubrl
jecxz
int
dec
sub
mov
xor
adc
test
mov
push
push
das
ret
cmc
push
add
mov
push
pop
and
xlat
icebp
aad
pop
jo
movsl
nop
lret
sysret
or
fcomps
dec
push
sub
lret
scas
mov
mov
lahf
inc
inc
jnp
aad
mov
jne
sub
into
out
and
mov
lret
lcall
pop
jnp
xchg
dec
adc
fdiv
scas
orl
data16
hlt
xor
jl
xor
cltd
adc
xor
xor
mov
test
jne
push
pop
add
push
inc
stos
push
aam
cs
mov
rcrl
lret
fsts
add
mov
jae
in
mov
sbb
lock
stos
ljmp
fiadds
add
push
cmpsl
addr16
add
mov
xchg
xchg
pop
push
lahf
push
adc
insl
sub
dec
arpl
push
in
ja
ljmp
sbb
adc
push
rclb
fiaddl
aas
cmp
ja
shlb
mov
cwtl
cltd
jg
movsl
lds
test
int
enter
cmc
push
push
adc
add
into
xchg
cld
icebp
movq
mov
mov
lods
repnz
xchg
dec
cltd
je
jno
enter
movsb
mov
mov
add
fwait
jp
iret
mov
scas
psubsw
cmc
js
mov
mov
sub
aam
adc
fstpt
cli
and
push
jle
int
xchg
and
pushf
loope
aam
cmp
mov
cmp
mov
inc
in
iret
push
mov
mov
loope
out
push
mov
enter
ss
hlt
push
shrb
lret
push
cltd
mov
or
sub
pop
mov
and
aam
and
test
cld
lret
ret
aaa
out
ss
addb
or
dec
or
jmp
mov
imulb
xor
adc
out
fmuls
fcmovbe
jbe
xor
test
sub
test
inc
loopne
mov
pop
or
mov
ds
fimuls
dec
cmp
sub
cmp
subb
scas
lret
mov
sub
jnp
dec
pusha
xchg
mov
mov
pop
rol
add
xor
adc
pop
pop
fwait
mov
pop
xchg
ss
push
hlt
fcoml
imul
out
ficompl
or
outsb
push
insl
cmpsb
push
les
into
dec
repnz
mov
andb
pop
mov
jns
out
icebp
bound
inc
mov
cmc
or
mov
inc
jg
xor
clc
out
lret
movsl
or
rcl
mov
mov
out
jmp
mov
mov
inc
leave
xchg
mov
and
in
pop
mov
push
pop
out
aam
inc
inc
ja
cli
mov
jmp
insl
lret
das
mov
test
and
out
mov
mov
inc
shll
movsb
dec
add
into
scas
int
or
movsl
jp
push
or
push
lea
inc
dec
out
cmp
mov
pop
xchg
mov
xchg
jno
jns
ljmp
add
mov
addr16
jl
repnz
dec
xchg
decl
pop
aaa
jp
lret
fcmovb
mov
pop
push
jno
push
into
mov
data16
repnz
or
lds
adc
sbb
xchg
das
dec
sbb
gs
vunpcklps
push
inc
jle,pt
addr16
and
mov
pop
std
sbb
pusha
repnz
dec
or
push
in
into
lea
jnp
inc
mov
out
aas
and
into
sbb
mov
ja
and
not
mov
xor
pop
xor
and
push
popf
cmp
jbe
push
sbb
sub
mov
xchg
jnp
pop
sbb
movsw
xchg
int
xchg
dec
add
das
rcrl
stc
cli
mov
shlb
xchg
sub
push
mov
jbe
mov
push
adc
dec
data16
or
stc
jae
mov
fs
aaa
in
sahf
dec
dec
cmp
push
add
dec
pop
xchg
int3
mov
mov
or
adc
dec
mov
dec
adcb
sarl
test
sub
movsb
mov
nop
adc
mov
inc
push
mov
cmp
iret
sbb
hlt
sub
lea
mov
je
add
or
xchg
inc
inc
sbb
inc
dec
xchg
or
or
or
nop
cld
rcll
roll
lret
jmp
add
arpl
jno
ljmp
insb
dec
jecxz
mov
push
es
sub
data16
or
xor
push
sub
sahf
jp
dec
or
test
jmp
into
out
test
out
push
shr
xor
stc
pop
mov
sub
pop
add
ja
lahf
dec
mov
iret
xchg
jbe
arpl
aam
dec
out
push
or
adc
and
dec
push
enter
jecxz
roll
mov
and
and
dec
mov
sbbb
aas
rcl
xchg
xchg
xor
xchg
jnp
mov
mov
lds
mov
add
jl
xor
sbb
jge
int
and
pop
push
or
sbb
or
leave
xchg
inc
lahf
jno
cmp
mov
lds
sub
jg
rclb
push
insb
and
leave
xlat
mov
sarl
jae
inc
sti
int
adc
dec
inc
sub
std
movsb
int3
scas
add
push
dec
pop
mov
jb
out
xchg
dec
out
adc
jno
adc
push
inc
xchg
and
enter
into
stos
sub
push
pop
scas
mov
and
repz
movsl
add
dec
daa
sbb
mov
pop
or
jns
out
jb
jecxz
clc
pop
call
shl
dec
inc
or
sub
pop
lods
sub
xor
mov
mov
jecxz
mov
mov
mov
sub
pop
xchg
into
sar
mov
sub
xor
jb
data16
ds
mov
push
ret
int3
cli
rcl
leave
arpl
push
or
shll
mov
test
dec
push
add
scas
jne
movsl
rorb
shrl
loopne
dec
aam
push
int3
andl
lods
jl
mov
fcmovbe
pop
test
jb
xchg
cmpsb
loopne
push
mov
aaa
pusha
push
xor
stos
dec
fdivs
add
ja
and
lcall
je
push
mov
enter
shll
fistpl
lahf
mov
cmc
popa
or
adc
mov
push
cmp
push
mov
loope
dec
jle
lret
sub
sub
je
jbe
dec
cmc
test
dec
dec
xchg
jne
adc
pop
cmp
leave
cmc
sbb
std
sub
iret
lret
adc
jbe
rep
mov
loop
adc
push
stc
cmp
notb
into
adc
mov
filds
gs
mov
and
dec
ljmp
fsts
aam
mov
sub
mov
jnp
test
movsl
mov
mov
enter
adc
into
pop
xchg
push
popa
rcl
inc
jbe
or
jno
data16
lret
out
fidivrs
xchg
ret
adc
dec
in
mov
rolb
scas
push
inc
les
mov
sbb
jg
add
mov
andl
test
jo
dec
xchg
iret
dec
scas
push
imul
dec
xchg
lods
and
inc
mov
test
or
loopne
cmpsb
push
inc
repz
rol
mov
cmp
ds
mov
add
cmp
movsb
cmp
xor
fildll
imul
jge
and
add
int
stc
mov
cs
jecxz
adc
shlb
lret
cld
imul
mov
test
xor
mov
push
inc
int
xor
insb
jmp
or
fucomip
mov
cmc
mov
adc
cmp
dec
adc
lods
cmpb
xor
shll
outsb
sti
addr16
jnp
xchg
fidivs
push
aam
rclb
shll
aam
cmpsl
std
adc
add
jmp
es
sub
jns
xchg
in
mov
in
ja
fidivl
test
shlb
nop
mov
push
ja
push
movsl
out
inc
sti
mov
fst
sbb
idivb
sub
push
into
jmp
push
aad
aam
sub
mov
rclb
cmpsl
fidivrl
popf
or
dec
dec
fcoms
gs
adc
jbe
loopne
pop
out
sub
aad
xchg
cmc
dec
jmp
push
rolb
scas
xchg
sbb
sbb
mov
sub
in
push
int
lea
hlt
dec
gs
push
arpl
inc
clc
add
mov
inc
push
in
data16
xor
ds
mov
mov
shll
mov
add
nop
int3
mov
mov
adc
pop
loope
ja
in
inc
mov
cmc
dec
fistpll
xor
mov
lret
pop
in
jne
rcl
cmp
inc
dec
sub
ss
fiadds
das
cmpsl
jb
nop
data16
push
jno
push
ss
push
add
or
or
sub
sub
jge
jecxz
incb
push
add
into
loop
sub
into
mov
pop
insl
xchg
mov
xor
int3
and
out
xor
sub
mov
mov
std
xchg
jmp
sbb
sub
xchg
jecxz
mov
lds
mov
into
push
sub
sbb
cltd
push
jbe
xchg
adc
xchg
jle
test
out
into
adc
enter
adc
xor
inc
test
icebp
dec
mov
jp
jle
xor
mov
cwtl
movsl
push
in
repnz
fs
in
in
jo
mov
xor
mov
scas
into
add
scas
dec
leave
push
movsb
sbb
adc
bound
mov
xchg
pop
roll
lea
cmpsb
add
lret
and
int3
mov
or
ror
fbld
movsb
xor
in
mov
inc
cs
test
sbb
push
shlb
cmpsb
pop
mov
rcl
pop
aad
push
jbe
idivl
cwtl
mov
xchg
popf
sub
movsl
lahf
leave
fcom
xchg
jae
divl
popa
push
xor
mov
inc
sub
lods
into
mov
scas
push
cmpb
lret
mov
sbb
xchg
lret
ret
sbb
mov
daa
outsl
pop
js
icebp
pop
dec
lock
mov
fstl
fnstenv
rdmsr
jne
ja
aaa
subl
jp
xor
or
popa
lcall
mov
test
mov
or
pop
movsb
jno
sub
or
jmp
loopne
adc
shll
out
or
dec
ud0
pop
pop
stos
insb
std
mov
enter
insl
inc
mov
call
inc
jne
lcall
cmp
rcrl
pushl
and
adc
xchg
data16
stc
mov
lret
pop
shl
iret
push
shll
adc
lahf
jecxz
jbe
out
sub
inc
rorb
fs
xor
pop
xchg
insb
int
xchg
int3
orl
or
loop
inc
addr16
and
call
cmpsl
insl
in
movsb
into
push
xchg
add
nop
psubsb
in
dec
fsubrs
loope
dec
mov
das
in
xchg
addr16
sub
or
sbbb
fcomi
bound
std
mov
and
loop
leave
adc
pop
test
je
cmp
bound
pop
scas
pop
xorl
lret
push
jns
pushf
test
in
pop
adc
js
mov
std
or
cld
and
je
dec
cmpsl
icebp
pop
mov
add
mov
jl
push
adc
rolb
fs
outsb
sub
je
xor
push
mov
shrl
aas
sub
mov
fcmovne
pop
addl
icebp
or
xchg
or
adc
movsb
jmp
xlat
mov
or
dec
xchg
mov
cmp
jg
jno
mov
jl
cmp
subb
mov
push
insl
lods
pop
arpl
sub
in
int
jmp
inc
jno
hlt
mov
push
fnstenv
les
adc
xchg
psubusb
lods
jae
stos
push
in
inc
pushf
jno
rorb
dec
leave
hlt
das
loope
add
dec
in
lods
jne
or
xchg
adc
or
jbe
xchg
iret
shl
sbb
sar
leave
mov
lcall
aam
scas
out
jb
xchg
jae
pop
roll
add
jle
in
mov
fdivs
aas
inc
or
push
jno
push
add
cld
insb
leave
sub
push
mov
xchg
or
loop
xchg
mov
cmp
jno
xor
scas
xchg
and
test
push
fbld
and
jp
ret
fst
or
xchg
cltd
push
add
mov
dec
testb
mov
iret
mov
inc
test
out
out
into
and
mov
int
pop
inc
mov
andl
or
outsb
mov
jmp
out
mov
or
dec
pusha
sbb
stos
hlt
jo
or
push
mov
popf
in
adc
fsubs
inc
fcmovb
pop
rcrb
dec
push
js
test
and
xchg
add
movsl
push
stc
add
inc
into
mov
dec
cmp
int
push
fistpl
fistpll
mov
fcompl
cmp
movsl
scas
xchg
andl
into
pusha
jle
fidivs
pop
cmpsl
subl
and
dec
pop
lcall
inc
mov
sub
mov
fnstsw
test
xor
jl
cltd
jp
and
sti
inc
push
lret
lods
mov
ret
iret
jl
out
icebp
js
mov
inc
dec
or
mov
mov
jns
ret
mov
ss
xor
push
sbb
fucomi
jecxz
dec
pop
push
inc
imul
arpl
in
rcl
rolb
xchg
test
mov
fistl
out
push
aas
ljmp
out
sub
mov
or
test
add
add
adcl
push
cmp
loop
ficoms
push
mov
aad
dec
cli
stc
jmp
aas
and
jmp
call
or
mov
fwait
dec
jbe
not
arpl
mov
scas
in
out
cmc
mov
fcmovbe
xor
jp
insb
shlb
push
sahf
cmp
nop
std
out
add
out
xchg
sbb
mov
loop
mov
or
aam
or
shrb
and
stc
std
cmp
dec
inc
pop
dec
in
jb
sbb
mov
ret
dec
into
out
lret
mov
stc
leave
jbe
cmpsl
lods
rcl
cs
mov
sbb
mov
mov
lods
arpl
push
jne
ret
pop
cwtl
pop
and
sbb
aam
jo
sti
jne
cmp
jecxz
mov
mov
stos
inc
mov
sti
xchg
aaa
out
pop
jbe
imul
jp
in
cwtl
pop
test
push
xlat
fidivs
push
add
int3
call
jl
or
out
arpl
cmp
xchg
rcl
mov
push
stos
mov
imul
jnp
adc
bound
fwait
jns
call
pop
adc
jmp
xchg
mov
ret
jno
stos
enter
mov
sub
rcll
push
xchg
add
mov
out
push
cmpsb
into
cld
imul
and
adc
mov
inc
insb
cmpsb
sahf
mov
imul
xchg
cmp
lds
sbb
rcrl
fsubr
jecxz
mov
inc
or
ds
imul
rcll
mov
xchg
movsb
vmwrite
jne
addr16
ds
clc
out
mov
or
stos
mov
mov
xchg
in
dec
push
sub
dec
cmp
dec
jmp
mov
xlat
adc
and
scas
push
xchg
fistpl
jo
rcrb
xchg
aaa
push
test
lret
sub
inc
loop
das
push
sub
jmp
push
insl
pop
xor
xchg
and
cli
dec
inc
adc
arpl
sub
ja
adc
inc
and
cmpb
add
dec
or
jb
or
loope
call
xor
xchg
mov
scas
out
rcr
jns
adc
lock
pop
adc
iret
rclb
fidivs
sahf
movsb
adc
rorl
jbe
out
ja
lret
rclb
jns
add
stos
mov
mov
outsb
xlat
lds
push
pop
mulb
push
jmp
jnp
mov
in
cs
fnsave
and
jle
sbb
into
leave
and
jl
ret
mov
or
lahf
rcrb
iret
xlat
mov
leave
aaa
cmp
stos
pop
insl
sub
sbb
mov
rolb
xchg
loopne
mov
les
sar
sub
pop
rcl
daa
dec
fists
cmp
xor
ljmp
adc
test
or
xor
cwtl
cli
mov
jp
xor
das
leave
movsl
xor
sub
sbb
call
jno
xor
std
mov
jg
ret
add
cmp
push
inc
lret
mov
push
xchg
pop
dec
vcvtss2sd
ljmp
xor
jecxz
test
pop
push
aad
sarl
into
add
jle
popa
lea
cmp
cmc
mov
and
into
pop
pop
sub
xor
jbe
jb
fldt
xor
sbb
mov
inc
dec
adc
loop
jb
cmp
push
in
xchg
repnz
test
clc
mov
ret
push
inc
arpl
cmp
les
jae
mov
stos
out
adc
ret
adc
insl
xchg
and
jns
inc
daa
flds
test
dec
jb
cmp
add
inc
pop
mov
divl
push
sbb
int
loopne
sub
push
xchg
data16
testl
test
jnp
test
push
dec
loop
pop
push
mov
mov
es
ljmp
cmp
adc
dec
xor
stc
rolb
mov
in
mov
or
es
adc
cli
shll
jmp
dec
sub
out
mov
mov
mov
push
gs
fld
addr16
jno
rep
test
cli
mov
arpl
mov
sbb
js
add
mov
loopne
cmc
xlat
aaa
mov
loop
repz
cs
cmc
js
adc
add
mov
popf
jbe
adc
pop
pop
mov
push
into
insl
inc
ret
das
dec
mov
fistps
in
add
ds
dec
ss
cmp
sbb
lret
aam
sbb
mov
inc
xor
push
pop
jne
inc
lock
sbb
or
xchg
loopne
loope
int3
fisttps
or
nop
call
inc
in
test
mov
cld
jo
loop
mov
gs
das
sbb
frstor
mov
push
sub
jo
pop
icebp
cmp
mov
in
or
mov
xorl
rcrb
sbb
movsb
xlat
rol
pop
push
add
xchg
in
or
es
pop
into
xor
mov
jbe
fisttpll
xor
aam
xchg
xor
push
sbb
cli
dec
pop
push
out
fisubs
xlat
jo
mov
fs
adcb
fldt
in
rcrl
and
push
xchg
lret
cmp
push
lahf
pushf
popa
mov
jmp
sbb
das
ds
cmp
inc
stc
and
imul
mov
jl
adc
mov
out
push
loop
mov
sbb
adc
inc
add
jns
cmpsb
rol
lret
test
roll
jne
pop
mov
and
push
dec
add
mov
aaa
fsub
imul
leave
ret
sarb
adc
mov
ljmp
scas
push
flds
xchg
add
loopne
dec
pop
in
lods
dec
leave
ficompl
sbbl
xchg
and
icebp
adc
cmp
mov
jg
int3
repnz
push
pop
mov
out
adc
push
nop
pusha
inc
or
mov
dec
sti
mov
fsubs
cmp
aaa
outsl
ja
push
mov
mov
adc
jno
das
adc
mov
clc
popa
shlb
inc
dec
ret
fldcw
push
stos
test
sbb
mov
roll
cld
out
fcmovnbe
mov
mov
jbe
mov
push
popa
into
jbe
mov
aas
imull
or
mov
fidivs
gs
push
fcmovbe
test
add
inc
movsl
mov
into
in
sub
cmpsl
outsb
cmc
dec
sub
shrl
inc
jp
or
sub
out
adc
jl
into
repnz
cmc
out
sahf
xor
cmpl
rcl
jmp
int3
fcom
mov
fwait
push
mov
xchg
push
mov
adc
jge
dec
jne
lret
push
and
cmp
mov
pop
dec
add
outsl
cs
pusha
mov
push
push
out
cmp
mov
movsl
ficomps
fcompl
jbe,pt
pop
xchg
and
xchg
inc
int3
mov
hlt
inc
cmpsb
or
xchg
ret
in
roll
push
sub
pop
jno
lea
test
mov
mov
call
and
add
adc
mov
pop
lds
mov
lret
dec
scas
xchg
and
mov
mov
cmp
mov
pop
pop
or
adcb
inc
xchg
rorb
jbe
and
pusha
jecxz
mov
mov
cld
hlt
mov
and
int3
mov
jno
ss
add
xorb
stos
cmp
repz
jno
mov
jnp
pop
cmp
jae
das
jbe
xchg
in
nop
mov
adc
mov
sub
and
adc
sub
pop
iret
rcl
addb
inc
insl
pop
jbe
test
dec
or
add
xchg
and
push
neg
and
push
mov
out
movsb
test
imul
add
lods
xor
std
fnstcw
sti
jno
mov
cmp
jmp
add
aam
lahf
sbb
lds
pop
push
and
add
rcll
repz
js
adc
xchg
jnp
pop
or
dec
enter
sub
sbb
push
popf
jmp
shlb
pop
jno
lret
aaa
movsb
xchg
mov
dec
pop
jnp
mov
out
dec
xlat
pusha
jmp
lods
cli
imul
adc
int
sub
sbb
scas
pop
andb
in
pop
xor
inc
jne
leave
int3
xchg
enter
insb
jo
popa
inc
int
push
aad
cwtl
sarl
xchg
std
je
sub
and
push
sbb
repnz
xchg
cmp
ds
testl
mov
push
lock
push
shll
xchg
jne
cmc
push
lds
add
gs
in
push
jmp
and
xchg
mov
mov
shlb
mov
sub
and
aaa
inc
mov
out
outsb
jne
fsubrs
cs
add
mov
xchg
sahf
inc
xchg
push
cmp
mov
adc
inc
cli
fsub
xorl
cmp
adc
scas
adc
loopne
gs
push
xor
aaa
sub
xor
iret
in
out
pusha
add
je
sbb
mov
push
js
mov
jle
cmovle
insb
push
into
cltd
lock
mov
inc
push
fnstcw
sub
ljmp
adc
imul
out
jmp
mov
pop
dec
mov
loopne
dec
cmc
les
in
out
aaa
es
jne
in
xchg
loopne
loop
fcmove
out
enter
add
mov
testl
pusha
out
push
add
push
dec
cmp
push
shll
xor
push
test
sub
cmc
sbb
rolb
neg
int3
mov
imul
lret
test
sbb
ja
loope
scas
cmp
xor
pop
or
packsswb
int3
sbb
pop
aaa
mov
fisttps
or
xor
xchg
adc
test
cltd
fstpt
sbb
popa
jnp
mov
push
add
mov
dec
cmp
add
inc
into
jne
xor
in
fcomps
mov
or
push
pop
test
addl
inc
sub
jp
mov
stos
out
lret
cmpsl
dec
int
mov
push
sbbl
rorl
xchg
movsb
inc
je
push
lret
dec
test
add
sti
dec
fsub
out
dec
and
xchg
xchg
inc
jbe
test
insb
xor
insb
fbld
and
cmp
jg
test
dec
mov
outsb
data16
dec
xchg
movsb
mov
and
jg
scas
test
mov
jno
hlt
xlat
sub
adc
scas
pop
xchg
sbb
or
xchg
es
push
jmp
out
xor
xchg
adc
or
xlat
hlt
loope
push
inc
jmp
or
lahf
xor
outsb
sub
xchg
fcmovnb
jmp
mov
rcr
in
mov
cmp
ljmp
adc
or
xchg
and
pushl
dec
jle
dec
gs
stc
dec
inc
cmp
xor
or
jne
sti
push
adc
fbstp
adc
imul
sbb
cmp
ds
lea
sub
sub
stos
lret
fwait
jmp
adc
in
lret
mov
pop
cmp
mov
and
xchg
iret
out
xchg
lods
mov
sub
mov
imul
xor
mov
push
cwtl
mov
cmp
cs
push
daa
aam
push
cli
jns
pop
push
cld
shlb
data16
pop
or
mov
xchg
pushf
inc
dec
cltd
jno
rcl
lods
mov
and
push
push
mov
pop
rol
jb
test
lea
std
push
int3
pop
dec
mov
ljmp
iret
mov
ret
js
and
ljmp
mov
sub
int
leave
in
jbe
xchg
inc
ja
inc
xor
sbb
test
loop
das
mov
into
mov
dec
adc
shrb
adc
lds
out
cltd
mov
lret
loope
fdivs
mov
outsb
inc
outsl
jmp
into
lds
ret
cwtl
sbb
pop
xchg
xchg
push
stc
rclb
pop
push
dec
jbe
loopne
inc
nop
cmp
pop
cli
test
sub
mov
repnz
dec
jl
inc
repz
sahf
nop
loopne
pop
rcl
int
into
std
and
or
int3
fisubl
mov
and
enter
jmp
pop
pop
xchg
pop
xchg
push
bound
push
scas
cs
and
arpl
movups
nop
adcl
cltd
out
and
stos
test
repz
pop
sub
jb
std
mov
sbb
aam
loope
lret
pop
mov
inc
out
push
jecxz
sbbb
out
sub
push
shlb
cmpl
sbb
xor
mov
cld
push
push
jne
aam
xor
pop
or
push
leave
lahf
jbe
mov
scas
into
loope
bound
nop
lret
mov
cmp
push
inc
mov
adc
mov
ret
or
xor
lcall
mov
adc
dec
push
add
mov
scas
push
mov
jns
xchg
xchg
lock
dec
cmpsb
or
in
xor
lods
cltd
movsl
push
push
lret
inc
fs
mov
xchg
push
clc
push
lods
ljmp
js
add
jns
sub
js
xlat
push
push
ja
cmp
ss
out
lahf
sbb
decl
loop
and
loope
sbb
push
scas
lret
out
repnz
jle
mov
ja
outsb
xchg
cmp
repnz
aas
shrl
cmp
mov
xchg
cmp
test
xchg
sub
jnp
cmc
clc
fs
test
and
mov
inc
insl
popa
add
mov
push
fidivs
inc
add
add
xchg
and
mov
mov
or
movsl
push
iret
xor
sub
daa
push
and
iret
je
push
es
lret
or
dec
mov
gs
or
movsl
mov
lret
jge
xor
xchg
outsb
push
or
sub
stos
call
out
inc
ss
lcall
cld
and
aam
push
loop
cwtl
cltd
jge
inc
ja
pop
adc
pushw
rolb
into
mov
or
movsl
test
xlat
mov
mov
ret
jo
inc
into
popf
sub
ret
xor
fmul
and
stos
cs
pop
mov
inc
xchg
ljmp
pop
and
and
rorb
or
xchg
xchg
push
in
fcmovnu
cs
sbb
push
or
lret
pop
enter
mov
mov
jp
test
sub
pop
rcrl
cmpsb
movsb
xor
mov
mov
les
hlt
inc
sbb
mov
xchg
dec
jbe
stos
sti
pushl
jno
cli
push
push
add
js
xchg
aam
pop
push
popa
cwtl
inc
fs
jbe
push
aam
lcall
cmpsb
jmp
dec
sbb
out
mov
sti
pop
ja
inc
dec
bound
aam
fs
mov
mov
in
jmp
js
insl
pop
fdivs
cmpsb
mov
lock
icebp
lods
mov
or
repnz
jg
dec
repz
sub
xorl
cli
stos
mov
std
aam
je
mov
add
aam
mov
in
test
test
mov
or
out
les
loop
sub
or
int
sbb
in
popa
sbb
lock
leave
fsub
repnz
sub
ljmp
scas
push
inc
jno
or
mov
test
inc
ret
or
sbb
imul
mov
icebp
and
add
jns
mov
fcoms
cmc
std
sub
mov
aaa
sbb
push
xchg
push
or
in
adcb
pop
gs
dec
scas
sbb
push
sub
sbb
addr16
repz
mov
in
daa
test
xchg
fiadds
mov
shl
or
pop
mov
lret
test
mov
pop
std
inc
rolb
inc
movsl
scas
jg
divb
cmc
pop
mov
shr
xchg
aad
pop
jb
mov
into
out
test
stos
xchg
lods
push
into
and
adc
xor
dec
pop
inc
nop
cmc
cmp
repnz
push
jbe
lret
shll
xchg
pop
ljmp
add
mov
inc
imul
aam
fiaddl
sub
mov
mov
cmpsb
dec
pushf
xor
movsl
mov
std
dec
or
push
ror
aas
pop
adc
pop
pop
xor
pop
mov
mov
in
hlt
pop
jbe
call
rcl
jne
mov
sub
mov
mov
movb
mov
push
jo
daa
or
add
adc
mov
push
mov
dec
fsts
lret
fisubs
add
fwait
lahf
cmp
aas
cmp
pop
aad
inc
into
dec
sbb
leave
repz
gs
scas
dec
adc
cmp
jle
mov
in
lret
mov
cmpsl
and
cmpsb
or
pusha
xor
mov
int
jg
cmp
out
popf
aam
pop
nop
loopne
das
out
pop
rolb
pop
cmp
push
jmp
pop
into
in
loope
inc
movsl
inc
rcrb
or
jno
push
sbbb
push
inc
sbb
incb
hlt
aad
in
push
xchg
dec
lock
ret
lret
jge
inc
loopne
ret
stos
insb
imul
jbe
rol
in
dec
pop
mov
add
into
insl
add
outsb
mov
mov
cs
or
fcmovbe
push
adc
add
jo
xchg
fnstenv
xchg
adc
xchg
pop
ss
dec
fimuls
push
or
insl
jae
and
scas
loop
lret
mov
stos
lods
mov
jns
and
add
loope
add
imulb
arpl
sahf
mov
pop
mov
into
lock
pop
mov
aam
outsb
repnz
in
inc
cmc
ret
dec
or
pop
add
jne
pop
in
divb
push
cmp
fadds
mov
dec
pop
in
sub
rcrl
loop
aam
into
pop
lods
mov
notb
and
repz
out
lds
ret
rorl
push
fsubrs
add
rcrl
push
mov
lret
xlat
cmp
mov
inc
or
push
ds
nop
pop
jbe
xchg
popw
push
adc
js
dec
mov
add
ds
inc
out
shll
pop
jge
inc
sbb
lret
pop
ss
stos
into
icebp
or
push
and
pop
insb
lods
loopne
outsl
std
mov
ret
adc
inc
arpl
into
test
cmp
push
dec
mov
sbb
fdivrs
xorb
cmp
pop
popf
cmpsl
bound
jb
arpl
jns
shlb
nop
xchg
sar
test
ss
adc
sub
jmp
fs
jl
sbbl
ja
into
pop
mov
adc
inc
fmul
add
inc
jae
fcompl
mov
jo
or
or
out
inc
test
sbb
jl
gs
push
in
mov
clc
jg
rcll
jp
arpl
rcl
inc
mov
in
insl
test
xchg
cld
out
jle
jp
test
inc
in
out
inc
xchg
dec
mov
cmp
inc
push
not
fwait
mov
jp
mov
mov
xchg
lods
sbb
xchg
fldcw
add
icebp
fadds
mov
int3
add
cmpsb
fidivrl
push
sub
repnz
in
xchg
sub
inc
out
adc
sub
leave
outsb
sbb
mov
push
in
fisubs
xchg
rorl
and
push
jne
mov
jnp
inc
jb
iret
pop
mov
ret
inc
sarl
test
icebp
inc
sbb
xchg
mov
fimuls
adc
mov
xor
add
inc
inc
inc
outsl
into
rcl
mov
pop
loope
mov
mov
shll
sbb
push
jne
lock
aas
loopne
insl
les
lahf
int3
jecxz
jp
jae
mov
out
xchg
push
fwait
std
and
or
loop
inc
xor
and
jmp
test
cmp
push
sar
out
js
mov
scas
data16
int
and
mov
in
sbb
push
insl
js
mov
xor
ljmp
sti
fdivrl
sarb
push
repnz
jge
int3
shrb
mov
pop
push
ljmp
ret
cmpsl
in
movsb
adc
jg
ret
outsb
popa
out
mov
dec
loope
leave
shl
push
mov
fisubrl
jno
aam
in
pushf
sub
mov
test
clc
bound
outsl
stos
int
imul
sbb
les
aam
notl
xchg
inc
stos
xor
and
ficoml
daa
inc
shrb
cmpsl
or
fstl
cs
repz
insl
mov
imul
mov
sbb
mov
aam
loop
mov
jl
cmc
jle
inc
fdivp
imul
push
aad
shll
xor
out
xlat
pop
pushf
nop
dec
loop
jne
in
sbb
pop
add
xor
idivb
pop
sub
adcb
lods
jae
xchg
call
nop
jb
xchg
sahf
ljmp
jecxz
xchg
cmp
xchg
insl
xor
add
outsl
adc
in
orb
and
icebp
push
pop
jne
shl
push
or
pusha
sub
mov
out
lcall
sub
xchg
lret
repz
sbb
into
mov
adc
push
shll
cli
or
xchg
shlb
xchg
mov
ficoms
cld
jg
ljmp
lock
mov
ja
add
mov
pop
sub
fldenv
add
lods
mov
sub
pop
add
push
fcomps
adc
icebp
xor
cwtl
mov
mov
test
into
jmp
stc
sub
mov
dec
cmc
push
dec
xchg
mov
filds
push
mov
in
popl
mov
sbb
cmp
mov
pop
add
int3
add
ds
xchg
out
movsl
dec
call
movsb
leave
mov
push
ljmp
popa
xorb
aam
pop
int
mov
inc
inc
inc
cmp
int3
mov
jo
idivb
movsb
push
aad
aaa
and
std
mov
inc
mov
inc
repz
divb
test
fwait
int3
mov
mov
aam
das
test
push
addr16
adc
dec
lods
shrb
shr
xor
scas
mov
adc
and
add
sub
ds
xor
xchg
inc
pushf
and
dec
aad
imul
in
and
push
mov
push
adc
into
cmp
aad
jne
popf
cmp
inc
scas
push
shl
lret
lret
stc
scas
dec
xor
sbb
xchg
push
cmp
lret
lock
mov
divb
xchg
mov
icebp
in
pop
fisttps
dec
mov
pop
sti
xchg
jl
sbb
mov
ret
xor
aaa
out
cmc
xor
aad
pop
xor
push
les
lds
add
xchg
push
mov
cmc
in
mul
leave
add
in
xchg
fst
dec
insb
test
hlt
ret
int3
aas
imul
nop
mov
rcrl
xchg
ffreep
scas
add
pusha
xchg
and
xor
and
sub
out
xchg
cli
scas
inc
jbe
stos
aam
inc
outsb
movsl
jg
pusha
lret
idivl
shll
movsb
fs
sub
fnsave
js
mov
mov
jge
mov
test
dec
ja
lcall
ret
xlat
sub
cltd
mov
push
inc
sarl
fstpt
xchg
jb
pop
sahf
data16
add
orb
in
jle
push
cwtl
or
push
fsts
or
xchg
dec
pop
mov
in
mov
pushf
xchg
cmpsb
insb
out
sbb
sub
inc
adc
jo
sbb
loop
xchg
mov
mov
xlat
add
jbe
inc
insb
inc
mov
adc
inc
mov
lret
lret
in
cld
cmp
pop
cmpsb
imull
push
xor
push
xchg
andl
sbb
clc
cld
sar
lods
fs
add
lret
das
iret
dec
imul
rcr
push
insl
inc
push
in
notl
lods
jns
je
cmpsl
push
sbbl
sbb
jnp
mov
pop
stc
fucom
bound
mov
jae
xor
fmuls
loopne
in
xchg
popf
sti
dec
pop
stos
pcmpeqw
ror
hlt
popa
jge
in
jecxz
dec
inc
add
outsb
daa
jle
insb
imul
jae
push
shrb
js
movsb
xchg
mov
fildll
and
daa
dec
roll
stos
sbb
dec
fstl
and
pop
push
rcrl
mov
stc
adc
or
stos
shlb
rorb
sub
mov
imul
jns
pop
jge
cmc
jbe
xor
and
movsl
lret
xchg
push
mov
out
adc
xorl
xor
es
in
pop
dec
ss
cmpsb
mov
mov
sub
lods
into
call
sbb
pop
movsb
hlt
fsubrp
cmp
jl
sub
fsub
cltd
add
inc
add
into
inc
pop
pop
cmp
fnsave
pop
push
pop
jnp
ds
mov
incl
inc
xchg
fcmovne
in
mov
adc
arpl
das
dec
idivb
push
fldenv
xchg
pop
xchg
leave
sahf
pop
cmp
mov
fucom
sub
dec
icebp
sbb
fdivrl
cmp
mov
push
pop
mov
cmp
push
aaa
mov
inc
add
stos
push
xchg
dec
xor
push
or
mov
push
dec
fcoml
hlt
push
or
mov
jge,pt
inc
pop
cmp
data16
std
xchg
or
lret
sbb
sbb
movsl
sbb
pop
ljmp
xchg
inc
aas
xor
out
inc
add
in
cmpsb
imul
mov
decl
and
es
jns
jae
imul
and
arpl
std
sub
push
jle
ljmp
mul
and
in
jb
out
into
cmp
sbb
cs
cmp
popa
lods
in
rorb
lods
test
nop
in
xor
dec
imul
sbbb
leave
lret
out
jne
loop
mov
into
cmp
out
inc
sbb
push
lods
add
jo
cmp
and
out
jne
push
leave
flds
cmp
cmp
xchg
adc
lcall
mov
mov
push
aaa
psubw
aam
stos
sbb
out
fnsetpm(287
fdivrl
adc
sahf
mov
test
jbe
xor
loopne
pushf
insb
lods
les
or
jno
xchg
addr16
sub
push
pop
lock
sub
and
shr
not
push
mov
psubsb
std
jp
out
sbb
cs
jbe
push
adc
in
bnd
stos
cmp
mov
daa
sbb
aam
jne
pop
xor
add
popa
shl
add
jo
lahf
popf
notl
test
and
out
xchg
pop
mov
sarb
loopne
jae
jle
mov
dec
sub
cmp
inc
iret
jp
bound
push
data16
sbb
mov
mov
mov
out
mov
jns
xor
lods
jge
add
add
sub
lahf
xchg
and
rcrb
dec
xchg
xchg
inc
movsl
loopne
mov
xchg
cs
imul
sbb
sub
int
xor
pop
sub
jle
js
daa
mov
jae
cltd
fstpt
or
mov
sub
aaa
pusha
out
dec
lods
mov
and
addl
jle
mov
cmp
dec
sbb
aaa
sub
xchg
cs
insl
test
mov
jge
cld
pop
adc
and
into
pop
or
enter
mov
ss
mov
std
push
jbe
mov
mov
sti
shlb
out
lret
test
xchg
mov
loop
ds
xchg
lods
ja
sub
push
mov
mov
lods
test
pushf
push
daa
call
in
inc
push
push
adc
jbe
scas
enter
int
movsl
mov
jmp
shl
imul
cmp
add
add
xchg
and
dec
mov
push
jae
jbe
outsl
pop
inc
sbb
cli
loop
and
pop
fsubl
xor
neg
repnz
xchg
mov
pop
ljmp
ds
movsb
arpl
out
cwtl
mov
clc
jl
popf
sahf
cld
mov
ss
lret
push
test
mov
sarl
adc
dec
adc
xor
fsubrl
pop
aam
les
mov
ficompl
jbe
stc
in
aaa
insl
popf
cmp
cmc
sbbl
cmp
jmp
adc
dec
cltd
lret
push
sbb
xchg
arpl
jmp
jno
push
shl
jge
test
cmc
dec
pop
add
jns
and
sti
in
jmp
sbb
inc
enter
pop
xchg
mov
lds
and
push
or
mov
stc
sbb
cmpsl
call
test
jle
xchg
push
scas
mov
push
inc
inc
xchg
mov
xchg
aas
cwtl
bound
add
int3
je
cli
mov
or
or
sbb
iret
pop
sti
in
mov
xlat
cmp
inc
or
dec
ss
push
jecxz
and
insb
call
lds
xchg
xchg
jg
xchg
cmp
out
nop
and
cmc
sub
push
adc
out
cs
stos
je
or
sti
mov
clc
repnz
cwtl
push
cmpsb
lret
int3
lret
jns
push
imul
mov
std
lea
push
add
add
mov
push
cld
aaa
mov
inc
mov
ds
cwtl
out
fucompp
pop
repnz
shll
lcall
loope
in
jb
fcmovnbe
add
mov
push
dec
loope
mov
push
xor
divb
roll
inc
sarl
cs
arpl
xor
movsl
cmp
popf
xor
adc
inc
mov
das
dec
lods
mov
push
insl
std
aam
fcompl
xchg
hlt
test
pop
js
mov
pop
adc
or
rcl
mov
pop
jne
sbb
mov
ljmp
fwait
decl
xchg
and
sub
jmp
call
jne
pop
push
push
aaa
inc
add
sbb
push
mov
adc
call
inc
outsl
push
xchg
sbbb
cmp
fisubs
mov
in
or
addl
lret
cmp
int3
mov
lret
ror
adc
movsb
push
adc
jecxz
push
jno
addr16
dec
cmpsb
pop
call
add
pop
mov
iret
push
push
push
mov
cli
lock
arpl
hlt
mov
das
dec
aaa
add
xor
cmp
cld
xor
cmp
int
out
lods
mov
cmc
dec
dec
fdivl
mov
dec
gs
jnp
mov
and
daa
insb
repz
jp
roll
aaa
imul
jmp
xchg
adc
in
xor
out
cmp
fcomps
mov
or
aaa
jb
adc
cmc
jle
data16
aas
insb
xor
loope
dec
rolb
push
push
mov
mov
fwait
xchg
aam
and
das
cmp
push
scas
mov
pop
in
test
and
fsubrs
xor
pusha
inc
xchg
lahf
sbb
mov
push
mov
into
je
jge
dec
std
xchg
jae
sbb
stos
lods
icebp
jno
xor
mov
mov
stc
rolb
add
repnz
xor
cs
push
xor
int
enter
jp
mov
or
mov
inc
repnz
sbb
fs
movsl
dec
pop
mov
jo
daa
push
jg
cmp
int3
dec
and
push
jge
outsl
mov
xchg
hlt
push
mov
xchg
idivb
into
lock
xor
test
cmp
or
xchg
xor
fs
rcl
sbb
cli
in
popa
pop
iret
cwtl
inc
or
cmpb
out
out
push
and
loopne
and
int3
inc
sub
sbb
cmpb
inc
divb
xchg
insl
and
enter
vpmullw
xchg
out
mov
sarl
or
in
sbb
shl
fcomps
stc
sbbb
add
xchg
jbe
stos
shl
xchg
cmp
push
rcl
cmpb
lret
sub
fnstsw
lods
pop
pop
test
or
aad
stos
push
push
shlb
dec
into
cmp
es
lahf
jl
xchg
mov
sbb
dec
adc
dec
push
nop
negb
ret
ja
hlt
lea
movsb
xchg
xchg
pop
mov
lret
xchg
push
inc
lret
clc
movsb
dec
sub
lahf
std
lret
pop
inc
imul
or
rorb
ret
inc
enter
cwtl
mov
imul
cmp
jae
push
dec
mov
addr16
inc
push
fdivl
sub
scas
pop
jp
mov
ja
stc
aam
dec
out
mov
xchg
leave
imul
jl
xor
sbb
inc
or
shl
mov
cmp
jbe,pn
iret
mov
jno
pop
xchg
call
ret
sub
mov
sbb
loop
cmp
mov
and
dec
add
add
sti
xchg
mov
push
cmp
aaa
shlb
addr16
andl
xor
dec
dec
aas
cmp
dec
mov
push
out
mov
jg
ss
insl
arpl
stos
sub
sbb
in
adc
loope
in
push
jo
loop
xchg
cwtl
outsb
inc
divb
xlat
lods
dec
xor
dec
pop
sbb
repz
lahf
movsb
and
xchg
loop
pop
test
into
xchg
bound
aad
push
dec
xor
cmc
jnp
mov
dec
or
repnz
push
repz
in
into
push
add
push
push
cld
xchg
lcall
sbb
cmp
cmp
out
xor
cltd
mov
test
scas
mov
movsl
repz
shll
add
xchg
pop
push
lret
scas
cli
push
cltd
jnp
mov
sub
mov
clc
sub
arpl
lea
inc
dec
je
mov
jecxz
dec
and
icebp
ljmp
sbb
mov
mov
into
loopne
sahf
jp
jmp
dec
xchg
scas
xorl
gs
jne
jp
ficomps
or
adc
movsl
test
jnp
cld
scas
push
fbld
mov
and
outsb
int
movsb
push
mov
pop
xor
and
jecxz
shll
adc
lret
xor
shufps
mov
jmp
imul
sbb
lcall
push
cmp
fistpl
test
dec
inc
add
sbb
adc
outsl
mov
sub
adc
jle
sbb
call
add
aas
dec
lods
test
inc
adc
lcall
sbb
jae
repz
lods
push
inc
lret
pop
les
mov
imul
ds
aaa
sub
or
xchg
fs
les
adc
in
adc
push
or
sahf
pop
jp
mov
test
in
outsl
pop
push
jecxz
cs
aaa
push
mov
loope
xor
into
daa
aam
pop
dec
xor
aaa
mov
jge
add
shll
add
mov
xchg
test
inc
ficompl
movsb
orl
push
xor
push
jl
cmp
dec
das
lea
push
mov
ret
xor
jle
sub
out
addl
stos
lods
sub
mov
sub
mov
out
insb
xchg
cmc
int3
imul
out
mov
test
out
testl
std
mov
outsl
into
test
icebp
rcll
stos
sub
dec
sar
outsl
imul
xchg
mov
sar
cmp
pop
into
inc
push
loop
add
ljmp
xchg
adc
xor
popa
ds
in
fdivp
cmp
icebp
leave
xchg
sahf
shrb
scas
push
pop
out
testb
into
pop
or
inc
push
lods
mov
jge
shll
mov
pop
into
xor
mov
addb
mov
outsb
in
mov
insl
out
iret
mov
je
and
outsl
stos
cmp
aam
clc
fldt
mov
xchg
mov
pop
or
or
mov
fadds
mul
jmp
or
hlt
nop
mov
mov
test
out
fsubl
mov
icebp
sbb
jp
cli
pushf
rolb
arpl
and
mov
movb
mov
push
clc
rcll
dec
inc
pushf
mov
mov
jbe
fnsave
rclb
push
outsb
cmc
je
push
sbbb
aas
mov
insb
roll
mov
int3
cmp
mov
enter
fisubs
into
jle
faddl
inc
mov
aas
cli
cmp
sbb
lcall
jno
int
jne
ret
popa
aam
sbb
ss
cmp
rcr
lea
mov
or
mov
xchg
sub
xchg
stos
cmp
hlt
mov
mov
lods
xchg
clc
in
dec
mul
stos
xchg
inc
cmpsb
pop
mov
clc
mov
mov
jecxz
pop
sub
out
xorl
push
je
aam
xchg
daa
ja
mov
adc
popa
lret
pusha
mov
cli
sub
in
les
and
dec
int
hlt
js
add
inc
or
push
cmp
pop
je
loope
cmp
outsb
cmpsl
sub
loop
out
pop
xor
push
push
xchg
cltd
lcall
adc
lret
push
addr16
loope
sahf
push
jns
es
sbb
daa
mov
in
and
call
cltd
sbb
add
and
mov
or
fdivp
sbb
icebp
movsb
lsl
mov
cltd
lret
cmp
jge
or
ss
inc
jne
xor
mov
add
clc
push
popf
adc
or
jbe
mov
mov
imul
fcmovnbe
mov
xchg
lret
inc
negb
adc
rcl
pop
pop
or
lret
push
fsub
fwait
sti
in
fcmovne
mov
push
imul
lret
or
sbb
mov
in
mov
xchg
dec
mov
gs
subl
dec
mov
ja
sbb
xchg
adc
sti
xchg
in
adc
inc
adc
and
xchg
mov
movb
mov
ret
iret
xchg
roll
push
shll
cmp
rcr
in
imul
cmp
or
inc
mov
repnz
cmp
test
push
mov
popf
pop
xor
adc
shlb
mov
cltd
jge,pt
cmp
bound
loopne
hlt
pop
outsb
mov
inc
jne
not
pop
push
lods
shl
stc
sbb
imul
shrb
movsl
lahf
dec
dec
repnz
icebp
inc
and
jl
pop
push
inc
mov
and
adc
and
or
dec
push
inc
cs
push
mov
out
outsb
js
mov
jne
rorb
mov
out
movsbl
dec
cmc
xchg
pop
mov
add
push
dec
xor
leave
call
ror
lock
adc
pop
pop
push
jl
das
mov
dec
cmc
add
jmp
stc
aam
sub
int3
jae
jl
jecxz
sub
decb
aam
add
inc
push
scas
jo
in
leave
xchg
mov
inc
roll
jns
ja
cld
xlat
push
add
xchg
cmpsl
mov
dec
inc
and
in
mov
iret
xor
nop
jnp
inc
addr16
fwait
sbb
mov
xor
stos
call
fldcw
inc
pop
or
loope
jge
lahf
pop
xlat
dec
push
pop
sub
popl
mov
push
xor
inc
ror
lods
xchg
fwait
jns
jle
adc
pop
std
push
pusha
dec
inc
inc
ds
mov
push
loopne
lods
mov
xlat
int3
inc
xchg
lock
cmp
fadd
mulb
jbe
shll
xor
shrl
jae
repz
sub
out
and
pop
mov
je
cmp
sbb
inc
in
imul
cmpsl
aas
pop
mov
add
or
ja
aam
mov
xchg
popf
mov
jg
test
xlat
scas
call
daa
gs
mov
pop
lds
xchg
rcr
sub
jg
mov
adc
rclb
das
mov
imul
jnp
ja
scas
push
add
cmp
inc
sarb
repnz
out
mov
push
dec
inc
mov
mov
mov
stos
cs
sbb
push
ja
mov
jmp
outsl
movsl
mov
sbb
jo
add
sbb
adc
ss
inc
int
sbb
adc
int3
notb
push
test
out
or
xor
push
jae
movsl
outsl
popf
and
lock
adc
jle
pop
push
fst
aad
xchg
xchg
xchg
add
std
pushf
js
inc
xor
xchg
mov
fstpl
inc
xor
and
jae
repnz
test
xchg
imul
jp
test
sub
xchg
lods
dec
into
mov
adc
into
ret
fmuls
shll
rcl
fwait
mov
xchg
test
or
sub
jns
in
pop
sub
cmp
shr
xchg
and
test
cmp
push
sbb
mov
les
or
jecxz
xlat
cmpsl
repnz
imul
lock
cld
jmp
addb
mov
daa
in
add
or
sub
jp
int3
and
popa
ja
rcr
mov
in
aaa
clc
into
push
lret
inc
adc
pop
shrl
cmp
pusha
rcl
xchg
lret
jge
mov
sbb
outsb
negb
sbb
inc
inc
push
repz
add
out
outsl
les
out
and
mov
je
out
adc
ss
jnp
or
popl
fsubrs
sbb
jns
adc
stos
das
pop
xchg
pop
aaa
add
into
sub
xchg
addr16
mov
mov
mov
movsb
lods
fs
jecxz
mov
and
das
stos
fdivl
push
in
pop
xchg
mov
xor
out
pushf
aad
fs
cmp
mov
sbb
mov
fiaddl
dec
mov
in
ja
push
outsl
mov
nop
mov
inc
pusha
xchg
and
xchg
imul
adc
jge
leave
rorb
sub
arpl
jbe
lods
data16
mov
dec
shlb
sub
mov
iret
adc
inc
fidivs
jecxz
cwtl
sahf
push
dec
lea
push
push
xor
imul
jecxz
into
int3
adcb
insb
mul
lret
out
fcomps
ret
adc
cmpsl
inc
repz
cmp
outsb
roll
or
jle
jl
mov
sbb
cmp
jp
movsl
push
pop
mov
cmp
out
push
push
or
pop
jno
insb
jno
mov
xor
addb
dec
or
clc
cli
pop
mov
lds
mov
cmp
bswap
aaa
xchg
ja
outsl
loope
aad
insl
data16
movsl
mov
lock
hlt
into
add
mov
je
xor
sub
sbb
or
inc
cmc
push
mov
mov
test
aam
notl
mov
push
jp
cmpsb
cwtl
sub
int
loope
push
and
mov
dec
into
dec
into
mov
xor
jne
les
mov
sub
jo
xchg
jb
and
aas
and
xor
ljmp
jp
dec
add
cmp
and
hlt
inc
xchg
xchg
push
push
cwtl
daa
mov
dec
mov
into
mov
popf
xchg
push
into
pop
push
dec
les
lods
xchg
mov
mov
xchg
icebp
scas
ja,pn
in
js
cmp
and
xchg
xchg
aas
add
orb
loopne
imul
insl
jbe
xor
dec
adc
or
ret
dec
jle
in
dec
loope
outsl
add
ret
sbb
xlat
cmp
push
push
xchg
insb
dec
arpl
loop
and
adcb
sbb
jbe
pop
mov
jbe
mov
loop
inc
and
in
push
add
aam
test
test
sti
pop
rcl
imul
shrb
mov
je
out
lods
ret
enter
jno
inc
daa
iret
dec
aad
sbb
ds
sbb
mov
stc
popf
into
ljmp
jb
xor
rcrl
mov
lret
mov
leave
push
dec
cmp
and
xlat
xchg
repz
ret
dec
and
push
adc
test
or
addr16
lret
sahf
xor
out
fidivrs
mov
gs
jmp
adc
dec
aam
cmpsb
dec
mov
mov
aas
cli
cmp
xchg
xor
cmp
addr16
stos
into
imull
pop
mov
cltd
xchg
push
or
outsb
mov
and
into
jbe
mov
std
jb
ljmp
sub
imul
test
fldt
outsb
cli
inc
xlat
cmp
sub
dec
xor
jbe
aaa
insl
aam
add
ljmp
fwait
inc
int3
imul
mov
dec
loopne
push
cli
inc
dec
ret
jb
enter
mov
fbstp
xor
imul
mov
cmpsl
jg
lea
push
jno
fdivrl
cmp
adc
mov
jo
pushf
cmp
daa
inc
adc
movsb
std
in
lds
ss
mov
pushf
das
notb
loope
repnz
dec
gs
fmuls
jns
xchg
xchg
inc
repz
loope
adc
pushf
int
mov
aam
mov
rcrb
sub
int3
je
jo
sub
arpl
testb
mov
popf
cs
mov
test
add
mov
aaa
stc
ds
test
xchg
adc
insb
es
sub
mov
sar
jae
inc
dec
dec
fldcw
fidivl
xchg
mov
fadds
fisubrs
dec
sbb
dec
fsubr
jmp
mov
sub
cmp
sti
mov
in
rcrb
sbb
imul
clc
into
sub
sub
daa
fbstp
lods
add
xor
sub
xor
lds
outsl
mov
lahf
adc
jne
stos
pushf
pop
sub
stc
sbb
cmp
cltd
nop
xchg
push
into
fildl
int3
lds
test
push
in
xchg
sub
pushf
mov
pop
les
notb
push
xor
dec
xor
int
cs
call
loope
pop
scas
sbbl
jmp
xchg
mov
push
int
in
dec
cmc
and
push
mov
mov
and
in
jae
pop
out
mov
pop
jb
arpl
movsb
sub
jbe
mov
jge
mov
hlt
gs
mov
cmp
in
imul
add
jmp
push
sbb
mov
repz
and
jo
mov
popa
or
mov
push
and
jg
les
adc
and
cmp
adc
mov
imul
mov
nop
sbb
xchg
movsb
and
mov
jg
mov
xchg
sub
es
jnp
or
push
ljmp
push
fidivs
push
addr16
dec
add
inc
add
into
jp
mov
and
insl
fmuls
cmc
scas
leave
movsl
or
decl
arpl
in
ja
pop
loope
rorb
fcoms
rcrb
sub
adc
lcall
cmpsb
dec
into
mov
fwait
mov
bsr
arpl
xchg
dec
ja
adc
xchg
pop
xor
dec
out
iret
or
cmp
enter
nop
daa
mov
push
int3
cmc
insb
ret
push
ret
mov
xchg
add
cmc
cmp
leave
cmp
bound
aad
mov
addl
out
out
xor
repz
int3
js
lret
pop
insb
roll
data16
mov
cmp
push
notb
pusha
pop
leave
mov
lahf
jmp
test
cmpsl
push
dec
xchg
repnz
pop
test
mov
mov
push
clc
insl
jg
jnp
mov
add
jmp
cli
sbb
inc
fldpi
out
out
or
cwtl
dec
and
xlat
cmpsl
mov
das
inc
pop
jae
test
xor
std
fcoms
inc
mov
push
and
and
cltd
mov
and
mov
dec
jmp
and
xor
dec
inc
dec
mov
mov
fcmovbe
adc
add
xchg
daa
pop
add
mov
insl
pop
and
jo
ret
xchg
inc
push
xchg
mov
adc
in
out
test
into
cwtl
adc
shrb
fnstsw
lret
push
or
in
inc
adc
out
pusha
or
cmpsl
xchg
das
scas
out
rcl
fs
lea
movsl
paddusw
lret
and
mov
push
mov
cmc
xchg
mov
pusha
in
cltd
add
xor
fwait
jl
sbb
adc
mov
ret
jge
stos
insb
mov
jl
in
fbld
jae
shll
rol
jb
rcl
inc
pop
pop
push
add
test
paddd
jg
fmul
and
fs
lods
mov
arpl
jb
aas
cmp
in
sub
or
push
into
hlt
mov
lock
xlat
push
adc
add
mov
jbe
cmpsl
mov
jne
pusha
inc
mov
jns
jnp
in
out
mov
inc
xchg
sti
cwtl
and
sub
loope
outsb
add
ja
xor
inc
ljmp
testl
cmpsb
push
lds
push
iret
movsl
pop
sub
xchg
je
add
iret
sbb
out
xchg
aad
mov
mov
pop
icebp
or
cli
xor
pop
loopne
jmp
mov
sbb
xchg
add
xchg
mov
stc
inc
fs
imul
pop
push
sub
jbe
aad
mov
js
mov
lea
cmp
dec
test
into
sbb
sub
fadds
sbb
call
dec
adc
fcmovbe
push
fwait
sbb
or
int
add
xchg
pop
test
or
lahf
and
xchg
mov
jmp
sub
ja
aad
imul
cli
mov
mov
jb
or
push
lock
lret
mov
pop
dec
sub
xchg
mov
punpcklwd
xchg
cmp
scas
pop
pop
pushf
mov
repz
sub
xor
and
pop
push
mov
rcl
push
mov
ja
push
insl
aaa
pop
or
aad
leave
insb
aam
sub
loop
push
imul
jg
ror
push
mov
cmp
jl
into
iret
jo
push
inc
jg
jbe
xor
dec
aam
or
mov
or
fs
test
push
xor
imul
pusha
stos
icebp
push
cmp
mov
add
lods
in
notl
pop
cli
out
cltd
dec
and
orb
or
icebp
movsl
jns
jmp
jbe
jl
push
int3
mov
or
ljmp
mov
sbb
subb
aas
add
inc
push
jg
or
outsb
ja
push
les
push
lods
add
xchg
mov
fxch
fdivr
dec
xchg
pop
adc
test
testb
sbb
or
stos
sahf
adc
int
xchg
jns
mov
jecxz
fisubrs
in
mov
rcrb
cmpsl
xor
jp
cmpsb
scas
push
cmp
js
adc
push
sub
stos
loop
mov
push
xor
sub
jp
sbb
cs
or
dec
rcr
je
insl
mov
pop
mov
addl
jecxz
out
inc
aaa
rcrl
out
lods
movsb
xchg
xor
aam
call
fs
and
stc
sbb
lods
push
mov
or
add
test
or
or
xchg
rcrl
push
cmp
out
push
xor
push
test
jns
andb
cli
test
iret
mov
xor
inc
repnz
mov
fsubrs
xor
add
in
aaa
sbb
imul
pop
or
sub
lret
not
inc
and
pushf
out
outsb
leave
mov
mov
push
xchg
cmp
lahf
iret
out
sub
out
pushf
shll
jbe
imull
push
clc
inc
xor
ficompl
pushf
xchg
pop
call
or
pop
dec
enter
inc
mov
add
mov
ljmp
add
fisttps
das
xchg
cmc
inc
rcl
pop
push
ret
push
jmp
adc
mov
or
dec
mov
mov
clc
rcrb
pusha
mov
and
out
lds
outsb
in
xlat
add
mov
mov
outsl
mov
dec
dec
xor
jecxz
lods
add
hlt
xchg
and
int3
ret
daa
lds
push
mov
rclb
sub
adc
pop
sbb
push
add
inc
pop
lret
rolb
jmp
inc
xchg
hlt
stc
mov
ret
lods
sahf
mov
pusha
ljmp
inc
fwait
add
push
dec
mov
xchg
pop
sahf
mov
subb
lods
push
sub
jne
imul
cmp
push
pop
xchg
or
lock
add
mov
mov
push
mov
xchg
loop,pn
dec
dec
mov
pop
mov
push
add
sub
cwtl
push
insl
fs
mov
data16
fadd
nop
mov
ret
mov
and
push
sti
mov
jb
dec
test
ja
stos
les
xchg
ss
insb
clc
cmpsl
aam
jae
ret
sub
int
xor
out
fnstenv
jne
or
lret
or
leave
ss
inc
out
jb
aaa
fmuls
shl
mov
bound
push
fmuls
hlt
push
push
inc
aam
movsb
mov
out
sub
cs
repnz
cwtl
push
into
andb
scas
call
mov
push
jnp
fcompl
jle
pop
push
lock
mov
or
jecxz,pn
xchg
outsl
pop
scas
lock
int
gs
cld
addr16
and
dec
lahf
mov
repnz
shlb
cmpsb
or
jne
pop
rorb
mov
mov
inc
dec
pop
xor
vmovq
icebp
adc
in
pop
std
aad
sbb
inc
or
push
pop
outsl
xchg
into
add
sbb
jmp
fucom
test
pop
sbb
jp
cmp
sbbl
dec
mov
fldenv
ret
mov
xchg
out
dec
loopne
dec
cmp
insl
jmp
stos
xchg
add
jge
ret
add
and
sub
push
dec
adc
rcl
jo
data16
pushf
mov
push
mov
mov
popa
ds
fs
clc
push
add
or
pop
bnd
pop
aam
out
test
ret
mull
adc
add
add
fwait
in
push
xchg
popf
mov
xor
mov
outsb
xchg
jno
int
leave
pushf
fcomps
and
bnd
imul
push
in
mov
insb
shrb
mov
adc
jbe
es
js
lret
mov
xchg
push
test
scas
sbb
mov
cltd
rcll
jb
push
mov
jns
xor
inc
mov
insl
xchg
push
daa
mov
es
lcall
es
jmp
fcomi
sti
cmp
stos
aad
cld
lahf
or
jmp
ja
mov
push
fistpl
adc
mov
pusha
xchg
jbe
inc
fldenv
sub
and
push
xchg
sbb
int3
inc
rorl
adc
adc
cmpb
mov
mov
pop
out
and
fcomps
dec
xchg
inc
mov
add
leave
fistl
or
mov
cmc
push
jmp
or
xchg
or
aas
andb
jmp
sarb
mov
xchg
mull
cmp
ret
fcoms
fwait
cli
aaa
jle
push
in
call
stos
inc
add
cmp
sub
sarl
addb
rorl
pop
adc
jbe
out
sbb
fs
cmc
mov
mov
int
pop
jle
testb
xchg
imul
mov
cltd
mov
pop
cmpsl
imul
popf
rcl
adc
decl
and
dec
clc
pop
call
ja
jne
hlt
push
pop
test
sarl
xchg
fwait
dec
add
aaa
mov
mov
mov
mov
and
pop
into
int3
mov
test
pop
jne
in
in
push
mov
mov
ret
inc
jbe
sbbb
addr16
cmp
pop
adc
jmp
dec
sbb
int3
aam
sbb
sarl
jbe
pop
int3
pop
or
insl
out
pop
movsb
mov
push
and
xor
imul
mov
pop
addr16
jnp
ss
adc
jo
mov
cmp
push
mov
inc
inc
repz
sbb
shlb
push
ja
test
jp
lret
out
cmp
fmuls
cmc
dec
data16
into
icebp
inc
push
cwtl
mov
stc
cmp
in
cmc
fs
xchg
pop
xor
sub
and
dec
jbe
test
repz
mov
jne
dec
insl
fistpl
mov
sbb
rcrb
sub
mov
mov
aaa
push
fstl
pop
out
dec
jno
aaa
adc
xchg
mov
int
jle
aam
mov
pop
mov
mov
mov
mov
cs
mov
inc
ret
lret
mov
jmp
dec
out
xchg
mov
cmp
pusha
xor
push
push
cltd
lods
hlt
int
or
xchg
push
test
ljmp
jmp
cs
jle
mov
stc
mov
jnp
aad
mov
mov
mov
push
addr16
int
sbb
pop
lcall
shrb
lret
int
lret
outsb
into
mov
out
adc
jnp
int3
pop
fmul
jb
or
test
sub
mov
mov
loopne
shrl
dec
fimuls
popf
cmp
inc
bound
mov
sbb
stos
ss
fdivl
ds
add
cld
js
mov
popf
xchg
loopne
mov
in
aam
or
movb
sub
insl
leave
iret
ficompl
cmpsl
xlat
sbb
add
mov
mov
fcomps
dec
cmp
sbb
lods
push
mov
cld
cmpsl
test
pop
mov
lahf
es
xor
jle
lods
js
fdivrl
not
xchg
into
push
jbe
cltd
and
cmp
jge
arpl
adc
xlat
mov
mov
adc
mov
int3
jnp
dec
out
push
test
sub
xchg
or
dec
rclb
xor
in
jns
push
fnstsw
lods
int
into
mov
popa
jbe
sahf
ss
daa
cmc
mov
push
adc
inc
pusha
int3
outsl
scas
shlb
ds
jge
jg
jp
repz
and
aad
cli
scas
add
rcl
pop
jmp
xchg
mov
test
jae
inc
cmc
mov
movsb
mov
out
outsb
scas
pop
cld
je
inc
add
repnz
push
ret
pop
sub
loope
or
icebp
sarl
sub
cmp
push
xor
inc
ljmp
pop
xor
or
sub
mov
push
mov
in
mov
aam
xor
in
jl
adc
aam
sbbl
sub
or
adc
cmp
xlat
xor
sarb
sbb
repnz
mov
jp
enter
mov
adc
popa
int3
lds
test
xor
aaa
inc
dec
xchg
cmp
adc
lds
mov
leave
out
pop
and
add
lahf
jle
je
and
shrl
mov
sub
lret
popa
popf
les
leave
leave
incb
dec
jb
mov
outsb
leave
mov
jbe
loope
out
jp
cs
xchg
jg
movsb
jecxz
mov
clc
mov
or
mov
shrb
vmovsldup
cmpsb
sbb
sbb
inc
sbb
dec
movsl
cld
push
mov
lret
dec
ds
cs
mov
loop
out
pop
inc
add
sub
jecxz
leave
not
dec
pop
pop
pushf
mov
gs
or
fsubrp
into
and
adc
mov
dec
and
fldcw
out
or
cld
aam
fwait
jne
jne
sti
dec
adc
cmp
xchg
in
dec
rcrl
les
jle
sbb
mov
test
rcl
dec
mov
sub
daa
iret
add
flds
into
popa
imul
inc
sahf
out
repnz
mov
push
pop
addr16
jl
or
movsl
xchg
sbb
shlb
decb
mov
mov
push
xlat
fsubp
insl
loope
pop
or
leave
add
dec
leave
inc
cmp
dec
sti
iret
shrl
scas
in
or
into
mov
bound
and
push
adc
xorl
fistpl
lcall
mov
xchg
or
mov
pop
xchg
sarl
push
clc
in
dec
sub
lahf
inc
xor
or
nop
ja
iret
stc
inc
sub
push
jbe
push
scas
cmpl
icebp
inc
mov
inc
adc
int
out
out
notb
push
push
dec
xor
insb
or
lds
mov
cld
jns
pop
sti
data16
mov
into
cmp
sub
inc
movb
jbe
sbb
insl
dec
fcomi
adcl
xorl
mov
movsl
pop
out
popa
push
jnp
inc
mov
ljmp
push
addr16
ja
aad
cmp
into
dec
movsl
stos
in
jb
sub
mov
jae
clc
dec
inc
fidivs
jnp
push
or
daa
adc
ret
repnz
mov
xchg
mov
add
loopne
repnz
pop
cmp
in
mov
fdivr
mov
push
cld
in
shlb
sub
out
pop
adc
xor
mov
mov
cli
mov
mov
loop
cmp
or
jl
sub
lret
faddl
shrb
test
divl
mov
sub
sarb
stos
jecxz
mov
adc
or
mov
dec
roll
add
lret
outsb
int3
push
and
sub
mov
mov
fstpt
rcl
lea
push
sbb
jnp
xchg
aad
arpl
jmp
mov
pop
xor
dec
dec
movb
inc
mov
sbb
mov
and
jecxz
push
lcall
sub
out
mov
xlat
xor
loop
fdivr
gs
xor
adc
incb
fcmovnb
jge
mov
and
das
hlt
jo
xor
mov
xorb
push
jmp
test
loop
cs
pop
test
lret
les
xchg
mov
inc
push
or
sti
test
push
iret
imul
rcr
daa
outsb
jecxz
movsb
dec
test
mov
jno
mov
or
or
pusha
cmp
iret
pop
sbb
rcl
and
dec
xor
dec
adc
dec
xchg
nop
lret
pop
loop
and
xor
lcall
mov
cmpsl
sbb
pop
or
jne
fidivs
mov
xchg
test
mov
popa
dec
cld
loopne
or
push
xor
int3
jg
mov
xor
enter
popf
xchg
stos
fs
or
loopne
jecxz
pop
lret
add
int
push
std
fists
mov
adc
int3
in
std
out
and
mov
lahf
dec
mov
scas
inc
or
into
dec
add
ficoml
call
into
mov
mov
lahf
sub
sub
adc
sbb
pop
lret
aaa
out
mov
inc
sbb
mov
or
jl
repz
in
repz
mov
mov
aam
insb
aas
jle
mov
shrl
xchg
js
xor
and
cmp
xchg
ret
fwait
gs
int
mov
call
cmpsl
inc
inc
mov
arpl
movsl
imul
xchg
and
sbb
mov
aam
add
dec
sti
xor
gs
sbb
leave
push
xchg
aaa
push
inc
and
std
push
imul
push
dec
push
clc
mov
push
push
mov
movsl
jg
jnp
dec
inc
mov
fs
rorb
and
ljmp
jmp
repnz
pop
mov
dec
lea
jns
fs
call
mov
lods
jae
fldt
lret
clc
mov
xchg
cs
or
lret
ret
imul
movsb
xor
sub
sbb
jmpw
imul
fisubrs
std
xor
jnp
loope
dec
in
jg
jb
fxch
push
xor
sub
xchg
insb
and
xor
jb
dec
and
int
idivb
xor
es
push
xchg
into
out
and
mov
add
xchg
mov
adc
mov
jg
dec
dec
or
into
cmpsl
push
jge
pusha
arpl
adc
es
push
xlat
shl
jne
negl
jp
fdivrs
cmp
mov
out
mov
scas
pusha
inc
in
or
scas
mov
jp
sub
fstl
jne
jnp
push
clc
in
cli
add
adc
xor
out
hlt
mov
jb
lret
int
xor
xor
test
js
pop
jbe
xchg
xchg
insl
orb
mov
add
sbb
xchg
inc
mov
mov
push
int
test
inc
orl
scas
jp
out
nop
insb
jnp
shll
jg
adc
push
sub
and
mov
testb
mov
popf
cmp
negl
sbb
dec
mov
push
and
test
rol
sub
out
jp
aad
sub
mov
pushf
push
sub
sub
sub
icebp
mov
or
fisubs
imul
popa
int3
call
push
pop
lds
ljmp
pop
add
incl
jno
icebp
stos
sbb
fldl
jp
jbe
and
inc
inc
sbb
and
sbb
mov
add
gs
dec
or
shl
out
jecxz
xchg
adc
int3
push
lods
stc
pop
lahf
stos
push
sub
sub
stos
nop
je
movsb
inc
repz
jmp
add
pop
sbb
add
xchg
ja
mov
jge
cld
out
jo
ret
or
push
mov
lods
xor
pop
push
repz
cmc
cld
cltd
cmp
sbb
leave
add
out
mov
daa
pop
pushf
aam
mov
sti
mov
lret
out
fdivrl
adc
imul
stos
repnz
jecxz
das
enter
cmpl
pop
push
es
jmp
fstpt
je
lret
out
or
call
xchg
jecxz
sbb
ret
ror
sbb
mov
push
aaa
movsl
adc
mov
add
lcall
not
pop
int
jl
or
adc
xchg
popa
adc
or
jmp
push
idivb
lods
mov
lret
popa
int3
mov
stc
addr16
mov
push
or
ja
add
mov
and
mov
mov
sbb
fcmovbe
push
into
push
inc
push
icebp
mov
ret
adc
cmpsl
data16
dec
xchg
inc
pop
or
push
ss
mov
nop
shlb
stc
mov
into
mov
and
ficoml
es
jnp
dec
xor
out
inc
repnz
out
cmp
movsl
cmp
dec
cmpsb
fsubrs
lods
inc
dec
jle
test
push
push
mov
lahf
jns
fldcw
add
out
add
js
cwtl
arpl
jle
fcoml
sbb
mov
ljmp
jecxz
inc
out
je
insb
push
inc
addr16
push
repnz
sbb
fdecstp
mov
imul
mov
xchg
repnz
outsb
sbb
shlb
dec
lock
out
ss
push
inc
xchg
jae
aad
ss
loope
push
dec
or
dec
mov
sub
mov
andl
outsl
ret
pushf
pop
and
rdtsc
cltd
out
inc
pop
mov
and
and
out
popa
xor
jnp
repnz
jmp
enter
roll
insb
sbb
inc
loope
adc
mov
test
dec
sub
mov
xchg
and
jnp
and
pop
xlat
mov
in
jecxz
scas
adc
imul
mov
clc
xchg
rclb
repnz
push
punpckldq
inc
stos
adc
push
movsl
sub
inc
and
idivb
cmp
push
iret
data16
cmpsb
rolb
das
push
inc
not
xchg
jb
xor
ja
jbe
or
out
dec
lretw
cmp
push
mov
inc
cmp
cltd
cmpb
lock
push
arpl
mov
or
lahf
push
enter
adc
mov
xchg
add
das
cmovg
lock
mov
inc
add
hlt
and
adc
cmp
and
add
adc
movsl
sub
stos
in
ror
mov
lea
out
mov
inc
or
adc
mov
adc
outsb
ficoml
cmp
loope
sub
int
ret
inc
les
rcl
jne
in
popf
in
rol
sbbb
addr16
enter
mov
adc
or
arpl
orb
sub
cmp
addb
and
add
pop
mov
xchg
fsubl
and
clc
fcom
mov
adc
cmp
jecxz
shrb
mov
dec
sub
bnd
sarb
lret
or
jbe
fiaddl
rcrl
mov
dec
xchg
jmp
xor
xchg
gs
imul
xchg
xchg
lock
test
or
push
iret
in
pop
leave
cmc
stos
push
ret
jns
bswap
ds
jle
push
sub
cmp
xlat
dec
imull
call
mov
iret
rcrb
adc
in
mov
sub
sub
xchg
fcomps
std
aas
test
push
call
aaa
call
or
push
mov
es
call
jns
andl
insl
jge
xchg
pop
int3
xor
and
jns
push
adc
dec
rorl
cmp
cmp
mov
movsb
out
jns
fwait
xchg
out
mov
es
mov
fcom
repz
cld
out
xchg
push
aam
sub
pop
das
fdivs
fwait
xor
jbe
jg
es
mov
std
jo
jg
ror
adc
dec
aad
into
xchg
or
jmp
aas
xor
test
cmp
cmp
js
jecxz
adc
out
cmpsl
int3
mov
sbb
mov
xchg
repnz
push
rcr
cs
sub
sbb
pop
popl
cmovle
in
shll
imul
push
insb
shll
adc
js
in
cmpsl
aaa
ss
sti
enter
into
mov
dec
xchg
sbbl
dec
xchg
ds
sbb
xchg
aaa
loop
shll
mov
subb
and
mov
into
adc
mov
cmp
sbb
enter
mov
inc
in
in
out
push
fildl
and
and
subl
jecxz
rcl
adc
inc
push
in
jg
es
es
call
ret
cmp
dec
jnp
stos
int
mov
ja
ret
mov
dec
dec
leave
rorb
aas
imul
outsl
test
mov
test
ret
cltd
jb
jge
mov
mov
sub
mov
clc
sbb
and
inc
fnstcw
movb
ds
jg
int3
push
lcall
ja
inc
scas
dec
rcll
inc
cmc
mulb
data16
into
jnp
cmp
out
iret
mov
loopne
pop
bound
inc
adc
or
xchg
lcall
inc
je
lock
lods
jg
adc
in
jmp
stos
pop
jnp
or
adc
add
je
fisttpll
mov
push
mov
push
stos
cmpsl
sub
lea
cmp
xchg
dec
mov
repnz
jae
ja
jl
mov
xor
dec
adc
icebp
pop
mov
inc
ds
mov
popf
mov
addl
xchg
jbe
out
cmc
mov
rorl
outsl
and
loop
outsb
shlb
pop
mov
or
sahf
leave
int
iret
mov
cmc
xchg
or
lahf
mov
cmpsb
jecxz
icebp
lret
mov
outsl
in
into
rclb
dec
in
add
mov
sub
aad
das
jecxz
xchg
jmp
jp
sub
push
xchg
in
stos
call
push
push
mov
out
adc
ss
cmpsb
jnp
cs
aas
sbb
mov
sub
loope
sub
jmp
out
pop
xor
xchg
cmp
sarb
jbe
jae
scas
shrb
jbe
popa
fists
into
shr
jo
and
lods
imul
cmpsl
lds
fisubl
stc
mov
cmp
in
dec
ss
mov
mov
rcr
stc
jge
imul
dec
sbb
add
movsl
xlat
push
imul
xchg
lcall
fistl
jge
mov
xchg
ljmp
pop
lret
je
jp
loopne
dec
cwtl
fnsave
es
pop
sub
test
push
or
dec
cmp
xchg
and
daa
xchg
imul
xchg
inc
stos
push
cmp
xorl
and
test
jl
rolb
imul
negb
push
shlb
int3
pop
adc
shlb
jb
xchg
mov
add
rcl
test
push
sub
call
dec
inc
adc
xchg
test
aas
leave
sbb
push
push
dec
xchg
pop
mov
xchg
mov
mov
insb
ja
xor
sbb
addb
mov
sbb
jmp
jns
in
int3
test
jo
sub
jg
mov
mov
adc
nop
sbb
not
mov
xchg
cmc
sbb
or
addr16
push
lea
ds
ljmp
cmp
test
stos
sbb
push
repz
sub
test
shll
in
cltd
xchg
fadd
xor
pushf
pop
pop
divb
lods
or
mov
daa
sti
dec
les
mov
jae
xchg
je
push
sub
dec
pop
test
push
and
mov
pop
into
pop
pop
inc
sbb
sub
fstl
shrl
cld
pop
jns
inc
push
cmpsl
adc
xchg
push
rcl
cld
cmp
mov
jmp
push
inc
mov
push
aaa
jge
inc
mov
xchg
lods
lds
negl
lock
aaa
fsubl
subb
addr16
jbe
stos
push
xchg
int
push
add
push
imul
jp
lret
sbb
dec
mov
jg
add
add
aam
or
aam
cmp
cmp
fwait
xchg
adc
addr16
xchg
lds
pop
mov
cli
les
imul
pop
fidivl
xor
cmp
mov
sub
sbb
int3
ret
adc
in
jno
add
out
or
nop
mov
pop
push
leave
cmpsb
add
pop
call
dec
lcall
insb
pop
sub
not
push
int
std
xchg
mov
cs
sbbb
jp
and
push
popa
cmp
jge
push
dec
adc
leave
xchg
or
push
push
ficoml
in
imul
sbbb
pop
int
push
jne
es
adc
xlat
xor
ja
mov
mov
shrb
lds
jl
push
sbb
sarb
mov
ljmp
or
enter
inc
hlt
fildl
addb
les
push
movsl
fsub
lods
xchg
aad
cmpsb
sbb
ja
and
sti
test
cmp
jecxz
push
cli
mov
xchg
jo
jmp
inc
fisubrs
add
xchg
pop
jne
pop
ljmp
mov
mov
fstps
cmp
push
popa
and
mov
xchg
cmpl
int3
dec
mov
dec
scas
sahf
repnz
je
mov
dec
loop,pn
or
sub
fcomps
aad
call
repnz
or
mov
int3
clc
popa
xor
sbbl
inc
in
stos
shlb
mov
andb
hlt
rcll
aas
pop
push
cmp
jl
inc
or
in
jne
icebp
jge
push
int3
sub
cmpsl
mov
push
mov
xlat
data16
call
xchg
mov
scas
sub
cmp
push
sbb
xchg
or
dec
std
cmpsl
daa
push
into
sub
pop
sbb
pop
stc
stc
dec
xor
popf
adc
push
frstor
push
lret
pop
jle
mov
mov
mov
inc
inc
push
inc
call
xchg
push
hlt
test
or
mov
ja
daa
mov
and
andl
sbb
or
dec
fwait
and
or
pop
mov
call
mov
insb
pushf
mov
icebp
or
dec
fdiv
xlat
xchg
inc
mov
mov
inc
fwait
roll
push
test
mov
mov
mov
repz
orb
pop
push
jne
movsl
jg
popf
xchg
sbb
adc
clts
jge
ljmp
mov
out
push
lret
aad
mov
lock
ja
mov
add
mov
mov
push
iret
pop
ja
or
fs
mov
lods
leave
repz
or
pop
loopne
mov
mov
add
fcomps
jp
sahf
notl
add
std
stos
cld
push
imul
xchg
stos
push
inc
push
lret
adc
popf
pop
pop
xor
mov
sbb
lret
and
pop
mov
xchg
aad
call
jbe
push
adc
push
sbbb
sbb
cmpsl
out
cmp
push
ret
sbb
xor
mov
pop
dec
push
out
sbb
cwtd
fwait
jbe
clc
dec
sub
pushf
insb
mov
lods
mov
subb
inc
mov
rcrb
sti
or
out
adcl
mov
or
pop
mov
inc
mov
lret
movsl
xor
jecxz
sbb
in
xlat
mov
in
ds
pop
arpl
aas
mov
adc
xchg
pop
inc
cltd
div
test
fstp
push
clc
pushl
xchg
jno
sbb
out
bound
jnp
in
in
pushf
jmp
pop
adc
mov
jle
stos
jbe
fdivrp
hlt
int3
into
das
repz
dec
pop
xchg
mov
std
dec
xchg
push
inc
shll
xchg
adc
fs
sub
movsl
or
lds
clc
insl
int3
xchg
roll
jg
fistps
or
ror
push
rorl
int
out
cmp
and
inc
out
orl
bound
push
imul
jmp
ss
mov
leave
xor
lret
fiaddl
pop
mov
cmpsb
imul
jno
shlb
ljmp
adc
or
out
das
addb
cmpsl
leave
gs
xchg
popa
jl
mov
adc
inc
pop
mov
push
mov
xor
or
aaa
int3
popa
mov
negl
push
call
hlt
sub
inc
xor
cmp
mov
sub
add
inc
test
jne
or
loop
xor
mov
jb
aas
add
in
xor
mov
adc
xor
xor
movsb
pop
xor
cwtl
xlat
pop
leave
mov
jmp
xchg
in
iret
scas
repz
inc
xor
mov
psraw
add
aaa
scas
ljmp
dec
push
fnstenv
lahf
or
inc
fsubl
or
cmpsl
cmp
je
leave
shlb
out
mov
pop
jbe
test
cltd
xor
adc
mov
and
dec
sub
cmp
stos
xchg
notb
gs
in
aas
xlat
xchg
sub
cmc
and
push
pop
mov
sbb
roll
mov
in
mov
subb
insb
je
push
fisttps
mov
push
cmp
and
pop
add
inc
fwait
xorb
mov
test
push
bound
out
inc
mov
push
mov
xchg
cmp
xchg
ds
push
out
jne
mov
lds
iret
gs
mov
int3
mov
push
pop
xchg
imul
xchg
lahf
ret
sbb
dec
push
mov
fisubs
fsubs
rcl
addb
arpl
inc
leave
inc
repz
scas
dec
sub
stos
pop
ror
cmp
cwtl
mov
stos
inc
enter
sbb
inc
out
cs
xchg
dec
out
adc
outsb
ds
pop
pop
pop
ja
and
jno
cmp
imul
xchg
idiv
cmp
or
xor
arpl
lods
movsl
lret
repnz
xchg
fs
xchg
jge
aad
scas
shrb
imul
xchg
sub
adc
mov
out
jp
cltd
mov
mov
or
cmp
test
sub
jns
push
jmp
cmpsl
pop
imul
mov
repz
call
jno
jae
cmp
lcallw
mov
outsl
cwtl
out
xchg
adc
and
push
out
lahf
ffree
sarb
sub
xchg
pop
mov
dec
or
sub
sub
pop
out
scas
shr
xor
sahf
mov
sub
leave
in
clc
sub
dec
and
mov
fs
fisubrl
fldl
pop
dec
pop
movsl
mov
xlat
jle
xchg
push
sbbl
adc
outsl
jno
pop
cli
imulb
xchg
shlb
test
add
int
es
mov
in
lret
adc
imul
stos
or
push
xlat
inc
push
cwtl
xorl
jmp
pop
les
push
inc
pop
pop
stos
scas
pop
adc
loop
ja
dec
into
out
sub
lea
test
xorl
and
decb
dec
rorb
sti
cmp
mov
jbe
loope
int3
aam
ljmp
es
add
into
adc
pop
sub
dec
push
push
xchg
push
insl
push
fsubs
pushf
decl
repz
scas
stos
add
add
ljmp
sub
test
add
out
popa
loopne
sub
mov
decb
mov
rcr
cltd
jnp
stos
cmpsl
stos
xor
inc
cli
adc
imul
jmp
pop
jecxz
scas
and
push
add
hlt
jnp
outsb
testl
js
add
xchg
mov
jno
jo
cld
xor
std
adc
and
js
jns
mov
cs
adc
xor
cld
adc
testl
jge
jo
popf
add
fcomi
clc
shlb
mov
sbb
push
aad
adc
jnp
xchg
jae
mov
push
fwait
inc
rorb
jg
push
insl
mov
icebp
lock
jmp
pop
adc
ffreep
rcll
xchg
popf
lret
sbb
sub
in
adc
push
int
inc
mov
sub
dec
cmpsl
mov
lcall
push
cld
add
dec
mov
cmpsl
clc
xchg
cmc
sti
xlat
mov
bound
sbb
mov
fidivs
push
clc
rolb
mov
jb
aam
mov
sub
mov
movsb
icebp
push
adc
into
movl
jo
sub
not
insb
test
into
sub
mov
mov
incb
fdiv
lcall
lret
ror
mov
pop
and
out
push
push
fsubp
dec
ljmp
push
pop
pushf
out
rcrb
and
jae
aam
add
into
fnsave
sar
mov
pcmpgtb
mov
ret
shl
inc
adcl
dec
cmpl
sub
aaa
jecxz
jns
dec
xchg
es
push
dec
in
out
adc
lea
mov
fisttpll
sbb
pop
sbb
stc
cmpsb
hlt
jb
mov
enter
xor
mov
mov
inc
push
insb
lds
and
insl
or
loope
gs
and
stc
dec
adc
xor
push
push
mov
clc
inc
sbb
and
jbe
xchg
jmp
into
inc
inc
pop
or
and
pop
push
and
push
lods
mov
jbe
or
mov
loopne
inc
into
cmpsb
pop
push
jne
cltd
jmp
sbb
dec
or
add
shrl
jg
test
imul
cwtl
in
mov
jge
cmpsb
out
ljmp
jle
loope
ror
sub
into
mov
lahf
jmp
sahf
push
dec
aaa
outsl
adc
arpl
jl
or
xchg
xchg
aad
cmc
leave
mov
xor
jnp
jbe
cs
test
test
mov
pop
mov
push
in
jge
xchg
push
or
cmp
mov
sub
test
clc
jecxz
stos
test
iret
aam
daa
and
pop
js
hlt
mov
into
sub
mov
fimuls
in
iret
mov
and
push
aad
dec
imulb
fwait
cs
push
jge
je
mov
xchg
adc
adc
fsubs
fnsave
enter
push
repz
out
mov
jmp
nop
aad
sbb
jb
xor
xor
jmp
icebp
dec
ljmp
imul
mov
inc
call
into
addr16
adc
out
int3
bound
sbb
outsl
test
fimull
lret
inc
mov
lret
add
xchg
mov
adc
iret
pop
or
repnz
push
xor
mov
clc
icebp
movsb
arpl
cmc
lock
into
inc
sahf
xor
mov
movsb
push
sub
jae
jbe
test
xor
data16
mull
nop
jl
stos
insl
dec
sti
or
add
loopne
pop
jle
push
mov
fdivrl
pop
sbb
jmp
xchg
jbe
sarl
outsb
push
cmc
andl
xor
insl
dec
jmp
mov
cmp
lea
push
and
scas
or
jecxz
pop
xlat
or
and
dec
sub
sarb
xchg
stos
out
cld
push
cmp
out
mov
fwait
or
mov
shrb
in
cltd
cwtl
daa
iret
icebp
add
ret
lahf
pop
fidivs
fs
or
test
int3
cmp
pop
inc
test
mov
sbb
insl
ss
mov
clc
es
add
cmpsb
popf
lret
push
lahf
jo
ja
rcrb
nop
cs
jbe
or
ds
inc
fstpt
cmp
testb
mov
or
loopne
adc
ss
imul
mov
dec
test
mov
insl
stc
mov
scas
push
sbbb
jl
bound
fildll
sub
pusha
mov
sub
xbegin
xor
mov
mov
imul
adc
sub
xchg
into
jl
jmp
mov
notl
aas
in
ret
repnz
shlb
sub
stos
pusha
jg
push
stc
mov
ss
out
or
ficompl
int3
int
xchg
jnp
mov
enter
mov
cmc
cwtl
cmc
out
adc
sub
pop
sarl
leave
clc
jecxz
xchg
and
psrlq
shlb
arpl
rcrb
adc
adc
dec
out
add
scas
ret
imul
nop
aam
movsb
shll
insl
sahf
jno
cli
test
or
push
int3
ret
test
rcrl
stos
cs
bnd
mov
xchg
hlt
std
inc
int3
stc
jl
xor
fcmovbe
push
jmp
stos
sti
repnz
int3
lock
ja
jge
jnp
inc
gs
aad
inc
mov
insb
std
sbb
enter
pop
aad
and
loop
insl
lret
cmp
movsl
jne
xor
cmc
shl
daa
mov
outsl
push
hlt
iret
movsb
ja
and
into
bound
inc
xor
outsb
jmp
fistpll
aam
or
dec
das
mov
pop
xchg
jb
mov
and
aad
push
adc
mov
in
jmp
inc
fsubr
gs
pop
mov
or
jle
enter
in
dec
nop
add
pop
push
cli
xchg
insl
lret
mov
and
jno
rcrb
xor
mov
inc
stos
cmp
aam
out
xchg
cmp
xor
mov
push
xchg
mov
xor
sub
roll
addr16
add
int3
pop
insb
ss
push
xchg
mov
sub
mov
stos
sti
inc
in
into
mov
push
adc
test
xor
loop
and
add
daa
pop
mov
or
iret
ja
cmp
shl
cld
dec
shlb
adc
inc
outsb
aam
push
jbe
cmpsb
mov
dec
fimull
xchg
test
sbb
mov
push
mov
es
push
add
push
rcl
dec
rcl
out
je
in
inc
rol
das
dec
mov
inc
cmc
mov
scas
sub
imulb
clc
dec
insb
rcl
mov
popa
and
add
dec
pusha
pop
jp
mov
inc
test
movsl
in
test
xlat
dec
rcl
mov
or
movsb
test
popf
adc
aaa
mov
push
sbb
enter
rcr
mov
je
ret
pop
cld
sti
scas
fldenv
fwait
iret
xor
dec
clc
rolb
mov
ror
test
add
out
outsl
loopne
sar
pusha
pop
jns
fstpl
xchg
lcall
mov
dec
icebp
adc
mov
xchg
mov
nop
out
pop
jne
jnp
mov
out
mov
imul
cmp
insl
sub
out
dec
in
and
sti
push
pop
daa
inc
call
int
shl
subl
movsb
jecxz
sbb
inc
mov
repz
pop
cmc
push
aaa
dec
mov
rcrl
cld
pop
inc
or
mov
cmp
mov
mov
dec
fnstsw
add
enter
push
dec
daa
mov
push
dec
lret
mov
pop
cs
mov
mov
and
add
aaa
test
pop
mov
ret
rolb
sar
stc
je
push
push
sub
mov
xchg
inc
pushf
cmp
cmpsl
sahf
xor
jmp
ret
test
cmc
jecxz
pop
xor
aas
mov
adc
enter
push
lret
push
call
push
jl
ror
push
pop
roll
mov
push
fs
cmp
ja
mov
leave
iret
aas
jg
in
fsubs
cmp
es
mov
out
xchg
testb
cmp
mov
or
cmp
pushf
call
sbb
into
xlat
xor
add
pop
data16
jnp
jg
or
jecxz
or
sbb
vmovups
arpl
lea
ljmp
dec
fdivs
jnp
call
shlb
and
pushf
add
ljmp
inc
outsb
dec
std
roll
jb
sub
gs
movsl
cmp
out
mov
inc
or
mov
push
andl
cwtl
sub
mov
scas
popf
into
sub
xchg
lcall
jecxz
pop
test
dec
sub
xchg
outsl
push
dec
into
cmp
pusha
inc
jmp
test
cmc
sub
in
add
mov
fcoms
imul
cmp
add
add
cmp
jp
or
and
xor
pusha
add
ljmp
sahf
add
pop
jns
movsb
loop
xor
fs
daa
push
mov
adc
push
xchg
mov
clc
xchg
cmp
mov
int
xchg
or
ret
decb
pop
cwtl
outsb
xchg
popf
sbb
mov
imul
mov
test
stc
or
jmp
int
les
add
jg
push
and
xchg
jns
mov
add
aaa
fwait
loopne
and
loop
adc
andl
sbb
aad
xchg
outsb
aas
add
push
mov
int3
fsubl
sbbl
xchg
adc
lcall
sub
mov
movsb
jne
aas
pop
and
out
movaps
or
pop
testl
push
dec
or
inc
xor
mov
ds
cmp
test
cmpsb
jg
shlb
sub
test
testl
cmc
xchg
fisttpll
pushf
imul
inc
push
or
cmp
lcall
mov
and
sub
xor
dec
test
ds
dec
int3
ror
out
cmp
jmp
repnz
cld
jl
jnp
dec
cmp
ds
inc
mov
adc
add
ss
ficomps
lods
or
push
mov
push
push
pop
sbb
add
dec
xor
shll
xchg
push
sti
int
pop
push
sub
sub
push
insb
mov
test
dec
out
add
inc
mov
inc
aam
mov
rorb
das
paddsw
aam
jae
pop
inc
lret
repnz
mov
pop
fimuls
mov
andl
fs
sub
jno
stc
push
inc
xor
loope
mov
mov
jl
and
outsl
into
fadds
fsts
adc
pop
push
inc
dec
outsb
push
std
sub
ja
adc
iret
jo
jno
or
mov
xchg
add
sub
arpl
push
lods
push
pop
jbe
mov
scas
jo
jmp
add
and
xchg
cli
jnp
leave
or
mov
das
cmpsl
pop
jecxz
xor
mov
xchg
push
sub
loopne
sbb
mov
or
lret
popa
pop
xchg
enter
in
movsb
lock
fsubrs
pop
push
push
xor
frstor
jmp
sbb
call
fadd
xor
sti
mov
scas
leave
test
int
out
imul
add
aam
mov
idivb
int3
test
sbb
mov
mov
dec
inc
into
jno
mov
adc
sbb
mov
pop
in
rcrb
push
test
add
out
dec
jle
cmp
mov
xchg
movsl
loopne
bound
mov
lret
shrl
daa
jno
mov
cmp
mov
out
cmp
add
jnp
dec
add
das
adc
pushl
addr16
pop
insl
jb
sbb
jge
roll
int3
xchg
xchg
cmpsb
push
xor
insl
or
nop
mov
jp
add
and
inc
jae
mov
inc
inc
mov
push
jns
fildll
clc
mov
mov
lret
jo
inc
push
pop
out
sbb
repz
mov
lock
fcmovbe
dec
xchg
ja
push
test
xlat
pop
and
xchg
jo
mov
xchg
rorb
mov
popf
loopne
xchg
or
fstpt
or
into
or
outsl
pop
in
xor
xor
push
out
xchg
test
dec
es
daa
mov
imul
je
dec
out
adc
jp
in
lahf
and
mov
stos
push
mov
fmuls
cmpsb
cmp
mov
mulb
jp
imul
or
add
mov
fiaddl
ss
icebp
enter
inc
jno
scas
jmp
fsubrs
fscale
icebp
dec
push
and
jge
call
arpl
cmpsb
imul
shll
adc
jle
cmp
cmp
jb
in
std
dec
test
push
sub
and
xchg
xorl
out
mov
cmp
test
out
jl
das
dec
clc
and
inc
ret
mov
fisttpll
pushw
loop
xor
lods
jmp
call
push
mov
sbb
mov
jg
jne
mov
inc
pop
jo
or
not
lods
stos
lea
xor
xchg
add
into
adc
jno
mov
mov
inc
jge
jg
lods
jnp
fldenv
jb
cwtl
inc
pop
mov
imul
stos
pop
push
stc
inc
es
add
xchg
mov
sub
sbb
pushf
stos
mov
push
lret
lahf
fcmovnbe
xlat
fldcw
xchg
add
pop
cmpsb
mov
mov
dec
rol
scas
push
inc
mov
outsb
in
mov
jmp
loop
push
push
mov
pop
in
xor
xchg
fwait
push
xchg
movsl
scas
pop
cmp
mov
icebp
jle
add
sbb
ret
cmp
cmp
in
aas
movsl
scas
and
in
std
push
and
and
mov
ljmp
pop
std
mov
imul
int
jb
mov
jecxz
in
jns
js
or
cmpsb
or
inc
lock
out
mov
sub
push
repnz
les
dec
ret
divb
out
inc
and
xlat
or
aaa
sub
scas
je
popf
jno
cmp
adc
out
xchg
mov
mov
xchg
aam
push
adc
aam
jae
jnp
adc
pushf
and
lahf
int3
aaa
ljmp
jge
cmpsl
or
fsubrl
js
and
ret
inc
jno
shl
xchg
dec
cwtl
jbe
pop
jbe
jg
scas
addl
fisttpl
jno
int3
mov
js
out
sub
add
pusha
mov
cmp
mulb
sarb
jb
adc
push
dec
loopne
outsl
xchg
sub
xchg
mov
dec
pop
sub
push
in
outsb
cmp
fwait
mov
pop
push
in
aam
jns
push
stc
xor
or
jle
lret
scas
adc
scas
int3
movsb
pop
lock
lret
sub
mov
mov
xor
ds
loop
sub
mov
iret
xlat
add
push
rcll
jmp
push
cmp
test
jg
popf
mov
pop
adc
inc
daa
dec
lret
jmp
mov
outsl
rcl
jo
nop
js
call
jecxz
or
inc
add
popa
xchg
mov
pusha
mov
rclb
mov
cmp
movsl
cmpb
xlat
push
push
jne
bound
mov
dec
shll
or
sub
hlt
loope
std
insl
scas
nop
inc
insb
aaa
pop
dec
add
leave
adc
and
sub
mov
sbb
in
imul
test
jns
jp
inc
lahf
popa
rclb
movb
sbb
out
cmpsb
movsb
into
in
fdiv
sti
and
inc
cltd
cs
jne
cli
adc
stos
inc
mov
mov
ja
test
cmp
add
xchg
or
mov
stos
xchg
outsb
sti
add
mov
mov
out
dec
jle
push
pop
push
loopne
cwtl
in
nop
iret
movsb
mov
xchg
push
ljmp
push
lret
jne
sub
lcall
mov
jge
jmp
add
aas
adc
pusha
ja
nop
pop
sahf
loopne
out
in
int3
cmp
xchg
xchg
or
jbe
add
sbb
mov
aaa
inc
int
out
cmp
jle
imul
sahf
inc
add
sbb
adc
pop
mov
sbbl
ljmp
push
pop
sbb
std
repnz
cmpps
cld
out
ljmp
aad
and
imul
lods
or
sub
mov
jl
add
lret
mov
fiaddl
into
mov
jmp
mov
inc
ds
xchg
test
mov
inc
mov
push
adc
rcl
outsl
jl
test
jge
sbb
es
xchg
int3
in
xor
out
cmp
pop
cmp
hlt
add
jle
push
jecxz
fiaddl
or
stc
jnp
nop
cmp
cli
push
xchg
insl
movsl
pop
xorl
push
jecxz
jae
movsw
push
sbb
int3
dec
outsl
and
pop
xchg
push
hlt
xor
fsubrl
push
dec
dec
aam
mov
int
les
inc
rcll
lods
test
rcr
lods
pusha
stos
or
push
mov
xchg
mov
mov
leave
lods
jns
in
xchg
out
cli
lret
adc
add
out
xor
jb
addr16
sbb
push
sub
xchg
mov
mov
xor
aam
push
in
adc
add
adc
pop
repz
arpl
mov
mov
dec
int3
imul
je
jp
xor
mov
sarl
add
cmp
mov
jecxz
je
mov
pop
clc
mov
das
data16
lods
iret
mov
cmp
xlat
dec
dec
sbb
filds
cmc
cmpsl
xchg
in
lahf
ds
pop
iret
ss
loope
lret
cwtl
shlb
or
loop
push
xor
test
ret
aam
add
mov
rorb
fsubl
into
cwtl
in
mov
out
aas
add
cmp
xor
out
add
dec
leave
dec
insl
in
out
dec
ret
jp
or
je
or
ja
and
push
stos
mov
ss
gs
mov
push
mov
push
sbb
pand
aad
cmp
leave
or
sbb
mov
fndisi(8087
ss
xlat
push
xor
fnstcw
out
stos
push
pop
cmp
rcrb
nop
push
outsb
fdivs
xor
jbe
inc
xor
aas
out
testl
int
stos
sub
or
out
mov
xchg
dec
loop
pop
int
in
popf
push
icebp
inc
lcall
mov
in
iret
xchg
dec
jbe
adc
popa
out
loop
or
into
mov
adc
push
lret
push
xor
xor
cmp
mov
je
mov
dec
inc
cli
sbb
add
push
leave
and
mov
jl
xor
xchg
jbe
test
ret
add
pusha
das
push
movsb
arpl
shrb
shlb
xlat
ljmp
mov
push
scas
mov
adc
loope
mov
movsl
sbb
cmpsb
and
pop
push
pop
orl
jecxz
iret
adc
mov
adc
rolb
cli
sahf
ja
ret
int
or
sti
dec
pop
popa
jbe
pop
popf
jbe
adc
xchg
sarb
mov
or
in
lret
inc
and
pop
aad
cld
fidivs
lods
pop
push
adc
data16
loopne
not
jl
adc
push
cmp
imul
movb
lods
fdivs
sti
sbb
dec
cmc
cmp
push
lds
jne
mov
mov
fwait
jb
xchg
pop
push
jno
mov
inc
cmp
pcmpgtb
aad
cmp
inc
lods
xchg
xchg
adc
arpl
jecxz
in
cli
stc
xchg
shl
imul
cmc
push
xor
push
pop
inc
test
adc
div
je
fbld
into
or
pop
call
inc
aaa
insb
in
lret
and
movl
jp
or
stc
ja
sti
idiv
sarl
adc
jbe
sub
insl
jno
cs
push
mov
and
js
sbb
inc
ljmp
pop
pop
pusha
loop
stc
fstps
leave
xchg
jecxz
divl
filds
int3
push
push
mov
pop
gs
in
popf
sbb
cmp
insb
push
dec
add
jns
lret
lods
adc
mul
and
or
ds
outsl
bound
push
xchg
sbb
leave
out
add
adc
push
jmp
ja
movsl
xchg
pop
and
lock
out
repnz
add
xchg
xor
xchg
cld
dec
mov
mov
and
ret
sub
test
std
fs
and
enter
pop
loope
push
mov
mov
push
cwtl
fcmovbe
add
mov
pop
cmp
out
loope
pop
lods
jb
or
mov
mov
mov
pop
fistpl
cmc
pop
fsubp
lea
dec
sbb
ret
andl
jo
or
cwtl
rcll
iret
mov
and
xchg
inc
and
and
xor
lret
out
push
dec
and
and
jae
sbb
cmp
addr16
loopne
adc
mov
pop
dec
jmp
mov
jbe
jmp
push
push
imul
loopne
pop
cmc
fdiv
adc
and
ljmp
and
push
pop
push
inc
test
int
xchg
mov
mov
jp
push
cwtl
ds
movsb
dec
stos
int3
mov
fildll
mov
aam
das
jae
xchg
inc
pusha
dec
stc
clc
push
cld
dec
aaa
aas
or
sbbl
sbb
dec
push
add
loopne
test
js,pt
add
das
xchg
pop
mov
sub
inc
insb
jns
mov
dec
iret
roll
dec
push
ja
adc
push
sbb
dec
sbb
aam
jmp
in
rolb
jns
pop
sbbl
fdivrs
push
dec
dec
cwtl
dec
gs
orb
cmp
filds
push
jecxz
or
dec
test
mov
sbb
sahf
inc
or
sub
dec
sbb
dec
push
das
movsb
test
cmp
dec
xchg
mov
loopne
mov
stc
outsb
xchg
popa
addr16
and
ja
repnz
jb
or
into
mov
sub
adc
xlat
pop
mov
mov
fiaddl
dec
jge
mov
push
jb
xor
xchg
pushf
dec
inc
sbb
mov
sbb
cmp
dec
pop
cmpsl
fimull
sbb
out
or
mov
jl
mov
mov
in
mov
jbe
xor
dec
in
in
ds
mov
sbb
push
push
xchg
and
into
fcomps
dec
mov
xchg
mov
fwait
repnz
daa
pop
les
stos
jnp
movsl
mov
out
daa
loope
fs
jecxz
jle
shrb
xchg
stc
xchg
cmc
lcall
loop
and
bts
and
xor
push
ss
xor
cmp
adc
sbb
ds
mov
lods
js
fbld
mov
scas
test
mov
sarb
in
lods
xor
jp
sub
pop
and
jmp
testb
imul
push
mov
and
jae
into
mov
repz
xor
gs
aam
cld
pop
jo
idivb
daa
insb
fs
out
ja
push
sbb
enter
pop
jmp
cmp
jl
insb
pop
inc
fsubs
repnz
ja
jbe
xor
jmp
stos
add
xchg
jne
xchg
std
mov
in
mov
pushf
test
jg
imul
test
out
adc
test
and
ja
push
jno
es
pusha
andl
data16
insb
xchg
dec
test
std
and
lcall
dec
dec
movsb
jg
push
ds
lcall
and
insb
icebp
dec
adc
xor
loopne
push
hlt
dec
jno
jecxz
or
out
or
fisttps
stc
lret
push
fiaddl
idiv
in
mov
push
pop
xor
sbb
mov
mov
xchg
xor
add
cmp
daa
or
sub
js
and
xor
mov
xchg
inc
sub
sbb
movsl
pop
push
scas
fneni(8087
ss
lret
fdivrs
clc
and
mov
push
add
sbb
mov
jb
sub
stc
xor
jmp
jnp
out
movsl
pop
mov
inc
pop
pop
int
add
aad
repnz
push
mov
jle
inc
add
sarl
dec
loop
cmp
jmp
sbb
ljmp
adc
loop
inc
cmp
dec
ja
test
lcall
push
mov
mov
sub
lods
out
mov
dec
mov
mov
ja
sbb
mov
data16
int
mov
mov
shl
or
inc
sub
pop
dec
cmp
xchg
ds
das
pop
lea
add
dec
out
popa
js
xchg
xor
mov
nop
or
or
in
and
push
lcall
call
jge
js
cmp
mov
and
aad
mov
test
mov
inc
lret
in
push
jb
jo
into
repnz
cmp
jle
dec
inc
xchg
das
mov
iret
leave
mov
mov
call
fcoml
cmpsb
addr16
push
stos
mov
insb
fidivrs
shl
repnz
dec
rcl
outsl
mov
add
sarl
xchg
addr16
into
adc
mov
shrb
cmp
lgs
icebp
dec
push
out
in
lahf
pop
sarb
repnz
push
fs
testb
or
mov
adc
sbb
orl
or
sub
ds
rcl
xor
in
and
xchg
xor
into
jmp
mov
pop
stos
mov
fs
cltd
mov
mov
push
leave
je
pop
push
repnz
andl
mov
insl
lods
sbb
sarb
and
xchg
mov
orl
movsl
push
adc
push
negb
popf
ret
cmp
mov
or
in
cmp
push
or
add
sbb
push
lods
sbbb
inc
scas
xchg
ret
lds
adc
data16
rorl
cmpsb
lods
mov
sub
aad
adc
outsb
loop
mov
pop
in
mov
outsl
push
or
pusha
pop
test
push
add
push
mov
xchg
sbb
js
aam
pop
push
adc
or
lret
fcomps
rcll
cltd
pop
fmull
es
sub
inc
enter
std
mov
dec
jmp
sub
iret
add
aam
inc
rcl
or
ds
ret
xchg
js
mov
dec
dec
push
enter
xorl
add
push
or
mov
pop
cmp
loopne
test
and
jnp
jno
jbe
push
dec
xchg
hlt
mov
in
into
pop
sub
xor
mov
xlat
lcall
fwait
jl
lods
xchg
mov
pop
out
stc
cld
data16
shrl
aad
xor
push
daa
mov
push
adc
insb
pop
dec
jb
pop
hlt
es
test
mov
mov
sub
jae
mov
imul
mov
pop
sub
bound
push
pop
mov
mov
dec
jnp
push
loop
pop
pop
stos
sahf
jno
add
scas
dec
xchg
xchg
rcrb
push
dec
imul
aad
push
and
inc
jbe
mov
jl
lret
mov
pop
movsb
jae
and
sbb
dec
xchg
dec
lods
mov
lret
sbb
cld
pop
dec
mov
mov
insb
test
push
xchg
mov
jbe
ja
push
aam
sbb
and
sub
jge
mov
push
aad
push
insl
add
lds
sbb
mov
push
xor
into
bound
sar
lcall
rol
ja
bound
int3
outsb
js
push
adc
sbb
xchg
shl
fsts
div
dec
int
dec
pop
xor
mov
or
not
int
add
out
icebp
addl
popf
fs
fstp
std
xchg
shll
out
add
inc
cmp
mov
mov
cwtl
aas
std
arpl
jae
pop
pop
pop
into
rep
cmp
mov
inc
pushf
clc
into
jmp
loope
ds
mov
jle
inc
mov
int
adc
sbb
xchg
iret
aad
push
pushf
fwait
cwtl
int3
sub
jnp
test
xchg
push
lock
sbb
pop
jbe
movsb
xlat
mov
mov
test
das
adc
sbb
xor
orb
pop
lret
bound
add
pop
push
push
fidivl
xchg
fdivrs
lahf
lret
rorb
lds
loope
faddp
pusha
insb
xor
add
mov
iret
ss
and
idivb
jg
sub
sbbl
sqrtps
pop
aam
dec
inc
fwait
xchg
fidivl
fcoms
fs
push
or
jb
aas
lret
mov
add
push
cltd
adc
push
xchg
arpl
aad
int3
mov
dec
and
scas
xor
out
sub
and
cli
jno
outsb
sub
inc
add
mov
xchg
iret
movsl
push
and
sub
outsb
cmp
mov
mov
mov
jne
and
jg
push
fnsave
repnz
jns
mov
cwtl
hlt
dec
and
popa
sub
notl
push
pop
push
je
lret
fisubs
movb
mov
jae
sarl
ror
cmp
add
push
movsl
mov
pushf
addr16
push
aaa
mov
test
and
cmp
mov
mov
loopne
shlb
cmc
jbe
shlb
pushf
iret
rclb
mov
cs
xor
enter
flds
jge
xchg
leave
dec
cwtl
inc
adc
clc
mov
mov
cmpsl
sub
leave
sbb
cwtl
sarb
xchg
into
stos
imul
dec
pop
ficoms
aaa
xchg
imul
rorb
or
cmpb
into
adc
movsb
aaa
push
add
fwait
xchg
ficomps
push
aam
loopne
inc
adcb
popf
cmp
jecxz
dec
mov
out
faddp
roll
ja
xchg
out
addb
add
mov
mov
std
aas
sbb
jb
int3
inc
enter
arpl
cmp
xchg
das
xchg
push
stc
out
mov
sahf
sbb
sbb
pop
in
or
lods
popf
ljmp
jle,pn
sbb
pop
pusha
add
dec
sub
lds
arpl
pop
out
inc
aaa
add
iret
ljmp
mov
add
xchg
xlat
in
push
cmp
loopne
add
outsl
sub
mov
stos
test
int
push
push
cmp
lret
inc
cmp
push
in
mov
cmp
test
adc
xchg
ljmp
sbb
popf
lret
push
aam
mov
pop
sbb
cmpsl
rcll
or
cmp
push
es
fstl
mov
into
movsb
sbb
add
xchg
repnz
idiv
aas
loope
add
mul
fsubrl
sti
cmp
repnz
or
stos
pop
pop
cmc
loopne
fistpll
sub
mov
adc
ja
sbb
scas
sahf
fstpt
or
leave
adc
sub
sub
out
sbb
outsb
fcoms
iret
fdivl
xchg
repnz
mov
imul
push
jo
sbb
add
lret
add
mov
ret
inc
push
pop
cltd
cli
rcr
and
sbb
xor
xor
lret
pop
mov
orl
loopne
add
jmp
out
jno
std
enter
test
idiv
mov
jbe
xchg
mov
pop
lds
adc
ret
dec
repz
lahf
or
mov
loop
lret
in
pop
stos
push
add
mov
or
leave
int
imul
imul
pop
es
leave
jle
jae
lds
inc
into
dec
insb
ljmp
dec
dec
mov
pop
leave
cmc
mov
mov
lcall
dec
daa
imul
in
subb
push
loop
pop
sbb
fcmovu
ret
lcall
xchg
repz
and
mov
add
lods
ljmp
test
je
into
scas
out
xor
jmp
xor
jno
test
insb
pop
xchg
xchg
dec
add
call
mov
bound
out
xor
mov
mov
add
dec
dec
xchg
mov
push
dec
in
jne
jge
fiaddl
xor
jmp
test
and
in
and
inc
lock
addr16
dec
mov
outsb
bound
jecxz
mov
js
inc
int
jne
add
push
dec
rcrb
negl
popa
or
mov
mov
add
xchg
mov
mov
jl
cwtl
fbstp
pop
inc
lock
iret
xor
mov
icebp
dec
add
bound
and
mov
or
jecxz
leave
test
sbb
xchg
push
test
push
negl
jl
push
inc
je
pusha
mov
mov
jb
fwait
xor
and
push
jne
data16
das
mov
repnz
jno
test
lahf
sarl
loopne
dec
add
mov
push
cmp
xchg
repz
jno
xchg
xor
inc
decl
push
push
xor
push
inc
mov
into
lock
fstpl
cld
stos
push
test
pop
test
out
in
mov
lea
adc
mov
iret
out
aam
jl
mov
arpl
or
push
push
jo
nop
iret
mov
out
scas
mov
adcl
test
add
fdivs
push
loope
lret
pushf
dec
ds
push
out
xchg
jp
rcl
and
and
enter
rcrb
inc
jl
loop
xchg
movsl
push
andb
jne
std
fmull
ret
lret
pushf
fcmovbe
inc
lahf
nop
int
or
mov
sti
inc
push
in
fldt
push
xchg
daa
mov
fistps
out
mov
fwait
lcall
cwtl
jbe
push
fxch
icebp
xchg
cmpsb
sbb
sbb
sub
cli
mov
pusha
jmp
adc
push
out
pop
lret
inc
es
mov
cmp
xlat
mov
and
imulb
sub
xor
lcall
fs
mov
adc
cwtl
sti
pop
pop
adc
jl
mov
mov
scas
addr16
pop
idivb
shll
inc
lds
cmp
jno
jns
adc
sbb
jne
int
les
sarb
loopne
mov
or
shl
inc
dec
arpl
inc
cli
imul
into
ja
xor
loop
push
inc
mov
popf
xor
mov
roll
leave
cmp
dec
decb
pop
out
je
push
mov
or
imul
iret
test
daa
add
sbb
pop
cmp
mov
xchg
or
lret
push
push
and
add
imul
stos
and
lcall
xchg
push
loope
scas
xor
or
jecxz
pop
push
and
mov
or
xchg
cmpsb
aam
mov
lcall
lret
jb
sub
push
nop
inc
ljmp
imul
sbb
xchg
popf
andb
or
imul
jle
jae
fidivl
lahf
xlat
add
das
into
and
push
and
cmp
jecxz
xchg
popa
aas
or
loope
neg
mov
jecxz
fbld
int3
jl
aam
ret
push
and
inc
mov
dec
mov
das
lahf
gs
fldl
insb
aad
out
data16
jp
fmull
ds
or
pop
pop
int
pop
insb
push
insb
adc
mov
jno
push
xchg
xor
or
sub
dec
push
xor
loope
pop
std
test
ss
sub
cmp
shrb
xchg
idivl
pop
dec
push
mov
test
sti
xchg
insl
add
shl
inc
adc
add
pop
jnp
addr16
jbe
jne
and
sub
testl
cwtl
rep
cmpsb
hlt
fcmovbe
xchg
push
push
repnz
mov
inc
pusha
or
aam
in
sbb
sbb
rcrl
cmp
in
out
sbb
loop
adc
daa
mov
es
pop
ret
in
lret
rcl
out
xor
mov
fstps
fcoms
inc
pop
mov
jg
mov
std
dec
xchg
inc
push
sti
jns
inc
insl
jnp
inc
call
dec
xlat
mov
mov
or
xor
ja
test
add
or
push
sbbb
int3
or
sbb
push
fcmovbe
fnstenv
jp
in
shlb
and
pop
dec
rcr
push
pop
repnz
gs
imul
test
adc
xor
push
sub
add
jo
insl
and
addr16
insb
or
sub
in
aad
stos
pop
lahf
xchg
mov
mov
aam
clc
jno
mov
and
arpl
leave
scas
push
inc
aam
add
repz
xchg
sbb
mov
mov
test
lret
mov
cmp
decl
xchg
ret
andl
mov
mov
mov
jge
sbb
dec
xor
sti
jno
scas
add
pop
sahf
call
push
inc
pop
mov
xor
into
push
adc
cmp
push
jmp
pusha
cwtl
pop
xlat
arpl
add
stos
js
mov
out
movsb
hlt
inc
rolb
cld
mov
sub
out
ficoml
or
jae
int
sbb
xchg
push
iret
adc
jno
sahf
ljmp
mov
push
dec
enter
adc
add
adc
xor
ret
stc
mov
xchg
fwait
pop
sbb
mov
push
and
sbb
fdivr
pop
sbb
push
cmp
leave
pop
lcall
js
jle
int
xchg
data16
lahf
icebp
lcall
push
out
or
inc
cs
repnz
mov
cli
sbb
incl
imul
repz
jg
pop
out
or
mov
cmp
nop
les
pop
mov
add
ss
sbb
cmpsl
lret
pop
mov
pop
mov
movsl
xlat
retw
mov
mov
in
into
xchg
xor
or
in
push
add
sub
pop
negb
ds
xchg
jo
popf
add
dec
stos
or
lret
leave
mov
ja
ret
sub
imul
enter
sbb
leave
hlt
mov
adc
sbb
ljmp
sub
sarl
xchg
outsw
fdivrs
jno
hlt
xlat
mov
xor
pop
xchg
outsl
sbb
jmp
repnz
mov
pop
cmp
fcmovb
and
sahf
ficompl
mov
sub
xchg
outsb
loope
mov
int3
xchg
cmp
xchg
mov
mov
stc
mov
outsl
and
hlt
pop
mov
pop
inc
fadds
push
shlb
xor
or
movsl
lea
xchg
xor
jne
pop
aam
or
mov
fisttpl
add
outsb
subb
push
jp
jle
shll
out
cmp
lret
xlat
pop
pop
out
sbb
inc
pop
in
add
jp
roll
imulb
xlat
inc
call
sbb
imul
sub
xor
pop
dec
or
jo
pop
in
shll
loopne
jno
xchg
in
mov
rorl
aam
cmp
inc
mov
rorl
sub
push
pop
push
lahf
orb
mov
cmp
lods
mov
js
pop
out
into
xchg
lods
inc
daa
shrb
add
or
test
jne
test
pop
mov
xor
cli
and
jo
push
stos
and
adc
pop
mov
mov
lahf
sub
mov
xor
xor
iret
xchg
sbb
or
je
xchg
pop
incb
insb
cli
adc
or
fwait
mov
cmp
and
inc
cmp
push
pushl
cmp
sbb
mov
lcall
xor
into
cld
jno
loopne
xchg
or
mov
mov
xchg
jmp
fidivs
fbld
sbbb
pusha
js
popf
adc
adc
fs
pop
push
in
pop
insb
cmpsb
inc
int
adcl
into
add
mov
pop
mov
xchg
pop
scas
push
mov
pop
pop
cmp
aam
or
mov
lcall
sar
cmpsl
jp
cmc
pop
lret
inc
les
add
test
loop
out
inc
in
mov
dec
int
xchg
add
aam
and
and
fisubrl
lcall
push
push
test
daa
popl
pop
cmp
outsb
mov
dec
js
int3
jbe
jge
cmpsb
into
aas
cwtl
cmp
mov
push
lea
aam
div
pop
jnp
fcoms
jg
jmp
sbb
loopne
push
into
xorl
pushf
cwtl
push
fisubl
xchg
jbe
dec
or
mov
out
sti
repz
insl
cld
scas
mov
jle
pop
ja
sub
into
sub
add
mov
loope
jmp
xchg
add
jnp
sbb
mov
push
sbb
mov
cmp
jb
push
decb
adc
mov
lods
or
add
test
jno
cltd
inc
cmovbe
jmp
push
pop
mov
sahf
jns
or
push
pop
jecxz
nop
imul
xchg
push
adc
sub
or
repz
cmp
lods
xlat
out
call
std
leave
test
xchg
mov
sarl
iret
cwtl
mov
shrl
mov
add
jmp
and
into
jle
bound
adc
int
roll
mov
add
inc
inc
out
pop
xor
call
xchg
cmp
jbe
xchg
add
adc
mov
xchg
nop
and
sub
mov
add
and
ficoml
adc
cmp
mov
testl
push
cmp
cmp
inc
loopne
fstps
jecxz
and
fwait
lret
jo
xchg
sbb
push
push
pop
and
adc
ss
add
notb
and
popf
std
stos
dec
pushfw
int3
or
and
or
xchg
add
cmp
imul
jne
sbb
bnd
sub
out
push
push
pop
mov
dec
cli
cmp
stos
ret
or
pop
ret
add
push
inc
out
push
je
sbb
enter
lea
aaa
xchg
dec
mov
inc
cmpsl
dec
push
jo
cmp
add
xor
aam
pop
adc
lcall
pop
addb
mov
or
sbb
stos
js
in
or
jecxz
or
push
cmp
movsl
jmp
adcb
aaa
jge
mov
test
xchg
mov
push
icebp
dec
mov
in
xchg
jns
cmp
sub
cwtl
aas
test
ja
inc
pop
xchg
jne
sbb
adcl
inc
scas
mov
in
mov
lods
andb
fdivs
mov
js
xchg
repz
popa
xchg
arpl
xor
cwtl
test
cmp
jmp
xlat
shrb
jle
adc
repz
dec
dec
cwtl
movsb
mov
mov
sti
pop
fcmovnb
dec
popf
subb
into
je
or
push
and
out
adc
lret
out
fadds
ds
imul
je
jmp
xchg
jo
mov
mov
cmp
xor
test
rorb
fwait
hlt
sub
push
and
rcl
dec
pop
testb
je
xchg
jmp
pop
cmc
adc
mov
adc
fnstsw
inc
jne
sbb
shlb
push
lret
mov
mov
and
addr16
repnz
test
loop
jbe
call
mov
movsl
or
mov
nop
loop
lods
add
dec
cmpl
and
nop
mov
xchg
sub
adc
mov
jmp
outsb
rclb
test
push
jge
decb
sbb
lret
cld
adc
sbb
inc
push
push
pusha
pop
fsubl
xor
fnstcw
in
out
xor
or
insb
push
out
filds
sub
mov
fisubrs
xchg
add
mov
ljmp
push
rclb
jmp
rorl
xlat
jbe
clc
dec
mov
lds
inc
sub
movsl
ljmp
mov
dec
xchg
mov
rcl
cmpsb
mov
loop
popf
push
pusha
lods
inc
jmp
xchg
hlt
sbb
dec
je
xor
or
lar
inc
aaa
pop
sub
shrb
pop
dec
mov
push
add
and
or
cltd
outsb
mov
fmull
mov
adc
stos
cmp
clc
mov
mov
pop
sub
loop
not
icebp
lods
popf
int3
add
divb
mov
dec
rcrl
push
stos
bound
lret
ret
cmp
testb
mov
insb
xchg
push
aas
lods
xchg
sub
cltd
xchg
aam
cmc
icebp
clc
cmpsb
scas
sub
test
pop
dec
mov
mov
pop
mov
sarb
lea
test
out
and
rorb
loope
fs
mov
popa
loopne
not
or
pop
sti
inc
cmpsl
aaa
push
es
test
js
sub
leave
dec
filds
push
int3
jbe
sub
cs
dec
inc
cmp
shll
sub
movsb
hlt
mov
leave
adc
sti
pop
lret
cmp
inc
into
out
movsb
jo
add
push
dec
xor
mov
adc
sbb
push
jp
fiaddl
pop
movsb
add
mov
cmp
scas
add
xchg
in
jecxz
div
add
js
mov
nopl
inc
mov
sub
cld
jne
push
mov
add
or
jl
es
out
adc
std
cmc
ds
sti
decb
rorl
pop
lods
push
scas
xor
cmp
shlb
out
jno
adc
insb
cmpsl
dec
xchg
incl
movsl
xor
jle
xchg
mov
mov
xchg
mov
mov
and
shl
stc
cmp
loop
insb
imul
sub
stos
mov
daa
jg
sbb
xchg
dec
adc
inc
push
adc
pop
and
dec
push
in
popa
mov
fistpll
mov
xor
dec
pop
notb
push
cmp
jns
mov
mov
dec
outsl
lds
jb
mov
nop
jnp
scas
hlt
xor
jecxz
ds
std
aad
lods
cmpsl
loop
enter
xlat
adc
out
popf
mov
dec
and
cmpsb
je
scas
or
push
or
xchg
imul
pop
repz
xchg
jne
out
dec
xchg
dec
sarb
cmp
adc
add
repz
xchg
enter
push
dec
inc
jno
xchg
pushw
out
addr16
fst
or
into
jle
hlt
pusha
pop
push
bswap
gs
out
sub
jo
xchg
push
aaa
cmp
mov
adc
sbb
rcrl
jecxz
shll
cwtl
js
mov
lcall
mov
in
incl
es
into
mov
fidivrs
outsl
ret
add
push
sbb
mov
sub
mov
adc
icebp
enter
imul
nop
outsl
xchg
mov
mov
lods
cwtl
cmpsl
arpl
dec
in
sbb
inc
xchg
call
test
inc
sub
mov
lds
pop
dec
mov
sub
mov
mov
and
nop
ror
adc
daa
sbb
xorb
data16
cwtl
aaa
xor
in
enter
sbb
pop
test
insb
xchg
sar
sbb
mov
out
out
mov
lret
push
rcrb
xchg
aaa
mov
outsl
leave
into
jmp
divb
jbe
or
outsb
mov
ljmp
inc
push
push
rcl
push
inc
fldt
inc
xchg
push
ret
mov
lret
lahf
incl
nop
sti
mov
cmpsb
push
or
loope
sbb
mov
pop
out
mov
sub
shl
inc
adc
insb
jmp
fsubs
xchg
sti
dec
cld
cmc
movsb
push
repz
sub
dec
push
shlb
dec
ljmp
mov
aad
cwtl
xor
xchg
xor
pop
jle
mov
std
mov
mov
shlb
js
in
push
mov
jo
sub
loope
mov
cs
adc
xchg
mov
neg
push
ds
add
adc
xchg
inc
cmc
aad
xchg
or
mov
sbb
test
xor
dec
pushf
lea
loopne
jnp
sbb
gs
inc
inc
or
push
mov
lock
fcomps
ja
leave
inc
shlb
and
mov
pop
pop
inc
mov
push
repnz
or
push
popf
insb
fldl
jo
jae
pop
mov
dec
ds
nop
int
lock
jle
xchg
pop
mov
popf
inc
fildll
mov
inc
rorb
dec
addr16
jbe
push
lret
jo
inc
mov
push
imul
and
cli
sbb
scas
dec
xlat
sti
repz
xor
stos
inc
inc
rolb
scas
adc
mov
call
push
push
jecxz
repz
mov
pop
or
filds
into
sbb
push
fadds
cmp
cli
dec
xchg
scas
int3
das
cwtl
out
sti
test
or
cs
loop
call
movsl
movb
xor
dec
imul
test
int3
mov
xor
fwait
dec
sub
sub
mov
ljmp
jns
sub
push
outsb
mov
add
jae
cmp
jmp
fistps
and
or
fdivrl
cmp
jmp
cmpb
mov
mov
aad
addl
negb
out
jne
sub
dec
xor
or
pop
andl
cmc
test
cmp
cltd
push
dec
xchg
mov
sub
pop
push
xchg
aaa
and
sbb
dec
clc
ret
jbe
add
out
fisubs
mov
int3
mov
mov
add
mov
xchg
lods
or
or
out
jmp
outsl
or
push
mov
mov
into
mov
xor
xor
ret
fisubrs
inc
addr16
shll
jmp
jns
sbb
pusha
cmc
and
and
add
jp
jecxz
cli
inc
fidivl
xor
addr16
cmpsb
outsl
fsubr
rcrb
add
mov
or
pop
add
xor
scas
add
cmp
aam
and
std
mov
mov
mov
test
es
push
cs
lret
xchg
and
adc
stos
fwait
cli
jbe
test
ja
sbb
jle
cwtl
jl
inc
leave
iret
mov
test
out
xchg
dec
ret
dec
and
jae
or
dec
lea
in
mov
mov
push
and
pop
sbb
shrl
and
sub
mov
es
jnp
movl
jge
jnp
pop
dec
xchg
dec
cmp
jp
jecxz
mov
cmp
leave
jg
sti
rorb
std
pop
lret
adc
xchg
int
inc
xchg
push
or
cwtl
cmc
add
mov
jo,pn
and
into
shlb
fstl
sub
jne
and
adc
out
imul
dec
in
repnz
sahf
push
mov
mov
jl
mov
push
dec
push
out
loopne
lea
mov
mov
bound
dec
jae
out
ds
xchg
add
mov
jbe
cmp
push
ror
jno
les
push
and
cwtl
cmp
mov
iret
pop
out
push
jl
sub
outsb
and
xor
fstpl
hlt
jecxz
imul
ss
xchg
sub
xor
sub
popf
addr16
mov
mov
gs
lods
add
mov
iret
out
mov
add
out
data16
sub
fs
xchg
push
scas
jmp
ja
out
insb
out
popa
int3
push
xor
or
ret
mov
sbb
jbe
sub
adc
mov
sub
dec
push
ficompl
jecxz
mov
jmp
inc
sbb
push
lahf
ret
or
xor
xchg
ljmp
push
jecxz
clts
call
into
rcll
xor
push
mov
test
loop
ljmp
adc
sbb
leave
ret
test
cmpsb
stos
push
cmp
pop
inc
jmp
and
cwtl
or
dec
pop
xchg
add
xor
sub
jle
push
orl
push
xchg
mov
dec
jnp
jb
scas
jae
xlat
movsl
mov
clc
cmpsl
xchg
cmc
aam
jae
adc
xchg
leave
out
add
mov
into
daa
mov
adc
rol
rcrl
xor
dec
jnp
or
mov
jmp
lahf
aas
lret
xor
inc
inc
jmp
enter
jne
in
xchg
fnop
js
popl
pop
icebp
cmpsb
jecxz
test
out
mov
rcll
fmuls
dec
cs
adc
push
lods
inc
sbb
ljmp
clc
fs
jge
es
sbb
jmp
jmp
mov
add
xchg
inc
iret
test
and
push
movsl
sub
data16
cltd
pusha
adc
lods
jl
jns
aaa
dec
inc
aas
out
sbb
popf
rorb
cwtl
jae
aaa
mov
out
jle
addr16
ja
cmpsb
cmp
testb
push
add
aaa
movsl
lret
jmp
xchg
cs
push
xor
insb
arpl
jl
add
subl
inc
dec
jmp
fistl
xchg
xchg
cltd
jp
sbbl
outsb
scas
sbb
insl
mov
dec
in
lds
addr16
sub
pop
or
stos
push
ret
repz
mov
js
inc
dec
mov
es
cmpsl
mov
clc
vmovq
jbe
adc
jg
pop
cmp
enter
xchg
stc
sub
dec
test
sahf
mov
repz
xlat
sbb
inc
push
cltd
jno
cwtl
repz
jbe
mov
std
sub
mov
sbb
and
mov
sub
sbbl
dec
data16
or
ret
xchg
lcall
aaa
jae
and
in
out
pop
stos
in
jle
xchg
pop
mov
cs
inc
addr16
lds
jb
mov
inc
enter
fsts
push
mov
pop
cmp
test
idivb
in
ljmp
xor
cld
and
adc
mov
push
test
pop
aas
rorb
pop
lods
xlat
pop
mov
int3
lods
push
dec
scas
jbe
mov
in
sub
push
loope
push
push
inc
mov
in
pop
sbb
mov
add
push
dec
std
push
push
sub
sahf
js
rclb
mov
add
cwtl
iret
jl
add
xchg
pushf
loope
adc
pop
and
pop
add
mov
ret
mov
icebp
pusha
iret
push
dec
pop
iret
out
adc
pop
xor
and
xor
cmp
jbe
mov
and
sub
jae
sub
dec
push
ret
mov
dec
jbe
rclb
jae
imul
mov
xchg
ja
and
lods
jno
lock
pop
leave
xlat
int
inc
sub
sbb
xchg
jmp
sub
and
cmpsb
shlb
cld
in
repz
jo
sar
fsubs
pop
imul
mov
stc
mov
fdivrp
lods
mov
push
clc
out
mov
cltd
xchg
adcb
popf
test
cmp
jne
push
rcll
mov
out
pushl
mov
stc
sbb
in
insl
jo
hlt
in
pop
xor
dec
cmp
imul
push
dec
sub
icebp
sarb
iret
mov
xor
ds
and
add
aaa
test
out
xor
rcrb
jbe
xchg
cld
sub
stos
int
sub
and
loope
loop
cmc
jge
iret
out
insl
aam
fs
dec
stos
xchg
mov
out
adc
pop
mov
in
jns
inc
out
mov
fidivl
es
and
addr16
jecxz
dec
fcmovnb
ss
add
pop
int
iret
stos
fsubr
sahf
fst
xor
pusha
std
adc
or
in
pop
int
popa
cmp
xchg
mov
imul
rcll
add
sahf
xchg
aas
xchg
xorl
cld
or
and
cmc
movsb
fwait
cmpsb
sub
or
cwtl
lret
cmpsl
sub
into
xchg
call
jecxz
mov
cmp
nop
sbb
or
jp
in
ja
js
outsb
andb
sub
xchg
add
jne
pop
lret
aaa
pusha
adcl
dec
shll
movsb
jmp
mov
mov
add
out
je
sub
fadds
movsl
sbb
lret
add
jp
adc
push
add
dec
inc
pop
dec
scas
add
add
scas
cmp
dec
cmp
cli
incb
in
les
jbe
dec
inc
xchg
mov
jmp
js
enter
add
push
dec
xor
call
jns
fwait
movsl
iret
lock
movsl
aaa
scas
xchg
dec
or
negl
xor
gs
cmpsl
inc
xchg
cmp
leave
shrb
shll
into
pushf
jge
sbb
je
icebp
inc
or
insl
xor
stos
mov
rcl
ljmp
movsl
sti
xchg
adc
push
rorl
lods
sub
sbb
pop
dec
mov
mov
ds
loop
cmpsb
pop
add
dec
popa
and
or
int3
mov
iret
je
xchg
dec
inc
cmp
lods
add
xor
cmp
mov
mov
xchg
and
adc
aad
scas
push
adc
lods
pushf
xchg
xor
cmp
mov
loopne
push
cmp
lock
jl
icebp
push
pop
fimull
std
jmp
movsl
pop
inc
pushf
push
jne
iret
jp
cmp
jae
cmpsb
cltd
loope
jb
icebp
ja
mov
xor
ss
cs
and
aam
adc
iret
mov
cmp
les
lea
pusha
inc
js
xor
mov
in
insb
mov
push
dec
adcb
inc
iret
and
lcall
mov
jns
jge
jbe
out
jae
adc
test
sbb
or
jmp
scas
repnz
mov
pop
lods
jbe
ljmp
and
mov
xchg
roll
or
icebp
sbb
xor
sub
pusha
mov
dec
push
ret
mov
sbb
icebp
or
add
sub
jmp
sub
mov
pop
sbb
push
mov
test
cltd
into
into
sbb
and
jne
mov
jl
and
mov
es
sbbb
adc
sub
sub
dec
and
nop
test
fcompl
leave
movsl
stos
js
sarl
in
push
adc
xor
mov
mov
push
or
mov
sti
movsb
add
adc
cmpsl
sub
push
mov
daa
xchg
pop
sbb
mov
or
and
and
add
clc
ja
pop
pop
sub
int3
iret
scas
adc
xchg
rol
icebp
xlat
pop
andl
adc
gs
loope
popf
sbb
push
test
push
sub
lea
mov
jle
fbstp
jns
sbb
add
sahf
inc
in
or
push
cmp
mov
scas
cmp
jne
clc
insb
xor
mov
int
insl
lods
mov
je
mov
cmp
and
iret
lret
dec
add
lock
icebp
push
insl
aas
mov
test
adc
xchg
add
arpl
mov
inc
sbb
pop
inc
jb
cs
movsl
sbb
push
pushf
jecxz
adcl
call
push
js
mov
xlat
mov
adc
movb
int
cmc
jne
out
mov
mov
dec
mov
sub
mov
arpl
dec
add
inc
cli
mov
ljmp
xchg
lret
out
clc
jns
repnz
dec
fwait
push
xchg
mov
cltd
popa
lret
shl
jae
pop
mov
nop
or
imul
jne
icebp
in
push
pop
outsb
cld
mov
stc
xchg
lods
jg
lret
xchg
pop
cmp
adc
sti
jge
lret
add
mov
push
pusha
rorl
loop
sarl
repz
jecxz
rolb
test
mov
fwait
inc
rcrb
or
pop
sub
add
stos
xchg
sub
test
repz
movsb
idivl
test
into
and
out
not
pusha
sahf
xchg
jmp
dec
push
inc
push
test
int3
in
testb
rolb
cmpsl
jmp
push
lods
jbe
lret
and
xchg
or
imul
xchg
and
dec
xchg
mulb
js
lds
mov
pop
adc
sub
dec
mov
test
and
test
rcr
or
cwtl
jg
inc
stc
pop
cltd
es
popl
adc
call
or
or
xor
adc
sub
add
mov
fwait
fnstcw
sub
pushf
test
dec
pusha
movsb
dec
shlb
into
test
lret
dec
push
mov
js
dec
fucomi
or
sti
outsb
cwtl
shlb
and
dec
sub
sub
sbb
sahf
dec
shll
dec
pop
pop
les
les
xlat
iret
xorb
jg
ffreep
sub
jl
sbb
ds
call
add
sbb
es
loope
and
fistpll
testb
mov
imul
add
shl
cmp
pop
fdivrl
call
fistl
ja
outsb
repz
mov
push
jg
sbb
mov
jl
or
rclb
movsl
fwait
or
loope
add
ret
in
lcall
loop
mov
push
adc
adc
out
cld
cmc
out
jns
pop
pop
and
pop
imul
arpl
push
icebp
jno
sub
cmpsl
xlat
stos
ret
adc
insl
sbb
mov
fcomps
mov
mov
jae
into
mov
or
pop
andl
outsb
mov
adc
loope
jecxz
mov
sub
scas
cs
jo
addl
mov
int
and
movsb
xlat
daa
aas
inc
pop
sub
lods
jmp
fmulp
insb
out
pushf
stc
sub
xchg
fimull
pop
cmpsl
lds
or
mov
dec
sub
shrl
imul
into
negl
ds
sub
cmp
fldenv
jnp
jle
repz
inc
lret
iret
idivl
adcl
aam
fcmovnbe
adc
in
out
test
lods
scas
icebp
js
or
ds
pop
lds
xchg
bnd
cs
fistl
add
sub
movsb
mov
ja
cmp
jbe
inc
mov
push
dec
or
incl
out
in
add
jge
mov
fstl
mov
call
leave
adc
fiadds
pop
mov
mov
ja
imul
sahf
mov
idivb
jmp
push
sub
or
fildll
adc
std
mov
pop
pavgw
cmpsb
nop
xchg
loop
ficompl
adc
mov
pop
lcall
xchg
pop
stos
xchg
xchg
test
movsl
pop
loopne
adc
je
rclb
xchg
dec
ljmp
xchg
jbe
mov
int3
scas
push
pop
sahf
outsl
fcmove
mov
cmc
sub
inc
pop
sbb
push
push
aas
add
jg
in
test
sti
push
jbe
adc
loope
call
cmc
out
cmp
or
cmp
dec
jbe
aas
imul
les
rol
fldcw
mov
xlat
lret
and
jmp
xchg
mov
fldcw
mov
outsl
insl
out
xchg
cmp
andl
adc
adc
inc
inc
hlt
dec
jae
icebp
adc
dec
xchg
cmp
pop
scas
outsb
adc
jl
out
test
pop
ja
adc
xor
das
add
or
jg
cmp
sbb
lret
dec
cs
dec
int
push
out
jne
jne
aas
sarb
and
or
cli
or
push
into
push
andl
or
adc
add
jg
jo
jmp
sbb
sub
xchg
fnsave
decb
std
jecxz
les
sbb
or
ss
xchg
jne
ja
dec
loop
mov
fcoml
lcall
or
aam
mov
ja
inc
sarl
mov
iret
in
xchg
insl
out
mov
aad
lahf
dec
jne
or
xchg
mov
lods
and
aam
lds
and
mov
repnz
outsb
cmp
neg
jle
lret
shlb
jnp
adc
mov
cs
gs
pop
les
stos
pusha
cmc
inc
push
loope
adc
xchg
in
repnz
dec
pop
insb
test
fldt
cmc
cltd
ds
cmpsb
jno
mov
inc
dec
lock
loop
js
lcall
inc
push
adc
xor
fcom
cmp
push
push
dec
sub
shl
mov
stos
pop
in
pop
lret
rorb
xchg
xor
jbe
inc
ss
xchg
lret
sbb
pop
jmp
ds
mov
movsb
xchg
jb
fisubs
inc
xchg
jg
rcrl
js
into
bound
stc
pop
xor
cltd
jbe
xor
or
inc
out
push
cwtl
in
mov
lcall
xor
ret
cmp
xor
push
sbb
shld
xor
aaa
jg
push
clc
inc
call
adc
outsl
out
xor
ret
mov
stos
test
jbe
not
adc
out
xchg
out
adc
inc
loopne
arpl
lea
mov
fisttps
push
fsubl
dec
cmpsl
mov
mov
adc
pop
mov
insl
jb
out
leavew
cltd
nop
and
inc
fs
bound
data16
into
sbb
sbb
push
cmp
aaa
testb
data16
pop
out
pop
orb
cwtl
dec
ss
adc
inc
dec
aam
inc
sub
push
sarb
push
roll
add
movsl
xor
inc
rcrb
bound
test
dec
into
mov
jae
aaa
int
int3
call
notb
repz
loope
xchg
lret
xchg
xchg
push
pop
hlt
inc
pop
adc
push
push
push
jb
scas
sarl
mov
testb
and
shl
aaa
jmp
mov
jno
nop
hlt
sub
stc
dec
or
rorb
iret
loop
cmpsb
xor
add
mov
push
cmp
pop
mulb
and
mov
in
shll
cld
ret
pop
lock
sahf
dec
pop
jae
iret
data16
cmpsl
push
mull
mov
dec
inc
loope
xor
bnd
and
dec
add
push
and
sbb
jge
xchg
sub
jle
add
jne
js
call
enter
roll
add
push
adc
push
dec
stos
jp
xchg
cli
pushf
fildl
cli
xorb
inc
shlb
mov
push
add
mov
fs
test
sarb
push
sbb
mov
insb
push
ret
sub
sahf
xchg
jb
jo
or
dec
dec
into
cmpsb
sbb
xchg
dec
adc
clc
or
jl
out
popa
mov
outsl
cwtl
insb
push
jns
fcoml
jb
mov
mov
shlb
in
movsl
sbb
xchg
xor
into
add
clc
loope
dec
or
inc
scas
push
jns
loop
xor
dec
inc
dec
iret
sub
lods
inc
jo
es
imul
or
enter
push
mov
cmpl
and
dec
test
in
test
push
xor
jnp
dec
pop
into
push
jmp
ljmp
mov
cmp
aam
add
test
lret
rcl
movsb
jbe
call
lods
sarl
hlt
add
outsl
ret
cmp
mov
jmp
xor
jb
or
popa
je
mov
roll
subl
ror
cwtl
inc
fstps
nop
and
xchg
sarb
mov
cmp
mov
iret
sbb
jns
adc
dec
jne
xor
cld
push
test
push
out
xor
rcll
dec
hlt
aam
xor
or
mov
sarb
mov
std
push
mov
dec
fidivl
lret
cmp
dec
adc
adc
cwtl
test
test
into
xor
cmp
jl
testb
pop
dec
imul
xcrypt-cfb
cmpsl
popa
stos
imul
daa
push
shrb
mov
jbe
bound
and
inc
mov
mov
mov
lcall
dec
push
ljmp
and
test
sarb
ss
js
adc
in
int3
add
icebp
jge
push
sbb
dec
incl
mov
dec
or
xchg
mov
jecxz
mov
pop
adc
mov
outsl
clc
int
aad
data16
sarb
cmp
mov
repz
dec
xor
xchg
jl
jne
aaa
sahf
movsl
lock
aam
xor
adc
jo
xor
or
data16
call
into
out
jae
nop
sahf
cmp
enter
rcrl
fmuls
scas
jge
xchg
ficoml
int3
jne
and
mov
movsl
inc
je
loop
loope
sbb
ret
pop
or
std
jbe
into
sbb
cmp
sub
mov
dec
inc
fs
outsb
inc
leave
sbb
fadds
xchg
pop
inc
fmulp
xchg
add
xor
arpl
lahf
fisubrl
scas
bound
sub
sahf
enter
sub
jae
cmc
cmp
out
out
sti
aaa
clc
push
fstps
fcmovne
jp
xchg
jl
and
pop
pop
das
xchg
xchg
cltd
repz
jmp
into
push
aas
jnp
mov
leave
rorl
nop
inc
enter
sbb
or
pop
dec
jbe
lret
and
in
pop
mov
xchg
and
sbb
xchg
into
or
or
fsubrs
and
ja
out
push
test
gs
xor
xor
test
dec
inc
fnstcw
sbb
rep
mov
mov
out
jb
adc
cmp
mov
mov
xchg
dec
jmp
jae
push
xchg
pop
bound
or
push
mov
mov
cmpsb
jnp
and
shrl
mov
push
std
or
mov
dec
sti
mov
stos
mov
cli
dec
xchg
cmp
ja
xchg
test
popa
lea
mov
xchg
in
mov
xchg
add
sbb
or
xor
sbb
or
push
int3
jmp
in
lcall
jmp
pop
mov
xor
adcl
xchg
mov
add
imul
xchg
in
fisttpll
jg
movsl
ljmp
stos
pop
cmc
dec
addr16
sub
out
outsb
aam
mov
mov
fwait
sbb
lret
cmp
jl
sub
and
shll
lcall
xlat
cmp
test
xor
push
lcall
jno
cmp
ljmp
xor
and
or
mov
out
daa
xchg
push
cmp
popf
pop
push
mov
je
ljmp
addl
pop
into
xchg
inc
or
cmpb
in
push
jns
out
dec
fidivs
and
xchg
adc
movsl
sub
negb
out
std
shrl
add
or
and
in
movsb
and
xchg
or
das
fs
or
jl
xchg
sub
lods
das
xchg
pop
jns
jne
sub
cltd
imull
dec
ret
imul
jnp
into
cmpl
push
mov
cmp
inc
adc
push
test
ja
and
mov
out
scas
pop
sbb
pop
jle
mov
mov
add
negl
out
push
cmpsb
add
mov
aas
sbb
push
add
movsl
sbb
cmpsl
mov
into
dec
rcll
shrb
lret
fstps
sbb
leave
mov
es
jnp
imul
out
push
cld
xchg
pop
lods
dec
fsubrs
aaa
or
mov
std
and
lret
int
lods
mov
lods
cli
adc
sbb
dec
cs
dec
sbb
add
pop
int3
je
hlt
in
mov
lods
iret
aaa
pop
add
cmp
rcl
cmp
inc
cwtl
movsb
test
popf
ret
cmp
and
cmovae
inc
scas
mov
add
xchg
cmp
xor
add
adc
fs
movsb
pop
push
xchg
call
dec
inc
xchg
outsb
mov
iret
mov
sbb
jge
xchg
decb
pop
test
cmp
popa
mov
lahf
lret
leave
or
sbb
cli
sub
pop
dec
jnp
cmp
pop
fld
shll
je
push
pop
fcoms
sti
outsl
xchg
not
push
into
push
imul
cs
xchg
adc
jbe
out
push
ret
test
into
push
lock
into
stos
mov
mov
insb
jno
fs
push
sbbl
sub
movsl
cmp
jg
adc
dec
pushf
pop
xchg
inc
add
mov
into
xlat
inc
imul
mov
scas
inc
inc
jo
dec
push
fadds
sbb
in
into
outsb
arpl
push
push
sarl
out
int
push
push
out
dec
sbb
mov
cltd
es
bound
jno
cld
loopne
cmc
test
lret
sahf
jg
int
pop
inc
jbe
push
add
lret
xor
xchg
push
jae
cmp
add
mov
mov
inc
iret
adc
inc
mov
std
sub
mov
jle
popa
ret
pop
push
cltd
leave
scas
lds
sub
in
popa
xor
dec
cmpl
je
mov
imul
popf
inc
mulb
test
push
popa
pop
xor
inc
arpl
cli
adc
inc
adc
dec
out
scas
add
inc
pop
dec
lods
out
lret
stc
dec
add
scas
lret
popf
hlt
push
push
mov
lods
shl
jb
jbe
or
pop
jg
inc
or
mov
dec
ret
enter
mov
cs
outsl
mov
lea
scas
mov
sub
xchg
ret
dec
xor
subb
lret
loopne
shrb
iret
int
xchg
je
scas
and
lcall
data16
popf
mov
and
repnz
or
call
pop
cli
ljmp
int3
jbe
push
cmpsl
fwait
std
out
jmp
leave
or
pop
test
adc
in
movsb
push
mov
push
adc
stos
outsl
adc
ds
clc
fstl
int
out
enter
mov
shrb
movsl
cmp
xchg
cmc
add
adc
clc
out
jecxz
and
jno
push
pusha
xchg
sbb
jnp
fst
data16
fbstp
dec
push
or
lods
ret
jl
into
mov
xorb
data16
xor
dec
loope
mov
mov
stos
cs
add
fs
sub
pop
push
mov
rorl
cwtl
fsubl
adc
pop
push
jmp
fs
mov
rcl
das
out
fdivrl
mov
sub
mov
aam
inc
es
in
imul
lret
mov
pop
jl
push
or
lcall
inc
cmp
fnstcw
pop
addr16
inc
shrb
ret
test
cmp
mov
sub
in
pop
push
sbb
inc
xchg
mov
iret
mov
dec
pop
and
fdivs
pop
sub
fisttpl
sub
ljmp
mov
push
jae
cmp
rcl
mov
or
cld
sbb
gs
js
dec
sbb
xchg
sbb
and
sub
test
xor
jle
stos
push
js
sbb
add
cmpsb
popa
pop
dec
dec
mov
test
stos
aas
insb
cmp
jnp
aad
inc
fwait
adc
or
fbld
dec
or
test
imul
movsl
xor
xchg
push
addr16
jne
repnz
adc
inc
dec
aam
incl
into
lret
sub
int3
lock
or
mov
mov
loope
fdivs
xor
rorl
inc
sub
hlt
mov
gs
int
push
push
xor
and
jnp,pn
pop
and
mov
fdivs
hlt
cs
or
push
add
inc
cmpsb
aaa
xlat
js
jge
xorl
push
inc
outsb
movb
les
sub
in
lods
mov
lret
loop
pop
inc
mov
and
or
dec
mov
adc
sbb
mov
xor
sbb
or
push
ds
ret
push
mov
not
and
sub
loopne
jo
cmp
stos
dec
mov
xchg
fisubl
call
push
out
cmp
aam
xor
aad
xor
nop
push
mov
mov
sub
icebp
mov
int
pop
xor
dec
mov
ljmp
or
mov
in
aam
dec
movsl
mov
mov
mov
gs
cmpsl
lods
fdivp
jg
inc
inc
insl
aam
and
iret
pop
xchg
jb
sti
jnp
dec
mov
out
fwait
shl
ret
ljmp
into
mov
hlt
cmp
xorl
aam
ljmp
scas
push
int3
gs
mov
test
and
cmp
dec
push
or
mov
and
add
mov
and
shl
jecxz
mov
inc
mov
cmp
jae
dec
repz
and
mov
mov
ds
movsl
test
dec
les
xchg
cs
xor
sarl
sbb
cmp
mov
pop
jne
xchg
mov
xchg
es
pop
mov
movsb
fisubrl
adc
stc
sub
jns
mov
arpl
mov
xchg
lcall
jecxz
mov
mov
ljmp
mov
cmp
xor
dec
jmp
push
jne
mov
ds
out
mov
xchg
jae
leave
cmp
mov
sbb
jle
inc
das
pop
and
add
pop
adc
jmp
dec
inc
sub
pop
int3
test
adc
lcall
xchg
xchg
adc
mov
jbe
mov
xlat
ret
rcrb
jmp
fwait
or
js
out
daa
fcomp
popf
cld
pop
negb
mov
shl
add
lcall
insb
rcrb
adc
mov
add
mov
aam
push
jbe
subb
sbb
xchg
fsts
repz
push
ret
jmp
push
jno
cmp
jp
xchg
pop
xchg
add
inc
mov
fidivs
dec
jbe
mov
pop
ja
pop
shl
pop
mov
inc
sbb
push
fstps
mov
mov
aad
ss
shlb
jle
das
out
or
xchg
push
adcb
stos
or
lret
xchg
dec
sbbl
xor
cmp
lcall
or
dec
shlb
lods
lds
pop
rcll
clc
insb
arpl
dec
xchg
mov
repz
lock
inc
mov
push
scas
out
in
mov
js
jmp
rcl
or
pop
jbe
cmpl
out
push
outsl
lds
leave
push
notl
clc
push
mov
ljmp
scas
into
mov
mov
cmp
and
adc
imulb
cmp
add
xor
jns
push
dec
mov
or
lcall
lods
clc
push
push
mov
jae
stos
push
test
cli
dec
out
bound
insb
mov
jmp
ud2
aaa
and
sahf
loope
push
mov
dec
movsb
jecxz
push
clc
ja
nop
into
sub
ret
add
aam
je
dec
push
and
cmc
iret
mov
lcall
jb
jmp
cmpb
loopne
jne
ss
mov
lret
mov
mov
cs
addr16
pop
sbb
jo
adc
push
mov
cmpsl
addr16
cmp
dec
imul
test
aad
stos
push
lcall
leave
push
sub
ds
xchg
cmp
rorb
adc
sub
int3
test
imul
popa
sbb
call
adc
xlat
xchg
scas
jle
int3
hlt
push
push
pop
gs
cld
sub
push
popa
cli
stos
sahf
xchg
xor
into
mov
xchg
shlb
xchg
cmp
xor
aam
xchg
push
pop
inc
xchg
cld
int3
sbb
sbb
push
or
push
or
test
pusha
repnz
mov
orl
stos
adc
pop
idivl
dec
jnp
sub
jb
jle
xor
fwait
and
cltd
loope
das
idivb
mov
sub
xor
jne
push
movsl
mov
test
dec
cmpsb
cs
in
std
lahf
lods
repnz
push
mov
cmpsl
and
pop
jmp
jg
inc
popf
mov
int3
inc
pop
in
cmpsl
les
xor
icebp
and
out
mov
add
inc
clc
push
mov
sti
or
pop
adc
xor
xchg
push
mulb
test
ljmp
pop
dec
sahf
sub
or
push
cmp
call
push
imul
mov
jge
xchg
mov
cwtl
ljmp
enter
push
sahf
aas
jo
lret
jg
int
cmp
inc
movsl
fwait
movb
dec
add
jne
inc
jg
stos
sub
and
into
jo
loop
cmp
ljmpw
scas
sbb
fldl
aam
adc
mov
daa
ret
outsb
ljmp
cmp
push
fidivl
int3
jle
sub
sahf
cld
inc
cs
es
stos
xchg
dec
xorb
inc
dec
dec
and
cwtl
adc
addr16
data16
iret
xchg
cmp
inc
into
into
jb
push
stc
jbe
and
pop
pop
pop
and
cmp
cmp
iret
add
add
repz
xchg
daa
out
or
or
lods
xchg
out
rcrl
iret
push
cmp
xor
or
in
pop
inc
call
pushf
popl
jge
js
mov
test
mov
sbb
mov
inc
imul
inc
xchg
idivb
add
lods
ljmp
dec
dec
jbe
ret
adc
pop
jge
std
lea
xor
fldz
xchg
outsb
and
cmp
cmpsb
mov
roll
je
add
movsl
mov
les
cli
mov
jp
inc
cmpsl
arpl
xor
jae
cli
and
xor
lds
pop
cmp
ds
xor
and
add
mov
repnz
mov
dec
pop
add
adc
push
xchg
out
ret
xor
and
jmp
call
pop
sub
jb
inc
subl
rclb
adc
in
shrb
jns
fprem
sbb
adc
movsb
fs
fdivs
dec
jo
scas
ja
das
xchg
mov
int
inc
jb
mov
xor
jle
xchg
jns
mov
add
out
xacquire
mov
fcoms
mov
testb
ficoms
jno
aaa
pushf
mov
jbe
lods
mov
stc
fs
jl
fdivrl
mov
int3
jae
imul
cmp
dec
xchg
adc
xor
dec
xor
dec
fisttps
add
jb
ja
mov
ficoml
rcrb
fildl
pop
xchg
fs
lahf
push
imul
pushf
ds
nop
outsb
or
mov
movsl
inc
into
aad
lret
lret
cmp
sbb
mov
xor
out
add
lcall
pop
bound
test
inc
leave
mov
outsl
jp
rsm
adc
frstor
jo
ss
inc
mov
xor
mov
sbb
into
xchg
stos
xor
insl
leave
or
test
push
lcall
ss
iret
ljmp
popa
test
mov
mov
pop
xchg
cltd
out
cmp
fmul
rcrb
setb
adc
cltd
in
js
in
push
inc
clc
into
mov
cmpsl
rcll
call
mov
ljmp
push
movsl
iret
pop
imul
jp
mov
das
xchg
scas
jbe
mov
into
lret
testl
aam
mov
jl
into
mov
out
mov
sbb
nop
test
add
subl
adc
out
sub
cld
adc
fdivl
sub
adcb
and
cmp
sub
pop
repz
cli
pushf
lods
lret
inc
push
mov
je
xchg
xchg
into
outsb
insl
push
cmp
popa
cmpsb
or
bound
es
pop
ret
xor
push
mov
out
push
mov
stc
mov
dec
dec
dec
leave
add
push
xlat
enter
out
sbb
mov
and
pop
jb
pop
lock
dec
inc
mov
sub
pop
jecxz
mov
mov
inc
clc
push
and
and
jp
notb
stos
aas
lret
mov
xchg
sahf
imul
orl
sub
mov
and
add
arpl
into
push
sub
gs
mov
les
add
dec
push
ds
test
xchg
xchg
jns
gs
sub
dec
dec
push
in
dec
xchg
mov
lret
mov
lods
xchg
test
lods
xchg
pop
mov
repz
xor
stc
or
ja
into
imul
dec
les
pop
mov
lock
pop
lods
adc
push
into
lds
jno
sahf
fdivp
repz
loopne
push
sub
mov
js
xchg
das
ret
shl
sub
dec
mov
mov
or
xchg
loopne
pop
adc
sub
les
shl
imul
cmpsl
xchg
jnp
xor
jge
ror
scas
pushf
xchg
dec
in
in
pop
cmpsb
push
xor
scas
lret
or
adc
xor
idiv
in
insl
cmpsb
dec
shll
icebp
xor
inc
into
into
sbb
pop
popf
data16
lds
lret
sub
int3
pop
roll
lock
leave
and
je
sub
jae
dec
fisubl
sub
mov
mov
jne
pop
or
movl
or
mov
xchg
lret
push
and
out
aaa
inc
adc
rcll
jne
add
add
aad
jne
cwtl
mov
les
outsb
mov
jns
aam
call
sub
mov
fst
insl
js
or
mov
lcall
jo
add
pop
sbb
inc
les
pop
jno
stc
or
je
cmpb
gs
push
xchg
inc
shll
test
insl
repz
cmp
adc
lret
or
mov
scas
jno
xor
das
jae
mov
ja
loop
aam
push
add
stc
and
flds
pop
cmp
jge
in
dec
xchg
mov
jbe
in
lods
lret
or
xchg
aas
cmpsl
or
sbb
mov
sub
pop
push
mov
movl
pop
cli
movb
dec
mov
pop
push
cmp
pop
xchg
aad
out
mov
out
shll
push
sbb
aad
xchg
jne
into
in
inc
cmp
adc
mov
mov
sbb
adc
in
and
dec
cmpsl
mov
mov
push
lret
mov
stos
sbb
icebp
xor
in
cmp
mov
dec
sbb
mov
mov
mov
jge
insb
xor
leave
inc
shlb
movsl
mov
ja
push
and
call
dec
add
cmpsl
imull
test
sti
jb
mov
push
loop
dec
sbb
fucom
mov
icebp
addb
gs
push
aas
mov
arpl
ss
lock
rolb
imul
jne
jae
mov
cld
dec
mov
jnp
hlt
xor
xlat
add
push
iret
or
lock
out
int3
push
pop
adc
test
xchg
shll
into
jb
hlt
ljmp
lret
lret
mov
aas
adc
std
scas
stos
mull
cmp
sub
sbb
mov
mov
int3
mov
mov
into
pop
xchg
pop
mov
cmpsl
mov
mov
add
push
sbb
pop
shlb
ljmp
in
xchg
xchg
pop
lahf
fisubrs
rorb
xor
pusha
add
paddq
add
xchg
fmuls
mov
xchg
imulb
repnz
xchg
int3
mov
imul
xor
cmp
xchg
mov
jbe
into
dec
or
push
int3
das
in
aas
and
adc
jle
shl
sub
xor
sbb
sbb
sub
inc
mov
and
sti
daa
icebp
mov
outsl
xor
jno
ror
inc
xorl
jnp
test
mov
imul
mov
mov
xor
fisubrl
or
mov
test
pop
cmc
inc
test
call
push
pop
pop
nop
cltd
test
rcl
xchg
loope
push
xchg
daa
insl
lods
outsb
fsubr
push
jle
and
repnz
dec
fsubr
test
jg
cmpsl
test
arpl
inc
movsl
mov
lock
out
rcll
cmpl
pushl
hlt
fcomps
or
pop
mov
jmp
outsl
roll
add
mov
scas
fdivrl
dec
lcall
push
fs
gs
and
inc
inc
mov
add
xor
inc
int3
push
outsb
push
sub
jne
cmp
leave
adc
stos
push
sub
aad
pop
xlat
sarb
mov
add
jp
xor
pop
lret
loopne
imul
jl
mov
stos
out
jns
in
xor
mov
jmp
mov
mov
enter
int
les
push
scas
and
xchg
push
add
jmp
movsb
and
stos
cmc
dec
aas
test
or
aad
cs
arpl
scas
or
mov
push
xchg
lret
out
aad
imul
out
aad
cmp
and
or
jno
xor
adc
pop
jecxz,pn
xchg
jbe
pop
dec
shl
mov
sub
outsb
mov
xor
add
jns
insb
ficoml
repnz
jb
int
nop
test
lock
stc
pop
pop
test
ficoml
push
xor
push
test
gs
aaa
fstps
cmc
mov
jae
mov
int
rorl
adc
add
mov
pop
and
jge
or
sahf
out
int
push
js
cmp
push
divb
pop
or
jbe
lret
sub
lret
dec
xchg
pop
jne
add
insb
or
nop
call
lret
lret
aaa
js
mov
mov
mov
mov
xchg
jle
xchg
or
ret
pop
pop
out
and
push
fistpl
add
into
pop
mov
mov
fucomp
imul
in
mov
or
xor
sbb
dec
stos
jns
das
shl
test
popf
pop
xor
pop
jbe
mov
add
dec
add
ja
into
loop
pop
out
and
or
bound
aam
mov
fwait
mov
xchg
aaa
nop
rcrb
sahf
cmp
loopne
leave
in
into
call
jp
scas
and
into
test
jno
mov
jg
dec
fidivl
dec
cld
sbb
inc
xchg
test
and
dec
pushl
pusha
sarb
stos
out
mov
mov
mov
xchg
adc
sub
pop
out
mov
or
mov
xchg
mul
shrl
push
lret
mov
pmuludq
mov
mov
or
test
cmpb
into
scas
insb
jnp
adc
mov
xchg
mov
mov
sub
cmpb
xor
push
out
mov
jmp
cmp
int
inc
mov
lods
sbb
scas
scas
iret
xlat
mov
lahf
loopne
lret
push
mov
fistps
call
mov
add
arpl
mov
outsl
mov
pop
outsb
stos
lock
mov
call
aad
repnz
fst
jmp
push
adc
enter
clc
xchg
xor
aad
jg
fwait
int
inc
pop
mov
jmp
sub
mov
incl
jnp
arpl
jmp
push
ja
and
jbe
xchg
cmp
mov
or
aam
lret
lret
pop
shll
push
js
inc
jp
out
pop
xor
mov
jbe
mov
lret
mov
aam
test
lods
push
mov
out
adc
loopne
pop
xor
sti
jnp
fwait
inc
push
fisttpl
jl
sbb
aad
jnp
lret
cltd
or
data16
mov
jle
xor
pusha
iret
pushf
xchg
adcl
push
xor
mov
and
sbb
inc
sub
add
fwait
ror
inc
xor
jbe
outsl
inc
fmull
js
cmp
in
inc
enter
jmp
scas
mov
pop
and
sarl
out
cmp
lcall
mov
cs
jle
sbb
std
sbb
mov
sbb
sbbb
mov
clc
and
mov
inc
jns
shlb
ss
fmulp
sub
orl
inc
xor
cmc
jo
and
in
sub
mov
push
fcmovb
daa
std
xor
outsb
test
jne
jae
cmc
cli
add
mov
jge
cwtl
and
xor
sub
aam
orb
pop
rol
aaa
or
adc
push
mov
ret
xor
pop
out
or
stos
dec
test
push
xchg
fs
ror
inc
lds
gs
and
cmc
int
inc
push
inc
stc
xor
pop
sbb
stos
jb
test
sar
push
lods
push
pop
and
jnp
xchg
mov
and
clc
cli
pop
inc
mov
inc
cmp
xor
in
insl
mov
mov
scas
stos
call
icebp
sahf
xchg
mov
mov
mov
lret
jp
repz
repnz
xor
cmpsl
in
aaa
pusha
scas
out
sbb
jl
enter
cld
ljmp
test
rcrb
das
push
xchg
jae
fwait
jo
int3
pop
dec
adc
push
xor
jno
jge
add
in
test
loopne
sub
cmp
addr16
or
fld
jns
and
add
and
push
loopne
mov
or
imul
push
xchg
fidivrs
push
inc
pushf
mov
xchg
inc
sbb
pop
jecxz
rclb
std
or
push
xchg
push
mov
dec
mov
mov
cmp
ds
es
xor
test
lahf
test
pop
mov
pop
push
outsb
jnp
mov
js
aad
arpl
in
aaa
xor
mov
lods
movsl
js
mov
mov
dec
std
ljmp
adc
out
cli
pop
add
clc
dec
adc
xchg
cs
fidivl
test
inc
icebp
jbe
aas
inc
into
add
es
daa
or
xchg
gs
mov
andl
popf
je
enter
mov
scas
adcl
call
in
jle
xor
push
sub
out
inc
in
mov
lock
adc
pushf
xchg
pop
sub
nop
rcll
adc
not
sbb
lock
adc
test
dec
enter
aam
lcall
test
sbb
pop
std
imul
test
jp
imul
dec
sbb
add
les
cld
xchg
xor
add
shrb
fwait
jne
repz
ja
lods
mov
pop
push
sbb
filds
pop
mov
mov
aaa
daa
mov
xor
aam
test
cmp
sarl
pop
jb
sbb
dec
cmp
mov
inc
mov
stc
loopne
imul
shlb
in
ss
sub
dec
test
lret
repz
lds
inc
cmpsb
adc
orl
fiaddl
inc
daa
mov
out
das
add
sub
pushf
jo
inc
repz
lods
into
movsl
dec
xchg
cwtl
xor
cld
enter
mov
rcl
cmpl
inc
sub
inc
mov
xor
sub
sub
sbb
jnp
jno
repnz
loopne
cld
iret
mov
daa
xor
pusha
sub
inc
insl
sub
pop
inc
or
iret
test
ret
testb
mov
adc
xchg
mov
fsubs
mov
or
fs
fwait
or
mov
pop
xchg
clc
mov
test
xchg
into
arpl
mov
insb
mov
mov
xchg
mov
add
mov
xchg
shll
mov
lea
jge
mov
jle
into
sbb
sbb
dec
dec
test
aam
push
lods
dec
inc
mov
push
pop
stos
dec
cmp
insb
pop
mov
jae
xor
push
mov
dec
mov
cmpsb
aam
jns
into
pop
lods
mov
dec
ds
gs
jl
leave
or
lret
and
or
xlat
mov
inc
mov
xchg
push
int
ja
fs
pop
mov
out
lahf
mov
aad
ds
lds
movsb
mov
repz
pop
pop
aam
add
mov
lods
stos
or
mov
adc
xor
pop
js
mov
jo
mull
sub
aaa
scas
pop
inc
pop
je
dec
in
loop
xchg
fisubl
loopne
mov
mov
cmp
mov
out
xchg
inc
into
stos
leave
sub
dec
rcl
out
lock
fistpll
jb
lods
pop
pusha
test
inc
loope
xchg
or
lret
add
shrb
das
mov
sti
aas
je
sub
daa
pop
push
gs
loop
push
xchg
enter
aam
mov
dec
pop
into
insb
fdivr
mov
mov
adc
inc
stos
mov
aaa
fistl
jl
cltd
xchg
lock
dec
jecxz
gs
and
xor
or
mov
push
mov
fidivs
lcall
dec
xchg
lret
inc
mov
cltd
into
or
mov
cli
sub
and
hlt
ret
roll
negl
ret
inc
dec
sahf
sbb
rolb
nop
jne
jge
roll
movsl
or
or
add
icebp
jecxz
inc
mov
ret
add
and
lret
xor
test
jg
icebp
shlb
dec
pop
and
adc
int3
js
in
ret
in
or
mov
xor
pushfw
ret
stc
cmp
test
pop
push
jp
or
inc
xlat
mov
pop
incl
into
push
adc
push
test
in
movsl
imul
sub
js
and
xchg
lods
mov
ja
idivb
stc
mov
or
int3
add
in
cmp
movsl
sbb
scas
mov
aas
sahf
das
pop
in
cmpsb
adc
lea
adc
pop
es
addb
or
pop
mov
push
fstpt
repz
mov
fnstenv
in
xor
in
ret
xor
orl
loope
stc
and
or
loop
addr16
mov
and
mov
fsts
push
call
daa
cmp
int
adc
fs
lret
je
jbe
es
rcl
out
ds
or
ja
dec
inc
rcrl
fcom
and
sbb
mov
jmp
jl
movb
aad
inc
and
and
or
cld
sahf
mov
inc
push
out
sbb
xchg
cs
aas
sbb
sub
xchg
jl
outsb
cmpl
sti
push
call
xor
xchg
loopne
je
mov
dec
lods
sarl
leave
push
mov
lods
cltd
mov
call
imul
dec
sbb
xor
stos
adc
add
inc
imul
fst
mov
ja
stos
sub
sub
dec
xchg
mov
shrl
aad
cmpsl
lret
jns
sub
jb
sti
vmovq
scas
nop
lods
or
pusha
rcll
mov
inc
xor
xor
pop
adc
and
dec
mov
gs
mov
sahf
or
cmp
pop
or
cmpsl
jne
jp
or
push
cmc
cmp
adc
mov
hlt
xchg
xchg
and
inc
fisubl
xchg
mov
jbe
pop
dec
popa
arpl
sub
es
mov
fdivs
and
imul
adc
int3
sub
pop
outsl
xchg
stos
adc
btr
in
inc
das
aaa
fdiv
mov
jmp
mov
test
fcmovb
outsb
pop
dec
inc
in
sbb
aad
cmc
leave
mov
push
xchg
dec
mov
and
and
mov
push
pusha
mov
adcb
sub
lds
out
add
inc
clc
sub
sbb
in
mov
rol
andb
inc
loopne
and
popa
js
std
jecxz
add
xchg
cwtl
sbb
les
aam
adcl
mov
xor
dec
mov
or
and
js
mov
std
outsb
repz
cmp
push
pop
jne
jae
lcall
or
mov
jmp
outsl
inc
sub
push
arpl
cltd
or
lret
add
jo
mov
outsl
cmp
sbb
out
cli
inc
mov
lret
mov
and
cmpsl
insl
aaa
jno
lock
jmp
adc
pop
outsl
push
mul
lcall
inc
mov
arpl
fmull
cli
pusha
ss
std
xchg
dec
roll
outsb
push
sbb
addr16
push
rol
into
les
fs
mov
pop
or
dec
rcrl
jbe
test
ljmp
jno
scas
pop
lods
daa
call
cmc
add
mov
and
push
adc
lea
arpl
cwtl
adc
dec
sar
es
mov
fwait
aam
cmp
xchg
xor
stc
lret
imul
push
adc
repnz
cmc
mov
jmp
pusha
add
out
faddl
adc
call
scas
sub
jbe
rorb
call
sub
inc
push
adc
test
mov
ja
dec
cwtl
adc
mov
pop
outsl
jp
stos
lahf
negl
imul
int3
mov
xor
jl
incl
mov
popf
jecxz
jno
mov
aaa
out
pop
and
or
sub
fidivrl
mov
popf
int
push
jecxz
sub
test
andl
sbb
mov
pop
jmp
mov
das
mov
sbb
jno
xlat
inc
js
push
mov
rcrl
loop
fs
jecxz
pop
arpl
pop
mov
jne
lret
mov
sub
data16
inc
rcrb
pop
sub
testb
test
cmpsl
adc
or
adc
add
pop
xchg
stos
mov
jg
mov
into
xchg
lock
add
cmc
mov
and
cld
movsb
add
dec
mov
in
lock
jbe
dec
xchg
fadds
mov
sub
jne
lcall
test
mov
leave
mov
xor
out
jecxz
gs
int3
int3
addr16
jns
mov
mov
mov
push
pop
cltd
or
stos
mov
inc
push
push
ljmp
jb
into
mov
or
cs
jp
sbb
and
daa
imul
jne
add
outsl
and
pop
into
pop
pop
test
out
inc
adc
clc
dec
ss
push
xchg
mov
insb
shlb
adc
jmp
or
loop
scas
bound
sbb
push
push
or
into
in
or
imul
xor
outsl
popa
xchg
xchg
mov
mov
in
fwait
xor
dec
and
inc
mov
loop
mov
mov
or
jg
scas
and
fdiv
cmp
push
mov
push
rolb
ja
data16
in
push
mov
pop
shll
aad
adc
dec
adc
enter
lods
sub
repz
sbb
clc
pop
sti
add
jmp
sbb
jmp
into
int3
les
fldl
nop
mov
pop
lret
sub
lahf
leave
inc
xlat
pop
push
sbb
add
icebp
stos
out
mov
add
xchg
int3
add
negb
inc
inc
loopne
pop
and
adc
or
fcom
cmc
push
and
repnz
lcall
cmp
dec
xchg
sbb
js
ret
ja
mov
add
sub
jmp
mov
dec
rcl
rolb
test
into
or
jmp
pop
hlt
and
push
xchg
dec
test
pop
push
mov
cmc
rcl
push
cs
and
or
loopne
daa
std
adc
in
bound
cli
sub
push
into
cmp
add
les
jno
inc
adc
stos
icebp
pop
pop
pop
mov
push
test
xchg
xchg
das
push
fadds
xlat
test
js
cmp
std
cmpsl
aad
add
mov
dec
mov
dec
call
int
mov
jbe
lds
push
push
jno
mov
and
mov
rcl
adc
push
mov
js
sbb
popa
into
cmp
addr16
hlt
and
jo
mov
out
cmp
mov
leave
dec
xor
push
int
lret
aad
cmp
into
rcrb
mov
outsb
push
jnp
inc
and
jg
sub
add
sbb
addr16
out
fwait
cmpsl
push
mov
lahf
mov
mov
cmpsl
or
jo
repz
movb
mov
mov
loopne
jmp
pop
or
scas
mov
je
stc
mov
loopne
and
pop
lret
adc
jl
sbb
out
mov
roll
roll
push
pop
movsb
frstor
enter
stc
jne
mov
lret
jnp
add
jg
mov
mov
push
mov
iret
jnp
sbb
cmc
cmpsl
and
add
cmp
lds
imul
js
mov
dec
inc
sub
dec
jecxz
movb
leave
mov
mov
es
cmp
mov
cltd
adc
xchg
in
mov
inc
fwait
dec
in
inc
fcmove
add
mov
test
adc
mov
pop
xor
jne
mov
jle
lret
addr16
nop
jb
push
out
mov
pop
mov
das
push
pop
mov
addr16
notb
cmc
ret
out
push
ja
jns
aam
xchg
pop
sub
mov
inc
insb
sub
jnp
in
lcall
int3
ss
xchg
xor
sub
js
sbb
out
xlat
stc
and
jbe
or
jl
cltd
clc
fsubrl
movsl
cmpsb
sbb
sub
dec
aam
mul
push
jle
repnz
xlat
gs
popa
lds
test
dec
jne
and
out
mov
xchg
fdivs
ljmp
add
adc
and
ss
stos
mov
insl
incl
hlt
cmp
adc
pop
push
fidivl
dec
cmpsl
pop
les
mov
cli
sbb
insb
xchg
jns
nop
in
push
pop
dec
or
clc
mov
cmp
mov
pushf
jnp
cmp
dec
push
mov
lea
repz
inc
lahf
jp
mov
aaa
inc
and
or
and
and
jecxz
pop
mov
call
out
or
mov
out
test
enter
insl
into
mov
push
arpl
mov
or
stos
dec
inc
or
loop
inc
xchg
fldcw
jmp
jne
cwtl
jb
fiaddl
cltd
sahf
mov
and
das
fdivp
add
rorl
addb
movsl
lret
push
cld
mov
and
cmc
loope
into
adc
or
pusha
jo
sub
or
mov
arpl
shlb
push
shll
jbe
mov
repz
shlb
mov
sbb
call
imul
jb
xchg
xchg
sub
cmc
jbe
dec
loop
ds
jle
push
push
aad
sbb
bound
sbb
sar
inc
lcall
push
push
push
cwtl
jns
mov
jb
xor
cltd
and
xor
jp
aam
push
ja
pop
cld
cmp
xchg
and
mov
mov
scas
cmp
mov
outsb
add
fs
das
data16
loopne
leave
fsubrs
inc
rep
imul
pop
push
xchg
dec
stos
lock
loopne
pusha
mov
ret
cmp
fidivs
mov
lods
clc
iret
sahf
arpl
xchg
mov
push
lods
lret
icebp
jne
stos
lea
mov
int
cmp
test
cmp
jae
jne
fsts
cmc
jle
inc
and
ret
fst
lret
xchg
test
jg
loop
inc
xchg
push
dec
mov
push
cmp
pop
pop
pop
dec
mov
pop
push
jecxz
mov
int3
and
fisttpl
sub
iret
ja
fnstenv
mov
aaa
setb
sub
pop
es
mov
std
mov
into
add
cmp
adc
xchg
add
dec
sbb
mov
idivb
jo
out
push
xchg
adcb
test
dec
fisubrs
pop
xrelease
jle
sub
mov
jg
ljmp
cwtl
sti
lahf
sub
fidivl
inc
stos
sub
xchg
and
or
lret
or
je
push
xor
iret
fs
mov
add
cmp
sbb
push
loop
je
aad
leave
inc
in
mov
or
addr16
int3
imul
cmp
rcrl
mov
int3
adc
fcom
into
add
cmp
cmp
jb
sti
push
and
jno
push
clc
inc
pop
int3
inc
les
shrl
add
scas
loop
jnp
fwait
sub
sbb
mov
sbbl
dec
js
rcr
sub
clc
arpl
dec
lcall
adc
loop
subl
mov
loopne
in
js
roll
test
xchg
xor
mov
imul
add
jp
ret
ljmp
cwtl
and
fs
dec
ss
mov
and
mov
xchg
shl
cli
xor
in
add
sub
push
inc
aam
ret
sub
cmp
mov
mov
stc
test
movsl
sub
int
popa
pop
push
xchg
cltd
push
aas
call
jne
pop
sub
xor
jge
mov
loope
mov
sub
and
cmpl
out
cltd
icebp
test
std
adc
mov
push
jne
pop
cmp
fistl
xchg
jg
es
fwait
xchg
and
fcomps
enter
jmp
loop
push
jp
adc
into
repnz
jbe
rolb
imul
sub
ficoms
jl
arpl
jbe
add
js
test
xchg
xorl
xor
sub
dec
lret
in
add
jb
lds
icebp
xor
inc
ljmp
pop
mov
xchg
repz
cmpsb
stc
pop
cs
dec
movsb
and
jmp
sbb
mov
mov
sbb
adc
stc
add
or
pusha
mov
pop
lods
or
popf
sbb
jnp
pop
aad
out
daa
movsb
xor
push
rcrl
or
mul
cmp
aam
jb
adc
cmpsl
fimuls
mov
rcl
mov
pop
xor
ja
popf
and
repnz
lock
adc
mulb
hlt
jecxz
add
int
mov
into
in
stos
xor
lret
jg
xchg
insl
and
in
jl
cmp
push
cld
push
pop
xchg
jmp
cld
test
js
xor
jp
into
and
inc
clc
ret
scas
je
push
xchg
ja,pt
popa
into
push
lods
mov
push
ss
mov
aam
lahf
lods
inc
ds
lret
daa
mov
xor
jg
out
push
jne
loop
aam
loope
mov
mov
inc
pusha
lock
pop
pop
pop
mov
adc
push
jnp
cli
mov
int
push
xchg
out
pop
sbb
mov
dec
lahf
jns
les
cld
and
nop
aam
stc
dec
pusha
pop
adc
cmp
add
xchg
hlt
mov
stos
and
nop
cwtl
addr16
lock
cmc
dec
adc
and
mov
stos
and
cmp
pushf
or
mov
jl
sbb
lods
pop
ja
or
xchg
dec
adc
xchg
and
stos
enter
fnsave
pcmpgtb
js
pusha
xchg
mov
inc
or
jmp
or
push
push
cmpsb
into
pop
pop
jbe
lds
adcb
fisttpll
lods
movsl
aas
jae
or
mov
jg
sbb
push
test
mov
sub
sub
mov
lds
inc
xor
mov
xchg
xchg
ss
dec
adcl
test
jg
cli
pop
inc
inc
xchg
pusha
pop
mov
and
add
xor
jae
hlt
pop
ljmp
inc
ud1
jg
cmp
jnp
xchg
xorb
pop
push
movsl
jge
divb
frstor
and
andb
into
pop
add
out
pop
loop
push
lock
andl
push
sub
adc
pop
adc
outsl
sbb
fcmovnb
or
pushl
cmp
and
out
arpl
jp
xor
ficoms
cs
in
decl
mov
pop
push
cmc
mov
sbb
jecxz
loopne
jecxz
sub
sbb
inc
inc
mov
mov
pushf
xchg
add
ds
sub
xor
lods
fld
out
iret
ja
push
in
out
or
dec
adc
loope
mov
and
adc
pop
test
push
ret
push
into
cmp
mov
inc
mov
clc
fsubrs
out
xor
enter
dec
and
movsl
gs
fwait
lret
pop
cmpsb
jbe
xchg
mov
cli
mov
inc
insl
mov
fidivrl
dec
stos
and
mov
into
cmp
mov
jns
fcomi
or
icebp
inc
scas
fcompl
cmpb
ja
sbb
out
push
xchg
xchg
mull
lret
test
testb
mov
scas
xor
pusha
outsb
addb
lock
iret
mov
cmp
daa
push
jo
movsl
add
in
decb
lret
lock
or
xchg
mov
sub
jecxz
shll
and
pop
pop
sbb
add
orb
loopne
mov
adc
adc
xchg
rcrl
mov
or
sahf
ret
and
dec
pushf
cmp
push
clc
shrl
shlb
push
push
icebp
jl
adc
mov
ror
iret
jno
xchg
imul
dec
aad
inc
nop
mov
sbb
pop
outsb
fmul
leave
int
in
flds
cmp
mov
fwait
add
adc
mov
lret
dec
fisubl
sub
jbe
xchg
xor
push
test
sub
popa
movb
int3
lock
aad
sub
sub
jg
inc
mov
pushf
out
and
cmp
pop
xchg
movsb
enter
inc
ja
imul
xchg
daa
iret
push
fildl
or
sub
and
push
rcl
bnd
stos
insb
lcall
jae
cmpb
icebp
mov
stos
dec
cmpsl
shrl
dec
jno
ja
std
adc
data16
or
jo
loop
push
or
out
shrb
inc
out
add
cwtl
stc
lahf
enter
insb
popa
mov
jbe
adc
mov
mov
das
mov
mov
repnz
lods
fiadds
add
in
mov
xchg
xchg
out
jge
cmp
lds
cmp
les
in
and
into
or
insb
inc
jl
sbb
push
cmp
inc
xor
ret
pop
mov
into
push
mov
push
outsb
mov
out
loop
je
dec
fbld
add
sub
mov
mov
adc
orb
dec
int3
push
adc
inc
test
push
xchg
lock
jno
mov
jecxz
int3
and
inc
cli
call
and
mov
mov
ret
pushf
mov
ds
orl
lahf
jg
je
add
push
jle
pop
mov
jae
pushf
movb
and
xor
into
mov
dec
int3
jle
addr16
or
imul
mov
fwait
aam
jns
lds
cmpsb
push
add
shl
cli
xor
insl
adc
xchg
jle
lret
add
rcl
stos
lock
adc
movsb
aaa
xchg
addr16
dec
mov
out
fisubrl
pop
test
out
scas
dec
push
stc
push
and
rcrb
and
mov
rcl
movsl
enter
cld
mov
int3
icebp
jecxz
push
xorl
jno
xchg
mov
sub
pop
nop
daa
cmp
ret
dec
jb
stc
xor
movsl
lds
in
mov
adc
dec
scas
jmp
popf
in
insl
inc
jmp
in
push
inc
or
xchg
aam
lret
cs
sbb
insb
mov
jg
cmp
mov
xchg
scas
lods
push
insl
push
push
add
lock
dec
es
jbe
sub
pop
xchg
jnp
mov
cwtl
xchg
rorb
fidivrs
dec
sbb
pop
pop
dec
mov
scas
mov
or
xchg
repz
jns
sub
dec
out
mov
push
stc
lods
aad
lcall
dec
dec
xchg
push
xor
add
fistps
mov
mov
xchg
pop
std
pop
jbe
popf
jge
hlt
lock
and
leave
cmp
mov
pop
dec
inc
repnz
rol
dec
jbe
adc
mov
xorl
dec
movsb
jmp
shll
int3
xchg
pop
dec
dec
or
inc
sbb
gs
in
test
imull
ja
sbbl
movb
lret
imul
or
lret
and
insl
dec
cmpsb
les
cmpsl
fwait
sbb
cmp
pop
xchg
dec
mov
fnsave
mov
xchg
push
or
xor
jle
dec
cld
and
xchg
dec
lret
ljmp
dec
lret
push
add
je
jno
loop
and
xchg
clc
pusha
gs
or
inc
mov
loop
outsl
ljmp
pop
or
scas
pop
adc
jp
aam
subb
xchg
insb
jno
mov
test
ja
movsl
ljmp
mov
xchg
dec
or
scas
jmp
shlb
ficomps
pop
and
jmp
xchg
data16
into
scas
cmc
icebp
pusha
adc
pushf
jb
loope
inc
outsb
and
cmp
sbb
sub
push
inc
pop
cld
jmp
and
iret
sub
or
xlat
jecxz
sti
out
add
adc
imul
into
jo
dec
mov
stos
int
push
in
ds
xlat
sti
sbb
clc
and
out
dec
fnstenv
add
ficompl
fcoms
cs
mov
cltd
into
cmp
outsl
mov
dec
out
sti
js
jge
mov
es
test
movsl
fcoml
push
ss
rorl
jmp
dec
sbb
adc
xchg
into
sbb
mov
icebp
jp
inc
dec
push
ret
mov
rcrb
fbstp
fdivrl
int3
inc
out
inc
je
pop
mov
lds
les
and
out
mov
inc
fs
in
push
mov
mov
push
iret
mov
xor
lcall
add
icebp
ror
pop
mov
call
dec
jp
adc
xchg
add
jl
cmpsl
sub
pop
mov
xchg
lea
dec
ret
mov
or
mov
mov
aas
jmp
lods
mov
mov
cmp
jns
xor
sbbb
xor
lock
cmpsb
in
addl
rcll
pop
mov
not
outsb
cmp
jbe
lea
pop
int3
movsl
lods
jmp
and
sbbl
and
es
scas
adc
pop
lods
aam
ds
popa
daa
dec
add
in
movb
sti
clc
leave
int
and
es
lret
and
sbb
sbb
pop
sti
pushf
lds
mov
les
rolb
mov
sahf
out
aam
ja
cmp
push
jno
adc
mov
rclb
mov
aad
sub
add
mov
imul
sub
or
adc
add
jne
and
loop
outsb
lret
test
in
imul
pushf
pop
and
jbe
mov
sbb
je
dec
or
repz
adc
xchg
cs
rcrl
insb
mov
loope
mov
loopne
push
ja
jmp
dec
lods
call
dec
cltd
jge
push
dec
adc
jmp
xor
stos
lret
mov
sub
xor
push
loop
fisubrl
scas
jle
stos
adc
test
or
mov
add
mov
xchg
dec
and
stc
call
in
mov
aas
cmc
pop
add
aam
mov
loope
fimuls
cwtl
push
dec
adc
test
mov
mov
xor
icebp
xchg
cmpsl
add
push
ljmp
pusha
aad
arpl
jnp
lahf
sub
cmp
cwtl
repz
and
add
dec
sub
data16
add
inc
mov
lret
mov
pushf
inc
mov
or
ja
sbb
mov
aad
xchg
cmc
or
mov
data16
out
sbb
xor
cmp
movsb
dec
loopne
pop
cmp
je
sub
inc
jmp
outsl
jge
and
ret
xchg
adc
mov
ljmp
idivb
xchg
pop
push
pushf
leave
adcl
pop
xor
or
enter
mov
test
jbe
mov
dec
lret
in
leave
dec
or
sahf
pop
ja
pusha
jnp
xlat
jl
dec
adc
pop
ja
jp
lds
out
outsl
xchg
lock
cmp
cmp
and
pop
mov
clc
daa
sub
ja
mov
sahf
sti
pushl
cmpsb
push
fidivrl
mov
repz
xchg
lds
out
cwtl
jmp
in
xchg
mov
aaa
add
into
aas
inc
js
xchg
dec
xchg
push
jle
push
xor
push
xor
div
shll
jbe
ds
sbb
outsb
inc
lods
cmp
out
mov
inc
add
xchg
out
xor
lds
pop
pushf
inc
or
idivl
fcoml
pop
cmp
inc
mov
cld
and
flds
cmpsl
aam
scas
shl
pop
negb
push
inc
dec
or
popf
jbe
js
in
push
dec
xor
xchg
jle
arpl
out
ror
mov
clc
stos
xchg
mov
jbe
sub
test
jmp
mov
fimull
dec
jl
sarl
inc
and
popf
std
or
push
cwtl
outsb
js
pusha
jne
mov
adc
ja
in
inc
add
sarl
lea
js
test
leave
mov
je
cld
popf
fcmovne
mov
xor
in
call
cmp
or
xchg
rclb
sbb
adc
push
adc
sub
fdivrs
jmp
testl
jo
dec
seto
dec
push
es
outsl
repnz
jbe
cs
jle
push
js
shl
clc
or
fwait
mov
sub
arpl
stos
mov
aam
aad
out
lret
dec
xchg
addr16
jns
fdiv
cmpsl
pop
int3
cmp
mov
xor
mov
add
mov
xchg
andl
mov
lds
cmpsl
addr16
mov
sub
adc
aad
xchg
sbb
cmp
mov
jmp
aaa
pushl
jecxz
pop
mov
mov
push
mov
in
notb
pop
mov
xorl
iret
jno
aaa
jns
int3
push
fstl
dec
mov
or
imul
inc
shlb
jmp
fcmove
ret
xor
mov
pop
mov
into
rcll
aas
into
ret
jnp
not
xor
fsubl
and
mov
andl
mov
movsl
xor
pop
adc
out
pop
sti
dec
sarl
cltd
push
arpl
fidivs
dec
aas
push
iret
mov
insl
push
lret
not
ss
in
mov
inc
movsl
repz
sarl
push
sub
xor
pop
and
push
sbb
xchg
nop
push
fwait
add
rcr
sbb
or
push
cmp
dec
mov
int
push
inc
in
cld
push
or
jge
lret
std
call
dec
jmp
or
push
roll
repnz
jle
scas
jns
pop
loope
inc
cld
out
cmp
rol
mov
test
leave
inc
dec
ss
stos
sub
lds
adc
mov
inc
jp
adc
loope
icebp
sub
cmpsl
jns
faddl
mov
and
mul
add
fdivrs
dec
push
into
rcrl
push
cmpb
inc
xchg
cmpsl
adc
dec
out
shll
in
aas
repnz
test
pop
xchg
enter
lock
iret
jbe
jge
jnp
hlt
repnz
cld
rcrb
dec
push
std
pop
out
push
in
cmp
gs
outsl
ds
loop
call
xor
loopne
fsubrs
ret
addr16
xchg
push
jecxz
push
push
push
xlat
test
lea
add
mov
inc
inc
lock
cmpsl
push
lret
cmp
rolb
and
cmp
cld
aaa
lret
cmc
lock
lahf
jae
fs
push
cwtl
sti
lret
int3
jns
jne
mov
out
jge
out
rcrb
out
pop
shrl
sbb
loopne
daa
cmp
out
jmp
jp
xchg
and
cmp
inc
stos
pop
mov
mov
push
and
imul
pmaxub
es
idiv
fs
ds
push
pop
fistpll
out
push
and
jp
push
ljmp
aam
lret
mov
xor
xlat
ja
cwtl
adc
into
cmpsl
mov
fmuls
loope
test
inc
movsl
adc
xchg
lahf
add
dec
in
stos
xor
fistpll
je
mov
add
int3
sbb
adc
enter
xchg
lock
sub
mov
fisubs
stc
sbb
mov
scas
pop
and
dec
lret
add
sub
mov
popa
jp
xchg
adc
inc
xchg
cmpsb
repz
in
adc
pop
pusha
scas
dec
push
iret
arpl
push
js
fsubrp
mov
inc
roll
mov
shlb
mov
into
push
data16
lock
push
cmp
mov
movsl
daa
lcall
jbe
pusha
inc
xor
push
jge
xchg
imul
repz
jl
inc
add
pop
test
or
sub
int
xor
mov
push
inc
dec
loop
push
mov
int3
dec
cmpsl
aas
sbb
fs
dec
divl
cmpsb
lret
adc
sbb
xor
cmpsl
je
and
mov
inc
xor
loope
mov
inc
adcb
pusha
ja
xor
stc
xor
incl
cwtl
stos
test
je
not
sub
fistpl
leave
lock
mov
mov
inc
aas
rcrw
subl
mov
shll
mov
ds
jbe
ja
pop
fs
loop
pop
dec
push
mov
mov
add
add
js
jnp
sub
cmp
test
popf
repz
out
ds
xchg
push
sbb
fimuls
and
ja
xlat
test
mov
aas
stos
es
mov
mov
mov
ds
jbe
adc
loope
std
out
test
pop
push
pop
pusha
mov
push
lods
inc
jmp
mov
cli
or
stos
stos
lock
hlt
jmp
mov
inc
push
jbe
sbb
adcb
dec
popf
js
repz
imul
gs
test
push
mov
sub
sbb
push
xchg
sbb
dec
rcrb
or
dec
scas
mov
sbb
dec
iret
aam
cmp
sbb
out
fstp
insb
mov
mov
ja
mov
ljmp
loop
xor
push
aaa
xchg
inc
fldcw
addr16
ljmp
test
dec
add
lahf
int
and
xchg
dec
data16
icebp
and
lret
fcomi
out
sub
lds
xlat
mov
cltd
push
dec
inc
sbb
mov
fs
and
mov
stc
std
addr16
shll
jbe
insl
jmp
je
aad
and
adc
test
aaa
aam
push
inc
push
xor
pop
in
ret
jecxz
mov
stos
mov
decl
loopne
xchg
pop
scas
mov
cmpsl
daa
sbb
mov
pop
adc
and
and
das
jle
and
pop
call
jae
xchg
cmp
add
xor
cmpsb
movsl
out
stos
mov
repz
out
aas
imulb
leave
cmovns
pop
dec
cli
lret
sbb
or
testb
lods
std
inc
sub
mov
stos
lods
ds
and
int3
leave
inc
adc
dec
adc
dec
cs
push
sub
data16
mov
add
leave
xchg
sbb
fisubl
rorb
arpl
xchg
push
mov
mov
sahf
xchg
sub
cmpsb
xchg
fmulp
in
mov
xchg
mov
add
aaa
decl
jno
fucom
mov
cs
pop
dec
or
aam
hlt
les
xor
sub
and
mov
mov
xchg
mov
or
mov
test
push
add
pop
mov
mov
outsb
cmp
add
mov
pop
jl
sahf
cld
sbb
inc
out
fistl
ret
or
dec
shlb
into
and
call
add
xor
loopne
in
mov
cmc
int
sub
jns
sub
outsl
movsl
dec
nop
imul
xchg
xorl
jecxz
cltd
cmp
xor
pop
xorb
loopne
aam
mov
mov
xchg
add
insb
fst
sub
dec
maskmovq
divl
es
mov
xchg
fwait
mov
popf
xchg
jle
jbe
sarl
and
mov
cmpsl
movsb
xor
gs
push
rcr
jo
stos
lret
dec
dec
pop
add
mov
push
sbb
push
and
je
movsl
arpl
dec
add
pop
cwtl
jp
dec
inc
inc
or
and
pushf
push
jbe
or
outsb
int3
dec
pop
test
sbb
testl
or
adc
mov
flds
popa
in
mov
adc
xchg
jecxz
xlat
aas
out
pop
cmpsl
adc
lock
fwait
pop
pop
push
and
lahf
mov
and
sbb
mov
inc
xor
xchg
push
cs
imul
lret
loopne
mov
inc
lods
push
add
out
and
movsl
mov
dec
shrl
inc
jno
out
and
insb
dec
mov
imul
into
and
jne
std
xchg
fs
mov
add
xchg
data16
cmp
nop
out
push
insb
aad
xor
insl
stos
add
or
repz
inc
lds
int3
cli
pop
loop
lret
leave
dec
inc
fstpl
pushf
mov
jp
ret
dec
pop
push
out
mov
negb
mov
pop
adc
or
test
fcom
push
inc
adc
std
addb
jl
daa
imul
int
xor
in
leave
jg
xchg
outsb
adc
shl
lock
mov
dec
int3
cmp
enter
insb
or
rcr
add
and
and
inc
lcall
cmp
rorb
or
sub
fisubs
mov
sbb
pop
cwtl
or
sub
dec
push
add
cmp
movsb
orb
push
cmp
data16
xor
adc
in
mul
lret
sbb
add
push
xor
jecxz
js
leave
daa
adc
lods
mov
xchg
xor
icebp
dec
mov
and
filds
push
push
into
shlb
adc
mov
push
push
or
mov
ljmp
aas
push
jne
out
lds
push
cwtl
and
jbe
or
pop
xchg
or
andl
mov
imul
mov
push
dec
shl
in
insl
mov
jno
stc
cmp
inc
icebp
lret
mov
xchg
inc
pop
sbb
pop
jb
out
dec
in
test
xchg
pop
into
mov
jno
sub
push
pop
jns
mov
fs
cmp
aam
das
ja
dec
lea
dec
into
cmpsl
jecxz
push
imul
and
mov
iret
cmp
fwait
push
jb
jecxz
shrl
imul
cmp
ret
dec
fistl
stos
push
sti
dec
inc
ds
fbld
mov
es
je
call
xchg
jecxz
es
xchg
into
sarb
jbe
data16
jmp
push
aam
or
jb
or
pop
xor
enter
xchg
adc
cmpsl
repnz
xchg
push
jae
stos
mov
imul
imul
loope
rcl
lcall
jne
lret
jbe
jmp
leave
cmp
sar
lahf
xlat
insl
mov
sbb
jno
mov
ja
ds
int
js
jmp
push
pop
sbb
xchg
sbb
mov
adc
ja
add
sbb
jge
mov
push
add
mov
mov
mov
jp
outsw
or
mov
sbb
dec
aaa
push
jns
push
mov
not
lahf
cli
ljmp
bound
sarb
jb
or
daa
sbb
loopne
movsl
lret
xchg
xchg
test
or
orl
xchg
or
lret
insb
fadds
xor
call
sahf
sbb
cli
das
lret
andnps
leave
hlt
test
inc
inc
push
ljmp
mov
or
cli
dec
mov
xchg
jne,pt
jae
dec
cmp
stc
orb
je
das
test
jns
sar
xchg
mov
shlb
js
adc
and
clc
xchg
into
lret
mov
shl
sbb
call
int3
in
imul
mov
cs
test
mov
adc
mov
xor
mov
inc
push
xor
addl
aas
xchg
pop
ret
popa
addl
cmp
xor
mov
out
and
sbb
loop
outsl
xor
sti
xor
dec
sbb
jno
aaa
pop
cmp
xchg
shlb
enter
stos
mov
jecxz
sbb
addr16
push
push
outsl
xor
jl
test
xor
mov
xchg
rorl
jecxz
mov
push
jge
mov
jp
push
nop
icebp
push
adc
inc
fiaddl
cmpsl
sub
pop
fnstenv
stos
sub
loop
xchg
movsb
cli
lret
fs
mov
mov
outsb
data16
xchg
pop
leave
mov
cmc
sti
aad
jnp
sub
int3
daa
xor
jb
push
dec
cmpsl
clc
jmp
or
sahf
rclb
pushf
mov
cmp
imul
imul
cmpsl
jno
dec
loop
mov
lret
xchg
jnp
ret
sub
push
xor
adc
mov
xorb
xchg
pop
testb
mov
adc
iret
cs
ds
out
pop
out
and
insl
js
xor
leave
or
fsubs
movb
pusha
aam
test
mov
jle
dec
loop
adc
fdivrl
hlt
stos
pop
push
push
shll
sub
aas
icebp
into
lcall
das
sub
mov
sub
into
jle
pop
dec
dec
pushf
cld
push
sahf
xor
out
sbb
jo
adc
scas
sub
cmp
mov
push
fdivs
mov
movsb
adc
dec
fstpl
pop
int3
fdivrs
fistpll
test
and
inc
jbe
lods
xchg
cld
into
cmp
int3
dec
inc
in
jge
mov
xchg
mov
or
inc
lret
inc
in
pop
mov
scas
or
sub
daa
lret
mov
mov
xorb
fsubrs
rcr
jl
inc
fisubrl
js
hlt
jmp
ljmp
pusha
xchg
ds
movsl
mov
call
scas
lods
fwait
lret
jmp
incb
sub
mov
push
push
jno
cmp
cli
decb
add
rcl
gs
sub
dec
andl
mov
dec
xor
sub
lds
mov
push
mov
ror
sub
cmp
int3
jnp
scas
nop
aam
mov
lods
pop
mov
int3
sub
push
jne
jb
cli
mov
mov
pop
xchg
mov
mov
outsl
pop
out
pop
dec
lret
out
cmpsl
ljmp
xor
push
fisubs
pop
sahf
mov
call
movsb
sub
xor
cmp
mov
sti
shrl
add
outsb
cmc
lock
into
out
aam
inc
movb
sbb
addl
cwtl
push
roll
pop
stc
mov
movsl
xor
sub
xchg
and
sbb
xchg
out
icebp
loope
sub
xchg
push
jle
pop
sub
fxch
jns
add
cwtl
cmc
cltd
push
pop
jnp
mov
xchg
jmp
sbb
sar
sub
lret
lret
xchg
dec
gs
add
repz
icebp
xor
mov
insb
add
mov
imul
outsb
jns
into
sbb
push
icebp
and
fs
inc
pop
pop
push
mov
int
pop
push
push
push
sub
es
ss
jns
xor
jp
and
xor
dec
push
insb
sub
fs
adc
inc
jae
imul
mov
lock
inc
cmp
lods
push
dec
inc
repnz
imul
pop
and
int3
jns
leave
shl
cmp
xchg
inc
cs
out
adc
rep
lods
push
mov
outsl
jl
xchg
push
or
pop
jb
ror
push
pushf
xor
sub
lret
loopne
pop
repz
push
jbe
subb
ret
into
scas
push
out
or
adc
cmp
outsl
fnsave
sub
pop
fildll
inc
sub
leave
lret
js
jle
in
mov
stc
ds
aad
scas
loopne
mov
jle
das
ja
movsb
mov
push
pushl
xchg
fidivrs
dec
adc
xor
or
push
mov
mov
add
pop
push
imul
cwtl
inc
rorl
js
jno
rcrb
iret
inc
popf
lods
mov
testl
push
pop
sbb
pop
mov
ret
mov
sub
push
mov
mov
subb
test
cmpsl
popa
xlat
gs
imul
push
jecxz
in
orb
and
push
mov
xchg
mov
mov
popa
add
and
rcl
inc
push
faddl
xchg
mov
jle
dec
decl
mov
addr16
ret
and
adc
cltd
adc
mov
jecxz
insb
push
fcmovbe
enter
add
or
add
and
cmp
or
push
ljmp
nop
movsl
stos
sahf
mov
loopne
fsubl
mov
fistps
and
push
rolb
loope
mov
xor
pushl
cmpsl
fs
and
das
dec
add
fbstp
test
xchg
data16
dec
ret
and
xchg
mov
js
mov
int3
mov
and
icebp
lcall
inc
iret
test
arpl
jo
dec
sbb
sub
movsl
xorl
ret
test
jecxz
inc
popa
cwtl
or
push
in
ret
and
pop
pop
sti
hlt
push
mov
cltd
xor
jg
loop
movsb
push
add
xlat
lea
je
sbb
test
into
pop
test
enter
and
mov
dec
ret
lret
jl
adc
aaa
pop
push
push
cmc
dec
loope
test
push
into
and
sbb
jmp
cwtl
pop
fcmovnbe
mov
mov
sbb
push
out
subl
jno
sarl
cli
pop
fwait
jo
mov
xor
into
mov
insb
dec
ljmp
jnp
xor
push
call
lock
push
repnz
push
dec
lret
pop
std
pushf
into
test
or
pop
sarl
test
pusha
xor
dec
int
rorl
xor
outsb
sti
bnd
insl
decb
aad
sub
in
fcmovnb
ss
adc
js
cmpsl
push
sbb
or
mov
loope
push
clc
nop
lret
inc
ja
mov
sub
cmc
push
jne
inc
xor
sbb
mov
sbb
jne
test
mov
dec
test
mov
pop
mov
mov
mov
mov
fisttpll
mov
arpl
sub
cli
movsl
lret
loope
jge
call
popf
mov
push
jmp
mov
jae
jbe
pop
insl
rclb
rclb
adc
or
cmp
cmp
fucom
in
inc
jecxz
fidivs
popf
out
insl
mov
sub
xchg
test
push
into
lret
js
or
mov
aad
sbb
cltd
insl
jo
push
data16
mov
imul
and
cmp
mov
imul
sub
dec
xor
lods
lahf
inc
jmp
xchg
jns
int3
mov
pop
xor
in
pop
pusha
jno
lods
rcl
mov
mov
and
notl
jns
mov
in
das
push
xchg
sbb
push
ja
add
or
push
in
mov
out
and
lret
jmp
jbe
scas
push
sbb
mov
inc
leave
mov
dec
adc
sti
cmp
or
mov
xchg
mov
cmp
out
inc
stos
xchg
pop
in
cmp
dec
addr16
add
dec
xor
pop
dec
stc
lods
stos
int3
out
std
cld
mov
push
mov
sub
ficoml
insl
or
and
in
cmpsl
jne
fwait
rcl
jo
xor
jecxz
push
adc
adc
es
hlt
test
nop
stos
push
std
add
push
jnp
incb
stc
lea
lock
mov
cmp
je
addr16
mov
loopne
cltd
xlat
adc
test
mov
in
jl
int
fstpl
fcoms
div
js
pop
sub
vmovq
test
out
sti
xorl
dec
ss
nop
cld
jge
lock
xchg
fnsave
jmp
add
out
mov
std
mov
add
call
stos
lret
dec
jns
xchg
clc
push
add
aam
sub
mov
shlb
push
data16
lret
out
in
pop
mov
xchg
xchg
dec
xchg
xchg
cmc
in
pusha
fmul
addr16
into
mulb
lret
xchg
push
les
pop
popa
sbb
mov
and
out
push
aad
movsb
cmp
fnsetpm(287
xor
movl
pop
pop
cwtl
add
jno
jno
jns
jae
movsl
in
cwtl
mov
cmpsl
mov
gs
mov
xchg
rcll
insl
in
or
push
pslld
sahf
push
mov
push
jbe
mov
sbb
int3
fisubs
and
mov
push
push
add
ror
incb
push
mov
scas
insl
and
jmp
adc
adc
dec
and
push
adc
sbb
cmpsb
inc
test
and
jb
dec
les
push
dec
mov
jecxz
sbb
jle
stc
pop
push
sahf
cmp
jb
cltd
or
clc
sbb
mov
ror
adc
mov
in
push
imulb
add
lods
aam
popa
outsl
fistl
mov
push
dec
push
mov
cmp
push
ret
pop
aad
push
into
jb
xchg
pusha
test
mov
out
sbb
jle
cmp
xchg
dec
aas
loopne
and
mov
xor
xor
sub
xchg
push
fadd
inc
leave
loop
imul
shrl
sahf
rcrl
adc
movsl
mov
jb
mov
ljmp
out
jne
mov
addl
inc
or
sub
fldt
lods
lret
mov
or
sahf
insl
out
fbstp
mov
out
mov
dec
sbb
dec
aad
iret
xchg
lret
into
lea
mov
cmp
dec
fsts
cmpsl
mov
mov
dec
add
into
bound
call
lcall
js
push
push
jcxz
inc
into
gs
jne
adc
inc
aaa
xlat
mov
xchg
mov
pop
mov
shrl
aad
pop
loope
lock
les
inc
shrl
jmp
xchg
inc
std
mov
fldl
jo
dec
and
int3
or
lret
push
xchg
dec
imul
lret
sub
and
and
pop
or
nop
sti
jmp
loope
idiv
inc
sbb
dec
cmp
popf
sbb
xchg
jbe
xor
mov
sbb
sbb
repz
push
xchg
lea
lods
aaa
dec
jg
ss
jl
xor
xchg
movsl
fbstp
cmp
push
stc
and
out
iret
out
enter
lea
jge
fstl
and
fdivl
fimull
jnp
pusha
fsubrs
imull
out
shl
lods
dec
out
pop
lahf
es
test
sbb
sbb
jns
je
push
repnz
in
daa
repz
into
mov
gs
lods
push
mov
int
jne
inc
adc
clc
scas
jl
mov
out
or
or
icebp
sbb
push
into
inc
scas
hlt
ret
cmpsb
add
xchg
fs
sbb
xchg
mov
imul
les
mov
or
test
shll
out
add
addr16
inc
xlat
inc
mov
inc
outsl
xchg
mov
addr16
cltd
xor
insb
fadds
jb
scas
push
sbb
sti
mov
push
cmp
inc
cmc
ljmp
inc
fwait
cmp
mov
leave
js
repnz
mov
mov
icebp
mov
and
jae
gs
fwait
cltd
dec
or
aam
fidivl
bound
cmp
repz
or
jne
aam
mulb
adc
jae
in
dec
push
movsb
ficompl
and
in
scas
mov
cs
mov
ret
jne
dec
clc
sbb
and
incb
sahf
cmp
jns
rorl
loop
pop
scas
lds
icebp
inc
push
and
sbb
jp
popa
or
xlat
jns
xchg
ljmp
sub
shr
push
cmp
adc
mov
movb
sub
out
loopne
in
cld
dec
push
adc
fs
clc
mov
push
adc
mov
mov
pop
adc
enter
js
rclb
ljmp
cltd
cmp
pop
push
outsb
test
mov
je
mov
int3
lock
push
call
mov
cltd
cs
or
into
cmp
or
cmp
pop
xchg
mov
jmp
xchg
add
repz
mov
gs
push
inc
test
xchg
das
decb
aam
cmp
test
jg
xchg
adc
sbb
inc
out
gs
int3
fdivp
sahf
imul
xchg
xchg
loope
push
cmpsl
insl
push
jne
cmp
jmp
push
pop
jae
gs
pop
jp
stos
std
rorb
roll
xor
rcrl
test
pop
lret
pop
in
stos
jmp
in
pop
int3
adc
sarl
push
loope
out
ds
mov
fimull
dec
movb
dec
lret
or
xchg
mov
mov
jnp
outsb
push
lea
mov
jecxz
andb
pop
xorb
out
cli
into
xchg
div
out
sub
mov
sar
jns
std
icebp
mov
pusha
mov
rcll
int
inc
jae
jo
ds
sub
mov
push
push
jl
stos
movsw
and
xor
push
inc
sbb
or
jae
jnp
inc
mov
add
mov
and
xor
inc
pusha
dec
cmpb
movsb
ja
push
into
jae
mov
inc
or
stos
pop
popf
adc
out
mov
dec
jl
xchg
mov
push
lcall
mov
mov
xchg
inc
addb
pop
lods
les
jl
jecxz
pop
add
aad
aam
cmc
jne
shll
into
xor
pop
ret
sti
sbb
lds
inc
mov
repz
cltd
push
ret
jbe
sbb
mov
sub
push
lods
push
jl
lret
fnstenv
shrl
mov
je
test
shl
jbe
into
rcll
mov
scas
out
mov
and
add
mov
cmpsb
xchg
pushf
out
push
mov
jns
dec
jecxz
popf
loop
movsl
add
and
fucomp
dec
jnp
jbe
popf
add
fimuls
arpl
adc
ret
bound
aas
into
out
xchg
stc
movsb
sbb
repz
push
js
test
mov
cltd
mov
popa
mov
scas
aam
sti
adc
shlb
lods
mov
jb
jl
aad
jnp
lret
leave
xlat
call
xchg
into
pop
lea
sbb
mov
jbe
cmp
mov
iret
ss
lret
xor
and
add
push
cmp
inc
fldt
and
out
imulb
sbb
or
lret
pop
jnp
xchg
dec
xchg
jne
add
sub
imul
push
adc
lret
push
pop
mov
aas
je
dec
lods
add
sbb
out
fdivs
es
imul
sub
mov
cmpsl
je
into
aaa
loop
mov
sub
cld
jns
lret
and
mov
mov
sbb
cmpsl
ds
mov
scas
add
lea
aad
jb
jge
ja
outsl
cmpsb
mov
out
ret
xchg
rorl
mov
pushl
rep
jp
adc
or
push
lea
mov
inc
xor
jl
push
and
sbb
sarb
add
dec
push
insb
inc
mov
dec
enter
and
in
in
and
xchg
and
jmp
pop
cmp
inc
jge
ret
idivl
cli
xchg
insl
fwait
iret
adc
repnz
add
jne
adc
int
mov
movsl
jb
into
cmp
xor
cmpsb
inc
lret
mov
lcall
sub
pop
add
pop
arpl
jle
mov
xchg
mov
or
inc
dec
repnz
outsb
ret
sub
xchg
cmp
sbb
or
shl
les
pop
imul
push
push
cltd
movsb
mov
dec
pop
sub
cwtl
mov
pop
pop
push
outsl
lret
xchg
push
dec
dec
inc
arpl
xchg
or
cmp
test
push
into
pop
rcrl
pop
and
push
into
mov
add
add
sbb
push
and
ds
jmp
xor
out
inc
xor
dec
push
mov
andl
add
lods
xchg
aaa
inc
daa
mov
outsb
xchg
pushf
cmpsl
push
jno
adc
test
push
add
pop
mov
fisubl
shrb
jne
inc
loopne
add
xor
in
push
pop
sub
push
lret
iret
and
adc
dec
int3
cmp
add
add
rorb
mov
dec
jbe
xchg
push
nop
or
xlat
arpl
imul
mov
and
les
addr16
call
cmp
lcall
jae
jno
mull
push
aam
leave
jmp
roll
loopne
or
pushl
or
fsubs
and
mov
out
inc
adc
aam
pop
pop
sub
js
out
lret
daa
jne
xchg
mov
sbb
adc
jmp
test
sub
jge
mov
cld
popa
pop
shll
dec
loope
mov
aad
push
lea
daa
out
fldt
mov
into
push
les
int3
sbbb
stos
xlat
popa
inc
mov
pop
lea
cmp
or
mov
xchg
mov
repnz
adc
push
movsl
push
cmp
into
psadbw
sbb
sub
or
xchg
pop
mov
mov
jg
mov
sub
lock
push
imull
rcl
lds
xchg
lods
xchg
sub
pop
rol
cli
xor
mov
lea
pop
out
jns
dec
add
call
adc
cmp
mov
fwait
adc
inc
imul
jae
ja
push
sub
mov
push
cs
and
aaa
ret
test
addps
push
pop
jmp
jnp
xchg
push
enter
lds
mov
inc
xchg
jnp
jmp
lret
stos
push
cs
cmp
cmp
mov
or
jl
lahf
les
xchg
pop
mov
and
cmpsl
jne
addr16
hlt
push
insb
dec
adc
mov
mov
movsl
shll
fwait
dec
inc
push
fisttps
mov
sbb
pop
out
into
mov
xchg
adc
rorb
cltd
stc
jp
jnp
add
lea
jg
pop
movsl
push
sub
jp
popf
es
test
mov
out
not
jg
fsubl
cmp
push
add
xchg
mov
je
add
add
fistl
rcrl
aam
mov
adc
ret
jne
xor
or
xchg
lds
add
xchg
sub
movsl
dec
and
into
test
fnstenv
and
fcmovne
outsl
or
fmull
push
add
sbb
sbb
xchg
dec
and
cld
sbb
add
outsb
push
shrb
sti
inc
in
xor
adc
data16
pop
pusha
jb
loope
xor
mov
inc
mov
adcl
arpl
ljmp
ret
jno
ss
jl
fs
mov
ljmp
js
push
dec
repz
mov
out
in
mov
loop
mov
mov
mov
popf
enter
inc
add
fadds
or
dec
mov
into
call
cli
inc
in
jmp
inc
mul
pushf
push
or
xchg
or
cmp
or
and
xchg
add
cmpsb
xchg
ret
jbe
fwait
rclb
jne
clc
popf
test
and
cmpsl
stos
gs
inc
pop
add
mov
fcmovnbe
ret
scas
adc
sbb
cmc
mov
and
cmp
jp
insb
and
push
and
pop
into
push
add
jne
xor
xchg
dec
stos
fisubrs
lret
cmp
mov
pop
jmp
das
ljmp
inc
vmovddup
lock
test
pop
decb
dec
mov
inc
push
xchg
in
jo
inc
cs
ljmp
addr16
lea
call
dec
pop
sbb
cwtl
gs
xchg
loopne
mov
dec
sub
jne
add
mov
bnd
pop
hlt
or
jbe
xor
jno
out
jne
int3
hlt
jmp
movsl
xchg
mov
enter
push
fs
xor
std
mov
out
add
and
ljmp
xchg
cs
test
in
dec
into
add
nop
push
or
fstpl
mov
sub
jno
std
push
mov
or
cmp
stc
std
leave
mov
mov
loop
xor
repnz
xchg
lret
lods
xor
dec
les
xchg
loope
jbe
jecxz
pop
insl
jo
ljmp
and
dec
in
or
mov
xchg
lret
cwtl
jg
sahf
or
inc
ds
rcll
outsl
add
test
jnp
mov
or
bound
into
xchg
push
repz
insb
pminsw
fbld
and
daa
mov
pop
xchg
fidivl
clc
mov
shl
sub
jns
xorl
das
xchg
lods
sbb
inc
mov
jae
mov
inc
movsb
mov
mov
test
scas
ja
cmp
xlat
mov
aad
xchg
ljmp
and
cli
fdivl
sbb
cmp
ds
fmul
pop
fs
xchg
mov
roll
xor
in
dec
clc
jge
lds
xchg
inc
jmp
rcrb
cltd
ljmp
fsubrs
into
and
repnz
ficoml
imul
rorb
lret
jecxz
adc
inc
xchg
inc
iret
int
aas
mov
stos
inc
repz
repnz
xor
inc
test
pop
int3
out
rolb
jbe
pusha
push
mov
nopl
das
iret
push
dec
xchg
dec
jo
insb
cmp
push
mov
rcrb
in
stos
or
xor
push
mov
stos
clc
jmp
xchg
inc
lret
test
lods
push
aas
out
dec
es
xor
adc
and
dec
orb
push
stos
dec
pop
shrl
mov
les
rcrb
xor
inc
pusha
jecxz
in
jnp
lret
dec
jo
mov
sbb
repz
nop
mov
and
stos
leave
mov
movsl
jbe
sbb
fdivrs
test
mov
push
sub
idivl
filds
insb
pop
xchg
inc
out
lds
test
mov
xchg
movsl
dec
fistl
aam
cltd
add
ss
fisubrs
sti
inc
fs
xchg
adc
cli
push
xchg
outsl
mov
stc
mov
jno
mov
pop
clc
inc
mov
push
sbb
jo
into
xor
mov
stc
jb
jnp
cmpsl
add
jmp
inc
rorb
fsts
into
inc
rorl
rcr
add
sbb
xchg
jge
mov
xchg
mov
xchg
adc
pop
cmp
xor
popf
mov
fwait
rcrb
jae
aad
or
sbb
cmp
into
into
push
push
sarl
in
xchg
add
shl
pop
clc
xchg
sbb
test
or
sbb
test
sub
mov
out
imul
mov
hlt
mov
popf
movsb
es
shr
sti
jge
dec
int3
out
jae
push
push
int
fidivs
mov
inc
dec
imul
mov
fbstp
rcrb
add
adc
fsubrl
mov
int3
jne
leave
xchg
lret
mov
inc
into
imul
fwait
xchg
movsb
movsl
and
shrb
xchg
jbe
mov
aam
je
mov
ret
pop
jne
xchg
adc
cli
popf
insb
mov
testl
mov
inc
sbb
shrb
das
into
fucomp
mov
cwtl
scas
and
pusha
movsb
mov
xor
int
jp
repz
push
mov
lcall
repz
sti
iret
aam
lock
pop
jmp
dec
mov
xchg
push
adc
xchg
pop
inc
in
icebp
cmp
push
push
incb
push
in
pop
int
add
dec
rorl
fwait
add
je
push
jb
xchg
dec
sbb
fidivl
jbe
popa
scas
sub
adc
xchg
das
jmp
dec
xlat
sbb
xchg
mov
loopne
xchg
xchg
test
call
sub
jle
gs
loope
xor
mov
or
daa
pushf
jnp
or
popa
sub
loope
cmp
sahf
aaa
or
lahf
push
adc
or
sar
aaa
int3
xor
pop
jne
pop
xchg
lret
jp
xchg
lock
lcall
add
into
mov
sub
test
jns
xor
arpl
inc
cmpsb
xchg
std
sbb
add
lock
jmp
das
mov
out
adc
out
xor
mov
sub
iret
cmpsb
mov
loop
inc
xor
jmp
daa
dec
in
stos
sbb
pop
push
push
pop
cmp
mov
mov
movsb
sbb
int
xchg
stc
into
je
enter
repz
mov
out
jg
jne
dec
ret
lret
imul
cld
jne
fistps
aaa
fst
je
aas
mov
xchg
imul
add
test
lcall
gs
into
mov
sub
jo
xor
test
les
cmp
and
test
or
mov
mov
iret
cld
mov
mov
shll
cmp
aaa
arpl
fs
inc
xchg
add
lret
out
xchg
push
in
dec
xor
and
fs
inc
leave
push
cmp
in
add
xchg
mov
jmp
popf
frstor
push
push
inc
sub
pushf
sahf
lcall
push
mov
xchg
sub
dec
out
xor
push
and
pop
pop
fs
cmp
stc
sub
cmp
or
mov
cmpb
je
in
xor
rorb
push
fidivrl
in
les
shll
cmpsb
scas
out
push
push
add
fsubrl
insl
in
into
fcmovbe
daa
mov
push
or
scas
jl
mov
and
push
and
loopne
add
adc
inc
imul
xchg
testl
lcall
adc
push
mov
mov
mov
jge
out
pop
add
jo
lods
mov
mov
cmp
test
lret
jmp
inc
add
lcall
add
mov
cltd
or
mov
or
shrb
out
dec
pop
add
sti
xlat
lea
mov
mov
imul
jae
push
mov
fildll
cmpsb
push
pop
or
cs
jp
mov
mov
idivl
into
jo
mov
pop
outsb
mov
in
inc
imul
lahf
dec
mov
lret
inc
test
and
lcall
mov
xchg
jns
icebp
test
out
popf
mov
sub
lcall
xor
fcmovu
cmp
cmp
icebp
sbb
and
enter
mov
popa
rcl
pushf
iret
dec
std
inc
adc
fisttpll
sub
rcrl
pop
ds
mov
add
insb
loop
push
data16
imul
xchg
xor
pop
push
or
test
jbe
mov
add
jne
repz
pusha
pop
sbb
or
mov
sahf
addr16
fnstenv
jl
pop
jg
or
mov
imul
sbb
movsl
xor
adc
or
inc
xchg
mov
in
shl
cld
inc
mov
enter
iret
test
inc
sbb
fiadds
test
sub
pop
and
ds
insb
sub
mov
inc
jb
dec
pusha
rolb
cld
push
mov
out
mov
mov
add
mov
into
in
outsb
shl
mov
inc
loopne
sub
out
mov
pop
dec
call
xor
jnp
jecxz
push
jg
roll
push
jge
in
mov
adc
adc
iret
movsb
or
adc
or
sbb
or
sti
pop
xor
cli
xor
sub
mov
rcll
xor
out
mov
mov
pop
js
xor
push
push
xchg
mov
mov
push
sub
imul
pusha
jo
adc
inc
xor
jle
sbb
dec
outsl
vaddsubps
cmc
in
xor
inc
loope
lock
arpl
push
stos
mov
dec
pop
cmp
and
mov
or
mov
mov
bound
ds
jp
or
pop
lret
add
outsl
addr16
mov
mov
or
fbld
or
push
sbb
jp
loope
adc
ja
mov
pop
das
jg
jae
aam
xor
adc
out
inc
sahf
xchg
cld
jns
arpl
or
pushf
aaa
scas
mov
lret
dec
sarb
push
dec
fs
ljmp
testl
sub
aaa
push
adc
xchg
repnz
xlat
out
pop
in
add
outsb
or
mov
jb
andnps
sbb
dec
movsb
sub
insb
jge
and
add
or
int3
mov
aaa
sbb
and
pop
out
shll
ret
mov
dec
addb
xor
adc
mov
call
push
pop
out
mov
outsb
mov
xor
sahf
jo
fpatan
loopne
mov
sbb
sbb
ret
bnd
jns
xchg
push
cmp
adc
fcomi
mov
xlat
rorb
pop
orl
xor
movsb
xchg
icebp
xchg
cmp
push
sub
cmp
cmpsl
xchg
sbb
jmp
pop
ret
imul
ds
neg
lret
jae
jne
sub
sub
xchg
addb
and
cmp
das
subl
enter
leave
jo
sub
pop
fwait
cmp
test
into
add
fcompl
inc
dec
les
mov
shlb
fisubrl
and
es
mov
jno
nop
enter
push
cmpsb
inc
fdivr
sub
aam
adc
mov
outsb
lcall
mov
adc
call
lock
addr16
ret
sbb
xchg
dec
push
xchg
sbb
mov
ret
sub
mov
into
ljmp
mov
jns
push
lds
div
adc
xchg
setnp
into
push
jge
das
push
rcr
adc
ds
test
adc
les
add
jno
jns
lods
test
push
in
sub
es
mul
sub
jg
sub
lods
jmp
pop
cmc
aaa
jns
incb
push
push
dec
into
xchg
push
test
pop
cmp
mov
jno
xchg
popf
mov
inc
lea
les
or
lea
leave
mov
lret
push
fdivs
shrl
loopne
sbb
or
shlb
loop
mov
mov
cmp
outsb
es
xchg
cwtl
cmp
jnp
inc
pop
jne
jecxz
lret
ret
pushf
insl
mov
fs
mov
xchg
dec
inc
xchg
dec
leave
and
fnstsw
lret
adc
dec
dec
mov
xor
stos
lret
in
pushf
test
js
xor
fisubl
cmp
stc
mov
and
sbb
rol
xchg
inc
or
mov
inc
test
adcl
xor
xchg
pop
insl
jle
adc
repz
sub
movsl
dec
or
add
outsl
push
cwtl
sbb
jno
addr16
testl
inc
ds
mov
into
push
cs
jbe
test
mov
cmp
adc
push
repz
push
addr16
int3
add
adc
jecxz
cltd
imul
sbb
in
sub
adc
sub
xchg
shr
andb
fucom
cmovnp
add
jle
cmp
pop
cmp
rorl
outsb
inc
outsl
xor
aaa
mov
push
dec
flds
inc
jmp
cwtl
inc
rorb
xchg
xchg
jge
sbb
repz
ds
lret
sub
test
xchg
xorl
das
movsb
call
iret
fnclex
dec
add
adc
sbb
repz
sbb
popf
adc
mov
xor
and
ret
cmp
jae
lods
xchg
std
mov
in
pop
adc
loopne
cli
sub
out
or
mov
imul
sbb
insb
mov
fadd
ret
rolb
lret
push
dec
enter
and
add
mov
jle
out
sub
pushf
mov
int
push
pop
sahf
mov
jno
push
or
in
cltd
mov
flds
or
loopne
je
mov
push
outsb
fiaddl
les
pop
inc
adc
sbb
add
xchg
add
fs
daa
jmp
out
bswap
push
push
int3
sahf
andl
scas
adc
popa
out
ror
pop
jmp
or
mov
mov
ficomps
mov
adc
imull
call
sbb
aam
daa
dec
cmp
push
jecxz
jmp
pop
mov
out
adc
lret
repz
addr16
add
rcll
mov
aas
out
into
jbe
pop
test
xor
out
mov
cmc
dec
lea
mov
int
clc
gs
mov
push
stos
mov
add
in
push
shrl
into
fcmovne
jg
pop
cltd
mov
fsubs
jo
sub
mov
sub
inc
cwtl
repnz
std
aaa
adc
stos
push
xchg
mov
mov
ds
add
cmp
mov
push
sahf
daa
cld
sub
fdivl
popa
lcall
ljmp
aam
and
mov
out
mov
ljmp
aam
roll
andb
xchg
lret
cmp
ds
adc
mov
out
stos
push
dec
adc
pop
mov
inc
sahf
dec
outsl
fdivrs
xchg
imul
jge
jmp
repz
mov
add
push
mov
rorb
adc
inc
add
test
jbe
jmp
add
divl
out
bound
push
mov
mov
or
fucomip
into
dec
add
sub
into
mov
rorb
out
gs
jp
into
scas
jl
mov
push
push
mov
aad
ljmp
dec
stos
inc
sar
add
in
test
pop
pop
dec
clc
dec
enter
fwait
scas
dec
imul
dec
shlb
pop
test
mov
or
and
fs
mov
inc
jne
dec
dec
xorb
cld
cmp
pop
movsb
adc
xchg
popa
icebp
jnp
mov
push
aaa
adc
xor
or
cmpsb
xor
out
mov
mov
pop
xor
jmp
lret
fwait
mov
out
or
xchg
orl
fwait
mov
lods
jb
push
dec
vshufps
fnstcw
mov
cmpsb
repz
adc
hlt
fsubs
add
sub
jnp
or
rcrb
loop
sbb
pop
adc
mov
sub
mov
jno
insb
xchg
lock
inc
xor
push
inc
cld
test
cmp
sti
imul
movsl
or
sub
into
inc
rorl
add
push
mov
pop
es
mov
in
fwait
xor
dec
in
sub
test
push
lret
std
or
pop
or
cmc
xchg
dec
push
pop
jle
out
xor
sub
es
adc
lret
loop
xchg
mov
sbb
popf
push
es
aas
lea
jge
mov
cltd
push
adcl
cmp
rorl
pop
lods
aaa
pop
int3
xchg
fisubl
daa
ret
ds
or
mov
pop
cli
aad
mov
imul
and
pop
negb
into
fcom
mov
rcl
jge
sub
add
lods
enter
pushf
sub
fldcw
push
xor
push
out
xchg
lock
push
outsb
push
inc
test
movsb
fsubs
dec
xor
cmpsb
push
jb
loopne
int3
je
aas
sub
pop
sub
pop
or
inc
jae
cwtl
in
test
loope
pushf
mov
cmp
xchg
in
push
mov
test
iret
into
mov
dec
nop
je
pop
push
pop
inc
scas
lret
fs
push
jg
and
sbb
ljmp
xchg
add
fists
lret
mov
movsl
xchg
stos
in
inc
test
es
lret
mov
xor
in
and
pop
xor
fnstenv
fimull
xorb
mov
xor
push
rolb
js
aam
xchg
popa
dec
dec
aam
jns
push
mov
inc
cmc
push
mov
fsubrl
das
arpl
ljmp
or
sub
and
scas
sub
add
push
orl
ror
sahf
push
insl
and
movsb
and
mov
sub
dec
push
mov
repz
jp
sar
sti
pop
outsb
adc
out
push
push
inc
mov
das
cmp
add
jb
gs
push
movsl
movsb
cld
xchg
arpl
jmp
pop
or
push
fisttpl
jge
test
shl
and
test
xchg
pop
pop
mov
nop
dec
rcrb
lods
popf
cld
inc
jg
dec
int
push
mov
pop
in
movsb
cwtl
push
add
push
inc
addr16
test
jg
push
stos
add
scas
iret
decl
push
js
xlat
int
leave
roll
adc
push
imul
test
sbb
xor
mov
mov
xchg
lea
xor
inc
in
fsubrp
popa
sbb
mov
dec
loop
ja
and
lret
push
lret
pop
mov
pusha
dec
scas
push
dec
test
rcl
adc
mov
mov
mov
lcall
imul
ds
mov
mov
push
cmpsb
inc
pop
lods
and
inc
push
add
jmp
fs
mov
add
mov
or
and
into
inc
xor
dec
js
loope
jecxz
into
lcall
aas
mov
inc
jge
jae
inc
inc
lds
fldcw
dec
sbb
pop
scas
mov
mov
mov
push
mov
pop
in
dec
into
sbb
jb
add
cmp
lret
loopne
decl
lcall
sbb
addb
dec
cltd
mov
jp
pop
mov
adc
cmp
aam
scas
sub
fs
imul
and
inc
xchg
push
xor
mov
mov
push
mov
gs
jg
and
subl
xchg
dec
dec
pop
mov
mov
xor
sbb
mov
or
leave
das
inc
fs
into
in
cld
jecxz
bound
outsl
push
pusha
jne
int3
mov
fcomps
mov
dec
jp
push
movsl
push
jbe
lret
fistpl
cwtl
outsb
sub
push
inc
xor
inc
out
stc
xor
jo
je
push
test
mov
or
cmp
add
mov
mov
sub
and
outsl
pop
fildl
sbb
jl
lds
xor
mov
out
ds
rcll
dec
pop
xchg
mov
xchg
push
out
std
pop
and
ja
das
in
rcl
sbb
inc
cmp
pushf
pusha
roll
movsb
nopl
out
adc
dec
in
sub
insl
dec
fiaddl
xchg
inc
jmp
dec
or
inc
add
push
out
cld
pop
mov
jp
fimuls
push
xor
pop
repnz
fsubrs
sub
addr16
push
xchg
imul
sbb
mov
ljmp
pop
pop
in
push
pop
pop
jmp
adcl
lock
add
test
jno
lret
mov
rcr
xorl
int
pushf
xor
out
aam
fldt
cs
dec
ffreep
outsl
xchg
fiaddl
fdivrs
jno
pop
mov
movsl
enter
mov
xor
cmc
mov
movnti
jno
add
adc
les
pop
inc
je
cwtl
mov
mov
xchg
test
lds
sub
jmp
out
je
push
sbb
cmp
fcompl
and
andb
call
daa
pop
test
int
push
inc
mov
lds
emms
out
ror
dec
and
xchg
xchg
mov
xchg
andl
in
andl
adc
mov
adc
mov
and
jl
test
aas
jb
adc
adc
xor
sub
ja
test
mov
pop
int
push
push
lds
scas
insb
add
xchg
jb
test
xchg
fisubrs
or
jecxz
out
or
sbb
ret
cmp
sbb
jae
cmp
or
sub
mov
imul
paddsb
mov
mov
int
xor
test
xor
mov
lcall
shrl
push
ss
clc
imul
leave
shl
pop
pushf
movsl
je
mov
jge
add
adc
rcll
mov
xchg
daa
jae
jle
inc
lock
add
outsb
xchg
aas
push
out
stc
movsl
ret
mov
aam
hlt
scas
insb
inc
in
call
and
mov
insl
adc
mov
rcr
jne
rcrb
cs
xor
into
scas
pop
fsts
out
and
loope
js
pop
fs
gs
ret
stc
push
push
pop
push
fidivs
sti
xchg
lea
push
cli
sub
jl
std
xor
jbe
adc
stos
stos
xor
lret
inc
mov
mov
mov
scas
or
stos
push
in
mov
out
and
jbe
lret
cmp
pop
dec
outsl
and
adc
into
xchg
aas
int3
mov
push
mov
sbb
shl
push
lock
rcl
dec
sub
jae
xor
jns
rorb
loope
lret
mov
cmp
mov
jl
mov
ss
jge
sbb
xchg
out
mov
lods
and
xchg
mov
dec
jno
xlat
add
cmp
cwtl
xchg
lcall
jae
je
lea
dec
inc
sar
in
jge
imul
mov
in
push
sbb
jle
inc
fistpll
add
lret
rcl
cld
fisubs
popw
push
popa
mov
or
filds
into
addb
pop
push
fimull
inc
in
cmc
cmpsl
add
add
ljmp
insl
dec
xlat
movsb
cmpsl
sbb
pop
inc
roll
cwtl
pop
fcoms
sub
xor
neg
dec
shl
insb
notb
mov
or
cmpsb
popf
addr16
iret
sub
mov
jnp
not
inc
and
sahf
add
xchg
pop
add
fmuls
jae
jo
jns
jbe
dec
pop
and
and
stc
out
xorb
sub
dec
jge
dec
push
imul
mov
cli
cmp
ret
cmp
sub
sub
aad
inc
test
iret
test
mov
jnp
aaa
loop
inc
js
xor
aam
pop
jne
push
movsl
rcrb
mov
pop
cmc
movsl
xor
mov
in
ret
lods
push
lods
xchg
xchg
pop
rcr
pushf
pop
add
sub
sbb
addr16
ljmp
mov
dec
ja
cli
ds
gs
sbb
and
push
les
adc
fstpt
in
cmp
pop
popa
xlat
dec
jg
sbb
jl
xchg
in
adc
mov
mov
iret
xchg
mov
add
sbb
mov
push
ror
add
cmp
test
pusha
jbe
push
test
aaa
cmpsl
push
xchg
lods
stos
jno
jo
adc
enter
mov
dec
sbb
push
pop
stc
ss
add
mov
push
mov
mov
dec
leave
xor
inc
jg
dec
mov
lahf
aad
dec
fsubrs
push
jnp
ja
pop
out
aam
popa
call
subb
sbb
push
mov
aad
fadds
movsl
outsl
mov
adc
cmp
lods
mov
mov
push
lret
lret
lea
leave
in
inc
insb
jl
push
push
enter
rcl
xchg
std
cmp
test
mov
pop
lods
lret
leave
push
ret
fcompl
mov
sti
rclb
mov
cwtl
cmp
in
pop
mov
mov
push
push
std
cld
xor
lret
ljmp
adc
cmc
mov
jbe
mov
push
sub
js
mov
xchg
xlat
ljmp
push
sti
mov
fcmovnb
inc
mov
xor
faddl
movsl
orl
dec
and
in
fldcw
std
test
pop
stos
pop
xor
ljmp
test
ds
or
and
adc
insl
cmp
mov
mov
jg
xor
xchg
add
rcl
pop
jb
fdivrp
loope
push
pop
xor
fisttpl
pop
add
ljmp
test
iret
pop
push
hlt
adc
cld
mov
es
ret
or
fisubs
into
adc
call
cwtl
sbb
movsb
loop
jmp
ret
das
push
sbb
int
sbb
divb
xchg
inc
scas
xchg
enter
push
lret
rcl
lea
sub
adc
xchg
js
int3
inc
je
push
and
daa
add
pushf
in
jp
inc
gs
sahf
pop
call
xchg
imul
cmp
ds
clc
push
nop
add
sbb
imul
pop
arpl
ret
outsb
insb
and
pop
push
int3
mov
lret
lcall
imul
push
pop
dec
jmp
aam
jge
or
lahf
xor
push
lcall
icebp
lock
sbbb
shr
jae
into
loop
mov
popf
jb
mov
repnz
xchg
adc
dec
rorl
jns
cs
mov
lret
outsb
add
dec
pop
lds
or
cmp
lahf
mov
mov
stos
fs
jbe
push
std
mov
lret
sub
xor
enter
nop
loope
fnstsw
scas
lret
and
jb
adc
pop
xchg
je
sbb
jl
rcll
cmp
sahf
aam
les
mov
add
addr16
cltd
in
cmc
xor
rcl
cmp
popa
or
pop
or
cmp
ss
xor
lock
rolb
into
bound
inc
insb
fsubrp
mov
inc
push
mov
sub
and
pop
pop
mov
cmp
mov
leave
fwait
loop
xchg
mov
dec
or
push
push
and
pop
pop
int3
ss
or
push
das
inc
pop
mov
int3
dec
dec
xor
dec
fwait
stos
fcompl
cmp
lret
xor
push
pop
push
xor
push
test
cmpsl
dec
mov
fnstsw
sbb
push
data16
fwait
mov
sub
cmp
aas
mov
int3
lret
mov
test
inc
ljmp
lcall
jle
xchg
cmp
add
inc
sbb
testl
adc
adc
int3
mov
push
cmp
pop
insl
xchg
inc
lea
jge
push
push
add
roll
cmp
out
xchg
loope
push
fcom
sub
sbb
movsb
pop
js
inc
cld
adc
cltd
inc
int3
pop
mov
stos
or
ss
lgs
pop
xlat
inc
push
sbb
push
addr16
mov
mov
dec
sub
xchg
fnstsw
lds
clc
mov
shrb
mov
cmp
repz
rorl
jbe
mov
bound
test
xor
dec
or
arpl
lcall
out
jb
and
lahf
movsl
data16
sbb
insl
lcall
hlt
pop
es
push
mov
xor
pop
stos
stc
dec
add
mov
fs
loope
push
scas
aaa
add
xchg
jns
jge
js
fsubl
arpl
rorl
xor
iret
jmp
ror
dec
sub
sahf
in
jno
and
hlt
lahf
aas
xor
dec
in
cmp
imul
iret
andb
jae
js
fcomps
jno
pushf
push
mov
xor
add
cld
cmp
shlb
sbb
sub
fisubrs
shrb
ljmp
pop
inc
dec
pushl
iret
lea
ja
test
xchg
jno
cmp
pop
or
test
mov
clc
cmpsb
sbb
dec
mov
mov
fstps
not
lahf
mov
gs
inc
shrd
les
xchg
cmp
adc
add
inc
repz
test
loop
dec
pop
or
xchg
xchg
out
outsb
lahf
sbb
into
nop
push
or
lock
jb
mov
lods
cmp
jle
stc
rcll
cmp
pextrw
sbb
in
es
mov
inc
mov
mov
xor
lea
push
cmp
fmull
cmpsl
mov
mov
or
in
lods
out
loop
push
stos
adc
adc
inc
adc
xor
add
xor
movsb
push
mov
ret
jl
nop
add
push
sbb
mov
jne
jg
lret
adc
cli
push
jle
cmp
push
add
xrelease
pushf
mov
pop
xchg
xchg
push
nop
mov
flds
inc
and
pop
sbb
dec
dec
rolb
push
fdivrs
xchg
sbb
scas
bound
negb
imull
mov
cmp
xchg
lahf
imul
or
scas
adcb
jle
test
ja
or
push
jl
movsl
pop
sub
jae
int
inc
enter
jns
addr16
push
inc
mov
dec
xchg
sub
popa
jne
sbb
xchg
pop
filds
jb
mov
push
cmp
int
or
js
jmp
inc
dec
cmp
cwtl
sub
push
mov
rol
dec
mov
xchg
jne
and
stos
call
xor
loope
jmp
add
jbe
pop
add
xchg
inc
shlb
push
xchg
xor
push
movsl
dec
add
loope
outsb
in
lret
xor
lret
add
pop
movsl
rcrb
and
outsl
mov
jge
sbb
pop
push
out
aad
incb
fadds
or
push
push
repz
cmp
icebp
aad
dec
pop
sub
shll
rcl
cwtl
mov
push
cmp
jmp
mov
mov
cmp
cli
mov
iret
ss
add
movsb
cli
je
stc
dec
int3
xor
aas
mov
pop
sub
and
sub
jno
dec
insb
or
lret
insl
mov
das
ret
pop
adc
cmp
mov
xchg
sub
jp
mov
in
loopne
andl
dec
in
add
jecxz
daa
xor
xchg
mov
lret
jge
push
lcall
adc
push
xor
jg
push
movsb
adc
or
xor
bound
loop
jae
fldcw
sub
push
pop
or
push
pop
test
inc
cmp
xchg
je
ja
mov
call
stos
shll
imul
mov
jb
pop
mov
insb
push
insl
adc
int
pop
xchg
xchg
in
xchg
int3
cltd
push
inc
ds
adc
cmp
jns
iret
push
mov
aad
add
std
or
jp
pop
mov
insb
xor
jns
push
ret
dec
and
sti
andl
sub
xchg
mov
int3
mov
or
decb
or
sbb
std
ret
fisttpll
push
in
sub
push
dec
rcll
or
push
cwtl
xor
xchg
sub
pop
push
cmp
int
les
mov
jo
nop
loop
clc
xchg
sbb
jnp
insw
dec
lods
dec
out
cmpsl
mov
ljmp
mov
mov
shlb
pop
xchg
jge
fisttpll
push
mov
pop
nop
out
pop
pop
cwtl
in
add
sbb
je
xchg
int
scas
fnstsw
push
push
data16
and
ret
std
mov
mov
fdivp
dec
int
in
mov
push
popf
add
jp
data16
jecxz
out
jnp
scas
add
cwtl
pop
insb
adc
mov
cmp
sbb
push
sbb
lret
sti
mov
push
hlt
cmpsl
jae
arpl
addr16
in
adcb
pop
push
xchg
and
fcmovbe
mov
mov
popa
out
sbb
push
filds
sub
cltd
loope
pushf
popl
daa
xchg
into
and
nop
pop
ja
insb
arpl
fst
imul
insb
nop
int
push
in
and
mov
notb
ds
mov
or
adc
aam
cmp
cmpl
pop
lods
pop
push
or
negl
test
jbe
xor
daa
mov
arpl
lea
imul
fisttpll
jo
cs
mov
mov
icebp
push
pop
inc
jb
add
ds
hlt
mov
out
js
leave
sbb
pop
clc
cltd
dec
rclb
mov
lock
fadd
cs
add
jnp
fcmovu
stos
add
int3
dec
sbb
cmp
fstl
loop
sub
adc
sbb
adc
stos
mov
cmp
sub
daa
xor
sbb
dec
and
in
cs
loope
mov
fstl
std
int3
test
scas
into
insl
or
push
push
sub
in
fstpl
jg
nop
xchg
cmp
stos
int3
push
cmp
sub
fimuls
xchg
into
in
lret
cli
mov
mov
aam
roll
jg
sbb
dec
pop
adc
fsubrp
or
sahf
sbb
mov
in
repz
es
jmp
sbb
dec
in
xchg
ficompl
lock
or
adc
sarb
xchg
adc
bound
aam
jle
adc
gs
loopew
cltd
loop
lret
int
dec
rorb
pop
ret
add
icebp
xchg
cmp
insl
pop
stc
and
cmp
jns
xchg
inc
test
popa
insb
push
inc
clc
test
mov
ds
fstps
xchg
in
push
inc
inc
mov
mov
or
mov
mov
dec
lcall
leave
mov
fldenv
push
mov
lods
gs
and
and
mov
fdivrs
ds
aas
jne
test
aaa
sbb
xlat
push
nop
sub
pushf
hlt
not
sbb
mov
shrl
and
or
push
mov
xor
push
ja
shl
mov
push
je
and
cmpsb
bound
pop
mov
rolb
adc
out
push
sub
cmp
lods
dec
addr16
jne
insb
jecxz
adc
fs
or
aam
pop
cmpsl
sbb
pop
ss
sub
lret
jg
jge
stc
xchg
fldenv
mov
test
or
cs
cmp
or
mov
cld
fsubrl
xchg
ja
adc
and
popf
jge
movsb
sbb
leave
imul
rcrl
jle
or
test
dec
mov
mov
mov
loopne
nop
bnd
leave
push
les
jne
iret
pop
xor
dec
mov
add
mul
and
addr16
stc
lret
pop
out
xchg
aam
or
mov
jmp
aaa
xchg
sbb
mov
mov
testb
xchg
xor
jb
adc
add
sub
cmp
inc
mov
loope
mov
out
aaa
push
mov
add
add
xor
adc
ret
mov
rcl
js
gs
sarb
pop
mov
scas
mov
in
adc
loope
inc
je
xchg
fadds
clc
pop
sub
bound
scas
adc
inc
lea
not
or
jge
shll
sbb
sbb
into
sbb
pop
push
mov
test
push
push
call
adc
popa
sub
fsubrs
mov
xchg
ret
ret
repz
jp
dec
inc
mov
test
cmp
mov
ljmp
fisubrl
int3
leave
sub
push
cmpsl
cli
xchg
dec
dec
mov
leave
mov
sub
pop
outsb
mov
clc
jns
loope
mov
cmp
cmp
ja
aaa
enter
in
cmp
push
push
lea
jae
out
das
stos
cli
sar
cmpsb
nop
adc
les
adc
add
stos
in
in
or
insl
jge
adc
add
jmp
rorb
xadd
ret
test
fsts
push
lret
and
adc
sbb
int3
xchg
aad
ss
roll
addb
clc
mov
fcoms
xor
cltd
into
add
lds
pop
ljmp
cmpsl
inc
jo
push
int3
int
inc
jns
xchg
mov
dec
xchg
push
push
push
cmpsl
cs
mov
test
dec
xchg
xor
orl
or
sti
fidivs
push
out
sar
pusha
add
test
xchg
loopne
mov
or
sub
adc
lods
push
dec
mov
push
sbb
nop
mov
ljmp
mov
daa
lock
dec
pop
int
aam
push
push
insl
roll
sub
and
jmp
leave
shll
push
das
mov
mov
xchg
adc
or
push
push
int
jbe
sbb
add
fmuls
cmp
mov
addr16
mov
cwtl
add
std
mov
xchg
daa
dec
push
out
push
fbld
xor
mov
iret
nop
jl
addl
mov
cltd
rorl
adc
mov
pushf
pop
out
test
push
fcmove
sarl
repnz
jge
jns
addr16
lods
mov
stos
scas
push
jnp
cmp
test
dec
mov
and
jecxz
in
pop
xchg
add
cli
inc
and
je
add
inc
ss
call
add
popa
add
inc
dec
ret
or
repnz
adc
out
and
cmp
push
sbb
aaa
cmp
and
push
imull
rclb
push
inc
mov
repz
add
sbb
sti
push
xchg
sub
into
or
and
xchg
pop
fcom
jge
cmp
pop
roll
test
jp
dec
pop
dec
add
lret
gs
fbstp
cs
sbb
xchg
cmp
lret
inc
add
loop
ja
iret
dec
add
clc
std
mov
es
test
mov
ror
mov
or
ficompl
std
mov
or
adc
sub
call
mov
imull
mov
icebp
push
push
fs
arpl
dec
jae
fsts
div
mov
iret
mov
and
add
and
popf
imul
cmp
stos
sbb
shrb
stos
sub
pop
add
cli
dec
lahf
mov
push
jle
movb
jns
rcl
mov
rorl
sbb
in
mov
rclb
outsl
dec
mov
mov
in
add
inc
aas
dec
iret
and
cld
dec
int
push
inc
stos
mov
or
repz
sub
push
and
fnsave
test
xchg
sbb
and
jp
cs
lds
push
neg
xchg
sbb
and
xor
push
cmp
xlat
inc
adc
movsl
sub
iret
divl
pop
js
flds
push
mov
jno
not
insb
lea
in
push
stos
movsb
into
push
sarb
fcmovbe
or
or
jns
fstl
mov
out
mov
sahf
xlat
xchg
in
or
fs
dec
imull
movsl
mov
cmp
sbb
in
popa
push
rolb
fldenv
push
xchg
test
arpl
jecxz
outsb
sub
jae
movb
push
xor
dec
push
int
addr16
or
xor
push
std
andl
aad
xchg
jbe
jg
lahf
rcrb
fisubl
push
xchg
mov
movsl
je
sub
aam
mov
jg
movb
xchg
ror
addr16
mov
hlt
ds
push
mov
pushf
inc
fs
inc
or
scas
adc
lahf
xchg
and
test
test
jmp
push
jp
or
dec
mov
pop
mov
sub
cmpsb
icebp
or
ljmp
aad
test
pop
jmp
bndldx
mov
lods
scas
and
fwait
out
imul
jecxz
push
cmp
add
pop
stc
jge
mov
sub
lret
mov
shrl
mov
inc
test
imul
xchg
xor
lret
sub
fistps
enter
rcr
sub
push
and
ds
push
push
dec
call
mov
and
pop
adc
lods
aaa
xorl
test
aad
jle
dec
pushf
xor
outsl
ljmp
adc
neg
into
in
out
add
pop
mov
stos
or
arpl
movsl
push
call
push
sbb
xor
fbstp
in
xorb
add
into
loopne
popa
mov
lds
mov
rcrb
jmp
inc
movsl
cmpb
insl
fs
and
decb
lahf
cmpsb
lds
or
xchg
out
adc
sbb
sbb
ds
mov
mov
lods
sub
int
add
popf
cmp
mov
adc
mov
rcll
in
push
push
mov
mov
mov
test
decl
nop
movsb
inc
mov
lock
push
push
popa
out
pop
jmp
xchg
jae
mov
jne
mov
or
outsl
aad
andb
lock
jbe
xor
in
push
push
mov
mov
mov
dec
or
movsl
pop
inc
test
repnz
lcall
imul
subb
jge
arpl
mov
je
lret
pop
sub
dec
sbb
mov
inc
xor
jb
int
pop
aas
add
mov
xchg
jns
call
xchg
cltd
adc
dec
or
add
sub
jge
lret
mov
mov
pop
add
ret
ja
incb
rcl
imul
pop
and
fidivs
push
adc
or
jmp
and
ret
cmpb
mov
push
push
test
in
add
es
mov
imul
adc
in
pop
aaa
cwtl
stos
mov
pop
iret
inc
gs
inc
test
dec
loop
add
cmc
cltd
lahf
mov
cmp
xlat
jle
test
out
push
xchg
out
sub
mov
push
decb
mov
pop
popa
pop
push
xchg
mov
out
sub
popf
inc
sbb
mulb
js
push
mov
shll
mov
sbb
fs
mov
xlat
gs
and
push
jno
jecxz
in
scas
mov
adc
adc
or
icebp
loope
ret
in
out
and
mov
data16
jae
pop
mov
imul
dec
cmp
test
mov
lahf
xor
aam
sub
sbb
fwait
xor
out
inc
dec
push
xchg
xlat
test
or
jb
cmp
popa
iret
arpl
cs
sub
push
addr16
xchg
lahf
out
pop
jl
popa
enter
in
fisttpl
jne
cmp
lret
gs
or
sub
mov
lret
js
mov
dec
mov
jg
into
imul
xor
rcl
insl
jge
mov
ljmp
cmp
dec
xchg
imul
mov
push
mov
or
pop
gs
lods
xlat
aam
arpl
xorl
xor
sub
sbb
xorb
je
jge
and
pop
or
out
pop
sub
es
cld
dec
adc
enter
std
test
loopne
sub
mov
in
in
pop
ret
xchg
daa
mov
cld
test
sarb
push
ljmp
mov
idivb
out
mov
xor
lock
pushf
in
sti
lods
xor
or
adc
mov
stos
mov
out
pop
dec
sub
icebp
push
push
scas
jne
mov
dec
adc
lods
imul
fwait
mov
lahf
andl
mov
imul
sub
pop
jno
mov
cmp
scas
xchg
test
incb
divl
stc
jbe
mov
into
and
pop
roll
push
dec
lock
jae
push
jo
and
shl
addr16
fcom
mov
sub
rcr
outsl
add
pop
mov
pop
insl
icebp
stos
ljmp
lea
inc
cmp
std
mov
call
cmc
outsl
add
lds
lods
cld
arpl
sti
adc
mov
xor
rorb
mov
sub
xchg
pop
leave
cs
rolb
inc
fsubr
lock
data16
mov
xchg
aam
or
jp
in
movsl
push
loop
dec
movsb
je
outsb
test
or
inc
icebp
pop
or
adc
into
es
repnz
adc
rcrb
ds
jne
mov
mov
xchg
jle
push
out
mov
int3
sub
imul
into
test
push
dec
push
lret
mov
mov
inc
repnz
shll
ret
in
adc
and
and
xchg
cmp
adc
out
addr16
in
loopne
mov
lret
inc
cmp
insl
mov
xchg
mov
xchg
push
lods
test
aad
pop
ficoml
adc
mov
sub
popf
shll
int
inc
out
add
leave
clc
xor
movsl
lods
dec
xchg
jle
int3
mov
fsubs
push
scas
xlat
fcompl
iret
jae
imul
ja
in
gs
aaa
xchg
mov
or
jge
dec
jno
ficomps
cmp
xchg
jnp
cmp
dec
movsb
es
icebp
mov
sbb
pop
sub
out
clc
in
mov
and
incb
mov
lahf
cmp
leave
xchg
xor
jg
roll
scas
pusha
xor
mov
lret
dec
push
or
es
fiaddl
pushf
arpl
aad
fisttpl
sub
and
adc
in
out
jo
xor
or
das
cmpl
rcll
mov
jge
jo
push
pop
xchg
repnz
loope
jb
cmp
lds
fistps
cmp
rcrl
add
jecxz
pop
jne
test
sub
test
aas
leave
mov
hlt
repz
xor
test
xor
and
jne
jecxz
inc
push
leave
mov
bound
xchg
xchg
adc
shll
aas
decl
bswap
pusha
gs
fwait
push
cmp
call
nop
dec
insl
jmp
xchg
mov
adc
sti
into
cmp
or
jno
ja
dec
into
fcmovb
dec
stc
setg
imul
aad
shr
xor
xchg
int
insb
mov
inc
ds
cmp
cmp
mov
testb
rorl
dec
nop
mov
mov
imul
aas
jl
sub
ret
pop
iret
inc
lds
mov
jo
cmp
sbb
mov
cmpsl
jae
mov
add
je
and
ja
sub
xchg
adc
push
inc
aam
jb
xchg
je
js
scas
cmp
mov
repnz
and
subb
pop
adc
dec
ror
popf
cli
ret
push
mov
mov
dec
popa
addl
cmp
and
sbb
mov
sbb
out
ret
push
adc
jne
dec
test
in
fidivrl
fstpt
mov
testl
pop
mov
cmp
stos
mov
jge
or
mov
mov
outsb
sarb
das
repnz
pop
std
rorl
bound
pop
insl
lods
jae
test
test
fldl2t
out
xchg
adc
into
jne
mov
in
lretw
test
in
push
movsb
xchg
mov
dec
stos
cwtl
mov
imull
leave
test
int
mov
cmp
gs
mov
out
push
fcomip
jg
sub
shl
aas
mov
push
sbb
rcrl
cmp
std
push
cmp
and
popf
xchg
or
into
lods
cmp
push
or
leave
mov
into
dec
bnd
jbe
nop
popf
xchg
sbb
adc
jle
xchg
mov
adc
inc
lret
xchg
rcrb
dec
lret
bound
xchg
stos
stos
dec
inc
adc
and
icebp
adc
cmc
pushf
mov
ret
addr16
xchg
dec
loopne
movsb
lea
inc
mov
rorl
xchg
sbb
sub
das
mov
icebp
mov
mov
lods
es
int
jp
outsb
xchg
cmp
sub
outsl
movsb
xchg
icebp
sbb
mov
aam
xor
cmp
je
into
jl
add
and
fnstcw
int
into
mov
xor
inc
xchg
mov
pop
pop
adc
push
add
ret
jmp
test
inc
fs
test
jbe
arpl
lods
fdivr
imul
test
jge
das
jb
movb
dec
pusha
repz
push
add
test
negl
addr16
loope
or
fs
pop
pop
adc
in
and
mov
or
jecxz
movsl
add
ret
cwtl
fs
stos
adcl
add
pop
sub
sub
or
mov
or
xor
push
or
xlat
insb
es
cmp
jle
jno
xchg
jo
sbb
fmull
push
fbld
xchg
dec
and
subb
pop
dec
movsl
out
xchg
icebp
push
add
adc
mov
jb
xchg
subl
std
into
lret
test
out
xchg
arpl
xchg
mov
out
xorb
lret
mov
int3
add
shlb
shll
sbb
pop
sti
xor
shll
mov
push
icebp
inc
xchg
or
into
xchg
inc
mov
mov
cmp
in
pop
out
imul
scas
lret
xor
out
cmpsl
xchg
jl
daa
insb
rcll
pop
mov
and
or
push
je
shll
jae
lcall
mov
push
das
push
dec
dec
gs
imul
lcall
sti
sub
sub
mov
mov
cmc
cmp
movsl
add
push
bound
jnp
mov
or
xchg
je
int3
rolb
cmp
cmpsb
lods
scas
cltd
and
push
jno
pushf
xchg
add
shlb
pop
xchg
daa
pop
sbb
mov
mov
xor
pop
or
test
jo
lcall
sub
inc
int
mov
addb
sbb
test
test
or
dec
aam
cmpsb
mov
cmp
cmp
rol
andb
jne
xchg
cwtl
into
xchg
fstpl
push
and
rcll
iret
fwait
loop
push
das
dec
cwtl
insl
loopne
mov
fimull
adc
xor
xchg
subl
cltd
je
jbe
ss
loopne
sbb
dec
loop
mov
push
jg
or
mov
and
and
sbb
movsl
xchg
fmull
add
dec
ss
scas
sbb
loop
mov
and
lock
hlt
or
pop
mov
mov
out
xchg
call
sti
in
adc
int
jne
movsb
push
shll
movsl
sbb
into
les
test
sar
shl
call
adc
sbb
addr16
into
lods
mov
les
xchg
adc
inc
ss
punpcklwd
ret
out
das
push
hlt
mov
xlat
xlat
push
nop
jecxz
mov
loop
aas
pop
mov
lods
cmp
fstpl
xchg
push
hlt
arpl
leave
das
jae
push
enter
insb
ljmp
sbb
cmpsb
xchg
inc
push
pop
pusha
scas
in
inc
shlb
inc
cmp
xchg
out
out
mov
jo
inc
sbb
shlb
adc
rcl
mov
ja
fstps
cltd
loopne
xlat
sub
cmp
xchg
into
pop
add
pop
sub
cli
xor
dec
les
jmp
fists
rcrb
mov
jg
ja
push
pop
lds
dec
push
mov
out
push
in
aad
lcall
jbe
and
inc
add
outsl
xlat
repnz
sub
aad
or
pop
jae
movsb
iret
add
iret
mov
pop
jmp
xchg
dec
mov
fcoms
jmp
movsb
lahf
leave
int3
adc
lods
enter
les
sub
inc
das
dec
es
sahf
xor
sbbl
push
pop
sub
orl
fs
mov
out
addb
clc
sbb
ljmp
jl
in
mov
push
dec
sbb
dec
outsl
pop
push
mov
mov
xchg
in
cmc
stc
ljmp
xchg
inc
lcall
xchg
or
jle
mov
aam
xor
and
or
outsb
fst
adc
or
into
inc
push
iret
cmpsl
dec
out
xchg
mov
or
inc
adc
movsb
ja
push
add
in
inc
mov
xlat
int
mov
or
adc
adc
lret
clc
movl
push
outsb
inc
sub
in
pop
mov
mov
lods
jl
cwtl
jg
dec
lret
jne
test
sbb
push
out
cmp
sti
outsb
leave
fbstp
out
ljmp
shlb
cmp
stc
in
mov
cmc
mov
fwait
jno
mov
jb
mov
pop
test
dec
in
or
and
imul
jbe
cmp
pop
inc
call
push
mov
mov
mov
repnz
stos
bound
imul
test
dec
or
push
lret
dec
adc
fdivs
addr16
push
cmp
pop
xor
and
xor
lahf
fidivrs
dec
inc
push
cmc
pop
jbe
sub
cmp
push
jecxz
mov
enter
push
out
and
adc
mov
fisubl
and
push
sbb
out
data16
sbb
fs
cld
and
push
inc
notb
fdivrl
popa
iret
xchg
mov
adc
and
outsb
lret
mov
popf
addr16
dec
das
jecxz
mov
inc
fs
xor
cld
inc
js
or
popw
lret
sub
mov
fcmovnb
cmc
shll
dec
jns
mov
xor
push
lret
std
fmull
or
push
pop
dec
int3
mov
add
ds
dec
mov
shl
lds
movsl
cmpsb
jb
xchg
repz
ret
xchg
or
add
xchg
jmp
push
gs
mov
in
das
leave
push
mov
mov
adc
fdiv
mov
cmp
pop
sbb
xor
or
gs
hlt
dec
mov
jge
mov
push
mov
sbb
in
lcall
shlb
aam
outsl
sbb
push
pop
or
dec
fcoms
mov
movsl
adc
mov
jg
or
jo
movsl
cmp
pop
push
pop
fs
dec
pop
enter
daa
dec
lea
clc
or
add
sbb
mov
loope
sti
pop
or
pop
sahf
popf
fimull
lods
sub
mov
icebp
adc
hlt
mov
lea
inc
pop
mov
sbb
aaa
mov
stos
and
or
inc
jno
mov
mov
out
ljmp
xor
pop
std
mov
rolb
test
into
xlat
loope
addr16
or
and
out
test
sbb
sbb
or
mov
adc
je
jle
aaa
out
mov
cs
push
rol
sub
sbb
push
aam
imul
sub
jns
shrb
dec
lods
push
pushf
push
inc
aad
addb
mov
jo
addl
fnstsw
imul
lret
stos
dec
add
or
std
testb
xor
aad
adc
cmp
movsl
mov
sete
aas
pop
xchg
pop
cmpsl
std
add
add
ja
out
jbe
or
mov
in
xor
push
dec
mov
cltd
inc
loopne
movsl
inc
nop
and
test
adc
sbb
jbe
ds
into
mov
jae
test
sub
inc
xlat
js
dec
push
mov
cmp
push
add
enter
fsubs
jle
push
mov
lock
cld
adcb
jge
pop
cs
in
jp
adc
pop
dec
pop
fidivs
xor
outsb
add
int3
mov
push
xchg
or
push
sbb
dec
fstps
addr16
mov
xchg
jo
adc
mov
push
imul
fcompl
mov
lret
nop
mov
push
in
or
inc
add
jne
sbb
mov
dec
mov
and
push
ss
popf
aad
repz
mov
inc
addr16
js
pop
adc
sahf
mov
subb
jg
test
cmc
inc
push
dec
imul
out
out
or
push
and
ss
pop
pop
or
or
and
cli
pop
mov
mov
jg
adc
sbb
pop
jge
sub
aam
lds
mov
xlat
mov
xorl
sbb
jbe
repnz
adc
lret
push
jmp
and
imul
or
dec
lret
and
jmp
int3
jnp
cmpsl
sub
repz
pop
jb
lea
ret
jae
lods
ret
adc
pop
and
fcmovnb
orl
hlt
xorb
test
mov
test
pop
popf
mov
add
out
test
std
lcall
lds
mov
pop
es
lahf
push
into
pop
dec
sub
inc
inc
jmp
or
lret
sbbb
sub
pop
outsl
lret
add
pop
or
lods
mov
mov
popf
daa
fcom
sub
aad
jns
sbb
das
test
jl
mov
sbb
sub
xchg
dec
cmc
sub
add
mov
stc
lret
in
fiadds
popf
jmp
jecxz
lret
ja
xor
xlat
fdivl
dec
xor
cmpb
sbb
mov
xchg
cltd
es
push
jo
cmp
inc
xor
mov
jno
das
aad
mov
dec
mov
ret
jle
arpl
int
aaa
pop
mov
in
in
fsts
sbb
cwtl
sbb
cmp
repnz
idivb
jno
mov
cmp
iret
popf
insb
mov
imul
inc
adc
orl
js
mov
addr16
xor
inc
cli
push
push
outsl
inc
test
int3
jecxz
cmp
adc
dec
pusha
mov
lcall
dec
mov
popa
xchg
sbb
jle
psubb
xchg
push
mov
pop
cmc
fdiv
pop
enter
movsb
xchg
and
mov
mov
push
sub
add
jns
lods
mov
pop
xlat
sti
inc
loop
mov
pop
xchg
lods
and
push
out
andb
inc
cmp
repnz
adc
push
mov
sbb
cli
push
scas
mov
sti
mov
and
dec
sub
and
test
outsl
hlt
xchg
sbb
loop
sub
int3
adc
rol
repz
sahf
and
jl
addl
lcall
mull
aad
dec
out
or
stos
movsb
inc
insb
imul
xor
mov
dec
dec
ss
push
icebp
cli
and
movsl
mov
ja
adc
mov
xor
jb,pn
mov
mov
arpl
or
out
outsb
sub
jne
mov
mov
sbb
push
or
jnp
adc
adc
stos
xchg
es
gs
dec
fisubrl
stc
mov
lock
rolb
in
mov
ss
call
loop
scas
or
dec
pop
xchg
aad
dec
enter
lret
xchg
mov
vsqrtss
push
decb
cltd
rol
scas
mov
rcrb
push
data16
cmc
jp
repnz
pop
out
pop
fisubrl
popf
loop
dec
shlb
and
or
jbe
in
into
imul
fsubs
mov
mov
aas
cmp
jb
inc
imul
je
daa
jmp
xor
aam
inc
xchg
arpl
lds
out
add
lds
cmpsl
lahf
and
into
add
sub
lock
jp
mov
cmc
mov
cmp
fstps
adc
jo
iret
sub
jmp
ret
push
ljmp
outsl
fldenv
pop
idivl
cmp
out
repnz
xchg
sbbl
mov
mov
sbb
xchg
mov
or
ret
sahf
ds
dec
aam
xchg
sub
out
push
adc
dec
cwtl
cmc
sub
xor
cli
mov
xchg
and
fsubr
out
sbb
xor
mov
or
in
dec
cmpsb
je
shr
jo
repz
dec
cmp
inc
lret
xchg
sub
pusha
jg
es
push
data16
jb
sbb
out
mov
call
test
push
inc
mov
dec
push
cmp
out
mov
cmpsl
imulb
out
dec
dec
dec
mov
out
into
xchg
mov
cmp
sub
pop
jae
xchg
jb
es
sti
scas
or
cmc
int3
ds
add
pushf
std
sbbb
or
mov
stos
dec
popa
and
and
pop
jg
push
icebp
and
jl
xor
pop
jg
add
dec
imul
sbb
or
hlt
xchg
into
and
addr16
jne
push
fistpll
ret
fdivrs
leave
dec
adc
mov
and
fstl
rorb
loope
cmc
lahf
add
aas
mov
cmp
pushf
xor
push
adc
lods
leave
lds
imul
movsl
push
hlt
rclb
in
jle
es
xor
xchg
jg
push
andb
repnz
add
mov
or
data16
mov
jnp
adc
shll
rorb
push
mov
adc
dec
pop
int3
arpl
and
sbb
jno
sbb
adc
lret
jb
cmpsl
imul
cmp
lods
orl
nop
stos
add
xchg
xor
negl
adc
jns
fldcw
xchg
inc
mov
call
jmp
out
push
xchg
xor
xor
fdivp
sub
pop
je
or
jbe
stc
jbe
rcr
cltd
lret
jp
scas
out
ljmp
xlat
push
outsl
xorl
rorl
adc
lret
inc
test
mov
arpl
mov
insl
push
and
sahf
clc
jns
xchg
push
gs
daa
stc
jbe,pt
and
dec
in
js
test
aad
adc
test
or
sub
push
xor
leave
mov
jle
jge
out
mov
xor
jl
sbb
shl
bound
mov
stos
icebp
negb
arpl
push
fcoms
movsl
mov
test
stc
jae
cs
jmp
pop
pop
xor
xchg
shl
ret
or
addr16
dec
and
cmc
mov
in
data16
push
xlat
add
mov
xor
inc
inc
leave
push
pop
in
ret
ds
xor
out
and
lahf
icebp
shrb
inc
jne,pt
mov
mov
repz
fst
cli
fdivs
mov
or
jno
adc
pop
xchg
dec
divb
into
scas
in
test
iret
fisubrl
mov
add
mov
rcl
and
aam
xchg
xchg
loop
push
adc
outsl
test
mov
arpl
sbb
push
js
sbb
movsl
test
mov
mov
pop
hlt
push
ds
adc
adc
arpl
cmp
sarb
and
scas
sbb
sub
inc
xchg
add
nop
in
mov
pusha
sbb
leave
or
and
arpl
adc
mov
sbb
inc
fiadds
out
bnd
dec
sbb
push
loopne
rcrb
idivl
push
inc
lods
pop
xchg
xchg
sti
pushf
jmp
xchg
or
int3
movsb
fwait
mov
pop
mov
xchg
popa
pop
fstps
xchg
xlat
clc
call
sti
into
xchg
repz
popf
adc
cmc
in
push
push
add
clc
leave
inc
cmp
push
iret
nop
inc
pop
dec
data16
xor
adc
xchg
dec
mov
movsl
mull
test
lea
sbb
xor
std
aaa
push
jb
sti
jmp
inc
xchg
mov
loop
test
rorl
iret
mov
out
pusha
jmp
lods
cmp
pop
movsb
mov
std
int
push
lahf
scas
aas
or
jo
push
mov
inc
out
cltd
adc
jae
dec
adc
enter
cmp
test
mov
push
movsb
jp
daa
pop
int3
popa
pop
test
mov
dec
incl
test
into
mov
sub
sti
cmp
sub
mov
or
push
mov
mov
jbe
mov
sbb
lds
icebp
out
scas
push
aam
adc
xchg
in
mov
fcoms
mov
fs
fwait
pop
jge
and
cli
cmp
stc
in
adc
or
sbb
inc
jne
cld
imul
adcb
jo
dec
cmc
push
mull
mull
out
pushf
lret
jl
aad
xor
data16
mov
xchg
sub
mov
pop
cli
out
movsl
pop
rorl
mov
jl
aas
push
lea
xchg
ljmp
jbe
xlat
pop
mov
out
xor
jnp
and
fidivrs
xchg
cs
into
mov
fsubrl
ja
in
into
cmp
mov
sbb
xchg
out
pop
pushf
aas
notb
insl
aam
nop
addr16
adcb
jge
lret
iret
in
sbb
in
push
loope
add
movsb
popa
jne
ror
ret
and
push
jbe
pop
sub
xchg
inc
into
fcmovb
icebp
push
dec
push
jmp
cs
in
inc
sbb
out
sub
jge
in
mov
shlb
adc
ret
arpl
dec
sub
int3
and
mov
lret
out
cmpsb
repnz
inc
fldenv
adc
into
sub
into
xchg
fisubrl
xlat
jmp
jmp
mov
mov
into
stos
dec
mov
lahf
push
test
mov
jbe
jno
nop
aam
pop
roll
jb
int3
outsl
cmp
mov
sub
sub
jae
and
out
iret
loope
sbb
mov
inc
push
jbe
push
jne
pop
into
xchg
xchg
sbb
addr16
scas
movb
dec
punpcklwd
mov
sub
insb
or
in
xor
leave
dec
shrb
out
outsb
test
cmp
andb
leave
pop
shlb
add
mov
push
rclb
out
loop
loopne
add
imul
daa
aas
cmc
xor
ja
mov
es
dec
lea
xlat
push
gs
mov
out
xchg
imul
shrl
out
insl
sub
mull
or
adc
shll
push
add
fcmovu
xchg
sub
jns
and
jae
loopne
popa
xchg
sub
scas
pop
arpl
mov
push
jge
cmpsb
push
adc
lret
jnp
mov
xchg
aad
fdivs
jl
roll
les
arpl
dec
jecxz
xchg
movb
data16
sub
cmp
dec
in
in
adc
rorb
ljmp
std
test
outsb
xor
sbb
mov
lock
mov
inc
dec
insb
std
pop
lret
jge
lea
xor
xchg
mov
xchg
pop
dec
xchg
pop
js
and
jbe
push
push
adc
adc
sbb
and
lahf
cmp
mov
call
mov
cmp
into
ret
roll
mov
xchg
into
inc
pop
enter
push
inc
mov
popa
xor
mov
std
or
xchg
xor
aad
adc
addb
pushf
shrl
push
push
xor
push
fnstcw
sbb
es
lret
stc
inc
mov
sub
popa
or
push
mov
sbb
jae
or
lcall
das
jns
dec
xchg
les
call
push
jbe
sub
and
scas
clc
into
jle
movsl
push
addr16
jnp
inc
xor
fadds
out
push
les
fnstsw
movsb
cmp
pop
or
div
ret
jne
test
nop
pop
push
cmp
cmc
lret
mov
movsb
and
into
and
sahf
jg
mov
xor
jbe
xor
out
nop
and
out
jae
popa
fstl
lods
aam
mov
mov
sub
xchg
aam
or
insb
bound
add
das
test
mov
xchg
mov
push
adc
or
sub
jnp
lea
and
out
mov
xchg
cltd
mov
mov
mov
jge
jbe
leave
lcall
mov
lds
mov
jle
xchg
cmp
pop
mov
xchg
in
imul
lret
fwait
and
adc
ficoml
dec
fists
repnz
fwait
mov
or
adc
push
xchg
test
inc
add
arpl
mov
sbb
aas
dec
int3
push
cs
mov
push
adc
mov
mov
xor
and
push
mov
outsb
rclb
xchg
pop
jo
arpl
movsl
and
and
push
fstpl
lock
pop
mov
lods
mov
das
mov
pop
push
push
clc
test
out
lods
scas
mov
xchg
push
mov
in
jne
shrb
add
cli
or
in
es
out
mov
pushf
scas
and
and
adc
push
fsubl
mov
cmpsb
sahf
mov
xchg
into
aas
scas
setbe
iret
pop
mov
mov
mov
rolb
shrb
jp
sub
imull
pop
xlat
lahf
movsl
mov
fbstp
mov
incl
adcl
mov
pushf
jg
mov
dec
xor
inc
adc
adc
sub
popf
push
ret
pop
xchg
push
gs
rcr
mov
sahf
or
test
gs
stos
insb
mov
movsb
xchg
jmp
sbb
ja
push
lret
fimuls
rclb
aas
adc
into
orl
not
and
pop
jb
insb
sahf
xchg
test
into
jmp
lcall
add
sub
sbb
rorl
sbb
sarl
inc
cmp
ficoml
dec
test
ret
or
mov
adc
cmp
sti
mov
dec
mov
jg
xchg
jecxz
push
or
dec
sub
shll
push
sub
push
cld
dec
push
mov
add
int3
lods
mov
out
inc
scas
pop
test
cmp
fdivr
loop
cwtl
in
mov
scas
mov
call
jmp
push
xchg
mov
movsl
mov
cmp
jo
outsl
push
clc
ja
mov
ds
jo
enter
push
int
fs
mov
cmp
js
jmp
rorb
hlt
testb
add
mov
or
mov
addr16
lds
call
sbb
out
or
xchg
ss
xor
mov
in
inc
mov
test
gs
mov
imul
fisttps
push
mov
rolb
in
add
insb
shlb
fs
jae
into
or
cmp
xor
sarb
xchg
js
dec
add
cmp
lods
iret
movsb
aaa
rclb
outsb
cmc
xchg
jp
hlt
mov
mov
or
push
jecxz
jns
jae
les
mov
and
scas
add
or
ret
pop
mov
cwtl
sub
nop
pop
or
dec
jecxz
jo
dec
mov
cmp
es
fadd
mov
sub
decb
test
loopne
and
inc
push
ret
fstl
mov
leave
fldcw
dec
xor
xor
push
ficoms
jo
movsl
ds
pop
push
lret
adc
mov
add
lea
inc
push
fcmove
sub
nop
xor
cltd
es
rcr
lds
into
out
push
fadds
call
fsubrs
pop
bound
jl
jnp
xchg
in
mov
push
sbb
arpl
dec
scas
dec
in
jbe
sbb
cli
cmc
mov
loopne
mov
mov
sahf
inc
data16
es
fdivrl
cmpsl
jne
les
int3
gs
je
sub
inc
or
data16
jne
or
addb
push
adc
into
imul
adc
push
or
xchg
cmp
mov
sbb
push
dec
push
mov
xor
addr16
lock
dec
pop
leave
cmp
lret
adc
xor
mov
xchg
mov
xchg
shll
mov
in
imul
xchg
xchg
push
hlt
jne
sub
ds
xchg
inc
lret
mov
push
mov
inc
push
jno
insb
and
jecxz
aas
fnstsw
pop
in
xor
outsl
ret
pusha
outsb
sub
mov
sub
mov
sub
xchg
ret
hlt
cmc
sarb
mov
out
or
xchg
adc
leave
push
inc
fistpl
insl
sarl
scas
rcl
xchg
xchg
sub
xchg
ret
mov
nop
sahf
adc
test
pop
insb
ljmp
xchg
push
or
nop
rol
fldl2t
out
jl
sahf
mov
in
shl
lods
js
mov
in
call
xchg
inc
mov
mov
test
out
cmp
and
cmp
sbb
sti
mov
jb
mov
lods
sti
icebp
push
jl
push
inc
cs
fcoms
jbe
stos
ds
sub
cmp
add
shll
pop
xor
and
ds
mov
out
mov
cmp
pop
clc
cmp
xlat
and
fmulp
xlat
and
mov
daa
lret
dec
mov
sti
push
and
out
fidivl
xor
mov
fs
xchg
dec
pop
or
aam
repnz
in
fsqrt
idiv
shlb
jns
ja
mov
adc
push
jbe
test
adc
ret
fs
xor
push
dec
hlt
in
or
push
adc
int3
lds
mov
cmp
das
xchg
ds
iret
dec
or
leave
loopne
stos
scas
pop
push
jp
ret
shll
addl
xor
aad
mov
lea
adc
push
mov
pop
mov
pop
jb
mov
cld
dec
push
adc
rcr
ret
xor
cmpsl
cld
cmp
sbb
popa
cmp
iret
gs
pop
movsb
fs
cmp
stc
popf
pop
xor
or
sbb
mov
out
jg
push
dec
fwait
mov
mov
or
push
orl
out
in
push
out
not
ljmp
jns
pop
cmp
aas
scas
jl
lret
inc
mov
sub
add
dec
inc
movsl
mov
rcl
stos
nop
mov
sub
pop
cpuid
mov
int
les
mov
xor
addr16
cmp
aaa
mov
cltd
sub
dec
shll
je
mov
add
and
cwtl
sahf
imul
push
adc
mov
scas
loopne
cltd
dec
xchg
fwait
adc
cmp
fidivs
rcr
iret
sub
addb
loopne
test
push
dec
iret
sti
mov
mov
hlt
and
jbe
fadds
push
dec
out
mov
daa
inc
fcmovbe
push
sbb
cli
test
iret
fcoml
inc
sub
mov
imul
aaa
xor
dec
loopne
lods
fistpl
and
pushf
popf
mov
sbb
add
sbb
mov
push
into
pushf
neg
push
mov
rcl
jno
jle
sbb
push
fs
shl
xlat
jns
mov
pushf
and
adc
push
ret
and
cmc
les
push
aaa
fisubrl
pop
rorb
sti
jnp
dec
dec
ds
mov
cltd
sbb
ja
stc
add
int3
mov
ds
push
lea
xchg
sbbb
jle
mov
repz
loope
aam
adc
push
test
cmpsl
inc
lret
and
or
sub
cmp
fyl2x
xor
scas
lcall
movsb
dec
add
aam
int3
push
test
lcall
aaa
imul
or
xor
lods
clc
dec
lahf
ja
sbb
scas
push
loopne
sbb
mov
cmp
xchg
pushf
inc
test
in
dec
fucomi
lcall
sbb
cld
or
mov
ja
mov
dec
lock
int3
xchg
push
fs
gs
ror
inc
outsl
outsb
mov
xchg
mov
into
sbb
inc
xchg
adc
lods
jne
idivb
imul
loopne
popf
rcrb
faddl
mov
xlat
mov
and
das
xor
push
pop
lahf
dec
insl
push
add
mov
push
push
add
movl
xor
aas
push
fadds
pop
xlat
rclb
adc
mov
sub
pusha
push
outsl
add
pop
xchg
pop
pop
jl
shrb
leave
std
mov
push
clc
je
inc
sub
mov
add
aas
cmc
ret
push
repnz
mov
hlt
int3
xchg
mov
pushf
jae
test
lock
push
jbe
pop
out
aam
xor
es
xlat
push
aaa
mov
adc
or
clc
out
or
dec
rolb
repz
shrl
xchg
ja
dec
jno
adc
andb
shrb
jbe
pop
cmpsb
dec
cltd
out
push
iret
cmp
push
mov
pop
das
jne
filds
sbb
or
mov
call
push
imul
mov
int3
das
ret
adc
push
daa
dec
mov
sub
adc
hlt
add
xchg
jne
jl
adc
push
xchg
outsl
clc
push
ss
or
rorb
push
mov
jp
push
inc
dec
roll
push
inc
xchg
call
mov
xor
or
push
call
cld
push
rcrl
dec
cmp
into
or
xchg
call
xchg
or
push
push
out
stc
shll
fcom
jmp
xchg
or
rol
fnsave
cmp
pop
aaa
nop
shlb
addl
lods
push
xchg
pusha
pop
adc
dec
out
or
pop
test
in
cmp
pop
loop
sub
cmpl
xchg
loopne
push
mov
push
xchg
pop
or
roll
arpl
test
nop
sub
adc
aam
xchg
clc
mov
rolb
int3
sbb
insb
dec
repz
xor
jmp
outsl
xchg
xchg
negl
adc
orl
outsb
dec
fcmovbe
inc
ljmp
or
mov
sub
out
dec
cmpsb
scas
or
imul
enter
jo
adc
icebp
jne
scas
mov
test
cmpsl
popf
lcall
out
jecxz
sbb
sbb
mov
add
xor
mov
and
sbb
nop
lea
insb
int
lods
push
xchg
cmp
out
inc
ljmp
jae
lea
jge
sub
mul
insb
cmp
nop
sbb
fwait
add
jo
push
out
into
sub
xor
mov
pop
add
push
sbb
adc
mov
sub
ret
and
int3
jb
pushl
sbb
pop
mov
inc
mov
sahf
movsl
cmpsb
enter
outsb
in
aaa
mov
jbe
pushf
mov
mov
vpsubsw
pop
push
pop
jne
mov
sub
int3
popa
dec
fcompl
inc
js
mov
mov
dec
xchg
mov
fldl
leave
inc
xor
sbb
fiaddl
frstor
into
loope
mov
mov
test
cmp
ficoms
mov
add
cmp
das
xor
push
ds
jb
add
inc
ja
stc
or
cmc
push
call
jge
ljmp
xor
mov
lret
ja
and
add
popf
stos
shrl
dec
cmpsb
push
cld
arpl
xchg
pop
adc
shll
push
mov
into
xor
fs
inc
xor
inc
data16
mov
pop
dec
lret
adc
addr16
cmc
pop
stc
aas
mov
dec
dec
dec
cmp
scas
fs
out
mov
mov
push
add
fcompl
jns
adc
out
shlb
lock
mov
cs
xchg
dec
xchg
cmp
xchg
out
in
jle
nop
mov
mov
movzwl
leave
push
es
add
popa
pop
fsts
ja
lds
inc
cmp
mov
push
sarb
js
lret
mov
mov
lahf
int
imul
call
mov
push
and
rcll
into
jmp
xor
mov
mov
into
mov
add
mov
cld
inc
cmp
push
sti
out
push
cli
stc
xchg
mov
sbb
in
cmpsb
aam
ljmp
pop
loope
sub
xchg
mov
movb
insb
rsm
mov
mov
and
dec
iret
sbbl
test
ja
adc
fwait
or
imull
scas
xor
and
hlt
out
and
jp
xor
lcall
faddl
cmp
ret
lret
test
mov
ret
dec
js
je
pop
into
mov
in
adc
pushf
jne
or
mov
mov
rcrl
adc
lds
leave
push
pop
jb
rclb
lret
mov
add
imul
sbb
jle
sub
enter
sarb
and
into
in
pop
mov
dec
dec
fildll
ss
cltd
xor
test
jp
int3
and
mov
push
mov
clc
inc
int
aam
in
jp
sub
pusha
adc
std
and
mov
lret
pop
imul
repnz
lea
insb
daa
nop
movsl
mov
jo
jl
xchg
push
mov
mov
ficoml
iret
daa
bound
mov
and
jl
add
cwtl
push
int3
addr16
sub
sahf
mov
das
test
jae
dec
cmp
aaa
dec
inc
or
and
mov
in
and
lret
into
imul
in
insb
js
dec
lock
inc
jb
inc
into
into
push
inc
sbb
rep
mov
mov
mov
mov
fwait
sbb
outsb
ret
add
arpl
aas
sahf
cmc
insb
sub
lret
lea
icebp
cs
es
stos
and
ficoms
jns
insb
adc
lds
mov
xchg
pop
mov
popf
push
dec
aas
inc
inc
or
pop
cmp
out
xor
mov
outsb
xchg
fidivrl
loop
push
jecxz
scas
adc
lock
rcrl
xor
insb
sbb
and
adc
cmp
xor
sarl
fwait
insb
pop
cmp
push
xlat
add
add
adc
adc
repz
out
in
pop
dec
push
std
mov
pop
mov
test
imul
test
xchg
push
mov
pop
add
inc
or
outsl
add
popa
mov
xor
mov
mov
xchg
and
mov
and
xchg
pop
push
fcom
jae
inc
mov
arpl
cwtl
aam
out
lcall
cmp
and
mov
inc
adc
ret
push
std
cli
mov
jns
xor
lods
dec
xor
mov
cmp
and
inc
gs
mov
add
push
jns
xchg
jge
mov
and
imul
pop
cwtl
add
adc
inc
sub
enter
mov
dec
push
jns
insl
cli
mov
mov
push
and
enter
int
stos
cmp
jl
int3
out
lods
aam
and
add
cmp
mov
stos
push
push
xchg
mov
cld
add
shlb
adc
sub
adc
repnz
mov
cmp
stc
adc
xorl
movsl
dec
mov
shlb
jg
clc
xchg
dec
cmpsl
fstpl
sahf
inc
xlat
test
ljmp
movsl
cmp
out
gs
aaa
push
mov
sub
dec
jle
nop
loope
or
movsb
xor
mov
jge
mov
push
jo
or
mov
sub
movsl
cmp
jg
xchg
sbb
and
test
aaa
mov
dec
mov
pop
xchg
dec
jge
or
adc
cmp
cli
xchg
aaa
pop
xchg
loopne
rcl
sub
adc
jb
or
mov
mov
xor
mov
popa
cmpsl
out
into
cmp
clc
insb
fs
addr16
cs
ss
jno
es
lret
fistl
je
stc
outsb
mov
sti
dec
mov
ficompl
js
push
mov
mov
rcll
push
idivl
in
pop
push
pop
out
insb
repz
mov
dec
mov
sbb
cmpsb
add
mov
fs
mov
xor
sub
add
xchg
in
les
push
call
jmp
pop
scas
stc
and
mov
arpl
outsl
adc
adc
nop
into
inc
fisubrl
sub
push
pop
cltd
xchg
in
mov
and
sbb
xchg
scas
and
inc
int3
or
sarl
mov
push
scas
pop
adc
xor
fdivl
je
in
addr16
cmp
cmp
aad
outsl
daa
loop
mov
xor
pushf
out
fldcw
inc
adc
std
push
ljmp
stos
or
push
sbb
popf
pushf
adc
xor
adc
into
cmpsl
cmc
divl
stc
shlb
outsb
out
in
jbe
in
sbb
sbb
pop
cmp
xchg
sar
push
pop
mov
and
pop
insl
push
lods
jno
mov
jmp
push
in
xor
popf
es
mov
lret
pop
and
insb
or
xchg
sarb
nop
addr16
hlt
ror
ja
jne
mov
mov
shrb
jae
xchg
pop
cld
cmpsb
dec
imul
sbb
add
in
arpl
xchg
push
rcrl
cmp
mov
lret
rorb
push
clc
or
aad
jl
fidivs
dec
es
andl
pusha
adc
notb
cwtl
repnz
cmpsb
mov
jae
lcall
in
add
insb
cwtl
dec
hlt
repnz
jnp
sub
sbb
mov
cmpsl
fsincos
into
adc
fsubl
adc
shlb
je
mov
rclb
jnp
inc
jne
sub
int
out
xor
jmp
sbb
cmp
rcl
adc
and
dec
add
aam
or
testl
push
jne
cmp
into
mov
sbb
sub
leave
jmp
cmpsl
or
dec
repnz
arpl
sub
mov
insb
sbb
test
loopne
ret
imul
xchg
fwait
ljmp
pushf
cs
sub
push
lds
dec
jge
cmp
adc
mov
fs
inc
data16
xchg
or
sub
inc
push
dec
push
sub
jne
fcoms
push
je
fwait
mov
sti
lods
and
icebp
shll
rclb
ror
xchg
scas
ja
aas
push
cmp
push
lret
scas
push
imul
insb
insl
frstor
sub
nop
outsl
popa
fisubs
jo
das
jnp
sbb
arpl
mov
imul
out
stos
shr
insb
mov
or
dec
jne
lods
pusha
xchg
or
xlat
lret
xor
insl
mov
xchg
lret
push
xchg
pop
in
test
pusha
mov
adc
and
and
movsl
pop
or
sbb
mov
shll
jno
xchg
mov
xlat
fstp
popa
fisubrl
mov
dec
cmpsl
test
inc
xchg
and
and
mov
jl
roll
inc
imul
lret
mov
insl
ficoms
dec
xor
or
lret
lahf
movsl
mov
inc
jp
stos
xchg
mov
cs
xlat
jo
lahf
call
shrb
imul
or
mov
jp
rclb
xor
mov
cmc
std
mov
lods
imul
mov
dec
les
or
daa
xor
ja
movsb
es
dec
lods
add
adcl
rorl
add
sub
daa
jge
dec
loopne
fstp
and
nop
xchg
jbe
dec
fcompl
cmp
fdiv
adc
cs
js
test
mov
mov
vmovdqu
insl
shr
scas
rcll
mov
lret
dec
arpl
pop
or
and
xchg
ljmp
ja
inc
add
pusha
xchg
push
aas
dec
pop
cmpb
cmp
inc
psubsw
sub
stos
sbb
jno
insb
jbe
lret
cmp
aaa
cmpsb
dec
mov
add
ss
mov
les
xchg
inc
mov
into
pminsw
mov
push
dec
jmp
dec
adc
cmpsl
fstps
push
cmp
and
cmp
mov
push
pop
sti
inc
xchg
pop
stos
mov
std
bound
cmp
dec
lods
loope
aaa
in
pop
lahf
sarb
and
push
push
push
cltd
int3
xchg
das
lock
sub
cmp
pusha
sub
mov
jnp
mov
dec
loope
mov
push
dec
not
stos
out
lahf
jg
xor
jmp
je
out
int3
bound
outsb
into
repz
fcoml
inc
sub
inc
jg
xor
or
xchg
aaa
ja
jne
lret
scas
add
mov
push
jne
aaa
push
and
outsl
push
cmpl
xchg
std
mov
fwait
cmpb
and
leave
cmpsl
mov
jmp
add
pop
ret
test
xor
cmc
pusha
jne
call
in
into
stos
dec
ret
xchg
xchg
lea
popf
int
lock
rclb
sub
mov
jbe
lcall
popf
inc
out
add
or
and
into
xchg
sbb
out
lret
mov
inc
push
inc
fdivrs
aad
rolb
fistps
xchg
sbb
gs
ljmp
and
pop
lcall
xchg
mov
xchg
ds
pop
insb
fidivl
lret
pop
xor
add
out
lds
jmp
daa
mov
lret
rcl
dec
push
aam
movsb
mov
test
mov
xchg
mov
lret
mov
ret
xchg
mov
bound
pop
adc
test
movb
xor
clc
ror
inc
out
loopne
push
into
dec
fidivrs
filds
sub
cld
std
jecxz
in
out
add
pop
shr
scas
in
mov
lret
ja
pop
cmp
push
shrb
cmp
jnp
cmp
lret
fists
mov
inc
xchg
sbb
xor
jnp
cmp
fistl
inc
roll
cmc
xchg
xchg
mov
mov
cli
pop
iret
or
out
aaa
or
lcall
dec
or
rcrl
loope
lods
xchg
cmp
cltd
int
xor
lret
xor
popf
jns
adcl
subb
lahf
dec
lcall
rcl
jmp
and
ffreep
push
imul
imul
out
clc
outsb
lock
test
mov
jge
xchg
pop
aam
aad
pop
flds
push
cmpsl
or
icebp
mov
xor
push
inc
or
test
cwtl
dec
add
outsl
es
cmp
pop
imul
sub
fstl
cmp
mov
jmp
int
cltd
mov
std
mov
sti
dec
je
push
sub
test
or
int3
add
xor
cli
pop
into
stos
pop
addr16
lret
outsl
jae
push
mov
and
out
andb
ss
cmp
adc
xchg
pushf
fnstenv
mov
sbb
lret
xchg
popa
dec
scas
movl
jmp
cmp
mov
sbb
mov
mov
inc
orl
ficomps
mov
insb
stc
stos
mov
adc
fsubr
test
cwtl
dec
adc
fneni(8087
out
push
movsl
pop
shrl
ja
fwait
sarl
fs
mov
jb
mov
divl
test
popf
sar
call
and
sbb
mov
dec
out
stos
push
ja
mov
nop
leave
jo
pushf
dec
xor
movsl
outsb
xor
pop
fmul
pop
ret
jle
lcallw
imul
pop
jmp
inc
mov
pop
dec
addr16
sarb
xlat
add
jno
add
pushf
cli
and
shrb
inc
lret
mov
pop
push
repz
jp
jge
mov
pushf
sbb
jle
ja
es
adc
stos
test
sbb
sub
add
adc
adc
xor
push
cld
das
rclb
in
cmp
es
dec
xchg
xchg
mov
add
jae
cmp
sub
sbb
aad
push
mov
hlt
push
adc
pop
push
add
test
fsubrp
jbe
stos
cmpsb
mov
push
inc
dec
push
shl
or
lods
rclb
pop
into
mov
stc
mov
stos
adc
or
and
rol
test
mov
movsl
xor
dec
add
call
stc
andl
inc
movb
stos
in
sbb
cltd
adc
push
stos
push
dec
js
dec
idivl
adc
mov
imul
loope
rorl
push
cmpsl
imul
popf
sbb
dec
icebp
mov
mov
sub
pop
dec
lcall
cmp
adc
cmp
fildll
push
and
js
ss
popl
cmp
mull
repnz
in
jno
inc
ljmp
loop
cmp
pop
test
jge
mov
addb
and
data16
mov
xchg
adc
popa
mov
leave
cmp
sbb
mov
loope
xlat
sub
sub
xor
imull
fisubs
dec
adc
cld
jae
fildl
push
rcrl
dec
stos
adc
xchg
sub
jecxz
test
dec
cs
fs
inc
xchg
mov
xchg
std
outsl
out
cld
fwait
jb
aas
mov
dec
fnop
rclb
cmc
xchg
add
sbb
dec
jns
inc
and
jae
mov
test
int3
incl
std
mov
or
incb
stos
fdivs
xlat
es
mov
loope
sub
push
shl
in
test
jb
fsubs
sub
jnp
mov
aad
xchg
mov
mov
adc
int3
sbb
lret
jne
sbb
mov
and
and
in
add
inc
hlt
pop
call
dec
loopne
andb
lcall
call
lahf
pop
lret
jle
out
xor
popf
cmc
add
jo
xchg
fdivr
xlat
mov
sbb
jl
dec
arpl
pop
popf
push
mov
push
insl
js
lock
pushf
jne
rclb
and
mov
cmp
sahf
sbb
adc
mov
push
jecxz
pop
out
cmpb
push
ror
repnz
adc
push
push
iret
push
pop
lahf
insl
push
mov
test
push
fdivs
or
sbb
add
push
adc
mov
adc
xlat
loopne
daa
mov
pop
push
rolb
test
pop
xchg
sbb
and
lock
in
lods
sbb
jne
rcl
popf
out
into
inc
aas
mov
or
jle
cmp
and
fadd
shrb
fwait
adc
stos
mov
push
outsb
ret
or
ror
dec
out
jbe
adc
cmp
dec
mov
ja
mov
cmp
int
pop
fs
adc
xlat
push
std
arpl
inc
lahf
mov
in
jae
imul
rcr
sub
es
mov
mov
repnz
outsl
dec
leave
dec
and
fldt
jne
add
jns
mov
jg
cmp
mov
bound
mov
cs
sti
jne
into
push
pusha
test
push
lret
jmp
jb
xlat
dec
xchg
andps
sbb
stos
mov
mov
cltd
lcall
adc
pop
lods
repnz
jge
in
dec
lods
inc
out
les
jne
jmp
mov
mov
cli
sub
imul
push
stos
xchg
mov
mov
and
jne
test
test
pop
xchg
dec
jle
add
xchg
xor
cmp
adc
sahf
in
dec
push
sbb
add
mov
sub
add
add
daa
mov
imul
in
andl
popa
jecxz
int
mov
push
sub
and
stc
mov
push
sbb
popa
cmc
xchg
mov
cmpsl
sbb
push
xlat
sbb
repz
das
lret
push
lds
mov
mov
push
out
cmp
and
movsb
mov
loop
and
scas
lret
ljmp
fcompl
mov
dec
or
jnp
mov
mov
std
xor
mov
add
repnz
shlb
cltd
xchg
in
add
inc
sahf
mov
cld
xor
outsb
loopne
daa
mov
xchg
and
pop
hlt
push
inc
loope
insb
cs
sub
mov
jge
outsl
shrl
cmpsb
fldl
jne
pop
test
lds
xlat
call
mov
cmp
mov
ja
adc
dec
ficoms
loop
inc
pushf
fisttps
push
data16
add
cmp
mov
mov
xchg
push
dec
fs
push
hlt
xchg
scas
xchg
mov
mov
aam
movsl
cli
add
jge
dec
daa
mov
push
mov
cmp
push
out
sbb
mov
adc
fisubl
xchg
jne
mov
fbld
and
jl
push
outsb
sbb
xor
icebp
out
dec
shl
call
sbb
and
mov
dec
push
lret
test
jp
xlat
or
cli
xchg
ret
pop
sub
subb
xor
rclb
jno
xchg
sub
cltd
push
mov
mov
or
out
popa
and
ret
mov
addr16
pop
lods
mov
push
gs
rcrl
aas
sbb
jo
outsb
out
loopne
add
loope
test
jo
out
sarl
add
lea
or
jp
adc
mov
pop
call
rol
ss
aam
xchg
xorb
fmuls
popf
push
jmp
dec
cli
lods
mov
jecxz
popa
sbb
iret
mov
mov
arpl
loope
inc
stc
add
push
cmpsl
sbb
pop
and
mov
fadd
jmp
rcrl
std
sbb
sub
or
sbb
or
popl
pop
pop
inc
inc
test
push
or
imul
divl
sub
jo
ret
push
sub
mov
ljmp
popa
inc
fistpl
rsqrtps
iret
adc
inc
xor
sarl
in
mov
es
jns
xchg
mov
and
das
add
out
adc
mov
xchg
arpl
pop
push
out
xchg
hlt
pushf
rcl
inc
stos
push
dec
and
loopne
xchg
repz
xchg
xor
fdivl
push
les
out
lret
sbb
orl
mov
les
cmp
mov
adc
out
push
int3
add
stos
mov
mov
xor
lock
into
push
aad
pop
inc
inc
xor
push
xchg
and
xchg
pop
mov
jmp
inc
int3
addr16
lock
sti
repnz
leave
cmp
push
mov
sub
adc
out
cmpsl
rolb
mull
ret
test
cltd
inc
mov
out
std
movsb
fsubrs
pop
es
aam
ja
lods
push
dec
insb
fdivl
push
fisubrs
dec
inc
hlt
sti
nop
lock
adc
cmp
inc
xchg
push
inc
enter
push
shr
outsl
movsl
lret
xchg
mov
lcall
in
mov
cmpsb
test
test
filds
shl
mov
and
pop
jge
sub
ja
or
sbb
inc
pop
push
pop
pop
dec
dec
scas
sub
mov
lcall
outsb
xchg
das
cltd
inc
into
sti
inc
or
mov
insb
lret
pushf
mov
test
push
mov
pop
lods
adc
popa
pop
pop
je
faddl
jp
or
sbb
ljmp
cmpsb
sub
mov
or
push
inc
sti
sbb
movsl
or
pop
cwtl
pusha
sbb
pop
insb
push
inc
addb
jne
dec
das
rclb
pop
idivl
sub
addr16
shlb
leave
xchg
xchg
inc
int3
notl
pop
mov
orb
imul
ret
cmp
push
into
jl
pop
mov
inc
jae
je
loope
mov
xchg
lcall
dec
push
lahf
inc
jno
xchg
out
adc
mov
xchg
fimuls
out
dec
repz
pusha
shll
outsb
push
xchg
scas
mov
shr
dec
sbb
into
in
cmp
sub
push
inc
scas
push
push
stos
jnp
stc
add
pop
mov
or
sbb
sub
push
dec
pop
inc
mov
xchg
sahf
shlb
test
movb
mov
sbb
xchg
pop
loope
sub
iret
lods
imul
pop
rcr
in
xchg
arpl
or
push
sbb
push
cmp
and
jb
lret
cmove
pop
push
xor
out
lds
loopne
leave
push
fdivs
xchg
fmull
push
push
xchg
mov
aas
mov
into
in
je
and
in
outsb
mov
movsb
dec
imul
mov
pop
pop
adc
or
jb
push
es
pop
mov
push
out
movsl
mov
arpl
out
push
xchg
add
jbe
into
insb
negb
push
jl
and
adc
sub
pop
imul
jo
cld
data16
fstl
and
aas
jmp
dec
sbb
test
lods
test
push
add
push
pushf
cmp
movsb
inc
pop
adc
xchg
enter
cltd
push
jae
bound
leave
sub
jmp
pop
xlat
repz
arpl
inc
mov
push
mov
sti
aas
mov
push
cmp
xor
lods
addr16
shl
xlat
mov
push
xchg
in
test
sub
mov
shlb
dec
sbb
adc
mov
or
dec
push
into
xor
nop
dec
iret
dec
mov
adc
int3
test
adc
cmp
aam
fldcw
sbb
test
pop
push
lock
int3
adc
cmp
pop
test
mov
je
incb
es
cld
mov
jmp
push
stos
daa
enter
addb
xchg
scas
mov
adc
fisubs
cwtl
cmp
mov
lret
pop
adc
push
lds
xor
mov
xlat
hlt
shll
test
je
outsl
dec
push
mov
adc
ror
shlb
xor
pop
jmp
fs
int
lods
inc
push
push
sub
dec
cli
inc
cmp
js
sub
insl
fcmovnu
imull
stos
lock
bound
nop
pop
push
andl
or
mov
inc
out
xchg
icebp
in
into
inc
xor
iret
cmc
or
jp
cli
mov
jne
or
ret
ficompl
das
sti
cmp
loop
adc
lods
jbe
lret
or
scas
pop
lret
cmc
inc
and
jbe
outsl
es
xchg
push
jle
scas
xchg
and
fadds
popf
xchg
popa
push
loop
mov
out
pop
adc
lea
xor
lcall
push
push
mov
and
arpl
lcall
fdiv
arpl
xchg
outsl
inc
inc
push
adc
pop
cmp
test
dec
lea
push
mov
sbb
sahf
loop
test
cmp
sbb
cli
inc
push
jo
cltd
sub
imul
mov
lds
and
adc
daa
int3
addr16
test
js
fs
scas
jmp
pop
sub
xchg
icebp
push
ret
int3
mov
add
push
gs
sub
add
sahf
lea
inc
push
and
dec
fildll
xchg
xor
stc
xchg
mov
rcrb
out
jl
int3
fisubrl
pop
imul
sarb
movsb
or
or
lods
sub
xchg
push
dec
aas
shll
into
adc
dec
ljmp
fwait
les
or
mov
fldt
jmp
mov
aad
lods
sahf
sbb
and
cmp
push
aas
pop
dec
add
push
cwtl
pop
addb
mov
jnp
lret
xor
inc
and
inc
push
insl
test
lock
fimuls
iret
out
fwait
and
xchg
adc
pop
mov
scas
adc
sti
stos
in
jbe
hlt
divb
into
aad
jb
or
xchg
mov
fisttpll
cmp
xor
notl
adc
jbe
sub
cmp
lods
inc
rorl
fdivrs
stc
pop
ljmp
inc
lds
ja
fisubs
push
lods
xor
push
mov
jbe
mov
outsb
jbe
push
pop
xor
push
mov
jne
mov
mov
cmp
add
mov
ljmp
or
add
jb
xchg
fsubs
fs
out
cmp
mov
sbb
mov
addr16
and
int
add
int
mov
aam
xor
lods
int
xor
js
or
add
and
fsts
mov
int
lods
and
clc
rolb
call
mov
fisubl
rcrl
push
mov
in
pop
sbb
addr16
arpl
ljmp
sti
aam
pop
jmp
add
pop
mov
push
test
std
lret
shll
nop
cmp
daa
repz
push
rcrb
movb
sub
dec
and
mov
out
mov
js
cs
push
mov
es
dec
or
mov
shll
out
cld
int3
xchg
add
jmp
nop
jmp
push
test
mov
xor
push
or
dec
outsb
mov
push
testl
adc
mov
inc
daa
lods
cmp
or
push
pop
jnp
pop
pop
or
push
lret
push
mov
cli
js
mov
inc
test
push
out
mov
fadds
and
xchg
push
out
xorl
adc
loopne
ja
jbe
pop
jno
int3
insb
pop
jo
mov
rorl
sub
mov
int3
xchg
fstps
inc
mov
mov
imul
dec
mov
jmp
push
out
out
xchg
jbe
jle
xchg
fcmovb
fwait
repz
mov
dec
jno
aaa
add
addr16
mov
insl
ficomps
xchg
gs
jle
lods
pop
fmulp
cmp
or
insb
push
enter
or
and
pop
lret
inc
mov
enter
dec
mov
insl
std
cmp
cmpsb
test
mov
push
repnz
imul
xor
xchg
jp
test
popa
scas
xchg
in
fwait
addb
subl
iret
xchg
pop
idivl
je
add
in
les
imul
mov
lahf
arpl
dec
pusha
and
sub
xchg
rep
popa
fs
sahf
in
or
mov
scas
pop
jbe
cld
pop
sbbb
ds
fdivrs
and
test
mov
mov
jbe
outsb
cmp
cmp
insb
mov
aaa
not
push
or
add
cwtl
sbb
lret
pop
add
adc
adc
stc
sub
push
jge
rol
cmp
aaa
int
pop
or
ljmp
imul
lods
push
gs
cmpsb
fdiv
push
adc
and
adc
xor
jo
cltd
pop
incl
jae
cwtl
std
mov
shrb
in
mov
lods
ja
out
pop
aad
ret
clc
dec
les
pop
mov
or
mov
mov
jno
pop
lds
and
outsl
jl
movsb
aaa
mov
and
dec
ds
pop
rol
push
js
inc
dec
mov
ret
shlb
mov
pop
sub
xor
push
movsb
sahf
or
push
imul
pop
je
push
cli
mov
xchg
insl
in
iret
aad
jne
xor
or
out
popf
daa
and
out
popa
data16
push
arpl
rcrb
pop
cmp
jle
push
movsb
mov
push
sarl
stc
jno
inc
xor
ffreep
loopne
add
xorb
addr16
push
insb
or
out
dec
dec
jmp
push
cli
stos
mov
or
pop
mov
lret
sahf
push
xchg
leave
out
pop
sbb
xchg
lret
out
das
popf
and
daa
adc
inc
iret
lret
or
sti
js
jecxz
je
hlt
sub
pushl
aad
adc
out
repz
adc
clc
imul
sti
out
push
cli
jbe
inc
xchg
cmp
jb
aas
add
out
jmp
jle
or
out
pop
ljmp
lahf
out
add
inc
frstor
sti
pop
sub
xor
pop
adc
jle
cmc
push
loope
and
repnz
inc
lods
test
mov
fcmovbe
lock
pop
mov
mov
mov
fsubl
xchg
stc
xchg
ror
jbe
mov
dec
rcl
cwtl
pop
sub
mov
pop
test
sbb
pop
stos
loopne
xchg
lret
sub
jge
and
aam
cmpsb
push
or
aaa
push
add
lods
or
pushf
pop
xchg
mov
push
cmpsl
outsb
roll
fistps
lcall
jl
loope
xchg
das
mov
jno
lahf
push
adc
sub
int3
iret
rorl
insb
ja
dec
stos
push
shrl
in
cwtl
ss
insb
lods
mov
out
test
pushf
fists
je
sbb
dec
cltd
or
test
xchg
sbb
addr16
fisubrs
jae
xchg
movsl
movsb
jo
negl
cli
int3
sar
push
push
inc
push
push
push
iret
sahf
sbb
sbb
ds
stc
jns
xchg
jmp
push
into
sub
xor
sbb
mov
or
mov
movsl
das
dec
outsb
pop
out
jg
aas
jb
dec
loopne
sub
sub
rorl
loopne
adc
push
xchg
cwtl
or
inc
xchg
push
addr16
out
mov
shlb
mov
push
mov
push
add
aam
sbb
mov
fstpl
movsl
int3
adcb
rol
mov
into
xchg
repnz
popf
cmp
fstl
cmpsl
daa
rcrl
scas
movsb
cmp
lods
mov
out
popa
mov
int3
imul
dec
jbe
inc
jno
bound
adc
pop
add
stos
xchg
pop
cmpsb
pop
pop
sub
sbb
jno
and
cld
sbb
stos
or
xchg
push
mov
shll
js
outsb
push
xchg
std
inc
ljmp
cltd
imul
cmpsl
cld
adc
sbb
jmp
dec
pop
not
push
lret
fldenv
mov
loop
mov
ss
faddp
repnz
popa
test
cwtl
loopne
repz
or
mov
jno
push
iret
std
scas
dec
test
jne
dec
sbb
jle
or
pop
arpl
cmp
daa
clc
std
rclb
iret
roll
outsb
jnp
fsubrl
gs
aas
mov
mov
sub
push
fiadds
inc
jbe
xlat
test
xchg
mov
xchg
mov
push
ja
lret
or
mov
fcomip
out
jle
mov
push
xor
cmpsl
imul
sbb
idivl
stos
je
punpcklwd
pusha
scas
sbb
adc
mov
add
sbb
mov
iret
scas
aam
or
aad
shlb
xchg
sahf
out
filds
lea
in
shll
nop
sbb
jb
pop
arpl
mov
jecxz
adc
sarb
adc
add
les
jbe
push
and
mov
jmp
rolb
pop
pop
mov
stos
dec
mov
push
ss
scas
xchg
movsl
loope
rcl
imul
rcll
or
or
nop
divl
inc
pop
mov
mov
dec
div
cltd
or
cmpsl
push
or
cmp
xchg
into
and
lods
inc
test
push
inc
mov
adc
push
push
imul
mov
hlt
test
or
je
in
mov
leave
jg
outsl
cwtl
repz
cmpsb
jb
es
lret
xchg
mov
pop
mov
int
rcl
rcll
cmp
xchg
dec
mov
push
lret
jge
mov
jnp
jns
cmc
mov
mov
fs
iret
jae
jp
mov
mov
stos
ja
or
call
jecxz
and
jg
push
inc
jns
stos
dec
mov
int3
or
andb
ljmp
popf
int3
push
es
lret
cmp
lahf
pop
xchg
push
scas
lret
dec
xchg
sub
test
das
shlb
pop
in
and
mov
push
les
ret
jbe
call
cmp
aaa
ja
addl
fisubrs
test
imul
fmull
add
sbb
out
adc
es
sahf
cmpsl
mov
aad
pop
adc
push
jns
aaa
cmpsb
cmp
sarb
fildl
xlat
arpl
adc
repz
jmpw
push
pusha
and
mov
fs
xor
and
or
inc
push
xor
xchg
mov
lcall
push
push
push
mov
negb
popf
adc
lret
push
int3
arpl
cld
xor
sbb
inc
lds
jne
aas
mov
mov
push
mov
dec
mov
sub
inc
adc
add
scas
pop
mov
popf
xchg
and
cmc
mov
adc
xor
push
mov
scas
add
sub
test
and
pop
push
add
xchg
mov
or
je
pop
and
insl
jno
adc
adc
push
rolb
xor
lods
or
xor
call
js
sbb
mov
lods
test
repnz
xchg
into
inc
adc
fcmovnb
in
and
or
mov
test
jl
xlat
inc
sub
mov
das
xor
jmp
loope
fdivs
lret
cmp
lock
mov
push
inc
in
mov
add
fxch
jmp
jbe
sub
movsl
mov
mov
mov
or
cmp
mov
shlb
mov
out
iretw
add
hlt
dec
pop
lret
jl
cmpb
sbb
push
stc
dec
popa
leave
xchg
xor
cld
cmp
ja
enter
ficompl
inc
sbb
jbe
and
push
sti
cmp
lods
mov
adc
cmc
insb
sub
adc
pop
cmp
jle
adc
in
repnz
scas
xchg
adc
cmp
int3
adc
pop
xor
cmp
add
cmp
and
movb
push
ljmp
xchg
test
fs
mov
scas
repz
fmuls
mov
sbb
shrb
inc
mov
cltd
cmpsl
jle
test
push
mov
dec
xchg
mov
pop
inc
lret
ljmp
aam
dec
or
adc
xor
imul
xchg
mov
movsl
negl
dec
add
dec
push
mov
aad
unpckhps
xchg
adc
movsb
pop
and
push
out
imul
stc
repnz
adc
jno
inc
popf
jecxz
fldl
lahf
xchg
mov
int
jle
cs
push
mov
dec
inc
mov
pop
movsl
into
and
jg
popf
push
adcb
add
int
push
mov
inc
hlt
sbb
pop
jp
mov
lret
push
daa
fs
xchg
sub
adc
int3
outsb
addr16
push
xor
adc
incl
lcall
test
pop
xchg
dec
out
call
or
int3
pushf
or
add
hlt
inc
movsl
push
push
inc
shr
mov
imul
jp
pmaxsw
fs
cmp
repz
push
je
mov
adc
in
add
sbb
shl
xorb
into
mov
adc
cltd
jnp
push
aaa
loop
push
rolb
dec
leave
test
mov
and
mov
pop
fwait
dec
jnp
clc
dec
sbb
aaa
push
shrb
xchg
pop
adc
push
inc
movsl
and
test
sbb
or
mov
ljmp
test
xor
pop
push
sbb
loop
cmp
in
mov
mov
stos
add
cwtl
jg
sbb
out
out
lahf
mov
add
aas
data16
mov
repnz
add
nop
movsb
rclb
cltd
or
cs
sub
add
gs
and
inc
leave
dec
iret
add
push
pop
xchg
into
testb
stos
jne
out
insl
sbb
and
ss
xchg
js
dec
jle
stc
jle
loopne
shlb
cmpsl
cbtw
xlat
int3
push
imul
xor
push
fsub
scas
push
sub
lret
inc
mov
push
cmp
int3
lcall
mov
sbb
push
insl
cmp
jle
jmp
pop
jp
movsl
sbb
arpl
adc
rorl
mov
cld
add
aad
adc
mov
xchg
adc
inc
mov
push
mov
into
fstpl
fs
sub
or
test
sbb
repz
sahf
in
into
fldt
inc
jne
aas
xchg
cld
out
lods
push
lock
ds
stos
add
push
pushw
fbstp
aam
cmpsb
mov
add
add
subl
xchg
push
cli
movb
cmpsb
in
sub
icebp
int3
ret
or
mov
fistps
add
push
mov
jp
cmp
lret
or
and
sbb
xor
ds
fidivs
je
pop
outsl
add
imul
sub
movsl
lret
add
cmp
sbb
xchg
dec
arpl
test
scas
and
xor
jp
call
test
fcmovbe
ss
mov
std
out
jne
mov
out
xchg
icebp
in
out
dec
cmp
mov
sub
xchg
ss
and
daa
push
cltd
or
aaa
mov
into
outsl
mov
adc
lds
mov
mov
outsl
jno
inc
lods
test
aaa
cld
pushf
out
mov
lods
mov
mov
sbb
cmpsl
xchg
and
inc
imul
add
data16
jo
rcll
mov
sub
xchg
insb
mov
leave
push
sub
out
fcoml
dec
mov
movsl
jecxz
aas
iret
mov
pop
mov
lret
mov
in
std
push
xchg
push
fdivs
cmpsb
out
popa
lea
jle
rclb
sub
insb
repnz
bound
setb
xor
sub
out
aaa
sarl
add
out
push
std
lock
lret
mov
xor
lret
and
js
bnd
dec
mov
xor
and
cmc
aas
lock
push
std
nop
inc
add
lret
cli
or
fs
repnz
add
das
enter
adc
dec
add
into
mov
xchg
mov
int3
push
cwtl
or
push
fsubs
icebp
in
imul
int
push
mov
flds
and
xor
ret
rclb
cmpsb
out
and
out
xlat
roll
pop
xchg
outsb
stos
gs
mov
call
adc
cmpsb
cld
arpl
jg
movsb
inc
push
pop
std
adc
xchg
jbe
xchg
mov
cmpsl
inc
mov
dec
out
mov
add
mov
test
mov
dec
rcll
mov
rcrl
mov
jo
push
mov
xor
jmp
push
add
jns
pushf
fidivrl
imul
xchg
leave
xlat
mov
sbb
push
xor
cmpsl
test
inc
shlb
pusha
mov
pop
xor
nop
mov
sti
cltd
out
lahf
and
cltd
and
jno
js
ja
mov
cmpsl
insb
in
inc
push
inc
cmp
outsl
and
stos
jnp
lea
adc
in
xor
mov
in
adc
sbb
cmp
or
int3
cld
jo
cmp
out
stc
dec
ret
popa
inc
rorl
adc
loopne
fs
inc
xor
int3
icebp
jbe
add
xlat
insb
xchg
xchg
jmp
pop
push
push
mov
loop
jne
cmp
sub
addr16
pop
adc
into
movsl
jl
mov
jecxz
lock
jnp
dec
mov
push
mov
mov
fsubrs
iret
cmp
in
mov
js
cwtl
and
xchg
fbstp
in
iret
int3
push
rorb
out
mov
cltd
jns
js
xor
jbe
add
mov
adc
pop
lret
in
add
lock
sbbl
cmp
cwtl
enter
fnsave
jbe
cmc
push
sbb
aam
sub
push
inc
and
sbb
bound
je
mov
sbbb
loop
aaa
test
dec
inc
dec
fdivp
sti
and
int3
fst
jl
adc
inc
mov
push
in
mov
sbbl
adc
sbb
aam
stos
hlt
test
lahf
fdivp
inc
sbbb
sub
inc
mov
dec
fdivrs
lods
bts
jbe
adc
mov
pop
or
faddp
mov
mov
fldenv
and
inc
sbb
iret
push
fadd
push
clc
xor
push
stc
push
pop
push
insb
mov
dec
in
shll
sbbl
jne
test
ljmp
fwait
cmpsl
cld
jge,pt
mov
aad
mov
jns
sub
rcl
cli
xorb
bound
in
sub
dec
int
jg
es
int3
inc
dec
ljmp
cltd
stos
xor
jnp
mov
and
fdivrl
dec
xchg
cmp
adc
mov
lock
int3
xchg
push
inc
mov
out
sub
ljmp
and
test
inc
xorl
stc
sbb
lret
dec
clc
fs
mov
ds
sub
and
hlt
adc
push
xor
cs
dec
in
ret
and
mov
pushf
shrb
test
inc
mov
aaa
pusha
pop
cltd
push
push
xor
mov
shl
cmpsl
les
fcomps
daa
fwait
jge
stos
in
mov
inc
push
jp
jne
xchg
mov
pushl
sub
mov
push
bound
imul
mov
push
pushl
movsb
cwtl
mov
mov
sub
sbb
push
and
mov
xchg
sarb
out
test
mov
push
add
cld
jp
inc
mov
push
mov
xchg
in
mov
cmp
push
cmovge
cmp
aaa
stc
inc
mov
sahf
mov
jecxz
sub
insb
clc
std
cmc
jns
cmpsl
out
enter
mov
repz
into
mov
add
fadd
fcom
aas
push
inc
inc
pop
jecxz
test
cmp
add
cmp
not
dec
add
loopne
scas
jge
lret
arpl
pop
pop
jbe
or
enter
jno
fsubrl
or
pop
xor
xchg
jmp
dec
mov
mov
inc
not
and
jb
lock
and
imul
mov
or
xor
pop
sbb
push
xchg
mov
pushf
les
imul
jecxz
fnclex
pop
mov
push
fsubrl
ss
push
dec
outsb
repz
cwtl
xor
inc
lods
sbb
out
mov
jl
dec
xchg
iret
sbb
std
sub
arpl
xabort
pusha
add
inc
dec
dec
or
in
lcall
fs
jecxz
out
lock
ret
pop
push
jns
test
xor
mov
mov
mov
inc
push
rclb
inc
lock
popa
fisttps
cltd
incl
sarb
jae
xor
mov
push
push
das
pop
lcall
ljmp
cmp
and
call
xchg
pop
inc
ljmp
cmp
stos
mov
push
test
frstor
jle
test
sahf
into
cmp
xchg
xchg
mov
cmpsb
mov
push
gs
arpl
xchg
xchg
lret
out
imul
ss
rcll
nop
mov
xchg
mov
jb
into
decl
clc
sub
dec
xchg
addr16
mov
mov
mov
cmc
rcrb
sbb
inc
push
mov
cld
xchg
cmp
xchg
fdivrl
arpl
lea
pop
jae
mov
mov
leave
pop
sub
add
mov
std
fdivr
daa
enterw
push
scas
ret
cmc
push
lea
mov
jmp
pushf
jno
xchg
rclb
jecxz
dec
shl
pop
cmc
add
cmpsb
xor
pop
jp
rolb
out
add
popf
incb
gs
push
fistps
add
add
sub
jbe
or
adc
xchg
in
add
xchg
fdivrs
call
sbb
fsubp
xchg
je
fs
lock
dec
fwait
or
daa
jnp
movsb
out
call
imul
test
xor
popa
jo
xchg
and
in
mov
cmpsb
cmp
fisttpll
or
cmp
dec
nop
movsb
addr16
es
lock
loop
mov
jecxz
jg
xor
xchg
fcom
cmp
inc
push
push
mov
sahf
lock
enter
or
lea
cld
sarl
xor
mov
adc
cs
insb
xchg
hlt
xchg
divl
mov
dec
mov
xchg
mov
aas
fwait
call
push
jge
pop
adc
subl
xchg
sub
pop
inc
inc
loopne
push
not
or
jbe
push
pop
add
xor
mov
icebp
insl
mov
stos
test
and
shl
cld
je
adc
mov
stos
es
push
out
fsubl
imul
or
lret
loopne
mov
hlt
pushf
push
outsb
sub
mov
inc
leave
rcrl
and
roll
out
lds
mov
mov
sub
movsb
mov
xor
in
mov
jno
add
stos
adc
loope
cmpsl
mov
mov
dec
int3
fidivs
stos
push
rcl
inc
pop
lds
test
push
jo
mov
jmp
jg
outsl
or
jne
mov
je
sbb
test
popa
jg
add
flds
push
push
loopne
dec
mov
or
fimull
aaa
outsl
test
fdivrl
dec
push
push
inc
ficompl
jecxz
and
push
pusha
insl
push
out
jp
sbb
lods
xchg
int3
jg
ja
pop
and
je
test
inc
scas
mov
add
xlat
aam
or
int3
xor
ret
pushf
fcmove
aam
xchg
dec
in
cmp
jp
and
cmpsl
push
scas
mov
lret
clc
mov
push
xchg
xor
test
imul
jle
nop
pop
jge
mov
les
push
fcomps
lcall
out
je
mov
aam
iret
loopne
adc
mov
push
jbe
adc
out
popa
xor
subl
mov
inc
out
and
rorb
or
pop
cmp
aam
mov
add
iret
adc
inc
lcall
outsl
call
in
sarl
pop
adc
sbb
lret
and
lods
or
icebp
movsl
hlt
popa
outsb
fildl
mov
jne
out
dec
or
mov
adc
xchg
sub
dec
ret
add
mov
add
push
insl
mov
fwait
out
sub
lret
mov
sbb
aaa
out
inc
rcrb
lock
and
imulb
in
popf
ljmp
sbb
sbb
dec
pusha
mov
cmc
fbstp
fsubl
or
jg
shlb
jecxz
test
fcmovbe
and
xchg
inc
roll
mov
inc
into
imul
out
lret
out
pop
popf
mov
fiadds
arpl
ds
sub
out
pop
pop
sbb
ja
pop
mov
adc
rcl
in
movsl
popf
cmp
xchg
mov
shrb
lds
adc
fsubr
leave
sub
xchg
popa
js
movsl
lret
xor
push
lahf
dec
jne
mov
pusha
mov
xor
rcl
xchg
pop
in
xor
adc
movsl
jle
into
fnsave
fdiv
fnsave
cli
scas
ja
fimull
xchg
lods
pop
out
jl
sub
push
mov
mov
xorb
jl
dec
adcb
jp
add
xor
aad
jle
xor
add
nop
into
dec
push
sub
lods
js
and
movsb
nop
sbb
test
cmpb
sbb
dec
rcrb
idiv
xchg
orb
dec
enter
xor
roll
mov
test
inc
mov
test
cmc
lret
scas
sbb
fdivrs
mov
adc
or
pusha
push
xor
dec
add
rcr
mov
adc
sub
imul
sbb
adc
push
jl
into
dec
xchg
mov
push
mov
add
in
pushf
xorl
sub
jae
int3
sbb
jb
push
aam
jnp
xchg
sbb
cmpsl
lret
xlat
push
push
dec
add
xchg
dec
xor
push
data16
xchg
inc
or
scas
add
xor
mov
dec
xor
xchg
fnop
lcall
cmc
sbb
cs
adc
jg
aad
cmpsl
cmpsb
pop
stos
mov
rcl
adc
pop
sbb
out
ds
sahf
dec
xchg
xchg
jbe
cwtl
mov
rclb
movsl
cmp
lea
pushf
cmp
xor
in
cmp
adc
push
adc
sarl
mov
into
cmp
sbb
dec
out
gs
bound
mov
sbb
dec
insl
or
jae
sub
repz
in
mov
push
xor
pop
loop
sar
add
cmp
push
insl
or
xor
es
ljmp
mov
into
jecxz
and
sub
jbe
jns
inc
std
xlat
pop
jle
cmp
mov
inc
ret
repz
in
push
jne
outsl
xchg
arpl
aaa
xchg
int3
jb
shll
ljmp
add
pop
sub
push
leave
rcl
ja
pop
fldl
inc
loopne
stos
pop
test
sub
call
frstor
adc
xchg
popa
dec
pop
decl
push
out
xchg
xchg
popf
push
dec
cmp
mov
test
adc
mov
js
imul
or
mov
pop
adc
jnp
xchg
dec
mov
mov
jo
cmpsl
xchg
sub
sbb
jge
inc
loope
dec
pop
xchg
rcr
fcoml
xor
cmp
xchg
vrcpss
cmc
test
dec
xor
int
xchg
or
outsb
dec
insl
int3
pop
jmp
push
or
mov
push
pop
repnz
cmpsl
cmp
ret
push
xchg
popf
add
dec
hlt
push
aas
jg
test
jne
imul
xchg
cmp
js
daa
xor
movsl
pop
xchg
js
xchg
cmpsl
movsl
stc
add
mov
or
in
and
frstor
mov
cmp
out
ds
jl
pop
xor
push
add
std
and
mov
mov
and
mov
dec
mov
in
sub
fcmovbe
mov
mov
addr16
sub
add
andl
js
lock
jmp
jbe
lods
aam
mov
push
or
sub
aad
rolb
ss
fs
add
insl
lock
movsb
sti
jae
and
aas
ja
and
outsb
cmpsb
xchg
ffree
out
arpl
test
test
iret
rorl
lcall
insl
call
sub
hlt
add
pusha
jae
in
adc
mov
jbe
sub
jne
nop
pop
or
repz
mov
int
aad
out
jmp
gs
movsb
push
xchg
xor
iret
cli
aaa
mov
adc
jbe
pop
xchg
sub
aad
ss
xor
inc
cmp
and
lods
xchg
cld
sbb
shrl
fstl
adc
and
jo
not
fldln2
or
inc
outsb
and
inc
fnstsw
repz
and
jecxz
adc
movsb
cmp
mov
gs
fbld
xor
dec
bound
std
int
je
les
in
xchg
mov
test
jo
pusha
insl
pop
lods
adc
shl
push
pop
cwtl
mov
into
je
sub
test
in
jg
add
scas
jle
jge
xor
outsl
sbb
mov
addr16
lds
js
add
lret
xchg
and
into
jbe
mov
aaa
movl
add
rcll
std
iret
xor
stc
mov
push
xchg
xor
in
or
call
arpl
mov
mov
cltd
xchg
icebp
jne
or
xchg
mov
bound
pop
mov
mov
mov
adc
lahf
std
mov
sti
out
add
jp
dec
mov
inc
lea
jnp
js
xchg
sarb
fs
sub
sbb
or
out
push
mov
insl
lret
pop
xchg
add
fwait
xor
inc
rorl
loopne
dec
push
clc
out
pop
push
push
imul
ss
xor
cli
lret
push
cmpsl
icebp
ds
cmp
mov
sbb
inc
adc
push
inc
in
push
shl
out
push
jmp
push
and
fwait
iret
and
shll
mov
sbb
fmul
xchg
cmc
cmp
mov
mov
inc
cmc
sbb
xchg
push
dec
fiadds
into
cmpsb
mov
insb
push
mov
sub
mov
push
cmp
mov
int3
adc
push
add
lahf
es
int3
ljmpw
pop
jne
in
out
ljmp
adc
pop
shlb
push
mov
mov
jge
out
push
sub
mov
or
dec
add
xchg
push
cmp
xchg
jle
rcl
fwait
aad
push
enter
or
or
xor
add
lods
adc
je
jnp
out
movsl
dec
xchg
jbe
push
pop
pushf
cmp
xchg
leave
inc
sub
jecxz
es
mov
mov
inc
dec
lods
jns
test
mov
jmp
fimull
sub
sbbb
imul
adc
adc
jge
xchg
sbb
xchg
mov
dec
test
clc
je
imull
jmp
out
mov
dec
shl
jb
mov
out
mov
or
push
insl
repnz
jns
sti
inc
into
out
pop
xchg
lret
jl
lret
mov
sbb
insb
jge
dec
xor
mov
mov
adc
push
pop
inc
and
dec
int
iret
test
mov
cwtl
cmpsl
pop
popf
movq
mov
js
arpl
in
in
pop
push
sub
adc
push
icebp
or
or
mov
rcrb
in
sub
rcl
jnp
inc
sub
gs
sti
push
in
aas
adc
out
insl
mov
push
ror
inc
jne
fwait
ret
loopne
mov
sbb
and
add
and
pop
and
loop
dec
cld
fisttpll
ret
sub
add
hlt
insb
inc
push
jo
mov
dec
push
pop
adc
cld
and
pushw
aaa
sbb
aad
or
rclb
pop
ss
int
out
adc
jns
fisubl
cmpsb
movb
cmp
mov
shrb
int
push
outsl
mov
or
and
inc
jnp
scas
cmpl
test
dec
imul
adc
movsl
cmp
mov
pop
jne
lret
loope
jl
aam
ss
sub
mov
mov
int3
adc
jbe
sbb
inc
pop
testl
sub
cmp
out
mov
stos
or
movsb
data16
push
push
pop
sbb
les
inc
mov
push
fimuls
ret
leave
mov
out
or
pop
rcrl
pop
adc
cmp
xchg
je
mov
out
jno
jmp
mov
add
rclb
xor
shlb
sub
pop
enter
arpl
pop
dec
xor
out
cmp
icebp
mov
or
je
mov
test
bound
stos
mov
dec
movsb
stos
adc
loop
sbb
cmp
xlat
mov
icebp
pop
lea
push
xchg
adc
dec
sti
xor
sbb
mov
or
nop
pushf
aas
sbb
test
loop
xchg
mov
pusha
push
je
iret
mov
mov
add
adc
ret
cmp
mov
mov
cmp
out
adc
adc
and
push
mov
lret
or
sbb
push
pop
adc
cltd
stc
dec
fnstcw
and
push
sbb
sub
hlt
jno
xchg
in
dec
aam
shrb
mov
cmpsb
test
out
ss
lret
rcrl
shlb
xchg
mov
adc
pop
pop
sub
push
insl
cmp
mov
jmp
xor
cmpsl
test
mov
es
loop
sub
mov
or
lcall
rorb
and
aaa
push
mov
scas
std
or
add
gs
and
lret
pop
cld
mov
fimuls
movsb
xchg
xor
jmp
xchg
or
mov
adc
sub
cmp
sbb
lods
cmpsb
push
xor
fwait
lcall
es
dec
sbb
sub
lods
mov
lcall
mov
fst
dec
ss
xchg
mov
shrl
mov
jge
sub
add
push
inc
inc
cld
nop
cltd
jg
shl
adc
xchg
push
xlat
lock
ja
push
inc
cmp
fsubs
mov
daa
jl
leave
sub
and
xor
or
jmp
add
in
cwtl
cltd
jbe
clc
stos
loop
lea
mov
ss
and
lods
mov
adc
clc
hlt
mov
aam
arpl
movb
dec
pop
jne
sub
xor
fnstsw
sub
lock
cwtd
aas
insb
sbb
lcall
adc
mov
xchg
mov
push
rol
in
mov
xor
jo
cltd
pop
ja
aam
xchg
lds
xchg
test
pop
es
push
ljmp
xchg
adc
jne
inc
and
test
in
andl
push
xchg
inc
mov
lret
mov
movsb
test
xchg
push
call
sbb
and
push
int3
and
outsl
mov
jbe
jns
int
fcmovu
add
mov
data16
scas
cmc
mov
xchg
sub
jg
daa
mov
dec
and
js
or
mov
or
xchg
data16
mov
mov
mov
test
popf
into
fmull
out
push
pushf
es
cmp
adcb
out
jo
aam
jmp
imul
rclb
fwait
pushf
push
cmp
aas
les
or
xor
dec
int
add
daa
cld
scas
jmp
or
or
sti
jns
inc
push
dec
jo
lret
cld
insb
jmp
mov
inc
xchg
fcmove
test
mov
int
mov
fcomps
push
out
mov
test
xor
jne
lret
sbb
ror
test
aad
lret
pop
adc
xchg
int
test
dec
inc
and
xor
pop
jb
push
lret
xlat
mov
mov
push
stos
jbe
data16
outsb
in
popa
imul
int3
xorl
push
out
je
dec
add
mov
mov
xlat
push
pushf
rorb
test
sti
push
rorb
dec
and
rorl
repz
jae
int3
sub
in
loope
imul
jg
pop
xchg
xor
je
fcmovu
rorl
xchg
clc
jae
arpl
sub
int3
add
mov
cmp
int
push
sub
sub
add
clc
add
jb
jg
jns
stos
xchg
fucomi
scas
lret
push
adc
nop
push
push
daa
jle
sbb
iret
inc
sti
push
ds
mov
scas
xchg
xchg
add
stos
std
push
push
xor
dec
mov
daa
and
aad
jns
in
lock
mov
jae
pop
scas
cmp
xchg
dec
daa
mov
loop
call
inc
int3
jo
mov
mov
adc
fldl
mov
out
sbb
jmp
data16
ja
aaa
into
addr16
or
cmp
push
fstps
sbb
adc
jbe
add
cmp
inc
lret
add
or
push
ja
ret
lock
sarl
xchg
xor
adc
adc
aam
imul
movsb
jl
cli
push
aaa
iret
xor
add
mov
pop
inc
push
aam
in
mov
mov
test
mov
xchg
arpl
jno
cmpsb
sub
out
or
fwait
negb
xchg
xchg
jl
dec
mov
jg
mov
and
mov
outsb
hlt
and
ja
xchg
es
cmpsb
into
mov
sub
pop
mov
addl
xor
mov
out
cmp
into
push
cld
sub
call
or
imul
push
shll
xor
mov
add
es
pop
cmp
dec
filds
into
mov
aam
divl
or
imul
mov
push
cmc
je
sti
in
sarb
cmp
jae
pushf
push
push
daa
push
and
rclb
gs
cmpsb
fisubrs
push
xchg
push
pop
and
psrlw
int3
xor
push
cli
out
out
sti
add
bound
mov
mul
cs
and
sbbl
div
int3
pop
test
mov
push
sbb
mov
imull
iret
data16
pop
out
jp,pn
lods
pop
add
sbb
cwtl
sbb
xchg
mov
aaa
add
popa
sub
insl
sub
icebp
pop
dec
imul
fwait
xchg
cmp
movsl
lret
inc
daa
mov
in
ja
inc
outsb
out
shlb
push
push
and
mov
pop
mov
pop
iret
or
jno
add
int
and
add
out
into
ffreep
scas
leave
add
outsl
mov
lds
lods
dec
outsb
mov
test
dec
stc
rclb
mov
test
jae
or
ret
xlat
addr16
jge
mov
fcmovne
push
das
daa
and
cmp
mov
or
dec
push
mov
push
pop
cmc
cmp
or
into
sub
dec
das
adc
movsl
cmp
push
into
in
pop
imul
add
movsl
pop
dec
cmp
pop
sti
mov
cmpsl
jnp
into
fdivl
ss
mov
aas
or
mov
jp
xchg
mov
ds
push
mov
stos
sbb
jle
enter
mov
push
hlt
in
sbb
test
popf
push
lret
cmpsb
ljmp
jmp
sahf
out
sbb
shrb
and
incb
jno
out
cli
roll
lret
inc
xchg
mov
out
mov
lret
mov
movsb
int3
adc
clc
shl
ljmp
pop
test
inc
std
fmull
into
imul
xor
sub
cmpsl
mov
pop
lahf
push
jne
popa
fbstp
sbb
push
xlat
xchg
inc
jg
lret
mov
jecxz
movsl
loope
pop
into
cld
cmp
cwtl
jmp
xchg
aam
inc
jae
xchg
cltd
cmp
jno
movsb
in
jge
pop
xchg
scas
not
xlat
xchg
sbb
ljmp
cwtl
mov
repz
fsubs
cmp
dec
loopne
stos
lcall
mov
daa
enter
push
sbb
mov
xchg
and
call
outsb
xor
test
add
adc
jg
inc
push
out
ret
dec
leave
adc
outsb
std
or
fimuls
xlat
mov
shr
or
in
push
or
pop
cmpsl
inc
std
push
rcl
gs
xchg
pop
popf
stos
jne
cld
test
mov
leave
paddsb
jb
xchg
int
insb
inc
cmc
int3
mov
sub
adc
out
dec
movsb
test
addr16
outsl
int
xor
cmpsb
jg
xchg
xchg
jle
shll
sbb
dec
jbe
lret
add
mov
mov
aad
inc
int
sbb
or
push
sbb
pop
fistl
in
mov
jo
in
mov
into
pop
push
cmp
add
lahf
inc
cld
cmp
cld
add
out
clc
sub
outsl
fstpl
into
mov
iret
adc
out
cmp
inc
aam
jmp
xchg
pop
cmp
mov
repz
cmp
inc
clc
pop
adc
push
and
xchg
leave
outsb
cmc
push
xchg
pop
dec
mov
gs
or
aas
push
scas
jae
cli
ret
xor
mov
xchg
aaa
xor
mov
nop
sbb
into
data16
cmp
cmpsb
mov
xor
int
repnz
xlat
cmp
out
cmc
out
sub
jo
sarb
loope
adc
mov
dec
push
xchg
ja
pop
into
data16
push
loop
jg
addr16
push
lret
cld
xor
pop
imul
and
push
mov
jecxz
aaa
xchg
in
out
neg
xchg
jae
adc
jno
jp
push
or
movsl
xchg
cmpsl
mov
data16
incl
mov
insl
adc
cmpsl
cmp
dec
dec
imul
pop
and
add
loop
inc
pop
loope
sbb
sbb
xchg
adc
add
cmpsb
repnz
test
xchg
sbb
pop
outsl
sub
push
aam
jbe
into
mov
add
pop
add
jmp
adc
xchg
loop
jecxz
mov
inc
inc
jo
xchg
lcall
cmpb
fnstcw
in
daa
pop
and
xchg
lds
dec
ss
adc
push
test
xchg
repz
mov
mov
add
pushf
mov
lret
les
leave
or
sbbb
sub
sahf
lods
jmp
dec
fwait
test
fsubl
mov
mov
xchg
pop
inc
mov
sbb
rcr
addr16
cmc
jae
push
data16
rcrb
scas
incb
in
cli
sub
sbb
xor
dec
pop
hlt
xchg
lods
ret
fistpl
cmp
cmp
dec
sbb
sub
icebp
mov
push
outsb
ret
adc
mov
xor
bound
mov
mov
sub
sahf
mov
and
outsb
shr
xor
cmp
and
inc
xor
into
xchg
outsl
xchg
sub
jecxz
sbb
push
inc
cs
pop
fst
enter
pop
mov
rcrl
dec
leave
inc
push
orl
sub
fldcw
inc
push
addl
imul
addr16
sbb
inc
sahf
pop
ja
ss
xor
cwtl
mov
push
cmp
mov
pop
xor
cmpsl
push
ret
and
inc
subl
add
rorl
mov
outsl
lcall
jmp
mov
int3
push
rclb
mov
stc
aam
ja
gs
loopne
pop
and
push
int
inc
push
movsl
and
sbb
enter
sbbl
xchg
mov
xchg
out
jnp
and
ret
lret
lods
data16
mov
dec
mov
lcall
popa
mov
shlb
int3
inc
scas
insb
out
lock
pop
cmp
sub
jne
pop
movsl
adc
mov
negl
test
sbb
jl
movsb
int
fistpll
dec
sub
into
test
rcll
nop
mov
add
mov
mov
movsl
orl
xchg
sahf
inc
jae
mov
inc
jp
mov
addr16
jo
iret
xchg
jbe
xchg
add
lahf
cmpsl
sar
pop
add
shll
dec
iret
js
cmpsb
js
xor
movsl
aas
jg
outsb
xor
add
and
mov
ds
imul
push
shrb
ret
add
xchg
fbld
mov
push
or
je
sbb
clc
jbe
sbb
and
int
test
mov
mov
leave
and
mov
jbe
inc
xchg
sub
sbb
loop
add
int3
dec
mov
test
js
test
jge
enter
out
inc
aas
adc
and
jno
jb
repz
faddp
sarb
mov
loopne
or
adc
sub
lret
fdivl
aad
inc
mov
jae
out
lret
imull
dec
cmp
adc
fs
jb
shl
jbe
xchg
incb
scas
sub
jns
mov
sbb
test
cwtl
xchg
iret
mov
cmpsb
inc
mov
lods
fimuls
andl
divb
or
in
imul
inc
rcrl
dec
xor
int3
xorb
xor
mov
mov
mov
fs
and
outsb
data16
adc
shrb
lret
cltd
xchg
cmp
inc
push
not
into
cwtl
icebp
dec
jnp
cltd
sbb
loope
ror
fmuls
sbb
scas
add
add
add
and
fs
push
push
rorb
mov
mov
test
call
cwtl
in
dec
mov
cmpsl
lahf
mov
pop
sub
stos
out
aaa
dec
xlat
add
push
mov
mov
mov
push
movsb
shll
sbb
fld
sub
rcl
jno
jge
dec
push
imul
adc
sub
lods
in
lahf
loop
rcrl
in
mov
lock
sub
and
or
dec
cld
push
adc
sbb
pop
lret
mov
cmp
in
mov
in
xchg
int3
stos
je
mov
xchg
rorl
pop
xor
popf
in
popa
mov
shlb
xchg
testl
fcoms
int3
lcall
ljmp
cli
popa
mov
pop
ret
hlt
jae
lock
leave
push
inc
add
pop
iret
out
into
or
add
sahf
loop,pn
mov
sarb
scas
loopne
movsb
cmp
xor
andl
jne
gs
mov
fcomps
adc
in
cs
loope
mov
lods
adcb
add
fs
jp
mov
cmpsb
mov
push
ret
idivb
popf
shrb
ss
pop
insb
or
dec
ret
cmpsb
push
test
mov
jo
pop
dec
push
stc
mov
addr16
cmpsb
xor
or
xor
test
pusha
idivb
xlat
or
out
aam
push
cmpl
xlat
and
sbb
adc
dec
add
cs
outsb
aaa
inc
jo
lods
and
jmp
test
jbe
jo
outsl
test
mov
sub
lahf
jmp
repnz
loope
lods
sbb
incb
pop
cmc
fnstenv
push
mov
pop
cmpsb
in
mov
jecxz
inc
push
pop
cmpsl
not
sti
popa
mov
pcmpeqd
outsb
mov
fst
mov
ret
push
inc
pop
xchg
cld
imul
jbe
iret
jbe
ss
sbb
mov
xchg
es
sahf
aaa
xchg
push
jp
stos
add
into
pop
xlat
pop
mov
inc
mov
mov
mov
repnz
push
mov
cmpps
sbb
into
jno
pushfw
call
outsb
jo
test
sbb
pop
sahf
mov
jno
das
xor
or
gs
jae
out
push
mov
xlat
and
lcall
sbb
cmp
daa
xor
cmp
out
stc
jns
cmpl
ficompl
dec
add
imul
loop
popf
sarb
jae
or
adcl
pop
mov
dec
imul
cmp
std
aaa
sub
inc
dec
jle
js
xchg
cmpsb
push
cmpsl
mov
sub
and
aad
in
movsl
mov
xchg
stc
shr
popf
sub
inc
insl
sbb
dec
cmpsl
push
rolb
mov
push
or
ljmp
push
adc
cltd
stos
test
in
cmp
adc
into
and
xchg
mov
out
adc
add
bound
push
dec
out
popf
or
dec
into
push
add
pop
push
negb
stos
sbb
or
mov
mov
or
scas
mov
pop
xchg
xor
dec
or
push
jl
sbb
adc
jns
xor
pop
mov
out
xchg
lods
xor
or
cmp
push
xchg
or
push
mov
test
mov
nop
inc
push
test
sarb
fdivs
pop
dec
fwait
sbb
inc
add
mov
loopne
out
mov
sub
arpl
push
xchg
stos
into
test
push
jne
mov
loop
push
repnz
mov
jmp
xchg
xchg
add
add
cmp
outsb
loopne
div
daa
mov
shrb
pop
and
sbb
jp
je
lock
sbb
std
int3
and
test
inc
mov
mov
rep
out
ljmp
jp
xchg
leave
rclb
loop
inc
or
add
repnz
imul
xchg
adc
out
cli
mov
lret
add
dec
or
xor
xchg
push
shlb
into
outsl
push
mov
and
inc
fdecstp
imul
stos
sarl
loop
enter
xlat
cmp
cmpsl
jne
bound
in
icebp
cwtl
xor
cltd
js
call
pop
fucomip
test
lds
fwait
mov
repnz
cltd
and
cld
rcl
mov
flds
cwtl
cli
push
jne
cmp
into
xchg
loope
ss
jb
shrl
ret
leave
lock
repz
gs
insb
mov
hlt
sbb
pushf
out
push
mov
jb
pop
xlat
fs
fwait
jbe
xchg
outsl
ret
adc
fst
pop
incb
jmp
addl
add
pushf
push
xchg
testl
jmp
inc
enter
inc
sub
add
test
outsl
int3
adc
lahf
pop
jle
rcrb
pop
or
push
or
sbb
jle
and
sbb
aam
cmp
bound
jb
sti
lret
ffree
lods
dec
subl
fs
xchg
inc
sub
mov
xor
movsl
scas
or
flds
iret
dec
in
sub
xchg
jp
xlat
xchg
enter
xchg
jno
jge
push
add
cwtl
stos
dec
fistl
mov
rolb
scas
pusha
add
jo
xor
mov
iret
add
aad
xchg
clc
sbbb
sub
push
cmpsb
adc
aaa
popa
mov
jge
sub
cs
cmp
movsb
gs
jne
outsb
in
mov
mov
or
faddp
cmp
outsb
xlat
and
aam
inc
test
pop
xchg
es
inc
fisttpll
popa
sti
add
out
mov
scas
cmp
arpl
es
in
test
mov
inc
out
std
daa
push
jne
or
shll
pusha
adc
mov
jbe
mov
data16
out
cmpsl
pop
outsl
xchg
cmp
stc
idivb
xlat
cld
sub
cmc
inc
xor
stos
and
sub
inc
mov
pop
repz
pop
jp
lret
pop
cmp
scas
or
dec
cli
fnstenv
daa
imul
xchg
fnstenv
add
jle
loope
dec
cmpsb
clc
test
fs
fsubr
pop
inc
es
inc
xchg
xchg
in
add
and
dec
repz
adc
push
ljmp
shr
mov
aas
test
negl
mov
adc
cmp
fists
cwtl
lods
repz
sbb
into
loopne
fsubrl
or
jl
clc
push
or
mov
mov
fs
movb
xorb
lret
dec
dec
dec
cld
insl
daa
xor
loopne
roll
lea
pop
push
cmp
jne
stos
loopne
mov
pop
es
mov
or
xor
sahf
sbb
mov
ljmp
inc
push
les
mov
hlt
pusha
mov
in
inc
add
xorb
xor
ja
ret
mov
push
addr16
xor
pop
add
out
movsb
xor
iret
ljmp
test
leave
mov
addr16
pop
inc
pop
add
outsl
xchg
scas
rcr
aas
mov
fs
add
jmp
jle
ljmp
fidivl
int
dec
jne
xchg
jl
je
and
mov
out
push
push
push
mov
inc
inc
stc
sub
mov
int
movl
ds
dec
push
pop
jbe
es
pop
popa
mov
pop
subb
or
aam
es
adc
pusha
insb
loope
mov
arpl
inc
cmp
js
cmovl
xchg
xchg
je
jge
push
icebp
or
dec
adc
sbb
sub
mov
repnz
jmp
jmp
sahf
sbb
insl
mov
mov
fsts
pop
sbb
daa
inc
pusha
fadd
adc
ss
mov
mov
pop
sbb
mov
cmp
mov
clc
ds
out
stos
mov
xchg
jbe
movsl
pop
jae
imul
xchg
test
mov
jecxz
sub
jb
bound
lahf
adc
pop
ja
adc
mov
xchg
out
pop
ret
test
dec
clc
or
inc
and
loopne
inc
sub
outsb
in
sbb
repz
dec
cmc
pop
add
scas
lods
pushf
pop
addr16
dec
mov
push
pop
fdivrs
out
inc
mov
movsb
ficoms
nop
sub
icebp
dec
cmp
push
rol
mov
ja
or
mov
adc
cmc
scas
rcrb
cmp
aad
cmp
shr
or
bound
push
pop
popa
xor
leave
fbstp
push
mov
vphsubdq
pxor
les
cmp
leave
sbb
lds
test
xchg
add
push
inc
je
ror
mov
insl
sbb
fisubrl
lods
test
ss
pop
cmp
sti
leave
sub
int3
in
xchg
jl
aad
cmpsb
repz
nop
rorl
fwait
push
xchg
and
mov
out
jo
les
sub
xchg
cmp
test
outsb
dec
mov
adc
cwtl
jb
mov
pop
xlat
out
insb
jo
ret
mov
lcall
xchg
cmpsb
sbb
inc
xor
cs
pushf
pop
mov
repnz
mov
and
mov
mov
mov
idiv
int
add
test
stc
ja
sbb
xor
mov
nop
mov
sub
adc
jbe
sub
inc
mov
fmull
jecxz
or
dec
inc
jmp
inc
data16
push
fisubs
loope
int
out
das
in
xchg
lds
mov
pop
sub
icebp
sarb
dec
mov
out
repnz
push
adc
push
fstpl
testb
rorb
sub
or
and
fnclex
aad
test
rcrl
push
inc
cltd
sub
cmp
sbb
and
dec
lods
push
adc
cld
ja
outsl
mov
add
out
inc
jbe
pop
pop
pop
testb
mov
scas
leave
dec
dec
scas
jbe
mov
iret
jmp
outsb
lock
add
cli
popa
or
pop
ret
dec
and
out
and
aad
push
dec
fimuls
xchg
xchg
jle
jmp
lahf
rorl
sub
scas
pop
jp
xor
mov
mov
ret
xchg
adc
push
int
mov
jg
rclb
ljmp
push
fcmovnbe
imul
xchg
inc
mov
xchg
jb
lret
push
pop
and
inc
jne
mov
and
sub
jbe
lods
loop
xchg
not
xchg
fists
mov
pushl
inc
mov
sti
sbb
addl
lcall
cld
dec
mov
push
cmpsb
sub
mov
inc
mov
movsl
adc
into
xchg
std
pop
add
mov
mov
jmp
jno
aaa
pusha
in
inc
lods
jae
nop
adcl
adc
mov
xchg
js
add
add
push
ljmp
shrb
jae
mov
mov
int3
xor
mov
mov
fcompl
nop
mov
dec
int3
int
lret
aam
mov
lcall
fdiv
shlb
cld
mov
pop
cwtl
clc
xchg
xor
push
shl
xchg
pop
into
xchg
frstor
leave
mov
lds
aaa
pop
mov
adc
sbb
cmp
adc
push
mov
push
pop
cwtl
pop
dec
sub
lods
pop
and
fcomps
and
pop
es
insb
push
push
leave
pusha
fldl
lret
pop
int
add
andb
pushf
mov
addl
cltd
out
ljmp
jnp
or
ret
mov
push
cmpl
lods
push
mov
and
repz
ret
pop
jae
mov
lcall
push
mov
xchg
sub
outsl
cmp
adc
aas
push
paddusb
into
fsubrp
iret
cld
sub
cmp
pop
movsl
shll
xchg
aaa
mov
xor
dec
iret
push
daa
into
push
push
orl
adc
xchg
nop
push
push
or
pop
stc
add
ja
clc
cld
mov
dec
cmp
cli
enter
inc
push
sarl
xor
push
jl
mov
push
push
psrad
sahf
test
loopne
or
and
xor
cmp
gs
push
pop
push
cmpsl
lcall
jp
ret
xor
mov
mov
inc
pusha
adc
adc
fldcw
lds
addr16
cmp
stos
push
pop
and
or
push
in
xchg
ss
push
fs
dec
outsl
loope
xchg
stos
push
push
stos
push
in
sub
or
mov
or
into
mov
movsb
mov
negl
test
dec
xchg
bound
and
repz
ret
dec
dec
mov
fs
pop
popf
mov
enter
lret
xlat
cwtl
sarl
out
dec
pop
dec
pop
push
push
xor
and
push
push
sbb
rcrl
out
cmp
xchg
dec
xchg
movsl
add
movsb
daa
fcmovnbe
test
jmp
xchg
dec
add
jae
pop
push
sbb
arpl
pop
inc
lahf
dec
movsb
fisubrl
insl
adc
fs
cmp
cli
cmp
or
pushf
xor
js
xchg
mov
push
sar
sbb
out
xchg
and
pop
lods
jge
out
cmp
sbb
adc
adc
mov
pop
mov
cltd
lock
movsl
mov
push
daa
dec
ret
lods
ja
adc
les
sbb
xchg
jne
xchg
inc
ficomps
inc
add
push
cmpsl
out
sub
leave
push
cmp
cmp
cmp
pusha
push
mov
out
out
push
xchg
aaa
sub
mov
mov
inc
movsb
ret
push
into
nop
adc
pop
arpl
pop
dec
fdivs
shl
or
cs
lahf
ret
lret
dec
pop
or
push
push
fwait
cld
test
lods
imul
jecxz
jo
lahf
sub
into
outsl
stc
add
ss
sub
mov
rcl
dec
cmp
iret
xchg
mov
das
stos
std
dec
or
cmp
scas
sti
sbb
adc
iret
fs
aaa
jns
sbb
enter
cmp
push
out
ds
mov
lock
hlt
mov
xchg
push
xchg
jl
insb
andb
out
pusha
push
pop
mov
vmovups
mov
inc
loope
mov
or
scas
nop
fldcw
jp
in
out
ret
dec
shr
pop
jecxz
in
xchg
mov
sbb
stos
adc
shlb
loopne
jg
outsb
jp
and
test
adc
nop
push
xchg
jnp
sbb
inc
inc
mov
repz
mov
test
pop
inc
or
fbstp
push
mov
popa
fcmovu
mov
lea
shrl
and
or
inc
xchg
sbb
lock
push
insl
jbe
insb
cmp
jno
bound
add
in
and
xchg
jg
enter
rorb
iret
int3
jp
scas
sarb
jae
fdiv
lds
out
xchg
jb
test
sbb
xchg
add
in
mov
lods
mov
adc
dec
and
cmp
lock
mov
hlt
addr16
cmpsl
bound
mov
jns
cmp
and
or
out
mov
ljmp
scas
mov
inc
cmp
inc
mov
aas
jp
jno
jb
loopne
aad
test
orb
xor
push
call
jno
or
popf
pushf
imul
sub
dec
cli
in
and
ljmp
fbld
pushf
jb
push
sahf
stos
adc
int3
jle
popf
cmc
bound
and
inc
ja
sub
mov
jle
mov
addr16
push
mov
hlt
inc
sub
xchg
xchg
jae
roll
scas
jp
mov
fmuls
xchg
int
int3
addl
pushf
jge
inc
scas
shl
xor
enter
cli
in
jl
ss
nop
xor
sarb
xchg
pop
adc
js
shl
mov
push
or
nop
sbb
in
mov
adc
inc
notl
cmp
rcl
sub
outsb
fdivrl
es
movsl
adc
jae
mov
xor
icebp
fisubrs
sbbl
popa
hlt
lret
test
inc
dec
addr16
rolb
dec
int3
in
aad
inc
mov
push
orb
push
cmp
in
fists
jg
into
enter
mov
mov
inc
jle
jo
xor
iret
push
shlb
jae
ljmp
mov
xor
insl
push
adc
inc
gs
icebp
aam
in
jmp
mov
popf
bound
push
wbinvd
mov
adc
add
mov
adc
mov
loopne
pop
xor
lods
cmp
pop
gs
mov
inc
xchg
xchg
dec
stos
or
xlat
push
cwtl
inc
sub
xchg
dec
das
push
or
push
push
ja
pop
test
int
jno
sbb
cld
sbb
lock
fcmovne
inc
fsin
mov
das
push
mov
scas
insb
lahf
aam
and
add
test
ljmp
movsb
push
push
dec
add
test
bswap
call
lods
xchg
xor
sbb
fsubrp
xchg
nop
jge
xor
ret
mov
lock
mov
enter
mov
jp
lock
into
jb
jo
outsl
xchg
mulb
ktestw
xchg
jecxz
mov
insl
out
fs
dec
sub
dec
or
mov
idiv
jae
dec
data16
cmp
into
ret
jnp
cmpsb
mov
cmp
push
insb
mov
ret
mov
in
ds
mov
or
popa
mov
inc
arpl
bound
push
enter
lret
sbb
mov
mov
icebp
mov
mov
jle
call
mov
sbb
lock
add
inc
dec
sub
call
sub
jbe
int3
sub
out
jne
lds
inc
dec
cs
adc
insb
sub
das
mov
xor
fcoms
pushf
fimull
adc
test
xchg
sub
inc
push
cmp
into
jle
mov
int3
xor
shll
test
addr16
pop
aam
mov
jo
adc
hlt
mov
mull
stc
ss
xchg
test
hlt
loopne
lock
add
xchg
jo
fcmovu
mov
movsb
jmp
repz
push
mov
mov
jecxz
lock
lret
outsl
mov
sbb
fstpl
jmp
in
mov
mov
mov
xchg
leave
push
add
in
iret
pop
jmp
inc
test
aad
or
push
push
sbb
jnp
push
add
out
stos
rcl
insb
ja
sarl
mov
lock
es
ret
lret
mov
aad
pop
rorb
push
iret
push
xlat
push
mov
pushf
push
jp
or
popf
leave
or
mov
mov
push
movsl
test
lret
rolb
push
jnp
push
dec
cltd
pushf
sub
push
cs
mov
into
outsb
mov
xchg
js
shrl
clc
jbe
hlt
andb
inc
sbb
push
sbb
dec
xor
in
mov
sti
push
mov
lret
mov
jl
fbstp
adc
je
iret
dec
sbb
inc
data16
fiadds
sub
push
rcl
daa
insb
loope
popa
sahf
js
lock
mov
roll
mov
xlat
sbb
test
jne
fstpt
ror
xchg
addr16
bound
icebp
inc
outsl
or
lea
mov
call
mov
mov
leave
lods
lret
push
pop
add
xchg
mov
sti
xchg
movsl
pop
cmc
out
mov
mov
cmp
xor
and
xchg
jmp
or
mov
fiaddl
xor
test
lret
imul
xchg
pusha
sbb
or
xchg
mov
inc
cld
lret
jno
push
and
jbe
xor
das
fmull
rolb
dec
jb
lea
aas
cwtl
inc
mov
in
jmp
dec
rol
leave
popf
shll
fdivrl
push
int3
loopne
in
jp
insb
mov
inc
mov
lcall
ds
jl
stos
sub
enter
and
lds
cmp
int3
push
mov
adc
mov
dec
push
jle
xchg
mov
mov
adc
into
dec
jmp
int
jne
xchg
mov
ss
mov
push
sbbb
out
arpl
into
shrl
lds
lock
push
pop
sub
scas
and
mov
insb
mov
or
push
xchg
aam
scas
rcl
xor
clc
rolb
icebp
or
jg
mov
mov
outsb
pushf
mov
jmp
negl
iret
inc
loop
xchg
push
fiaddl
cltd
subl
outsl
and
adc
add
xchg
jecxz
fistpl
mov
push
mov
inc
cltd
push
or
cmc
mov
jno
hlt
int3
test
pushf
outsb
call
jmp
ja
adc
jbe
divl
clc
stc
call
jmp
arpl
int3
and
test
and
mov
jle
lock
mov
test
int3
ljmp
or
xchg
push
pop
xlat
movsb
jp
fdivl
mov
pop
mov
inc
iret
out
jns
ret
aaa
jbe
jnp
mov
pop
sub
mov
mov
inc
ret
es
rorb
dec
jle
fcomps
mov
dec
ja
in
out
imul
mov
add
movsl
outsb
loope
in
adc
sub
fidivs
pop
jle
dec
insb
add
dec
stos
mov
dec
push
incb
mov
cltd
icebp
mov
shrl
pop
sub
mov
lahf
push
aad
addr16
pop
movsb
aam
negl
scas
repz
jo
inc
nop
push
sbbb
push
repnz
adc
push
dec
aad
sbb
adc
mov
insb
fildl
dec
push
xchg
out
je
push
cmp
dec
mov
push
inc
das
out
call
push
jl
push
rolb
sbb
or
ds
add
jnp
add
jbe
push
xchg
and
mov
inc
mov
cmpsl
adc
roll
out
cld
mov
or
lds
insb
inc
addr16
dec
icebp
enter
fidivs
jb
dec
pop
leave
jl
test
mov
cmp
rcrb
mov
xor
mov
xor
sbb
movsl
leave
rcrl
sub
addr16
push
xchg
dec
dec
js
ret
sbb
scas
ljmp
jnp,pn
addr16
dec
mov
and
mov
sub
dec
lret
enter
jnp
mov
outsl
adc
rcrl
orb
push
push
add
xchg
mov
pop
pop
xor
or
in
dec
insb
push
dec
and
out
push
jle
or
insl
and
fwait
push
adc
cltd
scas
pop
push
mov
sahf
pop
pop
mulb
hlt
adc
inc
xor
sbb
jne
out
rol
xchg
popa
pop
adcl
sbb
mov
push
les
js
cmp
push
cmpsb
into
into
sbb
jbe
jae
daa
mov
imul
and
xchg
sti
adc
movsb
mov
lods
xchg
out
in
sbb
fistpl
movsl
inc
add
xor
lods
lds
dec
fistpll
fucom
mov
loop
dec
in
lret
test
jecxz
mov
jle
mov
daa
sub
cmc
int
dec
fisubrs
test
or
xchg
dec
adc
pop
cli
stc
add
mov
shlb
dec
dec
aam
inc
cmp
mov
insl
pop
mov
jnp
push
sub
dec
mov
fdiv
push
jno
xchg
sahf
aam
into
push
arpl
cmc
jl
push
push
imul
outsl
loopne
orl
mov
sbb
push
dec
setnp
dec
data16
cmpsl
pop
clc
shl
jg
nop
stos
inc
out
mov
jbe
fisubs
ror
xor
jo
xchg
jnp
enter
inc
sbb
jl
out
dec
int
xor
jo
loop
jl
xor
add
adc
or
dec
cmpsl
jecxz
push
fsubs
ja
xchg
jle
popf
inc
cmpb
xchg
mov
add
or
out
mov
or
adc
pop
es
scas
sbb
fmull
pushf
shrb
test
pop
push
sbb
lret
mov
out
in
sub
or
pop
cmpsb
jo
mov
jae
jne
cmp
clc
xor
test
andb
loop
jle
mov
insl
aaa
mov
adc
push
rcll
mov
pop
fistpll
xor
in
sarl
adc
in
aad
icebp
fwait
xchg
test
gs
xchg
jbe
ficompl
add
adc
stc
lock
inc
repnz
stos
movsb
mov
xor
lahf
mov
push
pop
cmp
outsl
inc
test
push
jno
mov
ret
sbbl
test
xor
into
in
mov
loope
test
sub
into
jmp
inc
mov
jns
push
out
movsl
mov
xor
jmp
into
pop
jne
hlt
jbe
mov
push
fcom
or
fstps
les
or
stc
lock
cmp
and
jl
inc
and
jle
aam
push
aaa
mov
sub
add
arpl
jnp
daa
xchg
outsb
push
jmp
shll
sub
jmp
rorb
push
sub
jle
dec
xchg
pop
ret
sub
xchg
cmp
das
mov
popa
cltd
roll
lods
jp
sub
mov
cmp
popf
xchg
movsb
imull
clc
iret
fwait
lret
pop
loop
xchg
jo
insb
std
gs
notb
push
adc
pop
movsl
adc
and
xor
cmc
loope
pop
pop
mov
xchg
adc
inc
lahf
aaa
lret
insl
imul
push
sahf
or
dec
fst
push
cmpb
stc
in
add
jbe
fidivrs
push
repz
dec
inc
xchg
adc
and
mov
push
pop
xor
jmp
sti
mov
fsubrl
ror
cs
lods
add
cld
mov
add
ret
or
adcl
insl
pop
mov
pop
ret
mov
jg
inc
addr16
xchg
xchg
lds
pushf
iret
insb
jno
lea
idivl
repz
aas
xor
sbb
adc
or
dec
add
xchg
inc
leave
jmp
rolb
call
fwait
pop
xchg
xor
dec
mov
pop
ret
xchg
xor
scas
xor
mov
jg
in
popa
jecxz
mov
pop
lahf
ljmp
ss
push
ret
xor
and
dec
into
inc
iret
adc
sub
sbb
push
lods
push
shlb
cwtl
dec
cli
movsb
fimuls
cmpsl
mov
cmpsb
movsl
push
add
daa
in
enter
cmpl
dec
xchg
jle
call
add
sbb
je
push
add
repnz
add
out
and
push
push
cmpsl
in
inc
popf
movsb
faddl
mov
aad
roll
and
es
pop
int3
mov
aaa
clc
jge
xor
sbb
out
pop
pop
cmp
subb
xchg
mov
cli
jle
push
adcl
xor
test
jle
test
stos
xchg
dec
mov
nop
lahf
add
int3
xor
outsb
arpl
mov
jle
cli
mov
mov
stos
lret
mov
decb
div
cmp
lds
jg
inc
jno
sub
into
xchg
xchg
les
js
push
call
popa
aam
stos
subb
rcl
lods
dec
mull
adcl
outsl
pop
cmp
lock
addr16
xor
int3
aas
xor
rcl
dec
idiv
push
stos
int
jge
xor
je
jnp
mov
int3
mov
repnz
cltd
pop
dec
sahf
and
pusha
int3
addl
cmp
mov
lret
push
xor
icebp
mov
lods
mov
dec
or
jg
cmp
dec
iret
add
shl
cwtl
leave
fld
pop
sub
mov
pushf
jns
sbb
lret
addr16
loope
jg
int3
add
pushf
arpl
leave
or
push
cmp
lock
lret
cld
movaps
mov
shl
jg
mov
mov
iret
push
dec
dec
sub
das
fiaddl
pop
xchg
dec
push
jne
shrl
inc
aas
add
addl
out
leave
pop
jp
jg
in
jbe
xchg
stc
pop
fmulp
cmp
and
fistl
inc
lret
stc
xchg
je
mov
xchg
lret
popa
scas
pop
out
xchg
fs
cs
shl
leave
cltd
loop
push
jle
push
mov
divb
xchg
jne
outsb
sbb
movsb
cmp
jno
aam
aad
cld
cwtl
mov
mov
icebp
popf
mov
mov
push
gs
xor
out
jbe
les
arpl
jae
inc
or
call
mov
push
mov
push
sub
mov
int3
or
lods
es
xchg
in
sti
into
push
push
inc
rcl
and
lock
sub
sbb
rorb
jno
inc
aam
xor
xor
push
faddl
test
rcll
push
lea
mov
mov
test
xor
rclb
inc
leave
mov
test
popf
scas
dec
inc
addr16
mov
xor
loope
mov
fisttps
pop
rcr
mov
xchg
add
add
push
in
cmpsl
jo
mov
test
add
mov
mov
loopne
sub
xchg
xchg
lcall
int3
mov
cmp
or
clc
cwtl
adc
test
sub
xlat
lret
dec
pop
movsl
ret
outsl
mov
mov
fidivrl
xor
int3
lret
dec
test
ds
mov
jmp
imul
or
xchg
inc
mov
hlt
push
xor
lahf
scas
nop
or
dec
jbe
sub
mov
mov
cli
lods
int3
call
cmp
sbb
into
and
cs
sbb
rcl
in
les
popf
cmp
add
decb
inc
jb
nop
push
sti
inc
xor
and
fcmovne
repz
cmpsb
sbb
cmp
jo
dec
push
xchg
sub
inc
push
or
mov
mov
js
insl
sbb
aas
clc
mov
jno
push
xor
push
push
mov
push
dec
movsb
push
pop
fsubrs
push
or
mov
cltd
out
mov
loope
leave
insb
pop
push
popw
xor
aam
call
mov
push
fidivrl
mov
mov
rcrb
push
adc
push
cmpsb
xchg
aam
or
push
mov
mov
loop
addr16
insl
adc
pop
sub
xor
imul
sbb
cmp
push
out
negb
rorb
leave
fnsetpm(287
mov
popa
or
jecxz
xor
out
mov
and
fistl
stc
adc
jo
icebp
mov
push
xchg
popf
loop
mov
loopne
arpl
mov
jns
incb
inc
in
mov
mov
test
dec
xchg
cltd
xchg
out
je
adc
decb
ljmp
popf
sbb
ret
cmp
push
mov
int3
movsb
insl
xchg
cs
mov
addl
inc
add
jbe
add
mov
xor
mov
shrb
jno
insb
mov
xlat
pop
mov
cmp
and
push
movsb
es
jl
cli
sbb
xchg
popa
inc
sbb
mov
into
das
push
dec
sbb
or
push
outsl
mov
xchg
movsl
bound
fld
or
xchg
aas
je
sti
jb
outsl
push
xchg
in
mov
pop
lea
gs
mov
xchg
dec
test
jge
movsb
cmc
ja
xchg
lds
mov
jp
sahf
jmp
addr16
into
cmp
daa
mov
add
jbe
in
fistps
into
push
nop
cmp
cltd
outsb
jecxz
into
mov
and
and
stos
jl
adc
pop
inc
dec
js
cld
xchg
push
loopne
lods
andl
call
test
ret
cmp
or
cld
or
sbb
push
sbb
sub
mov
popf
sbb
xchg
outsb
arpl
dec
or
aaa
loopne
xchg
mov
push
pop
cmp
push
push
jl
scas
jae
ret
rcl
imull
in
stos
repnz
mov
insl
jp
inc
dec
dec
mov
cmpsb
out
jecxz
in
xor
ficomps
add
adc
lock
mov
movsb
xor
repnz
mov
rol
mov
pusha
loop
sub
xor
daa
icebp
outsl
fs
pop
jl
stos
addr16
stc
mov
adc
inc
aaa
popa
ss
sti
addr16
les
cmpsl
cli
cmp
cmp
pusha
movsl
incb
cmpsl
lret
stos
pop
or
sub
lcall
pop
test
notb
and
xor
scas
imul
scas
jecxz
add
or
mov
ja
dec
shrb
in
push
popf
ret
imul
ljmp
adc
test
cmp
and
shl
and
mul
aaa
les
sub
movsl
xor
and
int
hlt
mov
jne
cwtl
sti
sub
out
jno
lret
dec
ret
test
out
sub
rclb
mov
inc
pop
push
hlt
std
stc
mov
iret
pop
xor
out
ficomps
sbb
xlat
adc
or
outsb
cli
pushf
and
add
andl
sub
cmp
add
test
test
xchg
sub
outsl
lock
or
xchg
jne
out
lds
dec
inc
xor
imul
push
fwait
repz
lret
add
lret
xor
sti
aas
mov
fiaddl
test
cmp
jmp
ljmp
push
mov
adc
cmc
neg
or
test
sahf
mov
inc
jb
outsl
gs
push
fistl
aam
imul
inc
loope
fimuls
dec
mov
test
mov
adc
xchg
sti
je
mov
or
cmpsw
lcall
dec
pop
subb
cmp
mov
and
js
rolb
xor
push
pop
push
popf
adc
inc
add
sti
sub
add
int3
dec
out
xabort
dec
pop
mov
xchg
mov
test
in
stos
lcall
cmc
add
stc
push
lds
jl
fdivrs
mov
cmp
lds
push
lret
lahf
aas
jecxz
sbb
lret
mov
sub
xchg
hlt
xor
nop
out
bound
dec
loopne
dec
push
pop
ds
rolb
ljmp
fmulp
outsb
test
movsb
inc
data16
jmp
mov
sbb
jbe
xlat
push
xchg
sahf
jge
xor
inc
rcll
pop
pushf
js
aaa
dec
push
enter
ret
call
ljmp
mov
sbb
sbb
pop
pop
mov
dec
nop
shlb
ss
dec
cmpl
push
jns
stos
or
cmp
sbb
popa
fcomps
cmpsb
mov
push
mov
cwtl
cld
mov
push
int3
push
cmp
inc
icebp
lahf
xlat
not
sbb
out
scas
xchg
pushf
lds
into
pop
sar
mov
pop
xchg
test
and
inc
mov
mov
lods
mov
sbb
pop
test
ret
rol
clc
out
cwtl
adc
int
and
movsb
push
inc
xor
enter
stos
cs
scas
pop
fadds
sub
xchg
jle
push
sub
cwtl
dec
inc
or
lea
and
cli
push
aad
js
int3
out
adc
lods
xchg
jmp
psrad
fnstsw
sub
mov
repnz
jne
shll
shl
pusha
adc
lret
push
scas
popf
pop
adc
lods
icebp
dec
adc
mov
adc
fldenv
pop
inc
imul
xchg
sub
jns
lret
mov
dec
lods
movsb
in
nop
add
sahf
out
fwait
int3
sbb
movb
mov
int
inc
jl
adc
icebp
rorl
loopne
or
xchg
mov
out
add
jecxz
lahf
test
iret
cmc
fucomp
dec
outsl
mov
aaa
inc
sbb
movsl
mov
jecxz
test
cmp
fwait
or
push
ja
cwtl
into
mov
cld
js
sub
mov
inc
fwait
lock
inc
jge
cmp
and
adc
pop
lcall
xchg
push
jle
cmp
cmp
inc
pop
repnz
mov
arpl
inc
movsl
nop
in
ljmp
mov
xchg
je
call
mov
mov
and
js
jb
stos
xchg
mov
ret
mov
fcmovnu
pusha
lret
and
mov
xchg
dec
mov
int3
nop
push
or
mov
pop
in
jae
dec
adcb
mov
push
and
dec
xchg
in
out
jb
push
mov
push
mov
mov
aam
jns
shlb
push
pop
mov
je
xlat
mov
test
and
addr16
dec
adc
movsb
out
mov
xor
lret
push
mov
cmp
stc
push
popa
push
mov
or
adc
jl
sti
test
aam
addr16
iret
xlat
xlat
ret
sbb
mov
jp
jle
xchg
dec
mov
mov
cmp
out
lods
cli
add
adc
fdivs
fnstcw
es
iret
pop
in
push
movsl
mov
loopne
pop
loope
ret
jns
ds
and
iret
in
push
clc
scas
popa
in
mov
cli
mov
and
inc
mov
cmp
pop
stos
adc
rcll
add
or
mov
mov
sub
cmpsb
xor
mov
pop
pop
xchg
andb
add
test
sub
sbb
mov
lods
push
push
sub
mov
pusha
stos
ret
test
pop
sti
out
repz
daa
insb
mov
sbb
sub
mov
shlb
mov
or
add
xorb
es
fwait
jno
mov
cmp
cmp
pop
xor
xlat
lret
pop
iret
test
mov
or
xlat
fidivrl
clc
sub
loope
mov
movsl
dec
mov
xchg
sbb
sbb
adc
rorl
repz
inc
push
xchg
jg
cwtl
lret
mov
mov
popf
xchg
rorb
repnz
sub
insb
test
pop
int
pop
in
mov
dec
test
add
push
loopne
pop
add
cli
cmc
outsl
test
sub
inc
jns
push
push
bound
pop
repnz
scas
insl
sbb
push
xorl
test
rclb
ret
call
lods
lret
jns
and
test
jno
push
js
std
rcl
stos
inc
or
xchg
jmp
fmull
fdiv
xor
xchg
xor
cmpsb
sti
push
mov
mov
add
xchg
push
aam
xor
sbb
cmp
out
push
shlb
inc
pop
mov
sbb
loopne
cmp
add
shll
mov
jmp
pop
mov
rcr
xor
ja
push
sbb
in
jmp
aaa
and
aam
loope
mov
pop
pop
pop
das
repz
cmpsl
jmp
and
jo
test
dec
xor
dec
xchg
es
sub
inc
out
mov
mov
push
mov
pop
ljmp
cmpsb
out
and
loopne
mov
cwtl
mov
or
sub
cltd
lds
mov
mov
dec
cmp
xor
mov
inc
test
seta
enter
jle
loop
jecxz
out
dec
inc
es
sbb
push
fwait
insl
xlat
xchg
sarl
adc
add
xlat
or
adc
negb
std
xchg
in
and
pop
mov
sbb
push
xor
and
int3
pop
mov
add
xchg
push
pop
pop
and
or
dec
sbb
das
mov
les
xor
cmpsb
or
out
int
aam
stos
xchg
or
pop
imul
out
rcl
xor
aas
jl
jb
xchg
dec
and
aaa
pushf
pop
push
mov
sahf
mov
add
cs
out
adc
mov
mov
fisubrl
addr16
fldl
mov
bound
inc
cmpsb
jo
sub
fimull
dec
add
cld
or
push
cmp
or
rolb
mov
jb
sbb
xor
pop
not
xlat
mov
cmp
cli
adc
mov
jle
loopne
push
ficompl
je
test
daa
push
pop
cmpsl
lea
adc
cmp
mov
test
ret
data16
outsl
into
fwait
stos
aaa
mov
and
test
dec
mov
adc
test
cmp
stos
jp
and
jnp
or
pop
fcmovnu
push
pusha
scas
je
jb
mov
iret
sbb
cmpsb
cmc
lahf
movsl
dec
mov
mov
or
mov
ljmp
nop
sub
push
dec
in
movsl
loop
xchg
dec
push
sbb
fadds
rorl
inc
scas
es
sbb
pop
jo
mov
testl
movsl
stos
leave
xchg
pop
ja
arpl
xchg
dec
int3
mov
cld
xchg
xorb
repnz
leave
dec
mov
xchg
mov
pop
mov
pop
add
aaa
xchg
into
fdivl
jns
mov
mov
in
jno
mov
mov
out
lcall
fisubs
in
or
mov
stos
aas
addr16
mov
xchg
adc
jno
dec
movsl
push
aaa
into
mov
push
cmpb
nop
les
imul
xchg
xor
xor
addr16
pop
sbb
mov
push
enter
add
lods
push
test
out
dec
outsl
lret
repnz
popf
ret
inc
es
pop
out
nop
lods
mov
inc
lods
std
lea
and
cltd
loop
lahf
xor
jg
lret
fcom
sbb
jno
mov
dec
movsb
adc
mov
push
jge
fmul
pusha
lods
xchg
mov
loop
jg
aam
cld
inc
jb
das
pop
into
pop
cmc
sub
mov
inc
dec
lcall
and
or
mov
adc
push
pushf
mov
popf
and
dec
xchg
pop
lret
adc
or
and
call
adc
adc
xlat
js
aad
pushf
xchg
outsb
sbb
push
stc
cwtl
adc
pushw
dec
inc
int3
xchg
pop
call
aam
xchg
inc
lea
stc
inc
xor
leave
xor
and
out
dec
push
push
lods
stos
sbb
xor
mov
mov
je
loopew
add
insb
mov
out
or
xchg
sub
dec
sbb
or
hlt
test
mov
and
and
into
xchg
dec
mov
mov
cltd
aad
scas
and
cmpsb
fwait
mov
mov
sbb
mov
lahf
mov
in
mov
push
pop
xor
ficompl
jne
xor
dec
enter
es
aam
inc
sub
jbe
int
xchg
cltd
add
in
xchg
bound
xor
lods
push
mov
jecxz
dec
test
bnd
lock
sbb
loop
mov
dec
ja
inc
push
cltd
mov
imul
xchg
xchg
jmp
push
inc
rolb
mov
and
xor
jle
jns
imulb
lods
or
ljmp
jae
out
push
sub
loope
mov
push
xlat
rolb
mov
jmp
test
sar
mov
lea
mov
jecxz
push
mov
push
mov
dec
inc
push
pop
movsb
sbb
into
daa
adc
aaa
cmpb
pop
sub
out
mov
mov
lret
lahf
jle
push
mov
mov
ds
and
scas
fisubl
jmp
insl
dec
repz
or
xchg
test
push
xor
inc
pop
jl
adc
adc
lods
pop
dec
pop
ret
jecxz
int
int
dec
xchg
xchg
lods
das
sbb
nop
jle
std
subb
in
incb
xor
push
into
sub
xor
nop
lret
int3
loop
adc
ret
add
and
les
mov
enter
leave
and
jo
aam
jb
adc
pop
lahf
mov
push
rol
cs
in
xchg
mov
ffree
sti
push
enter
or
shrb
lods
dec
mov
aam
sbb
mov
add
insl
shrl
pop
xchg
loop
mov
aam
sub
mov
test
rolb
adcb
enter
movsl
and
push
lret
xorl
sub
mov
scas
ret
xchg
mov
adc
mov
dec
mov
outsl
sti
insl
xchg
jb
xor
mov
fists
dec
aas
inc
cli
arpl
xor
xor
ret
mov
fdivs
add
divl
in
int3
leave
aas
lret
mov
pop
xlat
addr16
mov
fldenv
in
js,pn
out
inc
and
addr16
mov
pop
inc
add
mov
jecxz
enter
jns
xchg
sub
mov
jmp
aaa
mov
push
sbb
cld
outsb
out
pop
push
leave
or
cli
and
nop
sahf
inc
jmp
hlt
repnz
imul
sub
xchg
jecxz
insl
dec
lahf
jl
lret
aaa
arpl
mov
mov
dec
pop
xchg
mov
ret
inc
dec
stc
popf
addb
pop
shl
out
jmp
sbbb
nop
or
jb
add
xor
movsb
cwtl
mov
jbe
loope
and
imul
lods
int3
lock
cmpl
jmp
outsl
cmc
inc
popa
xchg
dec
arpl
sub
mov
dec
rorl
and
jmp
push
and
sbb
call
pop
popa
test
int3
mov
push
lret
cmpsb
inc
ljmp
dec
mov
jl
push
adc
jnp
cs
aas
xchg
cltd
into
dec
lret
lock
out
mov
in
mov
mov
rclb
out
mov
or
aad
mov
mov
sub
cmp
in
push
insl
ja
mov
call
out
out
push
inc
pop
outsl
addr16
mov
sbb
or
xchg
adc
push
mov
cmp
dec
push
pusha
in
adc
or
popf
mov
jae
popa
rclb
aas
sti
fdivrl
inc
push
add
and
xchg
sub
adc
out
inc
int3
data16
call
popa
pop
divb
inc
cmc
xorb
dec
dec
mov
pop
mulb
out
push
jl
je
and
lock
orb
in
dec
add
cld
xchg
push
out
in
rolb
push
jle
int
flds
cmp
test
mov
loope
gs
cmp
icebp
data16
adc
mov
dec
fsubs
push
xor
and
pop
inc
push
adc
sub
xchg
addr16
xchg
test
mov
pop
dec
sarb
add
mov
xchg
data16
dec
jl
cmp
xor
sub
call
imul
fcmovne
sbb
dec
lret
and
inc
clc
inc
jle
xor
test
int3
jle
pcmpgtd
mov
insb
shlb
mov
or
xor
xchg
js
jno
popa
jle
pop
out
loop
ret
pushf
rclb
aam
iret
cli
popa
mov
dec
shl
ret
jmp
cmp
test
out
mov
sub
pop
rorb
push
xor
mov
jno
mov
imul
ficoms
adc
pop
pop
loopne
lret
mov
fs
pop
push
rolb
repz
push
xchg
pushl
jbe
xor
jne
xchg
jns
xchg
or
aaa
iret
into
jge
fidivrl
push
lcall
je
sub
or
sbb
pop
or
ror
imulb
in
popf
out
cmp
bound
into
ret
and
xor
dec
das
xor
shll
add
push
fisubl
in
mov
lea
fistpll
out
sub
dec
subb
out
pop
into
sub
inc
call
das
dec
into
iret
cmpsl
out
ss
loop
and
cmp
add
sbb
or
mov
mull
lret
rorb
jecxz
dec
stc
fwait
push
scas
and
mov
cmp
xlat
rep
cmp
arpl
dec
and
popa
test
push
fcmove
pushf
leave
xchg
cmp
out
or
fisubrl
pop
in
jecxz
iret
push
adc
aas
stos
inc
addr16
dec
sbb
add
jnp
sub
lods
jne
sarb
cld
xchg
cmpsl
lea
cmp
pushf
fs
test
add
movsb
sahf
inc
in
cmp
dec
inc
xchg
repnz
jno
jmp
cmp
movb
dec
in
mov
sarb
lret
mov
mov
xchg
lret
pushl
adc
lret
cli
cmp
pop
into
mov
inc
mov
minps
enter
inc
fwait
mov
ja
inc
xchg
movsl
ds
js
lret
clc
je
and
repnz
incb
xchg
hlt
mov
les
rcr
xchg
and
pop
xchg
outsl
int
aam
out
adc
enter
lret
cmp
call
sbb
ja
lods
lds
mov
pop
mov
jae
rcl
xchg
xor
jbe
push
pushf
xchg
fsub
call
ds
or
jl
daa
or
mov
adc
lods
and
pop
lahf
lret
test
pop
xor
push
aas
call
das
int3
dec
pop
std
sbb
lods
sub
cld
jp
out
jnp
aas
pop
rep
out
xchg
fiadds
cmp
mov
movsl
xor
lret
pop
jge
cmp
cwtl
or
pop
fcoml
sub
cmp
dec
lea
popf
sub
sbb
push
shl
stc
cs
fwait
rorb
xchg
in
rorl
nop
mov
sbb
scas
mov
jbe
sbb
cmpsl
push
clc
sub
mov
test
add
iret
sar
push
repnz
shlb
mov
pop
xor
imul
xchg
mov
xor
jns
rcl
lds
psubb
fldt
sbb
movsl
cmc
pop
lods
rcll
orl
add
loop
aad
adc
test
jae
stc
dec
ljmp
add
icebp
int
sbb
xchg
stos
fcmovnbe
les
jp
imul
or
inc
add
idivl
jae
popf
rclb
sbb
cmp
push
iret
sbb
aaa
ljmp
mov
loop
or
sub
stc
pop
cli
mov
adc
mov
jg
jecxz
loop
xor
mov
movsl
inc
dec
xorl
sbb
repnz
mov
mov
lcall
xor
mov
sub
ja
insb
mov
fwait
mov
aaa
in
daa
mov
sti
adc
xchg
js
cmp
divb
and
sub
xor
mov
push
mov
pushf
and
mov
out
fsubrs
enter
or
insb
std
out
add
or
mov
mov
lods
mov
jg
inc
lahf
repnz
fs
cli
adc
xchg
outsl
lods
push
ljmp
inc
push
mov
pop
lods
ret
mov
movsl
push
imul
sub
jb
aaa
out
sbb
adc
inc
mov
mov
mov
sbb
dec
add
test
stos
lods
into
andb
out
loope
in
ficoml
aad
pop
out
jl
sub
cld
movsb
and
lret
mov
cmp
mov
jp
in
mov
icebp
push
pop
gs
mov
lret
adc
rclb
pop
stos
fcomps
leave
mov
rcl
jp
mov
xchg
in
frstor
mov
cmp
aas
xchg
jae
add
sub
dec
ja
fisubl
dec
insb
rclb
sbb
fbld
jg
push
xor
mov
adcb
sahf
mov
test
mov
mov
lret
outsb
mov
ds
js
xchg
lds
dec
or
jmp
leave
iret
jo
pop
lahf
sub
jmp
xchg
mov
pmulhw
out
fbstp
insb
mov
add
mov
jne
in
inc
jge
adc
outsl
fstps
ret
sbb
inc
out
sbb
mov
sbb
pop
lds
or
rol
test
xchg
das
std
inc
ds
pusha
xchg
adc
ljmp
fidivrs
insl
push
mov
inc
mov
cwtl
movsl
fmuls
in
adc
test
mov
movsb
sbb
popa
aaa
rorb
cmp
push
out
push
loope
push
xchg
enter
push
jg
fbstp
inc
dec
fcom
push
cli
xchg
dec
mov
lret
jge
jae
mov
lods
fcomp
stos
or
movsl
test
push
xor
test
adc
test
push
mov
rorl
xchg
dec
ret
fwait
jbe
call
jb
aaa
push
lods
cmp
lahf
cs
aam
imul
ds
das
mov
icebp
xchg
insb
aaa
inc
push
add
push
mov
das
lds
sub
out
sub
loope
mov
jns
push
popf
sub
int3
imul
dec
dec
pushf
loop
repz
shr
pop
push
sub
xchg
mov
jge
sbb
sbb
lock
mov
jmp
jbe
mov
js
sub
ret
xor
xchg
mov
sub
jge
push
and
loope
outsl
pusha
mov
lock
iret
ja
jne
out
clc
iret
xchg
xchg
xchg
jo
shlb
jbe
fidivrl
mov
fcomps
jne
fmuls
nop
dec
sahf
lea
cltd
pushf
das
cwtl
xchg
jmp
mov
movsb
push
orb
ds
arpl
iret
xor
inc
outsb
sahf
gs
push
fists
adc
xor
jne
fldl
push
dec
les
xor
cltd
jbe
mov
jb
xor
fwait
push
jnp
in
xor
mov
or
data16
into
sub
sub
sarl
push
jnp
sahf
xchg
gs
sub
adc
insl
jae
nop
int
movsl
lods
push
repz
lret
jbe
fistl
mov
sti
fs
push
pop
pop
imul
movsl
mov
push
xchg
nop
xchg
pushf
fstpl
mov
lock
pop
punpcklwd
mov
out
sahf
mov
xchg
stos
scas
inc
push
sub
lea
mov
add
rorl
cmpsl
outsl
loopne
dec
lods
push
stc
shr
add
ret
dec
push
mull
mov
dec
push
ja
mov
pop
out
js
ds
mov
aaa
out
addr16
or
sub
pusha
aam
es
into
ja
xchg
jge
jp
sub
mov
stc
xchg
and
sbbl
cwtl
add
in
hlt
adc
in
mov
sub
adc
mov
cmp
out
add
scas
or
fst
aad
or
mov
fidivs
push
ret
out
lods
repnz
subl
cmpsb
out
mov
and
inc
jb
mov
into
lret
testb
sbb
sbb
lret
add
adc
jo
xchg
push
push
test
jb
lret
mov
sbb
inc
push
fwait
push
xchg
pop
lds
adc
jbe
jno
ja
push
xchg
sbb
aas
adcb
mov
dec
jecxz
test
mov
das
mov
or
lret
ja
mov
jnp
push
add
pop
cmpsb
mov
mov
or
inc
or
or
mull
mov
inc
xchg
push
xchg
mov
cmc
imul
lret
sub
cmp
add
ret
jbe
mov
imul
roll
ds
mov
cmp
cmp
pop
mov
and
mov
cmpb
jne
clc
scas
xor
inc
int
test
xchg
jmp
jne
es
mov
aas
or
xchg
xchg
int
mov
mov
push
xor
cmp
movb
sbb
dec
cmp
leave
enter
inc
aaa
cmp
jnp
fucomi
int3
pop
je
adc
enter
lret
dec
push
mov
mov
sbb
cmp
xor
dec
sti
mov
lock
cmp
push
mov
leave
sub
cmp
fnstenv
mov
adc
pop
jmp
jae
jo
loop
lret
test
dec
inc
cmpsb
stc
mov
and
ret
push
mov
adc
testl
jns
xchg
dec
jge
fisttpll
fisttps
rcl
std
sub
es
cmpsl
jae
in
and
fdiv
jp
testl
cmpsb
sbb
push
sub
xor
sbb
push
mov
out
push
rorl
xchg
sbbl
scas
or
inc
sub
cltd
add
ds
or
and
mov
sbb
mov
popl
adc
sbb
imulb
or
jns
inc
lahf
push
push
insb
scas
adc
into
lret
add
rcl
cltd
dec
scas
cmpsl
push
dec
inc
add
xor
pop
popf
cmpsb
negb
sbb
fdivr
mov
outsl
add
idivl
fucomp
mov
pop
fiadds
int3
mov
test
xor
cs
test
call
xlat
hlt
cmpsb
leave
subb
ljmp
lahf
inc
lret
add
dec
push
fidivs
popf
out
stos
fbstp
addr16
jl
jmp
sub
test
lcall
imul
das
inc
xchg
mov
andl
and
movsl
mov
stc
mov
test
pop
mov
mov
enter
dec
adc
lds
and
lea
call
xchg
mov
push
test
sarb
and
addr16
dec
xchg
pusha
out
xchg
gs
mov
mov
addb
dec
into
mov
icebp
out
out
xor
lret
pop
inc
mov
xor
in
sub
xor
dec
mov
and
jb
cmpsb
ret
lret
cltd
xchg
push
jno
mov
test
addr16
jmp
and
es
or
sbb
arpl
cmpsb
ffree
or
jge
add
aam
sub
adc
pop
ret
push
inc
pusha
cmp
imul
ljmp
sahf
shll
dec
mov
pusha
outsb
push
sbb
cmp
loop
pop
push
push
ret
dec
mov
scas
rolb
sahf
push
loopne
xchg
jbe
and
jmp
push
sub
insl
and
mov
repz
test
outsl
xchg
jns
shlb
dec
fs
pop
clc
test
loope
jmp
sub
loop
mov
push
cltd
insl
test
rcl
test
stos
pop
insb
sub
ds
jb
push
push
jbe
lock
idiv
pop
movsl
adc
leave
jl
cwtl
jle
mov
mov
lock
test
xorb
xchg
inc
mov
mov
out
dec
xchg
fdivrs
dec
pop
dec
fnstcw
mov
fs
mov
pop
dec
call
push
xchg
aas
cmp
ret
in
div
insl
sarl
fcoms
inc
and
arpl
repz
and
add
loope
movsb
inc
das
aas
jmp
xchg
cmp
call
aaa
test
or
sahf
cmpb
pushf
subl
pop
mov
or
push
or
lret
xchg
ss
mov
aas
adc
jae
mov
add
int
sbb
sub
ja
dec
push
cmp
outsl
pop
mov
pop
sbb
rolb
cmp
xchg
sub
add
repnz
add
jp
xor
pop
xor
lds
dec
xchg
push
cld
cmp
ret
dec
sbb
xor
mov
pop
jbe
loop
movsl
mov
imul
add
pop
je
shlb
pop
dec
push
pop
sahf
cmp
cwtl
jb
mov
or
insb
jbe
pop
cltd
or
mov
ljmp
orb
fisubrl
push
jo
sbb
xchg
cs
imul
pusha
dec
xchg
push
test
in
pop
adc
test
lcall
or
add
mov
xchg
dec
jne
in
add
scas
mov
jbe
cmp
icebp
push
rorl
out
sti
jo
xchg
adc
sub
flds
mov
xchg
xchg
mov
mov
imul
push
mov
jge
lock
xchg
mov
xchg
adc
hlt
dec
push
dec
sub
sbb
pop
int3
mov
xchg
lret
adc
jae
dec
pop
inc
stc
stos
imul
pusha
or
xor
lea
add
dec
lcall
stos
rcrb
xor
or
xchg
jp
xchg
xor
rcrl
dec
dec
pop
cmpsl
pop
xchg
daa
cmp
outsb
ret
mov
sub
push
pop
mov
daa
xchg
out
outsl
pop
js
mov
adc
pop
loop
push
loope
aaa
add
cltd
push
gs
jecxz
jecxz
or
adc
rcl
popf
shrl
in
es
fidivl
into
inc
mov
iret
out
or
notl
jl
mov
xchg
aaa
fiadds
outsb
sbb
sub
xor
cwtl
pop
jmp
mov
mov
push
pop
jmp
insb
dec
popf
dec
add
test
push
mov
cmc
inc
pop
int3
inc
out
aaa
into
xor
in
jne
aas
int
jnp
push
pusha
xor
adc
mov
mov
mov
dec
sbb
mov
sbb
rorb
and
mov
sub
xchg
sarb
fcmovnb
popa
cld
icebp
dec
inc
ljmp
js
mov
sbb
push
aam
mov
push
ljmp
mov
dec
xor
sarb
cli
sbb
loope
repz
xorb
popf
test
sub
and
mov
lds
cld
jg
dec
pusha
and
mov
aaa
add
push
mov
insb
enter
in
stos
inc
jle
scas
xor
stc
xchg
int3
push
xorb
ja
incb
jnp
call
jo
enter
inc
les
arpl
sahf
aaa
lret
mov
cs
mov
jge
add
inc
aad
leave
fsubl
mov
xlat
jnp
add
mov
adc
lds
hlt
shlb
iret
xor
adc
repnz
or
cs
sub
mov
in
inc
in
cwtl
and
test
sbb
jns
xor
mov
fcmovbe
lea
xor
mov
in
inc
add
popf
xor
mov
pop
rcrb
cmp
jecxz
dec
xchg
into
mov
addr16
arpl
popa
or
dec
inc
sub
jg
add
jle
mov
sbb
mov
xchg
iret
shr
mov
clc
pop
jp
xchg
jae
mov
jns
call
jbe
into
stos
les
enter
mov
mov
pop
in
cmp
jecxz
fbld
xchg
lods
aam
and
fidivrl
aam
inc
negb
sbb
in
jecxz
and
lcall
dec
xchg
dec
jle
jne
add
into
ja
pop
push
cli
fucomp
mov
shlb
addr16
out
and
dec
sub
push
ja
or
mov
add
mov
lcall
push
dec
test
add
insl
imul
dec
push
sbb
ljmp
dec
out
lea
movsl
outsl
push
sub
inc
jno
icebp
sbb
adc
push
xchg
fnsave
mov
dec
jo
lret
roll
push
movsl
add
pushf
imul
pop
lods
inc
pop
mov
out
sub
leave
andb
jp
out
add
test
xor
sbb
sub
ret
ss
call
mov
mov
xor
dec
mulb
dec
loop
js
mov
fwait
enter
fs
mov
mov
aas
bound
pusha
stos
add
int
xor
xor
shl
push
dec
test
jl
or
stos
push
iret
mov
mov
dec
and
inc
mov
xchg
cmpsb
inc
mov
adc
in
js
daa
lahf
and
inc
sbb
arpl
not
mov
mov
push
je
in
mov
cmp
xor
mov
or
cmpsl
out
cmpsl
into
jo
int
xor
mov
pusha
jl
jp
in
mul
ret
push
insb
jecxz
or
jmp
sahf
lods
aam
sub
es
sbb
mov
sbb
mov
xchg
fcoml
in
lock
dec
mov
aad
das
xor
les
jno
lcall
dec
mov
dec
xor
mov
nop
rclb
inc
xchg
push
mov
push
iret
xchg
pop
inc
addr16
mov
pop
adc
sbb
stos
call
leave
or
cmp
mov
jmp
addr16
ds
cli
pop
mov
mov
inc
bound
inc
dec
mov
outsl
push
pop
mov
lds
sbb
inc
mov
pop
outsb
xchg
pop
sub
dec
sub
dec
push
out
inc
in
or
dec
in
cmp
mov
mov
jmp
and
dec
inc
lret
or
jl
repnz
and
mov
and
out
loope
jle
int
into
lret
out
cmp
sub
sbb
in
lret
imul
daa
js
fsubrl
scas
dec
sub
mov
dec
test
mov
cmp
arpl
xor
and
inc
mov
cli
pop
ficomps
clc
xor
fs
insl
lods
nop
imul
inc
push
push
xor
push
push
out
mov
addl
adc
cmp
jae
adcb
and
jnp
movsl
aam
mov
push
cmp
repz
call
bound
lret
enter
out
sub
and
xchg
in
testl
push
dec
xor
cmp
scas
icebp
mov
sub
cmpsl
push
outsl
hlt
jns
insb
stc
notl
add
jl
sti
adc
aad
adc
lods
push
mov
and
out
cld
scas
jne
in
cmpsl
jmp
pop
dec
cmpsb
movsl
int3
hlt
xchg
jns
push
add
pushw
sbb
stos
mov
cmp
call
fs
mov
in
addr16
lret
dec
ss
icebp
fldl
add
add
lds
and
je
mov
add
int3
arpl
cltd
ja
test
rcl
xchg
push
movsb
fneni(8087
add
push
int3
js
inc
sbb
inc
and
pop
xchg
adc
sub
and
push
push
je
ljmp
int3
cltd
iret
dec
inc
xor
shl
or
jl
mov
orb
pop
inc
loop
sub
add
ljmp
push
inc
cli
xor
sti
lds
xor
out
inc
testl
and
test
jecxz
mov
movsb
or
out
jle
sub
sub
shll
outsl
fwait
pop
fnstcw
data16
mov
mov
mov
mov
cld
push
lock
or
jbe,pn
jmp
xchg
and
pusha
mov
aaa
pushf
mov
adc
out
xchg
sbb
inc
lahf
mov
mov
cmp
cltd
out
sbb
mov
xchg
and
cli
ss
out
and
shrb
cmp
insb
xchg
das
hlt
mov
hlt
jbe
push
loopne
xor
cld
mov
in
fdivs
push
xchg
inc
aaa
cmpsl
mov
into
loop
mov
js
push
xor
or
inc
push
jo
cmp
xchg
mov
cltd
sub
lret
xlat
push
adc
add
fmuls
jmp
jl
xchg
or
ss
jle
aaa
sbb
and
loopne
enter
cli
mov
or
aad
or
icebp
leave
pop
loopne
js
sub
pop
inc
xchg
gs
shlb
shl
fimuls
out
push
je
imul
jp
out
sbb
jecxz
inc
xlat
sbb
cmpsb
pusha
add
lahf
ret
outsb
sbb
dec
gs
pop
mov
cmc
stos
jns
in
ficomps
inc
fcomp
xor
gs
adc
mov
push
cmp
push
push
or
out
fsubl
inc
push
pop
loope,pt
add
aam
push
and
inc
popa
and
mov
js
out
jecxz
jbe
hlt
lcall
cli
dec
sbb
aaa
push
loope
into
adc
shlb
insb
jo,pn
push
mov
cmp
jnp
pop
test
xacquire
std
in
roll
nop
sbb
setns
mov
xor
inc
popa
inc
xor
mov
adc
xchg
loopne
popf
out
pop
lods
push
ret
inc
or
iret
xchg
stos
sbb
xchg
pop
cmp
cs
xlat
cmpsl
data16
lret
fsubrs
mov
shufps
roll
shrb
clc
mov
int
and
mov
bound
mov
test
mov
cld
inc
jnp
aad
mov
dec
jecxz
loope
out
adc
push
ficompl
or
pop
pop
pushf
test
fldenv
sbb
cmp
mov
add
hlt
jmp
jecxz
imul
icebp
dec
aad
adc
xchg
movsb
xor
mov
call
shr
or
ds
or
aas
aam
fadd
mov
push
jbe
dec
popa
bnd
imul
add
movsl
pop
std
fst
pop
jns
incl
adc
ficomps
and
popl
int3
cmp
fimuls
lahf
jmp
cmc
ljmp
mov
add
repz
push
xor
push
test
inc
and
fidivs
test
cld
lret
jae
pusha
mov
cmp
lret
sarb
dec
cmpsb
push
jp
jbe
fxch
cmpsb
mov
adc
test
dec
xchg
aad
inc
lahf
lods
and
mov
mov
pop
mov
movsl
jecxz
lock
popf
jno
test
push
testl
dec
rolb
mov
jp
sti
mov
cmp
or
movsl
jbe
xchg
fdivl
mov
dec
jbe
jbe
in
lods
andl
movsl
xlat
pop
inc
push
lds
pop
out
out
loope
mov
rorl
jge
std
sbb
cld
adc
mov
pop
and
inc
das
push
std
mov
subb
mov
scas
xor
lods
and
or
or
fldenv
xlat
xchg
jmp
inc
stos
das
ja
dec
int
mov
and
dec
inc
dec
aam
popa
mov
cmp
es
dec
jnp
cmp
mov
std
pop
int
sti
iret
fwait
inc
sbb
rcr
xchg
push
sub
sahf
mov
pushf
sub
and
inc
and
ret
stos
mov
xchg
push
aad
dec
in
loopne
fisubrs
or
mov
mov
and
xor
xchg
mov
xor
inc
insl
movsl
popf
ljmp
sub
repz
pop
lahf
ret
and
cltd
movsl
add
jge
js
cmp
loope
mov
hlt
add
mov
insb
icebp
lret
in
xchg
pop
js
dec
pop
cmp
stos
loope
ficomps
vphaddubd
pop
or
fildl
scas
sbb
repnz
adc
jae
cmp
add
sbb
xlat
xchg
cmp
cld
mov
out
dec
jb
dec
inc
bswap
into
cmp
pop
idivb
sarl
pop
push
out
cmpsb
push
lods
push
pop
xlat
clc
adc
shrb
out
or
pusha
subb
iret
and
lret
ds
das
sbb
sub
int3
and
dec
mov
and
mull
jns
es
push
inc
loopne
imul
mov
test
nop
js
push
pop
dec
scas
in
mov
mov
cwtl
and
xchg
out
rcl
mov
pop
mov
xchg
xlat
sbb
ja
push
jp
push
scas
arpl
outsb
adc
pop
pop
jg
into
mov
xchg
mov
xor
dec
mov
stc
aaa
and
into
lods
inc
out
inc
dec
or
pop
ret
test
lcall
push
and
scas
js
rsqrtps
or
insl
jp
je
iret
push
es
and
mov
lock
imul
movsb
int3
aas
sbb
rolb
fsubr
int3
cmc
push
out
dec
adc
xchg
inc
test
push
mov
ret
mov
into
test
jns
cmpsl
js
das
jo
dec
call
popf
mov
or
sbb
mov
std
repnz
sbb
and
js
int3
pop
ss
addr16
lock
jp
and
mov
cwtl
add
pop
fwait
popa
mov
outsb
fst
negl
mov
out
and
pop
lcall
js
into
dec
aam
icebp
nop
movb
dec
xor
cmc
cli
js
lret
mov
push
out
xchg
xchg
mov
and
push
cs
or
lahf
sub
lods
stc
inc
in
test
add
lret
cli
and
adc
sbb
dec
xchg
test
into
mov
movsb
mov
push
leave
sub
pop
xchg
mov
out
ds
cs
mov
mov
inc
add
mov
icebp
add
enter
mov
adc
jl
sub
sbb
xchg
sbb
dec
or
pop
and
dec
mov
sbb
jnp
lret
hlt
outsl
push
idivl
or
mov
dec
jne
push
mov
dec
xchg
xchg
aas
push
cmpsl
in
mov
mov
mov
mov
push
xorb
ds
es
sbb
jecxz
mov
jmp
jae
loop
inc
or
repnz
and
push
mov
lods
stos
adc
mov
fisubl
mov
jbe
test
fs
dec
push
mov
cmp
sbb
orb
adc
add
jecxz
jp
ret
stc
pop
out
leave
cli
shlb
adc
push
adc
mov
daa
cmc
stos
dec
out
xor
lcall
add
sbb
cmp
pop
sub
int3
fnstsw
aaa
stos
push
mov
out
and
or
mov
dec
shll
pop
js
insl
xchg
push
repnz
scas
fcoms
test
sar
cltd
pop
rcll
leave
add
sub
cmp
lock
mov
sub
insb
sbb
cmc
les
ficomps
mov
popf
xchg
and
bound
mov
cld
not
sub
push
adc
cwtl
rol
sbb
into
aaa
cmp
loope
fwait
sbb
aam
test
inc
lret
push
push
xchg
in
mov
cmc
mov
negb
gs
std
ss
lods
sti
movsl
in
movsb
push
fidivrs
ficomps
adc
lahf
push
push
mov
inc
jns,pn
sub
or
test
push
lock
ds
das
mov
xor
xchg
mov
cld
rcl
movsb
cli
sbb
adc
stos
lret
hlt
insb
into
mov
stos
test
arpl
jns
mov
ror
push
mov
push
fs
out
aam
push
jno
pushf
dec
adc
call
imul
sbb
fildll
xchg
arpl
nop
sbb
bound
mov
cmpsl
mov
fld
adc
sub
aam
ja
frstor
cwtl
push
js
int3
dec
shrb
fimuls
leave
push
mov
insb
pop
mov
cmpsl
aam
add
jne
fimull
repnz
repz
bound
in
fs
rolb
fcom
mov
dec
or
lods
jmp
sub
xor
ja
fsubl
jle
movsl
test
xchg
cwtl
cmp
xchg
sbb
and
sub
pop
loope
or
xchg
jp
lahf
lods
test
test
lret
into
dec
lock
js
faddp
ss
xchg
cmc
in
insl
inc
std
scas
mov
add
push
icebp
fsts
sbb
push
push
sub
das
divb
or
and
shlb
sti
mov
nop
leave
daa
test
cld
aam
sub
xchg
push
stos
jbe
adc
xchg
or
cmc
inc
pop
sbb
iret
mov
popa
inc
nop
pop
sub
cld
testl
shrl
in
inc
pop
shll
daa
lea
and
stos
fldt
xor
sbb
jns
sub
icebp
orl
dec
out
push
or
out
movsb
lods
pop
mov
sub
adc
sbb
jmp
enter
fsubr
cs
xor
addr16
out
test
dec
movsl
out
and
fisubrs
leave
mov
adc
or
repz
fs
cld
or
mov
ds
inc
test
push
int3
stc
push
addr16
adc
or
add
push
lcall
hlt
adc
in
push
in
pop
cli
or
fwait
inc
pop
jno
negb
inc
cmp
sbb
jle
sub
repnz
lods
sbb
movsl
ja
call
adc
shlb
push
and
push
jp
into
xchg
es
dec
dec
mov
xor
xchg
mov
push
xchg
sbb
push
and
xor
rclb
rcr
add
daa
cmp
xchg
lods
pusha
pop
add
sub
dec
mov
pop
ljmp
call
jge
xchg
xchg
jno
decl
xor
cld
aaa
and
ja
cmp
out
rclb
aam
cmp
mov
and
fcomi
sbb
leave
aad
mov
loopne
inc
push
aam
sub
ja
mov
or
rcl
in
inc
adc
das
push
mov
dec
ja
in
pop
inc
rcll
mulb
divb
jno
cwtl
xchg
jnp
xlat
es
xor
push
pusha
enter
in
push
pop
push
ss
shll
in
lret
dec
or
into
jmp
jbe
in
mov
imul
rorl
push
cmp
add
shll
cmc
out
popa
dec
pop
push
or
xchg
sub
jbe
inc
movsl
aad
imul
lods
pop
jmp
cmpsl
in
and
mov
cmp
or
push
adc
add
jno
or
inc
test
shlw
sti
test
int3
mov
call
lret
xor
adc
mov
into
inc
mov
out
xor
cld
incb
push
push
sbb
cmp
mov
pop
cltd
outsl
push
loope
icebp
lea
fcom
in
or
and
pop
out
shl
mov
jmp
xor
mov
pushf
outsb
cs
mov
mov
mov
mov
mov
xor
mov
dec
imul
sarl
int3
andl
jo
int3
insl
add
pop
lret
sti
jmp
lahf
std
andl
cwtl
mov
les
lcall
inc
mov
push
shr
adc
int3
sbb
jo
jle
sbb
push
scas
and
flds
fsubl
mov
js
jg
add
imul
pop
jae
xor
inc
pop
lcall
jb
xlat
sar
fnstsw
aas
jne
push
popf
int3
std
mov
imul
pushf
jecxz
push
das
push
jp
dec
test
sbb
pop
orb
sti
push
xchg
adc
scas
mov
inc
stos
pushf
leave
lret
inc
lret
and
xor
push
xchg
sub
and
pop
xchg
test
xchg
and
xchg
rorb
les
std
dec
mov
clc
addr16
loope
xchg
lock
push
repz
xchg
mov
lcall
data16
mov
and
test
sub
fs
std
ret
lds
cld
rcl
ret
push
pop
and
loopne
lods
pop
push
in
out
push
lods
stc
cwtl
in
lret
or
popf
rcl
mov
cmp
pop
es
sbb
adcl
lods
jne
cmpsb
xor
test
outsl
cwtl
mov
mov
out
and
hlt
rep
inc
or
imul
cmpxchg
sub
imul
fcom
jb
mov
insl
imul
scas
divl
mov
iret
in
adcl
clc
and
lods
mov
mov
lock
shll
push
daa
xchg
xchg
sub
inc
pushf
out
push
js
in
repz
fsubs
adc
ljmp
xchg
lahf
cmp
push
sub
les
inc
and
push
aas
cmpsb
push
dec
sbb
loopne
ja
cmp
mov
push
add
ret
out
pushf
push
pop
cmc
adc
dec
lds
roll
mov
push
fidivrs
push
icebp
into
dec
into
xor
jae
xchg
fs
mov
pop
mov
int
in
mov
push
xchg
mov
push
mov
inc
fdivrs
pushf
dec
imul
mov
pop
add
or
lret
imul
into
cmpsb
pop
daa
out
jbe
dec
cld
or
xchg
sbb
out
stc
jbe
mov
pop
jmp
sub
jmp
andl
sbb
out
dec
movsl
jle
mov
inc
xlat
leave
lods
sbb
test
inc
stc
jb
pop
ficoml
cmp
jle
stc
hlt
push
xchg
add
push
pop
lret
out
fdivrs
cld
mov
mov
insl
sti
mov
pop
cmpsl
push
jecxz
and
daa
shr
dec
fdivl
fisubl
pop
loope
adc
xchg
addr16
dec
xchg
xor
imul
xchg
mov
fdivs
lds
int3
sbb
add
aam
push
test
out
jg
lret
es
arpl
aad
xchg
push
push
cmp
shlb
or
sub
dec
dec
cwtl
call
pop
fisttpll
arpl
out
xor
data16
inc
repnz
adcl
iret
lods
jge
mov
in
mov
das
int3
aam
outsl
dec
add
add
test
push
rcr
lods
addl
int
pop
out
sbb
sbb
mov
cltd
sbb
dec
insb
mov
sbb
mov
mov
mov
hlt
ret
sbb
sub
mov
aad
jmp
pusha
dec
test
push
mov
mov
movsb
lret
negb
aad
or
mov
data16
push
jbe
subb
rorb
aas
leave
mov
jecxz
lock
mov
pop
in
mov
pop
aam
mov
mov
repz
sub
push
xchg
adc
notl
inc
inc
pop
daa
scas
jecxz
push
into
add
imul
sbb
les
push
aas
stos
sarl
repz
nop
in
insb
push
call
or
pop
sub
in
cmp
out
aaa
pusha
in
jno
rorb
stc
repnz
inc
insb
push
push
lret
pop
daa
loopne
cwtl
lea
jae
dec
mov
sub
lds
int
ja
dec
rorl
shll
cwtl
mov
pusha
aam
mov
mov
mov
fcmovne
push
pop
cmp
mov
int3
into
sbb
cmpsb
scas
popa
push
lds
mov
ljmp
pop
sbb
jns
add
xorb
pop
sub
hlt
js
dec
sbb
cmp
xor
dec
and
int
sub
pop
lods
cmp
xchg
adc
out
push
fwait
das
dec
outsb
dec
aam
inc
or
dec
mov
cmc
xchg
cmp
push
gs
loop
inc
mov
arpl
and
call
push
sbb
js
shlb
or
dec
xchg
test
or
aas
lcall
dec
jg
dec
ja
out
fsubs
ss
stos
int
push
aam
push
mov
jno
add
add
mov
test
sbb
mov
mov
cltd
fcoml
fs
int3
stos
adc
fsubs
rcl
out
in
mov
cli
jae
dec
outsb
and
or
sub
scas
hlt
les
or
or
movsl
pop
repnz
jae
mov
rcl
push
and
sub
mov
jmp
incb
stc
or
xor
imul
jge
dec
cmp
inc
push
test
lret
test
xchg
fisubs
sbb
adc
push
clc
sub
sbb
fcom
pop
xor
mov
imul
or
adc
push
mov
pop
push
dec
xor
lock
out
xchg
xchg
test
dec
popf
mov
cmc
jp
movsl
shr
sti
xchg
xchg
inc
pushf
in
cmp
jb
test
int3
hlt
inc
mov
lcall
fimull
nop
fisubrs
stos
cmp
add
outsb
das
jecxz
out
pop
scas
sub
push
or
mov
jmp
lcall
xchg
lea
data16
inc
lret
mov
mov
sub
sti
movsl
iret
dec
jg
xchg
je
sbb
jp
and
jl
stos
add
out
mov
call
loopne
icebp
cwtl
xchg
repz
jmp
adc
add
jge
insb
sbb
lea
stc
sarl
xchg
xchg
shlb
jb
push
outsb
out
jae
jbe
imull
test
fldt
sti
out
and
ret
mov
outsl
adc
out
imul
cld
orl
cmp
fmull
insb
out
ljmp
scas
xchg
out
fidivrl
test
and
cmp
aam
outsb
xlat
lods
push
adc
mov
or
scas
xor
push
sub
pop
mov
adc
jns
jnp
test
inc
mov
push
or
dec
test
sub
inc
not
fstps
push
xor
xor
test
insb
pop
addr16
cld
mov
mov
xor
xchg
gs
fistpl
adc
xchg
mov
sbb
jl
mov
dec
inc
xchg
inc
outsl
and
pop
add
cmpsb
test
addb
push
push
or
push
mov
hlt
lahf
repnz
in
int
cmp
or
pushf
fidivs
pop
and
add
jle
dec
jg
jecxz
cmp
std
push
xchg
or
add
push
mov
int
cmpsb
push
test
xlat
mov
lea
and
pusha
test
sbb
sub
lock
mov
dec
sub
lret
sub
stos
add
jbe
jmp
mov
sbb
mov
insb
cmp
clc
daa
int
inc
xchg
mov
fsubrs
mov
adc
ret
scas
mov
das
or
or
outsb
jecxz
sub
daa
xchg
and
jnp
and
or
inc
mov
mov
pop
mov
out
pop
loop
sbb
and
sub
aas
sub
inc
mov
popa
mov
pop
lds
jmp
jo
loope
sub
insb
inc
xchg
sbb
test
fildl
out
add
xor
ds
push
jb
dec
push
out
mov
into
std
aam
cmpsl
pop
mov
test
ds
cmc
addl
mov
sahf
data16
vmovupd
popf
sub
xchg
mov
test
int3
dec
mov
and
pop
fnstsw
lods
mov
imul
mov
add
xchg
loop
cmp
out
daa
inc
pop
jb
sbb
cmp
dec
cs
lods
xor
aad
push
mov
shr
cli
test
das
stos
or
xlat
inc
mov
mov
fsubs
and
rorb
movsl
enter
jge
lds
mov
push
adc
xor
jb
jg
xor
add
push
mov
mov
adc
sub
sbb
fidivl
pop
add
pop
dec
pop
xor
shll
out
push
movsl
in
or
jns
pop
shl
cld
lcall
and
jne
imul
test
iret
movsl
lcall
pop
jle
shl
mov
repnz
fwait
cld
leave
pop
aam
pop
xchg
pop
stc
outsl
inc
repz
xchg
mov
pop
mov
mov
cmp
out
outsl
imul
idivb
xchg
mov
loopne
jne
push
std
into
push
inc
subl
adc
or
jbe
sbb
add
and
pop
int3
xchg
stc
dec
scas
lods
mov
inc
pop
mov
fcom
lock
mov
jbe
xor
call
xchg
stos
sub
xor
cmp
jns
adc
sub
xlat
das
scas
in
test
dec
push
sub
push
jnp
mov
fcoml
add
mov
std
das
into
mov
test
sahf
inc
int3
out
push
mov
add
leave
inc
daa
cmpsl
repz
imul
loope
test
inc
add
fsubs
sbb
ficompl
or
insb
cmp
lds
popa
add
sub
dec
cmpsl
stc
in
adc
stos
mov
xchg
mov
xchg
lods
mov
aad
xor
sub
xlat
push
icebp
call
loop
sahf
imul
out
or
pop
push
test
imul
sub
sbb
sbb
dec
aaa
mov
or
jnp
movsb
jecxz
mov
pusha
cmp
mov
add
mov
sbb
push
pop
and
sbb
push
add
into
int3
mov
enter
std
mov
call
mov
stc
xchg
pop
shlb
mov
and
sti
jne
mov
ror
xor
jbe
imul
orb
jae
leave
sbb
out
das
push
in
add
enter
es
dec
xchg
mov
popf
nop
sub
push
out
add
into
xlat
adc
test
mov
jg
sbb
lret
inc
xchg
xchg
inc
test
movb
push
push
cld
push
mov
sbb
cmp
es
jle
mov
inc
jg
daa
repnz
jp
addl
xlat
cmp
addr16
adc
aaa
ljmp
jmp
dec
inc
and
aas
pop
xchg
pop
js
int
mov
jae
pop
inc
and
hlt
push
test
sub
dec
xchg
push
rorl
test
addr16
mov
ret
cmp
repnz
lcall
rcl
or
fbstp
cltd
dec
loop
stos
mov
mov
pop
pop
adc
jnp
fcom
or
arpl
not
rorl
push
mov
rclb
in
jbe
outsl
pusha
pop
ret
fstp
ret
or
or
mov
push
and
push
pushf
test
lock
fldenv
daa
loope
mov
leave
rclb
movsl
push
dec
repz
or
out
or
xor
xor
divb
xor
pop
cltd
test
lret
aas
cmp
mov
fldl
imull
movsl
jecxz
cmp
jmp
push
cmp
dec
push
adc
jo
mov
clc
stos
outsl
or
push
adc
sbb
sbbb
arpl
lret
mov
xchg
andb
pop
sub
mov
lahf
cld
incl
mov
ror
jb
push
fwait
in
ljmp
ss
or
and
inc
ja
mov
dec
fcomi
xchg
popa
scas
add
pop
fs
xchg
add
fcoml
cli
jg
out
out
aaa
scas
mov
gs
out
adc
out
mov
push
and
roll
sahf
ja
dec
cmp
insb
and
inc
mov
dec
rcll
dec
adc
and
pop
lret
je
mov
cltd
jp
sbb
cmp
inc
xchg
jbe
push
jo
push
scas
int3
inc
jle
ret
dec
adc
or
add
cmpl
push
and
leave
cmpsl
adc
ljmp
xlat
push
dec
cmp
es
aas
leave
fidivrl
and
rolb
call
hlt
int3
xlat
jnp
into
or
cli
sub
or
ss
fsts
mov
xchg
out
cltd
push
shr
dec
je
jle
hlt
inc
inc
adc
adc
dec
pop
js
fcom
sub
or
mov
adc
jge
mov
sahf
shll
test
inc
sub
fidivrl
adc
and
jbe
mov
dec
int3
lods
stos
pop
cld
js
dec
xchg
mov
mov
mul
xor
shlb
xchg
icebp
scas
stc
jmp
lret
outsb
std
mov
jp
imul
cmp
ret
sbb
jecxz
lea
stos
inc
in
test
mov
cwtl
js
setne
pusha
mov
inc
loop
movsb
dec
add
sarl
mov
jae
push
inc
dec
mov
pop
dec
sbb
and
mov
cmp
inc
xor
ror
cli
adc
addl
jg
push
lret
cmc
test
push
and
inc
push
jno
sub
mov
add
or
movsl
or
or
sti
arpl
lea
lret
xor
int
addl
dec
sbb
stc
xchg
mov
sbb
leave
ret
enter
sub
es
xchg
dec
testb
jne
ror
mov
aaa
outsb
flds
popa
xchg
sbb
dec
repnz
sbb
fcompl
sbb
fimuls
mov
lahf
mov
mov
stos
lret
mov
shlb
mov
lcall
mov
aas
rorl
mov
nop
jbe
xchg
enter
mov
sub
push
sub
push
add
push
int3
sbb
jae
mov
sbb
inc
adc
bound
pop
adc
mov
push
stos
inc
xor
aad
sti
mov
aas
mov
pop
ret
into
loope
xchg
dec
pop
cld
rcl
and
daa
push
nop
repnz
mov
rorl
push
dec
lcall
push
pop
cltd
adcb
and
cmovle
aad
push
jmp
jle
pop
daa
inc
push
add
jp,pt
mov
sbb
cltd
add
dec
add
mov
mov
nop
sarb
jmp
leave
test
dec
xchg
mov
repz
js
lcall
out
and
jo
sbb
add
dec
sub
ror
ljmp
or
hlt
push
cmpsb
xor
inc
filds
mov
test
insl
aam
mov
mov
push
sub
add
leave
ds
xor
pop
xchg
mov
ss
cmp
ds
jbe
adc
mov
cltd
ja
push
pusha
xchg
dec
data16
lret
xor
imul
in
negl
fcom
lock
sbb
push
cmp
sbb
nop
inc
stc
jae
push
out
xchg
or
sub
insb
xchg
daa
lret
test
push
out
mov
jb
fidivrl
lds
int
pop
dec
ds
push
in
ss
adc
cmp
xchg
outsl
push
cmp
fsubrp
mov
xchg
test
mov
jo
jbe
push
int3
sti
mov
sub
addr16
push
testb
insl
inc
dec
jno
aas
xor
clc
mov
and
out
sahf
push
inc
movsb
arpl
ror
call
push
fcompl
cmp
dec
popa
test
xchg
cmp
test
mov
pop
rorl
ret
or
test
sbb
aaa
inc
dec
loope
ret
ficoml
lods
mov
mov
in
jl
dec
xorb
popa
cld
pop
xor
ret
mov
aad
and
jle
lods
jno
hlt
jnp
inc
push
xchg
or
data16
repz
and
hlt
adc
or
xor
pop
stos
int3
outsb
adc
or
nop
mov
xchg
lods
mov
jge
fidivrs
in
out
add
xor
mov
xchg
test
inc
jnp
mov
inc
std
sahf
shrl
in
out
das
mov
xchg
jnp
dec
jg
xchg
imul
mov
xor
mov
add
mov
mov
aam
notl
push
xchg
sbb
mov
adc
mov
sub
push
sbb
faddp
mov
arpl
das
dec
xor
pop
push
and
std
ret
jmp
and
test
sbb
popl
int3
stos
mov
shl
out
xchg
fisubrl
decl
sbb
cli
adc
jo
fsub
movsb
sub
mov
xor
loope
and
xchg
mov
rcl
or
xchg
xchg
cmpb
iret
inc
xchg
fmul
mov
push
arpl
sbbb
cmp
xchg
xor
cmpsw
xchg
or
shrb
stos
nop
inc
inc
xchg
or
loop
mov
sbb
xchg
pop
lret
lock
push
xor
fwait
or
mov
aad
jle
mov
lret
dec
leave
loopne
adc
cmc
xchg
xor
push
imul
jns
divb
lret
std
and
fldcw
push
je
mov
fdivs
into
test
pop
push
stos
popa
dec
sti
jns
cs
mov
push
cmc
sub
rcl
iret
sahf
in
es
mov
pop
add
ja
xor
mov
je
push
stc
cs
mov
adc
inc
sbbl
xchg
rorb
lret
xchg
pop
rcl
out
cmpsb
movb
out
mov
inc
push
repnz
dec
dec
cli
jne
test
pop
xor
xchg
into
pushf
sar
add
sub
stos
or
sub
xor
loope
aas
push
add
mov
pop
jmp
dec
adc
cwtl
mov
xchg
jne
jns
lds
cmp
push
inc
inc
lods
dec
leave
cld
clc
pusha
push
jne
loop
jmp
loope
and
sub
ror
enter
mov
and
subb
data16
addr16
lret
inc
sbb
or
cmp
push
dec
pop
ret
jg
sbb
popa
push
push
adc
mov
jo
and
scas
adc
dec
roll
clc
push
sbb
jge
lret
mov
andl
adc
repnz
sub
jns
out
icebp
and
cld
dec
sub
lock
mov
loope
lahf
das
cmp
and
or
push
jge
inc
xchg
jl
dec
test
push
pop
xchg
jae
inc
add
xor
jo
repnz
lods
aam
sub
lock
and
mov
rclb
divl
out
cli
push
cmp
mov
xchg
insb
fdivrp
mov
xor
push
jg
cmc
js
xor
mov
dec
mov
loopne
movsl
rclb
sbb
jl
push
sbb
inc
mov
or
mov
inc
sub
mov
adc
cmc
lods
xor
push
ret
add
or
mov
inc
sub
dec
pop
mov
fsubrl
enter
stos
mov
mov
add
aas
adc
out
stc
gs
leave
dec
subl
repz
xor
adc
xor
fiadds
mov
inc
andb
int3
lea
imul
fidivrl
sarb
mov
sbb
inc
jge
into
jno
scas
jne
inc
inc
lret
shrb
lcall
mov
xchg
imul
test
pop
enter
cmp
adcl
rol
cmpsl
fsubrs
and
jp
fbstp
inc
fwait
xchg
push
out
jl
add
jp
sub
test
cmc
and
xchg
into
outsl
scas
dec
ret
inc
push
sbb
fwait
xchg
lock
pop
pop
or
repnz
adc
in
or
inc
and
lret
jg
mov
xchg
jle
mov
negl
loop
lds
jecxz
xchg
xchg
repnz
sarl
add
aaa
or
std
pop
mov
pop
cmp
adc
sub
xchg
out
clc
je
repz
aam
lcall
pusha
int3
repnz
ja
call
adc
in
dec
mov
add
mov
lock
mov
or
imul
std
sbb
sub
sub
push
adc
cmp
int3
mov
gs
jl
xchg
pop
mov
in
xor
out
xchg
shll
sbb
jg
or
gs
mov
push
filds
and
xlat
sbb
out
cmpsb
lods
out
adc
cmp
adc
adc
stos
sub
addr16
xchg
sbb
popa
sbb
rolb
iret
pop
aad
mov
or
cmp
mov
jbe
and
cmp
sub
push
pop
rcrb
adc
test
or
xor
jg
sahf
int3
insb
adc
fst
rcrl
add
mov
and
pop
inc
lcall
and
cltd
notb
adc
movsl
jmp
dec
xor
inc
insl
mov
mov
in
xchg
push
negb
adc
rcl
rcrb
inc
jge
mov
repnz
add
xor
sbb
adc
add
lret
mov
lret
shll
mov
out
xchg
pusha
lahf
arpl
rcrl
lods
test
outsb
std
sahf
xchg
aam
loope
mov
int
fistpll
adc
rclb
movsl
repnz
xchg
sbb
push
xor
cmp
and
addb
test
fstl
shlb
pop
popf
push
dec
or
mov
in
dec
loop
or
sub
lahf
sbb
dec
stos
fs
fwait
add
cs
bound
push
add
lahf
mov
in
cmp
lock
mov
xchg
lret
add
push
gs
addr16
call
cmp
rcl
and
sub
fcmovbe
or
fwait
xor
dec
and
daa
out
jae
adc
shll
test
mov
ljmp
test
jbe
lcall
rep
mov
je
lods
xchg
mov
outsb
pusha
dec
imul
mov
push
stos
pop
mov
mov
in
clc
movsl
push
jecxz
shl
outsl
push
aam
jo
mov
fwait
or
push
fcoms
pop
or
bound
mov
and
ret
xchg
fmul
outsb
add
sti
shlb
sub
arpl
stos
and
jne
and
loopne
rolb
xor
shll
aam
pop
sub
mov
lret
push
aad
shlb
outsl
lret
pop
imul
addr16
mov
mov
mov
xor
sbb
adc
lea
int3
jbe
pop
jl
int3
push
fs
data16
sub
sub
adc
call
mov
mov
ss
pop
push
imul
adc
mov
pop
mov
adc
iret
in
adc
cmp
jp
and
cs
mov
add
mov
stc
cwtl
dec
fcmovnbe
pop
or
repz
sub
jle
sbb
int
adc
inc
scas
ror
or
hlt
jns
test
pop
setno
dec
mov
xchg
stos
shrb
test
push
test
je
mov
out
jne
lcall
sahf
push
mov
push
fildl
popf
fldenv
or
or
test
inc
xchg
ds
into
add
xchg
orb
and
jae
jno
inc
xor
out
sbbb
xchg
mov
call
test
pop
mov
cmp
add
stos
push
dec
or
call
pop
jno
or
aam
stc
imul
cmp
arpl
aam
mov
pop
std
jae
fmuls
ja
xchg
sbb
aam
sti
mov
and
out
or
or
push
pop
mov
fmuls
dec
fsubp
xchg
adc
leave
jle
add
xchg
andl
jp
push
jg
addr16
push
scas
sbbb
xchg
das
loopne
jle
jnp
and
out
pop
sbbl
cmpsl
cmpsl
xchg
inc
in
movsl
add
jg
mov
test
ret
lret
and
cli
mov
fdivl
roll
xor
sbb
fucomi
ljmp
outsl
insl
fldl
mov
sbb
push
push
xorb
lret
in
ljmp
lcall
nop
rclb
or
mov
adc
roll
push
sub
cs
mov
test
mov
cmp
lahf
sbb
jecxz
cli
in
lods
or
aas
and
int3
sub
xchg
out
inc
mov
lcall
sti
cli
leave
xor
bound
mov
dec
jg
aam
pop
movb
aad
pop
lret
xchg
int3
xor
lods
loope
pop
push
jge
pop
jbe
imul
inc
inc
jecxz
inc
cwtl
xchg
iret
mov
mov
insl
shlb
pusha
hlt
stos
imul
push
xor
mov
je
mov
inc
pop
insb
and
out
test
xchg
stos
push
int3
cwtl
lret
rcrl
dec
inc
rorl
sbbb
aaa
cs
pop
or
mov
fnstsw
jae
mov
ret
push
xor
je
jmp
mov
sub
pop
sti
xchg
lret
cmp
push
add
jg
pop
push
sahf
push
orb
data16
int
sub
xchg
or
ja
cmp
cmpb
cmp
out
or
sub
pop
je
mov
sti
arpl
mov
cli
push
mov
loope
fistpl
xchg
sbb
pop
es
fisubrs
or
pop
leave
pop
out
push
pop
cmp
stos
inc
ror
mov
movb
iret
aad
xchg
addr16
into
mov
ret
arpl
movsl
mov
cwtl
xor
and
js
mov
and
sub
pop
dec
ss
sub
inc
popf
movsl
dec
adc
shlb
ret
call
mov
xlat
movsb
scas
out
test
into
cmp
jmp
push
mov
addr16
das
lods
loopne
dec
jne
fdivs
or
mov
cmp
add
sub
xor
xchg
push
sbb
in
popl
fistl
mov
je
scas
out
cltd
pop
mov
fldcw
push
call
push
out
xchg
into
mov
dec
xorl
insb
scas
test
idivl
mov
mov
data16
js
mov
dec
testl
adc
sahf
in
inc
push
mov
loopne
bound
sub
lds
push
cmp
push
add
repnz
popa
repz
das
adc
insl
mov
movsl
mov
nop
xlat
adc
imul
add
out
sub
pop
inc
out
xor
fsub
test
pop
js
int3
jge
jbe
sahf
adc
or
jmp
les
adc
rcll
daa
sbb
inc
mov
cmp
sub
dec
shrb
aaa
fs
xchg
imul
insb
push
inc
jns
enter
pop
fdivr
mov
test
aas
dec
pop
test
push
sbb
iret
sbb
adc
cmp
punpckhdq
shl
mov
mov
lret
xchg
nop
test
mov
jb
or
ror
shll
push
push
sub
xor
inc
test
adc
ja
add
rclb
ror
and
je
adc
push
xor
sbb
lahf
or
mov
push
adc
dec
add
cmp
shl
fiaddl
push
cwtl
popf
push
dec
filds
mov
mov
rep
mov
js
je
sarl
nop
add
push
cmp
imul
test
das
sub
fnsave
clc
push
push
pop
data16
lock
xor
xor
loopne
fmuls
ds
pop
andb
mov
push
outsb
xchg
leave
int
cmpsb
push
sbb
or
xchg
inc
shl
and
lret
sahf
test
mov
push
dec
ss
jg
test
mov
int
cmp
lea
mov
add
fwait
pop
cmp
push
stos
icebp
mov
xchg
scas
or
call
sub
addr16
jbe
push
or
xor
inc
lret
jae
mov
inc
mov
mov
add
std
push
ret
push
jbe
fbstp
je
add
push
decb
fistpl
xor
pop
stos
aaa
mov
movsl
aad
loopne
sub
std
pop
sbb
or
aad
int3
inc
inc
mov
add
jl
daa
pop
or
mov
clc
in
inc
pop
mov
or
data16
mov
int3
gs
mov
mov
lods
xlat
data16
fsubr
jne
dec
dec
or
dec
into
cltd
mull
mov
pop
int
jmp
out
js
shll
mov
adc
push
les
movsb
push
insb
push
sub
addr16
cld
xchg
inc
int3
push
pop
push
std
testb
sub
add
iret
jnp
mov
fsts
cmp
jae
pop
pop
les
cmp
outsb
iret
cltd
idivb
xchg
mov
jle
jl
cmp
pop
ret
in
aad
iret
hlt
rol
push
addb
or
sbb
pop
inc
and
push
add
orl
loopne
mov
in
call
adc
sbb
sar
sub
add
jae
and
fwait
or
jle
loop
js
mov
insl
ret
add
jp
mov
cmp
xor
cs
inc
jl
ja
ret
fstps
push
or
push
movsl
fisubrl
mov
leave
cmpsb
fsub
gs
sbb
inc
dec
or
roll
cwtl
imul
cli
imul
push
and
je
xchg
xor
xchg
fstl
ret
push
aas
ljmp
dec
int3
jnp
or
mov
jecxz
notb
inc
inc
dec
mov
fwait
mov
aam
int
in
inc
into
adc
inc
sub
sub
int3
lcall
out
lahf
daa
dec
sub
and
xchg
mov
sarl
and
adc
paddsb
pusha
orl
fadd
ffree
adc
es
mov
dec
sahf
cmp
in
and
int3
jae
adc
clc
sbb
pop
push
lret
jge
xchg
xchg
popf
jnp
das
movsb
outsb
gs
push
fbld
stos
subl
dec
icebp
leave
add
inc
jl
dec
loope
inc
rcl
arpl
mov
or
in
shll
bound
addr16
int
cli
xchg
push
and
mov
mov
sti
adc
cmc
xor
mov
push
ret
out
test
xlat
shl
sub
mov
add
dec
push
adc
sbb
cmp
out
lret
or
add
stos
push
mov
aad
xor
out
sub
inc
or
fcmovnb
or
call
ds
fxam
mov
loop
add
imul
hlt
in
adc
je
xchg
cmc
out
out
repz
xlat
cmp
add
jns
mov
fdivs
add
xchg
jbe
rol
mov
mov
and
cmp
sub
cmc
mul
lock
mov
mov
fwait
leave
or
out
or
scas
sub
sbb
aas
into
mov
sub
fstpl
adc
orb
daa
cli
loope
and
ljmp
into
or
loop
inc
repnz
sahf
in
push
xchg
and
iret
mov
inc
lods
cs
jo
addl
or
mov
fwait
mov
inc
scas
cld
pusha
mov
out
add
cmp
push
pop
out
jg
jns
and
lret
and
push
xchg
pusha
mov
xlat
push
xor
iret
movsl
popa
cmpsb
addb
in
test
inc
jg
jmp
lods
aad
mov
jbe
cmp
repnz
je
pop
jb
cmc
outsb
or
cmpsb
push
fisubrl
stos
flds
outsl
or
xor
push
pop
jmp
ret
lods
or
stc
push
or
mov
adc
pusha
je
and
cmpb
es
inc
iret
sub
scas
lods
out
fmull
lret
testb
xchg
push
hlt
orl
pop
jmp
loop
add
and
dec
popa
adc
lods
int
cmp
mov
in
xchg
movsb
mov
add
orl
das
cmp
addr16
nop
setbe
shl
mov
jb
or
adc
out
dec
call
movsl
popf
shl
sti
mov
sbb
pop
stos
inc
cltd
into
andl
sbb
or
pop
lods
sbb
arpl
jl
fidivrs
mov
movb
aam
mov
iret
push
xchg
leave
pusha
mov
pshufw
sub
out
call
rcr
ret
cmpsl
xchg
popf
jbe
push
cmp
loopne
mov
lock
or
out
sbb
aas
arpl
jmp
xchg
push
or
inc
int3
dec
in
xor
lcall
out
movsb
rolb
cwtl
out
scas
mov
adcl
cmp
sub
sbb
out
movsb
xchg
xchg
mov
aam
lret
int3
sub
fcmovnbe
shrl
lea
sti
or
dec
mov
cmp
dec
stos
mov
int
jg
push
cli
lock
adc
push
add
sti
into
mov
stc
std
outsl
cmp
loope
push
lds
sbb
hlt
dec
movsb
ficomps
sbb
cwtl
dec
cli
sbb
pusha
popf
daa
xor
mov
les
add
mov
and
lea
repnz
into
add
sti
enter
jae
mov
pop
aas
iret
add
jne
fisttpl
into
subl
and
std
sbb
jnp
push
into
adc
adc
jno
aaa
dec
rol
in
dec
inc
movsl
or
cmp
jbe
xchg
mov
mov
aas
or
jne
push
sbb
lcall
xor
int3
out
sbb
jp
into
cltd
or
and
push
test
push
jns
pop
loope
shr
push
repnz
rclb
jo
out
repz
push
xchg
push
or
fmul
jg
incl
into
xchg
pop
xchg
jne
mov
xor
cli
sub
cmp
xchg
aas
sbb
ja
pop
xchg
scas
arpl
outsb
out
sbb
loope
xor
clc
push
xor
roll
xorl
mov
mov
lret
mov
add
addb
adc
mov
jnp
mov
test
in
and
cmp
jne
push
fcmovnbe
xchg
nop
ret
bound
sbb
roll
fadds
mov
data16
mov
popf
shl
adc
scas
out
jae
aam
fmul
stc
fdivr
leave
mov
xor
aad
jbe
dec
je
mov
popa
cld
push
movb
or
cmpsb
dec
repnz
sbb
or
mov
sarb
lock
rcll
call
in
imul
pop
ret
mov
test
mov
ret
sbb
lcall
into
rclb
and
icebp
fstpt
and
cmp
and
mov
dec
ds
loopne
out
pop
push
enter
xchg
add
xchg
cmpsl
mov
jb
jne
pop
jae
xchg
and
sbb
call
sahf
scas
divl
add
lds
stos
cwtl
push
jmp
xchg
mov
adc
cmp
dec
lcall
filds
lcall
inc
pop
test
mov
sub
leave
and
loop
pop
push
lret
xor
inc
in
dec
in
push
ds
sahf
cltd
ret
jle
xchg
mov
dec
daa
jne
xor
xchg
xchg
or
loopne
test
cmp
cmpsb
mov
je
push
imul
ret
jb
inc
jnp
jbe
fidivrs
pop
leave
int3
and
pop
push
into
lret
sbb
pop
repz
sarb
ret
adc
addl
pop
int
aad
mov
mov
mov
mov
jns
scas
cmpsb
jmp
mov
cmc
test
xor
push
bound
arpl
stos
or
addl
mov
adc
lcall
xor
sub
dec
insb
sbb
cmp
cmp
jne
outsl
cmc
shl
jae
push
cmp
pop
in
xchg
ja
rorb
xlat
rcl
imul
pushf
sahf
xorl
sti
je
mov
nop
rol
and
lcall
and
daa
les
lods
pusha
ss
or
fs
push
sbb
scas
pop
js
cmovne
gs
inc
cwtl
pusha
xor
cmpsl
int
ja
push
cmpsb
sbb
cwtl
rcll
mov
fidivrl
sub
push
or
mov
cmp
into
insb
jl
jns
add
sub
dec
rol
repz
pop
mov
mov
jbe
mov
xor
cmp
in
js
fdivs
adc
nop
loopne
cld
and
out
pusha
push
aad
xchg
sarb
mov
mov
mov
gs
push
inc
adc
addr16
jle
mov
outsl
hlt
lret
push
dec
xchg
outsb
insb
add
in
int3
inc
pop
mov
in
mov
shl
xchg
sbb
fmul
jns
xchg
inc
sbb
in
stos
jp
or
sub
sub
pop
leave
into
cwtl
cmp
inc
sbb
fldl
leave
scas
out
and
das
add
lea
lret
xor
std
dec
in
sbb
int3
pop
xchg
and
sub
call
or
movb
iret
mov
fucomp
jbe
inc
fiadds
daa
std
mov
lods
cltd
jbe
lock
dec
imul
bound
dec
call
call
dec
xchg
cmp
arpl
pop
mov
push
xchg
es
xlat
jecxz
push
loop
cmp
data16
mov
movsb
mov
lock
xor
xor
cmc
adc
daa
movb
mov
into
xorl
cltd
fistpl
xchg
sub
cmp
xchg
loope,pt
movb
dec
out
addl
mov
ror
inc
mov
fists
mov
dec
enter
aad
gs
bound
pop
sub
cmp
jecxz
sbb
mov
pop
xchg
mov
cmc
sub
sahf
jb
mov
js
flds
push
fs
mov
scas
loop
lds
push
add
addr16
pop
cmp
adc
dec
ljmp
pusha
addr16
cli
insl
and
lahf
mov
js
outsl
push
pushf
lds
dec
pop
outsb
sti
sub
repz
mov
iret
loop
xchg
movsl
push
xchg
cmp
xchg
push
outsb
aas
lret
test
lcall
pusha
add
cmpsb
mov
scas
aad
movsb
les
add
loop
lds
in
mov
fs
add
imul
repz
mov
pop
sbb
sbb
adc
and
push
inc
mov
loope
pop
or
push
aad
mov
dec
or
es
mov
pop
cmpsb
sbbl
sbbl
dec
and
push
out
pop
inc
ret
lret
repnz
cmp
pop
outsb
pop
xlat
aaa
mov
mov
cld
pop
adc
jo
fisttpl
nop
addr16
jge
rolb
mov
push
pop
cmp
das
pop
scas
mov
incb
sbb
mov
dec
mov
cltd
push
jp
cmp
lock
dec
sbb
push
pop
dec
in
insl
fs
scas
pop
cpuid
jno
nop
repz
ja
and
mov
add
movb
fists
leave
push
adc
imul
sub
mov
outsb
into
jecxz
dec
inc
or
orl
lods
cmp
jns
int3
pusha
adc
out
es
cmpsb
and
aad
mov
clc
adc
adc
sub
inc
mov
xor
stos
push
add
pop
mov
outsb
les
pop
loopne
jmp
lret
mov
lds
xlat
xchg
push
cmp
adc
push
js
repnz
or
or
test
shl
cmp
inc
lcall
jg
test
pusha
pop
xchg
dec
idivb
xlat
push
pop
dec
movsl
rclb
roll
pop
inc
xchg
test
leave
iret
ljmp
jbe
lahf
or
xor
sbb
push
stc
dec
sub
out
dec
subl
loop
ret
jnp
bound
int
dec
jmp
xor
loope
in
or
push
push
pop
and
hlt
sbb
jne
pop
and
shll
cmp
stos
jge
loop
mov
pop
cmp
adc
mov
lahf
movsb
mov
es
sbb
jge
push
insb
inc
sub
iret
and
push
xchg
and
inc
aas
lods
xchg
add
movsl
inc
xor
cmpsl
je
mov
test
jl
xor
in
fwait
dec
repnz
sbb
jns
cmp
mov
mov
decb
lret
lret
cmp
cli
pop
cmc
scas
push
lods
mov
call
fdivrl
inc
mov
int
xchg
pop
jb
and
into
jae
add
mov
ror
into
pop
jnp
sub
pop
jbe
int3
mov
push
sbb
mov
mov
les
or
outsl
insb
inc
mov
pushf
mov
fildll
aam
fadd
lahf
inc
out
xchg
das
or
mull
insb
or
jp
in
and
or
xchg
jmp
and
push
push
jg
out
loop
pop
inc
int3
shl
stos
fisubrl
fcoms
mov
mov
jl
dec
inc
sti
inc
adc
ja
lahf
pop
mov
mov
test
xchg
mov
sub
jge
xchg
scas
inc
movsl
js
sbb
jns
lock
push
test
ds
jne
pop
hlt
stos
or
add
repz
jbe
mov
xchg
cmp
sbb
clc
sub
in
jecxz
ss
fimuls
jl
icebp
xchg
jno
filds
xorl
clc
mov
out
add
jecxz
pop
lea
sub
cmc
pop
scas
pop
or
pop
sub
sbb
sbb
dec
js
jo
mov
leave
sbb
mov
cmovo
dec
sub
and
test
mov
or
push
mov
jg
lock
dec
lods
fwait
push
xchg
out
push
jae
outsb
add
shl
mov
fdivr
mov
pop
and
out
jle
imul
lods
or
shl
mov
pop
cmp
test
and
fldl
mov
cmp
xor
jle
icebp
aad
push
mov
inc
jge
sub
push
scas
rclb
ljmp
sti
andb
lret
scas
loope
pand
add
out
into
xor
or
bound
cmp
pop
pop
jmp
out
data16
sub
push
sub
loop
dec
jecxz
pop
xor
and
ja
jne
or
jns
mov
jne
cmp
mov
push
rolb
push
mov
xchg
push
cmp
leave
sbb
rolb
fbstp
int
clc
jne
sbb
lret
inc
xor
aam
mov
in
pushf
out
clc
leave
mov
cli
stos
lods
loope
sbb
out
cmpsl
mov
mov
mov
inc
test
or
leave
jg
pop
push
mov
pop
xchg
sbb
dec
into
mov
xlat
cwtl
xor
sbb
je
sbb
xor
test
popf
or
mov
test
cli
aas
sub
jo
adc
dec
data16
and
mov
jle
das
lret
rolb
mov
repz
iret
fstpl
jbe
lock
fdivrs
scas
into
in
stos
pop
fndisi(8087
add
sbb
fdivs
rol
aas
cltd
lods
push
jecxz
pop
push
jg
xor
and
subl
inc
or
cs
scas
push
jnp
and
xchg
xchg
xor
inc
rorl
push
lret
push
or
mulb
iret
es
out
cmp
fimull
insb
xchg
jmp
sti
cs
add
mov
dec
cmpsb
es
fistl
daa
xor
jecxz
loopne
or
dec
sbb
insl
inc
fidivrs
mov
push
nop
std
test
bound
clc
push
sbb
ret
cltd
pop
push
adc
xchg
jge
mov
pop
mov
jbe
xlat
xor
mov
fs
adc
addr16
xlat
leave
inc
movb
sub
das
enter
jbe
fsubp
lret
outsb
arpl
cld
icebp
adc
stc
ror
inc
cmp
push
inc
jae
into
lret
imul
daa
jge
dec
and
int3
inc
jb
add
out
imul
sub
mov
js
shrb
sub
push
pop
jne
mov
xor
in
rcrb
cmp
leave
lret
inc
sub
jl
outsl
imul
mov
cltd
push
or
dec
adc
gs
xor
sbb
sbbb
push
inc
mov
mov
insb
push
in
inc
and
cmp
cmp
xor
stc
mov
fcoms
cmpsl
mov
or
repnz
sahf
aaa
movsl
mov
dec
ficoms
cltd
or
pop
cmp
or
into
sub
ret
bsr
movsl
clc
loop,pt
sti
sbb
jg
test
pusha
dec
push
cli
mov
inc
insb
ja
out
add
into
int3
inc
loopne,pn
mov
push
int
mov
push
or
jne
add
out
cs
push
cwtl
pop
sbb
lret
sti
and
out
sbb
dec
jno
mov
es
out
aas
mov
test
sub
xchg
aam
or
push
pop
jne
and
lea
push
cmp
jl
push
scas
mov
pop
scas
push
ds
jle
sub
or
iret
push
lahf
lret
sti
loop
stos
shlb
jae
push
sub
dec
stos
outsb
mov
mov
dec
cmpb
or
stos
mov
jo
jae
jp
ss
dec
pop
js
dec
stos
add
ljmp
cld
jb
mov
int
popl
jo
mov
xchg
pop
clc
xor
fcompl
ret
xchg
sub
aaa
xor
mov
in
dec
into
repz
out
enter
das
ljmp
fsubr
fnstsw
push
out
lahf
iret
inc
lret
xchg
cmc
push
jbe
pop
in
std
xlat
mov
jae
insl
adc
out
orl
repz
int3
xor
jne
lret
shr
and
add
clc
sahf
loope
push
or
dec
mov
orb
dec
fwait
add
dec
pusha
fistps
push
or
push
das
push
mov
jnp
imul
and
icebp
movb
aas
push
inc
dec
out
mov
adc
xchg
jmp
push
lahf
pop
inc
pop
movsb
mov
xchg
or
ror
xor
inc
fistpl
clc
in
xor
loope
mov
loopne
scas
nop
cltd
mov
aam
enter
int3
scas
test
inc
cs
sub
push
aam
scas
out
lods
int3
in
mov
xchg
lret
stos
push
sbb
lods
push
inc
movsb
add
fmuls
adc
xchg
jbe
xor
aam
stos
repz
adcl
and
inc
sahf
mov
push
or
into
stc
sbb
cmc
int3
cmp
leave
imul
dec
arpl
xchg
and
push
mov
lret
jle
movsl
and
out
add
sub
mov
mov
rcrb
loopne
fcmovnbe
mov
push
sahf
in
lret
lea
lahf
ja
sub
and
mov
rorb
cli
scas
mov
out
cltd
xor
addr16
jo
or
sub
fs
jns
mov
mov
sahf
fsubl
push
sbbb
ljmp
pop
or
test
call
pop
fnstcw
or
add
prefetch
or
popl
into
xor
lret
ret
pop
shlb
std
lods
xchg
inc
inc
jo
mov
sub
out
push
xchg
jbe
pop
lods
push
in
pop
fwait
jae
pop
push
ljmp
cmc
stos
jno
adc
xchg
sbb
jbe
jae
sahf
push
mov
cmpsl
mov
jno
clc
push
lock
lds
mov
lods
cwtl
out
pop
inc
jne
pop
cmc
and
shrb
xchg
nop
or
sub
push
mov
fisubl
aad
jno
xor
cmpsb
and
rclb
xlat
sub
add
push
iret
int
cmp
rcrb
jecxz
or
rcl
dec
xor
fistps
lret
cmp
adc
fdivs
leave
xchg
in
pop
call
hlt
std
inc
push
cmpsb
add
cld
pop
or
js
mov
ret
pop
jnp
movsb
xchg
pop
leave
lret
jno
lahf
pop
and
push
test
rclb
lea
movb
dec
cmpsb
sub
loop
push
loope
ret
clc
adc
in
lret
dec
pop
add
ret
adc
aad
sub
cmpsb
adc
inc
clc
pushf
jbe
outsb
jo
insb
inc
mov
ret
pop
mov
popf
and
inc
dec
into
xor
pop
imul
scas
mov
rclb
pusha
cmp
xor
jb
xchg
cmp
pop
or
ret
rcrl
mov
push
sub
test
push
or
jmp
adc
jnp
aas
cld
sarl
mov
in
rolb
in
jbe
inc
sub
or
push
jmp
pop
mov
inc
stos
push
push
or
adc
into
mov
sbb
fdivrl
fwait
jbe
mov
inc
loopne
xor
xor
dec
mov
mov
push
mov
stos
aad
es
jnp
adc
jae
sub
xor
cmp
cld
mov
mov
push
mov
lret
mov
repnz
jne
js
inc
dec
mov
in
and
adc
push
mov
jg
adc
loopne
push
clc
inc
std
add
adc
xchg
loope
iret
daa
loop
ds
xchg
fcom
mov
jns
xchg
pop
and
cmpsb
sub
pop
movsl
pusha
pop
lret
mov
xor
rolb
dec
xchg
filds
cmp
mov
xchg
das
cmp
or
mov
addl
pusha
jbe
cs
imul
lods
cmpsb
xchg
push
inc
push
sti
pop
cwtl
test
popa
push
ja
cmp
lods
mov
jle
fdiv
pop
or
in
cmp
add
cmpsl
cmp
cltd
pop
mov
add
push
pop
lret
lock
lea
scas
outsb
mov
adc
mov
sub
test
and
push
cmpsb
sub
lahf
jmp
les
jecxz
cmp
inc
mov
pop
test
push
sti
aaa
rclb
test
pop
mov
in
push
adc
dec
clc
xchg
insb
ds
cli
mov
cld
xor
jno
add
adc
ds
jg
jnp
or
xor
mov
stos
sbb
icebp
sub
sbb
cld
pop
pop
mov
add
adc
xchg
adc
cmp
js
je
bound
pop
xchg
mov
push
adc
pop
arpl
jge
sub
xchg
mov
mov
stos
xchg
add
pop
lods
repnz
shll
dec
popf
xchg
mov
dec
orl
jl
dec
pop
ret
fwait
inc
int3
cmp
loop
fidivrl
dec
jno
test
xchg
rcrl
lods
bound
int3
push
and
xchg
inc
fcoml
xor
scas
mov
pop
adc
nop
mov
xor
je
or
jmp
jne
inc
add
popf
xchg
arpl
adc
repnz
cmp
in
int3
jge
add
ss
ret
push
adc
push
adc
stc
mov
mov
das
scas
xchg
xlat
push
mov
addr16
addw
les
test
out
and
pop
inc
flds
lahf
int3
pop
lock
pop
leave
inc
roll
nop
jns
ja
xlat
mov
outsb
addr16
dec
fsts
movsb
repnz
jle
add
sub
dec
pop
ss
addr16
adc
xchg
mov
aas
jge
out
mov
push
notl
enter
adc
cmpb
xchg
mov
sbb
dec
add
sub
or
cmp
pop
pop
cmc
into
leave
fdivs
dec
sub
push
imul
out
test
mov
dec
adc
rclb
push
leave
ja
pusha
fistpl
fadd
lret
fisttps
leave
xchg
dec
mov
cmp
xchg
iret
clc
push
out
dec
popf
push
pusha
pop
sti
outsl
mov
scas
movb
xchg
clc
cmc
int3
mov
bswap
jno
cmpb
int
cmp
mov
cwtl
mov
or
mov
or
jno
shlb
or
mov
push
push
pop
push
push
sub
ja
pop
rcl
ret
dec
sbb
adc
nop
testb
sub
adc
xor
fistpll
int
dec
cld
shlb
fcom
in
in
decb
movsl
sti
adc
xor
xchg
rclb
test
test
addl
fs
jo
icebp
fdivrs
xchg
test
fstpl
sub
add
inc
orl
mov
jbe
xchg
iret
lds
xor
add
mov
pop
stos
xchg
mov
and
out
lock
inc
pop
sub
sbb
lds
arpl
outsl
pop
dec
call
mov
aaa
mov
into
inc
repz
fwait
scas
in
scas
jae
and
inc
dec
or
test
lock
pop
enter
xchg
stos
in
int3
out
adc
divl
mov
sti
or
jbe
and
mov
ret
mov
in
lea
leave
cmp
ret
stos
add
lds
xchg
out
jnp
cmpsb
lret
js
or
pop
cwtl
cltd
aad
into
cli
cmp
or
and
sub
sub
aas
sub
mov
push
dec
shrb
out
out
fsubrp
push
ja
mov
mov
push
dec
dec
daa
mov
adc
adc
mov
adc
adc
xchg
imul
jp
add
pop
sahf
into
lcall
mov
mov
push
push
repz
outsl
into
imul
popf
cmp
sub
or
ret
ss
in
mov
push
into
mov
jmp
out
out
lds
push
rcl
sub
in
xorps
push
mov
jno
and
xor
arpl
out
test
jmp
jb
xor
and
int3
fcmovnbe
iret
aad
add
adc
pop
cmp
ja
xchg
loopne
jge
pop
jecxz
add
pop
daa
cltd
add
lret
cwtl
lea
pop
mov
mov
pop
jbe
data16
int3
pop
mov
sbb
gs
js
dec
sti
sar
push
add
je
filds
cmpsl
in
test
das
mov
mov
cmpl
add
push
ret
or
mov
dec
cmp
add
out
jle
inc
das
or
jge
adcb
jbe
out
adc
lcall
pushf
stos
adc
icebp
out
sub
push
insl
dec
fstps
cld
int
xchg
arpl
inc
ljmp
repz
dec
push
mov
roll
jge
cwtl
mov
sbb
sbb
push
mov
out
jne
or
ret
pop
movsl
xchg
xchg
xchg
pop
or
mov
stos
sbb
xchg
ljmp
dec
les
mov
mov
pop
mov
inc
ret
and
mov
jbe
jle
loop
out
lret
xchg
mov
test
sarb
cli
in
cmp
xchg
sbb
dec
mov
jo
and
aad
icebp
pop
push
ficoml
adc
or
outsb
sub
xorb
inc
xchg
mov
cmp
sbb
enter
pop
fs
out
inc
mov
dec
cwtl
push
mov
mov
and
inc
popa
pop
sub
push
div
add
mov
mov
test
rcl
in
mov
jb
addr16
pusha
and
orl
mov
imul
imul
cmp
ror
xor
out
sbbb
and
pop
dec
mov
dec
int3
pop
cmp
push
ret
clc
icebp
lret
ficoms
movsl
mov
lahf
into
insl
mov
sub
iretw
popf
mov
in
mov
mov
cmp
sahf
mov
or
das
xchg
ds
and
mov
movsb
shll
es
mov
or
jbe
fisubrl
lret
call
inc
pop
into
mov
and
filds
fsubl
jmp
sbb
scas
daa
aas
fwait
stos
ss
movsl
in
outsb
int3
js
jnp
mov
leave
ret
pop
cmp
js
idiv
add
pusha
dec
jae
adc
lods
and
cmpsl
xchg
out
cmp
jmp
int
lahf
jns
dec
dec
iret
pop
ret
add
aas
adc
sbb
sub
loop
mov
jo
cmc
xchg
pop
jle
jb
data16
add
aad
dec
inc
lods
int3
jae
mov
push
xchg
out
call
sub
xchg
nop
push
adc
cmc
lea
pop
jmp
inc
outsb
addr16
rcl
popf
xor
lret
test
ja
shlb
lods
dec
addr16
mov
out
sbb
jno
fwait
popf
xlat
xor
push
pushf
mov
in
scas
out
cmovb
adc
sbb
outsl
push
pop
mov
cmpsl
push
inc
out
xlat
adc
push
leave
add
mov
bound
mov
mov
testl
call
push
mov
cs
mov
data16
scas
repnz
inc
sbb
push
fstl
xchg
int
fmull
shll
fdivrs
adc
and
lods
pushl
inc
movsl
out
dec
rclb
testb
and
aam
sti
movsl
scas
inc
sarl
xorl
add
jge
movsb
cmp
repz
pop
ljmp
xor
sub
jl
xor
mov
shlb
incb
jo
mov
shll
lods
int3
out
pop
ds
shll
jge
inc
or
mov
in
dec
outsb
add
push
and
sub
into
sti
add
push
add
mov
sub
inc
movsl
xchg
push
out
mov
scas
cld
dec
repz
or
js
fst
cmpsl
insl
push
push
mov
add
dec
xchg
inc
pop
out
sub
sub
sub
dec
jg
jbe
xchg
scas
pushl
mov
arpl
fcmovbe
int3
mov
xor
imul
mov
lea
xlat
leave
mov
divb
ss
xchg
push
fsubl
loope
mov
inc
lcall
jne
dec
mov
lods
lds
loop
shl
push
lahf
js
mov
pop
and
inc
outsb
mov
xchg
imul
imul
cwtl
jnp
pop
mull
adc
ret
jle
nop
xchg
loopne
arpl
in
mov
bound
xor
mov
lods
popf
out
adc
jno
je
test
mov
into
push
mov
inc
cmp
inc
mov
dec
mov
ja
pop
push
sbb
xchg
and
ss
sub
cmp
mov
xchg
pop
push
dec
pop
popa
dec
sub
mov
mov
das
inc
loop
hlt
dec
push
out
fdivr
jbe
lret
inc
adc
je
into
jno
mov
cmp
popa
xchg
fcmovbe
cmp
jmp
sbb
test
sbbl
leave
int3
sahf
push
rorl
jle
jl
pop
stos
into
mov
aas
pop
jmp
and
add
cmpl
lret
icebp
filds
cmpsl
adc
cmc
inc
insl
xlat
mov
pop
nop
mov
fldl
dec
cmpsl
mov
or
ja
fstpt
xchg
aaa
jno
xor
aam
jno
in
into
shlb
ret
pop
aas
roll
aam
pop
or
jecxz
or
and
sub
cltd
fsubs
cmpsl
fsubrl
sub
sub
mov
out
mov
and
in
sub
adc
orl
push
push
mov
test
push
shlb
mov
and
mov
and
jp
mov
outsl
pushf
outsb
push
dec
movsb
out
lret
add
mov
fildll
or
int
ret
push
dec
jns
stos
imul
sbbb
mov
mov
fldl
and
rcrl
sahf
dec
push
add
add
push
aam
fwait
hlt
out
imul
clc
sbb
ss
xchg
push
xchg
lea
addr16
into
push
ret
jo
es
xchg
lcall
sub
add
cmp
add
inc
dec
dec
or
in
jo
push
cmc
mov
iret
mov
aas
out
sub
mov
loopne
adc
or
jb
testb
pop
lcall
inc
mov
rolb
test
cltd
mov
mov
inc
push
mov
fmuls
mov
cltd
xchg
cmp
adc
dec
imul
movsb
nop
movsl
loopne
lahf
ror
jmp
cld
mov
test
or
and
outsw
sbb
mov
jnp
xor
inc
insl
imul
ret
xor
add
xchg
lret
push
mov
lret
sbb
movsl
mov
dec
int3
dec
dec
or
insl
aaa
je
jmp
push
mov
mov
sbb
jl
into
add
arpl
add
push
call
dec
jne
lea
mov
or
jbe
xchg
xor
fldl2t
dec
push
pop
pop
xchg
pop
sbb
sbb
cltd
test
sbb
sarl
push
jb
lret
dec
or
push
push
add
sti
jae
jae
mov
mov
pop
pop
insb
outsb
dec
lcall
add
jb
mov
faddl
or
jmp
iret
test
outsb
xor
cmp
push
mov
mov
fs
cwtl
push
sub
pushf
mov
adc
in
mov
jge
out
cmp
es
sub
cmc
aam
sub
dec
xchg
into
xchg
vfrczsd
sub
stc
jmp
push
pop
roll
mov
jnp
cmp
cmp
sti
lret
mov
in
lret
and
in
rep
mov
xor
arpl
mov
pop
sub
fldt
add
ja
movsl
xor
mov
js
mov
jnp
int3
jmp
insb
or
lret
xchg
test
and
pusha
or
cmpsl
mulb
in
dec
insb
mov
icebp
xchg
out
loope
je
test
pusha
xor
add
pop
cmp
xor
rolb
popf
ds
push
add
leave
xchg
movsb
mov
xor
pop
cli
inc
mov
push
cmp
mov
cmpsl
outsl
mov
jae
out
fnsave
add
popa
lret
out
pushf
fdivp
or
xchg
mov
in
sub
push
inc
adc
cli
fidivl
xchg
mov
jecxz
mov
add
xchg
in
aam
not
xchg
inc
inc
inc
mov
pushl
lods
std
sbb
in
ss
mov
cmpsl
mov
push
gs
pop
cltd
or
loope
test
imul
push
and
or
push
adc
jmp
sbbl
into
inc
ss
adc
push
hlt
jbe
jmp
dec
sub
and
jns
scas
pop
push
lock
add
ljmp
jne
push
shld
sub
jo
inc
sbb
pop
icebp
pusha
jbe
ds
sub
jns
faddl
push
pusha
aas
andb
cs
jmp
loope
add
in
pop
pusha
xchg
sub
outsb
push
sbb
mov
sbb
das
daa
es
flds
pop
lcall
or
inc
daa
imul
test
mov
repnz
mov
xor
dec
popf
xorb
call
jbe
and
cmp
jns
add
push
xor
fadds
pop
inc
xchg
jl
mov
imul
lret
or
sub
push
int
insl
lds
movsl
lock
or
rcl
pop
pop
pop
mov
das
dec
inc
mov
mov
sbb
movsl
into
jle
xchg
mov
sub
push
hlt
test
lods
jp
divl
lret
or
popf
shlb
lds
cmp
xchg
popf
repz
xchg
jp
call
add
cmp
iret
mov
inc
imul
lahf
sbb
fnstsw
test
in
repz
push
sarb
cmc
jl
jne
cltd
push
arpl
fstpl
ljmp
pusha
or
sub
out
test
pop
test
je
ds
loope
test
cmp
or
and
mov
pushf
movsl
sbb
lcall
adc
cmpsb
popa
lods
dec
loop
in
cli
dec
test
and
gs
leave
mov
sbb
adc
in
movsl
cwtl
add
pop
jae
sub
and
std
xor
fldl
cld
push
dec
lock
push
jae
cmp
xchg
scas
add
loope
out
add
movsl
imul
jnp
sub
dec
sbb
pop
cltd
arpl
jmp
jae
shr
clc
rcl
movsb
pop
adc
push
jb
sbb
jbe
xchg
xchg
es
jns
pop
shrb
push
xchg
push
and
cmpsb
xchg
into
jnp
test
data16
pop
dec
add
dec
or
cmc
ss
std
into
mov
dec
fnsave
shrl
fistps
mov
dec
jno
ljmp
dec
icebp
jmp
int3
pop
mov
jne
rcll
sbb
adc
loopne
stos
cmc
cs
jnp
notb
inc
mov
mov
jbe
fldl
jmp
cmc
ror
mov
mov
xchg
mov
aas
clc
lret
int
imul
sub
cmp
ret
or
mov
ja
push
push
jge,pn
sub
and
ljmp
add
popa
scas
inc
cmp
cmp
repnz
es
jmp
mov
mov
lea
pop
add
pop
mov
outsb
inc
cmpsl
xor
sub
xor
push
cmpsl
or
mov
rcl
nop
pop
xchg
mov
inc
ljmp
sahf
xor
push
js
inc
ficompl
push
shl
add
mov
xchg
jp
cmpsl
imul
adc
dec
mov
push
dec
and
add
stc
jno
push
lret
push
adc
cmp
sub
ret
mov
add
pop
int3
stc
adc
in
out
cmp
push
push
addb
mov
push
loop
fmull
inc
int3
loopne
add
out
xchg
jnp
arpl
fbstp
daa
pop
mov
mov
movsl
push
pop
sbb
dec
cwtl
push
dec
jecxz
inc
sbb
xchg
adc
sbbl
pop
das
mov
fdivrs
mov
ja
loopne
stos
clc
leave
imul
cld
dec
fcomp
and
gs
pop
das
or
cmp
push
popf
inc
adc
lret
mov
xchg
test
mov
inc
loope
xchg
mov
scas
test
jl
or
repnz
jmp
or
enter
in
addr16
xor
and
lret
in
fbstp
dec
fs
pop
pop
int
popa
mov
mov
and
inc
mov
mov
or
and
sub
xor
add
or
fisubrs
jns
sbb
add
adc
sub
cmpsb
inc
sbb
sbb
mov
imul
lock
mov
cli
add
std
sbbb
or
dec
fiaddl
aaa
icebp
sti
cmp
pop
push
movsb
stos
or
stc
fldenv
or
mov
xchg
cld
cmpsb
push
aaa
mov
xchg
mov
fildl
jg
adc
add
movsl
add
or
dec
push
das
cmp
mov
ja
imull
sub
in
fists
mov
cltd
sub
pushf
sbb
in
addr16
adc
loop
clc
xchg
lcall
sahf
inc
sbb
mov
mov
jno
and
jnp
sbbl
mov
inc
aad
push
mov
xor
inc
add
and
mov
repz
jmp
push
jo
inc
mov
cli
mov
xor
sub
ret
pop
fmul
push
mov
pop
jne
jns
cli
aas
and
inc
push
sahf
nop
iret
or
int3
scas
in
std
xlat
xchg
fcmovbe
setae
popf
push
test
sub
movsb
into
cmp
arpl
pop
mov
or
inc
inc
or
inc
sarl
pop
push
scas
add
mov
test
pop
xchg
popa
insb
and
mov
ds
sahf
dec
xor
scas
dec
popa
rcr
pop
adc
pop
mov
mov
jmp
xchg
sbb
lock
bound
in
mov
sub
pop
out
inc
inc
loopne
add
xchg
movsl
ljmp
leave
push
rcrl
push
in
movsl
dec
mov
clc
sbbb
inc
mov
aam
fbstp
ret
cmp
stos
mov
mov
fsubrs
dec
int3
jno
pop
popf
and
mov
cmpl
enter
hlt
xchg
jmp
fdivl
inc
imul
sub
lods
cmpsl
ficomps
mov
in
mov
das
test
shlb
pusha
ret
push
push
outsb
xor
in
pusha
pop
xlat
push
popa
and
fnsave
mov
adc
xor
add
popf
mov
stos
insb
mov
push
loope
mov
cwtl
xor
jne
sbb
stos
in
add
fsubp
lret
cltd
cmp
repz
xchg
xchg
add
js
mov
pop
in
fs
push
arpl
xchg
stc
pop
mov
push
stos
adc
loope
mov
xchg
fisubrs
jl
xchg
jno
popa
sar
sub
int
xor
adc
jg
xchg
cwtl
inc
push
mov
mov
push
popf
dec
scas
pop
push
jne
clc
xchg
test
jg
add
fiadds
mov
jecxz
sub
mov
xchg
pop
or
push
and
mov
adc
sbb
out
test
loop
or
jecxz
mov
mov
adc
rcll
adc
out
andl
xlat
aaa
popa
mulb
dec
imul
and
inc
ficoms
lcall
aas
je
sbb
popa
loopne
xchg
xor
imul
push
stos
mov
xchg
jne
shlb
push
mov
or
ret
xor
adc
mov
jmp
add
call
adc
sahf
out
mov
mov
jb
sbb
ret
aaa
sub
out
inc
jnp
jmp
mov
add
and
jl
in
dec
mov
fcmovnbe
jg
inc
addr16
cmp
ds
cs
movsl
cmpsl
loopne
into
mov
test
push
int3
push
jae
insb
icebp
jle
fdivp
fsubrs
or
lea
dec
xchg
push
lods
enter
mov
mov
push
cmp
push
inc
jns
jmp
adc
add
bound
fadds
sub
add
jl
insb
lds
ret
out
sub
insb
repnz
je
in
jge
shll
nop
out
add
and
jae
jmp
mov
jno
into
stc
adc
jb
sbb
inc
ja
sbb
adc
push
js
test
fmul
mov
movsl
push
push
sub
mov
push
addr16
dec
into
jnp
int3
aas
xchg
inc
and
sbb
xor
dec
sub
push
jge
roll
push
out
add
ret
push
lret
push
lods
sti
mov
enter
and
push
pop
movb
imul
mov
push
into
out
mov
fisubl
ja
add
lods
mov
das
fs
out
add
mov
lret
dec
cli
cmp
gs
repz
xchg
pop
sbb
inc
scas
jp
fistpll
pop
add
jno
cs
push
mov
inc
push
jge
dec
pop
sbb
fidivrs
pop
sbb
or
cld
out
xor
outsb
insb
sub
test
ss
ja
dec
or
sbb
std
inc
rcr
mov
and
dec
sarl
dec
or
adc
cmc
mov
ljmp
in
jge
sbb
out
inc
or
lea
jmp
dec
xor
rcll
dec
mov
inc
sbb
adc
daa
into
stos
shll
outsl
aaa
cmp
pop
xchg
push
fidivs
xorb
rorb
jg
sub
or
cmpsl
xchg
cld
cmc
cmpsb
sahf
dec
and
mov
mov
mov
and
hlt
dec
lds
into
pusha
jbe
out
adc
pop
sub
lods
stc
jae
dec
inc
or
xchg
adc
cmp
fistpll
cmpsl
icebp
jp
fcmovbe
inc
mov
and
js
jnp
lret
gs
call
mov
inc
bound
out
ret
xor
movsl
jb
pop
ret
insl
lahf
dec
mov
cmp
into
scas
jns
sahf
push
sbb
mov
daa
ds
adc
xchg
hlt
mov
xchg
mov
jge
insl
dec
imul
pop
jmp
sbb
mov
or
lahf
lock
das
mov
push
out
aas
into
shll
movsl
mov
jl
movsl
jbe
fsubp
push
adc
insb
into
cli
pop
adc
pop
sub
stos
pop
or
testb
cmp
cltd
mov
and
shll
xchg
cmp
je
test
cmp
lret
push
xor
jbe
cs
nop
mov
out
clc
fwait
test
lock
sbb
insb
ss
and
dec
fcmovbe
or
out
add
jo
call
pop
inc
cmp
ljmp
shl
ror
jne
sahf
and
es
jb
xchg
push
andb
inc
test
add
stc
sub
stos
out
and
fwait
outsl
movsb
jge
repz
inc
pusha
mov
lret
andb
aad
jno
or
xchg
cltd
fldl
mov
cmp
or
mov
rcrl
dec
dec
sbb
inc
dec
jbe
cmpsb
lahf
leave
sti
insb
push
call
fst
leave
pop
roll
decl
sbb
adc
cmp
jb
repnz
test
sti
adc
popa
xchg
mov
enter
pop
out
mov
or
add
je
repnz
dec
sub
push
mov
and
pop
inc
enter
push
sbb
js
push
xlat
lods
in
imul
jne
mov
push
cmc
dec
les
jecxz
push
xchg
pop
xchg
and
clc
leave
sbb
loope
call
inc
add
jmp
xor
out
iret
pop
inc
jns
lret
pop
push
xor
clc
loopne
out
xchg
pusha
out
inc
std
orb
bound
sub
insb
sbb
les
ja
pop
mov
sub
pop
add
lahf
xor
fmull
cmp
jmp
dec
xchg
loope
add
js
lds
push
push
test
mul
mov
mov
out
je
push
adcl
mov
cld
loop
cmp
aam
xchg
lret
fcom
movsl
icebp
nop
adc
pushf
in
fisttps
or
push
jnp
cltd
pop
adcl
xchg
out
fbstp
xor
xor
les
out
push
mov
cmp
stos
cltd
dec
aas
sbb
jecxz
cs
enter
loope
out
xchg
js
fadds
mov
jnp
imul
inc
adc
ss
mov
dec
and
cmp
pusha
inc
or
cld
ljmp
aam
jne
scas
jmp
xchg
data16
cmc
divb
sbb
jns
mov
icebp
loope
lret
jo
and
inc
dec
lea
in
jmp
add
push
or
adcb
nop
add
test
adc
lret
xor
fcomi
aaa
outsb
lods
pop
adc
int
mov
dec
mov
out
adc
in
in
cmpsl
sub
sub
jp
xchg
movsl
cwtl
stos
clc
adc
inc
mov
test
mov
jge
cmp
pop
or
sub
je
push
jo
decl
xor
aad
rcl
dec
cmp
push
or
popa
sti
lret
ja
inc
into
ljmp
ds
mov
pop
jnp
dec
jl
dec
out
add
das
fdiv
imul
adc
ret
push
dec
sahf
jae
iret
leave
cmp
xchg
in
inc
popf
xchg
fsubrl
leave
inc
mov
loope
mov
mov
jb
cmc
mov
xor
pop
or
adc
scas
lahf
lods
push
jge
dec
movsl
roll
jbe
mov
lock
inc
jl
clc
int
outsb
cli
enter
inc
mov
popa
not
lods
jg
data16
adc
movsl
or
add
add
stos
jbe
pop
vpaddusb
and
sbb
clc
xchg
test
std
sub
rol
das
aam
test
xor
adc
lcall
popfw
pusha
mov
aas
into
pop
cmp
das
cmpsl
out
lahf
xor
push
mov
mov
data16
in
es
cmp
pop
lret
sbb
mov
imul
inc
inc
ret
pop
pop
ficomps
nop
mov
cmc
add
leave
sahf
mov
pop
lods
push
xchg
adc
cmp
mulb
jns
jbe
stc
xor
iret
push
rcrb
lods
out
and
lret
ja
repnz
loope
addr16
cmp
sbb
notb
xchg
hlt
test
or
repnz
scas
stos
inc
ficoml
sub
fisttpl
push
adc
rcl
dec
pop
mov
flds
lods
cld
push
lea
mov
sub
gs
fimull
decb
pusha
sub
mov
xor
cmp
sahf
stos
push
mov
adc
mov
rcl
outsl
pop
in
pop
test
push
xchg
cs
int3
jmp
pop
push
cmp
inc
les
adc
mov
cmp
pusha
bound
movsl
mov
mov
dec
xchg
ljmp
jle
cmp
cmpsl
mov
jbe
pop
add
xor
into
push
sarl
pop
mov
and
xchg
std
jbe
es
stc
jecxz
sbb
push
fdivr
sub
inc
pop
scas
sub
mov
movsl
lea
push
jl
stc
sbb
and
movsl
pop
lods
push
ficomps
nop
test
out
jbe
and
pop
add
rcrb
int3
ljmp
sahf
pop
jle
mov
sbb
push
xor
xchg
dec
addr16
sbb
ret
mov
push
cmpb
loop
in
into
add
cmp
or
inc
mov
mov
fsts
test
mov
inc
push
add
sbb
rclb
ds
ja
pop
into
and
adc
mov
pop
sbb
add
xacquire
mov
pop
cs
or
sbb
jb
pop
out
out
inc
cmc
dec
sub
xor
adcb
jno
faddl
shlb
bnd
out
adc
dec
fnstenv
das
push
fsubs
test
ss
cmp
push
xlat
mov
dec
inc
xor
cmp
mov
adc
mov
push
scas
mov
and
in
test
sbb
inc
and
mov
jo
adc
adc
fisubs
or
ror
cld
mov
push
je
cwtl
pop
test
es
and
mov
stos
mov
mov
mov
stc
lcall
das
movsb
push
scas
out
insl
jp
or
jo
bound
dec
pop
jae
xchg
push
sub
dec
mov
jmp
jp
movsl
push
ret
lcall
repz
ds
adc
inc
nop
push
pop
std
pop
mov
sbbb
insb
mov
test
bnd
sub
mov
scas
and
ret
dec
loop
movb
jl
dec
mov
and
les
inc
sahf
orb
or
fsubl
pop
adc
push
movsl
test
pop
nop
push
repz
dec
cmpl
xchg
out
push
test
xchg
push
fisubs
jmp
shrl
lock
int
int3
ljmp
and
lret
jae
lds
xchg
add
enter
out
xorb
cld
movsl
sub
lcall
or
ret
push
jbe
pop
or
je
xchg
push
push
fwait
mov
mov
insl
dec
lret
add
ss
imul
mov
mov
daa
jl
das
sti
cli
sub
pcmpgtd
jno
enter
popa
xlat
cmp
movsl
les
sub
mov
cli
jae
mov
xor
cmovnp
inc
add
hlt
outsl
es
cmp
xchg
xchg
adc
sbb
test
mov
jae
iret
lods
pop
cli
adc
pusha
jle
cmp
cmp
mov
ja
xchg
aam
pop
inc
xchg
xchg
xchg
daa
cmpsl
cmpb
movsl
xchg
cmc
mov
or
nop
jne
loop
cmpsb
out
insl
cmp
inc
inc
push
pop
or
mov
subl
mov
push
add
cmp
pop
movsb
js
jecxz
into
popf
icebp
sbb
mov
mov
jmp
jl
mov
jp
or
pop
arpl
fsts
mov
mov
mov
pop
test
jg
mov
inc
push
imul
push
cmp
out
cmp
cli
into
mov
adc
and
in
test
pop
lahf
xchg
stos
aas
xlat
hlt
repz
and
imul
xchg
in
pusha
and
mov
arpl
or
test
and
cltd
popf
in
movsl
dec
jae
into
cmp
inc
push
sub
pop
jns
and
ljmp
ret
push
loopw
lahf
mov
dec
imull
push
adc
iret
cmpsb
dec
int
xchg
fisubs
xchg
lret
popf
outsl
addr16
imul
fsubs
ret
pop
aam
shlb
xchg
into
aaa
rcrl
nop
inc
mov
add
or
push
popf
mov
fwait
pop
nop
adc
sub
adc
push
add
pop
int3
js
imul
mov
sarb
and
pop
pop
hlt
cmp
not
fsubrs
pop
aam
mov
stos
adc
in
nop
pop
jmp
insb
push
imul
sbb
iret
fsubr
sahf
scas
inc
pop
mov
ja
in
movsl
pop
inc
scas
sub
or
jl
mov
and
jo
inc
jae
ds
xchg
pop
fldt
stos
sub
gs
mov
test
push
xchg
mov
mov
and
jb
push
inc
pop
shl
push
dec
lds
aam
cmpsb
les
test
pop
mov
movsb
lcall
xchg
pop
ds
cmp
shrb
lods
mov
sub
mov
mov
stos
mov
sahf
inc
sub
cmp
negb
or
pop
pop
xor
iret
inc
jne
jne
shrb
jnp
int
shlb
sti
adc
fwait
sub
xor
add
mov
xchg
cmp
add
imul
and
dec
lods
push
insb
loop
popa
xor
adc
into
clc
push
ja
ret
push
rolb
cld
mov
push
loop
aas
bound
pop
fdivl
ja
xor
jecxz
rorl
mov
push
in
mov
or
rol
loop
xchg
pop
push
repz
fcom
or
inc
fxch
movsl
out
hlt
ss
sub
mov
adc
inc
xchg
imul
pushf
in
jbe
push
imul
dec
sbb
add
insl
sti
cmp
add
mov
dec
out
sbb
dec
mov
mov
inc
adc
imul
lret
nop
sub
je
aaa
movb
int3
cmp
sti
and
xchg
mov
cli
outsb
test
movsl
dec
inc
clc
push
or
in
pop
ds
push
out
xchg
dec
add
std
ss
sub
jmp
sarl
cwtl
inc
mov
push
dec
scas
movsl
imul
inc
jns
mov
sbb
push
jmp
cltd
sbb
ret
imul
insb
fstpl
jne
out
mov
mov
push
inc
movsl
ror
outsb
xor
xchg
or
jg
ds
jmp
mov
dec
cmc
movsl
pop
aad
add
mov
sub
mov
popa
or
push
into
test
mov
xchg
mov
aam
pavgb
in
pop
or
pusha
dec
dec
inc
daa
gs
dec
xchg
ud2
out
cld
cmp
push
or
test
sub
mov
dec
stos
xlat
push
sub
adc
into
lock
pop
out
loop
inc
or
xchg
out
lahf
pop
jbe
neg
or
aam
mov
cmp
out
lock
xlat
xor
repz
cwtl
sbb
mov
sti
test
stos
popf
jo
pop
dec
mov
repnz
imul
mov
inc
call
xor
cwtl
hlt
push
inc
mov
daa
pop
lahf
adc
scas
fxch
sub
adc
add
mov
jae
push
out
iret
nop
arpl
ljmp
inc
js
push
test
adc
cmpb
icebp
xlat
add
out
push
insl
push
adcb
sub
sub
int
out
out
inc
test
jo
stc
sti
dec
sub
dec
mov
scas
sahf
jns
shlb
or
hlt
jl
pop
int
mov
mov
iret
and
dec
jnp
jmp
leave
sti
mov
jns
push
ret
fstpl
xlat
xor
nop
dec
pop
push
call
ret
fs
andb
psrlq
pop
rclb
push
sbb
xchg
jge
into
mov
push
or
stos
mov
push
mov
or
popa
push
lods
cmp
mov
movsb
cmp
sub
movsl
paddusw
xchg
add
cmp
cmpsb
push
xchg
jne
iret
jge
lcall
xchg
test
dec
popf
dec
int3
mov
pushf
rorb
pop
out
icebp
xchg
into
jl
jb
jle
ds
aas
jae
int
hlt
pop
pop
pop
fcoml
movsl
add
mov
enter
pop
ds
insl
lret
push
xchg
and
push
in
aam
push
sbb
push
jnp
xchg
xchg
shl
lret
fldcw
pop
cmp
sahf
push
aaa
test
lock
aad
test
clc
mov
int3
imul
cmp
lock
aam
xchg
sahf
and
lods
lds
dec
shrb
adc
jb
xlat
imul
inc
movsb
xchg
fcmovnbe
inc
cmp
sahf
loope
ret
or
into
mov
aad
pushf
inc
pop
js
pop
push
cmp
loopne
test
sub
fcoms
fsubrl
cmpsb
add
xchg
or
sbbl
call
shrl
push
xor
jb
dec
rcl
nop
aad
mov
aas
in
popf
add
mov
out
jmp
push
mov
mov
push
jecxz
xchg
xlat
fwait
pushf
sbb
aad
ret
std
lods
add
out
clc
sarb
mov
push
add
xor
pop
pop
fidivl
arpl
addr16
ljmp
adc
push
sbb
push
push
push
inc
xchg
into
mov
addr16
rcrl
cmp
and
push
xchg
pop
jg
divl
test
jmp
ja
aam
jg
repz
jbe
test
inc
push
jnp
xchg
into
adc
xchg
movsb
adc
fidivrl
push
inc
clc
dec
or
into
aaa
mov
adc
dec
inc
addr16
mov
popl
xchg
mov
adcl
sti
je
jle
xor
and
cmp
hlt
test
leave
adc
adc
inc
push
lock
data16
shrb
shlb
add
xorl
pusha
sysret
sbb
cmp
into
testb
and
or
push
inc
jge
mov
aam
adc
jp
paddsb
loop
pop
je
add
int3
ja
aaa
in
cmpsb
lods
jge
xor
mov
stos
jnp
adc
pop
pop
out
hlt
lds
mov
or
std
rcl
stos
lahf
mov
gs
in
push
sbb
icebp
mov
incb
movl
push
jne
ret
push
or
sahf
jecxz
mov
or
adc
negl
lds
xchg
mov
add
cmp
mov
xchg
out
inc
push
jb
out
movsl
loopne
bound
negl
repz
or
push
call
rcrb
fidivrl
jns
push
fnsave
cltd
xchg
loopne
lret
cmpsb
stc
cwtl
lods
xchg
add
mull
xchg
xlat
ficompl
out
js
sarb
out
inc
inc
jb
push
mov
xor
test
pop
mov
mov
push
push
aaa
fucom
flds
dec
jle
mov
leave
iret
sti
aaa
stos
enter
lret
cltd
dec
es
mov
push
lret
fisubrl
fst
jo
arpl
popa
imul
xchg
sbb
jp
notb
fmul
rorb
icebp
aaa
push
fwait
pop
dec
mov
jmp
fs
cmp
insl
lret
cwtl
jae
jb
sbb
jmp
dec
rcrl
push
arpl
ret
mov
mov
enter
push
int3
es
lcall
mov
test
sub
jbe
jmp
mov
fldenv
adc
xchg
mov
test
pop
iret
dec
xor
addb
mov
jl
xchg
inc
adc
and
xchg
push
and
int
fmuls
loopne
inc
and
cwtl
stos
iret
lcall
sub
lsl
push
leave
or
inc
loopne
jp
cmpsl
gs
lret
jbe
add
adc
push
sbb
pop
stos
add
ds
lret
ud1
adc
bound
xor
ja
jg
mov
hlt
ljmp
out
or
jmp
adc
or
xchg
jne
mov
lret
roll
xchg
pop
pop
xchg
ja
mov
mov
rclb
out
imul
imul
std
les
push
dec
xor
xchg
cmpsb
mov
add
xchg
xlat
repnz
out
stos
scas
mov
jp
imull
mov
icebp
pushf
stos
or
dec
leave
pop
mov
or
mov
add
add
push
push
or
cvtdq2ps
subb
mov
sbb
dec
fdivs
into
lret
jp
mov
add
es
xchg
imul
stos
xor
repnz
idivb
and
out
iret
push
outsl
xor
push
mov
hlt
jnp
push
clc
adc
imul
and
mov
repz
mov
sbb
test
fisubs
push
insb
lret
dec
daa
jo
adc
dec
and
scas
and
pop
lock
jnp
jp
sub
call
inc
inc
je
rolb
jno
and
sahf
xor
out
push
dec
mov
insl
sbbl
inc
mov
dec
out
test
xchg
lret
fdivr
push
pop
and
adc
lret
jne
je
iret
cs
das
mov
push
movsl
mov
or
xchg
xchg
mov
jns
in
mov
mov
fwait
xchg
inc
mov
loope
inc
outsb
nop
cld
cltd
sbb
pop
adc
leave
jmp
xchg
xchg
insb
int
lea
cs
rolb
dec
jmp
popf
pextrw
repz
xchg
xor
mov
pop
mov
imul
ss
cmp
lret
cmp
or
test
and
addr16
push
or
jbe
adc
mov
pop
mov
sbb
clc
inc
jo
cltd
mul
inc
xorl
mov
inc
scas
xlat
inc
popf
sub
pop
mov
lods
int
mov
sahf
cmpl
rclb
xor
mov
movsl
stos
jno
xchg
and
les
xor
lock
mov
testb
pop
dec
rolb
mov
or
out
loope
notl
mov
xchg
decb
or
pop
ljmp
movsb
enter
and
and
mov
adc
addr16
cmpsl
xchg
sub
mov
mov
xchg
fmull
fists
push
adc
scas
testb
pop
cwtl
xor
js
or
lcall
cmp
sub
test
mov
mov
pop
mov
mov
stos
pop
mov
cmp
dec
int3
or
dec
flds
stos
in
into
adc
call
sarl
jbe
daa
mov
dec
lcall
cmp
sbb
es
jno
cmp
stos
push
cmpsl
or
arpl
sbb
cmp
sarl
jbe
xchg
in
mov
mov
outsl
sbb
jne
xchg
mov
mov
and
adc
das
push
stos
fmulp
imul
or
inc
iret
mov
jg
sahf
mov
hlt
dec
or
rcl
repz
xor
clc
and
leave
or
dec
mov
or
jmp
dec
push
inc
mov
mov
jns
fcmovnbe
adc
push
jl
xchg
aas
push
xchg
cmp
iret
xchg
addr16
dec
sarb
loope
imul
xchg
inc
dec
mov
xchg
sub
push
into
cld
inc
add
cltd
test
mov
js
loop
outsl
inc
mov
jmp
push
aaa
jb
pop
cmpsb
int
in
ret
xchg
popf
push
out
or
jbe
xchg
int
rorb
xchg
push
or
cmp
ret
nop
loop
pop
push
popf
mov
pop
push
out
out
les
dec
xor
std
pop
loop
add
dec
or
mov
ret
pop
dec
loope
dec
jbe
test
mov
cwtl
xchg
dec
jno
mov
cmp
dec
mov
sti
dec
xchg
cs
movsl
loopne
jge
iret
xchg
lret
inc
fildl
sub
in
arpl
shrl
out
mov
movl
push
sbb
cmpsl
push
scas
shr
mov
mov
jae
scas
out
xor
adc
loop
lret
dec
sarb
int
mov
dec
testl
push
scas
into
shll
mov
js
imul
inc
push
sub
cmp
mov
pop
fistpl
adc
pop
leave
mov
mov
scas
xchg
cmp
cmpsb
mov
jbe
mov
add
fcompl
pop
lcall
jp
call
xchg
adc
sti
and
pop
pop
inc
jns
lods
jle
arpl
pause
out
out
jno
or
jg
pop
sub
js
xor
jecxz
repnz
aam
icebp
sub
test
loope
lds
mov
xchg
mov
divb
movsl
mov
inc
mov
ds
popa
in
dec
mov
and
jne
stc
sbb
repz
repz
dec
pop
jbe
les
outsl
cli
ljmp
in
jge
sbb
inc
xchg
xor
stc
inc
mov
inc
gs
scas
xchg
pop
push
sbb
xor
mov
push
inc
test
psubb
xchg
dec
pop
lds
rcl
push
lods
jnp
mov
fcomps
push
aas
adc
pop
jne
dec
icebp
lahf
inc
sub
adc
pusha
popf
adc
pop
xchg
imul
imul
mov
xchg
scas
or
mov
lahf
mov
inc
mov
fwait
out
jb
jmp
jg
iret
mov
test
inc
xchg
push
mov
mov
mov
mov
adc
xchg
pop
jo
jns
pop
jnp
mov
data16
arpl
xchg
jp
dec
out
xchg
femms
ret
mov
call
mov
mov
outsl
jge
cld
inc
mov
imul
dec
mov
inc
mov
hlt
add
out
lret
mov
and
pusha
cmp
fistpl
push
lods
arpl
fcoml
add
dec
stos
cs
inc
push
add
mov
jecxz
jo
stc
out
mov
mov
dec
xchg
push
popf
and
jmp
data16
push
jne
mov
cli
lods
sbb
fcmovb
mov
stc
add
sahf
push
adc
ja
aas
push
sarb
pop
jns
mov
lahf
jne
inc
dec
fildll
push
insb
cmp
out
pushf
or
aas
xchg
sbb
mov
pop
in
das
mov
inc
inc
dec
sbb
sub
mov
popf
add
jbe
xor
push
pop
iret
pop
and
pushf
or
jmp
scas
adc
aam
into
mov
adc
or
fsubrp
sets
inc
sbb
mov
stc
insb
push
scas
inc
data16
push
sbb
xor
xor
fists
mov
cld
aaa
adc
je
shlb
dec
cmp
mul
adc
fdivr
test
sbb
stc
ljmp
insb
pop
pop
push
push
shl
cmp
addb
cmp
inc
es
dec
sub
jl
or
xchg
out
jle
push
xor
test
inc
adc
xchg
jae
push
std
movsb
and
mov
pushl
dec
mov
dec
rcl
inc
aaa
pop
call
pop
cmp
shrl
and
cmp
mov
imul
mov
add
sub
repz
es
lret
filds
pusha
pushf
inc
xor
iret
adc
std
lds
cmp
ret
push
into
xchg
in
stc
mov
es
lret
ficomps
test
ret
pop
push
mov
mov
push
or
cltd
not
xor
or
mov
loop
ret
sub
out
in
add
jp
call
shl
mov
xchg
inc
cmpl
pushf
push
fidivrs
cwtl
sub
jb
fwait
hlt
inc
out
xor
jno
lock
or
dec
dec
loopne
int3
cmp
fs
scas
push
inc
insl
cmp
aad
rcl
xchg
push
not
fcomp
jne
pop
in
pop
sbb
scas
cmp
test
in
or
ja
jle
aam
aad
in
shl
pop
add
ret
sbb
shll
outsb
add
inc
jle
pop
jl
mov
mov
insb
xchg
out
pop
sub
nop
repnz
daa
jle
cmpsb
pop
push
mov
std
movb
loope
test
sahf
and
cltd
or
fidivl
jno
cmp
dec
pop
and
mov
mov
mov
dec
lcall
add
stos
hlt
xchg
xchg
in
stc
inc
push
fisubl
nop
cmp
mov
mov
and
push
xchg
lret
add
in
dec
add
xor
inc
sub
movsl
xchg
ficoml
ja
lcall
mov
test
jbe
sub
negl
add
jno
xchg
dec
jne
lods
sarl
sbb
mov
mov
insb
pusha
pop
and
cmp
cmp
jnp
shlb
shlb
out
aas
stc
add
sbb
into
popf
inc
jge
repz
jnp
ss
sub
lret
push
loopne
popa
pop
sarb
inc
cmp
pop
sti
dec
stos
sbb
inc
jg
test
shrb
and
xchg
into
mov
out
and
inc
lds
jnp
mov
lods
iret
dec
jns
mov
and
sub
xor
push
mov
sub
insl
mov
cltd
inc
out
or
push
jmp
inc
mov
and
push
jno
aaa
aad
rol
cli
sbb
ss
xor
mov
outsl
aaa
imul
movsl
ret
insb
movsl
jo
inc
lret
aaa
dec
fidivrl
mov
cmp
cmpsl
dec
mov
jmp
pop
adc
push
cmc
outsb
lea
or
xor
cli
ret
jp
pop
cmpsl
sub
std
in
insb
adc
adc
mov
aaa
and
mov
out
stos
enter
int
cmp
adc
xchg
jns
gs
or
orb
or
adc
shlb
mov
aad
enter
mov
test
jae
sub
jmp
pop
mov
sti
sbb
fs
add
test
xchg
xor
cmp
add
out
or
sbb
sbb
sub
fstps
push
and
xor
in
inc
inc
xor
push
xchg
inc
pop
mov
sahf
xchg
mov
or
out
xchg
dec
int3
jecxz
adc
xorb
mov
xor
inc
or
movsb
clc
push
sub
aaa
sbbl
adc
push
popa
orb
and
enter
fmul
push
xor
addb
incb
rolb
jl
ss
jno
into
fidivrs
test
dec
hlt
cmpsl
cmp
ret
ss
sbb
stos
cmp
popf
int
movsl
aaa
mov
and
lea
enter
popa
daa
mov
add
arpl
or
shll
lahf
ds
push
add
pop
neg
dec
xlat
jb
aaa
xchg
xor
add
dec
pop
fdivp
jno
pop
ret
mov
mov
arpl
fcmovbe
and
push
cmpb
jg
repnz
aaa
cmp
cmp
stos
dec
sub
out
add
in
inc
lods
mov
jle
sarb
dec
dec
mov
adc
cwtl
cmpsb
insb
and
stc
test
pop
scas
jae
xchg
je
leave
add
cmp
push
cli
loop
mov
mov
jbe
int
out
popf
jmp
ret
mov
cmpsl
mov
fwait
dec
jae
mov
int3
jecxz
fisttps
push
into
iret
aas
push
push
int
cld
mov
mov
push
sbb
xor
out
xchg
movsl
sub
hlt
not
or
and
or
lds
orb
cltd
scas
iret
ja
loopne
dec
je
pop
icebp
adc
mov
mov
push
dec
aam
push
scas
rolb
pusha
lret
test
and
sub
adc
mov
lret
jne
mov
sbb
pop
lea
xchg
push
in
mov
xor
cs
xor
ja
and
ret
daa
arpl
lea
outsb
les
lds
push
clc
pop
test
or
sub
xchg
dec
push
xor
cmc
aam
mov
jge
adc
jae
mov
icebp
inc
mov
or
test
leave
ror
mov
and
jne
scas
add
adc
cmp
lcall
and
arpl
push
mov
push
fmuls
push
push
data16
xlat
xor
cmpsb
ffreep
dec
inc
cmp
movsb
dec
ffreep
cmp
mov
adc
mov
sbb
sub
insl
mov
xor
and
and
jbe
xor
adc
incb
ror
sub
stc
xchg
leave
mov
jbe
and
fldcw
fcompl
les
test
stos
cli
mov
xor
mov
std
pop
shlb
imul
notb
jo
pop
dec
je
and
ss
lods
mov
aaa
jl
lret
push
rorl
and
push
adc
insb
je
or
mov
insl
jp
stos
cmpsl
cmc
fadds
and
jmp
push
jns
daa
dec
fcmovnbe
out
add
inc
pop
cmpsl
push
mov
sub
scas
mov
imul
les
xchg
sbb
aas
lret
repz
jo
jne
pop
xchg
inc
dec
jns
stc
pop
fxch
nop
xor
jbe
rcrl
jecxz
push
xor
sub
je
leave
xchg
iret
mov
es
popa
inc
mov
sub
dec
inc
stc
pop
clc
inc
mov
lods
repz
aaa
pop
cmpsb
hlt
pop
jp
mov
test
sbb
repnz
sbb
adc
dec
add
sbb
pushf
xlat
sub
sbb
loopne
push
shlb
push
or
jp
movsl
das
repnz
aad
adc
ret
inc
daa
cmp
clc
push
mov
rcl
int3
mov
adc
ficompl
cmp
add
lds
pop
test
jg
stos
mov
fcomp
fwait
xchg
fidivl
or
push
push
push
data16
stos
jae
sub
div
mov
roll
cmp
cmp
mov
pop
mov
mov
push
out
pop
add
ja
insb
std
int3
les
mov
test
add
stos
and
sub
cmp
js
or
and
mov
stos
cmp
jns
pop
mov
arpl
shrl
xor
pop
jnp
fs
fists
mov
pop
mov
add
stc
popf
outsl
outsb
mov
add
out
shl
popa
and
pop
lahf
out
sahf
pop
and
xor
xor
mov
adc
xchg
sbbb
loopne
jecxz
mov
mov
inc
idiv
xor
add
cmp
pop
push
sub
and
sarl
mov
adc
sbb
shll
js
rcl
mov
sbb
inc
push
call
pop
and
movsl
test
mov
sti
lods
jge
xchg
adc
aam
mov
mov
mov
shlb
mov
dec
nop
inc
insl
out
pop
inc
test
xchg
out
pop
sahf
in
jo
aas
add
and
cltd
mov
fildll
jge
inc
push
scas
mov
iret
pop
data16
dec
jnp
scas
xor
mov
mov
jp
jmp
lods
cmp
ret
sub
push
add
or
out
in
lret
ret
push
xor
js
xchg
in
lret
pop
jecxz
pushf
jmp
mov
fsubs
loop
pop
fnstenv
sub
movsl
loopne
xchg
mov
mov
in
dec
into
lods
mov
or
outsl
cmpsl
jle
inc
into
xchg
xor
xchg
js
hlt
adcl
imul
into
cmc
and
and
mov
int3
test
in
or
in
jns
gs
frstor
out
leave
aaa
inc
sub
sub
dec
add
fdiv
push
sub
adc
pop
cmc
sbb
dec
adc
adc
or
add
into
cld
lods
std
xor
mov
sub
pop
cmpsb
scas
and
xchg
hlt
cmp
inc
dec
mov
cli
mov
xor
insb
pop
fmuls
pop
adc
iret
mov
cli
movsb
into
jmp
push
int3
fst
add
push
sbbb
outsb
push
jnp
test
clc
fst
push
pop
jmp
mov
fsts
sbb
sbb
mov
cmp
xchg
andb
xor
jl
dec
mov
aaa
aas
lret
js
pop
clc
xchg
dec
mov
push
nop
into
rcrb
mov
push
xchg
push
pushf
testl
cmpl
pop
insl
fistl
icebp
pop
pop
jecxz
rcr
push
mov
sub
jmp
mov
xchg
pop
sub
sub
pop
mov
push
and
lret
adc
int
imul
fbld
xchg
iret
jo
jmp
dec
and
pusha
dec
arpl
push
fcom
in
lahf
std
lock
loop
in
sbb
inc
mov
xor
mov
mov
out
sbb
sbb
movsb
pop
pop
sbb
push
adc
push
out
add
lods
ret
sub
testb
insl
and
aam
stc
mov
out
or
sahf
xchg
imul
cmp
mov
inc
mov
xchg
lock
setg
sub
rcr
cmp
pop
add
mov
dec
enter
xchg
nop
mov
sub
jbe
jae
adc
js
sub
lcall
or
push
movb
cld
aad
lret
mov
shll
fs
cld
cmpsl
fcomp
or
jae
lret
movsb
adc
push
dec
add
hlt
mov
cmp
xchg
in
push
xchg
inc
aad
test
jle
lret
arpl
gs
lea
jmp
adc
lds
adc
int
xchg
xor
hlt
jno
xchg
pop
inc
sub
push
loope
fadd
insb
or
and
and
test
sub
cmp
add
jae
subl
aam
jae
jbe
ret
xchg
int3
inc
dec
push
aad
mov
sub
xor
aaa
clc
lds
cmp
inc
cwtl
fwait
ljmp
pusha
inc
or
jmp
iret
mov
lods
pop
aas
jne
jg
rcl
mov
cli
pop
or
push
mov
jae
rclw
mov
pop
jbe
push
push
imul
scas
ss
test
mov
sbb
push
xor
insb
dec
xchg
test
add
add
xchg
xchg
test
hlt
and
ror
roll
adc
js
repnz
ljmp
mov
sbb
and
and
pop
aam
lods
sub
push
pop
in
mov
lds
mov
inc
ds
outsb
sub
pusha
lds
je
pushf
xchg
in
lods
sahf
mov
and
icebp
popf
cmp
iret
pop
test
or
cmc
jp
addb
insb
jae
ror
arpl
sub
imul
jmp
orl
push
lret
and
push
loope
ja
mov
inc
mov
loopne
in
and
xor
in
jno
push
nop
loop
xlat
fsubrl
jge
cmp
xchg
out
fwait
stos
into
cmp
test
pop
cmp
jle
xlat
push
das
mov
push
in
aam
lcall
sbb
jae
push
mov
rcrb
push
dec
jno
test
nop
fs
pop
cltd
lds
call
sbb
insb
fildll
fsts
pop
pop
sbb
fcomps
test
repnz
cli
and
pushf
cs
adc
mov
mov
xchg
sbb
add
aad
ret
jb
sbb
dec
pop
mov
inc
in
shlb
sbb
gs
jecxz
ja
stos
dec
add
cmpsl
clc
mov
movsl
jb
stos
jle
shlb
xor
movl
dec
pop
and
and
fst
xchg
xlat
hlt
push
addr16
ficompl
or
stc
clc
scas
out
jns
mov
out
xchg
je
xchg
adc
jle
fcmovbe
cmp
sub
sub
fistl
test
ret
sahf
pop
xchg
test
add
hlt
adc
pop
push
mov
stc
or
pop
ret
test
outsb
sub
into
push
mov
into
out
push
int
in
mov
clc
stos
nop
jae
inc
xlat
ret
push
loopne
daa
jecxz
push
repz
push
sub
mov
dec
stc
xchg
adc
rcrb
push
out
sbbb
es
mov
fwait
sub
out
outsb
jp
daa
sub
mov
mov
inc
out
cmp
frstor
lock
adc
hlt
push
jns
int3
xchg
imul
dec
das
lret
insb
insl
cmc
shl
cmp
out
lods
aaa
jne
pushf
xchg
sarl
iret
bound
and
lcall
or
and
movsl
add
jecxz
inc
xchg
adc
mov
int
inc
out
stc
mov
adc
xor
ss
mov
dec
push
jo
into
and
in
cmpsl
sub
mov
mov
sbb
sbb
adc
mov
xchg
add
into
btr
scas
orl
mov
cmp
dec
push
mov
pop
pushf
cmp
jle
sbb
loope
jl
jecxz
push
leave
imulb
push
lret
jge
fcoms
dec
out
test
mov
jno
mov
cli
mov
sbb
add
cltd
xor
in
lods
out
pop
add
roll
cmp
push
repnz
or
outsb
inc
mov
lret
popa
arpl
pop
mov
mov
cmpsl
pop
and
sub
sahf
cmc
lds
mov
in
outsl
repz
inc
js
int
sar
loop
cmp
mov
sub
xchg
inc
inc
dec
movsl
add
pop
into
out
shl
pop
aad
in
movsb
sti
mov
push
das
inc
pop
pop
in
sbb
int3
sbb
fsub
clc
aam
push
out
sbb
jmp
xor
adc
rcll
cmp
mov
lock
push
or
mov
call
lret
lds
inc
fmul
mov
jmp
cmc
cs
mov
adc
aam
or
daa
out
test
test
into
cld
jb
aaa
leave
stos
push
out
lods
stc
cmp
mov
inc
or
xor
cld
pop
mov
sti
push
and
push
cli
aas
les
mov
push
scas
aad
out
sti
and
adc
cmc
or
insb
hlt
jne
rorb
jmp
insl
adc
flds
push
cld
cmp
popa
push
stos
add
pusha
leave
rcll
dec
test
sbb
lock
leave
fnsave
ja
aaa
push
sbb
jo
lret
mov
ja
rcl
sub
dec
sbbl
je
sub
out
xor
cmpsl
pop
and
push
shrl
jo
into
push
int3
adc
not
js
inc
repnz
inc
pop
testb
movsb
fcomps
inc
in
xchg
push
enter
aam
adc
cmp
xor
leave
push
inc
mov
rcll
pop
loopne
add
leave
enter
push
stos
or
xor
jbe
dec
dec
fdivrl
mov
push
jb
clc
arpl
push
scas
aad
add
inc
pop
xchg
xor
sub
shll
cbtw
shrb
mov
mov
adc
xchg
cmp
and
xor
xor
adc
sbb
fwait
cmp
and
jbe
xchg
cmp
popa
pop
int3
dec
fwait
and
push
add
sbb
fistl
je
xchg
std
pop
adc
inc
data16
xchg
pusha
into
adc
pop
push
push
mov
push
jmp
pop
lret
insb
fsubs
int
adc
xchg
push
xchg
and
shll
cmpsl
sti
in
shrb
test
xor
or
sbb
pushl
cmpsl
or
mov
sbb
leave
pop
cmp
jle
es
mov
data16
sub
push
imul
or
mov
xor
pop
enter
lds
test
in
sbb
or
fdivrl
add
aas
sbb
jecxz
repnz
es
pop
std
iret
fcompl
subb
sub
push
jbe
pop
dec
jb
test
lds
insb
push
mov
jns
out
pop
jg
dec
and
pop
cmp
mov
cltd
lea
adc
aaa
scas
xor
popa
jge
cli
sbb
xchg
cmc
stc
cmp
out
and
roll
cmp
cmp
mov
mov
pop
pop
and
sbb
aad
mov
rolb
hlt
fsubs
sub
out
int3
sbb
shll
jg
scas
lret
xchg
adc
mov
outsb
mov
stos
ficoms
dec
shr
add
pop
mov
repnz
xor
inc
cs
sbb
out
test
lods
into
add
cmc
or
adc
mov
leave
std
jg
add
xor
out
cli
iret
and
xor
fmuls
fistps
addr16
aas
mov
mov
cmp
adc
inc
repz
dec
insl
sti
push
aas
add
push
mov
cmp
loopne
fists
pop
xor
out
sbb
arpl
jbe
fwait
push
popf
aam
cwtl
mov
test
in
inc
adc
cmpsl
stos
push
dec
sub
out
in
and
jl
imul
or
jne
pop
movsb
jb
xchg
sarb
mov
sbb
into
or
xchg
ret
pop
aas
lods
fiadds
std
leave
cmp
loop
aad
jp
imul
fmul
mov
loopne
adc
sbb
sti
lcall
call
jg,pn
sub
out
mov
fidivl
loop
xchg
mov
push
xor
aas
ror
ret
push
popf
mov
mov
cmp
or
fildll
adc
les
lea
pop
out
pop
sarl
into
mov
add
dec
jae
icebp
mov
lret
scas
addr16
inc
add
push
sbb
mov
and
fs
sub
or
add
shrl
lret
pop
aam
int3
mov
sti
xchg
push
sarb
push
sbb
je
pop
mov
scas
cmp
hlt
and
aad
push
cmp
jle
lahf
fiadds
and
mov
xchg
xlat
pop
sub
in
popa
or
cmp
ficoml
insb
data16
mov
pop
jae
fnstenv
mov
push
push
pop
stos
stos
out
mov
movsl
sub
pop
pop
mov
loopne
mov
in
adc
push
movsb
cmp
add
das
pop
cmp
inc
cmp
xor
loope
inc
in
popa
adc
add
pop
incb
cmp
cmp
pushf
lea
dec
and
xchg
and
sbb
aas
movsl
cld
dec
jg
pop
ret
data16
sbb
inc
xor
scas
mov
and
andl
pop
dec
and
fwait
std
loope
pop
fsubl
lds
push
into
fldl2e
mov
push
sbb
popa
ret
movsb
mov
xchg
and
mov
or
shlb
and
push
mov
push
mov
jl
rcl
shll
rcrl
je
xor
das
fmul
mov
add
outsl
mov
icebp
ljmp
sub
xlat
mov
jge
cmpl
push
pop
insl
loopne
cmpsb
sub
iret
arpl
icebp
daa
jmp
cmp
sbb
xor
movsb
lds
push
aad
in
setno
lds
cmpsb
ljmp
add
push
xor
fcomps
jbe
popl
repnz
out
test
xlat
leave
lods
aaa
xchg
dec
adc
ljmp
sahf
dec
cli
inc
mov
pop
sub
loopne
adc
idivl
nop
cltd
push
mov
mov
push
imul
inc
sbb
and
dec
jo
cmp
sbb
dec
pop
into
fst
pop
icebp
out
gs
ljmp
pusha
push
cli
sbb
adc
test
gs
add
outsb
jbe
mov
mov
out
dec
lods
repz
jo
es
das
pop
push
daa
add
cmp
out
push
sbb
cmp
or
aad
xchg
jbe
ja
jo
mov
inc
xor
inc
lcall
adc
test
adc
and
unpcklps
or
out
sti
or
lahf
mov
mov
test
or
call
push
and
mov
mov
mov
fadd
mov
int3
sub
inc
pop
test
ljmp
sbb
jns
xor
inc
test
adc
stos
pop
in
jae
jbe
aad
in
movsb
mov
jne
xorb
test
out
out
scas
test
xor
jae
mov
jp
xlat
pop
clc
jno
dec
insb
aad
getsec
pop
and
mov
push
icebp
dec
push
loope
dec
mov
cltd
push
xor
add
rcrb
pop
jae
or
and
add
xchg
lods
repnz
mov
mov
in
or
add
xchg
mov
and
stos
fwait
ret
inc
pop
scas
push
lods
xor
mov
adc
ds
mov
loop
iret
les
push
push
orb
shrb
xchg
cmp
mov
test
ss
in
xchg
cmp
xchg
jle
lcall
es
jo
cmpsl
mov
jno
hlt
pop
aam
adc
pop
andb
inc
cmp
xor
mov
lret
sti
sbbl
das
lods
jbe
ret
shlb
xchg
mov
push
and
movsl
ret
push
pop
lret
int
out
push
jecxz
insl
movsb
xor
out
or
outsb
fcmove
fimuls
insl
cmpsb
jne
jle
int3
push
cmc
fstpl
jbe
mov
cmp
jle
jne
in
ljmp
addr16
push
push
imul
movsl
scas
cmp
mov
fsts
clc
cwtl
xlat
outsl
dec
stc
dec
xor
sbb
in
movsb
jmp
mov
rolb
cmp
jle
dec
sbb
sti
cmp
rorl
popf
int
jmp
idivb
rol
sbb
or
sub
or
aam
push
call
enter
jns
repz
inc
into
cwtl
fstp
fldcw
xchg
push
sbb
aad
ret
jg
into
rcll
push
jbe
jb
mov
imul
leave
in
sub
mov
or
test
and
xchg
loopne
dec
fildll
push
ss
fistl
mov
stc
xor
arpl
dec
xor
pop
or
dec
fwait
xor
xchg
inc
movsb
sbb
ds
sub
mov
jl
shl
pop
mov
xor
and
adc
pop
jno
ja
nop
imul
or
ret
cltd
dec
test
lods
loop
outsl
and
data16
dec
mov
mov
sti
out
or
mov
dec
xchg
popf
lret
mov
scas
pop
adcb
or
dec
xchg
imul
dec
sahf
hlt
inc
sub
dec
int
mov
xor
int3
adc
lods
lods
clc
sub
jno
shl
jecxz
leave
shll
xor
or
sahf
and
popa
movsl
jno
fst
lcall
sarb
jns
sbb
and
cmpsl
dec
outsb
enter
repz
insl
dec
xchg
ja
mov
jmp
shrb
mov
push
popa
pop
and
iret
call
js
jne
xchg
adc
nop
mov
add
mov
xor
insl
pop
mov
sub
sub
jb
push
lahf
mov
cmp
into
decl
adc
inc
xor
addr16
jns
out
xchg
int
push
testl
test
xor
jbe
popf
sbb
add
mov
test
mov
sub
insl
testb
and
outsl
jne
jbe
jge
idivl
insl
nop
dec
loopne
aaa
aad
adc
repz
xchg
cmc
pop
cmp
mov
and
adc
clc
divl
in
mov
mov
add
dec
jl
cmp
and
jmp
and
push
push
xchg
xchg
inc
push
inc
or
inc
xor
cmpsb
scas
mov
sub
mov
aad
sub
jne
add
mov
pop
int3
mov
data16
jle
pop
cmp
adc
dec
or
das
into
imul
andl
add
rcrb
dec
stos
xor
or
nop
jns
insb
cs
mov
inc
adc
scas
pop
int3
xchg
loopne
cmp
loop
lods
sub
mov
pop
jmp
inc
test
into
lods
imul
mov
mov
inc
and
aad
cwtl
xchg
jp
jnp
out
pusha
fisttpl
ficompl
lret
mov
imul
into
push
imul
sbb
xchg
mov
mov
loopne
sbb
mov
pushw
fidivrl
jns
lock
fcomps
scas
push
in
adc
movsl
xlat
mov
arpl
dec
pop
mov
pop
cmp
mov
gs
sub
lret
mov
mov
aad
cmpsb
ja
faddp
sub
push
adc
stos
lods
cmp
sub
imul
mov
adc
into
int3
push
xchg
inc
pop
mov
aas
jb
into
outsl
inc
mov
adc
pop
js
clc
jbe
cmp
cmpsl
rol
out
dec
pusha
sti
fs
pop
push
out
xor
idivb
outsl
cwtl
pop
aam
test
loope
pushf
into
aaa
mov
stc
sbb
icebp
stos
iret
mov
inc
push
pop
pop
mov
push
out
fdivrl
jnp
pusha
int3
xchg
jmp
popa
add
int3
xor
xchg
cltd
lret
mov
mov
pop
mov
scas
addr16
fidivs
jbe
enter
mov
push
leave
and
sahf
xchg
fadds
xlat
push
scas
rol
hlt
push
lods
pop
sbb
scas
clc
testb
stos
cmp
test
lcall
rcl
stos
mov
sbb
mov
fiaddl
mov
popf
pop
sbb
jns
mov
push
stc
mov
sbb
fdivrl
shrb
fidivl
cli
lret
mov
add
subb
int3
cmpsb
fs
enter
pop
jmp
js
mov
inc
notl
jge
daa
sub
mov
or
test
std
xor
xchg
sbb
jp
inc
cli
pop
scas
ja
test
neg
lahf
popf
and
jmp
sahf
mov
push
dec
jp
xor
xlat
loopne
xor
xorb
cmp
scas
in
add
push
lret
je
subl
jb
add
rcrb
cmp
push
push
inc
popa
jae
cmpsb
out
lods
inc
adc
repz
loop
lcall
into
mov
mov
adc
dec
iret
lods
cmp
dec
ljmp
gs
jp
hlt
stc
out
das
push
into
xor
adc
mov
push
cmp
in
mov
xchg
or
and
rol
mov
push
mov
pop
iret
enter
adc
jno
lea
cmpsl
jb
call
stc
or
ret
ljmp
hlt
call
xchg
out
xchg
in
push
and
outsl
pop
lock
jmp
jmp
mov
adc
repz
xchg
ret
stos
mov
data16
pop
inc
scas
jge
cs
cmpsl
mov
adcl
mov
lret
fwait
add
lcall
or
int3
out
pop
js
call
lock
test
ljmp
mov
and
dec
aas
xchg
fdivrs
add
jae
mov
jne
or
xor
aaa
mov
xor
std
push
ds
pusha
not
push
pushf
jge
pop
and
sub
in
adc
inc
and
adc
jb
outsb
jne
mov
xor
lret
push
popa
push
xchg
mov
xchg
loop
rcrl
xchg
adc
jns
bound
pop
test
lods
roll
add
xchg
cwtl
ja
ror
xchg
mov
rcl
mov
rol
mov
mov
inc
pushf
nop
jle
dec
das
cmp
lcall
xchg
add
inc
sahf
cmp
mov
mov
xor
jg
xchg
add
in
jp
sub
mov
pop
mov
dec
cli
imul
pop
mov
insb
imul
jns
lahf
xchg
outsb
xchg
loope
lea
xorl
xor
stc
adcb
jb
mov
xchg
nop
mov
aaa
sub
push
loopne
jl
sti
ret
imul
mov
sarl
xlat
mov
xchg
dec
cmpsb
xchg
adc
mov
or
cmpsb
int3
mov
movsl
roll
sti
fidivrl
sbb
enter
gs
cmp
movb
or
arpl
and
inc
mov
cmpsl
or
dec
or
out
das
sub
stc
mov
or
or
dec
std
dec
mov
sbb
repz
jo
push
inc
inc
xchg
je
inc
push
jnp
xchg
dec
sahf
cld
mov
and
dec
ss
or
inc
xchg
loope
mov
mov
roll
insl
mov
cmc
lret
imul
aaa
es
jae
stos
mov
push
in
sub
jg
mov
fs
mov
call
out
outsl
hlt
pusha
adc
jge
subb
insb
dec
inc
push
or
outsb
out
in
fnstcw
mov
push
add
rcll
rorb
adc
mov
push
je
aad
jnp
in
pop
sub
cmpsl
push
in
push
inc
inc
inc
push
adc
ljmp
push
dec
out
pop
stc
jae
jecxz
push
add
daa
icebp
sub
xchg
adc
cli
insb
xor
jge
xchg
out
loop
sbb
jle
aam
sub
test
mov
xchg
mov
jne
mov
lds
sub
inc
mov
push
xchg
out
mov
or
arpl
lret
orb
mov
fsubrs
mov
cmp
popf
loope
xlat
adc
mov
ss
data16
scas
out
mov
mov
push
adc
cmp
pushf
sbb
fsubrs
and
and
lds
fstpt
inc
pushf
and
add
mov
out
mov
ss
or
lret
and
jmp
ss
repnz
or
out
sub
and
cli
into
mov
shl
mov
sbb
add
lods
aas
out
pop
repnz
mov
dec
inc
xchg
inc
jge
out
jb
int
mul
or
out
or
aad
cmp
rorb
hlt
adc
cmp
or
sbb
insl
mov
je
mov
adc
push
dec
lods
xor
adc
jno
fstp
xchg
cmp
xchg
add
test
out
sbbl
mov
inc
push
gs
dec
pop
jb
and
sub
mov
das
mov
mov
test
mov
hlt
mov
jns
fst
mov
aas
mov
into
movsb
out
xchg
push
fcoml
dec
add
add
pop
fsub
andl
pop
push
or
pop
xor
aam
or
xchg
and
fwait
ja
lods
pop
out
inc
not
rolb
ljmp
pushf
push
sbb
outsl
cltd
scas
test
fisubs
aaa
call
jl
lea
mov
mov
outsl
icebp
hlt
mov
aam
push
xchg
pushf
popf
mov
adc
jbe
xor
adc
int
jb
sub
shlb
out
jae
cmp
cmc
push
mov
aad
add
inc
pop
xchg
xchg
pop
movsl
rolb
mov
ss
mov
cmp
das
test
mov
pusha
into
das
arpl
inc
shlb
call
xor
jge
jbe
push
or
int3
pop
xchg
ljmp
xlat
into
push
je
ficompl
imul
les
or
push
loop
cmp
cmpsb
inc
fmuls
lret
arpl
mov
pushf
out
ret
imul
dec
stos
aam
sub
cmp
inc
scas
out
into
or
out
adc
shll
test
aam
pop
push
jbe
out
lret
xlat
aam
or
mov
clc
cmc
pop
push
or
mov
cmp
mov
mov
lods
push
push
pop
scas
rorl
test
das
pop
pushf
ja
icebp
mov
adc
stos
add
lds
cmc
jg
and
mov
movsl
bound
jp
fcompl
add
fs
push
or
inc
movsl
mov
or
popf
addr16
mov
push
mov
xor
mov
jge
pop
mov
add
outsl
int3
push
dec
cmp
hlt
xor
adc
sbbb
dec
or
add
adc
and
loop
and
movsl
data16
add
insl
dec
int
pop
jb
cld
jecxz
outsl
cli
enter
jmp
push
pop
imul
das
jle
fadds
cmp
test
addr16
cli
out
loope
xchg
xchg
pop
mov
nop
sbb
mov
insb
mov
push
lcall
in
dec
scas
xorb
cmp
mov
fnsave
fs
pop
mov
push
jns
xchg
iret
test
inc
test
les
mov
cwtl
sahf
pusha
ljmp
out
mov
je
addb
mov
lret
push
movsl
cmpsb
pop
popf
jns
jo
inc
mov
out
pusha
lahf
lods
or
adc
jge
fcmovnbe
loope
adc
push
mov
out
lcall
adc
js
leave
or
xchg
adc
into
cmp
pop
sbb
sahf
xchg
pop
or
mov
leave
repz
mov
out
ljmp
pop
push
xor
int
and
and
mov
addb
dec
in
lea
icebp
daa
push
cmp
cmc
jl
lret
test
jp
mov
jp
sub
pop
adc
sbb
outsb
cmp
jle
sahf
fs
adc
jae
arpl
stos
std
scas
jl
mov
mov
dec
or
adc
fiaddl
aam
sub
out
xor
cwtl
sbb
push
into
aam
adc
stos
sbb
or
hlt
xchg
push
mov
cmpl
and
mov
in
shlb
mov
push
sbb
dec
imul
orl
dec
leave
sbb
adc
mov
into
imul
ficomps
sub
mov
push
jl
stos
xor
iret
xchg
jg
insl
fldl
fcompl
sub
jl
imulb
dec
sub
sti
in
out
jb
ja
in
mov
add
cs
rol
add
inc
push
mov
cltd
dec
adc
es
pop
es
and
call
and
xchg
inc
sbb
popf
addr16
sbb
dec
cmp
stc
adc
jl
fnstenv
shrl
mov
mov
sahf
mov
lock
ret
pop
daa
int3
mov
xchg
inc
and
sbb
add
xor
pop
leave
mov
inc
xchg
or
mov
lods
add
mov
in
cmp
push
xlat
leave
fistl
fnstcw
and
lds
mov
fimuls
repz
inc
cltd
addr16
add
pop
pop
cli
dec
mov
mov
push
insl
shlb
repnz
loope
jbe
rolb
loopne
mov
push
and
pop
shr
lahf
pop
inc
pop
or
popa
call
inc
jno
cmp
push
inc
and
popa
ret
dec
loope
push
cmp
pop
adc
cwtl
jno
push
inc
pop
pop
xor
xchg
push
sub
sub
fsubrp
inc
xchg
imul
push
fiaddl
dec
out
leave
lahf
mov
aaa
jb
dec
sub
xchg
rcl
fldt
fidivrl
adc
dec
mov
mov
ret
rorl
xchg
inc
outsl
mov
lock
jmp
stc
hlt
adc
add
les
ds
pop
xchg
mov
lcall
pop
pop
out
rolb
cwtl
aas
jnp
enter
or
or
xchg
fisttpll
iret
sar
loop
pop
or
fsubs
dec
or
lret
jg
add
sbb
dec
mov
and
jecxz
mov
inc
adc
mov
mov
sbb
sti
arpl
cmp
push
movsb
mov
pusha
js
cltd
xor
test
mov
inc
ret
pop
fsts
lods
jae
mov
stos
movsb
scas
pop
inc
pop
dec
xchg
movsl
rclb
inc
es
ljmp
pshufw
lods
and
xchg
dec
nop
mov
sbb
fs
jnp
pop
stos
lret
mov
pop
pop
cli
outsb
mov
shl
inc
loope
pushf
pop
dec
push
or
aad
gs
mov
mov
int3
lret
div
sarb
out
out
test
mov
cmpsl
mov
cld
jb
ret
outsb
or
out
jo
das
push
mov
insl
pop
dec
sbb
lret
or
nop
ja
push
je
rorb
dec
lods
subb
leave
iret
aam
sub
sahf
cltd
pop
mov
cmp
dec
int3
cld
mov
push
push
push
enter
not
adc
push
iret
pop
int
rcl
add
cmp
mov
add
pop
adc
mov
popf
loopne
lahf
pusha
fdivrs
lds
xor
pop
xchg
js
loop
push
std
inc
nop
cmpsb
cld
outsl
mov
sub
rorb
inc
xchg
lcall
lds
bound
sub
adc
dec
iret
xchg
sbb
pop
dec
adc
nop
add
sub
cwtl
lret
push
cmpsb
movsb
fwait
or
ret
pop
jnp
mov
fcompl
cmp
push
and
xor
sbb
shrb
dec
cli
xor
sti
shll
pop
inc
xor
xlat
inc
data16
jg
lcall
cmp
mov
jle
aaa
add
pop
sahf
int3
clc
mov
push
test
dec
fldt
js
in
jbe
sbb
std
xlat
xor
pop
das
jo
aad
in
jbe
lods
lret
adc
sub
rorl
aaa
test
int
ss
dec
jo
push
pop
push
pop
imul
inc
mov
dec
out
or
jecxz
leave
shrl
mov
sbb
lret
mov
add
test
lods
xor
and
jno
xlat
jg
imull
cwtl
ret
mov
decl
adc
add
pop
pushf
mov
jecxz
loop
stc
mov
cmp
into
mov
sbb
divb
jne
push
and
in
dec
fucom
adc
cmp
repnz
into
inc
ret
add
loop
je
aas
dec
insl
enter
int3
ficompl
lret
pusha
adcl
sbb
test
out
loop
popf
cmp
aam
add
enter
popf
fst
dec
adc
push
dec
dec
pop
or
ss
out
push
xlat
rcll
sub
js
in
or
bnd
pop
push
movb
push
ds
sahf
hlt
jno
shlb
push
cmpsl
and
daa
sbb
fs
lcall
fmul
jnp
cmp
or
std
xchg
jle
ja
jmp
jo
fldt
add
push
rclb
jge
stc
mov
rep
aaa
push
sbb
std
fldt
dec
loopne
xchg
sbb
loop
xchg
xor
fs
loope
insb
mov
add
ss
mov
mov
cli
out
inc
roll
inc
or
xchg
inc
and
sahf
lahf
mov
pusha
inc
xlat
stc
out
push
push
haddpd
pop
movsl
adc
jne
rcl
lods
shrb
mov
inc
mov
imul
adc
outsb
fdivl
jg
cli
inc
dec
es
jnp
and
dec
into
cli
or
addr16
ffree
and
outsl
push
arpl
dec
pop
jl
insl
scas
ret
mov
mov
mov
pusha
pop
lea
or
cld
in
inc
bound
into
add
clc
xor
in
pusha
stos
dec
push
flds
pop
xor
jno
xor
xlat
data16
out
sub
das
mov
dec
cmp
xchg
or
and
andb
or
sbb
mov
jp
push
push
out
xor
leave
enter
push
xlat
push
lret
lea
out
jae
dec
insl
in
imul
dec
xchg
cmpsb
nop
jno
xor
xor
xlat
add
cwtl
xchg
addb
icebp
pop
repnz
xchg
pop
fwait
mov
and
mov
xchg
jge
jecxz
sub
add
xchg
xchg
testb
sub
insb
sti
sub
dec
lret
mov
cli
or
sub
cmpsl
or
xchg
inc
sbb
in
mov
in
adc
cmp
cmc
push
push
repz
in
nop
xchg
cmpsl
loope
xchg
out
push
and
jae
and
mov
aaa
lock
xchg
inc
in
shrl
aad
in
mov
out
out
fdivr
adc
or
jge
mov
mov
aam
gs
arpl
shlb
sub
jne
mov
fs
inc
iret
repnz
test
pop
cld
mov
aad
mov
push
pushf
das
mov
lea
push
aaa
aas
mov
hlt
sbb
test
push
mov
sub
cltd
fstl
pushf
sub
addr16
leave
cwtl
fwait
mov
mov
xor
cmp
add
out
ret
loop
std
clc
fldt
mov
or
mov
pop
jne
xchg
fists
cmpsl
insb
sti
ds
pop
push
xor
scas
out
dec
andb
pop
aaa
rcr
adc
popa
dec
sub
les
xlat
xor
cli
adc
mov
fcmovnbe
jmp
popf
adc
inc
mov
xchg
dec
lock
orb
or
add
fnstsw
arpl
inc
push
mov
push
lahf
into
xchg
je
cmpsl
dec
or
ret
push
mov
mov
cltd
cmp
adc
mov
cld
and
mov
pop
inc
push
cmp
cwtl
in
outsb
stc
push
daa
fwait
jp
addl
out
aaa
pop
lahf
push
mov
out
in
or
popf
int3
imul
sub
and
mov
ret
push
inc
jmp
mov
inc
jbe
xlat
int3
mov
call
dec
push
and
ficompl
dec
cmpsl
push
mov
add
adc
mov
enter
aam
inc
stos
push
xchg
aas
push
cmc
sub
jnp
test
sar
movsl
ret
sbb
stos
out
in
xchg
jno
push
rolb
lret
and
movsb
xlat
add
jns
inc
push
jmp
inc
sahf
fnstsw
jp
mov
insb
cltd
mov
xchg
dec
adc
fbld
pop
insl
rcr
mov
inc
and
outsl
jne
lea
roll
popf
fwait
cmp
or
call
js
hlt
shlb
dec
rorb
lock
adc
or
and
push
and
call
jbe
stc
js
mov
add
gs
jecxz
loop
mov
dec
adc
cwtl
xchg
out
ljmp
jne
cmovne
pop
xchg
lret
popa
mov
pop
and
imul
cld
inc
hlt
xor
fisubrs
ss
or
out
jle
in
cld
jne
push
mov
push
mov
sub
rorl
xchg
jecxz
mov
cmp
pop
xor
mov
sub
fidivl
sub
lret
pop
loop
adc
and
mov
or
dec
mov
into
clc
ss
flds
cmpsl
scas
ljmp
ja
in
and
mov
push
loop
mov
or
arpl
and
leavew
mov
lret
fst
scas
mov
into
add
mov
mov
pop
xor
cld
clc
insl
sub
jl
pop
jnp
lcall
arpl
sub
fiadds
jp
jg
rcrl
push
xor
jno
cmp
rclb
nop
pusha
arpl
xlat
sbb
sub
sbb
std
cs
jne
bound
ret
fimuls
js
arpl
jecxz
out
pusha
enter
insb
or
in
repz
aaa
cli
and
mov
mov
ds
mov
adc
rorb
out
sbb
mov
or
cmpl
rcrb
push
mov
push
jl
jmp
aas
xchg
and
sub
push
or
mov
push
arpl
stos
js
into
and
add
iret
add
jns
sub
push
xlat
push
rol
aad
repnz
lret
bound
xchg
cmpxchg
cmp
jnp
addr16
fnclex
shlb
outsb
pop
mov
daa
movsb
dec
xlat
mov
jbe
pop
loopne
roll
add
cmpsl
lahf
int3
jmp
sub
out
sbb
add
mov
push
inc
gs
push
inc
xor
out
stos
mov
lock
cld
nop
pop
dec
cmpsl
add
mov
rcrb
sahf
dec
icebp
mov
data16
mov
mov
sub
adc
push
xchg
jbe
and
jns
out
scas
outsl
into
cwtl
mov
mov
ficomps
push
int
mov
jle
dec
shll
or
push
or
outsl
jg
fcmovbe
bswap
xor
imul
cmp
lret
fdivrl
ret
xchg
push
xor
cwtl
inc
sbb
inc
add
add
cwtl
cld
pop
mov
repz
inc
jge
sti
loopne
lret
cltd
sar
repnz
mov
imul
push
aad
lods
rcrb
bnd
loopne
push
push
lahf
cmpsb
pop
test
jmp
clc
nop
pop
jns
pusha
or
sub
jg
int3
pop
mov
daa
jmp
mov
jge
xchg
and
dec
push
cli
xchg
ja
mov
dec
xchg
pop
rcl
pop
jmp
mov
mov
push
sbb
adc
lahf
jl
dec
fs
pop
inc
fcmovnbe
xchg
aaa
in
inc
adc
fwait
and
jae
sbb
cmp
mov
fdivl
xchg
push
out
les
ret
adc
sub
xchg
add
pop
out
inc
push
or
je
lret
pusha
loope
movsb
in
test
cmp
fstpt
aaa
sbb
or
pop
out
pop
arpl
push
pop
and
leave
and
in
outsl
cmp
test
pop
mov
stc
sbb
pop
cmp
mov
add
fistpll
les
xor
pop
xchg
sub
jmp
and
js
sbb
mov
iret
loop
mov
in
push
bound
in
leave
xor
inc
or
shrb
xor
pop
sbb
scas
xor
and
xor
lret
push
add
aam
popa
jnp,pt
mov
xor
and
push
add
push
mov
push
mov
push
xchg
add
imul
test
adc
xchg
jmp
cmpsl
and
mov
sbb
orl
in
and
decb
xchg
lods
jns
mov
filds
stos
or
or
mov
stos
inc
outsl
push
lods
pop
cltd
and
test
rclb
cwtl
or
mov
push
pushf
ja
cmp
mov
test
cmp
leave
ficompl
inc
into
sub
or
std
out
bswap
dec
sbb
jo
divb
cld
jg
data16
push
je
cmc
in
xor
mov
andb
std
outsl
out
out
jg
decl
in
cmc
or
cli
add
jae
sbb
dec
jne
pushf
jbe
nop
xchg
icebp
call
cmpsb
andl
leave
sahf
lret
stos
cli
mov
jo
pop
data16
pop
mov
pop
in
insb
sub
xchg
cmp
pop
jg
push
js
mov
xchg
dec
into
mov
test
add
in
pop
xor
stos
pop
sbb
adc
jne
lret
cmc
es
xchg
xchg
xchg
aas
loop
sbb
into
push
jns
dec
dec
es
mulb
imul
mov
stc
pop
das
push
ljmp
cmp
push
jge
push
xchg
mul
mov
add
lods
addr16
adc
jne
jecxz
fwait
inc
movsl
xor
and
out
xchg
je
mov
out
bound
pop
lcall
and
xorb
cmp
xor
mov
add
or
and
lcall
mov
cmpsb
pop
std
pop
lea
fbstp
jb
cmp
fadds
es
jno
and
sub
add
stc
out
cmp
cli
mov
and
shl
je
push
xlat
pop
test
dec
es
push
rolb
nop
orb
push
in
dec
arpl
iret
bnd
test
xchg
js
mul
add
xor
mov
into
mov
jmp
jns
sub
and
jge
lods
xor
adc
add
out
dec
xor
inc
add
sbb
mov
popa
cmpsb
jge
mov
cmc
dec
out
mov
sarl
es
daa
mov
xlat
aam
jnp
repz
rclb
in
ss
dec
mov
stc
jno
lahf
or
pop
je
dec
gs
divb
mov
push
test
push
imul
pop
jbe
pop
repnz
xchg
adc
mov
lods
popa
fldenv
push
jo
xchg
inc
add
sbb
ret
sahf
inc
sti
cmp
aad
ret
and
jbe
scas
add
pusha
xlat
sti
xor
popf
cmc
aas
pop
fidivrl
jle
mov
push
and
jns
jno
cmp
push
dec
mov
and
push
fwait
and
loope
or
in
sub
ss
mov
fstl
nop
jne
lea
ja
adc
in
cmpsl
popf
adc
add
jge
mov
and
sbb
xchg
push
addb
inc
xor
dec
daa
enter
roll
push
xor
push
ds
xchg
into
test
push
inc
mov
and
dec
sub
push
adc
aaa
pop
std
into
loop
push
scas
outsl
or
xchg
out
addr16
push
inc
iret
ljmp
mov
ret
cmp
test
pushf
in
iret
mov
sub
outsb
test
into
xor
aad
hlt
pop
repz
ret
jge
sbb
mov
mov
out
add
and
pop
dec
lahf
push
shlb
ficoms
and
push
cmpsl
out
loop
scas
test
mov
jne
and
out
add
std
sti
cmp
inc
fwait
lock
dec
out
nop
pextrw
add
adc
in
sub
jae
mov
push
jno
jmp
and
sahf
sub
sub
mov
mov
lret
imul
cmpsb
lea
call
lret
mov
xor
sub
insb
xchg
pop
adc
xchg
mov
or
std
or
inc
cwtl
or
mov
xor
aam
adc
lds
arpl
jle
or
std
pop
mov
outsb
push
jno
loope
add
sub
int
mov
add
sub
pop
subl
insl
das
inc
or
out
jge
cs
fcom
sub
inc
inc
sub
add
fucom
loope
mov
stos
pop
repz
in
or
scas
pop
lods
mov
lea
xchg
push
mov
mov
add
int3
aam
je
xor
sbb
push
lahf
adc
push
mov
out
xor
cmp
faddl
push
fldcw
clc
ja
cmp
enter
cmc
leave
cs
dec
arpl
cwtl
mov
daa
cmp
nop
jno
pop
test
dec
and
popa
jg
cmp
xchg
jb
sti
mov
push
add
xchg
push
aas
or
or
or
icebp
fwait
adc
int3
sbb
and
stos
push
mov
mov
or
ja
scas
lock
sub
ds
sbb
or
cmp
mov
cwtl
aaa
jno
mov
xlat
or
andl
test
idivb
hlt
sub
negb
dec
jmp
mov
rcll
or
sarb
int3
pop
pop
test
leave
bound
ficoml
inc
jno
rolb
imul
int
and
addr16
aam
or
xchg
testl
pop
xor
cwtl
sti
and
push
dec
shrb
sbb
sub
inc
sbb
pop
rcll
add
push
enter
aam
rcrb
adc
sti
adcl
jp
rol
xchg
enter
or
movsl
fildl
mov
mov
xor
test
xchg
cmp
out
inc
sti
mov
push
jb
jge
jg
pop
rolb
jle
pop
ss
jne
lods
and
fdivrs
xchg
in
sbb
mov
rcrb
jbe
push
dec
pop
das
or
sub
scas
pop
ljmp
test
ficoml
pop
cwtl
mov
xchg
add
lahf
or
mov
sub
shrl
jnp
xor
repz
or
xchg
add
pop
iret
sbb
adc
dec
addr16
mov
push
pop
mull
mov
fstpl
lea
inc
xchg
test
and
cmovb
mov
cs
jno
push
inc
mov
xchg
lret
arpl
sti
gs
rol
mov
sub
dec
pop
dec
xchg
xor
scas
and
imul
ret
outsb
push
push
ljmp
sub
test
lret
cmp
mov
mov
cmp
xor
pop
mov
dec
jmp
mov
out
push
mov
push
into
icebp
cmp
dec
mov
sbb
aaa
or
in
pop
mov
jbe
outsl
xchg
movsl
movsb
adc
pop
nop
sarb
cmp
xchg
dec
cmp
push
jmp
inc
insl
add
dec
jbe
es
out
push
xchg
not
aam
enter
repz
sbb
int
fidivrl
mov
js
int
push
cmpsl
mov
sub
pop
leave
adc
and
lret
fisttps
iret
mov
xor
dec
xchg
movl
je
xchg
sbbb
dec
stos
push
mov
adc
sub
in
outsb
jne
pop
ss
leave
dec
daa
fidivrl
push
adc
xlat
insl
pop
in
pop
xchg
xor
enter
dec
loope
mov
xchg
sbb
js
sub
rcl
jo
popa
and
add
and
mov
out
dec
xchg
cmpsb
jmp
lock
mov
sub
and
xchg
frstor
mov
jbe
dec
sbb
je
xchg
fistl
mov
add
cmp
push
cmpsl
or
outsl
cmpl
cltd
lahf
add
mov
insl
and
mov
sub
movsb
mov
pop
adc
mov
lods
mov
jmp
arpl
mov
jbe
cmp
xor
repnz
dec
add
pop
mov
repz
push
jl
rsqrtps
rorb
lret
fsubs
lods
sub
mov
mov
inc
xchg
les
ds
insb
in
movsl
jmp
adc
or
adc
negb
and
push
dec
mov
mov
add
sbb
or
mov
jnp
es
add
into
ret
lret
movsl
mov
lods
cmpsl
into
inc
mov
loope
cmp
add
cld
pop
cmp
jl
out
xchg
into
xor
mov
insb
adc
and
int
in
call
stc
arpl
sbb
cmp
les
inc
hlt
es
lret
jne
icebp
mov
xlat
mov
or
xchg
enter
out
call
mov
or
repz
inc
in
in
mov
cmc
aas
fwait
iret
inc
movsl
loopne
mov
add
not
sbb
mov
xchg
stos
loop
popa
scas
add
icebp
and
out
data16
xchg
or
in
push
pop
mov
mov
mov
xchg
js
inc
push
mov
or
cmp
dec
sti
loope
pop
jno
xchg
aaa
int
sub
pop
es
adc
test
mov
out
aam
jae
lret
pop
daa
pop
inc
int
mov
stc
inc
and
cmpsb
les
testl
and
out
aas
push
mov
mov
cmc
mov
jae
fwait
vorps
imul
adc
inc
sbb
sub
insb
add
xchg
scas
mov
out
push
pop
scas
xor
shll
loope
out
mov
mov
push
and
cmp
filds
jp
pop
jl
arpl
fwait
popa
popf
int3
cltd
push
adc
mov
inc
mov
je
stc
shll
jmp
push
jno
jle
in
push
xor
push
es
or
ljmp
jnp
getsec
lret
xchg
lods
iret
into
dec
les
sbb
subb
jg
ja
fstpl
or
cli
fcoml
push
adc
sbb
notl
imul
xchg
inc
repnz
dec
popa
cs
adc
add
jae
cmp
into
js
sbb
jle
inc
sbb
add
xor
dec
out
data16
adc
aas
adc
pop
pop
xchg
sub
movsb
int
jmp
pop
mov
fs
mov
xchg
mov
mov
pop
inc
ss
lea
and
xor
xchg
pop
clc
cmp
in
test
popf
xchg
add
dec
mov
jb
js
int3
xchg
adc
jmp
xchg
adc
call
add
mov
loopne
ficoml
aaa
mov
ret
and
pop
jge
jo
jnp
or
in
insl
lret
ljmp
lods
int3
jo
fwait
enter
rorb
repz
add
inc
jno
mov
arpl
jne
cmpsb
js
mov
push
jp
sub
inc
sbbl
mov
outsb
bnd
xchg
aas
and
xor
out
nop
mov
push
or
lods
xor
sbb
jge
aam
pop
ljmp
into
pusha
push
movsl
pop
jl
test
inc
jle
loop
repnz
pop
lods
popf
shrb
adc
inc
pinsrw
cmp
test
xchg
inc
pop
aaa
push
inc
mov
cwtl
push
push
xor
pushf
mov
les
push
movsl
pop
xchg
mov
dec
pushf
loope
pop
mov
xchg
scas
xchg
hlt
in
sbb
lret
in
inc
sbb
ljmp
pop
jge
unpcklps
aad
xchg
xor
fnstcw
mov
xchg
mov
stos
rcrl
test
xchg
lods
push
movsb
inc
test
sub
or
fistpl
push
scas
xchg
dec
out
push
mov
sub
or
enter
fsubrl
insb
mov
add
and
mov
dec
es
dec
pushw
adc
ret
shrb
repz
mov
jno
pop
mov
jbe
mov
rorb
push
pop
sub
ja
jbe
add
and
inc
push
arpl
ss
jp
aas
cmc
inc
inc
mov
push
dec
loopne
mov
or
jae
jbe
cmp
adc
ds
mov
enter
or
inc
sub
jmp
lds
into
jmp
sbb
cmpsl
imul
rolb
loop
mov
xchg
mov
sub
ret
sub
sub
fsubrl
push
cmp
xchg
pushf
lret
cmpl
jmp
cmp
pop
add
cmp
push
aam
iret
outsb
mov
movsl
and
lcall
call
sahf
jmp
orb
lret
cld
fldl
jecxz
leave
out
popa
call
push
imul
cltd
in
aas
fstps
push
push
rcl
fisubs
mov
pop
ja
mov
scas
dec
pop
fmull
mov
cmp
imul
pop
sub
add
shlb
mov
lcall
ds
mov
mov
pusha
dec
sbb
jb
pop
mov
int
cmc
imul
dec
das
pusha
mov
scas
flds
rclb
out
es
mov
je
dec
push
out
mov
icebp
inc
dec
aad
ret
or
das
roll
shrb
cmpsb
sbb
xchg
aam
int
int3
adc
sahf
lods
mov
mov
sbb
dec
stc
jge
mov
cmp
jo
cmpsb
fisttpll
int3
jle
cmp
push
das
push
ljmp
cmp
cwtl
test
sub
dec
mov
adc
mov
push
push
outsb
aam
xchg
cmp
pop
gs
mov
adc
push
insl
sub
mov
inc
enter
addr16
into
inc
sub
cs
xor
xor
or
sub
xor
mov
int
cmp
adcb
mov
ret
xor
movb
inc
pushf
cmpsb
dec
dec
int
mov
fidivrs
cli
pop
fnstenv
cmpsl
loop
jnp
stos
push
inc
dec
fcomps
sti
xchg
or
mov
clc
mov
sbb
adc
cmpsl
cmpsl
out
cmp
dec
mov
dec
aaa
cmpsb
xchg
sub
sbb
ss
add
xlat
int3
inc
movsb
sahf
lds
out
int
clc
lods
cmp
into
pop
stc
mov
rclb
push
sbb
xor
in
mov
add
lret
in
push
cs
xlat
fsubrs
adcb
adc
lods
push
adc
sub
lret
imul
push
fidivrl
clc
out
mov
data16
loope
sub
popa
cmp
jbe
sbb
test
movsl
mov
mov
data16
sub
in
mov
into
adc
inc
xchg
mov
xchg
inc
xor
xchg
or
cltd
scas
das
dec
inc
lock
add
mov
pop
int3
mov
sbbl
pop
cmp
and
sarl
stos
dec
sbb
mov
movsb
adc
sub
addb
shlb
pop
aas
xlat
sub
in
cmpsb
daa
out
or
stc
jne
push
into
into
fiadds
jae
movsb
loop
pop
adc
adc
jp
fs
imul
cmp
lret
jl
fimuls
nop
adc
roll
jb
loop
dec
push
xchg
test
mov
test
in
xchg
rol
mov
xchg
daa
push
ss
add
dec
lods
jecxz
push
js
nop
push
push
aad
add
xchg
in
push
out
lea
pop
xchg
in
test
push
sub
cmp
icebp
push
in
add
iret
mov
xor
mov
out
imul
xchg
mov
pop
add
jp
mov
in
imull
mov
outsb
inc
outsl
daa
jno
ffree
and
fdivs
mov
es
xchg
in
inc
fadds
inc
out
sub
mov
mov
in
lods
leave
ficomps
lahf
data16
icebp
ds
push
xchg
out
jp
das
pop
or
in
pusha
repz
outsl
adc
jle
test
cmp
mov
sub
xor
xchg
mov
ret
dec
xchg
enter
arpl
push
sbbl
fmull
sbb
pop
aam
push
fsts
dec
xor
mov
dec
cs
xor
add
dec
scas
jo
and
mov
jecxz
cmp
int
sahf
fs
aas
cwtl
adc
int
jle
addr16
mov
mov
scas
rcl
push
adc
ret
add
xchg
cmp
mov
adc
sbb
inc
icebp
aaa
push
xchg
int3
xchg
adc
xorb
jmp
std
ret
xor
pop
dec
ds
test
or
jge
lcall
pushf
or
flds
dec
loope
pop
mov
and
mov
test
out
pop
hlt
push
mov
push
punpckhwd
dec
fucomip
dec
xchg
xlat
imul
or
mov
jnp
dec
mov
jmp
out
sub
iret
lcall
mov
scas
test
ret
fyl2xp1
cwtl
inc
adc
adc
inc
jno
inc
mov
sbb
push
push
outsb
lret
mov
sub
mov
enter
cmp
xor
mov
lds
push
jno
stos
jne
call
dec
fwait
mov
mul
and
repnz
sub
daa
mov
push
mov
into
pop
mov
es
jno
sub
shll
jle
arpl
push
xchg
inc
sbb
in
jbe
push
add
shll
xchg
dec
fwait
movsb
or
xchg
into
imul
hlt
jge
testl
fcmovne
sbb
cli
push
in
jno
xchg
and
std
jmp
aam
jnp
rol
call
mov
cmp
push
fstl
flds
adc
dec
xchg
test
or
std
rcll
jmp
nop
sbb
mov
sub
fwait
inc
xchg
dec
lret
push
adc
fisubrl
repz
push
xchg
push
out
pop
sbb
lods
lahf
mov
or
mov
popf
jb
sub
xorl
xor
iret
lods
mov
pop
mov
sbb
lret
cmp
xchg
mov
cwtl
js
push
test
jg
ret
es
mov
mov
xor
in
inc
jae
rcll
add
loop
xor
in
or
add
pop
mov
movsb
dec
and
jmp
mov
data16
mov
jmp
into
sbb
adc
xor
jbe
and
ret
cmp
fadds
jle
mov
mov
sahf
dec
push
add
out
in
arpl
mov
je
faddp
push
or
xchg
int3
cmp
push
repz
cmc
sbb
sbb
adc
mov
inc
xchg
mov
hlt
icebp
pop
into
fstpl
push
push
rcll
jmp
fmul
mov
xor
jae
xchg
bound
popa
push
dec
xchg
push
pop
or
xor
mov
fcmovnbe
inc
and
push
iret
mov
adcl
cs
sub
pop
lret
gs
subl
mov
dec
jnp
mov
je
jmp
add
dec
jne
mov
fmulp
cmp
xchg
jge
addr16
lock
ret
xor
fwait
call
mov
push
xchg
stos
fcmovbe
test
push
std
jne
jbe
fdivs
or
jo
sub
sub
jbe
imul
dec
das
int3
dec
add
outsb
xor
inc
sub
fstpt
sbb
dec
cmp
pop
mov
jbe
lea
test
into
cld
rcl
cmpsl
insb
aam
push
jg
repnz
mov
mov
jo
jno
push
pop
or
xor
out
mov
pushf
xchg
test
in
sbb
inc
or
out
xchg
or
or
inc
adc
xchg
mov
cmpsb
lcall
adc
mov
fmuls
adc
roll
pop
sub
jg
test
sbb
jbe
stc
sub
out
inc
cld
sti
pop
aam
xor
or
into
cmovl
mov
jno
ja
sub
pop
pop
mov
das
ljmp
jb
sbb
or
outsb
or
mov
lret
mov
jns
jae
mov
shrl
push
dec
add
inc
and
loopne
mov
xchg
ret
cwtl
hlt
idiv
pop
push
ffree
push
push
fcmove
shl
fsubs
insl
cwtl
jl
divb
add
lret
mov
and
gs
adc
jb
lcall
cld
into
push
xchg
insb
mov
jb
mov
xor
or
call
adc
jl
pop
and
pop
fcomps
push
xchg
push
shl
daa
stc
dec
push
add
out
rorb
push
mov
mov
lods
mov
leave
pop
ss
sub
imul
jbe
nop
lret
bound
lahf
xor
dec
cmp
shll
jle
out
insl
repz
mov
mov
dec
popf
mov
sub
lahf
mov
into
sub
rolb
sbb
into
pop
mov
popl
jl
inc
inc
aas
hlt
pop
enter
cmpsl
iret
int
test
adc
xlat
jno
es
push
mov
les
push
jge
ss
fld
outsl
xor
cmp
cmp
push
nop
and
sub
mov
clc
aaa
adc
add
cltd
push
pushf
sahf
dec
inc
not
sub
xor
out
icebp
and
jns
fscale
or
inc
xchg
mov
ret
int
mov
push
mov
arpl
cmpb
in
dec
fildl
jmp
sbb
aad
and
movsb
iret
dec
jbe
xchg
mov
cld
add
adc
add
jae
jle
shrb
frstor
in
js
and
into
fidivrs
das
push
jae
ret
lods
into
adc
xchg
scas
push
roll
popf
or
test
push
add
jge
ror
xor
fdivrs
dec
cwtl
and
les
imul
icebp
test
lods
popa
cmp
insl
sub
out
outsb
add
mov
mov
pop
shlb
mov
sub
push
mov
rcrl
ror
or
xchg
xchg
add
lret
test
int3
mov
lret
xor
mov
aad
pop
lea
sti
in
fcmovbe
mov
pop
xchg
adcl
test
les
mov
inc
pushf
dec
mov
jp
mov
inc
aaa
fwait
lods
sub
inc
cld
fmul
jmp
rolb
cmp
or
fstps
jns
sahf
dec
mov
jne
fldt
xchg
int3
push
in
data16
xchg
addr16
loopne
dec
pop
inc
stos
mov
stos
or
orb
mov
cmp
mov
cli
sarb
or
pushf
or
jbe
xchg
lcall
out
pop
sahf
int3
xchg
mov
cmp
push
js
jp
in
insl
call
daa
inc
addr16
xor
test
fcom
inc
sub
add
lret
add
mov
jne
push
in
jp
ret
test
lret
stos
or
xor
cmc
shrl
cmp
xchg
mov
das
jns
out
cwtl
mov
rcrb
aas
pop
stos
clc
add
sbb
inc
jo
jge
mov
dec
insl
popf
lret
lods
pop
push
outsb
xchg
cmp
into
or
cwtl
ds
jl
sbb
flds
cmpsb
xchg
add
pop
bound
or
add
outsl
les
iret
insb
sbb
out
addb
push
or
pop
or
aas
dec
js
or
sahf
inc
xchg
push
lock
gs
leave
add
add
ja
cmp
iret
data16
scas
lods
sub
mov
out
cmp
mov
std
pop
ds
imul
cs
into
or
imul
push
push
sub
jo
cld
jno
rcrl
ret
mov
test
orl
push
push
add
stos
jge
pop
aas
adc
movsl
fcmovnbe
insb
fcom
test
xor
pop
push
lds
mov
push
jo
repz
mov
xchg
pop
ljmp
mov
pop
push
pushf
mov
ljmp
xor
push
fsub
xchg
fs
cmp
add
cmpb
adc
lahf
arpl
cmc
call
out
iret
ja
divb
add
ret
mov
andl
test
pop
jmp
push
in
dec
cmpsl
arpl
iret
push
xorl
outsl
stc
es
aas
mov
into
xchg
popa
inc
add
test
lret
jns
addr16
xor
dec
jnp
outsb
cmpsl
cmp
cmpsl
fxch
or
lods
in
and
xchg
xchg
xchg
inc
sbb
mov
push
gs
out
add
int
mov
je
sbb
dec
mov
xchg
js
sub
inc
fcmovu
and
lret
pop
aas
dec
sub
std
fidivl
mov
fnstsw
mov
outsl
movsl
movsb
xor
mov
cltd
lret
mov
xchg
gs
or
push
scas
pop
int
and
fildl
and
decl
imul
subb
adc
movsl
lret
out
lahf
dec
lret
pop
fs
jp
xor
push
sbb
mov
cmc
mov
mov
lcall
test
xlat
aam
dec
adc
test
sub
out
loopne
cli
sbb
or
pop
add
out
sbb
xchg
and
int
jne
and
lret
fmulp
idiv
pop
jo
sub
mov
xchg
out
in
cmp
aaa
xchg
jle
xchg
orb
pop
out
stc
sbb
jae
xor
enter
jp
lods
dec
pop
es
xchg
test
mov
pop
cmp
inc
sub
xchg
xor
imul
popf
add
mov
jne
in
shr
adcl
test
dec
dec
loope
cwtl
aaa
jbe
jo
xchg
ja
inc
mov
cmp
pop
popa
xchg
outsl
pop
cmp
add
xor
mov
leave
jl
pushf
sub
pop
pop
sarb
mov
in
fsubrs
xlat
in
pop
add
roll
pop
pushf
stos
sbb
dec
fnsave
push
int
cmp
sbb
lcall
jge
roll
loop
dec
xor
repnz
lea
sub
pop
push
inc
cltd
in
add
jo
movsl
pop
rcrb
xor
dec
dec
jae
adc
jg
ds
aam
ss
fwait
pop
lea
cmp
pop
repnz
dec
adc
xchg
pop
dec
stos
out
lods
fdivr
aas
mov
and
addr16
lods
popa
and
or
jmp
xchg
mov
push
dec
sbb
jl
cmc
clc
push
add
lahf
jmp
or
xchg
adc
or
push
call
vmovaps
out
aaa
cwtl
and
rcrl
icebp
cmpsb
sbb
cmp
stc
xchg
xchg
into
ffreep
lret
push
dec
notl
rol
adc
jmp
repz
dec
mov
jl
inc
lret
imul
sub
sub
rcrl
cmp
push
or
xchg
xlat
mov
xor
inc
adc
or
cmc
hlt
xchg
push
nop
cmp
fwait
dec
fbld
loope
sbb
xlat
adc
cmp
adc
lods
js
adc
fwait
xchg
and
fbstp
adc
orl
dec
mov
sarb
lahf
imul
out
add
inc
aaa
out
add
cmp
mov
mov
jl
mov
xor
xchg
into
jge
scas
jb
push
pop
cltd
les
push
addr16
enter
sbb
or
adc
stos
mov
fstpt
pop
les
push
sub
push
pop
dec
sbb
call
shlb
mov
xchg
jmp
push
jecxz
jno
leave
xchg
sbb
fldcw
push
cwtl
ror
adc
xor
cmp
push
into
mov
aaa
inc
fwait
push
and
mov
xor
int
adc
leave
mov
mov
outsl
rcrl
or
ret
cli
enter
pop
sbb
ljmp
push
pop
into
cwtl
cld
push
into
dec
mov
xchg
enter
push
mov
out
cmp
mov
mov
push
xchg
aas
cltd
sub
out
xorb
jp
aaa
hlt
push
add
mov
cmp
xchg
inc
mov
test
or
adc
push
pop
jbe
xor
pop
clc
int
and
fs
lds
jb
jae
cmp
lcall
fwait
push
lahf
mov
out
mov
fcomps
fisubrl
clc
in
push
xchg
jmp
mov
mov
pop
ss
mov
imul
aas
hlt
lcall
pusha
les
jge
xor
lds
push
or
in
sarb
cmpsl
push
rcl
aaa
arpl
and
aam
cmp
cwtl
imul
jg
lods
hlt
inc
mov
cmp
ret
in
mov
cmpb
add
enter
mov
test
and
sbb
enter
adc
hlt
ss
mov
mov
adc
movsl
lea
sbb
or
jno
lods
bound
out
add
pushfw
mov
push
mov
push
aam
rolb
sub
test
cmp
scas
jge
repnz
adc
test
into
sub
mov
adc
mov
xchg
rcrl
xchg
add
and
jmp
out
incl
or
jns
and
inc
adc
js
push
mov
imul
sbbl
out
jno
pusha
jae
out
adc
jns
push
mov
jp
lcall
xchg
push
outsb
mov
addb
test
test
pop
cs
ds
adc
lret
jmp
adc
loop
ljmp
cmp
es
fdiv
aad
stos
inc
adc
pop
cmp
je
cmp
jbe
es
outsl
lret
jbe
lods
inc
cmc
push
lret
xchg
into
push
jmp
mov
test
or
sti
xchg
stos
and
lods
sbbl
enter
pop
mov
mov
jmp
popf
cmpsb
and
pop
fldenv
in
sbb
dec
mov
int3
scas
xor
mov
shlb
into
mov
add
push
mov
ds
out
mov
push
fildll
adc
scas
inc
mov
inc
sbb
jns
icebp
das
roll
les
jne
fidivrl
into
cmp
mov
in
sbb
cmp
mov
fbld
mov
inc
or
shrb
push
adc
fwait
into
xor
pop
mov
pushf
sub
jae
mov
jp
hlt
inc
orl
xor
lds
nop
imul
not
mov
in
out
fcmovbe
push
lret
hlt
pushf
montmul
cmpsb
push
loopne
addl
xlat
scas
add
jne
inc
mov
sbb
ja
orl
lret
insl
xchg
loope
mov
pop
movsl
lods
mov
mov
add
dec
adc
push
cmc
mov
rcrl
add
sub
lret
addl
dec
xchg
cmp
ror
in
mov
js
jmp
xor
stos
sbb
jbe
cwtl
mov
lret
pop
adc
push
adc
sub
test
mov
adc
cmp
push
aam
iret
test
push
fidivl
sbb
push
cmp
jle
mov
sub
aas
push
sbb
push
sbb
mov
xor
push
imul
in
mov
mov
add
push
ficoml
dec
icebp
sarl
movb
cltd
cmp
sub
pop
movsl
lret
popf
xchg
add
push
adc
ja
popf
dec
dec
xchg
imul
cmp
insb
pop
xor
mov
inc
pop
jle
repnz
lahf
sub
ja
jns
je
jb
mov
and
xor
lret
mov
adc
rcrb
shlb
mov
pop
xchg
int
fsts
sbb
push
imul
rol
lret
or
mov
push
addr16
imull
movsb
mov
lret
cli
pop
mov
mov
sbb
adc
shrl
push
out
dec
sahf
push
outsb
xchg
cmp
cmpl
loopne
jmp
push
or
and
imul
mov
repnz
mov
dec
dec
arpl
and
iret
mov
add
jg
cmp
cwtl
push
into
repz
push
into
sub
push
lea
aas
rclb
xor
pop
mov
mov
and
movsb
jge
in
shr
jbe
add
out
aam
xor
or
repnz
std
out
sub
fistps
pop
or
sbbb
or
push
inc
ds
inc
pop
nop
or
pop
and
mov
aad
pop
aas
aaa
inc
das
or
insl
out
mov
pop
out
out
lods
jmp
inc
xchg
nop
loop
shrl
fadds
insb
out
xchg
push
lahf
push
fwait
hlt
mov
out
mov
xor
xchg
fs
daa
lahf
xor
mov
in
cwtl
je
dec
enter
lret
xchg
jle
push
cmpsl
lahf
test
ficompl
icebp
enter
call
mov
adc
push
sbb
jne
std
ljmp
jp
aaa
shlb
lret
pop
xor
xor
movsb
test
mov
add
icebp
aaa
rcrl
jmp
sub
xlat
mov
out
out
pop
mov
pop
std
stos
push
fistpll
movb
in
lret
dec
xchg
xchg
inc
sub
or
or
test
arpl
mov
add
in
jle
call
sub
rcrl
cmpsb
sub
inc
ret
pusha
loop
dec
adc
mov
shlb
inc
cltd
push
or
lret
ss
insl
jg
push
iret
xchg
xor
cmp
push
ror
dec
aam
xchg
sbb
mov
lea
mov
int3
fsubrs
test
into
icebp
cmpsb
xchg
std
insl
lret
popf
imul
push
and
and
aad
scas
or
jle
mov
stc
sbb
or
lret
adc
xor
sahf
add
rcll
sub
lds
pushf
fs
cld
and
loop
xchg
js
dec
mov
aaa
inc
xor
xchg
and
clc
mov
adc
int
cmp
aaa
daa
mov
sbb
push
sti
or
inc
inc
xchg
clc
je
pop
sbb
pop
xchg
jae
out
adc
sahf
pop
fsub
cmp
jne
sbb
mov
addr16
shlb
and
test
mov
xchg
mov
cmp
in
mov
dec
out
sub
jmp
push
dec
jl
out
pop
sub
mov
call
add
ret
stc
or
dec
loop
data16
mov
aad
aaa
add
bnd
ja
jo
imul
adcb
sub
fnclex
dec
sub
inc
rclb
or
dec
bound
ljmp
mov
xor
mov
pop
ficoms
out
jmp
cmp
xor
sti
dec
push
cmpsb
inc
push
adc
mov
push
and
sbb
xlat
jmp
pusha
jp
sarb
mov
push
cmp
sbbl
push
ja
loope
adc
xlat
into
jnp
xor
mov
inc
lock
ljmp
jle
jno
mov
ret
cltd
dec
icebp
lea
sbb
sub
and
rclb
stos
fcoml
or
pop
outsb
push
icebp
bound
cld
out
cmp
into
int
sub
out
sub
push
xchg
ds
shrb
sub
mov
nop
sbb
xchg
stc
inc
out
push
test
xchg
cmp
stos
aam
pop
or
jle
sub
decl
push
fmull
dec
xor
test
int3
pop
or
lret
mov
adc
sahf
dec
mov
xchg
addr16
sbb
fstpt
adc
mov
les
leave
jnp
jbe
sub
js
inc
subb
clc
add
inc
mov
cmp
cmp
out
mov
aaa
lret
jle
pop
or
mov
mov
out
dec
sbb
add
jae
or
imul
fs
xor
jge
stos
cwtl
std
add
notl
push
add
ret
pushf
inc
sub
jle
sub
xchg
out
dec
test
fldcw
sbb
mov
sub
jecxz
adc
xor
loope
rorb
rorl
out
dec
iret
mov
push
push
fistpl
and
push
xor
sti
xchg
mov
fstl
and
or
pop
add
rorl
dec
stos
cmc
lods
out
enter
int3
aaa
mov
push
out
adc
mov
loope
xlat
sbb
dec
not
adc
adc
add
outsl
push
ss
shl
or
fwait
js
mov
mov
aam
jne
jno
hlt
add
clc
inc
cmp
movsb
jnp
pop
lcall
cld
mov
stos
mov
mov
xchg
test
lret
cmpsb
sbb
aas
inc
cmpsl
or
icebp
int3
hlt
insb
stos
outsl
pop
adc
pop
and
dec
rcrl
rol
xchg
or
xchg
sbb
lret
out
jbe
mov
push
fs
and
lret
aaa
daa
jge
sub
ret
add
lahf
js
les
fs
add
fdivs
pop
out
aad
lds
aas
dec
xor
sub
and
cli
jne
xor
push
into
dec
mov
mov
and
outsl
xchg
ret
fnsave
in
lret
aad
mov
scas
push
xchg
shlb
repz
inc
icebp
aas
out
inc
fstpl
shrb
loope
cwtl
jno
mov
sub
add
out
dec
dec
cmp
xchg
in
movsl
mov
dec
ret
sahf
imull
cmpsl
mov
sub
addl
imul
jle
jne
push
sti
xor
adc
push
loope
lods
enter
shll
mov
adc
into
jmp
test
xchg
xchg
ss
out
enter
and
dec
jp
jmp
rcl
or
or
stc
fwait
mov
cmp
iret
aad
lods
jbe
movsb
inc
stos
aam
mov
xchg
cmp
add
addl
jg
mov
mov
cmp
movsl
sub
jmp
lcall
lcall
pop
and
ljmp
in
mov
cmp
and
mov
xchg
and
inc
xchg
dec
enter
add
int
movsb
in
adc
in
outsl
add
sub
test
mov
pop
jne
icebp
mov
inc
add
add
int
pop
push
inc
dec
in
das
xchg
cmp
fistpl
xor
mov
push
pop
mov
jbe
sti
inc
pusha
sub
out
loopne
xchg
xor
cmp
mov
repz
rcrb
dec
stos
aaa
fidivl
cs
mov
test
adc
cmp
push
dec
repnz
dec
data16
xchg
jl
adc
out
rorl
insl
mov
dec
pop
ror
cli
mov
fwait
cltd
push
in
or
cmpsb
imul
outsb
das
pop
jge
imul
call
pop
clc
xchg
pop
scas
cwtl
je
cltd
arpl
inc
out
lcall
sbb
popf
sbb
ret
ds
dec
dec
dec
push
xchg
sub
push
into
das
mov
pop
inc
lcall
aas
dec
dec
enter
cmp
adc
sub
sub
in
cwtl
mov
xlat
hlt
stos
add
sbb
jp
cmpsl
out
jl
dec
pusha
push
fnstenv
jge
mov
es
cmp
xor
repz
add
inc
push
xchg
inc
std
icebp
das
mov
into
push
cmpsb
mov
shlb
dec
lods
jmp
mov
repz
scas
adc
pop
into
setnp
jecxz
add
iret
aas
je
dec
dec
mov
jle
arpl
pop
jbe
fst
stos
test
cld
and
cmp
adc
ret
sahf
lret
inc
mov
push
insl
clc
mov
das
xor
push
jecxz
and
in
xchg
aas
rorb
mov
movsb
ret
lock
cmp
icebp
sub
xchg
iret
mov
adc
xchg
testb
push
adc
sahf
loopne
xchg
sti
dec
loop
cmp
shll
mov
cltd
pop
lcall
lea
lds
dec
dec
xchg
mov
iret
lea
push
adc
sbb
icebp
movsl
popa
jecxz
dec
mov
sub
or
mov
and
movsl
cli
xor
xchg
lret
mov
push
rolb
adc
addl
test
jbe
lods
mov
movsl
fisubrs
adc
negl
xchg
dec
mov
add
jecxz
shll
fadd
dec
ss
lods
scas
dec
fisubrs
pop
dec
jae
fnstsw
inc
or
pop
push
and
rcrl
push
cs
sar
adc
and
or
or
nop
out
fisttpl
or
xchg
or
stos
idivb
ret
xchg
mov
mov
dec
pop
jnp
push
dec
mov
adc
xchg
pop
xor
popf
adc
movsb
call
fadds
and
jb
test
mov
cmp
xor
add
mov
idivb
aas
rcll
jbe
push
add
aaa
filds
dec
mov
sub
in
pop
sub
mov
loop
dec
jl
push
dec
inc
sbbl
int
jmp
adc
mov
es
cld
cmp
fldl
and
sub
rolb
add
mov
es
jmp
push
inc
adc
mov
mov
iret
andb
scas
xor
jnp
mov
ja
loopne
xchg
jmp
pop
popf
adc
jecxz
and
fimuls
cs
arpl
pop
jbe
jne
and
mov
gs
sbb
lret
leave
fidivs
and
push
xchg
pop
cltd
xchg
jno
push
mov
or
lret
mov
cmp
jle
and
inc
mov
jge
pop
inc
cmp
mov
cmp
in
fs
repz
adc
cmpl
add
cmc
fstl
stos
out
jbe
fsubrl
mov
pop
aas
sbb
lods
xchg
dec
repz
and
pop
push
int
mov
mov
xchg
sbb
jne
ret
xor
xchg
xchg
jge
mov
sbb
imul
stc
add
mov
movb
jne
mov
loope
lret
dec
out
rcl
add
add
aam
lret
and
pushf
sbb
ds
faddp
dec
or
xchg
xchg
bound
fildll
mov
in
mov
pusha
push
out
out
jl
push
add
mov
pop
mov
scas
mov
lret
mov
sbb
pop
lcall
push
ljmp
in
imul
dec
lret
pop
cmp
xor
fsub
or
xor
mov
inc
or
movsl
xor
insl
xchg
ror
xchg
adc
adc
xor
imul
cwtl
loop
sahf
pop
outsl
and
sbb
cld
push
fildll
incb
out
and
pusha
out
lds
out
ret
push
add
push
aam
cs
mov
pushf
addr16
pusha
scas
sbb
dec
aaa
in
cmp
jmp
test
daa
or
mov
and
pop
push
mov
jbe
push
cmp
mov
ret
addr16
mov
push
test
cli
leave
add
fcmovbe
xchg
stos
or
pop
dec
sub
add
sub
add
and
rclb
mov
iret
and
mov
cmp
cmp
xor
loope
or
negl
cltd
fwait
and
rep
or
sub
push
lods
es
sbb
pop
dec
int
cmc
pushf
and
inc
and
mov
pop
test
mov
jno
sbb
sbb
add
pushf
sbb
rclb
sbb
pop
pop
or
popf
adcl
insb
lret
push
dec
pop
cmp
pop
inc
and
jg
lret
adc
lret
mov
mov
sahf
and
lahf
pop
inc
popa
cmpsb
or
scas
test
xor
pop
push
outsl
mov
out
ja
cmc
imul
and
js
mov
sti
aad
cmp
mov
cltd
addr16
pop
pop
pop
bswap
dec
mov
sbb
and
push
loopne
adc
cmc
mov
mov
inc
cmp
push
in
lods
jmp
lods
rcrb
fiaddl
sbb
shll
mov
aas
lret
xchg
mov
cmp
fs
bound
in
jecxz
jle
in
adc
push
mov
xchg
mov
lcall
sbb
jl
mov
push
mov
lret
jg
mov
dec
shll
sub
shr
jl
jle
inc
scas
fld
jne
shr
dec
movl
sbb
jp
jo
in
movsb
mov
mov
inc
or
jecxz
fwait
adc
fidivs
pop
js
mov
std
loope
repnz
jge
jno
in
cmc
lds
in
mov
rcl
lea
and
jbe
xchg
imul
sbb
rcl
pushf
mov
stc
mov
cmpsb
and
inc
scas
idiv
xlat
push
sub
xchg
sub
pop
rclb
mov
mov
pop
xchg
into
mov
enter
ds
jae
xlat
jmp
sti
inc
int3
stos
sbb
mov
pop
lahf
testb
dec
test
iret
fbld
push
or
int
lds
into
ret
test
aad
jmp
xchg
dec
xchg
xchg
hlt
rolb
mov
cltd
xchg
pop
and
test
sub
lods
or
xor
mov
push
mov
dec
fidivl
popa
jge
xor
cwtl
push
inc
adc
xor
hlt
pop
fptan
push
adc
mov
jo
mov
xchg
xchg
int3
into
jno
push
add
fnstenv
ja
cwtl
fs
pop
add
xchg
mov
dec
sub
mov
insl
cmp
ljmp
lds
and
int3
xchg
jo
enter
jno
stos
cs
mov
cmp
inc
je
fidivs
and
out
mov
movsl
aas
xchg
call
pop
and
js
lods
add
cmp
or
adc
jge
fdivl
jg
aam
pop
mov
mov
nop
test
in
pushf
aam
daa
jbe
mov
aaa
adc
cld
mov
imul
cmp
lock
or
lret
pop
fwait
inc
pop
add
jbe
adc
lahf
mov
out
add
cwtl
push
push
cmp
fadd
rcrl
and
or
inc
out
xorb
movsb
cli
mov
pop
xchg
addb
mov
daa
mov
addl
jns
aaa
lods
scas
cmpsl
in
lret
cmpb
jl
pop
sbb
cld
arpl
cmp
movsl
push
or
popa
jmp
xchg
out
push
in
aad
xchg
or
pop
lea
stc
ret
mov
adc
dec
outsl
into
xchg
shll
pop
xor
jbe
in
cli
jge
add
pushl
int
popf
lea
jecxz
xor
aad
repnz
sub
call
aam
lods
push
ljmp
inc
xchg
fcom
int3
pop
ret
xor
jmp
fidivrl
push
cltd
pusha
mov
sub
hlt
jne
insl
in
xchg
jns
fs
pop
cmp
cwtl
or
or
add
addb
in
add
insb
xchg
ret
fidivs
leave
inc
sbb
rol
imull
push
aam
xchg
fwait
or
movsb
cwtl
mov
lret
movsl
jg
dec
popa
inc
ljmp
mov
mov
dec
mov
popf
push
xchg
jmp
mov
mov
jb
mov
xor
mov
lret
mov
popa
push
movsl
add
push
cmp
xor
cli
fcmovnbe
daa
test
push
jbe
cmp
das
out
mov
adc
sbb
inc
inc
push
add
sub
inc
outsl
shll
cmp
test
add
sub
add
or
mov
or
addr16
ds
enter
inc
lret
add
aaa
test
cmpb
in
jne
pop
movsl
ret
inc
dec
lret
or
idivl
mov
frstpm(287
inc
and
sbb
arpl
inc
outsl
mov
push
dec
lds
or
imul
pop
push
pop
in
pop
iret
sbb
out
ljmp
cli
scas
xchg
aam
int
enter
lock
insl
mov
jg
dec
and
sbb
ror
and
xchg
mov
jns
adc
dec
in
sbb
adc
inc
lahf
imul
inc
mov
dec
and
xor
data16
enter
cmp
sub
xor
and
push
std
lret
inc
push
ljmp
cmpsb
sbb
hlt
gs
lock
mov
ret
xchg
jmp
call
ret
adc
push
lahf
scas
popf
mov
xchg
movb
xchg
fidivl
stc
pushf
jl
testb
loop
stos
mov
ja
mov
icebp
push
notb
push
data16
mov
pop
cs
mov
xlat
test
imul
ds
es
fdivrs
jae
sarl
dec
jbe
xlat
sbb
inc
outsl
mov
mov
adc
test
out
cmp
nop
xchg
ficompl
cmc
pop
lods
push
sbb
or
inc
and
add
repnz
push
out
jb
outsl
jae
fcmovnu
fisubs
out
je
mov
sahf
sbb
xor
pop
fiadds
lret
or
jno
mov
and
jp
subb
mov
mov
jecxz
dec
xor
cli
cmpsl
adcb
mov
cmpsl
adc
out
fcmovne
add
cs
and
or
mov
leave
lcall
movsl
cltd
pushf
into
lret
shlb
fsub
mov
hlt
push
lret
pop
icebp
xor
xor
out
cmc
or
mov
cmp
nop
icebp
shll
loop
iret
sub
mov
cwtl
in
pop
std
aas
ret
in
sub
pop
call
testb
cli
addr16
sbb
lea
loopne
out
cmpb
dec
mov
shlb
mov
je
enter
dec
loope
lea
or
js
xchg
sub
ret
mov
imul
mov
mov
dec
faddl
xchg
and
jl
push
mov
jbe
gs
fisubrl
pop
xchg
xchg
cmp
add
cmp
jmp
stc
std
push
pop
sbb
ja
adc
les
sub
rcrb
in
inc
cmp
mov
popa
xor
pusha
xor
cmp
push
js
dec
mov
cmpsb
fcoms
imul
cmpb
xchg
fsubrs
es
cmc
lea
xchg
aam
cmp
pop
xchg
mov
xchg
jge
cmp
push
push
mov
cltd
outsl
or
xor
gs
lret
push
fs
jo
in
adc
aaa
mov
loopne
cmpsl
xchg
jb
sbb
xor
test
scas
pop
jb
inc
sbb
ffreep
pop
outsl
clc
rcl
jno
lahf
icebp
call
jnp
popf
adc
hlt
inc
xorl
lret
sahf
popa
add
xchg
xchg
imul
and
ja
jno
sub
addb
popa
xchg
mov
clc
dec
jp
les
cmpsb
scas
movsl
push
and
xchg
fs
lret
push
gs
jb
push
inc
out
add
in
mov
outsb
sarb
push
fstpt
jge
mov
rcl
dec
mov
push
cs
jp
int3
add
xbegin
addr16
pop
mov
xor
std
mov
out
leave
add
inc
jae
adc
imul
pushf
inc
testl
xchg
into
push
mov
daa
sti
push
insl
aam
cs
outsb
repnz
iret
ret
add
bound
popf
jnp
xchg
jecxz
ljmp
push
adc
insl
and
xor
loop
outsl
iret
dec
cltd
inc
idivb
pop
push
dec
rcl
fwait
lcall
adc
push
inc
fdivr
sub
ss
lods
sbb
popa
mov
dec
add
icebp
aam
arpl
clc
inc
add
xchg
lods
sbb
or
dec
cmpsb
int3
rcl
xchg
call
cli
aaa
cmp
mov
xor
push
lock
into
into
in
in
or
mov
inc
push
leave
stc
imul
cmp
in
jnp
sbb
scas
adc
or
or
ss
mov
fwait
test
test
or
int
movsl
dec
cmp
sub
in
loope
push
lret
mov
into
push
loop
int3
xchg
jbe
cmp
cwtl
movb
stos
jo
int3
fisubrs
test
and
inc
movsb
lret
mov
push
jae
test
test
jns
cmp
mov
jne
add
shll
out
mov
cmpsb
add
lret
pop
iret
mov
push
add
adc
adc
push
rcrl
pop
rcll
cmp
jo
mov
repz
lret
loopne
hlt
mov
nop
pop
jns
cli
xlat
push
sub
adc
iret
adc
lock
pop
sbb
jp
mov
inc
add
cmp
cs
mov
push
and
jle
cltd
push
push
ret
push
repz
pop
dec
jmp
ss
arpl
test
xchg
ds
mov
orb
in
les
cmp
sbb
mov
jo
xchg
mov
call
mov
or
in
cwtl
pop
shll
jmp
out
enter
push
or
pushf
mov
jne
jne
sarb
ror
xor
add
adc
mov
add
cli
stos
repnz
loope
nop
mov
fwait
cmpsl
call
aad
mov
mov
xchg
data16
sbb
pop
or
jp
dec
sbb
outsl
into
enter
xchg
aad
or
mov
sahf
cwtl
sbb
mov
xor
push
push
fmull
outsb
push
or
sbb
cmpb
push
jge
outsl
pop
dec
mov
out
out
xlat
or
and
inc
loopne
test
movsl
inc
xchg
mov
lea
aam
dec
dec
pop
sbb
lods
xor
mov
jnp
inc
test
in
adc
rcrb
xchg
adc
jge
xor
pop
adcb
out
dec
ljmp
mov
xor
shl
inc
mov
jne
push
adc
push
out
les
or
adc
jae
mov
subl
lods
push
or
test
mov
pop
jns
inc
dec
mov
mov
jae
push
fdivrp
pop
addr16
nop
push
movsb
mov
mov
and
test
fcomip
mov
int3
in
jnp
and
mov
ret
or
push
mov
jne
aam
cmp
mov
lahf
data16
in
fdivl
push
subb
fdivrp
or
das
mov
iret
test
xor
int
inc
xchg
js
andps
mov
int3
pop
pop
mov
mov
dec
pop
or
loop
xor
jge
pop
pusha
mov
xchg
and
aam
adc
test
sbb
out
push
ficoml
fmuls
jmp
int
cmp
enter
push
add
mov
adc
pop
scas
inc
icebp
mov
loopw
clc
or
jns
inc
lods
std
ljmp
test
pop
sbbl
xchg
ds
leave
in
xor
xchg
arpl
sbb
lock
xchg
or
aaa
jl
cmpsl
jecxz
clc
call
out
push
das
fwait
add
add
mov
dec
or
add
pop
jo
mov
inc
jecxz
mov
movb
out
and
call
lret
orl
test
dec
into
ss
adc
loopne
adc
dec
dec
xchg
loop
in
sbb
sbb
enter
mov
jmp
cmp
int3
add
push
test
inc
sbb
inc
mov
out
rorl
or
insb
loope
sub
dec
fisubrs
inc
inc
in
dec
test
inc
out
imulb
jne
push
pop
ret
test
or
and
call
data16
repnz
jne
push
inc
pop
mov
push
xor
jle
pop
sub
push
push
int3
movsl
aas
push
pop
das
enter
xchg
jecxz
sbb
cld
sub
inc
or
out
jg
mov
lret
out
fsubrs
testb
les
and
rorl
sbb
pop
xchg
or
stos
add
sub
daa
xor
xchg
lret
addl
sbb
pop
cmpsl
pop
jbe
push
lea
rclb
test
xor
fcompl
push
add
pop
nop
pop
push
hlt
lods
jle
xchg
or
mov
movsl
test
gs
dec
jp
int
cmp
dec
outsl
mov
and
leave
in
sub
cmp
bound
jle
aaa
jne
push
mov
push
push
pop
je
mov
lods
fwait
inc
pop
cs
mov
popf
stos
jne
loop
push
dec
popa
jmp
aam
push
sub
and
lods
dec
and
mov
jmp
mov
xor
sahf
mov
dec
mov
roll
push
mov
out
mov
dec
shl
lods
dec
cmc
insb
bound
sbb
xlat
mov
or
xchg
pop
cmpsb
adc
decl
cmpsl
inc
dec
cli
mov
add
ds
or
sti
lods
push
sbb
jmp
mov
jb
inc
inc
or
sbb
push
sub
dec
jecxz
iret
int3
imulb
movsb
jmp
xlat
jge
insb
inc
add
ret
and
cmp
lret
xchg
mov
push
iret
sub
xchg
int
daa
into
xor
sbb
mov
rcrb
out
imul
jbe
dec
dec
dec
xchg
in
cmp
or
dec
lods
mov
stc
fists
mov
into
inc
mov
iret
stc
inc
clc
leave
ja
mov
daa
inc
jp
sbb
movsb
std
pop
jne
aaa
mov
xor
mov
repz
inc
sti
mov
aam
fcomps
dec
into
mov
shrl
jle
mov
xor
jg
pop
add
aas
xor
mov
and
fnstcw
jns
mov
test
inc
out
pop
pop
push
or
movsl
inc
in
lret
xchg
mov
lahf
push
fwait
lds
inc
enter
mov
in
dec
sbb
pushf
fisubrl
add
xchg
cmp
adc
dec
dec
cmp
push
into
das
jnp
inc
push
or
sbb
fcmovb
pop
fistl
mov
or
data16
addb
jno
test
push
push
mov
push
std
dec
andb
xchg
mov
loop
mov
jbe
xor
mov
xchg
es
stos
xchg
enter
pop
aaa
inc
cmc
ss
orb
push
outsl
push
dec
test
out
in
mov
add
jb
test
pop
mov
push
negl
lret
test
dec
jno
or
xor
fcoms
clc
scas
stos
xor
push
cmc
lea
mov
lretw
dec
inc
fs
jmp
into
add
imul
mov
roll
xlat
pop
lea
flds
out
mov
sub
aad
aaa
add
lods
or
sbb
mov
jmp
hlt
xchg
inc
mov
imul
xor
std
popf
sbb
adc
aas
mov
xchg
or
adcb
test
es
mov
inc
addr16
adc
inc
mov
cmp
fidivs
or
push
or
ss
sbb
fcoms
pop
and
cmc
rolb
leave
arpl
adc
push
and
sub
dec
add
inc
jmp
popa
adc
xchg
mov
push
outsl
xor
dec
jno
sub
mov
mov
dec
or
jle
pushf
int
inc
aaa
mov
adc
lea
push
loop
mov
out
lds
pop
xorb
push
fs
jbe
jmp
mov
cmp
pop
xchg
aas
out
into
ret
push
pop
pop
movsl
inc
mov
daa
lods
or
add
pop
add
or
in
push
mov
dec
adc
push
xchg
jp
jl
aaa
sub
cmp
pop
push
cmpsb
mov
add
imul
push
or
sarb
jno
and
cmp
pop
inc
gs
pop
xor
and
in
movsl
xchg
cmp
outsb
mov
shl
mov
ljmp
sbb
mov
test
mov
xor
xchg
fdivrs
lods
add
adc
xor
je
sub
pop
jmp
repz
scas
jge
cltd
pop
adc
test
push
out
jnp
test
lods
fidivl
pushf
xor
arpl
pop
jle
add
rcl
icebp
stc
mov
das
out
push
or
cmpsl
gs
mov
testb
or
and
insl
cmc
inc
inc
sbb
jnp
jbe
arpl
jae
dec
pop
push
pop
and
push
aaa
inc
ret
iret
mov
mov
xchg
subl
daa
lods
mov
cmp
jg
test
mov
add
cmpsl
sbb
aaa
mov
fs
fwait
cmc
push
dec
cmp
and
imul
into
add
jmp
sub
jo
add
les
jp
or
movsl
adc
push
sub
xchg
fadd
xchg
xchg
pop
fiaddl
jp
pop
sbb
mov
out
xor
data16
and
add
stc
add
incl
mov
pop
test
in
into
lods
inc
mov
aaa
cli
sub
or
dec
sahf
mov
in
pop
into
iret
mov
andl
and
test
mov
and
movsl
dec
lds
pop
sti
xchg
ror
fwait
cmpsl
push
xor
inc
cltd
int3
push
sbb
shlb
push
subb
ss
aaa
out
and
sbb
das
xlat
or
push
xchg
pusha
mov
orb
or
lods
dec
imul
push
fldlg2
push
cmp
dec
mov
sbb
sahf
fisttpl
data16
outsb
cli
mov
stos
cld
sub
lods
mov
insb
sbb
mov
xchg
movsb
mov
and
cmpb
arpl
mov
push
xlat
inc
dec
xchg
nop
out
rclb
adc
stc
inc
jle
mov
cmp
dec
inc
dec
pop
jge
loope
inc
push
scas
bound
in
mov
stos
xchg
sub
jo
icebp
shrb
adc
jno
push
cli
pop
aad
mov
adc
or
xlat
lret
stc
ja
imull
loop
por
cli
sub
inc
cmp
orb
scas
jbe
sarb
rcr
jo
mov
sub
cs
rep
sub
push
adc
fldl
ret
cmp
cli
xchg
mov
imul
or
into
insb
pop
addr16
add
sbb
dec
fisttps
push
aaa
lock
mov
ljmp
dec
hlt
out
push
mov
inc
jp
lock
inc
insl
scas
or
xchg
xchg
out
sbb
movsl
mov
sub
aaa
mov
push
rclb
sub
adc
pop
sub
add
xor
and
negb
xchg
pushf
out
insb
push
adc
inc
mov
jne
and
rcrb
pop
xchg
mov
bound
outsb
cmp
lcall
daa
stos
out
lds
sub
out
xchg
pop
xchg
jno
push
mov
and
inc
aam
and
mov
push
jno
popl
out
jae
push
es
cwtl
xchg
and
into
mov
shld
shlb
iret
popf
jae
fwait
loopne
or
je
repnz
ret
inc
mov
ljmp
lret
jnp
mov
push
xchg
xor
and
adc
xor
push
inc
pop
out
push
pop
mov
add
mov
rcrb
hlt
dec
and
cmp
in
adc
xor
cmpsb
jmp
inc
gs
popl
cmp
ret
mov
nop
fdivp
inc
shrb
and
push
insb
inc
or
shlb
popa
push
mov
mulb
xchg
int
aad
rolb
xchg
loope
or
shll
fnstsw
scas
pop
sub
inc
push
shll
jmp
mov
push
pop
hlt
sbb
stos
inc
adc
pop
pop
mov
daa
cmp
push
push
jecxz
xlat
dec
pop
jbe
je
jg
movsb
mov
ja
mov
or
cmc
iret
fidivrs
jae
mov
cmp
loop
dec
cmpsl
sub
ja
adc
fsubl
int3
ss
sub
add
mov
mov
adc
mov
popf
shlb
mov
das
and
jbe
fistpl
lea
dec
pop
xchg
sbb
hlt
mov
jmp
lea
jo
stos
rcrb
mov
sbb
adc
ret
and
xchg
jge
or
jnp
into
push
sub
jno
shlb
lret
mov
inc
add
mov
mov
rclb
and
xor
out
jp
call
arpl
imul
in
lahf
mov
repz
sbb
pop
mov
sbb
inc
jle
add
je
or
push
jno
xchg
inc
into
imul
enter
pop
lods
mov
jmp
into
repz
mov
aaa
cmpsb
rclb
inc
push
shll
insb
pop
scas
ds
nop
push
stc
fnstsw
push
jo
mov
pop
ja
dec
inc
xchg
xchg
add
mov
lods
adc
std
in
dec
jno
xchg
push
mov
inc
mov
sbb
mov
dec
mov
push
xchg
not
mov
out
add
iret
in
dec
subb
dec
mov
aaa
push
jb
add
push
jbe
pusha
add
popf
test
test
push
enter
divl
push
scas
jle
sti
sbb
dec
ficompl
mov
inc
mov
inc
mov
xor
push
mov
inc
inc
jb
stc
mov
int
mov
ss
sti
movsl
xchg
data16
dec
fistps
aam
sbb
mov
outsl
pushf
pop
sub
rclb
lret
movsl
jp
inc
shlb
aam
pusha
call
push
cltd
sbb
ret
jbe
jmp
rorb
mov
ja
xchg
push
aam
test
icebp
cwtl
insb
popa
inc
mov
pop
add
mov
repz
aaa
xor
int3
loop
sbb
inc
nop
out
xlat
and
xor
xor
cwtl
daa
adc
push
mov
mov
ffreep
inc
push
and
mov
jne
cmc
lcall
ds
adcl
daa
sub
sarb
jp
stos
imul
mov
mov
lret
sub
or
ficompl
loopne
sbb
pop
stos
pop
fistpll
mov
inc
mov
arpl
xchg
call
or
out
shrb
lahf
push
adc
pop
xchg
test
lods
jo
adc
adc
mov
pop
mov
das
mov
push
pop
loop
sub
sbb
push
sbb
and
nop
jmp
push
aad
je
mov
jns
cld
popa
mov
data16
int
test
jmp
lds
sub
pop
and
mov
inc
popf
push
push
pop
je
scas
add
xchg
or
aaa
clc
daa
mov
pop
add
jmp
xchg
or
cmpsb
in
sbb
cmpsl
xorb
shlb
push
adc
adc
jecxz
sbb
test
jno
iret
dec
pop
jbe
repnz
ficoms
add
lcall
scas
xchg
pop
out
or
jnp
ss
inc
add
xchg
jno
imul
sub
xchg
jmpw
lock
rcll
fsub
push
push
add
fs
aas
scas
sbb
ficoml
sbb
jne
lcall
cmp
jns
js
in
push
sub
das
rorb
lods
pusha
pop
push
cltd
inc
sbb
inc
pop
fwait
jecxz
and
xchg
hlt
xor
ljmp
stos
push
mov
insl
sti
insb
inc
out
adc
repz
stos
dec
and
es
adc
inc
jmp
rorl
push
leave
jne
rcl
jg
adc
mov
iret
outsl
out
icebp
clc
mov
inc
aam
leave
cli
imul
adc
xchg
stc
minps
xchg
mov
adc
sti
jecxz
cs
into
add
insl
faddl
jns
pcmpeqw
not
dec
push
cmp
rcl
movsl
ds
scas
sahf
imul
jp
sub
push
scas
mov
jl
push
xor
fmull
ljmp
jb
pusha
push
xor
and
cs
push
jbe
sbb
enter
xor
jg
scas
inc
fldcw
push
xchg
ja
pop
dec
shll
or
pop
cld
xchg
out
sbb
xor
popaw
mov
vmovdqu
dec
in
and
cli
das
repnz
in
iret
movsb
lret
mov
out
imul
ret
xor
push
push
imul
xor
mov
int3
jmp
xchg
jbe
lds
stos
shlb
int
insb
sub
push
or
xor
lret
cmp
incb
xchg
sub
aad
mov
enter
xor
and
sub
in
cli
or
sbb
push
cmc
mov
inc
push
push
jecxz
inc
xor
jae
arpl
cmp
push
ret
addr16
je
mov
test
loope
pop
sbb
popl
pop
into
fisttpl
rcl
pop
sub
mov
ret
std
arpl
cmpsl
je
pop
sahf
imul
js
pop
cmc
ljmp
push
cmp
mov
mov
ljmp
out
icebp
cmpsl
add
xor
mov
aaa
xor
push
psubusw
sbb
fdivr
xchg
xchg
mov
mov
cmpsb
adc
sub
lods
xchg
data16
adc
add
in
mov
or
xor
icebp
cmp
cmp
int
mov
bound
fwait
sti
or
js
out
addr16
mov
lret
dec
pop
loop
std
push
mov
stc
sahf
push
fsubrs
mov
lods
loope
xchg
aas
add
decb
jns
add
lds
fmul
jmp
adc
mov
imul
mov
scas
mov
rcrl
mov
dec
cmp
xlat
lahf
add
xchg
add
test
xchg
jle
sar
cli
lods
das
sub
lret
out
stc
aam
inc
and
lock
xor
cmc
mov
lods
cmp
xor
jb
js
add
loope
or
sahf
cmp
push
movsw
add
lahf
jo
dec
clc
jb
into
insb
out
add
ljmp
sub
inc
sbb
mov
divl
xchg
bound
aad
add
addr16
fsubrs
jmp
popa
mov
jp
insb
lock
xchg
sub
cmpsl
outsl
aad
cli
xchg
pushf
mov
int3
mov
mov
outsl
sbb
mov
repnz
into
outsb
adc
or
pop
data16
rcl
popf
icebp
mov
push
lock
or
xchg
cmp
mov
lahf
in
cmp
inc
or
or
inc
and
cs
call
or
in
dec
add
pusha
mov
lret
xor
lds
sub
arpl
or
adc
cmp
ficoms
mov
jmp
dec
pop
jno
and
iret
das
add
clc
jbe
or
or
fnsave
push
xchg
sarb
inc
jle
sbb
jnp
xchg
mov
out
addr16
xor
dec
sarb
pop
add
sbb
cmpsl
pop
into
pop
and
push
cmp
das
loopne
gs
mov
jle
fildl
daa
inc
dec
and
loopne
or
inc
test
mov
hlt
jmp
aas
xor
das
popf
out
out
mov
sub
mov
sub
lds
aaa
imul
inc
add
dec
dec
mov
lret
rcl
add
mov
adcl
or
jb
add
adc
or
ljmp
bound
jle
fst
shlb
push
cli
sbb
lret
adc
xor
cmp
pop
ret
jno
movsl
stos
mov
daa
lds
addr16
xchg
mov
dec
lret
clc
and
inc
adc
mov
jns
es
mov
xchg
sub
incl
jl
lds
dec
enter
mov
jno
clc
cmp
pop
rorl
jle
mov
ror
jecxz
jbe
nop
pusha
sti
xor
popa
mov
mov
cmpsl
mov
in
mov
ja
test
aam
xchg
inc
mov
or
adcl
push
imul
loopne
mov
cli
movsb
out
fnstcw
cmp
add
arpl
insb
mov
outsl
sahf
jns
mov
add
fidivrl
fsubrs
ret
jmp
add
push
cmp
icebp
xchg
fs
aam
lahf
scas
fisttpll
roll
loope
stc
or
mov
out
insl
ss
cmp
dec
add
dec
into
mov
sub
xchg
jno
xchg
push
jae
repz
hlt
xor
cwtl
push
arpl
or
push
dec
add
push
and
xchg
shrb
dec
or
mov
int
sub
and
mov
adc
jle
pop
into
xchg
movsb
les
imul
incb
jge
xchg
sbb
pop
inc
dec
mov
mov
push
cmp
or
mov
inc
fdivs
sbb
mov
xor
jne
arpl
mov
push
xchg
jo
mov
mov
js
repz
push
sbb
add
push
push
mov
roll
dec
pop
out
mov
sahf
movsl
cmpsl
jo
xor
jp
jns
je
mov
pop
xchg
pop
sub
imul
mov
adc
cmp
and
cld
insl
or
out
lds
insl
dec
arpl
dec
inc
ret
clc
sbb
js
subb
xor
xchg
xchg
es
and
cltd
mov
into
mov
int
and
insb
or
push
cmpsl
jecxz
fidivrl
mov
adc
addl
aam
imul
dec
scas
mov
mov
mov
jp
cmp
xor
outsl
je
divb
pop
xlat
xor
xchg
or
popf
fmull
lods
pop
outsb
movsl
mov
and
icebp
jno
cwtl
insl
cmp
ljmp
xor
adc
or
pop
sub
jp
js
es
lret
jae
daa
pop
and
and
jmp
add
jnp
sbb
mov
xchg
aam
stos
cltd
hlt
lea
lahf
fcmovne
inc
xor
adc
in
mov
mov
aaa
flds
mov
test
lea
sbb
gs
xchg
test
shlb
pop
push
cmp
mull
out
push
aas
stc
push
pushf
jmp
shlb
jbe
jl
mov
jnp
scas
adc
adc
inc
xchg
nop
movsb
lock
cs
push
pop
sbbb
shlb
xor
push
pop
stos
add
sbb
mov
mov
jne
call
mov
xchg
fiadds
xchg
dec
and
lret
dec
nop
jl
and
das
push
gs
and
xchg
ja
push
pop
jne
jb
in
int
sahf
addr16
xchg
xor
adc
ret
jg
lahf
mov
pusha
pop
xchg
adc
arpl
in
jae
repnz
push
xor
popf
sub
ret
mov
test
pop
cwtl
movsb
aad
mov
jno
cmpsl
int
sbb
jns
outsb
icebp
jmp
out
cmp
ja
mov
and
addr16
mov
shl
pop
inc
enter
xor
jecxz
test
lock
scas
fld
push
and
dec
jne
not
test
xor
test
into
xchg
adc
daa
cmpsl
push
xchg
sub
adc
sub
aaa
mov
adc
lods
cltd
aam
push
in
outsb
hlt
jge
out
push
push
xchg
sub
inc
sarl
inc
push
test
mov
outsl
dec
out
cmp
xchg
aaa
aam
nop
loopne
dec
and
pusha
iret
mov
in
mov
loop
inc
push
jno
ljmp
in
sbb
ss
mov
jg
push
xlat
inc
push
pop
repnz
imul
mov
mov
int
pop
xchg
pop
push
rorl
and
xchg
bound
push
roll
in
inc
cmp
stc
shll
int3
mov
fstpt
cmp
insb
push
push
pop
data16
xlat
and
mov
fsubs
mov
inc
cwtl
cmp
dec
hlt
rcll
xor
mov
cmp
fucomip
loopne
dec
dec
insb
and
out
inc
cmpl
lock
or
jae
test
mov
add
test
mov
dec
inc
mov
jp
or
cmpsl
push
and
mov
sub
xchg
cmc
ljmp
test
pop
fwait
int
cli
add
ss
aad
pushf
lret
xchg
aas
into
jle
repnz
js
ret
mov
rcr
out
push
pop
add
jp
ret
cmp
sbb
cmpsb
dec
mov
incl
nop
hlt
call
add
mov
sub
mov
xlat
xchg
scas
test
mov
push
or
call
rorl
pusha
sub
mov
sbb
fsubrl
inc
int
hlt
inc
sub
cltd
lock
xchg
jo
mov
cli
xor
xchg
lods
push
sbb
mul
ss
rcl
sbb
dec
cwtd
push
mov
sbb
cmp
leave
ret
repz
and
fmul
ss
insb
and
xor
mov
pushf
push
inc
cwtl
jnp
leave
test
popf
mov
lods
aaa
and
cmp
pop
notl
push
js
cmc
mov
xchg
inc
add
aad
adc
rol
inc
mov
sbb
ljmp
dec
int
or
jbe
outsl
test
lret
fldenv
lods
pop
fcompl
nopl
iret
insl
stc
jno
add
rol
imul
test
cmpsl
gs
mov
leavew
sub
rcrb
jmp
sti
out
xor
rcrl
stc
movsb
jg
les
mov
icebp
pop
cmp
sbb
mov
xchg
mov
test
lret
mov
mov
sub
jno
les
mov
jb
loop
fsubr
sub
dec
xor
jne
push
xlat
cmpsb
sbb
mov
andl
push
adc
jae,pn
arpl
jbe
add
dec
div
adc
push
aas
or
or
push
dec
fsubl
mov
cltd
push
mov
adc
or
adc
jp
into
cmp
or
nop
into
jo
xor
cld
popa
test
js
cmp
int
jno
insl
and
xchg
lods
or
orl
cld
mov
bound
loopne
mov
xchg
das
pop
cmpb
mov
data16
lret
test
fwait
cmpsl
insb
sarb
gs
jnp
loope
inc
jmp
sub
ret
pushf
shl
clc
scas
cli
dec
call
push
xchg
sub
fsubl
adc
sub
add
popf
fdivp
xor
int
out
sub
cmp
cmpsl
jne
nop
fst
in
add
jbe
cmp
stc
fs
xor
lahf
rcrl
stos
idivb
jns
jno
jbe
inc
jp
fimull
in
sbb
lcall
pop
mov
jle
aam
xor
or
add
jmp
add
jle
mov
mov
xchg
lock
xor
cmp
xchg
fnsave
popa
rcll
dec
add
nop
adc
pop
pop
xchg
in
arpl
dec
pop
es
popf
inc
xor
mov
idivl
stos
fcomi
xchg
jl
pop
and
xchg
fdivl
push
inc
sbb
fwait
xchg
aad
inc
lods
xor
ret
jge
loope
sbb
shll
outsl
mov
dec
fimull
popf
dec
or
mov
fstp
pop
mov
rcl
stc
ljmp
outsb
dec
scas
int3
add
lock
cmp
mov
rclb
aaa
enter
jecxz
lods
pushf
xlat
push
std
movl
mov
jl
dec
dec
lret
leave
cltd
jmp
out
add
call
jecxz
lods
movsl
pusha
out
or
adc
fwait
sbb
dec
jl
gs
xlat
mov
cmpb
pop
inc
add
mov
push
or
cmc
add
add
pop
movsb
mov
sbb
ret
mov
mov
ja
push
inc
fiadds
lahf
mov
ljmp
and
xor
movsl
mov
hlt
out
mov
out
cmp
lods
adc
out
dec
and
mov
mov
mov
pop
outsl
dec
lcall
inc
or
or
pop
xchg
sub
sbb
repnz
mov
insb
pushf
push
adc
or
lock
test
out
ja
xchg
push
mov
in
daa
xchg
push
cld
cmp
mov
dec
jecxz
or
out
movsb
std
roll
rolb
aaa
movsl
lcall
mov
mov
jmp
movsl
sbb
imul
cld
sub
lcall
lret
jmp
inc
xlat
or
cld
pusha
dec
mov
dec
mov
mov
cli
imul
insb
test
pop
xor
subl
mov
jno
rol
es
adc
sbb
adc
and
jg
movsl
jb
lds
sbb
pop
repz
sub
in
aad
jbe
nop
je
lods
ret
ds
push
push
fcoms
add
mull
jo
or
mov
cld
or
inc
mov
cmp
mov
shll
jl
ljmp
mov
mov
rclb
leave
icebp
xchg
cmp
stos
mov
push
mov
inc
cmp
push
mov
incb
movsb
ss
es
sbb
daa
pop
or
pusha
cmp
dec
test
mov
sub
or
movsl
sbb
call
mov
rorb
icebp
enter
jp
push
jbe
xchg
push
fldt
and
cmpsl
cwtl
cmpsb
les
inc
dec
and
cmp
cmc
sub
into
push
or
jg
and
cli
js
cmc
xor
les
sbb
or
adc
scas
into
mov
ds
pop
jno
xor
data16
call
push
insl
sub
test
dec
out
cmp
dec
cmpsl
aas
aam
scas
mov
rorl
add
lea
push
lods
xchg
test
test
test
cmp
sbbl
xchg
push
push
push
jmp
in
aad
mov
into
loope
hlt
mov
xor
add
or
fidivrs
push
inc
mov
test
jb
push
or
movsl
rorl
leave
xchg
out
mov
lcall
ja
mov
aam
xchg
adc
aas
and
xor
out
pop
cmpsb
sbb
cwtl
sti
or
jns
xchg
inc
lds
inc
and
aam
test
shlb
and
cmp
and
xchg
mov
in
add
out
mov
cmpb
out
fcoms
fwait
enter
ja
mov
xchg
adc
in
inc
mov
sub
inc
xchg
cmp
sbb
cmp
mov
int3
mov
popa
sbb
push
inc
adc
arpl
or
vxorpd
mov
adc
subb
or
sbb
mov
das
push
xlat
rcll
cmp
xor
ljmp
push
out
rorb
pop
insb
sub
aam
arpl
in
pop
lods
cmp
dec
xlat
ret
lret
jb
xchg
xchg
movb
jge
mov
stc
push
mov
pop
lret
arpl
mov
out
out
mov
mov
mov
pushl
sahf
andb
pop
mov
dec
jbe,pt
aas
insb
int3
sahf
jno
loope
mov
pop
cld
arpl
mov
js
lahf
sbb
xchg
cmp
jl
stos
xlat
pop
pmaddwd
pop
arpl
jnp
mov
je
cmc
sub
mov
sti
fwait
pop
stos
mov
mov
mov
fstps
mov
shrl
jae
xchg
pop
xchg
jg
mov
add
jmp
cmpb
enter
inc
cmp
mov
leave
mov
xor
fimull
adcb
jg
adc
ja
inc
ljmp
lahf
cmpsb
and
and
aad
xchg
nop
fcomps
call
xlat
hlt
loop
in
stc
arpl
ds
dec
adcb
add
roll
inc
rcrb
sub
or
and
pop
lds
and
lret
and
popa
xlat
sbb
push
and
and
jmp
mov
in
xor
mov
arpl
xchg
sub
add
ja
test
mov
jno
xorps
xchg
sbb
cwtl
cli
sub
enter
int3
jne
fbstp
cmpl
and
lahf
rcrb
mov
pop
test
movsb
ja
dec
jmp
push
inc
in
pop
aas
add
cmpl
lds
push
dec
add
test
cmp
call
mov
inc
push
jb
and
outsl
pop
out
lods
adc
push
mov
lock
push
pop
sbb
xor
aam
in
loope
cmp
repz
push
mov
inc
adc
xchg
push
icebp
push
test
dec
push
push
sbb
sbb
mov
stos
addr16
aam
ja
adc
jnp
sub
jmp
leave
dec
into
out
mov
mov
lods
and
adc
call
xchg
icebp
lret
xchg
cmpsl
test
incb
test
das
jecxz
fwait
adc
mov
xchg
add
fsubp
jns
sbb
repz
adc
jae
lods
xchg
movsb
test
mov
dec
mov
cmpsl
cmp
cmp
lret
adc
aam
fucomp
fcoml
jg
sub
mov
mov
pop
int
adcb
mov
pop
fwait
pushf
xor
int3
add
add
mov
jnp
fildl
cmp
outsl
push
enter
insl
cltd
xor
mov
lods
sub
sarb
fcmovnu
inc
mov
out
dec
movl
xchg
stos
stc
mov
orb
jmp
mov
aas
call
movb
fadd
pushf
jle
or
cmp
jb
sbb
pop
push
repnz
sbb
scas
rorl
es
xchg
mov
fbld
icebp
pusha
inc
cmpsb
inc
loope
jbe
rorb
pop
mov
aam
push
cmp
cwtl
imul
pop
or
js
mov
lret
sahf
rcpps
movb
ja
sub
add
jecxz
xchg
or
lcall
inc
imulb
push
add
sbb
push
je
bound
mov
mov
or
push
or
enter
jmp
ja
mov
sahf
mov
movsb
fwait
sub
push
sub
jmp
and
cmp
or
mov
lods
and
jnp
in
push
sub
push
into
out
fs
std
and
sbbl
test
lods
mov
or
ret
push
mov
xchg
inc
rolb
jge
push
or
jns
add
jb
adc
dec
lcall
push
inc
mov
movsl
or
mov
js
pop
test
dec
push
lods
movsl
mov
cmpl
cmp
xor
xor
scas
jae
mov
stos
inc
cmc
aad
data16
add
fdivr
jp
cmpsl
inc
pop
js
fisttpl
aaa
dec
out
dec
push
xor
and
mov
stos
int3
or
or
bound
jg
out
and
or
mov
repz
dec
inc
lds
pop
pop
or
iret
popl
into
fildl
cwtl
jne
or
jo
cmpsb
repz
sbb
push
loop
push
inc
push
rcl
or
out
mov
mov
jnp
sub
repnz
push
repz
arpl
decl
inc
icebp
aaa
test
stos
dec
rcr
and
pop
fsts
out
jno
pop
xchg
in
jmp
lret
clc
pop
mov
loopne
and
mov
dec
or
jbe
mov
add
fwait
xchg
cmpb
aaa
ret
jge
inc
fcmovb
or
loop
cli
popf
pop
add
mov
jmp
leave
int
test
or
lret
jl
ja
les
xchg
fdivrs
out
xchg
mov
or
xchg
jns
out
cli
lds
mov
mov
pushf
pop
xor
jp
jge
fsubrl
sub
push
sbb
add
test
aam
xorb
add
loope
lods
add
push
sub
ret
push
dec
jge
pop
lret
adc
jbe
cmp
mov
fsubs
adc
fldt
lcall
add
push
dec
xchg
sbb
dec
shl
test
push
stc
or
test
ret
inc
in
push
scas
and
js
mov
pop
and
arpl
into
mov
push
xor
loop
je
scas
mov
dec
xlat
ja
aam
fwait
dec
ss
mov
imulb
loopne
stc
mov
jl
lret
ret
xchg
fwait
lock
lcall
push
mov
add
jle
aas
fcom
out
sbb
js
and
sbb
shll
jb
mov
xchg
inc
jmp
mov
loop
loopne
cltd
dec
imul
jae
push
sti
pop
xor
sarb
int
hlt
scas
push
ficompl
shrb
inc
lcall
out
xchg
cmp
iret
mov
lahf
add
xchg
adc
fwait
cld
mov
dec
xor
inc
and
sub
inc
xchg
push
nop
movsb
mov
ret
outsb
mov
fwait
js
cli
cs
mov
xchg
notb
mov
add
jp
inc
mov
mov
dec
jle
ror
jmp
push
sbb
pop
iret
pop
adc
lahf
or
xor
ret
inc
cmpsb
pushf
sbb
dec
xchg
and
mov
loop
jmp
xor
cli
cwtl
fidivl
ljmp
out
jae
icebp
xchg
pop
orb
cmpsb
dec
repz
loop
mov
cs
dec
jo
pop
add
test
icebp
mov
scas
push
pop
imul
in
or
into
xor
xchg
pushf
pop
ret
shlb
js,pn
mov
fisubl
push
jnp,pt
dec
cmp
xlat
xor
pop
or
mov
iret
cli
fistps
pop
cmpl
leave
push
jo
adc
xchg
call
or
cmp
cltd
jecxz
ja
hlt
cld
lcall
mov
fbld
into
hlt
mov
pop
mov
das
test
addr16
in
push
push
hlt
sbb
mov
sub
jmp
ds
xor
push
mov
pop
and
out
in
dec
repnz
hlt
arpl
mov
out
int3
aaa
push
jmp
or
popa
int
xchg
pop
cmp
pop
lret
into
inc
add
push
das
dec
cmp
sub
repz
movsl
mov
push
out
pop
fwait
or
mov
nop
cltd
test
repz
imulb
vmovhlps
mov
push
cmp
xor
push
cmpsl
jl
lods
shll
mov
popa
mov
pop
clc
jbe
xor
pop
sbb
insl
sbb
adc
cmpsl
js
test
nop
cli
je
xor
in
int
mov
fwait
or
in
add
add
sarl
adc
mov
xchg
xor
mov
pop
pop
pop
outsb
push
jmp
fcmovne
push
out
or
fists
mov
pop
inc
popa
dec
and
insb
leave
mov
repnz
mov
movl
shll
ret
jmp
pop
pop
sahf
into
jg
cs
icebp
sbb
mov
inc
cmp
ret
mov
and
push
inc
mov
mov
imul
cmp
dec
jno
dec
cmp
lock
push
push
iret
fcom
psubusw
mov
pop
sbb
pop
and
out
mov
xor
inc
enter
mov
dec
nop
popa
loop
int3
cmc
push
cltd
pop
andl
and
push
pop
mov
int3
cmp
fadds
jnp
jbe
movsb
jb
lret
in
jge
pop
mov
imul
mov
je
cld
jg
jp
iret
xor
shl
in
adcl
cmp
push
dec
test
stos
and
sub
jg
mov
ret
jl
test
insl
sbb
inc
or
insb
jns
sub
pop
scas
ljmp
mov
gs
jge
push
inc
push
lock
movsl
pop
lret
iret
push
jge
xchg
movsl
xchg
int3
int
aas
cltd
pop
orl
mov
movsb
and
dec
dec
adc
mov
inc
dec
cmpsb
das
and
lret
dec
xor
push
sub
out
inc
dec
inc
mov
add
adc
xor
fidivrs
lock
push
loope
gs
push
sub
or
sub
test
xchg
divl
shlb
stos
enter
leave
xchg
cmpsl
pop
ja
push
inc
icebp
dec
ret
sbb
fdiv
pop
pop
mov
or
clc
adc
or
popl
add
pop
xchg
dec
rcr
xchg
sbb
or
int
add
xchg
pop
pop
sbb
and
scas
sahf
hlt
aaa
addl
scas
pop
sete
cwtl
stc
inc
dec
mov
mov
xor
rolb
pop
dec
ljmp
sbb
sahf
xchg
dec
and
inc
inc
mov
cmp
add
ja
divb
mov
fs
fnstenv
mov
xorb
mov
pop
mov
jns
out
or
aad
mull
sbb
pusha
stos
and
or
dec
sub
les
in
pop
das
aam
scas
mov
sub
pop
mov
int
mov
mov
dec
mov
imul
xchg
adc
pop
js
jne
orl
daa
test
aas
and
nop
adc
pusha
lret
inc
push
stc
pop
icebp
sub
jno
inc
das
push
ja
mov
mov
lahf
aas
mov
xor
or
aam
xor
adc
xchg
push
lcall
cmpsb
loope
ret
test
dec
mov
adc
mov
dec
cmp
pushf
shlb
daa
in
ret
stos
cmp
cmpsl
adcl
push
clc
pop
cmp
push
daa
push
lods
mov
dec
mov
xor
mov
push
pop
adc
add
test
loope
outsl
dec
add
out
ja
jl
pop
cmp
call
and
das
fisubl
hlt
and
xchg
sbb
cs
jecxz
xor
adc
push
dec
sbb
lcall
xor
mov
jne
cmp
xchg
adc
es
sti
leave
mov
jecxz
dec
mov
cmp
jbe
mov
add
and
pushl
pop
add
es
mov
int
ret
inc
daa
jo
push
dec
xchg
inc
repz
dec
jbe
xor
leave
xchg
lret
mov
mov
outsl
add
jecxz
or
adc
xchg
dec
push
lods
cmpb
dec
imul
push
movsl
lea
push
rcl
stos
fidivl
test
pop
fwait
xchg
test
jge
dec
add
loop
ret
gs
aaa
jmp
push
out
adc
sub
dec
push
data16
mov
xchg
je
sbb
sub
enter
out
lret
xchg
push
ds
test
andl
int3
idivl
insb
mov
adc
xchg
aas
leave
sub
sub
jecxz
sbb
sti
js
into
pop
inc
push
push
gs
cmp
xor
adc
aad
mov
fildl
push
inc
cmp
add
out
mov
jb
stos
jmp
xchg
xor
adc
mov
sub
in
into
jae
les
inc
imul
inc
push
es
push
dec
ret
cmp
gs
popa
push
rorb
mov
jb
fsubrl
lret
dec
pop
jae
mov
mov
and
jl
int3
sahf
mov
push
cmp
cmp
aam
outsl
lcall
push
add
add
jl
cwtl
cltd
sbb
ds
int
shrb
frstor
popf
mov
lret
js
lcall
inc
xchg
sub
ret
lret
fidivrs
in
mov
mov
inc
je
jnp
xchg
dec
push
into
adc
cld
fmulp
mov
aaa
pop
and
clc
jo
sbb
push
les
mov
dec
jno
lods
mov
test
imul
inc
mov
int3
mov
nop
sub
out
push
shr
lods
add
lret
mov
out
mov
or
jno
in
lock
dec
xor
jns
movsl
push
into
not
adc
pushf
and
es
arpl
or
fcomip
mov
mov
sbb
or
xlat
pop
cmp
int
sub
sub
rolb
and
lods
xor
add
sbb
ss
addr16
xlat
test
cli
mov
sub
inc
and
aam
int3
xlat
jl
jmp
lods
in
lods
shlb
lods
xchg
insb
push
int
lret
in
sub
pusha
adc
hlt
cltd
repnz
incb
rolb
and
sbb
xor
mov
xchg
dec
bswap
push
mov
and
mov
push
arpl
cmpb
js
scas
sub
inc
ljmp
cmpsb
push
jae
enter
push
cmp
ret
mov
mov
movsl
int3
mov
fidivs
in
push
into
roll
out
inc
cs
cmpsb
mov
or
loopne
inc
les
in
ljmp
out
mov
adc
jae
rorl
xchg
fimull
cmp
shrb
rcr
fisubs
mov
xlat
incb
adc
inc
pop
out
xor
push
sti
push
mov
jnp
mov
stc
sahf
inc
pop
cmp
movsl
cmpl
adc
fisubrl
or
xor
lcall
into
out
fmul
jmp
fnstenv
std
jle
scas
jne
xor
test
pop
loopne
subb
in
dec
fnstenv
out
dec
adc
inc
fsub
test
in
push
inc
sub
push
mov
xor
das
dec
push
adc
cs
mov
ret
sub
adc
rcrl
cs
movsl
pop
jbe
es
fcmovbe
pop
outsb
push
add
add
pop
pop
push
popf
jl
jge
loop
push
filds
mov
xorl
leave
dec
out
or
shll
jl
ret
push
xor
pop
push
mov
mov
leave
xchg
imul
mov
gs
jp
and
cmpsl
aas
cmp
jecxz
sbb
xchg
or
cltd
daa
xchg
lcall
jmp
pop
and
int3
sub
pop
or
mov
cmp
dec
lahf
add
scas
dec
mov
test
sbb
adc
xlat
insb
adc
in
mov
ja
mov
cld
out
es
jnp
xor
call
dec
popf
pop
inc
pusha
fsts
shr
xlat
jl
pop
repz
mov
popa
mov
das
out
pop
stc
test
aas
dec
lcall
xor
and
arpl
popf
xor
and
xchg
iret
pushf
push
jmp
mov
addr16
fcmovnbe
push
mov
mov
ja
into
add
jmp
sahf
pushf
rcr
pop
cmp
or
jl
aad
roll
xor
xor
inc
push
or
jns
repnz
pop
in
lret
mov
pop
test
mov
dec
ret
sbb
xor
xchg
scas
xlat
cmp
pop
inc
jecxz
mov
mov
cwtl
fisttps
repz
and
xor
dec
pop
sbb
mov
lret
loope
in
jne
push
clc
mov
bound
test
adc
outsb
mov
pop
popf
iret
js
sub
int3
testb
add
in
cmpsl
xchg
mov
rorl
mov
in
dec
sub
ss
inc
push
mov
test
movsl
ljmp
mul
inc
mov
mov
call
lea
xchg
cmp
xchg
add
pop
jbe
inc
dec
lods
into
inc
jge
inc
jne
or
and
pop
insl
sbb
out
dec
sbb
mov
aaa
je
jno
pop
or
inc
mov
push
sub
sub
imul
and
sbb
push
mov
xchg
mov
add
mov
es
adc
rcl
push
in
jns
ret
xor
in
loop
and
jne
dec
rcl
adc
in
jecxz
lock
mov
adc
mov
ds
dec
or
jo
xchg
push
in
cmpsb
popa
int3
adc
mov
adcl
and
out
inc
push
sbb
jno
mov
into
sub
sbbl
xchg
jle
jnp
out
imul
iret
cmpsb
and
aad
loope
xchg
cmc
je
fwait
shlb
xchg
xchg
mov
jl
test
mov
pop
mov
or
lods
pop
push
subl
test
pop
mov
pushf
fidivs
adc
rcl
mov
rcr
mov
jno
xchg
or
dec
test
jmp
int
pop
into
arpl
repz
loopne
pop
scas
and
push
xchg
mov
xor
inc
sub
push
aam
in
ja
das
int3
out
or
test
sbb
push
int3
mov
fcoml
pop
andl
xchg
aam
adc
pushf
cmp
ss
pop
test
adc
sbb
cmp
dec
stos
jno
and
push
insb
inc
xor
es
es
jo
ffree
lret
push
jmp
cmp
out
pop
and
dec
movsl
out
popa
mov
inc
jmp
rclb
pop
pop
xor
je
jecxz,pn
aas
jmp
cmp
fistps
xor
sub
fstps
imul
shrb
ret
push
and
dec
jns
es
pop
inc
cmp
lods
cmpsl
pop
enter
adc
lea
hlt
inc
jecxz
push
stos
pop
sbb
fmulp
cld
out
call
cwtl
jge
xchg
lret
xchg
xchg
addr16
push
je
inc
cmp
mov
cmp
jb
pop
sti
xchg
call
imul
inc
xor
negl
test
cs
push
push
jbe
test
stos
and
mov
gs
cmpsl
xchg
test
dec
outsb
insl
test
in
push
fsubrl
jmp
lcall
cmp
sbb
scas
stos
mov
or
fisttpl
jno
jecxz
sbb
clc
adc
inc
mov
push
mov
cmc
aam
pop
sahf
cmpsl
adc
sub
cmp
imul
out
int
push
aad
dec
xor
or
cmp
in
mov
sbb
clc
pop
cmpsl
mov
movsb
dec
sbb
xchg
push
cmp
int
xor
jmp
xor
jmp
xlat
test
xchg
dec
pop
into
pop
dec
loopne
std
cmp
cmp
sbb
in
dec
sbb
inc
push
rcrb
push
mov
dec
jo
movl
sub
leave
std
and
mov
jnp
lret
push
insb
mov
mov
inc
stos
aas
fistpl
sub
loope
pop
aam
jo
push
mov
push
and
out
nop
mov
int3
es
mov
xchg
add
sub
dec
jmp
ret
les
xor
xchg
mov
pop
push
pop
push
mull
mov
pop
fdivp
movsb
roll
xor
mov
xchg
jmp
add
data16
pusha
push
xchg
sti
das
out
test
paddsw
cmp
cmp
and
inc
sbb
dec
loopne
push
cmp
xchg
sub
data16
loope
push
inc
ret
test
into
push
xchg
jns
hlt
and
sub
jno
push
jp
push
dec
rcll
movsb
sbb
xchg
into
daa
outsl
sahf
pop
test
adc
or
sbb
inc
push
sbb
addr16
xor
leave
inc
dec
adc
xchg
shlb
data16
xchg
jmp
pop
data16
dec
fldl
push
out
xorb
in
lock
sahf
push
inc
pop
add
aad
lahf
leave
mov
lods
jb
call
adc
xchg
add
and
cmpsl
ficoms
test
frstor
jo
cli
mov
out
pop
mov
shr
mov
dec
jne
sub
into
aad
add
fdivrl
mov
lea
cwtl
ss
jne
movhps
and
out
popf
icebp
dec
add
popa
shrb
adc
iret
arpl
hlt
mov
cmp
sbb
out
leave
sub
add
std
arpl
and
push
cwtl
add
movb
adc
xchg
frstor
in
pop
sarl
jecxz
loopne
out
movsl
rorl
scas
push
in
sbb
pusha
push
in
pop
fdivs
inc
test
push
pop
mov
lock
outsb
mov
in
loopne
dec
xor
jecxz
out
fucomi
stos
jb
jge
push
cli
add
and
xor
cmc
and
mov
pop
jns
outsl
xrelease
leave
dec
and
aam
mov
into
addl
nop
sub
sahf
mov
insb
jl
jmp
and
mov
xchg
xor
sti
fldcw
push
les
ret
adc
and
xchg
cmp
cmc
leave
cmp
xchg
mov
add
jp
inc
xor
sub
dec
aas
inc
enter
into
push
dec
xchg
and
xor
xor
out
mov
aad
sbb
lods
fisubrl
mov
gs
repz
cltd
mov
adc
cmp
mov
icebp
mov
add
and
ret
mov
pop
leave
mov
stc
rcl
out
xchg
inc
fdivr
setle
xor
inc
cmp
xchg
pop
mov
pop
jge
mov
xor
xchg
mov
push
or
std
out
rcrl
int3
inc
in
cli
stos
sahf
xor
or
int
mov
stos
jge
fisttps
aas
subb
fcmovnb
sub
sub
rorl
or
or
stos
pop
js
mov
mov
fdivrs
or
xlat
push
pop
scas
stos
adc
lfs
cmpsl
or
pop
add
mov
xchg
sbb
stos
adc
lret
mov
xchg
mov
pop
scas
jbe
push
aam
inc
sbb
inc
mov
dec
out
bound
lret
sub
adc
jp
xchg
sbb
and
jmp
repz
adcb
or
xchg
das
imul
test
xchg
int
inc
lcall
daa
ljmp
xchg
cld
imul
divl
xlat
fwait
push
jl
into
or
sub
popa
mov
popf
faddl
mov
pusha
notb
sub
push
scas
mov
sbb
inc
andl
fwait
jecxz
sbb
cs
les
push
mov
sbb
mov
je
jp
arpl
stos
add
cli
cs
data16
cmpsb
add
sarl
cmp
xchg
jns
dec
mov
lds
or
mov
arpl
into
xlat
pop
push
ficoms
lret
mov
bound
push
imul
push
sub
xchg
scas
cwtl
jbe
test
pop
push
mov
or
sbb
stc
js
adc
lds
jns
cli
xchg
add
or
insb
pop
scas
sti
mov
inc
fwait
jo
sub
adc
cld
push
mov
cmp
cmp
or
pop
push
movsl
pop
pop
and
lods
push
mov
inc
or
mov
and
push
rcl
jecxz
aaa
fcompl
pop
sbb
rep
or
add
jl
mov
subb
call
in
xchg
lea
xor
push
and
or
ret
in
and
gs
sahf
mov
aam
xor
push
cmp
fwait
dec
dec
mov
dec
out
aaa
pop
insl
push
lret
push
xor
sbbb
into
les
stc
cli
aam
or
loope
decl
icebp
shlb
enter
ficompl
test
imul
add
aam
push
sbb
and
lret
dec
inc
adc
xchg
lock
mov
arpl
cmpsb
mov
pop
mov
aad
or
xchg
adc
loopne
add
test
call
xchg
iret
dec
pop
mov
or
out
sbb
jo
fs
or
je
cltd
xlat
into
in
cld
xchg
mov
sub
cli
xor
or
insl
xor
adc
push
cwtl
or
int3
sbb
push
mov
adcb
into
jbe
bnd
stos
jo
xchg
pop
icebp
mov
daa
ja
leave
jbe
xchg
testb
dec
lods
mov
pop
mov
add
and
dec
or
hlt
push
jg
adc
not
nop
dec
adc
cmp
push
clc
aam
lock
mov
push
jl
xchg
push
xchg
std
jmp
sbb
ss
xchg
sbb
jle
stos
adc
jmp
lret
icebp
xor
movsb
clc
cs
cld
lret
xor
xchg
xlat
dec
ds
mov
iret
push
jge
xchg
int3
test
shlb
add
pop
add
bnd
pop
fimull
dec
cmp
pop
cmpsl
xor
in
shll
or
pop
lret
dec
je
ds
bound
cmp
incb
xchg
sbb
push
div
icebp
mov
jecxz
mov
mov
sbb
mov
push
mov
lods
sbbb
testb
xchg
in
rolb
push
iret
xchg
dec
lods
lret
and
movsl
test
js
pop
loop
cmp
push
mov
sub
adc
inc
lret
aam
hlt
cmpsb
test
push
cmp
out
add
cmp
cld
jp
leave
fistpll
push
mov
lods
mov
out
mov
stos
out
add
mov
xor
jbe
ds
aas
add
dec
inc
into
push
movsb
pop
jmp
and
push
cmpsl
or
xchg
mov
out
out
pop
flds
les
addr16
lds
push
test
dec
jl
jge
cmp
rolb
lcall
mov
mov
jbe
sarb
cmpsl
into
loopne
aas
lcall
lods
data16
pop
lock
inc
dec
jp
xchg
xchg
pop
xchg
or
imul
mov
jo
add
sub
inc
fld
sti
pop
add
das
dec
loop
loope
aas
icebp
dec
mov
ss
scas
imul
inc
inc
lahf
movsl
pop
fcmove
lret
cmp
or
leave
and
pushf
push
adc
jle
add
and
mov
dec
sbb
leave
inc
cmp
mov
test
add
daa
ret
mov
jle
mov
into
inc
xchg
xor
dec
and
xchg
int
lret
imul
sahf
pop
or
rcl
dec
lcall
push
push
jne
dec
jmp
out
aam
lret
or
push
push
mov
aad
rorl
pusha
jbe
dec
cli
or
cmpb
iret
mov
inc
sub
mov
lret
mov
lds
add
sub
lea
lret
gs
mov
add
movsb
fiadds
data16
adc
mov
push
push
int3
pushf
adc
outsl
test
out
fstpt
jbe
cmp
sbb
aam
call
leave
dec
mov
cmp
mov
shlb
movsl
mov
in
jbe
hlt
fdivs
into
jbe
lea
fisubrl
sub
data16
sbbb
pop
aam
adc
cmp
movsl
mov
pusha
into
ret
scas
stos
mov
push
ss
cmpsl
push
cmp
ja
adc
sub
mov
cmc
push
movsb
jno
and
add
data16
mov
push
gs
leave
jne
mov
mov
mov
xor
fucom
mov
push
push
lods
stos
fbld
sub
int
xor
dec
sbb
outsb
dec
jg
fdivs
mov
insl
mov
mov
cwtl
sub
dec
jns
in
mov
xchg
push
mov
inc
push
sbb
fs
and
jge
imul
xchg
push
push
rcl
out
pop
dec
mov
out
cmp
fwait
insl
lret
mov
imul
in
stos
movsl
dec
inc
data16
nop
sbb
pop
out
mov
lret
xor
dec
and
je
mov
call
mov
fsubs
jnp
mov
cmpsb
les
cli
inc
jns
gs
xchg
out
mov
mov
pop
sahf
stc
mov
push
mov
mov
clc
sub
or
aaa
insl
popf
rolb
cmp
test
leave
int3
scas
test
sub
and
jns
das
sbb
cmp
fdivs
inc
faddl
ret
movsb
icebp
dec
clc
lahf
xchg
jbe
sub
or
ss
mov
daa
lock
jns
out
jmp
cmc
fidivl
dec
movsb
rclb
ja
ret
cmpsb
inc
xchg
inc
lahf
pusha
out
jl
repnz
cld
mov
test
scas
cmpsb
mov
fsubrl
sahf
out
mov
or
push
inc
call
dec
add
inc
pop
daa
test
imul
sub
rorl
jcxz
out
jns
ss
insl
imull
or
wrmsr
cwtl
pop
in
loop
push
pop
cli
dec
sbb
push
cmpsl
fimuls
shrl
mov
mov
push
add
jo
shrl
sub
xchg
sub
out
andl
cmp
xorl
xchg
fisttps
xchg
fwait
sbb
sbb
jecxz
cwtl
incb
out
aaa
adc
lret
jae
insl
mov
jo
xorb
psrld
jmp
pop
fcomps
gs
pop
rcrl
stos
adc
mov
cs
dec
add
lret
cmpsl
jne
adc
push
xchg
pop
test
xchg
mov
out
inc
clc
pop
inc
cmpsb
jecxz
rcl
fisttps
lret
fs
push
imul
daa
insb
les
xchg
arpl
pop
inc
pop
adc
adc
in
push
push
test
mov
mov
sub
jb
mov
jno
adc
int3
pop
push
mov
data16
aaa
mov
jle
jns
pop
xor
or
xor
sbb
mov
rcl
push
test
cmp
pop
cltd
fcomps
inc
push
bound
pop
mov
insl
push
jmp
ret
lods
pushf
leave
sahf
pop
dec
movsb
dec
mov
lahf
imul
out
lock
movsb
xor
xlat
daa
loop
stc
mov
pop
aam
iret
sbb
in
inc
xor
dec
ss
jge
cmp
out
add
shll
or
pop
dec
or
arpl
ss
sti
add
or
dec
movsl
lods
popf
cmp
inc
ljmp
xor
aam
jno
mov
xor
lcall
test
add
mov
notb
xchg
mov
dec
cltd
or
xchg
into
out
insb
mov
add
jge
scas
push
imul
mov
push
insb
addl
dec
iret
pushl
xchg
mov
stc
pop
push
inc
je
sti
mull
push
pop
dec
mov
push
leave
lcall
lret
cli
ljmp
add
xchg
cmp
sub
xchg
popf
insb
sbb
xchg
push
pop
cltd
xor
pop
aam
push
push
stc
adc
inc
mov
rcl
lret
sti
push
in
f2xm1
gs
fisttpll
int
mov
xchg
and
xor
jp
sub
push
test
and
mov
sub
in
in
mov
pushf
pop
pop
sbb
mov
cmpsb
imul
out
or
test
arpl
out
cli
xor
and
dec
ret
out
fcompl
push
pop
adc
scas
xchg
lret
jp
xor
mov
mov
mov
push
and
pushf
cmp
int
adc
mov
out
jbe
push
ror
aam
fs
imul
dec
xchg
nop
mov
push
mov
pop
mov
cmc
icebp
int3
mov
xor
repnz
sarb
sub
loop
mov
data16
mov
jmp
dec
ss
and
test
xor
aam
cmp
push
and
clc
dec
in
dec
rcll
mov
movsb
push
into
sub
lldt
lods
aaa
sub
sbb
push
adc
mov
outsl
js
adc
inc
loopne
mov
cli
or
jl
mov
stos
pop
xchg
popa
sub
loope
jne
arpl
xchg
jb
mov
inc
ficomps
mov
cmc
xchg
rcr
arpl
fbld
std
inc
jae
mov
pop
sub
arpl
push
mov
pop
loop
bound
idivb
lods
add
mov
scas
out
fidivrs
mov
xchg
ss
daa
sbb
or
xlat
push
mov
out
rorl
xchg
mov
jb
jg
add
aas
cmpsl
add
adc
jecxz
fnstenv
cmp
jae
inc
les
sbb
sti
scas
faddl
stos
jbe
push
cmp
cs
xchg
or
movsl
lret
out
xchg
sahf
inc
lret
dec
int
mov
mov
in
cmp
push
cmp
dec
cwtl
aad
pop
cmp
in
test
popf
je
push
int3
and
add
shl
leave
in
cmp
imul
xor
adc
lods
jne
movsb
mov
loopne
pop
mov
cmpsl
lahf
jns
sti
and
lods
mov
cmpsb
fs
ret
dec
test
add
mov
xor
jmp
jne
cli
mov
adcl
rcrb
cwtl
jmp
dec
mov
stos
inc
adc
add
push
clc
jno
push
idivb
cmp
popa
iret
ds
inc
imul
data16
dec
sti
mov
nop
jne
pop
xor
test
andb
jbe
dec
sbb
je
sbb
mov
xor
mov
jmp
es
mov
cltd
loopne
je
mov
ret
sub
in
addr16
mov
movsl
outsl
or
sbb
mov
push
jbe
add
mov
sub
adc
dec
lods
out
repz
lahf
outsl
cmp
test
or
push
xor
out
movsb
insb
sub
fiadds
xchg
mov
jmp
push
out
pushf
je
fistpll
call
clc
pop
xor
xchg
cmc
jl
pop
adc
repz
adc
or
pop
pop
or
add
movl
and
iret
pop
cwtl
adc
mov
out
cli
mov
loop
cmp
arpl
mov
sahf
add
cmpsl
into
cs
add
shl
test
dec
sbb
dec
mov
iret
dec
out
repz
push
outsb
pushf
int
mov
pop
sub
out
dec
mov
cmp
dec
fstl
adc
add
iret
add
sub
pop
sti
cmp
fcomp
cmpsb
mov
sbb
sub
xchg
shll
pop
push
mov
addr16
adc
scas
xor
ds
ret
push
mov
roll
and
jns
jb
out
lock
scas
push
lret
mov
or
stos
add
xchg
cmpsb
pop
xchg
sub
sub
into
clc
leave
js
lods
loop
jecxz
out
xchg
adc
ljmp
xchg
xor
inc
xchg
dec
inc
lcall
push
int
jge
sub
or
mov
push
mov
rolb
aam
jmp
loope
iret
xorb
xchg
cmp
movsl
xchg
add
out
ret
jl
pop
or
add
add
sub
jecxz
std
add
lods
xchg
or
ds
mov
and
daa
popf
enter
test
cld
push
mov
mov
dec
cmp
js
lret
push
lret
ljmp
lret
addb
or
pop
adc
loopne
rcr
test
sub
popa
inc
add
movsl
pushf
cmp
into
mov
in
mov
push
pop
sub
sti
mov
mov
pop
loop
call
in
mov
adc
fldt
fimull
jge
ja
je
icebp
mov
or
push
jecxz
int3
mov
sub
mov
xor
xor
or
movsb
jg
mov
icebp
fidivl
iret
and
mov
dec
movl
and
not
xchg
mov
push
lock
sarb
repnz
inc
ljmp
push
sbb
pop
jge
mov
jg
xlat
mov
jmp
movsb
push
sub
scas
xor
push
in
out
mov
fcmovnb
sbb
lret
aaa
xchg
push
fwait
pop
aam
imul
mov
jp
cmp
mov
push
outsb
adc
cmpsb
pop
pusha
mov
mov
mov
lods
pushf
les
stos
inc
fdivs
push
mov
push
xchg
push
imul
cmp
jle
xchg
out
hlt
aam
push
pop
adc
xchg
cmp
ljmp
je
movsb
pop
addb
cmpsl
sub
add
ja
int
adc
rclb
or
out
loopne
int3
mov
mov
daa
insl
adc
mov
dec
mov
lcall
mov
xchg
lods
add
sbb
pop
push
cltd
dec
or
and
and
pushf
add
ljmp
into
fnsave
adc
push
inc
hlt
adc
addr16
sbb
sub
add
add
jmp
xchg
hlt
ljmp
cmp
jae
icebp
je
flds
add
lods
sub
push
mov
dec
pop
fiadds
gs
data16
or
add
aam
dec
pop
cmpsb
xchg
aad
jmp
xchg
cmc
mov
out
jne
dec
mov
inc
daa
aam
push
into
adc
mov
popa
sbb
adc
test
xchg
shll
push
and
pop
inc
jp
xchg
in
ffreep
pusha
cmpsb
subb
jns
mov
stos
jecxz
cmpsl
fdivs
jno
cmp
out
inc
stc
bound
or
mov
mov
out
mov
mov
pop
xchg
rcrb
les
ret
inc
jle
sbb
bound
leave
cmc
mov
dec
mov
jne
dec
xchg
mov
or
or
xchg
mov
push
dec
popa
pushf
fistl
mov
push
dec
mov
movsl
jb
daa
mov
lea
movsl
movsl
mov
rcrb
mov
aaa
dec
push
idivl
mov
lds
push
aaa
xchg
or
jne
out
jbe
in
aad
mov
fcmovbe
lods
cmp
ss
push
jb
xor
test
sti
mulb
jmp
add
rorb
and
daa
xchg
addr16
addr16
xchg
in
pop
mov
je
jae
cmp
jmp
imul
sbb
movsl
jmp
mov
xlat
adc
rorb
push
adc
jmp
aad
mov
add
inc
xor
lock
hlt
add
or
sbb
loopne
push
jle
aad
out
push
push
aas
push
push
jmp
inc
inc
fsubrs
not
pushf
push
scas
push
or
mov
mov
inc
and
jecxz
jge
or
jecxz
outsl
scas
push
scas
sbb
cmc
jmp
daa
jo
push
ja
mov
add
and
mov
lds
arpl
jg
fmull
sub
add
sbb
mov
jp
cmc
insb
mov
insl
imul
cmp
dec
mov
push
pop
mov
ja
adc
add
clc
mov
dec
jecxz
rcl
xor
cmp
push
insl
ficoms
push
aam
mov
mov
pop
mov
push
and
pusha
xchg
dec
or
stc
sub
adc
rol
dec
mov
pusha
xchg
dec
outsb
cmc
jnp
pop
scas
enter
mov
test
or
cmp
adc
mov
xchg
push
mov
xlat
fsubrp
aad
ret
push
dec
mov
push
adc
daa
int3
pop
mov
mov
out
movsl
or
pushl
sub
xchg
and
aaa
mov
aam
pop
sub
test
and
pop
repz
imul
inc
fildll
adc
mov
dec
dec
mov
sahf
insb
rcrl
and
mov
pop
addr16
ss
pop
or
test
xchg
jnp
pop
xchg
mov
test
ficompl
cmp
aaa
push
popf
xchg
push
inc
lods
mov
add
shl
mov
ret
scas
or
xor
adc
or
aad
in
and
mov
dec
xlat
imul
out
xchg
inc
xchg
andb
mov
jae
movsl
scas
mov
push
pop
mov
xor
int
mov
movsb
inc
lahf
call
jne
es
outsb
loop
dec
jbe
cltd
mov
stos
adc
test
movq2dq
dec
pusha
or
iret
dec
push
inc
xlat
shlb
sub
or
inc
push
mov
push
jmp
push
ds
ret
dec
pop
pop
push
movsl
inc
shlb
xor
push
in
fcmove
sti
push
sub
sbb
xchg
jno
adc
xlat
pop
test
and
mov
into
popa
xchg
cmp
insl
dec
xchg
adc
push
rorb
cmp
stos
xchg
rcrl
js
pusha
cmp
ss
arpl
or
into
ret
mulb
rcrl
push
lds
pop
ljmp
nop
or
lock
inc
lret
icebp
push
out
or
sbb
dec
lods
mov
jle
imul
sub
jns
lsl
and
in
cmp
stos
fucomip
dec
jbe
mov
pop
jmp
mov
add
push
dec
ret
sbb
pop
js
call
xchg
enter
aam
adc
aas
mov
movsl
daa
adc
mov
xchg
push
lret
cs
pushf
cld
or
pop
jbe
fldcw
or
das
add
push
add
push
mov
inc
imull
push
jl
sbb
push
add
mov
jecxz
cltd
test
jns
mov
lahf
int
jne
xchg
adcl
sarb
setb
int
jno
gs
mov
xchg
loope
es
bound
push
mov
jbe
sub
push
xchg
pop
int3
jb
sbb
mov
sarl
orl
out
xor
popa
lahf
clc
fldenv
mov
fs
dec
jl
sub
mov
xor
fs
or
xor
scas
inc
mov
mov
movsl
fmulp
jne
cmc
cmpb
xchg
jmp
jg
push
lods
mov
aaa
pop
stos
inc
les
adc
shl
lods
jle
mov
and
add
les
popa
lods
out
in
or
jo
insl
push
and
fmuls
addl
jp
test
or
jne
jb
outsb
mov
lret
sbb
shl
pop
add
dec
aam
adc
cmp
into
sub
push
out
fldl
popf
or
xlat
addr16
mov
stos
jle
jg
sbb
mov
arpl
mov
pop
cltd
cmp
jo
popa
xchg
rclb
push
mov
stos
push
roll
in
lret
jg
xor
imul
pop
xchg
cmpsb
sbb
outsl
repnz
iret
mov
or
adc
ficompl
and
shll
scas
push
cmp
xor
test
popf
xlat
xchg
cmpl
jmp
jbe
dec
cmp
mov
sub
mov
sbb
mov
sbb
test
and
adc
xor
pusha
add
into
inc
insl
mov
int
call
mov
mov
inc
in
int3
lods
mov
jle
pushf
out
jae
xlat
js
mov
xchg
xchg
mov
jae
xchg
loopne
jnp
jae
popf
xchg
lcall
fstp
mov
xchg
inc
cs
filds
popa
mov
fdivs
inc
scas
and
push
fidivl
fcoml
clc
ret
sbb
enter
push
pop
xchg
and
ret
cmp
push
jg
and
xor
hlt
jle
mov
jae
lods
lds
mov
flds
cltd
pop
out
test
in
fdivs
mov
sbb
mov
pop
add
jb
cltd
dec
popf
xor
fisubs
cmp
push
mov
ja
je
int3
leave
xchg
cmc
outsl
fisttpl
mov
add
push
mov
and
cs
mov
mov
pmaxsw
xor
fwait
scas
inc
dec
push
dec
les
into
or
mov
movsb
cmp
popa
fs
mov
push
call
pop
cmpsl
and
scas
aas
dec
inc
push
lods
test
jecxz
add
adc
aad
inc
lret
jmp
push
inc
xchg
loopne
ljmp
inc
cmp
mov
dec
mov
push
cmpsb
out
stos
in
dec
fcomps
into
mov
xor
mov
in
and
test
xorb
jo
ret
rol
das
lods
push
push
xor
xor
xchg
or
js
into
sbb
pop
adc
addr16
push
xchg
mov
mov
mov
mov
or
rol
push
xor
popa
bound
sbb
movsl
pop
adc
mov
scas
cltd
inc
in
inc
xchg
add
out
js
sub
popf
xor
push
fwait
add
jl
pusha
ss
pop
push
ljmp
pop
xchg
outsb
xchg
addr16
out
jae
test
mov
jo
neg
loopne
lret
jbe
pop
shlb
mov
mov
mov
or
inc
out
push
sbb
aas
cmc
les
and
jl
mov
inc
add
push
mov
jno
jp
add
fdivs
jmp
xchg
shld
push
push
sti
shll
push
in
ss
add
mov
addr16
push
cli
xor
ja
inc
cmp
sahf
test
cmp
popf
sbb
lea
or
cmc
sbb
fistps
rcrl
mov
ror
stos
xchg
push
add
sub
nop
stos
insl
sub
xor
dec
add
cwtl
xchg
push
and
sub
scas
jnp
push
stos
notb
push
outsl
sub
jecxz
mov
fisubrs
hlt
pop
sahf
inc
inc
stos
xor
xchg
dec
insb
ret
push
out
out
push
shll
imul
fadds
add
lock
jp
stos
mov
test
gs
add
push
or
jge
insb
loop
pop
inc
xchg
leave
sbb
xor
cwtl
sub
mov
jbe
add
into
cmc
or
arpl
out
mov
jmp
xchg
push
mov
movsl
pop
lods
xchg
fistl
xor
pop
cli
jge
outsb
xchg
inc
mov
das
out
cmp
and
int3
shr
aad
ret
flds
jnp
mov
push
or
pop
jne
frstor
sub
adc
inc
dec
ss
faddl
mov
movsl
add
aas
mov
add
pop
sbb
ja
cld
jl
xchg
repnz
pop
out
out
out
push
lret
push
inc
jl
sbb
xor
ds
imul
dec
and
outsl
jl
rcrb
jb
sbb
sbb
or
mov
mov
iret
dec
sbb
icebp
popf
fsubrp
aaa
bound
daa
int
or
cmp
rcrb
movsb
lds
data16
or
adc
add
fstps
int3
xor
jnp
in
out
sub
ret
out
outsb
leave
shlb
sub
movups
lahf
or
sbb
in
rcrb
jmp
add
push
and
lods
mov
lret
in
mov
push
mov
int3
test
popa
dec
xchg
jae
add
in
xor
push
push
jle
scas
dec
insl
push
or
xor
fwait
push
mov
movsb
sbb
notb
nop
mov
adc
cmpsb
pavgw
jbe
sahf
xchg
add
mov
push
pusha
jno
adc
sbb
jae
and
aam
and
movsl
inc
jg
pop
pop
and
push
cmp
xor
repz
push
cmc
imul
into
adc
in
or
lock
cmpsb
ss
pop
test
repz
imul
adc
dec
mov
lcall
push
aam
pushf
jg
arpl
mov
mov
lret
fwait
cbtw
push
cltd
xchg
scas
mov
mov
fadds
into
aad
jmp
xor
mov
incb
out
mov
in
std
or
into
sbb
jl
rcl
sub
movl
testb
iret
insb
add
dec
ret
in
movsl
and
jb
test
mov
pop
hlt
sub
imul
sarb
cmpsl
jne
xchg
sub
xor
ja
enter
les
inc
into
push
nop
jmp
jbe
loop
or
sarl
shrb
jecxz
push
popf
incl
lahf
xlat
push
call
jmp
push
and
or
add
jg
sub
das
mov
clc
cmpsl
pop
mov
pop
dec
int
fyl2x
add
loop
int
dec
mov
add
movsl
jmp
ret
shll
xor
pop
and
and
arpl
cs
imul
xchg
lret
jb
std
jp
fisttpll
sbb
cmpb
mov
pop
xchg
orl
sbb
xchg
sbb
or
stc
mov
jne
pop
jg
xor
add
push
add
shll
imul
sub
adc
das
cmpsl
pusha
mov
adc
daa
notb
sarl
push
adc
aaa
negl
pop
push
insb
mov
cli
repz
popa
mov
fidivs
pop
loope
sahf
mov
adcb
movsl
xchg
out
je
add
cltd
lret
aas
adc
push
push
fmul
lret
xor
enter
jne
std
cmpsb
sub
jge
jae
ficoms
pop
sti
jnp
je
in
push
movsb
int3
aaa
xchg
ds
xor
enter
or
std
addr16
repnz
cmpsl
mov
mov
cmp
sub
sbb
dec
pop
lcall
sbbl
cmp
xchg
adc
sbb
movsb
mov
lods
cs
into
add
stos
mov
out
mov
sub
out
movsb
rorb
jne
clc
popfw
push
shl
rcll
push
sbbb
inc
adc
bswap
hlt
push
ret
je
jge
ret
dec
mov
xchg
les
cmp
pushf
mov
out
int
jno
dec
add
jmp
xchg
mov
sbb
dec
movl
sub
loop
xchg
pop
mov
in
pop
and
pusha
bnd
arpl
push
xchg
popf
add
xchg
dec
cmpsl
fwait
push
mov
out
fidivrl
adc
add
jp
or
les
or
cmp
pop
add
into
sarb
fwait
sbb
cmc
sti
sub
ficompl
jns
stc
jge
mov
mov
adc
inc
or
add
repz
mov
out
or
inc
pop
xchg
pop
ljmp
insl
add
pop
push
or
dec
xchg
sbb
xor
decl
outsl
lcall
mov
ja
push
sub
mov
frstor
sbb
adc
ds
repnz
sub
sarl
dec
add
fcmovbe
sbb
enter
inc
mov
mov
cmpsl
aad
clc
jecxz
insb
add
xorb
mov
inc
or
inc
leave
add
cmp
shrl
push
mov
lds
push
stos
mov
lea
flds
imul
rclb
les
adc
pop
mov
int3
pop
and
jne
push
sub
pop
scas
pop
dec
push
lea
testb
ret
fwait
push
mov
outsb
es
jbe
inc
jle
mov
inc
sub
mov
cmp
out
aaa
or
adc
or
ja
insl
cli
lods
int3
stc
test
xchg
cmp
inc
rcl
jno
std
out
cmpsl
jb
int
push
aas
mov
cmp
mov
xor
cli
je
aad
mov
test
xlat
loop
ss
lahf
adc
jo
mov
cmp
aaa
mov
scas
cwtl
pop
popa
and
push
stc
es
cmp
je
sti
xchg
ret
ja
cmpsl
cmpsb
adc
add
dec
cmpl
dec
arpl
push
mov
sarb
call
cmp
mov
mov
shl
mov
cmpsl
xchg
in
sbb
jge
mov
addl
stos
pop
mov
mov
xlat
or
mov
popa
cmp
nop
sub
pop
mov
xchg
cmp
push
repz
in
out
mov
in
test
add
jle
sub
ljmp
ret
jae
leave
lea
test
imul
cmp
mov
in
imul
inc
rcr
add
mov
jbe
sub
stc
rol
jge
test
adc
or
enter
stos
ds
sbb
mov
ret
mov
hlt
shll
add
out
xchg
mov
sub
cmp
mov
add
out
leave
xchg
push
inc
in
andps
out
xchg
inc
push
and
xor
insb
rcl
cmp
leave
jnp
rolb
sbb
popa
lahf
std
icebp
ss
xor
ja
jg
repnz
xor
adc
push
movsl
shll
push
insb
and
pop
insb
add
xchg
inc
cmp
popf
jmp
cld
cmp
aam
fwait
imul
mov
loope
add
add
je
mov
test
cmp
adc
push
test
leave
test
pop
or
dec
push
addl
enter
adc
and
jle
ja
loopne
in
clc
test
lret
pop
push
push
jno
ret
shll
cmp
xchg
adc
sub
jbe
pusha
lcall
lods
sar
lds
xchg
es
std
xchg
dec
push
xchg
mov
rcrl
pop
out
aad
xchg
dec
jb
mov
es
cmp
jb
mov
aam
push
int3
fidivs
mov
dec
mov
mov
fwait
ljmp
add
lret
pop
int3
mov
xchg
pusha
cld
xor
jecxz
pop
or
sub
mov
xchg
imul
mov
sti
movsl
dec
jecxz
imul
inc
testl
lahf
cmc
add
dec
cld
mov
sub
xchg
clc
aaa
cmc
inc
add
jmp
iret
jae
and
xlat
jns
mov
fwait
out
inc
push
mov
inc
in
push
aas
mov
xor
or
dec
int3
lret
cli
xchg
xchg
pop
mov
jne
jbe
int3
scas
cmp
xchg
jecxz
shrl
lret
inc
imul
sahf
cmp
call
sbb
push
mov
std
adc
out
fimull
mov
push
cmc
or
fidivrl
rclb
lret
sub
loop
or
jbe
ds
pop
xor
push
xchg
rcr
cmpsl
xchg
inc
lret
cmp
mov
sub
test
shlb
xlat
jne
pusha
test
dec
xor
jne
ds
enter
data16
fimull
sbb
xchg
movsl
scas
lds
mov
inc
ret
pop
aas
cmp
fsubrl
sbb
lock
pop
sbb
ds
dec
cmpsl
in
cmp
push
adc
jb
leave
negl
cwtl
mov
nop
es
add
scas
push
scas
cmc
mov
fsincos
pop
inc
add
lcall
aaa
xchg
xor
mov
iret
xchg
jno
add
sub
xchg
sub
pop
das
ret
in
lret
fs
push
out
dec
inc
mov
scas
gs
movsb
jo
rorb
jp
daa
adc
fwait
mov
adcl
xchg
je
outsl
lret
daa
mov
jl
fsubs
add
out
sbb
das
lahf
jno
jo
cmp
cld
push
xor
js
insl
push
xor
mov
mov
jg
jae
out
push
fildl
xor
sub
rclb
das
xchg
idivb
loopne
add
sub
and
mov
push
or
lock
clc
pop
imul
leave
cmc
mov
sbb
pushf
dec
dec
sar
lock
push
and
sub
xchg
xchg
fiaddl
out
xor
sub
in
inc
ret
jle
push
hlt
outsl
jecxz
push
push
sub
call
in
xor
or
cwtl
outsl
add
mov
cmp
adc
repnz
pop
pop
call
adc
dec
testb
rcr
xchg
xlat
pop
add
jb
out
mov
mov
jb
mov
and
cmpsb
arpl
lock
jbe
in
mov
dec
test
ljmp
sahf
cltd
jns
push
xchg
repz
loop
es
pop
gs
lret
xchg
jbe
jp
mov
or
stos
inc
scas
lods
dec
sub
loop
js
mov
sub
pop
xchg
cmovg
movl
inc
les
ja
js
and
cmp
mov
add
pop
fistl
call
imul
sbb
subl
sub
or
sbb
mov
jno
std
stos
push
dec
rol
aas
cltd
sbb
mov
in
lret
enter
xchg
xchg
jge
jae
push
lret
popa
xrelease
imul
daa
push
jno
pop
jbe
pop
mov
int3
ss
or
mov
mov
iret
or
into
xchg
jo
loope
pusha
mov
enter
sahf
mov
adc
xor
pop
inc
mov
out
xor
cmp
sahf
outsl
sbb
filds
int3
mov
out
inc
mov
lret
testb
imul
add
jne
fadds
xchg
and
cmp
xchg
or
jnp
or
jne
sub
sbb
adc
push
aas
ror
arpl
push
fs
pop
add
dec
inc
scas
and
js
hlt
xchg
shrb
jns
dec
andl
into
and
movl
dec
mov
popf
addr16
ror
mov
pushf
add
inc
enter
jmp
cmp
push
push
test
mov
es
loopne
mov
mov
movsl
stos
jl
sub
jbe
fisttpl
add
add
adc
xlat
xchg
and
cmpsb
dec
mov
jns
mov
xor
sbbl
arpl
jo
xchg
js
and
cltd
or
mov
lods
addr16
lds
cmc
xor
sub
rolb
dec
pop
nop
adc
outsb
fsubl
push
cmp
je
subl
mov
inc
pusha
add
call
idivl
addr16
inc
xchg
cltd
loope
and
cli
gs
loop
cld
or
sub
mov
sti
cltd
add
ss
jmp
mov
outsb
jo
add
mov
adc
test
loope
iret
flds
fdivrs
cmpsl
and
std
push
lea
push
or
mov
lahf
je
fnstenv
fwait
mov
cmp
hlt
xor
or
in
cmp
int3
mov
les
leave
mov
fwait
shr
jne
lods
sub
cmp
jg
cmp
sbb
sub
inc
adc
iret
lods
dec
inc
lcall
push
xor
repnz
cmc
xchg
mov
sub
pop
push
bound
out
xor
lret
mov
jo
and
ljmp
add
push
int3
scas
stos
xor
aam
jb
mov
imul
sub
cld
lcall
bnd
fldl
adc
mov
mov
stos
adc
movsl
mov
xlat
frstor
push
xchg
hlt
jg
mov
es
test
xor
lcall
add
xchg
mov
subl
xchg
rcll
sbb
xor
jp
fstpt
jge
imul
or
mov
repnz
aas
inc
inc
fildl
test
int
sub
in
push
xchg
sub
fwait
jnp
mov
adc
push
mov
lret
and
popa
push
js
loopne
sub
mov
xchg
sub
xchg
dec
aaa
iret
sub
dec
fidivrl
shrl
shrb
cld
popa
stos
out
cmp
pop
sub
lods
pop
shr
fwait
in
cmpsl
inc
clc
lret
ja
jo
out
sub
bound
jmp
mov
gs
int3
in
pop
lods
jp
dec
xchg
clc
or
out
std
cwtl
dec
es
xor
adc
ret
add
lods
inc
int
jp
xor
leave
and
jmp
lret
mov
icebp
es
scas
into
dec
xchg
push
cltd
mov
data16
repz
lock
pop
push
mov
call
pushf
fdiv
and
lock
dec
mov
testb
pop
repnz
adc
aad
cmp
ret
push
jmp
xchg
pop
mov
test
xor
jp
rclb
push
call
aam
leave
inc
pop
ds
insl
xor
lahf
das
fcmovbe
lret
pop
push
push
and
shll
shlb
sbb
and
push
jmp
movsl
jp
dec
cs
bound
and
lahf
jne,pt
or
movsl
mov
xchg
or
cmp
push
les
rcl
cld
sub
clc
lcall
fcoml
enter
mov
pusha
pop
scas
mov
je
adc
pop
dec
sub
in
fistl
mov
aam
icebp
pop
mov
addr16
jne
in
outsb
inc
cwtl
push
sbb
xchg
adc
ret
into
aas
or
ja
fisubl
insb
sbb
out
mov
movsb
push
dec
push
in
ror
mov
jg
push
nop
mov
or
add
loopne
iret
int3
xchg
jno
inc
mov
and
push
sub
jnp
in
push
or
pushf
adc
push
inc
sbb
dec
aas
fdivrp
and
jno
or
sbb
jns
rorl
mov
sbb
int3
pop
push
das
mov
data16
and
mov
inc
mov
xor
imul
out
ja
mov
dec
pop
lret
and
pop
into
shlb
xchg
leave
imul
jle
pop
dec
mov
into
add
pusha
jmp
fcmovnbe
or
inc
xorl
leave
mov
and
loopne
jne
out
jecxz
xchg
push
and
les
xchg
inc
enter
adc
dec
push
xchg
repz
outsb
xchg
aad
sub
int3
lds
iret
pop
push
xchg
add
jns
mov
es
and
into
ljmp
out
sbb
pop
mov
jns
mov
push
test
cmp
push
int
pop
fs
pop
cmp
insb
stc
pop
mov
dec
dec
ds
test
or
dec
in
shrb
xchg
jno
data16
or
into
sarl
push
lods
movsl
sarl
dec
add
fwait
aaa
test
out
lahf
leave
push
xor
lea
push
ljmp
adc
cmpb
movsb
into
push
cltd
ja
daa
sarl
dec
pop
pop
pop
push
or
cs
popf
ds
add
adc
aam
shlb
xlat
or
mov
dec
inc
xor
stos
lods
lret
jmp
push
jno
inc
or
sti
and
jecxz
adc
out
mov
xchg
fldt
mov
sbbb
dec
mov
cmp
mov
push
jno
icebp
fdivp
stc
sub
je
push
lods
sub
movsl
cmpsl
lret
daa
inc
pop
cmp
loop
jb
out
jg
daa
inc
and
ljmp
or
cmpsl
rcrb
push
inc
mov
xchg
int3
call
or
dec
data16
fisubrl
ss
popf
and
cmp
mov
pop
push
mov
out
loope
mov
fwait
mov
ja
loopne
fbld
add
aaa
sbb
mov
scas
push
mov
pop
rcr
pop
ja
xor
cli
mov
push
or
test
sahf
add
decb
add
ss
sbb
xchg
int3
cltd
dec
pop
adc
cmp
cmpsl
sbb
push
cmp
outsb
mov
xchg
pop
cltd
jbe
xchg
dec
stos
int3
repz
xor
mov
daa
in
inc
sub
fs
imul
popf
xor
int
mov
push
mov
inc
pop
jmp
xorl
out
arpl
scas
int
and
dec
insb
mov
pop
and
out
clc
ds
insl
push
sbb
mov
mov
push
xor
adc
mov
fisttps
mov
add
mov
cmpsb
imul
inc
out
hlt
es
jbe
fadd
rcr
lods
sub
pop
push
nop
push
pop
pop
loop
popf
push
add
mov
bound
aaa
adc
pop
jl
testb
movsb
sub
sbb
xchg
lds
inc
push
jo
movsl
testb
lahf
sub
imull
call
ja
loop
leave
call
xor
fs
xor
imul
clc
sbb
xchg
inc
rcrl
inc
mov
lods
fs
ljmp
lea
push
test
lret
cli
mov
dec
mov
shll
pop
es
in
adc
pop
dec
movsb
data16
adc
lock
add
aad
test
cmp
shll
fistl
inc
stos
fiaddl
cmp
stos
xchg
mov
pop
es
ja
scas
into
dec
adc
insb
mov
in
pushf
xor
repz
mov
lret
orl
mov
ds
arpl
sbb
test
out
lret
test
fldenv
mov
sub
mov
sarl
sub
repz
imul
sub
sti
cmp
dec
xchg
lock
lods
sub
mov
inc
stos
loope
or
cmpsb
pop
lock
je
shll
cmc
mov
xor
imul
test
popf
fcompl
adc
aas
lret
xchg
and
aam
push
or
xlat
sub
stos
aam
in
or
mov
dec
test
out
pop
xchg
rorl
cmc
dec
push
cmpsl
inc
aas
cmp
cmp
xor
das
fnstenv
sub
je
jl
or
addr16
sub
push
push
cmp
mov
pop
aam
sbb
ljmp
mov
push
into
mov
into
imul
adc
int
dec
lahf
xor
dec
icebp
inc
test
test
mov
push
and
add
jno
sub
imul
mov
aaa
cmpsb
mov
pop
pop
or
in
sub
inc
mov
and
sbb
mov
mov
pop
push
pop
sarb
push
icebp
std
js
in
mov
fwait
insb
mov
out
cltd
ret
jnp
jp
dec
lods
pop
jbe
jae
cmp
pop
xor
add
pop
leave
leave
xchg
into
and
js
cmp
in
mov
jo
push
int3
and
in
sub
dec
xor
js
jmp
pop
xor
add
not
ds
fldl
xchg
push
push
int
loope
fldt
xor
jbe
ret
cmpsb
fbstp
fwait
xor
xchg
lcall
fisttpl
sti
and
and
in
test
jns
lret
sub
mov
sbb
pop
add
ret
out
repz
mov
sub
mov
cmc
jno
out
and
mov
cmp
adc
jne
push
adc
push
lahf
cmp
fimull
dec
mov
mov
and
push
dec
lods
imul
push
or
push
mov
out
jl
cltd
cmp
jmp
push
js
or
push
mov
mov
jmp
adc
rclb
orb
and
in
rol
push
mov
mov
dec
add
enter
pop
popf
or
les
and
ret
sbb
and
xor
mov
push
push
jl
ret
dec
stos
aas
push
icebp
jecxz
test
dec
sub
push
push
jne
in
mov
repnz
or
pop
mov
jp
mov
aas
test
cmp
out
push
mov
dec
shlb
mov
pusha
xor
and
jno
jle
sub
dec
nop
dec
jg
adc
sub
adc
cltd
gs
pop
rclb
ret
pusha
test
cmp
mov
xor
insb
pop
pusha
leave
lahf
adc
movsl
push
inc
inc
insl
scas
movsl
inc
into
pushf
movl
jg
pop
fisubs
addr16
push
jno
pop
sub
js
insl
rolb
hlt
test
lret
stc
dec
inc
outsb
cmp
dec
in
lock
mov
adc
cmp
add
ret
enter
imul
call
xor
adc
ljmp
jl
popa
dec
sbb
jbe,pn
pop
pop
jg
inc
cmp
or
push
adc
add
lea
fwait
jns
xchg
mov
push
mov
jae
insl
cwtl
dec
sbb
loop
jmp
or
mov
repz
push
inc
mov
sub
jo
mov
cmp
push
clc
mov
add
jae
aam
test
das
nop
in
push
or
repz
insl
adc
push
push
cmp
test
fstpl
fcoms
sub
jno
xchg
mov
push
mov
mov
dec
je
loopne
fimull
aaa
aad
int
add
mov
inc
mov
test
xor
mov
hlt
ds
repz
xlat
imul
sub
cli
outsb
lods
into
push
push
adc
and
sub
sti
or
je
cld
jo
js
jmp
ja
lods
jo
sahf
xchg
negb
mov
cli
jno
dec
mov
rolb
dec
xchg
pop
lock
dec
aam
sub
add
lods
mov
faddl
fidivs
out
sti
imul
push
mov
repz
cs
lods
sahf
nop
out
jno
movsl
push
int
cmp
rcrl
dec
movsb
clc
dec
out
imull
ljmp
xchg
dec
adc
mov
adc
dec
stc
jge
or
lods
in
adc
sbb
jle
pop
push
popa
ds
fwait
push
mov
mov
push
into
push
inc
lret
pop
stc
rcll
in
outsl
push
dec
xlat
test
mov
fwait
xor
ds
mov
or
adc
pop
sub
xor
or
lods
andl
scas
mov
dec
test
cmpsb
sar
fildll
js
sub
cmc
je
sbb
int
in
mov
xorb
fstpt
jo
jb
outsb
insb
xchg
adc
push
cs
jge
sub
cmp
add
jp
xor
push
xor
frstor
movsb
fists
jb
out
adcb
stos
lock
cmc
sub
mov
clc
dec
jnp
arpl
sbb
int3
xchg
ret
mov
and
sub
stos
js
mov
push
stc
cltd
lock
dec
or
test
lods
add
lret
and
out
sahf
sbb
xchg
xor
add
stos
dec
movsl
lcall
pop
jmp
in
movsl
xor
fdivl
or
int3
pop
dec
mov
data16
sbb
add
sarb
cmpsl
outsb
push
test
jne
loopne
call
add
cmpsb
test
mov
icebp
pop
adc
sub
jns
push
in
and
les
mov
sub
addr16
pop
mov
adc
aam
sbb
sub
dec
subl
in
int3
pop
xor
nop
cmp
and
mov
stos
fwait
xlat
shrb
pop
jl
sbb
lods
xchg
push
jno,pn
iret
push
pop
imul
cmp
xchg
mov
mov
add
rcl
push
and
inc
pop
and
fdivl
xchg
lret
lcall
into
xchg
addr16
cld
pop
mov
xchg
lcall
and
outsl
rcl
inc
or
sti
out
test
cmp
xor
mov
in
jbe
jmp
aaa
clc
bound
jne
mulps
or
popf
mov
dec
idiv
jbe
jb
mov
sbb
jmp
ret
jmp
xchg
push
jg
sub
movsl
pop
clc
test
test
fcoms
xchg
ljmp
push
adc
ds
inc
aam
fcomps
sub
dec
add
cmp
cmp
imul
sti
fdivl
out
aam
icebp
ret
stos
xchg
add
push
xchg
faddp
cmp
push
or
adcb
push
jae
int3
mov
ss
loope
xchg
dec
pop
sub
popf
orl
imul
jbe
or
aam
cmpsb
push
mov
divb
leave
xchg
mov
or
push
mov
jg
push
pop
fldt
dec
orl
jbe
xchg
out
add
mov
mov
je
lret
int
rorl
das
sti
addr16
pop
xor
cmp
mov
shlb
int3
lods
stos
arpl
jne
fmull
lahf
popf
mov
into
cmc
sbb
movq2dq
popa
outsb
or
xchg
popf
test
mov
push
sbb
inc
xor
out
scas
hlt
fmul
les
add
mov
inc
rclb
mov
cmpsl
ss
adc
adc
cmc
add
jbe
push
and
mov
cmp
int3
pop
mov
cmc
lds
not
mov
inc
push
int3
stc
aad
adc
into
repnz
fwait
lods
push
mov
jp
sbb
cmp
repz
sar
cmp
xor
in
enter
leave
fwait
addr16
jge
cmpsl
outsb
ja
scas
xchg
not
into
nop
mov
hlt
pop
mov
jbe
pop
enter
jmp
mov
adc
sub
popf
repz
jg
mov
testb
cmc
inc
and
lea
cld
xor
cmp
test
or
enter
lcall
add
scas
inc
push
leave
sbb
inc
imulb
xor
outsb
mov
pop
arpl
sbb
out
xchg
cltd
out
lods
adc
xor
xor
stos
and
sub
jl
out
scas
int
ja
stos
push
xchg
pop
imul
push
loopne
daa
jmp
call
hlt
shll
lock
ljmp
mov
loope
je
cmc
fwait
enter
jbe
sahf
scas
jns
idivl
cltd
xor
add
sarb
loopne
pop
jo
ds
loope
jge
pop
imull
inc
fwait
jne
test
push
inc
jnp
push
sbb
push
shrb
or
movsb
dec
and
cmc
pop
js
add
push
mov
push
mov
inc
jbe
sahf
xchg
mov
push
jne
mov
push
mov
xchg
pop
dec
outsl
lods
nop
incb
xchg
mov
imul
adc
xchg
jge
lahf
stc
adc
xchg
aam
rorl
xor
dec
xor
lcall
in
and
test
adc
jmp
outsb
adc
sub
iret
pusha
push
xlat
mov
sahf
cltd
push
xor
call
xchg
shrb
jg
cli
xor
sbb
jno
xchg
jo
int
pop
or
jg
xlat
mov
rcl
sbb
jne
repnz
adc
lcall
mov
scas
mov
fcoms
cmp
out
lods
adc
out
inc
or
iret
movsl
adc
cmp
dec
nop
dec
lret
lock
jp
jge
push
ret
adc
fiaddl
shufps
out
cmc
decl
out
add
jmp
or
dec
sub
iret
jg
rolb
push
xchg
mov
cmp
jmp
icebp
fadds
ret
jl
loope
pop
sub
loop
dec
sub
popf
ror
xchg
mov
dec
pop
cli
in
inc
insb
lret
test
jmp
fnstenv
ss
xor
insl
add
mov
sbb
lcall
pop
adc
int3
enter
sti
push
xchg
xchg
popa
or
nop
dec
add
dec
jmp
mov
repz
cli
and
lahf
mov
gs
test
je
sbb
insl
mov
add
cmp
sbb
mov
jmp
loopne
xchg
clc
cmc
test
sub
dec
mov
sbbl
test
cmp
insb
jns
pop
out
and
add
pop
sub
xchg
xor
movsl
call
fldt
add
repnz
adc
cmp
or
pusha
inc
leave
pop
mov
test
test
fsubrs
inc
mov
mov
sbb
adc
lds
inc
pusha
rorb
and
mov
jmp
adc
adc
lret
or
out
mov
jno
or
adc
sbb
gs
pop
into
lret
dec
push
mov
cmp
lock
push
inc
mov
or
into
cmp
pop
adc
inc
adc
mov
jne
int3
xchg
lret
nop
dec
pop
xor
jne
iret
imul
stc
jmp
pop
xchg
xor
mov
add
mov
insl
in
inc
cmp
or
ffree
loop
xchg
leave
cmp
es
adc
sbb
int
adc
testl
loop
cmpsl
les
xchg
insb
mov
mov
jne
ds
mov
cmc
aad
xchg
lcall
xor
jl
adcl
add
movsb
je
lcall
or
fwait
jo
mov
pop
icebp
mov
notb
out
ret
jne
add
pushf
push
mov
int
addb
push
movsb
add
mov
lret
cmovp
or
mov
dec
insb
ret
adc
mov
sarl
adc
enter
xchg
fdivs
imulb
mov
or
and
jecxz
or
les
insl
mov
ror
mov
in
sub
adc
xchg
xor
lret
push
inc
bound
into
shrl
dec
xlat
mov
enter
cmpsb
push
cmp
dec
arpl
fwait
jg
pushf
jle
js
into
push
mov
or
dec
push
fstpl
ret
lcall
jle
or
mov
pushf
push
or
xchg
dec
and
fnstenv
pop
out
jp
xchg
popl
rolb
and
es
fsubl
rorl
je
test
imul
pop
adc
mov
push
test
fcmovnb
ror
sbb
push
aaa
les
push
and
cmp
into
jle
inc
or
mov
adc
mov
out
and
inc
xchg
clc
aam
sub
jmp
jb
jbe
bound
add
test
dec
xor
sbb
mov
add
scas
mov
movsb
jecxz
addr16
rorl
cmp
scas
leave
cli
inc
jo
adc
pop
jle
mov
rcrl
add
cmpsl
inc
sar
sahf
push
mov
mov
or
insl
xchg
xchg
push
mov
into
inc
pop
lcall
jnp
dec
dec
rcl
mov
pop
xor
out
inc
push
std
cmp
lds
xchg
es
not
mov
in
mov
pop
mov
aam
mov
push
fstp
scas
sub
cwtl
xchg
fisttpl
push
push
in
or
in
mov
jge
out
rcrb
push
sub
lret
rolb
mov
fnstsw
cmpsl
inc
loopne
in
lahf
test
pop
jge
lret
push
xchg
mov
jbe
cmpsl
xchg
dec
adcb
push
push
cmpb
addr16
sub
loope
pop
arpl
mov
mov
mov
pusha
sti
mov
stos
push
rcrb
mov
push
ds
and
aaa
add
pop
clc
scas
jbe
dec
les
fcmove
inc
jnp
call
mov
push
outsb
sarl
xchg
xchg
cmp
ds
lea
push
popa
add
mov
data16
lods
sahf
into
icebp
cmp
cmp
test
je
dec
push
imul
in
mov
push
push
mov
cs
in
add
or
cmp
sbb
insl
ss
lret
mov
dec
or
cmp
inc
push
jecxz
cli
aam
sbb
aaa
add
adc
and
lahf
flds
pop
mov
mov
dec
mov
mov
jle
cltd
jne
out
data16
sub
push
fistps
mov
push
daa
mov
shlb
inc
fimull
iret
push
unpcklps
inc
inc
subb
loope
mov
xchg
cmp
jno
mov
sbb
and
xor
out
push
cmp
out
sahf
xor
and
and
daa
mov
out
push
insb
repnz
sub
int3
jne
jno
into
mov
aaa
xchg
repz
lock
push
es
cltd
pop
les
adc
push
inc
xchg
xchg
shlb
add
lcall
xchg
pop
repz
test
mov
into
insl
inc
repz
pop
mov
arpl
fiadds
mov
popf
fbstp
jb
movsb
out
fwait
jbe
pop
mov
lret
sub
mov
loop
mov
out
test
pop
or
je
movsl
mov
lahf
jo
add
lahf
and
sub
popa
mov
fcmovu
cmc
fstps
sahf
ds
inc
jnp
pop
pop
or
loope
fs
imul
sub
cld
inc
jl
and
out
js
adc
xchg
leave
add
pop
loopne
add
rclb
out
mov
imul
leave
frstor
out
lea
cli
cld
jg
lcall
sar
or
mov
jmp
das
bound
sbb
jle
mov
jns
mov
jmp
scas
pop
add
sub
aad
sub
lahf
and
or
or
mov
inc
adc
add
mov
xchg
aad
test
mov
mov
enter
scas
mov
sub
in
ja
xchg
push
jmp
sbb
ficoml
std
iret
repnz
pop
icebp
push
mov
sbb
cld
dec
out
in
hlt
sahf
xchg
lcall
jne
inc
dec
lds
add
out
roll
xchg
test
dec
mov
cmp
jne
jnp
xchg
ljmp
push
aas
mov
or
push
push
cmp
jns
cmp
adc
into
inc
cmp
sbb
jp
sbb
jle
std
dec
mov
loop
fdivr
jp
add
imul
insb
movsl
lock
lds
push
outsb
jp
add
int3
out
enter
pop
jg
lds
or
scas
js
loope
or
bound
adc
sarb
cmp
lahf
lock
sarl
test
ja
jecxz
sub
mov
in
sbb
ljmp
inc
cmp
outsb
in
push
cwtl
aam
pop
dec
aad
andl
popa
add
inc
out
mov
das
xchg
loopne
pop
sub
cmp
repnz
or
data16
ljmp
push
jl
sub
jae
not
sahf
xchg
out
and
mov
lret
movsb
ds
jne
mov
je
addr16
pop
cmp
lret
mov
cs
mov
push
data16
xchg
rcrb
gs
mov
add
fmuls
jl
je
dec
fadds
repz
mov
outsb
push
dec
shll
sbb
mov
sti
rcl
adc
std
test
in
cmpsl
jno
xchg
cs
xor
jnp
adc
sub
or
lods
mov
call
push
jmp
xchg
dec
mov
iret
pushl
sub
pop
and
xchg
jecxz
jae
lods
frstor
jo
push
cwtl
lahf
lret
lret
and
and
subb
lahf
add
add
jecxz
out
popf
ficoms
jo
int3
dec
arpl
xchg
pop
cltd
ficompl
out
pop
push
add
and
loopne
fldcw
pop
stos
sbb
jne
cld
gs
pop
insb
jo
xchg
adc
mov
inc
lcall
jbe
nop
sbb
fsubs
mov
jecxz
test
xor
sub
xlat
inc
sbb
push
jp
push
into
xor
inc
aas
test
mov
pushf
inc
sbb
in
test
lods
scas
mov
mov
mov
pop
ds
cmpsb
imul
es
and
pushf
imul
push
add
xor
jmp
inc
iret
mov
lahf
mov
jmp
sbb
push
aaa
imul
cmp
adc
out
sbb
loope
and
fdivrl
pushf
test
sbb
shl
jbe
ret
jo
loopne
cltd
sub
adc
sbbl
aas
inc
lret
pop
fdivs
mov
rolb
jle
mov
lret
mov
push
push
inc
sbb
xchg
in
xlat
cmp
dec
mov
in
cmp
mov
scas
adc
adc
and
inc
ljmp
add
hlt
mov
fwait
mov
sub
lret
test
adc
insb
fistpll
shll
xchg
shrl
addr16
lea
sbb
insb
movsb
xchg
decb
cmp
and
dec
movsb
aaa
cmp
sahf
insl
mov
add
jbe
jo
nop
xchg
mov
jp
xlat
fisttpll
fcmovnbe
xchg
aad
in
add
je
iret
rorl
mov
and
push
rep
movsl
cmc
jnp
into
xor
push
in
cli
ss
jmp
loopne
ja
outsl
out
addr16
fadds
loopne
scas
popf
sbb
push
mov
mov
adc
lret
or
add
cmp
jp
mov
mov
mov
lea
popf
cmpsb
pop
push
pop
mov
push
int3
mov
pop
dec
add
mov
add
sti
xchg
sub
jno
dec
es
lods
into
pop
push
dec
test
scas
add
out
int
xchg
rol
pop
add
or
out
jb
push
popf
cmp
inc
jecxz
cmp
enter
push
inc
sbb
addr16
sub
adc
in
mov
or
ss
pop
sbb
sbb
sbbb
adc
inc
negb
xorl
stos
adc
enter
jae
mul
push
shll
fistl
bound
jbe
and
movsb
mov
mov
xor
imul
jne
ret
xchg
xchg
push
out
xchg
jmp
fcmovb
or
mov
add
fsubrl
scas
repnz
lretw
insl
test
add
cmpsb
jno
sbb
iret
out
lret
outsb
out
and
lret
rcrl
xchg
dec
fwait
popa
add
push
out
scas
jmp
fwait
sbb
data16
push
ret
push
clc
lahf
in
push
icebp
shll
mov
into
add
dec
pop
adc
push
out
pop
mov
scas
inc
push
pop
or
out
xchg
int
ss
aam
imul
aad
sub
push
fdivr
cmp
mov
xchg
mov
sub
shl
jmp
cmp
xchg
pop
or
sub
mov
sbb
gs
test
pop
and
iret
inc
outsl
jg
sub
gs
sub
cltd
adc
fmul
xchg
jb
lahf
mov
testb
or
scas
pop
orb
jo
xor
imul
push
je
inc
mov
xor
in
test
rorl
dec
outsl
cld
rolb
movsb
adc
lock
out
jno
xchg
filds
addr16
adc
or
jg
ret
adc
add
insl
push
fldt
ss
in
sub
add
icebp
sahf
mov
sub
sub
fwait
test
fcoml
das
test
jb
dec
mov
sti
out
push
or
movzbl
or
push
mov
dec
mov
faddl
dec
lret
lret
xchg
test
push
add
pop
mov
test
jo
jle
push
or
and
xchg
dec
popa
sub
sbb
mov
xor
sahf
lret
xor
xchg
cmp
bound
xor
dec
ja
dec
dec
xchg
cmp
mov
cmpsl
or
cmp
rorb
mov
out
sbb
ljmp
mov
dec
jmp
sbb
jnp
aas
mov
add
out
pop
ljmp
dec
mov
pop
cmpsb
push
dec
cli
out
sbb
ficoml
aam
pop
push
or
jl
js
xor
ffreep
in
pop
mov
pushf
dec
jge
add
jl
mov
jnp
jbe
push
pop
rclb
leave
dec
in
sub
ret
or
stc
pop
loop
pop
push
dec
inc
xor
aas
shll
add
sub
jg
cwtl
int3
sbb
loop
or
mov
and
stos
aam
mov
sub
dec
mov
add
pushl
sbb
xor
movsl
dec
mov
and
sti
aas
xor
dec
inc
pop
jae
ss
pop
xchg
pop
jp
out
mov
ja
in
mov
scas
adc
ja
push
sahf
mov
lcall
out
psllw
push
test
leave
xor
subl
sbbb
roll
lahf
cmp
inc
jbe
cld
aas
dec
push
addr16
mov
repnz
jge
sub
mov
sub
lcall
mov
add
mov
and
insl
sbb
clc
outsb
jbe
jg
fcompl
mov
push
adc
push
test
add
add
mov
rcrl
out
xchg
ror
repnz
lea
inc
enter
xchg
jmp
sub
xor
dec
outsb
arpl
popf
xchg
mov
call
syscall
out
pop
cmpsl
and
in
xchg
nop
leave
popf
cmp
imul
add
shll
jge
pcmpgtb
jb
jno
mov
sbb
jg
out
dec
inc
mov
jg
enter
mov
pusha
inc
mov
dec
cwtl
into
jg
es
ffreep
sub
cld
jne
iret
iret
mov
mov
addr16
aam
push
stos
sti
xlat
mov
in
push
bound
jnp
out
push
lds
add
mov
daa
mov
leave
mov
mov
gs
fimuls
insb
xorb
dec
lret
int3
jmp
pop
push
sub
mov
sub
sbb
aad
lea
addr16
inc
dec
mov
xchg
flds
or
dec
into
daa
push
lock
inc
movsl
xlat
cs
mov
scas
lahf
out
push
mov
leave
bnd
pusha
lret
mov
andb
dec
jecxz
mov
mov
enter
push
jge
push
pushf
pop
stc
inc
sarl
fpatan
mov
test
and
inc
mov
aam
es
loope
cli
lock
ss
fdivr
rolb
or
jbe
in
fdivrl
lods
stos
mov
pop
repnz
jne
mov
and
pop
outsl
xor
jmp
add
push
sub
xchg
popf
mov
rol
jns
jg
cmp
imul
test
adc
push
lods
xchg
sub
and
pop
xchg
test
in
adc
mov
aam
das
xchg
add
jg
daa
fldt
lock
inc
push
loopne
jl
mov
inc
cltd
in
mov
jg
icebp
mov
cmc
mov
repz
pop
nop
jp
xor
xchg
pusha
sbb
push
bound
lret
inc
push
sub
dec
jbe
cmp
adc
or
es
std
add
jae
call
cmp
and
mov
loope
outsb
test
push
mov
push
mov
jbe
dec
mov
push
sub
test
mov
test
jb
loop
mov
sahf
pop
push
daa
xor
loope
out
jge
adc
mov
jbe
push
sbb
xchg
dec
popf
mov
push
lods
cld
mov
or
fbstp
cli
out
test
jnp
insb
adc
aam
dec
js
mov
mov
je
cmp
or
or
rclb
cmc
iret
insl
mov
cwtl
rcrl
aad
add
sub
into
js
mov
outsb
mov
sar
jo
xchg
out
cmpsl
out
in
leave
mov
or
lds
mov
int
pop
add
movsl
dec
mov
pop
push
fs
dec
int3
sbb
nop
ljmp
ja
jmp
shll
push
adc
popl
and
lret
scas
mov
pop
mov
cmpb
mov
inc
imul
movsl
rorl
test
data16
or
mov
out
shr
dec
jns
dec
std
rcl
int3
lahf
pop
mov
ss
lods
mov
pop
ret
gs
pusha
into
cmpsb
popf
lds
inc
lret
cld
nopl
push
xor
data16
mov
jb
rorb
daa
push
inc
mov
adc
adc
fwait
iret
inc
mov
push
hlt
pusha
icebp
into
mov
adc
lcall
mov
fidivrl
sti
lods
and
sub
aad
in
cmp
arpl
cwtl
mov
xchg
insl
int3
jp
sbb
push
pop
cmp
or
sbbb
mov
repz
lcall
xor
je
in
inc
cmpb
cltd
fst
out
into
lock
xor
or
sub
mov
inc
mov
cld
stc
mov
dec
xchg
sub
int3
jge
in
mov
test
es
lcall
dec
sbbl
cmp
cltd
stos
or
addb
dec
inc
jae
dec
popf
in
ja
fldcw
test
mov
lret
mov
push
sti
fistpll
push
sub
iret
pop
inc
pop
lds
in
inc
inc
adc
mov
pop
pop
push
movsl
dec
mov
dec
rcrl
add
mov
outsb
in
xor
out
cmp
mov
pop
aaa
mov
mov
out
aad
in
xchg
jecxz
rcll
push
aam
fsubl
sti
movsb
out
and
repz
lahf
mov
fadds
pop
pop
inc
adcl
call
rorl
push
in
movsl
bound
arpl
aam
xlat
pop
testl
insl
add
inc
jbe
ljmp
mov
sub
xchg
pushf
idivl
aam
dec
int
push
nop
icebp
push
movsl
pop
sub
cli
pop
mov
cmc
push
jmp
psubusb
adc
scas
stc
mov
push
or
xchg
jae
fsubl
cwtl
add
pop
adc
inc
out
loope
inc
xchg
jbe
addr16
mov
leave
adc
ss
xchg
pop
iret
into
pop
mov
jbe,pt
in
push
int3
dec
jne
xchg
jmp
int
push
jge
or
mov
es
cmp
and
xchg
mov
jbe
mov
gs
or
stos
aam
stc
pop
cmp
dec
xchg
xchg
xchg
repnz
push
lods
call
and
subb
mov
mov
lret
nop
aad
jbe
adcb
scas
mov
hlt
mov
and
test
les
int
int
lods
test
pusha
test
lea
out
inc
jmp
xchg
and
mov
rcrb
fistpll
jmp
mov
adc
or
insb
mov
repnz
ret
and
or
mov
jle
cmpsb
lret
jg
push
orb
adc
outsb
invd
sarb
cmpsl
stos
xchg
adc
lret
jmp
scas
std
sub
and
push
stos
cs
mov
inc
out
repz
add
mov
jmp
outsl
pop
add
leave
mov
xor
or
orl
jecxz
and
inc
xor
bnd
fwait
daa
aam
mov
fxch
dec
iret
inc
push
mov
addl
xchg
stc
rclb
mov
pop
xchg
xchg
push
insl
in
fdiv
shlb
push
cli
lret
lds
sti
adc
dec
sbb
in
movl
xor
xchg
or
std
rcl
sbb
cmp
aaa
movsl
ret
scas
int3
imul
popf
adc
cs
test
mov
lret
push
adc
fadds
aad
icebp
mov
arpl
xchg
aam
negl
adc
cmpsb
repnz
jg
or
andl
subb
shrb
int
pop
aas
push
ja
mov
in
xor
rorb
sbb
inc
ret
mov
xchg
insl
cmc
jb
dec
stc
sti
lahf
out
sarb
lcall
dec
xor
mov
ja
adc
insb
xor
pop
mov
testb
xchg
test
iret
inc
mov
adc
rcl
cmp
jecxz
nop
xor
xchg
dec
push
fwait
icebp
cmp
jns
out
lods
xchg
jnp
loope
out
adcl
pop
sbb
xor
cmp
push
int
int3
call
xchg
mov
jecxz
add
pop
dec
mov
xchg
jno
cli
pushw
mov
and
or
mov
push
cli
xchg
das
mov
and
push
pop
fcmovbe
and
xchg
arpl
in
jnp
push
xor
push
push
push
stc
mov
cmpsl
mov
std
jmp
push
aas
cld
mov
jne
daa
movsl
subb
jb
lea
fcmovb
inc
iret
adcl
aam
out
fsts
cmc
jne
push
test
cmp
int
sub
mov
or
jns
dec
add
dec
aam
cld
xchg
cmc
in
stos
lods
jno
scas
cs
jmp
cltd
popf
xor
ds
fs
test
dec
dec
cld
fwait
sub
dec
or
int3
mov
dec
insl
sbb
jecxz
adc
dec
cmp
mov
cmp
add
and
adc
imul
cmc
pop
popf
inc
or
into
push
push
or
push
fcmovbe
popa
fstps
jg
mov
jne
mov
stos
and
jae
jno
inc
out
fisttpll
jp
rol
jle
es
fistl
ljmp
lods
mov
fadd
mov
ret
mov
stos
push
mov
mov
dec
into
jne
dec
pop
jno
or
movsb
add
aas
cmpsl
into
mov
std
scas
mov
push
je
stos
loop
ss
xchg
lds
dec
and
mov
mov
fdivs
jno
push
xor
push
lea
mov
fwait
rcr
cmp
xbegin
jg
subb
subb
xor
flds
jne
inc
pop
shlb
push
clc
fisttpl
mov
out
pop
jp
bound
mov
jbe
fsts
je
into
jecxz
or
pop
jnp
andps
cmp
dec
push
dec
in
sbb
mov
iret
adc
les
inc
sub
out
add
bound
dec
jno
mov
sub
int
loopne
ljmp
out
cwtl
pushf
out
js
or
xchg
pop
adc
xlat
dec
es
test
in
lahf
jno
push
arpl
int3
xchg
dec
int3
and
cltd
jle
mov
std
mull
mov
xchg
jno
inc
sbb
stos
sub
mov
arpl
mov
push
inc
inc
aad
push
shrb
pushf
into
nop
aas
or
rorl
int3
xchg
arpl
jnp
push
jp
add
mov
dec
and
fwait
popa
xchg
xorb
jle
dec
hlt
rorb
ja
insl
mov
and
add
test
xor
ret
push
stos
mov
test
dec
test
pushw
xor
fcomps
pop
mov
mov
mov
scas
jmp
inc
sarl
test
jnp
push
xor
fidivrl
push
arpl
int3
das
mov
jns
int
out
into
push
aas
sbb
sbb
lods
fbstp
ret
pusha
daa
push
in
lds
dec
jb
sub
fwait
ljmp
int3
aad
movsb
iret
push
and
aas
repz
pop
out
pop
enter
jne
incl
andl
dec
dec
rcrb
adc
lret
jg
mov
dec
inc
jge
cs
out
cmc
sub
mov
fimull
jns
ljmp
in
pop
fisttps
cld
out
sti
in
mov
addr16
cmp
adc
cmp
imul
sti
add
and
ljmp
inc
fimuls
dec
jp
or
xchg
aam
data16
mov
dec
sub
clc
pop
mov
mov
cmpsl
mov
lret
lods
sbb
mov
mov
or
repz
fidivs
push
xchg
dec
adc
cmp
push
cmp
addr16
lods
cwtl
adc
lcall
sti
ret
inc
mov
test
mov
pop
mov
inc
outsb
lods
iret
inc
jns
jno
or
ja
out
xor
pop
or
xchg
mov
mov
mov
mov
cmp
das
clc
mov
imul
nop
mov
cmpsl
xchg
push
into
outsb
adc
ret
stos
repz
push
jne
push
rcr
xchg
sbb
pop
out
add
out
loope
or
out
shl
movsl
cmp
push
fcomps
imul
pusha
addps
inc
jge
xchg
ja
adc
in
mov
or
pop
jp
aam
rclb
fneni(8087
mov
shlb
iret
add
dec
jbe
pop
adc
cwtl
push
dec
pop
xchg
lock
test
adcl
mov
jno
xchg
or
stc
fsubs
pop
cmp
add
and
push
xchg
or
and
insb
cs
addr16
add
dec
mov
pop
jo
cmc
jae
push
sbb
shl
filds
and
sub
lcall
cmpsb
rorl
pop
scas
add
in
sbb
dec
scas
data16
sti
and
rolb
dec
loopne
out
adc
fnsave
pop
cld
or
push
popf
lret
push
mov
inc
out
lods
shll
std
jmp
or
sbb
pop
sbb
pushf
mov
sub
fsubrs
dec
ja
fcmovnb
pop
repnz
ret
push
adc
dec
in
jmp
subb
xchg
lds
push
mov
loopne
xor
cli
push
in
dec
jbe
mov
xchg
enter
lret
add
mov
xchg
lock
xor
fs
icebp
adc
or
inc
mov
mov
inc
leave
shrl
fcmovbe
repz
ret
jne
cmp
bndldx
mov
mov
insb
cmpsb
cmp
in
pop
xchg
lcall
mov
or
lea
pop
dec
and
adc
mov
daa
add
in
cmpsb
loopne
dec
xchg
pop
sub
sub
shlb
jge
jle
dec
out
sbb
iret
mov
shl
push
fwait
aad
xor
lock
insb
inc
xchg
jno
imul
mov
jbe
bound
shlb
mov
xor
jecxz
lock
adc
fs
inc
push
jmp
rorb
sbb
add
ret
mov
add
aaa
lcall
aaa
addr16
dec
add
or
xor
push
push
adc
in
and
mov
dec
fwait
pusha
leave
mov
test
cltd
ljmp
sub
jnp
mov
stos
push
shlb
dec
mov
fcmove
cli
lahf
add
cmp
mov
sub
sub
ljmp
cld
cmp
push
inc
cmc
divb
aam
mov
or
push
pop
fwait
push
jp
data16
ret
into
dec
mov
scas
addb
leave
aaa
cmp
mov
sub
and
dec
or
cs
test
push
movsl
popa
sub
xchg
push
ret
or
sti
addb
fmul
jle
xlat
mov
addr16
xor
xor
test
push
cmp
mov
mov
xchg
mov
or
fwait
push
dec
cmp
insl
int3
cmpsb
clc
das
into
rcrb
stos
fs
icebp
rcr
test
cli
mov
int
pushf
loopne
in
fdivs
pop
or
xchg
dec
cmc
arpl
mov
nop
out
xor
stc
rorl
test
push
fstps
xchg
push
ficoml
rcl
cwtl
jns
mov
ja
ret
lock
mov
mov
pop
inc
xchg
cli
insl
arpl
jl
imul
xchg
add
jnp
scas
gs
pop
lods
sbb
aaa
addb
shrl
inc
jb
pop
icebp
sbb
mov
aaa
movsb
sahf
mov
lock
mov
push
into
cs
fcompl
dec
push
lret
add
outsl
mov
imul
in
push
adc
mov
push
inc
iret
xor
iret
add
in
push
mov
clc
aaa
es
int3
mov
cwtd
and
mov
aas
cld
stos
aad
xchg
mov
test
sbbl
xlat
push
fsubl
sar
mov
in
fwait
mov
mov
dec
or
jbe
or
mov
adc
int
out
push
imul
sbb
mov
fildll
jo
fldcw
inc
insb
dec
jge
add
mov
outsb
xchg
ss
fdivp
outsl
add
lret
lret
xchg
mov
push
push
or
fwait
aas
add
inc
movsl
rol
sub
repz
fucomp
sahf
or
pusha
add
gs
mov
mov
cmp
or
icebp
sbbl
mov
xor
or
ja
xor
push
sarb
pop
pushf
mov
mov
pop
add
inc
jle
cmp
pop
cmp
push
and
mov
es
sbb
jle
stc
rolb
mov
cmp
jae
jne
push
push
add
mov
fwait
xor
pop
mov
lret
mov
cmp
enter
xor
jle
cmp
lret
and
fsts
jae
dec
xor
jmp
leave
mov
and
adc
out
add
xchg
gs
push
push
fcoms
xor
jbe
xchg
ss
shll
pop
push
add
rcr
fildll
or
mov
pop
imul
insb
pop
jle
clc
mov
std
push
push
mov
pusha
push
rorl
in
pop
sarl
js
pop
cmp
push
imul
data16
jle
movsb
push
mul
insb
movb
pop
mov
repnz
push
cs
jno
adc
ljmp
cli
testb
mov
clc
fstl
mov
or
cmc
negl
dec
test
cmp
ja
repz
pop
icebp
or
and
pop
inc
ret
jmp
orl
inc
xchg
sbb
mov
dec
inc
jmp
aaa
and
icebp
fisttps
and
or
lret
fiaddl
mov
dec
test
pop
imul
xchg
daa
add
mov
and
rcll
into
push
mov
adc
mov
xchg
sbb
sbb
vprotq
xchg
jns
shrb
jmp
push
jge
test
mov
jge
mov
stc
stos
pusha
mov
xchg
sub
inc
mov
loop
push
je
clc
adc
icebp
or
mov
xchg
cwtl
add
jb
movsb
int
fcmovnbe
cld
mov
in
mov
jns
pushf
pop
cs
mov
or
add
std
ror
jp
push
mov
leave
sbb
mov
leave
gs
dec
inc
jne
xor
shlb
out
test
ja
xchg
ror
add
jbe
xchg
fmull
rcrl
or
sub
pop
rolb
push
jo
out
push
aaa
int3
sbb
mov
imul
ficoms
cwtl
and
lea
cmpsb
push
sbb
xor
scas
adc
sub
jg
cld
mov
addr16
shrl
inc
popf
test
dec
aaa
movb
dec
cld
jb
xchg
fsts
sub
scas
jmp
adc
or
test
pop
aam
mov
outsl
repnz
sbb
out
fdiv
lea
jp
loopne
rep
adc
icebp
mov
jbe
sbbl
jae
xchg
test
pop
adc
cwtl
mov
ja
outsb
jb
push
movsl
jno
mov
sbb
dec
push
jle
push
cmp
nop
mov
lret
out
cmp
in
aam
xlat
mov
test
add
push
sbb
iret
mov
xor
xlat
std
fcmovnbe
sub
xor
push
jmp
je
sub
xchg
gs
enter
addb
add
lds
loop
out
pop
jle
ja
xor
hlt
push
add
lock
out
push
pushf
adcb
dec
pop
test
xor
lcall
insl
mov
mov
mov
lret
dec
xor
stc
test
iret
int
and
fiadds
mov
aaa
aam
in
mov
or
sub
shrb
aaa
mov
dec
enter
jae
push
fisubrl
add
pop
mov
mov
scas
dec
repnz
cmp
adc
push
fisubl
lret
test
adc
iret
lret
out
mov
arpl
dec
or
loope
inc
lods
fwait
add
xchg
cli
cmpsb
xor
fs
dec
in
fcom
mov
test
jl
mov
push
adc
and
test
aad
scas
int3
ficomps
test
out
sub
xchg
lea
mov
adc
ja
lret
adc
loopne
xor
out
out
shlb
add
cmpsb
fcomp
out
xor
testl
lock
cld
fld
jbe
loopne
push
xor
cli
lcall
roll
add
xor
mov
add
pop
or
jmp
mov
mov
push
imul
mov
je
cmp
cmp
inc
ja
aas
jne
inc
or
insl
aad
sbb
cltd
cmp
adc
xchg
sub
call
xlat
not
bound
mov
out
adc
fwait
scas
jo
or
mov
or
xlat
xchg
repz
sarb
sbb
push
or
shll
cld
sbb
loop
mov
dec
push
mov
mov
shll
loopne
pop
push
pop
test
leave
adc
bound
adc
xchg
into
loope
push
pop
add
jo
insb
and
xor
out
push
or
xchg
pop
adc
jns
cmp
pop
sbb
scas
outsl
xor
hlt
sbb
sub
in
mov
dec
or
mov
push
cmp
iret
xchg
imul
je
pop
mov
push
pushl
data16
movsb
and
sarb
mov
jmp
ret
fs
lea
movb
pusha
orl
pop
sbbb
cmpsl
popa
jle
xchg
pop
push
ss
lcall
in
ret
adc
dec
xor
and
jo
dec
cmc
mov
mov
lret
push
mov
into
xchg
sub
iret
out
mul
cmp
lret
aam
subw
push
mov
aas
in
mov
cwtl
xchg
or
jmp
fs
lods
push
mov
out
push
cmpsl
hlt
movl
ljmp
outsl
jo
jbe
mov
fnstenv
inc
std
into
xor
jno
sar
push
dec
stos
dec
flds
add
imul
jne
movsl
xchg
jle
push
fcompl
ficoms
sub
repz
add
ret
mov
insb
lcall
pop
inc
sbb
cmp
jmp
clc
xchg
dec
repnz
fisubrs
jbe
in
cli
pop
add
loop
dec
cltd
xor
outsb
xor
subb
push
lret
pop
loope
pop
sbb
lahf
or
imul
mov
mov
jecxz
ss
fisttps
ja
and
jecxz
fstl
xor
push
fisttps
mov
push
cmp
xor
adc
bound
cltd
lret
leave
or
sbb
jae
mov
mov
sub
aad
filds
das
mov
aam
dec
jg
xchg
fs
dec
add
outsl
sarb
xchg
scas
rcr
xchg
sub
mov
stc
and
test
shrb
out
int
pusha
add
xor
or
mov
add
int3
ret
push
repnz
stos
xchg
adc
movsl
imul
jmp
hlt
lds
cmc
inc
cmp
or
lods
mov
or
stc
lret
test
shlb
mov
adc
sbb
lcall
std
mov
inc
rol
xlat
fstpt
sbb
or
push
add
call
push
pop
jge
cmc
lods
xchg
mov
or
imul
cmp
pop
cmpsl
xchg
leave
ret
jmp
mov
push
mov
xor
lock
aad
xchg
out
stos
push
ds
fildl
push
xchg
popa
jl
je
mov
or
mov
mov
pop
xchg
and
pop
dec
xor
and
rcl
pop
ficompl
jo
clc
push
loope
insb
cmp
pop
enter
dec
in
loopne
add
ljmp
jo
shll
sbb
dec
aad
pop
mov
in
loopne
fsts
jp
fcmovu
lods
pop
sbb
jnp
jae
push
rolb
lds
out
andl
fcmovbe
pop
cmp
movsb
cld
pop
lock
push
pushf
pop
xchg
in
mov
aad
repz
mov
or
jnp
adcl
ss
cmp
pop
adc
or
mov
or
sub
mov
test
push
sbb
and
dec
adc
jae
out
imul
and
or
repz
hlt
sbb
test
xor
inc
adc
pop
aad
in
aam
jle
or
adc
jmp
call
nop
xchg
jle
mov
out
inc
ret
and
je
loop
fscale
pop
test
fmull
rol
enter
xchg
stos
mov
inc
ret
jmp
dec
mov
push
mov
stos
and
cmp
ret
mov
cmp
jno
cmpsl
mov
out
imul
mov
and
pop
sahf
xor
adc
outsl
outsb
mov
jbe
into
shll
mov
add
movsb
mov
cwtl
mov
mov
push
mov
fdivs
fmulp
and
imul
cmp
xchg
cs
mov
mov
add
inc
in
sub
xchg
jmp
stos
inc
lret
icebp
jge
lret
dec
movsl
popa
filds
sarl
aam
mov
rcrb
pop
mov
addr16
xor
sbb
mov
jb
leave
mov
jle
sub
fsubr
xchg
dec
and
jo
or
push
mov
xor
cmc
out
xchg
push
sbb
mov
mov
sbb
nop
fsave
aas
mov
mov
mov
xchg
or
push
sbb
adc
pop
adc
test
adc
repz
dec
mov
add
outsb
lahf
into
fidivl
sti
arpl
fistpll
int3
mov
xchg
das
sub
xchg
test
sub
cmp
in
push
push
pop
cmp
lods
xchg
dec
inc
int3
mov
shll
lods
rcr
inc
jmp
mov
mov
push
dec
cs
sub
or
mov
std
pop
repnz
push
push
inc
sbb
or
mov
fs
loop
dec
inc
pop
pop
insl
outsb
xchg
pop
add
sbb
es
in
cmp
adc
push
mov
sub
or
xor
imul
mov
fwait
pop
loope
ffree
out
pop
xchg
mov
rcll
adc
movsb
lahf
in
push
jo
sub
add
xchg
xchg
fdivrs
push
jmp
dec
pop
mov
aam
mov
mov
jge
push
sbb
xlat
sub
fcoml
dec
xchg
hlt
push
mov
lret
loop
sbb
mov
int3
xchg
mov
std
xor
cld
fnstenv
pop
outsl
push
lret
add
sarb
jne
jp
jno
jle
or
lcall
ret
mov
sbb
xor
daa
lcall
aam
push
imul
mov
jp
cld
mov
cmp
cltd
jbe
loop
pop
aam
push
mov
cmp
or
dec
out
mov
add
idivl
repz
adc
inc
and
jae
or
andl
scas
or
jno
in
mov
lock
and
adc
movsb
out
icebp
xchg
lods
xchg
out
aam
mov
scas
test
lret
fisubs
jno
lods
fwait
rolb
ljmp
je
stos
iret
jge
xchg
adc
roll
sbb
jle
mov
jecxz
iret
fs
cmp
xchg
mov
mov
mov
ret
loopne
js
popf
mov
out
addr16
andb
adc
enter
std
inc
icebp
test
and
xchg
cmp
call
dec
jnp
aas
mov
jmp
in
rcr
cmpsl
scas
jg
aad
bound
popa
ss
lret
push
mov
mov
mov
push
daa
and
push
inc
sahf
fisttpll
out
aam
in
movsl
std
xor
mov
inc
repnz
insb
add
xchg
lret
pop
mov
pop
ror
ss
aas
pop
rolb
fmul
scas
or
mov
and
mov
mov
jo
pop
fcmovnbe
cmp
clc
int
push
add
test
out
mov
lret
enter
jg
push
fwait
pushf
pop
xchg
jecxz
push
xor
ficoms
std
mov
inc
push
mov
pop
icebp
xlat
mov
pop
mov
fcmovnbe
leave
shll
jbe
jnp
xchg
xor
mov
scas
push
xor
repz
jbe
dec
mov
aam
shrb
mov
mov
sbb
aas
push
cmp
jnp
mov
xchg
mov
pop
jg
adc
sbb
jo
push
add
mov
xchg
xor
js
in
adc
lods
adc
mov
jp
cmp
xchg
daa
loopne
aaa
test
scas
xchg
dec
sub
stc
lds
out
cmp
push
int
push
dec
aad
out
iret
and
aas
and
std
loopne
add
xchg
mov
mov
shll
clc
jne
inc
cmpsl
lret
xor
jecxz
clc
es
and
js
mov
adc
out
and
jns
or
int3
mov
scas
cmpsl
xor
out
insb
push
add
dec
sarl
roll
push
fdivs
int
out
xor
sar
mov
cmpsb
sarb
inc
out
out
je
and
pop
scas
mov
jns
out
les
std
cmpsl
out
sub
leave
lret
push
xor
adc
dec
into
arpl
xchg
jle
in
jl
pop
addb
leave
mov
mov
or
xchg
xchg
data16
push
push
daa
in
inc
and
xchg
sub
inc
lock
push
push
adc
pop
inc
lods
insb
xor
test
fdivs
dec
icebp
xchg
jae
out
scas
ja
sti
test
xor
lsl
daa
mov
leave
dec
cmp
jmp
nop
insb
outsb
mov
sub
xor
sub
cld
in
jp
push
shrl
stos
mov
jne
jno
pop
test
fs
insb
mov
arpl
adc
inc
add
pop
out
cltd
mov
stos
in
addr16
outsb
inc
sarb
pop
mov
jbe
fisubrs
pop
mov
lret
or
jmp
lock
sub
ja
call
pop
lcall
xchg
in
ljmp
lahf
and
mov
inc
mov
imul
dec
cmp
test
pusha
cmpsb
int
arpl
int
jns
ret
cmpsl
movsl
mov
lret
adcb
xchg
pop
in
sub
test
enter
sarl
and
rcll
adc
sub
ds
es
out
scas
and
mov
xchg
mov
sahf
int3
and
xchg
jge
xor
jno
inc
xchg
in
mov
inc
stos
and
jl
movsl
mov
scas
shlb
mov
fstpt
xor
idivl
out
push
faddp
scas
cmp
cmc
mov
inc
sbb
fwait
inc
test
dec
into
xchg
dec
pop
jo
out
add
dec
dec
fiaddl
cli
push
adcl
rolb
jmp
mov
movb
xchg
add
mov
dec
hlt
xor
cmp
jecxz
jne
int3
or
adc
cli
sub
rorb
jno
xchg
and
addr16
mov
movb
mov
fwait
imul
mov
insl
movsb
stc
fisubl
rclb
leave
xchg
arpl
or
or
fidivs
push
dec
sbb
ss
dec
pop
inc
jg
sahf
scas
xor
in
lea
cwtl
jmp
cld
and
sub
sub
lea
iret
inc
out
imul
xchg
sub
xchg
mov
out
mov
icebp
loope
scas
xor
pop
ret
popf
cmpsl
jo
mov
push
cmp
int
out
out
into
ds
inc
push
jl
xchg
ja
loopne
sbbl
nop
std
dec
sub
adc
repnz
arpl
pusha
inc
movsb
cmpsl
push
xor
sbb
cmp
adc
add
xor
or
je
mov
and
dec
add
or
sahf
jnp
rcrl
out
fdivs
int3
ljmp
lods
stos
ret
shll
xorl
leave
lret
jns
jle
xor
dec
fwait
repnz
pop
xor
icebp
jnp
aam
push
ret
inc
popf
outsb
int3
jge
xchg
push
fistpl
sub
push
ret
sub
add
push
loop
dec
popa
lret
xor
call
test
subb
dec
mov
je
mov
sbb
sbb
mov
xchg
cmpsl
in
mov
enter
test
and
jecxz
clc
push
cmp
stos
int3
pop
xchg
sahf
push
mov
ret
scas
sub
jmp
inc
std
cmc
out
mov
imul
mov
jne
outsb
cmp
mov
mov
fs
xor
out
mov
out
add
int3
addr16
enter
cmp
inc
mov
out
inc
sahf
out
jbe
adc
rclb
fcom
cmpsl
and
push
enter
xlat
loopne
xor
mov
mov
ficomps
pop
dec
mov
jg
xchg
shll
fs
pop
xchg
repz
jl
pop
sub
inc
dec
fcmove
xor
adc
cld
and
jp
or
cmc
rol
mov
scas
jbe
mov
lret
mov
js
inc
cld
jg
xchg
add
cltd
mov
push
sbb
addr16
dec
shlb
pop
mov
ds
dec
mov
int3
pusha
lret
js
push
imul
and
fbstp
ret
into
jle
push
mov
xchg
std
add
testb
out
xchg
test
xchg
lcall
in
popf
adc
gs
das
into
pop
ja
out
dec
lret
test
inc
cmp
or
inc
pop
gs
movsl
xor
insl
arpl
dec
clc
inc
inc
pushf
aas
inc
fdivrs
xlat
jae
mov
test
mov
ret
dec
or
sub
fs
imul
jl
mov
dec
in
movb
leave
out
push
in
stos
mov
add
sbb
fmuls
xchg
or
push
sbb
xchg
cmp
and
push
paddsb
sub
fcoml
lea
mov
sarb
sahf
mov
pop
test
movsb
jle
xchg
pop
push
mov
add
std
cmp
cmp
movsl
pusha
sub
add
sbb
dec
push
fidivrl
add
mov
lds
and
daa
push
push
or
cmp
jbe
insb
call
test
lret
sarl
mov
xchg
rcr
mov
imul
outsl
sub
out
xchg
sub
cwtl
push
inc
mov
es
inc
push
stos
adc
stos
mov
test
xchg
pusha
out
call
cmc
mov
idivb
pop
add
insl
xchg
stos
imul
add
and
and
mov
pop
jecxz
movsl
gs
mov
imul
int
fwait
push
mov
cltd
cs
shll
call
inc
pcmpeqw
cwtl
pop
gs
outsb
or
inc
jmp
ds
in
test
mov
add
sahf
mov
fnstsw
es
stc
sbb
xor
out
or
loopne
sbb
jbe
jp
sub
xchg
xor
jp
lods
sbb
xchg
cli
mov
lds
mov
push
arpl
dec
psllw
adc
or
mov
addr16
push
sbb
clc
push
or
insb
xchg
add
adc
sub
cmp
pop
xor
mov
in
pop
mov
mov
mov
pop
adc
pop
jnp
and
jg
lret
outsb
cmp
or
push
sub
and
inc
mov
mov
fldcw
pop
int3
sub
sahf
xchg
idiv
fcmovbe
mov
or
roll
lret
mov
lret
mov
scas
xchg
cltd
push
jns
mov
imul
push
clc
xchg
nop
add
lret
ja
xlat
mov
add
cmpsl
loop
das
int3
ss
dec
cmp
cld
lahf
into
and
mov
push
stos
fwait
jge
inc
stos
mov
loopne
inc
jecxz
dec
int3
std
mov
out
adc
or
lret
cmp
lret
push
iret
jne
jbe
fwait
dec
pop
and
sub
lret
jae
pop
sahf
mov
pop
stos
cli
out
scas
fdiv
and
lea
jo
repz
subb
mov
fwait
xor
stos
loope
inc
mov
jmp
loop
mov
jbe
jl
inc
test
cmp
mov
fists
js
arpl
sbb
lea
int3
pop
push
xchg
sti
lret
aam
inc
sub
es
jle
pop
pop
jmp
push
ss
mov
or
sbb
lret
cmp
nop
loopne
pop
jb
mov
dec
out
fwait
mov
fsubrs
and
cmpsl
sub
add
xchg
aam
mov
int
rcr
sub
dec
iret
add
push
nop
leave
decb
cmp
jne
into
lods
pop
push
fsubr
pop
aaa
mov
in
mov
test
jmp
sub
loop
jno
lahf
xor
addl
add
cli
push
mov
repnz
jbe
jno
adcl
push
mov
stos
into
insb
fnstcw
fs
or
xchg
jbe
movsb
data16
sbb
dec
roll
dec
in
loop
sbb
stos
movsb
fnsave
xchg
int3
fistpl
mov
dec
jnp
clc
jmp
into
jno
outsl
movsb
push
push
mov
cmpsb
std
mov
fsubs
mov
pop
inc
fistl
mov
cmc
rorl
subl
shlb
adc
les
add
into
adc
inc
cwtl
xlat
call
data16
add
outsb
sub
mov
sbb
push
dec
faddl
aad
out
mov
loop
or
jbe
mov
jecxz
popf
inc
out
xchg
jle
nop
jp
pop
sbb
mov
sub
lcall
or
addr16
sbb
into
out
jle
loope
mov
mov
inc
mov
mov
rorl
jbe
in
dec
dec
lods
inc
adc
push
clc
xor
jl
pop
mov
int3
jmp
cmp
xor
lcall
in
mov
out
ficompl
mov
ljmp
ret
jmp
jecxz
je
pop
dec
int
mov
mov
popf
jp
mov
jecxz
mov
ljmp
mov
mov
push
in
cmp
pop
test
outsb
push
cmp
cmp
fstps
jecxz
jle,pt
cmp
lds
inc
push
mov
mov
hlt
cli
mov
imul
adc
loope
enter
mov
ss
in
mov
call
pop
add
inc
aam
mov
inc
data16
icebp
adc
push
out
or
pop
push
movsl
outsb
xchg
cmp
push
iret
lret
rclb
ss
and
rcl
stos
jp
pushf
inc
test
or
push
ds
jle
es
test
rorb
cmp
pop
out
out
imul
testb
les
and
daa
xchg
ret
mov
insl
ja
mov
out
imul
inc
sub
mov
dec
mov
sub
xor
and
push
xchg
mov
test
sbb
cmp
js
loope
push
fwait
es
push
dec
mov
dec
les
rcl
ficoms
pop
insb
push
inc
addr16
js
rcll
jle
addl
jbe
cltd
mov
xor
ja
push
fstl
adc
jge
lret
sub
sbb
jp
les
stos
fucomip
push
inc
add
cwtl
inc
jb
cwtl
and
push
push
and
push
adc
rorb
mov
xchg
add
out
jge
es
in
ret
insb
imul
mov
push
loope
pop
mov
leave
vpminub
mov
jmp
outsb
jnp
xchg
stos
out
sbb
call
sub
stos
ror
scas
pusha
arpl
mov
sub
into
add
hlt
imul
cmpsl
xorb
inc
push
inc
mov
add
movsb
scas
lret
inc
xchg
xor
or
repz
lahf
out
sub
fs
and
lock
dec
dec
enter
pop
jbe
and
rclb
xchg
fwait
or
and
push
popf
push
mov
sar
fs
sbb
cmp
mov
test
repz
mov
ds
inc
pop
into
xchg
imul
popf
xchg
dec
repnz
enter
ret
imul
pop
xor
mov
or
pop
aas
repnz
or
push
sbb
loope
jle
cmpb
mov
jecxz
push
or
rorb
xor
nop
ret
xchg
jnp
psubusw
sbb
jmp
out
pop
pop
imul
xor
in
adc
icebp
addr16
pop
cmp
pop
pop
xor
push
leave
je
stos
and
sub
sbb
push
xchg
jns
jl
push
or
pcmpgtd
movsb
aad
mov
ljmp
fs
pop
data16
pop
and
and
sbb
bound
cmpl
sbbl
dec
lret
xor
das
icebp
xchg
cmc
andl
inc
xor
iret
test
pushf
mov
outsl
push
sub
cs
mov
jmp
enter
bound
les
mov
lret
fidivrs
add
movsl
mov
dec
and
loop
inc
push
das
ljmp
dec
push
push
sbbl
xor
lds
mov
sbb
dec
dec
aas
xchg
xchg
lods
std
jbe
into
out
xor
inc
js
and
mov
mov
aam
enter
push
in
xor
xlat
xchg
movsl
call
xchg
in
loope
imul
jle
aad
sbb
adc
xchg
ds
icebp
shrb
mov
shr
cmp
push
mov
sub
mov
push
or
aam
add
movsl
jg
pop
dec
data16
out
rcrb
lock
xchg
fst
jb
movsb
out
jo
test
jb
pushf
stos
int3
ret
test
push
jg
sbb
xchg
fnsave
out
xchg
rol
gs
imul
mov
sub
push
aad
pusha
mov
fadds
int
or
xlat
sarl
subb
xor
or
xchg
cmpsl
shrl
int3
cltd
adc
in
mov
mov
iret
bound
movsl
xchg
inc
outsl
mov
sub
ss
aas
mov
jge
call
pop
js
xlat
mov
and
jae
lret
loope
sub
jmp
adc
ljmp
inc
cmp
xor
aas
mov
mov
popa
xlat
sub
test
stos
inc
jecxz
sbb
js
xchg
push
mov
pop
push
add
out
dec
mov
pop
rorb
arpl
xchg
xchg
dec
push
cmp
jno
xchg
pavgb
shrl
cwtl
jmp
and
pop
pop
insb
test
mov
inc
sbb
stos
popf
aam
mov
pop
mov
cmpb
test
jp
xchg
add
movsl
mov
sarb
notl
jno
insb
and
lret
mov
dec
cmp
mov
xchg
add
test
cli
daa
xor
movsl
int3
add
sbbb
cld
add
inc
lcall
aam
in
push
nop
push
pushf
sbb
cmp
push
leave
push
cwtl
xchg
sub
inc
and
mov
test
movsb
stc
loop
inc
lret
fadd
fsubp
push
dec
inc
shll
mov
out
out
mov
das
dec
mov
ficoml
cmpl
scas
add
fucomp
dec
adc
lds
stc
mov
pop
sub
loop
adc
pop
or
cwtl
dec
lods
pop
and
add
push
das
arpl
into
pusha
lods
mov
xchg
mov
movb
clc
and
xchg
adc
movsl
push
mov
sbb
mov
rcr
xor
daa
push
dec
movl
push
in
out
ja
ror
fsubrs
in
dec
pop
pop
sbb
or
inc
sbb
in
pop
add
divl
gs
je
mov
pop
dec
fcoms
test
mov
sub
shl
mov
jno
jae
rol
cli
adcb
cwtl
loop
lods
push
mov
jb
push
cmp
mov
or
dec
mov
mov
movsl
mov
dec
sbb
dec
enter
in
out
aaa
test
loop
jmp
icebp
adc
aam
cmp
dec
mov
in
test
fcomi
out
cmpsb
ss
mov
add
mov
loope
mov
jp
lock
inc
adc
sbb
out
lret
push
test
cwtl
xchg
add
pop
ss
or
or
scas
out
mov
test
ljmp
icebp
inc
sub
mov
test
lret
sbb
sub
mov
push
rcl
add
mov
push
lahf
mov
fcomps
fistpll
std
mov
jb
xchg
imul
int3
lods
mov
jl
mov
push
mov
inc
add
nop
stos
pop
fisubrs
ljmp
mov
push
dec
lcall
jno
mov
out
mov
push
mov
and
adc
lret
aam
and
inc
mov
jno
and
and
jne
int
test
aad
jmp
pop
or
sub
push
mov
push
mov
mov
cltd
aam
push
iret
adc
icebp
fcomip
mov
jo
in
scas
adc
pop
dec
mov
loop
and
mov
push
je
jp
fcomp
out
in
mov
rorl
sahf
jns
stc
movsb
add
lock
mov
stc
addb
push
jg
cli
sbb
test
add
cli
add
jmp
xchg
lods
cmpsl
mov
mov
xchg
or
lret
orb
mov
and
lret
adc
push
and
add
ss
push
sti
rcl
test
mov
cwtl
not
sub
or
in
or
adc
push
pop
push
sub
loop
sbb
jmp
pop
mov
dec
xor
xor
inc
mov
sbb
mov
sub
in
and
xchg
add
pop
mov
cmc
mov
dec
lret
push
jbe
add
gs
push
lods
in
lahf
push
shrb
jg
call
pop
out
dec
sti
mov
pop
in
pop
inc
xchg
mov
inc
push
stos
xchg
or
out
jge
outsl
int
add
das
inc
icebp
sub
push
lahf
and
ds
pop
adc
jbe
scas
mov
adc
inc
lds
das
aas
jbe
xchg
sarb
je
xor
jg
lcall
dec
fidivl
mov
fcomps
pop
scas
addl
out
bound
mov
cli
jae
xorb
clts
leave
jbe
jns
insl
mov
shl
je
es
push
addl
nop
add
lods
xchg
adc
inc
daa
jbe
adc
xchg
jmp
insb
ja
xlat
stc
int3
bound
jp
xchg
sbb
pop
std
pop
inc
push
xor
xorl
dec
rolb
sub
clc
pushf
cltd
xchg
loope
mov
fyl2xp1
std
rorb
ss
or
rcr
xchg
and
lret
mov
mov
leave
mov
adc
xchg
fadds
add
std
sub
out
or
fdivrl
imul
and
xchg
mov
or
ret
mov
pop
scas
or
cmpl
leave
sarl
out
pop
xchg
push
fidivs
lret
cs
mov
imul
dec
mov
movsb
sar
push
cmp
sub
push
inc
jo
aaa
insb
push
mov
popa
rcl
or
sbb
and
ja
inc
arpl
jne
sbb
lock
test
dec
push
lds
jnp
pop
sub
mov
aaa
daa
int3
aas
adc
pop
jg
adc
dec
add
inc
pop
push
jl
mov
xchg
mov
sbb
dec
jle
inc
ja
pop
popf
shlb
cmpsb
xchg
bound
or
cmp
test
xor
movsl
sub
push
ret
sub
movl
inc
data16
dec
cli
mov
pop
and
icebp
xlat
cwtl
int3
ret
sub
push
pushl
mov
aas
xchg
fstl
and
mov
arpl
cs
test
xor
mov
stc
je
dec
cmpsb
xchg
sub
pop
jmp
aam
adc
dec
jle
inc
mov
insl
inc
sarl
xchg
test
mov
sbb
xchg
pop
sti
push
repnz
mov
hlt
test
std
popf
add
mov
dec
pushf
mov
jecxz
xor
sahf
in
mov
movsl
sub
push
out
mov
in
test
and
mov
divb
xchg
jae
lock
jg
js
lcall
lea
std
jp
inc
loope
sbb
pop
into
sub
inc
inc
cwtl
ss
cld
fwait
inc
jo
int3
sbb
jl
sub
test
shr
leave
adc
xchg
pop
push
mov
ds
sarb
test
jb
aam
or
fisubrs
jbe
and
inc
fdivs
mov
sbb
out
and
imul
adc
pop
movsl
fadd
insb
cmp
clc
fistl
out
mov
sbb
inc
or
arpl
sub
aam
pop
iret
addr16
mov
insl
pop
xchg
adc
movsb
scas
mov
cwtl
jecxz
xchg
add
int3
iret
cmp
xchg
popa
cld
pusha
sahf
push
cmp
inc
out
arpl
xchg
sbb
fstpt
pushf
jnp
mov
daa
insb
shlb
add
xchg
inc
push
stos
nop
lahf
rcl
popa
test
ljmp
xchg
sbb
jg
mov
addl
aad
shr
sbb
mov
adc
popf
inc
imull
or
hlt
xchg
cmc
fimuls
jp
inc
stc
add
sbb
clc
mov
sub
in
add
movsl
lahf
daa
mov
into
jg
dec
leave
incb
pop
pop
jp
lahf
adc
lret
sarb
add
ror
dec
xlat
pusha
add
subb
add
inc
mov
sahf
jl
pushw
cli
push
jge
popf
push
xor
push
rorb
fmul
bound
pusha
movsl
and
std
lret
ret
repnz
fwait
push
pop
loopne
bound
lock
mov
dec
cmp
std
or
js
xor
mov
inc
sub
mov
xchg
iret
xchg
ret
add
mov
dec
in
pop
sarl
loopne
test
sbb
pop
xchg
scas
xchg
adc
jnp
in
fucomi
cmp
es
loope
and
mov
pop
out
xorb
ds
dec
lock
test
ss
jg
imul
int
mov
pusha
movsb
sbb
xchg
test
mov
xor
pop
mov
xchg
mov
mov
push
xchg
aam
nop
sarb
sbb
xor
mov
jbe
adc
inc
dec
mov
mov
in
adc
cmp
push
inc
inc
jge
mov
nop
imul
inc
sbb
sub
or
push
sahf
test
push
mov
into
mov
leave
scas
jbe
push
mov
fbld
rcl
xor
jno
or
ret
adc
insb
int3
gs
xor
cmp
sub
mov
leave
xchg
js
mov
inc
adc
outsb
jl
ds
cmp
repnz
pop
stos
dec
or
aaa
inc
or
incl
jb
pop
mov
push
inc
leave
nop
rcll
add
ds
into
adc
push
je
push
mov
mov
xchg
push
rolb
and
popf
imul
adc
ror
inc
and
push
movsl
call
cmp
xchg
nop
mov
xor
arpl
xchg
or
fdivrs
xchg
sub
test
rcl
in
cmp
jnp
test
or
je
js
mov
fs
loope
mov
out
test
and
jl
jb
pop
adc
cs
mov
xor
xchg
icebp
xchg
add
lahf
les
roll
ret
data16
imul
xor
xchg
mov
mov
nop
mov
adc
rcl
dec
movsl
std
inc
sub
cmp
and
push
aam
mov
call
dec
clc
jp
mov
jne
adc
nop
cmp
dec
pop
out
cld
loopne
les
xlat
add
xor
or
xor
aad
rcl
lods
insl
hlt
cmpsl
outsb
pop
jmp
dec
repz
xor
or
ds
cmc
lahf
xorb
dec
xchg
insl
popa
push
adc
fwait
and
dec
dec
inc
stos
cltd
adc
leave
jne
pop
adc
mov
repnz
xchg
mov
mov
leave
push
xchg
popf
fcmovbe
mov
sbb
shl
repz
and
push
dec
or
leave
xorl
out
adc
out
test
jne
jno
ficompl
xor
fcompl
stos
jbe
pushf
arpl
xchg
sub
cli
xchg
cld
sub
cltd
mov
addr16
rcr
sbb
outsl
mov
bound
rcl
cmpl
mov
xchg
push
int3
or
lret
test
icebp
out
or
rcpps
aad
inc
xor
cmp
out
cld
in
icebp
mov
push
xor
call
loope
dec
jnp
pushf
mov
iret
dec
pop
cltd
jo
lods
xor
fs
jae
push
je
xor
in
sub
ljmp
cli
lcall
sub
inc
or
nop
enter
mov
cmpsb
mov
loope
rolb
pusha
popa
pushf
insl
sbb
cwtl
inc
cmp
sub
jo
loop
sahf
dec
cmp
int3
xchg
ds
nop
jle
dec
sbb
lods
add
mov
jns
int3
push
imul
aas
ss
ja,pn
mov
shll
movsl
add
cmp
pop
or
inc
jg
push
ljmp
push
mov
mov
js
pop
sbbb
lea
or
outsb
xchg
sarb
jecxz
sarb
xor
mov
add
lds
cmp
push
daa
lods
or
inc
aam
int
aad
mov
sub
repnz
xor
xchg
insl
add
loope
sbb
mov
pop
push
add
xchg
nop
into
and
imulb
scas
addr16
out
sbb
dec
insl
and
and
ficomps
fwait
test
hlt
addr16
subb
mov
gs
cs
add
xor
fbstp
xchg
jnp
pop
ds
jns
dec
scas
and
ljmp
inc
repnz
cwtl
xchg
push
fadds
loope
in
xlat
xor
sub
inc
jne
shrb
mov
xchg
inc
jg
shll
subl
mov
inc
sbb
in
fs
adcb
mov
jns
testb
enter
dec
movsb
pop
ss
movb
dec
sub
mov
cmp
xor
or
pusha
adc
mov
shll
rclb
add
lods
mov
push
push
test
popf
imul
fbld
dec
cmp
fwait
divl
in
cmp
xlat
xchg
push
dec
js
push
lea
jecxz
jp
inc
cmp
jbe
push
xchg
pop
mov
je
inc
mov
mov
pop
call
aam
and
xchg
adc
test
inc
xlat
cmp
ror
sbb
xor
xor
sbb
cltd
movsl
sarb
mov
das
addr16
aad
dec
incb
cmpsl
fistl
jae
pop
pop
addl
test
aam
popa
inc
aad
pop
ror
pop
xor
fwait
pop
sahf
mov
shr
cmc
xchg
ljmp
lea
jmp
lahf
fmuls
mov
lods
cmp
mov
mov
les
loop
cmp
add
sbb
jecxz
sbb
pop
jo
in
push
fmull
or
jb
stos
div
pop
std
jne
and
lock
mov
xchg
lock
roll
in
scas
pop
cmp
mov
and
shr
sarl
dec
out
jg
gs
push
cmp
lods
pop
cmp
lret
rcll
add
add
xor
xchg
cmp
and
xor
stos
jae
mov
data16
insl
dec
fsubrs
out
rclb
aad
sub
or
xchg
sub
ret
ret
cwtl
push
mov
xor
or
hlt
out
popa
push
out
cmp
mov
cmp
mov
repz
jnp
mov
repnz
insb
add
inc
jne
xlat
cmp
sti
inc
mov
inc
pop
cmp
push
mul
add
adc
mov
fsub
pop
jl
out
push
jo
dec
outsl
adc
add
pop
push
mov
ja
dec
push
xchg
inc
into
cmpsl
dec
push
scas
iret
not
jns
adc
jae
into
js
lcall
lods
jae
adc
mov
lcall
imul
pop
dec
pusha
into
movsb
or
mov
repz
ficoml
ret
std
xor
cltd
out
arpl
cmp
add
pop
mov
jno
iret
data16
iretw
pop
mov
xchg
jae
sbb
push
sub
mov
test
or
mov
mov
sbb
push
cmp
mov
test
mov
dec
cli
xor
mov
or
ss
ljmp
ja
mov
aam
mov
adc
lret
and
pop
jg
xchg
mov
fidivrs
adcb
push
in
into
out
nop
stos
dec
sub
or
mov
lds
mov
iret
push
not
add
ret
cmp
cwtl
out
inc
lods
push
pop
push
inc
lret
cmp
das
outsb
add
push
adc
loopne
mov
test
loop
jbe
mov
or
aad
lods
jg
xchg
scas
mov
dec
mov
loope
lahf
aam
dec
jae
imul
inc
mul
dec
sti
ljmp
add
add
loope
pop
pusha
aad
dec
jecxz
sbb
ucomiss
cmpsb
insb
mov
push
fsts
insl
mov
inc
fcomps
test
xor
jp
cmp
jbe
out
test
mov
imul
pop
sub
popf
sti
cmp
cmp
xchg
call
icebp
push
adc
add
mov
shlb
jbe
and
xchg
out
xchg
out
stos
pusha
xchg
lret
mov
lods
loop
repz
or
fistl
pusha
jp
inc
add
push
adc
push
int
cltd
into
fstl
mov
sti
mov
xchg
movsl
mov
pop
or
mov
ds
ret
leave
sbb
sub
mov
mov
lds
clc
adc
mov
add
dec
ss
test
xchg
bnd
dec
imul
ror
aad
and
sub
enter
inc
es
outsl
jnp
popa
cmp
notl
jns
sub
lea
mov
inc
dec
xchg
xchg
in
fdiv
lock
dec
and
pusha
add
or
xchg
xchg
out
xlat
in
lret
sub
mov
dec
or
dec
dec
cmpb
mov
aad
mov
pop
sub
and
cmp
mov
or
int
fldcw
mov
aad
push
rcr
lods
sbb
mov
push
inc
jle
clc
dec
test
call
outsb
pop
xrelease
daa
testb
jmp
push
push
nop
mov
jle
xchg
mov
loopne
push
and
pop
xchg
imul
jns
mov
xchg
scas
cmc
add
mov
rorl
cli
in
and
mov
add
mov
lret
or
pop
daa
in
outsl
sti
push
cmp
inc
cmp
mov
mov
xlat
dec
ret
daa
and
xor
and
adc
mov
push
arpl
sbb
cmc
stos
xchg
stc
push
cwtl
adc
cmp
in
popa
mov
hlt
ljmp
pop
jbe
dec
jnp
rclb
jbe
push
bound
int3
icebp
sub
add
dec
loop
push
pop
je
cmp
dec
fisttps
xchg
sub
dec
fidivrs
lods
hlt
test
cmp
aad
ret
fwait
out
into
arpl
pushf
sub
push
lods
popl
rcrb
dec
cs
pop
add
adc
mov
sti
cmp
fwait
sub
sub
lret
outsb
sbb
dec
push
addr16
cmpsl
mov
divb
push
jno
cs
sub
ret
imul
mov
push
xchg
std
and
cmp
push
cmpsb
and
fcom
jp
scas
pop
test
lods
outsl
dec
cmp
aam
mov
std
inc
jo
jp
fdiv
cmp
xchg
roll
cmpsb
cmp
and
das
in
test
push
rcr
inc
ljmp
jbe
jo
push
cwtl
jne
cmp
ljmp
sbb
stos
mov
xchg
add
push
dec
int3
stos
lods
xor
lret
cli
sahf
fisubrl
out
lods
add
leave
adc
loopne
add
mov
xchg
inc
cld
es
andl
xchg
ja
adc
xor
jo,pn
stos
into
pop
loope
xor
outsb
pop
jmp
rcll
xchg
ljmp
ret
xor
outsb
cmp
add
adc
repz
adc
js
push
leave
or
mov
shll
fstl
mov
in
into
sub
mov
aas
mov
and
out
ret
fadd
pop
dec
sbb
fisubrl
insl
mov
clc
sahf
mov
gs
dec
sbb
jo
aas
xchg
push
mov
out
sbb
sbb
fisttpl
loop
imul
xlat
sub
jne
fcmovnbe
sbbl
repz
rorl
jns
test
dec
pop
cmpsl
xchg
je
int3
dec
imul
ret
popl
inc
xlat
lret
xchg
push
lret
mov
push
gs
sbb
inc
repz
in
mov
ret
in
or
jne
ret
cmp
gs
rolb
push
add
stos
lret
push
scas
pop
push
mov
sbb
int3
jo
and
inc
inc
out
and
and
mov
mov
xor
data16
hlt
dec
dec
xchg
cs
xor
mov
insl
pop
and
fstl
pop
dec
repnz
popa
pop
jnp
cli
push
xchg
jl
push
mov
clc
inc
sar
xor
es
subl
add
cmp
fimuls
int3
lcall
dec
ja
jmp
mov
add
fs
jbe
scas
mov
push
adc
ret
fstp
pushf
leave
jnp
movsb
mov
xchg
push
shl
xor
dec
and
popf
nop
mov
test
adc
aad
imul
inc
ja
mov
dec
sar
imul
xchg
insl
fistpll
push
jge
sbb
adc
inc
pusha
adc
es
mov
or
mov
mov
mov
cmp
into
push
movsl
insl
sub
lods
mov
dec
aam
and
jle
loopne
xchg
sub
ret
push
push
xchg
aaa
adc
out
pop
aad
mov
sbb
in
dec
out
xchg
in
push
std
mov
inc
cltd
cmp
jae
sub
gs
movsl
xor
stc
mov
dec
dec
mov
push
cmp
lea
xchg
jae,pt
inc
stos
cwtl
loopne
mov
in
add
add
lcall
negb
inc
stos
sahf
ja
dec
je
lcall
cs
or
dec
push
push
xlat
test
mov
sarl
push
jbe
fwait
and
aam
or
inc
push
dec
and
lds
cmp
or
push
jge
andl
int3
hlt
lea
push
lcall
add
mov
insl
mov
cmpsl
outsl
mov
test
aas
dec
repz
push
aam
or
scas
mov
es
mov
sub
lods
inc
sub
push
push
les
std
mov
jmp
sti
pop
data16
lds
imul
sub
jg
stos
lahf
shlb
repz
dec
dec
out
xor
mov
sub
shll
leave
bound
insl
add
jns
clc
into
xchg
sbb
xchg
sub
or
push
mov
pop
mov
fldl
sbb
fimuls
push
fstpt
into
fs
mov
repnz
cmp
jne
iret
mov
mov
sub
xchg
sub
sbbb
inc
push
pop
push
push
add
shrb
nop
sub
mov
xchg
cmp
icebp
mov
jnp
pop
fmuls
fnsave
mov
and
jno
mov
push
sub
out
xor
in
out
jns
shrb
xchg
dec
add
out
inc
loope
stos
ss
lret
mov
xchg
nop
jne
dec
pop
cld
stc
gs
sahf
movsb
rep
enter
cmc
xor
lods
add
jae
aad
xchg
sbb
push
jge
adc
les
cld
cmp
xor
mov
push
int
pop
xor
add
call
lods
imul
and
jbe
push
push
mov
pop
or
mov
aaa
test
jg
or
xchg
shrb
out
lret
push
cmp
cli
mov
shr
inc
or
pusha
fmulp
test
and
fcomps
and
fwait
stc
loop
cs
rcll
mov
inc
pop
jb
push
jns
insb
mov
mov
and
pop
test
dec
fwait
pop
scas
aaa
push
lret
gs
adc
cmpsb
pop
push
cwtl
ret
pop
push
movsl
push
pop
mov
jp
dec
out
xchg
mov
and
hlt
rcll
add
mov
push
xlat
jae
outsb
adc
notb
popaw
inc
clc
mov
sub
mov
push
mov
or
int3
inc
lret
pop
push
jae
add
leave
lret
jb
bound
out
mov
imul
xchg
inc
fmul
mov
mov
jae
roll
flds
arpl
and
cltd
jp
out
inc
mov
shrb
jne
nop
outsb
lret
repz
mov
inc
inc
enter
subl
cld
leave
mov
or
cmpsb
sbb
ficoml
dec
cs
push
inc
mov
xchg
jo
push
sbb
push
aam
and
cmp
jle
add
xchg
and
jg
enter
xchg
stc
ja
rcl
xchg
push
and
mov
lds
icebp
rorl
inc
das
lahf
pop
cmp
fisttps
push
adc
lods
int
iret
js
xchg
push
test
in
repz
fwait
sub
mov
ret
ror
fimull
push
and
pop
rcl
scas
fstpl
gs
rorb
ljmp
jmp
or
xlat
sbb
mov
fcompl
addr16
push
xchg
fistpl
mov
test
bound
pause
cmp
and
out
xor
aas
js
lods
fmuls
mov
shl
cmp
jp
shll
lahf
and
mov
xchg
pop
mov
lea
or
push
hlt
out
outsl
lahf
mov
push
dec
lret
shlb
sub
sbb
push
icebp
xor
dec
outsb
push
aam
push
cmpsl
jmp
mov
dec
pop
adc
scas
cmp
jbe
mov
xchg
jge
adc
inc
xor
push
fs
in
jg
mov
adc
loope
out
fcompl
leave
gs
pop
pop
or
cmp
push
mov
adc
es
sub
das
in
int3
call
xchg
add
add
add
pushf
xchg
stos
bound
int3
mov
inc
scas
adc
loopne
mov
cltd
jmp
push
xchg
jbe
pop
iret
xor
aad
popa
cmpsl
xor
int3
inc
rclb
mov
fisttpl
pop
into
mov
xchg
cmp
mov
jne
test
ljmp
lret
cs
xor
xor
call
xrelease
roll
push
cmp
addr16
inc
xor
xor
dec
xor
or
int3
das
jmp
sahf
xchg
lret
mov
jmp
sbb
inc
dec
jo
stc
xchg
shll
jbe
jge
int
and
arpl
sub
pop
cmp
pop
or
push
add
js
into
je
repnz
cmpsl
pop
or
mov
pop
nop
jle
hlt
out
scas
mov
scas
sbb
into
clc
add
imul
test
fidivrs
xlat
loopne
repz
movsl
mov
sub
dec
dec
sbb
xor
xchg
add
or
lock
jo
int
xor
inc
stos
adc
aam
sub
pop
inc
icebp
je
out
aad
lock
test
push
pop
add
hlt
xchg
outsb
push
push
shr
cmp
jnp
fmull
imul
dec
outsb
mov
adc
jns
fwait
jp
movsb
dec
aad
outsb
daa
sub
jb
xchg
xchg
inc
sub
push
mov
and
enter
xor
repnz
push
lret
mov
add
ret
int
cmp
dec
lods
je
jne
lret
sub
push
cmpsb
les
push
xlat
push
and
scas
lods
push
arpl
pop
pop
imul
xchg
mov
xchg
dec
les
fs
out
shl
into
inc
xchg
sbb
stos
push
out
mov
xchg
xor
ljmp
loop
icebp
out
push
dec
inc
in
add
pop
push
outsl
ljmp
xchg
push
ja
push
ss
lret
mov
pop
pushw
outsb
inc
das
pop
jl
fs
push
or
xchg
mov
xchg
inc
lret
pop
and
iret
cmpsl
rolb
or
outsl
ds
inc
test
lret
sti
sbb
sub
daa
fcos
lret
iret
sbb
sbb
scas
pop
leave
dec
pushl
lret
movsb
mov
lret
bound
dec
mov
inc
xchg
cwtl
neg
lods
push
mov
cmp
ret
pop
jne
cmp
push
imul
inc
ljmp
inc
in
into
mov
pop
repnz
aaa
xchg
rcrl
mov
dec
pop
jecxz
test
dec
out
nop
or
mov
gs
es
aas
popa
data16
xchg
lret
rclb
pop
icebp
sub
inc
insb
js
jo
outsl
lds
xor
lea
cwtl
out
pop
fs
test
xor
ret
dec
adc
sti
push
jnp
jmp
and
mov
sbb
out
lcall
test
pop
lahf
xchg
shll
mov
mov
cltd
mov
and
loopne
test
or
fwait
hlt
push
lock
aad
lea
int
xchg
mov
ja
out
dec
sub
sbb
push
lret
dec
push
or
dec
pop
lret
cs
xor
movb
nop
stos
adc
lahf
test
out
fsubp
pop
mov
add
ss
pop
idivb
stc
pop
sbbl
xor
adc
mov
jg
sbb
mov
jle
mov
loopne
lret
mov
in
out
pusha
push
xchg
mov
cwtl
in
xor
sahf
in
ljmp
test
xor
mov
jns
ljmp
std
sar
sub
mov
pop
lds
test
cmpl
test
xchg
inc
xchg
gs
lods
inc
in
push
into
xor
xchg
dec
mov
mov
mov
add
cmp
idiv
das
add
xchg
cmp
sub
ficomps
or
stos
pop
sti
jmp
faddl
push
dec
lcall
aad
cmp
stos
pop
mov
jp
pop
or
sub
pushf
out
cltd
jmp
nop
fwait
les
pop
and
jns
mov
stc
test
add
lcall
push
popa
push
dec
test
rcl
sbb
arpl
imul
mov
adc
mov
lcall
ljmp
loope
sbb
pop
mov
sar
pop
jge
popf
ljmp
in
cmp
ficoms
cwtl
cs
sub
mov
je
test
or
adc
ror
ficomps
cmpsl
sti
cmpsb
xchg
adc
shll
out
shrb
jmp
aam
loopne
outsl
bound
mov
sbb
xchg
cmc
into
adc
inc
inc
or
push
mov
jl
rorl
ret
repnz
call
cmc
rorl
scas
xchg
imul
leave
mov
jmp
sbbb
int
xchg
frstor
setns
aam
faddl
sbb
dec
fcmovnb
stos
add
repz
mov
or
nop
test
sub
clc
push
testb
xor
aad
rcrl
out
popa
sbb
out
mov
inc
sarl
jmp
push
push
dec
fldl
xchg
inc
or
sub
lods
fdivl
mov
sub
lret
je
adc
jecxz
scas
dec
sbb
or
rclb
jne
mov
xor
pop
fmul
in
add
incb
dec
ret
rcl
test
loop
loope
leave
pop
xchg
inc
call
jns
inc
repnz
xorl
dec
cltd
mov
dec
mov
cmp
popl
pop
xchg
in
cld
or
mov
hlt
movsl
sub
scas
add
mov
xchg
adc
iret
pop
insl
add
cltd
pop
and
sbb
roll
mov
data16
mov
jp
mov
fwait
mov
int
sub
push
mov
idivl
cmp
and
jecxz
das
insb
into
xor
adcl
pop
lret
movsb
push
push
pop
mov
cmp
mov
call
mov
cmpsl
lahf
mov
insl
mov
and
xchg
movswl
ret
or
dec
pop
sub
movsl
jp
and
fisubrs
sbb
jmp
adc
dec
adc
add
pop
jecxz
jns
xor
adcb
jno
nop
or
sahf
jle
adc
out
addr16
cld
mov
jo
adc
and
dec
dec
pop
lret
pop
pusha
repz
sub
leave
test
add
mov
sahf
mov
sarl
dec
ss
ror
sbb
ret
add
lods
sbb
xor
inc
in
and
insb
cmp
mov
or
divb
dec
jo
shr
cltd
les
push
pop
and
sub
xchg
pop
sbb
pop
fmul
aam
ja
lods
loopne
into
xchg
xchg
xchg
mov
cmp
imul
movq
out
adc
xor
add
mov
addl
cmc
add
loop
sub
mov
les
sub
sub
cmpsb
sub
mov
mov
cmpsl
push
jecxz
lcall
out
or
fsubp
push
psubq
dec
inc
mov
add
rol
fcmovne
ss
push
xor
mov
je
xchg
insl
sahf
mov
xor
dec
loope
imul
dec
loop
add
shlb
outsl
dec
nop
xor
mov
sub
mov
push
push
lcall
sub
test
cmpsb
pop
movsl
mov
or
jbe
jns
cli
fcoms
xchg
sbb
stc
mov
pop
jmp
and
std
xchg
ficompl
dec
mov
pop
out
mov
xor
or
jecxz
test
comiss
mov
pop
inc
movsb
lods
cmpsb
adc
push
out
jp
and
xchg
cmp
adc
or
mov
in
jae
xchg
fs
jmp
stc
lahf
dec
or
jge
outsl
lea
clc
gs
mov
xchg
mov
cmp
stos
pop
aaa
mov
inc
jo
stos
mov
and
inc
pop
ljmp
loop
cltd
cmp
movsl
jbe
jno
or
adc
dec
enter
mov
test
sub
aaa
mov
sbb
add
daa
fs
mov
inc
shlb
jge
mov
fimull
jmp
mov
sbb
addl
jmp
ja
stos
je
repnz
fs
or
cmpsb
add
lock
push
cmp
das
cmp
nop
insb
push
mov
and
arpl
pop
int
fs
lea
pusha
inc
inc
add
add
push
sbb
cmc
jp
movsl
roll
cmpsl
mov
mov
and
jl
cli
xchg
adc
dec
movsl
cwtl
into
adc
mov
icebp
pop
mov
mov
fcoml
mov
sub
mov
pusha
fs
cli
jnp
add
movsl
outsb
gs
popf
dec
lret
or
out
xor
or
xor
push
mov
and
scas
xor
jg
dec
out
mov
lock
mov
and
leave
fsubr
stc
jno
ss
int3
fnstenv
fcmovnbe
and
loop
lcall
cmp
ds
cmp
into
cmpsl
pop
decl
lds
mov
jge
mov
jg
pop
in
mov
iret
scas
push
dec
sti
arpl
cmp
lret
xlat
rolb
rorl
imul
xchg
es
xchg
hlt
dec
stos
xchg
popf
leave
xchg
xchg
sbb
and
test
adc
jb
nop
push
into
out
test
imull
cmp
xor
or
mov
lahf
stos
xor
outsb
test
push
cwtl
mov
hlt
iret
cmp
cmp
fs
cli
adc
scas
sbb
adc
dec
in
cmp
push
xchg
cmc
testb
inc
cld
or
daa
imul
pop
fldenv
mov
in
ret
int
ss
nop
into
push
dec
stos
cwtl
clc
mov
push
clts
xor
in
pop
cs
fsubrs
std
xchg
iret
inc
stos
dec
ljmp
out
hlt
xor
popa
add
bound
rclb
jne
cltd
jg
mov
int3
xor
cmpsl
inc
pop
inc
add
add
lcall
sbb
pushf
repz
hlt
sub
inc
jecxz
clc
push
and
xchg
pop
cmpsl
out
push
nop
test
out
out
mov
cmp
push
jecxz
push
adc
lret
bound
mov
pop
icebp
lods
sub
aam
aas
pop
push
std
test
push
cltd
aad
dec
jae
mov
movb
inc
inc
push
push
in
lahf
in
add
push
push
or
divl
xorb
add
movsb
mov
scas
fildl
movsl
cmp
aam
hlt
and
push
or
imul
test
jbe
cmp
daa
imul
dec
push
cmp
repnz
stc
jb
xlat
iret
movb
jge
jmp
xchg
push
pop
pop
mov
gs
lea
inc
aas
push
subb
ret
shrl
push
mov
sub
bound
test
icebp
cs
out
stos
pushf
xchg
and
rdpmc
rcrl
cmc
or
mov
adcl
jl
into
jns
mov
lds
scas
or
repz
cli
shl
outsl
shl
scas
les
lods
sahf
cmp
and
cmp
xlat
dec
mov
mov
repnz
cli
push
jp
push
jl
cld
data16
decl
fcmovbe
and
shrl
push
push
out
lcall
cmpsl
or
cli
push
sub
xlat
lods
adc
loop
dec
das
xchg
or
mov
pop
adc
inc
inc
stc
call
pop
lods
fisubl
andb
inc
stos
fcmovnb
cmp
add
xchg
dec
dec
cltd
int
inc
adc
mov
jb
rcll
addr16
mov
dec
pop
add
call
mov
cmp
sub
add
js
xchg
out
mov
sub
adc
jo
jno
stos
out
lret
xlat
lret
push
pop
aam
pop
mov
ret
push
sub
xchg
dec
lahf
stc
idivb
scas
dec
mov
jb
mov
add
loopne
xchg
and
push
test
push
test
adc
cmp
jne
aad
vmovd
add
mov
cs
into
orb
mov
aad
imul
push
xchg
push
adc
push
jne
into
push
dec
xor
pop
je
ja
dec
into
fisubrl
fbstp
cmc
lods
mov
hlt
into
clc
stc
mov
loop
mov
imul
push
jge
add
out
sar
sbb
jne
push
jg
xor
adc
mov
testl
popa
fldt
clc
jnp
ret
lcall
jne
mov
movsl
sub
and
or
leave
outsl
in
inc
push
dec
aam
jmp
fcmovnu
aad
mov
scas
mov
outsl
or
je
jno
mov
fst
icebp
scas
rcrl
jle
mov
and
jbe
or
imul
push
les
mov
pop
dec
aam
cmovne
inc
fsubl
idiv
add
pop
enter
and
push
dec
push
pop
push
xlat
jnp
stos
adc
es
scas
fxch
dec
mov
adcb
mov
pop
dec
xchg
bound
push
cmp
js
rcl
lcall
add
loopne
xchg
jb
adc
pop
xor
lods
out
jbe
xchg
adc
cmp
mov
mov
fisubs
or
sub
or
push
shlb
push
je
cld
leave
jb
loopne
cs
scas
adc
and
jns
fcomps
pop
jmp
andl
xchg
in
iret
fsub
mov
push
icebp
dec
fdivs
xchg
dec
pushl
ror
cmp
insb
hlt
jle
and
mov
jecxz
adc
in
ret
sbb
jbe
stc
inc
faddl
pop
pop
push
pusha
outsl
lods
xor
out
test
cmp
and
sub
std
scas
cli
gs
push
test
fmul
push
das
test
adc
mov
mov
imul
lahf
mov
shrb
inc
mov
lea
ret
aam
test
in
jb
dec
fwait
imul
loopne
loop
in
jbe
xor
test
pop
jo
sar
cmp
test
mov
loope
sub
out
leave
or
dec
insb
pop
and
leave
xor
or
sub
imul
xor
mov
xor
outsb
ja
or
out
jno
xchg
imul
xchg
imul
fs
adc
sbb
sub
lods
jmp
inc
ljmp
dec
ss
mov
imul
add
dec
cmp
and
mov
xlat
xchg
jb
shl
test
ds
shll
and
cmp
out
inc
int
jecxz
clc
mov
add
jle
insl
adc
bswap
repnz
movsl
aaa
add
fdivl
inc
rcl
dec
sbb
sbb
sub
sub
popf
out
cmp
cmp
pop
clc
out
lods
mov
in
je
lret
rorb
xchg
scas
fwait
push
inc
lcall
test
adc
std
xchg
mov
add
add
dec
sbb
mov
pusha
or
cli
pop
mov
aaa
shr
ja
repz
lret
lods
imul
xor
lods
xchg
ret
lret
push
mov
lret
jns
pop
inc
out
cmpsb
stc
push
cmp
xchg
outsl
rcl
xlat
jo
dec
ds
inc
cmpsl
push
je
sahf
bound
ljmp
mov
into
mov
popf
push
jo
and
mov
mov
lret
xchg
std
inc
loopne
or
xor
xchg
out
aad
sub
or
repz
cmpsl
mov
aas
mov
push
pusha
add
rcrb
cli
in
xor
push
adc
jmp
popf
cmp
dec
stc
push
sahf
add
xor
fnstcw
rcll
inc
in
jae
popa
into
fidivs
xor
xchg
out
arpl
jo
leave
jns
jb
adc
mov
lcall
jbe
test
enter
pop
int3
loop
rcl
sbbb
les
adc
mov
ja
mov
push
vcvtss2sd
syscall
cmpl
lret
call
cmp
and
cmp
jbe
jmp
pop
fisttpl
sub
scas
lahf
out
xchg
es
sahf
jns
dec
frstor
xor
and
movb
rolb
insl
out
pop
mov
lcall
test
jnp,pt
movsb
pushf
lret
std
outsb
sbb
xchg
or
push
xlat
repz
inc
lret
shlb
insl
pop
ret
movsl
push
test
out
push
dec
xchg
dec
loopne
push
sbb
scas
mov
mov
in
sbbl
sbb
subl
xchg
push
cmp
dec
out
xchg
not
jbe
fldcw
jle
out
outsb
add
addb
pop
out
aaa
sub
push
int
pop
jno
mov
movsb
cmp
xchg
inc
into
adc
xor
das
pand
mov
mov
fisttps
lods
test
ljmp
cs
hlt
push
mov
das
or
pop
imul
pop
sub
cmp
ret
inc
fs
outsb
aam
int
sub
aam
lret
stc
xchg
push
add
push
push
pop
xor
mov
pop
mov
mov
add
stc
xchg
shl
jbe
jno
mov
lock
loope
and
push
fwait
and
icebp
cmpsl
loopne
cmpsl
inc
outsl
mov
rorl
lea
pop
inc
jl
adc
mov
pop
mov
leave
adc
mov
and
sahf
call
out
add
int
rclb
add
cmp
imul
jb
test
fisttpl
ja
sbb
sub
or
dec
inc
nop
xchg
insb
mov
in
jl
pop
push
repz
and
test
pop
xchg
add
push
pushf
aam
roll
or
xchg
movsl
jno
inc
ss
push
sub
ljmp
call
lret
mov
push
in
out
lahf
ja
lcall
pop
sti
add
dec
jl
xchg
pop
add
jbe
imul
leave
scas
call
ss
xchg
popf
push
and
out
or
outsl
in
fnsave
lret
jmp
push
cmc
mov
in
out
mov
ds
addl
test
cmp
push
loop
xchg
inc
cmp
dec
xchg
int
push
int
cwtl
inc
xchg
jne
cmp
dec
adc
aaa
btc
pop
imul
mov
loopne
dec
int
cmpsl
or
int
jmp
inc
shlb
enter
int3
lret
pop
out
pop
stos
cmp
imul
test
sbb
mov
pop
sahf
imul
ret
stos
cmpsl
call
mov
cmp
or
sbb
sub
and
or
pop
jbe
imul
adc
add
ja
into
jle
adc
pop
sti
call
inc
or
xchg
pop
lret
std
cmp
sub
sub
xchg
inc
xor
arpl
inc
into
lods
mov
sub
cwtl
mov
jmp
fcomps
push
leave
iret
jnp
aas
lret
jle
in
jo
mov
sub
jb
mov
or
inc
sahf
adc
cmp
jmp
rcr
gs
cwtl
fldl
xchg
stos
scas
sub
xlat
scas
mov
pop
enter
nop
andb
add
adc
addl
and
jg
fmuls
jecxz
xchg
in
iret
into
xor
mov
les
sbb
ret
pop
cmp
cmp
mov
test
push
dec
inc
jbe
rcrb
dec
das
xchg
nop
dec
cs
bound
fisttpll
imul
xor
je
aad
pop
and
sub
pop
xchg
test
int3
push
xor
cmp
scas
jg
loopne
jl
jmp
push
mov
call
sbb
test
cmpsl
lds
jge
mov
or
xchg
push
hlt
and
jo
pop
pop
pop
stos
insl
sbb
sub
repnz
lret
sti
out
cwtl
adc
and
adc
mov
stc
movsl
lods
and
rcrl
fists
inc
inc
sahf
or
mov
arpl
and
mov
clc
fwait
out
lods
pushf
sbbb
or
int
in
jmp
movsl
int3
in
fwait
mov
dec
jle
xchg
push
mov
push
or
mov
dec
into
in
fwait
test
jbe
cmc
adc
aam
inc
cmp
gs
push
nop
xor
aas
rcl
mov
mov
or
inc
xlat
adc
and
out
inc
add
popa
jmp
or
pop
mov
mov
imul
and
es
sub
in
ficompl
inc
mov
scas
inc
adcl
jge
sub
or
mov
sbb
jo
test
xchg
sbb
dec
mov
ds
js
xchg
andl
xor
lret
xor
cmp
mov
sbbl
jmp
pop
jne
and
cmp
xlat
hlt
lret
int3
std
cmpsl
mov
cmp
jecxz
mov
aam
popa
sub
setne
test
test
xchg
mov
pop
or
dec
in
pop
jb
imul
cmc
lret
and
shll
add
jge
dec
in
sub
hlt
mov
into
sub
lods
and
push
sub
sub
aas
out
lret
rclb
jnp
or
jbe
adc
or
sahf
cli
repz
call
inc
in
sub
sub
jo
notl
rcl
inc
arpl
ss
or
fbld
mov
dec
xlat
xor
adc
fdivr
stos
int
dec
ds
js
sub
sub
clc
shlb
adc
ja
xlat
mov
push
int3
jle
mov
cltd
jmp
xchg
imulb
mov
shl
dec
loope
mov
fsqrt
out
repz
lea
push
cmp
mov
mov
stos
pop
adc
xor
jbe
enter
cmp
mov
test
push
xchg
push
jns
movsl
aad
pop
rclb
dec
adc
jbe
pop
aam
into
rolb
lahf
mov
xchg
in
inc
aaa
insb
dec
adc
xchg
shl
sub
cmp
bound
jnp
xchg
sub
fcoms
leave
ja
out
pop
and
jno
add
xchg
movd
xor
xchg
cmp
ss
leave
cltd
out
out
outsb
lds
out
fisubl
sbb
jge
outsl
and
adc
loopne
mov
daa
fmul
jb
jmp
test
stos
pushf
out
data16
cld
xorb
test
inc
cmc
mov
inc
lods
fmul
mov
pop
mov
cld
je
icebp
or
and
mov
add
fcompl
sub
sbb
shlb
fnstenv
mov
into
std
dec
push
xor
sub
dec
scas
test
and
scas
movb
fldcw
out
iret
push
adc
sbb
pop
pause
sbb
mov
inc
int3
and
imul
jmp
sub
push
and
mov
xchg
push
icebp
in
stos
fwait
pop
lret
mov
xchg
fadds
cld
into
ds
push
cs
jp
xchg
aad
sbb
enter
mov
fldenv
mov
insb
clc
sbb
dec
ret
in
fisubl
xorl
into
repnz
ds
or
pop
in
add
repz
scas
adc
mov
pop
or
lret
lahf
addr16
push
jo
push
mull
ds
in
fsubs
in
pushf
and
cmpsb
pop
xlat
jl
pusha
add
jp
aaa
adc
pop
clc
sub
mov
mov
gs
idivb
popf
test
adc
push
xor
inc
jnp
ret
imul
pop
ja
sub
xchg
pop
push
push
sub
and
jg
fwait
and
lods
fsubr
jmp
out
test
adc
and
ljmp
add
push
push
push
cmpsb
stos
jne
mov
loope
inc
jl
mov
xchg
inc
fcomp
pop
mov
xlat
jae
or
xchg
clc
push
cltd
cmp
jnp
in
jle
stos
pop
dec
ret
pop
adc
int3
fucom
and
sub
push
inc
mov
test
sub
lods
cld
sbb
sahf
xchg
dec
test
mov
and
cmp
testl
or
out
test
jle
lock
imul
xchg
xchg
dec
sbb
outsb
dec
cs
aam
imull
cltd
lret
or
mov
ljmp
push
fwait
jmp
jno,pn
fadds
jl
xchg
inc
pop
in
add
scas
out
jb
dec
imull
nop
dec
jne
test
faddp
pushf
pop
sub
sbb
int3
lds
jp
push
shr
cmp
sub
jbe
dec
mov
int3
movsb
inc
mov
push
xchg
xchg
shlb
fmulp
push
or
mov
xor
push
cmp
and
test
and
mov
or
mov
xor
aad
xor
xchg
adc
sub
and
xlat
push
adc
jle
xchg
sti
mov
cmp
cmp
sbb
gs
jo
lods
or
into
lahf
std
push
ficoms
sbb
mov
dec
sub
imul
in
loopne
ljmp
fcoms
pop
sbb
sahf
sub
lret
mov
flds
or
dec
cmp
or
stc
inc
dec
fsubl
jecxz
add
sub
lods
xchg
mov
mov
xchg
imull
movsl
fs
and
lret
js
rclb
pusha
pushf
xor
add
cmp
popf
pop
jo
push
test
stos
scas
sub
dec
mov
rcl
sahf
sbb
cmpsb
fwait
dec
lgs
insb
mov
jnp
cli
xlat
or
cmp
dec
pop
popa
and
mov
insl
loopne
inc
fs
dec
pushf
lret
and
ret
movsl
pop
push
rclb
pop
mov
pop
mov
jae
sub
out
sbb
xchg
lret
jbe
scas
jo
lret
movsl
xchg
push
addr16
sbb
inc
jnp
dec
sub
test
test
pop
push
and
aad
jle
push
mov
push
add
movsb
pop
xchg
xchg
mov
lahf
cwtl
rorb
mov
roll
mov
cli
push
fadd
ja
call
add
mov
repz
outsb
jno
stos
sbb
inc
mov
mov
sbbl
loope
clc
mov
mov
rcrl
dec
cmc
xchg
call
inc
pop
stos
movsb
sbb
pushf
adc
adc
lds
call
push
in
test
stos
movsl
pop
aas
pop
lret
xchg
dec
adc
pop
mov
dec
jmp
test
jns
mov
js
and
iret
sub
push
cmp
mov
stc
xchg
xchg
lods
pop
pushf
and
cmpsl
xor
mov
jno
ja
int
mov
mov
ds
in
mov
aad
mov
add
mov
imulb
lock
xchg
push
mov
arpl
dec
mov
xchg
addb
cmp
in
sahf
loopne
je
cld
jmp
push
adc
mov
cmp
not
enter
add
pop
sbb
mov
push
in
or
xor
and
cmp
test
lret
sub
jnp
push
shlb
push
push
xchg
pop
and
cmp
aaa
scas
xor
out
stos
cld
test
pop
adc
sbb
push
movl
cmp
xor
jge
std
xchg
adc
mov
pop
and
out
push
orl
dec
leave
or
out
das
push
imul
xorb
fs
mov
mov
loope
fimull
cmpsl
and
jb
fwait
mov
xchg
sbb
jecxz
mov
dec
push
fwait
mov
aad
xor
lods
aaa
movsb
xchg
jle
hlt
jge
rcrl
dec
push
imul
jnp
add
mov
push
fsts
fisubl
mov
fiaddl
xchg
loope
push
fistpl
mov
xor
scas
aas
int3
inc
adc
loop
lret
jno
jle
scas
fldt
cmp
dec
lcall
pop
outsb
out
cmpsb
xchg
jg
test
gs
loopne
mov
jo
mov
push
lock
hlt
test
adc
lods
lcall
addr16
ljmp
sbb
rolb
add
mov
jb
syscall
sub
push
mov
or
cmpsb
jo
jge
mov
loop
xor
push
mov
aas
repz
in
adc
ja
nop
outsb
jecxz
mov
cli
mov
fdivl
insl
jmp
lods
inc
out
sub
jecxz
lret
add
cwtl
jno
dec
cmp
pusha
dec
das
idiv
pop
fwait
adc
mov
lret
and
jae
add
sarl
mov
mov
dec
add
mov
out
cltd
inc
xchg
sarb
mov
or
aam
insb
jo
dec
xchg
xchg
xchg
jno
push
call
rolb
sbb
xor
sub
insl
mov
inc
loop
push
xchg
pop
movsb
sub
call
arpl
push
pop
adcl
adc
outsl
xchg
fmull
xlat
dec
in
mov
nop
clc
sahf
inc
sbb
mov
loope
inc
sti
inc
pop
push
mov
or
int3
xchg
int3
dec
xor
jecxz
or
pop
shr
mov
adc
ds
rol
arpl
addr16
mov
push
dec
jp
mov
xor
add
pop
jecxz
pop
movsl
xchg
icebp
dec
xchg
fsubrs
ret
fucom
mov
mov
aas
fwait
xor
test
xchg
xlat
xchg
fidivrs
pop
and
pop
stos
fcom
sbb
jl
jmp
imul
xchg
cli
sub
jno
push
mov
push
push
sti
push
sbb
add
dec
mov
mov
aas
das
sub
add
dec
xor
pop
into
dec
push
mov
lea
ficoms
fcom
and
inc
mov
mov
inc
add
mov
dec
jb
pop
xchg
fistl
xchg
cmp
lret
cli
jle
jno
mov
js
aad
lret
pusha
pop
je
das
jbe
jae
rcr
inc
cmp
add
cmp
xchg
dec
push
int
mov
add
fsubs
call
jmp
cmpsl
mov
push
test
mov
xchg
hlt
je
loop
outsb
imul
mov
dec
dec
test
out
iret
int3
sahf
enter
dec
cmp
sbb
sar
imull
push
shlb
push
sub
jne
cmp
scas
mov
insl
mov
dec
push
add
out
sbb
lret
data16
dec
xor
inc
cmp
fsubrl
bound
add
out
and
xor
clc
add
adc
add
fstpl
std
movsl
aam
orb
enter
jne
push
adc
gs
mov
popa
mov
pop
movsl
das
aaa
fmull
xchg
jno
or
sahf
in
and
icebp
je
popa
lret
add
mov
lods
xchg
in
test
and
ljmp
lcall
sub
cmp
inc
arpl
imul
movsl
lret
mov
adcb
call
maskmovq
imull
jb
movsl
ss
push
adc
jle
jl
int3
dec
sahf
cmp
nop
inc
shll
pop
lcall
xchg
rcr
dec
or
imul
insl
rclb
lcall
xor
leave
test
push
push
adc
pop
nop
lret
jge
out
les
or
js
ss
repz
inc
mov
lock
push
cmc
out
out
jb
jns
push
cld
inc
aaa
into
xchg
xchg
add
sbb
push
jmp
sbb
popa
aad
cmpsb
mov
and
pop
fbstp
jmp
imul
pop
mov
or
inc
mov
or
mov
cmpsb
loope
stc
push
ret
lret
xchg
pop
sub
arpl
jmp
imul
adc
lods
fildll
jbe
xor
and
mov
mov
push
and
out
pop
mov
mov
sahf
in
jb
int3
ljmp
or
rcrb
enter
mov
stc
ss
lret
rol
aad
and
pop
popa
ds
mov
les
fld
xor
add
push
pop
pop
fmuls
je
push
ret
mov
mov
loopne
mov
mov
lahf
and
jae
push
ret
pop
jnp
or
out
pop
jle
test
daa
pop
xor
hlt
inc
cmpsl
mov
aas
rcl
cmp
dec
mov
fcompl
lods
cmp
mov
mov
push
mov
enter
mov
pop
adc
test
repz
mov
leave
stos
jp
lods
icebp
inc
mov
insb
and
mov
mov
int
add
and
insb
arpl
xchg
sbb
ret
js
push
iret
push
sub
sub
or
pop
jbe
cmpsb
in
int3
mov
cmc
aas
mov
std
stos
sbb
mov
cmp
cmpsl
imul
inc
jbe
cli
and
cmp
in
push
xchg
data16
inc
enter
test
sbb
test
xchg
outsb
pop
cmp
or
xchg
push
or
mov
jle
into
jg
pop
fstpt
jbe
imulb
mov
dec
inc
jno
add
and
sub
loope
shrl
mov
mov
xchg
cld
add
mov
pop
fwait
lcall
mov
adc
sbb
inc
cltd
daa
xorb
icebp
jae
adc
xor
lods
shl
sub
lret
mov
xlat
pop
pop
bound
sti
push
xchg
ljmp
lods
push
jg
adc
jge
xor
jae
push
ja
sti
xor
dec
xchg
jecxz
mov
stc
or
sub
mov
mov
into
adc
ffree
jbe
rcrl
sub
push
lret
sbb
xchg
fistps
add
in
push
rol
mov
nop
mov
jle
cmpsl
outsl
lcall
adc
mov
sbb
mov
sti
push
fdivl
hlt
cmpsl
scas
call
ret
popa
and
nop
cmp
out
gs
js
pop
mov
xor
aam
mov
xor
int3
or
dec
out
icebp
push
mov
inc
jge
ja
cmp
add
mulb
sub
sbbl
sbb
lret
dec
fwait
insl
push
daa
jl
mov
cli
jnp
mov
cli
fimuls
push
dec
inc
or
aas
aam
cmc
nop
loopne
mov
neg
xchg
in
gs
faddl
lock
sub
inc
lret
imul
sub
or
loop
shlb
cmc
sub
push
adc
mov
popa
cmpsl
repz
or
jbe
mov
sbb
lahf
sub
mov
jge
fdivr
inc
scas
xchg
movsl
push
ror
cmpxchg
pop
jecxz
mov
add
imul
int3
pop
int
scas
pop
jmp
test
mov
pop
mov
push
mov
pop
gs
push
xchg
inc
fs
push
jg
jecxz
push
jns
ret
push
sub
lret
xchg
xchg
fcoms
dec
cmp
mov
cmpsl
mov
in
into
push
xor
xchg
cltd
int3
pop
rol
adc
pop
jbe
push
test
dec
mov
imul
mulb
fidivl
aam
sub
pop
push
dec
sbb
jbe
jp
mov
xor
arpl
cmpsb
sbb
mov
jns
into
or
or
add
xor
xor
and
mov
insl
test
push
inc
dec
inc
xchg
cwtl
cmp
pop
test
jno
scas
push
repnz
sbb
inc
lods
add
sbb
push
jl
push
jns
cmp
sub
push
or
inc
dec
movsl
push
mov
outsl
imulb
mov
out
scas
aam
ret
sbb
iret
mov
mov
xchg
adc
sahf
add
mov
push
push
pop
cmp
test
dec
add
jne
cmp
jg
mov
and
int3
jmp
pusha
xor
mov
cmp
dec
fndisi(8087
push
js
dec
fwait
lock
test
lds
jp
outsb
aam
scas
and
mov
jmp
pop
test
fidivl
stos
shll
divl
aaa
add
aas
jo
adc
push
xchg
sub
test
mov
stos
sti
dec
jbe
popf
shlb
js
push
test
jecxz
adc
cmp
sub
mov
mov
xor
pop
cmp
add
je
nop
out
adc
lret
add
clc
int3
outsl
lcall
mov
mov
xchg
daa
inc
movsl
fwait
popa
ljmp
mov
adc
mov
aaa
aad
jl
mov
xchg
dec
push
jns
ret
sbbl
fmull
shrb
rep
aad
jne
stos
cmp
jg
and
idiv
mov
fcmovnbe
push
mov
cmp
mov
sti
inc
imul
push
fdivrs
insl
adc
pop
adc
and
imul
push
pop
push
lods
fstpt
mov
sub
mov
lds
push
in
iret
negb
lret
jbe
adc
inc
out
hlt
lret
ror
or
mov
test
into
dec
int
add
cmpsb
add
stc
lods
sahf
lcall
sbb
dec
into
push
mov
iret
push
into
mov
inc
fidivrl
in
adc
outsl
fsubrs
jge
iret
push
lods
inc
arpl
push
push
jnp
test
int3
or
mov
mov
or
shlb
adc
jno
mov
cs
pop
pop
cmp
dec
or
in
test
push
adc
sahf
outsl
imul
mov
insb
aas
mov
push
lods
imul
ret
jbe
fdivs
dec
dec
mov
push
mov
mov
or
jae
test
cli
jecxz
lods
push
push
out
inc
ja
push
xchg
stos
repz
aam
daa
in
jo
sbb
sbb
xchg
mov
mov
push
call
pop
sbb
in
jmp
xor
lahf
or
cmp
clc
sub
lret
jbe
or
xor
lds
pop
pusha
jmp
sub
dec
inc
fs
xchg
mov
and
dec
adc
xlat
mov
inc
repnz
jae
xchg
testb
inc
adc
call
cld
mov
dec
jmp
push
ljmp
push
jg
add
sub
lret
leave
xchg
iret
cmp
push
subb
rclb
scas
add
inc
sbb
es
mov
and
stos
adc
xchg
enter
scas
pop
sbb
or
cli
pushl
jge
pop
mov
movsl
pop
cltd
fwait
sub
int
or
push
jg
fbstp
pushf
mov
push
pop
sub
incl
andb
psubsb
pop
test
push
xchg
cmpsb
dec
in
xchg
sahf
rorl
push
ficompl
mov
pop
gs
xchg
repz
rol
xor
dec
hlt
dec
mov
cmp
sti
mov
mov
aaa
ljmp
repz
adc
adc
cltd
test
or
stc
mov
sbb
push
rorb
xor
sbb
pusha
sbbl
bswap
nop
ret
mov
add
or
mov
sub
mov
sub
icebp
repz
or
add
cmp
pop
sbb
rorl
mov
ret
ret
sbb
scas
arpl
or
fistpll
push
mov
pop
pop
out
or
imul
mov
jo
xor
rclb
ret
ret
pop
jbe
ja
jae
pop
jg
addl
inc
fisttpll
inc
mov
push
aas
sub
or
les
andb
ja
dec
testb
sbb
in
int3
or
xchg
movsb
popl
mov
adc
hlt
adc
stos
or
or
adc
jecxz
inc
in
lea
inc
lock
xor
xor
repnz
ds
imul
jo
std
sarb
pushf
lock
pop
mov
je
sbb
lret
mov
fwait
in
mov
fstl
xor
insl
pop
test
jae
fldcw
data16
xchg
mov
iret
popf
jp
push
add
push
enter
faddp
mov
ja
in
cwtl
testl
mov
dec
nop
lods
inc
push
testb
hlt
into
jbe
test
adc
jae
sub
out
movsb
rcrb
jnp
and
lods
sub
addl
pop
aaa
sbb
dec
movb
xchg
test
mov
cmp
jbe
lods
mov
mov
and
test
pop
dec
int3
jge
pop
je,pn
jmp
xor
xchg
in
addr16
lods
popf
cltd
out
in
jae
repnz
sbb
mov
mov
xchg
cmpb
shl
push
scas
dec
sahf
jbe
nop
sbb
lcall
mov
sub
cmpsl
mov
loop
sub
lret
jne
or
jns
test
xor
lret
fbstp
dec
mov
sub
in
fnstenv
push
mov
shll
fst
std
mov
push
mov
inc
lcall
mov
dec
mov
mov
out
pop
inc
into
jo
fimull
cmp
xchg
fcomps
in
nop
dec
shrb
add
sbb
das
cwtl
cmp
push
jecxz
sbb
rcl
hlt
xor
xor
jl
cmpsb
sbb
loope
mov
push
inc
jnp
jb
out
inc
push
mov
loop
mov
aam
cmpl
movsl
push
into
mov
lock
pop
sbb
push
push
pop
jmp
clc
ret
mov
jb
push
inc
in
and
mov
sahf
sub
loopne
test
addr16
std
dec
shrb
sub
or
ss
aas
and
or
cltd
and
or
or
imull
mov
in
jne
and
push
inc
mov
lret
lret
pop
mov
cmpsb
mov
add
cli
cmp
call
push
xor
rorl
inc
int3
mov
mov
push
out
jp
mov
sub
sbb
cli
mov
in
repnz
insb
adc
aad
jecxz
xor
clc
fcom
xor
cltd
mov
lret
pushf
das
mov
cmp
mov
jbe
fst
inc
call
ja
js
ss
push
sti
inc
add
jmp
add
inc
xchg
mov
imul
inc
rcr
mov
dec
pop
pop
or
roll
push
mov
out
lods
and
mov
into
add
jbe
mov
cmp
cmpsb
rclb
test
mov
or
movsl
daa
mov
fimull
fwait
or
pop
dec
stos
test
or
in
dec
in
cmc
rcll
insl
lret
and
push
outsb
adc
ja
jnp
ss
test
jmp
pop
lret
scas
filds
jo
cmpsb
mov
xchg
insl
shrb
and
jne
in
es
in
loopne
push
std
lret
data16
mov
pop
outsl
aaa
scas
movsb
xchg
xchg
das
pop
addl
xchg
in
aam
cli
inc
jne
push
pushf
xchg
into
hlt
clc
jns
aas
fistpl
inc
out
xor
cmp
mov
repnz
lahf
addr16
mov
sub
cmp
xchg
icebp
scas
jbe
or
mov
dec
outsb
lret
sbb
bound
mov
insb
test
xchg
mov
ja
daa
push
into
popf
ror
push
xor
fstl
cmc
lret
cmp
iret
cli
inc
ja
rorb
mov
ret
lcall
dec
out
pop
std
subb
idivl
or
aas
jne
push
fs
push
push
jg
dec
jb
es
push
clc
inc
loopne
in
and
test
rorb
lea
cmpsb
jecxz
bswap
popa
sub
jmp
in
sub
mov
and
push
std
inc
or
mov
dec
xor
inc
clc
mov
mov
and
ljmp
int
addr16
loopne
leave
std
insl
aaa
or
sti
mov
in
popf
inc
in
aad
cmp
pop
shr
hlt
dec
std
xchg
ljmp
iret
aam
adc
xor
jno
into
add
jo
cs
mov
clc
adc
leave
mov
ret
shl
insl
ljmp
insb
push
rorl
shrl
mov
sbb
iret
xchg
mov
and
mov
mov
lahf
insl
xchg
inc
stos
jbe
out
add
int
xor
aaa
shl
cmp
lea
cltd
insb
ret
ss
lcall
xchg
xchg
cmp
sbb
add
xchg
incb
cmc
orb
xchg
cmp
push
lret
fsub
ja
pop
cmc
adc
dec
sub
pushf
jo
mov
mov
xor
add
repnz
popf
jo
es
lahf
lods
pop
ret
shrb
cmovae
ds
imul
adc
bound
sbb
lds
sub
ret
jbe
pop
mov
nopl
dec
es
mov
push
fnstsw
pop
aas
cmp
jmp
adc
cmp
lds
sbb
xchg
push
jmp
push
insb
addl
mov
into
cmp
out
das
cs
sbb
cmp
bound
es
xchg
out
xor
pop
test
jg
jmp
imul
sbb
out
rol
or
lret
add
fimuls
push
xchg
pop
sarb
cmp
xchg
stos
into
sahf
insl
xor
lods
push
push
jle
repnz
loope
push
pop
into
ljmp
fstp
std
dec
pop
subb
adc
mov
fcompl
or
sbb
or
stos
xchg
stc
sbb
sbb
into
aaa
push
sbb
jb
push
ds
sub
inc
shll
int3
push
dec
js
xchg
xor
lds
out
dec
cmp
dec
add
and
test
lea
fxch
xor
inc
pop
outsl
mov
pop
jbe
xor
rorb
mov
jp
inc
fwait
stos
jae
dec
add
mov
lds
xorb
jp
inc
mov
loope
das
mov
push
popa
stos
xchg
mov
ret
scas
out
sbb
imul
movsl
lods
mulb
inc
ss
rorb
lret
iret
mov
adc
aaa
push
data16
test
nop
test
insl
addr16
sti
cltd
push
fmul
and
jge
dec
pusha
pushf
imul
xchg
into
or
ror
mov
sub
xchg
test
mov
sbb
in
ds
bound
cmpsl
shlb
aam
stc
fwait
adc
inc
inc
jns
ds
inc
inc
jbe
and
lret
inc
and
pop
xor
rolb
xchg
pop
sub
movsl
jecxz
sub
mov
dec
or
hlt
cs
pop
xchg
cltd
lods
lea
and
icebp
ds
mov
pop
mov
adc
add
mov
imul
mov
popa
insb
test
outsl
and
adc
rorl
ss
ds
jge
clc
lcall
xchg
xchg
or
imul
jg
push
lahf
adc
pop
test
jne
imul
xchg
aas
sahf
cmp
outsb
aad
and
mov
xchg
push
jbe
std
mov
push
pop
nop
pop
shrl
orb
mov
test
movsb
rclb
dec
mov
mov
inc
mov
subl
test
jne
lcall
lret
in
and
mov
or
into
and
clc
mov
mov
sbb
jb
aam
push
pop
xchg
repz
add
mov
dec
mov
push
adc
out
movsb
xchg
xchg
lock
sahf
cmp
cmp
xor
fcmovbe
iret
je
xchg
inc
inc
rcl
outsb
lret
and
mov
jmp
lret
fwait
popa
lret
jmp
xchg
stc
mov
dec
jae
pop
in
mov
sbb
mov
ret
mov
sahf
jge
pusha
adc
xchg
lds
out
lret
inc
mov
xor
fmull
test
add
test
cmp
fwait
repz
inc
test
dec
loope
insb
lea
jge
push
into
lcall
cld
dec
push
inc
mov
fldt
leave
jne
pop
mov
mov
adc
jle
xor
out
jg
imul
fcomp
es
adc
ret
lea
pop
movsl
lods
cli
out
jb
stos
call
add
xlat
jmp
mov
scas
mov
ret
stos
out
push
or
shrb
leave
call
adc
xchg
sbb
test
lock
xchg
xor
add
push
push
mov
cmpsl
jne
xor
rcrb
xor
popf
jl
pop
push
ret
cwtl
push
or
push
pop
cmp
fcomps
jp
pop
movsb
aam
or
xor
aad
ja
jle
cmpl
or
bound
pop
add
aaa
cmp
mov
push
and
cmpsb
aam
popf
inc
jle
inc
in
mov
mov
bound
dec
xchg
clc
mov
xor
es
lods
jnp
enter
in
jg
fwait
cmp
mov
dec
int
xor
loope
mov
jl
jp
repnz
xor
in
mov
and
test
outsb
push
jbe
add
imul
xchg
in
jp
test
sbb
sub
dec
xchg
loopne
fsubrl
dec
push
mov
xchg
cli
xchg
sbb
loop
sub
adc
xchg
cmp
sahf
sbb
mov
jge
mov
inc
insb
mov
int
add
rol
test
es
fmul
out
xchg
sub
js
push
rep
and
and
adc
inc
jb
cltd
cld
or
data16
lds
adc
cld
push
cltd
div
inc
dec
or
rcl
cmp
into
inc
iret
xchg
rcrb
mov
sub
mov
mov
repz
cmp
call
xor
fs
test
sbb
testb
sub
out
scas
and
int
loop
or
xor
loopne
rcrb
inc
cmp
mov
pop
insb
sbb
mov
mov
rol
orl
pop
js
aas
aas
sbb
out
adc
stos
dec
inc
jp
mov
xor
je
dec
jo
xlat
shrl
fcmovnbe
push
push
mov
ljmp
in
mov
inc
xchg
arpl
xor
push
shr
mov
inc
add
fwait
fs
leave
cmpsb
test
push
scas
cmp
arpl
shrb
out
xchg
xchg
lods
js
inc
mov
repnz
jnp
pop
inc
dec
sbb
dec
push
cmp
cmp
mov
shl
or
insl
push
mov
sti
into
sbb
mov
push
scas
inc
mov
pmaddwd
addr16
lock
lret
jno
cmp
adc
push
mov
mov
jmp
dec
xchg
ss
adc
lea
incb
mov
sub
pop
inc
lret
mov
out
and
push
or
sub
jl
sub
sub
sub
int
mov
movsl
mov
test
jnp
mov
into
mov
add
out
sbb
mov
icebp
clc
sahf
int3
mov
lea
enter
lods
mov
push
icebp
dec
cli
mov
insb
push
or
dec
mov
mov
les
inc
or
mov
fcompl
ret
sbb
mulb
fldenv
popa
xor
fs
fwait
ljmp
or
push
mov
and
sbb
out
mov
xor
les
pusha
add
or
arpl
pop
cmpsb
mov
jp
adc
or
ret
jb
in
call
fstl
cmp
push
in
xchg
mov
shll
or
xor
mov
loopne
dec
mov
out
sbb
dec
push
mov
jb
arpl
in
stos
aam
adc
mov
cmpsl
dec
data16
sub
fsubrs
ss
pop
sub
scas
enter
js
subb
or
inc
fsubp
jne
mov
inc
mov
arpl
fbstp
sbb
popa
les
jae
sbb
stos
cli
movsb
xlat
pop
xor
sub
repz
jb
and
in
and
push
mov
mov
adc
xlat
test
addb
inc
movsl
jg
imul
lods
push
insb
scas
and
add
push
data16
and
test
or
out
or
divl
shl
push
sti
sets
adc
dec
scas
call
push
mov
lcall
push
sub
mov
mov
out
addr16
or
xor
sub
sahf
popa
inc
pop
insl
mov
into
add
push
dec
dec
adc
xchg
mov
mov
xor
jnp
push
xor
fcom
xor
mov
add
ret
lcall
cmp
jmp
inc
push
add
in
stc
in
mov
xorl
push
push
dec
xchg
shll
out
fst
sbb
cmc
mov
jo
insl
jbe
popa
push
leave
out
and
mov
lods
fdivr
divl
into
pop
mov
dec
popa
pop
mov
lds
je,pt
out
inc
addl
ret
or
xchg
lods
xchg
popa
or
xchg
lret
mov
in
mov
cmpsl
pop
outsb
rcr
dec
xchg
xchg
nop
mov
je
jmp
pop
incl
shl
out
or
sbb
jnp
inc
sbb
bound
clc
xor
fimuls
imul
sbbb
cmp
out
test
mov
sahf
dec
xchg
pop
sub
xchg
push
ja
test
mov
imul
pop
xor
mov
mov
jbe
pop
mov
movsb
inc
or
insb
mov
sbb
push
out
sub
push
mov
push
cmc
aam
loopne
inc
out
notb
dec
jg
mov
pop
in
mov
push
addr16
pop
and
push
call
push
andps
mov
sub
cmp
rcll
out
cmp
or
or
sub
out
jg
xchg
punpckhdq
jp
cmpsl
dec
adc
pop
cmp
rcrl
xor
repz
sub
iret
sbb
inc
xor
inc
or
shrl
ret
fdivs
xchg
mov
or
mov
pop
inc
sub
sti
dec
pushf
into
loop
out
mov
fsubr
dec
cltd
mov
out
stos
je
pop
addr16
push
std
pop
jbe
shrl
out
sbb
je
push
mov
rdmsr
int3
ja
lock
or
out
ficompl
push
sbb
in
jge
inc
sub
add
cmpsl
jle
push
mov
dec
mov
cwtl
push
js
fildl
jno
lods
in
fs
dec
push
cltd
push
xchg
and
das
mov
js
push
int3
loope
xor
and
and
cmc
hlt
fimull
sahf
add
sbb
add
push
and
bound
pop
mov
ss
mov
in
push
xchg
mov
lcall
push
out
in
repnz
pop
jo
push
fimull
out
inc
and
stos
mov
loope
add
ljmp
icebp
lds
into
inc
in
pushf
dec
cwtl
push
mov
mov
push
pop
or
into
lss
add
lods
pusha
push
cmpsb
pop
adc
int3
mov
or
xor
jne
js
mov
cli
inc
mov
and
push
and
add
int
push
pop
or
inc
icebp
insl
lea
mov
mov
push
mov
adc
ror
stos
sbb
loopne
repz
dec
gs
lcall
xchg
aaa
nop
aas
inc
lods
std
fistpll
cs
xchg
leave
and
jns
into
dec
fildl
pop
nop
push
jmp
cmpsl
int3
sbb
or
sub
xor
mov
lret
jae
rolb
or
and
iret
pop
xchg
mov
rcll
pop
add
cltd
mov
fwait
dec
nop
and
mov
insl
add
movb
dec
shll
testb
addr16
jo
lock
insb
test
stos
xchg
xchg
mov
into
pop
cmp
xchg
insl
shlb
in
mov
pop
pop
jbe
repnz
pop
cmp
scas
es
ds
adc
push
dec
jae
push
scas
pushf
stos
cld
test
jmp
mov
out
push
mov
mov
adc
and
and
or
call
or
inc
inc
add
data16
and
lcall
incb
sub
adc
icebp
push
ds
add
and
jbe
fisubrl
nop
scas
and
lahf
mov
ret
pop
test
ljmp
cmpsl
and
bound
xchg
dec
xor
mov
test
pusha
jecxz
push
testb
dec
ror
xchg
je
mov
add
jbe
inc
les
fucomip
loopne
jae
fadd
aas
sbb
cmc
pop
fs
dec
xchg
pop
dec
xchg
ret
subb
pusha
in
lea
fsubrs
gs
sub
into
mov
ds
and
inc
ljmp
ficoms
mov
xchg
dec
ficoms
cwtl
test
insl
ficoms
repz
leave
or
ds
fcmovne
fwait
into
jae
jae
jno
icebp
mov
mov
mov
insb
pop
shll
jbe
das
repnz
jno,pn
pop
mov
js
or
inc
in
push
lret
aaa
ds
mov
testl
and
mov
jae
xor
into
outsl
arpl
pusha
std
cmp
and
jge
fsts
icebp
mov
xorb
inc
xchg
or
lock
popf
jae
xor
dec
xchg
cmp
cmc
nop
shl
fisttpll
mov
dec
jnp
push
xchg
push
divb
in
ss
mov
gs
and
faddl
push
rolb
push
lcall
mov
xchg
push
stc
lret
pop
pop
cmpsl
test
arpl
mov
or
adc
data16
dec
loope
cmpsb
out
inc
insb
adcb
int3
jnp
add
push
outsb
cmc
sbb
cmpsb
xchg
adc
out
dec
inc
les
enter
inc
add
in
xor
xlat
jle
inc
mov
pop
jecxz
int
inc
lods
pop
je
push
mov
sbb
sbb
mov
xchg
jbe
xor
jbe
scas
pusha
daa
and
jno
arpl
push
shl
inc
fildl
mov
inc
mov
int
or
leave
xchg
mov
out
loop
into
pop
mov
xchg
ret
test
shl
icebp
and
mov
lods
xchg
nop
mov
fwait
rcrl
push
dec
push
jecxz
addr16
inc
repnz
mov
int3
push
xor
popf
lahf
xchg
rcrl
jmp
mov
jae
jge
push
pop
push
sub
add
and
jnp
data16
loop
jge
les
or
jmp
inc
sbb
dec
loop
pop
xorb
mov
pop
pop
fmuls
cmc
idivb
shll
or
lret
adc
xlat
setb
aaa
xor
iret
dec
cmp
sub
sub
mov
iret
fs
push
aaa
das
sbb
or
mov
inc
call
inc
pop
sar
insb
inc
adc
lds
push
sarl
mov
or
ljmp
lret
scas
pop
sub
int3
cwtl
pop
push
or
jno
xchg
jecxz
and
pop
in
aad
cmpsl
jb
jno
cmovne
out
cs
push
push
cmp
mov
dec
xlat
xor
out
push
dec
jmp
int
fnstcw
jo
mov
pop
cli
aad
out
int3
fnstsw
push
xchg
iret
ret
xor
inc
mov
fimull
add
clc
stos
iret
fstp
cld
inc
sub
fwait
aam
sub
cwtl
int3
jo
je
sbb
dec
xchg
in
pop
sbb
push
stc
dec
cmp
jno
es
or
xor
cld
cmpsb
or
loopne
inc
fsubrs
leave
pop
mov
sub
pop
cltd
jg
mov
xor
addl
push
arpl
cmpsl
push
adc
out
pop
jmp
jb
popa
pop
outsl
iret
in
xchg
test
pop
xchg
into
jl
dec
rorb
out
cld
push
and
inc
dec
cltd
fldl
mov
shrb
test
test
push
or
leave
lcall
inc
add
out
adc
lret
sbb
faddl
and
push
aaa
cmp
mov
jae
repnz
daa
fisubrs
jno
clc
push
sbb
mov
dec
test
shrb
hlt
cmc
cmc
jns
cmp
clc
out
xchg
jecxz
sbb
test
insb
add
insb
shlb
adc
xchg
mov
out
test
fs
mov
scas
sub
pop
pushf
lret
push
das
or
lods
outsl
sbb
dec
add
push
movsb
jne
roll
jno
push
int
mov
mov
inc
ret
test
xor
push
mov
xor
out
into
test
flds
mov
popa
jle
fdiv
add
aaa
sub
cltd
lock
cmpsl
stc
push
xchg
cmpsl
lea
into
rcrb
cmpsl
push
int3
mov
push
ficoms
fstl
cmp
inc
mov
adc
sbb
iret
imul
and
inc
js
dec
dec
iret
sbb
xorb
adc
loopne
mov
mov
lret
jecxz
sub
xchg
push
push
out
mov
into
inc
lret
push
sub
mov
daa
jl
addr16
add
pop
testl
enter
pop
xchg
or
pop
lock
push
push
add
or
sarl
fisubl
cld
cmp
scas
lods
adc
xchg
or
jp
add
jnp
mov
dec
ret
movsl
sub
aas
jne
xchg
mov
idivl
and
ja
and
shl
inc
fnstenv
loop
int3
repz
in
xor
push
xchg
pop
pop
jb
cwtl
iret
cmp
mov
out
ret
jne
test
dec
add
iret
std
ret
xchg
sti
adc
add
inc
xchg
lahf
in
rcr
mov
in
out
aaa
jb
xor
mov
mov
cmpsb
inc
and
dec
addl
sbb
cwtl
xchg
xchg
push
sub
sbb
xor
jno
fwait
insb
adc
mov
pop
lret
xor
test
push
xlat
jmp
enter
lds
inc
mov
imull
or
movsl
sbb
jb
add
cwtl
out
add
jmp
dec
sub
imul
repz
cmp
les
lret
cmpsb
stos
jmp
inc
cli
popw
pop
repz
test
addb
mov
in
repnz
loop
jle
mov
add
int3
es
xlat
and
mov
cmp
fcoml
lret
mov
pop
ror
loop
mov
pusha
add
std
cmp
js
test
xchg
ljmp
popa
xlat
out
out
frstor
out
or
xchg
fnstcw
lret
mov
into
or
xor
les
andb
push
xor
in
add
mov
icebp
push
stos
popf
dec
int3
aam
mov
ljmp
and
sub
inc
fcoms
mov
fs
je
and
push
cmc
out
leave
sbb
xlat
xor
add
pop
mov
daa
and
xchg
incb
or
shl
push
cmpl
and
and
andb
stc
lock
cmp
jno
mov
pop
leave
decb
xchg
push
je
mov
and
stos
clc
mov
adc
aaa
or
insb
adc
repnz
sbb
xchg
movsb
cmp
aad
out
addb
insb
mov
dec
and
or
push
lock
stos
add
movsl
hlt
mov
xor
and
test
xor
aaa
pop
jno
mov
add
mov
pop
push
cld
push
popf
push
fstps
sub
pop
pop
adcl
lret
dec
push
and
xchg
cld
mov
and
fs
jge
cltd
testb
les
je
pop
int
xchg
sub
xlat
cmc
int3
dec
test
mov
in
cmpsb
mov
aam
js
cmpl
sahf
sarb
and
sbb
enter
adc
mov
xchg
ja
jl
cmp
movsl
add
andb
aaa
or
push
fildl
lcall
or
stos
jne
in
sub
xchg
xlat
jbe
daa
psubusb
in
mov
cmp
jmp
pop
pop
xchg
sub
mov
mov
mov
cmpsl
ficompl
es
xchg
sarl
rorb
lcall
inc
out
bound
push
xchg
mov
nop
mov
xor
out
insb
mov
aad
cld
or
roll
repz
adc
dec
ret
xchg
and
jg
jge
push
mov
xor
aam
clc
fwait
test
lahf
out
sbb
outsl
mov
jge
iret
push
mov
adc
lock
pop
cmpb
jb
mov
shll
xchg
lods
mov
mov
push
push
xchg
shll
cmp
xchg
dec
lret
push
ds
clc
gs
mov
xchg
cmpsl
cld
cltd
into
push
pop
rcl
faddp
data16
scas
sbb
stos
mov
cli
mov
mov
out
loopne
cld
jb
sarl
fcmovnu
mov
mov
mov
lret
pop
xchg
fdivr
lret
shr
xor
into
push
std
xchg
jnp
adc
leave
ret
cmp
or
push
push
mov
test
add
into
loopne
cmp
cmp
jo
addr16
fs
dec
xchg
cs
cmp
mov
xchg
clc
and
out
mov
movsl
test
push
in
sub
push
jmp
adc
or
lock
inc
and
inc
cld
cmp
faddl
fbld
in
lret
ljmp
or
popf
mov
and
cli
sbb
jecxz
cmp
dec
hlt
lcall
frstor
sub
push
mov
jb
pop
mov
push
cmpsb
xchg
adc
mov
mov
and
mov
fs
or
ds
dec
out
add
mov
bound
ljmp
xchg
cld
into
inc
movq2dq
cmp
data16
repnz
es
and
jle
mov
imul
sahf
sar
mov
gs
xchg
icebp
mov
mov
and
inc
fwait
adc
sub
xor
pop
fsqrt
call
push
imul
test
bound
dec
mov
or
ds
lret
jp
pop
mov
adc
sbb
out
mov
and
inc
in
or
inc
adc
adc
scas
jbe
mov
outsb
std
outsl
leave
xor
stos
push
push
or
jo
test
pop
lret
repnz
push
mov
cli
enter
out
ror
pop
mov
ret
jle
ds
pushf
out
jmp
jl
push
into
cmpsl
mov
jb
pop
adc
frstor
mov
xor
repz
and
mov
aad
fildll
cmpsb
loop
jl
insb
jb
sbb
dec
out
jle
adc
lds
xchg
and
mov
aad
sub
or
pop
les
mov
mov
xchg
pop
jns
mov
hlt
push
sbb
fwait
imul
sbb
jo
ret
jg
mov
and
push
push
hlt
pop
test
push
clc
and
sub
loop
int3
push
rcl
dec
cmp
movl
aad
test
xor
shll
add
outsb
pushf
cs
sarl
inc
lods
mov
adc
or
dec
popf
or
das
lcall
fcmovnbe
fwait
sub
call
push
or
das
cmc
inc
lret
repz
out
jecxz
mov
pusha
dec
mov
aas
or
mov
push
jo
xchg
leave
dec
and
sbb
push
mov
das
inc
fucom
cmpsl
xor
or
mov
ror
in
adc
out
cmp
ret
in
std
cmpsb
pop
mov
jg
or
xchg
or
dec
mov
jp
xorl
mov
fadds
mov
rcrb
std
inc
jns
cli
mov
fs
jmp
mov
add
xlat
and
and
xor
lret
jecxz
sbb
incb
stos
cmp
mov
iret
add
dec
lods
push
call
leave
mov
push
mov
jbe
stc
rcrl
and
cmc
ja
sbb
xlat
jecxz
fstl
dec
mov
jg
pop
sar
clc
mov
test
in
imul
mov
enter
push
push
outsb
lods
mov
aaa
imul
xchg
pushf
adc
add
cli
std
cltd
or
out
push
inc
insb
inc
inc
icebp
fidivl
out
pusha
xchg
mov
fldl
int3
sbb
es
aam
out
xchg
subl
in
cmp
or
jnp
inc
sub
xor
add
or
xor
inc
lds
lret
inc
lret
push
loopne
mov
cmp
es
jnp
shr
pop
xchg
ss
cmpb
xchg
jecxz
lret
aaa
repz
mov
sbb
sti
icebp
inc
jne
jbe
mov
mov
daa
pop
mov
pop
sub
sub
fidivrl
push
cs
fldcw
dec
out
xchg
ja
enter
mov
scas
pop
lds
bound
jno
push
xlat
loopne
adc
into
mov
out
mov
dec
rclb
stos
cmp
into
dec
int3
mov
jb
lahf
lds
mov
out
fstpt
push
arpl
dec
mov
xchg
ljmp
inc
pop
and
aas
pushf
jne
sbb
add
cmp
std
jle
pop
je
jmp
mov
jo
test
pop
cmpsl
pop
mov
pop
and
dec
mov
lock
sub
and
push
ret
mov
dec
stos
pushl
aas
mov
int
shrd
and
or
roll
push
add
adcb
pop
pop
adc
je
pop
in
dec
lret
push
cmp
jne
mov
inc
idivl
xor
dec
or
adcb
add
dec
mov
sub
out
xlat
mov
sarl
loope
es
lcall
inc
jge
adc
pop
dec
mov
lcall
fisubrs
cmp
addr16
mov
xchg
xchg
ja
cmp
mov
sbb
cmc
mov
sbb
push
and
shrl
push
nop
mov
inc
and
pop
mov
into
leave
addr16
outsl
shl
sub
stos
inc
dec
repz
aaa
inc
nop
outsb
dec
mov
mov
sti
xor
dec
xchg
xor
mov
xchg
in
test
mov
jmp
sbb
rolb
adc
scas
loopne
add
adc
push
inc
push
push
rol
mov
add
out
cmp
out
incl
orl
bound
xor
inc
lret
adcl
lods
ljmp
jnp
mov
cwtl
push
lret
enter
into
gs
and
push
cmp
pop
loope
lret
cmpsb
rolb
outsb
add
and
sbbl
add
les
enter
pop
xor
cmp
add
sbb
jnp
test
xchg
inc
inc
sbb
pop
movsb
sub
pop
cmc
lods
repz
jnp
sbb
sbb
or
xor
out
inc
loopne
xchg
inc
hlt
sarb
movsl
jno
push
jns
arpl
shr
pop
inc
add
mov
test
push
dec
lahf
pop
cltd
inc
jae
out
das
es
cmc
or
jecxz
and
fists
mov
addr16
ret
sbb
push
loope
jnp
fdivrs
movsl
or
adc
sbb
push
sti
sub
mov
mov
xchg
push
push
xor
movsl
push
pop
pusha
pop
cmp
mov
repz
mov
cmc
mov
pop
adc
lret
mov
mov
mov
rorb
in
pop
jbe
sarl
std
iret
dec
pop
jecxz
cltd
ret
das
gs
lahf
jmp
jle
inc
and
dec
in
test
addr16
inc
xchg
sbb
pusha
outsl
add
int3
es
sbb
adc
pop
ss
lcall
mov
sbb
jecxz
push
cmpb
mov
fnstcw
test
hlt
xor
add
ja
pop
fwait
mov
pop
cmp
mov
mov
gs
push
and
and
es
jne
leave
test
setl
sub
lret
testb
lcall
xor
cmp
mov
jmp
add
mov
jae
stos
mov
mov
out
pop
test
test
fnsave
mov
jne
mov
arpl
xchg
adc
out
inc
gs
xchg
jo
iret
lea
adc
mov
addr16
es
mov
aaa
lret
adc
sub
pause
sub
cmp
push
cmp
or
lahf
xchg
push
inc
sti
xor
aas
and
pushf
int
loope
push
mov
iret
hlt
push
inc
lret
pusha
jo
into
lea
jl
sub
sbb
movsl
jle
jecxz
pop
fs
dec
pop
inc
aaa
and
into
out
mov
gs
imul
cwtl
out
sbb
movsl
lahf
push
loopne
jmp
ds
popf
xor
xchg
xchg
mov
dec
repz
add
cli
jns
stc
out
pop
dec
or
ljmp
inc
and
lret
jl
mov
inc
mov
cmpsb
test
out
testl
pop
int
xchg
xchg
push
jns
xchg
push
xchg
push
add
imul
sub
add
enter
inc
and
js
inc
sub
repnz
inc
icebp
pop
and
dec
ja
sub
add
aaa
call
xchg
dec
std
adc
imul
add
sub
mov
hlt
loopne
pop
fisubrl
popf
jle
sarb
dec
movsw
mov
test
and
arpl
add
or
stc
xchg
sarb
pop
out
repnz
ljmp
xlat
inc
push
fdivl
lahf
push
or
xchg
in
dec
pop
enter
dec
or
mov
mov
push
imul
movsb
shll
lret
xchg
testl
adc
pop
lret
movsb
test
out
mov
and
imul
sbb
cmp
sti
insb
cmp
fs
mov
outsb
data16
xor
and
cmp
or
push
stos
inc
aad
xchg
leave
pop
test
out
mov
sbb
jae
pusha
out
outsb
adc
mov
dec
mov
stos
xor
add
jb
dec
add
xchg
mov
push
mov
in
test
fwait
jmp
into
nop
stos
dec
sbb
xchg
mov
imul
dec
push
pop
out
insl
fcom
cmpsl
and
jmp
leave
jo
and
aam
outsl
adc
lods
movsb
push
or
xchg
pop
rcll
pop
ss
pop
inc
cmpsl
fistpll
lods
scas
rolb
mov
hlt
subb
pop
bound
jb
dec
xchg
cmc
aam
pusha
adc
adcl
movsl
movsb
adc
mov
in
pop
sarb
jbe
adc
mov
xor
arpl
fnstenv
sbb
dec
lret
sti
jns
xchg
mov
sbb
and
je
movsb
xor
inc
loop
enter
dec
or
aas
rclb
out
mov
xchg
into
mov
lock
jl
jnp
ds
pop
rcl
sub
dec
cwtl
jne
push
shl
xrstor
jp
lock
inc
xchg
adc
jp
push
lret
int3
fcoml
push
pop
sbb
mov
push
push
xor
xchg
sarb
ret
or
rorl
dec
rcr
fcmovnbe
aaa
xlat
and
inc
cwtl
mov
imul
adc
pushf
mov
mov
inc
aaa
sahf
repnz
ds
hlt
mov
jg
leave
jle
push
pop
mov
push
ja
ss
jp
sbb
cmp
loopne
movsl
jg
gs
cmp
int
xchg
iret
mov
loop
es
hlt
dec
nop
xor
inc
outsb
cmp
and
cmpsb
push
lock
xor
test
outsb
jecxz
iret
scas
inc
sar
popf
fst
es
loopne
push
lret
dec
jmp
lret
push
stos
stc
sub
inc
jecxz
notl
or
aam
outsb
xchg
out
xchg
aaa
or
lea
fimuls
or
cli
into
jle
icebp
or
addl
leave
mov
nop
test
aad
xchg
ret
jae
fcomps
jbe,pt
je
addr16
sub
jmp
mov
cmp
js
insl
je
fcoms
loopne
es
into
icebp
out
in
mov
inc
dec
test
stos
popa
adc
lea
call
mov
jmp
mov
scas
das
test
inc
mov
mov
cs
dec
inc
pop
cmp
xchg
lock
xchg
xchg
cmp
clc
cmpsb
push
sub
rol
jl
pushf
shl
into
xor
push
sbb
int
mov
mov
adc
les
cmc
movb
jl
insb
dec
adc
jae
std
movsl
jg
pop
lahf
dec
sub
mov
arpl
test
or
stos
lods
stos
cmp
andl
push
int3
cmp
gs
add
push
aas
loop
lret
pushf
and
bound
mov
or
mov
xchg
scas
adc
or
cmpb
mov
push
xchg
into
in
inc
push
lock
jbe
mov
dec
out
pop
aam
pop
sub
fcmovne
xchg
xchg
mov
icebp
push
andl
xor
mov
xchg
jmp
sub
insb
gs
test
pop
out
mov
mov
fdivl
mov
push
jne
mov
orl
push
push
push
ret
inc
jl
mov
mov
ljmp
loopne
incb
jae
shlb
mov
and
push
jbe
iret
imul
or
incl
scas
push
and
cmpsb
xchg
mov
addr16
into
call
arpl
pop
std
iret
mov
mov
mov
jg
ficomps
call
rcll
pusha
push
jecxz
mov
mov
or
int3
int3
es
les
xor
fpatan
outsb
dec
mull
jecxz
es
xor
dec
lods
cmp
fcmove
push
popf
bound
jae
ja
adc
in
pop
xchg
iret
movsl
inc
out
dec
cmp
adc
pop
mov
dec
cmp
fists
pop
ds
jmp
ljmp
imul
jl
fbstp
and
sub
push
cmpsb
cmp
std
movsb
jp
dec
add
mov
cmp
scas
push
jecxz
xor
notb
xor
inc
xchg
mov
add
hlt
cmpsb
jg
sub
cmpsl
cmp
in
xchg
and
mov
inc
adcl
sub
mov
sbb
and
hlt
or
popa
testl
sub
pop
in
cltd
adc
shl
push
dec
les
adc
mov
mov
pushf
sbb
dec
fcmovbe
inc
pop
ret
data16
mov
insl
fst
cld
dec
push
ja
fiaddl
cmc
movsb
inc
in
cmp
inc
into
rcrl
aaa
mov
leave
cltd
push
mov
test
arpl
inc
fstps
xor
mov
xchg
sub
jnp
xchg
jp
pop
cmp
xchg
movq
cmc
in
rcl
call
aas
sub
jb
mov
dec
shll
jle
sub
sub
movb
daa
dec
pop
int3
jecxz
imul
fisttps
push
popf
rcr
addr16
lods
mov
scas
int3
fwait
mov
cmpsl
enter
push
icebp
add
lahf
rcl
mov
loope
sbb
jge
or
mov
mov
xchg
das
cmpsl
into
fadd
leave
xchg
incb
add
stos
pop
pop
test
or
into
aad
push
ret
cmp
fistpl
outsl
inc
sub
in
adc
fdivrl
lds
push
mov
je
out
pop
inc
adc
inc
dec
or
jne
or
in
aaa
mov
in
ja
insl
push
sub
cltd
ljmp
or
aaa
test
ror
lcall
adc
aam
aam
push
jno
scas
mov
mov
cwtl
fists
out
pop
sbb
jbe
dec
xor
imul
push
out
call
adc
lds
repz
inc
ret
push
scas
aaa
cli
xor
inc
rcll
xchg
iret
negl
jge
lahf
lea
jmp
pop
hlt
xchg
mov
cmp
xor
call
dec
aam
jp
int3
in
sbb
sub
sub
xchg
rorb
loop
cmpsl
add
movsb
jne
rorl
mov
lcall
inc
or
cli
sbb
test
cmc
xor
dec
movsb
scas
sarb
popf
lods
aas
cmp
or
inc
dec
call
inc
fsincos
push
test
add
adc
cs
sub
mov
outsl
adc
in
test
and
repz
std
jne
inc
movsl
lods
mov
jecxz
mov
shlb
cwtl
lods
sbb
mov
cmc
insl
inc
or
scas
xchg
ret
enter
out
sbb
lret
mov
push
sub
aam
data16
pop
pop
fldcw
pop
dec
mov
and
jbe
stc
mov
cmpsl
mov
inc
cld
pop
aas
in
add
loop
jbe
and
sub
lds
ret
fcompl
cmp
das
outsl
mov
push
les
test
movsb
nop
lahf
adc
fdivs
lods
inc
lret
lahf
lret
loope
inc
pop
cld
shll
dec
xlat
jnp
test
or
push
repz
mov
mov
and
stc
push
push
sbb
lock
xlat
add
scas
mov
xchg
mov
mov
jle
push
xchg
out
jns
pop
aad
mov
and
addr16
pop
dec
repz
sbb
ds
lds
lret
rol
push
mov
js
pop
movsl
into
sbb
inc
mov
adc
jne
les
push
add
add
mov
es
roll
into
clc
push
mov
fnstenv
adc
imul
xor
sub
xrelease
sub
cltd
mov
imul
mov
test
push
int3
cli
xorl
adc
aaa
jbe
push
adc
xor
das
lods
enter
in
add
sub
shrl
repnz
insl
sbb
arpl
rcrb
lods
xchg
data16
push
adc
push
pushf
leave
into
push
inc
mov
jle
shll
clc
add
mov
add
adc
push
gs
xchg
insb
sbb
add
fisubrs
lcall
push
or
mov
cs
jl
add
insl
push
jg
andl
jns
and
rcrb
icebp
cltd
in
or
push
adc
pop
into
aam
test
inc
into
test
insb
xchg
mov
xorl
add
test
dec
imul
lret
lea
and
inc
enter
int
pop
fiadds
dec
orl
les
adc
push
sahf
data16
repz
rcll
or
adc
push
stos
dec
imul
mov
sar
and
mov
scas
push
push
xor
mov
popf
or
js
jbe
cmp
fdiv
outsb
push
add
pop
inc
aad
repz
sti
cmp
sbb
sbb
sahf
xchg
int
fists
cltd
insl
mov
inc
mov
adc
push
icebp
jg
mov
loope
bnd
jo
rcr
dec
scas
movsb
mov
dec
mov
lcall
mov
fcoms
aam
ljmp
push
das
add
mov
push
push
xorl
dec
dec
into
cmp
movsl
ds
xchg
push
psrlq
js
into
adc
mov
mov
rcl
push
jle
pop
cmp
pop
out
pusha
cld
outsl
movb
xchg
xor
and
mov
in
push
jp
mov
xchg
sbb
mov
push
xor
xchg
not
stc
and
xchg
aaa
xchg
movsb
mov
mov
xor
fs
out
jae
jnp
push
sbb
mov
rcll
xchg
sbb
lret
or
adc
sub
dec
in
cmp
jne
jp
and
jno
popf
xchg
mov
rorl
fisubrl
mul
or
ficompl
push
mov
jbe
test
nop
cmpsb
inc
dec
in
add
and
xchg
out
iret
push
add
mov
out
aam
test
repnz
adc
and
incl
or
jb
dec
aaa
sub
int
jmp
es
cwtl
push
not
std
int
into
xor
sub
pop
push
jb
out
sbb
mov
lock
sahf
cmp
push
cmp
clts
fwait
pushf
mov
addr16
xor
adc
in
mov
imul
push
push
xor
clc
cmp
movsl
push
movb
dec
fmuls
repnz
mov
or
mov
stos
fsubrs
mov
mov
popa
inc
imul
and
mov
popf
pop
or
sti
mov
pop
mov
push
hlt
cld
jecxz
mov
dec
mov
cmp
lahf
cltd
imul
xchg
iret
adc
stos
dec
mov
js
jp
cmpsl
push
sbb
cmp
inc
cmpsb
cltd
xor
push
xchg
pop
into
cmp
pop
dec
mov
sbb
xchg
sub
add
or
push
lods
xchg
frstor
pop
add
dec
lock
sub
jb
je
inc
pushf
lret
mov
dec
leave
out
jl
mov
imul
hlt
sbb
addr16
and
sbb
repnz
mov
inc
sahf
pop
cmp
aam
cmc
cmpsb
divb
jns
jecxz
ret
jne
push
inc
test
cli
repnz
fcom
stos
or
xchg
sbb
not
adc
popa
add
push
pop
movsb
imul
movsl
cwtl
pusha
cmp
int3
xchg
push
pop
sub
mov
jbe
sar
jno
cmpsb
rep
cmp
sub
xchg
pop
mov
push
jns
movsb
out
pop
lea
and
dec
sti
mov
mov
xchg
cltd
push
into
movsl
imul
cmpsl
sub
into
rclb
push
and
xchg
adc
jae
or
enter
jl
pusha
movsl
sbb
in
call
or
cwtl
stc
push
add
adc
sbbl
ret
mov
pop
xor
xchg
pop
mov
sbb
or
pop
add
push
mov
stc
orl
nop
pop
movl
cmpsl
pop
lret
dec
sbb
and
lea
mov
insb
sti
out
andl
xlat
std
xor
sbb
je
cmpsl
mov
pushf
stos
mov
aam
push
mov
fistps
sub
lret
scas
jae
in
insb
aas
mov
or
pushf
add
or
mov
popf
mov
jne
jo
rol
inc
jb
in
imul
mov
cs
pop
jns
addr16
jo
rcl
pop
out
push
xchg
jbe
xor
push
mov
and
orl
mov
int
push
jp
mov
xchg
stc
inc
lock
iret
dec
and
ja
outsl
into
sub
pop
inc
and
call
decb
xor
pop
and
das
xchg
repnz
inc
cmp
push
arpl
out
in
pop
stos
daa
psubusb
repnz
dec
insl
ss
adc
pop
adc
loop
cli
inc
fs
jnp
jmp
or
push
mov
dec
and
xchg
ss
xor
push
data16
sub
dec
push
aam
mov
inc
repz
out
xchg
out
cld
push
push
xchg
sbb
lea
mov
pop
xor
mov
adc
outsl
adc
add
inc
imulb
fs
xchg
cmpsl
mov
push
add
mov
lret
repz
test
out
dec
mov
ffree
scas
push
or
stc
pop
push
movsl
xchg
push
cld
jg
add
pop
jp
fistpll
lods
ja
insl
jbe
mov
stos
sbb
es
orb
push
lds
shl
or
hlt
mov
sub
lods
xchg
movsl
fdivrl
jbe
push
sti
sahf
arpl
xchg
xchg
or
cmpsb
sub
lret
std
lods
mov
inc
iret
call
ljmp
pop
cmp
mov
sbb
sub
in
or
pushf
xlat
lcall
mov
push
fdivl
test
and
insb
out
loope
fistps
add
sbb
push
xchg
aad
sbb
pushl
mov
push
rorl
jbe
or
hlt
shlb
adc
pop
mov
inc
push
pop
leave
and
fnstcw
add
mov
or
or
dec
sub
aaa
pop
sub
dec
add
enter
stos
xchg
scas
rclb
xor
mov
iret
es
cwtl
mov
mov
lcall
jle
inc
push
mov
rorl
lret
mov
aaa
add
into
fnstcw
jmp
imul
xor
or
push
push
push
pop
adc
out
cmp
aaa
faddl
pop
fbstp
sbb
add
xchg
sbb
movsb
rcl
push
push
lcall
pop
popa
lret
mov
xor
xchg
out
xor
push
loopne
jp
xor
loope
jle
mov
lret
cmp
into
not
repz
mov
or
mov
outsl
rcl
leave
cmp
xchg
inc
jge
pop
or
xor
and
cld
mov
insl
cmpsl
fnstcw
mov
filds
rcl
xor
sub
pop
mov
cli
adc
daa
pop
enter
mov
aaa
pusha
dec
int
lret
push
in
xchg
xchg
inc
pop
pop
lret
mov
pop
cmp
push
divb
xchg
push
leave
loopne
repnz
push
mov
jp
cld
fs
jl
or
mov
dec
push
nop
xchg
cli
lret
mov
jp
jmp
mov
testb
pushf
mov
mov
push
sbb
loope
int
and
rolb
ficoms
es
inc
pusha
jnp
dec
mov
flds
ja
pop
push
ret
out
mov
push
fisubl
arpl
sbb
mov
xor
sbb
test
das
or
mov
repz
loop
lea
xorb
sbbl
not
push
lret
imul
roll
mov
mov
push
test
pushf
xchg
arpl
aas
movsb
cltd
inc
ljmp
sarl
in
dec
loope
inc
adc
cltd
lahf
lea
inc
push
push
in
loop
ret
aas
test
xor
mov
lahf
es
outsl
sbb
ror
aaa
mov
add
jg
lods
add
mov
loope
mov
cmp
mov
dec
push
icebp
or
into
cmc
jmp
pop
xchg
xadd
xor
adc
adc
push
adc
xchg
and
insl
leave
imul
dec
adc
mulb
xorb
dec
pop
cmp
test
mov
mov
adc
jmp
cmpsb
or
push
and
sahf
xchg
jno
add
xor
sub
mov
ret
jg
cltd
shrl
cwtl
xchg
inc
xlat
jp
inc
xor
xchg
sbb
fcmovnbe
jae
data16
lods
mov
data16
icebp
cld
int3
xchg
cmp
es
int
add
test
out
inc
mov
mov
mov
clc
sbb
daa
push
test
jnp
into
pop
and
scas
stc
cmpl
aaa
popf
mov
adc
fs
rcr
ljmp
data16
push
mov
outsl
mov
or
push
mov
ficoml
and
jmp
cltd
adc
adc
jnp
in
lret
pushf
or
popl
dec
xchg
pop
mov
xlat
aas
or
sbb
pop
fadds
cltd
dec
fcmovnb
jl
lock
outsl
cmpsl
xchg
aaa
cli
jns
xor
lods
fiadds
insb
ljmp
xor
sub
inc
sbb
inc
xchg
mov
sahf
and
xor
jle
mov
jae
mov
cwtl
push
xchg
mov
es
dec
in
mov
pop
repz
push
ja
leave
filds
push
push
lcall
movsb
sbb
std
pop
jo
movsl
pushf
xchg
sti
mov
outsb
xor
aam
jbe
xor
scas
je
mov
cmp
jo
push
out
cmp
in
add
aad
shll
sbb
es
cmc
scas
push
pop
or
ja
push
test
jne
jp
out
jns
push
jmp
das
call
and
les
inc
xchg
mov
ljmp
xor
mov
movsb
loopne
push
push
mov
repz
push
out
fdivrp
out
lahf
inc
and
in
dec
mov
frstor
jo
repz
pop
jecxz
jae
ffree
xchg
sbb
inc
out
xchg
adc
imul
mov
arpl
jo
cltd
rcl
enter
dec
mov
xchg
imul
cld
mov
imul
inc
ja
iret
adc
lods
xchg
sbb
pop
iret
icebp
jge
imull
inc
gs
jno
mov
jge
and
cmc
imul
fcmove
add
movsb
pop
push
in
inc
add
sbb
aaa
test
jecxz
lcall
mov
mov
gs
push
idivl
les
dec
fcomps
shll
jb
push
push
inc
frstor
jno
add
inc
sar
mov
pop
and
insl
mov
xor
test
inc
pop
dec
add
pushf
mov
inc
lds
repz
fwait
sub
mov
xor
mov
repz
in
fiaddl
aaa
xchg
dec
and
loop
mov
xchg
out
iret
pop
out
sbb
sbb
adc
jle
xchg
fmulp
add
out
clc
fldlg2
jae
popa
sti
lret
mov
inc
pushl
fiaddl
nop
fsubrl
mov
cmp
xchg
insl
imul
jp
mov
and
mov
jnp
xor
adc
add
int3
jge
out
xchg
and
jp
mov
leave
jl
je
insb
xchg
xlat
rorl
ret
cltd
les
add
stos
addr16
mov
call
mov
mov
jge
sub
out
scas
mov
addr16
jbe
pushf
ret
fcomps
psubb
les
fists
lahf
inc
inc
push
xchg
int3
add
rclb
pop
cmp
loope
sub
adc
mov
mov
pop
into
enter
push
jmp
repnz
mov
adc
sbb
sub
mov
nop
mov
ljmp
loope
push
cld
je
mov
movsl
repz
or
fidivs
xchg
pop
daa
dec
xlat
cmp
scas
ljmp
push
push
xchg
and
out
bound
inc
push
xlat
dec
fdivrl
ss
dec
mov
add
adc
jle
or
shr
jo
xorl
mov
sub
aam
sub
mov
pop
sbb
lahf
call
sub
test
xchg
adc
sarl
int
jno
fadd
in
leave
and
sub
gs
xor
fcompl
cmc
out
xchg
ss
mov
lcall
push
leave
cmpsb
sub
loopne
inc
jmp
jmp
shll
add
inc
test
mov
inc
cwtl
out
xchg
mov
icebp
mov
pop
ds
popa
pop
mov
xor
int3
stos
arpl
jge
cvtpi2ps
js
jbe
adc
push
aam
mov
leavew
dec
cmp
into
std
into
mov
pop
push
hlt
rol
in
mov
cmpsl
jbe
or
xchg
test
add
int3
into
xchg
arpl
rorl
shl
mov
subb
fdivrs
hlt
mov
cltd
ret
insb
or
in
dec
in
push
push
aas
aam
add
xlat
outsl
cltd
push
pop
push
mov
push
cld
flds
popa
mov
cmpsb
ds
sub
xor
pop
out
pop
repnz
xchg
js
sub
pop
stos
test
das
ret
jg
sbbb
scas
movsb
or
repnz
lock
jecxz
adc
jbe
jnp
mov
xor
mov
dec
jge
int
outsb
jmp
mov
mov
jno
js
xor
int3
mov
aaa
xor
push
sub
inc
cmp
jge
or
cmc
xor
sbb
jb
cmp
sbb
jae
push
xlat
mov
les
idivb
sub
push
or
rclb
fcomps
mov
xchg
in
mov
mov
inc
sbb
stos
jnp
ret
xchg
fcmove
sbb
inc
jge
mov
dec
pusha
cmp
sahf
cmc
mov
or
jl
push
daa
mov
outsl
adc
out
sub
dec
mov
mov
popa
addr16
movb
xor
mov
jle
pop
imul
loopne
movntq
xchg
nop
sub
xor
repnz
cld
test
sub
add
pop
into
jg
fimull
jmp
int3
mov
fwait
xchg
jae
mov
jg
inc
adc
stos
xor
adc
scas
adc
jae
lahf
int3
cmp
fwait
dec
xchg
sbb
lods
movsb
xchg
fcomps
into
jnp
sbb
jecxz
bound
scas
mov
mov
cmp
ret
out
cld
jne
dec
loopne
mov
pop
dec
sarl
mov
adc
xor
test
adc
add
or
sub
ret
aaa
imul
mov
pop
outsb
adc
mov
clc
fildl
mov
loope
leave
fcom
rolb
andb
bound
xchg
in
ja
jne
cmp
mov
outsb
cs
push
mov
je
lret
jno
jp
pop
adc
add
dec
cmpb
sbb
arpl
inc
or
cs
cmpsl
addr16
mov
sbb
aam
into
or
pop
lcall
add
mov
dec
push
and
cld
dec
jo
inc
cmp
bnd
shl
add
int
test
stos
cwtl
movsl
jne
sbb
lret
std
outsl
incb
aam
pop
push
or
mov
into
negb
je
xlat
insb
xchg
frstor
push
jns
fs
shrl
iret
leave
out
add
aas
xor
sub
clc
scas
daa
pop
ret
shr
dec
inc
push
push
jae
jno
loope
popa
out
fs
xor
data16
mov
xlat
test
ret
push
and
cwtl
mov
add
pusha
out
leave
mov
xor
mov
mov
cmp
data16
ror
sub
sbb
sub
mov
repnz
jg
mov
ror
int3
into
xchg
lods
stos
push
xchg
xchg
cmp
iret
add
and
sbb
dec
or
sahf
dec
mov
mov
out
adc
sub
sahf
sarl
adc
movsl
jmp
test
js
filds
leave
rolb
cmp
into
sub
fcompl
add
xchg
push
icebp
gs
pop
movb
int
mov
mov
adc
inc
aaa
dec
inc
es
popa
pop
pop
sahf
or
mov
xchg
push
daa
cmp
lods
inc
mov
bound
xor
xor
xor
rcl
push
pop
ficompl
imul
test
xchg
inc
sbb
pushf
inc
popf
pusha
stos
push
das
repz
sbb
jge
pop
scas
out
aad
or
lcall
in
test
cltd
lods
out
jp
and
lcall
push
movb
mov
popf
pop
lret
mov
add
add
aad
test
push
ja
insb
jae
xchg
test
xchg
and
nop
cmp
mov
cmpsl
lods
jle
scas
outsl
push
xchg
mov
xor
and
jbe
insb
dec
mov
jecxz
out
xor
iret
or
ret
popf
push
jae
jl
sub
pop
sbb
test
mov
push
and
out
imul
mov
xlat
mov
jae
cmpsl
push
movsb
into
jae
ds
mov
xchg
adc
in
push
out
pop
sbb
xlat
loope
test
jge
xchg
add
loopne
fidivl
mulb
rolb
lret
mov
inc
pop
mov
ljmp
lret
or
xchg
andl
call
mov
jmp
adc
cmp
mov
ja
sbb
rcl
dec
popa
js
cmpsb
xlat
scas
xchg
adc
repz
icebp
shl
nop
mov
loop
jno
pop
clc
fiaddl
into
hlt
and
pop
sub
push
or
ds
les
jae
jbe
or
nop
imul
add
lcall
mul
rorl
mov
push
fsincos
xchg
data16
inc
stc
pop
jne
sarb
jle
fwait
mov
mov
and
pop
lahf
out
dec
ss
mov
andl
pop
mov
inc
sub
xlat
sub
sahf
xchg
in
push
sbb
aaa
add
int3
cmp
pop
add
outsb
in
mov
cltd
xor
inc
int
mov
scas
sub
or
cltd
scas
push
cmp
clc
push
loopne
enter
sbb
es
ret
xchg
aam
push
in
fisubl
rol
notl
mov
cmp
pop
cmpsb
pop
push
xchg
into
dec
loopne
pop
movsl
xor
std
pop
jecxz
sbb
pop
and
outsl
shlb
inc
pop
xchg
subl
mov
aas
rcl
leave
push
adc
jno
jl
and
aas
call
stos
sub
jbe
jle
imul
fst
sbb
jp
out
push
or
rclb
push
ret
push
aas
mov
pop
lock
lret
scas
push
push
xor
shr
ret
mov
adc
loopne
fwait
push
xchg
jecxz
fiaddl
hlt
lcall
fstpt
movsl
xor
cmp
cli
scas
in
out
lock
test
addr16
cmp
cmp
push
repnz
cmc
jmp
dec
outsb
mov
pop
pop
test
xchg
mov
fldl
pop
dec
push
inc
push
mov
insb
mov
jle
leave
cmp
xor
sub
test
add
jecxz
stos
iret
ret
test
and
out
mov
mov
or
jecxz
mov
mov
sbb
adc
sbb
nop
inc
xlat
jmp
or
xor
push
xlat
pusha
sbb
jne
aad
add
jno
lret
pop
ja
push
or
cmp
addb
jmp
sarb
lea
aam
repz
cmp
stos
out
sbb
sbb
fsubs
inc
lds
addr16
pop
and
lret
outsb
sbb
lods
sti
xlat
add
dec
pushf
rcl
push
xor
je
push
cmp
clc
shrb
mov
enter
xchg
js
dec
jo
xor
sub
ds
stos
cmpsl
gs
and
test
or
jge
jle
xor
dec
dec
lahf
lret
dec
xchg
je
push
divb
mov
sbb
leave
int
pusha
mov
or
xchg
test
cltd
mov
cmp
xchg
lret
out
insb
xchg
cmpsl
mov
xor
scas
or
inc
or
push
sbb
mov
xchg
lret
incl
leave
mov
xchg
pop
sbb
cmp
insl
fmuls
jno
daa
pop
cmpsb
jo
scas
adcb
shr
loopne
movsl
pop
nop
pop
out
and
xchg
ret
decl
ret
sbb
into
sub
inc
dec
push
repz
sti
push
nop
ret
out
jp
sbb
adc
enter
iret
or
aam
xchg
in
js
sbb
jae
fildll
popf
loop
dec
mov
xlat
outsl
sbb
mov
mov
mov
adc
fisttps
aam
cmp
outsl
add
dec
cmp
inc
lret
pop
negb
in
xchg
cmp
and
scas
ret
stc
popa
adc
sbb
xchg
cltd
xchg
sahf
and
sub
jbe
jecxz
aam
sbbl
pop
ret
jae
adc
aam
pop
arpl
adcb
pop
cmp
fldcw
adc
test
call
xchg
inc
dec
outsb
add
lods
shrl
out
dec
rol
cwtl
ja
pushf
scas
or
and
int
pop
cmpsb
jmp
daa
pop
into
xchg
adc
pop
cwtl
out
popa
sbb
or
mull
add
jbe
leave
xchg
mov
push
in
add
dec
test
es
test
jo
inc
push
movsl
cmpsb
dec
jl
fsts
push
dec
cs
dec
arpl
enter
pop
and
dec
pop
push
movsl
mov
sub
push
out
sub
movsb
gs
mov
test
pop
inc
inc
rcl
scas
push
add
and
data16
int3
repz
es
mov
insb
je
fcom
iret
or
push
das
mov
cmovns
jbe
lock
rcrb
mov
hlt
fisubrl
je
shlb
fildl
loopne
dec
sbb
mov
xor
jae
dec
mov
cli
les
mov
shr
out
js
pop
lea
jnp
inc
bswap
out
jl
scas
je
loope
jo
movsb
xchg
std
pop
in
int3
push
int3
nop
push
push
out
rcl
dec
mov
cmp
push
pushf
mov
vmwrite
inc
jb
cltd
pop
addr16
jmp
leave
add
mov
out
repnz
loopne
out
pop
adc
mov
movsb
sub
out
mov
inc
rcrb
mov
or
iret
push
or
ret
mov
push
shlb
cs
cmp
push
ret
ljmp
into
aaa
loop
mov
inc
jp
into
xchg
mov
popf
cmc
lods
xchg
cs
sub
cmpsl
out
add
pop
cmp
push
jns
outsb
or
mov
mov
shrb
repnz
ljmp
jmp
push
js
push
data16
into
sub
movsl
fwait
fstps
mov
fmuls
mov
popa
cltd
or
and
mov
imul
sbb
lea
and
xor
mov
push
fistps
lret
outsl
je
lret
das
insb
mov
sub
pop
inc
jbe
aaa
add
imul
popf
jns
pop
fbstp
pop
push
sbb
or
xchg
sub
sub
addl
jno
out
mov
dec
int3
mov
pusha
icebp
lcall
and
scas
clc
aad
push
sahf
pop
fldl
in
jne
mov
adc
imul
push
mov
ds
movhps
je
pop
jo
cmpsl
in
push
stos
pop
sbb
mov
pop
jmp
std
push
cltd
add
stos
adc
imul
out
fidivrl
inc
ret
push
inc
xchg
mov
ds
push
fs
mov
mov
test
sub
jnp
cwtl
shll
repnz
bound
dec
dec
dec
fcmovnbe
mov
fstl
int
rclb
pusha
daa
in
jg
imul
xor
cmc
cmp
cmpsl
pop
xor
test
push
imul
cmpsb
jnp
stos
int3
mov
xchg
or
cltd
lock
mov
dec
aad
and
out
outsb
pop
cs
adc
push
daa
fucomi
or
psrld
xchg
dec
js
fsubrl
cmp
loope
jmp
popf
adc
add
iret
mov
push
test
movsb
xchg
ss
into
jnp
out
stos
out
lods
sub
gs
shll
into
push
out
xor
into
adc
test
xlat
sahf
clc
test
int
jecxz
lds
inc
bound
mov
into
lret
jecxz
and
fldenv
and
call
adc
add
push
cs
loopne
inc
fst
aam
insl
cmpsl
push
sub
mov
leave
ror
fdivrs
and
stos
out
dec
push
xor
outsl
addr16
les
and
sub
out
fwait
addl
xor
cltd
sub
and
cli
adc
pop
rolb
mov
ljmp
mov
dec
inc
dec
pop
lock
mov
push
cmc
loope
js
inc
insl
stc
mov
cmpsl
xor
mov
stos
outsl
push
hlt
loop
add
jmp
sub
outsl
mov
mull
mov
mov
movb
xchg
inc
adc
mov
cs
pop
sub
and
sub
lahf
xchg
lds
or
pop
jle
inc
sbb
insb
cwtl
mov
out
sbb
loopne
jl
mov
xor
push
test
jbe
lods
adc
jo
loop
mov
dec
mov
xchg
aam
and
inc
rcl
jmp
jbe
mov
andb
movb
mov
xchg
call
popa
in
adc
sti
test
jb
mov
in
lds
jne
xor
mov
jb
pop
cs
out
fsubrs
inc
outsb
imul
call
pop
mov
or
and
out
sbb
es
xor
adc
and
mov
enter
fistps
dec
adc
mov
int3
push
push
mov
rcll
arpl
lret
aaa
xor
into
xchg
shlb
or
mov
inc
adc
stos
into
in
jg
sbb
push
push
lahf
fisubs
mov
aaa
lea
push
not
dec
xor
into
xchg
sub
shlb
mov
mov
lcall
mov
dec
imul
out
mov
push
xor
out
enter
mov
loopne
gs
fisttps
mov
and
lret
adc
xchg
jo
inc
sarl
clc
cmp
xchg
mov
jo
lcall
arpl
xchg
xchg
cmp
dec
outsl
fists
sub
not
mov
imul
mov
push
add
add
dec
int
lahf
ret
xor
mov
imul
out
test
jmp
xchg
pusha
xchg
dec
ret
insb
outsl
fidivrl
mov
movsl
repnz
or
pop
into
push
or
and
clc
xchg
insl
out
pop
repz
and
sbb
xchg
push
mov
pop
push
xor
iret
outsl
cmp
stos
enter
imulb
test
std
lds
bound
add
push
push
ret
iret
sahf
out
xor
inc
xor
mov
xor
sti
push
dec
sub
mov
cwtl
cmp
in
jecxz
xor
jnp
ja
dec
sbb
and
inc
pop
pop
mov
push
or
popf
dec
into
xchg
dec
sub
repz
adc
mov
les
or
pusha
mov
pop
stos
add
mov
mov
aad
inc
cmc
dec
iret
ss
stos
ds
cmc
xchg
fsin
dec
xchg
sbb
mov
push
mov
gs
cli
jmp
sub
es
xlat
notb
jne
pushf
lret
push
rcl
dec
cmp
inc
aas
out
sbb
sub
sbb
lds
in
movups
rcll
cmp
lods
popa
hlt
sub
xor
mov
into
mov
imul
or
les
xor
inc
mov
xchg
out
xchg
lcall
dec
daa
inc
xor
mov
lahf
std
add
ja
dec
into
mov
rcr
pop
repz
ret
and
mov
jp
sub
out
sahf
sub
jnp
inc
cltd
insl
mov
pop
popa
leave
push
jle
adc
xchg
repz
bound
cmp
xor
aam
inc
jns
mov
shlb
xchg
mov
pop
lods
pushw
push
iret
imul
pop
jl
faddl
xchg
loope
sbb
mov
mov
push
xchg
cmc
insb
xor
shl
inc
or
test
dec
mov
nop
shlb
fildl
fsubrs
out
js
fsubs
out
mov
sbb
sub
mov
mov
not
lock
mov
iret
das
cmc
ror
jnp
ljmp
test
adc
or
mov
mov
lret
addr16
push
jp,pn
sbb
inc
jbe
hlt
icebp
pusha
test
cmp
imul
outsl
cwtl
jp
push
mov
cmpsb
xchg
sub
test
mov
in
adc
mov
mov
sub
jmp
sbb
mov
push
sahf
jp
lock
pop
cmp
jne
xor
and
adc
push
lods
or
jnp
ja
idiv
loopne
xor
lods
into
movsb
clc
int
ret
les
fiadds
pop
mov
push
jmp
or
push
lret
movsb
scas
out
rclb
mov
sarb
mov
pusha
arpl
adc
hlt
cmp
sub
jbe
adc
dec
cmp
mov
pusha
dec
clc
rorb
pop
sar
push
mov
es
push
xchg
adc
add
xchg
mov
or
or
mov
sahf
cld
xor
gs
add
into
pop
ss
or
movsb
xor
inc
fildl
sub
push
into
mov
cmp
push
sub
pop
lahf
mov
out
mov
es
pop
mov
icebp
aas
out
jae
data16
cli
repnz
lea
lds
mov
push
mov
iret
dec
fidivl
sub
hlt
jg
sarb
insb
arpl
add
adc
mov
leave
jecxz
jmp
dec
xlat
pop
mov
and
xor
scas
xchg
pop
adc
rcl
lods
call
aaa
or
addr16
jb
sub
out
cmpsl
leave
or
lods
daa
xor
std
lret
inc
push
push
lds
dec
cmpsl
jmp
pop
data16
enter
flds
adc
popf
xchg
es
dec
xchg
cmp
cmpsl
out
rclb
jne
jle
inc
nop
add
push
js
jp
cld
call
hlt
scas
popa
or
sbb
test
add
add
pop
sub
and
push
jno
dec
lret
pop
pop
ret
pusha
xorl
adc
scas
xchg
ds
mov
add
mov
mov
jne
sbb
jge
jno
add
jb
jae
mov
jmp
inc
dec
pop
cwtl
fwait
scas
jmp
imul
insb
dec
and
gs
adc
loop
aas
sahf
push
rcl
mov
cwtl
popa
jne
testl
leave
ds
lcall
mov
bound
sub
jbe
imul
out
js
addr16
xor
dec
push
jbe
mov
or
loope
cmp
aas
sbb
insl
sub
loopne
sub
jbe
ret
rcrb
loopne
int3
xorl
mov
push
fwait
mov
sahf
sub
push
or
jecxz
outsl
mov
popf
mov
movsb
mov
push
xchg
sbb
xacquire
in
cmp
mov
scas
fcmovbe
cld
fsubrs
adc
mov
fwait
mov
enter
aad
mov
popf
jbe
das
sarb
or
in
mov
push
jmp
cmpb
lods
sbb
sub
xchg
test
mulb
repz
and
add
movsl
xor
add
xchg
stos
test
jp
xchg
in
inc
dec
fdivs
mov
outsb
fcoml
gs
es
jge
test
insl
pop
je
adc
dec
lret
pop
xor
stos
pop
cmp
inc
mov
jb
xchg
and
in
mov
cmp
stos
or
jge
mov
xor
dec
lds
and
aaa
push
cli
mov
shll
add
xchg
push
addr16
int
stos
mov
jbe
ja
dec
lret
loopne
jmp
lahf
iret
aam
aam
pusha
xor
loop
ja
int
sarb
pusha
jno
cmpsl
int3
into
les
mov
test
inc
js
arpl
leave
add
sarb
sbb
das
fcmovne
mov
hlt
inc
mov
popa
ljmpw
jo
aam
test
xchg
inc
mulb
decb
lret
xchg
add
mov
mov
sbb
xor
scas
jno
shlb
cmpsl
mov
call
aad
sub
push
test
in
movl
adc
xlat
fldl
sub
inc
out
mov
arpl
jbe
repz
mov
push
push
or
js
arpl
loopne
xchg
add
dec
lock
rorb
out
into
mov
icebp
push
cmp
sub
rcl
fbld
xchg
cli
dec
xchg
ss
lahf
sub
mov
jo
push
int3
fdivr
sbb
push
mov
dec
aas
cmpb
xchg
ja
out
mov
fst
mov
or
dec
jmp
jo
dec
and
dec
aad
xor
xchg
rolb
xor
dec
cmp
xchg
xchg
jge
push
shlb
jecxz
mov
dec
lds
jo
jmp
daa
loope
jle
mov
jns
bswap
aaa
adc
jp
jmp
fcoml
test
mov
in
xchg
pushf
addr16
add
jmp
add
loopne
out
dec
mov
out
hlt
out
cmp
add
xor
ret
jo
mov
mov
sub
xor
ja
cld
add
mov
leave
fnstsw
out
arpl
stos
inc
mov
adc
push
sub
or
aas
imul
popa
mov
cmpsb
test
es
sub
pop
cmp
pinsrw
stos
out
mov
jnp
ret
stos
xchg
rolb
dec
pusha
jl
push
enter
sub
xchg
leave
stos
xor
lret
leave
xlat
loop
xchg
jmp
sahf
cmpsl
and
lcall
pop
or
out
and
pop
pop
jnp
dec
and
jbe
icebp
fstl
aad
aas
daa
add
loope
mov
or
mov
mov
xchg
data16
cmp
push
icebp
cmpsb
jae
div
xor
mov
sbb
mov
mov
aaa
repz
aad
testl
inc
jbe
and
into
jl
cmp
xchg
xchg
stc
mov
imul
sahf
add
jae
xchg
idivb
xchg
add
jecxz
icebp
mov
imul
int
and
in
ja
inc
imul
mov
or
inc
addr16
lock
jae
cwtl
add
mov
insb
enter
lret
es
dec
inc
lds
rclb
jbe
sbbb
test
lahf
pop
jb
in
test
sub
jmp
push
or
leave
imull
push
into
mov
add
clc
aad
insl
pop
push
lret
repz
and
cmp
mov
push
adc
xchg
mov
setbe
fcompl
mov
push
push
subb
call
mov
in
sbb
dec
sub
xchg
xchg
ja
cmp
mov
jecxz
movb
push
dec
aad
sbb
aaa
jb
inc
xchg
loop
push
into
mov
jg
lret
add
sbb
jmp
jp
and
jl
js
icebp
scas
cmpsl
add
xor
jbe
sub
je
pop
shr
xor
mov
ret
sahf
and
mov
jne
or
inc
call
arpl
cmpb
xchg
mov
adc
les
mov
pusha
ja
movsl
js
aaa
int
pop
dec
xchg
out
in
push
lret
or
cs
xor
pushf
out
lret
leave
sub
mov
mov
sub
push
add
daa
ss
lret
or
and
or
test
and
pop
jmp
or
cltd
mov
adc
push
push
push
inc
or
or
sbb
and
lcall
mov
test
sbb
jge
outsb
mov
pop
mov
das
jmp
outsl
dec
push
loop
popa
jge
int
xlat
and
inc
dec
lret
cmp
iret
lods
int3
mov
movsl
sbb
sbb
push
mov
inc
pop
jbe
repz
mov
test
rclb
popf
pop
fcmovbe
in
in
mov
push
jmp
movsb
sbb
test
jle
xor
dec
push
into
jg
push
adc
jecxz
js
and
xchg
pusha
xchg
shll
mov
and
ja
popa
and
mov
xor
pusha
in
mov
lret
mov
lods
xchg
fwait
dec
ret
out
jle
rcr
adc
pop
mov
imul
out
cmp
mov
aad
fcmovnbe
fdivs
inc
mov
xchg
into
ja
dec
push
addl
cmp
xor
hlt
or
cmp
pop
iret
fmuls
fcoml
clc
clc
andl
mov
xor
lahf
out
adc
iret
cmp
xchg
je
pop
scas
jns
mov
fidivl
push
push
mov
or
stos
fs
icebp
sub
pop
mov
je
test
cmp
jmp
pushf
xchg
jne
mov
xchg
ret
fisubl
mov
sarl
or
jns
fisubl
stc
mov
xchg
shrl
add
scas
out
pop
mov
ljmp
mov
into
roll
insl
repz
pop
lods
cmp
lret
push
add
cmpb
mov
xchg
xlat
es
pop
push
inc
enter
lods
fcmovnbe
dec
jno
cmp
je
push
out
in
dec
adc
mov
inc
rcl
sbb
push
clc
sbb
daa
dec
sbb
fiaddl
outsl
roll
nop
cmpsb
je
jge
mov
mov
movsl
insl
bound
push
mov
arpl
jns
or
mov
mov
aad
fcmove
dec
repnz
lret
pop
loop
imul
xlat
shrb
test
aam
subb
int3
mov
das
jbe
inc
fsubs
dec
inc
out
and
rcr
fimuls
jge
dec
aas
sbb
xor
in
popf
pop
and
int
arpl
test
dec
orb
pop
mov
pop
sbb
sub
mov
loop
push
add
push
mov
lods
xchg
ja
mov
into
ret
cli
les
mov
lret
shrl
xchg
xor
into
inc
or
fisubs
lock
sbb
cltd
xchg
push
cwtl
adc
xchg
sub
or
das
pop
frstor
or
sahf
pop
fldt
scas
sub
andb
push
call
adc
into
int3
mov
dec
out
repnz
dec
jl
out
cmpsb
fdivr
adc
shrl
mov
mov
lock
dec
mov
daa
and
shrb
jae
xor
sub
addb
mov
std
lahf
inc
es
imul
lret
cwtl
mov
pop
push
cmp
jecxz
sub
add
mov
jp
and
xchg
lret
sub
sti
movsl
fsts
pop
dec
sar
mov
add
aaa
or
adc
test
sarb
icebp
sub
aam
lret
or
jge
incb
clc
jbe
mov
jle
add
dec
cmp
scas
ret
es
sub
movb
or
insb
movsl
mov
add
mov
and
daa
int
push
xchg
push
xchg
mov
dec
mov
cmpb
int3
ret
movsl
sub
sub
test
int3
adc
adc
jo
pop
mov
mov
imull
adcb
push
lock
jg
leave
xlat
sbb
add
insb
push
push
sub
in
dec
stc
les
int
inc
dec
scas
stos
ds
sub
lds
loopne
lds
es
cmc
pop
xchg
fdivs
aas
push
push
loope
and
mov
mov
mov
stos
test
loope
xor
fs
out
mov
push
aam
aam
fucomp
orl
inc
jbe
les
or
ja
mulb
or
out
out
sub
sbb
jb
repz
push
push
jmp
js
pushf
fwait
add
xorb
ds
imul
push
cli
outsb
stc
addr16
dec
sbb
int
hlt
xchg
pop
jp
insl
mov
push
aam
and
lret
cmc
and
stos
and
inc
push
push
into
lea
mov
mov
aad
and
sbb
push
sub
jbe
jecxz
mov
pushf
cmp
and
leave
jno
mov
rcll
xorb
push
in
loop
fnstenv
rcl
repz
push
jnp
clc
push
idivl
cmp
push
push
add
and
push
inc
out
and
push
popa
cmpsb
mov
popl
xor
mov
in
jbe
mull
xchg
repz
xor
add
and
je,pt
xor
test
rorb
les
bound
lret
push
mov
mov
or
sbb
int
lock
in
pop
call
cmc
inc
push
arpl
test
faddl
adc
dec
push
fs
cwtl
rolb
jno
push
xchg
mov
lods
push
dec
scas
das
dec
pushf
jge
stos
cmc
call
mov
push
hlt
add
mov
insb
ror
adc
shll
push
cmpsb
cltd
jmp
sbb
pop
mov
mov
sub
loopne
dec
stos
push
jge
les
test
adc
mov
imul
iret
imul
mov
sub
in
dec
adc
test
jge
jae
push
mov
inc
dec
daa
out
xor
xor
cmp
test
shll
or
xor
in
mov
addr16
push
aam
push
add
imul
ss
sub
arpl
dec
xchg
mov
insb
push
loop
or
push
in
repnz
stos
sub
pop
dec
mov
movl
pop
mov
push
std
xchg
ss
sbb
cltd
sub
cmc
adc
xor
fdivrp
hlt
test
out
and
cli
lcall
cmp
dec
scas
arpl
xchg
mov
stos
icebp
repnz
out
cli
imul
imul
mov
xor
cli
pop
dec
mov
adc
lock
cltd
push
sbb
mov
stc
psrlq
sub
daa
call
std
xchg
pushf
pop
or
pop
add
arpl
adc
inc
push
pop
sub
sti
icebp
int
insl
aaa
leave
xchg
ja
push
cmp
sub
or
in
xlat
dec
cmp
jp
mov
fdivrl
jae
push
lods
pop
loope
stos
lcall
add
movsl
pop
adc
mov
into
dec
pop
loopne
lret
xchg
dec
sarl
daa
lods
repnz
xor
and
xchg
xor
ret
xchg
mov
into
xchg
jg
fsubrs
loop
sbb
xchg
dec
fs
nop
dec
ficoms
orb
fucom
sahf
loope
out
imull
xlat
sar
mov
xor
xchg
repnz
cwtl
daa
ja
add
outsb
jl
push
addr16
push
jnp
sbb
or
add
jnp
xor
sbb
movsl
ret
data16
das
roll
imul
jo
insb
mov
push
mov
dec
dec
test
ret
push
lods
cmc
hlt
lahf
dec
or
jecxz
jmp
mov
out
cmpl
pop
adc
push
iret
lods
sbb
bound
xchg
or
negb
fldl
mov
push
sbb
arpl
in
fldcw
or
xchg
popa
dec
jbe
and
pop
iret
adc
ja
sbb
pop
pop
xchg
sti
rorb
shll
inc
xor
push
in
lock
ds
push
mov
sbb
push
pop
das
push
pop
sahf
jne
sbb
inc
or
addr16
outsl
fidivrs
jmp
dec
mov
jnp
mov
add
imul
adc
ds
dec
dec
and
push
jl
out
in
inc
lret
scas
int3
fiadds
jne
addr16
rorl
pop
mov
jbe
imul
test
jecxz
pushf
cld
rcrl
shl
mov
dec
add
lret
push
cmp
jle
fcoms
inc
xchg
sahf
add
jbe
mov
sub
dec
data16
and
pop
xchg
mov
mov
sub
jbe
repz
pop
stos
add
add
loope
lods
dec
rcll
arpl
mov
inc
fst
sbb
fistps
xlat
rcl
ljmp
jbe
inc
mov
shr
js
push
aad
lods
mov
jbe
arpl
jecxz
incb
outsl
shlb
fidivl
sub
int
fcoms
out
insb
cmpsb
cli
clc
sub
push
sbb
sub
icebp
inc
rolb
insl
dec
sub
lret
jp
popa
fisubrs
lret
in
popf
or
pop
sub
and
xchg
mov
mov
or
je
test
lock
in
sarb
xor
inc
push
add
mov
outsb
inc
xlat
out
mov
sbb
nop
pusha
mov
scas
scas
mov
and
jbe
mov
es
lock
xchg
inc
fimuls
mov
call
out
negb
jnp
fadd
jo
enter
aam
shr
leave
pop
xchg
push
xchg
mov
and
bound
lock
and
pusha
jne
dec
or
sbb
arpl
imul
xlat
imull
jb
mov
subb
mov
inc
mov
cmp
repnz
sub
jo
xchg
ror
jne
hlt
cli
mov
imul
push
cmc
fildll
sbb
in
clc
mov
btrl
repz
ljmp
rcl
lea
stos
sbb
ds
push
cmpsb
adc
lret
insb
xchg
cltd
add
or
push
mov
jne
xor
mov
inc
jle
stos
mov
xchg
mov
nop
out
sub
mov
fcmovbe
jne
in
push
xchg
pop
movsl
xor
or
popa
jl
sbb
dec
or
arpl
out
xchg
lods
aam
mov
cmpsl
jmp
xlat
xor
sbb
mov
and
ljmp
and
pop
addr16
dec
bound
push
and
mov
and
jecxz
mov
test
les
rcl
inc
inc
int
mov
cmpsb
and
ficompl
jbe
or
jo
inc
jecxz
dec
rcl
lods
cmp
in
jge
rcll
dec
sbb
loope
dec
push
xchg
lock
lret
or
into
add
insb
dec
adcb
mov
mov
cwtl
jae
jge
lock
cs
inc
xchg
add
fcoml
lahf
sub
mov
cmpsb
int3
pop
ss
ffreep
or
add
push
insb
mov
xchg
jp
clc
das
cld
decb
jns
or
ljmp
mov
out
sbb
jg
data16
xlat
es
out
dec
jo
mov
push
addr16
aam
pop
mul
lret
mov
jae
gs
and
pop
cmp
or
push
lret
mov
cmp
insb
xchg
pushf
sbb
lret
cmp
xchg
fisubl
mov
movsl
adc
popf
mov
fs
mov
into
std
sub
jmp
add
sub
aaa
or
jnp
loopne
popa
shrl
push
js
loope
xchg
add
pop
iret
pop
sti
or
mov
mov
mov
mov
sub
inc
mov
mov
aaa
shlb
fidivrl
adc
test
mov
outsb
in
xchg
jo
inc
loop
mov
dec
cli
jns
aad
shrl
dec
xchg
push
push
pop
lret
aas
push
mov
xor
jb
out
clc
in
inc
popa
sub
scas
aad
je
js
inc
out
loopne
rcll
mov
dec
jae
call
or
mov
adc
jbe
sub
loopne
jnp
inc
jo
outsb
repnz
mov
sbbl
xchg
pop
dec
test
lock
pop
pop
out
lea
hlt
inc
enter
addr16
cmp
ljmp
push
sub
inc
pop
push
testl
lret
lret
or
xchg
inc
mov
mov
xchg
and
dec
mov
mov
cli
sbb
test
or
push
rcll
les
aas
out
sbb
mov
dec
lods
pushf
or
pop
inc
adc
mov
mov
popf
and
out
fsubrl
int
mov
sbb
and
push
jbe
js
cmp
or
sbb
inc
xchg
fbld
push
mov
and
inc
and
daa
mov
lcall
xor
lock
xor
mov
aam
shrl
mov
fimuls
mov
lock
sub
xor
mov
add
jbe
stos
sbb
rolb
into
lods
mov
mov
inc
scas
test
int3
inc
cld
icebp
inc
mov
mov
insb
movsl
inc
xchg
mov
sbb
push
pop
cltd
dec
add
sbb
xor
enter
jle
pop
frstor
stos
jne
mov
mov
dec
dec
xor
js
xchg
ljmp
cmp
sbb
cmpl
jo
out
rcrb
out
or
xchg
outsl
into
sub
cmp
mov
test
inc
out
jmp
sbb
je
pushf
clc
repz
loopne
adcl
aas
stos
fwait
dec
data16
popf
push
jnp
fmuls
xor
mov
jecxz
gs
pushf
cmp
js
out
enter
dec
xchg
or
jmp
insl
cmovns
and
aaa
and
inc
adc
mov
xor
mov
lret
lret
getsec
dec
repz
pop
xchg
adc
out
and
data16
inc
loope
int
adc
cld
fdivrl
es
jno
repz
rcrl
mov
sbb
fistpl
push
cmp
cmp
test
sub
aas
es
mov
negb
push
xor
lds
call
xor
ds
lcall
jae
orl
add
sub
into
mov
sbb
enter
sub
stc
pop
sarl
push
cmp
int3
cld
jmp
nop
dec
mov
stos
xchg
into
lret
sarl
lods
add
jmp
push
sbb
mov
push
out
into
xchg
sbb
dec
xor
bound
sbb
sar
loop
pop
jge
aaa
call
jp
inc
inc
out
ret
ss
cmp
pusha
mov
dec
mov
stos
xor
fidivl
loopne
cld
lahf
jne
jg
jge
jmp
mov
jo
ljmp
jae
insl
lahf
jno
sti
xchg
inc
bound
sbb
adc
push
adc
out
int3
jne
lock
mov
push
fwait
pop
stc
push
jnp
orb
and
inc
ljmp
pushf
and
lahf
imul
ja
les
stos
out
or
sbb
out
enter
sbb
inc
mov
and
pop
mov
xchg
rorb
fwait
cmp
sbb
lods
es
out
or
push
jae
scas
and
scas
cmp
jbe
ds
or
aad
inc
aas
sub
das
in
test
pop
insl
xor
arpl
adc
adc
mov
call
pop
gs
bound
test
inc
push
stos
ficompl
push
rolb
push
mov
movl
pop
shll
cli
mov
mov
jl
sub
xchg
shll
add
jbe
and
int3
pop
scas
mov
xchg
ret
aaa
pushf
loopne
mov
mov
ss
pop
jg
dec
push
imul
mov
pop
movsb
jne
ja
loop
outsb
adc
idivl
mov
or
mov
mov
and
and
in
mov
add
int
dec
sbb
lock
mov
adc
adc
xchg
pop
jge
mov
lret
std
jecxz
fs
mov
ficomps
arpl
pop
jae
pop
pop
mov
test
jl
rcrl
cltd
xchg
in
dec
xor
jae
fbld
xchg
clc
lret
xchg
adc
fs
enter
xor
xchg
xor
mov
aam
mov
aam
xlat
in
or
imul
pop
mov
fsubr
adc
loope
lods
std
fisttpl
ljmp
adc
inc
js
lcall
mov
mov
add
addr16
or
push
xchg
dec
fcom
mov
mov
notl
mov
and
inc
cld
fcmovne
test
cmp
js
fbstp
adc
xchg
add
and
push
es
jb
inc
stc
jecxz
loopne
in
les
std
outsl
pop
aad
ss
jmp
xor
inc
cmpsb
out
sahf
mov
sbb
or
push
js
push
clc
dec
rcl
jo
mov
popa
sbb
out
lea
mov
fisubl
add
and
jp
push
xchg
clc
xor
mov
xor
cmp
pop
mov
sbb
push
addr16
lods
jns
push
movsb
rcl
push
mov
push
or
mov
adc
inc
jno
push
mov
pop
cli
in
cmpsl
push
int3
jae
inc
insl
sbb
repz
cmp
popf
sbb
fiadds
into
dec
add
hlt
dec
mov
cwtl
jne
xor
xorb
mov
cmp
call
out
daa
ss
lock
out
andb
push
repnz
mov
cwtl
outsl
inc
xchg
in
jge
add
scas
stc
int3
idiv
daa
xor
aaa
mov
imul
aad
xchg
push
jns
sbb
push
mov
cld
mov
push
dec
pop
xchg
rcll
cmp
xor
pop
pusha
xchg
shll
push
rcl
int
out
stc
fdivr
xor
mov
and
mov
les
ret
out
pop
pop
stos
repnz
addr16
shlb
not
xchg
shrl
push
xor
int
lret
sbb
pop
dec
mov
loop
mov
or
cmp
pusha
fsub
push
gs
xor
push
push
inc
push
sub
mov
or
in
stos
mov
xchg
enter
shr
mov
sbb
iret
dec
sub
mov
mov
and
sbb
repz
xchg
es
insb
pop
dec
inc
sahf
movsb
push
insl
sub
cmpsl
lods
test
push
jbe
push
push
mov
int3
insl
std
mov
into
into
xlat
inc
mov
dec
lcall
and
mov
pop
sbbb
xchg
mov
fidivs
push
out
in
add
ds
xchg
and
into
mov
enter
movsl
std
mov
ret
mov
or
out
push
and
and
push
mov
adc
add
mov
xchg
jle
jmp
out
lret
mov
pop
and
fistl
nop
sub
cmp
mulb
sub
jnp
fistl
dec
jns
and
negb
cmp
dec
mov
stc
jmp
or
int
pop
add
mov
sbb
filds
cld
sub
rolb
addr16
ret
xor
dec
jl
inc
lods
and
pusha
xor
mov
rolb
mov
in
inc
mov
lahf
or
in
mov
rcl
inc
and
outsl
sub
mov
mov
repnz
jl
scas
repz
xor
xor
fisttpll
sub
in
ret
or
xchg
mov
adc
popf
repz
fwait
xor
jae
sub
sahf
inc
mov
es
out
repz
xchg
dec
loop
and
lods
lds
pop
add
xlat
ret
mov
inc
jmp
cli
movsl
add
cmp
insb
insw
jge
repz
mov
test
push
out
push
enter
cmp
hlt
or
pop
mov
push
into
sbb
or
cli
js
cmpsl
fistl
pop
sub
jmp
and
fidivrl
in
xorb
fwait
lret
mov
int
ret
xchg
scas
add
mov
sbb
mov
mov
ljmp
lcall
jecxz
push
or
xchg
subb
into
dec
mov
and
xchg
je
fisubs
nop
inc
adc
shlb
dec
or
fwait
lea
xor
rcpps
cld
ljmp
push
pop
scas
mov
into
xor
pop
movsb
jae
push
and
mov
mov
dec
testb
push
test
call
rcl
iret
movb
cmpl
push
mov
pop
popf
ss
movsl
test
arpl
jmp
inc
push
mov
lret
int
aam
jb
fldl
xchg
pop
into
scas
mov
ja
xor
inc
andb
sti
jecxz
lods
ds
int3
jo
imul
shlb
insl
cwtl
mov
fwait
ret
out
mov
scas
cmpsb
test
mov
vpshufhw
ljmp
es
mov
cmp
int3
cmc
cmpsl
push
leave
or
out
mov
add
jae
sbb
jne
mov
pop
inc
adcl
push
jecxz
out
lahf
sub
aas
pop
inc
xlat
ret
stos
mov
and
arpl
jns
mov
cmp
rcr
repnz
lock
pop
pop
xchg
sbb
call
loope
push
fadd
inc
xorb
jg
mov
xor
mov
es
add
in
addr16
ret
fnsave
cld
rcl
mov
sub
sub
mov
or
pop
mov
inc
outsb
aam
jbe
bnd
cmp
fisubrs
sbb
js
adc
lds
jae
xchg
sub
repz
sbb
in
or
cwtl
cmpsb
add
cli
outsl
dec
xor
aas
and
ljmp
pusha
xchg
sub
add
inc
or
dec
xor
and
outsb
and
xchg
ret
nop
xchg
sbb
inc
lret
mov
out
aad
cmpsl
std
xchg
movsl
jge
lret
stos
mov
adc
dec
or
cmp
pop
test
pushf
or
icebp
cmpsb
cmpl
add
xchg
test
sbb
xchg
push
in
push
cwtl
fldcw
loope
sub
mov
jp
aas
rclb
adc
jnp
pop
push
xchg
cmp
inc
cmp
xchg
cmc
cmp
push
test
pop
adc
jg
iret
arpl
loop
test
mov
and
inc
cld
ror
fstps
push
xor
add
push
jl
xlat
mov
jne
imulb
aam
xchg
jmp
mov
je
out
mov
popa
iret
fisttpll
pop
in
out
dec
xchg
nop
imul
sub
jmp
jno
sbb
xchg
lahf
inc
test
xchg
jp
call
cwtl
sbb
not
pop
insl
imul
in
dec
std
ss
popa
sar
xor
in
loope
mov
mov
repnz
mov
pushf
mov
nop
mov
push
in
leave
sarb
mov
rorl
mov
adc
arpl
clc
dec
dec
xchg
fs
cmp
xchg
lock
jl
int
jbe
jg
lea
xchg
xchg
aad
sbb
negb
dec
into
lock
inc
xchg
loop
andl
iret
out
jp
pop
jbe
and
ret
aaa
pop
test
sub
add
adc
add
outsb
shlb
arpl
inc
xchg
inc
ljmp
nop
and
or
xor
mov
inc
cmp
mov
and
clc
in
pushf
push
and
stc
xlat
mov
inc
popa
xchg
pop
mov
les
sub
enter
fdivrl
je
sub
insb
lods
push
xorb
inc
push
xchg
lret
dec
mov
xor
js
or
push
cmp
mov
mov
daa
push
xchg
mov
sbb
hlt
call
sub
nop
je
lock
fcom
stos
ljmp
dec
out
and
cltd
push
jle
mov
lret
and
xor
mov
movsb
push
adc
jb
loopne
sbb
addr16
mov
out
pop
sub
pop
xor
stos
scas
aaa
mov
cs
in
add
xor
or
inc
cmp
test
clc
push
imul
mov
pusha
mov
lahf
loopne
inc
stos
int3
xchg
inc
or
sub
or
dec
loop
and
mov
jae
mov
adc
push
xchg
push
into
lret
aas
adc
in
jecxz
imul
sub
ja
rolb
mov
inc
push
mov
cmp
xor
add
std
sti
arpl
mov
aaa
lea
lods
sub
mov
dec
lcall
xlat
add
or
stos
jb
test
mov
and
ret
xlat
jns
push
mov
mov
sub
leave
fildl
and
lea
and
add
pop
not
in
cmpsb
mov
mov
jbe
jne
pop
in
jbe
stc
fiadds
adc
loopne
or
insb
cmpsb
stos
mov
xchg
sbb
or
xor
xchg
fdiv
mov
xchg
out
leave
rcrb
lock
mov
ficomps
rcrl
sarb
mov
mov
sbb
rorb
pop
cmp
fimuls
dec
ljmp
sub
and
sub
stos
inc
xchg
xor
xchg
outsb
into
fcomps
pop
pop
lods
dec
jcxz
into
cmp
mov
int3
push
fldcw
jl
xchg
lret
or
jg
loopne
or
ds
jo
jbe
add
rclb
jl
pop
add
mov
pop
ret
sbb
outsl
push
jnp
bound
lds
or
push
dec
daa
icebp
int
cmp
push
pushf
aas
mov
dec
and
and
pop
ret
fildll
xchg
jge
xor
icebp
jle
pop
cmpsb
cmp
sarl
jmp
mov
sub
scas
mov
arpl
daa
inc
jns
mov
out
dec
pop
adc
mov
jge
inc
es
mov
stos
dec
test
js
dec
ja
dec
push
cmp
mov
mov
cli
sub
stos
jnp
getsec
repnz
mov
xchg
mov
lret
or
cmpsb
push
movsl
cs
mov
loope
jo
mov
mov
mull
xchg
insb
adc
aam
hlt
cld
add
xchg
rolb
inc
inc
dec
push
pop
sbb
xchg
jns
dec
adc
lea
and
jbe
push
xchg
sbb
mov
mov
push
jbe
notl
int
loope
mov
test
xor
mov
rclb
sbb
mov
and
push
push
pop
jne
ja
jae
sbb
pop
jnp
repz
int3
inc
imul
cmpsb
xchg
pop
mov
or
les
fdivrs
fidivrl
xchg
rdtsc
addl
inc
and
cmpsl
xchg
jne
loop
add
fwait
loope
scas
mov
add
mov
pusha
imul
jp
popa
fsubr
or
insb
stos
mov
dec
mov
and
add
sub
jmp
fwait
fscale
jb
inc
xchg
sub
arpl
add
xchg
imul
xchg
int
mov
push
repz
adc
sub
xchg
jo
orb
stos
fdivl
adc
ja
and
and
push
out
xor
ret
int3
mov
add
lods
xchg
or
add
in
fmull
fisubrs
jae
out
sub
test
in
not
jno
dec
sub
incl
push
lods
mov
cmpb
fldpi
aaa
push
ja
cmpsl
add
adc
jp
inc
sub
sub
pop
in
sub
mov
mov
call
mov
sbb
sahf
and
stos
mov
cs
jno
out
dec
in
lret
push
stos
mov
fisubrl
lcall
cli
in
inc
scas
mov
sbb
aas
jmp
sbb
push
loop
push
in
cmp
int
push
sbb
scas
pop
hlt
lock
out
add
add
out
cmpsb
add
xor
loopne
sbb
and
cmpsl
in
and
xor
or
sbb
ror
dec
push
pop
cmp
jbe
pop
rcrb
out
into
rcl
inc
adc
push
test
in
repnz
out
add
and
iret
aam
push
mov
inc
mov
adc
push
jae
push
int
movsb
cmp
leave
or
sbb
lds
nop
arpl
dec
pop
pop
mov
cld
fadds
push
inc
adc
decl
or
fwait
or
out
adc
subb
ret
loop
cmp
or
test
ja
pop
pop
mov
lret
out
pusha
adc
pop
adc
scas
enter
aad
sbb
dec
popl
imul
fistl
push
stc
in
sub
fisttpll
cmpsl
repnz
inc
aad
andb
push
mov
cs
cmp
push
adc
cmp
imul
push
loope
push
test
dec
fsubp
in
jb
sub
mov
dec
pop
lret
sub
shll
sarb
cwtl
test
rcll
movsl
sbbl
xchg
out
in
stc
adc
daa
lret
pop
ja
lock
pop
les
data16
xchg
aam
push
xchg
jno
mov
mov
test
movsl
jnp
lret
mov
nop
add
mov
adc
ficomps
lea
inc
fdivs
shlb
add
mov
bswap
mov
into
push
push
sbb
int
cmp
mov
mov
cmp
xchg
aaa
cwtl
cmp
clc
call
jge
and
pop
jg
mov
jmp
lea
jno
lods
in
xchg
sahf
test
cs
ss
push
mov
fists
lods
jnp
sub
int3
jbe
dec
adc
in
dec
add
rcr
sub
xlat
out
scas
aas
stc
enter
jne
into
jecxz
mov
fcmovu
xlat
xor
mov
sarb
push
cmp
jbe
adc
jns
shrb
imul
pop
loop
pop
aad
scas
sti
push
mov
jmp
out
mov
and
mov
popl
lcall
popa
test
rorl
xchg
shlb
inc
adc
mov
push
jb
hlt
cmp
ljmp
xchg
testb
or
insb
push
aad
or
outsb
insb
pushf
lahf
data16
notl
clc
jmp
mov
in
cmp
sbb
std
xor
pushf
mov
push
testl
out
loopne
aaa
rorb
jg
aam
arpl
xchg
inc
test
clc
addl
mov
and
rol
pop
xchg
cmp
insb
ficoml
in
xlat
adc
or
inc
xchg
fstps
mov
sbb
jl
adc
ret
cmp
xor
dec
in
pushf
or
ror
cwtl
xor
mov
rolb
mov
faddl
push
mov
outsb
mov
jns
mov
lret
mov
test
or
into
and
lcall
pop
pop
das
std
rorl
into
mov
adc
sbb
xor
lock
push
dec
jb
mov
imul
cmp
stc
mov
fbld
mov
dec
call
mov
mov
add
xor
mov
scas
adc
loope
xchg
mov
cmpsl
out
in
scas
fldcw
les
popa
loope
insl
fsubrs
xchg
testl
dec
fs
enter
sbb
loop
jno
jbe
shll
dec
or
icebp
cwtl
mov
mov
jbe
addl
push
loop
xor
mov
jge
sti
lret
repnz
push
pushf
or
add
jb
lret
xor
cwtl
push
pop
dec
cs
rolb
pusha
out
bnd
mov
ret
jbe
or
pop
inc
sbb
fwait
lock
jmp
fsub
movsl
in
sbb
mov
sub
mov
pop
rorb
inc
test
jae
stos
sahf
call
or
inc
test
jg
xchg
shrw
ret
or
js
lds
movsl
movsb
shl
pushf
mov
dec
or
insb
test
push
xchg
shrb
cmpsb
rcll
pop
pop
ljmp
in
mov
and
and
pop
test
mov
pushf
dec
leave
rclb
xchg
xor
rcl
pop
test
mov
out
xchg
lods
xorb
or
and
jl
dec
adc
add
cli
je
aad
fs
and
lods
in
test
push
xchg
adc
inc
and
jo
and
jne
push
test
stc
cmpsl
lods
arpl
mov
int
pop
xchg
mov
pusha
mov
cld
iret
cli
scas
rclb
out
lock
mov
mov
push
es
xchg
mov
and
adc
xchg
and
fisttpll
imul
cli
jmp
add
pop
scas
push
add
out
notl
js
out
pop
mov
jo
aas
lret
in
es
enter
int3
sub
dec
loop
into
xor
out
loope
dec
imul
and
repz
sbb
adc
imul
add
adc
sbb
mov
out
mov
add
mov
jb
icebp
scas
mov
in
cmpsb
xchg
jg
pop
or
xor
inc
push
pop
fwait
mov
add
loop
pop
or
mov
pop
mov
jno
push
push
push
cwtl
sub
iret
dec
jge
stc
pop
jns
adc
test
xchg
push
xchg
lods
cld
lds
repnz
sar
mov
bound
add
push
cmp
call
popf
mov
xchg
sbb
jl
jmp
sahf
in
mov
cmpsl
test
push
lock
sbb
pop
inc
push
loope
mov
iret
push
lahf
pop
scas
push
test
pop
shlb
cs
or
das
enter
xchg
repnz
mov
sbb
add
dec
mov
push
fcoms
fwait
ja
mov
hlt
add
es
in
mov
int
cmp
xchg
dec
rorl
inc
mov
inc
jg
cmp
add
jmp
push
std
sahf
mov
pop
into
out
mov
or
icebp
fwait
pushf
mov
imul
jecxz
pop
dec
push
mov
jge
out
test
jg
lret
leave
out
repnz
mov
outsb
pop
pushf
jno
lret
sbb
xor
add
in
in
divb
into
outsl
inc
xorb
adc
xchg
stc
cld
adc
jno
sub
jmp
enter
dec
test
pop
bound
mov
sub
scas
mov
inc
jl
js
into
ret
inc
test
clc
push
xchg
ja
mov
daa
pusha
inc
cmc
call
inc
aaa
adc
fimuls
shrl
mov
xor
jo
je
adc
push
cltd
fcompl
push
adc
call
jg
or
lcall
hlt
jmp
repnz
dec
push
rcrb
mov
xor
orb
mov
inc
sub
arpl
xorl
int3
mov
test
dec
sbb
imul
dec
xchg
xor
add
insb
enter
test
cmp
hlt
push
out
lahf
mov
pop
inc
fisubrs
stos
mov
out
fistl
xor
movsl
leave
addl
pop
xchg
mov
cmpsb
arpl
mov
movsl
lds
stos
rcl
ret
flds
push
pop
xchg
xor
in
fs
mov
mov
jo
icebp
into
insb
scas
jno
jmp
dec
test
jmp
mov
les
pop
cs
testl
or
cmp
cld
jo
jle
adcb
arpl
jg
in
in
into
aam
mov
inc
xchg
cli
sbb
xor
aam
cmpsb
pop
jecxz
test
mov
shlb
in
adc
pmaddwd
or
scas
cmp
leave
mov
dec
mov
movsb
adc
dec
aad
sbb
adc
inc
add
pop
adc
add
jl
cmpsb
sbb
imul
xchg
or
les
ror
or
jno
nop
rcl
jb
pop
outsb
xchg
dec
sbb
or
leave
push
scas
cmpsl
mov
arpl
sbb
fnstenv
mov
fists
in
push
inc
loopne
fiadds
dec
adc
pop
mov
int3
jp
xor
ret
mov
mov
fnstenv
sub
ss
jmp
mov
push
jmp
test
fnstcw
es
mov
scas
dec
xor
mov
xchg
xor
lret
insb
ficoml
xchg
aad
dec
jae
mov
sbb
in
loopne
out
push
lds
int
out
lea
xchg
repz
sti
cwtl
ficomps
dec
dec
in
xor
mov
data16
or
add
sbb
nop
inc
push
mov
pop
ret
xor
imul
push
dec
jnp
dec
jbe
xlat
movsb
lret
pop
pushf
les
mov
cltd
rcr
xchg
mov
xor
je
sub
int
cwtl
stos
add
daa
or
js
into
lods
leave
cmpsb
adc
cli
xchg
repnz
xchg
jnp
push
adc
pop
mov
sub
les
clc
jmp
xorl
cmc
loopne
repnz
jb
je
inc
imul
pop
lcall
or
push
popl
and
lds
mov
mov
mov
pop
xorb
fnstcw
xchg
lcall
or
aaa
add
push
hlt
cmp
dec
sbb
mov
push
inc
int3
mov
into
imul
push
adc
and
pop
cmp
stc
movsl
jbe
aam
insl
jns
push
jp
mov
fisubrs
cmc
mov
and
mov
sub
adc
pop
enter
movsl
inc
lods
aad
js
pop
inc
pop
out
add
and
xchg
popa
mov
ss
sarl
mov
and
jge
cli
push
xchg
rcll
repnz
test
jb
push
pop
push
fcmovne
test
aad
xchg
call
jl
inc
ror
insb
mov
and
bound
arpl
push
out
negb
movsb
test
out
aaa
jge
add
lods
pop
push
mov
aam
popf
mov
or
loope
stos
push
lahf
inc
and
in
pop
push
mov
clc
es
stos
add
push
int
jb
pop
mov
hlt
in
pop
addr16
and
sbb
je
sarb
or
sub
shrl
push
inc
gs
lods
add
aad
mov
add
xchg
pop
and
addr16
cltd
and
out
movsb
sbb
mov
mov
dec
and
test
popa
pop
cwtl
lock
cmp
push
and
mov
daa
dec
push
lahf
cmpsb
imul
cld
out
mov
pop
movb
cmpsl
xor
sub
or
jae
mov
jns
cmp
mov
imul
loope
and
adc
ret
arpl
loopne
pop
mov
xor
ret
pop
sbb
mov
outsl
mov
cmp
cmpsl
clc
fimuls
dec
test
sbb
ret
imul
pusha
and
jmp
repnz
lods
test
mov
adc
mov
call
pushf
xor
push
cltd
test
loop
shlb
add
xor
sbb
sti
mov
jg
rcrb
stos
nop
aas
subl
scas
jl
inc
sbb
hlt
jecxz
mov
mov
jns
adc
lret
push
inc
push
mov
movsb
jno
jae
cmp
rclb
repz
inc
mov
test
lahf
dec
fsubr
mov
decl
rcll
pop
mov
hlt
aaa
scas
imul
add
ss
mov
ret
mov
cwtl
shlb
pop
fcoml
push
jl
xchg
iret
insb
ficoms
fcmovnb
aas
and
mov
mov
xchg
mov
mov
or
iret
into
inc
cmp
sub
bnd
adc
clc
jno
outsb
mov
xor
xchg
push
push
and
adc
shl
sti
stos
xchg
mov
imul
inc
mov
jns
rclb
mov
rorb
pop
push
xchg
push
jmp
dec
adc
ret
jg
sbb
inc
cmc
jns
xchg
cmp
fwait
je
lahf
out
stos
std
cmpb
xlat
lcall
push
shlb
fwait
aam
mov
mov
daa
leave
scas
out
mov
adc
shr
push
enter
data16
shlb
push
loope
rcll
mov
add
mov
loopne
sub
das
cmc
jle
pop
loopne
clc
cs
dec
in
aaa
xchg
push
inc
ljmp
or
pop
pop
scas
push
cmpb
sub
stc
fnstenv
inc
push
cmp
push
add
sub
add
lods
sbb
inc
or
stos
cltd
cmp
cld
test
xlat
ss
iret
shl
pop
data16
int
dec
dec
inc
xor
popf
push
loopne
xchg
jne
sahf
cld
xlat
add
jg
xchg
adc
xchg
test
dec
loopne
out
in
xor
js
or
adc
pop
mov
mov
hlt
les
popa
xor
pop
jge
inc
fs
rclb
pop
fstp
dec
fisttpl
push
test
jo
mov
test
xchg
cltd
jb
push
dec
out
cli
jne
je
scas
cmp
arpl
jae
pop
int
push
jbe
push
push
repz
xor
fwait
sahf
fdivp
lock
xchg
adc
push
push
in
pop
jle
hlt
aas
fbld
pop
mov
push
call
insb
jno
pop
sbbl
jmp
mov
add
jnp
das
xor
xchg
imull
or
fnstsw
testb
aad
data16
adc
pushf
insl
out
lds
xor
leave
lret
jg
shll
jae
cmpsb
dec
jb
add
push
aaa
out
push
outsl
fwait
dec
subl
test
jl
fsubl
or
lret
cmp
in
clc
daa
call
ds
xchg
repz
into
fwait
and
pop
and
inc
and
out
rcl
pop
hlt
mov
add
pusha
xlat
shl
scas
dec
test
sbb
jnp
addr16
ja
lret
fildl
insl
andl
int
cmp
mov
in
sbb
mov
out
cmc
mov
or
jne
imul
push
adc
iret
pop
cmp
es
out
jmp
or
dec
out
push
pop
and
movsb
test
orb
mov
jl
fistl
test
inc
test
cwtl
jb
dec
push
shll
push
cld
xchg
jle
push
repnz
jo
sbb
jbe
cmp
dec
add
sahf
or
sub
cmpsl
add
mov
in
mov
icebp
push
sbb
call
je
int
sbb
insb
scas
dec
cmpb
ss
loop
fisubrs
jg
insb
mov
es
mov
push
add
mov
xchg
mov
and
mov
js
popa
out
cmp
sbb
inc
into
cmp
fwait
push
shlb
fdivr
shlb
sbb
dec
push
sbb
es
in
xchg
out
test
xchg
pop
cmp
testl
aas
xchg
arpl
insl
inc
aad
fidivrl
jmp
loopne
mov
inc
adc
mov
sbb
addr16
test
adc
movsl
mov
test
jo
adc
push
and
jne
jns
idiv
pop
sahf
cmovs
sbb
pop
jae
xchg
int
and
mov
leave
add
scas
rorb
adcb
push
xor
insb
lock
push
xor
mov
lret
out
scas
not
and
xor
dec
inc
jne
mov
cmpsb
inc
xor
aas
ja
mov
js
sahf
dec
jge
push
popa
insl
mov
sbb
stos
aaa
mov
leave
xor
mov
fdivr
jp
adc
dec
and
mov
push
xlat
pop
xchg
movsb
popa
lret
mov
int3
push
aas
test
subl
jle
mov
out
sub
xor
in
jb
cmp
adc
jl
cli
in
rorl
push
mov
gs
fs
js
int
mov
test
lahf
mov
mov
std
test
stc
mov
mov
pop
sbb
mov
movsl
faddl
pop
pop
cmpsl
push
out
inc
cmp
ss
gs
pop
sbb
inc
sub
mov
mov
adc
int3
ret
xor
sub
pop
mov
inc
inc
lds
sub
xor
mov
jg
ss
xor
mov
cmp
dec
push
dec
push
out
xlat
cmp
cmp
push
push
fwait
jmp
pop
dec
cmp
sub
push
mov
mov
test
inc
or
enter
fs
or
push
into
stos
sbb
pop
das
jecxz
popf
inc
xor
cmpsb
sub
mov
mov
daa
test
lahf
lret
jmp
shlb
jnp
mov
add
mov
popa
and
dec
cwtl
sub
js
loop
test
xchg
int
aad
xchg
mov
in
inc
mov
xor
lods
test
xchg
sub
sub
cmpsl
not
in
push
xor
clc
jbe
nop
add
dec
mov
mov
lahf
adc
dec
mov
daa
testl
mov
loopne
and
loopne
aad
cmp
sahf
loop
outsl
xchg
out
sbb
sbb
sarl
hlt
cmc
xlat
dec
xor
dec
shrl
rdpmc
add
outsb
cmp
insl
jg
add
inc
mov
inc
push
outsb
push
xchg
mov
push
mov
jno
aad
xor
sub
jp
ds
insl
xchg
mov
push
jns
movmskps
lea
inc
clc
addr16
cmp
push
pop
test
jmp
std
popa
rorb
xchg
sbb
inc
int3
test
idivb
or
in
in
jmp
pop
sbb
jecxz
stos
fldcw
push
subl
enter
mov
mov
push
hlt
sub
xchg
dec
pop
jmp
out
push
sub
lret
mov
cmp
push
inc
and
mov
inc
aam
pop
call
dec
xor
aaa
pusha
nop
into
or
xchg
fstps
pop
sahf
jecxz
int3
inc
inc
daa
add
out
jno
int
dec
shlb
adc
ret
fstpt
dec
movsl
adc
mov
inc
std
push
sub
cmp
adc
lods
mov
cmp
test
out
arpl
lods
dec
mov
fwait
sub
mov
mov
mov
fcmovnbe
gs
xchg
nop
inc
cmp
js
sbb
cmpsl
sub
jo
lods
rcrl
hlt
decl
rcl
stc
or
jmp
dec
ljmp
and
test
sbb
add
cli
scas
and
fmul
pop
push
jne
push
outsl
je
pop
inc
jecxz
push
xor
mov
or
and
paddsb
repnz
pushw
cmp
pop
and
mov
push
or
shlb
sbb
shrb
lret
mov
divl
cmpsb
fmull
jnp
stos
or
leave
lahf
sub
inc
jp
xchg
repz
test
xor
call
xchg
adc
fst
nop
daa
xor
cmpsb
outsb
shrb
negl
and
and
jb
sbb
sub
clc
icebp
outsb
or
or
mov
xlat
lea
mov
inc
sub
pop
clc
and
and
test
dec
out
cltd
aaa
mov
sub
scas
movsl
fadds
mov
or
pop
fwait
push
jno
clc
sub
fdiv
cwtl
lcall
rcr
mov
cmp
or
jmp
aaa
jno
enter
sbb
push
push
and
xchg
mov
pop
negb
xor
or
xchg
sahf
inc
clc
xchg
mov
push
mov
hlt
pushf
lods
dec
push
adc
mov
imul
jl
pop
sbb
je
adc
and
or
lods
sahf
lahf
dec
inc
fidivrs
push
mov
out
dec
pop
jae
fs
xlat
jb
mov
sbb
inc
push
fcomp
push
pushf
xor
jne
cmc
jmp
jp
lods
xchg
push
inc
cmp
cmp
bound
pop
jg
int3
rcrb
lcall
aas
jp
pushf
stos
push
test
mov
push
sub
insl
or
jp
mov
jnp
jecxz
mov
arpl
test
xchg
fnstenv
mov
cmpsb
int
mov
push
stos
add
pop
xchg
gs
dec
loopne
lods
push
lret
adc
sub
lcall
push
rolb
cmp
cmp
shrb
pushf
mov
dec
pop
xchg
push
loope
int3
pop
jnp
mov
or
or
testl
dec
pop
daa
data16
push
inc
in
xchg
lods
mov
xchg
jno
aaa
insb
jle
sti
out
xchg
pop
in
adc
hlt
out
sbb
sub
add
and
dec
test
mov
or
push
jnp
lock
addr16
ja
push
cltd
out
call
test
inc
and
dec
mov
mov
int3
popa
xchg
adc
or
mov
cmp
pop
ret
cltd
loopne
push
fsub
dec
pop
sbb
shl
stos
fistl
pop
xor
add
sbb
out
cmc
mov
dec
outsl
shll
leave
jge
or
pop
push
xchg
jmp
mov
roll
cmp
mov
je
inc
mov
lret
out
dec
jge
jae
pop
es
int3
sbb
scas
int
cmp
cs
cmp
insb
xchg
test
jp
rcrl
mov
ja
repz
je
adc
sub
pop
push
out
lods
scas
cmpsl
sbb
and
pop
add
dec
xchg
test
mov
inc
jmp
gs
fldcw
std
pop
out
add
xabort
cmp
lret
cwtl
sbb
lods
inc
mov
inc
and
dec
out
pop
cmc
repnz
mov
or
pop
xchg
inc
xor
sbb
push
fmull
test
mov
icebp
testl
dec
cmpsb
sbb
fwait
repz
sub
outsb
fnsave
xchg
pushl
fmuls
insb
mov
lahf
pop
xor
scas
inc
out
adc
push
mov
jecxz
mov
stc
ss
dec
dec
scas
and
jp
movsb
in
mov
clc
pop
cld
bswap
clc
fadd
mov
dec
or
test
xor
jg
ret
inc
adc
popf
in
rclb
lods
sbb
test
movsb
lret
call
mov
fisubs
or
fisubl
je
xchg
cs
divl
iret
xorb
push
pushf
js
idivb
push
out
mov
mov
lret
int3
mov
lcall
pop
sti
pop
fsubrl
shrb
cmp
jmp
sub
add
dec
sub
cmp
and
in
mov
call
test
mov
imul
leave
pop
ds
into
shlb
sarl
and
imul
push
xchg
mov
mov
dec
insb
cmpsb
inc
lcall
add
push
cld
or
fiadds
jne
mov
lcall
stos
and
or
sbb
mov
push
jbe
add
push
or
pop
loopne
daa
ss
mov
push
pop
sbb
jle
rolb
adc
add
sbb
inc
out
push
call
push
fsubl
dec
pop
test
mov
jns
stos
xchg
xlat
sti
insl
into
std
xchg
cmp
cmpsb
xchg
push
aad
mov
push
popf
jmp
nop
mov
sarb
mov
lret
or
lcallw
pop
divl
sbb
dec
jbe
inc
repnz
cmp
insb
lcall
dec
pop
and
jmp
out
mov
into
cmp
xchg
sub
jl
ljmp
dec
gs
sub
lock
sub
ja
lret
rcrb
pop
jg
xor
je
test
sahf
call
or
mov
inc
add
or
inc
cld
jnp
pop
jecxz
and
sbb
cmpsl
sbb
pop
jnp
ds
shl
add
xchg
outsb
dec
sub
push
out
jmp
cld
stos
dec
mov
add
sysret
pop
push
shl
faddl
aad
int3
inc
fimuls
in
xchg
or
mov
xchg
int3
or
aad
stos
ret
add
loop
imul
push
push
ja
fcmovnb
mov
mov
notl
cwtl
mov
loope
mov
jl
das
mov
xchg
xchg
cltd
daa
mov
lods
ret
dec
in
sti
cmpsb
andb
imul
push
cmp
jge
mov
jp
push
daa
negb
imul
sahf
sub
cmpsb
sub
aaa
roll
sarl
add
lds
add
test
sub
imul
push
xor
or
rcl
or
dec
std
push
mov
push
push
mov
mov
sub
mov
addr16
mov
lcall
fisttpll
add
leave
outsb
cmp
and
imul
sub
cld
jmp
cltd
addl
sahf
out
ljmp
sub
jg
push
gs
out
fdivs
aas
es
fldcw
pop
cwtl
rorl
xchg
fstl
enter
push
shrl
int3
xchg
push
aam
sarb
add
sub
std
cmp
jecxz
rorb
xor
cli
pop
push
lods
sub
mov
out
dec
sub
stos
notl
mov
inc
int3
and
add
jge
movsb
inc
mov
out
push
sub
aaa
or
cld
dec
and
inc
jle
push
pop
cmp
dec
push
adc
dec
enter
js
fdiv
mov
sub
in
lret
push
dec
stc
pop
mov
and
fwait
movsl
jmp
mov
push
rcll
dec
int3
fisubs
mov
test
sarl
xchg
into
dec
lds
in
pop
lret
sbb
mov
arpl
loop
clc
mov
jb
clc
push
leave
xchg
or
add
mov
in
inc
je
xchg
pop
push
dec
mov
sbb
loopne
addb
cmpsb
mov
mov
cltd
cmpsl
std
out
cmp
jb
ficoml
jmp
dec
jnp
rorb
lods
inc
fildl
addr16
pop
roll
sti
xchg
imul
std
jmp
push
inc
push
addr16
adc
outsl
lock
mov
mov
mov
xchg
push
sbbl
pop
inc
jbe
sbb
shl
iret
sub
out
in
test
jo
hlt
cltd
xchg
leave
js
sarb
add
dec
and
test
fwait
sub
xlat
ret
dec
push
insb
out
push
fxch
pop
and
std
scas
andl
push
and
pop
jno
dec
mov
inc
lret
push
mov
add
fdivrs
jl
lret
ret
sub
or
into
inc
lock
or
dec
push
stc
adc
sbb
fdivrs
push
sub
cli
movsl
adc
out
je
loop
sub
and
in
xchg
add
sub
and
loope
test
xor
dec
imul
cmpsl
xchg
in
mov
push
movsb
aam
jae
sub
aaa
movsl
sarb
imul
push
fs
int
fsubs
xchg
mov
inc
xor
xchg
mov
mov
sbb
lret
mov
mov
push
pop
pusha
inc
xchg
hlt
inc
jg
push
fabs
aad
addb
iret
adc
fidivs
and
jns
pop
or
xor
dec
sbb
push
lock
aam
pop
pop
loopne
orb
mov
sahf
movsb
insl
cmc
hlt
dec
and
das
xor
mov
sbb
and
or
dec
outsb
movsl
out
fdivrl
push
xchg
xchg
lahf
fneni(8087
mov
pushf
jl
dec
push
outsb
repnz
in
inc
dec
mov
jecxz
aas
jmp
cwtl
or
dec
call
sub
int3
pop
popf
jo
add
inc
mov
leave
cmc
pushf
sub
leave
jecxz
sbb
lods
adc
shlb
mov
pushf
dec
lds
das
iret
out
loope
xlat
lods
sti
and
jae
outsl
insb
pop
test
dec
int
js
jmp
daa
push
mov
mov
ret
cmp
push
cwtl
out
inc
incb
fldl
sti
dec
mov
xchg
and
imul
filds
ret
and
push
movb
std
pop
dec
cli
lret
xchg
bound
data16
out
repz
sbb
adc
test
lods
push
stos
test
pop
adc
es
mov
std
adc
jmp
fdivrl
push
add
stos
sahf
sub
pushf
out
dec
inc
mov
out
adc
test
and
ds
call
mov
rol
xor
push
and
iret
mov
lock
jae
dec
jbe
add
fwait
rolb
push
inc
out
push
movsb
xor
pop
sub
adc
movsl
mov
xor
stos
scas
xchg
xor
cltd
test
aaa
rolb
fmuls
adc
pop
mov
in
rorl
jb
mov
jle
push
dec
je
push
aam
mov
pop
lcall
int3
ja
jnp
les
push
add
imul
dec
aam
outsl
jmp
push
cmp
push
sbb
rolb
mov
xchg
push
out
aaa
or
dec
lods
mov
sbb
in
insl
loope
inc
inc
rcll
xchg
lret
pop
idivl
icebp
jecxz
or
lods
push
aam
push
push
sbb
into
lcall
in
mov
imul
sbb
or
fildll
ds
jg
fs
icebp
cmc
add
and
shlb
lods
dec
nop
pop
pop
dec
xor
and
sti
mov
cmp
adc
xchg
adc
out
cmp
add
hlt
jns,pt
adc
iret
notl
jno
push
in
jl
rolb
ret
jne
mov
xchg
sbb
out
pop
push
lcall
dec
or
and
adc
jecxz,pn
fs
popf
clc
lret
pop
bnd
enter
movsl
out
mov
or
shl
inc
adc
daa
int
lods
xchg
dec
and
nop
jge
jl
test
or
sbb
lods
popf
adc
movsl
sar
sub
inc
xchg
sub
lret
outsl
mov
xchg
adc
pop
mov
out
dec
push
mov
cmp
mov
mov
je
pop
pop
fdivr
hlt
fildl
mov
inc
adc
je
loope
inc
inc
xor
pop
lcall
xchg
xchg
mov
std
xchg
add
sbb
push
cmp
mov
aam
stc
rorl
push
out
sbbl
in
jnp
ret
cmp
repnz
dec
mov
xchg
ss
and
and
in
mov
push
or
jb
pop
orb
aam
mov
push
jl
xchg
scas
shl
push
jmp
or
rclb
les
push
or
pop
into
sub
inc
push
push
shl
adc
push
add
mov
adc
ja
shrl
enter
jg
push
jno
pop
and
fdivrl
into
add
out
cli
jno
mov
pop
mov
ret
dec
int3
mov
scas
sub
cmp
adc
xchg
push
cwtl
jne
call
gs
mov
jmp
xor
push
push
sbb
int3
iret
mov
imul
push
cli
shlb
int3
pop
int
dec
data16
ds
into
cwtl
insb
addr16
ja
adc
lds
outsb
ss
test
ljmp
ljmp
popf
dec
jp
dec
dec
sbb
aad
jmp
mov
shrl
pop
dec
cmpsl
stos
xchg
and
add
sarb
cld
mov
xchg
dec
lcall
jmp
lahf
pop
shlb
test
jl
shlb
repnz
sbb
add
fcmovnb
or
mov
bound
ja
inc
sub
pop
push
insl
mov
cmpb
stos
std
and
pop
andl
jnp
fsubrl
hlt
ret
cltd
dec
push
lods
shrl
mov
daa
lahf
lcall
data16
xlat
shll
add
push
xchg
xor
cld
cmp
fiaddl
mov
fs
mov
xor
jmp
or
rcl
mov
push
sub
push
popf
outsl
sbb
cli
outsl
ljmp
and
mov
in
cmpsb
or
ret
insb
in
cmpsl
data16
je
int
add
add
scas
jmp
jae
movsb
out
dec
inc
push
fisttpll
push
adc
stos
je
mov
and
mov
loop
mov
cli
andb
dec
into
cmp
jbe
cmpsb
ret
pusha
clc
outsl
aas
imul
mov
xor
vcvtss2si
pop
das
lcall
stos
in
xor
int
jb
in
sub
into
out
mov
adc
call
cmp
lret
push
movsb
js
mov
loopne
ljmp
arpl
rorl
mov
mov
int3
cmpsl
mov
pop
fldl2e
jmp
xlat
cmp
jo
mov
lahf
jbe
xchg
sarl
popa
imul
loop
cmc
jne
cwtl
int3
lock
adc
pusha
mov
out
inc
fcoml
jle
testb
push
ret
sahf
lods
fs
mov
mov
in
aas
jns
xchg
movl
rolb
push
sub
cli
mov
jmp
subb
leave
mov
mov
push
fmull
push
mov
pop
pop
jl
or
dec
sbb
or
outsl
pop
xor
out
and
fs
inc
or
mov
insb
rcl
aam
xchg
or
fwait
stos
cwtl
negb
movb
shlb
add
push
andb
inc
rcrl
lods
jle
clc
push
js
popa
sbb
add
dec
icebp
jl
inc
xor
jne
sub
jecxz
clc
add
dec
cmp
and
mov
shl
xchg
mov
and
inc
or
out
jp
and
push
sub
mov
nop
sar
sti
in
les
ret
mov
dec
xchg
hlt
pop
leave
jne
insl
or
aas
adc
inc
rclb
jbe
movsb
dec
iret
jmp
mov
into
cmp
inc
push
lcall
jbe
aaa
mov
mov
jae
in
cmp
mov
adc
mov
cmpsl
sbb
inc
xor
push
and
mov
std
cltd
and
dec
fnstcw
jns
fwait
cmpsl
add
jb
in
nop
lods
stos
repnz
movsl
movq
cmc
cld
mov
add
jle
pushf
and
xchg
sbb
lahf
sbb
pushf
jg
scas
adc
mov
dec
mov
mov
int
mov
daa
xchg
push
push
pop
add
test
sub
fwait
loopne
sar
sub
insb
add
in
jp
ljmp
repnz
dec
jmp
adc
push
add
mov
pushf
dec
add
mov
fldt
pop
call
nop
lock
jae
aaa
push
xor
mov
or
jb
mov
popa
sub
data16
sub
mov
lret
outsl
and
sub
mov
sbb
pusha
ret
xor
xor
xor
and
sub
jge
mov
xor
mov
ficoml
jae
dec
test
or
mov
pop
jl
jecxz
push
mov
pop
pushl
and
repz
jae
in
ja
dec
sahf
xchg
out
push
xor
aam
aad
fldl
dec
data16
xor
and
movsb
shr
into
popa
das
iret
outsb
inc
cmp
dec
rcl
or
loope
and
inc
push
mov
mov
xor
or
test
pop
fcomp
mov
cmp
jbe
scas
jno
lock
and
sarb
jb
or
shrl
ja
jae
lret
out
sbb
lcall
and
out
pop
xchg
pop
int3
je
lcall
push
and
xchg
push
out
scas
dec
pop
rorb
inc
in
xchg
push
adc
sub
fst
adc
or
fucomi
inc
test
jnp
inc
adc
xlat
les
out
fdivrp
push
loope
add
push
movb
aam
in
insl
sub
fstpl
sbb
and
mov
out
cmp
mov
int3
sub
cmpsb
xor
in
push
xchg
dec
xchg
divb
jge
mov
out
out
jns
mov
jae
repz
aam
bound
xchg
add
les
add
adc
mov
xchg
ja
mov
into
inc
xlat
pop
sbb
stos
push
xchg
push
insl
cmp
popf
hlt
push
cwtl
loopne
or
or
add
aas
pop
xlat
stos
clc
test
mov
fwait
jbe
add
cmp
pop
push
jo
fnstenv
and
or
das
cmp
lret
xchg
mov
sbb
fisttps
xor
xor
wbinvd
mov
rolb
push
test
hlt
xchg
popl
mov
push
mov
fucomi
add
or
and
sbb
mov
ror
lea
fistl
xor
jo
jns
scas
dec
xor
and
push
push
sbb
mulb
loope
sbbl
push
testl
inc
or
int
cli
dec
ret
cmp
adc
adc
xor
sub
lds
mov
mov
mov
cmp
leave
ss
or
cwtl
adc
pop
mov
xchg
pop
notl
sti
aad
loopne
sub
mov
jb
lea
cmpsl
addr16
dec
imul
std
pushf
xor
dec
xchg
fidivl
add
add
mov
aad
cmp
jne
pop
out
sub
push
adc
mov
movb
mov
push
jmp
sub
out
icebp
test
out
pop
insl
mov
les
inc
rcr
push
lods
out
movl
icebp
inc
nop
mov
xor
dec
scas
stos
mov
cmc
xor
pop
imul
xchg
xchg
in
int3
push
adc
adc
sbb
mov
jge
push
aas
loope
adc
mov
pop
sub
jge
mov
or
inc
clc
adc
xor
ret
adc
push
cmp
or
inc
sbb
xor
addr16
mov
mov
hlt
arpl
xchg
in
out
ret
mov
dec
gs
and
insl
into
sub
or
call
in
out
sbb
cmp
rorl
mov
pop
dec
stos
aad
xchg
inc
cmp
testb
cmp
jp
js
scas
dec
scas
cli
mov
cmp
cmpsb
cmp
imul
shrl
sbb
mov
es
into
mov
xchg
pop
push
lds
outsl
jns
push
aaa
int3
or
sub
xchg
sbb
add
xchg
and
int3
loopne
push
pop
popa
push
mov
xchg
aad
aaa
call
dec
mov
cmpsl
mov
add
ret
xor
fdivrl
push
xchg
dec
sbbl
fcmovnbe
popf
test
mov
test
jl
insb
mov
pop
pop
or
xor
adc
nop
and
ljmp
jne
xor
jg
add
xchg
and
icebp
iret
stos
adc
cmp
mov
out
movb
scas
xchg
lahf
cmp
ss
loope
add
popf
push
das
sub
nop
jg
inc
jle
mov
std
cmp
push
scas
mov
jbe
lret
int3
out
cmpsl
dec
sbb
fisubrl
clc
or
mov
lods
rcll
call
dec
mov
mov
ror
frstor
movsb
dec
arpl
xchg
es
into
mov
stos
mov
lods
add
xchg
inc
mov
cwtl
push
xor
jno
jecxz
cmp
cmp
push
xor
pushf
mov
insb
in
adc
sti
push
out
loope
and
mov
and
rcl
inc
ret
jle
popf
dec
xchg
mov
cmp
out
add
inc
mov
js
test
mov
mov
mov
cmpsl
jbe
sub
mov
faddl
mov
fxch
leave
insl
pop
sub
adc
cli
lret
mov
mov
insl
mov
aas
or
lds
loopne
test
jl
or
push
mov
sub
sbb
mov
and
cmp
sub
bound
add
or
dec
sub
push
or
roll
in
or
int
dec
insl
andl
stc
out
ja
mov
add
aam
mov
or
or
mov
adc
add
out
gs
xor
xchg
add
add
int
lods
sub
sarl
orl
xchg
or
mov
mov
lods
into
test
sub
sar
adc
inc
mov
mov
inc
or
pop
call
rcrl
dec
dec
mov
das
shlb
adc
repnz
stos
mov
mov
scas
ret
loop
fwait
sub
inc
repnz
mov
test
inc
mov
bound
cli
mov
push
mov
or
adc
jmp
idivb
test
into
add
cmc
out
cld
dec
sbb
icebp
lret
cmp
add
adc
dec
pop
xchg
or
pop
loope
stc
aaa
pop
int
adcb
cmp
xchg
pushf
imul
enter
in
xor
cmp
sarl
ja
movsl
jb
movsl
lret
adc
jo
xchg
sbb
fcompp
dec
sub
ret
outsl
mov
cmp
mov
lcall
sub
js
lods
test
into
jl
cmpsl
movl
test
movsl
aas
adc
and
mov
int3
pop
cmp
ja
mov
xchg
sbb
mov
test
mov
mov
jne
cltd
mov
jns
addr16
sbb
movb
mov
dec
jae
popf
xchg
pushf
not
pop
and
shrb
cwtl
xchg
loop
lret
push
inc
pop
aam
lahf
push
orb
jb
cld
popa
or
or
push
cli
fwait
jmp
sub
test
push
mov
out
test
pop
shll
or
clc
and
push
ret
out
pop
or
xor
out
rcrb
jnp
mov
xchg
vpcmpeqd
nop
pop
nop
push
lcall
mov
xchg
inc
arpl
test
pop
mov
stos
sbb
add
sub
xchg
add
or
mov
cmp
lds
jmp
inc
and
lock
or
loope
add
fldt
scas
add
fcoml
push
xchg
pop
mov
and
inc
loopne
not
in
insb
push
and
aas
mov
jb
popw
in
push
pop
cmp
lahf
aas
jp
mov
xor
in
clc
enter
addr16
mov
leave
inc
push
jg
fadd
lods
data16
fldenv
inc
test
in
mov
jb
push
movsb
pop
mov
mov
daa
clc
add
mov
fiadds
pop
out
fwait
movsb
jge
js
mov
shl
add
jnp
xor
pop
lea
adc
int3
call
push
dec
xchg
ss
push
fndisi(8087
sub
test
pop
or
push
and
cli
pop
jmp
inc
loope
xchg
add
xchg
hlt
pop
imul
test
or
fisubrl
mov
inc
inc
cmp
fildll
mov
dec
lods
xchg
xchg
xchg
mov
dec
imul
mov
out
sti
push
test
adc
or
addr16
jo
push
fstpl
mov
and
into
loop
mov
sbb
idiv
hlt
inc
scas
lret
xchg
push
mov
lea
jno
cmp
lret
push
inc
cli
scas
sub
cltd
aam
ret
or
adc
push
ja
sub
je
xchg
mov
xchg
pop
or
cmpsb
int3
and
add
push
add
ss
in
fidivrl
fnsave
stos
into
mov
inc
mov
pop
fcoms
sub
hlt
add
adc
pushl
fs
adc
push
cmp
loope
into
pusha
mov
gs
xlat
ja
mov
aad
fdiv
cld
add
adc
pop
popf
movsl
pop
push
in
lret
into
push
jae
mov
jb
outsl
sti
add
in
xor
movsb
adc
push
pop
test
cmp
mov
xor
fwait
xchg
das
push
outsl
fisttps
jg
dec
ret
leave
cmp
mov
rcr
push
aas
loope
iret
lret
and
sub
cmp
adc
xchg
addr16
test
inc
scas
cmp
pop
jns
fcoms
enter
xchg
adc
sbb
arpl
outsb
pop
sbb
rorb
into
repz
adc
into
loop
loope
jbe
xlat
ja
pop
loopne
imul
jns
xchg
and
and
jne
xor
mov
ret
fs
cs
cmpsl
jno
sbb
lock
mov
pop
mov
arpl
dec
inc
add
xor
test
enter
cmpsb
lds
je
pop
lcall
loop
ret
sub
ficoms
inc
or
arpl
xchg
fiaddl
dec
push
cmpsl
push
xchg
aaa
push
cmp
aam
jns
sarb
in
fildl
js
sbb
stos
mov
mov
mov
and
lods
lds
inc
ret
mov
cmp
repnz
mov
mov
and
and
iret
add
add
adc
inc
xor
xchg
in
pop
mov
cld
and
mov
xor
adc
ljmp
xchg
cs
or
inc
in
rol
lds
aam
lret
repz
incl
lret
cld
fwait
or
add
iret
stc
je
fdivl
pusha
dec
loop
push
jbe
inc
sbb
call
mov
push
insb
adc
lahf
out
xchg
sbb
or
pop
push
dec
pop
aam
sub
ss
insb
dec
arpl
int3
subl
fists
stos
jle
in
cwtl
dec
and
mov
shlb
pop
in
sarl
lret
rcll
jne
dec
int
ljmp
pop
loop
and
outsl
dec
push
scas
sub
push
sahf
in
iret
push
cmp
fwait
shlb
rcrb
lret
das
shrl
in
jbe
ljmp
mov
lret
fcom
push
lcall
pop
xor
inc
and
cmp
fwait
jp
inc
aam
jne
xor
or
fidivrs
cmpl
negl
shlb
jb
lcall
sbb
adc
imul
js
or
xchg
add
stc
cmp
mov
lea
xchg
sbb
push
add
xchg
popf
mov
push
fwait
push
mov
xor
rorb
stos
jb
in
in
xor
adc
mov
sub
dec
icebp
rcl
push
mov
outsb
repz
dec
lcall
or
stos
inc
scas
lahf
xchg
cmpl
out
cmp
inc
mov
mov
subb
jns
dec
mov
shl
outsl
lret
push
shll
aad
fwait
dec
xchg
repz
je
pop
push
or
movsb
jb
xor
xlat
dec
stos
xchg
imul
pop
mov
nop
dec
lahf
sub
xor
mov
pop
xchg
aad
arpl
adc
xchg
xor
in
inc
mov
lret
jle
inc
or
test
push
das
inc
mov
push
adc
xor
and
mov
call
call
cli
mov
fucom
dec
loop
add
or
or
dec
sub
imull
adc
mov
sbbb
std
insb
imul
sti
pop
jno
mov
jg
jecxz
mov
pop
push
or
hlt
pusha
jecxz
lods
mov
jo
pop
bound
ret
or
lds
addl
jle
push
xor
out
add
mov
decb
leave
push
mov
jmp
mov
xchg
xchg
les
fbld
loop
sub
xor
jg
jns
mov
pop
ficomps
incl
in
mov
sub
test
add
mov
mov
and
pop
or
sbb
insl
pop
rorl
inc
sarb
fisttps
jge
shrb
mov
mov
fimull
cwtl
mov
push
push
int3
mov
cltd
adc
aam
std
add
cmp
mov
jbe
iret
cmpsl
insb
imulb
jnp
and
lock
fdivrs
dec
ret
cmp
sub
into
fs
or
push
out
sbbb
repz
jae
cld
inc
jmp
xchg
mov
sti
cmpsb
cwtl
jle
push
adc
pop
push
push
out
dec
mov
stos
lret
out
and
fdivs
mov
xchg
imul
or
icebp
and
xor
push
push
insl
daa
imul
xchg
shll
mov
and
or
mov
in
dec
inc
mov
in
sbb
lret
test
pop
or
out
mov
out
fimuls
sub
push
xchg
ror
jbe
leave
push
sub
popa
pushf
outsl
hlt
and
xor
jle
sarl
sub
push
xor
lret
sub
pushf
int
out
push
pop
jbe
sbb
popa
mov
ss
sbb
js
push
cmpsb
inc
mov
std
inc
mov
sahf
jnp
jp
data16
mov
sub
les
sbb
outsl
xchg
dec
dec
adc
pop
aad
jle
and
mov
pop
adc
iret
jns
or
cmp
cmpsl
and
test
lds
xchg
pop
push
xor
mov
push
mov
mov
out
stos
das
xchg
add
dec
and
call
xor
xchg
stc
inc
addb
sbb
nop
sarl
int3
xchg
insl
sub
lret
push
je
ljmp
loop
mov
jge
sti
xchg
mov
mov
pop
dec
xor
mov
scas
adc
or
clc
js
fwait
and
gs
mov
mov
sub
jge
dec
xchg
sbb
jbe
xor
rolb
fiaddl
js
je
mov
es
repnz
ljmp
jne
sbb
scas
stos
aas
or
popa
out
cwtl
cmp
jge
dec
pop
xchg
insb
fcmovnbe
cmpsl
push
mov
inc
out
fs
mov
les
inc
push
bound
ja
jle
cmp
sbbl
fbstp
fwait
into
xchg
jecxz
push
mov
or
add
inc
sub
xchg
fisttpll
xor
mov
fwait
and
lock
and
sti
fiadds
add
ljmp
fcmovb
dec
sbb
push
movsb
mov
std
sbb
loop
lods
mov
scas
sbb
fbld
inc
add
mov
test
mov
int3
cmp
xor
add
sbbl
mov
loope
mov
inc
xor
inc
xchg
and
dec
and
sub
in
mov
mov
xor
lods
add
pop
insl
cwtl
pusha
adc
or
xor
loop
ds
and
nop
jmp
pop
into
xchg
jo
sbb
mov
dec
sub
pusha
out
xchg
inc
cmp
sub
stos
pop
test
imul
dec
shlb
jecxz
out
and
jo
test
aam
inc
dec
jle
pop
adc
lock
cmp
jge
jb
not
test
into
out
cwtl
hlt
cmc
lahf
lock
jno
add
daa
xor
lcall
divl
jg
sbb
xchg
sub
and
int
outsl
push
orl
pop
sbb
dec
out
mov
or
scas
ja
outsl
pop
into
fcmovne
and
add
test
iret
and
lea
jne
std
aad
bnd
das
inc
xchg
pop
jecxz
and
ljmp
mov
and
rol
push
mov
addb
stos
sbb
popf
sub
cltd
adc
jmp
hlt
xchg
xor
ret
cmp
cli
sub
push
push
jbe
pop
fdivs
movsb
mov
xabort
mov
cmp
lods
sub
popa
dec
jbe
addr16
lock
inc
insb
cli
into
sub
jecxz
ja
cmp
xor
mov
adc
mov
pop
ret
cs
sbb
into
mov
imul
loopne
mulb
cmp
sub
lea
jl
sub
mov
jbe
movsl
mov
cmc
rcrb
jae
loopne
call
and
jecxz
loop
into
or
movsb
adc
hlt
mov
ljmp
sub
into
idivl
cmc
push
test
mov
jg
insl
rolb
xchg
sti
int
push
and
imul
xor
aam
stos
repz
repnz
mov
dec
inc
js
jno
or
adc
cmpsl
outsl
repz
jne
dec
jmp
inc
push
jb
push
out
aaa
rcrb
add
es
xchg
addl
mov
leave
dec
das
push
fidivrs
cltd
sbb
fcom
and
add
out
xchg
scas
mov
dec
iret
mov
xor
xor
sub
jb
add
cmp
jp
mov
push
mov
into
outsl
fdivrl
rorl
ljmp
lods
loope
sub
xor
test
lea
cs
jp
mov
jbe
ret
xchg
mov
pop
xor
and
mov
test
xchg
sbb
push
gs
fdivr
push
push
sti
or
add
pop
pop
stos
leave
jle
sub
dec
mov
pop
popf
inc
stos
cltd
std
ss
push
dec
push
test
and
insl
sub
mul
dec
sahf
sub
dec
nop
mov
mov
lea
mov
filds
aas
hlt
cmp
and
dec
fimuls
push
mov
ffreep
and
mov
mov
cmc
cmp
xor
fildl
lods
mov
imul
jbe
leave
lods
sbb
in
cmp
testl
cmp
ljmp
faddl
sub
xchg
imul
sbb
insb
mov
arpl
jae
and
int
mov
js
in
call
in
xchg
bound
add
rcl
scas
ret
into
pop
test
jl
mov
inc
daa
je
mov
add
in
jle
shll
insb
cmp
loope
addr16
out
xchg
jne
push
xchg
lods
jge
pop
inc
jno
out
divl
clc
dec
rcrb
pop
movsl
inc
xchg
jb
xchg
lret
push
xchg
mov
and
sub
repz
jae
xlat
jle
pop
in
jnp
push
gs
sbb
stos
fsubrs
daa
stos
sbb
adc
mov
imul
pop
push
in
imul
cwtl
cmc
out
and
push
push
repnz
mov
fisubrl
insb
andb
cld
in
sbb
movsl
lret
jns
xor
push
add
movsb
mov
fs
mov
push
jno
lahf
cmp
adc
sub
es
cmp
ljmp
inc
xchg
clc
int
push
mov
cli
call
in
lods
aas
dec
jns
movsl
inc
pop
cmpsb
mov
mov
cmp
xchg
jp
mov
es
jmp
push
in
int
cmpsl
movsb
arpl
inc
or
xor
dec
stos
and
out
je
push
or
sti
fwait
in
mov
ret
mov
int3
je
not
repz
scas
lahf
test
sub
sarb
es
sbb
push
punpckhdq
scas
jmp
mov
pusha
cmpsl
cmp
jbe
sbb
jnp
mov
loop
pop
mov
loope
mov
push
inc
xchg
outsb
ret
data16
xabort
sbb
fdiv
or
lods
stos
inc
jne
cmp
or
xchg
gs
enter
inc
cs
mov
loop
dec
out
ljmp
add
mov
xchg
pop
dec
push
int3
add
jb
out
shll
xchg
stos
or
xor
out
aam
lock
sahf
icebp
xorb
lods
ja
repz
cmp
sbb
imul
and
lods
mov
xor
imul
lods
mov
add
cltd
xchg
ja
das
inc
dec
jecxz
loopne
enter
mov
dec
xchg
mov
sub
push
mov
rolb
mov
loop
mov
inc
sbb
test
fwait
lods
cmp
jle
aas
in
pop
pop
jmp
or
jg
push
jnp
lcall
and
dec
cmp
cmc
adc
jmp
in
into
xor
roll
sub
fstl
pop
movsb
mov
adc
add
pop
jb
pushf
cmp
add
fs
int
int3
mov
xchg
xchg
out
dec
lret
incl
mov
or
jae
ljmp
out
or
aad
xor
in
xor
mov
sub
rcl
push
int
in
jecxz
pop
orb
gs
push
push
lea
int3
loope
popf
enter
int3
fisubs
xchg
ret
inc
cmp
scas
push
xor
popa
dec
gs
call
cmp
fdivs
in
push
mov
iret
outsb
mov
mov
sti
lret
ret
jbe
out
divl
lret
pop
ja
push
pop
mov
imulb
pop
fbld
cwtl
adc
popf
mov
add
fnstsw
push
xlat
pusha
push
mov
movsb
popa
dec
fsubrl
mov
mov
cmc
and
sti
aam
push
fdivl
dec
ja
fwait
call
dec
lret
jmp
rorw
xchg
inc
mov
push
sbb
and
scas
adc
in
push
fwait
mov
adc
mov
sub
jae
push
inc
mov
inc
adc
lods
je
sbb
inc
movsb
pop
push
rorb
mov
out
xchg
out
lcall
inc
and
push
xor
jge
aas
dec
repz
data16
cli
inc
inc
mov
cmp
fdivs
sub
mov
cli
loop
sahf
lret
and
xchg
mov
sbb
and
fwait
push
inc
push
inc
push
rcll
out
fldenv
cmpl
cmp
test
and
fisubrl
jge
arpl
mov
sbb
lret
jne
dec
mov
les
xchg
sarl
mov
add
subb
je
xor
nop
push
out
xchg
stos
cld
cmpsl
out
push
repz
pop
jmp
outsb
into
adc
int
mov
jecxz
imul
int3
jns
pop
addb
sbb
xchg
mov
cmp
mov
ja
jbe
cmpl
mov
dec
imull
scas
push
decb
and
mov
in
stos
push
inc
out
std
xor
leave
cmp
jno
test
xor
das
test
mov
adc
test
enter
int
inc
xchg
in
movb
and
ficoml
push
popa
sub
loope
data16
fisubs
movsl
daa
mov
push
xchg
in
lods
sbb
or
sub
rorb
mov
inc
add
ss
cmc
push
jo
lret
idivl
movsl
and
pop
adc
inc
cmp
xchg
jno
imul
test
mov
pop
pushf
and
into
shll
xchg
in
addr16
psubsw
xor
out
fnstcw
sub
mov
icebp
pop
andb
aas
fs
push
mov
inc
je
xchg
leavew
clc
cmpsl
mov
lds
mov
mov
in
mov
xchg
sub
cwtl
shl
ds
dec
outsl
movsl
mov
or
lods
sub
ja
cmpsl
inc
mov
test
bound
loop
repnz
aam
hlt
jg
cmpsl
les
mov
and
popa
cmp
sbb
dec
xor
pop
xor
shlb
jns
dec
dec
sti
or
jge
test
insb
cmp
jnp,pn
rolb
inc
add
mov
pusha
xchg
outsb
idivl
push
xchg
and
mov
addb
std
or
lahf
loopne
inc
shll
fiaddl
ret
adc
loope
cmc
or
inc
out
push
push
aam
sbb
les
xor
ja
pop
fisttpll
mov
adc
push
pop
sahf
aaa
dec
adc
into
into
sbb
out
jb
xor
mov
inc
mov
xchg
sarl
iret
ficoms
insl
inc
mov
mov
cmp
mov
repnz
dec
lret
ret
test
adc
inc
dec
cmp
jg
push
loope
lret
mov
inc
scas
ret
out
shld
stos
mov
iret
fadds
shll
je
repnz
sbb
jo
pusha
cltd
xlat
cmp
sub
mov
xor
mov
sbb
mov
cwtl
fsubl
xchg
test
shlb
shll
movl
das
rcll
mov
push
xor
mov
lods
mov
in
loopne
ret
lods
push
sbb
ficomps
inc
lret
stos
orl
test
bnd
lea
lahf
xor
arpl
out
int3
pop
xchg
push
add
mov
aaa
push
mov
mov
addl
cmp
xchg
xchg
lret
sub
push
xchg
xor
lret
mov
popf
lods
dec
adc
vmovntdq
dec
mov
and
sbb
cltd
dec
jbe
fstp
cmpsb
or
xchg
jecxz
mov
jmp
or
hlt
aam
pop
dec
cld
jg
out
scas
mov
adc
pop
add
add
mov
repnz
aad
adc
lds
addr16
mov
sub
jbe
movl
test
inc
mov
out
imul
cmpsb
movsb
shlb
mov
mov
push
clc
cmp
mov
and
xor
mov
jae
push
cmp
iret
xchg
or
andl
inc
sti
xlat
push
sub
or
inc
sbb
sub
lret
sub
mov
or
shll
xchg
shr
sbb
mov
pushf
sahf
push
mov
xchg
or
popf
pop
in
subb
stos
mov
ss
jmp
cmp
movsl
inc
dec
dec
in
xchg
into
mov
test
inc
into
lret
stc
dec
mov
das
mov
push
sub
mulb
daa
movsl
or
imul
jb
sbb
cli
mov
test
ret
mov
push
mov
int
cmp
daa
add
test
inc
fs
dec
jnp
jg
fdivs
mov
outsl
adc
pop
xchg
stc
push
lret
sbb
das
dec
dec
mov
lods
out
pcmpgtw
test
dec
sub
jbe
popf
push
adc
mov
jle
cmp
push
or
xor
loope
jne
mov
ljmp
xor
or
mov
pop
xchg
ret
daa
adc
or
sub
mov
loopne
adc
cmp
or
cmpsb
mov
lea
jbe
test
pushf
jmp
in
mov
rol
aas
std
jbe
or
test
and
pop
mov
and
mov
xchg
pop
push
movsb
das
fidivrl
xor
pop
into
or
adc
test
adc
lods
and
pop
jbe
repnz
xchg
fcompl
movsl
xchg
mov
push
out
out
ret
aam
ret
int3
mov
loop
mov
sub
ja
xchg
fisubrs
mov
std
jo
test
jp
call
push
add
mov
dec
mov
fimuls
mov
movsb
cwtl
mov
mov
faddp
lahf
and
xchg
stos
and
shrl
test
aas
mov
ja
mov
or
inc
mov
xor
adc
cmp
aad
rolb
fstpt
enter
test
push
pusha
out
or
pop
or
jp
icebp
push
or
cmpsb
dec
jl
jmp
and
test
fstpl
sbb
repz
cmp
mov
std
xchg
fwait
insl
jne
xchg
stc
cmp
inc
mov
imul
stos
into
jae
js
popa
or
adc
scas
ja
mov
and
sub
dec
mov
aam
push
mov
shl
jnp
out
aas
imul
leave
pop
push
or
push
rol
xchg
pop
push
addr16
dec
adc
cs
out
es
push
add
pop
inc
xchg
pop
inc
shl
jne
cwtl
or
sti
dec
cmp
les
cltd
push
cld
pop
xchg
mov
pop
mov
rorl
and
and
rorl
sbb
mov
add
sarb
daa
jo
lock
into
push
push
mov
pusha
cmp
sbb
xchg
dec
jmp
lret
pop
cs
aaa
mov
push
fiadds
mov
sub
out
xor
pop
movsl
stc
adc
mov
jmp
xor
sub
inc
hlt
popa
xlat
fs
ret
ja
xchg
popf
in
pop
sub
push
sbb
jbe
xchg
jns
aam
cs
jecxz
or
mov
idivl
in
xchg
sbb
xchg
rclb
jp
sbb
movsl
iret
jecxz
into
xchg
and
adc
adc
sbb
mov
repz
add
clc
scas
and
cli
xor
mov
out
imul
shr
cmp
xor
dec
jb
out
pop
add
push
int
or
cmp
scas
mov
iret
jnp
lret
shlb
pop
cld
sub
pop
into
popa
inc
test
loope
pop
mov
clc
ljmp
ret
mov
jo
xlat
arpl
push
jns
inc
das
and
pusha
inc
cmp
jne
mov
mov
mov
lret
mov
mov
mov
jmp
hlt
push
pop
sarb
lret
push
lods
inc
ja
neg
add
xor
adc
stos
mov
lods
xchg
in
or
sub
addl
int
sbb
fcoms
aad
pop
jnp
out
pop
out
sbb
cs
aam
lock
test
faddl
mov
leave
repz
mov
mov
data16
lret
clc
mov
out
and
sub
nop
int3
mov
mov
sub
dec
jecxz
adc
lret
xlat
jb
mov
add
sbb
cmp
pop
sub
cmp
xchg
mov
pusha
cmp
je
notb
xor
add
push
xchg
mov
or
sti
mov
iret
mov
repz
cld
popf
or
adc
mov
daa
or
xor
sub
repz
popa
aaa
xchg
or
adc
subb
sub
pop
xchg
fists
popa
mov
addb
popf
sahf
adc
inc
mov
cmpsl
push
dec
mov
mov
jbe
ja
outsl
nop
lods
fwait
cli
fcom
flds
or
pop
sbb
ja
push
cmp
stos
out
and
sbb
sbb
mov
xor
aam
out
mov
mov
ficompl
test
enter
sti
stc
out
and
fldcw
iret
lret
subb
cld
hlt
xchg
or
xor
mov
insb
push
adc
cmp
sbb
pop
dec
jecxz
mov
or
jnp
lret
and
fisubrs
jle
add
xchg
jne
aad
stc
jmp
mov
fnsave
call
sarb
dec
rolb
cltd
out
adc
cmp
andb
pop
mov
stos
xchg
push
aaa
pushf
ja
inc
into
ja
dec
inc
xor
leave
shl
pop
pop
addr16
mov
xchg
rcr
xchg
clc
shrb
out
iret
jp
arpl
and
dec
sahf
mov
adcb
lock
mov
ja
inc
ja
jle,pn
mov
int3
xor
flds
jnp
cmpsl
or
das
loopne
xchg
add
std
daa
movsb
mov
ljmp
mov
jle
push
xor
int3
xchg
mov
inc
xchg
lret
cmp
sbb
push
in
repz
jge
fistpll
lret
push
imul
dec
into
insl
ffree
mov
rcl
mov
xor
mov
int3
test
les
pop
jae
loop
shl
nop
dec
jecxz
and
push
sbb
push
out
pop
xor
mov
call
xchg
and
mov
int3
xor
xchg
cmp
push
scas
push
in
xchg
cmpsb
adc
adc
aad
daa
adc
dec
dec
outsl
rcl
and
shrb
xchg
sbb
mov
leave
mov
push
cmp
in
xlat
dec
pop
enter
lods
or
pop
cltd
arpl
in
int3
gs
jns
xchg
call
cmp
cmp
jno
test
js
lahf
mov
add
dec
mov
push
mov
aad
packuswb
jg
mov
push
fdivp
xchg
ja
push
rclb
das
int
mov
jne
xchg
and
inc
jo
jmp
cmp
sbb
dec
dec
dec
jne
pop
sti
xchg
pushf
loopne
pop
ss
sarb
or
ret
mov
push
push
sub
fcom
add
addr16
mov
aam
mov
inc
int
fsubrp
dec
pop
push
movsl
push
jecxz
movb
nop
mov
shrl
movsb
scas
sub
inc
repnz
jo
daa
mov
pop
leave
bound
sub
mov
and
mov
lret
cwtl
lea
out
fmull
inc
and
adc
arpl
and
mov
lcall
mov
aam
push
insb
dec
push
notb
jne
jmp
incb
in
push
loop
xchg
inc
movsl
jno
pop
fmul
stos
iret
cmp
out
xchg
cmp
mov
movsb
test
stc
sbb
loopne
xor
insl
jle
test
pop
int
pop
mulb
dec
cmc
cmpl
loope
hlt
or
inc
adc
sub
iret
inc
xchg
jg
in
aas
into
mov
ja
add
pop
out
pop
mov
dec
add
movsb
cmp
xchg
enter
lcall
mov
mov
and
inc
nop
addr16
mov
xorb
pop
xor
insl
and
cmpl
mov
fcmovbe
fucomp
daa
arpl
push
push
cmpl
lods
das
xor
repz
xor
dec
in
imul
jmp
dec
dec
aaa
pop
sub
imul
jnp
jmp
add
mov
jns
mov
dec
pop
mov
inc
push
ret
jb
push
fcomip
in
or
jo
pop
outsb
jmp
inc
insl
out
mov
cmp
ficoms
jbe
daa
loop
cmp
dec
out
adc
xchg
dec
xchg
xchg
add
pop
movsl
stc
jb
cmp
in
dec
add
pop
out
mov
pop
inc
mov
mov
xchg
jmp
jecxz
jo
clc
add
xchg
icebp
cmp
adc
lock
jnp
or
mov
dec
es
fsub
scas
jle
fsts
add
add
or
fwait
rolb
in
mov
cmp
dec
shll
cwtl
ljmp
dec
movsl
jnp
pop
pop
pop
lahf
in
into
lods
xchg
jle
push
xor
inc
jg
push
pop
add
inc
fiaddl
and
shlb
inc
jg
or
mov
mov
pushf
and
adc
das
cli
clc
call
sub
test
cmpsl
push
mov
in
fisubrs
sbb
out
loopne
inc
dec
cmp
sbb
shl
sub
inc
push
push
iret
cld
pop
pop
ret
nop
lret
cmpsl
aaa
aam
adc
or
daa
lock
dec
xor
popl
pop
xchg
dec
xchg
sub
outsl
das
sar
into
mov
mov
into
rcrb
inc
xchg
push
pop
leave
jae
dec
xchg
cmpl
sbb
fmull
xchg
jecxz
and
mov
inc
clc
in
mov
add
or
lock
out
loopne
mov
aaa
pop
mov
push
add
out
sbb
pop
cmc
push
sub
dec
push
adc
out
mov
sub
je
imul
jae
cmpsl
xchg
ds
sbb
xchg
cld
ficompl
loop
outsb
xorb
mov
in
popf
stos
dec
dec
push
es
or
sub
sarb
sbb
cld
ljmp
lea
dec
repz
jns
stc
sub
or
hlt
mov
mov
ret
fisubrl
leave
jmp
call
or
sub
cmp
test
and
mov
rcr
add
push
xchg
xchg
mov
adc
out
test
xchg
jae
pushf
sti
adc
rcrb
in
dec
mov
mov
dec
push
xchg
int3
insb
xchg
nop
call
mov
addr16
dec
jbe
fs
push
inc
xor
or
add
sbb
outsb
pop
data16
hlt
enter
push
pop
sub
pop
lret
adc
sbb
push
xor
jbe
fwait
mov
push
out
test
sahf
push
pop
rcr
jl
push
imul
push
loopne
jg
inc
jae
mov
aas
inc
adc
inc
dec
push
xor
test
push
into
ljmp
pop
cld
hlt
or
add
jne
xlat
inc
leave
mov
or
les
dec
rorb
inc
xchg
in
popf
mov
mov
sbb
lea
out
mov
imul
fwait
popa
into
push
push
iret
ljmp
jg
lret
pop
sbb
xlat
mov
cmp
ss
into
fwait
cmp
sub
pop
or
andl
sahf
cltd
mov
arpl
popf
test
repnz
insl
xorb
lret
jbe
cmp
xchg
mov
lds
xor
out
ds
sbb
sub
shlb
aam
outsb
jns
cmc
lea
fwait
cld
out
and
ja
mov
jl
dec
inc
hlt
sti
mov
dec
in
mov
loope
jbe
outsb
das
outsl
scas
lods
jae
mov
jle
mov
pop
ljmp
add
mov
mov
adc
std
in
jne
push
movsl
mov
pop
shrb
sub
xor
ret
jno
int
pop
and
movsl
andb
pushf
ljmp
sub
stc
mov
cld
pop
mov
popa
shrb
iret
mov
jnp
aaa
das
out
out
sub
xchg
jae
pop
xchg
leave
mov
mov
les
mov
sbb
sbb
imull
andl
arpl
push
pop
enter
adc
jmp
in
mov
sti
popa
stos
das
push
out
and
hlt
mov
ficoml
mov
xchg
jns
push
xchg
xor
call
add
dec
lods
dec
popf
add
jmp
lods
xor
or
dec
lock
pop
adc
and
xor
mov
pop
jp
or
test
jo
not
jecxz
pop
stos
sti
rclb
dec
mov
jbe
pop
in
push
hlt
outsb
data16
dec
adcb
pop
sbb
fbld
rcrl
push
out
cmp
jo
pushf
dec
fwait
jbe
std
push
sub
imul
dec
ja
xorb
push
push
mov
or
sbb
mov
mov
imul
and
mov
push
mov
rolb
loop
mov
ja
or
lret
ret
pop
pusha
xchg
push
sub
inc
cmp
push
push
jg
xlat
cmp
ret
test
sbb
dec
call
stos
sub
sub
or
dec
shl
rorl
push
data16
jnp
stos
mov
mov
adc
bound
shlb
mov
mov
shll
or
lahf
js
outsl
push
dec
addr16
jo
sub
mov
ds
inc
scas
xor
insb
ja
dec
out
xchg
mov
cli
push
lret
xlat
dec
mov
push
int3
daa
xchg
sub
sbb
fdivrs
pop
adc
adc
mov
xchg
adc
inc
or
mov
lret
mov
ret
jmp
mov
es
sbb
inc
data16
push
int
stos
xor
dec
add
and
mov
es
mov
orl
pop
push
mov
mov
pop
lcall
and
data16
jg
push
sbb
dec
stos
sub
jne
pop
mov
push
iret
data16
adcb
lret
push
fisubrl
ss
pop
dec
movsl
push
les
bound
lods
cmp
sti
roll
pop
or
shr
inc
push
jmp
or
dec
ljmp
dec
mov
pop
mov
sbb
xchg
sub
pushf
mov
push
lods
add
jae
int
adc
push
cmp
xchg
cld
xor
dec
out
mov
loope
add
xchg
push
cld
test
dec
adc
and
int
adc
clc
fsubs
lahf
mov
ds
sbb
cli
jae
dec
add
inc
xor
push
sub
test
mov
pusha
or
xchg
sahf
shl
out
iret
hlt
add
aam
lret
sti
inc
aad
sub
pop
jns
rcll
cwtl
daa
rcrb
fwait
push
adc
add
aaa
subb
cmp
cmpsb
leave
insb
lret
add
out
jbe
sahf
and
into
push
lods
inc
mov
out
dec
mov
mov
dec
out
es
push
and
je
movsl
mulb
xor
or
call
andl
movsl
push
adc
and
or
mov
pop
pop
inc
push
rol
cmpsl
daa
aad
push
jo
mov
jge
sbb
cmpsl
mov
push
or
cltd
es
jl
rclb
dec
in
into
aaa
aas
mov
sahf
aam
rol
shll
sub
lcall
mov
pop
bound
sub
lock
jecxz
mov
inc
gs
mov
cmpsb
xchg
sub
sbb
inc
jbe
sbb
push
movsl
jle
xor
arpl
decb
popf
add
and
jns
mov
sbb
push
call
ss
push
mov
mov
mov
xchg
jmp
jle
push
inc
test
xor
test
xchg
test
jge
sti
sub
jbe
mov
lahf
mov
out
push
mov
or
arpl
rcrl
repnz
cwtl
add
dec
mov
pop
scas
or
push
or
arpl
mov
push
mov
pop
into
insl
sbb
aam
dec
and
mov
jmp
push
dec
rcll
stos
sub
fcomip
push
xorl
dec
add
cmp
test
movsl
ds
jo
lcall
cmp
jg
mov
sub
inc
cmp
mov
fstl
das
into
fists
mov
icebp
inc
push
inc
aaa
cmp
xchg
fwait
mov
inc
xlat
imul
inc
mov
sub
fisubrs
cmp
and
movsb
jmp
cld
mov
rolb
xchg
bswap
scas
xchg
cli
push
fstpl
data16
dec
fs
pusha
test
das
cmp
push
cmp
shlb
xchg
fucomp
ja
stc
mov
dec
inc
imul
cld
cmp
in
dec
push
in
xorb
enter
cmpl
dec
dec
cmp
and
mov
std
dec
xchg
pop
lock
mov
aam
pop
int3
pop
aas
sub
fcmove
or
out
stos
sbb
jmp
sub
push
sub
xchg
xor
pusha
es
xchg
cltd
pushf
mov
or
sti
subb
fcmovb
pushf
xorl
sub
xor
int3
mov
cmp
push
loop
or
mov
pop
sub
fldcw
xor
lret
jb
inc
xor
and
pop
sub
sub
in
lds
and
stos
data16
loope
loopne
push
cmpsl
jbe
ret
or
mov
add
popa
mov
loopne
pop
les
or
aad
xchg
rorb
adc
inc
adc
out
iret
stos
or
insb
stc
test
data16
push
or
add
lahf
rorb
pop
shlb
scas
out
mov
enter
dec
mov
push
dec
pop
mov
fnstenv
push
call
std
test
xor
adc
sbb
rclb
in
sbb
data16
mov
mov
sti
xchg
pushf
test
sbb
xor
mov
mov
mov
cltd
dec
movsb
addr16
andl
ljmp
mov
rcl
popf
imul
mov
mov
into
outsl
dec
and
push
push
insl
mov
int3
shlb
lcall
outsl
sbb
filds
hlt
xorb
out
cmpb
push
mov
rcr
js
ffree
lods
dec
negl
insb
push
add
mov
int3
movsb
xor
lea
or
mov
adc
jl
ja
iret
incb
cmp
inc
sub
lds
rcll
and
dec
jl
jne
test
fstl
into
movsb
int
mov
cld
push
jl
mull
imul
fisttpll
jp
lret
xor
xlat
inc
inc
hlt
movsl
shrl
push
iret
nop
or
les
sub
xor
mov
xchg
jl
and
dec
and
das
into
outsl
out
or
insb
adc
or
xor
xchg
jl
mov
data16
sub
movsl
test
mov
xchg
stc
jnp
mov
into
sbb
int3
xchg
je
pop
push
mov
adc
mov
pop
and
inc
pop
jae
jno
xchg
cli
les
mov
mov
fimull
or
sahf
out
push
inc
dec
aaa
pop
fcmovne
dec
and
cwtl
or
push
add
sbb
fsubrl
lret
xor
cmp
loope
jae
inc
sbb
add
jle
inc
sub
adc
mov
push
sahf
rcrb
jge
and
inc
call
out
das
repnz
add
out
lods
push
inc
jl
fwait
pop
test
shlb
hlt
fidivrl
jbe
or
push
lret
insl
repz
imull
lcall
sbb
mov
out
and
cs
into
cwtl
outsl
adc
jl
dec
lret
ret
and
xchg
inc
pop
or
push
push
jecxz
xor
in
xor
cltd
ror
rcl
add
cmp
add
lahf
push
negb
add
mov
sub
gs
cmc
mov
sbb
rcrb
aaa
dec
or
sub
int3
mov
iret
push
mov
sbb
and
jmp
das
xor
aas
sbb
cli
inc
stc
xchg
mov
in
sbb
js
mov
sbb
and
sti
or
xchg
test
movsb
adc
inc
mov
add
jnp
or
mov
aad
lret
call
xchg
iret
mov
cmp
pop
mov
push
stos
int3
test
loope
mov
out
ja
in
cmp
cld
shll
sub
sbbl
or
dec
mov
mov
dec
mov
pop
scas
subl
xor
pop
movsl
or
inc
fmuls
enter
test
or
and
lret
pop
icebp
mov
or
xlat
into
jp
cld
pop
add
push
aaa
cwtl
add
out
sti
nop
pusha
fdivrl
mov
inc
outsb
and
mov
push
imul
cmp
cltd
add
sbb
mov
cwtl
stc
adc
call
outsb
and
jae
mov
adc
test
sti
repnz
adc
fwait
icebp
inc
sbb
pop
fsub
dec
xchg
aad
push
sbb
inc
decb
out
and
jno
pop
push
xor
mov
xchg
cbtw
jb
pop
or
scas
xor
ds
adc
daa
leave
nop
mov
aas
jg
pop
mov
imul
sbb
mov
popa
dec
mov
sbb
stos
dec
jb
ss
push
sbb
cmc
mov
rorb
mov
aam
mov
and
aam
sbb
mov
inc
add
cltd
lock
test
cmc
into
cmpsl
test
movsb
and
out
pop
xchg
ffreep
jb
cmp
mov
and
movsl
and
icebp
adc
ja
jg
imul
fadd
lock
xchg
rorl
dec
mov
lds
and
jmp
xor
shlb
outsl
es
aam
mov
out
or
push
std
iret
push
inc
popf
pop
cs
shlb
inc
cmp
mov
jnp
in
fldcw
cmpb
repz
gs
imul
xor
xchg
xor
xchg
push
js
fucomp
insb
push
loope
and
jge
pusha
pop
add
pop
fwait
push
mov
testl
lock
mov
movsb
xor
push
ds
mov
insb
jb
pushf
aam
pop
imul
sarl
add
or
call
loop
jmp
cmp
cld
pop
ret
negl
dec
rol
into
dec
push
mov
xchg
xor
dec
inc
movsb
cwtl
push
sbb
mov
pop
mov
add
in
jle
lcall
mov
sub
dec
sbb
sbb
lret
icebp
pop
xor
lcall
cmp
sti
cld
out
mov
pop
xchg
outsl
or
push
and
outsb
das
int3
mov
mov
sbb
scas
cmp
and
stos
mov
lcall
xchg
inc
push
push
lock
push
push
daa
movsl
pop
imul
ret
loopne
mov
imul
imul
or
daa
cmp
dec
dec
xchg
addr16
sti
sbb
aaa
or
inc
aas
pushf
lret
sub
cmc
xchg
xchg
dec
fdivrs
loop
loopne
xor
sub
lds
mov
xchg
aam
pop
lahf
insb
repz
or
ja
or
add
push
inc
ljmp
cmpl
mov
das
add
cmp
jge
and
ds
ja
enter
xchg
inc
lods
or
xor
pop
and
pusha
std
xchg
dec
xchg
sub
jb
push
mov
or
aad
loope
jle
adc
dec
les
jne
into
jl
hlt
xchg
fldcw
push
jo
sti
aas
call
add
lret
lods
leave
inc
not
scas
mov
push
std
pop
or
mov
sub
in
mov
cld
test
lahf
dec
or
xchg
mov
pop
je
jb
cwtl
push
dec
int3
pop
aad
xor
lahf
negl
fnstenv
cmp
das
imull
dec
pop
jbe
pop
push
pop
mov
jae
sbb
or
jne
jmp
je
mov
jl
inc
pop
or
push
iret
pop
pop
fwait
mov
orl
inc
aaa
sbb
popa
jge
jl
xchg
mov
rcrb
mov
loope
xchg
xor
xchg
mov
ss
and
cmp
adc
ja
xor
lock
mov
ret
sar
daa
dec
inc
jmp
and
mov
push
and
lcall
cmpsb
push
pop
cltd
push
add
fildll
mov
pop
and
shld
mov
and
inc
js
push
and
xor
jae
jo
jmp
cmp
cmp
adc
dec
push
ljmp
sti
dec
sub
test
sub
sbb
sub
das
aam
lods
xchg
sub
sbb
or
shll
jne
jnp
setae
clc
jle
int
xchg
out
ror
mov
sarb
xchg
jns
fs
inc
push
jp
xchg
cmc
mov
jo
xor
or
arpl
addb
repz
xor
fisttpl
xor
dec
ror
jne
loopne
xlat
js
inc
push
inc
inc
cmp
sti
aas
daa
mov
mov
push
mov
inc
jne
sbb
shlb
roll
out
loope
push
dec
or
and
sti
insb
outsb
sbb
inc
lea
adc
in
mov
and
push
std
add
lcall
movsb
movsl
and
inc
pop
in
popf
cmp
inc
jno
add
sub
cld
rclb
aad
les
idivb
mov
or
dec
xlat
hlt
cmp
or
mov
insl
outsl
sti
fsubrl
pop
clc
jmp
xchg
aas
adc
jne
ds
pop
out
inc
flds
cmpsb
jo
xchg
xchg
pusha
push
inc
add
dec
and
ret
push
scas
and
out
movsl
xchg
aam
xchg
mov
pop
roll
cld
mov
dec
cmc
xchg
dec
sahf
mov
add
mov
inc
pop
xor
decl
xchg
movsb
setns
pop
iret
dec
adc
ret
mov
movsl
and
push
xchg
in
mov
mov
nop
dec
xor
fstl
push
mov
or
icebp
movsl
pop
push
xchg
xor
loop
movsb
pop
mov
pop
jne
mov
jbe
mov
add
int
lock
daa
popf
imul
lret
xor
fcmovbe
inc
into
and
insb
push
popf
pop
cmpl
xor
in
sub
lods
xor
adc
jno
xor
or
adc
js
std
inc
iret
gs
jb
push
mov
jecxz
sub
sbb
je
sarl
pusha
add
movsb
mov
std
cs
aas
sub
jo
shlb
out
lods
adc
ret
push
dec
test
add
lock
js
pop
das
adc
fstpl
push
xchg
lods
pop
aad
add
mov
insl
in
add
fs
inc
push
dec
into
fsubrp
stos
cmp
addr16
fcmovb
pop
shlb
fwait
ss
invd
dec
jbe
sbb
addr16
gs
sarl
je
mov
adc
jo
xchg
mov
call
cld
push
movsb
xchg
push
dec
adc
mov
lods
push
xor
into
cmpsl
lret
das
xor
push
push
xchg
push
popl
sar
adcb
jbe
xchg
jecxz
lahf
stos
insl
rolb
pop
arpl
cmpsl
lock
cmpsb
xor
lds
or
xchg
dec
lcall
cmpsl
pop
or
in
xchg
jns
mov
movsb
test
std
pop
mov
ss
sbb
in
push
jbe
pop
xchg
or
sti
xchg
adc
ret
adc
in
or
mov
repz
fdivrl
negb
inc
xor
shll
cli
xchg
repnz
mov
push
push
pop
jp
xor
je
ds
jno
xchg
mov
rorl
imul
push
mov
adcl
mov
mulb
test
fldt
mov
cltd
out
leave
and
cmpsb
inc
mov
nop
inc
adc
cmp
sbb
xor
mov
inc
in
mov
inc
sti
jp
shr
or
and
mov
lret
jae
cltd
scas
das
insl
icebp
adc
int3
cmp
in
ss
into
movsl
orb
xlat
push
jp
lods
cmpsl
mov
loopne
add
dec
shrl
push
mov
test
rclb
subl
mov
data16
mov
and
repz
scas
es
pop
sbb
fldl2e
out
xor
sbbl
mov
icebp
lret
fcomps
add
ret
inc
movsb
rolb
push
mov
call
pop
cwtl
or
inc
fimull
jecxz
add
push
stos
mov
cmp
push
xor
rolb
jp
jno
arpl
stos
cvtdq2ps
cmp
jns
repz
xor
in
adc
pop
jecxz
push
xor
lret
sub
mov
adc
fbstp
inc
push
int
adc
pushf
adc
cmp
sbb
nop
xchg
adc
andb
cmc
es
add
dec
sub
test
mov
jp
and
stc
adc
mov
xchg
inc
xchg
repnz
les
push
adc
test
in
mov
xchg
cmp
ja
xchg
xchg
xor
cwtl
sbb
mov
cmp
push
dec
in
add
inc
lahf
xchg
dec
cmp
mov
xor
cmc
pop
test
mov
pop
jle
sub
cwtl
mov
pop
mov
lock
hlt
dec
ss
data16
cmp
jecxz
xchg
pop
nop
xor
push
outsb
jne
rorb
call
lahf
sbb
loopne
sub
dec
push
push
pop
dec
pop
inc
sub
xchg
std
into
lret
in
jmp
cmpsl
dec
je
mov
jnp
popa
in
loopne
in
jge
movsl
stc
fimuls
insl
pop
or
aam
xchg
inc
cli
inc
inc
movsl
in
fwait
pop
xchg
cwtl
rcrl
out
stos
mov
aaa
fstpl
cmp
sbb
jb
dec
mov
xor
lock
push
mov
int
mov
pop
jg
mov
mov
cli
in
js
scas
push
cmc
and
cld
aaa
sbb
mul
dec
push
loope
cmpsl
add
gs
fsubl
mov
mov
jbe
test
in
int
push
pushf
push
out
and
jbe
cmpsl
stc
add
sarb
and
insb
movsl
pop
addr16
shlb
enter
cmp
mov
pop
xchg
in
cs
dec
jg
pop
int
push
addr16
fs
gs
sbbl
ja
out
lcall
cs
hlt
jg
xchg
test
ds
cmp
repnz
xchg
jne
int3
rcrl
or
aam
pop
bound
iret
test
dec
sbb
clc
adc
push
dec
into
into
push
test
xchg
rcl
or
stos
xchg
mov
mov
or
dec
xchg
pop
stos
into
lret
push
cmp
push
sub
fucomi
int3
adc
mov
xor
inc
sbb
outsb
ret
call
xchg
adc
adc
sub
out
inc
mov
pop
sub
rcl
sub
dec
inc
les
cmpsb
jl
daa
sub
jae
sub
or
test
dec
inc
pop
pop
mov
mov
in
xchg
push
in
mov
or
jmp
mov
fcmovb
fwait
dec
cmp
push
pop
mov
popf
mov
xchg
loopne
push
out
and
push
pop
iret
cmpsl
mov
lahf
jg
scas
or
adc
adc
pop
xchg
inc
or
cltd
push
mov
pop
hlt
mov
mov
not
cld
or
leave
mov
test
out
jmp
fbstp
pop
jecxz
push
movsb
sbb
add
lods
jnp
lea
fadds
push
and
ja
cltd
or
add
jbe
and
jno
push
jns
into
pop
gs
scas
ret
out
mov
sub
mov
jl
pop
movsl
subb
cli
sbb
test
fwait
es
fidivrl
cmp
and
sbb
mov
sbb
cmp
sub
sub
daa
xchg
push
adc
enter
dec
cli
jo
test
scas
jmp
mov
lret
fstpl
sub
inc
dec
or
aaa
jge
xchg
xchg
jle
bound
jl
mov
in
or
fistps
into
sub
pop
iret
cwtl
pusha
icebp
out
jl
xchg
rol
dec
cmp
mov
push
out
jmp
mov
popa
into
and
xchg
push
cmpsl
adc
dec
addb
iret
inc
lcall
push
enter
inc
hlt
xchg
xor
pop
sti
mov
pop
cmp
cli
adc
in
imul
js
pop
or
pop
jns
lock
ret
fnsave
cmp
sub
hlt
shl
cmp
jle
push
dec
lahf
leave
sarb
int3
into
ret
xlat
xchg
xchg
imul
addr16
cmp
sbb
inc
mov
xchg
pop
scas
xor
divb
push
xchg
sub
dec
jecxz
imul
movsl
push
jmp
arpl
icebp
shrl
cs
lods
aam
sbb
pop
push
lahf
and
inc
dec
mov
dec
sbb
dec
clc
addr16
cs
cmc
int3
cmp
jp
add
fnsave
jg
and
pop
iret
gs
xchg
push
inc
push
push
pusha
and
inc
mov
push
mov
stos
pop
sub
and
inc
into
mov
sub
loop
adc
inc
pop
jle
inc
lret
xor
scas
bound
push
inc
rcl
add
push
push
pop
int3
ds
mov
xchg
loopne
pushf
cltd
dec
mov
jne
cmp
lret
cmp
popf
and
mov
or
cmc
push
lret
push
cmpsl
lods
mov
leave
std
or
test
in
cmp
add
xchg
or
inc
xchg
sub
push
cmp
xchg
dec
cmp
xchg
test
rcrb
xchg
ret
enter
loopne
stc
int3
ss
aas
jnp
scas
sub
mov
mov
mov
out
idivl
jle
xlat
inc
push
xchg
push
ljmp
add
insl
scas
adc
test
faddp
push
xchg
or
inc
test
andb
rcl
stc
sub
inc
xor
lds
xchg
ljmp
xlat
add
mov
dec
adc
pop
adc
scas
add
pop
jae
sbb
mov
add
xor
xor
pop
jl
lcall
in
movsb
clc
add
notb
ljmp
out
sbbb
std
push
outsl
jmp
test
fs
cltd
into
jl
pop
das
sbb
jecxz
out
sub
jb
inc
mov
mov
dec
lock
jnp
leave
sub
shll
dec
push
jbe
push
outsb
in
mov
sti
fistpll
or
cmc
jl
inc
cmp
sbb
jp
ss
push
add
and
imul
jle
int3
xchg
jne
cmp
xchg
pop
movsl
leave
sub
mov
cmp
or
in
jmp
int
xchg
xchg
pop
stc
lret
mov
adc
movsl
jae
push
pop
cmp
xchg
cmpsl
jb
jl
lret
or
shrl
adc
aad
pusha
mov
sbb
std
daa
inc
push
xlat
arpl
sub
lcall
xorb
push
aas
jg
ficoml
and
and
test
sbb
xor
dec
negb
jg
scas
shlb
cmp
es
dec
jne
push
aaa
lret
dec
or
enter
xchg
fcmovu
test
and
push
push
push
adc
pop
int3
push
dec
inc
enter
or
xor
vminps
sbb
push
pop
push
arpl
std
pop
sbb
es
mov
push
out
sub
stos
sub
dec
dec
add
je
loop
movsb
add
insl
in
test
mov
les
adc
loop
adc
loope
out
adc
cs
push
inc
cmp
aaa
xchg
mov
repnz
lret
ret
loop
ror
inc
cmpsb
mov
or
mov
add
ja
or
ja
sbb
xchg
dec
push
sbb
dec
sub
mov
inc
lcall
movsb
push
arpl
test
and
cmp
aas
out
inc
loop
jno
stos
leave
sub
std
das
fwait
aaa
xor
icebp
push
jne
push
jecxz
int3
lret
jns
sub
dec
mov
fs
mov
sub
test
jmp
jno
arpl
nop
jmp
pop
cmc
int
dec
push
jle
pop
mov
xor
pushf
leave
scas
xchg
mov
outsl
imul
fisubl
sub
jbe
stc
adc
ds
inc
sbb
push
mov
mov
inc
imul
mov
lock
adc
test
inc
imul
repz
in
push
mov
mull
dec
ljmp
jno
loopne
iret
adc
push
mov
pop
mov
jge
jae
out
bound
mov
iret
fucompp
fwait
popa
call
cmc
sbb
and
in
sti
pop
shll
stos
lods
into
repnz
dec
mov
nop
mov
or
les
xchg
pop
dec
dec
push
dec
and
popf
mov
repnz
jae
in
fcoml
push
insl
pushf
scas
inc
clc
sbb
mov
xchg
mov
sbb
jg
mov
add
or
pusha
scas
jmp
or
cmpsl
mov
sub
and
stos
gs
movb
jns
dec
jb
fnstcw
jbe
add
repz
in
or
xchg
outsb
and
insl
jle
mov
popf
dec
sub
dec
ret
push
cmpsb
arpl
cmc
dec
mov
movsl
scas
out
outsl
sub
lret
lods
mov
and
push
in
mov
cmc
mov
xchg
inc
scas
cmpsl
mov
nop
xlat
adc
push
lahf
push
inc
icebp
movsl
sahf
xchg
mov
shl
movsl
or
cmc
sbbl
das
and
aaa
mov
scas
inc
repnz
mov
int
cli
lret
in
fidivs
xor
leave
pop
test
fwait
xsaveopt
imul
je
push
sbb
aaa
rolb
cmp
push
or
sahf
push
fnstsw
pop
jb
jmp
jno
and
mov
lcall
lods
fwait
nop
or
jnp
daa
mov
les
push
mov
jb
nop
leave
mov
adc
pop
ret
je
in
xor
push
add
leave
sti
mov
sub
sarb
mov
xchg
into
xor
xchg
aam
mov
push
loope
shrb
rolb
jmp
sbb
lret
mov
inc
adc
xchg
lcall
insl
pushf
ja
or
inc
or
mov
mov
jo
int3
cld
xchg
pop
repnz
xor
xchg
add
mov
sub
sbb
aam
dec
push
rcrb
pop
test
push
pop
mov
stc
insl
xor
fdivrs
cmpsl
data16
test
mov
push
call
sbb
fnstcw
pushf
in
sbb
ds
mov
xor
push
pop
lods
mov
cmc
lods
addr16
aaa
imul
data16
aas
out
lret
shlb
addr16
add
and
andl
fsubs
into
pop
loop
std
fiadds
add
aam
popa
repz
arpl
pop
adc
add
push
mov
rcr
xchg
enter
xlat
pop
into
in
push
jnp
cld
fnstcw
lods
xor
push
jecxz
testl
shlb
shll
stos
xchg
mov
int3
mov
fnstenv
xchg
jns
mov
aaa
lods
in
outsb
mov
mov
push
rcrb
sbb
dec
push
or
in
jae
add
and
dec
cwtl
push
scas
insb
fs
and
out
cmp
inc
xor
ficoml
stos
into
pop
aas
mov
add
jno
sub
fwait
dec
and
jbe
xor
lock
sbb
mov
in
pushf
imul
clc
ret
fwait
dec
push
lds
mov
pusha
jb
out
icebp
mov
lret
and
leave
fldln2
mov
fs
inc
xchg
dec
push
cmp
test
mov
jne
xor
sub
stos
or
xchg
fdivs
cli
pop
insl
call
enter
and
inc
movsb
fmull
les
cmpsl
dec
cli
outsl
test
test
xchg
mov
mov
push
int
ja
mov
notb
lret
dec
lahf
mov
jmp
test
out
mov
pandn
ss
je
out
rolb
pop
das
lds
dec
adc
jo
ds
or
sti
aaa
add
imul
jb
sbb
sbb
aad
dec
or
in
lret
out
pop
cmp
pop
mov
mov
inc
shlb
cwtl
lret
inc
aaa
or
into
ret
sbb
xor
push
out
add
push
jae
test
adc
push
jbe
jle
lea
cld
out
leave
mov
mov
jb
jbe
lahf
mov
into
int
lret
push
xor
sub
cmp
push
dec
dec
loopne
leave
dec
fcom
push
xor
adc
nop
adc
lea
pushl
in
fs
push
test
mov
in
out
and
mov
hlt
arpl
popf
es
and
aas
dec
push
and
insb
lret
push
mov
xlat
in
dec
pop
jo
jp
negb
cmp
cmp
cmpl
inc
ret
mov
nop
mov
jle
dec
daa
mov
ljmp
jp
push
or
lods
repnz
xchg
ja
or
out
mov
rorb
xor
push
loope
push
lock
stos
cmp
test
push
shlb
loop
sahf
inc
imul
jno
and
add
jmp
test
into
iret
mov
xchg
mov
mov
ja
movsb
into
roll
and
test
inc
in
push
inc
sub
ja
add
xchg
adc
mov
lods
das
pop
inc
pop
push
mov
push
inc
jg
lret
loop
and
and
iret
add
inc
mov
shll
lret
jle
adc
push
mov
xor
dec
gs
dec
adc
jmp
add
les
pop
repz
rcl
imul
rcl
xor
sahf
mov
push
out
mov
adc
arpl
pop
call
xchg
sub
shll
jge
nop
or
clc
dec
add
mov
cwtl
xor
popf
lret
mov
jno
int
negb
sbbl
test
into
xor
lock
mov
adc
cltd
and
int3
popa
jno
or
adc
rclb
test
push
jp
mov
outsb
test
push
xchg
pop
dec
sbb
jnp
mov
popa
xchg
push
js
push
arpl
jmp
mov
rcl
or
std
xchg
loopne
mov
mov
ret
pop
jns
iret
out
clc
cmp
mov
and
rcrl
addr16
aaa
push
cwtl
stc
data16
dec
fiadds
mov
inc
xor
repz
mov
into
xor
adc
cmpsb
jo
push
jnp
cmp
and
mov
xor
mov
inc
in
mov
lods
cld
fsubp
out
shrl
rclb
lret
test
jb
sarl
int3
mov
ret
sar
fsubs
out
lods
push
xchg
mov
loopne
dec
mov
lods
inc
gs
sub
cmp
add
test
xor
inc
jb
cmp
jnp
lds
fisttps
cmp
sbb
je
call
mov
cmp
mov
or
orl
dec
adc
lahf
cli
mov
das
adc
je
iret
mov
nop
dec
cs
adc
cmp
cmpsb
imul
std
test
xchg
add
push
scas
test
dec
fwait
dec
mov
pop
mov
scas
lods
jnp
incl
lret
cmp
aaa
add
mov
sbb
lea
mov
xor
into
jbe
icebp
mov
std
fisubrl
dec
fstps
mov
and
push
mov
int3
push
sbb
divb
mov
xor
mov
lea
dec
test
or
in
ja
loopne
mov
add
and
and
push
nop
pop
inc
sub
mov
fstpt
rorl
mov
sbb
push
out
cli
in
push
push
enter
cmp
subb
lods
mov
cld
lea
int3
es
mov
repnz
pop
mov
jae
pushf
xor
outsb
adc
pop
adc
jg
push
cld
jmp
pop
sbb
aaa
mov
jle
add
sub
out
mov
mov
mov
push
dec
xor
es
aaa
cwtl
pushf
sti
iret
sub
in
out
xchg
out
cmpsb
cmpsl
mov
xchg
test
sub
adcl
dec
outsl
sbb
xorl
fcomp
add
ret
decl
cmc
cmp
dec
movb
add
jecxz
aaa
jae
into
push
cwtl
pusha
out
fimuls
mov
mov
jmp
movsl
mov
pop
dec
mov
testl
push
ja
xchg
mov
mov
dec
in
mov
jmp
fidivrl
pop
mov
bswap
xchg
stos
mov
dec
push
dec
inc
rcrl
pop
popa
push
sbbl
insb
divb
call
loop
dec
lea
ret
push
pop
xchg
jnp
incb
cmc
sti
cmp
mov
dec
inc
jb
sub
clc
dec
bound
mov
addl
mov
daa
adc
movb
pop
sub
xlat
mov
push
push
or
cmpsl
jle
loope
call
stos
mov
lods
adc
shrl
mov
test
or
hlt
xchg
jmp
push
cmp
pop
jecxz
test
sub
jg
push
mov
sahf
and
mov
ss
lret
scas
ds
dec
xor
jecxz
popf
iret
out
ret
fdivrp
add
dec
shlb
jnp
out
sub
cltd
push
inc
cmp
repz
jl
test
imul
jmp
xlat
dec
roll
lcall
insb
jo
daa
or
dec
inc
lret
test
jne
movsl
sbb
inc
hlt
sbb
pop
adc
jg
jl
push
sub
pushf
bound
cld
icebp
xchg
xor
mov
dec
xchg
dec
jmp
mov
loop
int3
ja
push
xor
push
in
ret
lock
sbb
inc
mov
push
cmc
xor
mov
call
push
xor
stos
test
xor
iret
add
jne
es
fisttpll
hlt
enter
cwtl
mov
pushf
lret
stos
adc
insl
xchg
jle
sbb
and
mov
ja
push
mov
mov
cmp
daa
sub
add
adc
loop
xchg
xlat
pop
and
mov
arpl
adc
mov
lods
xchg
mov
fcom
rcrl
mov
into
jg
or
bound
scas
repz
sahf
push
pop
sub
in
or
mov
cmp
aas
jae
add
dec
cmpsl
jecxz
add
dec
push
stos
cli
pop
imul
jecxz
mov
cmc
outsb
inc
mov
test
imul
cmp
aaa
push
sub
dec
pop
frstor
mov
jnp
out
pop
add
das
in
test
leave
in
fcmovbe
xor
mov
outsl
je
adc
mov
push
cmp
inc
inc
int3
adc
nop
out
jecxz
lcall
dec
jbe
int3
sbb
inc
repnz
jmp
das
dec
cmpsl
mov
xor
xchg
fcmovbe
data16
add
cmpsb
jns
and
jb
jp
xor
daa
mov
std
jne
xchg
xchg
xlat
aad
push
xchg
mov
jnp
xor
push
add
pop
leave
mov
or
icebp
push
pushf
dec
lahf
push
jge
insl
dec
inc
aas
test
sbb
fucomip
mov
push
stc
mov
xor
lret
xchg
icebp
dec
or
dec
pop
push
into
push
inc
cmp
ja
lret
push
outsb
push
xchg
cmp
push
jnp
out
inc
leave
movsb
imul
dec
shll
sbb
ret
jge
adc
out
pop
jns
jmp
add
ljmp
add
stos
push
rcrl
xor
cmp
mov
adc
gs
jne
push
insb
mov
loop
ret
lea
jae
addr16
cmp
add
dec
pop
mov
dec
shlb
xchg
outsb
pop
cmc
in
es
loopne
cmpsl
jg
mov
adc
xchg
fldenv
inc
adc
aad
or
out
xchg
addr16
fisttpl
dec
xor
lods
xor
mov
jg
das
rcrb
ljmp
in
lods
xchg
mov
jecxz
sub
fidivrs
movsl
cmp
sub
shrl
adc
pusha
popa
add
jg
mov
xchg
js
stos
xchg
sti
ret
mov
xor
xchg
push
cmpsl
test
inc
test
mov
jbe
arpl
or
loop
inc
popf
xchg
loopne
sbb
pop
std
cmp
add
mov
adc
cmp
fsts
cmp
mov
pop
les
cltd
pop
sbb
lcall
lods
cmp
lret
add
pause
cwtl
cltd
into
adc
sbb
xchg
lret
fcmovb
push
push
bound
std
jp
adc
push
sbb
and
xor
mov
jecxz
fs
xchg
push
xlat
push
outsl
aaa
testb
adc
fidivl
or
mov
repnz
xchg
outsb
loope
pop
xor
test
stos
insb
and
repz
aaa
and
lea
xor
iret
add
lret
mov
leave
iret
ss
out
jg
cmp
fimuls
aam
hlt
repnz
outsl
mov
je
mov
rolb
push
lds
in
add
jnp
mov
inc
into
xchg
movsb
loope
dec
pop
fcoms
sbb
in
imul
jle
jbe
ss
jp
into
pop
dec
inc
xor
mov
jg
jge
sub
ret
push
dec
lret
and
sbb
mov
inc
pushl
mov
cmpsb
into
cs
mov
adc
or
gs
ja
lock
sarl
pop
sbb
xchg
sbb
rol
nop
aad
inc
jo
fistpl
stos
xchg
lret
adc
mov
fisubrs
jne
fcomps
rcrb
inc
xlat
sbb
xchg
and
dec
cmpsb
sbb
jmp
shll
ds
popf
pop
mov
pop
ss
xchg
iret
pop
out
cmpsb
sti
push
inc
test
icebp
sahf
mov
cld
inc
lret
enter
xchg
sub
fwait
jmp
xor
pop
popf
and
cmp
fists
repnz
shrl
dec
adc
cld
mov
popa
sub
ds
inc
pop
dec
sub
push
out
and
xor
add
scas
into
orb
pop
daa
into
mov
movsb
loop
xchg
xor
xchg
sbb
mov
sub
lret
push
cld
test
out
outsb
adc
push
lret
in
into
icebp
pop
jns
inc
gs
xchg
jnp
popf
xor
imulb
imul
and
xor
test
mov
test
or
ret
mov
push
sbb
out
jo
sbb
in
and
push
push
mov
sub
fisttps
insb
neg
mov
mov
dec
out
and
jno
scas
stc
and
out
push
xchg
jle
jne
ljmp
push
cld
cmp
lret
jne
dec
push
xchg
sahf
cmp
xchg
pop
pop
repz
and
and
jp
int
jae
add
lock
mov
ja
and
add
rcll
adc
jmp
fnstcw
dec
out
ja
push
push
mov
mov
out
dec
in
push
or
adc
pop
aam
mov
call
loop
mov
mov
mov
and
dec
lret
cmpsl
fadds
push
cmp
xchg
push
jae
call
mov
fcmovbe
and
shlb
push
sbb
jnp
sub
addr16
call
or
shlb
into
pop
xchg
lcall
pop
add
push
mov
sub
test
dec
nop
shl
cmpsb
data16
rcll
lock
pop
addr16
adc
ret
sbb
jo
stc
jp
pop
mov
imul
in
rcl
dec
sub
leave
adc
pop
insb
dec
outsb
fsubr
test
fstl
push
adc
arpl
fsubrl
push
xchg
ret
insl
outsl
xchg
loop
jbe
fisttpl
pusha
repz
or
sub
popa
push
pop
push
out
jne
xor
sar
arpl
insl
adc
mov
xlat
mull
jbe
gs
mov
xchg
mov
adc
lods
scas
jl
std
sub
xchg
je
test
push
fdivrs
in
out
repnz
insb
iret
mov
add
in
jae
loop
mov
xchg
cmp
in
scas
push
loope
pop
cli
leave
enter
jg
or
xor
out
xchg
push
into
fnstcw
mov
adc
std
mov
lock
stos
or
andb
or
pop
and
push
xchg
xchg
xchg
jbe
js
inc
rcrb
shlb
xor
cmp
fldcw
stc
movsl
mov
movsb
loopnew
incb
adc
inc
rcl
or
push
jmp
iret
push
push
int
int
mov
nop
cltd
das
push
fdivrp
in
sbb
jae
inc
jp
xchg
adc
mov
mov
sub
jge
push
dec
sub
or
sbb
ja
popf
or
nop
push
shll
je
and
test
js
sub
ret
mov
es
icebp
pop
movsl
cli
xor
outsl
negb
adc
cmp
mov
xchg
scas
and
les
and
fwait
mov
adc
pusha
dec
mov
adc
loop
testb
sub
and
cmp
mov
inc
fildl
sbb
dec
call
jl
aaa
jno
popa
jmp
xchg
jg
or
sbb
sbb
cltd
aam
hlt
sub
ret
mov
shrb
dec
xchg
xchg
pusha
adc
cmp
ljmp
dec
cmp
mov
mov
mov
rcl
xchg
xchg
add
int
xchg
jmp
bswap
sti
mov
or
sbb
stos
fistl
cmp
and
xor
add
cmc
dec
pusha
mov
adc
lock
sbb
cwtl
ret
rorl
into
sbbl
je
push
add
lods
cmp
jo
push
jecxz
inc
lea
shr
leave
adc
xchg
je
into
xchg
push
push
pushf
mov
rcl
outsb
xor
inc
out
push
push
sbb
test
xchg
fcmovnb
cmp
or
jnp
cwtl
adc
mov
and
flds
mov
or
sahf
cmp
loop
mov
movsb
ror
cli
pop
dec
mov
daa
stos
aaa
jb
out
fdivs
dec
pop
xor
inc
adc
js
cmp
dec
push
hlt
mov
out
mov
inc
cmp
gs
mov
ret
xor
xlat
scas
mov
adc
pop
xchg
push
adc
jg
adc
xchg
sbb
pop
sub
xor
push
subl
std
inc
and
sub
adc
jge
out
inc
pop
adc
rcrb
cvtps2pi
call
jbe
cltd
lds
pop
adc
dec
aas
mov
std
sbb
test
sti
lret
es
negl
sub
xchg
stos
lret
add
imul
bound
mov
mov
pusha
fwait
mov
aad
je
cmp
ss
int3
add
xchg
mov
xchg
push
adc
sar
adc
lods
sub
xor
mov
sarb
rcl
push
fcmovnbe
dec
in
stc
daa
in
pop
out
and
lock
push
add
shlb
and
push
pop
add
mov
out
shlb
ja
cltd
ficomps
daa
push
in
int3
jp
jb
loope
stc
scas
mov
insb
push
cmp
out
stos
test
fs
inc
mov
adc
jnp
rol
jb
sub
dec
ror
jbe
xchg
mov
dec
adc
in
mov
or
add
pop
pushf
cmc
inc
pop
mull
inc
movsb
mov
outsb
sbb
ss
imul
shl
enter
aas
in
orb
inc
xor
arpl
xchg
or
mov
pop
adc
inc
fwait
or
push
and
inc
xor
rcr
sub
fcomi
cmp
movsl
and
pop
mov
xchg
fwait
sahf
sub
int3
out
xor
rclb
lahf
jmp
lret
cwtl
dec
mov
jle
out
call
loope
fnstenv
sub
fmull
loope
sbb
int3
mov
lods
data16
movb
lret
movsb
push
push
lret
sub
add
push
cmpsb
into
scas
and
ljmp
push
outsb
rcl
ret
pop
popf
iret
or
jmp
inc
xchg
addb
mov
test
fldt
and
cs
into
leave
dec
inc
push
mov
dec
add
adc
test
pop
xor
or
jo
flds
xor
mov
pop
test
dec
cmp
lods
and
dec
or
out
int
adc
mov
fmuls
mov
decb
lahf
inc
jmp
ficompl
imul
sub
ja
jae
stc
lds
xor
fcmovnu
mov
cmp
lcall
pop
std
sub
jp
outsb
addl
push
daa
cmp
mov
push
lret
aas
xchg
add
xchg
mov
push
sbb
or
lret
je
aaa
imul
repz
xchg
or
adc
nop
jmp
sbb
dec
sti
jne
ljmp
xor
lahf
xlat
mov
negb
lret
adc
ja
cmp
loope
out
popa
jp
dec
push
fisubs
stc
mov
mov
mov
icebp
inc
bound
rcll
int
aas
cmp
and
std
stc
repnz
ss
test
add
in
mov
cmp
or
xchg
sbb
mov
adc
outsb
sub
lahf
cld
sbb
sub
xchg
scas
mov
sti
xor
enter
imul
int3
std
mov
jge
push
push
jp
imul
fstpt
lret
dec
push
fsubrl
lock
mov
adc
les
rcrb
outsl
test
lret
fsubp
sbb
out
jl
in
push
jns
rorl
repnz
int
xor
gs
adc
inc
jp
movsb
hlt
or
dec
mov
adc
dec
fs
and
mov
subl
add
mov
jne
sbb
movsb
cmp
into
adc
push
repnz
xor
daa
jg
enter
ss
test
loop
insb
jmp
outsl
leave
dec
pop
push
pop
push
call
movl
popa
out
pop
xor
iret
cmp
pop
adc
pop
cmp
mov
clc
hlt
inc
cmp
mov
cltd
repz
and
mov
popa
jb
jo
fisttps
mov
xchg
push
jp
and
sbb
jne
add
sub
ret
sbb
lret
rcl
push
jo
pop
cmc
ret
mov
pop
frstor
int
arpl
push
movb
repnz
into
sub
cmp
add
repz
in
rcrb
fstpl
fcoms
jno
cmp
lea
sub
jne
dec
js
aam
xchg
pop
sub
mov
aam
dec
cmpsb
addr16
mov
leave
push
lret
ret
repnz
pop
nop
xlat
popa
pop
hlt
xor
mov
lret
and
addb
cli
popf
not
fsubrs
cltd
pop
hlt
jno
fisubs
dec
mov
test
out
add
lret
out
arpl
jecxz
dec
push
pop
adc
dec
jo
mov
push
addr16
jle
pop
int
imul
adc
movsl
gs
xor
push
xor
or
inc
sub
js
aad
or
push
popa
add
ds
divl
pushf
adc
xchg
push
lret
inc
es
repz
xchg
and
and
inc
movsb
adc
mov
push
adc
inc
pop
dec
ror
mov
xchg
incb
test
in
test
mov
and
iret
xchg
ret
scas
adc
movsb
pop
or
sti
aaa
call
and
stc
push
lods
mov
loopne
mov
mov
xchg
or
aad
sbbb
mov
mov
cli
jl
lods
sub
or
scas
jmp
mov
pop
shl
cmp
push
into
shrd
ds
inc
xor
jmp
sbb
xchg
insl
andb
or
and
cmc
xchg
movsl
mov
mov
mov
xchg
pop
xchg
dec
push
pop
add
jo
aaa
fbld
mov
fnsave
inc
sbb
iret
mov
inc
fisttps
pop
out
ss
jb
jge
sub
pop
or
push
pop
lret
mov
add
sbb
cmc
fwait
aaa
or
mov
arpl
test
jae
jne
ficoml
lods
or
andb
mov
lods
repz
and
inc
aaa
jb
pop
add
cmpsb
movsb
and
xchg
xchg
leave
cmc
dec
adc
in
inc
je
scas
movsb
loope
frstor
xchg
mov
jmp
pop
jns
aaa
or
leave
nop
sub
push
dec
addr16
xchg
sub
mov
sbb
pop
into
rep
ret
gs
mov
mov
stc
pushf
mov
inc
xor
inc
or
adc
sub
cmp
jecxz
xor
lock
sbb
movsl
cwtl
mov
int3
dec
pop
xor
dec
cmc
or
pop
sbb
xor
adc
aaa
push
cmpsl
mov
int3
dec
pop
shlb
xchg
ljmp
rorb
inc
xchg
mov
add
les
pushf
inc
sti
ss
mov
mov
cmp
imul
xor
loopne
test
dec
rclb
in
pushl
sub
rclb
or
lret
cmp
and
lcall
adc
sbb
data16
movb
jbe
mov
add
sarl
and
push
mov
loope
sub
pop
jnp
pop
push
enter
xor
adc
cmp
add
dec
popa
nop
jns
subb
adc
sub
mov
jae
or
jecxz
mov
sub
lock
sarb
add
jp
xlat
xchg
repnz
out
into
fmuls
lods
add
fldt
xchg
sub
fisubl
mov
cmp
sbb
out
cmpb
adc
clc
or
sbb
jno
repnz
inc
dec
pop
lods
fcomps
movsl
jle
jbe
adc
push
dec
ret
xchg
loop
into
jecxz
pop
cmp
jb
and
dec
nopl
in
and
sbb
sahf
inc
ja
mov
jp
push
out
fisubrl
or
push
mov
loopne
int
dec
jecxz
push
pushf
inc
fsubs
stos
mov
into
cmc
cmpsl
imul
std
iret
sub
insl
xor
push
mov
xchg
or
dec
jnp
xchg
jecxz
imul
mov
sub
xchg
rclb
add
jne
lods
xchg
cs
xor
pop
mov
out
or
ds
pop
adc
into
adc
cltd
pop
or
adc
movsb
movsl
loope
mov
int3
mov
sub
cmp
sbb
fiaddl
cmc
jo
mov
cs
cli
mov
cmp
rcrb
data16
lahf
jg
mov
orl
xor
and
das
cld
mov
fistpl
dec
adc
test
add
push
sti
and
lods
xor
dec
pop
out
imul
adc
xlat
int3
outsb
ja
stos
mov
pusha
outsl
movb
popa
jp
lret
aam
mov
sub
mov
xchg
xor
insb
xor
add
fiaddl
jb
or
and
mov
enter
and
adc
or
inc
and
pushf
pusha
imul
mov
lsl
stc
pop
xchg
cmp
adc
cs
dec
mov
xor
sahf
pop
rcrl
mov
cmpsl
pop
in
in
dec
jbe
sbb
rclb
push
mov
in
jne
enter
icebp
popf
into
jl
xor
dec
sbb
cmp
inc
data16
lcall
fs
adc
push
test
inc
dec
push
in
jp
addb
xchg
adc
mov
movsb
rolb
into
xchg
mov
aam
add
sub
ds
jbe
mov
push
xchg
lods
dec
inc
pop
lret
es
std
lock
pushf
stos
push
mov
pop
sbb
jl
mov
lret
cltd
outsl
out
dec
pop
lcall
ss
popf
fildl
dec
ficoml
push
fdivrs
lods
mov
dec
sub
imul
lahf
xchg
push
dec
inc
jle
mov
inc
dec
adc
nop
xchg
ret
aas
inc
adc
or
scas
in
dec
xchg
stos
xchg
dec
jbe
push
push
xchg
insb
rorl
fimuls
sbb
leave
dec
mov
pop
adc
or
sbbl
fnstenv
int
jnp
rorb
or
movb
xchg
or
incb
cmp
mov
jno
out
cmpsl
sbb
aam
jns
lods
das
jb
leave
and
fstpt
mov
int
sbb
adc
xchg
test
mov
int3
adc
fisttps
sub
push
lds
stos
lods
iret
dec
loopw
aas
xchg
dec
pop
xchg
test
movsb
pop
mov
ficoml
pop
pop
or
sub
sub
daa
adc
int3
push
in
stos
mov
dec
imul
xor
mov
cmp
xchg
sub
out
scas
lds
aad
push
mov
jbe
fcompl
cmpsl
in
nop
lret
loopne
mov
push
xor
xor
xchg
test
out
ret
mov
fldt
lret
ret
jmp
in
cltd
lods
lea
mov
cmpsb
xchg
mov
push
daa
lcall
into
test
jle
in
imul
stos
cld
lods
mov
and
mov
pusha
adc
cmpsl
push
pushf
ljmp
sub
test
sbb
cmpsb
pusha
test
cmpsl
inc
lock
roll
mov
or
test
std
xor
sub
mov
dec
push
inc
pop
mov
mov
gs
loop
push
inc
out
sub
aad
xor
jne
jbe
fwait
movsb
fcmovnbe
fists
nop
test
dec
add
push
aaa
shll
int3
xchg
push
mov
push
iret
mov
or
test
inc
shrb
lret
scas
call
push
xchg
or
pusha
pop
cmp
jnp
fwait
mov
fs
fcmovb
sbb
dec
mulb
xor
or
in
rclb
dec
bound
lea
jle
mov
ror
fs
stc
jp
lock
xchg
jge
inc
and
int
and
arpl
pop
out
mov
sbb
xchg
test
mov
into
js
rcl
dec
adcb
pop
outsb
and
xchg
jo
fmull
icebp
mov
jp
stos
push
orl
cld
sbb
lret
adc
push
mov
xchg
hlt
aam
xchg
aam
xor
sbb
pop
or
xor
cld
jo
test
dec
pusha
repnz
jle
sub
lcall
push
sbb
mov
aas
fwait
inc
mov
imul
testb
repz
loop
inc
dec
jle
jns
sbb
xchg
mov
outsl
cld
push
test
inc
mov
stc
shll
rol
push
jne
mov
into
std
add
imul
popa
xchg
neg
inc
push
loope
out
outsb
dec
mov
out
xorl
pop
adc
lret
cmpsl
outsb
ret
aas
mov
xor
mov
cmp
stc
mov
imul
mov
addr16
and
or
cwtl
add
out
test
sahf
xor
push
into
and
ret
rolb
mov
sbb
pop
inc
aam
lds
in
iret
push
cmpsl
ret
fcmovbe
cmp
sbbb
std
dec
mov
adc
or
fnsave
arpl
push
pop
insb
sub
int3
es
int
dec
sbb
jno
loop
orl
hlt
xchg
push
iret
pop
dec
dec
cltd
imul
cmpsl
ret
loopne
gs
outsb
push
mov
popa
mov
push
mov
inc
add
push
fwait
dec
orb
inc
in
out
xchg
daa
jge
outsb
mov
repnz
cmpsl
ljmp
into
mov
popf
adc
jmp
stc
or
es
mov
sbb
lret
std
mov
pop
into
stos
cmp
addr16
or
mov
movsb
mov
sub
xor
not
test
add
xor
push
bound
ret
sti
pusha
dec
xlat
dec
xor
decb
cmp
nop
and
inc
adc
mov
inc
cli
rorl
or
rcrl
daa
pop
jbe
mov
push
lret
insl
dec
shlb
imul
cmp
and
ss
and
into
sarb
in
hlt
and
dec
and
cs
pop
jge
daa
xchg
push
xchg
ss
dec
xor
scas
lret
xor
mov
pop
push
rcll
xchg
cmp
cmpsl
lret
xor
push
cmc
movsl
ja
inc
add
cmp
lea
sbb
popa
mov
fcomps
and
push
movsl
mov
pop
out
or
jp
sub
add
cmp
and
mov
test
stos
and
push
inc
ds
das
popa
icebp
lcall
sub
jle
jne
push
xor
jge
lods
fdivl
dec
mov
rcrb
jae
cld
cwtl
lods
xor
pushf
loopne
jns
xor
inc
stc
es
into
cmp
inc
enter
adc
das
adc
add
inc
lahf
mov
or
pop
aaa
clc
rcl
dec
in
adc
pushf
xchg
scas
call
mov
mov
and
jecxz
push
add
popf
cmp
ja
fsts
jmp
insl
mov
into
movb
sbb
or
sbb
cmc
lret
add
push
or
mov
fisubrs
rcl
outsb
lea
lods
pop
ds
fwait
jb
mov
out
out
dec
arpl
repz
jns
out
or
enter
lcall
rolb
mov
ret
je
loop
test
adc
arpl
cmp
add
and
jp
mov
cli
push
inc
out
sub
je
in
sbb
inc
imul
push
mov
test
xchg
jg
add
movb
int3
mov
test
popf
mov
dec
out
out
scas
cmpsb
insl
jno
lret
jbe
mov
push
adc
mov
cs
popf
sarb
ret
int3
test
in
xchg
test
cmp
stos
adc
je
enter
imul
sub
push
push
aas
ljmp
adc
jbe
testb
add
mov
lahf
repz
repnz
cmpsl
xor
pop
aam
jnp
sub
and
aaa
nop
mov
push
sahf
xor
pop
fidivs
test
jo
popa
pop
mov
cmc
push
fisubl
pop
sub
fwait
sub
mov
inc
idiv
push
jb
xchg
inc
xchg
shr
pop
mov
adc
and
jns
outsb
jg
jnp
xlat
stos
pop
mov
dec
out
xor
scas
adc
popl
jo
or
inc
jbe
jle
pop
cmp
lods
or
icebp
adc
fadds
aad
scas
sbb
pop
leave
in
nop
mov
mov
cmp
inc
mov
adc
ss
pop
int3
lods
adc
ret
lea
in
repz
dec
mov
jns
lds
and
int
lret
jp
cli
push
pop
jbe
mov
xchg
or
lret
mov
aad
out
insb
ret
sti
sbb
pop
addr16
test
jnp
mov
cld
dec
or
dec
repz
xor
movb
dec
iret
or
fstl
ror
cmp
icebp
es
mov
add
mov
stos
clc
jne
movsb
out
sbb
xor
fcom
xor
jne
dec
push
add
mov
mov
repz
push
push
mov
je
inc
hlt
out
xor
xchg
icebp
mov
int3
mov
push
mov
lea
loop,pt
dec
aaa
pop
mov
lret
shll
out
sbb
out
cltd
lods
mov
jmp
mov
out
inc
mov
daa
cmp
jecxz
cwtl
in
lods
dec
dec
ja
pop
inc
push
cli
xchg
mov
aad
gs
sti
adc
inc
lcall
push
jp
ror
jno
lret
in
sbb
sarb
hlt
pop
push
mov
jmp
jb
sbb
sbb
imul
fnstsw
or
lods
adc
mov
jne
push
ja
rcll
loope
and
roll
xchg
jno
and
es
jns
cmp
add
dec
clc
push
test
sub
lret
fucomip
std
jae
icebp
fwait
lahf
adc
jp
repz
mov
xor
int3
xor
jo
and
mov
loope
mulb
pop
movb
dec
sti
sub
sub
push
sub
jg
jecxz
mov
lahf
adc
lret
mov
or
mov
push
push
dec
nop
inc
jl
cmp
es
xor
ja
mov
stos
fnsave
mov
mov
sahf
add
pop
mov
cmp
or
dec
lret
not
mov
xchg
lahf
xchg
xor
ss
dec
ret
push
mov
xchg
xchg
dec
cs
inc
imul
arpl
mov
add
push
sub
fldt
or
add
test
ja
pop
into
enter
mov
mov
adc
scas
loopne
scas
pop
adc
les
or
stos
push
movsb
mov
scas
imul
es
out
and
sub
fldl
xchg
popa
xlat
push
pop
into
add
xchg
and
outsl
inc
or
xchg
push
mov
fsubl
xor
lods
scas
addb
movb
std
lret
lea
mov
test
cmpsb
pop
xor
push
jmp
dec
cld
jbe
mov
xchg
jp
or
mov
jg
sbb
mov
xchg
std
add
cld
jae
mov
popa
lea
pop
pop
pop
les
arpl
mov
inc
sub
les
rorl
fwait
mov
pop
fistpll
stos
sub
imul
pop
call
xor
shrl
stos
jle
and
clc
pop
push
call
shll
pop
inc
sub
xchg
aas
sub
scas
in
std
cmp
ja
movl
mov
mov
cltd
mov
test
popf
inc
stos
cmp
out
loop
add
cltd
aam
xor
dec
lock
inc
jmp
adc
push
mov
or
ss
mov
movsb
fisttpll
inc
sbb
gs
xchg
push
iret
adc
mov
xchg
ljmp
movsl
jp
fwait
mov
dec
dec
flds
test
mov
pop
mov
sub
sbb
jmp
aaa
push
sbb
push
jno
jnp
rol
pop
push
stos
cmpsl
pop
jb
sub
inc
cltd
rcr
pop
push
xor
pop
mov
stc
rclb
sub
cmp
out
pop
sahf
mov
jne
test
adc
loop
sub
adc
ja
jae
or
pop
or
mov
lods
sub
pop
outsb
jae
aam
not
xchg
sbb
mov
shrl
ja
mov
mov
popa
inc
test
sbb
sbb
mov
loope
or
sub
and
jns
xchg
cmp
jno
jmp
jb
mov
jecxz
mov
fidivrl
fs
lcall
sub
aam
push
jbe
pop
add
out
ret
inc
loopne
sub
add
decl
roll
call
rorb
ficoms
shll
loopne
cmp
shlb
dec
inc
dec
ja
mov
push
fisttpll
sub
ret
jl
jecxz
ljmp
xor
xchg
or
cld
popl
mov
cmpsb
in
cmp
mov
jge
out
gs
dec
jb
adc
sti
sbb
xlat
pop
xchg
test
inc
xchg
or
push
imul
xor
mov
bound
mov
dec
jb
mov
cmp
jg
in
fsubl
push
push
mov
frndint
cmp
push
push
nop
add
out
sbb
sub
push
loopne
mov
loope
bound
mov
mov
mov
mov
pop
mov
dec
xchg
mov
mov
inc
into
cltd
fsubs
inc
xchg
push
popf
push
mov
pop
mov
pop
subl
xchg
lret
insl
sti
jo
cwtl
mov
fwait
out
mov
fwait
scas
dec
daa
cmpsl
xor
mov
adc
xor
bound
xor
dec
cli
mov
int3
aas
dec
pushf
sub
mov
pusha
xor
cmc
xchg
jae
adc
aad
out
insb
push
inc
mov
push
outsb
popa
jne
inc
pop
mov
fldcw
insl
cmpsb
in
mov
push
push
stos
popf
pop
pusha
cmp
loopne
lret
mov
jmp
cli
xor
std
sbb
mov
push
jne
push
mov
adc
mov
scas
outsb
add
sbb
or
add
mov
shrl
adc
mov
cltd
rcrl
stc
pop
jns
cmovg
je
fcmovbe
inc
ss
inc
cmc
in
insl
es
repnz
inc
xchg
aam
orl
lret
out
cmpsb
mov
cwtl
jge
mov
sub
inc
into
movsl
push
mov
sbb
push
stos
out
mov
clc
push
push
push
lret
and
pop
xchg
sub
rcrl
xchg
and
mov
addr16
cmp
mov
lcall
xor
push
shlb
cmp
in
jle
dec
xorb
fmuls
pop
push
aas
xchg
adc
adc
xchg
rcll
mov
inc
or
xchg
sti
imull
xchg
push
xor
adc
lods
jne
cld
repz
mov
idiv
test
jmp
ds
xor
outsb
movswl
lods
push
out
inc
sarb
ljmp
ss
xchg
arpl
fisttps
in
cmpl
enter
add
into
pop
popa
std
fcom
rclb
negl
push
push
nop
or
dec
out
mov
jmp
sub
jnp
sbb
mov
or
icebp
outsl
cmp
inc
dec
dec
addl
add
sarl
lods
add
jns
dec
cmc
int
fistps
dec
lds
jl
mov
in
fwait
inc
pusha
mov
ja
imull
out
fdivl
mov
dec
cmp
flds
out
je
xchg
popa
push
push
jl
fcmovnbe
icebp
add
into
in
inc
dec
and
jmp
jns
lahf
cmp
imul
gs
xchg
mov
push
stc
test
bound
sub
jns
adc
in
dec
sti
mov
int3
mov
std
xor
dec
jae
jg
outsl
iret
sbb
into
jb
pop
jne
mov
mov
pop
add
inc
or
or
push
insb
sub
mov
addb
loopne
int3
bound
jbe
lds
add
xor
add
into
adc
dec
ja
jne
push
pop
dec
fwait
test
jnp
sub
xor
dec
loop
mov
fdivs
or
xorb
test
pushf
repnz
ja
outsl
or
jle
dec
into
insl
shl
in
pop
out
rorl
dec
das
push
aam
mov
data16
xor
push
popf
dec
xchg
js
incl
sbb
aas
aad
inc
inc
movsb
mov
in
sahf
xlat
lea
mov
xor
pop
xor
push
adc
jo
mov
push
and
addr16
or
lcall
jb
in
jbe
push
sub
jne
lret
in
push
cmp
mov
repnz
sbb
jb
jecxz
jne
adc
xchg
cs
insl
sbb
aas
or
gs
push
mov
xchg
and
rorb
int
sub
lods
fwait
and
das
xchg
dec
movsb
push
mov
subb
mov
nop
ret
jp
sub
popa
xorb
fisubrl
adc
push
xchg
mov
aas
fwait
sahf
icebp
scas
inc
movsl
std
xor
fsubrp
sub
outsb
mov
sbb
jle
lods
mov
mov
enter
ror
pushf
in
loop
aaa
ljmp
jp
xor
call
sbb
ja
out
jle
cmp
lock
fdivs
cltd
loop
xor
ret
jbe
xlat
testl
arpl
dec
or
adc
test
into
cmp
push
mov
rolb
mov
add
loop
sub
mov
lock
xor
enter
popa
pusha
mov
jg
das
int3
xor
jae
fistpll
in
jbe
sahf
in
loop
loopew
jecxz
lret
sarl
xchg
mov
mov
pusha
call
jge
mov
sbb
cmp
out
and
ret
cld
xor
scas
xchg
mov
je
pop
aas
rclb
sub
lret
add
adc
adc
inc
fwait
cs
push
dec
jg
lods
cld
out
push
add
pop
test
rorb
adc
xor
fildll
jbe
iret
nop
lret
jp
sub
out
sarl
push
mov
xor
or
push
push
test
xchg
cmp
lcall
and
shl
xchg
mov
ret
lcall
cmpsl
push
sub
cmp
cwtl
mov
pop
int3
inc
jl
stc
scas
addl
jle
and
cmp
addl
adc
arpl
jp
fstps
adc
add
scas
add
push
stc
daa
jmp
push
mov
fldcw
dec
test
sub
insb
xor
sbbb
roll
sbb
inc
pop
bound
add
or
xchg
xor
fcmovnb
cwtl
push
push
mov
scas
sub
out
add
or
sub
test
loop
stos
inc
inc
dec
mov
sbb
imul
pusha
in
stos
mov
int3
insl
scas
int
les
mov
push
push
fmul
cltd
sub
pop
xchg
mov
mov
scas
imul
cmpsl
out
cmp
pop
xchg
pop
jp
aad
test
rcl
popf
lret
jge
lock
mov
fsubs
mov
sbb
push
rol
xchg
ljmp
call
mov
cwtl
or
sbb
ja
jecxz
add
xchg
mov
add
out
jle
repz
scas
stc
adc
imul
add
js
jecxz
xor
mov
mov
dec
jae
inc
jl
push
outsb
jle
mov
ss
mov
push
mov
ja
add
jge
addr16
pushf
les
jns
jl
jg
sub
fmul
adc
loopne
push
rclb
pop
cwtl
adc
lret
out
inc
ret
insl
jnp
push
movb
stc
rcrl
sub
mov
or
cmpsb
pop
jb
dec
push
xor
lea
out
mov
lods
nop
cmpsl
dec
xor
and
cmpsl
mov
sahf
inc
adc
loop
es
xchg
insl
jge
in
aas
cmc
cmp
cmp
push
mov
pop
ss
cmpsl
push
outsb
sbb
daa
jns
into
mov
mov
jge
mov
inc
rclb
iret
mov
jmp
int
mov
stos
pop
dec
ljmp
xchg
lret
inc
xlat
add
andl
mov
movsb
sub
outsl
inc
sbb
cld
sbb
or
jmp
in
test
dec
mov
pop
int
aas
fnsave
scas
clc
sbb
sti
lcall
pop
add
cmpsb
incb
jmp
inc
mov
out
inc
push
fcomps
jno
rcl
jbe
enter
pop
movsl
aad
outsl
xchg
lds
movsl
inc
mov
mov
ds
or
pop
xor
fidivrs
cwtl
pop
pop
test
cmpsb
mov
aad
xchg
test
mov
outsl
test
push
xchg
jg
iret
and
adcb
hlt
clc
sahf
mov
aaa
stos
push
divb
fbld
sbb
loop
pop
dec
mov
dec
jecxz
imul
and
dec
mov
or
push
cmp
add
incb
orl
les
icebp
into
out
cmp
mov
dec
mov
adc
stc
mov
sbb
push
xchg
xchg
mov
mov
mov
mov
sbb
mov
pop
jb
inc
push
inc
push
pop
mov
xchg
push
daa
fisubrs
xor
fs
ret
sub
loopne
xchg
insb
lods
bound
jle
mov
fdivrp
idivl
fstl
push
lahf
lret
mov
push
jp
sub
or
nop
mov
shl
test
mov
mul
shll
ss
and
adcl
test
xchg
jns
add
cmp
inc
outsb
xchg
ror
push
adc
mov
xchg
nop
fwait
ret
xchg
or
cmp
into
test
push
mov
fsub
sub
lds
push
xchg
out
push
out
inc
push
add
into
mov
loopne
stc
dec
jnp
adc
push
repnz
lock
mov
ja
jg
std
out
cmp
xor
cmpsl
orl
xchg
and
nop
pop
fsubs
push
iret
xor
inc
stos
out
ja
jb
jo
arpl
and
hlt
ror
push
movsb
cld
pop
addr16
into
repz
in
adc
push
loope
aad
xchg
sti
mov
push
je
sub
push
aaa
popa
jnp
std
jb
add
outsl
mov
leave
cli
sub
sub
mov
or
rcr
sarl
pop
hlt
xchg
in
push
mov
cltd
adc
mov
xchg
or
repnz
shrl
jo
mov
lea
ljmp
lods
rcl
pop
mov
dec
push
scas
jl
xor
aas
stos
xchg
or
out
hlt
mov
rcpps
shlb
pop
jg
into
fs
leave
sub
mov
lea
or
gs
aas
dec
and
leave
shll
push
sbb
mov
in
mov
dec
sbb
and
cmp
int
lret
adc
mov
imul
jne
jl
into
fdivrs
into
mull
add
cmp
lret
pop
xchg
mov
hlt
je
and
daa
cmp
out
push
test
jns
fwait
nop
js
add
xchg
cli
push
mov
inc
jmp
sub
cmp
insb
fldenv
mov
xor
jne
push
out
rcr
inc
lcall
jmp
xor
xchg
mov
jne
ljmp
cmp
jmp
lock
daa
cld
scas
jp
sbb
sub
jmp
adc
dec
or
ja
stos
testb
push
ljmp
or
xchg
or
jae
pusha
enter
mov
aad
pop
adc
xor
lods
insl
cltd
mov
ljmp
mov
mov
bound
jbe
fbld
or
push
and
xchg
adc
sbb
leave
push
pop
xchg
imul
jg
daa
filds
out
dec
pop
ljmp
adc
or
push
pop
inc
movb
inc
jle
mov
cmp
mov
push
pop
into
sub
in
ja
repz
xor
cmp
jg
mov
push
pusha
xlat
push
das
aas
and
add
cmp
hlt
adc
sbb
in
jg
or
daa
push
fisubl
jp
pop
outsb
loope
push
cld
cwtl
jg
mov
jae
cmp
mov
mov
mov
or
outsb
mov
fsts
into
pop
frstor
fsubrs
xchg
xlat
pop
add
ret
popf
xor
lods
xor
mov
push
out
mov
jle
in
push
xchg
arpl
xchg
pop
mov
mov
pop
cmp
push
mov
pop
or
divl
lret
mov
fstp
out
xor
push
gs
adc
outsb
pop
adc
cli
xchg
vcvttpd2dq
lahf
addr16
ljmp
std
in
add
lock
dec
pop
sbb
cmp
aad
icebp
mov
cld
xchg
pop
mov
sbb
fisttpl
jle
stc
adc
dec
pop
pop
test
xor
xor
add
pushf
ret
mov
sub
mov
fistpll
clc
or
dec
jne
inc
pop
add
outsb
int
int
mov
mov
scas
xor
adc
inc
loop
movb
dec
xor
cmp
or
pop
imul
lock
adc
fisttpll
xchg
mov
push
push
in
shlb
les
leave
adc
add
xchg
sar
out
dec
push
add
lret
xor
lahf
subw
in
sbb
icebp
fcmovnbe
or
xchg
pushf
push
and
ljmp
icebp
dec
int
sbb
jb
inc
rcrb
jb
dec
mov
fsubrl
or
aaa
lcall
out
inc
loope
lret
xor
adc
out
aam
xchg
stc
fsubr
fnstenv
es
xor
jg
push
jae
mov
movsl
and
and
sub
mov
xor
loop
sbb
punpckhwd
pop
lods
inc
into
jg
dec
lret
out
test
bound
dec
out
mov
jb
add
aam
adc
fcmovnbe
or
push
lahf
mov
jbe
dec
addr16
mov
push
xor
test
mov
cmc
dec
ljmp
pop
in
xchg
clc
les
jns
je
dec
pushf
enter
sti
jmp
sub
dec
add
pushw
or
xor
iret
mov
xchg
sbb
inc
js
addr16
outsb
or
jo
cmpsb
push
push
outsb
add
inc
pop
ss
sub
xor
lods
in
aas
fdivs
mov
jae
ret
xor
and
cs
popf
and
inc
mov
jns
jmp
mov
sub
add
xchg
scas
out
and
dec
sahf
scas
dec
mov
cli
daa
lahf
push
bound
out
sub
cmpsb
pop
add
xchg
pop
leave
shlb
insb
hlt
sbb
pop
rol
xlat
fisubl
dec
notb
and
lahf
cld
inc
sarl
ja
mov
push
daa
int3
bound
ret
sti
stc
mov
insl
dec
inc
fwait
mov
leave
lret
adc
inc
in
push
and
cmc
and
or
lock
push
movsb
xchg
mov
push
or
cmpl
loopne
lcall
popl
test
add
sub
cld
cltd
cmp
int
into
push
xor
into
inc
std
or
and
sbb
add
push
sti
jns
dec
rcll
mov
sahf
cmp
ror
icebp
inc
jmp
xor
xchg
mov
cmp
out
push
inc
ja
pop
into
mov
jge
lahf
ss
test
aaa
pop
lods
dec
iret
push
or
pop
mov
jle
sti
rcl
pop
jle
es
dec
std
dec
pop
mov
daa
out
outsl
jbe
mov
push
cmp
loopne
mov
fildl
rolb
push
inc
adc
scas
call
imul
push
mov
cld
int
jmp
jbe
loopne
or
rorb
jae
xor
or
xchg
and
div
test
sbb
jne
or
xchg
jo
jle
cmp
inc
xlat
add
movsb
int3
addl
or
and
into
lds
push
outsb
or
divb
das
dec
or
or
push
pop
and
jbe
in
add
push
ret
int3
test
sub
jnp
imul
insl
icebp
xabort
fsts
jno
stos
imul
in
sbb
xchg
cli
insb
cmpsl
mov
push
sub
jb
into
mov
xor
mov
daa
jle
push
lret
shlb
push
dec
loope
xlat
cld
mov
sub
shll
mov
sbb
call
mov
and
cmp
lds
add
pop
outsl
lret
push
outsb
sub
in
lahf
hlt
leave
push
jbe
or
fwait
int3
mov
lods
iret
xor
icebp
popf
cmp
cltd
mov
lock
add
addl
scas
loopne
icebp
cs
je
hlt
mov
stc
sbb
jle
lret
xor
into
adc
xchg
mov
and
push
mov
fnstsw
xchg
ret
into
ds
dec
repnz
js
aas
cmp
loopne
jns
rcrl
stc
jmp
cld
add
sbb
push
or
cmp
popa
xorb
jmp
arpl
jge
jle,pn
push
leave
mov
xor
mov
ljmp
lds
pop
add
sti
lret
push
jg
mov
pop
add
or
inc
xor
mov
loopne
cmpsl
or
pop
lods
sbb
je
xor
divl
lods
ss
aad
sbb
movsb
jns
xchg
push
adc
mov
leave
jp
sbbb
lods
movsb
scas
pop
or
scas
inc
xchg
aaa
adc
xor
adc
add
sbb
jbe
stc
mov
shrl
aas
sahf
push
clc
or
push
xchg
dec
addb
jo
push
out
int3
or
or
fistps
push
hlt
xor
push
cwtl
lret
inc
pop
push
ss
push
pop
adc
enter
adc
mov
add
and
lods
mov
inc
sahf
lret
mov
sbbb
out
inc
rcl
xor
js
fildll
testb
sbb
mov
addl
mov
mov
or
mov
mov
or
adc
adc
js
lret
sub
mov
rcl
pusha
cmp
sbb
int
xchg
dec
cli
or
aaa
hlt
out
fistpl
sbb
jne
iret
pop
push
lods
stos
mov
loopne
push
jl
mov
test
daa
mov
xlat
sbb
mov
sub
ljmp
add
cmp
sti
push
xchg
and
xor
adc
pop
fwait
and
cmp
ror
inc
ret
push
rcl
and
inc
dec
sub
stos
push
je
iret
pop
jb
lds
pop
add
data16
jg
lea
adc
jl
or
xor
clc
and
push
mov
pop
sti
lret
push
xor
pop
dec
push
cmpl
movsl
push
pop
cmc
sbb
imul
ret
sbb
sub
andb
push
adc
push
mov
jae
cltd
xlat
fmulp
loope
out
xchg
pop
sbb
sbb
adc
in
das
mov
push
ljmp
aaa
jns
xor
dec
outsl
repnz
cmp
insl
xchg
and
inc
jb
fwait
sbb
roll
add
ljmp
inc
mov
mov
lods
sub
sbb
gs
outsb
push
xchg
mov
xor
cmpl
lds
mov
rcrb
mov
mov
cld
aam
cmpsb
rclb
shll
pop
scas
push
adc
push
scas
in
mov
cmc
stos
test
push
xchg
sub
push
add
lea
lods
cmp
and
cld
xchg
cmc
fwait
dec
movsl
loop
add
jl
in
or
jmp
cmpxchg
mov
pusha
sub
push
xor
xor
jl
mov
mov
pop
sbbb
mov
jne
adc
rolb
ret
sbb
cltd
pop
xor
push
mov
mov
push
roll
jnp,pn
push
dec
pusha
inc
mov
push
shr
data16
push
inc
imul
gs
dec
mov
stos
sbb
imul
into
pushf
mov
into
push
ret
jecxz
lods
stos
or
outsl
sbb
pop
cs
cld
out
sbb
pusha
mov
addl
insb
pop
xchg
rorb
out
pushf
xchg
bound
mov
cmp
les
in
in
push
das
movsl
test
cmpsb
ss
add
pop
lahf
xor
in
jecxz
arpl
cmp
mov
jns
push
or
lret
cld
sbb
lret
loop
push
ss
cmp
or
or
jmp
xor
call
xchg
roll
and
int3
xchg
lret
jns
mov
mov
cmpsb
add
inc
mov
pop
xor
daa
lods
arpl
gs
mov
sahf
jbe
push
int
and
dec
pop
not
fsubr
xchg
inc
ja
pop
sub
rol
loopne
add
push
wrmsr
mov
xor
sub
xor
mov
xchg
or
mov
jns
push
jmp
lods
lret
pop
dec
js
push
xor
jo
mov
mov
add
mov
test
clc
pop
in
fsubrl
outsl
cmp
pop
mov
xor
clc
lods
dec
dec
das
lret
fidivrl
imul
xor
into
push
mov
add
mov
xchg
cmp
pop
sbb
pop
movsb
xrelease
les
mov
and
std
shr
cs
mov
repnz
popfw
test
or
push
lret
mov
imul
stos
ret
push
xchg
loopne
add
leave
dec
fs
pop
insb
push
repz
sub
outsb
jo
in
mov
mov
add
in
inc
test
cltd
dec
bound
scas
lret
in
cmpsl
inc
inc
jge
adc
dec
pop
adc
mov
add
loope
xor
sub
lcall
fwait
mov
fucomp
xchg
data16
imul
sub
jne
add
lret
cmp
int3
cld
test
rcll
mov
pop
sbb
add
fsubrl
jp
xor
inc
sbb
mov
into
xchg
fs
loope
dec
lea
sub
int
mov
pop
decl
loope
in
inc
mov
fsubrl
sub
cmp
dec
lcall
mov
sub
cmpsb
inc
mov
insb
mov
cmc
adc
xchg
loopne
pop
movsb
xchg
dec
add
xchg
pop
mov
mov
into
pop
shl
sbb
mov
xor
test
xor
insb
lahf
out
xor
add
es
rcrb
loopne
lcall
int
jae
ret
lret
sbb
xchg
xor
mov
addr16
arpl
jno
jg
stos
pop
andb
out
popf
and
sti
rcrl
mov
add
cmp
into
xchg
in
pop
jbe
and
shlb
call
loope
and
xor
xchg
into
push
mov
sbb
sub
push
shll
movsl
mov
data16
add
scas
rcl
js
addr16
sahf
popf
pop
sbb
sub
bswap
push
jnp
mov
popa
sub
in
jg
cmpsl
mov
js
aaa
fcomps
mov
push
adc
push
sbb
xchg
xor
xor
lret
mov
popa
push
sbb
add
xchg
mov
xchg
and
out
test
out
mov
mov
call
scas
shr
out
dec
xchg
addl
cs
xchg
adc
nop
mov
mov
gs
rol
ljmp
sarl
cmc
imul
outsb
dec
mov
jno
or
add
shrb
cmp
xchg
das
xchg
sub
cltd
aad
clc
shl
cs
in
inc
jae
xchg
add
add
push
jb
push
andl
idivb
and
jmp
pop
jge
jbe
or
scas
cmpsl
insl
scas
in
xor
mov
test
fisubl
mov
sbb
fsub
pop
mov
icebp
test
mov
hlt
in
insb
jl
add
fs
into
dec
or
lods
adc
xchg
fisubrs
int
repz
push
out
xchg
mov
rcr
or
pop
cmp
xor
lahf
jp
faddl
xor
and
or
jns
stos
add
push
mov
xchg
in
pusha
lret
loopne
pop
icebp
xor
mov
cltd
push
sbb
into
ja
int
ss
jae
movsl
mov
mov
mov
ret
sbbl
xor
mov
cmp
shl
insl
xlat
mov
adc
gs
leave
xchg
mov
scas
daa
pop
xchg
jns
sub
push
jmp
sub
aas
lret
cmp
push
int
sbb
adc
in
pop
xchg
mov
das
test
dec
push
or
movsl
movsb
rcrl
xlat
out
test
jno
and
jne
repz
lret
pushf
xor
lahf
movb
je
xchg
jne
jae
pop
push
jecxz
ja
fistpll
and
mov
subl
mov
mov
mov
and
adc
mov
mov
rolb
push
out
and
mov
pop
cli
lret
or
jl
bswap
fcom
sub
notl
out
bound
cmpl
pop
jmp
sti
jg
push
int3
or
cli
aas
shrb
mov
cmpsb
in
and
or
dec
daa
jle
xchg
testb
js
fistpl
cmpsl
sub
jno
iret
lods
movsb
push
or
mov
lahf
mov
xor
push
push
add
and
aas
jmp
loope
pop
jg
mov
rcr
and
dec
xor
in
add
or
jae
out
test
inc
mov
sbb
xchg
pop
cli
pop
pop
out
inc
push
clc
ret
push
sub
fdivrl
daa
dec
cmp
sti
lret
out
pop
mov
pop
testb
inc
cld
aad
out
and
jecxz
fcoms
sbb
jns
mov
xchg
fisttpll
lret
dec
xor
dec
loope
xor
into
leave
push
repz
popa
fldcw
jge
fwait
cmp
mov
mov
shrb
push
pop
mov
adc
jecxz
mov
push
sahf
cld
pop
push
pop
stos
mov
mov
int3
out
fsub
inc
lea
mov
stos
and
aam
xchg
xor
mov
adc
sbb
pushf
ret
mov
lds
ljmp
add
daa
std
dec
pop
lcall
inc
jbe
xchg
imul
pop
cmp
add
popl
cmpsl
ja
mov
push
push
scas
ret
aaa
data16
xchg
pop
mov
cmp
inc
nop
or
out
ja
jmp
inc
sub
shll
aam
mov
fdivs
sarb
lret
int3
mov
xchg
mov
movsl
pop
fld
lret
xchg
or
cld
movsl
lea
into
sub
sahf
or
jecxz
add
xor
jnp
in
inc
cmc
sbb
inc
cli
ds
mov
mov
mov
push
mov
roll
out
pusha
xchg
adc
outsb
push
jg
daa
inc
call
stos
decb
js
fldcw
fwait
out
mov
dec
dec
inc
jp
mov
cmpsl
sbb
dec
jle
add
inc
cmp
push
push
mov
mov
loope
mov
pop
or
cmp
push
xorl
es
mov
xchg
push
std
pop
xor
cmc
in
aas
rclb
bsf
loope
adc
pop
in
sbb
adc
cmp
and
loope
fisttpl
cmp
in
mov
testb
mov
dec
xor
scas
mov
std
push
into
ds
mov
pop
cwtl
xchg
push
std
dec
mov
xorb
push
data16
scas
inc
int
outsl
repz
add
mov
xchg
cmp
andl
push
loope
cmc
ret
jg
icebp
out
push
addr16
and
lret
dec
lds
jns
lahf
add
insb
mov
xor
or
mov
mov
test
mov
das
push
leave
mov
test
adcb
jno,pt
jg
mov
iret
leave
roll
or
mov
inc
dec
jecxz
mov
sbb
jns
mov
scas
xor
adc
cmp
pop
add
jns
push
rcrb
lcall
sbb
adc
sahf
in
adc
sbb
int3
jmp
push
loopne
mov
xor
dec
mov
ss
imul
in
jb
in
fcoms
or
data16
xchg
jle
stc
cmpsb
jo
bnd
pushf
fdivs
out
fnstenv
cwtl
xchg
adc
mov
pop
adcl
in
mov
scas
int
xchg
push
and
mov
out
shll
pop
push
cwtl
cmp
jp
sub
fs
push
rcrl
inc
call
sarb
das
imul
sub
mov
xchg
sbb
xchg
les
rcrb
icebp
cmp
fs
pop
push
test
cwtl
clc
out
adc
or
add
out
push
xchg
xchg
sub
lods
mov
xchg
and
cmp
inc
js
stc
sub
test
mov
ds
popf
mov
sub
lret
xchg
cmp
pop
sbb
mov
push
jmp
dec
lcall
dec
mov
xchg
call
fwait
imul
loopne
add
adc
sub
cmc
and
mov
leave
shl
mov
test
je
jb
pop
adc
fadds
push
insl
nop
mov
mov
add
pop
lret
or
lahf
mov
dec
aam
stos
pop
push
int3
sbb
div
mov
test
shl
outsl
pop
rorb
xchg
xchg
dec
shrb
inc
aas
into
in
pop
int3
enter
xchg
stos
mov
scas
cli
fimull
data16
loope
clc
enter
test
test
mov
jo
test
xor
fidivrl
fwait
repnz
jbe
outsl
jbe
jns
inc
daa
push
fsts
movsb
dec
pop
lret
jns
adc
sub
xchg
rcrb
cmp
or
dec
rcll
and
ja
xchg
push
loopne
out
sub
lret
fstpl
dec
insb
cmpsb
outsb
cmc
xchg
hlt
loopne
not
pop
mov
inc
jecxz
out
adc
mov
jbe
scas
inc
mov
clc
ss
and
mov
stos
sbb
push
sti
outsl
adc
inc
loopne
cmp
ds
sub
out
inc
mov
pop
cmpsb
lret
stc
aam
pop
mov
mov
adc
fcoml
pop
cmp
sub
test
jne
pop
orb
fwait
pop
pop
adc
stos
push
fiadds
xor
lods
lret
imul
les
mov
cwtl
mov
divl
push
add
inc
aam
dec
or
dec
jge
mov
adc
sti
pop
mov
cli
cmpsl
stos
xchg
adc
lret
shl
ljmp
add
int3
lea
dec
lds
rorl
add
jbe
adc
add
or
pop
lods
push
add
sub
fbld
mov
xor
push
xchg
cmp
xchg
clc
pop
test
adc
clc
imul
adc
lea
inc
cs
cmp
sub
icebp
push
int3
cwtl
mov
bound
pop
sub
mov
cli
out
adc
or
lods
dec
stc
inc
push
push
lods
push
xor
mov
push
xor
mov
roll
test
xchg
mov
xchg
jbe,pt
shrb
add
and
add
cmp
mov
sbb
ret
inc
fidivrl
out
push
jo
and
int3
pop
or
dec
imul
sub
cs
not
sub
or
fcmovbe
add
call
mov
inc
ret
mov
push
mov
test
cmp
icebp
popa
dec
rcll
nop
xor
repz
int
xchg
jo
rol
test
lods
movsb
inc
imul
sub
ss
mov
int3
jae
push
out
nop
jne
rcrb
in
or
inc
add
jp
in
stos
xchg
loopne
insl
adcl
pop
cmp
push
cmp
out
rclb
mov
repz
and
out
sub
loop
push
push
leave
cmp
jne
mov
xor
iret
lock
imul
sub
inc
pop
dec
jbe
sarl
into
sahf
scas
or
push
out
pop
cmp
mov
popa
pop
into
mov
inc
add
add
int
xor
xchg
pop
cmpsb
xchg
je
in
stos
adc
orb
fs
cmpsl
jne
jns
lret
movsb
insl
shlb
hlt
push
mov
dec
mov
push
add
shrl
test
jae
daa
jmp
clc
stc
insl
js
xchg
cltd
ljmp
call
push
shl
mov
enter
popa
in
pop
cld
out
mov
mov
pop
scas
xchg
popf
ljmp
mov
inc
sbb
push
iret
shll
jo
fdiv
push
aam
hlt
outsl
xchg
sbb
ljmp
cmc
dec
push
inc
nopl
mov
mov
push
fmull
jne
shl
out
mov
sbb
and
dec
mov
adc
lds
sti
or
and
loop
mov
roll
push
mov
pop
pop
mov
stos
arpl
xchg
out
ret
dec
mov
pop
jae
int
jmp
insb
xchg
lea
in
and
push
xor
fcoml
cltd
xchg
jecxz
insb
xor
jns
mov
pop
aaa
adc
frstor
inc
es
mov
into
mov
int
push
inc
cmpsl
pop
sub
mov
arpl
clc
dec
sub
pop
jne
aam
sti
lret
test
xchg
into
cld
negl
movsb
in
sub
mov
jb
popa
xchg
push
add
out
into
dec
aam
and
pop
jb
dec
adc
cltd
push
sub
or
cld
sti
in
pushf
xchg
cmpsb
js
out
call
stos
inc
pop
lods
jnp
ret
adc
out
and
dec
dec
sub
sarb
add
adc
jmp
shll
xchg
pop
cmp
mov
mov
xchg
adc
loope
adc
test
in
test
bound
int3
push
xor
mov
loope
sub
xor
addr16
sub
lret
dec
pop
pusha
int
jecxz
sub
jns
mov
lea
push
cmp
push
sub
jno
sub
and
pop
dec
jne
data16
adc
xchg
ss
leave
push
je
roll
mov
fistpll
add
dec
jbe
jb
jp
pop
out
or
jle
je
mov
arpl
fcomp
push
jb
sub
stos
daa
pop
push
adc
stc
test
add
mov
add
clc
jns
sbb
loopne
mov
add
xchg
movsl
out
sbb
cmc
sbb
flds
rol
in
stos
repz
notl
jne
pop
push
inc
push
loope
test
shlb
pop
pop
test
jle
sbb
pop
jnp
js
mov
fwait
outsb
mov
xchg
dec
mov
out
cltd
cmp
and
in
cmpsl
jo
ss
sub
repz
and
daa
aas
cmp
ja
xchg
mov
ljmp
sub
pop
subb
fdiv
icebp
sbb
cli
insl
aaa
scas
and
sub
jecxz
scas
adc
sub
ljmp
cmp
jmp
jbe
mov
sbb
call
push
loopne
repnz
push
fsub
test
inc
aam
jp
push
insb
fldcw
popf
add
cmp
lahf
push
adc
push
xlat
cmc
jns
xchg
or
lret
push
mov
sbb
sub
in
lods
mov
inc
mov
xchg
test
sub
xor
mov
xor
lods
icebp
fistpl
jb
out
or
shrl
test
cmp
adc
sbb
test
add
nop
mul
int
lret
test
xchg
pop
les
arpl
fiadds
sti
and
add
lock
dec
scas
xor
sahf
and
lods
sbb
arpl
inc
stc
dec
or
pop
sarb
loopne
jle
dec
mov
mov
testb
cs
jmp
fldcw
leave
pop
xchg
repz
sub
cltd
lds
cli
aas
out
lret
mov
or
push
push
pop
pop
pop
jno
in
xchg
xchg
add
mov
mov
jmp
int3
in
outsl
push
add
stc
and
lret
ljmp
and
mov
andl
out
or
inc
int
daa
push
lds
adc
mov
jns
pusha
shl
pop
cmpsl
or
call
jmp
enter
out
adc
add
das
and
test
or
std
xchg
jmp
clc
jmp
fimuls
xorb
ss
xchg
call
scas
and
push
mov
cld
jae
push
fcom
mov
aaa
shll
aas
ret
lahf
pop
jne
fucom
push
andl
sub
cmpsl
or
xor
test
setle
jl
in
lcall
mov
outsb
mov
lods
sub
test
lret
mov
cmp
std
cmpsl
icebp
cld
adc
test
add
and
in
xchg
cmp
sbb
dec
mov
sti
stc
rcl
mov
imul
inc
lret
push
aas
push
icebp
mov
gs
mov
xchg
repz
add
out
and
loop
cmpsb
sti
sub
or
xorl
cwtl
push
jg
cmp
shl
cwtd
arpl
add
mov
movsb
jnp
sub
and
jb
mov
scas
and
aaa
cmc
inc
into
rcrl
mov
scas
mov
ljmp
jecxz
xor
int
xchg
cmp
pop
iret
xor
add
push
mov
mov
lcall
push
xlat
dec
lahf
movsl
addr16
pop
lcall
mov
int3
or
push
jp
inc
mov
jmp
test
xchg
and
jbe
sub
mov
jp
push
int3
inc
mov
adc
or
gs
mov
test
stos
adc
jne
adc
fiaddl
xchg
call
in
pop
sub
cmpsl
inc
cmc
out
jg
shll
repnz
inc
sub
xor
fdivrl
pushf
vunpcklps
movsl
scas
xor
and
push
mov
mov
and
loope
rcr
fildll
aam
xchg
sarb
jno
inc
cmp
pusha
outsb
loop
lahf
jg
mov
sahf
jmp
movsl
cmp
xor
dec
mov
adc
aaa
sbb
or
xchg
ds
outsl
cmp
icebp
dec
nop
sbb
ficoms
and
cmpsb
mov
mov
xchg
jns
mov
cli
inc
je
cmp
into
push
and
addr16
xchg
dec
push
sub
jns
rclb
lret
out
stos
xor
mov
pop
mov
inc
add
xchg
xchg
data16
cmc
push
lds
lods
iret
push
inc
sub
pop
aam
pusha
mov
xor
mov
subb
jnp
insb
xor
xorl
lea
pop
xchg
in
mov
jle
mov
pop
xchg
push
js
mov
sbb
add
pushf
sub
in
clc
inc
in
dec
call
data16
mov
fisubrl
pop
push
and
pop
mov
leave
pop
jp
ss
adcb
loop
lods
arpl
les
punpcklwd
into
xchg
or
sub
pop
faddp
insb
sub
sti
adc
fidivrl
or
ss
enter
or
cmc
inc
rcl
inc
and
xchg
fcmovbe
xchg
or
jl
insl
pop
or
mov
lret
int3
aad
xor
cs
adc
repz
add
sub
jne
and
test
aam
sub
int
mov
sahf
mov
iret
dec
pop
mov
call
jne
pusha
xchg
mov
in
xchg
mov
test
into
cmpsl
jns
ss
mov
stos
push
push
lcall
and
jle
sahf
loopne
dec
rcrb
mov
test
or
mov
outsb
jecxz
push
js
jnp
in
adcl
subb
xchg
and
push
dec
or
sbb
ss
adc
or
test
neg
addr16
mov
nop
cwtl
or
loopne
repz
cmc
pop
pop
lret
pop
std
cmp
jecxz
repz
ficoms
idiv
fsubs
aam
or
inc
dec
inc
pushf
out
lret
dec
xchg
inc
out
sti
dec
js
dec
and
mov
movb
repz
daa
ret
mov
mov
mov
movsl
pushf
jnp
cmp
mov
loope
test
repnz
xchg
sbb
nop
push
inc
push
jmp
and
sub
shlb
xor
jo
sahf
bound
into
es
add
ss
dec
in
out
sub
insb
adc
jmp
mov
out
insb
lds
loopne
data16
or
push
lret
test
push
pop
movsl
arpl
out
enter
dec
inc
sub
es
dec
or
pop
xchg
xchg
mov
push
push
push
add
ds
mov
cmpl
test
or
cld
mov
fstl
jge
pop
or
subl
call
mov
jae
cmp
fidivrl
imul
test
mov
int
pop
and
pop
icebp
es
lret
mov
scas
ljmp
push
sub
add
leave
flds
xchg
pop
dec
scas
out
add
stos
inc
mov
xchg
and
xchg
dec
sub
cli
stos
insl
mov
or
addr16
mov
add
pop
push
ja
lahf
popa
xor
jno
jmp
stos
pop
arpl
loop
or
pop
dec
cmp
adc
jmp
into
mov
and
daa
das
xchg
negb
mov
jge
or
adc
dec
push
push
mov
mov
lock
inc
push
cmpsl
add
in
rcrb
cmp
pop
xchg
jb
pop
dec
dec
fisubl
ds
or
test
insb
xchg
icebp
mov
add
adc
das
jmp
cmp
add
mov
pop
xlat
cmp
xor
inc
xchg
ja
cmp
xchg
add
inc
enter
inc
jne
popl
fidivl
dec
jge
clc
mov
xchg
mov
js
inc
fs
mov
sbb
jbe
push
jmp
not
and
sub
fcmovbe
xor
lock
fisubrs
mov
add
push
mov
or
fidivrs
mov
inc
jne
out
cmpsb
cwtl
adc
push
push
pop
sarl
imul
data16
mov
into
inc
cmpsb
sub
scas
sub
sti
adc
xor
fucom
dec
xchg
fdiv
mov
push
xchg
xor
inc
jo
xlat
mov
cmc
data16
movsb
pop
sub
in
jge
psllq
mov
adc
inc
test
imul
ds
sbb
push
xchg
orb
outsb
out
stos
out
loope
sub
and
and
adc
lret
add
dec
sbb
nop
jno
lcall
jb
adc
cmp
mov
clc
xchg
rclb
sub
cmpsl
es
xor
sbb
dec
test
ja
mov
jbe
fists
add
scas
cmpsb
lahf
data16
testl
lret
jno
stos
ret
xchg
push
jl
orb
ja
cmp
pop
test
xchg
sub
sbb
stos
push
sarb
loop
push
data16
fwait
inc
out
pop
push
das
push
lds
cmp
arpl
xor
aaa
dec
shl
mov
pop
mov
cwtl
movsl
fsubrl
icebp
lcall
or
sbb
shrb
jmp
push
aaa
add
sbb
cmp
ret
sbb
push
cli
pop
mov
dec
pop
sub
and
sbb
pop
xchg
jne
inc
movsl
sub
aaa
outsl
jmp
pop
not
jbe
imul
pop
xor
adc
fs
mov
mov
push
call
std
push
pushf
iret
incb
lea
and
aaa
lcall
cmp
sbb
arpl
inc
cli
rorl
jns
popa
lret
outsl
data16
daa
ja
mov
cmp
stos
cmp
mov
dec
addr16
clc
pushf
scas
xchg
aad
mov
cmp
popa
cmpb
or
sub
imull
xchg
cmc
out
xchg
stc
mov
inc
or
add
mov
nop
sbb
xlat
shr
push
cmp
dec
lods
scas
push
sbb
adc
add
jl
inc
lret
out
scas
pop
inc
push
lods
or
dec
movsl
fdivl
dec
sub
mov
shrl
sbb
sub
xor
mov
dec
xchg
xor
sub
outsb
mov
sbb
mov
jl,pt
pop
mov
out
rorl
push
push
lcall
xor
jbe
add
scas
aam
mov
fnstcw
pop
notl
data16
ljmp
int
cmp
adc
push
jge
adc
lahf
adc
sub
mov
loop
mov
and
sub
mov
pop
pusha
int
rclb
repz
mov
cmpsb
xchg
clc
dec
xchg
xchg
xchg
jnp
call
xor
ret
adc
punpckhwd
lret
loop
aam
dec
repnz
scas
xor
gs
jo
sbb
rcl
int3
add
call
outsl
inc
lods
fidivl
cmp
cmp
inc
shrl
scas
icebp
into
or
jb
xchg
hlt
sub
cli
call
pop
and
stos
inc
push
or
xchg
xor
jl
add
xchg
sub
test
mov
pop
andb
cmp
mov
xchg
clc
daa
cmp
insl
mov
fs
xor
sub
jle
sti
cmp
lcall
jp
clc
fldl
sbb
xchg
xchg
pusha
ja
test
iret
outsl
int
pop
inc
lea
popf
xchg
int3
cmc
push
mov
in
stos
mov
and
push
out
out
pop
sub
daa
jbe
jmp
int
inc
data16
mov
sub
out
sub
sbb
xchg
add
push
stos
mov
ret
lret
repz
push
into
out
imull
loop
mov
or
xor
cltd
jno
test
dec
xchg
hlt
lea
mov
test
add
fs
cmp
fidivl
add
movsb
push
pop
notl
bound
inc
lds
icebp
scas
ljmp
dec
sbb
stc
outsl
shrl
push
shll
addr16
leave
arpl
jp
add
fldl
sub
pop
and
in
sbb
out
mov
and
add
jg
cltd
pusha
stos
jecxz
aad
mov
pushf
mov
movsl
dec
iret
or
dec
int
enter
push
mov
int3
das
push
jnp
push
aam
lcall
xor
addr16
xchg
cs
dec
cmp
xchg
mov
and
lock
loope
arpl
inc
jne
adc
jecxz
stos
mov
dec
add
and
nop
xchg
lahf
rol
xchg
sub
in
xchg
call
xor
jno
sub
shll
pop
fdiv
test
inc
imul
xchg
inc
data16
dec
pushf
sbb
sub
cmpsb
pop
jge
push
and
popf
je
adc
sysret
dec
stos
xor
xchg
into
fisttpl
leave
push
fdivs
add
int3
fisubl
fistl
mov
mov
fbstp
push
adc
sbb
sub
jnp
mov
inc
in
mov
out
pop
stos
pop
mov
lret
xchg
rorl
fcmovne
cmpb
sbbl
xchg
lcall
call
sti
repz
rcr
mov
mov
mov
loope
lods
dec
jge
lahf
sarl
pop
sub
imul
call
or
shll
mov
push
popa
and
mov
ja
aaa
push
popf
jno
mov
in
iret
mov
push
mov
in
rclb
pop
dec
and
adc
mov
aaa
xchg
push
loop
xchg
aam
sbb
out
jbe
scas
into
ljmp
adc
sub
outsl
jno
loop
fisubrs
outsb
mov
mov
mov
je
xchg
sub
rcll
jno
inc
enter
shlb
cmp
mov
push
shll
loope
fcoms
out
fimull
xlat
iret
je
mov
or
dec
sub
add
lcall
xlat
add
push
mov
lea
jge
jb
fdivs
push
mov
repz
xchg
loopne
sbb
and
add
daa
jl
sbbb
inc
lea
push
pop
out
in
add
bound
sub
ds
imul
mov
push
ficoml
in
sub
insb
mul
mov
and
aam
mov
dec
adc
aas
pusha
loope
int3
ss
test
mov
movsb
dec
call
fcmovne
test
in
jecxz
pop
pop
rorl
jo
jns
pop
fsubs
mov
adc
popf
mov
xchg
dec
dec
lea
movsl
shrl
cmp
daa
dec
rorb
fisubl
out
jge
dec
xor
jno
push
push
into
inc
mov
mov
push
xchg
aaa
mov
data16
sub
pop
mov
mov
insl
or
pop
push
mov
stos
out
in
jmp
xor
add
in
daa
orb
mov
push
mov
or
cli
mov
inc
mov
mov
sbb
sbb
inc
dec
xor
pop
ret
cld
fs
scas
and
lods
inc
push
xchg
push
enter
jne
cmp
aaa
lock
out
lahf
mov
rcr
mov
aam
sbb
xor
jbe
out
scas
rclb
stos
pushf
and
lret
sbb
test
pop
lahf
mov
xor
leave
movsb
andl
jecxz
inc
rcr
insl
dec
lcall
arpl
mov
xor
push
addr16
mov
push
ss
shrl
jne
fcomps
sub
sti
sbb
icebp
jmp
pop
dec
ffreep
inc
sub
xlat
jb
jge
cltd
mov
pop
adc
testb
dec
or
mov
andb
cmp
cmpsb
pop
mov
pop
jns
xchg
dec
adc
jecxz
or
mov
loop
and
xchg
fidivl
stos
push
sti
sbb
out
jbe
fdivr
repnz
sub
jle
jecxz
call
push
sar
popa
dec
cmp
js
lock
sub
mov
inc
in
shlb
cmpl
jbe
sahf
xor
je
mov
jbe
inc
cwtl
dec
xchg
jo
into
pop
or
push
jp
dec
inc
and
ss
bound
or
popa
xor
and
mov
imul
sub
push
rcl
add
push
sti
xlat
ss
ficompl
xor
bnd
inc
mov
aam
mov
ds
pop
cmp
ret
dec
scas
jecxz
xchg
cmc
aad
mov
jp
pop
mov
daa
arpl
push
dec
scas
cmp
mov
rcrl
xchg
push
push
imul
jae
and
mov
sbb
jb
mov
aad
and
add
dec
mov
cld
aaa
leave
jmp
fucomi
sub
mov
push
xchg
iret
push
shll
mov
setns
or
mov
mov
loopne
popl
add
sbb
ja
jno
mov
jp
dec
std
fs
ficoml
dec
jmp
push
test
push
jg
fidivs
into
mov
xor
ret
loopne
rcrl
lret
sub
cmc
mov
jg
es
jb,pn
xchg
inc
test
xchg
bound
cmpsl
cmpsl
cmp
fdivrs
iret
lahf
mov
cmpsb
push
loop
and
jno
sub
inc
xlat
enter
xorl
fisubl
push
popa
jae
shlb
lods
lret
ds
cmp
mov
push
fdivs
adc
fcoml
mov
clc
rorb
out
mov
ja
loopne
jl
cltd
shrb
insl
leave
xchg
es
sahf
js
shll
jne
in
add
ss
mov
leave
les
rolb
movb
lcall
mov
xor
mov
pop
sti
into
lcall
test
adc
or
test
nop
sbb
cmp
dec
sub
mov
loopne
jo
sbb
dec
add
xchg
xor
dec
enter
jecxz
cmc
les
cs
sahf
adc
js
movsb
mov
sarb
cltd
jmp
notb
inc
in
and
fbld
push
cmp
popf
into
outsl
popa
dec
ljmpw
cltd
gs
mov
js
inc
insb
ja
mov
lds
fs
and
dec
rolb
es
ja
in
or
rcr
popf
cltd
cmp
in
out
test
push
and
lods
les
nop
pop
icebp
xchg
std
rclb
lds
not
cmp
adc
xchg
xor
or
shrb
and
pushf
in
sub
cld
and
mov
or
pop
and
jne
sbb
cmpsb
xchg
xor
dec
movsl
or
mov
outsb
ret
jb
mov
dec
int3
pop
pop
xor
ds
ja
cmpsb
ja
into
cmp
shrb
bound
pop
decb
int3
dec
xlat
cmp
xlat
leave
and
rclb
ds
push
arpl
or
cmpsb
jno
inc
or
out
push
push
test
jns
imul
xor
cmpsb
insl
rol
out
pop
in
mov
dec
push
add
pop
sbb
ficoml
inc
jmp
cs
sbb
push
cmp
xchg
clc
or
subl
xor
fcomps
mov
call
cmp
push
lret
xor
adc
icebp
jmp
cmp
ljmp
mov
sub
mov
fdiv
test
fidivrs
aam
out
xchg
xchg
arpl
rorb
sbb
shlb
mov
mov
mov
hlt
mov
lods
and
add
mov
dec
jbe
lods
mov
mov
ret
mov
xchg
jno
cld
mov
inc
scas
div
add
aad
int3
int
sti
lret
mov
xorb
aaa
sbb
scas
pop
jmp
sbb
adc
xor
fcoms
cmp
test
jmp
xchg
arpl
jle
mov
movsb
xor
mov
or
fs
test
ljmp
in
dec
repz
add
clc
mov
push
mul
mov
push
lret
imulb
mov
pop
push
push
push
mov
movsb
subl
jno
int3
jg
mov
jbe
fst
aam
and
mov
mov
inc
roll
loope
into
sub
sub
repz
cmpl
mov
aas
ja
xor
test
cmp
mov
into
pop
inc
ja
adcl
xchg
fdivrp
daa
push
or
addr16
outsb
cmp
xor
mov
fldenv
mov
int3
std
leave
add
dec
mov
jbe
mov
cmp
xor
dec
jmp
neg
cltd
aam
jns
xorl
lret
ret
imul
xchg
clc
or
jb
out
or
ljmp
in
and
sub
and
orl
or
pop
cmpsl
mov
inc
loopne
imul
test
push
mov
jmp
xchg
popa
xor
pop
stos
hlt
mov
pop
insb
lret
ja
fdiv
fiadds
inc
cmpb
inc
mov
sub
xchg
push
in
xor
jbe
jbe
cli
shl
and
mov
mov
lret
pop
push
inc
pop
scas
mov
pop
adc
jns
adc
cmpsl
inc
test
ror
jno
out
mov
neg
cmp
mov
outsl
push
lret
mov
leave
adc
test
imul
sarl
push
out
push
test
popa
sbb
fsubl
sub
xor
xchg
inc
aam
and
jo
ja
jp
sub
sub
pop
mov
xchg
or
out
fdiv
popf
in
dec
lcall
xor
inc
jne
jecxz
pop
mov
int
test
ret
add
mov
scas
push
repz
aad
aam
mov
nop
push
mov
mov
push
inc
and
mov
leave
pop
dec
jno
sub
test
or
lahf
aaa
and
push
daa
cli
in
cmp
movsl
xchg
ljmp
mull
aam
jnp
adc
clc
aaa
ss
mov
mulb
fs
pushf
icebp
or
call
pop
ret
std
cmpb
pop
out
aam
leave
push
decb
xorb
aad
cld
sbb
push
mov
int3
ffree
lret
sub
mov
mov
in
scas
iret
stos
test
shll
lret
xchg
cmc
fadds
ret
ja
outsl
xchg
gs
insl
testb
ret
dec
cmp
xchg
dec
xor
aad
fcom
sahf
roll
in
pop
fsqrt
out
mov
xchg
sbb
movsl
mov
cwtl
lret
xor
xchg
ja
sub
repnz
out
sub
imull
adc
loop
stos
sarb
movsl
sub
or
cwtl
jmp
sbb
pushf
jae
loopne
roll
or
xchg
ret
aaa
ljmp
fbstp
mov
jns
pusha
lret
jge
stos
pop
fiadds
sub
sbb
mov
into
fwait
das
push
lea
or
out
dec
sbb
pop
mov
mov
aaa
scas
mov
ja
push
lods
cmp
inc
sbbl
adc
test
xchg
inc
mov
rcll
cmp
cwtl
mov
lret
loop
scas
sub
inc
das
lock
or
mov
and
int
loop
mov
outsb
cmp
sub
nop
stos
fsubrp
sbb
sub
push
jno
rcr
dec
negl
push
cmpsl
outsb
push
mov
mov
or
or
mov
mov
mov
shl
cs
xchg
mov
add
fcmovnb
fwait
es
aaa
in
or
aam
jecxz
xchg
push
fsub
jns
pop
mov
daa
xchg
loop
sub
das
rorb
fidivrs
cmp
add
cld
mov
cmp
mov
daa
clc
into
push
aas
mov
int
and
mov
mov
stos
adc
rcl
pop
cmp
mov
sub
dec
lods
leave
imul
mov
mov
or
lret
adc
pop
fisubl
dec
jae
addl
outsb
loope
inc
in
mov
addr16
xchg
std
jo
dec
mov
stos
andb
movsb
call
mov
jnp
out
insb
lods
dec
cmp
pop
lret
push
stos
xor
jne
mov
ficomps
lret
pop
push
inc
scas
rorl
push
push
test
push
mov
stc
cmp
sbb
outsb
sub
mov
push
and
jno
jg
inc
push
insl
mov
lock
js
hlt
cmp
sbb
dec
leave
mov
and
jo
push
xor
lods
sbb
xchg
ss
int3
cmpsb
add
mov
fnsave
shlb
sub
cwtl
add
cli
into
out
jge
push
sub
dec
sub
cmpl
jnp
iret
cwtl
mov
pop
lock
popf
jbe
push
mov
mov
cmp
jmp
mov
cmp
jae
scas
add
jp
mov
arpl
xchg
scas
cmp
dec
push
stc
jns
jle
and
cmovg
sbb
inc
pop
mov
jl
jns
mov
xchg
fwait
mov
test
loope
lret
cmpsl
les
in
fisubrl
mov
sti
jne,pn
mov
cmpsb
sub
mov
es
int
xchg
lahf
pop
loopne
dec
or
das
faddl
aam
sub
cmp
xor
inc
push
cmpsl
jb
rcrb
dec
sbb
repnz
scas
das
aam
push
int3
jb
lds
scas
mov
data16
loope
faddl
add
push
xchg
or
adc
mov
xchg
iret
cmpl
cmpsb
push
mov
sahf
aas
jg
inc
xor
lret
fnstcw
lahf
mov
add
push
or
inc
pop
loopne
dec
repnz
popa
aad
ficoml
mov
xor
mov
out
xchg
mov
pop
aaa
xchg
ja
inc
into
lods
lea
push
and
and
nop
lds
fdivl
dec
push
sub
stos
ss
sbb
lahf
test
insl
cmp
fisttpl
or
add
mov
inc
or
leave
and
inc
stos
cmp
add
in
fwait
xchg
stos
push
ds
popf
sub
xchg
inc
jge
in
jbe
pushf
mov
fsubrs
sbb
adc
pop
push
test
jno
cmpsl
cmpsb
rol
cmp
mov
bound
stos
and
sbb
stc
pslld
xchg
add
lds
inc
lds
xlat
push
rcrl
xor
lea
sbb
ret
idiv
sar
jnp
mov
jnp,pn
in
lea
call
icebp
pop
fistpl
loopne
in
out
push
scas
xor
dec
into
ljmp
jns
nop
mov
xor
icebp
mov
push
mov
fsubl
cmpsl
inc
pop
cmpsb
je
imul
mov
popf
out
mov
xchg
push
hlt
dec
and
pop
scas
cmp
push
ret
test
stos
xor
cwtl
aaa
mov
sbbb
call
dec
sbb
mov
into
add
cmp
pop
xor
jae
imul
cmpsb
sbb
loope
add
adc
inc
idivl
test
jge
cli
popf
cwtl
stos
dec
sar
fcmovbe
push
daa
lods
mov
out
into
ds
fwait
mov
orl
popf
int3
outsl
mov
pop
sub
call
pop
mov
adc
xchg
push
pop
cwtl
and
hlt
jae
adc
ja
xor
arpl
or
jbe
outsl
xlat
mov
xor
stc
fnsave
mov
sbb
scas
out
ss
test
xor
jg
xlat
mov
not
mov
jne
jo
mov
cld
cltd
pusha
and
movsl
push
push
fnop
int
and
fcmovnbe
and
pusha
cltd
sbb
dec
cmp
scas
leave
ret
fstp
push
and
xchg
rolb
jge
jo
mov
enter
push
test
into
in
clc
cltd
in
dec
jge
stos
lods
jmp
xchg
push
mov
xlat
mov
cmp
xchg
mov
and
test
fidivrs
sub
int
xchg
int3
in
stos
dec
add
sbb
mov
push
scas
ds
stc
arpl
add
push
aaa
inc
push
in
jnp
xchg
jg
jge
test
sbb
xor
rclb
nop
fildl
sub
push
lds
or
movsl
fcoms
push
add
cmp
push
mov
xor
sbb
cmpsb
std
rcl
in
jl
cmp
xor
sbb
xorl
cmp
mov
sbb
std
push
mov
mov
inc
cmp
inc
imul
pusha
popa
xchg
sub
aas
rclb
xorl
mov
dec
or
rorb
or
and
repnz
cmc
mov
dec
cmp
loop
lret
loope
test
ror
push
adc
outsl
int
pop
or
and
nop
mov
rcrb
cmpsl
jp
in
jge
adc
jo
dec
leave
pop
pop
push
lods
lea
xchg
in
int3
add
sbb
cwtl
inc
test
sub
jg
sbb
cmpsl
fstpt
imul
out
bound
rep
leave
lcall
adc
pop
inc
sub
mov
shlb
mov
mov
cld
leave
scas
xchg
jae
aam
out
in
xchg
sub
fwait
pop
pop
cmp
sub
xlat
scas
nop
push
cmp
int3
es
cmc
fisubrl
mov
ss
mov
and
pop
sub
or
pop
jge
push
push
jns
in
mov
or
dec
ljmp
aam
loopne
jmp
cltd
mov
mov
xchg
cwtl
testb
pop
mov
dec
pop
jl
jne
fisttps
or
dec
adc
insl
clc
cli
outsl
out
add
mov
inc
push
ljmp
ret
push
mov
xor
dec
xchg
mov
jl
inc
test
lahf
stc
inc
lret
scas
cmpsl
and
into
jbe
push
xchg
jp
ljmp
ja
into
mov
adc
sub
ror
imul
xor
xor
into
fadd
sub
mov
pop
xchg
add
pusha
inc
dec
pop
dec
cmp
adc
mov
jg
or
outsl
fsubrl
adc
mov
clc
mov
mov
and
cmpsw
xchg
loopne
fstpt
xor
js
push
xor
stc
push
faddl
pop
mov
lea
cmpsl
jp
lea
stos
icebp
das
in
arpl
pop
movsb
dec
jne
mov
mov
jl
lret
fimull
push
push
imul
mov
cmp
sbb
pop
icebp
ljmp
sbb
sbb
xchg
push
push
aaa
sub
arpl
call
mov
pop
sbb
inc
out
lods
arpl
sbb
loope
sub
je
lds
dec
dec
pop
sbb
sahf
fprem
dec
fs
enter
pop
push
mov
mov
aas
insl
in
jae
push
loope
aam
inc
fsubr
push
pushf
loop
mov
pop
inc
sbb
ds
jo
push
ficoml
sti
xchg
jb
adc
sbb
insl
inc
xchg
das
xor
test
xor
clc
sbb
movsl
adc
popa
fidivrs
and
dec
rcr
or
int
add
outsl
out
cltd
xorl
and
add
pusha
mov
xor
lods
je
jae
dec
mov
ja
pushf
into
sub
mov
out
push
sahf
lods
and
xchg
pop
test
fisttpl
and
test
stc
xchg
push
js
push
mov
pop
movsl
mov
mov
pop
test
repnz
addl
adc
mov
shlb
add
lret
xchg
cmp
in
cmp
cmc
je
cmp
mov
enter
lret
xor
pop
iret
andb
loopne
jg
scas
jo
xchg
iret
inc
push
mov
aad
das
pop
in
sub
movsl
adc
outsl
pop
imul
into
push
ja
shll
loop
pop
dec
lods
pop
jo
mov
push
xchg
xchg
into
jne
push
in
lret
push
in
push
out
daa
mov
test
outsb
icebp
imul
in
sbb
sub
jne
cmp
mov
mov
ret
lods
inc
and
mov
adc
clc
add
out
sarl
nop
sub
inc
jo
insl
incb
lock
inc
popa
aad
push
sti
jge
mov
shlb
xchg
pop
lcall
inc
dec
push
ds
insb
pop
jp
and
mov
cmp
test
xchg
jle
leave
mov
shrl
inc
mov
and
xchg
mov
adc
mov
out
xchg
fldt
xor
test
jb
repnz
pusha
inc
mov
inc
out
pop
inc
add
cmp
repnz
xchg
aad
popw
lock
add
in
rdtsc
test
insl
dec
inc
movsl
ljmp
cmp
jno
dec
push
movsl
dec
cmpsb
inc
gs
pop
mov
xor
or
pop
add
shrl
out
dec
pop
rclb
adc
xlat
fsubp
push
push
mov
mov
cmp
push
jbe
ficoms
jne
adcl
js
inc
sbb
loopne
into
push
sub
mov
inc
push
or
out
repnz
inc
sbb
test
js
xor
inc
pop
add
stos
and
in
test
or
cwtl
or
pop
add
fcomps
aaa
xchg
xlat
cmp
faddl
pop
jno
rorl
xchg
nop
pop
movsl
dec
mov
mov
adc
aam
imul
call
dec
adc
adc
mov
or
loopne
inc
push
les
out
test
xchg
cmp
ds
sahf
push
leave
xchg
mov
cmp
loopne
cmc
mov
push
dec
mov
daa
xchg
and
popf
sbb
jo
dec
xchg
lret
rcl
in
mov
inc
das
cmp
inc
and
jge
jo
dec
out
icebp
cs
insb
pop
pop
dec
push
aaa
push
fisttpll
pop
inc
cmpsl
loop
xor
hlt
subl
orl
xchg
mov
and
test
iret
mov
gs
aaa
rcll
adc
xchg
push
aas
push
push
popl
mov
and
iret
cwtl
adc
pop
jo
cmpsl
cld
popa
into
scas
cmp
inc
xor
pop
push
mov
call
or
sbb
lret
nop
mov
lahf
xchg
dec
into
aaa
loop
nop
xor
jo
sti
mov
test
inc
imul
xor
mov
pop
adc
out
mov
insl
dec
aam
loop
cwtl
popa
dec
or
mov
xchg
fmuls
jnp
push
inc
rcr
dec
in
out
loop
pop
in
cmp
dec
sahf
mov
iret
rolb
jb
inc
inc
xchg
ss
mov
mov
mov
sub
mov
pop
mov
clc
jg
dec
inc
xchg
daa
push
mov
into
push
sbb
sub
lret
mov
cmp
inc
js
data16
and
xlat
xchg
ret
jo
nop
enter
loope
outsl
pop
fldenv
shlb
cs
aam
cmp
fadd
pop
stos
sti
xor
popf
insl
inc
mov
or
xlat
jno
mov
out
inc
mov
loope
cs
inc
jne
xchg
cmp
leave
imul
jae
inc
lods
ljmp
insb
or
jns
mov
ret
dec
add
dec
in
aad
sbb
daa
lret
fwait
loop
rclb
imul
les
adc
or
pop
jmp
test
fadds
test
xchg
pushf
sbb
gs
dec
dec
adc
lret
addr16
popf
xchg
out
xchg
scas
pusha
adc
andb
arpl
out
ljmp
aad
cmpsl
mov
loope
iret
stos
sub
fs
jle
cmp
shll
jl
cmc
push
xchg
mull
cmpsb
sub
cwtl
cmpsl
sbb
into
inc
pop
mov
lods
pop
push
inc
outsl
inc
or
add
dec
adc
jecxz
ds
mov
push
adc
pusha
inc
pop
add
mov
pop
push
sti
xchg
testl
rcrl
pop
xlat
dec
mov
mov
push
mov
call
fucomi
dec
cmp
adc
xchg
add
cmc
std
pop
sbb
jmp
xor
mov
sub
inc
nop
fsubrs
adc
aad
into
mov
pop
repnz
loop
jp
addr16
pop
daa
loopne
mov
dec
mov
cmpsl
aas
test
jo
in
sbb
mov
mov
shr
and
icebp
pop
jnp
or
jae
ror
and
jp
mov
mov
jns
mov
mov
xchg
pop
pusha
xlat
jl
cmp
xchg
cmp
ljmp
mov
xor
inc
std
sub
xchg
sbb
mov
ljmp
push
hlt
lcall
push
cli
iret
scas
lock
push
loop
jns
push
popf
outsl
stos
and
iret
xchg
scas
cmpsb
cwtl
cmp
cmovge
push
pop
sub
mov
pushw
and
inc
insb
push
dec
xor
mov
sbb
mov
mov
int3
rolb
into
lret
mov
and
jbe
iret
mov
sub
mov
xorl
mov
sbb
cmp
test
enter
adc
hlt
inc
pop
add
test
int
insb
rorb
xchg
jp
adc
jae
hlt
xchg
and
int3
pop
outsl
jmp
cltd
js
mov
or
push
mov
jbe
mov
loopne
fisubrl
insl
xchg
xchg
out
stc
lock
aas
adc
sub
or
adc
jbe
xlat
imulb
or
lods
int3
adc
out
dec
ret
cwtl
fwait
xor
cli
adc
sbb
xchg
sbb
cmpsb
ret
pop
mov
pop
and
sub
aas
dec
lcall
mov
cld
and
divb
add
push
or
or
mov
mov
ja
lahf
xlat
mov
inc
jmp
sub
mov
enter
imul
insb
mov
es
aam
test
dec
sub
adc
arpl
or
sbb
pushf
dec
lods
push
int3
movsl
push
hlt
or
in
lret
and
pop
in
adcb
loopne
mov
xlat
test
call
mov
stos
and
cld
xor
mov
push
pop
sub
in
shrl
lret
jnp
cmpsb
lret
int3
sbb
xchg
outsb
xchg
cmp
data16
out
fwait
xlat
inc
in
inc
fucom
mov
sub
gs
lret
mov
sarb
mov
add
out
ja
lea
adc
mov
das
gs
pop
cmpsb
in
ret
mov
push
jnp
cmp
mov
test
push
jne
dec
fwait
cmp
cs
lcall
out
cmp
mov
fisttpll
adc
lds
cmc
add
jg
shrl
rcrb
adc
jno
sahf
testl
sti
dec
mov
or
sbb
cmpsl
inc
aaa
jmp
icebp
add
and
mov
and
xchg
sub
aaa
cmp
arpl
jns
aam
inc
jae
cmp
sbb
daa
cli
cmc
cmpsl
outsl
mov
xchg
imul
jbe
out
inc
fsubs
sub
rcl
and
jecxz
mov
xchg
rcl
mov
xchg
jns
into
xor
mov
jno
call
rep
adc
cmp
nop
outsb
push
push
movsl
shlb
in
push
or
push
pop
sbb
ffreep
xlat
pop
sbb
mov
enter
adc
outsb
scas
push
fcom
mov
daa
loop
andl
adc
cltd
xchg
cmpsl
dec
push
and
push
imul
inc
idivb
jns
rcrb
mov
jae
mov
dec
aam
into
push
addl
je
dec
lret
mov
xchg
lock
movb
loope
dec
into
orl
jge
mov
mov
shl
adc
cmp
mov
leave
mov
push
add
adc
lcall
stos
dec
int3
mov
test
rolb
ret
xchg
and
cltd
mov
movsb
fucom
push
imul
scas
js
xlat
stos
popa
inc
or
rolb
daa
jb
xchg
mov
xor
dec
fsubs
cmpsl
and
shrb
mov
hlt
mov
mov
jl
push
icebp
and
repnz
push
add
jo
loop
sub
in
lods
jp
adc
data16
lods
std
ds
xor
test
push
mov
outsl
or
test
ffree
and
imul
je
dec
mov
popa
push
into
or
adc
cmp
ss
pop
sbb
ficoms
cmp
add
pop
adc
jge
test
loopne
sarl
dec
ret
clc
push
out
push
sbb
inc
mov
fwait
cs
xchg
add
inc
sbb
mov
push
mov
and
call
subl
cld
repnz
or
int3
sbb
bound
push
dec
mov
stos
loope
cmp
lods
aam
inc
jmp
out
out
in
outsl
jb
pop
jmp
into
mov
pusha
mov
or
push
sub
test
hlt
jp
push
cs
cs
push
daa
pop
pop
add
mov
sub
in
cmpsl
das
addb
ss
jge
enter
or
icebp
cmp
int
add
fldpi
adc
jne
push
pop
adc
in
sahf
pusha
push
stos
add
add
push
push
lods
inc
sub
sarl
jb
jl
jmp
xor
xor
xchg
push
jge
mov
lahf
icebp
xchg
push
pusha
aam
clc
jnp
adc
cs
js
ficomps
or
out
push
sub
mov
jne
jbe
xor
push
pusha
xchg
pop
sub
fiadds
imul
jne
or
addr16
data16
lock
rorl
out
pushf
or
lcall
std
pop
pop
mov
mov
jno
mov
insb
notl
loope
jbe
dec
jecxz
int3
or
push
mov
fisubrl
sbb
ret
dec
mov
popa
push
fmulp
and
js
dec
add
cmp
dec
test
popa
cmp
push
clc
add
xor
divb
pop
shl
inc
jae
xor
mov
lahf
popa
jp
lock
jl
in
add
scas
mov
mov
jnp
out
insb
mov
lahf
fcoml
pop
and
dec
addr16
xchg
dec
daa
cmp
popa
dec
lods
test
out
fmul
or
xor
lods
rcl
fistl
add
mov
testl
push
jmp
in
dec
add
mov
aad
hlt
cltd
dec
shll
mov
pop
icebp
sti
fildll
cli
dec
sub
jg
push
push
lds
outsl
cmpsb
fwait
xchg
mov
pop
mov
cmp
sub
xchg
pop
lcall
call
jl
xor
fisubs
jg
roll
jns
pop
lret
dec
mov
insb
pop
mov
push
int
rclb
cmc
lcall
sahf
pop
push
sub
xor
jp
sbb
mov
das
ret
aam
mov
sub
adc
mov
popa
mov
shll
aas
dec
jp
or
xchg
inc
scas
jno
adc
mov
xchg
out
cmp
dec
pop
adc
add
loop
dec
mov
cmp
mov
mov
hlt
js
add
daa
inc
xchg
push
nop
cs
dec
mov
jo
adc
out
pop
xor
stos
adc
lock
jne
pop
xchg
dec
or
inc
jge
mov
arpl
jl
sbb
push
sarb
push
aaa
out
into
push
clc
dec
lcall
pop
lahf
inc
push
mov
xor
imul
jns
jmp
je
fcmovnb
push
xor
test
mov
jl
lods
insb
push
int
cmp
add
scas
push
js
sub
cmp
xchg
xor
xor
cs
into
clc
inc
dec
mov
ds
nop
push
movsl
sti
loopne
xor
adc
cs
lret
lret
jo
pop
add
repz
sbb
divl
cwtl
cmp
dec
fisubl
out
fcmovnbe
mov
out
cmpsb
mov
inc
pop
sbbl
into
pop
push
or
jl
cmp
fcomps
xchg
xor
push
out
jge
icebp
or
xor
data16
cmp
int
push
inc
andb
cli
pop
xchg
mov
pop
mov
aas
lahf
xor
inc
std
aaa
push
iret
and
mov
shrb
in
fs
jb
mov
or
mov
roll
cli
cmp
dec
jo
lods
bnd
add
dec
sbb
pop
dec
cld
inc
daa
jle
dec
jmp
sub
fwait
lret
ret
sti
lret
mov
jb
int
and
pop
nop
push
adc
push
sbb
jmp
aas
rcr
loope
repnz
out
js
sbb
ss
xchg
xchg
or
inc
mov
and
imul
sbb
and
jo
lock
lahf
mov
xor
pushf
and
mov
inc
xchg
test
inc
cmc
push
out
and
bound
mov
add
les
repz
fcomp
mov
mov
cmpsl
xchg
fldenv
int
decb
dec
adc
mov
divl
xor
ss
lock
xchg
das
pop
test
push
sub
sbb
out
dec
out
insl
nop
adc
mov
add
pop
mov
xchg
inc
or
adc
push
sub
mov
or
sbb
jbe
sahf
shll
xchg
movb
adc
jae
mov
je
adc
xchg
out
xor
dec
mov
leave
mov
mov
lods
mov
nop
push
mov
and
imul
sub
and
mov
ret
dec
jbe
arpl
repnz
sbb
cmp
add
jp
movsl
sbb
dec
mov
test
je
jo
movb
fcompl
jl
add
and
adc
gs
or
stos
mov
aaa
not
dec
push
xor
pop
out
pop
adc
out
in
loope
fcompl
fxch
into
movsb
cs
lahf
add
shl
cltd
sub
push
ja
pop
aad
jl
xor
pop
mov
sbb
mov
xchg
movb
and
daa
jge
mov
es
mov
pop
and
adcl
push
outsl
test
notb
inc
test
scas
rcl
and
pop
push
pop
sub
out
push
dec
aam
dec
jmp
pop
mov
mov
sbb
inc
push
push
addr16
push
or
mov
test
mov
testl
insl
ss
movsl
jnp
hlt
and
jns
and
movsl
mov
push
add
dec
xchg
push
pushf
inc
mov
ror
pop
dec
xchg
push
inc
jle
push
push
jb
pop
fmuls
sti
test
js
aas
std
add
out
addr16
xchg
pop
sub
stos
or
mov
pmaxub
mov
int
cmp
ror
mov
iret
call
mov
xchg
add
adc
loopne
or
mov
shlb
jmp
adc
add
dec
out
mov
push
dec
xor
inc
inc
cmp
out
out
adc
test
inc
or
negb
push
push
cli
mov
push
into
xor
cmp
push
lea
roll
aad
push
dec
not
adc
mov
imul
popf
ret
mov
xlat
xchg
out
mov
movb
xchg
sbb
iret
inc
mov
jbe
clc
add
into
inc
xor
adc
repnz
inc
loopne
hlt
shld
mov
xlat
or
outsb
lds
push
aas
push
push
push
adc
add
and
adc
or
push
mov
clc
jmp
mov
int
sti
xchg
mov
or
sbb
int3
inc
mov
outsb
or
push
jge
xchg
jae
ja
fbstp
mov
push
shrb
icebp
ret
clc
add
push
sub
movsl
add
data16
repz
jecxz
out
mov
xchg
fnstcw
lret
jne
adc
cmp
mov
outsl
imul
popa
add
jns
pcmpgtd
mov
dec
mov
mov
jne
cld
lret
rclb
mov
gs
fistl
orb
scas
rclb
dec
and
cmp
aas
sarb
add
lds
push
in
pop
or
sahf
movsl
fisttpll
jl
jle
xchg
cmp
mov
cltd
enter
and
mov
xlat
xchg
insl
gs
fistpl
sub
movl
xchg
xchg
in
fadds
push
aaa
into
insb
sub
sub
inc
ljmp
jmp
test
mov
leave
cwtl
out
test
xchg
add
xchg
and
outsb
pop
push
aaa
mov
stc
movsl
stos
pop
and
cwtl
insl
and
xor
jp
jne
and
and
jno
int3
ret
mov
fs
das
mov
lock
dec
xchg
gs
jg
outsb
aam
cmp
dec
sbb
out
in
in
in
sub
sub
mov
xor
and
ret
push
mov
adc
and
dec
jne
out
or
sub
rcrb
cmp
dec
push
es
dec
jg
sbb
sbb
cld
cmp
xchg
adc
jge
dec
mov
repz
push
cmpsl
dec
testb
es
iret
mov
ret
mov
sub
es
and
mov
mov
xor
cld
jne
loopne
nop
pop
adc
pop
int
jle
pop
insl
pusha
or
xor
fwait
inc
push
movsl
xor
daa
xchg
mov
stos
nop
int
subb
mov
out
sti
xchg
movb
pop
xchg
inc
xchg
stc
divl
lret
and
push
cs
das
insb
mov
jp
sbb
xor
arpl
push
scas
dec
xchg
mov
cld
loopne
mov
mov
imul
fbstp
ja
add
mov
sbb
loopne
pop
mov
mov
outsl
xchg
pop
mov
clc
or
scas
lods
push
sbb
mov
aaa
arpl
xchg
jo
lret
dec
and
leave
pop
pop
movb
push
and
jbe
dec
sbb
pop
lcall
pop
mov
repnz
cmp
cmpsb
xor
jb
sbb
mov
push
jecxz
mov
xor
pop
nop
add
mov
add
lods
or
push
xchg
fs
cmp
jbe
fdivs
or
icebp
or
sbb
dec
dec
add
loop
jno
add
out
int3
jo
out
pushf
add
sbb
out
mov
imul
mov
mov
dec
xchg
sbb
rcr
inc
insb
pop
shll
and
or
cmp
jne
fidivrs
leave
adc
sub
inc
inc
jg
inc
outsb
push
adc
or
pop
jecxz
push
add
push
fstl
pop
call
push
jl
push
es
daa
int3
lret
scas
xchg
lock
push
dec
mov
dec
mov
push
lahf
sub
lret
adc
iret
add
imul
push
inc
push
mov
sqrtps
andl
imul
cmp
sbb
push
cmc
cmp
insb
jb
jmp
dec
ss
sti
and
inc
fnstsw
cmp
jmp
aaa
xchg
xor
jge
shl
int
mov
insl
ja
sbbl
mov
sub
push
xor
xchg
inc
rorl
outsl
loope
sti
add
pop
xchg
mov
xchg
and
aas
push
shll
movsb
or
push
enter
fwait
cli
mov
xor
fistpl
cmc
xchg
jo
std
or
mov
or
mov
ss
into
orl
sbb
aad
mov
mov
rol
pop
xchg
lahf
adc
dec
fidivrl
leave
mov
addr16
pop
cwtl
dec
out
push
push
cltd
add
mov
fdivs
sbb
ud1
repnz
xchg
scas
mov
xor
push
or
mov
and
add
je
xchg
std
cwtl
xchg
movsl
pusha
lahf
movsl
loopne
push
push
lret
and
pop
pop
push
into
push
outsb
mov
or
cmp
mov
xchg
push
adc
sbb
push
pusha
pop
fldenv
xor
inc
std
mov
sub
data16
movsl
jbe
cmc
outsl
test
pop
int3
shll
aaa
pop
mov
sbb
add
sub
fiadds
pop
push
jae
mov
lea
jecxz
mov
xor
movsb
fcmovb
in
aam
std
or
jl
ret
jge
mov
push
and
jo
mov
jns
sub
inc
xchg
mov
pop
pop
fisttpll
jmp
inc
lret
cwtl
push
sti
mov
into
movsb
scas
out
fwait
insb
out
sub
in
push
adc
inc
fstl
enter
cmpb
hlt
sub
or
int
push
faddl
into
xchg
xor
xtest
enter
sub
pop
insl
dec
push
xorl
or
push
pop
mov
test
and
mov
or
sbb
ljmp
jg
nop
mov
cmp
stc
shll
dec
push
xchg
dec
test
ss
push
sub
push
mov
mov
jmp
stos
shrb
dec
push
xchg
or
xchg
jg
out
jb
js
add
into
rolb
into
push
out
repz
stc
stos
push
shll
lahf
shlb
sbb
out
test
push
jbe
test
dec
mov
push
jnp
mov
push
test
das
xchg
adc
push
pusha
lret
xchg
stos
pop
push
pop
mov
mov
sarb
test
ds
mov
adc
test
mov
push
add
lret
je
sub
stc
jno
or
cmc
stos
jnp
mov
sbb
mov
xor
xchg
imul
mov
mov
les
sub
jno
fsubrl
mov
subb
lock
sub
mov
shll
jbe
aam
jecxz
mov
icebp
push
js
into
xor
mov
out
imul
addr16
add
stos
scas
sti
adc
outsb
or
out
mov
stos
rclb
mov
push
dec
outsb
movsb
mov
lcall
xchg
inc
and
pop
mov
outsl
or
xchg
loope
js
aas
or
adc
jmp
testb
push
or
lret
pushf
add
std
roll
idivl
stc
or
jmp
inc
cmp
lods
dec
addr16
sub
jbe
imul
push
xchg
je
mov
mov
sbb
pop
mov
movsb
cs
jecxz
jno
mov
mov
push
rolb
jbe
je
adc
mov
js
and
test
and
fwait
sbb
insl
xor
ss
in
addr16
jp
call
fwait
mov
insb
lahf
push
xchg
outsl
into
cmp
push
adc
repz
jns
lods
push
mov
data16
add
pop
js
in
stc
test
inc
mov
imul
arpl
push
js
xor
iret
cmp
pop
push
jle
mov
mov
mov
sub
cwtl
or
je
sahf
mov
loop
fcoms
jle
icebp
cmp
aam
mov
inc
add
push
push
jmp
xor
rcrl
dec
jae
pop
mov
das
popf
mov
inc
lahf
pop
hlt
inc
or
push
rcll
and
add
repz
sub
mov
push
mov
jne
push
push
jae
sub
pop
das
jns
shrb
subb
inc
mov
push
movsl
inc
mov
std
cld
lods
gs
xchg
jo
xor
jb
xchg
add
xor
push
cmp
cmp
ljmp
fxch
push
and
mov
dec
cltd
jb
mov
xchg
into
test
pcmpeqd
gs
aam
out
push
cli
mov
push
sbb
insb
or
rclb
cmpsb
sbb
xchg
adc
dec
dec
das
stos
loopne
mov
adc
int3
hlt
repnz
outsl
pop
outsb
inc
pushf
jbe
add
imul
cmp
movsb
int3
push
je
adc
sarl
fbld
subb
test
cltd
dec
or
rcl
jmp
fs
dec
fwait
daa
pop
xchg
mov
add
push
fs
sub
aaa
js
clc
jp
sbb
dec
and
mov
cmp
xchg
or
out
sub
fwait
or
daa
sbb
jo
and
push
pushw
stc
dec
fxch
pop
popf
cmpsb
adc
cltd
sub
arpl
inc
lret
sbb
aas
es
stos
mov
or
inc
sti
int3
sub
push
push
je
and
out
std
adc
dec
outsb
push
repz
jg
idivb
loope
addr16
ja
movsl
cmc
adc
mov
adc
in
mov
mov
out
dec
inc
out
pop
push
mov
out
fs
fwait
rolb
jmp
icebp
ljmp
cmp
cmpsb
arpl
add
enter
movsl
dec
test
arpl
int
add
ret
cwtl
push
add
outsb
sbb
pushf
jmp
icebp
stc
aam
lret
jb
push
cld
push
mov
or
inc
lods
fiadds
stc
pop
jmp
cmp
ret
movsb
inc
pop
shl
add
roll
test
pop
ss
add
dec
xchg
push
inc
and
loopne
and
sub
cmp
jnp
lock
in
dec
leave
mov
jge
adc
addl
ficoml
movsb
es
inc
mov
inc
popf
lods
subb
jnp
sub
sti
cmp
cs
sbb
or
push
xor
mov
scas
push
sbb
inc
dec
aad
lds
sti
pop
sbb
push
mov
lods
cmc
mov
cmpsl
push
mov
lret
out
adc
or
jl
lret
test
fcom
cmp
insb
jb
iret
shll
mov
fucomp
or
in
xor
jno
and
mov
cld
or
cmp
lea
in
int3
cs
shrb
dec
jbe
add
sub
jb
push
into
jg
jecxz
in
mov
and
ss
mov
xchg
mov
mov
xor
mov
ja
mov
ljmp
pop
mov
mov
leave
jecxz
aam
xor
adc
fucomp
daa
pop
push
jns
mov
or
and
gs
xor
push
fldl
outsl
mov
xor
cmp
push
and
fsub
pop
sbb
push
leave
in
dec
addr16
out
lods
pusha
shlb
leave
pop
dec
sub
fiadds
testb
jb
lcall
xchg
push
stos
repz
push
cs
add
inc
pusha
xchg
mov
adc
xchg
push
scas
mov
dec
mov
arpl
jae
rorb
mov
stos
loopne
inc
inc
subl
jge
sub
mov
aaa
arpl
mov
xchg
mov
fdiv
xchg
pop
jle
mov
push
inc
out
dec
add
xlat
hlt
and
mov
xchg
mov
inc
xchg
aas
add
pop
lods
arpl
ds
or
cli
push
cwtl
mov
cmp
and
fbld
and
mov
pop
sahf
sbb
jecxz
adc
adc
pop
sbb
xor
and
in
lret
and
mov
mov
mov
and
imul
out
aaa
xchg
stos
pop
lcall
push
mov
pop
adcb
sbb
lret
dec
js
imul
lea
iret
test
and
cwtl
insl
lods
push
mov
inc
fsubl
clc
outsl
repz
push
ret
adc
scas
fcmovnu
cwtl
shll
xorb
sbb
or
push
dec
pop
insb
movsl
into
adc
into
jl
inc
jno
inc
pop
jecxz
imulb
int
pop
inc
sub
lods
pop
mov
sbb
movsb
lahf
scas
gs
xor
aam
or
mov
imul
pop
scas
stos
xor
push
in
insl
or
lods
adc
sub
lret
mov
mov
std
jle
imul
sbb
adc
add
sub
aaa
or
test
mov
mov
sub
cmp
jmp
push
pop
arpl
inc
add
jnp
sub
notl
or
and
ror
pop
inc
mov
in
mov
add
or
add
mov
es
movsb
inc
sti
mov
data16
popl
inc
and
out
sbb
idivl
rep
adc
or
rcrb
sti
jecxz
adc
inc
jge
out
push
icebp
call
dec
sti
pusha
sub
ret
cld
add
push
jno
adc
sub
dec
rcll
jne
pop
push
xchg
add
mov
jns
mov
popa
push
jle
pop
xor
stos
jbe
mov
mov
data16
add
mov
enter
rcl
lea
faddl
xchg
idivb
dec
inc
dec
mov
cmpsl
mov
adc
adc
shl
iret
testl
mov
sub
lods
and
pop
mov
loop
jae
pop
in
jne
aaa
push
dec
mov
or
add
mov
stc
adc
pop
cwtl
or
fisttps
insb
repz
dec
and
jne
aad
imul
out
std
xor
lods
or
popa
sbb
incl
rorl
push
push
mov
aam
cmp
daa
jle
ret
add
push
inc
or
jb
aam
jo
mov
push
dec
sub
cld
sarb
pause
xor
call
mov
pop
and
repz
or
sbb
jo
scas
jl
ljmp
xor
rorb
xchg
mov
add
mov
lcall
push
out
test
out
xor
xchg
and
bound
popf
or
mov
adc
and
push
jmp
in
addr16
out
jb
hlt
and
dec
xchg
add
aam
inc
mov
inc
aaa
mov
mov
rcrl
cmp
das
notl
int3
jb
dec
xor
lret
rorl
lcall
or
xlat
test
dec
jb
mov
scas
fs
jns
out
in
add
cltd
push
cmp
out
and
jmp
fs
cmp
clc
in
sub
fbstp
inc
adcb
fnsave
insb
mov
mov
addr16
es
sahf
pop
daa
pop
into
and
fnstenv
insl
jns
fucomip
push
rolb
mov
fwait
out
pop
pop
mov
inc
sbb
popa
dec
adc
or
not
fisttpl
lock
xchg
sbb
and
fiadds
pop
test
pop
repnz
jbe
jno
mov
popa
push
cli
xlat
push
adc
pop
cmpsb
bound
and
rcll
push
inc
ficomps
mov
icebp
movsl
popa
add
add
pop
xor
test
inc
xchg
in
cmp
mov
and
cmp
adc
scas
cmp
jne
imulb
sub
dec
adc
xchg
jle
lret
xchg
jo
rcrb
mov
cmc
add
addb
xchg
sub
pop
dec
jbe
sbb
arpl
push
inc
repnz
lret
clc
jbe
test
ja
xor
enter
pushf
cli
xor
test
xor
sub
push
pop
mov
jge
rcrb
in
or
mov
xor
xor
aad
sbb
lret
add
pop
dec
lcall
jl
xchg
test
mov
xchg
cmpsl
xchg
mov
push
xor
push
add
sahf
xchg
mov
loope
pop
jl
adc
je
push
xchg
ljmp
fcoms
mov
and
xchg
dec
adc
jp
cmp
mov
sti
hlt
fadds
test
mov
mov
push
ret
cmp
in
repnz
scas
loope
jp
mov
iret
jne
lea
xchg
pop
inc
and
fst
loop
adc
lds
fcmovb
pop
cwtl
push
bound
movsb
out
inc
sub
push
int
sub
adc
mov
scas
xor
jle
loope
repz
mov
in
pop
push
xlat
mov
bound
sub
fmuls
mov
fwait
xchg
hlt
sub
cmpsb
scas
push
pop
jecxz
dec
or
stc
sbb
pop
aas
xchg
cmp
push
xchg
jge
aad
lcall
das
aad
mov
jno
mov
xor
insb
lods
int
arpl
sub
jmp
popa
push
lret
shlb
outsl
int3
push
xchg
xor
fwait
pop
dec
mov
roll
fdivrl
or
cmp
lods
mov
fldln2
pop
scas
or
rclb
rcrl
out
jge
stos
jae
mov
push
pusha
mov
and
jnp
lods
int3
aam
push
add
inc
pop
lock
fcomps
push
fcmovne
jbe
aaa
mov
sub
aas
push
xchg
adc
cltd
adc
out
cmp
cmpsl
aad
fsub
xchg
cmp
lret
fcoml
push
xor
mov
cmp
mov
mov
fsubs
pushf
dec
pop
mov
push
add
jnp
xchg
push
arpl
push
fnstenv
test
into
repnz
movb
adc
pusha
aam
xchg
in
and
xchg
xchg
dec
sbb
adc
push
jae
push
int3
frstor
xor
out
popa
xchg
rcr
and
pop
sbb
pop
dec
imul
dec
mov
pop
pop
sub
push
adc
inc
sbb
jmp
add
push
lock
imul
jbe
push
movsb
mov
xchg
and
push
fdivs
js
outsl
movsl
mov
int3
xor
push
push
dec
arpl
inc
or
dec
xor
lods
out
repnz
cld
push
dec
gs
addb
pop
xchg
lret
cmp
imul
cmp
ja
lret
inc
fdiv
push
mov
and
cmpsl
push
and
in
out
jns
lret
mov
mov
imul
int
lret
pushl
pushf
mov
dec
inc
pop
push
jg
add
imul
pop
ret
shll
cli
or
shlb
cmp
not
mov
adc
test
or
pop
dec
and
nop
pop
add
repnz
sub
inc
add
outsl
add
shl
mov
lret
addr16
repnz
fbstp
loop
push
lret
jno
call
popa
mov
mov
aas
andps
or
and
jp
lret
lret
dec
lahf
movsl
enter
ds
cli
pushl
ljmp
xor
ret
jbe
cmp
shlb
xchg
xor
int
iret
sub
rolb
mov
dec
push
mov
lahf
leave
xor
or
xchg
pusha
dec
or
pop
or
iret
movsl
lods
lds
scas
in
mov
test
jle
push
jnp
pop
mov
mov
mov
cmp
test
lock
push
pop
mov
ljmp
adc
mov
int3
cmpsb
nop
fs
sub
ljmp
mov
cmp
pushf
or
pop
bound
lods
push
out
in
mov
out
push
add
mov
inc
push
cwtl
je
and
dec
inc
sbb
xchg
int3
lret
aaa
rolb
fsincos
addr16
pop
add
adc
repz
mov
xor
push
fwait
jno
xchg
cltd
push
inc
rcrb
sti
xchg
and
inc
ds
insb
dec
push
ret
adc
movsl
cmp
cld
push
movsb
cmp
imul
imul
pop
xchg
sub
out
outsb
fndisi(8087
mov
test
sti
dec
fwait
cmp
and
int3
mov
cs
jae
mov
movsl
lret
int
pop
ret
fdivrl
inc
fisubrs
adc
push
jbe
mov
movsb
mov
cmp
xchg
jae
pushl
test
fmull
sbb
or
lret
lea
or
nop
add
iret
out
imul
aad
push
enter
cwtl
aaa
aam
and
je
loope
mov
stos
add
test
and
mov
mov
add
test
aaa
push
xchg
sbb
inc
jbe
rcrl
adc
pop
out
dec
mov
movsb
aad
fstp
jg
pushf
push
adc
stos
int3
outsl
mov
aas
rclb
rcl
repnz
lea
or
mov
sti
inc
ljmp
out
and
or
not
movsl
fadds
mov
adc
cmpsb
adc
lock
mov
lds
lret
xchg
test
jge
add
and
inc
sbb
lods
and
or
sbb
out
mov
xor
test
inc
hlt
push
out
pop
arpl
out
dec
rcrl
in
adc
adc
insb
mov
xor
pop
icebp
or
mov
lret
pop
xchg
push
scas
fbld
mov
sbb
inc
and
sti
sbb
fwait
mov
sub
sbb
adcb
cmpsl
scas
rcl
dec
notb
pop
xor
and
push
int3
pusha
test
add
cmp
aam
cmpsb
inc
sarl
out
and
pop
pop
push
pop
push
ds
stos
sub
sbb
in
push
inc
rcll
push
std
movsl
jg
dec
insb
xor
and
cmpsl
push
lock
jno
inc
mov
push
loopne
pop
fwait
in
mov
jge
cwtl
push
jo
pop
xchg
and
loop
les
lret
pop
inc
mov
sbb
cmp
repnz
out
mov
leave
jmp
pusha
cmp
and
add
mov
push
dec
test
or
jns
in
xor
mov
mov
loop
push
fadds
xor
incl
push
stos
nop
addl
mov
test
sub
fisttps
jp
sub
mov
rcl
sub
adc
stos
sub
mov
cmp
rclb
scas
xchg
js
xchg
clc
pop
loop
push
jle
mov
in
pop
cmp
mov
add
adc
add
inc
flds
push
sarb
cmp
sub
cltd
add
xchg
sbb
std
icebp
jmp
sub
test
dec
addr16
aaa
cmp
lods
add
adc
jb
mov
fstps
aad
fisubs
rcrb
outsl
cli
and
xchg
dec
shrl
inc
hlt
xchg
shll
or
out
aaa
mov
cs
jp
mov
ss
jb
js
jmp
mov
lcall
std
int3
pop
pushf
push
xchg
popf
pop
jo
pop
shll
outsl
loopne
lods
aad
xor
sti
mov
test
or
nop
push
fldcw
mov
lods
into
cmp
add
scas
iret
es
incl
or
aaa
orl
mov
or
add
sahf
sti
loopne
push
mulb
ljmp
xchg
mov
daa
add
mov
add
and
jp
pop
jne
xor
sbb
dec
cmp
rolb
inc
out
ja
out
fdivrl
push
jno
into
inc
arpl
test
aad
add
jp
aam
pop
lret
ja
and
repnz
jg
sbb
call
jb
lods
cltd
xor
movb
cwtl
cmp
mov
jge
ret
loop
test
jno
pushf
inc
loope
jae
out
jl
iret
add
lret
mov
mov
jb
cmc
mov
lea
xor
pop
sbb
mov
clc
mov
das
cmp
adc
rcr
sub
inc
mov
jl
ffreep
inc
pop
xchg
or
insb
xchg
xchg
mov
stc
mulb
out
jecxz
andb
shlb
sbb
xchg
movsl
push
icebp
sub
pop
rcrl
aad
cmp
mov
push
out
je
jno
fstl
movsb
xlat
cwtl
cmp
dec
clc
mov
stos
mov
mov
or
arpl
add
popa
pop
loopne
xchg
mov
repnz
xchg
movsl
dec
dec
push
pop
add
inc
sbb
cmp
lods
sub
out
testb
sbb
xlat
and
mov
xchg
filds
sti
and
add
mov
inc
xchg
or
ret
xchg
xor
mov
rcpps
and
sahf
out
fnsave
add
jne
call
xlat
jecxz
or
cmp
int3
outsb
mov
mov
sbb
lea
sbb
push
dec
pop
decb
shlb
pushf
not
cmpsb
adc
int3
or
lahf
adcl
pop
push
adc
scas
cmc
stos
mov
sbb
imul
hlt
pushf
ss
stc
add
lods
into
push
or
mov
add
into
xchg
lahf
cltd
in
rolb
addl
push
je
roll
inc
aam
or
outsl
idivl
aad
movsb
out
je
adc
push
pop
fadds
mov
push
repnz
std
insb
testb
push
jl
ja
xlat
inc
call
add
mov
rorb
movsb
fdivr
lret
xchg
xchg
pop
adc
leave
outsb
psubusw
jno
inc
push
into
outsb
out
cmp
bound
inc
xor
sub
mov
mov
insb
ret
pop
add
jbe
add
lods
cltd
call
and
or
inc
adc
mov
jne
or
testb
pop
std
dec
mov
pop
mov
pop
mov
mov
sahf
pushf
test
int3
xchg
inc
cli
imul
pop
mov
hlt
dec
test
sub
cmp
fstpt
aad
in
xchg
mov
adc
repz
add
mov
cmc
inc
mov
stc
es
mov
mov
jns
addr16
in
mov
out
push
loope
mov
sti
lret
sbb
add
out
outsl
rcr
iret
les
clc
adcl
rol
lret
popa
jecxz
cld
out
lods
les
mov
test
outsl
jno
mov
jae
push
in
push
jmp
xchg
inc
out
ljmp
mov
cmp
sub
fidivrs
into
bnd
orl
movb
adc
adc
andb
or
pop
test
out
add
push
sub
dec
mov
dec
imul
xchg
push
out
xchg
mov
push
dec
out
mov
dec
push
adcb
dec
rclb
scas
js
lcall
in
or
sub
movsl
jno
cmpsb
popf
pop
out
stos
ret
shrb
in
std
mov
mov
xchg
fmull
imul
jno
jecxz
mov
decl
outsb
mov
cltd
pop
xchg
fcoml
xchg
scas
loop
sub
mov
mov
add
ss
jge
fimull
outsl
push
mov
sub
test
sti
sahf
test
mov
mov
shrl
jmp
iret
js
sbb
ds
mov
insl
adc
fisttpl
adc
fcmovbe
cmp
aad
add
movsl
fldl
testl
jbe
int3
adc
imul
mov
and
pop
lret
hlt
push
xor
push
ret
mov
rcl
inc
push
rcll
leave
push
mov
scas
mov
stos
jae
mov
push
inc
lahf
insb
cwtl
ja
call
pop
not
mov
cwtl
sti
xchg
push
jne
into
inc
jne
jno
adc
push
pop
andb
fnstcw
mov
mov
inc
popa
add
dec
sub
sbb
rcrb
cmp
lret
ds
les
or
and
stos
dec
or
xor
mov
or
sub
lods
lods
jmp
or
adc
push
jmp
push
clc
out
test
adc
sbb
pinsrw
fwait
cmpsb
or
xchg
cmp
pop
jl
add
mov
and
mov
out
and
stc
dec
cmp
mov
ds
add
or
popf
sahf
adc
sub
adc
pop
lret
xor
into
mov
dec
fisubrl
adc
aas
in
xor
and
sub
sub
xchg
nop
jnp
mov
or
and
fst
or
ror
fsubrp
pop
dec
push
add
jae
inc
inc
add
push
cmpsl
mov
jns
xor
test
mov
into
aad
pusha
out
xchg
idiv
dec
push
mov
movsb
mov
sub
popl
xchg
add
fistps
xchg
and
lret
leave
lahf
sbb
sbb
fcompl
int
push
punpckhdq
dec
xchg
xor
lods
rorb
dec
popf
or
loop
mov
lods
add
push
ja
push
mov
cmp
inc
sub
adc
inc
fwait
push
fldcw
push
lea
cmp
gs
dec
or
popf
mov
pusha
icebp
dec
insl
lods
sbb
into
sbb
or
pop
inc
mov
pop
and
pop
mov
outsb
out
shlb
lahf
leave
pop
or
or
and
pop
nop
or
sbb
jmp
inc
pop
ret
mov
jmp
xorb
out
dec
inc
mov
into
jmp
mov
in
insl
negl
pop
into
stos
lds
push
mov
sub
adc
dec
dec
fucom
int3
stos
outsb
movsb
pop
xchg
mov
mov
out
std
sbb
push
sbb
mov
stc
inc
aad
push
cmpsb
out
mov
xchg
inc
int3
xor
jl
loope
cwtl
out
add
frstor
mov
xchg
xchg
xor
psrld
pop
in
lods
jne
push
cwtl
dec
addl
push
loopne
pop
xchg
scas
mov
mov
int3
cmc
add
mov
ret
sbb
enter
mov
dec
ds
add
cltd
loope
fisubrs
sub
nop
pop
insb
pop
adc
addr16
jbe
rorb
sub
inc
aam
mov
jb
repnz
lret
mov
sub
push
sub
and
int
jl
fstpl
insl
adc
xchg
fs
lea
aad
add
inc
cwtl
sbbl
sti
dec
xor
aam
cmc
push
xchg
or
mov
dec
jbe
mov
jp
mov
xchg
repnz
insl
lahf
nop
test
mov
xchg
xchg
jne
das
inc
pop
std
notl
jmp
or
mov
dec
popa
ds
rcl
mov
fisttpll
gs
push
xchg
and
stc
push
adc
push
sbb
stos
or
pop
or
insb
fildll
out
jne
leave
cmp
mov
add
dec
cltd
xor
inc
pop
pop
sub
mov
jp
loopne,pt
add
mov
mov
xor
inc
mov
gs
test
clc
sub
push
xchg
aas
fnsave
inc
mov
lods
mov
xchg
addr16
dec
push
push
sbb
data16
rol
xor
imul
in
cs
fcmovu
cmp
popa
xchg
lods
xchg
sbb
andl
mov
push
repz
xchg
imul
xchg
es
lret
cmpsl
xchg
push
sub
enter
jbe
lods
lcall
jo
fsub
dec
enter
jge
fadds
fxch
mov
in
xchg
mov
dec
mov
rclb
pop
pop
cs
fnstenv
jne
and
je
push
fdivrp
aaa
xchg
imul
sub
sub
xchg
sahf
dec
das
dec
jmp
jb
not
sbb
xor
inc
jno
call
sahf
repz
pop
mov
sbb
outsl
push
xor
clc
iret
pop
jmp
ljmp
sbbl
movsl
es
inc
mov
shrl
push
popa
outsl
or
repz
adc
push
push
iret
jg
sbb
pop
xchg
dec
lret
xchg
out
sbb
mov
sub
or
mov
out
mov
jg
lret
ds
jecxz
sbb
call
xor
ljmp
dec
push
adc
aam
jne
insl
sbb
adc
push
in
or
shrl
mov
sub
rclb
lret
sbb
leave
outsl
mov
dec
mov
push
or
mov
or
lret
data16
jecxz
push
stos
and
push
movsb
and
cmp
mov
inc
iret
lds
xchg
add
push
fdivrs
jae,pt
push
xchg
xor
fadd
adc
sub
out
adc
stc
pop
mov
movb
jnp
in
shll
dec
add
std
or
leave
stos
sbb
mov
fsub
jb
out
cmp
dec
lods
mov
repnz
and
xchg
ja
sahf
fcompp
inc
sbb
mov
sbb
lret
dec
mov
iret
ss
cmp
push
mov
fwait
mov
sbb
mov
cld
inc
pop
enter
daa
fcmovbe
out
push
fcoml
loop
xor
sbb
sbb
fnstcw
jecxz
lock
xchg
and
adc
jbe
jmp
aam
xor
ret
adc
mov
inc
add
push
test
mov
push
das
xor
outsb
pop
sbb
jl
and
and
mov
pop
lea
mov
stos
enter
into
jns
mov
cmc
sbb
fcoms
inc
add
xor
bound
cmpsb
push
mov
dec
inc
sub
push
sub
rcr
adc
fmulp
inc
outsb
stc
in
das
jl
call
fisubrl
lahf
leave
mov
sub
xchg
push
and
sub
pop
or
lret
testl
dec
sbb
rcl
jbe
gs
icebp
push
pushf
or
inc
dec
fisubs
dec
push
ror
rclb
mov
repz
dec
pusha
incl
lcall
sub
pushf
mov
mov
push
andb
movsb
scas
pop
fisubrl
cli
hlt
adc
lock
or
dec
stc
sarl
imul
jne
insl
mov
push
cmp
xchg
lret
mov
inc
test
ja
iret
add
and
or
loopne
dec
lods
push
les
cmpsb
jno
rcll
lds
jp
xor
movsl
xor
sti
lahf
dec
icebp
add
lods
iret
jmp
lcall
sbb
stos
jb
sarl
pushf
dec
fmuls
out
lock
adc
stos
in
mov
pop
pop
enter
or
test
mov
stos
mov
push
add
sbb
movb
fbld
sti
inc
jecxz
mov
popa
out
mov
loop
xlat
scas
mov
mov
clc
or
lret
pop
adc
repnz
arpl
rorb
pop
subl
bound
jg
jbe
mov
or
cmp
into
push
fidivs
nop
mov
fs
and
cmpsl
cmpsb
mov
lea
inc
rcl
out
jge
push
inc
sub
sbb
mov
loop
cwtl
mov
jp
sub
data16
cmc
jns
aad
pop
sbb
shl
lcall
les
cli
aaa
xlat
or
sbb
add
mov
mov
jl
decb
push
pop
gs
dec
out
jbe
aaa
cmp
movsb
push
jge
fcomps
insl
loope
decb
shl
stc
rcrb
jae
and
jg
in
es
into
sarb
jbe
mov
and
inc
repz
adc
sub
push
dec
xchg
aaa
fadd
icebp
sbb
movsl
repz
sbb
lret
jae
mov
sbb
add
rcrl
jns
not
and
and
xchg
aad
adcl
mov
xchg
mov
int3
mov
xchg
push
lods
jo
nop
leave
push
rcl
mov
jae
ja
int
loop
inc
sbb
inc
mov
sbb
inc
jbe
dec
adc
lret
xchg
ror
scas
movsl
xor
nop
sbb
jmp
insl
outsl
inc
iret
pop
incb
cmp
repnz
xchg
stc
mov
add
movsb
stos
pop
mov
in
add
cmp
lods
push
dec
aas
sar
or
jl
push
into
rol
cmp
aas
adc
add
in
popa
movsl
xor
sub
or
push
mov
mov
leave
xchg
lret
fidivrs
in
aam
cltd
cmpsb
or
push
imul
inc
aaa
ja
into
mov
out
adc
mov
add
aaa
push
shl
mov
sbb
nop
jmp
adc
sbb
cmp
xor
pop
std
xor
mov
mov
xlat
pop
arpl
js
xor
enter
std
jb
jle
add
pop
mov
mov
mov
test
loop
lock
mov
pop
sub
xor
mov
cmpsb
and
xchg
jecxz
aam
or
js
mov
xchg
aaa
bound
fwait
pop
aad
push
fstps
shll
rcr
lock
lods
mov
test
sbbw
jmp
jae
mov
data16
cmp
dec
lahf
dec
dec
ss
add
mov
dec
and
dec
inc
jge
xorl
cmpsl
leave
mov
or
mov
cmovo
and
rclb
add
jne
pop
in
pop
mov
shll
push
call
es
out
flds
ret
adc
scas
lret
jb
mov
lock
push
xchg
rorl
sub
dec
pushf
jbe
aas
out
add
cmp
imul
push
inc
mov
dec
jecxz
nop
lahf
addr16
push
and
lds
jmp
out
xor
pop
add
mov
or
sbb
adc
lret
cmpb
push
adc
jle
cwtl
or
pop
lret
dec
stos
in
xchg
mov
mov
cwtl
mov
popf
cmp
mov
stos
rclb
in
inc
leave
jmp
mov
dec
cltd
loope
inc
in
movsl
xchg
mov
xor
jae
repz
add
int
insb
dec
add
xor
dec
add
pushf
push
mov
ds
sbb
pop
imul
push
ljmp
jl
mov
dec
out
sbb
mov
out
pushf
rclb
mov
inc
ljmp
cmp
xchg
xchg
push
adc
iret
lret
icebp
inc
xchg
pop
xor
shl
repnz
popa
pop
add
pop
mov
not
sarl
outsl
jo
mov
es
int3
ss
push
jg
xchg
aam
dec
sar
adc
cmp
out
pop
jae
nop
pop
or
cmpsl
es
cmc
in
into
jle
test
out
inc
and
es
push
sub
insb
xchg
idivb
inc
mov
aas
not
push
fxtract
fildl
adcb
rcl
faddp
pop
mov
movsl
in
mov
mov
mov
pop
dec
fs
test
fwait
movsl
fidivrs
out
fidivrl
ljmp
inc
fsts
xchg
mov
insl
lret
mov
pop
adc
cmp
leave
das
xchg
sub
pop
int
sub
dec
mov
int3
adc
jle
int
add
push
in
jbe
sbb
lcall
insl
cmp
mov
xchg
scas
xor
push
mov
mov
mov
jmp
jle
pop
es
mov
push
aad
cmpsl
or
pusha
pop
mov
movsl
ror
arpl
and
sub
popa
sub
sub
cmpl
xchg
adc
mov
push
add
dec
lcall
jl
ljmp
or
dec
stos
notb
dec
add
xchg
in
test
adc
loop
mov
xlat
int3
loope
mov
dec
outsb
jg
or
xchg
sub
test
jge
insb
sbb
pextrw
cmp
mov
dec
push
lods
ds
mov
mov
stos
xor
imul
adc
xor
mov
jmp
nop
lea
or
arpl
jb
iret
in
dec
dec
jno
xchg
pop
push
inc
ret
or
popf
cmpsl
cmp
test
loope
fwait
push
and
xchg
fcmovne
cmpsb
clc
loopne
std
shlb
mov
inc
sahf
mov
jno
dec
fistl
cmpsb
leave
xor
movsl
or
jb
subl
je
mov
clc
shlb
inc
mov
sbb
je
shl
out
mov
addr16
outsl
add
leave
ds
fmull
push
or
mov
out
sub
jecxz
rcll
adc
sbb
stc
mov
out
jp
int
in
add
push
or
xor
inc
clc
xor
lods
push
aam
ds
push
mov
and
push
test
lds
lds
add
stos
loopne
dec
mov
xchg
and
mov
stc
and
dec
bnd
inc
imul
lock
lret
sbb
in
mov
mov
xchg
adc
and
fiadds
das
sbb
mov
cwtl
and
stos
adc
xor
ds
mov
pop
shll
int3
bound
add
push
push
cld
dec
popf
movsl
mov
mov
mov
jnp
add
cmpsb
adc
and
fs
cwtl
movsl
pop
sbb
sarb
nop
stos
ljmp
sub
fcmovnbe
pop
mov
sbb
les
sub
out
arpl
dec
add
dec
pop
aam
mov
in
sarl
jae
or
ja
dec
fdiv
shl
pop
into
and
das
mov
sahf
fcoms
pop
push
sbb
sbb
xchg
mov
push
in
packsswb
iret
rcll
loopne
push
adc
inc
jge
cmc
xchg
dec
push
data16
imul
imul
pop
ja
or
pop
xchg
and
out
cld
div
mov
dec
xchg
inc
loopne
test
and
add
and
add
pop
xor
xchg
int3
mov
pusha
and
rorb
aas
add
mov
adc
daa
cmpsl
lret
insb
mov
mov
lds
inc
out
add
jmp
jg
jp
fbstp
sbbb
xchg
sbb
mov
imul
xchg
mov
sub
mov
es
add
les
mov
dec
lret
jmp
out
stos
inc
or
aam
sbb
cltd
mov
sbb
out
push
or
sub
cmpsl
sti
cmp
mov
leave
loop
dec
add
dec
rorb
shlb
cld
stc
add
aad
aas
add
sbb
cld
mov
leave
cmp
icebp
and
jecxz
repz
mov
sub
push
fdivs
push
sbb
and
jns
ja
sbb
jmp
fs
mov
outsb
mov
jne
rcrb
ljmp
shlb
push
pop
fcoml
inc
fadds
movsl
outsb
repz
mov
mov
add
cmp
scas
push
and
dec
int
out
call
movsb
jo
in
insb
add
cmpsb
mov
jb
push
ret
push
sub
jno
test
ror
mov
push
push
push
aam
mov
and
hlt
jmp
or
mov
roll
in
aam
xor
ror
call
dec
sbbb
cmpsb
lea
or
or
xor
sub
dec
pshufw
aam
cmpsl
xor
leave
xor
sbb
cmc
in
mov
nop
pop
sub
movsl
scas
pop
and
lret
fadds
push
jns
and
stos
cmp
jecxz
or
lret
lods
mov
mov
push
scas
sub
lock
stos
push
stc
and
dec
mov
sahf
pop
fstpt
nop
sub
adc
inc
mov
jno
adc
xor
in
add
mov
sbb
or
xor
bound
xchg
in
enter
fldl
not
js
xchg
inc
and
fdivrs
popf
nop
and
faddl
rcl
pop
cmp
cwtl
pop
popa
jge
and
sti
sbb
scas
jne
call
mov
jae
mov
ret
mov
aam
jo
jb
add
add
xor
iret
cmp
enter
pushl
sub
adc
int3
adc
test
inc
xchg
cltd
cld
rcrb
sub
push
scas
cmp
stos
jne
mov
enter
dec
das
fimull
int3
clc
mov
pusha
cmp
or
addr16
into
or
lds
sbb
or
mov
add
xchg
into
jg
scas
xor
cmpsl
or
ds
call
jne
clc
jg
andl
in
int
and
out
popa
dec
data16
clc
fs
loop
movsb
outsl
dec
mov
push
int
xchg
push
incl
pmulhw
add
add
mov
jge
pop
xchg
gs
jecxz
stos
subb
lock
ret
push
addr16
mov
aam
ljmp
and
pop
cmp
sahf
ds
cmp
stos
jae
push
popf
sub
lods
lds
mov
jbe
test
or
bound
ss
lcall
icebp
xchg
clc
inc
das
add
mov
add
mov
mov
sbb
outsl
jnp
icebp
int
pushf
xor
lret
loope
nop
iret
fsubs
jp
cmp
add
push
repz
out
jno
jle
in
out
fst
scas
pop
pusha
and
or
sub
ljmp
ret
sbb
and
adc
jnp
outsb
lret
push
cld
data16
xchg
and
cmpsb
adc
xor
out
pop
mov
fdiv
cs
ss
add
into
pushf
jmp
scas
mov
hlt
ds
mov
rol
ljmp
stos
and
int3
int3
cmp
out
test
mov
ds
sbb
mov
arpl
addb
dec
mov
xchg
dec
rcr
out
xchg
movsb
fbstp
fwait
daa
or
enter
in
insl
add
and
adc
mov
sub
stos
mov
dec
inc
sub
in
mov
mov
into
out
mov
pusha
or
inc
jo
or
or
jmp
mov
out
jbe
lahf
mov
sub
scas
pop
imul
mov
mov
dec
mov
repnz
add
fidivrs
js
sti
cwtl
mov
roll
les
jns
pusha
add
add
push
push
stos
pop
popf
out
outsl
call
lahf
jo
push
rclb
pushf
inc
fstl
or
cwtl
lock
cmp
call
in
inc
cwtl
mov
dec
sub
lahf
jg
or
push
inc
xchg
mov
fldenv
pop
adc
pop
mov
jbe
js
loopne
mov
xlat
and
and
imul
xor
out
call
movsl
cli
lret
pop
into
add
ret
pop
mov
cli
pop
dec
push
inc
jle
xchg
lods
xchg
into
push
fcmovnb
mov
or
push
test
call
adc
das
ret
jnp
mov
je
scas
pop
jb
push
popf
fwait
jecxz
add
imul
mov
push
fisttps
xchg
add
aaa
jnp
inc
rcl
pop
mov
fisttpl
lahf
or
fisubl
leave
jnp
xchg
cmp
enter
adc
mov
push
mov
test
addl
dec
xor
jge
dec
ret
and
jecxz
lret
xchg
nop
in
xchg
xchg
xchg
jg
into
cmpsb
dec
mov
cmp
fmul
loopne
jbe
cld
icebp
and
dec
shrl
test
sub
iret
sub
or
sbb
mov
mov
shrb
push
xor
pop
in
add
xchg
xchg
jg
jge
sub
jmp
add
jnp
and
ficomps
mov
fcoms
push
lret
test
push
cs
or
mov
and
xchg
test
aam
add
lods
lret
push
push
xchg
rclb
inc
dec
arpl
fisubs
jge
shlb
xchg
jnp
inc
js
xchg
mov
add
outsb
lea
cmp
push
sbb
mov
mov
sbb
xor
dec
fildl
dec
out
idivb
out
ret
mov
dec
mov
mov
sub
cmp
fcom
leave
test
cwtl
and
hlt
mov
in
popa
add
jge
sbb
data16
fisttps
cld
push
int3
push
insl
xor
fdivrs
dec
leave
in
movb
cli
pop
aaa
dec
jb
popl
cmpsb
fidivrs
iret
cmp
decb
jno
inc
into
adc
sub
or
dec
cmp
jge
add
or
movsb
inc
mov
out
adc
sar
adc
cmp
or
xchg
mov
and
push
hlt
push
fs
mov
in
pop
out
out
insl
cmpsl
adc
sti
push
or
arpl
jmp
or
mov
jnp
retw
out
pop
xor
sarl
mov
rcrb
test
out
in
into
fucom
in
jge
ficompl
mov
sbb
pop
jo
ret
rorl
mov
clc
push
in
xchg
popf
testb
sbb
adc
iret
fisubs
aas
xchg
lret
and
insb
inc
lods
push
inc
xchg
sbb
cld
adc
mov
mov
mov
outsl
jp
sub
sarl
inc
movsl
adc
rolb
scas
dec
jo
call
add
cmp
cs
dec
enter
jl
dec
adc
int
addr16
push
repnz
ficomps
cwtl
popa
les
cld
mov
xchg
add
dec
add
or
mov
je
or
das
mov
mov
mov
and
ret
clc
fs
xor
fildl
cmp
push
mov
loop
jecxz
xchg
xlat
pop
pop
mov
repz
sbbb
or
ja
movsl
into
addr16
das
out
push
add
loop
mov
clc
fstps
and
cmpsl
shll
mov
das
nop
cltd
or
push
or
dec
test
ret
xlat
icebp
dec
mov
cmpl
mov
jo
std
push
hlt
stc
jae
in
enter
push
sbb
xchg
rorl
and
mov
insl
pop
adc
push
xor
scas
dec
sbb
lret
outsb
push
mov
jge
test
ljmp
les
cmpsl
stc
push
add
fcmove
inc
push
cld
sbb
addr16
es
imul
lret
sub
xor
pop
cmpl
aad
jno
scas
sub
les
xchg
shll
push
pop
lds
mov
jae
in
cmc
aas
pushf
ljmp
xchg
mov
in
loop
mov
cwtl
add
hlt
adc
rcrb
std
mov
mov
jo
js
and
test
int3
fcoml
xchg
mov
add
pusha
xchg
enter
jae
fs
push
loope
pop
mov
outsb
cs
add
or
rorl
cmp
iret
adc
sbb
les
lock
enter
xchg
sahf
cmpsb
or
adc
push
adc
iret
push
ljmp
and
clc
aaa
pop
xor
push
movsb
cltd
lcall
sbb
mov
sbb
jne
sub
xchg
orb
xlat
xchg
adc
fcmovu
pop
mov
cmp
imul
lret
xchg
ret
push
push
add
mov
push
cmp
xor
xor
sarb
cmp
adc
test
xor
es
add
lock
aam
mov
push
cmp
adc
lret
push
push
int
mov
dec
jle
xor
cmc
push
mov
and
and
cmpsl
loopne
jbe
jns
fsub
iret
xor
sub
out
mov
or
in
rcll
jo
out
in
push
and
jl
jmp
mov
sbb
int3
jne
jg
adc
out
stc
sub
xchg
inc
rcl
repnz
leave
adc
sbb
mov
ret
lret
xchg
push
in
mov
nop
add
mov
cmpl
mov
push
aam
jo
xchg
imul
mov
packsswb
aam
aaa
cwtl
icebp
out
jge
aas
in
or
movsb
jp
fimuls
lock
mov
cs
fmuls
jmp
fistpll
xor
neg
insl
rcrb
push
movsl
cli
pop
xchg
mov
cmp
mov
cmc
bound
and
lret
push
mov
dec
mov
sbb
push
jle
lea
ss
adc
pop
mov
dec
or
mov
popf
jbe
sub
test
lret
scas
mov
mov
and
orb
test
lock
insb
imul
rcl
and
xor
jbe
mov
xchg
sbb
xchg
jecxz
inc
push
sbb
subl
imul
jmp
or
mov
add
push
xor
pop
push
mov
leave
in
pop
mov
lock
pop
test
pcmpgtb
mov
pop
aas
popa
mov
lods
jno
mov
lret
mov
call
mov
sub
leave
cmp
jg
pop
xchg
add
sbb
mov
jbe
shl
clc
shlb
sbb
test
or
cmpb
xor
push
inc
push
int3
out
xlat
aas
cmp
pop
popf
or
rcll
popa
mov
xchg
ret
dec
fadds
in
divb
fidivl
nop
lods
dec
xchg
jecxz
mov
pop
movsl
clc
insl
mov
add
xchg
jb
lods
jg
mov
push
bound
test
ds
and
ss
cmpsb
stos
xchg
loop
push
inc
push
out
das
sub
adc
inc
or
out
mov
push
shrb
mov
es
loope
sub
clc
xchg
cmp
jno
inc
in
ret
mov
pop
mov
and
adcl
out
dec
into
xchg
push
cmpsb
jmp
shl
sbb
dec
aam
inc
mov
hlt
push
imul
cwtl
out
jo
out
add
pop
or
dec
xchg
daa
movsl
popf
inc
out
loopne
xor
xchg
pop
jg
push
cmp
mov
scas
push
call
push
mov
or
sbb
and
xor
pop
push
xchg
out
jns
cmc
adc
mov
and
scas
loopne
ljmp
arpl
aad
dec
outsb
jo
xchg
fmull
into
cmpsl
jecxz
and
add
adc
sub
push
nop
cmp
out
xlat
fcmovnu
jnp
pop
jle
cwtl
mov
test
mov
shlb
fmul
adc
pop
push
and
sub
cld
fbld
movb
sbb
test
repnz
jl
neg
dec
aad
pop
cmp
mov
lock
adc
add
push
shrl
push
mov
push
hlt
lret
jp
jo
pop
and
ds
xchg
push
xchg
inc
lret
or
faddl
jb
sub
lret
push
scas
cmp
mov
inc
pop
andl
cs
cld
sbb
cmp
pop
mov
dec
in
push
dec
sti
sub
adc
iret
ja
shlb
into
mov
inc
pop
icebp
dec
adc
inc
setb
addl
mov
sar
sbb
call
das
xor
fisttpll
dec
hlt
out
sbb
rorb
push
int3
mov
mov
mov
sub
pusha
adc
rcrb
imul
shll
fnsave
jp
into
pop
add
jnp
xor
stos
lret
int
mov
daa
nop
aam
mov
mov
out
into
push
xor
xor
inc
push
cwtl
repz
mov
pushf
push
test
adc
rcrl
push
roll
jbe
lds
push
push
aas
shlb
mov
je
pushl
stos
jg
std
jle
dec
lret
sub
sahf
sub
fsubrp
push
aad
mov
xor
jmp
jo
es
fldl
lahf
stos
dec
movsl
addr16
push
lret
add
aaa
xchg
sbb
data16
hlt
orl
mov
decl
cmpb
push
out
inc
jge
std
mov
mov
iret
movsl
mov
cmpsl
in
cmc
fnstsw
js
adc
mov
in
aam
add
jl
jno
or
jb
loop
lret
adc
mov
adc
add
sub
aas
cld
dec
add
ds
xchg
mov
push
add
addr16
and
ss
sti
mov
cmpsb
outsb
icebp
mov
es
jp
mov
push
out
cmp
mov
into
mov
pop
mov
or
movb
xor
in
inc
mov
lea
jl
adc
mov
outsb
in
nop
jne
pushf
arpl
xchg
and
rol
and
ror
dec
jns
mov
cld
xchg
iret
add
imul
dec
jne
cltd
jae
fwait
out
xchg
jnp
mov
jns
lret
inc
fiadds
lds
adc
xchg
dec
mov
sarb
push
pushf
sub
sbb
les
cmpsb
and
ret
adc
fcomp
push
cmp
jno
cmp
fwait
lret
es
ja
shrb
sbb
outsl
or
sub
ds
and
cmpsl
clc
ror
sarl
and
lret
cmpb
cli
add
repnz
push
in
or
pusha
std
cmpsl
xor
sahf
ficoms
rcl
aam
movsl
mov
xor
fwait
or
mov
dec
int
cmp
scas
adc
push
cmp
js
mov
jge
in
mov
mov
sbb
and
movsb
or
xchg
add
mov
jnp
in
leave
sub
mov
shlb
sti
mov
sub
leave
jecxz
rcr
fnstsw
dec
xchg
int
push
out
jl
jmp
adcb
fst
dec
fldt
fimull
out
test
xor
mov
aaa
xor
inc
sbb
jle
xchg
ss
sub
cli
jno
and
jmp
cmp
sbb
loope
push
dec
int
fwait
pop
leave
or
out
sbb
and
repz
xchg
jnp
cmp
inc
sbb
data16
int
mov
sbb
shrb
xor
outsl
popf
lret
pop
jae
xchg
xor
int3
adc
test
stos
lahf
ds
sub
adc
pop
fcmovu
lock
test
in
lret
push
out
loop
and
dec
mov
adc
jae
imul
sbb
sbb
aad
call
repz
add
jbe
and
dec
fistps
rcl
xlat
sbb
mov
in
jae
or
int3
or
test
jle
mov
inc
scas
stos
push
sti
movsl
xchg
popa
or
xchg
xchg
roll
dec
loope
jmp
mov
pop
mov
xchg
iret
jmp
and
out
fsubrl
shll
jnp
jnp
les
cltd
jne
dec
dec
lods
xchg
out
mov
mov
fstps
lret
cmp
sub
mov
cmpsb
cmp
jns
push
push
push
inc
pop
jle
adc
jg
and
pushf
les
jne
pop
fdivrp
and
pop
pop
js
push
sub
mov
lods
stos
das
sbb
xchg
or
or
or
or
xchg
xlat
ljmp
lahf
inc
mov
and
pop
mov
dec
test
push
pmulhw
inc
xchg
pop
test
lods
jne
jae
jle
sahf
jmp
loopne
inc
ret
jb
inc
and
call
xchg
outsl
mov
imul
std
mov
sbb
cmpsl
loopne
sub
push
jns
xor
mov
nop
aaa
call
mov
mov
inc
fcmovne
fcmovb
xchg
outsb
jnp
cs
push
push
rorb
bound
mov
fdivl
xchg
repnz
xchg
pop
loopne
mov
xor
inc
add
add
inc
test
fwait
adc
sbb
iret
inc
pushf
and
adc
pop
mov
popf
xor
js
mov
xor
sahf
leave
arpl
sub
add
mov
mov
int
scas
xchg
jno
sub
aaa
jae
rcr
cmpsb
jnp
jo
mov
in
adc
into
mov
lods
add
enter
jge
mov
es
mov
mov
pop
dec
aas
or
nop
lahf
push
scas
mov
filds
xchg
fmuls
lods
popa
int3
add
lret
xchg
icebp
jmp
int
movsb
xchg
shll
adc
add
mov
fisubs
cmp
aad
pop
dec
add
das
clc
out
fdivrl
leave
ret
mov
loope
subl
mov
aas
clc
das
mov
cmp
mov
xchg
jne
sub
pop
mov
stc
mov
pop
nop
lcall
outsl
inc
fsubrs
pop
ljmp
mov
mov
jmp
out
sbb
js
push
in
and
aam
jmp
or
xor
das
lcall
test
rcll
cwtl
test
notl
xchg
sbb
adc
sarl
pop
insl
icebp
adc
push
aaa
iret
mov
cmp
add
fadd
ret
push
data16
idiv
cwtl
int
leave
sbb
addr16
imul
and
xchg
push
es
push
inc
push
mov
nop
jns
not
out
stc
adc
xorb
sbb
loopne
cmp
xchg
cs
shl
out
add
cmp
fdivrs
ljmp
jb
mov
inc
push
jno
into
adc
push
xchg
xor
out
cli
mov
fcomp
fwait
jae
out
push
insb
movsl
dec
xchg
repnz
pop
sub
fsub
mov
es
data16
ret
and
jg
shll
jecxz
fisubl
pop
movsb
add
mov
cmp
xor
jo
fcmovnbe
mov
imul
fmull
sbb
lds
test
inc
dec
hlt
stos
or
jbe
loope
xor
mov
sbb
and
cli
xchg
adc
sti
pop
mov
movb
lods
xchg
pop
or
stos
xchg
adc
rorb
sub
movsl
xor
in
sub
sub
inc
cli
inc
fucomi
jne
scas
sub
mov
ja
xchg
hlt
and
cltd
insb
xchg
pop
test
mov
cmp
xchg
xchg
outsl
mov
arpl
sub
cmp
imul
data16
cmp
jnp
shll
dec
and
mov
int3
es
and
loopne
sbb
fs
mov
fwait
xor
fcmovu
cmp
mov
mov
dec
lret
addr16
or
add
pushf
sbbl
and
pop
out
push
lods
out
mov
jae
insb
sar
mov
xchg
pop
adcl
mulps
pop
mov
jecxz
inc
and
or
insl
aam
out
leave
je
add
inc
into
mov
fmuls
stos
adc
mov
hlt
sub
xchg
in
sahf
adc
pusha
dec
add
data16
mov
lret
xor
adc
jnp
sub
dec
pop
filds
in
mov
dec
dec
ss
pop
stc
ja
ror
push
push
aaa
pop
pop
fcoml
sbb
mov
mov
addr16
cmp
xchg
call
insl
cmp
push
inc
jns
cld
and
mov
pusha
push
xorl
dec
lret
inc
popf
and
stos
push
mov
mov
or
mov
pop
adc
sub
out
or
fadd
mov
pop
xchg
sbb
push
sub
push
cmc
jp
pop
add
jmp
push
or
mov
out
ret
ja
xchg
scas
hlt
movsb
jae,pt
mov
les
dec
add
jnp
rcrl
ds
mov
je
popf
pop
fcom
test
dec
inc
repz
mov
jecxz
and
loop
mov
mov
push
mov
jae
jmp
int
push
cld
rcl
inc
jo
add
inc
push
mov
sub
sub
cwtl
pushf
lret
int3
jecxz
jne
dec
fbld
dec
stos
xchg
mov
addr16
fmull
push
sub
imul
add
and
adc
std
dec
pushf
test
out
out
adc
mov
inc
iret
adc
mov
push
outsb
lret
adc
push
gs
dec
clc
push
int3
sbb
mov
cmp
adc
fistl
fadds
and
cmp
pop
test
mov
cmc
mov
aam
dec
cmp
subl
aad
mov
push
xlat
imulb
pop
inc
popa
aam
cmp
xchg
xchg
lahf
lods
or
rcl
xchg
mov
leave
scas
jp
cs
aam
shl
and
mov
cmpsl
or
push
je
cmp
jp
xchg
test
imul
mov
in
pop
into
int
dec
ja
clc
mov
adc
dec
mov
sub
scas
adc
mov
bsf
jne
push
loope
test
aaa
outsb
ds
push
shl
cmpsb
inc
rorl
stos
es
and
cmc
scas
movsl
movsb
and
loopne
cmp
dec
jmp
test
adc
leave
cmpsl
movsl
shrb
pusha
mov
or
mov
hlt
out
dec
and
je
push
aam
push
mov
inc
inc
mov
lods
cltd
adc
nop
mov
dec
movsl
pop
fcom
shlb
out
push
lret
adc
xor
mov
in
movl
int
jl
test
shrl
pop
in
psubd
or
hlt
jb
mov
imulb
mov
test
out
or
xor
cmpsb
sbbl
lods
mov
setg
inc
cmp
jns
mov
cmc
sbb
stos
xor
jbe
aad
sub
ja
orb
cmp
mov
aad
xchg
out
pop
leave
outsb
mov
out
push
cli
inc
pushf
xchg
fwait
push
data16
imul
shll
and
xchg
pop
push
je
loope
lret
push
dec
mov
cmp
std
inc
pop
xor
or
push
jg
outsb
fimull
icebp
test
xor
xchg
mov
pop
and
pop
add
sub
and
add
jl
adc
scas
cmpsl
into
fidivrl
cmp
mov
mov
sub
xchg
shll
cmp
lock
rcrl
sub
lret
ja
jp
pop
sbb
leave
inc
adc
lret
jge
xchg
test
cmp
sbb
push
sub
in
incb
dec
mov
insb
push
out
leave
or
xchg
mov
cmp
in
fs
mov
inc
or
adc
negb
cmp
pop
mov
cmp
adc
es
aas
lea
mov
cmpsl
mov
cs
inc
add
fstl
jg
jmp
cmp
inc
popf
xchg
fmull
dec
aas
mov
mov
rcl
mov
cld
xor
xchg
mov
pop
stos
arpl
cltd
or
mov
sub
pand
es
lods
in
dec
mov
xchg
xchg
and
out
add
addr16
and
mov
fcomps
das
dec
ss
cmc
pusha
call
jecxz
addr16
xor
je
lret
inc
cmp
pop
shlb
scas
leave
out
dec
lret
add
cmpsl
int3
xchg
pop
repnz
jb
out
cmp
andb
mov
inc
or
loopne
push
mov
dec
js
cwtl
pop
mov
inc
divl
lret
movb
push
sahf
insb
out
add
mov
fwait
or
outsl
inc
sbb
inc
cli
adc
dec
sbb
inc
add
inc
mov
mov
lods
cmpsb
clc
adc
ja
sub
scas
test
mov
fs
int3
and
out
jnp
sub
push
testb
and
fisubl
push
aam
mov
adc
aas
leave
add
test
test
add
lea
les
lret
jo
cmc
scas
cmpsb
inc
lock
mov
ret
pop
xor
jbe
cmp
sub
fwait
cmc
add
jnp
movsb
repnz
mov
mov
jp
stc
mov
icebp
insb
stos
add
push
pop
test
cmp
test
mov
xlat
ret
outsb
inc
sbb
jns
int3
xchg
or
fimull
mov
push
jge
pop
jo
roll
insb
lret
cli
lods
adc
imul
call
daa
imul
jbe
std
jne
mov
and
addr16
jbe
or
aam
pop
add
sub
jmp
popf
dec
pop
mov
rclb
mov
icebp
ss
xchg
cwtl
ret
xchg
cld
scas
fs
adc
sbb
mov
mov
cmc
imul
movsl
movsb
mov
icebp
lock
mulb
adc
imul
jmp
insb
icebp
push
lahf
mov
sbb
jmp
add
aam
inc
and
mov
adc
mov
aad
xchg
cmp
jbe
inc
mov
out
cld
lods
xor
orl
xchg
jecxz
xor
aas
dec
call
iret
je
test
xor
inc
dec
into
sbb
enter
add
sub
pop
cli
shrb
cmpsb
xchg
fisttps
ret
inc
mov
out
fs
xchg
push
sub
pop
insl
xor
inc
sub
mov
iret
mov
call
cmp
decl
xchg
xor
dec
ds
sbb
dec
push
icebp
shl
rcrb
inc
push
sbb
mov
and
repz
inc
into
dec
xchg
movsb
stos
dec
xchg
out
pop
lock
lds
addl
push
add
or
rclb
bswap
add
or
aaa
rorl
xchg
ljmp
fs
je
cmp
xchg
dec
stos
and
push
mov
lods
std
sub
jbe
xor
addr16
cmp
mov
mov
sbb
jne
inc
mov
adc
shll
gs
and
jbe
or
fiadds
pop
cmp
jmp
sbb
sbb
loopne
inc
ror
stc
sbbl
sbb
xchg
fildll
push
adc
aas
cmp
sbb
enter
out
fistps
xchg
pusha
sub
out
inc
jae
inc
loope
filds
jo
or
add
loopne
push
push
cmp
jle
push
cmp
adcb
jecxz
sbb
ljmp
fucomi
pop
int3
push
mov
pop
push
in
int
inc
test
mov
mov
sbb
insl
addb
xorb
out
out
xchg
jle
jb
mov
sbb
jae
or
pop
cmpsb
iret
mov
or
mov
jnp
std
jmp
stos
mov
cmpsl
fiaddl
clc
mov
push
pop
out
hlt
int3
and
call
or
push
mov
push
jno
adcb
in
cmpsl
adc
inc
scas
inc
mov
push
push
out
xor
out
push
jno
mov
mov
jg
popf
adc
mov
or
mov
xadd
or
rcrb
mov
mov
jbe
xor
mov
fldenv
mov
loop
cld
cmp
ret
out
mov
xchg
ret
stos
fs
enter
sub
jne
push
push
mov
lock
iret
and
mov
or
inc
jle
or
and
cmp
call
in
movb
cwtl
lcall
xor
out
in
test
movsl
mov
sub
ret
pushf
inc
dec
or
insb
mov
add
push
mov
test
test
lea
pop
hlt
data16
xchg
nop
adc
xor
movsb
jmp
add
pop
push
push
dec
sbb
sub
fdivrs
pop
sbb
xchg
jbe
jge
pop
add
mov
movsb
lods
jle
xchg
addb
mov
mov
mov
mov
fcmovb
fwait
subl
xchg
sub
aas
test
mov
es
loopne
xor
adc
clc
mov
dec
out
inc
aaa
in
jmp
lret
pushw
test
or
sub
mov
lds
cmc
mov
mov
jns
shrl
pop
outsl
pop
push
les
xor
movsl
mov
adc
jne
in
mov
push
pop
test
mov
movsl
jp
outsl
lret
mov
gs
ljmp
cmp
pop
ds
lea
push
xor
push
or
jae
loopne
popf
push
mov
mov
or
dec
push
inc
lret
stos
add
mov
add
cmp
xor
imul
rclb
and
xor
or
out
add
stos
or
jo
mov
scas
leave
pop
and
jp
pop
cmc
jmp
mov
push
sbb
push
xor
sbb
push
pop
cmc
jmp
xchg
mov
outsl
sub
loopne
clc
push
cmc
ja
cmpl
add
adc
out
xchg
mov
mov
fldl
jnp
pop
cmpsb
mov
popf
jmp
lret
mov
push
stos
insl
and
jno
sbb
fcom
das
enter
mov
call
leave
ret
stos
jbe
dec
fdivrp
sbb
les
adc
inc
pop
shll
add
shlb
xor
out
dec
and
pop
push
pop
xorl
addr16
and
movsb
cmp
andl
movsl
and
outsb
mov
mov
and
sahf
leave
push
pushf
pop
push
add
add
sub
int3
hlt
dec
mov
pop
pop
sar
push
in
inc
inc
aad
nop
cltd
cwtl
cs
fldt
enter
daa
sti
scas
loop
mov
in
xchg
add
js
enter
sbbb
pusha
mov
cmpsb
push
push
mov
sbb
repz
adc
rcll
movsl
adc
sbb
xor
sub
cmpsl
mov
int
loope
jecxz
cmp
jmp
outsb
jp
clc
add
sub
and
push
shlb
pop
pop
ret
push
mov
cld
xchg
ret
clc
sub
jecxz
pop
mov
lcall
mov
mov
inc
sub
sahf
loope
clc
test
ss
ds
mov
mov
add
outsl
mov
es
lock
iret
lret
jp
or
dec
repz
fsub
shr
js
mov
cmc
pop
add
out
cmpsl
lcall
aad
add
aam
push
pop
lcall
rorl
jge
js
fstps
mov
xchg
pop
scas
es
dec
aam
enter
pop
add
pop
test
scas
dec
adc
push
xchg
repz
sub
mov
dec
loope
and
xlat
sahf
cltd
std
popf
out
test
mov
xchg
into
jae
pop
in
xor
push
outsb
add
aaa
test
ror
add
clc
jmp
incl
mov
inc
test
pusha
loopne
mov
ja
xchg
lahf
pop
arpl
orl
jne
in
call
and
lods
or
js
sti
push
fdivp
insb
ljmp
pop
jp
xor
aaa
cwtl
inc
stos
lods
fldcw
out
sti
lret
call
fidivl
sbb
lock
and
ss
popa
sub
xlat
arpl
loop
les
jbe
shrl
jl
imul
adc
je
or
mov
movsl
loop
mov
and
dec
aas
sub
xchg
ret
jb
fildl
into
xor
push
adc
mov
hlt
jbe
sti
in
inc
push
xchg
pop
pop
es
stc
mov
mov
add
push
mov
in
daa
and
out
hlt
sub
imul
lret
xor
jecxz
pop
insl
push
sub
lahf
stos
into
sar
out
out
fwait
mov
mov
or
push
je
adc
test
movsl
les
repz
mov
cli
xor
ljmp
jge
mov
cmc
jecxz
sbb
imul
mov
push
rcrb
iret
in
je
add
pop
and
pop
out
inc
jp
push
icebp
pop
add
cmp
xor
mov
xlat
xchg
stos
test
enter
mov
into
jbe
out
or
imul
fsubs
ja
cmp
inc
outsl
daa
in
and
lock
xchg
stos
xor
mov
outsb
xchg
cmp
int3
push
cmp
inc
icebp
aam
or
sub
push
jp
js
sbb
arpl
loope
or
xlat
je
push
movsl
mov
xchg
push
and
mov
xor
or
test
cmp
icebp
jmp
ficoml
scas
ds
incl
dec
mov
xor
jae
notb
dec
insl
mov
xor
push
cwtl
push
jge
sbb
add
imul
inc
cmp
ljmp
scas
dec
mov
movsl
into
lock
ds
int3
xlat
ret
mov
int3
and
scas
nop
sbb
pop
gs
lock
lods
movsl
inc
mov
pop
xor
dec
stos
xorb
jmp
aaa
ficomps
dec
mov
push
scas
imulb
jns
ret
insb
inc
xor
pusha
and
repz
iret
int
sub
popf
dec
lcall
mov
fwait
in
or
sbb
sub
ja
sbb
lret
pop
and
cmc
pop
push
cltd
push
push
pop
jp
mov
mov
movsl
xchg
mov
push
mov
sub
aaa
out
insl
xchg
movsb
lods
fs
pop
enter
mov
aas
pop
leave
pop
cmpsl
pop
inc
pusha
mov
movsl
fldenv
incl
fldenv
and
faddl
stos
imul
in
pop
mov
mov
stos
scas
out
add
int
mov
insl
sbb
or
xlat
mov
subb
add
push
mov
lods
mov
rcl
bound
sub
pushf
mov
xor
sub
addl
adc
test
jne
repz
adc
repz
adc
es
sbb
arpl
dec
push
inc
xor
lret
aam
insl
xlat
inc
int
add
mov
lods
divb
imul
xor
inc
adc
orl
repnz
sub
push
frndint
aad
inc
ljmp
popa
pop
stos
fwait
idivl
xchg
push
je
lret
sbb
adc
lret
push
fwait
sarb
in
inc
push
jbe
aaa
sbb
or
jo
scas
xchg
aaa
jcxz
sub
push
fdivrs
aad
fstps
or
sahf
dec
mov
cmp
pop
fnstcw
test
clc
lcall
pop
pop
outsb
sub
push
sub
or
push
xchg
inc
mov
pop
lret
cltd
cmp
inc
push
or
iret
aas
and
fwait
addb
dec
push
sbb
cmc
andl
out
out
fwait
dec
add
cmp
add
cmp
out
adc
cs
mov
push
int
cwtl
jns
fsubr
imul
sbb
jl
inc
xchg
jg
ss
or
adcb
ficompl
and
pushf
jb
mov
and
add
dec
xchg
adc
dec
mov
jp
addb
jns
and
icebp
mov
or
xor
push
adc
pop
mov
dec
repz
push
jne
push
xor
xor
or
clc
xchg
mov
dec
addl
pop
sahf
repz
test
stc
dec
inc
in
std
aaa
jae
push
movsb
inc
and
lret
testl
lds
aam
arpl
pop
movsl
sbb
mov
push
sbb
cmp
ffreep
dec
ret
add
add
std
orb
out
subl
jb
leave
or
adc
mov
icebp
or
inc
push
xchg
xchg
push
push
push
cmpsb
jnp
sar
or
ret
or
aaa
test
out
fdivs
mov
add
mov
cmp
int3
inc
mov
push
jae
cmpsl
cmc
lea
stos
bound
out
pop
cwtl
inc
mov
movsl
and
cmp
les
xlat
pop
movsb
push
mov
out
mov
sbb
xor
push
outsb
mov
loop
and
std
cmp
adc
pop
ja
pop
push
subb
and
rcrl
push
inc
dec
dec
mov
fnstenv
and
cmp
clc
mov
shll
adc
jge
cld
jae
int
push
aam
and
jmp
add
insb
inc
dec
sarl
jge
aaa
or
jp
adc
clc
lret
ss
and
or
jns
dec
push
iret
mov
inc
dec
mov
xchg
inc
jbe
sub
jge
gs
rcl
jecxz
or
pushl
fisubl
mov
je
or
enter
push
mov
cli
into
inc
pop
jbe
stos
sbbb
cmp
mov
dec
adc
pop
stos
daa
rcl
push
ljmp
divb
dec
sbb
shlb
cmpsl
sahf
flds
cmp
scas
arpl
and
insl
cwtl
or
jae
jb
sub
rcrb
into
nop
pop
adc
ss
push
loop
nop
jmp
in
lods
cmp
es
fadd
aaa
pop
xchg
insl
push
or
mov
jl
sub
cmpsl
xchg
ja
sub
sbb
jge
fbstp
fcom
faddp
push
cmp
mov
ja
mov
testb
and
pushf
pop
mov
xchg
jge
cld
fdivs
bound
rorb
inc
inc
daa
xchg
cmp
in
lret
fists
test
out
mov
add
xor
push
imul
popa
jl
cli
jbe
pop
xlat
sbb
hlt
int
or
or
and
pop
push
mov
fsubrs
sahf
mov
sub
pop
negb
or
scas
push
scas
pop
lock
fcompl
push
or
shll
inc
lret
mov
out
add
sub
std
mov
enter
dec
xchg
push
stos
movsl
nop
test
rorl
cmp
lret
pop
cmp
jne
sub
ret
in
xchg
ljmp
fsubl
call
add
xor
loope
shl
inc
je
cmp
pop
clc
mov
scas
cmp
rol
mov
in
dec
mov
pusha
movsl
leave
aas
pop
cmpsl
or
jnp
dec
jns
push
mov
xlat
inc
mov
jo
outsl
hlt
cwtl
adc
js
das
ja
stos
into
jns
and
lcall
mov
arpl
mov
test
test
inc
movsl
sub
mov
outsl
fistps
mov
fs
sbb
mov
jmp
fsubs
cld
adc
or
pop
mov
mov
mov
std
stos
aam
mulb
pop
and
add
dec
out
loopne
fwait
inc
add
mov
sbb
out
rolb
rcl
ds
add
stos
sub
test
insl
lods
add
jge
fnstsw
out
xor
add
xor
mov
and
mov
cmpsb
xlat
into
das
and
sub
pop
pop
test
mov
cmp
cmp
adc
les
orb
xchg
or
hlt
sahf
insb
aaa
cmp
xchg
faddp
popf
loope
adc
lret
leave
call
pop
and
rcl
or
mov
fadds
push
fadd
dec
outsl
add
dec
lret
dec
and
in
sahf
pop
bound
or
loop
mov
mov
xorb
or
pop
lret
arpl
fwait
cmp
sbb
xor
and
jmp
cmp
out
dec
add
scas
xchg
add
ret
lods
mov
mov
arpl
imul
mov
fwait
jmp
lahf
push
lods
fdivr
pop
push
dec
pop
mov
js
adc
cmp
mov
fcomps
subl
cmpb
xor
sub
popf
andl
rep
push
mov
popf
dec
push
test
aaa
dec
xor
xor
insb
and
inc
insl
movsl
ja
shrb
test
aaa
push
cld
lahf
jmp
xchg
sbb
sub
sbb
fldl
mov
pop
lock
or
cmp
adc
imul
xchg
loope
in
mov
orl
add
adc
lea
test
daa
cmp
pop
mov
mov
mov
mov
mov
xor
test
xor
pop
add
mov
sbb
and
aaa
stos
add
in
sub
jno
ds
inc
push
push
cld
and
add
pop
loop
mov
push
dec
lret
mov
dec
lods
cmp
lock
push
xchg
mov
daa
mov
xorl
inc
pop
out
fsts
xchg
fdivl
inc
sti
pop
sub
cmp
jns
push
jne
adc
jno
mov
inc
popa
lret
pop
jl
sub
mov
cwtl
inc
add
in
adc
jns
xchg
sub
iret
fisubs
test
scas
mov
cmp
pop
mov
rolb
xorl
loope
mov
test
dec
xchg
jle
push
xor
shl
xor
enter
ret
jmp
js
lock
cmpsl
jns
in
adc
ljmp
daa
cld
push
ret
pop
jcxz
rorl
xchg
and
jle
loope
pusha
mov
and
into
xor
dec
rcl
xor
jecxz
jmp
lahf
std
fwait
push
xchg
sub
cli
xorl
inc
mov
inc
stos
inc
push
je
xor
mov
lret
insl
push
push
sbb
push
pop
mov
mov
pop
xor
cmp
pop
js
sub
adc
xchg
pop
xchg
stos
xchg
mov
mov
mov
pop
andb
adc
sub
out
movsl
adc
adc
pop
cmp
xchg
mov
leave
fisubl
into
aaa
sub
add
pop
inc
insb
outsl
sub
xor
out
mov
ret
dec
cltd
and
push
leave
lock
cli
mov
adc
adc
mov
pop
fcoml
jg
cmp
xor
xlat
js
jae
testb
xor
clc
test
push
add
adc
lcall
inc
repz
and
js
mov
mov
xlat
insl
pop
mov
std
daa
stos
aam
arpl
mov
movsl
clc
push
int
pusha
inc
lcall
sbb
gs
or
es
rcrb
leave
sahf
insl
push
loop
stos
mov
aam
pop
call
mov
insl
je
mov
and
test
inc
jbe
or
aaa
lock
xchg
lcall
add
repz
cs
push
sub
fmuls
sbb
push
and
jnp
ljmp
pop
mov
fmuls
mov
push
fmul
jg
aam
ss
hlt
sti
fsts
fdivp
outsl
dec
fwait
popa
or
aad
jnp
mov
pop
insb
aam
xor
cmp
inc
or
sub
out
repnz
es
jne
xchg
fsubrs
fstps
sub
cld
leave
and
rcrb
js
ret
or
add
adc
cmp
jb
dec
call
mov
pusha
ja
cmp
push
dec
mov
xchg
jb
ss
es
dec
je
dec
scas
pop
sbb
and
arpl
pop
jmp
fdivrl
dec
lret
dec
inc
mov
sarb
outsl
cmp
push
inc
sbbb
hlt
pop
adc
xchg
inc
shrb
sbb
mov
adc
imul
push
pop
cmp
xor
push
test
sti
leave
xchg
test
gs
pop
dec
not
sub
cld
mov
imul
out
mov
test
push
notb
ss
xor
repnz
pop
jmp
cmp
cs
or
jg
je
xchg
das
mov
subl
inc
jecxz
adc
aad
cmpsl
sahf
mov
jno
sub
sub
iret
or
sti
pop
jg
insb
jmp
push
push
mov
cmp
jmp
mov
jae
sbb
or
lods
mov
lea
cld
push
jle
mov
cwtl
fsubr
rorb
mov
pop
xchg
sbb
xlat
xchg
arpl
fisttpll
ss
sub
arpl
popf
ljmp
ds
imul
lods
sbb
mov
sbb
adc
or
adc
leave
sbb
cli
movsl
test
into
jmp
push
sub
sub
mov
dec
mov
nop
notb
pop
push
or
out
test
clc
pushf
xor
dec
pop
sub
aam
sbb
dec
and
xchg
xchg
dec
lret
mov
mov
mov
add
pusha
mov
dec
rcrb
xchg
pop
mov
fsub
leave
les
icebp
adc
inc
aas
stos
das
push
add
push
es
lea
fdivrs
shrb
fwait
stos
scas
mov
jo
or
jo
std
xchg
adc
aam
stos
popa
dec
pop
int3
pop
leave
pushf
xchg
jb
pop
orb
lods
adc
add
cmp
pop
out
loope
es
adc
cltd
jmp
leave
mov
mov
cmpsb
bound
dec
xchg
loopne
out
dec
insl
ja
mov
leave
fs
xchg
movsb
les
jno
imul
cltd
iret
movsl
pop
add
push
inc
or
ja
xchg
pusha
mov
xchg
push
aas
cmpsl
add
inc
mov
out
push
pusha
adc
int3
lret
push
xor
xlat
test
stos
or
sub
das
iret
insb
mov
cmp
addr16
dec
cmc
adc
xchg
outsb
xchg
or
pop
mov
aad
into
hlt
push
mov
push
mov
cmp
mov
jbe
push
xchg
jp
jae
arpl
jne
cmp
and
xlat
push
andb
adc
push
jecxz
addr16
push
cmpsb
das
adc
ds
test
jmp
out
xchg
outsb
sti
dec
inc
in
fimull
pop
cld
adc
jle
push
mov
leave
sbb
loopne
fsubrs
push
in
cmp
sahf
emms
flds
xor
jo
outsl
push
fimuls
jne
and
movsb
lock
hlt
mov
int3
mov
jbe
adc
fadds
add
add
add
fdecstp
or
cwtl
movsl
inc
pop
add
adc
out
out
jge
mov
lahf
cmp
xchg
push
rol
lds
and
mov
jo
fucomi
dec
int3
inc
pop
inc
push
ret
xchg
rorl
sahf
filds
mov
loop
mov
adc
or
pop
repz
cmpsl
xchg
into
xchg
nop
xchg
mov
aam
int3
xor
adc
adc
or
jae
ret
dec
xor
aad
cmpsb
sti
jo
lock
gs
test
dec
mov
icebp
inc
repnz
xor
aas
ss
and
jo
fs
jbe
ds
ja
mov
dec
out
jb
pop
jmp
inc
mov
push
addb
int
ficomps
lret
jns
out
mov
or
mov
pushf
outsl
mov
insl
movsl
sub
push
popf
pushf
push
pop
cmpsl
aas
mov
pusha
ljmp
mov
or
mov
push
jp
data16
pop
fsubrl
sti
dec
pop
je
shlb
scas
mov
fmul
pop
popf
dec
inc
or
push
je
dec
aaa
and
add
idivl
mov
mov
cmc
dec
sahf
lahf
xchg
push
dec
loope
push
push
xchg
mov
ret
mov
imul
inc
pop
add
sub
mov
and
sub
bound
add
xor
push
sbb
repnz
aam
xchg
dec
cltd
sahf
xlat
or
roll
pop
pusha
dec
and
loope
jno
add
out
dec
rorb
mov
mov
push
pop
cli
dec
lcall
pushf
faddl
out
mov
mov
dec
insl
xchg
push
cmp
fstps
or
mov
adc
push
nop
inc
js
push
mov
mov
shrb
into
pushf
cmp
rclb
lea
cld
inc
push
pop
push
aad
sub
test
out
adc
push
and
imul
pop
out
cmp
xchg
mov
add
xlat
enter
pop
push
test
dec
pop
fchs
inc
pop
shr
push
daa
xor
adc
push
loop
dec
shrb
or
pop
add
and
jne
ds
lret
or
adc
and
ja
dec
mov
das
out
std
es
mov
push
pop
pusha
dec
mov
sbb
jp
add
push
mov
fs
arpl
sub
data16
push
cmp
or
dec
mov
mov
rcr
aaa
imulb
popw
cmc
out
cmp
repnz
mov
movsb
mov
repz
sbb
cli
jp
test
lret
mov
enter
add
pop
imul
cs
leave
lock
std
xchg
push
sbb
outsb
push
movsb
mov
jp
inc
hlt
shlb
je
jne
mov
imull
movsl
mov
mov
addr16
daa
and
mov
loop
mov
cs
aam
aad
push
lea
xlat
faddl
pop
xchg
out
hlt
mov
adc
dec
mov
in
popa
dec
jge
leave
dec
and
mov
xchg
shrb
mov
outsl
lret
push
pop
dec
jbe
push
xchg
xchg
xchg
sbb
fsubrs
mov
lcall
idivb
aaa
push
or
xchg
aam
int3
cltd
sahf
ljmp
or
pop
push
xchg
fidivrl
call
sbb
sbb
push
rorb
fmull
sbbb
aaa
hlt
insb
outsb
dec
mov
andl
ljmp
rcrl
stos
rcl
xchg
mov
pop
repz
ret
push
mov
out
push
mov
fadd
int
lret
or
add
repnz
repnz
aam
imul
in
popf
cld
mov
push
ret
pop
mov
push
adc
dec
inc
pusha
lret
xchg
popf
mov
sti
mov
mov
lret
push
movsb
movsl
dec
mov
bound
cmc
push
sbb
xchg
add
aam
sbb
inc
gs
jne
sbb
je
dec
push
pop
inc
std
test
or
out
dec
ret
inc
add
add
repnz
test
sbb
std
fidivl
loopne
pop
pop
jmp
clc
lea
push
stos
xchg
push
shrl
xchg
fdivs
push
jne
test
lds
push
pop
shr
pop
mov
xchg
adcb
in
pop
ds
cmpsl
enter
shl
out
imul
dec
ds
sarb
sbb
inc
sbb
xor
push
loopne
test
sub
int
cmp
in
xor
add
fmul
ljmp
js
ror
shrb
jnp
out
popa
sbb
mov
scas
jl
sbb
jbe
xor
jae
push
out
add
xchg
loop
insl
repz
xchg
rcl
xor
push
jns
dec
ja
shll
jmp
and
cmp
push
push
fiadds
push
lret
roll
adc
adc
xchg
dec
xchg
addb
enter
lahf
sbb
or
out
push
mov
push
clc
push
push
jb
xchg
arpl
popa
xor
push
pop
sub
dec
mov
add
outsb
add
jns
test
addr16
iret
push
mov
lret
in
xlat
into
mov
and
pop
push
pop
into
jl
mov
lahf
add
add
inc
pop
pop
dec
aam
js
mov
das
or
mov
orl
js
xchg
outsb
sbb
fisubs
ret
imul
adc
push
shll
jbe
sbb
adc
ja
shll
loope
cmp
xchg
push
adc
xchg
pop
fisubs
aaa
mov
pop
test
mov
jmp
hlt
sti
pop
and
jp,pt
mov
sbbb
xchg
xchg
cmp
stos
push
and
nop
leave
sti
jns
jmp
dec
lret
cwtl
scas
cmpsl
fdivl
mov
xor
cmp
sbb
fcoml
int
inc
jns
fcmovu
dec
pop
pushw
outsl
pop
add
pop
pop
cli
sahf
ds
inc
test
out
ficompl
or
sub
es
mov
xchg
insl
sar
aaa
je
outsl
sbb
repnz
mov
fisubl
hlt
adc
xchg
mov
stos
rcll
mov
push
hlt
out
mov
push
sub
stc
mov
ss
add
ficomps
shll
adc
inc
mov
dec
dec
out
insb
aam
aad
sub
push
or
pop
not
aaa
cmp
sbb
mov
lahf
popa
mov
mov
mov
jmp
jo
bswap
clc
fldenv
out
mov
push
ror
sbb
jo
and
mov
sub
jmp
or
jno
in
ja
ljmp
icebp
outsl
and
sub
lret
loop
mov
test
sahf
or
sbb
sbbb
push
cmc
jae
pop
lods
aad
sbb
sbb
mov
stos
sub
jmp
sub
sbb
push
push
roll
outsl
dec
dec
stc
lock
jae
xor
dec
cmc
fdivl
in
ds
out
iret
cmp
xor
jle
pusha
ret
out
mov
lahf
addr16
inc
scas
push
push
xor
pop
lcall
test
cmp
xlat
xchg
push
sub
test
out
repz
adc
or
ljmp
or
inc
out
test
jae
jp
mov
or
mov
or
pop
mov
das
in
xlat
imul
mov
imul
xchg
inc
sub
cs
lret
gs
pop
arpl
repnz
jae
int
pop
int3
push
xchg
loopw
or
adc
jo
dec
imulb
sub
push
add
push
out
addl
sbb
lcall
jbe
push
mov
push
das
mov
es
sub
sbb
xchg
cmp
out
fistpl
inc
shlb
push
out
fwait
jge
aaa
push
mov
push
jbe
imul
jp
adc
shlb
pop
xchg
xchg
or
sbb
dec
inc
lret
jmp
sub
out
lret
out
lahf
fisubl
lock
sbb
dec
movsl
xchg
idivb
jmp
add
test
movsl
loope
dec
mov
rcrl
add
sub
fldt
into
mov
mov
mov
repnz
insl
stos
add
pop
xchg
sbb
cmpsl
pop
push
and
mov
add
imul
fiadds
pop
jns
out
mov
sbb
test
sbb
xchg
fnstsw
stc
clc
xchg
lret
std
sub
lock
in
jmp
movsb
adc
jne
bound
movsb
dec
dec
inc
inc
mov
enter
cmc
js
stos
lods
rorl
push
adc
pop
push
imulb
aam
mov
adc
xlat
jmp
adc
mov
mov
out
lock
sbb
popf
outsl
ss
scas
pop
mov
jmp
sub
push
and
ss
lods
mov
and
and
or
loope
lret
mov
bound
xchg
repz
adc
in
mov
cmp
in
add
jno
dec
imul
jae
lahf
loopne
ja
movb
push
jbe
roll
scas
outsb
xchg
cmp
cld
aam
mov
adc
in
dec
xor
scas
out
mov
dec
leave
dec
xchg
xchg
out
sbb
shlb
jmp
pop
not
push
jbe
mov
pop
xchg
mov
arpl
out
loopne
fcoml
xchg
adc
fdiv
scas
ficoml
xor
cmp
sub
lret
mov
cli
push
dec
flds
shl
xchg
inc
push
xor
dec
lods
jle
or
adc
pop
add
popa
xchg
push
cld
xchg
mov
push
aad
adc
push
test
shll
lret
jecxz
push
inc
stc
hlt
idivb
inc
out
int
xchg
dec
cltd
into
arpl
pop
push
popa
dec
push
xchg
mov
sbb
mov
sahf
gs
mov
inc
stos
xchg
dec
testl
ja
push
imul
push
pop
ljmp
stos
pusha
nop
dec
or
cli
out
outsl
pop
ljmp
jecxz
dec
and
cmpsl
testb
xchg
fsubr
mov
mov
cwtl
xchg
mov
sbb
test
adc
stos
xchg
add
cmp
in
mul
iret
pushf
dec
into
out
adc
adc
lret
out
mov
dec
xor
aaa
xlat
cld
xorb
lds
push
cmp
sahf
push
imul
fldt
adcb
pop
xor
or
aam
add
out
loope
rolb
rol
mov
sti
movsl
mov
adc
bnd
cmp
addr16
subb
mov
sub
enter
outsl
cmpb
fldl
mov
push
xor
jmp
lret
mov
jmp
loopne
in
or
shlb
push
fcmovnb
and
pop
push
adc
iret
aaa
fsubrs
aad
inc
das
out
sbb
rcrb
lret
mov
in
push
sbb
out
shll
test
cmp
mov
jmp
jl
mov
testl
jl
sub
ret
leave
rolb
rorl
loopne
adc
dec
icebp
fs
mov
and
xchg
repnz
ds
out
fisttps
lret
out
test
mov
fisubl
push
xor
into
sti
int
cs
pop
push
adc
xor
inc
push
es
mov
fsubs
repnz
fucomp
add
mov
jns
sahf
push
pop
xchg
cmp
dec
adc
push
xlat
adc
adc
push
stos
scas
jp
sub
lret
xor
shl
sub
jb
pop
scas
repnz
fs
mov
aam
pop
jns
dec
sbb
xor
gs
out
add
hlt
sbb
lret
adc
mov
dec
scas
lret
jne
repnz
int3
jle
inc
test
mov
imul
mov
mov
hlt
ds
ret
push
pop
insl
in
mov
fistpll
js
je
xlat
pop
in
inc
movb
cmp
leave
aam
sub
xchg
jle
cld
inc
jnp
hlt
data16
add
imul
cmc
das
inc
dec
dec
add
sahf
xchg
adcl
enter
sbb
xor
fiaddl
cli
dec
or
mov
imul
mov
rcr
mov
cmp
jmp
mov
adc
andl
aaa
sbb
enter
imul
push
cmp
xor
pushl
xchg
pop
test
or
push
lods
aam
bswap
push
or
mov
fisttps
mov
jmp
inc
cmp
lahf
iret
into
daa
jmp
add
aam
jb
into
sarb
pop
subl
scas
and
sarb
mov
cmpsl
xchg
adc
pop
loop
mov
imull
mov
popf
lcall
lret
je
ds
cmpb
push
das
add
add
pop
sbb
cmpsb
mov
aam
push
roll
out
sbb
mov
hlt
aas
lock
push
mov
and
shll
adc
pop
cmp
mov
loopne
aad
into
adc
hlt
enter
scas
inc
mov
inc
in
push
clc
loope
repz
lret
lahf
dec
push
xor
push
add
aas
inc
add
mov
shrd
loopne
movsl
xor
xchg
and
cwtl
inc
test
sbb
ja
nop
mov
in
lods
mov
iret
add
cli
pop
add
sub
scas
jg
and
jae
fwait
sbb
adc
jbe
repz
into
or
push
andl
cltd
jno
xor
subb
test
sarl
jne
pop
push
pushf
jns
lret
cmp
sbb
leave
call
lahf
pop
add
and
cmp
jle
fnstenv
or
ficoms
xchg
mov
out
jge
in
mov
icebp
loope
int3
int
xchg
nop
sbb
ss
add
push
fsts
jecxz
lret
inc
lahf
mov
cli
xchg
cs
mov
arpl
mov
sub
cmpb
stos
mov
pop
xor
and
data16
ljmp
cmpl
andb
sbb
xchg
ret
divb
fdivrl
out
clc
xchg
mov
flds
xchg
out
mov
dec
ljmp
inc
xor
dec
cmp
mov
xchg
xchg
iret
mov
cmp
pop
test
jge
add
lret
lods
cmpsb
xchg
ds
aam
mov
ja
mov
adc
add
sub
sub
test
movsb
out
dec
fs
ficompl
cmpsl
xchg
mov
cmc
aas
sti
cmp
test
loopne
into
jle
icebp
or
push
fcomi
cld
andb
in
push
xchg
ret
push
jo
or
stos
jns
ljmp
cmc
mov
jbe
push
xlat
jg
and
int3
jbe
push
sub
jo
and
mov
mov
lret
aam
jmp
lock
in
pusha
arpl
inc
pop
dec
sbb
inc
out
addr16
dec
xchg
and
push
pushf
test
ljmp
aaa
sti
xchg
sbb
gs
insb
push
xor
stc
cmc
lcall
mov
jno
pop
fdivrs
arpl
popf
mov
mov
jmp
fucom
pushf
test
push
in
out
fsubrs
inc
xchg
jge
lock
xor
jp
sbb
into
es
jns
mov
lret
js
pop
pop
sub
jnp
push
inc
jb
dec
fcmovnbe
xor
dec
push
insb
sarl
mov
and
sbb
dec
jne
mov
in
mov
outsl
pop
popf
lahf
push
cmp
lock
dec
pop
fs
mov
lahf
fldl2e
mov
xchg
shr
sbb
pop
pushf
fildl
mov
popa
sbb
xchg
push
jo
js
push
or
mov
mov
cmp
sarb
test
lcall
nop
lock
jge
sub
daa
or
stc
mov
jne
cmp
jb
lock
add
mov
aas
adc
not
sarb
test
aam
fwait
jp
ds
inc
sbb
jns
insb
popf
jbe
loopne
fwait
je
int3
inc
test
pop
push
jmp
mov
mov
int
mov
push
sbb
adc
pop
jle
pop
add
or
in
add
mov
loop
jae
dec
test
dec
dec
fidivrs
sbb
xchg
push
jge
iret
shrl
cmpsb
loopne
or
and
dec
and
mov
lcall
xchg
push
cs
outsb
sub
sub
lods
jge
inc
pop
sbb
aaa
jg
or
inc
test
ret
adc
gs
mov
sbb
dec
pop
inc
cmpsl
icebp
xchg
ja
int
ja
push
shl
into
sti
loop
push
in
dec
and
pop
adc
xchg
outsb
xor
or
mov
mov
mov
inc
outsl
sub
dec
stc
dec
jl
lea
push
push
mov
ror
icebp
xor
pop
sub
subb
or
sbb
imul
jge
test
out
daa
movsl
not
ja
inc
adc
data16
pop
push
mov
inc
inc
mov
pop
ja
scas
jecxz
shll
das
cwtl
jae
std
pop
pusha
jnp
int
lock
into
mov
mov
jg
inc
sub
dec
movsl
push
jmp
sbb
rcl
jno
mov
mov
pop
push
movsb
mov
jnp
in
adc
test
fs
sub
add
fwait
mov
push
xchg
jmp
int3
sub
add
popa
adc
int
xor
outsb
dec
push
inc
scas
ja
pop
mov
lcall
mov
pop
adc
adc
jbe
jge
nop
cmp
or
std
dec
imull
in
gs
pop
nop
or
add
xor
mov
jne
loop
adc
shrl
out
mov
or
pop
or
push
pop
arpl
push
shlb
in
fwait
aam
add
pop
xor
decl
jb
xlat
clc
and
outsb
xor
dec
les
xchg
aam
filds
jnp
and
ss
shll
xor
add
lds
lock
loopne
fsts
push
push
and
cmc
lret
xlat
pusha
lret
into
arpl
clc
test
mov
ja
dec
xchg
push
xor
sub
mov
jecxz
and
sbb
push
test
lret
jb
xor
iret
sbb
mov
dec
dec
inc
aaa
int3
sub
mov
xor
rclb
mov
and
je
fistpll
xchg
push
cld
stos
lcall
adc
adcb
insl
cmp
ds
insb
fcmovbe
sub
xor
jno
push
add
aad
cmpsb
lods
adc
xchg
inc
mov
lahf
or
into
in
stc
push
jns
incl
push
inc
jbe
stos
out
mov
xor
repnz
addl
stos
cli
js
scas
icebp
inc
dec
xchg
fbld
ret
jbe
xor
sbb
in
sbb
jge
fldt
rclb
dec
fisubrs
aas
jno
in
out
shll
push
shll
push
or
jmp
pushf
dec
icebp
mov
out
sbb
cli
int
add
add
mov
in
push
jae
inc
sub
sub
xchg
data16
cmp
or
and
inc
cmpsl
into
aad
adc
xchg
mov
xor
and
sahf
lret
add
push
jmp
lahf
jns
adc
movl
mov
add
dec
pop
aas
int3
lods
ret
pop
ss
dec
fucomi
pop
jg
mov
dec
stos
filds
add
dec
adc
leave
out
jns
mov
jge
push
mov
mov
sub
rclb
insl
rcrl
add
inc
mov
into
jae
les
aam
cmp
jne
pop
fnstcw
inc
jae
sarb
xchg
ret
hlt
shll
test
cmp
inc
push
inc
push
sub
cld
adc
xchg
stc
dec
pushf
pop
fsts
xor
lock
fs
in
jne
mov
push
cmp
pop
repz
dec
aas
hlt
jae
dec
stos
lea
push
insl
and
xchg
sti
outsl
sahf
loopne
jo
push
pop
lret
sbb
add
mov
pop
sub
pop
stos
cmp
or
cmp
dec
add
dec
sbb
andb
sti
shlb
add
in
inc
and
cmp
sbb
push
fdecstp
pop
xchg
insb
lret
jbe
data16
sbb
repz
inc
out
sahf
out
jne
push
fstps
arpl
int
popf
mov
push
andl
push
jl
aad
leave
adc
or
mov
push
cli
stc
cmp
shlb
insb
pushf
lods
lret
push
data16
negl
or
shrb
and
mov
into
fdivrs
mov
mov
inc
ja
inc
xor
jmp
xchg
aaa
scas
xlat
push
pop
int
push
push
ss
inc
insb
xlat
je
loop
out
xor
push
movsb
mov
nop
fiadds
ret
adc
fwait
lret
imul
cmpb
mov
lds
mov
outsb
mov
xor
hlt
inc
inc
mov
mov
stos
lods
xchg
in
jo
sub
in
rcll
fldcw
sbb
sbb
aaa
test
mov
out
mov
int3
xlat
dec
leave
clc
ret
repnz
lock
dec
in
rcrb
mov
ret
rorb
push
dec
into
xchg
in
into
sbb
testl
lret
xor
add
test
mov
cmp
inc
out
sti
fstpt
div
sub
mov
xchg
cmp
mov
push
scas
fwait
jo
repz
pop
push
daa
rorb
inc
sbb
sub
mov
aas
xchg
or
push
jae
xchg
cltd
sub
out
arpl
test
xchg
jb
out
jmp
xlat
fcmovbe
mov
or
cmp
std
xchg
xchg
cmpsb
addr16
mov
dec
cmp
jp
shlb
je
pop
ja
fdivp
clc
xchg
mov
jnp
sti
test
pop
add
sahf
aad
mov
dec
aaa
and
mov
adc
pop
pop
sbb
xchg
mov
jnp
es
or
pop
push
xchg
bound
std
xchg
aad
popa
cmpb
mov
jbe
sub
into
fs
roll
pop
out
jnp
popf
pop
adc
sub
add
leave
sbb
repnz
scas
cmp
loop
cmpl
lret
jge
dec
rorl
mov
stc
lret
fwait
ret
or
or
adc
es
pop
sub
inc
and
pop
jp
scas
xor
ficompl
lock
out
mov
xchg
pop
ret
cmp
or
lret
pop
add
mov
inc
repnz
ss
dec
mov
cmp
je
sub
push
add
xchg
stos
sub
adc
mov
mov
or
into
push
lcall
test
jmp
and
stos
adc
sub
push
xlat
ljmp
adc
and
jbe
dec
stc
sbb
inc
xchg
test
cmp
dec
pop
faddl
sahf
mov
dec
mov
xlat
movsl
pushf
xchg
mov
loop
aam
icebp
imul
int3
sbb
push
push
iret
xchg
dec
pop
mov
cwtl
lret
aad
pop
mov
jbe
add
inc
mov
cmpsb
aas
ret
sub
mov
movsl
lods
aam
add
fdivs
mov
aad
sti
pusha
jp
mov
pop
negl
pushf
aam
dec
or
out
pop
inc
mov
or
mov
aam
mov
and
jp
out
idiv
pushf
adc
out
ret
add
cmp
cmp
aam
stos
scas
pop
pop
add
push
in
clc
mov
push
aad
mov
mov
xor
fstps
or
cmp
xor
das
lea
stc
or
or
add
add
ds
std
jmp
or
xchg
pop
mov
xlat
inc
call
dec
pop
ljmp
xchg
cld
or
cmpsb
cli
enter
and
xor
dec
out
sub
xchg
rorl
jbe
and
cld
xor
mov
pusha
fcompl
pushf
jb
loope,pn
out
pop
sub
dec
adc
fs
xchg
push
loope
gs
pop
pop
push
lret
sub
inc
mov
cmp
mov
xchg
dec
xchg
inc
aaa
clc
nop
inc
lds
and
popa
push
mov
pusha
scas
cmpl
addr16
inc
xor
mov
add
mov
mov
fimull
push
or
dec
or
cmpsb
ss
int3
arpl
mov
ret
dec
mov
scas
push
clc
mov
adc
in
jp
pop
out
pop
stc
mov
fnstcw
test
push
lcall
mov
out
stos
xchg
dec
jnp
dec
mulb
cs
or
ret
ss
dec
mov
mov
fmuls
jge
clc
ss
push
push
andb
mov
pop
lock
lds
dec
jmp
out
jmp
xor
shll
mov
xchg
inc
push
enter
inc
dec
jl
xlat
cltd
cmp
adc
xchg
loop
in
bound
out
jp
xchg
into
xor
jg
movsb
sti
rcll
mov
rorb
sbb
push
lods
push
adc
hlt
sub
push
push
into
cmp
mov
mov
jno
hlt
pusha
and
pushf
mov
fwait
rol
dec
stos
sub
mov
cmpsb
or
cwtl
dec
jno
xchg
push
pop
inc
inc
das
rcl
out
std
adc
in
rorb
add
in
fstl
stos
in
adc
mov
push
xchg
loopne
push
ds
dec
fcmove
xchg
ds
jbe
push
cmp
lock
out
dec
xchg
test
xchg
imul
inc
cmc
push
or
fistpl
dec
pop
ja
mov
clc
cmc
js
int3
sbb
jmp
ds
je
jae
or
xchg
iret
mov
outsb
adc
ret
xchg
nop
aad
inc
push
pop
inc
sub
imul
cmp
mov
scas
addl
icebp
cltd
jo
mov
repnz
loop
push
pop
int3
imul
rcll
std
stos
jle
mov
pop
sbb
ret
aas
mov
mov
xchg
loop
lds
cmp
push
jg,pn
mov
out
aam
imul
or
rolb
testl
cmpsl
out
sahf
gs
add
out
push
inc
mov
mov
jp
and
in
or
daa
dec
int
test
xchg
les
repz
shrl
mov
cmp
imul
ljmp
push
dec
push
cmp
push
lods
mov
incl
icebp
outsl
pop
sub
or
push
add
xchg
xor
mov
sahf
pop
pushf
into
subb
push
aam
test
lea
shrl
cwtl
ss
push
cmp
xchg
mov
pop
movsl
inc
mov
push
sbb
lret
fstps
ljmp
lea
inc
std
jecxz
mov
push
push
aam
dec
fistl
into
ja
fisttps
cmpsb
mov
nop
xchg
aad
mov
mov
push
loope
ss
loopne
inc
pop
mov
cmp
daa
pusha
jne
lods
sarb
and
and
inc
mov
mov
fcom
push
scas
sub
int3
call
dec
or
mov
into
cli
sbb
enter
add
fildll
cli
loope
mov
pushf
cmpsb
dec
sub
mov
dec
mov
filds
mov
xorb
dec
dec
mov
xchg
loopne
movsl
pop
pop
cmp
aad
pop
pop
sbb
pusha
inc
fbld
pop
sbb
cmp
inc
rorb
mov
mov
cmp
cmc
clc
mov
sahf
xchg
loopw
into
xchg
aam
shrb
or
jbe
or
push
push
dec
imul
lret
xor
es
aam
gs
jb
mov
lret
je
mov
stc
inc
aam
sub
pop
stos
inc
or
cmp
jmp
mov
outsl
lret
pop
push
lods
xchg
and
pop
push
adc
into
add
jbe
dec
jmp
pop
mov
insb
dec
stc
mov
xchg
xchg
mov
lret
push
xlat
mov
push
adc
scas
dec
adc
fdivp
mov
test
push
dec
fldt
cmp
or
jecxz
js
xor
jbe
xor
shrb
pop
jbe
test
stos
and
cmp
pushf
lret
pop
xor
fdivrs
mov
inc
inc
xor
sub
pop
into
xchg
xchg
rcll
lods
hlt
xlat
jae
mov
dec
or
xor
sbb
mov
add
jb
adc
sbb
xchg
jne
xor
sub
fwait
in
mov
stc
loopne
pop
sub
lds
adc
ja
sub
mov
scas
mov
dec
xor
dec
cmpsl
stc
and
aaa
jg
cli
dec
imul
daa
and
pop
add
xchg
and
popa
in
das
mov
pop
andb
flds
xor
dec
nop
dec
arpl
addb
bound
sub
aaa
jl
and
insb
add
out
adc
sahf
fstpl
sbb
pop
pop
inc
cs
sub
pop
std
aam
and
adc
xchg
mov
in
test
xor
mov
dec
movsl
inc
xchg
movsl
push
xchg
mov
dec
rorb
fmuls
xor
dec
loope
test
add
stos
lock
mov
scas
inc
sti
lods
push
pop
sbb
cmpsb
int
mov
scas
test
mov
hlt
imul
xchg
xchg
aas
or
or
jbe
stc
or
inc
pop
les
xchg
cmp
jmp
xchg
pop
xchg
pop
mov
iret
cld
pop
mov
gs
sbb
out
add
mov
leave
lock
cmp
cs
push
aas
xchg
movsl
xchg
in
sub
or
fs
movsb
add
push
imul
stos
jns
movsl
sti
mov
cmp
stc
inc
ret
mov
xor
xor
cmc
pop
cmp
sbb
sahf
fsubp
ds
clc
je
fucomp
push
dec
arpl
dec
movsb
out
aaa
aas
fimull
ret
test
daa
call
jmp
dec
push
sub
adc
pop
mov
sub
and
pop
and
xchg
imul
pop
fwait
xor
popf
add
pop
ljmp
mov
movb
iret
mov
les
out
faddl
std
push
into
sarl
test
mov
fnstsw
fdivs
dec
xor
lds
call
mov
divl
mov
jne
and
pop
rol
fisubrs
fnstenv
push
fadd
subl
ja
loopne
xor
push
push
lods
mov
in
lds
ret
fwait
xchg
mov
jo
add
cmpsl
aas
mov
mov
mov
or
xor
sahf
orl
mov
mov
cmp
push
sbb
insb
dec
ficompl
pop
ja
test
push
jl
enter
jmp
sub
lods
adc
lock
sbb
mov
xor
and
inc
mov
outsb
leave
pop
lds
push
sti
mov
imul
mov
inc
pop
lcall
mov
stc
sbb
push
cmp
sti
sub
mov
in
ror
sbb
out
mov
xchg
mov
xor
outsl
jmp
lock
push
pop
add
jl
ds
mov
rcll
xchg
adc
adc
lret
pushf
sbb
xor
sub
pop
out
int
lret
dec
cli
adc
mov
inc
out
xchg
je
aad
xor
pop
cmpsl
fidivrs
lods
xor
pop
lds
inc
or
nop
pop
mov
ja
mov
lods
lock
sahf
rorb
pop
adc
push
xor
test
mov
xor
push
xchg
out
aam
mov
adc
jo
outsl
in
insl
aaa
movsl
push
dec
dec
lcall
addr16
outsl
push
push
dec
rorl
mov
test
outsb
rcrb
xor
cmp
fisttpl
iret
stos
arpl
jbe
out
cmp
lret
push
push
popa
pop
test
lock
shll
sub
into
popf
pop
mov
jge
repz
or
cmp
mov
int3
or
test
mov
sub
rcrl
push
add
pop
leave
mov
addb
jge
test
pushw
cmp
pushf
sbb
add
sti
push
lret
and
mov
lret
xor
adc
movsb
sub
iret
push
std
inc
sub
xrelease
mov
jl
xchg
adc
std
push
push
cld
fs
lret
pop
dec
lods
out
mov
popf
add
jp
sahf
arpl
jg
pusha
and
mov
sbb
sub
fsubrs
push
andb
jmp
jb
gs
jecxz
lods
pop
into
dec
rcrb
nop
pop
pop
xchg
sub
mov
sbb
and
cmp
sbb
outsb
pop
insl
fnsave
sahf
dec
sbb
ror
xor
or
stos
sti
bound
scas
sbb
lret
lods
js
pushf
mov
or
std
inc
xchg
xchg
dec
fildll
andb
ljmp
leave
cli
push
lahf
scas
xor
inc
dec
dec
xor
lods
inc
fnstcw
push
xchg
mov
cmp
icebp
adc
adc
movsl
mov
and
sbb
les
dec
cli
jg
lods
aas
add
mov
xchg
and
and
adc
push
in
aam
scas
adc
dec
out
dec
xor
xor
jle
movsl
rcl
into
cmpsl
loopne
push
in
dec
sbb
iret
pop
or
xchg
aad
jbe
fadds
adc
fisubs
shl
push
mov
and
dec
add
dec
test
out
lea
or
or
repz
xor
xchg
into
aas
pop
subb
sub
dec
xchg
call
mov
cmp
or
mov
mov
lcall
imul
inc
cmp
mov
pop
dec
sbbl
imul
nop
xchg
xchg
je
mov
mov
xchg
cli
or
outsb
cmp
es
xchg
rcl
dec
out
mov
push
xor
cmp
leave
push
jne
push
add
xorl
adc
jecxz
out
or
adc
cmpsb
jbe
jge
mov
xchg
adc
lods
js
cmpsb
ljmp
roll
ret
mov
xchg
cmp
adcb
add
cli
dec
inc
fmul
sub
or
int
js
rcrb
push
push
add
mov
lods
ss
out
out
repz
jb
into
repnz
mov
jo
jle
adc
mov
aas
lahf
fwait
sarb
lret
cmp
adc
cmp
push
movsb
inc
sub
mov
and
and
es
out
mov
sbb
fdivs
pop
and
push
out
imul
dec
push
int3
aas
sub
fdivp
test
inc
std
rorb
dec
mov
int3
test
fadd
js
int
xor
jnp
adc
pop
jmp
dec
mov
in
sahf
adc
xchg
je
inc
rcl
sub
cltd
mov
mov
cld
xchg
jp
cmp
add
daa
stc
mov
in
push
sbb
adc
add
cmp
aas
in
outsl
mov
out
insb
mov
pop
sbb
inc
push
cs
in
cmpsb
data16
jge
mov
scas
cmp
push
mov
hlt
call
fisubrl
or
out
dec
popa
xchg
push
jmp
push
xlat
fdivrs
mov
cwtl
adc
outsl
dec
mov
push
cs
xchg
scas
jle
stos
xchg
mov
fmuls
jb
sbb
cmp
adc
sub
leave
out
pop
outsl
in
inc
push
dec
lock
push
pop
mov
push
popa
inc
icebp
das
in
test
dec
out
pop
xor
adc
cwtl
xchg
cwtl
imul
inc
and
fwait
repz
pop
sbb
push
dec
mov
shl
push
sub
out
stos
ljmp
push
add
pop
xchg
and
push
ljmp
inc
xlat
dec
dec
aas
push
or
divb
cs
xchg
sbb
jbe
outsb
pop
rcr
lods
popf
jmp
gs
push
test
mov
adc
ret
and
mov
pop
fmull
pop
fbld
repz
add
mov
mov
sbb
cld
jp
repz
mov
push
mov
pop
and
arpl
loop
dec
xor
xchg
mov
xchg
lods
xor
jns
pop
rorb
cmp
lea
or
xchg
push
test
inc
ds
xchg
xchg
push
push
cli
mov
pop
jne
mov
jp
rep
mov
ljmp
inc
jecxz
cmp
xor
xchg
popa
inc
push
cmp
push
lods
shlb
and
mov
push
push
out
add
inc
pop
icebp
mov
or
lds
je
or
mov
imul
add
sub
jmp
or
std
inc
and
out
subb
jo
mov
xor
push
sub
out
fsubr
mov
xchg
fadds
mov
or
push
icebp
movsl
aad
push
inc
or
or
dec
inc
loop
xor
mov
sub
fdivrs
sbb
sub
cmp
or
pusha
test
jne
into
popf
nop
mov
inc
aam
je
push
ljmp
out
cmp
pop
sti
dec
stos
sbb
outsl
jmp
push
scas
xlat
lock
imul
inc
pop
loopne
mov
adc
xchg
fs
sub
and
adc
paddq
gs
nop
rcll
sbb
pop
mov
vmread
inc
jp
pop
jg
lcall
ret
imul
outsl
xor
adc
rcll
lret
xchg
mov
jbe
std
aaa
mov
sbb
jge
dec
sbb
es
push
inc
shll
ja
push
out
fdivp
pop
mov
les
aas
repz
jno
test
test
push
mov
sti
inc
imul
adc
push
cmpl
lds
pop
jnp
testb
mov
scas
sbb
pop
outsl
pop
into
movzwl
push
fwait
popa
jecxz
fcomp
sbb
sub
shrl
lds
lods
pop
mov
imul
out
ss
fstpt
adc
xor
jns
mov
testl
pop
xlat
add
push
aas
mov
fidivrl
les
sbb
and
and
push
je
pop
int3
xor
lret
xchg
xor
adc
push
mov
mov
sbb
dec
push
dec
mov
mov
roll
push
mov
cltd
sahf
enter
aam
mov
inc
mov
adcb
lods
imul
mov
repz
out
insb
js
popa
xor
movsl
not
mov
mov
das
inc
lret
inc
push
jne
jno
mov
loop
sub
push
dec
push
ljmp
jbe
push
or
decb
and
and
ret
push
cmpsl
sub
xchg
stos
sub
adc
test
out
sbb
movsl
jbe
push
ja
xchg
pop
bound
mov
shr
adc
pusha
test
jns
sub
in
add
mov
dec
inc
push
or
dec
add
frstor
or
pushf
jo
scas
push
pop
movsl
mov
jns
sarb
aas
stos
mov
inc
movsb
inc
paddq
mov
xchg
jl
out
out
scas
imul
mov
arpl
xchg
cbtw
std
or
dec
sub
cmc
fld
jb
adc
and
repnz
add
pop
dec
lret
aad
cmpsb
repnz
cwtl
mov
jae
xchg
inc
jo
adc
leave
aad
or
gs
mov
inc
mov
mov
shll
cmp
jg
dec
nop
push
mov
into
and
dec
data16
cld
bound
mull
mov
xlat
addb
push
into
lahf
adc
bound
or
sub
xchg
xor
ret
mov
xchg
xorl
xchg
mov
jno
das
mov
dec
out
movsl
adc
insl
test
sub
push
gs
and
loop
arpl
popa
mov
pop
in
pop
int3
into
lret
jne
adc
mov
aam
jbe
inc
pusha
xchg
sbb
jo
roll
xor
xchg
xchg
enter
test
lds
ficoms
mov
arpl
sbb
sbb
mov
mov
lret
mov
stos
inc
mov
dec
pop
sbb
pushf
and
adc
sbb
cltd
loop
add
mov
sub
aad
fidivs
into
xchg
mov
shll
or
xlat
pop
pop
dec
push
cld
push
or
sbbb
aam
dec
jmp
adc
add
pop
sub
scas
sbbb
shll
adcb
stc
dec
jle
mov
inc
out
test
into
jge
pop
fs
and
or
mov
out
out
rcr
xchg
aam
iret
imulb
jecxz
inc
sahf
es
push
iret
cmpsw
cmpsb
movsl
aaa
in
mov
xchg
mulb
jne
and
leave
xor
dec
imul
test
mov
xchg
xchg
mov
out
imul
call
into
push
jbe
pop
inc
rorl
xchg
pop
into
mov
mov
jne
pop
cmpsb
dec
sbb
cmp
or
dec
adc
ret
lea
dec
push
jno
daa
jg
inc
mov
mov
xchg
mov
dec
inc
fsubl
mov
sub
or
sub
pop
adc
movsl
push
add
push
dec
xchg
adc
fdivrs
cwtl
pop
stos
in
iret
notl
inc
cs
mov
jmp
test
lcall
seta
iret
lahf
out
pop
and
xor
aad
mov
xchg
aaa
xchg
es
push
pop
out
jl
cld
stos
int
lods
push
or
movsl
fwait
leave
sub
shlb
into
pop
pop
push
pop
aas
jb
push
mov
inc
mov
outsb
loop
inc
cmp
push
push
in
scas
mov
adc
fisttpl
cli
insl
loope
aas
sub
in
add
xchg
out
lahf
les
dec
inc
mov
and
lahf
addr16
fstps
mov
daa
imul
sub
push
and
mov
int
xchg
add
lret
cmp
psubq
sbb
fdivs
mov
dec
mov
xor
out
mov
mov
push
mov
int3
jno
mov
bound
fcomi
xorb
sub
lahf
dec
sbb
mov
scas
shrl
ljmp
mov
aaa
xor
xor
mov
repz
add
repz
data16
stc
aam
sub
out
adc
sbb
and
or
lds
lcall
mov
icebp
push
dec
xlat
push
push
clc
scas
shlb
sbb
xchg
mov
fwait
sub
mov
xlat
push
outsl
loop
stos
andl
mov
aaa
imul
out
fwait
mov
push
xor
into
pop
push
and
sar
mov
ret
out
jo
mov
cmp
int3
or
sbbl
mov
out
sarl
pusha
lock
aam
fldt
dec
andl
xchg
cmp
outsl
jbe
lods
ljmp
or
clc
rorl
arpl
cwtl
and
cld
jnp
sub
int3
mov
imul
ds
mov
in
into
push
xchg
sub
insl
dec
jae
or
lods
mov
jmp
jecxz
mov
mov
sahf
into
rorl
lds
cwtl
jne
pop
cwtl
aam
cwtl
sub
leave
rol
push
push
into
or
cmp
or
pop
pop
add
mov
cltd
pop
repz
fidivrl
sbb
pop
clc
popf
jge
dec
mov
popf
push
push
hlt
push
pop
sbb
stos
sub
pop
push
out
mov
adc
movsl
stc
jb
push
flds
scas
jmp
call
dec
adc
shrl
pop
gs
and
mov
xor
dec
xlat
add
pop
imul
jae
enter
xchg
scas
fsubrs
jo
push
sbb
mov
sub
jo
dec
dec
xor
popf
aad
outsl
mov
into
movsl
xchg
pop
ss
dec
push
test
mov
fistpll
aam
xor
push
shlb
xor
inc
roll
xchg
stc
aad
addr16
test
inc
shl
jg
jge
adcl
ret
repnz
mov
aas
into
jmp
nop
pop
pop
scas
shr
xchg
add
add
loope
push
mov
jnp
push
dec
dec
fdivs
push
loopne
fsubs
adc
cwtl
fs
pop
jb
sbb
mov
push
sub
mov
pop
fstpl
ret
ss
and
mov
sti
or
out
loop
mov
imul
mov
jb
or
lahf
sub
mov
sbb
push
imul
ds
dec
sahf
mov
and
test
inc
mov
adc
fwait
adc
fstps
push
jbe
ds
push
cmp
or
xlat
jmp
ja
push
add
cli
aam
and
jmp
aaa
adc
and
aam
test
lcall
ret
jo
das
or
je
clc
sub
jae
mov
add
mov
dec
push
shrb
push
cmpsl
inc
icebp
cmp
fcom
aaa
push
mov
dec
fsubrl
jg
mov
je
push
cmpsl
cmp
daa
out
out
cli
pop
rolb
sub
or
cmc
xchg
mov
xchg
std
mov
jno
xchg
int
addr16
movl
dec
add
insl
sub
mov
js
call
add
xchg
fisttps
int3
cmp
mov
in
or
jnp
and
rcl
push
lock
add
mov
int
adc
and
aam
xchg
dec
xchg
adc
inc
adc
add
push
repz
imul
sti
ds
jnp
arpl
aam
test
movsb
dec
push
sbb
mov
call
in
sti
pop
clc
es
jecxz
xchg
rolb
adcl
push
add
push
pop
mov
xchg
repnz
sbb
int3
aaa
mov
mov
insl
idivb
cmpb
in
ret
xchg
iret
outsl
dec
adc
adc
push
into
push
rcrb
outsl
mov
xchg
sub
mov
pop
xchg
cs
fsubs
popf
and
push
jecxz
into
jno
push
push
xchg
mov
xchg
ret
xchg
cmp
mov
cwtl
dec
sub
sbb
push
xor
js
xor
addr16
pop
test
add
aam
aam
xor
stc
sub
xchg
lcall
or
xor
scas
adc
mov
push
lea
pop
addr16
cli
lret
leave
sub
jg
xor
out
dec
ret
mov
das
xor
les
addr16
lret
xchg
mov
mov
push
sub
xchg
dec
adc
or
jmp
es
popa
leave
push
push
fidivrs
pop
jmp
es
add
jae
sub
in
pop
jle
dec
in
jl
scas
mov
fisubrs
sbb
xor
sti
inc
push
lret
test
jmp
lcall
push
test
mov
out
push
popf
add
dec
hlt
out
int3
movsb
adc
in
incb
fimull
or
xchg
push
aad
test
dec
mov
mov
inc
icebp
and
mov
xchg
mov
es
es
xor
js
mov
out
ja
or
stos
pop
es
adc
cmp
inc
push
shlb
mov
pop
subl
movsl
icebp
add
xchg
rcll
aam
out
ljmp
mov
arpl
or
sbb
pusha
and
aam
mov
mov
cli
out
inc
out
cmp
xlat
ljmp
xchg
push
movsb
loope
pop
jle
jo
cmp
fdivp
sbb
dec
sbb
shl
rcll
and
into
mov
daa
hlt
mov
push
int3
mov
fnstenv
mov
inc
mov
pop
ja
push
popf
repnz
loop
je
fs
ret
or
mov
in
loop
int3
jle
sarl
jle
iret
add
push
mov
int3
xlat
mov
popa
dec
ss
dec
sbb
inc
arpl
cmc
xor
mov
adc
leave
fidivl
xor
arpl
sub
or
dec
sti
inc
and
adc
or
xor
sbb
xchg
lret
std
out
and
cld
lods
mov
or
mov
xchg
cwtl
mov
addr16
aaa
cmpl
pusha
rol
hlt
insb
call
popf
mov
ficoml
sbb
inc
pop
sub
push
jns
xorb
je
addr16
fidivs
or
imul
cmpsb
xchg
stc
sbb
sub
jo
test
pop
push
add
mov
mov
adc
mov
shrb
outsb
jno
outsb
out
test
sbb
pop
xor
int3
repz
lods
mov
leave
pop
pop
neg
mov
adc
sbb
xchg
aam
push
popa
or
mov
xchg
sbb
mov
aam
pop
outsl
les
push
cmp
addr16
in
iret
movsl
inc
dec
andb
jne
ror
pop
pop
pop
sbb
loopne
add
icebp
in
lret
sbb
mov
adc
aad
xchg
das
shl
arpl
stos
pop
addr16
xlat
arpl
int
incb
push
out
dec
push
push
jge
or
mov
stc
pop
cmpl
into
ds
iret
js
into
mov
aam
add
std
js
jbe,pt
iret
shlb
mov
xchg
add
adc
or
mov
inc
sbb
jge
movsb
sahf
jno
pop
adc
pop
ficoml
jns
mov
xchg
and
mov
sbb
jecxz
sbb
into
adc
lcall
adc
push
les
je
jno
dec
repnz
dec
icebp
mov
mov
and
sarb
jb
pop
xchg
scas
inc
and
push
mov
int
outsb
clc
out
mov
fucomi
ljmp
pop
push
out
mov
call
mov
mov
mov
jp
or
mov
sbb
add
xor
ret
mov
mov
sbb
outsb
adc
out
sub
or
mov
jmp
aam
stos
mov
mov
into
loope
adc
and
lods
mov
test
lret
lret
arpl
jae
cmp
or
adc
xchg
movsl
cmp
jne
clc
call
js
es
sbb
push
mov
mov
xchg
jbe
xchg
cli
or
dec
xchg
mov
cld
fsts
rcrl
cmpsl
ficomps
cmpsl
mov
adc
sbb
out
stos
lahf
in
sahf
push
imul
mov
cld
inc
xor
pop
sbb
ror
outsl
push
jmp
sub
mov
js
lret
push
jnp
sti
mov
into
cmp
inc
add
lahf
loopne
pop
sbb
clc
inc
or
dec
inc
xchg
enter
call
lahf
mov
out
mov
jp
xor
sbb
cmpsl
pop
mov
adc
pop
mov
les
pusha
mov
insb
sub
and
in
xchg
pop
push
ljmp
out
lods
shll
je
mov
pop
mov
hlt
mov
leave
mov
pop
repnz
jle
add
fdivrl
jmp
out
dec
inc
sbbb
jbe
aas
mov
inc
icebp
jne
jbe
fildl
dec
add
decl
mov
pop
pop
fisttpl
ficompl
adc
xchg
addr16
aam
push
add
hlt
nop
cmp
sti
mov
dec
pop
loope
add
push
dec
jmp
mov
stos
shll
and
cs
pop
pop
cmc
dec
sbb
and
sbb
xor
pop
push
test
ljmp
jb
cli
inc
dec
pop
xchg
enter
popaw
xchg
outsb
jno
sub
lret
cwtl
cmp
in
adcb
ret
lahf
or
stos
adc
cwtl
cmovne
sti
jmp
cmpsb
inc
call
mov
push
lret
js
clc
adc
lret
popf
push
stos
or
bnd
xchg
pop
mov
clc
dec
scas
lock
lea
aad
pop
pop
lret
mov
aam
decb
aaa
xchg
or
fldt
mov
pop
imulb
push
cmp
mov
addr16
jecxz
into
movsb
insb
pop
xor
mov
sbb
lcall
mov
fidivrl
xchg
insl
and
addr16
sub
pop
dec
fmuls
test
xlat
pop
sbb
push
cmp
aaa
jns
stos
outsl
ja
sub
adc
shlb
mov
icebp
adc
mov
push
and
shrb
bound
and
cwtl
dec
les
pop
test
pop
push
nop
xchg
xchg
stc
mov
imul
test
lret
or
addr16
scas
mov
into
push
push
add
jmp
mov
dec
adc
add
push
jo
fstl
dec
in
sub
mov
xor
rol
xor
push
add
popf
pop
pop
sbb
stc
sbb
rorl
jl
fisubrs
push
movsl
ss
xchg
adc
or
movsb
push
and
pop
fmuls
shl
movsb
pop
push
movsl
jb
rcr
aam
sub
push
add
mov
cmp
in
lea
xor
xchg
sub
lds
in
mov
mov
xchg
jg
or
pop
mov
fmuls
xchg
push
int3
push
clc
push
jno
and
xchg
cmc
pop
pop
mov
inc
daa
adc
fwait
loope
push
stos
xor
xlat
dec
cwtl
ds
jns
adc
push
js
out
sub
push
sbb
call
insl
jne
xchg
adc
mov
push
pop
popf
adc
xchg
or
lods
stos
aam
jge
push
dec
or
jbe
dec
xor
sbb
outsb
xchg
add
arpl
sbb
call
or
xor
rorb
push
pop
ficomps
arpl
in
pop
dec
or
fstl
aad
dec
inc
loope
stos
pop
push
sarl
shl
jns
aad
movsl
lret
inc
pop
inc
mov
inc
mov
aam
or
mov
pop
pop
clc
or
sbb
mov
divl
and
pop
and
mov
dec
mov
or
stc
mov
imul
sbb
mov
add
sbb
int3
xchg
xlat
test
push
fidivl
sub
adc
in
xor
and
rcrb
push
ss
repnz
lea
dec
dec
arpl
pop
daa
mov
das
add
push
lret
pop
and
cmc
sbb
dec
sbb
aam
xchg
push
xchg
cmpb
dec
pop
lret
std
sbb
mov
sub
pushw
mov
aas
mov
xchg
les
jno
ja
push
mov
add
cwtl
inc
mov
scas
dec
mov
sub
fldt
out
sahf
xchg
xchg
push
xchg
imul
mov
lods
push
scas
sub
fnstsw
pop
mov
leave
fcomps
in
gs
icebp
popf
sbb
inc
push
pop
mov
addr16
cltd
ja
fbstp
jns
sbb
jp
cli
call
aas
cmp
xchg
push
aam
sub
cltd
fldt
in
es
out
scas
call
adc
add
inc
mov
mov
xchg
inc
pop
mov
scas
sub
mov
imulb
xor
aad
sbb
mov
ret
fcomip
xchg
ss
mov
movsb
sub
aam
ror
iret
jns
jnp,pn
scas
cmc
int
mov
xchg
and
in
sahf
fmuls
clc
call
rcll
adcb
xor
or
negb
mov
sbb
mov
arpl
and
jno
xchg
jl
mov
sar
dec
dec
imul
shll
fwait
pop
xor
add
inc
sub
mov
in
jge
aam
pop
pop
adc
daa
xorl
mov
rorl
jmp
fisubl
xchg
ds
test
adc
inc
dec
test
test
and
gs
xor
mov
aad
pushf
push
xor
jle
add
pusha
jp
adc
mov
sub
xchg
aam
es
es
cmp
jmp
pop
subl
test
mov
test
test
push
adc
xchg
sahf
movhps
dec
orb
cltd
mov
aam
sub
aad
push
hlt
cmp
dec
and
mov
push
es
mov
cmp
pushf
xlat
lods
hlt
loop
sub
lahf
loope
icebp
xchg
push
clc
jne
mov
push
xlat
mov
stos
in
jle
cwtl
out
push
sbb
pop
data16
add
dec
or
lea
fists
mov
bound
inc
push
sub
imull
stc
rcll
pusha
sbb
aaa
lahf
shr
test
mov
add
ret
ja
mov
dec
or
mov
adc
test
mov
add
in
cmp
cmpsl
cmp
add
inc
adc
cld
sbb
ss
cs
mov
inc
data16
insb
push
hlt
mov
inc
fwait
les
dec
push
push
push
xchg
push
rcrl
adc
sub
lods
rcrb
push
jb
and
sub
or
dec
xchg
call
cmpsl
mov
mov
rclb
mov
inc
shl
add
adc
xchg
push
loope
dec
inc
inc
insb
aam
adc
lock
push
arpl
das
and
and
mov
mov
xchg
dec
in
int
mov
xor
insl
lods
sub
mov
mov
cli
lret
pop
fmuls
sahf
repz
sub
pushl
aad
xchg
or
pop
fucomi
arpl
negl
cmp
mov
push
shl
ds
jne
mov
notb
jp
mov
stos
ljmp
lret
into
pop
mov
push
adc
mov
or
inc
shlb
add
mov
hlt
fcoms
fcmove
in
or
repnz
mov
sub
out
add
pop
cmp
xchg
jbe
dec
jo
or
cwtl
xchg
loop
pop
fwait
jno
arpl
push
fisubrs
sub
ret
cmp
shlb
pop
fmuls
dec
inc
fs
cmp
mov
mov
cmc
stos
enter
dec
fimull
push
jne
xchg
xor
call
pop
or
push
hlt
dec
fcomps
adc
std
pop
bound
aad
dec
repnz
dec
mov
pop
or
jmp
pop
dec
adc
dec
inc
int3
sti
fnstcw
scas
mov
lret
fidivrl
sbbb
pop
dec
test
out
cmp
rorl
lods
cmpsb
jbe
xor
int
jo
inc
shll
jmp
pop
lds
inc
into
fldcw
into
aaa
push
iret
stos
subb
aam
add
push
dec
inc
outsb
push
ljmp
in
mov
and
int3
cwtl
pop
sub
rcrb
leave
aad
push
push
add
and
scas
fldcw
nop
int
out
and
mov
outsl
ret
adc
adc
fimull
pop
sbb
dec
and
pop
insl
cmpsb
adc
arpl
jmp
mov
dec
shlb
sub
pushf
cltd
loop
cmpsb
fsub
dec
push
clc
filds
xchg
mov
mov
aam
add
inc
mul
sbb
jp
arpl
fcmovu
push
pop
dec
jbe
les
push
push
dec
xchg
addl
lret
sahf
pop
lahf
int3
stos
pop
imull
bound
roll
push
jmp
in
adc
sbb
inc
xchg
aam
xchg
push
rcrb
loop
ret
lods
hlt
xor
and
or
mov
dec
jmp
mov
leave
test
cmp
hlt
push
clc
aam
mov
push
lock
and
mov
iret
fcmovnb
dec
sahf
xor
mov
push
xlat
sbb
ds
push
cwtl
cmpsb
dec
inc
cmc
out
sub
fcom
bound
mov
into
sbbb
clc
xor
dec
mov
cmp
inc
loopne
jno
pop
xchg
mov
xchg
sbb
pop
mov
into
not
sahf
fists
jno
shll
psrld
repnz
add
push
xchg
mov
push
out
jno
insb
and
add
push
cltd
addl
xchg
adc
pop
mov
fiaddl
lea
mov
cmpsl
add
push
adc
dec
mov
jnp
nop
inc
cmc
push
sbb
hlt
push
call
push
js
xchg
mov
jne
mov
gs
xchg
mov
out
xchg
testb
sub
push
xchg
enter
and
mov
xrstor
and
xchg
js
jae
mov
lea
fadd
das
mov
push
sahf
and
subb
cli
inc
xchg
int3
mov
jl
sti
jge
sub
test
repz
in
push
sahf
xchg
ret
sbb
push
out
fadds
dec
or
out
rolb
lret
mov
pop
or
das
mov
bswap
cwtl
dec
lods
add
push
insb
cs
xchg
sub
push
push
mov
divb
sub
sub
scas
mov
sbb
dec
dec
mov
dec
int
adc
icebp
adc
in
xor
lretw
imul
leave
pop
subl
pop
and
pop
repnz
daa
push
push
inc
mov
xlat
inc
lret
jno
push
mov
inc
popa
mov
addr16
dec
xor
in
push
rcrl
pop
ljmp
imul
pop
xlat
mov
je,pn
icebp
shlb
pop
add
data16
scas
test
and
jno
inc
push
dec
gs
jne
mulb
xor
shr
push
push
sbb
push
into
aam
adc
shrb
push
out
fcoml
xchg
xor
xor
push
mov
cmc
pop
imul
into
push
cmpsb
add
das
xchg
mov
loop
push
addr16
clc
lea
in
aad
dec
in
pop
mov
cwtl
cli
test
out
xchg
cmpsb
lea
roll
scas
clc
add
rol
mov
mov
mov
leave
loope
test
push
ljmp
cmpsl
insb
xchg
sub
dec
stos
aam
les
arpl
mov
int
jb
sub
jle
push
sahf
insb
sbb
ret
pop
dec
and
pop
mov
int
xchg
lret
mov
sti
adc
js
push
jg
xor
pushl
lahf
dec
fisttps
sbb
adc
and
inc
adc
dec
test
mov
pop
xchg
add
int
dec
mov
arpl
ds
push
fcoml
inc
out
repz
mov
mov
mov
test
jne
popa
push
cltd
scas
arpl
test
cmp
lea
push
push
ds
movsl
cmc
mov
sbb
fiaddl
pop
jecxz
jnp
outsb
mov
sbb
fdivs
sbb
and
testb
in
loopne
outsl
dec
mov
inc
and
mov
out
push
incb
sub
fstpt
xor
fisubrs
lock
stos
enter
push
adc
mov
sbb
imul
dec
movsl
lret
ret
test
push
shrb
push
rcrb
dec
cltd
shll
cmp
jecxz
pop
jo
mov
les
inc
test
addr16
dec
iret
jecxz
cmp
fisttpl
dec
cmp
adc
cmp
xchg
fsubs
outsl
cmp
push
xlat
shl
xor
cld
push
insb
daa
push
mov
cwtl
dec
jle
lock
leave
dec
mov
sub
or
push
outsl
add
arpl
push
enter
repnz
push
int3
cld
int
cmp
sbb
inc
sub
outsl
shrl
test
inc
adc
inc
cmp
or
adc
mov
or
inc
bound
push
bound
push
xor
cmp
data16
xor
lods
xor
mov
rolb
push
jno
inc
clc
lods
mov
cmp
mov
test
mov
imul
stos
lods
mov
pop
dec
and
sbb
int
aad
lret
not
jno
mov
or
je
in
pop
push
andl
es
gs
lea
cmp
lds
xchg
stos
mov
pop
cmp
push
js
inc
jno,pt
mov
push
daa
outsl
sti
sbb
jb
clc
xor
dec
mov
sbb
sub
sub
stos
xchg
dec
pop
lea
pop
push
fcmovnbe
rcll
rcrl
adc
or
push
cmp
das
lods
stos
adc
add
push
cmp
cmpsb
add
push
fptan
xchg
imul
fcoml
lods
addr16
pushf
fsincos
push
popf
aad
or
aam
inc
or
cltd
stos
pop
out
sahf
fidivrs
or
mov
gs
cmp
int3
mov
imul
dec
dec
out
dec
push
sti
jge
clc
fdivl
in
mov
cli
dec
and
scas
push
sub
mov
xchg
mov
aaa
jbe
stos
loope
mov
rcl
aad
mov
push
test
movsb
stos
sub
push
popa
cmpsb
add
lea
push
repnz
mov
add
mov
push
xchg
push
push
insb
push
push
insl
lds
push
adc
push
bound
and
pop
cmp
aaa
out
inc
and
aam
jmp
mov
dec
pop
and
adc
in
add
or
xor
test
push
es
pop
out
dec
push
iret
lcall
push
lret
sti
mov
dec
and
stc
out
iret
aas
fwait
jp
cmc
lahf
sti
rep
cld
dec
cli
dec
aaa
mov
imul
jp
outsl
fmuls
bound
jno
cmp
dec
dec
mov
sub
and
inc
dec
push
call
push
lock
lret
add
or
into
or
cmp
cmpsl
cmc
cwtl
mov
lret
and
pop
xchg
pop
jl
fsubrl
daa
data16
mov
int
push
into
sub
xlat
stos
push
xlat
mov
cmpsb
sub
jno
push
push
shrl
dec
mov
add
pop
stos
ds
inc
test
mov
and
int3
dec
push
lds
lea
adc
inc
arpl
mov
ja
cmc
aad
bound
push
jp
ret
pop
adcb
ss
sbb
push
push
push
jge
sbb
addr16
push
mov
scas
adc
shlb
out
dec
mov
mov
lea
fidivrl
stos
test
pushw
jo
mov
nop
dec
xchg
xor
inc
push
mov
adc
ror
sbb
jb
sbb
pop
adc
mov
leave
sahf
popa
in
pop
fstpt
cmpsb
int
xchg
push
push
popf
mov
aam
jl
jno
int
xchg
dec
ds
or
dec
ja
inc
fisubrs
push
rorl
jb
call
jbe
out
lea
inc
loope
pusha
push
pop
popf
xchg
shlb
dec
clc
xchg
inc
mov
lods
dec
ja
sbb
imul
adc
stos
jns
lods
leave
adc
stos
test
mov
je
scas
in
loopne
dec
pop
jl
push
pop
pop
jnp
xor
dec
jg
scas
loop
push
movsl
or
dec
mov
inc
dec
fdivrs
pop
pop
sbb
data16
mov
std
sbb
mov
mov
pop
dec
sbb
leave
scas
pop
push
xchg
fbld
xor
push
xor
and
push
iret
pop
stos
jle
in
adc
xchg
aam
out
pop
call
push
cltd
nop
jl
enter
push
xlat
popf
popa
into
inc
sub
movsb
movsb
pop
pop
sbb
mov
std
xchg
sti
stc
push
stos
adc
es
shlb
xor
cvtdq2ps
mov
sqrtps
lea
int3
and
imul
test
jl
sbb
into
test
dec
inc
mov
sbb
sub
addr16
push
je
sbb
mov
es
call
cltd
daa
in
imul
lcall
test
xor
imul
fcom
push
mov
pushf
stos
lret
xchg
scas
lock
fs
xor
jge
shlb
mov
mov
fcomps
mov
cmp
adc
sub
pop
inc
lea
mov
pop
mov
add
mov
cmpsl
xchg
lea
adc
or
test
cmp
mov
push
dec
add
mov
jne
jmp
leave
mov
std
cmc
scas
pop
popa
loope
mov
cs
mov
mov
or
or
push
out
int3
into
outsl
inc
or
into
call
pushf
scas
jns
inc
pop
pop
das
push
fstp
call
cli
dec
sbb
jg
shlb
cld
mov
jne
mov
aad
mov
cmp
dec
xchg
sub
jo
dec
je
xorb
and
roll
or
push
pop
adc
aam
dec
movsl
xor
hlt
lods
mov
push
pop
mov
lret
mov
fcmovu
fucomi
fstps
cmc
imul
call
lds
dec
decl
lods
ret
scas
push
add
dec
inc
pop
aad
dec
cs
popl
cmpl
jae
and
fisubs
dec
out
cli
rol
daa
mov
xlat
jno
sub
xchg
pop
mov
pop
iret
data16
lcall
aad
lods
scas
dec
push
push
jns
ss
pop
push
daa
out
aad
icebp
xchg
fmuls
jl
push
sbb
repnz
dec
enter
fdivrl
aad
fwait
mov
rclb
into
loopne
mov
mov
xor
fisttpll
lahf
rcrl
sar
and
cmp
rcr
push
jecxz
fmulp
cs
pop
adc
add
in
mov
mov
rorb
sbb
fistl
das
xchg
mov
xchg
push
xchg
imul
rcll
xchg
xchg
lret
cmp
push
lds
rclb
push
cli
fldcw
iret
sbb
cmpsl
or
repnz
push
icebp
dec
push
dec
push
mov
ret
int
pop
or
push
fcoml
bswap
push
mov
mov
xor
push
dec
aad
pop
gs
push
push
push
sub
imul
cmp
pop
int
icebp
mov
push
movlps
clc
push
push
push
push
mov
mov
loop
gs
call
rcll
mov
xchg
push
into
call
sub
pop
in
or
mov
push
sbb
and
mov
loop
xchg
push
aam
cwtl
mov
hlt
int
push
aam
xchg
xor
xchg
adc
push
dec
sub
dec
mov
dec
dec
pop
push
or
xchg
mov
xlat
loope
adc
hlt
lret
dec
pop
and
push
xchg
aad
push
mov
dec
dec
sub
dec
push
mov
xchg
rcrb
lret
rorb
mov
cltd
push
leave
mov
push
pop
sub
fwait
add
sbb
std
mov
dec
mov
xchg
mov
push
xor
and
out
mov
mov
mov
sub
mov
ja
lahf
push
and
test
mov
and
dec
and
lahf
int
add
stos
jno
mov
mov
mov
icebp
negb
or
test
mov
jmp
xor
push
jle
dec
mov
push
or
sub
test
jae
inc
push
push
and
jb
and
roll
sub
inc
sbb
fsts
push
jl
fidivrs
cmp
add
dec
push
addr16
ja
sub
mov
push
icebp
mov
data16
sub
sti
addr16
add
or
dec
insb
movsb
sbb
out
jmp
jb
mov
or
insl
push
das
pop
ja
fldcw
pop
ja
sub
jge
mov
hlt
ds
push
mov
xchg
out
in
mov
test
mov
dec
inc
hlt
out
push
bound
push
pop
inc
adc
scas
add
out
mulb
pop
sbb
fldenv
pop
or
in
fsubrp
dec
pop
pop
mov
cwtl
rcrb
sbb
push
out
sahf
outsb
lret
mov
pop
mov
or
out
or
lcall
jg
pushf
xchg
je
push
add
or
cli
dec
mov
jns
sahf
int
xor
adc
cwtl
adc
ds
mov
into
iret
mov
sbb
rcrl
into
xchg
imul
lret
out
dec
push
ljmp
and
notb
inc
loopne
hlt
dec
scas
cwtl
add
jg
adc
push
aad
pop
cmp
bound
loop
out
imul
pop
xor
lcall
or
aaa
repnz
or
pop
int
fstpt
and
mov
movb
sub
push
fwait
imul
sbbl
dec
pop
aaa
lods
sti
mov
out
lret
sahf
adc
pop
sti
loop
hlt
jg
or
xchg
dec
push
out
cmpsb
dec
fildl
insb
push
sahf
push
adc
scas
mov
add
push
pop
cltd
jmp
stos
into
mov
ficompl
xchg
dec
std
cltd
mov
sbb
pop
or
test
ss
push
fisubrs
mov
stos
inc
add
cmp
lret
cmp
ret
clc
fwait
mov
sub
inc
xchg
jb
xchg
push
mov
jg
inc
mov
xor
daa
and
lret
lock
mov
clc
int3
sahf
fbstp
sub
push
dec
push
add
js
mov
imul
fwait
mov
sub
ret
sbb
ljmp
mov
xchg
xchg
fstl
imul
mov
in
jno
pop
mov
aam
xchg
push
mov
inc
push
int
dec
sub
sbb
iret
test
fucomip
scas
inc
mov
repnz
pop
out
inc
push
fists
inc
clc
push
loope
mov
lods
pop
hlt
push
push
aam
dec
sub
mov
sub
mov
cmp
mov
xchg
xchg
pop
inc
aam
dec
sub
push
mov
dec
shrl
sbb
pop
andb
call
mov
aam
pop
mov
jb
cmp
cmpl
dec
cmp
mov
fsqrt
popl
pop
loope
inc
fdivs
lods
pop
addl
inc
clc
push
cmp
loopne
jmp
sbb
dec
ret
sbb
cmp
mov
in
hlt
imul
xchg
fbstp
adc
js
add
adc
inc
mov
mov
or
push
shll
test
stos
and
je
pop
aad
and
mov
pop
ljmp
mov
rclb
push
pop
xor
outsl
jmp
fdivl
sub
pop
mov
imul
jns
pop
outsl
imul
mov
out
mov
push
sub
push
dec
pop
aam
inc
out
push
mov
outsl
xlat
or
imul
out
iret
push
out
or
pop
icebp
push
lcall
aad
mov
push
dec
mov
dec
jo
or
scas
adcl
in
sahf
bswap
inc
jg
cmp
fcomi
in
inc
push
shl
add
mov
dec
mov
ds
fidivl
mov
cwtl
jno
push
pop
mov
into
iret
pop
adc
fistpl
popa
inc
loopne
add
jne
popf
dec
lcall
dec
jne
mov
pop
imul
mov
pop
ljmp
inc
int3
pop
xchg
movsl
rep
mov
int3
jno
pop
loope
cmp
int3
mov
hlt
clc
addr16
inc
dec
inc
mov
xchg
pop
cmp
lea
jle
pop
dec
lods
fstpt
sub
jb
test
adc
int
scas
push
sub
js
mov
mov
inc
pslld
leave
and
xchg
sahf
xchg
jo
out
or
movsl
or
cmp
xor
add
or
mov
push
or
dec
xor
jno
mov
shll
sarb
popf
and
push
test
inc
fidivs
inc
cltd
fisubrl
out
jne
pop
sbb
data16
mov
or
in
mov
cmp
ljmp
push
and
js
cmp
fdivl
fdivrs
xlat
inc
dec
sarb
xchg
ss
stc
lret
push
pop
sahf
std
jb
std
rcl
mov
out
dec
pop
divb
shrb
clc
sub
pop
sub
cmp
push
test
dec
in
fimuls
xchg
xor
das
cwtl
cld
mov
lods
push
or
or
ss
fwait
es
push
jge
sbb
repnz
test
sub
pop
outsl
in
jae
sub
clc
in
cmp
adc
lods
sub
and
out
cmp
mov
fxtract
test
xor
dec
dec
or
sub
mov
ljmp
push
sub
adc
in
bound
ret
push
mov
hlt
pop
push
popa
notb
jb
lods
mov
push
sub
fildl
fs
cmp
sbb
dec
fldt
pop
jb
js
js
jno
cwtl
sbb
scas
lret
movsl
sub
shrl
ds
std
jnp
sub
or
test
sbb
sbb
in
cmp
mov
push
pop
cltd
mov
sbb
faddl
repz
inc
fwait
adc
push
sbb
dec
lods
xor
xor
inc
jb
fcmovnu
jl
lahf
cmpsl
sti
ljmp
mov
jmp
jmp
aad
clc
mov
aad
fidivrs
push
ljmp
push
and
pop
lods
mov
lods
xchg
adcb
add
mov
jmp
inc
xor
mov
fadds
fisttps
fldcw
or
dec
sub
rorb
mov
dec
mov
cmp
stos
adc
or
push
xchg
add
dec
sbb
push
pop
jno
push
fld
dec
ja
lods
lret
hlt
repnz
adc
pop
mov
loop
jmp
push
xor
pop
mov
lahf
jg
pop
clc
add
lahf
stos
xchg
xchg
dec
xor
sub
inc
cmp
stos
mov
sub
aad
sbb
movsl
stos
lea
test
lods
sub
adc
xchg
test
adc
sbb
cmp
jbe
jecxz
call
aaa
js
loopne
jae
scas
sbb
and
inc
lock
mov
lahf
adc
push
jp
in
rolb
pop
adc
sub
pop
and
add
mov
inc
dec
fidivrl
rcrb
cmpsb
subb
sbb
out
sub
mov
mov
adc
ss
jg
mov
test
aas
mov
pop
push
insb
stos
push
aad
mov
cmc
clc
sub
je
xor
adc
daa
push
repz
test
sub
mov
dec
cmc
lods
mov
insb
into
sti
cmp
xor
xor
aam
push
jo
and
pop
or
pop
loop
cmpsl
into
mov
adc
fstpl
push
call
push
stos
xor
mov
inc
and
xchg
idiv
inc
dec
cmp
cmp
xlat
add
notb
roll
pop
fistpl
cld
pop
add
pusha
out
push
jae
jmp
and
mov
notb
addl
lea
push
lret
or
adc
orb
cmc
xchg
stos
std
push
ror
push
in
ljmp
cwtl
xchg
mov
sub
lcall
adc
adc
fistps
dec
sub
movq
mov
mov
daa
ja
ror
out
dec
inc
jmp
dec
cmp
jns
sahf
mov
in
into
jecxz
cld
push
stc
loopne
or
mov
jg
mov
or
mov
jnp
mov
call
ja
sbb
cwtl
jle
orb
push
sub
sub
mov
arpl
aas
in
out
xchg
jge
fildl
movsl
fldcw
pop
callw
mov
pop
loop
jp
fsts
push
xor
mov
push
stos
imul
xchg
fnstenv
ficompl
cmp
jg
jge
dec
pop
aad
or
jb
outsl
pop
imul
adc
dec
pop
push
cltd
add
clc
or
mov
repz
pop
addr16
pusha
sub
ljmp
mov
popf
bound
dec
mov
and
pushl
scas
xchg
nop
popf
push
pop
and
jmp
xor
mov
mov
clc
push
jle
enter
movsb
fwait
ret
inc
dec
push
aad
popf
push
add
movsb
add
repz
push
mov
shl
pop
and
int
or
cmp
push
xchg
aaa
pop
in
shll
cwtl
cmpsb
or
mov
lea
je
push
push
int3
and
hlt
pop
and
pop
add
jno
mov
ffreep
stos
std
out
mov
xchg
xchg
out
notl
pop
sub
ds
adc
out
ja
or
roll
mov
dec
xor
xlat
adc
or
pop
cmp
fsubr
cmc
sub
mov
outsb
mov
push
push
xchg
fst
mov
xchg
pop
inc
mov
dec
push
loopne
aas
mov
cmp
sbb
xchg
mov
pop
iret
fcom
aad
out
addr16
getsec
lcall
daa
out
idiv
or
addr16
pop
aaa
jle
rcl
jbe
cmp
xchg
push
or
addr16
pop
sub
adc
aam
shlb
or
jae
addr16
test
negl
pop
out
push
pop
aaa
sbb
ja
lret
rclb
inc
cltd
jns
into
imul
mov
out
sub
aam
movsb
pop
nop
fstps
push
pop
mov
pop
shrl
daa
shlb
jnp
xchg
push
test
cli
pop
mov
push
sub
lcall
aas
mov
mov
fistps
stos
scas
addr16
inc
pushf
imul
or
sub
call
push
sbb
mov
das
in
iret
out
mov
inc
pop
out
lahf
out
lret
xchg
mov
push
lcall
out
leave
out
fnstenv
mov
rcrw
or
or
sbb
ljmp
push
inc
loop
cmp
pop
imul
mov
jmp
into
ret
add
into
mov
xchg
ljmp
pop
push
sub
cmpsb
push
mov
out
in
aad
sub
xchg
cmp
in
xlat
cli
fwait
out
subb
int3
out
and
and
test
ret
jmp
ret
adc
fildll
dec
fstps
jbe
mov
dec
das
jp
test
or
xchg
aas
jecxz
lahf
lods
ret
add
adc
add
test
xchg
xchg
mov
adc
mov
inc
and
mov
mov
sub
pop
pop
stos
icebp
je
xchg
add
in
jne
movsb
sti
loopne
ret
arpl
and
xchg
adc
adc
imul
mov
and
out
imulb
imul
lea
mov
in
xchg
adc
fildll
test
imul
xchg
add
fstps
and
lahf
cld
xor
xchg
out
push
iret
in
js
push
sub
adc
mov
pusha
shl
adc
psubsw
pop
mov
pushf
or
pop
mov
aas
add
lods
push
mov
jne
ss
mov
clc
stc
xchg
mov
ss
xchg
jns
test
and
xchg
push
pop
push
ss
aas
stos
ljmp
pusha
leave
scas
mov
test
loopne
dec
ret
leave
scas
fdivrl
stos
cmp
test
lahf
jg
lea
rorb
sub
pop
rclb
nop
lds
movsl
adc
out
imul
sub
into
sub
mov
jmp
cli
dec
push
test
xlat
and
mov
rcrb
sub
pop
repz
mov
jp
mov
add
inc
jnp
lahf
leave
or
lret
iret
sahf
cmp
xor
addr16
aad
or
fstl
mov
in
sub
ja
push
pop
pop
push
cmp
push
mov
xor
outsl
cwtl
cmp
xlat
data16
rcrl
lahf
cmp
or
test
ss
pop
sbb
into
xchg
or
pushf
pop
dec
int
dec
cmpsb
into
jns
stos
imul
or
pop
iret
pop
stos
xchg
dec
mov
jno
ficompl
mov
dec
cs
xchg
push
jmp
rcrb
mov
push
fs
cld
das
divl
lret
fimull
sbb
outsl
pop
push
leave
push
aas
dec
out
sbb
mov
push
xchg
or
xor
mov
nop
xor
aaa
pop
jns
test
rol
sub
pop
or
stos
lahf
loopne
pop
push
push
push
loopne
pop
pop
fcomps
inc
dec
sbb
test
call
mov
or
fisttps
cmp
lahf
mov
xor
mov
adc
dec
mov
or
enter
jl
mov
outsl
mov
adc
adc
cltd
xchg
ficompl
leave
xchg
in
mov
cwtl
fcomps
cmpsl
mov
movsl
xorl
push
fdivs
pop
xchg
fsubs
ja
sbb
and
fisubrl
sahf
xor
in
lea
in
adc
clc
lock
shll
xchg
das
fldt
je
movsb
stos
insl
xor
ret
pop
xor
ljmp
and
ret
sub
xor
jl
add
mov
in
repnz
les
jmp
cmpsl
pop
push
pop
xchg
movsl
rcrl
pushf
movb
pop
cmpsl
sarb
mov
sti
push
repz
mov
add
mov
xor
mov
inc
xchg
shl
loopne
and
xchg
bound
ja
lods
push
xor
rolb
divb
call
enter
cmc
ss
les
dec
mov
push
xchg
xchg
mov
jo
and
cmpsb
js
xchg
bound
fsub
mov
mov
sbb
call
push
out
aad
shll
adc
repnz
mov
push
out
add
inc
xchg
js
popf
mov
jbe
addr16
mov
jb
mov
out
pop
daa
out
pop
push
loopw
ret
repnz
mov
inc
xchg
sub
out
mov
divb
mov
arpl
lret
out
into
jbe
push
mov
gs
stc
data16
lock
out
push
mov
push
jbe
das
mov
data16
ss
adc
fcom
sub
jnp
adc
ret
fs
adc
adc
js
scas
xchg
sbb
pop
and
and
mov
mov
shll
in
in
addl
int3
out
shll
fs
call
call
mov
into
mov
adc
out
adc
ss
stc
jl
call
dec
mov
movsb
out
xchg
cmc
push
adc
push
stos
je
mov
divl
cmp
push
loopne
into
in
xchg
fcomip
pop
dec
fcmovne
cmpsb
or
fistl
data16
and
push
inc
xlat
js
push
mov
into
test
jbe
jno
sti
push
js
xchg
adc
adc
mov
out
adc
fstpt
fldt
js
call
cli
adc
push
sahf
pop
decb
jb
adc
xchg
cmp
push
sahf
push
int
push
inc
push
xchg
adc
rcrb
push
xor
cltd
sarb
test
xchg
sub
pop
mov
es
push
shll
dec
dec
aad
sahf
and
or
jnp
aad
and
lret
inc
xor
cmc
add
jo
xchg
xor
ss
pop
mov
push
outsb
mov
sti
xchg
je
pop
or
aad
mov
mov
jbe
lahf
xchg
out
xor
pop
test
mov
mov
and
pop
and
xor
sarl
fsubr
cmp
xchg
lret
es
mov
int3
lods
gs
adc
mov
dec
push
mov
adc
adc
mov
dec
into
mov
in
mov
out
ret
dec
inc
cli
mov
stos
push
cmpsb
outsl
lcall
mov
and
icebp
mov
arpl
movsl
dec
sbb
pop
mov
clc
imul
aad
dec
cmp
dec
into
xchg
mov
xor
inc
in
fidivrs
mov
ja
push
add
sbb
cmp
icebp
cmp
cmp
daa
aad
out
aam
aaa
dec
inc
xor
and
int3
mov
or
adc
out
mov
movsb
rolb
jmp
dec
ss
aad
cwtl
xchg
push
stos
rcll
push
pop
rcr
jne
stos
pop
push
adc
into
mov
mov
push
push
cmp
test
xlat
int3
repnz
adc
rcll
loope
shll
ret
aam
cld
shl
pop
test
pop
mov
stos
xchg
lret
mov
jp
divb
push
cmp
mov
ds
xchg
out
pop
sahf
add
xor
jmp
cli
dec
jne
pop
clc
stos
inc
mov
dec
cmp
gs
push
test
fwait
xor
out
dec
aaa
insb
imul
ja
xchg
stos
sub
ja
jbe
push
or
pusha
sarb
ret
push
nop
lock
xorl
add
push
mov
adc
mov
ficompl
ficoml
je
add
sub
leave
mov
ret
cmp
mov
mov
push
sbb
push
inc
popf
out
mov
inc
xchg
daa
xchg
and
mov
or
jmp
jg
sahf
add
clc
loope
jmp
mov
data16
rclb
cwtl
jo
shr
push
push
cmpsb
pop
push
movsl
out
push
bound
sbb
pop
sbb
pop
add
jnp
out
pop
out
xchg
mov
mov
adc
pop
roll
aad
xchg
dec
push
sahf
push
dec
int3
rcll
dec
pop
dec
push
or
outsb
adc
jnp
out
mov
jb
idivb
cmpsb
fimuls
sbb
loope
mov
out
xchg
sbb
mov
in
xchg
mov
sbb
push
adc
push
mov
pop
out
mov
sbb
jmp
jbe
std
or
or
in
int3
data16
mov
into
push
xlat
push
aad
lret
push
or
xchg
fcoms
notb
push
ficoms
adc
or
mov
rcll
sbb
sbb
ret
jg
divb
out
adc
xchg
mov
add
lret
and
xorl
push
negl
xchg
adc
loope
addl
jmp
jg
or
stos
repnz
push
loopne
scas
push
lret
outsb
adc
movb
enter
test
lret
mov
vprotb
movsw
sti
leave
dec
into
xchg
or
xchg
rorl
xchg
cmpsb
and
and
into
dec
mov
rcrl
jb
and
repz
dec
test
xchg
add
adc
push
add
push
mov
and
pusha
incb
cmpsb
push
mov
jp
mov
ror
mov
in
adc
aam
rol
pop
loop
inc
sbbl
in
xorb
arpl
ret
xchg
push
fadds
out
mov
xchg
bound
mov
adc
push
in
adc
lret
mov
fstps
pop
sub
movsb
jbe
ret
loop
xchg
inc
icebp
in
aam
jecxz
out
test
pusha
xchg
aam
xchg
repz
push
mov
movsb
mov
into
pop
cmp
cli
out
ret
rorl
mov
rcll
mov
ret
js
cmpsl
push
repnz
xchg
mov
xchg
bound
and
les
rcr
pop
xlat
pop
clc
push
adc
adc
out
and
and
insb
ret
jmp
stos
xchg
loope
push
add
or
dec
std
pop
pusha
or
add
add
fiadds
flds
pop
xchg
fsub
pop
ret
fistpl
pop
and
pop
ljmp
pop
repz
push
push
xor
mov
pop
gs
jne
push
xchg
and
push
jp
jp
jp
jp
jp
jp
mov
push
rorb
mov
dec
lret
inc
inc
jne
enter
mov
jo
sarb
adc
dec
xchg
shl
data16
lcall
sahf
movsb
mov
movsb
pushf
into
push
orb
outsl
sti
pop
xor
push
jg
xchg
js
js
cmp
cmp
and
cwtl
xchg
push
shrl
xchg
in
inc
fsubrs
js
push
ljmp
ret
addr16
inc
pop
pop
and
inc
xchg
je
imul
jno
scas
mov
mov
fs
int
ret
jne
repnz
les
das
xchg
mov
pop
out
js
dec
adc
mov
mov
inc
into
mov
xor
jns
lods
lods
jnp
sub
adc
mov
in
xor
mov
inc
shll
mov
sub
push
sub
in
dec
push
mov
out
hlt
test
xchg
lods
cmp
lret
arpl
cmp
adc
in
fnstsw
loop
dec
fs
repnz
adc
je
pop
push
adc
lcall
add
adc
mov
repz
lcall
orl
lcall
stc
and
mov
push
xchg
sub
stos
dec
adc
rcr
xchg
inc
test
shl
and
inc
pop
outsl
roll
inc
sbbb
sbb
aad
ss
adc
lods
adc
outsb
xor
xchg
sbbb
adc
jmp
and
or
add
shlb
addl
and
scas
outsl
mov
add
push
push
mov
jns
in
loopne
xor
out
dec
cld
pusha
loop
xchg
mov
or
shrl
lock
sub
pop
in
fwait
mov
lret
add
jae
enter
add
inc
and
push
xchg
aaa
arpl
sbb
inc
jecxz
fs
mov
and
cmp
aad
mov
jg
popa
sub
mov
adc
psubsb
mov
or
push
cs
out
jmp
jl
shl
and
aaa
push
jbe
das
loop
sbb
call
push
and
lahf
mov
xchg
shr
mov
jbe
push
bound
hlt
xchg
bound
pop
mov
fildl
mov
inc
shll
jl
into
lret
cmpsl
fsub
andb
loop
and
test
gs
push
or
test
and
mov
adc
adc
jbe
sub
push
dec
sahf
bound
sbb
xchg
test
out
sbb
ljmp
xchg
dec
xchg
xchg
data16
sbb
push
mov
ret
xor
gs
test
stos
popf
dec
dec
lock
xchg
test
pop
sti
cmp
data16
out
xchg
xor
or
data16
popf
jne
pop
dec
aad
orps
dec
js
notb
dec
dec
fstps
gs
mov
pop
dec
into
ss
mov
dec
cmc
adc
inc
adc
aad
xor
pop
mov
sub
aad
gs
pop
jle
int
das
push
push
mov
in
shlb
jp
sti
lret
aad
movsl
aad
test
loopne
call
pop
adc
enter
mov
sahf
sub
cmpsb
clc
mov
fmul
pop
adc
sarb
pop
pop
dec
popa
or
dec
mov
push
adc
inc
aas
mov
and
xchg
ss
and
shl
ret
jnp
call
push
xchg
jle
repnz
inc
jg
pop
test
repnz
jmp
iret
pop
inc
mov
in
sub
sti
fcoml
dec
mov
pusha
testl
js
lea
xor
lcall
xor
cwtl
inc
lahf
dec
dec
cmp
push
decl
test
add
push
test
or
pop
mov
mov
jbe
mov
mulb
ljmp
in
bound
pop
dec
mov
jnp
cmp
out
inc
mov
repz
xlat
and
jb
cmp
ja
call
stc
lods
sub
call
int
mov
nop
out
popf
pop
dec
call
xchg
ss
cli
imul
mov
inc
ja
enter
in
pop
ss
adcb
mov
xor
fmul
into
jmp
out
das
jo
inc
int3
int
jecxz
rcl
inc
loop
test
cmp
nop
and
or
sahf
into
fdivrl
or
push
gs
xchg
enter
mov
push
je
add
lret
mov
xor
int
les
aaa
dec
push
cwtl
push
test
add
ds
sub
iret
fldt
mov
sar
xor
clc
call
aad
cwtl
enter
dec
call
jns
adc
mov
enter
inc
in
jno
pop
fs
jb
loop
hlt
mov
xor
int
jmp
dec
outsb
into
movsb
mov
inc
cmp
adc
inc
fcmovb
into
shr
push
jb
xchg
test
push
mov
mov
iret
inc
xchg
dec
lods
jle
pop
sbb
movsl
add
sub
aam
inc
test
adc
dec
pushl
adc
mov
stos
popf
dec
jle
imul
fnsave
xchg
add
enter
mov
push
xchg
iret
aas
dec
enter
jbe
test
adc
imul
mov
mov
xchg
ss
push
mov
int3
cli
iret
or
test
inc
aaa
or
xchg
sbb
xchg
push
adc
int3
aam
out
lds
ficoms
imul
mov
fsub
js
lds
jg
call
dec
mov
xor
ret
push
imulb
lds
rcll
aaa
cmc
rorl
adc
call
xchg
dec
ss
in
mov
stc
loopne
aam
push
xchg
lods
pop
mov
pop
arpl
pop
ja
sahf
ret
dec
into
lret
ljmp
loope
rclb
push
push
aam
repnz
inc
push
push
rcr
push
fidivrs
stc
fmull
pop
sub
int
mulb
mov
aas
push
cwtl
mov
push
sahf
adc
out
out
mov
inc
inc
jnp
clc
sub
mov
xor
and
mov
push
jecxz
xor
or
addr16
int
int3
jne
and
js
and
mov
pop
sub
rcll
clc
and
loopne
fdivp
pop
lods
leave
pop
out
lret
fwait
insb
sub
adc
inc
mov
adcb
add
loop
xor
shlb
mov
ja
clc
pop
xor
ss
push
lret
movb
mov
cmp
pop
pusha
jnp
jbe
jl
sub
fisubl
pop
cmpxchg
lods
mov
xchg
loop
in
inc
dec
adc
mov
call
xlat
sub
pop
pop
xor
xor
in
ss
gs
or
aam
les
push
cmp
pushf
imul
repz
leave
out
iret
addl
jb
testl
and
movsl
lock
icebp
cmp
cs
push
xchg
es
arpl
and
dec
and
push
mov
mov
cmp
mov
punpcklbw
outsl
add
inc
bound
push
scas
aam
and
xlat
divl
adc
push
jl
push
add
je
mov
mov
mov
inc
loope
movsl
push
scas
push
out
xchg
adc
lret
inc
mov
pop
js
inc
pusha
loopne
rcll
mov
mov
or
mov
xchg
clc
adc
xchg
ja
aaa
sahf
xchg
fimuls
ss
stos
push
imul
push
mull
mov
xchg
adc
mov
daa
js
xlat
or
xchg
mov
pop
es
and
sub
pop
test
lret
mov
sub
jnp
sbb
jns
fidivl
jae
add
mov
xchg
incb
test
es
ja
clc
push
add
push
cmc
aam
xchg
adc
push
out
inc
lret
push
loope
icebp
mov
test
lds
cwtl
xor
mov
mov
enter
push
clc
aad
lods
pop
mov
push
repz
int
loopne
jle
in
enter
and
xchg
cmc
jbe
adc
sub
loop
test
push
out
sti
lock
push
aad
cwtl
les
je
pop
and
int
mov
pusha
dec
push
sbb
pop
cmpsl
cwtl
mov
movsl
mov
shr
cmpsb
xchg
jne
jbe
push
subl
lret
sbbb
inc
fs
push
and
cltd
push
in
scas
and
sub
mov
cmp
into
inc
loope
xchg
inc
cmp
adc
add
sbb
aaa
or
push
icebp
and
jne
fcom
push
mov
xchg
fcoms
mov
movsl
cmc
in
loop
iret
sub
cli
das
nop
adc
bound
aad
jp
in
jne
nop
xchg
xchg
push
jge
push
inc
pop
in
cld
fistl
pop
fwait
es
int
gs
gs
and
jecxz
test
lret
clc
jbe
mov
add
mov
int
xor
out
repz
daa
iret
xchg
into
fisttps
sub
pop
xlat
shlb
sub
iret
and
sub
mov
inc
mov
or
mov
enter
sbb
xor
xchg
data16
mov
bound
mov
xchg
fdiv
xor
mov
push
xor
ret
inc
pop
mov
ret
push
jno
ja
popf
lahf
aam
sarb
xchg
jbe
fsubrs
sbb
push
aad
int
and
push
mov
repnz
cmpsl
push
dec
cmc
into
push
xchg
cmp
ret
imul
addr16
imul
xchg
push
or
fdivs
and
imul
lahf
and
idiv
repz
jne
out
pop
test
jmp
adc
lret
or
idivb
shll
andl
int
mov
jne
push
inc
xchg
or
xor
rclb
sbb
jne
pop
inc
jbe
mov
jb
mov
jae
repnz
fs
cmpsl
sbb
jle
repz
or
mov
call
ss
sub
int
popa
mov
sbb
mov
icebp
addr16
sbb
rcrb
mov
inc
jns
push
dec
repz
add
xchg
out
cmp
or
clc
test
mov
fdiv
lds
xor
or
out
mov
xor
jae
mov
jbe
gs
add
jecxz
pop
mov
pop
and
ret
rolb
mov
pop
cli
mov
dec
std
xor
scas
mov
mov
pop
inc
aaa
sub
push
int
mov
data16
inc
push
ret
sbb
xchg
ret
mulb
adc
mov
mov
inc
jmp
cmpsl
pop
jbe
pop
popf
into
aam
xlat
push
in
outsb
xor
jno
xchg
and
adc
es
and
repnz
cwtl
cwtl
cmp
mov
int
jg
or
dec
les
add
bound
aad
movsl
push
ret
sub
dec
jno
xchg
aad
jg
fdivs
adc
pop
neg
rcrb
inc
clc
imul
cld
xlat
scas
mov
repnz
inc
addl
dec
hlt
ret
sarl
in
and
jge
xchg
push
push
call
repnz
jns
mov
ja
pop
js
repnz
inc
std
push
int
loope
push
add
pop
adc
movsl
mov
mov
enter
dec
int
bound
arpl
data16
out
test
int
and
testb
xchg
jnp
adc
sub
adc
out
int3
insl
push
jecxz
push
mov
push
lea
mov
shlb
loope
push
clc
add
cmpsb
out
jns
xchg
cmp
and
mov
and
je
adcl
ret
inc
xlat
and
enter
popw
fcom
clc
les
std
pop
data16
dec
popf
negb
pop
xor
test
fsubs
notb
sbb
fdivrs
shll
shr
push
add
popa
add
mov
jmp
fiadds
repnz
loope
enter
xchg
push
into
call
or
aam
jle
popf
clc
xor
adc
aam
xor
push
test
cmc
inc
mov
push
mov
data16
cmpsl
push
scas
inc
push
pop
push
int
movsl
mov
sub
ja
sti
add
xchg
aad
in
xlat
jbe
mov
inc
mulb
xchg
idivl
cld
jo
and
jecxz
scas
test
movsl
cmpsb
jne
out
or
into
movsb
ss
out
ret
test
mov
loopnew
push
mov
inc
pop
arpl
pop
rolb
mov
push
sbb
jl
daa
push
movsl
xchg
stos
cmp
ss
out
adc
jne
rorl
push
and
xchg
mov
bound
dec
negb
mov
repz
lahf
nop
lods
mov
arpl
out
movsl
insl
push
sbb
daa
into
mov
push
inc
mov
arpl
test
shlb
je
icebp
add
cs
and
add
mov
xlat
mov
sahf
pusha
pop
pusha
xchg
ds
fs
sub
xchg
or
push
cmp
sti
or
cmpsb
dec
inc
lods
mov
gs
xchg
xlat
fsubrs
adc
sbb
aaa
sbb
addr16
mov
and
lods
mov
popf
aam
jge
rcl
jo
mov
dec
xchg
push
and
pop
dec
adc
fld
sbb
lret
test
imull
js
sub
call
mov
mov
sub
dec
in
pop
bound
sub
mov
xchg
jns
cmc
xlat
int3
andb
adc
and
test
repz
movl
jb
mov
aad
sbb
aam
cli
pop
insl
pop
xor
aaa
test
aam
xor
in
test
sti
movsw
aaa
or
inc
mov
icebp
inc
mov
push
lods
or
mov
es
mov
xchg
int
and
cld
stos
mov
xchg
push
daa
fsubs
pop
push
and
push
loopne
adc
aam
fs
and
and
sub
jge
sbb
jbe
sbb
mov
call
mov
aaa
je
pop
xor
xchg
movsl
out
inc
fisubrl
xchg
clc
inc
daa
mov
xchg
mov
pusha
enter
jecxz
es
jne
inc
push
xchg
pusha
shrl
mov
out
sar
push
lods
jecxz
sub
loop
xchg
popa
pop
mov
fmul
add
movb
xor
stos
lods
ljmp
scas
and
ficoms
inc
pusha
gs
faddl
pop
ja
clc
ss
test
int
call
sub
cmpsl
mov
icebp
or
mov
fwait
lcall
push
outsb
jnp
fcompl
and
mov
out
push
mov
dec
xchg
int
mov
repz
movsl
out
inc
out
ret
xor
fisubs
popf
cmp
mov
rcl
test
adc
inc
mov
gs
addb
cwtl
pop
mov
int
jne
addr16
mov
hlt
sti
test
push
es
loop
lods
mov
pop
test
xchg
out
clc
mov
and
inc
inc
inc
xchg
and
lret
and
push
pop
rcrb
xor
mov
daa
data16
inc
arpl
xchg
lods
add
xor
add
fcoms
shlb
int
insb
jb
mov
jbe
jbe
inc
push
out
mov
ficomps
push
mov
divb
or
pop
outsl
xchg
push
push
in
out
cwtl
movsl
inc
test
push
icebp
xchg
xor
sarl
sarb
punpcklbw
mov
mov
rcrb
and
jb
arpl
aas
push
inc
test
push
imul
xor
shll
std
les
pop
test
lds
add
xor
iret
jl
mov
add
testb
xchg
stos
add
out
xor
cmpsb
xor
popa
daa
enter
ds
rcrb
mov
pop
lahf
pop
test
in
cltd
mov
sbb
and
aam
push
xchg
add
arpl
xor
cld
mov
jmp
add
mov
fsub
nop
stos
lret
int
test
negb
imulb
fsubrs
and
and
out
aam
mov
jne
mov
push
dec
lret
jl
xchg
mov
inc
out
das
push
cld
aas
jae
dec
xor
mov
jg
mov
or
scas
das
in
push
iret
mov
mov
lret
push
stos
je
push
xchg
jne
and
fwait
push
rcrl
gs
cltd
xchg
cwtl
mov
mov
push
push
mov
orb
xchg
arpl
adc
mov
jns
repz
int3
dec
jae
nop
sub
push
xor
adc
iret
cmp
cmc
mov
lea
fdivrl
rcrb
movsl
mov
mov
aam
sar
lds
call
fcoml
jno
pop
lret
movsl
mov
cmp
push
inc
into
adc
aam
or
ja
cs
sbb
xor
and
add
push
pop
pop
insl
dec
and
ret
sahf
je
add
mov
or
in
sbbl
mov
call
dec
int3
push
xchg
shrl
inc
inc
xor
in
jmp
add
mov
adc
gs
pop
scas
aam
into
mov
jnp
roll
xchg
xchg
xchg
fdivrl
int
into
lods
push
repz
jecxz
adc
push
mov
bsf
adc
xlat
mov
xchg
and
test
shll
leave
jecxz
mov
hlt
sub
arpl
repnz
xchg
xor
xor
data16
adcb
out
jae
fisttpll
pop
into
and
add
jmp
and
insl
std
dec
push
inc
int
lret
jb
lret
adc
int3
stos
fidivrl
jl
push
fwait
addb
or
ss
xchg
mov
pop
push
xchg
pop
daa
mov
sub
sti
daa
pop
into
mov
loope
push
jno
imul
dec
or
xor
out
lcall
pop
pushf
adc
aas
cmp
push
mov
cltd
pop
dec
punpcklbw
rcrb
sbb
out
cmp
cli
leave
aas
lods
fbstp
addl
push
das
es
mov
jmp
cmp
pop
outsl
mov
sti
ficoml
xchg
push
pop
cmp
aad
or
fucomip
mov
pop
mov
rcr
dec
pop
fmull
mov
cmp
int3
pop
adc
test
dec
push
sub
mov
xor
mov
int3
pop
lcall
add
insl
es
add
pop
jg
and
repz
push
and
iret
mov
es
std
sub
mov
mov
leave
push
test
dec
shl
scas
cmp
and
jp
mov
dec
in
dec
cltd
arpl
cmpl
stc
or
cmp
cmp
aaa
jg
or
popf
je
fdivr
cwtl
stc
rcrb
jg
or
push
add
xor
sbb
out
jle
into
mov
jbe
or
lret
stos
daa
mov
shll
aaa
mov
mov
hlt
leave
mov
pop
in
mov
enter
inc
mov
xchg
mov
xor
xchg
adc
mov
xor
jae
enter
xor
mov
jmp
pop
xchg
jb
fcmovu
loopne
dec
mov
aad
xor
push
lea
mov
jbe
scas
aas
jg
lret
leave
dec
cmp
xor
testb
dec
out
push
clc
xlat
push
mov
push
in
xchg
pop
add
jmp
ja
mov
push
mov
push
push
mov
lods
dec
jge
scas
mov
pop
loope
and
repnz
jnp
lock
mov
insl
jbe
adc
dec
outsb
ret
and
inc
sbb
xor
out
mov
sbb
pop
loopne
push
mov
rclb
leave
inc
sbb
aad
jnp
mov
out
inc
call
mov
idivb
insb
loop
out
or
iret
xchg
repz
add
jae
push
out
inc
sarb
pusha
or
jns
mov
das
add
test
inc
je
dec
mov
pop
mov
dec
mov
push
xor
aas
xchg
xchg
xor
test
xor
xchg
push
mov
in
rcrb
rorb
pop
imulb
imul
mov
push
lcall
lods
insb
lahf
shl
stos
push
popf
icebp
sbb
movsb
dec
test
idivb
pop
rcrl
fildll
cli
iret
jae
pusha
scas
push
pop
out
mov
or
pop
mov
pop
or
enter
js
dec
pop
mov
test
aas
repnz
push
popa
lret
xorb
and
rolb
int3
js
repnz
in
clc
mov
pop
cmp
ret
mov
mov
push
push
es
cld
mov
mov
loopne
mov
push
in
adc
lds
xchg
mov
push
shlb
out
pop
fs
data16
enter
out
push
jnp
inc
iret
imulb
adc
or
idivb
or
es
cmc
jnp
mov
notb
push
xor
fsubrs
push
out
lcall
lret
mov
out
loop
vpmulhuw
mov
loopne
enter
fisubl
gs
scas
xor
sarb
xor
pop
push
aaa
sbb
push
bound
rcll
icebp
add
xor
adc
hlt
add
fs
adc
repz
add
xor
decb
lods
mov
std
dec
pop
sub
and
add
xor
out
decl
das
stos
mov
dec
pop
sub
test
stc
dec
pop
sub
lods
mov
dec
pop
sub
stos
mov
sti
dec
pop
sub
dec
aad
dec
push
mov
test
push
jmp
dec
pop
cmc
add
call
not
mov
loope
in
lds
mov
stc
enterw
lret
and
sbb
fsubrl
fistpl
cmp
sub
cltd
loopne
push
dec
jecxz
ficoml
push
rcl
xchg
inc
fwait
rolb
sbb
fistpl
mov
cmp
inc
jmp
ficoml
or
icebp
or
inc
and
test
movsl
sub
sahf
ror
cmp
push
or
arpl
sbb
push
stc
sar
add
xlat
jae
pop
rcl
cmp
xchg
push
adc
or
jne
jl
cmp
repz
rolb
nop
into
cwtl
dec
push
rcrl
push
xchg
es
fistl
rolb
incl
stc
fildl
add
cmpsl
lods
scas
pop
loopne
jmp
inc
mov
or
cmp
rorb
repz
lods
mov
xchg
shll
icebp
lahf
xchg
jle
add
lcall
pop
test
inc
push
pop
shl
mov
add
in
cs
imull
cmp
xor
cwtl
push
inc
xchg
pop
aad
jo
inc
jecxz
fsubrp
adc
dec
shrl
fcoml
outsl
adc
mov
mov
ds
xor
mov
sbb
movsb
je
aam
js
sbb
repz
pop
jae
lods
xchg
das
or
push
jg
sub
xchg
or
into
mov
sti
mov
jecxz
jno
xor
inc
pop
test
push
add
pusha
fidivrl
xchg
pushf
xor
andl
idiv
mov
xlat
ror
sti
fcomps
cwtl
sub
cwtl
mov
aad
sub
fucom
sbb
add
hlt
mov
clc
mov
dec
jbe
sarb
into
pop
lock
jle
jmp
inc
cli
sub
pop
movsl
rcrb
jg
mov
xor
out
sarb
adc
imul
call
fstpl
into
jmp
pop
inc
jno
test
xchg
test
mov
jle
imul
pop
xor
inc
addr16
arpl
test
xchg
sbb
movsl
addb
aad
shl
adc
dec
or
jp
sub
push
sub
xchg
and
je
pop
xor
adc
lock
andb
dec
repnz
test
pop
cs
jp
pop
mov
inc
xchg
add
mov
sbb
cwtl
int3
sub
add
jle
or
jae
sti
push
fldcw
adc
jg
mov
jno
fistl
sub
lea
mov
outsb
pop
movsl
xlat
aaa
fisttps
mov
mov
push
nop
fmuls
dec
shrl
dec
add
addl
clc
pop
mov
mov
fsubr
sbb
daa
xchg
loop
cmc
push
mov
xchg
cmpsl
mov
jae
sbb
add
jno
push
cli
xor
insb
inc
mov
nop
mov
push
inc
je
call
out
sahf
scas
or
add
repnz
push
adc
and
cmpsb
fnstcw
lcall
xchg
add
cli
jecxz
or
add
ret
mov
in
adc
sub
sbb
in
sbb
push
xchg
mov
push
loopne
aas
add
and
cmpsl
sbb
movsl
pop
or
popa
add
xlat
test
jno
fistpl
in
popf
xchg
aad
push
inc
mov
in
loop
out
or
adc
fimuls
jo
ret
mov
out
mov
in
or
repnz
rcl
mov
sub
mov
xor
xchg
xchg
rclb
mov
scas
sahf
aam
push
ss
out
jne
add
cltd
pop
jg
pop
stc
sbbb
pop
and
cwtl
jecxz
sub
xchg
pop
aad
roll
fdivrs
cmp
sbb
pusha
mov
mov
jecxz
pop
add
fcoms
cmp
scas
ja
xchg
into
mov
xchg
inc
lret
sub
inc
inc
mov
xchg
fistpl
stos
ja
into
sti
jbe
push
mov
imul
xorl
and
add
adc
push
ret
lods
push
jmp
inc
mov
cmc
pop
stc
test
or
inc
lret
test
shlb
jle
mov
push
and
cltd
cmp
es
cmp
jbe
popa
fisubl
mov
or
inc
lods
popf
icebp
cmpsb
xchg
mov
inc
cmp
mov
xor
inc
xor
adc
cmpsl
or
bswap
mov
jmp
dec
test
lret
mov
dec
pop
outsb
add
xor
lcall
js
mov
push
loopne
or
mov
adc
pop
and
jns
mov
cld
push
repnz
and
cmp
sar
lods
nop
sti
cmp
cmp
pop
scas
cmp
push
or
insl
movsl
xchg
insb
xor
mov
push
das
ja
rcrb
jecxz
cwtl
ljmp
push
repnz
fldcw
mov
xchg
dec
in
cmc
pusha
inc
push
mov
jae
push
ja
add
rcrb
test
xchg
movsb
and
cli
jno
mov
or
dec
add
xor
mov
cmpsb
into
mov
adcl
inc
adc
cli
xchg
mov
inc
sbbl
icebp
jns
sub
imul
in
and
mov
push
add
cmp
sahf
sbbl
pusha
inc
pop
dec
outsb
push
or
mov
jo
mov
les
cltd
je
mov
sub
pop
push
cwtl
fidivl
jb
and
enter
jp
sbb
mov
aaa
nop
adc
shlb
inc
add
mul
repnz
adc
inc
ljmp
xor
int3
xor
cmp
mov
add
lea
aas
xorl
dec
jae
test
out
sahf
stc
mov
out
push
jns
nop
sbb
lret
daa
sbb
shlb
push
mov
mov
lahf
pop
add
push
sub
iret
nop
add
pop
das
inc
and
mov
out
inc
fsts
dec
ficoms
xor
call
jmp
call
mov
jmp
in
shrb
mov
xlat
mov
xor
mov
jbe
push
hlt
fcomps
mov
jo
in
lret
and
mov
cmp
std
fwait
ljmp
sub
es
cmp
dec
lods
jb
sarl
sub
jg
cmp
in
add
cld
sbb
je
adc
addr16
or
das
mov
xchg
cwtl
dec
jbe
test
cmp
mov
xchg
or
test
shll
and
push
pusha
repnz
xchg
and
mov
xchg
xchg
jb
sarl
sahf
aaa
push
popf
clc
jo
mov
mov
push
push
sarl
or
dec
repnz
int
sbb
in
and
mov
outsb
and
movsl
cmpsb
xor
adc
mov
pop
leave
sbb
jg
mov
sbb
fs
pop
imul
xlat
sarb
movsl
test
jle
cwtl
ror
aaa
icebp
outsl
movsb
mov
lcall
out
jmp
ret
sub
pusha
add
ja
xchg
mov
or
shrl
inc
popa
inc
and
hlt
aam
scas
add
cltd
inc
xchg
xchg
clc
xchg
adc
daa
lahf
sahf
jl
sbb
push
nop
fbstp
sti
lret
dec
jno
inc
dec
add
pop
mov
sbb
bound
sbb
mov
frstpm(287
pop
fwait
add
mov
lods
mov
aaa
push
les
xchg
arpl
test
or
outsb
inc
dec
or
movsb
jmp
jmp
dec
xchg
dec
push
nop
cltd
cmpsl
xor
pop
or
ja
out
iret
cs
movsb
scas
dec
cld
and
push
sub
jp
push
stos
stos
push
xchg
lock
add
aas
sub
pop
dec
jbe
lods
cs
dec
mov
out
sbb
pop
mov
jne
sub
cmp
fs
xchg
jmp
and
xchg
enter
dec
jo
movsb
jl
push
inc
jecxz
out
scas
add
les
add
lret
xor
push
pop
out
or
push
pop
int
sub
pushf
jno
xor
pop
cmpsl
xor
outsb
out
dec
or
mov
sbb
ret
mov
mov
ret
jmp
push
sub
mov
into
mov
jecxz
xlat
lret
out
mov
jmp
xor
pop
aad
icebp
ret
jne
or
cmp
fsubrl
movsb
test
cwtl
enter
les
push
arpl
out
in
fildll
sbb
adc
clc
or
mov
insb
sbbb
out
jecxz
rorb
test
xchg
lret
in
mov
sti
jns
mov
lock
or
xchg
mov
push
inc
cld
jbe
xchg
adc
sbb
fmuls
int3
cwtl
loope
ja
int
cld
push
sub
jl
cmpsl
jne
inc
pop
pushf
test
sub
inc
xlat
sub
inc
sub
mov
in
notb
aaa
jbe
push
pop
adc
jg
leave
out
imul
pop
sub
cli
std
test
pop
sahf
push
sbb
into
xchg
fsubl
inc
pop
js
sub
cmp
stos
jecxz
jbe
rcl
dec
andl
outsb
addr16
int3
xchg
int3
or
jne
out
in
ret
popa
aas
xchg
and
mov
cmp
jecxz
pop
dec
xchg
iret
push
pop
jge
mov
faddl
xchg
xchg
jecxz
xor
gs
jmp
mov
daa
fisubrs
and
xchg
or
add
insl
movsl
dec
pop
jecxz
mov
mov
and
pop
sub
dec
aas
sbb
xor
mov
mov
or
les
out
mov
and
popf
cwtl
add
aas
cmp
sbb
pop
push
xchg
insb
mov
sbb
flds
pop
xlat
or
ss
or
aas
cs
movsl
cltd
scas
out
lret
and
mov
int
cli
pop
cmpsl
xorl
loop
mov
into
lock
push
scas
inc
add
fdivl
xor
aaa
fcom
insl
leave
movsl
and
dec
xor
fdivrl
shl
mov
inc
loopne
mov
ficompl
sti
dec
cmp
subb
add
out
mov
cmp
test
dec
je
jbe
inc
movsb
mov
cltd
lret
dec
orb
push
dec
and
sbb
sbb
cmp
repnz
arpl
jl
popa
lods
or
sbb
loopne
out
sub
add
ja
cmpsl
iret
push
adc
imul
into
cmp
outsl
outsb
mov
inc
test
jo
pushf
cli
mov
adc
rorb
xlat
sbb
bound
cmp
frstor
je
pop
jo
lret
test
loope
pop
dec
test
shll
imul
add
out
mov
xor
mov
lahf
jno
sub
push
jmp
pop
stc
sbb
sbbl
mov
cld
cmp
sub
inc
cmp
dec
test
loope
mov
hlt
dec
movsb
mov
in
fmull
add
mov
pop
addr16
jmp
or
lahf
lods
fwait
mov
fadd
lea
lret
and
aas
popl
mov
inc
sti
in
out
xchg
mov
adc
mov
or
xchg
ficompl
cmp
rcll
and
mov
xor
fsub
xchg
addr16
sub
imul
inc
lcall
scas
out
lcall
into
cmp
cmc
jge
sub
mov
lret
inc
add
sbb
xorl
rolb
inc
rcl
hlt
add
jb
mov
test
subb
adc
cmp
lret
or
jl
je
subl
pop
nop
dec
pop
push
rolb
test
pop
xor
int3
mov
pop
outsb
pop
ret
jge
aam
and
dec
add
iret
in
sbb
add
or
call
rorl
mov
inc
or
in
push
push
test
fsqrt
fsubl
data16
iret
jl
stos
mov
push
jmp
fcoms
xchg
add
xor
in
gs
ja
xor
dec
fs
orl
das
or
rorb
pushf
mov
into
test
push
push
lret
lods
xchg
call
outsl
std
xchg
push
mov
data16
lahf
or
je
mov
jmp
mov
movsl
shll
inc
daa
jns
ss
push
cmpl
jmp
inc
lahf
xchg
pop
sub
push
dec
jns
inc
out
jmp
push
xchg
adc
gs
int
imul
xchg
int
aaa
stos
and
adc
test
aad
and
mov
jbe
mov
nop
scas
jge
or
adc
mov
push
inc
ja
cmp
sbb
sbb
xchg
add
mov
lods
cli
mov
int
rorb
mov
add
jne
fistpl
aad
mov
add
mov
popf
fmuls
and
es
lods
aaa
push
out
push
add
inc
push
jne
pushf
test
sbb
mov
push
sub
mov
push
inc
adc
cmp
dec
jae
xchg
or
std
icebp
js
pop
push
mov
push
imul
into
pop
mov
pcmpeqw
or
add
rclb
movsb
adc
mov
cli
pop
sub
cmp
cli
cmp
pop
or
mov
jo
add
insl
lea
ficompl
xchg
mov
xor
sub
hlt
jle
push
xlat
in
xchg
mov
sbb
je
call
dec
inc
sbb
out
imul
lret
enter
xor
cmp
xor
repz
insl
push
or
popa
stc
nop
mov
push
int3
xchg
movsl
sti
into
ja
jmp
inc
stos
aas
cmpb
xchg
mov
loop
sbb
pushf
daa
jg
mov
aad
cmp
and
pop
jecxz
ja
rcr
inc
inc
dec
mov
or
mov
subl
pop
fwait
in
pop
add
lock
push
mov
push
xchg
ret
pop
inc
movsl
icebp
mov
cmp
out
test
fsubs
cs
popa
dec
stos
mov
clc
mov
mov
jg
test
mov
idivl
sub
lretw
je
int
inc
stc
cwtl
add
es
addr16
mov
jle
cmp
std
in
inc
ret
add
mov
mov
out
ret
adc
roll
jae
mov
mov
fwait
push
mov
sbbl
xor
cmp
pop
dec
into
jbe
cli
loop
icebp
decb
scas
sbb
in
inc
mov
mov
jmp
icebp
test
adc
mov
dec
pop
lret
lock
cmp
popa
scas
add
popf
loopne
xorl
lods
in
cltd
test
movsb
outsb
icebp
stc
push
adc
movsl
mov
or
sub
xor
cmpsl
cmp
in
mov
icebp
decl
dec
sbb
jmp
xlat
imul
mov
pop
in
ret
stos
xor
or
jl
sub
mov
aaa
inc
jb
inc
addb
rcll
addl
lret
fst
into
es
ret
imul
jno
movsb
cwtl
cmc
in
mov
mov
push
pop
and
pop
fs
cmp
lcall
mov
mov
mov
movsl
jge
cld
mov
push
movsl
and
mov
mov
sbb
mov
loopne
pop
stos
es
push
cmp
jb
in
rcl
outsl
push
push
or
mov
and
mov
inc
pop
icebp
add
hlt
push
mov
push
adc
int
sbb
and
xchg
fbstp
lret
in
rcl
pop
jae
adc
ret
popa
push
jl
push
and
loopne
stc
or
pop
push
cwtl
movsb
xchg
sahf
call
int
and
arpl
push
pop
inc
je
xchg
leave
xchg
push
add
orb
xor
hlt
and
cmp
int3
std
repz
pop
mov
push
outsb
out
out
adcb
repz
push
xor
xchg
mov
sub
aad
mov
outsb
imull
cmp
inc
fwait
xor
addb
js
sub
or
and
int
sbb
pop
mov
insb
mov
xchg
pop
aad
lahf
fmulp
sbb
cltd
add
xchg
ret
sarb
pop
lret
fstpl
data16
fwait
dec
mov
mov
sbb
cmp
fs
xchg
imul
in
mov
adcb
jae
inc
fwait
cmpsl
inc
sub
je
sub
addr16
dec
test
adc
dec
pop
scas
gs
and
data16
fs
adc
cld
jge
xor
add
aam
mov
sub
dec
inc
cs
push
int3
xor
push
jp
je
ss
push
arpl
shlb
imul
jp
fcompl
dec
ljmp
fsubrs
loop
dec
mov
adc
jle
dec
pop
cli
gs
pop
xchg
repnz
nop
inc
add
dec
inc
lods
xchg
xor
mov
dec
xchg
jecxz
nop
inc
cmp
jmp
cmpb
jb
fsubrs
or
ss
sub
dec
sub
jae
jg
sub
test
pop
add
pusha
jb
iret
mov
rolb
orl
leave
pop
push
sub
xchg
mov
adc
das
cmpsl
push
leave
sub
xor
inc
stc
jb
add
jge
movsb
sbb
dec
jg
push
mov
fisubrl
lret
sbb
out
int3
cltd
xchg
addr16
gs
stos
and
lea
lods
movl
inc
insb
cmp
sti
or
daa
cli
mov
addr16
cmpsl
cmp
push
mov
shlb
add
call
jmp
lds
idivb
aaa
or
out
into
fwait
pop
mov
aas
jge
xor
rorb
mov
jecxz
mov
in
xor
out
sub
cmp
icebp
repz
inc
pop
call
push
int
scas
xchg
mov
lea
and
test
imul
jno
divl
push
mov
xchg
nop
xor
or
gs
jmp
xchg
hlt
enter
test
dec
add
icebp
xor
xor
mov
mov
add
cmp
dec
js
sub
sbb
aas
and
inc
xlat
gs
ret
lret
xchg
jmp
ret
sbbb
out
mov
pop
dec
mov
push
loope
daa
leave
mov
sbb
dec
jno
sbb
push
movsb
call
dec
in
outsb
in
pop
jne
enter
lret
jbe
out
jns
shlb
paddw
push
test
or
add
into
jno
outsl
pop
nop
les
rcll
and
imul
loope
add
xchg
push
mov
cmp
ja
push
notb
loope
mov
jne
mov
xchg
mov
inc
dec
jecxz
dec
push
cmp
aad
test
sub
jo
add
pusha
xchg
or
std
cmpb
mov
or
sbb
mov
mov
outsb
test
pop
lahf
lods
addr16
push
cltd
xchg
imul
rcrb
xchg
dec
ds
push
and
ja
into
out
pop
mov
pusha
cmp
clc
stc
inc
lret
in
stos
shlb
or
into
jle
fwait
add
lock
add
jp
sarl
dec
stc
xchg
jge
fnstsw
jb
cmp
cmpb
movsb
imul
jns
sub
lods
test
mov
jns
pop
jge
out
loope
sbb
sub
inc
add
xchg
xchg
rcrb
enter
mov
adc
inc
adc
push
mov
push
imul
fs
jl
pop
or
and
ret
lods
add
and
loop
push
out
bound
mov
mov
or
imul
push
add
add
inc
mov
adc
lods
cmp
rcl
adc
mov
inc
xor
mov
mov
xchg
jo
cld
movsb
data16
movsl
xor
lret
and
xlat
mov
sbb
jge
or
movsb
cmp
int
nop
imul
mov
inc
lahf
stc
imul
hlt
or
add
lods
ss
jg
or
xorb
aam
sub
pop
iret
cmp
mov
fcmovnbe
pop
xchg
repnz
sti
nop
jns
mov
mov
ljmp
mov
out
adc
in
sbb
data16
pop
dec
mov
or
jle
push
sub
jmp
loop
ja
mov
pusha
jno
mov
or
cmpsl
rolb
xchg
inc
xchg
jno
jo
sub
into
cltd
ss
and
sub
jne
sbb
mov
out
xchg
xor
pop
mov
xchg
add
lea
dec
sub
inc
xchg
fdivrl
inc
sbb
gs
stos
push
mov
ja
jo
fucompp
mov
nop
pop
mov
std
inc
fwait
sti
push
test
pop
mov
test
push
jp
jb
sub
imul
outsl
sub
sub
jmp
aas
rorl
inc
int3
dec
ss
xchg
add
test
or
stos
jbe
scas
push
and
test
pop
inc
sbb
bound
dec
sbb
out
cwtl
repz
and
mov
out
xor
cmp
push
loope
cltd
inc
jg
sbb
aaa
outsb
into
out
jge
mov
dec
mov
xchg
mov
fldl
arpl
repz
pop
add
bound
addr16
cmp
jle
inc
mov
cli
cmp
dec
and
repnz
movsl
outsb
shlb
into
gs
addb
data16
sbb
jo
lds
xor
cmp
push
test
pop
mov
imul
movsb
or
imul
jae
mov
inc
sbb
jns
jp
push
test
adc
push
cmp
xchg
sbb
out
repnz
xor
out
lret
pusha
outsl
jge
decb
subb
sub
push
dec
or
fisttps
mov
or
into
scas
adcl
aam
mov
add
inc
out
xchg
xor
addl
int3
in
out
int
arpl
test
sub
ljmp
mov
shr
repnz
ja
imul
pop
sbb
dec
fimull
cmc
stc
or
add
jmp
xor
or
inc
sbb
push
scas
mov
test
imul
cmp
inc
mov
push
push
pop
or
push
aad
jns
sub
out
cmp
inc
ss
cmp
jns
lret
mov
inc
fwait
cmp
sbb
xor
push
cmp
xor
sub
push
andl
arpl
repnz
xlat
add
movsl
cmp
lret
add
push
inc
mov
cwtl
icebp
xor
out
sti
pop
add
push
and
bnd
push
xorl
push
or
cmp
paddq
jo
adc
lea
xchg
adc
shll
ljmp
xor
dec
cmpl
out
insb
lcall
adc
xchg
cmp
xchg
sbb
movsl
imul
jo
cld
mov
ljmp
pop
cwtl
cmc
or
pop
test
cli
lret
andb
popa
push
cmc
dec
into
mov
push
dec
mov
jmp
or
fisttps
mov
pop
lock
mov
cmpsl
cmpsb
sbb
into
sbb
xor
aad
jae
add
sbb
aad
filds
out
inc
or
fmuls
sub
pushl
mov
cmpsl
pop
loop
or
add
push
dec
stos
jle
enterw
insb
or
fmull
dec
cmc
mov
jns,pn
mov
rep
jbe
sbb
mov
mov
dec
add
push
and
or
cmp
test
adc
lods
pushfw
or
fs
int
lock
xor
or
adc
rolb
fisubrl
xor
lret
arpl
aaa
shll
clc
mov
add
jge
cltd
cmpsb
stc
cmc
imul
leave
repnz
dec
dec
arpl
and
out
loop
sbb
rcl
addr16
lahf
inc
pop
pop
stc
scas
repz
lcall
mov
insb
jmp
or
sahf
xchg
jecxz
sbb
push
mov
pop
dec
sbb
not
stos
fildl
dec
or
fcompl
jle
pushf
movsl
mov
insb
dec
mov
sbb
xchg
inc
pop
mov
enter
gs
nop
inc
lret
mov
or
cmp
fabs
and
enter
int3
pop
mov
mov
fwait
xchg
push
xor
inc
push
mov
xchg
xlat
lahf
inc
inc
adcb
aaa
out
in
push
test
cli
fstl
sub
jmp
adc
xchg
stc
repz
cli
orl
add
jge
sahf
mov
xor
pushf
adc
and
test
mov
add
mov
dec
jo
int3
in
out
test
jg
cmp
mov
shl
xor
xor
and
rorl
rep
cmpl
jne
ss
in
inc
push
mov
cwtl
lds
repz
in
or
ret
mov
cmp
and
leave
lret
jno
mov
in
cmp
outsl
repz
and
sti
sarb
mov
mov
sbbl
dec
aaa
mov
jg
xchg
into
divl
xchg
xchg
mov
popa
mov
cmpb
dec
leave
out
lahf
iret
test
mov
jbe
pop
mov
aam
jecxz
sub
jne
push
sub
sbb
jge
das
mov
into
xor
add
jno
lret
mov
movsl
pop
mov
mov
cmpsl
mov
or
xchg
or
push
jl
std
cmpsb
fs
scas
jns
mov
int
dec
dec
xor
rcrb
leave
fwait
lock
shrb
mov
stos
cmp
mov
movsb
dec
leave
inc
push
jg
arpl
mov
shl
sub
aam
push
pushf
inc
and
pop
stos
sbb
jns
dec
push
ret
cli
xlat
outsl
sub
sbb
loope
sbb
mov
add
fwait
jae
cmpsl
push
inc
or
movsl
in
xchg
jle
sub
and
aam
std
xchg
stc
inc
lret
push
add
or
roll
dec
xchg
aad
lods
daa
push
mov
pop
jge
lret
mov
rclb
or
aas
outsb
enter
xchg
cli
addb
push
mov
fcoml
test
xchg
pop
imul
push
popa
push
mov
fucom
shlb
lock
or
dec
ljmp
inc
sbb
subl
lahf
fistl
repz
das
filds
cmp
sbb
cld
outsl
mov
pop
pop
xor
mov
adc
xchg
jp
jo
aaa
pusha
out
in
sub
mov
jbe
rcrb
jae
sbbl
test
add
add
pop
sub
mov
xor
mov
mov
decb
sbb
ret
pusha
xchg
subl
sub
stc
inc
add
lcall
inc
fwait
xor
inc
push
movsb
js
sbb
in
es
sbb
lret
inc
lahf
and
icebp
mov
movsl
dec
mov
lret
xchg
es
andl
mov
imul
sub
dec
das
cs
lods
mov
leave
or
pop
jne
test
stc
std
jle
pop
jecxz
fwait
cmp
pusha
in
pop
cs
lahf
aaa
mov
adcb
jge
and
popa
fldl
mov
pop
stc
mov
jae
push
mov
mov
lcall
adc
insb
jp
cmp
stc
loope
push
push
xchg
cmp
dec
inc
cmc
jae
pop
fists
add
pop
or
lds
cmp
sub
xor
cmp
sub
pop
sbbb
adc
ljmp
or
add
mov
jne
ficompl
mov
mov
icebp
insl
mov
inc
push
scas
stos
add
lcall
mov
imul
mov
aaa
loop
mov
ljmp
sbb
xchg
mov
test
ljmp
dec
or
test
jl
imul
xor
inc
and
test
inc
addr16
arpl
adc
shl
int3
int
cli
xchg
cmc
aam
push
adc
outsl
add
in
push
push
stc
adc
out
mov
xchg
lret
mov
push
mov
lret
mov
inc
xlat
int
mov
sub
xchg
inc
shr
pop
push
and
sbb
pusha
rorl
mov
jns
movb
andl
adc
inc
lahf
push
xor
pop
pop
jmp
rclb
sbb
shrl
lcall
or
and
sub
sub
scas
pop
adc
mov
cld
popa
das
repnz
adc
test
push
xchg
sbb
jg
or
les
sbb
lahf
ror
std
pop
dec
imul
ja
fldenv
push
xor
mov
cwtl
leave
fs
add
jl
adc
cmp
cmpsb
lahf
stos
or
sbb
cmpsl
inc
sarb
inc
out
jo
call
scas
rorl
jns
mov
mov
movsb
cmp
call
and
int3
pop
roll
add
sbb
inc
std
jg
sub
or
out
mov
clc
sub
ss
imull
enter
ljmp
sub
repz
test
popf
pop
fldt
mov
pushf
test
push
cld
inc
popa
ja
mov
into
mov
int
push
jbe
mov
fsts
aaa
mov
mov
sub
sbb
jge
aas
out
cmp
push
hlt
adc
into
jb
add
xchg
adc
xlat
loop
test
xchg
insb
jp
aam
scas
testl
ja
fiadds
jo
sbbl
fs
adc
pop
xor
jge
mov
popf
pop
pop
leave
cmpsl
sub
sar
push
mov
mov
xchg
inc
mov
subl
jge
mov
adc
not
imul
mov
lock
xchg
mov
ffree
cwtl
push
dec
bound
mov
xchg
ds
cld
insb
jmp
fwait
xchg
sahf
es
pop
js
jge
sub
into
stos
jg
jb
iret
pop
es
add
in
cltd
jae
dec
push
push
lret
fdivs
cmp
aam
or
call
mov
mov
cmp
imul
das
scas
pop
mov
dec
cmpsl
dec
xchg
add
cmp
aam
jmp
repnz
jae
out
aaa
cmp
cmc
dec
inc
or
out
stos
lahf
into
fstl
in
mov
lret
loop
sbb
jp
xor
mov
cmc
pop
xor
jl
mov
lret
sbb
inc
ds
mov
xor
pop
lds
loop
xor
mov
iret
add
data16
out
outsb
lds
dec
in
je
scas
mov
cmp
jbe
xchg
cmc
push
call
mov
push
sub
shll
pushf
je
and
jne
test
pop
sahf
push
fxch
testb
and
insw
inc
out
clc
loopne
sub
sbb
mov
mov
lods
sbb
push
fldl
out
out
push
jle
dec
roll
mov
cmp
shrl
clc
outsb
cmp
add
pop
mov
fisubrs
dec
mov
adc
pusha
sub
mov
pop
inc
out
and
fldl
movsb
jne
test
sub
arpl
sti
fcomps
or
jge
je
cmp
lret
or
in
into
sub
adc
jb
bound
icebp
scas
fs
mov
int
push
mov
xchg
mov
cld
push
xor
xchg
push
hlt
dec
aaa
mov
xchg
push
mov
mov
sahf
dec
shl
lcall
and
push
and
stos
mov
fwait
or
shlb
mov
mov
enter
jbe
add
mov
scas
iret
jne
dec
xchg
jb
mov
notb
popf
inc
push
mov
pop
fsubrs
jecxz
ret
cmp
jp
xchg
fimull
stos
push
gs
in
jmp
mov
sbb
and
xchg
les
mov
std
push
out
nop
stc
clc
inc
jne
mov
leave
or
jo
mov
incb
inc
popf
add
aas
cmp
jl
mov
lret
popf
and
repnz
hlt
outsb
and
xchg
je
jp
xchg
mov
xchg
sub
sbb
fs
test
shll
push
test
lcall
enter
hlt
insb
mov
push
notl
push
jne
dec
cmp
dec
es
jb
jbe
stc
inc
imul
push
cmp
shrl
es
fisubrs
mov
repz
jle
ja
fwait
bound
xor
cmp
stos
stc
std
add
xor
shr
stos
dec
gs
call
rcl
inc
sahf
and
adc
push
and
insb
mov
ja
addl
sbb
daa
aad
pop
add
dec
push
adc
mov
int3
or
lahf
out
xor
and
stos
ret
or
sahf
cmpsl
hlt
sub
push
sub
push
mov
aad
inc
mov
cmpsb
cmp
fs
rclb
gs
jle
sub
pop
or
and
mov
cmpsl
js
xchg
loop
lock
nop
orb
xchg
outsl
enter
das
mov
mov
mov
pop
les
pop
fimuls
push
arpl
movsl
mov
add
jb
xchg
lahf
cs
popa
test
lcall
bound
movsl
clc
sub
cli
pop
cmp
ret
push
orl
outsl
push
lret
mov
sub
push
xchg
into
arpl
dec
loop
xchg
rorb
pop
mov
push
sub
sub
mov
push
add
ss
cmp
std
rorb
xor
or
jbe
xchg
jg
int3
mov
lods
movsb
xchg
push
rcl
imul
or
xchg
je
cmp
out
fs
xchg
incl
js
xchg
pop
mov
add
lahf
cli
jl
fs
cmp
stos
jo
lods
cmc
out
leave
dec
inc
push
movsl
dec
mov
xor
ja
iret
inc
push
lcall
push
subb
mov
or
cmp
ror
ret
mov
mov
rcl
dec
popa
sub
lahf
add
lods
inc
das
dec
dec
js
add
xor
lock
lret
ja
push
into
into
push
xchg
movsb
or
insl
xchg
sub
cmp
and
xchg
into
shll
add
sbb
rcrl
dec
mov
mov
jae
test
aas
fldenv
ljmp
push
fs
shll
or
shll
mov
sbb
out
mov
in
sbb
mov
dec
ret
pop
adc
lea
and
icebp
jno
xchg
mov
dec
bound
mov
out
push
cmpsl
mov
inc
xchg
les
call
mov
imul
stc
xor
sbb
mov
xchg
mov
iret
or
lret
sub
mov
mov
arpl
pop
xchg
lock
das
inc
cmpsl
mov
lcall
loop
lods
dec
popf
pop
movsb
inc
cmpb
jo
pop
xor
jae
out
into
mov
in
fistps
sub
test
inc
jl
fcmove
imul
pop
jp
xchg
pop
call
out
jmp
negl
and
push
into
or
jno
ss
jmp
jg
imul
lret
insb
and
pop
jge
test
leave
sub
mov
sub
jne
lret
and
push
inc
mov
jle
daa
inc
mov
cmp
int3
and
cmpsb
mov
xor
xchg
lcall
inc
stos
mov
cmp
pop
shr
leave
mov
rolb
inc
mov
inc
mov
out
out
das
iret
cmp
nop
mov
mov
mov
aad
xchg
jl
rcl
cli
inc
pop
sbb
dec
mov
xchg
ljmp
pop
cmp
faddl
or
xchg
popa
adc
xchg
mov
stos
mov
iret
dec
stc
xchg
icebp
hlt
inc
out
sbb
jle
stc
shl
inc
mov
inc
jbe
add
cwtl
push
jmp
jecxz
leave
stc
gs
movl
rcl
sbbl
fdivrs
loop
int3
mov
add
lods
adc
lea
aam
dec
xchg
stos
jno
mov
mov
shlb
dec
fstl
das
stc
and
into
and
mov
outsb
ljmp
push
rolb
cmp
aad
push
xchg
enter
arpl
add
mov
jne
sub
js
in
stc
push
fwait
xchg
pushl
xor
outsl
sbbl
push
fildl
pop
in
mov
fidivrl
jns
std
sub
bound
cmp
and
inc
aaa
add
push
sbb
dec
fimull
ss
cmp
cmc
into
pop
pop
sub
lahf
repz
lods
aad
rorb
sub
mov
movsb
mov
das
mov
imul
cmp
push
test
into
cmp
int3
pushf
push
cmpsl
jl
stos
add
ds
faddl
jns
cmp
sub
dec
test
popf
out
popa
cmp
jecxz
ljmp
out
sbb
sub
mov
rclb
bnd
inc
xchg
dec
fs
jmp
xchg
insb
mov
imul
mov
push
fsub
or
sub
sbbb
mov
outsl
push
lods
popl
or
cs
in
add
ficoms
dec
sbb
jb
pop
paddd
je
movsl
out
imul
iret
push
ret
stc
lods
and
xor
das
and
clc
roll
test
shl
repnz
mov
jecxz
lret
jae
jecxz
push
push
ja
sbb
push
pop
idivl
cmp
into
fildl
fs
push
and
int
mov
dec
daa
cld
insl
es
test
xchg
xor
mov
sub
dec
lret
push
sbb
lcall
fiadds
test
mov
rcl
mov
repnz
mov
mov
arpl
into
mov
pop
and
sbb
adc
nop
lds
jl
rolb
lret
call
mov
sbb
or
mov
xchg
mov
out
imulb
jns
repz
lock
mov
jbe
add
jecxz
cmpsb
mov
mov
and
movl
and
xchg
and
inc
in
into
add
out
mov
mov
out
push
dec
xchg
jle
mov
xchg
dec
dec
or
inc
cmpb
sub
or
jl
ret
xchg
enter
dec
or
pushw
out
ret
xchg
aam
or
inc
push
lahf
xchg
cwtl
add
jmp
fmuls
lods
clc
std
popf
and
add
arpl
stos
add
rcl
adc
lods
and
jg
cmovle
inc
lret
and
inc
shl
iret
dec
jbe
rcl
sub
cs
fldt
jne
inc
or
jne
rcrb
leave
xchg
adc
push
lds
ljmp
sub
fwait
out
mov
jbe
gs
xchg
sbb
cmpl
cmpxchg
jmp
jno
test
mov
inc
mov
aam
push
adc
popf
outsl
sbb
bound
aaa
push
in
and
inc
mov
inc
pushl
sub
dec
repnz
ja
xlat
fcompl
addr16
sahf
push
cmpsb
pop
mov
out
in
push
pushfw
adc
shr
test
sarl
aam
jo
shll
sbb
in
sub
inc
push
sahf
les
and
stos
xlat
outsb
mov
push
xchg
pusha
cmp
lahf
out
adcl
adc
mov
imul
jle
lahf
das
inc
insb
and
lret
orl
fimuls
icebp
sahf
push
repnz
mov
mov
aaa
lds
sbb
in
dec
mov
lret
pop
lods
cltd
cmpl
jo
adc
icebp
xchg
movsb
cltd
adc
cmp
mov
pop
movsb
arpl
dec
aad
in
pop
or
cmp
inc
adc
sbb
sbb
jge
daa
pusha
jb
cmp
sub
mov
mov
popa
xchg
in
sub
adc
fldcw
ss
sahf
jg
xchg
cmp
mov
lds
ret
jmp
and
push
mov
cmc
sti
adcb
notl
push
jp
ret
mov
fsubrs
pop
mov
cmp
cld
mov
inc
imul
pop
mov
fists
aam
push
adc
js
or
mov
xchg
adc
fldt
pop
mov
shlb
xchg
xor
test
fs
bound
sbb
cmp
push
movsl
dec
adc
loope
xlat
iret
dec
mov
xchg
push
int3
pop
popw
sbb
enter
lret
out
mov
pop
jmp
cmp
mov
cmp
cwtl
dec
add
shlb
rolb
insb
daa
incb
adc
lea
mov
xchg
ljmp
andb
mov
aaa
inc
popa
lods
aam
jb
test
sbb
dec
repnz
inc
test
mov
xchg
sub
lods
rcl
jle
fistps
inc
xchg
adc
dec
xchg
rcr
add
aad
pop
jl
inc
lock
dec
das
push
xor
add
cmc
ds
lret
ficompl
pop
ljmpw
subb
movsl
and
sub
xor
leave
in
mov
dec
sbb
pop
cld
xlat
fbld
es
in
pop
testb
push
cltd
popa
mov
jae
xchg
cmp
add
mov
outsl
fists
hlt
pop
sub
repz
enterw
std
vpmadcswd
shl
sbb
lret
mov
neg
push
imul
test
xchg
and
sub
fwait
pusha
add
stos
pop
mov
or
pushf
adc
cli
int3
jbe
push
mov
cmp
add
mov
pop
jp
jno
arpl
pop
popa
leave
std
pop
adcb
xchg
cltd
fwait
clc
into
cwtl
mov
sti
push
addb
les
and
stos
ds
jno
or
mov
jge
push
jecxz
stos
cwtl
sbb
iret
fcoms
in
lods
test
add
lret
jb
rcrb
sub
add
jo
sbb
mov
lret
pop
mov
sbbb
insl
das
mov
cmp
lret
add
icebp
fldenv
sub
lret
mov
cmpsl
test
aam
adc
outsb
mov
imul
and
adc
push
clc
das
sbb
mov
xor
test
mov
push
lcall
jne
enter
cmp
fisubs
push
ja
mov
push
in
adc
dec
push
cmp
fs
fdivs
outsl
mov
loope
mov
inc
jg
out
cmpsl
add
mov
mov
xchg
es
rolb
lcall
les
pop
sbb
push
enter
add
or
ss
les
push
repz
jle
jecxz
xor
mov
adc
aam
repz
dec
push
pop
push
jmp
das
scas
adc
cld
dec
imul
jae
into
decb
mov
cmp
nop
leave
mov
or
dec
sub
xchg
movsl
ds
mov
sub
cmc
or
push
sub
mov
cld
jecxz
push
test
outsb
outsl
es
repnz
stc
push
xchg
cwtl
cmpb
mov
lret
daa
scas
add
out
lcall
push
enter
and
push
dec
fwait
mov
ja
fildll
sar
lret
xor
jmp
out
decl
cli
sbb
outsb
xchg
xlat
shrl
add
movsl
xor
pop
outsb
sub
xchg
inc
out
movsl
push
fidivrl
cmpsl
into
cmp
pop
pushf
add
add
andb
aam
adc
mov
sarl
out
mov
jl
jp
sbb
sbb
int
test
test
cmp
or
mov
sbb
cmpsl
aam
jg
jae
out
jns
pop
sub
push
gs
inc
cmp
test
jne
xchg
mov
xor
cmp
xor
xchg
aaa
pop
mov
cmp
sbb
cmp
add
dec
es
pop
sub
inc
out
push
push
call
add
lret
out
dec
lods
mov
pop
dec
test
out
cwtl
stos
in
sbb
out
leave
push
cmp
xorl
mov
imul
out
mov
test
std
imul
xchg
fsubs
pusha
daa
add
inc
or
ror
fdivrp
lods
out
mov
lock
inc
fwait
in
mov
jno
add
stos
test
add
adc
js
jmp
je
stc
pop
xchg
dec
mov
sub
lods
sbbl
or
out
or
mov
cli
jg
mov
outsl
clc
mov
push
pop
xchg
arpl
push
test
out
rclb
les
std
int3
inc
inc
adc
lret
mov
popf
add
dec
mov
sbb
lret
push
mov
ss
test
push
aad
sub
int
test
clc
decl
or
stc
mov
addr16
mov
cmpsl
imul
lret
xor
pusha
test
insb
sbb
jbe
insl
cmc
stc
int3
inc
adc
cwtl
insb
add
push
lods
out
dec
inc
push
nop
push
ror
cmpsl
dec
test
into
jecxz
inc
and
fldl
aaa
mov
lahf
add
xor
mov
lret
inc
sbb
imul
push
mov
push
insb
ret
pop
dec
add
jg
loopne
push
aas
bound
push
or
sub
out
or
sub
xchg
jno
xchg
xchg
jne
rorb
sti
mov
pushf
lret
rcr
repnz
adc
push
jae
mov
jmp
mov
data16
enter
push
add
out
int3
jns
dec
cmc
pop
rcrl
nop
ud0
mov
sbb
push
arpl
jno
lcall
rorb
mov
outsl
repz
mov
ret
and
cmp
jno
cmp
and
cld
rcl
lahf
subl
xor
cmp
pop
inc
pop
movsb
test
pop
cmp
push
xchg
mov
jb
sub
movb
jle
cmp
pop
push
lods
jp
xor
push
xchg
lret
push
imul
cmovo
fdiv
jp
call
jbe
push
jae
xchg
insl
aam
push
lds
movsb
enter
dec
sti
push
mov
clc
lea
or
adc
sub
mov
cld
or
xchg
sub
lret
insb
cmp
mov
cmpsl
stc
int3
jmp
xchg
inc
adc
xchg
enter
int3
jae
stos
jo
mov
ss
push
dec
and
jp
cmp
lret
mov
imul
dec
mov
or
loope
and
test
and
push
jg
into
dec
or
lahf
dec
mov
rcrb
or
movsb
push
idivl
loop
cld
dec
inc
scas
cmpsb
arpl
push
or
das
into
adc
mov
lahf
aaa
je
lahf
or
std
movsl
in
xor
xor
jg
frstor
fiaddl
mov
leave
mov
jecxz
das
test
ja
mov
inc
push
jns
data16
mov
mov
outsb
cmp
jp
jno
fsub
push
jg
ljmp
movsl
cmp
xchg
sti
sbb
xor
sub
xchg
add
push
adc
jg
aad
and
sub
enter
rcll
mov
adc
inc
adc
dec
mov
dec
xchg
in
das
mov
push
arpl
call
sub
xor
lret
outsb
push
mov
mov
lods
pop
into
insb
add
faddl
pop
sub
sub
into
xchg
add
std
cmpb
je,pn
xor
and
push
or
and
add
add
push
add
imul
or
aaa
test
push
xchg
adc
rorb
mov
adc
jg
add
arpl
jge
out
shll
push
jmp
xchg
test
xchg
shll
aas
stos
cli
sub
insb
and
inc
or
sbb
adc
aaa
jle
aam
sub
pop
inc
sbb
lds
mov
xchg
into
ja
lahf
xchg
adc
and
addl
inc
mov
jb
mov
xchg
add
lods
es
imul
jns
jne
je
gs
mov
out
inc
add
xchg
mov
call
push
or
or
cmp
dec
dec
push
fs
into
add
dec
sub
inc
lds
sbb
push
fiaddl
mov
lret
loopne
pcmpeqd
jo
fiadds
push
jne
fmul
rolb
pop
and
jp
push
mov
fucomp
out
or
or
lock
push
dec
inc
sub
xchg
jp
xor
mov
adc
incl
mov
out
insl
sbb
repnz
push
into
call
add
inc
les
ret
into
jmp
and
mov
js
popf
je
sbb
or
sbb
add
loop
movsb
xchg
outsb
mov
iret
add
imul
inc
push
ret
xor
inc
xchg
pushf
int3
mov
adc
jno
cmp
sbb
inc
scas
dec
popf
mov
xchg
jbe
pop
mov
mov
or
fisubs
icebp
xchg
mov
nop
dec
jecxz
or
test
in
shlb
inc
shlb
bnd
dec
adc
push
repz
test
xor
inc
xor
arpl
sub
out
xchg
icebp
outsl
mov
push
popf
pushf
add
lahf
mov
add
mov
adc
scas
rcrb
data16
add
inc
lret
insb
inc
mov
cmpsb
lds
test
les
sahf
xchg
int
or
dec
movsl
xchg
xor
push
lret
push
push
aaa
dec
cmp
aad
test
mov
xor
push
jno
dec
adc
xchg
inc
jle
mov
push
imull
and
inc
mov
jecxz
subl
call
push
mov
push
lea
push
pop
into
jge
ja
call
scas
push
clc
add
int
cmp
subl
pop
xor
in
or
add
cwtl
rclb
incl
out
cmc
dec
aas
jge
mov
add
in
add
sub
test
cmp
jp
inc
fldl
sbb
outsl
ss
lock
aad
in
lods
xchg
aad
or
addr16
mov
push
test
add
aad
cmp
es
dec
bnd
adc
push
test
and
mov
xchg
rclb
int
push
xchg
add
scas
or
fs
sarb
mov
mov
fimuls
mov
jns
xchg
ret
stc
frstor
into
inc
arpl
xor
nop
lock
mov
out
rclb
mov
jb
jl
dec
xor
push
xor
jne
inc
movsb
imul
push
mov
mov
lret
adc
imul
add
lcall
divl
mov
or
xorl
inc
stc
in
aam
or
mov
and
or
rcl
adc
and
enter
cmpsb
jecxz
xchg
mov
sbb
pop
cmp
add
in
popf
xor
add
arpl
sub
into
sub
out
cld
mov
fs
mov
jbe
cs
rorl
dec
negl
lret
dec
sti
stos
add
loope
orb
enter
sar
lock
mov
shll
aam
in
outsl
out
xchg
jle
cs
stc
mov
sbb
mov
dec
xor
cltd
incl
dec
popa
enter
aaa
orl
mov
xchg
sti
jle
popa
push
push
dec
shlb
pushf
divb
xchg
iret
shrb
xchg
xchg
adc
ss
or
les
pusha
mov
inc
dec
cwtl
mov
and
aad
test
pop
ljmp
jge
adc
sbb
push
jb
bound
or
shrl
inc
pop
push
aas
ret
out
adc
inc
lds
add
mov
push
andl
push
into
jl
out
jb
dec
add
and
push
sub
cmp
sti
mov
sbbb
jecxz
sar
sarl
addr16
iret
fmul
mov
add
jl
sub
pop
mov
sarb
popf
ds
dec
add
int3
cmp
sar
inc
call
js
stos
aad
clc
sbb
mov
shrb
cli
jno
dec
out
sub
sbb
in
sub
dec
sub
test
and
rcll
push
pop
or
jle
imul
cmpl
cmp
sbb
repnz
outsl
inc
sub
lods
jb
xor
rcr
dec
addr16
lret
vcvtpd2dq
aam
movsl
jae
mov
fisttpl
loopne
mov
cmp
icebp
push
inc
pop
lock
push
push
mov
sub
popf
inc
sbb
inc
push
mov
shl
loope
lret
jmp
pop
xchg
outsl
stos
iret
or
pop
jno
cltd
mov
addr16
seto
mov
jns
inc
subb
and
pop
cmp
scas
xchg
xchg
int3
js
lods
push
push
adc
cmc
xlat
sub
out
dec
mov
inc
inc
jo
or
das
popa
xchg
lods
jmp
jbe
sbbl
pop
dec
sub
subb
leave
sbb
jp
in
cmpsl
movsb
dec
mov
out
jns
test
dec
jp
mov
dec
stos
sub
or
clc
push
mov
mov
mov
stos
imul
pop
mov
cltd
jg
lock
xchg
jl
andl
sbb
inc
movsb
ret
inc
pop
mov
nop
insb
rclb
outsb
xlat
fisubl
addr16
push
repnz
stos
pop
mov
fwait
cld
or
dec
add
cs
push
mov
mov
outsl
sbb
jge
rcl
test
das
adc
mov
sbb
cs
dec
and
and
inc
rorb
push
lods
jbe
add
xor
aaa
mov
testl
les
pop
inc
mov
orl
ret
out
fnsave
dec
mov
xor
rcl
ss
cmp
repnz
push
andl
rep
push
sbb
cld
sbb
cltd
xchg
pop
cwtl
jp
in
lods
push
gs
adc
test
xchg
xchg
jecxz
xchg
out
sub
sbb
je
in
push
enter
add
cmovg
inc
push
sbb
mov
push
ret
or
mov
fsubs
xchg
add
jmp
dec
fprem1
lods
sarb
or
inc
mov
or
inc
xchg
push
xor
cmp
sub
fldenv
adc
imul
pusha
sbb
push
icebp
xchg
popf
arpl
test
dec
nop
fldcw
mov
pop
cmp
std
das
inc
cwtl
fs
pop
jae
cli
into
out
push
nop
pop
dec
jmp
shlb
testb
int
ret
pop
add
xchg
out
test
mov
negb
mov
jae
imul
movsb
xchg
das
push
and
and
aam
shll
into
and
enter
sahf
ret
sub
cmp
gs
push
xchg
mov
repz
jmp
mov
push
cmp
adc
pop
push
lds
inc
xchg
and
mov
lods
sti
pop
jmp
dec
lea
push
lcall
js
mov
jg
fcompl
rcl
jae
repz
sub
dec
sub
mov
ljmp
sbb
or
cmpsl
adc
dec
rorl
push
cld
add
fldl
js
rcrb
mov
xchg
idivl
add
inc
int3
cmp
daa
or
icebp
negb
outsl
scas
sbb
inc
pop
jp
jle
fstpt
loope
jne
xchg
lret
fwait
iret
addr16
inc
icebp
xchg
or
xor
jg
fcoms
xchg
out
inc
cmc
or
sub
lret
sti
jge
imul
das
in
insb
std
push
mov
cmp
ds
or
and
test
mov
mov
lcall
push
xchg
dec
mov
and
jecxz
mov
jne
aaa
jns
stc
hlt
adcl
jge
mov
inc
das
movsl
dec
and
je
jbe
push
mov
push
jmp
sub
sbb
xor
jno
xchg
sbb
push
mov
add
into
addr16
add
cmc
cmp
pushl
pop
mov
add
inc
gs
inc
insl
mov
mov
mov
sub
jb
iret
lret
or
xchg
mov
mov
jge
sub
or
out
and
mov
fdivl
xchg
stc
shl
fwait
adc
mov
repnz
mov
fimull
jo
and
xor
xchg
push
dec
pop
cli
test
push
jmp
mov
sti
cmpsb
mov
push
ja
mov
mov
xchg
jl
sbb
xchg
push
dec
fsubs
jno
outsl
pop
lret
jg
rorb
adc
and
enter
sti
lret
pushf
les
jle
pop
xor
lcall
rorl
stos
popa
jmp
and
push
insb
mov
in
jbe
xchg
cmp
jp
inc
inc
iret
movsl
fldcw
cmp
in
cs
jo
sbb
sbb
jbe
jge
outsl
jnp
cmp
sbb
gs
and
dec
lret
xchg
mov
out
cld
je
xor
into
dec
stos
stc
mov
xchg
sbb
ja
out
cmc
mov
iret
sub
xchg
sbb
lds
aam
mov
inc
jle
insl
imul
sarb
xchg
fildl
inc
or
cli
lahf
adc
mov
cmpsl
pop
fcmovbe
push
xchg
xchg
arpl
imul
mov
and
push
jmp
test
js
sub
stos
push
and
pop
cmc
loop
int3
loop
jne
add
mov
ss
mov
inc
add
arpl
orl
mov
sbb
mov
out
arpl
dec
sub
cmpsl
pop
cmp
inc
pop
fildll
xchg
pop
gs
fisubs
pop
sbb
sbb
and
jle
and
loopne
inc
or
cmpsl
addr16
inc
cmp
rorb
daa
push
add
iret
sahf
and
or
sub
mov
rol
add
dec
inc
fisttpl
adc
jne
inc
pop
outsl
adc
and
mov
enter
inc
popl
mov
pop
push
xchg
dec
push
xor
sahf
mov
test
push
in
adc
icebp
les
out
or
cmp
sahf
cmpsl
movsl
and
ljmp
push
je
pop
mov
pop
sbb
ja
inc
movsl
into
cmp
pop
sub
and
lret
add
pop
movsl
dec
push
or
in
mov
int3
mov
loopne
jb
jns
test
jbe
mov
and
sbbl
xchg
jl
sbb
imul
lret
out
std
lds
pusha
push
ljmp
push
push
adc
daa
std
int3
and
lcall
dec
add
inc
std
xchg
hlt
sbb
push
stc
test
mov
adc
jge
in
mov
and
push
sub
xchg
inc
ret
or
push
push
jle
fwait
dec
je
fimull
sti
imul
popa
xchg
mov
push
divb
ret
add
aas
pop
pop
imul
test
jecxz
test
repnz
stc
pop
xor
test
push
aas
inc
pop
pop
mov
inc
call
fmulp
xor
sbb
sub
cmp
xchg
xchg
jns
xchg
mov
lods
or
out
bound
adc
aaa
cmp
in
mov
inc
push
and
push
sub
std
aam
lock
mov
mov
negb
fdivl
lahf
ljmp
out
or
aam
ja
js
xchg
adcb
inc
xchg
fldt
int
sti
fimull
mov
jl
dec
imul
out
rorb
mov
dec
push
or
outsl
std
aad
iret
sti
jle
jge
test
negb
cmpsl
mov
es
movsb
dec
inc
sbb
xor
xchg
mov
mov
mov
pop
outsl
add
push
add
push
xor
mov
jmp
out
or
inc
in
fimull
enter
cs
and
pop
cmpsb
dec
inc
in
dec
outsl
fwait
dec
mov
in
sahf
dec
pop
mov
pop
stos
xchg
mulb
leave
lods
push
scas
sbb
mov
movsb
test
inc
jmp
push
aaa
adc
lods
shl
jbe
pop
jae
cld
cmp
lret
test
imull
jne
stc
or
mov
adc
cli
sub
sub
mov
test
push
dec
int
scas
xor
mov
add
cmp
cmp
inc
adc
movsb
inc
in
inc
imul
rorl
xor
dec
lock
mov
addr16
or
adc
and
cmp
jmp
mov
js
xchg
ja
inc
dec
movsl
das
pop
pop
jo
inc
and
jne
jae
fldl
fcmovb
popf
aaa
iret
and
test
in
jge
pop
sbb
sub
mov
cmc
repz
stc
ret
sbb
out
mov
aam
xchg
addl
fdivr
mov
mov
cli
arpl
xchg
pop
mov
sahf
mov
bound
data16
gs
inc
fcompl
enter
fildl
mov
jno
fcom
mov
scas
cli
cmp
add
push
add
pop
adc
inc
pushf
lret
cmpsb
out
sub
roll
xchg
ficomps
int3
add
loope
adc
xchg
sub
fs
inc
add
sti
push
inc
js
fmull
in
shl
push
sub
imul
pushl
jno
push
dec
push
dec
fwait
mov
shrb
rclb
enter
push
jmp
push
ror
push
in
mov
fs
inc
lds
aaa
int3
xchg
jno
lcall
popf
sti
sbb
mov
pop
mov
and
scas
rcll
ror
insb
mov
adc
pusha
xor
mov
fnstsw
stos
sub
rolb
inc
and
xchg
ds
add
inc
fwait
out
cmp
dec
fdivrl
in
mov
subb
or
loop
pop
and
xchg
sbb
pop
lahf
mov
fdivr
sahf
popl
inc
shlb
inc
cmp
inc
cmp
divl
js
lea
push
aaa
add
lea
add
int3
cmp
cmpsb
inc
rcr
pop
das
lock
les
rcrb
mov
sti
sbbb
cld
dec
sub
xor
and
sbb
mov
dec
jge
cmp
sub
sbb
mov
adc
push
out
cmp
imul
stos
mov
inc
pop
insb
mov
xchg
repnz
ss
addr16
dec
lcall
mov
aas
inc
je
push
ds
das
xchg
out
xor
mov
outsb
push
mov
jl
jg
jns
out
lret
sbb
add
push
faddl
or
pusha
pop
data16
mov
or
xchg
insl
lahf
dec
lods
sub
jle
dec
jmp
int
dec
les
outsb
fnstcw
orb
dec
pop
mov
aas
testl
and
mov
push
shr
movb
das
fs
jno
jns
dec
mov
imul
fisubrs
pop
dec
les
out
orl
push
dec
xor
js
pop
enter
pop
out
hlt
xchg
jecxz
xchg
pop
into
add
and
sbb
testl
mov
int3
test
mov
movsb
stos
faddl
imul
mov
iret
out
pop
insb
lret
outsl
add
add
aam
push
fwait
sbb
mov
jbe
sub
mov
dec
ljmp
out
mov
pop
mov
in
push
into
adc
sub
pop
push
jo
add
nop
shl
lods
or
out
jbe
and
push
mov
movsb
dec
sbb
jmp
add
lret
aaa
xor
icebp
or
orl
jnp
addr16
movl
sub
jns
in
ljmp
jle
scas
imul
lcall
mov
add
or
pop
mov
sar
jle
int3
test
and
jns
sub
and
into
xor
imul
pusha
sahf
sub
jae
repnz
jecxz
out
mov
and
inc
pushf
mov
dec
std
rol
movl
rclb
icebp
add
adc
push
lock
insb
cld
push
lret
push
mov
or
mov
jns
cmp
sbb
and
push
adc
fimuls
popa
push
jbe
sub
test
cmp
fwait
addl
inc
push
pop
mov
dec
fcomps
mov
mov
stos
ja
add
sbb
mov
loop
sbb
push
cmpsl
loope
cmp
sub
jb
int3
pusha
les
jmp
ss
cltd
jp
and
lock
inc
or
cli
sub
mov
mov
loope
xchg
adc
arpl
xor
inc
int3
or
cs
mov
outsl
mov
dec
add
daa
adc
lret
pop
push
inc
xor
push
push
fisttpll
rorb
xchg
ss
out
ljmp
xchg
jecxz
mov
sahf
inc
jle
jns
push
ds
movsl
cs
pop
inc
out
mov
fisttpl
in
scas
icebp
subl
jb
into
mov
inc
fsubrs
test
iret
jl
jo
mov
jle
sbb
js
and
jmp
out
lahf
dec
mov
test
xchg
fiadds
or
dec
repnz
push
and
cmc
dec
push
rcl
adc
cld
ficomps
jmp
lods
add
and
lcall
sbbb
pop
inc
repnz
jb
icebp
mov
dec
dec
mov
dec
rclb
sahf
and
mov
xchg
imul
push
xchg
wrmsr
sub
fs
push
cmp
stos
or
in
gs
repnz
mov
pop
outsb
pmaddwd
jo
fildll
push
dec
adc
xor
xlat
ds
mov
mov
adc
push
rcll
in
ja
jmp
leave
xor
loop
repz
jbe
pop
sbb
rorb
xchg
xchg
dec
adc
cmpsb
shrl
jne
test
je
inc
xchg
cwtl
mov
shrb
das
inc
inc
pusha
mov
ficomps
out
loopne
arpl
mov
mov
sbb
jl
inc
cmp
cmpsl
xor
and
leave
or
je
xorl
pushf
add
cmc
lds
add
sub
cmp
insl
lret
xchg
xchg
add
or
fnstenv
xchg
or
orb
adcl
push
jge
shll
std
out
scas
mov
jmp
push
mov
aaa
popa
ret
lret
frstor
mov
mov
ja
out
pop
sbb
mov
xor
ljmp
jbe
cltd
int
in
mov
xchg
push
rorl
ret
fs
mov
stc
dec
sub
jae
sbbl
imul
and
cs
arpl
dec
out
or
sbb
lahf
pop
mov
add
fsubrp
test
gs
in
adc
cld
fnsave
faddl
sbb
xchg
repz
push
mov
add
lock
xchg
mov
addr16
imul
out
lds
lock
jb
es
mov
inc
lods
lret
xchg
lds
arpl
adc
mov
imul
test
add
mov
lods
push
jmp
bound
jae
push
mov
jle
cli
clc
jge
add
comiss
inc
add
dec
orb
shufps
jg
mov
mov
mov
out
push
push
addb
in
xlat
and
insb
lcall
push
jl
sub
into
imul
idivl
jne
rcll
push
xchg
xchg
mov
inc
push
clc
mov
fidivs
iret
cmc
sub
out
popa
add
fcoml
stos
dec
ja
push
cwtl
iret
push
cwtl
adc
and
cld
push
lahf
push
mov
push
icebp
inc
das
mov
add
out
bound
adc
stc
cmpl
pop
mov
jmp
orl
aaa
mov
push
xor
inc
fisubl
or
orb
sbb
and
mov
cmpsl
and
in
ss
bound
test
aam
shr
fcmovne
lret
jge
out
fldcw
dec
cmp
cwtl
shl
fdivl
jae
jecxz
add
in
jg
lcall
fsubl
mov
sub
pop
imul
shll
or
jne
jmp
lret
xor
xchg
lret
cltd
push
fsub
sbb
push
add
adc
push
push
jmp
cmp
repz
shl
into
in
fstpt
xchg
cmp
adc
inc
aad
fidivs
mov
xor
cmp
inc
and
xor
mov
mul
jno
mov
add
jl
incl
and
sub
adc
xchg
jge
inc
cmp
push
sbb
das
pop
jecxz
mov
leave
add
shrb
cli
mov
cmpsl
inc
adc
sub
inc
inc
push
out
clc
std
push
xchg
lea
dec
out
in
imul
adc
xchg
push
in
add
test
pop
push
jle
sbb
mov
xor
dec
ljmp
cli
repnz
cmc
hlt
mov
fsubr
cmpsl
dec
xor
bound
arpl
cmc
sub
jae
jb
pop
inc
pop
loope
sbb
into
out
ret
sub
ficomps
fcom
stc
loopne
cmp
inc
lods
fnsave
and
mov
outsl
add
lods
and
mov
or
in
cmc
aas
or
jecxz
sbb
popf
sbb
enter
sbb
jge
add
adc
out
daa
fistpl
push
mov
sbb
cmp
iret
mov
int
inc
cli
imul
mov
shll
icebp
mov
cmpsl
shlb
mov
sub
push
dec
mov
loopne
or
stos
fnstcw
addr16
jl
imul
enter
xlat
mov
xor
outsl
rcll
out
in
mov
pop
ds
insb
xchg
data16
xchg
xor
inc
and
inc
push
adc
cmpsl
lods
iret
push
jecxz
movsl
outsl
xchg
je
mov
pop
out
dec
or
adc
add
mov
lahf
fnstsw
cli
icebp
pop
int
pop
scas
mov
adc
or
int
pop
sub
cmp
xor
mov
ja
nop
out
inc
sarb
xor
sti
les
jne
loopne
fisttps
pop
dec
jne
nop
out
test
pushf
inc
rorb
pusha
adc
iret
addl
xchg
mov
push
testb
sub
sub
push
testl
jge
cmp
or
and
add
mov
or
mov
cmp
xor
test
mov
das
insb
mov
push
pop
ds
inc
out
into
xchg
clc
push
scas
lahf
aaa
cs
or
mov
jae
inc
insl
mov
sub
inc
xor
je
popa
lcall
clc
push
sub
scas
jecxz
xchg
adc
xor
aas
into
popf
xchg
iret
jmp
outsl
mov
mov
fs
sti
jns
leave
or
insl
arpl
int3
fldcw
pop
jmp
mov
dec
push
mov
aaa
int
sub
fisttps
movsb
or
mov
push
ret
mov
loope
addl
dec
inc
hlt
xchg
int
test
mov
into
and
sbb
adc
inc
popf
fstl
pop
inc
and
jle
xchg
push
test
test
cld
cmp
daa
lcall
inc
sub
adc
mov
xchg
add
popl
xchg
fmull
outsb
add
enter
ss
dec
fisubl
mov
adc
insb
jp
adc
icebp
mov
inc
int3
insl
inc
mov
scas
mov
lods
cmp
shlb
arpl
inc
fdivs
lea
dec
xchg
push
adc
int
dec
mov
subb
ds
shlb
orl
daa
push
pop
pop
sbb
pop
adc
cmp
sbb
lahf
mov
imul
and
cmpsl
mov
mov
and
sahf
push
out
and
or
iret
in
js
mov
dec
pop
cld
push
cmp
push
xchg
stos
inc
lcall
pop
rol
adc
ds
movsb
lock
adc
pop
mov
stos
jns
mov
test
int3
pop
pop
jmp
bound
and
inc
and
into
scas
sbb
ds
pop
inc
sub
in
insb
pop
push
sbb
repz
mov
iret
pop
mov
xor
jmp
mov
jge
test
push
out
pop
cmp
dec
mov
and
into
pusha
iret
dec
arpl
cmpsl
xor
jbe
pop
rcl
mov
sub
cltd
divps
xchg
imull
repnz
jbe
cld
addr16
xchg
pop
jbe
lods
and
inc
flds
dec
fistl
icebp
imul
pop
leave
sub
dec
lds
ror
scas
lret
mov
imul
call
jno
xchg
pushf
sti
push
xor
out
fcmovb
sub
fnstsw
or
xor
leave
test
arpl
pop
mov
jbe
add
aam
cmp
stc
mov
dec
fnstcw
shll
addb
dec
mov
push
jecxz
xchg
jb
mov
mov
pop
mov
xchg
add
and
cmp
scas
lret
push
test
sub
or
jg
ss
push
jne
es
ljmp
jno
lcall
imul
pop
cli
inc
jae
push
and
aad
jg
arpl
fwait
cmp
lock
or
sbb
push
scas
icebp
dec
xor
faddp
xchg
repnz
mov
ljmp
sub
ja
insb
test
mov
xchg
movsw
shrb
mov
jae
jbe
in
cli
rcr
imul
in
mov
sub
lret
icebp
dec
mov
inc
std
jle
popf
jne
cmp
xor
in
xchg
inc
out
jmp
dec
stc
add
and
cld
data16
testb
movl
inc
add
adc
xor
outsl
and
xchg
aad
lods
xor
inc
or
mov
cmpsl
fisubs
fisubs
push
cwtl
inc
or
mov
insb
or
and
or
das
cmp
fbld
popf
insl
inc
cmpsl
rclb
or
pop
pop
out
les
aad
sub
popa
js
push
adc
jo
jbe
push
lahf
into
ret
cmp
subb
pop
sti
fmul
add
inc
test
bound
fists
cmpsl
and
lret
or
and
clc
xchg
ret
or
cmp
int3
jo
xchg
aaa
enter
mov
out
div
mov
es
test
push
lea
xchg
in
xchg
xchg
sub
in
xchg
out
aas
test
mov
mov
icebp
mov
fisttps
movsb
add
or
cli
loope
xchg
pop
popa
mov
out
sub
jmp
lret
rorb
mov
dec
lret
sub
xchg
jecxz
push
js
mov
and
loop
and
mov
jg
ljmp
xor
bound
lcall
cmp
dec
imul
cli
insl
pop
outsb
jne
xchg
repz
mov
push
std
in
jae
sarb
iret
clc
movsl
cmp
pop
cld
push
sahf
lods
adc
lret
xchg
xchg
fdivl
cs
adc
push
rorb
mov
xchg
or
jae
xchg
mov
mov
rorl
xchg
dec
inc
or
fdivrl
popa
std
stc
in
aaa
xchg
cmpsb
dec
xchg
shrd
fwait
dec
push
cli
cmpsb
mov
mov
xor
sbb
int
test
outsb
xor
movsl
jno
mov
pop
andl
pop
repz
fistpl
out
rcrb
insl
and
dec
mov
arpl
insb
cli
addb
cmp
add
out
xchg
and
fiaddl
outsl
cs
jns
add
jae
pop
sahf
nop
jge
iret
add
fsts
and
fmul
push
imul
and
push
negl
fisttpll
pop
mov
leave
out
cmp
xchg
inc
add
and
pop
icebp
cltd
jo
inc
or
data16
lret
movb
call
xchg
imul
dec
jbe
xchg
daa
xchg
loop
repnz
test
sub
shlb
jmp
popf
cltd
outsl
cmp
fnstsw
cmp
and
mov
inc
mov
push
jno
leave
pop
in
dec
jmp
imul
into
and
fcompl
rcll
sub
and
loopne
push
fldt
push
adc
jge
xchg
dec
jbe
jecxz
pop
data16
into
pusha
xorl
cs
jns
out
mov
int3
xchg
xchg
sahf
inc
push
and
or
mov
xlat
or
jle
mov
inc
lds
repnz
jno
mov
add
fcom
icebp
sbb
mov
cmp
jp
in
outsl
jge
push
cmc
jmp
dec
mov
shll
imul
pop
mov
or
shl
push
sar
xchg
xor
cltd
movsl
das
jge
or
mov
dec
ljmp
add
cmp
push
std
sbb
jmp
inc
arpl
push
sub
mov
mov
mov
test
and
dec
lcall
dec
out
fistpl
sub
dec
repz
popf
mov
aad
jne
mov
into
pop
rcr
clc
xchg
aas
mov
loopne
dec
pop
dec
pushf
xchg
inc
xchg
cmp
dec
call
sub
insb
cld
mov
sti
push
test
jne
lret
pop
dec
fisttpll
les
sbb
rclb
repnz
xchg
xchg
fdivrl
outsb
adc
xor
loope
xchg
cld
ds
jmp
add
mov
cwtl
insl
mov
sbbl
loope
xchg
das
sub
stos
add
push
daa
xchg
mov
into
adc
pop
mov
pop
add
mov
iret
adc
inc
movsb
dec
jp
xchg
jecxz
cmp
stos
sub
push
push
adc
jbe
cmp
pop
sti
dec
out
lea
and
je
int3
inc
pop
mov
sbb
icebp
call
and
jbe
push
cwtl
rcrb
cmp
leave
imul
inc
inc
adc
pushf
sbb
sti
xchg
dec
push
jmp
pusha
adc
sarl
enter
mov
mov
sub
pop
xor
jne
sahf
shr
out
rclb
mov
data16
push
cmpsl
incl
xchg
inc
push
and
mov
test
cltd
into
fists
dec
iret
dec
sbb
in
pushf
call
ficoms
out
outsl
rorl
xor
repnz
adc
jecxz
loopne
jp
xchg
mov
pop
out
shrb
movsb
jge
sti
dec
std
sbb
cmp
dec
adc
ljmp
sub
adc
sub
es
int3
xchg
cmpsb
lret
cli
mov
rorb
xchg
std
sub
xchg
pushf
push
cltd
nop
in
push
sti
lea
dec
scas
adc
mov
aam
dec
sub
push
bound
sbb
movb
iret
andl
pop
sbb
int
enter
gs
xchg
inc
inc
jne
into
or
iret
xchg
inc
aam
jb
arpl
add
push
push
lcall
dec
fidivs
and
insb
movsb
pop
xor
hlt
clc
pop
xchg
mov
nop
sarb
or
sub
aaa
jl
inc
lahf
bound
cmp
xchg
jns
aam
int
roll
or
or
sbb
clc
sbb
xor
xchg
sarl
xchg
ret
dec
sbb
imul
sahf
loopne
jae
out
int
lret
ret
mov
adc
movsb
xor
push
dec
out
xchg
jbe
lahf
xchg
in
mov
adc
push
jle
push
dec
mov
mov
cmp
aaa
pushf
repz
push
ljmp
in
je
or
dec
dec
hlt
inc
ror
push
mov
das
icebp
movsl
aas
xchg
push
shlb
adc
push
mov
popa
jns
cmc
xchg
mov
into
and
adc
call
mov
jmp
test
sbb
sbb
lret
imul
fstp
mov
sub
jecxz,pn
sbb
dec
enter
xlat
or
hlt
into
js
imul
in
test
into
stos
jns
daa
push
icebp
pop
pusha
dec
xor
lods
inc
cmpsb
popa
add
xchg
mov
subl
mov
push
movsb
inc
loope
dec
je
je
ret
stos
adc
push
adc
xor
xchg
sar
stc
adc
mov
outsl
cmp
imul
jge
test
clc
jg
lock
test
pop
jmp
xor
xchg
enter
ja
nop
mov
mov
sub
hlt
inc
push
xchg
sub
sti
cmp
out
fstpt
pop
jmp
xor
pop
shrb
and
cld
jmp
mov
xor
push
test
insb
or
jle
inc
arpl
loopne
sub
sbb
dec
lahf
ja
cltd
jno
xlat
test
out
andl
dec
mov
inc
push
movsl
stc
adc
lret
outsl
mov
push
aaa
pop
pop
dec
cmp
and
iret
pop
popf
jbe
out
cltd
loope
mov
add
and
stc
rcll
rolb
into
add
lret
out
xor
dec
sub
ficoml
out
sbb
or
jg
aas
add
pop
fcomps
in
sbb
sti
sbb
xor
xchg
xor
cmc
mov
pushf
sahf
rcl
sbb
outsl
in
dec
cmpb
test
imul
dec
lods
mov
out
rep
pop
xchg
mov
add
lds
addr16
pop
mov
pop
and
inc
pushf
test
xchg
add
mov
and
fisubrs
inc
sub
ds
mov
into
jecxz
insl
fcomi
test
lds
mov
inc
imul
loope
push
das
pop
pop
andl
repz
std
add
xlat
bound
cld
clc
mov
cmp
and
xor
push
sbb
pushf
inc
out
inc
test
xchg
add
push
out
mov
adc
xchg
imul
jmp
enter
imul
into
pop
bound
cmp
adc
jae
out
jmp
sahf
insb
sbb
mov
gs
jnp
shll
mov
inc
inc
ret
xchg
repz
xor
dec
inc
out
pop
daa
ds
mov
dec
je
scas
addr16
dec
mov
lret
ljmp
xchg
in
xlat
mov
inc
push
add
loope
shll
jg
jae
test
inc
into
mov
hlt
fnsave
addr16
sub
sarl
fildl
int3
dec
ja
movsl
xor
sbb
xor
sarb
jl
sbb
push
mov
pop
imul
push
les
jge
aas
mov
push
scas
cs
out
push
cli
cltd
and
adc
sub
adc
adc
out
stos
push
les
outsl
push
lea
mov
insl
adc
xchg
cmp
add
shlb
push
jo
mov
and
inc
dec
inc
add
sub
inc
lret
in
jns
and
arpl
mov
cli
or
pop
dec
xor
rcrl
dec
mov
ret
in
pusha
or
das
dec
sbb
int3
pop
pop
inc
lods
cmp
and
mov
outsb
mov
and
xchg
mov
and
lahf
jg
out
stc
xchg
and
fs
mov
cmc
jne
jns
test
in
push
adc
jmp
inc
test
loop
addl
dec
loope
sub
pop
xchg
push
jns
xor
shlb
push
out
jo
xchg
jg
jp
in
sarb
test
cmpsb
pop
in
mov
fidivs
popf
sub
lret
aaa
add
cmp
jae
jne
test
adc
sub
or
jge
lods
push
aad
sbbl
cld
sub
jns
mov
xchg
mov
push
fcoms
shr
pop
cmpsb
mov
dec
subb
jb
enter
and
xor
xor
add
fstps
clc
xchg
cmp
or
sub
push
nop
int3
js
mov
in
mov
adc
test
imul
mov
inc
pop
mov
das
xchg
call
jecxz
or
into
into
movsb
sub
mov
push
jecxz
andl
imul
xchg
fcom
xchg
xor
mov
sbb
inc
jo
push
adc
inc
adc
xchg
scas
mov
push
and
mov
cmp
xlat
sbb
dec
jo
repz
std
das
fistps
or
mov
sub
out
lret
xchg
push
xor
es
cvtps2pi
iret
in
cmp
cld
sti
mov
inc
test
add
jae
outsl
in
cmc
lahf
sbb
test
jbe
xchg
pop
jbe
mov
adc
iret
orb
daa
cwtl
jb
or
adc
rcrl
jp
sbb
adc
sub
and
mov
int
xchg
sahf
pop
pop
je
pop
jl
push
cs
xor
jo
ljmp
pop
fs
sbb
addb
loope
push
sub
adc
mov
adc
and
mov
pop
inc
dec
stc
xor
iret
mov
add
das
cmp
stos
mov
mov
addr16
imul
lret
inc
dec
pop
cmp
fcoml
pusha
cli
addr16
into
rol
add
aaa
sbb
mov
pusha
dec
dec
jmp
push
xchg
inc
add
stc
pop
xchg
jle
repnz
ja
gs
sahf
scas
mov
stos
mov
outsb
js
lods
aad
push
dec
lcall
inc
and
pushf
ret
jle
das
in
push
imul
icebp
mov
sbb
stos
out
dec
dec
sahf
ja
orl
sub
sbb
jge
popa
int
jo
cmpsl
das
leave
loopne
cmpsb
push
fnstsw
dec
mov
std
and
sbb
jo
lods
mov
push
fs
inc
ret
mov
not
in
adc
stc
cmp
ja
test
ret
push
mov
xor
pop
sub
push
stos
call
loopne
or
mov
push
movb
jbe
or
test
push
bnd
and
ljmp
rcl
lretw
cmp
aaa
lea
loop
xchg
xchg
bound
mov
in
popf
cmp
jns
sub
rorl
and
inc
inc
mov
adc
sbb
xchg
imull
js
mov
push
dec
int3
pushf
cs
aad
adc
and
fimuls
sub
pand
stos
iret
cmp
cmpl
dec
ret
test
inc
rcrb
sbb
cmp
jle
test
movsb
int3
or
out
gs
cli
cmp
lea
int3
add
in
out
push
stc
rcl
arpl
adc
cmpsl
push
nop
xchg
mov
dec
sahf
pushf
out
jmp
ret
push
mov
lret
fcoms
sbb
pop
jns
mov
cmc
xor
lret
jae
mov
icebp
adc
push
leave
jmp
test
xchg
mov
lret
cmp
out
mov
xchg
jl
test
mov
rol
or
dec
push
out
push
inc
inc
dec
and
std
pop
push
lods
outsl
jne
mov
cmc
stc
mov
mov
aam
out
xor
pop
jb
lret
insb
repz
or
nop
popf
out
pop
xor
jno
xor
popf
repz
aam
outsl
adc
xor
fwait
sbb
sbb
mov
dec
add
push
mov
mov
inc
inc
dec
mov
adcl
pop
je
cmpsl
loop
cld
enter
xchg
fcomi
mov
mov
aaa
xchg
out
dec
cmp
mov
sub
aas
inc
or
cltd
rolb
cmp
xor
out
dec
out
jge
or
bts
in
mov
dec
test
xchg
xor
xchg
es
or
pop
lret
fdivl
call
loop
and
scas
sub
push
scas
adcb
xchg
adc
ficompl
or
fisubs
out
push
sahf
into
add
jns
fisttpl
pop
mov
inc
push
push
je
inc
dec
xchg
sub
mov
imul
mov
mov
in
out
sub
jl
lcall
jecxz
mov
pop
outsb
int
movsl
or
into
or
and
faddp
je
fisttpl
mov
or
lcall
scas
loopne
push
insl
lock
js
lds
pusha
loope
cmp
sahf
jp
dec
pop
pop
sub
test
add
dec
int
jns
xchg
fwait
adc
dec
out
add
push
mov
sub
sbb
and
fcom
mov
ret
sub
mov
inc
jecxz
push
sbb
xchg
mov
int3
outsb
lock
insl
mov
enter
aad
mov
daa
nop
add
into
in
fisubrs
jge
out
dec
sbb
jns
xor
in
je
rcrb
mov
ret
inc
test
adc
sub
pop
pop
imul
jecxz
pusha
fwait
mov
iret
out
cmpsl
inc
clc
mov
adc
into
popf
cld
dec
jmp
outsl
sub
add
rcrb
in
inc
enter
vmovntdq
jp
sub
push
mov
fldenv
push
dec
inc
jbe
mov
fsubrs
int
addr16
fistpll
aaa
out
sub
out
pop
fsubl
pop
cwtl
mov
jge
repnz
sbb
test
push
cld
lret
adc
dec
mov
and
ret
popf
jb
arpl
mov
sbb
mov
mov
lock
push
push
popf
sub
push
aad
adc
sbb
fsubl
fstps
repz
mov
xchg
dec
mov
hlt
scas
mov
adc
push
mov
pop
int3
dec
or
scas
adc
dec
push
and
out
cmp
fcomps
in
data16
sub
es
mov
jb
fsubl
ret
inc
and
scas
inc
inc
pop
cmc
data16
push
adc
into
jbe
cmpsb
dec
ret
jb
in
lods
xor
sti
jns
sbb
lret
out
push
cltd
mov
add
mov
push
cwtl
push
lock
dec
iret
pop
jp
xchg
xor
or
sbb
dec
cmp
inc
out
repnz
push
mov
movsl
test
lds
mov
dec
xchg
pop
mov
adc
in
aam
dec
mov
or
lods
xchg
stc
push
addl
xlat
sub
outsb
cld
sub
pop
stos
xchg
repnz
mov
jae
in
les
mov
movsl
sub
xor
xchg
sub
fildl
subl
lock
sbb
push
inc
aaa
imul
push
ficomps
sbb
int3
std
push
xor
enter
js
jle
fdivl
cmp
out
xchg
imul
cmp
push
mov
fistl
dec
shrl
push
gs
add
faddl
ds
adc
pop
sarb
sti
lret
lahf
or
in
xchg
jecxz
mov
xchg
mov
clc
das
dec
in
adc
pop
pop
adc
cmp
jae
shrb
movlhps
add
movsl
lds
mov
mov
movsl
pop
insb
cltd
dec
inc
xchg
mov
out
cmpsl
push
nop
push
add
out
sub
inc
ret
fisttpl
into
and
push
add
fnstcw
cwtl
fidivl
aam
and
cmp
add
jno
mov
das
hlt
dec
cli
loope
and
cltd
sbb
mov
bound
lods
mov
mov
dec
inc
out
stos
fdivl
pop
jns
cltd
xor
push
pop
aaa
shll
adc
sub
sub
cltd
or
dec
sub
outsb
loopne
inc
pop
push
mov
fistpll
sub
leave
mov
mov
loope
xchg
fstl
pop
and
dec
cmpsb
or
dec
js
xor
add
push
inc
jmp
dec
out
lret
and
mov
adc
les
jo
jcxz
mov
gs
repnz
pop
and
into
test
out
sub
add
or
insl
fmul
adc
push
out
adc
dec
mov
sub
add
and
xchg
lods
mov
xchg
nop
lcall
lds
add
pop
leave
pop
push
and
sbb
or
and
jbe
cmp
push
into
cmpsl
inc
fldpi
cmp
inc
lea
aas
dec
cld
add
mov
dec
inc
push
xchg
pop
sub
fcomps
mov
xlat
adc
push
in
sbb
enter
pop
jb
ffree
add
lahf
push
shlb
sub
les
leave
pop
push
xor
and
jp
lcall
idivl
in
mov
pushf
dec
inc
xor
rcll
in
sub
push
mov
inc
pushf
lret
es
aas
push
dec
sahf
scas
insb
loop
dec
jp
fidivs
arpl
cmp
xchg
stc
mov
sbb
jno
cltd
rorb
insl
movsl
clts
or
mov
mov
lret
fisttps
sti
jo
cld
shl
imul
lds
cmp
xchg
jne
xchg
daa
sub
std
js
and
inc
sidtl
mov
addr16
mov
mov
enter
lret
push
xor
xchg
inc
lock
adc
scas
or
test
repz
test
je
data16
lods
pop
xacquire
outsb
push
push
mov
iret
popf
add
jb
les
cwtl
test
aam
aaa
dec
jmp
loop
jle
fwait
lahf
jp
ja
push
in
mov
cmc
cmp
sbb
int3
ss
fisubl
mov
jge
enter
hlt
adc
mov
jg
or
rcl
push
fcmovnb
inc
aam
and
popa
scas
dec
ficoml
ljmp
mov
or
mov
or
jecxz
imul
imul
int3
out
add
ret
fs
push
clc
int
sub
mov
sub
xor
mov
stc
cwtl
daa
add
pop
push
jae
xchg
dec
je
jne
jg
insb
setno
or
addr16
gs
xchg
fstpt
cld
shll
test
std
adc
hlt
clc
vmwrite
adc
lods
xchg
pop
imul
call
fadds
or
mov
or
fstpt
hlt
shrl
ficoms
xchg
in
seto
movsl
test
movsl
cmp
das
ss
mov
sahf
data16
or
mov
pusha
out
mov
mov
cmp
cmp
cld
lods
push
pop
xlat
cwtl
scas
pop
ds
xchg
jl
push
dec
cmp
dec
push
outsb
add
shl
pop
hlt
push
repz
into
and
movlps
lds
pop
pop
push
xor
xchg
dec
push
into
cld
test
mov
leave
jle
sub
add
rolb
call
pusha
pop
leave
out
in
or
je
test
adc
mov
mov
pop
inc
cmp
test
icebp
xchg
stos
cmp
jae
aas
dec
cmpsb
fldl
adc
call
xchg
nop
jo
mov
xchg
stc
xchg
push
stos
jb
popa
mov
sti
cli
rorl
and
mov
ret
mov
bound
ds
jbe
push
or
or
stc
sbb
push
stos
popf
test
jo
cmpb
js
and
inc
jmp
std
or
pop
out
and
jae
outsb
sbb
add
fnstsw
cli
jns
xorl
shrb
arpl
pop
xchg
mov
add
imul
mov
or
mov
in
repz
sbb
imul
aaa
xor
in
test
inc
out
cmpsb
mov
pop
sub
pop
dec
int3
xchg
and
roll
incl
pusha
jp
xchg
or
iret
mov
pop
or
out
out
cmp
jo
mov
js
negb
xor
leave
stos
cmp
xlat
lahf
fucom
imul
push
jns
lods
fadd
pop
icebp
and
pusha
jge
sbb
dec
push
ljmp
cltd
rol
clc
push
dec
stos
pop
jmp
rorb
out
lods
aas
dec
xchg
cmpsb
fwait
pop
push
js
lea
cmp
inc
stc
cli
mov
in
pop
inc
mov
cld
out
adc
lret
or
ja
mov
jne
loope
je
js
movsb
loopne
xchg
mov
mov
vpcomuw
adc
jns
sub
mov
outsb
fldenv
in
int3
mov
rolb
pop
ret
jo
lods
subb
setge
sti
adc
data16
movl
loopne
in
cmp
sub
and
aaa
cltd
lcall
in
in
add
sub
out
add
and
dec
xor
jo
cmp
rorb
and
mov
jl
into
fstps
scas
stc
mov
sbb
out
frndint
push
inc
shll
and
jne
imul
pusha
sub
xor
je
insb
daa
pop
rep
and
pop
outsb
out
sbbl
mov
sbb
inc
fstl
mov
pusha
int
xchg
sti
and
mov
repz
fdivrp
popf
jmp
stos
cmpsb
ret
not
mov
jne
repz
test
out
jb
sbb
dec
add
outsb
ljmp
xchg
inc
xchg
ja
dec
sbb
pop
leave
jae
mov
cmp
mov
sub
dec
cmp
adc
aas
cmc
mov
sub
inc
or
lret
in
inc
sbb
push
js
mov
enter
ret
jecxz
inc
sub
push
shrb
jl
loop
or
mov
dec
xchg
push
inc
js
lret
mov
xor
fwait
outsb
call
lahf
and
and
sub
insl
popf
inc
inc
xchg
push
bound
xchg
xor
jno
dec
ljmp
mov
cmpl
outsl
cwtl
push
cmp
cmpsb
and
jmp
ds
scas
adc
iret
dec
push
jb
mov
dec
dec
sbb
dec
jecxz
enter
cs
scas
mov
adc
pop
add
inc
and
mov
movb
outsb
mov
in
movsl
xor
test
jecxz
xor
orb
mov
cmc
and
xchg
fisttpll
mov
out
jmp
movsb
jle
fsubrs
out
dec
mov
sbb
fmuls
cmc
dec
push
shlb
nop
mov
mov
les
pop
insb
push
jae
push
lods
jne
xor
ficoms
xchg
cwtl
xchg
jmp
dec
insb
xchg
stos
lret
int3
fcom
sub
and
adc
pop
jmp
dec
sub
xchg
aad
enter
xchg
xor
ja
insl
sbb
std
mov
mov
out
xchg
nop
adc
cltd
jl
sub
pop
adc
aad
xchg
fildl
sarb
js
ret
sarl
ljmp
hlt
lcall
dec
add
mov
xlat
push
shll
adcb
lahf
dec
xchg
daa
and
popf
test
or
pop
mov
aaa
scas
dec
push
insl
add
loop
mov
or
fwait
ja
pushf
movsl
pusha
inc
nop
add
popa
mov
pop
dec
dec
sbb
in
sub
sub
aad
add
inc
arpl
cmove
notl
bound
mov
inc
and
sbbl
fisttpl
dec
fwait
jbe
inc
int3
lret
repz
movsb
add
pop
sbb
je
pop
or
int3
enter
scas
cmpsb
add
mov
xor
fsts
mov
into
out
mov
cmp
int3
outsb
fistpl
and
push
in
dec
imul
inc
ret
dec
fs
in
cli
rcll
mov
inc
pop
in
add
int3
fwait
outsl
dec
push
test
jg
xchg
xchg
and
pop
sub
and
inc
mov
xor
test
add
adc
add
pop
inc
test
ljmp
insl
dec
cmpsb
stos
cmp
loop
mov
push
push
fdivs
scas
mov
inc
leave
xchg
cmc
pop
mov
ror
mull
or
jns
mov
dec
imul
mov
popa
cld
and
inc
cmp
rcrl
jmp
jp
sub
jns
fs
jg
fsubs
mov
push
shl
inc
aas
cltd
dec
cmp
fdivs
pop
sbb
pop
dec
dec
ljmp
lret
leave
in
rcrl
cmp
inc
mov
stc
fadds
mov
leave
push
imul
popa
mov
fcoml
in
sub
lret
lcall
pop
adc
insb
fsubs
lret
fisttpll
test
cs
pop
je
clc
inc
inc
and
fs
jb
push
out
fadds
mov
pop
fdivrl
adc
push
or
inc
mov
je
cmc
cmpsl
xor
sbb
inc
mov
jb
xchg
movsl
das
mov
mov
dec
shrl
mov
mov
pop
jmp
sti
rep
loop
sbb
out
rcrl
jle
add
mov
inc
in
adc
test
jecxz
mov
or
xchg
movsb
out
cs
jno
aas
jge
add
test
xabort
arpl
ret
shlb
bts
dec
sub
jmp
cld
pop
dec
fcmovbe
scas
fstps
mov
sub
mov
rcll
xchg
ss
daa
or
dec
mov
jne
mov
js
sub
push
scas
aaa
loop
pop
pop
xorb
out
test
jp
adc
push
enter
dec
js
cmp
ljmp
or
lahf
xchg
cmp
jb
out
mov
rorl
fs
lods
loope
push
sub
jbe
xor
loop
and
daa
mov
arpl
loopne
enter
imul
pop
sbb
pop
int
test
out
or
xchg
cltd
pop
fnstenv
push
add
sub
mov
mov
fsubs
dec
into
adc
or
cmp
mov
fwait
jae
fiadds
iret
push
inc
jno
adc
sti
shlb
xor
or
xor
popa
lods
iret
cmp
aas
pop
pop
fmulp
push
and
fwait
bound
scas
jmp
shrb
or
jbe
inc
loopne
ss
rorl
das
or
jns
xor
adc
sbb
fnstenv
sbb
jmp
int3
sub
not
insl
stos
ds
or
jl
sub
push
xchg
or
push
cmpsl
dec
cmp
and
icebp
inc
push
sbb
stc
cmp
cltd
fwait
int
roll
jne
lcall
imul
inc
pop
mov
lds
and
rol
movsl
add
ret
and
mov
out
push
sub
outsl
jge
or
pop
insl
leave
cmc
aam
dec
add
test
outsl
mov
mov
imul
jp
insb
add
push
adc
lret
sbb
aas
cwtl
and
out
dec
movsl
jbe
mov
cmp
pop
mov
inc
stc
sub
repz
inc
xor
jo
xchg
cmpsb
popf
mov
adc
sbb
jecxz
inc
xorl
push
data16
rcrl
aam
or
jle
mov
mov
mov
mov
ds
outsl
mov
in
addr16
gs
push
scas
dec
pushf
jo
addr16
mov
xchg
lods
movsl
out
leave
lds
jle
repz
into
xadd
imul
add
add
cmp
lock
insl
sbb
mov
push
call
roll
and
xor
in
jle
lahf
jge
and
jne
flds
push
mov
add
mov
push
data16
enter
shrb
mov
fldt
push
adc
sbb
pop
ror
cmp
movsb
pop
mov
std
xchg
lcall
pop
fidivl
jbe
mov
imul
dec
cmp
adc
fisttps
mov
into
int3
int
mov
out
jne
iret
cli
jo
into
mov
movsb
test
scas
pusha
pop
mov
dec
ficoms
lea
adc
cwtl
mov
mov
cmp
cld
add
iret
fbstp
adc
clc
cli
pop
xchg
bound
xchg
dec
xor
inc
pushf
ror
add
mov
push
push
fimuls
push
addr16
loopne
lods
push
jl
sub
mov
and
inc
adc
popf
dec
gs
aam
ss
popa
cli
push
dec
push
repnz
add
inc
out
fcoms
outsb
mov
pushf
mov
xchg
nop
stc
fidivrs
push
je
mov
test
jno
add
mov
xchg
dec
mov
push
mov
hlt
test
in
cmp
pop
sbb
xor
inc
mov
test
aam
mov
jmp
sub
and
cmpsl
cmp
rclb
mov
cmc
add
jmp
jae
lret
int3
cmp
into
mov
insl
xlat
aam
mov
or
aas
rolb
out
jne
repz
shlb
cmp
push
jb
lods
jecxz
jmp
cli
dec
cmp
test
push
add
aaa
ljmp
clc
mov
cwtl
out
push
dec
inc
inc
repz
dec
out
pushf
pop
ds
jne
pop
das
xor
out
cmpsb
into
stos
dec
mov
rcr
xchg
add
aam
xlat
xchg
out
gs
xchg
cmp
and
cmp
xchg
dec
outsl
inc
rorb
pop
push
lods
xor
hlt
and
jae
aas
ja
fsub
scas
lock
test
inc
cmp
pop
je
lods
in
fs
pop
dec
inc
aam
int
into
xor
add
les
mov
loope
xor
dec
stc
enter
push
pop
mov
jbe
shrb
jbe
sbb
jne
cld
ds
inc
mov
inc
mov
test
loop
adc
dec
repnz
test
add
shr
scas
inc
inc
push
into
mov
dec
dec
add
or
cwtl
dec
mov
mov
pusha
xor
pop
bound
add
enter
clc
jns
and
repnz
pop
inc
into
imul
aas
push
cs
popf
push
stos
cmpb
push
push
daa
test
mov
or
and
lea
ret
xor
out
movsb
mov
pop
imul
jo
xor
lods
mov
xchg
cmp
enter
lods
adc
adc
adc
xlat
or
mov
and
sbb
push
cmp
das
xchg
push
or
mov
test
push
jle
inc
xor
lea
rcrb
out
push
mov
lahf
sub
sub
movb
leave
stc
xor
cmp
les
add
lds
arpl
jmp
pop
jmp
sarb
lcall
ss
xchg
cmp
sub
inc
subb
inc
dec
adc
aaa
mov
mov
jecxz
inc
shrl
jg
enter
lock
arpl
fsubrl
in
pop
test
cmp
inc
test
lods
mov
in
and
mov
ljmp
and
out
incl
scas
ficoml
out
dec
push
push
push
arpl
les
inc
cmpb
aaa
xchg
loop
imul
dec
push
or
xchg
test
scas
popa
add
addr16
mov
fdivrl
and
ljmp
lret
pushf
pop
sub
mov
fldz
cmc
repz
push
sbb
cmp
mov
add
inc
or
clc
call
notl
mov
cmp
inc
mov
mov
add
int3
mov
les
dec
pop
lret
insl
cmpsl
dec
pusha
sbb
gs
mov
xchg
add
into
sbb
andl
shlb
mov
les
xchg
xlat
lcall
push
mov
fistl
in
and
or
loop
out
sub
lds
rcrl
pop
pop
fwait
add
mov
fs
divl
jg
dec
addl
adc
lods
or
cmp
test
or
ficomps
lcall
incb
outsb
je
ret
adc
fdiv
lahf
and
repnz
xor
call
dec
dec
int3
cli
stos
push
mov
popa
jecxz
pop
pop
pop
inc
xchg
and
xchg
cmc
ret
sar
lods
push
jge
das
xchg
leave
rorl
or
xchg
rolb
push
pop
mov
loop
sbb
out
lods
mov
testb
addb
mov
push
mov
lret
or
xor
into
mov
adcl
adc
push
and
mov
int3
sub
pop
sbb
or
dec
repz
fildl
imul
int3
pop
test
mov
ret
int3
adc
jb
pop
gs
arpl
sub
insl
pop
dec
ja
test
filds
into
inc
rolb
xor
dec
pusha
out
sub
je
or
and
mov
jbe
ret
pop
cmp
fs
lock
sub
dec
pop
in
inc
out
mov
push
fidivl
mov
fidivrl
cwtl
xchg
sti
inc
popa
inc
pop
out
mov
and
pushf
out
mov
das
orl
mov
jge
fdivrs
movb
test
push
or
mov
inc
dec
addr16
cwtl
imul
mov
bound
inc
cmp
outsl
and
xchg
pushf
rolb
addl
leave
push
xchg
inc
lahf
adc
sbb
adc
ss
nop
or
inc
adc
repz
mov
cwtl
fs
aad
mov
aas
cwtl
gs
call
or
mov
and
dec
jle
push
roll
sbb
lcall
popa
aaa
cmp
into
es
imulb
cmp
xchg
jb
iret
adc
mov
cwtl
xchg
cmc
ss
pop
mov
test
adc
or
dec
or
xchg
leave
fs
pusha
sub
mov
stos
jmp
push
push
lds
lret
loopne
out
and
sbb
mov
push
sub
subl
test
scas
sub
adc
rcll
adc
jp
mov
mov
lea
jl
mov
pop
les
addr16
lods
int3
pushf
add
mov
and
lret
mov
inc
xchg
jecxz
ss
rcr
nop
pop
xchg
add
cmp
int3
xchg
xchg
sbb
rcl
mov
xor
pop
int3
out
shll
cltd
push
inc
lret
lods
rcl
jp
add
mov
mov
jmp
mov
xor
test
test
or
enter
lods
insb
adc
test
test
stc
xchg
cmp
iret
and
sub
xchg
mulb
pop
xlat
movsl
sub
cld
scas
cmp
lea
aaa
clc
xor
xchg
stc
mov
stos
ljmp
dec
xor
add
test
std
xor
insb
xorl
or
pushf
and
outsb
xchg
cs
subl
xchg
mov
or
sub
xor
mov
jecxz
leave
mov
lret
mov
inc
xlat
pop
pop
xchg
pusha
ja
dec
jo
mov
cli
push
test
stc
loop
mov
xor
rcrb
mov
out
push
fidivl
nop
pusha
xchg
mov
cltd
into
in
outsl
ret
in
aaa
inc
std
test
sub
aad
fwait
jb
loope
xchg
mov
adc
pop
cli
mov
push
push
adc
loope
iret
stos
mov
jbe
mov
and
jne
lods
xchg
rolb
pop
popf
fwait
out
pop
movsl
or
out
pop
jns
jge
pushf
dec
jmp
adc
cmp
es
xor
test
imul
add
mov
lods
inc
mov
cmp
jne
fistpll
sti
mov
jle
pop
pop
mov
or
fcoml
lret
mov
push
mov
inc
arpl
inc
into
cmp
stos
repz
pop
mov
jp
je
int3
jbe
xchg
jmp
out
stos
lds
in
mov
popf
or
push
xchg
lret
cmp
push
push
pop
sahf
jne
test
jbe
ljmp
bound
fsubrl
lret
arpl
xor
in
cmpsl
pop
pop
into
cwtl
fcoms
adc
daa
mov
cmp
cltd
sbb
or
cmp
adc
out
in
pop
ds
or
xlat
iret
repz
jl
push
push
ja
inc
dec
popf
mov
testl
cli
cs
xor
repnz
enter
mov
rcrb
cmp
loopne
mov
inc
or
arpl
cmp
sti
dec
ljmp
shll
aam
xchg
mov
mov
xlat
cmp
mov
inc
int3
pop
inc
push
sar
sub
xor
xchg
cmp
jns
xchg
push
ja
sub
xor
mov
icebp
notl
fdivl
xchg
aas
outsl
cld
jne
outsb
cmpsl
lret
jecxz
mov
jg
pop
add
out
jmp
std
dec
hlt
sub
stc
adc
pop
mov
sbbl
cli
leave
or
cmpsl
and
xor
or
ds
int3
push
shlb
rol
fwait
jo
fidivs
mov
in
xor
jle
ja
dec
scas
mov
pop
inc
mov
andb
scas
pushf
fwait
mov
mov
mov
cmpb
in
loope
lods
dec
fstps
leave
rcrb
mov
and
insb
push
jno
cmp
xchg
xorb
aas
jne
xchg
stos
into
mov
std
imul
mov
lahf
lret
fldl
mov
das
push
jl
xor
add
aad
fdivs
out
mov
push
inc
aam
xchg
rcl
lds
sarl
fwait
jbe
inc
fmuls
push
in
hlt
aas
xchg
jecxz
and
int3
and
mov
dec
repz
pop
imul
push
notl
mov
cmp
test
xchg
imul
jmp
insl
inc
mov
js
daa
cmp
rorl
lcall
subl
push
sub
xchg
outsb
cld
jno
jp
jae
outsb
jne
shll
jo
jecxz
jbe
dec
sub
lcall
adc
jp
xor
in
fcmove
pop
pop
imul
jo
rcl
lock
inc
push
nop
xor
jne
lods
adc
mov
jge
iret
mov
mov
lds
gs
movsb
mov
daa
and
inc
sbb
and
movl
vpacksswb
out
sub
mov
ss
xchg
out
cmpsl
iret
inc
push
pop
push
fcom
lret
in
xor
sbb
outsb
mov
imul
ss
jb
xchg
nop
mov
xchg
push
mov
fwait
cli
or
jne
xor
addr16
aam
inc
pusha
loop
das
clc
ja
fsubl
pop
out
outsl
push
in
inc
dec
adc
cmp
in
push
push
inc
mov
jl
cmp
dec
lods
shll
mov
add
xlat
jg
fadd
stc
sub
aas
leave
and
jne
shlb
inc
faddl
out
rorb
es
loopne
cmp
lcall
bound
mov
add
sub
movsb
aas
mov
xchg
aad
je
fstpl
dec
cmp
xorb
flds
in
loope
mov
mov
repnz
dec
out
out
gs
jmp
sbb
mov
inc
cmp
jl
fdivrl
sub
leave
cpuid
mov
or
cmp
cmp
es
cmpsl
sub
out
lods
mov
or
lret
push
and
arpl
daa
insb
pop
mov
sub
lock
call
mov
inc
cli
xchg
lods
imul
cmpsb
enter
xchg
imul
push
cmp
jle
neg
mov
add
test
push
xchg
int3
imul
pop
movsl
cmp
stos
data16
cmpsl
adcl
push
pop
mov
add
sub
add
sbbb
add
and
lods
xchg
dec
jle
xchg
into
or
cmp
mov
add
lcall
bnd
scas
dec
out
das
sub
jp
jmp
push
gs
sbb
jbe
test
pop
movsb
je
dec
ret
pop
jne
sahf
adc
dec
int3
mov
mov
lcall
sub
push
movsb
add
int3
cmp
pop
cmp
iret
xchg
insl
inc
stc
and
sbb
and
cmc
cmp
push
lea
sub
push
sub
test
test
into
and
mov
fsubrs
or
mov
or
dec
inc
rorb
sub
dec
js
fldl
lret
rcrb
push
repnz
xor
sbb
sub
lea
mov
cwtl
add
lret
data16
popl
cmpsb
mov
inc
xchg
loop
push
jmp
out
test
mov
movsl
cmp
loopne
mov
mov
xor
add
icebp
or
jle
and
stc
mov
lods
clc
dec
fsubrs
inc
xchg
jns
mov
stos
mov
jmp
ss
rolb
imul
jle
pop
mov
int3
arpl
cmc
dec
dec
sub
lods
repnz
pop
pop
jecxz
jno
add
ja
movb
cmc
jmp
iret
xor
mov
push
jo
stos
test
test
cmc
std
mov
shrl
nop
jl
fdivl
imul
mov
add
in
fs
push
and
adc
pop
mov
mov
xchg
xlat
dec
pop
sub
das
jmp
mov
sub
fwait
movb
mov
sbb
dec
or
and
add
mov
xchg
push
mov
and
pop
mov
inc
cmp
jno
push
jmp
enter
xor
jb
push
fisubrs
dec
fiaddl
cmp
mov
mov
sub
mov
xchg
pusha
icebp
xchg
repz
neg
int
sbb
add
and
lea
push
add
lret
cmp
les
sub
in
inc
inc
sbb
je
push
push
mov
push
lock
jns
inc
sbb
sub
sub
mov
movsl
dec
dec
xorb
xor
stos
jb
repnz
into
cld
ljmp
xor
xchg
xor
or
xchg
jmp
iret
xor
arpl
fdivs
fwait
int3
stos
jmp
scas
outsb
ljmp
xor
jle
pop
push
sbb
sub
aas
sub
adc
xor
cmpsl
sahf
sbb
inc
es
popf
testl
outsl
popa
cltd
pop
sbb
dec
adc
xchg
dec
pop
mov
fs
jae
push
lahf
pop
sub
repz
sub
aam
iret
xchg
mov
test
popw
jle
sub
pop
xchg
jno
xchg
les
push
out
ja
or
mov
call
icebp
sub
insb
jmp
lahf
aas
repnz
dec
shrb
inc
pop
push
bound
iret
inc
dec
xor
or
cmp
das
dec
pop
cmp
out
sbb
xor
int
mov
xchg
leave
ds
cmpsl
les
notb
int3
mov
sub
add
mov
cmp
inc
repnz
xor
sbb
rcl
mov
dec
and
and
xor
pop
sbb
cmp
or
ret
shll
sarb
jle
sub
mov
mov
xchg
out
xchg
ret
jo,pn
addr16
lea
push
pop
jge
add
into
pop
cmp
xor
cmpsl
cmp
mov
enter
inc
sub
mov
pusha
cmpsl
icebp
jmp
add
jno
scas
pop
movsb
dec
ss
cmp
pop
inc
sti
xor
xchg
mov
test
adc
mov
mov
dec
pusha
rcr
sub
out
xchg
push
cmc
movsl
mov
pop
xchg
in
xchg
mov
mov
mov
out
push
call
arpl
dec
pop
cltd
pop
stos
and
jmp
mulb
out
push
shll
adc
shl
inc
adc
adc
call
out
cli
ljmp
xlat
pop
push
cmpw
sbb
ja
cmp
fs
add
test
sub
repnz
ret
and
aas
sub
idiv
repnz
clc
je
mov
popf
scas
and
mov
sub
xor
add
out
stos
add
adc
inc
mov
pop
push
stos
gs
hlt
or
and
sbb
adc
fstpl
mov
push
pop
dec
inc
mov
test
movsb
xor
xchg
aam
mov
pop
push
outsl
sub
vmread
xlat
xor
movsl
mov
mov
adc
ja
jmp
dec
fists
fsubrl
enter
xchg
push
or
add
pop
pop
in
dec
les
dec
xchg
pop
pop
enter
out
pop
aad
fiaddl
in
adc
xchg
jl
call
int3
in
test
pop
adc
ficomps
rcl
and
popaw
shl
push
sbb
push
dec
and
xlat
jno
push
rcll
push
out
adcl
xor
xchg
adc
push
push
rcll
lret
int3
hlt
push
aad
data16
addr16
push
sub
sbb
rcl
sub
xchg
gs
data16
pushw
xchg
xchg
push
inc
dec
cmp
push
jb
cs
js
or
clc
bound
pop
gs
pop
loop
loop
leave
sarl
rcr
mov
out
adc
int3
mov
xlat
jbe
fsubr
loop
dec
popa
in
aam
out
or
push
into
fldl
stos
sbb
rcr
popa
in
ret
xchg
push
push
or
enter
sbb
cmpsb
dec
shr
scas
and
aam
outsb
dec
mov
fcomps
in
mov
iret
ds
xlat
adc
out
into
and
mov
cs
mov
outsb
je
rcl
sub
mov
dec
shrb
jnp
enter
dec
xlat
pop
mov
and
lods
sar
xrelease
int
addr16
push
call
mov
test
fcomp
lret
call
fisubs
or
shr
dec
xlat
adc
fcomps
and
dec
loop
jbe
pop
scas
jge
rclw
nop
xchg
fcom
mov
nop
mov
into
sarl
movsl
into
int
mov
stos
lret
int
push
push
int
push
stos
xlat
fucom
push
dec
into
lcall
int3
adcl
in
add
push
or
xchg
shl
push
push
or
loope
dec
push
pop
adc
lret
fcmovne
leave
xchg
rcr
inc
mov
fmuls
shrb
push
into
and
aad
mov
cmp
adc
int
shll
fstps
or
fcoml
iret
lods
int
push
fst
xor
dec
rcrl
in
dec
mov
jnp
rcl
enter
add
dec
iret
ret
xlat
call
or
dec
lds
xlat
jmp
ja
mov
data16
push
stos
fsubs
test
push
lret
fmul
jo
enter
cltd
loop
dec
xor
ret
mov
add
stos
fmuls
data16
dec
xchg
push
in
xchg
enter
out
rcrl
test
push
stos
leave
pop
out
cwtl
leave
pop
push
popf
std
cwtl
push
repz
ds
mov
adc
mov
adc
iret
ds
dec
push
mov
leave
or
stos
leave
std
pop
pop
dec
sar
adcb
dec
mov
out
push
xor
pushf
loop
adc
mov
rorb
push
mov
iret
add
repz
fmul
dec
push
int3
int
mov
dec
adc
rclb
pushf
lret
hlt
rcl
dec
stos
ss
dec
add
adc
jae
js
push
jae
jbe
fmul
cmpsb
xchg
fdivs
and
push
ret
rol
push
lods
dec
fcmovne
lds
push
jle
lret
in
adc
xchg
shl
mov
es
mov
ja
xlat
fcmovnbe
in
jle
rorb
dec
int
lret
into
xchg
stos
fadds
in
and
rol
adcb
cmp
mov
dec
push
aam
mov
aad
cmc
mov
adc
add
rol
adc
int3
push
push
sbb
rorb
xor
notb
movsl
enter
iret
and
aad
int3
push
adc
popf
into
xchg
mov
enter
loopne
clc
fst
call
loope
xor
std
test
out
repz
leave
pop
xlat
stos
into
fcmovnbe
out
push
push
dec
scas
push
dec
jae
lret
pop
push
loope
mov
test
daa
mov
dec
push
ret
xlat
pop
dec
sarl
sahf
cmp
push
adc
adc
fcoms
dec
out
jno
int3
pop
mov
stos
lret
pop
out
sub
rol
and
adc
int
push
dec
mov
adc
int3
push
rorb
ret
xlat
orb
addr16
cs
dec
sub
aam
inc
push
dec
push
ret
iret
xchg
xor
fcomps
push
into
rclb
jb
dec
leave
imul
lret
sub
aaa
int3
fsubs
pop
cmpsl
xchg
shlb
dec
insb
dec
out
rorb
mov
add
push
or
rcll
int3
jbe
repnz
negl
mulb
cmc
push
mov
aad
mov
jb
adc
add
leave
or
test
xchg
jns
or
cmp
sbb
enter
xlat
push
inc
adc
mov
into
es
fimuls
lds
xchg
ret
hlt
in
cmp
mov
int
pop
push
scas
mov
xlat
loope
mov
les
push
xchg
cs
adc
xchg
xlat
cmp
into
leave
pop
and
int3
jle,pn
aad
sbb
psrlw
leave
je
xchg
aam
push
cmp
sti
adc
nop
test
ret
shlb
pop
dec
push
lret
push
int3
or
lret
dec
mov
mov
int3
aad
ret
dec
lret
sbb
ja
rcrl
dec
ret
fs
ret
ret
cmp
in
cmp
sub
aas
adc
lret
int3
mov
aam
pop
push
call
sub
fwait
or
js
sarb
mov
data16
dec
int3
push
mov
nop
ror
ss
popl
push
add
add
mov
mov
adc
int3
mov
int
call
jb
fcompl
fsubs
mov
push
adc
popa
or
int3
roll
dec
in
xchg
movsb
pop
jecxz
mov
into
rclb
punpcklwd
xchg
dec
fcomip
int3
push
mov
mov
mov
aad
cltd
push
outsb
pop
in
push
mov
mov
in
lss
pslld
push
mov
in
rcrl
add
mov
mov
or
jbe
xlat
push
ror
pop
push
cmp
aam
inc
stos
aad
adc
xchg
rcr
add
push
addr16
repz
cmp
notb
xchg
dec
shrl
stos
mov
lods
shr
fcomi
in
dec
enter
sub
push
lret
jnp
popf
dec
push
iret
mov
nop
int3
mov
add
xlat
out
jle
mov
aad
push
cmp
mov
adc
leave
inc
call
or
push
add
pop
dec
shll
fsubrs
jns
mov
aad
mov
xchg
lods
mov
lret
iret
mov
push
out
push
mov
ja
pop
xchg
xor
sarb
rcr
dec
mov
jo
mov
lret
fdivrs
ret
push
dec
pop
cltd
push
pop
roll
fxch
mov
lret
jo
iret
pop
lret
mov
rorb
xlat
mov
into
cwtl
or
push
xor
repz
iret
cwtl
rcr
int
rcr
dec
leave
rcll
int
xchg
fcomps
rcll
pop
dec
dec
rol
pop
dec
mov
push
fcom
xor
iret
inc
fadd
into
rolb
out
dec
aaa
inc
mov
xor
ret
push
push
rclb
lret
sub
push
push
push
push
call
push
mov
xchg
or
mov
dec
jecxz
cwtl
int3
push
lret
loop
mov
je
push
shll
mov
push
dec
push
je
enter
test
push
int3
les
shrl
push
loop
push
dec
xor
cmp
adc
scas
iret
jae
dec
sbbl
push
int3
dec
in
data16
sbb
rcl
push
ljmp
push
dec
pusha
sbb
mov
scas
lcall
push
dec
rorb
stos
dec
test
mov
arpl
lret
pmullw
dec
aad
out
int3
aad
ret
hlt
push
fucomip
out
ror
dec
aas
pop
mov
jl
mov
out
push
stos
xlat
dec
adc
mov
lcall
sub
movsl
xlat
push
mov
xlat
mov
dec
shll
push
lods
iret
lret
lret
pop
dec
cmp
loop
xlat
push
sbb
in
add
add
dec
js
mov
mov
clc
mov
leave
xchg
fadd
rcll
add
mov
push
jb
jns
pop
pop
add
mov
mov
push
stos
leave
mov
dec
adc
aam
fcoms
sbb
leave
int
lret
mov
hlt
dec
out
lods
ror
fcoml
aaa
dec
aad
or
test
iret
sub
pushf
push
icebp
fcom
mov
push
into
addr16
pop
dec
cmp
lods
adc
cmp
cmpsb
sbb
push
int3
mov
push
sar
aad
jge
mov
dec
mov
adc
inc
dec
sbb
int
adc
rcrl
push
jne
or
stos
mov
shlb
jno
push
jno
in
add
call
mov
add
jb
or
and
mov
and
ret
push
andb
and
enter
call
add
dec
aam
push
add
xor
adc
test
push
pop
xchg
fadd
jl
mov
add
rorl
mov
xor
dec
int3
arpl
add
cmp
stos
xlat
dec
adc
ja
rorl
dec
aad
ret
shr
call
out
xchg
mov
inc
cmc
jle
pop
jmp
mov
fucomip
mov
add
xchg
pop
jne
in
push
fxch
pop
out
pop
test
fstpl
xchg
into
popf
jl
ljmp
add
mov
fcomip
shr
jg
mov
cwtl
adc
pop
leave
or
scas
jne
enter
adc
push
push
insl
adc
mov
push
stos
lret
mov
cli
push
hlt
fcom
fisttpll
lret
in
out
push
mov
ret
push
ror
call
or
adc
mov
push
xlat
cmpsl
test
mov
push
or
cmpsl
insb
pop
push
xchg
mov
insl
dec
and
addr16
push
fcmovne
adc
push
enter
pushw
stos
pop
lret
rcll
hlt
xlat
aam
shlb
iret
or
iret
mov
lahf
rorb
and
mov
and
lret
leave
into
in
into
and
aad
shl
cmc
js
dec
mov
out
push
into
pop
dec
shll
push
pop
xor
and
xor
push
in
or
ss
dec
push
mov
js
and
rolb
add
dec
hlt
dec
mov
call
lea
scas
test
popf
int3
push
xlat
push
push
or
dec
pop
pop
dec
mov
or
adc
mull
in
ds
push
into
test
testl
leave
add
push
push
xlat
fsubs
cmp
pop
rcll
int3
dec
jmp
scas
xor
cmp
push
rcl
xchg
mov
roll
imul
xlat
repz
lds
push
xor
dec
mov
aas
dec
lods
mov
push
sub
out
push
push
sbb
mov
inc
pushf
pop
mov
xor
pop
mov
pop
inc
mov
adc
negb
in
xchg
push
push
pop
cmp
push
frstor
mov
in
xlat
cmp
mov
data16
mov
sbb
push
inc
fstl
sub
data16
xchg
pop
cmpsl
mov
sbb
call
adc
mov
sub
aad
jnp
fwait
mov
fcompl
mov
sbb
mov
dec
mov
scas
and
sbb
shll
sarb
inc
mov
mov
push
aad
and
divl
push
xchg
xchg
loop
adc
mov
add
jae
aad
es
das
pop
mov
xchg
rcll
dec
push
aad
or
pop
out
mov
adc
xchg
jg
imull
adc
mov
xchg
aad
xchg
jns
iret
jne
xchg
jl
push
out
int3
sub
or
xor
xchg
jl
mov
stos
dec
fcom
inc
jg
lret
push
pop
out
fdivr
inc
xor
fmul
mov
and
lret
xchg
mov
xchg
mov
mov
imul
ror
rorl
mov
cmpb
fmul
aad
cwtl
mov
lds
rcl
int
nop
xchg
lea
roll
dec
push
dec
push
or
or
inc
cmp
push
cli
pop
sti
iret
mov
adc
adc
inc
aas
inc
incb
incl
pop
dec
push
dec
sbb
inc
cmp
cld
add
dec
push
adc
cmp
add
jbe
ja
out
out
cmpsb
lcall
mov
jb
jae
loop
sahf
mov
mov
js
jne
call
test
movsl
cltd
mov
lods
mov
je
jno
in
fucom
mov
sub
aaa
sub
ljmp
pop
sbb
sbb
xor
das
xor
repnz
repz
pop
arpl
and
and
sub
xor
jmp
pop
sub
sub
icebp
pusha
fs
popa
and
into
or
xchg
cmpsl
push
or
jno
mov
mov
inc
cmovns
repnz
adc
push
pop
push
cli
popf
jg
aad
xor
push
sbb
mov
push
fmuls
scas
and
push
ljmp
dec
call
mov
hlt
jno
sahf
mov
leave
aam
icebp
repnz
pop
mov
push
pop
xchg
push
dec
or
test
int
xor
vaddss
xchg
push
arpl
xor
sub
dec
arpl
inc
dec
mov
lret
imul
shrl
fsubrs
leave
dec
cs
out
jecxz
inc
pop
fwait
jne
icebp
int3
sarl
rorl
jmp
push
push
mov
xchg
rclb
push
arpl
inc
sahf
rcrl
inc
aam
fmuls
div
movb
push
aad
in
mov
clc
aam
mov
out
es
push
mov
out
call
mov
iret
fmulp
jb
scas
push
lods
dec
rcll
cmp
call
mov
or
cli
dec
in
js
jne
aam
repnz
jne
shl
out
lret
dec
and
jmp
and
inc
rolb
and
mov
and
leave
hlt
inc
sbb
fcoms
ljmp
pop
sbb
xchg
rorl
push
add
sbb
into
repnz
pop
pop
repnz
rclb
hlt
imul
fcmovnbe
popf
push
je
dec
enter
fcmovnbe
dec
push
imul
push
sarl
aad
pop
test
mov
lret
push
push
lret
insl
bnd
pop
inc
lret
fsts
into
adc
add
loopne
lcall
int
push
rcll
into
aad
decb
lret
adc
dec
or
loopne
out
push
rorb
mov
dec
cs
add
dec
xor
pop
push
push
add
push
jnp
out
rol
xor
cs
icebp
rclb
outsb
push
dec
adc
push
add
or
xor
in
sti
push
or
xchg
int3
outsb
add
or
lock
push
lret
loope
push
push
cmp
int
or
xchg
lret
lock
add
or
pusha
jp
dec
push
xchg
enter
push
leave
or
out
std
sbb
lods
shr
pop
rcrl
and
dec
pop
mov
pop
rolb
sahf
inc
dec
iret
pop
pop
ss
xlat
out
bnd
aad
out
repnz
mov
inc
lret
xchg
dec
scas
in
fisttps
das
xor
xchg
xor
pop
movsl
push
add
fisubs
inc
mov
out
aas
aad
xchg
inc
icebp
into
aad
int3
jmp
adc
push
das
mov
mov
adc
out
mov
mov
inc
aad
mov
in
xchg
mov
in
ja
sbbb
in
icebp
dec
out
pop
fsubs
aad
es
sub
js
loopne
notl
repz
inc
nop
push
push
dec
ja
push
dec
outsl
fldt
push
enter
dec
adc
jb
test
shll
jne
mov
and
and
mov
fs
je
mov
pop
cmp
sbb
test
push
out
sub
push
xlat
push
dec
stos
outsb
push
cmp
jo
in
das
or
jmpw
push
lods
xchg
mov
add
pop
mov
xlat
stos
enter
out
into
jbe
inc
sbb
dec
mov
arpl
fimuls
mov
mov
pop
loop
js
adc
bound
push
out
jmp
or
int
fstl
mov
push
adc
aad
dec
fst
mov
sbb
cmp
or
pop
mov
pop
popa
mov
sbb
jg
push
mov
imul
data16
push
push
insl
scas
mov
sbb
int
push
roll
adc
xor
push
jecxz
dec
loope
jmp
rorb
or
fstl
mov
mov
rcrl
in
sbb
jle
or
or
pop
push
int
dec
repnz
mov
test
push
mov
ret
push
call
and
push
iret
decb
sbb
xchg
out
push
aad
es
fs
adc
jecxz
push
and
mov
sbb
ja
xor
scas
xchg
pop
rcrl
xchg
sub
sbb
leave
mov
push
fisubl
ret
and
les
mov
and
test
mov
cwtl
popa
push
pop
int
dec
sbb
jl
data16
or
test
fiadds
push
ljmp
xchg
push
dec
fisttpll
fcomp
pop
adc
scas
iret
mov
pushw
cmp
fcoms
frstor
dec
dec
dec
pop
mov
push
adc
lcall
mov
push
fcmovne
mov
js
lcall
mov
pop
xor
popa
dec
in
dec
call
test
dec
aad
sti
enter
cmc
fdivs
sbb
or
out
sub
pop
aad
fistl
xchg
adc
add
dec
pop
or
dec
push
xchg
repz
out
or
aas
xchg
rcr
pop
cmp
rorl
xor
dec
dec
mov
sbb
aad
dec
xchg
rclb
xlat
faddl
add
fwait
test
push
daa
dec
add
stos
fadds
icebp
test
mov
push
inc
adc
dec
nop
jl
xor
ja
jns
and
repz
in
je
fisubrs
push
mov
aaa
adc
add
loope
sbb
push
push
cli
sti
push
addr16
adc
int3
call
rcrl
call
dec
sbb
xor
push
repz
pop
test
testl
stos
mov
cwtl
xor
fsubr
lds
push
aad
dec
xor
mov
cmovge
scas
lret
mov
sub
add
and
mov
or
pop
shl
xchg
loope
shrl
dec
mov
mov
adc
shr
inc
mov
jecxz
enter
push
fnsave
icebp
mov
stos
or
int
ds
mov
push
fmuls
scas
lret
adc
pop
dec
loop
push
adcb
cmp
adc
lods
xchg
and
jo
out
fsubs
adc
mov
adc
cmpsb
cmpb
in
push
cmp
pushf
pop
inc
pop
push
inc
fwait
jnp
je
aaa
sub
sbb
add
push
leave
jb
cmp
pop
movsb
sarl
sub
adcl
mov
js
xchg
sub
or
imul
and
cmp
outsb
je
mov
adcl
lods
push
out
inc
push
lret
push
add
filds
test
sbb
dec
pop
dec
fs
adc
aaa
sub
insb
adc
in
cmp
pop
aad
push
pop
bound
inc
ret
xchg
push
push
mov
xchg
js
js
lahf
cmpb
jbe
lods
ja
dec
into
pusha
dec
adc
dec
mov
mov
stos
sar
fwait
loop
out
aad
gs
in
and
sbbb
xchg
out
jecxz
insl
aad
in
push
adc
push
fsubl
mov
adc
lods
fmuls
jo
movsb
push
dec
rcrl
lea
pop
xlat
sbb
sbb
loop
icebp
jg
push
sbb
push
lret
lret
jecxz
inc
leave
push
push
xor
iret
pop
loop
push
sbb
pop
fcomps
push
repz
out
dec
push
outsl
mov
pushfw
pop
push
mov
adc
aaa
dec
add
mov
xchg
adc
out
mov
addr16
mov
das
mov
add
pop
popl
dec
int
lret
pop
sub
push
shlb
or
xlat
mov
fdivs
sbb
fadds
add
shrb
sbb
lret
lret
pop
mov
dec
or
mov
ret
in
shrb
ja
push
and
fisttpll
inc
fnsave
or
push
lret
aam
push
xchg
aad
loop
test
dec
adc
mov
and
not
movsl
xlat
fsubs
push
xchg
rol
push
call
xchg
inc
dec
lret
push
insb
pop
pop
stos
push
cmc
push
dec
dec
dec
fcoml
xchg
loopne
stc
dec
dec
jnp
aad
ss
cwtl
adc
int3
push
xlat
dec
adc
clc
adc
aad
inc
shll
pop
in
lods
fsts
pop
lea
out
jne
xchg
out
push
stos
and
adc
inc
iret
test
out
ja
scas
ret
xor
push
pop
bound
adc
adc
dec
dec
scas
xorl
jns
cwtl
call
fnsave
sbb
mov
pop
test
test
roll
jbe
ja
mov
lret
add
rcl
add
xchg
mov
mov
out
sub
movsl
push
push
xor
pop
dec
dec
rolb
push
mov
push
xchg
push
call
jle
iret
add
push
push
int
sbb
idivl
dec
adc
dec
xchg
dec
aad
ret
or
push
popa
lds
shl
dec
call
push
je
mov
aad
std
dec
nop
lock
push
fs
xor
bound
dec
push
mov
or
pop
rcrl
stos
cmp
fmul
jmp
fildl
loopne
inc
mov
pop
push
push
rcrb
movsb
pop
adc
lods
dec
cmp
mov
xchg
rorl
fs
iret
stos
loop
cmp
jb
sub
adc
xchg
push
mov
repnz
sub
es
dec
xlat
push
mov
jne
add
out
lods
aam
popa
mov
pop
inc
xorb
push
push
or
push
addl
jecxz
push
int
sub
push
sbb
lret
fisttps
mov
push
into
dec
shl
jmp
or
push
movsl
mov
sbb
cwtl
pop
shrb
int3
out
sbb
mov
sbb
out
data16
push
repnz
adc
or
dec
in
sbb
adc
push
push
scas
lds
cmc
out
icebp
mov
int3
and
outsb
sarl
push
xchg
lret
rorb
aam
adc
adc
xor
pop
or
jecxz
cmp
cmp
xchg
loopne
shrl
cmp
mov
inc
rclb
fs
inc
scas
fwait
std
push
pop
mov
mov
dec
or
xor
icebp
call
mov
or
ret
cmpl
mov
fcomp
ror
out
dec
xchg
mov
pop
push
push
sti
xlat
dec
popf
push
pop
test
pop
push
push
push
enter
rorb
in
or
test
xchg
loop
and
loop
xchg
fstl
xor
ss
ret
mov
mov
scas
pop
loope
sbb
mov
dec
mov
call
push
push
rcr
xchg
jae
in
sbb
sbb
fmuls
bnd
or
aas
dec
loope
xlat
mov
mov
sbb
sbb
mov
xor
dec
sbbb
mov
sbb
push
cmp
jne
push
pop
sub
or
mov
sbb
push
iret
pop
add
jae
data16
insl
add
dec
mov
adc
push
and
push
mov
sub
mov
aam
push
cmp
jbe
and
hlt
push
push
pop
data16
clc
dec
dec
sbb
pop
in
push
push
push
or
push
jns
mov
in
movsl
out
adc
mov
fmull
stos
xor
into
ret
shl
adc
push
std
and
push
out
rcll
nop
push
mov
adc
xchg
sbb
aad
add
cmp
lahf
outsl
test
fcom
ret
sub
and
adc
frstor
sub
mov
push
rorb
fdivs
loope
jmp
dec
mov
push
sbb
push
xchg
fstl
mov
addr16
filds
adc
mov
push
jbe
mov
and
and
sbb
xchg
add
fadds
adc
mov
adc
call
in
repnz
mov
inc
mov
iret
ficoml
leave
xlat
pop
sub
dec
cs
cld
adc
dec
mov
sub
sbb
inc
divl
aad
test
xchg
xchg
pop
mov
pop
adc
addb
daa
dec
inc
ficoml
fcomps
sar
jno
push
negl
adc
add
push
leave
mov
add
jae
xchg
rcrl
mov
jne
inc
das
aad
cmp
test
paddb
xchg
in
push
pop
xchg
mov
arpl
jecxz
xchg
test
arpl
jge
sub
shl
or
lahf
push
xchg
mov
push
aam
ret
test
pop
adc
jp
xchg
xchg
dec
insl
xlat
in
dec
popf
jb
push
sbb
daa
je
lock
sub
in
rcrl
pop
rcl
jne
ret
add
add
iret
xor
mov
fldl
mov
xchg
iret
imul
lds
lds
stos
aad
mov
mov
push
call
outsl
add
fwait
or
xchg
aaa
in
pop
addr16
sbb
out
pop
mov
pop
ja
rcrb
mull
xchg
dec
fcom
pop
fmul
xchg
adc
dec
in
fst
mov
or
dec
call
or
fmuls
stos
arpl
icebp
call
insb
into
movsb
mov
push
jns
aaa
pop
in
mov
dec
in
sub
imul
cmp
push
in
cmp
fwait
in
mov
shrb
pop
pushf
in
jnp
jle
mov
xchg
stos
pop
rcl
cmp
fxtract
mov
cmp
mov
adc
xor
push
cmpsb
call
adc
ljmpw
lods
adc
pop
pop
dec
dec
popa
dec
mov
out
mov
sbb
fmuls
push
xor
sub
iret
push
pop
mov
call
int
call
gs
in
push
push
sbb
mov
loop
rol
dec
dec
inc
xor
mov
dec
bound
pushf
sbb
js
dec
xchg
fstl
pop
loopne
adc
call
jecxz
data16
in
data16
mov
lret
cmp
pusha
mov
sbb
push
adc
or
rolb
or
or
push
popa
enter
pop
pop
pop
push
cmp
mov
push
push
or
gs
adc
pop
arpl
out
mov
sbb
mov
loopne
xor
jge
adc
nop
ss
cmpsl
pop
std
sbb
pop
push
rcll
or
and
test
stos
sub
rcrl
ret
pushf
aam
shll
xchg
ret
xchg
movsl
movsb
mov
adc
sub
das
mov
rclb
mov
add
adc
xchg
add
lds
push
pop
frstor
loopne
adc
or
data16
mov
lock
pop
int3
or
push
movsl
fsubs
push
lahf
dec
lds
mov
fs
test
cs
bound
push
imul
scas
mov
ret
arpl
aaa
cmp
aam
orb
pop
sub
inc
insl
push
pop
fwait
int
int3
push
add
mov
neg
xchg
into
in
ret
bound
sub
je
add
stc
pop
adc
insb
jb
jge
aas
shrl
mov
pop
repz
mov
xlat
adc
je
movsb
popf
add
push
fs
and
add
xorl
loopne
push
mov
iret
jl
das
pop
and
faddl
mov
shl
jp
xchg
sbb
sub
mov
xchg
xchg
sahf
imul
aam
and
ljmp
pop
pop
xchg
dec
fdivp
xor
in
xchg
adc
ret
cwtl
mov
xchg
sbb
mov
xchg
mov
pop
pop
sub
shll
cmpsl
adc
xchg
adc
cmp
dec
add
push
sub
fcomp
push
hlt
pop
inc
ljmp
or
in
dec
data16
push
ret
mov
adc
dec
data16
fstl
dec
pop
xchg
xor
xchg
inc
xchg
mov
xchg
dec
sbb
dec
mov
xchg
out
dec
push
mov
pop
aam
fdivs
jl
fcmovnbe
mov
xchg
rcl
pusha
dec
adc
push
jbe
or
push
push
push
pusha
add
or
xchg
into
xchg
xchg
xchg
lods
push
jne
mov
xor
ljmp
adc
fmuls
es
aaa
movsb
jne
ret
xchg
xor
mov
arpl
stos
mov
loop
push
rol
mov
repz
loop
test
xchg
xchg
orb
mov
rorl
and
hlt
mov
lods
dec
aad
and
loop
sub
mov
test
in
xchg
repnz
test
push
data16
out
inc
fldcw
fcoms
jecxz
mov
push
rclb
xor
push
repnz
mov
push
clc
ret
lock
sub
adcl
push
movsb
dec
push
xchg
aad
xlat
loop
push
sbb
push
aaa
pop
movsb
ss
call
push
xchg
mov
xchg
or
xchg
xorb
mov
mov
adc
ja
mov
repnz
pop
mov
cmp
pop
fsubs
cmc
pop
sub
push
jbe
jge
sbb
xchg
cwtl
andb
mov
push
xlat
mov
mov
fsubr
int
in
xchg
lea
add
xchg
push
xchg
rcll
pop
aad
mov
xchg
les
sbb
not
sub
mov
fs
outsl
adc
rorl
push
adc
mov
push
repz
notl
push
popf
add
mov
pop
rcll
mov
push
das
mov
or
dec
lea
inc
ret
jp
adc
dec
sbb
cwtl
push
mov
outsb
xor
pop
adc
xor
pop
test
movsb
cmpsb
rorl
les
inc
push
int
mov
pushf
jno
fs
aaa
insb
mov
adc
mov
pop
mov
sub
cwtl
push
inc
inc
stos
sahf
and
push
in
cwtl
hlt
mov
mov
inc
sub
icebp
mov
push
mov
in
fdiv
add
inc
jbe
dec
ja
mov
popf
jg
sub
mov
xchg
sbb
mov
aaa
icebp
rorb
cltd
and
mov
test
cmp
jae
shl
cs
lock
or
popf
mov
adc
sti
psubusb
and
repnz
dec
lret
xchg
into
lret
xchg
push
call
ja
lahf
push
lods
jl
std
and
shl
push
rcrb
lret
adc
andl
adc
loope
cld
test
cmp
sub
mov
fcoms
hlt
xor
lds
iret
int
push
stc
mov
adc
std
fwait
aad
jecxz
outsl
aad
in
shll
xchg
fwait
loopne
pop
mov
ret
push
out
bound
push
sahf
add
mov
mov
xchg
mov
int
pop
test
fistpll
lcall
std
in
out
popf
aad
push
adc
ljmp
sbb
push
cs
outsb
push
sahf
iret
sahf
pop
or
out
pop
in
data16
lret
mov
stos
pop
aad
mov
push
and
mov
inc
daa
xlat
popa
sar
fcomps
ficoms
push
fiaddl
fdivr
add
push
iret
aam
test
lea
imul
aas
xchg
dec
jns
pop
es
xchg
shrb
es
mov
dec
jle
add
mov
or
or
push
int3
stos
test
lds
xor
mov
xor
dec
loopne
pop
lods
xor
xchg
arpl
fistps
pop
xor
fstps
adc
mov
mov
in
loop
adc
and
adc
repz
imul
subl
mov
xchg
inc
movsl
testb
jb
js
in
fdiv
stos
out
xchg
sarl
cmpsb
into
enter
push
push
iret
sbb
cmp
dec
js
lds
imul
mov
aad
inc
stos
cmc
ja
or
pop
xchg
stos
xchg
push
rcr
xchg
subb
lahf
repz
xchg
xorb
fcompl
aaa
pop
enter
mov
xchg
dec
lcall
mov
pop
dec
mov
loop
add
aaa
ret
xchg
xchg
cmp
or
jle
lret
cmp
rcrb
out
out
cmp
aad
pushf
mov
cmp
rcr
test
aad
mov
rol
mov
dec
pushf
loope
imul
lret
jg
out
into
dec
push
div
xlat
lret
xor
shrb
fidivrl
push
shll
xchg
aad
jne
lock
cmp
popf
mov
loope
cmc
dec
mov
lret
ror
idivb
add
pop
adc
jge
faddl
pop
imul
push
mov
push
push
je
mov
call
dec
divb
push
stos
push
test
mov
decb
xchg
xchg
pop
cmpsb
xchg
jae
xchg
stos
mov
int
mov
call
dec
push
jae
gs
xor
iret
inc
xlat
jmp
ror
push
pop
test
decb
xchg
es
testb
mov
cmp
outsl
dec
faddl
push
push
in
jbe
pop
sbb
or
out
push
or
push
mov
adc
or
mov
mov
data16
push
add
ficoms
rcrl
mov
and
test
adc
adc
mov
push
test
adc
xchg
push
fstl
int
add
or
xor
sub
adc
adc
int3
aaa
rol
lods
dec
ja
adc
adc
xlat
lds
push
lds
adc
adc
into
lds
int
dec
mov
push
adc
leave
inc
dec
dec
sub
adc
adc
fcoms
dec
adc
test
dec
push
vmovsd
ja
rorb
iret
adc
repnz
stos
lret
ja
adc
push
int3
fcompl
jne
int3
rcll
xlat
dec
dec
aam
mov
rcl
adc
adc
iret
pop
dec
or
dec
ror
adc
adc
xchg
int3
cmc
push
rcll
jle
xchg
rcl
push
ss
shll
xchg
dec
xchg
adc
fcoml
xchg
xlat
stc
ja
mov
iret
loope
push
dec
jle
xchg
cwtl
aad
push
dec
xchg
repz
push
mov
add
pop
cwtl
pop
mov
ret
dec
aaa
jecxz
xchg
push
dec
shlb
iret
adc
dec
add
push
rclb
leave
lret
in
push
jecxz
xlat
add
sbb
movsb
push
mov
rcrl
dec
jb
dec
dec
lock
or
iret
ror
adc
adc
aad
push
jo
add
xchg
push
dec
push
adc
shlb
add
xchg
push
push
mov
arpl
test
xchg
dec
lock
lret
and
ficoms
pop
stos
xor
adc
in
ja
add
dec
iret
rcll
lret
int
repz
sti
push
inc
arpl
push
in
gs
ds
dec
dec
aad
rcrl
push
nop
negb
inc
push
rclb
dec
lock
iret
repnz
lods
dec
out
sarl
push
pop
push
int
xchg
mov
xchg
ficoms
pop
mov
fst
push
jle
adc
push
adc
dec
ror
rclb
mov
pop
dec
inc
rcl
adc
adc
lret
dec
daa
push
push
push
movsl
stos
adc
adc
shlb
ror
adc
adc
int
or
mov
adc
aad
ret
push
mov
mov
jne
xchg
push
push
jne
aam
push
mov
into
adc
push
ss
lret
xchg
dec
xchg
adc
stos
test
ficoms
pop
xchg
adc
lods
shrl
std
ja
dec
push
rcll
push
adc
and
xchg
aad
dec
mov
xchg
adc
lret
test
rcll
jle
xchg
jecxz
insl
shl
adc
adc
rcll
adc
scas
push
out
push
fisttpll
adc
cmp
lods
fadds
rcl
adc
shl
int3
call
jne
xlat
cmp
adc
mov
adc
push
shrb
or
adc
and
inc
ror
lret
push
push
mov
push
adc
push
mov
push
mov
mov
or
adc
adc
int
xor
leave
xchg
push
push
fcmove
addr16
dec
enter
mov
adc
aad
jl
aam
adc
adc
lret
ja
rcll
cltd
xchg
lret
mov
int3
dec
pop
iret
in
sbb
mov
dec
aad
push
xchg
adc
in
xchg
cwtl
sbb
mov
push
ror
adc
adc
rorl
cltd
xchg
rorl
dec
cltd
xchg
pop
pop
fxch
dec
adc
dec
sub
dec
cltd
cs
shrb
out
push
scas
push
out
rcr
adc
push
shrl
pop
imul
int
sub
rcr
xchg
dec
xchg
adc
stos
clc
pop
fcoml
adc
rorl
inc
clc
inc
dec
dec
into
push
push
adc
push
repz
clc
aam
icebp
leave
ror
adc
adc
push
or
push
or
adc
nop
adc
push
adc
dec
shll
into
adc
push
mov
test
lret
adc
adc
mov
aad
xchg
ficoms
fcoms
ja
ret
sarb
leave
mov
push
push
dec
or
xchg
push
adc
xlat
xor
loope
inc
adc
adc
push
push
push
lock
push
mov
push
mov
dec
jge
fst
dec
jle
adc
dec
adc
dec
push
push
int3
push
dec
push
mov
ror
push
adc
cmp
dec
pop
pop
xlat
xchg
adc
dec
int3
add
shl
adc
adc
and
dec
rorl
ss
rclb
call
dec
adc
dec
dec
adc
push
dec
in
push
fdivl
push
aad
fmull
push
xlat
or
dec
int
push
push
mov
or
push
dec
jae
dec
leave
adc
adc
ficompl
push
push
cwtl
arpl
dec
jb
dec
roll
daa
enter
adc
test
fsubrs
xor
add
leave
adc
adc
push
bound
test
adc
adc
fistl
mov
jecxz
pop
jb
dec
dec
sub
adc
adc
push
lret
dec
dec
adc
adc
lret
lahf
jge
aad
aaa
push
ror
push
js
loop
test
cmp
push
xorb
into
adc
mov
lret
adc
or
iret
xchg
aad
call
jle
adc
push
adc
aad
adc
xlat
testb
stos
cwtl
nop
push
pop
int
push
rclb
iret
lock
xchg
orb
push
adc
xor
dec
pop
jge
push
pop
xlat
xchg
icebp
rclb
adc
sbb
test
xchg
scas
lret
adc
push
dec
fucom
xchg
dec
push
push
adc
mov
leave
repnz
mov
lret
rol
push
lods
or
fmuls
push
mov
push
out
int
cmp
bound
ss
xlat
popa
fadds
enter
xchg
shlb
xchg
push
pop
dec
adc
aad
into
out
dec
out
push
mov
dec
push
fisubs
jecxz
xlat
mov
rcr
inc
dec
rcrb
inc
dec
push
pop
mov
inc
and
push
push
dec
mov
push
aad
xlat
dec
inc
dec
int3
or
mov
sub
dec
aad
inc
or
sbb
cmpsl
or
push
pop
movl
push
fcoms
cmp
mov
into
sahf
sbb
push
int3
push
mov
push
push
test
into
fstl
shl
pop
lods
shlb
adc
push
push
imul
rcrb
addr16
cmp
sbb
push
pop
negb
inc
dec
fcoms
jge
icebp
rclb
orb
insl
mov
test
into
fldl
push
daa
dec
shrb
push
enter
dec
jp
cltd
mov
cmp
pop
mov
push
in
pop
mov
or
cs
int
push
sub
pop
popa
dec
inc
dec
shll
inc
dec
rcll
negl
sahf
or
mov
sbb
mov
lds
dec
popa
test
adc
sub
fmull
mov
fcompl
dec
int
dec
aad
dec
addr16
pop
clc
into
stos
daa
mov
push
inc
mov
mov
mov
push
jecxz
xor
rcl
out
inc
push
enter
sbb
jecxz
xor
dec
iret
cld
dec
ds
pop
icebp
dec
xlat
scas
leave
addr16
xchg
push
mov
dec
mov
neg
dec
stos
push
push
pop
ss
dec
jecxz
xor
rcl
push
add
rorb
pop
fst
dec
xchg
fstl
int
es
mov
lock
sbb
or
xchg
stc
lock
adc
dec
lock
clc
movb
rcrl
mov
push
stos
fadds
and
xlat
push
fdivrs
push
dec
addr16
rorb
iret
pop
jmp
insl
clc
push
cli
rcrl
shl
dec
push
scas
int
lret
xlat
in
aaa
dec
iret
outsb
ret
push
imul
test
arpl
xchg
dec
lock
clc
notb
cli
in
int3
cli
xchg
pop
sbb
rcrb
data16
pop
fst
shl
push
shrb
push
fnsave
xchg
push
push
sub
and
mov
pop
insl
int
push
inc
jecxz
inc
pop
enter
xchg
push
push
aad
pop
lret
inc
pop
sbb
aad
mov
rcr
ret
dec
xchg
mov
imul
push
stos
iret
pop
dec
dec
xchg
mov
pop
push
pop
xchg
fmuls
les
dec
xchg
dec
int
fildl
aad
jo
dec
xchg
or
int
push
dec
int
push
cmpsl
inc
push
fdivs
push
shl
cmpsl
dec
xchg
push
mov
shlb
dec
push
rcr
and
outsb
adc
dec
mov
push
mov
mov
push
dec
or
rcr
hlt
shll
iret
pop
xchg
dec
lret
ja
sbb
mov
cmp
in
xchg
fldt
mov
rcrl
rorl
inc
cli
pop
dec
cli
dec
cli
ja
jp
enter
push
xchg
adcl
push
lret
ja
push
xchg
rolb
push
fadds
imul
xchg
push
inc
push
lods
push
pop
pop
rclb
mov
dec
insb
xchg
sbb
sbb
icebp
xchg
leave
xchg
dec
mov
xchg
div
push
fiaddl
aam
rcr
push
dec
ret
or
mov
sbb
test
rcr
push
dec
mov
jp
push
stc
xchg
pop
jns
divb
sbb
push
rcll
dec
lods
iret
pop
rorl
pop
int
sbb
pop
enter
xchg
shll
xchg
push
arpl
xchg
shlb
movsl
push
dec
test
push
mov
adc
mov
push
mov
rclb
nop
aam
and
push
mov
dec
sbb
mov
dec
pop
push
int
dec
outsb
rcl
push
test
lret
leave
adc
xlat
popa
int3
inc
pop
in
ret
xchg
shrb
xlat
pop
jmp
ret
xlat
rorl
push
jmp
xlat
adc
test
lods
loope
dec
xlat
jmp
lret
imul
adc
xchg
push
call
or
mov
addr16
call
dec
xchg
mov
dec
fmuls
les
dec
dec
xchg
fistl
fistl
fstpt
aad
mov
inc
pop
scas
mov
sbb
push
cmpsb
jbe
nop
xchg
mov
sbb
in
jmp
lds
mov
ljmp
mov
pop
cmp
gs
mov
pop
mov
xchg
sbb
push
movsl
fnsave
jne
mov
dec
shl
and
lret
dec
into
xlat
popa
int3
xchg
pop
sbb
inc
mov
mov
int3
pop
out
cmc
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
xlat
push
ret
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
push
jmp
pop
adc
je
xor
pop
dec
lods
arpl
push
add
mov
push
jne
popa
fsub
rcll
pop
and
test
int
mov
pop
gs
add
sarl
mov
dec
dec
fnstsw
sahf
stos
rclb
jecxz
mov
add
ror
push
push
dec
sar
push
ds
in
dec
int
push
sbb
lock
and
adc
pop
push
dec
inc
push
enter
inc
pop
enter
and
jne
dec
stos
shlb
add
push
fildl
aam
dec
push
shll
int3
iret
loop
mov
dec
into
bound
add
xor
outsb
push
inc
mov
push
sbb
push
inc
repnz
add
push
loope
push
popa
fistl
fcomi
dec
mov
in
sub
or
xchg
jns
jle
in
sbb
jle
in
fisubs
int
cmpsb
repnz
push
lods
out
lods
out
lods
out
lods
mov
fists
mov
jecxz
push
xor
shll
or
push
xor
into
repnz
mov
gs
loopne
dec
nop
fisttpl
dec
leave
or
mov
pop
push
adc
inc
push
mov
out
lods
out
lods
out
lods
jno
jecxz
inc
push
rolb
push
dec
into
pop
popa
aam
stos
rclb
push
ret
mov
jae
mov
fildl
leave
mov
dec
addr16
mov
pop
push
pushf
xchg
pop
sbb
int3
push
mov
in
pop
add
dec
cli
call
rclb
shl
push
add
cs
xchg
int
push
enter
mov
enter
dec
nopl
xlat
sub
rcl
aam
int3
outsb
add
xchg
dec
fcompl
inc
push
pop
aad
les
dec
push
fdivrs
or
sarb
rcrb
dec
inc
xlat
push
test
into
or
test
shrb
leave
stos
push
pop
pop
sbb
arpl
or
xor
repnz
scas
xlat
pop
out
push
test
into
out
push
shll
popa
adc
xchg
xor
repnz
int
pop
enter
iret
xchg
shlb
xchg
mov
push
inc
mov
inc
pop
lret
push
dec
xor
push
int3
push
sbb
mov
pop
pop
sbb
in
xchg
push
fcoml
fs
insl
enter
icebp
rcrl
adc
out
dec
inc
push
sub
test
fnstenv
int
adc
push
adc
stos
roll
aad
inc
ror
out
insl
fstl
add
jecxz
xor
sub
lret
or
mov
imul
inc
push
push
repnz
scas
xlat
inc
lea
loope
shrl
ljmp
push
je
push
xchg
fcmovnb
push
cs
push
jmp
inc
pop
push
out
adcb
push
push
leave
xchg
sbb
popa
lret
xchg
push
cmp
mulb
cli
in
dec
xlat
and
repnz
shll
push
stos
shll
into
stos
int
mov
sbb
or
call
dec
and
mov
aam
inc
icebp
ret
cltd
in
dec
leave
lock
dec
mov
mov
dec
pop
adc
push
sub
loope
add
push
or
pop
fdivs
dec
icebp
int
scas
rcrb
push
and
push
sbb
dec
leave
shlb
xchg
inc
add
enter
inc
pop
enter
movsl
push
roll
push
dec
mov
or
in
adc
aad
aad
orb
adc
push
stos
fs
pop
aam
xchg
aad
and
add
push
and
and
dec
test
mov
push
dec
outsb
mov
stos
shll
out
jb
lock
lods
and
push
mov
in
dec
int
sbb
push
icebp
inc
pop
adcb
dec
call
shl
inc
push
dec
outsb
push
leave
mov
aam
or
push
push
add
push
insl
enter
xor
push
repnz
scas
rcrl
push
or
dec
arpl
adc
sbb
cwtl
push
leave
sahf
or
mov
insl
lret
out
aad
push
pop
fstpl
jbe
shll
xchg
push
arpl
xchg
shlb
xchg
push
pop
dec
mov
or
nop
into
mov
mov
mov
ret
popa
imul
loope
popa
inc
sub
cmp
adc
cmp
cmp
insl
fmul
jne
test
aam
lods
pop
dec
mov
cli
cmpsb
pop
loope
insl
push
enter
jne
sub
int
addr16
lret
adc
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
out
lods
fisttps
lods
xchg
lret
add
dec
cli
fisttpl
mov
push
shl
lods
out
lods
out
fucom
call
ja
enter
sbb
pop
clc
mov
sbb
push
and
pop
mov
pop
cmp
loopne
cwtl
mov
pop
js
stos
sbb
mov
cs
inc
je
frstor
insl
sbb
lds
call
cli
cmpsl
dec
cli
inc
dec
cli
popa
dec
cli
add
cli
and
mov
cli
jge
cli
mov
cli
pop
dec
cli
stc
dec
cli
sbb
cli
mov
out
lods
out
lods
out
lods
out
lods
out
adc
repnz
and
inc
fistl
fistl
fistl
fistl
fcmovnb
dec
cs
shr
mov
pop
jns
arpl
movsl
mov
dec
pop
pop
sbb
lods
div
mov
jecxz
inc
push
fdiv
les
mov
shlb
pop
fstl
into
fisttpll
sar
push
jno
ret
xlat
imul
fdivr
shrb
movsl
push
sahf
or
shl
lds
xchg
rcll
mov
mov
mov
jne
enter
jne
enter
jne
enter
jne
enter
jne
enter
push
push
dec
inc
rclb
clc
adc
out
push
push
xchg
adc
adc
mov
dec
push
mov
nop
push
push
ret
nop
dec
push
jae
dec
push
pop
aam
iret
sbbl
jp
leave
push
jp
mov
fstl
lret
push
push
aad
push
aam
in
popa
jle
lds
dec
dec
rcl
popa
xlat
xchg
push
cs
push
sbb
int
or
mov
addr16
pop
dec
dec
lock
push
push
adc
mov
sbb
push
fistps
mov
cli
pop
push
test
int3
dec
xlat
in
add
push
xor
sbb
shll
rorb
fdivs
inc
addr16
xor
out
push
xlat
dec
dec
imul
dec
test
into
int
fistpl
inc
dec
rorb
add
push
dec
push
or
aad
int3
push
and
cwtl
push
rcrb
push
pop
pop
dec
xlat
jmp
dec
imul
les
and
pusha
mov
aad
scas
andl
rclb
push
shrb
dec
xlat
jmp
dec
pop
jmp
cmp
sbb
xchg
ds
shl
adc
fcoms
dec
push
push
popa
roll
enter
xchg
dec
arpl
or
iret
adc
dec
fldt
rorb
push
ror
adc
dec
scas
dec
call
aad
xchg
push
ljmp
fucomp
push
push
scas
and
xchg
mov
leave
pop
into
dec
or
inc
movb
gs
jno
mov
push
adc
out
push
and
push
sub
arpl
xchg
rorb
aad
sbb
push
push
dec
hlt
dec
or
stos
aam
aad
sub
int
in
hlt
jle
aad
xlat
push
arpl
test
fdivr
mov
xchg
int3
leave
ja
sbb
mov
leave
add
mov
into
cs
push
icebp
call
adc
rcrl
mov
push
or
dec
or
js
add
fldl
aam
mov
shrl
and
cmp
lret
add
into
pop
mov
enter
rcll
mov
outsb
fmul
aad
fs
in
lds
fs
adc
mov
iret
mov
popa
leave
xchg
shlb
xchg
dec
push
aad
in
xlat
outsb
adc
rcrl
adc
pop
xlat
or
imul
rolb
enter
xlat
scas
dec
pop
dec
dec
or
adc
je
aad
jle
cmc
mov
enter
and
ror
rcr
push
jp
lds
repnz
scas
into
addr16
lods
arpl
dec
xlat
jmp
dec
imul
inc
sahf
sbb
mov
dec
pop
push
lret
xchg
dec
and
rclb
xor
iret
inc
dec
rorl
push
dec
imul
addr16
inc
aam
aad
dec
shlb
pop
fstl
lret
ss
pop
dec
test
mov
movmskps
lret
aam
sub
xor
iret
inc
xchg
push
outsb
adc
aas
or
push
jecxz
dec
xchg
ja
dec
add
dec
mov
orl
and
nop
sbb
jns
dec
into
repnz
push
inc
or
in
push
and
movsb
xchg
call
adc
mov
dec
lret
or
out
push
je
int
dec
push
dec
mov
into
fistps
jg
aad
push
lcall
dec
push
pop
sbb
xchg
push
mov
mov
push
add
pop
jecxz
insl
call
mov
shll
out
lods
out
lods
out
lods
repz
add
dec
cli
fisttpll
jge
cli
mov
cli
pop
dec
cli
stc
ds
aam
test
dec
lods
orl
out
lods
xchg
dec
push
clc
popf
sahf
push
and
cwtl
pop
int
or
mov
sbb
dec
into
dec
or
push
popa
lret
inc
sub
dec
or
rorl
dec
rorl
dec
dec
sbb
inc
xlat
shll
push
repnz
scas
fadds
push
push
imul
sbb
xchg
push
enter
xchg
xlat
dec
decb
xchg
push
fst
dec
adc
int3
push
adc
test
repnz
push
xor
rorb
xlat
popa
fcoms
push
push
adc
push
fstl
rorl
pop
mov
enter
dec
mov
fisttpll
push
push
imul
mov
jecxz
hlt
push
aad
fistl
fcomp
je
enter
xchg
ret
arpl
xchg
ret
arpl
xchg
ret
arpl
xchg
ret
arpl
enter
pop
jmp
dec
addr16
or
dec
push
dec
or
into
fcmovnb
nop
fadds
pop
lret
lods
lea
adc
push
mov
push
inc
in
xlat
repnz
stos
into
addr16
movsl
push
push
test
rcr
push
mov
xchg
mov
pop
in
lods
add
push
lret
adc
push
add
push
dec
push
adc
shlb
dec
push
repnz
push
test
push
fst
mov
dec
and
xchg
push
repnz
iret
jb
fstl
leave
and
dec
aad
mov
lret
push
shll
enter
sbb
push
mov
fs
cmc
into
repz
dec
fildl
add
sahf
mov
push
loop
repnz
int3
dec
imul
insl
dec
enter
int
mov
push
pop
pop
or
arpl
int3
pop
popa
int
mov
xor
dec
pop
int
stos
int3
pop
fst
dec
mov
push
push
mov
aam
out
sbb
enter
mov
xchg
mov
push
and
mov
push
icebp
dec
shrl
iret
stos
lret
insl
leave
repnz
fcmovnbe
inc
push
inc
arpl
dec
pop
jmp
cs
adc
cmp
jmp
push
adc
test
lret
sub
push
popa
leave
inc
dec
lret
or
jecxz
xchg
jbe
push
xor
repnz
xchg
dec
repnz
enter
xchg
inc
outsb
and
push
xchg
jecxz
push
int
add
test
lret
dec
jmp
adc
movsb
jecxz
inc
push
fsubs
adc
icebp
pop
shrb
stos
shll
xchg
mov
shrb
inc
enter
mov
xchg
pop
std
lret
pushf
iret
fisttps
clc
push
xchg
int3
xor
int3
dec
or
dec
dec
je
push
push
cs
shrb
mov
xchg
push
fnstenv
add
push
enter
fcoms
nop
shrl
rol
xchg
push
sbb
fstl
into
outsb
rorl
jbe
mov
inc
pop
push
out
adc
xlat
mov
stc
or
lods
or
fiaddl
push
insl
push
mov
inc
int
rolb
aam
push
add
enter
dec
adc
dec
cs
push
adc
mov
rclb
ror
push
enter
rorl
push
lods
not
xchg
push
push
in
pop
adc
or
mov
sbb
push
or
mov
addr16
sbb
push
cmpsb
fldl
push
aad
rcl
dec
sbb
and
in
shrl
ret
shrb
push
xlat
jmp
push
nop
dec
push
lds
in
shlb
lret
xlat
popa
dec
inc
sub
roll
pop
add
enter
inc
pop
push
cmp
ror
arpl
pop
sub
iret
sbb
cwtl
push
push
sahf
sbb
cwtl
pop
rcrb
dec
inc
dec
fmuls
push
lret
fucom
jne
fsubrp
popa
shlb
in
push
lds
mov
leave
ss
rcr
mov
push
xchg
push
roll
lret
push
nop
int
pop
iret
fisttpll
leave
outsb
and
lret
addr16
inc
xlat
enter
ret
mov
call
xlat
ret
add
dec
pop
nop
shl
push
rcll
aam
int
lret
into
push
test
ror
push
sti
push
mov
stos
roll
dec
dec
arpl
inc
or
push
iret
sahf
or
mov
jne
int3
stos
xchg
addr16
dec
dec
outsb
and
mov
jge
dec
push
fmuls
lods
add
scas
rcrl
nop
es
rol
mov
mov
fadds
inc
xchg
fmuls
push
or
andl
in
test
dec
or
push
sbb
inc
pop
sbb
cld
int3
ds
push
icebp
push
xlat
scas
dec
in
pop
repnz
fistl
arpl
xchg
jne
push
stos
push
jne
shrl
stos
shll
lret
jne
dec
stos
dec
jne
aad
jecxz
xchg
push
arpl
xchg
aam
or
xchg
iret
arpl
jmp
jae
dec
addr16
fmull
push
aad
stos
lret
lcall
sbb
dec
out
sbb
cwtl
loopne
push
cmp
push
push
into
dec
jle
or
push
jecxz
push
test
xchg
push
lret
addl
inc
push
mov
stos
push
pop
out
lods
test
dec
push
pop
xor
enter
repz
aad
dec
mov
dec
test
xchg
int3
sbb
sub
or
xchg
push
repnz
push
ret
add
dec
or
rcl
cs
or
sub
pop
mov
pop
push
xchg
xchg
or
leave
int3
or
mov
movsl
or
adc
ds
int
push
in
loope
sub
or
fs
adc
pop
pop
dec
push
add
rolb
push
arpl
dec
cwtl
arpl
inc
dec
rclb
mov
sahf
or
cmpsl
stos
pop
fstl
int
es
mov
shlb
psubb
fstpl
dec
outsb
adc
mov
or
dec
push
xlat
popa
mov
enter
push
sbb
adc
shl
xchg
cwtl
push
or
adc
lret
test
into
lods
push
outsb
mov
push
pop
pop
aad
sub
outsb
arpl
push
outsb
mov
xchg
cmp
into
dec
insb
or
rcrb
xlat
fstl
leave
xor
sub
pop
popa
dec
inc
dec
or
stos
jle
adc
pop
pop
cs
ds
enter
xchg
push
outsb
adc
push
sahf
sbb
cwtl
pop
leave
sahf
or
xchg
dec
sahf
or
cmpsl
fmul
inc
dec
shlb
inc
dec
packsswb
inc
pop
mov
icebp
dec
pop
scas
or
fsubs
mov
jmp
insl
mov
fsubp
dec
nop
ror
push
aad
sahf
push
xor
cs
add
pop
jne
sahf
push
and
cwtl
pop
rcrl
sahf
or
xchg
lret
adc
dec
sahf
or
xchg
aad
lods
lods
mov
push
stos
shlb
aam
pcmpeqw
dec
stos
dec
jne
iret
stos
mov
dec
stos
lret
jb
lret
cmp
jle
inc
mov
enter
or
fstl
out
fistl
lret
in
into
mov
sbb
pop
push
frstor
or
jne
pop
adc
sub
push
pop
dec
mov
enter
xchg
fistpl
or
subl
push
xlat
fildl
push
scas
or
sbb
sbb
inc
pop
sbb
sbb
cwtl
xlat
leave
jo
ret
dec
jle
or
cmp
in
je
aad
jg
sarl
jecxz
dec
xlat
jmp
fsubp
xchg
xchg
aad
fistpl
dec
push
lods
test
push
and
fstl
lret
test
adc
cmp
push
std
add
inc
leave
push
push
xchg
sbb
pop
sub
and
mov
mov
dec
mov
or
ror
sbb
inc
pop
sbb
push
sbb
mov
ljmp
aad
mov
pop
dec
or
dec
pop
push
int
repnz
lods
dec
addr16
adc
push
icebp
int
mov
enter
push
js
rcl
rclb
dec
push
outsb
and
fcompl
dec
xchg
rclb
and
aam
push
inc
push
push
test
push
fnsave
dec
mov
pop
mov
fdiv
cld
sub
fistpl
dec
sub
dec
mov
into
lods
test
stos
mov
loope
and
mov
dec
test
mov
inc
jl
cmp
inc
push
cmp
cmp
fists
movsb
push
dec
jae
push
inc
pop
or
add
or
mov
je
add
pop
fucom
dec
xlat
xlat
popa
xchg
inc
pop
enter
xchg
into
arpl
xchg
push
arpl
enter
xchg
pop
dec
inc
sub
dec
or
rcll
sbb
dec
mov
stos
into
pop
dec
push
and
inc
dec
push
or
push
leave
fucom
xchg
int3
addb
es
bnd
insl
jge
aad
add
jae
daa
ror
cmp
mov
xchg
repnz
dec
and
inc
or
mov
sub
jne
enter
push
rclb
adc
into
mov
shl
dec
inc
add
adc
aad
orl
pop
clc
rcl
push
int3
jge
push
lret
dec
push
shr
push
icebp
sbb
dec
rcll
mov
fcmovnbe
xor
loop
xchg
rcrb
pop
dec
iret
arpl
inc
dec
or
loopne
or
pop
popa
lret
adc
popa
aam
or
into
mov
xlat
dec
int
and
out
sbb
push
lret
movb
dec
icebp
add
pop
push
in
out
cmp
shlb
loop
mov
dec
sub
push
ror
mov
shll
jns
adc
cmp
mov
pop
push
mov
dec
mov
je
add
push
mov
jne
fisubrs
insl
call
push
fists
insl
enter
jns
fnstsw
sub
and
mov
cmp
lret
push
or
je
push
push
insl
rorb
adc
mov
pop
aad
add
add
push
pop
adc
shrl
adc
je
dec
fimuls
inc
pop
call
push
mov
test
cmpsl
cmp
adc
pop
and
fildl
push
push
xor
int
push
push
or
xchg
dec
outsb
ret
call
cmc
addb
rcl
repnz
rol
dec
push
mov
iret
fsubrl
loop
xlat
push
dec
lock
ret
iret
pop
jmp
add
call
popf
and
add
aad
push
push
add
shrl
push
arpl
add
fdivrp
popf
sti
fistpll
push
out
mov
inc
gs
inc
sbb
mov
outsb
out
push
mov
ret
dec
push
inc
dec
jnp
lock
aaa
hlt
inc
inc
jecxz
dec
cltd
pop
pushf
stc
lods
stos
xor
mov
cwtl
rolb
mov
pop
repnz
cmp
mov
ss
in
xchg
jmp
les
dec
mov
xor
rcrl
jge
or
in
gs
inc
test
daa
insl
movb
addb
xchg
xchg
mov
arpl
cmp
popf
xor
mov
inc
inc
pop
jns
ds
mov
outsb
and
dec
pop
test
and
popa
ret
mov
ss
cmp
xchg
push
lcall
jp
in
sbb
xor
adc
test
push
jbe
aam
push
and
inc
jecxz
stos
sub
or
lret
hlt
je
lahf
fdivs
inc
jbe
cmc
adc
sub
aam
xlat
xchg
mov
dec
popa
cli
sahf
mov
dec
jae
mov
pop
loope
loopne
and
pop
jp
rcrb
cld
pop
addr16
xor
pop
shll
movb
lahf
cmc
movsl
dec
cmp
jge
push
aaa
push
jbe
stos
call
dec
ss
sbb
rcr
jno
xor
sub
cmc
push
sub
repnz
std
loopne
adc
aad
adc
push
push
fstl
mov
mov
rorw
dec
data16
call
push
test
hlt
ss
data16
negl
in
fidivl
data16
mov
js
jne
jbe
mov
lods
dec
test
mov
pop
push
mov
sbb
mov
push
mov
ror
stos
pop
or
sub
ljmp
adc
pop
aam
adc
xor
fst
mov
sarb
pop
mov
das
fnsave
adc
outsb
push
pop
push
mov
sbb
rcr
adc
movsl
push
hlt
mov
push
xchg
lcall
divw
xor
jae
int
shr
dec
mov
mov
ljmp
or
jno
rcrb
xlat
push
fcomp
aad
dec
in
dec
fimuls
sub
push
mov
lods
mov
pop
pop
mov
mov
push
int3
fucomp
mov
pop
dec
mov
sbb
push
je
mov
jb
ja
pop
xchg
mov
js
aad
ljmp
mov
sbb
mov
pop
divl
xchg
dec
dec
sbb
in
mov
pop
mov
sbb
int3
fisttpll
aad
mov
ja
adc
dec
fisttpll
push
hlt
jae
mov
out
or
int3
dec
pop
dec
in
movzbl
sbb
push
mov
mov
aam
adc
pop
lods
in
out
push
dec
fst
mov
pop
xchg
mov
sbb
push
push
fstl
aad
pop
mov
pop
lgs
dec
push
dec
fstl
mov
xchg
ja
xlat
mov
sbb
xchg
insb
pop
lods
dec
dec
fisttpll
rorb
push
sub
adc
xchg
loopne
adc
fdivp
pop
in
lds
fldl
adc
sbb
push
pop
fidivrs
sbb
lret
outsb
adc
dec
xchg
mov
add
ret
xlat
mov
dec
jbe
fidivs
mov
jo
notb
in
push
xchg
lcall
jmp
mov
pop
push
mov
sbb
xchg
fstpl
dec
xchg
lahf
arpl
pop
iret
mov
sbb
repz
adc
adc
mov
fisttpll
mov
pop
into
mov
sbb
push
xor
xchg
mov
mov
push
dec
fucomp
mov
dec
lret
pop
data16
dec
fnsave
mov
pop
xor
xlat
fstp
mov
sarb
sub
imul
adc
push
pop
jb
mov
pop
push
pop
fstl
das
adc
lods
pop
leave
mov
or
in
frstor
mov
pop
xchg
mov
sbb
aad
pop
mov
pop
outsl
mov
sbb
push
mov
pop
mov
repnz
push
clc
fstl
dec
adc
sbb
push
adc
or
push
dec
mov
or
mov
mov
sbb
cmp
xchg
mov
pop
push
mov
sbb
push
das
fisttpll
mov
sarb
xchg
pop
pop
mov
sbb
push
xor
xchg
mov
int3
push
in
pop
dec
neg
mov
testl
mov
fcomp
adc
shll
fbld
jmpw
sbb
push
mov
or
mov
aaa
mov
sbb
push
dec
jmp
in
out
bound
das
stos
icebp
nop
data16
mov
addr16
and
es
adc
adc
adc
sub
lea
ds
cmp
daa
cmp
mov
jmp
add
scas
jp
or
pop
lret
in
leave
mov
clc
adc
adc
data16
fstl
sbb
shrb
mov
pop
lret
mov
ret
xchg
and
jl
nop
ss
rcll
loop
shll
push
mov
sub
sar
adc
lods
pop
rolb
fsubl
das
insb
fmull
mov
cmp
ret
jmp
out
pop
adc
sti
dec
rcrb
jl
pop
jo
mov
mov
push
rcll
pop
in
jmp
outsl
and
js
fstl
pop
mov
es
xchg
or
push
adc
dec
lret
push
bound
gs
cs
lret
insl
dec
cmp
fwait
lock
cli
push
lahf
popa
jle
push
jg
mov
mov
pop
push
bound
cmpsb
cwtl
scas
mov
cmc
loope
popf
lds
inc
xor
jb
ret
mov
js
dec
stc
nop
cmp
es
jg
pop
lret
xor
xlat
add
jl
cs
arpl
push
or
lods
enter
adc
or
adc
stos
dec
xchg
cmpsb
mov
xor
xor
hlt
fadds
dec
xor
jbe
aaa
and
push
int3
jne
pop
inc
ret
imul
mov
xchg
cmpsb
std
add
push
cmp
add
fiaddl
rol
mov
js
xlat
inc
scas
or
sub
jg
mov
lret
xchg
pop
or
mov
xchg
add
mov
test
jbe
pop
stos
ja
int
movsl
and
push
push
nop
loope
imul
xchg
sbb
lock
jne
fstpl
xchg
icebp
xlat
mov
das
out
xchg
xabort
nop
outsb
sub
mov
add
sbb
ljmp
shrb
ficoml
mov
loope
ljmp
insl
clc
imul
add
adc
xchg
xchg
adc
cltd
daa
pop
xchg
lods
cs
je
loopne
mov
xchg
rcl
mov
repz
mov
ficoml
fs
mov
push
cmova
xchg
popa
js
pop
es
pop
push
mov
xchg
loopne
daa
iret
xchg
inc
inc
nop
jmp
test
pop
in
in
xchg
pop
aaa
push
sti
mov
pop
xchg
test
in
pop
pop
mov
shl
out
enter
cmp
movsl
es
adc
aam
test
dec
mov
push
jae
dec
data16
push
je
aas
lods
lret
aad
adc
imul
test
lret
xchg
push
jmp
inc
cmpsb
fdivs
mov
test
out
gs
aam
pusha
addr16
and
jnp
movsl
enter
cmpsb
out
imul
mov
pop
mov
xchg
xor
dec
mov
repz
das
lcall
xlat
hlt
lret
xchg
pop
leave
mov
pusha
test
xchg
aam
fdiv
xchg
sub
cwtl
repnz
mov
pop
lahf
ja
and
or
push
cmp
fiadds
adc
icebp
lret
jbe
sbbb
fnstcw
sbb
mov
pop
push
mov
push
xchg
add
in
icebp
mov
lahf
mov
jb
andb
mov
lea
push
nop
xor
jbe
cmp
daa
add
add
gs
loope
mov
sub
into
pop
fcoms
filds
int3
xor
pop
rcr
arpl
les
push
mov
lods
sub
aam
add
pop
ss
pop
std
rcr
sbb
nop
aaa
cmpl
lea
or
cwtl
int
mov
mov
jbe
sbb
rclb
and
test
movsb
out
inc
adc
inc
mov
loope,pt
xchg
jle
lret
ja
es
inc
test
repz
mov
fldl
jge
insb
shr
test
xchg
in
push
xor
xlat
add
dec
in
lock
sbb
jmp
in
pop
push
js
das
inc
dec
adc
push
adc
leave
or
pop
nop
pushf
scas
outsl
or
into
jle
outsb
out
or
pop
popf
mov
push
rcr
ret
mov
lock
or
mov
xor
mov
daa
mov
out
cmpsl
iret
rcrl
lret
xor
jno
cltd
and
stc
dec
ds
call
jne
iret
cmpsl
mov
xlat
pushf
push
mov
mov
dec
mov
aam
xchg
dec
mov
out
jmp
bound
les
cmpsl
jnp
xchg
mov
outsb
mov
adc
stc
shrl
rol
repz
mov
mov
jne
dec
inc
cwtl
add
mov
sbb
xchg
scas
ret
xlat
std
fcoms
fcmovnbe
fildll
call
xchg
lcall
jno
repz
or
sbb
xor
mov
lcall
cmp
add
and
dec
push
fimuls
movsl
outsl
push
jno
inc
hlt
fsts
test
in
or
das
int
xchg
jecxz
mov
adc
xchg
jmp
pop
in
clc
arpl
into
cltd
enter
xchg
cmp
jbe
dec
mov
dec
aas
adc
outsl
lock
xchg
rol
dec
push
imul
mov
int3
outsl
push
push
pusha
jns
lret
scas
scas
xchg
sbb
and
jl
ficompl
adc
rcrl
enter
fs
cmpsl
rcrb
inc
and
je
dec
aaa
cs
cwtl
inc
pop
ss
in
mov
in
sti
shrl
mov
mov
into
pop
mov
cmp
add
repz
bound
int3
jl
cmpsl
loope
or
pop
adc
sbb
pop
xchg
dec
scas
sahf
mov
or
xchg
adc
clc
cmp
in
push
jae
arpl
add
test
ss
stc
leave
sbbb
sub
insl
dec
out
cmpsb
mov
cmp
pusha
or
mov
and
mov
pop
push
sahf
jbe
jecxz
inc
incl
jmp
sbb
inc
cmp
inc
or
aas
xor
ja
push
lret
js
mov
bound
jno
test
add
dec
lret
cwtl
mov
xchg
lret
and
icebp
xchg
std
scas
push
push
pop
sbb
arpl
xchg
sub
lock
push
pop
xlat
clc
gs
mov
lods
test
mov
loopne
dec
pop
jae
mov
push
pop
pop
xor
rorb
movsb
push
test
testb
pop
into
push
lcall
cmp
cmp
stos
sbb
test
lret
arpl
hlt
fs
mov
adc
pusha
pop
and
jbe
sbb
jmp
jle
sub
xchg
fsubs
shlb
xchg
and
lock
sub
fadds
add
xor
push
xchg
push
dec
loop
jecxz
int3
jns
clc
test
das
mov
sbb
rcr
pushf
cmp
repz
push
mov
fsubrs
mov
imul
push
imul
jge
inc
mov
dec
rorb
int3
movsl
jb
adc
pop
cmp
sarb
push
and
push
fcoms
insb
mov
aam
push
cmp
add
ljmp
pushl
sbb
shlb
sbb
enter
int3
fadd
push
pop
lret
jnp
xor
fs
test
das
xchg
mov
sbb
into
imulb
mov
rcll
lea
lock
lods
fisubrl
bound
into
cwtl
push
inc
pop
dec
dec
add
inc
push
pop
xchg
sbb
xor
mov
adc
das
nop
push
jl
dec
xchg
sub
push
mov
testb
leave
sbb
enter
jmp
aam
shr
icebp
lea
pop
sbb
mov
scas
mov
lret
and
jle
adc
shlb
icebp
jae
aam
mov
xlat
mov
push
test
xlat
cli
add
ja
adc
loop
shlb
mov
pop
fwait
sbb
cltd
jno
insl
mov
xor
mov
lea
out
loopne
pusha
stc
mov
das
not
mov
out
scas
pop
inc
xchg
push
dec
xlat
bound
or
dec
test
lcall
add
push
dec
out
add
cwtl
add
adc
std
lcall
pusha
sbb
jnp
inc
sar
out
push
lret
addr16
into
outsb
loope
xchg
xchg
daa
xorl
mov
and
sti
adc
std
dec
push
jne
inc
mov
clc
int3
divb
lret
cmp
jbe
adc
jno
scas
int3
iret
or
cld
cmpsb
jecxz
dec
xchg
sbb
xchg
mov
or
cmp
adc
fcoms
enter
test
or
in
pop
jecxz
fdivr
adc
dec
or
hlt
push
jae
cmp
pop
imull
pop
pop
mov
sbb
sarb
enter
cmp
jne
sti
mull
mov
mov
inc
jmp
rcr
aam
div
dec
jle
sbb
jp
cmpl
icebp
mov
xchg
addr16
xchg
fsubs
test
lods
imul
adc
ljmp
sub
mov
mov
adc
add
jae
mov
popf
icebp
fnstenv
inc
jno
test
loop
inc
push
ds
test
dec
lods
es
mov
icebp
sahf
inc
sbb
dec
fwait
push
mov
out
int3
add
jo
sbb
scas
inc
mov
xlat
shll
fs
in
mov
pusha
sub
pop
cmp
pop
imul
addr16
pushf
out
out
aam
sbb
fwait
jbe
jge
mov
jb
dec
rorl
dec
aad
or
mov
jno
jle
leave
orl
cmpsb
push
das
out
lcall
jno
jg
inc
addr16
lods
aam
sbb
adc
rolb
dec
push
jnp
mov
push
inc
dec
cs
lods
popa
int3
lock
or
pop
out
insl
mov
xor
fldt
inc
and
xchg
xchg
call
dec
es
xchg
stc
pop
jecxz
imul
push
push
sbb
mov
mov
das
sub
fs
fmul
hlt
mov
cmpsl
mov
int3
xchg
and
sbb
sarb
or
jno
sub
adc
stos
test
or
pop
pop
out
mov
out
lock
std
and
out
pop
je
imul
pop
fnstcw
lret
iret
adc
inc
dec
nop
add
in
leave
jbe
fiadds
pop
in
aam
dec
js
mov
mov
jmp
rcll
pushf
and
in
mov
movsl
and
xchg
sbb
dec
rcrb
aam
leave
daa
sti
cmc
fcom
and
dec
cwtl
scas
dec
clc
jns
push
enter
roll
repnz
mov
inc
fistl
outsb
push
inc
xchg
dec
or
daa
sbb
mov
push
xchg
test
in
pop
or
out
push
mov
pop
pop
mov
leave
in
fadd
mov
cwtl
lds
cld
xchg
into
int3
jge
and
call
push
adc
loop
sub
add
pop
fldt
test
mov
jae
cwtl
push
xor
aad
cltd
repz
into
xorl
push
es
repnz
sbb
mov
sub
in
xchg
ficomps
sbb
sub
mov
cmp
adc
push
add
repnz
mov
scas
imulb
pop
arpl
int3
xchg
inc
in
jbe
rcll
push
jne
xchg
lock
inc
dec
push
xchg
mov
mov
in
aam
cmp
out
icebp
pop
shrl
shll
or
push
mov
in
jmp
pop
pop
inc
and
dec
push
in
testb
ljmp
out
xchg
mov
cmp
das
popf
je
into
daa
jl
loopne
or
dec
xor
rorl
dec
mov
inc
mov
sbb
push
int3
sub
lret
inc
cmp
ror
addr16
push
xor
leave
pop
int3
icebp
lret
mov
loopne
insl
loope
mul
cmp
mov
pop
dec
jae
gs
int3
aad
enter
pop
mov
es
sub
push
push
leave
lcall
xchg
push
sbb
cmpsl
pop
mov
ds
imul
cli
and
in
jno
adc
jecxz
gs
fildll
cld
test
xchg
mov
jbe
xlat
and
int3
push
cmp
fisubl
and
int
std
in
jl
add
imull
ret
test
lea
add
mov
pop
mov
jne
scas
sbb
xchg
into
out
pop
sbb
sbb
xchg
shl
cmp
imul
or
test
stos
xor
dec
push
inc
or
pop
into
and
push
or
idivb
fildl
push
push
cmp
sbb
out
stos
subl
jle
pop
aaa
rcl
mov
add
jmp
push
cmp
stc
jb
push
jg
bound
lods
loopne
lahf
dec
pop
push
pop
inc
idivl
and
push
push
jle
push
insb
push
fimuls
fs
pop
int
fbld
push
das
icebp
xchg
ret
sbb
ret
adc
dec
push
int3
mov
cmp
mov
lret
sbb
lcall
clc
repz
adc
cltd
aam
jne
and
mov
into
aad
inc
adc
push
adc
divb
adc
loop
xor
ror
clts
sbb
sarl
fsubrs
push
and
inc
divb
sub
cmp
push
mov
or
repz
repz
pop
mov
sarl
add
shlb
mov
mov
jle
into
xchg
lcall
int
lret
jnp
jl
stos
mov
mov
add
dec
rclb
cs
inc
out
mov
mov
inc
hlt
ffreep
imull
lret
fstps
daa
int3
sub
mov
or
jno
and
insl
ds
flds
pop
sub
jb
dec
loop
cmp
add
inc
cmp
cmp
push
mov
push
pop
out
lret
or
or
jg
xchg
scas
adc
lea
pushf
xor
rol
int3
jo
push
pop
leave
inc
fstl
pop
add
cwtl
push
stos
or
pop
call
pop
push
and
push
shrb
lds
xchg
xchg
fists
dec
xchg
or
cwtl
mov
std
fnsetpm(287
icebp
jl
ss
cltd
inc
fs
loopne
ljmp
lock
xchg
loop
dec
pop
cmp
fcoms
xchg
lret
lods
out
mov
inc
cltd
sbb
fadds
leave
xchg
pop
je
mov
sbb
inc
jge
out
arpl
sti
mov
lret
dec
or
frstor
andb
call
pop
and
xlat
lods
scas
xchg
insb
outsl
sub
mov
mov
shlb
cmpl
div
iret
out
ja
in
dec
in
adc
orb
xlat
or
sbb
xchg
inc
pop
cmpl
test
mov
sub
into
sahf
push
int
pushf
daa
push
pop
stos
push
outsb
and
xor
into
cli
into
jb
add
dec
arpl
pop
xlat
adc
xchg
mov
aam
jecxz
sbb
and
popa
data16
dec
in
rclb
shll
fwait
pop
repnz
jp
dec
mov
pop
push
sahf
pop
nop
xchg
cs
xor
mov
push
xor
lds
push
mov
dec
addl
push
jecxz
mov
fcmove
in
aad
out
push
cmp
sbb
xchg
lcall
xchg
pushf
or
fmuls
cmp
jbe
lods
test
out
dec
adc
cwtl
mov
lock
xor
data16
push
aad
lods
lcall
xchg
pusha
mov
mov
lcall
pop
mov
loope
or
adc
aas
jecxz
push
or
push
or
xchg
push
or
jo
jnp
xchg
pop
cmp
adc
or
sub
xor
pop
lds
sar
imul
mov
inc
xchg
adc
mov
mov
cmp
or
mov
stc
cmpsb
and
cs
in
mov
or
pop
inc
movsb
aam
mov
addr16
mov
dec
ret
or
dec
ljmp
xchg
in
fdivs
shlb
mov
pop
rcrb
test
mov
daa
cltd
dec
or
pop
xchg
inc
andl
daa
out
icebp
lret
xchg
rorb
cmpsl
shl
adc
sub
mov
jge
or
or
sbb
jae
into
fistl
scas
insl
lcall
pop
cs
cmp
push
xlat
sbb
cmp
add
movsl
lods
movsb
mov
cmp
inc
jae
int3
stos
data16
out
sub
inc
xlat
out
xbegin
mov
push
mov
rclb
insl
adc
pop
push
and
cli
xor
popf
test
loope
iret
outsl
jae
out
shll
jb
push
call
push
inc
leave
inc
cmp
mov
fsubrs
lahf
ja
inc
cmpsb
adc
or
jecxz
leave
ljmp
out
outsl
das
mov
adc
fmull
clc
rcll
mov
jl
dec
sahf
dec
pop
mov
arpl
fidivs
fsubs
mov
xchg
addb
dec
xor
daa
xchg
out
push
cmpsl
push
add
lock
or
sbb
stos
int3
adc
push
ret
or
add
inc
lret
xor
adc
jnp
cmp
pop
shrl
lds
dec
mov
adc
shll
sbb
mov
call
rcll
out
adc
ja
shl
jns
add
and
int3
loopne
push
mov
jmp
inc
xchg
sbb
out
cmpsl
iret
lcall
test
cmp
int3
push
jb
outsb
ljmp
sti
stc
aam
pop
add
aaa
in
lods
xchg
dec
push
jbe
call
dec
test
and
jmp
xchg
in
es
inc
pop
xchg
into
ljmp
scas
and
out
aad
cs
sahf
sub
inc
mov
stos
cmpb
pop
mov
add
je
insl
push
lds
loope
enter
push
sti
lret
mov
mov
push
lret
xchg
xchg
or
fisttpl
jmp
int
xchg
add
or
idivb
add
sub
cltd
sti
lret
cmpsb
mov
cmp
xchg
and
inc
sub
and
mov
add
or
adc
lds
pop
xlat
in
or
rorl
inc
fwait
push
sbb
inc
push
bound
aas
mov
pusha
push
jae
and
andl
not
mov
xchg
adc
out
inc
adc
scas
es
lret
inc
push
ss
incb
sub
sbb
xlat
mov
sub
adc
je
and
mov
jae
lret
lret
mov
imul
lock
pop
cwtl
daa
loopne
push
dec
loope
cmc
rorb
popf
xor
stos
add
inc
nop
jl
aaa
int3
cmc
xchg
lret
sbb
fwait
movsl
in
jae
push
sub
outsl
nop
sub
scas
jns
mov
div
mov
ror
cmpsb
pop
add
xorl
mov
cs
loop
xchg
lds
stos
dec
xor
push
repz
cmp
pop
test
adc
jl
or
cmpsl
sbb
dec
push
mov
daa
cmp
fidivs
shrb
push
fwait
cli
test
mov
mov
cltd
je
jmp
stos
lret
scas
push
not
div
int3
xchg
lods
ret
pop
xchg
mov
xlat
sub
pop
mov
mov
fsubrl
xlat
loopne
jg
es
or
scas
sbb
push
movsl
repz
aad
int3
sub
dec
vxorpd
xlat
mov
cli
cmp
or
push
cmp
call
sub
add
out
lret
dec
adc
daa
bound
or
pop
jno
inc
push
out
daa
aad
dec
test
adc
xchg
test
ljmp
xor
negb
jbe
js
or
and
xlat
jg
adc
xchg
aaa
push
or
dec
test
dec
into
push
mov
add
xchg
out
cmp
movsl
nop
mov
pop
jno
adc
rorb
lods
loopne
or
lret
cltd
push
jne
xor
dec
shlb
adc
je
jnp
bound
das
cmpsl
xor
loopne
int
pusha
test
into
add
incb
pop
out
mov
xchg
push
andb
pusha
cmc
jl
xchg
lret
test
mov
out
movsb
insb
mov
int
xchg
fsubs
adc
dec
push
mov
addl
or
and
jns
lahf
cld
in
popa
aam
shrl
out
xchg
push
lds
ret
in
inc
scas
sti
sub
jmp
mov
cmp
stos
xor
aaa
jbe
into
filds
pop
test
popa
sbb
inc
or
ret
push
dec
mov
jns
dec
leave
jl
fsub
int
aas
pop
inc
push
and
into
int
sub
cs
out
test
stos
dec
push
ret
add
lret
aaa
lock
stc
data16
icebp
jo
cmpb
lret
pop
pop
inc
jne
cs
sub
jmp
out
ret
std
adc
or
mov
and
push
mov
adc
jbe
lds
arpl
mov
movsb
fisubrs
mov
or
sahf
dec
test
pop
pop
mov
les
push
mov
dec
imul
adc
adc
xchg
mov
fcoms
das
daa
out
or
mov
xor
cmp
scas
xchg
jecxz
sub
addr16
loope
roll
dec
inc
bound
xchg
stc
and
test
rcll
jne
inc
pop
jmp
inc
daa
mov
add
push
test
aad
dec
mov
push
cltd
and
out
jnp
and
das
cli
sub
dec
addb
sub
sbb
test
std
arpl
mov
dec
inc
les
pop
sbb
pop
add
cs
loope
pop
cmp
arpl
mov
cmp
mov
adc
xchg
lods
hlt
out
mov
inc
cmp
insb
in
mov
ret
popf
sbbb
ss
mov
fists
insl
mov
pop
xor
dec
outsb
clc
jae
mov
jnp
icebp
mov
test
fwait
adc
jne
pop
in
and
pop
jp
gs
xchg
jo
cmp
mov
es
aas
mov
inc
outsb
mov
jp
popa
lret
pusha
and
push
or
mov
rclb
movsl
xchg
sahf
dec
cmp
negl
testb
out
sbb
fnstsw
ror
push
fbld
fcom
or
sbb
mov
cld
adc
clc
mov
xchg
test
movsb
movb
or
push
xor
mov
mov
nop
fcompl
jnp
mov
xchg
lahf
pop
cmp
dec
movb
sub
call
push
pusha
mov
out
les
sub
mov
outsb
mov
fildl
dec
popl
jl
shrb
hlt
aad
xchg
or
addr16
scas
cltd
cmpsl
stos
fsts
or
into
mov
adc
mov
sbb
std
inc
out
pop
addr16
mov
sbb
rcl
sub
jl
sbb
outsl
mov
inc
add
fdivrs
or
cld
shll
clc
pop
in
in
fnstenv
jmp
stos
movsb
pop
out
aam
aas
orps
xchg
je
icebp
lea
sti
push
and
mov
les
out
push
jo
jl
push
pop
mul
dec
and
leave
xlat
fs
icebp
aam
push
push
je
mov
mov
add
ja
jmp
push
cmp
rolb
mov
push
das
std
jp
sbb
or
das
rorl
and
inc
jne
mov
xor
stos
in
in
sbb
out
xor
sub
test
enter
lock
adc
insb
mov
cmpsl
cmpl
dec
xchg
jno
into
pop
push
adc
jbe
loopne
jb
inc
mov
pcmpeqb
sti
mov
fcomps
push
and
sbb
mov
ror
mov
ret
inc
gs
dec
mov
and
es
fcoml
into
fndisi(8087
sub
cmp
ret
mov
push
xchg
sub
xlat
mov
fsts
jmp
nop
mov
jno
call
jle
orb
sub
repnz
lcall
push
xchg
sti
push
add
je
xor
or
dec
and
ret
aad
dec
ret
cwtl
insl
fnstsw
fcoms
or
dec
push
repz
out
jns
test
mov
adc
cld
call
lahf
fildll
aas
mov
xchg
mov
loopne
out
hlt
ljmp
rcrb
adc
mov
lret
mov
sub
rcll
test
pop
imul
mov
inc
ja
mov
cmpsl
fwait
push
std
or
out
inc
repnz
ficoml
sbb
lret
xchg
sti
pop
xchg
loop
push
pop
popa
or
scas
xor
sbbl
leave
sbb
ss
jbe
jne
loop
scas
mov
fadds
shrl
imull
xorl
sbb
rcrl
les
mov
iret
arpl
or
lds
outsb
addr16
dec
inc
pushf
fdivl
xor
xor
push
mov
adc
aas
fidivrl
push
or
mov
dec
in
fxch
mov
iret
out
out
insb
stos
leave
mov
pusha
popa
in
cmp
or
push
arpl
sub
xchg
mov
mov
scas
aam
fildll
jmp
mov
loop
lret
cmpsl
out
xchg
shr
and
pop
mov
lahf
xor
cmovns
and
out
jb
sbb
adc
into
sub
ds
push
sub
decb
loop
out
fdivl
in
push
clc
arpl
shll
sbb
repnz
mov
int3
iret
lds
and
sub
lret
sti
mov
out
mov
dec
das
sub
arpl
sbb
sbb
sub
push
dec
shr
icebp
mov
jae
in
inc
out
fimuls
addr16
fisttpll
imul
je
into
cmp
mov
adc
lcall
pop
push
scas
adc
mov
jg
stos
cmpsb
into
les
fabs
out
leave
and
loopne
push
faddl
mov
repz
jo
rcll
jp
stos
je
into
rcr
xchg
and
into
movsl
dec
in
push
sbb
int
lahf
ret
sbbb
fstpl
repz
hlt
jge
stc
mov
mov
mov
mov
xchg
mov
pop
jae
int
loope
or
jns
push
loopne
sbb
into
xchg
xor
sbb
movsl
mov
or
jnp
neg
in
call
test
ja
pop
mov
aas
lods
xchg
je
mov
adc
pop
dec
add
jbe
mov
jb
xchg
jg
or
std
mov
lods
cmp
add
imul
sti
sub
cmp
loope
into
or
cs
or
inc
stos
mov
inc
out
fsubrl
fistl
lods
cltd
pushf
cwtl
mov
mov
adc
inc
pop
jno
leave
aad
ljmp
jl
rcrl
jecxz
inc
jle
into
jnp
jmp
sub
lock
fsubp
addr16
ja
cli
icebp
imul
cmp
test
in
out
loopne
mov
jne
cmp
pop
movsb
es
inc
push
mov
or
insb
jl
push
and
push
push
lret
pop
jbe
inc
jne
xchg
sahf
pop
mov
add
dec
scas
rep
fists
jmp
out
outsl
xor
lret
sbb
push
pop
dec
push
adc
les
xlat
div
sbb
push
call
les
outsb
js
mov
into
leave
mov
add
out
ljmp
cmp
xor
mov
xor
push
rcl
dec
cmc
xor
andl
mov
pop
lcall
cmpsb
std
inc
rclb
adc
test
or
cmc
mov
dec
movsl
pop
mov
ds
iret
jle
sbbb
push
jns
push
js
cs
lret
pusha
pop
cmp
js
sbb
xchg
pusha
mov
in
ss
mov
sub
inc
imul
into
mov
xor
loope
pushf
fwait
jns
lahf
not
in
in
movsl
test
js
rcll
sub
xchg
cltd
xchg
push
imul
inc
mov
adc
jo
mov
stc
or
lods
pop
push
mov
callw
push
adc
shrb
negl
xchg
and
shll
xchg
xor
cmp
inc
pop
push
imul
in
adc
pop
jbe
dec
mov
rclb
stos
lahf
mov
adc
push
leave
fsubl
js
mov
out
pop
dec
scas
sbb
int
xchg
and
outsl
cmp
addl
xchg
sbb
push
sbb
push
sbb
jge
mov
movsb
lea
cmc
out
stc
outsl
icebp
andb
mov
aas
mov
out
enter
fcmovnbe
sbbl
mov
jbe
mov
inc
cs
xor
mov
cmpsb
faddl
add
insl
imul
insl
dec
jne
add
add
je
inc
dec
inc
push
add
std
jmp
add
ja
adcb
fldlg2
ss
aaa
mov
int
cli
rolb
mov
nop
out
xchg
cli
inc
push
push
loopne
cmc
mov
enter
pop
cmp
or
std
test
jmp
xchg
pop
xor
mov
repnz
xchg
xchg
cmpsb
mov
mov
cmp
adc
xchg
push
pop
imul
cmp
adc
jne
jns
dec
cmp
lahf
notb
loopne
lods
push
jne
mov
xor
mov
fisttps
inc
jbe
mov
lcall
mov
dec
or
jle
sub
lds
cmp
sbb
adc
pusha
push
push
dec
pop
cs
out
loopne
and
data16
decb
ljmp
cli
mov
push
or
xchg
insl
cmp
jne
push
pop
andl
idiv
dec
movsb
mov
int3
scas
mov
cmc
mulb
sahf
rcr
out
aam
mov
fstp
in
shrl
mov
xchg
add
sti
popf
repnz
cmpsl
loope
mov
mov
gs
or
jnp
sub
xor
call
int
aad
sarl
lret
and
mov
lea
dec
ds
mov
cli
adc
push
sti
xchg
rclb
test
lret
test
fmull
out
les
mov
fsincos
stos
fiadds
cmp
dec
ss
sbb
in
mov
fimull
ja
mov
cmc
dec
xchg
mov
stos
sti
div
test
fxch
xchg
out
xchg
adc
cmp
loop
mov
movsb
hlt
push
jno
add
sbb
mov
mov
fstpl
cmp
test
cmp
pusha
into
xlat
stos
cs
and
xchg
inc
fadds
das
push
jnp
outsl
jae
leave
mov
mov
ficoms
dec
loop,pt
aaa
cmp
int
sbb
jnp
ret
xchg
mov
pop
dec
mov
int
dec
mov
jbe
rolb
int3
mov
aam
xchg
sbb
cli
push
into
and
jne
ljmp
mov
out
pop
push
cmp
dec
bound
pop
jnp
dec
dec
orb
lods
or
xchg
sahf
xchg
sbb
add
push
inc
jmp
jne
mov
mov
push
ljmp
or
aaa
and
mov
movsb
mov
cltd
pop
cmp
and
or
pop
adc
lea
cmp
dec
insl
aam
or
repnz
xlat
sahf
mov
dec
push
push
mov
xor
or
xchg
shlw
shrb
out
mov
lcall
push
xor
pop
ret
push
inc
aas
aad
repnz
sti
or
adc
mov
push
lret
mov
inc
inc
rcl
js
into
adc
dec
mov
mov
outsl
mov
push
xor
jnp
push
push
sub
cmc
jo
movsl
and
gs
rcl
lahf
dec
out
fwait
pushf
jns
sbb
cmp
lret
lret
mov
mov
enter
loop
or
mov
add
not
lock
sub
imul
data16
es
xchg
mov
ret
nop
xchg
sti
addr16
call
sbb
push
loopne
shrb
or
push
mov
ret
add
scas
aam
and
xchg
mov
pop
push
loope
arpl
jbe
push
icebp
out
arpl
gs
cmp
push
pop
push
push
lretw
fimuls
ret
pop
mov
dec
mov
xchg
mov
or
mov
mov
es
push
lret
and
das
mov
xchg
cwtl
mov
lock
int
jge
cmc
repnz
jle
aad
rcrl
jbe
ret
sbb
stos
cmp
mov
or
mov
or
sbb
mov
lods
xlat
flds
add
or
or
iret
push
test
clc
int
in
clc
lods
jno
or
mov
aad
push
sub
jle
push
aam
push
inc
les
push
dec
pop
fdivrs
loope
pop
xchg
inc
ficomps
and
shlb
adc
mov
adc
popf
mov
xor
scas
push
jnp
in
cmpsb
in
inc
jge
in
lds
and
imul
pusha
movsl
push
inc
lcall
stos
ficoms
xchg
aad
inc
popa
scas
fcmovb
pop
adc
aad
xlat
enter
aas
shll
shlb
lods
push
lcall
das
sbb
cwtd
fsubrl
xchg
cmp
mov
and
dec
imulb
je
in
sbb
sbb
cmp
sub
sub
adc
rorl
adc
call
rcrb
enter
ds
xor
iret
inc
dec
cmpb
lods
lods
dec
push
mov
cltd
sub
dec
cmp
mov
xchg
or
mov
aaa
enter
xchg
int
stos
or
inc
cs
lret
pusha
lds
ret
xchg
and
xor
mov
xor
out
sbb
xchg
mov
dec
push
xor
imulb
xor
stos
sbb
adc
and
or
in
out
adc
add
call
jbe
lret
in
mov
xchg
rcll
jmp
es
shrl
lds
sbb
mov
icebp
iret
shl
push
cmpsl
icebp
add
xchg
push
into
jne
cltd
pop
jne
sbb
jne
add
std
xchg
in
xchg
js
fnsave
cmc
out
push
inc
in
xchg
sbb
fwait
pop
sbb
ret
cli
push
rcll
or
lret
jp
push
sahf
add
cmpl
adc
in
fcmovnbe
dec
ljmp
push
fisttpl
test
out
loop
ds
push
jbe
adc
adc
mov
addr16
and
fisubl
ficompl
adc
rolb
inc
jge
stos
push
inc
add
add
and
xor
test
fcoml
xchg
push
scas
ret
rcrl
mov
push
push
and
push
push
fwait
sti
cmc
xor
and
mov
jmp
dec
adc
dec
mov
rorl
ret
adc
mov
jmp
xchg
dec
shlb
pop
mov
dec
fcoms
mov
cmc
pop
xchg
dec
cwtl
add
sub
push
push
push
inc
movsl
push
cmc
cwtl
rclb
mov
xor
push
or
xchg
push
or
mov
and
insb
test
mull
movsl
sub
mov
add
out
pop
push
loope
loopne
scas
mov
push
and
mov
rcrl
movsb
pusha
call
dec
adc
inc
pop
rcrb
inc
mov
push
push
loopne
xchg
adc
push
inc
pop
ja
push
push
push
addb
push
call
fcompl
lret
xchg
pop
pop
xchg
jecxz
es
cmpsb
push
divb
xchg
push
or
leave
ss
or
sbb
orl
adcb
adc
mov
jne
or
sarl
jo
and
fisttpl
test
jg
roll
pop
push
out
mov
and
enter
shll
ja
pop
shrl
mov
fwait
ja
stos
add
mov
mov
inc
clc
xchg
and
xlat
jg
sub
jne
jno
cmpb
dec
ficomps
outsl
jae
in
sbb
jno
push
pop
xchg
dec
add
push
test
push
fidivs
push
scas
cmp
dec
out
test
pop
mov
addr16
push
add
sbb
pop
pop
jnp
loope
sbb
cmp
cmpsl
mov
fistpl
dec
imul
ret
adc
shlb
imul
cmp
int3
pop
mov
mov
int
mov
sbb
push
xchg
xchg
jp
adc
clc
out
cmp
xchg
and
lcall
test
ss
nop
jbe
std
push
pushf
xor
pop
push
adc
sub
rcrl
or
fcoml
add
jge
mov
pop
dec
sbb
dec
xor
lds
lods
data16
dec
push
mov
or
and
ret
cmpsb
xchg
dec
dec
ljmp
jbe
or
xchg
shr
fcomi
fildl
es
pop
dec
xlat
xchg
lahf
or
and
out
cs
dec
dec
adc
push
jns
mov
jnp
cmp
pop
mov
and
push
aaa
push
lahf
jmp
adc
adc
push
fistps
push
ret
xor
pop
je
pusha
fs
fmuls
movsl
sbb
test
cs
shl
mov
dec
adc
cmpsl
mov
inc
in
sub
or
push
iret
into
insb
neg
in
fiadds
gs
cmp
sbbl
or
mov
sahf
dec
insb
xchg
stos
push
push
testl
pusha
dec
adc
daa
pop
dec
fsubrs
jae
cmp
jge
insb
push
mov
bound
gs
ljmp
loopne
add
call
sar
repz
mov
dec
xor
popf
loop
aad
repnz
jge
test
pop
or
lods
outsb
cmc
mov
or
leave
mov
aad
sub
mov
xchg
push
enter
cmc
jb
and
sbb
push
cmp
imull
or
and
mov
rcr
or
adc
cmpsb
dec
pop
pop
inc
jl
xor
inc
jns
movsl
sbb
sub
in
push
push
rclb
pop
xlat
push
lahf
sbb
lea
aad
cwtl
push
ja
dec
jbe
out
fisubrs
dec
mov
mov
add
std
dec
out
insb
and
test
out
cli
es
pushf
scas
js
into
clc
mov
xchg
dec
lock
push
push
push
in
dec
dec
cs
sbb
into
das
xchg
aad
add
or
jb
cmc
xchg
in
xchg
and
dec
ss
dec
inc
mov
jmp
sahf
adcl
dec
fistl
filds
test
xchg
mov
das
leave
bound
or
mov
adc
mov
dec
shll
insb
je
popa
jno
dec
mov
jecxz
adcb
fsubrs
sub
or
and
push
popf
cmpsl
sti
push
aam
dec
mov
lods
or
jmp
cld
dec
mov
fs
call
mov
in
mov
scas
mov
mov
js
insl
pop
sbb
mov
adc
mov
ds
scas
inc
xchg
push
mov
call
testl
rol
lds
bound
std
es
divb
jne
lock
dec
sbb
sar
xchg
std
ds
xor
pop
dec
xchg
pushl
pop
push
lods
popa
aad
dec
sbb
jae
icebp
or
xchg
enter
call
in
leave
ljmp
enter
arpl
push
lret
mov
enter
pop
jnp
or
mov
aad
sbbl
lds
repnz
jo
mov
in
xor
mov
pop
aad
and
xorb
mov
scas
ljmp
sbb
and
sub
sbb
dec
push
mov
push
mov
xchg
pop
push
cmpsb
mov
jnp
lock
rolb
and
xchg
fldenv
outsb
repnz
leave
and
andb
dec
mov
call
je
and
or
pop
lea
pop
mov
std
dec
inc
dec
lret
pusha
push
mov
int
fcoms
adc
sub
popa
ljmp
fsub
adc
pop
lret
scas
mov
dec
shlb
movl
xchg
mov
rcll
dec
popa
bound
jle
aad
cmpsb
mov
test
mov
and
mov
mov
xchg
push
ror
mov
mov
sbb
xchg
icebp
add
xorb
xchg
not
xchg
hlt
fidivs
xor
xchg
jge
pop
push
stos
loop
lret
xchg
movb
inc
pop
shll
xchg
xchg
movsl
inc
ret
roll
mov
loope
jnp
sbb
jle,pt
push
xchg
cli
scas
and
mov
sarl
out
xor
ss
xor
shr
cmpsl
xchg
roll
sub
pop
xor
aaa
imulb
push
clc
mov
push
in
icebp
scas
gs
icebp
into
aaa
mov
jb
test
jp
dec
pop
push
mov
fdivrl
adc
loope
xchg
pop
stos
sahf
mov
lock
adc
push
pop
dec
rcrl
pop
mov
xchg
hlt
jb
adc
cmp
out
xchg
std
lds
cmp
in
xchg
jns
and
mov
sub
sar
jmp
shll
sub
loope
push
adc
push
fsubp
push
cs
cmp
outsl
add
test
shll
mov
iret
xchg
loopne
fld
sti
rcl
ret
push
outsb
mov
test
divb
stos
pop
call
adc
cmpsl
ficoms
aas
xchg
adc
mov
loop
shrb
scas
mov
push
xchg
sbb
pop
jle
adc
sahf
xchg
xlat
cmc
loop
lea
jmp
les
sahf
loope
repz
cld
mov
jbe
cld
cmpsb
lret
sbb
jge
aam
and
adc
pop
bnd
mov
lret
mov
inc
xchg
shll
out
push
add
loope
fwait
mov
mov
and
cmp
sub
mov
out
icebp
pop
adc
clc
pop
pop
mov
clc
cmp
push
popf
adc
xchg
dec
push
xor
fnsave
jl
mov
shlb
xchg
int
push
sahf
push
sbb
xchg
out
xchg
push
or
inc
cwtl
enter
gs
int
mov
mov
notb
adc
push
repz
sbb
sub
movsb
push
ljmp
adc
pusha
inc
or
pop
and
lods
test
sbb
mov
shl
add
adc
pop
sbb
cwtl
mov
sbb
mov
ja
ret
mov
daa
cmp
rclb
aas
js
adc
mov
faddl
lcall
mov
push
rcrb
ds
scas
iret
shll
bound
pop
adc
loopne
out
push
xchg
xchg
mov
pushf
mov
scas
xchg
push
ds
in
mov
push
push
adc
addr16
call
ss
push
mov
and
mov
mov
push
sbb
push
or
leave
mov
jne
lret
xlat
mov
in
lods
cld
dec
insb
test
push
scas
cmpsb
mov
mov
out
adc
mov
sahf
pop
adc
sbb
arpl
fisubrs
enter
adc
dec
fcomp
xchg
adc
adc
mulb
mov
pop
dec
push
rcrl
mov
sbb
adc
xchg
aaa
incl
dec
push
sbb
scas
jno
andl
cwtl
roll
push
icebp
xchg
xchg
lahf
cmp
jbe
pusha
add
sbb
gs
push
test
xchg
out
pop
rol
leave
jnp
cli
jnp
cmpsl
add
xchg
jnp
adc
cmpsb
inc
dec
test
mov
sbb
loope
dec
jecxz
notl
cmpl
cmc
rclb
mov
adc
cwtl
cmpb
loopne
add
mov
xlat
into
mov
notb
dec
notl
push
push
and
xchg
mov
dec
rolb
adc
push
sbb
xor
sub
bound
pop
jns
sbb
and
adc
mulb
fisttpl
test
arpl
sarb
cld
fcoms
inc
dec
mov
fdivrs
jno
popa
inc
fucomp
rcl
fbstp
mov
cmp
push
ja
icebp
jbe
dec
fs
mov
add
jbe
aad
dec
sbb
pop
xchg
mov
clc
rcl
ret
mov
adc
orl
and
les
mov
les
and
mov
adc
dec
ljmp
mov
mov
xchg
lahf
xor
jg
int
lret
icebp
pop
and
mov
mov
push
jmp
pusha
pop
jbe
sub
inc
loop
push
nop
in
aad
jo
gs
iret
mov
sbb
jno
adc
dec
pop
pop
mov
enter
cwtl
mov
lcall
shlb
mov
repnz
adc
pop
hlt
mov
sub
dec
popf
shrl
push
insl
out
xchg
mov
push
add
sub
pushf
test
pushf
les
pop
pop
xchg
push
adc
jle
imul
sub
ficomps
negb
scas
adc
idiv
push
mov
ds
in
sahf
enter
shrl
add
mov
adc
dec
int
fst
mov
sbb
mov
in
mov
add
push
sti
push
dec
int
mov
sub
cmp
mov
inc
pushf
push
insb
fnstsw
sbbl
test
mov
jmp
pop
pop
aad
les
jmp
mov
push
arpl
and
jle
push
mov
adc
inc
shll
xchg
loope
and
mov
fnsave
mov
out
push
adc
fmuls
fcomps
mov
and
pop
stos
dec
inc
icebp
or
sbb
dec
leave
inc
or
outsl
jge
data16
shlb
dec
int
dec
cmp
std
cmove
adc
push
mov
js
push
ss
lret
aaa
pop
push
hlt
xchg
fnstcw
shll
aam
aad
sub
sbb
ficomps
pop
jp
mov
pop
sbb
push
fsubl
dec
xchg
int3
mov
push
pop
int
mov
ss
icebp
hlt
fidivrs
jle
pop
sbb
cmpsl
int3
push
sub
out
dec
aad
xchg
xchg
jne
ficompl
movsl
jecxz
sti
leave
repz
fbld
jmp
imul
sahf
adc
rolb
adc
mov
xchg
jnp
insb
pop
dec
pop
imulb
inc
mull
out
xchg
fidivs
add
lret
pop
cwtl
ja
pop
ljmp
mov
test
sarl
sbb
out
and
push
cs
lock
adc
sub
pop
fdivp
sub
pop
insb
jle
xchg
mov
aam
lds
jbe
popa
lret
inc
test
fisubs
pushw
lret
inc
push
stos
outsb
add
test
xor
push
xchg
fmull
in
mov
sub
and
fldcw
scas
nop
lret
and
es
push
mov
adc
dec
pop
jp
sub
test
push
fnstenv
xor
or
lret
idiv
bnd
or
out
jne
int3
xchg
dec
mov
mov
pop
rcr
call
stc
and
lea
ret
push
pop
dec
xchg
loop
cld
into
loope
and
push
shrb
xchg
into
cmp
xor
and
mov
orl
fists
pop
mov
pop
cmp
sub
sbb
cs
mov
dec
sbb
pop
cmpsb
mov
out
shlb
imul
stos
leave
int
je
jbe
flds
jmp
scas
push
test
sub
lea
outsl
mov
mov
xchg
nop
lods
mov
pop
push
jmp
clc
out
cmp
mov
pusha
pop
jne
scas
xor
inc
les
cs
xchg
mov
jge
faddl
mov
cmc
adc
push
sahf
aad
scas
xchg
aaa
pop
cmc
ret
and
fbld
xor
add
cld
sbb
pop
out
out
lea
and
add
out
or
pop
loopne
cli
mov
cmpl
aad
dec
push
flds
push
cmp
stos
pop
enter
sbb
pop
stos
or
adc
dec
je
out
push
pop
pusha
or
jp
loop
xchg
pop
arpl
lds
cmp
or
adc
call
js
mov
pop
repz
mov
sahf
outsb
jl
aad
pop
fcoms
rclb
enter
popa
push
push
hlt
adc
or
out
stos
arpl
andl
clc
push
fcoms
pop
push
fcoml
jno
jle
sub
mov
mov
cmpsl
aad
push
les
enter
or
hlt
cmpsl
in
nop
pop
imul
adc
and
loopne
mov
pop
lods
fmuls
cmp
sbb
ret
inc
jmp
ja
sbb
jns
movsl
shlb
aaa
jb
push
mov
rcrl
loop
orb
jae
mov
mov
loope
push
push
arpl
dec
fwait
shll
ficoml
sbb
lds
inc
int3
cld
inc
sbb
sbb
xchg
addr16
inc
shrb
jb
ss
xor
aad
fcom
pushf
push
and
push
sub
adc
rcl
or
push
push
push
adc
insb
jecxz
cmp
sub
xchg
push
ja
stc
addl
icebp
enter
adc
dec
push
pusha
push
int
nop
pop
push
or
sbb
lret
push
sub
rorl
jmp
push
push
mov
mov
lods
mov
xor
les
fucomp
inc
mov
adc
aaa
gs
add
or
dec
adc
in
inc
push
inc
popa
mov
sbb
jge
fs
sti
xchg
aad
cmpsl
mov
movsl
lea
les
rcrb
aam
mov
gs
push
addr16
jp
pop
push
scas
cwtl
xor
or
or
mov
add
add
xor
or
pop
add
mov
push
mov
jno
add
jnp
adc
bound
shlb
add
or
rorl
mov
cmp
neg
inc
loop
xor
or
push
cld
imul
xor
mov
push
push
hlt
sub
sahf
loope
push
jo
sahf
dec
inc
mov
push
mov
mov
pop
dec
and
mov
add
push
adc
push
mov
pop
and
loop
push
jl
icebp
bound
icebp
mov
lods
xor
lods
fmuls
xchg
jae
sub
into
ja
xor
loope
aas
lret
leave
mov
push
cli
mov
dec
dec
fnsave
dec
cmc
loopne
test
addr16
add
stos
popf
shlb
cli
stc
push
mov
push
inc
inc
mov
shl
cltd
dec
or
dec
push
adc
sbbb
ret
mov
jbe
into
add
add
sahf
jb
shrl
js
call
pop
sub
push
fdivr
push
mov
sti
pop
jge
outsb
stos
enter
xchg
push
scas
jle
jge
fcom
jb
sbb
call
int
scas
push
or
cmc
add
or
jmp
jecxz
jmp
stos
out
mov
scas
jecxz
test
dec
push
xor
xchg
call
jle
fisttpl
addr16
xchg
stc
mov
es
fdiv
xchg
dec
sub
scas
mull
ss
fsub
mov
fmuls
aad
push
aad
pop
sbb
push
test
mov
or
xchg
iret
into
nop
push
mov
dec
lea
pop
push
aad
ret
push
or
loope
sub
fwait
or
rorb
mov
push
push
xchg
int3
arpl
sbb
notb
and
andl
pop
or
int3
jmp
inc
out
mov
mov
movsl
loopne
cmp
xchg
mov
push
cmp
dec
lds
sub
in
cwtl
insb
repz
adcb
adc
fistpll
xbegin
xchg
enter
xchg
xchg
stos
repz
add
cmp
gs
test
nop
stos
sti
sub
and
push
call
mov
and
add
sahf
pop
not
adc
cli
cmp
add
js
inc
xchg
int3
repz
ljmp
in
mov
gs
push
sbb
dec
push
test
jno
inc
or
and
sbb
or
push
push
lahf
mov
adc
inc
dec
pusha
dec
test
pop
inc
mov
loope
bound
pop
dec
scas
lret
push
adc
out
sbb
fbstp
das
rcll
mov
jle
je
scas
arpl
pop
nop
ljmp
or
loop
jp
and
cwtl
dec
ret
sub
out
cld
stos
mov
nop
dec
adc
dec
mov
pop
add
test
aaa
mov
jnp
add
push
cli
sbb
jbe
out
sbb
jne
mov
mov
mov
jne
xor
inc
xchg
dec
sti
jb
xor
clc
sbb
enter
bound
xchg
mov
adc
lret
faddl
sbb
push
test
jnp
push
push
test
test
dec
fidivrs
jo
gs
insb
cmpsb
xchg
insb
jle
test
fdivl
subb
sbb
ss
cmpsl
repnz
sub
mov
hlt
fisttpll
mov
lahf
jmp
pushf
test
loope
daa
popa
lcall
pop
xorl
rol
pop
inc
cmp
stos
xor
jge
mov
and
mov
mov
sub
mov
lahf
sbb
subb
xor
adc
outsb
xchg
aad
cmp
wrmsr
dec
push
inc
cmc
or
loope
sub
outsl
incl
loope
dec
in
cmp
notl
cmp
lods
cmp
in
cmp
jne
aaa
in
out
cmp
ss
ret
sub
jno
xor
mov
ret
fiadds
mov
pop
testl
push
les
jp
popa
xchg
mov
mov
enter
pop
mov
mov
mov
inc
xchg
pushl
or
fmuls
sbb
rolb
pop
test
mov
push
test
repz
dec
sahf
int
pop
pop
or
mov
or
insb
cmpl
xor
xor
push
pop
leave
xchg
push
add
cwtl
xchg
mov
iret
stc
jb
lods
ret
outsb
dec
inc
in
sub
pop
fldenv
adc
sub
inc
daa
dec
out
arpl
mov
pop
sbb
pop
adc
mov
test
jb
xchg
pop
xchg
es
movsl
push
or
pusha
lods
cld
lea
aaa
scas
repz
movsb
mov
arpl
sub
mov
aad
js
inc
jge
fdivr
mov
push
dec
jne
enter
gs
mov
in
dec
push
mov
jns
xchg
add
push
cld
in
mov
fs
adc
mov
or
nop
sbb
addl
int3
xchg
fwait
jnp
xor
and
jl
xchg
adcl
cmp
dec
das
mov
decb
mov
jne
gs
adc
jge
std
adcl
mov
jno
sbbl
enter
imul
inc
lods
push
sti
xor
sbb
mov
xchg
arpl
aad
dec
pop
xor
push
sbb
mov
shll
push
call
nop
arpl
lret
push
push
aad
jmp
mov
cld
mov
mov
in
jle
pop
mov
mov
xchg
mov
stos
xchg
cwtl
jl
test
jle
cmp
mov
or
jnp
xchg
je
jne
push
call
in
stos
push
addr16
xchg
gs
and
out
pusha
pop
icebp
dec
in
dec
fcompl
cmpsb
int3
jo
push
dec
xchg
in
inc
cmc
out
xchg
test
fstpt
mov
ret
push
fistpl
jo
rcr
dec
adc
cmc
pop
xor
push
pop
xchg
repnz
cld
imul
jbe
cwtl
fcmovb
sahf
pop
mov
int3
roll
jle
repz
jns
in
scas
js
scas
xchg
jns
lods
ss
aaa
mov
shld
jl,pn
push
add
add
or
mov
jmp
cwtl
add
mov
jne
test
mov
fnsave
sub
aas
scas
repz
pop
cltd
add
pop
cltd
sahf
mov
outsb
ret
jne
bound
aaa
fists
fcomip
ficoml
in
mov
std
mov
push
movsl
fistpll
sarb
fsubr
iret
jbe
or
push
in
mov
push
test
sahf
popa
or
ret
scas
push
sub
jne
push
mov
pop
or
outsl
dec
jle
mov
sub
sbb
mov
cmp
decb
or
xchg
jmp
imul
or
xor
push
es
push
pop
push
shl
pop
xor
cltd
dec
inc
jns
leave
addr16
add
pop
dec
add
fcmove
push
jl
dec
pop
stos
push
xchg
call
insb
jle
cli
stc
mov
mov
decb
or
xchg
and
cmp
in
pushf
fcompl
push
adc
mov
mov
in
xchg
mov
and
adc
and
mov
std
ret
or
mov
xchg
push
mov
jb
push
loopne
sbb
stc
pop
mov
and
cmp
nop
popf
jb
stos
push
mov
ss
mov
add
mov
mov
int
pop
jmp
test
aad
or
push
or
push
cmp
cmp
movsb
jecxz
inc
jb
push
adc
scas
icebp
mov
lods
in
add
push
push
add
inc
nop
cltd
mov
fildll
mov
xchg
push
inc
adc
js
je
add
push
mov
lea
mov
call
xchg
nop
repnz
or
mov
test
inc
test
js
fcoms
test
dec
sub
stc
int
push
and
xchg
cs
jae
icebp
or
push
test
and
sahf
add
push
jno
sub
ret
lods
and
call
jp
lret
pop
xchg
ror
push
mov
leave
and
push
sbb
loope
inc
dec
sub
add
xor
mov
or
jl
push
ffree
call
dec
out
sub
and
cmp
loope
inc
push
aaa
jp
cmp
jb
sahf
inc
sub
pop
mov
push
imul
ss
mov
insb
aad
mov
cs
adc
add
aad
push
jge
mov
lcall
jae
mov
aad
adc
fldenv
mov
adc
int
push
call
mov
in
sbb
mov
or
call
add
dec
jmp
or
cmp
outsl
cmp
add
repz
add
push
imul
sbb
adc
add
cmpsl
push
add
adc
xchg
mov
xchg
mov
xor
dec
and
xor
push
popf
fadds
pop
cmpsb
cld
push
fmuls
xchg
outsl
mov
test
mov
sbb
adc
es
xorl
push
std
add
or
fimuls
or
cmovne
pop
inc
dec
push
lods
es
pop
dec
sbb
rcrl
or
loope
pushw
lcall
and
int
mov
push
pusha
jb
xchg
inc
mov
inc
lea
or
pop
daa
inc
mov
inc
mov
push
dec
aad
xchg
orb
mov
dec
test
and
mov
scas
sbb
shll
sbbl
movsl
pop
inc
insb
jg
loopne
dec
daa
outsl
mov
lock
jle
pop
adcl
dec
push
xchg
push
inc
dec
mov
ja
sar
mov
repnz
mov
aad
cli
sahf
jge
fsub
addr16
push
ret
and
ss
adcb
cs
orl
popf
outsb
jae
push
call
mov
out
lods
xchg
fsubs
or
xchg
or
pop
jnp
shlb
fucomi
inc
jb
dec
mov
fadd
push
push
jo
and
lods
notb
scas
push
int
mov
sub
pop
push
push
mov
cmp
lret
mov
aas
or
scas
or
loope
dec
lahf
sbb
aad
jno
mov
pop
mov
outsl
and
inc
mov
and
rcrl
sbb
sub
int3
test
add
add
dec
cmp
push
stos
mov
mov
pop
xchg
pop
sahf
pushl
pop
hlt
adcb
aad
insb
adc
negl
pop
push
xchg
pmulhw
sub
or
mov
or
mov
inc
lds
xchg
sahf
and
enter
pop
sbb
push
loope
sbb
pop
inc
xor
jp
xor
and
ja
test
adc
outsl
leave
js
push
repnz
jecxz
push
fildll
ret
testl
and
out
test
dec
call
push
dec
out
scas
dec
aaa
sub
mov
xor
dec
dec
xchg
and
outsl
lods
push
xchg
enter
cld
movl
jne
add
sub
stos
cwtl
xchg
mov
inc
adc
outsb
or
test
xchg
mov
pop
mov
ret
push
mov
call
js
mov
xchg
sub
ret
leave
lods
fs
shll
adc
mov
jecxz
pop
adc
push
sub
mov
push
jle
stos
fisubl
adc
sti
imul
ja
mov
outsb
push
aad
iret
xor
jge
inc
in
and
mov
loope
or
fcompl
imulb
xchg
add
out
jb
pop
or
movsl
aam
sub
rcr
mov
shrb
mov
and
push
mov
lods
push
enter
sub
adc
mov
int
sahf
aas
loopne
adc
mov
not
aad
dec
adc
push
sbb
or
cmpsl
push
mov
jl
ja
hlt
lret
mov
xchg
in
push
or
sub
gs
call
adc
mov
xor
jg
jnp
adc
sbb
xchg
mov
repz
inc
loope
push
mov
jg
mov
int
xor
shll
push
fs
jmp
popa
pop
pushf
cmp
xchg
inc
cmp
push
and
test
pop
fisttpl
das
push
rcll
xor
outsb
mov
and
fcmovnbe
stos
or
aad
cmc
rorl
lods
outsl
testl
and
xor
pop
push
ret
inc
mov
cmp
xchg
mov
test
cmp
adc
push
insb
insl
jg
inc
outsl
push
or
push
nop
lahf
repnz
mov
push
lahf
mov
sahf
push
jb
test
cmpb
addr16
jnp
xor
in
and
scas
movsl
in
js
dec
push
movsb
es
out
xchg
bound
data16
subl
popf
lea
in
inc
mov
fbld
stos
idiv
add
jae
jmp
int
add
mov
mov
dec
mov
aad
aas
adc
jle
inc
add
insl
push
inc
aas
js
loope
daa
gs
push
dec
bound
jle
cld
das
jno
call
outsb
outsb
das
push
call
push
sbb
add
push
jecxz
jbe
sbb
in
aad
pop
das
in
pop
fsubl
add
nop
gs
loope
sbb
pop
jge
cmp
xlat
mov
lods
jl
xchg
add
pop
push
inc
mov
test
out
push
xor
pushf
inc
dec
loope
xor
pop
mov
sub
push
push
rcrl
or
mov
and
adc
push
sub
sbb
jo
out
insl
dec
mov
mov
lock
jnp
insl
cwtl
inc
daa
xlat
pop
mov
out
sub
mov
dec
xlat
xlat
add
lcall
mov
sbb
and
xchg
xchg
pop
fucomp
push
int
cs
loope
out
int
ds
mov
pop
pop
out
shll
jp
in
mov
loope
pop
add
sbb
jp
or
incl
ds
loop
decl
out
js
fcos
fdivrl
out
jbe
inc
incl
sbb
jne
mov
out
cld
push
out
subb
out
xchg
in
out
nop
test
fistpll
pop
jne
cmp
das
in
pop
cld
imul
sbb
pop
fisttpl
pop
dec
push
subb
aas
enter
and
cmc
or
mov
or
js
orb
mov
ret
add
push
cmpsl
stos
mov
int
jo
aad
sbb
mov
jne
add
orb
adc
lds
btc
mov
addl
and
jae
inc
mov
je
into
mov
loopne
hlt
pop
push
sub
jno
inc
jmp
std
cli
movsb
lods
push
dec
add
shrb
mov
int
mov
pop
xor
cmpsb
cmp
int
or
shlb
sarl
roll
fsubl
cmc
sbb
xor
or
fucomip
jo
or
leave
lock
push
adc
popf
daa
cmp
and
sub
leave
fistpll
scas
aam
cs
orl
mov
cmc
enter
repnz
jp
push
add
fisttps
int3
pop
and
hlt
std
bound
inc
inc
dec
shll
sub
add
or
int3
hlt
xlat
shll
imul
push
add
lsl
or
call
mov
or
push
push
dec
ds
mov
pop
call
scas
imul
push
jg
xor
idiv
mov
int
outsl
xlat
js
cmpsb
mov
push
dec
andb
xchg
or
sub
xchg
xor
xchg
loop
push
dec
push
push
inc
loop
imul
sub
aad
ret
mov
adc
leave
arpl
lea
xor
push
dec
addr16
jmp
sub
or
iret
fimuls
into
sbb
popf
lahf
test
pop
xchg
add
mov
push
and
jne
in
adcb
es
stos
scas
pop
sti
int
ds
mov
iret
daa
jo,pn
adc
gs
adc
ret
jo
sbb
sub
ljmp
jo
mov
mov
inc
pmulhw
push
xchg
inc
jo
adc
inc
loope
xchg
mov
jl
mov
mov
fnstsw
push
sub
mov
jns
inc
pop
outsb
adc
push
cs
js
stc
insb
arpl
mov
dec
daa
mov
scas
mov
adcl
pop
fnsave
hlt
aad
incl
jb
mov
dec
push
jge
dec
dec
nop
loope
rclb
inc
fwait
scas
sub
xchg
outsl
shrl
cmc
aad
nop
jmp
pop
not
push
dec
xor
push
sbb
mov
xor
sub
push
adc
loopne
shll
inc
push
aaa
inc
imul
addr16
popa
loop
or
test
xchg
dec
cld
xchg
shrb
pushf
add
push
or
sbb
bound
jl
ret
lds
inc
imull
mov
cmc
sar
pop
mov
cmp
bound
lds
arpl
lods
addb
jns
cmpsl
xchg
add
push
je
pushl
out
dec
fmuls
cld
gs
cmp
sbb
mov
lret
pop
jecxz
imul
inc
adcb
sub
cwtl
jae
test
out
mov
lods
pop
and
adc
out
int3
jb
mov
loope
xor
push
dec
xor
cmc
push
lods
outsl
fadds
mov
xor
nop
dec
lods
es
shlb
fs
mov
or
xor
xor
sub
in
xor
add
xor
dec
pop
adc
sbb
pusha
outsb
daa
mov
idivb
adc
daa
imul
divb
adc
push
mov
adc
push
mov
or
lods
mov
leave
addr16
inc
adc
adc
nop
insb
andl
dec
adc
out
aad
in
pusha
cmpsb
xor
sub
or
pop
xchg
dec
mov
in
ficoms
sub
mov
mov
or
sahf
cmpl
push
mov
push
div
mov
dec
shll
push
push
sbb
jnp
push
push
mov
nop
pop
sbb
push
pop
adcl
sbb
pop
out
push
out
mov
xchg
fdivr
out
stos
movsl
mov
pop
push
push
inc
sbb
sub
fnsave
dec
dec
stos
jnp
clc
inc
call
ds
repz
mov
push
adc
or
imul
cmp
aad
out
cmpsl
xchg
add
and
call
push
pop
in
out
push
fimull
dec
dec
arpl
sub
aam
push
stos
cmp
jmp
mov
mov
int3
enter
dec
or
adc
clc
out
mov
es
dec
xchg
push
push
lock
mov
nop
ret
jge
jl
pop
inc
adc
adc
jle
mov
pop
lds
adc
icebp
shrl
into
mov
and
ja
mov
pusha
sarl
int
dec
fistl
gs
jae
adc
jmp
stos
add
clc
adc
mov
mov
dec
leave
and
mov
pop
lahf
lret
cmp
mov
shll
mov
test
mov
mov
stos
mov
icebp
and
jp
sbb
xchg
dec
ret
bound
jnp
xor
fnstsw
in
in
sti
or
mov
cmp
adc
add
shrl
cs
inc
sub
jmp
jnp
jb
movsl
or
fldl
add
adc
pop
inc
imul
aam
mov
aaa
daa
pop
and
mov
pop
mov
push
xchg
pop
add
pop
dec
int3
stos
ljmp
fcoms
mov
sahf
test
lcall
outsl
andl
jg
orb
shrl
xor
sub
fs
mov
jb
dec
xchg
cmpsl
es
fnsave
jb
mov
lds
cs
sub
out
or
cs
into
popa
sub
and
lcall
push
mov
int
ss
dec
pop
push
xor
test
mov
adc
ret
sahf
nop
sarb
add
mov
dec
push
dec
and
aad
ret
rorb
pop
add
shr
push
pop
adc
loopne
sbb
rorb
mov
loopne
sbb
decb
call
xor
test
jns
imul
cmp
loopne
cmpl
adc
sarb
jb
pop
inc
lea
dec
push
lret
xorb
push
in
pop
xchg
punpckhdq
mov
mov
neg
push
pop
shrl
shr
test
dec
adc
xor
push
sbb
mov
jb
add
bound
mov
sbb
int3
or
mov
push
or
or
dec
xor
push
inc
cltd
bound
pop
mov
out
mov
in
cwtl
call
mov
adc
mov
stc
pop
testl
and
and
aam
xchg
mov
sahf
adc
aad
add
fmuls
mov
sahf
shlb
mov
mov
xor
fwait
insl
push
mov
mov
push
or
jecxz
push
lods
and
mov
xor
dec
dec
in
jge
push
sbb
pop
addr16
mulb
sbb
outsb
mov
in
xor
push
insl
inc
loopne
or
pop
and
js
enter
ret
cs
dec
and
fwait
cmovnp
xor
push
lcall
sahf
call
jge
mov
sbb
mov
lret
enter
adc
inc
jmp
pop
fldcw
cmp
aad
popf
mov
jecxz
inc
fistl
push
jmp
pop
fsubrl
mov
in
lea
sahf
ja
fcoml
lea
add
mov
jne
int
mov
out
pushf
push
push
push
enter
dec
dec
jno
mov
cmp
aad
je
lea
adc
dec
call
cltd
dec
cmp
imul
call
pop
xchg
imul
inc
in
sub
dec
xchg
mov
sub
push
lret
pop
sahf
int
fildll
or
xchg
int
pop
loopne
insl
inc
sbb
push
or
test
mov
pop
testl
repnz
xor
pushf
sub
loopne
sahf
jge
fmull
enter
add
xorb
int
push
test
inc
fcompl
inc
push
test
inc
push
cmp
dec
shll
push
shlb
call
loopne
in
movsb
loop
xchg
jnp
repnz
jp
stos
mov
in
fists
mov
in
jno
enter
jecxz
xor
dec
push
pop
dec
sub
sahf
jge
sbb
add
mov
mov
sbb
movsl
dec
repnz
dec
lods
in
sahf
stos
les
pushf
or
lods
addr16
add
mov
and
and
dec
fcompl
add
mov
fsubrl
dec
xchg
aad
sbb
stos
cmpb
pop
push
negl
mov
sbb
cmp
mov
mov
push
enter
cld
cmp
mov
mov
add
push
xor
adc
lods
push
adc
fstl
push
cmp
jle
in
fnstsw
add
movsl
in
cmp
icebp
push
js
pop
imul
jp
push
and
ja
mov
int
dec
adc
shr
jnp
fxam
ja
clc
push
or
imul
add
and
mov
adc
xchg
adc
jo
pop
adc
jecxz
test
inc
xchg
rclb
jle
lds
adc
dec
mov
sbb
popa
lahf
ss
int
int
mov
cmc
mov
dec
adc
push
mov
pop
mov
and
adcb
dec
inc
or
sub
in
outsb
fsubrl
outsb
jne
pop
mov
push
loop
inc
outsl
push
ss
dec
adc
xchg
and
push
sub
and
das
push
cmp
push
mov
mov
cmp
push
and
pop
in
dec
mov
mov
sahf
out
or
dec
jne
pop
mov
xchg
ret
dec
mov
sahf
inc
ret
mov
outsb
sahf
xor
fists
push
dec
push
loopne
add
repz
insb
sbb
xchg
inc
xchg
xor
pusha
fdivrs
mov
or
sbb
fldenv
dec
sub
xchg
push
iret
loope
sub
cltd
nop
xchg
cli
adc
mov
aad
loope
ja
xchg
xchg
decl
add
mov
cmpsl
enter
cwtl
mov
repnz
lods
dec
jbe
add
push
jnp
pop
js
je
sbb
cmp
mov
mov
je
cld
dec
je
insl
fcoml
ds
cmp
std
pushf
inc
fisttpll
jle
mov
and
push
xrelease
sbb
arpl
dec
fucomi
xchg
cli
movsl
xchg
cli
mov
mov
negb
in
cs
int3
aad
fmuls
mov
xchg
sub
pop
lret
and
call
test
shl
movb
hlt
xlat
push
dec
add
in
or
jne
dec
pop
push
sarb
aad
jno
sbb
push
outsl
in
imul
ss
lret
inc
push
or
cmp
pusha
pop
aas
push
pop
or
ljmp
popf
pop
push
mov
pop
push
jge
mov
lock
test
adc
sub
pop
inc
add
sbb
jecxz
add
xchg
icebp
ret
or
rcll
aas
out
stos
adc
xchg
xor
and
pusha
test
icebp
add
inc
stc
mov
mov
or
shrb
jbe
xchg
xchg
movsl
cmc
sbb
int3
jb
jmp
cld
mov
ret
add
testb
jmp
loopne
ficompl
dec
aaa
mov
jb
xchg
add
rclb
int
mov
cwtl
out
lret
dec
jnp
xor
or
cmc
or
xchg
aaa
fldenv
cld
dec
push
insb
sbb
jbe
inc
in
and
xchg
testb
jno
mov
test
xchg
je
imul
add
mov
rorb
jge
push
std
fstps
adc
xchg
jmp
mov
jp
ljmp
ds
push
notl
decb
rclb
jecxz
push
push
mov
movsb
mov
xchg
dec
mov
mov
popa
int
cltd
rclb
sbb
daa
inc
mov
aad
inc
mov
out
repnz
dec
adc
inc
loop
cmp
int
ret
jbe
dec
xor
mov
jmp
push
pop
int3
pop
adc
sub
leave
xchg
cld
mov
fstl
jbe
dec
rolb
jge
test
cmp
jecxz
add
mov
xchg
pop
mov
adc
mov
add
sub
arpl
addr16
sarl
jne
in
jmp
dec
int3
mov
imul
pop
test
int
pushf
fwait
push
movsl
xchg
mov
in
fbstp
ds
push
icebp
loope
ss
cmp
mov
inc
pop
xlat
or
ss
popl
dec
clc
mov
outsb
mov
dec
cmc
or
daa
in
mov
adc
or
jns
fwait
out
outsl
add
call
xchg
add
int
dec
push
and
adc
cmc
pop
mov
sub
mov
pop
cli
ret
pop
jp
sbb
iret
jmp
lret
adc
sbb
lods
inc
ja
push
mov
imulb
jne
mov
mov
adc
int3
fistps
shlb
mov
mov
rorb
scas
cld
leave
out
or
mov
pop
rclb
ja
mov
arpl
fmuls
mov
cmp
lahf
outsb
enter
out
jns
imul
fdiv
fsubrp
je
inc
or
mov
adcb
cmp
sbb
or
stos
dec
mov
repz
in
pop
mov
mov
jno
shl
fimuls
mov
lea
xor
lret
sarb
aas
sub
aam
add
into
push
or
cmp
roll
and
stos
mov
or
mov
sbb
adc
cmp
cmp
pop
icebp
test
pop
or
xchg
jp
test
aad
aas
int3
ljmp
into
pop
js
addr16
xor
mov
sbb
sub
mov
inc
nop
iret
mov
jnp
hlt
sar
inc
lret
cmpl
and
aad
enter
rcr
shlb
mov
fisttps
movsl
lds
mov
cmp
mov
leave
xor
push
mov
mov
fnsave
xchg
dec
imul
jae
mov
pop
inc
xor
and
sub
decb
mov
cmpsl
lods
loopne
xchg
add
or
xchg
scas
jnp
pop
cmp
xchg
es
mov
aam
dec
das
xchg
sbb
jbe
and
inc
jmp
sbb
repnz
xchg
jle
inc
push
in
les
xchg
fstl
daa
fdivrs
mov
into
xor
xor
cwtl
test
cmp
lock
mov
or
and
adc
sub
jo
or
jp
aad
inc
adc
aad
rcll
ja
xchg
fs
in
out
cmpsb
sbb
les
pop
fwait
xorl
bound
pop
aad
mov
js
adcl
les
add
cmpsb
out
mov
jecxz
lock
mov
mov
imul
lds
xchg
and
mov
pop
dec
sbb
cld
xchg
or
lea
iret
jne
dec
dec
jb
push
jp
or
inc
jecxz
aad
push
mov
adcl
pop
mov
xchg
jg
mov
out
jmp
test
jnp
stc
mov
xchg
pop
dec
dec
xor
dec
xor
fisubrl
dec
lock
lret
xchg
pop
aad
or
enter
repnz
mov
pop
mov
cmp
sbb
enter
cmp
dec
adc
push
in
popa
cmp
daa
or
in
lret
mov
test
mov
and
and
adc
incl
dec
push
pop
inc
or
push
xchg
jecxz
xchg
lret
lods
xor
repnz
or
mov
and
add
dec
xchg
lret
adc
xor
arpl
cld
mov
inc
mov
dec
insb
cmc
and
xchg
icebp
sbbb
or
dec
mov
mov
sbbl
adc
push
test
iret
dec
outsb
pushf
add
add
adcl
outsb
adc
ficoml
lea
cltd
aas
pop
mov
or
lods
dec
adc
repnz
jecxz
test
push
push
call
cld
xor
add
mov
shrl
dec
adc
scas
push
rorl
fmul
cmp
mov
and
mov
sbb
sbb
mov
sub
in
das
mov
add
dec
lds
dec
les
and
cmp
mov
insb
sub
push
cmp
xchg
jmp
push
stos
push
xchg
mov
lods
cmc
xchg
fldl
cmpb
dec
aam
imul
outsl
adc
lret
lss
add
rorb
and
mov
adc
adc
fldcw
dec
add
pop
jmp
adc
xchg
enter
call
ffreep
int
fcompl
jne
mov
or
stos
mov
rorb
mov
cs
xchg
dec
pusha
mov
adc
arpl
dec
int3
bnd
push
ja
mov
jecxz
mov
mov
rol
call
jecxz
ss
mov
and
rcl
sbb
dec
shl
mov
imul
push
out
add
testl
sarl
jmp
ss
xchg
adc
fmuls
xchg
xor
xor
dec
test
ret
rorl
scas
sub
arpl
and
mov
call
mov
and
or
int3
lret
ret
or
mov
push
mov
lods
and
dec
test
je
rorl
xchg
arpl
ret
test
pop
das
call
je
add
repnz
dec
pop
mov
fisttps
or
movsb
mov
add
int
scas
mov
push
sub
inc
pop
dec
and
stos
enter
xchg
cmpsb
mov
in
xchg
shrb
repz
mov
add
xchg
jae
push
xchg
add
cmp
lcall
cmc
push
stos
inc
and
imull
mov
mov
lds
popf
mov
inc
movsl
inc
or
cwtl
pushf
jbe
in
inc
sub
in
mov
dec
shll
stos
mov
xor
aad
and
push
push
in
fldenv
pop
adc
stos
push
mov
js
xor
cmp
push
push
pop
adc
and
aad
cltd
add
add
mov
andl
test
adc
je
pop
ljmp
push
test
inc
arpl
arpl
sub
mov
fcom
dec
mov
popa
dec
int3
mov
xchg
xchg
push
int
nop
jno
insb
icebp
or
aam
sbb
mulb
sub
mov
nop
sahf
push
mov
inc
jmp
push
icebp
add
lcall
jg
mov
fsubs
push
push
jno
ds
mov
pusha
out
call
and
push
fstp
ds
adc
push
inc
ret
and
mov
ret
out
push
jb
push
adc
lds
and
push
loope
jnp
inc
pop
cltd
inc
pusha
cmp
jecxz
adc
jl
sub
popf
pusha
or
mov
push
mov
je
popf
pop
jno
jb
dec
out
shlb
jecxz
push
repnz
sti
jb
jge
imul
std
mov
hlt
decl
iret
repnz
pop
dec
ds
or
dec
vpmuludq
pop
mov
jbe
xor
rcrb
mov
addr16
dec
hlt
std
xchg
lret
xacquire
jbe
sbb
arpl
aad
and
fwait
stos
push
lahf
call
mov
inc
aad
xchg
dec
fstp
fcom
mov
fbstp
test
xor
xor
add
push
fmull
pop
mov
push
adc
pop
enter
jae
pushf
adc
or
sbb
sbb
in
adc
cltd
pushl
dec
out
mov
xor
xor
adc
jle
insb
mov
in
adc
xor
sbb
mov
cmp
cmp
or
es
jg
push
dec
frstor
sbbb
data16
pop
adc
in
les
shrl
adc
repnz
pop
cwtl
adc
call
fcoml
push
adc
or
lods
cwtl
add
mov
mov
or
neg
mov
mov
mov
daa
jne
fdivrs
push
imul
sahf
jmp
cs
cmp
xchg
fmulp
sbbl
mov
popf
jl
std
jnp
mov
xchg
decl
mov
xchg
pop
inc
add
push
dec
push
mov
dec
jb
adc
xchg
mov
mov
lret
jb
sbb
test
or
xor
xchg
cli
sbb
imul
hlt
lahf
xlat
iret
shl
out
mov
bnd
test
orb
repnz
fs
jbe
adc
xchg
in
push
push
sub
cwtl
or
in
push
ss
dec
aam
and
aam
cmp
dec
push
in
sub
div
sbb
mov
mov
adc
repnz
out
loope
or
cmp
mov
pop
adc
dec
inc
mov
jecxz
stc
ljmp
neg
out
jle
xor
aam
mov
add
imul
iret
sbb
aas
popf
cmpsl
dec
push
push
or
cmpl
mov
xor
stos
cwtl
push
add
xor
sub
rorl
inc
sbb
insb
jp
xor
jge
mov
adc
roll
addb
dec
push
dec
lock
mov
enter
aad
pop
jno
inc
pop
push
xor
xchg
lods
aaa
sub
call
mov
ret
jbe
xor
dec
rol
xchg
cs
or
cmc
xchg
int
scas
cmp
push
inc
loopne
jno
das
dec
push
mov
pop
jmp
loope
test
add
fdivr
enter
or
xlat
sub
xlat
sarb
rolb
inc
idiv
push
mov
sbb
mov
adc
in
push
dec
shl
fcoms
ljmp
push
lea
mov
out
call
pop
or
sti
ss
call
push
pop
insb
cmp
fmuls
cld
mov
push
dec
mov
dec
adc
divb
jnp
in
int3
roll
lock
cs
push
add
dec
jne
inc
sub
xor
repz
xlat
out
fildl
js
pop
or
mov
hlt
push
add
push
fildl
mov
mov
mov
sahf
sbb
or
cmc
dec
inc
outsb
jne
shrb
and
js
fdivs
push
aad
dec
int3
loope
movsl
push
mov
inc
mov
cmp
enter
cwtl
sub
fldl
mov
xor
lds
scas
sub
mov
dec
xor
sub
mov
adc
pop
mov
push
mov
add
psubusb
inc
jge
xorl
movsb
xor
fstpt
xor
roll
xor
push
in
in
adc
inc
in
popa
and
dec
dec
in
rcr
popa
lahf
sbb
add
jbe
jl
lds
clc
js
jnp
add
cmp
andl
push
or
aam
fwait
adc
mov
repnz
cmpsl
jecxz
push
pusha
push
repnz
xor
jnp
lret
fistl
mov
dec
mov
cmp
cmc
loop
push
inc
movsb
add
mov
leave
push
mov
push
ret
push
fmuls
fs
jnp
dec
sbb
push
cmp
adc
loope
aas
mov
call
stos
push
push
pop
repz
cmp
flds
mov
mov
add
mov
add
loop
push
shll
mov
xlat
and
fsubr
add
pop
nop
adc
int3
adc
xchg
int
fmuls
dec
enter
dec
clc
and
icebp
mov
dec
push
jle
and
mov
icebp
aad
lods
mov
ja
sahf
cmp
lret
mov
arpl
xchg
jno
lret
and
inc
enter
gs
cmp
push
loop
ds
hlt
mov
sub
mov
aam
js
or
aad
xchg
xor
xchg
lret
lds
jle
jecxz
jb
loopne
push
xor
or
cs
ds
sbb
mov
lods
mov
mov
pop
out
fxch
dec
dec
addr16
mov
stos
or
lret
nop
xor
iret
iret
movsbl
dec
ficompl
mov
in
nop
pop
push
adc
xor
fwait
rcrl
ja
in
pop
or
sub
loopne
shll
rcll
jmp
out
mov
mov
adc
or
and
push
fcoms
pop
cmpsb
push
fnsave
loope
enter
loop
imul
rorl
icebp
mov
test
mov
or
cltd
xchg
or
shlb
insb
loope
sbb
cmp
call
stos
adc
ja
test
sub
outsl
shlb
rcl
sarl
mov
push
inc
push
sbb
mov
ror
pop
repnz
loop
pop
test
fimuls
dec
mov
xor
mov
sbb
pop
aaa
xor
xchg
adc
dec
clc
das
pusha
call
adc
nop
test
push
xor
push
rcll
add
mov
xorb
lcall
cmp
loope
mov
dec
push
gs
loope
nop
cs
dec
dec
addr16
lds
sahf
sub
pop
mov
dec
bnd
lods
loopne
mov
call
pop
sarb
loope
test
dec
or
xchg
lret
pop
imul
daa
leave
dec
sbbb
fs
or
bnd
or
ss
push
scas
jnp
inc
addr16
icebp
dec
lds
leave
fldt
sbb
cmp
add
icebp
inc
and
cmp
sbbl
inc
or
and
dec
data16
iret
sbb
ss
xchg
cmp
push
xor
notb
out
xchg
call
and
mov
cmp
cwtl
loop
cmp
ja
sbb
movsb
xchg
scas
fnstenv
repnz
movsl
pop
enter
call
xchg
cmp
push
repnz
lret
inc
pusha
rcr
xchg
mov
inc
xor
sbb
les
out
mov
mov
cs
mov
shlb
loope
inc
fmul
jl
in
addb
ss
xchg
jl
cmp
jg
push
inc
in
jg
inc
mov
mov
cmp
jp
lret
and
insb
jg
inc
mov
add
andl
jne
dec
xchg
or
mov
xchg
cmp
xchg
and
sbbl
mov
decb
pop
ficomps
rcrl
lds
nop
aam
lret
push
mov
bound
cmpsb
pop
stc
mov
test
movsl
dec
stos
lods
repz
dec
xchg
ds
push
inc
or
dec
push
mov
mov
iret
je
loop
insb
jecxz
stos
xchg
bound
adc
jno
test
cmp
mov
jcxz
push
imul
inc
and
xchg
jg
jbe
mov
mov
mov
and
add
inc
sbbl
or
push
or
leave
pop
mov
in
add
jne
pusha
dec
pop
movsl
and
push
cwtl
dec
dec
pusha
jmp
mov
inc
gs
or
lret
mov
sub
and
dec
pop
in
cmp
and
pop
leave
call
xchg
and
jmp
ds
mov
iret
jb
cmp
negb
repz
cmp
comiss
lods
and
mov
pop
jnp
int
or
jae
push
xchg
iret
dec
popa
inc
xchg
inc
jno
call
pop
mov
stos
adc
aad
xor
sti
adc
orb
cmp
call
repnz
pop
inc
jnp
adc
stos
minpd
pop
scas
jnp
gs
cmc
adc
pop
fmuls
mov
jno
or
push
dec
adc
dec
push
cmp
push
enter
mov
dec
sbbb
sub
je
dec
cmp
adc
xchg
ss
gs
push
or
mov
hlt
push
push
adc
adc
dec
sub
fmuls
loope
data16
stos
pusha
in
xchg
lret
mov
lret
movsl
cmp
stos
mov
dec
mov
lahf
jno
mov
or
mov
cld
inc
mov
cli
rclb
push
shrl
mov
adc
jno
sub
je
dec
je
cmc
xor
mov
inc
push
add
push
fnstcw
nop
push
iret
add
std
jg
out
dec
dec
test
bnd
sti
add
iret
add
jmp
dec
xorl
mov
or
ficompl
push
fmuls
lcall
rcll
jle
sub
push
call
stos
das
sub
insb
mov
mov
inc
insb
sbb
sysret
movsl
loope
mov
mul
mov
filds
pusha
aas
adc
fs
nop
inc
ljmp
pushf
dec
ficomps
pop
imul
xor
fists
inc
jbe
insb
mov
mov
push
rcrb
imul
in
sub
ret
mov
jne
add
jle
xor
sub
jnp,pt
insl
pop
enter
iret
ret
ds
add
aas
mov
sbb
enter
push
nop
cmp
in
imul
ret
add
shlb
push
aas
push
stos
cmpsl
insl
icebp
sarl
lret
cmpsl
loope
popa
loop
outsl
adc
inc
jo
lret
xor
mov
xchg
mov
add
pop
jmp
insb
xor
inc
adc
mov
int3
je
lret
rol
push
jbe
rcl
jnp
dec
stc
push
call
jmp
adc
out
inc
cltd
outsb
icebp
mov
dec
in
shll
push
and
test
je
mov
jnp
insb
enter
movnti
push
addr16
dec
dec
sbb
add
xchg
push
mov
outsb
add
out
sti
popa
and
xor
push
inc
dec
jnp
shrl
cmp
dec
jecxz
das
dec
jecxz
sub
xor
dec
mov
sarl
pop
lds
cwtl
mov
mov
jnp
test
scas
mov
inc
mov
int
or
addr16
sub
or
push
test
fldl
push
shl
stos
mov
addr16
cs
or
mov
adc
push
addr16
xor
lods
hlt
pop
aaa
lahf
jno
imul
ja
int
popf
sbb
mov
adc
push
add
lea
and
test
fs
sub
or
push
push
jb
mov
std
cmp
ss
lods
js
mov
pop
mov
or
mov
dec
dec
imul
adc
loope
inc
lods
icebp
add
mov
adc
mov
lods
dec
xchg
or
insl
in
std
push
scas
andb
pop
je
stos
xor
shl
es
inc
sub
lods
insb
push
cmp
xlat
sub
xchg
imul
shlb
jecxz
repnz
dec
call
mov
testl
fbld
roll
dec
outsl
notl
xchg
xor
fildl
idivb
jae
loop
movsl
iret
call
pop
std
mov
dec
out
fisttpll
inc
jg
ret
negl
ret
push
xchg
lret
sbb
inc
cmp
inc
loope
or
daa
dec
jecxz
daa
mov
mov
xchg
sbb
scas
repz
daa
stc
cmc
fnstenv
xor
mov
push
mov
pop
gs
sub
mov
dec
mov
out
es
sahf
xchg
cwtl
test
outsl
xor
cs
dec
fiaddl
fwait
in
lret
gs
push
mov
test
stos
gs
and
xchg
testb
sti
in
push
hlt
testb
es
mov
sarb
pop
fwait
ja
jl
mov
or
xor
and
cli
pop
imul
mov
adc
subl
adc
mov
in
pop
mov
test
jb
cmp
or
addr16
mov
cs
pop
scas
and
pushw
push
or
fdivs
cmc
fwait
push
jns
cs
fisttpll
mov
dec
repz
ret
hlt
xchg
mov
data16
mov
cmp
fcoms
inc
cmpsl
stos
stos
call
ret
pop
jl
insl
push
push
or
outsb
or
xchg
xchg
push
ret
or
loopne
lods
push
or
neg
xor
mov
xchg
mov
lcall
loop
lea
incb
push
push
mov
and
push
xchg
sbb
add
push
pop
mov
aad
push
scas
mov
and
pop
xor
clc
scas
out
enter
xchg
mov
dec
in
lods
or
jae
push
jne
enter
call
testl
xor
enter
arpl
mov
xor
xchg
nop
out
xchg
out
xchg
dec
cmp
mov
mov
fnstsw
pop
out
lcall
ljmp
or
pop
xlat
outsb
xor
outsb
sbb
and
sub
fldenv
data16
cmp
xor
mov
xchg
fmuls
xchg
xlat
cmp
scas
push
aad
and
in
dec
stos
xor
pop
mov
cmpsl
arpl
mov
cltd
jl
mov
and
ss
leave
sbb
adc
and
push
gs
push
inc
dec
cmp
inc
cmp
lret
mov
bnd
out
jbe
pop
js
cvtdq2ps
data16
nop
xor
cmc
dec
fistpll
nop
pop
lea
add
jo
mov
enter
adc
lods
push
int
mov
push
pop
push
out
xchg
mov
aas
dec
add
inc
bsf
mov
imul
sub
pop
pop
or
sar
nop
dec
in
sbb
push
dec
and
test
or
xor
dec
mov
mov
fmul
mov
int3
fwait
adc
loope
neg
push
shll
call
dec
and
dec
arpl
arpl
call
pop
lea
ficoml
mov
or
mov
and
mov
into
push
push
dec
and
cmp
mov
repnz
pushf
dec
ret
or
pushf
sbb
jne
pop
arpl
sbb
push
inc
mov
fs
and
sub
push
aam
xchg
mov
or
dec
cs
arpl
insl
int
mov
xchg
adc
adc
xchg
mov
dec
adc
shlb
popf
dec
cld
lcall
inc
cmp
or
aad
dec
sbb
adc
bound
sbb
sbb
dec
cmp
jmp
jnp
inc
ss
clc
nop
les
scas
andb
aaa
fdivs
aas
hlt
icebp
jne
nop
mov
mov
sbb
lock
pop
pop
mov
xchg
xor
popa
fdivrl
inc
xchg
cmp
push
inc
inc
push
fwait
xchg
int3
cmp
xor
dec
mov
dec
mov
leave
dec
sbb
and
and
xorb
xchg
arpl
test
inc
jns
add
sub
or
lret
dec
das
sub
and
mov
lret
and
jnp,pt
sub
dec
rorb
mov
int
call
push
mov
sub
out
sub
lahf
fildll
add
mov
mov
daa
popf
lahf
fistpll
sbb
js
mov
push
add
pop
lods
imul
pop
cld
clc
jne
jge
cmp
imul
clc
fcoms
mov
xlat
lock
push
adc
fists
pop
popa
mov
mov
clc
dec
rcl
adc
jnp
call
ret
call
rorb
mov
aas
push
in
insl
icebp
sarl
dec
push
mov
loop
outsl
adc
inc
jo
dec
pushf
fistps
sbb
jo
jbe
jns
enter
inc
inc
pop
fildll
inc
or
push
jmp
dec
push
xlat
dec
jge
imul
jge
push
outsb
jmp
ret
lods
out
inc
or
xchg
mov
ret
out
mov
push
inc
mov
sbb
in
mov
nop
enter
mov
fcomip
add
push
cwtl
mov
fistpl
pop
fistpll
aad
call
movsb
cld
mov
jge
adc
cmpsl
test
mov
push
pop
stos
icebp
invd
repnz
push
not
dec
iret
decl
mov
outsb
adc
pop
xchg
cmp
dec
push
sbb
mov
push
pop
push
lret
ljmp
rep
cmc
psubusb
xor
adc
ljmp
fdivr
cmc
dec
repnz
mov
mov
mov
adc
adc
adc
pop
shlb
mov
stos
test
jno
xchg
push
or
cld
or
repnz
mov
sbb
test
cmpsl
lock
in
lds
jbe
pusha
icebp
xor
dec
ljmp
cmp
add
leave
jae
cwtl
mov
push
push
fcomp
cmc
scas
outsl
mov
push
enter
jmp
mov
subl
mov
jbe
cmc
in
jnp
mov
mov
rol
mov
movsb
mov
inc
add
mov
insb
mov
es
mov
sub
pop
adc
lret
sbb
push
mov
movsl
jns
sub
mov
cli
movsl
adc
popa
xchg
sar
movsl
mov
sbbl
mov
arpl
lcall
jge
dec
dec
jae
icebp
mov
xchg
dec
or
sbb
out
sub
sbb
fbstp
jne
call
es
stos
stos
xchg
daa
aad
dec
mov
sbb
fisubrl
enter
xchg
and
lock
push
cwtl
rcll
inc
mov
cwtl
lret
imul
mov
out
or
sbb
bound
popf
or
movsb
mov
push
push
xchg
xchg
es
not
pop
push
lods
jg
push
pop
jecxz
les
xchg
inc
sbb
xchg
loopne
xor
addr16
mov
lret
inc
xor
inc
mov
outsb
inc
mov
js
inc
dec
mov
lods
push
lds
cld
pop
or
stc
add
adc
lea
jne
jg
ret
dec
pop
rorb
dec
xchg
insb
lock
repnz
dec
mov
xor
jno
insb
aad
pushf
lods
subb
dec
loopne
or
pop
fildl
cld
call
or
mov
add
fisubrl
inc
or
sub
ss
popa
mov
push
jl
xchg
sub
push
fwait
xchg
cmc
mov
out
imul
dec
push
cs
adc
aad
jo
mov
lret
lahf
xlat
fdivrs
add
cltd
aam
lret
sbb
and
mov
cmp
jecxz
mov
sahf
sbb
pop
sbb
jp
push
rolb
aad
dec
lds
jbe
cmpl
addr16
mov
inc
xchg
sahf
jge
pop
int
xor
ds
mov
les
fldt
mov
dec
lock
and
dec
int
mov
adc
inc
adcl
dec
and
mov
or
mov
push
mov
mov
imul
or
push
loop
mov
pop
loopne
adc
xchg
icebp
mov
adc
cmc
cmpsl
stos
nop
mov
pop
or
adc
scas
xchg
outsl
inc
or
and
loopne
in
inc
in
lds
push
repnz
fld
cmp
inc
mov
jmp
xchg
push
inc
in
mov
decl
jmp
push
test
icebp
call
in
mov
in
push
int
or
loope
stos
in
sub
sbb
mov
mov
sub
dec
push
mov
jp
push
cmp
adc
push
cmpsl
jns
inc
push
ret
inc
ds
mov
mov
in
fdivrs
sub
insl
gs
cs
sub
ret
mov
sbb
mov
in
jns
jae
daa
sahf
jb
push
lods
add
loopne
xchg
inc
cmp
or
into
rcr
imul
mov
cli
fcmovbe
push
or
push
insl
aad
and
rorl
fwait
nop
cmc
jp
sbb
pop
mov
shll
fistps
sbb
jae
pop
or
int
aad
xchg
push
loop
push
xor
aad
cld
and
mov
dec
jecxz
lea
and
jecxz
loope
sbb
and
stc
in
push
lea
fs
adc
and
mov
jno
xchg
mov
pop
in
mov
add
add
xchg
add
in
push
pop
sbbb
adc
dec
iret
lods
and
and
adc
dec
stos
gs
je
hlt
rorl
xor
sub
sbb
sbb
dec
sub
leave
add
popa
shll
jl
jb
sbb
dec
popl
mov
jnp
cmp
dec
jl
xor
xchg
jbe
or
ja
add
xchg
ja
out
or
dec
jo
and
push
outsb
and
jb
cli
mulb
adc
fimuls
and
nop
inc
push
in
and
call
fdivs
jmp
or
mov
leave
cld
push
dec
adc
cld
scas
add
dec
xchg
setg
fmul
mov
dec
sbb
cmpsb
adc
pop
hlt
bound
push
insl
test
unpckhps
pop
cwtl
ja
rcll
out
xchg
fsubl
daa
xor
push
cwtl
aad
outsb
xchg
xchg
aad
jae
in
pop
lret
xchg
popa
xchg
test
dec
push
ret
pop
push
lahf
adc
pop
cmpsb
or
pop
cmpsb
mov
dec
test
loop
mov
fdivl
inc
cmc
cmpsl
adc
test
dec
dec
mov
mov
gs
call
test
xor
ret
fisttpll
adc
add
out
in
push
mov
sub
mov
mov
mov
lods
adc
je
hlt
rorl
xor
hlt
int
into
mov
loope
cmpsb
sub
sub
inc
or
add
bound
or
in
daa
es
jae
dec
mov
push
sub
or
test
subl
jg
xor
loopne
xchg
les
sbb
into
mov
and
mov
movsb
inc
mov
push
pop
lahf
sti
push
ja
fisttpl
or
push
lret
add
daa
lods
enter
or
cwtl
and
jns
cmpsb
dec
sub
filds
xchg
iret
scas
jnp
jl
push
pop
sub
je
xchg
stc
das
push
popf
rcrb
mov
mov
xchg
dec
mov
mov
mov
aad
push
scas
dec
aad
ss
lock
adc
pop
cmp
imul
cltd
popf
mov
dec
adc
popa
adc
mov
fstl
mov
gs
inc
in
mov
js
enter
mov
cmp
push
or
adc
adc
xchg
and
adc
mov
xchg
scas
in
inc
call
push
push
ss
xchg
pop
xor
inc
or
and
clc
push
push
cs
cmc
stos
ret
out
negb
aad
cltd
loopne
sarl
xchg
sbb
add
jle
add
cwtl
adc
int
dec
pop
test
pusha
inc
mov
mov
ret
inc
and
nop
mov
outsb
bound
int
jb
and
sub
nop
add
addr16
neg
jge
jecxz
dec
lcall
les
mov
scas
stc
mov
or
dec
psubd
push
andb
shlb
xchg
lea
sub
int
out
jmp
xor
je
or
mov
and
dec
add
jmp
pop
fsts
push
call
jbe
es
sti
push
cmp
or
negb
and
pop
enter
mov
shl
push
out
fldl
stos
lds
mov
add
mov
mov
pop
mov
xor
or
cmp
xor
dec
or
scas
cmc
test
inc
or
push
fwait
inc
wrmsr
scas
xchg
in
sub
ja
lds
cs
sub
jg
dec
popa
jns
icebp
dec
aas
arpl
stc
sub
leave
pop
cmp
lret
mov
pop
mov
mov
push
cli
mov
pop
fwait
inc
cmpsl
loope
fcmovnb
jmp
out
aad
sbb
aam
icebp
out
xor
adc
aaa
out
push
stos
cmp
pop
sub
out
pop
loope
cs
mov
and
mov
fsubl
cltd
push
mov
mov
iret
cmp
mov
add
push
pop
std
aad
loop
rcll
adc
rorb
cmp
scas
xchg
push
and
inc
inc
neg
ret
imul
and
notb
or
inc
cmp
in
mov
in
sub
repz
xchg
lret
sub
xchg
shll
xchg
adc
ret
xlat
int
dec
pop
adc
mov
gs
xchg
push
out
and
imul
mov
push
cmpsl
pop
in
add
adc
outsb
into
fadds
pop
in
mov
ja
fldenv
stos
cli
out
inc
mov
mov
stos
jo
into
es
mov
test
sbb
push
mov
mov
xchg
das
push
dec
pop
adc
mov
movsl
cltd
adc
addr16
adcl
or
adc
xor
in
test
inc
sbb
int
cmpsl
xchg
std
and
pop
dec
adc
sub
jae
out
jmp
ret
mov
jl
mov
push
push
pop
out
or
outsl
cmpl
sub
dec
push
cs
mov
ret
xchg
jne
mov
orl
fcompl
out
ds
sbb
icebp
movsl
and
movb
xchg
js
icebp
pop
jne
and
test
ret
loopne
adc
push
stc
sub
daa
mov
enter
mov
cli
sbbl
xchg
loope
repz
push
mov
cmp
les
inc
mov
push
and
adcw
or
hlt
in
pop
lds
cmp
inc
jb
insl
dec
inc
add
jbe
shll
mov
push
mov
je
xchg
push
mov
ljmp
push
fisubrs
push
mov
in
cmpsb
push
clc
jge
mov
imul
out
push
push
push
or
pop
adc
push
mov
push
icebp
pop
and
fmuls
imul
inc
js
and
test
out
add
shll
sahf
push
test
repnz
mov
loop
aam
lods
shl
mov
cltd
add
mull
std
cld
xchg
int3
dec
frstor
idiv
xchg
sbb
and
push
js
jno
sbb
jl
cmp
adc
int
loopne
push
push
pushf
mov
cltd
test
lea
push
sti
pop
iret
cmpb
push
and
cmp
add
ljmp
pop
jae
out
mov
shr
stos
push
cmp
jbe
pop
push
outsb
and
mov
push
mov
scas
das
mov
dec
pop
mov
mov
mov
rcl
push
xor
sub
loope
mov
mov
iret
rorl
cmp
shlb
mov
mov
xchg
sbb
xchg
push
cmp
out
xchg
add
or
push
jb
test
lock
xlat
push
jmp
inc
out
movsl
cwtl
jbe,pt
icebp
push
pop
pop
pop
sahf
push
xor
lret
test
sub
rolb
or
sbb
ljmp
icebp
lea
inc
or
mov
mov
push
sub
aad
adc
fsubr
or
mov
cwtl
mov
push
hlt
cmpsb
aad
sub
cmp
pop
sti
fdivrs
mov
out
int
xchg
lods
mov
mov
in
mov
clc
mov
call
outsl
in
cs
and
test
add
sub
mov
xor
dec
clc
cmp
mov
in
sbb
stos
aad
push
xchg
in
cmc
test
mov
mov
add
xor
lcall
arpl
aad
pop
xchg
push
cmp
inc
mov
cmp
and
sub
scas
mov
dec
fistpl
not
jg
adc
mov
aad
push
lea
out
dec
push
jbe
out
mov
rcll
ds
bnd
jle
mov
jmp
lods
and
dec
addb
test
shr
mov
xlat
cmp
nop
insl
out
dec
add
stc
ja
push
in
rorb
xchg
adc
add
sbb
aaa
push
movl
pusha
and
adc
imul
shrb
out
jnp
lret
pop
or
fcmove
leave
mov
fisubrs
adc
push
and
pop
popa
dec
and
std
and
lock
xor
std
pop
dec
test
icebp
int
icebp
ds
sub
jno
pushf
push
in
dec
push
and
frstor
int3
or
lret
and
and
test
stos
xor
leave
dec
stos
dec
mov
lods
push
mov
cmpsb
xchg
xlat
mov
movsl
fisubl
enter
outsb
push
mov
popl
jae
push
movsl
nop
push
popf
lret
mov
cmpsl
sub
aaa
dec
dec
notl
pop
stos
dec
inc
add
sti
jnp
out
xchg
jmp
aad
shl
push
test
push
cli
adc
xchg
xlat
orl
fildl
add
shll
jge
adc
or
rclb
and
push
jno
jns
es
sub
addl
dec
jmp
push
and
or
inc
jno
fldenv
sbb
repz
mov
mov
push
push
pop
inc
fisubl
fdivs
xchg
mov
pop
sbb
dec
dec
es
add
xchg
cmpsl
sub
mov
fs
mov
push
in
cs
dec
push
sub
and
rcl
aad
xchg
shll
sbb
mov
fwait
gs
xchg
xor
fstl
lds
xchg
pop
jbe
cwtl
pop
cmp
xlat
lea
push
jp
push
xor
fimuls
mov
mov
pop
push
xlat
push
rcl
stc
push
and
js
cmp
ljmp
cmp
dec
lret
dec
shlb
cmc
push
push
movsl
stc
sub
xor
cs
mov
notl
mov
inc
rolb
outsb
rcl
fsubl
fwait
adcl
adc
sti
xchg
xchg
movsb
and
push
mov
mov
inc
pushf
or
add
or
dec
sub
fidivrl
fwait
jp
icebp
shrb
lock
jno
push
jmp
xchg
adc
cs
pop
push
cmp
jb
push
test
lock
dec
jnp
movsb
into
push
jbe
mov
adc
push
and
shlb
jb
xchg
adc
sahf
jg
cmc
push
dec
xlat
push
ljmp
pop
sub
pop
push
js
icebp
out
lock
dec
pop
cmc
loope
mov
scas
lcall
jno
out
xlat
xor
scas
loop
xorl
aad
sub
pop
scas
pop
push
dec
sti
adc
xchg
pop
in
xchg
xor
fmuls
ficomps
mov
push
ficomps
inc
rcrb
sub
rorl
ret
jmp
shll
pop
fidivl
dec
dec
jecxz
mov
loope
cmpsl
stc
pop
call
cmp
sahf
sahf
xlat
sbb
xchg
mov
or
pop
mov
pop
daa
outsl
in
das
lods
aad
mov
dec
push
jno
insb
lock
sbb
fadd
pop
mov
aad
push
dec
sbb
cli
out
pop
sbb
ret
enter
xor
dec
mov
aaa
movsb
loop
xchg
icebp
hlt
cmc
repnz
pop
sti
mov
push
xchg
in
xchg
cmpsl
negb
adc
mov
insb
icebp
sub
adc
jmp
adc
or
cmpsb
pop
out
add
inc
shrb
lcall
mov
xor
xchg
js
inc
mov
fbld
mov
test
inc
idivb
push
dec
aaa
xor
and
divb
cmp
sbb
gs
xchg
pop
lock
xchg
xor
push
in
jns
mov
push
gs
mov
adc
mov
dec
push
mov
clc
ficompl
sub
mov
shrl
sar
mov
pop
js
pop
leave
and
jmp
mov
push
pop
das
fldcw
imul
movsb
sbb
jbe
push
pop
push
aad
aam
mov
mov
pop
mov
add
push
push
mov
fiadds
add
adc
push
jnp
or
xchg
mov
mov
bound
xchg
outsl
cltd
rcl
and
and
loop
cld
add
jns
inc
aad
imul
loop
xlat
cli
push
add
mov
mov
jns
dec
fildl
shrb
aad
mov
xchg
push
and
rol
dec
pop
xchg
cmp
push
dec
lcall
in
and
and
int
pop
sarl
fwait
sbb
mov
xchg
icebp
push
push
cmp
leave
inc
cmp
mov
push
jbe
push
pop
ret
dec
hlt
push
mov
jb
jae
sarb
xchg
scas
addr16
sbb
fsub
ret
addr16
mov
lea
cs
icebp
cli
ljmp
ret
push
pop
cmpsb
mov
es
lcall
lods
mov
fcomi
shr
adc
dec
fiaddl
movsl
fdivrp
xor
jnp
outsl
sbb
lret
mov
movsl
adc
pop
loope
testl
dec
arpl
fcomp
push
xchg
in
and
inc
adc
add
imul
repnz
fidivrs
andb
imul
sahf
nop
cmpsb
or
push
lret
add
push
mov
jg
push
movsl
mov
js
roll
rcl
arpl
xor
adc
jbe
push
push
leave
loop
dec
fadds
push
mov
sub
cmp
sbb
shll
jno
dec
aad
in
xchg
stos
out
rcrl
scas
pop
xor
mov
enter
insb
sub
test
xchg
mov
ljmp
aam
and
jle
scas
push
cmp
lods
xlat
roll
pusha
push
push
mov
add
lock
xchg
int3
outsl
hlt
pause
frstor
sub
insb
loop
cmp
loop
jae
pop
xlat
mov
lock
std
and
cmp
add
adc
and
and
mov
mov
loope
xor
aad
outsb
push
into
push
mov
cs
iret
adc
into
push
xchg
lods
fldlg2
jnp
iret
jno
cmp
es
ss
sub
inc
mov
out
jmp
ljmp
push
int
call
ficoms
jmpw
push
es
fcoms
mov
and
push
push
lea
pop
data16
outsb
cli
fisttpl
push
sub
dec
lret
pushf
adc
add
mov
sbb
sub
xor
stos
ljmp
mov
inc
inc
test
ret
cmp
jmp
arpl
cmp
sbb
fsubs
add
ret
adc
lods
inc
pop
pop
ret
xchg
add
jg
sahf
or
loopne
adc
sub
and
pushf
jecxz
cs
ret
ficompl
pop
fidivs
mov
arpl
mov
dec
cmpsb
adc
into
and
jno
loope
push
test
pop
mov
mov
push
sbb
push
jb
test
insb
bound
repnz
inc
fcomi
xchg
adc
fstps
test
idivb
fsubs
cmpsb
mov
out
es
shl
push
mov
adc
fisttpl
adc
mov
dec
dec
fnstcw
add
std
pop
mov
aaa
mov
sub
sahf
jecxz
int3
add
jle
mov
jmp
ljmp
test
inc
adc
mov
and
sti
ficoml
arpl
aam
xchg
das
ror
or
icebp
loopne
xchg
subb
fwait
dec
in
ret
mov
mov
sub
inc
fcomps
daa
xlat
lods
cmc
push
out
and
rorb
fnsave
dec
xor
adc
sahf
in
testb
scas
in
and
sbb
fdivr
dec
into
out
xchg
outsb
dec
shrb
inc
lret
mov
cmc
push
pop
push
movsb
add
xchg
mov
rorl
push
adc
loope
imul
xchg
pop
ds
push
cmp
mov
rol
inc
ret
adc
fwait
into
mov
or
pop
push
dec
inc
mov
aad
sub
inc
push
leave
jae
out
jb
loope
xchg
lcall
popa
leave
or
jne
mov
xor
mov
sbb
pop
inc
pop
mov
and
mov
dec
lock
push
pop
in
push
test
in
adc
push
daa
mov
xchg
data16
out
ljmp
cmc
xor
push
mov
adc
sub
cs
push
mov
jnp
xchg
or
scas
cld
xchg
sub
push
xor
mov
js
adc
aad
fbstp
sub
enter
out
addb
mov
xlat
adc
je
xchg
inc
adc
mov
adc
dec
add
mov
iret
movsl
jno
sub
lods
push
xchg
xorl
in
sub
roll
fdiv
fstpl
and
leave
mov
imul
xchg
repz
xlat
adc
out
and
dec
bound
push
dec
fwait
pop
add
pop
popa
divb
gs
cmp
push
mov
flds
mov
clc
test
push
xor
and
mov
mov
sub
sbb
cmpsl
adc
fidivrs
je
stos
sub
push
cli
mov
xor
int
rclb
or
fsubs
dec
push
out
out
test
mov
lods
fcoml
xchg
shr
push
sarl
sbbb
lret
sbb
push
aad
ds
xchg
pop
pop
inc
ds
ja
xchg
mov
lods
mov
in
inc
mov
out
adc
popf
outsb
loopne
aad
icebp
adc
mov
or
pop
jg
adc
inc
mov
ja
test
jle
push
mov
jae
loope
popa
push
dec
dec
vpslld
jns
jecxz
adc
sbb
scas
push
lods
test
gs
cmp
out
sbb
dec
jge
loop
test
gs
inc
mov
fcompl
push
fsubr
aad
pushf
icebp
inc
lcall
lds
adc
push
mov
and
mov
cmp
aaa
or
sbb
sub
sbb
enter
les
out
bound
sbb
jg
repnz
lds
jbe
mov
push
adc
add
fidivrs
cmp
std
xlat
gs
fsubrs
push
pop
add
loop
or
in
call
js,pt
cmp
dec
push
ret
push
fwait
sahf
mov
mov
shrl
cmpsl
push
xchg
mov
dec
sub
adc
push
sbb
mov
pop
cmp
sbb
dec
sub
cmc
push
fidivrs
into
push
and
fadds
sbb
sub
pop
push
mov
or
xchg
fcomps
cmpsb
aad
lea
xor
sbb
adc
negl
int
pop
lahf
mov
push
fldl
adc
loop
sbb
icebp
mov
pop
mov
push
mov
and
inc
dec
scas
dec
fwait
push
ret
adc
aad
xchg
pop
mov
or
aad
iret
jb
movsl
nop
pop
inc
jae
scas
movsl
push
cld
mov
test
sub
ljmp
sahf
ds
js
lret
jnp
int3
jb,pt
cmc
icebp
ret
push
pop
adc
cmpsl
ljmpw
repnz
das
int3
xchg
jns,pn
jmp
sti
xchg
jmp
into
sahf
push
rcl
mov
adc
xchg
in
mov
and
push
das
cwtl
xor
cmp
data16
es
pop
push
fldl
dec
testb
es
pop
test
sbb
movsl
or
mov
pop
mov
faddl
mov
out
dec
push
xor
adc
sbb
mov
push
or
js
dec
adc
push
divb
fcom
push
push
fimuls
or
push
cmp
je
lcall
cmp
cmp
cmpsl
es
inc
inc
pop
bound
addr16
mov
mov
repnz
inc
pop
loope
outsb
ficompl
push
sar
cltd
pop
test
or
dec
dec
in
jmp
hlt
pop
adc
push
jl
sbb
pop
push
notl
adcl
add
jne
ror
icebp
sahf
shll
stos
cmpsb
mov
mov
notb
push
adc
lea
fst
int
popf
shll
sbb
adc
sbb
js
or
inc
cli
mov
fimull
dec
call
push
std
stc
lods
repz
ret
lahf
in
mov
imul
or
push
adcb
imul
mov
xchg
fwait
and
cmc
js
pop
mov
repnz
push
add
sbb
cmp
test
sbb
mov
sahf
push
adc
or
push
pop
nop
icebp
loopne
cmp
cmp
pop
add
xlat
inc
ds
hlt
jno
push
adc
adc
mov
mov
and
das
mov
je
data16
pushf
add
adc
push
mov
ss
cli
mov
mov
mov
add
iret
call
dec
nop
add
cmp
xlat
imul
shr
and
push
mov
cmpsl
out
inc
fs
pop
xor
loope
push
inc
es
dec
mov
test
push
filds
aad
cmp
adc
loopne
inc
inc
fucomp
xor
lret
push
cli
not
xor
nop
jb
sub
fmuls
dec
cwtl
push
cmc
in
xor
xchg
les
dec
bound
rcrl
test
push
inc
adc
lret
pop
dec
gs
mov
add
call
pusha
cs
xchg
je
call
int3
sub
ficompl
or
in
or
push
aam
jl
adc
add
fmuls
dec
and
jnp
pop
loopne
push
aad
dec
push
addb
int3
imul
mov
dec
pop
push
push
not
into
xchg
mov
aaa
mov
clc
les
lods
test
std
stc
xor
xchg
xchg
adc
loopne
mov
movb
xchg
fidivrs
rolb
push
adc
loopne
push
aam
xchg
mov
mov
scas
popa
inc
lahf
out
dec
jb
push
or
and
pop
jge
stos
out
fidivs
cli
out
es
push
rclb
stos
dec
xor
lea
outsl
inc
scas
inc
sbb
mov
sahf
jge
mov
push
imul
ss
popf
jnp
leave
xor
rcll
mov
dec
pop
and
cmpsl
mov
ret
sbb
stos
and
inc
in
js
inc
dec
sahf
jne
adc
mov
das
lret
stos
ret
push
outsl
mov
aaa
xchg
inc
lcall
ss
mov
pop
cmpl
pop
dec
popa
and
sahf
adc
repnz
xor
divl
xor
lcall
push
jge
push
dec
xchg
aaa
push
adc
jge
insl
sub
jecxz
lahf
add
mov
mov
mov
cmpsb
fisttpll
xchg
js
mov
adc
xor
xor
bound
pop
iret
in
jge
adc
inc
fdiv
movsl
dec
mov
leave
in
stos
sub
mov
ljmp
inc
fwait
scas
stos
fimull
jns
xlat
push
loop
jno
jnp
es
add
or
test
xchg
dec
leave
mov
xor
hlt
xor
test
mov
jmp
push
cmc
jmp
rorb
mov
cmc
inc
shrl
sbb
xchg
es
rolb
addr16
pop
movsl
shll
test
aam
jnp
pop
mov
rorl
mov
xchg
insl
mov
xchg
xchg
aas
arpl
aad
dec
inc
loop
vpor
and
pop
into
lret
push
dec
xor
in
sbb
sub
inc
dec
ja
push
pop
push
cli
push
xchg
icebp
sbb
pop
xor
jns
in
add
xor
jae
rcrl
cmc
push
push
ss
sahf
mov
inc
fpatan
cmpsb
dec
fcmovu
repnz
daa
push
movsl
push
cmp
adc
clc
sbb
test
xor
ret
and
stos
shrl
out
sbb
pop
add
test
jp
xor
outsb
jno
leave
dec
test
mov
or
dec
or
push
call
jmp
dec
icebp
push
cmp
mov
mov
pop
lock
shl
xchg
in
aad
inc
imul
push
add
clc
stos
mov
movsl
mov
andl
inc
xor
fwait
rcrl
in
aad
lret
test
dec
cmp
imul
or
stos
dec
jl
or
movsl
lods
int3
repz
mov
jae
adc
iret
inc
dec
fcomps
add
rorl
mov
inc
cmp
sub
out
pop
xor
cmp
test
imull
in
or
pop
push
aad
and
pop
lods
push
jg
pop
fstl
cmpsl
mov
jg
loope
pop
and
add
and
xchg
xor
outsb
jnp
mov
sub
mov
push
push
push
negl
sbb
sbb
xchg
cwtl
or
xor
and
ss
push
fisubs
mov
and
mov
dec
and
dec
adc
mov
dec
out
xchg
and
or
xchg
and
sub
mov
sbb
ljmp
call
push
add
xchg
sahf
xchg
push
mov
fwait
rorl
loopne
cmp
push
and
cmc
dec
loop
outsb
lds
rcrb
xor
dec
aad
jae
inc
mov
ret
mov
ljmp
or
xchg
clc
xchg
mov
add
rcll
add
stc
arpl
cpuid
fnstsw
sbb
xchg
mov
shll
sti
aam
cli
dec
mov
dec
fildl
mov
push
sarl
fwait
test
bound
push
cwtl
and
std
sbb
stos
stc
add
lds
jne
sub
sub
loop
imul
mov
adc
sbb
ret
pop
push
jno
mov
loopne
adc
add
lds
push
sbb
dec
dec
push
or
mov
scas
loopne
push
fstp
cmp
out
stc
sub
pop
and
pushf
and
insl
adc
adcb
cmp
addr16
push
push
dec
adc
push
lds
mov
xchg
adc
out
mov
dec
pop
push
jbe
push
ret
add
gs
sbbb
cmp
dec
sahf
push
fs
dec
push
sti
inc
sub
test
jbe
cwtl
mov
aad
aad
dec
mov
add
sbb
je
push
lods
andb
push
pop
jnp
mov
inc
fdivrs
mov
pop
pop
xchg
add
int
mov
push
jnp
mull
push
je
popf
xor
rcl
inc
inc
mov
push
mov
mov
xchg
and
popa
sbb
rclb
pop
mov
lods
push
orl
mov
dec
inc
int
xor
jge
mov
push
pushf
or
jns
add
jecxz
mov
mov
dec
add
mov
push
add
roll
jb
stos
imul
lret
cltd
mov
and
xor
add
dec
scas
int
mov
cmpsl
ret
leave
rcll
in
in
in
out
imul
cmpl
imul
enter
add
gs
push
push
ds
push
sub
xor
xor
mov
fmuls
idivb
and
nop
push
xchg
lret
mov
adc
pop
push
ficoml
xchg
scas
aad
dec
fdivl
add
pop
inc
push
fwait
mov
outsb
add
inc
xlat
out
xchg
dec
mov
pop
push
pop
inc
pop
call
ja
push
add
dec
xchg
int
loopne
test
inc
push
out
adc
mov
xlat
mov
ret
into
in
jmp
aad
add
push
leave
inc
xchg
dec
aad
popf
leave
out
xchg
jae
das
into
and
into
sub
rol
pop
shll
stc
addr16
or
push
or
mov
cmp
adc
sbb
sub
fidivs
xchg
sbb
adc
xchg
inc
push
sub
in
adc
push
mov
add
mov
xchg
inc
jbe
pusha
jbe
jecxz
or
mov
and
push
xor
cmpsl
mov
mov
cmc
xor
loopne
icebp
lcall
int
std
in
mov
push
movsb
mov
gs
mov
cmc
push
frstor
adc
cmc
decl
mov
inc
shrb
inc
fwait
dec
pop
pushl
out
and
ret
push
xchg
push
mov
cmpsl
dec
mov
adc
aad
xor
scas
fdivrs
mov
test
pop
or
xchg
aad
or
mov
adc
in
jnp
fs
inc
rclb
loop
push
dec
jbe
push
sub
ja
or
fcom
adc
mov
xchg
mov
push
and
sahf
xchg
pop
push
shll
cmp
fwait
repnz
dec
or
add
insl
lds
mov
mov
frstor
loopne
das
aad
or
cmp
mov
out
stc
sbb
inc
mov
xchg
push
rcr
outsb
popf
adc
xchg
scas
out
fidivl
ror
lods
fstp
push
sbb
loope
dec
dec
cmpsb
or
pop
cmp
enter
mov
and
xor
ror
jb
fcomps
push
mov
mov
stos
shlb
adc
push
leave
mov
pop
pop
clc
and
or
xchg
into
add
or
pop
daa
leave
leave
popa
fdivr
lods
cmpsl
clc
gs
xchg
add
pop
xlat
and
and
sub
dec
jb
inc
dec
mov
es
push
jo
jae
adc
dec
into
sbb
enter
not
rclb
push
into
xchg
hlt
ljmp
push
ficoms
sub
adc
insl
adc
xor
out
shrl
aad
inc
mov
adc
jle
xchg
test
jnp
int3
adc
div
sti
out
pop
out
popa
pushf
ja
cmp
mov
push
sbb
inc
outsb
jb
cmp
adc
daa
push
push
movsl
mov
mov
xchg
mov
mov
mov
push
adc
loope
dec
test
sbb
xchg
clc
mov
pop
or
aam
add
mov
aad
mov
mov
mov
scas
lret
cwtl
loope
stos
psrad
xlat
insl
adc
call
push
adc
adc
cmpsl
lret
les
jp
lods
rcr
mov
fmul
push
dec
ret
mov
test
mov
call
add
rorl
mov
cmp
clc
ret
cli
in
test
addr16
inc
dec
inc
pop
dec
out
adc
adcl
bound
hlt
les
sub
fisubl
or
pop
push
xchg
daa
jecxz
dec
nop
cmp
inc
pop
adc
cmp
inc
mov
call
adcb
adc
lret
hlt
sub
outsb
loope
xchg
cmp
mov
adc
mov
push
in
das
dec
pop
sbb
xchg
push
lahf
push
cmp
rcll
shl
scas
adc
xchg
mov
dec
repnz
inc
sbb
rcrl
fisubs
jl
scas
stc
fldenv
out
ja
sbb
into
push
pop
loope
cmpsb
lahf
mov
push
out
shll
push
cs
cli
aam
scas
sbb
push
pusha
cmpsb
shll
mov
push
mov
mov
ret
js
les
xlat
mov
jb
push
xor
or
jb
dec
adc
push
mov
xchg
fsubp
and
push
adc
sub
andl
xchg
and
adc
xchg
adc
vhsubps
negb
cmp
popf
adc
shlb
dec
lret
sbb
push
jmp
outsl
mov
lahf
and
aam
out
push
dec
addr16
notb
lcall
mov
in
divb
jae
outsl
mov
xor
mov
aad
mov
mov
xor
push
add
testb
mov
xlat
add
push
aad
call
or
adc
push
jbe
mov
shlb
inc
repnz
inc
add
xchg
push
inc
mov
aad
xchg
mov
inc
leavew
adc
outsb
in
loope
mov
mov
push
sbb
lock
mov
mov
jns
ss
lcall
rcll
movsl
mov
or
jbe
jp
cli
fdivr
mov
mov
xchg
mov
cmc
push
pop
pop
mov
mov
mov
adc
cli
xor
cmpsl
sbb
jge
mov
sbb
scas
sbb
cs
xor
xor
mov
mov
jb
lret
movsl
stc
push
sbb
mov
adc
repz
jg
das
mov
rorb
int
sahf
insl
xor
mov
pusha
sbb
push
bound
or
rorl
xor
adc
xchg
outsl
and
test
or
or
dec
xchg
out
xchg
adc
push
sub
xchg
and
testb
xor
inc
adc
jae
popa
lcall
and
fsubrs
data16
in
mov
test
adc
add
div
data16
dec
sbb
push
jno
call
mov
scas
leave
or
pop
mov
int
inc
jno
xchg
inc
sbb
mov
int3
add
fildl
cmp
out
adc
out
jp
dec
add
dec
inc
pushf
dec
jg
adc
jb
loopne
aam
dec
lds
adc
push
std
mov
int3
ret
adc
and
dec
mov
inc
xor
mov
mov
test
xor
adc
vaddps
push
gs
push
lds
aad
xchg
mov
subl
mov
xchg
add
cltd
daa
mov
cmp
jb
sbb
imul
add
flds
mov
out
fcoms
xchg
dec
std
pushw
fdivs
scas
inc
mov
out
mov
cmp
fcmovnu
sub
lods
xlat
adc
sub
push
fnstsw
xlat
jo
leave
scas
dec
xchg
adc
adc
pop
aad
ror
into
test
jae
inc
mov
pop
xchg
pop
add
pop
mov
loope
shl
adc
push
mov
sub
in
inc
cwtl
sahf
jae
push
loope
push
mov
rcll
add
test
pop
insl
jle
or
xchg
pusha
popf
shll
movb
jmp
push
scas
andl
sti
repnz
xorl
sbb
inc
icebp
pop
mov
dec
dec
test
sub
push
inc
cmp
addr16
xchg
mov
ds
out
adc
mov
jne
repnz
ss
sub
dec
ror
dec
cmp
cmp
pop
and
inc
dec
sahf
dec
add
loopne
in
loope
xor
mov
rcrl
push
push
or
inc
loop
push
cmc
test
dec
ret
dec
mov
sub
fsts
pop
mov
sarl
cmp
iret
cmp
test
popa
aad
imul
sub
scas
mov
mov
imul
mov
or
dec
lahf
adc
subb
cmpsl
jae
jb
nop
mov
xchg
sbb
jb
leave
xchg
and
ret
outsl
test
sti
xchg
mov
aad
repnz
rolb
mov
xchg
mov
xchg
adc
cmpsb
cmpsb
in
pop
xchg
jmp
pop
cmp
shll
rcll
dec
mov
rorl
ret
loopne
or
jp
mov
bswap
outsb
mov
lret
jno
xchg
adc
lcall
roll
mov
mov
adc
cmp
and
adc
out
push
mov
cmp
lds
fs
xchg
jbe
or
pop
mov
adc
mov
lds
out
jo
addr16
pop
lret
and
jmp
lret
mov
rorl
mov
int3
jnp
xchg
sbb
pusha
dec
jnp
push
push
loope
rolb
pop
and
xlat
mov
scas
cmp
dec
adc
sbb
sub
add
or
stos
leave
mov
sub
push
fildll
or
mov
pop
loope
pop
sbb
xor
mov
fldl
push
frstor
ja
jno
adc
cmp
ss
jmp
or
stc
popa
sbb
and
xchg
scas
add
push
push
cmp
mov
dec
cmc
imul
lea
loope
xchg
scas
dec
adc
sbb
inc
jg
pusha
xor
jge
cmp
frstor
aad
xor
pop
mov
inc
push
add
aad
xchg
enter
aad
mov
inc
push
cmp
add
jo
dec
mov
lret
xchg
pop
pop
mov
mov
dec
mov
xchg
loope
test
dec
lret
scas
nop
and
xor
dec
push
pop
fdivs
mov
jnp
out
pop
movsb
xor
repnz
jno
pop
scas
xchg
fcoms
dec
icebp
push
mov
xchg
sahf
stos
repnz
lods
sub
and
call
clc
fnsave
push
test
imul
aam
adc
fisubs
pop
out
rclb
xchg
in
jge
rorb
pop
enter
hlt
jle
cmp
fs
ret
aas
mov
push
iret
inc
push
outsb
int
shl
cmpsl
shrb
aas
outsl
mull
das
cmp
js
dec
fisubrl
cmpsb
xchg
sub
push
add
adc
fisubrl
out
add
ret
loop
ret
pushf
inc
fmuls
cmp
psadbw
or
test
imul
xchg
outsl
or
dec
test
shlb
je
dec
cs
lods
lea
jno
fcmovne
sti
adc
cwtl
mov
xchg
push
mov
imul
jae
insl
sbb
fmull
fsubp
or
shrb
int
pushf
aam
jmp
mov
roll
jle
leave
fisubs
loopw
jmp
aad
sbb
lret
loopne
pop
inc
push
shl
cld
inc
aam
sub
push
cmp
xchg
shl
repnz
xlat
adc
push
ds
lret
into
in
jno
xchg
pop
loope
add
inc
call
std
stc
shlw
loop
ds
sbb
sbb
push
xchg
icebp
xor
mov
xchg
and
cmp
loopne
pop
popf
push
int
mov
xchg
gs
roll
nop
ds
sbbl
dec
lret
cltd
fisttpll
mov
adc
xchg
pop
out
pop
jmp
jno
jmp
clc
adc
mov
cltd
gs
mov
aam
lret
sbb
cmp
or
mov
leave
sub
mov
mov
xchg
cltd
ja
out
das
cmpsb
mov
jb
or
ret
jb
inc
or
adc
mov
ss
dec
xlat
adc
lahf
mov
int3
push
addr16
mov
jb
lret
mov
sbb
gs
sub
in
adc
leave
dec
add
inc
aaa
adc
repnz
xchg
negb
sub
cmp
mov
inc
rol
bound
rcr
push
rol
sub
xlat
dec
shlb
pop
bound
inc
cmp
mov
std
test
dec
inc
fadds
jecxz
test
rcrb
and
pop
mov
push
xchg
jmp
cmpsb
insl
bound
movsb
mov
xor
jnp
adcl
xor
cmpsl
cmc
repnz
shlb
mov
push
std
cmp
inc
loope
jae
mov
call
pop
xchg
xchg
xchg
and
cmp
imul
and
xchg
lret
add
cmp
mov
mov
or
dec
outsb
jb
outsl
jae
mov
stos
mov
sbbb
add
cmc
dec
xchg
mov
je
mov
sub
es
push
sbb
mov
nop
repz
pop
out
psubusw
in
jno
jb
fcomps
and
cmpsl
adc
imul
cmp
push
jg
adc
push
dec
dec
pop
lahf
sub
insl
int
cwtl
dec
test
jbe
int
scas
push
push
jae
mov
cmpsb
lods
out
andb
jae
sbb
bound
sbb
sub
push
jge
rorb
mov
inc
jl
or
das
xchg
or
rcr
in
cwtl
sahf
inc
mov
jno
and
sbb
cmpl
loope
in
cmc
inc
and
outsl
adc
cmpsb
out
rclb
inc
rorl
aad
out
adc
rorb
mov
or
ret
aad
push
stos
dec
rcll
mov
out
or
nop
call
dec
add
outsb
call
dec
mov
filds
sub
das
or
daa
pop
outsl
rorl
push
or
ficompl
divb
sbb
test
dec
aas
call
aaa
xchg
popa
and
fimull
push
jbe
rcrb
or
push
jb
dec
icebp
mov
sub
cmp
or
clc
push
es
adc
mov
ficoml
sub
pop
enter
movsl
testb
call
push
xor
fimull
adc
adc
push
sub
cmpsb
test
in
push
push
or
mov
xor
addl
ret
push
cwtl
mov
dec
dec
lret
or
sbb
dec
std
repnz
jge
aaa
mov
mov
cs
or
fnstenv
cmp
mov
subl
ret
jno
aad
xor
cwtl
adc
sti
test
pop
stos
mov
cwtl
std
sbb
mov
pusha
inc
fnstcw
inc
dec
pop
xor
push
loope
jnp
mov
xchg
and
daa
mov
mov
or
in
pusha
nop
dec
pop
fsubrs
leave
rcll
sahf
ja
and
out
push
enter
addr16
xor
push
or
xchg
test
xlat
std
cmp
xchg
sbb
adc
fs
repz
sbb
movsb
clc
pop
scas
imulb
ss
push
out
dec
mov
and
gs
mov
and
dec
test
adc
jl
cmc
mov
xchg
ror
dec
push
and
bound
inc
xor
dec
rorb
fstpt
sbb
xchg
adc
sahf
adc
and
mov
and
jbe
shrl
xchg
fs
or
lods
cwtl
or
js
clc
int
cs
adc
mov
pushf
cs
add
stc
pop
pop
adc
icebp
loop
mov
dec
jns
int3
mov
lret
xor
in
enter
repnz
cwtl
pop
pop
loop
repz
add
gs
pop
sbb
xchg
rcr
dec
jno
ljmp
ja
mov
ja
pop
sbb
cmp
push
or
mulb
fnstcw
cmp
movb
mov
and
mov
test
stc
jns
mov
or
sbb
bound
andb
mov
lret
test
dec
xchg
pusha
mov
xchg
fisubrl
fnstenv
add
mov
nop
fcoml
mov
test
push
add
aad
loopne
shl
out
std
fstpl
jp
fcmovu
add
and
push
lea
sbb
push
pop
xchg
pop
push
ds
test
popl
ss
add
dec
xchg
or
push
out
adc
lcall
xor
xchg
xchg
fldcw
jb
mov
inc
jno
js
xchg
xchg
das
outsb
push
push
sub
or
push
orl
mul
mov
dec
mov
dec
mov
xchg
cli
xor
ss
cmpsb
and
cld
loope
dec
cmp
out
test
push
push
popf
sub
inc
pop
mov
out
fdivrs
cmp
push
jp
push
fs
push
dec
pop
icebp
lock
pop
lds
jmp
fmull
clc
test
div
vptestnmd
call
pop
mov
xlat
daa
shll
add
xchg
jno
xor
or
cltd
in
clc
mov
mov
xchg
leave
cmpsl
jmp
pop
push
jns
js
mov
mov
pop
jne
add
lcall
jb
fxch
scas
data16
fcoms
dec
mov
cwtl
mov
loopne
adc
ret
dec
add
lds
sbb
sbb
rcll
in
repnz
mov
int3
stc
out
pushl
rcrl
inc
or
int
rclb
fistpll
xchg
fdivs
mov
and
rcl
notb
sar
push
jg
lret
out
and
sub
sub
addr16
scas
mov
outsb
mov
push
add
dec
cld
sub
popf
mov
movsb
mov
aam
and
movsb
add
pop
lret
fisubl
and
lahf
loopne
push
cmpsl
jnp
pusha
xor
mov
mov
mov
and
or
jae
dec
rolb
pop
dec
fcoml
mov
dec
aad
sbb
cwtl
hlt
andl
push
mov
jo
es
cmp
ss
jae
mov
iret
mov
fbld
mov
in
inc
arpl
aad
pop
sub
mov
jne
mov
cmpsb
out
push
xor
push
enter
lcall
ret
xchg
dec
push
aaa
cld
enter
pop
dec
jno
push
xchg
push
add
loop
push
fs
stos
pop
inc
sbb
sbb
sbb
lods
push
adc
mov
notb
insl
sbb
jbe
out
mov
jae
fdivs
das
sbbl
loop
adc
mov
jno
xchg
mov
pop
xor
aaa
or
jmp
scas
es
adc
out
xchg
pop
cmp
lcall
shlb
gs
dec
mov
mov
dec
jae
es
aam
adcl
shll
mov
imul
and
dec
mov
insl
out
fldl
adc
adc
lea
mov
ss
mov
add
mov
movsw
mov
fisttpll
jnp
int
dec
scas
leave
lods
push
adc
cmp
lods
adc
sub
adc
sub
push
mov
incl
ss
imul
pop
push
xchg
insl
xchg
dec
sub
mov
xor
pop
pop
loopne,pt
shrl
jnp
stos
adc
hlt
pop
cwtl
data16
aad
dec
and
add
mov
pop
lea
adc
fisttpll
faddp
or
mov
push
xor
imul
scas
lret
stos
ret
icebp
sbb
sub
dec
into
add
insb
inc
data16
sub
imul
mov
jno
xchg
inc
jecxz
mov
or
mov
test
icebp
adcl
aam
pop
adc
pushf
in
loop
divl
repnz
test
jecxz
xor
fsubs
into
in
mov
adc
movsb
or
leave
aad
hlt
inc
lds
dec
pop
repnz
outsb
repnz
fdiv
mov
mov
fnstenv
loope
mov
icebp
sub
adc
in
xor
fstl
xorl
je
add
xchg
inc
lea
push
dec
add
mov
and
push
dec
test
dec
stos
mov
jle
push
push
pop
pop
out
lret
lcall
sub
cmp
jbe
sbb
pop
adc
adc
out
into
fstps
adc
inc
or
dec
imul
xchg
rcll
push
shll
popf
xor
shl
adc
icebp
xchg
rcr
pop
mov
pop
mov
sbb
std
shll
stos
jae
add
mov
out
dec
xchg
pop
adc
pop
mov
jmp
iret
mov
lods
idivb
dec
int
nop
sbb
and
mov
shl
shll
lds
lret
clc
fmul
mov
jge
inc
sub
jl
mov
lcall
pop
loop
dec
in
mov
std
jmp
jae
bound
shl
sub
mov
in
sub
mov
in
out
dec
push
lahf
pusha
pop
test
push
mov
in
cmp
arpl
inc
lcall
push
adc
pusha
insb
adc
xchg
mov
mov
mov
cmp
dec
outsb
mov
aas
adcb
int3
in
int
in
mov
and
gs
xlat
mov
xor
jp
pop
int3
mov
sbb
jo
jg
xor
xorl
add
cmpsl
mov
outsb
or
fstl
mov
fmuls
or
mov
and
pop
fistl
mov
or
mov
push
sub
xlat
sub
pop
jmp
lock
or
repnz
into
mov
data16
push
mov
je
and
and
xchg
dec
sub
adc
in
push
das
cmc
hlt
dec
js
rcrl
rorl
aaa
xchg
adc
cwtl
rclb
mov
and
test
dec
pop
js
adc
add
or
jge
aam
push
sub
xor
mov
sbb
jl
jmp
jmp
or
xchg
push
add
mov
addr16
mov
inc
mov
push
movsl
insl
rorl
sub
pop
pusha
inc
or
xchg
test
jp
int
cmp
push
dec
into
mov
push
cwtl
inc
clc
pop
pop
jbe
push
jecxz
jbe
xchg
jecxz
jbe
pop
jecxz
gs
ficompl
mov
cmp
jb
cmp
push
mov
cmpsl
sbb
pop
scas
cmc
xchg
repnz
fmul
pop
inc
enter
pop
jo
ret
aam
ret
in
cmc
repnz
push
jecxz
test
pop
bound
sbb
insl
roll
jmp
icebp
int
mov
sub
in
and
fistps
popf
lret
pop
and
out
imull
mov
in
xchg
and
xor
sahf
gs
mov
xchg
add
push
push
mov
or
mov
shll
sbb
lret
mov
xchg
add
sbb
xchg
inc
leave
out
sbb
daa
rcrb
push
arpl
cmc
pusha
not
mov
inc
mov
shl
jb
inc
call
adcb
inc
xchg
pop
rcll
outsb
mov
stos
push
or
mov
inc
xor
lcall
in
mov
in
icebp
loope
add
add
call
add
mov
dec
pop
and
in
pop
jge
push
xchg
mov
inc
push
mov
loope
adcb
or
inc
jle
mov
cmc
enter
aad
inc
pop
sub
call
movsl
push
mov
icebp
jge
out
mov
outsb
sub
jae,pt
mov
lret
jnp
or
enter
test
pop
dec
mov
jmp
test
mov
sub
xchg
mov
cmpsb
dec
mov
pop
jne
int3
add
dec
xchg
jnp
icebp
push
or
lock
add
or
sub
dec
sarl
scas
shlb
sub
aad
push
orl
or
aas
call
shll
and
sahf
add
popa
sbb
cmc
mov
push
pop
mov
popf
mov
sbbl
push
mov
xorl
mov
xor
adc
ds
mov
add
or
lods
fwait
mov
testb
add
dec
clc
pop
pop
nop
bound
ret
rolb
das
add
push
dec
outsb
sahf
pop
pop
push
mov
mov
push
mov
lcall
and
lods
and
mov
pop
add
add
dec
popa
mov
mov
shll
call
push
insl
into
inc
mov
scas
mov
mov
notb
adc
mov
sbb
aad
add
aas
mov
movsl
xor
pop
jne
bound
iret
jge
push
mov
sub
cmc
imul
adc
mull
add
int
push
js
stos
int
push
jne
loope
sub
mov
cmp
imul
sbb
jecxz
ss
push
movsl
in
sahf
scas
adc
in
mov
cmpsb
push
xchg
mov
push
dec
and
push
daa
cmp
push
outsb
sub
loopne
dec
data16
fstpl
fdivs
add
mov
sbb
adc
rclb
jl
xchg
mov
pop
outsl
in
and
sub
hlt
mov
jge
in
sahf
nop
add
lahf
aaa
push
sarb
in
xor
not
test
fs
aad
in
sub
or
je
add
cmp
dec
push
push
push
xchg
std
dec
inc
shl
push
push
imul
push
push
xchg
add
adc
lea
lds
mov
and
dec
pusha
adc
and
cwtl
into
xor
pop
jbe
or
dec
dec
dec
xchg
enter
xchg
adc
test
nop
pop
iret
inc
push
jno
gs
leave
xchg
mov
stos
mov
push
sub
idivl
pop
popf
mov
sbb
adc
add
sbb
rolb
xor
jb
shlb
push
mov
aad
cmp
testb
arpl
xchg
int3
adc
xchg
adc
pop
mov
push
sahf
dec
add
lea
mov
stos
popa
xorb
lods
lea
repnz
enter
addr16
loopne
lods
sbb
pop
mov
push
repz
call
call
adc
enter
mov
push
mov
xchg
and
inc
dec
mov
cwtl
pop
and
mul
aad
adc
mov
dec
xor
adc
push
lret
daa
cld
push
adc
call
push
mov
aad
dec
out
mov
xchg
mov
or
js
lods
leave
or
jge
lret
repnz
iret
and
push
fxch
call
ja
xchg
sub
or
jb
std
push
inc
outsl
movups
std
and
int
stos
iret
xlat
int3
adc
sahf
outsl
and
in
adc
sbb
mov
mov
push
pop
shlb
push
testb
out
icebp
fcompl
mov
out
inc
sub
lods
aad
lcall
inc
push
mov
loop
push
imul
pop
out
lods
cli
out
adc
xchg
adc
sub
xchg
sahf
jle
sub
add
pop
aad
push
aad
xchg
es
clc
mov
sarl
sbb
mov
pop
loopne
mov
inc
ret
dec
xchg
clc
mov
xchg
inc
pop
aad
push
jmp
andb
dec
leave
outsb
adc
xchg
mov
sub
popf
out
call
mov
or
in
pushf
mov
mov
dec
dec
mov
sbbb
adc
fnstsw
mov
mov
mov
lret
add
imul
or
scas
sub
push
lret
nop
push
jle
cs
push
pop
scas
mov
mov
out
mov
jg
xlat
loope
push
jae
into
testb
pop
ds
pop
js
cwtl
mov
push
test
call
in
iret
mov
scas
lds
sub
out
xor
push
fnstenv
push
aam
and
aam
mov
push
dec
jg
pop
xchg
pop
call
adc
xlat
pop
and
or
rorl
pop
push
mov
cmp
std
cmp
insl
inc
push
xor
es
mov
cmpsl
jmp
mov
xor
out
xor
scas
pusha
cld
pusha
cmp
cwtl
aam
jno
lods
jecxz
es
inc
dec
xchg
ficoml
mov
sbb
subl
add
xchg
sub
mov
ljmp
adc
inc
adc
and
jb
mov
xchg
push
sub
pop
xchg
popa
pop
mov
gs
int
dec
xorl
pop
push
lea
push
jno
inc
push
hlt
out
rcr
in
xchg
and
iret
pop
cltd
pop
dec
sbb
lods
cld
add
push
fsts
stos
adcl
fcmovu
or
xchg
dec
sub
mov
and
cmp
mov
cmpsb
push
cltd
xchg
hlt
push
in
xchg
sbb
add
ret
or
pop
pop
jg
dec
xor
fcompl
push
cmc
ds
ret
inc
hlt
movsb
imul
mov
pop
jb
sbbl
lret
inc
xchg
aaa
pusha
or
shll
or
std
dec
pop
jne
jmp
adc
sub
in
aam
int
jl
jmp
or
xchg
fnsave
mov
cmp
xchg
mov
in
xor
xor
loope
mov
cmc
repz
push
aaa
dec
bound
mov
loope
or
xchg
xchg
sub
loopne
dec
mov
mov
adc
jp
ljmp
fmuls
sbb
in
push
mov
sahf
ror
xlat
dec
ds
das
gs
fstp
ja
mov
jno
call
xchg
or
rorl
push
call
mov
cli
sub
out
pop
push
mov
mov
jae
stos
dec
and
sub
add
js
or
push
pop
jmp
pop
adc
aam
or
fnsave
fs
je
add
mov
shrl
push
sahf
push
out
xchg
aaa
and
movsl
jbe
out
dec
ja
inc
mov
pop
sbb
xchg
pop
xchg
mov
nop
and
cmp
or
xchg
jl
leave
or
cmp
pop
inc
daa
dec
fsubs
aam
mov
xor
pushf
lret
push
aam
nop
out
xchg
and
int
lahf
scas
mov
mov
call
jne
aas
mov
insl
mov
mov
addr16
or
sbb
aad
rol
daa
jnp
lds
xchg
mov
gs
xchg
add
xor
dec
pusha
jmp
fmuls
out
add
mov
stc
or
mov
pop
sbb
loope
xchg
mov
fsubl
jle
push
loope
ret
or
out
js
dec
xor
and
mov
call
push
lret
rclb
lret
cli
and
push
inc
fstpt
out
pop
out
aaa
push
call
xchg
jecxz
dec
pop
push
ret
push
sbb
xchg
dec
insl
adc
push
cwtl
mov
sarl
adc
fbld
push
sub
push
push
push
dec
out
xor
loope
or
inc
mov
lcall
mov
cwtl
jns
fs
jae
cli
sbbl
xor
xor
mov
sub
aaa
mov
adc
ds
vphadduwq
in
lock
xor
cwtl
std
popa
push
push
pop
fsubrl
ljmp
sbb
pop
inc
dec
jg
xchg
in
xor
lock
int
dec
and
cltd
add
adc
sbb
mov
or
loop
dec
lods
andnps
fimuls
gs
pusha
popa
es
inc
push
push
adc
aas
pop
idivl
fiaddl
add
out
sub
jbe
dec
mov
sub
out
shrl
add
arpl
xor
enter
sbb
push
xor
push
pop
xlat
inc
testb
nop
pop
pop
cmp
fisttpll
xchg
pop
xchg
fiadds
dec
and
cmp
adc
dec
pop
and
dec
inc
inc
shl
mov
push
pop
test
rclb
je
xor
loope
loop
data16
rolb
je
fdivrl
cltd
call
xor
push
nop
fcoml
xchg
mov
xor
jbe
xor
mov
out
shlb
inc
out
mov
and
es
pop
cmc
pop
adc
out
jp
cmp
jno
push
mov
aad
sbb
pop
hlt
adc
fadds
in
movsl
xchg
xchg
cmp
push
cmc
jg
xchg
pop
lods
push
mov
scas
xchg
dec
loope
jb
xchg
addr16
xor
xlat
mov
jge
push
pop
pusha
lock
mov
loop
jae
xlat
push
and
jmp
scas
movsb
notl
movsl
pop
xchg
roll
dec
pop
add
shl
add
rol
and
xor
mov
dec
fstl
xchg
ds
mov
pop
mov
sbb
mov
stc
fucomi
negl
and
and
enter
jl
je
sarl
add
mull
inc
mov
cmp
fnsave
jmp
sbb
and
neg
or
aam
aas
idiv
mov
in
vmread
and
mov
sahf
jb
decb
in
jbe
push
or
push
sbb
mov
cmc
gs
xchg
cmp
in
adc
repnz
or
clc
ret
xchg
dec
mov
dec
popf
inc
pop
add
aad
in
out
cmp
in
dec
mov
inc
in
add
orl
cmpsl
bnd
dec
repz
cmp
sbb
loope
gs
pop
mov
xchg
pop
out
imul
sub
push
mov
ja
popa
xor
push
stos
daa
xor
fcoms
ret
dec
rcrl
cmp
jge
xchg
dec
in
add
xchg
out
lods
out
sub
adc
add
rol
andb
loope
emms
pop
mov
les
and
aas
dec
xlat
or
mov
xor
dec
push
sub
rorb
arpl
loop
lcall
mov
cmp
int
pop
out
push
pop
out
mov
or
push
mov
rcl
xor
in
shll
jmp
rcll
pop
fisubrs
sahf
cli
loope
jmp
shlb
pop
outsl
xchg
or
out
loopne
and
iret
mov
push
stos
or
scas
xor
xor
and
out
jnp
cmpsb
sahf
add
pop
lods
dec
aad
mov
ds
inc
js
int3
push
mov
xchg
push
adc
or
mov
jp
fisttpll
push
pop
mov
inc
push
dec
dec
shlb
inc
pop
sub
jae
xchg
dec
scas
sub
xchg
pushf
inc
sbb
push
shlb
jg
sbb
dec
aas
adc
loop
adc
aas
push
fistps
jno
out
enter
jl
xchg
and
je
xor
dec
cld
mov
in
dec
xchg
or
adc
xchg
push
arpl
in
and
dec
and
sahf
insl
das
or
cmp
ret
cmp
sbb
jg
outsl
or
inc
fwait
jge
testb
pop
mov
loop
push
dec
notb
add
sbb
repnz
test
dec
out
xchg
loope
mov
pop
aad
pop
fcom
inc
lcall
sarl
push
inc
test
movsb
xor
xor
pop
in
aam
sbb
mov
out
fadd
and
mov
push
out
aad
sbb
loope
or
xchg
push
ljmp
adcl
clc
ss
or
xor
test
adc
lds
cmp
xchg
lcall
and
into
inc
sahf
out
cwtl
out
jmp
jl
fisttpl
inc
inc
hlt
push
push
fiadds
mov
int
lahf
in
add
data16
xchg
outsl
mov
and
mov
call
into
sbb
pop
add
dec
mov
imul
inc
insb
dec
mov
int
inc
push
jp
jmp
outsl
int
xlat
pop
dec
mov
pusha
lret
or
dec
adc
pusha
data16
stos
and
sbb
movsl
js
dec
sbb
sub
fisubl
xor
popa
movsb
jecxz
es
and
imul
dec
push
insl
jg
sti
push
push
and
adc
jnp,pt
or
out
inc
dec
in
cs
dec
shlb
cmp
or
xor
sbb
in
jnp
leave
mov
or
push
pop
pop
dec
shlb
fst
test
out
hlt
loopne
adc
pop
negb
mov
push
imul
lock
test
cwtl
aad
dec
rclb
pop
or
jge
xchg
adcl
aas
sahf
aad
fcmovnbe
lret
mov
loopne
lret
ljmp
mov
cmp
dec
jae
xor
rorb
adc
push
pop
xchg
pop
js
lods
push
adc
out
pop
or
adc
mov
push
outsb
pop
mov
clc
push
rolb
mov
jmp
mov
adc
xchg
xchg
inc
out
push
inc
mov
jge
mov
pop
sbb
int3
ds
icebp
add
adc
mov
jmp
mov
pop
pop
mov
cli
sbb
push
inc
ret
int
push
outsl
cmp
dec
mov
and
insb
mov
xchg
aam
sbb
push
or
dec
dec
fildll
mov
jmp
add
push
popa
cmp
inc
cmpsb
xor
jge
cmc
cwtl
push
sti
int3
scas
iret
adc
mov
inc
lea
sub
mov
push
data16
dec
les
sub
cmp
inc
lea
mov
int
int
mov
and
test
es
mov
or
push
jle
cmp
sub
aad
inc
jae
lea
adc
cwtl
out
or
inc
enter
out
or
push
outsb
pop
pushf
xchg
cmp
sbb
popf
sub
js
push
jno
int3
pushl
inc
pop
out
enter
out
pop
test
mov
ljmp
out
aad
pop
fiadds
dec
inc
cmp
pop
xchg
rclb
push
push
push
adc
shll
inc
data16
adc
cltd
mov
ss
xchg
mov
lret
icebp
cli
movsl
sarb
xlat
xchg
xchg
test
xchg
das
lds
movsl
popf
push
sbb
lret
sti
jno
pop
push
lods
pusha
aad
push
xchg
dec
jne
add
xchg
cmpl
mov
stos
dec
int3
insl
int
dec
sbb
repnz
jbe
sti
fistl
repnz
cwtl
je
or
jb
add
fcoms
test
xor
or
sti
sub
xchg
ds
gs
adc
in
out
shll
pop
dec
pop
lea
dec
test
dec
test
adc
push
or
adc
cmc
je
and
adc
cmp
stos
jl
and
pop
fimuls
stos
imul
inc
add
xchg
jl
testb
rclb
xchg
adc
jecxz
lds
ret
cld
sbb
out
cmp
out
int
testb
mov
out
gs
cmpsb
adc
movsl
out
addr16
push
and
ret
int3
inc
sarl
in
mov
dec
int
fldcw
inc
pop
fidivl
adc
cwtl
cmp
xchg
jae
rorl
leave
inc
mov
out
ret
adc
jbe
adc
sar
pop
inc
xchg
pop
enter
addr16
ficompl
pusha
loope
cmp
and
insb
aad
add
sub
fcoms
pop
subl
pop
push
mov
pop
dec
push
xlat
dec
and
or
jle
adc
jnp
gs
shl
data16
rcl
aam
mov
push
jns
bound
insl
add
mov
pop
mov
negb
xor
or
xchg
adc
push
call
stc
sbb
fldl
popf
test
outsb
imul
fwait
jp
mov
mov
ret
mulb
pop
inc
imul
mov
testl
cmp
aas
lret
dec
ljmp
sahf
push
js
incb
xchg
ja
pop
rolb
fninit
rol
push
dec
adc
fdivrs
jb
pop
iret
sub
loope
sub
sbb
popf
sub
insw
or
out
rorb
or
push
dec
or
mov
pop
popf
pop
sub
mov
pusha
lds
xlat
push
push
xchg
xor
call
adc
and
push
daa
in
mov
mov
dec
push
xchg
cmp
pop
mov
xchg
stos
out
call
mov
insb
fldcw
ds
fimull
leave
adc
repz
push
bound
mov
mov
shll
dec
mov
mov
fcom
sub
sbbl
fsubs
mov
push
dec
test
mov
push
mov
adc
dec
push
or
cmp
adcl
call
fistl
fst
rclb
adc
shrb
stos
mov
imul
or
sbb
pop
push
or
hlt
movsl
jb
icebp
pusha
pushf
je
or
es
insb
mov
mov
sarb
stos
testb
mov
and
fwait
add
adcb
or
out
lret
adc
push
ret
xchg
stos
pop
jmp
mov
ss
dec
icebp
lahf
add
andl
push
push
pop
mov
ret
sub
pop
mov
adc
cltd
xor
xchg
rcr
into
pop
sahf
add
xor
ss
add
inc
sbb
nop
inc
daa
mov
repz
adc
jmp
xor
stc
test
mov
mov
and
into
loopw
std
bound
sub
push
in
outsl
out
dec
ljmp
push
ret
decb
sti
pop
scas
xchg
mov
push
inc
jno
imul
gs
lods
pop
and
xor
lahf
enter
jnp
cmp
scas
icebp
mov
or
iret
cmpsb
lahf
pop
cmp
push
push
xor
mov
stos
adc
add
int3
movsl
popf
or
jp
ret
cmp
mov
add
inc
lds
data16
adc
ds
cwtl
jge
lods
iret
cltd
fs
pop
neg
jae
xchg
lret
psubsw
roll
xchg
pushf
push
sub
dec
xchg
dec
adc
dec
xchg
mov
adc
dec
test
enter
cbtw
adc
push
lds
adc
cwtd
xlat
fstl
sar
mov
icebp
pop
loope
out
addr16
mov
sub
leave
add
push
leave
adc
pop
add
mov
pusha
enter
xor
lds
or
pusha
rorl
aaa
xor
add
mov
adcb
push
jbe
add
jnp
xchg
push
or
stos
xor
mov
icebp
adc
pop
jae
or
shll
in
add
inc
outsl
mov
xchg
mov
nop
mov
sbb
xchg
iret
rcr
adc
mov
shll
mov
icebp
xchg
push
pop
mov
icebp
sub
pop
add
fdivl
mov
add
push
adc
ljmp
push
aad
add
into
push
dec
push
call
pusha
xchg
or
lret
jbe
cs
loop
das
xor
xchg
jge
xor
mov
test
inc
lods
mov
pusha
scas
dec
pop
mov
out
xchg
dec
adc
lret
mov
push
aad
in
mov
pusha
mov
push
xor
out
arpl
pop
hlt
js
test
jno
or
jb
pop
xchg
pop
es
stos
xchg
xchg
dec
cmp
sub
sti
xchg
sub
sbb
out
mov
fs
leave
movsl
jg
adc
lcall
sar
dec
pop
dec
adc
repz
adc
and
fwait
xor
push
pop
out
push
inc
pop
mov
jg
inc
in
xchg
mov
dec
xchg
data16
hlt
lret
repnz
or
add
fldenv
nop
mov
add
bound
clc
loop
cs
xchg
pop
mov
mov
aam
pop
mov
dec
push
sarb
mov
aam
fstpl
push
push
loope
xchg
sbb
clc
jg
stc
and
es
shl
mov
inc
subl
fs
outsb
jmp
xor
mov
mov
lret
xchg
push
shrl
paddq
roll
inc
adc
adc
shlb
lahf
stos
aad
cmp
and
leave
into
test
out
call
and
dec
jno
cmp
mov
push
adc
loope
dec
cltd
out
icebp
icebp
stos
mov
shl
adc
fsubs
push
xchg
adc
xor
mov
int
clc
adc
cltd
dec
js
mov
aam
pop
jne
push
cmp
test
popa
mov
sbb
push
inc
addr16
fimuls
pop
pop
adc
and
loopne
cwtl
push
negb
sbb
repnz
lods
shrb
xor
mov
mov
lods
in
pop
and
js
push
rcrl
dec
mulb
adc
fmuls
ds
or
mov
jbe
cs
push
inc
aam
or
test
and
mov
mov
dec
jle
popl
lea
orb
or
adc
xchg
push
int3
test
and
add
cwtl
cwtl
mov
es
shl
cmpsl
and
das
xor
imul
in
jbe
add
xchg
and
test
shlb
sub
inc
pop
dec
lods
mov
aad
mov
insb
jecxz
mov
fidivs
xchg
push
sub
sub
or
cmp
popa
dec
dec
out
fwait
out
ss
mov
jmp
jecxz
imul
sub
aad
or
iret
push
xchg
cltd
flds
loope
daa
ja
ja
rolb
sub
ffree
mov
mov
adc
sbb
or
lock
pop
jle
fstpl
jmp
xchg
in
sub
adc
cmpsb
aad
lcall
dec
rcll
or
aam
dec
mov
push
push
imul
push
movsl
adc
mov
repnz
out
or
rorl
add
sub
iret
aas
mov
shlb
push
nop
out
ds
mov
adc
imul
fcom
mov
cmp
rcr
dec
xchg
pop
orl
push
imul
jb
push
and
jbe
call
shll
mov
xchg
push
pop
sub
clc
js
popf
push
fcoms
xor
xchg
rorl
add
shll
mov
leave
loop
std
jl
mov
lahf
movsb
inc
ret
divl
cmc
adc
icebp
jo
shll
jl
and
aad
dec
inc
movsl
pop
out
push
mov
fisubs
shll
mov
add
inc
clc
lret
fcoms
aam
mov
jg
scas
mov
hlt
push
test
mov
cmpb
push
bound
add
adc
sbbb
rcr
and
push
fidivrs
shrb
mov
fstpl
rclb
repnz
subb
pop
xor
xorb
into
pop
push
and
cmpsb
es
and
mov
sahf
scas
sbb
mov
push
out
pop
sub
popa
cmc
jmp
in
aam
push
shl
pop
ss
mov
seta
mov
aaa
stos
cmp
or
ret
mov
repnz
lahf
je
aad
sahf
jno
or
fisubrs
push
outsl
imul
cli
aaa
mov
xchg
scas
pop
jae
in
shll
jo
sub
xor
jae
aaa
in
fcmovbe
out
sbb
lret
js
stc
inc
lds
fildll
jbe
cwtl
mov
jmp
imul
xchg
push
lret
inc
dec
xchg
mov
sbb
cmp
inc
mov
dec
popa
jle
aad
and
mov
xor
add
test
push
sbb
pop
sbb
clc
xchg
inc
xchg
pop
test
pop
imul
xchg
mov
scas
sti
fbstp
test
fnstsw
and
mov
mov
gs
cwtl
push
xchg
stos
andb
fwait
cli
sub
stc
mov
imulb
jb
cli
fcoms
setle
int
push
xor
dec
bnd
inc
orl
arpl
unpcklps
xor
mov
or
xor
insl
clc
sbb
mov
jb
scas
mov
push
call
push
and
pop
ret
in
repz
fcoms
sbb
mov
adc
gs
and
loope
dec
addr16
popf
icebp
ror
fimuls
cmpsl
shll
xchg
dec
jb
int
cmpl
addr16
mov
xchg
sarb
inc
push
in
push
push
loope
push
cmpsl
filds
dec
mov
push
call
or
int
bswap
xchg
jno
or
mov
popa
int3
adc
pop
or
push
cmp
mov
xchg
push
xchg
mov
cmc
daa
jae
pop
lret
inc
stc
push
sbb
or
pusha
adcl
ss
scas
daa
imul
imul
add
loope
cwtl
or
data16
xor
xchg
call
or
pop
ljmp
pusha
mov
mov
cs
addr16
loopne
xlat
in
inc
mov
dec
adc
adcb
xlat
push
or
loope
mov
adc
pop
shlb
push
add
aad
lret
in
push
pop
dec
jae
nop
jnp
das
cmp
sub
data16
mov
cmpsb
lret
pop
fmuls
cli
and
shrl
lock
or
cmp
test
test
int
stos
dec
loopne
xchg
mov
mov
mov
adc
xor
jmp
cmc
adc
jl
sbb
pop
ja
add
mov
shrl
dec
mov
call
insl
mov
or
inc
pop
jnp
push
push
cs
pop
scas
fstps
or
add
in
sub
in
jo
adc
out
lods
jns
adc
stos
mov
insb
jg
popa
cwtl
dec
lcall
mov
and
add
dec
jo
push
decl
hlt
adc
push
mov
add
cmp
mov
out
ss
rcll
inc
jg
cmp
int3
jne,pt
outsl
pop
in
out
xchg
push
cmp
xor
mov
jecxz
push
repz
lock
xor
mov
pop
lea
jne
mov
pop
sahf
lea
jb
pop
jnp
mov
push
addr16
popf
call
mov
jo
jle
inc
sub
pop
popf
push
cmp
lds
sub
test
sbb
nop
fmuls
mov
outsb
jle
push
dec
add
jmp
movsl
or
xor
sbb
es
loope
clc
xlat
cli
mov
mov
push
cld
mov
dec
mov
or
lret
es
cmp
dec
es
xor
ret
stos
xor
inc
push
mov
cmp
pop
dec
out
dec
sti
mov
cli
mov
sbb
push
xorl
je
mov
lods
xchg
sbb
iret
xchg
dec
push
repz
and
popa
nop
dec
fisttpl
pusha
repnz
dec
adc
pop
pop
jae
pop
repnz
bound
and
fsub
mov
adc
outsb
test
andl
cmp
gs
mov
stos
xor
out
lret
push
dec
lods
mov
call
fwait
xorb
cmc
shr
cmp
shl
icebp
push
xor
dec
add
outsl
jle
or
js
and
mov
jl
in
inc
pop
dec
pop
jne
add
std
cmpsl
and
gs
into
test
xor
sub
push
adc
mov
push
dec
insb
mov
aad
test
adc
adc
cmp
leave
enter
shll
insb
icebp
rorb
out
push
and
adc
and
sub
aad
lea
faddl
pop
aam
mov
jae
jmp
lret
dec
inc
adc
fbstp
jae
xchg
pop
push
adc
adc
mov
cmc
jge
sarl
and
add
es
inc
xor
xorb
inc
jae
popf
loopne
pop
imul
sub
sub
shl
std
aam
ja
ror
sub
fstps
push
andb
stc
jge
imul
not
gs
ds
xor
test
out
addr16
sahf
inc
in
pusha
lret
mov
dec
mov
les
xor
or
aaa
mov
cmp
lock
cmc
jle
adc
push
inc
andl
pusha
mov
lds
push
mov
xchg
xchg
jg
sbb
mov
jno
test
pop
outsb
push
xchg
in
adc
xor
rorb
xlat
xor
fwait
insl
jb
sbb
lds
mov
xchg
aad
jne
sub
inc
push
xchg
push
inc
aas
icebp
mov
fcom
scas
negb
jnp
adc
not
mov
dec
int3
ret
out
shl
inc
xchg
and
subl
ds
push
push
aaa
aaa
sbbl
aam
mov
sti
in
scas
sub
jg
mov
out
add
fs
mov
stos
fistps
dec
rcrl
inc
add
or
nop
pusha
cmc
sbb
out
mov
call
fmul
xlat
dec
into
subb
aad
in
testb
mov
subb
push
mov
xchg
in
xchg
rorb
adc
or
xchg
aad
dec
adc
in
push
in
aad
mov
lock
or
ficomps
pop
cmc
subl
jbe
pop
enter
mov
inc
push
jl
pusha
inc
sbb
out
fidivrs
std
mov
scas
sbb
jno
cwtl
int3
popa
sbb
push
or
js
xlat
sbb
xorl
adc
xchg
push
or
inc
call
dec
adc
add
cld
push
adcl
sbbl
imul
sub
ja
cmpb
add
cmp
cld
aas
lock
mov
push
xorb
xchg
loopne
in
enter
cli
roll
lea
dec
jb
dec
mov
fistl
xor
leave
aaa
dec
push
in
xchg
xchg
les
popf
mov
dec
xchg
pop
shlb
sbb
lret
das
lea
dec
jb
xchg
dec
imul
push
or
rcl
fstp
mov
aad
flds
dec
notb
imul
push
or
jg
imul
in
cwtl
movb
xchg
or
rcr
jnp
mov
jnp
stos
adc
bound
pop
ss
mov
mov
dec
push
adc
dec
call
cmp
lret
xchg
adc
mov
imul
xlat
pop
push
push
xchg
jg
iret
cmp
xchg
add
aam
adc
repnz
dec
xchg
pop
roll
adc
xchg
xchg
sahf
mov
pop
in
in
jb
mov
sub
fdivl
pop
daa
stos
mov
pop
push
es
cmpsb
cs
int
lcall
mov
add
mov
push
push
push
pop
in
fisubrs
dec
frstor
jecxz
pop
std
pop
and
jp
cltd
mov
rorb
push
pop
mov
mov
mov
out
mov
jle
lret
cld
aam
push
push
mov
lods
aam
in
mov
movsl
aad
push
rcrl
push
adc
sarb
or
mov
sbb
dec
xchg
enter
into
lods
xlat
sbb
data16
les
adc
fucomp
mov
pop
sub
cmpsb
jmp
jne
mov
pop
xchg
mov
sbb
icebp
das
xchg
aam
push
or
sub
jae
xchg
push
sbb
inc
lret
or
xchg
dec
push
pusha
mov
mov
cwtl
mov
setae
mov
xchg
push
pusha
stos
fcomps
or
mov
jne
xlat
cwtl
xchg
push
fstl
roll
jecxz
cmp
push
aad
testb
fs
enter
ds
stos
mov
mov
enter
jle
dec
shrl
mov
adc
inc
fsts
dec
xchg
aam
jno
in
aad
shl
es
sti
mov
call
sub
xchg
push
fisubrs
mov
jno
in
int
mov
scas
out
adc
cld
js
dec
lock
jns
fildl
fldt
lods
aad
and
stos
rorb
pop
jae
es
aas
test
push
scas
leave
repz
xor
ds
push
mov
mov
jbe
testb
out
shrb
cmp
and
jb
inc
jno
mov
out
add
add
sbb
add
out
mov
mov
test
push
rorl
mov
fstpl
subb
push
jmp
lods
out
cmpsb
push
fldl
scas
pop
cmp
stos
dec
into
icebp
leave
icebp
mov
xchg
pop
outsb
dec
mov
fdivrl
push
ret
stos
in
fmuls
pop
into
daa
aad
dec
or
add
add
dec
mov
adc
pop
adcl
jne
add
push
xchg
dec
lock
inc
jae
cmp
adc
iret
fs
or
push
mov
shrb
push
inc
addl
shr
ret
adc
dec
pushf
sarb
xchg
mov
rclb
xchg
push
inc
adc
mov
cmp
pop
call
shll
test
rorb
loope
dec
pop
mov
enter
xchg
scas
and
mov
out
pop
enter
mov
push
into
aad
push
out
jg
es
cwtl
push
dec
pop
mulb
adcl
repnz
or
out
cwtl
inc
dec
daa
xchg
mov
lods
inc
test
pop
dec
fadd
jmp
call
mov
outsl
popf
sub
adc
lds
adc
cs
dec
aaa
and
push
rol
je
inc
and
push
mov
ja
fwait
sahf
popaw
andl
pop
sub
enter
gs
xchg
shll
shll
popf
jmp
inc
adc
inc
sbb
and
mov
jae
int
comiss
test
xchg
mov
into
cmp
pop
out
inc
adc
xor
mov
out
into
jp
addr16
add
aad
push
mov
rcr
cmpsb
sbb
cmp
mov
data16
push
pusha
push
push
push
push
push
push
inc
stos
rcrl
icebp
push
shll
xor
cwtl
inc
jp
orb
push
shrl
orl
std
mov
xchg
ja
mov
nop
subb
aas
or
daa
xchg
mov
cmpsl
std
or
ljmp
xchg
ds
mov
sub
push
dec
push
jbe
cmp
cmp
jbe
shlb
xchg
mov
or
jno
adc
nop
cs
fcoml
orb
sbb
loope
in
xchg
mov
movsl
and
ficomps
fadds
lods
aad
fmul
js
and
aad
into
loop
aam
mov
icebp
adc
rcll
sahf
ss
imul
and
jb
sti
or
cmp
mov
adc
loopne
or
stos
pushf
and
push
loope
clc
adc
les
fistpl
push
ljmp
cmp
into
sub
inc
rorb
aad
xchg
xor
mov
inc
imul
mov
xor
dec
jnp
in
mov
lods
xchg
cld
lret
push
es
aad
dec
mulb
dec
int3
mov
sbb
push
outsb
xchg
add
fdivs
aaa
mov
dec
push
or
xchg
xchg
out
jae
cmp
dec
sti
push
mov
or
mov
out
int3
shll
or
icebp
in
or
dec
xor
enter
adc
ja
xor
pop
aad
mov
pop
iret
loop
dec
pop
dec
fs
mov
loopne
or
mov
push
push
adc
xchg
xchg
jno
aad
lods
xor
popa
xchg
mov
js
jmp
inc
mov
xor
fcoms
leave
lods
pusha
cmp
stos
mov
or
lods
lcall
dec
rolb
scas
dec
jmp
mov
xor
sub
push
sahf
in
sbb
push
int
mov
mov
outsl
add
sarl
int3
push
mov
dec
sub
push
fwait
dec
mov
xchg
adc
ficompl
leave
icebp
mov
jecxz
scas
mov
es
and
sub
xchg
cmp
mov
or
add
push
sbb
sub
xchg
jno
fs
movsb
aam
adc
adc
dec
call
inc
xor
pop
and
pop
push
loope
mov
inc
xor
test
out
and
mov
fucom
loop
push
push
jno
shrb
jne
push
lock
inc
hlt
clc
test
pop
mov
pop
fdivl
in
mov
cs
into
stos
push
xchg
and
sub
stos
cmp
dec
adc
aad
adc
cwtl
dec
mov
xor
aad
push
lcall
adc
fcoms
ja
pushf
orb
push
xchg
decb
shlb
aam
adc
dec
or
roll
or
loope
and
jno
adc
adc
jle
fldlg2
add
out
clc
xor
movsl
jge
dec
xor
mov
movmskps
scas
adc
and
push
add
adc
mov
and
aad
popa
cld
sbb
xchg
int3
enter
shrb
in
xlat
mov
rcl
xlat
sub
xor
cmp
nop
inc
mov
aad
lods
jno
not
bound
dec
aam
dec
out
pop
lds
in
out
xchg
dec
fcomi
xor
sbb
arpl
gs
dec
cmpsb
inc
sbb
rcl
inc
lea
xor
and
cmp
lcall
int
dec
push
dec
mov
das
dec
xchg
sub
pusha
add
testb
out
leave
fsubrl
and
inc
cmpsl
test
dec
push
adc
nop
mov
in
push
jb
pop
inc
scas
rorl
sbb
cld
cld
push
push
and
test
fisttpll
and
subb
push
dec
rcrb
call
dec
mov
xor
dec
adc
dec
dec
add
addb
or
jecxz
add
test
and
jecxz
and
dec
ret
pop
dec
and
dec
mov
xchg
push
dec
dec
mov
jle
ja
ret
adc
aad
cmp
cmp
push
add
add
and
mov
mov
fsts
mov
inc
int
mov
xchg
cmp
jnp
jae
add
sub
std
icebp
pop
dec
adc
rcr
push
lahf
ljmp
cmp
test
mov
mov
xor
sub
jecxz
jbe
call
or
xchg
add
inc
stos
sub
push
push
push
or
push
pop
orb
push
adc
stos
mov
roll
dec
dec
add
dec
arpl
ljmp
pop
cmpsl
icebp
into
or
pop
in
dec
loopne
sahf
inc
cmp
int
jmp
repnz
lea
scas
cmp
scas
and
stos
notl
fcmovnu
inc
cmp
pop
xor
xor
mov
iret
daa
mov
je
adc
lret
dec
sbb
push
rcll
movsb
dec
loop
pop
lea
push
jnp
orb
jb
xchg
call
xchg
leave
adc
cli
out
lret
jecxz
mov
in
cmp
and
inc
mov
pop
mov
scas
jge
push
jge
mov
dec
inc
aas
fs
test
enter
pop
in
out
pop
test
in
xchg
scas
or
adc
shl
xchg
ret
push
or
call
jbe
lret
jno
in
dec
lret
jno
or
data16
mov
pop
rcr
adc
sbb
fistl
xor
jo
fmul
push
push
imul
out
pslld
push
mov
push
out
repz
mov
sbb
mov
sub
push
and
shll
mov
out
jo
mov
fwait
out
loope
push
mov
shrb
jb
and
gs
cmpl
call
mov
leave
add
adc
outsl
ja
push
push
je
rcll
mov
xchg
fadd
adc
mov
dec
lds
push
push
mov
xchg
loope
ljmp
outsl
dec
xor
push
popf
lret
nop
gs
lds
push
sub
add
sbb
xchg
adc
fidivrs
aam
out
test
fmuls
inc
sahf
lcall
and
cmp
arpl
test
dec
mov
and
out
je
leave
push
pushw
mov
push
or
repnz
dec
nop
jae
int
push
and
or
dec
add
xor
gs
mov
pop
popf
or
fwait
xchg
cmpsb
rcll
cmp
or
into
arpl
jbe
adc
and
xchg
int
or
sub
leave
pushf
jae
int
sbb
aam
shlb
shl
mov
mov
xchg
and
pop
js
push
add
icebp
rcrl
inc
shl
push
bound
mov
xor
filds
push
leave
dec
dec
push
mov
loopne
xchg
ss
lcall
div
call
add
movsl
rclb
xchg
repz
xlat
jb
cli
incb
out
clc
inc
test
jl
call
mov
jae
icebp
and
in
mov
pop
inc
rcrb
repnz
mov
out
mov
adc
test
jae
xor
outsl
and
sbb
leave
and
dec
mov
js
cmp
data16
and
ret
test
fs
ret
jns
and
cmpsb
mov
xchg
sahf
cmpb
inc
sub
or
dec
mov
mulb
insl
out
adc
or
in
mov
aad
mov
shll
sbb
icebp
loopne
xchg
sbbl
adc
add
out
test
mov
repnz
je
sbb
xlat
add
pop
scas
xor
mov
cwtl
test
lahf
xchg
jl
mov
insb
pop
jns
fildll
notb
jnp
sar
jb
lock
loope
inc
dec
and
or
adc
fmul
sbb
jns
idivb
pushf
enter
xchg
xor
or
mov
and
and
cmp
push
sub
lret
dec
adc
sbb
push
adcw
sarb
adc
inc
insl
jle
dec
roll
pop
and
inc
push
mov
mov
in
gs
push
add
push
test
cwtl
aad
and
mov
repnz
xchg
in
push
pop
push
inc
fdivl
int
dec
sbb
sbbb
and
aam
jecxz
jle
pop
pop
lods
bound
cmpsl
mov
adc
cli
testl
dec
test
arpl
ja
test
aad
adc
out
in
ret
xchg
cmp
add
dec
lock
mov
pop
inc
jbe
jp
data16
xchg
mov
aas
insb
rcr
xor
adc
shll
jge
push
xlat
xchg
xchg
push
mov
mov
push
repnz
enter
dec
stos
or
mov
fmuls
inc
les
out
push
adc
iret
and
adc
push
adc
cli
es
sbb
dec
adc
int
fmuls
jmp
lea
push
and
pop
push
mov
pmulhw
js
out
xchg
or
mov
cmp
or
dec
dec
mov
int3
mov
out
mov
sbb
dec
mov
mov
adc
lds
mov
mov
push
es
mov
xchg
flds
pop
adc
xchg
mov
fcomp
sub
ss
rcll
cmc
std
xchg
dec
aad
out
loope
incl
add
test
sub
push
sahf
divl
scas
pop
push
push
xchg
loope
js
test
mov
mov
in
add
dec
in
dec
add
popf
mov
adc
test
and
pop
mov
aad
mov
jnp
adc
inc
jnp
sub
jge
scas
push
arpl
push
pop
dec
je
mov
ljmp
mov
push
fsubrl
and
hlt
sbb
xchg
lret
lods
xchg
mov
pop
je
adc
xor
push
pop
ja
pop
sarl
stc
xor
push
pop
in
push
xor
xor
rolb
iret
sbb
flds
adcl
adc
sbb
cli
pop
cmp
jnp
hlt
scas
jb
mov
xor
inc
jb
jne
mov
insb
data16
mov
enter
mov
and
push
add
call
adcb
xor
outsl
fimuls
sahf
daa
pop
icebp
cmp
jae
dec
sub
inc
sbbl
mov
out
dec
cmp
xor
pop
jnp
push
aad
xchg
inc
add
not
pop
xorl
xchg
xor
mov
cli
js
mov
sub
cmc
je
mov
test
ficoml
dec
adc
sub
xchg
gs
arpl
add
mov
out
imul
jbe
push
dec
fisubl
and
popa
pop
pushf
pop
adc
loopne
sbb
xchg
push
xchg
pop
lods
sbb
pop
xor
pusha
sub
adc
dec
lahf
arpl
aam
dec
mov
notb
cmp
shrl
and
push
repnz
and
mov
jns
jnp
inc
mov
roll
jl
enter
push
mov
pop
push
pop
sarl
push
push
adc
insl
adc
mov
add
pop
xchg
adc
adcl
or
dec
cmp
ret
sbb
inc
fcoms
fmuls
sub
jge
dec
adc
loopne
lret
in
enter
push
xchg
adc
mov
ljmp
inc
xorb
popa
dec
in
push
cmp
insl
sub
call
push
sub
adc
dec
out
dec
mov
jno
dec
jmp
in
out
icebp
enter
lods
loope
dec
mov
inc
cmp
adc
and
sub
dec
dec
adc
pop
jmp
xchg
sahf
aam
cmpsl
insl
jl
in
scas
xlat
jne
adc
jo
lcall
mov
insl
sahf
movsl
xchg
in
out
loop
bound
stos
cltd
inc
ljmp
outsl
push
lret
loop
sub
mov
shl
das
push
mov
add
xchg
ja
rcrw
jg
hlt
adc
adcb
push
subb
push
xor
push
pop
dec
iret
cmpsl
xchg
cli
mov
mov
or
pop
inc
lods
jbe
mov
cmc
cmc
push
sbb
push
lods
pop
insb
push
loop
call
xlat
mov
shrl
fidivrs
nop
push
sub
adcl
dec
std
adc
lds
cmp
push
dec
push
outsl
scas
adc
ljmp
fidivl
je
or
outsl
dec
cmp
lret
aad
cs
adcl
out
pop
sbb
xlat
popf
repz
adc
fcom
dec
sbb
leave
fimull
or
jb
lret
xchg
push
aad
mov
pop
cmp
in
and
mov
das
out
test
add
enter
in
inc
push
das
icebp
xchg
in
jl
and
subl
out
cs
enter
cmp
fadd
sub
mov
jae
adcb
loope
mov
cmpsb
pop
and
or
jbe
stos
dec
stos
aas
mov
je
xchg
mov
lret
adc
lds
pop
dec
xchg
jbe
es
lods
neg
mov
adc
sub
pop
fdiv
or
mov
push
and
sub
out
popa
xchg
dec
mov
mov
dec
mov
fcomps
into
pop
popf
dec
add
int3
push
dec
cwtl
cmp
xchg
mov
repnz
push
xchg
movsl
inc
adc
inc
adc
out
sbb
dec
and
stc
add
lea
jge
jmp
sbb
sub
inc
xchg
push
xor
rcrl
jl
push
or
sbb
add
add
lret
stc
and
push
rol
fdivs
shrb
imul
adc
adc
addr16
bound
icebp
push
ljmp
push
imul
or
xchg
lds
sub
aam
mov
mov
jg
outsl
mov
pop
push
aam
loope
stos
cli
shll
mov
adc
int3
push
dec
mov
gs
push
mov
rcrb
lea
add
nop
jns
ja
insl
and
scas
adc
cmp
adc
push
aad
imulb
jmp
and
je
out
addr16
cmpsb
jnp
call
xor
adc
inc
mov
mov
shll
mov
push
loope
js
sub
pop
outsb
jb
roll
je
inc
dec
sbb
jno,pn
push
movsb
repnz
push
mov
fwait
jb
das
scas
fcomps
mov
pop
inc
lret
ds
or
mov
and
dec
bound
xchg
js
fidivl
and
inc
cmpsl
cmp
push
mov
dec
xor
mov
leave
mov
mov
jge
push
add
bound
lods
xor
xor
xor
xor
insl
hlt
cmp
xor
dec
mov
adc
cmp
jg
test
faddl
sbb
int3
shl
add
pop
jo
cltd
add
push
sarl
push
shlb
aaa
adc
push
and
fldcw
dec
int
mov
mov
jg
mov
and
push
push
es
adc
mov
push
mov
and
xchg
gs
aad
push
movsl
js
mov
call
mov
xchg
mov
es
mov
rcr
add
mov
aam
aad
movsl
adc
xchg
in
push
adc
mov
push
cli
es
std
sti
test
into
and
push
ss
aad
mov
dec
int
sbb
movsl
lods
dec
or
mov
shrb
adc
push
pushf
dec
and
nop
in
push
bsr
in
dec
das
adc
mov
adc
in
adc
ret
leave
aad
dec
dec
adc
lods
adc
bnd
ss
jne
repnz
out
push
scas
cs
mov
or
orb
es
and
dec
aad
in
aaa
push
mov
xchg
shlb
push
adc
aad
dec
pop
adc
movsl
mov
enter
in
push
rorb
push
mov
call
push
adc
mov
push
mov
xchg
call
push
adc
push
dec
push
mov
enter
mov
in
adc
dec
mov
adc
int
dec
iret
adc
mov
outsl
out
mov
call
mov
leave
mov
or
push
mov
call
or
mov
dec
rcl
stc
xor
fisubrl
xchg
mov
push
cmp
add
out
xchg
test
loop
adc
test
dec
notb
rolb
scas
pop
lahf
aam
fdivs
orl
cli
inc
cmpsl
lcall
shll
inc
int3
arpl
jbe
cmpsl
add
jl
loopne
shll
mov
xchg
dec
fmuls
push
out
cmp
jp
inc
xor
adc
shll
add
mov
xlat
fldcw
loop
in
data16
sbb
loop
and
loope
insl
aaa
mov
sbb
outsl
mov
out
ficoml
push
adc
pop
loope
dec
jno
repnz
dec
push
in
adc
stos
push
adc
xchg
inc
test
xchg
mov
js
and
pop
dec
or
mov
pop
sub
adc
rcr
cmpsl
test
loop
pop
jg
sub
lret
cli
push
rclb
jbe
stos
out
jae
loop
adc
scas
mov
leave
inc
xchg
xchg
shrl
call
loop
xchg
jns
inc
insb
push
jns
mov
ss
aad
loop
lds
in
test
xchg
or
pop
outsl
aam
push
jnp
push
mov
mov
sbbl
sub
adc
out
mov
or
xor
jnp
adc
dec
push
aam
add
sti
mov
adc
loope
xor
in
lods
int
sti
mov
mov
shll
out
sbb
xchg
jecxz
sbb
dec
ds
lret
mov
loopne
shl
fidivrl
aad
iret
xlat
fidivs
aam
notl
mov
mov
and
xchg
pop
data16
xchg
bound
inc
stos
adc
lea
enter
out
add
cli
lods
pop
fwait
dec
push
mov
add
push
loop
push
mov
mov
es
cwtl
mov
aad
repz
sbb
ficoml
xchg
sub
sub
dec
dec
dec
sub
andl
pop
cwtl
mov
jmp
add
fidivrs
adc
fistpll
push
add
xor
lods
mov
in
mov
push
subl
adc
jno
and
icebp
xchg
in
and
mov
mov
fidivrs
push
inc
scas
adc
lods
dec
jle
addr16
adc
imul
leave
mov
push
add
stos
movb
out
add
lret
mov
ss
shll
dec
mov
in
sahf
add
call
sti
and
pop
into
mov
aaa
mov
or
inc
mov
adc
xor
ja
int3
pop
xor
xlat
test
data16
cltd
out
push
cmp
inc
push
fcoml
adc
sub
and
dec
mov
cli
insb
aad
jmp
ja
sbb
mov
je
cmc
pop
pop
stos
mov
mov
sub
add
jmp
mull
mov
or
sarl
scas
loop
xlat
and
mov
out
out
add
add
cmpsl
test
push
jmp
push
cmc
mov
cmpsb
xlat
jo
inc
or
repz
lock
jno
int3
fistpll
or
fildl
dec
xor
into
es
sti
xchg
loope
mov
sbb
mov
lods
data16
insb
mov
add
scas
and
mov
rol
push
or
pop
dec
test
jge
push
adc
out
iret
rclb
icebp
int
or
add
and
bound
sbb
jecxz
mov
jno
icebp
sar
arpl
mov
jbe
adc
shrb
xor
rorl
mov
in
adcl
fdivrl
pop
jns
cmp
fs
and
inc
push
bnd
dec
push
aad
lods
jl
lahf
xchg
in
out
enter
or
inc
xchg
int3
ljmp
out
rcll
and
add
push
jns
rclb
inc
cmc
andb
shlb
fistpl
mov
inc
daa
add
mov
jnp
fdivrs
mov
shrl
dec
pop
cmp
mov
mov
inc
out
jne
xor
fcom
jmp
push
jnp
or
fdivs
push
dec
pop
nop
inc
out
lds
add
arpl
movsb
dec
jecxz
jnp
push
add
int3
notl
mov
inc
xchg
mov
jno
add
xchg
adc
loop
repz
mov
xchg
in
inc
pop
adc
mov
jg
lods
mov
lods
or
std
in
xorl
loop
and
jl
push
sbb
es
xlat
aad
push
push
lret
push
dec
pop
jnp
push
loope
adc
mov
and
mov
and
pop
cmp
out
push
push
mov
outsb
negb
sub
push
mov
dec
test
push
ds
pop
outsl
in
stos
dec
aad
cmp
adc
mov
push
shrb
push
sti
or
fnsaves
add
divl
push
inc
push
cwtl
pop
dec
xchg
mov
push
test
negb
mov
and
pushf
jecxz
mov
push
pop
sbb
repz
test
sub
in
mov
inc
sub
fsts
push
inc
in
push
dec
pop
or
dec
push
add
add
mov
or
movsb
enter
xchg
sub
xchg
xchg
pop
popa
call
push
mov
in
or
xchg
fwait
xor
ds
sub
add
adc
inc
add
pop
pop
int3
inc
jb
idivl
stos
iret
out
fdivrs
test
ret
push
mov
stc
mov
aas
and
shr
xchg
jno
sbb
and
mov
pop
push
jns
add
call
push
jl
sbb
cwtl
fcoms
push
call
mov
cmc
call
shlb
iret
cmp
or
jnp
ljmp
stos
inc
push
push
add
int3
int
aad
and
ds
and
cmpsb
adc
sub
int
jno
xor
repnz
sbbl
or
adc
lds
add
xchg
push
shll
stos
call
push
xchg
and
es
push
aam
clc
out
adc
in
adc
aam
lods
leave
scas
push
pusha
mov
test
and
sarb
inc
insl
jle
scas
dec
mov
jnp
ret
xchg
mov
loopne
int
add
or
mov
int
push
daa
out
jecxz
lock
ljmp
mov
aad
insl
dec
lret
adc
pop
push
stos
adc
lret
mov
je
mov
ror
ljmp
adc
push
rorl
or
jecxz
or
push
jno
aaa
dec
pop
mov
mov
aam
rcl
push
jge
mov
cmp
or
xor
mov
add
sub
or
push
push
jmp
aad
jmp
inc
sti
and
adc
ljmp
in
jecxz
popf
mov
pop
rcll
mov
push
xlat
mov
mov
loop
loope
xchg
lods
sahf
pop
xchg
sbb
out
push
scas
imul
adc
jmp
pop
in
sbb
and
loope
mov
into
jns
push
jbe
jo
push
pop
into
ficoms
bound
ss
lret
xor
pop
mov
xchg
mov
int
arpl
jb
negl
pop
cltd
rolb
mov
push
xchg
inc
mov
ss
jp
push
popa
test
icebp
mov
les
push
cmc
mov
out
mov
or
pop
or
iret
in
aad
xor
jbe
mov
flds
movsl
out
popa
push
and
test
sbb
add
dec
idivb
pop
cmpsb
aad
jp
ss
cmp
push
scas
mov
xchg
icebp
add
jns
and
and
xor
or
scas
mov
mov
fs
push
sbb
cmpsb
rcll
xchg
fwait
out
push
cs
outsl
enter
xchg
inc
test
aad
les
nop
jp
jp
dec
push
out
fs
and
mov
push
lock
jae
lcall
inc
dec
mov
es
imul
iret
cs
int3
shrl
jmp
stos
rcll
arpl
adc
outsb
sub
mov
push
add
jo
sub
push
data16
mov
mov
cli
sbb
xchg
pop
xchg
mov
dec
jge
scas
jp
xor
jb
pushf
out
xor
pop
add
cmc
fcmove
mov
pop
and
adc
or
or
and
sub
mov
shll
pop
sbb
popa
and
jl
ds
mov
arpl
xchg
mov
mov
rorb
sub
mov
fisubs
mov
push
mov
in
imul
ja
mov
sub
cmc
dec
xlat
test
clc
adc
mov
or
test
subl
sub
enter
hlt
dec
sub
adc
ds
mov
mov
repnz
xchg
or
xchg
lar
mov
popa
repz
gs
push
mov
mov
mov
ret
dec
xchg
xchg
insb
popf
jl
push
mov
xor
imul
nop
and
sub
sbb
mov
inc
push
stos
aad
data16
mov
addr16
adc
adc
sbb
outsb
pop
mov
inc
mov
xchg
cwtl
sub
and
into
push
lahf
imul
sbb
mov
mov
sbb
sub
jmp
repz
aad
mov
arpl
adc
jo
ja,pt
dec
iret
or
jp
test
addl
aad
sbb
call
js
and
ljmp
add
pop
mov
add
adc
jnp
nop
xchg
sahf
pushf
push
mov
shlb
mov
dec
pop
gs
push
jle
pop
dec
push
in
pop
test
daa
mov
std
jo
aad
push
icebp
xchg
aad
test
dec
xchg
xchg
dec
mov
out
loope
push
mov
enter
movsl
lea
push
sarl
push
push
push
ds
mov
es
jno
or
negb
icebp
pop
and
push
xchg
leave
dec
fadd
dec
stos
jnp
jae
repz
aad
xchg
jge
addr16
clc
push
sbb
pop
push
fwait
lahf
push
mov
jnp
mov
pop
rcll
js
mov
les
sub
out
cmc
adc
popl
xchg
adc
rorl
jle
inc
mov
sub
push
inc
pop
cmpsb
jnp
or
push
or
xlat
mov
cmp
into
add
cmpsb
add
mov
xchg
call
jae
cmpsb
push
xchg
ret
ficompl
push
xchg
insb
pop
lea
jl
lcall
jne
push
pop
push
mov
pop
mov
test
xor
mov
inc
scas
jp
test
adc
lods
aam
ror
shrb
mov
sbb
jl
xor
jnp
pop
ror
clc
add
sub
vpunpckldq
add
repnz
fcoms
lret
sti
daa
aas
ret
and
and
cmc
sbb
cmp
xchg
pop
in
dec
mov
xchg
jae
loope
int3
cmp
mov
or
push
imul
jnp
insl
push
or
adc
or
enter
sub
adc
pop
mov
into
fnsave
push
cmp
into
mov
sub
rcrl
shrb
push
push
test
push
out
repnz
cmp
jbe
stos
mov
jmp
aad
mov
mov
cmpsl
sti
or
divl
test
xchg
popa
insl
jle
mov
loopne
pop
jae
dec
push
mov
xchg
addb
ds
and
lods
mov
cs
sbb
gs
sub
lods
xchg
sbb
jle
decb
dec
lea
fldl
and
adc
fimuls
lods
mov
pop
mov
sbb
roll
inc
fimuls
jne
dec
pop
inc
jb
sub
mov
xchg
cmpsl
inc
ret
xorb
and
xor
xchg
shll
test
mov
cltd
pop
cmpsl
in
xor
or
sahf
push
sti
es
sub
sbb
sub
popf
and
jg
mov
sub
inc
hlt
push
push
dec
in
push
sub
cmp
adc
in
rcll
adc
loop
cmp
pop
jo
int
xchg
xchg
pop
jno
cs
aas
xlat
pop
out
xchg
push
lods
xor
negl
cmp
or
mov
adc
push
push
sti
mov
xchg
add
aad
les
push
test
pop
cmp
mov
fisubl
pop
inc
mov
or
shll
imul
jb
sbb
arpl
jnp
fnstsw
adc
call
cwtl
xlat
jge
jp
je
or
out
mov
mov
mov
xor
xor
test
jle
scas
and
clc
dec
inc
stc
mov
mov
sbb
cmp
xchg
jmp
pop
or
int3
imul
scas
xchg
lret
cmp
aam
ss
sarl
ss
cmp
mov
push
push
dec
sti
ds
divb
aam
mov
sti
xchg
inc
sbb
or
pushf
and
or
insb
sbb
inc
pop
mov
xor
and
fnstcw
repz
jge
mov
pop
sahf
xchg
jno
fdivrs
idivl
ljmp
cmp
cmp
lods
add
pushf
sbb
into
sbb
in
cmpsl
mov
fldl
mulb
mov
mov
push
imul
loope
add
mov
rcrb
dec
pop
loope
fnstenv
sahf
add
push
jge
push
dec
test
adc
adc
sbb
push
lds
leave
push
mov
dec
jne
icebp
xlat
push
push
cli
out
push
xchg
test
sub
push
pop
hlt
dec
arpl
push
push
lahf
sbb
cmp
mov
adc
int
adc
lahf
cld
shlb
adc
movsb
dec
call
rclb
sbb
mov
and
call
xor
ds
and
bound
ror
push
leave
pop
into
fmull
xchg
pop
aad
xor
or
adc
jecxz
pop
adc
lock
xorb
shll
xorb
xor
xchg
sbb
adc
jp
pop
inc
push
or
repnz
cld
call
lds
test
roll
mov
orb
push
xor
pop
aad
hlt
cmp
out
jnp
dec
mov
sar
loop
jl
mov
outsb
shr
cs
cmp
in
int
insb
testl
pop
cld
inc
mov
push
cmp
scas
add
fimull
xchg
pop
inc
push
sub
dec
pop
popf
push
aas
mov
add
int
or
xor
mov
and
cwtl
and
fdivrs
cmpsl
mov
rcr
int3
mov
and
das
mov
int
xor
mov
and
cs
orl
cltd
mov
aad
mov
sbb
std
loope
xchg
mov
fstp
jge
mov
or
arpl
jno
fstps
cmp
xor
cli
aas
int3
cwtl
add
adc
sub
int3
cmp
fwait
cmpsb
pop
mov
cmp
sahf
inc
push
or
inc
popa
mov
xchg
cmp
subl
and
out
pop
jno
in
pop
test
das
mov
call
lret
push
sbb
sub
push
lret
repnz
cs
jae
aad
pop
ficomps
mov
data16
int
lcall
lock
dec
jo
pop
xchg
cmp
arpl
mov
fldcw
mov
sub
mov
xlat
jb
push
push
lock
mov
xchg
push
call
ja
push
fwait
test
call
test
aad
and
stos
jo
push
push
xor
out
sahf
mov
inc
int
loop
pop
jbe
or
mov
mov
and
adc
sahf
mov
popa
mov
fdivrs
adcb
mov
sbb
mov
in
cmc
popf
mov
mov
pop
adcb
and
ja
js
pop
roll
out
pop
movsl
pop
sahf
ret
mov
fdivrs
jnp
push
addw
pop
leave
test
movsl
add
out
push
lock
fiadds
ret
loop
mov
pop
sahf
fxch
push
repnz
out
pop
push
mov
jae
add
pop
rcll
mov
push
mov
bound
push
rcrl
ret
jg
fnstenv
call
cmc
adc
std
iret
loope
sahf
daa
out
dec
ficoml
dec
pusha
sbb
push
mov
insb
dec
ss
dec
sub
in
mov
mov
jle
aad
loop
and
shll
std
fcmovnb
adc
push
stos
jo
imul
fs
mov
mov
or
xchg
dec
cs
scas
mov
aad
gs
call
dec
cmp
aad
punpckldq
inc
ss
sub
aas
inc
adc
inc
insl
and
mov
inc
cli
xor
loopne
pop
push
add
fstl
pop
arpl
rorl
arpl
push
cmp
dec
dec
push
stos
nop
out
jbe
outsb
lret
fidivl
pop
and
out
testb
cmp
mov
int
stos
fsub
and
fsubrl
in
loope
enter
repnz
in
xchg
lea
ret
iret
push
jge
gs
enter
aam
adc
push
xor
aas
sbb
dec
sbb
test
aad
sub
int
dec
or
lea
dec
pop
ds
add
jne
das
dec
es
dec
mov
call
out
jg
jp
pushf
movb
aam
pop
nop
pusha
out
out
mov
fcomi
aad
sub
mov
or
call
or
mov
add
push
mov
les
int
call
mov
aad
sbb
int
push
aad
dec
adc
mov
and
stc
aam
nop
inc
mov
xchg
xlat
call
rcrb
inc
insl
es
cmc
pop
stc
mov
or
scas
push
out
sbb
call
into
rolb
sahf
jecxz
bnd
fucom
xor
mov
rclb
pop
mulb
test
cs
imul
arpl
and
dec
stos
push
bound
faddl
lcall
jns
jl
leave
pop
loope
inc
jb
mov
aad
pop
cmpsl
sbb
shll
ret
shrb
ds
call
cmp
push
xchg
inc
push
mov
stos
pop
into
ds
filds
jg
int
clc
test
clc
enter
mov
cmp
es
add
adc
gs
or
sbb
cld
loop
lea
push
into
call
sbb
test
imul
jmp
mov
in
mov
push
mov
cmc
add
mov
addr16
outsb
add
dec
adc
or
mov
gs
xchg
mov
ret
dec
ljmp
or
mov
dec
aad
xchg
mov
pop
lcall
lock
dec
jg
cmc
aad
es
push
or
mov
rcll
enter
dec
unpcklps
push
insl
xchg
pop
outsb
add
call
test
push
outsl
push
shrl
add
inc
xor
adc
dec
sbb
popf
mov
enter
loopne
call
insl
mov
push
in
mov
dec
addr16
adc
neg
call
fcomps
ret
das
xchg
mov
bound
into
icebp
int
xchg
pop
jae
push
pusha
insb
cmp
pushf
inc
push
jbe
and
ljmp
aam
push
ds
rol
dec
mov
out
pop
mov
jmp
jb
cli
dec
shll
adc
lods
fwait
adc
push
sahf
add
shrl
and
dec
cmp
repnz
xchg
filds
and
mov
je
and
test
pop
icebp
in
icebp
insb
outsb
rorb
mov
push
aad
cli
pop
icebp
ficomps
loop
mov
sub
push
push
or
dec
xorl
in
aas
or
adc
mov
mov
movsbl
popf
lock
xlat
dec
in
push
jb
inc
enter
fcomps
sahf
mov
inc
rorl
adc
stc
adc
push
dec
pop
xchg
mov
push
push
sub
loope
loopne
push
or
adc
xchg
xchg
sahf
push
shr
sbb
outsl
fisttpll
mov
and
and
cmp
divb
outsl
mov
pop
mov
lds
dec
push
jle
xlat
dec
cmpsb
dec
ss
push
and
and
ret
push
dec
imul
fdivl
out
xor
dec
jl
es
fsubs
inc
ljmp
das
dec
mov
mov
cltd
inc
icebp
testb
inc
ljmp
pop
xor
sub
ror
pop
mov
push
dec
aas
push
dec
cli
in
mov
adc
and
jge
push
adc
adc
add
xor
adc
push
mov
ret
xchg
sub
pop
jno
popa
rcll
xor
ja
and
xor
add
stc
test
pop
mov
fs
mov
mov
xor
in
shrb
xor
inc
adc
xor
dec
inc
int3
jns
inc
dec
pop
adc
call
in
lock
mov
jns
negb
add
sahf
push
adc
enter
int
cli
fs
movsb
mov
cli
jp
jb
add
stos
mov
xor
push
ror
mov
inc
jno
xchg
fs
or
mov
push
scas
push
mov
ljmp
push
decb
push
data16
leave
cs
imulb
jae
pop
push
js
dec
add
and
jns
lcall
ffree
sbb
push
fstl
mov
outsb
test
insb
pop
les
int3
cli
push
inc
add
popa
insl
sbb
movl
push
mov
mov
stc
cltd
enter
gs
push
pcmpeqw
lret
push
cmpb
or
jmp
inc
sahf
pop
add
mov
or
xor
stc
cmp
pop
out
pushf
push
push
mov
mov
cmpsl
jmp
push
dec
or
in
negb
nop
adc
xchg
mov
push
mov
cs
inc
push
pop
cli
dec
sub
in
cmp
in
jnp
movsl
fldz
arpl
adc
pushf
aas
mov
adc
dec
add
ljmp
add
push
cmc
and
push
mov
mov
xchg
or
outsb
shlb
jne
std
loop
dec
fimull
adc
xor
stos
insb
mov
mov
out
js
jbe
addr16
lahf
pop
push
push
ret
loope
outsb
stos
iret
jb
mov
sub
mov
push
adc
jne
add
add
es
xor
mov
sub
imul
mov
lcall
sbbb
adc
xor
addr16
cld
mov
push
adc
mov
sbb
add
stc
cmp
jo
pop
pop
div
push
adc
dec
gs
bound
xchg
stos
sbb
adc
jl
rcll
es
mov
xchg
movsl
insb
icebp
pop
pop
lods
rclb
fbld
or
adc
rcr
bound
inc
mov
mov
xor
push
xor
cmp
cmp
mov
popa
adc
mov
nop
inc
fcomp
or
pop
mov
mov
mov
ljmp
adc
rol
mov
add
addl
out
es
cmp
and
out
inc
mov
imul
rorl
sub
sahf
fs
mov
adc
sbb
mov
mov
into
loopne
push
int
push
orb
xor
xorl
pop
mov
jae
push
out
push
adc
push
shll
ss
push
and
adc
mov
cltd
xor
dec
lcall
sbb
lock
cmp
outsb
hlt
mov
xchg
mov
dec
jne
add
lds
bound
and
fidivrl
adc
lock
and
fwait
and
xchg
pop
pop
mov
mov
push
ss
mov
sbb
mov
or
pop
push
cmp
je
mov
stos
push
pop
out
cmc
shr
add
push
and
mov
cmc
data16
dec
mov
jns
pop
shlb
inc
scas
enter
inc
xlat
xchg
orb
jge
std
ds
lea
lret
pop
xor
icebp
and
mov
sbb
in
sbb
jb
push
mov
out
dec
pop
jle
adc
push
add
ret
cmpsb
or
mulb
mov
ljmp
scas
pop
add
jns
cmp
hlt
mov
scas
xchg
adc
push
fcomp
popf
mov
adc
inc
leave
cmpsb
inc
dec
xchg
adc
outsb
pop
aad
jle
and
pop
mov
push
adc
push
mov
xor
mov
rcll
sub
imul
mov
or
repnz
lahf
in
lret
jp
int
push
test
out
stos
and
mov
pop
mov
call
cmp
stos
iret
add
cltd
mov
cmp
mov
fidivrs
jb
das
scas
xor
xchg
mov
fldt
les
mov
jnp
cmp
lea
sub
jmp
in
add
imul
gs
sbb
stc
mov
leave
rolb
cs
add
xchg
cwtl
cmp
dec
inc
rclb
iret
jge
aas
inc
push
dec
jp
shl
adc
push
inc
vxorps
and
fildll
jno
mov
ds
mov
push
in
sub
or
pop
dec
xchg
dec
es
jnp
jg
cs
push
ds
mov
jmp
cmp
call
rcll
mov
jb
push
fnstsw
in
cmpsl
cmp
int
shlb
or
leave
xor
push
rcll
loop
js
sar
mov
jl
inc
mov
cmp
imulb
fnstenv
and
ret
mov
or
cli
aam
or
dec
shl
rorb
dec
dec
aam
sahf
mov
xor
fldl
inc
adc
mov
in
adc
ds
push
jmp
daa
in
in
hlt
movb
popaw
adc
call
aas
insl
loopne
out
or
add
xor
dec
and
or
outsb
rolb
les
in
lahf
add
jo
and
xor
mov
mov
sbb
or
push
push
sub
jle
jmp
pop
popa
sub
xchg
arpl
daa
pop
inc
cwtl
mov
jmp
decb
xchg
mov
jne
xor
cwtl
enter
imul
fst
loope
adc
imul
pop
mov
sbb
sub
cmp
pushf
dec
cmc
int
and
lods
sbb
pushf
ds
push
into
mov
pop
hlt
adc
xor
enter
icebp
xor
fcoms
push
inc
mov
sub
mov
ljmp
rcrl
and
stos
popa
rolb
inc
mov
pop
push
xchg
mov
xor
shrl
jg
push
xor
mov
pop
pop
mov
mov
cltd
adc
xor
mov
or
or
leave
xorb
pop
lcall
int
jno
cmp
fcmovnbe
adc
cwtl
lds
cmc
aas
push
out
and
fidivrl
jle
mov
stos
and
adc
mov
pop
ficomps
int3
cmc
dec
js
inc
mov
cltd
mov
in
ljmp
cmp
jns
mov
incb
lcall
jb
xchg
pop
inc
into
dec
lret
fldt
dec
lcall
inc
fwait
in
pusha
mov
mov
dec
out
dec
add
shl
sti
jecxz
cmp
enter
adc
gs
imul
jmp
inc
xchg
adc
sbb
insl
bound
jg
xchg
cmp
loopne
shll
cmc
movsl
icebp
push
andl
dec
shl
jmp
leave
push
xor
std
push
jae
decl
rorl
jnp
scas
arpl
nop
fstpt
fdivrp
sub
lods
ficoms
in
and
add
shll
out
mov
sbb
mov
cld
leave
pop
mov
push
jge
ds
outsb
or
data16
jae
adc
test
lea
sbb
loop
inc
mov
or
inc
mov
scas
mov
sbb
cmp
jle
sbb
idiv
arpl
pop
icebp
dec
fsubl
mov
aaa
or
dec
daa
xchg
clc
mov
subb
test
aad
sahf
adc
adc
test
add
xchg
dec
push
sar
std
mov
dec
pusha
push
loope
push
fimuls
mov
mov
add
push
adc
daa
adc
ret
lea
or
mov
imul
cmp
mov
popa
push
sbb
lahf
cli
dec
arpl
push
xlat
or
add
and
imul
mov
mov
dec
sub
loope
dec
rcrl
cs
scas
daa
jp
and
fimuls
ljmp
sub
dec
inc
and
push
adc
push
adc
rolb
dec
inc
pop
mov
sahf
inc
pop
add
xchg
xchg
mov
and
push
or
cmp
jno
xor
shll
pusha
and
js
les
sub
lret
jae
ds
rcrl
or
imul
xchg
shl
cmp
mov
outsl
mov
jmp
mov
mov
pop
sbbl
cmc
inc
adc
stc
mov
pop
push
sub
dec
ds
ret
push
adc
movsl
xlat
push
and
add
js
outsl
and
cmp
lds
addb
inc
cmp
adc
dec
adc
xchg
sbb
inc
aaa
pop
mov
dec
mov
call
xor
inc
xor
popf
push
out
leave
scas
mov
pop
call
imul
adc
aas
pop
push
in
sbb
mov
es
cmpsl
pop
rcrb
sub
lods
cmc
pop
push
daa
nop
jg
cli
adc
mov
int3
add
add
dec
pushf
adc
popf
xor
mov
push
dec
or
sub
ret
jbe,pt
or
push
adc
repnz
adc
lods
push
pop
mov
sub
cmp
mov
into
add
adc
sahf
inc
ficompl
cmp
ds
jo
cmp
nop
rcll
xchg
arpl
cmpsb
lret
and
movsl
jmp
cmpsl
mov
es
sub
push
movl
iret
jbe
pusha
call
mov
sub
xchg
fs
cmp
rorb
add
pushf
mov
lret
or
loope
mov
nop
addr16
mov
bound
xlat
lret
xchg
dec
cmp
in
pop
test
cmp
push
push
scas
pop
xor
scas
cmpsl
adc
ds
pop
or
mov
mov
xor
iret
pusha
mov
xor
inc
xlat
xor
adc
xlat
loope
xor
in
push
cltd
dec
mov
rcl
mov
adc
mov
jb
cwtl
bound
iret
xchg
dec
mov
inc
insb
scas
repnz
stc
fcmovnb
outsl
out
jbe
loopne
in
and
push
pop
mov
call
mov
push
pop
mov
inc
inc
inc
ficoms
jge
jmp
jp
dec
mov
fnstsw
xlat
adcb
shrl
cmp
mov
mov
call
xchg
pop
test
xor
mov
pop
mov
loop
out
inc
mov
pop
push
ret
cmp
jns
add
pop
push
jl
cmc
rol
adc
ljmp
scas
sub
lret
mov
push
outsl
pop
xor
dec
cmpsb
mov
stc
adc
mov
or
mov
imul
inc
sahf
jbe
dec
int
xor
dec
mov
pop
dec
and
pushf
sub
xor
mov
mov
inc
pop
dec
push
sub
dec
jne
dec
lret
in
xor
adc
sub
loopne
push
scas
cmp
stc
mov
xchg
mov
jno
faddl
aas
es
push
dec
mov
xor
sub
jno
xor
ja
ss
and
or
sub
mov
fcoms
add
repz
lock
adc
addb
imul
push
dec
pop
push
loop
outsl
pop
mov
mov
fnstcw
pop
push
dec
sbb
ret
xlat
rcrl
jge
insb
mov
fs
aad
cwtl
sahf
xor
shll
or
lahf
nop
add
cmp
jecxz
mov
pop
push
push
and
push
mov
out
adc
pusha
cwtl
out
pop
xor
mov
jg
xor
subl
adc
mov
push
lahf
mov
dec
mov
jnp
cmp
pop
loope
xor
mov
add
inc
ljmp
sub
aam
hlt
sahf
icebp
lret
mov
adc
frstor
scas
adc
sbbl
sbbl
dec
push
dec
push
xchg
xchg
aad
sahf
xchg
adc
nop
and
mov
pop
jg
cmc
push
add
aad
pop
push
sub
sbb
mov
sub
push
xor
push
inc
push
fs
ret
out
sarb
and
cli
lods
sahf
mov
sbb
dec
jp
repnz
xchg
inc
repnz
xchg
shlb
or
xor
and
lock
xchg
mov
mov
inc
jg
daa
push
jmp
leave
adc
in
jo
pop
xor
test
sti
jae
cwtl
ss
popa
push
cs
imul
sub
mov
sti
mov
xchg
test
adc
xor
push
inc
imul
out
test
test
sub
es
cs
fmuls
and
imul
or
ja
out
add
nop
sbb
mov
push
mov
cmp
cmp
shll
dec
loope
ss
mov
jge
push
out
rol
stos
aad
shll
push
or
push
daa
dec
lret
fisttps
or
popf
arpl
inc
into
push
xchg
mov
hlt
inc
out
popf
inc
lret
rcrl
dec
mov
xor
cmpsl
or
enter
mov
inc
dec
xchg
iret
sbb
negb
outsl
test
adc
dec
mov
inc
shrl
out
rcl
inc
push
dec
sbb
cmp
sbb
insb
imul
push
and
loopne
lods
sarb
pop
loope
clc
sbb
jmp
push
mov
cmc
inc
dec
testb
jmp
test
call
xor
cmp
fsubr
nop
dec
lea
in
or
stos
pop
mov
push
pushf
jne
enter
loope
call
mov
jns,pt
lret
icebp
and
jnp
xor
dec
js
out
orl
sbb
fidivrs
xchg
cmp
arpl
cmp
int
pop
in
push
sarb
mov
out
into
sub
and
mov
in
adc
dec
pop
xchg
lods
and
jo
pushf
and
es
mov
out
and
rclb
mov
cmp
gs
fisttpl
push
addl
popa
stos
ficomps
addl
outsl
xor
xor
dec
mov
dec
sub
push
jae
fsubrp
cmp
js
cmp
jo
mov
pusha
jg
movsl
xor
inc
int3
enter
mov
xchg
aad
mov
sbb
adc
cs
pop
insb
incb
push
add
jl
insl
mov
mov
int3
scas
mov
push
call
and
ret
int
test
mov
lods
scas
out
push
mov
adc
inc
aad
dec
pop
ret
jge
add
stos
sbb
cmp
push
sbb
mov
jecxz
add
aam
mov
aam
aaa
dec
lds
clc
add
int
lods
imul
push
push
leave
fisttpl
add
jae
pop
imul
and
sbbb
dec
data16
out
imul
mov
dec
adc
cmp
mov
cmc
ret
inc
cwtl
sbb
xor
pop
mov
cltd
xor
aam
jle
jns
test
test
cmpsl
mov
fisubl
call
scas
sbb
rorl
dec
mov
bound
xchg
mov
mov
mov
ret
adc
lock
inc
frstor
pop
pop
pop
and
ss
fmul
mov
stc
insl
int
ljmp
jae
jp
or
xlat
inc
xchg
cs
bound
cmp
ds
das
outsl
push
out
test
rol
rcrb
xchg
das
and
cltd
lcall
add
ja
inc
jle
fstl
pop
sub
ret
std
daa
movsl
cmp
into
pop
push
std
icebp
adc
mov
and
mov
ljmp
cmp
mov
cmp
jge
xchg
push
push
outsl
cmc
insl
leave
cmp
div
rolb
push
aad
rcll
out
mov
icebp
out
rcll
xchg
adc
and
in
call
push
stos
push
rcl
xchg
popf
adc
sahf
ds
and
pop
mov
sbb
clc
xchg
std
push
mov
or
mov
xchg
fadds
add
clc
mov
sub
fimuls
push
pop
test
or
fs
decl
cmp
push
shrl
rcll
mov
dec
and
push
scas
mov
aas
xchg
jbe
mov
dec
mov
push
lods
cwtl
push
fwait
push
push
mov
add
xlat
sub
insb
xor
cmpsb
pop
push
adc
cmpl
aad
rcll
inc
push
fcmovnu
jmp
xchg
out
push
inc
xchg
jnp
stos
mov
sahf
adc
mov
leave
adc
pop
jl
shlb
and
push
js
add
pop
push
stc
ljmp
clc
sub
bound
arpl
jl
lds
push
lock
ret
aam
add
add
mov
cmp
orl
movsl
sub
rorl
shrl
arpl
int
gs
xor
fmull
mov
pop
aam
push
fyl2xp1
sub
jecxz
jne
dec
sbb
rclb
into
lds
xorl
cmc
ds
or
add
in
clc
pushf
adc
push
mov
es
pop
jns
ss
jns
sbb
mov
aam
pushf
out
cmp
or
lret
dec
dec
mov
test
fwait
xchg
push
subl
adc
sbb
pop
mov
jnp
adc
es
leave
sbbl
repz
nop
mov
aad
test
jle
inc
pop
sti
add
cwtl
add
loop
fwait
lret
loope
or
es
xlat
pop
data16
das
scas
mov
mov
lahf
adc
sbb
mov
jp
sbb
cmp
pusha
jo
pusha
data16
inc
or
jnp
ret
test
mov
inc
data16
out
mov
adc
stos
decb
mov
out
mov
subl
pop
add
out
xchg
jge
jmp
call
rorb
adc
inc
mov
lret
and
sub
in
or
mov
and
jecxz
not
xorb
fldenv
testl
or
cmp
push
daa
lods
inc
xor
mov
xor
xor
adc
mov
push
sbb
fiaddl
daa
std
das
out
and
fstpt
adc
test
addr16
js
ds
fiadds
push
insl
xor
add
xchg
jb
mov
xchg
out
rol
ljmp
or
and
sub
adc
aad
mov
inc
or
inc
pop
dec
test
decl
inc
call
std
ljmp
into
ja
and
sahf
js
out
inc
sbb
sbb
add
sahf
shrl
ret
leave
lods
lea
dec
push
xchg
test
dec
es
movsl
or
push
and
aaa
scas
inc
movb
cmp
jb
fildll
pcmpgtw
aam
out
mov
mov
mov
pusha
sub
push
out
shrb
push
dec
mov
rolb
insl
push
jle,pt
rol
and
test
xchg
fdivrl
or
lds
xor
icebp
xchg
mov
mov
inc
sahf
iret
cmp
mov
dec
xor
std
add
push
dec
cmovl
and
mov
cwtl
int
lods
jmp
mov
sahf
jle
cmp
jb
enter
and
inc
dec
outsb
rorb
mov
lahf
sbb
mov
pop
and
push
dec
les
inc
roll
pop
pusha
inc
adc
cmp
push
adc
xor
cs
add
mov
and
clc
lock
xchg
rol
lods
or
mov
sub
out
push
pop
cmp
lahf
push
push
mov
push
cmc
adc
xorl
pop
pop
ja
data16
sub
mov
adc
push
mov
sbb
ficomps
xor
mov
fisubrl
adcl
shll
cwtl
mov
push
inc
mov
inc
sub
or
pop
add
mov
mov
dec
rcrl
sub
xlat
adc
jno
adc
loop
scas
fldl
cmp
in
dec
aad
jo
sahf
xor
dec
mov
mov
test
addb
sbb
dec
lret
xor
iret
sbb
pop
mov
or
out
mov
mov
arpl
xor
std
mov
mov
lods
into
stc
or
inc
loop
ljmp
js
fsubs
cli
es
outsl
pop
and
mov
pop
fsubl
es
xor
in
and
sahf
mov
push
push
jnp
pusha
mov
sahf
stos
lret
fidivl
sbb
push
shrb
mov
loope
mov
push
sahf
ja
inc
inc
shll
push
dec
int
mov
mov
call
push
or
push
lahf
jne
scas
sbb
stc
cmpsl
mov
js
push
retw
gs
in
out
xchg
push
or
into
sub
xchg
sarl
into
popa
adc
negb
int
sub
and
ds
mov
stos
imul
pop
mov
push
scas
xor
cmp
fsubrp
pop
adc
jb
pop
inc
rcll
mov
sahf
xchg
sbb
jb
push
mov
mull
rorb
mov
lret
lods
and
call
inc
cwtl
push
rcll
es
lcall
pushf
int3
xchg
test
pop
fisubrl
data16
roll
es
out
dec
mov
lock
jnp
xlat
or
add
cwtl
mov
dec
cmp
add
loop
mov
insb
pop
cwtl
push
sub
clc
jmp
xor
pop
pop
popa
rcrl
push
inc
fdiv
pushf
and
mov
enter
dec
mov
push
cmp
mov
inc
clc
sti
sbbl
cmp
pop
sahf
cmpsb
sbb
shlb
mov
xlat
push
mov
data16
fucomip
jmp
add
aaa
insb
inc
imul
into
jb
sub
or
dec
mov
ds
sahf
and
pop
inc
mov
mov
cli
xor
sbb
ljmp
scas
lods
xchg
jae
ds
decb
stc
jnp
in
pop
pop
xchg
cmp
add
fmull
dec
mov
jbe
mov
push
sbb
movsb
pop
xor
mov
loopne
cmp
sub
jmp
mov
pop
xchg
cs
push
add
out
aaa
leave
fcoml
loope
aam
fsubs
or
lods
loope
outsl
or
lea
xor
jmp
sysexit
cli
movsl
add
sar
sbb
adc
rclb
pop
fcomps
mov
mov
or
xor
inc
dec
mov
enter
jno
jge
sbb
cmpsl
insb
xchg
adc
mov
mov
xchg
pop
mov
dec
fmuls
testb
mov
jo
inc
fwait
mov
cmpsl
or
lock
or
loopne
stc
mov
nop
imul
push
clc
fbld
dec
push
sub
or
xor
and
dec
pop
sbb
imul
push
xchg
and
mov
dec
mov
add
and
dec
adc
test
shll
into
mov
cwtl
popf
mov
push
mov
adcb
xchg
lret
mov
pop
inc
mov
xchg
andb
and
movsl
pop
cwtl
fcmovnu
insl
loop
ja
pop
js
in
jl
lahf
loop
lcall
test
jae
in
or
popf
dec
inc
or
jg
in
lret
ljmp
mov
fdivrl
out
xchg
jmp
ss
and
pop
adc
dec
sub
xor
pop
loope
sbb
sbb
test
lock
add
adc
pushf
repnz
testl
dec
or
fisubrs
ds
loope
lea
add
mov
dec
loopne
xchg
push
push
loope
dec
cmp
iret
mov
jl
cmp
mov
xor
movsl
xchg
les
int
push
and
mull
mov
loope
cmp
mov
and
fstl
inc
push
sbb
mov
xor
mov
scas
scas
sbb
fucomi
jl
fidivl
outsl
cmpsb
call
cmp
xlat
sub
popf
imul
cs
pop
cli
push
cmp
xchg
push
xor
jb
std
push
dec
xor
mov
pop
lahf
scas
ret
outsb
sarl
or
rorl
cmp
mov
fwait
nop
xor
out
sbb
jne
lods
mov
lcall
sbbl
jno
out
pop
jnp
shl
orl
push
popa
sub
dec
sbb
inc
ja
loope
xchg
push
andb
mov
out
cld
mov
out
pop
sub
xor
and
push
adc
fcomp
dec
pushf
into
ds
jge
iret
xchg
pop
xor
adc
mov
movsl
and
mov
gs
aam
xor
xchg
in
ror
fisttpl
cli
fiadds
sub
les
popf
xor
enter
mov
inc
das
dec
inc
outsb
fs
inc
rcll
adc
test
push
jg
and
push
imul
inc
xchg
iret
add
repnz
mov
sub
jb
mov
xlat
push
or
sbb
mov
and
push
adc
mov
in
mov
cmc
ret
mov
std
mov
xor
cmp
stos
push
hlt
add
push
lahf
mov
imul
outsl
mov
rcl
stos
lahf
insb
ret
inc
lcall
xor
enter
inc
adc
mov
adc
xchg
add
lods
cmp
test
dec
ljmp
or
xlat
push
push
enter
jb
pop
fstl
loop
lock
es
jae
shr
xchg
es
pop
inc
cmp
pop
in
cld
test
scas
sbb
fcmovb
jae
enter
aas
iret
pop
ljmp
insl
xor
fldenv
stos
sbb
sahf
test
arpl
mov
jbe
push
pop
and
leave
cli
sub
adc
dec
push
in
push
push
jb
xor
mov
fbstp
mov
std
xor
pop
shrb
shl
pop
inc
mov
in
int3
add
xchg
dec
sub
mov
jmp
cmp
push
mov
cmc
into
mov
mov
aad
lcall
mov
mov
dec
adc
divb
shll
dec
jns
and
push
das
push
xor
jo
orb
and
out
sbb
popa
ds
mov
in
fnsetpm(287
test
mov
icebp
jnp
mov
adc
sub
test
mov
cmpl
loopne
lods
mov
sbb
cltd
lds
mov
nop
leave
sbb
lret
sub
jb
faddl
cli
js
lret
jmp
lods
add
cs
dec
in
or
sahf
add
ljmp
fadds
insl
mov
popa
notl
adc
loop
dec
les
xchg
fwait
int
arpl
ss
jecxz
mov
mov
add
inc
jo
sbb
xchg
dec
mov
ljmp
pop
sar
cwtl
xchg
dec
aad
fldenv
stc
jno
and
jne
subl
aad
data16
loope
hlt
adc
notb
mov
push
es
leave
dec
push
xchg
xor
imulb
pop
jecxz
cmc
push
xor
je
leave
xor
adc
xchg
dec
lret
mov
dec
test
fdivrs
aad
mov
add
scas
mov
aad
shl
and
push
js
cs
aam
sarl
lds
mov
xlat
mov
mov
gs
mov
in
mulb
fcmovbe
dec
cmp
sarb
jne
xchg
adc
ret
cwtl
sbb
jmp
add
adc
call
arpl
pop
push
pusha
test
xchg
pop
les
push
cs
fcmovb
xchg
dec
push
leave
push
lods
rcr
inc
xchg
out
and
push
sub
pusha
sahf
mov
scas
arpl
call
xor
lcall
mov
adc
jb
push
xor
into
dec
pop
xlat
es
inc
pushf
mov
or
pop
divb
sbb
mov
fdivrp
test
pop
xchg
adc
cmp
dec
or
rcl
push
sbb
sub
stos
pop
pop
xor
and
insl
pop
ss
mov
lds
popf
jmp
and
adc
fdivs
cs
add
push
lea
mov
test
es
shrb
mov
jnp
push
xchg
pop
cs
cmp
iret
or
scas
and
adc
fidivl
fnstsw
loop
add
ss
or
xchg
and
xchg
push
cmp
and
lcall
dec
inc
push
adc
mov
dec
jne
jne
ror
out
insb
mov
cmp
imul
and
cmp
test
xor
outsb
enter
aaa
push
leave
push
xchg
pop
imulb
mov
mov
dec
and
cs
aaa
cs
stos
vorpd
subb
xchg
shrl
push
or
insb
mov
cwtl
mov
shll
add
shl
cmpsb
cwtl
leave
icebp
cmp
xchg
push
cmp
push
inc
add
adc
pop
cmp
fucom
fwait
test
test
ljmp
cwtl
stc
inc
in
clc
lods
lret
jnp
xchg
std
pop
mov
data16
jl
inc
dec
mov
push
rcrl
mov
mov
aas
clc
sub
add
mov
sbbl
pop
fldcw
xlat
into
jg
xchg
inc
popl
loop
mov
adc
orb
leave
in
cs
sbb
sarb
ret
mov
jmp
shr
lret
call
js
push
mov
add
pop
and
sahf
jnp
imul
repz
inc
sbb
stc
mov
xchg
xchg
xor
popa
rorl
add
push
std
or
pop
pop
xchg
repz
and
xor
dec
pop
xchg
daa
enter
push
insb
add
fs
jle
int
push
pop
mov
dec
or
mov
cmpsb
sub
and
pop
cmp
adc
xorb
xor
or
jae
ss
sbb
mov
repnz
pop
mov
pop
outsl
mov
mov
pop
leave
and
dec
pop
bound
jnp
sahf
push
int
jb,pt
dec
stc
add
mov
mov
xchg
push
fdivrl
sbbl
mov
xor
xorl
sbb
cmp
scas
push
jl
aad
into
stos
pop
sti
pop
push
push
test
mov
push
pop
ds
xchg
or
rcll
data16
pop
sbb
out
xor
popa
cld
in
dec
hlt
pop
xchg
mov
push
and
shrb
mov
inc
out
imul
scas
stos
inc
push
aad
pop
mov
mov
es
mov
popa
pushf
cld
push
mov
es
mov
xchg
stos
pop
dec
test
push
mov
cmp
lods
cmp
test
ret
push
adc
push
jbe
mov
xor
jns
lret
subl
jae
dec
jl
dec
inc
fcomps
jb
xor
shrb
mov
or
dec
mov
test
pop
add
loop
inc
mov
rcl
movsb
sbb
add
cmc
data16
inc
inc
imul
mov
mov
loopne
jg
cli
inc
sub
fimull
push
push
lods
das
dec
hlt
xchg
dec
xor
pop
push
in
fcoms
pop
inc
lods
leave
sbb
call
push
pop
add
lods
stos
push
fcoml
or
jg
pop
int3
in
popf
movb
ffree
push
cmp
jle
push
mul
push
xchg
sahf
mov
jo
leave
mov
adc
mov
dec
and
xor
and
adc
repnz
es
pop
mov
mov
push
mov
xor
fbstp
dec
adc
mov
mov
popa
jno
xchg
xchg
or
sahf
xchg
cmpsb
out
xlat
pop
shlb
push
ret
loop
sub
mov
mov
data16
cmp
roll
mov
lds
lds
jecxz
dec
shll
xlat
icebp
repz
push
rcl
dec
inc
sbb
cmp
cmp
es
xor
push
mov
repnz
aam
dec
jb
jl
mov
lret
fcoms
push
sub
adc
test
xchg
scas
mov
sub
lret
push
repz
xor
test
xchg
inc
sarb
jle
stos
rol
rclb
xchg
add
aaa
push
sub
add
outsl
outsb
xchg
xor
adc
xor
pop
mov
xchg
add
test
pop
add
cmp
jg
fldl
pop
dec
jbe
ljmp
cli
xchg
xor
push
sarl
jae
jno
adcb
push
out
pop
push
cwtl
push
pop
fstl
mov
adc
es
aad
mov
lea
and
mov
iret
push
mov
pop
and
inc
xor
sbbl
pushl
inc
ljmp
les
scas
xchg
sub
shlb
lock
shr
push
lock
enter
push
dec
adc
push
and
push
icebp
mov
data16
mov
cs
nop
xor
cmpl
fidivrs
xor
mov
dec
mov
mov
xchg
add
fsubs
dec
mov
aaa
jecxz
add
push
or
xchg
adc
mov
cmp
and
mov
push
xchg
stos
cmp
pop
push
mov
subl
ljmp
stos
mov
lea
adc
push
and
pop
scas
cmp
dec
adc
arpl
or
jmp
adc
push
fidivrs
xor
push
into
or
push
in
fsubrl
bound
aam
idivl
inc
sbb
mov
dec
jnp
inc
adc
xlat
xchg
notl
in
lret
push
pop
jae
int
fsubs
sub
lret
mov
fsts
rcll
sub
shlb
push
mov
pop
mov
mov
sbb
push
lods
jnp
cwtl
popf
test
push
sti
sub
jne
pop
stos
fdivrs
jge
int3
xor
ja
mov
test
stos
rcr
mov
xlat
mov
lds
adc
rorb
pop
inc
add
dec
sub
mov
mov
push
pop
fs
je
cmc
dec
xor
xchg
pop
xor
mov
sbb
bound
mov
pushf
dec
pop
and
sub
mov
scas
cmpsb
loope
jns
stos
int
insl
das
loop
cmp
adc
fstl
out
xor
stc
jne
xchg
jb
pop
pop
pop
icebp
xor
sbb
pop
mov
push
sysexit
push
out
rcll
pop
sbb
pop
std
enter
jge
push
pushw
jge
leave
mov
nop
xchg
ficomps
pop
out
into
cli
mov
sub
mov
dec
adc
sti
dec
dec
adc
inc
rcrb
adc
inc
jb
lds
xchg
movsb
cmp
cmpb
call
stc
xor
ror
scas
out
and
jg
in
mov
cld
push
and
cmpsb
push
inc
popa
loop
stos
ficoml
mov
decl
pop
outsl
fsubrs
icebp
and
jae
jnp
xchg
sbbb
lret
inc
and
push
leave
push
mov
std
test
sbb
fisttpll
loope
xor
adcl
adc
pop
outsl
pusha
cmp
std
subb
sub
adc
cwtl
mov
aad
loope
arpl
aad
push
or
xor
rcll
sti
pop
inc
xchg
jb
mov
or
push
mov
call
in
aaa
lcall
mov
std
pop
fnstcw
in
cmp
iret
cwtl
int
sub
lret
fisttpl
push
fs
cmp
fdivs
int
cs
xor
xchg
decl
push
mov
loope
js
add
es
fmuls
dec
and
nop
mov
adcl
into
mov
mov
cmp
lahf
adc
jg
xlat
cmp
in
and
dec
out
daa
inc
inc
dec
stos
js
inc
scas
cs
js
mov
xor
add
push
dec
pop
shr
aaa
and
sarb
xor
pop
jp
dec
cmp
mov
and
cli
push
movsb
call
aaa
gs
cwtl
fistl
fisttpl
fidivl
mov
xchg
js
pop
mov
dec
outsl
xchg
cmp
push
cltd
dec
cli
aaa
xor
test
andl
jo
pop
pop
fcoml
sub
mov
cmp
xlat
cmp
outsl
mov
lods
cmc
popf
adc
and
sahf
xor
orl
loope
sub
add
cmc
push
xor
push
xlat
jge
decb
rol
loope
cs
in
sub
lret
dec
pop
xchg
mov
xchg
call
es
xor
mov
adc
pop
out
in
ret
data16
push
daa
dec
sub
jne
pushf
cmp
lock
inc
pop
jle
dec
scas
aaa
aad
in
sub
pop
ds
cmp
inc
icebp
mov
dec
sbb
call
push
pop
xchg
xlat
sbb
cmp
dec
shrl
out
pop
push
mov
ja
fcompl
pop
push
xchg
popa
repnz
adc
int
sbb
and
hlt
imul
out
test
cwtl
in
movb
inc
dec
gs
mov
test
cmovbe
lcall
inc
ljmp
pushf
xor
push
lea
mov
mov
and
push
and
sahf
push
xchg
inc
mov
and
jne
xchg
jae
xchg
repz
data16
xor
add
xchg
mov
xlat
gs
aad
cmpsb
mov
clc
inc
add
and
push
inc
ret
sti
sub
out
dec
ret
add
add
fldl
test
pop
je
xlat
movsl
mov
cli
addr16
adc
inc
jno
inc
mov
push
test
xor
jmp
rolb
stc
pop
call
or
push
mov
in
out
movl
and
jb
and
sbbl
jns
inc
xchg
mov
test
cmp
mov
ss
lods
out
shll
xchg
dec
loope
mov
pop
sbb
push
shlb
pop
aas
push
mov
mov
mov
shlb
adc
inc
mov
fcompl
incl
fildl
stos
mov
jle
push
lahf
lret
push
movsb
js
dec
lahf
loop
mov
idivl
inc
mov
jg
mov
mov
push
test
loop
push
dec
and
mov
leave
push
inc
adc
cltd
or
mov
enter
or
fldcw
xchg
int
and
add
mov
ss
ds
pop
jns
ss
dec
add
mov
scas
std
push
pop
sub
fcoml
es
loope
xor
int3
bound
stos
lods
fidivrs
mov
push
xor
push
ficoml
xchg
or
stos
jnp
adc
imul
das
lock
adc
lods
cld
push
add
push
ss
sahf
push
sahf
into
cbtw
xchg
popf
fstpl
test
mov
push
push
mov
les
and
outsl
push
cmp
mov
or
sbb
pop
pop
out
gs
repnz
int
fcompl
ret
insl
or
in
adc
mov
xor
mov
and
push
negl
repnz
lock
lds
hlt
adc
cmp
rol
inc
pop
or
dec
popf
pop
int
in
xchg
inc
mov
loop
je,pt
pusha
mov
int
out
hlt
xor
jmp
add
popf
sbb
pop
xchg
pop
and
repz
jno
pop
sbb
adc
mov
rclb
push
stos
aam
mov
popf
mov
push
xor
push
mov
cs
scas
push
xchg
repz
mov
jecxz
xchg
mov
push
divl
js
lds
out
popf
scas
xchg
mov
in
jbe
in
insl
adc
push
decb
xchg
pop
aam
int
dec
in
pop
out
shll
push
cmpsb
call
xchg
jecxz
addr16
mov
xchg
or
xor
jnp
and
inc
dec
add
mov
in
or
adc
and
std
popa
imul
data16
mull
mov
and
lock
push
sarb
sub
gs
loop
clc
jbe
sub
push
push
adc
cmp
fwait
std
mov
mov
mov
imul
jnp
lock
pop
clc
add
fnstsw
or
enter
aam
in
aad
mov
jo
push
pop
dec
fucomp
xchg
mov
test
movsb
data16
sbb
mov
das
cmpl
int
adc
and
sub
sub
push
xor
mov
cs
jge
fldl
cmpsb
cltd
in
aad
fcoms
dec
jg
jnp
test
inc
cmp
pop
repnz
sbbb
adc
push
adc
push
sahf
outsb
xchg
test
imul
loope
mov
pop
cli
xor
mov
add
out
dec
dec
cmp
push
jecxz
mov
decl
fadds
jnp
fnstsw
fcmovnu
mov
jns
sbb
inc
lea
shl
into
cmc
icebp
xorl
aaa
mov
js
pop
mov
int3
and
sub
cli
rclb
dec
fadds
inc
push
test
icebp
scas
push
inc
push
mov
scas
shlb
xor
lods
vpackssdw
mov
nop
fsts
xor
push
mov
pop
jno
ficoms
and
mov
pop
div
cwtl
pop
xlat
not
pop
push
inc
dec
mov
adc
notb
dec
inc
push
pop
outsb
int
jae
notb
pop
xchg
icebp
jnp
xchg
mov
imul
mov
and
addl
lret
in
ffreep
adc
movsl
push
pop
repnz
test
mov
or
mov
cmc
andl
add
cmpsl
mov
outsl
stos
lret
loop
cwtl
dec
push
mov
mov
pop
in
xchg
push
push
pushf
xchg
adc
ret
push
aad
dec
xchg
adc
mov
in
xchg
push
push
and
dec
cmp
jb
aad
push
jl
or
call
jle
scas
and
fnstcw
mov
movsl
addr16
test
scas
test
push
outsl
fstl
mov
jae
add
mov
in
mov
xor
aad
movsl
pop
adc
repnz
aas
imul
xchg
outsl
stos
int3
daa
movsl
idiv
sub
pop
xor
sub
cwtl
andl
fidivrl
testb
xchg
test
xchg
add
xor
mov
adc
inc
jbe
push
xchg
ret
xchg
add
push
stos
int3
inc
movsl
aad
dec
adc
js
outsb
fnstcw
ret
add
push
scas
mull
adc
inc
aad
xor
adcl
loope
pusha
mov
lret
xchg
sub
aad
jg
push
inc
add
xchg
or
mov
push
hlt
adc
adc
xor
mov
das
mov
mov
mov
and
xchg
add
xlat
push
aas
xor
mov
or
notb
mov
dec
jbe
ja
test
or
es
dec
hlt
pop
mov
adc
imul
outsl
xchg
mov
xchg
fstpl
lods
out
clc
sub
and
cmp
loope
out
shlb
xchg
xor
lea
aaa
xor
int3
adc
test
imul
or
sbb
mov
aad
sahf
jo
xor
ja
jmp
mov
jecxz
in
rorb
loope
daa
mov
jecxz
cltd
pop
dec
sub
or
and
sub
data16
rcll
pop
lds
mov
mov
xchg
test
outsl
xchg
pop
xchg
mov
cmc
rcl
std
addr16
pop
jae
cmp
jge
mov
sahf
inc
push
scas
and
scas
xlat
mov
push
cmp
push
insb
xor
jbe
pop
jb
hlt
jae
sbb
das
mov
mov
xchg
adc
mov
std
pop
push
sbb
cmpsb
in
pop
pop
mov
mov
outsb
outsb
test
in
push
cmp
insb
push
andb
mul
adc
rcr
outsl
icebp
xchg
push
out
xchg
adcb
lea
into
jne
outsl
dec
clc
inc
mov
call
aad
out
stos
and
xor
cmp
jle
cli
inc
inc
in
sbb
cmpsb
inc
aam
xor
cmp
addr16
xchg
dec
jns
or
sub
adc
gs
lock
mov
arpl
scas
cmpsb
movsl
mov
out
mov
loopne
ja
cwtl
xchg
mov
enter
sub
mov
cmpsl
pop
push
or
mov
imul
inc
mov
adc
leave
push
adc
xchg
sbb
mov
mov
rorl
mov
fisubrs
stos
mov
cld
outsb
int3
icebp
mov
push
adc
imul
sbb
mov
movsl
addr16
xchg
push
movsl
xchg
ficoms
jne
pop
cmc
cmp
adc
add
in
push
inc
lcall
gs
cmp
push
shll
addl
pop
ror
fmul
lret
rclb
enter
push
xchg
into
xchg
addr16
mov
adc
push
pop
lods
xor
inc
popf
or
stos
xchg
or
adc
adc
div
gs
mov
xchg
pusha
xor
out
adc
lea
ficomps
movsl
push
or
mov
aaa
pop
lock
testb
push
punpckldq
fnstcw
es
jl
adc
pop
mov
shl
ljmp
lods
or
outsl
aad
mov
cld
xchg
rcr
loope
js
mov
out
push
adc
rcll
test
sub
ss
mov
adc
int3
test
ja
mov
xlat
mov
rorl
or
jg
scas
adc
add
and
add
loope
enter
popf
ljmp
daa
fidivrl
mov
decw
cltd
ds
jbe
inc
mov
adc
adc
mov
adc
push
dec
flds
adc
in
ret
fcmovnu
movsl
sbb
stos
iret
xlat
cmp
sbb
nop
jb
insb
dec
sti
or
jecxz
orb
jbe
mov
in
inc
inc
subl
repnz
adc
jb
mov
pop
js
adc
and
jo
int3
in
adc
es
into
ds
push
das
movsb
js
lret
add
push
xor
mov
jl
jmp
push
jl
mov
outsl
sarb
sahf
pop
sbb
int
sub
lods
lret
mov
jbe
mov
addr16
inc
mov
and
push
je
out
fidivrs
imul
adc
gs
push
gs
pop
push
adc
jmp
cmp
lret
pop
lods
subb
pop
iret
add
aad
add
pushf
in
out
cwtl
mov
outsl
push
xchg
dec
jo
pop
and
in
dec
fadd
mov
dec
mov
push
imulb
inc
pop
aad
cmp
loopne
xchg
inc
ret
pop
mov
pushf
in
mov
mulb
jae
mov
xchg
cmp
pop
lret
cwtl
push
nop
xchg
adc
nop
in
in
dec
cwtl
jp
and
sbb
sbb
sbb
cmpsb
and
loope
jnp
pop
xchg
test
dec
cmpl
mov
xchg
adc
outsl
xchg
xchg
jb
inc
jp
loop
movsl
stos
or
fs
lahf
ror
outsl
aas
mov
inc
mov
lea
add
jp
int
mov
sbb
and
adc
lahf
std
or
xor
test
xchg
push
jecxz
cwtl
sti
dec
rcl
stos
lcall
push
popa
adc
adc
push
pop
sbb
push
mov
int
movsl
test
cltd
aad
dec
and
daa
inc
and
in
enter
pop
jae
out
in
mov
fwait
add
adc
and
das
loop
push
dec
pop
mov
rclb
out
sbb
inc
inc
push
shll
adc
push
sub
push
stos
push
rorb
stc
aad
jae
bound
jae
xor
fsubrl
or
jbe
mov
data16
daa
mov
aad
mov
data16
leave
lret
jnp
popf
orb
lcall
pop
mov
jl
inc
jp
xchg
xchg
or
adc
jmp
mov
int3
sbb
or
or
add
and
and
and
lret
push
negl
and
fst
int
sbb
fstl
push
iret
shrb
fucomp
jecxz
notb
inc
jle
not
jne
fmul
in
xchg
out
jno
inc
xlat
in
pop
pop
outsb
nop
add
inc
mov
rorb
imul
leave
jb
jne
in
and
orl
inc
shr
pop
ja
dec
jge
add
std
add
push
enter
enter
outsb
movsl
adc
xor
das
aad
popf
mov
sub
sbbb
addr16
and
mov
jle
scas
inc
pushf
mov
jge
loope
fcompl
fadds
dec
std
jae
and
xor
imulb
test
stos
rorl
popf
jecxz
sbb
sbb
pop
xchg
mov
or
and
scas
sarb
or
pop
pop
adc
jle
andb
pop
push
aas
fstl
or
sbb
in
push
mov
adc
insl
sub
ficoml
push
dec
fnstsw
ja
mov
dec
push
or
enter
mov
js
mov
shr
dec
pop
ret
sbb
push
lret
cli
in
movl
pop
aaa
lds
mov
or
cld
fcoms
add
int3
cmp
sbb
divl
shrb
mov
and
xchg
xor
icebp
add
mov
push
and
fsubs
sti
mov
inc
mov
jle
add
scas
adc
adc
mov
sbb
pop
outsb
jnp
mov
dec
cwtl
ret
scas
mov
and
jle
mov
cmp
test
pop
lock
enter
dec
sbb
adc
cmp
into
call
push
push
mov
ja
iret
shlb
lods
out
iret
std
xchg
subps
movsl
aad
dec
lret
or
call
xor
lea
sbb
sbb
pop
in
mov
pop
lahf
mov
mov
push
inc
fst
mov
pop
adc
mov
fs
hlt
dec
std
mov
data16
push
stc
pusha
andb
add
cmp
sahf
jg
jnp
mov
mov
dec
mov
nop
ja
mov
xchg
and
mov
in
and
ret
add
call
pop
xor
out
rcll
cmpl
dec
mov
pop
mov
je
adc
out
sbb
aam
ret
push
inc
and
or
mov
enter
inc
int3
jns
scas
lds
lock
std
push
fadd
repz
cmp
xor
push
adc
xchg
inc
movaps
or
or
xchg
jmp
xchg
or
pop
mov
xchg
cmpsb
jne
dec
add
xlat
xchg
sub
cmp
adc
push
std
adc
or
push
mov
xor
push
fmuls
lcall
int
or
and
and
push
call
enter
gs
mov
adc
mov
jp
dec
and
push
int
dec
outsb
sbb
adc
jecxz
arpl
dec
rcrl
out
push
je
lret
push
int
stos
inc
cltd
call
jb
ljmp
inc
push
leave
stc
das
add
cmpsb
mov
pushf
mov
lds
cmpsb
js
pop
in
js
lods
imul
cmc
or
js
call
sbbl
and
lods
jnp
sub
xor
mov
adc
lock
xchg
jle
mov
out
pop
xor
clc
mov
sbbb
add
xor
mov
jge
dec
jbe
xor
cmp
loope
cmpsb
mov
mov
jno
mov
lea
push
fmuls
faddl
push
push
aad
fstl
push
dec
negb
sbb
insb
test
dec
push
dec
xor
xchg
addr16
add
aad
mov
pop
mov
pop
std
and
rcr
inc
xor
aam
lahf
mov
into
fisubl
rorl
adc
and
cmp
mov
push
lret
xor
adc
dec
or
outsb
push
in
adc
inc
xor
aad
ret
lahf
dec
xchg
jl
adc
mov
jae
sbb
xor
sbb
sbb
jnp
addr16
das
decl
sbb
imul
outsb
adcl
sbb
push
rorl
dec
dec
fwait
mov
inc
adc
jp
mov
jecxz
sbb
int
xchg
movsl
mov
xchg
es
dec
mov
pop
outsl
dec
push
cmpsb
adc
push
and
fdiv
xchg
ret
int3
int
dec
mov
out
out
or
xchg
xchg
push
pusha
notb
xchg
dec
pusha
push
iret
xchg
mov
ret
int3
test
mov
shl
push
lds
ds
jl
aad
pop
mov
dec
cwtl
push
push
pop
mov
mov
mov
jo
cmp
mov
pop
mov
sbb
or
rol
mov
add
lods
iret
cld
push
hlt
mov
pushf
xchg
test
pop
inc
fcoms
xlat
cmpsb
sahf
jle
xorl
or
push
add
push
mov
mov
fcomps
push
enter
mov
fcom
jl
stos
faddl
pop
adc
ss
xchg
aam
sbb
in
ja
add
or
mov
aad
sahf
add
mul
out
sahf
xchg
dec
pop
jle
sahf
jbe
mov
dec
mov
adc
int3
push
jne
iret
inc
nop
xchg
or
test
and
ljmp
lds
out
cmp
push
call
imul
and
mov
push
insb
inc
pop
ja
mov
rcll
sahf
loop
std
rclb
int
lock
pop
iret
push
jle
xlat
cld
sti
sub
jno
fnstsw
pop
push
inc
test
cli
lret
mov
sub
push
dec
pop
lret
and
icebp
sbbl
ret
jmp
or
sbb
sub
inc
sti
ljmp
and
and
bswap
in
es
xor
mov
int
dec
xchg
shr
fdivl
pop
aam
mov
adc
sbb
enter
popw
sbb
or
aaa
jg
decl
pop
cmc
jae
fcoml
inc
inc
mov
mov
test
call
xor
jg
mov
fmuls
push
cwtl
shr
fisttps
and
adc
or
std
lds
int
xor
cmp
inc
cmpsl
int
dec
push
mov
adc
into
dec
imul
xlat
pop
sbb
xchg
and
clc
out
andl
adc
mov
rcl
mov
push
mov
repnz
std
pop
rcll
mov
inc
jns
and
addr16
lock
ret
loop
mov
or
outsl
or
or
mov
mov
test
outsb
repz
pop
pop
dec
pop
insl
sbb
in
adc
push
rorb
xchg
pop
incl
add
mov
mov
xchg
ljmp
adc
sub
and
in
adc
sbb
push
lods
out
or
inc
movsl
dec
subb
jnp
iret
std
scas
or
rol
cli
cmp
testb
fwait
aad
push
dec
js
stos
pop
mov
push
ja
stc
mov
adc
mov
adc
mov
and
sbbl
push
pushl
push
jbe
mov
sbb
xchg
inc
sti
mov
push
popa
lods
test
add
sbb
push
pop
and
repnz
daa
cmp
and
shll
push
aaa
call
pop
mov
xchg
ficompl
lcall
adc
pop
fmuls
ds
jp
add
mov
dec
adc
push
enter
popf
shrl
add
dec
inc
push
mov
dec
xchg
sbb
xor
dec
dec
pushf
imul
mov
xor
nop
mov
ss
loop
ss
push
mov
hlt
lcall
pop
sbb
fsubrp
mov
js
jmp
fsubrs
xor
cmp
popf
imul
mov
jmp
pop
shrl
andl
cmp
fadds
mov
add
adc
enter
bound
repnz
mov
mov
push
daa
pop
push
lgs
addl
push
push
add
mov
cmpsl
jns
jb
sub
jnp
pop
push
xlat
jle
pop
adc
sbb
adc
adc
loop
mov
aas
cli
orl
rclb
imul
and
dec
cmp
jno
pusha
test
lds
lds
xlat
sbb
dec
int
leave
pusha
ss
fstps
paddw
sub
dec
jmp
add
outsb
dec
jne
enter
sbb
bound
js
lcall
dec
mov
in
and
mov
jecxz
inc
fisttpl
sbb
insb
mov
es
xchg
jns
mov
mov
mov
sub
xchg
adc
repz
push
sub
int
imul
jg
inc
xlat
data16
xchg
int
ds
pop
xlat
mov
sub
sub
ret
inc
adc
adcb
push
cs
mov
pop
dec
xchg
addl
rcl
jp
mov
sub
sbb
push
mov
or
mov
stos
sub
je
stc
adc
stc
sbb
fwait
cmp
icebp
cs
lea
dec
loop
inc
or
cltd
in
cmovp
xchg
add
push
dec
std
dec
popf
xor
push
cmpsb
out
and
loope
outsb
ss
cmp
test
inc
sub
push
pop
pop
aas
mov
xchg
aaa
aas
dec
loope
sub
dec
ljmp
xchg
mov
lret
test
stc
jmp
aad
pop
js
lock
xor
stos
mov
in
add
bound
in
cmp
xchg
sub
sub
add
insl
and
andb
clc
xlat
ficoms
pop
popa
out
push
xchg
push
push
pop
xchg
pop
shll
xchg
add
fimull
xchg
ja
sbb
lcall
out
inc
leave
and
xor
push
shl
lret
mov
xchg
xor
and
mov
xchg
dec
fistpl
cmp
jg
repnz
fs
push
inc
sbb
xchg
out
xchg
xor
cmp
sub
jns
adc
mov
mov
push
rorl
stos
mov
aad
loopne
imul
mov
pop
mov
scas
ljmp
shl
push
adc
push
in
cmp
mov
popa
lods
adcl
icebp
scas
xor
push
cmp
testb
icebp
imul
pop
add
push
xor
xchg
stos
es
ja
lret
bound
push
dec
shl
dec
mov
lret
es
or
mov
push
dec
xor
ret
pop
xor
mov
jl
mov
std
push
cli
insl
inc
xchg
int
cmp
enter
jo
aad
adc
add
fmull
pop
mov
sub
lods
adcb
fdivs
xchg
ret
cmp
or
out
push
std
lods
xchg
rcll
mov
nop
or
jae
inc
repz
lahf
imull
fsub
xchg
int
or
pop
jg
mov
jmp
popf
leavew
and
dec
or
roll
shlb
mov
out
xchg
andl
inc
adcb
add
lock
sbb
rorl
sbb
ficompl
sub
add
jae
fnsave
inc
xor
daa
xchg
cli
loop
scas
cmp
int
push
dec
call
xor
push
adcl
mov
or
jns
fsubs
mov
dec
mov
xlat
into
and
andl
lods
pusha
cmp
jecxz
loop
ds
fistpl
cmc
push
leave
inc
vpextrw
mov
call
sbb
repnz
inc
mov
mov
in
pop
xor
test
or
ljmp
leave
jno
pop
push
loope
mov
inc
sti
stos
pop
adc
and
test
dec
aad
dec
adc
lods
aad
enter
and
push
sub
cmp
int3
push
adc
imul
sbbl
rcl
std
push
inc
dec
in
popa
rol
pop
inc
std
dec
add
xor
and
push
aad
out
enter
jb
xor
add
jnp
call
jg
xchg
jbe
and
mov
cmp
cwtl
dec
call
xchg
sbb
lods
push
mov
cmp
xor
cmp
sbb
int3
jno
loope
adc
lret
mov
sub
dec
xor
xor
cmc
xchg
push
mov
cmc
adc
dec
adc
addb
sbb
loope
mov
cli
mov
sub
icebp
pop
sbb
jnp
jp,pt
cmc
stos
aas
mov
xlat
jb
xor
sub
pop
xor
pusha
or
add
mov
jg
xchg
sbb
cmp
adcl
shrb
cmp
lods
add
imul
jecxz
ja
jmp
je
inc
movsl
lds
jl
shrb
xchg
mov
jbe
popa
push
xor
mov
push
mov
out
push
sti
aad
ds
xchg
xor
inc
out
pop
test
adc
pop
imulb
inc
js
orl
mov
out
pop
push
cltd
or
inc
dec
jo
adc
mov
sbb
ret
pop
out
fcoml
dec
test
xchg
or
inc
xchg
enter
inc
ror
shl
adc
fsubs
and
out
and
push
cmpsl
fisttpl
adcl
imul
rol
fldcw
stc
mov
in
out
punpckhbw
iret
inc
gs
pusha
in
mov
outsb
les
add
push
inc
outsl
xor
inc
or
scas
sbb
and
shl
fxch
or
push
sub
xchg
sbbb
push
push
dec
and
pushf
ljmp
aas
lret
xor
and
xchg
enter
pop
push
popf
xor
in
mov
and
test
adc
push
adc
repnz
andb
lret
xchg
cmp
adc
dec
insb
leave
int3
lea
push
pushf
jge
jmp
sub
data16
adc
adc
push
stos
push
lods
fs
or
jns
rcr
stc
and
mov
push
adc
cmpb
or
jl
push
add
push
rorb
in
clc
js
or
jnp
test
dec
cs
push
popa
bound
push
inc
sub
enter
cmp
and
shll
or
into
cltd
and
pop
rorb
dec
dec
nop
sti
and
std
mov
or
push
dec
mov
jno
mov
push
rolb
add
roll
shrb
push
subl
rcll
divl
fcomip
adc
sarl
aam
dec
imul
mov
fldcw
or
push
xor
cmpsb
repnz
cmc
rclb
or
xchg
ret
cmp
adc
ret
ret
sub
adc
das
mov
repz
sub
arpl
sub
and
dec
bound
push
cmp
adc
and
aad
jp
into
jecxz
jb
sti
cltd
test
xchg
sbb
icebp
dec
and
imul
fwait
call
in
adc
pop
cs
mov
pop
mov
or
into
les
inc
in
mov
iret
std
xchg
testl
rcll
fcoms
mov
or
xor
inc
sub
sti
gs
movsl
and
add
pop
loope
mov
push
js
daa
rep
mov
fcoml
es
sbb
xchg
adc
xor
adc
add
lret
movsl
jmp
inc
push
jo
jno
and
fs
mov
inc
push
lock
push
lds
dec
sbb
sub
mov
or
mov
push
js
shrl
sahf
leave
mov
push
int
push
sahf
xchg
push
scas
addr16
lods
mov
mov
rclb
xchg
jnp
xchg
push
faddl
je
mov
dec
jl
pop
mov
adc
hlt
fmuls
and
push
aad
dec
mov
jns
adc
inc
push
pop
mov
call
fistpl
lods
jns
adc
mov
jmp
in
les
push
fwait
xchg
stos
lahf
jecxz
and
add
sbb
sbb
pop
sahf
push
and
repnz
sti
xchg
xchg
sub
test
sahf
out
jnp
mov
ja
xlat
aad
rcr
xorl
mov
xchg
pop
pop
and
add
fiaddl
rorl
mov
in
stos
aad
and
shr
dec
stos
push
js
mov
rcll
jle
loopne
jbe
cwtl
mov
or
or
enter
adc
mov
fldt
cwtl
scas
fisubl
jo
push
faddp
iret
cmc
push
rcll
dec
xchg
dec
sbb
xchg
lods
and
ficompl
mov
stos
insl
cmc
push
scas
cwtl
xor
adcl
jnp
lahf
xchg
ss
dec
bound
in
mov
hlt
ja
loopne
xor
mov
dec
dec
das
sbb
leave
clc
xor
adc
mov
out
and
push
adcl
mov
dec
mov
out
and
stos
jno
negl
stos
aad
xor
scas
stc
sub
dec
jbe
mov
sarb
inc
loop
jle
movsb
orb
or
fadds
pop
out
cwtl
pop
xlat
in
pop
ret
mov
inc
adc
xor
mov
in
out
out
rol
inc
adc
mov
in
push
pop
adc
sbb
mov
dec
push
pop
insl
cmp
shr
orl
fldenv
lods
aad
icebp
mov
popa
loope
std
xchg
mov
cmp
xor
cmpl
mov
clc
xchg
mov
adc
roll
std
push
xchg
sets
addb
jnp
test
repz
je
sbb
js
inc
sbbb
repnz
ds
scas
iret
add
pusha
xchg
mov
das
inc
adc
inc
imul
adc
xchg
xchg
outsl
or
call
imul
mov
cmp
xchg
adc
jmp
push
adc
adc
and
push
adc
lds
sub
and
xchg
mov
pop
popf
mov
mov
mov
adc
dec
in
insb
mov
sahf
jmp
sub
mov
xchg
fcoms
into
stos
mov
jae
mov
mov
jb
or
stos
adcl
mov
adc
push
cmp
adc
mov
mov
cld
frstor
call
dec
push
test
sub
push
push
adc
cmp
mov
loope
xchg
das
mov
in
iret
push
push
and
jns
outsl
push
nop
arpl
adc
and
mov
and
adc
outsl
sbb
and
and
mov
rcrb
jl
mov
inc
outsb
push
push
enter
loopne
adc
xchg
inc
mov
mov
mov
mov
imul
add
and
rorb
mov
call
xchg
jmp
test
adc
pop
push
loope
fstl
mov
mov
rcll
scas
mov
sub
sub
enter
das
notb
sub
push
lds
push
fcoms
inc
adc
dec
sub
ss
test
fdivs
sbb
aaa
sti
stos
and
fwait
jb
push
inc
fdiv
pop
popa
or
sbb
push
negb
sbb
inc
cmp
mov
sbb
pop
mov
push
jo
shll
stos
and
cmc
or
mov
or
push
insl
loop
adc
nop
jl
or
dec
add
iret
or
enter
push
sub
repz
mov
mov
test
dec
cmp
insb
push
rcr
fbld
jb
pop
push
lea
mov
mov
jnp
add
sbb
pop
std
add
xchg
or
push
xlat
lcall
lods
adc
pop
imul
pop
pop
scas
enter
push
inc
mov
dec
inc
fiadds
in
push
mov
xchg
je
inc
mov
insb
add
adc
xor
sub
xchg
xchg
adc
jno
and
push
lods
out
mov
add
ds
jno
fwait
adc
xchg
cli
sbb
ss
mov
inc
sahf
or
xor
mov
mov
repnz
stos
inc
mov
rorb
clc
lret
test
jne
in
mov
dec
mov
jno
iret
sbb
lahf
lods
cmp
cs
inc
ret
mov
xchg
adcl
and
xor
pop
and
mov
mov
pop
mov
sub
sahf
adc
push
add
arpl
or
jmp
jno
dec
jg
pushf
sub
ret
aaa
and
arpl
mov
movsb
push
jb
daa
inc
fcoms
cwtl
jge
in
adc
or
mov
arpl
loopne
in
roll
ja
xchg
and
push
ss
xor
push
out
jbe
xchg
mov
and
dec
jecxz
jns
data16
fwait
jl
mov
xlat
call
cltd
jecxz
sub
adc
xchg
pop
out
pop
pop
mov
jle
push
dec
pop
cmp
xor
push
pop
loop
fwait
bound
or
push
loopne
and
rcrb
dec
insb
lods
push
sti
xor
adc
loope
int
xor
mov
popa
mov
mov
hlt
dec
jnp
aaa
mov
lods
rclb
inc
scas
push
and
pop
mov
enter
gs
sbb
lods
aam
mov
scas
lahf
jecxz
testb
sbb
adc
xchg
sub
repnz
data16
int
sub
inc
sbb
call
ss
push
sub
mov
insb
mov
mov
xchg
mov
push
push
loope
cmp
or
xchg
ret
insl
mov
pop
add
push
dec
mov
push
mov
add
pop
xchg
cmp
sbb
push
adc
sarb
or
pop
lret
aas
out
call
testl
and
ret
lods
pop
adc
push
ss
imul
push
shrb
dec
ss
fmuls
decl
inc
add
movsl
adc
cmp
cltd
js
push
ret
stos
es
loopne
add
push
out
xchg
inc
clc
ss
leave
push
sbb
mov
cwtl
push
rol
outsb
lea
loope
sub
pop
xor
mov
repnz
scas
js
adc
sbb
jl
mov
or
adc
xchg
pop
cmc
pop
cmpb
xor
jne
inc
jl
jns
xor
push
fcmovnbe
push
mov
push
push
rolb
jae
shrl
into
repnz
mov
push
mov
cmp
xchg
es
ss
loop
mov
sbbb
xor
lds
cs
fcmovu
das
das
xor
jb
xor
daa
out
sub
sub
jb
mov
shll
xchg
add
fs
sbb
clc
push
adc
dec
int
dec
dec
ja
shll
leave
movsb
adc
fdivrl
shrl
xchg
dec
cmp
inc
ds
fildl
jae
fs
pop
jb
dec
mov
lods
add
mov
push
mov
mov
das
cmp
testb
hlt
pop
hlt
popf
pop
insl
mov
shl
mov
insl
out
lret
fxch
jne
fsubrp
lock
call
sahf
and
or
xchg
lds
fcoms
mov
data16
insl
das
scas
push
pop
xchg
jnp
enter
out
pop
jl
jns
dec
test
adc
cli
scas
xchg
adc
sar
mov
adc
aaa
imul
or
sbb
mov
fwait
adc
pusha
dec
mov
push
mov
push
add
mov
popf
js
pop
mov
out
sbb
aad
fisubrl
out
data16
cmp
lds
mov
mov
repnz
cmpsl
adc
or
or
adc
xchg
cmp
mov
fld
jo
mov
cwtl
cmp
inc
nop
fsts
mov
adc
mov
and
in
out
or
jmp
mov
push
jg
pop
lods
andb
ss
shll
xchg
pop
mov
jle
jmp
iret
dec
sahf
aad
out
out
testl
or
loopne
mov
outsb
push
or
data16
and
mov
sub
cmpb
or
in
sub
adc
pusha
inc
adc
mov
in
xorl
jge
fptan
rcrl
out
int3
and
pop
pop
or
xor
in
xor
inc
loope
aaa
mov
icebp
jns
in
fdivp
sbb
cmp
pusha
xchg
ret
dec
push
pop
cli
sub
js
inc
inc
ss
rol
jno
ljmp
cmpsl
jmp
adc
dec
js
add
mov
rcrl
pop
sub
stos
iret
bound
and
adc
or
pop
movsb
adc
xlat
fldt
xchg
or
inc
pop
jge
cmc
xchg
sbb
jo
or
push
loope
jb
test
or
mov
adc
adc
pop
push
int3
in
jp
fs
push
pop
mov
es
in
test
xchg
mov
dec
pop
orl
lds
mov
jg
xchg
cmp
mov
push
dec
ss
rcl
out
jnp
sbb
shlb
push
pop
or
inc
push
addb
scas
or
sbb
call
dec
or
repnz
hlt
in
xor
xchg
mov
pop
add
pop
add
adcb
mov
fsubs
loop
mov
sahf
loop
xchg
mov
sbb
sub
movl
arpl
movsl
ficompl
stos
js
xlat
lret
push
jnp
insl
in
mov
out
adc
mov
mov
call
dec
pop
aas
pop
test
rorl
sub
or
icebp
push
jge
dec
cmp
or
lahf
fldenv
fisubrl
idivb
sub
xor
adc
xchg
dec
aaa
xchg
cmp
iret
loop
jbe
xor
pushf
ss
outsl
xchg
jmp
xchg
lock
mov
and
bound
mov
cmp
jne
jmp
fxch
aaa
dec
add
push
mov
push
imul
ss
testb
mov
adc
pop
subb
subl
push
add
jbe
mov
and
inc
xchg
inc
mov
fdivr
js
out
lods
stos
inc
dec
ds
jae
and
and
aad
mov
icebp
int
inc
cmp
or
and
push
in
repz
sahf
lahf
xchg
push
inc
bnd
or
in
ds
je
jecxz
jb
cld
test
jecxz
cwtl
push
pop
insb
xchg
rol
mov
push
add
cmp
aas
mov
cmp
test
mov
lret
clc
inc
inc
mov
filds
xchg
push
out
inc
cli
fmulp
out
scas
mov
push
push
pusha
pop
adc
adc
shll
rolb
ror
adc
rcrl
pop
int
dec
std
inc
jno
cmp
icebp
sub
push
dec
fisubrs
imull
mov
out
mov
adc
and
xlat
inc
cmc
iret
cmp
shll
insb
sub
pop
sbb
repnz
push
push
cs
and
cltd
add
push
inc
inc
ljmp
inc
mov
mov
mov
clc
stc
jae
mov
fnsave
aad
cmp
aam
scas
ret
adc
adc
push
cwtl
dec
mov
dec
xchg
inc
sbb
filds
cmpl
outsl
pop
or
adc
cltd
or
mov
dec
dec
inc
lret
adc
pop
add
arpl
fdivs
mov
mov
imul
inc
test
and
pusha
inc
fwait
bound
and
push
in
xchg
mov
sbb
sub
sti
jae
mov
sbbl
dec
cmp
pop
inc
or
jae
cli
stos
lret
jp
dec
jge
aam
fwait
dec
xor
lock
mov
rdpmc
mov
dec
imul
shlb
pop
mov
dec
push
xor
pop
xchg
inc
cli
sub
jmp
push
in
xor
push
push
mov
lret
push
ds
lods
push
adc
adc
dec
adc
mov
mov
xchg
xor
jns
insl
out
push
push
ja
inc
lods
jg
mov
dec
push
lods
mov
fdivp
xchg
mov
lods
and
inc
dec
ret
sbb
fsubrs
mov
push
vcomisd
sbbl
add
sti
add
push
into
fistl
test
pop
sbb
shll
inc
cs
push
mov
jno
and
fstps
and
mov
ja
out
xor
adc
xchg
ja
dec
push
mov
mov
and
dec
push
cwtl
loopne
mov
andl
dec
iret
lods
fsubrs
bound
mov
sarl
sbb
clc
into
adc
inc
icebp
loope
fs
xor
dec
enter
sbb
ja
mov
jecxz
fbstp
cmpsl
ljmp
in
sub
mov
jns
pop
xor
sub
pop
scas
lods
repz
cmp
lock
inc
imul
aad
mov
mov
ret
sbb
cmpsb
rol
iret
push
mov
xor
cmp
mov
leave
inc
lea
and
lods
fsubs
out
mov
sub
mov
sub
jae
mov
push
into
es
popa
jl
jae
or
dec
xlat
lods
rol
inc
loope
mov
dec
cmp
js
cwtl
addr16
jne
cli
ficoms
int
das
lods
test
cmp
or
xor
rcrl
mov
jb
enter
into
push
and
aaa
test
xchg
push
sbb
or
fcmove
push
enter
jno
lds
lret
or
out
push
mov
ret
jmp
pop
mov
cmp
jb
int3
aad
sub
adc
xchg
lock
jnp
push
rcll
pop
mov
jns
insb
popf
add
insb
push
bound
lret
roll
xor
jmp
div
leave
pop
jae
sbb
mov
loopne
jae
adc
ret
rcrl
loope
and
sub
lea
inc
jb
mov
add
xor
xchg
xchg
mov
sbb
xchg
pop
cmc
cmpsb
mov
jns
dec
cmpsl
push
xchg
int
clc
lret
jnp
and
cmp
dec
lcall
xchg
dec
es
dec
cli
scas
lret
aas
hlt
push
rorl
out
lds
rolb
and
pop
loope
dec
mov
iret
call
mov
cmp
fstpt
aaa
mov
inc
mov
incl
mov
fisubrl
aad
jne
cli
mov
sbb
int3
jns
int
je
xor
pop
pop
ret
pushf
mov
mov
stos
sbb
push
stc
or
je
and
cmp
hlt
push
movsb
xchg
insb
and
in
mov
sbb
or
mul
push
pop
xchg
dec
fisubs
add
mov
repnz
ffree
push
call
out
xchg
pop
pop
add
pop
mov
test
test
imul
mov
jns
or
pop
or
in
fisubs
incb
movsb
cmpsl
out
dec
or
inc
mov
push
pop
mulb
push
testb
dec
adc
adc
cmp
inc
xchg
ljmp
lea
or
add
push
enter
push
test
and
dec
and
test
add
mov
ds
mov
jne
shlb
fmulp
xchg
sbb
fsubrl
leave
xchg
mulb
and
dec
mov
cmpsl
xchg
pop
rcrb
xchg
push
mov
inc
adc
sbb
adc
pop
std
lea
mov
mov
rclb
adc
sub
bound
cmp
cli
es
imul
pusha
mov
pop
push
dec
adc
mov
rorb
mov
out
fsubrs
mulb
test
xor
and
dec
call
int
dec
pop
xchg
jae
pop
rorl
ljmp
push
test
out
icebp
aaa
pusha
jg
push
outsb
fsubrs
rclb
stc
icebp
dec
js
fsubrl
sarb
push
xchg
outsb
push
out
adc
mov
int
mov
inc
push
cmp
popa
fmuls
mov
push
arpl
mov
or
sub
dec
dec
adc
jge
sub
clc
rorb
js
adc
ret
adc
add
and
loope
adc
and
lock
mov
das
pop
mov
in
cmp
xor
jl
pop
push
or
mov
jl
dec
pop
lcall
fbstp
xchg
push
push
xchg
mov
jecxz
fadd
push
pop
mov
outsl
xchg
push
out
push
pop
stos
mov
ja
sub
inc
stc
xchg
cltd
subl
xchg
les
test
popf
jmp
push
xor
mov
push
mov
cli
jae
jb
outsl
out
mov
inc
pop
push
andl
cltd
inc
ljmp
std
cltd
nop
je
data16
dec
gs
add
push
add
sub
out
or
cmpsl
inc
ficomps
test
shll
aaa
jg
stos
pop
and
pop
or
mov
inc
incl
stos
hlt
shrb
loope
mov
inc
test
outsl
aam
sbb
push
push
mov
hlt
mov
into
cmpsb
add
ljmp
cmp
jmp
std
loopne
neg
push
fdivs
lods
shlb
add
xor
clc
fiadds
movsb
and
outsl
lahf
dec
pop
cmp
cmp
add
test
cmp
sbb
xlat
loope
fcoms
adc
xchg
lds
jae
dec
push
push
cmp
or
ds
pop
negb
adc
xchg
in
xchg
adc
fcoml
adc
sub
pop
ss
push
enter
call
push
mov
loope
das
mov
sub
mov
inc
fs
int
fsubs
xchg
push
xor
call
imul
es
mov
aad
fadd
pop
aas
int
sti
cmp
inc
fdivs
std
pop
fwait
imul
es
movsl
fdivs
mov
scas
pusha
and
xchg
sbb
push
mov
and
into
cwtl
shll
fsin
enter
in
jne
shlb
loop
mov
ss
push
rclb
add
inc
stc
pushf
aam
mov
aam
xchg
fistl
movsl
push
fadd
inc
cld
jns
jo
inc
stos
mov
rcr
int3
into
mov
pop
mov
and
add
xchg
dec
push
loop
mov
pop
xchg
stos
dec
jo
fdivs
dec
mov
out
dec
pop
rcll
and
push
fmull
test
jo
outsl
adc
xor
cltd
and
cmpsb
in
scas
add
pop
rcll
push
aad
lods
jb
push
push
testb
scas
mov
and
mulb
movsl
push
popa
jb
and
or
dec
dec
shrb
pop
jae
sarb
dec
xlat
pop
imul
sarb
mov
bound
shll
es
xchg
or
stc
fsts
cltd
xchg
leave
push
rcll
lock
lcall
xor
mov
push
call
stc
addb
int
push
mov
dec
dec
push
outsb
mov
xchg
and
roll
push
dec
mov
out
cmp
mov
xchg
scas
out
ss
cs
mov
daa
mov
hlt
push
ret
push
sbb
mov
popf
jmp
dec
mov
pop
idivl
call
mov
addr16
adc
ss
ss
and
dec
clc
aad
dec
add
test
mov
sbb
arpl
test
push
dec
pop
mov
cmpsl
popa
mov
xchg
mov
xor
data16
adc
push
or
inc
jle
push
xor
inc
or
mov
push
lods
in
mov
stos
adc
add
popa
jge
adc
daa
mov
cmp
mov
in
push
je
inc
aad
push
jg
mov
xor
xor
jo
out
dec
fwait
sub
jne
das
xorb
adc
mov
scas
add
mov
push
xchg
mov
and
lret
inc
sarl
add
stos
ds
push
addr16
xchg
inc
and
imul
adc
push
out
inc
lret
push
ret
pop
ds
addb
pop
push
cwtl
push
pop
dec
loopne
push
pushf
adc
xchg
fmuls
xchg
loopne
jae
add
aam
cmp
or
add
in
inc
es
pop
push
xchg
nop
popf
lds
xchg
rcll
xchg
icebp
mov
movsl
cmp
pop
dec
xchg
fcoms
shlb
xchg
jmp
and
shlb
sub
adc
jb
sbb
aaa
fisubrs
pop
xchg
shl
xchg
dec
adc
cli
sbb
orb
sub
aad
push
push
push
pop
subb
xlat
mov
ss
addr16
stos
xchg
bound
xchg
fdivrp
dec
cmpsl
shlb
jg
jns
push
jae
xlat
xchg
adc
mov
jp
test
movsl
mov
gs
ss
lds
out
scas
mov
mov
push
adc
pop
out
or
fwait
push
test
mov
call
and
xor
mov
push
sahf
out
neg
fldlg2
or
jae
mov
daa
lds
mov
inc
jbe
sbb
jbe
movsb
jns
jmp
jae
leave
jbe
and
test
fildll
mov
lods
xchg
hlt
or
mov
pop
movsl
les
mov
mov
dec
jmp
lea
pop
gs
mov
sarb
xchg
push
das
imul
cmp
sbb
bound
test
ds
imul
pop
push
inc
dec
and
xchg
sub
ds
adc
cld
jp
xor
sbb
xor
outsb
sub
icebp
call
jb
jns
mov
add
in
adc
mov
cwtl
loopne
sub
push
jnp
dec
pop
cmp
cltd
push
dec
add
out
jle
xchg
pop
stc
push
mov
or
rclb
and
js
rcll
or
es
xor
lock
imul
pop
or
dec
dec
adc
push
shlb
ljmp
int
shrl
out
xchg
xchg
mov
loope
or
imul
pop
xchg
and
das
dec
mov
jl
popa
inc
xor
hlt
std
arpl
pop
out
sbb
gs
inc
leave
iret
inc
jae
fwait
dec
xchg
add
mov
call
fcoml
push
jnp
push
mov
ret
lret
aad
dec
enter
adc
xchg
aaa
mov
insb
cmp
mov
popa
mov
test
out
jae
roll
jmp
xlat
incb
mov
jae
pop
stos
lret
inc
xor
nop
mov
jg
pop
mov
es
or
icebp
repnz
push
addr16
aam
xchg
into
ja
add
addb
sub
addr16
ret
xchg
sub
adc
les
sub
add
stc
xchg
int
arpl
mov
mov
sub
imul
mov
inc
add
jge
xor
std
inc
jg
dec
sub
les
add
hlt
sbbl
xchg
sub
ficoms
sbb
mov
xlat
sub
mov
push
xor
pop
mulps
inc
jns
fcmovnb
rorb
xchg
push
xchg
sti
jb
mov
shlb
mov
sub
mov
jnp
mov
push
ret
lret
je
adc
push
jno
pop
jae
jns
pop
jno
inc
es
mov
xchg
nop
xchg
sahf
mov
xor
push
pop
mov
subl
sub
push
inc
sti
fmuls
sarb
dec
jmp
leave
std
dec
cmc
dec
fildll
adc
jb
pusha
and
xchg
push
add
fwait
sbb
fnstsw
inc
xor
mov
sub
sub
mov
mov
xchg
out
push
pusha
andb
dec
in
pop
lahf
pop
or
dec
jp
jmp
dec
mov
add
mov
icebp
dec
pop
mov
xchg
xor
inc
dec
lret
mov
mov
push
outsl
dec
mov
jns
mov
stos
inc
insb
shlb
mov
dec
das
sub
sbb
repz
mov
xchg
pop
dec
push
xchg
ss
pop
add
lcall
fisubs
mov
push
roll
and
push
adc
shrl
cmp
es
sub
inc
stc
out
mov
aad
sti
enter
mov
add
fildl
nop
cmc
dec
ficompl
sub
sbb
dec
push
dec
and
fisubrs
enter
test
sub
add
sbb
ja
mov
out
pop
aad
in
adc
rolb
mov
repz
sbb
cmp
dec
mov
sbb
scas
popf
xchg
xchg
dec
dec
fildll
fwait
pop
jp
pop
filds
cli
mov
xorb
aad
test
cli
ss
inc
adc
sub
shlb
push
or
xchg
sbb
in
cmp
sbb
test
sub
xlat
xor
adc
xor
jne
adc
sahf
dec
test
cmp
fnstenv
and
enter
daa
pushf
test
jnp
lcall
cmp
ret
and
rorb
jae
pop
dec
andb
sub
stos
sub
sub
int
loope
mov
inc
ret
xchg
cmp
orl
scas
adc
push
cmp
push
ss
xchg
xchg
sub
je
cmp
jl
out
xchg
inc
inc
stos
adc
jne
xchg
fisubrs
pop
adcl
xchg
xchg
mov
sbb
inc
call
xor
mov
cmc
add
inc
jbe
pop
js
mov
mov
cmp
pop
ret
shlb
testb
call
xor
fcoms
sub
mov
pop
jno
xchg
cmc
cmp
jmp
push
push
dec
xchg
es
outsw
cld
add
out
mov
fldt
xchg
or
add
loope
sub
adc
loope
pop
adc
mov
imulb
aad
mov
loope
xor
sbb
ss
test
dec
shlb
push
stos
jnp
push
dec
pop
dec
data16
addr16
iret
mov
sub
notb
xchg
and
loopne
pop
or
mov
lret
mov
mov
out
mov
ja
add
test
into
faddl
loope
aam
sub
inc
and
inc
or
js
dec
push
lods
out
xor
pusha
push
imul
shlb
int
push
loope
mov
pop
cwtl
lock
sbb
std
adc
pop
es
push
jnp
sti
popa
add
movsl
pop
mov
adc
xor
int3
mov
inc
xchg
dec
add
pop
add
loop
lret
test
sti
fcmovnb
fscale
scas
pop
mov
mov
xor
cmp
pop
out
push
and
scas
stc
ljmp
sahf
dec
fimuls
xchg
add
mov
push
xchg
dec
push
adc
enter
add
test
out
xor
fcom
test
ret
push
test
mov
leave
fldt
dec
jno
nop
xor
fdivs
inc
fldenv
lds
call
dec
enter
fsub
aad
test
add
jg
sub
cwtl
xlat
xchg
sbb
xchg
insl
cmp
fnstenv
cmp
aad
mov
in
lahf
fdivp
and
fmuls
adc
xchg
push
cwtl
int
jb
add
lds
mov
adc
mov
mov
xlat
mov
test
outsl
popa
mov
xchg
pop
xor
sub
imulb
jae
int3
dec
mov
es
cltd
in
in
adc
arpl
test
repnz
dec
jno,pn
adc
dec
lock
jno
dec
inc
lret
dec
icebp
sahf
clc
xor
movsb
xor
pop
shlb
sub
leave
mov
mov
push
imul
mov
sbb
daa
stos
pop
dec
stos
mov
fisttps
js
push
mul
push
cmp
adc
into
inc
mov
out
xor
and
jo
inc
or
cmp
enter
dec
inc
mov
pop
jno
mov
loopne
lea
sub
pop
mov
xchg
adc
xchg
cmp
adc
insl
jnp
imul
jg
add
std
fisubrs
andb
and
fwait
and
push
inc
mov
pop
cli
orl
dec
dec
xor
mov
mov
mov
shrl
pop
cmp
sbb
test
dec
push
xor
repz
cli
aam
dec
or
mov
pop
fldln2
xor
mov
cld
xchg
fwait
xor
out
rcll
and
add
mov
loope
mov
sub
cmp
in
or
inc
mov
loope
fldt
stos
and
cmp
mov
xchg
adc
inc
sbb
mov
adc
or
mov
je
mov
dec
jae
jne
jmp
jl
push
pop
pop
sub
xor
add
sub
mov
lcall
bound
loop
xchg
insb
mov
and
xchg
xor
mov
push
ficomps
scas
sub
mov
mov
loope
aad
inc
jnp
icebp
pop
mov
cs
outsb
sub
jle
loop
and
lret
insl
mov
mov
jg
jae
imul
out
test
stos
bound
lret
out
adc
je
jns
std
add
mov
lcall
enter
dec
movsb
int
std
fbld
scas
cmp
insl
loopne
mov
xchg
enter
inc
xchg
notb
mov
cld
notb
movsb
cs
test
and
xor
mov
fs
xor
scas
mov
xor
in
loope
daa
cmp
mov
jne
aad
js
fimull
adc
jae
xchg
out
dec
pop
ss
aad
jmp
push
mov
push
sahf
mov
shrl
cmpsb
pop
pop
fadds
stc
out
dec
sahf
push
rol
fidivrl
xchg
xor
in
popf
pop
mov
into
or
nop
cmp
dec
pop
xchg
push
loope
inc
pop
push
mov
xlat
mov
adc
xchg
fnstenv
outsl
lcall
and
rorl
test
xlat
adc
xchg
test
arpl
add
adc
cmc
sahf
sahf
cbtw
pop
jno
xchg
loope
xchg
mov
int3
in
sbb
fwait
pop
xchg
inc
fists
mov
call
call
sti
fisttpl
loop
jae
adc
push
push
adc
cmp
mov
leave
ret
stos
test
push
mov
cmp
sub
cmp
mov
mov
add
xchg
mul
cmp
jae
shlb
cwtl
lods
sti
push
xchg
std
and
xor
push
push
fisubrs
mov
pop
jl
jns
sub
add
mov
push
mov
xchg
leave
inc
aad
lret
or
and
rorl
loope
sub
mov
sbb
adc
das
xchg
pop
in
dec
notb
dec
test
dec
pop
sahf
jb
addr16
push
shlb
aad
inc
jl
jne
cwtl
aad
xchg
mov
insl
loope
mov
mov
mov
test
clc
dec
xlat
mov
repz
js
and
xor
xchg
aaa
or
jbe
dec
lret
or
fstl
mov
ficoml
and
shrl
adc
ret
movsl
imul
xor
push
aas
dec
fistps
std
fldenv
out
or
test
stos
jmp
aam
mov
lds
scas
aam
mov
icebp
add
loope
push
lahf
xchg
and
scas
movsl
xlat
aad
rcl
pop
pushf
ja
cltd
les
in
cwtl
sbb
insb
fisttps
add
data16
and
outsl
mov
push
mov
lcall
dec
sahf
shll
cmp
push
jbe
adc
jbe
pop
test
add
rorb
pop
popf
lods
sahf
adc
cmpsl
or
out
sti
pop
or
popf
push
xor
xchg
dec
mov
cmp
das
jmp
adc
ret
xchg
or
sbb
fildl
and
jbe
xor
dec
addb
in
in
cmc
inc
dec
icebp
fisttpl
subb
and
add
fsubs
fs
icebp
xor
pop
cltd
jle
push
dec
mov
ficoml
shl
push
sbb
pop
push
dec
leave
xor
loop
mov
push
jecxz
mov
lds
fadds
push
shll
divb
cmp
mov
mov
or
sar
push
cmp
lods
cmp
dec
orw
andl
push
and
cmc
idivb
stos
test
inc
mov
push
pop
mulb
mov
cmp
push
mov
cmp
out
mov
push
adc
or
mov
lods
dec
mov
bound
hlt
ror
enter
jb
jno
ja
mov
addr16
rorb
in
mov
pop
in
push
cld
iret
leave
cmp
adc
mov
pop
xchg
mov
xlat
bound
das
test
inc
ljmp
xchg
xchg
dec
dec
xchg
fwait
insl
or
ja
pop
int3
xor
imul
dec
cs
in
push
into
into
aam
divb
stos
cmp
js
push
sbb
xchg
cmp
test
pop
xlat
in
add
call
or
inc
add
pop
inc
xchg
and
inc
sub
sbb
jg
pop
lcall
fstpt
mov
ljmp
lahf
adc
jmp
and
aam
xlat
mov
ss
jae
pop
inc
lret
or
ficoml
inc
leave
das
loop
ret
fsubrs
leave
jae
pop
sbb
jle
test
pop
mov
mov
daa
or
mov
or
sbb
test
out
arpl
pusha
push
aas
test
xor
mov
sbb
sbb
rclb
mov
cmp
das
pop
aad
stos
sti
push
dec
mov
jb
repnz
adc
cmp
inc
lret
and
push
adcb
xor
leave
aad
inc
lods
xchg
fs
sahf
es
adc
xor
das
push
sbb
scas
mov
cltd
out
aam
repnz
push
in
push
lret
push
dec
decb
jb
inc
fiadds
dec
dec
xchg
mov
push
in
stos
fcmovbe
lods
push
aad
push
push
stc
push
lods
mov
aad
jns
out
sbb
pop
cld
push
push
inc
cltd
movsb
stc
add
add
or
jg
outsl
hlt
adc
pop
adc
push
mov
shrb
ret
mov
popf
jns
in
out
fwait
sub
std
das
xchg
jae
pop
jb
inc
add
cmp
dec
sbb
sub
xlat
pusha
jbe
mov
scas
dec
cmp
ljmp
sub
push
jno
push
inc
orl
scas
in
xchg
and
fisubl
and
movb
imul
xchg
xor
fcmove
jle
push
pop
and
jb
mov
loope
push
sbb
push
decl
ss
cmp
movsl
bound
bsr
cmc
enter
dec
adc
out
int
pop
sub
int3
sub
jle
repz
xchg
add
jge
fidivs
mov
jge
mov
push
test
mov
sar
add
shlb
push
and
dec
shll
xor
inc
shlb
pop
pop
adc
lock
call
xchg
dec
mov
xchg
push
mov
mov
loop
in
fbstp
and
xor
sbb
jae
adc
hlt
pop
hlt
icebp
xor
arpl
sub
fsubs
fcoms
call
testl
mov
sbb
mov
fbstp
into
ret
lds
idiv
and
loope
sahf
shl
xor
inc
repnz
xchg
xchg
add
loop
push
rclb
fmul
popa
adc
popl
adc
outsb
sbb
fcoms
sarl
inc
and
pop
xor
cmp
shll
call
sarl
mov
bound
push
fwait
xchg
xor
sti
rorl
into
and
dec
shll
mov
sbb
sar
cmp
std
sbb
add
dec
pop
sub
sub
mov
popf
cmp
sub
fisttps
xchg
scas
mov
or
inc
andb
loop
ss
push
xchg
shrd
add
or
mov
aam
mov
cmp
int3
shl
or
inc
xchg
repz
xchg
mov
sarb
out
and
mov
test
xor
in
dec
shl
pop
xor
xchg
insb
es
sbb
dec
mov
inc
dec
push
test
mov
cltd
xchg
stos
imul
test
fs
mov
scas
dec
xchg
cwtl
fs
mov
adc
and
jo
cmp
ret
mov
xor
ljmp
add
rcll
mov
mov
push
xchg
pusha
int
or
inc
stos
push
in
push
push
jnp
pop
cmp
hlt
add
lea
pop
shll
and
dec
dec
dec
mov
mov
icebp
jne
inc
push
dec
or
dec
push
ret
xchg
sub
inc
leave
push
xchg
push
fstpl
lret
ljmp
inc
and
push
into
and
push
and
int
rcl
mov
jmp
push
mov
push
jns
mov
mov
daa
sahf
popa
inc
or
in
sbb
shrb
shrb
or
pop
fcomp
sub
jmp
mov
cmc
loop
and
mov
mov
inc
push
add
sub
sub
mov
inc
imul
jp
or
push
cmc
sbb
pop
mov
aam
or
cmp
fdivr
stc
push
pop
std
int
dec
fildl
lahf
dec
mov
pop
add
es
test
test
int3
cmc
loopne
dec
sub
cmpsb
ja
or
dec
dec
jle
push
lea
scas
sahf
or
xor
fsubr
loope
fstl
sub
mov
dec
sbb
adc
xchg
push
lret
scas
fcomp
or
sahf
xchg
pop
ja
ret
adc
jge
int
inc
outsb
and
inc
inc
int
and
or
sbb
into
cs
shr
nop
popf
mov
sar
jecxz
and
popa
pop
mov
aaa
jbe
adc
mov
pop
or
outsl
andl
mov
mov
mov
scas
or
xor
fdivs
movsb
adc
push
insb
loope,pn
gs
int3
dec
jb
loopne
mov
testb
sub
stc
dec
jp
mov
xchg
pop
call
mov
or
gs
mov
push
jno
pop
test
lods
mov
lock
fs
adc
and
addr16
in
mov
push
and
mov
pusha
scas
push
push
and
sub
push
pop
das
mov
insb
inc
fs
push
shll
jne
push
movsl
jbe
int
or
fnstenv
ljmp
test
adc
cli
or
lcall
sbb
scas
adc
or
ss
fsubr
adc
adc
mov
pop
push
in
mov
pop
imul
sbb
push
push
push
jbe
push
and
push
and
cwtl
aad
lock
pop
adc
ret
fimuls
sbb
mov
pop
xchg
pop
loop
push
jle
cmpsb
ds
or
sbb
aaa
ss
inc
dec
daa
scas
dec
mov
es
clc
roll
dec
xlat
push
std
sub
shll
inc
dec
rcrb
incl
pop
mov
push
dec
lret
in
cltd
jo
dec
mov
or
fcoms
adc
cmc
inc
scas
adc
xchg
jae
inc
je
push
mov
or
ja
repnz
sbbb
mov
or
mov
mov
icebp
adc
inc
inc
fimull
xor
xchg
lds
fstpl
and
mov
subl
mov
inc
pop
stc
test
add
push
scas
lcall
mov
fsubr
or
ret
or
ljmp
cmp
frstor
jbe
ja
mov
out
shrb
add
pusha
es
or
repnz
mov
cs
dec
mov
rcl
ret
cmc
dec
xlat
clc
lock
in
call
mov
and
ja
lret
fsubrl
sub
lret
out
into
popa
loope
outsb
pop
aad
mov
into
aad
mov
rcl
add
lret
sub
xchg
outsl
outsl
push
add
and
lret
xchg
lret
mov
lock
cmp
push
divb
dec
pop
inc
mov
dec
mov
sarl
lret
scas
adc
xchg
dec
lret
js
ss
sbb
test
and
push
sub
test
fimuls
adc
pop
adc
mov
in
stos
fcoml
nop
arpl
inc
sbb
je
rolb
pop
inc
sti
pop
lret
ja
dec
cwtl
cwtl
jae
ss
push
mov
jge
pop
cli
jo
test
in
lret
mov
xchg
enter
xchg
pop
add
mov
push
pop
jl
cmp
mov
mov
jmp
gs
call
cmp
push
cmp
push
addl
adc
scas
or
cwtl
adc
push
lods
aad
pop
das
mov
push
sar
insb
push
sbb
mov
icebp
dec
out
xor
mov
mov
dec
mov
aam
lds
pop
sbb
pop
sbb
repnz
cs
es
in
fs
hlt
mov
cmpb
sbb
sbb
add
adc
adc
shr
cltd
fisubrl
mov
mov
mov
mov
popa
push
or
inc
mov
jae
push
adc
xor
or
js
push
mov
and
shlb
mov
adc
insl
jb
jge
pop
out
adc
sub
ret
sub
fcoms
and
lock
dec
jmp
inc
dec
jmp
mov
sub
ja
xor
mov
sbb
int
mov
andl
je
mov
sahf
scas
mov
shlb
dec
jne
in
push
xchg
mov
dec
aam
mov
call
lock
repnz
mov
sub
pushf
fistps
sbb
scas
mov
gs
inc
jmp
mov
lcall
fwait
jo
lods
xchg
jmp
loope
cmpsb
adc
ja
and
out
test
jb
inc
outsb
bound
loopne
pop
das
pop
and
ja
out
das
inc
loop
xchg
rcrb
mov
stos
adc
mov
cmp
lret
xchg
aam
cmp
push
xlat
pop
mov
cmc
jb
fnsave
fdivl
push
and
out
sbb
pushf
scas
or
repnz
dec
shl
out
in
inc
scas
movsb
in
mov
loope
xchg
fcomps
aam
lret
adc
pop
stos
inc
sbb
fadd
jne
jae
in
scas
xlat
mov
fildl
imul
or
dec
pop
movsl
pop
push
sub
cmp
aaa
xlat
not
cli
push
xchg
xor
mov
mov
outsb
repnz
push
dec
cmc
mov
popf
xchg
cli
testb
fists
out
mov
or
adc
inc
pop
icebp
andb
cmp
pop
jns
into
outsl
sub
mov
sahf
jl
call
dec
lea
std
icebp
push
adc
pop
addl
into
lods
ficoml
shll
mov
adc
sub
ficomps
pushf
jae
sbb
dec
je
jno
sub
push
sub
mov
pop
orl
cmc
adc
mov
push
mov
stos
xor
and
cmp
mov
addr16
xchg
clc
adc
mov
jnp
das
push
jne
adc
int
repnz
xchg
test
or
fcoms
jb
sbb
test
insl
jecxz
inc
xor
std
fnstcw
inc
stos
pop
lea
int
jae
mov
jge
jne
push
xchg
lods
xor
cld
jle
add
data16
stos
xchg
outsb
in
xlat
adc
mov
inc
xor
enter
shll
mov
aad
inc
dec
xchg
xchg
out
jnp
faddl
push
fdivrs
and
cld
js
jbe
out
xor
inc
call
dec
and
pop
stos
pop
loope
ja
jns
cltd
add
mov
orb
mov
xor
add
jb
xchg
adc
and
test
rclb
mov
inc
xor
loopne
xchg
pop
daa
aad
aam
test
popa
in
lea
lods
arpl
loop
xor
ss
lret
inc
mov
and
rsm
adc
fcoml
xchg
aad
add
sahf
dec
lcall
mov
shr
sub
fwait
bound
inc
add
loop
cli
adc
stos
cmp
xor
arpl
push
xor
cld
adc
fimull
fistpll
dec
xor
dec
ret
sub
fldenv
lock
mov
cmc
and
push
push
mov
mov
daa
xor
arpl
test
cmp
das
nop
or
dec
mov
ror
out
adc
out
cmpsb
out
push
inc
cmp
and
sarb
or
push
lds
pop
stos
daa
test
pop
push
loopne
xchg
or
add
dec
mov
sbb
aas
push
sbb
jnp
ja
adc
adc
sbbb
push
jb
sbb
inc
pop
adc
xchg
and
pop
jge
jecxz
cmp
jne
or
je
push
adc
jmp
mov
jl
das
dec
nop
stc
dec
fs
insb
cli
into
bound
dec
lea
sahf
lahf
pusha
inc
nop
mov
icebp
push
xchg
lods
test
mov
icebp
mov
cltd
cmp
mov
add
scas
xchg
rolb
jno
pop
scas
or
inc
jg
movsb
fdivs
adc
add
push
repz
lds
jnp
sub
fsubrs
test
leave
and
xchg
lds
rcll
stos
rcr
xor
loope
mov
enter
pop
stc
fcom
cmc
loope
sub
cli
pop
or
std
cwtl
int3
decl
xor
scas
jmp
cmc
out
xlat
icebp
pop
pop
pop
sahf
xchg
mov
add
mov
push
and
dec
fchs
xchg
es
test
jns
in
testb
push
xchg
push
push
shl
out
adc
in
cwtl
test
rol
dec
mov
jecxz
push
mov
daa
xlat
pop
push
and
rcll
mov
sub
mov
add
xchg
mov
cli
fwait
repnz
xchg
in
jecxz
adc
and
bound
jge
inc
and
aas
xchg
clc
dec
inc
mov
mov
pushf
in
inc
or
push
xlat
xchg
mov
loopne
mov
sub
ret
jo
js
sbb
pop
and
push
fsts
push
cmp
pop
dec
pop
or
xchg
test
clc
gs
mov
in
dec
push
jbe
icebp
xchg
sub
mov
fdivrp
icebp
xor
sti
sub
fidivs
into
dec
stos
push
mov
scas
negb
shlb
xchg
push
dec
xchg
xchg
jno
cmp
pop
insl
push
pop
out
dec
orb
sbb
and
sub
pop
ret
call
pop
ret
popf
popa
ljmp
jnp
mov
xlat
in
out
jae
cmp
jnp
add
nop
imul
pop
fcoml
xorb
sarb
xor
das
popf
dec
insb
add
imul
jne
cmp
and
push
xchg
xor
mov
push
repnz
cmc
pusha
mov
push
push
es
and
fadd
rcll
aas
cmp
lret
pop
fcomps
pop
inc
jecxz
adc
push
sub
gs
xor
mov
pop
dec
loope
subl
push
push
xor
sarl
cmpsb
add
stos
adc
out
and
sbb
xchg
mov
xchg
cli
mov
push
or
mov
mov
lcall
mov
adc
xor
sarb
imul
shlb
stc
fdivr
stc
scas
jecxz
inc
mov
xchg
mov
and
jno
fdivrl
fcoms
xor
xchg
rcll
add
add
xchg
enter
adc
push
xchg
clc
push
out
pop
test
in
rcll
pushf
stos
adc
sbb
fists
pop
mov
out
repnz
rcrl
inc
into
and
leave
xchg
xor
lock
or
push
ret
xchg
add
xchg
mov
fcmovb
ret
ja
mov
mov
sahf
mov
ss
cmc
xor
push
lahf
insl
cmp
add
sbb
jb
enter
loope
fs
adc
mov
inc
push
cmpsl
push
aad
popf
push
es
cld
mov
mov
ja
imul
mov
sbb
aad
push
mov
fcoml
add
das
push
fwait
or
mov
xchg
data16
arpl
add
ds
subl
fistl
inc
and
lret
ss
dec
mov
je
xor
fs
shl
push
mov
daa
xchg
push
cs
add
xchg
jge
cmp
rorb
cltd
xor
ljmp
lds
outsb
data16
imul
es
push
in
pop
mov
adc
hlt
paddusb
and
jo
mov
aad
mull
xchg
loopne
push
push
jae
std
xchg
or
rorl
mov
and
sahf
push
fwait
mov
subl
lds
repnz
jae
sahf
push
cmpl
aad
dec
repz
in
add
pop
insb
pushf
fisubl
sahf
inc
mov
lods
icebp
jno
das
loope
insb
adc
mov
into
sub
dec
loope
imul
jb
pop
in
mov
and
push
jp
andb
into
insb
jbe
rol
mov
add
out
dec
into
xchg
fsubr
pushl
mov
mov
fldl
mov
sbb
rcrb
cmpsb
out
jb
push
sti
cwtl
cmc
movlps
adc
mov
fadds
cwtl
adc
add
cmp
fbld
pop
test
dec
jae
pushf
int
sarb
dec
jp
cltd
adc
lods
rclw
xor
jb
fsubrs
adc
shll
js
xor
adc
loope
fcoms
inc
shlb
ja
and
mov
ja
mov
add
add
pop
lds
jp
cmp
push
sbb
dec
subl
fs
loop
out
je
lods
push
aas
jbe
mov
ds
aaa
scas
jg
mov
pop
or
jo
ds
mov
jae
ja
push
lcall
jmp
push
push
std
into
mov
adc
icebp
in
cwtd
mov
cwtl
mov
in
xchg
mov
adc
and
mov
dec
cmp
in
and
mov
mov
mov
mov
mov
add
or
and
push
cmc
jg
xor
jecxz
mov
nop
rclb
loope
mov
or
imul
add
pop
adc
cwtl
xor
add
es
sahf
xchg
push
fwait
and
lret
cmp
cmpsb
dec
int
mov
add
jae
add
std
push
mov
sbb
push
lahf
sub
xchg
inc
stos
push
jp
mov
movsb
lret
repz
cmp
inc
rcrl
mov
pop
fdivrs
test
push
lret
jecxz
loopne
ret
xchg
out
aaa
bnd
fldcw
pop
enter
aad
rcrl
inc
mov
or
lock
push
push
adc
outsl
push
jge
sub
outsb
pop
mov
and
push
dec
in
icebp
and
sbb
cmc
inc
fisubs
push
sbb
jp
cmpsl
lret
leave
sbb
and
adc
or
imul
mov
inc
bound
and
rcrb
push
xor
call
shl
pop
inc
adc
orl
inc
icebp
sub
in
cmp
or
pop
jbe
adc
jle
xchg
cmp
adc
repnz
pop
push
stos
shlb
mov
movsb
adc
xchg
lds
testb
xchg
adc
push
pop
mov
call
mov
fmull
xor
xchg
xor
sbb
cmc
push
leave
jns
ret
push
cmp
xchg
xchg
mov
push
jmp
ret
xorb
in
jbe
push
int3
imul
xor
std
jmp
inc
push
add
insl
std
add
mov
icebp
sbb
inc
push
outsl
xchg
push
push
cmpsb
mov
cwtl
std
sub
xchg
iret
push
xchg
pop
aam
adc
push
dec
xor
lods
rolb
aad
int
sarl
jl
fldt
int3
enter
mov
adc
inc
lds
jl
cmp
adc
and
test
cltd
frstor
std
lcall
push
fidivs
mov
lahf
mov
push
test
aad
push
jne
shr
and
or
or
insl
addl
push
lahf
adc
cwtl
xchg
fidivrl
pop
imul
stos
insb
decl
sahf
repnz
repnz
pop
imul
ret
icebp
das
cmp
rol
ret
ficompl
rorl
push
cmp
xor
clc
mov
xor
pop
adc
cmp
test
dec
shll
lret
ljmp
mov
pop
sbb
bound
ja
add
add
lret
js
pop
xchg
pop
inc
mov
pushf
and
lret
cwtl
xor
sbb
sub
sahf
mov
xor
sub
in
stc
push
pop
jae
dec
inc
xlat
shl
dec
mov
call
jbe
divl
pop
and
fisubs
xchg
imul
xor
aaa
mov
inc
sbbl
aad
rcl
roll
call
xor
inc
in
mov
aam
xor
das
cs
push
test
es
mov
jb
xchg
mov
sbb
lret
bound
cmc
add
jl
adc
jnp
xchg
adc
jg
ljmp
daa
dec
inc
inc
mov
cmp
xchg
adc
movsl
mov
aas
lods
mov
lds
rcrl
dec
lds
cmp
mov
mov
mov
pop
add
leave
test
insl
dec
aad
and
xor
dec
push
and
push
in
scas
aad
arpl
ds
out
lods
and
xor
insb
enter
push
inc
scas
sahf
adc
mov
push
dec
hlt
xor
inc
mov
pop
and
scas
iret
jnp
xchg
adc
int
and
add
or
jnp
cmp
fisubs
pop
cwtl
lcall
and
xchg
pop
into
scas
roll
dec
mov
or
push
scas
add
pop
hlt
out
pop
mov
push
mov
mov
fistps
mov
nop
mov
stc
adc
xor
dec
into
xlat
cmp
adc
shrb
xchg
out
enter
push
loop
jnp
rorb
inc
mov
jge
mov
sub
lea
xchg
push
push
mov
inc
fmull
scas
mov
fucompp
movsl
mov
outsl
cltd
sub
push
je
pop
xor
cltd
sub
sti
push
adc
pop
insb
pop
mov
sub
inc
lods
sahf
int
mov
adcl
int
movsb
hlt
inc
and
and
enter
inc
dec
aaa
sub
das
es
insb
dec
sub
xchg
cmpsb
fidivs
pop
imul
pop
adc
loopne
xchg
add
repz
out
cli
adc
pop
aad
call
and
rcl
sbbb
dec
xchg
push
push
mov
dec
jg
push
push
ret
jbe
push
push
dec
mov
jne
xchg
adc
jo
bound
sbb
aam
pop
push
add
or
js
in
movsl
clc
lret
xchg
mov
fidivl
ficompl
cmpsb
out
pop
aad
pop
mov
dec
les
adc
mov
dec
aaa
xchg
jns
insb
add
cltd
enter
loope
in
inc
sti
or
pop
out
out
xlat
in
ficoms
das
or
repz
ja
aas
jl
xchg
and
enter
and
imul
jle
and
ret
or
push
dec
mov
jnp
jge
gs
arpl
and
movsb
xor
pop
mov
dec
movb
test
in
dec
jb
xlat
jno
mov
cmp
xor
mov
jb
nop
lea
push
xor
xor
cmp
mov
dec
clc
sahf
repnz
aam
cli
addb
or
divb
fdivs
jne
xor
adc
push
adcl
in
push
pusha
in
xor
inc
cmpl
push
aad
push
imul
lds
aad
or
add
xchg
sub
sub
push
jno
in
xorl
aam
inc
dec
popf
repz
pushf
add
pop
xor
mov
xor
pop
call
cmpsl
pop
in
add
xchg
add
enter
inc
scas
push
inc
pop
add
ja
iret
inc
rcrl
sbb
loope
push
or
push
loop
jb
and
orl
jecxz
es
addr16
sbb
repz
mov
cmc
adc
dec
inc
shl
or
sbb
in
daa
pop
in
add
push
rorb
push
pop
nop
push
dec
xchg
xchg
loop
dec
mov
outsb
cmp
mov
sbb
jns
and
push
mov
ja
push
jo
pop
in
scas
cltd
jge
movsb
add
cmp
sbb
jo
lea
dec
test
pushf
push
test
pop
int
push
enter
sub
gs
rcll
cli
sbbl
loop
jnp
fbstp
jl
or
sbb
sbb
pop
inc
mov
clc
movsb
cwtl
mov
adc
adc
sub
dec
sbb
pop
cltd
dec
mov
adc
cmc
in
inc
pop
mov
push
aad
dec
pushf
and
fisttpll
dec
mov
cwtl
or
and
fwait
pop
rorl
lods
mov
adc
mov
jl
pop
sahf
aad
mov
aam
aad
cmc
cmp
xor
sti
dec
dec
xchg
shlb
pop
enter
lds
add
fcoms
ret
loop
jae
test
clc
sub
sbb
shl
mov
mov
dec
call
fsubs
arpl
bound
cltd
push
out
mov
xchg
jecxz
movsl
push
adcl
pop
iret
es
mov
rcr
sub
and
pop
xchg
adc
xchg
add
mov
test
pop
imul
sub
lret
xlat
in
push
dec
mov
jb
lcall
loopne
adc
aad
push
dec
xor
movsl
xor
jno
dec
fldl
cmp
imul
aad
ja
inc
jae
rcl
rorw
rclb
mov
mov
loop
dec
in
int
lods
outsb
sbb
mov
cwtl
pop
jb
push
cmp
mov
ret
negb
sbb
scas
sahf
out
int
stos
adc
mov
inc
ljmp
out
std
sti
mov
mov
subl
mov
dec
pop
sbb
in
mov
mov
cli
cmpb
sub
sub
cwtl
or
mov
in
hlt
adc
xor
push
inc
cmpsb
pop
xchg
js
mov
sbb
daa
iret
ret
jnp
jp
sub
xchg
dec
cmp
mov
pop
push
push
mov
sti
loop
cli
mov
pop
packsswb
pushf
jae
cmp
and
mov
pop
inc
dec
outsb
les
lea
and
mov
and
rcl
mov
push
jg
fmuls
adc
mov
adc
cmp
sub
sbb
push
adc
dec
xchg
outsb
in
mov
shlb
and
das
rcl
stos
mov
sbb
ja
pop
inc
dec
dec
xor
stos
pop
aad
cli
push
cwtl
rolb
out
xchg
pop
xor
mov
ss
loopne
repz
popf
mov
xchg
push
adc
dec
lret
int
xor
dec
jl
loopne
roll
cmpsb
fisubl
cmp
jecxz
push
cli
in
or
adc
lods
loop
pusha
into
jno
es
mov
cld
adc
int
push
fiaddl
mov
fstl
xor
mov
jae
mov
or
and
and
stos
rorl
mov
mov
aad
xor
lret
xchg
or
xchg
out
pop
or
loop
dec
add
and
jge
push
and
mov
aaa
outsb
dec
sbb
icebp
mov
pop
daa
push
sahf
adc
fwait
mov
bound
cmp
jbe
shr
addl
add
fistps
ret
fistpl
lods
and
cmp
popf
push
daa
and
scas
pop
adc
adc
lock
pop
xchg
out
mov
or
lods
push
outsb
sub
push
lahf
dec
mov
sahf
adc
add
fimull
mov
adc
add
sub
xchg
push
subps
daa
mov
out
lcall
pop
loop
jo
push
pusha
mov
enter
std
xchg
jg
mov
aam
mov
mov
sbb
jl
jae
jmp
sbb
psubb
push
aad
lods
js
in
wbinvd
mov
inc
into
call
xchg
in
push
sbb
and
je
gs
in
adc
lds
adc
shrl
pop
mov
nop
lahf
ficomps
imul
fwait
pop
jno
dec
push
mov
and
or
sub
addr16
fisubrs
call
inc
adc
dec
ret
adc
xchg
or
pop
push
arpl
leave
cmp
mov
xlat
adc
or
jmp
shll
aam
sbb
push
scas
jge
push
add
xchg
cltd
pushf
shl
xchg
insl
mov
adc
and
inc
out
test
data16
das
out
dec
dec
sbb
push
cltd
cli
out
pop
dec
add
enter
push
rclb
es
jge
cs
out
mov
mov
xchg
leave
jmp
shrb
imul
mov
stos
dec
imul
fidivrs
ss
sub
pop
xorl
mov
cld
gs
xchg
xchg
andl
adc
int
dec
ljmp
dec
or
hlt
add
xchg
jno
loop
notb
cwtl
mov
sahf
in
cwtl
nop
scas
add
lcall
mov
int
dec
inc
test
inc
rorb
bound
mov
inc
and
outsl
jno
dec
aad
popa
lds
cmp
inc
push
roll
mov
js
push
sbb
mov
xchg
sbb
jg
mov
movsl
pop
mov
mov
adc
dec
sub
mov
mov
sub
call
out
sarb
aas
or
push
push
data16
mulps
adc
sbb
lret
sbb
stc
mov
iret
repnz
sbb
push
shl
stos
sub
fcoms
mov
jle
arpl
aaa
pop
js
repz
mov
and
inc
test
lds
xchg
roll
jno
sub
push
out
clc
inc
inc
adc
mov
pop
xchg
pop
sar
into
xor
shll
xor
ret
adc
out
outsb
xchg
cmpsl
test
adc
mov
and
jne
cmpsb
adcl
imul
adc
xor
dec
mov
loope
mov
cmpsl
mov
es
es
sahf
xchg
mov
loope
shll
pop
jle
scas
test
fcoml
sbb
and
pop
loope
xchg
mov
or
xchg
stos
pop
loope
ret
xchg
push
pop
scas
xchg
push
xor
outsb
or
sub
sbb
cmpb
daa
aam
and
repz
stc
repnz
adc
loop
jl
aad
adc
dec
jp
lods
call
jmp
or
or
fldenv
das
lock
cmpb
loope
hlt
cmp
loopne
dec
dec
mov
jecxz
add
int3
imul
inc
mov
cmpsb
jae
inc
and
lods
std
push
jl
roll
mov
jne
stos
hlt
cmp
lret
sub
jae
ds
and
adc
dec
xlat
jbe
out
inc
jecxz
mov
mov
sbb
mov
out
dec
and
sahf
lea
std
in
push
xor
int
xchg
mov
xchg
pop
and
aad
and
inc
mov
xor
outsl
jae
ljmp
cmp
xchg
and
pop
push
sbb
repnz
shll
and
lods
movsb
xchg
pop
adcb
inc
cmp
sahf
lods
sbb
mov
test
adc
xor
fcomps
pop
shlb
shr
pushf
pop
sub
jbe
ret
add
int3
add
aad
lds
lea
mov
cmp
in
inc
sbb
imul
mov
jp
mov
lds
outsl
out
and
cmp
sti
imul
adc
adc
aad
inc
jns,pn
mov
cmp
push
call
fnsetpm(287
ficoms
bound
pop
loop
cmp
inc
icebp
lods
fadds
mov
and
mov
out
stos
push
adc
subl
sbb
jmp
push
mov
gs
jmp
sahf
enter
or
mov
lcall
mov
gs
xor
mov
mov
mov
dec
pushf
inc
adc
xor
lds
dec
popa
add
mov
pop
shrb
add
ja
out
popf
jno
and
push
inc
insb
sbb
and
je
mov
add
fistps
xchg
dec
sti
jno
dec
stos
cmp
xchg
je
test
pop
push
lock
shl
pop
test
and
repz
adc
pop
pop
jg
insb
in
push
inc
sbb
adcb
scas
mov
jne
adc
lret
std
mov
xor
dec
and
enter
xchg
pop
pop
pop
jb
mov
das
mov
dec
enter
xor
push
inc
jmp
repnz
lock
adc
mov
popf
rcrl
es
dec
repnz
fldl
lea
and
rcll
add
and
daa
movsl
pop
lahf
imul
xchg
pop
mov
push
push
sti
sbb
shll
ficompl
mov
pop
sub
adc
stos
pop
push
push
mov
fildl
mov
mov
xor
std
mov
imul
loope
fwait
dec
push
xchg
and
enter
dec
or
cmp
popf
or
xor
xor
add
mov
test
mov
xchg
mov
sbb
add
idivl
push
sbb
inc
adc
pop
mov
lahf
pop
fisttps
adc
repnz
jmp
or
xor
push
dec
dec
shll
loop
hlt
mov
push
cmpb
lahf
js
dec
add
adc
xchg
pop
jb
mov
xor
out
jmp
and
xchg
mov
pop
adc
mov
mov
xchg
imul
cli
dec
pop
mov
xchg
push
and
and
mov
jb
dec
and
cmp
xchg
clc
sbb
sti
cs
mov
push
dec
mov
add
int3
data16
jb
lret
jae
pop
loope
mov
movsb
xrelease
jecxz
push
jmp
and
repz
lods
xchg
mov
sbb
xchg
ret
aas
add
and
dec
dec
inc
adcl
ja
cmp
adc
mov
adc
cmc
pop
lret
xor
popa
rcll
test
push
int3
xchg
xchg
jmp
xchg
mov
and
mov
push
sub
repnz
xlat
cmc
test
inc
in
lock
sbb
dec
jg
cmp
mov
sti
rolb
and
loopne
adc
add
andb
push
jnp
pop
and
push
xor
inc
push
push
ret
xchg
sbb
es
mov
jp
loope
loopne
mov
stos
xchg
adc
cmpsl
xchg
repz
adc
push
scas
dec
pop
cmp
adc
add
lret
aas
and
bound
xchg
je
sub
stc
popf
mov
or
add
cli
xor
pusha
push
xchg
mov
or
test
and
xchg
and
icebp
dec
movsb
pop
xchg
inc
mov
mov
fadds
decl
fbstp
xchg
cs
cmpsb
popa
add
push
test
lcall
mov
or
xchg
into
popf
popa
lods
add
roll
pop
gs
fwait
in
fdivs
cwtl
mov
lahf
cmp
xchg
ja
rcll
lret
cwtl
and
pop
cmp
mov
inc
jge
sub
stc
mov
clc
mov
nop
sub
imul
sub
subl
jnp,pt
sbb
sbb
adc
sarl
gs
mov
mov
sar
xchg
mov
and
push
push
jmp
popf
subl
not
rclb
jne
mov
xchg
xor
push
add
icebp
xchg
stc
mov
lcall
or
mov
xorl
push
std
inc
xor
mov
adc
mov
sarl
int
aam
loope
pop
mov
rcrb
ficoms
lcall
out
cmp
inc
push
cmp
jno
std
dec
dec
push
fsubs
pop
adc
mov
addb
and
faddl
je
aad
subl
aam
xchg
xor
cltd
pop
test
jl
sub
loope
pusha
add
lock
jge
out
xorl
int
dec
loope
movsl
mov
xchg
mov
and
lds
jbe
shlb
loope
pop
add
mov
xorl
cmc
sbb
pop
js
xlat
hlt
inc
pop
std
in
push
ret
push
xchg
sbb
outsl
lock
xchg
addr16
dec
hlt
shrb
mov
in
dec
sub
adc
cmpl
and
insb
cs
pop
aam
leave
mov
xor
std
push
mov
int
cmp
mov
addr16
adc
pop
fadds
cmp
lret
ficoms
lods
or
imul
insl
jge
jne
cwtl
sbbb
mov
mov
ret
xchg
jmp
xchg
mov
gs
int
sub
scas
cwtl
dec
scas
pcmpeqw
push
push
xchg
adc
loope
pop
xor
xlat
sahf
and
push
jnp
pop
and
push
mov
ljmp
pop
std
xchg
jnp
lea
push
orb
ja
or
jb
sub
mov
jge
scas
sub
icebp
les
iret
sub
sbb
cmp
add
dec
mov
mov
or
rcrb
adc
xchg
loope
dec
pushf
scas
push
inc
push
xchg
repnz
xchg
shrl
in
dec
xchg
faddp
adc
sub
aad
inc
and
cltd
sub
iret
add
push
ljmp
sar
dec
pop
sub
xchg
testl
fnsave
sub
inc
and
xchg
mov
aaa
sti
pop
mov
mov
sbb
mov
jns
xchg
bound
push
cmpsb
mov
xchg
sub
mov
out
cwtl
xchg
xchg
xchg
adc
push
dec
sub
ja
data16
daa
cwtl
fcomps
dec
shll
sahf
loope
hlt
loope
icebp
inc
cmp
mov
adcb
add
in
imul
mov
push
mov
enter
push
orb
ss
adcb
aam
xchg
fbstp
xor
jnp
adc
xor
aad
sbb
prefetch
test
test
sub
inc
push
xchg
test
mov
hlt
ja
aad
rclb
insb
mov
or
fwait
adc
xorb
push
pop
xchg
xor
std
pop
loop
orl
fimuls
mov
dec
in
dec
add
out
adc
movsb
jnp,pn
xor
inc
in
jb
inc
xlat
xchg
adc
inc
push
add
pop
jp
scas
jl
xchg
pop
pop
adc
fists
sbbl
add
frstor
mov
dec
xchg
movl
adcb
outsb
push
test
inc
fwait
adc
push
xchg
jo
pop
lods
jbe
sahf
pop
stos
cltd
lea
jne
iret
loop
dec
repnz
add
mov
pop
cmp
fmull
dec
mov
sbb
adc
stos
sbb
movsb
mov
insl
test
decb
dec
mov
xor
adc
leave
xchg
cmp
das
sub
cmpsb
adc
scas
out
jns
shrl
shll
cwtl
loope
data16
jae
jmp
mov
repnz
stos
pop
cltd
adc
test
and
cwtl
jmp
sbb
fldt
sahf
lret
pop
dec
out
scas
pop
xor
xor
and
fcmove
or
xchg
mov
ss
in
fstpl
ja
jns
jle
in
sub
sub
inc
std
pop
repnz
mov
stos
sub
adc
sar
scas
aam
push
sbb
push
pushf
lret
sbb
and
push
lahf
in
int
xchg
fcom
xor
outsb
fildl
push
cld
rclb
ret
push
rol
push
cmp
out
pop
add
and
dec
fdivrs
call
je
jne
xchg
sbb
enter
je
dec
xchg
sbb
inc
sub
loope
jb
mov
jb
dec
and
mov
fiadds
ja
or
lds
popa
and
pop
bound
or
bound
sar
out
xor
ficomps
cwtl
rcrb
push
out
push
or
mov
ret
cld
dec
call
test
aam
mov
sbbl
jae
pushw
dec
imul
and
cmp
or
jno
mov
icebp
dec
call
cltd
cli
lret
fstpl
xchg
subl
and
add
pop
out
sahf
xchg
rclb
push
xchg
dec
inc
in
xor
pop
xchg
js
xlat
lret
mov
push
lods
mov
jne
and
push
xchg
push
ds
daa
sarl
push
rcl
xchg
into
cs
sub
bound
insl
adc
ret
jnp
dec
cmp
js
pop
aas
jle
mov
or
sahf
addr16
mov
out
xchg
push
push
repz
test
dec
loope
and
js
mov
xchg
mov
or
xchg
xorl
pop
pop
xchg
xchg
or
in
pop
ss
push
aad
add
adc
xchg
xchg
gs
pop
lds
imul
jnp
aas
and
int3
mov
stos
push
shrw
mov
fs
and
lret
loope
push
or
xchg
imul
out
sbb
sahf
and
shll
outsl
mov
lods
pop
or
or
movsb
cmp
push
sbb
xchg
std
int
int3
dec
mov
and
lods
mov
sbb
and
cmc
push
lods
mov
xor
push
jae
xor
or
push
sub
or
mov
adc
jns
or
lea
mov
pop
clc
mov
call
lods
shl
or
packsswb
ss
dec
imul
mov
pop
and
in
int3
mov
fcmovbe
out
push
in
test
push
sbb
push
test
outsb
jb
push
jnp
mov
dec
jp
mov
push
push
push
jmp
or
icebp
xor
fmuls
mov
test
xchg
xchg
and
mov
fdivrs
lock
or
adc
cwtl
mov
data16
mov
pop
mov
orl
cmc
and
icebp
outsl
ljmp
mov
push
adc
xor
fst
xor
pushf
inc
sub
push
ret
mov
xchg
in
push
mov
sub
fcompl
lcall
loop
scas
out
xlat
xchg
mov
out
xorl
sub
loope
xor
pop
mov
mov
xor
fdivr
ja
mov
aas
cwtl
clc
test
pop
push
and
sbb
fdivrl
popa
imul
sahf
into
pop
cmc
dec
lock
out
aad
push
dec
dec
dec
out
xchg
arpl
mov
in
das
dec
xor
loope
jbe
lods
ss
aad
faddl
dec
data16
sbb
mov
xchg
out
mov
cmp
xlat
push
xlat
dec
in
shrl
lds
loope
fnstsw
outsb
jno
jnp
adc
lds
icebp
adc
cli
adc
stc
sub
cwtl
pop
add
call
aam
hlt
fnstenv
mov
insl
outsb
dec
adc
sbb
dec
push
jg
fisubs
dec
adc
stc
jle
mov
shll
repz
into
lret
mov
les
rorb
sub
adc
ret
aad
and
jns
ror
iret
out
mov
xlat
aad
pop
arpl
js
ret
fcompl
jns
enter
push
dec
or
mov
push
scas
std
inc
fsubrs
test
adc
pop
mov
out
or
mov
pop
sbbl
or
push
pop
xor
loope
out
mov
push
sbb
repz
sbb
cmp
mov
jge
aas
cmc
out
mov
xchg
stos
dec
or
or
xchg
xchg
aam
dec
pop
mov
or
lods
addl
stos
adc
fisubl
outsl
cmpsl
sub
xchg
adcl
jl
xchg
push
stc
sarl
pop
rorl
dec
inc
jno
movsb
jp
sbb
out
jno
jg
pop
sahf
mov
gs
and
push
lcall
add
call
adc
mov
mov
add
xlat
out
leave
push
jg
push
push
pushl
in
sub
orl
xchg
cli
push
imul
add
fstps
add
inc
fisubrl
das
dec
out
pop
jl
repnz
push
xlat
adcl
jae
cmp
jge
fstp
shlb
jge
or
cwtl
dec
dec
ja
lahf
lret
imul
cmp
sub
mov
test
loopne
pop
lods
gs
iret
shl
sti
iret
add
sub
mov
ret
pop
bound
xchg
push
mov
dec
jno
lods
fidivs
inc
sub
ret
andl
push
push
xchg
ret
sub
add
enter
negb
push
jno
cli
rorl
pop
sbb
fcmovnu
push
adc
pop
push
mov
jg
cltd
dec
pop
lds
jae
test
add
jns
out
push
xchg
dec
stc
inc
fldz
aas
enter
imul
rolb
sub
inc
jl
cmc
das
shrb
mov
nop
pop
mov
and
xor
ror
loope
lahf
adc
imul
xor
scas
pop
dec
in
mov
sbb
or
or
test
sub
mov
add
cmp
push
cwtl
in
add
in
sbbb
test
fxch
xor
je
arpl
mov
gs
ret
and
scas
pop
add
or
scas
pop
mov
xor
aad
push
fisubrl
pop
jbe
je
and
dec
inc
outsb
ret
fs
dec
cmp
negl
cmp
push
ja
jns
insb
mov
pop
pop
nop
sahf
jne
call
mov
fdivs
or
int
inc
orb
xrelease
bound
fadd
fiadds
fdecstp
push
das
mov
pop
ss
div
cmpsb
rclb
xchg
cli
fsubrl
es
lret
pop
rclb
negl
cmp
or
pop
iret
push
test
pop
sub
and
imul
int
pusha
fs
shrb
mov
rolb
xor
xchg
lret
in
and
outsl
scas
pop
stos
push
mov
mov
daa
sub
data16
out
roll
inc
mov
movsb
faddl
addr16
add
fdivs
inc
cmpsl
lret
push
xchg
add
sub
fnstenv
adc
fmull
inc
vmulpd
mov
iret
or
call
or
inc
es
js
movsb
xchg
jnp
sarl
mov
imul
dec
or
inc
push
fimuls
into
mov
out
jo
inc
xor
mov
jae
or
cmpsb
xchg
fnsave
out
in
mov
ds
jg
jb
ss
int
in
mov
cld
rcrl
rol
or
fdivs
dec
imul
dec
jne
pushf
jae
xchg
mov
xchg
std
stos
jg
mov
rol
ret
ret
lock
lock
jp
push
ja
sbb
and
pushf
outsl
mov
inc
push
daa
leave
call
test
sbb
jl
mov
push
lahf
mov
mov
sti
out
scas
xchg
mov
icebp
out
sbb
cmp
pop
cmp
jnp
lods
rcrb
out
es
push
testb
jnp
and
mov
lret
hlt
push
outsl
mov
add
mulb
cmc
icebp
mov
jae
in
fmuls
lahf
pop
push
push
xchg
fdiv
fcomps
mov
aad
push
fidivrs
orb
scas
push
xchg
and
dec
mov
xchg
adc
xor
xor
or
sbb
daa
std
outsl
fisttpll
lret
cmpsl
out
xchg
cs
xchg
xchg
js
dec
fcoms
jle
xor
adc
dec
sub
pop
sub
dec
dec
pop
dec
cmp
mov
hlt
xchg
mov
jp
das
jnp
rclb
add
cmp
adc
cmp
inc
push
lcall
and
push
sbb
fcoms
fstps
or
dec
pop
or
imul
imul
pop
sbb
daa
into
aaa
shlb
mov
test
cs
dec
icebp
mov
shl
fcomi
imul
and
sahf
pop
jp
xor
jae
sbb
std
mov
rolb
push
ss
rcll
sub
fdivrl
and
inc
sbb
ret
outsb
xchg
sarb
sub
adc
cmc
xchg
fidivrl
sub
cmp
dec
rclb
sub
jbe
cli
xchg
mov
mov
dec
xor
pop
mov
sbb
dec
cli
nop
xchg
sbb
xchg
sbb
aad
fadd
mov
repnz
lea
xchg
inc
out
jb
rcr
push
pushf
sahf
int
cs
hlt
scas
mov
adc
fs
lret
jae
cs
xchg
lret
cmp
sbb
mov
adc
jae
mov
ljmp
arpl
sbb
adc
and
cmp
rclb
movb
push
mov
push
ret
xchg
jle
loope
jnp
sub
adc
in
orb
js
jg
aam
dec
cmpsb
fisttps
push
dec
in
bound
mov
cmp
hlt
xor
sahf
jae
clc
hlt
cmc
repnz
out
cwtl
out
inc
aad
push
test
shlb
lods
cmp
aad
push
lahf
xchg
mov
inc
sub
xchg
arpl
stos
sub
add
dec
and
enter
mov
pop
inc
jg
xchg
fimull
add
inc
imul
sahf
inc
insb
pushf
dec
jno
mov
pop
inc
inc
sbb
fsubr
xchg
lcall
or
sub
repz
daa
inc
adc
mov
sbb
rcrl
or
or
jge
jle
xchg
xchg
sbb
aam
lods
pop
mov
or
pop
add
mov
push
adc
scas
adcl
mov
mov
dec
addb
or
repnz
iret
pop
loope
mov
insb
inc
iret
cmpb
in
pop
rsqrtps
loop
lahf
sbb
call
jg
sti
sub
xor
dec
daa
es
outsl
shlb
ds
out
nop
xchg
push
mov
sbb
insb
lcall
ret
lea
sub
roll
sub
int
aam
push
inc
pop
shr
rsqrtps
mov
shrb
inc
loopne
stos
outsl
dec
out
pop
divb
int3
xor
cmc
and
fcoms
pop
mov
xlat
cli
rclb
mov
out
mov
test
mov
roll
inc
jge,pt
dec
es
inc
test
pop
gs
fs
xor
lret
mov
lcall
stos
push
sahf
push
rcll
adc
loope
cmc
push
int
jbe
pop
add
aaa
das
xor
xchg
and
mov
push
mov
push
repnz
sub
dec
gs
and
xlat
and
dec
mov
adc
pop
dec
adc
icebp
es
sarb
inc
push
inc
out
ss
xchg
aam
int3
lds
cwtl
repz
rcr
push
mov
inc
std
add
add
inc
add
rdtsc
mov
in
sub
adc
adc
ret
cli
sbb
or
sub
pop
inc
sub
movsl
fdivrl
xor
pop
notb
aaa
inc
movb
aad
mov
jg
stc
cmpsb
bound
xor
push
sbb
mov
test
mov
in
out
mov
pop
jb
push
and
popa
js
sahf
cmp
mov
xor
rcll
iret
sbb
dec
enter
inc
cmpsl
mov
mov
dec
mov
adc
enter
test
aad
sbb
mov
dec
jbe
dec
inc
xor
in
fcoms
daa
sahf
adcb
repnz
into
cmc
dec
or
lahf
jle
push
push
rcl
es
cmp
mov
mov
inc
cmc
dec
ret
and
adc
adc
jp
mov
ret
jmp
adc
xchg
fnsave
sub
mov
fisubrs
ret
adc
popf
adc
adc
push
push
fcomp
dec
inc
pop
jp
jb
sub
xchg
push
test
pop
jmp
xchg
dec
out
mov
sahf
fcom
jle
roll
pop
and
aad
clc
ret
dec
stos
scas
arpl
lods
push
stos
mov
push
in
jl
aam
xchg
lods
xor
out
cmpsb
loope
les
stos
inc
or
and
xor
xchg
bound
loop
shlb
repz
adc
mov
dec
cli
fisubrl
ret
pop
sbb
in
add
addl
leave
push
test
cmp
repz
dec
fs
mov
sti
dec
ficoms
jbe
pop
fwait
xlat
xchg
notb
xchg
dec
jecxz
test
xor
repnz
dec
data16
push
xchg
push
lock
sbb
pop
roll
mov
push
cmc
cmp
and
xlat
std
mov
in
lcall
push
xor
shl
xor
out
and
es
jae
repz
xchg
fistps
int
cwtl
aas
inc
cmp
push
mov
scas
in
aad
adc
ljmp
scas
adc
test
mov
and
pop
cmp
mov
mov
aas
inc
add
imul
stos
out
repnz
and
loop
cwtl
push
aam
push
push
sbb
aad
mov
sbb
iret
scas
xchg
insl
mov
pop
fwait
cmp
iret
imul
mov
xchg
jbe
push
and
addr16
mov
jge
jb
sub
push
mov
mov
mov
sub
in
jmp
aaa
ljmp
dec
xchg
cmc
adc
loopne
orb
ficoms
mov
repz
out
scas
mov
mov
mov
xchg
push
mov
ljmp
sbbl
cld
iret
jo
pop
dec
roll
dec
mov
popa
push
adc
in
rclb
cmc
add
mov
mov
fdiv
push
adc
mov
sti
and
push
movsl
xor
clc
lods
xchg
sub
dec
dec
jnp
mov
or
shlb
fcomps
mov
jbe
dec
sub
mov
xor
inc
cs
or
xchg
iret
addr16
data16
outsl
and
mov
outsb
sahf
popf
sti
aas
pop
add
mov
and
pop
aaa
sub
adc
insl
fisttps
out
push
loope
in
jge
jecxz
mov
push
mov
push
pop
and
jnp
cmp
stos
dec
repz
sub
cwtl
add
mov
mov
sti
mov
testl
iret
sub
sti
bound
rcr
popf
outsb
shl
inc
fidivl
mov
in
lods
fidivrl
jns
mov
cmp
mov
pop
push
cltd
outsl
sbb
mov
or
and
in
leave
cli
js
add
es
mov
mov
sbb
negl
adc
xchg
mov
cmp
call
add
add
jl
mov
xchg
pop
out
mov
lds
gs
push
notb
xchg
imulb
adc
rcrl
mov
sub
mov
data16
push
into
aam
and
add
xlat
into
dec
add
ficompl
add
push
adcb
lret
push
mov
dec
and
jnp
arpl
in
pop
loope
es
addb
cmp
cs
add
inc
daa
rcrb
xchg
xchg
jbe
pop
shrl
fmul
mov
adc
pop
repnz
popf
sbb
leave
pop
cmc
push
movsl
push
sbb
sahf
loop
andl
pop
push
dec
dec
jo
push
jle
add
xchg
pop
mov
jae
push
lods
pop
inc
fstl
pushl
aas
sbb
fdiv
and
call
in
dec
inc
out
ret
lcall
adcl
ja
aam
jae
jge
xchg
add
xlat
mov
dec
inc
push
pop
inc
repz
or
ljmp
aas
mov
add
adc
cmpsl
loope
scas
mov
mov
pop
fdivr
into
andl
cmpsl
and
mulb
mov
psraw
mov
lds
jmp
dec
and
cwtl
fistl
pop
orb
dec
mov
pop
and
or
adc
lods
push
icebp
xchg
cmp
repnz
xor
daa
xor
fcoms
jmp
ljmp
xchg
shll
ds
jle
cmpsb
mov
rorb
jp
lcall
xchg
rclb
int3
adc
lret
jmp
into
and
cmp
out
in
jecxz
sbbb
and
dec
mov
pop
push
stos
add
leave
mov
pop
and
jae
dec
mov
inc
addr16
adc
lock
push
xchg
and
lea
mov
dec
jae
xor
addr16
push
jne
divl
iret
pop
adc
fcmovu
xchg
ret
pop
addl
mov
mov
mov
mov
fcmove
push
push
ds
into
push
cmp
mov
push
call
in
and
mov
push
lret
ret
mov
dec
dec
ljmp
addr16
divb
xor
stc
test
psllq
xchg
sub
leave
pop
inc
es
pushf
dec
fisubs
push
cli
rcl
dec
cmpl
fcoms
cmp
inc
loope
test
mov
push
ret
add
dec
std
push
loopne
dec
push
loope
xor
into
popf
push
loopne
adc
dec
xchg
xchg
inc
pop
or
add
cmpsb
fidivrs
and
sbb
fs
pop
cwtl
cmp
cwtl
rol
addr16
scas
adc
not
push
xor
call
enter
ja
and
aam
sahf
push
inc
dec
pop
movsl
sahf
repnz
add
xor
js
enter
shlb
je
fs
dec
das
bound
adc
std
mov
mov
sahf
mov
data16
adc
push
or
mov
adc
sahf
pop
jae
lea
pop
loop
sbb
cli
pop
or
std
jp
cltd
or
andw
loope
fdivs
dec
out
or
lea
in
jg
js
call
aaa
pop
cmc
test
adc
and
mov
lds
ror
mov
repz
es
push
lea
fsubrs
adc
pop
into
xlat
sub
push
popa
out
cmp
test
cld
cmpsl
pop
cmc
push
jg
int
rcrb
push
and
dec
dec
fidivrl
ficoms
scas
push
pop
mov
inc
and
sub
imul
frstor
outsb
addr16
sub
sti
mov
jbe
adc
pusha
in
mov
pop
gs
ljmp
in
loopne
adc
fidivs
push
mov
cs
xor
dec
or
stc
adc
xchg
jg
mov
and
push
push
cmp
sahf
fdivl
pop
shrl
and
mov
scas
imul
xchg
out
jo
imul
mov
hlt
fucomp
aam
loop
or
xchg
scas
xlat
dec
xchg
jge
inc
mov
or
arpl
popa
add
das
fnstenv
rorl
mov
mov
sbb
jb
xchg
cmp
mov
ja
xchg
dec
xor
in
inc
xchg
mov
xchg
push
and
dec
cmpsl
sbb
test
imul
xor
mov
push
roll
sbb
sub
in
icebp
push
mov
sbb
pop
mov
and
mov
sub
adc
ret
into
push
loop
ja
jmp
inc
push
push
push
mov
fsubs
outsl
cmp
push
pop
or
pop
jp
and
add
xchg
mov
outsb
imul
cli
lods
push
xor
call
mov
push
ja
lds
in
pop
inc
pop
mov
sub
inc
mov
push
sub
popa
xor
loop
xchg
int
insl
fstps
push
add
mov
fistpll
dec
sub
mov
repnz
dec
sub
jg
inc
dec
ss
or
and
sub
or
xchg
iret
sbb
fcompl
addr16
pop
fiaddl
scas
xchg
pop
mov
ljmp
in
dec
js
lea
push
mov
mov
aad
pop
pop
rorl
pop
js
scas
push
lds
mov
shrb
jp,pt
sbb
push
ja
pop
mull
push
xchg
sahf
cmpl
aas
dec
adcb
add
xchg
lret
clc
shr
xor
push
loopne
jns
xor
push
iret
dec
push
add
fcmovnb
add
sbb
fidivrs
mov
xorl
bound
sub
jmp
sbb
dec
jnp
push
out
xchg
jmp
sti
or
mov
out
fs
int
std
in
data16
and
shl
and
test
pushf
jbe
shr
cmp
xchg
fdivr
lods
aaa
data16
sbb
add
jmp
lret
movsb
cmp
dec
push
sbb
mov
mov
lcall
lds
mov
add
mov
adc
loope
inc
mov
inc
mov
sub
arpl
or
push
sub
mov
scas
sub
push
pushf
lock
dec
cltd
lahf
jmp
mov
dec
xchg
or
and
xor
and
xchg
movsb
das
sbb
jle
inc
ljmp
adc
mov
add
and
cmp
and
push
pushf
scas
dec
push
insl
scas
xchg
pop
popa
adc
rol
mov
inc
push
pop
rclb
adc
popf
cld
pop
into
cmp
lods
sbb
stos
jl
cmp
outsb
inc
aad
test
inc
xchg
inc
xchg
out
sub
pop
fsts
push
pop
sub
sahf
inc
adc
and
dec
icebp
dec
xor
mov
inc
mov
sbb
mov
mov
jns
jbe
int3
in
inc
inc
stos
adc
pop
rorb
inc
stos
add
jb
mov
ss
scas
mov
ret
dec
jmp
mov
pop
sbb
fsubrl
xchg
dec
lret
adc
sub
push
js
scas
sti
loop
cld
mov
fnclex
js,pn
pop
xor
popf
or
or
sub
roll
xchg
and
push
iret
fcoms
popa
gs
xchg
mov
mov
adc
hlt
sbb
cmp
std
and
jo
andl
cmp
and
sub
inc
add
push
lods
push
push
aad
scas
je
jae
jnp
mov
dec
jp
jp
in
roll
jnp
jns
cmpsl
ret
cltd
push
jne
xchg
test
aas
inc
dec
mov
repnz
and
adc
inc
movsl
push
int
adc
or
jae
jmp
rorl
fdivrl
cli
ja
call
dec
jecxz
mov
repnz
movsb
xorb
lret
std
mov
aaa
adc
xor
xchg
dec
test
mov
cmc
cmp
mov
outsb
xor
xchg
sbb
jle
fistl
cmpsl
rcll
inc
cmp
scas
adc
push
mov
xchg
cmpsl
scas
jns
jl
cmp
cmp
jns
call
xchg
clc
scas
adc
mov
inc
sub
adc
and
loope
cmovp
jae
lahf
cwtl
cwtl
rorb
jne,pn
cmp
out
dec
push
adc
adc
mov
sub
add
cs
test
and
into
push
stos
adc
loop
sbb
dec
outsl
popa
lret
xlat
inc
mov
cs
rcrb
pop
shlb
imul
loop
inc
scas
lods
add
ds
aaa
faddl
mov
pusha
or
xorb
xchg
mov
shll
sahf
ret
gs
jmp
pop
and
add
mov
add
int
xchg
scas
mov
fscale
inc
dec
add
flds
scas
shl
cs
lret
sbb
lret
or
insl
jmp
push
loope
xor
shr
mov
xchg
std
insb
pop
and
mov
clc
stos
inc
dec
mov
and
notb
loop
pusha
mov
insb
movsl
loope
cmc
and
cli
mov
or
xchg
sbb
mov
loop
push
jp
lret
cmp
adc
jo
jno
dec
cmp
or
or
int3
into
sahf
in
pop
jl
push
mov
lods
shll
arpl
mov
inc
rcr
add
shll
fcompl
or
sbb
inc
or
push
ds
adc
mov
std
jmp
mov
jge
sti
mov
dec
es
dec
daa
push
mov
ljmp
cmpsb
push
dec
jg
push
jl
nop
jmp
sbb
jo
addb
lea
filds
mov
sub
lods
sbb
addr16
xchg
int
or
mov
adcb
xor
pop
mov
mov
fimuls
or
mov
or
push
adc
pop
adc
mov
jmp
outsb
adc
add
loop
repnz
mov
xor
push
push
into
push
dec
pop
orl
xor
cmc
xor
test
dec
push
test
out
jb
dec
lods
divl
mov
rcr
das
fsubp
rcll
pusha
add
xchg
jge
fwait
cmp
imul
or
dec
adc
xor
sub
out
lahf
mov
fxch
fsts
aam
rcll
addr16
inc
adc
inc
adc
and
adc
add
sub
fimull
mov
shll
push
cmc
inc
lret
xchg
or
xor
mov
ds
adc
cs
pop
adc
sti
mov
aam
sbb
adcb
and
jo
lahf
adcb
cmp
push
scas
dec
pop
cmp
jb
push
iret
scas
xchg
dec
mov
jnp
sub
xor
in
cmp
mov
and
in
and
jmp
jnp
inc
pop
fistl
inc
cmp
and
aad
rcrb
push
jmp
mov
xchg
dec
mov
and
inc
mov
int
fistpl
test
sbb
sub
fstps
enter
mov
out
cmp
ss
test
push
int3
mov
aam
repnz
xchg
sbb
pop
popa
int
mov
mov
dec
xor
inc
jnp
xchg
jg
out
popa
pusha
addr16
jno
mov
test
cli
int3
push
fs
adc
and
lock
std
mov
data16
pop
rclb
orl
ror
jg
mov
dec
cmpsb
pop
dec
cmc
std
in
xchg
mov
push
and
inc
pop
sahf
add
aad
rcrl
cltd
mov
push
in
push
cmp
lods
fisubs
mov
loop
push
xchg
outsb
ror
sahf
aam
dec
jge
push
pop
mov
sub
sbb
inc
out
xorb
sub
cwtl
movsb
es
shll
int3
xchg
jnp
inc
adc
and
scas
rcll
or
divw
xchg
mov
mov
xchg
mov
mov
ficomps
or
mov
xchg
lods
mov
mov
sbb
sbb
out
aad
pop
mov
mov
and
or
mov
enter
mov
and
mov
aam
es
jb
idivb
xchg
xor
xchg
cmp
xor
in
push
fcom
int3
xchg
dec
cs
pop
gs
lret
mov
and
mov
es
test
inc
sub
or
or
or
xchg
frstor
mov
shrb
addr16
or
rol
lcall
pop
jmp
orb
cwtl
push
add
and
movsl
lds
adc
dec
mov
js
sahf
je
cmp
arpl
pop
ljmp
jp
inc
imulb
test
shr
fists
scas
or
and
mov
je
cmpsl
adc
movsb
inc
aam
xchg
lret
inc
pop
addl
ret
enter
in
add
fimull
lock
xor
cmp
cmpsl
call
inc
data16
fiaddl
shl
xchg
mov
xchg
lds
jg
sti
dec
or
ret
aad
cmp
dec
fwait
xor
mov
sub
dec
popf
les
adc
pop
rcl
fsubl
pop
fbld
std
ret
sub
adc
mov
imul
bound
pop
shrb
mov
sahf
jnp
cmpsl
pop
push
loope,pt
lods
and
or
push
aaa
addr16
inc
jnp
adc
jnp
sbb
dec
out
lcall
xchg
test
fbld
shl
nop
xchg
push
pop
adc
jb
stc
inc
int
lret
mov
daa
imul
int
nop
aad
inc
imul
cmp
mov
xor
xor
dec
push
movsb
xchg
ja
mov
out
push
xor
test
pusha
pop
jnp
dec
jbe
leave
imul
and
out
cmpsb
hlt
pop
mulb
in
repnz
rorl
add
aad
cli
jl
jne
adc
lods
cmp
mov
movsb
xchg
push
aad
psubq
dec
out
stos
sbb
mulb
push
test
add
adc
es
aam
popf
mov
jns
sarl
cs
mov
and
fiaddl
call
shrb
adc
mov
lds
fstl
pop
mov
jns
mov
int
int
scas
xchg
mov
lret
mov
push
ds
dec
mov
xor
or
mov
dec
fcoms
inc
push
repnz
dec
icebp
imul
mov
in
dec
xchg
ljmp
insl
and
xor
inc
and
cmpsb
bound
fnstsw
mov
inc
xchg
scas
shr
jno
ret
sbb
sub
psrld
inc
ret
xchg
repnz
loope
xchg
inc
xchg
out
mov
adc
xchg
and
dec
or
mov
sbb
inc
mov
mov
jge
dec
pop
int
test
dec
aad
push
lcall
mov
aad
mov
jns
xchg
adc
xor
mov
fcomps
adc
bound
cmpsl
in
sarl
arpl
mov
push
mov
dec
or
mov
shll
clc
adc
ret
call
sub
out
mov
mov
ret
push
jg
inc
mov
mov
cmp
push
push
and
push
xchg
enter
xor
xlat
popa
add
outsl
and
call
popa
iret
nop
mov
insl
fwait
xor
cmp
jb
inc
cwtl
xor
pop
femms
jnp
or
mov
je
mov
ret
and
push
mov
xor
push
adc
fcoms
jge
sub
jae
xchg
ds
mov
or
mov
ja
or
add
fadds
jge
into
jecxz
cmp
in
jae
fldt
stos
aam
jno
sti
and
add
sbb
hlt
cmc
and
mov
push
loope
mov
xor
inc
mov
lret
mov
and
jo
push
es
arpl
imul
sbb
cmp
cmp
pop
orb
jmp
mov
inc
enter
jle
mov
aad
xchg
jae
and
pop
js
mov
shll
test
mov
push
mov
hlt
lods
sarl
rorb
sbb
push
inc
and
mov
mov
jg
jbe
aad
test
movsl
ficomps
shrl
outsb
xchg
adc
test
aad
cmpsb
jno
aaa
add
dec
fcomp
sbb
jg
adc
in
cmp
sbb
in
mov
jbe
adc
mov
push
push
mov
sahf
and
xchg
mov
sahf
aaa
push
pop
push
fistl
fcmovnbe
popa
shl
sub
adc
ja
notl
push
xor
rorb
inc
popl
mov
mov
xchg
cwtl
mov
faddp
aaa
fmuls
mov
enter
out
xchg
sub
fsubp
adc
xchg
push
outsl
loopne
pop
fmulp
lea
push
and
dec
sub
push
inc
lret
or
mov
lahf
arpl
xor
dec
inc
scas
sti
xor
push
adc
in
cmp
cltd
cmp
stc
fucomip
push
mov
and
pop
dec
add
mov
adc
es
dec
dec
mov
xor
sub
mov
push
mov
cli
out
push
stc
cs
arpl
pop
xor
rcr
scas
lods
or
mov
lcall
fcoms
loope
insb
loop
mov
and
pop
cmp
cmc
or
imul
std
push
fwait
cs
mov
mov
lcall
movsl
cmpsl
insl
mov
or
xlat
inc
add
jnp
jb
inc
and
fwait
sti
jns
das
dec
push
ret
pop
add
ds
add
jbe
xor
push
repnz
clc
rcl
push
rcl
jbe
popa
repnz
mov
and
push
push
xchg
xchg
mov
sbb
ja
xlat
aad
ror
mov
xor
es
inc
in
push
rclb
mov
test
xor
idivb
mov
adc
mov
fsts
repz
shll
lock
orl
ja
scas
inc
rcrb
gs
arpl
ret
push
push
dec
cmp
and
pop
adc
inc
loopne
xchg
int3
cmc
dec
lods
mov
aad
and
or
out
jbe
lds
xchg
push
mov
dec
sub
fmul
in
cmpsb
mov
or
fs
rorl
push
mov
adc
out
jbe
jbe
mov
xlat
push
cmpsb
enter
or
push
adc
dec
fisttps
jecxz
call
or
mov
call
push
pop
cmpsb
ljmp
dec
out
pop
xchg
mov
dec
rcl
es
call
int3
push
dec
fld
push
push
dec
mov
dec
lahf
out
jbe
mov
fcoms
lock
adc
cli
adc
rolb
jno
adc
push
fstpl
popa
pushf
enter
das
pop
xchg
adc
xchg
pop
mov
aad
out
push
out
fcoms
aad
stos
gs
mov
dec
jo
push
js
dec
push
dec
and
dec
out
push
dec
dec
dec
xchg
push
pop
push
cmp
xchg
pop
shrl
call
dec
call
dec
call
dec
call
dec
call
dec
test
scas
push
add
rcll
pop
loope
jecxz
adc
cwtl
dec
adc
push
pop
pop
roll
shll
call
dec
call
dec
call
dec
enter
xor
stos
cmp
rcll
jno
jae
pop
pop
dec
loopne
or
xorl
cwtl
and
das
xor
xchg
fdiv
call
cmp
lret
or
out
push
int
adc
push
and
scas
aam
in
push
mov
pusha
aad
movsl
aam
jp
and
aad
repz
nop
mov
adc
push
nop
je
push
cmc
outsb
xchg
aad
es
adc
int3
and
hlt
lret
and
adc
aad
mov
adc
push
and
cwtl
and
lret
mov
iret
mov
getsec
fidivl
aaa
fidivl
mov
xchg
sub
cmc
ds
and
dec
push
fmuls
out
es
xor
dec
aad
es
push
aad
pop
roll
inc
aad
push
and
mov
adc
dec
and
out
adc
ja
ljmp
je
jb
jnp
out
movnti
sbb
push
rorl
dec
inc
add
pop
push
inc
mov
xor
or
sti
or
push
dec
adc
pop
or
add
fucomp
xchg
jb
adc
fsubs
xchg
dec
mov
xchg
mov
pop
mov
or
pop
loope
dec
or
adc
adc
scas
pop
lods
in
inc
inc
ds
sub
and
leave
push
lods
pop
roll
and
pop
cmp
sahf
and
sbb
xlat
xchg
pop
ljmp
sbb
in
ret
in
movsl
loop
or
loopne
cmpsb
jp
mov
std
lods
xchg
jo
push
or
xor
jg
icebp
adc
xor
xlat
jb
lahf
test
lahf
int
push
out
dec
incl
gs
loop
adc
outsb
add
fistpl
sbb
adc
in
pop
cmp
dec
dec
loop
scas
lcall
push
add
mov
mov
cltd
test
enter
sbb
aam
and
and
push
inc
dec
mov
mov
shl
sbb
lods
adc
out
pop
jbe
aad
xchg
mov
dec
sbb
dec
ret
sub
outsl
scas
fisubs
pop
jae
clc
cmp
fwait
cmpl
mov
fucom
aad
out
mov
cli
gs
push
fcoms
out
loope
rcl
dec
push
push
sub
cmp
push
jmp
adc
movsl
fbstp
enter
add
push
xor
cmpsb
rcll
lods
or
in
push
in
mov
repnz
fwait
and
xlat
sbb
sub
xorb
cmc
por
loopne
jp
pushf
jne
fwait
mov
cmc
lret
lock
sbb
lods
xor
and
pop
mov
hlt
cmp
js
xor
inc
push
mov
jle
adc
xchg
pop
inc
roll
gs
jo
test
inc
mov
sub
sub
dec
fs
jae
enter
mov
ja
xor
into
ds
lcall
aam
and
icebp
out
dec
push
es
cmp
inc
push
out
mov
clc
mov
or
inc
dec
mov
jmp
jns
das
jae
daa
icebp
jge
ret
popf
dec
mov
xchg
lret
sbb
int
dec
sub
sbb
adc
imul
int3
jecxz
lds
xor
cmp
outsb
jmp
adc
mov
xchg
stc
adc
pop
add
imul
add
dec
fdivrp
push
aad
movsb
push
mov
out
loop
sahf
shl
imul
sti
adcb
xorl
adc
or
mov
fcmovu
in
data16
cmp
mov
sti
lods
cmp
mov
pushf
icebp
push
dec
bound
arpl
or
test
stos
cmp
push
fwait
imul
xor
out
repnz
popa
xor
out
inc
pushf
xchg
std
xor
das
push
outsb
push
rorb
mov
imul
sahf
add
aad
add
jae
outsl
mov
sbb
xchg
scas
jae
loop
and
inc
mov
mov
push
dec
pusha
sbb
int
inc
cmp
subb
xor
dec
jp
jl
jbe
ljmp
fld
cmc
ja
dec
adc
movsb
mov
xlat
xor
sub
and
xor
push
das
sahf
jmp
add
jae
shll
out
push
fwait
xchg
cmp
ljmp
cld
lods
test
data16
or
sbb
adc
ret
or
sub
test
xchg
jo
cwtl
test
adcl
and
bound
cwtl
adc
and
xchg
movsl
addr16
dec
jmp
push
dec
pusha
rolb
sub
mov
dec
jnp
mov
mov
out
cmp
clc
cwtl
jecxz
mov
test
xchg
xor
and
es
pop
stos
jg
in
inc
pop
inc
sbb
dec
loop
rcrl
pop
popa
push
push
sub
inc
pop
or
xor
jle
mov
dec
cmpl
mov
sahf
adc
out
dec
ret
lods
sub
push
shll
in
mov
sahf
xchg
loopne
xor
mov
jle
repnz
jb
xchg
out
lahf
mov
adc
push
push
mov
or
jne
push
push
push
xchg
dec
ss
loope
xchg
mov
fisubs
dec
pop
push
xorps
mov
xchg
icebp
pop
push
imul
mov
mov
and
xorb
xchg
xchg
add
xor
jns
cmc
pop
icebp
imul
in
test
test
jecxz
jl
push
jge
into
mov
pop
and
and
xchg
xor
or
xchg
push
cmc
push
xorl
lods
mov
or
test
jo
int
dec
sti
inc
adc
mov
add
mov
dec
sbb
aad
sub
cmc
and
adc
icebp
stc
stos
jbe
ret
ljmp
lea
bound
pop
and
pop
xchg
push
dec
dec
enter
mov
std
mov
jl
sbb
push
cld
xor
mov
sbb
test
pop
adc
pop
or
xchg
popa
cli
xchg
cmp
lret
jmp
mov
enter
negb
hlt
push
or
and
mov
ja
xchg
call
fildl
test
sbb
xchg
jno
and
push
movsb
pop
insb
mov
loope
and
lock
and
xor
xor
scas
popf
pop
and
pusha
stos
std
lods
dec
add
inc
loope
push
mov
mov
push
push
jnp
lds
cli
das
or
dec
notl
jg
mov
imul
mov
sbb
inc
hlt
mov
mov
test
jb
inc
icebp
or
stos
push
mov
icebp
aas
outsb
aam
sahf
and
repnz
mov
aad
xchg
mov
mov
push
pop
mov
test
xchg
or
and
mov
negl
cmp
jmp
jnp
leave
mov
mov
jp
movswl
adc
adc
pop
fcoms
xor
nop
adc
sub
andl
jno
cwtl
xchg
rclb
adc
mov
cmc
sbb
xlat
pop
xchg
push
dec
sub
rcr
mov
mov
jbe
jno
cli
repnz
sbb
inc
stos
lods
sarb
loop
int
mov
xchg
mov
dec
push
fdiv
dec
loopne
mov
inc
mov
pop
imul
jae
mov
jl
add
lods
jge
iret
in
push
jmp
fisubl
inc
ljmp
movsl
sub
cmp
loop
jb
js
adcl
shl
or
cld
je
mov
xchg
rcr
insl
movsb
shll
not
loop
push
or
jbe
fcoms
cld
mov
push
xchg
xchg
lods
fdivrp
fnstsw
cli
add
dec
bound
inc
pusha
call
and
xor
xor
scas
notl
jle
aas
push
jecxz
jmp
je
insl
rcr
xchg
in
cmp
mov
push
mov
negb
ss
cmp
sub
jecxz
pop
repz
or
lret
std
leave
sub
jmp
repnz
hlt
cmc
push
cwtl
pop
les
sbb
stos
sbb
subb
pop
push
xlat
dec
xor
leave
jmp
ret
push
xchg
pop
rorl
adc
aaa
stos
ja
ffreep
scas
and
or
lret
pop
out
lock
fwait
int
mov
add
and
aam
mov
sahf
loope
add
push
das
addl
lret
push
test
xchg
cwtl
mov
in
cmp
mov
fisubrl
add
jmp
es
ss
and
push
sub
push
sti
idivb
into
pop
dec
insb
pop
shr
mov
jno
cmp
mov
sar
rcl
push
loopne
clc
mov
repz
cmp
out
mov
sar
mov
and
call
cmp
mov
scas
cmpsl
and
add
ret
xchg
je
lret
push
lods
inc
out
add
mov
pop
push
sarl
pushf
es
lods
push
push
and
aad
dec
adc
mov
cs
daa
rolb
dec
es
add
in
cltd
arpl
pop
sbb
push
and
push
dec
jl
sbb
cmpsb
inc
fsubr
xorb
lds
jl
and
jecxz
xlat
xor
scas
mov
nop
clc
loope
xor
into
gs
out
or
mov
jmp
adc
test
pushw
add
adc
mov
aad
jmp
mov
cmc
push
xchg
xor
icebp
dec
cli
xchg
pop
inc
sub
es
rcrl
pop
jp
flds
cmc
xchg
outsl
ret
js
sub
jns
inc
inc
xchg
cmpl
es
mov
sub
push
popa
adc
loope
add
icebp
push
mov
add
popa
xchg
out
stos
ljmp
pop
push
imul
inc
mov
repz
add
lods
test
mov
ret
xchg
enter
aaa
or
push
bound
sbb
int
cwtl
enter
xor
jo
aas
scas
mov
cmp
mov
hlt
adc
add
stc
fistpl
mov
add
and
jb
mov
jae
add
pop
test
inc
push
ljmp
push
cmp
loop
jae
adc
ret
subl
xchg
das
out
in
mov
test
xchg
jno
mov
scas
xor
roll
inc
xchg
sub
push
pop
sub
and
push
dec
icebp
fsts
hlt
pop
fcom
xchg
pop
add
pop
in
mov
enter
shlb
sub
out
repnz
adc
sti
sub
push
cmp
adc
xchg
add
adc
dec
add
dec
mov
das
mov
push
ss
or
inc
xlat
sbb
sbb
or
adc
dec
mov
hlt
and
push
roll
add
shr
xchg
mov
mov
sub
dec
mov
stc
mov
inc
xchg
rclw
cmp
push
push
dec
fnstsw
sbb
lcall
imul
mov
mov
xor
gs
ss
xchg
lret
mov
scas
movsl
in
nop
and
adc
sti
ljmp
sub
xchg
shl
sbb
push
arpl
rol
aas
or
stos
xchg
fisttpll
mov
and
leave
push
adc
cmp
mov
divl
pusha
imul
adc
aad
rorl
sub
dec
icebp
fsts
xchg
pop
outsl
push
add
add
loop
loope
pop
push
jmp
sub
inc
mov
lret
outsb
xor
xor
add
or
inc
fisttpl
out
test
bound
arpl
adc
pop
xchg
negb
in
dec
stc
xor
pusha
jb
ss
or
stos
add
adc
add
bound
pop
xchg
and
insb
xchg
xor
cmp
hlt
mov
inc
jle
mov
mov
push
jae
cmc
push
add
cmp
dec
and
icebp
mov
push
jmp
adc
enter
mov
jg
mull
jne
push
loope
mov
lcall
pop
not
dec
stc
xor
call
mov
mov
fsubs
adc
jl
mov
arpl
mov
cmp
lods
inc
adc
push
xchg
shll
in
hlt
ror
les
jg
shll
cmpsb
xchg
cld
testl
mov
cmpsb
xchg
rorb
mov
nop
dec
repnz
ds
inc
add
es
mov
jno
mov
jb
adc
push
aad
sbb
jge
inc
out
adc
movsl
cmp
mov
mov
sbb
cmp
xor
shlb
mov
push
fs
mov
test
dec
inc
push
jb
aas
out
push
loope
dec
cltd
frstor
mov
mov
imul
pop
out
sbb
hlt
repz
icebp
jno
leave
int3
lods
dec
add
aad
scas
pop
pop
mov
int3
enter
push
or
shr
daa
push
add
test
lods
dec
or
mov
cmp
jmp
adc
stos
addr16
test
loope
clc
dec
inc
repnz
sub
push
ss
inc
leave
lods
adc
stc
cmc
ja
mov
pop
dec
xor
fcmovnb
sbb
aad
imul
int3
pop
pop
adc
scas
jp
in
xchg
nop
sbb
mov
dec
subb
loope
sbb
fmuls
test
loope
adc
stos
roll
dec
int
gs
scas
sarb
mov
ss
mov
mov
adc
xor
inc
add
outsb
loope
cmc
xor
cmpsb
fmull
popf
test
jne
dec
or
jb
or
and
es
xlat
ret
xchg
mov
test
js
xchg
adc
mov
mov
lock
jb
xchg
xlat
jmp
loopne
push
adc
int3
mov
adc
add
pop
dec
fstl
int3
xor
out
xlat
enter
loop,pt
xchg
xor
mov
jl
rorl
repnz
dec
repnz
or
push
lret
add
add
push
imul
jb
iret
xor
es
loope
adc
sub
test
and
lret
outsb
push
push
dec
cmpsb
and
jle
xchg
test
inc
sarl
dec
loope
sbb
add
in
and
add
xorl
adcb
loopne
sub
fadds
cmp
pop
jns
adcb
and
lret
cmp
scas
sbb
xchg
mov
and
fists
testb
imul
cmp
xor
and
mov
fnstenv
add
xor
xchg
mov
lock
test
push
cli
out
xchg
jl
xchg
jnp
cwtl
movsl
jmp
stc
xchg
aam
ficoml
xorl
mov
sti
out
fdivs
leave
cwtl
push
stc
inc
stos
mov
inc
xchg
shl
jnp
xchg
repnz
scas
rorl
enter
mov
jo
ret
iret
dec
xor
lods
cli
out
add
f2xm1
sub
add
fwait
cmc
push
jg
mov
push
xor
cmpsl
xor
jmp
dec
push
mov
inc
mov
mov
nop
sub
sub
lds
test
mov
jne
dec
pop
pop
aad
int
adc
fdivl
loop
loope
mov
mov
sbb
jns
adc
and
call
sub
mov
popa
jns
push
hlt
cli
popa
stos
pop
fistpll
xchg
test
insb
jp
push
xchg
push
arpl
adc
mov
sbb
stos
xor
mov
sbbb
pop
pop
dec
pop
sahf
mov
notb
mov
inc
inc
fwait
ds
jmp
lret
push
cmp
push
adc
rclb
sbb
into
mov
jp
js
mov
mov
dec
cmpsb
ret
shlb
xor
rol
fstpl
mov
repz
add
popf
fs
dec
jnp
leave
inc
xor
addr16
push
daa
cmc
test
sbb
cmp
scas
fimuls
test
popa
aam
dec
xor
iret
aad
pushf
shl
cmc
inc
pop
nop
iret
push
and
fbstp
cs
in
jo
loop
dec
ss
mov
inc
mov
push
inc
jns
iret
pmaddwd
insb
sub
or
or
imul
mov
or
dec
jb
pop
jnp
push
loope
in
cwtl
mov
or
pop
movb
stos
pmullw
sahf
aas
sub
fsubl
stos
cmp
fwait
adc
dec
push
lret
mov
mov
cmp
push
adc
mov
addb
add
sub
xor
mov
mov
lcall
dec
xor
dec
mov
lods
sahf
lods
jns
adc
adc
mov
clc
adc
pop
mov
call
popf
mov
mov
jp
sub
sub
xor
test
dec
decl
sbb
popf
imul
push
add
ficoms
pop
xchg
mov
xor
cwtl
scas
adc
scas
sbbb
xchg
push
std
add
pop
adc
or
sbb
mov
lds
loope
sub
adc
cmp
mov
bound
mov
cmc
data16
pop
push
adc
subb
jne
sti
dec
or
and
mov
mov
adc
int
sarb
sarb
shlb
mov
ds
push
loope
inc
ja
nop
pop
and
push
jo
cwtl
xchg
cltd
in
xchg
mov
in
imul
push
adc
rorb
xor
sub
xchg
push
xor
cmp
cmp
cld
push
mov
push
xor
loope
mov
push
push
fstl
xchg
lret
xchg
fnstenv
divb
pop
loop
frndint
xor
adc
dec
in
mov
and
mov
jb
mov
pop
push
test
dec
pop
test
push
xor
jl
sub
lahf
test
lret
push
pop
sub
vunpcklps
mov
inc
dec
inc
jg
lods
and
loopne
add
cmpsb
xchg
pop
cmp
adc
clc
pop
xor
lds
xchg
or
dec
mov
and
sbb
nop
das
or
jo
sti
adc
or
mov
adc
rorl
xchg
stos
mov
ficoml
jp
jmp
add
movsl
or
pop
cmp
movsb
into
mov
or
ret
ss
and
fiaddl
jno
dec
es
and
xchg
cmc
push
mov
rcr
jbe
push
push
push
mov
insb
or
popa
in
jnp
jae
mov
iret
faddl
pop
dec
inc
push
nop
imul
out
fsubs
std
add
sub
add
inc
shll
mov
and
sti
repnz
xchg
inc
icebp
and
loope
fcmovnb
mov
lods
add
and
shl
dec
add
lahf
js
sub
aad
aam
or
inc
add
or
ds
mov
jle
xor
mov
and
mov
sbb
push
data16
push
push
lret
scas
and
sub
iret
lcall
stos
push
mov
imul
dec
rol
xchg
sub
mov
and
lahf
hlt
pop
in
dec
pop
and
adc
jge
mov
add
dec
mov
cmpsb
dec
push
adc
sti
lods
mov
pop
sbbl
dec
pop
aam
xor
xor
loope
orps
mov
sbb
stos
inc
jp
adc
mov
subb
pop
arpl
xchg
js
inc
or
mov
dec
cwtl
sahf
push
jnp
sbbl
add
push
inc
cwtl
inc
loop
xchg
fcomp
bnd
mov
aas
cmp
mov
dec
pop
dec
push
dec
aam
lods
hlt
sarl
xchg
ret
popa
or
lcall
mov
lds
mov
rorl
pop
push
mov
xchg
mov
jbe
jmp
lds
jle
and
je
pop
stos
and
test
ljmp
scas
into
cwtl
push
inc
xchg
iret
mov
and
call
and
mov
loope
mov
push
or
push
clc
mov
aad
loopne
mov
jnp
mov
mov
mov
outsb
adc
int
rcrl
or
jge
sbb
data16
jns
test
aad
dec
push
pop
fdivl
mov
xchg
ja
or
mov
sub
sub
sahf
push
arpl
pop
mov
xchg
adc
fidivl
cwtl
lock
sub
or
adc
and
mov
lret
mov
scas
adc
mov
cli
aam
mov
sbb
pop
pushf
push
jle
mov
push
sbb
rcl
xor
ficomps
mov
push
sub
loop
xchg
cmp
aaa
jge
push
mov
push
xor
out
xlat
xor
cld
cmp
jne
xlat
and
hlt
pop
sub
aad
adc
dec
push
and
mov
or
les
shl
mov
dec
mov
bnd
mov
or
adc
inc
push
leave
icebp
ret
loop
inc
fwait
ja
push
out
mov
inc
pop
sub
push
push
scas
mov
mul
jmp
stos
add
stc
xchg
hlt
popf
push
loop
adc
push
pop
pop
inc
xchg
mov
and
add
mov
mov
and
mov
mov
adc
nop
das
sub
imul
adc
cmp
cmp
cwtl
mov
adc
sub
xchg
pop
push
xchg
jb
pop
push
dec
std
mov
adc
rcll
test
pop
push
xor
mov
test
push
scas
cmp
cmpsl
lock
out
rolb
sahf
sub
int
aad
dec
mov
enter
mov
mov
lcall
ss
cmp
cmpsl
aad
rcrb
xchg
sbb
push
add
pop
xor
rcll
sti
das
sbb
mov
push
push
lret
in
inc
pop
mov
or
repz
dec
scas
adc
fdivr
mov
xchg
mov
lahf
cmpsb
xchg
addr16
dec
fld
add
in
fwait
inc
sbb
mov
cmc
xor
xor
and
push
jae
push
mov
addr16
or
ss
dec
outsb
in
cs
add
negl
mov
pop
mov
cmp
push
sub
push
mov
pop
add
loop
xchg
jns
call
cwtl
int
dec
ret
or
rorl
or
mov
enter
mov
sub
mov
push
pop
adc
push
inc
call
pop
int
mov
jne
push
push
and
mov
pop
cmp
adc
jns
repnz
sbb
out
shrb
and
mov
mov
loope
push
xlat
cmp
jnp
push
inc
pop
lea
and
xor
adc
cmpl
lahf
cmp
popf
sahf
rep
pop
inc
cmp
adc
and
fnstcw
movsb
int
cltd
int
adc
in
subl
adc
push
mov
bound
or
mov
or
in
xchg
mov
xchg
popa
mov
jecxz
fisubrl
or
cmp
mov
popa
aam
sub
lds
leave
cli
adc
in
mov
sti
cmp
pop
xchg
push
in
xchg
fmuls
scas
cmpsb
fs
mov
test
jns
outsb
dec
enter
or
mov
or
das
cmova
pop
xchg
in
and
push
addr16
sahf
outsl
cmc
lods
pop
aam
fdivrl
jge
pop
iret
add
add
jmp
adc
sub
in
xorb
push
inc
mov
pmullw
in
xor
lock
test
cld
adc
mov
jb
and
push
mov
push
mov
lret
mov
pop
leave
fcoml
sub
pop
inc
icebp
mov
ja
and
push
or
cmp
mov
pop
bound
and
adc
sbb
daa
iret
addr16
out
and
out
push
or
imul
loop
aad
cmpsb
xchg
pop
cmp
repnz
shll
orl
adc
adc
jle
pop
daa
cwtl
dec
fdivrs
shrl
or
rcrl
scas
int
adc
mov
xchg
bound
orl
aam
lret
xchg
into
enter
mov
jge
sbb
push
xchg
mov
push
in
push
roll
cmpsb
aad
cli
and
mov
fcompl
mov
or
int
push
mov
std
xor
fdivs
xlat
mov
mov
repz
call
lea
std
in
mov
sbb
mov
cmp
repnz
iret
push
shlb
icebp
cwtl
mov
rcl
mov
adc
lods
inc
adc
scas
aam
mov
gs
divb
push
shrl
mov
mov
sbb
push
mov
fs
sbb
fldcw
adc
sbb
jbe
mov
mov
fs
test
adc
outsl
push
movsl
push
movsb
cltd
ds
in
outsb
cmp
cmc
mov
mov
mov
xor
add
icebp
dec
pop
inc
or
or
fmul
mov
and
sub
jb,pn
call
or
push
add
dec
loope
push
test
adc
dec
scas
pop
aas
fisubrs
push
pop
into
add
jp
add
adc
stc
mov
push
pop
lods
dec
dec
test
std
in
mov
gs
push
lret
in
mov
repnz
and
lds
push
mov
xchg
push
adc
pop
imul
int3
cmc
dec
es
mov
jl
cmc
push
add
adc
shlb
cmc
adc
ror
and
mov
test
inc
xor
xchg
add
push
inc
dec
cs
push
xchg
mov
adc
and
mov
push
push
data16
sub
pop
mov
lret
push
jle
mov
iret
ljmp
popa
nop
sub
sbb
lahf
mov
aad
outsl
in
cs
adc
dec
or
pop
push
jnp
and
aad
sbb
pop
clc
adc
adc
or
push
lahf
adc
xchg
xor
outsb
scas
jae
add
inc
pop
aaa
lds
pop
sbb
dec
call
push
cmp
adc
and
negb
lods
cmp
jae
scas
inc
cmp
dec
push
mov
push
call
mov
fs
outsb
xor
aam
pop
pop
mov
xor
cmpl
cmp
int
cli
or
mov
in
lret
mov
dec
sbb
push
pop
in
xchg
jae
adc
stos
loop
popf
dec
adcl
push
ja
roll
cltd
bound
adc
rcll
jo
mov
and
push
mov
jns
std
cmp
stos
loop
dec
sbb
in
jb
push
shll
dec
rcrl
nop
fcoms
mov
jmp
mov
lods
and
sub
sbb
pop
inc
jno
xchg
pop
movsl
push
inc
push
push
push
mul
jmp
xchg
ret
add
jp
mov
xchg
adcl
push
sbb
lea
ljmp
imul
jmp
mov
in
jno
out
mov
cwtl
mov
jg
mov
xchg
or
outsl
mov
shll
dec
aam
pop
mov
push
dec
add
dec
pop
mov
clc
xor
ds
jns
mov
push
cmpsb
push
andb
xlat
bound
and
rorl
bound
and
ss
lret
pop
sub
jmp
lahf
sahf
inc
ja
inc
jns
dec
mov
sbb
xor
arpl
imul
test
scas
push
add
loope
push
ret
xchg
pop
cmpsl
or
xchg
or
mov
jno
cld
sbb
dec
dec
loop
subb
mov
xchg
pop
mov
adcl
pushl
jg,pn
pop
sbbb
fwait
iret
fisttps
inc
pop
adc
mov
dec
fsub
std
popa
add
xchg
pop
ja
shrl
int
inc
cli
lahf
xor
enter
xchg
xchg
pop
lods
sbbb
inc
loopne
xchg
xor
int3
pop
fbstp
dec
mov
popf
cmc
jmp
pop
lods
fwait
shll
inc
xchg
sub
adc
mov
cmp
in
lret
push
mov
fs
add
dec
xor
sub
aam
dec
add
out
int3
adc
icebp
jns
xor
movsb
idiv
mov
or
cmp
test
cmc
xchg
fwait
popf
jns
jmp
and
push
pop
sbb
push
dec
mov
mov
xchg
add
fwait
cs
lret
cmp
inc
mov
aas
lods
cwtl
movsl
push
push
mov
out
push
loopne
mov
mov
inc
test
leave
or
scas
xchg
push
aad
lret
mov
gs
push
inc
cmp
lock
dec
mov
dec
lds
mov
icebp
jno
cmp
sub
mov
incl
adc
pop
mov
and
xchg
sub
xor
xchg
nop
mov
push
aad
pop
sbb
mov
stos
and
loope
push
dec
inc
sub
adc
mov
jle
push
or
lds
cmpsb
xchg
gs
stos
jae
leave
movsb
aam
push
xor
lods
cmp
jg
jno
push
mov
mov
xor
sbb
jo
mov
push
sub
push
sbb
mov
push
pop
stos
cmpsl
and
xorl
movsl
and
sub
inc
mov
cmp
jmp
mov
and
jne
je
cltd
data16
adc
sub
in
dec
dec
sub
or
xor
repnz
push
cmp
push
sub
mov
inc
fnstsw
xchg
es
ds
and
dec
add
adc
clc
aaa
and
sbb
jb
push
test
cltd
ljmp
jmp
xor
loope
cs
sub
loope
fwait
or
std
dec
xlat
cmp
lods
adc
lcall
cmpsl
aad
out
rol
jno
sub
loope
pop
rcl
stos
cltd
loopne
out
xchg
pop
mov
mov
bound
jge
mov
xchg
mov
jne
ret
adc
shl
out
shll
rorl
sub
adc
iret
inc
adc
sbbb
fs
cmp
pushf
incl
and
mov
fsubr
dec
xorb
outsb
shrl
adc
jbe
xchg
push
scas
mov
lds
fsubr
lcall
stos
in
adc
test
pop
cmc
inc
stc
mov
jnp
push
sub
shlb
addr16
xor
fstps
push
xchg
adc
pusha
fcomps
pop
and
jno
sbb
pop
fsubrl
sbb
xlat
jmp
push
xchg
sub
add
clc
in
pop
mov
mov
ret
jbe
push
jne
insl
dec
xchg
loope
cmp
sub
popa
push
xor
xchg
rcll
cmp
repnz
pusha
pop
xchg
js
ljmp
outsb
mov
outsb
int
xorl
pusha
test
lcall
mov
fwait
jne
adc
mov
push
jno
aas
sub
pop
mov
into
jmp
test
xor
sub
lcall
dec
dec
lods
xor
push
das
cli
pushf
es
pop
insb
stos
add
insb
push
push
push
mov
dec
sbb
pop
ljmp
lds
mov
push
mov
xor
lods
call
rolb
mov
push
clc
mov
pop
sahf
push
and
pop
rcrb
notb
xlat
cmp
inc
pop
js
cmp
lcall
cmpsl
mov
mov
mov
mov
sbb
test
lret
or
mov
loope
test
bound
outsb
adc
push
jp
bound
dec
imul
sub
sahf
cmpb
sbb
jmp
sub
jb
pop
or
mov
test
sub
pop
push
mov
bound
rorl
aam
pop
pop
adcl
adc
cli
filds
dec
ja
push
jge
xor
inc
add
xchg
sbb
out
les
arpl
lahf
jno
bound
daa
cmpsb
jl
pushf
addr16
inc
adc
sbb
cwtl
mov
es
std
inc
xchg
jmp
mov
fsubs
xor
xchg
ror
shll
sti
jecxz
test
ss
push
daa
xchg
nop
sbb
adc
sub
and
aam
xor
or
and
inc
test
int
stos
in
cmpsl
adc
mov
lods
inc
lods
xchg
sub
mov
jns
push
pop
xchg
cmpsb
mov
mull
negb
mov
jmp
pop
pop
and
dec
insb
pop
and
mov
rcll
push
push
stos
dec
nop
test
xlat
out
push
xlat
fnstsw
xchg
mov
scas
pop
dec
pop
mov
mov
mov
sub
pop
je
pop
jge
jns
outsb
lods
lds
add
sub
aad
lret
jnp
dec
xor
dec
cmp
call
push
cmp
gs
dec
out
clc
mov
mov
push
dec
cwtl
xor
push
ficompl
push
mov
mov
orl
sbb
push
cmp
enter
ds
mov
in
sub
adc
dec
push
call
call
jg
push
mov
fistpl
xchg
dec
sbb
mov
pop
stos
cltd
adc
push
add
or
dec
xor
out
cmc
orb
mov
es
inc
cmc
sub
or
pop
neg
pop
xor
cmc
enter
ljmp
lea
push
cmp
ficoml
push
jg
mov
push
xor
xor
cltd
pop
dec
fcom
fwait
lea
mov
fwait
aam
mov
pop
addr16
mov
lret
sahf
mov
jne
adc
fwait
mov
stos
and
and
fimull
div
mov
mov
adc
imul
lret
mov
pop
mov
stos
outsl
push
inc
or
add
rclb
cmp
jae
jmp
mov
push
mov
add
push
xchg
or
push
rorl
pop
cs
arpl
mov
pop
sbb
inc
jne
in
cli
mov
leave
mov
sbb
inc
int3
pop
sbb
pop
pop
dec
imul
pop
cmp
pop
inc
or
orb
xchg
adc
push
inc
cmc
xchg
in
ss
push
push
push
cmp
pusha
add
sub
leave
mov
or
rcl
xchg
daa
inc
into
pop
lret
pop
cmc
cs
icebp
imul
sti
pop
cmpsl
adc
mov
scas
roll
pushf
push
xor
mov
xchg
sahf
repnz
inc
lcall
sbb
xlat
sbb
pop
jnp
lds
out
xor
and
cmpsb
jge
bndstx
mov
dec
push
pop
mov
je
aad
es
pop
out
fcoms
repnz
dec
ljmp
test
andl
pushl
in
rcll
mov
dec
enter
dec
inc
arpl
xchg
push
push
loope,pn
mov
xchg
in
mov
enter
sbb
adc
pusha
cmp
cmp
push
out
push
sbb
out
push
js
fs
xchg
xchg
rcrl
mov
mov
mov
add
ljmp
iret
xchg
mov
lret
add
pushw
dec
in
dec
and
cwtl
stos
xchg
jns
mov
movsl
inc
lods
and
negl
and
adc
gs
jmp
xor
jo
jp
in
add
out
fbld
out
cmp
adc
test
mov
jp
dec
mov
repz
cmp
lahf
push
cwtl
xchg
roll
jge
pop
nop
cmc
fmuls
in
mov
mov
mov
cmpb
push
fsubrs
xor
dec
jo
lahf
rol
bound
stos
xlat
mov
cmp
aad
shll
sub
push
xchg
xor
fcoms
jecxz
fwait
stos
gs
push
pop
roll
rorb
push
xchg
lahf
fisubrl
js
pushf
xor
mov
pop
adc
xchg
aad
aad
mov
mov
scas
lods
sbb
inc
add
dec
dec
pop
scas
pop
and
fsubr
arpl
push
out
aam
cmp
pop
bound
imul
lods
rcll
adc
mov
stc
pushf
pop
or
push
mov
pop
jmp
pop
sub
or
jmp
xor
mov
lods
sub
jno
pop
pop
dec
push
enter
inc
shll
test
sti
sub
xlat
pop
roll
lods
lods
sub
in
push
xchg
cmp
sbb
std
mov
lods
pusha
lods
loop
int3
and
adc
sub
das
jo
mov
stc
arpl
mov
cmc
push
fadd
mov
and
cmp
push
shrl
pop
rcr
rol
loopne
shl
dec
mov
adc
cmp
adc
hlt
push
nop
mov
mov
aam
sub
sti
movsb
and
jecxz
test
xchg
xchg
or
pop
sub
orl
mov
sbb
sub
cmp
or
mov
mov
hlt
cmc
inc
adc
in
push
dec
neg
les
jne
loop
enter
push
jg
clc
pop
in
inc
sbb
das
arpl
rolb
xor
pop
xchg
mov
lahf
or
lahf
scas
jae
adc
xchg
es
inc
xchg
ss
faddp
fwait
ss
mov
and
sub
mov
or
shll
adc
push
jg
lcall
xor
or
mov
mov
mov
std
mov
jno
inc
jno
pop
btc
sub
fdivs
jmp
jo
push
cmpsb
sub
pusha
lcall
xchg
xchg
xlat
fwait
xlat
lea
lcall
flds
loope
sbb
or
ja
lods
rcrl
sub
fistl
fildll
xchg
loop
dec
popf
ret
pop
rol
or
xchg
sub
push
sbb
sub
pop
xchg
ffreep
or
adc
mov
jb
pusha
fiaddl
push
cmc
fnstsw
pop
pop
sbb
dec
shl
push
dec
mov
pusha
psrlw
mov
lds
cltd
inc
pushf
and
movsb
xchg
pop
xor
jo
push
jmp
int
data16
aas
shll
popf
xchg
fsubrs
xchg
jl
stos
dec
and
lret
data16
test
mov
dec
xchg
or
dec
adc
cmp
cwtl
mov
xchg
push
dec
cltd
lods
dec
dec
ss
sub
sbb
pop
sub
mov
ret
cmc
leave
rorl
and
pop
sbb
jno
cmpsb
push
cmp
loope
mov
xchg
loopne
int
call
loopne
mov
sub
fcomps
in
faddl
cltd
jp
push
cmp
and
xor
ja
mov
push
lea
aad
dec
call
rcrl
dec
inc
lock
pop
xor
jns
sub
push
jge
inc
cltd
or
add
in
mov
fsubs
inc
lcall
mov
or
xchg
sti
lock
pop
push
pop
mov
call
xor
jmp
jmp
or
xor
in
loop
ficompl
cld
or
mov
push
inc
loop
sub
cmpsb
pusha
pop
scas
pop
mov
adc
jae
sahf
in
and
ds
jb
lahf
in
mull
mov
cmp
out
sbb
jp
and
mov
jno
dec
dec
mov
mov
dec
es
xchg
scas
test
pop
adc
xlat
xorl
push
adc
pop
jecxz
mov
sahf
gs
mov
adc
test
pop
xor
pop
mov
test
sbbb
dec
push
push
shrl
jne
sbb
sbbl
cmp
push
dec
dec
mov
shlb
push
mov
mov
sahf
adc
jmp
and
ja
cmpb
and
test
and
orl
and
add
xor
cmpsb
or
mov
pop
xor
cwtl
adcl
or
dec
xchg
dec
mov
pop
iret
fsts
into
pushf
or
fxch
ds
ds
rol
dec
cmp
cltd
das
mov
add
cwtl
and
adc
mov
repz
test
and
rcl
inc
icebp
and
or
movsl
inc
adc
test
xchg
adc
int
inc
dec
pop
dec
lret
add
imul
rcll
push
push
push
testl
fstl
inc
pop
insl
xor
or
adc
dec
mov
dec
push
and
inc
adc
or
xchg
repnz
push
rol
xor
mov
mov
jns
push
fsub
xor
add
pop
repnz
mov
jmp
pop
push
mov
scas
xchg
and
stos
repz
mov
int3
cmp
jbe
pop
out
and
push
fistpll
ret
inc
sarl
sbbl
loopne
sbb
and
js
sub
sbbl
or
pop
fisttps
mov
lret
cmc
xchg
inc
xor
mov
pop
jne
push
in
add
enter
inc
call
xchg
lea
xchg
and
add
cmpsl
es
dec
add
mov
push
adcb
xchg
xchg
mov
rclb
adc
call
mov
ja
jmp
popa
adc
push
loope
sub
gs
dec
mov
sbb
push
dec
lods
add
jb
scas
out
ja
jns
scas
inc
scas
cmp
sarb
cmp
ds
xchg
scas
mov
mov
gs
add
cmp
dec
jl
insb
xlat
mov
mov
inc
rcl
mov
mov
stc
test
fmuls
pop
test
mov
iret
pop
push
loope
cmp
cmp
data16
cmp
pop
or
adc
call
in
popa
or
mov
data16
pop
scas
out
push
push
jmp
mov
dec
pop
inc
rcl
dec
iret
sbb
iret
out
pop
push
mov
sub
mov
or
dec
or
pop
adc
xor
lds
or
lds
stos
pop
push
lret
xor
jnp
bound
push
in
pop
and
xchg
xchg
sub
xchg
dec
shll
cli
add
or
mov
cmp
call
int
cmpsl
dec
push
mov
and
aad
out
int
jb
adc
mov
clc
and
jnp
movsb
mov
xor
push
icebp
add
call
std
adcb
and
dec
fs
fsubs
push
icebp
repnz
out
adc
sbb
xchg
mov
mov
mov
xor
jecxz
xor
mov
jmp
bound
xor
iret
leave
adc
cli
jmp
sarb
outsl
mov
inc
mov
mov
inc
jnp
push
push
mov
cmp
add
mov
ss
mov
adc
loope
inc
dec
jbe
imul
jle
enter
shrl
sub
leave
outsl
imul
mov
fsubs
mov
enter
in
dec
cmp
push
push
lock
out
repnz
push
rcrb
dec
jle
adc
mov
sbb
push
stc
lahf
int
pop
loope
sahf
leave
js
out
out
imul
inc
loope
adc
push
xlat
outsb
cwtl
mov
push
mov
mov
mov
scas
pop
ds
mov
arpl
sub
mov
popa
sbb
and
mov
push
cwtl
rol
repz
add
lods
xlat
cli
sub
push
nop
test
sbb
and
adc
fmuls
pop
aad
jb
fidivl
into
jmp
sub
das
cwtl
mov
xchg
fstps
xchg
bound
jge
xchg
adc
inc
mov
mov
mov
adc
aas
insb
add
inc
cmp
ret
mov
mov
scas
inc
mov
push
mulps
shlb
push
fistl
jg
fs
push
cwtd
pop
aaa
dec
push
dec
lahf
sar
push
xor
adc
xchg
call
mov
push
cmpl
cmp
dec
push
dec
jl
push
dec
dec
arpl
sbb
xor
iret
aas
lods
lret
cmp
adc
mov
in
ja
into
xor
das
add
out
rol
test
in
fwait
sub
mov
xor
mov
mov
roll
pop
or
sbb
enter
call
rolb
ret
jbe
and
sub
cwtl
pop
scas
clc
icebp
gs
xor
pushl
mov
bnd
in
pop
cmpsl
sar
inc
lods
shl
inc
dec
loop
fdivrs
xchg
mov
repnz
pop
outsb
rclb
jg
xchg
adc
repnz
push
mov
xorb
or
mov
or
into
sahf
daa
xchg
cmp
dec
js
lds
sahf
incb
loop
lahf
and
mov
outsl
cmc
test
mov
pop
add
enter
mov
inc
or
cmpsl
mov
daa
dec
add
jnp
sub
addr16
dec
or
pop
out
sub
pop
roll
pop
mov
dec
mov
fucomi
push
in
les
rorb
push
cmp
jno
mov
aad
mov
mov
push
push
adc
ret
xor
inc
icebp
and
cmpsb
shlb
push
call
fsubrs
inc
mov
mov
mov
push
adc
ret
dec
adc
repnz
pop
sarb
cli
sub
nop
adc
add
sub
hlt
cmpsb
in
pop
xchg
ss
xchg
pop
jne
push
push
lods
jns
in
lds
jb
push
aam
in
iret
push
and
sbb
cs
adc
push
roll
mov
sub
pop
jnp
jg
and
and
enter
xchg
dec
int
fdivr
pop
push
push
mov
lea
inc
mov
in
frstor
icebp
adc
sbb
js
pusha
mov
push
testb
add
add
sti
dec
icebp
xorl
stos
xchg
sbb
daa
add
aas
call
xchg
xchg
pop
in
push
dec
xchg
out
adc
cmp
stos
mov
jecxz
sbb
push
mov
push
mov
mov
sbb
pusha
cltd
outsb
fmuls
lock
inc
xchg
mov
sbbl
cwtl
imul
les
mov
ja
push
push
cmpsb
xor
mov
cmpl
jecxz
dec
sbb
dec
pop
out
push
sbb
in
rcrl
lcall
sbb
movl
push
jo
mov
fstpl
or
xchg
sub
pop
imul
adc
mov
mov
lea
cmp
fwait
das
out
sub
mov
xchg
mov
std
repnz
icebp
dec
xchg
fcoms
lock
add
xchg
xor
adc
sbbb
or
int3
push
push
xchg
cltd
jo
mov
rcrl
lds
lea
lret
push
outsl
xor
jmp
cmp
lods
xchg
push
dec
lock
mov
or
push
add
iret
in
loope
mov
push
mov
mov
jg
cs
jg
popa
fwait
xlat
stos
pop
dec
cmp
xchg
inc
pushl
jge
lret
scas
xchg
xor
out
fadds
popf
or
pop
add
aad
push
std
add
or
cmp
xor
mov
icebp
push
hlt
mov
push
xchg
mov
ss
out
push
inc
in
or
dec
in
sub
mov
or
cmp
xchg
fnstsw
lcall
pushf
sbbl
push
cmp
mov
push
jg
sub
or
cmp
xor
dec
aad
in
or
push
sbb
jo
dec
pop
inc
jmp
lcall
add
mov
cmp
sbb
push
sbb
in
loope
jge
add
push
and
shl
sub
adc
mov
sti
mov
lock
out
loope
adc
push
mov
adc
mov
pop
push
dec
sub
sbb
jno
rcr
mov
fldl
fwait
test
stos
or
call
xchg
aam
or
mov
outsl
icebp
std
push
inc
mov
mov
push
push
idivl
cmc
cmp
es
scas
outsl
mov
out
and
popw
shrl
arpl
push
pop
test
aaa
pop
fstl
addl
dec
pop
adc
repnz
mov
adc
lods
and
stos
loopne
or
xchg
cwtl
push
stc
xchg
sub
testb
pop
icebp
cmp
pop
loopne
stos
fidivrl
mov
nop
scas
sbb
addl
adc
pop
mov
aad
mov
lods
adc
jno
dec
data16
xchg
or
call
lds
popf
sub
mov
mov
xchg
loopne
out
mov
fucomip
pop
in
scas
xlat
gs
inc
xchg
repz
mov
in
std
xchg
push
sub
xlat
xor
push
cwtl
loope
cmp
lcall
bswap
mov
sbbl
cld
addb
shl
out
xor
or
leave
sub
fnstenv
loopne
andb
add
sub
mov
mov
call
dec
call
mov
ret
push
lods
cmp
cmp
jbe
in
xchg
xor
sbbl
add
lahf
pop
dec
or
aam
pop
in
mov
cld
shll
pop
xor
fcomip
aaa
mov
or
or
pop
adc
loopne
imul
cmpsl
outsl
sub
mov
test
cmp
lock
jl,pt
cs
xchg
inc
sub
in
les
sahf
addr16
frstor
das
loopne
mov
mov
or
lea
cli
pop
std
aaa
out
aam
pop
out
jbe
or
pop
push
xchg
xchg
popa
sub
movsl
dec
pop
ficomps
mov
fisttpl
data16
mov
push
adc
leavew
imul
sub
jb
fcomps
inc
xchg
loop
jne
cltd
sub
cmp
sti
jl
rorb
es
mov
mov
adc
add
adc
out
mov
popf
sub
fwait
mov
test
scas
je
mov
xor
and
pop
arpl
or
arpl
push
hlt
push
mov
sub
push
xlat
jae
lret
inc
fmuls
and
xor
les
sahf
sbb
cwtl
xor
aad
or
sub
loop
adc
or
addr16
repz
cwtl
dec
mov
mov
mov
dec
pop
dec
dec
adc
jae
sub
push
cmp
repz
jae
sarb
lret
icebp
inc
mov
jns
stc
mov
dec
xchg
sarl
sub
in
jmp
dec
inc
test
jns
mov
mov
ss
cmp
push
inc
inc
repnz
aaa
adc
cwtl
lock
jne
cmc
mov
rorl
test
push
aad
aam
dec
pop
leave
xor
dec
and
pop
lcall
and
shl
icebp
call
and
out
shll
xchg
and
mov
notb
xor
and
fs
repnz
shl
clc
xor
loope
inc
cmc
nop
mov
cmc
cmc
push
cmc
addb
sub
mov
mov
pusha
inc
cmp
adc
loope
lds
dec
out
adc
sub
in
inc
adcl
lea
jnp
and
cltd
shrb
adc
xor
xchg
sbb
cmpsl
or
lea
dec
pop
sbb
cmpsb
pop
add
idivb
cmpsl
push
sbb
and
inc
nop
shrl
aad
mov
clc
sarb
test
mov
dec
sub
cmpsb
jg
loope
xchg
cmp
add
ret
add
mov
adc
adc
adc
mov
jmp
mov
add
mov
mov
mov
adc
jnp
sbb
mov
adc
xchg
pop
push
mov
add
mov
aam
les
ljmp
aas
pop
dec
shll
ret
sti
aad
stos
scas
int
fldcw
push
aad
inc
stos
adc
and
push
push
pop
sub
fcom
add
test
pop
adc
pop
pusha
push
sub
pop
or
mov
fwait
pop
call
in
inc
push
insb
xchg
or
jne
inc
out
clc
sub
mov
sti
cltd
sbb
sub
sub
movsl
push
xchg
cmp
mov
dec
push
push
out
hlt
mov
inc
mov
pop
popf
out
rorl
pop
cwtl
adc
divb
shrl
pop
bound
jae
xor
push
push
add
repz
jle
mov
push
shll
sahf
sub
mov
inc
insl
lods
mov
clc
outsb
push
and
call
in
adc
fstpt
lahf
data16
pop
ja
fxch
pop
adc
sub
rolb
adc
std
or
push
xchg
sub
fdivrl
mov
dec
js
icebp
adc
adc
adc
dec
aaa
lods
dec
lret
jnp
das
imul
xchg
and
fwait
hlt
lret
loop
xor
test
push
insb
clc
std
lret
mov
push
std
adc
cmp
push
mov
dec
shrb
push
ljmp
mov
cmp
pop
imul
mov
sar
inc
subl
dec
stos
inc
jne
pop
pop
into
jecxz
add
pop
sub
and
mov
xchg
mov
add
jne
or
push
sahf
pop
ljmp
sbb
jmp
mov
add
jp
sub
int
ret
pop
pushf
insb
cwtl
lea
lock
enter
mov
and
push
mov
push
mov
push
jmp
jp
inc
xchg
es
iret
addb
shlb
adc
aad
scas
dec
dec
inc
subl
mov
cli
in
mov
fiadds
test
adc
add
mov
je
dec
dec
fs
sarb
jge
outsb
rolb
int
jg
in
lahf
fdivrs
lcall
add
add
shrl
lcall
sub
inc
push
fisubl
xchg
pop
push
and
mov
push
lods
push
dec
push
jg,pn
xchg
add
sbb
dec
cltd
inc
jg
fistpl
xchg
jl
in
lds
add
fs
adc
sbb
ss
loope
dec
shl
push
cmp
sub
adc
loopne
jl
fmul
and
movsl
shlb
jno
pop
mov
fidivrs
es
aad
dec
cli
es
fistpll
inc
jnp
icebp
xchg
adc
adc
aaa
push
xor
sub
lds
jo
aaa
and
jmp
inc
dec
lret
sub
pop
jb
in
cltd
mov
in
and
andb
xchg
cmp
pop
fildll
mov
xchg
jbe
cmp
jb
loopne
lahf
xchg
call
stos
cmpsl
add
call
test
shr
adc
lods
leave
xchg
in
orl
jne
loop,pt
in
fs
push
adc
rol
stos
pop
xchg
adc
sub
packsswb
sti
sub
xor
bnd
push
shl
roll
and
or
mov
push
mov
lds
into
cmp
les
push
bound
loope
mov
sti
std
and
sbb
push
mov
push
jb
mov
push
push
adc
mov
mov
outsl
xchg
mov
dec
sbb
add
roll
stos
insb
mov
sbb
movsl
fwait
sub
mov
push
or
inc
andl
hlt
hlt
jne
shrl
loopne
ds
shll
add
rolb
sbb
dec
es
loop
mov
jno
push
jge
mov
rcll
icebp
inc
jnp
lret
mov
push
movsb
rcll
sbb
icebp
dec
data16
daa
test
in
xlat
scas
cmpsl
and
ds
fists
mov
mov
or
push
mov
fldenv
icebp
aad
inc
jo
dec
mov
mov
jbe
or
adc
mov
push
subl
sub
jae
and
mov
mov
inc
jae
cmp
ret
in
pop
je
sub
sarb
mov
push
fnstenv
aad
ss
push
int
pop
aas
inc
or
add
sti
push
rcll
sahf
in
xchg
out
fdivs
or
dec
in
sbb
mov
sbb
aad
dec
mov
cmp
pop
outsb
mov
adc
mov
jns
mov
jp
xchg
shl
lret
in
test
xor
sub
sti
aaa
or
mov
pusha
mov
push
or
ficoml
lea
adc
std
aad
mov
popf
insl
cld
mov
imul
jge
pop
sub
cmp
sub
lcall
ficompl
sbb
fildl
loop
pop
sbb
xor
nop
cmp
and
add
fistps
mov
ret
add
jl
adc
out
or
and
shrb
rclb
inc
mov
adc
mov
mov
in
leave
lods
cwtl
add
sti
jnp
xchg
outsb
cld
xchg
adc
and
adc
dec
lret
mov
sub
or
pop
stc
mov
shrl
or
xor
icebp
xor
push
inc
mov
ror
add
and
popa
lods
shl
jbe
dec
xchg
sub
clc
xchg
std
pop
adc
xchg
add
xchg
or
and
push
xchg
dec
fisttps
mov
mov
nop
ror
dec
or
std
dec
mov
arpl
pop
std
aad
and
push
add
sbb
sub
mov
lahf
inc
inc
repz
aaa
cmp
iret
inc
cmpsl
xchg
in
sub
pop
movsl
add
lock
and
inc
jg
push
push
mov
stos
push
iret
and
mov
callw
out
mov
adc
push
pop
ret
sbbb
xchg
sub
adcb
push
xor
es
xchg
and
mov
adc
and
sub
push
jnp
hlt
sbb
out
mov
outsl
hlt
jle
insl
addb
ret
adc
sti
cld
push
mov
loope
ljmp
aaa
fidivrl
roll
mov
add
incl
and
cmp
nop
mov
adc
xchg
les
arpl
clc
jns
fnstcw
jns
xchg
test
gs
loopne
cmpsb
push
into
mov
mov
mov
sahf
xchg
xchg
xchg
je
cmp
mov
jle
or
pop
jmp
sbb
js
xchg
mov
push
jb
popa
pop
sti
adc
lods
dec
aad
sub
dec
inc
popa
int
adc
adc
imul
push
inc
sbb
push
outsl
xor
loopne
add
mov
push
mov
lea
dec
inc
or
loope
inc
in
push
xchg
mov
and
test
les
arpl
lret
adc
lahf
iret
push
cmp
scas
inc
push
call
movsl
xchg
push
sarl
push
mov
stos
pop
mov
inc
sti
imul
and
jmp
mov
add
ljmp
rcrl
mov
pop
mov
ret
dec
dec
sti
adc
jmp
repnz
stos
xchg
rorl
fs
in
imul
popa
std
jg
sti
fldl
pop
jmp
out
mov
pop
mov
stos
mov
inc
sub
scas
and
cmpsl
lcall
ret
adc
negl
cmp
push
cmp
xchg
add
sub
jecxz
stos
sbb
or
dec
pop
sbb
bound
xlat
mov
aas
xlat
xor
sub
addr16
push
and
rcrl
mov
or
mov
dec
push
pushl
mov
mov
sub
mov
push
ffree
push
and
jae
jno
adc
xchg
out
and
gs
pop
mov
push
fcomps
cmp
sub
push
loope
dec
in
lods
enter
lock
jecxz
inc
push
lret
data16
rcr
mov
pop
jo
push
xchg
insl
data16
popa
js
loop
xor
pop
repz
jae
shrl
pop
fwait
pop
or
mov
int
sub
aas
sub
sub
push
popf
mov
push
clc
jno
ja
or
aaa
and
dec
mov
lds
jnp
push
ljmp
icebp
fadds
dec
push
sbb
loope
inc
jle
push
adc
lret
dec
mov
xchg
cmp
int3
fcoml
push
call
enter
sub
sbb
or
call
inc
pop
cmc
jmp
inc
stc
outsl
lret
xchg
push
shlb
sub
popa
adc
push
push
out
pop
not
imul
jg
iret
pop
ja
mov
fdivs
xchg
mov
loope
mov
mov
or
mov
insl
mov
inc
pop
test
enter
int3
test
in
mov
in
lret
loop
push
and
dec
mov
push
lcall
aam
addb
pop
in
jmp
xor
lds
mov
xchg
fwait
sub
inc
mov
out
mov
out
mov
mov
or
mov
sti
in
enter
enter
enter
enter
call
mov
aas
aas
int3
leave
or
popf
imul
jae
jae
or
push
jnp
test
xor
cmpsb
jecxz
or
lods
dec
add
sahf
adc
fldl
cmpsb
popa
jae
push
xor
xlat
push
mov
std
sub
mov
inc
out
mov
pop
outsl
out
adcl
or
aad
xchg
iret
jns
xchg
inc
in
push
mov
or
xchg
fimull
sarb
call
rcl
jmp
imul
loopne
loopne
rcrb
call
mov
sub
cmpsb
gs
push
clc
addb
test
inc
dec
cmpsb
adc
fcom
or
push
pusha
mov
sti
aaa
enter
imul
stos
loop,pt
sbb
das
stos
arpl
xchg
push
sahf
lret
loopne
rcrb
xchg
lret
lds
pop
cmp
in
xchg
mov
leave
int
pop
inc
pop
and
ss
jne
mov
lret
mov
inc
xchg
mov
faddp
jnp
popf
pop
inc
mov
pop
push
fisubrl
popa
cmpsb
shl
test
jmp
lods
pop
xchg
mov
ss
rolb
xchg
mov
out
or
xchg
rcrb
cmp
sbb
mov
insb
pop
lahf
loope
outsl
pop
out
sbb
and
pop
sahf
xchg
pop
lock
lods
repz
push
cmpsb
pop
icebp
addps
xchg
mov
shl
aas
adc
repnz
dec
imul
jnp
in
cld
in
add
ss
and
movsb
and
and
dec
sbb
xchg
and
out
jns
je
stos
mov
pop
xchg
dec
lock
push
mov
int
mov
cmc
mov
fs
and
sti
ret
push
aas
out
and
pop
mov
mov
xor
adcl
mov
mov
addr16
xor
sub
push
push
xchg
jae
sbb
mov
jg
or
shrl
push
mov
pop
xor
scas
ds
xchg
adc
ret
ret
lods
stos
mov
cltd
push
sub
out
mov
mov
pop
cmp
jae
cmp
movsb
lods
adc
pop
sub
sub
push
mov
pushf
xchg
sbb
adc
das
jmp
or
js
xchg
dec
and
lret
fisubrs
and
dec
dec
cltd
mov
sub
adc
fs
ja
and
clc
mov
hlt
push
pusha
stos
and
pushf
mov
orl
nop
jbe
mov
cmc
repnz
inc
sub
dec
mulb
es
mov
xchg
dec
fidivl
mov
int
mov
cmc
xor
cli
cmp
push
cmp
and
imul
in
inc
pop
mov
and
loop
mov
push
dec
xchg
jmp
push
inc
push
mov
rcrl
popa
cwtl
call
inc
and
jbe
mov
adc
lods
lds
cmpl
in
icebp
sti
mov
inc
scas
add
les
movsl
dec
mov
sbb
das
dec
cmp
es
adc
sahf
xor
mov
fs
jnp
adc
jnp
int
xor
mov
scas
call
pop
dec
add
xchg
jg
lret
shrb
test
xlat
iret
pop
aas
dec
jae
repz
popf
xchg
jns
push
mull
inc
xor
adc
aad
pop
mov
or
stos
aaa
xlat
es
stos
and
sub
push
mov
mov
inc
in
pop
and
sub
shlb
mov
test
xchg
fwait
int
dec
lods
aad
ror
push
imul
dec
inc
fwait
pop
lret
push
jmp
and
pop
cmpsb
and
inc
ljmp
repnz
push
shll
xchg
stos
push
pop
mov
mov
ja
subb
mov
popf
xchg
lods
and
sbb
pop
cli
out
inc
mov
out
mov
jnp
mov
popa
pop
push
cli
jmp
mov
push
cltd
mov
and
rolb
rolb
push
push
mov
fwait
mov
cmc
sahf
mov
inc
inc
sbb
add
adc
sub
inc
inc
push
xlat
call
xchg
mov
inc
cli
push
mov
xchg
or
cmpsl
xor
fmull
and
mov
imul
inc
push
push
shrl
in
call
enter
xor
jbe,pt
or
adc
inc
loope
xlat
fisttpl
repz
jbe
test
inc
out
out
fcmove
rclw
dec
call
lods
addr16
mov
jecxz
push
das
jbe
cmp
mov
cmp
xchg
mov
mov
and
mov
mov
mov
pop
or
fcoms
es
mov
fimuls
add
xlat
jl
adc
mov
jne
pop
jmp
iret
iretw
xchg
filds
mov
pop
sbb
leave
out
jp
ret
mov
fsubrl
stos
adc
dec
push
dec
xchg
lcall
mov
push
loop
mov
inc
inc
mov
sahf
lahf
dec
sbbl
in
pop
sar
sahf
and
adc
push
push
xchg
xor
mov
cmp
pop
mov
out
and
dec
sub
lods
mov
or
ficomps
mov
enter
push
sub
imul
mov
cld
data16
jg
jae
dec
jnp
mov
adc
hlt
lret
pop
mov
add
fistl
pop
into
adc
sbb
outsb
sub
dec
ds
and
int
xchg
inc
adc
sub
pop
mov
xor
xor
cltd
je
lods
xchg
xor
add
push
stc
cmp
insb
mov
dec
lds
icebp
pop
and
mov
inc
arpl
lret
push
lahf
mov
and
xor
addr16
xorl
and
inc
pop
adc
inc
or
push
iret
into
dec
dec
sub
fcoml
lock
dec
in
add
xchg
xchg
adc
fldcw
mov
adc
xchg
inc
stos
mov
pop
mov
mov
into
dec
loope
loop
mov
sbb
movsl
inc
cmp
in
jg
push
aam
jo
push
fs
sbb
inc
hlt
mov
lock
lods
mov
inc
jle
sub
lock
mov
jle
push
mov
cmp
xor
gs
add
xor
and
or
push
sahf
inc
insl
pop
dec
cmpsl
adc
adc
icebp
and
or
call
sub
inc
push
sahf
in
pop
mov
inc
sub
bound
stos
fwait
add
icebp
mov
push
test
mov
sub
ret
or
addb
mov
xor
dec
dec
add
js
add
fcmove
dec
dec
test
mov
test
mov
adc
cmpsl
lds
mov
dec
test
ss
fst
test
mov
fsubrp
xor
fistpll
jns
out
aad
mov
fs
jl
pop
stos
aad
in
shrb
cmp
lret
and
in
adc
lahf
addr16
lods
repnz
subb
add
pop
out
fldln2
outsl
push
out
notb
lods
mov
imulb
push
negb
cmc
outsl
dec
mov
jo
adc
sbb
jnp
pop
int3
imul
sbb
loopne
aaa
or
dec
push
sbb
add
push
push
pop
test
movb
lock
popa
int3
stos
push
mov
or
test
pop
mov
std
dec
testb
xchg
fiadds
dec
out
push
test
pop
mov
adc
xor
shlb
mov
mov
sbb
cli
icebp
sbb
outsl
mov
jge
jbe
xchg
xorb
xor
jbe
aam
mov
enter
das
sbb
pop
add
sahf
cmp
add
xchg
push
in
mov
repnz
pop
mov
enter
loop
adcl
cld
push
clc
xchg
xor
adc
out
or
ds
mov
xor
or
aas
push
mov
jb
push
mov
call
mov
and
push
push
or
pop
sbb
addr16
pusha
or
mov
lods
inc
pop
add
mov
bound
mov
bound
mov
cmpsb
bound
rcrb
stos
sbb
stos
adc
mov
rorb
adc
jmp
sub
xchg
out
stc
jg
mov
fs
cld
sbb
repnz
lds
push
adc
push
adc
stc
dec
rcrl
xor
rcrb
negb
pop
outsl
and
loope
clc
mov
test
in
push
lds
pushf
push
xchg
push
call
mov
lds
shll
jae
and
mov
shll
push
popa
rcrl
ljmp
inc
mov
mov
push
dec
sub
sbb
or
jg
mov
roll
bnd
jecxz
pop
xchg
outsb
call
sbb
cmpsb
sarl
cli
jge
pop
xor
fcoms
mov
sbb
stos
sbb
into
in
xlat
loope
loop
fisubs
out
push
xor
xor
pop
lods
rclb
inc
cmpsb
outsl
jl
ret
adc
push
xchg
and
sub
mov
jb
loope
outsl
imul
cwtl
mov
xchg
fwait
or
jl
dec
xchg
adc
dec
sarl
mov
xchg
sahf
pop
push
jbe
sub
repnz
outsl
inc
xor
add
add
cld
or
add
mov
out
jge
jno
push
rolb
std
dec
pop
dec
pop
or
and
in
dec
mov
in
sbb
fwait
rcrb
dec
rcr
icebp
int
leave
stc
cli
inc
push
scas
and
cmp
fdivr
out
inc
push
xchg
and
mov
mov
add
xor
adc
push
test
sub
daa
rcr
imul
ss
aas
jnp
mov
xchg
push
lret
mov
mov
push
push
mov
rcrl
jle
adc
or
xlat
push
xchg
sahf
push
pop
mov
pop
out
or
jno
insl
fcoms
jae
outsl
xor
lret
and
js
insb
xchg
sahf
adc
sbb
push
daa
aaa
test
add
sbb
loop
jno
dec
and
mov
clc
out
loop
clc
inc
aam
cmpb
adc
leave
and
sbb
sbb
push
in
adc
repz
jno
js
notb
pop
fisubrl
cmc
call
sub
dec
jle
cmp
pusha
data16
stc
lock
push
rcl
xorb
xchg
out
js
pushf
std
pop
dec
mov
aad
inc
lea
subl
inc
push
pop
push
push
sub
mov
lods
outsb
xchg
xor
mov
xchg
fnstsw
mov
mov
inc
sahf
ret
push
push
test
imul
in
in
loopne
push
dec
scas
xor
push
jno
pop
movsb
repz
cltd
cld
scas
mov
daa
fdivl
aaa
leave
pop
stos
cmc
loopne
jbe
add
idivb
jno
shrb
inc
aad
lods
pop
out
xchg
pop
lods
or
mov
or
lret
xchg
add
adc
loopne
test
or
add
movsl
add
sti
adc
mov
out
out
les
int3
mov
rorl
pop
ja
sbb
adc
xchg
mov
cmp
pop
jge
dec
rcrb
imul
push
mov
aam
fldenv
popf
jno
mov
data16
aas
or
ja
dec
ds
mov
cs
xorb
ret
mov
push
mov
xchg
mov
add
rol
repnz
adc
or
sub
push
aaa
fs
mov
stc
faddl
add
inc
cmp
sbb
test
pushf
jb
filds
xchg
inc
movsl
xchg
mov
pop
divb
adc
pop
mov
subl
mov
mov
mov
ss
xchg
cld
hlt
mov
xchg
ljmp
sbb
inc
mov
in
and
xlat
mov
icebp
mov
ljmp
jmp
inc
mov
sub
xlat
cmp
xchg
lahf
mov
push
jno
xor
dec
dec
and
rcrb
imul
out
lcall
stc
cmpsb
popa
hlt
and
aad
mov
fistl
push
push
add
cld
aaa
hlt
adc
outsb
scas
sub
push
mov
inc
cmp
jb
loopne
aam
pop
cmpsb
push
xchg
xor
xchg
push
in
push
call
clc
pop
repz
scas
jle
add
pop
in
xchg
ds
popf
divb
inc
push
jle
push
mov
cli
jns
and
addl
xchg
icebp
out
loop
mov
inc
add
insl
add
test
xchg
push
mov
mov
cwtl
sub
cmp
mov
pop
push
dec
jne
outsl
mov
xchg
sti
in
xchg
mov
syscall
and
cs
popa
out
or
dec
ds
lods
xor
push
movsb
and
cmpsb
push
adc
cmp
cmp
adc
divb
or
xor
dec
dec
add
sbb
loope
pop
and
push
dec
xlat
push
add
out
gs
dec
sub
inc
mov
xchg
xchg
push
inc
subl
lock
jb
jmp
decl
lock
adc
mov
dec
std
dec
out
rcrb
mov
fsubrs
aad
inc
mov
pop
cmp
mov
xor
lret
fcoms
cli
ret
xchg
add
in
repnz
movb
push
push
adc
dec
test
sbb
dec
jmp
or
rcrb
push
xchg
push
mov
mov
adc
mov
pop
out
pusha
outsl
fwait
sti
mov
adc
cmp
movsb
mov
jb
push
stc
push
outsl
mov
and
push
push
in
dec
aas
lock
mov
in
pusha
dec
outsl
push
or
dec
adc
icebp
add
mov
ret
aad
in
ds
add
or
mov
and
mov
inc
decl
in
shll
sbb
pop
dec
loopne
pop
xlat
pop
inc
mov
xor
into
inc
jmp
mov
cmc
gs
fsubrs
pop
inc
int3
loopne
in
push
ret
push
adcb
loop
xchg
adc
in
shlb
add
pop
push
int3
ja
ds
mov
arpl
stc
mov
rclb
xchg
mov
xchg
cmc
and
dec
xorps
pop
or
pop
mov
sub
jle
ss
pop
imul
mov
push
dec
pop
sub
xchg
xchg
push
popa
add
mov
ds
jbe
div
fs
into
mov
test
in
sub
and
mov
loope
and
xchg
push
rorl
jae
fists
xchg
jp
pop
fs
dec
int3
add
mov
mov
iret
jnp,pt
hlt
pop
jne
xor
cmp
lock
xchg
addr16
sbb
and
cltd
scas
pop
pop
call
arpl
pop
test
or
test
xor
fnsave
dec
lret
test
or
movsb
mov
icebp
mov
push
sub
aad
sbb
push
dec
add
not
fisttpll
jne
pop
xchg
in
pop
and
sub
imul
jnp
pop
mov
outsb
xchg
iret
push
and
fdivrl
inc
pop
push
push
xchg
mov
add
repnz
daa
mov
sarb
mov
addr16
out
fstpt
stos
aad
lret
sub
mov
adc
das
sqrtps
push
add
xor
lcall
andl
mov
test
rcll
mov
imul
push
pushf
and
and
test
or
or
icebp
fisttpl
out
stos
lds
mov
inc
pop
loope
addl
in
ljmp
cmp
lcall
mov
gs
data16
pop
mov
lret
sub
push
cwtl
divl
sub
popl
jno
gs
fldl
xor
outsb
mov
push
xor
into
mov
xlat
add
inc
ret
xor
adc
fstps
cmp
ret
jb
rolb
lcall
icebp
aad
inc
xchg
jg
es
and
adc
cld
xchg
cmp
fsub
repnz
mov
or
data16
std
jae
fsubs
loop
push
add
mov
ret
ret
repnz
mov
loop
dec
insb
inc
jmp
push
adc
sti
insb
dec
addl
and
es
lds
cmp
loope
sub
sbb
rcrl
add
ss
js
xchg
out
lcall
ret
push
std
xlat
fstl
mov
cmp
inc
xor
movsl
sub
and
outsl
aaa
insb
and
cli
sbb
push
adc
and
sub
mov
dec
push
dec
sar
mov
test
mov
xchg
leave
mov
mov
sbb
lret
mov
mov
jle
mov
mov
fs
stos
data16
mov
loopne
rcrb
push
jae
jge
adc
rcll
mov
xchg
xor
sahf
rcll
mov
sbb
jg
dec
mov
pop
dec
rolb
hlt
cli
popf
mov
mov
out
sub
insb
repz
push
das
push
cs
push
out
sbb
adc
mov
sub
shlb
push
sub
sub
pop
test
or
pusha
inc
addr16
leave
imul
sub
xchg
bound
hlt
mov
xor
xchg
sahf
mov
pushf
xor
loop
je
xlat
mov
mov
mov
mov
std
loopne
dec
std
cmp
and
mov
or
pop
inc
or
insb
pop
pop
push
adc
pop
movsl
xlat
stc
negb
jae
loope
pop
adc
jbe
mov
adc
mov
pop
push
fsubrs
dec
ljmp
sbb
xor
addr16
outsl
cltd
push
in
and
inc
in
fucom
shll
ss
dec
inc
add
xchg
inc
loope
and
nop
and
iret
cwtl
outsl
push
pop
js
sahf
xor
sbb
and
sbb
jb
cwtl
rcrb
sbb
adc
xchg
js
loope
cmp
ret
das
adc
pop
mov
mov
adc
cli
or
scas
fwait
and
sarb
cmpsb
adc
dec
xor
mov
outsl
xor
push
push
sahf
push
push
cmp
sbb
jae
or
cwtl
loope
cmp
int3
mov
out
push
pop
loope
or
call
dec
sti
cmp
mov
outsl
and
or
xchg
or
out
lahf
add
repz
jb
insb
pop
sbb
adc
sbb
xchg
pop
push
mov
std
fstps
enter
sub
ljmp
and
mov
xchg
and
push
sbb
int
xchg
push
loop
out
sub
push
or
gs
mov
xor
push
outsl
mov
out
mov
adc
data16
test
fstpl
pusha
add
pop
imul
call
adc
cwtl
push
mov
or
push
sub
andl
adc
stos
adc
into
cmp
xlat
inc
cld
and
rclb
test
add
xchg
mov
lds
dec
jno
std
andl
jae
xlat
repnz
and
adc
stos
icebp
adcl
pop
mov
sarl
call
add
mov
mov
push
out
mov
rol
jg
popa
xor
adc
xchg
ss
lret
cmp
add
outsb
pop
and
mov
mov
daa
lea
mov
loope
mov
repz
adc
and
push
inc
xchg
xchg
jnp
and
add
movsl
mov
fs
stos
mov
popa
xorl
iret
push
andl
clts
and
and
mov
jbe
scas
out
enter
aas
test
mov
hlt
and
cmpsb
popf
ljmp
or
jb,pt
xchg
cli
mov
dec
cmp
shrl
adc
subb
aad
cmp
out
push
mov
sbb
dec
cltd
fwait
test
enter
roll
mov
sahf
dec
pop
js
pop
das
push
xlat
mov
jb
sahf
jle
and
insb
mov
push
pop
pushf
mov
orl
mov
sub
cmp
cmc
dec
xchg
mov
js
ror
dec
inc
out
rcll
fisubs
loope
xor
or
cli
adc
int
out
out
cmpsb
loop
cmp
dec
idivb
rolb
and
xor
push
fwait
lods
cmc
sbb
cld
or
jnp
dec
push
cmpsl
xchg
pusha
lret
cmp
pop
mov
in
pop
dec
sarl
mov
loope
fmuls
test
sbb
mov
out
sub
jmp
cmc
adc
dec
adc
lock
or
mov
out
cmp
pushw
jecxz
nop
out
and
lods
or
pop
push
aad
jmp
movsl
push
jne
les
ds
add
icebp
push
dec
out
push
fnsave
repnz
icebp
mov
sahf
add
in
pop
push
mov
adc
adc
in
loope
or
add
call
mov
inc
mov
loopne
push
jg
popf
maxps
sarl
clc
pop
mov
lahf
ss
mov
push
nop
push
xchg
sahf
inc
ds
pop
mov
jecxz
cwtl
add
add
sbb
mov
andl
push
pop
push
es
adc
enter
mov
mov
arpl
lods
sub
and
out
sub
mov
shl
dec
insl
pop
mov
mov
or
adc
xlat
dec
push
and
mov
inc
push
nop
push
cmp
lret
push
inc
xchg
aad
lods
xchg
xchg
inc
js
aaa
lret
pop
bound
dec
out
int3
xor
pop
cwtl
adc
dec
outsl
mov
or
lret
sbb
bound
movsb
lods
gs
push
stos
sub
dec
mov
lret
lcall
xchg
push
bound
xor
loopne
mov
ja
cmp
shll
pop
mov
mov
xchg
xchg
out
adc
mov
fdivl
push
push
jb
rorl
push
mov
ds
push
cwtl
pop
out
inc
jno
mov
cs
jl
int
lds
dec
lcall
mov
mov
mov
and
cmpb
inc
stos
out
add
xchg
sub
cmp
ret
push
hlt
jnp
mov
in
fwait
mov
push
cmp
insb
adc
lahf
jae
xchg
mov
and
mov
shll
mov
jge
andl
pop
dec
mov
subb
pop
lods
ret
imul
jae
loop
imul
imul
shrb
jle
ljmp
jecxz
in
dec
lock
add
mov
movsb
jg
int3
xadd
sbb
inc
pushf
mov
int3
xchg
dec
mov
fxch
test
popf
inc
fadds
iret
stos
lahf
imul
data16
call
xor
repz
loope
je
lret
pop
loopne
dec
pop
shl
cmc
bound
rcrb
and
in
adc
mov
ret
stos
pop
xchg
mov
movsl
jae
sbb
push
popf
jb
ret
push
cli
pushf
mov
dec
mov
ja
shlb
jnp
jae
test
adc
insl
and
or
das
mov
imul
xlat
and
sbb
mov
mov
lods
fisttps
lds
aad
pop
loope
mov
add
sub
or
mov
sbb
or
or
ss
ret
push
push
and
mov
pop
scas
push
call
shl
enter
mov
ds
subb
mov
pop
and
test
out
push
repnz
dec
insb
iret
mov
push
sub
or
cmp
xchg
inc
adc
pop
gs
rorb
aad
test
sub
xor
addb
idiv
lcall
sbb
popa
mov
push
sub
or
and
xchg
subb
push
or
jns
ss
int3
inc
stos
cwtl
aam
test
pushl
lea
cs
sbb
ljmp
insb
fbstp
pop
push
cs
mov
dec
dec
test
movsl
mov
adc
mov
cmp
mov
repnz
xor
xor
scas
pop
jns
adc
aaa
and
cmp
fistl
sbbl
mov
cmp
sub
adc
test
shl
in
push
cmp
add
mov
ja
scas
mov
mov
mov
pop
cmp
dec
xchg
in
mov
icebp
sbb
mov
pop
xor
adc
push
adc
pop
sbb
jne
loop
mov
dec
fnstcw
jb
fcmovb
out
push
push
inc
sbb
cwtl
inc
adc
insb
jmp
int
pop
and
mov
mov
adc
iret
push
inc
fstp
xor
cmp
sbb
shlb
std
jae
add
sbb
inc
mov
sub
inc
adc
hlt
sahf
mov
fadds
jne
rorb
push
push
add
sub
or
adc
rcrb
sub
cld
mov
mov
xchg
dec
das
mov
sahf
push
jmp
mov
sahf
arpl
ljmp
and
pop
imull
jmp
fnstenv
adc
or
sub
mov
aam
pop
xor
in
inc
fcomps
mov
rclb
hlt
imul
adc
push
mov
mov
mov
fadds
xchg
aaa
inc
mov
repnz
push
and
mov
dec
frstor
mov
js
imul
push
jmp
ljmp
mov
in
out
xchg
push
int
ja
cmpsl
je
mov
add
sbb
ja
sti
imul
mov
mov
add
cwtl
adc
xchg
dec
lock
out
test
pop
pop
push
xchg
xchg
out
mov
xchg
lods
push
rolb
add
mov
or
inc
pop
cltd
and
push
rorl
mov
pop
test
inc
jb
and
and
dec
jne
rclb
xchg
jge
notb
jp
fcomp
xchg
aad
mov
ror
sub
mov
push
rcr
add
push
repnz
adc
std
xor
fldt
dec
cmc
dec
push
divb
pop
sub
adc
cmp
cmc
pop
clc
xchg
ficomps
sub
pop
xor
aas
cmp
clc
push
sub
mov
pop
mov
in
xor
sar
xchg
test
mov
fs
xor
in
add
pop
or
dec
fdivrl
rorl
pop
xchg
jae
dec
je,pt
ljmp
jmp
lahf
stc
pop
mov
and
inc
mov
xlat
rcrl
push
add
out
mov
inc
lock
mov
push
mov
mov
movsl
cmp
pop
sbbl
jno
in
mov
and
shll
xlat
adc
cmp
mov
adc
cmp
sahf
dec
out
cli
sub
adc
icebp
dec
xor
dec
xchg
jno
pop
or
filds
mov
adc
pop
and
or
in
mov
js
inc
push
repnz
mov
inc
pop
test
mov
mov
adc
push
call
roll
shlb
adc
std
adc
call
dec
xor
call
pop
or
mov
sub
cld
sbb
jbe
insb
mov
mov
stos
pop
xchg
ljmp
jmp
sub
lret
pop
ja
xchg
jmp
lds
outsb
xorb
iret
sti
push
adcl
scas
imul
add
and
icebp
xor
adc
enter
cmp
xor
inc
rorl
arpl
ja
push
dec
dec
in
int3
mov
push
mov
adc
mov
mov
xor
hlt
mov
push
fisttpl
rcrl
mov
inc
dec
push
push
and
adc
sub
scas
cmp
xor
jb
fwait
divb
lahf
cmc
aas
or
sbb
shl
mov
inc
fmul
or
dec
xchg
fdivrl
jl
lret
cltd
mov
or
jmp
cmp
or
push
mov
inc
sar
daa
lods
mov
inc
mov
and
push
and
xor
pop
push
xchg
popf
arpl
and
mov
cmpsb
icebp
pause
mov
das
push
and
lret
adc
outsl
pop
test
dec
add
inc
pop
xchg
sbb
xchg
loop
xor
scas
fs
shrl
push
xchg
je
fdivrl
adc
arpl
arpl
add
shrb
test
int3
enter
push
repnz
pop
add
xchg
lret
into
mov
jno,pt
bound
adcb
stos
xchg
adc
in
fdivrs
add
dec
or
clc
dec
or
fnstcw
jne
sbb
out
mov
sub
fwait
jae
and
cli
aad
loopne
pushf
push
adc
in
jle
and
add
jbe
sbb
iret
dec
lea
into
bound
or
fcoms
pushf
adc
mov
lea
or
jmp
and
loopne
hlt
xchg
xchg
pop
dec
fisttpl
dec
pop
xchg
jo
dec
sti
lods
add
or
aaa
test
sub
jl
out
arpl
inc
pop
sbb
divps
pop
adc
inc
adc
pop
stos
mov
push
cltd
daa
cmp
dec
xor
mov
shll
cs
and
imul
sub
mov
xchg
jno
adc
sarl
pop
or
sbbb
and
mov
mov
adc
fucomp
ljmp
fcompl
mov
adc
pop
sbb
cs
sbb
loope
pop
lret
xor
lea
frstor
push
dec
mov
bound
loop
and
xchg
cmp
les
dec
aad
push
sub
jl
cs
mov
sarb
pop
sti
int3
add
xchg
mov
adcb
movsl
mov
jbe
xchg
fwait
adc
jp
dec
pusha
and
cmc
xchg
bound
jecxz
inc
testb
aad
xlat
adc
shr
divb
dec
dec
mov
div
adc
add
pop
fs
cmc
rcrb
mov
push
icebp
lahf
ds
hlt
mov
sub
xor
xor
test
lods
aam
or
xchg
sahf
jae
pop
xchg
ficompl
cmpsb
rol
out
mov
mov
xchg
sbb
mov
mov
out
loope
push
icebp
xor
int
jne
into
lret
andl
je
cli
pop
xchg
mov
xor
mov
mov
push
mov
or
in
adc
aad
cmp
adcb
xor
std
sahf
or
sti
iret
clc
dec
loopne
jp
call
and
je
and
mov
xor
sbb
mov
sbb
and
pop
leave
fistps
pop
push
jmp
jmp
inc
mov
sti
sbb
push
aad
xor
stos
xlat
sbb
jo
jns
test
and
push
adc
cmp
sub
adc
dec
xor
repnz
jg
sbb
bnd
mov
jbe
add
int3
push
fldl
add
loop
dec
add
cs
or
push
push
adc
push
pop
out
and
leave
in
cs
aad
in
pushf
xlat
mov
inc
cmc
sti
cli
jl
into
mov
repz
into
or
cld
ret
push
mov
loope
pop
pop
out
popf
mov
mov
data16
cli
aam
test
ja
pop
rorb
icebp
popf
inc
aam
pop
in
add
rcl
loope
cmpsb
inc
ror
repnz
xchg
gs
dec
add
sbbb
mov
mov
pushf
pop
imul
clc
mov
lods
scas
rorb
mov
rorl
inc
fwait
loope
icebp
xchg
arpl
sub
outsb
adc
xor
aad
leave
bound
jecxz
dec
mov
inc
lahf
mov
dec
repnz
xor
leave
pop
push
addl
fmull
sahf
inc
mov
jg
jg
lret
jo
ffreep
aad
mov
pop
stc
or
push
push
loopne
or
pop
cmpsb
in
fmull
sub
out
repnz
ficoms
pop
inc
sub
adc
addr16
test
or
adc
push
xchg
jnp
sbb
dec
loop
xchg
push
ja
out
adc
mov
mov
and
pusha
adc
mov
rolb
rolb
and
ljmp
mov
jmp
mov
ret
sbb
cmp
sbb
xchg
jo
lret
xor
mov
mov
mov
pop
xchg
int
jle
adc
mov
add
sub
loope
and
jb
sub
inc
dec
mov
dec
gs
pop
xlat
out
outsb
jnp
lret
adc
es
xor
ret
xchg
rorb
ds
cmp
inc
sbb
shld
or
mov
mov
loope
push
jb
mov
jnp
and
inc
das
call
test
adcl
aam
jno
push
mov
sub
aam
cmp
rclb
insb
loope
stos
add
fs
mov
push
xor
jae
roll
mov
sbbb
lods
cltd
out
fwait
out
or
adc
xlat
outsl
or
loopne
sahf
iret
add
sub
and
inc
cld
xchg
add
mov
add
xchg
cmp
adc
add
push
xchg
outsb
add
xchg
sub
aad
adc
and
stos
jg
pop
movsb
add
xor
scas
dec
fldl
mov
push
out
pop
adc
adc
inc
mov
scas
xchg
cmc
jae
xlat
cmp
mov
loopne
or
mov
sbb
mov
nop
aad
cmpsb
dec
icebp
lcall
xor
popa
iret
nop
es
repnz
insb
leave
popa
lds
push
dec
xor
jb
adc
push
xlat
push
push
xor
push
daa
clc
mov
jnp
mov
cmp
sahf
xchg
cmp
fs
xor
pushf
pop
pop
push
mov
xchg
cmp
push
cmc
aad
rorl
adcl
stc
jbe
daa
jecxz
mov
int
sub
inc
ds
xchg
fcomp
lods
cs
dec
movsl
cmp
pop
xchg
add
mov
cmpsb
andl
sbb
lahf
ljmp
mov
and
inc
mov
xor
rolb
jbe
xchg
call
mov
mov
ljmp
addr16
dec
jo
aad
push
pop
xor
out
dec
stos
lret
fs
add
sub
inc
jp
and
stc
int
jae
cmp
fdivs
aaa
push
xlat
dec
aad
faddl
inc
in
push
jae
adc
fwait
adc
aaa
jecxz
push
mov
movsb
icebp
pop
arpl
sub
jnp
inc
div
jp
push
fwait
jae
rcrb
push
jge
mov
add
mov
mov
loop
into
push
addl
aas
cwtl
or
popa
aam
and
jnp
jo
test
push
adc
inc
nop
ljmp
xor
push
sbb
clc
mov
push
lea
jnp
xchg
dec
sahf
push
scas
sbb
std
repz
fstpt
xor
insb
add
mov
mov
mov
popa
or
sub
out
daa
dec
insb
scas
aam
imul
outsl
mov
xchg
sub
adc
movsl
shrb
sbb
push
out
and
roll
outsb
dec
nop
dec
mov
adc
push
mov
stc
pop
jb
dec
and
imul
mov
mov
pusha
movsl
rclb
dec
pop
popf
aad
push
mov
leave
pop
shll
call
push
dec
cmp
adc
adc
out
cmpsb
push
mov
push
and
test
xor
inc
add
xor
call
jmp
inc
pushf
xchg
xchg
test
xchg
xchg
inc
adc
add
rcr
repnz
adc
stos
jl
pusha
push
sub
inc
mov
imul
cltd
in
xlat
add
push
or
dec
jecxz
dec
cmovnp
mov
lods
ret
sbb
push
loop
fwait
xor
push
sbb
into
scas
test
jno
fs
jecxz
jbe
dec
sub
std
dec
mov
xlat
aam
into
mov
sub
pop
rcrb
xchg
adc
dec
shrl
fcmovne
insl
mov
sub
popf
sti
mov
mov
mov
enter
int
dec
mov
nop
push
push
repnz
jmp
add
test
stos
sbb
xchg
and
cmp
mov
push
mov
nop
jno
adc
stc
add
mov
dec
es
push
int
dec
mov
cmpsl
push
rcrl
sub
push
cli
cs
gs
notb
mov
push
xchg
mov
xchg
or
xchg
or
ret
iret
xchg
loop
mov
pusha
xchg
and
popa
out
lea
push
testb
dec
mov
fdivrs
sbb
sbb
aaa
or
push
rol
sbb
jmp
push
sub
stos
test
subl
add
divb
cwtl
adc
fistpll
mov
push
inc
dec
cmp
jl
sub
mov
pop
jmp
xor
mov
dec
repnz
or
mov
dec
outsb
mov
addl
insb
xrstors
cmp
outsl
test
ds
push
cmp
sti
mov
lar
sub
int
mov
xor
ret
adcl
xchg
sbb
dec
movsl
data16
dec
in
cmpsb
aad
adc
push
cltd
cmc
push
mov
cmp
cld
pop
xorl
mov
out
pop
pop
mov
out
rclb
jg
adc
fiadds
cltd
loopne
cwtl
fldcw
mov
pop
stos
pop
adc
jnp
orl
mov
xchg
aad
and
out
and
push
pop
fisttpl
in
in
or
ss
or
pop
mov
sbb
adc
push
xlat
in
and
icebp
inc
cltd
add
sarl
push
add
movsb
adc
or
ds
outsb
inc
and
leave
ds
pop
sbb
jns
outsl
xchg
ret
mov
adc
div
std
popf
mov
sti
test
mov
cltd
in
test
mov
inc
in
sbb
lods
fs
or
pop
mov
addr16
sub
push
xor
pop
jbe
xchg
mov
lds
mov
push
push
adc
cmp
and
adc
nop
ss
and
jns
ss
cmp
call
call
push
adc
push
cwtl
sbbb
mov
outsb
lods
ds
test
pop
add
jmp
jl
out
dec
fmul
testl
arpl
adc
dec
push
or
push
cmp
mov
xor
icebp
add
adc
jns
inc
cwtl
cmp
adc
mov
sbb
mov
repz
push
mov
xchg
aad
and
cli
pop
sub
cmpb
cmpsb
movsb
int3
int3
loope
pop
pop
mov
insb
pop
xor
sbbb
icebp
das
es
fisttps
inc
inc
stos
jno
mov
fimuls
in
sbb
or
inc
xor
jg
int
push
into
adc
dec
push
sbb
xchg
mov
test
xchg
fnstenv
sbb
enter
dec
jmp
fucomp
push
leave
mov
ss
mov
push
lods
mov
and
outsl
lock
inc
std
dec
push
push
mov
cmpsb
jae
mov
lea
fisttpll
xor
test
sub
mov
icebp
ss
adc
adc
add
xchg
jmp
xchg
icebp
adc
sub
pop
dec
cvtpi2ps
les
jo
outsb
add
jmp
push
sub
or
pop
push
fdivl
sbb
popf
imul
adc
insb
dec
fidivl
inc
jmp
xchg
sub
addr16
gs
xchg
call
sub
nop
pop
fnstsw
push
mov
push
in
mov
adc
or
int
int
mov
cs
mov
add
mov
add
cmp
scas
adcb
push
xchg
leave
lods
int3
and
pop
sti
aad
test
out
mov
jge
repz
and
mov
pop
int3
stc
data16
inc
outsb
push
arpl
iret
out
jb
lods
push
adc
aas
mov
aam
pop
xor
sbb
push
aad
and
jmp
mov
dec
xchg
mov
push
subl
mov
out
in
sbb
inc
pop
pop
adc
mov
inc
pop
fimuls
and
push
call
arpl
fwait
clc
and
cwtl
es
shll
sahf
xchg
in
rcll
cs
test
add
xor
pop
add
mov
push
pop
mov
lret
mov
out
add
inc
hlt
dec
xor
in
inc
mov
ljmp
lds
push
shll
imulb
bound
cmp
nop
into
sub
xchg
stos
ret
add
jmp
cmc
jp
adc
es
repnz
cld
in
in
out
jo
dec
jo
cld
inc
add
std
push
fldpi
push
pop
shll
mov
push
sub
mov
or
mov
mov
xchg
icebp
add
and
cs
xchg
mov
aam
inc
sahf
xchg
into
jnp
push
cmp
inc
outsb
lea
adc
mov
adc
dec
rep
lret
dec
and
push
sets
cwtl
and
dec
rcrl
pop
inc
mov
cmp
jecxz
add
or
xor
bound
aam
cmp
das
out
aad
pop
dec
sub
std
mov
sub
fstp
repnz
ror
scas
in
jo
enter
sbb
lcall
idivb
push
int
or
adc
push
jbe
into
mov
jge
aad
out
call
aad
or
push
push
fmulp
and
xchg
pop
adc
movsl
cmp
in
rol
lret
sbb
and
push
test
jle
mov
dec
jne
inc
jb
sarl
ss
into
adc
sub
loop
int3
mov
adc
or
frstor
cs
pop
jl
out
xchg
lret
inc
stos
xorl
push
gs
cmc
out
sbb
call
mov
mov
pop
in
xchg
loop
cmp
mov
lret
adc
repnz
rcrl
adc
add
pop
inc
inc
mov
insl
or
pop
loope
dec
and
pop
pop
mov
or
cmp
ja
das
xor
lret
xchg
mov
dec
pop
pop
pop
or
inc
sub
mov
ljmp
outsl
mov
jge
cmp
iret
movsb
adc
push
pop
xor
cmp
sub
cmc
fs
fstpt
dec
sahf
shl
sub
xor
fists
sub
xchg
or
out
cs
or
ficoml
sbb
cwtl
lock
push
or
decb
out
sbb
sarb
lods
xchg
or
out
fisttpl
arpl
mov
pop
mov
mov
mov
int3
leave
arpl
pop
ss
roll
sub
mov
aaa
sbb
push
enter
inc
sahf
adc
ret
push
ljmp
imul
mov
aad
dec
adc
and
and
imul
repnz
dec
fdivl
xchg
push
push
adc
xorl
sbb
push
repnz
ret
pop
cmp
iret
xchg
pop
pop
push
or
sbb
outsb
jb
push
cmp
mov
dec
adc
inc
cmpsb
add
mov
push
jmp
adc
add
out
in
out
mov
inc
shlb
dec
in
rcll
out
loope
xchg
pop
dec
fistpl
fnstsw
and
data16
dec
pop
mov
out
push
cmp
popa
in
out
jnp
add
repnz
inc
call
inc
jb
gs
imul
gs
and
push
lcall
mov
out
rorl
cmpsl
sbb
movsl
dec
lds
aaa
stc
push
out
arpl
jb
sahf
add
dec
decb
dec
outsb
nop
out
sub
shrl
xor
mov
imul
and
push
dec
lahf
dec
outsb
lea
sti
sub
jmp
int3
fs
mov
add
jne
aad
notb
rcr
negb
mov
jb
or
jg
jp
enter
insl
dec
push
mov
inc
pmulhuw
jbe
movsb
mov
and
data16
into
sbb
or
flds
pop
mov
xchg
mov
inc
cs
push
mov
jbe
mov
xchg
data16
in
rcrl
loop
push
mov
xchg
mov
or
push
ljmp
adc
rorl
outsb
outsl
push
aad
nop
outsb
mov
xchg
mov
out
adc
in
cs
enter
jae
cmp
add
and
loop
push
or
add
sub
mov
xchg
push
test
cs
mov
xor
in
cwtl
inc
mov
push
ljmp
icebp
xchg
clc
xchg
xchg
out
ds
stc
ljmp
lods
sub
pop
repnz
jbe
push
adc
push
jo
jg
inc
fidivl
xchg
mov
ss
mov
subb
shrb
cmp
int3
jo
dec
mov
adc
pushf
jae
cwtl
rcll
add
push
lods
mov
add
ss
test
loope
cmp
push
pop
push
enter
inc
jb
jae
dec
jp
mov
sub
call
pop
cmp
push
es
fldl
xor
push
xchg
pop
dec
sub
dec
xor
dec
outsl
dec
add
pop
pop
dec
xchg
dec
push
lock
ds
ds
mov
imul
mov
rorb
rclb
pop
xor
push
cmp
sub
sub
mov
inc
push
sbb
in
scas
in
arpl
jo
outsl
sub
jmp
or
aad
sub
xchg
hlt
sbb
jo
out
and
mov
pop
fmul
repz
loope
mov
jb
fld
into
sub
sub
xor
mov
or
sahf
push
adc
sub
movsb
stc
mov
push
sbb
lret
lahf
test
fsubrl
ficoms
lds
jl
lret
pop
in
xor
mov
push
mov
pop
gs
fdivrp
pop
jo
je
hlt
cmpsb
stos
add
out
cmpsl
xchg
leave
xchg
roll
xlat
inc
mov
mov
aam
outsl
stos
sbb
or
aas
movsb
fmuls
data16
rcr
into
pop
jnp
dec
bound
sbb
add
fldl
inc
jns
lahf
loop
mov
and
fnstsw
jb
push
leave
mov
sub
ret
sub
push
mov
sub
xchg
push
jle
adc
andl
sbb
jp
xchg
or
arpl
sub
test
cs
sub
fmul
aaa
dec
aam
test
sarb
jo
adc
aas
and
mov
orl
out
sbb
repnz
rclb
push
xchg
int
push
inc
and
adc
xorb
mov
push
mov
adc
pop
mov
xor
add
xor
sub
pop
stos
mov
push
xchg
stos
push
dec
xchg
out
push
cmp
sbb
and
xchg
pop
cmpsb
es
shld
mov
xchg
fiaddl
sbbb
leave
or
pop
andb
sahf
push
mov
xchg
std
mov
pop
dec
mov
cmp
repz
adc
push
hlt
aas
mov
aam
inc
dec
test
enter
mov
xor
icebp
fldenv
jmp
and
rorl
jae
mov
mov
jbe
arpl
sub
jae
aam
in
fdivrs
ss
and
dec
lahf
aam
jbe
push
fwait
adc
sub
roll
inc
hlt
lods
out
sub
mov
push
aam
adc
lcall
fnsave
or
mov
or
dec
dec
dec
adc
pop
dec
xor
dec
into
lods
adc
mov
fwait
push
or
shlb
mov
push
or
push
jo
jne
push
sub
rcr
mov
push
lcall
sbb
fldenv
pop
push
cmp
xor
lahf
shrl
add
adc
mov
cmpsl
popf
cltd
adc
xchg
mov
out
add
jecxz
cmp
int
ffreep
push
bound
inc
enter
push
jne
and
xchg
jg
mov
mov
xchg
and
es
mov
mov
mov
sub
int
cmp
pop
inc
or
inc
enter
push
jg
pop
pop
fcoms
push
adc
paddd
addl
lods
lea
mov
xchg
out
roll
ficoms
xchg
mov
or
fdivs
pop
mov
add
sbb
adc
sbb
push
rdtsc
lcall
sbb
adc
adc
mov
out
jns
les
push
mov
mov
cmp
outsb
lods
pop
mov
or
xchg
inc
and
add
jno
call
dec
in
popa
mov
jnp
out
ds
fsubr
cmp
sbb
jp
push
ret
sbb
fsts
test
mov
loop
mov
fwait
dec
xchg
std
jmp
push
mov
f2xm1
mov
dec
jns
fsubs
xor
push
and
xor
dec
mov
jg
xchg
add
and
aad
shll
xchg
or
and
das
and
inc
es
lahf
js
sub
in
fidivrs
nop
mov
outsl
leave
or
xchg
pop
aad
and
std
xor
stc
pop
rcrb
popf
inc
ljmp
shrl
add
dec
flds
adc
or
mov
xor
ss
inc
add
call
dec
pop
xchg
testb
cmc
loope
lcall
and
mov
cmp
fsubrs
in
mov
popf
aaa
scas
push
mov
dec
add
push
mov
test
loop
fmuls
fadds
shrl
test
mov
xchg
xor
xchg
jnp
push
jne
mov
jne
xor
jle
cmp
add
ffree
clc
rcrb
or
jbe
sbb
fdivs
mov
mov
into
scas
and
rorb
xor
mov
mov
push
leave
outsl
repz
jge
xchg
aam
sub
fwait
into
dec
push
dec
jne
mov
notl
aas
pop
mov
cmp
shlb
sahf
repnz
std
jae
int
jno
mov
push
sbb
jp
leave
fisubl
push
sub
mov
add
mov
imul
andb
cmpl
aad
lods
mov
or
or
cmp
jno
push
mov
or
or
sti
xchg
inc
rcll
and
cmp
push
adc
imul
shrb
lret
mov
sbb
mov
xchg
dec
xor
adc
mov
lock
pop
or
adc
push
jmp
dec
adc
cmpsb
mov
out
ficompl
mov
ret
iret
cwtl
pop
adc
stos
fadds
dec
scas
push
pop
ss
ret
push
mov
cmp
scas
adc
aas
and
inc
aas
divb
scas
subl
push
nop
neg
scas
pcmpgtw
adc
dec
rorl
mov
lock
shll
aam
dec
xor
jecxz
pop
sbb
pop
testb
add
pop
jg
mov
jo
adcb
adc
out
sub
xchg
jns
jecxz
sahf
jg
cmp
mov
jb
pop
ret
leave
dec
cltd
push
popa
andb
loope
push
pushf
sahf
arpl
xchg
das
adc
or
xchg
data16
sahf
adcl
ret
dec
int
movsl
inc
orl
inc
cmp
imulb
push
add
dec
mov
sahf
push
adc
pushf
repz
xor
xchg
dec
dec
or
jne
push
mov
adc
inc
pop
scas
sbb
adc
mov
in
lds
mov
xor
or
ficomps
xor
scas
fprem1
mov
cmc
std
outsl
dec
sbb
lahf
inc
lods
cli
mov
dec
and
decl
push
inc
gs
push
jmp
xchg
sub
repz
rcr
or
cmp
adc
mov
adc
cmc
rcl
sbb
pop
mov
fcmovbe
sarl
nop
mov
cli
call
rorl
jno
mov
das
mov
nop
pop
cmp
mov
or
add
rol
mov
inc
or
dec
push
jne
leave
out
fisubrl
mov
mov
xchg
pop
and
fistpl
inc
sub
sub
cmp
fcmovnb
cwtl
in
and
dec
je
cmp
dec
mov
pop
cmpl
jge
push
push
cmp
ljmp
imul
adc
idivb
lcall
cwtl
and
testl
inc
sti
dec
jno
aad
dec
ljmp
adc
addr16
or
js
test
sahf
adc
fcomps
cld
testl
sub
popf
lret
fsubrs
icebp
push
mov
jb
icebp
push
and
mov
es
in
jno
adc
pop
out
dec
sbb
xchg
sub
bound
adc
stos
es
aad
cli
int3
mov
mov
cmpsl
shll
adc
pop
adc
xchg
imul
jg
push
sahf
cmpsb
jbe
sti
push
lods
clc
out
cmpsb
jp
loop
call
bound
push
loope
ror
aam
mov
ds
mov
cs
mov
or
mov
xchg
and
push
xchg
jbe
test
adc
cmc
sarb
sahf
mov
sbb
aad
xor
push
ficomps
jb
dec
mov
fidivrl
ret
test
in
and
stos
fadd
adc
jle
push
dec
ljmp
dec
pushw
cmp
call
adc
mov
cmp
inc
jno
ret
adc
adc
in
mov
lods
or
adc
and
cli
mov
add
in
and
pop
test
pop
jmp
push
pop
push
jnp
popl
xor
xchg
cmpsb
add
ss
imul
mov
dec
xor
loop
clc
ja
add
negb
and
and
adc
inc
jae
xor
or
fdivl
xchg
lcall
dec
shll
fidivs
imul
enter
ljmp
dec
shl
sub
cltd
rcrb
daa
dec
cmc
cmpsb
push
jge
sbb
dec
in
fst
inc
stos
ret
pop
addr16
ficoms
inc
sarb
sbb
loop
or
sub
iret
xlat
pop
rclb
lret
aad
xchg
push
shlb
pop
dec
and
outsl
mov
iret
roll
mov
hlt
fdiv
push
bound
fidivrs
cmpsb
and
cwtl
mov
or
xlat
sbb
sbb
std
mov
lock
icebp
cmpsl
lahf
cmp
mov
mov
test
icebp
adcl
add
xchg
les
pushf
in
add
or
lds
ja
leave
mov
outsl
mov
mov
add
adc
mov
mov
cwtl
pop
cwtl
mov
add
and
mov
push
push
sub
pop
add
mov
fnstenv
adc
outsl
stos
xchg
and
or
sbb
cmp
insb
push
pushf
ds
repz
fsts
lods
loope
cmp
inc
ja
rcll
xor
pop
shll
das
jbe
xor
xlat
fiaddl
xor
ss
bound
icebp
cmpsb
ss
dec
ror
mov
in
push
sti
sahf
xchg
cmc
scas
pop
jb
cli
ror
and
mov
adc
insl
fwait
inc
pop
and
dec
cmpl
rcrl
jmp
adc
or
outsl
sarb
aad
pop
ja
sub
sub
shll
pop
lods
jbe
mov
push
dec
mov
in
stos
inc
fstps
xor
ljmp
and
adc
push
lret
dec
lcall
pop
add
pop
insb
bound
dec
loope
fldl
mov
stos
pop
out
fneni(8087
cmp
mov
xchg
xchg
test
sub
lds
loop
fs
icebp
xchg
jo
leave
push
fs
test
test
and
daa
add
aad
repz
jo
jbe
adc
hlt
bound
aam
and
pop
xor
in
cmp
aad
in
fidivs
sti
jb
in
mov
mov
sbb
int3
sar
inc
or
loope
push
or
cmp
in
jge
dec
sub
mov
pop
leave
or
icebp
sub
push
ljmp
mov
adc
xlat
std
jnp,pn
pop
adc
out
sbb
push
mov
jmp
repz
push
pop
dec
cld
sbb
sarl
enter
xor
popa
idiv
aad
lods
notb
shlb
fdivl
mov
xchg
enter
aam
dec
int
pop
aaa
call
sub
in
inc
mov
imul
sbb
cmp
mov
adc
dec
mov
arpl
jge
push
test
pushf
lods
mov
mov
or
jmp
and
scas
icebp
jb
jne
mov
shll
jne
mulb
stos
pop
jge
int
and
add
xchg
mov
cmc
mov
fcompl
mov
xchg
jbe
push
dec
es
fdivrp
push
das
mov
sbb
mov
push
xchg
push
int3
imul
xchg
test
push
fimull
fisubrl
sub
notb
dec
sarb
xchg
imul
pop
cmc
ficoms
or
mov
insb
push
ljmp
cs
pop
inc
jae
xlat
jmp
pop
loopne
push
ds
iret
repz
movsl
add
aad
add
mov
sahf
jnp
leave
mov
repnz
fistl
and
sbb
fcomps
loopne
clc
fs
mov
loope
call
movsl
cmpsl
sbb
push
xchg
and
dec
cmp
xor
insl
cli
and
jne
inc
imul
push
je
mov
sbb
int
mov
int
and
xor
dec
fisubs
loope
addr16
mov
jge
int
sahf
and
mov
jbe
stos
aas
ret
jns
push
js
loop
sahf
ror
sarl
mov
mov
sub
and
ret
sub
or
sarl
sub
leave
pop
cwtl
mov
pop
sub
sahf
push
dec
push
int3
cld
icebp
jg
aas
push
or
jmp
mov
rcrb
xlat
pop
in
push
push
and
sarl
jecxz
adc
repz
xor
add
push
push
lock
icebp
or
lret
fst
repz
and
xor
mov
and
in
pop
lret
cmp
pop
loope
cmp
add
mov
imul
xchg
mov
dec
push
aad
xchg
adc
inc
pop
sbb
rcrl
fimuls
jge
aad
sub
fsubs
xchg
jmp
push
inc
in
jg
dec
ret
pop
mov
arpl
lds
cmp
fcomp
sahf
int
xchg
rorl
mov
sub
add
add
adc
adc
rcrl
or
cmp
mov
adc
int3
pusha
mov
xlat
das
xor
jp
push
movsl
inc
push
jbe
rorl
adc
xor
push
into
repz
mov
add
outsb
fnsave
jno
int
push
mov
push
sarl
in
rcrl
inc
xchg
shl
stc
ljmp
xchg
xchg
mov
xor
inc
loope
cmc
xchg
das
jns
jno
rorl
cld
faddl
and
rorl
dec
outsb
jbe
bound
lods
jge
xorb
scas
loop
dec
xor
push
xchg
push
out
sarl
jb
jne
adc
ljmp
adc
push
inc
lcall
mov
mov
and
push
testb
or
jmp
push
mov
inc
mov
xchg
push
mov
dec
mov
test
cmp
cmp
mov
dec
fists
inc
fisubl
fadd
shl
aad
mov
push
adc
jns
ljmp
cli
fcmovbe
enter
dec
cmp
xor
shll
ss
cli
scas
cld
sub
or
mov
dec
jae
dec
sti
inc
test
sbb
pop
xchg
pop
sahf
push
lds
rcr
jp
mov
mov
jle
sub
jle
movsl
test
cltd
movsl
cwtl
iret
repnz
lahf
lret
cmp
cld
cmc
iret
cmp
inc
lret
push
xchg
sub
push
pop
adc
xlat
out
stos
xchg
fdivrs
push
push
xchg
dec
fidivrl
int3
jne
cmp
enter
pop
mov
dec
stos
fidivl
in
mov
or
mov
mov
sbb
repnz
push
adc
pop
mov
xchg
push
fisubrl
sub
mov
sub
leave
insl
and
xor
insl
int3
popl
fs
stc
stos
fisubrs
push
out
hlt
loope
stos
pop
fistpl
fiaddl
sti
jle
dec
adc
jnp
mov
push
pop
fadd
sbb
inc
jnp
mov
out
call
lea
outsl
stc
xchg
pop
out
or
out
insl
fistpl
pushf
mov
insl
and
jp
insl
shll
icebp
roll
int
mov
lcall
ficoml
adc
fidivrl
adc
mov
enter
movsl
mov
push
push
outsb
ret
lock
enter
mov
jbe
xor
pop
adc
inc
mov
push
pop
call
sub
xor
mov
pop
es
call
sub
call
jae
jne
clc
pop
scas
adc
dec
enter
fists
lahf
shlb
add
loope
aas
cmp
enter
fcoms
call
fdivs
pop
push
sub
lea
cmp
dec
fcomps
pop
sarb
xor
out
lods
sar
in
dec
mov
push
ret
push
and
mov
lods
mov
imul
push
bound
mov
xchg
les
push
rcll
data16
jp
mov
cwtl
repz
loope,pt
jb
cmp
in
loopne
imul
pop
cmp
sub
cmc
popl
cld
adc
lods
loopne
jl
adc
aad
sub
cmp
adc
cmc
lcall
xchg
cmp
loop
push
clc
cmpsl
ljmp
fstpl
jmp
add
pop
or
lea
cs
fsin
cmpsb
sbb
int
push
mov
push
mov
shl
or
xor
xor
rcr
lock
cli
pop
push
xlat
dec
mov
pop
loope
lock
pop
mov
lock
cmp
add
lock
fnstenv
push
dec
sarb
mov
cli
adc
mov
xchg
scas
aaa
lock
fstps
test
mov
cmp
pop
cmp
lock
inc
cs
cmp
mov
outsl
loope
and
push
out
push
jp
jp
dec
or
aam
inc
mov
cwtl
sub
cs
xchg
adc
push
push
mov
adc
cmp
jecxz
pop
push
loopne
scas
mov
sarb
fstpl
push
push
ja
mov
aad
push
pop
aad
daa
inc
cmc
scas
mov
cmp
stc
and
pop
enter
aad
push
sbb
out
leave
rcr
or
mov
mov
stc
stos
repnz
je
adc
adc
xchg
ficoms
movl
pusha
test
les
dec
mov
dec
sub
test
aam
aas
aam
jns
fmuls
fcmovnbe
scas
fwait
cmp
xlat
repnz
sub
jg
in
add
fisttpll
fdivs
ljmp
shrl
jno
dec
clflush
cmp
cmp
or
push
sub
sbb
pop
jne
mov
lock
xchg
push
lds
xlat
jl
pop
lds
jns
int
adc
dec
scas
scas
lret
movsl
dec
push
mov
push
push
pushf
jne
jnp
cmp
leave
mov
lret
int3
test
scas
ret
xchg
pop
cmp
adc
shlb
leave
testl
dec
adc
int3
mov
jns
xchg
mov
push
xor
bound
pop
fcoms
and
nop
or
mov
pop
sbb
inc
pop
add
push
mov
xor
fdivrs
mov
push
dec
pop
test
call
mov
and
cwtl
int3
arpl
cmc
adc
inc
jo
in
xchg
push
pop
int
inc
jg
pop
add
subb
roll
lods
lret
mov
xor
mov
fcom
stc
js
mov
fwait
dec
mov
mov
push
lahf
js
pusha
mov
hlt
inc
dec
orb
push
jge
cltd
into
push
mov
xor
add
and
and
in
aad
push
fldenvs
and
call
shlb
rcll
test
lea
fdivs
rorl
push
push
into
adc
imul
shll
push
jl
roll
in
out
andb
mov
and
es
movsl
rorb
jb
loope
lods
sarl
add
imul
lea
mov
fadds
decl
pop
pop
jns
andl
daa
stos
aaa
lahf
aad
and
xchg
int
push
aad
pop
orl
pop
push
pop
cmp
xchg
mov
adc
out
fnstsw
and
int
dec
mov
bnd
xchg
pushf
push
jae
les
xor
add
cmp
ret
sti
rcr
bnd
xor
cmp
cmp
es
icebp
xor
sub
sub
inc
ljmp
xor
fnstenv
mov
fsub
push
dec
dec
jp
jecxz
flds
imul
repnz
xchg
xor
cli
mov
or
mov
notb
fwait
dec
xchg
out
enter
rorl
inc
lcall
das
dec
xchg
cwtl
mov
stos
inc
adcl
test
ja
inc
push
sub
jg
add
push
dec
stos
cs
lds
loope
mov
jo
pop
mov
repnz
inc
stc
mov
jno
adc
pop
fwait
inc
shr
out
out
push
cltd
xor
test
mov
out
mov
lret
mov
xlat
pop
push
call
push
std
sub
loopne
filds
adc
cmpl
adc
adcb
fiadds
dec
mov
ljmp
xchg
inc
stc
into
mov
jg
jae
sub
add
mov
jne
push
dec
in
inc
cmpsb
mov
adc
push
dec
jo
jbe
push
aas
cmp
pop
ds
stos
mov
jnp
add
andb
lcall
aad
inc
mov
outsl
mov
push
push
xchg
and
adc
lcall
dec
testb
pop
mov
ret
cwtl
jnp
lahf
push
inc
neg
lahf
rcl
jne
xlat
movsl
dec
mov
inc
lcall
adc
loop
push
push
inc
jmp
or
mov
rcrl
pop
and
inc
sbb
xor
data16
notb
inc
pop
mov
sbb
mov
xor
pop
jnp
int
ficomps
sub
popa
test
xchg
add
pop
stos
aaa
fisubrl
pushl
jbe
fisubs
add
por
sahf
sbb
popa
xor
mov
xlat
orl
ss
push
xlat
dec
pop
repz
inc
lret
xchg
icebp
cmp
pop
leave
imul
mov
out
loope
sub
stos
jmp
notl
out
into
movsl
xor
ss
hlt
popa
jecxz
push
js
shll
add
dec
sub
inc
cmpsb
xchg
mov
xchg
xchg
rcl
push
fstps
and
pop
xor
mov
mov
sahf
jle
and
aad
loop
inc
das
das
mov
push
nop
lock
rcll
imul
ss
xlat
sbb
ret
xor
sahf
xchg
inc
xchg
or
cmc
fldcw
mov
lds
imul
lods
cmp
adc
out
popl
scas
and
add
jmp
or
sbb
jle
leave
xchg
into
cltd
shl
xor
loopne
mov
push
sbb
lahf
lret
or
pop
ljmp
mov
or
outsb
xchg
in
cs
nop
loopne
dec
rorb
idivb
inc
and
cltd
mov
mov
and
jno
rorl
test
call
push
cmp
mov
je
outsb
inc
push
insb
ds
lds
xchg
pushf
push
loope
out
aad
push
sar
insb
add
pop
decb
divl
mov
sarb
imul
jnp
orl
int3
mov
pop
sbb
lcall
stos
loope
mov
add
mov
cmp
pavgb
xchg
pop
lcall
ja
mov
xchg
pop
movsl
jae
xchg
adc
into
rcrl
cmpsb
mov
clc
mov
dec
outsb
lock
pop
insb
dec
stos
mov
sub
inc
dec
dec
cmp
xchg
mov
popf
repz
es
stos
push
jmp
pop
mov
jnp
mov
mov
mov
in
ret
dec
test
or
data16
pop
xchg
dec
stos
mov
push
xor
mov
push
rcrb
pop
fcoms
clc
dec
rcrb
sub
mov
cs
jno
dec
scas
cmp
cs
rclb
pop
lods
mov
out
dec
loop
pusha
xor
imul
hlt
pop
mov
gs
sbb
imul
xchg
inc
mov
mov
pop
lds
dec
mov
pop
in
or
add
test
pop
and
or
outsb
popf
aad
aaa
sti
cli
sbb
pop
cmp
pop
mov
mov
gs
in
pop
testb
and
mov
xchg
cwtl
fcomi
pop
inc
repz
rol
lahf
out
andl
and
test
mov
and
or
and
sub
or
nop
push
ss
cmp
lock
or
xor
mov
or
xchg
mov
adc
clc
xor
mov
mov
nop
jle
mov
mov
mov
cmpsl
jp
lcall
in
enter
neg
dec
jb
add
dec
adc
mov
repnz
test
je
mov
das
sbb
inc
in
or
mov
ds
cmp
das
cmpb
pop
mov
ljmp
xor
fldpi
stos
cwtl
adc
push
xchg
clc
js
mov
jmp
jmp
jmp
sub
pop
sarb
and
ret
sti
addr16
dec
stos
push
test
pop
xor
loope
fucomip
rclb
rorl
test
enter
enter
xor
xchg
shrl
xor
xor
jle
xchg
dec
je
mov
cli
add
pop
mov
xor
mov
adc
sub
sbb
or
cltd
mov
int
orl
or
xchg
jbe
dec
push
imul
jbe
push
cmp
mov
cmp
and
cmp
mov
scas
sbb
pop
xor
mov
push
lods
adc
ret
or
adc
repnz
cmp
or
loope
xor
push
xor
int
call
pusha
xlat
insb
mov
fstp
push
mov
js
sub
arpl
aad
test
subb
fdivl
scas
cmp
mov
jbe
push
int
lods
out
push
sti
pmullw
cli
test
pop
sbb
arpl
dec
js
stc
fcmovne
aad
push
loope
fiadds
and
push
add
cwtl
fdivp
xchg
sub
and
push
and
sub
les
fisttpll
dec
mov
into
imul
push
push
arpl
inc
push
push
call
adc
mov
sbb
cmpsl
fidivl
out
mov
push
lret
mov
xlat
dec
push
or
adc
push
movd
ss
lret
dec
inc
or
mov
outsb
adc
dec
jbe
aam
int3
xchg
enter
aad
xlat
inc
fcoms
or
pop
push
mov
xlat
inc
btr
js
jle
rcll
leave
jne
push
mov
int
push
push
call
push
add
ja
fwait
lods
push
aad
dec
mov
xchg
cli
notb
das
adc
mov
call
hlt
lret
repz
add
rcr
sahf
repnz
out
test
dec
mov
cltd
push
mov
mov
or
mov
ja
sbb
out
mov
adc
cmpsl
mov
push
xchg
out
adc
mov
push
testl
es
dec
loope
mov
in
xchg
fdivl
jge
dec
jp
mov
mov
icebp
xchg
lahf
out
ret
inc
int
dec
lret
adc
mov
gs
jmp
cmpsb
sti
or
pop
and
int
ret
mov
gs
mov
add
xchg
dec
and
xor
call
jge
call
adc
mov
gs
xchg
mov
call
mov
es
xchg
sbb
sub
ljmp
mov
out
dec
push
movsb
test
dec
fsts
and
ljmp
add
xor
xor
lds
sub
loop
adc
bound
out
xchg
icebp
shl
adc
push
inc
dec
sub
out
add
push
adc
xor
or
cwtl
cmp
jno
xor
mov
xchg
lea
fisubrs
and
ds
int
pop
push
ds
dec
es
adc
pop
push
and
xchg
test
jb
push
aad
std
loop
jne
cli
lret
sub
push
movsl
jg
cmpb
cmp
cmc
cmp
jnp
jae
sub
adc
ret
jbe
fists
adc
or
js
xor
ret
mov
xchg
shll
mov
inc
js
pop
push
xchg
xor
mov
sar
imul
or
imul
fcom
xor
dec
or
stos
mov
mov
sbb
mov
out
out
inc
add
xor
push
test
out
lret
call
out
mov
push
push
arpl
in
test
fs
mov
pushf
dec
test
or
lea
push
push
mov
out
sub
adc
and
mov
adc
lods
sbb
and
bound
int3
mov
shll
push
sbb
enter
cmp
cli
jl
mov
or
fnop
cmp
dec
dec
mov
xor
ret
out
jge
jne
fbstp
cltd
icebp
callw
data16
push
les
adc
cmc
push
sub
icebp
std
mov
std
or
roll
sbb
xchg
pop
fs
out
mov
outsb
in
mov
in
pop
aaa
xchg
mov
insl
fisubl
and
imul
ficoml
test
dec
adc
xchg
clc
adc
lret
xchg
sub
cmp
aaa
xchg
rorl
adc
sarb
push
or
andl
aad
fbstp
pop
and
xor
dec
into
ret
inc
out
fwait
jg
and
mov
in
aam
adc
fldcw
in
dec
xchg
adc
aad
cld
push
xchg
push
inc
in
mov
push
and
mov
push
xchg
mov
fisttpl
out
call
dec
push
and
bound
and
xor
xchg
push
jg
int
leave
lret
add
or
push
mov
sbb
stc
icebp
push
mov
push
push
or
jno
push
in
cmc
insl
fs
enter
sub
pop
push
or
adc
add
aaa
cmp
pop
das
dec
xchg
stos
adc
out
outsl
inc
sti
push
pop
push
inc
lahf
jmp
and
adcb
sahf
lea
ffree
cmp
xchg
xchg
mov
push
fld
push
and
push
jne
dec
push
mov
call
cmpsl
std
add
mov
bound
call
in
lcall
pop
push
jl
inc
aam
add
in
mov
sub
push
xchg
mov
stos
mov
pop
sahf
shr
jge
cwtl
push
push
mov
sbb
push
or
test
push
in
loope
mov
fucom
data16
push
out
imul
pop
pop
cmp
mov
in
sub
popa
mov
xorb
inc
loope
push
dec
push
rcrb
xlat
jb
push
popf
jecxz
lods
loope
stos
mov
dec
fsubrl
enter
push
pop
outsl
xchg
dec
sahf
push
pushf
push
movzbl
xchg
mov
mov
mov
leave
test
xchg
popa
shr
fst
in
or
xchg
movsl
leave
mov
mov
mov
push
arpl
dec
daa
test
ss
div
and
mov
dec
xchg
ja
repnz
fildll
fidivrs
xor
inc
in
push
fldt
inc
outsb
add
insl
and
outsl
and
add
pmullw
mov
stos
scas
push
insl
loop
mov
enter
lret
dec
adc
pop
push
icebp
inc
cmpsb
and
or
xchg
ds
mov
xchg
iret
push
add
scas
hlt
or
lods
nop
mov
push
pop
lods
dec
and
stos
das
pop
push
loope
adc
out
icebp
loop
cltd
iret
sbb
push
repnz
mov
dec
add
push
sbb
dec
loope
push
mov
cli
push
imul
cmpsb
es
push
lret
pop
adc
jns
pcmpgtb
and
push
or
jmp
scas
aad
cld
xor
fimuls
mov
loop
test
jb
ljmp
mov
cmpb
add
push
and
sub
out
adc
stos
mov
inc
dec
pusha
xchg
imul
sbb
stos
mov
mov
dec
je
popa
mov
xor
mov
add
add
mov
bound
sub
gs
sbb
aaa
mov
jnp
push
in
adc
les
push
adc
imul
mov
sub
aam
es
dec
sub
jmp
lods
jno
dec
mov
mov
test
push
or
mov
mov
fstl
int
addb
xchg
popf
aam
repnz
cmpsb
popf
xchg
lds
xchg
add
hlt
mov
cmp
scas
sti
jg
cmpsb
pop
fiaddl
jl
bound
push
ljmp
add
ret
and
mov
cwtl
call
lahf
mov
cmp
les
jge
xor
icebp
xor
inc
adc
icebp
mov
cmp
xchg
pop
push
sahf
movsl
lret
cs
pusha
popf
cs
idivb
rcrl
jle
loope
pop
je
fistpl
mov
shll
cmp
cld
rol
mov
pop
fistl
and
pop
movsl
inc
call
dec
add
jo
call
cli
and
inc
icebp
mov
mov
or
push
xor
aas
stc
jmp
es
adc
pop
cwtl
pop
nop
mov
pop
cmpsb
loope
ret
mov
bound
cmp
nop
add
or
sti
in
mov
enter
loopne
dec
stos
and
mov
and
jp
inc
adc
xchg
sub
cmc
jno
call
addb
mov
dec
pop
inc
outsb
mov
hlt
ret
xor
imul
xchg
push
or
and
movsl
adc
call
or
scas
out
insl
xor
mov
and
dec
or
sbb
push
test
cli
movsb
rorb
adc
call
push
repz
outsb
ret
cld
or
ds
push
rcrl
out
inc
pop
call
and
popa
in
mov
push
outsb
lret
sarl
rolb
outsb
xor
stc
mov
scas
push
scas
sub
ja
mov
stos
rclb
dec
inc
mov
inc
es
push
jno
cwtl
adc
shll
mov
imul
mov
and
hlt
enter
dec
pop
pop
jns
clc
inc
ljmp
xor
adc
xchg
xchg
sti
loope
leave
loope
stos
jp
outsl
xchg
sub
pusha
movsl
out
sbb
in
outsb
sbb
jae
popa
mov
aad
aas
pop
js
sub
dec
mov
add
mov
repz
push
xchg
sub
mov
aad
fwait
sub
jg
mov
mov
push
fadds
and
fsts
call
imul
aad
xchg
fnstcw
xchg
push
adc
jnp
ss
pop
sahf
in
mov
adc
into
jne
push
or
shlb
test
or
pop
push
fmuls
gs
mov
frstor
mov
push
xor
aad
mov
push
mov
popa
pop
pop
stos
mov
sbb
push
and
mov
movsl
clc
aad
adc
div
xchg
inc
int
xchg
aam
pop
dec
dec
dec
cmp
jo
add
mov
movsb
mov
add
aad
je
sub
ja
in
mov
mov
movsl
call
shr
fdivs
mov
jecxz
fidivs
add
in
dec
ss
gs
lods
cmp
push
jnp
xor
es
roll
jl
adc
fadds
dec
rol
dec
add
push
add
loop
pop
idivb
xchg
adc
loop
jp
int3
mov
insl
sbb
ljmp
mov
push
push
rcrl
mov
fnstsw
jp
inc
sbb
rcrl
and
mov
js
pop
mov
xchg
mov
sbb
shll
mov
fisttps
sbb
orb
adc
sbb
aad
xchg
xchg
push
mov
aaa
jno
in
movsb
inc
sbb
testb
lcall
mov
mov
xor
ja
push
mov
dec
rcrl
hlt
push
fs
fldcw
jno
dec
sub
mov
cltd
inc
add
rorl
mov
inc
aad
ss
cmc
mov
adcb
call
xchg
icebp
add
or
inc
pop
lcall
jl
sub
out
pop
inc
pop
mov
mov
int
dec
and
mov
out
scas
pop
or
cltd
mov
lods
xchg
stc
mov
mov
xor
in
jl
js
adc
and
cli
pushf
add
aad
subb
mov
add
lcall
aas
inc
fsubrs
sub
fwait
add
js
xchg
sahf
push
adc
data16
jb
pop
and
outsl
mov
jmp
cs
int3
push
out
pop
inc
sbb
scas
test
mov
jg
ret
cmp
or
mov
sub
pop
dec
pop
push
and
add
pushf
adc
loop
clc
cmp
inc
test
adc
pop
repnz
shl
mov
add
in
cld
inc
out
inc
icebp
adc
dec
into
sahf
push
cli
fimuls
ds
dec
jmp
movsl
pop
adc
push
inc
mov
mov
and
mov
push
sbb
stos
and
push
decb
mov
adc
int3
mov
iret
fimuls
bound
ljmp
lods
cmp
inc
dec
icebp
lock
inc
fsub
cwtl
push
pop
fstpl
inc
dec
push
test
mov
sbb
push
sbb
bound
scas
inc
jg
dec
mov
or
loop
push
jns
mov
cmpsb
adc
in
imul
scas
outsl
inc
adc
mov
mov
mov
stos
leave
outsb
dec
xchg
call
imul
inc
imul
sahf
outsl
enter
dec
ss
in
insl
shlb
iret
pusha
jp
shl
jb
dec
into
shlb
xor
push
pushf
mov
repz
shrl
aad
push
fsubs
xor
test
mov
mov
jb
jge
jno
jbe
mov
inc
aam
xchg
xchg
sbb
inc
xor
pop
sahf
je
push
adc
rcrl
out
push
lds
cmp
and
jno
jae
cli
repnz
pop
bound
add
sub
cmpsb
push
ds
jns
aam
xchg
mov
dec
call
fwait
jecxz
icebp
rcl
push
ret
inc
fidivrs
rcr
inc
bound
xchg
pop
inc
pop
dec
cmp
adc
jo
in
adc
aaa
xchg
bound
sahf
add
sub
and
pop
mov
dec
lea
ds
aad
dec
sub
mov
pushf
aam
jb
xor
push
repnz
pop
orl
fldenv
bound
lret
insb
sahf
jo
dec
pop
push
jo
sbbb
ljmp
rol
fiaddl
adcl
or
mov
push
adc
rdpmc
aaa
cmp
xchg
sbb
cltd
add
push
fs
sub
outsl
dec
jl
lahf
and
pop
sarl
or
adc
ds
sub
aad
mov
push
add
stos
pop
add
xorl
push
xchg
js
rolb
pop
adc
push
fnstsw
jl
mov
dec
sbb
fs
cltd
sub
xchg
shll
or
mov
test
movsl
lret
xchg
push
and
cmp
pop
dec
pop
dec
mov
mov
jnp
shlb
pop
xchg
jecxz
or
scas
mov
pop
cwtl
sbb
sti
and
movsb
bound
xchg
es
push
xorl
mov
or
xchg
ret
dec
stos
stc
sbb
push
pop
sti
scas
xchg
push
and
cmp
mov
and
sarb
inc
jl
shll
or
fwait
push
jb
loope
xchg
les
mov
jg
sub
mov
lret
lods
out
jnp
xlat
mov
dec
inc
push
cmc
push
add
push
sub
pop
stos
sbb
lret
int3
jne
jmp
jae
add
stos
pop
ljmp
cmp
pop
mov
mov
mov
adc
sarl
bound
and
out
cmp
sbb
push
ljmp
dec
adc
adc
out
call
ss
push
mov
pop
gs
add
mov
sub
cmpsl
adc
push
fimuls
lods
dec
fdivrl
xor
xchg
jo
push
loop
jae
pop
push
sbb
pop
pop
stc
aam
sahf
pop
jae
inc
push
cltd
mov
mov
push
pmaxub
add
add
repnz
leave
add
pop
or
xchg
pop
loopne
dec
fwait
jp
dec
mov
inc
ss
and
inc
xor
inc
hlt
out
mov
insb
aaa
and
out
mov
mov
arpl
push
jb
push
dec
test
cmp
jae
mov
bound
jb
pusha
ljmp
dec
lret
pop
sti
jns
stos
dec
mov
cwtl
dec
mov
xchg
fcmovu
cwtl
stos
mov
sti
pop
adc
rcrb
popf
rcll
jecxz
adc
pop
push
xchg
and
sbb
push
ss
mov
das
mov
js
jl
outsl
xchg
mov
pop
stos
push
xchg
sub
fadds
xor
mov
xor
xorl
push
mov
aam
cltd
adc
cwtl
xor
adc
and
mov
hlt
push
sarl
jnp
xchg
andb
lret
xlat
sahf
test
cmpsl
fisubrl
stos
lcall
jg,pt
ds
xchg
cli
dec
cmpsl
mov
nop
adc
stc
std
cmp
inc
push
and
xchg
add
lods
xor
adc
or
out
or
inc
mov
outsb
bound
bound
jo
mov
dec
test
push
addl
popf
xchg
out
loop
in
cli
rorl
xchg
and
sub
push
ss
jno
aam
in
mov
sbb
push
xchg
cmp
mull
push
push
lcall
ja
mov
inc
pop
dec
cltd
cmp
data16
jae
mov
mov
scas
sarl
xchg
lret
je
sbb
addb
cmp
sbb
pop
cmc
push
xchg
mov
out
fs
movsl
sbb
out
jbe
dec
pusha
testl
aas
movb
dec
pop
jge
adc
mov
xor
push
popa
ds
sub
mov
mov
fcmovu
jecxz
sbb
push
mov
and
cltd
pop
aad
pop
dec
lods
push
scas
xchg
in
mov
sbb
or
outsl
and
adc
sub
mov
ds
mov
add
mov
lcall
and
xchg
cli
mov
xlat
fistl
push
lods
or
jae
pop
add
fbld
jle
ja
mov
push
mov
mov
enter
gs
push
dec
adc
add
push
movsl
int3
pop
push
sarb
lods
lds
lods
and
fdivrs
mov
mov
fmuls
mov
add
add
xor
stos
subl
cmp
adc
divl
popf
pop
inc
push
dec
dec
or
lea
sub
or
xor
into
aad
adc
loope
icebp
or
dec
cmp
sahf
jae
adc
ret
sahf
bound
pop
lret
add
ret
repnz
dec
sbb
testb
outsl
js
pop
xchg
imul
in
mov
mov
out
xor
aam
xor
int
push
inc
jl
fidivrs
imul
fcompl
rcrb
popa
xchg
mov
pop
dec
jmp
dec
into
sbb
dec
push
or
cltd
pop
dec
sbb
xor
mov
loope
dec
push
add
mov
js
push
push
mov
les
sti
mov
out
fcmovbe
push
mov
stc
inc
cmp
lds
fists
sahf
pop
xchg
repnz
popa
sarl
and
ljmp
pop
sub
ret
jno
pop
fsubrs
push
inc
lods
mov
add
in
stos
mov
sbb
out
mov
adc
adc
jp
or
mov
adc
mov
imul
inc
imul
pop
out
sarl
pop
xor
lahf
jno
or
xor
xchg
mov
dec
or
hlt
sahf
adc
mov
sbb
in
push
js
push
inc
xlat
leave
push
mov
das
dec
xlat
push
leave
fstp
arpl
loopne
or
pop
mov
movsl
sub
dec
sbb
std
push
addl
add
mov
and
cmpsl
out
inc
xor
or
sub
add
aad
pop
xor
cmp
scas
fcomps
push
dec
lods
in
inc
ds
adcl
test
lahf
jecxz
scas
push
sahf
push
data16
adc
adc
xchg
push
pop
add
jmp
cltd
cmp
push
adc
pop
and
xor
jns
pop
test
adc
fsubs
add
aad
lods
add
ret
mov
fisubrl
adcl
call
push
test
fsubs
es
add
test
jmp
xchg
jg
mov
jmp
into
sub
mov
push
cmp
lret
inc
add
mov
insl
lcall
mov
dec
dec
sbb
jnp
orb
cmp
push
lahf
adc
cs
pop
mov
inc
or
pop
mov
cld
push
lret
dec
mov
mov
test
cmc
adc
es
fisubl
sub
push
mov
dec
cltd
inc
push
sub
pusha
in
cwtl
pop
mov
xchg
cltd
inc
inc
or
and
vcvtsi2ss
sub
pop
sbb
sarb
ret
leave
ljmp
dec
aad
sub
enter
inc
mov
shr
movsl
lret
leave
stos
movsl
pop
dec
f2xm1
pop
cwtl
cs
sub
bound
xchg
outsl
mov
jmp
hlt
call
adc
pushf
xchg
imul
sub
add
sbbl
lods
adc
cmp
xchg
dec
notb
lds
imul
cmp
mov
push
jns
imul
push
jl
incb
in
div
jbe
jno
test
fmuls
cltd
je
std
sbb
ret
mov
xor
xchg
js
popf
xor
mov
fs
jl
dec
aaa
or
mov
inc
into
mov
in
jle
loopne
and
dec
lea
andnps
sub
fs
test
mov
mov
sub
repnz
vpsraw
shll
rorl
dec
inc
cmc
sbbl
mov
stc
imul
or
rcrl
aad
mov
inc
sahf
pop
adc
sub
lahf
push
rclb
cmpsb
dec
xchg
lahf
mov
cli
sbb
and
aad
je
aad
inc
push
shlb
aam
dec
jmp
mov
sarb
and
push
xor
pop
xchg
push
call
aam
dec
idivl
cwtl
aad
repnz
push
mov
pop
mov
ljmp
cmpsl
cs
dec
dec
xor
int
mov
jbe
fimuls
adc
mov
test
cld
les
push
data16
sbb
xor
and
push
notb
and
out
xor
dec
xor
sbb
push
pop
and
out
outsl
das
data16
sahf
add
test
daa
aad
call
push
jg
xor
int3
jns
inc
mov
fisubrs
jae
test
aaa
pusha
cmpsb
jecxz
mov
scas
xchg
xchg
into
mov
xor
and
and
jo
adc
roll
jg
push
push
fadds
hlt
sbb
sub
push
into
dec
imul
xlat
mov
dec
mov
sub
mov
aam
mov
leave
aam
js
pop
scas
adc
or
add
mov
lcall
xor
adc
fs
pop
add
jmp
pop
aas
aaa
mov
mov
or
dec
dec
std
pop
mov
nop
ss
mov
int
ret
or
into
nop
lods
push
sbb
leave
jae
rorl
or
mov
mov
dec
adc
or
lret
add
pop
std
rcrb
or
es
push
enter
adc
in
xchg
dec
dec
dec
ficoms
push
insb
fnstenv
jbe
scas
jno
push
into
push
insb
ficoml
jae
ds
cmpsb
loope
mov
bound
push
repnz
gs
dec
xchg
lret
int
push
fsubs
dec
jae
and
and
ficompl
push
inc
test
mov
scas
daa
sbbb
adcl
arpl
mov
shll
xchg
push
or
sbb
cwtl
or
xor
push
leave
or
pop
or
insl
lods
push
cvtpi2ps
xor
and
sahf
mov
mov
dec
popa
jo
jecxz
cwtl
mov
inc
pusha
and
shrb
dec
cmc
or
jnp
es
sahf
push
dec
repnz
xchg
or
adc
mov
xor
jl
push
shrb
jnp
clc
xchg
sbb
iret
pop
pop
testl
dec
adc
and
dec
sbb
jg
fwait
push
sahf
enter
inc
or
sub
jns
bound
scas
insb
out
or
mov
cmc
dec
xor
or
and
cmp
sbb
dec
sahf
movb
hlt
push
jns
outsb
dec
mov
or
jg
mov
jo
test
xchg
mov
call
sahf
test
rorl
loop
imul
adc
in
nop
add
xchg
sbb
mov
xor
push
popf
std
mov
push
dec
subl
mov
loope
inc
jmp
or
mov
loopne
and
movb
push
sub
lock
add
aam
push
pushf
or
dec
xor
jp
pop
lods
nop
pop
cmp
inc
sti
sub
add
xorb
cmp
xor
dec
sbb
adc
outsl
pop
pop
lods
xor
add
dec
sbb
movsl
add
ljmp
call
pop
pop
xchg
dec
xchg
xchg
xor
adc
stos
inc
inc
sub
jne
mov
fidivrl
cs
push
pop
pop
jecxz
add
mov
int
push
mov
lahf
repz
ljmp
push
shrb
repnz
jae
push
fldt
rcll
pop
cmpsl
jo
outsl
dec
mov
mov
loop
lods
lds
lock
or
rolb
and
adc
or
xchg
or
mov
cmp
mov
gs
rcll
jb
insb
mov
xchg
mov
fcmovb
xchg
inc
dec
cmc
movzwl
xchg
in
fldl
cmp
push
dec
in
lods
shufps
adc
and
xchg
mov
mov
jae
xchg
mov
adc
pop
jns
cwtl
jge
insb
mov
cmpsl
fdivl
cmp
mov
and
or
call
das
fimuls
xchg
mov
mov
mov
enter
rorb
push
cmp
dec
adc
hlt
cmp
mov
mov
or
push
cmp
jle
ret
cmp
xchg
cmp
repnz
dec
loop
mov
pop
ds
push
lods
cli
es
into
pop
sbb
mov
aad
pop
and
leave
ss
ja
scas
dec
push
mov
rcl
pop
ja
mov
and
ret
aam
xor
xor
rcll
inc
dec
lods
or
out
aas
fwait
push
pop
fmuls
fildll
sbb
lock
xchg
es
testb
aaa
dec
sahf
dec
fistps
pop
xchg
adc
xlat
dec
jle
imul
push
mov
js
dec
stc
pop
hlt
jecxz
push
jbe
and
dec
push
cwtl
mov
add
loop
outsl
mov
adc
cmpl
outsb
inc
mov
jb
jecxz
fimuls
jnp
insb
xor
cli
adc
ds
lds
notb
clc
push
mov
mov
in
xor
jb
adc
mov
repnz
dec
adc
pop
jmp
inc
mov
pop
lods
xchg
push
jg
pop
push
mov
adc
and
mulb
push
mov
outsl
stos
sbb
mov
push
sub
jae
hlt
xchg
movsl
inc
cmp
stc
sub
adc
jbe
jae
pop
xchg
inc
imull
cmc
in
data16
mov
mov
dec
insl
test
andb
sahf
adc
int
outsb
nop
mov
lods
push
cmp
out
pop
hlt
aaa
js
or
je
nop
pop
cmc
sahf
outsl
int
xchg
loope
push
and
insl
xchg
push
mov
and
pop
sub
sub
jno
rcll
nop
dec
jp
loop
dec
fs
out
lods
ja
cmpsb
push
sbb
ficoml
std
adc
mov
hlt
xor
fisttpl
mov
and
xchg
adc
mov
mov
fimull
adc
lret
jbe
sbb
cld
inc
mov
jae
jns
and
jle
add
adc
mov
int
push
mov
int
shll
and
add
inc
fmuls
in
xchg
outsl
cmpsl
push
jmp
or
xor
adc
xlat
in
dec
cmpsb
push
cli
push
pop
push
ss
push
mov
gs
inc
sbb
rolb
arpl
sub
or
mov
scas
lret
inc
add
cmp
sbbb
sahf
sub
mov
rcll
mov
mov
aad
bnd
sahf
test
insl
and
out
ds
fsub
sbb
int3
mov
or
aad
gs
addl
jns
inc
out
movb
pop
xchg
ja
sbb
lcall
pushf
sub
loope
or
pop
and
imul
insl
mov
add
fbstp
fwait
test
pop
gs
cli
cmp
cmpsl
sahf
jmp
xchg
outsl
xlat
sub
and
lods
leave
push
jo
cmp
cmp
imul
hlt
xchg
mov
mov
ja
xchg
push
push
ficoms
dec
inc
loop
movq
push
rcrl
inc
push
jae
jb
or
jmp
in
clc
add
ret
inc
push
or
push
mov
cmp
loopne
lds
mov
push
jbe
rclb
int3
and
ret
repnz
ja
leave
xchg
xchg
push
xchg
lret
xchg
push
call
leave
bound
adc
mov
out
sub
faddp
and
fldl
cmp
mov
mov
pop
inc
shrl
push
lret
pop
jnp
and
adc
xchg
frstor
cmp
mov
adc
mov
loopne
add
push
dec
lock
mov
stos
shr
lods
rcrb
push
decb
movsl
test
mov
enter
mov
fdivr
outsl
and
icebp
mov
stos
push
rclb
lahf
aad
rcrb
add
or
pop
inc
iret
jns
xor
adc
dec
inc
dec
repnz
add
sbb
fs
insb
xor
bound
cmp
xchg
xorl
mov
adc
inc
aas
adc
push
mov
push
xchg
push
xchg
xorb
and
sub
xchg
xchg
and
inc
push
mov
test
shrl
vmovddup
sbb
pop
cmp
std
icebp
mov
rol
add
call
jb
sub
cltd
jb
xor
sub
and
inc
cli
cmpsb
mov
xchg
fists
stos
xchg
mov
mov
rcll
inc
fisttpll
inc
idivb
pop
out
mov
rcl
pop
loope
cli
out
sbb
mov
aad
outsl
sbb
xor
push
dec
cltd
push
dec
fimull
mov
rorl
adc
loope
mov
fcoms
bound
test
jnp
push
sub
insb
es
adc
push
fidivrs
jl
bnd
inc
loop
ja
jne
push
push
push
jg
jae
test
push
inc
loope
mov
jbe
fcoml
dec
xchg
ljmp
xchg
repz
pop
cltd
arpl
mov
mov
pop
outsb
mov
adc
pushf
fnstsw
sbb
in
push
das
push
add
shl
push
int
pop
arpl
or
inc
shr
out
xor
pushw
ds
movsb
mov
mov
adc
and
sub
sbb
pop
add
in
cmpsl
dec
mov
ja
jne
jns
popf
clc
pushf
or
pop
mov
adc
push
pop
push
push
scas
push
rcrl
mov
fsub
jno
out
adc
dec
jno
cmp
adc
jo
imul
test
shrl
sbb
inc
out
xchg
xor
push
dec
and
or
jl
subl
adc
mov
out
inc
adc
lea
imul
popf
imul
and
pop
movb
in
aam
mov
clc
xchg
add
mov
ss
sbb
aam
dec
hlt
xchg
jg
sbb
add
and
sarl
inc
ficoms
dec
test
push
lods
in
int
in
ljmp
xlat
mov
xchg
rol
pop
dec
test
sbb
pop
dec
in
icebp
jnp
daa
xchg
inc
add
or
xchg
mov
rcr
mov
imul
lea
and
movsl
dec
ljmp
rorl
sahf
mov
mov
mov
mov
cmp
pop
into
jle
xchg
inc
dec
mov
shll
repnz
add
pusha
outsl
lods
push
xlat
pop
jae
adc
xor
popa
in
pop
in
pusha
outsb
daa
cmp
cmp
sbb
cmp
xor
pop
mov
call
aam
sbb
push
int3
scas
jbe
loop
xchg
mov
ss
stc
ficoml
mov
mov
xlat
add
lret
sub
out
dec
pop
loope
lods
pop
push
call
and
mov
and
out
mov
cs
xlat
loope
pop
adcb
mov
mov
in
iret
aam
push
inc
sahf
jno
lahf
mov
enter
sbb
mov
adc
mov
mov
lds
xchg
inc
jg
mov
int3
dec
sbb
push
pop
adc
mov
test
outsb
dec
je
jnp
je
or
sub
popa
jge
push
mov
mov
push
xorb
rorb
sar
mov
loopne
jl
pop
leave
dec
inc
ficoms
cltd
pop
lahf
repz
outsb
pop
mov
int
xchg
adc
or
lcall
mov
or
mov
cmpsl
sarl
nop
mov
aad
sub
inc
dec
xlat
inc
pushf
jno
inc
mov
out
mov
adc
mov
cmpsb
sub
std
jae
xor
push
into
dec
adc
sbb
int
lods
or
dec
iret
jae
es
add
shrl
jp
repz
mov
fisubs
adc
mov
sub
xor
aaa
scas
div
pop
out
loope
mov
rorl
pusha
popa
filds
mov
or
inc
in
rcr
pop
cwtl
repz
pop
fcom
mov
adc
sbb
cmp
cmp
lcall
xor
push
imul
dec
lea
dec
jb
aas
insl
fcom
cmp
mov
orb
fisubrs
xor
adc
fstps
loopne
ds
push
push
icebp
int3
out
xor
aad
fstpt
orl
aam
in
mov
or
rcll
mov
pop
push
rcll
ja
pop
mov
ja
repz
pushf
pusha
mov
bound
pop
xorb
push
add
mov
pop
mulb
push
mov
inc
jnp
fimuls
add
shl
pop
mov
mov
add
xchg
aam
ds
push
aam
mov
mov
cmp
jae
mov
inc
xor
js
nop
adc
fiadds
loope
in
and
jns
push
xchg
mov
je
mov
xor
dec
pop
cmp
stos
outsl
movb
xor
aad
dec
jecxz
mov
xor
lds
pop
aam
and
je
dec
movswl
hlt
ljmp
arpl
inc
subl
cmp
fsubs
adc
xor
sbb
lock
je
mov
xchg
scas
and
cltd
dec
or
mov
mov
adc
arpl
and
div
aaa
lds
lds
push
jnp
sti
push
sub
mov
repz
addr16
cwtl
xor
out
fwait
dec
out
shl
call
push
push
or
lds
rorl
in
push
pop
mov
sarl
call
or
mov
icebp
retw
mov
adc
rclb
ret
scas
arpl
push
jb
insl
mov
movl
mov
sbb
pop
xchg
xlat
cmp
sti
pop
or
pcmpgtw
out
jns
jnp
pop
shl
iret
test
fxch
stc
sbb
stos
in
and
dec
loope
stc
mov
or
pop
shrb
dec
push
dec
or
fs
data16
ljmp
es
mov
mov
cmp
repz
sub
fwait
sbbb
in
xor
aad
pop
rolb
loope
push
repnz
mov
outsb
jb
lcall
int3
xchg
dec
dec
xchg
add
jb
cmpsb
pop
icebp
ret
add
fwait
xchg
fstp
mov
arpl
insl
pop
or
xor
adc
jmp
push
and
clc
adc
sti
mov
jnp
lea
cmpsb
dec
imul
test
int3
int
addr16
lret
loopne
mov
or
adc
jb,pt
sti
jmp
fbld
shl
loop
aas
mulb
repz
es
add
push
cmpb
loope
push
pop
push
cltd
xor
add
inc
mov
xor
cmp
mov
rclb
lods
push
mov
fscale
xchg
push
leavew
into
je
sub
xor
aad
int
push
mov
ljmp
dec
xlat
insb
mov
mov
jns
or
cmp
cld
dec
xor
push
psrlw
aas
jb
xchg
pop
repnz
ds
lcall
test
adc
cmp
mov
fldl
adc
adc
adc
adc
shrl
cs
arpl
cmp
sbb
add
dec
dec
pop
push
mov
pop
orl
dec
jnp
push
iret
and
in
push
iret
jmp
mov
push
adc
cmp
insb
mov
push
es
bound
jbe
pushf
fsubl
mov
daa
out
push
rolb
das
shl
cmc
imul
and
cmp
les
jnp
xchg
cmp
jno
test
div
jnp
xor
leave
out
sbb
in
mov
add
mov
icebp
cmpl
lahf
ret
push
push
rol
test
adc
mov
in
push
mov
nop
clc
xorl
stos
push
lahf
loope
out
icebp
dec
sbb
fistpll
repnz
jae
and
fcomi
inc
pusha
lret
out
jae
std
add
push
aad
dec
push
popf
xchg
dec
test
call
adc
movaps
fimull
cmp
dec
mov
cmpb
inc
out
movsl
cli
xor
sbb
rclb
addl
iret
or
enter
ds
mov
xchg
ds
jbe
push
push
cvtps2pd
outsb
adc
in
mov
aas
xchg
and
xchg
ds
inc
sub
sbb
push
push
inc
ljmp
icebp
ljmp
add
xor
sub
scas
push
jl
stos
lahf
dec
sarl
fdivrs
xchg
and
pop
lcall
pop
pop
dec
arpl
or
push
call
dec
cs
out
pop
enter
loopne
inc
aaa
ss
jnp
int
or
es
jae
and
imul
mov
gs
and
cmc
jbe
pop
mov
pop
dec
inc
mov
push
adc
outsb
push
daa
pop
cmp
adc
or
jbe
adc
lods
mov
ss
jbe
mov
dec
fcmovbe
or
inc
icebp
pop
cmp
mov
xor
loop
mov
aad
sbb
cmc
mov
dec
or
cmc
idivb
push
mov
jmp
arpl
notb
clc
jg
repz
xor
mov
scas
push
notb
popa
lcall
mov
rcrb
pop
cmc
mov
adc
ret
cli
pop
in
sarb
js
inc
mov
test
jp
and
pop
mov
out
and
addb
in
add
bound
dec
test
pop
sbbl
jae
push
lock
push
mov
cs
rcl
bnd
xor
ret
sub
push
imul
test
aad
push
js
mov
shrb
pop
insb
dec
xorb
stc
push
cmc
lcall
and
outsl
push
inc
fsts
push
cmp
nop
lods
insb
dec
mov
mov
cwtl
mov
inc
rdpmc
fisubrs
mov
xor
out
adc
js
mov
icebp
in
out
adc
enter
mov
push
mov
ljmp
push
xchg
nop
cld
push
das
and
repnz
outsb
mov
push
pop
test
sbbl
scas
rcll
mov
mull
les
movlps
xchg
sub
mov
in
jle
mov
xchg
iret
lcall
int3
xor
pusha
shlb
rorb
into
repnz
inc
popf
xchg
out
pop
cmpl
pusha
push
mov
pop
and
stos
fldt
pop
lds
cmpsl
xor
mov
insl
xor
adc
add
cmpl
cli
rclb
xchg
cmpsl
addb
ja
adc
push
loop
fdivs
subb
sbb
push
sub
push
int3
cli
loop
out
lds
int3
push
xchg
repnz
jge
xchg
icebp
xor
lods
repnz
cwtl
mov
sbb
imul
xchg
movsl
sub
mov
ljmp
pushf
test
cmp
pop
mov
mov
sub
xchg
shrl
rorl
shr
jmp
inc
or
aaa
inc
lret
jecxz
rorl
test
jns
pop
pop
subl
push
push
ljmp
sub
lret
pop
ss
jl
adc
dec
mov
gs
push
adcb
notb
iret
fcmovbe
fsubr
adc
push
xchg
stos
dec
sbb
aam
push
cmp
aam
rcl
xor
pop
inc
adc
movl
loopne
push
ja
push
mov
push
ja
mov
push
shrb
inc
adc
push
or
stos
pop
test
push
pop
mov
loopne
mov
loope
pop
nop
cmp
dec
andl
inc
mov
mov
pusha
xchg
mov
aam
add
mov
and
mov
mov
lods
jl
aam
fisubs
and
imul
mov
dec
shll
int
inc
dec
jb
push
pop
cmp
das
mov
adc
sub
in
dec
aaa
jmp
dec
in
sub
stos
test
in
dec
sbb
js
ja
int3
fdivs
mov
btr
pop
xchg
pop
xchg
pop
adc
lods
lods
bnd
dec
fsub
mov
ret
push
mov
adc
shr
mull
or
dec
or
push
push
iret
loope
adcl
cwtl
push
push
popa
loope
loopne
aad
xchg
adc
push
adc
add
mov
loop
loopne
push
add
in
xchg
and
mov
xchg
test
pop
notb
xchg
lretw
outsb
xchg
mov
stc
cld
loope
stos
insl
aam
test
mov
inc
mov
and
ss
add
cmp
xor
fisubrl
js
outsb
rcll
lret
xor
jecxz
xor
in
sbb
pop
outsl
mov
and
xchg
fistps
lcall
sbb
sub
add
mov
cmp
ljmp
xchg
test
sbbl
out
mov
cwtl
mov
pusha
aad
icebp
mov
jae
test
inc
mov
sbb
outsb
test
les
cmp
push
and
in
mov
push
sbb
aad
clc
mov
lods
mov
and
inc
imul
mov
mov
leave
push
or
testl
and
fwait
stos
imul
imul
mov
adc
mov
addr16
push
push
imul
fcomps
and
mov
pop
adc
lock
push
xchg
mov
ret
mov
clc
dec
mov
int
mov
int
pop
lea
add
adc
cmp
dec
rcll
adc
and
xor
push
cli
popf
insb
mov
outsb
jp
andl
mov
and
xor
xchg
fmulp
xchg
cmp
mov
jno
cmpsl
mov
adc
push
movsl
bound
or
adc
dec
push
push
add
ret
dec
mov
out
repnz
andl
ss
jae
aaa
inc
and
mov
fcoms
add
pop
rol
adc
sub
sti
addl
sahf
push
xchg
push
sahf
mov
addl
lock
mov
push
adc
call
sbbl
mov
push
mov
repnz
mov
dec
xchg
mov
lock
push
mov
lods
outsb
add
xchg
mov
mov
jbe
adc
ja
shl
adc
xchg
lret
pop
push
mov
mov
hlt
sbb
jl
aad
mov
mov
dec
test
add
add
pop
jle
adc
aad
sub
xor
lods
push
adc
adc
mov
push
push
sbb
inc
jg
mov
cmp
add
or
xchg
jp
test
inc
std
test
or
mov
xchg
shl
lods
arpl
cmp
test
hlt
pop
les
rcrl
imul
and
push
jg
nop
gs
jne
in
jb
aad
xor
inc
out
fdivl
rcr
cmc
inc
fistl
negl
dec
fsubrs
je
sbb
cmp
xchg
imul
out
adc
scas
movsl
push
sub
test
adc
divb
mov
and
sbb
stos
icebp
inc
mov
pop
adc
jns
sbb
lea
iret
mov
xor
xchg
xchg
ret
cs
and
push
xchg
orb
cs
push
in
jb
cs
add
ds
in
cmc
push
xchg
inc
and
inc
add
in
pop
sbb
in
and
inc
shl
int
or
and
lods
clc
fsubs
jae
jg
xchg
xchg
push
fidivl
popa
add
int
add
jne
push
or
mov
xchg
rorl
xchg
fcoml
sbb
xchg
push
repnz
cmpsb
sub
adc
push
out
xchg
and
xchg
fidivs
xchg
sbb
mov
aam
call
xor
mov
xchg
or
daa
mov
xchg
aad
int3
push
jp
lret
dec
aad
adc
adc
int
shll
sub
ror
and
aad
cmp
mov
add
jle
movsb
xchg
call
jno
out
jb
fiaddl
mov
mov
pop
jbe
dec
inc
inc
xor
pop
adc
adc
ret
pop
out
cs
adc
data16
sbb
lods
sarb
xor
pusha
mov
adc
aaa
dec
xchg
cltd
in
xchg
dec
cmc
bound
test
fstl
push
jle
cs
out
fmuls
int
mov
scas
aas
dec
add
mov
out
dec
lret
push
rcrl
out
repz
cmpsb
cmp
mov
iret
ja
push
dec
mov
mov
pop
mov
mov
es
sar
push
pop
pusha
dec
aaa
mov
cmp
mov
jno
adc
and
sahf
xlat
xchg
test
int3
fidivrl
xchg
and
adc
adc
scas
mov
insl
adc
or
add
xorb
jae
test
roll
aad
add
fstl
aas
lods
jno
rorl
push
mov
in
and
imul
aad
scas
test
fdivrs
pushf
into
fwait
xchg
or
inc
jb
pop
pushf
shl
cmp
cmp
xchg
mov
inc
mov
xchg
cwtl
xchg
jmp
sub
aad
test
pop
and
sbb
and
xchg
test
stos
inc
enter
pop
and
dec
and
sbb
jecxz
test
popf
nop
rol
push
push
pop
cmp
fisttpll
and
pop
paddsw
xor
and
push
push
mov
jae
push
and
and
push
imul
icebp
cmp
stos
subb
ret
and
push
jne
out
fists
rcr
dec
and
lret
insl
sub
xchg
sbb
xor
xor
imul
out
inc
and
push
lcall
fistps
es
jnp
outsl
dec
inc
and
lods
jle
cld
push
ror
mov
test
push
pusha
test
aad
dec
mov
dec
std
setno
negl
in
lcall
iret
jb
push
xchg
fiaddl
adc
mov
xchg
mul
push
pop
jg
loop
push
mull
roll
mov
pop
out
pop
dec
sbb
mov
lds
push
cwtl
fstl
mov
mov
cwtl
sbb
call
push
push
out
call
fmull
or
sti
shlb
sbb
dec
dec
in
or
fcoms
push
sbb
cmc
mov
fwait
out
adc
inc
pop
loopne
sbb
mov
or
pop
lcall
pop
cmp
push
mov
lret
mov
ljmp
mov
sbb
xchg
cmp
mul
data16
adc
mul
adc
nop
dec
leavew
cmp
jge
imul
aad
test
mov
ss
xchg
cmpsb
sub
jbe
sub
ja
xchg
lret
and
enter
aas
mov
adc
xchg
and
int
sahf
out
or
decl
scas
es
mov
lret
ljmp
sahf
cwtl
inc
outsb
pusha
sbb
insb
dec
push
pop
pop
insl
adc
cmp
dec
inc
loop
hlt
cli
out
jne
ds
fdiv
xchg
ret
pop
pop
loop
jmp
sbb
sub
out
and
inc
adc
pop
inc
mov
stos
lods
sub
out
mov
test
sbb
mov
mov
cmp
adc
jb
dec
push
xor
xchg
jecxz
int
rol
mov
roll
inc
test
orps
inc
push
inc
aaa
push
bound
adc
add
icebp
jl
add
js
xchg
cltd
sub
add
fadds
or
out
lock
or
mov
ret
repz
jbe
push
push
aad
mov
aaa
inc
push
in
stos
sahf
adc
mov
cltd
add
loopne
fdivs
push
mov
push
adc
inc
scas
push
mov
jb
or
jge
out
add
xchg
xchg
ds
lds
and
and
arpl
xchg
cmovo
mov
sti
leave
leave
mov
sub
loop
inc
popa
push
add
or
arpl
rclb
clc
js
mov
dec
and
orl
mov
push
shll
push
lods
mov
pop
mov
roll
sub
rol
ret
add
adc
push
adc
test
je
jg,pn
cmc
xor
lods
add
stc
push
ss
sbb
sti
mov
xchg
fisubrs
mov
xor
push
sbb
mov
or
or
dec
mov
call
and
icebp
sti
pop
inc
inc
jo
jp
adc
cli
pop
dec
pop
fstps
jns
sub
dec
stos
sarl
and
pop
aad
out
inc
call
xchg
leave
push
in
out
mov
lcall
fiadds
mov
pop
ret
pextrw
sub
fstl
xor
dec
int3
cmp
sbb
add
add
xor
mov
push
cli
xchg
pop
aaa
dec
jno
popa
pop
fmuls
ja,pn
rcrl
call
out
mov
and
jecxz
adc
fmul
int
popa
and
pusha
dec
fstpl
pop
fmul
icebp
pop
outsb
inc
or
mov
mov
rclb
push
inc
pop
jb
ret
pop
pop
test
xor
jmp
repz
stc
mov
scas
pop
test
add
sarb
xor
pop
js
js
pop
and
and
mov
mov
stos
clc
jbe
pop
repnz
cmc
pop
dec
pop
outsb
popa
outsl
stos
int
lods
lahf
add
jne
test
sub
push
xor
mov
jne
mov
mov
adc
jle
fmul
lds
out
dec
lea
or
mov
cmp
push
dec
or
push
add
jbe
test
iret
dec
mov
jle
lods
fisttpl
pop
lret
std
mov
mov
sbb
pop
out
mov
and
andl
xlat
mov
adc
pop
and
adcl
adc
sub
loop
and
lds
daa
enter
ret
fnstsw
xchg
repnz
mov
jb
pop
and
movsb
xor
sbb
pop
stos
mov
outsl
out
mov
inc
ds
and
pop
add
push
pop
cmp
xor
xchg
and
stos
repnz
es
and
aas
or
je
lods
mov
jae
or
lock
pop
outsl
aam
addl
js
xchg
mov
add
dec
lret
jae
pop
pushf
sbbb
push
idivb
and
push
mov
push
and
shl
xchg
xchg
push
lock
fmuls
push
pop
loopne
adc
dec
bound
fdivs
je
push
cmp
cwtl
mov
iret
jae
inc
ja
add
mov
data16
ljmp
xchg
pop
in
cwtl
mov
loopne
xlat
cwtl
out
mov
xchg
xchg
dec
and
xchg
push
in
rcrb
cmpb
pusha
jle
jnp
cli
mov
les
fimuls
pop
aad
or
cmpsb
mov
jmp
stos
adc
insl
and
push
test
jbe
push
and
mov
push
into
insb
subb
adc
xchg
ss
dec
int
pop
push
stos
add
cmp
cmp
aad
out
push
pop
cmp
xchg
inc
cmp
stos
jne
leave
mov
xchg
xchg
pop
sarl
xchg
in
repz
xchg
add
stos
fdivl
mov
int
pop
and
cmc
rorl
mov
push
pop
lds
cmp
or
dec
stos
aam
xor
adc
push
aad
aad
in
pop
push
es
inc
jae
test
dec
cmp
mov
orb
or
add
push
jmp
mov
dec
xchg
xor
xchg
arpl
gs
or
mov
shr
fiaddl
insb
inc
sti
jbe
mov
loop
insb
call
pop
scas
xor
sbb
jg
mov
mov
nop
mov
dec
int
cmp
in
cmc
ficomps
push
data16
or
push
and
mov
insb
js
in
ret
pop
push
and
adc
push
mov
jle
hlt
jg
ret
push
adc
jne
arpl
nop
xchg
aad
fstps
inc
enter
mov
adc
add
lods
xchg
rcll
lods
or
adc
ret
or
pop
test
or
cmp
sub
in
jle
push
sahf
dec
xor
aas
fldenv
cwtl
sbb
cli
out
xor
fidivrs
out
push
jmp
aas
inc
jnp
push
inc
xchg
pop
jbe
jb
adc
dec
adc
sub
int3
leave
lcall
ljmp
xor
pop
inc
pop
xchg
arpl
mov
or
add
xor
rcrl
fcmovnu
and
dec
cmp
mov
lcall
cmovbe
shll
aaa
ss
into
addl
call
xor
lret
fdivs
mov
sbb
add
mov
insb
ficomps
cwtl
sahf
dec
xchg
pop
std
or
or
push
pop
mov
subl
aaa
add
pop
ds
std
jae
adc
dec
mov
xchg
mov
push
xchg
pop
cmpsl
rcll
dec
xor
push
inc
jae
popf
rolb
movsb
adc
dec
mov
xchg
subl
fcoms
sbbl
mov
fldenv
push
fidivrs
sbb
rcr
repz
pop
and
outsl
lret
dec
dec
inc
repz
pop
mov
mov
loopne
adc
imul
xchg
pop
hlt
pop
cmp
add
ret
mov
push
xchg
mov
pop
fisttpll
mov
push
xor
pop
push
or
fnsave
pop
dec
cli
add
repz
and
sahf
xchg
ja
push
into
lcall
insb
or
mov
mov
or
dec
xor
cltd
inc
cmp
dec
inc
arpl
sub
pmaddwd
adcb
adc
pop
rcll
and
xchg
cmpsb
aam
xlat
cmp
imul
sub
push
push
xchg
xchg
aad
jp
in
outsl
jne
dec
or
stos
filds
pop
divl
xlat
and
push
fstpl
rorl
mov
cs
sahf
add
shll
adc
lcall
xchg
in
ss
aaa
add
ret
add
lods
stos
pop
or
jb
inc
push
jmp
sub
fadds
and
lea
iret
mov
insl
arpl
out
out
jnp
data16
push
fadds
std
dec
jb
subl
or
xchg
adc
pushf
pop
or
adc
mov
cmp
ret
sbb
mov
or
cmpb
fcomps
outsl
repz
in
pop
out
imul
ficoml
mov
inc
fwait
mov
popa
xchg
lock
int
fidivrl
xchg
fsubr
repz
mov
popa
jle
adc
out
push
scas
fsubs
std
aad
xchg
sbb
rolb
jo
jl
mov
scas
aaa
pop
xchg
lcall
mov
xlat
sbb
mov
fcomp
dec
shlb
pop
enter
pop
in
xchg
push
cwtl
imul
aam
xchg
push
push
cmpsl
push
add
jmp
int
jo
push
test
or
or
int3
das
fxch
add
scas
sub
cwtl
pop
inc
xchg
adc
sub
gs
scas
mov
mov
sub
and
out
out
mov
icebp
rorl
inc
fiadds
xchg
push
jg
sub
sub
imul
xorl
sbb
jmp
movsb
mov
repnz
rclb
xchg
rcrb
jno
xchg
pop
pop
aad
sub
outsl
stc
mov
sahf
jb
inc
xor
pop
push
adcl
lods
xchg
push
icebp
shl
aad
mov
dec
popf
dec
in
inc
and
into
lds
mov
jb
out
mov
rclb
cwtl
xchg
inc
mov
push
adc
int
ret
ficomps
dec
cmc
repnz
pop
out
clc
icebp
xlat
pop
mov
repnz
cmpsb
idivl
scas
lods
push
add
cwtl
and
mov
adc
push
mov
nopl
into
or
pop
movsl
add
add
jbe
jo
aad
push
push
adc
sub
inc
jmp
jne
repnz
repz
fidivl
aaa
pop
and
lcall
inc
je
repz
or
push
inc
arpl
aam
arpl
xor
add
inc
cmp
sarl
imul
clc
adc
out
scas
popa
dec
in
pop
jno
mov
outsb
dec
je
addr16
dec
pop
dec
jecxz
cmc
lcall
xchg
pop
lock
arpl
or
and
fcoms
push
dec
call
sbb
out
mov
xor
andl
jno
stos
cmp
faddp
mov
xor
pop
mov
lds
push
adc
cmp
out
icebp
xchg
jp
fnstcw
pop
adc
push
mov
add
mov
stos
xor
das
dec
jg
xchg
dec
mov
enter
pop
adc
repnz
loop
adc
in
inc
outsb
cs
jl
stos
sbb
jmp
or
data16
cwtl
push
leave
je
dec
dec
loope
jne
cltd
jmp
scas
ficompl
sbb
xchg
cmp
or
push
je
mov
std
xor
mov
ss
sbb
xchg
stos
dec
in
push
xchg
jle
daa
mov
shrb
loope
test
arpl
cltd
or
mov
shl
jp
sub
pusha
sbb
fstpl
push
inc
insb
rorl
push
cmp
data16
jnp
mov
out
xchg
fadds
ror
pop
adc
shll
pop
adc
ds
xlat
fadds
push
into
sbb
in
mov
lods
xor
mov
enter
or
outsl
push
xor
lods
mov
jns
sahf
xchg
in
iret
dec
dec
orl
pop
imul
mov
cmp
repnz
xlat
test
and
rclb
mov
xchg
jno
bound
adc
pop
es
jb
mov
sbb
sbbb
adc
stos
mov
repnz
jnp
or
imul
mov
adc
xor
loop
jno
inc
xlat
in
cli
cmp
imul
push
xor
subl
in
into
je
lock
push
out
adc
cmp
fst
repnz
rorb
sahf
adc
flds
or
inc
fidivrl
dec
testb
mov
pusha
sbb
cmc
adc
cmp
sahf
adc
push
rclb
hlt
outsb
sti
xchg
push
push
and
into
fnsave
addr16
mov
inc
mov
clc
cmc
sub
ret
rcrl
push
mov
push
roll
fcompl
jae
push
jno
aad
sbb
push
mov
inc
in
sub
mov
xchg
dec
fnstcw
shrl
cmp
add
fstps
idivb
push
lret
xchg
pop
pop
loop
and
dec
fcom
in
push
adc
and
xchg
mov
sub
cmp
aam
mov
loope
push
push
aam
popf
xor
orl
aaa
out
push
ret
es
cwtl
inc
dec
das
sub
push
aas
decl
and
inc
xchg
push
je
cmp
push
and
sbb
int
push
cs
mov
dec
jb
sbb
mov
or
and
sbb
adc
mov
mov
sahf
int3
leave
and
iret
sbb
mov
mov
mov
ret
fsubrl
fs
xor
dec
adc
addr16
mov
mov
mov
mov
cmc
push
push
mov
repz
xchg
loop
xchg
sbb
fsubl
xchg
aam
pop
xchg
mov
or
mov
lods
fstpl
arpl
sbb
dec
cmpsb
loopew
cs
push
fisttpll
sbbl
in
ds
xchg
insl
add
mov
je
int
lret
pop
jae
in
lock
insl
mov
xor
mov
sub
cmp
testb
arpl
addr16
lret
adc
notb
rcrl
gs
js
les
lea
std
jae
in
ret
mov
dec
bound
leave
test
out
jge
push
push
imul
movsb
loope
jp
mov
mov
push
mov
inc
adc
mov
mov
rol
push
or
icebp
sbb
and
xor
xchg
fidivl
sbb
sbb
nop
cmpsb
mov
shll
push
repnz
dec
fnstcw
add
push
aad
or
push
jne
fwait
jnp
add
loope
or
xor
push
pusha
mov
pop
adcb
mov
outsb
rcll
pop
sbb
adc
sub
jp
shl
test
ret
bound
jb
into
stos
shlb
outsb
xchg
gs
sbb
xor
rolb
jno
xor
adc
mov
and
pop
xchg
shrb
pop
pop
cmp
push
into
filds
push
call
xorps
stos
and
or
in
mov
shrl
lods
mov
mov
pop
fldcw
xchg
jae
xchg
into
fdivl
and
aad
xchg
in
xchg
out
mov
pop
fmuls
mov
insl
lret
lahf
adc
jge
cmpsl
imul
nop
inc
xor
lock
mov
cmp
nop
mov
adc
out
and
mov
ljmp
pop
inc
aas
fists
mov
lods
inc
mov
repnz
pop
and
push
ja
dec
jecxz
imul
mov
push
cwtl
pop
mov
pop
mov
pop
movsb
mov
sahf
lock
shlb
mov
xchg
test
lcall
mov
jmp
enter
std
loop
das
lods
inc
in
loope
hlt
or
jnp
cmp
and
adc
mov
iret
mov
rorl
insl
shll
adc
in
push
daa
and
scas
fs
insb
jnp
dec
sbb
mov
sahf
xchg
xlat
jnp
fidivrl
mov
stos
jnp
rclb
jmp
jge
cmpsl
fs
push
shrl
sub
xor
cmp
lfence
pop
add
xchg
lds
inc
inc
fistl
and
inc
sub
mov
lods
cmp
loope
aam
dec
pushw
cmp
xor
rclb
dec
or
mov
inc
mov
jle
mov
xlat
push
add
lds
push
fdivr
mov
imul
and
adc
jns
sbb
push
fbld
xor
lret
imul
xor
pushf
int
iret
xchg
movb
push
sbb
mov
and
xor
fldcw
push
mov
or
mov
lea
add
mov
outsl
mov
ljmp
out
fs
es
add
sbb
lock
push
int
mov
pop
fscale
inc
mov
dec
xchg
sahf
xchg
push
lret
or
push
out
xchg
shll
popf
in
push
xor
in
in
inc
hlt
jge
repz
adc
out
push
xchg
sub
mov
data16
imul
scas
aad
or
repz
dec
jp
xor
lea
pop
jecxz
push
leave
add
loope
mov
adc
mov
pop
mov
pop
int
dec
notb
aad
fcom
push
pop
inc
xchg
adc
xchg
inc
loopne
fmul
test
cwtl
jae
int3
bound
lods
pusha
jmp
or
and
dec
xchg
outsb
test
rorl
add
mov
adc
in
popf
fldl
xchg
sbb
insb
aas
xor
jnp
pusha
dec
sub
xor
jb
fisubrs
xlat
mov
pop
add
addr16
xchg
cs
sub
xor
sbb
mov
push
ja
pop
add
or
jmp
mov
out
out
jns
cmpsb
leave
sahf
pop
fildll
aaa
std
jne
dec
xchg
jmp
jne
mov
dec
aaa
cmp
mov
andb
mov
add
xor
sub
stos
xchg
inc
lret
ljmp
push
test
fistpl
mov
and
xchg
fsubs
jle
and
pop
pop
and
pop
adc
and
bound
iret
daa
pop
fcos
mull
sub
fnstenv
mov
sahf
jb
mov
pop
xchg
lods
add
xlat
adc
inc
lahf
xchg
sub
or
and
mov
pop
stos
and
xchg
xchg
mov
testb
mov
and
and
pop
mov
sbb
dec
xchg
daa
enter
dec
add
mov
mov
jne
stos
xchg
adc
ds
push
cmp
inc
dec
in
cmp
int
out
lock
mov
mov
sub
icebp
mov
adc
dec
shll
xor
and
and
jmp
pop
xchg
jge
add
pop
pop
push
lahf
push
pop
lods
fstl
aam
and
dec
mov
adc
ja
sbb
push
adc
jbe
loop
sub
mov
sbb
xorl
scas
pop
mov
dec
ds
pop
xor
mov
xlat
or
sub
xor
filds
fadds
dec
jge
es
sbb
test
out
test
xchg
icebp
pushf
mov
mov
sbb
mov
pop
add
pop
push
sahf
popa
xor
lds
call
jmp
ds
mov
pop
sbb
and
or
sub
sub
inc
in
and
xlat
fbld
stc
jecxz
sub
aas
xchg
xor
ret
lahf
push
scas
les
pop
mov
sbb
iret
sbb
xchg
bound
inc
sbbl
push
mov
rcll
mov
jae
add
insb
sub
orb
popf
mov
rcll
aam
stos
lahf
mov
jb
pop
mov
repnz
out
imul
push
and
sti
mov
shlb
push
push
lds
push
xor
push
push
jae
inc
xchg
iret
int
jecxz
ja
and
and
mov
lods
sbb
push
fcoms
sub
ss
mov
mov
inc
cmp
imul
adc
fisttpl
adc
and
test
ret
push
xchg
sarl
fadds
cmp
mov
in
cs
mov
and
adc
jg
bound
je
loope
fstl
or
add
jbe
lock
arpl
scas
jbe
mov
xorl
cmp
shlb
xor
data16
inc
push
push
dec
xchg
rorl
jle
xchg
shll
inc
aad
in
sub
or
in
xchg
icebp
mov
das
sub
and
adc
xchg
sarb
int3
push
jl
push
sar
into
outsl
pop
inc
stc
pop
cwtl
or
lret
das
les
fbld
jb
ficoms
stos
xorl
pop
fstl
stos
ret
xor
jnp
jne
or
rcll
push
mov
aad
jp
dec
push
adc
bound
call
divb
adc
fidivs
pusha
xor
xchg
int
jae
adc
mov
mov
in
call
adcl
add
icebp
ss
sahf
pop
test
test
mov
ljmp
push
lods
mov
dec
test
ror
sub
sbb
das
sub
xor
sub
mov
push
cld
lcall
push
jecxz
mov
mov
test
iret
aam
jb
shl
pop
jp
xchg
sarb
int
mov
movsb
rol
pop
push
pop
pop
inc
sbb
inc
fdivrs
das
dec
pop
aad
xchg
cwtl
outsl
fcomps
jg
iret
and
cwtl
scas
repz
mov
xchg
sbb
xchg
addr16
or
mov
inc
in
lret
push
mov
bnd
loop
push
rolb
xchg
dec
dec
aad
xchg
add
loope
mov
jnp
inc
outsb
insb
cmpsl
adc
or
xor
or
sbbb
test
icebp
pop
fwait
aam
dec
shr
es
mov
in
xchg
push
sti
add
fdivs
lea
inc
pop
push
and
icebp
push
xor
gs
or
arpl
and
xchg
sahf
out
inc
ret
mov
pop
mov
or
out
push
cmp
or
xor
test
stos
loop
mov
bound
dec
ret
cmp
rorl
sbb
jo
mov
add
pop
test
mov
inc
pop
jno
adc
mov
mov
mov
rolb
adcb
sbb
outsl
std
push
adc
out
out
in
jo
sbb
lret
mov
sub
iret
rcrl
sbb
scas
fisubrl
xchg
sub
cwtl
adc
test
or
arpl
inc
clc
xchg
pop
dec
adc
xchg
mov
dec
pop
push
outsb
lods
pop
repnz
in
aad
fldl
adc
lds
jl
inc
xlat
fwait
sub
cld
inc
jns
mov
pop
iret
pop
movsb
ds
sub
push
loope
std
mov
stos
fsubs
and
test
ficoms
sahf
adc
push
testb
mov
dec
iret
es
jg
popa
out
jmp
and
ljmp
fcompl
xchg
aas
popf
mov
fcomps
call
repnz
cwtl
fisubl
and
add
sub
add
sar
xchg
pop
pop
or
jg
cltd
mov
scas
push
jmp
sub
pop
fnstsw
in
or
mov
sub
inc
mov
cmp
adc
push
xchg
or
mov
mov
sub
fmul
push
pop
and
pushf
inc
mov
jb
mov
jo
shlb
mov
clc
dec
sbb
cmc
mov
pop
in
ds
adc
sarl
xchg
mov
outsb
inc
in
in
sub
adc
dec
cmp
aas
and
pop
and
repz
xchg
sbb
lahf
subl
mov
dec
scas
jne
arpl
xchg
mov
or
fs
cmp
rcr
jg
fldenv
pop
movb
lahf
inc
push
mov
insl
sub
repnz
data16
repz
adcl
test
mov
xchg
cmp
setb
push
cs
inc
push
mov
filds
pop
push
cmp
rclb
gs
aad
bound
mov
push
mov
add
repz
add
add
insb
out
inc
orl
jno
lret
mov
inc
sbb
jle
jmp
stc
decb
sub
ljmp
push
jo
sbb
cmpsb
int
fcompl
jno
sub
test
icebp
sub
cs
test
lods
add
pop
idivl
xlat
adc
xchg
stos
loop
cmp
into
xchg
iret
mov
cmp
cmp
push
loopne
fnsave
push
adc
add
adc
pop
mov
jecxz
push
mov
jle,pt
mov
mov
filds
sahf
loop
cld
pop
pop
es
mov
jae
dec
jo
popa
out
repz
cld
jmp
mov
push
ret
es
inc
adc
pop
addr16
and
pop
bound
test
jge
scas
mov
lea
pop
jns
jle
dec
clc
pop
cmc
pop
outsl
in
dec
pop
addl
jb
std
adc
xor
cmp
loop
xlat
ficompl
orb
loope
sub
or
arpl
inc
dec
add
jl
mov
fs
xor
xor
pop
and
and
mov
jg
push
les
popf
pop
mov
fisubrs
jp
jno
test
inc
jmp
test
jmp
pop
mov
sub
xchg
adc
sbb
aaa
std
aam
adc
cwtl
pop
les
mov
adc
divb
stos
pop
adc
push
push
jmp
xchg
dec
cwtl
jb
push
fstpt
add
stc
icebp
xor
jecxz
scas
test
sahf
or
dec
out
xchg
cmp
popa
sub
cmp
mov
out
jno
test
xor
aad
loop,pt
lock
adc
adc
adc
inc
push
inc
test
gs
mov
xchg
xchg
aad
xchg
xchg
fcomps
xchg
mov
inc
mov
cld
clc
ss
into
push
outsb
pop
xchg
sbb
in
imul
lods
adc
loopne
xlat
fsubs
je
and
adcb
out
inc
scas
repnz
imulb
movsl
sub
xor
jae
xchg
jnp
cmpsb
in
sub
mov
stos
stos
pop
push
out
jne
jg
mov
out
notb
cwtl
push
cmc
negb
imul
xchg
sbb
pop
shlb
mov
hlt
int
jb
inc
pop
nop
test
scas
adc
dec
cs
push
push
dec
scas
jb
jl
stos
inc
rorl
ret
call
das
or
div
push
cmc
loope
movsb
scas
sub
xor
jle
stos
push
loop
sub
insb
push
scas
cmp
pop
cmpsl
je
push
stc
test
adc
pop
mov
jb
in
stos
pop
dec
sbb
sti
mov
hlt
jae
fisttpl
cmpsb
mov
sahf
mov
sarl
lods
enter
add
jno
inc
push
adc
mov
add
jmp
neg
mov
xchg
mov
mov
bound
xchg
xchg
push
ret
jecxz
pop
mov
insb
dec
ja
out
push
xchg
dec
dec
mov
jl
xor
mov
push
adc
xchg
in
xor
pop
rorb
test
xchg
cli
mov
jge
leave
cli
stos
cld
push
jnp
ret
mov
cmc
idiv
mov
in
xchg
je
fwait
in
data16
push
adc
cmpsl
ss
mov
dec
repz
fildll
fsubp
mov
sarl
cmc
adc
in
test
add
mov
orl
dec
into
les
mov
and
pop
cmp
leave
je
pop
jecxz
lods
push
repnz
out
xchg
rorb
inc
cltd
sarl
pop
xchg
jo
and
ljmp
aad
lock
fwait
mov
ds
pop
pop
cmp
mov
cli
orb
mov
or
mov
inc
and
sub
je
std
inc
cmp
jno
lea
jge
mov
pop
or
mov
inc
push
or
fwait
xor
pop
xor
pop
nop
dec
or
xchg
or
jmp
add
mov
sahf
in
push
jae
mov
dec
lods
repz
adc
push
mov
xchg
xor
lcall
ljmp
jae
jns
repz
and
shrb
test
adc
adc
cmp
and
dec
iret
fcoms
ss
inc
insb
push
adc
cs
repnz
and
jmp
pop
sahf
out
add
xchg
gs
and
js
mov
ror
jo
rorl
gs
stos
push
or
loop
xchg
repz
sub
scas
mov
push
jp
cli
jno
mov
push
jo
mov
inc
jmp
jo
mov
xchg
mov
mov
in
push
fildll
push
mov
int3
pop
dec
mov
sub
aad
or
and
and
pop
xchg
ss
jb
push
pop
jge
or
push
addr16
repnz
mov
push
pusha
les
ja
stos
mov
jae
stc
in
jecxz
and
movsl
xchg
loope
sbb
jbe
stos
mov
mov
fwait
gs
leave
jno
cmc
xchg
ljmp
adc
addr16
nop
push
icebp
lcall
call
sbb
les
test
adc
idivb
pop
int3
addb
mov
pop
sub
add
out
dec
pop
icebp
clc
jnp
divb
test
or
pop
mov
das
pop
lret
lds
adc
cmc
je
nop
cmp
mov
cmc
ret
cld
mov
pop
rorl
cmp
lods
cs
pop
push
movsb
jg
lock
or
ret
cmp
and
dec
enter
imul
stc
pop
adc
adc
jae
fldlg2
and
lea
lea
repnz
sub
aam
mov
ficomps
inc
sbb
pop
and
orl
mov
push
imul
cmp
dec
inc
xor
push
scas
inc
sub
loopne
sbb
scas
icebp
fcompp
adc
mov
dec
stc
mov
mov
xchg
sbb
xchg
dec
out
iret
iret
std
fxch
push
lret
mov
xor
xchg
push
arpl
lods
mov
adc
hlt
gs
xchg
vorps
aad
jb
jmp
nop
inc
sbb
xchg
adc
outsb
pop
mov
sub
sarl
xor
clc
mov
mov
push
push
jnp
imul
cmovb
in
cmp
cmp
cmp
lahf
pop
stc
loop
daa
dec
aad
clc
ficompl
dec
or
mov
inc
dec
xor
pop
xor
orl
and
cmp
cli
cmc
aad
xchg
scas
add
pop
sub
notb
aad
xchg
adc
sbb
stos
push
adc
adc
adc
insl
add
stos
pop
mov
and
jno
rcll
mov
and
and
inc
push
push
out
lea
rorb
lods
xchg
test
pusha
xchg
sar
ror
in
xchg
dec
inc
mov
pop
std
mov
mov
int
xchg
sahf
or
xchg
jmp
xor
test
lds
push
adc
mov
mov
adc
das
xchg
mov
mov
inc
ror
fadd
dec
fnstcw
and
bsr
xor
mov
cmp
sahf
push
loopne
stc
mov
sarl
fildl
sub
fstpt
movsb
push
lock
scas
insb
fst
dec
push
test
pop
lret
out
das
push
jle
jecxz
pop
and
adc
inc
ljmp
jb
mov
pop
mov
aaa
mov
movsl
addl
xor
stos
inc
fldenv
dec
push
or
xchg
stos
cmp
adc
xchg
lea
push
daa
out
imul
mov
fistpl
push
mov
loop
ret
hlt
jb
adc
pop
out
repnz
add
sbb
cwtl
test
imul
adc
test
fsubs
xchg
add
pop
adc
mov
fwait
test
shrl
pop
xor
xchg
xchg
sbb
push
jle
add
mov
mov
mov
push
or
xor
lods
lret
fnstsw
stos
pop
lea
mov
xlat
or
cmp
sbb
mov
xchg
jg
add
loop
sub
sub
loop
outsb
or
inc
out
inc
push
out
js
adc
sqrtps
orb
nop
dec
fstpl
pop
outsb
fists
pop
add
cmp
inc
fsts
mov
xchg
jno
cwtl
insb
xchg
adc
cmc
in
iret
hlt
xchg
outsl
cmp
ret
mov
pop
jae
test
jo
loope
fimull
out
leave
test
mov
mov
inc
aad
js
cli
cmp
dec
jae
sahf
js
adc
mov
xchg
mov
mov
aad
lds
sbb
aas
ja
lds
pop
pop
aad
js
xlat
lods
mov
lret
push
aam
push
movsb
push
mulb
jno
iret
lret
rcrl
mov
sbb
fs
mov
sub
outsl
xchg
add
std
ljmp
sahf
mov
cmp
xor
mov
mov
hlt
mov
add
imul
or
cltd
pop
xchg
cltd
pop
mov
adc
addr16
mov
xor
push
push
es
cmp
in
test
dec
or
push
dec
insl
push
imul
sbb
jl
mov
outsb
pop
pop
sbbb
fwait
out
mov
aam
pop
fcmovne
aam
cwtl
ret
xor
pusha
fsubrs
insl
dec
xor
dec
xorl
xchg
jge
push
and
or
mov
adc
mov
pop
push
pop
lods
int
dec
jae
insl
out
inc
mov
lcall
ret
mov
testb
adc
fwait
call
mov
cmc
in
pop
mov
xchg
cltd
and
sbb
mov
and
mov
inc
pop
adc
inc
sahf
xor
hlt
bound
das
cwtl
inc
lret
test
repz
bound
and
jno
in
xchg
dec
cwtl
rcrl
rorl
mov
lods
xchg
jmp
add
fstl
adc
pop
test
idiv
mov
xchg
int3
int
sbbb
xchg
pop
out
xlat
inc
adc
push
push
fidivrs
sbb
dec
push
adc
adc
xor
and
sbb
dec
imul
jnp
out
sahf
mov
push
pop
add
add
setge
mov
xchg
sahf
xor
pop
andl
mov
xchg
cli
inc
push
sahf
and
jae
lea
mov
xor
data16
pop
adc
cwtl
or
shll
loope
int
dec
mov
mov
in
imul
mov
rcll
mov
loope
adc
mov
mov
xchg
dec
sub
lahf
push
addr16
mov
xchg
out
mov
in
cmpsb
adc
lock
pop
dec
sbb
gs
inc
sub
aad
rolb
dec
push
xlat
mov
xor
out
xchg
xchg
and
lds
jle
jecxz
sbb
pushf
call
inc
adc
sub
ret
lahf
mov
xor
mov
mov
sbb
push
mov
pop
push
dec
dec
mov
out
pusha
bnd
xchg
adc
dec
ret
and
jnp
inc
std
push
mov
pop
inc
leave
loopne
adc
mulb
popf
mov
push
leave
inc
sbb
jmp
pop
out
cmp
xchg
push
jbe
mov
fdiv
inc
mov
add
mov
or
out
mull
cwtl
fcmovnu
inc
lds
lock
xor
imull
and
xlat
adc
and
adc
cmp
mull
push
iret
xchg
mov
stos
mov
push
sub
cwtl
in
and
std
rorl
or
dec
fwait
cwtl
xchg
or
icebp
mov
cmp
mov
out
imul
rolb
inc
sub
add
xor
outsl
roll
xchg
dec
mov
inc
mov
adc
xchg
loop,pn
movsl
rolb
or
std
into
sub
jmp
pop
andb
movsl
icebp
adcl
xor
ficoml
lock
mov
adcl
push
dec
lods
xlat
and
shrl
xlat
enter
fs
xchg
out
or
add
xchg
cli
mov
or
ret
pop
stos
cmp
ja
dec
push
in
xchg
insb
pop
popa
jae
adc
in
sub
mov
imul
sub
ror
mov
fstpl
js
jecxz
std
jae
arpl
leave
and
xchg
xchg
hlt
add
cmp
and
or
pop
adc
jb
repnz
pop
call
test
push
sbb
enter
rcrl
xchg
push
adc
jno
jp
stos
rclb
xchg
int
or
cmp
andb
test
call
mov
and
push
add
push
lds
jg
xchg
out
outsb
dec
sbb
insb
add
pop
loope
adc
push
adc
rcrb
mov
inc
mov
mov
sar
xor
mov
mov
out
adc
stos
or
pop
jle
sbb
loop
push
mov
int
rol
loope
dec
mov
adc
adc
xchg
or
dec
adc
leave
cmp
outsl
aaa
mov
or
cwtl
fistpl
ljmp
data16
lock
push
push
aam
add
jmp
test
hlt
lcall
and
fwait
sbb
push
inc
mov
jnp
sbb
or
ret
mov
out
cmc
jb
push
sbb
jne
lahf
xchg
addb
sbbb
sub
int
push
jne
in
fildl
xor
cmp
mov
mov
add
push
adc
and
inc
ret
mov
out
in
adc
mov
lret
push
flds
xchg
push
fimull
sub
and
mov
fsubl
push
inc
jnp
pop
pusha
shll
leave
pop
js
sbb
dec
xor
lods
imul
insb
pop
clc
addr16
cwtl
loop
push
add
sub
mov
imul
pop
xlat
jp
negb
jg
or
call
adc
fsub
icebp
dec
push
inc
mov
sub
add
sbb
xchg
sub
push
cmc
or
lods
ja
and
xchg
inc
rcrb
out
push
lret
dec
xchg
push
fst
and
loopne
mov
push
xor
das
aad
mov
xchg
sar
mov
push
scas
popa
xchg
notl
jbe
push
push
mov
fwait
mov
into
lods
sub
adc
xchg
inc
jnp
das
mov
mov
sahf
xchg
xchg
xchg
add
add
or
xchg
jle
push
xchg
loopne
out
fsubl
bswap
xchg
das
and
xchg
push
scas
adc
add
hlt
cli
shl
xchg
and
insl
adc
rorb
adc
out
fmul
jge
pop
decl
test
push
sbb
and
aad
sahf
push
xor
jmp
mov
xorb
les
sub
xchg
sbb
mov
adc
xchg
ljmp
pop
stos
xchg
sbb
and
pop
in
adc
push
mov
push
add
lods
and
fucom
rcrl
pop
adc
dec
scas
dec
or
or
decl
jae
push
leave
loopne
lods
int
aad
pushf
sbb
adc
rorb
les
ret
push
jb
movsl
testb
scas
into
inc
cmp
jg
xbegin
pop
dec
dec
and
imul
mov
dec
insw
int3
jns
fnsave
mov
adc
push
idiv
pop
cwtl
sti
dec
xchg
popf
mov
cmpsb
icebp
jnp
pop
mov
outsl
push
sbb
stc
jmp
ss
xchg
mov
push
stos
jecxz
jns
adc
mov
jbe
mov
aam
pop
xor
cmpsl
adc
jb
mov
inc
jo
rcrl
or
scas
xor
mov
push
test
add
or
rcrb
fidivs
or
ficoml
repz
mov
pop
xor
mov
pushf
lock
in
pop
mov
and
mov
adc
push
imul
adc
int
adc
data16
push
or
xchg
stos
cmpsb
dec
dec
push
pop
outsl
nop
loop
push
into
mov
mov
insl
test
in
fstl
nop
call
adc
test
popf
adc
sub
shl
push
push
das
lcall
lods
dec
rcl
mov
xor
pop
and
and
test
pop
loopew
pop
pop
pop
stos
pop
inc
cwtl
lret
mov
call
fcoml
popf
fisttpl
sub
pop
loopne
push
stc
in
aad
ja
mov
int3
shlb
clc
pop
movsl
and
mov
adc
adc
xor
fs
xchg
fisubrs
fsub
leave
pop
jp
or
adc
xchg
xchg
ja
push
mov
shll
rcrl
mov
add
rcll
aad
sub
jg
int
adc
sub
outsl
mov
mov
adc
pushf
mov
stos
push
add
jg
inc
shrb
push
int
push
popf
jecxz
or
icebp
sub
ror
add
sbb
nop
xlat
push
sahf
jno
js
or
sbb
push
add
jge
pop
in
in
mov
dec
pop
push
shll
aas
xor
or
jle
orb
and
cmpsl
push
xor
lock
stos
sub
ret
stos
out
into
and
dec
mov
adc
sub
mov
int3
sub
bnd
ret
dec
shl
out
push
push
pop
cwtl
dec
fwait
stos
xchg
mov
js
pop
aam
jg
push
imul
xchg
dec
mov
fisubrs
sarl
cmp
xchg
out
aad
in
mov
mov
test
fists
fistps
mov
push
push
shl
xor
mov
push
fisubl
insl
lret
sbb
xlat
addb
mov
pop
mov
in
lds
lods
push
addr16
outsl
imul
push
mov
jno
or
jo
fdiv
xlat
jne
aam
and
pop
inc
and
and
mov
notl
jb
fstpl
aaa
stos
dec
pop
imul
fbld
fsubs
inc
sar
aam
into
pop
sbb
dec
and
shl
imul
popa
jbe
push
mov
add
xor
cmc
cmc
mov
mov
dec
shlb
int
mov
movsl
adc
push
adc
repnz
jne
lret
add
jb
mov
inc
pop
mov
xlat
clc
fcoms
fcom
push
push
cmp
xor
cs
push
add
je
xchg
mov
xchg
andb
pop
add
test
sub
pop
inc
fs
xchg
add
push
sub
dec
in
jb
xchg
xor
cmp
xchg
jg
shr
mov
dec
ljmp
cmpsl
movsl
rclb
push
loop
mov
lock
jge
jle
int
mov
setae
add
idivb
cs
jae
adc
sahf
sub
xchg
adc
sbb
push
test
aad
cmp
popa
mov
xorl
or
subb
jo
ljmp
sub
xchg
sbb
add
inc
rcl
ret
dec
stos
imul
dec
inc
fisttpl
pop
loope
jle
in
add
cmpsb
imulb
dec
xor
adc
jae
xchg
dec
jmp
lea
pop
movsl
fiadds
inc
xchg
idivb
call
pop
push
add
or
xlat
cmp
ljmp
inc
out
mov
fistl
sti
sbb
add
mov
add
lea
jge
mov
jp
dec
les
clc
int3
mov
lock
not
data16
insb
inc
sbb
ret
out
insb
iret
clc
cwtl
jae
sbb
xor
mov
scas
add
xchg
sbb
les
mov
out
jae
shlw
loope
lahf
mov
sarl
or
cmp
ljmp
push
aaa
scas
mov
jle
fs
scas
dec
jae
sbb
sbb
xchg
rcrb
aad
push
push
push
xor
pop
mov
jae
and
loop
dec
jl
cmpsb
loop
std
push
mov
push
ret
cmpsb
data16
repnz
sahf
adc
mov
jp
neg
xchg
jp
dec
iret
out
aam
in
pop
icebp
push
popa
and
call
add
pop
xchg
mov
jno
clc
mov
psllq
add
sahf
icebp
out
fdivl
out
dec
dec
jmp
and
and
mov
lods
mov
scas
push
cmpsb
push
or
das
sbb
mov
push
add
pop
sbb
int3
mov
dec
sti
test
and
test
loop
aas
cwtl
gs
xor
sti
fsts
sbb
adc
test
mov
loope
xor
shrb
fcompl
jno
shll
jnp
loope
mov
xchg
inc
xchg
pop
ficoms
mov
andl
pop
pop
mov
or
mov
jb
cs
js
adc
inc
push
jl
js
xchg
insb
mov
imul
mov
jns
mov
mov
ficompl
testb
movsb
mov
xchg
mov
lret
lods
fiadds
or
lret
mov
add
sub
stos
add
into
loopne
pop
fs
loop
test
dec
hlt
in
rcll
xchg
push
or
ja
pop
or
movsl
adc
pop
push
xor
mov
mov
gs
push
inc
adc
repz
push
leave
mov
adc
mov
pop
cmp
neg
jbe
icebp
mov
aad
lods
push
push
scas
push
dec
fs
loop
pop
adc
sbb
int
sub
aad
adc
jno
push
inc
mov
negl
sbbl
adc
sbb
jg
dec
pop
mov
sbb
push
sub
out
adc
cmp
in
stos
mov
push
inc
push
sub
jmp
xorb
mov
sub
inc
ficoml
cmp
inc
or
inc
mov
jb
insb
rcrb
dec
add
lret
and
ror
pop
fistl
pop
sbb
es
addr16
popf
sti
cmp
add
daa
lods
data16
xchg
sbb
xchg
mov
out
mov
mov
rcll
xorb
mov
lock
xchg
xchg
ret
pop
and
mov
jb
adc
push
jne
js
lret
xchg
inc
jl
fidivl
pop
adc
cltd
pop
popa
rcl
xchg
in
xlat
fs
mov
dec
and
jne
pushf
adc
dec
insb
repz
movsb
pop
xchg
mov
iret
nop
pop
lock
add
jno
sar
inc
sbb
subl
lods
sarb
jge
in
gs
andb
adc
push
ljmp
ljmp
push
movsl
jnp
into
inc
mov
rcrl
sub
cmp
xchg
pop
cmc
or
hlt
repnz
in
mov
neg
cli
mov
clc
ds
push
cmp
out
aad
xchg
arpl
pop
xor
jno
adc
or
pop
mov
or
dec
repz
add
or
cmp
or
rolb
hlt
int
jmp
std
mov
shl
push
pop
push
pop
dec
cmp
pop
push
lret
sub
mov
outsb
std
sbb
jecxz
in
dec
xor
aad
xchg
xor
sbb
test
cwtl
push
cmp
sbb
lret
cwtl
dec
xchg
testl
and
dec
mov
cmp
inc
or
imul
loope
icebp
xchg
jne
test
cmpl
incl
cmpsb
popa
imul
xchg
aas
imul
cmp
jnp
sub
xchg
pop
or
bound
fsubrs
daa
xor
jbe
mov
sar
mov
or
push
inc
push
xor
mov
sbb
lret
pop
inc
pop
mov
test
add
inc
pop
sbb
push
adc
ljmp
loop
dec
push
push
testb
jge
sub
push
push
mov
jb
jo
dec
xor
pusha
push
push
dec
rclb
jb
mov
sbb
out
fwait
es
inc
jg
sbb
cmc
aad
sbb
sbb
pusha
mov
xchg
xchg
lret
mov
cltd
or
test
push
inc
out
xlat
pop
shlb
adc
std
call
cwtl
jle
test
xor
out
ljmp
imul
cmp
fnstsw
push
popf
xor
rcrb
es
push
cmp
adc
lods
pop
push
push
fdivrs
pop
xchg
sub
ss
mov
adc
adc
cwtl
push
sub
xlat
sub
rcrl
shrb
cs
adcb
inc
jb
pop
in
cmpsb
inc
xor
mov
jge
mov
inc
stos
mov
xor
mov
jnp
scas
lret
adc
mov
aaa
xchg
pop
sahf
out
sbb
and
aad
shr
popa
ja
rcr
jl
mov
xor
add
rorb
popf
int3
dec
adc
iret
mov
outsb
cld
test
adc
xchg
arpl
jbe
adc
push
sub
cwtl
int
adc
cli
loop
outsl
movb
mov
adc
pop
arpl
jecxz
outsl
rclb
adc
cld
xlat
or
mov
fdivr
es
dec
lds
out
repnz
or
inc
cli
ret
fadd
and
outsl
and
pop
adc
cwtl
cmpl
add
adc
arpl
cmp
adc
add
jns
xchg
sahf
adc
rcrl
cmp
mov
stc
pop
and
cwtl
and
dec
jp
pop
aam
and
jnp
fmull
mov
pop
fwait
inc
mov
xchg
and
mov
mov
sbb
in
loope
pop
jbe
loopne
pop
or
in
push
sbb
rol
sub
xor
mov
cwtl
sahf
pushf
mov
aad
fdivs
adc
shlb
add
cmp
out
xchg
out
adc
rclb
mov
inc
scas
dec
enter
int3
flds
xchg
shl
in
test
scas
test
jecxz
push
sbb
or
lcall
jge
jo
mov
iret
test
xor
scas
into
xlat
cltd
fisubrl
iret
lret
add
sub
hlt
gs
cmp
cmp
popa
pop
pop
sbb
push
lret
push
jl
sarl
in
and
mov
mov
and
out
add
cmp
and
lahf
roll
cmp
push
dec
in
mov
push
or
push
or
and
and
fisubrl
push
mov
js
jb
inc
inc
mov
jnp
aam
xchg
mov
je
mov
sti
inc
and
sub
jmp
cltd
push
jno
jb
push
insb
jecxz
mov
or
fstl
push
ss
push
rcl
jecxz
ret
aad
push
xchg
push
and
add
pop
mov
xor
or
adc
ret
cwtl
pop
or
addr16
pop
ljmp
fwait
pop
mov
pushf
pop
inc
jmp
push
lds
or
jl
dec
aaa
pusha
cmp
test
mov
mov
loope
pop
fwait
ss
jnp
jnp
jno
xchg
cli
dec
icebp
rol
sub
test
jne
push
and
out
stc
sub
bound
xor
lods
cmp
add
cmp
pop
daa
push
lds
cltd
xchg
clc
fdiv
std
inc
rcrl
adc
sub
popa
adc
push
and
stos
fidivs
pusha
sub
pop
out
pop
mov
lods
add
pop
cmp
loopne
mov
repnz
xchg
mov
pop
dec
cmpsb
fisubrl
es
popa
adc
fdiv
add
pop
inc
dec
xor
in
sarl
jmp
mov
rolb
inc
mov
and
cltd
lds
push
fidivrs
cmp
xchg
cltd
lea
gs
pop
lret
mov
or
cmpsl
jl
xchg
pop
jb
test
roll
push
js
outsl
mov
sarl
lahf
bound
mov
popa
sbb
mov
sub
int3
mov
test
and
adc
or
or
adc
in
rcrb
and
data16
push
mov
lods
lret
scas
add
mov
fwait
ret
jl
loop
mov
shr
push
push
lret
js
cmp
pop
mov
ret
fldcw
xlat
xchg
pushf
fsubrp
mov
cwtl
sbbl
adc
adc
outsl
mov
mov
scas
mov
sub
pop
dec
push
mov
sub
jecxz
fdivrs
pusha
rolb
cmp
std
test
test
fdivr
mov
pop
pop
mov
push
xchg
mov
int3
lret
or
lods
push
push
enter
les
repnz
xchg
shr
int
adc
or
mov
loope
test
jo
push
and
out
sub
xchg
repnz
std
fistpl
sub
xchg
imul
aas
fsub
aad
daa
es
mov
call
adc
cmpsl
sbb
or
push
rcrl
xchg
jecxz
lock
mov
mov
add
inc
xchg
pushf
repz
cmp
call
aam
loop
mov
sub
lods
mov
mov
ds
out
aaa
hlt
jnp
incb
push
test
pop
cmp
dec
lods
inc
adc
pop
scas
add
jno
popa
aad
mov
int
or
jmp
xchg
stos
fsub
rcl
roll
std
jecxz
lret
dec
and
sbb
xor
aaa
xchg
cmp
int3
repz
popf
cmc
lret
divb
jb
and
pop
fs
movsl
cmp
xchg
mov
pop
cs
out
push
sub
sbb
dec
and
mov
mov
mov
cs
xchg
dec
mov
insb
mov
pop
lds
jb
dec
ja
and
mov
fimuls
or
dec
or
push
nop
popf
sub
mov
add
inc
shlb
dec
fidivrl
fsubs
cmp
jnp
mov
adc
lahf
out
sbb
cmp
mov
data16
mov
fdivrs
add
shr
inc
addb
rorb
mov
sbbl
iret
pop
test
mov
leave
fildll
adc
adc
fsubl
int3
and
addl
add
sahf
cwtl
push
ds
sbb
jp
flds
stos
imul
xor
call
fnclex
pushf
shlb
sbb
jle
pop
repz
push
inc
test
ret
jb
shrb
in
jb
arpl
dec
push
fsubl
sbbl
push
adc
xchg
xchg
inc
inc
xor
fldcw
jno
push
insb
push
xchg
addr16
adc
push
jmp
imul
inc
xor
call
enter
adc
push
in
push
jno
js
cmp
nop
stc
ret
pop
aaa
sub
sbb
fisubl
lods
xchg
test
dec
sbb
test
xchg
jne
int3
js
inc
jp
js
fisttpl
popf
outsb
ds
imul
lcall
idivb
inc
inc
jnp
cmp
or
inc
ljmp
ficomps
sbb
cmpsb
add
fdivrs
jno
adc
mov
mov
unpckhps
xchg
push
fcomp
mov
cmp
dec
es
xlat
sbbl
adc
cwtl
pop
jae
cmp
adcl
adc
pop
in
push
inc
fildl
or
sub
mov
ficoms
les
mov
rcll
jno
aad
cmp
jl
dec
xchg
xlat
rcl
loop
cmp
xchg
sub
cli
cwtl
cmp
out
fmulp
fcomp
mov
add
sbb
cmp
xor
sbb
push
mov
mov
lret
inc
jmp
push
sbb
popf
loop
adc
test
dec
jno
rcl
xchg
add
xor
mov
rclb
xchg
cmpsb
pushf
xor
jecxz
push
rorb
test
pop
call
cmp
dec
jbe
sahf
add
mov
mov
cli
cli
mov
push
inc
es
xchg
pop
and
or
cmp
dec
lds
lahf
and
idivb
out
dec
lds
ljmp
and
sbb
add
in
xchg
and
and
es
mov
xchg
je
jmp
xchg
xor
daa
jno
lea
cs
mov
mov
mov
xchg
icebp
inc
jae
int
xchg
repnz
adc
pushf
push
or
xchg
cwtl
push
shll
add
movsl
or
xchg
pop
aas
stos
int
call
sbb
sub
dec
jns
jl
arpl
mov
enter
out
cltd
inc
sbb
jnp
cmpsl
adc
and
lds
addr16
loop
push
sub
sub
xchg
push
jae
mov
cmc
bound
sbb
add
je
sbb
xlat
pop
rol
xchg
jae
ja
or
aad
dec
ds
jmp
sub
mov
out
int
sbb
lea
sbb
nop
icebp
pop
adc
xor
jg
push
mov
pop
rorl
cs
xor
movsl
push
push
sub
out
clc
sub
aaa
stos
movsb
mov
jmp
gs
ret
sti
xorl
loope
and
rorl
inc
push
testb
jp
xchg
rol
adc
and
clc
pop
dec
dec
xor
mov
shll
lods
xchg
mov
push
adc
xchg
pop
pop
xchg
and
lahf
pop
iret
bound
push
mov
and
rclb
adc
outsb
pop
xchg
test
add
push
dec
mov
push
inc
fwait
cmpsb
xchg
inc
aam
sub
mov
push
imull
pop
and
push
mov
in
push
hlt
pop
and
sbb
mov
subl
in
stc
adc
add
add
inc
out
adc
dec
leave
pop
push
add
lds
fcoml
leave
pop
add
pop
pushf
mov
or
xchg
and
fsts
sarl
repz
xchg
adc
hlt
std
fwait
gs
cmovg
cmpsb
push
lds
lahf
lods
xchg
shrl
cs
fwait
push
or
jae
pop
out
jb
pop
dec
mov
cmpsl
jo
xlat
test
jmp
cmp
movl
mov
sub
add
cmp
mov
jno
xchg
xchg
adc
xor
in
mov
inc
cmp
xor
cmp
ljmp
add
or
ret
mov
rcll
push
ds
shll
push
loop
push
adc
inc
fsincos
aaa
push
xchg
jge
sub
jg
sahf
vcvtps2pd
daa
xchg
int
mov
sti
mov
push
out
lcall
jns
sbb
adc
scas
inc
rclb
xor
ret
mov
or
stos
ljmp
sbbb
aam
jae
sarb
add
movsl
pop
mov
int
sbb
xchg
sahf
inc
mov
add
scas
jno
jmp
sbb
test
pop
fistpll
cwtl
push
orl
movsl
adc
mov
push
mov
sti
loop
imul
shrb
aaa
sbb
pop
bound
dec
addl
cmp
cli
mov
scas
mov
mov
adc
cs
ljmp
push
sahf
pushf
and
inc
cmp
rolb
push
dec
jae
adc
stos
fucomp
mov
pusha
cmp
push
xor
in
jne
push
loop
and
movb
arpl
pop
adc
rcrb
xchg
scas
movsl
push
adc
scas
jbe
pop
push
mov
xchg
test
dec
add
ss
fstl
std
lods
sub
call
add
stos
mov
xorl
test
or
push
sahf
rclb
stos
push
mov
jecxz
daa
pusha
adc
adc
shlb
pop
cltd
jae
es
movq
inc
xchg
dec
dec
loope
jmp
stc
mov
xchg
xchg
push
pop
adc
xor
dec
stc
and
pop
je
sub
or
mov
mov
jbe
subb
data16
push
dec
mov
jbe
mov
cli
push
insl
mov
or
scas
inc
or
mov
test
jecxz
xchg
test
push
sub
dec
xlat
xor
dec
bound
mov
inc
fcmovnbe
or
inc
adc
and
mov
and
push
test
std
dec
pop
fdivrl
fsub
dec
or
fsubl
loopne
jnp
shrl
sbb
xchg
xor
pop
lret
out
mov
xlat
jge
int
pop
push
rorb
pop
stc
jge
lods
mov
adc
add
lret
leave
loope
addl
mov
xchg
test
xor
loop
imul
dec
popf
cltd
idiv
cmc
xchg
xor
and
sub
icebp
push
ljmp
and
in
xchg
sub
jp
push
repnz
lahf
pop
fcompl
push
sahf
inc
xchg
subl
aam
movb
jae
dec
bound
std
or
mov
cmp
rorb
fs
add
test
push
xchg
push
cmp
cwtl
xchg
fscale
cmc
jns
add
xchg
and
fsubp
add
mov
lock
orb
dec
daa
sub
xchg
pop
test
rcll
inc
cmp
cli
mov
mov
pushaw
sbb
loopne
xchg
push
cmp
in
jmp
mov
mov
shl
or
stos
cmp
mov
dec
addl
adc
clc
addl
adc
dec
mov
adc
lods
push
cli
dec
bound
dec
pop
push
push
and
cli
rcll
aad
pop
pop
sar
cmpsb
sub
and
repnz
or
repz
les
dec
jns
aaa
cwtl
loop
popa
jb,pn
aam
inc
lret
or
push
mov
inc
fimuls
jo
shll
push
xchg
dec
subl
ret
and
repnz
sub
push
adc
popf
cmp
adc
sub
leave
xchg
lcall
ljmp
pop
push
cs
insl
xchg
js
ss
mov
push
stc
pop
scas
or
jae
into
inc
sbb
sti
cwtl
sahf
call
jg
add
aad
mov
pop
cwtl
sbb
pusha
jne
mov
mov
fisubl
adc
adc
inc
loope
subl
dec
or
loop
and
arpl
out
xor
xchg
lea
leave
and
sub
fcoms
pop
mov
xchg
mov
jb
cmp
repz
or
pusha
add
or
mov
test
mov
jg
aaa
sahf
test
and
leave
sarl
and
inc
icebp
adc
add
mov
sbb
inc
ss
dec
pop
add
or
push
arpl
ds
mov
ljmp
repz
cmp
repnz
cmpl
sahf
and
imul
mov
pop
bound
push
jmp
scas
mov
pop
loop
push
into
cmp
loopne
fnstenvs
cmpsb
iret
nop
xchg
inc
mov
pusha
xor
or
pop
pop
or
ss
push
out
cmp
in
cmp
xchg
int3
in
jnp
enter
arpl
cmp
adc
imul
loop
jae
js
push
cmp
test
int
mov
jge
in
mov
ret
rcrb
data16
jb
jle
bound
sub
mov
sbb
fmul
fucomip
sahf
jae
inc
push
push
xchg
push
jmp
xor
subb
and
inc
dec
xor
mov
outsl
in
or
inc
mov
push
mov
iret
pusha
sbb
lea
sbb
orl
enter
loop
pop
gs
scas
arpl
inc
mov
xor
xchg
mov
sahf
lds
sahf
sub
or
popa
into
and
lret
push
inc
cli
test
ljmp
fdiv
loop,pt
test
jb
push
xchg
insl
add
pop
orps
imul
ret
data16
or
jnp
inc
insb
subl
cmp
repnz
pop
lcall
pop
dec
jbe
sahf
inc
ljmp
mov
jno
adc
mov
mov
out
fidivrl
mov
cmc
mov
dec
sbb
push
popfw
sub
insb
push
and
mov
push
mov
sbbl
out
jmp
xlat
and
adc
adc
xchg
push
jecxz
sub
cmpsb
dec
cmc
and
jne
inc
or
cmpsl
pusha
cwtl
in
push
adc
sbb
jb
or
mov
mov
adc
sahf
push
loope
mov
pop
add
dec
add
sarl
pop
xor
pop
clc
cltd
add
test
xor
push
and
je
loop
jge
and
inc
sti
int
pushf
inc
xchg
popf
xchg
out
xor
adc
or
mov
scas
push
adc
inc
or
icebp
sbb
adc
repz
xchg
rcrb
js
adc
hlt
sub
xor
rcrl
int
lret
dec
enter
sarb
outsb
pop
and
icebp
shlb
int3
mov
lock
outsl
mov
fistps
pop
adc
xchg
movl
dec
fdivrs
dec
gs
pop
imul
scas
and
inc
dec
ret
popf
scas
ja
sahf
mov
shl
jnp
adc
pop
jae
ljmp
pop
sti
push
movsl
mov
xchg
pop
push
mov
lret
xchg
sbb
scas
add
fildll
roll
int3
jg
lahf
or
cmp
mov
jg
sub
sbb
cs
xchg
int3
clc
dec
sbb
flds
cmp
dec
fistpll
lds
jp
jae
outsl
fsubr
sbb
popa
push
ljmp
adc
je
shlb
mov
rorl
dec
xchg
pop
stos
cltd
ja
mov
pop
lds
lret
repz
xlat
rclb
dec
rclb
inc
fsubrl
and
inc
and
push
mov
aaa
aad
popf
bound
ljmp
mov
pop
fs
and
jmp
iret
stos
adc
arpl
xor
shlb
jecxz
add
mov
bound
ja
fcoml
dec
xchg
xchg
pop
xlat
ds
std
shl
pop
repz
push
rcrb
rolb
sbb
inc
push
cmp
dec
pop
sahf
aad
cs
jbe
jae
jmp
xlat
movsl
jmp
sbb
inc
sar
jb
sbb
mov
dec
pop
sbb
repnz
inc
lods
out
daa
push
mov
inc
enter
adc
pop
dec
cmp
mov
repz
mov
inc
fwait
push
fadds
sbb
hlt
inc
mov
xor
mov
fstpl
divb
add
clc
xchg
out
je
xor
orb
fiaddl
xlat
jns
stos
repnz
repz
jo
cmp
aad
call
ljmp
push
dec
mov
mov
mov
in
xchg
clc
mov
dec
add
sub
pop
aad
adc
cmp
dec
mov
push
pop
sbb
icebp
mov
aad
fisttpl
out
scas
mov
mov
push
fsub
lcall
xlat
dec
dec
sbb
and
sbb
push
xor
cltd
dec
mov
sbb
in
xchg
xor
sbb
loop
xor
adc
add
iret
mov
fcmovu
test
or
sbb
sub
pop
repz
pop
cmpb
pop
cbtw
add
lds
pop
adc
fcomps
enter
fcompl
lret
mov
gs
bound
pop
sbb
mov
mov
pop
add
rol
loope
iret
enter
movsb
xchg
jae
cmp
xchg
lds
nop
scas
mov
push
int3
pcmpgtd
pop
ficoml
dec
enter
push
cltd
push
test
add
sbb
adc
push
cwtl
xchg
out
rorb
adc
xor
and
pop
xor
fs
mul
xlat
js
sahf
ret
inc
roll
sub
adc
mov
add
and
test
inc
push
and
xorb
cmpb
aaa
adc
popf
push
mov
or
dec
adc
mov
xchg
mov
popf
adc
dec
ja
push
adc
aad
dec
jns
lret
mov
out
scas
cmp
xchg
cmp
inc
lds
jae
pop
sahf
mov
pop
jmp
inc
dec
test
icebp
out
xchg
jbe
and
mov
dec
adc
add
dec
sbb
xchg
dec
mov
jne
test
cmc
xchg
fs
jecxz
loopew
xchg
scas
fdivs
pop
jae
and
fsts
lods
repnz
ret
cmp
lret
xchg
mov
cmp
adc
mov
lods
or
dec
jb
iret
lock
popl
repnz
lahf
stos
cmp
xor
mov
mov
xchg
mov
or
cli
loope
and
push
data16
sti
sub
xchg
inc
add
or
mov
out
rcll
aad
or
cmpsl
adc
push
adc
pop
push
ret
pop
inc
push
imul
mulb
roll
dec
jb
test
fdivr
mov
inc
sbb
fmul
not
sub
jnp
pop
adc
test
and
jecxz
data16
loope
pop
and
insb
movsb
xchg
dec
out
fdivrs
sarb
testb
push
gs
xchg
shr
xchg
dec
lret
aad
lcall
cwtl
sbb
xchg
mov
xchg
sar
es
sbb
insb
mov
xchg
mov
xchg
dec
movsl
testb
fdivrp
das
into
mov
adc
xchg
jne
adc
mov
cli
sbb
or
imul
iret
pop
pop
push
shrl
or
scas
das
xor
cwtl
jne
mov
or
add
xorl
xor
adc
sub
cmp
mov
push
xchg
div
mov
cltd
xor
ret
orl
ret
inc
jecxz
shlb
mov
filds
mov
mov
push
push
fstps
ds
dec
or
inc
mov
test
dec
inc
fs
loop
mov
leave
sub
sub
inc
and
data16
sbb
es
ror
xchg
dec
sarb
cmpsb
cmp
mov
sbb
nop
mov
cmc
cltd
int3
insl
dec
sub
pop
out
pop
lcall
fbld
adc
push
mov
fsts
mov
push
adc
dec
inc
sti
ja
xchg
scas
fwait
xor
fdiv
lret
inc
sahf
roll
outsl
cmp
bound
adc
cmp
dec
repnz
sahf
cmp
fidivs
fidivrl
pop
lds
cmp
jb
into
xlat
inc
pop
loop
pop
xchg
push
cs
or
fcoml
cli
es
push
pop
adc
mov
ljmp
orl
icebp
dec
mov
test
push
movsl
adc
inc
int3
fidivs
pusha
xchg
xlat
mov
cwtl
xchg
bound
adc
or
es
popf
cmp
or
dec
push
mov
movb
push
pop
adc
jae
cli
pop
jmp
adc
and
pushf
int
cmc
cltd
sti
es
cltd
imul
repz
sbb
lahf
lcall
push
stos
jl
jmp
ds
xor
aad
int3
dec
adc
xchg
pcmpeqd
setb
cld
clc
dec
mov
adc
inc
test
dec
inc
nop
adc
mov
inc
sub
adc
or
pop
sbb
sub
mov
daa
rorb
cltd
mov
push
mov
mov
dec
repz
mov
add
xor
lahf
jnp
dec
fcomps
stos
add
fisubrs
mov
into
mov
mov
fs
sahf
or
and
call
mov
cld
cwtl
std
mov
stos
sub
inc
push
ret
xor
mov
adc
mov
sub
adcl
imul
jmp
mov
mov
jp
pop
in
sbb
jecxz
push
out
int3
mov
in
aam
pop
mov
mov
adc
add
pop
in
stos
inc
aam
dec
push
sub
add
pop
xchg
in
push
aam
rcr
xor
fisttps
mov
fdivs
inc
clc
or
mov
jl
mov
aam
fdivs
adc
aad
mov
in
adcb
gs
dec
push
pop
repz
imulb
rclb
test
int3
adcl
in
imul
jecxz,pt
lods
mov
pop
mov
fwait
pop
mul
mov
rcrl
xchg
xchg
cltd
fisubs
add
xor
notb
in
xchg
mov
in
call
sbb
fdivrs
cmc
pop
jmp
das
or
pop
loope,pt
fcom
xchg
scas
mov
pop
pop
inc
arpl
mov
adc
xor
xor
imul
sbb
dec
outsb
mov
dec
inc
mov
dec
sahf
notb
imul
dec
sti
push
cmp
inc
fildll
sbb
cmpsl
and
mov
fiaddl
jmp
rcrl
nop
dec
mov
and
pop
inc
pop
dec
imul
lods
scas
xchg
dec
addr16
imul
clc
cs
int3
loope
adc
cbtw
xor
clc
and
pop
push
mov
xchg
mov
int
stc
jnp
push
fdivrl
add
rcl
sbb
into
pop
xchg
aaa
lds
jbe
mov
add
bound
rcll
into
fsubrs
dec
loope
lret
or
push
sub
aam
loope
lcall
sbb
or
xchg
push
xchg
std
cmp
xchg
dec
cmpl
sub
mov
aad
int
test
cmp
adc
xlat
cmp
rclb
es
out
pop
push
inc
data16
in
sub
int
shrb
pusha
xchg
jg
negb
jle
ja
ficompl
push
xor
push
sub
and
pop
daa
mov
push
push
pop
push
cmpsb
xchg
test
test
stos
stc
lods
xor
data16
notb
sub
fdivl
adc
mov
bound
push
xor
lods
bound
inc
pop
fsts
jnp
nop
mov
mov
mov
xor
sarl
aas
iret
dec
dec
dec
and
cmp
pop
cld
push
pop
jge
insb
mov
push
outsl
addr16
inc
cwtl
inc
ret
aas
push
mov
or
push
mov
test
pop
mov
fcoml
out
adc
mov
sub
mov
mov
pusha
loope
ret
insl
shll
jmp
mov
sahf
lret
cwtl
mov
mov
iret
sbb
pop
mov
out
xchg
dec
sbb
lds
fidivrs
pop
js
dec
fadds
jno
mov
mov
pusha
shll
insb
fstl
repz
pop
fisttpl
fmuls
shlb
or
add
shlb
js
aas
repz
or
clc
daa
cmc
out
fadd
loop
inc
in
pop
imul
std
cmp
nop
scas
inc
xchg
lods
out
neg
add
xchg
push
repnz
gs
call
mov
cmpb
inc
roll
pop
in
nop
adc
cmpsb
jb
ljmp
adc
jmp
adc
ljmp
loop
arpl
shrl
cmp
aam
fnop
inc
adc
int3
popa
xor
mov
std
lds
push
xchg
xchg
out
and
cmpsb
cmp
cmpsb
and
dec
push
inc
pop
xor
pop
cwtl
cwtl
push
aad
mov
push
pop
cmpsb
or
adc
xchg
fwait
mov
cmp
cmpsb
mov
fdivs
jmp
or
dec
out
dec
rclb
push
cmp
stos
into
mov
rclb
sub
popa
push
mov
jb
movsl
int
and
adc
adc
test
push
div
bnd
dec
je
xchg
mov
mov
fwait
jno
sets
pop
arpl
push
stos
fisttpll
jg
adc
lea
mov
xchg
nop
push
push
div
inc
ja
mov
sbb
mov
repnz
jge
in
test
faddl
or
and
xor
icebp
scas
dec
aas
in
ljmp
or
adc
dec
insl
inc
jbe
xor
add
frstor
fimull
cs
xchg
fcom
xchg
xorb
mov
inc
shl
testb
scas
and
dec
cwtl
adc
inc
xor
es
aad
mov
adc
lock
lea
enter
das
dec
mov
cld
pop
push
out
dec
loop
aaa
imul
aam
stos
adc
shr
adc
cmpxchg
scas
fwait
rcll
mov
and
das
push
mov
or
cmp
fsubr
imulb
push
xchg
addb
mov
pop
or
jle
fld1
iret
jne
testl
mov
js
sbb
push
ror
xchg
sbb
test
and
lcall
pop
mov
sub
xchg
movsb
mov
rcl
sahf
xchg
bound
jne
push
arpl
push
mulb
ds
test
lahf
sbbb
inc
shlb
cwtl
and
ds
pop
int3
jbe
cmp
leave
aam
ljmp
repz
lret
shlb
xchg
or
insl
aam
sub
or
mov
or
popl
push
int3
sub
or
and
test
nop
es
jmp
dec
int
and
push
mov
pushf
stos
fnstsw
flds
mov
lret
notb
fwait
inc
fsubrs
mov
push
pop
arpl
xchg
mov
xchg
dec
inc
xchg
loop
cmp
dec
add
push
dec
xchg
pop
loop
int3
test
aas
mov
sahf
cmp
imul
mov
and
sbb
stos
push
mov
or
inc
push
test
xchg
imul
lret
xlat
test
fldl
jns
xchg
push
xchg
jae
mov
adc
rcl
push
push
inc
stos
popf
mov
push
imul
call
dec
adc
ret
mov
popa
and
push
adc
sub
push
stos
sbb
dec
ss
adc
jg
in
test
adc
jg
data16
mov
mov
add
fsubs
pop
add
xor
cwtl
out
ja
push
dec
push
cltd
add
insl
insb
cmp
das
or
xchg
dec
cltd
imul
insl
pop
mov
adc
mov
aad
push
pop
lds
in
idivb
push
fldt
jecxz
xchg
adc
mov
dec
push
ljmp
add
mov
cmp
cwtl
jae
mov
scas
and
xorl
push
mov
rcrl
cmpb
pop
jle
shll
adc
jecxz
push
and
jl
sahf
clc
sgdtl
xchg
push
pop
mov
test
mov
mov
gs
sub
mov
insl
xchg
lds
pushw
sbb
xchg
lret
adc
orl
lret
pop
push
jbe
test
mov
int
daa
pop
or
out
stos
sub
and
ljmp
enter
div
xchg
xchg
cmp
scas
ret
lods
lret
mov
es
mov
and
fmulp
das
pop
aas
pop
push
fcoms
daa
xor
xchg
pop
mov
neg
push
in
adc
gs
stos
fcom
cmpsb
shll
ss
jb
xor
in
inc
push
inc
ds
data16
inc
mov
mov
lods
data16
mov
xchg
mov
stos
or
jecxz
or
sbb
int3
cltd
inc
mov
movsl
ljmp
test
movsb
or
pop
push
fidivrs
cmp
ret
mov
out
repz
mov
stos
int
xchg
scas
sub
adc
popf
xchg
hlt
shrl
sbb
fisttpl
inc
mov
and
xchg
hlt
sbb
fldl
leave
insl
test
dec
and
cmpsl
mov
add
or
out
sub
inc
pop
lret
pop
dec
jnp
jge
pop
sub
hlt
mov
push
pop
and
sub
leave
scas
shrb
cmpsb
jb
xor
cs
out
mov
adc
std
sbb
shl
mov
cld
mov
fdivr
out
cmc
push
xlat
insb
mov
dec
sbb
call
jl
sub
lret
sbb
and
inc
rcrb
mov
push
imul
mov
adc
jne
inc
ret
push
fdivl
aam
ss
insb
mov
por
jl
pop
and
xchg
inc
inc
packsswb
lods
push
inc
pop
jbe
push
icebp
mov
dec
push
push
rorl
aas
mov
daa
subb
jbe
arpl
call
mov
test
inc
ds
add
push
aad
push
cli
int3
dec
insl
mov
xor
push
pop
enter
cli
out
movsb
push
rorl
or
fsts
les
scas
jmp
aad
scas
mov
sub
xor
xchg
jo
movsl
inc
in
loope
lds
inc
lea
fidivl
push
mov
xchg
das
xchg
add
sbb
ljmp
ret
adc
ljmp
mov
jne
shlb
repz
inc
push
push
stc
mov
add
rcll
shrl
mov
ja
add
lret
pop
xor
sub
jnp
inc
mov
les
or
arpl
enter
js
sarl
add
sarl
stos
shlb
rcl
mov
and
dec
rol
mov
dec
push
int3
mov
movsb
adc
and
push
mov
and
mov
inc
jbe
mov
sbb
xchg
in
sti
leave
sbb
mov
ret
fcoml
insb
cmpsl
push
and
and
cmp
mov
xor
pop
aad
mov
jb
push
lret
call
jle
aad
push
lods
push
cmp
dec
leave
fs
das
cwtl
push
inc
adc
mov
insl
mov
jns
dec
mov
dec
and
fdivrs
jg
aad
fdivs
pushf
jnp
shrl
out
jge
add
je
push
fsubrl
divl
loope
push
das
add
movb
popf
sti
lods
jl
orb
incb
mov
shll
sub
call
xchg
inc
cmp
es
sahf
daa
pop
push
push
jbe
push
jg
cmc
adcl
lds
push
mov
xor
or
mov
mulb
inc
inc
xchg
dec
mov
lahf
fmul
and
mov
sub
ret
add
add
push
dec
adc
ds
and
push
rolb
cwtl
sahf
jmp
jns
push
and
jg
mov
in
ljmp
jecxz
cmp
dec
jle
cmp
cmp
mov
aas
sub
push
push
sbb
sub
fsubrl
inc
dec
out
and
ds
push
push
push
pop
cltd
aad
lods
out
loope
stos
sbb
mov
sub
cmc
pop
mov
or
sub
xchg
cmc
mov
jge
loopne
dec
inc
imul
pop
sbb
loope
cmpsl
out
push
cwtl
or
cmp
aam
sbb
pop
fnstsw
aas
adc
mov
mov
pop
xchg
cmpb
push
mov
out
adc
push
mov
pop
lcall
and
xor
cli
or
inc
sub
ljmp
mov
mulb
imul
add
xor
push
jnp
ret
mov
es
mov
mov
or
and
adc
or
int
xchg
sbb
outsb
je
and
fs
mov
xchg
pop
ret
mov
lret
mov
mov
mov
mov
scas
ss
adc
xchg
and
sbb
pop
rcrl
jmp
pop
and
xchg
mov
pop
lret
aas
nop
pop
push
dec
rcl
fnstenv
jl
or
aad
mov
aad
and
test
sbb
xor
push
mov
repz
jnp
shlb
pop
cli
es
iret
inc
js
jb
dec
lret
into
fmull
dec
cld
xor
sub
sahf
ret
push
dec
or
inc
mov
dec
add
loop
push
push
lret
jge
daa
push
loopne
icebp
mov
rorb
mov
fld
int
xchg
aad
loopne
cmp
mov
xor
push
ret
add
aam
push
jnp,pn
pop
pusha
mov
xchg
push
xchg
dec
mov
push
mov
flds
push
cli
push
pop
and
sbbb
dec
inc
xor
dec
popf
dec
pop
dec
out
fs
mov
sub
mov
ljmp
jmp
test
jnp
mov
xchg
shl
and
mov
add
dec
pusha
push
enter
adc
in
dec
sub
ds
test
mov
push
ljmp
sarb
push
inc
dec
jle
adc
and
push
xchg
enter
into
mov
idivb
cli
nop
push
mov
pushf
mov
adc
mov
scas
push
aad
dec
xchg
hlt
and
fwait
push
mov
loopne
fmul
add
adc
data16
addr16
pop
sub
inc
pop
test
ljmp
leave
jbe
cli
push
dec
into
shrl
inc
sbb
cwtl
push
clc
stos
push
jne
jmp
shll
int3
sub
imul
mov
outsl
aaa
jnp
mov
add
es
inc
leave
repz
jbe
dec
mov
mov
xchg
and
sti
fmuls
sbb
inc
dec
and
jne
sub
add
fists
or
fidivl
dec
ss
xor
sbb
xor
inc
xchg
out
jp,pt
es
xchg
sub
mov
loope
mov
jl
adc
ss
mov
hlt
mov
jne
dec
fcom
stos
mov
or
popa
iret
mov
mov
std
push
mov
or
aam
jmp
and
bound
dec
mov
hlt
scas
mov
add
icebp
push
inc
or
xor
pusha
xor
lcall
jae
notb
pop
jnp
sbb
pop
int
sahf
push
pop
les
ficoms
pop
xchg
adc
ja
xor
adc
adcb
mov
fbstp
divb
int
and
push
addb
out
sbb
xchg
dec
add
cmp
sub
fcmovnbe
xor
clc
ds
sti
and
lretw
in
in
jnp
bound
out
add
lahf
ficoms
push
aas
repnz
jge
jl
push
leave
mov
xchg
mov
cmc
mov
xchg
popf
and
int3
dec
ljmp
stc
pop
push
and
jnp
repnz
adc
rorl
out
pusha
fisubs
pop
xchg
pop
cltd
cmp
and
dec
movsb
pop
push
mov
add
jmp
adc
rol
inc
aas
mov
daa
loopne
push
add
rcll
adc
inc
stos
push
fstl
shrl
mov
jl
inc
dec
dec
cs
in
push
lret
fdivrs
enter
orb
mov
xchg
or
in
pop
or
fimull
rorl
loope
mov
test
dec
cld
fsts
dec
push
mov
pop
adc
and
insb
data16
aad
rcll
jmp
in
mov
xchg
cmp
xor
pop
dec
jbe
jne
mov
pshufw
int3
insb
icebp
mov
out
inc
ljmp
xchg
adc
adc
cwtl
lock
sahf
or
mov
jl
cmp
pop
push
adc
bound
push
lods
popf
pop
icebp
lret
or
push
xchg
call
jbe
in
mov
loope,pn
fdivl
fisttpll
sbb
mov
int3
inc
popa
add
or
in
mov
inc
push
push
push
repnz
stos
mov
test
dec
pop
add
push
push
xchg
je
imul
push
enter
inc
push
ds
loope
sub
cld
shll
xchg
out
mov
fstpt
mov
stos
insb
pop
push
in
shl
loop
fsubl
cmp
int3
idivb
inc
lret
adc
pop
push
stos
inc
adc
add
sub
loope
in
sub
add
pushf
push
adc
ds
rcl
loope
lock
adcb
aad
insb
jmp
xchg
add
cs
mov
rcr
xchg
push
ja
ret
fsubrs
das
mov
mov
push
adc
xlat
addr16
and
es
stc
and
push
fdivs
xchg
dec
inc
jb
dec
adcl
cmp
push
jnp
not
mov
sub
push
add
push
xchg
stos
push
arpl
push
fs
and
mov
adc
hlt
iret
and
call
jmp
fcoms
xchg
add
gs
adc
testb
xchg
cwtl
push
inc
xchg
lds
lcall
dec
mov
test
scas
out
and
xor
lods
lock
mov
dec
hlt
cli
sub
mov
jg
jge
adc
aam
add
and
push
cmc
xchg
dec
shll
cmc
adc
xor
xor
bound
pop
and
fdivs
push
bound
ss
or
dec
pushf
sahf
lcall
stos
dec
fadds
mov
rorl
inc
dec
jo
cmp
das
cwtl
lods
adc
popl
int3
mov
fs
push
inc
xor
jno
pop
mov
xchg
pop
loop
bound
adc
adc
imul
cmp
jbe
push
push
add
add
and
push
add
cmp
stc
fs
stos
push
xchg
insb
enter
mov
mov
fsts
add
cmp
mov
and
jae
fcoms
cltd
sahf
mov
outsl
add
in
pop
push
or
imul
ror
loope
mov
push
mov
hlt
jno
ja
xchg
je
int3
jmp
test
adcb
push
jno
inc
pop
and
or
rol
test
lods
into
cmp
cli
repnz
xchg
out
fimull
and
mov
cmp
pushf
negb
and
and
lahf
gs
fdivrs
adc
dec
push
mov
xor
pop
je
dec
mov
mov
mov
scas
lcall
ss
pop
in
dec
mov
xchg
fcmovbe
dec
lods
inc
jbe
push
add
dec
sub
xor
cmp
loopne
bound
add
push
call
sbb
in
and
mov
outsb
pop
cli
adc
aas
add
adc
adc
leave
aas
aad
mov
push
sarl
cmp
loop
dec
fimull
xchg
adc
gs
gs
pop
push
test
into
add
sub
and
jl
xor
push
dec
shlb
shl
dec
xchg
in
push
repnz
mov
lret
clc
inc
dec
mov
neg
push
xchg
mov
fcoms
sbb
xchg
adc
mov
sub
out
stos
test
test
stos
frstor
jl,pt
lcall
jg
cwtl
loop
mov
xchg
sub
push
popa
pop
add
rcl
fs
xchg
scas
adc
lret
pop
pop
push
inc
sbb
add
mov
enter
sahf
push
cmp
ret
fdiv
cmp
scas
adc
inc
mov
out
rorl
sahf
je
es
xchg
out
nop
jle
cmc
xchg
dec
cmp
maskmovq
testl
mov
mov
adc
cmp
dec
scas
ret
lea
or
xor
and
int3
loopne
int
insl
arpl
and
inc
ficoml
lods
adc
insl
gs
sbb
push
dec
je
icebp
push
xor
xor
ret
je
test
cli
push
jp
dec
mov
lret
pop
out
outsl
aam
jno
popf
imul
and
lea
iret
clc
push
dec
loopne
data16
and
pop
add
fnstcw
test
xchg
rorb
adc
dec
xor
mov
pop
call
outsl
dec
dec
ret
jo
fwait
test
fstps
sub
and
sbb
cmp
mov
pop
movsl
loope
bound
cmp
or
mov
adc
xchg
dec
inc
cmpl
push
pop
dec
adc
cmp
clc
sub
and
xor
cmp
out
stos
ret
lds
das
scas
aam
sti
dec
sbb
inc
lret
jnp
dec
hlt
push
add
dec
lret
and
jo
cmpsb
sbb
addb
mov
xor
das
nop
jo
ret
out
add
add
int
xlat
out
dec
add
or
sbb
sub
adcl
adcl
addr16
stos
pop
cli
int
dec
sub
jecxz
xor
mov
scas
repz
movsl
pop
sbb
jbe
mov
sahf
push
stos
lahf
flds
adc
mov
dec
jge
pop
mov
or
cwtl
push
fadd
mov
dec
cmp
popf
mov
lock
outsb
mov
out
rorl
loop
jnp
dec
adc
shlb
test
add
shll
hlt
xchg
in
loope
cmp
xor
fsubrl
jno
cmpsl
data16
inc
mulb
data16
int3
call
and
jmp
and
or
scas
pop
es
pusha
jmp
push
jbe
sbb
ds
clc
push
inc
pop
out
xchg
push
inc
adc
popf
fnstcw
in
call
loope
decb
lods
fistpl
xor
test
cmpsl
sub
adc
xchg
sahf
inc
adc
movsl
mov
dec
lret
jae
cwtl
leave
fwait
xor
xor
into
xchg
dec
popa
cmp
inc
jmp
out
xchg
ja
adc
xchg
or
add
aam
xor
pmulhw
xor
ljmp
lods
adc
icebp
dec
push
imul
push
lds
xchg
dec
gs
aaa
mov
in
sub
and
data16
notl
inc
jmp
dec
ds
sub
lods
aaa
lock
push
push
mov
aam
adc
adc
aas
cmc
adc
push
pop
pop
pop
jmp
push
push
jmp
xchg
das
dec
pop
adc
jnp
test
or
lret
cmp
aad
or
mov
jno
arpl
hlt
adc
dec
into
push
sub
inc
fdivr
cmp
lock
enter
es
jbe
testb
pop
jne
xchg
mov
sti
arpl
pop
cs
rorl
mov
popa
mov
xchg
out
rorb
int3
test
lret
xchg
or
dec
stos
dec
ja
mov
pop
leave
test
or
xchg
dec
jo
sbb
ret
lret
fdivl
lret
fimuls
aad
stos
movups
inc
pop
dec
jo
out
out
adc
xor
mov
fdivrs
adc
idivb
aad
out
jp
mov
sbb
push
gs
in
sub
cmpsb
or
daa
lds
stc
or
les
pop
or
adc
or
mov
mov
lock
sub
inc
xor
into
inc
and
or
lods
mov
testl
pop
add
adc
rcr
in
mov
xchg
xchg
adc
outsb
lret
insb
push
sub
cmp
pop
dec
std
sti
xor
ficoms
movsl
int3
aad
mov
dec
adc
out
pushf
aad
lea
push
dec
push
dec
dec
insb
or
out
into
xchg
pop
shlb
orl
adc
mov
push
mov
sub
xor
xorb
jb
jne
clc
push
xlat
repnz
inc
pop
xor
inc
jmp
js
mov
jo
in
push
imul
outsb
xchg
dec
dec
push
setle
fwait
add
xchg
fidivrl
or
aas
cmp
ret
imul
les
data16
mov
adc
mov
pop
fsubrs
sti
cmp
shlb
mov
mov
shll
shl
imul
fistpll
adc
subb
ret
xor
jo
pop
xchg
dec
cmp
cs
leave
andb
dec
xor
sbb
clc
push
cmpsl
add
push
pop
subl
sub
push
leave
pop
xchg
push
and
fstl
push
jg
adc
push
rclb
sub
mov
xlat
scas
adc
cs
push
cwtl
xor
add
pop
mov
sub
and
pop
adc
pushf
out
aam
dec
loop
test
push
pop
push
and
mov
adc
mov
mov
cld
movsb
cmpsl
outsl
out
dec
ljmp
and
aad
push
xchg
inc
push
bound
idivb
and
push
or
push
icebp
inc
push
xchg
repnz
enter
in
int3
mov
inc
mov
btcl
pop
mov
push
adc
xor
out
mov
sahf
add
xchg
fwait
pop
mov
lret
ds
insb
add
fsubr
dec
xchg
icebp
xor
pop
repnz
pop
out
test
lds
mov
adc
sbb
shlb
test
fcoms
push
xchg
sub
psubb
imul
in
mov
imul
add
mov
loop
add
or
lods
cld
mov
call
sub
or
inc
or
mov
dec
sub
cmp
aam
aas
test
xchg
inc
dec
pop
xor
xchg
jnp
push
xchg
outsb
rorb
ds
xor
sbb
pop
stos
js
lret
adc
fnstenv
adc
and
out
shl
call
push
jg
add
movups
loope
jmp
cmp
pop
fcmovnu
inc
mov
frstor
mov
inc
bound
ljmp
test
or
xor
pop
rolb
mov
test
mov
xorl
in
aad
mov
cmc
mov
mov
mov
mov
shrb
mov
pusha
mov
dec
mov
push
faddl
lret
sbb
dec
out
jl
add
out
addl
std
int3
xor
lods
sbbl
enter
mov
das
mov
xchg
or
test
adc
js
cmc
sbb
testb
or
out
mov
and
pusha
aaa
mov
or
ds
shl
shlb
mov
into
pop
lret
movsl
inc
repnz
sub
mov
rol
pop
lds
cwtl
es
dec
pop
adc
xchg
cwtl
rcll
dec
fsubrs
ss
in
lea
pop
adc
push
sub
adc
push
in
push
rorl
ret
xchg
ret
into
ret
push
ret
dec
call
call
lea
sarb
nop
out
adc
aam
adc
pusha
xchg
mov
adc
lret
push
inc
adc
js
pop
mov
leave
in
push
dec
push
mov
call
mov
into
dec
lret
int
dec
or
push
dec
dec
shrb
xchg
dec
das
push
ss
sahf
ror
xor
adc
mov
aad
rcl
lcall
inc
rcll
sbb
sbb
or
into
ss
shrl
jle
xlat
fstpl
xchg
fdivrl
mov
and
es
and
xor
push
loop
adc
leave
inc
fcmovbe
jbe
scas
aad
mov
xchg
lea
imul
xchg
cwtl
int3
leave
dec
push
pop
into
rorb
adc
in
fistps
xor
push
jge
int3
mov
xchg
repnz
mov
call
cmp
xor
ja
rcll
out
mov
pop
adc
rcll
dec
insb
sub
fxch
dec
cwtl
cmpsl
mov
sub
jge
push
pop
cmpsl
and
jge
insb
lods
adc
lds
incb
data16
jmp
outsl
xor
mov
cwtl
cmp
and
sub
aad
adc
inc
int
loope
mov
jne
js
scas
mov
cmp
loope
xor
dec
add
jge
inc
mov
mov
aad
and
imul
cltd
or
stos
pop
pop
repnz
test
pusha
xchg
push
jb
cmp
mov
sbb
mov
pop
and
pop
shr
repz
mov
xor
fs
jecxz
popa
mov
sti
dec
loope
push
inc
jb
sub
ljmp
addl
add
cmp
stos
cmpl
cmp
lret
mov
jnp
add
lret
rcrl
push
xchg
mov
pop
and
pop
repnz
es
out
dec
imul
mov
ret
and
icebp
add
les
push
orl
dec
adc
pop
andl
jge
push
pop
dec
push
rclb
add
pusha
ret
xchg
aaa
loopne
mov
or
xor
ret
push
scas
mov
inc
lea
inc
sbbl
popf
xor
lret
imul
or
push
inc
adc
mov
ret
mov
mov
lods
outsl
aad
rorl
sub
add
xor
dec
mov
gs
fsubl
test
jb
cmp
xchg
adc
or
cmpsl
sub
inc
mov
push
jns
popf
pop
les
loop
adc
les
mov
dec
adc
mov
xor
xor
pop
cmp
push
push
iret
or
sti
ss
mov
dec
xchg
addr16
add
add
shl
loope
dec
sub
mov
xor
in
and
stos
mov
inc
dec
mov
jae
adc
in
mov
cmpsl
ja
xchg
pop
and
rorl
jnp
out
add
jl
adc
lret
imul
mov
mov
and
adc
fdivrs
sbb
pop
push
and
jp
add
sub
dec
mov
mov
loope
xchg
xchg
adc
dec
jb
mov
mov
loop
xchg
jnp
mov
lods
ljmp
stos
jns
gs
mov
jnp
jle
mov
push
or
mov
pop
jae
movsb
clc
pop
xchg
sbb
xchg
iret
jnp
sub
in
cmp
xchg
cmp
mov
inc
cli
data16
push
gs
mov
push
orl
mov
xchg
xchg
enter
mov
lcall
push
or
inc
inc
leave
adc
rorl
xchg
sahf
and
push
call
fcos
push
ss
ja
push
adcl
mov
add
sub
mov
lea
frstor
shll
jmp
cmpsl
jle
fsubs
inc
cmp
mov
and
loope
xchg
inc
repnz
jno
xchg
jb
lcall
hlt
aad
iret
subb
mov
jbe
pop
jno
sahf
cmc
adc
or
sub
fimuls
lea
adc
jp
cmp
xlat
push
test
push
mov
test
nop
in
mov
dec
sub
roll
fldcw
sub
jnp
cltd
ficoml
mov
mov
cld
pop
xchg
mov
jl
pop
mov
push
out
in
or
mov
sti
cmp
push
mov
jbe
push
shlb
rcl
pop
aad
push
rcrl
xchg
imul
inc
xor
push
dec
and
xor
test
test
pop
mov
int3
inc
ss
mov
pop
mov
rcrl
in
ds
mov
xlat
mov
popa
and
jge
mov
xor
and
or
scas
test
dec
xor
adc
dec
rcl
rorb
rclb
in
dec
nop
or
mov
xor
outsl
jo
jmp
xor
enter
pop
and
push
clc
or
insl
in
push
test
or
ja
test
icebp
aaa
cmc
lea
mov
roll
lahf
mov
call
repnz
sbb
adc
cwtl
push
stos
fnsave
and
fimuls
add
das
daa
push
cld
adc
push
sahf
push
sahf
sub
adc
aad
dec
push
leave
pop
jne
ja
daa
add
in
icebp
pop
xchg
cmp
hlt
push
xchg
or
or
sar
call
mov
lret
sub
mov
out
push
and
xchg
jne
cmp
imul
lcall
enter
lret
push
es
push
pop
mov
shr
lea
icebp
sbb
sub
push
shll
sbb
cmp
adc
int3
xor
enter
insl
dec
push
mov
shl
push
bound
sub
ret
sbb
pop
dec
aaa
test
dec
cs
mov
nop
dec
mov
add
sbb
adc
sub
xchg
ret
cmp
pop
in
cmpsb
rolb
mov
jnp
or
cs
xchg
dec
sbb
push
cli
adc
lret
stos
and
mov
dec
les
loope
imul
mov
adc
loope
xchg
or
mov
inc
ds
jnp
pop
popf
idivb
daa
push
loopne
jecxz
repnz
lds
ficoml
shrb
dec
sbb
ds
push
loope
ret
mov
and
push
jle
jmp
inc
inc
repnz
jo
adc
rcrb
out
dec
fstpl
lock
push
bound
sbb
rorl
inc
lods
pop
aad
out
mov
jecxz
cmp
mov
mov
popf
loope
and
test
enter
mov
outsb
jl
pop
inc
xchg
aas
dec
pop
and
femms
mov
icebp
stc
rcll
fwait
call
lcall
adc
adc
mov
and
mov
cmp
and
mov
shl
sub
jp
ret
pop
sti
scas
outsb
adc
aad
mov
dec
push
jno
in
leave
cmc
dec
mov
adc
dec
jae
xlat
mov
cli
divb
push
jne
std
ljmp
enter
ret
sahf
push
add
arpl
dec
pushf
stos
push
jae
or
ret
add
push
xchg
adc
test
cltd
popa
jne
jb,pt
adc
lods
jmp
daa
mov
fistps
cmp
mov
imul
jnp
add
int
dec
mov
mull
push
mov
and
out
mov
rcl
loopne
sbb
rolb
xchg
mov
or
mov
push
lcall
daa
and
dec
sbb
rcl
push
or
dec
pop
inc
jg
shl
inc
mov
rcl
xor
pop
mov
adc
pop
out
arpl
aad
fmulp
stos
dec
dec
bound
add
gs
sbb
cmp
pop
dec
mov
arpl
pop
mov
push
mov
xchg
xchg
mov
cwtl
cmp
xchg
cmp
mov
cmpsb
push
pop
mov
inc
test
jecxz
test
pop
mov
popf
sbb
mov
popf
cmc
dec
inc
or
sub
dec
sbb
jecxz
push
fnstsw
std
adc
sbb
adc
add
sbb
repz
pop
push
das
bound
xlat
inc
cmp
and
and
add
adc
mov
aam
or
push
test
shrb
outsl
and
jo
stos
push
pop
fcmovne
xor
cmp
push
out
ds
and
jecxz
cmpsb
stc
stos
xor
mov
mov
push
mov
stos
xchg
out
jmp
test
mov
jle
mov
in
mov
daa
test
repz
fisttpl
xor
or
call
mov
mov
out
repz
aam
add
dec
mov
adc
jecxz
rcrb
lret
add
popf
fldl
lahf
xchg
mov
fadds
stos
test
lret
mov
addr16
or
cs
fildll
xorl
push
and
push
xchg
adc
push
and
pop
xchg
dec
insb
sub
dec
aad
testl
add
push
ss
cmpsb
or
or
pop
mov
sbb
inc
fsubrs
into
aad
pop
push
scas
adc
xor
pop
stc
cmpsb
cmpb
or
jl
pop
add
push
ss
call
int
push
out
push
push
aaa
mov
data16
call
aad
xchg
data16
cmc
sbb
sub
pop
cltd
push
out
or
push
sbb
hlt
nop
pop
inc
lret
cs
minps
ja
xchg
sbb
mov
pop
outsl
add
testb
stc
out
push
es
jge
pop
push
adc
add
ja
into
xorb
inc
jle
in
pop
dec
or
xor
mov
jno
andl
inc
js
test
jnp
sbb
dec
mov
stc
into
cld
pushf
dec
pop
cmp
int
add
in
adcb
pop
and
and
adc
js
push
scas
jbe
lds
sbb
pushf
adc
add
icebp
or
out
daa
inc
xor
and
dec
jns
lahf
mov
movb
in
xlat
pop
mov
push
ljmp
sub
inc
push
aas
mov
in
and
sbb
mov
pop
cld
xlat
pop
dec
pop
data16
call
xchg
test
push
xchg
neg
int
pop
cmp
rcrl
sub
mov
mov
sbb
adc
adc
shl
push
jl
cmpsl
dec
stos
std
pop
mov
mov
cmp
add
mov
adc
out
pop
xor
pop
dec
scas
adc
pop
popf
xor
scas
cmc
mov
cmp
mov
mov
sbb
and
adc
push
sarl
cmp
popf
cmp
dec
cmpl
int
mov
adc
loope
or
cmp
adc
jp
jp
outsl
fst
js,pt
popf
out
fcomps
pop
aad
pop
mov
sbb
pop
jecxz
les
cli
scas
push
mov
and
push
mov
mov
push
mov
fisubrl
dec
or
lret
and
in
cltd
add
cmp
mov
and
pop
mov
mov
popf
imul
sahf
xor
sbb
data16
mov
loope
mov
cld
or
out
pushf
leave
std
cwtl
data16
pop
jo
jmp
dec
push
imul
movsl
and
fstl
pop
xchg
jno
mov
out
add
mov
cs
sbb
fmul
cmp
outsl
sahf
mov
sub
xchg
scas
les
or
mov
mov
inc
add
sbb
call
mov
pop
jmp
sahf
push
and
jns
into
fsubrs
dec
mov
and
pop
push
out
dec
xor
cld
push
ret
inc
outsl
lds
adc
dec
sbb
push
call
in
sub
pop
jb
jecxz
repz
and
int3
sbb
cmp
sahf
pop
jge
pop
add
or
int3
mov
pop
fistps
dec
sbb
insl
sbb
sbb
push
dec
adc
call
cwtl
and
ds
fwait
push
jecxz,pt
mov
inc
test
mov
stos
and
loope
xchg
test
ljmp
adc
push
lahf
ds
shll
stos
in
mov
push
out
jp
mov
push
ret
sub
inc
cli
or
ret
fistpll
add
dec
cmp
adc
adc
pop
push
aad
mov
es
jge
mov
data16
cmp
cmp
aaa
jo
add
add
push
addr16
mov
jo
out
dec
enter
adc
clc
jmp
mov
xor
jge
push
mov
xchg
scas
add
push
fdivrs
pop
popf
out
dec
cmp
and
lods
test
fmul
in
xchg
jbe
sub
xchg
push
pop
pop
rcll
test
pop
and
cmp
dec
xchg
sub
pusha
cwtl
int
in
or
ja
aad
mov
jle
dec
jecxz
popf
sub
cmc
mov
xlat
mov
loopne
mov
or
mov
pop
push
lret
imul
inc
cmp
adc
in
scas
loopne
aad
jno
popf
ret
dec
pop
lock
call
scas
enter
pop
ja
xchg
call
adc
xor
push
loop
adc
xor
xchg
sbb
repnz
and
rcl
call
lods
jle
push
or
lods
xor
adc
xor
dec
inc
int3
xorb
leave
outsl
aad
jns
in
call
mov
clc
push
or
outsl
sub
idivb
sbb
or
js
sub
outsl
xchg
fists
add
insl
aad
push
xor
imul
cltd
push
jge
push
dec
movsb
ret
cmc
bnd
pop
enter
enter
mov
cld
or
mov
push
cltd
js
or
lods
push
and
aad
pop
add
fstpt
xchg
loope
mov
add
sbb
mov
dec
dec
mov
fstpl
pop
lea
fstl
scas
into
or
push
lret
int
int
cmpsb
mov
dec
fidivrl
cmp
mov
mov
sub
xchg
mov
inc
movsb
cmpsb
xchg
out
clc
fwait
jno
mov
jge
pop
arpl
push
test
stos
dec
mov
mov
jnp
pop
aaa
shlb
aam
rcll
dec
or
cmpsb
inc
adc
enter
aad
rcll
sub
push
jno
add
pop
push
mov
call
cmp
inc
std
dec
fstps
xlat
push
in
xor
mov
rcrb
fstl
xchg
jb
jg
pop
mov
adc
inc
shll
inc
sarl
test
loope
lds
adc
pop
insl
in
imul
mov
pop
or
and
ljmp
aaa
pop
popa
xchg
mov
cmp
ss
inc
scas
aaa
iret
outsl
pop
xchg
clc
cmp
insl
pop
pop
cmp
test
in
mov
ret
inc
jns
daa
dec
pop
push
xor
enter
cmp
adc
out
adc
andl
sub
fadds
sahf
pop
xchg
push
inc
rcl
lock
frstor
in
push
aad
call
dec
es
xchg
and
mov
push
push
out
xchg
adc
xchg
cmc
adc
mov
inc
in
mov
ds
jae
and
pushf
or
aaa
jg
add
pop
hlt
loope
data16
ljmp
rclb
xchg
push
adc
xlat
push
in
push
mov
pop
push
or
inc
pop
arpl
in
or
popa
loopne
mov
push
adc
mov
pop
addb
ljmp
gs
sub
mov
push
std
adcl
out
in
test
sbb
test
aad
lods
mov
add
in
pop
or
cs
in
dec
rclb
sbb
enter
xor
jnp
pop
mov
dec
xchg
adc
push
mov
xchg
idivl
fsubrp
ds
shrb
cld
push
int3
scas
cmp
lret
sahf
inc
test
push
test
and
adc
cwtl
aas
sbb
xor
cwtl
push
ficoml
mov
pop
push
cmp
mov
push
xchg
pop
sub
test
in
jl
xchg
mov
add
adc
push
and
fs
jbe
sub
adc
repnz
mov
stos
pop
out
add
movsl
jno
jb
mov
clc
cmpsl
repz
cmp
movsl
push
pop
jmp
rcrl
lds
jge
fistpl
jne
push
sbb
jle
divl
stos
dec
sbb
add
inc
mov
jae
lret
in
xchg
pop
xor
xor
mov
mov
popa
adc
loope
jno
data16
aam
roll
mov
mov
jmp
lea
popl
push
stos
dec
stos
adc
stos
std
lds
push
dec
push
jmp
pop
adc
ljmp
imul
and
test
mov
sub
pop
dec
cmpsl
inc
inc
fldenv
icebp
je
jg
push
fidivl
xchg
jb
dec
mov
lock
sub
call
test
jl
rclb
test
dec
sbb
or
dec
cmp
dec
stc
sbb
add
jp
fnstcw
mov
jp
call
mov
xchg
mov
dec
push
fildl
loopne
and
inc
filds
test
xor
scas
or
jmp
xchg
pop
rcrb
sub
xchg
daa
ljmp
cmp
testl
push
mov
push
leave
lea
lods
xor
dec
sbb
mov
push
inc
or
int
push
loope
fimuls
dec
mov
jge
es
fidivs
add
pop
sbb
data16
subl
int
lock
out
fwait
or
popa
pop
mov
scas
adc
cmp
int
dec
adc
mov
push
push
jge
ret
shll
mov
adc
mov
and
loope
es
in
push
leave
push
mov
push
insb
pop
movsl
push
loopne
lret
inc
rclb
xlat
push
inc
fildll
in
es
add
xchg
adc
fcoms
fnstsw
ss
mov
gs
in
insl
push
xchg
ds
and
fisttpll
aad
orb
xlat
cli
push
cmpsb
or
mov
jo
adc
pusha
sbb
mov
shll
xor
ret
dec
adc
xor
push
ss
mov
mov
or
xchg
xor
ss
in
jge
sbb
gs
mov
adc
push
ss
loopne
push
sbb
loopne
aad
fdivs
add
mov
adc
sbb
in
in
lock
pop
mov
push
sub
push
fmuls
fbstp
rclb
outsl
jo
loop
or
push
jg
fidivrs
mov
xchg
enter
and
sbb
sbb
into
dec
push
mov
out
push
lods
into
hlt
out
in
cmpsb
cs
xor
outsb
cmpsb
xor
es
adc
orb
sub
popa
adc
lock
mov
mov
xchg
scas
push
mov
call
xchg
call
dec
sub
jp
dec
mov
mov
or
call
mov
dec
or
or
pop
out
testb
adc
scas
ror
push
dec
dec
adc
mov
in
sbb
push
and
push
add
push
add
dec
faddp
adc
and
xor
inc
rcr
sbb
pop
mov
gs
mov
xlat
push
pop
mov
testl
dec
xchg
or
ds
scas
out
cmpsb
cmpsl
dec
fbld
pusha
mov
cmc
push
pushf
xchg
dec
out
and
ret
lds
jg
pop
cld
sbb
call
mov
push
aad
fisttps
or
sbb
bound
pop
jle
shrl
xor
fstl
rcl
add
rcll
fildl
push
es
pusha
test
add
cmp
adc
adc
xchg
push
mov
push
and
out
dec
dec
and
push
inc
int
aam
adc
bound
rorb
lock
push
aad
dec
nop
adc
mov
sbb
mov
sbb
mov
sbb
push
ljmp
push
leave
adc
mov
sbb
mov
aad
int3
js
dec
or
dec
push
dec
mov
sbb
ret
or
jmp
jge
mov
scas
pushl
dec
and
or
xchg
pop
adc
push
push
pusha
divb
gs
mov
dec
xchg
call
dec
push
nop
dec
scas
gs
pop
lret
and
ret
cwtl
in
adc
mov
les
pop
les
int
dec
ja
jecxz
rcll
mov
xchg
pop
dec
xchg
rorl
clc
push
and
mov
jno
aam
rorl
adc
sbb
mov
sbb
pop
push
or
xor
push
xchg
jno
push
push
and
push
push
mov
jmp
int
xchg
mov
dec
pop
shl
mov
adc
rcr
ret
adc
mov
gs
xchg
xor
mov
es
push
test
sbb
adc
ss
pop
push
push
popa
lret
stos
fcoms
pusha
mov
push
and
out
ret
push
adc
aad
dec
call
cmp
int3
lea
enter
in
dec
dec
adc
mov
gs
xchg
stos
pop
movsl
sbb
ret
mov
mov
and
xchg
push
ss
or
add
ja
ss
popa
mov
rcrb
aad
xchg
mov
cmpsb
adc
lods
xchg
pop
shl
shll
adc
imul
daa
js
xor
xchg
pop
mov
imul
push
fnsave
push
adc
shlb
adc
gs
or
rorl
mov
adc
push
xor
ret
jno
sbb
rcl
mov
adc
xlat
fldl
push
repz
notl
mov
aad
dec
into
adc
mov
push
cmp
adc
mov
adc
or
popa
dec
or
dec
rorb
mov
adc
push
push
push
ret
iret
call
pop
lret
sbb
jp
aad
outsl
jmp
dec
lret
or
xchg
sub
mov
call
nop
fisttpll
int
mov
or
xchg
sub
mov
dec
mov
pop
repz
push
scas
xchg
ret
lea
sbb
ret
mov
inc
push
push
pop
jb
imul
sub
enter
jbe
cmpsb
aad
lds
fmuls
push
xchg
pop
fsubs
iret
sbb
pop
retw
push
xchg
xlat
and
mov
pop
dec
notl
and
adc
sbb
adc
shlb
push
add
xchg
or
shll
push
icebp
out
ret
xor
fwait
xchg
mov
aam
dec
pmulhw
pop
mov
lret
shll
mov
xor
xchg
fnsave
jecxz
es
pusha
orl
pop
adc
outsl
adc
or
xchg
lea
int
dec
adc
push
mov
mov
mov
adc
rdmsr
adc
adc
das
gs
xchg
lret
stos
call
dec
adc
mov
sbb
dec
sbb
mov
out
mov
int3
dec
pusha
pop
mov
dec
mov
push
negb
cmp
push
cmp
out
repnz
mov
push
shll
aad
mov
int
pusha
imulb
lret
xor
or
mov
dec
cmp
lahf
mov
jbe
leave
fdecstp
mov
cmpsb
aad
mov
lahf
push
adc
movups
ret
cwtl
int
dec
mov
pusha
adc
add
int
inc
mov
shlb
fdivl
push
int3
xor
sub
sub
sub
test
xchg
inc
dec
xchg
fidivl
mov
fcoms
leave
sub
mov
cmp
mov
sub
xchg
and
dec
decb
cmpsl
mov
lret
aad
dec
pop
adc
push
adc
mov
adc
mov
in
jp
shlb
femms
roll
adc
int
into
push
rorl
cld
aad
or
sub
sbb
rcll
addr16
jb
dec
xchg
push
lret
push
mov
mov
adc
push
clc
push
adc
push
pop
into
push
mov
mov
adc
out
lret
mov
call
shll
mov
or
lret
and
dec
cwtl
mov
adc
mov
adc
adc
int
rclb
push
mov
and
mov
call
lret
adc
add
push
push
fcoms
and
call
iret
and
pop
mov
sarl
adc
push
or
dec
push
cmc
int
insl
loopne
mov
or
or
adc
aad
mov
in
ljmpw
dec
adc
mov
pop
leave
push
xchg
cs
or
rclb
dec
push
dec
cmp
lods
mov
push
mov
call
push
pop
adc
push
adc
and
pop
addl
push
mov
rol
dec
call
xchg
fsub
fs
addr16
fcoms
mov
aad
movsl
push
fnsave
jbe
sub
nop
outsl
sub
xor
add
or
mov
sub
loop
xchg
xchg
adc
test
adc
and
xchg
imul
lcall
add
mov
lea
sbb
shl
hlt
mov
loope
and
sbbl
rcll
mov
adc
outsb
sub
in
push
sbb
cmp
and
mov
xchg
xchg
or
xchg
std
loope
stos
add
fistpll
mov
sub
cmpsb
xorl
inc
pop
inc
jl,pn
mov
lret
orl
dec
adc
gs
cmp
add
repz
rcrb
push
xchg
int
pusha
sbbl
cmovs
push
and
xlat
mov
in
mov
dec
jl
sub
add
xchg
push
ficoms
js
rcll
add
push
fmuls
scas
push
div
push
mov
out
dec
dec
mov
repz
and
rcr
int3
push
and
stos
adcl
fstpl
pop
and
mov
xor
imul
fs
xlat
ja
jmp
or
notb
xchg
mov
dec
jle
sbb
mov
push
push
hlt
adc
sub
sbb
xchg
subl
loope
dec
aad
and
inc
dec
xchg
or
pop
push
or
icebp
add
xchg
daa
push
std
mov
lcall
fsts
mov
dec
sti
adc
dec
cwtl
jb
stos
popf
push
or
out
adc
dec
scas
inc
push
xchg
inc
sbb
inc
rclb
dec
pop
xchg
out
aad
stos
or
pop
mov
das
and
xchg
inc
pop
cltd
inc
sahf
inc
add
clc
sub
and
lds
push
aam
xchg
dec
es
in
ret
scas
pop
mov
jb
or
jo
out
mov
pop
pushf
sbb
xor
scas
jae
or
clc
adc
push
xchg
imul
dec
cmp
xchg
shl
push
mov
cmp
push
aad
cmp
lea
add
push
pushf
insb
pop
cmpsb
and
lods
je
ret
jbe
sarb
dec
push
or
aas
dec
loope
dec
sahf
jne
adc
scas
mov
cltd
cmp
stc
mov
push
loope
mov
inc
lcall
addr16
mov
pop
leave
mov
daa
pop
xlat
popa
and
mov
cmp
inc
xchg
mov
arpl
inc
pop
rcrl
push
or
mov
inc
push
jmp
pusha
in
addl
fldcw
mov
pop
gs
adc
adc
pop
js
cltd
div
rcrl
adc
out
icebp
add
fistps
fsub
fadds
into
dec
mov
cwtl
ret
sub
mov
test
mov
add
mov
dec
ljmpw
fsubp
jno
push
enter
pop
dec
or
inc
mov
inc
into
dec
leave
mov
push
adc
pop
pop
mov
out
xchg
fs
xor
inc
xchg
in
ss
iret
inc
mov
or
cmp
sub
pop
add
movsl
idivl
and
lcall
mov
leave
adc
and
iret
fs
mov
lret
aad
dec
sbb
push
ret
sub
add
loope
enter
push
mov
jo
and
loop
fiaddl
adc
mov
push
shll
mov
push
inc
cmp
imul
sti
cmp
cs
mov
jg
cmc
adc
subl
xchg
popa
bound
lret
jb
ss
aad
orl
xchg
xchg
ror
dec
inc
jnp
or
nop
inc
fmul
jge
lret
popa
hlt
ja
call
xlat
lahf
sbbl
mov
sub
lret
push
sub
sbb
adc
popa
cmc
je
test
pop
sahf
fists
add
dec
adcb
adc
ret
jg
in
repnz
in
out
inc
mov
jno
dec
imul
ror
rcll
xlat
data16
mov
add
mov
mov
pop
cli
mulb
push
ljmp
rorb
dec
aas
leave
sbb
aam
out
add
out
gs
lock
mov
lret
push
test
push
inc
or
lcall
out
lods
outsl
pop
pop
mov
pop
mov
nop
pop
cwtl
fcomps
pop
icebp
aad
and
leave
int
inc
push
and
push
push
cmpsb
push
cs
fistl
and
and
arpl
and
xor
inc
xor
or
imul
dec
push
mov
fwait
stos
mov
loope
sahf
mov
pop
test
pop
movsb
cwtl
stos
loopne
mov
jnp
add
leave
sub
rcrl
dec
dec
mov
jnp
cmp
pop
dec
lcall
pushf
adc
xchg
dec
cmpsl
dec
sahf
ret
sub
movsl
jno
nop
and
and
mov
xor
mov
sbb
pop
aam
in
adc
or
xchg
adc
lds
jne
pop
mov
xchg
cli
out
adc
mov
ljmp
fldl
mov
shl
jle
repnz
lds
ds
sub
or
rcl
mov
lahf
mov
mov
mov
mov
jp
rol
mov
jbe
adc
inc
scas
push
mov
in
in
bound
stos
loope
sub
mov
sahf
mov
adc
pop
mov
jb
mov
outsb
shlb
or
xor
xor
pusha
mov
xchg
int3
adc
add
push
lret
es
mov
fdiv
inc
jb
lret
dec
dec
sti
jbe
pop
xor
jae
sbb
insb
xchg
std
fwait
int
jno
jb
mov
stos
mov
insb
jb
mov
and
xor
add
int
insl
dec
xchg
sub
or
out
in
push
sbb
push
in
xchg
cli
mov
push
into
fiaddl
aad
push
jb
dec
mov
push
push
aam
cmpsb
push
mov
stos
sarl
add
std
or
pop
mov
sub
mov
cmp
mov
enter
loope
mov
mov
movsl
add
in
out
idivb
jbe
jno
sbb
lret
scas
mov
in
push
cli
imul
rorb
out
fnstcw
mov
xor
push
int
test
pop
pop
dec
and
adc
fcomip
lds
and
movb
cmpsl
mov
ret
movsb
xchg
xchg
xor
sarl
xchg
push
mov
jae
dec
mov
sbb
dec
repz
jns
push
jg
icebp
fs
movsl
cltd
popa
inc
lea
sub
fst
push
xor
or
je
jb
dec
les
inc
and
std
dec
imull
pop
icebp
push
stos
popa
jns
mov
xchg
shll
xchg
push
pop
mov
dec
dec
lds
out
mov
mov
int3
notb
or
gs
mov
xlat
insb
out
leave
push
adc
fsts
fsubs
or
mov
int
fadd
shll
fcoms
rorl
jne
dec
rcrb
xor
cmp
popa
and
and
dec
mov
inc
push
pop
jnp
pop
add
mov
add
push
dec
add
push
or
push
mov
xchg
int3
jno
mov
cmpb
dec
fstpt
push
int
dec
pop
dec
rclb
add
rcll
loope
xor
inc
push
dec
in
test
or
mov
jbe
ffree
jle
int
arpl
movsb
or
jl
push
push
jns
push
inc
push
lret
shll
mov
mov
push
xor
cmp
std
test
xor
sub
pop
pop
adc
adc
mov
femms
fisttps
sub
cmp
int3
int
or
dec
pop
jbe
pop
push
mov
rcrl
movsl
jg
add
push
loopne
rcr
leave
jb
pop
push
test
and
ret
fmull
mov
nop
pop
mov
ljmp
adc
shl
sbb
pop
or
rcll
push
or
les
rclb
push
repz
data16
jle
cltd
mov
push
jbe
pop
loope
or
neg
int
test
lret
or
test
push
cltd
xlat
xchg
arpl
fchs
nop
sub
ja
ret
int
dec
or
xchg
sbb
loop
mov
xor
scas
cmc
push
cmp
rorl
pop
fsubr
xor
idivl
pop
mov
cmc
gs
dec
or
lahf
mov
ja
mov
push
lret
lds
or
mov
aas
negb
mov
add
cmp
sbb
pop
cmp
aad
sub
mov
es
hlt
pop
inc
hlt
jns
loopne
flds
stos
jnp
daa
adcb
fs
dec
and
add
sbb
xor
lret
dec
mov
or
repz
jge
or
cmpsb
inc
out
push
cs
dec
ss
sbb
hlt
sti
in
pop
rclb
sub
xlat
rol
and
dec
int
dec
sbb
fsubrs
out
push
or
add
outsl
inc
push
stos
or
into
jno
outsl
in
dec
adc
push
mov
xchg
arpl
xchg
and
xchg
add
je
subb
movsl
lahf
xchg
adc
xchg
scas
jae
adc
mov
mov
into
mov
jecxz
pop
and
dec
imul
lret
add
jecxz
jecxz
pop
mov
cmp
sbb
int
mov
sbb
push
xchg
adc
jo
outsb
cmp
mov
dec
sahf
pusha
sbb
fwait
sbb
xchg
or
into
jns
sub
dec
xchg
cmpl
sbb
jl
stc
jo
mov
jno
inc
mov
sarl
inc
popa
ret
xchg
jg
orb
xor
out
loope
adc
ret
lret
mov
pop
xchg
pop
mov
ret
jno
inc
add
jbe
or
xlat
xor
push
adc
inc
jg
loop
test
push
bound
cmp
rcr
dec
sub
pop
adc
iret
aam
negb
call
mov
mov
pushf
inc
lods
adc
repz
pop
mov
pop
dec
sahf
xor
mov
xchg
fwait
push
jo
cmp
push
aam
std
leave
mov
test
adc
out
add
sub
inc
adc
cmp
jp
xchg
in
cmpsb
out
xchg
push
add
out
test
loop
dec
add
test
mov
dec
push
out
dec
negb
xlat
sbb
xchg
adc
enter
jg
sub
dec
das
sub
imul
shlb
mov
hlt
adc
test
icebp
fdivs
out
push
adc
mov
and
iret
scas
sbb
sti
fwait
mov
in
adc
jp
xor
inc
and
push
lret
lcall
int
inc
mov
sub
inc
inc
rcrl
int
jl
cmc
push
test
pop
adc
pop
loope
inc
mov
dec
push
cmpsl
and
jnp
sub
mov
ljmp
mov
and
fdivrs
jge
cmp
or
dec
sbb
scas
int
cmp
jnp
lea
aam
das
lcall
ss
dec
xor
in
inc
push
movsl
xlat
loopne
or
xor
call
ja
cmp
test
ds
dec
loope
xor
pusha
add
mov
jns
pop
std
subl
stc
pop
test
push
sub
and
mov
dec
mov
inc
pop
and
inc
push
sbb
xchg
jle
or
jns
sbb
je
cli
lret
sbb
mov
xor
gs
sub
mov
out
xor
fwait
aam
or
mov
push
loopne
fstl
inc
aam
insb
loopne
int
mov
jns
paddsb
mulb
fistpll
icebp
sub
inc
cmpsl
lahf
or
adc
call
inc
ds
jno
add
push
mov
cli
dec
xchg
aas
mov
dec
push
dec
fmuls
cmp
int3
rorb
jge
xchg
push
test
mov
int3
out
fxch
call
pop
mov
add
rcl
loopne
nop
cltd
adc
dec
mov
scas
mov
sub
test
bound
out
jb
mov
adc
pop
push
mov
mov
imul
negb
sbb
push
pop
aad
fcoms
push
mov
push
shll
xchg
mov
pop
adc
adc
mov
mov
mov
test
sbb
pop
sbb
loopne
mov
pop
dec
inc
mov
cmp
ds
jmp
push
push
jbe
sub
jae
jns
in
push
push
aas
adc
push
arpl
inc
aad
imul
fadd
mov
and
inc
xchg
xlat
dec
call
test
mov
insl
in
inc
inc
jae
outsb
xchg
cltd
cmp
adc
xchg
clc
dec
xchg
jb
jp,pt
test
aad
cmpsb
jp
ret
div
pop
or
out
fdivs
xchg
jnp
aad
xchg
push
popf
sbb
sbb
ss
sbb
lock
adc
dec
imul
bound
les
mov
rcrl
ss
sti
and
scas
loope
cmpsb
push
sbb
fmull
je
nop
popa
gs
lret
jno
fcoml
jge
in
fs
dec
gs
jno
or
mov
xchg
jbe
adc
shll
and
js
pop
mov
in
dec
jg
call
subb
psubsb
faddp
inc
cltd
xchg
jmp
rclb
push
push
pop
addr16
insb
pop
pop
aam
hlt
add
dec
leave
adc
dec
out
loop
js
sub
std
sbb
aam
stc
test
test
icebp
jno
popa
sahf
adc
xchg
sub
pop
xor
mov
pop
xchg
adc
xchg
jo
flds
sarl
call
test
testb
push
movsl
pop
push
iret
or
mov
cmp
ds
ret
xlat
xchg
mov
mov
sub
mov
es
push
xchg
movsl
cmp
ds
xor
mov
inc
jb
push
dec
push
jle
dec
xor
jnp
movsb
inc
dec
mov
add
pop
scas
push
sub
mov
mov
aaa
or
fucomp
or
fwait
dec
xchg
loop,pt
push
jl
dec
dec
dec
leave
loop
aam
leave
leave
mov
rcr
mov
ljmp
subb
int3
and
hlt
jno
bound
fcmovbe
or
inc
sub
pop
int
jge
rcrl
fidivrl
xchg
mov
xchg
cmp
cli
std
pop
fs
fst
mov
pop
dec
cmc
sub
ds
test
cmp
int
push
push
xchg
imul
outsl
pop
add
dec
vmovsd
adc
pop
push
jns
test
js
push
push
mov
xchg
lret
movl
shr
push
jnp
pop
inc
repnz
mov
int
dec
inc
dec
daa
in
adc
daa
enter
fwait
sbb
jl
outsb
int
call
sub
pop
inc
shll
test
dec
mov
dec
xlat
das
dec
lods
pop
push
lock
lcall
rcll
daa
scas
dec
cmp
mov
scas
lret
ffree
xchg
movsl
fsubs
aad
dec
outsb
push
add
jg
mov
jmp
data16
pusha
inc
jo
and
pushf
ret
pushl
mov
decl
pop
mov
dec
mov
sti
decl
mov
int3
fmuls
sahf
push
out
sti
or
mov
stos
rclb
dec
aaa
ljmp
fmuls
popf
fwait
mov
xchg
pop
lds
mov
in
dec
lock
mov
or
mov
in
jne
fwait
sbb
xchg
pusha
or
push
pop
push
mov
jbe
dec
or
xchg
aad
cmp
jo
call
aad
xchg
aad
inc
or
push
rcr
sahf
sarl
adc
push
decb
dec
sub
fsts
push
push
insl
inc
movntps
and
pop
mov
outsl
mov
and
pop
fistpl
int
mov
in
pop
adc
jle
mov
sar
and
adc
test
and
aam
mov
push
les
popf
cmp
aas
xchg
bnd
in
cmp
fistpl
xchg
icebp
test
push
push
test
or
nopl
xchg
outsl
and
or
js
xchg
ja
and
data16
mov
dec
jmp
es
mov
out
push
in
outsb
iret
pop
clc
sbb
enter
outsb
pop
bswap
popf
mov
in
push
jmp
out
lods
jmp
std
std
xchg
cmpsb
push
fimuls
xor
mov
or
mov
popa
push
ret
add
push
ja
cmp
xor
push
repnz
aaa
sub
inc
test
pop
adc
fsubrl
out
sar
push
adc
and
test
int
repz
xchg
mov
sbb
or
bound
test
mov
ds
add
aas
ret
es
jg
icebp
stos
sub
cmpsb
xchg
jge
lcall
xchg
xlat
mov
popf
clc
sub
notl
shll
scas
nop
push
add
xchg
push
dec
fldl
dec
push
mov
shrl
aad
icebp
cmovo
push
cmp
ds
cmpb
dec
cli
add
lock
or
inc
rcll
sub
mov
rorb
movsl
sub
sub
lahf
pop
mov
push
frstor
lret
fdivs
in
xlat
out
push
dec
mov
inc
fiaddl
inc
xor
bound
insb
dec
rcrb
sub
cmp
ds
nop
dec
shll
pushf
ds
inc
push
sahf
push
mov
mov
repz
mov
adc
test
insb
imul
popf
jno
dec
shll
dec
sbb
jg
test
jb
sbb
aad
outsb
test
mov
fwait
sbb
shrb
call
cmp
aad
cmpsb
js
or
dec
test
push
and
sahf
xchg
and
inc
lret
mov
into
ja
icebp
cmc
and
ret
fildl
cmp
adc
pop
in
and
inc
pop
push
push
loopne
dec
mov
insb
sahf
or
cmp
and
xchg
push
mov
fcoms
mov
aad
dec
adc
and
fwait
or
test
adc
outsl
and
adcl
fildl
dec
add
pusha
or
int
push
push
xchg
in
test
sub
ds
call
nop
cltd
xor
lahf
dec
repz
into
push
jnp
add
push
and
sbb
ds
js
and
cmp
cmc
out
pop
dec
xor
and
dec
mov
into
mov
add
mov
mov
andb
gs
pop
data16
cs
push
add
scas
lds
aam
push
xchg
cmpsb
mov
fdiv
mov
dec
dec
outsb
repnz
inc
dec
push
repz
adc
adc
aaa
jbe
jl
scas
ret
or
xor
clc
adc
adc
xor
add
std
adc
push
pop
lret
push
sbb
mov
cs
push
icebp
mov
lret
dec
insb
cltd
shrl
push
xchg
inc
dec
hlt
popf
inc
lds
popa
and
pop
rcl
into
and
sbb
rclb
dec
shll
out
repnz
pop
cmp
aad
into
push
int
arpl
in
and
bound
arpl
sub
inc
les
gs
inc
popa
jmp
push
inc
std
test
or
sbb
lock
adc
mov
repnz
xlat
cmpsl
repnz
xchg
outsl
lods
xlat
push
sbb
cwtl
push
fldenv
push
jmp
loop
fwait
mov
dec
std
ds
je
cmp
scas
and
popa
jle
repnz
dec
dec
leave
shrb
push
inc
pop
shl
inc
test
hlt
xchg
cli
out
cmp
and
push
cmp
ja
sub
mov
lret
xchg
jno
mov
push
xchg
int
xchg
leave
std
hlt
rcrl
rcrb
xchg
and
add
popa
lcall
and
or
fdivrp
leave
push
cmc
out
aad
popa
push
nop
jbe
ret
pop
adc
xchg
test
inc
jmp
push
pushf
and
stc
sub
ja
test
ret
push
push
lods
or
ljmp
mov
adc
dec
je
in
notb
cmc
ret
inc
scas
pop
and
push
aaa
pushf
scas
popf
xchg
dec
test
mov
push
sub
insl
ret
insb
stc
cmpsb
addl
mov
mov
fdivrs
inc
or
fmuls
sahf
pop
mov
adc
repnz
mov
and
add
stos
fimull
sarl
and
xchg
cmpsl
bound
out
push
ljmp
adc
mov
pop
mov
cltd
cmp
ret
mov
fadd
push
ja
lock
loop
jecxz
and
arpl
dec
push
mov
sub
cmp
and
imul
ret
shll
loopne
adcb
sti
fldpi
fisubrl
push
xor
out
rorl
pop
leave
dec
push
push
fcmove
sub
cmc
or
aam
dec
xor
xchg
shlb
xchg
inc
loopne
inc
and
in
and
dec
mov
or
fdivs
rolb
repnz
fadds
inc
loop
inc
jl
jne
out
cli
js
daa
mov
les
push
scas
push
push
stos
sbb
stos
inc
stc
and
sahf
pop
xchg
mov
outsb
inc
fsubrl
sub
add
mov
xor
push
loop
or
xor
push
lcall
xchg
callw
fdivl
sahf
lahf
adc
mov
fsubr
mov
adcl
aaa
lcall
enter
push
das
nop
jecxz
adc
cmp
cmp
shll
in
ja
jae
scas
jb
cmpsl
and
cmp
aam
cmp
cwtl
fsubs
pop
jle
dec
dec
fwait
cwtl
fsubs
xchg
xor
fldenv
adc
mov
stc
test
cmpsl
rol
sti
lahf
sarl
rorb
scas
sarl
pop
orb
add
inc
jp
or
popa
pushf
sub
dec
dec
jle
xor
sub
dec
xor
push
or
loopne
jo
cwtl
jae
pop
arpl
push
dec
mov
int
and
dec
ljmp
and
dec
testb
xlat
enter
push
xchg
mov
sub
xchg
inc
pop
mov
ljmp
add
stos
jbe
or
stos
xor
std
mov
xor
scas
push
push
add
pop
pop
in
jl
sahf
loope
loope
leave
ror
mov
jns
xchg
fcoml
or
imul
sbb
ficoms
mov
scas
adc
add
inc
dec
ds
repnz
fmuls
push
inc
in
stos
jnp
pop
jno
inc
cmp
adcl
adc
loope
lods
push
insb
cmp
aad
adc
popf
fidivrs
fstpl
push
push
dec
sub
xchg
test
ds
adc
ret
pop
xchg
mov
xchg
push
push
sbb
lret
aad
adc
or
mov
mov
cltd
iret
push
adc
adc
mov
mov
inc
inc
test
add
adc
sbb
adc
jg
lds
aas
dec
adc
aam
push
cwtl
and
cmp
lret
jne
ljmp
ficomps
scas
in
or
jae
push
outsl
pop
lods
jmp
xor
push
aam
fisttpll
dec
add
fstpl
dec
fadds
aad
and
das
popa
push
push
xlat
mov
or
mov
xchg
cmp
mov
mov
mov
adc
dec
xchg
rol
pop
inc
addr16
cmp
cmpsl
mov
push
gs
sti
fistpl
or
repnz
mov
jecxz
jl
pop
adc
subb
shrl
fucom
push
cli
clc
push
xorb
jmp
push
cmp
mov
incl
insb
jecxz
sub
or
fcompl
pop
inc
aam
push
fsubs
xlat
sbb
fcomps
ss
dec
mov
jo
push
gs
shlb
xchg
xlat
and
jl
aam
sbb
int3
sbb
cli
xchg
or
jge
scas
xchg
sbb
and
pop
mov
jg
out
lea
and
lds
testb
push
nop
ljmp
and
pop
rorb
inc
jecxz
add
daa
rcrl
cmp
leave
adc
cltd
and
pop
xlat
fcomi
fidivrs
rcl
das
and
in
dec
inc
sub
iret
push
aad
pop
jg
xchg
or
outsl
mov
out
adc
jbe
mov
or
jecxz
push
jecxz
pushf
rcll
rcrl
test
ds
adc
data16
insl
mov
xlat
pop
dec
lcall
clc
pop
lret
repnz
outsb
fdivrs
mov
loope
jae
adc
push
xor
inc
or
jae
mov
sbb
fstpl
push
shll
mov
xchg
adc
nop
jbe
mov
pop
outsl
cld
aam
xlat
std
or
sub
add
push
and
add
fwait
insb
rolb
mov
andl
xor
push
mov
add
inc
jno
push
mov
or
or
mov
pop
jne
movsl
pop
cmp
lahf
inc
lret
cli
and
adc
rorb
dec
clc
cmc
pusha
jg
enter
xor
lock
mov
testb
iret
mov
aad
pop
and
out
mov
pop
lds
jo
pop
imul
adc
enter
aad
lds
xor
fcom
sbb
add
pop
inc
dec
out
jle
neg
dec
mov
mov
xchg
idivb
decl
pop
into
jae
rcrl
dec
push
lcall
aam
add
movl
roll
sbb
dec
sub
or
sub
aam
clc
bound
sar
dec
aad
aaa
mov
dec
xor
xor
or
mov
push
pushf
cmp
out
fldz
aam
push
call
or
lds
mov
mov
in
pop
pop
push
call
adc
pop
mov
sbb
iret
jecxz
push
pushf
jae
test
ds
inc
leave
cmp
dec
mov
jecxz
outsb
ss
lret
fbstp
sub
shlb
jno
mov
out
cli
orl
into
or
aam
sbb
push
mov
bound
je
out
mov
pop
sub
push
movsb
add
gs
dec
pop
out
ret
add
mov
lods
repz
sub
imul
mov
call
sub
jno
mov
lds
nop
sbb
push
sub
jne
loope
adc
aad
adc
lret
sahf
sub
dec
test
into
adc
mov
xor
mov
mul
dec
dec
mov
icebp
repz
sarl
mov
cmp
dec
leave
aam
mov
push
push
push
test
xchg
add
adc
test
push
test
out
movsb
leave
das
mov
pop
push
mov
mov
cwtl
xchg
push
mov
pop
or
es
pop
mov
ljmp
dec
dec
push
push
leave
or
jnp
pop
and
icebp
mov
mov
fcoml
push
jno
lock
sbb
lret
test
sbb
or
push
fistl
mov
sub
mov
xchg
or
inc
lret
cwtl
sbb
pop
orl
jge
mov
or
std
cmp
lahf
pop
mov
mov
pop
mov
xchg
in
and
aam
xchg
cmp
jg
or
mov
mov
test
aas
cvtps2pd
bound
jns
push
loope
shl
dec
sub
gs
fsubp
popa
bnd
and
sub
fiaddl
sub
add
iret
pushf
gs
lret
aaa
out
inc
outsl
insb
pop
jge
and
dec
out
imul
into
jae
jge
adc
adc
shl
dec
popf
fcmovnbe
dec
push
mov
shl
out
lods
dec
leave
push
adc
pop
repz
jns
mov
dec
cmpsl
push
dec
stos
mov
out
cs
push
adc
rcl
push
and
icebp
ret
in
fistl
and
adc
dec
data16
push
ss
dec
shll
icebp
xlat
cltd
int3
test
inc
lea
jne
mov
int3
fwait
cmpsl
rorl
fcmovnbe
cmp
scas
adc
dec
xchg
mov
outsl
pushf
pop
sbb
shll
cmpsl
ja
shrl
push
fwait
mov
pop
and
cmp
adc
sbb
outsb
jne
sbb
or
loope
dec
bound
mov
jno
add
jp
mov
sahf
imul
imul
sbbb
insl
rcrb
into
lea
jb
inc
xor
mov
mov
dec
sbb
ss
std
pop
int
nop
iret
inc
pop
cld
or
xor
outsl
sbb
fnstenv
aad
push
xchg
push
xor
push
iret
or
pop
frstor
adc
call
sub
out
pop
fimull
push
loope
add
imul
sub
decl
jno
test
cmp
push
mov
ljmp
lods
shrb
sub
sub
add
pop
mov
aaa
mov
ja
mov
and
popa
insb
inc
stc
cs
pop
mov
enter
out
mov
adc
mov
pop
cli
cmp
adc
fmull
std
and
andb
xor
dec
xchg
and
gs
or
js
inc
test
xor
mov
les
lea
out
je
int
or
push
int
neg
adc
mov
filds
and
mov
fisubl
mov
in
pop
icebp
cmc
dec
out
dec
xchg
ror
mov
fs
call
test
mov
jge
mov
or
push
pop
lock
push
div
rcl
out
mov
iret
jo
les
push
cli
add
xchg
lret
xor
packsswb
cmp
pushf
ljmp
out
data16
jecxz
jae
adc
fdiv
rcrb
pop
mov
repnz
xor
popa
xor
mov
and
cmp
iret
iret
or
out
cmpl
pop
or
test
pop
stc
add
in
mov
add
mov
out
xor
ret
cwtl
inc
cmp
mov
sahf
add
mov
xor
mov
xchg
sbb
xor
sahf
sbbb
popa
andb
mov
xchg
pop
jmp
jo
out
pop
aaa
mov
pop
mov
es
mov
pusha
jne
movsl
mov
test
cmp
jno,pt
cli
mov
push
scas
repz
pop
repz
lods
aam
int
dec
pop
sahf
aad
sbb
cmp
in
or
cli
lods
mov
xchg
and
fsubl
mov
mov
sbb
out
bound
inc
mov
icebp
pop
jl
bswap
aam
xchg
jb
mov
shr
xlat
cwtl
or
fcmovnb
push
dec
inc
inc
insb
lods
dec
adc
jo
xor
inc
popf
icebp
xor
adc
icebp
icebp
fwait
mov
stc
in
xchg
and
out
pop
mov
addr16
inc
and
mov
adc
shll
cwtl
xor
mov
fsubl
and
aad
adc
lahf
push
mov
rcr
scas
jle
and
pop
roll
int
inc
scas
pop
jne
fmuls
popa
mov
push
int3
xor
dec
add
and
movsl
aam
push
es
mov
call
push
mov
test
fiaddl
rcrb
shrl
inc
das
call
inc
push
ss
dec
pop
xchg
xchg
in
rcrb
pusha
jge
xchg
xchg
in
stc
out
fadd
jo
adc
adc
mov
mov
pop
push
sbb
add
xchg
cmp
xchg
out
aad
scas
out
push
aad
add
dec
mov
shll
mov
repnz
jno
push
scas
cwtl
add
out
adc
movsl
jo
sbb
adc
enter
xor
jns
xchg
fwait
stos
out
xchg
scas
sub
cli
jb
rorb
aaa
jbe
scas
or
loop
out
in
leave
xchg
dec
rorl
xchg
aam
dec
pop
repnz
mov
repnz
mov
dec
and
push
push
dec
mov
push
pop
jo
clc
loopne
jg
lcall
and
movsb
mov
fwait
rorl
push
inc
sarb
mov
dec
mov
push
jg
sub
in
pop
mov
imul
sbb
xor
add
sub
sbb
loop
je
call
mov
inc
mov
daa
inc
out
dec
mov
cwtl
nop
fistl
pop
lock
dec
inc
cmp
xor
xchg
cmp
test
adc
inc
dec
mov
rcl
dec
mov
sbb
push
mov
or
out
repnz
adc
int
out
fidivrl
push
add
sub
inc
mov
xchg
and
into
aad
stos
pop
mov
rcrb
xor
dec
mov
sbb
push
xor
xor
jnp
orb
add
push
push
stos
dec
adc
pop
andb
fdivrl
push
mov
jb
xor
ljmp
mov
xchg
pop
sub
aaa
and
adc
cmp
mov
inc
std
lods
cmp
or
add
dec
loopne
jle
xor
icebp
lock
mov
sti
movd
mov
jo
in
mov
fcoml
mov
jecxz
popf
jmp
pop
rcll
fs
pop
aad
in
push
pop
push
mov
pushf
enter
ss
test
adc
and
xor
xchg
xor
dec
push
stos
imul
xchg
adc
data16
in
mov
sbb
pop
loopne
pop
cltd
and
jge
dec
sarl
mov
xlat
repz
mov
xor
inc
stos
dec
pop
xchg
in
push
push
shll
decb
add
fmull
sbb
mov
ja
ds
cld
int3
fs
mov
lret
repnz
fxch
enter
add
push
mov
ljmp
inc
ja
movsl
stos
push
pop
mov
and
std
das
mov
mov
aam
dec
lahf
shrl
pusha
xchg
test
test
mov
adc
or
cmp
push
mov
sub
adc
push
add
push
pop
jne
aam
jle
mov
push
ss
into
rol
lahf
xchg
std
shll
xchg
mov
int3
inc
sahf
mov
or
clc
movl
add
push
leave
jnp
stos
inc
shlb
insl
pop
aam
arpl
jnp
mov
xchg
dec
add
xor
pop
andl
pusha
xchg
nop
fisttps
adc
lock
and
shlb
jno
jnp
push
xchg
fst
rorl
cld
dec
jnp
ds
and
dec
xchg
and
cmp
shll
push
jge
pushf
or
adc
cwtl
jo
jns
pop
cmp
sub
push
and
aam
or
cld
ljmp
xchg
es
out
addr16
imul
cmp
jb
rclb
xchg
xchg
sbb
cmpsb
fdivrs
fsubrs
outsl
fdivs
sub
sub
push
cmp
pop
rcl
popa
fs
insb
out
xchg
pop
push
dec
shl
mov
pop
fmuls
add
or
pop
shlb
jae
push
adc
or
mov
test
addl
mov
add
mov
xlat
jp
jb
es
xor
sbb
imul
mov
adc
movsl
xchg
mov
mov
prefetch
or
sub
inc
inc
mov
mov
je
adc
adc
ljmp
fdivl
sub
sub
bound
and
insb
fists
push
pop
sbb
push
inc
out
mov
cmp
cltd
sysenter
lahf
pop
rol
xor
das
call
dec
push
push
push
popa
pop
xor
imull
add
iret
ret
test
dec
cmc
push
fildl
sarb
xor
std
test
andl
ficoms
mov
nop
inc
xor
rcrl
bound
mov
gs
inc
pop
stos
sbb
cmp
mov
aad
outsb
or
xchg
mov
ret
push
lret
iret
mov
jo
mov
add
jnp
lret
sub
mov
xor
sub
mov
jb
xlat
das
dec
jg
sbb
ja
mov
in
mov
pop
dec
aaa
call
push
cli
sarb
ret
shll
aad
mov
jmp
mov
or
jp
add
pop
mov
cmp
sub
adc
les
mov
pop
mov
sub
pop
jge
out
and
xchg
popf
fcoms
fwait
jmp
xor
xor
push
jae
adc
xor
xor
or
cli
and
xchg
mov
and
pop
xor
lods
out
jb
cmp
stos
jnp
xchg
mov
aam
adc
xchg
adc
mov
push
sbb
shlb
cs
mov
mov
push
into
and
aam
inc
pop
push
ljmp
mov
imul
sub
mov
and
test
jae
or
sarb
stos
push
ss
cmp
pop
mov
and
xor
mov
mov
aad
ds
repnz
mov
sbb
and
lock
sbb
lds
rcll
jle
fstl
int
das
mov
mov
call
daa
sbb
jo
stos
mov
push
ss
rcrl
stos
mov
cmp
jbe
push
add
jbe
push
cwtl
mov
movsb
fbstp
push
push
out
icebp
sub
add
push
xor
enter
dec
movb
aaa
imul
xchg
mov
push
cmp
in
jae
mov
sbb
call
add
ja
push
jle
imul
aad
aad
xchg
dec
sub
arpl
dec
inc
es
fisubs
push
xchg
adc
test
call
sbb
push
jno
imul
mov
aad
and
and
ficoml
inc
sti
cmp
int
inc
jg
cmpb
dec
jne
movsl
pop
inc
mov
clc
jecxz
sarl
ljmp
popa
hlt
addr16
mov
push
jp
xchg
sahf
mov
mov
dec
cli
pop
push
out
inc
xchg
xchg
pop
repz
and
insb
int
inc
push
inc
mov
out
mov
jae
je
push
aad
sahf
bound
push
dec
clc
fs
push
sti
imul
mov
xchg
mov
push
push
xchg
out
notb
out
push
xlat
and
xchg
xchg
nop
mov
pop
cli
in
ss
xchg
roll
cmp
testb
aam
mov
jne
jle
aam
dec
ficoml
xor
lret
pop
stos
xchg
mov
cltd
divb
movsl
dec
xor
cmp
jecxz
inc
ss
dec
test
repz
cltd
es
ds
push
sub
mov
insl
push
xchg
loope
jo
cltd
xchg
sbb
ljmp
push
and
enter
cmc
mov
xlat
xor
ss
xor
jg
pop
dec
dec
pop
popa
jns,pt
cs
addr16
ljmp
lods
ja
jno
push
jnp
nop
fldt
imul
lcall
lret
adc
cmpsb
imul
test
push
jge
pop
mov
xor
call
frstor
pop
inc
sti
mov
dec
pusha
out
adc
stos
out
loop
mov
mov
scas
test
mov
xlat
xchg
mov
mov
and
push
sub
int3
test
ds
xchg
movsl
xor
ret
push
imul
les
iret
inc
adc
iret
sahf
in
mov
lret
xchg
out
shl
mov
gs
rorb
mov
push
pop
push
cmc
jae
js
roll
cmp
inc
dec
mov
jecxz
lret
popf
cli
int3
push
in
push
cmpsb
notb
mov
xchg
in
sarb
lret
loopne
ljmp
push
fcoml
stc
sub
cmp
rolb
pop
repz
es
xchg
push
dec
test
enter
add
cmp
push
cltd
inc
iret
mov
xlat
jbe
adc
fsubrs
iret
stos
xchg
dec
sub
aas
mov
loop
mov
mov
jo
mov
xor
int3
cs
jecxz
mov
mov
bound
adc
shrl
mov
fisubs
and
bound
shll
push
mov
in
pop
sbb
int3
mov
in
mov
xor
rcl
jl
mov
xchg
mov
out
or
or
arpl
test
mov
mov
pop
mov
xchg
dec
fbld
test
inc
mov
sub
adc
sub
adc
and
int3
cmp
inc
inc
outsl
in
jae
dec
cld
cmpb
jno
icebp
loope
cmpl
aad
push
rclb
xchg
push
shr
fsubs
sub
and
fcompl
aas
xchg
push
sbbb
dec
imul
xchg
in
es
mov
dec
arpl
mov
dec
ret
sub
xchg
gs
xchg
notb
adc
lock
or
shll
or
movsl
push
faddl
out
ret
or
pop
sub
xchg
or
or
push
adc
loope
add
add
cmp
cmpsl
or
les
adc
sahf
imul
adc
mov
cmp
mov
cwtl
lahf
pop
pop
int
push
int
push
sahf
icebp
shrl
call
and
out
insb
mov
mov
or
pop
aas
push
jae
mov
rcr
shll
leave
stos
ret
leave
inc
ret
out
jae
jp
sub
in
ja
jno
leave
xorb
xchg
ja
push
and
into
sbbb
jmp
mov
int3
or
sub
sbb
push
xchg
xor
push
xor
push
mov
ss
loope
lds
popf
out
cmpsb
loope
pop
push
push
out
pop
out
sub
es
in
dec
adc
into
lds
cmpsl
cli
push
loope
shrl
decb
shll
or
mov
dec
arpl
push
pop
lahf
mov
cwtl
mov
mov
rclb
adc
int
je
scas
call
aad
push
ficoms
push
push
cwtl
fsubs
adc
sub
xor
sub
adc
xchg
mov
fimull
xchg
les
push
push
insb
pop
or
push
mov
mov
mov
jno
shll
jae
rcrl
inc
dec
jbe
fldcw
je
mov
call
popf
xor
jge
pop
pop
jnp
rol
movsl
int
add
and
adc
sarb
into
lahf
adc
inc
push
xchg
jns
sub
ds
inc
cmp
repz
daa
aad
push
mov
inc
mov
adc
xchg
push
aad
push
adc
push
faddl
push
mov
push
mov
mov
push
inc
push
mov
push
ss
adc
push
pop
cmp
xlat
pop
movsl
add
xchg
xchg
mov
gs
xchg
dec
out
into
loop
es
and
out
clc
nop
adc
add
jns
ljmp
mov
and
pop
out
fcmovnu
sub
lahf
and
cmpsl
push
aad
jnp
mov
js
data16
aad
push
xchg
sbb
dec
fidivs
xor
mov
cli
imul
sahf
mov
xor
fmull
out
add
push
rcr
scas
std
xchg
dec
or
adc
int
idivb
jne
lret
jno
rcll
push
lds
dec
leave
inc
test
xor
lret
and
out
inc
imul
mov
and
imul
rclb
push
test
adc
aam
sub
inc
ret
adc
mov
je
clc
pop
push
xchg
aam
xchg
sbb
mov
sti
int
dec
mov
loop
adc
xchg
data16
fcoms
data16
sbb
cmp
jns
les
jmp
loope
mov
dec
xor
jne
jns
ret
add
out
rcl
xchg
mov
imul
jmp
dec
stos
push
xlat
xor
dec
dec
add
and
mov
mov
sbb
leave
ficoml
sbb
inc
pop
xchg
mov
je
call
pushf
push
xchg
add
aad
xchg
push
add
ss
jo
or
movd
aad
push
pop
mov
adc
jl
push
dec
cld
mov
rcr
icebp
cmp
int3
test
jo
push
pop
sbb
icebp
int3
pop
in
fwait
jmpw
cmp
fadds
pop
mov
dec
sub
xchg
mov
iret
adc
cwtl
fbld
fnstcw
or
mov
dec
enterw
pop
push
cmp
xchg
xchg
jb
icebp
cwtl
mov
jns
daa
xor
hlt
push
jl
ss
jmp
mov
xchg
jp
rcll
mov
and
dec
dec
jge
call
mov
push
jo
jp
in
repz
adc
pop
dec
movsb
leave
repnz
popa
leave
inc
scas
pop
jnp
jne
xchg
xchg
sti
cmc
addr16
or
jno
and
data16
loope
jne
nop
jmp
adc
xor
and
out
push
js
mov
inc
daa
pop
orb
cwtl
nop
adc
mov
pusha
testb
ja
mov
fcoml
sub
mov
xor
sahf
jb
jb
dec
dec
insb
dec
cmpsl
pop
mov
sar
push
hlt
adc
push
call
dec
stc
push
jbe,pn
fadds
mov
testb
jbe
shl
das
pop
mov
lea
or
adc
cwtl
mov
pop
pop
shlb
rcrb
mov
jp,pt
lods
dec
pop
mov
mov
test
or
test
sub
flds
cmp
sbb
lret
xchg
push
mov
inc
imul
pop
and
repnz
jb
mov
mov
push
pop
addr16
std
mov
pop
push
xchg
cwtl
or
push
sbb
int
scas
xchg
addr16
test
xchg
in
jge
aad
stc
pop
ret
pop
adc
push
mov
movsb
xchg
stos
lret
adc
push
or
push
or
out
lret
cmpsl
adc
pop
push
push
pushf
jge
xchg
cld
xchg
sahf
stos
popf
fimull
jnp
bound
push
mov
dec
bound
lds
aas
adc
adc
pop
gs
push
cli
and
fmulp
loop
icebp
mov
scas
cmp
fcomps
mov
cmpsb
cltd
xchg
pusha
insl
push
dec
xchg
lea
inc
dec
lods
test
loope
inc
in
dec
dec
cmp
out
push
xorl
imul
decb
xchg
dec
les
pop
and
pop
aaa
or
mov
sub
les
fisubrs
dec
ret
cmpsl
push
sbb
dec
lds
push
inc
push
fmuls
popf
int3
iret
pop
ja
inc
test
add
and
or
dec
pop
dec
xor
cwtl
cmp
or
push
fwait
xchg
iret
bound
mov
fnsave
movsb
push
gs
push
rorb
shlb
fwait
pop
lea
sub
ds
xchg
mov
shrl
mov
rorb
jae
cmc
jb
pop
push
repnz
dec
lahf
dec
xchg
push
jmp
pop
gs
push
data16
adc
cmp
inc
mov
mov
daa
mov
mov
loope
pusha
and
repz
mov
int3
jle
rorb
lds
xor
pop
in
sahf
add
push
call
filds
cmp
xchg
pop
xchg
xchg
push
lret
mov
jp
sbb
jecxz
sub
pop
jb
xchg
pop
push
mov
cwtl
xorb
sbb
stc
pop
jbe
adc
pop
push
xchg
jmp
into
pop
pop
xchg
xchg
dec
xchg
xchg
push
push
add
cmp
add
jae
rorb
fildll
int3
cld
xchg
and
pop
cmpsl
or
mov
sar
pop
mov
inc
movsl
cmc
xchg
jno
inc
iret
loop
movsl
dec
and
stos
mov
or
push
jnp
loope
fsubrs
clc
xchg
cmp
pop
ja
out
stos
dec
cmp
or
shrl
rorl
popa
scas
mov
insb
mov
mov
add
mov
dec
clc
rorb
xchg
sbb
pop
mov
jbe
fcomps
leave
ds
into
loop
int3
dec
mov
xchg
push
arpl
dec
fcom
jmp
xor
xchg
mov
aam
mov
repz
fs
ss
repz
scas
iret
icebp
xor
ret
scas
mov
test
mov
sub
dec
rcr
dec
in
leave
pop
fwait
lods
test
sub
outsl
dec
lcall
add
inc
sub
insl
sub
cmp
loop
cmp
sub
push
fadd
out
mov
loop
dec
adc
dec
ret
rcrl
sbb
xchg
loop
mov
aaa
aad
jg
push
mov
push
popf
add
pop
mov
xor
movsb
jno
je
inc
adc
in
rcl
out
mov
les
int
and
fldt
cltd
cmp
std
aad
out
xor
jl
imul
inc
fs
in
inc
jg
mov
or
fcmovbe
and
jp
adc
cmp
pop
aad
sub
mov
popf
movsb
xor
mov
dec
push
lcall
or
shll
loope
and
push
mov
xor
mov
imul
loope
cmpsb
call
filds
jmp
jl
sbb
outsl
pushf
mov
adc
data16
cmp
cmp
add
push
inc
out
xor
not
mov
and
adc
clc
test
call
mov
adc
pop
sbb
gs
loopne
shl
testl
xchg
push
dec
dec
inc
xchg
cmp
sub
mov
sub
dec
xor
push
lock
cmp
push
xchg
cltd
jp
mov
stc
sbb
jns
mov
fs
xor
shlb
int
lea
push
mov
inc
enter
dec
mulb
push
push
mov
dec
jmp
jb
push
lret
add
sbb
daa
addr16
push
lret
movsb
push
lods
jne
stc
stos
out
mov
gs
jge
mov
and
pusha
addb
push
subb
mov
sub
js
ds
call
dec
pop
inc
jb
jl
imul
lret
jbe
or
mov
roll
ror
adc
xorl
stos
inc
add
std
dec
shll
gs
out
pop
rcll
jno
fadds
add
decb
shlb
into
mov
aad
andl
dec
out
out
xchg
xchg
mov
rcrb
lret
loop
push
testb
jno,pt
repz
ljmp
pop
mov
dec
test
enter
inc
js,pn
sbb
pop
mov
mov
fldl
fsubrs
shlb
divl
cmc
into
xchg
xor
aad
or
sub
data16
xor
in
and
xor
stos
shl
stos
aas
and
mov
mov
cwtl
imul
mov
mov
or
sbb
xor
mov
loopne
jb
shll
cmc
push
or
rol
subl
ret
rol
mov
aam
push
or
cmp
cmpsb
xor
dec
inc
cmp
shl
dec
inc
mov
gs
loop
mov
into
jae
jecxz
sub
cmp
push
xchg
xor
dec
test
mov
pop
int3
and
jo
ss
ljmp
xchg
sub
or
repz
aaa
jp
aaa
push
andb
in
scas
mov
dec
sbb
jno
in
or
push
mov
fimuls
negb
insl
add
faddl
clc
fnsave
out
in
mov
pop
dec
inc
out
outsl
mov
jne
pop
inc
iret
add
aas
or
xlat
test
test
mov
aam
xchg
loop
popa
fsubs
ss
idivb
xor
ja
or
jno
mov
mov
call
cmp
xchg
ljmp
or
inc
xchg
jecxz
mov
sub
mov
jmp
or
scas
mov
nop
rolb
sbb
cmp
insb
ss
add
xor
xchg
mov
mov
cmp
bound
stos
aaa
shll
int3
out
push
xchg
ret
outsb
mov
jbe
ret
add
mov
aad
mov
push
sub
pop
clc
xchg
push
adc
jg,pn
adc
adc
push
pop
push
mov
aam
aaa
xchg
in
push
add
aas
add
and
lret
adc
add
adc
ss
xchg
or
jbe
push
mov
xchg
sub
lea
push
xchg
cmp
push
call
imul
stos
sub
jnp
push
and
sbb
in
out
jmp
ds
inc
stos
inc
jecxz
and
movsl
pusha
pop
sbb
inc
repnz
add
inc
pop
das
insb
or
sbb
xchg
sahf
repnz
data16
or
subps
inc
jae
xchg
aas
xchg
adc
push
in
or
imul
cmp
sub
je
pop
or
push
push
out
dec
push
mov
and
pushl
and
std
push
pop
ss
out
dec
pop
pop
inc
xchg
and
insb
stc
and
imul
call
mov
push
or
xor
scas
cmpsb
out
xchg
fisubs
dec
mov
xor
sahf
ret
cmp
push
es
pop
pop
fdivs
icebp
sarl
sbbl
aad
je
sti
pop
jecxz
pop
outsl
xchg
xchg
push
pop
cmp
cli
mov
mov
jnp
mov
cmp
mov
ficoms
out
lcall
mov
adc
out
lret
rorl
mov
fsubrs
mov
jnp
push
fcmovnbe
test
fiaddl
data16
rcll
xchg
sbb
xchg
aad
jae
out
mov
imul
mov
test
and
dec
cmp
sbb
push
push
cs
sbb
pop
or
push
sub
movsl
imul
xchg
xchg
popa
mov
inc
aad
imul
cli
jns
push
ss
sub
add
mulb
lret
adc
cmc
fcoms
fidivs
push
int3
xchg
out
loopne
and
cmpsb
pop
pop
fnsave
and
fidivrs
and
bound
xchg
aaa
cmp
xor
fs
clc
mov
mov
sbb
or
call
xor
call
loope
cwtl
pop
in
and
andl
mov
idivl
pop
dec
imul
dec
out
push
stos
push
outsl
jp
mov
mov
xor
lds
gs
inc
cmp
sbb
mov
jno
sahf
aad
out
xchg
lahf
xor
mov
fwait
enter
inc
shrb
in
adc
pop
sahf
call
int
mov
mov
iret
mov
fcoms
push
loop
xchg
sbb
out
test
cmp
dec
mov
jnp
adc
cmpsl
cwtl
shll
call
jbe
cmp
stos
dec
das
into
push
int
mul
pop
jp
xor
lret
jnp
int
xor
pop
faddp
dec
rolb
stos
rorl
mov
jno
lcall
or
mov
push
fisttps
stos
add
shll
mov
gs
dec
mov
mov
jmp
mov
lcall
mov
lret
lock
aad
xor
add
push
scas
test
xchg
xchg
add
push
add
or
stos
icebp
ljmp
jge
fwait
es
push
iret
cmp
or
dec
repz
or
push
push
cmp
stos
mov
jne
movsb
xchg
or
repz
mov
mov
push
repnz
mov
xor
fcoml
outsl
mov
testb
mov
inc
fs
testb
sahf
push
or
mov
cmc
fsubrp
jno
or
adc
cmpsl
out
adc
fcoms
js
sahf
xchg
mov
mov
adc
lret
xor
popa
cmp
xchg
dec
dec
dec
adc
lods
sahf
cli
arpl
cmp
xor
dec
je
xchg
mov
inc
call
adc
mov
jge
adc
adc
mov
cld
mov
sub
jle
fidivs
out
dec
dec
iret
loope
ret
pushl
into
jmp
std
fdivp
fst
or
sahf
sub
jge
add
cmp
leave
test
nop
popa
leave
sbb
insb
adc
sbb
dec
sti
imul
enter
jns
mov
mov
add
xchg
jecxz
push
adc
add
mov
mov
push
iret
jnp
rcrl
das
push
pop
xor
loopne
push
adc
add
movsl
fwait
out
data16
and
fcoms
lea
in
xor
mov
cltd
call
dec
icebp
mov
mov
dec
sub
int3
or
dec
bound
sub
cmpsl
and
cmc
scas
push
scas
push
fcomps
push
mov
or
pusha
inc
fstp
mov
xchg
and
mov
cs
dec
lods
add
cli
scas
dec
leave
and
jnp,pt
sbb
and
negb
fsubr
push
je
into
pop
sbb
cli
test
dec
adc
push
lock
ds
xor
sub
adc
xor
push
in
push
push
mov
lcall
out
hlt
insl
aad
mov
jno
or
aad
in
jno
adcl
push
and
ret
out
fiadds
stos
rorl
mov
fsubrl
cld
adc
jno
sub
ret
test
and
loop
sbb
dec
lret
mov
imul
xor
xchg
sahf
adc
loop
icebp
insl
jb
ss
inc
divb
ljmp
movsl
inc
push
jno
mov
dec
rep
es
call
lea
test
outsb
mov
jae
sbb
and
call
adc
lods
test
scas
dec
mov
mov
shrl
cmp
scas
rcrb
sbb
dec
or
sbb
pop
js
cmp
mov
out
mov
mov
fidivrl
loop
jbe
push
cmp
sub
int
leave
leave
dec
jno
jo
mov
lods
divl
push
and
jecxz
call
mov
mov
pop
jl
fidivl
jnp
mov
push
sti
dec
outsl
repnz
sbb
not
adc
divl
nop
jp
push
xchg
dec
adc
mov
gs
push
cmp
in
shl
adc
out
adc
mov
aam
sbb
lret
mov
mov
mov
mov
shr
sahf
insl
push
in
aad
sbb
mov
dec
push
push
lods
shll
or
pop
scas
or
das
sbb
rol
and
fnstenv
push
dec
mov
push
mov
push
sub
dec
hlt
jne
pop
scas
xlat
adc
ficompl
dec
aam
imul
cmc
push
rclb
xchg
out
cmpsl
xchg
sub
push
and
add
and
sub
test
or
pop
jno
fistl
int
cmp
mov
int
mov
sub
mov
lods
sahf
out
add
inc
xor
cmc
inc
cmc
adc
in
out
mov
mov
fstps
sahf
outsb
fnsave
mov
xor
dec
push
ja
mov
or
adc
mov
mov
lahf
mov
rcr
repz
ret
cwtl
mov
out
push
mov
ljmp
scas
push
dec
jecxz
mov
hlt
sti
dec
nop
add
or
jg
fnstenv
and
ljmp
xchg
out
and
jne
push
repnz
xor
pop
push
inc
pop
adc
xlat
popf
iret
out
mov
lret
adc
jmp
mov
fsts
dec
push
fucomip
adc
ljmp
adc
sub
dec
sub
push
push
dec
jno
outsl
sub
jno
mov
cmpsb
dec
loop
dec
es
push
xor
adc
cmp
mov
loopne
iret
mov
pop
xchg
fcomps
pop
xchg
xchg
push
pop
and
dec
jae
mov
ret
popf
lods
cmp
dec
push
cltd
jno
push
sti
xchg
mov
mov
out
xor
stos
or
fisubl
sbb
and
and
imull
mov
daa
mov
das
adc
or
jecxz
insl
jmp
sar
sub
mov
or
sbb
gs
push
mov
jl
ja
enter
mov
xchg
adc
int
loope
pop
xchg
mov
repz
cld
cmp
mov
lahf
inc
notl
cmc
int
push
stos
xor
mov
pop
mov
call
roll
push
iret
negl
lods
in
fs
roll
add
data16
icebp
xor
enter
sub
or
adc
fwait
hlt
cwtl
mov
adc
xor
enter
push
xchg
xchg
fwait
arpl
addr16
add
sbb
loope
pusha
xchg
xchg
and
push
inc
orb
int
cmp
fsubrs
push
ficoms
cmp
pop
or
aam
dec
call
and
pop
adc
cmc
mov
sbb
xchg
mov
pop
fs
push
addb
out
sbb
push
xchg
xchg
js
jmp
mov
scas
rorl
insl
xchg
mov
mov
icebp
inc
xor
mov
sub
or
call
or
ficoml
movsb
test
je
int
ljmp
sub
dec
aad
lret
xor
ds
xlat
inc
add
scas
mov
dec
sti
scas
arpl
adc
inc
cltd
js
xchg
in
pop
lret
enter
rorl
jbe
call
mov
add
scas
imul
push
fmuls
popa
andl
mov
adc
test
jne
adc
mov
leave
lahf
and
mov
lret
jno
loope,pn
mov
xchg
dec
mov
sbb
mov
call
dec
cli
insb
push
rcl
jbe
adc
notb
movzbl
lahf
test
adc
push
cmpsb
dec
aas
xchg
or
mov
mov
xor
or
push
lret
jb
cmc
data16
fidivrs
xchg
adc
push
push
rcrb
lea
inc
mov
in
lea
pop
ret
shl
pop
xor
dec
nop
and
and
adc
inc
fcomps
push
andw
testb
push
loope
mov
mov
pop
gs
dec
dec
cmp
xor
fmuls
inc
adc
cmp
jns
lcall
xchg
mov
jle
in
adc
ficomps
test
and
cwtl
cmp
xchg
and
shlb
or
and
pop
pusha
sbb
and
mov
dec
pop
push
sbb
std
mov
and
inc
data16
loope
insl
arpl
push
jmp
mov
adc
mov
xchg
rcr
push
and
mov
xchg
pop
mov
scas
push
lret
mov
daa
inc
ljmp
lcall
push
aad
mov
cwtl
outsl
scas
pop
jle
andl
adc
out
pusha
pop
shlb
call
or
icebp
loop
and
adc
xchg
rcrl
dec
sub
xor
sub
mov
mov
adc
ret
dec
inc
int3
xchg
outsb
pop
dec
sbb
mov
int3
or
pop
cltd
jno
xchg
add
xor
pmaxub
std
dec
aad
fisttpl
aad
leave
shll
jg
dec
nop
call
stos
rcl
arpl
loopne
outsl
push
pop
mov
xchg
sbb
and
xor
sub
leave
push
push
or
and
cmc
add
mov
xor
pop
sub
insb
ret
ss
subb
lret
inc
cs
popa
xor
inc
fcomps
xchg
scas
xchg
fs
paddb
insl
mov
push
movq
pop
xchg
jb
cmovbe
orb
int
xor
test
loop
pop
sbb
mov
in
test
mov
sahf
inc
and
clts
shlb
jo
bound
les
adc
mov
push
xor
jecxz
sbb
fwait
inc
pusha
xchg
xor
leave
or
loopne
sub
fcoms
pusha
inc
cwtl
cmp
push
mov
pop
push
push
or
and
sbb
dec
sbb
sti
push
loope
aaa
lret
mov
lods
sahf
sbb
add
mov
test
outsl
ja
mov
push
ds
clc
push
sbb
pop
je
adc
lea
mov
push
push
mov
mov
dec
aaa
pop
and
sbb
cli
cmp
jl
out
aad
mov
xchg
xchg
inc
or
push
mov
fbld
aaa
push
push
loope
loopne
lret
adc
xchg
and
pop
jmp
sub
outsl
shlb
mov
adc
mov
mov
add
in
push
aad
xchg
subb
ja
pop
hlt
mov
dec
imul
mov
ss
mov
jle
mov
inc
clc
add
cltd
hlt
and
pop
adc
mov
shl
call
cmc
lret
adc
push
and
jmp
lds
xlat
jg
lods
sbb
aaa
sbb
sbb
mov
adc
push
repnz
call
xlat
insb
mov
dec
cmp
lock
mov
dec
icebp
dec
inc
fcomps
fbld
rcl
dec
sub
add
push
scas
sbb
and
jge
adc
dec
xchg
sub
sbb
adc
jae
aad
fcoml
sub
jbe
adc
sub
mov
sahf
add
addl
lock
adcl
cli
sub
aad
inc
loope
lods
call
mov
pop
mov
mov
in
aam
mov
push
adc
or
add
adc
test
data16
sbb
adc
xchg
push
xchg
aad
sbb
mov
repnz
popf
jp
mov
fisubrs
arpl
aad
push
fildll
xchg
sarl
mov
sub
push
xor
fnstsw
mov
xchg
xchg
cmp
outsl
aam
add
add
xor
jbe
fcmovnbe
loopne
shl
loop
jnp
nop
xchg
call
jno
push
out
mov
fsts
adc
pop
lahf
xchg
call
xor
repnz
cld
xlat
jne
repnz
jl
jb
pop
aad
xor
mov
xor
shll
jno
or
mov
inc
ja
arpl
out
out
ja
dec
loope
out
jb
dec
shlb
push
les
pop
rclb
sarb
aam
ss
xchg
sbb
sbb
pop
shll
inc
dec
inc
int
adc
popa
push
mov
loopne
test
push
push
cmp
scas
fnsave
or
add
in
push
ja
dec
sub
cmc
gs
lcall
mov
rclb
adc
sub
jne
pop
xor
xor
int3
stos
inc
testb
js
into
fadds
mov
popfw
int3
adc
adc
sarb
jbe
sahf
mov
icebp
hlt
mov
xchg
icebp
fmull
je
cmpsl
popfw
fcomp
push
mov
mov
push
mov
out
and
mov
cmpsb
adc
jl
mov
mov
push
sbb
mov
movsl
xlat
or
xchg
mov
cmp
push
scas
outsl
sbb
sbb
lods
mov
mov
out
arpl
jb
dec
push
outsb
xor
in
xchg
jno
pop
repnz
aaa
jno
jns
mov
popf
xor
lret
cmp
stos
lods
add
out
neg
cld
ds
jae
xchg
add
push
imul
push
scas
imul
push
xchg
cmpsb
xchg
fidivrs
and
aaa
leave
adc
dec
or
xchg
fsubrl
xchg
or
cmc
popf
sub
push
loope
push
push
imul
lahf
mov
hlt
test
into
mov
add
pop
lods
inc
push
repz
mov
adc
push
push
add
aad
lahf
sbb
loop
pop
lcall
mov
dec
pop
aad
push
loopne
mov
scas
or
vpunpckhwd
pop
inc
call
stos
xchg
inc
dec
sbb
cli
ss
push
pop
aad
rclb
push
dec
lods
adc
jge
jbe
stc
sti
test
mov
push
icebp
aam
xchg
jge
int
dec
jns
cli
sti
enter
les
out
out
mov
in
mov
and
dec
stc
fmul
lahf
adc
add
push
jecxz
aaa
lcall
fwait
sahf
aad
hlt
call
mov
jno
push
rol
bound
inc
cld
fldl
sub
fst
lods
in
push
dec
cmp
cmpl
repz
adc
pop
mov
dec
std
dec
mov
arpl
jecxz
das
sbbb
xor
les
adc
mov
frstor
xchg
outsb
jbe
adc
inc
sub
std
sahf
inc
push
ret
push
arpl
push
int
inc
pop
dec
xchg
dec
pop
mov
push
jecxz
sub
popa
push
hlt
push
stos
rcll
xchg
mov
xlat
repnz
dec
addb
jo
loop
push
jnp
inc
in
loope
cmp
data16
popa
cwtl
es
cli
movsl
pop
sub
shlb
aad
call
mov
jno
dec
pop
dec
pop
rcll
ja
dec
popf
fcmovnu
mov
dec
xor
fcoms
xor
int
loope
cmp
cmp
sbbb
adcb
adc
sbb
jmp
data16
ss
sbb
mov
pop
adc
cmp
scas
repnz
inc
cwtl
sub
mov
or
incl
push
dec
adc
ja
out
adc
push
mov
out
fidivrl
cld
out
outsl
dec
mov
mov
lods
or
lods
sbbl
dec
into
into
mov
popf
xchg
leave
inc
shr
cmp
mov
loope
and
sbb
mov
adc
jae
into
xorl
mov
fwait
push
into
cmp
aad
adc
data16
outsb
push
push
inc
ret
push
clc
mov
mov
pop
cmp
xor
mov
add
bound
lcall
jb
mov
xor
loope
jb
xor
sub
testb
push
icebp
push
test
and
mov
out
xor
ret
xchg
adc
cmp
lret
test
ljmp
xchg
icebp
xchg
push
mov
or
mov
dec
sbb
xlat
xor
mov
pop
sbbl
outsl
jbe
test
mov
or
jl
fs
or
add
and
xor
mov
push
pop
int
std
stos
push
stos
xchg
mov
xchg
dec
popf
incl
jmp
push
xorb
fiadds
sti
test
push
loopne
in
int
dec
jbe
dec
dec
dec
ljmp
aad
inc
lock
mov
jb
jb
mov
das
rcll
in
aad
das
mov
jecxz
lret
inc
aad
cmp
test
mov
and
xchg
inc
cmp
xlat
ret
pop
out
mov
sbb
test
lcall
push
pop
rcll
inc
imul
popf
repnz
pushf
popl
mov
mov
sbb
inc
pop
xchg
ja
mov
imul
jnp
stc
notl
test
pop
cwtl
push
push
jb
xor
roll
call
aad
inc
push
add
jg
insl
push
es
mov
xor
pop
push
into
insb
cmp
xor
imul
xchg
jnp
aaa
imul
and
push
cmpsl
adc
fsubrs
mov
test
aam
push
ss
mov
fcompl
out
inc
push
nop
call
xor
or
xor
adc
pop
jno
sub
cmp
andl
pop
mov
popf
call
es
fisubrs
fistps
or
push
adc
sbb
fdivs
cmp
mov
inc
add
sub
fwait
rep
orl
in
add
rcll
mov
push
imul
aam
push
loopne
or
cmp
imul
mov
push
cltd
clc
adc
repz
out
inc
jmp
bnd
mov
scas
inc
fcomi
adc
inc
inc
or
cmp
inc
mov
cmp
loope
sbb
sub
xchg
jle
push
call
xor
xor
mov
aaa
push
or
lods
inc
push
js
call
jb
and
xor
das
fcoms
js
jmp
push
stos
xchg
lret
adc
push
cmp
cmp
jp
mov
cltd
es
or
je
testb
ja
dec
adc
xchg
repnz
pop
push
imul
adc
mov
sbb
push
jno
cmp
mov
and
sbb
dec
or
mov
inc
or
adc
lods
shll
push
xchg
lds
adc
push
leave
add
dec
loop
and
dec
and
mov
mov
pop
lods
int3
mov
mov
mov
mov
stos
xchg
aad
xchg
dec
xor
sbb
push
nop
pop
cmpsl
xchg
loope
movsl
arpl
or
mov
or
fwait
pop
sub
sub
fidivl
mov
lret
jle
mov
inc
jp
jne
shrb
test
xor
in
inc
pop
in
mov
and
sahf
dec
mov
insl
xchg
pushf
pop
cmpsb
push
dec
adc
mov
nop
or
ret
mov
gs
testb
dec
push
int3
push
or
dec
rol
call
gs
ljmp
bound
dec
sahf
jg
lcall
push
jecxz
pop
sbb
xor
sub
jle
cmp
fidivrl
sub
and
push
jle
inc
pop
aad
mov
sub
or
jg
bound
movsl
or
mov
jnp
xchg
and
clc
or
popf
aam
adc
xchg
ss
xor
sti
in
pop
std
or
add
out
push
in
pop
pushf
fistpll
xlat
roll
mov
loope
jnp
popa
pushf
testb
dec
push
mov
fwait
push
pushf
adc
and
adc
outsl
in
dec
jmp
push
out
daa
dec
xlat
test
scas
test
push
rcll
and
mov
cmpsb
or
or
xor
outsl
fs
int3
add
scas
out
mov
xchg
dec
push
pop
ss
push
cmp
sub
stc
pop
and
push
scas
lret
adc
test
bound
mov
pop
add
push
fwait
mov
lahf
or
dec
aad
adc
out
aad
fdiv
push
rclb
push
add
cli
not
cmp
aam
in
dec
jp
pusha
mov
fs
jb
or
int3
adc
std
int3
inc
jno
lea
push
sti
scas
hlt
dec
xchg
lcall
mov
sub
aad
in
cltd
leave
cmp
push
inc
imul
add
sbb
mov
in
iret
push
cwtl
xchg
cmp
sub
dec
push
push
pop
dec
or
cmp
cltd
mov
gs
shr
or
push
jae
ds
outsl
add
rcl
push
push
dec
adc
cmp
aam
push
rclb
mov
cld
test
jp
adc
popf
mov
test
stos
push
popa
push
sbb
and
lods
shrb
int
rcrl
pushf
movsl
rclb
push
out
inc
cmp
arpl
std
aam
cli
pop
out
add
inc
repnz
decl
std
hlt
mov
std
push
jb
add
lods
inc
jbe
xlat
dec
add
pop
in
into
hlt
out
jae
xor
lods
sbb
and
nop
xchg
and
out
adc
fcomi
push
sbb
xor
dec
mov
sub
adc
adc
rcr
sti
es
repz
pop
loope
jae
dec
jp
ret
insb
and
outsl
call
test
dec
mov
subb
pop
sub
add
test
negl
dec
mov
adc
add
inc
jne
inc
cmp
add
into
adc
add
test
js
dec
js
aad
push
into
or
scas
idiv
xor
fwait
sub
or
sub
inc
mulb
lods
rclb
call
in
mov
jb
push
xlat
addr16
aam
fwait
scas
mov
icebp
mov
pop
ja
pop
xchg
lods
cmpsl
and
sub
mov
movsl
adc
push
push
dec
loopne
jg
mov
mov
shl
lret
sub
fdivrs
push
jg
add
out
xor
rolb
rcll
clc
xor
shll
xchg
dec
inc
add
cmpsb
rolb
rcll
xor
stos
addr16
imul
pop
or
mov
add
notl
sub
mov
fistps
xchg
sbbb
xchg
filds
lret
lods
js
mov
lahf
pop
push
test
or
das
nop
jge
add
std
cmc
clc
popa
in
mov
inc
or
mov
dec
in
pop
test
sbb
pop
add
push
dec
and
add
mov
mov
cmpsb
and
sbb
add
clc
lea
rorl
fldln2
push
jne
mov
xchg
xchg
repnz
xchg
sub
xor
lods
js
sub
jmp
cmp
pushfw
cmp
popf
jnp
lds
adc
and
sub
mov
pop
push
xlat
mov
sub
dec
sbb
xchg
mov
ljmp
add
mov
es
clc
hlt
push
enter
adc
fimuls
mov
mov
pop
fstps
xchg
or
push
xlat
in
pop
les
cli
sbb
int3
mov
dec
mov
add
and
mov
mov
sahf
icebp
push
adc
stos
dec
outsl
mov
sar
xor
std
das
pusha
or
repnz
inc
mov
add
dec
data16
mov
test
pop
repnz
mov
cmpsb
push
scas
jecxz
push
popa
adc
outsl
dec
sbb
push
rclb
dec
not
adc
rcll
jnp
pop
loope
in
roll
xorl
pop
roll
sahf
inc
cmp
lret
jb
loopne
sahf
adc
jp
int3
add
adc
cwtl
add
dec
mov
fildl
pop
mov
adc
insb
cmpsb
imul
pop
iret
and
xchg
mov
stc
mov
push
xchg
in
pop
sahf
push
xchg
mov
mov
shl
into
mov
repz
mov
roll
enter
fisubl
into
push
cmpsl
mov
mov
leave
push
cmp
xor
ss
adcb
xchg
clc
push
into
iret
fsubs
dec
jne
mov
xor
mov
pushf
dec
movsl
inc
jns
pop
and
idivl
xor
mov
lret
pop
or
dec
mov
leave
mov
add
cmc
pop
sbb
xor
pop
xor
jno
jb
fs
lods
fidivrl
bound
pop
mov
jb
xchg
pop
mov
xor
push
dec
xor
lods
push
xor
inc
jb
or
mov
mov
xor
or
repz
mov
stc
leave
movsb
mul
into
push
push
adc
push
mov
iret
imul
scas
fwait
sub
jne
dec
fwait
add
dec
and
fcomps
mov
test
inc
sti
mov
out
in
mov
fldt
ja
adc
jae
mov
out
jbe
sbb
push
or
dec
mov
jae
stos
and
xchg
mov
je
pop
jno
aad
fwait
out
movb
jno
fwait
mov
jmp
sahf
xchg
outsl
sbb
xchg
mov
or
sti
fsubr
test
dec
dec
jae
inc
mov
mov
std
sbb
inc
push
add
sahf
and
and
inc
out
sbb
jp
lds
jns
test
test
scas
movsl
ss
into
xchg
pop
pop
pop
dec
xor
into
add
mov
std
or
repz
jle
pop
pop
dec
dec
xchg
jnp
xchg
mov
add
aad
xor
push
xchg
sbb
sarl
mov
addr16
mov
mov
aaa
fsubs
mov
iret
loope
jnp
mov
xchg
push
shlb
arpl
xchg
scas
rorl
xorb
shll
and
clc
or
cltd
out
rcrb
test
mov
or
mov
jge
pop
sub
rcll
jp
fstpt
adc
push
rcll
sub
xchg
aam
push
ljmp
and
mov
dec
add
mov
js
xchg
aas
mov
dec
mov
fdivrs
inc
popf
adc
popf
mov
push
lahf
xchg
push
ja
int3
pop
ret
xchg
xchg
gs
rcll
pop
inc
repz
ljmp
add
outsb
cmpsb
adc
jg
popa
leave
xchg
or
mov
dec
inc
sarb
leave
cmp
dec
push
and
fildl
aas
pop
xchg
fstpt
push
outsl
lock
gs
rorb
xlat
loop
movsb
das
lds
cmp
adc
cld
mov
xchg
rcl
cmp
jne
sarl
push
das
mov
push
add
loopne
cs
add
mov
jb
lock
xchg
movsb
shl
xchg
pushf
pop
jns
jno
or
sub
xor
sti
xchg
xlat
imul
inc
shr
inc
or
fsub
insb
cmp
push
adc
imul
xor
cli
jp
les
xor
in
sbb
add
or
adc
inc
shlb
call
call
sub
nop
mov
jecxz
aas
xor
xchg
fcomps
mov
movsb
lods
sub
dec
sbb
dec
xchg
int
lea
adc
mov
push
inc
sub
xor
out
cmp
jge
popf
cmp
sub
jno
lods
in
xchg
xchg
popf
fldt
mov
repnz
loopne
scas
xchg
xor
adc
mov
shlb
xorb
jae
mov
loopne
bound
jg
pop
andb
stos
orl
xchg
insl
sub
pop
mov
data16
push
push
jno
mov
movb
xchg
out
xlat
xchg
hlt
adc
dec
sbb
push
sbb
fmuls
mov
push
xchg
inc
sbb
mov
mov
aad
xchg
pop
jbe
rcll
mov
adcl
rclb
shlb
mov
rorb
ficomps
mov
xchg
xchg
mov
pusha
insb
pop
fld
mov
mov
loope
out
push
divb
or
addr16
loop
cmp
aad
sub
xchg
push
popa
sahf
rcll
jb
repz
out
cmpsl
xchg
es
dec
loop
dec
jmp
fsubl
adc
leave
xchg
je
sub
mov
add
lret
adc
lahf
sbb
negb
mov
and
and
ljmp
rolb
dec
adc
pop
xorl
fadds
mov
into
pop
nop
daa
adc
loop
shlb
popa
sti
cmp
xor
mov
pop
and
fdivs
testb
xchg
pop
in
mov
pop
jl
cltd
mov
push
cmc
popf
inc
pop
sub
and
vpunpcklwd
cmp
adc
mov
shr
cmp
in
sub
sarb
ficompl
dec
out
mov
cmp
je
jecxz
repnz
jp
lret
insb
xchg
sbb
insl
cmp
mov
pop
and
mov
roll
loop
pop
mov
sub
gs
pop
rcl
mov
push
arpl
frstor
xchg
mov
pop
pop
bound
addr16
sbb
sbb
mov
or
aaa
leave
inc
lods
cmp
adc
push
dec
inc
negb
fiaddl
fmull
stos
pop
xor
das
faddl
add
mov
jbe
jb
push
dec
push
loop
int
sub
scas
push
lods
jle
ljmp
pop
jns
and
and
push
inc
jmp
dec
or
aad
xchg
push
gs
shlb
rcll
xchg
push
push
add
pop
mov
std
mov
xor
xchg
adc
push
jb,pt
out
inc
jp
inc
icebp
dec
mov
aaa
mov
xchg
out
push
in
fistps
cli
jae
mov
jmp
mov
in
xchg
push
mov
lea
pop
push
or
daa
dec
sbb
ret
or
push
mov
adc
add
in
repz
push
sub
mov
es
iret
inc
xchg
jg
and
aaa
mov
aam
pop
adc
dec
out
lret
mov
pop
add
jnp
call
cli
adc
out
mov
add
mov
xlat
mov
pop
ds
cmc
test
or
adc
xchg
jb
xor
mov
lret
xlat
aad
sahf
add
fwait
sbb
sbb
out
and
enter
in
add
add
je
xor
sbb
shrl
and
inc
pushf
lret
or
test
cmpsl
data16
mov
dec
mov
rclb
and
outsl
and
cmpsl
pop
fucomip
rolb
xor
push
lret
push
sahf
mov
mov
in
and
dec
and
in
int3
pop
addr16
pop
cwtl
jo
lods
add
dec
mov
push
push
mov
outsb
and
or
rclb
lock
add
push
or
repnz
mov
xchg
pushf
bound
xor
pop
add
test
insb
test
adc
pop
out
in
hlt
lods
mov
scas
inc
or
add
inc
fcoms
dec
cmc
in
mov
push
inc
mov
adc
mov
out
push
jbe
out
repnz
ret
sahf
push
or
scas
push
sub
jae
jb
loopne
push
lods
mov
ficoml
movsl
ja
repnz
nop
and
pop
in
xchg
nop
sub
push
xor
xchg
popf
mov
and
push
ret
nop
scas
cltd
lods
xlat
call
inc
xor
in
and
mov
and
nop
sub
mov
xchg
aad
dec
popa
lock
push
pop
push
repnz
or
aaa
call
xchg
push
es
jns
lret
fwait
and
aad
cs
dec
pop
and
adc
icebp
dec
add
out
pop
in
jg
inc
sbb
aad
call
adc
in
outsl
push
gs
aam
cltd
add
sbb
sub
xchg
xor
sahf
cmp
ficoml
mov
jo
sub
and
mov
push
add
out
lret
imul
mov
popa
ja
outsl
dec
stos
cmp
loope
test
in
xchg
dec
stos
adc
push
testb
subl
lods
sbb
mov
mov
aad
mov
out
and
xchg
adc
jecxz
mov
mov
clc
rcrb
inc
orl
push
mov
dec
inc
ret
mov
insl
dec
or
add
movb
loop
xchg
xlat
in
mov
pop
fbld
add
mov
xchg
in
aas
cmpsb
aad
or
outsb
jge,pn
push
dec
dec
dec
and
mov
std
mov
jmp
dec
and
push
and
and
in
test
mov
jecxz
out
fdivrs
dec
sti
push
sbb
cltd
push
and
call
mov
xchg
pop
mov
pop
cli
pop
pop
jmp
dec
ss
sti
dec
stos
cltd
out
orl
cltd
cmp
sarb
rorb
xor
jne
xchg
push
inc
imul
cs
aam
add
cs
test
dec
stos
cmc
into
add
fwait
inc
ss
nop
cmp
and
decb
int
cmpsb
jmp
mov
pop
add
rcl
dec
dec
cltd
add
pop
mov
aam
dec
out
loopne
cmp
push
adc
dec
sbb
mov
sbb
in
pop
dec
vmovq
jns
cmp
and
fwait
imul
repz
out
lret
push
aas
aam
dec
mov
sub
and
lahf
sbb
int3
xchg
dec
bound
js
fwait
push
mov
jbe
mul
ss
dec
mov
pop
out
adc
add
test
ficoms
dec
int
inc
ja
int
rorb
mov
xor
xor
jge
mov
dec
cmp
pop
sbb
sbb
lea
push
sti
cwtl
daa
repz
mov
pop
push
rolb
mov
shlb
mov
xor
and
imul
push
sub
stc
nop
test
bound
int3
lds
push
adc
add
mov
mov
xchg
and
mov
add
add
stos
sub
icebp
cmovle
fbstp
test
jmp
lods
int3
mov
stc
or
lret
jg
push
fwait
dec
fsubs
shlb
xor
adc
mov
push
mov
dec
loopne
rcl
pop
push
out
sti
enter
nop
mov
jge
loope
inc
and
lret
push
test
rol
mov
insl
jg
push
push
lret
or
out
shrb
inc
enter
dec
pop
sbb
mov
xor
ljmp
dec
leave
sarb
in
push
mov
out
sub
adc
push
mov
xchg
and
call
dec
or
int
cmp
nop
adc
aad
jne
in
xchg
int3
xchg
loop
call
xor
call
mov
sub
adc
push
test
dec
fidivl
stos
mov
leave
repz
iret
jle
inc
xchg
push
lods
loop
jp
repz
fwait
ljmp
adc
ja
daa
ret
lock
mov
push
test
push
int3
xlat
roll
or
pop
xchg
pop
test
shrl
cli
adc
add
repz
pop
bound
pop
adc
inc
sahf
frstor
push
rcll
loop
aaa
outsb
aad
int3
ret
ficoms
mov
and
lea
out
add
add
adc
notb
ret
xchg
int
dec
aam
ds
sub
sub
aad
pop
sbb
mov
or
push
add
jnp
in
xchg
push
inc
jge
fnstsw
out
inc
call
xchg
sarb
test
out
loop
in
mov
pop
pop
jnp
inc
imul
push
xchg
push
inc
stc
test
adc
pop
adc
lock
xlat
dec
fwait
adc
stos
stos
jp
in
out
addb
fs
and
popa
inc
arpl
in
pop
mov
roll
fs
push
or
out
push
push
loope
xchg
adc
mov
push
adc
addb
push
push
xor
repnz
hlt
jle
cmp
repnz
dec
inc
cs
sub
test
loopne
pop
push
mov
mul
out
dec
in
xor
jmp
mov
mov
inc
es
call
jecxz
dec
jne
pop
mov
into
ss
and
dec
rcll
jns
mov
and
mov
adc
icebp
mov
mov
rol
adc
js
push
mov
and
sub
mov
mov
mov
in
sbb
je
dec
or
inc
pop
hlt
sahf
xchg
jle
out
mov
call
mov
jp,pn
cmp
into
or
cld
pop
mov
inc
testl
adc
mov
pop
cmp
xchg
mov
pop
adc
out
imul
fs
xchg
test
jb
and
or
movsl
push
fistps
push
roll
dec
in
insb
dec
ds
cmp
push
aad
pop
sbb
movsl
push
xchg
insb
push
outsl
push
add
dec
and
jne
dec
aad
xchg
test
or
dec
es
data16
adc
aas
rolb
fsubrs
imul
dec
cs
or
pop
shlb
mov
xor
lea
mov
sbb
cmp
out
mov
and
lcallw
dec
sbb
pushf
push
push
and
mov
and
jae
dec
mov
jnp
adc
call
pushf
or
into
pop
data16
fnstenv
jo
pop
lret
jle
xor
add
aad
and
xchg
dec
dec
cmp
mov
outsl
mov
push
and
jg
cmc
add
adc
inc
inc
mov
xlat
sub
inc
dec
mov
lret
mov
inc
loope
out
test
addr16
inc
inc
addr16
pop
and
stos
xor
push
int3
inc
cli
xchg
sbb
jae
int3
cs
push
sbb
add
sahf
adc
dec
mov
or
ficoml
jg
outsb
jb
jns
inc
mov
and
and
pop
mov
xor
mov
and
cltd
js
mov
pop
ret
adc
inc
push
jno
lret
imul
adc
or
pop
test
bound
jae
push
push
adc
jbe
shlb
into
iret
hlt
addr16
call
test
aas
xchg
inc
inc
int3
sti
push
pop
dec
xchg
xor
ret
push
pop
into
adc
divb
int
xchg
dec
add
lock
xchg
ja
in
in
scas
jge
js,pt
or
or
dec
inc
push
mov
sub
xor
dec
cmc
fsubrs
sbb
imul
push
scas
mov
bound
dec
jg
fisubrl
xchg
or
cmp
mov
clc
sub
notb
cli
js
and
adc
je
in
pusha
or
outsl
mov
sbb
pop
ret
call
in
ss
imul
or
scas
sub
fwait
adc
inc
xchg
loopne
and
roll
out
cltd
loopne
cmp
inc
int3
pop
pop
inc
fldenv
dec
arpl
sbb
mov
ret
mov
xchg
loope
push
test
sub
dec
mov
dec
cmp
xchg
jecxz
mov
pop
pop
push
outsl
std
sub
mov
or
mov
ljmp
fiaddl
fsubp
aad
test
or
mov
aad
or
arpl
adc
jnp
pop
add
jg
inc
out
repnz
push
xchg
test
jne
xor
call
test
lods
adc
dec
inc
mov
mov
movsl
jb
pop
call
incl
aad
add
mov
scas
test
jl
loopne
xor
jno
add
mov
in
adc
jg
mov
orl
mov
push
xor
jge
rolb
dec
movsb
in
jnp
adc
inc
imul
pusha
in
pop
imull
sbb
leave
pop
add
lods
pushf
dec
mov
mov
insb
add
test
into
adc
inc
push
cmp
or
sub
or
adc
ss
jno
dec
mov
sbb
push
mov
jae
adcl
xor
and
mov
push
sbb
mov
sarl
jns
inc
jnp
adc
and
stc
rcrb
test
movsl
jb
xor
xor
loopne
das
fcmovne
adc
jbe
add
test
xchg
inc
std
sbbl
and
pop
and
sbb
push
nop
in
aad
stos
mov
nop
lahf
in
pop
mov
incl
pop
bound
xor
iret
sub
data16
cmpsl
mov
xlat
in
inc
int3
pop
stos
cmp
aad
sbb
pop
jo
adc
in
imul
shl
stos
cmp
and
adc
adc
pushf
xor
jp
sub
pop
push
lock
adc
and
scas
adcl
and
adc
in
and
adc
lock
adc
xor
add
xchg
int
lods
clc
out
data16
ss
stos
jmp
mov
xchg
xor
push
icebp
ror
cs
fcomps
xor
jecxz
push
sbb
or
jmp
test
jae
movsl
and
pop
dec
test
push
jne
xchg
pop
repnz
insb
ss
adc
repnz
fidivl
xor
mov
push
pusha
mov
xor
je
mov
scas
cwtl
ds
and
mov
movsl
sahf
mov
sub
mov
popf
add
xchg
lods
aam
mov
add
adc
and
cmpb
push
and
add
out
into
nop
mov
pop
xor
adc
xchg
adc
mov
cmp
movsl
fistl
loope
mov
add
push
adc
jno
dec
sbb
lods
ficoml
out
dec
xor
mov
pop
aad
mov
jb
data16
adc
jno
repnz
sbb
push
pushf
mov
cmc
mov
jns
push
sbb
push
es
sub
imul
pop
fxch
mov
mov
and
adc
andnps
xchg
dec
mov
scas
mov
frstor
loop
xor
inc
imul
cmp
mov
loop
sub
fwait
push
inc
sub
bound
test
mov
daa
pop
adc
orb
testb
xor
sahf
enter
fcomp
fstpl
cs
sahf
iret
mov
cmp
jmp
ss
xor
pop
std
adc
rcrl
cmp
imul
xchg
pop
and
push
fucom
adc
push
into
add
popa
aaa
adc
data16
clc
mov
xchg
pop
cmp
push
sub
dec
pop
sub
out
adc
scas
or
dec
aam
pop
and
addr16
inc
lds
lock
xor
sub
cmp
jns
cwtl
jecxz
cmp
mov
not
mov
data16
xchg
ds
sbb
cld
pop
pop
and
or
dec
sub
sbb
push
push
dec
pop
cmc
fmuls
mov
insb
ds
or
dec
xchg
dec
orb
iret
test
jb
jno
cmpsb
test
in
adc
push
and
in
addr16
pop
xchg
lcall
jb
scas
test
clc
xchg
out
aaa
sbb
cmpsl
pop
aaa
sbb
cmp
int
cmc
mov
fwait
mov
sbb
es
call
or
or
xchg
mov
push
pop
ss
rclb
dec
or
xchg
mov
cmp
xor
mov
mov
dec
sahf
push
inc
mov
cmp
fwait
dec
aad
aad
stos
xchg
cwtl
pop
push
mov
orl
ss
inc
and
push
ss
lcall
pop
cmp
push
xchg
pop
and
sbb
mov
data16
or
adc
div
dec
push
pop
les
jbe
mov
sbb
popf
add
inc
xchg
push
rcrb
cmp
push
divb
dec
mov
icebp
movsb
jne
sbb
and
pushf
repnz
inc
roll
bound
pop
cmc
les
add
mov
lds
arpl
fisubs
and
scas
push
int
dec
rcrb
push
sbb
sub
fimull
xchg
leave
inc
mov
loope
sbb
out
xchg
test
leave
notb
push
lret
mov
push
in
lods
inc
pusha
js
and
lret
fistl
fisttpll
sarb
dec
aaa
fwait
jl
push
adc
dec
xor
movsl
fcomps
push
leave
dec
scas
pop
popa
cmp
dec
dec
ss
sbb
xchg
sub
dec
imul
call
cmc
dec
add
sbb
push
mov
jge
mov
mov
pop
mov
push
sbb
cmp
rol
add
iret
lods
xchg
lods
in
leave
inc
jne
jo
push
cmp
cmp
mov
and
pop
int
test
and
lds
xchg
jbe
fsubrs
stos
sbb
inc
in
and
addr16
sbb
push
scas
jp
and
pop
rolb
cmp
je
sarb
out
mov
push
call
cmp
push
out
rolb
cmc
mov
adc
cmp
xor
jbe
ret
push
push
or
push
rcr
clc
rep
insl
je
int3
movsb
out
dec
jnp
mov
dec
and
or
xor
pop
xor
imulb
sub
lret
shlb
dec
je
bound
lahf
movsl
or
ret
mov
negb
stos
iret
mov
add
lea
stc
dec
das
cmpsl
xchg
loopne
mov
mov
out
ds
repnz
and
xrelease
and
hlt
icebp
icebp
insb
ret
inc
sbb
adc
arpl
call
mov
sub
push
and
sbb
insb
repz
inc
adc
xchg
lcall
and
sbbl
test
jnp
xchg
scas
bound
mov
call
or
or
mov
repz
data16
shl
mov
stos
test
pop
mov
inc
dec
cmp
pusha
pop
and
push
xor
xchg
cs
dec
imul
or
test
xchg
adc
loop
adc
ret
xor
andl
in
dec
inc
scas
push
test
loope
fadds
pop
jge
inc
data16
mov
unpcklps
scas
push
aam
aaa
mov
mov
xchg
mov
fldcw
dec
xlat
push
xchg
shrb
jecxz
repz
bound
ret
push
shl
inc
dec
mov
scas
addr16
repnz
scas
mov
lds
lahf
mov
push
imul
mov
fldenv
mov
ljmp
fisubs
xchg
xor
dec
sub
ljmp
or
jg
sbb
mov
adc
mov
shlb
jns
dec
sub
and
jmp
adc
add
or
into
lcall
and
adc
dec
lods
pop
mov
loope,pt
add
mov
push
lret
mov
out
cld
cmp
shll
push
pop
out
push
fmuls
clc
test
push
dec
sbb
jecxz
xchg
sub
adc
xor
xor
das
leave
test
add
out
xor
scas
shrl
std
sub
pop
sti
jg
sbb
adc
add
dec
mov
jbe
inc
sti
lods
add
cmp
mov
popf
lds
add
fcoms
push
mov
push
sub
rcrl
jo
jg
inc
imul
hlt
mov
addr16
jnp
jle
add
xchg
dec
jl
adc
es
pop
out
jb
int3
xlat
repnz
mov
cwtl
jne
adc
movsl
xor
enter
and
jg
pop
dec
ret
inc
lock
je
mov
mov
adc
jo
rclb
and
popf
and
pop
mov
dec
ficompl
mov
inc
rcl
xchg
das
jmp
rcrl
push
or
ljmp
jmp
out
adc
incl
sahf
testb
adc
std
push
cmc
and
test
sbb
pusha
push
adc
rcll
push
or
push
aad
sbb
cmp
lods
roll
das
imul
dec
cmp
dec
inc
adc
sbb
xlat
mov
xorl
shrl
push
aad
cwtl
and
andb
test
js
and
push
gs
push
xor
and
cmpsl
and
aas
fstl
call
mov
mov
sbb
mov
add
mov
sti
out
dec
mov
pop
cmc
or
adc
or
out
push
pushw
and
imul
adc
subb
xorl
in
adc
add
test
add
pop
rclb
xchg
mov
or
pop
sbb
mov
and
add
dec
fwait
adc
xchg
jae
push
cmpsl
cmpsb
xlat
data16
pop
sub
out
xchg
mov
xlat
mov
rsqrtps
add
xchg
aam
in
xchg
sbb
rcll
mov
lods
sahf
ss
mov
das
in
and
or
cwtl
xor
jmp
sbb
mov
shrb
inc
and
inc
cmp
adc
cld
mov
inc
jbe
or
mov
push
push
sub
mov
xor
fdivs
mov
adc
sub
sub
das
rclb
push
add
inc
dec
dec
sub
pop
pop
out
loope
dec
jb
push
outsb
int
bound
inc
pop
jle
inc
enter
cmpsb
jne
sbb
loop
data16
in
mov
lods
aaa
dec
xor
and
push
stos
daa
pop
insb
or
adc
xchg
decl
popa
je
xor
adc
sahf
testl
les
xchg
mov
repnz
adc
add
mov
push
mov
loope
jg
aaa
nop
xchg
sbb
pop
jb
in
ds
aam
adcl
rorl
test
out
mov
add
jbe
into
dec
movsb
mov
cmp
testl
mov
pop
mov
dec
sub
loope
mov
xchg
xchg
lock
adc
cmp
mov
ljmp
xchg
call
adc
pop
and
or
lods
pop
push
shr
add
cmp
popf
adc
scas
mov
sub
imul
addr16
sbbl
in
js
jae
xchg
call
subl
jmp
push
out
mov
imul
das
inc
pop
mov
dec
shrl
push
push
and
cmp
sub
mov
inc
add
mov
sahf
outsl
xchg
aad
rorb
std
icebp
inc
cmpsb
clc
aas
mov
jmp
xor
jb
pop
push
es
imul
mov
pop
cmp
xchg
aam
dec
mov
imul
mov
mov
adc
fistl
ss
push
sbb
pop
mov
mov
pop
jmp
ficomps
or
fsts
sbb
cmp
dec
ss
fistpl
ss
cld
outsb
loopne
test
loope
cmp
dec
mov
adc
pop
mov
iret
xlat
and
ss
sti
out
mov
push
push
push
data16
das
dec
aam
lea
pop
dec
xchg
adc
jne
push
aad
cmp
pop
neg
das
daa
xchg
imul
push
jmp
sub
pop
and
aad
lods
adc
push
cmp
dec
pop
xor
dec
rorl
xor
loop
and
fcoml
lods
adc
add
shrl
push
enter
jle
cmp
loope
cmpsl
push
call
mov
in
xor
pop
inc
call
ss
mov
xor
mov
cmpsl
popa
push
jp
rorb
mov
iret
fadd
xchg
rorb
adc
dec
sbb
sarb
es
mov
inc
xlat
lds
fstl
dec
rorb
push
dec
cld
mov
les
sub
popf
lods
add
adc
adc
into
daa
sarl
hlt
ficoms
lods
insb
test
push
lret
pop
add
pop
adc
jo
xchg
loope
and
repnz
sbb
xchg
add
fadd
data16
in
loopne
fisttpl
les
pop
pushf
test
dec
ljmp
cmpsb
push
or
xchg
das
movsl
add
push
sub
or
push
dec
and
mov
add
cmc
and
loop
imul
scas
sbb
jbe
lret
call
lds
mov
push
sub
mov
aad
push
cmpsl
lock
jo
shrl
divb
pop
dec
in
aas
fsubr
adc
or
dec
xchg
jne
push
jecxz
scas
adc
sub
test
xchg
adc
into
mov
mov
repz
jecxz
mov
push
sti
dec
add
push
xor
push
and
xchg
fadds
gs
push
sti
js
test
xchg
icebp
cmp
sub
movsl
dec
test
dec
insb
pop
sbb
shl
cwtl
mov
imul
push
pop
adc
inc
insb
mov
mov
imul
push
outsb
cmp
mov
shll
loope
or
and
imul
jns
insl
and
xchg
adc
imul
mov
test
call
outsl
xor
fdivp
insb
daa
les
out
sbb
cs
sub
aaa
sbb
cs
es
lahf
xchg
outsl
test
and
stc
push
xchg
jae
std
jae
push
mov
and
rorl
movsb
add
fdivp
out
enter
jge
push
cwtl
xchg
loop
int3
out
mov
ds
mov
xchg
rorb
cmp
adc
mov
xor
dec
inc
movsb
xor
lods
pop
mov
popa
addr16
mov
cmp
sbbb
or
lahf
fists
cmp
loope
dec
xor
and
daa
popa
sahf
add
adc
push
xchg
shlb
pop
in
ss
mov
out
fmuls
inc
push
call
jp
dec
adc
inc
jb
insl
xor
cltd
pop
leave
push
out
mov
push
cmpl
sti
subl
imul
mov
aam
aaa
add
add
lea
sti
lret
inc
jno
orl
mov
inc
popa
mov
loope
jb
sbb
dec
out
xor
fmulp
test
xor
enter
push
les
in
lods
xor
mov
addl
les
mov
fidivs
jmp
mov
test
mov
dec
bound
shll
imul
xchg
jl
dec
add
gs
or
dec
and
fbstp
jne
xchg
adc
mov
inc
sub
push
fwait
or
leave
enter
pop
and
fs
popa
push
jg
je
pop
xchg
arpl
or
add
mov
pop
nop
mov
mov
cs
js
test
sti
outsl
pop
add
pop
pusha
push
test
dec
sbb
push
es
loope
mov
mull
inc
inc
movsl
jbe
sahf
shl
adc
out
xor
or
ret
call
fs
fwait
push
ret
fdivp
jbe
clc
inc
out
into
decl
aad
xor
mov
aas
inc
xor
divb
cwtl
xorl
ljmp
scas
jno
pop
daa
or
and
adc
lret
test
inc
mov
popa
dec
pop
test
adc
lds
std
fadds
dec
dec
push
mov
jmp
xchg
repz
push
cmpsl
and
pop
xor
popf
es
push
sahf
mov
push
out
sub
dec
push
add
or
adc
xor
rolb
or
icebp
les
inc
int3
out
dec
push
popa
push
sbb
xchg
push
push
adc
das
scas
pop
and
mov
xor
pop
cld
ljmp
sub
mov
mov
insl
cld
xchg
adc
mov
dec
adc
loopne
outsb
cmp
pop
popf
inc
mov
fsubrs
adc
adc
mov
sub
adc
inc
push
rcrb
sub
addr16
push
lcall
loope
decl
mov
mov
pop
xor
cmp
mov
enter
add
int3
mov
cwtl
xor
sbb
dec
xchg
adc
add
fstl
mov
lret
push
cmp
dec
xor
dec
cld
inc
mov
mov
xchg
out
cmp
or
or
xlat
dec
dec
cmpb
push
or
nop
adc
lahf
mov
in
popa
popf
mov
fwait
mov
das
sub
mov
fnstsw
push
cmp
sbb
ss
adc
aad
hlt
mov
jo
call
mov
sbb
icebp
inc
subb
cmp
or
daa
push
cli
inc
fsubrs
push
jmp
inc
ja
fildl
xorl
mov
push
fisubrl
es
sahf
push
jbe
addr16
mov
es
push
push
jae
out
mov
lock
push
addr16
pop
mulb
xchg
loopne
out
fsubrl
repz
ret
out
pop
lret
push
pop
stc
addr16
mov
mov
leave
cld
push
mov
fsincos
decb
data16
inc
adc
and
and
jae
imul
adc
daa
xor
pop
daa
cmpsb
push
aam
xor
mov
jecxz
pop
jg
movsl
ds
mov
pop
xchg
nop
in
mov
sub
js
mov
ljmp
mov
adc
add
inc
pop
cli
mov
fisubs
fs
sbb
addr16
pop
es
lea
pop
aas
or
call
sarl
inc
sub
nop
jno
shrb
xchg
out
adc
fs
cmp
xchg
cs
loop
mov
push
mov
cmp
call
and
aam
sarb
lea
adc
xor
pop
and
call
push
adc
gs
pop
sub
cmc
test
xor
dec
pop
and
aad
cmp
clc
in
push
or
push
loop
mov
cmpsl
fcom
pop
and
mov
repnz
into
out
jp
fwait
lret
and
or
push
popa
pop
loope
std
push
and
ss
pop
cmp
fwait
scas
leave
push
dec
pop
nop
push
inc
and
ds
dec
in
cwtl
push
ficoms
dec
mov
insb
decl
push
pop
inc
mov
jecxz
cmp
loopne
or
das
mov
jo
mov
pop
xlat
enter
les
mov
inc
dec
cmpsb
xchg
and
cbtw
sti
xor
shlb
dec
jne
push
adc
push
mov
cltd
fisubl
pop
add
mov
movsb
pop
pop
mov
xchg
push
adc
popa
mov
mov
fiaddl
and
movsb
jmp
insb
push
lret
adc
cs
or
lret
and
push
and
test
jno
nop
lret
adc
jne
mov
idivb
or
adc
adc
pop
bnd
or
es
hlt
addr16
nop
iret
xchg
outsb
cmp
sar
repnz
inc
cwtl
andl
push
popa
sub
adc
jge
scas
aad
and
hlt
ret
xchg
popa
sub
mov
testl
dec
pop
shl
leave
dec
push
cmc
jmp
lock
into
lcall
cmp
jnp
inc
mov
inc
imul
mov
shlb
js
scas
jmp
fidivrl
mov
mov
and
into
inc
and
je
dec
mov
inc
cs
fdivp
into
lcall
dec
lret
sub
ds
dec
repnz
or
fimuls
into
ja
ds
cmp
jecxz
ss
fdivrp
push
in
xchg
and
xchg
push
in
fmulp
xchg
adc
inc
call
adc
mov
cmp
mov
test
xor
inc
pop
jns
mov
sar
mov
popa
dec
test
test
icebp
sti
pop
sbb
pop
cmp
jno
dec
inc
lret
add
mov
bound
adc
icebp
xchg
xchg
call
mov
mov
sti
fcmovnb
aad
mov
sub
cmp
adc
pop
repz
dec
inc
cmp
loop
pop
sbb
lock
fnstenv
add
push
push
popa
repz
jb
ds
mov
xor
xlat
iret
roll
cmpb
xchg
or
subl
and
xchg
scas
int
jo
mov
addb
dec
movsl
sarb
mov
mov
aad
enter
dec
adc
in
jbe
fwait
lea
xorl
testl
pusha
push
scas
data16
cli
rcrb
inc
mov
aaa
lcall
jnp
sbb
pop
cli
das
into
movsl
mov
mov
xlat
rcrl
ds
sahf
dec
mov
in
in
pop
inc
xchg
data16
enter
dec
adc
aaa
repnz
cld
cmp
mov
ljmp
sahf
bound
cwtl
and
sub
arpl
mov
sub
sbb
repnz
mov
mov
mov
or
sbb
push
lea
sbb
sahf
movsl
jle
in
js
mov
js
mov
js
mov
push
std
insl
inc
jbe
bound
fisubl
fstl
mov
and
int
insl
addr16
sub
jbe
inc
aam
sahf
adc
cli
leave
xchg
bound
sbb
cmpsb
fwait
or
mov
into
icebp
push
sti
bound
cmpsl
xlat
mov
pop
or
dec
and
mov
data16
sbb
icebp
jb
roll
dec
and
push
adc
jl
jae
inc
cmp
pop
movsb
inc
jb
pop
insb
nop
mov
adcb
xor
rclb
data16
fstl
mov
adc
mov
push
js
mov
js
mov
js
mov
sbb
dec
dec
push
fisttpll
and
orb
jno
ret
dec
mov
out
pop
dec
mov
inc
clts
ljmp
pop
into
outsb
movsl
pop
andl
movsl
add
sub
mov
test
xlat
dec
gs
loop
jmp
sub
call
cmp
jo
mov
scas
add
mov
inc
insl
mov
lret
hlt
ss
mov
das
cmp
sub
out
push
adc
xor
xchg
or
repnz
fldenv
dec
adc
orl
sbb
insl
dec
test
push
push
test
dec
into
mov
imulb
mov
cmp
call
loop
adc
es
jae
loope
jo
or
mov
aad
jbe
repz
pop
jl
mov
insb
test
push
jnp
sub
or
clc
fidivl
fsubrl
jbe
jbe
cmc
adcb
addl
sub
into
pop
rol
and
testb
or
test
dec
ljmp
inc
data16
notb
sbb
xor
inc
and
push
imul
push
or
jno
push
and
ret
or
cmpsl
sub
cs
dec
ss
test
and
ret
mov
and
or
cmp
or
mov
cltd
cmp
add
and
adc
xor
and
aas
in
pop
adc
aad
mov
popf
and
cli
cmp
pop
cs
push
cmp
fsts
lds
js
stc
js
add
pop
mov
sub
push
mov
push
sbbl
outsb
mov
jp
mov
add
inc
and
call
xchg
lret
inc
stc
mov
test
mov
add
mov
fsubs
cmp
xchg
jne
loope
mov
call
and
mov
mov
inc
xchg
mov
insb
inc
sahf
xchg
cmp
les
pop
jnp
mov
dec
subb
imul
ds
leave
xor
xchg
stos
and
fsubl
pusha
or
adc
cwtl
clc
xchg
push
jne
stos
in
mov
loope
push
mov
adcl
jbe
xor
adc
nop
ss
push
rcl
and
fbstp
push
or
adc
stc
je
or
add
jmp
mov
jg
loopne
lock
popf
into
pop
inc
xor
dec
jb
or
and
add
dec
mov
negl
decl
mov
loope
icebp
mov
mov
mov
movsl
cld
push
push
in
shll
jmp
dec
adc
sub
xlat
je
dec
jmp
cmc
pop
roll
int
mov
int
imul
xchg
adc
jg
xor
dec
sahf
mov
shlb
aad
mov
mov
or
lods
cmp
aad
enter
imul
daa
in
mov
pop
ret
inc
daa
push
out
movsl
xchg
mov
stos
and
push
dec
cmp
lcall
out
dec
data16
adc
or
sahf
roll
lret
jno
pop
xor
loope
int3
add
xchg
dec
push
fists
cmpsb
adc
inc
in
insb
fs
cmp
popf
mov
roll
aaa
aad
pop
mov
rcll
mov
in
or
jne
stos
in
shr
xor
mov
jae
fucom
dec
call
daa
xchg
dec
shrl
leave
fisubs
dec
fwait
imul
pop
and
roll
push
push
insb
cmpsl
out
cld
pop
xchg
sub
aaa
das
aad
fisttpl
xchg
test
popf
sahf
push
lret
out
cmpl
or
stos
fsub
fisubrs
aam
inc
xchg
fnstenv
mov
into
cmpsl
mov
lret
enter
jbe
adc
out
fidivl
fiaddl
aad
jo
dec
lret
jmp
hlt
xchg
cmp
cltd
sub
and
call
out
enter
adc
mov
xchg
sbb
fimuls
pusha
mov
dec
add
cmpsb
leave
xchg
push
dec
stos
je
jle
ret
cmpsl
mov
cmp
test
test
fwait
sub
adc
repz
loopne
rcl
ficompl
ss
xchg
dec
pop
push
mov
shll
xchg
push
pop
not
pop
or
and
xchg
shlb
test
push
push
push
mov
mov
popa
push
and
or
mov
mov
xchg
mov
mov
lds
xchg
adc
xor
mov
bound
add
hlt
or
out
dec
adc
cmp
xor
dec
int3
adc
stc
pop
out
or
fwait
sbb
mov
int
lcall
mov
sar
sbb
jecxz
mov
jle
push
stos
pop
insl
pop
in
push
dec
mov
mov
add
lret
dec
push
aad
loope
inc
stos
loopne
mov
cmpsb
adc
icebp
ret
out
adc
out
add
and
mov
mov
xchg
jl
cvtps2pi
xchg
lret
fcmovnb
popf
pop
jns
fsts
shrl
mov
fcomp
sub
pusha
xor
adc
clc
add
dec
push
xchg
fcmove
aaa
push
inc
xor
add
shrb
in
mov
lods
jne
pop
jecxz
loop
sbbb
push
repnz
leave
sub
push
xor
shl
inc
ss
and
int
mov
lret
sub
in
push
or
pop
scas
lret
mov
push
int3
and
clc
loop
and
push
push
hlt
enter
loopne
cmp
iret
aam
cs
pop
jge
cli
sahf
add
inc
dec
xor
and
xchg
jae
ret
mov
imul
dec
stc
mov
push
out
adc
inc
sti
add
mov
into
jmp
aaa
cmp
push
push
sub
not
mov
push
jne
jns
mov
cmp
or
loope
aaa
push
fstpl
aaa
add
sti
sbbb
cs
loopne
and
das
adc
sti
stos
lods
repnz
cs
pop
mov
push
inc
pop
mov
lds
add
mov
push
ss
pop
jae
push
mov
int3
fcomps
mov
jp
ljmp
mov
and
mov
movsl
in
pop
sahf
into
out
jno
inc
sbb
mov
mov
adc
xor
decl
cld
imul
xor
scas
inc
imul
push
fwait
mov
xchg
inc
adc
dec
mov
sti
mov
subb
fcomps
push
adc
sbb
mov
unpcklps
pop
xor
loope
xchg
add
push
dec
in
stos
je
gs
stos
push
testb
rcl
jne
loope
loop
pop
mov
pop
sub
push
and
sahf
jecxz
stos
fstps
fsubl
bnd
je
and
jmp
cmc
push
pop
sti
stos
cld
dec
sub
negb
test
dec
and
popf
filds
inc
dec
and
gs
add
xor
jne
pushf
out
sahf
mov
xchg
inc
ret
mov
push
enter
test
es
push
push
bnd
ds
std
cmp
xchg
mov
xor
lret
mov
mov
cs
mov
int3
push
mov
mov
add
xor
int3
clc
jp
and
minps
cld
dec
stos
mov
xchg
enter
stc
incl
leave
mov
or
pop
cs
bound
dec
mov
mov
fstl
insb
std
int3
movsb
mov
call
or
adc
fcom
push
cmp
cmpl
sbb
jmp
fcomps
pop
adc
push
icebp
test
bound
outsl
xor
sub
xchg
out
xchg
fisubl
adc
pop
xor
jb
cmp
shll
test
mov
fcom
mov
ret
lcall
popf
cmp
mov
clc
inc
sub
lods
bound
push
push
rol
xchg
cmp
call
bound
add
cld
mov
int3
pushf
pop
div
repz
lods
xor
lret
loopne
in
cld
iret
ret
push
adc
inc
pop
adc
orb
push
imull
push
xlat
sahf
ret
mov
inc
icebp
aad
xor
pop
mov
cmp
mov
xchg
leave
insl
and
je
dec
jne
sahf
incl
mov
push
scas
in
imul
push
leave
aaa
mov
pop
jnp
adc
jge
bound
push
popf
int3
xchg
jbe
xor
int3
cmpsl
sar
xchg
push
pop
xchg
imul
xchg
push
repz
loopne
call
cwtl
jbe
jge
adc
add
push
push
mov
mov
fdivrs
or
leave
dec
xchg
sub
lods
loope
mov
aad
inc
shll
xchg
mov
repnz
fldt
pop
inc
xor
data16
es
imul
iret
xchg
sbb
js
lock
or
cwtl
loop
xchg
xor
fdivs
ror
stc
xchg
test
xchg
mov
negl
cmpsl
cmp
adcl
sub
adc
cli
push
pop
fs
or
call
fmuls
fcmovu
shr
xor
push
or
and
adc
loop
dec
add
push
frstor
mov
inc
ret
push
fisubrs
fidivrs
shrb
adc
cs
inc
es
leave
adc
lods
mov
mov
push
adc
lods
pop
scas
push
adc
in
sbb
xchg
sahf
push
pop
inc
mov
addb
fs
mov
push
pop
push
inc
sbb
push
jge
push
cltd
stos
mov
and
sarl
and
movb
xor
sub
stos
push
into
dec
out
fistps
sub
mov
int3
push
pop
shll
jg
push
inc
and
cs
mov
cmp
sti
sti
rcll
cmp
stos
vucomisd
fisttpl
xchg
xor
mov
inc
xchg
int3
mov
fistl
ss
ds
pop
mov
dec
inc
cli
sbb
mov
xchg
dec
pop
fidivs
inc
es
mov
in
jecxz
js
inc
adc
mov
mov
orb
mov
test
dec
xor
pop
and
sbb
and
shl
and
lock
mov
lds
dec
or
push
std
test
adc
stos
scas
dec
and
mov
pop
add
push
ds
push
push
lahf
adc
pusha
push
sarb
leave
gs
push
xorl
sub
sub
sbb
inc
cmp
ja
daa
loope
add
dec
ljmp
mov
add
fisttpll
clc
dec
lret
lods
orl
xor
leave
fmull
sarb
ret
xchg
ds
xlat
and
testb
xchg
jae
jmp
and
repz
fildll
popa
hlt
ret
jno
or
popf
call
enter
adc
push
je
push
dec
xor
fdiv
xor
or
cmpsl
ss
popa
call
loope
scas
mov
pop
scas
clc
and
clc
add
es
mov
rcll
pop
popa
cs
push
leave
repnz
xchg
pop
pop
mov
fsubs
and
adc
ret
xlat
push
or
mov
jmp
xor
push
sti
rcrb
scas
dec
lcall
jp
ret
ret
inc
xor
ljmp
xchg
jle
or
ja
and
inc
aad
adc
mov
daa
push
xchg
mov
jecxz
seta
pop
push
test
ds
dec
sub
jmp
test
inc
repz
adc
popf
mov
and
into
sub
sbb
std
cmpsl
std
push
in
push
push
ss
and
fs
pop
or
xor
gs
dec
mov
or
out
fimuls
adc
xchg
loopne
xchg
sbb
jge
mov
xchg
adc
mov
inc
push
sbb
cmp
xor
mov
jnp
loop
neg
and
ret
stos
ds
insl
fstl
ficomps
sub
jno
xor
xor
xorb
push
dec
aaa
mov
pop
pop
or
ss
mov
stc
lock
aad
pusha
jno
dec
pop
divb
lahf
rorb
std
or
lods
into
movsb
jmp
jp
jmp
push
jmp
rcrl
lret
hlt
and
stc
cmp
push
mov
popa
loop
xor
inc
lcall
add
mov
xor
lret
gs
dec
aam
inc
jns
mov
lcall
adc
mov
enter
ret
dec
xor
pop
test
out
daa
cli
xchg
mov
adc
stos
shlb
aaa
sub
test
repnz
rolb
mov
cmp
fisubl
sub
dec
daa
jg
pop
add
pop
cmpsl
out
stc
add
sub
adc
mov
faddl
in
mov
les
mov
sahf
hlt
cmp
mov
dec
and
mov
xchg
loopne
out
push
push
scas
dec
das
dec
fstl
mov
adc
pop
xchg
push
mov
adc
dec
push
sar
stos
xlat
test
rorl
or
jg
xlat
stos
push
roll
call
mov
or
mov
sbb
jno
xlat
mov
shll
xchg
sbb
add
xlat
inc
aad
jecxz
aam
inc
aad
rorl
iret
jecxz
dec
gs
jp
aad
in
xlat
fmul
jecxz
loopne
jecxz
adc
xchg
adc
xchg
push
fisttpll
inc
dec
xlat
pop
fmul
mov
dec
dec
sbb
jo
mov
loop
xchg
xchg
rol
dec
mov
and
dec
fcmovu
dec
push
scas
xor
xor
rcrl
mov
hlt
xchg
cmc
mov
sarw
adc
lods
repz
insb
lahf
xor
icebp
push
stos
xchg
xlat
jne
cmp
xor
aad
mov
mov
bound
inc
cmp
fcmovu
rcr
dec
addr16
gs
sbb
cli
jbe
xchg
repnz
mov
dec
mov
gs
push
inc
lret
insb
popa
pop
mov
add
xor
mov
or
adc
adc
sub
mov
dec
xor
push
into
adcl
dec
sub
ds
push
jbe
xor
in
clc
sub
cmp
add
mov
sub
cmpsb
push
es
js
dec
fcmovnbe
aaa
jbe
out
mov
in
rorb
pop
inc
or
iret
rcrl
sub
cmpsb
push
test
cmpb
add
out
loop
fnstcw
inc
dec
push
aaa
out
and
push
out
jb
int3
lds
lret
sahf
stc
cmc
fcompl
push
push
test
push
shl
jp
mov
cmc
jno
and
mov
repnz
jne
es
iret
in
popa
mov
sti
sub
push
enter
jge
shlb
fcmovb
aad
adc
das
ror
xchg
fistl
mov
imul
cwtl
xchg
xchg
loop
popa
mov
scas
and
pusha
or
lds
lcall
gs
fwait
adc
adc
stos
push
and
mov
xlat
dec
adc
push
fs
outsl
add
or
inc
mov
pusha
jmp
pop
into
jbe,pn
xchg
mov
repnz
pop
cmc
dec
add
fucomi
pusha
pushf
add
and
stc
dec
test
push
ret
pslld
or
xchg
mov
sub
adc
mov
pop
xchg
das
sbbl
mov
push
sub
cld
push
push
insb
insb
mov
jbe
pushl
mov
pop
sub
push
xor
push
mov
push
pusha
cmpsl
add
xor
and
out
xor
add
call
mov
and
daa
sbb
shl
aad
inc
dec
bnd
hlt
sbbb
call
scas
push
xchg
icebp
sbb
or
xchg
into
cmpb
push
scas
inc
movups
leave
cld
enter
popf
inc
jle
scas
aam
pop
sbb
pop
call
xchg
aad
pop
mov
push
xchg
dec
jae
push
and
jp
ja
mov
lds
cmp
mulb
jbe
push
mov
mov
rol
fcoml
mov
daa
cmpsl
adc
pusha
inc
inc
xchg
pop
jmp
fstpt
loopne
sub
push
shll
pop
repnz
mov
xor
mov
push
and
fcomps
or
pop
or
pop
movsb
in
xchg
test
lret
add
or
loopne
fsts
aaa
pop
pop
jns
lcall
xchg
lret
mov
xchg
in
mov
popa
jns
call
mov
call
mov
fdivs
ficomps
fisubl
lahf
repnz
out
xchg
mov
xchg
repz
pusha
call
enter
aas
sub
mov
adc
xchg
inc
in
int3
jbe
rep
xchg
and
std
popa
xchg
dec
push
inc
dec
push
add
in
pop
mov
xchg
push
mov
jno
icebp
jmp
out
pop
js
push
fisubl
pop
jmp
sub
push
int3
adc
push
jge
cmp
js
aam
loop
adc
in
xchg
into
jmp
shl
insb
repz
pop
adc
add
mov
addb
es
mov
lcall
cli
loope
cmpsb
testb
sub
repz
pusha
lret
push
dec
add
xor
scas
es
repz
push
or
subl
mov
adc
sahf
jle
cli
fsubs
es
mov
mov
push
push
adc
stos
ds
xchg
adc
aad
sub
xchg
mov
popa
loopne
popf
fdivrs
movsb
mov
mov
loope
repz
add
loopne
pop
lcall
fldl
rcl
pop
mov
movsl
or
imull
ficoms
ja
push
cld
push
push
xchg
pop
clc
inc
cmp
fistpll
sbb
and
in
push
cmp
mov
shl
mov
sub
mov
testb
or
mov
mov
addr16
push
cmp
shlb
mov
rclb
ljmp
cwtl
stos
mov
mov
or
mov
scas
std
add
mov
call
jg
xchg
scas
push
jg
dec
xor
cmc
jno
and
jne
rcll
xchg
lds
mov
into
cmc
push
pop
addl
into
mov
inc
jmp
add
add
jge
lret
xlat
pop
out
in
pop
shlb
int
mov
push
adc
roll
sub
out
rclb
rcrl
mov
fildl
rcl
mov
pop
mov
aad
mov
add
push
mov
jne
add
loop
ljmp
cs
test
ljmp
xchg
push
in
mov
pop
add
adcl
pop
push
shrl
fldl
xchg
adc
mov
in
aad
jle
adc
jmp
arpl
sti
scas
nopl
mov
jno
sub
adc
inc
pop
notb
add
or
mov
ret
imul
bound
faddl
repz
push
pop
xor
jg
adc
gs
jae
cld
call
aad
in
push
inc
sub
xor
rclb
xor
icebp
mov
push
lahf
xor
inc
push
dec
add
and
int
add
jecxz
cmpsb
ss
or
addb
adc
ret
lcall
js
sbb
xor
leave
ss
sbb
inc
stos
xlat
dec
adc
in
jnp
inc
bound
and
data16
mov
sbbl
faddp
out
jne
repnz
mov
ss
adc
sbbl
addr16
jbe
dec
mov
add
mov
loope
xchg
mov
inc
mov
jns
xor
pop
cmpsb
fmuls
cs
dec
xchg
inc
dec
repz
andl
loop
xchg
aaa
stos
adc
stos
mov
iret
loopw
jmp
pop
sub
inc
stc
pop
or
and
mov
push
dec
jmp
push
jmp
adc
imulb
mov
jp
imul
ret
popf
sub
pop
bound
clc
jmp
mov
outsl
ljmp
cmpsb
add
mov
call
mov
pop
jbe
mov
in
jle
movsl
push
push
pop
in
xchg
movsb
in
std
shll
es
push
xchg
pusha
cmc
add
fdiv
xchg
pop
mov
pop
aas
lahf
or
xchg
pop
push
sub
adc
xchg
or
test
jg
aad
lock
data16
jbe
fildll
cmp
cmp
dec
push
adc
xchg
clc
not
scas
and
mov
mov
out
scas
in
xchg
pop
cwtl
dec
int
push
pop
adc
fisubrs
push
imul
in
pop
scas
push
popa
push
arpl
sbb
pop
jb
xor
into
mov
and
or
pop
sub
movsl
imul
add
fmuls
adc
jbe
push
scas
pop
sub
ja
sbb
stos
mov
pushf
sbb
jg
inc
cmp
dec
jbe
mov
das
xchg
sti
rorl
movsl
int
push
mov
pop
cmp
bound
test
scas
dec
cwtl
dec
xrelease
enter
pushl
sub
stos
dec
jno
scas
dec
rolb
data16
dec
ds
mov
or
orl
inc
leave
push
cwtl
fmull
les
dec
mov
fcmove
mov
and
les
out
push
sbb
das
pop
cmp
cmp
dec
adc
fisubrs
xchg
xchg
mov
roll
leave
cs
add
mov
sub
xchg
fildl
pop
inc
mov
sahf
jecxz
inc
lret
mov
push
pop
mov
or
enter
jno
cltd
sub
ret
fistl
in
in
xchg
push
xchg
inc
adc
mov
scas
push
loop
sbb
cmpsb
dec
mov
xorb
inc
loope
ret
cmpsb
mov
jmp
stos
test
xchg
std
shlb
imul
rcll
sub
mov
xchg
and
lahf
in
int3
lds
cmp
adc
inc
mov
mov
mov
mov
sub
sbb
rorb
pusha
mov
scas
shr
mov
lds
and
mov
push
dec
pop
daa
popa
push
aaa
dec
xor
icebp
push
sahf
mov
or
inc
adc
sahf
call
mov
outsb
rorb
dec
cmp
sbb
mov
xor
fwait
mov
imul
dec
aam
and
aad
xchg
outsl
int
or
mov
push
bound
push
pop
inc
fbld
cs
and
dec
inc
pop
bound
xor
clc
push
orl
xlat
inc
loopne
xchg
sbb
adcl
cmp
adc
orl
dec
lahf
cmp
jns
xor
sahf
add
in
mov
lea
sub
mov
es
jne
cmp
into
cmp
mov
notl
or
sti
xor
cltd
inc
add
insw
sbb
add
addr16
and
mov
cli
sub
notb
adc
push
push
jne
pop
mov
add
fcomp
push
popf
out
jno
repnz
cmc
mov
pusha
ljmp
mov
inc
jbe
push
xchg
dec
pop
xlat
leave
lods
mov
inc
add
icebp
outsl
loopne
mov
cli
add
fidivrs
dec
cs
lret
pop
inc
rcrb
and
out
mov
mov
pushf
xchg
xor
sbbl
repz
fsubrp
data16
loope
lds
pop
xor
je
adc
pop
push
push
ja
jno
testb
mov
into
cmp
push
push
outsl
mov
cmp
mov
push
lock
fisubs
add
or
cwtl
addr16
repz
jmp
mov
cli
xchg
mov
dec
mov
mov
sub
dec
hlt
ljmp
xor
xor
adcb
mov
push
sbb
xchg
and
adc
jmp
leave
dec
dec
dec
test
out
jmp
test
cmpsl
lret
pop
jne
mov
push
lds
fcoms
add
lods
and
ficoms
sbb
mov
gs
aad
mov
mov
push
push
cmpsb
enter
mov
pop
xchg
mov
out
repnz
push
adcb
pop
call
lahf
xor
adc
es
jae
rcr
xor
imul
imul
cmc
add
mov
xchg
lds
inc
mov
jmp
lret
sbb
leave
sub
rcl
sahf
loope
fs
pop
movsb
cmpsl
fimull
stos
mov
or
pop
sub
repnz
jbe
push
xchg
jbe
pop
sahf
cmc
insb
fisttpll
pop
cmp
sub
out
sahf
test
mov
jb
mov
fmul
int
int
adcb
mov
xor
add
gs
pop
push
lret
stos
out
fwait
push
or
movsl
ds
pop
xchg
add
repnz
push
mov
push
or
xchg
lea
push
and
negb
pop
and
test
push
xor
dec
jno
or
xchg
ja
pop
scas
lods
loopne
sbb
lock
sub
sti
cmpsl
int
mov
into
adcl
push
insl
out
mov
mov
jbe
push
pop
hlt
mov
adc
stos
inc
dec
sbb
mov
aaa
sbb
push
lods
int
xlat
cmp
mov
dec
inc
or
adc
jbe
sbb
sub
fwait
pop
mov
lret
jns
sbb
out
into
test
push
and
leave
fs
pop
stos
lcall
fsub
push
inc
lret
xchg
inc
dec
repnz
rclb
out
xchg
es
xor
jae
pop
loope
pop
out
cmp
push
das
adc
loop
xchg
fs
imul
lret
aam
and
es
loop
loope
ja
outsb
adcl
not
mov
dec
or
aad
inc
push
dec
adc
ret
xchg
rcrl
and
or
jbe
out
repnz
aam
push
out
lret
fisttpl
fdivs
push
inc
lret
idivb
out
sbbl
push
pop
or
or
dec
cmc
popa
inc
movsl
pop
mov
repnz
pop
rcl
test
pop
lret
arpl
in
cmc
dec
dec
ret
push
adc
xlat
mov
dec
sub
inc
xchg
and
push
call
sub
lea
jg
dec
ret
push
les
pop
loopne
xchg
cmp
xchg
xchg
mov
sahf
mov
mov
repz
out
loop
push
pop
inc
stos
mov
or
loope
rorb
cmp
test
jo
rcr
jle
test
pop
insl
push
and
sbb
cwtl
dec
and
sub
jmp
sub
add
lods
or
pop
push
int
in
pop
repz
ljmp
adc
lret
xlat
push
or
popl
mov
shll
push
out
out
mov
jg
call
bound
mov
add
mov
loopne
shr
loopne
cwtl
ss
daa
adc
push
or
pop
xor
mov
mov
or
xchg
sti
icebp
lahf
inc
sub
push
fxch
mov
inc
xor
xchg
cmp
js
and
xchg
pop
push
jnp
sub
repz
cmp
mov
xchg
mov
loopne
xor
adc
pushf
cmpb
cmpsb
jg
xlat
dec
xchg
and
xor
fstpl
add
sub
je
mov
or
subb
rorl
push
and
or
dec
push
mov
pop
jg
shll
push
loopne
fadds
add
daa
imulb
add
dec
fadd
ds
adcl
cmp
leave
addl
cmc
jmp
flds
mov
push
aad
adc
ss
test
scas
dec
call
inc
in
pusha
mov
pop
test
icebp
push
and
ret
hlt
ds
jmp
out
cmc
xchg
push
ss
or
int
push
cmp
divl
fcom
pop
cmp
into
loope
movsl
call
out
cmp
mov
mov
mov
xchg
cmpsl
fmuls
mov
mov
ss
pop
xchg
pop
or
nop
mov
pop
cltd
cwtl
mov
shlb
mov
fwait
mov
push
cltd
popa
rcrb
xchg
imul
push
icebp
rorl
sahf
shll
scas
jae
imul
repnz
jl
aaa
and
das
or
pop
dec
sti
mov
pop
stos
jmp
add
inc
bound
insb
push
aas
jbe
and
das
fstps
lds
push
ss
push
mov
xor
mov
cld
dec
or
pop
xor
into
adc
adc
andb
push
dec
pop
ds
out
mov
ret
adc
and
stc
dec
inc
out
es
cmpsb
jecxz
cmpsb
popa
dec
cmpsb
sahf
or
xchg
mov
push
pop
adc
lds
ja
adc
add
psubusw
or
add
shll
popa
cmp
and
sub
sbb
pop
dec
mov
loope
cmp
roll
fdivs
fwait
shlb
xchg
and
mov
shrl
icebp
iret
mov
ja
sarb
popf
stos
inc
push
int
js
out
xchg
push
xchg
aam
mov
shlb
and
jmp
cmp
cmp
call
xchg
adc
mov
sbb
inc
cmpsb
adc
add
cmc
pop
jecxz
sahf
xchg
push
inc
movsl
sbb
cmc
enter
push
push
jne
sub
pushw
push
lcall
pop
pop
aam
aad
repz
push
jmp
xchg
xor
cmp
sbb
mov
shl
xlat
lods
dec
push
pop
push
xchg
int
mov
cmp
dec
in
xchg
les
jno
sub
adc
sahf
xchg
in
nop
mov
jmp
loop
pop
mov
xchg
mov
dec
outsb
orl
or
rcr
mov
jns
int
mov
fiadds
jb
ret
test
aad
ficompl
test
mov
sub
nop
faddl
adc
xor
rolb
sbb
xchg
push
es
lret
data16
sti
in
xor
xorb
std
push
inc
xchg
jmp
xor
sbb
cmp
mov
jmp
cmp
sbb
cmpsb
shr
xchg
dec
sub
or
dec
popaw
jno
lret
adc
or
into
pop
mov
pop
hlt
pusha
jg
cld
out
clc
ret
or
repz
jae
add
scas
xchg
adc
jmp
push
je
sbbb
inc
mov
mov
inc
out
outsb
les
hlt
dec
jecxz
pop
testb
inc
mov
and
andb
jecxz
dec
sbb
aad
popa
addr16
adc
pusha
or
sbb
inc
cmp
mov
cmp
pop
xchg
push
xchg
jmp
mov
sbb
xchg
test
xchg
or
iret
mull
adc
cmc
loopne
nop
adc
gs
out
and
mov
sbb
in
repnz
and
xchg
mov
cs
aaa
push
out
and
adc
mov
jl
xchg
dec
mov
push
sub
pushfw
loope
std
out
mov
mov
and
cmp
ret
xchg
cmp
or
sub
and
mov
rcrb
lahf
add
push
mov
into
push
and
xchg
cmpsb
adc
sub
inc
fstps
mov
fadd
fidivs
mov
fisubl
sbb
jns
mov
ja
mov
mov
cmp
int
aad
scas
jb
fstl
cmpsl
mov
call
fdivs
jle
aad
scas
jbe
lods
in
mov
cmp
cmpsb
mov
and
stc
test
adc
adc
sarl
aas
adc
pop
lods
mov
jnp
or
cmpsb
and
mov
shrl
testb
ret
push
xlat
and
sbb
outsl
mov
jbe
adc
mov
or
lret
daa
push
lods
lock
sub
sub
sahf
test
adc
push
int3
int
dec
or
inc
repnz
mov
adc
fdiv
idivb
xor
ss
call
ret
jno
out
xchg
pop
and
out
mov
sbb
mov
aaa
shr
mov
adc
data16
movsl
sbb
fwait
cltd
scas
sbbb
ljmp
pop
xorl
mov
mov
into
and
dec
shll
ds
popa
and
les
push
mov
inc
mov
int
outsb
add
sbb
out
pop
test
push
xchg
fwait
shll
adc
mov
loop
movsl
xchg
repz
jne
data16
es
mov
outsl
push
sub
outsl
xlat
shr
push
adc
pop
loopne
cmp
rorb
ds
push
pop
mov
sarl
lret
jae
leave
pop
dec
rcrb
push
sbb
jge
push
stc
mov
mov
fcoml
stc
jp
out
push
sub
imul
shll
pop
popf
cmpsb
rorb
divl
adc
inc
dec
xchg
cli
int3
out
mov
inc
jnp
int3
sub
jg
jmp
cmp
into
push
out
cs
rcrb
fdivrs
out
mov
xlat
test
negb
rclb
push
sub
icebp
jmp
aaa
cmp
mov
es
shrb
jae
repnz
jne
lcall
pop
and
mov
mov
std
and
fsubl
xor
es
es
pop
outsl
dec
adc
and
sub
xlat
repnz
and
xchg
shlb
sti
mov
stos
mov
shlb
xchg
push
pop
mov
loopne
inc
data16
xor
shlb
xchg
fnstcw
mov
jbe
fcomps
notb
or
xor
mov
aaa
sbb
lods
js
shll
notb
xchg
mov
and
insb
push
add
mov
and
mov
mov
pop
push
add
and
and
mov
pusha
and
sbb
int
enter
cmp
push
popa
xchg
cmpb
mov
sbb
sub
faddp
lods
adc
stos
cmc
hlt
addr16
adc
and
push
stos
cwtl
dec
ljmp
dec
out
jle
test
mov
jnp
stc
mull
inc
cmp
mov
sbb
enter
rcr
mov
adc
stos
cmp
mov
fisubl
shrb
add
xchg
and
ja
xchg
shll
xchg
lock
jbe
cmc
adc
outsb
sarb
dec
pushf
push
es
jl
jmp
jp
fldcw
inc
and
or
sbb
cmpsl
adc
sbb
insb
in
mov
mov
xor
dec
out
cmpsl
inc
fwait
push
xchg
nop
pusha
jle
daa
pop
ret
cli
push
adc
jle
xchg
jne
lds
scas
je
mul
loope
insb
popa
imul
mov
sub
and
dec
cmc
ljmp
repnz
xchg
aad
dec
pop
jne
dec
xchg
scas
mov
cmpsb
mov
push
or
dec
xchg
aaa
lret
dec
lock
jge
mov
fdivrp
int3
sar
jb
xchg
decl
ss
iret
imul
cs
push
out
cmp
loope
inc
cwtl
mov
push
mov
int3
test
push
lret
fidivs
mov
fucomip
pop
sbb
push
into
bnd
xchg
xchg
pmulhuw
ret
fidivrs
pop
shlb
mov
and
push
outsb
adc
lds
dec
sbb
jmp
add
sub
ja
sbb
sub
jb
add
add
cmpsb
ret
xchg
std
jnp
adc
pop
push
decb
xchg
enter
adc
rorb
addr16
pop
lahf
and
mov
mov
test
ret
adc
sahf
push
roll
into
popa
mov
lret
mov
xor
dec
xorb
add
jbe
or
adc
inc
push
leave
and
int
mov
xchg
lods
imul
jecxz
ss
fsubrs
inc
jmp
sub
int
and
ljmp
clc
stc
push
mov
fidivs
fiadds
cmpsb
fisubl
movsl
xor
inc
and
out
scas
dec
cwtl
mov
movsl
arpl
push
cli
push
mov
mov
sub
mov
popa
in
mov
lds
mov
enter
push
xchg
or
cmc
rcll
xchg
sub
pop
pop
jecxz
shr
push
popf
mov
fwait
into
sbb
xchg
in
adc
xor
int3
loop
gs
aad
xor
dec
jae
push
dec
insl
xor
adc
adc
dec
pop
push
out
cli
loop
lds
dec
xchg
xchg
rolb
adc
std
in
mov
notb
ja
cwtl
xchg
mov
mov
iret
mov
es
addr16
dec
dec
gs
xchg
stos
xor
rcll
mov
mov
and
and
dec
dec
mov
stos
notb
add
pop
data16
pusha
dec
jns
sbb
mov
bound
push
les
test
dec
xchg
adc
testl
xchg
and
sub
faddl
jle
adc
adc
and
test
xchg
cmpsb
aaa
push
or
jmp
shlb
sti
incl
push
mov
xchg
and
test
adc
pop
movsb
loop
lods
dec
test
orb
jl
scas
dec
rcr
loope
aad
mov
cmpsl
xchg
ret
mov
fldt
movb
inc
xchg
xchg
repnz
mov
fisubrs
inc
mov
inc
xchg
fucomp
push
jnp
std
mov
lds
push
push
shl
dec
test
push
add
lahf
scas
push
dec
inc
shll
shlb
xchg
repz
push
or
adc
inc
push
xor
fwait
xchg
push
add
lret
add
mov
cmp
mov
fs
dec
and
jne
subl
add
push
aad
out
pop
ret
pop
xchg
rcrb
jbe
and
pop
xor
lret
cmpl
or
scas
xchg
and
mov
fsubr
ja
sub
inc
or
inc
mov
push
xor
add
jge
xchg
and
and
jg
decl
pop
movsl
imul
pop
mov
xchg
cltd
pusha
mov
xorl
hlt
shrl
cli
mov
mov
inc
mov
pop
inc
lds
cwtl
repnz
out
mov
test
adc
cmpsb
popf
fsubs
adc
scas
neg
mov
jl
jno
cmp
xchg
dec
push
pop
and
and
xchg
aaa
aaa
sub
cmpsl
or
jg
xor
cmpsb
cmpsb
into
pop
and
mov
cwtl
pushf
pop
jne
jp
xlat
je
mov
cs
sbb
cmc
jmp
jb
lds
mov
popa
psubd
gs
scas
jnp
dec
mov
dec
aas
add
inc
jmp
pop
jg
notb
stos
int3
fwait
mov
dec
lcall
fcomps
testl
popf
cmp
push
cmp
jl
push
and
lock
inc
fcompl
sbb
sub
test
push
mov
jbe
fcmovb
leave
loop
loope
push
pop
and
int3
and
dec
dec
out
or
xlat
jno
out
cmpsl
es
mov
notb
int
push
das
cltd
into
push
loope
ja
sar
pop
repz
mov
pop
call
inc
ljmp
jae
mov
decl
fisubl
jecxz
popf
push
dec
sub
shl
push
fisttpl
xchg
rcrb
clc
xchg
jno
pusha
stc
dec
fsubs
ljmp
mov
jno
inc
arpl
sti
cmp
test
fistpll
adc
in
ds
imul
sahf
rcrb
cmc
mov
enter
ret
rorb
lret
mov
mov
xor
test
loopne
push
fdivrs
push
xor
mov
push
cmc
cmp
cmp
ljmp
xchg
or
gs
jae
mov
frstpm(287
out
js
xchg
popa
loop
xlat
leave
add
mov
inc
fnstenv
or
rorb
popa
call
mov
push
inc
add
fwait
mov
mov
gs
push
shrb
pop
std
inc
mov
xchg
rcrl
push
lds
cmc
leavew
std
and
mov
xor
add
and
push
sti
adc
jnp
and
adcb
mov
insl
inc
xchg
push
inc
lret
mov
cmpsl
xchg
clc
mov
mov
ss
inc
imul
sbb
dec
mov
lods
mov
add
sbb
aad
out
cmpsb
dec
mov
cwtl
cmpsb
hlt
and
gs
xchg
push
jb
mov
mov
dec
enter
pop
mov
cmp
lds
mov
jae
or
inc
cmp
sti
cmc
popl
pop
xchg
int3
push
ljmp
pushf
and
pop
call
in
sbbl
mov
cmp
jmp
test
test
adc
mov
fstpt
stos
shlb
insb
fwait
mov
xchg
int3
clc
pop
scas
sti
mov
inc
movsb
lret
test
mov
jmp
aas
fdivrl
sub
xchg
mov
shrl
aad
mov
xlat
pop
pushf
bound
aas
test
test
leave
out
xor
ss
shll
test
inc
jo
bound
xchg
jp
xor
dec
jbe
insb
sbb
enter
fsubs
pushf
pop
into
cmp
cltd
xchg
sub
or
adc
push
adc
dec
adc
and
shr
cmc
je
imul
mov
je
cs
fdiv
adc
ret
pop
jecxz
dec
xor
scas
cmp
adc
loop
dec
or
or
or
cmpsb
inc
roll
pop
lock
call
jge
pop
hlt
sbb
pop
aad
jno
pop
pop
mov
iret
into
xor
es
hlt
ds
xchg
add
mov
imul
aas
add
loop
popf
jno
in
mov
adc
sbb
sbb
add
ss
sahf
dec
fmull
pop
inc
outsb
mov
and
push
fisubrs
or
nop
push
dec
mov
enter
dec
push
pusha
xchg
mov
sbb
fstps
mov
out
sti
out
or
push
dec
fisubrl
mov
cmp
pop
sbb
ja
add
dec
jecxz
lahf
mov
inc
pop
mov
aad
adc
push
mov
mov
or
jl
pop
test
movsw
in
cmpsb
js
addb
fadds
push
into
lahf
frstor
mov
mov
daa
add
add
jnp
into
push
mov
push
or
add
cmp
adc
mov
lret
xchg
mov
mov
sahf
inc
push
or
inc
int3
movsl
movb
sub
mov
scas
das
xchg
int3
nop
push
push
mov
mov
call
leave
out
xchg
negb
push
pop
mov
xchg
pop
fistpl
ja
sub
pop
lret
mov
sbb
loope
es
xchg
cmpsb
fdivrs
cmpl
xchg
adc
fcmovu
cmpsl
call
cmp
add
std
mov
into
cs
adc
add
inc
subl
movsl
mov
cmpsl
test
mov
and
out
push
ds
pop
pop
add
xor
lock
adc
or
xchg
dec
andl
pop
push
out
or
jb
iret
pop
ds
jno
movsb
or
mov
test
pop
mov
movsl
mov
arpl
dec
push
test
cli
iret
mov
xchg
push
mov
or
repz
push
in
push
push
in
das
xchg
jnp
addr16
test
mov
fstpl
sbbb
jnp
and
and
adc
cltd
mov
and
stos
mov
stc
mov
int
sbb
add
addr16
enter
mov
fsubrs
xlat
cmp
stos
xchg
and
scas
or
lods
and
aad
in
std
das
mov
cmp
cmc
fadd
add
jecxz
movsb
and
xchg
jmp
test
or
ret
ds
sub
and
or
sbb
movsl
stc
dec
fnsaves
insb
pop
adc
lcall
cmpsb
inc
mov
lret
int
and
lds
inc
stos
and
add
sbb
push
add
xor
mov
and
or
xor
jl
cmpsl
lret
adc
push
xchg
mov
sbb
rolb
dec
out
lds
mov
xchg
mov
sub
int3
call
dec
mov
sub
mov
fmul
outsl
inc
push
dec
popa
divl
pusha
mov
and
sub
jmp
test
jl
pop
mov
out
sar
mov
rcll
pop
fcomps
aad
ficoms
test
add
arpl
jnp
insl
cmp
dec
push
push
fwait
test
shl
xor
insl
mov
jbe
imul
pushf
jle
lret
jno
pop
fs
mov
cs
aam
mov
icebp
cmp
push
loope
gs
clc
push
in
mov
shrb
add
out
fxch
cmp
push
mov
sub
test
pop
daa
mov
in
xlat
incb
js
cmp
ficompl
jp
fwait
sub
aam
imul
add
pop
out
bound
inc
jnp
push
loope
insb
out
cmp
add
adc
and
xchg
push
rolb
adc
dec
cmp
in
pop
test
aad
inc
fcmovb
and
mov
imul
jp
ss
push
jle
cmp
push
and
mov
call
lock
mov
xor
push
sbb
cmpsb
in
xchg
int3
fidivrs
aad
cmpsl
lea
cs
push
insl
arpl
loop
in
lock
bound
or
push
aad
test
je
imul
ja
dec
lds
sbb
scas
and
stc
ljmp
jmp
jp
nop
addb
lds
sti
sbb
pusha
xor
jnp
out
xor
mov
xchg
cmc
mulb
rorl
inc
jb
xchg
cmp
leave
jbe
sbb
sub
ss
xchg
pop
cmc
negb
call
popa
pop
faddl
pop
loop
mov
cmp
sahf
xor
sub
add
adc
xor
xor
adc
addb
push
cld
test
scas
rorb
inc
adc
mov
popa
cwtl
mov
pop
sub
das
adc
jmp
rcll
mov
xor
push
fwait
ret
xchg
stos
push
mov
fisubrl
mov
mov
dec
adc
sbb
mov
pop
repnz
xor
aad
les
in
push
int
repnz
cltd
out
sub
es
sbb
pop
push
les
in
cmp
je
stc
cmpsl
icebp
lods
lods
test
pop
repnz
dec
dec
or
push
jne
ror
dec
pusha
pop
shrb
imul
push
mov
dec
push
sub
push
or
cmp
mov
adc
outsb
jecxz
bnd
sub
mov
out
xchg
popa
sahf
int
std
mov
fwait
push
add
hlt
mov
lods
ret
fsubl
je
xchg
stos
xchg
jb
pop
mov
rcl
dec
mov
push
aam
ja
and
repz
iret
mov
push
and
outsl
xor
push
mov
push
cmp
aam
jno
dec
lds
fwait
push
cs
or
js
xor
adc
mov
push
jnp
inc
nop
push
inc
pushf
add
bound
test
icebp
or
adc
aas
xorb
pop
push
and
dec
xchg
sbb
xchg
mov
push
lods
lods
fs
adc
lret
sbb
mov
jmp
cmp
popa
or
fsubs
pop
push
ja
jno
xchg
jbe
movb
lcall
adc
aad
mov
sahf
adc
pop
mov
pushf
push
xchg
stc
loopne
push
lcall
std
mov
cmc
das
sub
jbe
mov
inc
push
negb
in
push
push
pop
out
cmp
and
sarb
jbe
leave
inc
imul
hlt
fisubrl
inc
dec
xor
sub
jo
mov
and
leave
cmc
push
jnp
xlat
cmp
xor
dec
hlt
mov
or
pop
inc
lds
cmp
popa
sarb
push
or
jbe
int
dec
xchg
icebp
lea
mov
in
mov
xchg
sbb
adc
mov
fsubrs
clc
outsl
push
inc
jns
sub
jmp
aad
imul
inc
into
fistl
not
out
push
jb
loope
pop
mov
dec
les
jb
lds
mov
or
dec
int3
sub
shlb
hlt
sub
outsl
xchg
lret
fisubrs
mov
out
xchg
test
cmp
adc
cmp
add
pop
popa
sbb
sbb
pop
movsb
sti
add
cmp
mov
cmp
mov
aad
mov
mov
mov
xchg
bound
in
xchg
fistpl
loope
movsb
test
or
aas
push
movsb
mov
sub
imul
and
push
dec
add
push
inc
or
mov
adcl
xchg
insl
cmpsb
and
cmpsl
push
inc
dec
rcr
out
and
push
adc
jbe
inc
dec
leave
insl
shl
faddl
ds
jbe
popa
push
inc
shlb
inc
out
dec
lahf
sbb
lahf
inc
aam
and
adc
and
shlb
or
rclb
jl
xlat
iret
jbe
out
mov
pop
lea
hlt
ds
and
call
xor
fstl
fwait
sbb
inc
push
insl
lea
adc
incl
out
dec
repnz
test
pop
xchg
cmpsb
dec
gs
cwtl
js
stos
leave
push
repz
lret
adc
mov
inc
ret
repz
push
inc
aam
xor
mov
mov
mov
aad
mov
cs
add
pop
jecxz
ss
loop
ret
jmp
dec
adc
pop
mov
lea
daa
pop
sbb
dec
into
push
jne
mov
jecxz
sub
das
push
or
shl
cmp
dec
lahf
sub
and
cmpsl
cmp
cmc
pop
mov
out
adc
pop
pop
in
jmp
movsb
inc
fcompl
daa
pop
inc
lods
mov
cmp
lret
pushw
sbb
xchg
pop
jbe
es
imul
dec
int3
insb
bound
xor
adc
push
pop
xchg
sbb
xchg
mov
mov
fdivr
ret
xchg
test
xor
daa
cmpsb
aad
in
push
pop
and
cmp
arpl
mov
push
adc
sub
shr
ret
cmp
push
ss
mov
dec
push
adc
fucomp
push
mov
or
pop
cmp
shll
mov
in
xchg
push
jno
loope
dec
and
imulb
dec
or
adc
or
xchg
repz
xchg
mov
movsb
pusha
pop
enter
mov
add
push
xchg
pop
xor
push
adc
leave
adc
leave
push
shll
int
sahf
call
fwait
pop
test
add
repnz
dec
fwait
push
iret
out
push
push
call
fsts
push
sets
adc
or
xchg
adc
out
icebp
inc
test
pmaddwd
sub
push
adc
xchg
mov
int
push
dec
mov
push
push
int3
out
outsb
adc
ljmp
pop
cmp
xchg
fcmovne
inc
mov
int
dec
push
push
push
mov
mov
mov
mov
mov
in
pop
lcall
test
pushf
cmc
jne
aad
cmp
push
cmp
push
mov
dec
iret
cwtl
and
sets
adc
adc
andl
repnz
push
cmc
push
adc
xchg
mov
mov
sub
mov
jno
sub
jp
push
aas
nop
test
xchg
fisttpl
xchg
mov
push
adc
push
push
shll
scas
jge
xchg
or
pop
pop
mov
into
lds
pop
xchg
push
cmc
mov
dec
call
pop
decb
dec
mov
les
adc
mov
cmp
xchg
lds
mov
in
cmpsb
lods
cmc
mov
enter
mov
or
xchg
imul
jns
xor
cmp
push
in
add
dec
sub
test
xchg
repz
imul
mov
imul
adc
pop
fwait
pop
jne
call
mov
xchg
push
and
cmc
daa
or
aaa
pusha
shlb
xchg
mov
inc
sbb
xchg
addr16
push
sub
shll
adc
cmc
push
call
repnz
call
pop
xor
push
icebp
push
adc
push
or
xchg
dec
adc
es
dec
add
xor
dec
jmp
pop
mov
cmp
pop
push
jp
push
cli
subb
push
into
mov
mov
lods
push
fistpl
dec
inc
cmp
sti
stos
test
mov
push
xchg
pop
mov
sarl
inc
mov
xchg
fimull
ficomps
sub
xlat
pop
fcoml
adc
xchg
dec
fstps
in
and
mov
mov
mov
lods
cmpsl
popa
xchg
adc
dec
jbe
pop
ficoms
nop
ljmp
rcrb
dec
xchg
gs
cltd
adc
test
inc
push
cmpsl
int
xchg
insl
xor
loopne
add
aad
jle
mov
adcb
ficoms
push
jnp
cmp
jnp
int3
pop
xchg
clc
popa
inc
divb
push
pop
inc
mov
arpl
pusha
adc
inc
adc
dec
cltd
pop
pop
push
xlat
xor
imul
inc
pop
and
arpl
pop
mov
outsb
outsl
sbb
and
pop
adc
xchg
cmpsl
les
add
shl
loopne
pop
pop
jae
ss
int3
cmp
fsubs
outsb
mov
push
push
insl
dec
cmp
mov
enter
das
sub
fwait
ds
call
xchg
dec
xor
ficoms
mov
jbe
daa
scas
xchg
repz
adc
jmp
push
int
cmp
xlat
inc
icebp
mov
sub
push
mov
add
ficoms
std
ds
popa
inc
push
mov
jae
xchg
hlt
in
lcall
and
pop
fidivrs
loop
testb
jne
std
sbb
sbbl
inc
sub
repnz
mov
push
inc
add
popa
in
cmp
xor
add
xor
mov
lcall
inc
or
mov
mov
idivb
inc
jb
movsl
imul
test
xor
pop
adc
or
xor
mov
push
jge
mov
or
dec
gs
or
pop
inc
xor
add
dec
pop
int3
sub
sbb
testb
xor
std
mov
pop
or
jg
testb
addr16
cmp
loopne
or
outsl
jb
out
or
dec
movsl
xor
rol
xor
add
mov
cmpsl
mov
mov
arpl
ja
mov
dec
movsl
and
sbb
adc
push
push
pop
and
and
testl
pop
jnp
stc
icebp
insl
add
data16
int3
xchg
ret
jp
ja
cmp
pop
jmp
xchg
pop
dec
adc
inc
xor
repnz
cmp
push
add
scas
repz
add
ret
push
mov
xor
lret
sahf
imul
cmp
pop
inc
data16
add
addr16
filds
ds
add
mov
sbb
vmread
icebp
std
sbb
adc
jb
push
testb
sti
cmp
fidivrs
or
push
dec
mov
pushf
mov
aas
mov
lahf
or
cmpsb
push
cs
mov
xchg
cmpsl
xchg
stc
push
repnz
stc
adc
add
les
add
std
dec
out
sbb
mov
push
xlat
insb
cmpsl
aad
jnp
xchg
jg
dec
aad
jmp
push
xor
inc
xor
das
pop
inc
ds
or
int
fmul
das
negb
ds
popa
pop
aaa
cmp
push
clc
or
sbb
scas
rclb
cmp
xor
mov
add
xor
add
xchg
inc
lea
jbe
arpl
cmpsb
imul
ficomps
push
gs
test
add
adc
push
push
punpckhwd
xor
in
xchg
fdivl
in
xchg
jmp
or
sbb
mov
stc
fs
mov
pop
mov
push
ljmpw
cmpsb
and
dec
pop
push
cmp
rclb
add
es
aam
call
push
lahf
dec
cwtl
push
hlt
mov
xor
fs
or
dec
pop
movb
pop
icebp
ja
rcr
push
int3
dec
jp
push
adc
bound
push
mov
and
mov
loope
cmc
icebp
outsl
cmp
xlat
fsts
fdivrs
sbb
loopne
fadds
gs
into
xchg
into
arpl
lods
sarb
and
pop
xchg
loop
adc
shrl
into
xchg
mov
inc
sub
mov
adc
outsl
xchg
cmpsb
aad
test
sar
jns
dec
test
sarl
sbb
push
shlb
dec
mov
imul
sarl
and
or
shlb
in
cmpsb
fstl
adc
push
xor
mov
movsl
mov
adc
jnp
and
pop
cmp
xchg
adcl
test
rcrb
jae
imul
or
mov
dec
jae
div
scas
movl
out
cmp
mov
fdivrl
or
aad
fbld
pop
sbb
and
cmpb
mov
cwtl
and
pop
repz
adc
jg
mov
or
loope
and
pop
lret
xor
add
jne
pushw
and
jns
adc
push
dec
call
dec
and
test
jg
das
xchg
cmovs
mov
fsubp
lret
xchg
dec
aaa
ret
cmpb
ret
cs
mov
mov
or
jnp
addr16
cmc
scas
ss
lret
inc
bound
ss
mov
ljmp
popf
adc
and
leave
xchg
adc
into
les
sahf
roll
or
cmc
jb
fucomi
ja
testl
xchg
cli
mov
movsl
icebp
push
xor
mov
out
add
popfw
xlat
test
and
aas
inc
mov
jo
lret
xchg
mov
xor
ret
ret
mov
aad
addb
add
add
push
mov
sarl
add
mov
and
xchg
push
ljmp
repz
cmp
inc
int3
mov
int3
rorb
push
adc
xchg
pop
lret
cmp
lock
jae
jecxz
mov
and
xor
jl
fsubrs
xor
mov
add
movb
jns
es
scas
mov
divl
mov
adcl
pop
shl
pop
out
mov
xchg
pusha
jne
shll
sbb
pushf
push
icebp
xchg
push
ficoms
mov
mov
aad
xchg
push
movsl
push
pop
jg
pop
xor
sbb
mov
ljmp
ret
roll
mov
sbb
push
enter
push
push
shrl
cmp
xchg
rcll
fmulp
mov
xchg
and
or
aaa
add
fdiv
sub
movsb
je
ret
rorl
std
mov
cmp
dec
adc
rcrb
arpl
es
jge
inc
int3
push
rcr
xchg
addl
enter
lods
scas
mov
stc
or
pop
iret
xchg
push
adc
pop
and
scas
aas
and
xor
roll
ss
pop
imul
adc
pop
sub
and
test
dec
mov
loop
and
inc
xchg
aad
dec
xchg
jnp
jl
xor
mov
mov
or
adc
mov
jne
or
stos
adc
std
neg
mov
data16
sar
cwtl
mov
mov
std
mov
cmc
xchg
test
sbbb
jae
push
xchg
push
outsl
ds
mov
punpckhbw
cmp
cmp
push
push
and
dec
xchg
add
adc
push
pop
adcl
movsl
aam
cmp
in
pop
cs
not
lds
or
sbb
sahf
repnz
shl
add
movsb
jmp
ss
xor
push
dec
mov
pop
ja
adc
mov
pop
sub
cwtl
or
xchg
jecxz
mov
adc
push
mov
scas
loope
shll
arpl
lahf
dec
mov
movsl
push
and
lods
push
sub
aas
lods
in
out
loope
ljmp
mov
insl
mov
pop
stos
jae
rorb
aad
loope
aas
mov
jnp
leave
adc
movsb
stos
xchg
push
movsl
in
inc
leave
test
push
dec
shlb
es
mov
pop
out
leave
and
fnstsw
push
stos
stc
sub
out
rcl
adc
xor
in
aam
addr16
aaa
and
rolb
pop
rcl
jle
pop
push
loopne
lret
cmp
xor
mov
leave
cmp
inc
icebp
lcall
sub
sbb
inc
mov
sahf
sub
mov
dec
xchg
clc
jmp
inc
jbe
jg
sbb
sub
add
imul
shl
popa
pop
shlb
out
ss
lcall
push
aad
fidivrs
popf
adc
je
push
inc
or
adc
pop
add
mov
jg
ud0
push
loop
inc
mov
stos
adc
adc
adcl
out
jno
push
and
insl
mov
fwait
sti
hlt
and
comiss
enter
mov
rorl
dec
push
mov
ss
mov
adc
xchg
fdivl
and
cmp
out
in
arpl
arpl
movsl
dec
xchg
shl
dec
gs
dec
in
ds
insl
cmp
test
outsb
int
mov
push
std
xlat
jbe
cs
mov
pop
loop
int3
mov
hlt
scas
push
ficoms
pop
in
jg
mov
fdivr
fidivrl
cmpsl
shlb
repnz
rcll
xorl
gs
pop
shll
fnsave
out
iret
movl
fsub
addr16
aad
dec
xchg
insl
aas
lcall
out
sub
bound
pop
imul
scas
aad
xor
dec
mov
mov
ror
push
rcl
in
mov
pop
mov
or
push
inc
cmp
mov
adc
inc
or
cmp
cltd
xor
mov
mov
leave
ds
mov
adc
mov
inc
repnz
dec
inc
sti
adc
push
int3
inc
mov
sub
xorl
stos
jo
movsb
jle
shrb
les
and
mov
sbb
adc
test
cmp
adc
icebp
dec
cmp
lods
adc
and
push
cmp
negb
mov
das
sbb
lahf
scas
or
loopne
ljmp
shll
into
cmpsb
icebp
sahf
xor
mov
sarb
mov
jno
xor
stos
xor
xorl
adc
mov
gs
sub
pop
ret
pop
aad
ds
pop
and
push
or
inc
scas
inc
dec
push
add
icebp
shll
test
sub
cmp
test
aad
xchg
add
dec
mov
xchg
xor
adc
push
adc
xchg
sahf
mov
push
std
add
pop
xor
lahf
fidivrl
in
out
mov
cmpsb
mov
call
daa
rclb
push
cmpsb
xlat
in
cmp
insb
test
pusha
push
dec
sbbl
fsubs
dec
rorl
shrl
leave
inc
dec
push
adc
in
jle
pop
aad
pusha
and
add
int3
arpl
fidivrl
data16
pop
push
or
push
mov
adc
sub
bound
mov
in
lret
adc
mov
or
dec
mov
mov
fisubrl
push
xor
xor
xor
push
and
jne
mov
into
ds
fistps
sti
lret
dec
adc
cmp
pop
scas
jmp
jae
dec
adc
test
and
add
mov
push
push
shrl
xor
js
xchg
add
inc
sub
fxch
sub
std
or
push
or
out
sub
cmp
idiv
int3
cmc
inc
jno
inc
imul
sub
addr16
jmp
daa
adc
push
adc
rcr
mov
into
cmp
adc
das
xchg
ss
push
and
sub
inc
and
test
repnz
mov
scas
xchg
pop
jb
xchg
mov
jp
mov
jmp
jge
dec
bound
mov
fsts
mov
testb
xchg
rcrl
xchg
inc
push
jne
aam
sbb
mov
mov
mov
aam
pushf
sbb
je
adc
jo
push
and
sub
xchg
add
clc
mov
call
rorl
js
fwait
push
test
xlat
scas
lret
jnp
lret
sub
loopne
jae
scas
mov
cmpsb
je
movsl
push
lds
push
xchg
and
out
not
ss
jmp
xchg
push
rclw
xchg
lret
mov
push
dec
call
inc
push
jmp
inc
arpl
push
mov
push
imul
fs
rcll
adc
push
jmp
ds
out
push
into
ja
push
in
push
jbe
mov
and
iret
jl
setae
sub
xlat
inc
es
movsb
push
adc
dec
and
adc
fwait
and
push
adc
out
lcall
rclb
add
loop
ficompl
bound
fsubs
int
popf
sub
lea
scas
movsb
int3
add
jmp
fs
test
sub
loopne
ja
mov
push
ret
gs
cld
out
enter
or
adc
mov
cld
in
arpl
sub
loopne
and
cmp
pop
in
popa
inc
test
in
jo
inc
push
push
call
xchg
xlat
mov
push
or
adc
test
aad
out
ret
push
jnp
or
dec
xchg
movsl
lock
stos
js
mov
xchg
sbb
xchg
sub
pop
loope
jmp
sbb
loop
cmpsl
cmp
out
jg
aaa
add
icebp
or
inc
fdivl
inc
jne
adc
fimuls
jnp
in
xchg
bound
cmpsb
add
xor
cmp
es
add
ds
adc
ss
dec
test
ljmp
jae
cld
inc
jno
xor
sahf
ds
xor
push
jnp
cwtl
dec
out
jp
xchg
rclb
mov
xchg
inc
dec
adc
imul
mov
cmp
cwtl
andb
jge
clc
out
adc
test
test
out
scas
xchg
test
bsr
arpl
xor
dec
xor
xor
xchg
fisttpl
insl
mov
loope
mov
push
adc
fdiv
adc
cwtl
mov
inc
lret
sti
scas
sub
jg
fildll
and
fxch
jae
xchg
cmpb
push
int3
icebp
call
add
js
out
ret
mov
pop
ss
out
push
add
and
repnz
lds
jbe
sahf
arpl
ja
xor
xchg
pop
mov
aas
xor
rcl
sub
sahf
cwtl
mov
fs
cmpsb
aam
jmp
xchg
xlat
mov
or
xchg
push
push
adc
pop
cmp
rolb
test
loop
jnp
repnz
out
leave
fisttps
push
repnz
cmp
mov
fdivrs
push
and
xchg
getsec
es
sub
stos
mov
ljmp
push
fs
add
rolb
fs
js
icebp
sub
ja
mov
bound
pop
mov
push
test
lret
bound
cld
rcrl
call
mov
je
test
sar
rcl
inc
jne
add
in
leave
dec
mov
mov
xchg
rclb
and
and
jl
jecxz
cmpsb
push
cli
into
dec
enter
pop
add
ret
insb
idivb
ds
int
mov
es
lods
out
pop
addl
fmul
gs
adc
xchg
cs
es
push
lret
dec
jb
and
data16
push
das
xchg
sub
call
cld
pop
and
inc
inc
xchg
jge
stc
sahf
roll
ds
xchg
orb
cwtl
xchg
addr16
popa
mov
cmp
ljmp
or
orb
pop
das
fcmove
jle
sub
inc
mov
outsb
repz
adcl
mov
fimull
xchg
out
stos
dec
int
dec
mov
rcll
mov
sbb
mov
sbb
xlat
xlat
aad
push
out
jnp
jp
xor
cmp
xchg
fidivrl
subb
out
lds
sbb
scas
mov
shlb
repnz
xchg
or
jne
xchg
scas
mov
push
jnp
lds
xchg
or
call
pop
push
in
pop
dec
hlt
es
sub
aad
movl
scas
push
and
mov
lock
out
xor
pop
mov
mov
sbb
add
ret
sahf
aaa
add
sub
xchg
cmp
pushf
loopne
mov
add
mov
jg
scas
xchg
ds
jne
and
lods
inc
idivb
add
insl
xchg
loope
in
idivb
xchg
int
lods
testb
movsb
insb
push
xor
fsubp
cmpsb
in
xchg
sarb
imul
les
aad
je
test
cmp
jo
push
mov
jo
jne
loopne
addr16
adc
mov
jb
fmuls
mov
mov
pop
mov
adc
aam
roll
push
mov
cmp
push
push
fsubrs
inc
aaa
dec
dec
std
sbb
pop
test
fsts
lods
rcrb
sbb
test
mov
rcr
movb
inc
sbb
adc
xchg
inc
xor
data16
shl
xchg
ret
xchg
rcll
ss
test
adc
push
ds
xlat
sahf
movsl
push
mov
adc
jb
inc
je
lret
pop
fstpt
fwait
int3
xchg
fnstenv
or
test
fwait
stos
add
inc
add
lahf
pop
fs
mov
mov
aaa
into
jle
jecxz
repz
fiadds
cli
or
lret
jp
ficoms
outsl
scas
xor
in
outsl
leave
jecxz
andb
fisubrs
nop
adc
mov
daa
out
test
addr16
rorl
mov
dec
and
sub
fcomps
mov
pop
notb
xor
mov
sbb
xor
sahf
fldl
cmp
idivb
add
jb,pt
pop
test
out
outsl
bound
xchg
das
push
and
sbb
lock
rcrl
inc
imul
adc
push
scas
adc
aam
pop
jae
xchg
and
pop
int3
stc
cmpsb
cmp
mov
add
push
roll
xor
push
jnp
rcrb
sahf
loop
xor
into
xchg
mov
mov
sub
jl
out
dec
out
das
std
shrl
out
and
adc
jae
xchg
idivl
mov
or
shr
sub
inc
loop
repz
adc
mov
out
cmp
push
xchg
out
add
std
mov
fsubrp
sbb
mov
mov
lods
xor
pop
jbe
mov
lods
cmpsb
dec
fidivl
stos
jno
dec
jge
xchg
push
cmp
cmc
dec
push
notb
xchg
js
dec
stc
push
into
xchg
in
gs
call
data16
rclb
int
and
sbb
fdiv
popf
xchg
mov
scas
sbbb
push
pop
lock
lcall
data16
mov
les
jmp
aaa
int3
xchg
data16
inc
pop
aam
ret
aaa
or
xchg
into
cmp
push
repz
inc
push
jns
adc
mov
pop
push
mov
push
testb
jb
push
jae
clc
xchg
dec
push
andl
iret
ss
shll
adc
dec
xor
pop
clc
pop
fisubs
ror
lock
mov
repnz
push
pop
ret
pop
loope
push
pop
pop
out
xor
fnsave
stos
fnstsw
cmp
xchg
xchg
push
cmpsb
mov
loope
dec
fildl
mov
pop
insb
mov
imul
add
mov
imul
cmp
push
sub
stc
out
add
icebp
rcrl
xchg
insl
dec
faddl
icebp
dec
orb
push
test
mov
into
dec
or
imul
pop
loopne
in
loop
popf
mov
decb
adc
dec
pop
adc
adc
addr16
es
inc
cmp
xchg
inc
lret
test
xchg
sbb
repz
dec
fwait
vmovaps
push
lock
dec
sub
jl
ss
and
adc
repz
sub
ds
mov
iret
push
ficoms
std
mov
sarb
in
or
mov
shlb
addr16
xchg
pop
lods
add
mov
push
call
dec
mov
lock
push
out
push
mov
add
push
pop
push
sti
sbb
ja
mov
aad
mov
push
push
cmp
xlat
adc
push
in
jno
into
inc
int3
leave
ret
cmp
adc
jb
mov
stos
dec
sarl
clc
and
data16
pop
mov
mov
mov
dec
lahf
mov
ret
jae
jmp
push
jnp
rep
or
shrb
jno
push
ret
mov
scas
pop
dec
nop
push
xor
mov
stos
cmp
or
and
pop
lret
cmp
jbe
lret
mov
shl
mov
stos
loop
flds
cmc
rcrl
outsb
out
jno
and
pop
or
icebp
out
mov
int
push
add
mov
cli
push
repz
stos
dec
dec
dec
mov
xchg
add
fdivrl
shrb
mov
mov
add
aaa
ret
mov
pop
mov
or
mov
add
xor
jl
leave
add
adc
or
ret
pop
js
div
push
ror
xchg
sbbw
mov
inc
dec
mov
test
out
test
clc
popf
push
add
push
or
mov
add
jae
loopne
repnz
aad
mov
leave
pushf
pop
xlat
fdivs
push
jg
bound
cmp
cmpsb
push
or
mov
dec
add
xchg
cmp
xchg
lds
push
inc
or
mov
shl
int3
sti
mov
fimull
test
sbb
push
jg
push
pop
testb
push
mov
lret
add
js
fsubrl
pop
testb
mov
mov
pop
movsb
sbb
aam
fadd
adc
xor
dec
test
lock
xchg
mov
inc
popf
adc
push
repnz
loop
jp
scas
fnsave
cmp
call
dec
add
adc
lcall
movsl
mov
cmp
leave
cmp
inc
pop
jns
addr16
shlb
mov
dec
dec
aad
leave
fisubl
out
pop
out
push
bound
cmpsl
ss
fsub
roll
lahf
pop
shlb
dec
int3
insb
shll
dec
frstor
sbb
adc
adc
pop
xchg
jbe
push
pop
inc
fwait
lods
dec
pop
pop
out
mov
ret
std
jg
cltd
lcall
in
xor
aas
enter
loope
adc
repnz
movsb
lods
jo
mov
mov
pop
jle
ljmp
mov
mov
cwtl
rcl
dec
add
mov
push
cmp
hlt
shll
mov
jne
mov
sti
data16
icebp
jne
stos
sbb
pop
pop
ja
add
fistl
mov
xchg
add
cs
fldenv
add
int
ret
jmp
lret
xchg
movsl
hlt
mov
and
jg
popf
data16
mov
lcall
leave
pop
cmp
rclb
neg
out
int
arpl
dec
sbb
ss
add
xchg
loope
push
out
roll
je
loopne
lret
out
mov
dec
out
cmp
loop
xor
cmp
ss
sbb
mov
pusha
pop
xchg
ljmp
dec
scas
icebp
lret
mov
push
cmpsb
jae
pop
inc
ret
sub
ds
jg
jge
sub
ja
add
dec
xor
push
cld
pop
sub
jo
cmp
test
push
lds
xchg
dec
push
cmc
aaa
add
ja
mov
daa
cli
cmp
jbe
fimuls
ror
sbb
popa
mov
test
and
insb
dec
sub
sarb
mov
data16
or
cmp
sbb
scas
sbb
loopne
aaa
loopne
movsb
iret
data16
in
into
movsb
adc
mov
mov
pop
and
call
xor
add
add
insl
pop
pop
and
mov
lahf
popa
xchg
std
push
xor
sbb
dec
loope
mov
int3
lods
xlat
pop
sbb
mov
mov
adcl
repnz
lds
jmp
pop
push
push
pop
dec
push
fdivl
into
sbb
aad
adc
lret
push
loope
sbb
cmp
add
and
call
adc
cmpsl
fmul
cmovb
dec
aas
push
idivl
in
mov
mov
dec
shrb
arpl
lock
fnsave
ja
adc
cmpsb
rcrb
out
xchg
dec
sbb
popa
stc
push
lret
sub
pop
adcb
stos
push
dec
or
cmp
lret
mov
push
test
sarb
insl
ret
inc
pop
add
int3
push
sub
rcrb
or
imulb
movsl
in
xchg
and
jns
jecxz
mov
data16
sub
adc
sbb
int3
inc
pushf
or
cwtl
mov
cmp
lret
adcl
out
xchg
lret
pop
fldt
cmp
icebp
cmp
mov
mov
in
xchg
addr16
jae
lods
mov
outsb
mov
testl
in
xchg
fisttps
into
jmp
mov
inc
shr
ljmp
dec
adc
mov
pushf
clc
pusha
cli
out
negb
adc
enter
pushw
mov
inc
inc
fcomps
push
lret
insl
mov
stc
mov
das
icebp
and
cmp
sbb
sub
sub
xor
xchg
adc
push
and
push
fs
repnz
push
lret
mov
inc
pushf
js
sub
loope
ret
repz
add
sbb
adcb
push
dec
mov
ja
ds
orb
test
dec
lcall
lock
inc
cmpsb
pop
iret
dec
sub
fdivl
cwtl
adc
aad
push
sub
pop
push
cwtl
pop
incb
sub
testb
pop
pushl
mov
scas
mov
push
push
jbe
in
cmovl
mov
dec
inc
les
jge
xor
sub
mov
ret
jae
stos
push
and
nop
pusha
adc
hlt
ja
adc
call
dec
xchg
jnp
inc
mov
and
inc
xchg
stc
movsb
add
testb
mov
and
call
xor
cmp
das
adc
cmpsb
int
pop
push
loop
jle
mov
xchg
pushf
sti
pop
mov
and
pop
mov
or
push
pop
es
sub
add
mov
xchg
xchg
push
andl
or
inc
cmpsl
push
movsl
add
test
jo
mov
test
adc
jno
sbb
mov
sub
test
mov
pop
adc
test
sbb
jmp
push
int3
stos
cwtl
xchg
xchg
outsb
xorl
sub
ja
cmpsb
xor
push
sbb
loopne
or
movsl
dec
pop
push
fadds
sub
adc
xlat
nop
fs
mov
inc
in
jno
mov
rorl
dec
xor
rcl
das
jae
mov
sti
jo
loope
push
imul
add
push
cmpsb
loop
sub
movsl
out
fwait
ss
push
or
fcomps
xchg
aam
testb
push
cmpb
push
xchg
xchg
and
ror
es
pop
mov
in
lret
shl
aas
jg
push
lret
xchg
fcomps
movb
out
pusha
push
adc
add
es
pop
notb
mov
dec
ret
mov
test
icebp
fucomi
stos
scas
test
mov
inc
fimull
ficompl
inc
lods
test
jae
jle
jg
dec
mov
movb
cmp
imull
push
mov
jae
std
data16
into
test
sbb
pop
mov
dec
cwtl
aad
jbe,pt
stc
dec
out
out
sub
sbb
addr16
data16
mov
pop
arpl
ss
pop
dec
add
or
lret
loop
xor
out
fsubs
or
push
adc
call
push
add
mov
loop
add
frstor
or
cmpsb
out
pop
scas
mov
cmp
out
int
sti
pop
aaa
fwait
xchg
xor
outsl
enter
pop
fwait
mov
mov
out
cmp
xor
xchg
inc
adc
adc
dec
lods
push
das
rcrl
and
repnz
or
sbb
adc
pop
mov
or
mov
jg
pinsrw
gs
pop
aad
and
stos
xor
xchg
aaa
or
mov
mov
cmpsl
leave
pop
int
pop
or
pop
jae
icebp
sbb
sub
mov
into
and
cmp
cmp
stc
clc
jo
push
lret
int
fcomp
data16
xor
negl
add
aad
pop
pop
mov
lcall
out
add
sub
aaa
pop
mov
repnz
out
pop
cmc
orl
jbe
lods
insb
into
ja
dec
push
pop
push
int
cmp
mov
sbb
dec
jnp
cmp
jo
mov
mov
jno,pn
sbb
xchg
mov
pop
test
jp
stos
xor
mov
mov
mov
jle
jle
xchg
adc
bound
ficoms
dec
cmp
mov
push
xchg
mov
sahf
repnz
pop
or
test
or
and
out
out
rcll
fucomi
sub
arpl
jl
testb
mov
xorl
and
or
pop
mov
jne
or
sub
cmp
loop
xchg
shrl
or
lret
movsb
jmp
pushf
inc
sub
mov
mov
mov
je
scas
or
pop
aad
les
cmp
mov
stc
pop
push
sti
inc
inc
test
adc
mov
push
das
mov
xor
fmuls
mov
cmpl
adc
dec
push
cs
xor
out
add
push
ss
scas
cmp
and
jle
call
jno
pop
mov
adc
mov
rcll
pop
out
xor
push
dec
sahf
pop
xchg
imul
test
and
popf
inc
mov
cmpsl
push
jg
inc
and
dec
push
fnsave
sub
pop
mov
orb
std
or
add
fs
int
fs
mov
psubb
add
jno
ror
aas
push
movsl
mov
ds
pop
push
and
es
dec
divb
cmp
je
insb
pop
jecxz
xchg
popl
stos
and
mov
and
addr16
xor
fbld
and
mov
repnz
or
jne
adc
call
test
hlt
and
mov
fstl
dec
xchg
rcrb
mov
sahf
mov
hlt
push
adc
es
mov
shlb
stc
clc
push
sahf
pop
aad
roll
shll
push
mov
sbb
and
loop
sbb
jae
lock
xchg
adcb
subl
out
pop
and
mov
mov
xchg
sbb
jae
inc
add
xchg
ss
cmp
mov
fsubs
pop
mov
rolb
pop
mov
push
xor
adc
clc
sahf
push
and
mov
pushf
lock
adc
cwtl
cmp
jbe
push
es
mov
xlat
adc
loop
xchg
xor
movl
adc
cli
mov
rclb
test
or
aaa
push
or
mul
xor
inc
pop
fwait
out
and
popa
iret
mov
xor
cmp
jp
stos
int
scas
sbb
push
xor
lea
pminsw
adc
test
scas
out
icebp
add
xlat
imul
and
jge
xchg
adc
adc
cmpsl
ljmp
add
fld
push
cmp
push
stos
lahf
xchg
mov
add
xchg
test
stos
repnz
stos
jg
fwait
mov
dec
lea
mov
and
mov
cmp
mov
dec
cs
fimull
mov
pop
out
adc
jb
xor
in
sbb
pop
fisubl
rcl
sbb
push
xchg
jbe
adc
push
cmpsl
dec
fs
shll
xor
cmp
dec
cwtl
xchg
mov
fcmovbe
pop
cmc
xchg
cmpsb
lea
adc
adc
and
loop
fisttpll
inc
dec
mov
mov
cmp
ja
pop
cmp
enter
out
stos
fadds
sub
adc
cmc
shll
notb
loopne
mov
cs
fsubs
inc
pop
pop
push
xorl
mov
out
pop
rorb
dec
push
and
mov
ds
negb
clc
into
sbb
sbb
push
jmp
cmp
mov
mov
sub
orb
pop
inc
add
shlb
adc
std
gs
dec
mov
mov
cli
and
or
cmp
xchg
jne
mov
hlt
mov
inc
sbb
xlat
mov
rorb
mov
and
addr16
or
insb
fcomps
dec
dec
mov
inc
fsub
sahf
ret
adc
xor
es
das
inc
sbb
dec
or
addr16
pushf
fcomps
mov
insl
mov
add
xor
xchg
mov
roll
sbb
dec
rclb
xchg
subl
pushf
xor
xor
ss
adc
aas
mov
or
rcrb
imul
aad
out
adc
repnz
aaa
sub
stos
xchg
xor
and
fs
jg
scas
or
mov
xchg
mov
push
jo
hlt
imul
gs
sub
fdivrl
add
int
pop
inc
mov
insl
push
mov
adc
and
jbe
dec
mov
ja
jge
push
leave
lahf
ljmp
adc
dec
lret
mov
loopne
icebp
xchg
lcall
or
shl
sbb
dec
clc
mov
ret
ret
clc
mov
mov
adc
pop
insb
pop
notl
aad
inc
sti
mov
fsubrl
cmp
xchg
xchg
pop
add
xlat
lds
mov
jnp
push
data16
fucomi
inc
mov
mov
xchg
daa
sub
xchg
mov
test
sbbb
popa
jnp
ljmp
dec
fwait
cli
test
dec
mov
addb
cld
pop
mov
jge
mov
jae
aad
scas
sbb
jmp
call
mov
imul
imul
push
xor
cli
and
push
sbb
pusha
movsl
lret
imul
jg
cmc
push
aad
shlb
push
inc
adc
dec
rolb
sar
sahf
enter
sti
lret
out
adc
rorl
sahf
push
adc
scas
push
bound
mov
adc
bnd
rcr
testl
ljmp
int
cmp
aaa
nop
mov
xor
roll
popa
push
jg
insb
dec
push
cmp
xor
out
xchg
roll
or
or
ss
adc
xchg
sbbb
push
insb
sbb
mov
and
cmp
xchg
push
jns
repnz
xchg
cmpsb
dec
jle
std
js
out
sub
rorl
xor
jnp
jae
repnz
dec
inc
lods
js
mov
adc
scas
popl
xlat
icebp
mov
insl
lret
and
sub
jae
das
test
dec
jg
sub
mov
mov
shl
sahf
mov
into
fisubs
xchg
sbb
sub
fmuls
stos
testl
add
xor
shlb
mov
mov
idivb
jbe
loopne
push
cmp
test
or
inc
mov
mov
cmc
mov
popf
imul
push
out
clc
orl
loop
xchg
mov
adc
push
pushf
sub
adc
cmp
das
ja
stc
aad
jno
pop
adc
cmp
int3
adc
push
jo
jae
xchg
cmc
icebp
nop
mov
ja
daa
push
mov
push
rorb
or
loopne
jae
test
out
sbb
call
mov
or
push
outsb
push
test
inc
push
call
jns
les
push
xor
lcall
push
mov
test
ljmp
mov
mov
int3
icebp
aam
aaa
repz
add
sub
and
push
and
fsubs
and
popf
xchg
div
mov
push
ret
push
aas
cmp
stc
sbb
adc
outsb
mov
gs
sub
dec
sti
shlb
pop
jno
push
fists
aaa
mov
xchg
cltd
fisttpl
jb
cmc
mov
mov
and
adc
xor
cs
jmp
rdmsr
popa
jg
fstpt
lods
pop
ljmp
call
xlat
mov
into
adc
dec
mov
add
popa
mov
test
adc
pop
push
dec
icebp
repnz
fimuls
fdivr
cmp
mov
inc
fst
dec
sub
adc
aas
jmp
rol
mov
sub
fsubl
add
dec
mov
fildl
and
subl
jg
sbb
mov
cmp
mov
cli
or
push
push
sbb
int3
cs
ja
movsb
fsub
pop
cmp
pushf
test
ss
cmc
jnp
aad
ds
sahf
test
out
lcall
outsl
cmc
ja
loopne
lods
xchg
adc
mov
mov
xlat
xor
jg
or
mov
pusha
mov
xlat
dec
mov
dec
movsb
lods
mov
scas
clc
xorb
xor
cld
push
cmpsb
inc
xlat
push
cs
ds
sbb
push
inc
and
mov
int
data16
dec
out
in
push
pushf
push
dec
inc
ficoml
cmp
xor
mov
push
jo
adc
push
ret
pop
fstpl
test
testb
push
and
mov
cmp
ljmp
ret
cmp
or
mov
add
sub
ja
adc
xchg
lock
ret
out
cmp
push
inc
into
mov
js
cmp
lea
test
mov
loop
xchg
cmc
xor
lret
xchg
sbb
notb
sbb
mov
cmpsb
dec
outsb
out
cmp
bound
jbe,pn
test
cmpsl
push
dec
loope
fs
cmpsb
sub
test
rclb
and
test
subl
daa
into
add
sarb
fists
xchg
pusha
dec
mov
pusha
jo
push
std
repnz
in
adc
dec
das
jo
cmp
in
jbe
mov
xchg
sub
movb
mov
mov
cmp
dec
push
xchg
add
aam
mov
in
fldt
popf
jae
mov
gs
push
sub
fnsave
mov
jmp
movsl
mov
ss
sbb
dec
es
popa
ret
xorl
fiadds
mov
cmp
dec
mov
and
push
pop
mov
or
mov
imul
or
mulb
shr
sbb
xchg
inc
into
lcall
dec
sbb
push
mov
pop
xchg
add
mov
imul
add
push
xchg
test
cmp
icebp
bound
aad
orb
movsl
lds
cmp
int3
mov
repz
mov
push
hlt
push
ss
negb
std
stc
sub
push
add
aas
cmp
addr16
scas
xchg
popa
stc
jecxz
mov
xchg
cmp
imul
call
adc
xor
push
cmpsb
xchg
and
push
push
adc
xchg
or
push
cmp
ds
adc
adc
xorl
jbe
sub
nop
xor
int3
call
sarl
and
aad
cwtl
adcl
lret
ss
shrb
fwait
xor
mov
dec
jne
jmp
add
pop
mov
aad
xor
aad
testl
sub
xor
xchg
xorb
fmul
fcoms
jbe
pop
jnp
push
rorb
pop
and
fisubrl
sub
jbe
dec
mov
push
xchg
sub
sub
fdivrs
lahf
ljmp
add
imul
push
cli
adc
rorb
into
testl
sub
test
xchg
mov
call
mov
add
sahf
or
cmp
rorl
jb
shlb
adc
mov
sub
adcl
lods
outsb
out
loop
dec
imul
mov
push
mov
sahf
mov
push
call
test
add
fldl
inc
xchg
xchg
pop
gs
and
call
sub
xor
testl
loop
cmp
mov
lret
sbb
pop
sbb
cld
push
mov
popf
icebp
mov
jnp
std
push
or
and
pop
imul
andb
add
push
dec
test
repnz
scas
jp
mov
pop
mov
repz
push
dec
dec
test
orl
int3
out
popa
and
dec
bound
xchg
addr16
dec
inc
outsb
dec
xchg
mov
xchg
sbb
shll
gs
xchg
pop
test
lret
inc
jmp
in
push
mov
dec
int3
xchg
sti
mov
fwait
aad
dec
test
add
das
jae
jno
adc
adc
mov
hlt
pop
pop
ja
add
cmp
loop
fildl
out
cmc
adc
xchg
fs
lahf
mov
fisubl
rorb
movsl
aad
xchg
dec
mov
jnp
cld
adc
testb
and
mov
add
xchg
icebp
iret
jg
cmp
shll
loopne
jne
aam
sub
push
inc
and
aad
ja
icebp
xlat
or
adc
add
adc
pop
pop
mov
mov
pop
dec
loopne
iret
add
or
lea
inc
dec
in
xchg
movsb
inc
mov
hlt
jg
stos
mov
shlb
stos
stos
div
js
or
out
into
xor
jnp
pop
dec
iret
inc
leave
xchg
xor
hlt
push
or
dec
repnz
xlat
loopne
fs
add
inc
fisttpl
sti
dec
rclb
jne
xchg
push
addr16
cmp
jns
xchg
and
lcall
cs
dec
mov
loope
push
enter
je
inc
jg
fcoms
pop
int
xchg
push
inc
rcrb
fbstp
jg
orb
dec
mov
cmp
dec
loop
sub
pop
sbb
test
xor
lods
mov
clc
push
sub
jae
inc
sub
xchg
adc
jmp
clc
inc
es
inc
xchg
adc
imul
xor
popf
mov
sbb
hlt
cmp
fcomi
jne
lea
and
add
push
lods
es
adc
xchg
ror
pusha
jbe
rcl
xor
notb
shrl
sub
adc
mov
aad
pop
dec
and
push
lods
jo
mov
imul
nop
test
add
push
shr
cmp
mov
stos
leave
push
pop
jo
loop
mov
inc
es
ficoml
and
test
inc
leave
mov
xchg
dec
es
notb
jae
dec
mov
adc
adc
subl
sbb
mov
mulb
fdivl
fdivr
imul
shl
std
xor
xchg
out
inc
inc
aad
stos
cmp
push
movsl
adc
lcall
lods
pop
out
scas
js
data16
mov
fs
test
fdivp
fimull
xlat
pop
xor
jg
push
aaa
sub
inc
sti
jbe
push
int3
inc
and
push
dec
xchg
stos
pop
cmp
ss
adc
sub
and
out
or
out
adc
in
fst
dec
inc
push
fdivrs
xor
inc
insl
ss
push
fdivp
push
mov
out
dec
pop
mov
cs
pop
cwtl
jecxz
xor
add
push
xchg
dec
cwtl
fwait
out
xlat
rclb
adc
dec
xchg
push
shl
std
imul
arpl
mov
pusha
cmpsb
push
mov
mov
inc
stos
xchg
sbb
dec
loop
vminss
push
adc
adc
mov
ret
mov
mov
dec
xor
int
sbb
cs
popa
aad
push
mov
lods
sahf
mov
jmp
xchg
scas
and
xor
mov
cld
xchg
jno
ror
je
lods
int3
xchg
sub
mov
cld
outsb
ds
cltd
lock
xchg
sbb
push
jg
and
xchg
jbe
pushw
and
repz
ja
mov
xor
mov
std
imul
iret
adc
dec
xor
aad
std
jl
sbb
popa
push
nop
ss
or
rcll
in
dec
loop
rorb
dec
xor
loopne
and
loop
leave
mov
mov
jbe
dec
int
shll
mov
pop
dec
data16
fs
icebp
xor
mov
mov
insl
mov
sti
leave
enter
jp
inc
sti
cmpsb
cmp
mov
aaa
add
pop
jns
cmp
xchg
cmc
sub
sbb
pop
pusha
jle
and
ror
gs
push
mov
int3
mov
add
jp
xchg
aad
dec
in
fsub
pop
adc
js
cmp
fldcw
or
jg
popa
sub
lahf
and
enter
add
push
push
push
cwtl
jmp
and
das
sbb
into
mov
enter
adc
lcall
mov
jmp
cli
aad
xor
loope
adc
or
dec
stos
sbb
push
out
fdivr
or
cmp
dec
dec
sub
xor
mov
pop
cmc
xchg
pushf
cmpsb
dec
xchg
pop
cmp
ss
out
repnz
xor
mov
xchg
andb
testb
mov
stos
jno
sarl
aad
out
out
pop
popa
sti
aam
test
cmp
dec
sub
mov
xchg
shrb
mov
lret
push
mov
jbe
lret
enter
mov
xor
xor
mov
mov
mov
and
mov
lds
xlat
popf
jb
xchg
test
shl
dec
mov
insb
push
jl
mov
data16
push
lods
mov
das
and
or
and
pop
mov
dec
sti
ljmp
push
fcmovnu
mov
pop
in
ss
xor
push
mov
es
ret
and
jbe
repz
sti
cmp
in
inc
cwtl
rorl
call
inc
xor
inc
aad
jnp
dec
popf
shrl
add
xor
xchg
icebp
out
adc
data16
pop
pop
out
divb
and
adc
inc
mov
loopne
push
pushf
pop
mov
dec
pop
sub
mov
pop
push
leave
push
pop
pusha
jb
lcall
xchg
inc
dec
mov
sbb
js
ja
sub
jmp
and
sahf
enter
pop
push
icebp
lock
lret
addr16
jmp
and
repz
and
js
popa
jecxz
inc
jns
xchg
ljmp
cmp
add
mov
pop
dec
arpl
lahf
sbb
std
push
sbbb
sub
xorl
pop
xlat
mov
mov
jns
mov
je
xlat
pmullw
push
repz
xchg
push
sbb
out
pop
fwait
sbb
mov
dec
movsb
lods
jnp
add
sbb
imul
int3
cli
pop
mov
pop
shrl
js
and
push
push
mov
out
std
lret
push
in
dec
or
dec
fistl
xchg
movsl
pusha
dec
popa
cmp
xchg
inc
dec
addl
outsb
dec
out
pextrw
jo
inc
dec
or
push
sbb
dec
pop
xchg
outsb
add
sub
sbb
jmp
movsb
ds
add
mov
mov
push
test
into
and
sti
cmpl
jb
mov
rcr
insl
mov
adc
or
pop
lret
mov
jnp
cltd
jnp
icebp
cmpsb
js
divl
dec
fcmovnbe
push
test
push
sbb
and
subl
outsl
mov
scas
cmp
dec
dec
xchg
pop
mov
fistl
or
sbbb
sbb
rcll
xchg
cmpsl
inc
popf
jns
mov
adc
ljmp
cli
dec
test
jne
and
adc
testb
mov
xlat
xor
rcrb
cmpsl
and
push
inc
rcll
daa
andl
cmp
imul
push
dec
mov
add
sub
popa
data16
xor
cmc
icebp
lret
mov
add
popa
pop
adc
xchg
in
and
jp
push
mov
lods
adc
test
mov
and
lahf
cmpsb
sahf
jg
in
xor
stos
gs
sub
stc
mov
cli
xor
mov
shlb
pop
orl
mov
xlat
pop
enter
test
mov
outsl
cmp
into
jg
dec
cli
inc
dec
cs
adc
movsl
sub
fcoms
cmp
xchg
jg
popf
jmp
mov
mov
or
test
xchg
clc
cmp
jb
out
lds
gs
jo
aam
inc
lods
dec
cltd
ret
cld
inc
lods
jg
mov
inc
movsl
movsl
pop
sub
cmp
inc
pop
ss
xchg
mov
rolb
cli
add
cmp
jns
push
inc
jp
push
push
pop
xchg
lret
pop
sbb
push
sub
subl
lahf
add
iret
out
repz
dec
lds
movsl
aad
xor
mov
je
aad
or
idivb
mov
lods
mov
adc
push
test
or
es
iret
mov
xor
loop
lret
dec
pop
int
ss
adc
movsl
leave
cmp
jbe
ljmp
movsl
mov
dec
mov
mov
scas
push
sbb
dec
xchg
and
jnp
incl
aad
lods
dec
js
ja
push
std
adc
fldt
xor
pop
stos
push
jnp
in
in
mov
xlat
call
in
and
or
inc
and
add
inc
add
pop
push
jnp
dec
aas
lea
enter
mov
sub
es
call
es
mov
jo
pop
inc
call
pop
addr16
std
loope
cs
pop
add
loopne
jmp
and
xor
aad
push
add
mov
stos
popf
out
adc
add
dec
mov
mov
mov
lods
xchg
ds
aaa
loop
and
std
arpl
sbb
aad
mov
dec
jo
or
sub
cmp
xor
mov
rolb
push
dec
sub
mov
dec
in
mov
outsl
out
out
dec
popf
or
push
push
je
inc
xchg
push
pop
cltd
daa
out
lods
pop
xor
xor
std
arpl
bound
mov
fisubrs
mov
lret
sub
orb
and
push
pop
and
sub
cmp
xchg
push
add
ds
push
sbb
or
call
xor
bound
xor
add
shrl
lahf
adc
dec
aas
cmp
subb
cmp
adc
imul
mov
dec
inc
pop
adc
push
mov
scas
rorl
mov
dec
xchg
xchg
pop
mov
pop
leave
adcb
ss
xchg
jb
stos
scas
loope
or
adc
cmp
add
ret
inc
xor
dec
jle
xor
cmpsb
cmc
dec
mov
int3
popa
test
or
dec
mov
aad
dec
fcoms
inc
sbb
push
xchg
cmpsb
and
add
iret
sub
test
add
test
add
mov
inc
sub
push
out
xchg
addl
movsl
out
aaa
lcall
inc
stos
addb
jne
enter
lods
or
ss
cli
jle
pushw
push
cmp
jl
push
call
mov
xchg
es
lods
insb
pop
cmpb
test
cwtl
xor
shlb
pop
mov
push
and
xchg
les
out
mov
xor
inc
pop
mov
fsubr
xchg
lock
mull
popf
fimuls
stos
jg
call
rolb
lock
sbb
leave
xchg
or
fldenv
enter
call
ret
aad
xor
repnz
cmp
xchg
pop
pop
das
lods
jbe
cmpl
add
pusha
pop
stos
popf
add
mov
cmpsb
and
pop
pop
mov
arpl
ds
fiadds
pop
sub
mov
ss
mov
xor
jno
pushf
in
push
mov
loope
mov
das
add
clc
cmp
mov
add
int
test
push
cmp
scas
mov
lcall
andl
pop
lds
ss
andl
push
sbbb
and
add
cmp
sub
aas
cmp
adc
jecxz
popf
bound
sarl
fnstenv
call
movsl
into
push
and
sbb
mov
das
rcll
mov
fistl
mov
add
xchg
xor
inc
ss
cmpl
pop
stos
in
xor
test
leave
orb
mov
sub
jmp
push
push
push
addr16
repz
xchg
cmpsl
imul
arpl
cmp
lds
and
push
std
hlt
fstps
stos
sbbl
adc
push
mov
xchg
jno
cmc
fists
xchg
test
sbb
mov
ss
cmpsl
stos
mov
xlat
sbb
mov
sbb
and
mov
aam
dec
dec
cmpsl
mov
or
test
jbe
jno
iret
std
das
push
xor
leave
out
fisttpl
add
jbe
sahf
and
sub
cmp
mov
in
test
mov
enter
xor
mov
push
sbbl
hlt
mov
ss
inc
push
les
xchg
scas
data16
fdivs
adc
pop
mov
fs
lods
dec
mov
ja,pn
pop
shrb
xchg
imul
mov
leave
aad
lock
es
or
jg
jne
fsts
cmp
add
xchg
sub
and
cmp
inc
push
pop
mov
push
pop
jb
sbb
dec
push
push
or
jg
and
jnp
mov
scas
push
jmp
and
mov
jbe
daa
adc
sbb
cmp
push
lahf
sub
dec
lods
jb
or
lret
sbb
and
rcll
cmp
in
push
sahf
cmp
loop
lds
sub
pop
out
testb
adc
test
mov
cmp
dec
aad
sbb
and
fwait
jp
jecxz
mov
push
int
scas
push
mov
repz
gs
push
imul
aaa
mov
push
loopne
mov
cmp
clc
xchg
mov
push
xchg
js
push
push
repnz
popf
and
cmpsl
xor
ret
fldcw
repz
shrb
xchg
sbb
lret
shll
stos
fdivrs
sbb
sbb
outsl
data16
fwait
mov
add
ret
mov
stos
sbb
cmp
fidivs
push
bnd
pop
push
adc
pop
xor
in
jbe
push
push
push
push
fs
mov
mov
jb
mov
mov
or
in
xchg
daa
loope
fdiv
jmp
into
add
std
or
pop
mov
ss
lret
jnp
cmp
pop
into
and
mov
int3
lahf
in
pop
sbb
std
addr16
and
cltd
push
fdivrl
xor
mov
ljmp
sbb
or
adc
jle
pop
push
or
sbb
scas
jnp
in
cmpsl
xlat
fdivs
imul
mov
xchg
jg
mov
cmp
scas
push
push
jae
push
enter
sti
inc
push
dec
and
cmp
stos
gs
aad
fwait
adc
dec
repz
pusha
adc
ret
mov
orb
rcr
dec
push
cmc
jmp
test
aam
nop
fldcw
es
sub
mov
into
in
cli
dec
loopne
cmpsb
or
adc
pop
push
out
fisubrs
loop
sub
or
rolb
push
mov
push
jo
cli
cmp
mov
testb
dec
gs
call
xor
xchg
sbb
aam
scas
push
in
sahf
add
pop
cmp
cld
outsl
push
fisubrs
rorl
insb
pop
std
stos
sub
into
mov
adc
dec
or
and
sbb
sub
inc
fsub
js
cmp
dec
jnp
lock
xor
iret
es
icebp
rorl
mov
sbbb
and
pop
out
sub
pop
sarl
inc
adc
cmpsl
jg
cmp
adc
adc
adc
ret
int
repz
movsb
xor
jnp
mov
imul
in
jle,pn
push
sbb
adc
js
fisubs
push
sti
push
pop
out
lds
pop
inc
fwait
add
sub
imul
shll
adc
xor
dec
mov
adc
roll
and
nop
mov
sub
xlat
cmpsl
scas
mov
cld
jae
sub
xor
sub
cld
push
jno
cmpsl
aad
xchg
push
mov
xchg
ss
negb
sbb
movsl
mov
es
mov
pop
lds
or
pop
scas
add
and
cli
imul
lds
jecxz
adc
xor
arpl
push
xchg
cmp
rcll
mov
pop
dec
adc
shll
push
stc
mov
and
es
inc
ds
adc
sub
outsb
jb
in
bound
cmp
out
pop
out
js
sub
ficompl
push
bound
sarl
or
call
sub
aaa
xchg
lods
dec
mov
mov
cmp
sub
inc
mov
jge
cmp
mov
inc
in
shlb
push
outsl
xor
clc
cwtl
inc
fmuls
negb
jg
dec
aas
mov
jl
and
mov
push
and
hlt
mov
push
or
aaa
add
xchg
in
push
imul
push
mov
lea
jmp
cmpsl
inc
ss
shll
pop
fdivrs
pop
sbb
sti
jl
add
adc
xlat
mov
addr16
rolb
jge
lods
jl
mov
arpl
push
outsl
xlat
push
and
jmp
in
lret
fiaddl
sub
test
dec
add
sub
fnstenv
fdivl
sbb
idivl
stos
cmp
pop
aaa
pop
gs
push
movsl
push
jg
xchg
jp
sar
add
xchg
cmpsl
pop
inc
lret
push
test
enter
pop
lds
push
push
repz
test
pusha
mov
and
sbbl
mov
cmpsb
aas
std
push
and
imul
in
fdivl
push
shlb
out
ljmp
stos
mov
mov
ds
leave
jg
insb
sbb
jmp
test
sub
ret
imul
mov
pop
adc
in
or
cmpsl
cmp
xchg
fwait
inc
hlt
lods
cltd
shl
ret
aam
xchg
sub
xor
mov
pop
enter
and
dec
xor
push
sbb
in
mov
pop
cmp
mov
pushf
adc
jl
cmp
out
mov
cmp
push
cmpsb
rol
in
dec
test
push
xor
sbbl
out
push
xlat
pop
imul
aam
dec
cmpsl
inc
into
pop
cli
js
cmp
mov
cmp
dec
shrb
test
cmp
std
push
adc
or
movsl
mov
xchg
xor
mov
sahf
xchg
psrlw
es
adc
mov
fbld
fadds
stos
jp,pt
loope
push
fs
push
xor
add
or
rorb
pop
mov
stos
pushf
fisubrl
aas
out
xchg
sti
dec
sarl
jo
in
mov
mov
xchg
ss
gs
pushf
push
push
stos
int
adc
xchg
sti
mov
movb
pop
mov
sub
andl
stos
enter
sub
fistpll
js
call
xchg
popa
test
fcmovne
pop
add
in
call
movsl
xchg
jb
int
cmp
adc
jbe
shrl
pop
addb
push
cmp
cmp
data16
push
jge
add
in
xchg
cs
pop
inc
cmp
push
push
xchg
pop
push
push
dec
stos
insb
out
jle
add
push
imul
aam
xchg
xlat
iret
sub
mov
call
fldt
hlt
jnp
imul
mov
adc
sub
or
fsub
xchg
xlat
and
xor
mov
movsb
push
pop
push
xlat
into
les
inc
bound
mov
pop
jg
mov
mov
inc
mov
clc
repnz
mov
push
dec
enter
fdivrp
mov
push
hlt
cmpsl
sbb
xchg
push
imul
addb
or
mov
pop
mov
dec
xchg
popf
fs
aaa
out
stc
in
mov
and
adc
icebp
and
std
cwtl
test
inc
and
and
fmuls
fadd
gs
addr16
sbb
out
ja
pop
pop
push
dec
cmp
mov
ds
lret
adc
ljmp
pop
mov
inc
push
mov
test
ljmpw
mov
es
test
subl
sti
mov
icebp
mov
movsb
adc
or
xor
push
rcll
lcall
call
popa
cld
loope
sbb
pop
ss
cmp
push
push
jne
subl
jbe
dec
fbstp
jmp
popf
ss
xchg
mov
loopne
pushf
mov
inc
mov
mov
and
or
xchg
rcll
daa
jge
imul
loope
pop
lods
int
movsl
repz
xor
iret
movsl
mov
jbe
sub
cmp
cli
imul
inc
outsl
mov
cmpsb
jbe
aad
inc
jb
int
or
divb
pop
cmp
sti
adc
jnp
scas
mov
movsb
into
lcall
mov
jae
arpl
mov
les
inc
test
aam
jle
mov
cmc
and
in
adc
lods
imul
push
loop
add
mov
inc
mov
adc
sahf
push
scas
ficoms
pop
mov
sbb
adc
incl
mov
lahf
in
pop
jg
dec
mov
mov
fmuls
pop
xor
sbb
mov
lods
ss
hlt
ret
mov
mov
loop
je
jnp
or
stos
cmpsl
sbb
inc
xor
pop
pop
es
sbb
jo
or
sarl
mov
shrl
hlt
dec
and
or
dec
cmpsl
icebp
dec
or
rcll
cmp
xor
mov
xchg
mov
sbb
mov
mov
and
cmp
xchg
in
jb
mov
and
pusha
or
dec
sbb
pop
pop
push
repnz
mov
or
pop
adcl
pop
icebp
jecxz
pop
adc
popf
push
sub
add
data16
dec
int3
insl
inc
xchg
es
cmpl
fs
cmc
imul
pop
xor
dec
xchg
ss
sub
int3
jge
popa
jno
adc
xor
sub
bound
repnz
sahf
repnz
mov
aad
mov
xor
push
jmp
and
jb
in
data16
and
daa
out
js
out
test
push
leave
mov
test
mov
inc
cli
mov
cmp
xor
adc
or
loope
enter
jg
es
push
lds
push
jne
rorl
popa
pop
cmpsl
mov
notb
xchg
adc
pop
xchg
xchg
adc
inc
lds
outsl
pop
insb
mov
mov
sub
and
cmp
and
ror
fistpll
pop
nop
mov
jmp
push
das
rclb
inc
pop
notb
pushw
pop
icebp
fsubrs
push
fwait
rclb
cmp
adc
pop
sub
adc
stos
fidivs
xchg
xchg
test
mov
jne
jno
call
inc
loope
mov
push
lods
xchg
xchg
int
std
call
push
bound
push
testb
subl
jno
rcrb
push
adc
scas
js
push
xchg
mov
in
loop
or
lock
jmp
cmp
daa
int
movsb
cmc
mov
bound
int
dec
and
bnd
push
add
cmp
and
fstpl
call
pushf
fdivl
pop
xor
pop
adc
pop
push
jg
pop
cmp
mov
jle
or
aad
fsub
daa
dec
icebp
push
cli
and
mov
mov
mov
lret
inc
cmp
cmp
adc
xchg
pop
mulb
movsl
popa
bound
push
inc
leave
push
shl
dec
pop
xchg
insb
adc
fwait
xchg
sahf
shll
xchg
mov
and
call
adcl
inc
add
jb
cltd
ficomps
test
mov
mov
out
mov
dec
inc
imul
fucomip
xchg
dec
stos
xchg
jmp
xor
je
imulb
cmp
push
in
inc
pop
or
ja
mov
xchg
fisubrs
mov
cmc
xchg
mov
and
pop
push
sti
xchg
lret
loopne
and
or
jge
in
fwait
push
das
aaa
icebp
mov
inc
rorl
jbe
adc
push
jecxz
loop
icebp
push
adcl
dec
sti
xor
mov
mov
and
jno
add
mov
lret
fxam
inc
mov
enter
adc
and
lcall
fsubr
clc
inc
push
xchg
mov
fistl
je
aaa
lea
adc
aad
dec
test
jnp
or
jnp
push
testb
xorl
xor
jnp
adc
idiv
add
adc
mov
add
rdmsr
mov
push
cmp
adc
cmpsb
lds
dec
cmpb
fwait
adc
jmp
lret
adc
xchg
enter
dec
push
jle
cmp
push
add
aad
ja
adc
aaa
mov
xchg
ja
negb
pop
jae
or
scas
mov
pop
mov
xorl
or
add
addb
or
hlt
cmp
in
fnstsw
call
pop
xchg
dec
lods
pop
and
data16
es
sbb
pusha
js
mov
dec
test
test
xchg
cld
pop
mov
xchg
sahf
xor
xchg
cmp
mov
rcll
lcall
push
out
push
mov
enter
orl
push
and
xchg
mov
xchg
lods
ljmp
fs
clc
pop
pop
les
mov
scas
stos
and
inc
aad
dec
pop
sub
pop
push
in
dec
std
push
test
jnp
mov
push
out
lods
aad
push
daa
pushf
push
add
orb
and
pop
fisubl
add
adc
or
ret
fdivrs
adc
in
dec
dec
aad
ss
es
adc
lea
jb
fldl
dec
cwtl
je
adc
xchg
mov
jnp
fsubrs
ja
and
adc
pop
adc
daa
cmp
fiaddl
mov
decl
aaa
mov
sahf
mov
xorb
push
add
jg
or
notb
aas
ret
cmc
xchg
sbb
fidivs
icebp
aad
inc
cmp
mov
mov
js
dec
cmpsl
push
jne
mov
adc
xchg
jp
es
sub
adc
ljmp
pop
xchg
xchg
in
clc
lret
mov
adc
xchg
ja
or
xor
scas
fdivs
loop
inc
lahf
mov
adc
pop
jecxz
popf
pusha
sbb
jae
aam
dec
test
push
push
mov
ret
xor
sbb
xchg
sahf
and
pop
test
adc
int3
dec
xchg
loopne
push
mov
and
inc
xchg
popa
pop
aaa
out
mov
outsl
fnstsw
pop
push
pop
repnz
lods
icebp
xor
stc
add
pop
aam
add
nop
into
xor
cmpsb
adc
jecxz
sbb
daa
inc
inc
and
add
aam
push
dec
pop
push
in
dec
adc
pop
scas
add
test
gs
fcomps
xlat
int
pop
not
dec
stos
add
sub
mov
xor
inc
daa
lds
mov
adc
xchg
xor
rorl
lahf
cli
testb
mov
mov
pop
cwtl
scas
adc
outsl
lret
fsubl
dec
outsb
iret
push
es
shll
dec
roll
mov
dec
orl
fsubr
cmp
dec
gs
adc
push
pop
insl
or
gs
out
xchg
loop
jae
push
adc
outsb
lds
sub
adc
aam
movsw
sbb
xchg
mov
dec
popa
pop
and
fisttpll
shrl
aad
push
imul
push
dec
lea
cli
rorb
jno
out
cwtl
jae
sarb
xchg
jo
scas
divl
xchg
push
push
push
je
imul
dec
xor
jbe
shl
or
rcll
popf
jno
in
dec
push
and
jnp
mov
xchg
scas
push
or
mov
pop
jnp
pop
pushf
mov
loop
and
jo
aas
push
push
aam
lea
bnd
sub
int
sbb
insb
pop
sbb
jg
ret
dec
or
xchg
mov
je
mov
mov
mov
adc
pop
inc
subl
aas
data16
xor
es
ret
push
cmp
push
push
stos
loop
mov
aas
rcl
dec
dec
aaa
jno
nop
fimull
jle
adc
mov
bound
in
or
jns
out
roll
and
jno
aas
adc
xor
push
push
cmpsl
or
mov
push
and
sub
loop
vmovntpd
mov
or
xchg
in
sahf
push
idivl
lds
add
xor
push
lods
iret
ret
in
movsl
mov
push
mov
xor
pop
dec
out
xchg
lea
ficoms
push
inc
mov
insl
adc
cwtl
inc
icebp
loop
out
dec
push
xchg
and
cmp
xchg
repnz
mov
mov
and
iret
stos
jecxz
mov
push
pop
mov
repz
into
mov
stos
sti
out
test
adc
test
cs
cmp
ds
inc
push
mov
dec
stos
std
and
mov
mov
sti
adc
in
xchg
fldt
push
shrl
push
shrb
rorl
adc
dec
shrb
sub
push
ja
mov
xchg
call
add
and
push
dec
mov
ss
aad
mov
shrb
jnp
push
repnz
cwtl
repz
adc
sbb
ljmp
sti
inc
sti
fisubrl
or
mov
cli
mov
stos
lods
or
mov
mov
dec
pop
and
fsubl
fcmovnbe
cmpsb
nop
inc
pop
orb
aaa
insb
sub
pop
pop
push
cmc
cmc
inc
mov
jae
into
sbb
fadds
push
mov
out
inc
aam
xchg
fadds
sarl
mov
in
sarl
test
aad
sarl
dec
mov
xlat
push
push
mov
cltd
scas
xchg
push
or
mov
sub
sbb
xchg
stos
bnd
cli
jmp
nop
fidivl
call
or
inc
mov
dec
push
mov
or
fimuls
aam
pop
ret
and
xchg
push
mov
add
xor
add
adc
xchg
push
xor
or
movsb
jnp
xor
sub
lods
lods
adcb
sbb
xor
repz
cmp
xchg
shll
dec
sub
es
enter
shlb
setle
out
sub
and
inc
movsl
pop
mov
popa
mov
gs
dec
mov
and
adc
rcll
dec
iret
enter
aas
scas
rcr
and
push
mov
out
fnstenv
xchg
mov
dec
add
jnp
and
inc
pop
jae
sub
aaa
mov
pop
inc
fsub
push
sti
aam
orl
xor
out
push
cmp
rorb
adc
xor
inc
shlb
addr16
mov
xor
push
enter
gs
sbbl
cmc
aas
int
inc
cmp
jb
iret
stc
in
into
push
leave
jmp
dec
xchg
xchg
loopne
add
adc
repnz
call
push
adc
mov
in
cmpsb
insl
ljmp
adc
inc
cmp
pop
fcoml
dec
and
mov
inc
cmc
pop
syscall
aad
jbe
mov
push
lret
dec
cs
xor
int
push
iret
sub
aam
mov
xor
pop
in
and
and
xchg
lock
imul
adc
sub
adc
sbb
mov
mov
mov
sbb
aad
cmpsb
inc
adc
jo
dec
nop
add
pop
pop
xor
data16
xlat
divb
jg
lret
ljmp
in
popa
lds
push
stos
xor
pop
mov
fsubrs
pop
cmp
cli
in
cmp
cmp
add
inc
lret
mov
sub
dec
popf
add
xchg
scas
add
rcrl
jecxz
inc
push
or
pop
mov
and
pop
in
cmpsl
push
dec
arpl
mov
lcall
adc
xor
test
mov
pop
mov
sbb
iret
rdtsc
mov
cmp
pop
aam
mov
addr16
mov
test
in
popa
push
and
jb
in
mov
fcomp
sub
pop
inc
mov
div
inc
cwtl
les
repnz
insl
lods
mov
xchg
add
out
notl
mov
adc
xorb
mov
push
sbbb
pcmpgtd
mov
ds
adc
arpl
bound
push
dec
pop
cwtl
inc
ljmp
cmpl
dec
xchg
xchg
xchg
rorl
jmp
jno
mov
xchg
in
movsl
push
jae
ret
sbb
dec
insl
dec
push
imul
fcoms
cmp
lret
sbb
xor
ret
pop
mov
dec
mov
cmpsl
mov
sub
sub
inc
mov
xor
lods
xor
xchg
dec
int3
mov
mov
or
mov
adcb
shll
int3
addb
rcrb
mov
or
push
or
cmp
mov
dec
cli
fsubr
std
or
loope
cmpsb
adc
sub
jb
lret
pop
or
cmc
mov
dec
push
or
xchg
stos
mov
lds
xchg
in
xchg
pop
addb
or
sub
rorb
inc
xorb
pop
adc
lds
push
cs
push
subb
inc
xchg
pop
pop
adcl
into
adc
dec
pop
fcmovnbe
cmp
mov
push
mov
or
fimull
mov
or
out
jbe
out
popa
push
sbb
sub
sbb
cli
push
scas
scas
or
jae
fcompl
cmp
mov
rcll
ja
xor
fs
mov
push
or
stc
pop
mov
mov
jbe
mov
jnp
scas
rcrl
dec
leave
adc
mov
jno
or
inc
sti
xchg
mov
pop
push
jecxz
cmp
cwtl
push
adc
bound
cmpsb
xor
ss
out
mov
popf
mov
push
push
shl
outsl
cmp
push
push
sahf
push
xchg
fsubrl
xchg
scas
arpl
jo
mov
mov
imul
insl
mov
out
ficoml
rcl
pop
push
scas
dec
ror
test
jno
test
fdivr
cwtl
lea
dec
xchg
shl
in
or
mov
dec
lods
leave
or
push
add
pop
inc
mov
fs
xchg
outsl
mov
jmp
imul
push
mov
inc
adc
dec
or
mov
dec
sbbl
data16
xor
dec
or
inc
ljmp
add
loope
fcomps
std
adc
clc
psubb
xor
sbb
ret
push
adc
jge
shrl
push
enter
lods
lahf
jecxz
inc
dec
pop
mov
popa
sahf
mov
adc
or
aaa
das
xacquire
pop
cmc
pushf
sbb
xchg
jge
pop
lret
dec
and
xchg
cwtl
mov
pop
xchg
push
mov
shl
jne
add
or
repnz
fcoms
lret
int
rcrb
leave
sbb
cmp
pop
and
pop
gs
push
lahf
je
pusha
adcl
or
mov
inc
or
cmp
in
mov
and
or
cs
jnp
in
cwtl
movq
ret
bound
call
push
adc
sub
stc
sub
inc
mov
sub
push
xor
in
rcrl
mov
xor
or
shlb
sahf
dec
mov
jne
pop
popf
aad
mov
and
jmp
sub
call
fwait
add
mov
adc
cmp
adc
movlhps
std
int
xchg
cmp
sbb
push
add
orb
jmp
dec
adcl
sahf
sbbb
xor
add
pop
rcl
inc
outsb
inc
orb
sahf
lahf
stos
lods
sub
aaa
dec
mov
js
dec
clc
sbb
cmp
leave
aad
notb
and
lahf
jmp
lds
into
cmp
jb
push
adc
imul
inc
fwait
adc
aad
push
dec
push
call
sub
dec
popa
scas
adc
and
lret
adc
arpl
push
ds
sbb
inc
nop
adc
mov
cmpsb
cmpsb
fdivrl
stc
dec
rcl
out
xor
lods
sbb
cmp
gs
data16
push
inc
jp
add
aam
pop
push
push
dec
push
mov
cmp
mov
enter
pop
push
mov
iret
push
fsubr
sbb
push
and
mov
xchg
mov
gs
dec
pop
cs
pop
mov
clc
scas
lds
sbb
inc
vmovntps
mov
cmp
fsub
jg
aaa
cld
aas
lret
sub
dec
pop
sbb
cmp
sub
fidivrl
ret
shlb
mov
push
mov
adcl
jecxz
jae
pop
leave
aaa
int3
mov
xor
xchg
stc
fisubrl
cmp
mov
arpl
enter
imul
mov
pop
data16
xor
imul
adcb
add
ficoms
aad
mov
dec
arpl
push
dec
inc
jbe
das
into
sub
lods
sub
xchg
mov
aam
sub
fst
icebp
loopne
jns
xchg
testl
push
arpl
cld
and
jbe
aam
dec
xchg
or
leave
cwtl
push
adc
xor
pop
stc
fwait
out
int
cwtl
push
push
std
cmc
push
mov
out
mov
inc
les
aam
push
jb
jl
jno
dec
sbb
cmp
push
dec
cmc
or
pop
scas
jmp
enter
add
repnz
jnp
lods
test
call
cli
mov
pop
sahf
mov
inc
rol
cmp
jae
dec
xchg
cli
lcall
pop
dec
xchg
cli
outsl
dec
adc
add
sbb
jne
sbb
or
dec
mov
dec
fcoms
cwtl
out
stos
popa
xchg
cwtl
ja
and
sbb
bound
push
sub
inc
inc
add
xchg
inc
sahf
repnz
fwait
add
push
out
xchg
std
xor
cwtl
pop
xchg
ja
cmpb
dec
dec
mov
iret
test
dec
rolb
or
fsubr
mov
sub
iret
mov
dec
lds
rorl
push
adcb
test
leave
inc
int3
and
lods
cli
in
jmp
sarb
rcrb
dec
adc
cmp
pop
add
jl
xchg
dec
add
cs
dec
pop
in
inc
aad
test
lds
mov
sub
jl
mov
xor
mov
sub
aad
jl
testl
int
pop
dec
inc
push
fildl
jb
xchg
push
add
pop
and
repz
aad
pop
call
mov
sub
adc
mov
aaa
inc
int
xchg
repz
jnp
loopne
push
jo
cld
mov
lea
push
jp
adc
mov
loope
sbb
mov
bound
jae
push
pop
xchg
push
jne
aad
push
movsl
pop
dec
pop
sti
data16
lret
ljmp
sahf
xchg
push
xchg
ds
movsl
mov
cmc
ret
loop
adcl
lods
mov
in
movsl
dec
lcall
push
add
cmc
fxch
in
lods
push
pop
into
stos
adc
fnstenv
fsubr
cmp
push
pushf
repnz
and
dec
enter
orl
inc
mov
and
push
cli
addb
ret
mov
jmp
push
jl
in
mov
xchg
jmp
aad
push
jnp
pop
inc
call
dec
aas
je
xor
sub
mov
dec
inc
mov
outsb
stos
loope
pop
int
mov
jmp
mov
mov
sub
mov
or
jbe
xlat
stos
mov
test
fildll
lea
fstl
pop
and
add
dec
jb
in
sbb
iret
leave
push
negb
add
adc
dec
jnp
dec
add
pop
jbe
dec
sbbb
popf
gs
push
cs
adc
mov
fwait
inc
rol
push
int
movsb
out
paddsb
std
push
sahf
adc
pushf
adc
or
icebp
push
push
into
sbb
arpl
cmpsb
je
ss
pop
clc
jg
mov
inc
pusha
hlt
inc
sub
loope
adc
bound
clc
mov
sbb
mov
scas
jl
ja,pt
test
mov
jbe
test
add
test
in
mov
pop
cmp
mov
dec
shll
inc
les
push
adc
cmpsl
mov
out
clc
push
and
test
xchg
and
cmp
mov
fbstp
rclb
pop
and
mov
insb
xor
pop
ret
es
mov
out
xchg
jno
lahf
leave
jge
adc
jae
jmp
push
repz
jmp
xchg
mov
shlb
adc
sub
push
bound
insb
ljmp
push
div
pop
aad
xchg
gs
inc
push
or
inc
ds
add
enter
push
dec
or
adc
rorl
mov
cmc
ljmp
jecxz
loope
rcl
outsl
pop
sub
jbe
fnsave
push
cmp
mov
xchg
jmp
adc
fbld
rcrl
out
adc
test
aam
mov
xor
push
jns
jp
cmp
adc
jnp
out
icebp
push
dec
out
sbb
scas
jge
mov
xor
stos
bndstx
out
gs
push
out
jb
mulb
xor
inc
sbb
sahf
sbbl
or
in
and
addr16
push
and
pop
mov
xlat
int3
dec
mov
popa
mov
xor
mov
js
or
and
std
mov
repz
inc
fs
scas
push
out
add
les
aaa
int3
pop
ja
lods
rcrb
cmp
adc
dec
sbb
ret
adc
int
push
xchg
push
test
cmpsb
inc
inc
cmp
mov
pop
push
and
cmp
xchg
roll
cltd
push
hlt
dec
mov
call
sub
add
imul
adc
std
out
pop
inc
addr16
addr16
push
ss
mov
rcrl
std
adc
pushf
addr16
call
notb
jne
inc
in
xchg
add
data16
mov
xchg
ret
hlt
mov
adcl
popa
movsl
push
inc
mov
add
mov
shrb
insb
adc
fisttpll
pop
mov
loopne
mov
rep
lods
hlt
sbb
mov
push
adc
stc
xlat
sub
ficoml
add
stos
fwait
ret
jo
bound
mov
cs
pop
call
jae
push
icebp
out
cmp
push
fimull
aad
loop
jo
test
push
lods
lock
sub
dec
cli
int
test
cmp
subl
cmpb
shlb
aas
mov
push
mov
sbbl
sub
inc
jbe
mov
xor
and
add
jp
jnp
andb
aas
pop
xchg
jo
lcall
icebp
jo
cmp
notb
inc
lret
pop
jmp
in
cmp
dec
pop
dec
or
jmp
adc
loopne
xor
cmpsb
mulb
pop
scas
push
loop
ljmp
in
mov
scas
dec
fwait
adc
and
inc
push
mov
xchg
out
out
push
or
xchg
jbe
lods
mov
popf
fwait
dec
test
fwait
out
iret
cld
xor
jmp
cmpb
shlb
pop
aam
insl
mov
push
in
shlb
adc
dec
mov
push
int
xchg
mov
mov
js
push
aad
out
jle
aad
das
stos
call
fcoml
mov
push
mov
scas
mov
dec
into
sbb
gs
mov
dec
orl
icebp
data16
test
push
add
dec
xchg
xor
add
and
push
cmp
or
call
jmp
mov
ljmp
imul
inc
rcll
outsb
test
into
adc
xchg
jg
mov
push
mov
loop
push
xchg
mov
je
ljmp
mov
movsb
or
xchg
push
mov
add
mov
negb
xor
mov
dec
and
aam
pop
xchg
clc
dec
int
inc
lcall
mov
dec
cmp
mov
mov
out
in
and
mov
fcoml
fisttpll
pop
or
iret
lods
mov
dec
mov
lcall
xchg
addb
fistpll
xchg
repnz
inc
mov
pop
adc
add
mov
pushl
stos
pop
pop
ret
cli
inc
inc
dec
mov
add
cmp
pop
mov
mov
sub
imul
aad
xchg
aad
xchg
sbb
mov
test
push
push
cmp
mov
jge
xchg
sti
fdivrs
stc
shll
sub
mov
ficompl
adc
cmc
adc
cmpsl
mov
loope
lret
dec
dec
xchg
dec
shl
mov
mov
and
ss
inc
mov
add
pop
cmp
lahf
adc
jg
cs
add
fdivr
dec
mov
push
mov
pushf
inc
dec
adc
mov
inc
pop
fisubl
and
rcr
loopne
push
cmp
and
mov
adc
sub
movb
pop
mov
xor
xor
pushf
adc
jo
jbe
sbb
mov
and
push
sbb
ret
jl
sub
adc
test
cmp
sahf
push
test
dec
mov
in
aad
inc
mov
movsl
cwtl
mov
test
pop
cmp
ret
add
jbe
sbb
and
jge
lods
pushf
mov
or
cmp
aaa
loope
jecxz
and
inc
jg
pop
lods
out
jl
xchg
sbb
xchg
mov
jb
maxps
ret
repz
rcll
and
adc
ja
aad
dec
xchg
jle
xchg
lock
leave
loopne
and
in
mov
rcrl
sub
xchg
hlt
inc
movsl
sahf
push
xchg
adc
mov
xchg
dec
dec
std
loope
dec
jle
mov
out
push
and
xor
cmp
cmc
inc
adc
and
call
lods
mov
mov
add
fisubs
outsb
lods
jb
lods
fsubrp
bound
and
andb
cmp
jo
push
xchg
push
xor
enter
jg
loope
adc
imul
ret
push
mov
sub
jno
repnz
mov
pop
or
xchg
dec
mov
dec
push
cmp
xchg
and
setbe
or
mov
mov
out
and
inc
sbb
pusha
lds
cmp
popf
adc
cwtl
movsl
rcl
xchg
icebp
xor
push
xchg
inc
mov
xchg
xlat
mov
mov
adc
dec
daa
bound
stos
or
call
mov
mov
sbb
imul
jns
nop
add
je
sub
icebp
jbe
mov
mov
icebp
add
stc
add
add
jne
sahf
pop
cmc
lahf
aad
push
add
cmp
pop
popf
or
lret
stos
sbb
test
jno
inc
sub
leave
cli
std
mov
and
icebp
sbb
cmp
loop
mov
lret
stc
fldt
mov
inc
dec
fstps
insl
pop
push
es
adc
push
leave
cmpsl
jp
mov
or
mov
popf
jb
jnp
leave
negl
sbb
notl
dec
push
cmp
push
sti
dec
push
or
movsl
mov
inc
xchg
push
xor
mov
pop
ror
xchg
negl
test
fwait
insl
push
aad
inc
jmp
movl
rcll
pop
daa
xchg
dec
add
ret
ss
cs
mulb
mov
and
andl
out
loop
lret
imul
add
mov
mov
repnz
ret
cld
push
fdivs
aad
push
jg
leave
or
hlt
push
sub
sbb
mov
cmc
dec
enter
pop
out
or
xchg
push
xchg
sti
adc
cli
lret
sahf
int3
mov
dec
fisubrl
push
ss
lds
fistpl
xchg
push
inc
shl
es
push
shll
push
dec
xchg
adc
test
pop
push
cmp
add
push
mov
and
mov
fisubrl
enter
mov
cmp
mov
outsb
sub
stc
cwtl
shlb
jae
pop
jge
fnsave
shl
add
clc
mov
pop
dec
addl
movsl
aaa
inc
adc
insb
mov
jae
pop
sub
cmp
mov
and
mov
cs
sahf
mov
push
shl
push
pop
pop
call
mov
and
and
fmull
inc
pop
add
repz
mov
cmp
addr16
adc
push
dec
sub
push
out
inc
mov
ss
xchg
das
sahf
jb
add
stc
std
sbb
inc
and
dec
push
jg
cmpl
xor
mov
or
jbe
add
jnp
mov
lods
cmp
pop
dec
dec
sbb
in
and
xor
ret
inc
adc
add
cmpsb
scas
jno
cmp
dec
loope
adc
push
and
fscale
aaa
pop
idivb
fsubl
cwtl
call
orl
out
lds
sub
push
cmpsb
dec
xchg
and
sbb
pop
clc
dec
ss
pop
dec
jbe
clc
in
inc
pop
mov
dec
inc
dec
jo
and
mov
sbb
in
xchg
xor
ret
add
jmp
jbe
mov
mov
pop
addr16
pop
pop
decl
mov
mov
and
aad
in
add
push
sbb
shll
xor
lods
cmp
xchg
dec
push
or
mov
push
out
mov
or
stc
mov
and
lahf
lods
dec
jmp
int
sbb
push
lret
in
es
fbld
inc
adc
xchg
aaa
cmp
mov
xor
push
mov
ss
out
in
inc
lods
into
ss
push
popa
cs
cmp
insb
push
xorb
adc
jbe
lods
out
pop
es
cld
pop
xchg
xor
ss
mov
push
pop
dec
push
dec
pop
in
fidivs
leave
xchg
dec
int3
adc
jno
jmp
shl
push
inc
jle
xchg
stos
dec
sti
scas
cmp
nop
push
cmc
aad
test
dec
mov
push
cli
data16
jae
add
xlat
jl
insl
fidivrs
sub
fcmovbe
mov
xchg
sbb
cmp
sbb
push
pop
jmp
push
pop
std
int3
pop
loop
sbb
nop
lret
mov
gs
push
inc
adc
dec
clc
dec
pop
mov
and
pop
repnz
jp
les
stos
push
shll
mov
ljmp
xchg
sub
xor
xor
jnp
mov
mov
sub
insb
sub
adc
or
orb
or
pop
sbb
in
add
in
sub
dec
std
and
xor
js
cmp
sub
xchg
dec
push
push
roll
adc
cli
into
loopne
fidivrs
stos
rcll
sub
add
xchg
out
and
and
lret
mov
fisubl
dec
cli
shlb
push
mov
sbb
mov
lods
push
repz
stos
push
sub
loop
push
jae
or
movsb
inc
adc
mov
dec
rcll
ja
mov
cmc
add
sub
mov
les
xchg
aad
add
dec
push
pop
pusha
scas
add
jge
dec
push
push
and
jae
int
and
negb
xlat
int
lcall
mov
sbb
movsb
xchg
mov
je
and
mov
int3
test
cmp
dec
int
pop
mov
scas
and
pop
shll
mov
xchg
dec
ficoml
cmp
pop
or
les
dec
fdivrp
push
rcl
lds
add
int3
movsl
int3
push
or
inc
int
lretw
adc
fwait
mov
dec
xorl
add
mov
mov
test
mov
ljmp
jb
imul
push
dec
fiadds
mov
shlb
movsb
push
subl
in
dec
insl
or
dec
dec
mov
pop
or
xor
or
cmp
stos
into
mov
jecxz
mov
add
sbb
mov
inc
add
adc
mov
stos
adc
in
xchg
and
enter
mov
xor
and
fmuls
js
leave
fs
data16
clc
sbb
jecxz
pop
push
fadds
es
sahf
jae
xor
loopne
clc
movsb
xchg
dec
sbb
pop
jg
pop
repnz
and
jge
js
ja
ljmp
pop
mov
repz
ret
fs
push
sahf
jb
int3
lret
xchg
jecxz
inc
adc
or
mov
sbb
stc
in
adc
and
hlt
in
scas
adc
in
push
mov
popf
mov
rclb
jnp
adcb
add
jmp
stos
jae
inc
ds
xchg
jecxz
xlat
rclb
xchg
adc
lods
loop
mov
outsl
cmc
lds
mul
inc
mov
mov
mov
dec
orl
test
sub
pop
fcmovbe
cmpsb
dec
dec
or
sbb
les
lock
mov
cmp
xorb
bsr
les
icebp
push
push
push
testl
aad
inc
dec
push
fadds
adc
xor
stos
clc
inc
dec
mov
dec
es
jge
rcrl
cmp
into
dec
adc
sbbb
push
and
mov
mov
dec
mov
test
popf
int3
xor
mov
lret
repnz
and
gs
adc
push
adc
cs
cwtl
sbb
mov
mov
call
push
cmpsl
and
adc
dec
cs
sub
dec
mov
and
mov
lret
data16
adc
pop
fucomip
int
out
dec
pop
cmpsl
xchg
dec
je
mov
push
inc
fildll
call
xor
cmp
in
sub
jg
add
and
dec
mov
mov
add
leave
pop
clc
rclb
iret
jno
push
outsl
pushf
pop
sbb
push
adcb
fstpl
out
lret
cli
pop
das
addb
jmp
fisttpll
ds
push
gs
inc
xlat
jg
bound
test
mov
inc
adc
dec
loope
movsb
push
pop
dec
sarb
mov
test
add
lret
pop
dec
adc
xor
or
xchg
sub
and
and
jg
sub
mov
inc
fbstp
divb
jb
pop
cmpsl
adc
sarb
shlb
xlat
mov
imul
test
imul
lds
clc
mov
push
mov
adc
out
mov
dec
add
loope
and
xchg
pushf
cmp
adc
hlt
fidivs
js
xorb
jb
jmp
mov
adc
ds
sti
push
and
xor
stos
xor
dec
dec
inc
mov
mov
lahf
out
inc
xchg
cltd
add
add
or
stc
pushf
mov
pop
or
pusha
mov
add
loope
pop
shl
daa
push
and
pop
mov
adc
mov
rclb
add
pop
fwait
cmpsb
mov
mov
in
sbbb
loop
das
repz
xchg
es
pop
out
cs
cmpsb
pop
or
stos
insl
ja
js
lea
push
pop
ret
mov
lcall
jnp
pop
dec
aad
or
add
arpl
arpl
pop
dec
icebp
ss
imul
hlt
xchg
adc
ret
push
rcrl
pop
shr
add
cwtl
fcomps
cli
not
sbb
imul
mov
push
push
cld
test
pop
mov
sbbl
xchg
sub
add
arpl
add
pop
mov
jb
jne
dec
inc
sbb
cmp
loope
call
lret
adc
in
add
xor
mov
xor
xor
adc
stos
jmp
into
adc
push
cmp
or
jb
loop
out
fadds
xor
sub
shrl
sub
pushf
xor
push
inc
mov
push
cli
stc
or
movsl
xchg
sbb
mov
inc
cwtl
jne
pop
adc
sub
or
lock
mov
xor
push
jno
inc
int
addb
adc
mov
movsl
mov
cmp
dec
fimull
ss
mov
stos
bound
shr
mov
add
mov
push
je
push
ret
pop
inc
xchg
and
stc
and
in
adc
popf
adc
sbb
adc
xor
and
ja
rorl
dec
add
fbstp
sbb
jl
out
and
and
jbe
sub
dec
mov
inc
dec
dec
dec
adc
add
sub
flds
test
fisttps
xor
iret
ja
in
ret
xor
mov
sub
adc
ret
push
daa
ret
push
mov
and
pop
push
fcoms
imul
pop
mov
sti
jae
mov
jp
lods
add
sub
xor
and
push
cmp
pop
push
cmc
jmp
roll
loope
jecxz
mov
ljmp
setbe
xor
sub
pop
pop
push
fsubrs
cmp
push
sahf
inc
pop
es
lds
mov
popa
push
scas
out
xor
in
xchg
pop
repnz
test
dec
lods
dec
stc
rcrb
cwtl
cmp
rcrl
pop
sarb
cmc
test
dec
mov
dec
mov
popa
test
jb
das
mov
adc
mov
inc
movzbl
adc
inc
xchg
inc
jno
test
and
es
push
xor
icebp
sub
mov
jno
jmp
sub
dec
pop
xor
js
jbe
lock
sbb
dec
imul
jno
sahf
xorb
xlat
mov
cmp
mov
hlt
cmp
jae
or
adc
mov
xchg
in
jle
mov
push
push
sub
fcom
movb
in
jnp
or
les
sub
mov
and
mov
jge
push
dec
hlt
xchg
pusha
outsl
sbb
dec
and
sbb
aam
cmp
inc
push
cwtl
stos
and
popf
inc
xchg
mov
xor
mov
xor
test
and
xchg
mov
leave
push
leave
or
out
decb
pop
and
xorb
add
cmc
mov
xor
add
cs
in
dec
mov
push
mov
jg
imul
loopne
cmp
testb
dec
in
push
push
push
and
in
or
mov
push
pop
enter
in
pop
je
pop
lcall
sbb
leave
adc
mov
inc
jbe
gs
cmc
imul
dec
push
mov
add
sti
call
add
data16
add
jnp
loop
int
testl
aad
dec
push
in
mov
test
push
jmp
fsubrs
fucomip
dec
es
cld
nop
mov
fwait
and
adc
or
adc
rcrl
sahf
pop
lahf
stc
and
shll
aad
andb
sbb
nop
mov
add
mov
and
in
in
cmpsl
pop
cmp
icebp
xchg
xor
seta
in
sbb
lds
pop
inc
scas
xor
add
out
sarl
adc
enter
aam
ljmp
and
jae
inc
xor
sti
sub
pop
dec
dec
cmp
mov
add
insb
in
pop
stc
cmpsl
pop
lret
leave
repnz
adc
jle
decl
adc
sbb
lret
adc
push
xchg
ja
fwait
lea
or
cmp
shll
mov
dec
movsl
adc
cld
pop
lods
cmc
test
push
xchg
lds
ljmp
orb
jg
cmp
sbb
push
rorb
bound
insb
lods
pop
notl
add
xchg
lds
and
sbb
pop
fstl
jae
jmp
sbb
jnp
aaa
xor
mov
das
push
mov
lret
cmpsb
pusha
in
push
hlt
mov
lods
adc
fisubrs
jb
in
jae
movsl
adc
jecxz
and
pushf
lea
lods
mov
in
das
mov
cwtl
mov
dec
jl
fsubl
adcl
cwtl
inc
sub
inc
jbe
push
adc
jno
icebp
push
push
js
adc
lahf
jae
popa
xlat
dec
imul
sbb
dec
sub
sbb
fwait
xchg
mov
mov
mov
mov
int3
xchg
pop
fwait
in
cwtl
cmp
imul
ljmp
leave
xchg
or
cwtl
xlat
xchg
pop
pop
xchg
xor
sbb
xchg
inc
lods
jbe
sub
cmp
jge
mov
lods
mov
aam
inc
stos
cwtl
fmul
push
or
jge
mov
mov
dec
jmp
pop
and
dec
and
sub
xchg
xchg
shrb
pop
add
jne
ja
repnz
cltd
mov
sub
push
add
jg
fdivrs
std
fsub
js
or
pop
ljmp
mov
cmp
dec
or
clc
repz
jl
sarw
jmp
arpl
push
mov
aad
lea
and
push
push
xor
ds
fcmovne
jp
repnz
insb
mov
sbb
pop
adc
js
ret
mov
lcall
inc
inc
repnz
imulb
push
adc
out
xchg
and
dec
mov
push
adc
and
data16
ret
adc
sarl
inc
enter
or
fadd
repz
xchg
mov
clc
inc
cmp
insb
pop
xchg
idivl
lcall
add
and
out
lods
push
pop
cmp
xor
stos
stos
or
sub
dec
jmp
mov
mov
sbb
cltd
mov
push
cld
mov
adc
push
dec
mov
xchg
add
nopl
xor
out
push
out
sub
in
push
fmuls
lods
pop
pop
arpl
scas
scas
add
add
mov
add
xor
xlat
roll
pop
test
pop
in
fwait
jmp
rorl
pop
and
jb
pop
cmp
enter
jle
mov
les
lods
dec
sub
pop
lds
jge
inc
ret
inc
outsb
out
cmp
jb
sub
sub
sahf
loop
stos
mov
add
mov
aaa
sub
xchg
and
test
in
push
or
push
stc
pop
sub
sti
adc
aaa
ds
inc
inc
lea
sbb
sub
push
xchg
and
jnp
jae
cmp
mov
flds
ret
xchg
dec
loopne
std
mov
or
dec
xchg
or
mov
add
fwait
out
push
sbb
jae
cmp
dec
jae
push
data16
ficoms
push
fidivs
dec
js
mov
jno
dec
jge
adc
and
push
mov
sbb
pushf
cli
push
inc
in
sbb
xchg
arpl
pop
push
lret
inc
popa
stc
dec
nop
pushf
or
adc
int
pop
and
jnp
lret
adc
iret
sub
aad
stc
pop
cmp
sub
push
pusha
dec
jp
cmc
ja
or
mov
shl
mov
mov
mov
cmp
xchg
dec
or
inc
mov
mov
pusha
or
cmpsb
push
inc
push
mov
or
fmuls
dec
add
stc
jae
mov
arpl
adc
mov
sbb
stc
test
sbb
cli
stc
cmp
out
dec
and
cmp
pop
and
fists
xor
shll
es
adc
loope
sub
jecxz
pop
sbb
xchg
jge
push
test
jo
and
or
pop
testb
test
dec
lcall
test
sub
mov
nop
bound
xchg
dec
pop
and
scas
jb
jg
xor
push
cmc
xchg
cmp
repnz
daa
outsb
adc
adc
fucomi
mov
xchg
mov
push
test
mov
daa
iret
addb
jmp
idivb
mov
mov
xchg
in
mov
imul
push
popa
sarl
mov
add
jecxz
iret
ret
mov
pop
inc
push
push
fsub
test
adc
add
ror
aam
jg
or
xor
xchg
cwtl
push
xchg
std
sbb
xchg
add
fs
in
loopne
or
loop
test
dec
sbb
mov
mov
std
fmuls
or
lahf
push
imul
add
pop
pop
cmp
xlat
cmp
fmuls
dec
mov
inc
rclb
cmc
dec
test
bound
int
mov
rcl
lods
push
mov
shr
cmp
lods
push
in
ret
rclb
xor
pushf
lds
inc
fstpl
or
lret
mov
inc
add
aam
fs
pop
xchg
sub
sbb
cmpsb
dec
or
data16
clc
push
push
shll
data16
mov
roll
or
mov
or
lea
mov
inc
cwtl
dec
dec
adc
jnp
mov
mov
and
jmp
test
xor
test
fidivrs
inc
popf
fwait
mov
mov
rcll
and
cmpsb
inc
push
mov
or
adc
pop
pop
lahf
les
lcall
testb
xor
jo
enter
cmc
and
rolb
push
dec
or
xchg
das
cld
filds
mov
outsl
sub
cmp
cli
es
and
xchg
cmpsl
inc
rcll
push
and
mov
mov
aaa
pop
fidivrs
pop
lret
loope
xchg
and
loop
xchg
mov
addr16
or
aam
fidivl
icebp
dec
in
lret
cmp
xchg
insb
adc
mov
iret
sbb
pop
rcrl
shlb
aas
movb
sub
add
mov
xor
pop
pop
mov
orl
dec
ja
jns
in
push
adc
ret
or
inc
xor
adc
add
mov
mov
mov
mov
lcall
adc
cmp
and
add
out
inc
sub
cmc
test
rol
ror
stos
mov
imul
mov
inc
stos
imul
lcall
in
or
sub
jb
add
ret
hlt
fcoml
xchg
mov
outsb
mov
dec
push
mov
sub
jg
ret
push
inc
or
inc
enter
cmp
sub
xchg
cmc
xchg
push
inc
push
lret
or
xchg
jno
push
dec
or
mov
sbb
pop
fwait
pop
cmp
mov
push
std
mov
fadds
mov
pop
sti
mov
mov
in
add
mov
cmp
or
cmpsb
lds
pop
inc
jecxz
inc
push
lcall
dec
js
jl
aam
add
scas
cmp
enter
fdivs
dec
std
loope
mov
lahf
xchg
sbb
test
int3
jecxz
es
adc
cli
leave
pop
mov
add
mov
js
xchg
mov
insl
xor
mov
adcb
lcall
ss
clc
mov
jmp
or
mov
cmp
xchg
xchg
sub
pop
fs
pop
add
dec
mov
cli
adc
xchg
dec
lods
aaa
adc
xchg
inc
cmp
adc
push
pop
mov
lret
fistl
aam
ror
adc
stos
daa
cmp
jbe
and
or
cmp
cmp
pushf
sbb
call
cmp
push
test
inc
fsub
frstor
shrb
sbb
cwtl
push
push
loopne
popa
mov
sub
ret
mov
pop
and
test
add
dec
shlb
xlat
call
dec
push
popa
icebp
scas
int
and
push
cwtl
ret
cmp
add
dec
and
pusha
push
jecxz
and
mov
pop
xchg
cwtl
imul
inc
xchg
scas
sub
out
lods
jp
and
mov
loope
mov
into
gs
or
pop
or
iret
and
jae
fisttps
xlat
stc
bound
loope
repz
and
adc
outsb
mov
mov
mov
xor
mov
sbb
ljmp
sbb
dec
pop
fldl
dec
scas
fnsave
xchg
test
xchg
adc
push
pmullw
cwtl
mov
pusha
or
pop
sub
shlb
data16
int3
aam
stos
adc
lahf
jb
dec
push
fiadds
sti
add
cmp
add
popf
dec
pop
push
int3
aaa
push
sbb
insb
sbb
in
and
stos
lds
xchg
mov
ja
movl
cmp
xor
gs
jecxz
into
dec
cld
mov
inc
adc
and
ret
into
lcall
sbb
mov
add
fisubl
fs
mov
mov
or
push
jne
sub
roll
or
rcr
dec
popf
inc
add
sbb
stos
es
xchg
ficomps
jb
jecxz
ds
fistpll
pusha
dec
jo
mov
jg
xchg
out
popf
arpl
jno
mov
sub
xchg
in
inc
ret
pop
aad
jmp
jae
xchg
ljmp
in
sub
mov
jns
imul
or
xor
icebp
add
insb
mov
adc
mov
cmp
pop
aas
data16
push
xchg
lock
inc
adc
xchg
es
push
push
rcr
movsb
idivb
test
inc
sub
mov
pop
pop
in
inc
mov
std
clc
cmp
or
sub
inc
push
mov
xor
jmp
pop
push
std
pop
cwtl
in
jb
adc
inc
and
loope
xor
adc
std
ror
js
stc
mov
stc
popa
mov
leave
mov
sti
roll
dec
xor
add
add
pusha
add
and
mov
insl
xlat
cmpsb
xor
mov
or
addb
xchg
arpl
shr
addr16
pop
notl
and
mov
rcll
inc
inc
jo
xor
push
xchg
mov
pop
pop
rcrl
gs
push
xchg
push
nop
and
xchg
pop
pop
mov
lds
xchg
notl
or
xchg
mov
cmp
testb
mov
js
mov
pop
jo
add
sbb
and
js
test
je
push
ds
nop
cmpsb
dec
pop
je
sbbb
into
ror
or
jno
dec
sub
cltd
int
addr16
loope
inc
aas
mov
shll
das
vpmulhuw
in
scas
hlt
mov
je
rcrb
cmp
lahf
sbb
pop
push
lahf
movsl
fbstp
adc
mov
jb
xor
jge
inc
dec
adc
cltd
enter
fdivp
cli
in
mov
xchg
add
fs
int
pop
in
stos
fst
ror
or
nop
sbb
sbb
cmpsl
mov
fs
dec
dec
push
mov
test
insl
mov
sub
cmpsb
push
dec
inc
pushf
add
out
jbe
shlb
popa
pusha
pop
xchg
mov
arpl
cmc
adc
dec
jnp
pop
sahf
out
xchg
mov
imul
dec
aad
std
add
test
movsl
in
adc
in
das
sbb
outsl
into
adc
xchg
adc
xchg
mov
jecxz
cmpsb
xlat
ss
mov
sbb
jge
roll
adc
iret
lcall
idiv
jmp
addr16
push
outsb
daa
in
pop
pop
aas
adc
jle
inc
push
or
adc
pxor
mov
lahf
xor
sub
sbb
sub
cmc
jb
and
cmpsl
lahf
mov
push
push
int
mov
or
lods
push
gs
jecxz
cltd
push
dec
xor
andl
mov
xchg
lcall
mov
xchg
sub
mov
test
pop
and
jmp
jns
sub
fsubr
mov
mov
lahf
xor
xchg
dec
lds
pop
dec
jg
in
xchg
inc
mov
loope
jge
mov
lcall
push
push
rorb
lret
add
xchg
adc
ficoms
fwait
lods
dec
addl
and
and
adc
or
adc
push
sbb
icebp
pop
push
rcll
cmp
data16
xor
mov
push
rcll
sub
and
ja
mov
in
les
push
fnsave
adc
xor
add
shll
lods
je
or
shlb
gs
dec
inc
add
lds
imul
bswap
xor
stc
jb
mov
frstor
sbb
gs
movsb
daa
inc
sub
mov
dec
lahf
or
adc
inc
push
shrb
add
aam
mov
add
push
aas
adc
cmp
ja
dec
sbb
pop
daa
mov
lods
mov
out
xchg
push
imul
sbb
jge
or
or
xchg
pop
rcrl
sahf
cmc
movsl
scas
adc
or
or
pop
add
add
add
js
dec
out
jecxz
fwait
gs
pop
and
jp
dec
popa
cmpsl
jae
push
xor
jno
in
and
std
and
rcrb
fsubs
fsubr
and
bnd
xchg
mov
dec
js
dec
xchg
adc
adc
mov
mov
cmp
cmpsb
aad
cmp
aaa
add
test
stos
dec
lea
mov
int
and
ret
sbb
mov
or
add
fmuls
pop
adc
lret
or
sub
sbb
lods
imul
dec
das
or
leave
test
pop
pusha
or
and
mov
jle
jae
incb
mov
clc
or
repnz
xor
fstpt
or
sub
push
fistpl
pusha
xlat
test
push
in
mov
or
adc
pop
lahf
pop
aas
sbb
pusha
pop
inc
push
scas
jl
mov
aam
sub
dec
data16
outsb
test
jmp
jnp
fs
mov
cmp
mov
mov
inc
dec
xchg
jb
dec
xor
mov
pop
pop
movsl
xchg
gs
in
rorb
push
inc
ds
gs
xor
add
sbb
aad
push
push
xor
rcrl
rclb
pop
and
aaa
sahf
xlat
jae
jge
push
cmc
repz
mov
out
xchg
fcomps
rcrl
push
dec
ljmp
icebp
shlb
mov
sti
cmpsb
outsb
sub
and
jmp
testb
shrl
into
fadds
aad
ds
cmc
jno
pop
mov
sub
mov
stos
jmp
mov
and
fstps
dec
fcoml
in
lock
dec
cmova
aaa
cmp
pop
dec
lret
jmp
arpl
lods
outsb
dec
fsubl
mov
pop
ss
fwait
imul
push
mov
sub
mov
gs
icebp
loope
dec
adc
daa
jb
insb
adc
mov
adc
dec
mov
popa
iret
pop
xor
push
insl
or
popa
test
add
pop
jmp
mov
pop
dec
add
loope
ljmp
ljmp
lods
mov
jbe
gs
into
xchg
divb
sbb
pop
mov
lahf
adc
mov
push
les
and
pop
dec
xor
ret
inc
mov
jnp
inc
cmpsb
repz
push
int
inc
int3
dec
cmpl
xchg
notb
inc
nop
icebp
nop
adc
fidivrl
and
stc
pop
into
js
jns
jbe
jns
jb
adc
jnp
enter
lds
pop
jl
push
adc
xor
fldl
clc
mov
mov
mov
mov
inc
aad
repz
or
mov
add
dec
push
inc
idivb
mov
and
out
orl
push
popa
inc
lret
aaa
push
test
fiaddl
bound
push
test
aaa
fistpll
data16
pushf
jns
dec
movsl
cltd
or
int3
mov
xchg
push
adc
add
and
mov
loope
cmp
mov
adc
push
hlt
daa
loope
jb
pop
leave
jnp
pop
xchg
dec
add
enter
xchg
jmp
enter
rcl
xor
cwtl
xor
mov
cmp
dec
mov
mov
jno
cmp
push
enter
push
or
icebp
and
test
icebp
test
shll
dec
movsl
adc
and
adc
fs
in
loope
mov
jle
push
int
xchg
jle
mov
hlt
sbb
icebp
sub
cld
mov
jne
sbb
and
xchg
and
movsl
push
xchg
lds
sbb
gs
roll
jns
add
fnsave
lds
xchg
outsb
push
dec
or
push
push
pop
push
inc
push
test
addb
icebp
dec
test
cld
or
call
cmc
outsl
push
int3
aam
fisttpl
or
xor
mov
addr16
jmp
mov
int
cli
mov
or
inc
and
pop
notl
push
sti
cmp
movsl
lods
arpl
leave
push
mov
insl
adc
loop
fisubrs
mov
adc
test
mov
jb
pop
dec
aad
pop
repnz
sti
leave
call
movsl
jbe
mov
adc
imul
imul
rdtsc
pop
leave
jae
pop
leave
dec
dec
xor
insb
addr16
jmp
mov
push
mov
inc
or
jecxz
out
pop
movsb
cli
testb
sbb
lret
cmp
push
dec
sub
mov
lret
add
fadds
mov
call
stos
mov
in
call
fsubs
int
jbe
jo
xor
push
dec
fcoms
lea
inc
popa
mov
imul
hlt
imul
push
push
jno
or
sub
mov
lea
popa
cltd
adc
mov
and
rorl
push
or
mov
inc
lret
out
and
xchg
push
add
adc
dec
aad
not
daa
in
adc
adc
xchg
in
dec
enter
adc
xchg
mov
adc
dec
mov
mov
aad
fwait
outsb
aas
push
push
mov
mov
addr16
xchg
cmp
dec
pop
movsl
sarl
push
mov
rcl
nop
push
ss
pop
push
push
jle
movsl
add
dec
into
adc
shlb
into
mov
push
cltd
subb
movsl
cmp
xor
data16
in
mov
inc
or
call
call
loop
dec
add
sub
sarb
inc
out
cmpsl
mov
jae
mov
out
jge
mov
dec
mov
and
mov
sbb
push
addr16
pop
clc
test
icebp
push
mov
ja
mov
pop
jge
mov
push
jno
mov
js
sub
jecxz
stos
mov
jl
sbbl
mov
sub
pop
push
std
out
mov
pop
loop
and
in
xchg
outsl
push
mov
gs
jae
fcmovbe
dec
mov
dec
jg
cwtl
stos
and
rorl
cmp
lds
xchg
out
in
xchg
stos
cmp
sub
aas
addr16
ret
shrl
ja
pushf
adc
dec
cmpl
inc
cmpsl
jnp
fsubrs
rcrb
push
gs
mov
push
aad
les
insb
icebp
or
cmp
jno
loope
movsl
push
in
xchg
push
and
rcll
mov
and
shr
movsl
lods
dec
and
loopne
shr
xor
aad
mov
daa
dec
out
ret
xchg
mov
js
mov
cmp
cmc
xor
lods
lods
int
scas
lds
rcrl
mov
sbb
rorb
mov
leave
pop
mov
std
mov
xor
xchg
test
clc
dec
gs
mov
jne
popa
or
push
loop
sub
stc
sub
mov
inc
sbb
lea
stos
sbb
test
adc
xchg
mov
mov
xchg
adc
shr
xchg
sbb
xor
jb
xor
stos
fsub
adc
lds
push
js
push
cmpsb
adc
add
and
sub
mov
ljmp
sbb
mov
imul
jg
test
xlat
fcmovu
orb
bound
adc
xchg
imul
in
rcl
sbb
stos
dec
push
iret
mov
mov
pop
or
add
adc
add
lahf
jecxz
data16
outsl
add
jle
in
imul
cmc
insb
les
inc
mov
jo
lahf
aad
pop
pop
mov
mov
int
lahf
fwait
lahf
xchg
scas
lods
lahf
xchg
enter
icebp
inc
xorl
shl
stos
and
or
add
test
mov
pop
cmp
lea
jne
cmc
mov
out
sub
xlat
ds
adc
cmp
popa
ds
mov
pushf
ljmp
mov
cmpsb
push
xchg
mov
test
aad
scas
ja
dec
lods
fsubrp
adc
int3
mov
jmp
js
fsubrs
mov
repnz
es
push
mov
xchg
mov
add
and
cld
dec
xlat
xor
mov
inc
push
mov
jecxz
mov
ja
loop
in
inc
mov
subb
jno
sbb
jo
out
mov
xchg
cmpl
aam
xchg
jb
xchg
mov
add
bound
js
add
push
loopne
test
add
je
aam
jne
and
push
test
gs
daa
push
jmp
and
sti
sub
fidivrs
ss
jl
cmp
lret
jecxz
test
incb
orb
jnp
sbb
mov
out
sub
les
jmp
mov
dec
push
test
out
fdivrl
mov
in
imulb
cltd
xchg
mov
shll
jg
mov
pop
xchg
pop
movsl
jae
stos
mov
add
cltd
dec
popl
rorl
sub
push
or
out
idivl
xchg
jb
add
add
xor
xor
xchg
rcrl
push
sub
push
in
inc
cmp
test
pop
outsl
pop
lock
sub
ds
push
lds
test
push
not
xchg
aad
push
adc
push
mov
ret
filds
dec
mov
jl
cmp
xchg
jl
fisttps
imul
aaa
xor
mov
pop
xchg
xor
dec
adc
add
jl
push
sti
bound
ss
int
ja
cmc
cmpb
xor
fs
movsb
jnp
xchg
scas
push
and
lds
adc
cmp
mov
cmpsb
test
xlat
rcr
push
in
ret
mov
fdiv
mov
lods
rcr
jo
xchg
aaa
ret
inc
aaa
inc
cltd
mov
lods
xor
mov
cmp
and
dec
in
add
pop
dec
add
and
imul
xor
dec
es
mov
jecxz
int
and
jge
fwait
push
inc
mov
jp
ret
push
mov
adc
adc
in
xor
push
filds
mov
jg
sbb
scas
lcall
fs
test
mov
fidivrl
jl
imul
mov
and
push
ret
ljmp
shrb
mov
dec
dec
jnp
fisubl
aad
negb
flds
mov
sbb
mov
or
mov
popf
xor
inc
sbb
mov
push
test
sahf
inc
fsubs
sbb
mov
ljmp
and
into
dec
mov
inc
sub
mov
lock
jnp
dec
gs
pushf
aam
rclb
insb
lods
pop
mov
jns
push
js
fcomps
icebp
pop
dec
cs
mov
mov
fdivs
sbb
push
insb
in
ja
push
or
mov
testb
jb
dec
mov
xchg
xor
adc
fwait
jnp
into
lcall
mov
or
adc
add
mov
jno
inc
dec
sub
lea
add
leave
push
dec
xchg
lcall
insb
bound
lods
inc
xorl
sti
popf
xchg
jmp
push
gs
sub
ret
enter
mov
push
outsb
dec
mov
mov
inc
adc
lcall
daa
adc
addr16
dec
pusha
fistl
std
fistl
xchg
scas
sub
mov
jl
ljmp
xlat
cmpsl
push
cltd
xor
push
mov
faddl
adc
sub
mov
dec
dec
add
cmpsb
mov
pushl
xchg
ret
loop
jg
cmp
push
push
hlt
sub
jmp
cli
sub
repnz
sub
call
dec
xor
xchg
push
xchg
test
movsl
xchg
sbb
adc
lret
bound
repz
test
xlat
dec
cmp
jg
lret
adc
je
clc
adc
push
ret
les
pop
xor
stc
pop
sub
and
imul
loope
aas
dec
scas
mov
roll
negb
std
in
and
insb
jnp
cmpsb
stos
ds
mov
push
pop
stc
fucomip
xchg
lds
and
ret
and
adc
ret
loopne
xorl
adc
outsl
jl
push
loop
fisubrs
pushf
mov
push
add
mov
xor
dec
or
lods
ds
loope
imul
arpl
sbb
inc
jecxz
adc
fisubs
xchg
imul
mov
out
mov
icebp
addr16
out
add
arpl
lds
push
xchg
jns
sbb
pmaxub
dec
sbb
repz
rcrl
push
cmovp
repz
jbe
stos
int3
das
xor
es
imul
push
pushf
adc
push
inc
sbb
je
adc
push
sbb
dec
jbe
cmp
pop
cmp
movsl
xchg
movsl
sub
sbb
cli
or
push
in
dec
out
aaa
pop
fldcw
mov
jae
or
fsubrs
mov
fidivl
aam
bound
addr16
dec
icebp
mov
xor
xchg
adc
xchg
sbb
pop
and
pop
xchg
and
mov
jg
jno
rol
push
inc
cli
ret
add
sbb
stc
dec
data16
and
ret
divl
mov
cmp
cmpsb
das
pop
inc
int3
fisttps
push
adc
inc
push
ret
mov
es
or
ret
cmp
movsl
jmp
popa
mov
fsubl
mov
mov
push
out
adc
shlb
push
jg
dec
imul
adc
das
ret
xchg
sub
pop
dec
dec
add
loop
mulb
or
cmp
push
and
js
xor
out
in
inc
xchg
sub
out
cmc
lock
lds
cmp
and
pop
outsl
mov
fadds
arpl
in
pop
push
dec
js
loope
cmp
sbb
shll
jnp
test
rorl
popf
lods
out
ficoms
rol
pop
mov
out
out
jae
nop
pusha
inc
cmp
andl
and
mov
cmp
jno
xor
mov
pop
cmp
es
mov
adc
test
shr
pop
lds
mov
mov
xchg
sbb
and
cltd
aaa
lahf
inc
mov
out
jbe
addr16
add
popa
dec
insl
xchg
mov
mov
xorl
mov
gs
mov
aad
pop
sbb
out
xorw
mov
jne
lcall
push
cmp
addr16
inc
repz
push
into
push
fcoms
je
bnd
ret
add
adc
mov
mov
and
xor
sahf
mov
mov
mov
iret
fsubs
adc
fs
lahf
adc
int3
call
mov
shrb
xchg
push
add
mov
cmpsl
std
hlt
leave
xor
xor
jb
xchg
sahf
aaa
jae
jno
mov
lea
lods
es
fidivs
sbb
push
pop
or
sub
je
loop
sti
mov
dec
xor
scas
scas
jle
loope
std
push
pushf
and
pushf
push
xchg
jmp
inc
cli
push
push
or
adc
dec
call
dec
test
fbld
sub
jg
shll
xstore-rng
cmpsl
test
sub
lret
and
pop
push
adc
call
push
adc
popf
push
mov
pop
jge
adc
adc
imul
dec
jg
out
sbb
jp
lods
lcall
repnz
pop
loop
gs
cmc
jno
xor
cmpsb
mov
add
xor
jp
and
cli
outsl
dec
pop
adc
sub
mov
fs
fbstp
mov
lret
dec
loope
mull
jge
mov
in
das
add
in
xor
dec
inc
add
or
dec
ja
xor
subb
mov
and
subb
mov
stos
sub
repz
xchg
in
jmp
rorb
in
addb
dec
jmp
lret
push
push
pop
inc
aas
loop
fiaddl
mov
inc
idiv
ja
shrl
ret
add
adc
pop
addb
notb
cmc
insb
out
loopne
mov
adc
or
xchg
and
cmpsl
fdivrs
sub
test
jne
or
inc
push
jbe
sarl
jae
inc
mov
bnd
enter
sbbb
fadd
jbe
jno
lret
lods
push
stos
rcl
inc
das
scas
ror
cmp
dec
push
dec
ret
inc
add
adc
jns
nop
jg
mov
pop
mov
out
xor
cli
cltd
or
pop
xchg
jb
fcomip
outsl
dec
int
pop
jbe
ror
pop
arpl
dec
pop
xor
es
adc
int
ja
pop
repz
frstor
lea
jbe
cmp
outsb
cmpsb
mov
test
push
adc
mov
or
call
pop
out
int
push
adc
test
add
data16
push
mov
ss
pop
and
push
xorb
adc
test
mov
pop
sbb
adc
cmpsb
cmpsb
inc
mov
imul
pop
cmp
lds
inc
ds
xchg
in
shlb
inc
or
iret
push
ficoml
frstor
mov
add
sti
xchg
push
aad
xlat
adc
xchg
and
xchg
push
shl
push
pop
movsl
stos
addr16
loop
imul
jnp
iret
std
popf
sub
jo
and
sub
xorb
call
arpl
xlat
sbb
loopw
test
xchg
test
pop
lds
out
arpl
lea
xchg
adc
and
icebp
or
loop
dec
xchg
cwtl
aam
sub
jecxz
test
inc
mov
inc
setg
jl
jno
stc
inc
notl
fstpt
sub
cltd
add
inc
fsubrl
inc
sbb
or
in
jl
ljmp
sbb
call
jp
fnsave
sarl
pop
stc
out
add
shll
dec
dec
cli
sub
ja
dec
testb
mov
dec
loopne
pusha
cmp
in
sbb
mov
adc
mov
lahf
icebp
mov
in
movsl
shlb
mov
testb
aad
test
jl
or
adc
ljmp
pop
xchg
scas
jns
sub
fisubs
mov
mov
or
outsl
inc
out
adc
leave
stos
inc
fmuls
mov
xchg
lret
pop
pusha
push
push
cmpsb
sbb
sbb
add
sub
stos
xor
mov
in
sub
imul
ret
inc
mov
outsb
xchg
cli
lods
repz
push
pop
bound
cmc
popa
sbbl
sub
jb
std
lock
stos
adc
scas
mov
add
pop
dec
mov
stos
mov
into
fnstenv
xchg
push
mov
pop
mov
inc
adc
popf
out
cmpl
neg
jne
outsl
out
sub
pop
sti
dec
scas
jge
push
mov
jg
fldcw
dec
fsubs
add
std
scas
int3
and
inc
scas
jae
adc
add
pusha
pop
lods
push
fcomp
dec
leave
xor
rcrb
out
dec
mov
and
sub
mov
or
cmp
jl
test
jae
cmc
shrb
xchg
xor
jne
pop
repnz
scas
mov
test
cmp
push
insb
mov
incl
add
sub
aas
jae
xchg
fmuls
stc
es
aam
in
cs
lock
cwtl
push
mov
pop
stos
loop
inc
jg
xchg
and
push
push
sub
pop
fadds
lea
aas
sub
inc
dec
call
je
cmpsb
adc
cmp
adc
pop
leave
orb
imul
lret
lret
xor
ja
shll
testb
pop
int
jne
xor
pop
mov
inc
iret
adc
shl
fiadds
mov
jno
inc
idiv
jno
idivb
mov
stc
lcall
fnstsw
mov
dec
push
push
xchg
mov
aas
into
sti
push
xor
mov
pop
pop
xor
mov
int
pop
inc
cmp
jno
sub
cmp
fstl
xchg
and
mov
inc
pop
cmp
mov
loopne
and
mov
jmp
ror
lcall
mov
sahf
xchg
push
push
pop
std
scas
xchg
adc
sbb
inc
jecxz
add
sub
push
xchg
cli
cs
mov
fnstcw
fwait
xor
sti
inc
loopne
jo
adc
mov
mov
and
push
movsl
aas
dec
rdmsr
or
pop
pop
jae
xchg
mov
loope
repnz
notb
icebp
mov
imul
imul
jb
popa
adc
aaa
push
pop
ss
pop
sbb
push
scas
dec
bound
pop
push
or
div
adc
jg
push
and
xchg
test
sbb
outsl
mov
add
jo
xchg
fwait
push
add
jl
test
dec
in
xcrypt-cbc
cmpsl
shl
repnz
push
cmp
sub
jno
pop
int3
shlb
cmp
mov
mov
jno
sbb
inc
cmp
outsl
iret
mov
push
xchg
pop
es
push
repnz
std
mov
lret
addr16
adc
mov
fisubrl
xchg
repnz
and
bound
mov
jno
lahf
adc
aad
cltd
cmp
push
fidivs
repz
lahf
dec
dec
adc
dec
adc
add
jb
loopne
ljmp
push
loope
dec
and
or
jae
xchg
and
adc
pusha
pop
push
jno
mov
mov
orl
push
frstor
mov
jg
loopne
pusha
lea
loopne
cmpsb
loopne
adc
outsl
mov
jb
mov
imul
push
aas
lret
es
dec
pop
mov
xor
mov
or
fstl
orl
cmp
mov
mov
int3
cmp
dec
add
ret
int3
adc
fsub
pop
int
adc
xlat
pop
divb
loop
scas
xchg
xor
divb
fs
dec
cmc
and
or
lds
sub
or
cmp
jns
xchg
in
mov
movsl
lods
fildll
or
push
inc
aad
sbb
jge
push
test
dec
cmp
cmp
xor
clc
pop
xchg
mov
push
push
push
fimull
test
xor
mov
push
xchg
bound
icebp
testl
test
push
push
aaa
in
cmp
push
adc
adcb
push
stos
aad
dec
in
iret
add
mov
data16
xchg
ret
call
cmp
sbb
out
ss
xor
mov
popa
xchg
imul
mov
movsb
add
mov
add
xchg
xchg
std
push
loope
stos
and
xchg
repz
nop
fst
fdivr
std
dec
sti
mov
or
in
fucom
dec
xchg
mov
imul
in
jmp
xchg
push
jecxz
pop
jae
and
xor
outsl
adc
das
sub
jmp
test
pop
bnd
mov
repnz
ss
cld
mov
hlt
in
adc
jb
push
fadds
push
push
mov
adc
loope
repz
pusha
add
mov
xchg
loopne
pop
mov
dec
jmp
pop
cmpsb
sub
push
lock
call
sbb
lods
xchg
inc
jno
cmc
xorb
arpl
push
into
pop
inc
push
jb
lret
push
shll
inc
xchg
cmc
adc
add
fs
mov
dec
inc
jae
ds
dec
cmpsl
mov
xchg
pop
jle
mov
mov
int
jno
jae
aaa
adc
adc
push
pop
xchg
xchg
popa
aam
scas
xchg
and
repnz
mov
bound
cmpsb
icebp
insl
and
loopne
mov
outsl
mov
stc
popa
and
pop
lods
stos
xchg
lea
push
add
dec
lods
lds
mov
lds
adc
aas
sub
xchg
mov
adc
pop
rorb
dec
mov
int
bound
mov
ja
lea
xchg
dec
mov
xchg
cmc
cs
fs
mov
movsl
xchg
mov
in
jl
ret
cmp
bound
imull
xchg
and
lock
fcmovnbe
ss
jo
sbb
cmc
and
in
out
lahf
or
jb
pop
popa
push
std
int
fldcw
shrl
ljmp
ficomps
sahf
adcl
jecxz
push
pusha
das
rorb
mov
pop
xchg
push
mov
cwtl
jmp
ret
lahf
push
outsb
add
subl
xor
mov
lods
movsl
or
fcmovnbe
dec
aam
fs
std
dec
sbb
cmpsb
and
nop
cmp
popa
sbb
lret
or
and
cwtl
jmp
imull
in
js
adc
dec
pop
xchg
enter
adc
mov
xor
pushl
fs
stos
dec
xchg
mov
dec
and
mov
dec
mov
or
mov
aas
and
cmp
xchg
sub
fisubrl
push
sub
sbb
test
aad
jne
repz
cwtl
sti
adc
push
push
jb
lahf
cmp
jnp
adc
outsb
mov
or
adc
rorl
pop
loopne
xchg
and
sub
addb
dec
push
mov
push
xchg
dec
cld
icebp
sbb
dec
rcr
push
xchg
push
add
aad
mov
aad
int
loopne
jmp
mov
jmp
rorb
call
addr16
lea
es
jb
xor
jecxz
sbb
int
aad
push
fadd
xchg
push
repnz
jno
cmp
scas
mov
outsb
pop
inc
test
sub
test
ror
fcoms
add
xchg
enter
push
dec
or
mov
dec
or
add
mov
add
cwtl
mov
clc
or
divl
aaa
push
loope
lahf
lods
lahf
cltd
int
dec
mov
lock
mov
pcmpgtw
stos
aad
nop
mov
sbb
fldl
cli
mov
icebp
popf
es
lret
push
shl
adc
push
call
xor
push
aas
cld
cs
decb
aam
mov
cmp
insl
dec
push
mull
inc
leave
mov
cs
sti
mov
or
inc
fisubrs
imul
shll
mov
ret
jb
fs
mov
cmc
pop
mov
test
mov
ror
mull
push
add
cltd
inc
add
scas
in
jae
push
jp
pop
into
mov
xchg
fdivrs
cmp
push
rorb
loop
mov
push
movsl
shlb
fdivp
clc
sbb
mov
cmp
xchg
aam
pop
inc
outsl
xlat
aaa
push
dec
dec
popf
and
sbb
add
icebp
push
push
cli
call
orb
sub
sbb
int3
mov
ss
or
or
jge
les
iret
out
sub
jnp
fisttps
fst
xchg
hlt
mov
inc
xchg
xchg
sahf
rorl
dec
ljmp
outsb
daa
push
pop
cmpsl
scas
dec
jg
push
cmp
shrb
mov
inc
movb
fsub
sbb
fstpt
fadd
push
pusha
push
mov
xlat
jp
push
cmc
sti
aad
insl
mov
gs
notb
inc
shrb
aad
clc
inc
mov
rcrb
or
hlt
cwtl
mov
testl
pop
inc
xor
xchg
xor
xchg
test
mov
nop
movsb
pop
addr16
das
mov
mov
fadds
lods
inc
fs
push
data16
or
and
aad
xchg
and
push
jmp
sbb
fidivl
std
inc
test
jge
add
in
fadd
inc
clc
arpl
push
gs
lcall
jl
and
rclb
mov
les
cwtl
dec
pop
fldl
inc
jp
arpl
test
mov
call
jnp
cli
hlt
jmp
out
mov
dec
sbb
ss
stos
push
lret
pop
pop
dec
scas
pop
jns
push
test
jge
out
mov
mov
scas
in
dec
jns
jmp
mov
mov
push
push
dec
inc
sub
outsb
cmp
jo
and
aas
and
idiv
dec
push
repz
add
dec
mov
xchg
mov
add
and
scas
into
mov
sub
repz
xor
dec
push
adc
stos
sahf
ss
je
cmp
mov
into
xor
inc
cmp
and
jl
adc
pop
lret
mov
cmc
push
and
cmp
or
fmul
pop
mov
cmpsb
jno
push
xor
inc
lock
shrb
repz
push
or
jbe
add
push
fs
jmp
mov
rcrl
pop
jle
out
add
jp
xchg
pop
xor
fists
pop
and
push
push
out
dec
stos
iret
push
adc
add
pushf
call
packuswb
push
sbb
mov
stos
cmp
daa
cmp
mov
gs
push
cmp
in
and
push
stc
and
mov
jle
clc
xor
jnp
lahf
fldt
ss
jno
cmpsb
pop
cli
bound
mov
xchg
sub
xlat
adc
xchg
mov
add
push
das
jb
jg
or
stos
in
jp
or
sbb
jp
lods
mov
daa
cmp
dec
dec
dec
lods
sub
sbb
stos
mov
les
ljmp
in
xor
cmp
or
rcl
mov
inc
shrb
shll
cmpsb
xor
jbe
mov
scas
mov
pop
push
inc
xor
cli
push
dec
mov
rorb
push
and
popf
dec
pop
popa
lret
and
stos
push
cmp
es
mov
loopne
int3
cmp
sbb
sub
dec
or
out
mov
pop
aad
or
xchg
adc
inc
out
mov
xchg
daa
dec
stc
jecxz,pn
stos
test
xor
cmp
cld
out
dec
dec
dec
lret
jle
xchg
movsl
cmp
push
mov
xchg
dec
mov
ds
into
int
xchg
mov
cwtl
loop
scas
es
or
mov
lds
pop
jecxz
loop
int3
xchg
mov
jge
cmpsl
jno
vmread
adc
inc
push
jno
add
enter
loope
jns
mov
int3
xor
xor
int3
dec
jno
mov
inc
sub
xor
js
inc
sbb
icebp
aas
daa
adc
mov
adc
and
daa
aad
stos
pop
lds
es
mov
cmp
ds
ljmp
sbb
in
scas
lahf
repnz
add
add
shrl
outsb
mov
jle
mov
shll
dec
out
adc
fs
iret
sub
cmp
xchg
daa
push
mov
mov
ficomps
adc
cmp
sbb
fidivrs
mov
movsl
push
in
pop
inc
and
repnz
xchg
cmovl
jp
pop
mov
cmp
lahf
mov
shll
xchg
or
jns
inc
andb
jl
add
sti
pop
push
sub
push
sub
sbb
mov
jb
jmp
sti
inc
pop
add
push
mov
cmpsl
and
mul
jmp
loopne
sahf
loope
rcr
add
daa
fiadds
popa
push
pop
dec
fidivrl
push
shl
and
xor
mov
adc
ds
outsb
jns
cmp
push
movsb
aad
ss
jns
inc
mov
andl
push
pop
fisubrl
mov
sub
jne
int3
leave
enter
pop
xchg
shrl
std
jb
scas
jb
arpl
in
adc
loop
xchg
pop
dec
lds
test
test
xchg
rolb
mov
add
and
push
xor
jmp
cmc
dec
lret
adc
mov
dec
mov
and
dec
jns
add
or
dec
mov
mov
out
fs
pushf
stc
inc
xor
and
or
stos
das
shlb
jg
test
scas
orl
or
inc
jns
ret
arpl
sbb
add
mov
mov
test
mov
add
pop
cmc
jo
add
mov
cmp
lcall
test
adc
adc
mov
push
adc
scas
sbb
nop
mov
leave
cmc
call
icebp
fdivrs
mov
cmp
out
je
cmpsb
ret
out
adc
push
movsb
xchg
cmc
adc
mov
in
cmp
movsb
test
mov
push
xchg
repz
out
ss
ss
jne
bound
add
cmp
loop
data16
imul
add
pop
add
sbb
js
shlb
cmpsb
and
dec
nop
icebp
xor
stc
mov
stos
adc
and
pop
adc
in
sbb
fucomp
aam
lahf
push
xchg
dec
xchg
push
in
lret
add
cmpsb
icebp
mov
mov
cs
push
jg
fisubs
repnz
xor
std
shrl
cltd
cmp
and
pusha
jle
adc
sub
mov
xchg
loop,pt
sub
push
aad
cmp
inc
push
fsub
cmp
pop
mov
sbb
and
inc
addr16
sub
push
xor
aad
aam
dec
jge
sbbb
outsb
inc
mov
xor
inc
and
inc
jno
mov
adc
inc
jns
lock
pop
ja
pop
mov
jmp
mov
push
jnp
push
add
sahf
mov
push
leave
cmp
ss
cmp
sahf
decl
xchg
mov
jnp
jge
ret
call
shrb
dec
lods
cmp
and
and
aad
ss
add
out
xlat
adc
cmp
sahf
test
inc
stos
lahf
pop
jbe
popa
mov
pop
or
cmpsb
and
test
push
mov
aad
ja
out
xor
cli
mov
mov
lock
nop
xchg
std
jge
pop
call
inc
mov
fisttps
mov
cli
pop
inc
in
sub
and
push
jnp
xchg
xlat
outsb
subb
imulb
scas
xchg
sbb
lcall
cmp
and
mov
stos
cltd
push
mov
inc
mov
pop
rcll
hlt
mov
cmpsb
pushl
xchg
jbe
dec
rolb
scas
xchg
stc
sbb
ret
insb
cltd
and
push
dec
loop
mov
xchg
in
call
sbbb
std
push
cmp
mov
mov
insb
repnz
into
or
cltd
inc
add
sub
cmpsb
out
shrb
xor
data16
push
jge
mov
repz
mov
mov
out
push
ss
scas
jge
push
pusha
mov
fdivrs
inc
ficompl
clc
adc
push
push
aaa
push
rcll
and
push
cmp
aad
jo
rcll
inc
cmc
fcmovbe
cmp
dec
add
jae
icebp
sahf
inc
add
lret
jne
loopne
lods
cwtl
rcr
rclb
sub
js
jns
jbe
roll
in
or
push
mov
mov
cmpsl
es
inc
jge
and
push
and
inc
pop
xor
xor
mov
or
cmp
jnp
dec
jl
pop
dec
push
cmp
cmpsl
adc
cmp
imul
jno
cltd
sti
pop
jae
push
sub
dec
sarb
mov
or
aad
adc
push
shrl
shrb
fxch
dec
lock
mov
or
fnstenv
push
or
jb
xor
sub
in
or
dec
fcmovnu
mov
arpl
clc
cmc
dec
mov
and
adc
inc
daa
pop
stos
fisubrl
push
mov
jge
inc
mov
push
imul
xor
and
dec
add
xchg
movsl
xlat
xchg
push
test
mov
mov
mov
js
push
jns
addr16
push
cmp
push
outsb
out
fadds
adc
mov
add
add
loopne
out
jb
outsl
dec
fdivs
test
loop
shlb
mov
mov
incb
mov
repnz
xchg
cmp
adc
scas
push
add
mov
insb
orb
repnz
mov
inc
cmpsb
mov
dec
xor
pop
test
pushl
push
inc
jl
fnstcw
inc
nop
xor
jle
insl
rcll
jbe
stos
jle
bnd
pop
xchg
push
repnz
dec
leave
shr
rcrb
int
pusha
cwtl
pop
ficoms
adc
aaa
lock
jo
test
mov
int
sbb
add
daa
subl
pop
push
cs
add
js
mov
loopne
cs
pop
gs
scas
and
scas
subl
add
outsb
pusha
lods
int
addr16
addl
test
daa
adc
mov
sub
cmp
lret
iret
mov
addr16
repnz
cmp
pop
mov
add
in
inc
sub
pop
push
mov
push
dec
sub
mov
ret
dec
push
sub
or
mov
push
out
dec
push
enter
push
mov
orb
jo
cmp
test
mov
out
cmc
mov
push
push
lds
scas
es
adc
cli
pop
pop
fwait
push
push
cwtl
leave
sub
sahf
add
fmuls
stos
mov
mov
dec
adc
jnp
aad
aad
iret
dec
xchg
pop
pushl
mov
push
dec
mov
push
cli
out
mov
mov
cmc
push
loope
cmc
xor
xchg
fdivrl
pop
mov
sub
jp
cmp
js
fnstcw
push
pop
push
jge
les
or
cmpsb
arpl
dec
jb
popf
sub
xorl
push
xchg
inc
cmc
inc
sub
pop
xlat
sahf
mov
out
mov
aam
push
data16
sub
bound
lret
lahf
mov
push
pop
push
pop
ds
mov
jge
cmpsl
or
aaa
pop
je
imul
jecxz
inc
lret
or
cld
ljmp
imul
cmp
jl
and
mov
adc
lret
pop
or
push
jne
pop
dec
in
andl
pop
cmp
std
cmp
incl
cmc
cli
andl
call
les
lds
cmpsl
jbe
push
sbb
loopne
xor
add
lds
inc
jnp
jo
xor
lea
dec
cmp
loopne
sub
repz
jl
and
lahf
in
subl
mov
fildll
xchg
movsl
xchg
push
jle
add
push
outsb
pop
mov
sti
mov
fs
lret
mov
and
or
pop
shl
pop
mov
addr16
add
sub
stc
popl
or
lods
push
mov
cmp
das
out
mov
push
or
mov
push
mov
and
lods
gs
fstps
shll
pop
adc
xor
mov
mov
inc
fcmove
mov
adc
and
sarb
mov
je
xor
aam
popf
fwait
in
pop
pop
ret
sbb
cltd
adc
imul
cli
push
jb
dec
inc
mov
jns
iret
popf
dec
sub
or
orb
dec
fadd
test
popa
lock
pop
out
mov
xor
mov
cmp
adc
lods
cmp
bound
sar
push
pop
mov
stc
mov
ds
sbb
mov
pop
and
orl
inc
loopne
in
idivb
shll
adc
mov
sub
pop
dec
sbb
adc
mov
inc
push
jno
daa
and
mov
xor
shrl
ss
orl
mov
pop
or
add
hlt
addr16
mov
jno
sbb
out
xrelease
xchg
mov
pushf
and
jge
and
jbe
and
or
push
sbb
shlb
test
pop
fldenv
push
push
mov
add
pop
dec
lcall
mov
inc
sbb
aad
inc
ja
jecxz
mov
dec
fwait
dec
insb
cltd
adc
dec
xor
and
fcomps
or
cmp
ss
push
xchg
subb
sbb
push
sub
mov
subl
dec
pop
cmp
push
or
jno
repnz
fwait
pop
and
repnz
fnstcw
pop
mov
jp
mov
jmp
popf
or
in
dec
dec
loope
movsl
fldcw
addb
and
xor
roll
push
jmp
xor
push
or
iret
test
jbe
call
mov
push
pop
insb
and
push
into
pop
mov
jb
pop
adc
add
or
lahf
pop
dec
pop
pop
dec
and
xchg
lahf
jecxz
cmp
cmpsl
hlt
jno
xchg
and
insb
mov
daa
aas
dec
add
test
sub
cmp
fwait
fwait
mov
xor
clc
pop
cmp
sbb
mov
pushl
lods
jmp
xchg
jb
mov
xor
adc
dec
jno
push
pop
push
or
push
stc
outsl
loopne
ss
push
sbb
push
dec
pop
jecxz
int
dec
cmc
mov
fildl
ss
mov
in
mov
and
push
push
add
adcb
dec
mov
jns
or
push
dec
and
shl
jo
div
inc
pop
loopne
mov
push
lret
rcrl
fs
xchg
push
dec
cmp
or
data16
notl
add
dec
sbb
subl
or
mov
stos
mov
fwait
in
call
jl
fcoms
jge
inc
mov
sub
mov
cwtl
mov
dec
xor
loopne
testb
mov
movsl
scas
lcall
dec
mov
ret
mov
rclb
cmp
push
xor
push
aaa
stc
insb
xor
push
movsl
int3
les
loopne
inc
inc
scas
push
scas
sarl
orl
mov
scas
clc
repnz
nop
xchg
repnz
jecxz
mov
lds
loop
mull
push
int
mov
cmpl
pop
jg
cs
cmpsl
aad
mov
sbb
push
sub
cli
lods
cmp
and
mov
ljmp
andl
xchg
dec
int
mov
loope
test
cli
dec
outsl
mov
mov
hlt
inc
cwtl
lret
cli
imulb
fst
sub
movsb
rcll
xor
into
jg
mov
loope
test
jbe,pt
sbb
push
xchg
pop
sub
pop
mov
jno
jge
mov
xlat
int
and
and
dec
test
daa
lret
dec
movsl
ss
roll
push
cmovl
dec
jno
loop,pt
sbb
jmp
mov
jl
addr16
cwtl
and
ss
push
call
aad
cwtl
push
sbb
rorl
xor
xchg
push
repnz
fisubl
fsubrp
cmpsb
ja
clc
push
frstor
and
outsl
push
sub
sti
cmpsb
cli
mov
xchg
stc
shlb
cmp
push
scas
aaa
xor
pop
jl
xlat
jns
filds
lds
jo
sti
xor
cmc
in
adc
roll
rcrl
add
ja
and
lock
mov
cs
add
push
std
fsubrl
dec
xchg
push
pop
adc
testb
fdivrs
rclb
and
rclb
push
adc
inc
out
ret
inc
aad
push
in
adc
adc
jno
lods
pop
loope
lock
xchg
xor
and
cs
push
inc
and
jl
jno
push
ss
subl
popf
and
jmp
push
stos
inc
dec
bound
xor
push
or
dec
mov
add
and
mov
mov
add
mov
sbb
rcrl
push
fdivrl
in
sub
shrl
and
inc
cmp
dec
lea
jae
mov
xor
jmp
mov
fiaddl
xchg
xor
mov
mov
into
jmp
stos
ljmp
push
lods
cli
push
movsb
rorl
std
cmp
xor
iret
loopne
sub
mov
loop
xor
push
add
xchg
pop
lock
scas
out
and
cmp
mov
mov
mov
enter
add
cmp
ja
or
adc
jge
mov
sbb
call
in
dec
fcomps
fucom
cmp
ss
mov
andb
fwait
push
xor
fildl
jbe
and
dec
sti
movb
rorb
mov
mulb
mov
aas
xchg
dec
push
repnz
adc
push
mov
dec
scas
push
leave
je
outsb
fcmovne
cmp
jecxz
xor
loopne
push
push
daa
jmp
lcall
sbbb
testb
push
xchg
xor
push
cli
mov
mov
xchg
xor
cwtl
cmp
adc
push
push
ja
or
lods
leave
into
div
pop
fmuls
push
sbb
mov
filds
cmpsb
dec
lret
idivb
sbb
mov
jp
repnz
cmp
mov
mov
pop
dec
adc
mov
adc
push
pop
ds
add
xor
addr16
sbb
inc
cltd
or
dec
add
fwait
pop
lock
sbb
sbb
in
push
jl
jno
js
xchg
lret
mov
or
xchg
dec
push
sahf
inc
or
je
ret
mov
lcall
aam
and
pop
xor
add
push
popa
jns
and
push
cmp
pop
rcll
mov
cwtl
push
fadds
push
xchg
add
sahf
mov
pushw
arpl
mov
adc
cmp
push
test
into
pop
add
xor
mov
push
mov
or
push
push
arpl
sarb
push
and
lret
xor
or
fstl
fsubrs
ret
ljmp
ss
rcr
cmp
notb
dec
sub
add
push
pop
mov
and
aad
popf
pop
xchg
dec
mov
ror
push
int
dec
fisubs
scas
fcmovne
in
aad
fidivrl
jnp
push
and
out
dec
cld
add
mulb
push
push
push
add
mov
xor
cwtd
out
outsl
sub
shll
lcall
and
movb
cwtl
popa
mov
in
aam
mov
sub
roll
mov
mov
pushw
popa
xor
mov
test
rcrl
xchg
neg
push
sbb
loope
insb
push
xchg
aad
xchg
push
aad
push
sbb
and
pop
xchg
ds
fcoms
mov
aas
into
ljmp
push
pop
fwait
mov
dec
aaa
add
push
fxch
xchg
adc
mov
mulb
fnstsw
loope
cmp
mov
xchg
in
popf
bound
mov
out
mov
or
out
roll
dec
inc
sub
xchg
push
xchg
adc
adc
pop
aas
jno
add
lods
xchg
aad
repz
cmp
or
push
jb
pop
or
mov
fadds
jb
xor
ret
sbb
aad
mov
in
dec
mov
les
pop
sbb
xlat
testb
jl
mov
push
incb
out
add
adc
cwtl
push
xor
xchg
lods
arpl
fwait
push
mov
les
out
pop
test
and
mov
inc
cs
add
repnz
stos
jae
and
push
subb
inc
pop
jns
in
sub
lahf
je
xlat
icebp
push
jnp
lahf
cmp
jae
int
sbb
js
fwait
jmp
les
pop
pop
mov
dec
in
xchg
fistpll
xchg
push
fcomps
outsl
cmp
dec
cmp
in
inc
cmp
xor
pop
pop
call
mov
push
test
jae
inc
or
loop
mov
fdivs
adc
lret
xchg
in
imul
push
inc
andl
mov
inc
in
sbb
xchg
adc
das
mov
ss
leave
mov
lods
das
pop
mov
imulb
mov
outsl
sbb
pop
jg
das
add
negb
xchg
shll
ljmp
lock
insl
add
scas
fcoml
xor
dec
mov
fiadds
cli
and
push
adcl
sub
xchg
icebp
fnstenv
sub
mov
xchg
pop
icebp
jge
mov
in
notb
fwait
mov
jge
push
addr16
mov
addl
mov
ret
add
lds
mov
std
loope
out
sbb
cs
shll
xchg
add
push
mov
xchg
sub
cmpsl
push
dec
rol
repnz
fs
enter
test
inc
ds
and
mov
or
mov
les
imul
mov
pop
test
outsl
ret
mov
pop
jno
popf
mov
jae
xchg
negb
mov
cmpsb
shlb
and
xchg
lea
sbb
adc
inc
iret
clc
mov
inc
add
mov
dec
insl
mov
lds
cltd
cmp
shrl
mov
adc
outsl
sub
jnp
stc
in
dec
popf
test
cmp
and
scas
mov
push
mov
mov
sub
in
ss
sub
mov
mov
mov
dec
mov
mov
dec
add
push
in
mov
cmp
or
ret
loope
fdiv
pop
adc
or
stc
inc
insb
loop
sbb
push
xor
mov
insb
mov
pop
ljmp
ret
xchg
pop
int
int
and
jnp
pop
inc
je
xchg
es
push
pop
pop
xor
mov
and
xor
sbb
xchg
pop
push
cmp
shll
adc
or
sub
repnz
addr16
inc
xchg
add
icebp
jmp
fidivs
cld
add
cmp
pop
and
bound
aad
cmpsb
nop
ficompl
xchg
ljmp
adc
popf
xchg
iret
pop
and
cwtl
jae
cltd
int
cmp
mov
dec
xchg
shlb
cs
push
adc
lods
jnp
ja
popf
xor
test
cmpsb
iret
push
add
cmpsl
cmpsb
xchg
pop
pextrw
ficompl
mov
outsl
sbb
cs
pop
fsubrs
dec
and
lahf
or
ds
or
fmulp
cmpsb
inc
rcrl
stos
sti
stc
push
lods
pop
iret
jg
pusha
inc
dec
pop
xchg
sbb
or
dec
inc
fwait
jnp
outsb
sub
fstpl
cmp
jb
loop
leave
in
mov
pop
stc
test
aaa
pop
xchg
dec
sub
data16
dec
int
js
xchg
sub
es
cmp
imulb
and
call
adc
push
cmc
scas
jecxz
stos
jne
fs
add
mov
out
notl
cmpsb
lock
mov
sbb
inc
imul
loop
cmpsl
nop
out
daa
xchg
cmp
cmpsb
and
cmc
dec
es
dec
mov
xchg
pusha
scas
and
push
lock
arpl
add
adc
sbb
dec
lahf
push
adc
addr16
mov
jbe
ds
nop
stos
ds
adc
cmpsl
and
dec
lods
lds
daa
adc
jl
rclb
add
lahf
add
push
xor
sbb
test
fwait
xchg
sbb
push
and
jbe
sbb
push
enter
dec
rolb
data16
aas
xor
xchg
dec
int
dec
adc
mov
out
dec
push
push
add
push
xchg
inc
fbld
test
push
test
mov
sbb
mov
push
mov
sbb
popw
mov
jno
and
mov
call
outsb
lds
jo
jae
adc
test
dec
mov
sbb
pop
scas
jle
sti
and
mov
ds
pop
mov
movsl
repnz
mov
mov
mov
repnz
cbtw
or
das
icebp
sbb
xchg
xchg
hlt
mov
push
dec
lods
xchg
mov
xchg
outsb
nop
mov
lea
push
dec
int3
jmp
push
data16
jb
andl
aad
push
rcrl
mov
xchg
add
push
out
mov
inc
mov
ret
int
pop
xchg
xor
push
jno
pop
dec
jecxz
jnp
sbb
cmp
jg
jmp
inc
out
pop
mov
mov
xor
inc
cmp
jp
out
nop
sbb
lret
aad
test
jb
jns
push
and
mov
repnz
push
sbb
cwtl
mulb
sbb
cmp
movsl
rorl
sti
addb
arpl
mov
xchg
dec
ffreep
sbb
push
movsl
icebp
pop
sbb
mov
jle
push
enter
sbb
lahf
sbb
dec
aam
icebp
jae
push
push
push
pusha
sbb
mov
push
mov
es
cmp
inc
in
inc
scas
insl
sub
fisttpl
lret
fwait
xor
icebp
lret
or
dec
dec
sbb
addr16
movsl
jae
xor
inc
sahf
ret
push
xchg
push
mov
xchg
inc
jnp
cli
fisttpll
mov
xlat
adcl
pop
and
cld
sahf
inc
aas
jno
sub
popa
mov
mov
cld
mov
sub
xlat
adc
sub
jmp
in
adcb
leave
jecxz
hlt
xchg
out
xchg
pop
sti
leave
push
mov
out
ss
jmp
mov
icebp
mov
xchg
hlt
sbbb
adc
push
repz
xchg
cmp
push
mov
sbb
pop
fwait
pushf
add
cmc
mov
add
dec
into
cmovns
mov
mov
mov
orb
mov
lods
mov
and
aad
repnz
jb
inc
gs
pop
xor
pop
sub
adc
push
xchg
or
notb
inc
lods
or
lret
shlb
pop
mov
adc
faddl
push
xchg
or
lods
adc
dec
icebp
mov
pop
xlat
ja
pop
pop
es
or
sub
jl
pop
cwtl
les
inc
fs
dec
sub
jl
insb
mov
std
jae
mov
mov
mov
xlat
pop
insl
outsb
cs
sbb
and
cmp
lahf
cmp
fistpll
call
inc
addr16
jbe
push
mov
dec
rolb
lret
testb
push
cwtl
push
fstpt
dec
sti
dec
sub
out
mov
stos
push
xor
dec
adc
xor
notl
pop
sbb
scas
fists
push
xor
xchg
aad
imul
call
sbb
mov
aad
fldt
lret
mov
jmp
in
ss
into
ret
or
push
rclb
call
rorb
pop
push
daa
xchg
lods
fwait
adcb
cmpsb
out
shll
dec
sbbl
push
xchg
sbb
inc
xchg
sbb
rcll
xchg
cmp
push
adc
add
loope
in
jno
iret
push
and
mov
add
xchg
repnz
aas
push
push
cltd
pop
add
sbb
fwait
es
inc
xchg
xor
mov
in
xor
es
jns
push
das
into
fdivrs
ffreep
mov
jne
push
cwtl
mov
cmpsb
and
mov
xor
shr
and
and
testb
push
dec
or
xor
dec
rorl
and
inc
xchg
sbb
mov
or
out
call
xchg
mov
mov
loopne
sub
es
push
into
enter
or
sub
sub
push
adc
iret
repnz
and
mov
xor
dec
mov
xchg
jnp
xor
and
paddb
mov
push
lret
cmp
mov
xor
in
xchg
mov
ss
popf
jno
pop
jmp
andb
add
push
fsubrl
adc
stos
fcmovne
and
ret
icebp
test
pushl
xchg
push
loop
sarl
jnp
rcl
pop
pushw
mov
out
cld
xchg
sbb
jl
leave
lds
sbb
popf
ret
push
stos
mov
call
out
push
test
cs
dec
adc
test
cmp
call
adc
adc
cwtl
adc
mov
xlat
and
xchg
mov
sahf
mov
enter
call
cmp
cmpsb
mov
fisubrl
jb
mov
aam
test
inc
fcmove
rcl
push
dec
inc
dec
pusha
movsl
xchg
fcom
rcll
adc
xchg
cmpsl
adc
fcompl
sarb
push
jo
movsl
orb
sub
mov
xchg
jp
stc
xchg
pop
push
pop
rcll
lret
ret
insl
aam
notb
addl
imul
sub
lea
adc
pop
jmp
addb
ljmp
ret
loopne
icebp
and
xchg
adc
repnz
mov
popa
into
les
mov
popf
sub
push
es
into
jge
sub
imul
jno
and
adc
cmpsb
data16
pop
or
daa
popa
orps
call
push
xchg
aas
dec
inc
jo
push
es
xorb
push
insb
fcmove
fidivrs
mov
xchg
lods
and
ljmp
mov
push
adc
ljmp
pushf
movsl
cmp
or
push
sahf
jnp
mov
xor
mov
jmp
repz
and
jns
mov
rcrl
and
shlb
inc
fdivs
sbb
mov
test
test
or
sbb
mov
lret
or
mov
xor
jge
aaa
je
lods
adc
dec
xchg
add
mov
pop
ret
xchg
das
fs
daa
shll
inc
test
or
mov
mov
mov
call
dec
mov
pop
fmuls
cmp
xor
aas
cltd
xlat
cmp
jb
jg
testb
dec
inc
push
adc
stc
shll
nop
stc
or
lahf
jo
add
xor
dec
cvtps2pd
adc
mov
adc
adc
ficoml
frstor
push
and
jle
loopne
xchg
inc
out
jp
in
push
sub
add
mov
inc
xor
xchg
push
pop
fcom
xchg
adc
push
test
push
sbb
mov
dec
push
pop
test
loopne
mov
popa
mov
cs
or
dec
xchg
test
call
mov
int
dec
xchg
int
dec
aad
lea
int
dec
push
int
dec
xchg
int
dec
fmul
push
dec
sbb
xchg
cmp
out
cwtl
ja
dec
inc
dec
data16
mov
adc
adc
addb
pop
sub
jbe
aad
mov
sbb
mov
lods
push
fmul
std
iret
cmpsl
mov
sbb
loope
out
shlb
out
sbb
push
cli
repnz
push
mov
out
inc
rorb
cmp
subb
cmp
dec
insl
pop
mov
aad
out
cmp
dec
rcll
popa
movsl
sbb
mov
pop
ja
cwtl
and
cmp
adc
icebp
push
jmp
cmpsl
ret
dec
lock
pop
sahf
iret
push
js
xchg
mov
stos
pop
jae
shl
adc
mov
inc
or
and
rcrl
iret
push
lret
and
xchg
orl
sub
rclb
aam
sbb
repz
mov
jmp
lods
call
jnp
or
and
push
mov
pop
mov
rolb
fcomps
pop
mov
aad
xlat
aad
or
push
fcom
test
std
mov
imul
cs
lcall
leave
adc
fistpll
in
pop
and
js
cmp
std
mov
mov
mov
xchg
cmp
adc
jns
xor
dec
loopne
daa
rorb
fldenv
hlt
inc
lret
shr
xor
popf
enter
fdivl
fmull
jmp
and
mov
push
sub
dec
mov
repnz
mov
iret
test
sahf
inc
rcll
jnp
sbbl
lods
lock
mov
mov
inc
inc
jo
or
cwtl
xchg
mov
ffreep
clc
dec
aas
jecxz
loop,pt
call
mov
das
sub
rcl
pop
inc
mov
jecxz
adc
aad
loope
call
lret
nop
add
imul
cmp
jb
ja
sub
fstps
jae
es
inc
lock
lret
rorl
inc
daa
ficoms
dec
in
mov
push
mov
test
add
test
arpl
mov
and
push
cmp
sbb
insb
mov
fiaddl
push
pushf
ss
cltd
test
add
and
and
shlb
xchg
pop
mov
xor
xchg
lcall
pop
push
pop
movsl
mov
jge
adc
popa
adc
ljmp
xor
jge
adcl
es
subb
mov
mov
in
enter
xchg
ljmp
cmp
fwait
ds
mov
add
mov
jae
enter
jge
ret
sar
pop
pushf
imul
es
push
ja
or
push
jns
jno
mov
cmp
jge
cmp
dec
aad
stos
mov
stos
and
and
sub
add
pop
inc
movsl
inc
lret
mov
cmc
das
js
push
add
aas
hlt
fdivp
sub
je
jb
ja
pop
jl
pop
loop
pop
outsb
pop
mov
or
movb
xor
adc
lahf
push
fstpl
cwtl
inc
fstl
xlat
imul
inc
xchg
fsubrs
fstps
es
push
cwtl
dec
and
adc
add
push
test
rcll
push
ja
jl
cmp
cmp
dec
add
or
inc
pop
sub
sub
loope
fs
and
mov
cli
push
icebp
outsl
push
cmp
sbb
or
rorb
adc
fwait
sub
mov
icebp
cwtl
cmp
mov
mov
cmp
xchg
cmp
mov
ss
cmc
push
jbe
add
imul
and
insb
dec
idivl
or
mov
addr16
aad
and
pop
push
pop
test
pop
adc
cmp
push
mov
push
dec
adc
jno
cltd
in
jb
mov
sbb
jmp
ficomps
pop
hlt
adc
lods
inc
dec
adc
in
cwtl
xorb
roll
in
scas
scas
dec
mov
or
pop
and
jne
pop
jle
cwtl
inc
add
mov
pop
fsubs
jecxz
mov
push
cli
xor
scas
stos
and
iret
repz
mov
lods
mov
cmp
push
test
sahf
push
mov
push
xchg
mov
int3
mov
pop
mov
loop
loopne
adc
sahf
push
mov
test
addb
je
rclb
and
xchg
or
daa
add
pop
jp
pop
cmp
cmc
jge
adc
daa
dec
inc
push
gs
pushf
gs
and
push
dec
mov
mov
lret
cmp
out
popl
mov
leave
fiadds
gs
loop
push
xor
sarl
mov
add
push
sahf
adc
mov
push
mov
xor
icebp
pop
inc
inc
fcompl
ss
test
push
pop
add
dec
mov
push
pusha
add
pop
sub
mov
loope
add
pop
cli
outsl
mov
xchg
pop
xor
push
mov
add
push
addb
sub
sbb
pushf
pop
jmp
vmovhps
cmpb
pop
push
mov
inc
xor
xchg
jnp
sub
pop
pop
inc
jbe
movsl
dec
aaa
cld
sub
sbb
out
push
pop
in
dec
clc
sub
mov
iret
jecxz
mov
nop
sbb
or
test
in
jno
icebp
push
lods
xor
push
mov
sahf
loop
adc
xchg
pop
test
mov
xchg
fildll
sub
push
cltd
out
cs
jmp
inc
and
and
pop
jne
and
mov
stos
icebp
outsl
push
push
cmp
idivb
fwait
xor
adc
xchg
sbb
ffree
push
cwtl
and
inc
and
add
adc
adc
loope
mov
mov
fs
push
inc
fimuls
jmp
sbb
xor
pop
xchg
inc
int3
call
xor
cmp
test
cmpsb
xlat
xchg
mov
lods
push
fmuls
xchg
ds
inc
scas
inc
mov
add
aad
mov
repnz
push
sub
push
adc
pushw
mov
aam
sti
fisttps
cmp
sub
pushf
fiaddl
or
xor
icebp
inc
movl
sbb
cmp
clc
test
mov
mov
mov
adc
add
jns
sahf
orb
sub
mov
adc
test
inc
repnz
repz
mov
jg
loope
scas
aam
pop
mov
das
andl
shlb
inc
dec
or
scas
add
mov
pop
fmuls
jmp
add
push
sahf
add
jno
clc
jecxz
and
xchg
ror
aas
fstps
outsw
inc
sbb
or
cli
add
and
test
cmp
jo
sub
sbb
push
das
lods
ds
adc
add
fnstcw
movsl
cmp
pop
and
mov
out
stos
sbb
inc
push
lea
pop
fs
int
mov
or
xchg
call
mov
lods
lret
inc
mov
clc
cmp
inc
dec
inc
roll
add
dec
xchg
adc
jle
cmp
aas
out
out
ret
inc
dec
shlb
imul
dec
push
data16
cwtl
mov
mov
fwait
or
xchg
clc
inc
es
cmp
jae
mov
fsub
ds
add
cmp
mov
cmovl
push
sbb
aad
into
xchg
push
mov
popf
cmp
divl
xchg
not
xor
mov
mov
dec
dec
dec
test
orl
cwtl
movsl
push
sarb
sub
into
mov
xchg
xchg
fwait
pop
push
push
jno
subb
mov
imul
lret
popa
jmp
into
cs
cmpsl
mov
jns
dec
mulb
stos
mov
xchg
ds
aad
fnstsw
jbe
mov
es
jne
test
pop
shl
push
cli
sub
imul
pop
sbb
out
pop
daa
js
dec
mov
sub
fwait
mov
sub
es
in
pop
sbb
inc
adc
insb
xchg
mov
xlat
insb
or
lods
cmp
test
mov
mov
push
loope
jnp
dec
push
push
std
repz
int
popa
fildl
cmp
popa
push
fbstp
mov
mulb
and
sub
movsb
cmpl
cmpsl
dec
jbe
push
movl
xchg
sbb
adc
jbe
movsb
lret
aad
insb
fs
popf
mov
push
jae
push
loope
out
jb
inc
sbbl
imul
fwait
movsl
adc
sahf
repnz
cwtl
xchg
or
sub
ds
dec
aaa
mov
mov
or
dec
sbb
fsubrp
push
rolb
adc
sub
xlat
testb
sti
cmp
push
lret
adc
scas
mov
xor
cmp
repnz
and
mov
xchg
addr16
sahf
filds
and
rcr
or
mov
data16
lods
repz
jb
dec
jmp
nop
and
popf
insl
shlb
push
lock
mov
adc
or
or
dec
adcb
inc
mov
or
popf
call
or
in
stc
mul
lea
jp
insb
in
jmpw
dec
das
cmpsb
insb
push
sub
adc
in
popa
ss
iret
or
adc
push
bound
cmp
int3
jae
cmp
add
dec
rcl
in
shrb
push
mov
dec
and
xlat
cmc
cli
mov
sbb
clc
nop
data16
icebp
and
addl
adc
out
jg
mov
jp
sti
scas
pushf
mov
cltd
xlat
cmp
xchg
adc
test
mov
adc
cmp
hlt
mov
jge
push
mov
or
push
push
push
push
neg
xchg
xchg
mov
in
sub
push
and
pop
push
xchg
push
mov
pop
push
push
ds
cs
mov
test
or
mov
jb
adc
xchg
xchg
and
mov
mov
or
mov
dec
repnz
sbb
jecxz
jl
call
in
xchg
inc
stc
or
or
cltd
or
cwtl
pop
or
xchg
xor
nop
clc
popf
push
push
mov
xor
mov
xlat
aam
cs
push
pop
adc
icebp
into
and
hlt
push
das
fisubs
xchg
decl
pop
outsl
mov
push
outsb
cs
mov
xchg
and
mov
xchg
cltd
ljmp
xchg
cmp
adc
push
pop
aad
pop
aas
cmp
hlt
mov
lret
pop
clc
mov
jg
xchg
xchg
and
jge
pop
les
jmp
out
push
dec
adc
dec
adc
cs
xchg
fisubrs
push
test
inc
mov
dec
adc
inc
and
xor
mov
and
mov
pop
xchg
jae
cmp
shl
stos
mov
adc
lret
cli
mov
sub
and
cmpsl
jbe
or
popf
pop
and
push
mov
pop
pop
shl
mov
push
mov
and
notb
clc
push
stos
push
push
cmp
jno
cmp
into
shlb
jmp
movsb
pop
push
mov
mov
inc
sti
loopne
fcmovbe
pushf
in
jle
fstps
mov
jnp
movsl
jnp
lahf
clc
mov
cmp
sbb
lds
adc
xor
in
test
pop
fs
push
push
mov
shl
push
das
clc
shrl
cmp
cmp
and
in
movsb
ss
xchg
mov
mov
fs
addb
pop
pop
sub
adc
in
add
pushf
clc
loop
add
cmp
mov
imul
dec
jbe
mov
mov
in
adc
adc
out
xor
fwait
dec
sbb
adc
dec
addr16
push
popa
shll
push
xlat
mov
insl
mov
cwtl
into
and
sbbl
xor
sbb
and
in
mov
sbb
fwait
ret
lahf
mov
aad
adc
sahf
repnz
mov
add
lds
fdivl
add
push
enter
andl
push
into
lret
repnz
push
cmp
adc
ret
ja
xchg
dec
fcoml
cmp
int
mov
inc
in
xlat
or
loop
test
out
rorl
mov
and
jg
or
add
call
sbb
xchg
scas
push
into
pop
movsb
test
and
sbb
gs
ret
std
jo
fcoml
adc
lret
mov
jo
test
out
mov
test
xor
cmp
mov
jp
cltd
and
mov
lahf
adc
adc
int
popf
or
lods
mov
cmpsb
push
repz
shlb
cmc
push
inc
int
mov
ds
mov
aad
push
mov
or
test
ficoml
cmp
aad
lock
sbb
je
pop
fldenv
in
jne
add
lret
test
pop
xchg
cmp
push
adc
loope
test
addr16
jb
mov
pop
hlt
pop
mov
sahf
and
mov
sub
sbb
sbb
in
dec
jp
add
hlt
stos
shll
inc
mov
mov
loope
in
adc
jbe
and
insb
sub
push
jbe
push
adc
inc
lock
icebp
adcl
int3
pop
es
mulb
add
stos
sbb
dec
sbb
pop
fbstp
pop
xor
les
or
ret
nop
dec
inc
mov
xchg
pop
jns
mov
inc
data16
int
dec
sub
add
push
cmpsb
sbb
es
pop
in
movsl
cmp
fs
outsl
enter
loope
call
mov
fs
cwtl
loope
xchg
xchg
mov
xlat
lret
jcxz
iret
mov
adc
xor
jb
push
test
sbb
pop
dec
dec
movsl
lret
into
xlat
icebp
std
stos
je
fcomps
push
sbbb
inc
xor
ret
rorl
jmp
mov
ljmp
adc
ret
add
aam
or
or
fstps
fldt
adc
push
jne
mov
push
loopne
out
in
and
xchg
out
test
leave
inc
dec
stos
cmp
or
and
inc
and
mov
leave
inc
shl
stc
ljmp
push
cmp
lock
shll
out
adc
fwait
jp
aam
into
jge
out
sahf
adc
fsubrs
adc
dec
adc
clc
mov
mov
cmp
cmpsl
fcom
and
or
jns
jae
addr16
rolb
adc
pop
mov
ja
outsb
clc
mov
inc
jbe
xchg
push
adc
hlt
out
inc
mov
lret
clc
inc
test
mov
cmpsb
pop
icebp
aad
out
fs
ds
divl
jns
dec
aas
inc
jmp
push
cld
sbb
test
out
sbb
js
dec
xlat
add
loope
inc
mov
ljmp
and
jb
pop
sbb
cmp
fsubrl
mov
mov
adc
bound
jnp
das
jmp
sbb
repnz
mov
jb
dec
push
pop
inc
lods
aas
sub
mov
lret
or
adc
fwait
jns
es
outsb
lods
fwait
mov
repz
sti
jmp
push
xor
add
stos
ret
adc
adc
data16
es
inc
mov
adc
mov
pop
orl
inc
mov
ja
shll
cmp
mov
cli
pop
loop
test
adcb
fistpl
and
imul
insb
mov
cmpsb
ss
das
dec
pop
in
ret
bound
mov
push
in
push
pop
and
mov
jne
or
ljmp
pop
xlat
pop
jno
and
pop
xchg
jne
mov
mov
push
scas
add
loope
push
mov
ret
dec
pop
cmp
mov
pop
pusha
xchg
push
dec
dec
ss
fisubrs
sbb
imulb
leave
cltd
push
jno
sbb
xor
jbe
add
jb
mov
fcmovnbe
js
repnz
pop
xchg
cld
in
mov
add
pop
lahf
arpl
mov
xchg
dec
aad
mov
scas
dec
pop
mov
popa
cs
fwait
nop
pop
or
mov
leave
inc
and
jns
cmpsl
jbe
in
movsb
fdivr
pushl
mov
loop
jae
in
mov
shlb
movsl
cmp
call
lahf
pop
xor
repz
stos
sub
xchg
cmp
or
push
xchg
ds
sbb
out
fistpl
aaa
iret
mov
or
jmp
fcoml
shrl
dec
sbb
cmp
mov
pusha
jmp
popa
xor
and
xchg
sarl
arpl
mov
stc
mov
mov
jbe
fdivrl
ja
jae
dec
out
pop
add
jmp
pop
mov
mov
cwtl
cmpsb
test
scas
mov
pop
push
gs
jnp
dec
rcl
in
insl
outsl
push
inc
rorl
clc
dec
repnz
aad
fcmovb
pop
aaa
or
push
pop
in
xor
add
rcl
push
imul
mov
bound
dec
je
cmp
xlat
adc
push
fmuls
push
mov
mov
pop
sbb
ror
enter
lret
ror
lret
mov
sub
push
push
xlat
or
push
add
or
ret
call
xchg
mov
inc
repz
add
ds
push
push
mov
and
push
mov
mov
push
and
ficoms
inc
mov
mov
cltd
dec
cmc
push
adc
xchg
mov
pop
sub
ja
rcll
jnp
push
xchg
sbb
dec
loopne
cmc
or
rclb
imul
dec
loope
or
push
adc
mov
or
dec
int3
push
push
ljmp
pop
addb
xor
shl
fcoms
mov
adc
add
add
fbld
loope
fimuls
sarb
mov
push
push
loop
cmp
push
ror
dec
mov
mov
outsl
pop
ror
shlb
dec
dec
ss
iret
into
adc
pushf
rorl
dec
lods
jle
sub
push
mov
into
push
into
lahf
mov
dec
outsb
test
dec
mov
push
push
test
or
mov
daa
mov
shlb
add
adc
xchg
rcl
fsubr
jbe
popf
mov
insb
and
mov
aad
push
push
data16
lods
pop
outsb
dec
push
lahf
mov
push
pop
aad
psubusb
dec
mov
ficoms
outsb
and
sub
loopne
xchg
test
dec
or
scas
loope
incb
sbb
aam
iret
cmp
mov
dec
xchg
jo
enter
fmuls
adc
inc
jle
jae
dec
mov
adc
int
pop
int
popf
ret
dec
lret
or
mov
xchg
inc
daa
mov
add
call
push
in
push
add
push
call
add
push
xchg
xchg
aad
call
aad
into
lock
push
cmc
clc
adc
mov
aam
jbe
rorl
insl
std
push
ja
adc
cmp
jb
nop
pop
lods
dec
imul
add
jne
xchg
int
dec
dec
and
sbb
push
inc
scas
cmp
pop
stos
mov
fcoms
dec
nop
inc
push
cltd
cwtl
call
insl
push
cs
dec
fmuls
dec
push
addr16
jno
mov
dec
in
mov
xchg
ja
into
or
mov
adc
or
cmp
or
lds
ficoms
std
cwtl
pop
push
gs
loop
cltd
inc
or
out
sub
fmul
xchg
lret
hlt
cmp
push
test
push
mov
in
sarb
cs
dec
rcr
xor
repz
cwtl
adc
maxps
adc
test
int3
fcomps
push
clc
shrb
rclb
lret
mov
mov
aam
mov
mov
aad
sub
mov
sbb
push
loop
call
pop
push
dec
cmc
mov
leave
aad
in
aam
push
push
push
push
inc
push
jo
xchg
int
mov
xor
push
fsubrs
adc
imul
enter
inc
stos
aad
xchg
pop
in
leave
and
icebp
push
ss
push
push
dec
adc
push
lret
fisubs
into
mov
xchg
push
mov
call
fwait
in
or
fcoms
sub
push
push
lcall
or
aad
push
add
cmp
dec
push
adc
std
mov
out
dec
loop
jae
xchg
mov
push
call
dec
push
loopne
fsubr
sbb
call
dec
xchg
rorb
push
push
rorb
push
or
mov
loopne
push
fmull
xchg
iret
lret
mov
push
cmpps
mov
int
into
jb
xchg
rorb
pop
in
clc
jnp
sbb
cli
aad
rcrb
dec
push
jne
leave
sahf
rclb
or
ja
add
xchg
push
push
fadds
imul
iret
ret
icebp
jecxz
jbe
rorb
daa
push
cmp
mov
mov
fcomps
cmp
push
jne
xchg
jbe
pop
push
fcoms
imul
sbb
mov
mov
lea
xlat
shll
iret
aad
sub
or
mov
mov
scas
ja
jbe
shll
and
jno
pop
stc
push
jl
cmpsb
pop
cmc
rcrl
adc
testl
or
aas
cld
or
jbe
call
int3
loop
sti
cmpsb
inc
mov
mov
lock
add
push
sarb
fxch
lea
jb
popw
insl
or
out
push
icebp
cmpsb
and
jge
popa
shlb
pop
sbb
fcom
cmc
inc
cmpsb
mov
movsl
call
mov
xchg
lds
cwtl
dec
int3
adc
mov
mov
push
loop
imul
fcoms
imul
in
jbe
push
adc
mov
push
lcall
cwtl
fmuls
push
rcr
roll
call
jno
cwtl
xchg
stos
insb
jle
mov
push
or
push
js
mov
outsb
nop
inc
dec
push
rcrl
mov
xor
out
int3
ret
and
scas
push
nop
rcr
shl
push
addr16
jne
cmp
aad
rcrb
int
fdivs
leave
xor
dec
jecxz
adc
rcl
fmul
push
ret
mov
dec
and
lret
insl
xor
sarb
fdivs
mov
in
dec
iret
scas
rclb
ret
pop
fcoml
loopne
push
push
clc
push
pusha
lret
es
cmpsb
pop
sub
cmc
lahf
ss
dec
push
adc
mov
pop
shlb
lret
call
jle
and
xchg
xor
aad
adc
rcr
jl
add
leave
ss
call
int
mov
call
aas
aad
push
mov
pop
add
fcoms
dec
or
mov
call
mov
adc
mov
call
or
call
mov
xor
and
push
jbe
push
icebp
xchg
push
in
mov
jb
aad
dec
shl
push
push
mov
aad
dec
sbb
aam
cmc
push
aad
dec
push
loope
push
sub
iret
push
in
shrl
aam
mov
jbe
out
push
fcomp
pop
and
push
jbe
loope
push
adc
repz
call
fisttps
mov
cmc
inc
push
fcoms
jb
stc
aaa
rol
push
cmc
cwtl
shll
mov
push
aam
cmp
mov
jnp
add
call
or
mov
dec
dec
adc
jbe
lret
dec
sahf
mov
fsubr
adc
jmp
loopne
dec
ss
xchg
in
ss
push
in
ss
nop
in
ss
dec
dec
mov
jne
out
cs
jbe
push
xchg
nop
push
fstp
sbb
jb
mov
in
ss
aam
jmp
outsb
mov
call
sub
loope
pop
push
fsubrs
push
fwait
movsl
stos
and
sbb
mov
adc
push
rcll
call
fisttps
and
cmp
in
adc
fdivp
mov
inc
in
imul
dec
jne
lock
mov
or
cmp
scas
movsl
rorb
repnz
dec
push
dec
fwait
orb
in
rorl
icebp
inc
idivb
push
dec
es
add
lods
scas
lret
daa
cwtl
mov
push
fcoms
loop
ljmp
cltd
mov
es
leave
adc
or
xchg
adc
lret
or
fcoms
jecxz
test
rclb
rcl
push
insl
and
in
pop
push
mov
dec
in
jbe
push
adc
mov
push
int
dec
ja
into
into
push
mov
fisubl
jne
push
into
ror
pop
and
push
mov
mov
jmp
repz
dec
lods
cs
jecxz
sub
fmull
dec
pop
std
push
aad
out
fwait
add
imul
sbb
pop
xchg
adc
add
scas
sbb
inc
pop
js
jbe
movsl
frstor
push
jb
push
jl
cli
cld
dec
cli
jns
or
in
leave
sarb
mov
mov
inc
sub
mov
stos
popf
jge,pn
cli
rorl
or
shll
jle
xlat
aad
push
pop
xor
pop
push
fdivl
cld
out
and
push
cmp
push
iret
adc
addr16
movsb
loopne
leave
push
sbbl
dec
push
push
inc
sbb
aaa
jnp
pop
call
stos
mov
ljmp
fcoml
mov
das
mov
or
pop
int
int
fcmovnbe
and
sbb
push
in
dec
mov
aad
xor
jne
cmp
fcomi
mov
gs
sahf
ret
cmp
inc
in
gs
inc
mov
mov
lcall
push
mov
lcall
repz
pop
xchg
arpl
insl
xlat
lods
fistps
mov
popa
leave
aad
dec
pop
and
lods
inc
cs
cmc
loope
jbe
cmc
cmc
mov
inc
push
movsb
shr
adc
push
int
lret
roll
daa
int3
push
in
fxch
call
aam
xor
lret
adc
push
push
push
xchg
mov
enter
jecxz
icebp
stc
or
ss
xchg
lret
pop
push
mov
divl
ficoms
push
jne
out
into
pop
xchg
fdivs
loopne
add
inc
jmp
lret
in
xor
test
mov
push
mov
rcll
mov
pop
push
adc
and
call
gs
xchg
rorl
adc
je
mov
inc
call
add
aaa
pop
sub
arpl
inc
push
iret
fisubs
lods
push
leave
inc
insb
sbb
dec
jnp
adc
xor
dec
mov
cmc
dec
in
orb
pop
push
lret
adc
lret
push
leave
in
shrb
push
nop
cli
add
sti
adc
adc
int
mov
cwtl
fwait
xlat
lret
into
xchg
cmp
mov
loop
pushf
add
fcomps
stos
lds
adc
add
inc
lret
pop
roll
enter
aad
cmc
dec
push
and
xor
inc
xchg
fcmovnbe
jnp
push
mov
imul
jle
enter
xchg
or
mov
push
adc
in
or
out
push
push
push
mov
iret
pop
fs
ds
mov
je
dec
iret
out
scas
loop
mov
aad
lods
out
enter
push
xchg
jmp
std
in
fwait
test
aam
sbb
imul
pop
aad
adc
psrlw
stos
adc
fisubs
adc
pop
and
mov
mov
mov
or
or
push
mov
xchg
add
dec
push
jb
push
push
dec
mov
aad
xor
icebp
adc
pop
push
fdivs
xorl
fcoms
mov
push
fsubrs
fimuls
pop
jae
push
scas
rclb
inc
pop
mov
push
jl
dec
dec
int3
inc
rorb
leave
push
dec
push
push
repz
push
push
push
push
rorl
aad
aam
dec
lret
cmp
push
dec
cs
shrl
cmp
clc
rcrl
aad
sbb
dec
push
push
jmp
test
shrl
push
push
push
jb
or
loopne
pop
fldenv
push
push
iret
subps
pop
mov
and
stos
mov
subb
inc
loope
in
xlat
mov
scas
xor
or
adc
mov
dec
push
jb
fmull
pop
push
push
push
adc
js
dec
int3
inc
push
loop
imul
dec
enter
inc
loopne
in
icebp
in
sub
shr
notb
loop,pn
pop
call
dec
or
rcll
jo
cmp
cmp
xchg
sub
jle
aad
addr16
and
aad
dec
dec
adc
push
call
aaa
pop
dec
loop
dec
lret
push
mov
inc
mov
loope
or
adc
imul
dec
int3
mov
sub
mov
stc
pushw
ficoml
subps
dec
push
pslld
rolb
rorb
push
push
call
xlat
push
mov
or
es
push
fdivs
mov
call
dec
pop
clc
fwait
pop
mov
cmp
dec
loope
mov
dec
add
clc
lret
and
dec
fcomp
mov
lea
sbb
es
shr
jle
movsl
frstpm(287
xchg
sub
js
dec
push
adc
mov
aad
int
mov
call
sbb
inc
call
dec
mov
adc
mov
sub
mov
out
iret
push
adc
inc
mov
ret
pop
fwait
call
es
mov
ss
jae
mov
imul
adc
and
aad
jp
fstpt
dec
cwtl
rcll
inc
mov
aam
out
cwtl
aad
mov
or
cwtl
aad
jle
sbb
aad
fnstsw
mov
or
fstpl
call
inc
cmpsl
inc
stos
mov
cwtl
sub
inc
aad
jle
xchg
int
aad
jle
mov
inc
aad
int
popf
mov
pop
push
push
stos
ret
cmp
or
outsb
fisttps
dec
push
insb
fwait
xchg
mov
dec
xchg
adc
pop
dec
push
enter
or
shrl
xchg
push
fwait
push
aad
dec
or
orps
push
stos
call
sbb
pop
push
push
mov
dec
adc
pusha
pop
int3
push
mov
push
xchg
push
mov
adc
pop
or
leave
push
stos
sahf
lods
xchg
sbb
push
push
icebp
add
pop
push
jbe
addr16
lret
push
or
adc
and
mov
mov
daa
test
sbb
rolb
cmp
imul
push
in
xchg
xlat
push
js
or
dec
push
xchg
insl
or
test
push
cmc
push
mov
dec
popl
dec
int
fdivs
jmp
inc
jp
xor
inc
cli
rcrb
mov
adc
jno
sbb
fdivs
ja
add
or
pop
push
push
rorl
call
push
dec
push
mov
sbb
aad
repz
into
lret
mov
loop
int
dec
dec
insl
repz
in
jno
jae
pusha
push
push
push
pop
jbe
pop
adc
mov
pop
insl
mov
repz
push
sub
cmc
jns
xor
dec
inc
or
pushf
push
pop
out
mov
call
push
imul
out
mov
lcall
and
adc
xchg
mov
xchg
jns
push
adc
add
pop
loop
mov
cmc
push
mov
cwtl
inc
push
sbb
push
leave
bnd
mov
ljmp
cmc
jle
outsb
cmc
push
and
push
push
cmc
fabs
movsb
loopne
cld
repnz
push
fwait
xor
push
xchg
cmc
push
loope
in
dec
mov
pop
call
int3
stos
shlb
push
push
adc
push
test
pop
pop
dec
push
loop
int
mov
xchg
push
sarb
pop
ret
sub
push
fsubrs
mov
xlat
hlt
push
dec
mov
inc
xor
pop
fdivrs
push
push
fcoml
divl
mov
cwtl
push
and
in
push
rorl
fdiv
cmpsl
pop
scas
and
rcr
push
xchg
mov
inc
aaa
mov
test
mov
dec
inc
cmc
gs
sub
outsb
push
pop
dec
xchg
inc
cmp
cmpsb
pop
shlb
mov
ds
ret
fcmovne
or
repnz
in
leave
scas
dec
aad
sbb
sbb
shl
and
outsb
pop
mov
je
mov
push
push
mov
rcrb
fs
push
fistpl
push
adc
xchg
lock
lret
push
enter
push
mov
push
mov
jmp
fdivrs
ss
push
or
cmpsb
rcl
in
dec
in
push
or
push
push
insl
xor
repnz
test
negb
pop
adc
aad
push
call
movsl
es
insb
sti
rorl
push
xchg
mov
sbb
pop
rol
test
add
mov
lds
sbb
mov
mov
sub
test
repnz
xlat
clc
push
push
mov
test
mov
mov
outsl
insb
sbb
stos
aad
call
and
lds
loopne
out
clc
pop
push
gs
imul
mov
call
out
pop
mov
mov
int3
in
ss
dec
mov
inc
pushf
push
pop
adc
dec
insb
sbb
mov
sbb
movsl
jbe
outsb
shrl
push
cmpsl
aad
jle
mov
rcr
dec
xor
fdivs
lret
xlat
or
and
lock
pop
lret
and
ss
dec
jne
sbb
call
push
rcll
fcomp
hlt
push
jb
xchg
or
in
sti
repz
int
push
ficomps
inc
rcl
push
push
mov
int3
scas
push
dec
xor
rcl
pop
push
push
cwtl
in
mov
ficoml
cmpsl
push
rorb
fcoms
jo
adc
mov
dec
pop
adc
je
int
dec
leave
adc
jecxz
push
xor
sbb
pop
mov
add
fcoms
push
pop
fs
xor
dec
shl
pop
rcll
sbb
leave
push
call
movsb
xchg
rcl
push
mov
enter
mov
shl
dec
push
out
adc
callw
iret
rcrl
and
lods
add
and
mov
mov
pop
clc
mov
call
lods
out
cmp
sub
mov
call
add
shr
sti
adcb
aad
nop
out
jnp
rcr
xor
sti
pusha
push
int3
nop
call
out
sub
lret
pop
xlat
jno
or
sub
int3
stos
aad
fcoms
and
movsb
loop
push
js
pop
push
fcoms
aad
aam
mov
xlat
imul
fsubr
lret
aad
lahf
js
lret
hlt
cmp
push
xchg
xor
icebp
xchg
lret
jmp
or
adc
arpl
mov
mov
push
dec
xor
outsb
and
les
iret
bnd
mov
push
push
fsts
movsb
js
fsubs
aad
dec
pop
orps
aam
divb
int
sub
ficomps
int
push
rolb
dec
fsts
sub
enter
pop
dec
fnstcw
scas
add
dec
leave
loope
sahf
test
rolb
dec
sub
jae
sahf
test
mov
into
pop
push
or
mov
pop
jae
sahf
jne
enter
leave
aas
repz
dec
movsb
dec
loopne
push
dec
aam
lea
aam
rcl
cld
dec
insb
je
pop
out
inc
aaa
lret
mov
std
jmp
mov
in
test
out
pop
and
sub
ja
loope
xor
fcom
mov
xor
dec
iret
sub
sti
push
push
mov
xlat
call
adc
cmp
sbb
lds
addr16
ss
rorl
cs
cwtl
sahf
sarb
gs
dec
push
dec
push
rcll
in
inc
rcr
aam
mov
or
lret
mov
shlb
fdivl
add
mov
dec
dec
push
xchg
mov
call
adc
push
pop
test
rolb
je
mov
fcoms
xlat
xchg
in
sbb
leave
push
aam
or
fsubr
xor
lret
nop
push
push
aam
insl
test
push
ss
dec
or
ret
movsb
jb
and
sub
mov
lret
repnz
icebp
fcoml
pop
mov
mov
pusha
aad
mov
push
stos
enter
enter
push
sub
mov
inc
mulb
dec
cli
imul
enter
inc
repz
shll
or
or
leave
xor
xchg
outsb
or
fistpll
or
lock
aam
inc
or
jb
push
add
adc
dec
push
loopne
jno
stc
mov
in
mov
ja
adc
push
flds
push
fcomp
mov
sbb
hlt
or
push
ret
adc
aaa
call
imul
enter
fst
hlt
xchg
push
or
cs
jmp
pop
nop
icebp
push
aad
dec
push
out
in
into
mov
repz
out
adc
sub
ror
enter
int
sub
scas
adc
push
aas
pop
jnp
cmp
or
lret
ss
movsl
adc
mov
mov
cmp
leave
push
mov
jmp
push
icebp
cmp
xchg
mov
int
ficoms
scas
cmpsb
mov
aam
ret
in
ret
push
into
nop
inc
push
roll
mov
add
sbb
fs
push
adc
xchg
in
pop
imul
and
xlat
adc
rorl
mov
or
push
scas
push
mov
mov
lret
iret
xor
in
fsubs
push
sbb
in
ficomps
dec
fdivs
pop
mov
aam
rcl
push
lret
rcrl
adc
lret
shlb
aad
repz
jb
leave
lret
lds
or
icebp
insl
iret
mov
lock
sub
loopne
push
movsl
mov
push
in
push
insb
mov
shlb
push
push
sahf
dec
push
cs
sbb
mov
int3
adc
fsts
shlb
loopne
insl
jmp
leave
jno
dec
jmp
shl
jae
ror
iret
in
and
xchg
cmp
push
mov
jnp
lret
ja
mov
fcmovne
add
loopne
dec
push
lds
icebp
or
scas
popa
lods
and
mov
das
pop
or
and
cwtl
and
sahf
call
mov
arpl
push
ret
shl
dec
sub
inc
int
outsb
stos
sbb
or
es
ds
mov
and
jbe
xchg
jnp
out
mov
mov
inc
xchg
or
lret
fwait
adc
cmp
dec
dec
xor
out
mov
aad
ret
sub
push
ror
add
push
sub
cltd
imul
jbe
xor
imul
adc
mov
in
movsl
aad
sbb
aaa
push
xlat
or
add
adc
push
ss
ret
ficoms
xor
push
add
cs
shl
sub
xchg
pop
aam
push
and
sti
inc
call
dec
aad
cltd
push
adc
mov
push
inc
lahf
mov
cmc
fdivs
jno
in
jne
push
pop
cli
pusha
xchg
leave
pop
pop
addr16
int
call
orl
mov
xchg
inc
push
mov
imul
pop
test
lods
or
inc
data16
xchg
es
adc
push
ss
lea
mov
or
jae
iret
sbb
dec
leave
push
xor
gs
xchg
popa
mov
dec
in
push
push
xchg
and
mov
dec
adc
icebp
call
pop
call
xchg
xor
call
icebp
cmp
adc
sbb
imul
jmp
nop
call
mov
jb
scas
xor
filds
mov
push
scas
dec
call
out
push
add
enter
outsl
sbb
mov
mov
xchg
fdivs
adc
push
lea
or
mov
test
adc
mov
fildl
ss
aad
aam
lret
lds
mov
mov
leave
ja
test
lahf
xchg
mov
mov
lret
mov
fldt
adc
xchg
push
ret
push
xor
fldenv
inc
daa
mov
cld
add
add
pop
test
call
imull
out
mov
push
push
call
lock
ja
and
mov
gs
shll
pop
test
adc
mov
add
adc
push
dec
or
push
sub
or
mov
pop
cs
push
int3
cmp
push
inc
ja
dec
push
push
test
rcl
sub
and
push
in
inc
shlb
push
loop
into
jbe
imul
leave
fisttpl
clc
imul
adc
pop
mov
stc
lcall
dec
push
cs
fcom
into
jae,pn
repz
call
fcom
push
xchg
es
int
call
fs
fisubrs
popa
push
or
fisubrs
int
adc
mov
insb
add
stc
sahf
add
int
popf
push
ror
test
and
int
push
jne
mov
xchg
int
loopne
int3
sub
jecxz
mov
jb
mov
adc
mov
sbb
xlat
fwait
loope
push
jae
sahf
rcl
jne
cmp
fmul
cmp
or
jmp
hlt
cs
movsl
aad
dec
jmp
pushf
mov
cmp
shrb
rcll
mov
push
adc
ret
xlat
aad
lods
push
movsl
int
dec
aam
shll
adc
ja
lahf
andl
cwtl
enter
ss
cmp
xchg
in
mov
out
lret
in
mov
sbb
sbb
dec
cwtl
mov
mov
push
scas
jne
sbb
or
adc
ret
pop
xchg
fimuls
iret
dec
push
dec
jmp
dec
cmc
in
rcrb
fcoms
xor
ficomps
adc
call
lcall
pop
dec
shlb
and
dec
aad
scas
ffree
mov
notl
adc
repnz
adc
mov
xor
aam
adc
push
mov
aad
dec
scas
push
xlat
xchg
mov
dec
call
cmp
cwtl
adc
xchg
call
xchg
repnz
in
dec
mov
out
mov
rorb
add
pop
lret
not
rclb
cmpsl
dec
push
nop
add
pop
in
xchg
adc
inc
mov
mov
sbb
stos
jg
xor
addr16
fcoms
mov
mov
adc
mov
into
adc
nop
push
loopne
push
adc
dec
adc
loopne
and
xlat
seto
mov
push
loop
mov
xor
loopne
leave
mov
ja
mov
call
fmuls
or
push
aad
fbld
push
push
stos
fcom
dec
and
ss
sbb
imul
push
sub
mov
leave
and
add
outsb
nop
in
mov
shr
fsubrp
or
loopne
pop
sub
scas
test
aas
push
mov
aad
in
mov
and
int
mov
aaa
pop
and
leave
adc
xchg
test
stos
movsl
push
imul
mov
dec
and
fcmovne
push
push
and
xchg
fsubr
lret
mov
dec
xchg
jb
jle
out
leave
push
call
pop
loopne
inc
xor
popa
cmp
fstpl
or
pop
dec
cs
adc
mov
aad
sbb
dec
cmc
lretw
leave
xlat
xchg
push
push
loop
fcmove
in
leave
movsl
fs
cld
loop
mov
cli
xor
rorl
repnz
nop
pop
shlb
iret
dec
mov
sbb
jp
cmp
pop
lret
push
icebp
xor
xor
icebp
xchg
adc
int
call
pop
push
adc
sahf
sub
rcl
adc
int3
xlat
arpl
or
jp
shl
or
mov
jp
sbb
shlb
adc
aad
fisttps
mov
call
outsb
adc
adc
adc
arpl
prefetcht1
in
pop
cli
xchg
dec
or
jp
pop
push
add
rcll
push
dec
push
add
xchg
call
add
aam
pop
call
jg
or
dec
test
rcl
adc
cmp
and
loop
insb
scas
sbb
into
mov
push
adc
into
mov
cmc
fstps
imul
in
cmpsb
test
adc
xchg
push
xor
push
in
sub
daa
xchg
fimuls
add
test
loope
aad
or
aaa
out
int
pop
inc
or
leave
adc
dec
in
sarb
es
fisttps
and
std
in
lcall
mov
lea
mov
aaa
lods
pop
xchg
xor
divb
pop
call
inc
mov
ret
adcb
aad
jno
and
mov
das
dec
dec
into
lcall
jecxz
icebp
hlt
inc
js
push
fadd
mov
mov
and
aaa
rorl
push
mov
push
mov
xchg
lods
rorl
aaa
sub
pop
pop
push
cwtl
lret
ljmp
out
ficoms
ret
rcl
xchg
sub
adc
fisttpll
mov
and
xor
cwtl
push
mov
insl
scas
cmp
xchg
mov
or
push
loopne
shl
dec
fidivs
hlt
jb
call
int3
adc
rcll
push
pusha
pop
adc
lea
mov
popa
sbb
jne
push
adc
mov
aam
ss
rcll
push
call
cwtl
mov
adc
shlb
out
fwait
mov
lods
mov
jg
mov
in
cmp
xor
aad
dec
outsb
cld
mov
dec
xor
push
aam
xor
int
inc
ror
dec
dec
hlt
push
dec
fcoms
insl
enter
dec
mov
dec
enter
dec
in
lods
in
jge
mov
dec
adc
sbb
push
xchg
mov
push
sarb
inc
xor
mov
mov
int3
cwtl
pop
xchg
enter
dec
dec
mov
xchg
int3
in
push
jo
xor
and
dec
add
dec
or
pusha
shlb
insl
push
fwait
or
ds
pop
lret
dec
in
imul
loopne
les
rol
xchg
mov
dec
ret
mov
packsswb
cmp
pop
mov
mov
xor
or
gs
push
cmp
xchg
popf
sbb
add
push
imul
in
insb
dec
pop
inc
sub
or
sub
dec
cli
and
sbb
or
mov
cmovb
popf
daa
pusha
cmc
cmp
mov
in
push
lds
mov
dec
out
or
push
lret
pop
push
mov
add
push
push
xchg
push
xchg
push
rclb
leave
add
sub
push
daa
popf
add
ja
mov
inc
mov
ds
cmc
adc
mov
clc
dec
adc
in
adc
sbb
inc
inc
stos
cmp
out
xchg
aad
dec
xor
dec
insl
stos
aad
sub
push
push
loopne
mov
in
mov
xor
pop
test
aaa
sbb
shl
call
fldl
push
jne
inc
mov
push
cmc
sub
push
test
jo
into
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
jbe
dec
jne
inc
insb
outsl
jae
add
add
jae
outsl
jb
inc
inc
add
add
je
arpl
insb
insb
push
popa
outsb
add
add
je
jbe
outsb
je
add
push
outsb
jb
imul
popa
jae
inc
add
pop
dec
add
add
inc
imul
outsl
ja
js
add
add
imul
call
add
push
gs
je
gs
push
outsl
fs
and
fs
jae
call
mov
jmp
add
push
arpl
insb
add
loope
je
lea
jb
pusha
pushf
pushl
ret
add
inc
push
imul
outsl
insl
push
outsl
imul
add
add
je
outsb
jne
je
je
add
add
jbe
insb
imul
je
add
inc
jb
popa
je
inc
imul
gs
jb
arpl
fs
jae
add
movsb
out
jbe
xchg
ret
push
push
clc
lods
mov
incb
sahf
into
xchg
ss
dec
push
adc
test
mov
movsb
rol
xchg
nop
mov
add
clc
lds
lods
push
int3
mov
stos
jno
imul
cmp
jno
clc
in
mov
xchg
popa
in
shrb
push
adc
xchg
fstpt
xchg
andl
addl
inc
inc
js
js
inc
popw
in
ljmp
jmp
adc
sbb
cmpsb
mov
mov
sahf
addr16
orb
jno
mov
enter
int3
jg
mov
nop
rclb
cmc
mov
inc
mov
lret
lret
adcl
xchg
push
jmp
outsl
or
mov
xor
cmpsb
arpl
mov
int3
mov
adc
mov
sbb
lret
mov
sbb
mov
cld
scas
aad
aaa
jno
lcall
out
mov
or
insb
or
sub
push
add
mov
inc
jns
outsl
jns
outsl
jne
or
cmp
gs
jb
arpl
jae
gs
jo
ror
cmc
pushw
popfw
call
jmp
add
dec
imul
add
je
imul
je
add
inc
gs
imul
arpl
add
jb
popa
je
add
add
je
imul
sub
add
add
gs
je
push
popa
insb
gs
add
add
imul
inc
insb
outsl
jae
add
add
jbe
dec
jne
push
gs
je
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
jbe
dec
jne
inc
gs
jne
inc
gs
add
add
jo
jns
insb
imul
add
mov
ror
bsf
lea
mov
stc
clc
bt
bt
push
pusha
pushf
mov
pushf
pusha
movb
push
or
lea
jne
pushf
push
push
lea
je
bt
mov
sbb
pushf
test
mov
pushf
push
sub
pushf
test
shr
lea
bt
pusha
pushl
clc
cmpl
jmp
pushf
pushf
rep
call
add
dec
jae
arpl
imul
gs
je
inc
dec
inc
imul
clc
pushl
xor
stc
not
mov
bt
ror
pushf
lea
call
call
call
mov
jmp
pop
and
lahf
in
in
in
out
ljmp
pop
out
and
pop
lock
ret
repz
jb
inc
sbb
daa
inc
and
add
inc
gs
popa
jo
outsl
fs
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
ja
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
std
call
add
ljmp
gs
imul
outsl
arpl
push
call
xor
add
je
imul
js
dec
outsb
addr16
inc
add
add
je
gs
dec
jne
inc
add
add
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
outsl
insb
xor
cs
insb
add
add
jne
inc
imul
gs
imul
pusha
pushl
pushl
ret
add
inc
js
push
gs
arpl
imul
add
arpl
jae
bound
clc
bsf
neg
mov
lahf
aam
mov
js
add
push
pushf
xchg
not
lea
lea
jp
pushf
movw
movl
jmp
add
push
outsb
push
gs
js
gs
imul
gs
pusha
lea
jae
jmp
call
add
movb
lea
jmp
add
inc
gs
jb
jo
add
inc
push
neg
mov
pushl
cmc
jmp
add
inc
jb
popa
je
inc
inc
inc
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
inc
gs
insb
imul
inc
popa
je
add
add
data16
je
arpl
add
insb
insb
push
imul
outsl
arpl
pushf
mov
movb
movl
call
add
push
je
jb
inc
outsl
arpl
add
inc
outsl
insl
jo
jb
push
je
imul
inc
gs
jo
outsb
inc
imul
add
std
call
add
add
push
outsb
insb
outsl
arpl
imul
je
imul
outsl
jb
add
inc
outsb
popa
bound
imul
add
push
imul
popa
bound
add
fs
je
bt
test
mov
jmp
add
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
add
outsb
push
jb
outsb
je
jb
add
add
insb
insb
push
imul
mov
add
add
push
gs
dec
jne
inc
add
add
insb
gs
imul
jae
gs
push
imul
jmp
add
insb
jae
jb
outsb
inc
add
aaa
pushf
mov
pushf
pushl
ret
lea
je
pusha
pusha
lea
jmp
push
push
xor
xor
fs
insb
add
std
call
add
cltd
hlt
mov
bound
xor
pop
cmp
push
dec
jns
std
shlb
out
mov
sbb
int
sarl
push
mov
mov
mov
xchg
mov
add
fs
je
sbb
push
mov
rcl
mov
jmp
add
push
gs
gs
popa
insb
jne
inc
js
add
out
movsbw
add
and
shrd
add
call
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
jne
jae
jb
outsl
jae
add
push
gs
imul
gs
cmp
pushf
jmp
push
dec
dec
dec
dec
cs
insb
add
jns
and
mov
ds
pop
xor
loope
and
sub
je
fs
jo
cmp
shrb
xchg
xor
imul
jnp
adc
mov
add
test
std
pop
xchg
push
sub
sub
mov
pop
pop
pop
inc
push
and
insb
xor
mov
ljmp
dec
pop
cmp
mov
fidivs
adc
push
push
dec
insb
jbe
dec
je
pusha
dec
in
mov
cmp
adc
fidivrs
repz
gs
rcrb
dec
aaa
popa
lret
dec
push
dec
fiaddl
in
cmp
adc
jae
pop
fcomps
xchg
xchg
out
cltd
xchg
shl
in
imul
jmp
adc
call
add
insb
jae
jb
insl
jo
add
add
outsl
inc
push
add
std
call
add
in
add
inc
jne
insb
imul
outsb
fs
add
add
imul
push
je
jo
mov
pushf
mov
jmp
add
dec
outsl
jbe
push
outsl
inc
js
add
push
gs
imul
inc
js
inc
js
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
push
xor
cs
insb
add
rcrb
add
gs
jae
jne
jb
outsb
je
insb
imul
add
call
test
push
call
jmp
add
push
gs
insb
outsl
jae
dec
gs
add
insl
imul
insl
dec
jo
outsb
add
test
pusha
stos
pushl
lea
jmp
pushf
sub
push
call
add
inc
gs
insb
addr16
je
insb
dec
inc
add
add
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
add
imul
insb
gs
bound
arpl
add
outsl
bound
inc
imul
inc
add
std
call
add
in
sbb
add
inc
gs
jns
je
insl
push
imul
xor
cs
insb
add
rorb
pop
arpl
add
cmpsb
clc
adc
lods
cli
mov
ljmp
clc
and
cld
out
loopne
shlb
leave
xchg
mov
jl
rclb
nop
xor
push
jb
xor
xor
add
dec
ljmp
mov
or
inc
sub
movsl
mov
and
imul
mov
mov
mov
adc
mov
out
movsl
jo
popa
jp
jg
movlps
fcmovne
sub
sbb
idivl
and
xchg
mov
cmpsb
xchg
mov
sbb
pop
sbb
lret
dec
add
adc
push
cmpsl
sub
lcall
mov
mov
mov
scas
and
jp
lods
cltd
stc
int
icebp
xor
xlat
lret
dec
daa
pop
daa
cmp
sub
cmp
and
insl
popa
addr16
imul
je
outsl
jns
add
inc
gs
jne
jb
outsb
je
bound
arpl
push
pop
push
sub
xchg
add
cwtl
jno
js
sbb
fdivrl
pushf
repnz
fisubs
repz
loope
fdiv
loop
jno
cs
test
jne
push
test
out
pop
xor
pop
jo
insb
jle
push
and
push
es
pushf
mov
mov
sub
add
js
out
xchg
leave
inc
es
push
pop
xor
jmp
sti
popa
addb
int3
pushf
bnd
arpl
jg
aaa
add
jae
sub
mov
ss
pop
rcrl
outsl
add
sbb
ljmp
ret
in
xchg
stos
pop
iret
rcl
sub
ja
xor
iret
mov
dec
jl
push
cmp
cmp
xor
adc
xchg
sub
cmp
jle
push
push
lock
and
sti
inc
frstor
mov
ljmp
sahf
test
stc
out
xchg
mov
adc
add
insb
inc
imul
insl
bound
gs
outsb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
xchg
add
stc
pushf
add
call
push
call
sub
add
push
imul
outsl
dec
jne
je
inc
jns
add
lea
jae
pusha
pushf
pushf
inc
lea
push
pushf
lea
call
push
adc
call
mov
pushf
push
pushl
lea
call
ja
push
movb
adc
call
add
push
gs
je
dec
popa
outsb
fs
add
add
je
insb
addr16
je
insl
add
add
je
imul
add
add
fs
je
push
imul
jp
incl
add
imul
add
inc
jb
jns
je
imul
push
gs
fs
imul
insl
sbb
loop
mov
mov
fidivrs
mov
xchg
icebp
dec
sub
push
pusha
and
in
mov
mov
mov
adcb
shll
adc
iret
adc
shlb
xor
sub
sub
loope
in
xor
enter
rep
sbb
hlt
inc
jp
orb
int
test
stos
mov
sti
fldcw
jbe
ret
test
jo
cli
js
jbe
enter
xchg
cmp
int3
fdivrs
pop
stos
cmpsb
shll
pop
out
hlt
iret
idivl
loop
adc
jb
mov
adc
mov
std
addb
add
lea
xchg
and
sbb
rcll
mov
adc
popa
sbb
mov
or
adc
sbb
push
lea
add
ret
push
popl
bound
mov
jne
loop
add
lea
ror
shll
mov
add
xor
addr16
div
mov
sbb
xor
mov
xchg
mov
mov
fcmovb
adc
pop
mov
mov
shlb
ret
mov
pop
pop
data16
pop
adc
aad
shr
adc
es
push
and
ljmp
or
pop
and
call
dec
loope
ficoml
add
data16
pop
repz
mov
rcl
mov
mov
das
rolb
mov
fwait
dec
mov
xchg
cli
cmp
andps
call
aad
rol
push
cmc
mov
push
test
mov
cs
out
sahf
sub
dec
data16
test
pop
repz
xchg
out
push
lret
mov
fiaddl
push
inc
dec
fwait
push
movsb
xchg
loope
pop
data16
adc
fucom
mov
dec
call
jmp
int3
push
enter
mov
hlt
in
data16
xchg
bound
push
xchg
xlat
call
xchg
in
gs
test
adc
mov
jne
xchg
pop
push
mov
jge
call
push
adc
notb
imul
or
jne
movb
data16
lret
push
mov
jl
dec
rorb
rcr
mov
hlt
mov
jp
stos
out
push
aad
mov
inc
push
rorb
rorb
rclb
rclb
mov
mov
test
push
cmp
mov
rcrb
stos
ret
pushw
adc
xchg
pop
data16
bound
test
mov
or
mov
xchg
xchg
or
cmp
lcall
lcall
scas
test
push
fdivs
jne
push
lret
dec
dec
sbbb
push
cmp
pop
add
xchg
xor
ret
lods
hlt
push
cmpsl
rorl
push
mov
shll
adc
ss
xchg
adc
sub
lret
adc
xchg
pop
xchg
ret
dec
cltd
out
push
adc
push
leave
xchg
rorl
icebp
into
push
enter
scas
dec
cmp
out
lods
nop
out
jle
inc
dec
ror
jg
aad
sti
rcl
shl
jnp
mov
addr16
lods
rorb
xlat
jnp
rcl
sbb
mov
add
sub
push
xchg
rorb
ret
cmpsl
iret
popa
iret
ss
inc
in
inc
xlat
mov
test
push
pushf
fiadds
sti
cs
push
pop
cltd
fcomps
push
sbb
push
rcrl
sbb
cmpsl
out
pop
mov
inc
add
lea
lcall
lret
rcr
idivb
clc
adc
rclb
int
jae
fwait
gs
pop
mov
es
ljmp
pop
insl
xchg
push
ss
adc
imul
jnp
push
dec
sub
adc
push
pop
adc
dec
or
push
and
test
adc
add
shll
xchg
jmp
push
test
xchg
add
jbe
push
int
or
lea
push
jl
cmp
push
xor
std
push
pop
in
push
jg
in
xchg
sarl
xchg
cmp
sti
inc
push
or
pop
clc
add
xchg
inc
faddl
faddl
add
loopne
sub
jnp
scas
push
jg
test
sub
add
in
mov
adc
jnp
popf
push
pusha
push
repz
or
inc
push
adcl
lret
sbb
push
dec
push
sti
push
and
xchg
decb
or
push
inc
repnz
xor
xchg
es
push
adc
icebp
dec
jbe
push
stos
inc
dec
rol
lret
push
scas
xor
inc
test
jbe
push
aam
xchg
mov
cwtl
aas
jp
dec
jnp
and
out
sbb
into
xor
cwtl
iret
jns
loopne
loop
lock
decb
jbe
xchg
pop
push
int
pushl
dec
cld
shlb
jbe
jbe
into
jle
sub
mov
dec
sbb
mov
sub
cmp
inc
push
dec
out
icebp
flds
cmp
push
mov
xchg
push
int3
and
enter
loopne
or
cs
fadds
js
fcomps
adc
imul
call
aaa
mov
add
movl
repnz
lods
ret
out
daa
sbb
push
or
aad
test
jle
push
scas
idiv
in
push
int
add
jbe
pop
inc
mov
incl
loopne
push
rolb
mov
fsubrs
push
sbb
fs
jbe
mov
mov
aas
mov
adc
pop
lret
xchg
jge
dec
movsl
push
mov
jno
push
mov
fstpl
jge
in
jbe
cs
bound
int
movsb
xchg
sub
add
das
aad
push
pop
mov
adc
push
es
pop
add
notb
cmp
aad
stos
add
addb
int3
das
fidivs
jnp
int3
push
or
movsl
iret
inc
cld
push
popa
into
out
mov
add
inc
rcrl
cs
pop
in
xchg
sbb
test
push
sbb
outsb
pop
int
into
out
lods
shrb
jbe
push
mov
int
adc
popf
orb
mov
pop
mov
push
ljmp
int3
insl
mov
mov
adc
call
mov
push
rcll
pop
dec
push
rcll
adc
push
xlat
mov
shlb
adc
js
lds
lret
out
adc
adc
add
movsb
in
lret
xor
xor
jne
movsb
xchg
adc
pop
add
shll
test
pop
mov
out
into
xchg
or
call
movb
lret
pop
repnz
xchg
movsb
push
ds
xchg
push
fs
sub
push
dec
mov
push
adc
stos
jne
decb
xor
xchg
aad
clc
mov
cmp
and
sbbl
xlat
mov
pop
loopne
data16
mov
int
fiaddl
and
and
rcll
mov
xchg
daa
xchg
adc
je
mov
shll
ss
fucomp
stos
and
inc
jno
mov
adc
and
or
lock
loop
into
lock
add
push
les
mov
add
inc
call
adc
pop
movsb
and
jae
aaa
jb
add
and
into
outsb
push
mov
push
rcll
fs
popa
rcll
adc
into
jbe
sbb
xchg
mov
xchg
adc
pop
ss
adc
add
fdiv
adc
insl
push
fdivs
loop
cmp
and
jb
es
mov
out
adc
out
mov
aam
cwtl
call
inc
in
je
adc
mov
add
dec
mov
xchg
xchg
lods
call
shll
les
push
dec
pop
std
dec
push
int3
mov
sub
ds
roll
sbb
xchg
mov
lock
mov
scas
and
pop
hlt
cwtl
mov
pop
adc
push
fiadds
aas
dec
clc
xchg
sarb
xchg
ss
into
loop
push
xchg
orb
xchg
js
mov
loopne
adc
sbb
in
flds
mov
cmc
out
aas
mov
push
sbb
aad
xchg
xor
stos
scas
fcmovb
fcmovb
sub
push
adc
pop
push
int
dec
lea
xlat
xchg
shll
and
enter
pop
call
fcomps
and
mov
inc
and
dec
add
dec
andb
fstpl
add
push
inc
dec
fs
cwtl
add
adc
mov
rorl
dec
ret
xchg
ret
imul
out
mov
fnstenv
jno
push
sbb
sti
ds
xchg
aam
jg
insb
sbb
loop
push
push
inc
jg
popa
adc
push
adcl
jecxz
fcmove
in
mov
dec
sarb
cmpsb
mov
push
xlat
lret
lea
push
fidivl
or
pop
or
or
mov
mov
scas
ljmp
insb
fcmove
loopne
iret
dec
mov
xchg
adc
sbb
inc
mov
test
call
mov
rclb
mov
pop
lds
sub
cwtl
leave
mov
cwtl
neg
pushf
push
mov
rcl
outsl
je,pt
pop
inc
inc
cltd
add
xchg
dec
push
pusha
lea
xchg
aaa
add
or
rcrl
sub
iret
es
xchg
mov
dec
pop
int3
cwtl
push
in
cmpsb
and
addr16
fidivs
outsb
push
test
pop
push
xlat
mov
and
jmp
aaa
mov
int3
inc
pusha
or
xchg
mov
insb
rclb
push
aas
aam
scas
push
rcll
push
and
mov
rcl
dec
pop
jle
rcrl
mov
mov
xchg
push
adc
mov
loope
jmp
sub
xchg
xor
xor
add
fisubl
ret
fcmovb
pop
mov
in
add
rcll
adc
fsubs
mov
insl
pop
sbb
inc
xchg
call
call
sbb
push
jmp
iret
dec
inc
out
call
fisubl
xor
inc
xchg
mov
mov
mov
xchg
xchg
fdivrs
push
dec
xchg
cwtl
mov
out
dec
jae
inc
test
int
pop
into
or
popa
push
sahf
mov
shll
out
in
sub
sub
sbb
pop
and
inc
push
push
into
adc
data16
repnz
stc
xor
or
adcl
enter
data16
decb
cvtpi2ps
icebp
arpl
push
or
aam
popa
repz
cmpl
lods
in
lock
nop
cwtl
xor
lock
push
xor
lock
shrl
psrld
push
sbb
push
xchg
dec
add
cmc
stos
push
xor
iret
cmpsl
push
fadds
sahf
cmp
popa
sti
dec
je
adc
repnz
sbb
adc
inc
mov
adc
mov
jns
into
ret
ja
mov
aad
dec
shl
mov
adc
rorl
aaa
call
ja
adc
or
loopne
jb
and
adc
mov
cs
sarl
ret
and
jns
pop
scas
sub
in
into
adc
push
mov
cmp
ror
add
sub
icebp
setae
pop
jp
sub
xchg
xlat
and
pop
lock
pop
gs
clc
push
mov
push
mov
dec
or
push
mov
frstor
lods
inc
push
pop
and
aad
outsb
xor
mov
jns
jb
repnz
ss
pop
push
dec
xchg
pop
jg
xor
sbb
or
inc
gs
movups
mov
sbb
lret
int
or
or
adc
repnz
imul
push
sarb
in
aad
lea
iret
pop
push
xchg
aas
int3
shll
lods
mov
mov
aaa
cmp
test
inc
rcrb
jecxz
insl
push
sbb
xchg
or
or
rorl
mov
pmullw
pop
push
psraw
xchg
int3
int3
movsb
out
les
aad
xchg
jnp
sti
cmpsb
xor
inc
dec
add
mov
loop
and
jb
inc
push
repnz
test
push
mov
test
mov
lock
and
call
movsb
cmc
mov
dec
jbe
mov
jmp
dec
into
int3
ficomps
in
dec
sub
or
or
std
int3
jne
add
push
sbb
jb
xor
cmc
scas
iret
and
jno
dec
mov
or
and
xchg
es
adc
add
stos
jnp
mulb
inc
push
push
fcom
mov
leave
adc
pop
lea
adc
mov
cmpsl
clc
xchg
jbe
xor
inc
cld
or
out
fcoml
adc
dec
push
push
or
lret
fnstenv
or
in
adc
cmp
sbb
int3
js
mov
mov
int3
leave
xchg
xorb
cmpsb
adc
or
pop
int3
aad
dec
cmp
xchg
dec
dec
cmc
dec
insb
repz
sub
int3
xchg
dec
xor
andl
leave
lds
addr16
sub
fisubrl
and
xchg
mov
fisttpl
xchg
xchg
stos
and
jne
mov
xlat
ret
std
aad
aaa
jb
lods
lea
sbb
fsubrs
js
push
push
push
dec
ljmp
mov
clc
xchg
in
jp
mov
into
cs
adc
sub
gs
aam
jg
sbb
imul
mov
notb
push
mov
scas
lcall
sbb
sahf
pop
int
int
sbb
adc
adc
or
shl
sbb
rcll
jl
push
flds
ror
in
adc
stos
mov
push
xchg
xchg
les
push
out
sub
aad
fstl
addr16
push
mov
cmc
rorl
scas
push
xlat
test
jno
xor
mov
adc
jae
mov
dec
stos
push
adc
rcll
adc
aad
xchg
in
rorw
int
iret
jo
and
jle
sbb
or
sub
fidivs
loopne
call
sbb
dec
stos
or
int
cwtl
out
xchg
mov
arpl
int
int
insb
adc
in
repz
jb
jo
pop
push
xchg
bound
orps
fsubrs
shrl
pop
subl
fcompl
xor
pop
aam
xchg
cs
cmc
mov
mov
aam
push
mov
out
dec
mov
xor
xor
pop
adc
rclb
imul
and
adc
jle
insb
hlt
adc
add
icebp
jl
adc
pop
xor
dec
mov
xchg
loope
inc
notb
xchg
fstl
sbb
adc
into
mov
mov
aad
mov
xchg
fcomps
inc
push
gs
out
mov
std
xchg
mov
xchg
sahf
or
add
pop
in
xchg
pop
add
mov
leave
mov
popa
outsb
or
cs
clc
inc
fsubr
lods
mov
int
mov
lret
or
fistps
scas
enter
sub
sbb
test
into
mov
adc
shll
push
or
lods
arpl
fcoms
dec
xchg
dec
lret
xchg
mov
bound
lods
clc
in
or
pop
pop
jae
int
jl
sahf
orl
je
sbb
mov
add
jecxz
mov
pop
push
rcr
je
cwtl
add
xor
cmp
idivb
jae
out
loope
jb
sub
fistps
push
int3
xchg
icebp
out
xchg
push
or
push
insb
push
rclb
push
or
flds
xchg
int
and
inc
mov
pop
loope
roll
out
push
mov
seto
mov
push
xchg
ljmp
cmc
sbb
jo
jo
sub
cwtl
int3
inc
or
mov
mov
xor
test
pop
mov
xorb
out
es
or
insl
pop
mulb
sbb
and
bnd
mov
adc
lds
push
dec
pop
push
lret
rorl
pop
pop
pop
push
mov
and
sub
dec
sbb
divps
popa
xor
push
jae
push
aam
jmp
mov
jae
in
jae,pt
dec
test
add
inc
cmp
adc
and
mov
ret
sbb
rcr
and
jbe
adc
mov
in
adc
inc
mov
jno
mov
imul
int3
ret
shll
stos
add
push
jne
adc
push
or
ds
mov
lods
push
iret
and
xlat
mov
jecxz
inc
jb
jle
or
out
sbb
adc
cmp
or
data16
cli
jle
rcll
adc
repnz
sub
push
aam
mov
mov
xchg
pop
or
adc
icebp
loopne
loope
push
cmp
mov
sub
sub
sbb
clc
xchg
rol
in
shr
xor
or
pop
call
outsb
mov
xchg
fsubs
xchg
out
rcrb
push
pop
psadbw
dec
adc
test
push
js
inc
jbe
or
ret
iret
xchg
shl
adc
bound
push
sahf
pop
data16
jo
into
xlat
movsl
fistpll
out
das
popa
dec
pop
daa
ljmp
pop
iret
mov
and
inc
cmp
add
add
adc
xor
and
adc
add
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
js
insb
jne
gs
insb
imul
jmp
add
inc
gs
gs
dec
outsb
jne
stc
cmc
add
jmp
jmp
add
inc
imul
dec
gs
popa
addr16
add
add
popa
insb
gs
imul
je
js
push
call
push
test
add
gs
je
push
imul
inc
add
add
je
gs
imul
and
call
push
test
pushl
cmp
pusha
jmp
bt
bt
call
clc
cmp
call
add
inc
jno
popa
insb
push
arpl
add
je
outsb
jne
push
call
inc
xor
push
je
jb
push
popa
add
or
cmpl
add
cmc
clc
sub
call
lea
ja
call
pushl
xchg
movsbl
pushl
popl
movzbl
bswap
not
lea
push
movl
pusha
mov
pusha
pushl
ret
inc
lea
inc
pushf
inc
inc
inc
add
cmc
cmc
xchg
aaa
mov
cmp
dec
rcl
or
mov
cmp
push
cmc
neg
sub
push
mov
pushf
clc
call
add
dec
outsl
popa
fs
imul
add
add
je
jb
gs
jb
arpl
jb
inc
add
subl
add
lds
lea
call
call
rcl
sbb
rcr
bsr
xor
not
setb
xchg
not
pop
lea
pop
movzbl
movsbw
pop
push
movb
pusha
mov
jmp
mov
fwait
xor
cmp
aas
jne
sub
jg
push
xchg
xchg
nop
xor
cmpsb
mov
sbb
pop
push
inc
sub
inc
sub
ja
jecxz
cmp
out
sbb
dec
std
dec
jo
sbb
inc
adc
and
js
push
push
inc
ss
outsl
gs
sub
dec
jo
cltd
shr
out
or
adc
mov
push
sub
scas
adc
xor
divl
cwtl
stos
mov
xorb
add
imul
add
add
push
gs
imul
popa
jae
dec
bound
arpl
add
jb
jne
insb
inc
jb
add
add
outsl
dec
push
add
in
sbb
fstps
xchg
ja
aas
push
sub
js
cmp
push
dec
scas
shr
cmpsb
hlt
lret
mov
movsl
xchg
in
cltd
mov
inc
outsb
fs
popa
add
add
jb
popa
je
gs
popa
addr16
add
or
pushf
movb
lea
je
cmp
clc
cmp
pushf
pusha
lea
je
call
push
call
hlt
and
add
inc
insb
imul
arpl
outsb
add
add
je
jb
imul
imul
dec
insb
gs
outsb
imul
add
add
je
imul
outsb
je
js
dec
gs
jo
add
push
pushf
pushf
pushl
ret
add
push
push
js
arpl
gs
add
addl
incl
add
gs
je
inc
imul
outsb
addr16
add
fyl2xp1
pushf
addl
push
pusha
lea
jmp
add
insb
jae
jb
jo
outsb
inc
add
add
gs
je
push
outsl
insb
imul
add
push
gs
imul
dec
jb
inc
js
add
dec
jae
popa
fs
jb
je
push
je
add
add
outsl
jae
inc
insb
imul
add
add
insl
popa
jo
imul
insb
add
mov
and
movsb
jecxz
incl
add
je
insb
je
bt
shl
pusha
push
mov
lods
cmc
add
clc
bt
cmp
xor
jmp
arpl
fs
xor
cs
insb
add
add
popa
insb
gs
imul
inc
js
inc
js
add
inc
outsl
inc
jb
gs
outsb
jne
gs
imul
jae
add
inc
gs
jne
jb
outsb
je
push
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
sub
lods
sbb
add
aas
inc
inc
jne
dec
outsl
jo
sub
push
pop
or
hlt
bound
add
or
lret
or
sub
jno
sbb
sub
incl
push
dec
jo
add
mov
shll
aas
inc
cmp
daa
cli
jg
stc
lahf
shrl
inc
sub
push
jo
inc
and
jg
les
aas
aas
or
jg
stc
xchg
jmp
fisttps
sti
sti
mulb
fmuls
cmc
cltd
mov
inc
cld
in
mov
fistpl
loope
leave
sti
aam
loope
iret
mov
sbbl
loopne
dec
adc
and
jl
leave
cmpsb
je
in
adc
cmp
or
and
adc
adc
dec
pusha
lret
aam
pushf
mov
ja
aas
aas
mov
adc
fnstenv
gs
jge
jge
popa
pop
out
icebp
rcrb
fadd
mov
data16
jne
push
pop
xor
push
inc
jg
imul
add
or
push
cmc
pop
xor
or
iret
cs
imul
mov
outsl
dec
outsl
call
adc
add
jecxz
cmpsb
je
mov
xlat
mov
inc
inc
dec
push
pop
push
jno
inc
inc
jne
add
je
outsl
jo
imul
add
je
gs
inc
js
outsb
je
outsl
imul
add
push
outsb
fs
gs
popa
addr16
add
add
insb
insb
push
arpl
add
outsl
bound
dec
outsl
arpl
lea
jb
pushf
mov
xchg
mov
call
push
test
mov
dec
dec
test
loope
or
and
jecxz
shll
rcll
cmpsl
pop
in
mov
outsl
fbstp
rcrl
pop
lcall
xchg
scas
sbbl
jp
push
sbb
cs
nop
cmp
add
js
fsub
cltd
insb
xor
insb
pop
sbb
outsb
xchg
jo
sub
add
and
fdivr
fwait
lahf
stc
adc
fisttpll
pop
or
sbb
fidivrl
rcll
cmp
in
out
cmpsb
in
ret
test
lock
pop
jno
lods
ret
mov
push
or
outsb
sbb
enter
test
shl
pop
pusha
mov
daa
jg
xchg
out
out
hlt
ljmp
movsb
mov
aaa
sub
add
add
xchg
nop
enter
xor
sub
jmp
and
push
pusha
pop
jae
sbb
lods
sarb
js
fiaddl
adc
sbb
sbb
inc
or
push
popa
ret
push
bound
jp
sub
jbe
xor
test
nop
sahf
in
inc
sbb
adc
pop
push
popf
xor
adc
inc
pop
mov
int
inc
ret
xchg
leave
sti
aad
shl
out
rol
jmp
fistpll
in
call
mov
gs
arpl
insb
insb
push
popa
outsb
addr16
pop
lcall
add
shr
nop
add
add
push
gs
arpl
jo
jns
adc
push
pusha
movb
movb
lea
jmp
add
push
gs
dec
push
xor
add
inc
outsb
fs
popa
imul
and
pushf
pushf
mov
push
lea
jmp
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
fs
jne
jae
jb
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
imul
add
add
outsb
fs
insb
outsl
jae
add
dec
in
add
inc
gs
jne
dec
outsb
jne
add
dec
outsl
arpl
inc
jb
add
push
add
movw
pushf
pushl
lea
jmp
add
push
outsl
jae
push
jne
je
gs
popa
add
lcall
in
stos
faddl
push
andl
ja
add
adc
jbe
push
cltd
test
adc
cmp
je
mov
imul
sbb
dec
fldcw
pop
cmp
pop
mull
fiaddl
popf
pop
cmp
inc
push
test
push
or
loop
into
mov
outsb
sub
and
mov
sbb
test
cmp
or
jno
das
andnps
mov
xchg
mov
aam
packsswb
test
les
out
int
sub
out
mov
cmp
mov
in
or
cs
xor
xor
cmp
and
pusha
push
fs
pop
push
ds
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
add
fs
outsl
arpl
pusha
pushf
lea
call
jmp
add
dec
jae
imul
jae
bound
mov
stc
call
pop
jns
inc
sub
push
fisubs
shl
xchg
imul
jae
addr16
call
cvttps2pi
insb
cmp
out
push
cltd
fucomp
xchg
pop
inc
ds
xchg
shrl
pushf
mov
sbb
jmp
cld
shlb
adc
mov
push
sbb
add
lahf
icebp
lock
enter
push
jecxz
scas
movsl
fwait
mov
int
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
popa
jo
insb
insb
outsl
arpl
add
push
gs
outsb
fs
inc
imul
sar
mov
jmp
add
push
gs
popa
jo
jne
add
inc
and
stos
orb
inc
loopne
lcall
pushl
ret
add
push
gs
outsb
push
gs
js
gs
imul
gs
add
inc
gs
imul
popa
arpl
outsb
je
add
inc
push
inc
outsl
insb
outsl
jb
add
add
je
insb
imul
add
gs
je
push
outsb
add
inc
and
out
inc
call
fcoml
adc
adc
inc
push
cli
pop
ficoms
pop
add
lods
inc
pusha
mul
push
mov
pop
arpl
movsl
mov
cld
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
and
mov
lea
jae
call
jmp
jae
cmp
mov
or
stc
dec
mov
in
shll
shrl
jg
or
sub
call
fwait
test
cli
std
mov
mov
into
or
aaa
dec
and
jns
adc
or
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
add
imul
push
jb
jo
jb
jns
pusha
call
push
push
inc
mov
lea
call
jns
adc
jmp
lea
jae
call
add
ja
jbe
dec
jne
push
jb
je
add
push
mov
add
add
aaa
sldt
insl
imul
jae
je
push
call
int3
pushl
inc
jmp
add
inc
push
outsb
jne
je
insl
add
push
pushl
ret
out
cmc
jnp
add
add
push
cmpsl
hlt
push
dec
mov
roll
add
mov
or
add
shlb
repnz
dec
mov
in
sbb
add
std
and
mov
or
add
nop
js
cmc
xchg
dec
mov
repnz
add
icebp
fistpll
add
add
cld
cli
or
add
sti
stos
or
add
xor
hlt
xchg
or
add
jg,pt
jp
mov
js
add
rolb
std
mov
mov
or
add
adc
outsb
or
add
or
add
push
mov
add
add
loopne
pushl
mov
or
add
or
clc
out
mov
or
add
adc
jp
sbb
mov
or
add
nop
jb
stc
mov
add
add
pop
sbb
xchg
or
add
out
jmp
jnp
sbb
lret
call
cmc
jnp
add
add
xlat
lock
jnp
add
add
jmp
add
mov
or
add
push
into
loopne
mov
mov
inc
in
or
add
out
jnp
add
add
imul
add
add
xor
jnp
add
add
das
clc
test
add
imul
sti
push
out
jnp
pop
add
int
mov
add
add
push
clc
mov
add
add
mov
or
add
cmpb
hlt
test
or
mov
repnz
loop
jo
and
insb
pop
adc
mov
data16
pop
movsb
js
jg
outsl
cs
jge
js
jmp
sbb
cmpsb
or
cmp
lret
lret
testl
mov
ss
lea
jmp
shlb
adc
cwtl
inc
outsl
loop
std
sbb
adc
cmc
repnz
or
lods
pop
xor
mov
out
push
mov
adc
incl
add
insb
gs
jae
inc
popa
jo
jne
add
std
jmp
add
shlb
dec
aas
add
inc
gs
push
dec
outsb
outsw
add
xchg
icebp
pushl
push
add
inc
pusha
jmp
add
push
insb
gs
add
inc
gs
bound
arpl
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
lea
call
pushf
lea
jae
jle
pusha
dec
xchg
mov
not
inc
sete
mov
mov
lea
push
pushl
pushl
lea
call
jmp
pop
cmpsl
inc
add
cmpsb
inc
add
roll
scas
add
add
add
inc
add
inc
add
pop
inc
add
inc
add
inc
add
lods
inc
add
inc
add
inc
add
inc
add
add
add
add
orb
add
add
add
xorb
xorb
adc
add
or
add
add
add
adc
add
push
sub
rep
inc
add
add
add
arpl
xor
inc
add
pop
inc
add
add
add
les
into
scas
inc
add
add
enter
add
inc
add
movsl
inc
add
scas
inc
add
in
add
test
add
pop
inc
add
loope
add
add
inc
add
in
inc
add
inc
add
adc
add
sbb
add
movl
add
add
add
call
inc
add
lods
inc
add
push
sub
insl
add
inc
add
inc
add
inc
add
call
sub
stos
repnz
add
inc
add
hlt
inc
add
roll
xor
inc
add
adc
add
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
adc
add
inc
add
stos
inc
add
int
add
lods
inc
add
rolb
jns
inc
add
jmp
inc
add
inc
add
movl
icebp
stos
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
mov
inc
add
adc
add
sub
loope
inc
add
inc
add
add
add
sbb
add
add
adc
add
sub
push
lret
inc
add
lods
inc
add
cmc
inc
add
aam
add
filds
push
add
add
inc
add
loope
add
test
inc
add
call
inc
add
movsb
inc
add
sbb
add
in
add
sub
push
pop
inc
add
sbb
add
hlt
inc
add
sub
pmuludq
xlat
push
inc
add
inc
add
movl
xchg
mov
add
add
mov
inc
add
mov
add
sbb
inc
add
faddl
shl
inc
add
pop
inc
add
sub
icebp
cmpsb
inc
add
lods
inc
add
movsl
inc
add
add
adc
add
pop
inc
add
add
add
call
inc
add
sub
lods
jmp
inc
add
adc
add
cmc
inc
add
inc
add
in
inc
add
inc
add
pop
inc
add
mov
inc
add
pop
inc
add
pop
inc
add
sub
xchg
repnz
add
sub
cmp
inc
add
in
inc
add
inc
add
int3
inc
add
in
inc
add
inc
add
push
inc
add
inc
add
sub
mov
inc
add
sub
mov
sub
in
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
movl
adcl
pop
mov
sub
jle
inc
add
sbb
add
inc
add
inc
add
jecxz
add
in
add
pop
inc
add
faddl
ffreep
inc
add
movl
xor
adc
inc
add
inc
add
int
add
sub
mov
les
pop
leave
inc
add
cmpsl
inc
add
add
push
sub
mov
cmpsb
inc
add
add
pop
inc
add
push
inc
add
pop
inc
add
sub
add
inc
add
inc
add
arpl
addr16
inc
add
inc
add
movsl
inc
add
roll
dec
in
inc
add
inc
add
mov
sub
push
sbb
add
inc
add
sbb
inc
add
test
inc
add
adc
add
adc
add
stos
inc
add
int
add
pop
inc
add
push
sub
sti
lret
push
pop
sub
xchg
add
add
sub
rcrb
sub
adc
add
movsl
inc
add
lds
fs
add
inc
add
add
add
fldl
add
push
inc
add
hlt
inc
add
lret
xchg
pop
inc
add
sub
jns
inc
add
cmpsl
inc
add
mov
add
int
add
int3
inc
add
sbb
add
sub
test
sub
mov
inc
add
inc
add
iret
inc
add
inc
add
cmpsb
inc
add
sub
xchg
in
inc
add
inc
add
inc
add
stos
inc
add
sbb
add
filds
add
add
mov
inc
add
faddl
fistpl
add
ljmp
inc
add
int3
inc
add
adc
add
cmpsl
inc
add
add
call
inc
add
enter
add
add
lods
inc
add
inc
add
sbb
add
fs
add
les
mov
jnp
inc
add
lods
inc
add
movsl
inc
add
test
sub
pop
pop
inc
add
mov
inc
add
out
add
adc
add
inc
add
mov
add
inc
add
pop
inc
add
inc
add
sbb
add
inc
add
pop
inc
add
inc
add
inc
add
sbb
add
push
sub
xlat
fiadds
shl
inc
add
jecxz
add
test
inc
add
stos
inc
add
sub
adc
test
add
adc
add
aam
add
rolb
loop
inc
add
sub
pushf
ljmp
jl
inc
add
inc
add
inc
add
add
adc
add
test
add
inc
add
into
inc
add
inc
add
mov
inc
add
movl
xchg
adc
add
lret
inc
jmp
add
je
inc
add
add
sbb
add
add
add
loop
add
inc
add
out
add
fs
add
out
inc
add
repz
add
sub
mov
inc
add
inc
add
add
add
enter
sbb
add
add
add
sbb
inc
add
leave
inc
add
adc
inc
add
adc
add
inc
add
call
inc
add
pop
inc
add
inc
add
add
inc
add
add
inc
add
add
add
add
orb
add
mov
add
andb
adcb
add
or
add
or
add
sbb
add
adc
add
add
add
mov
add
add
add
orb
add
add
add
add
addb
add
sbb
sub
or
inc
add
filds
pop
loope
add
add
add
sub
jns
inc
add
sbb
add
add
add
iret
inc
add
test
add
add
add
add
add
fs
add
faddl
mov
inc
add
add
add
inc
add
add
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
dec
outsb
imul
push
arpl
imul
imul
stc
add
lea
call
add
push
je
imul
add
inc
gs
outsl
fs
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
add
je
popa
jb
outsb
je
xchg
movzbw
movsbw
pushf
cwtl
lea
jmp
lahf
mov
push
pusha
lea
jmp
add
insl
imul
gs
jb
dec
gs
fs
xchg
roll
cmp
js
and
push
test
xor
pop
mov
lds
test
sbb
pusha
or
fs
push
add
lret
push
inc
xchg
rol
push
rorb
aaa
jns
jge
cmp
scas
push
int3
push
inc
mov
std
lock
int3
mov
cmp
jg
inc
adc
inc
decl
ret
cmc
addb
addr16
pop
lret
pop
pop
inc
lahf
mov
insl
inc
test
jp
testb
jge
imul
jecxz
mov
outsb
inc
test
subl
ficompl
push
xchg
in
in
mov
repnz
jne
arpl
inc
in
icebp
sub
mov
fmuls
and
jge
ret
mov
fistps
add
hlt
repz
fwait
repz
or
adc
inc
push
sbb
mov
xorl
mov
push
sub
scas
mov
jle
outsb
jl
pop
pop
or
inc
outsb
jo
pop
mov
inc
push
inc
push
dec
xor
cs
insb
add
add
mov
pushf
lea
je
movsbw
lea
add
shl
cmp
mov
mov
bt
bt
not
mov
call
add
inc
jb
popa
je
inc
insb
insb
imul
outsb
add
add
pusha
push
pushf
lea
jmp
lea
je
stc
pusha
pusha
cmc
mov
cmc
movw
jmp
add
push
gs
imul
outsl
outsl
imul
add
add
gs
je
inc
jbe
outsb
je
add
add
je
dec
jo
outsb
push
gs
gs
inc
add
pop
add
add
sbb
mov
repnz
incl
add
insb
gs
jae
dec
jne
gs
cmp
jmp
pusha
movw
sub
jno
add
call
dec
push
jl
test
xchg
repnz
ret
fidivs
sub
add
ljmp
lcall
out
mov
in
fwait
push
in
cwtl
pop
pop
xorl
xchg
jmp
iret
cli
sti
loope
ds
and
mov
pop
cmp
arpl
pop
xor
imul
or
sbb
pop
push
xchg
loope
mov
xor
and
and
cmp
in
push
in
cmp
xor
ret
mov
jl
cmpsl
sbb
ret
mov
mov
inc
inc
and
mov
mov
test
mov
cltd
stos
mov
xchg
cmpsb
cmp
jle
jp
sub
add
jnp
loopne
ds
and
pop
std
aas
inc
mov
xchg
xor
and
mov
xchg
cmp
popa
and
fs
xchg
aam
cmpb
in
js
sbb
adc
bndstx
add
jne
enter
mov
imul
and
mov
andl
dec
mov
insl
push
lds
xchg
pop
xor
sub
aaa
and
dec
imul
mov
std
incl
add
je
gs
imul
add
inc
gs
je
imul
push
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jne
jae
jb
outsl
jae
add
inc
jb
popa
je
dec
dec
outsl
arpl
jns
gs
outsb
dec
inc
insb
outsl
bound
add
add
je
push
outsb
fs
gs
gs
inc
add
add
inc
insb
insb
outsl
arpl
clc
push
jmp
insl
shrl
test
mov
inc
pop
xor
ljmp
lods
sbb
mov
ficoms
cmp
in
cltd
aam
roll
jno
mov
sub
imul
lret
test
stos
movsl
std
mov
jecxz
sti
jge
and
mov
fxch
icebp
or
aad
nop
fistl
vpextrw
lds
int
mov
lods
sti
aad
std
out
in
sti
jmp
ja
movsbl
not
pusha
bswap
mov
call
inc
shr
xchg
sar
mov
pushf
seto
mov
mov
pusha
call
jmp
lea
call
bt
call
add
insl
imul
insl
push
gs
popa
jb
add
add
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
add
je
gs
popa
addr16
add
add
je
imul
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
cs
bound
lahf
add
add
iret
mov
adc
clc
mov
cmp
rclb
fwait
or
jg
and
push
xchg
in
ret
mov
daa
out
hlt
push
add
in
xchg
in
sub
xor
push
inc
fistpll
xchg
repz
int3
cltd
loope
stc
sti
test
ljmp
jo
pop
mov
inc
mov
push
push
jle
outsb
push
add
je
jb
arpl
jae
gs
imul
xor
mov
inc
bt
mov
pushf
sub
movw
rep
pushf
lea
call
push
bswap
movb
jmp
not
stc
call
add
inc
gs
imul
lea
jne
call
test
pushl
push
pushf
jmp
data16
xchg
aam
lock
mov
fcmovbe
mov
shr
dec
movsl
test
sbb
sti
popf
popf
pop
sub
cmpsb
lods
mov
xchg
jmp
add
je
imul
add
add
jo
imul
imul
dec
gs
jo
gs
jb
jns
into
mov
out
mov
clc
rcrb
xchg
pop
sbb
and
adc
mov
lret
ficoml
jp
pop
insb
sub
or
dec
pop
jae
imul
add
add
subl
call
add
inc
gs
arpl
insb
insb
push
outsl
jae
add
push
arpl
insb
insb
push
imul
add
test
mov
xchg
add
cmp
not
mov
jmp
add
push
gs
ja
imul
add
addr16
jo
outsb
dec
gs
add
leave
pusha
lea
call
jmp
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
je
imul
imul
jns
add
std
call
add
adc
xchg
pop
mov
lea
movsbw
mov
jmp
add
dec
jae
popa
fs
outsl
fs
je
add
add
jo
imul
arpl
repnz
cmc
bt
bt
pusha
ror
clc
movb
test
call
lea
jae
test
cmp
pusha
jmp
add
insb
jae
jb
insl
jo
inc
add
dec
sbb
ficoms
jns
int
sub
push
jns
popa
add
mov
cmp
adc
mov
aad
testb
lock
jbe
and
inc
gs
imul
xor
cli
iret
mov
sbb
push
stos
stc
jne
jnp
sbb
outsl
cmp
inc
mov
mov
stos
rcl
vpsubd
movsl
or
lret
mov
lea
dec
mov
cmpsb
das
inc
jno
lret
adc
movsl
lcall
sub
lea
mov
xchg
stc
lret
hlt
mov
xor
xor
xchg
cmpsl
ss
jno
fimull
sub
xor
push
imul
pop
or
repnz
xchg
jbe
sub
mov
jne
lcall
pop
jge
test
lods
jecxz
cmp
fiaddl
cmp
mov
pop
add
inc
xor
jb
push
sub
xor
popa
orb
repnz
xchg
mov
test
enter
cli
mov
cld
mov
and
mov
xor
mov
aaa
imul
jnp
dec
and
dec
movsb
push
call
lahf
int3
cmpsl
popf
pusha
mov
jmp
das
push
out
xchg
jbe
mov
in
mov
or
push
mov
and
dec
sbb
cmp
cmp
mov
rcrl
cli
add
je
mov
rorl
mov
ret
subl
shrb
ja
mov
push
xchg
sub
cmp
nop
fiaddl
repnz
xchg
sahf
xchg
out
shll
fildll
scas
movsl
xchg
stos
xchg
cmpsl
test
insl
and
jno
push
pop
pop
das
sbb
dec
notb
sbb
push
popf
pop
sub
jne
imul
inc
sbb
je
pushf
test
mov
jmp
stos
mov
mov
lea
pusha
lea
call
call
add
push
gs
gs
gs
push
popa
insb
jne
inc
add
je
add
inc
jmp
push
gs
arpl
imul
fs
jae
test
call
add
inc
gs
je
dec
popa
outsb
fs
add
add
addr16
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
inc
jb
ja
outsl
arpl
push
arpl
push
mov
push
cmp
pushf
and
test
add
pusha
lea
jmp
add
dec
inc
dec
popa
jo
je
imul
inc
gs
popa
jbe
inc
imul
add
add
popa
jo
jb
popa
je
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
imul
jae
pushf
lea
jb
pushf
movb
pushl
ret
add
inc
jae
popa
jo
add
add
jo
inc
imul
jae
jb
outsb
je
inc
add
add
popa
jo
imul
arpl
outsb
push
outsl
inc
insb
imul
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
inc
gs
push
dec
outsl
arpl
add
add
je
gs
arpl
popa
jo
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
mov
cmpsb
cld
xchg
clc
mov
push
sbb
mov
xor
xor
in
je
call
xor
xchg
lcall
lock
cld
addb
lret
in
icebp
jecxz
rcl
into
add
push
gs
insb
imul
inc
popa
je
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
std
call
add
jb
push
call
jp
jno
push
lea
je
cmp
call
add
push
popa
jbe
inc
inc
add
xchg
mov
mov
clc
lds
pop
and
sbb
out
lret
pop
repz
cltd
xor
fwait
mov
hlt
xor
dec
or
incb
sub
cwtl
or
sub
sbb
or
or
and
mov
je
outsl
jb
addr16
jne
fs
imul
add
je
gs
inc
insb
addr16
popa
bound
gs
add
pop
pusha
movw
lea
jmp
add
inc
jb
popa
je
push
arpl
outsb
add
push
daa
push
movups
repnz
movsl
sub
mov
les
xor
das
push
insb
pop
arpl
cmpsb
dec
dec
adc
fistps
mov
shlb
lea
loopne
xlat
std
jb
sbb
mov
test
pop
bound
fldpi
popf
xchg
mov
out
push
lret
jg
daa
jp
scas
xchg
pop
mov
lahf
loop
cltd
lea
push
mov
repz
cld
adc
mov
pushf
add
sbb
jp
pop
js
fisubrl
aad
in
fwait
xchg
sahf
out
xor
xor
push
mov
sbb
ja
not
sub
sub
dec
insb
jb
jb
adc
sbb
or
cwtl
loop
out
mov
mov
incl
mov
jl
xchg
bound
jae
inc
xor
insl
jae
xchg
mull
into
jns
sbb
mov
in
sarb
cmc
pop
out
fwait
push
inc
jb
jno
cmp
div
stc
push
stc
push
das
popa
lret
pop
aaa
js
jns
imul
inc
loopne
mull
shl
sbb
fidivs
push
cmp
add
cmpsl
xorl
rep
pushf
mov
mov
mov
movb
lea
jmp
add
push
je
push
outsb
ja
outsb
add
shld
mov
cmp
cmp
pushf
pushf
and
pushl
call
add
inc
gs
imul
addr16
js
add
dec
outsl
popa
fs
imul
add
outsb
dec
gs
jo
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
bt
cmc
add
pushf
call
push
call
std
mov
and
imul
insb
insb
outsl
arpl
mov
push
pushf
lods
stc
cmc
cmc
add
pushl
cmc
test
xor
pusha
stc
clc
call
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
outsb
outsl
ja
jb
insl
push
outsl
imul
jmp
add
sub
jmp
add
push
gs
jo
outsb
dec
gs
js
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
je
popa
jo
jne
add
add
je
imul
js
inc
add
stos
out
incl
add
push
dec
inc
inc
jb
insl
push
je
imul
mov
mov
call
add
push
gs
outsl
jbe
push
jb
jo
add
add
add
add
add
stos
inc
add
pop
sub
lock
add
test
sub
sub
inc
add
pop
sub
cmp
inc
add
add
sub
je
inc
add
inc
add
flds
push
lods
inc
add
fildl
sbbl
add
add
sub
nop
fildl
pop
repnz
add
push
sub
mov
add
add
add
add
inc
add
push
sub
loopne
inc
add
push
sub
xor
inc
add
repz
add
push
sub
inc
faddl
jns
inc
add
push
sub
dec
faddl
mov
push
sub
je
inc
add
leave
inc
add
faddl
in
sub
sbb
sub
cwtl
faddl
pop
lods
inc
add
cvtpi2ps
cmp
bt
clc
cmp
pushl
pusha
call
movw
mov
lea
je
pushf
pushf
cmc
cmp
movb
pushl
movw
lea
je
pushf
pushf
lea
jmp
add
push
gs
arpl
insb
gs
add
add
popa
jb
gs
inc
add
add
gs
inc
imul
jb
popa
je
inc
imul
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
je
add
inc
and
jge
test
jmp
mov
pusha
adc
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
pop
jmp
das
push
fnsave
inc
je
mov
fcmovb
leave
or
mov
mov
lods
iret
test
mov
out
cmp
inc
or
adc
dec
fcmove
xor
ret
jmp
xchg
xchg
testb
mov
int
addb
jp
push
mov
push
or
mov
movsb
loop
scas
mov
fistps
xor
mov
sbb
out
and
jle
sbb
sbb
add
inc
ds
push
dec
in
imul
jmp
mov
cmp
insb
cli
std
rolb
rolb
std
sub
pusha
push
inc
push
mov
cmpsb
dec
out
cmpsb
clc
mov
xchg
mov
nop
popf
jbe
pushl
xor
or
and
and
insb
xor
mov
lods
rclb
cmp
jne
jecxz
cmpl
inc
sub
jg
arpl
rclb
loop
cltd
mov
ljmp
rcrl
loopne
cmc
lods
popf
jg
int3
cs
dec
js
push
mov
inc
cs
adc
jg
add
xorl
mov
cltd
xchg
rorb
scas
jg
cmp
mov
nop
mov
nop
mov
mov
cld
xchg
int3
clc
js
xchg
rcr
shrl
inc
lret
into
push
aaa
test
ljmp
xchg
mov
lahf
in
stc
xchg
cmc
mov
inc
pop
push
push
mov
push
dec
dec
inc
mov
movsl
sbb
icebp
mov
stc
into
lcall
leave
cmp
pop
fldlg2
ficoml
daa
push
push
push
push
mov
int3
pop
add
aaa
sbb
mov
and
dec
mov
loop
mov
and
mov
cli
jge
sbb
mov
int3
lret
in
inc
add
inc
gs
gs
dec
gs
imul
xor
mov
stos
in
loope
cltd
lods
lret
xor
xchg
push
outsl
pop
fst
cmp
or
sahf
call
cld
mov
imul
rcr
jmp
lar
popa
pop
sub
push
lret
ret
mov
jno
mov
in
jbe
pop
cmp
inc
dec
jbe
mov
jle
test
nop
mul
push
clc
cmp
mov
cmpsl
cltd
mov
in
add
inc
gs
je
arpl
bound
arpl
dec
inc
dec
dec
xor
cs
insb
add
add
je
arpl
add
ja
arpl
inc
js
push
call
xchg
mov
add
fs
imul
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
je
outsl
arpl
push
imul
incl
add
jb
jo
inc
add
add
je
gs
je
je
add
pusha
sbb
jo
adc
xchg
shlb
cmpsl
stc
ret
pop
cmp
mov
loopne
clc
cmpsb
cld
mov
repnz
int3
jo
daa
cmpsb
xor
imul
pop
jne
scas
out
out
jo
xchg
loop
in
repnz
xchg
adc
mov
fadds
fcompl
xchg
repz
enter
stc
pop
inc
pusha
sti
mov
dec
push
sub
and
fildl
stos
cmc
out
scas
test
mov
sbb
fcmovu
sti
imul
jno
insl
ja
imul
dec
inc
imul
jecxz
call
add
mov
subb
add
jne
outsb
je
jb
jo
jb
imul
inc
clc
jmp
mov
movb
pushf
movl
lea
jmp
add
inc
jo
outsb
fs
outsb
jne
add
add
addr16
outsb
jne
dec
gs
add
dec
inc
push
dec
xor
cs
insb
add
add
je
imul
add
repz
call
cmp
and
pushf
call
movsbl
mov
jmp
add
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
sbb
jp
xor
aaa
stos
xlat
shll
popa
fs
and
xor
and
inc
pop
adc
cmp
add
or
mov
pop
iret
int
xchg
dec
add
imul
pop
dec
inc
jge
dec
dec
or
add
je
popa
jb
outsb
je
add
push
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
std
call
add
in
cmc
hlt
rcrb
add
push
gs
jb
popa
je
dec
gs
js
add
add
je
gs
inc
outsl
insb
outsl
jb
jmp
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
mov
lds
inc
gs
jns
je
insl
dec
gs
imul
push
mov
add
add
sub
jmp
mov
lea
je
clc
test
push
movb
lea
je
clc
bt
test
and
pusha
push
push
lea
jmp
pusha
inc
rcl
sub
sar
xchg
mov
sar
rol
call
add
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsb
aad
incl
add
imul
outsl
jne
arpl
mov
mov
adc
sar
bound
dec
into
jnp
mov
mulb
js
into
into
ss
pop
out
call
cmpsb
movsl
addr16
data16
xchg
pop
daa
popa
jno
loop
fadds
push
shlb
ret
aad
in
shll
fmulp
outsl
push
mov
and
jl
xlat
fistl
jbe
gs
rcll
rcll
push
fcom
cmp
lret
fmul
rcr
shl
lret
dec
andl
push
dec
fdivp
fdivrp
mov
mov
repnz
jl
rcrb
mov
mov
aaa
pusha
nop
and
jbe
loop
out
mov
fcom
pop
adc
fcoml
jno
sbb
stc
out
push
aad
mov
mov
in
xchg
pop
mov
jbe
jbe
xchg
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
xchg
jbe
lret
push
fsub
mov
data16
sbb
push
fisttpll
arpl
popa
into
ss
xor
pop
mov
iret
pop
cli
add
test
fidivrl
push
fwait
cmp
push
lret
jns
stos
outsl
rcrl
push
sub
xor
push
gs
pop
popl
jmp
dec
imul
push
stos
lahf
xchg
ljmp
scas
aas
or
fwait
mov
cli
jae
push
cwtl
push
and
mov
pop
or
int3
leave
lcall
jmp
add
xlat
sub
data16
sub
or
push
push
aad
fists
jmp
aad
or
ss
mov
push
into
js
loop
ret
push
les
adc
jecxz
faddl
into
jb
adc
and
rorl
cwtl
leave
pop
lret
repnz
icebp
and
lret
jp
rcl
add
mov
pop
cmp
aad
shll
stos
mov
leave
push
imul
pop
cmp
push
cmp
icebp
leave
add
jb
push
inc
pop
cmpsb
ss
dec
out
push
stc
cmp
push
sbb
and
mov
dec
push
movsl
mov
xchg
adc
adc
int3
mov
sbb
inc
in
and
rcll
out
pop
jb
in
jg
pushf
arpl
stos
mov
push
insb
sub
jne
mov
pop
scas
pop
sbb
ss
cmp
icebp
mov
pop
pushf
jbe
int
jo
push
mov
out
movsb
pop
inc
adc
packsswb
inc
dec
vmread
adc
stos
cmp
jl
aaa
or
outsb
out
push
adc
fdiv
push
cmp
lahf
fmuls
push
xor
cmpl
lods
adc
nop
sti
mov
inc
movsl
push
push
cmc
fildl
dec
out
movsb
in
dec
sub
sub
shrl
push
adc
or
push
xorb
xchg
xchg
mov
sti
jle
andb
or
push
sbb
pushf
lahf
aam
pusha
dec
jge
adc
enter
adc
mov
xchg
sub
xor
jecxz
ss
adc
pop
inc
int
rclb
dec
outsl
int3
xorl
loope
adc
inc
adc
inc
mov
xor
sub
mov
push
xchg
push
adc
sbb
pop
or
xchg
sbb
dec
jnp
push
fistpl
inc
mov
push
seto
jg
ja
fwait
jb
pop
pop
push
cwtl
dec
das
sub
cmp
sbb
in
dec
subb
or
adc
adc
std
sbb
push
jo
xlat
cmp
mov
or
adc
xchg
cmp
popa
mov
xlat
das
push
push
jecxz
ss
lahf
std
fcmovnbe
sbb
fwait
mov
add
pop
xlat
jg
je
pop
test
xor
adc
mov
dec
data16
repz
lods
sbb
push
adc
repz
aad
aam
test
or
or
stos
jnp
mov
push
fwait
scas
jl
imul
cmpsl
lahf
push
repnz
push
add
sbb
mov
dec
notb
arpl
mov
insl
push
fwait
adcb
dec
or
mov
push
inc
push
push
into
sbb
xor
dec
es
add
push
pushf
and
mov
pop
push
push
hlt
cmpsl
stos
mov
mov
fstpt
jle
test
movsl
fldt
cltd
inc
mov
mov
push
xor
sub
sub
cmovne
sbb
or
push
pop
adc
mov
sti
sub
and
xor
xchg
or
xchg
jb
jp
rorl
inc
cmpsb
adc
jnp
int3
cld
push
cmp
adc
jns
sahf
mov
imul
mov
rcr
mov
sahf
cmp
sbb
shlb
jbe
push
and
add
jno
lock
lea
movsb
sti
arpl
stos
repnz
or
aad
fcmovu
frstor
aas
je
sbb
jg
je
push
push
cmpsb
sub
xchg
mov
outsb
and
push
push
xor
cmp
and
gs
mov
xchg
or
cmp
mov
push
or
out
test
dec
imul
mov
bound
sti
mov
pushf
lods
dec
insb
add
test
and
add
adc
mov
sbb
shll
sbb
leave
dec
sub
std
push
or
mov
xchg
fwait
enter
dec
std
adc
jo
cmp
rcll
xchg
xlat
insb
dec
fstl
ret
fstl
mov
shlb
int3
rcl
inc
aad
xchg
xlat
mov
shr
rol
adc
mov
out
push
lret
movups
mov
fadd
push
and
lods
movl
mov
loop
repz
fs
and
push
jbe
pushf
xor
inc
js
mov
pop
into
cmp
fcompl
pusha
adc
cmovae
scas
int3
aas
cmp
idivb
xor
mov
jmp
sbb
stc
pop
int3
fistpll
pop
sbb
nop
add
fisttps
cmp
cmpl
sub
jle
inc
dec
jmp
mov
jbe
jp
fstps
fcmovnbe
mov
sti
test
leave
loopne
mov
cmp
fbld
add
aas
leave
dec
lahf
jp
sub
int3
pop
mov
aam
scas
push
push
jb
sar
jl
jl
or
aaa
xlat
ud0
aas
loope
mov
xchg
sbb
pop
iret
cli
jp
lcall
int3
push
xlat
stos
mov
rcrb
sti
outsb
nop
adc
mov
out
mov
sbb
setl
jnp
push
int
icebp
xor
or
push
iret
sbb
dec
outsb
push
jp
pop
sub
push
push
in
push
out
push
enter
lods
adc
xor
cli
test
movsl
or
iret
sarb
leave
leave
jecxz
inc
loopne
lahf
pop
cmp
dec
ss
xor
clc
call
lods
pop
lods
out
mov
ret
les
xchg
rolb
test
je
mov
adc
push
mov
push
sub
xlat
sbb
and
pop
xorb
outsb
data16
call
lcall
data16
pop
mov
xchg
ret
mov
pop
je
les
sbb
jns
sub
xchg
loop
aad
in
xchg
mov
push
rcl
jg
pop
fisubrs
rcll
ficoml
cmpsl
or
cwtl
cmpb
mov
or
aad
xchg
test
outsl
cli
ret
test
push
shrl
xchg
add
adc
pop
ret
imul
add
dec
dec
cmp
test
out
dec
push
xchg
call
adc
jae
into
lods
iret
jg
cmp
notb
imul
leave
int
notl
imul
or
cmpb
cwtl
xchg
sahf
sbb
scas
loop
sub
int
clc
sub
aas
mov
add
pop
inc
push
pop
int
int
pop
cmp
jmp
push
cmp
or
cs
shr
adc
mov
mov
adc
stos
cmp
or
leave
mov
call
pop
and
mov
add
data16
pop
shl
push
ss
xchg
and
loop
push
xchg
adc
cmpsl
aad
imul
mov
pop
and
push
jbe
xchg
push
rcrl
sub
mov
bswap
sbb
cmp
dec
xchg
adc
xor
pop
addr16
cli
mov
push
xlat
fidivl
movsb
test
mov
xchg
in
jg,pt
push
stc
std
pushf
cmp
or
xchg
mov
int3
and
pop
stos
xchg
adc
dec
dec
mov
adc
cmp
push
lods
cmp
int3
cmpl
jnp
sbb
notb
aad
fstps
jbe
fdivrs
mov
push
jbe
mov
cmp
stc
fdivs
xor
and
sub
aam
test
test
mov
mov
push
sbb
cmpsb
cmp
push
mulb
pop
gs
jmp
mul
push
fcoms
push
push
cmp
mov
push
push
push
xchg
mov
aad
notl
enter
lret
mov
outsb
out
mov
mov
test
test
push
cmpsb
cmp
jle
xchg
xchg
jecxz
lds
aad
add
call
mov
xchg
stos
and
mov
adc
push
dec
mov
push
shll
xlat
fmuls
dec
int
fdivl
adc
adc
out
sbb
pop
outsb
mov
call
hlt
clc
sahf
adc
dec
div
adc
lret
xor
xchg
movsb
xor
int
push
test
push
ret
int3
aaa
fidivs
sbb
jno
popa
shrb
test
div
in
adc
nop
movsl
and
pop
push
xchg
mov
fmul
xchg
cwtl
mov
int
add
cmp
clc
je
fsubrs
inc
xchg
outsb
dec
lods
lahf
pop
jo
aam
dec
adc
dec
test
jne
mov
mov
imull
mov
ret
icebp
mov
jne
ja
fdivs
xor
mov
pop
in
cwtl
sahf
push
and
sbb
pop
mov
clc
ss
jbe
adc
ja
push
clc
notb
sbb
adc
popa
pop
push
lcall
clc
shl
mov
cwtl
aad
sbb
data16
sbb
or
push
push
ja
mov
lods
sbb
es
push
push
cwtl
movsb
inc
cmp
lea
push
mov
push
push
push
in
mov
inc
push
icebp
inc
daa
xchg
xor
ljmp
je
test
adc
push
cwtl
into
xchg
sarb
xchg
mov
mov
rorl
iret
mov
leave
data16
xchg
push
push
push
jne
add
xchg
frstor
mov
pop
dec
mov
sbb
mov
pop
xchg
add
add
dec
bound
dec
push
jmp
or
pop
cmc
pop
add
shlb
dec
in
ffree
mov
pop
es
sbb
push
dec
fldl
mov
pop
data16
sbb
push
dec
fldl
or
xchg
leave
pop
cmpsb
mov
sbb
dec
fldl
lret
mov
sbb
mov
pop
and
push
push
fldl
rcrb
mov
sbb
mov
pop
movsl
mov
sbb
dec
fldl
into
pop
call
push
push
mov
pop
sub
xchg
fisttpll
mov
pop
push
push
xchg
fisttpll
push
adc
rcrb
js
xchg
fisttpll
pop
pop
out
dec
fnsave
pop
pop
pop
mov
sbb
push
fcomp
idivl
outsb
and
hlt
add
rolb
je
jecxz
ret
adc
repz
arpl
lret
push
push
xchg
jbe
xchg
aad
out
data16
out
in
fdivs
mov
and
push
inc
inc
loop
pop
out
rol
adc
inc
iret
call
sub
test
divl
out
daa
mov
cmp
jne
clc
xlat
pop
test
pop
mov
push
push
add
xchg
inc
mov
hlt
xor
test
xchg
movsl
jne
fsubr
mov
cmp
ret
ds
fdivl
mov
push
call
mov
mov
cmc
pop
inc
push
xor
push
sbb
jbe
es
adc
loop
into
push
sub
push
data16
ss
fdivr
mov
test
arpl
inc
rolb
adc
mov
mov
fsubrs
adc
mov
addr16
call
push
xchg
pop
xchg
aad
pop
pop
in
xor
inc
in
mov
rclb
push
mov
pop
xchg
jo
ljmp
gs
mov
stos
cmc
into
fbstp
add
inc
es
push
popa
mov
and
shlb
mov
mov
adc
inc
jp
cmp
and
call
testl
jecxz
xor
dec
pop
mov
movsl
loopne
into
push
push
sub
pop
jno
jp
dec
cmp
mov
push
xor
int
scas
mov
sbb
pop
xchg
adc
jge
fldl
dec
cmp
xchg
mov
cmpsb
daa
push
scas
mov
call
cwtl
jg
inc
pop
xor
xor
rorl
ret
enter
shll
test
mov
lods
insl
push
add
xchg
aad
mov
mov
mov
fmuls
out
mov
js
pop
mov
xor
movsl
mov
addr16
aaa
and
jbe
cmp
test
shlb
xchg
sbb
mov
daa
push
loop
jbe
mov
enter
ret
roll
push
call
into
fwait
sub
and
and
call
dec
gs
dec
repnz
xchg
dec
pop
add
icebp
mov
push
cmp
mov
xchg
call
into
sub
push
scas
xchg
pop
cmp
push
icebp
enter
into
imul
mov
mov
gs
pop
jne
movsl
icebp
ret
ror
inc
jbe
pop
mov
push
sbb
xchg
mov
mov
xchg
ret
loope
mov
daa
xchg
addr16
enter
js
adc
or
push
xchg
adc
xlat
enter
in
dec
push
frstor
mov
xor
fmuls
gs
pop
fildl
xchg
movsl
mov
pop
daa
ss
into
xchg
lods
pop
mov
jno
ret
adc
mov
aam
cmp
mov
loopne
mov
sbb
test
push
les
mov
ljmp
xchg
pop
and
into
pop
inc
sahf
hlt
test
mov
add
js
push
push
aas
shlb
fs
or
push
inc
push
ss
add
push
add
je
pop
push
mov
test
aad
loopne
ror
adc
jecxz
mov
ret
data16
and
mov
repz
lea
add
push
out
add
push
or
mov
aad
push
clc
dec
es
fldl
mov
mov
xchg
mov
cmp
ret
mov
es
mov
andl
cmpsb
call
scas
outsl
aad
cmp
mov
push
push
push
into
or
xchg
mov
enter
into
out
pusha
mov
test
mov
decb
movsl
or
xchg
pop
push
cmp
sbb
into
not
pop
mov
mov
cs
call
sbb
gs
push
xor
pop
xchg
ss
outsb
xchg
ljmp
xchg
fcoms
pusha
mov
pop
xchg
gs
pop
mov
enter
into
sbb
xchg
mov
adc
inc
call
dec
pop
mov
movsl
jne
pop
int3
std
into
dec
sbb
aad
pop
movsl
test
push
mov
sub
mov
cmp
dec
imul
xorb
xchg
xor
dec
jge
push
push
rolb
negb
into
push
fdivs
shlb
gs
adc
lods
pop
mov
push
and
movsl
lock
adc
push
out
dec
es
shll
pusha
push
dec
inc
mov
mov
out
or
pop
mov
testb
shlb
pop
mov
mov
jo
mov
push
iret
dec
fistpll
inc
mov
scas
xchg
xor
xchg
sarb
mov
seta
push
pop
into
out
sub
pop
or
mov
push
pop
xchg
dec
data16
daa
enter
movsl
imul
es
jae
add
pop
add
push
aas
hlt
in
mov
ss
test
gs
idiv
stos
lahf
into
pop
xchg
cwtl
xchg
mov
outsb
adc
pop
outsl
push
xor
ljmp
lret
jbe
movsl
roll
mov
les
ljmp
mov
dec
dec
call
cmpsl
xchg
mov
cmp
mov
lods
adc
push
nop
mov
push
pop
push
jp
jbe
movzwl
or
cmpsb
dec
mov
test
mov
dec
es
sbb
sahf
adc
push
js
pop
jmp
arpl
ss
stc
into
cmpsb
fcom
dec
pop
push
mov
mov
push
mov
xor
mov
sbb
divl
pop
inc
dec
cmp
test
mov
sub
stos
daa
and
cmp
cmpsb
shll
ljmp
dec
gs
lret
hlt
call
mov
inc
xor
shll
into
fcoml
push
mov
fldenv
mov
loopne
into
adc
gs
or
sbb
pop
xchg
divl
adc
cld
cmp
pop
cmpsb
mov
and
shrl
pop
push
mov
into
aad
pushf
into
insb
out
mov
jl
out
es
cmp
adc
mov
out
or
and
xchg
add
adc
movsl
int
push
sbb
into
push
cmp
test
dec
mov
daa
enter
adc
sti
into
ss
inc
mov
xor
into
push
mov
pop
pop
aad
mov
push
jge
or
ljmp
cwtl
pop
dec
inc
call
pop
sahf
adc
mov
movsl
fnstsw
enter
into
cmpsb
mov
fwait
mov
imul
push
jnp
add
inc
add
hlt
push
push
out
pushf
xorb
fidivs
sbb
push
sarb
popa
pop
xor
mov
push
in
sbb
push
ficoms
xchg
aad
jns
jle
inc
leave
repnz
xchg
sub
ljmp
jne
xchg
mov
dec
mov
cmpsb
data16
mov
aad
mov
adc
out
or
cmp
clc
insl
mov
js
pop
cmc
das
xchg
hlt
push
add
push
mov
cmp
gs
adc
pop
mov
cmc
call
ficoms
loope
jg
push
icebp
add
movsl
fidivs
xchg
and
cmp
mov
xor
adc
enter
add
mov
mov
mov
call
dec
mov
dec
sbb
lods
cmp
cmc
icebp
fcom
or
pop
cmpsb
addr16
xchg
inc
pop
xchg
push
xor
je
fmuls
mov
enter
pop
fcomps
pop
gs
test
xchg
adc
mov
call
adc
outsb
mov
mov
xor
xorb
rol
dec
enter
mov
test
sahf
daa
nop
lods
sbb
mov
roll
mov
or
push
sbb
inc
aaa
fcomps
mov
jle
inc
fdivrp
push
lods
pop
push
adc
cmpsl
or
sbb
test
mov
rcr
push
dec
loop
mov
or
lea
pop
mov
adc
and
mov
pop
mulb
sbb
xchg
mov
daa
push
repnz
out
mov
xchg
add
xchg
mov
or
fimuls
ror
popa
out
mov
mull
mov
mov
loop
in
dec
cmpsb
adc
cwtl
xchg
fisttpl
rcll
inc
bound
aad
divl
dec
and
popf
dec
adc
xlat
mov
push
es
push
cwtl
pop
fcoml
in
das
fcom
or
pop
test
inc
call
insb
fsubrl
dec
popf
adc
gs
testl
adc
mov
test
out
lea
stos
or
cli
out
out
ss
fwait
and
push
nop
fdivl
daa
cmp
dec
fwait
inc
cmpsb
dec
xor
dec
mov
xchg
ss
xor
inc
mov
js
push
sahf
rol
pop
sbb
gs
cwtl
mov
pop
in
test
add
test
or
push
cwtl
lds
push
push
out
daa
mov
dec
or
push
cwtl
aas
lea
js
ja
cmp
sbb
shr
dec
adc
mov
pop
xchg
leave
adc
test
inc
pop
push
mov
lfs
out
mov
xchg
mov
movsl
sbb
stos
or
fmuls
push
in
pop
pop
adc
jge
xchg
xchg
xor
loope
das
push
fs
es
dec
cmpsb
sbb
ss
movb
gs
in
mov
sahf
into
pop
push
outsb
or
notl
aaa
and
in
adc
mov
inc
mov
lds
ss
mov
in
sarb
push
inc
dec
xchg
sbb
mov
push
xor
lea
sbb
pop
dec
out
mov
mov
call
sbb
pop
fisttpl
aad
clc
int3
notb
push
push
adc
dec
pop
mov
fdivs
outsl
inc
aad
and
jmp
in
mov
mov
jo
cwtl
dec
xor
js
dec
push
mov
out
inc
or
push
fcoms
cmp
inc
dec
adc
xchg
xor
xor
xchg
insb
fcoms
imul
pop
js
mov
push
call
scas
push
icebp
daa
aam
divl
leave
add
ret
std
ficomps
cwtl
stos
aam
enter
mov
pop
push
fstl
xchg
popa
pop
cmpsb
mov
std
dec
fsubrs
mov
mov
xor
jle
lods
jne
mov
into
sets
gs
lds
aam
push
inc
adc
pop
shl
jo
jmp
sbb
out
hlt
pusha
jne
rolb
adc
push
loop
clc
mov
adc
xchg
sub
shlb
mov
call
pop
aad
out
cmp
sub
lea
xor
adc
ja
adc
dec
mov
adc
ss
adc
inc
xor
in
mov
mov
pop
xor
xchg
out
pop
dec
test
aad
leave
fmuls
push
push
leave
scas
shrb
in
adc
xchg
dec
shlb
into
inc
and
cmpsb
push
mov
lds
neg
xchg
push
dec
sub
int
and
test
push
jne
test
or
mov
and
lret
adc
xor
psraw
loope
push
fimuls
dec
push
mov
lock
fs
push
mov
loop
xor
xor
sub
push
xchg
es
or
push
adc
test
add
xlat
fadds
xor
movsl
in
out
mov
in
push
gs
movsl
jg
adc
out
inc
cmpsb
push
fiaddl
jmp
dec
hlt
aam
push
or
mov
pop
in
adc
mov
or
or
scas
mov
mov
adc
adc
mov
cwtl
push
push
call
movsl
es
movsb
xchg
xchg
testb
leave
xchg
je
test
mov
data16
cwtl
dec
inc
es
push
jp
rcrb
mov
push
movsl
cmp
das
xor
inc
sub
test
mov
stos
sahf
out
leave
and
xor
in
es
mov
stos
or
cwtl
pop
ss
dec
jecxz
ficoms
adc
rorb
lods
shll
push
push
loope
cs
jo
xchg
fidivrs
adc
psubusb
int3
lret
and
ss
data16
mov
movsl
and
iret
aad
dec
bound
push
repz
js
lds
pop
femms
jmp
push
pop
mov
or
ljmp
push
mov
enter
dec
fcoms
clc
push
mov
ss
or
push
cwtl
dec
das
test
mov
push
fisubs
xor
testb
xchg
lret
xchg
pop
cmpsb
js
adc
or
shl
push
out
adc
adc
xor
mov
dec
push
int
xor
fdivrs
mov
adc
dec
xchg
clc
adc
sbb
cmp
sti
pop
mov
jb
mov
mov
adc
push
and
popf
dec
es
lret
test
mov
cmc
insl
or
xchg
jae
fbld
push
push
push
jb
or
scas
imul
pushf
test
xchg
adc
push
int
mov
mov
adc
sbb
call
out
xchg
movsl
nop
cmc
xlat
out
out
fdivrp
gs
jne
cmp
loope
jo
or
repz
xchg
xchg
mov
lds
push
adc
jle
sbb
gs
xor
cmpsb
push
push
mov
dec
ficoms
dec
xchg
imul
sbb
rcrl
int
fists
pop
insl
loopne
ss
dec
push
daa
push
fmul
data16
xchg
cmc
dec
mov
or
jae
decl
cmp
insl
mov
mov
mov
push
ss
or
mov
or
adc
out
js
daa
push
rclb
int
adc
push
testl
repz
das
lock
mov
mov
mov
testb
mov
imull
data16
stc
sub
fidivs
jae
or
fwait
pop
mov
pop
mov
rcrb
fisubrs
mov
js
xlat
push
gs
repnz
shlb
xchg
xchg
or
lods
cwtl
pop
adc
inc
loope
call
rorl
or
or
sub
dec
add
test
sub
out
xlat
xor
loop
sahf
push
dec
popa
xor
nop
push
dec
scas
clc
sub
push
sub
mov
rcll
pop
in
js
mov
mov
push
dec
sub
or
dec
ss
pop
xchg
dec
idiv
xlat
adc
push
xchg
or
xchg
rcr
sub
clc
call
push
movsl
cwtl
jle
jg
stos
loop
adc
pop
lock
scas
clc
lock
int
dec
cmc
in
xlat
clc
push
sbb
insb
daa
cmp
aad
push
loop
cmp
mov
mov
mov
mov
rep
scas
jbe
repz
mov
sub
lock
outsb
repnz
sar
push
pop
pop
out
sub
shlb
xchg
mov
sub
push
sbb
dec
imul
adc
addr16
or
call
das
or
pop
int3
sub
jbe
lea
testb
ja
mov
mov
mov
shlb
fsubrp
leave
lock
leave
into
mov
imull
mov
pop
fisubs
sbb
sbb
int
push
test
push
dec
daa
push
push
inc
jo
inc
dec
inc
shlb
pop
xchg
nop
fwait
int
mov
jne
in
clc
gs
lret
stos
mov
mov
mov
inc
push
insw
sub
ss
dec
xor
xor
sbb
xchg
adc
cwtl
out
lds
xor
xchg
data16
mull
bound
xchg
sub
mov
in
cmc
add
or
into
push
lea
adc
out
adc
push
mov
outsb
mov
loopne
lea
mov
mov
dec
sub
rol
push
ljmp
lret
sbb
ss
cmp
fistl
mov
cltd
and
lods
mov
push
push
xor
adc
sbb
fnstenv
sub
pop
jmp
notl
push
xchg
pop
mov
xor
cmp
pop
es
or
lret
rcrb
bswap
gs
in
adc
xor
test
xor
push
push
xchg
mov
aad
insl
fcoms
rcrl
mov
icebp
mov
insl
shll
or
and
nop
dec
dec
mov
vmaxps
aaa
dec
test
dec
jge
xor
or
or
push
shl
in
mov
shlb
xor
adc
nop
xor
aad
inc
divl
aad
ficoms
mov
mov
int
jae
std
fsubrp
call
xor
mov
push
scas
dec
sub
push
mov
dec
out
cmp
nop
mov
loope
call
mov
mov
xchg
mov
pop
scas
pop
nop
adc
inc
mov
test
sub
adc
or
sbb
or
mov
mov
mov
nop
test
push
dec
push
add
xchg
sub
cs
out
sbb
adc
jbe
and
push
stos
lock
movsb
aam
fdivrs
or
pop
xor
push
fidivs
adc
scas
gs
pusha
aad
dec
sbb
mov
or
decl
xlat
scas
pop
and
mov
push
jns
test
leave
shr
adc
in
nop
jg
mov
mov
outsb
push
shlb
lods
sbb
stc
lea
clc
je
leave
mov
ror
and
hlt
cmpsb
or
fmuls
mov
out
das
dec
sbb
pop
xchg
jbe
push
pop
sub
iret
mov
push
dec
lds
sbb
scas
fsubrs
push
mov
sbb
fcompl
mov
mov
push
mov
scas
loop
and
pop
lea
or
enter
negb
push
adc
adc
jb
mov
push
gs
inc
test
pop
shll
int3
xrelease
lahf
adc
mov
lock
pop
sub
or
idiv
subb
fs
ror
enter
push
test
xchg
cltd
xchg
push
insb
dec
xor
push
test
mov
dec
int3
push
push
pop
sbb
lods
nop
cs
fs
mov
push
mov
mov
scas
fisttpll
unpckhps
in
push
dec
mov
inc
test
sub
push
jno
inc
iret
fidivs
mov
clc
or
xchg
enter
sub
ljmp
inc
das
rcrl
or
push
cmp
pop
idivb
xor
xor
mov
fcmove
daa
call
je
aam
popl
inc
lret
mov
pop
adc
cmpsb
pop
lods
shl
push
test
pop
xor
or
cmc
sbbb
mov
inc
cwtl
push
ja
pop
dec
mov
pop
out
xlat
jmp
sbb
mov
insl
mov
loop
neg
xchg
call
xchg
xor
sbb
ja
inc
lds
repnz
shll
data16
inc
jbe
xchg
jb
stc
xor
ret
and
bnd
jle
xchg
shr
out
movhps
rcrb
push
mov
cmc
mov
loope
lret
xor
data16
dec
and
dec
jb
push
dec
data16
push
neg
xchg
pop
ja
push
inc
stos
and
xchg
or
das
sub
cmp
xchg
inc
sbb
push
xor
sub
aas
lret
xor
data16
xor
das
ds
shrl
int
loopne
call
test
lds
es
lahf
in
xlat
xor
rclb
or
stos
lods
leave
jo
xchg
push
jg
test
scas
mov
push
push
push
dec
aad
mov
lret
data16
pop
aad
daa
scas
mov
or
push
stos
shrb
xchg
lret
fidivs
adc
sbb
rorl
shll
das
and
pop
lea
push
adc
mov
data16
xor
in
hlt
inc
movsl
pop
push
mov
out
jb
dec
mov
insl
mov
notb
pop
sub
and
push
push
movsl
cmpsb
mov
mov
add
push
and
push
pusha
push
out
adc
shlb
jmp
addr16
pop
jge
xor
pushw
imulb
out
clc
aad
out
push
dec
iretw
push
lods
xchg
mov
mov
or
xor
movsl
jbe
mov
gs
out
mov
xchg
cmc
push
push
adc
or
cmp
push
cmp
scas
icebp
imul
xor
push
dec
inc
mov
pop
ljmp
lahf
decb
cmp
ds
mov
mov
sub
lea
test
xchg
xlat
scas
insb
cmpsb
subb
jb
call
inc
adc
repz
jo
mov
xchg
or
cmpsl
lods
mov
cmp
add
out
lods
enter
fstl
jge
xchg
push
imul
lds
xor
adc
out
push
jne
into
repnz
int
jmp
mov
aad
push
jae
pop
adc
jns
mov
xchg
js
push
mov
and
adc
jbe
xchg
mov
int
jo
lea
sub
loope
in
push
aad
pop
and
jae
js
pop
pop
mov
adc
adc
sub
mov
shrl
sbb
cwtl
mov
les
push
dec
cmp
daa
adc
mov
sbb
and
enter
jb
iret
pop
pop
mov
sbb
inc
in
adc
scas
jp
sub
nop
mov
push
dec
adc
jbe
cmpl
or
adc
xlat
or
fstl
xchg
pop
movsl
pop
jl
mov
clc
or
notl
fnstenv
pop
lcall
xchg
sub
fsubs
scas
mov
push
js
dec
cwtl
adc
jbe
jp
leave
mov
mov
push
fadds
push
lret
jmp
sub
fsubrs
jge
dec
test
or
mov
or
or
xchg
cmp
mov
dec
das
xchg
pushf
xchg
sbb
jbe
or
or
xchg
dec
jno
adc
xchg
daa
pusha
fists
lock
dec
out
js
sub
pop
js
ss
loopne
xchg
in
xchg
jb
xchg
jno
pusha
shl
mov
cmc
call
outsl
push
xchg
clc
adc
pop
lock
dec
daa
push
leave
push
iret
ss
push
dec
pop
sub
sbb
outsb
aad
mov
scas
sbb
xor
daa
push
sub
pop
adc
push
gs
stos
mov
sub
stos
nop
fmuls
imul
lret
dec
stc
int
das
jne
mov
call
bswap
insl
fsubrs
out
push
sbb
jge
or
push
jae
jne
mov
jbe
xor
push
lret
and
dec
dec
sahf
mov
push
adc
daa
push
lds
lds
outsl
sbb
xchg
data16
fmull
add
js
sbb
insb
int3
cmc
xor
adc
mov
mov
lds
lock
nop
xor
hlt
cmpsb
pop
dec
mov
mov
jno
loopew
sbb
scas
cmp
iret
imul
scas
sub
mov
and
adc
cwtl
jg
mov
sbb
sub
dec
adc
gs
or
adc
ss
in
push
ror
dec
mov
jg
sub
mov
insb
pcmpgtb
dec
cmp
pop
and
dec
sub
leave
cwtl
sub
xor
adc
fsubrp
fsubrs
cmp
iret
dec
ficomps
jb
xchg
lea
mov
dec
adc
dec
icebp
popf
popw
push
rclb
lock
sbb
pop
adc
mov
mov
stos
rcr
xchg
jbe
xlat
lcall
pop
push
dec
sub
jbe
test
repz
or
lret
mov
fisubs
call
dec
lock
shll
adc
mov
outsb
xlat
xor
sub
push
setbe
pop
pop
push
rclb
dec
scas
leave
cs
mov
jb,pt
repz
and
cwtl
stos
and
fmull
aam
dec
xor
push
sub
out
push
sbb
test
add
add
dec
xor
dec
push
xchg
push
sub
dec
movsb
and
sbb
rcrl
lock
add
lock
adc
jno
adc
in
insb
pusha
dec
xchg
iret
mov
adc
sahf
jp
push
xchg
dec
into
shrl
jne
bound
xchg
insb
shll
jge
dec
fsubrl
lds
clc
adc
test
adc
rorb
sbb
push
daa
out
ds
call
enter
xlat
in
push
dec
fs
or
xchg
mov
dec
push
jno
inc
cs
or
mov
mov
fsubrl
sbb
cmp
jmp
xchg
xchg
cmp
out
cwtl
xor
nop
fmuls
popa
pop
push
cmp
shl
cmovle
aaa
mov
xchg
or
push
in
idiv
mov
xchg
push
clc
aaa
test
imull
pop
mov
xchg
or
sahf
rorb
cli
xchg
inc
cwtl
insb
nop
inc
xor
push
jle
push
push
xor
js,pt
mov
je
jne
cmpsb
push
sbb
inc
cmpsb
or
jae
gs
mov
in
push
mov
fcoms
testb
das
adc
pop
mov
jbe
bound
jmp
div
pop
fsub
ret
lock
cmpsl
and
mov
decl
div
add
negb
cmpsb
dec
out
and
or
pusha
push
sarb
call
inc
pusha
loopne
jge
daa
mov
sbb
das
inc
mov
movsb
push
inc
xchg
push
fucomi
pop
mov
in
enter
adc
push
add
mov
lds
das
mulb
add
mov
cmpsb
push
xchg
notb
xchg
popa
mulb
rclb
xchg
sub
xchg
out
add
es
mov
or
push
cs
icebp
xor
je
cs
xchg
mov
cmpsb
orb
xchg
leave
out
test
sbb
cmp
insb
js
cmpsb
sub
enter
or
pop
rclb
xchg
adc
mov
inc
cmpsb
jo
repnz
stos
cmpsb
pop
cmc
enter
adc
in
jns
dec
cmp
fdivl
jb
or
push
aad
xchg
call
call
jne
dec
in
mulb
push
push
divb
inc
push
pop
xchg
xchg
adc
mul
daa
push
mov
xchg
pop
inc
jb
in
imul
and
mov
fcmovne
nop
sub
push
hlt
cmpsb
xlat
adc
cmpsb
fistl
testb
mov
push
test
cmp
push
xchg
dec
dec
scas
notb
push
cs
push
leave
divb
pop
pop
sub
push
inc
lcall
fsubrl
div
dec
cmpsb
jae
mov
and
in
in
or
xchg
inc
mov
cmpb
das
push
aad
sbb
in
mov
mov
xchg
data16
negb
add
testb
inc
setnp
or
or
notb
fwait
inc
cmp
mov
call
fwait
or
enter
ds
sbb
daa
cmp
enter
es
sbb
rolb
iret
gs
sbb
push
es
mov
push
pop
or
xchg
cmpsb
or
push
push
fcomi
fcoms
movsb
xchg
adc
gs
dec
testb
cwtl
mov
test
scas
xor
adc
jne
push
cltd
cmpsl
sbb
jle
xorl
popf
or
mov
or
jno
movsl
mov
cmpsb
xlat
xchg
test
dec
ret
lods
enter
fdiv
or
fildl
inc
push
lret
fdivp
mov
or
mov
notb
and
ljmp
jge
and
inc
cmpsb
ror
jns
aad
dec
out
push
rclb
mov
cmp
sub
jne
adc
lock
adc
push
mov
mov
in
js
cmpsb
daa
scas
in
sti
cmpsb
xor
cmpsb
out
in
or
negl
sub
pop
cltd
cmpsb
aad
in
mov
loop
cmp
push
push
js
std
push
sub
fcomip
notb
out
mov
daa
sub
lds
or
lods
mov
push
push
repz
xor
sbb
fistl
notb
rcr
out
cmc
enter
push
jg
mov
movsl
push
pusha
test
mov
mul
out
mov
cmp
negb
mov
push
notb
xor
cmpsb
int
jb
ljmp
or
dec
xlat
fnsave
push
pop
cs
scas
mov
scas
notb
daa
inc
enter
cmp
sub
mulb
test
sbb
loop
or
jno
lds
movsb
loop
stos
and
outsl
and
xchg
mulb
stos
daa
or
notb
cs
sahf
xchg
cmpsb
pop
push
cmp
sub
sub
cs
sbb
adc
and
xor
mov
out
pop
shr
insl
cmp
inc
mov
pop
leave
pop
aad
pop
push
push
xor
aam
cmp
add
imul
xor
mov
js
or
mov
pshufw
adc
test
pop
testl
cmp
outsl
push
test
notb
push
bound
adc
dec
push
or
insl
pop
pushf
sbb
mov
jbe
ss
or
sbb
cmc
push
lea
jne
push
ss
xchg
fstl
outsl
in
mov
popa
sub
fisttpl
pop
nop
push
pusha
mov
push
int3
mov
mov
stos
inc
adc
data16
mov
jae
mov
push
xor
adc
push
xor
movsl
push
lcall
or
icebp
mov
or
mov
leave
pop
push
sub
out
and
add
pop
jbe
aaa
mov
aad
pop
movb
lods
and
sbb
and
inc
aad
lds
dec
out
cmp
in
push
adc
dec
fnsave
sub
sbb
data16
inc
sub
fs
popf
lods
mov
mov
les
pop
scas
push
xlat
sbb
sub
scas
test
mov
lds
push
pop
into
or
fstpl
adc
pop
out
cwtl
dec
int3
and
lcall
mov
aad
mov
mov
add
test
push
cmpsl
xor
sub
xor
pop
push
gs
push
jmp
test
mov
or
adc
push
popf
add
jecxz
xchg
arpl
mov
iret
xor
icebp
xorb
adc
sub
dec
jb
pop
adc
pusha
pop
adc
js
mov
dec
jmp
or
rorb
push
push
mov
out
jmp
repnz
fs
test
in
pop
lds
pop
and
inc
push
inc
or
push
je
data16
ljmp
repz
jbe
and
outsb
mov
pop
adcb
ficomps
mov
push
push
xor
add
adc
retw
push
fnsave
mov
pop
xor
push
sbb
mov
data16
adc
mov
pop
ret
pop
inc
les
xchg
and
sbb
push
xchg
adc
out
js
ffreep
paddsb
cli
stos
orl
test
fiaddl
fcoml
mov
xchg
into
cmp
aas
pop
outsl
xchg
inc
push
push
mov
movmskps
dec
stc
xor
aam
lahf
sub
xlat
adcl
aaa
loope
jnp
negl
push
adc
test
jo
or
aad
adc
xor
push
mov
popf
pop
ss
loop
inc
mov
mov
cmpsb
jns
and
cmp
flds
mov
fildll
inc
adc
data16
xchg
decb
jg
xor
push
sub
cwtl
dec
push
jecxz
mov
dec
sbb
push
dec
mov
pop
shlb
dec
mov
pop
aam
push
sbb
push
push
fst
mov
pop
fdivs
aad
xchg
mov
mov
push
or
lret
mov
pop
dec
mov
sbb
lret
mov
pop
or
subl
push
pop
fstl
dec
xchg
test
mov
mov
sbb
mov
pop
xchg
mov
sbb
repnz
push
mov
data16
ret
frstor
mov
pop
bound
xchg
frstor
rcrl
mov
sbb
push
adc
and
pop
popa
mov
push
popa
jecxz
cmp
outsb
and
jno
add
arpl
shll
pop
mov
ret
sbb
push
and
repz
pop
xor
aam
push
test
or
mov
and
xchg
add
mov
xchg
ds
mov
and
data16
pop
adc
mov
bound
adc
push
fs
movsl
repnz
ss
mov
enter
pop
jle
imull
dec
pop
mov
mov
sar
push
sti
ss
inc
push
cmpsl
add
jge
add
push
or
sarl
decl
xlat
jbe
addr16
fstl
pop
or
mov
addr16
xchg
outsb
add
subl
ljmp
mov
push
frstor
push
or
mov
and
add
enter
dec
rorl
mov
addr16
outsb
add
xor
bound
or
mov
and
cmp
shlb
push
sub
aas
fs
xor
add
cli
mov
mov
repnz
xor
cmpsb
shll
mov
xchg
mov
scas
xor
popa
mov
sub
arpl
cmc
push
add
clc
fildll
aas
push
sub
sbb
test
and
xchg
sub
aaa
addr16
or
test
faddl
les
scas
nop
add
aad
xlat
cwtl
mov
push
mov
xchg
or
aad
in
xor
fadds
push
push
aad
punpckhbw
mov
mov
call
fs
ret
das
jg
pop
sub
leave
pop
test
cmp
sarl
dec
mov
dec
mov
pop
xchg
mov
sbb
mov
pop
fdivs
jmp
mov
adc
mov
mov
sbb
mov
pop
jl
push
sbb
adc
mov
sub
iret
mov
pop
fdivs
in
dec
lret
xor
sbb
mov
or
pop
mov
push
nop
fstp
mov
pop
jns
xchg
sbb
cwtl
fstpl
mov
arpl
pop
or
pop
fisttpll
stc
pop
xchg
mov
sbb
push
sbb
sbb
ds
push
test
fnstcw
pop
jp
nop/reserved
fstpl
adc
mov
sbb
push
xchg
fstpl
aad
dec
mov
add
pop
dec
mov
sbb
push
sbb
or
adc
in
stos
dec
dec
call
lret
sbb
push
adc
lahf
rcrb
mov
sbb
push
xchg
mov
shl
dec
pop
mov
out
fst
mov
pop
shll
scas
dec
or
in
mov
add
or
mov
mov
or
mov
mov
jl
notl
jecxz
push
xchg
cs
push
cwtl
aas
shrl
mov
sar
cli
ljmp
arpl
cwtl
mov
jg
push
psubd
lret
fwait
out
xlat
mov
sub
leave
aaa
or
xchg
pusha
sbb
mov
dec
leave
fmuls
dec
jno
scas
jae
rclb
lahf
mov
iret
enter
jmp
movaps
andl
mov
test
jg
shr
iret
jge
mov
fsts
jmp
int3
dec
pop
dec
pop
sub
insl
leave
xchg
fadds
mov
xchg
mov
fsubs
xor
and
sub
ja
jbe
jae
sbb
sub
pop
ss
std
pop
push
sub
shrb
push
cmp
test
adc
xchg
arpl
test
rdmsr
push
es
push
jmp
adc
std
not
jp
xlat
mov
jp
stc
data16
out
aas
dec
jmp
adc
sub
sbbb
push
stc
mov
adc
jmp
loopne
dec
adc
xor
rcr
mov
sub
cwtl
adc
lret
pop
test
mov
vprotb
adc
scas
xor
scas
mov
pop
adc
push
lahf
mov
xchg
and
push
pop
stos
ret
leave
adcl
cwtl
adc
pusha
mov
aam
sbb
push
arpl
ss
mov
xor
icebp
fstl
fmull
dec
mov
loope
dec
mov
fstl
jb
mov
xlat
adc
adc
sarl
lret
aad
pop
repnz
sub
mov
adc
adc
loope
and
lcall
call
shrb
push
aad
insl
push
adc
lret
dec
lret
icebp
dec
ja
mov
pop
aam
lea
xchg
clc
in
bound
lea
or
cs
adc
push
adcb
dec
aam
lret
ss
daa
xlat
xchg
mov
jbe
inc
iret
ljmp
push
das
cli
out
rclb
fcomps
loopne
clc
xchg
vpshab
sub
imulb
jns
or
pop
push
popf
adc
aas
and
sbbb
mov
mov
outsl
push
jmp
repnz
mov
aad
sbb
aad
fsubrs
mov
adc
dec
ds
add
jbe
out
push
xchg
push
mov
jne
sub
mov
xlat
or
pop
jl
lods
out
mov
push
fimuls
sbb
or
aad
scas
sub
loop
mov
push
xor
xchg
add
jp
adc
mov
aas
adc
or
fst
push
pop
adc
sti
rclb
mov
sbb
adc
scas
fdivs
push
pop
loop
ljmp
or
xchg
test
xor
ret
xchg
out
mov
les
loop
scas
mov
sbb
sub
xor
inc
rcrb
hlt
push
movsb
popf
lods
pop
jno
adc
shl
add
or
and
dec
call
sub
jg
cltd
inc
sub
push
mov
dec
jecxz
push
dec
push
das
inc
fnstsw
mov
int3
sub
cmpsb
xchg
aaa
jecxz
dec
adc
into
pop
jp
and
loope
in
mov
andb
pop
mov
int
aam
jg
scas
adc
ljmp
fmull
dec
or
push
out
push
xchg
ja
lret
push
xlat
push
sub
js
shlb
push
fstl
mov
pop
xorl
push
sbbl
mov
rcr
push
mov
push
cmp
cmp
test
aad
sbb
push
fstl
push
xchg
dec
fisttpll
loope
loopne
or
jno
xchg
xchg
cwtl
mov
aad
clc
cwtl
cmc
sbb
mov
lcall
lret
pop
scas
aam
sbb
inc
test
insl
aad
push
nop
dec
push
push
mov
fsubs
dec
adc
hlt
xor
mov
push
mov
scas
inc
mov
push
pusha
push
es
mov
xor
push
mov
adc
push
push
scas
push
aad
push
enter
lret
mov
sbb
jg
dec
push
je
ss
push
mov
xchg
dec
icebp
push
push
loope
push
sbb
mov
shlb
xlat
fiaddl
push
jle
pop
iret
shl
lret
cmc
dec
xlat
fcoms
int
mov
mov
fists
adc
aad
repnz
rcl
and
xchg
rorb
iret
push
ret
ret
mov
aad
xlat
push
xor
mov
push
insb
aas
test
rorl
aad
aas
ljmp
cs
stos
mov
or
jp
dec
mov
jne
iret
dec
push
push
ljmp
pop
xchg
push
jmp
rorb
push
push
xchg
clc
push
xchg
push
push
leave
aam
popf
or
shrb
imul
aad
rcll
cli
mov
aam
dec
rcr
into
int
mov
adc
call
shlb
push
push
movsb
and
and
xchg
xchg
pop
adc
lcall
dec
rorb
xchg
scas
mov
test
imulb
mov
dec
leave
xor
xchg
and
mov
mov
adc
sub
je
xchg
ret
sub
adc
ljmp
mov
and
test
mov
push
insb
pop
dec
cmp
mov
ret
mov
cmpsb
adc
bound
lock
and
scas
stos
orl
dec
cli
rcrl
aad
dec
push
fldl
lods
leave
in
pusha
scas
inc
movb
out
decl
mov
ret
out
adc
push
cmpsb
pop
int
xlat
push
inc
xchg
call
or
pop
outsl
mov
adc
sti
scas
or
push
sahf
xchg
and
xchg
adc
pop
xchg
fstl
pmuludq
gs
xchg
push
mov
outsb
call
push
int3
sub
xchg
adc
aaa
es
xchg
mov
call
cs
enter
pop
push
int
fisttpl
mov
ja
xchg
nop
repnz
mov
call
adc
out
jmp
adc
and
ja
dec
adc
jle
dec
enter
dec
mov
or
or
push
or
mov
addr16
data16
pop
notb
in
push
data16
rcpps
dec
xchg
out
push
dec
out
xor
mov
push
popw
push
xchg
rcl
and
pop
sub
xor
fimuls
sti
or
je
jno
leave
mov
or
ljmp
out
mov
cmp
push
push
mov
xchg
jp
mov
into
pushf
adc
call
push
mov
mov
cmc
into
lcall
repnz
sbb
scas
xor
notb
xor
rcll
mov
or
outsl
dec
dec
xor
loop
mov
mov
in
pop
dec
jmp
mov
hlt
xchg
aam
sub
leave
or
dec
cld
pop
cmp
sbb
cmpsl
rclb
fwait
mov
aas
cltd
in
and
pop
das
pxor
pop
jg
xchg
add
cmpsl
mov
outsl
scas
or
sub
cli
fisttpl
mov
pop
jl
lret
push
or
out
xor
xchg
fs
inc
lret
jns
pop
or
jb
testb
inc
ljmp
mov
mov
in
add
repnz
rcll
int
and
push
xchg
mov
push
mov
shll
fs
sbb
adc
xchg
adc
ret
pop
in
mov
mov
repz
fidivrs
sub
push
or
cli
push
test
xor
mov
jns
dec
jle
jl
mov
mov
aad
push
test
xor
and
mov
mov
sbb
setg
lret
test
stos
dec
xor
push
push
or
jmp
mov
cmp
divb
lock
mov
scas
pop
pop
mov
cmpsb
mov
es
iret
cmp
or
xchg
icebp
xor
push
mov
lahf
dec
out
aad
mov
das
mov
aam
xor
mov
add
mov
call
and
mov
add
xchg
dec
xchg
lods
pop
aad
pop
mov
fs
fldenv
cmpsl
mov
push
iret
and
cmpsl
cmp
ss
loopne
into
push
xor
adc
bound
je
sti
dec
sub
enter
push
lds
sahf
xor
iret
pop
lock
sub
ljmp
sahf
into
ss
xor
or
divl
int
mov
int
and
xchg
and
lea
das
push
and
jno
sub
fistpll
adc
enter
lcall
push
adc
adc
xor
adc
repz
sub
mov
or
lods
cmpsl
stc
adc
dec
rorb
das
sub
lods
dec
dec
pop
adc
repz
sub
lock
popa
sar
sbb
cmp
push
adc
lret
icebp
sub
xor
jle
mov
xlat
sar
mov
ljmp
jg
nop
ret
adc
loop
jbe
push
adc
stc
sti
lcall
scas
out
mov
xor
mov
sub
loope
cs
mov
pushf
mov
or
and
push
pop
jbe
loop
inc
adc
cmp
out
or
mov
int
mov
adc
nop
or
mov
mov
adc
push
fs
nop
daa
icebp
jae
daa
loope
ja
pop
or
lods
lods
mov
dec
xchg
push
push
push
repnz
imul
xor
push
mov
sbb
lods
mov
jbe
jp
mov
and
xchg
scas
das
xlat
aaa
fmul
or
sbb
mov
into
xor
or
int
xchg
mov
push
jbe
cmp
bound
pop
xchg
out
mov
dec
cmp
mov
cltd
or
in
notb
xchg
and
shll
adc
je
scas
push
jns
xlat
xchg
sbb
mov
push
mov
mov
fadds
cwtl
stos
xchg
xchg
push
mov
pop
push
lret
data16
out
xchg
fisttpll
nop
add
mov
mov
cwtl
push
fmuls
mov
push
or
data16
out
stos
mov
xchg
push
push
and
out
dec
pop
xchg
shlb
shrl
push
push
popa
dec
mov
pop
into
lea
or
sbb
test
cmp
push
fcom
push
dec
cmp
stc
rorb
fidivs
cmp
fbstp
leave
std
jp
jne
jno
mov
lods
rcll
mov
jp
sarl
ret
sbb
and
pop
xlat
pop
out
push
daa
sbb
jl
ss
pop
or
jne
btc
dec
rcrb
mov
daa
enter
dec
mov
out
dec
sub
push
dec
push
into
cli
xchg
not
movsl
ret
divb
lods
mov
test
psadbw
inc
cmp
xchg
insb
dec
sbb
std
push
addr16
mov
adc
mov
mov
shll
dec
outsl
mov
leave
jmp
or
roll
das
or
lret
push
dec
rclb
outsb
out
dec
cld
push
mov
xchg
xchg
nop
loopne
pop
mov
adc
xchg
inc
pop
push
mov
jns
in
addb
pushf
test
mov
xlat
repz
hlt
push
adc
repz
nop
dec
dec
push
sbb
ljmp
outsl
push
cmp
jle
scas
mov
cmp
cmpsb
imul
mov
in
mov
rclb
or
clc
leave
mov
jp
mov
pop
in
xchg
or
adc
data16
rclb
jge
call
aas
inc
stos
mov
ret
outsl
add
mov
adc
das
mov
negl
push
test
cmp
iret
or
dec
out
fcmovb
adc
pop
xor
dec
lahf
mov
shll
or
mov
sbb
stc
cld
add
fstpt
mov
sbb
mov
jecxz
push
sti
pop
jbe
xor
test
and
inc
js
push
sar
cmp
in
jae
dec
ljmpw
dec
push
xchg
mov
lods
stos
mov
mov
aad
lahf
inc
jge
js
fcoms
push
xchg
test
mov
leave
icebp
pop
loope
pop
push
call
nop
pop
mov
ja
and
es
pop
cwtl
test
pop
or
jbe
das
xchg
mov
leave
cmovle
push
dec
pop
xchg
stc
call
mov
dec
add
cmp
mov
ljmp
stos
stos
or
test
sub
ss
cmp
add
loopne
les
call
xchg
in
aad
mov
jmp
pop
lock
xlat
mov
pop
cwtl
push
or
fsub
push
inc
stos
cli
mov
push
and
xor
cmp
fcmove
outsl
sbbb
in
cmpsb
jbe
inc
adc
mov
mov
pop
shll
xchg
fs
rcrl
fcmove
pop
push
cwtl
pop
pop
pop
mov
stc
xchg
bswap
xchg
xor
mov
fcom
scas
test
dec
pop
loop
add
dec
pusha
adc
dec
sub
std
scas
xchg
loopne
adc
out
andb
dec
test
jmp
push
in
or
mov
cwtl
outsl
or
pop
jp
jmp
cli
pop
jg
scas
stc
aaa
or
scas
dec
jge
xchg
or
call
add
pop
dec
adc
ljmp
jnp
jmp
mov
cmp
rcll
lret
das
mov
aad
mov
inc
mov
push
mov
xor
ljmp
sbb
or
dec
lahf
push
mov
mov
sbb
out
mov
adc
sub
push
adc
ret
mov
xlat
pop
les
in
push
repnz
fnsave
sti
sub
in
adc
ret
fcomps
and
movsb
and
xchg
pop
mov
sti
stc
arpl
hlt
dec
mov
test
and
xchg
push
ja
cld
xlat
les
ret
js
sbb
push
xchg
sbb
sub
sub
cmp
int
push
dec
fs
mov
xchg
jno
test
aaa
test
mov
aam
jge
sqrtps
fs
cmp
int3
outsl
push
bound
wrmsr
and
dec
test
adc
orl
dec
clc
mov
fildll
out
pop
shrl
jge
and
out
shlb
in
adc
arpl
movl
and
bound
and
insl
das
fisttps
push
xor
lcall
loope
pushf
push
cmpsl
pusha
sub
int
loop
call
aad
lret
loop
hlt
lret
mov
jno
mov
mov
jp
inc
test
scas
adc
push
sbb
imul
cmc
push
dec
lret
inc
nop
icebp
scas
ja
adc
outsl
out
push
fs
out
adc
or
sbb
aas
mov
xchg
sub
or
mov
hlt
in
xchg
adc
adc
pop
adc
adc
mov
movsl
adc
and
push
sbbl
gs
aad
stc
btr
adc
mov
xor
jge
mov
lcall
push
fldl
in
out
inc
sbb
xor
cmp
or
call
sti
fisttpl
push
cmc
lods
xchg
mov
inc
addr16
mov
fbld
test
loop
pop
stos
movsb
lea
in
mov
std
lods
pop
or
mov
mov
cli
mov
inc
test
pop
dec
push
cmp
adc
and
push
mov
icebp
jne,pn
leave
jne
hlt
sub
sbb
pop
fs
dec
aas
shrb
mov
out
fsubrs
xor
or
sbb
adc
lea
js
lock
cmp
cmp
mov
mov
lea
cmp
into
in
dec
cltd
nop
adc
clc
xchg
dec
cmp
loopne
fs
push
cld
jb
pop
hlt
aaa
arpl
ja
shll
lcall
lahf
mov
popa
lret
mov
fwait
and
adc
mov
ret
push
pop
jp
push
imul
jnp
int3
adc
fs
dec
movsb
cmp
fsubs
adc
jnp
jb,pt
movsb
and
jbe
or
pop
add
mov
movsb
sbb
out
andl
imul
data16
out
adc
lret
and
gs
aad
dec
call
push
push
in
fsubs
xchg
pop
imul
dec
adc
outsb
adc
push
dec
dec
push
xchg
or
and
aam
rclb
sahf
arpl
popf
fdivs
mov
adc
shll
push
lods
adc
push
rol
rorb
dec
xlat
ror
mov
stos
xchg
push
repnz
dec
popa
xchg
mov
shr
xchg
push
inc
lret
int3
jno
ss
push
cmp
mov
or
scas
lods
or
cltd
xor
mov
pop
outsl
popa
test
stos
lea
adc
push
cltd
add
lret
inc
pop
mov
test
rorb
in
mov
scas
xlat
loopne
enter
js
mov
jae
xorb
sbb
inc
sbb
test
cmpsb
xchg
mov
adc
jb
mov
hlt
out
iret
seto
js
jb
stc
pop
das
add
inc
sar
lret
cmp
leave
loop
lret
mov
pop
fadds
cmp
xor
mov
mov
jb
aad
mov
je
mov
cmp
lods
das
lcall
inc
push
inc
pop
pop
mov
leave
testb
or
outsb
mov
jl
pop
repz
outsb
repnz
fwait
test
fldcw
push
out
imul
stc
loope
in
pop
shlb
stos
pop
mov
outsb
push
mov
or
dec
setnp
imul
leave
sbb
push
iret
xor
add
mov
or
aam
or
sub
imull
inc
inc
rorl
lcall
dec
fists
xchg
push
adc
lret
arpl
dec
fstpt
stos
in
jno
int3
pop
stc
sbb
push
pop
mov
cmp
jb
outsl
or
xchg
cmp
xchg
xchg
inc
inc
cmpsl
mov
test
and
pop
mov
enter
lea
outsl
mov
push
pop
repnz
add
mov
jb
gs
or
add
std
adc
or
sbb
pop
xor
popf
adc
adc
sub
pop
xor
insb
loop
lods
sub
and
mov
adc
vmovd
mov
nop
leave
push
pushf
rolb
or
or
and
adc
shlb
mov
mov
fs
jo
sbb
lods
repnz
lods
es
and
adc
mov
rclb
xchg
fadds
mov
movb
lahf
mov
into
cmp
xchg
out
mov
into
sbb
pop
gs
push
out
orb
push
lods
push
ja
xchg
iret
lods
out
add
push
les
mov
mov
sbb
or
mov
and
test
sti
push
jae
xchg
xor
rcr
jmp
shlb
push
adc
adc
lret
repz
sahf
stos
push
popl
push
aas
fstl
or
push
scas
inc
and
push
fidivs
aad
das
aaa
dec
mov
push
into
aaa
mov
sub
sub
rorl
fstl
xchg
cwtl
adc
xchg
push
cmpsb
fnsave
enter
mov
pop
mov
lds
adc
mov
lock
adc
movsl
push
push
fdivs
dec
jo
nop
cmp
shll
movsb
adc
lods
dec
dec
mov
jns
cli
pop
lods
or
mov
outsb
adc
pop
xchg
jle
pop
les
repnz
push
popf
sub
stos
or
xchg
or
pop
xlat
dec
inc
mov
cmp
mov
mov
sbb
mov
xor
lahf
inc
aas
fdivr
pushf
pop
and
mov
mov
mov
and
add
mov
out
push
das
inc
push
jo
push
inc
out
aas
fcmovnu
loopne
xchg
and
leave
stos
jg
jp
loopne
mov
ljmp
cmp
xlat
cli
test
daa
inc
mov
hlt
aad
push
pop
or
ss
fsubrs
aaa
adc
mov
outsb
adc
push
adc
push
mov
dec
xor
xchg
movl
dec
mov
dec
or
insl
cmc
icebp
xchg
or
loope
es
movsb
jbe
xchg
jb
loopne
out
cli
push
std
popa
xchg
xlat
es
nop
adc
pop
imul
sbb
orl
test
push
sub
mov
add
sahf
jmp
dec
xor
push
dec
add
icebp
or
push
adc
push
sub
cwtl
push
dec
loopne
or
push
cwtl
out
xlat
pop
jge
js
test
test
int3
lcall
dec
sub
push
mov
aad
or
sub
popf
or
iret
or
scas
push
aas
scas
decb
std
andb
sub
or
popf
xor
mov
push
test
or
stc
in
aaa
cmc
aad
aad
xchg
fstl
subb
adc
decl
cmc
fidivrl
addr16
iret
adc
mov
int
mov
aas
shll
mov
xchg
fwait
cmp
jo
repnz
inc
or
icebp
popf
pop
xchg
mov
daa
int
popa
mov
pop
inc
pop
adc
jne
jno
nop
push
lcall
shll
or
mov
sbb
dec
add
xor
mov
stc
fdivr
in
adc
movsl
xchg
fnstenv
imul
das
mov
cli
or
xchg
inc
adc
xchg
jns
cmp
push
dec
ret
mov
movsb
dec
xor
js
lock
div
fcmovnu
ljmp
mov
jns
jmp
rorb
sbb
dec
jmp
je
cli
pop
jp
sub
outsb
mov
push
cmc
sub
fsubs
or
mov
xchg
inc
inc
cs
lret
cld
clc
mov
fcmovne
shl
and
aaa
popf
mov
mov
sbb
daa
jne
enter
push
aaa
pop
jno
mov
or
and
sbb
das
rcrb
scas
inc
mov
push
sarb
in
xchg
ffree
jecxz
enter
loop
repnz
mov
cmp
mov
fldl
lahf
inc
xor
sbb
fs
imul
sbb
mov
lock
sar
pop
mov
nop
sub
xlat
ljmp
adc
xchg
jp
lods
sbb
xchg
jo
rcll
sub
jmp
inc
test
test
jle
inc
pop
outsb
dec
xchg
inc
addr16
push
mov
jp
mov
pop
stos
mov
negb
ss
mov
ficoml
test
adc
adc
nop
shlb
setbe
aaa
xor
cmp
cmp
xlat
rclb
fisttpl
fdivs
fisubl
in
adc
push
mov
mov
out
pushf
daa
rcrb
into
mov
or
aam
leave
jbe
lret
movsb
aad
mov
aam
daa
cwtl
push
repnz
dec
loope
sub
xor
xchg
sub
lock
pandn
stos
xor
dec
loop
data16
push
xchg
xor
adc
mov
mov
push
ud1
mov
rcll
jne
je
adc
dec
icebp
sub
lcall
in
dec
push
push
das
cwtl
mov
xchg
xchg
inc
or
push
aad
insb
xchg
pop
push
xlat
pop
orps
leave
dec
pop
sbb
jne
fsubl
into
sub
adc
aad
mov
je
pushf
inc
ss
add
call
cwtl
loopne
xorb
into
repnz
fs
arpl
sbb
sbb
mov
addr16
add
movsb
cwtl
shlb
dec
sbbb
jb
xor
xchg
adc
push
push
adc
sarb
push
push
push
adc
inc
adc
cs
jbe
int
dec
xlat
inc
adc
xchg
dec
dec
jbe
rcrb
aad
pop
pop
xor
cmc
rorl
dec
xchg
mov
std
jp
ret
add
add
xchg
add
pop
sbb
cmp
sbb
and
rolb
test
inc
arpl
call
push
adc
dec
dec
or
fstpl
aaa
aad
fmuls
sbb
or
push
adc
mov
dec
dec
add
pop
icebp
push
or
rdpmc
sub
daa
fsubrs
push
fcoms
mov
nop
call
push
dec
pop
add
push
repnz
lret
jae
cs
adc
adc
in
jne
jmp
sbb
imul
sbb
movsb
into
inc
xchg
add
mov
mov
add
xor
in
pop
js
fcomps
faddl
jl
push
mov
inc
dec
mov
movsb
negl
xorb
daa
fsubrs
xchg
dec
sbb
sub
xchg
fdivrs
mov
pop
dec
mov
cltd
pop
test
add
adc
push
jp
sarl
out
insl
pop
fisttps
aad
mov
addr16
out
and
les
aad
cmpsl
ret
cmp
xor
into
rcr
loopne
loop
ret
and
add
xor
mov
mov
adc
and
add
xor
mov
les
inc
dec
mov
pop
daa
testl
mov
push
ja
mov
and
imulb
mov
stc
test
adc
push
out
adc
notl
adc
test
enter
loopne
bound
jae
arpl
mull
es
cmpsl
mov
and
xor
dec
push
and
cmc
mov
std
mov
enter
jb
loop
mov
cmp
mov
lret
pop
test
int
fstl
xor
push
rcrb
cmpsb
stc
lea
dec
dec
cwtl
icebp
dec
ret
fistpl
hlt
jne
not
mov
into
push
aaa
dec
mov
out
js
adc
data16
and
scas
out
mov
mov
sti
mov
lea
adc
xor
adc
aad
pop
push
fsubs
jg
jae
jno
inc
loope
mov
jl
call
popl
push
aas
push
jno
lds
and
pop
push
inc
mov
sbb
std
fstpl
mov
mov
ds
data16
movsb
mov
cltd
ja
fcoms
jno
adc
shll
inc
fdiv
and
dec
xchg
push
and
cmp
xlat
scas
xchg
subl
pushf
mov
fsts
adc
push
adc
clc
leave
mov
mov
hlt
das
mov
rcl
fs
add
push
shrl
mov
and
push
mov
adc
roll
push
fstl
ret
dec
out
push
repz
mov
pop
dec
push
test
dec
test
outsb
add
mov
add
push
sbb
sub
int
and
xlat
dec
ret
adc
xchg
pusha
sarl
push
pop
int
rorl
push
inc
rcrl
push
dec
xor
sarl
adc
mov
stc
mov
fs
std
lret
and
gs
push
movsb
mov
mov
push
push
lods
and
dec
jbe
and
lea
movsb
imul
shll
dec
dec
dec
mov
cmp
leave
jne
mov
adc
and
out
fcomp
test
xchg
and
rorl
xor
repnz
push
add
scas
shll
jb
mov
cld
aam
adc
push
int3
dec
js
aam
jno
aas
xor
mov
fsubrs
test
xchg
ss
stos
add
lea
shlb
mov
dec
fcmovnb
rcll
mov
cmp
pop
sbb
add
ret
ljmp
insb
xchg
movsb
cmpb
lret
test
sbb
movsb
push
shlb
repz
xcrypt-cbc
cmpsl
rolb
and
or
out
push
fwait
popa
dec
jne
mulb
dec
dec
xchg
mov
jl
dec
push
je
bound
adc
test
rcrb
pop
adc
push
arpl
fldt
mov
lds
dec
lock
cwtl
ret
test
int
pop
lods
xchg
dec
fs
sarl
push
cli
adcb
adc
sub
ja
jno
push
lret
bound
iret
loope
loopne
sub
je
and
xor
pop
adc
inc
push
test
fcom
sub
sbb
pop
scas
push
push
fbld
mov
add
outsb
je
adc
xlat
icebp
jmp
ret
pop
cs
loop
mov
mov
adc
jne
std
mov
fldenv
xlat
aas
movsb
cmp
mov
ja
push
add
cwtl
je
lods
mov
into
push
and
xchg
and
daa
int
mov
xchg
aad
movsl
ss
mov
enter
repnz
pop
sub
cld
iret
pop
dec
mov
clc
in
jbe
and
push
pop
xlat
ret
ljmp
movsb
shrl
out
jecxz
push
fincstp
fs
pop
call
cmc
mov
repz
test
fsubs
sub
int3
pushf
mov
mov
int3
pusha
pop
inc
leave
or
int
std
mov
and
add
xor
into
test
or
push
orb
mov
jbe
or
xor
mov
icebp
push
fcomps
and
shll
pop
shll
adc
shll
dec
add
and
shll
push
xlat
xor
xchg
pop
scas
mov
mov
and
xor
push
rcll
pop
mov
aaa
dec
push
fsubrp
push
insb
adc
mov
js
xchg
and
sub
iret
movsb
fadds
inc
mov
or
pop
es
ret
xchg
xchg
cmp
in
sbb
shl
add
mov
dec
push
icebp
cmpb
push
das
push
pushf
xor
ja
push
dec
xor
mov
push
pusha
jne
mov
adc
cmp
aam
fs
and
arpl
mov
mov
cmp
es
add
mov
and
ret
gs
fmul
mov
int3
xchg
outsb
enter
pop
push
hlt
xor
cmc
xchg
sbb
shl
adc
push
xchg
xchg
push
mov
sub
and
movsb
fcomp
add
mov
repnz
sahf
cmp
xchg
ljmp
icebp
dec
mov
xchg
mov
aas
dec
out
rorb
mov
cld
xchg
dec
ss
push
imul
out
int
push
out
hlt
inc
push
dec
push
gs
data16
mov
sbb
sbb
fdivrs
dec
mov
fmulp
mov
sbb
mov
pop
or
dec
fisttpll
mov
pop
dec
mov
sub
xlat
into
sbb
rcr
adc
xchg
adc
adc
mov
sbb
push
fcomp
push
orb
mov
push
sbb
or
mov
sbb
mov
push
sbb
data16
pop
xchg
inc
xchg
xchg
rclb
xchg
aad
mov
push
enter
aad
loop
ret
pop
pop
mov
push
shl
roll
push
push
dec
movsb
fstp
mov
jo
shl
dec
into
prefetch
or
fcoms
mov
pop
push
fnsave
aad
pop
int
xchg
roll
outsb
add
shrb
fcomp
stc
or
dec
xchg
out
mov
push
mov
aam
arpl
pop
push
adc
loopne
aam
jge
mov
push
shlb
hlt
push
in
fcmovb
sub
fisubrs
dec
rcrb
js
dec
loop
out
ret
or
xor
stos
inc
daa
ror
adc
ss
sub
lret
push
xor
mov
mov
pop
push
or
gs
xchg
in
fstpl
stos
jle
ret
frstor
xchg
mov
push
or
xor
in
jl
dec
sbb
push
push
in
shll
idiv
xchg
hlt
iret
aad
ret
aad
add
jle
jp
jne
pop
xchg
in
in
es
sbb
gs
mov
pop
aad
xchg
mov
push
dec
frstor
dec
adc
dec
pop
mov
xlat
mov
call
push
lahf
inc
out
into
jnp
ss
mov
stc
pop
push
es
jecxz
cmpsb
shrb
into
adc
dec
gs
fwait
xchg
and
rcl
mov
adc
mov
mov
loop
dec
aam
lret
daa
stos
push
call
sbb
leave
cmp
xchg
pop
pusha
pop
xchg
test
pop
fdivs
sbb
cli
dec
ljmp
lds
fnsave
or
xchg
xchg
frstor
mov
pop
mov
xchg
sbb
push
push
fstl
push
pop
and
push
push
frstor
rclb
in
pop
push
mov
sbb
push
pop
fldl
xchg
pop
enter
sbb
rorb
hlt
mov
jl
imul
adc
xlat
jle
adc
push
mov
ss
loop
push
rorl
popaw
call
insb
shrl
push
fldl
sub
pop
in
imul
sub
mov
sbb
push
out
fisttpll
mov
mov
push
ja
jb
je
ret
sahf
pop
lods
mov
sbb
push
imul
mov
pop
icebp
mov
sbb
mov
pop
sub
jbe
mov
sbb
push
xor
cmpl
sbb
imul
in
mov
pop
je
scas
sbb
mov
dec
mov
pop
psrad
rolb
scas
shr
fdiv
dec
aad
push
or
sbb
push
adc
test
and
mov
push
mov
mov
out
or
scas
and
xchg
test
sbb
pop
mov
mov
push
push
adc
fcmovnu
xor
xor
adc
xchg
int3
jae
outsb
ss
or
or
or
and
sbb
mov
or
rcll
fstpt
rol
bound
xchg
imul
or
mov
ret
push
or
mov
jne
add
aaa
push
popa
fldl
mov
pop
stos
mov
sbb
push
fmuls
mov
mov
in
mov
pusha
push
sbb
fcomp
adcl
dec
mov
xchg
dec
dec
shrl
push
push
int
xchg
iret
sarl
or
dec
cmc
rcr
outsl
repnz
jg
inc
outsb
pop
push
loopne
pushf
mov
stos
mov
insl
pop
out
dec
push
mov
leave
mov
xor
xchg
mov
sbb
test
insl
pop
jg
adc
scas
pop
cmpsl
into
xchg
sbb
jp
bound
test
int3
mov
pop
add
mov
push
inc
and
addr16
sti
roll
cltd
outsb
imul
xor
ret
repz
mov
push
fdivrp
out
pop
aad
xor
or
cmp
or
xor
sbb
cli
fnsave
lock
gs
add
out
aam
pop
push
mov
add
test
sbb
cmpsl
sbb
xor
lock
lret
loopne
lret
mov
push
in
fwait
ds
dec
sub
add
sbb
jg
dec
rcrb
cmp
mov
aam
sub
mov
aad
cmp
stc
rcl
es
lret
inc
jns
sbbb
lret
mov
lods
push
add
leave
xchg
push
add
nop
sbb
xchg
insb
shl
out
fs
andb
test
out
cmp
cmpsl
mov
sbb
sbb
stos
fwait
dec
push
push
push
in
mov
lret
inc
fsub
mov
in
pop
fldt
and
lcall
add
or
jne
jp
lret
ljmp
in
xor
and
jae
push
rcll
insb
mov
push
and
jbe
pop
addr16
sub
push
cmp
nop
loopne
adc
repnz
cltd
and
inc
testb
jnp
fisubs
gs
sub
out
nop
xchg
call
add
rorl
fwait
stc
inc
mov
push
inc
fisttps
lock
int3
ljmp
pop
and
cmp
aaa
jecxz
test
int
addr16
outsl
lret
sub
scas
mov
mov
push
scas
in
mov
adc
aad
cwtl
sub
test
pop
addb
jle
push
adc
imul
dec
xor
fstl
mov
mov
lret
jle
xor
mov
jge
test
cwtl
dec
movb
mulb
lock
mov
xchg
sbb
int3
mov
push
adc
cmpsb
dec
bound
inc
pop
inc
adc
pop
cmp
adc
popf
je
adc
jge
ret
adc
aad
adc
cmpsb
cmpxchg
inc
mov
adc
xchg
rorb
mov
xchg
pop
scas
xlat
into
arpl
call
inc
daa
inc
out
xchg
neg
jno
fstl
mov
push
jae
call
push
pop
mov
xlat
sbb
fiaddl
cmpsl
fimull
aad
push
mov
and
push
xchg
sbb
jecxz
loope
xchg
aad
sbb
xchg
cwtl
jmp
and
or
imul
lds
lds
pop
mov
mov
aad
push
cmp
imul
cmc
fs
bound
je
mov
shrl
js
inc
aad
dec
push
xor
cwtl
inc
mov
shl
loop
dec
push
jne
or
sub
adc
fdiv
scas
repnz
enter
scas
add
add
fidivl
loop
sbb
mov
xchg
sub
clc
inc
pop
lods
push
or
mov
cmp
ss
enter
shll
les
push
xorl
rol
js
jle
icebp
or
mov
mov
mov
xchg
xlat
shll
or
mov
xchg
add
push
clc
pop
adc
movsl
push
je
in
shll
xor
sub
rclb
mov
mov
add
es
leave
jge
adc
xchg
sbb
and
loop
pusha
cmpsb
cmp
ret
test
add
test
inc
add
jecxz
push
push
add
pop
out
push
push
mov
mov
sarl
push
testl
aad
and
and
shll
in
aad
xlat
mov
inc
mov
push
popf
movsl
pop
in
jne,pt
jge
test
lods
mov
dec
push
lret
subl
faddl
cmp
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
cmc
cmp
push
pushf
call
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
pushf
pushf
pusha
pushf
pushl
ret
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
push
outsl
jae
dec
gs
popa
addr16
add
add
je
outsl
jns
arpl
add
lcall
add
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
test
cmc
cmp
pusha
pushf
call
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
imul
jb
jo
jb
dec
gs
fs
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
rcll
and
test
shr
bt
xchg
clc
mov
xor
neg
and
mov
stc
movb
xchg
bswap
and
sbb
mov
cmc
cmc
sub
jmp
pop
out
and
mov
and
mov
cli
divl
aaa
das
arpl
jae
arpl
jae
or
ja
xchg
dec
hlt
adc
ja
xchg
and
mov
in
movsl
fwait
aaa
aaa
dec
shr
sub
shlb
fwait
orl
cmc
ret
sahf
sbb
push
sub
arpl
lods
pop
mov
sahf
rol
mov
mov
mov
mov
push
inc
mov
or
cld
mov
mov
jle
pop
aaa
aas
xchg
pop
sub
clc
stos
lock
sbb
mov
sbb
dec
cs
jne
mov
xchg
loop
dec
pop
sbb
arpl
imul
mov
ss
push
push
pop
push
dec
into
sti
shrl
popf
nop
pop
lods
pop
mov
int
xchg
leave
xchg
jmp
inc
inc
out
nop
jmp
fwait
cwtl
mov
dec
sub
movsl
pop
inc
ja
jne
cmp
ss
mov
mov
in
push
lahf
lahf
mov
lea
or
mov
test
xchg
sti
popf
fnstcw
xor
adc
pop
push
inc
mov
xchg
mov
jmp
adcl
aad
std
inc
call
add
push
gs
popa
jae
inc
jb
outsl
jb
je
pushf
pushl
pushf
lea
jmp
lea
je
bt
mov
xor
stc
bsr
bsr
mov
clc
test
pushf
push
push
lea
je
pusha
test
push
pusha
mov
lea
je
pushf
bt
and
push
pushf
push
movw
lea
jmp
add
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
add
je
gs
je
jo
imul
add
je
imul
add
je
jne
jae
jb
sub
jg
imul
ffree
mov
arpl
push
rcl
inc
mov
rorl
jae
jg
fsubl
cmp
lea
push
pop
imul
int3
rorl
aad
idiv
mov
call
pop
pop
push
fs
mov
in
ret
fdivr
loopne
hlt
xchg
clc
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
insb
outsl
bound
inc
insb
popa
addr16
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
push
outsb
push
imul
outsl
outsl
imul
outsl
insb
gs
cs
insb
add
loop
pushl
jecxz
xor
lea
jmp
pusha
movl
pusha
adc
pushf
lea
jae
pusha
jmp
add
inc
imul
je
imul
gs
dec
push
xor
add
inc
gs
imul
js
inc
add
add
push
gs
popa
insb
jne
add
add
outsb
jae
popa
je
dec
gs
popa
add
add
sub
lcall
pushf
pushl
ret
add
inc
gs
imul
dec
jb
inc
js
add
dec
outsl
popa
fs
insl
popa
addr16
add
add
outsl
bound
push
imul
scas
test
mov
adc
mov
call
push
call
js
add
insb
imul
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
je
insb
imul
add
je
imul
jae
dec
dec
inc
inc
push
push
xor
cs
insb
add
add
outsb
inc
imul
outsb
addr16
add
inc
lea
jbe
shl
jmp
push
lea
jae
call
add
inc
outsl
insl
jo
jb
push
je
imul
movsl
jecxz
add
push
gs
imul
outsb
add
std
out
call
movsl
push
ror
stc
cmp
pushf
xor
stc
pushf
jmp
add
dec
gs
jo
jb
add
add
je
inc
push
add
imul
mov
lcall
aas
jne
mov
jg
mov
push
jp
cmp
sub
pop
mov
or
data16
repnz
or
icebp
pop
xchg
add
loop
push
push
data16
pusha
dec
push
cmp
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
je
insb
je
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
pop
add
setno
nop
pop
add
pop
out
fcompl
aas
dec
daa
popa
xor
mov
sub
adcl
std
xchg
mov
mov
addr16
sahf
mov
cwtl
stos
cwtl
ljmp
adc
clc
xor
add
xor
push
into
mov
loopne
mov
mov
xlat
jno
mov
pop
xchg
cmc
push
into
sbb
test
xchg
and
jb
dec
in
pop
mov
aad
rcll
lret
push
mov
adc
add
cmp
sub
adc
adc
je
sub
sub
jg
outsl
and
cmp
popa
loope
adc
mov
outsb
pusha
jbe
es
cmp
dec
add
mov
dec
dec
sub
xor
sub
ja
popa
into
test
pop
mov
cmovns
inc
adc
xlat
cmc
cld
lcall
mov
test
xchg
icebp
lcall
lret
xchg
gs
loopne
sbb
push
sarb
pop
outsb
outsb
jbe
call
packsswb
ja
push
or
mov
sub
mov
dec
test
fisttps
push
adc
into
test
cmp
pushf
scas
xchg
lcall
rclb
jb
je
push
push
call
movb
dec
jae
imul
jae
popa
addr16
add
add
je
jne
jb
outsb
je
jb
arpl
jae
bts
not
and
add
xor
mov
cmp
stc
cmc
pushf
shr
bt
cmc
test
bt
cmp
call
clc
mov
cmc
stc
stc
push
cmp
cmp
call
add
dec
jae
popa
fs
gs
fs
je
add
xchg
jmp
add
push
insb
jae
gs
popa
insb
jne
add
add
je
imul
inc
js
inc
js
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
push
call
push
int3
sahf
aam
ljmp
mov
aas
aas
xchg
fldt
sar
sbb
push
aam
lock
les
jbe
push
pop
sarl
add
mov
inc
dec
push
enter
pop
push
sub
add
jnp
sbb
push
into
mov
nop
ljmp
andl
dec
adc
rclb
in
mov
add
stos
mov
rcl
mov
daa
je
jmp
mov
xchg
movl
testl
lods
xchg
divb
mov
cld
mov
xchg
nop
in
mov
andb
dec
scas
or
cmpsl
pop
vpmulhw
push
js
push
inc
inc
sub
push
pop
pop
mov
push
add
pop
loop
adc
stos
cmc
adc
les
cmp
add
adc
cmp
hlt
jmp
jp
test
jno
jle
add
xchg
movsl
in
lods
mov
cmp
iret
aam
xchg
test
and
or
or
scas
dec
push
cmp
les
outsb
cmp
mov
push
stos
or
sbb
xor
jns
cmc
loope
mov
aas
mov
pushf
lea
jae
clc
cmc
cmp
push
cmp
push
pushf
pusha
mov
lea
ja
not
pushf
jmp
xchg
xor
pop
sub
pop
movsl
mov
shll
pop
in
cwtl
lea
mov
cmpsb
sbb
movsb
jmp
sti
insl
mov
movsl
rcrb
xor
xchg
sbb
pop
jbe
jbe
bound
push
mov
inc
xchg
sbb
adc
jns
scas
and
and
lea
mov
iret
dec
fldt
sbb
outsb
rol
push
adc
ret
mov
mov
leave
cmpsl
in
xchg
xchg
sbb
subb
stc
cmp
mov
into
sahf
in
rcrl
outsb
fdivs
or
cmp
imul
inc
xchg
fisubl
inc
pop
jno
jno
or
mov
mov
mov
lods
ficoml
movsb
out
call
pop
aas
sub
iret
std
rolb
aad
out
jecxz
aas
xlat
dec
daa
dec
jae
shlb
ljmp
stos
stos
stos
call
push
or
arpl
jno
mov
xlat
or
jae
movsb
scas
mov
bound
inc
fildl
mov
loope
sub
jnp
pop
jl
and
sub
push
inc
outsl
and
mov
out
mov
mov
cld
insb
lds
mov
notb
shr
mov
pusha
lea
je
stc
test
cmp
add
push
lea
jmp
sti
mov
cltd
cmp
shrl
add
lcall
jb
xor
pusha
dec
or
xor
xor
fs
hlt
aas
xchg
ja
cltd
add
std
lret
call
add
xor
data16
fs
dec
pop
add
dec
gs
popa
addr16
outsl
js
add
imul
and
fs
jb
pushf
movw
pushl
ret
add
dec
outsl
imul
inc
add
add
stc
add
pusha
push
push
mov
lea
jmp
add
inc
outsl
jo
push
arpl
add
je
jns
je
insl
inc
imul
jns
add
add
je
imul
je
js
add
ja
jbe
dec
jne
dec
jo
outsb
add
add
addr16
gs
gs
dec
gs
add
add
jb
jne
insb
push
jb
je
arpl
negb
aam
ljmp
repnz
aad
mov
nop
adc
outsb
into
fmuls
call
loope
inc
sbb
xor
fmuls
jae
outsw
aad
add
pop
repz
mov
out
mov
adc
mov
aad
leave
aad
incb
cmp
aad
aad
sub
dec
shrb
int
xlat
ss
adc
ret
push
cltd
pop
add
bound
jp
mov
jecxz
mov
push
mov
aad
mov
ljmp
rcl
jmp
mov
sbb
or
mov
lock
dec
xchg
sub
pmulhw
xlat
sub
push
push
and
aad
mov
pop
sbb
fsubs
xor
aad
mov
leave
push
mov
loope
ss
or
int
xor
dec
into
shll
lret
xchg
pop
shll
enter
pop
xchg
iretw
sub
mov
xchg
scas
fdivrs
mov
loope
popa
xchg
data16
adc
in
mov
xchg
push
rclb
cmovs
push
adc
inc
sub
inc
cwtl
pusha
iret
data16
mov
push
aad
adc
rorb
fxch
shrb
cs
push
rcll
iret
shll
fisttpll
ret
push
rorb
rcl
pop
aas
arpl
adc
push
dec
or
adc
into
adc
mov
cmc
je
leave
push
adc
loop
sbb
inc
repz
dec
rclb
int3
push
lret
fcoms
mov
fs
xchg
leave
dec
sub
push
scas
xchg
cs
adc
fcoms
rorb
mov
sbb
dec
rolb
adc
pop
pop
jo
cli
adc
stc
and
hlt
pop
cwtl
fadd
gs
ljmp
push
pop
xlat
sbb
aaa
hlt
push
xchg
fmull
das
int3
xor
mov
aad
xor
shlb
inc
aad
push
jmp
pop
cltd
dec
xchg
sbb
push
pop
std
cli
test
sub
ret
push
xchg
push
lcall
lret
stos
sbb
shl
ja
cs
push
jmp
sub
rcrb
pop
pop
dec
in
out
dec
xchg
push
pop
aam
add
sub
les
mov
and
test
xor
in
dec
sbb
test
pusha
cmp
add
cmc
out
stos
imul
add
stos
or
mov
imul
xchg
hlt
jnp
stos
ds
jmp
int
sbb
cs
cltd
stos
sti
leave
into
roll
mov
outsl
mov
adc
jne
test
addr16
cs
mov
cmpsb
test
xor
pop
int
pop
rcrb
stos
and
push
ljmp
cmp
cmp
dec
add
lret
es
mov
ficompl
push
mov
dec
xor
fmuls
fdiv
sahf
lods
adc
lds
negl
mov
inc
push
fidivrl
mov
mov
dec
cli
fcmovu
ss
fcoms
xchg
and
icebp
fdivr
mov
jle
stos
or
lret
dec
hlt
fstpt
push
pop
sahf
adc
shr
test
sbb
cwtl
ret
cmp
daa
inc
dec
mov
mov
js
call
shl
mov
pop
jbe
mov
push
cmpsl
jo
adc
push
imul
and
dec
xchg
ljmp
push
xchg
jecxz
xchg
mov
cmp
gs
in
xor
pop
sbb
fsub
out
aam
dec
flds
sbb
mov
mov
push
dec
hlt
jp
fsubrs
mov
push
pop
push
push
inc
insl
int3
aam
jns
xchg
lods
xchg
cmpl
fcoms
scas
dec
shl
mov
dec
rol
push
inc
shll
mov
add
pop
fdivs
pop
mov
loop
loop
movsb
fiaddl
rcr
push
xchg
test
sbb
dec
mov
push
jmp
stos
sti
sub
das
lea
or
dec
cmp
cltd
cmp
pushf
jecxz
mov
insl
jp
sub
call
xchg
rcrb
and
dec
inc
dec
adc
testb
add
int
cmp
rcrb
pop
fwait
add
test
mov
xchg
mov
dec
sbb
mov
sbb
loop
lahf
mov
imulb
pop
pop
stos
ss
into
ljmp
mov
sub
adc
xchg
movl
imulb
mov
aaa
dec
dec
aad
sbb
fsubrs
push
push
and
int
cmpsl
dec
divl
inc
mov
or
mov
lret
push
pop
in
push
rol
in
push
cltd
in
adc
cmp
sbb
aam
inc
icebp
push
dec
insl
pop
xchg
adcl
pop
cltd
cld
cli
fimull
sub
insb
lcall
push
sub
scas
in
adc
cmpsb
scas
pop
leave
hlt
sarl
loopne
pop
pusha
dec
add
mov
and
push
movsl
inc
dec
pop
rclb
xchg
jne
bound
sbb
mov
pop
cmp
pop
dec
xchg
sbb
pop
into
cmpsb
add
shrb
mov
mov
and
and
push
pop
mov
dec
push
pop
mov
dec
pop
sbbb
cmp
arpl
gs
sahf
adc
in
jl
lods
rcl
sub
sbb
xchg
and
orb
cli
fidivrs
notb
js
adc
mov
out
dec
out
jb
int
ficomps
dec
ljmp
pop
xlat
cmc
mov
pusha
push
in
cmp
imull
bound
scas
pop
inc
ljmp
sbb
pop
and
cmp
ss
call
jb
jbe
xor
push
jmp
mov
adc
arpl
push
lret
aam
sbb
xor
sysenter
xchg
stos
aad
subb
sbb
sbb
adc
out
sub
jnp
lods
mov
push
sub
jg
dec
in
or
push
iret
xchg
lcall
xchg
sub
adc
mov
adc
mov
xor
mov
push
iret
jnp
dec
fdivr
jbe
das
xchg
jmp
hlt
push
daa
push
outsl
lods
cmpsb
fmuls
xchg
cmp
outsb
pushw
scas
mov
pushf
or
xor
mov
pop
jle
lahf
loope
aad
mov
inc
lea
adc
add
lds
xchg
call
lods
es
fdivs
ss
pop
xchg
sahf
pop
aas
je
push
ss
dec
push
inc
repz
mov
dec
stc
shrl
dec
push
lret
fstpl
out
insb
test
faddl
iret
stc
data16
dec
lret
adc
push
adc
pop
inc
push
out
fadd
push
jmp
dec
test
lret
fdivrl
es
inc
dec
daa
fwait
aad
das
mov
test
push
test
pop
repz
mov
pop
fucomip
push
pop
in
imul
lahf
sub
xor
sub
xchg
mov
aam
repz
sbb
std
push
jmp
pop
dec
jbe
lods
xor
push
je
imul
stos
mov
mov
jnp
lods
and
dec
aam
jge
out
sbb
frstor
dec
jne
dec
imul
xchg
or
and
insb
imul
mov
rclb
pop
std
in
clc
push
jo
sbb
xor
mov
testb
loop
and
jecxz
les
loop
sub
push
adc
enter
cmpsl
addr16
test
aaa
fnclex
pop
pop
icebp
sahf
pusha
mov
mov
pop
mov
sti
pop
push
dec
dec
xor
xor
sbb
pop
ljmpw
ficomps
sub
in
push
push
push
decb
adcl
cmpsb
xchg
ret
pop
jne
imul
push
dec
cmp
pop
mov
pop
or
jbe
mov
movsb
dec
pop
inc
gs
pop
push
and
imul
and
sbb
xchg
js
xchg
jecxz
cli
sahf
div
pop
push
in
push
leave
lea
clc
inc
jb
mov
mov
pop
enter
sahf
inc
mov
jge
lea
sub
jl
movsb
pop
lret
aas
cmc
push
pop
out
xchg
in
sbb
mov
cmp
dec
cmp
push
fadds
xchg
cmp
sub
adc
pop
inc
push
or
scas
mov
and
adc
jp
sbb
jmp
push
xlat
pusha
ljmp
jmp
jmp
sub
imul
call
shll
push
js
pop
push
lea
sub
loop
mov
and
insb
repnz
aas
push
rcrl
xchg
fmul
pop
fstpl
or
int3
cs
mov
cld
sti
int
jbe
into
pop
in
mov
xor
adc
inc
inc
fstl
or
push
mov
push
inc
jp
fcomps
xor
aas
lock
dec
loopne
data16
or
fs
cwtl
jae
lea
mov
incb
mov
xchg
xor
rcrb
dec
dec
stc
mov
rorl
push
pop
repz
jb
add
movsl
stos
daa
mov
ror
rcr
shll
outsb
or
push
push
out
in
rolb
push
mov
xchg
mov
lock
mov
popa
out
andb
shr
pop
not
stos
push
cwtl
push
jmp
test
iret
outsl
fs
mov
fwait
mov
nop
data16
hlt
test
push
mov
dec
and
movsl
rorl
push
fmulp
das
jmp
loope
jge
iret
jl
jmp
pop
pushf
sarb
ret
ficompl
imul
adc
jbe
mov
ljmp
sbb
mov
xchg
out
mov
xor
leave
or
push
mov
in
mov
les
aaa
in
ficoml
jp
xor
adc
xchg
adc
push
pop
cld
mov
data16
test
lret
iret
mov
addr16
xchg
sbb
movsl
cs
xlat
dec
jmp
rcr
decl
std
fistps
fwait
dec
fsubrl
lret
xchg
xchg
pop
mov
in
add
shll
xor
inc
pop
cwtl
pop
mov
ficoml
push
mov
push
ljmp
fwait
push
fstp
fsts
test
sub
xchg
ds
push
shlb
sar
sub
ljmp
sarb
or
sbb
xchg
mov
in
xchg
sti
ret
mov
cmp
into
loopne
xor
jne
jmp
jmp
lock
jl
cmp
out
adc
arpl
push
shlb
mov
in
mov
mov
sub
pop
bound
pop
dec
and
jbe
xchg
mov
enter
mov
xor
loop
fwait
out
loope
mov
je
test
lret
insb
mov
push
pop
and
scas
pop
adc
xchg
into
mov
loope
bound
sar
aaa
mov
dec
push
cwtl
xchg
sub
stos
popa
jmp
iret
push
mov
jnp
mov
test
lods
jbe
orl
cld
mov
cmpsl
lods
test
lcall
xor
popa
andl
jecxz
mov
and
lea
or
rorl
lea
inc
pop
mov
or
mov
mov
dec
jge
mov
xchg
adc
xor
mull
clc
cwtl
xor
adc
adc
dec
aam
pop
scas
dec
into
jno
fsubr
sahf
repz
pop
xchg
fcmove
into
cmp
arpl
inc
bound
in
sub
mov
xor
pop
inc
pop
sbb
mov
leavew
aam
and
out
rclb
cltd
inc
or
cmc
push
sbb
adc
gs
sbb
push
data16
adc
pop
xlat
mov
dec
mov
xor
stos
sub
bound
pop
scas
test
inc
mov
out
or
in
lods
or
cltd
fisubl
fstpl
hlt
lods
shrl
sahf
into
mov
jge
popa
imul
push
push
pop
mov
inc
cmp
adc
sub
aam
adc
add
frstor
xor
push
fs
mov
or
adc
xchg
leave
pop
inc
cmc
jno
mov
fs
jge
add
push
scas
das
add
pop
sahf
mov
xchg
sbb
dec
push
hlt
ret
add
sbb
stos
hlt
inc
loopne
loop
lods
add
xor
adc
xor
or
jle
dec
mulb
data16
push
ret
dec
lret
xor
sahf
aam
mov
dec
push
into
jne
daa
push
push
das
test
lret
nop
dec
test
dec
cli
push
fistpl
and
sbb
jno
jp
dec
push
test
xchg
clc
push
sub
inc
shlb
push
push
adc
add
mov
inc
pop
and
mov
cmp
adc
cmpsb
pushf
out
rcll
out
and
in
lea
dec
aad
add
aad
mov
jle
push
mov
pop
aaa
cmp
pop
into
test
in
mov
add
jae
dec
stos
into
push
enter
dec
arpl
xchg
das
push
sub
stos
push
pop
loopne
lods
leave
or
xchg
push
into
inc
push
pop
fwait
push
ja
mov
inc
mov
outsl
cwtl
dec
jae
mov
jmp
std
mov
fcomip
sbb
dec
inc
jge
stos
dec
sub
shll
cmp
pop
filds
dec
sub
imul
lods
adc
stos
mov
xor
pop
in
cmp
in
pop
fidivrs
shlb
jmp
cmpsl
es
out
inc
mull
rcr
push
fwait
dec
aam
inc
push
enter
icebp
mov
pop
xchg
rcr
out
dec
adc
inc
pusha
std
pushf
cmp
sub
les
addr16
sub
addr16
mov
lods
and
in
cmp
jg
repnz
mov
sti
push
pop
aaa
adc
dec
lds
inc
push
adc
sub
sti
repnz
push
les
imul
push
in
push
jl
cli
xchg
dec
dec
fmull
mov
xor
outsl
fistl
hlt
outsb
dec
jmp
xchg
push
lret
clc
xchg
push
and
cmpsb
adc
shrb
es
sbb
test
sub
idivb
adc
sub
test
sub
insb
sub
shrl
rcr
mov
out
jo
loop,pn
push
jns
andl
pop
cmp
dec
ljmp
push
call
iret
dec
sub
xor
mov
jae
inc
xchg
fsubs
out
stos
pop
or
sahf
add
and
insb
push
imulb
sbb
les
adc
decl
arpl
xlat
repnz
mov
leave
inc
pop
lods
dec
push
lret
shrl
int
mov
addr16
out
mov
icebp
mov
fisubrs
jb
addr16
aad
pop
jle
ror
sahf
jg
movsl
lret
mov
fcomps
inc
jbe
cli
jae
xchg
xor
lret
xchg
dec
add
lea
jb
imul
out
jbe
lcall
fcoms
inc
out
adc
popf
cwtl
adc
sbb
rorl
test
out
push
dec
pop
lret
push
and
cmp
fdivr
stos
out
cmp
inc
test
ficompl
sbb
in
cli
xchg
xorl
cwtl
push
mov
xchg
xlat
mov
xchg
mov
push
es
loope
call
cmp
pushf
arpl
pop
pop
or
mov
and
xor
enter
gs
lret
stos
sbb
enter
icebp
fxtract
push
mov
xchg
test
loop
shl
adc
dec
imul
jmp
fmul
sti
xor
inc
jecxz
clc
dec
xor
inc
pop
sti
clc
lcall
movsl
aam
push
jae
pop
std
add
addr16
fsubrl
outsb
ss
cltd
cwtl
push
xchg
dec
xchg
lret
pop
mov
and
pop
js
jne
xchg
aas
cwtl
lock
xchg
test
add
fs
adc
daa
xchg
pop
into
mov
es
dec
addr16
shrb
out
nop
lods
sbb
sub
cli
arpl
pop
dec
lock
fisubrs
adc
push
mov
stc
pop
outsl
mov
scas
mov
xchg
xchg
rorb
add
ret
sub
xor
xchg
pop
cmp
nop
stc
xor
mov
iret
sub
subl
push
hlt
aaa
inc
lods
or
jmp
push
shll
jb
repnz
xchg
push
stos
or
cmp
xor
sti
xor
xor
fwait
inc
pop
and
adc
sbb
dec
pop
jbe
or
mov
sbb
dec
xor
and
push
mov
mov
in
scas
aam
push
sub
mov
mov
pop
iret
gs
rolb
push
push
fmul
mov
ret
lcall
addr16
adc
push
into
pop
subb
mov
sbb
add
jmp
cmp
mov
mov
fdivs
sbb
push
mov
dec
arpl
push
loop
imul
add
insl
int
dec
dec
hlt
cltd
sub
dec
stos
mov
outsl
dec
lock
imul
mov
sub
bound
ja
pop
in
sbb
mov
test
stos
and
inc
sbb
insl
inc
cmpsl
sbb
leave
lea
adc
cwtl
push
mov
push
and
push
aas
push
inc
aam
rcrb
ficoms
scas
sahf
pop
cs
sahf
jmp
or
divw
and
xchg
mov
out
sbb
call
sub
loop
hlt
pop
testl
or
push
push
test
adc
xlat
and
or
mov
jge
shrb
fs
push
adc
jb
jae
fs
push
mov
pop
fists
inc
mov
sbb
loop
repnz
or
shlb
mov
out
xchg
push
pop
push
std
insb
mov
sub
pusha
lock
mov
in
clc
testl
mov
fdivs
pop
cmp
mov
fcoml
inc
sbb
fstps
cmpb
push
push
cmpsl
sub
fcmovnb
imul
mov
xor
xchg
pop
repz
leave
sub
repnz
jnp
stc
pop
in
pop
mov
nop
es
lret
ficompl
fdivs
movsl
or
xchg
stc
das
mov
repz
mov
mov
int3
inc
rcr
xor
jbe
pop
lahf
push
mov
rcll
test
mov
mov
pop
adc
hlt
mov
shrb
or
or
xchg
std
fsubr
icebp
mov
pop
mov
inc
dec
pop
dec
shll
aam
and
in
lds
jne
pop
dec
xchg
sbb
xor
pop
cmpsl
lahf
movsb
dec
gs
rcrl
inc
sub
add
xchg
mov
fnsave
mov
adc
or
sti
ljmp
jmp
scas
pop
mov
adc
inc
aam
mov
sbb
push
leave
pop
int
sbb
push
cmp
lret
dec
push
fwait
mov
mov
xor
adc
aam
repnz
pop
les
mov
pop
pop
rcll
or
add
push
dec
in
dec
dec
dec
dec
adc
lret
mov
cmpsl
rolb
mov
dec
inc
mov
and
mov
xchg
mov
mov
inc
pop
jg
mov
mov
push
aad
add
mov
int3
pop
push
pop
insl
dec
fisttpll
rcr
jge
jmp
push
fwait
push
scas
call
fldenv
push
lods
cmp
xchg
jp
pop
inc
mov
push
lret
mov
aas
out
sub
imul
aam
sub
jnp
dec
and
sti
out
adc
inc
xchg
sub
add
mov
out
test
or
aam
incb
cmp
shll
dec
fcomps
out
dec
adc
imul
daa
inc
and
pop
dec
movsb
and
adc
dec
shl
sub
enter
mov
inc
fstpt
adc
jl
adcl
mov
cmp
shlb
push
pop
rcrl
mov
or
and
icebp
stos
enter
cs
add
mov
jle
mov
mov
xchg
je
fsubs
xchg
nop
vshufps
sub
xchg
inc
push
pop
test
les
or
mov
push
popf
and
repz
cli
icebp
xchg
xchg
popf
out
add
and
call
adc
xchg
push
int3
in
sar
shlb
out
hlt
sub
mov
pop
pop
fcmovbe
mov
push
lcall
enter
out
jge
jle
lds
fldenv
adc
dec
mov
dec
mov
and
push
xlat
in
dec
test
call
je
push
lahf
ret
repnz
sbb
in
mov
lds
xlat
data16
pop
mov
mov
sti
xor
jno
adcb
cmpsl
repnz
sbb
lds
mov
xchg
les
out
mov
inc
sbb
fsubr
or
inc
mov
fcom
mov
xchg
fdivs
movsb
jmp
lds
sti
and
ret
xchg
stos
adc
mov
dec
or
mov
add
fstl
in
xor
in
aas
dec
jmp
push
jbe
jb
cmp
pop
pusha
jo
lret
jbe,pt
jno
push
sbb
shlb
inc
add
je
pop
or
lds
dec
nop
out
push
fwait
inc
jns
cmp
testb
sbb
insl
es
sti
push
push
push
fwait
pop
adc
sbb
push
lahf
push
lds
lret
push
push
imul
testl
xor
lds
imul
xchg
adc
lea
jmp
dec
lds
mov
lds
and
into
mov
nop
pop
sub
fisubs
into
lds
dec
orl
call
adc
into
lds
sti
cld
into
jno
ljmp
jae
sti
das
or
lret
inc
shll
adc
es
jl
fistpl
call
movsl
or
lds
jle
xchg
push
stos
mov
mov
cmp
adc
imul
dec
mov
mov
pop
enter
mov
aam
xchg
fdivrl
fidivrs
out
outsb
setle
cmp
add
xchg
mov
mov
rolb
add
add
dec
ret
xor
dec
pop
xor
jle
out
sahf
dec
data16
or
fwait
push
shll
xchg
sbb
sar
cmp
push
adc
pop
movsl
in
orb
out
dec
dec
add
in
add
daa
loope
and
cmp
std
dec
fidivrs
sub
jmp
scas
sbb
rolb
cmp
les
in
cmp
nop
icebp
jl
mov
mov
sbb
imul
inc
lods
popa
inc
xchg
daa
cmp
add
sbb
sbb
sarb
jne
inc
ficompl
push
jg
shlb
add
jmp
hlt
xchg
cmp
int3
mov
mov
add
pop
xor
pop
jbe
mov
out
xchg
xor
mov
jae
mov
mov
push
sarl
cmp
popa
xor
int3
pop
add
cmpsb
scas
cwtl
aad
inc
out
sbb
push
mov
into
jle
pop
push
insb
push
imul
adc
movsl
div
jecxz
push
push
loopne
and
sbb
gs
jmp
pop
cwtl
divl
daa
dec
inc
sbb
rcr
cmp
push
decl
dec
fsubr
sub
out
clc
mov
adc
mov
push
mov
addr16
pop
jecxz
addr16
cmp
test
lods
sub
data16
or
xchg
pop
loope
cli
jecxz
sub
lds
mov
inc
call
mov
mov
sbb
inc
cmpsl
leave
and
divl
hlt
not
test
mov
mov
dec
dec
mov
dec
and
enter
sbb
lock
lea
dec
popf
mov
jno
xchg
pusha
fdivs
jnp
xchg
shll
push
pop
insb
fs
out
repz
ljmp
xor
dec
sarb
sbb
loop
movsb
and
xor
dec
inc
inc
xchg
arpl
insl
push
xchg
pop
push
cmpb
in
xchg
push
fcompl
out
cmp
push
lods
fstpl
cli
int
test
fs
add
xchg
jbe
je
stos
fcompp
dec
nop
mov
sbb
mov
fildl
push
rclb
leave
jle
mov
les
mov
xchg
push
xor
adc
imul
inc
and
into
push
out
lods
pop
or
iret
xor
lds
push
dec
dec
daa
push
movsb
inc
cmc
push
icebp
pop
inc
repnz
add
dec
push
ss
pop
dec
insl
imul
insb
push
stos
stos
or
cltd
xchg
inc
add
movsb
cmp
test
xorl
dec
insb
or
mov
std
lret
arpl
fnstenv
rclb
mov
fmulp
mov
shlb
jns
mov
pop
mov
xor
jae
inc
movsb
inc
mov
int
xchg
daa
fsubl
mov
nop
mov
vmovsldup
inc
iret
or
mov
shl
aam
shll
icebp
addr16
ret
out
mov
jmp
sub
ret
enter
jg
adc
cwtl
pop
cmp
xchg
pop
cmp
iret
lods
int
mov
pop
mov
adc
xor
or
fcomi
push
sbb
rclb
xor
xchg
jb
xchg
xor
repz
pop
xor
lock
push
das
dec
or
xchg
push
jne
xchg
and
push
jg
and
or
xor
xchg
pushf
arpl
imul
test
aam
pop
adc
sbb
dec
adc
into
jmp
xchg
bound
mov
add
loopne
adc
cmp
int3
cli
iret
loop
sbb
sbb
jp
stc
fdivr
int3
scas
mov
sub
or
dec
repz
push
xchg
imul
fst
push
xchg
mov
xor
mov
dec
rorl
sub
in
dec
jo
add
test
divl
push
push
xor
xchg
add
xchg
movb
movsl
inc
repz
outsb
xor
xchg
jmp
shrb
out
lods
lret
out
mov
aad
sbb
push
ret
mov
out
cs
mov
inc
into
sub
push
pop
inc
daa
cmpsl
rolb
mov
jecxz
mov
jl
in
movb
dec
or
mov
cli
shlb
mov
mov
lods
cwtl
shlb
add
movsb
out
sbb
dec
jl
adc
inc
or
stos
add
pop
xchg
mov
addr16
nop
dec
shl
fwait
sub
iret
rorb
or
lock
xchg
push
hlt
xor
in
dec
sahf
push
test
movsl
loopne
cltd
jo
notb
fimuls
aas
xchg
dec
inc
xor
mov
xor
sbb
and
loop
or
ds
jb
pop
push
loopne
mov
insb
lret
shl
out
inc
fs
xchg
ret
add
mov
xchg
pop
loope
pusha
add
push
xor
out
lods
dec
cmp
movb
jecxz
rcl
add
pop
pop
stos
loope
ss
fwait
dec
inc
movsb
jbe
mov
sbb
mov
aad
or
cmpsl
in
call
inc
in
mov
sahf
cmp
adc
adc
fcmovbe
stc
jecxz
out
mov
ja
push
fmuls
xchg
loope
mov
dec
test
push
scas
mov
sub
xchg
mov
push
cmc
xchg
add
push
aas
jmp
dec
in
jo
cmp
lock
addr16
or
xchg
sti
out
dec
sub
or
popw
pusha
dec
arpl
das
sarl
inc
adc
fwait
adc
stos
jmp
clc
xor
mov
pop
addr16
push
push
insl
cmpsb
sub
jne
push
lret
sti
into
cltd
bsf
ja
inc
ret
cwtl
shlb
je
adc
outsb
dec
in
or
icebp
loopne
fsub
fmuls
add
lods
lret
sbb
pop
push
lret
mov
or
jmp
push
jne
aaa
shlb
xor
in
xchg
ret
imul
loope
into
es
push
and
xchg
push
cmp
xchg
dec
fcomps
cwtl
movsl
pop
in
pop
lret
lods
pop
xor
ret
idivl
mov
jmp
sub
ljmp
xchg
das
cmc
jge
enter
cli
fmull
mov
and
lret
sub
lods
in
inc
inc
arpl
mov
es
sub
sbb
scas
dec
aas
cmp
daa
or
pop
cli
sbb
xlat
es
push
cmc
pop
cmp
aam
add
lahf
sbbb
cmp
movsb
dec
jle
mov
adc
rcr
cmp
addl
cmpsb
pop
js
xor
and
fiaddl
mov
mov
adc
js
cmpsl
adc
xchg
sbb
jle
sahf
mov
sbb
test
sbbl
mov
mov
xor
jns
push
and
fcom
es
mov
push
int
dec
sub
fdivrs
fildl
xor
sbb
stos
adc
mov
jl
jbe
daa
jle
push
or
lds
jnp
stc
loopne
popf
jns
ficomps
cld
sub
ret
adc
clc
mov
pop
jp
jge
mov
aas
call
ds
lods
mov
adc
pop
jge
lcall
inc
or
repz
add
nop
mov
dec
lods
and
cmp
mov
xchg
mov
fadd
pop
jle
inc
lret
mov
lods
or
or
icebp
imul
mov
mov
jb
lods
out
test
dec
out
sti
lret
pop
hlt
negb
pop
mov
inc
cmpsb
jbe
inc
jle
add
rcrb
mov
pop
pushf
aaa
scas
mov
sahf
mov
jmp
jns
and
pop
dec
mov
ja
mov
mov
out
movsl
test
les
jmp
mov
jbe
mov
mov
test
ret
add
dec
inc
xchg
push
dec
add
test
or
mov
movsl
and
dec
xor
add
fwait
and
dec
and
sbb
daa
push
out
cmpsb
add
sub
mov
mov
popf
dec
fcmovnbe
popf
xchg
or
into
cltd
pop
add
es
push
pop
subb
jge
sbb
in
int
inc
iret
dec
push
paddd
mov
sub
ja
loopne
fs
mov
mov
je
rcl
adc
ss
data16
dec
fs
cli
or
shr
movsl
mov
aas
dec
popa
push
dec
in
fildll
out
and
movsl
pop
stc
mov
sub
pop
movsl
enter
mov
mov
not
fwait
into
inc
pop
scas
jge
rcr
aas
pop
jg
add
mov
add
inc
cmpsl
add
shll
fiaddl
xchg
jl
push
shufps
inc
jns
ror
adc
inc
push
xchg
mov
sbb
into
out
bound
sbbb
mov
notb
rcrb
add
int
push
jle
cmp
in
outsb
adc
pop
repnz
mov
movsb
mov
cmc
into
jae
mov
xchg
xchg
clc
xchg
mov
mov
outsl
lods
iret
jg
lea
pop
les
call
iret
out
pop
xchg
lret
cmpsl
or
les
cmp
out
sbb
jbe
or
loopne
shll
adc
lods
xchg
mov
int3
jmp
fidivrl
lcall
loopne
xchg
pop
pop
inc
ficoml
divb
jge
add
jle
xor
int
stos
mov
divl
ds
into
pop
cld
mov
repz
push
not
fsts
fstps
jl
mov
jae
pop
push
xorb
ljmp
pop
cmpsl
mov
test
int
push
int
aam
pop
shlb
fwait
pop
movb
jp
mov
mov
das
mov
mov
xchg
ret
xchg
stc
mov
push
movsl
out
jp
pop
add
lods
shll
sbb
inc
test
mov
into
addl
into
sub
add
andl
cmpsb
inc
or
sub
mov
into
sub
inc
xchg
fs
leavew
push
cld
push
pop
xlat
out
push
lea
ret
sti
cli
mov
inc
outsl
mov
scas
jg
fadds
fildl
pop
std
popf
sub
imul
ds
cmp
mov
lods
push
sub
mov
divl
xor
push
xlat
push
push
mov
adc
sbb
lods
ret
fiadds
xchg
push
and
dec
into
dec
dec
and
movsl
add
mov
cmp
hlt
test
jecxz
mov
in
pushf
jle
pop
mov
mov
mov
into
adc
stos
dec
and
pop
mov
and
cltd
adc
adc
cmc
adc
xlat
jne
xchg
mov
mov
dec
mov
enter
dec
jbe
test
mov
pop
into
mov
inc
jo
fs
xor
sub
push
dec
arpl
fsub
enter
inc
push
sub
out
aas
dec
into
fdivr
mov
push
repnz
sti
inc
fs
dec
test
aad
icebp
cmp
mov
mov
notb
xor
loopne
adc
xchg
jno
xor
mov
aaa
dec
inc
mov
loope
lret
into
arpl
sbb
jecxz
xchg
not
es
mov
out
cmp
jp
lahf
add
scas
arpl
mov
mov
xor
notl
js
mov
and
sub
call
jnp
loope
ds
push
scas
je
add
into
mov
pop
push
sarl
dec
pop
cltd
sbb
xchg
inc
loop
sbb
sub
cmp
out
xchg
cmp
aam
and
arpl
scas
or
dec
lock
in
leave
je
fstl
ret
movsbl
lahf
push
std
rcrb
andl
jbe
mov
xchg
fdivs
lcall
xor
aam
push
into
ficomps
push
inc
and
enter
cmpsl
rcrl
cld
sbb
cmp
xor
cmpl
data16
scas
pop
hlt
or
pop
sbb
xchg
lret
push
jecxz
outsl
dec
into
and
ret
in
and
push
push
inc
add
into
movsl
movsb
mov
push
clc
dec
xorb
std
lret
xchg
xchg
arpl
jmp
cmp
mov
out
sti
pop
cmp
jnp
mov
mov
inc
pop
inc
movsl
sarb
jbe
jecxz
pushf
aam
add
and
test
lret
push
int3
je
push
xor
hlt
push
mov
sub
iret
jge,pn
pop
pop
lret
adc
dec
push
sub
insb
lret
mov
dec
sbb
je
mov
xchg
xor
or
rcl
push
dec
jl
sub
push
mov
sahf
ds
mov
data16
mov
dec
xor
cmp
cmp
pusha
jle
ficomps
push
shlb
dec
addl
aam
or
mov
xlat
or
push
ds
dec
sbb
add
mov
jbe
mov
xchg
jae
movsl
xlat
jb
repnz
push
test
sub
lea
fmull
test
shll
push
mov
adc
xchg
ret
adc
dec
and
insb
mov
into
push
jg
mov
push
pop
xchg
int3
pushf
bound
cmp
push
popf
pop
sbb
std
daa
inc
pop
or
mov
add
mov
lret
pop
jb
xchg
push
clc
movb
or
mov
xchg
into
pop
jg
add
xchg
rcrb
nop
dec
in
pop
jl
adc
cmpsl
xlat
ret
fsubrs
loopne
sbb
pop
inc
orb
sub
bswap
sbb
in
push
mov
repnz
xchg
lods
jbe
xor
stos
aam
hlt
push
jae
int3
int
mov
mov
inc
pusha
xchg
pop
ja
cli
addr16
ret
lds
pusha
jl
cmp
enter
or
in
lret
push
sub
cs
scas
out
mov
decb
cmc
lret
sbbb
or
insl
imul
add
mov
xchg
data16
mov
and
jae
push
sub
mov
testb
aad
movsl
jno
push
xor
inc
push
notl
push
push
push
out
and
or
in
adc
lods
sbb
or
push
sbb
data16
fsubs
inc
push
aaa
cwtl
xchg
leave
mov
xchg
in
pop
mov
mov
xor
repnz
push
push
mov
cmp
and
inc
cmp
xchg
int
fwait
dec
or
nop
lcall
fistl
pop
hlt
pop
pusha
ret
sti
mov
and
sahf
andb
lret
shl
xchg
push
notl
popf
adc
push
jo
out
add
adc
ljmp
pop
bound
fdivrp
pusha
stc
sbb
cmp
cmp
stos
lahf
jns
jae
cmp
cmp
mov
sbb
movsl
out
xchg
xchg
xchg
xlat
ljmp
aam
into
xchg
in
push
std
lods
jae
test
fs
push
daa
out
addr16
or
orl
adc
mov
js
imul
mov
pop
xor
mov
add
mov
ja
jbe
stc
adc
ds
or
push
mov
mov
iret
dec
arpl
or
dec
lods
into
xor
icebp
aad
ror
push
repz
push
mov
stos
scas
and
jmp
lret
dec
test
push
inc
xchg
test
fsubs
xchg
lds
mov
out
popa
mov
ret
das
push
inc
mov
add
lds
pusha
mov
dec
nop
loopne
bswap
sbb
sub
push
or
cld
mov
jnp
inc
aam
cmp
lret
sub
add
and
mov
xchg
imul
push
dec
cmpb
hlt
cmp
jecxz
flds
mov
xchg
jp
cmpsl
cltd
ss
add
int3
out
movsl
data16
mov
jae
adc
sbb
int3
das
or
mov
lret
or
sbb
in
pop
loopne
sahf
adc
bswap
mov
lods
adc
sub
cmp
shl
lret
or
mov
dec
imul
fstpt
mov
mov
cltd
mov
mov
jecxz
xor
cmp
subb
in
dec
out
lret
nop
insl
or
dec
sub
dec
mov
fst
loopne
lea
call
popa
mov
cmp
pop
cmp
mov
dec
sahf
cmpsl
dec
mov
sub
jne
sub
ljmp
and
or
push
xchg
loope
cld
lock
mov
push
in
dec
jmp
mov
mov
xchg
dec
loope
xchg
jae
shlb
push
cmc
scas
arpl
iret
lahf
jge
mov
out
popa
loopne
ret
fwait
cld
fsts
xlat
cmp
fstps
and
clc
mov
inc
and
movsb
inc
dec
cmp
add
mov
jp
mov
jle
jl
dec
fdivrl
fst
in
rcrl
jae
out
push
mov
in
xor
mov
sbb
inc
test
in
aaa
pop
scas
das
outsl
push
sub
jmp
mov
xchg
sbb
leave
pop
push
xor
mov
mov
jno
cmp
jb
mov
push
mov
cmpl
or
pusha
stos
or
ljmp
push
test
push
push
mov
nop
xchg
lcall
xchg
cmp
out
sbb
pop
sbbb
mov
imul
xor
cmp
push
or
ljmp
fists
clc
inc
push
or
cmpsb
sti
jecxz
mov
scas
jle
shrb
int3
xor
xchg
xor
outsb
mov
push
movsb
pop
imul
aam
mov
insb
lret
loop
mov
dec
push
in
mov
lret
push
mov
out
jl
cld
lahf
ljmp
lret
xchg
mov
pop
mov
mov
adc
fistpll
into
dec
mov
xchg
push
mov
popa
addl
mov
add
imul
dec
pop
ss
push
jae
jle
mov
fdivr
jecxz
inc
in
add
or
data16
and
jb
out
imul
out
xlat
mov
lods
xor
mov
jmp
mov
xorl
nop
inc
push
cwtl
sbb
sbb
inc
adc
cmpb
fiaddl
insb
ja
shlb
sub
arpl
dec
in
sbb
jbe
fcmovnbe
int3
mov
cmc
rcl
jp
mov
scas
mov
sub
ja
mov
shlb
outsl
imul
xor
mov
jle
ss
clc
pop
pop
cmp
mov
push
in
or
ss
mulb
sub
push
push
sbb
push
push
rorb
and
adc
stc
xor
mov
xchg
jp
push
lods
dec
sbb
mov
dec
or
out
mov
cltd
fstpl
inc
shll
cmp
push
neg
rclb
je
pop
mov
ficoms
out
lock
hlt
lret
xchg
stos
sbb
adc
fcmovbe
mov
orl
jp
movsl
stos
pop
fwait
or
rorb
mov
imul
in
or
imul
mov
clc
dec
cmp
ficoms
test
or
jbe
xorl
fs
ja
lret
mov
out
pop
outsb
mov
or
and
movsl
fdivrl
cmpsb
xchg
pop
xchg
sub
int3
inc
xor
fs
aad
into
fists
mov
mov
xacquire
outsb
xchg
in
jecxz
add
dec
add
add
push
dec
mov
cvttps2pi
stc
cld
jg
sub
mov
je
aaa
xlat
mov
xor
xchg
xor
into
orb
xchg
pop
pop
xor
or
into
xchg
fs
inc
jp
nop
push
add
push
jno
push
mov
mov
mov
ret
xor
int3
jb
add
iretw
movsl
test
xchg
lds
cmp
cld
fnstsw
dec
imul
jno
push
je
out
out
shl
mov
stc
sbbl
add
pop
jmp
test
lea
out
call
dec
sbb
dec
xor
cld
or
arpl
pop
sti
stos
push
fdivs
push
pop
add
jbe
in
mov
fidivrl
pop
jns
dec
fstpt
mov
notl
push
ret
shlb
adc
push
insl
mov
sub
outsl
sbb
push
addr16
repz
adc
loopne
imul
jno
test
into
sub
sub
int
in
or
popf
xor
xor
into
lods
sarb
mov
jl
aam
aaa
mov
xor
mov
mov
ficomps
dec
jno
sub
das
dec
insl
inc
xchg
test
lret
les
cwtl
scas
mov
dec
inc
jbe
xlat
mov
push
mov
in
and
or
mov
mov
sbbb
lret
cli
pop
add
xchg
out
dec
fs
lock
pop
stc
mov
out
fdiv
dec
out
dec
sbb
xchg
clc
nop
xor
jbe
add
cmp
aad
adc
es
mov
jae
fcmovb
mov
int3
push
js
sbb
ss
into
movsb
icebp
daa
sub
ret
pop
cmp
inc
xchg
fchs
rol
jae
xor
cmp
xchg
jb
xchg
repz
cwtl
xchg
or
xor
inc
mov
push
xchg
add
andl
inc
data16
or
push
insl
push
adc
sub
or
dec
out
mov
jno
xor
imul
mov
xlat
adc
pop
mov
fsts
or
pop
xchg
das
jne
fs
jo
movsb
pop
cmpsb
mov
int
cmp
pop
jmp
movsb
jno
dec
sub
aam
arpl
out
jecxz
movsb
or
cli
pop
pusha
imul
mov
sbb
aad
jbe
push
xchg
mov
cmp
not
repz
inc
mov
lods
cmp
mov
pop
aaa
fwait
mov
pushf
data16
xchg
cmc
lods
push
imul
fwait
or
mov
xchg
cmp
shlb
mov
mov
pop
repz
sub
je
xchg
shrb
pop
mov
gs
or
add
add
fwait
int3
jne
int
test
fwait
cmp
lods
mov
push
ja
push
notb
mov
xchg
dec
push
inc
out
xchg
into
mov
pop
xchg
cltd
pop
cwtl
pop
fildl
push
dec
cli
dec
dec
push
mov
rolb
push
mov
js
cwtl
clc
xchg
jb
jbe
repnz
inc
push
sbbb
test
test
scas
mov
fmuls
dec
int3
bound
cli
cltd
pop
mov
and
sub
in
add
adc
adc
or
jge
loope
je
push
loop
or
sub
jbe
mov
sbb
push
mov
movsl
pop
mov
push
popa
mov
pop
mov
mov
jns
lea
and
xchg
addl
out
cld
jge
xchg
cmc
jl
xchg
push
jno
mov
hlt
xchg
xor
loopne
jae
pop
aad
pop
cmp
insb
mov
push
dec
mov
xor
neg
and
lcall
or
mull
je
movsb
add
adc
loope
sub
mov
shrb
repnz
xchg
xor
push
out
lret
xchg
dec
hlt
cmc
out
into
aam
cmp
popa
pop
loope
mov
mov
push
cwtl
iret
mov
sahf
push
and
es
cmc
hlt
dec
lds
push
out
ficomps
ret
or
movsl
fs
mov
cmp
call
outsb
insb
mov
test
push
out
jg
and
in
lock
push
lahf
mov
call
jmp
pop
add
mov
jne
jno
das
ret
je
pusha
xchg
stc
push
jmp
dec
push
int3
push
cmpsb
cwtl
push
mov
add
imul
ljmp
mov
and
cli
loope
das
mov
mov
mov
out
dec
fidivs
push
aam
aaa
xor
jmp
bound
call
icebp
ret
idiv
cmp
adc
stos
mov
leave
push
sbb
mov
bound
add
cli
call
movsl
cmpsl
decl
nop
adc
inc
push
hlt
xchg
jns
shrb
stos
into
sub
mov
adc
jle
sbb
adc
xchg
xchg
pop
mov
or
pushf
mov
lcall
cmp
cmp
dec
sub
inc
inc
int
push
push
aas
lcall
mov
loopne
lea
add
enter
in
int
jo
ficompl
push
sahf
inc
lcall
xchg
or
xor
jle
mov
jae
xorb
scas
push
xor
movsb
dec
xchg
cmpsl
xchg
in
repz
mov
sahf
mov
je
into
pop
mov
cmp
inc
mov
mov
data16
sahf
or
jno
mov
mov
mov
movsl
inc
sub
pop
clc
push
fdiv
jo
sbb
outsl
and
mov
negl
mov
imulb
movb
dec
gs
jp
push
push
jns
shll
mov
mov
int
add
call
test
inc
mov
ret
fsts
mov
mov
dec
mov
xor
xchg
sub
mov
add
repz
push
xor
arpl
and
cmp
cmp
mov
mov
and
push
xchg
in
add
push
mov
push
jo
iret
insl
nop
xor
les
add
inc
push
fidivrl
pop
inc
in
in
cs
sbb
push
movsb
fs
xchg
mov
push
test
push
fsubr
out
test
xlat
jae
dec
test
add
pop
mov
xchg
lret
lea
xchg
sub
rorb
out
xor
mov
mov
cmpsl
movsl
add
inc
mov
or
pushf
jecxz
sub
inc
repnz
into
pop
xchg
push
sbb
sbb
ds
aaa
add
dec
sub
xchg
repz
sub
nop
sub
not
xor
cmpsb
mov
mov
push
jnp
call
fmulp
sti
xorl
shrl
outsw
std
pop
out
lret
push
lock
leave
mov
test
add
stos
add
insl
lods
or
cwtl
dec
arpl
out
mov
mov
mov
mov
iret
pop
pop
stc
sub
pop
lret
pop
pop
jns
mov
iret
std
fcomip
out
inc
pop
shr
pop
fcmovnu
leave
cltd
add
scas
pop
sbb
push
aad
push
sarb
sbb
dec
push
xchg
mov
shll
cmpsl
ret
out
lcall
dec
das
xchg
xchg
pop
cmp
scas
jb
loop
fwait
push
push
xchg
mov
icebp
aad
jno
mov
in
mov
rclb
xchg
push
test
insb
mov
jle
jge
add
dec
mov
dec
mov
push
mov
inc
jns
xchg
lea
dec
push
adc
adc
push
xchg
adc
pop
insl
das
shrb
imul
xor
xorl
shufps
dec
lods
mov
shrb
int3
insl
aaa
or
lds
aad
push
fisubl
push
sub
cmpsl
cs
shr
sub
jecxz
loope
mov
cltd
imul
sbb
outsb
aad
jne
push
sub
dec
or
sub
stos
xchg
shrb
fisubrs
mov
cmp
aam
inc
rorl
outsl
lret
push
adc
dec
aaa
xchg
jbe
aam
inc
xor
push
and
rcl
mov
shrl
stos
jnp
add
adc
into
adc
push
stc
icebp
mov
popf
cmp
out
std
fnstsw
addr16
inc
push
xorl
sbb
dec
std
add
mov
sbb
sbbl
push
jns
mov
pop
push
fistpll
inc
in
add
fcmovbe
gs
in
dec
mov
clc
xchg
cmp
sbb
hlt
mov
pop
add
rcll
push
aad
pop
subl
mov
inc
imul
or
push
in
dec
pop
xor
popf
pop
mov
sbb
out
test
pop
movsb
push
cmc
cmp
lcall
lds
ret
add
dec
jge
test
daa
gs
push
das
fninit
in
push
adc
jg
in
rcl
or
add
inc
and
pop
jecxz
lock
ljmp
daa
jbe
in
dec
add
fadds
icebp
mov
inc
mov
clc
mov
mov
xor
sbb
loopne
nop
add
dec
pop
jnp
dec
sbb
or
pop
or
insl
and
or
pop
test
lods
pushf
jg
mov
fildl
adc
pop
push
jl
or
insb
js
divb
out
push
cmp
inc
and
out
mov
mov
inc
insb
xchg
scas
insl
or
into
loope
ret
push
mov
adc
dec
jnp
hlt
jecxz
push
addr16
ljmp
lahf
dec
stc
fidivrl
cs
ret
dec
push
lock
cwtl
dec
jno
and
xor
mov
into
lcall
repz
cwtl
inc
inc
jno
jbe
js
out
mov
jge
push
sub
mov
dec
or
mov
call
push
sub
idiv
mov
mov
gs
cmpsl
inc
and
mov
xchg
or
jge
cltd
push
mov
inc
test
nop
insl
ljmp
mov
and
cmc
jge
mov
fwait
cmp
lds
into
repz
jle
aaa
jb
fdivrl
or
pop
sarb
mov
add
stc
jo
jmp
movsl
dec
test
sbb
mov
xchg
and
push
daa
dec
mov
mov
pop
cmp
add
mov
mov
pop
cli
sbb
mov
shll
ss
out
scas
imul
xor
add
and
pop
lret
mov
or
ret
mov
loope
inc
mov
lea
cwtl
push
cmp
mov
xchg
pop
fwait
into
stc
lahf
dec
push
test
xchg
dec
into
pop
add
addb
movb
cmp
test
scas
sub
xor
jmp
push
bound
mov
xchg
xchg
pop
push
jae
mov
ss
push
dec
cwtl
xchg
arpl
push
pop
adc
mov
rolb
cmc
xchg
ja
hlt
inc
lods
insb
mov
mov
mov
push
dec
xor
out
fdiv
fsub
cmpsb
shrb
mov
bound
pop
mov
inc
es
addr16
data16
call
fwait
inc
cmc
out
movsl
xchg
cmp
add
addr16
adc
outsb
jbe
lock
int3
mov
sbb
ljmp
mov
sbb
ret
xchg
movsb
dec
into
call
inc
xchg
pop
test
push
adc
fsub
dec
fs
stc
xchg
mov
shll
mov
jle
jno
mov
icebp
ret
or
jl
test
xchg
xor
add
jae
push
loope
cmc
fcmovnu
mov
sarl
hlt
inc
mov
andl
mov
xchg
or
push
cwtl
leave
add
cmp
incl
jo
cld
sbb
fidivl
out
rcl
and
gs
jge
out
and
scas
leave
sbb
out
xchg
nop
lock
jmp
lods
dec
in
mov
mov
into
sub
or
xor
mov
cmp
add
jp
insb
mov
sub
stos
nop
mov
not
mov
jae
mov
std
mov
or
add
push
jle
movsl
sub
mov
loop
mov
scas
cs
push
dec
out
adc
iret
cmc
dec
mov
in
leave
outsl
or
insl
cmp
fcmovu
loopne
outsb
adc
test
into
inc
and
dec
call
cmpsl
mov
arpl
push
out
shll
daa
test
fcompl
loope
stc
push
dec
xor
add
adc
iret
mov
out
mov
xor
sbb
aam
rcl
fstpl
jl,pt
pop
dec
popf
jnp
pop
mov
jno
push
mov
pop
in
movsl
fcomps
fidivrl
pushf
inc
sbb
jmp
lahf
insb
lea
mov
fbld
pop
or
loopne
mov
mov
aad
pusha
jle
push
jnp
cmp
jl
ja
xchg
dec
int3
pop
add
and
lahf
shll
sub
inc
ret
jno
pop
shrb
das
stos
rcrb
fimuls
out
cmp
cs
nop
ljmp
push
call
sarb
lock
loopne
pop
lret
hlt
push
and
jge
out
jae
mov
mov
stos
sub
addr16
sub
into
jl
jle
iret
mov
ds
insl
inc
aas
ja
aam
ss
notl
cmp
jne
nop
xor
into
lahf
fsubr
in
imul
out
add
mov
sbb
test
mov
inc
mov
mov
mov
and
ds
ss
sub
dec
fdivs
fwait
movsb
mov
adc
push
xor
sub
sbb
sbb
ret
pushf
pop
dec
pop
sub
mov
nop
fs
js
mov
loop
popa
mov
out
in
mov
mov
and
lret
fucomi
test
enter
int3
outsl
push
sbb
cmp
pop
pusha
std
inc
rorb
cld
popf
cmp
xchg
mov
scas
cs
sbb
push
popf
xor
mov
outsb
lret
inc
adc
aaa
xlat
lods
test
push
add
movb
iret
sub
and
push
pop
js
inc
call
mov
mov
fcompl
pop
aam
mov
xor
sub
sbb
lock
lea
mov
pop
test
sahf
push
xchg
inc
inc
mov
add
call
xchg
mov
cwtl
js
mov
jb
rcl
sub
cmp
lods
mov
ret
movsl
inc
inc
loope
test
mov
or
sbb
sbb
aad
jb
out
stos
imul
fs
mov
aaa
mov
rolb
jl
lret
es
dec
popf
pushf
dec
paddsb
sti
jne
leave
loopne
das
outsl
std
je
rorl
dec
bound
jecxz
mov
jbe
in
in
iret
test
in
xchg
test
mov
decl
or
jmp
shrb
out
lods
out
mov
lcall
pusha
bound
xchg
dec
out
movsl
jle
mov
sub
push
pop
xchg
aam
adc
ret
vpsubusb
int3
jmp
push
sub
lret
inc
xchg
xchg
xor
push
adc
loop
movsb
jb
cmp
mov
mov
jo
outsl
lret
adc
ret
loop
out
and
add
out
xlat
push
arpl
push
xchg
add
push
and
sub
ss
rorl
mov
xchg
dec
xor
subb
cmp
movsl
cld
jecxz
lret
lods
addr16
inc
adc
mov
bound
dec
in
add
fmulp
fsub
cmc
push
out
push
repz
daa
add
inc
or
jmp
rcrb
xor
xchg
jbe
push
cmp
in
int3
call
sub
nop
mov
cmp
rcl
aam
push
adc
jbe
mov
xor
adc
addr16
pop
and
and
or
fnstsw
mov
popa
faddl
enter
ret
and
push
and
push
add
iret
dec
aas
cmp
xchg
movsl
inc
xor
jl
xchg
inc
xchg
rclb
out
inc
popf
cmp
cmpsb
dec
dec
rcl
int3
adc
cmp
push
mov
aam
subb
insb
adc
push
xor
xlat
sbb
dec
stos
push
js
arpl
outsl
loop
jle
dec
sbb
sub
dec
leave
xchg
fs
xchg
in
push
dec
ljmp
mov
adc
cld
int3
into
outsl
mov
add
lahf
call
or
push
cmp
xor
test
adc
out
pop
pusha
and
fcmovbe
std
lret
push
xorl
jbe
cmc
adc
dec
jo
je
xchg
hlt
push
sub
add
or
arpl
inc
mov
xchg
push
icebp
jno
ret
stos
adc
rcrb
and
iret
frstor
or
sbb
jmp
xor
jbe
fidivrl
les
push
fildll
sbb
adc
add
push
mov
pop
shll
mov
sbb
fwait
jl
mov
add
push
aam
cli
mov
js
mov
je
in
adc
push
into
scas
mov
stos
sysexit
lods
aam
mov
loope
daa
rclb
data16
out
imul
inc
in
test
mov
push
idivl
adc
outsb
lea
sub
aas
push
xor
int
dec
mov
sub
movsl
mov
xchg
cmp
int
lret
pusha
loope
and
lock
jns
insl
xchg
fsubrs
shlb
cld
add
sub
or
push
jmp
mov
adc
les
loope
imulb
adc
adc
pushf
in
xor
cmp
xchg
sub
jb
push
dec
push
jae
xchg
xchg
rorb
cmpsl
xchg
pop
cmp
mov
pop
dec
out
mov
cmpsl
and
and
or
push
add
push
adc
mov
mov
shrd
push
loope
add
out
lret
test
xchg
jl
into
imul
shlb
jmp
shr
cmp
js
fwait
mov
xor
enter
imul
nop
mov
inc
cmp
into
push
rcr
or
cmp
xor
cmc
testl
mov
jns
rclb
inc
and
xchg
adc
scas
mov
xor
int
das
leave
repnz
pop
scas
out
add
mov
inc
stos
sar
mov
dec
insl
mov
movsb
pop
ja
clc
fistl
mul
mov
rcll
mov
jbe
pop
pop
dec
lret
xor
repnz
xchg
repz
je
jb
sahf
inc
and
push
inc
mov
jecxz
xlat
xchg
ss
pop
rcl
sbb
cmp
sahf
jge
jb
in
xor
cmpsl
ja
xor
pop
lods
mov
push
dec
mov
mov
std
iret
sub
mov
pop
pop
xchg
xchg
push
popf
cltd
aas
lret
lahf
ds
sbb
sbb
pop
sti
cmp
mov
scas
lods
dec
cmc
in
test
jbe
mov
jge
xchg
inc
fildll
dec
and
dec
lock
ss
sub
cmp
sarl
jbe
in
or
rclb
mov
dec
inc
xor
lods
mov
repnz
stc
rcll
adc
push
xor
js
adc
movsb
out
enter
pop
in
mov
repz
add
popa
rolb
lds
mov
cmpsl
test
push
cmp
roll
push
mov
pop
pop
jle
dec
cmp
fst
repnz
sbb
xchg
sub
and
ret
fisttps
data16
pop
cmp
jmp
imul
or
fwait
cmp
cmp
sti
aam
stc
pusha
addr16
add
or
aam
xor
std
adc
sahf
rcr
or
mov
lahf
xor
test
cmp
mov
mov
fidivrs
into
mov
xchg
inc
imul
mov
andb
jecxz
addr16
jno
out
or
xlat
notb
fcoms
call
rcl
in
push
xchg
xchg
push
xchg
fisttps
mov
pop
mov
out
das
dec
pusha
test
mov
pusha
xchg
shld
neg
sbb
xchg
bsf
pushl
stc
not
mov
pop
mov
bts
sar
mov
call
add
inc
gs
je
gs
push
outsl
fs
add
je
jb
jo
add
add
rorb
in
jecxz
pusha
call
add
inc
fs
jae
push
imul
arpl
add
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
je
imul
je
js
bt
cmp
xor
pushf
ror
clc
xor
pusha
push
not
clc
stc
pushf
ror
mov
lea
jae
pusha
lea
call
push
pushf
pusha
movl
cmp
jmp
stc
cmp
call
add
inc
gs
arpl
gs
imul
push
std
out
call
pop
mov
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
das
std
call
add
mov
stc
xor
add
fs
je
imul
inc
and
iret
xor
cmp
jecxz
add
push
push
outsb
outsl
ja
mov
push
pushf
mov
mov
push
movb
inc
mov
setns
jmp
nop
pushf
mov
mov
pop
xchg
push
push
inc
xor
pop
repz
jne
inc
aaa
mov
mov
sub
xchg
add
mov
scas
test
pop
pop
dec
int3
mov
jmp
xor
insl
push
mov
pop
movl
cmp
mov
push
jle
push
add
mov
sub
xchg
lods
push
or
repnz
dec
jae
xor
mov
mov
or
test
lods
mov
pushf
in
mov
pop
jge
xchg
rep
mov
fdivr
mov
dec
lret
ss
dec
jle
lea
sub
sbb
adc
jbe
jbe
outsb
dec
bound
roll
mov
and
push
inc
fidivrl
ljmp
or
js
sar
cmp
rorl
imul
imul
cmp
ret
dec
int3
push
test
lret
jl
mov
xchg
xchg
inc
mov
das
mov
pop
mov
ja
mov
add
ss
pusha
push
or
mov
out
in
icebp
out
ffree
std
sti
xchg
lret
popa
call
push
stc
bt
cmp
push
call
jge
insl
shr
inc
pop
dec
sbb
pop
pop
js
lods
push
lahf
lea
pop
push
pop
mov
icebp
in
mov
xchg
in
aad
stc
fidivs
mov
push
adc
rcrb
jo
jb
stc
xor
jmp
out
frstpm(287
fnstcw
jne
fldenv
cs
push
mov
fdivr
xchg
nop
xchg
mov
mov
aad
js
icebp
fldenv
cs
push
xchg
xchg
loopne
das
pop
add
jne
popa
cmp
mov
std
cld
inc
mov
outsb
push
pop
call
push
insb
insb
pusha
jo
xchg
cmc
push
adc
in
out
jl
cwtl
fstpl
or
adc
sti
test
mov
les
fsubr
in
dec
pop
or
movaps
add
sbb
sub
rcll
aas
dec
das
test
insl
lret
aad
cmpsl
adc
cmp
jns
int3
xchg
dec
or
jecxz
dec
xchg
out
addb
push
mov
dec
dec
push
xchg
add
jmp
data16
mov
das
and
jae
test
jmp
test
nop
adc
lock
test
insb
push
push
push
jb
jle
inc
call
outsb
fs
gs
jne
arpl
add
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
or
test
sub
push
stc
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
pop
add
ror
cmc
ror
btc
mov
pusha
bt
xor
cmp
add
shr
bt
sub
sub
btc
seto
movzbl
push
cmp
pushl
shl
movw
pushf
add
clc
adc
bsf
push
mov
stc
jmp
not
jmp
pushf
call
push
pushf
movw
inc
lea
jg
cmp
push
test
sub
clc
jmp
pushf
call
bt
xor
cmc
mov
pushf
sub
cmc
add
call
pushf
popl
bts
push
jmp
call
pushf
pusha
pusha
mov
push
lea
jmp
call
mov
movl
mov
push
lea
jmp
lahf
aam
mov
test
not
mov
call
lea
jle
cwtl
jmp
cmc
sub
jmp
movb
mov
pushf
call
pushf
pusha
mov
pusha
call
lea
jns
bt
ror
jmp
pusha
mov
pushf
push
pushf
popl
push
jmp
btr
notl
pusha
bsf
shr
cmc
mov
cmp
cmc
clc
push
sub
stc
push
cmc
and
call
shr
pushf
mov
movb
mov
jmp
call
jmp
pusha
bt
cmp
jmp
dec
shld
mov
pushf
jmp
mov
test
mov
or
neg
mov
cmp
test
jmp
jmp
mov
jmp
bt
ror
cmc
cmp
sub
jmp
push
jmp
sar
xchg
bsf
movzbl
movzbw
push
test
rcr
add
bswap
inc
pushf
stc
movsbw
rol
shrd
neg
shrd
neg
bsf
inc
rcr
add
push
call
jmp
jmp
pusha
dec
pusha
mov
jmp
pushf
add
call
jmp
inc
movb
xor
xor
rol
test
stc
neg
sbb
rcl
sub
xor
movzbw
dec
movzbl
shrd
bt
jmp
not
mov
pushf
mov
cmp
pushf
sub
add
jae
bt
shl
jmp
mov
push
mov
pushf
lea
jmp
aad
pusha
xor
pop
pusha
or
pop
pusha
out
pop
pusha
push
loope
pusha
xor
pop
pusha
or
pop
pusha
sbb
fcompl
jo
pop
pusha
or
pop
pusha
jo
pop
pusha
push
loope
pusha
fnstcw
pusha
or
pop
pusha
sbb
pop
pusha
xchg
pop
pusha
mov
pop
pusha
or
pop
pusha
enter
mov
pop
pusha
into
pop
pusha
or
pop
pusha
out
pop
pusha
pop
loop
pusha
pop
rcrb
or
pop
pusha
push
pop
pusha
lcall
pusha
or
pop
pusha
xchg
pop
pusha
ljmp
pusha
or
pop
pusha
sub
pusha
pusha
xor
pop
pusha
sub
pop
pusha
or
pop
pusha
sub
pop
pusha
pop
rcrb
mov
pop
pusha
or
pop
pusha
pop
loop
pusha
push
loope
pusha
leave
lret
pop
pusha
or
pop
pusha
jo
pop
pusha
xor
pop
pusha
fnop
pop
pusha
or
pop
pusha
mul
pop
pusha
in
fcompl
mov
pusha
or
pop
pusha
sbb
pop
pusha
out
pop
pusha
pop
loopne
pusha
or
pop
pusha
mov
pop
pusha
mov
pusha
test
pop
pusha
lcall
pusha
xor
pop
pusha
cmp
pop
pusha
lds
enter
mov
pop
pusha
cmp
pop
pusha
fstps
sbb
pop
pusha
cmp
pop
pusha
sub
pusha
pusha
cmp
pop
pusha
push
pop
pusha
cmp
pop
pusha
in
fcompl
fnop
pop
pusha
enter
cmp
pop
pusha
pop
int3
pop
pusha
xor
pop
pusha
xchg
pop
pusha
cmp
pop
pusha
push
loope
pusha
aad
pusha
cmp
pop
pusha
cmp
pop
pusha
xchg
pop
pusha
sarl
pusha
into
pop
pusha
cmp
pop
pusha
pushf
fstpl
enter
mov
pusha
cmp
pop
pusha
out
pop
pusha
lcall
pusha
cmp
pop
pusha
ljmp
pusha
ljmp
pusha
mov
loop
pusha
aad
pusha
cmp
pop
pusha
mov
pop
pusha
push
loope
pusha
sub
pop
pusha
cmp
pop
pusha
mov
pop
pusha
in
fcompl
push
rcrb
cmp
pop
pusha
mov
pusha
xchg
pop
pusha
pop
loopne
pusha
cmp
pop
pusha
xchg
pop
pusha
sub
pop
pusha
mov
pop
pusha
or
pop
pusha
cli
fistpl
fnop
pop
pusha
pop
loop
pusha
mov
loopne
pusha
mov
pop
pusha
ljmp
pusha
push
loope
pusha
sarl
pusha
cmp
pop
pusha
xchg
pop
pusha
lds
leave
lret
pop
pusha
mov
fstps
sub
pop
pusha
sarl
pusha
pop
rcrb
cli
fistpl
pop
loopne
pusha
ljmp
pusha
sbb
pop
pusha
mov
pusha
pop
int3
pop
pusha
lcall
pusha
push
rcrb
pop
loopne
pusha
into
pop
pusha
sbb
pop
pusha
pop
jecxz
pusha
mov
pop
pusha
mov
pop
pusha
enter
cmp
pop
pusha
lcall
pusha
sub
pop
pusha
mov
pusha
into
pop
pusha
test
pop
pusha
sbb
jle
pusha
sarl
pusha
dec
pop
pusha
fnop
pop
pusha
pushf
fstpl
pop
int3
pop
pusha
mov
rcrb
fstps
pop
jecxz
pusha
out
pop
pusha
out
pop
pusha
fnstcw
pusha
sub
pusha
pusha
xor
pop
pusha
pop
int3
pop
pusha
sub
pop
pusha
enter
cmp
pop
pusha
xor
pop
pusha
sub
pusha
pusha
leave
lret
pop
pusha
mov
pop
pusha
sub
pop
pusha
pop
loopne
pusha
mov
pop
pusha
fstps
cld
jge
pusha
xor
pop
pusha
in
fcompl
mov
pop
pusha
les
pusha
mov
loope
pusha
into
pop
pusha
dec
pop
pusha
sub
pusha
pusha
test
pop
pusha
mul
pop
pusha
lds
lcall
pusha
sbb
pop
pusha
sbb
pop
pusha
lds
pop
rcrb
sub
pop
pusha
sub
pop
pusha
jo
pop
pusha
mov
pusha
mov
pop
pusha
sub
pop
pusha
cmp
pop
pusha
cmp
pop
pusha
pushf
fstpl
les
pusha
sarl
pusha
out
pop
pusha
cli
fistpl
enter
sub
pusha
pusha
pop
loop
pusha
pop
loopne
pusha
enter
dec
pop
pusha
pop
rcrb
sarl
pusha
out
pop
pusha
lcall
pusha
aad
pusha
xchg
pop
pusha
sbb
pop
pusha
sbb
aad
pusha
pop
int3
pop
pusha
leave
lret
pop
pusha
xchg
pop
pusha
aad
pusha
in
fcompl
les
pusha
sub
pusha
pusha
ljmp
and
call
mov
pop
push
not
mov
lea
xchg
pushf
mov
bswap
mov
xchg
push
call
dec
cmc
ror
pusha
neg
movb
jmp
pusha
mov
push
pusha
pushf
call
call
pushl
popl
pushf
pushl
lea
jmp
push
cmp
test
add
lea
jg
push
push
push
mov
pusha
movb
pushf
lea
jmp
pushf
popl
jmp
pushl
popl
mov
push
pushl
movb
lea
jmp
sub
clc
stc
bt
cwtl
bt
movw
mov
sub
pushf
jmp
sub
call
call
push
push
mov
mov
movw
pushf
pushf
mov
lea
jmp
jmp
test
cmc
mov
test
sub
call
inc
cmc
ror
stc
jmp
push
call
mov
jmp
sub
bt
pushf
sub
push
push
lea
jbe
mov
pushf
lea
jmp
inc
pusha
dec
movsbw
movsbw
sbb
xor
movzbw
inc
dec
shld
rol
bswap
bt
not
rcr
bswap
and
inc
mov
test
add
jmp
not
lea
jb
pusha
mov
mov
pusha
jmp
rol
and
cmp
mov
stc
call
pushf
dec
clc
jmp
movsbw
aad
xor
adc
mov
adc
bswap
bt
mov
bt
call
shl
mov
rcl
das
push
mov
pushf
rcr
mov
lea
shl
mov
mov
mov
das
xadd
pushl
popf
movw
movsbw
movw
mov
cwtl
mov
not
setae
mov
xchg
movzbw
movzbw
bswap
mov
lea
not
lea
mov
pushf
pushf
pushl
ret
xor
clc
sub
call
pushf
push
jmp
movw
pushf
pushf
mov
pushf
pusha
mov
push
pushf
lea
jmp
mov
call
adc
setbe
mov
setle
mov
cmp
cmp
bt
pusha
add
pushf
pushl
pushl
call
pusha
pushf
pushf
clc
ror
clc
cmc
pushf
add
cmp
jmp
test
mov
and
mov
pushf
sub
pushl
cmp
stc
push
shl
pusha
lea
jge
pusha
pusha
mov
call
rol
cmc
pushf
clc
bt
neg
pusha
pushf
push
inc
cmc
ror
movb
stc
stc
bt
sub
call
pushf
mov
mov
push
pushf
pusha
push
lea
jmp
cwtl
shr
mov
sbb
movsbw
shr
neg
mov
pushf
stc
add
jns
cmp
add
pusha
pushf
lea
jns
mov
pushf
mov
pusha
lea
jmp
push
call
dec
jmp
mov
mov
movw
pusha
lea
jmp
jmp
inc
jmp
clc
not
call
mov
pusha
call
cmp
bsr
shrd
shl
movzbl
shl
shl
cmp
add
xor
pusha
rcl
movzbw
rol
movsbw
not
pusha
movw
bsr
inc
call
mov
pushl
movb
pushl
mov
lea
jmp
push
pushf
lea
jne
call
push
pushf
pusha
mov
pushf
jmp
jmp
pushf
push
pushl
popl
movb
lea
jmp
mov
movw
push
push
pushf
lea
jmp
pushl
mov
movb
mov
movb
lea
jmp
add
stc
cmp
bt
pushf
shrd
pushf
pusha
mov
jmp
pushf
popl
pushl
jmp
push
pushf
pushf
pushl
popl
pusha
mov
pushf
lea
jmp
pushf
mov
pushf
call
cmc
neg
jmp
mov
sub
jmp
mov
pushf
pushf
push
lea
jmp
push
mov
jmp
pusha
cbtw
clc
push
cmp
mov
cwtl
bt
cmp
sub
pushf
push
jmp
rcl
not
lea
bts
movzbw
movzbw
sub
cmc
aas
neg
lea
dec
rol
sbb
shld
and
stc
jmp
pushf
popl
pushf
pushl
popl
pusha
pushf
lea
jmp
call
call
pushf
pushf
pushl
popl
pushf
pushf
mov
lea
jmp
add
pushf
mov
lea
jb
pushf
mov
push
pushl
mov
lea
jmp
mov
pushf
movl
mov
movb
movb
call
mov
push
pushf
pushf
lea
jmp
and
pusha
lea
je
cmc
clc
pusha
mov
or
xor
adc
mov
pusha
cmc
movb
shr
bt
xor
ror
shl
btc
bsf
xor
not
movzbw
movzbw
lea
mov
lea
pushf
lea
jge
push
inc
pushf
mov
pushf
push
decl
jmp
mov
pusha
lea
jmp
pusha
mov
mov
movb
movw
pusha
lea
jmp
pushl
popl
mov
mov
movb
movb
lea
jmp
pushf
mov
push
pushf
push
pushf
lea
jmp
lea
ja
push
pusha
push
mov
pusha
mov
pushl
pushf
pushl
pushf
lea
jmp
movw
pushl
pushl
popl
movb
push
push
push
lea
jmp
rol
mov
xor
mov
clc
bt
stc
add
call
sbb
mov
jmp
movzbw
xchg
mov
not
mov
mov
adc
rcr
mov
test
call
movb
jmp
push
jmp
pusha
pushf
mov
push
pushf
movb
lea
jmp
pushf
mov
jmp
add
call
jmp
pusha
mov
pushf
mov
pushf
mov
mov
pusha
pushl
movw
lea
jmp
cmc
stc
add
stc
call
call
neg
sub
bsf
mov
not
mov
cmp
test
pusha
not
clc
pushf
call
mov
mov
pushl
lea
jmp
call
cmp
bsr
mov
stc
add
push
pusha
pushf
push
lea
jmp
bsf
aad
push
shr
movzww
clc
pusha
sub
call
pusha
shl
pusha
pushl
movb
mov
push
pushf
popl
call
clc
sar
add
pushf
not
mov
pushf
mov
movb
pusha
lea
jmp
sub
pusha
jmp
stc
pusha
bt
neg
cmp
xor
pushf
cmc
sub
bt
add
pushf
push
pushf
mov
pushf
mov
movb
push
pushl
ret
pushf
mov
call
not
mov
sbb
mov
pusha
jmp
call
mov
push
movb
divl
call
bswap
call
pushf
mov
movb
call
jmp
test
jmp
movb
mov
pushl
popl
mov
pushf
pushf
lea
jmp
cmp
test
pushf
sub
stc
bt
jmp
mov
pushl
push
lea
jmp
push
mov
pusha
call
mov
pusha
pushl
pushl
lea
jmp
dec
mov
pusha
adc
sar
jmp
pusha
mov
pushf
push
movb
lea
jmp
cmc
bt
sub
test
push
call
movb
rol
bt
mov
stc
cmc
neg
cmp
clc
bt
add
cmp
movb
jmp
mov
mov
push
mov
push
pushf
pushf
movb
lea
jmp
and
movb
movb
call
call
push
ror
cmp
sub
movw
cbtw
pushf
call
call
call
push
pushf
popl
pusha
pusha
pushl
popl
push
push
movw
lea
jmp
pushl
popl
mov
lea
jmp
mov
pusha
pushf
pushf
lea
jmp
pushf
sub
jo
cwtl
clc
clc
clc
sub
call
jmp
push
mov
call
jmp
jmp
push
pusha
call
mov
mov
pushf
pushl
pushf
pushf
lea
jmp
mov
mov
movb
lea
jmp
decl
jmp
dec
bt
ror
rol
sub
test
rcl
dec
xor
movsbw
bt
mov
pushf
cmp
add
mov
pushf
jmp
push
mov
push
lea
jmp
jmp
stc
btr
push
setg
not
push
rol
lea
push
ror
stc
btc
mov
xchg
movzbl
bts
bswap
bswap
ror
rol
shr
cmp
and
pusha
neg
push
mov
stc
clc
ror
rcr
neg
bt
movzbw
lea
add
or
rcl
sub
xadd
bswap
shld
mov
movzbl
shld
shld
mov
shl
add
sub
xchg
jbe
mov
inc
xor
neg
bt
xor
seta
mov
add
mov
inc
not
lea
inc
shl
sar
sbb
movsbw
xor
sub
stc
sub
neg
btc
not
xor
adc
btr
shrd
setnp
movzbl
bsf
sub
mov
bt
bt
push
cmp
add
bt
sub
jmp
cmp
add
jmp
pushf
popl
movw
pushl
popl
pushf
pushf
push
lea
jmp
jmp
add
push
not
not
not
lea
call
bt
jmp
je
push
mov
mov
push
mov
pushf
mov
pusha
lea
jmp
stc
stc
sub
bt
jmp
pushf
jmp
mov
pushf
pushf
popl
pushf
mov
call
cmc
push
sub
movw
pusha
shr
call
call
jmp
movb
pushl
pusha
mov
pushf
lea
jmp
pushf
push
pushf
popl
call
call
mov
pushf
mov
push
pushf
lea
jmp
test
cmp
pushl
test
add
bt
popf
pushf
pushf
pushf
mov
lea
jmp
mov
call
and
add
rcr
stc
mov
bt
bt
sub
lea
jne
push
mov
pushl
mov
pushf
lea
jmp
push
call
pushf
inc
pushf
pushl
bt
jmp
call
lea
ja
mov
call
push
mov
call
sub
pusha
pushf
movb
dec
cmc
xor
clc
lea
mov
cmc
bt
rol
cmp
jmp
jmp
not
aas
mov
xor
mov
sbb
mov
bt
add
pushf
cmc
movw
shld
pusha
jmp
clc
neg
jmp
neg
inc
call
jmp
inc
pushf
pushf
pusha
pushf
lea
jmp
push
mov
bt
test
call
jmp
mov
cmp
add
pushl
pusha
jmp
cmc
add
call
lea
pushl
stc
rol
mov
push
jmp
jmp
not
pusha
pushf
call
xchg
bswap
rdtsc
mov
lea
lahf
call
ror
pushf
jmp
pushf
movsbw
mov
movb
pusha
push
mov
call
call
jmp
mov
pushf
pushf
jmp
push
push
mov
pushl
pushf
lea
jmp
pushf
mov
push
pushf
lea
jmp
pushl
pusha
sub
clc
mov
pushf
cmc
shl
lea
jns
mov
call
cmp
sub
pushf
jmp
pushf
mov
mov
mov
pushf
pushf
mov
lea
jmp
clc
ror
pushl
push
mov
pusha
dec
push
lea
cmp
push
pushf
push
neg
stc
test
cmc
not
jmp
stc
std
clc
jmp
mov
movl
push
lea
jmp
not
call
pushf
call
pushf
mov
push
push
mov
pushl
pushf
pushf
lea
jmp
call
pushf
call
pushl
popl
movb
mov
lea
jmp
bt
push
sub
mov
movb
jmp
movb
push
pushf
pushf
popl
jmp
rcl
call
call
push
pushf
push
mov
call
call
pushf
mov
push
jmp
movb
mov
call
stc
pushf
add
test
sub
mov
jmp
pushf
popl
call
mov
mov
movb
mov
pushl
mov
lea
jmp
mov
add
jno
clc
pusha
cmc
sub
clc
cmc
test
clc
add
jmp
pushf
mov
std
call
push
mov
movw
push
mov
mov
movl
pushf
lea
jmp
sub
pusha
mov
pushf
mov
pushf
lea
jmp
ja
push
mov
pushf
mov
call
cmc
add
clc
clc
sub
stc
pushf
pusha
neg
bt
stc
call
pushl
lea
jne
pushf
mov
jmp
pushl
popl
movw
pushf
lea
jmp
push
call
not
xchg
bswap
movsbw
push
mov
movsbl
lea
cld
call
bt
inc
bt
mov
and
btc
and
rcr
xor
btr
xor
bts
shld
jmp
push
movb
call
jmp
pushf
pushf
mov
pushf
mov
lea
jmp
add
jmp
shl
add
mov
test
mov
call
pushf
popl
pushl
jmp
sub
push
bswap
call
call
sub
push
jmp
call
movzbw
aaa
aam
lea
push
test
test
cmp
mov
lea
ja
inc
lea
shld
mov
call
dec
push
lea
cmc
stc
pushl
pusha
neg
cmp
jmp
clc
jmp
jmp
jmp
pushf
test
bt
shl
mov
bt
stc
stc
call
lea
lea
mov
cld
push
cld
push
pushf
rep
clc
stc
neg
mov
shrd
push
mov
lea
jbe
std
popf
pusha
lea
jmp
push
mov
mov
movw
call
mov
pushf
push
push
lea
jmp
push
call
jmp
jmp
dec
cmc
mov
movb
ror
pushf
sub
cmp
cmc
cmc
stc
xor
cmc
test
mov
push
sub
pushf
call
call
sub
movsbw
mov
push
pushf
popl
std
cld
call
jmp
call
jmp
inc
call
call
push
pushf
pushf
pusha
mov
movw
lea
jmp
xor
inc
bt
mov
mov
and
shld
mov
cmp
add
pushf
pushf
mov
pushf
lea
jmp
pushf
popl
mov
jmp
pusha
push
mov
movb
pushf
pushf
push
lea
jmp
pushf
popl
call
mov
mov
jmp
pusha
mov
push
mov
call
mov
pushf
push
lea
jmp
mov
pushf
jmp
ror
bt
neg
lea
jo
pushf
pusha
movb
inc
pusha
stc
rol
call
mov
pusha
pushf
mov
pushf
lea
jmp
pushl
popl
mov
pusha
lea
jmp
jmp
pushf
jmp
pusha
pusha
mov
push
mov
call
mov
call
jmp
pushf
pushl
mov
movb
movb
pushf
lea
jmp
mov
movb
call
pusha
jmp
mov
movb
lea
jmp
mov
jmp
mov
pusha
jmp
and
pusha
setb
mov
test
test
jmp
stc
test
add
mov
pushf
popl
pushf
pushl
popl
pusha
pushl
movb
lea
jmp
mov
jmp
mov
push
mov
movw
lea
jmp
push
pushl
popl
pushl
push
lea
jmp
mov
mov
movb
lea
jmp
bt
sub
mov
add
movb
call
cmp
jmp
ror
jmp
pushf
popl
pushf
jmp
cmc
aad
jmp
pushl
jmp
call
jmp
pushf
mov
push
lea
jmp
inc
lea
js
pusha
pushl
ror
cmp
pusha
push
pushf
add
cmc
stc
test
sub
pushl
movb
jmp
mov
pushf
pushl
ret
pushf
movb
inc
stc
call
call
xadd
aad
mov
ror
neg
bswap
ror
mov
push
bt
not
pushf
stc
stc
not
push
movl
and
movb
mov
mov
pushf
popl
pusha
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
pushl
mov
pusha
push
mov
pushf
jmp
pusha
pushf
call
rol
jmp
pusha
jmp
jmp
call
setl
mov
test
pushf
mov
add
call
jmp
aam
das
lahf
stc
mov
jmp
movl
movb
mov
mov
mov
lea
jmp
push
push
pushf
mov
pusha
pushf
movb
movb
lea
jmp
mov
pusha
jmp
dec
mov
shl
add
mov
pusha
push
cmc
add
push
pushf
mov
pushf
lea
jmp
mov
pushf
mov
pushf
pushf
lea
jmp
sub
add
bsr
btc
bswap
movsbw
mov
lea
je
bt
clc
pushf
add
pusha
mov
mov
jmp
not
add
mov
test
pushf
pushf
sub
call
call
rol
mov
clc
push
xor
pushf
call
jmp
sub
jmp
bsr
mov
bsf
dec
bt
movzbl
dec
sar
xor
push
dec
movsbw
adc
setae
not
rol
stc
jmp
mov
push
push
lea
jmp
mov
push
movb
mov
push
lea
jmp
sub
push
jmp
mov
cwtl
pusha
lahf
mov
jmp
setae
mov
test
jmp
call
pushf
popl
pushf
call
mov
push
pushf
mov
pushf
movb
push
mov
lea
jmp
pushf
inc
pusha
call
call
sub
call
pusha
test
jmp
pushl
popl
movb
mov
lea
jmp
stc
pushf
movl
rol
clc
test
cmp
not
jmp
jmp
call
call
pushf
sub
clc
test
shr
pushl
pusha
jmp
popf
pushf
pusha
lea
jmp
mov
call
pusha
inc
movw
pushf
lea
jmp
add
push
push
mov
push
mov
lea
jmp
cwtl
call
shl
mov
test
bt
sub
pusha
pushf
clc
add
pusha
pushf
movb
pushf
popl
jmp
pusha
mov
call
sub
inc
cmc
mov
pushl
add
pushf
jmp
mov
movb
mov
mov
mov
lea
jmp
push
mov
jmp
mov
push
movw
pushl
pushl
lea
jmp
pusha
pop
mov
pushf
pusha
mov
mov
jmp
or
das
sar
ror
mov
shr
inc
ror
mov
push
pusha
stc
jmp
call
jmp
